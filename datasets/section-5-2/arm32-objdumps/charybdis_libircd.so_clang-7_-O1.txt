
../repos/charybdis/ircd/.libs/libircd.so:     file format elf32-littlearm


Disassembly of section .init:

0000cf30 <_init>:
    cf30:	push	{r3, lr}
    cf34:	bl	e820 <call_weak_fn>
    cf38:	pop	{r3, pc}

Disassembly of section .plt:

0000cf3c <.plt>:
    cf3c:	push	{lr}		; (str lr, [sp, #-4]!)
    cf40:	ldr	lr, [pc, #4]	; cf4c <.plt+0x10>
    cf44:	add	lr, pc, lr
    cf48:	ldr	pc, [lr, #8]!
    cf4c:	.word	0x0004d0b4

0000cf50 <rb_inet_ntop_sock@plt>:
    cf50:	add	ip, pc, #0, 12
    cf54:	add	ip, ip, #315392	; 0x4d000
    cf58:	ldr	pc, [ip, #180]!	; 0xb4

0000cf5c <sendto_channel_local@plt>:
    cf5c:	add	ip, pc, #0, 12
    cf60:	add	ip, ip, #315392	; 0x4d000
    cf64:	ldr	pc, [ip, #172]!	; 0xac

0000cf68 <rb_setenv@plt>:
    cf68:	add	ip, pc, #0, 12
    cf6c:	add	ip, ip, #315392	; 0x4d000
    cf70:	ldr	pc, [ip, #164]!	; 0xa4

0000cf74 <rb_patricia_remove@plt>:
    cf74:	add	ip, pc, #0, 12
    cf78:	add	ip, ip, #315392	; 0x4d000
    cf7c:	ldr	pc, [ip, #156]!	; 0x9c

0000cf80 <yy_switch_to_buffer@plt>:
    cf80:	add	ip, pc, #0, 12
    cf84:	add	ip, ip, #315392	; 0x4d000
    cf88:	ldr	pc, [ip, #148]!	; 0x94

0000cf8c <authd_initiate_client@plt>:
    cf8c:	add	ip, pc, #0, 12
    cf90:	add	ip, ip, #315392	; 0x4d000
    cf94:	ldr	pc, [ip, #140]!	; 0x8c

0000cf98 <lt_dlclose@plt>:
    cf98:	add	ip, pc, #0, 12
    cf9c:	add	ip, ip, #315392	; 0x4d000
    cfa0:	ldr	pc, [ip, #132]!	; 0x84

0000cfa4 <calloc@plt>:
    cfa4:	add	ip, pc, #0, 12
    cfa8:	add	ip, ip, #315392	; 0x4d000
    cfac:	ldr	pc, [ip, #124]!	; 0x7c

0000cfb0 <fputs_unlocked@plt>:
    cfb0:	add	ip, pc, #0, 12
    cfb4:	add	ip, ip, #315392	; 0x4d000
    cfb8:	ldr	pc, [ip, #116]!	; 0x74

0000cfbc <make_conf@plt>:
    cfbc:	add	ip, pc, #0, 12
    cfc0:	add	ip, ip, #315392	; 0x4d000
    cfc4:	ldr	pc, [ip, #108]!	; 0x6c

0000cfc8 <strstr@plt>:
    cfc8:	add	ip, pc, #0, 12
    cfcc:	add	ip, ip, #315392	; 0x4d000
    cfd0:	ldr	pc, [ip, #100]!	; 0x64

0000cfd4 <mod_del_cmd@plt>:
    cfd4:	add	ip, pc, #0, 12
    cfd8:	add	ip, ip, #315392	; 0x4d000
    cfdc:	ldr	pc, [ip, #92]!	; 0x5c

0000cfe0 <rb_listen@plt>:
    cfe0:	add	ip, pc, #0, 12
    cfe4:	add	ip, ip, #315392	; 0x4d000
    cfe8:	ldr	pc, [ip, #84]!	; 0x54

0000cfec <parse_netmask_strict@plt>:
    cfec:	add	ip, pc, #0, 12
    cff0:	add	ip, ip, #315392	; 0x4d000
    cff4:	ldr	pc, [ip, #76]!	; 0x4c

0000cff8 <_sendto_channel_local@plt>:
    cff8:	add	ip, pc, #0, 12
    cffc:	add	ip, ip, #315392	; 0x4d000
    d000:	ldr	pc, [ip, #68]!	; 0x44

0000d004 <get_client_name@plt>:
    d004:	add	ip, pc, #0, 12
    d008:	add	ip, ip, #315392	; 0x4d000
    d00c:	ldr	pc, [ip, #60]!	; 0x3c

0000d010 <get_user_ban_reason@plt>:
    d010:	add	ip, pc, #0, 12
    d014:	add	ip, ip, #315392	; 0x4d000
    d018:	ldr	pc, [ip, #52]!	; 0x34

0000d01c <find_channel_status@plt>:
    d01c:	add	ip, pc, #0, 12
    d020:	add	ip, ip, #315392	; 0x4d000
    d024:	ldr	pc, [ip, #44]!	; 0x2c

0000d028 <yyrestart@plt>:
    d028:	add	ip, pc, #0, 12
    d02c:	add	ip, ip, #315392	; 0x4d000
    d030:	ldr	pc, [ip, #36]!	; 0x24

0000d034 <comp_with_mask_sock@plt>:
    d034:	add	ip, pc, #0, 12
    d038:	add	ip, ip, #315392	; 0x4d000
    d03c:	ldr	pc, [ip, #28]!

0000d040 <throttle_add@plt>:
    d040:	add	ip, pc, #0, 12
    d044:	add	ip, ip, #315392	; 0x4d000
    d048:	ldr	pc, [ip, #20]!

0000d04c <show_ip_conf@plt>:
    d04c:	add	ip, pc, #0, 12
    d050:	add	ip, ip, #315392	; 0x4d000
    d054:	ldr	pc, [ip, #12]!

0000d058 <init_bandb@plt>:
    d058:	add	ip, pc, #0, 12
    d05c:	add	ip, ip, #315392	; 0x4d000
    d060:	ldr	pc, [ip, #4]!

0000d064 <load_help@plt>:
    d064:	add	ip, pc, #0, 12
    d068:	add	ip, ip, #76, 20	; 0x4c000
    d06c:	ldr	pc, [ip, #4092]!	; 0xffc

0000d070 <scache_get_name@plt>:
    d070:	add	ip, pc, #0, 12
    d074:	add	ip, ip, #76, 20	; 0x4c000
    d078:	ldr	pc, [ip, #4084]!	; 0xff4

0000d07c <rb_current_time@plt>:
    d07c:	add	ip, pc, #0, 12
    d080:	add	ip, ip, #76, 20	; 0x4c000
    d084:	ldr	pc, [ip, #4076]!	; 0xfec

0000d088 <add_to_resv_hash@plt>:
    d088:	add	ip, pc, #0, 12
    d08c:	add	ip, ip, #76, 20	; 0x4c000
    d090:	ldr	pc, [ip, #4068]!	; 0xfe4

0000d094 <rb_linebuf_parse@plt>:
    d094:	add	ip, pc, #0, 12
    d098:	add	ip, ip, #76, 20	; 0x4c000
    d09c:	ldr	pc, [ip, #4060]!	; 0xfdc

0000d0a0 <comp_with_mask@plt>:
    d0a0:	add	ip, pc, #0, 12
    d0a4:	add	ip, ip, #76, 20	; 0x4c000
    d0a8:	ldr	pc, [ip, #4052]!	; 0xfd4

0000d0ac <introduce_client@plt>:
    d0ac:	add	ip, pc, #0, 12
    d0b0:	add	ip, ip, #76, 20	; 0x4c000
    d0b4:	ldr	pc, [ip, #4044]!	; 0xfcc

0000d0b8 <sendto_match_servs@plt>:
    d0b8:	add	ip, pc, #0, 12
    d0bc:	add	ip, ip, #76, 20	; 0x4c000
    d0c0:	ldr	pc, [ip, #4036]!	; 0xfc4

0000d0c4 <strcmp@plt>:
    d0c4:	add	ip, pc, #0, 12
    d0c8:	add	ip, ip, #76, 20	; 0x4c000
    d0cc:	ldr	pc, [ip, #4028]!	; 0xfbc

0000d0d0 <add_to_id_hash@plt>:
    d0d0:	add	ip, pc, #0, 12
    d0d4:	add	ip, ip, #76, 20	; 0x4c000
    d0d8:	ldr	pc, [ip, #4020]!	; 0xfb4

0000d0dc <send_capabilities@plt>:
    d0dc:	add	ip, pc, #0, 12
    d0e0:	add	ip, ip, #76, 20	; 0x4c000
    d0e4:	ldr	pc, [ip, #4012]!	; 0xfac

0000d0e8 <rb_event_add@plt>:
    d0e8:	add	ip, pc, #0, 12
    d0ec:	add	ip, ip, #76, 20	; 0x4c000
    d0f0:	ldr	pc, [ip, #4004]!	; 0xfa4

0000d0f4 <__cxa_finalize@plt>:
    d0f4:	add	ip, pc, #0, 12
    d0f8:	add	ip, ip, #76, 20	; 0x4c000
    d0fc:	ldr	pc, [ip, #3996]!	; 0xf9c

0000d100 <add_id@plt>:
    d100:	add	ip, pc, #0, 12
    d104:	add	ip, ip, #76, 20	; 0x4c000
    d108:	ldr	pc, [ip, #3988]!	; 0xf94

0000d10c <inotice@plt>:
    d10c:	add	ip, pc, #0, 12
    d110:	add	ip, ip, #76, 20	; 0x4c000
    d114:	ldr	pc, [ip, #3980]!	; 0xf8c

0000d118 <strtol@plt>:
    d118:	add	ip, pc, #0, 12
    d11c:	add	ip, ip, #76, 20	; 0x4c000
    d120:	ldr	pc, [ip, #3972]!	; 0xf84

0000d124 <init_builtin_capabs@plt>:
    d124:	add	ip, pc, #0, 12
    d128:	add	ip, ip, #76, 20	; 0x4c000
    d12c:	ldr	pc, [ip, #3964]!	; 0xf7c

0000d130 <restart@plt>:
    d130:	add	ip, pc, #0, 12
    d134:	add	ip, ip, #76, 20	; 0x4c000
    d138:	ldr	pc, [ip, #3956]!	; 0xf74

0000d13c <mod_notify_clicaps@plt>:
    d13c:	add	ip, pc, #0, 12
    d140:	add	ip, ip, #76, 20	; 0x4c000
    d144:	ldr	pc, [ip, #3948]!	; 0xf6c

0000d148 <rb_helper_write@plt>:
    d148:	add	ip, pc, #0, 12
    d14c:	add	ip, ip, #76, 20	; 0x4c000
    d150:	ldr	pc, [ip, #3940]!	; 0xf64

0000d154 <mask_match@plt>:
    d154:	add	ip, pc, #0, 12
    d158:	add	ip, ip, #76, 20	; 0x4c000
    d15c:	ldr	pc, [ip, #3932]!	; 0xf5c

0000d160 <findmodule_byname@plt>:
    d160:	add	ip, pc, #0, 12
    d164:	add	ip, ip, #76, 20	; 0x4c000
    d168:	ldr	pc, [ip, #3924]!	; 0xf54

0000d16c <match_esc@plt>:
    d16c:	add	ip, pc, #0, 12
    d170:	add	ip, ip, #76, 20	; 0x4c000
    d174:	ldr	pc, [ip, #3916]!	; 0xf4c

0000d178 <construct_snobuf@plt>:
    d178:	add	ip, pc, #0, 12
    d17c:	add	ip, ip, #76, 20	; 0x4c000
    d180:	ldr	pc, [ip, #3908]!	; 0xf44

0000d184 <deref_conf@plt>:
    d184:	add	ip, pc, #0, 12
    d188:	add	ip, ip, #76, 20	; 0x4c000
    d18c:	ldr	pc, [ip, #3900]!	; 0xf3c

0000d190 <make_oper_conf@plt>:
    d190:	add	ip, pc, #0, 12
    d194:	add	ip, ip, #76, 20	; 0x4c000
    d198:	ldr	pc, [ip, #3892]!	; 0xf34

0000d19c <rb_helper_close@plt>:
    d19c:	add	ip, pc, #0, 12
    d1a0:	add	ip, ip, #76, 20	; 0x4c000
    d1a4:	ldr	pc, [ip, #3884]!	; 0xf2c

0000d1a8 <allocate_channel@plt>:
    d1a8:	add	ip, pc, #0, 12
    d1ac:	add	ip, ip, #76, 20	; 0x4c000
    d1b0:	ldr	pc, [ip, #3876]!	; 0xf24

0000d1b4 <rb_inet_ntop@plt>:
    d1b4:	add	ip, pc, #0, 12
    d1b8:	add	ip, ip, #76, 20	; 0x4c000
    d1bc:	ldr	pc, [ip, #3868]!	; 0xf1c

0000d1c0 <printf@plt>:
    d1c0:	add	ip, pc, #0, 12
    d1c4:	add	ip, ip, #76, 20	; 0x4c000
    d1c8:	ldr	pc, [ip, #3860]!	; 0xf14

0000d1cc <find_chasing@plt>:
    d1cc:	add	ip, pc, #0, 12
    d1d0:	add	ip, ip, #76, 20	; 0x4c000
    d1d4:	ldr	pc, [ip, #3852]!	; 0xf0c

0000d1d8 <start_ssld_connect@plt>:
    d1d8:	add	ip, pc, #0, 12
    d1dc:	add	ip, ip, #76, 20	; 0x4c000
    d1e0:	ldr	pc, [ip, #3844]!	; 0xf04

0000d1e4 <sendto_one@plt>:
    d1e4:	add	ip, pc, #0, 12
    d1e8:	add	ip, ip, #76, 20	; 0x4c000
    d1ec:	ldr	pc, [ip, #3836]!	; 0xefc

0000d1f0 <fopen@plt>:
    d1f0:	add	ip, pc, #0, 12
    d1f4:	add	ip, ip, #76, 20	; 0x4c000
    d1f8:	ldr	pc, [ip, #3828]!	; 0xef4

0000d1fc <init_modules@plt>:
    d1fc:	add	ip, pc, #0, 12
    d200:	add	ip, ip, #76, 20	; 0x4c000
    d204:	ldr	pc, [ip, #3820]!	; 0xeec

0000d208 <ssld_decrement_clicount@plt>:
    d208:	add	ip, pc, #0, 12
    d20c:	add	ip, ip, #76, 20	; 0x4c000
    d210:	ldr	pc, [ip, #3812]!	; 0xee4

0000d214 <read@plt>:
    d214:	add	ip, pc, #0, 12
    d218:	add	ip, ip, #76, 20	; 0x4c000
    d21c:	ldr	pc, [ip, #3804]!	; 0xedc

0000d220 <rb_event_addish@plt>:
    d220:	add	ip, pc, #0, 12
    d224:	add	ip, ip, #76, 20	; 0x4c000
    d228:	ldr	pc, [ip, #3796]!	; 0xed4

0000d22c <lt_dlopenext@plt>:
    d22c:	add	ip, pc, #0, 12
    d230:	add	ip, ip, #76, 20	; 0x4c000
    d234:	ldr	pc, [ip, #3788]!	; 0xecc

0000d238 <rb_setup_ssl_server@plt>:
    d238:	add	ip, pc, #0, 12
    d23c:	add	ip, ip, #76, 20	; 0x4c000
    d240:	ldr	pc, [ip, #3780]!	; 0xec4

0000d244 <init_main_logfile@plt>:
    d244:	add	ip, pc, #0, 12
    d248:	add	ip, ip, #76, 20	; 0x4c000
    d24c:	ldr	pc, [ip, #3772]!	; 0xebc

0000d250 <make_and_lookup_ip@plt>:
    d250:	add	ip, pc, #0, 12
    d254:	add	ip, ip, #76, 20	; 0x4c000
    d258:	ldr	pc, [ip, #3764]!	; 0xeb4

0000d25c <fflush@plt>:
    d25c:	add	ip, pc, #0, 12
    d260:	add	ip, ip, #76, 20	; 0x4c000
    d264:	ldr	pc, [ip, #3756]!	; 0xeac

0000d268 <close_listeners@plt>:
    d268:	add	ip, pc, #0, 12
    d26c:	add	ip, ip, #76, 20	; 0x4c000
    d270:	ldr	pc, [ip, #3748]!	; 0xea4

0000d274 <rb_dirname@plt>:
    d274:	add	ip, pc, #0, 12
    d278:	add	ip, ip, #76, 20	; 0x4c000
    d27c:	ldr	pc, [ip, #3740]!	; 0xe9c

0000d280 <detach_conf@plt>:
    d280:	add	ip, pc, #0, 12
    d284:	add	ip, ip, #76, 20	; 0x4c000
    d288:	ldr	pc, [ip, #3732]!	; 0xe94

0000d28c <rb_event_delete@plt>:
    d28c:	add	ip, pc, #0, 12
    d290:	add	ip, ip, #76, 20	; 0x4c000
    d294:	ldr	pc, [ip, #3724]!	; 0xe8c

0000d298 <client_release_connids@plt>:
    d298:	add	ip, pc, #0, 12
    d29c:	add	ip, ip, #76, 20	; 0x4c000
    d2a0:	ldr	pc, [ip, #3716]!	; 0xe84

0000d2a4 <lt_dlerror@plt>:
    d2a4:	add	ip, pc, #0, 12
    d2a8:	add	ip, ip, #76, 20	; 0x4c000
    d2ac:	ldr	pc, [ip, #3708]!	; 0xe7c

0000d2b0 <sigprocmask@plt>:
    d2b0:	add	ip, pc, #0, 12
    d2b4:	add	ip, ip, #76, 20	; 0x4c000
    d2b8:	ldr	pc, [ip, #3700]!	; 0xe74

0000d2bc <rb_connect_tcp@plt>:
    d2bc:	add	ip, pc, #0, 12
    d2c0:	add	ip, ip, #76, 20	; 0x4c000
    d2c4:	ldr	pc, [ip, #3692]!	; 0xe6c

0000d2c8 <user_welcome@plt>:
    d2c8:	add	ip, pc, #0, 12
    d2cc:	add	ip, ip, #76, 20	; 0x4c000
    d2d0:	ldr	pc, [ip, #3684]!	; 0xe64

0000d2d4 <rb_linebuf_attach@plt>:
    d2d4:	add	ip, pc, #0, 12
    d2d8:	add	ip, ip, #76, 20	; 0x4c000
    d2dc:	ldr	pc, [ip, #3676]!	; 0xe5c

0000d2e0 <init_ssld@plt>:
    d2e0:	add	ip, pc, #0, 12
    d2e4:	add	ip, ip, #76, 20	; 0x4c000
    d2e8:	ldr	pc, [ip, #3668]!	; 0xe54

0000d2ec <sendto_channel_local_with_capability@plt>:
    d2ec:	add	ip, pc, #0, 12
    d2f0:	add	ip, ip, #76, 20	; 0x4c000
    d2f4:	ldr	pc, [ip, #3660]!	; 0xe4c

0000d2f8 <find_conf_by_address@plt>:
    d2f8:	add	ip, pc, #0, 12
    d2fc:	add	ip, ip, #76, 20	; 0x4c000
    d300:	ldr	pc, [ip, #3652]!	; 0xe44

0000d304 <rb_setselect@plt>:
    d304:	add	ip, pc, #0, 12
    d308:	add	ip, ip, #76, 20	; 0x4c000
    d30c:	ldr	pc, [ip, #3644]!	; 0xe3c

0000d310 <matches_mask@plt>:
    d310:	add	ip, pc, #0, 12
    d314:	add	ip, ip, #76, 20	; 0x4c000
    d318:	ldr	pc, [ip, #3636]!	; 0xe34

0000d31c <capability_put_anonymous@plt>:
    d31c:	add	ip, pc, #0, 12
    d320:	add	ip, ip, #76, 20	; 0x4c000
    d324:	ldr	pc, [ip, #3628]!	; 0xe2c

0000d328 <free@plt>:
    d328:	add	ip, pc, #0, 12
    d32c:	add	ip, ip, #76, 20	; 0x4c000
    d330:	ldr	pc, [ip, #3620]!	; 0xe24

0000d334 <rb_connect_sockaddr@plt>:
    d334:	add	ip, pc, #0, 12
    d338:	add	ip, ip, #76, 20	; 0x4c000
    d33c:	ldr	pc, [ip, #3612]!	; 0xe1c

0000d340 <rb_strcasecmp@plt>:
    d340:	add	ip, pc, #0, 12
    d344:	add	ip, ip, #76, 20	; 0x4c000
    d348:	ldr	pc, [ip, #3604]!	; 0xe14

0000d34c <free_cachefile@plt>:
    d34c:	add	ip, pc, #0, 12
    d350:	add	ip, ip, #76, 20	; 0x4c000
    d354:	ldr	pc, [ip, #3596]!	; 0xe0c

0000d358 <check_channel_name@plt>:
    d358:	add	ip, pc, #0, 12
    d35c:	add	ip, ip, #76, 20	; 0x4c000
    d360:	ldr	pc, [ip, #3588]!	; 0xe04

0000d364 <dead_link@plt>:
    d364:	add	ip, pc, #0, 12
    d368:	add	ip, ip, #76, 20	; 0x4c000
    d36c:	ldr	pc, [ip, #3580]!	; 0xdfc

0000d370 <fgets@plt>:
    d370:	add	ip, pc, #0, 12
    d374:	add	ip, ip, #76, 20	; 0x4c000
    d378:	ldr	pc, [ip, #3572]!	; 0xdf4

0000d37c <find_named_client@plt>:
    d37c:	add	ip, pc, #0, 12
    d380:	add	ip, ip, #76, 20	; 0x4c000
    d384:	ldr	pc, [ip, #3564]!	; 0xdec

0000d388 <privilegeset_delete_all_illegal@plt>:
    d388:	add	ip, pc, #0, 12
    d38c:	add	ip, ip, #76, 20	; 0x4c000
    d390:	ldr	pc, [ip, #3556]!	; 0xde4

0000d394 <privilegeset_get@plt>:
    d394:	add	ip, pc, #0, 12
    d398:	add	ip, ip, #76, 20	; 0x4c000
    d39c:	ldr	pc, [ip, #3548]!	; 0xddc

0000d3a0 <find_address_conf@plt>:
    d3a0:	add	ip, pc, #0, 12
    d3a4:	add	ip, ip, #76, 20	; 0x4c000
    d3a8:	ldr	pc, [ip, #3540]!	; 0xdd4

0000d3ac <iwarn@plt>:
    d3ac:	add	ip, pc, #0, 12
    d3b0:	add	ip, ip, #76, 20	; 0x4c000
    d3b4:	ldr	pc, [ip, #3532]!	; 0xdcc

0000d3b8 <initclass@plt>:
    d3b8:	add	ip, pc, #0, 12
    d3bc:	add	ip, ip, #76, 20	; 0x4c000
    d3c0:	ldr	pc, [ip, #3524]!	; 0xdc4

0000d3c4 <rb_match_ip@plt>:
    d3c4:	add	ip, pc, #0, 12
    d3c8:	add	ip, ip, #76, 20	; 0x4c000
    d3cc:	ldr	pc, [ip, #3516]!	; 0xdbc

0000d3d0 <conf_yy_fatal_error@plt>:
    d3d0:	add	ip, pc, #0, 12
    d3d4:	add	ip, ip, #76, 20	; 0x4c000
    d3d8:	ldr	pc, [ip, #3508]!	; 0xdb4

0000d3dc <make_remote_conf@plt>:
    d3dc:	add	ip, pc, #0, 12
    d3e0:	add	ip, ip, #76, 20	; 0x4c000
    d3e4:	ldr	pc, [ip, #3500]!	; 0xdac

0000d3e8 <get_con_freq@plt>:
    d3e8:	add	ip, pc, #0, 12
    d3ec:	add	ip, ip, #76, 20	; 0x4c000
    d3f0:	ldr	pc, [ip, #3492]!	; 0xda4

0000d3f4 <add_conf_item@plt>:
    d3f4:	add	ip, pc, #0, 12
    d3f8:	add	ip, ip, #76, 20	; 0x4c000
    d3fc:	ldr	pc, [ip, #3484]!	; 0xd9c

0000d400 <conf_report_error@plt>:
    d400:	add	ip, pc, #0, 12
    d404:	add	ip, ip, #76, 20	; 0x4c000
    d408:	ldr	pc, [ip, #3476]!	; 0xd94

0000d40c <memcpy@plt>:
    d40c:	add	ip, pc, #0, 12
    d410:	add	ip, ip, #76, 20	; 0x4c000
    d414:	ldr	pc, [ip, #3468]!	; 0xd8c

0000d418 <rb_new_patricia@plt>:
    d418:	add	ip, pc, #0, 12
    d41c:	add	ip, ip, #76, 20	; 0x4c000
    d420:	ldr	pc, [ip, #3460]!	; 0xd84

0000d424 <find_client@plt>:
    d424:	add	ip, pc, #0, 12
    d428:	add	ip, ip, #76, 20	; 0x4c000
    d42c:	ldr	pc, [ip, #3452]!	; 0xd7c

0000d430 <sendto_channel_flags@plt>:
    d430:	add	ip, pc, #0, 12
    d434:	add	ip, ip, #76, 20	; 0x4c000
    d438:	ldr	pc, [ip, #3444]!	; 0xd74

0000d43c <del_from_hostname_hash@plt>:
    d43c:	add	ip, pc, #0, 12
    d440:	add	ip, ip, #76, 20	; 0x4c000
    d444:	ldr	pc, [ip, #3436]!	; 0xd6c

0000d448 <rb_outofmemory@plt>:
    d448:	add	ip, pc, #0, 12
    d44c:	add	ip, ip, #76, 20	; 0x4c000
    d450:	ldr	pc, [ip, #3428]!	; 0xd64

0000d454 <wsockd_decrement_clicount@plt>:
    d454:	add	ip, pc, #0, 12
    d458:	add	ip, ip, #76, 20	; 0x4c000
    d45c:	ldr	pc, [ip, #3420]!	; 0xd5c

0000d460 <remove_user_from_channels@plt>:
    d460:	add	ip, pc, #0, 12
    d464:	add	ip, ip, #76, 20	; 0x4c000
    d468:	ldr	pc, [ip, #3412]!	; 0xd54

0000d46c <del_invite@plt>:
    d46c:	add	ip, pc, #0, 12
    d470:	add	ip, ip, #76, 20	; 0x4c000
    d474:	ldr	pc, [ip, #3404]!	; 0xd4c

0000d478 <rb_kill@plt>:
    d478:	add	ip, pc, #0, 12
    d47c:	add	ip, ip, #76, 20	; 0x4c000
    d480:	ldr	pc, [ip, #3396]!	; 0xd44

0000d484 <yyerror@plt>:
    d484:	add	ip, pc, #0, 12
    d488:	add	ip, ip, #76, 20	; 0x4c000
    d48c:	ldr	pc, [ip, #3388]!	; 0xd3c

0000d490 <idebug@plt>:
    d490:	add	ip, pc, #0, 12
    d494:	add	ip, ip, #76, 20	; 0x4c000
    d498:	ldr	pc, [ip, #3380]!	; 0xd34

0000d49c <time@plt>:
    d49c:	add	ip, pc, #0, 12
    d4a0:	add	ip, ip, #76, 20	; 0x4c000
    d4a4:	ldr	pc, [ip, #3372]!	; 0xd2c

0000d4a8 <make_client@plt>:
    d4a8:	add	ip, pc, #0, 12
    d4ac:	add	ip, ip, #76, 20	; 0x4c000
    d4b0:	ldr	pc, [ip, #3364]!	; 0xd24

0000d4b4 <yyparse@plt>:
    d4b4:	add	ip, pc, #0, 12
    d4b8:	add	ip, ip, #76, 20	; 0x4c000
    d4bc:	ldr	pc, [ip, #3356]!	; 0xd1c

0000d4c0 <init_operhash@plt>:
    d4c0:	add	ip, pc, #0, 12
    d4c4:	add	ip, ip, #76, 20	; 0x4c000
    d4c8:	ldr	pc, [ip, #3348]!	; 0xd14

0000d4cc <capability_index_create@plt>:
    d4cc:	add	ip, pc, #0, 12
    d4d0:	add	ip, ip, #76, 20	; 0x4c000
    d4d4:	ldr	pc, [ip, #3340]!	; 0xd0c

0000d4d8 <rehash@plt>:
    d4d8:	add	ip, pc, #0, 12
    d4dc:	add	ip, ip, #76, 20	; 0x4c000
    d4e0:	ldr	pc, [ip, #3332]!	; 0xd04

0000d4e4 <dns_results_callback@plt>:
    d4e4:	add	ip, pc, #0, 12
    d4e8:	add	ip, ip, #76, 20	; 0x4c000
    d4ec:	ldr	pc, [ip, #3324]!	; 0xcfc

0000d4f0 <check_client@plt>:
    d4f0:	add	ip, pc, #0, 12
    d4f4:	add	ip, ip, #76, 20	; 0x4c000
    d4f8:	ldr	pc, [ip, #3316]!	; 0xcf4

0000d4fc <free_monitor@plt>:
    d4fc:	add	ip, pc, #0, 12
    d500:	add	ip, ip, #76, 20	; 0x4c000
    d504:	ldr	pc, [ip, #3308]!	; 0xcec

0000d508 <init_channels@plt>:
    d508:	add	ip, pc, #0, 12
    d50c:	add	ip, ip, #76, 20	; 0x4c000
    d510:	ldr	pc, [ip, #3300]!	; 0xce4

0000d514 <rb_socketpair@plt>:
    d514:	add	ip, pc, #0, 12
    d518:	add	ip, ip, #76, 20	; 0x4c000
    d51c:	ldr	pc, [ip, #3292]!	; 0xcdc

0000d520 <unload_one_module@plt>:
    d520:	add	ip, pc, #0, 12
    d524:	add	ip, ip, #76, 20	; 0x4c000
    d528:	ldr	pc, [ip, #3284]!	; 0xcd4

0000d52c <delete_opm_proxy_scanner_all@plt>:
    d52c:	add	ip, pc, #0, 12
    d530:	add	ip, ip, #76, 20	; 0x4c000
    d534:	ldr	pc, [ip, #3276]!	; 0xccc

0000d538 <rb_strncasecmp@plt>:
    d538:	add	ip, pc, #0, 12
    d53c:	add	ip, ip, #76, 20	; 0x4c000
    d540:	ldr	pc, [ip, #3268]!	; 0xcc4

0000d544 <send_pop_queue@plt>:
    d544:	add	ip, pc, #0, 12
    d548:	add	ip, ip, #76, 20	; 0x4c000
    d54c:	ldr	pc, [ip, #3260]!	; 0xcbc

0000d550 <get_listener_name@plt>:
    d550:	add	ip, pc, #0, 12
    d554:	add	ip, ip, #76, 20	; 0x4c000
    d558:	ldr	pc, [ip, #3252]!	; 0xcb4

0000d55c <memcmp@plt>:
    d55c:	add	ip, pc, #0, 12
    d560:	add	ip, ip, #76, 20	; 0x4c000
    d564:	ldr	pc, [ip, #3244]!	; 0xcac

0000d568 <parse_netmask@plt>:
    d568:	add	ip, pc, #0, 12
    d56c:	add	ip, ip, #76, 20	; 0x4c000
    d570:	ldr	pc, [ip, #3236]!	; 0xca4

0000d574 <create_opm_proxy_scanner@plt>:
    d574:	add	ip, pc, #0, 12
    d578:	add	ip, ip, #76, 20	; 0x4c000
    d57c:	ldr	pc, [ip, #3228]!	; 0xc9c

0000d580 <rb_radixtree_foreach_next@plt>:
    d580:	add	ip, pc, #0, 12
    d584:	add	ip, ip, #76, 20	; 0x4c000
    d588:	ldr	pc, [ip, #3220]!	; 0xc94

0000d58c <get_client_ping@plt>:
    d58c:	add	ip, pc, #0, 12
    d590:	add	ip, ip, #76, 20	; 0x4c000
    d594:	ldr	pc, [ip, #3212]!	; 0xc8c

0000d598 <match_cidr@plt>:
    d598:	add	ip, pc, #0, 12
    d59c:	add	ip, ip, #76, 20	; 0x4c000
    d5a0:	ldr	pc, [ip, #3204]!	; 0xc84

0000d5a4 <ssld_update_config@plt>:
    d5a4:	add	ip, pc, #0, 12
    d5a8:	add	ip, ip, #76, 20	; 0x4c000
    d5ac:	ldr	pc, [ip, #3196]!	; 0xc7c

0000d5b0 <del_dnsbl_entry_all@plt>:
    d5b0:	add	ip, pc, #0, 12
    d5b4:	add	ip, ip, #76, 20	; 0x4c000
    d5b8:	ldr	pc, [ip, #3188]!	; 0xc74

0000d5bc <rb_ctime@plt>:
    d5bc:	add	ip, pc, #0, 12
    d5c0:	add	ip, ip, #76, 20	; 0x4c000
    d5c4:	ldr	pc, [ip, #3180]!	; 0xc6c

0000d5c8 <operhash_delete@plt>:
    d5c8:	add	ip, pc, #0, 12
    d5cc:	add	ip, ip, #76, 20	; 0x4c000
    d5d0:	ldr	pc, [ip, #3172]!	; 0xc64

0000d5d4 <rb_dictionary_find@plt>:
    d5d4:	add	ip, pc, #0, 12
    d5d8:	add	ip, ip, #76, 20	; 0x4c000
    d5dc:	ldr	pc, [ip, #3164]!	; 0xc5c

0000d5e0 <rb_socket@plt>:
    d5e0:	add	ip, pc, #0, 12
    d5e4:	add	ip, ip, #76, 20	; 0x4c000
    d5e8:	ldr	pc, [ip, #3156]!	; 0xc54

0000d5ec <make_server@plt>:
    d5ec:	add	ip, pc, #0, 12
    d5f0:	add	ip, ip, #76, 20	; 0x4c000
    d5f4:	ldr	pc, [ip, #3148]!	; 0xc4c

0000d5f8 <get_client_class@plt>:
    d5f8:	add	ip, pc, #0, 12
    d5fc:	add	ip, ip, #76, 20	; 0x4c000
    d600:	ldr	pc, [ip, #3140]!	; 0xc44

0000d604 <ilog_error@plt>:
    d604:	add	ip, pc, #0, 12
    d608:	add	ip, ip, #76, 20	; 0x4c000
    d60c:	ldr	pc, [ip, #3132]!	; 0xc3c

0000d610 <rb_current_time_tv@plt>:
    d610:	add	ip, pc, #0, 12
    d614:	add	ip, ip, #76, 20	; 0x4c000
    d618:	ldr	pc, [ip, #3124]!	; 0xc34

0000d61c <add_tgchange@plt>:
    d61c:	add	ip, pc, #0, 12
    d620:	add	ip, ip, #76, 20	; 0x4c000
    d624:	ldr	pc, [ip, #3116]!	; 0xc2c

0000d628 <user_mode@plt>:
    d628:	add	ip, pc, #0, 12
    d62c:	add	ip, ip, #76, 20	; 0x4c000
    d630:	ldr	pc, [ip, #3108]!	; 0xc24

0000d634 <send_user_motd@plt>:
    d634:	add	ip, pc, #0, 12
    d638:	add	ip, ip, #76, 20	; 0x4c000
    d63c:	ldr	pc, [ip, #3100]!	; 0xc1c

0000d640 <sendto_realops_snomask@plt>:
    d640:	add	ip, pc, #0, 12
    d644:	add	ip, ip, #76, 20	; 0x4c000
    d648:	ldr	pc, [ip, #3092]!	; 0xc14

0000d64c <ierror@plt>:
    d64c:	add	ip, pc, #0, 12
    d650:	add	ip, ip, #76, 20	; 0x4c000
    d654:	ldr	pc, [ip, #3084]!	; 0xc0c

0000d658 <conf_create_opm_proxy_scanner@plt>:
    d658:	add	ip, pc, #0, 12
    d65c:	add	ip, ip, #76, 20	; 0x4c000
    d660:	ldr	pc, [ip, #3076]!	; 0xc04

0000d664 <rb_snprintf_append@plt>:
    d664:	add	ip, pc, #0, 12
    d668:	add	ip, ip, #76, 20	; 0x4c000
    d66c:	ldr	pc, [ip, #3068]!	; 0xbfc

0000d670 <init_hash@plt>:
    d670:	add	ip, pc, #0, 12
    d674:	add	ip, ip, #76, 20	; 0x4c000
    d678:	ldr	pc, [ip, #3060]!	; 0xbf4

0000d67c <yyrealloc@plt>:
    d67c:	add	ip, pc, #0, 12
    d680:	add	ip, ip, #76, 20	; 0x4c000
    d684:	ldr	pc, [ip, #3052]!	; 0xbec

0000d688 <RSA_free@plt>:
    d688:	add	ip, pc, #0, 12
    d68c:	add	ip, ip, #76, 20	; 0x4c000
    d690:	ldr	pc, [ip, #3044]!	; 0xbe4

0000d694 <msgbuf_vunparse_fmt@plt>:
    d694:	add	ip, pc, #0, 12
    d698:	add	ip, ip, #76, 20	; 0x4c000
    d69c:	ldr	pc, [ip, #3036]!	; 0xbdc

0000d6a0 <unlink@plt>:
    d6a0:	add	ip, pc, #0, 12
    d6a4:	add	ip, ip, #76, 20	; 0x4c000
    d6a8:	ldr	pc, [ip, #3028]!	; 0xbd4

0000d6ac <find_class@plt>:
    d6ac:	add	ip, pc, #0, 12
    d6b0:	add	ip, ip, #76, 20	; 0x4c000
    d6b4:	ldr	pc, [ip, #3020]!	; 0xbcc

0000d6b8 <dup2@plt>:
    d6b8:	add	ip, pc, #0, 12
    d6bc:	add	ip, ip, #76, 20	; 0x4c000
    d6c0:	ldr	pc, [ip, #3012]!	; 0xbc4

0000d6c4 <msgbuf_cache_initf@plt>:
    d6c4:	add	ip, pc, #0, 12
    d6c8:	add	ip, ip, #76, 20	; 0x4c000
    d6cc:	ldr	pc, [ip, #3004]!	; 0xbbc

0000d6d0 <realloc@plt>:
    d6d0:	add	ip, pc, #0, 12
    d6d4:	add	ip, ip, #76, 20	; 0x4c000
    d6d8:	ldr	pc, [ip, #2996]!	; 0xbb4

0000d6dc <yy_create_buffer@plt>:
    d6dc:	add	ip, pc, #0, 12
    d6e0:	add	ip, ip, #76, 20	; 0x4c000
    d6e4:	ldr	pc, [ip, #2988]!	; 0xbac

0000d6e8 <deactivate_conf@plt>:
    d6e8:	add	ip, pc, #0, 12
    d6ec:	add	ip, ip, #76, 20	; 0x4c000
    d6f0:	ldr	pc, [ip, #2980]!	; 0xba4

0000d6f4 <getrlimit@plt>:
    d6f4:	add	ip, pc, #0, 12
    d6f8:	add	ip, ip, #76, 20	; 0x4c000
    d6fc:	ldr	pc, [ip, #2972]!	; 0xb9c

0000d700 <delete_opm_listener_all@plt>:
    d700:	add	ip, pc, #0, 12
    d704:	add	ip, ip, #76, 20	; 0x4c000
    d708:	ldr	pc, [ip, #2964]!	; 0xb94

0000d70c <rb_dictionary_add@plt>:
    d70c:	add	ip, pc, #0, 12
    d710:	add	ip, ip, #76, 20	; 0x4c000
    d714:	ldr	pc, [ip, #2956]!	; 0xb8c

0000d718 <conf_call_set@plt>:
    d718:	add	ip, pc, #0, 12
    d71c:	add	ip, ip, #76, 20	; 0x4c000
    d720:	ldr	pc, [ip, #2948]!	; 0xb84

0000d724 <check_authd@plt>:
    d724:	add	ip, pc, #0, 12
    d728:	add	ip, ip, #76, 20	; 0x4c000
    d72c:	ldr	pc, [ip, #2940]!	; 0xb7c

0000d730 <get_oper_name@plt>:
    d730:	add	ip, pc, #0, 12
    d734:	add	ip, ip, #76, 20	; 0x4c000
    d738:	ldr	pc, [ip, #2932]!	; 0xb74

0000d73c <sendto_channel_local_priv@plt>:
    d73c:	add	ip, pc, #0, 12
    d740:	add	ip, ip, #76, 20	; 0x4c000
    d744:	ldr	pc, [ip, #2924]!	; 0xb6c

0000d748 <find_channel@plt>:
    d748:	add	ip, pc, #0, 12
    d74c:	add	ip, ip, #76, 20	; 0x4c000
    d750:	ldr	pc, [ip, #2916]!	; 0xb64

0000d754 <start_wsockd_accept@plt>:
    d754:	add	ip, pc, #0, 12
    d758:	add	ip, ip, #76, 20	; 0x4c000
    d75c:	ldr	pc, [ip, #2908]!	; 0xb5c

0000d760 <substitution_append_var@plt>:
    d760:	add	ip, pc, #0, 12
    d764:	add	ip, ip, #76, 20	; 0x4c000
    d768:	ldr	pc, [ip, #2900]!	; 0xb54

0000d76c <read_packet@plt>:
    d76c:	add	ip, pc, #0, 12
    d770:	add	ip, ip, #76, 20	; 0x4c000
    d774:	ldr	pc, [ip, #2892]!	; 0xb4c

0000d778 <privilegeset_set_new@plt>:
    d778:	add	ip, pc, #0, 12
    d77c:	add	ip, ip, #76, 20	; 0x4c000
    d780:	ldr	pc, [ip, #2884]!	; 0xb44

0000d784 <send_cap_mode_changes@plt>:
    d784:	add	ip, pc, #0, 12
    d788:	add	ip, ip, #76, 20	; 0x4c000
    d78c:	ldr	pc, [ip, #2876]!	; 0xb3c

0000d790 <chdir@plt>:
    d790:	add	ip, pc, #0, 12
    d794:	add	ip, ip, #76, 20	; 0x4c000
    d798:	ldr	pc, [ip, #2868]!	; 0xb34

0000d79c <ccomment@plt>:
    d79c:	add	ip, pc, #0, 12
    d7a0:	add	ip, ip, #76, 20	; 0x4c000
    d7a4:	ldr	pc, [ip, #2860]!	; 0xb2c

0000d7a8 <clear_resv_hash@plt>:
    d7a8:	add	ip, pc, #0, 12
    d7ac:	add	ip, ip, #76, 20	; 0x4c000
    d7b0:	ldr	pc, [ip, #2852]!	; 0xb24

0000d7b4 <rb_linebuf_newbuf@plt>:
    d7b4:	add	ip, pc, #0, 12
    d7b8:	add	ip, ip, #76, 20	; 0x4c000
    d7bc:	ldr	pc, [ip, #2844]!	; 0xb1c

0000d7c0 <rb_free_rb_dlink_node@plt>:
    d7c0:	add	ip, pc, #0, 12
    d7c4:	add	ip, ip, #76, 20	; 0x4c000
    d7c8:	ldr	pc, [ip, #2836]!	; 0xb14

0000d7cc <configure_authd@plt>:
    d7cc:	add	ip, pc, #0, 12
    d7d0:	add	ip, ip, #76, 20	; 0x4c000
    d7d4:	ldr	pc, [ip, #2828]!	; 0xb0c

0000d7d8 <geteuid@plt>:
    d7d8:	add	ip, pc, #0, 12
    d7dc:	add	ip, ip, #76, 20	; 0x4c000
    d7e0:	ldr	pc, [ip, #2820]!	; 0xb04

0000d7e4 <rb_sctp_bindx@plt>:
    d7e4:	add	ip, pc, #0, 12
    d7e8:	add	ip, ip, #76, 20	; 0x4c000
    d7ec:	ldr	pc, [ip, #2812]!	; 0xafc

0000d7f0 <invalidate_bancache_user@plt>:
    d7f0:	add	ip, pc, #0, 12
    d7f4:	add	ip, ip, #76, 20	; 0x4c000
    d7f8:	ldr	pc, [ip, #2804]!	; 0xaf4

0000d7fc <perror@plt>:
    d7fc:	add	ip, pc, #0, 12
    d800:	add	ip, ip, #76, 20	; 0x4c000
    d804:	ldr	pc, [ip, #2796]!	; 0xaec

0000d808 <__xstat@plt>:
    d808:	add	ip, pc, #0, 12
    d80c:	add	ip, ip, #76, 20	; 0x4c000
    d810:	ldr	pc, [ip, #2788]!	; 0xae4

0000d814 <rb_recv_fd_buf@plt>:
    d814:	add	ip, pc, #0, 12
    d818:	add	ip, ip, #76, 20	; 0x4c000
    d81c:	ldr	pc, [ip, #2780]!	; 0xadc

0000d820 <rb_inet_pton@plt>:
    d820:	add	ip, pc, #0, 12
    d824:	add	ip, ip, #76, 20	; 0x4c000
    d828:	ldr	pc, [ip, #2772]!	; 0xad4

0000d82c <load_core_modules@plt>:
    d82c:	add	ip, pc, #0, 12
    d830:	add	ip, ip, #76, 20	; 0x4c000
    d834:	ldr	pc, [ip, #2764]!	; 0xacc

0000d838 <rb_dictionary_delete@plt>:
    d838:	add	ip, pc, #0, 12
    d83c:	add	ip, ip, #76, 20	; 0x4c000
    d840:	ldr	pc, [ip, #2756]!	; 0xac4

0000d844 <free_listener@plt>:
    d844:	add	ip, pc, #0, 12
    d848:	add	ip, ip, #76, 20	; 0x4c000
    d84c:	ldr	pc, [ip, #2748]!	; 0xabc

0000d850 <send_umode@plt>:
    d850:	add	ip, pc, #0, 12
    d854:	add	ip, ip, #76, 20	; 0x4c000
    d858:	ldr	pc, [ip, #2740]!	; 0xab4

0000d85c <rb_radixtree_create@plt>:
    d85c:	add	ip, pc, #0, 12
    d860:	add	ip, ip, #76, 20	; 0x4c000
    d864:	ldr	pc, [ip, #2732]!	; 0xaac

0000d868 <add_nd_entry@plt>:
    d868:	add	ip, pc, #0, 12
    d86c:	add	ip, ip, #76, 20	; 0x4c000
    d870:	ldr	pc, [ip, #2724]!	; 0xaa4

0000d874 <parseargs@plt>:
    d874:	add	ip, pc, #0, 12
    d878:	add	ip, ip, #76, 20	; 0x4c000
    d87c:	ldr	pc, [ip, #2716]!	; 0xa9c

0000d880 <allocate_ban@plt>:
    d880:	add	ip, pc, #0, 12
    d884:	add	ip, ip, #76, 20	; 0x4c000
    d888:	ldr	pc, [ip, #2708]!	; 0xa94

0000d88c <rb_ipv4_from_ipv6@plt>:
    d88c:	add	ip, pc, #0, 12
    d890:	add	ip, ip, #76, 20	; 0x4c000
    d894:	ldr	pc, [ip, #2700]!	; 0xa8c

0000d898 <sigaction@plt>:
    d898:	add	ip, pc, #0, 12
    d89c:	add	ip, ip, #76, 20	; 0x4c000
    d8a0:	ldr	pc, [ip, #2692]!	; 0xa84

0000d8a4 <bandb_rehash_bans@plt>:
    d8a4:	add	ip, pc, #0, 12
    d8a8:	add	ip, ip, #76, 20	; 0x4c000
    d8ac:	ldr	pc, [ip, #2684]!	; 0xa7c

0000d8b0 <fwrite@plt>:
    d8b0:	add	ip, pc, #0, 12
    d8b4:	add	ip, ip, #76, 20	; 0x4c000
    d8b8:	ldr	pc, [ip, #2676]!	; 0xa74

0000d8bc <strcat@plt>:
    d8bc:	add	ip, pc, #0, 12
    d8c0:	add	ip, ip, #76, 20	; 0x4c000
    d8c4:	ldr	pc, [ip, #2668]!	; 0xa6c

0000d8c8 <operhash_add@plt>:
    d8c8:	add	ip, pc, #0, 12
    d8cc:	add	ip, ip, #76, 20	; 0x4c000
    d8d0:	ldr	pc, [ip, #2660]!	; 0xa64

0000d8d4 <show_lusers@plt>:
    d8d4:	add	ip, pc, #0, 12
    d8d8:	add	ip, ip, #76, 20	; 0x4c000
    d8dc:	ldr	pc, [ip, #2652]!	; 0xa5c

0000d8e0 <read_conf_files@plt>:
    d8e0:	add	ip, pc, #0, 12
    d8e4:	add	ip, ip, #76, 20	; 0x4c000
    d8e8:	ldr	pc, [ip, #2644]!	; 0xa54

0000d8ec <waitpid@plt>:
    d8ec:	add	ip, pc, #0, 12
    d8f0:	add	ip, ip, #76, 20	; 0x4c000
    d8f4:	ldr	pc, [ip, #2636]!	; 0xa4c

0000d8f8 <yyalloc@plt>:
    d8f8:	add	ip, pc, #0, 12
    d8fc:	add	ip, ip, #76, 20	; 0x4c000
    d900:	ldr	pc, [ip, #2628]!	; 0xa44

0000d904 <capability_index_mask@plt>:
    d904:	add	ip, pc, #0, 12
    d908:	add	ip, ip, #76, 20	; 0x4c000
    d90c:	ldr	pc, [ip, #2620]!	; 0xa3c

0000d910 <add_dnsbl_entry@plt>:
    d910:	add	ip, pc, #0, 12
    d914:	add	ip, ip, #76, 20	; 0x4c000
    d918:	ldr	pc, [ip, #2612]!	; 0xa34

0000d91c <init_s_newconf@plt>:
    d91c:	add	ip, pc, #0, 12
    d920:	add	ip, ip, #76, 20	; 0x4c000
    d924:	ldr	pc, [ip, #2604]!	; 0xa2c

0000d928 <strcpy@plt>:
    d928:	add	ip, pc, #0, 12
    d92c:	add	ip, ip, #76, 20	; 0x4c000
    d930:	ldr	pc, [ip, #2596]!	; 0xa24

0000d934 <yyfree@plt>:
    d934:	add	ip, pc, #0, 12
    d938:	add	ip, ip, #76, 20	; 0x4c000
    d93c:	ldr	pc, [ip, #2588]!	; 0xa1c

0000d940 <conf_fgets@plt>:
    d940:	add	ip, pc, #0, 12
    d944:	add	ip, ip, #76, 20	; 0x4c000
    d948:	ldr	pc, [ip, #2580]!	; 0xa14

0000d94c <load_all_modules@plt>:
    d94c:	add	ip, pc, #0, 12
    d950:	add	ip, ip, #76, 20	; 0x4c000
    d954:	ldr	pc, [ip, #2572]!	; 0xa0c

0000d958 <find_channel_membership@plt>:
    d958:	add	ip, pc, #0, 12
    d95c:	add	ip, ip, #76, 20	; 0x4c000
    d960:	ldr	pc, [ip, #2564]!	; 0xa04

0000d964 <restart_authd@plt>:
    d964:	add	ip, pc, #0, 12
    d968:	add	ip, ip, #76, 20	; 0x4c000
    d96c:	ldr	pc, [ip, #2556]!	; 0x9fc

0000d970 <yy_scan_buffer@plt>:
    d970:	add	ip, pc, #0, 12
    d974:	add	ip, ip, #76, 20	; 0x4c000
    d978:	ldr	pc, [ip, #2548]!	; 0x9f4

0000d97c <rb_dictionary_foreach_start@plt>:
    d97c:	add	ip, pc, #0, 12
    d980:	add	ip, ip, #76, 20	; 0x4c000
    d984:	ldr	pc, [ip, #2540]!	; 0x9ec

0000d988 <rb_crypt@plt>:
    d988:	add	ip, pc, #0, 12
    d98c:	add	ip, ip, #76, 20	; 0x4c000
    d990:	ldr	pc, [ip, #2532]!	; 0x9e4

0000d994 <find_conf_item@plt>:
    d994:	add	ip, pc, #0, 12
    d998:	add	ip, ip, #76, 20	; 0x4c000
    d99c:	ldr	pc, [ip, #2524]!	; 0x9dc

0000d9a0 <sendto_server@plt>:
    d9a0:	add	ip, pc, #0, 12
    d9a4:	add	ip, ip, #76, 20	; 0x4c000
    d9a8:	ldr	pc, [ip, #2516]!	; 0x9d4

0000d9ac <close_connection@plt>:
    d9ac:	add	ip, pc, #0, 12
    d9b0:	add	ip, ip, #76, 20	; 0x4c000
    d9b4:	ldr	pc, [ip, #2508]!	; 0x9cc

0000d9b8 <init_host_hash@plt>:
    d9b8:	add	ip, pc, #0, 12
    d9bc:	add	ip, ip, #76, 20	; 0x4c000
    d9c0:	ldr	pc, [ip, #2500]!	; 0x9c4

0000d9c4 <find_nick_resv@plt>:
    d9c4:	add	ip, pc, #0, 12
    d9c8:	add	ip, ip, #76, 20	; 0x4c000
    d9cc:	ldr	pc, [ip, #2492]!	; 0x9bc

0000d9d0 <free_oper_conf@plt>:
    d9d0:	add	ip, pc, #0, 12
    d9d4:	add	ip, ip, #76, 20	; 0x4c000
    d9d8:	ldr	pc, [ip, #2484]!	; 0x9b4

0000d9dc <rb_helper_read@plt>:
    d9dc:	add	ip, pc, #0, 12
    d9e0:	add	ip, ip, #76, 20	; 0x4c000
    d9e4:	ldr	pc, [ip, #2476]!	; 0x9ac

0000d9e8 <make_server_conf@plt>:
    d9e8:	add	ip, pc, #0, 12
    d9ec:	add	ip, ip, #76, 20	; 0x4c000
    d9f0:	ldr	pc, [ip, #2468]!	; 0x9a4

0000d9f4 <opendir@plt>:
    d9f4:	add	ip, pc, #0, 12
    d9f8:	add	ip, ip, #76, 20	; 0x4c000
    d9fc:	ldr	pc, [ip, #2460]!	; 0x99c

0000da00 <sendto_monitor@plt>:
    da00:	add	ip, pc, #0, 12
    da04:	add	ip, ip, #76, 20	; 0x4c000
    da08:	ldr	pc, [ip, #2452]!	; 0x994

0000da0c <rb_set_time@plt>:
    da0c:	add	ip, pc, #0, 12
    da10:	add	ip, ip, #76, 20	; 0x4c000
    da14:	ldr	pc, [ip, #2444]!	; 0x98c

0000da18 <clear_hash_parse@plt>:
    da18:	add	ip, pc, #0, 12
    da1c:	add	ip, ip, #76, 20	; 0x4c000
    da20:	ldr	pc, [ip, #2436]!	; 0x984

0000da24 <setrlimit@plt>:
    da24:	add	ip, pc, #0, 12
    da28:	add	ip, ip, #76, 20	; 0x4c000
    da2c:	ldr	pc, [ip, #2428]!	; 0x97c

0000da30 <channel_modes@plt>:
    da30:	add	ip, pc, #0, 12
    da34:	add	ip, ip, #76, 20	; 0x4c000
    da38:	ldr	pc, [ip, #2420]!	; 0x974

0000da3c <rb_basename@plt>:
    da3c:	add	ip, pc, #0, 12
    da40:	add	ip, ip, #76, 20	; 0x4c000
    da44:	ldr	pc, [ip, #2412]!	; 0x96c

0000da48 <add_to_client_hash@plt>:
    da48:	add	ip, pc, #0, 12
    da4c:	add	ip, ip, #76, 20	; 0x4c000
    da50:	ldr	pc, [ip, #2404]!	; 0x964

0000da54 <show_isupport@plt>:
    da54:	add	ip, pc, #0, 12
    da58:	add	ip, ip, #76, 20	; 0x4c000
    da5c:	ldr	pc, [ip, #2396]!	; 0x95c

0000da60 <rb_string_to_array@plt>:
    da60:	add	ip, pc, #0, 12
    da64:	add	ip, ip, #76, 20	; 0x4c000
    da68:	ldr	pc, [ip, #2388]!	; 0x954

0000da6c <mod_remember_clicaps@plt>:
    da6c:	add	ip, pc, #0, 12
    da70:	add	ip, ip, #76, 20	; 0x4c000
    da74:	ldr	pc, [ip, #2380]!	; 0x94c

0000da78 <puts@plt>:
    da78:	add	ip, pc, #0, 12
    da7c:	add	ip, ip, #76, 20	; 0x4c000
    da80:	ldr	pc, [ip, #2372]!	; 0x944

0000da84 <fnv_hash_upper@plt>:
    da84:	add	ip, pc, #0, 12
    da88:	add	ip, ip, #76, 20	; 0x4c000
    da8c:	ldr	pc, [ip, #2364]!	; 0x93c

0000da90 <malloc@plt>:
    da90:	add	ip, pc, #0, 12
    da94:	add	ip, ip, #76, 20	; 0x4c000
    da98:	ldr	pc, [ip, #2356]!	; 0x934

0000da9c <del_from_id_hash@plt>:
    da9c:	add	ip, pc, #0, 12
    daa0:	add	ip, ip, #76, 20	; 0x4c000
    daa4:	ldr	pc, [ip, #2348]!	; 0x92c

0000daa8 <start_ssld_accept@plt>:
    daa8:	add	ip, pc, #0, 12
    daac:	add	ip, ip, #76, 20	; 0x4c000
    dab0:	ldr	pc, [ip, #2340]!	; 0x924

0000dab4 <sigaddset@plt>:
    dab4:	add	ip, pc, #0, 12
    dab8:	add	ip, ip, #76, 20	; 0x4c000
    dabc:	ldr	pc, [ip, #2332]!	; 0x91c

0000dac0 <rb_ignore_errno@plt>:
    dac0:	add	ip, pc, #0, 12
    dac4:	add	ip, ip, #76, 20	; 0x4c000
    dac8:	ldr	pc, [ip, #2324]!	; 0x914

0000dacc <strerror@plt>:
    dacc:	add	ip, pc, #0, 12
    dad0:	add	ip, ip, #76, 20	; 0x4c000
    dad4:	ldr	pc, [ip, #2316]!	; 0x90c

0000dad8 <add_conf_by_address@plt>:
    dad8:	add	ip, pc, #0, 12
    dadc:	add	ip, ip, #76, 20	; 0x4c000
    dae0:	ldr	pc, [ip, #2308]!	; 0x904

0000dae4 <find_top_conf@plt>:
    dae4:	add	ip, pc, #0, 12
    dae8:	add	ip, ip, #76, 20	; 0x4c000
    daec:	ldr	pc, [ip, #2300]!	; 0x8fc

0000daf0 <rb_get_random@plt>:
    daf0:	add	ip, pc, #0, 12
    daf4:	add	ip, ip, #76, 20	; 0x4c000
    daf8:	ldr	pc, [ip, #2292]!	; 0x8f4

0000dafc <privilegeset_ref@plt>:
    dafc:	add	ip, pc, #0, 12
    db00:	add	ip, ip, #76, 20	; 0x4c000
    db04:	ldr	pc, [ip, #2284]!	; 0x8ec

0000db08 <cache_file@plt>:
    db08:	add	ip, pc, #0, 12
    db0c:	add	ip, ip, #76, 20	; 0x4c000
    db10:	ldr	pc, [ip, #2276]!	; 0x8e4

0000db14 <show_iline_prefix@plt>:
    db14:	add	ip, pc, #0, 12
    db18:	add	ip, ip, #76, 20	; 0x4c000
    db1c:	ldr	pc, [ip, #2268]!	; 0x8dc

0000db20 <del_from_client_hash@plt>:
    db20:	add	ip, pc, #0, 12
    db24:	add	ip, ip, #76, 20	; 0x4c000
    db28:	ldr	pc, [ip, #2260]!	; 0x8d4

0000db2c <rb_match_exact_string@plt>:
    db2c:	add	ip, pc, #0, 12
    db30:	add	ip, ip, #76, 20	; 0x4c000
    db34:	ldr	pc, [ip, #2252]!	; 0x8cc

0000db38 <rb_read@plt>:
    db38:	add	ip, pc, #0, 12
    db3c:	add	ip, ip, #76, 20	; 0x4c000
    db40:	ldr	pc, [ip, #2244]!	; 0x8c4

0000db44 <localtime@plt>:
    db44:	add	ip, pc, #0, 12
    db48:	add	ip, ip, #76, 20	; 0x4c000
    db4c:	ldr	pc, [ip, #2236]!	; 0x8bc

0000db50 <init_authd@plt>:
    db50:	add	ip, pc, #0, 12
    db54:	add	ip, ip, #76, 20	; 0x4c000
    db58:	ldr	pc, [ip, #2228]!	; 0x8b4

0000db5c <rb_close@plt>:
    db5c:	add	ip, pc, #0, 12
    db60:	add	ip, ip, #76, 20	; 0x4c000
    db64:	ldr	pc, [ip, #2220]!	; 0x8ac

0000db68 <scache_split@plt>:
    db68:	add	ip, pc, #0, 12
    db6c:	add	ip, ip, #76, 20	; 0x4c000
    db70:	ldr	pc, [ip, #2212]!	; 0x8a4

0000db74 <authd_reject_client@plt>:
    db74:	add	ip, pc, #0, 12
    db78:	add	ip, ip, #76, 20	; 0x4c000
    db7c:	ldr	pc, [ip, #2204]!	; 0x89c

0000db80 <start_zlib_session@plt>:
    db80:	add	ip, pc, #0, 12
    db84:	add	ip, ip, #76, 20	; 0x4c000
    db88:	ldr	pc, [ip, #2196]!	; 0x894

0000db8c <free_away@plt>:
    db8c:	add	ip, pc, #0, 12
    db90:	add	ip, ip, #76, 20	; 0x4c000
    db94:	ldr	pc, [ip, #2188]!	; 0x88c

0000db98 <rb_get_fd@plt>:
    db98:	add	ip, pc, #0, 12
    db9c:	add	ip, ip, #76, 20	; 0x4c000
    dba0:	ldr	pc, [ip, #2180]!	; 0x884

0000dba4 <init_hook@plt>:
    dba4:	add	ip, pc, #0, 12
    dba8:	add	ip, ip, #76, 20	; 0x4c000
    dbac:	ldr	pc, [ip, #2172]!	; 0x87c

0000dbb0 <find_monitor@plt>:
    dbb0:	add	ip, pc, #0, 12
    dbb4:	add	ip, ip, #76, 20	; 0x4c000
    dbb8:	ldr	pc, [ip, #2164]!	; 0x874

0000dbbc <register_hook@plt>:
    dbbc:	add	ip, pc, #0, 12
    dbc0:	add	ip, ip, #76, 20	; 0x4c000
    dbc4:	ldr	pc, [ip, #2156]!	; 0x86c

0000dbc8 <__ctype_toupper_loc@plt>:
    dbc8:	add	ip, pc, #0, 12
    dbcc:	add	ip, ip, #76, 20	; 0x4c000
    dbd0:	ldr	pc, [ip, #2148]!	; 0x864

0000dbd4 <__gmon_start__@plt>:
    dbd4:	add	ip, pc, #0, 12
    dbd8:	add	ip, ip, #76, 20	; 0x4c000
    dbdc:	ldr	pc, [ip, #2140]!	; 0x85c

0000dbe0 <privilegeset_extend@plt>:
    dbe0:	add	ip, pc, #0, 12
    dbe4:	add	ip, ip, #76, 20	; 0x4c000
    dbe8:	ldr	pc, [ip, #2132]!	; 0x854

0000dbec <connid_get@plt>:
    dbec:	add	ip, pc, #0, 12
    dbf0:	add	ip, ip, #76, 20	; 0x4c000
    dbf4:	ldr	pc, [ip, #2124]!	; 0x84c

0000dbf8 <open@plt>:
    dbf8:	add	ip, pc, #0, 12
    dbfc:	add	ip, ip, #76, 20	; 0x4c000
    dc00:	ldr	pc, [ip, #2116]!	; 0x844

0000dc04 <mod_clear_paths@plt>:
    dc04:	add	ip, pc, #0, 12
    dc08:	add	ip, ip, #76, 20	; 0x4c000
    dc0c:	ldr	pc, [ip, #2108]!	; 0x83c

0000dc10 <rb_accept_tcp@plt>:
    dc10:	add	ip, pc, #0, 12
    dc14:	add	ip, ip, #76, 20	; 0x4c000
    dc18:	ldr	pc, [ip, #2100]!	; 0x834

0000dc1c <__ctype_b_loc@plt>:
    dc1c:	add	ip, pc, #0, 12
    dc20:	add	ip, ip, #76, 20	; 0x4c000
    dc24:	ldr	pc, [ip, #2092]!	; 0x82c

0000dc28 <getpid@plt>:
    dc28:	add	ip, pc, #0, 12
    dc2c:	add	ip, ip, #76, 20	; 0x4c000
    dc30:	ldr	pc, [ip, #2084]!	; 0x824

0000dc34 <exit@plt>:
    dc34:	add	ip, pc, #0, 12
    dc38:	add	ip, ip, #76, 20	; 0x4c000
    dc3c:	ldr	pc, [ip, #2076]!	; 0x81c

0000dc40 <free_conf@plt>:
    dc40:	add	ip, pc, #0, 12
    dc44:	add	ip, ip, #76, 20	; 0x4c000
    dc48:	ldr	pc, [ip, #2068]!	; 0x814

0000dc4c <get_channel_access@plt>:
    dc4c:	add	ip, pc, #0, 12
    dc50:	add	ip, ip, #76, 20	; 0x4c000
    dc54:	ldr	pc, [ip, #2060]!	; 0x80c

0000dc58 <send_oper_motd@plt>:
    dc58:	add	ip, pc, #0, 12
    dc5c:	add	ip, ip, #76, 20	; 0x4c000
    dc60:	ldr	pc, [ip, #2052]!	; 0x804

0000dc64 <rb_make_rb_dlink_node@plt>:
    dc64:	add	ip, pc, #0, 12
    dc68:	add	ip, ip, #76, 20	; 0x4c000
    dc6c:	ldr	pc, [ip, #2044]!	; 0x7fc

0000dc70 <notify_banned_client@plt>:
    dc70:	add	ip, pc, #0, 12
    dc74:	add	ip, ip, #76, 20	; 0x4c000
    dc78:	ldr	pc, [ip, #2036]!	; 0x7f4

0000dc7c <get_sendq@plt>:
    dc7c:	add	ip, pc, #0, 12
    dc80:	add	ip, ip, #76, 20	; 0x4c000
    dc84:	ldr	pc, [ip, #2028]!	; 0x7ec

0000dc88 <sendto_one_numeric@plt>:
    dc88:	add	ip, pc, #0, 12
    dc8c:	add	ip, ip, #76, 20	; 0x4c000
    dc90:	ldr	pc, [ip, #2020]!	; 0x7e4

0000dc94 <strlen@plt>:
    dc94:	add	ip, pc, #0, 12
    dc98:	add	ip, ip, #76, 20	; 0x4c000
    dc9c:	ldr	pc, [ip, #2012]!	; 0x7dc

0000dca0 <setup_signals@plt>:
    dca0:	add	ip, pc, #0, 12
    dca4:	add	ip, ip, #76, 20	; 0x4c000
    dca8:	ldr	pc, [ip, #2004]!	; 0x7d4

0000dcac <setsid@plt>:
    dcac:	add	ip, pc, #0, 12
    dcb0:	add	ip, ip, #76, 20	; 0x4c000
    dcb4:	ldr	pc, [ip, #1996]!	; 0x7cc

0000dcb8 <cache_user_motd@plt>:
    dcb8:	add	ip, pc, #0, 12
    dcbc:	add	ip, ip, #76, 20	; 0x4c000
    dcc0:	ldr	pc, [ip, #1988]!	; 0x7c4

0000dcc4 <del_all_accepts@plt>:
    dcc4:	add	ip, pc, #0, 12
    dcc8:	add	ip, ip, #76, 20	; 0x4c000
    dccc:	ldr	pc, [ip, #1980]!	; 0x7bc

0000dcd0 <lt_dlinit@plt>:
    dcd0:	add	ip, pc, #0, 12
    dcd4:	add	ip, ip, #76, 20	; 0x4c000
    dcd8:	ldr	pc, [ip, #1972]!	; 0x7b4

0000dcdc <valid_extban@plt>:
    dcdc:	add	ip, pc, #0, 12
    dce0:	add	ip, ip, #76, 20	; 0x4c000
    dce4:	ldr	pc, [ip, #1964]!	; 0x7ac

0000dce8 <strchr@plt>:
    dce8:	add	ip, pc, #0, 12
    dcec:	add	ip, ip, #76, 20	; 0x4c000
    dcf0:	ldr	pc, [ip, #1956]!	; 0x7a4

0000dcf4 <free_server_conf@plt>:
    dcf4:	add	ip, pc, #0, 12
    dcf8:	add	ip, ip, #76, 20	; 0x4c000
    dcfc:	ldr	pc, [ip, #1948]!	; 0x79c

0000dd00 <dns_stats_results_callback@plt>:
    dd00:	add	ip, pc, #0, 12
    dd04:	add	ip, ip, #76, 20	; 0x4c000
    dd08:	ldr	pc, [ip, #1940]!	; 0x794

0000dd0c <srand@plt>:
    dd0c:	add	ip, pc, #0, 12
    dd10:	add	ip, ip, #76, 20	; 0x4c000
    dd14:	ldr	pc, [ip, #1932]!	; 0x78c

0000dd18 <PEM_read_bio_RSA_PUBKEY@plt>:
    dd18:	add	ip, pc, #0, 12
    dd1c:	add	ip, ip, #76, 20	; 0x4c000
    dd20:	ldr	pc, [ip, #1924]!	; 0x784

0000dd24 <newconf_init@plt>:
    dd24:	add	ip, pc, #0, 12
    dd28:	add	ip, ip, #76, 20	; 0x4c000
    dd2c:	ldr	pc, [ip, #1916]!	; 0x77c

0000dd30 <clear_monitor@plt>:
    dd30:	add	ip, pc, #0, 12
    dd34:	add	ip, ip, #76, 20	; 0x4c000
    dd38:	ldr	pc, [ip, #1908]!	; 0x774

0000dd3c <clear_s_newconf_bans@plt>:
    dd3c:	add	ip, pc, #0, 12
    dd40:	add	ip, ip, #76, 20	; 0x4c000
    dd44:	ldr	pc, [ip, #1900]!	; 0x76c

0000dd48 <whowas_init@plt>:
    dd48:	add	ip, pc, #0, 12
    dd4c:	add	ip, ip, #76, 20	; 0x4c000
    dd50:	ldr	pc, [ip, #1892]!	; 0x764

0000dd54 <conf_add_class_to_conf@plt>:
    dd54:	add	ip, pc, #0, 12
    dd58:	add	ip, ip, #76, 20	; 0x4c000
    dd5c:	ldr	pc, [ip, #1884]!	; 0x75c

0000dd60 <fprintf@plt>:
    dd60:	add	ip, pc, #0, 12
    dd64:	add	ip, ip, #76, 20	; 0x4c000
    dd68:	ldr	pc, [ip, #1876]!	; 0x754

0000dd6c <conf_create_opm_listener@plt>:
    dd6c:	add	ip, pc, #0, 12
    dd70:	add	ip, ip, #76, 20	; 0x4c000
    dd74:	ldr	pc, [ip, #1868]!	; 0x74c

0000dd78 <match_extban@plt>:
    dd78:	add	ip, pc, #0, 12
    dd7c:	add	ip, ip, #76, 20	; 0x4c000
    dd80:	ldr	pc, [ip, #1860]!	; 0x744

0000dd84 <yy_delete_buffer@plt>:
    dd84:	add	ip, pc, #0, 12
    dd88:	add	ip, ip, #76, 20	; 0x4c000
    dd8c:	ldr	pc, [ip, #1852]!	; 0x73c

0000dd90 <sendto_local_clients_with_capability@plt>:
    dd90:	add	ip, pc, #0, 12
    dd94:	add	ip, ip, #76, 20	; 0x4c000
    dd98:	ldr	pc, [ip, #1844]!	; 0x734

0000dd9c <rb_radixtree_add@plt>:
    dd9c:	add	ip, pc, #0, 12
    dda0:	add	ip, ip, #76, 20	; 0x4c000
    dda4:	ldr	pc, [ip, #1836]!	; 0x72c

0000dda8 <show_capabilities@plt>:
    dda8:	add	ip, pc, #0, 12
    ddac:	add	ip, ip, #76, 20	; 0x4c000
    ddb0:	ldr	pc, [ip, #1828]!	; 0x724

0000ddb4 <execv@plt>:
    ddb4:	add	ip, pc, #0, 12
    ddb8:	add	ip, ip, #76, 20	; 0x4c000
    ddbc:	ldr	pc, [ip, #1820]!	; 0x71c

0000ddc0 <add_server_conf@plt>:
    ddc0:	add	ip, pc, #0, 12
    ddc4:	add	ip, ip, #76, 20	; 0x4c000
    ddc8:	ldr	pc, [ip, #1812]!	; 0x714

0000ddcc <detach_server_conf@plt>:
    ddcc:	add	ip, pc, #0, 12
    ddd0:	add	ip, ip, #76, 20	; 0x4c000
    ddd4:	ldr	pc, [ip, #1804]!	; 0x70c

0000ddd8 <rehash_authd@plt>:
    ddd8:	add	ip, pc, #0, 12
    dddc:	add	ip, ip, #76, 20	; 0x4c000
    dde0:	ldr	pc, [ip, #1796]!	; 0x704

0000dde4 <check_class@plt>:
    dde4:	add	ip, pc, #0, 12
    dde8:	add	ip, ip, #76, 20	; 0x4c000
    ddec:	ldr	pc, [ip, #1788]!	; 0x6fc

0000ddf0 <free_user@plt>:
    ddf0:	add	ip, pc, #0, 12
    ddf4:	add	ip, ip, #76, 20	; 0x4c000
    ddf8:	ldr	pc, [ip, #1780]!	; 0x6f4

0000ddfc <monitor_signon@plt>:
    ddfc:	add	ip, pc, #0, 12
    de00:	add	ip, ip, #76, 20	; 0x4c000
    de04:	ldr	pc, [ip, #1772]!	; 0x6ec

0000de08 <check_banned_lines@plt>:
    de08:	add	ip, pc, #0, 12
    de0c:	add	ip, ip, #76, 20	; 0x4c000
    de10:	ldr	pc, [ip, #1764]!	; 0x6e4

0000de14 <capability_put@plt>:
    de14:	add	ip, pc, #0, 12
    de18:	add	ip, ip, #76, 20	; 0x4c000
    de1c:	ldr	pc, [ip, #1756]!	; 0x6dc

0000de20 <rb_bh_alloc@plt>:
    de20:	add	ip, pc, #0, 12
    de24:	add	ip, ip, #76, 20	; 0x4c000
    de28:	ldr	pc, [ip, #1748]!	; 0x6d4

0000de2c <sendto_common_channels_local@plt>:
    de2c:	add	ip, pc, #0, 12
    de30:	add	ip, ip, #76, 20	; 0x4c000
    de34:	ldr	pc, [ip, #1740]!	; 0x6cc

0000de38 <__errno_location@plt>:
    de38:	add	ip, pc, #0, 12
    de3c:	add	ip, ip, #76, 20	; 0x4c000
    de40:	ldr	pc, [ip, #1732]!	; 0x6c4

0000de44 <add_to_cli_connid_hash@plt>:
    de44:	add	ip, pc, #0, 12
    de48:	add	ip, ip, #76, 20	; 0x4c000
    de4c:	ldr	pc, [ip, #1724]!	; 0x6bc

0000de50 <free_pre_client@plt>:
    de50:	add	ip, pc, #0, 12
    de54:	add	ip, ip, #76, 20	; 0x4c000
    de58:	ldr	pc, [ip, #1716]!	; 0x6b4

0000de5c <rb_helper_run@plt>:
    de5c:	add	ip, pc, #0, 12
    de60:	add	ip, ip, #76, 20	; 0x4c000
    de64:	ldr	pc, [ip, #1708]!	; 0x6ac

0000de68 <make_class@plt>:
    de68:	add	ip, pc, #0, 12
    de6c:	add	ip, ip, #76, 20	; 0x4c000
    de70:	ldr	pc, [ip, #1700]!	; 0x6a4

0000de74 <snprintf@plt>:
    de74:	add	ip, pc, #0, 12
    de78:	add	ip, ip, #76, 20	; 0x4c000
    de7c:	ldr	pc, [ip, #1692]!	; 0x69c

0000de80 <msgbuf_cache_free@plt>:
    de80:	add	ip, pc, #0, 12
    de84:	add	ip, ip, #76, 20	; 0x4c000
    de88:	ldr	pc, [ip, #1684]!	; 0x694

0000de8c <__isoc99_sscanf@plt>:
    de8c:	add	ip, pc, #0, 12
    de90:	add	ip, ip, #76, 20	; 0x4c000
    de94:	ldr	pc, [ip, #1676]!	; 0x68c

0000de98 <parse_snobuf_to_mask@plt>:
    de98:	add	ip, pc, #0, 12
    de9c:	add	ip, ip, #76, 20	; 0x4c000
    dea0:	ldr	pc, [ip, #1668]!	; 0x684

0000dea4 <is_remote_connect@plt>:
    dea4:	add	ip, pc, #0, 12
    dea8:	add	ip, ip, #76, 20	; 0x4c000
    deac:	ldr	pc, [ip, #1660]!	; 0x67c

0000deb0 <get_ssld_count@plt>:
    deb0:	add	ip, pc, #0, 12
    deb4:	add	ip, ip, #76, 20	; 0x4c000
    deb8:	ldr	pc, [ip, #1652]!	; 0x674

0000debc <load_one_module@plt>:
    debc:	add	ip, pc, #0, 12
    dec0:	add	ip, ip, #76, 20	; 0x4c000
    dec4:	ldr	pc, [ip, #1644]!	; 0x66c

0000dec8 <init_dns@plt>:
    dec8:	add	ip, pc, #0, 12
    decc:	add	ip, ip, #76, 20	; 0x4c000
    ded0:	ldr	pc, [ip, #1636]!	; 0x664

0000ded4 <rb_bh_create@plt>:
    ded4:	add	ip, pc, #0, 12
    ded8:	add	ip, ip, #76, 20	; 0x4c000
    dedc:	ldr	pc, [ip, #1628]!	; 0x65c

0000dee0 <rb_radixtree_retrieve@plt>:
    dee0:	add	ip, pc, #0, 12
    dee4:	add	ip, ip, #76, 20	; 0x4c000
    dee8:	ldr	pc, [ip, #1620]!	; 0x654

0000deec <capability_index_list@plt>:
    deec:	add	ip, pc, #0, 12
    def0:	add	ip, ip, #76, 20	; 0x4c000
    def4:	ldr	pc, [ip, #1612]!	; 0x64c

0000def8 <BIO_ctrl@plt>:
    def8:	add	ip, pc, #0, 12
    defc:	add	ip, ip, #76, 20	; 0x4c000
    df00:	ldr	pc, [ip, #1604]!	; 0x644

0000df04 <find_server@plt>:
    df04:	add	ip, pc, #0, 12
    df08:	add	ip, ip, #76, 20	; 0x4c000
    df0c:	ldr	pc, [ip, #1596]!	; 0x63c

0000df10 <add_to_hostname_hash@plt>:
    df10:	add	ip, pc, #0, 12
    df14:	add	ip, ip, #76, 20	; 0x4c000
    df18:	ldr	pc, [ip, #1588]!	; 0x634

0000df1c <hashcomment@plt>:
    df1c:	add	ip, pc, #0, 12
    df20:	add	ip, ip, #76, 20	; 0x4c000
    df24:	ldr	pc, [ip, #1580]!	; 0x62c

0000df28 <memset@plt>:
    df28:	add	ip, pc, #0, 12
    df2c:	add	ip, ip, #76, 20	; 0x4c000
    df30:	ldr	pc, [ip, #1572]!	; 0x624

0000df34 <BIO_free@plt>:
    df34:	add	ip, pc, #0, 12
    df38:	add	ip, ip, #76, 20	; 0x4c000
    df3c:	ldr	pc, [ip, #1564]!	; 0x61c

0000df40 <opm_check_enable@plt>:
    df40:	add	ip, pc, #0, 12
    df44:	add	ip, ip, #76, 20	; 0x4c000
    df48:	ldr	pc, [ip, #1556]!	; 0x614

0000df4c <yypop_buffer_state@plt>:
    df4c:	add	ip, pc, #0, 12
    df50:	add	ip, ip, #76, 20	; 0x4c000
    df54:	ldr	pc, [ip, #1548]!	; 0x60c

0000df58 <server_reboot@plt>:
    df58:	add	ip, pc, #0, 12
    df5c:	add	ip, ip, #76, 20	; 0x4c000
    df60:	ldr	pc, [ip, #1540]!	; 0x604

0000df64 <chantypes_update@plt>:
    df64:	add	ip, pc, #0, 12
    df68:	add	ip, ip, #76, 20	; 0x4c000
    df6c:	ldr	pc, [ip, #1532]!	; 0x5fc

0000df70 <construct_cflags_strings@plt>:
    df70:	add	ip, pc, #0, 12
    df74:	add	ip, ip, #76, 20	; 0x4c000
    df78:	ldr	pc, [ip, #1524]!	; 0x5f4

0000df7c <strncpy@plt>:
    df7c:	add	ip, pc, #0, 12
    df80:	add	ip, ip, #76, 20	; 0x4c000
    df84:	ldr	pc, [ip, #1516]!	; 0x5ec

0000df88 <generate_uid@plt>:
    df88:	add	ip, pc, #0, 12
    df8c:	add	ip, ip, #76, 20	; 0x4c000
    df90:	ldr	pc, [ip, #1508]!	; 0x5e4

0000df94 <rb_send_fd_buf@plt>:
    df94:	add	ip, pc, #0, 12
    df98:	add	ip, ip, #76, 20	; 0x4c000
    df9c:	ldr	pc, [ip, #1500]!	; 0x5dc

0000dfa0 <load_a_module@plt>:
    dfa0:	add	ip, pc, #0, 12
    dfa4:	add	ip, ip, #76, 20	; 0x4c000
    dfa8:	ldr	pc, [ip, #1492]!	; 0x5d4

0000dfac <ircd_shutdown@plt>:
    dfac:	add	ip, pc, #0, 12
    dfb0:	add	ip, ip, #76, 20	; 0x4c000
    dfb4:	ldr	pc, [ip, #1484]!	; 0x5cc

0000dfb8 <rb_dictionary_create@plt>:
    dfb8:	add	ip, pc, #0, 12
    dfbc:	add	ip, ip, #76, 20	; 0x4c000
    dfc0:	ldr	pc, [ip, #1476]!	; 0x5c4

0000dfc4 <privilegeset_mark_all_illegal@plt>:
    dfc4:	add	ip, pc, #0, 12
    dfc8:	add	ip, ip, #76, 20	; 0x4c000
    dfcc:	ldr	pc, [ip, #1468]!	; 0x5bc

0000dfd0 <find_xline_mask@plt>:
    dfd0:	add	ip, pc, #0, 12
    dfd4:	add	ip, ip, #76, 20	; 0x4c000
    dfd8:	ldr	pc, [ip, #1460]!	; 0x5b4

0000dfdc <find_cli_connid_hash@plt>:
    dfdc:	add	ip, pc, #0, 12
    dfe0:	add	ip, ip, #76, 20	; 0x4c000
    dfe4:	ldr	pc, [ip, #1452]!	; 0x5ac

0000dfe8 <strtoull@plt>:
    dfe8:	add	ip, pc, #0, 12
    dfec:	add	ip, ip, #76, 20	; 0x4c000
    dff0:	ldr	pc, [ip, #1444]!	; 0x5a4

0000dff4 <rb_linebuf_flush@plt>:
    dff4:	add	ip, pc, #0, 12
    dff8:	add	ip, ip, #76, 20	; 0x4c000
    dffc:	ldr	pc, [ip, #1436]!	; 0x59c

0000e000 <rb_inet_pton_sock@plt>:
    e000:	add	ip, pc, #0, 12
    e004:	add	ip, ip, #76, 20	; 0x4c000
    e008:	ldr	pc, [ip, #1428]!	; 0x594

0000e00c <rb_linebuf_donebuf@plt>:
    e00c:	add	ip, pc, #0, 12
    e010:	add	ip, ip, #76, 20	; 0x4c000
    e014:	ldr	pc, [ip, #1420]!	; 0x58c

0000e018 <matchset_for_client@plt>:
    e018:	add	ip, pc, #0, 12
    e01c:	add	ip, ip, #76, 20	; 0x4c000
    e020:	ldr	pc, [ip, #1412]!	; 0x584

0000e024 <lookup_hostname@plt>:
    e024:	add	ip, pc, #0, 12
    e028:	add	ip, ip, #76, 20	; 0x4c000
    e02c:	ldr	pc, [ip, #1404]!	; 0x57c

0000e030 <add_class@plt>:
    e030:	add	ip, pc, #0, 12
    e034:	add	ip, ip, #76, 20	; 0x4c000
    e038:	ldr	pc, [ip, #1396]!	; 0x574

0000e03c <fileno@plt>:
    e03c:	add	ip, pc, #0, 12
    e040:	add	ip, ip, #76, 20	; 0x4c000
    e044:	ldr	pc, [ip, #1388]!	; 0x56c

0000e048 <rb_lib_init@plt>:
    e048:	add	ip, pc, #0, 12
    e04c:	add	ip, ip, #76, 20	; 0x4c000
    e050:	ldr	pc, [ip, #1380]!	; 0x564

0000e054 <delete_one_address_conf@plt>:
    e054:	add	ip, pc, #0, 12
    e058:	add	ip, ip, #76, 20	; 0x4c000
    e05c:	ldr	pc, [ip, #1372]!	; 0x55c

0000e060 <rb_linebuf_init@plt>:
    e060:	add	ip, pc, #0, 12
    e064:	add	ip, ip, #76, 20	; 0x4c000
    e068:	ldr	pc, [ip, #1364]!	; 0x554

0000e06c <rb_radixtree_foreach_cur@plt>:
    e06c:	add	ip, pc, #0, 12
    e070:	add	ip, ip, #76, 20	; 0x4c000
    e074:	ldr	pc, [ip, #1356]!	; 0x54c

0000e078 <valid_username@plt>:
    e078:	add	ip, pc, #0, 12
    e07c:	add	ip, ip, #76, 20	; 0x4c000
    e080:	ldr	pc, [ip, #1348]!	; 0x544

0000e084 <valid_hostname@plt>:
    e084:	add	ip, pc, #0, 12
    e088:	add	ip, ip, #76, 20	; 0x4c000
    e08c:	ldr	pc, [ip, #1340]!	; 0x53c

0000e090 <memchr@plt>:
    e090:	add	ip, pc, #0, 12
    e094:	add	ip, ip, #76, 20	; 0x4c000
    e098:	ldr	pc, [ip, #1332]!	; 0x534

0000e09c <access@plt>:
    e09c:	add	ip, pc, #0, 12
    e0a0:	add	ip, ip, #76, 20	; 0x4c000
    e0a4:	ldr	pc, [ip, #1324]!	; 0x52c

0000e0a8 <rand@plt>:
    e0a8:	add	ip, pc, #0, 12
    e0ac:	add	ip, ip, #76, 20	; 0x4c000
    e0b0:	ldr	pc, [ip, #1316]!	; 0x524

0000e0b4 <ilog@plt>:
    e0b4:	add	ip, pc, #0, 12
    e0b8:	add	ip, ip, #76, 20	; 0x4c000
    e0bc:	ldr	pc, [ip, #1308]!	; 0x51c

0000e0c0 <rb_radixtree_delete@plt>:
    e0c0:	add	ip, pc, #0, 12
    e0c4:	add	ip, ip, #76, 20	; 0x4c000
    e0c8:	ldr	pc, [ip, #1300]!	; 0x514

0000e0cc <rb_dictionary_destroy@plt>:
    e0cc:	add	ip, pc, #0, 12
    e0d0:	add	ip, ip, #76, 20	; 0x4c000
    e0d4:	ldr	pc, [ip, #1292]!	; 0x50c

0000e0d8 <find_server_conf@plt>:
    e0d8:	add	ip, pc, #0, 12
    e0dc:	add	ip, ip, #76, 20	; 0x4c000
    e0e0:	ldr	pc, [ip, #1284]!	; 0x504

0000e0e4 <destroy_channel@plt>:
    e0e4:	add	ip, pc, #0, 12
    e0e8:	add	ip, ip, #76, 20	; 0x4c000
    e0ec:	ldr	pc, [ip, #1276]!	; 0x4fc

0000e0f0 <fclose@plt>:
    e0f0:	add	ip, pc, #0, 12
    e0f4:	add	ip, ip, #76, 20	; 0x4c000
    e0f8:	ldr	pc, [ip, #1268]!	; 0x4f4

0000e0fc <open_logfiles@plt>:
    e0fc:	add	ip, pc, #0, 12
    e100:	add	ip, ip, #76, 20	; 0x4c000
    e104:	ldr	pc, [ip, #1260]!	; 0x4ec

0000e108 <collapse@plt>:
    e108:	add	ip, pc, #0, 12
    e10c:	add	ip, ip, #76, 20	; 0x4c000
    e110:	ldr	pc, [ip, #1252]!	; 0x4e4

0000e114 <match@plt>:
    e114:	add	ip, pc, #0, 12
    e118:	add	ip, ip, #76, 20	; 0x4c000
    e11c:	ldr	pc, [ip, #1244]!	; 0x4dc

0000e120 <close_listener@plt>:
    e120:	add	ip, pc, #0, 12
    e124:	add	ip, ip, #76, 20	; 0x4c000
    e128:	ldr	pc, [ip, #1236]!	; 0x4d4

0000e12c <free_nd_entry@plt>:
    e12c:	add	ip, pc, #0, 12
    e130:	add	ip, ip, #76, 20	; 0x4c000
    e134:	ldr	pc, [ip, #1228]!	; 0x4cc

0000e138 <add_reject@plt>:
    e138:	add	ip, pc, #0, 12
    e13c:	add	ip, ip, #76, 20	; 0x4c000
    e140:	ldr	pc, [ip, #1220]!	; 0x4c4

0000e144 <usage@plt>:
    e144:	add	ip, pc, #0, 12
    e148:	add	ip, ip, #76, 20	; 0x4c000
    e14c:	ldr	pc, [ip, #1212]!	; 0x4bc

0000e150 <monitor_signoff@plt>:
    e150:	add	ip, pc, #0, 12
    e154:	add	ip, ip, #76, 20	; 0x4c000
    e158:	ldr	pc, [ip, #1204]!	; 0x4b4

0000e15c <ieof@plt>:
    e15c:	add	ip, pc, #0, 12
    e160:	add	ip, ip, #76, 20	; 0x4c000
    e164:	ldr	pc, [ip, #1196]!	; 0x4ac

0000e168 <log_client_name@plt>:
    e168:	add	ip, pc, #0, 12
    e16c:	add	ip, ip, #76, 20	; 0x4c000
    e170:	ldr	pc, [ip, #1188]!	; 0x4a4

0000e174 <find_hostname@plt>:
    e174:	add	ip, pc, #0, 12
    e178:	add	ip, ip, #76, 20	; 0x4c000
    e17c:	ldr	pc, [ip, #1180]!	; 0x49c

0000e180 <substitution_free@plt>:
    e180:	add	ip, pc, #0, 12
    e184:	add	ip, ip, #76, 20	; 0x4c000
    e188:	ldr	pc, [ip, #1172]!	; 0x494

0000e18c <yylex@plt>:
    e18c:	add	ip, pc, #0, 12
    e190:	add	ip, ip, #76, 20	; 0x4c000
    e194:	ldr	pc, [ip, #1164]!	; 0x48c

0000e198 <make_and_lookup@plt>:
    e198:	add	ip, pc, #0, 12
    e19c:	add	ip, ip, #76, 20	; 0x4c000
    e1a0:	ldr	pc, [ip, #1156]!	; 0x484

0000e1a4 <clear_s_newconf@plt>:
    e1a4:	add	ip, pc, #0, 12
    e1a8:	add	ip, ip, #76, 20	; 0x4c000
    e1ac:	ldr	pc, [ip, #1148]!	; 0x47c

0000e1b0 <find_xline@plt>:
    e1b0:	add	ip, pc, #0, 12
    e1b4:	add	ip, ip, #76, 20	; 0x4c000
    e1b8:	ldr	pc, [ip, #1140]!	; 0x474

0000e1bc <sendto_channel_local_with_capability_butone@plt>:
    e1bc:	add	ip, pc, #0, 12
    e1c0:	add	ip, ip, #76, 20	; 0x4c000
    e1c4:	ldr	pc, [ip, #1132]!	; 0x46c

0000e1c8 <del_from_resv_hash@plt>:
    e1c8:	add	ip, pc, #0, 12
    e1cc:	add	ip, ip, #76, 20	; 0x4c000
    e1d0:	ldr	pc, [ip, #1124]!	; 0x464

0000e1d4 <clear_out_address_conf@plt>:
    e1d4:	add	ip, pc, #0, 12
    e1d8:	add	ip, ip, #76, 20	; 0x4c000
    e1dc:	ldr	pc, [ip, #1116]!	; 0x45c

0000e1e0 <find_person@plt>:
    e1e0:	add	ip, pc, #0, 12
    e1e4:	add	ip, ip, #76, 20	; 0x4c000
    e1e8:	ldr	pc, [ip, #1108]!	; 0x454

0000e1ec <sigemptyset@plt>:
    e1ec:	add	ip, pc, #0, 12
    e1f0:	add	ip, ip, #76, 20	; 0x4c000
    e1f4:	ldr	pc, [ip, #1100]!	; 0x44c

0000e1f8 <rb_fsnprint@plt>:
    e1f8:	add	ip, pc, #0, 12
    e1fc:	add	ip, ip, #76, 20	; 0x4c000
    e200:	ldr	pc, [ip, #1092]!	; 0x444

0000e204 <authd_deferred_client@plt>:
    e204:	add	ip, pc, #0, 12
    e208:	add	ip, ip, #76, 20	; 0x4c000
    e20c:	ldr	pc, [ip, #1084]!	; 0x43c

0000e210 <rb_set_buffers@plt>:
    e210:	add	ip, pc, #0, 12
    e214:	add	ip, ip, #76, 20	; 0x4c000
    e218:	ldr	pc, [ip, #1076]!	; 0x434

0000e21c <capability_require@plt>:
    e21c:	add	ip, pc, #0, 12
    e220:	add	ip, ip, #76, 20	; 0x4c000
    e224:	ldr	pc, [ip, #1068]!	; 0x42c

0000e228 <whowas_get_history@plt>:
    e228:	add	ip, pc, #0, 12
    e22c:	add	ip, ip, #76, 20	; 0x4c000
    e230:	ldr	pc, [ip, #1060]!	; 0x424

0000e234 <fork@plt>:
    e234:	add	ip, pc, #0, 12
    e238:	add	ip, ip, #76, 20	; 0x4c000
    e23c:	ldr	pc, [ip, #1052]!	; 0x41c

0000e240 <is_banned@plt>:
    e240:	add	ip, pc, #0, 12
    e244:	add	ip, ip, #76, 20	; 0x4c000
    e248:	ldr	pc, [ip, #1044]!	; 0x414

0000e24c <add_hook_prio@plt>:
    e24c:	add	ip, pc, #0, 12
    e250:	add	ip, ip, #76, 20	; 0x4c000
    e254:	ldr	pc, [ip, #1036]!	; 0x40c

0000e258 <find_prop_ban@plt>:
    e258:	add	ip, pc, #0, 12
    e25c:	add	ip, ip, #76, 20	; 0x4c000
    e260:	ldr	pc, [ip, #1028]!	; 0x404

0000e264 <readdir@plt>:
    e264:	add	ip, pc, #0, 12
    e268:	add	ip, ip, #76, 20	; 0x4c000
    e26c:	ldr	pc, [ip, #1020]!	; 0x3fc

0000e270 <rb_note@plt>:
    e270:	add	ip, pc, #0, 12
    e274:	add	ip, ip, #76, 20	; 0x4c000
    e278:	ldr	pc, [ip, #1012]!	; 0x3f4

0000e27c <strrchr@plt>:
    e27c:	add	ip, pc, #0, 12
    e280:	add	ip, ip, #76, 20	; 0x4c000
    e284:	ldr	pc, [ip, #1004]!	; 0x3ec

0000e288 <del_from_channel_hash@plt>:
    e288:	add	ip, pc, #0, 12
    e28c:	add	ip, ip, #76, 20	; 0x4c000
    e290:	ldr	pc, [ip, #996]!	; 0x3e4

0000e294 <rb_spawn_process@plt>:
    e294:	add	ip, pc, #0, 12
    e298:	add	ip, ip, #76, 20	; 0x4c000
    e29c:	ldr	pc, [ip, #988]!	; 0x3dc

0000e2a0 <rb_pipe@plt>:
    e2a0:	add	ip, pc, #0, 12
    e2a4:	add	ip, ip, #76, 20	; 0x4c000
    e2a8:	ldr	pc, [ip, #980]!	; 0x3d4

0000e2ac <rb_errstr@plt>:
    e2ac:	add	ip, pc, #0, 12
    e2b0:	add	ip, ip, #76, 20	; 0x4c000
    e2b4:	ldr	pc, [ip, #972]!	; 0x3cc

0000e2b8 <scache_connect@plt>:
    e2b8:	add	ip, pc, #0, 12
    e2bc:	add	ip, ip, #76, 20	; 0x4c000
    e2c0:	ldr	pc, [ip, #964]!	; 0x3c4

0000e2c4 <smalldate@plt>:
    e2c4:	add	ip, pc, #0, 12
    e2c8:	add	ip, ip, #76, 20	; 0x4c000
    e2cc:	ldr	pc, [ip, #956]!	; 0x3bc

0000e2d0 <del_id@plt>:
    e2d0:	add	ip, pc, #0, 12
    e2d4:	add	ip, ip, #76, 20	; 0x4c000
    e2d8:	ldr	pc, [ip, #948]!	; 0x3b4

0000e2dc <remove_user_from_channel@plt>:
    e2dc:	add	ip, pc, #0, 12
    e2e0:	add	ip, ip, #76, 20	; 0x4c000
    e2e4:	ldr	pc, [ip, #940]!	; 0x3ac

0000e2e8 <msgbuf_unparse_prefix@plt>:
    e2e8:	add	ip, pc, #0, 12
    e2ec:	add	ip, ip, #76, 20	; 0x4c000
    e2f0:	ldr	pc, [ip, #932]!	; 0x3a4

0000e2f4 <yy_flush_buffer@plt>:
    e2f4:	add	ip, pc, #0, 12
    e2f8:	add	ip, ip, #76, 20	; 0x4c000
    e2fc:	ldr	pc, [ip, #924]!	; 0x39c

0000e300 <rb_dictionary_foreach_cur@plt>:
    e300:	add	ip, pc, #0, 12
    e304:	add	ip, ip, #76, 20	; 0x4c000
    e308:	ldr	pc, [ip, #916]!	; 0x394

0000e30c <capability_orphan@plt>:
    e30c:	add	ip, pc, #0, 12
    e310:	add	ip, ip, #76, 20	; 0x4c000
    e314:	ldr	pc, [ip, #908]!	; 0x38c

0000e318 <rb_radixtree_foreach_start@plt>:
    e318:	add	ip, pc, #0, 12
    e31c:	add	ip, ip, #76, 20	; 0x4c000
    e320:	ldr	pc, [ip, #900]!	; 0x384

0000e324 <start_wsockd@plt>:
    e324:	add	ip, pc, #0, 12
    e328:	add	ip, ip, #76, 20	; 0x4c000
    e32c:	ldr	pc, [ip, #892]!	; 0x37c

0000e330 <add_tcp_listener@plt>:
    e330:	add	ip, pc, #0, 12
    e334:	add	ip, ip, #76, 20	; 0x4c000
    e338:	ldr	pc, [ip, #884]!	; 0x374

0000e33c <rb_lib_loop@plt>:
    e33c:	add	ip, pc, #0, 12
    e340:	add	ip, ip, #76, 20	; 0x4c000
    e344:	ldr	pc, [ip, #876]!	; 0x36c

0000e348 <add_hook@plt>:
    e348:	add	ip, pc, #0, 12
    e34c:	add	ip, ip, #76, 20	; 0x4c000
    e350:	ldr	pc, [ip, #868]!	; 0x364

0000e354 <is_quieted@plt>:
    e354:	add	ip, pc, #0, 12
    e358:	add	ip, ip, #76, 20	; 0x4c000
    e35c:	ldr	pc, [ip, #860]!	; 0x35c

0000e360 <get_extban_string@plt>:
    e360:	add	ip, pc, #0, 12
    e364:	add	ip, ip, #76, 20	; 0x4c000
    e368:	ldr	pc, [ip, #852]!	; 0x354

0000e36c <ident_check_enable@plt>:
    e36c:	add	ip, pc, #0, 12
    e370:	add	ip, ip, #76, 20	; 0x4c000
    e374:	ldr	pc, [ip, #844]!	; 0x34c

0000e378 <remove_hook@plt>:
    e378:	add	ip, pc, #0, 12
    e37c:	add	ip, ip, #76, 20	; 0x4c000
    e380:	ldr	pc, [ip, #836]!	; 0x344

0000e384 <rb_bh_usage@plt>:
    e384:	add	ip, pc, #0, 12
    e388:	add	ip, ip, #76, 20	; 0x4c000
    e38c:	ldr	pc, [ip, #828]!	; 0x33c

0000e390 <check_dlines@plt>:
    e390:	add	ip, pc, #0, 12
    e394:	add	ip, ip, #76, 20	; 0x4c000
    e398:	ldr	pc, [ip, #820]!	; 0x334

0000e39c <substitution_parse@plt>:
    e39c:	add	ip, pc, #0, 12
    e3a0:	add	ip, ip, #76, 20	; 0x4c000
    e3a4:	ldr	pc, [ip, #812]!	; 0x32c

0000e3a8 <sprintf@plt>:
    e3a8:	add	ip, pc, #0, 12
    e3ac:	add	ip, ip, #76, 20	; 0x4c000
    e3b0:	ldr	pc, [ip, #804]!	; 0x324

0000e3b4 <rb_strcasestr@plt>:
    e3b4:	add	ip, pc, #0, 12
    e3b8:	add	ip, ip, #76, 20	; 0x4c000
    e3bc:	ldr	pc, [ip, #796]!	; 0x31c

0000e3c0 <close_logfiles@plt>:
    e3c0:	add	ip, pc, #0, 12
    e3c4:	add	ip, ip, #76, 20	; 0x4c000
    e3c8:	ldr	pc, [ip, #788]!	; 0x314

0000e3cc <whowas_add_history@plt>:
    e3cc:	add	ip, pc, #0, 12
    e3d0:	add	ip, ip, #76, 20	; 0x4c000
    e3d4:	ldr	pc, [ip, #780]!	; 0x30c

0000e3d8 <del_from_cli_connid_hash@plt>:
    e3d8:	add	ip, pc, #0, 12
    e3dc:	add	ip, ip, #76, 20	; 0x4c000
    e3e0:	ldr	pc, [ip, #772]!	; 0x304

0000e3e4 <free_remote_conf@plt>:
    e3e4:	add	ip, pc, #0, 12
    e3e8:	add	ip, ip, #76, 20	; 0x4c000
    e3ec:	ldr	pc, [ip, #764]!	; 0x2fc

0000e3f0 <set_authd_timeout@plt>:
    e3f0:	add	ip, pc, #0, 12
    e3f4:	add	ip, ip, #76, 20	; 0x4c000
    e3f8:	ldr	pc, [ip, #756]!	; 0x2f4

0000e3fc <getsockname@plt>:
    e3fc:	add	ip, pc, #0, 12
    e400:	add	ip, ip, #76, 20	; 0x4c000
    e404:	ldr	pc, [ip, #748]!	; 0x2ec

0000e408 <error_exit_client@plt>:
    e408:	add	ip, pc, #0, 12
    e40c:	add	ip, ip, #76, 20	; 0x4c000
    e410:	ldr	pc, [ip, #740]!	; 0x2e4

0000e414 <sendto_one_notice@plt>:
    e414:	add	ip, pc, #0, 12
    e418:	add	ip, ip, #76, 20	; 0x4c000
    e41c:	ldr	pc, [ip, #732]!	; 0x2dc

0000e420 <add_top_conf@plt>:
    e420:	add	ip, pc, #0, 12
    e424:	add	ip, ip, #76, 20	; 0x4c000
    e428:	ldr	pc, [ip, #724]!	; 0x2d4

0000e42c <rehash_bans@plt>:
    e42c:	add	ip, pc, #0, 12
    e430:	add	ip, ip, #76, 20	; 0x4c000
    e434:	ldr	pc, [ip, #716]!	; 0x2cc

0000e438 <free_ban@plt>:
    e438:	add	ip, pc, #0, 12
    e43c:	add	ip, ip, #76, 20	; 0x4c000
    e440:	ldr	pc, [ip, #708]!	; 0x2c4

0000e444 <send_umode_out@plt>:
    e444:	add	ip, pc, #0, 12
    e448:	add	ip, ip, #76, 20	; 0x4c000
    e44c:	ldr	pc, [ip, #700]!	; 0x2bc

0000e450 <vsnprintf@plt>:
    e450:	add	ip, pc, #0, 12
    e454:	add	ip, ip, #76, 20	; 0x4c000
    e458:	ldr	pc, [ip, #692]!	; 0x2b4

0000e45c <rb_linebuf_put@plt>:
    e45c:	add	ip, pc, #0, 12
    e460:	add	ip, ip, #76, 20	; 0x4c000
    e464:	ldr	pc, [ip, #684]!	; 0x2ac

0000e468 <atoi@plt>:
    e468:	add	ip, pc, #0, 12
    e46c:	add	ip, ip, #76, 20	; 0x4c000
    e470:	ldr	pc, [ip, #676]!	; 0x2a4

0000e474 <find_named_person@plt>:
    e474:	add	ip, pc, #0, 12
    e478:	add	ip, ip, #76, 20	; 0x4c000
    e47c:	ldr	pc, [ip, #668]!	; 0x29c

0000e480 <sendto_common_channels_local_butone@plt>:
    e480:	add	ip, pc, #0, 12
    e484:	add	ip, ip, #76, 20	; 0x4c000
    e488:	ldr	pc, [ip, #660]!	; 0x294

0000e48c <rb_helper_start@plt>:
    e48c:	add	ip, pc, #0, 12
    e490:	add	ip, ip, #76, 20	; 0x4c000
    e494:	ldr	pc, [ip, #652]!	; 0x28c

0000e498 <find_exact_conf_by_address@plt>:
    e498:	add	ip, pc, #0, 12
    e49c:	add	ip, ip, #76, 20	; 0x4c000
    e4a0:	ldr	pc, [ip, #644]!	; 0x284

0000e4a4 <add_isupport@plt>:
    e4a4:	add	ip, pc, #0, 12
    e4a8:	add	ip, ip, #76, 20	; 0x4c000
    e4ac:	ldr	pc, [ip, #636]!	; 0x27c

0000e4b0 <get_wsockd_count@plt>:
    e4b0:	add	ip, pc, #0, 12
    e4b4:	add	ip, ip, #76, 20	; 0x4c000
    e4b8:	ldr	pc, [ip, #628]!	; 0x274

0000e4bc <rb_get_sockerr@plt>:
    e4bc:	add	ip, pc, #0, 12
    e4c0:	add	ip, ip, #76, 20	; 0x4c000
    e4c4:	ldr	pc, [ip, #620]!	; 0x26c

0000e4c8 <strpbrk@plt>:
    e4c8:	add	ip, pc, #0, 12
    e4cc:	add	ip, ip, #76, 20	; 0x4c000
    e4d0:	ldr	pc, [ip, #612]!	; 0x264

0000e4d4 <parse@plt>:
    e4d4:	add	ip, pc, #0, 12
    e4d8:	add	ip, ip, #76, 20	; 0x4c000
    e4dc:	ldr	pc, [ip, #604]!	; 0x25c

0000e4e0 <whowas_off_history@plt>:
    e4e0:	add	ip, pc, #0, 12
    e4e4:	add	ip, ip, #76, 20	; 0x4c000
    e4e8:	ldr	pc, [ip, #596]!	; 0x254

0000e4ec <attach_server_conf@plt>:
    e4ec:	add	ip, pc, #0, 12
    e4f0:	add	ip, ip, #76, 20	; 0x4c000
    e4f4:	ldr	pc, [ip, #588]!	; 0x24c

0000e4f8 <find_id@plt>:
    e4f8:	add	ip, pc, #0, 12
    e4fc:	add	ip, ip, #76, 20	; 0x4c000
    e500:	ldr	pc, [ip, #580]!	; 0x244

0000e504 <init_uid@plt>:
    e504:	add	ip, pc, #0, 12
    e508:	add	ip, ip, #76, 20	; 0x4c000
    e50c:	ldr	pc, [ip, #572]!	; 0x23c

0000e510 <rb_strlcpy@plt>:
    e510:	add	ip, pc, #0, 12
    e514:	add	ip, ip, #76, 20	; 0x4c000
    e518:	ldr	pc, [ip, #564]!	; 0x234

0000e51c <cinclude@plt>:
    e51c:	add	ip, pc, #0, 12
    e520:	add	ip, ip, #76, 20	; 0x4c000
    e524:	ldr	pc, [ip, #556]!	; 0x22c

0000e528 <fgets_unlocked@plt>:
    e528:	add	ip, pc, #0, 12
    e52c:	add	ip, ip, #76, 20	; 0x4c000
    e530:	ldr	pc, [ip, #548]!	; 0x224

0000e534 <exit_client@plt>:
    e534:	add	ip, pc, #0, 12
    e538:	add	ip, ip, #76, 20	; 0x4c000
    e53c:	ldr	pc, [ip, #540]!	; 0x21c

0000e540 <msgbuf_cache_get@plt>:
    e540:	add	ip, pc, #0, 12
    e544:	add	ip, ip, #76, 20	; 0x4c000
    e548:	ldr	pc, [ip, #532]!	; 0x214

0000e54c <rb_linebuf_get@plt>:
    e54c:	add	ip, pc, #0, 12
    e550:	add	ip, ip, #76, 20	; 0x4c000
    e554:	ldr	pc, [ip, #524]!	; 0x20c

0000e558 <rb_destroy_patricia@plt>:
    e558:	add	ip, pc, #0, 12
    e55c:	add	ip, ip, #76, 20	; 0x4c000
    e560:	ldr	pc, [ip, #516]!	; 0x204

0000e564 <mod_add_path@plt>:
    e564:	add	ip, pc, #0, 12
    e568:	add	ip, ip, #76, 20	; 0x4c000
    e56c:	ldr	pc, [ip, #508]!	; 0x1fc

0000e570 <rb_get_type@plt>:
    e570:	add	ip, pc, #0, 12
    e574:	add	ip, ip, #76, 20	; 0x4c000
    e578:	ldr	pc, [ip, #500]!	; 0x1f4

0000e57c <rb_bind@plt>:
    e57c:	add	ip, pc, #0, 12
    e580:	add	ip, ip, #76, 20	; 0x4c000
    e584:	ldr	pc, [ip, #492]!	; 0x1ec

0000e588 <init_monitor@plt>:
    e588:	add	ip, pc, #0, 12
    e58c:	add	ip, ip, #76, 20	; 0x4c000
    e590:	ldr	pc, [ip, #484]!	; 0x1e4

0000e594 <privilegeset_in_set@plt>:
    e594:	add	ip, pc, #0, 12
    e598:	add	ip, ip, #76, 20	; 0x4c000
    e59c:	ldr	pc, [ip, #476]!	; 0x1dc

0000e5a0 <rb_dictionary_foreach_next@plt>:
    e5a0:	add	ip, pc, #0, 12
    e5a4:	add	ip, ip, #76, 20	; 0x4c000
    e5a8:	ldr	pc, [ip, #468]!	; 0x1d4

0000e5ac <init_cache@plt>:
    e5ac:	add	ip, pc, #0, 12
    e5b0:	add	ip, ip, #76, 20	; 0x4c000
    e5b4:	ldr	pc, [ip, #460]!	; 0x1cc

0000e5b8 <lt_dlsym@plt>:
    e5b8:	add	ip, pc, #0, 12
    e5bc:	add	ip, ip, #76, 20	; 0x4c000
    e5c0:	ldr	pc, [ip, #452]!	; 0x1c4

0000e5c4 <init_client@plt>:
    e5c4:	add	ip, pc, #0, 12
    e5c8:	add	ip, ip, #76, 20	; 0x4c000
    e5cc:	ldr	pc, [ip, #444]!	; 0x1bc

0000e5d0 <conf_end_block@plt>:
    e5d0:	add	ip, pc, #0, 12
    e5d4:	add	ip, ip, #76, 20	; 0x4c000
    e5d8:	ldr	pc, [ip, #436]!	; 0x1b4

0000e5dc <rb_match_string@plt>:
    e5dc:	add	ip, pc, #0, 12
    e5e0:	add	ip, ip, #76, 20	; 0x4c000
    e5e4:	ldr	pc, [ip, #428]!	; 0x1ac

0000e5e8 <init_reject@plt>:
    e5e8:	add	ip, pc, #0, 12
    e5ec:	add	ip, ip, #76, 20	; 0x4c000
    e5f0:	ldr	pc, [ip, #420]!	; 0x1a4

0000e5f4 <check_splitmode@plt>:
    e5f4:	add	ip, pc, #0, 12
    e5f8:	add	ip, ip, #76, 20	; 0x4c000
    e5fc:	ldr	pc, [ip, #412]!	; 0x19c

0000e600 <hash_find_resv@plt>:
    e600:	add	ip, pc, #0, 12
    e604:	add	ip, ip, #76, 20	; 0x4c000
    e608:	ldr	pc, [ip, #404]!	; 0x194

0000e60c <show_ip@plt>:
    e60c:	add	ip, pc, #0, 12
    e610:	add	ip, ip, #76, 20	; 0x4c000
    e614:	ldr	pc, [ip, #396]!	; 0x18c

0000e618 <msgbuf_parse@plt>:
    e618:	add	ip, pc, #0, 12
    e61c:	add	ip, ip, #76, 20	; 0x4c000
    e620:	ldr	pc, [ip, #388]!	; 0x184

0000e624 <rb_radixtree_size@plt>:
    e624:	add	ip, pc, #0, 12
    e628:	add	ip, ip, #76, 20	; 0x4c000
    e62c:	ldr	pc, [ip, #380]!	; 0x17c

0000e630 <privilegeset_unref@plt>:
    e630:	add	ip, pc, #0, 12
    e634:	add	ip, ip, #76, 20	; 0x4c000
    e638:	ldr	pc, [ip, #372]!	; 0x174

0000e63c <umask@plt>:
    e63c:	add	ip, pc, #0, 12
    e640:	add	ip, ip, #76, 20	; 0x4c000
    e644:	ldr	pc, [ip, #364]!	; 0x16c

0000e648 <free_channel_list@plt>:
    e648:	add	ip, pc, #0, 12
    e64c:	add	ip, ip, #76, 20	; 0x4c000
    e650:	ldr	pc, [ip, #356]!	; 0x164

0000e654 <call_hook@plt>:
    e654:	add	ip, pc, #0, 12
    e658:	add	ip, ip, #76, 20	; 0x4c000
    e65c:	ldr	pc, [ip, #348]!	; 0x15c

0000e660 <rb_lib_version@plt>:
    e660:	add	ip, pc, #0, 12
    e664:	add	ip, ip, #76, 20	; 0x4c000
    e668:	ldr	pc, [ip, #340]!	; 0x154

0000e66c <isatty@plt>:
    e66c:	add	ip, pc, #0, 12
    e670:	add	ip, ip, #76, 20	; 0x4c000
    e674:	ldr	pc, [ip, #332]!	; 0x14c

0000e678 <reconstruct_parv@plt>:
    e678:	add	ip, pc, #0, 12
    e67c:	add	ip, ip, #76, 20	; 0x4c000
    e680:	ldr	pc, [ip, #324]!	; 0x144

0000e684 <check_reject@plt>:
    e684:	add	ip, pc, #0, 12
    e688:	add	ip, ip, #76, 20	; 0x4c000
    e68c:	ldr	pc, [ip, #316]!	; 0x13c

0000e690 <start_ssldaemon@plt>:
    e690:	add	ip, pc, #0, 12
    e694:	add	ip, ip, #76, 20	; 0x4c000
    e698:	ldr	pc, [ip, #308]!	; 0x134

0000e69c <init_s_conf@plt>:
    e69c:	add	ip, pc, #0, 12
    e6a0:	add	ip, ip, #76, 20	; 0x4c000
    e6a4:	ldr	pc, [ip, #300]!	; 0x12c

0000e6a8 <fputs@plt>:
    e6a8:	add	ip, pc, #0, 12
    e6ac:	add	ip, ip, #76, 20	; 0x4c000
    e6b0:	ldr	pc, [ip, #292]!	; 0x124

0000e6b4 <mod_add_cmd@plt>:
    e6b4:	add	ip, pc, #0, 12
    e6b8:	add	ip, ip, #76, 20	; 0x4c000
    e6bc:	ldr	pc, [ip, #284]!	; 0x11c

0000e6c0 <conf_report_warning@plt>:
    e6c0:	add	ip, pc, #0, 12
    e6c4:	add	ip, ip, #76, 20	; 0x4c000
    e6c8:	ldr	pc, [ip, #276]!	; 0x114

0000e6cc <abort@plt>:
    e6cc:	add	ip, pc, #0, 12
    e6d0:	add	ip, ip, #76, 20	; 0x4c000
    e6d4:	ldr	pc, [ip, #268]!	; 0x10c

0000e6d8 <check_klines@plt>:
    e6d8:	add	ip, pc, #0, 12
    e6dc:	add	ip, ip, #76, 20	; 0x4c000
    e6e0:	ldr	pc, [ip, #260]!	; 0x104

0000e6e4 <rb_dictionary_retrieve@plt>:
    e6e4:	add	ip, pc, #0, 12
    e6e8:	add	ip, ip, #76, 20	; 0x4c000
    e6ec:	ldr	pc, [ip, #252]!	; 0xfc

0000e6f0 <connid_put@plt>:
    e6f0:	add	ip, pc, #0, 12
    e6f4:	add	ip, ip, #76, 20	; 0x4c000
    e6f8:	ldr	pc, [ip, #244]!	; 0xf4

0000e6fc <get_printable_conf@plt>:
    e6fc:	add	ip, pc, #0, 12
    e700:	add	ip, ip, #76, 20	; 0x4c000
    e704:	ldr	pc, [ip, #236]!	; 0xec

0000e708 <rb_bh_free@plt>:
    e708:	add	ip, pc, #0, 12
    e70c:	add	ip, ip, #76, 20	; 0x4c000
    e710:	ldr	pc, [ip, #228]!	; 0xe4

0000e714 <authd_abort_client@plt>:
    e714:	add	ip, pc, #0, 12
    e718:	add	ip, ip, #76, 20	; 0x4c000
    e71c:	ldr	pc, [ip, #220]!	; 0xdc

0000e720 <BIO_new_file@plt>:
    e720:	add	ip, pc, #0, 12
    e724:	add	ip, ip, #76, 20	; 0x4c000
    e728:	ldr	pc, [ip, #212]!	; 0xd4

0000e72c <close@plt>:
    e72c:	add	ip, pc, #0, 12
    e730:	add	ip, ip, #76, 20	; 0x4c000
    e734:	ldr	pc, [ip, #204]!	; 0xcc

0000e738 <rb_write@plt>:
    e738:	add	ip, pc, #0, 12
    e73c:	add	ip, ip, #76, 20	; 0x4c000
    e740:	ldr	pc, [ip, #196]!	; 0xc4

0000e744 <rb_init_prng@plt>:
    e744:	add	ip, pc, #0, 12
    e748:	add	ip, ip, #76, 20	; 0x4c000
    e74c:	ldr	pc, [ip, #188]!	; 0xbc

0000e750 <irccmp@plt>:
    e750:	add	ip, pc, #0, 12
    e754:	add	ip, ip, #76, 20	; 0x4c000
    e758:	ldr	pc, [ip, #180]!	; 0xb4

0000e75c <closedir@plt>:
    e75c:	add	ip, pc, #0, 12
    e760:	add	ip, ip, #76, 20	; 0x4c000
    e764:	ldr	pc, [ip, #172]!	; 0xac

0000e768 <find_tgchange@plt>:
    e768:	add	ip, pc, #0, 12
    e76c:	add	ip, ip, #76, 20	; 0x4c000
    e770:	ldr	pc, [ip, #164]!	; 0xa4

0000e774 <conf_start_block@plt>:
    e774:	add	ip, pc, #0, 12
    e778:	add	ip, ip, #76, 20	; 0x4c000
    e77c:	ldr	pc, [ip, #156]!	; 0x9c

0000e780 <clear_out_address_conf_bans@plt>:
    e780:	add	ip, pc, #0, 12
    e784:	add	ip, ip, #76, 20	; 0x4c000
    e788:	ldr	pc, [ip, #148]!	; 0x94

0000e78c <find_dline@plt>:
    e78c:	add	ip, pc, #0, 12
    e790:	add	ip, ip, #76, 20	; 0x4c000
    e794:	ldr	pc, [ip, #140]!	; 0x8c

0000e798 <msgbuf_cache_init@plt>:
    e798:	add	ip, pc, #0, 12
    e79c:	add	ip, ip, #76, 20	; 0x4c000
    e7a0:	ldr	pc, [ip, #132]!	; 0x84

0000e7a4 <init_isupport@plt>:
    e7a4:	add	ip, pc, #0, 12
    e7a8:	add	ip, ip, #76, 20	; 0x4c000
    e7ac:	ldr	pc, [ip, #124]!	; 0x7c

0000e7b0 <init_wsockd@plt>:
    e7b0:	add	ip, pc, #0, 12
    e7b4:	add	ip, ip, #76, 20	; 0x4c000
    e7b8:	ldr	pc, [ip, #116]!	; 0x74

0000e7bc <free_class@plt>:
    e7bc:	add	ip, pc, #0, 12
    e7c0:	add	ip, ip, #76, 20	; 0x4c000
    e7c4:	ldr	pc, [ip, #108]!	; 0x6c

0000e7c8 <clean_resv_nick@plt>:
    e7c8:	add	ip, pc, #0, 12
    e7cc:	add	ip, ip, #76, 20	; 0x4c000
    e7d0:	ldr	pc, [ip, #100]!	; 0x64

0000e7d4 <rb_strlcat@plt>:
    e7d4:	add	ip, pc, #0, 12
    e7d8:	add	ip, ip, #76, 20	; 0x4c000
    e7dc:	ldr	pc, [ip, #92]!	; 0x5c

0000e7e0 <__assert_fail@plt>:
    e7e0:	add	ip, pc, #0, 12
    e7e4:	add	ip, ip, #76, 20	; 0x4c000
    e7e8:	ldr	pc, [ip, #84]!	; 0x54

0000e7ec <rb_event_addonce@plt>:
    e7ec:	add	ip, pc, #0, 12
    e7f0:	add	ip, ip, #76, 20	; 0x4c000
    e7f4:	ldr	pc, [ip, #76]!	; 0x4c

0000e7f8 <send_queued@plt>:
    e7f8:	add	ip, pc, #0, 12
    e7fc:	add	ip, ip, #76, 20	; 0x4c000
    e800:	ldr	pc, [ip, #68]!	; 0x44

0000e804 <construct_umodebuf@plt>:
    e804:	add	ip, pc, #0, 12
    e808:	add	ip, ip, #76, 20	; 0x4c000
    e80c:	ldr	pc, [ip, #60]!	; 0x3c

0000e810 <clear_scache_hash_table@plt>:
    e810:	add	ip, pc, #0, 12
    e814:	add	ip, ip, #76, 20	; 0x4c000
    e818:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

0000e820 <call_weak_fn>:
    e820:	ldr	r3, [pc, #20]	; e83c <call_weak_fn+0x1c>
    e824:	ldr	r2, [pc, #20]	; e840 <call_weak_fn+0x20>
    e828:	add	r3, pc, r3
    e82c:	ldr	r2, [r3, r2]
    e830:	cmp	r2, #0
    e834:	bxeq	lr
    e838:	b	dbd4 <__gmon_start__@plt>
    e83c:	.word	0x0004b7d0
    e840:	.word	0x000009c8

0000e844 <deregister_tm_clones>:
    e844:	ldr	r0, [pc, #44]	; e878 <deregister_tm_clones+0x34>
    e848:	ldr	r3, [pc, #44]	; e87c <deregister_tm_clones+0x38>
    e84c:	add	r0, pc, r0
    e850:	add	r3, pc, r3
    e854:	cmp	r3, r0
    e858:	ldr	r3, [pc, #32]	; e880 <deregister_tm_clones+0x3c>
    e85c:	add	r3, pc, r3
    e860:	bxeq	lr
    e864:	ldr	r2, [pc, #24]	; e884 <deregister_tm_clones+0x40>
    e868:	ldr	r3, [r3, r2]
    e86c:	cmp	r3, #0
    e870:	bxeq	lr
    e874:	bx	r3
    e878:	.word	0x0004ea78
    e87c:	.word	0x0004ea74
    e880:	.word	0x0004b79c
    e884:	.word	0x00000894

0000e888 <register_tm_clones>:
    e888:	ldr	r0, [pc, #56]	; e8c8 <register_tm_clones+0x40>
    e88c:	ldr	r3, [pc, #56]	; e8cc <register_tm_clones+0x44>
    e890:	add	r0, pc, r0
    e894:	add	r3, pc, r3
    e898:	sub	r1, r3, r0
    e89c:	ldr	r3, [pc, #44]	; e8d0 <register_tm_clones+0x48>
    e8a0:	asr	r1, r1, #2
    e8a4:	add	r3, pc, r3
    e8a8:	add	r1, r1, r1, lsr #31
    e8ac:	asrs	r1, r1, #1
    e8b0:	bxeq	lr
    e8b4:	ldr	r2, [pc, #24]	; e8d4 <register_tm_clones+0x4c>
    e8b8:	ldr	r3, [r3, r2]
    e8bc:	cmp	r3, #0
    e8c0:	bxeq	lr
    e8c4:	bx	r3
    e8c8:	.word	0x0004ea34
    e8cc:	.word	0x0004ea30
    e8d0:	.word	0x0004b754
    e8d4:	.word	0x00000b34

0000e8d8 <__do_global_dtors_aux>:
    e8d8:	ldr	r3, [pc, #76]	; e92c <__do_global_dtors_aux+0x54>
    e8dc:	ldr	r2, [pc, #76]	; e930 <__do_global_dtors_aux+0x58>
    e8e0:	add	r3, pc, r3
    e8e4:	add	r2, pc, r2
    e8e8:	ldrb	r3, [r3]
    e8ec:	cmp	r3, #0
    e8f0:	bxne	lr
    e8f4:	ldr	r3, [pc, #56]	; e934 <__do_global_dtors_aux+0x5c>
    e8f8:	push	{r4, lr}
    e8fc:	ldr	r3, [r2, r3]
    e900:	cmp	r3, #0
    e904:	beq	e914 <__do_global_dtors_aux+0x3c>
    e908:	ldr	r3, [pc, #40]	; e938 <__do_global_dtors_aux+0x60>
    e90c:	ldr	r0, [pc, r3]
    e910:	bl	d0f4 <__cxa_finalize@plt>
    e914:	bl	e844 <deregister_tm_clones>
    e918:	ldr	r3, [pc, #28]	; e93c <__do_global_dtors_aux+0x64>
    e91c:	mov	r2, #1
    e920:	add	r3, pc, r3
    e924:	strb	r2, [r3]
    e928:	pop	{r4, pc}
    e92c:	.word	0x0004e9e8
    e930:	.word	0x0004b714
    e934:	.word	0x00000884
    e938:	.word	0x0004c27c
    e93c:	.word	0x0004e9a8

0000e940 <frame_dummy>:
    e940:	b	e888 <register_tm_clones>

0000e944 <init_authd>:
    e944:	push	{fp, lr}
    e948:	mov	fp, sp
    e94c:	bl	e980 <start_authd>
    e950:	cmp	r0, #0
    e954:	popeq	{fp, pc}
    e958:	bl	de38 <__errno_location@plt>
    e95c:	ldr	r0, [r0]
    e960:	bl	dacc <strerror@plt>
    e964:	mov	r1, r0
    e968:	ldr	r0, [pc, #12]	; e97c <init_authd+0x38>
    e96c:	add	r0, pc, r0
    e970:	bl	d64c <ierror@plt>
    e974:	mov	r0, #0
    e978:	bl	dc34 <exit@plt>
    e97c:	.word	0x000318bc

0000e980 <start_authd>:
    e980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e984:	add	fp, sp, #24
    e988:	sub	sp, sp, #16
    e98c:	sub	sp, sp, #4096	; 0x1000
    e990:	ldr	r0, [pc, #524]	; eba4 <start_authd+0x224>
    e994:	ldr	r0, [pc, r0]
    e998:	cmp	r0, #0
    e99c:	bne	ea48 <start_authd+0xc8>
    e9a0:	ldr	r6, [pc, #512]	; eba8 <start_authd+0x228>
    e9a4:	ldr	r6, [pc, r6]
    e9a8:	ldr	r3, [r6, #60]	; 0x3c
    e9ac:	ldr	r5, [pc, #504]	; ebac <start_authd+0x22c>
    e9b0:	add	r5, pc, r5
    e9b4:	mov	r7, #47	; 0x2f
    e9b8:	str	r7, [sp]
    e9bc:	str	r5, [sp, #4]
    e9c0:	add	r4, sp, #15
    e9c4:	ldr	r2, [pc, #484]	; ebb0 <start_authd+0x230>
    e9c8:	add	r2, pc, r2
    e9cc:	mov	r0, r4
    e9d0:	movw	r1, #4097	; 0x1001
    e9d4:	bl	de74 <snprintf@plt>
    e9d8:	mov	r0, r4
    e9dc:	mov	r1, #1
    e9e0:	bl	e09c <access@plt>
    e9e4:	cmn	r0, #1
    e9e8:	bne	ea34 <start_authd+0xb4>
    e9ec:	ldr	r8, [pc, #448]	; ebb4 <start_authd+0x234>
    e9f0:	ldr	r8, [pc, r8]
    e9f4:	ldr	r3, [r8]
    e9f8:	str	r7, [sp]
    e9fc:	str	r7, [sp, #4]
    ea00:	str	r5, [sp, #8]
    ea04:	add	r5, sp, #15
    ea08:	ldr	r2, [pc, #424]	; ebb8 <start_authd+0x238>
    ea0c:	add	r2, pc, r2
    ea10:	mov	r0, r5
    ea14:	movw	r1, #4097	; 0x1001
    ea18:	bl	de74 <snprintf@plt>
    ea1c:	mov	r4, #1
    ea20:	mov	r0, r5
    ea24:	mov	r1, #1
    ea28:	bl	e09c <access@plt>
    ea2c:	cmn	r0, #1
    ea30:	beq	eb6c <start_authd+0x1ec>
    ea34:	add	r0, sp, #15
    ea38:	bl	f424 <rb_strdup>
    ea3c:	ldr	r1, [pc, #380]	; ebc0 <start_authd+0x240>
    ea40:	add	r1, pc, r1
    ea44:	str	r0, [r1]
    ea48:	ldr	r0, [pc, #372]	; ebc4 <start_authd+0x244>
    ea4c:	ldr	r0, [pc, r0]
    ea50:	cmp	r0, #0
    ea54:	bne	ea78 <start_authd+0xf8>
    ea58:	ldr	r0, [pc, #360]	; ebc8 <start_authd+0x248>
    ea5c:	add	r0, pc, r0
    ea60:	ldr	r1, [pc, #356]	; ebcc <start_authd+0x24c>
    ea64:	add	r1, pc, r1
    ea68:	bl	dfb8 <rb_dictionary_create@plt>
    ea6c:	ldr	r1, [pc, #348]	; ebd0 <start_authd+0x250>
    ea70:	add	r1, pc, r1
    ea74:	str	r0, [r1]
    ea78:	ldr	r0, [pc, #340]	; ebd4 <start_authd+0x254>
    ea7c:	ldr	r0, [pc, r0]
    ea80:	cmp	r0, #0
    ea84:	bne	eab0 <start_authd+0x130>
    ea88:	ldr	r0, [pc, #328]	; ebd8 <start_authd+0x258>
    ea8c:	add	r0, pc, r0
    ea90:	ldr	r1, [pc, #324]	; ebdc <start_authd+0x25c>
    ea94:	add	r1, pc, r1
    ea98:	mov	r2, #0
    ea9c:	mov	r3, #1
    eaa0:	bl	d220 <rb_event_addish@plt>
    eaa4:	ldr	r1, [pc, #308]	; ebe0 <start_authd+0x260>
    eaa8:	add	r1, pc, r1
    eaac:	str	r0, [r1]
    eab0:	ldr	r1, [pc, #300]	; ebe4 <start_authd+0x264>
    eab4:	ldr	r1, [pc, r1]
    eab8:	ldr	r0, [pc, #296]	; ebe8 <start_authd+0x268>
    eabc:	add	r0, pc, r0
    eac0:	ldr	r2, [pc, #292]	; ebec <start_authd+0x26c>
    eac4:	add	r2, pc, r2
    eac8:	ldr	r3, [pc, #288]	; ebf0 <start_authd+0x270>
    eacc:	add	r3, pc, r3
    ead0:	bl	e48c <rb_helper_start@plt>
    ead4:	ldr	r6, [pc, #280]	; ebf4 <start_authd+0x274>
    ead8:	ldr	r6, [pc, r6]
    eadc:	str	r0, [r6]
    eae0:	cmp	r0, #0
    eae4:	beq	eb1c <start_authd+0x19c>
    eae8:	mov	r4, #0
    eaec:	ldr	r5, [pc, #264]	; ebfc <start_authd+0x27c>
    eaf0:	add	r5, pc, r5
    eaf4:	mov	r0, #0
    eaf8:	mov	r1, r5
    eafc:	bl	e0b4 <ilog@plt>
    eb00:	mov	r0, #256	; 0x100
    eb04:	mov	r1, #0
    eb08:	mov	r2, r5
    eb0c:	bl	d640 <sendto_realops_snomask@plt>
    eb10:	ldr	r0, [r6]
    eb14:	bl	de5c <rb_helper_run@plt>
    eb18:	b	eb60 <start_authd+0x1e0>
    eb1c:	bl	de38 <__errno_location@plt>
    eb20:	mov	r4, r0
    eb24:	ldr	r0, [r0]
    eb28:	bl	dacc <strerror@plt>
    eb2c:	mov	r1, r0
    eb30:	ldr	r5, [pc, #192]	; ebf8 <start_authd+0x278>
    eb34:	add	r5, pc, r5
    eb38:	mov	r0, r5
    eb3c:	bl	d64c <ierror@plt>
    eb40:	ldr	r0, [r4]
    eb44:	bl	dacc <strerror@plt>
    eb48:	mov	r3, r0
    eb4c:	mov	r0, #256	; 0x100
    eb50:	mov	r1, #0
    eb54:	mov	r2, r5
    eb58:	bl	d640 <sendto_realops_snomask@plt>
    eb5c:	mov	r4, #1
    eb60:	mov	r0, r4
    eb64:	sub	sp, fp, #24
    eb68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    eb6c:	ldr	r2, [r8]
    eb70:	ldr	r1, [r6, #60]	; 0x3c
    eb74:	ldr	r5, [pc, #64]	; ebbc <start_authd+0x23c>
    eb78:	add	r5, pc, r5
    eb7c:	mov	r0, r5
    eb80:	bl	d64c <ierror@plt>
    eb84:	ldr	r3, [r6, #60]	; 0x3c
    eb88:	ldr	r0, [r8]
    eb8c:	str	r0, [sp]
    eb90:	mov	r0, #256	; 0x100
    eb94:	mov	r1, #0
    eb98:	mov	r2, r5
    eb9c:	bl	d640 <sendto_realops_snomask@plt>
    eba0:	b	eb60 <start_authd+0x1e0>
    eba4:	.word	0x0004e93c
    eba8:	.word	0x0004c0a4
    ebac:	.word	0x00036e55
    ebb0:	.word	0x000319a6
    ebb4:	.word	0x0004c18c
    ebb8:	.word	0x0003196e
    ebbc:	.word	0x00031813
    ebc0:	.word	0x0004e890
    ebc4:	.word	0x0004e880
    ebc8:	.word	0x00031957
    ebcc:	.word	0x00000fc8
    ebd0:	.word	0x0004e85c
    ebd4:	.word	0x0004e858
    ebd8:	.word	0x00031940
    ebdc:	.word	0x00000fa0
    ebe0:	.word	0x0004e82c
    ebe4:	.word	0x0004e81c
    ebe8:	.word	0x0003192b
    ebec:	.word	0x00001068
    ebf0:	.word	0x000003e0
    ebf4:	.word	0x0004bf30
    ebf8:	.word	0x000316f4
    ebfc:	.word	0x000318fd

0000ec00 <configure_authd>:
    ec00:	push	{r4, r5, r6, sl, fp, lr}
    ec04:	add	fp, sp, #16
    ec08:	ldr	r0, [pc, #280]	; ed28 <configure_authd+0x128>
    ec0c:	ldr	r0, [pc, r0]
    ec10:	ldr	r1, [r0, #12]
    ec14:	ldr	r0, [pc, #272]	; ed2c <configure_authd+0x12c>
    ec18:	add	r0, pc, r0
    ec1c:	bl	e3f0 <set_authd_timeout@plt>
    ec20:	ldr	r4, [pc, #264]	; ed30 <configure_authd+0x130>
    ec24:	ldr	r4, [pc, r4]
    ec28:	ldr	r1, [r4, #272]	; 0x110
    ec2c:	ldr	r0, [pc, #256]	; ed34 <configure_authd+0x134>
    ec30:	add	r0, pc, r0
    ec34:	bl	e3f0 <set_authd_timeout@plt>
    ec38:	ldr	r1, [r4, #272]	; 0x110
    ec3c:	ldr	r0, [pc, #244]	; ed38 <configure_authd+0x138>
    ec40:	add	r0, pc, r0
    ec44:	bl	e3f0 <set_authd_timeout@plt>
    ec48:	ldr	r0, [r4, #264]	; 0x108
    ec4c:	clz	r0, r0
    ec50:	lsr	r0, r0, #5
    ec54:	bl	e36c <ident_check_enable@plt>
    ec58:	ldr	r5, [pc, #220]	; ed3c <configure_authd+0x13c>
    ec5c:	ldr	r5, [pc, r5]
    ec60:	ldr	r0, [r5, #8]
    ec64:	cmp	r0, #0
    ec68:	ldrne	r4, [pc, #208]	; ed40 <configure_authd+0x140>
    ec6c:	ldrne	r4, [pc, r4]
    ec70:	ldrbne	r1, [r4]
    ec74:	ldrbne	r0, [r4, #56]	; 0x38
    ec78:	orrsne	r2, r0, r1
    ec7c:	bne	ec8c <configure_authd+0x8c>
    ec80:	mov	r0, #0
    ec84:	pop	{r4, r5, r6, sl, fp, lr}
    ec88:	b	edc4 <opm_check_enable>
    ec8c:	cmp	r1, #0
    ec90:	beq	ecb8 <configure_authd+0xb8>
    ec94:	ldrh	r3, [r4, #54]	; 0x36
    ec98:	ldr	r0, [pc, #164]	; ed44 <configure_authd+0x144>
    ec9c:	ldr	r0, [pc, r0]
    eca0:	ldr	r0, [r0]
    eca4:	ldr	r1, [pc, #156]	; ed48 <configure_authd+0x148>
    eca8:	add	r1, pc, r1
    ecac:	mov	r2, r4
    ecb0:	bl	d148 <rb_helper_write@plt>
    ecb4:	ldrb	r0, [r4, #56]	; 0x38
    ecb8:	cmp	r0, #0
    ecbc:	beq	ece0 <configure_authd+0xe0>
    ecc0:	ldrh	r3, [r4, #110]	; 0x6e
    ecc4:	ldr	r0, [pc, #128]	; ed4c <configure_authd+0x14c>
    ecc8:	ldr	r0, [pc, r0]
    eccc:	ldr	r0, [r0]
    ecd0:	add	r2, r4, #56	; 0x38
    ecd4:	ldr	r1, [pc, #116]	; ed50 <configure_authd+0x150>
    ecd8:	add	r1, pc, r1
    ecdc:	bl	d148 <rb_helper_write@plt>
    ece0:	ldr	r5, [r5]
    ece4:	cmp	r5, #0
    ece8:	beq	ed1c <configure_authd+0x11c>
    ecec:	ldr	r6, [pc, #96]	; ed54 <configure_authd+0x154>
    ecf0:	ldr	r6, [pc, r6]
    ecf4:	ldr	r4, [pc, #92]	; ed58 <configure_authd+0x158>
    ecf8:	add	r4, pc, r4
    ecfc:	ldr	r0, [r6]
    ed00:	ldr	r2, [r5]
    ed04:	ldrh	r3, [r2, #16]
    ed08:	mov	r1, r4
    ed0c:	bl	d148 <rb_helper_write@plt>
    ed10:	ldr	r5, [r5, #8]
    ed14:	cmp	r5, #0
    ed18:	bne	ecfc <configure_authd+0xfc>
    ed1c:	mov	r0, #1
    ed20:	pop	{r4, r5, r6, sl, fp, lr}
    ed24:	b	edc4 <opm_check_enable>
    ed28:	.word	0x0004bc4c
    ed2c:	.word	0x00035b20
    ed30:	.word	0x0004bf58
    ed34:	.word	0x00031619
    ed38:	.word	0x00031616
    ed3c:	.word	0x0004beb4
    ed40:	.word	0x0004be64
    ed44:	.word	0x0004bd6c
    ed48:	.word	0x000315ba
    ed4c:	.word	0x0004bd40
    ed50:	.word	0x0003158a
    ed54:	.word	0x0004bd18
    ed58:	.word	0x00031580

0000ed5c <set_authd_timeout>:
    ed5c:	cmp	r1, #1
    ed60:	movlt	r0, #0
    ed64:	bxlt	lr
    ed68:	push	{fp, lr}
    ed6c:	mov	fp, sp
    ed70:	mov	r3, r1
    ed74:	mov	r2, r0
    ed78:	ldr	r0, [pc, #24]	; ed98 <set_authd_timeout+0x3c>
    ed7c:	ldr	r0, [pc, r0]
    ed80:	ldr	r0, [r0]
    ed84:	ldr	r1, [pc, #16]	; ed9c <set_authd_timeout+0x40>
    ed88:	add	r1, pc, r1
    ed8c:	bl	d148 <rb_helper_write@plt>
    ed90:	mov	r0, #1
    ed94:	pop	{fp, pc}
    ed98:	.word	0x0004bc8c
    ed9c:	.word	0x00031574

0000eda0 <ident_check_enable>:
    eda0:	mov	r2, r0
    eda4:	ldr	r0, [pc, #16]	; edbc <ident_check_enable+0x1c>
    eda8:	ldr	r0, [pc, r0]
    edac:	ldr	r0, [r0]
    edb0:	ldr	r1, [pc, #8]	; edc0 <ident_check_enable+0x20>
    edb4:	add	r1, pc, r1
    edb8:	b	d148 <rb_helper_write@plt>
    edbc:	.word	0x0004bc60
    edc0:	.word	0x00031550

0000edc4 <opm_check_enable>:
    edc4:	mov	r2, r0
    edc8:	ldr	r0, [pc, #16]	; ede0 <opm_check_enable+0x1c>
    edcc:	ldr	r0, [pc, r0]
    edd0:	ldr	r0, [r0]
    edd4:	ldr	r1, [pc, #8]	; ede4 <opm_check_enable+0x20>
    edd8:	add	r1, pc, r1
    eddc:	b	d148 <rb_helper_write@plt>
    ede0:	.word	0x0004bc3c
    ede4:	.word	0x00031556

0000ede8 <authd_abort_client>:
    ede8:	push	{r4, sl, fp, lr}
    edec:	add	fp, sp, #8
    edf0:	mov	r4, r0
    edf4:	ldr	r0, [r0, #436]	; 0x1b4
    edf8:	ldr	r1, [r0, #108]	; 0x6c
    edfc:	ldr	r0, [pc, #16]	; ee14 <authd_abort_client+0x2c>
    ee00:	ldr	r0, [pc, r0]
    ee04:	bl	d838 <rb_dictionary_delete@plt>
    ee08:	mov	r0, r4
    ee0c:	pop	{r4, sl, fp, lr}
    ee10:	b	ee18 <authd_free_client>
    ee14:	.word	0x0004e4cc

0000ee18 <authd_free_client>:
    ee18:	push	{r4, sl, fp, lr}
    ee1c:	add	fp, sp, #8
    ee20:	cmp	r0, #0
    ee24:	popeq	{r4, sl, fp, pc}
    ee28:	mov	r4, r0
    ee2c:	ldr	r0, [r0, #436]	; 0x1b4
    ee30:	cmp	r0, #0
    ee34:	ldrne	r2, [r0, #108]	; 0x6c
    ee38:	cmpne	r2, #0
    ee3c:	bne	ee44 <authd_free_client+0x2c>
    ee40:	pop	{r4, sl, fp, pc}
    ee44:	ldr	r0, [pc, #48]	; ee7c <authd_free_client+0x64>
    ee48:	ldr	r0, [pc, r0]
    ee4c:	ldr	r0, [r0]
    ee50:	cmp	r0, #0
    ee54:	beq	ee64 <authd_free_client+0x4c>
    ee58:	ldr	r1, [pc, #32]	; ee80 <authd_free_client+0x68>
    ee5c:	add	r1, pc, r1
    ee60:	bl	d148 <rb_helper_write@plt>
    ee64:	ldr	r0, [r4, #436]	; 0x1b4
    ee68:	mov	r1, #0
    ee6c:	str	r1, [r0, #108]	; 0x6c
    ee70:	mov	r1, #1
    ee74:	strb	r1, [r0, #116]	; 0x74
    ee78:	pop	{r4, sl, fp, pc}
    ee7c:	.word	0x0004bbc0
    ee80:	.word	0x0003171f

0000ee84 <restart_authd>:
    ee84:	push	{fp, lr}
    ee88:	mov	fp, sp
    ee8c:	ldr	r0, [pc, #24]	; eeac <restart_authd+0x28>
    ee90:	add	r0, pc, r0
    ee94:	bl	d64c <ierror@plt>
    ee98:	ldr	r0, [pc, #16]	; eeb0 <restart_authd+0x2c>
    ee9c:	ldr	r0, [pc, r0]
    eea0:	ldr	r0, [r0]
    eea4:	pop	{fp, lr}
    eea8:	b	eeb4 <restart_authd_cb>
    eeac:	.word	0x000313fd
    eeb0:	.word	0x0004bb6c

0000eeb4 <restart_authd_cb>:
    eeb4:	push	{r4, r5, r6, sl, fp, lr}
    eeb8:	add	fp, sp, #16
    eebc:	mov	r4, r0
    eec0:	ldr	r5, [pc, #104]	; ef30 <restart_authd_cb+0x7c>
    eec4:	add	r5, pc, r5
    eec8:	mov	r0, r5
    eecc:	bl	d3ac <iwarn@plt>
    eed0:	mov	r6, #0
    eed4:	mov	r0, #256	; 0x100
    eed8:	mov	r1, #0
    eedc:	mov	r2, r5
    eee0:	bl	d640 <sendto_realops_snomask@plt>
    eee4:	cmp	r4, #0
    eee8:	beq	ef00 <restart_authd_cb+0x4c>
    eeec:	mov	r0, r4
    eef0:	bl	d19c <rb_helper_close@plt>
    eef4:	ldr	r0, [pc, #56]	; ef34 <restart_authd_cb+0x80>
    eef8:	ldr	r0, [pc, r0]
    eefc:	str	r6, [r0]
    ef00:	ldr	r0, [pc, #48]	; ef38 <restart_authd_cb+0x84>
    ef04:	ldr	r0, [pc, r0]
    ef08:	ldr	r1, [pc, #44]	; ef3c <restart_authd_cb+0x88>
    ef0c:	add	r1, pc, r1
    ef10:	mov	r2, #0
    ef14:	bl	e0cc <rb_dictionary_destroy@plt>
    ef18:	ldr	r0, [pc, #32]	; ef40 <restart_authd_cb+0x8c>
    ef1c:	add	r0, pc, r0
    ef20:	str	r6, [r0]
    ef24:	bl	e980 <start_authd>
    ef28:	pop	{r4, r5, r6, sl, fp, lr}
    ef2c:	b	ec00 <configure_authd>
    ef30:	.word	0x000316bc
    ef34:	.word	0x0004bb10
    ef38:	.word	0x0004e3c8
    ef3c:	.word	0x00001068
    ef40:	.word	0x0004e3b0

0000ef44 <rehash_authd>:
    ef44:	ldr	r0, [pc, #16]	; ef5c <rehash_authd+0x18>
    ef48:	ldr	r0, [pc, r0]
    ef4c:	ldr	r0, [r0]
    ef50:	ldr	r1, [pc, #8]	; ef60 <rehash_authd+0x1c>
    ef54:	add	r1, pc, r1
    ef58:	b	d148 <rb_helper_write@plt>
    ef5c:	.word	0x0004bac0
    ef60:	.word	0x000370be

0000ef64 <check_authd>:
    ef64:	ldr	r0, [pc, #16]	; ef7c <check_authd+0x18>
    ef68:	ldr	r0, [pc, r0]
    ef6c:	ldr	r0, [r0]
    ef70:	cmp	r0, #0
    ef74:	bxne	lr
    ef78:	b	ee84 <restart_authd>
    ef7c:	.word	0x0004baa0

0000ef80 <authd_initiate_client>:
    ef80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef84:	add	fp, sp, #28
    ef88:	sub	sp, sp, #124	; 0x7c
    ef8c:	mov	r5, r0
    ef90:	ldr	r0, [r0, #436]	; 0x1b4
    ef94:	cmp	r0, #0
    ef98:	beq	efa8 <authd_initiate_client+0x28>
    ef9c:	ldr	r0, [r0, #108]	; 0x6c
    efa0:	cmp	r0, #0
    efa4:	beq	efb0 <authd_initiate_client+0x30>
    efa8:	sub	sp, fp, #28
    efac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    efb0:	mov	r6, r1
    efb4:	bl	f09c <generate_cid>
    efb8:	mov	r4, r0
    efbc:	ldr	r0, [r5, #436]	; 0x1b4
    efc0:	str	r4, [r0, #108]	; 0x6c
    efc4:	ldr	r0, [pc, #192]	; f08c <authd_initiate_client+0x10c>
    efc8:	ldr	r0, [pc, r0]
    efcc:	mov	r1, r4
    efd0:	mov	r2, r5
    efd4:	bl	d70c <rb_dictionary_add@plt>
    efd8:	ldr	r0, [r5, #436]	; 0x1b4
    efdc:	add	r0, r0, #132	; 0x84
    efe0:	add	r1, sp, #16
    efe4:	mov	r2, #54	; 0x36
    efe8:	bl	cf50 <rb_inet_ntop_sock@plt>
    efec:	ldr	r0, [r5, #432]	; 0x1b0
    eff0:	add	r0, r0, #140	; 0x8c
    eff4:	add	r8, sp, #70	; 0x46
    eff8:	mov	r1, r8
    effc:	mov	r2, #54	; 0x36
    f000:	bl	cf50 <rb_inet_ntop_sock@plt>
    f004:	ldr	r7, [r5, #436]	; 0x1b4
    f008:	ldrh	r0, [r7, #134]	; 0x86
    f00c:	bl	f0bc <__bswap_16>
    f010:	mov	r9, r0
    f014:	ldr	r0, [r5, #432]	; 0x1b0
    f018:	ldrh	r0, [r0, #142]	; 0x8e
    f01c:	bl	f0bc <__bswap_16>
    f020:	mov	sl, r0
    f024:	cmp	r6, #0
    f028:	ldrne	r0, [r7, #128]	; 0x80
    f02c:	orrne	r0, r0, #1
    f030:	strne	r0, [r7, #128]	; 0x80
    f034:	bl	d07c <rb_current_time@plt>
    f038:	ldr	r1, [pc, #80]	; f090 <authd_initiate_client+0x110>
    f03c:	ldr	r1, [pc, r1]
    f040:	ldr	r1, [r1, #272]	; 0x110
    f044:	add	r0, r0, r1
    f048:	add	r0, r0, #10
    f04c:	ldr	r1, [r5, #436]	; 0x1b4
    f050:	str	r0, [r1, #112]	; 0x70
    f054:	ldr	r0, [pc, #56]	; f094 <authd_initiate_client+0x114>
    f058:	ldr	r0, [pc, r0]
    f05c:	ldr	r0, [r0]
    f060:	mov	r1, #6
    f064:	str	r9, [sp]
    f068:	stmib	sp, {r8, sl}
    f06c:	str	r1, [sp, #12]
    f070:	ldr	r1, [pc, #32]	; f098 <authd_initiate_client+0x118>
    f074:	add	r1, pc, r1
    f078:	add	r3, sp, #16
    f07c:	mov	r2, r4
    f080:	bl	d148 <rb_helper_write@plt>
    f084:	sub	sp, fp, #28
    f088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f08c:	.word	0x0004e304
    f090:	.word	0x0004bb40
    f094:	.word	0x0004b9b0
    f098:	.word	0x0003122d

0000f09c <generate_cid>:
    f09c:	ldr	r1, [pc, #20]	; f0b8 <generate_cid+0x1c>
    f0a0:	ldr	r1, [pc, r1]
    f0a4:	ldr	r0, [r1]
    f0a8:	adds	r0, r0, #1
    f0ac:	movweq	r0, #1
    f0b0:	str	r0, [r1]
    f0b4:	bx	lr
    f0b8:	.word	0x0004bae4

0000f0bc <__bswap_16>:
    f0bc:	rev16	r0, r0
    f0c0:	bx	lr

0000f0c4 <authd_deferred_client>:
    f0c4:	ldr	r1, [r0, #436]	; 0x1b4
    f0c8:	ldr	r2, [r1, #128]	; 0x80
    f0cc:	bic	r3, r2, #1
    f0d0:	str	r3, [r1, #128]	; 0x80
    f0d4:	tst	r2, #2
    f0d8:	bxeq	lr
    f0dc:	b	f0e0 <authd_read_client>

0000f0e0 <authd_read_client>:
    f0e0:	push	{r4, sl, fp, lr}
    f0e4:	add	fp, sp, #8
    f0e8:	mov	r4, r0
    f0ec:	mov	r1, r0
    f0f0:	bl	ff84 <rb_dlinkAddTail>
    f0f4:	ldr	r0, [r4, #432]	; 0x1b0
    f0f8:	ldr	r0, [r0, #300]	; 0x12c
    f0fc:	mov	r1, r4
    f100:	pop	{r4, sl, fp, lr}
    f104:	b	d76c <read_packet@plt>

0000f108 <authd_accept_client>:
    f108:	push	{fp, lr}
    f10c:	mov	fp, sp
    f110:	sub	sp, sp, #16
    f114:	mov	r3, #0
    f118:	str	r3, [sp]
    f11c:	str	r3, [sp, #4]
    f120:	str	r3, [sp, #8]
    f124:	mov	r3, #1
    f128:	bl	f134 <authd_decide_client>
    f12c:	mov	sp, fp
    f130:	pop	{fp, pc}

0000f134 <authd_decide_client>:
    f134:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f138:	add	fp, sp, #24
    f13c:	mov	r4, r0
    f140:	ldr	r0, [r0, #436]	; 0x1b4
    f144:	cmp	r0, #0
    f148:	ldrne	r0, [r0, #108]	; 0x6c
    f14c:	cmpne	r0, #0
    f150:	bne	f158 <authd_decide_client+0x24>
    f154:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    f158:	mov	r6, r3
    f15c:	mov	r5, r2
    f160:	ldr	r8, [fp, #16]
    f164:	ldr	r7, [fp, #12]
    f168:	ldr	r9, [fp, #8]
    f16c:	ldrb	r0, [r1]
    f170:	cmp	r0, #42	; 0x2a
    f174:	bne	f190 <authd_decide_client+0x5c>
    f178:	ldr	r0, [pc, #220]	; f25c <authd_decide_client+0x128>
    f17c:	ldr	r0, [pc, r0]
    f180:	ldr	r1, [r0, #104]	; 0x68
    f184:	add	r1, r1, #1
    f188:	str	r1, [r0, #104]	; 0x68
    f18c:	b	f1bc <authd_decide_client+0x88>
    f190:	add	r0, r4, #152	; 0x98
    f194:	mov	r2, #11
    f198:	bl	e510 <rb_strlcpy@plt>
    f19c:	ldr	r0, [r4, #64]	; 0x40
    f1a0:	orr	r0, r0, #128	; 0x80
    f1a4:	str	r0, [r4, #64]	; 0x40
    f1a8:	ldr	r0, [pc, #168]	; f258 <authd_decide_client+0x124>
    f1ac:	ldr	r0, [pc, r0]
    f1b0:	ldr	r1, [r0, #100]	; 0x64
    f1b4:	add	r1, r1, #1
    f1b8:	str	r1, [r0, #100]	; 0x64
    f1bc:	ldrb	r0, [r5]
    f1c0:	cmp	r0, #42	; 0x2a
    f1c4:	beq	f1d8 <authd_decide_client+0xa4>
    f1c8:	add	r0, r4, #163	; 0xa3
    f1cc:	mov	r1, r5
    f1d0:	mov	r2, #64	; 0x40
    f1d4:	bl	e510 <rb_strlcpy@plt>
    f1d8:	ldr	r0, [r4, #436]	; 0x1b4
    f1dc:	ldr	r1, [r0, #108]	; 0x6c
    f1e0:	ldr	r0, [pc, #120]	; f260 <authd_decide_client+0x12c>
    f1e4:	ldr	r0, [pc, r0]
    f1e8:	bl	d838 <rb_dictionary_delete@plt>
    f1ec:	ldr	r0, [r4, #436]	; 0x1b4
    f1f0:	strb	r9, [r0, #117]	; 0x75
    f1f4:	strb	r6, [r0, #116]	; 0x74
    f1f8:	mov	r5, #0
    f1fc:	cmp	r7, #0
    f200:	mov	r0, #0
    f204:	movne	r0, r7
    f208:	blne	f424 <rb_strdup>
    f20c:	ldr	r1, [r4, #436]	; 0x1b4
    f210:	str	r0, [r1, #120]	; 0x78
    f214:	cmp	r8, #0
    f218:	beq	f228 <authd_decide_client+0xf4>
    f21c:	mov	r0, r8
    f220:	bl	f424 <rb_strdup>
    f224:	mov	r5, r0
    f228:	ldr	r0, [r4, #436]	; 0x1b4
    f22c:	mov	r1, #0
    f230:	str	r1, [r0, #108]	; 0x6c
    f234:	str	r5, [r0, #124]	; 0x7c
    f238:	ldr	r1, [r0, #128]	; 0x80
    f23c:	orr	r2, r1, #2
    f240:	str	r2, [r0, #128]	; 0x80
    f244:	tst	r1, #1
    f248:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    f24c:	mov	r0, r4
    f250:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    f254:	b	f0e0 <authd_read_client>
    f258:	.word	0x0004b810
    f25c:	.word	0x0004b840
    f260:	.word	0x0004e0e8

0000f264 <authd_reject_client>:
    f264:	push	{fp, lr}
    f268:	mov	fp, sp
    f26c:	sub	sp, sp, #16
    f270:	str	r3, [sp]
    f274:	ldr	r3, [fp, #12]
    f278:	str	r3, [sp, #8]
    f27c:	ldr	r3, [fp, #8]
    f280:	str	r3, [sp, #4]
    f284:	mov	r3, #0
    f288:	bl	f134 <authd_decide_client>
    f28c:	mov	sp, fp
    f290:	pop	{fp, pc}

0000f294 <add_dnsbl_entry>:
    f294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f298:	add	fp, sp, #28
    f29c:	sub	sp, sp, #540	; 0x21c
    f2a0:	mov	r8, r3
    f2a4:	mov	r9, r2
    f2a8:	mov	sl, r1
    f2ac:	mov	r6, r0
    f2b0:	mov	r0, #12
    f2b4:	bl	f404 <rb_malloc>
    f2b8:	mov	r7, r0
    f2bc:	add	r5, sp, #24
    f2c0:	add	r0, r5, #1
    f2c4:	mov	r1, #0
    f2c8:	movw	r2, #511	; 0x1ff
    f2cc:	bl	df28 <memset@plt>
    f2d0:	mov	r0, #42	; 0x2a
    f2d4:	strb	r0, [sp, #24]
    f2d8:	ldr	r4, [pc, #264]	; f3e8 <add_dnsbl_entry+0x154>
    f2dc:	ldr	r4, [pc, r4]
    f2e0:	ldr	r0, [r4]
    f2e4:	cmp	r0, #0
    f2e8:	bne	f304 <add_dnsbl_entry+0x70>
    f2ec:	ldr	r1, [pc, #248]	; f3ec <add_dnsbl_entry+0x158>
    f2f0:	ldr	r1, [pc, r1]
    f2f4:	ldr	r0, [pc, #244]	; f3f0 <add_dnsbl_entry+0x15c>
    f2f8:	add	r0, pc, r0
    f2fc:	bl	dfb8 <rb_dictionary_create@plt>
    f300:	str	r0, [r4]
    f304:	ldr	r8, [r8]
    f308:	cmp	r8, #0
    f30c:	mov	r4, sl
    f310:	beq	f388 <add_dnsbl_entry+0xf4>
    f314:	add	r0, sp, #12
    f318:	stm	r0, {r4, r6, r9}
    f31c:	mov	r9, #0
    f320:	ldr	r6, [pc, #204]	; f3f4 <add_dnsbl_entry+0x160>
    f324:	add	r6, pc, r6
    f328:	ldr	r4, [r8]
    f32c:	mov	r0, r4
    f330:	bl	dc94 <strlen@plt>
    f334:	add	r0, r9, r0
    f338:	add	sl, r0, #1
    f33c:	cmp	sl, #512	; 0x200
    f340:	bhi	f36c <add_dnsbl_entry+0xd8>
    f344:	add	r0, r5, r9
    f348:	rsb	r1, r9, #512	; 0x200
    f34c:	mov	r2, r6
    f350:	mov	r3, r4
    f354:	bl	de74 <snprintf@plt>
    f358:	ldr	r8, [r8, #8]
    f35c:	cmp	r8, #0
    f360:	mov	r9, sl
    f364:	bne	f328 <add_dnsbl_entry+0x94>
    f368:	b	f370 <add_dnsbl_entry+0xdc>
    f36c:	mov	sl, r9
    f370:	cmp	sl, #0
    f374:	add	r9, sp, #12
    f378:	ldm	r9, {r4, r6, r9}
    f37c:	addne	r0, r5, sl
    f380:	movne	r1, #0
    f384:	strbne	r1, [r0, #-1]
    f388:	mov	r0, r6
    f38c:	bl	f424 <rb_strdup>
    f390:	mov	r1, r0
    f394:	str	r0, [r7]
    f398:	strb	r9, [r7, #4]
    f39c:	mov	r0, #0
    f3a0:	str	r0, [r7, #8]
    f3a4:	ldr	r0, [pc, #76]	; f3f8 <add_dnsbl_entry+0x164>
    f3a8:	ldr	r0, [pc, r0]
    f3ac:	ldr	r0, [r0]
    f3b0:	mov	r2, r7
    f3b4:	bl	d70c <rb_dictionary_add@plt>
    f3b8:	ldr	r0, [pc, #60]	; f3fc <add_dnsbl_entry+0x168>
    f3bc:	ldr	r0, [pc, r0]
    f3c0:	ldr	r0, [r0]
    f3c4:	str	r5, [sp]
    f3c8:	str	r4, [sp, #4]
    f3cc:	ldr	r1, [pc, #44]	; f400 <add_dnsbl_entry+0x16c>
    f3d0:	add	r1, pc, r1
    f3d4:	mov	r2, r6
    f3d8:	mov	r3, r9
    f3dc:	bl	d148 <rb_helper_write@plt>
    f3e0:	sub	sp, fp, #28
    f3e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f3e8:	.word	0x0004b7a4
    f3ec:	.word	0x0004b5c0
    f3f0:	.word	0x00030fbf
    f3f4:	.word	0x00030fa4
    f3f8:	.word	0x0004b6d8
    f3fc:	.word	0x0004b64c
    f400:	.word	0x00030efc

0000f404 <rb_malloc>:
    f404:	push	{fp, lr}
    f408:	mov	fp, sp
    f40c:	mov	r1, r0
    f410:	mov	r0, #1
    f414:	bl	cfa4 <calloc@plt>
    f418:	cmp	r0, #0
    f41c:	popne	{fp, pc}
    f420:	bl	d448 <rb_outofmemory@plt>

0000f424 <rb_strdup>:
    f424:	push	{r4, r5, fp, lr}
    f428:	add	fp, sp, #8
    f42c:	mov	r4, r0
    f430:	bl	dc94 <strlen@plt>
    f434:	add	r0, r0, #1
    f438:	bl	da90 <malloc@plt>
    f43c:	cmp	r0, #0
    f440:	beq	f458 <rb_strdup+0x34>
    f444:	mov	r5, r0
    f448:	mov	r1, r4
    f44c:	bl	d928 <strcpy@plt>
    f450:	mov	r0, r5
    f454:	pop	{r4, r5, fp, pc}
    f458:	bl	d448 <rb_outofmemory@plt>

0000f45c <del_dnsbl_entry>:
    f45c:	push	{r4, r5, r6, sl, fp, lr}
    f460:	add	fp, sp, #16
    f464:	mov	r4, r0
    f468:	ldr	r6, [pc, #84]	; f4c4 <del_dnsbl_entry+0x68>
    f46c:	ldr	r6, [pc, r6]
    f470:	ldr	r0, [r6]
    f474:	mov	r1, r4
    f478:	bl	e6e4 <rb_dictionary_retrieve@plt>
    f47c:	cmp	r0, #0
    f480:	beq	f4a4 <del_dnsbl_entry+0x48>
    f484:	mov	r5, r0
    f488:	ldr	r0, [r6]
    f48c:	mov	r1, r4
    f490:	bl	d838 <rb_dictionary_delete@plt>
    f494:	ldr	r0, [r5]
    f498:	bl	f4d0 <rb_free>
    f49c:	mov	r0, r5
    f4a0:	bl	f4d0 <rb_free>
    f4a4:	ldr	r0, [pc, #28]	; f4c8 <del_dnsbl_entry+0x6c>
    f4a8:	ldr	r0, [pc, r0]
    f4ac:	ldr	r0, [r0]
    f4b0:	ldr	r1, [pc, #20]	; f4cc <del_dnsbl_entry+0x70>
    f4b4:	add	r1, pc, r1
    f4b8:	mov	r2, r4
    f4bc:	pop	{r4, r5, r6, sl, fp, lr}
    f4c0:	b	d148 <rb_helper_write@plt>
    f4c4:	.word	0x0004b614
    f4c8:	.word	0x0004b560
    f4cc:	.word	0x00030e2d

0000f4d0 <rb_free>:
    f4d0:	cmp	r0, #0
    f4d4:	bxeq	lr
    f4d8:	b	d328 <free@plt>

0000f4dc <del_dnsbl_entry_all>:
    f4dc:	push	{r4, sl, fp, lr}
    f4e0:	add	fp, sp, #8
    f4e4:	ldr	r4, [pc, #64]	; f52c <del_dnsbl_entry_all+0x50>
    f4e8:	ldr	r4, [pc, r4]
    f4ec:	ldr	r0, [r4]
    f4f0:	cmp	r0, #0
    f4f4:	beq	f508 <del_dnsbl_entry_all+0x2c>
    f4f8:	ldr	r1, [pc, #48]	; f530 <del_dnsbl_entry_all+0x54>
    f4fc:	add	r1, pc, r1
    f500:	mov	r2, #0
    f504:	bl	e0cc <rb_dictionary_destroy@plt>
    f508:	mov	r0, #0
    f50c:	str	r0, [r4]
    f510:	ldr	r0, [pc, #28]	; f534 <del_dnsbl_entry_all+0x58>
    f514:	ldr	r0, [pc, r0]
    f518:	ldr	r0, [r0]
    f51c:	ldr	r1, [pc, #20]	; f538 <del_dnsbl_entry_all+0x5c>
    f520:	add	r1, pc, r1
    f524:	pop	{r4, sl, fp, lr}
    f528:	b	d148 <rb_helper_write@plt>
    f52c:	.word	0x0004b598
    f530:	.word	0x00000038
    f534:	.word	0x0004b4f4
    f538:	.word	0x00030dce

0000f53c <dnsbl_delete_elem>:
    f53c:	push	{r4, sl, fp, lr}
    f540:	add	fp, sp, #8
    f544:	ldr	r4, [r0, #16]
    f548:	ldr	r0, [r4]
    f54c:	bl	f4d0 <rb_free>
    f550:	mov	r0, r4
    f554:	pop	{r4, sl, fp, lr}
    f558:	b	f4d0 <rb_free>

0000f55c <conf_create_opm_listener>:
    f55c:	push	{r4, r5, r6, sl, fp, lr}
    f560:	add	fp, sp, #16
    f564:	sub	sp, sp, #56	; 0x38
    f568:	mov	r4, r1
    f56c:	mov	r1, r0
    f570:	mov	r5, sp
    f574:	mov	r0, r5
    f578:	mov	r2, #53	; 0x35
    f57c:	bl	e510 <rb_strlcpy@plt>
    f580:	ldrb	r0, [sp]
    f584:	cmp	r0, #58	; 0x3a
    f588:	bne	f5cc <conf_create_opm_listener+0x70>
    f58c:	add	r0, r5, #16
    f590:	mov	r1, #17
    f594:	mov	r2, r5
    f598:	vld1.64	{d16-d17}, [r2], r1
    f59c:	vld1.64	{d18-d19}, [r0]
    f5a0:	orr	r0, r5, #1
    f5a4:	add	r1, r5, #32
    f5a8:	vld1.64	{d20-d21}, [r1]
    f5ac:	vst1.8	{d16-d17}, [r0]
    f5b0:	add	r0, r5, #33	; 0x21
    f5b4:	ldr	r1, [sp, #48]	; 0x30
    f5b8:	vst1.8	{d20-d21}, [r0]
    f5bc:	vst1.8	{d18-d19}, [r2]
    f5c0:	mov	r0, #48	; 0x30
    f5c4:	strb	r0, [sp]
    f5c8:	str	r1, [sp, #49]	; 0x31
    f5cc:	mov	r5, sp
    f5d0:	mov	r0, r5
    f5d4:	mov	r1, #58	; 0x3a
    f5d8:	bl	dce8 <strchr@plt>
    f5dc:	cmp	r0, #0
    f5e0:	movwne	r0, #1
    f5e4:	rsb	r0, r0, r0, lsl #3
    f5e8:	ldr	r1, [pc, #32]	; f610 <conf_create_opm_listener+0xb4>
    f5ec:	ldr	r1, [pc, r1]
    f5f0:	add	r6, r1, r0, lsl #3
    f5f4:	mov	r0, r6
    f5f8:	mov	r1, r5
    f5fc:	mov	r2, #53	; 0x35
    f600:	bl	e510 <rb_strlcpy@plt>
    f604:	strh	r4, [r6, #54]	; 0x36
    f608:	sub	sp, fp, #16
    f60c:	pop	{r4, r5, r6, sl, fp, pc}
    f610:	.word	0x0004b4e4

0000f614 <create_opm_listener>:
    f614:	push	{r4, r5, r6, sl, fp, lr}
    f618:	add	fp, sp, #16
    f61c:	sub	sp, sp, #56	; 0x38
    f620:	mov	r4, r1
    f624:	mov	r5, r0
    f628:	mov	r6, sp
    f62c:	mov	r0, r6
    f630:	mov	r1, r5
    f634:	mov	r2, #53	; 0x35
    f638:	bl	e510 <rb_strlcpy@plt>
    f63c:	ldrb	r0, [sp]
    f640:	cmp	r0, #58	; 0x3a
    f644:	bne	f688 <create_opm_listener+0x74>
    f648:	add	r0, r6, #16
    f64c:	mov	r1, #17
    f650:	mov	r2, r6
    f654:	vld1.64	{d16-d17}, [r2], r1
    f658:	vld1.64	{d18-d19}, [r0]
    f65c:	orr	r0, r6, #1
    f660:	add	r1, r6, #32
    f664:	vld1.64	{d20-d21}, [r1]
    f668:	vst1.8	{d16-d17}, [r0]
    f66c:	add	r0, r6, #33	; 0x21
    f670:	ldr	r1, [sp, #48]	; 0x30
    f674:	vst1.8	{d20-d21}, [r0]
    f678:	vst1.8	{d18-d19}, [r2]
    f67c:	mov	r0, #48	; 0x30
    f680:	strb	r0, [sp]
    f684:	str	r1, [sp, #49]	; 0x31
    f688:	mov	r0, r5
    f68c:	mov	r1, r4
    f690:	bl	dd6c <conf_create_opm_listener@plt>
    f694:	ldr	r0, [pc, #32]	; f6bc <create_opm_listener+0xa8>
    f698:	ldr	r0, [pc, r0]
    f69c:	ldr	r0, [r0]
    f6a0:	ldr	r1, [pc, #24]	; f6c0 <create_opm_listener+0xac>
    f6a4:	add	r1, pc, r1
    f6a8:	mov	r2, sp
    f6ac:	mov	r3, r4
    f6b0:	bl	d148 <rb_helper_write@plt>
    f6b4:	sub	sp, fp, #16
    f6b8:	pop	{r4, r5, r6, sl, fp, pc}
    f6bc:	.word	0x0004b370
    f6c0:	.word	0x00030bbe

0000f6c4 <delete_opm_listener_all>:
    f6c4:	ldr	r0, [pc, #84]	; f720 <delete_opm_listener_all+0x5c>
    f6c8:	ldr	r0, [pc, r0]
    f6cc:	vmov.i32	q8, #0	; 0x00000000
    f6d0:	mov	r1, #96	; 0x60
    f6d4:	mov	r2, r0
    f6d8:	vst1.16	{d16-d17}, [r2], r1
    f6dc:	vst1.16	{d16-d17}, [r2]
    f6e0:	add	r1, r0, #80	; 0x50
    f6e4:	vst1.16	{d16-d17}, [r1]
    f6e8:	add	r1, r0, #64	; 0x40
    f6ec:	vst1.16	{d16-d17}, [r1]
    f6f0:	add	r1, r0, #48	; 0x30
    f6f4:	vst1.16	{d16-d17}, [r1]
    f6f8:	add	r1, r0, #32
    f6fc:	vst1.16	{d16-d17}, [r1]
    f700:	add	r0, r0, #16
    f704:	vst1.16	{d16-d17}, [r0]
    f708:	ldr	r0, [pc, #20]	; f724 <delete_opm_listener_all+0x60>
    f70c:	ldr	r0, [pc, r0]
    f710:	ldr	r0, [r0]
    f714:	ldr	r1, [pc, #12]	; f728 <delete_opm_listener_all+0x64>
    f718:	add	r1, pc, r1
    f71c:	b	d148 <rb_helper_write@plt>
    f720:	.word	0x0004b408
    f724:	.word	0x0004b2fc
    f728:	.word	0x00030bff

0000f72c <conf_create_opm_proxy_scanner>:
    f72c:	push	{r4, r5, r6, sl, fp, lr}
    f730:	add	fp, sp, #16
    f734:	mov	r4, r1
    f738:	mov	r5, r0
    f73c:	mov	r0, #32
    f740:	bl	f404 <rb_malloc>
    f744:	mov	r6, r0
    f748:	mov	r1, r5
    f74c:	mov	r2, #16
    f750:	bl	e510 <rb_strlcpy@plt>
    f754:	strh	r4, [r6, #16]
    f758:	add	r1, r6, #20
    f75c:	ldr	r2, [pc, #12]	; f770 <conf_create_opm_proxy_scanner+0x44>
    f760:	ldr	r2, [pc, r2]
    f764:	mov	r0, r6
    f768:	pop	{r4, r5, r6, sl, fp, lr}
    f76c:	b	f774 <rb_dlinkAdd>
    f770:	.word	0x0004b3b0

0000f774 <rb_dlinkAdd>:
    f774:	push	{fp, lr}
    f778:	mov	fp, sp
    f77c:	cmp	r0, #0
    f780:	beq	f7e0 <rb_dlinkAdd+0x6c>
    f784:	cmp	r1, #0
    f788:	beq	f800 <rb_dlinkAdd+0x8c>
    f78c:	cmp	r2, #0
    f790:	beq	f820 <rb_dlinkAdd+0xac>
    f794:	mov	r3, #0
    f798:	stm	r1, {r0, r3}
    f79c:	ldr	r0, [r2]
    f7a0:	str	r0, [r1, #8]
    f7a4:	ldr	r0, [r2]
    f7a8:	cmp	r0, #0
    f7ac:	beq	f7bc <rb_dlinkAdd+0x48>
    f7b0:	add	r0, r0, #4
    f7b4:	str	r1, [r0]
    f7b8:	b	f7cc <rb_dlinkAdd+0x58>
    f7bc:	mov	r0, r2
    f7c0:	ldr	r3, [r0, #4]!
    f7c4:	cmp	r3, #0
    f7c8:	streq	r1, [r0]
    f7cc:	str	r1, [r2]
    f7d0:	ldr	r0, [r2, #8]
    f7d4:	add	r0, r0, #1
    f7d8:	str	r0, [r2, #8]
    f7dc:	pop	{fp, pc}
    f7e0:	ldr	r0, [pc, #88]	; f840 <rb_dlinkAdd+0xcc>
    f7e4:	add	r0, pc, r0
    f7e8:	ldr	r1, [pc, #84]	; f844 <rb_dlinkAdd+0xd0>
    f7ec:	add	r1, pc, r1
    f7f0:	ldr	r3, [pc, #80]	; f848 <rb_dlinkAdd+0xd4>
    f7f4:	add	r3, pc, r3
    f7f8:	mov	r2, #143	; 0x8f
    f7fc:	bl	e7e0 <__assert_fail@plt>
    f800:	ldr	r0, [pc, #68]	; f84c <rb_dlinkAdd+0xd8>
    f804:	add	r0, pc, r0
    f808:	ldr	r1, [pc, #64]	; f850 <rb_dlinkAdd+0xdc>
    f80c:	add	r1, pc, r1
    f810:	ldr	r3, [pc, #60]	; f854 <rb_dlinkAdd+0xe0>
    f814:	add	r3, pc, r3
    f818:	mov	r2, #144	; 0x90
    f81c:	bl	e7e0 <__assert_fail@plt>
    f820:	ldr	r0, [pc, #48]	; f858 <rb_dlinkAdd+0xe4>
    f824:	add	r0, pc, r0
    f828:	ldr	r1, [pc, #44]	; f85c <rb_dlinkAdd+0xe8>
    f82c:	add	r1, pc, r1
    f830:	ldr	r3, [pc, #40]	; f860 <rb_dlinkAdd+0xec>
    f834:	add	r3, pc, r3
    f838:	mov	r2, #145	; 0x91
    f83c:	bl	e7e0 <__assert_fail@plt>
    f840:	.word	0x00030e2d
    f844:	.word	0x00030dca
    f848:	.word	0x00030e2a
    f84c:	.word	0x00030da8
    f850:	.word	0x00030daa
    f854:	.word	0x00030e0a
    f858:	.word	0x00036621
    f85c:	.word	0x00030d8a
    f860:	.word	0x00030dea

0000f864 <create_opm_proxy_scanner>:
    f864:	push	{r4, r5, fp, lr}
    f868:	add	fp, sp, #8
    f86c:	mov	r4, r1
    f870:	mov	r5, r0
    f874:	bl	d658 <conf_create_opm_proxy_scanner@plt>
    f878:	ldr	r0, [pc, #28]	; f89c <create_opm_proxy_scanner+0x38>
    f87c:	ldr	r0, [pc, r0]
    f880:	ldr	r0, [r0]
    f884:	ldr	r1, [pc, #20]	; f8a0 <create_opm_proxy_scanner+0x3c>
    f888:	add	r1, pc, r1
    f88c:	mov	r2, r5
    f890:	mov	r3, r4
    f894:	pop	{r4, r5, fp, lr}
    f898:	b	d148 <rb_helper_write@plt>
    f89c:	.word	0x0004b18c
    f8a0:	.word	0x000309f0

0000f8a4 <delete_opm_proxy_scanner>:
    f8a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f8a8:	add	fp, sp, #24
    f8ac:	mov	r8, r1
    f8b0:	mov	r5, r0
    f8b4:	ldr	r0, [pc, #124]	; f938 <delete_opm_proxy_scanner+0x94>
    f8b8:	ldr	r0, [pc, r0]
    f8bc:	ldr	r6, [r0]
    f8c0:	cmp	r6, #0
    f8c4:	beq	f914 <delete_opm_proxy_scanner+0x70>
    f8c8:	ldr	r7, [r6]
    f8cc:	ldr	r4, [r6, #8]
    f8d0:	mov	r0, r7
    f8d4:	mov	r1, r5
    f8d8:	mov	r2, #16
    f8dc:	bl	d538 <rb_strncasecmp@plt>
    f8e0:	cmp	r0, #0
    f8e4:	bne	f8f4 <delete_opm_proxy_scanner+0x50>
    f8e8:	ldrh	r0, [r7, #16]
    f8ec:	cmp	r0, r8
    f8f0:	beq	f904 <delete_opm_proxy_scanner+0x60>
    f8f4:	cmp	r4, #0
    f8f8:	mov	r6, r4
    f8fc:	bne	f8c8 <delete_opm_proxy_scanner+0x24>
    f900:	b	f914 <delete_opm_proxy_scanner+0x70>
    f904:	mov	r0, r6
    f908:	bl	f944 <rb_dlinkDelete>
    f90c:	mov	r0, r7
    f910:	bl	f4d0 <rb_free>
    f914:	ldr	r0, [pc, #32]	; f93c <delete_opm_proxy_scanner+0x98>
    f918:	ldr	r0, [pc, r0]
    f91c:	ldr	r0, [r0]
    f920:	ldr	r1, [pc, #24]	; f940 <delete_opm_proxy_scanner+0x9c>
    f924:	add	r1, pc, r1
    f928:	mov	r2, r5
    f92c:	mov	r3, r8
    f930:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    f934:	b	d148 <rb_helper_write@plt>
    f938:	.word	0x0004b258
    f93c:	.word	0x0004b0f0
    f940:	.word	0x00030a1b

0000f944 <rb_dlinkDelete>:
    f944:	cmp	r0, #0
    f948:	beq	f998 <rb_dlinkDelete+0x54>
    f94c:	ldr	ip, [pc, #108]	; f9c0 <rb_dlinkDelete+0x7c>
    f950:	ldr	ip, [pc, ip]
    f954:	ldmib	r0, {r2, r3}
    f958:	add	r1, r3, #4
    f95c:	cmp	r3, #0
    f960:	addeq	r1, ip, #4
    f964:	str	r2, [r1]
    f968:	ldmib	r0, {r1, r2}
    f96c:	cmp	r1, #0
    f970:	mov	r3, ip
    f974:	addne	r3, r1, #8
    f978:	str	r2, [r3]
    f97c:	mov	r1, #0
    f980:	str	r1, [r0, #4]
    f984:	str	r1, [r0, #8]
    f988:	ldr	r0, [ip, #8]
    f98c:	sub	r0, r0, #1
    f990:	str	r0, [ip, #8]
    f994:	bx	lr
    f998:	push	{fp, lr}
    f99c:	mov	fp, sp
    f9a0:	ldr	r0, [pc, #28]	; f9c4 <rb_dlinkDelete+0x80>
    f9a4:	add	r0, pc, r0
    f9a8:	ldr	r1, [pc, #24]	; f9c8 <rb_dlinkDelete+0x84>
    f9ac:	add	r1, pc, r1
    f9b0:	ldr	r3, [pc, #20]	; f9cc <rb_dlinkDelete+0x88>
    f9b4:	add	r3, pc, r3
    f9b8:	mov	r2, #235	; 0xeb
    f9bc:	bl	e7e0 <__assert_fail@plt>
    f9c0:	.word	0x0004b1c0
    f9c4:	.word	0x00030c08
    f9c8:	.word	0x00030c0a
    f9cc:	.word	0x00030ca5

0000f9d0 <delete_opm_proxy_scanner_all>:
    f9d0:	push	{r4, r5, fp, lr}
    f9d4:	add	fp, sp, #8
    f9d8:	ldr	r0, [pc, #72]	; fa28 <delete_opm_proxy_scanner_all+0x58>
    f9dc:	ldr	r0, [pc, r0]
    f9e0:	ldr	r0, [r0]
    f9e4:	cmp	r0, #0
    f9e8:	beq	fa0c <delete_opm_proxy_scanner_all+0x3c>
    f9ec:	ldr	r4, [r0]
    f9f0:	ldr	r5, [r0, #8]
    f9f4:	bl	f944 <rb_dlinkDelete>
    f9f8:	mov	r0, r4
    f9fc:	bl	f4d0 <rb_free>
    fa00:	cmp	r5, #0
    fa04:	mov	r0, r5
    fa08:	bne	f9ec <delete_opm_proxy_scanner_all+0x1c>
    fa0c:	ldr	r0, [pc, #24]	; fa2c <delete_opm_proxy_scanner_all+0x5c>
    fa10:	ldr	r0, [pc, r0]
    fa14:	ldr	r0, [r0]
    fa18:	ldr	r1, [pc, #16]	; fa30 <delete_opm_proxy_scanner_all+0x60>
    fa1c:	add	r1, pc, r1
    fa20:	pop	{r4, r5, fp, lr}
    fa24:	b	d148 <rb_helper_write@plt>
    fa28:	.word	0x0004b134
    fa2c:	.word	0x0004aff8
    fa30:	.word	0x0003093c

0000fa34 <rb_uint32cmp>:
    fa34:	sub	r0, r1, r0
    fa38:	bx	lr

0000fa3c <timeout_dead_authd_clients>:
    fa3c:	push	{r4, r5, r6, r7, fp, lr}
    fa40:	add	fp, sp, #16
    fa44:	sub	sp, sp, #24
    fa48:	mov	r0, #0
    fa4c:	str	r0, [sp, #4]
    fa50:	str	r0, [sp]
    fa54:	str	r0, [sp, #8]
    fa58:	ldr	r0, [pc, #192]	; fb20 <timeout_dead_authd_clients+0xe4>
    fa5c:	ldr	r0, [pc, r0]
    fa60:	add	r4, sp, #16
    fa64:	mov	r1, r4
    fa68:	bl	d97c <rb_dictionary_foreach_start@plt>
    fa6c:	ldr	r0, [pc, #176]	; fb24 <timeout_dead_authd_clients+0xe8>
    fa70:	ldr	r0, [pc, r0]
    fa74:	mov	r1, r4
    fa78:	bl	e300 <rb_dictionary_foreach_cur@plt>
    fa7c:	cmp	r0, #0
    fa80:	beq	faec <timeout_dead_authd_clients+0xb0>
    fa84:	mov	r6, r0
    fa88:	mov	r4, sp
    fa8c:	add	r5, sp, #16
    fa90:	ldr	r0, [r6, #436]	; 0x1b4
    fa94:	ldr	r7, [r0, #112]	; 0x70
    fa98:	bl	d07c <rb_current_time@plt>
    fa9c:	cmp	r7, r0
    faa0:	bge	fac0 <timeout_dead_authd_clients+0x84>
    faa4:	mov	r0, r6
    faa8:	bl	ee18 <authd_free_client>
    faac:	bl	dc64 <rb_make_rb_dlink_node@plt>
    fab0:	mov	r1, r0
    fab4:	mov	r0, r6
    fab8:	mov	r2, r4
    fabc:	bl	f774 <rb_dlinkAdd>
    fac0:	ldr	r0, [pc, #96]	; fb28 <timeout_dead_authd_clients+0xec>
    fac4:	ldr	r0, [pc, r0]
    fac8:	mov	r1, r5
    facc:	bl	e5a0 <rb_dictionary_foreach_next@plt>
    fad0:	ldr	r0, [pc, #84]	; fb2c <timeout_dead_authd_clients+0xf0>
    fad4:	ldr	r0, [pc, r0]
    fad8:	mov	r1, r5
    fadc:	bl	e300 <rb_dictionary_foreach_cur@plt>
    fae0:	mov	r6, r0
    fae4:	cmp	r0, #0
    fae8:	bne	fa90 <timeout_dead_authd_clients+0x54>
    faec:	ldr	r4, [sp]
    faf0:	b	fb10 <timeout_dead_authd_clients+0xd4>
    faf4:	ldr	r0, [r4]
    faf8:	ldr	r4, [r4, #8]
    fafc:	ldr	r0, [r0, #436]	; 0x1b4
    fb00:	ldr	r1, [r0, #108]	; 0x6c
    fb04:	ldr	r0, [pc, #36]	; fb30 <timeout_dead_authd_clients+0xf4>
    fb08:	ldr	r0, [pc, r0]
    fb0c:	bl	d838 <rb_dictionary_delete@plt>
    fb10:	cmp	r4, #0
    fb14:	subeq	sp, fp, #16
    fb18:	popeq	{r4, r5, r6, r7, fp, pc}
    fb1c:	b	faf4 <timeout_dead_authd_clients+0xb8>
    fb20:	.word	0x0004d870
    fb24:	.word	0x0004d85c
    fb28:	.word	0x0004d808
    fb2c:	.word	0x0004d7f8
    fb30:	.word	0x0004d7c4

0000fb34 <parse_authd_reply>:
    fb34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    fb38:	add	fp, sp, #24
    fb3c:	sub	sp, sp, #64	; 0x40
    fb40:	sub	sp, sp, #16384	; 0x4000
    fb44:	mov	r4, r0
    fb48:	add	r1, sp, #60	; 0x3c
    fb4c:	mov	r2, #16384	; 0x4000
    fb50:	bl	d9dc <rb_helper_read@plt>
    fb54:	cmp	r0, #1
    fb58:	blt	fbf4 <parse_authd_reply+0xc0>
    fb5c:	add	r5, sp, #60	; 0x3c
    fb60:	mov	r6, sp
    fb64:	ldr	r7, [pc, #144]	; fbfc <parse_authd_reply+0xc8>
    fb68:	add	r7, pc, r7
    fb6c:	ldr	r9, [pc, #140]	; fc00 <parse_authd_reply+0xcc>
    fb70:	add	r9, pc, r9
    fb74:	ldr	r8, [pc, #136]	; fc04 <parse_authd_reply+0xd0>
    fb78:	add	r8, pc, r8
    fb7c:	mov	r0, r5
    fb80:	mov	r1, r6
    fb84:	mov	r2, #60	; 0x3c
    fb88:	bl	da60 <rb_string_to_array@plt>
    fb8c:	mov	r2, r0
    fb90:	ldr	r0, [sp]
    fb94:	ldrb	r1, [r0]
    fb98:	ldr	r3, [r7, r1, lsl #3]
    fb9c:	cmp	r3, #0
    fba0:	beq	fbc0 <parse_authd_reply+0x8c>
    fba4:	add	r0, r7, r1, lsl #3
    fba8:	ldr	r1, [r0, #4]
    fbac:	cmp	r1, r2
    fbb0:	ble	fbd0 <parse_authd_reply+0x9c>
    fbb4:	mov	r0, r8
    fbb8:	bl	d3ac <iwarn@plt>
    fbbc:	b	fbc8 <parse_authd_reply+0x94>
    fbc0:	mov	r0, r9
    fbc4:	bl	d3ac <iwarn@plt>
    fbc8:	bl	d964 <restart_authd@plt>
    fbcc:	b	fbdc <parse_authd_reply+0xa8>
    fbd0:	mov	r0, r2
    fbd4:	mov	r1, r6
    fbd8:	blx	r3
    fbdc:	mov	r0, r4
    fbe0:	mov	r1, r5
    fbe4:	mov	r2, #16384	; 0x4000
    fbe8:	bl	d9dc <rb_helper_read@plt>
    fbec:	cmp	r0, #0
    fbf0:	bgt	fb7c <parse_authd_reply+0x48>
    fbf4:	sub	sp, fp, #24
    fbf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fbfc:	.word	0x00049990
    fc00:	.word	0x000308da
    fc04:	.word	0x0003088a

0000fc08 <cmd_accept_client>:
    fc08:	push	{r4, sl, fp, lr}
    fc0c:	add	fp, sp, #8
    fc10:	mov	r4, r1
    fc14:	ldr	r0, [r1, #4]
    fc18:	mov	r1, #1
    fc1c:	bl	fee8 <str_cid_to_client>
    fc20:	cmp	r0, #0
    fc24:	popeq	{r4, sl, fp, pc}
    fc28:	ldr	r1, [r4, #8]
    fc2c:	ldr	r2, [r4, #12]
    fc30:	pop	{r4, sl, fp, lr}
    fc34:	b	f108 <authd_accept_client>

0000fc38 <cmd_dns_result>:
    fc38:	ldmib	r1, {r0, ip}
    fc3c:	ldr	r2, [r1, #12]
    fc40:	ldr	r3, [r1, #16]
    fc44:	mov	r1, ip
    fc48:	b	d4e4 <dns_results_callback@plt>

0000fc4c <cmd_notice_client>:
    fc4c:	push	{r4, sl, fp, lr}
    fc50:	add	fp, sp, #8
    fc54:	mov	r4, r1
    fc58:	ldr	r0, [r1, #4]
    fc5c:	mov	r1, #0
    fc60:	bl	fee8 <str_cid_to_client>
    fc64:	cmp	r0, #0
    fc68:	popeq	{r4, sl, fp, pc}
    fc6c:	ldr	r2, [r4, #8]
    fc70:	ldr	r1, [pc, #8]	; fc80 <cmd_notice_client+0x34>
    fc74:	add	r1, pc, r1
    fc78:	pop	{r4, sl, fp, lr}
    fc7c:	b	e414 <sendto_one_notice@plt>
    fc80:	.word	0x0003647c

0000fc84 <cmd_reject_client>:
    fc84:	push	{r4, r5, r6, r7, fp, lr}
    fc88:	add	fp, sp, #16
    fc8c:	sub	sp, sp, #8
    fc90:	mov	r4, r1
    fc94:	ldr	r0, [r1, #4]
    fc98:	mov	r1, #1
    fc9c:	bl	fee8 <str_cid_to_client>
    fca0:	cmp	r0, #0
    fca4:	beq	fce4 <cmd_reject_client+0x60>
    fca8:	mov	r5, r0
    fcac:	ldr	r6, [r4, #12]
    fcb0:	ldr	r7, [r4, #16]
    fcb4:	bl	dbc8 <__ctype_toupper_loc@plt>
    fcb8:	ldr	r0, [r0]
    fcbc:	ldr	r1, [r4, #8]
    fcc0:	ldr	r2, [r4, #20]
    fcc4:	ldr	r4, [r4, #24]
    fcc8:	ldrb	r1, [r1]
    fccc:	ldrb	r3, [r0, r1, lsl #2]
    fcd0:	stm	sp, {r2, r4}
    fcd4:	mov	r0, r5
    fcd8:	mov	r1, r6
    fcdc:	mov	r2, r7
    fce0:	bl	db74 <authd_reject_client@plt>
    fce4:	sub	sp, fp, #16
    fce8:	pop	{r4, r5, r6, r7, fp, pc}

0000fcec <cmd_oper_warn>:
    fcec:	push	{r4, sl, fp, lr}
    fcf0:	add	fp, sp, #8
    fcf4:	sub	sp, sp, #8
    fcf8:	mov	r4, r1
    fcfc:	ldr	r3, [r1, #4]
    fd00:	ldrb	r0, [r3]
    fd04:	sub	r0, r0, #67	; 0x43
    fd08:	cmp	r0, #20
    fd0c:	bhi	fdd0 <cmd_oper_warn+0xe4>
    fd10:	add	r1, pc, #4
    fd14:	ldr	r0, [r1, r0, lsl #2]
    fd18:	add	pc, r1, r0
    fd1c:	.word	0x00000054
    fd20:	.word	0x00000084
    fd24:	.word	0x000000b4
    fd28:	.word	0x000000b4
    fd2c:	.word	0x000000b4
    fd30:	.word	0x000000b4
    fd34:	.word	0x000000ec
    fd38:	.word	0x000000b4
    fd3c:	.word	0x000000b4
    fd40:	.word	0x000000b4
    fd44:	.word	0x000000b4
    fd48:	.word	0x000000b4
    fd4c:	.word	0x000000b4
    fd50:	.word	0x000000b4
    fd54:	.word	0x000000b4
    fd58:	.word	0x000000b4
    fd5c:	.word	0x000000b4
    fd60:	.word	0x000000b4
    fd64:	.word	0x000000b4
    fd68:	.word	0x000000b4
    fd6c:	.word	0x0000011c
    fd70:	ldr	r3, [r4, #8]
    fd74:	ldr	r2, [pc, #260]	; fe80 <cmd_oper_warn+0x194>
    fd78:	add	r2, pc, r2
    fd7c:	mov	r0, #256	; 0x100
    fd80:	mov	r1, #0
    fd84:	bl	d640 <sendto_realops_snomask@plt>
    fd88:	ldr	r1, [r4, #8]
    fd8c:	ldr	r0, [pc, #240]	; fe84 <cmd_oper_warn+0x198>
    fd90:	add	r0, pc, r0
    fd94:	sub	sp, fp, #8
    fd98:	pop	{r4, sl, fp, lr}
    fd9c:	b	d64c <ierror@plt>
    fda0:	ldr	r3, [r4, #8]
    fda4:	ldr	r2, [pc, #188]	; fe68 <cmd_oper_warn+0x17c>
    fda8:	add	r2, pc, r2
    fdac:	mov	r0, #8
    fdb0:	mov	r1, #0
    fdb4:	bl	d640 <sendto_realops_snomask@plt>
    fdb8:	ldr	r1, [r4, #8]
    fdbc:	ldr	r0, [pc, #168]	; fe6c <cmd_oper_warn+0x180>
    fdc0:	add	r0, pc, r0
    fdc4:	sub	sp, fp, #8
    fdc8:	pop	{r4, sl, fp, lr}
    fdcc:	b	d490 <idebug@plt>
    fdd0:	ldr	r0, [r4, #8]
    fdd4:	str	r0, [sp]
    fdd8:	ldr	r2, [pc, #168]	; fe88 <cmd_oper_warn+0x19c>
    fddc:	add	r2, pc, r2
    fde0:	mov	r0, #256	; 0x100
    fde4:	mov	r1, #0
    fde8:	bl	d640 <sendto_realops_snomask@plt>
    fdec:	ldmib	r4, {r2, r3}
    fdf0:	ldr	r1, [pc, #148]	; fe8c <cmd_oper_warn+0x1a0>
    fdf4:	add	r1, pc, r1
    fdf8:	mov	r0, #0
    fdfc:	sub	sp, fp, #8
    fe00:	pop	{r4, sl, fp, lr}
    fe04:	b	e0b4 <ilog@plt>
    fe08:	ldr	r3, [r4, #8]
    fe0c:	ldr	r2, [pc, #92]	; fe70 <cmd_oper_warn+0x184>
    fe10:	add	r2, pc, r2
    fe14:	mov	r0, #256	; 0x100
    fe18:	mov	r1, #0
    fe1c:	bl	d640 <sendto_realops_snomask@plt>
    fe20:	ldr	r1, [r4, #8]
    fe24:	ldr	r0, [pc, #72]	; fe74 <cmd_oper_warn+0x188>
    fe28:	add	r0, pc, r0
    fe2c:	sub	sp, fp, #8
    fe30:	pop	{r4, sl, fp, lr}
    fe34:	b	d10c <inotice@plt>
    fe38:	ldr	r3, [r4, #8]
    fe3c:	ldr	r2, [pc, #52]	; fe78 <cmd_oper_warn+0x18c>
    fe40:	add	r2, pc, r2
    fe44:	mov	r0, #256	; 0x100
    fe48:	mov	r1, #0
    fe4c:	bl	d640 <sendto_realops_snomask@plt>
    fe50:	ldr	r1, [r4, #8]
    fe54:	ldr	r0, [pc, #32]	; fe7c <cmd_oper_warn+0x190>
    fe58:	add	r0, pc, r0
    fe5c:	sub	sp, fp, #8
    fe60:	pop	{r4, sl, fp, lr}
    fe64:	b	d3ac <iwarn@plt>
    fe68:	.word	0x000306ef
    fe6c:	.word	0x000306e7
    fe70:	.word	0x000306a1
    fe74:	.word	0x0003067f
    fe78:	.word	0x00030680
    fe7c:	.word	0x0003064f
    fe80:	.word	0x0003075a
    fe84:	.word	0x00030717
    fe88:	.word	0x00030709
    fe8c:	.word	0x00030724

0000fe90 <cmd_stats_results>:
    fe90:	mov	r2, r0
    fe94:	ldr	r0, [r1, #8]
    fe98:	ldrb	r0, [r0]
    fe9c:	cmp	r0, #68	; 0x44
    fea0:	bxne	lr
    fea4:	cmp	r2, #3
    fea8:	bgt	fecc <cmd_stats_results+0x3c>
    feac:	push	{fp, lr}
    feb0:	mov	fp, sp
    feb4:	ldr	r0, [pc, #40]	; fee4 <cmd_stats_results+0x54>
    feb8:	add	r0, pc, r0
    febc:	mov	r1, r2
    fec0:	bl	d3ac <iwarn@plt>
    fec4:	pop	{fp, lr}
    fec8:	b	ee84 <restart_authd>
    fecc:	ldr	ip, [r1]
    fed0:	ldr	r0, [r1, #4]
    fed4:	sub	r2, r2, #3
    fed8:	add	r3, r1, #12
    fedc:	mov	r1, ip
    fee0:	b	dd00 <dns_stats_results_callback@plt>
    fee4:	.word	0x00030688

0000fee8 <str_cid_to_client>:
    fee8:	push	{r4, sl, fp, lr}
    feec:	add	fp, sp, #8
    fef0:	mov	r4, r1
    fef4:	bl	ff10 <str_to_cid>
    fef8:	cmp	r0, #0
    fefc:	moveq	r0, #0
    ff00:	popeq	{r4, sl, fp, pc}
    ff04:	mov	r1, r4
    ff08:	pop	{r4, sl, fp, lr}
    ff0c:	b	ff54 <cid_to_client>

0000ff10 <str_to_cid>:
    ff10:	push	{r4, sl, fp, lr}
    ff14:	add	fp, sp, #8
    ff18:	mov	r4, #0
    ff1c:	mov	r1, #0
    ff20:	mov	r2, #16
    ff24:	bl	d118 <strtol@plt>
    ff28:	mov	r1, r0
    ff2c:	cmp	r0, #0
    ff30:	movgt	r0, r1
    ff34:	popgt	{r4, sl, fp, pc}
    ff38:	ldr	r0, [pc, #16]	; ff50 <str_to_cid+0x40>
    ff3c:	add	r0, pc, r0
    ff40:	bl	d3ac <iwarn@plt>
    ff44:	bl	d964 <restart_authd@plt>
    ff48:	mov	r0, r4
    ff4c:	pop	{r4, sl, fp, pc}
    ff50:	.word	0x00030533

0000ff54 <cid_to_client>:
    ff54:	mov	r2, r0
    ff58:	ldr	r0, [pc, #24]	; ff78 <cid_to_client+0x24>
    ff5c:	ldr	r0, [pc, r0]
    ff60:	cmp	r1, #0
    ff64:	beq	ff70 <cid_to_client+0x1c>
    ff68:	mov	r1, r2
    ff6c:	b	d838 <rb_dictionary_delete@plt>
    ff70:	mov	r1, r2
    ff74:	b	e6e4 <rb_dictionary_retrieve@plt>
    ff78:	.word	0x0004d370

0000ff7c <authd_free_client_cb>:
    ff7c:	ldr	r0, [r0, #16]
    ff80:	b	ee18 <authd_free_client>

0000ff84 <rb_dlinkAddTail>:
    ff84:	push	{fp, lr}
    ff88:	mov	fp, sp
    ff8c:	cmp	r1, #0
    ff90:	beq	fff4 <rb_dlinkAddTail+0x70>
    ff94:	cmp	r0, #0
    ff98:	beq	10014 <rb_dlinkAddTail+0x90>
    ff9c:	mov	r2, #0
    ffa0:	str	r2, [r1, #8]
    ffa4:	str	r0, [r1]
    ffa8:	ldr	r0, [pc, #132]	; 10034 <rb_dlinkAddTail+0xb0>
    ffac:	ldr	r0, [pc, r0]
    ffb0:	ldr	r2, [r0, #4]
    ffb4:	str	r2, [r1, #4]
    ffb8:	ldr	r2, [r0, #4]
    ffbc:	cmp	r2, #0
    ffc0:	beq	ffd0 <rb_dlinkAddTail+0x4c>
    ffc4:	add	r2, r2, #8
    ffc8:	str	r1, [r2]
    ffcc:	b	ffe0 <rb_dlinkAddTail+0x5c>
    ffd0:	ldr	r2, [r0]
    ffd4:	cmp	r2, #0
    ffd8:	mov	r2, r0
    ffdc:	streq	r1, [r2]
    ffe0:	str	r1, [r0, #4]
    ffe4:	ldr	r1, [r0, #8]
    ffe8:	add	r1, r1, #1
    ffec:	str	r1, [r0, #8]
    fff0:	pop	{fp, pc}
    fff4:	ldr	r0, [pc, #60]	; 10038 <rb_dlinkAddTail+0xb4>
    fff8:	add	r0, pc, r0
    fffc:	ldr	r1, [pc, #56]	; 1003c <rb_dlinkAddTail+0xb8>
   10000:	add	r1, pc, r1
   10004:	ldr	r3, [pc, #52]	; 10040 <rb_dlinkAddTail+0xbc>
   10008:	add	r3, pc, r3
   1000c:	mov	r2, #211	; 0xd3
   10010:	bl	e7e0 <__assert_fail@plt>
   10014:	ldr	r0, [pc, #40]	; 10044 <rb_dlinkAddTail+0xc0>
   10018:	add	r0, pc, r0
   1001c:	ldr	r1, [pc, #36]	; 10048 <rb_dlinkAddTail+0xc4>
   10020:	add	r1, pc, r1
   10024:	ldr	r3, [pc, #32]	; 1004c <rb_dlinkAddTail+0xc8>
   10028:	add	r3, pc, r3
   1002c:	mov	r2, #213	; 0xd5
   10030:	bl	e7e0 <__assert_fail@plt>
   10034:	.word	0x0004aae4
   10038:	.word	0x000305b4
   1003c:	.word	0x000305b6
   10040:	.word	0x000305ca
   10044:	.word	0x000305f9
   10048:	.word	0x00030596
   1004c:	.word	0x000305aa

00010050 <init_bandb>:
   10050:	push	{fp, lr}
   10054:	mov	fp, sp
   10058:	bl	10090 <start_bandb>
   1005c:	cmp	r0, #0
   10060:	popeq	{fp, pc}
   10064:	bl	de38 <__errno_location@plt>
   10068:	ldr	r0, [r0]
   1006c:	bl	dacc <strerror@plt>
   10070:	mov	r2, r0
   10074:	ldr	r1, [pc, #16]	; 1008c <init_bandb+0x3c>
   10078:	add	r1, pc, r1
   1007c:	mov	r0, #0
   10080:	bl	e0b4 <ilog@plt>
   10084:	mov	r0, #0
   10088:	bl	dc34 <exit@plt>
   1008c:	.word	0x00030617

00010090 <start_bandb>:
   10090:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10094:	add	fp, sp, #24
   10098:	sub	sp, sp, #16
   1009c:	sub	sp, sp, #4096	; 0x1000
   100a0:	ldr	r5, [pc, #388]	; 1022c <start_bandb+0x19c>
   100a4:	ldr	r5, [pc, r5]
   100a8:	ldr	r1, [r5, #52]	; 0x34
   100ac:	ldr	r0, [pc, #380]	; 10230 <start_bandb+0x1a0>
   100b0:	add	r0, pc, r0
   100b4:	mov	r2, #1
   100b8:	bl	cf68 <rb_setenv@plt>
   100bc:	ldr	r0, [pc, #368]	; 10234 <start_bandb+0x1a4>
   100c0:	ldr	r0, [pc, r0]
   100c4:	cmp	r0, #0
   100c8:	bne	10168 <start_bandb+0xd8>
   100cc:	ldr	r3, [r5, #60]	; 0x3c
   100d0:	ldr	r6, [pc, #352]	; 10238 <start_bandb+0x1a8>
   100d4:	add	r6, pc, r6
   100d8:	mov	r7, #47	; 0x2f
   100dc:	str	r7, [sp]
   100e0:	str	r6, [sp, #4]
   100e4:	add	r4, sp, #15
   100e8:	ldr	r2, [pc, #332]	; 1023c <start_bandb+0x1ac>
   100ec:	add	r2, pc, r2
   100f0:	mov	r0, r4
   100f4:	movw	r1, #4097	; 0x1001
   100f8:	bl	de74 <snprintf@plt>
   100fc:	mov	r0, r4
   10100:	mov	r1, #1
   10104:	bl	e09c <access@plt>
   10108:	cmn	r0, #1
   1010c:	bne	10154 <start_bandb+0xc4>
   10110:	ldr	r8, [pc, #296]	; 10240 <start_bandb+0x1b0>
   10114:	ldr	r8, [pc, r8]
   10118:	ldr	r3, [r8]
   1011c:	str	r7, [sp]
   10120:	str	r7, [sp, #4]
   10124:	str	r6, [sp, #8]
   10128:	add	r4, sp, #15
   1012c:	ldr	r2, [pc, #272]	; 10244 <start_bandb+0x1b4>
   10130:	add	r2, pc, r2
   10134:	mov	r0, r4
   10138:	movw	r1, #4097	; 0x1001
   1013c:	bl	de74 <snprintf@plt>
   10140:	mov	r0, r4
   10144:	mov	r1, #1
   10148:	bl	e09c <access@plt>
   1014c:	cmn	r0, #1
   10150:	beq	10200 <start_bandb+0x170>
   10154:	add	r0, sp, #15
   10158:	bl	1049c <rb_strdup>
   1015c:	ldr	r1, [pc, #236]	; 10250 <start_bandb+0x1c0>
   10160:	add	r1, pc, r1
   10164:	str	r0, [r1]
   10168:	ldr	r1, [pc, #228]	; 10254 <start_bandb+0x1c4>
   1016c:	ldr	r1, [pc, r1]
   10170:	ldr	r0, [pc, #224]	; 10258 <start_bandb+0x1c8>
   10174:	add	r0, pc, r0
   10178:	ldr	r2, [pc, #220]	; 1025c <start_bandb+0x1cc>
   1017c:	add	r2, pc, r2
   10180:	ldr	r3, [pc, #216]	; 10260 <start_bandb+0x1d0>
   10184:	add	r3, pc, r3
   10188:	bl	e48c <rb_helper_start@plt>
   1018c:	ldr	r1, [pc, #208]	; 10264 <start_bandb+0x1d4>
   10190:	add	r1, pc, r1
   10194:	str	r0, [r1]
   10198:	cmp	r0, #0
   1019c:	beq	101ac <start_bandb+0x11c>
   101a0:	bl	de5c <rb_helper_run@plt>
   101a4:	mov	r4, #0
   101a8:	b	101f4 <start_bandb+0x164>
   101ac:	bl	de38 <__errno_location@plt>
   101b0:	mov	r4, r0
   101b4:	ldr	r0, [r0]
   101b8:	bl	dacc <strerror@plt>
   101bc:	mov	r2, r0
   101c0:	ldr	r5, [pc, #160]	; 10268 <start_bandb+0x1d8>
   101c4:	add	r5, pc, r5
   101c8:	mov	r0, #0
   101cc:	mov	r1, r5
   101d0:	bl	e0b4 <ilog@plt>
   101d4:	ldr	r0, [r4]
   101d8:	bl	dacc <strerror@plt>
   101dc:	mov	r3, r0
   101e0:	mov	r0, #256	; 0x100
   101e4:	mov	r1, #0
   101e8:	mov	r2, r5
   101ec:	bl	d640 <sendto_realops_snomask@plt>
   101f0:	mov	r4, #1
   101f4:	mov	r0, r4
   101f8:	sub	sp, fp, #24
   101fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10200:	ldr	r3, [r5, #60]	; 0x3c
   10204:	ldr	r0, [r8]
   10208:	str	r0, [sp]
   1020c:	mov	r4, #0
   10210:	ldr	r1, [pc, #48]	; 10248 <start_bandb+0x1b8>
   10214:	add	r1, pc, r1
   10218:	ldr	r2, [pc, #44]	; 1024c <start_bandb+0x1bc>
   1021c:	add	r2, pc, r2
   10220:	mov	r0, #0
   10224:	bl	e0b4 <ilog@plt>
   10228:	b	101f4 <start_bandb+0x164>
   1022c:	.word	0x0004a9a4
   10230:	.word	0x00030619
   10234:	.word	0x0004d61c
   10238:	.word	0x00035731
   1023c:	.word	0x000305ea
   10240:	.word	0x0004aa68
   10244:	.word	0x000305b2
   10248:	.word	0x000304df
   1024c:	.word	0x000355e9
   10250:	.word	0x0004d57c
   10254:	.word	0x0004d570
   10258:	.word	0x000305a9
   1025c:	.word	0x00000350
   10260:	.word	0x000004e0
   10264:	.word	0x0004d148
   10268:	.word	0x0003055f

0001026c <bandb_add>:
   1026c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10270:	add	fp, sp, #24
   10274:	sub	sp, sp, #16
   10278:	mov	r5, r1
   1027c:	ldr	r1, [pc, #244]	; 10378 <bandb_add+0x10c>
   10280:	ldr	r1, [pc, r1]
   10284:	cmp	r1, #0
   10288:	subeq	sp, fp, #24
   1028c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   10290:	mov	r6, r3
   10294:	ldr	r8, [fp, #16]
   10298:	ldr	r4, [fp, #12]
   1029c:	ldr	r7, [fp, #8]
   102a0:	str	r2, [sp]
   102a4:	ldr	r1, [pc, #208]	; 1037c <bandb_add+0x110>
   102a8:	add	r1, pc, r1
   102ac:	ldrb	r3, [r1, r0]
   102b0:	ldr	r0, [pc, #200]	; 10380 <bandb_add+0x114>
   102b4:	add	r0, pc, r0
   102b8:	ldr	r2, [pc, #196]	; 10384 <bandb_add+0x118>
   102bc:	add	r2, pc, r2
   102c0:	mov	r1, #512	; 0x200
   102c4:	bl	de74 <snprintf@plt>
   102c8:	cmp	r6, #0
   102cc:	ldrbne	r0, [r6]
   102d0:	cmpne	r0, #0
   102d4:	beq	102f4 <bandb_add+0x88>
   102d8:	ldr	r0, [pc, #168]	; 10388 <bandb_add+0x11c>
   102dc:	add	r0, pc, r0
   102e0:	ldr	r2, [pc, #164]	; 1038c <bandb_add+0x120>
   102e4:	add	r2, pc, r2
   102e8:	mov	r1, #512	; 0x200
   102ec:	mov	r3, r6
   102f0:	bl	d664 <rb_snprintf_append@plt>
   102f4:	mov	r0, r5
   102f8:	bl	d730 <get_oper_name@plt>
   102fc:	mov	r5, r0
   10300:	bl	d07c <rb_current_time@plt>
   10304:	stm	sp, {r0, r8}
   10308:	str	r7, [sp, #8]
   1030c:	ldr	r0, [pc, #124]	; 10390 <bandb_add+0x124>
   10310:	add	r0, pc, r0
   10314:	ldr	r2, [pc, #120]	; 10394 <bandb_add+0x128>
   10318:	add	r2, pc, r2
   1031c:	mov	r1, #512	; 0x200
   10320:	mov	r3, r5
   10324:	bl	d664 <rb_snprintf_append@plt>
   10328:	cmp	r4, #0
   1032c:	ldrbne	r0, [r4]
   10330:	cmpne	r0, #0
   10334:	beq	10354 <bandb_add+0xe8>
   10338:	ldr	r0, [pc, #88]	; 10398 <bandb_add+0x12c>
   1033c:	add	r0, pc, r0
   10340:	ldr	r2, [pc, #84]	; 1039c <bandb_add+0x130>
   10344:	add	r2, pc, r2
   10348:	mov	r1, #512	; 0x200
   1034c:	mov	r3, r4
   10350:	bl	d664 <rb_snprintf_append@plt>
   10354:	ldr	r0, [pc, #68]	; 103a0 <bandb_add+0x134>
   10358:	ldr	r0, [pc, r0]
   1035c:	ldr	r1, [pc, #64]	; 103a4 <bandb_add+0x138>
   10360:	add	r1, pc, r1
   10364:	ldr	r2, [pc, #60]	; 103a8 <bandb_add+0x13c>
   10368:	add	r2, pc, r2
   1036c:	sub	sp, fp, #24
   10370:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10374:	b	d148 <rb_helper_write@plt>
   10378:	.word	0x0004d058
   1037c:	.word	0x000304fe
   10380:	.word	0x0004d028
   10384:	.word	0x000303f4
   10388:	.word	0x0004d000
   1038c:	.word	0x00037003
   10390:	.word	0x0004cfcc
   10394:	.word	0x0003039f
   10398:	.word	0x0004cfa0
   1039c:	.word	0x00030381
   103a0:	.word	0x0004cf80
   103a4:	.word	0x00037305
   103a8:	.word	0x0004cf74

000103ac <bandb_del>:
   103ac:	push	{r4, sl, fp, lr}
   103b0:	add	fp, sp, #8
   103b4:	sub	sp, sp, #8
   103b8:	mov	r4, r2
   103bc:	ldr	r2, [pc, #144]	; 10454 <bandb_del+0xa8>
   103c0:	ldr	r2, [pc, r2]
   103c4:	cmp	r2, #0
   103c8:	subeq	sp, fp, #8
   103cc:	popeq	{r4, sl, fp, pc}
   103d0:	ldr	ip, [pc, #128]	; 10458 <bandb_del+0xac>
   103d4:	add	ip, pc, ip
   103d8:	mov	r2, #0
   103dc:	strb	r2, [ip]
   103e0:	str	r1, [sp]
   103e4:	ldr	r1, [pc, #112]	; 1045c <bandb_del+0xb0>
   103e8:	add	r1, pc, r1
   103ec:	ldrb	r3, [r1, r0]
   103f0:	ldr	r2, [pc, #104]	; 10460 <bandb_del+0xb4>
   103f4:	add	r2, pc, r2
   103f8:	mov	r0, ip
   103fc:	mov	r1, #512	; 0x200
   10400:	bl	d664 <rb_snprintf_append@plt>
   10404:	cmp	r4, #0
   10408:	ldrbne	r0, [r4]
   1040c:	cmpne	r0, #0
   10410:	beq	10430 <bandb_del+0x84>
   10414:	ldr	r0, [pc, #72]	; 10464 <bandb_del+0xb8>
   10418:	add	r0, pc, r0
   1041c:	ldr	r2, [pc, #68]	; 10468 <bandb_del+0xbc>
   10420:	add	r2, pc, r2
   10424:	mov	r1, #512	; 0x200
   10428:	mov	r3, r4
   1042c:	bl	d664 <rb_snprintf_append@plt>
   10430:	ldr	r0, [pc, #52]	; 1046c <bandb_del+0xc0>
   10434:	ldr	r0, [pc, r0]
   10438:	ldr	r1, [pc, #48]	; 10470 <bandb_del+0xc4>
   1043c:	add	r1, pc, r1
   10440:	ldr	r2, [pc, #44]	; 10474 <bandb_del+0xc8>
   10444:	add	r2, pc, r2
   10448:	sub	sp, fp, #8
   1044c:	pop	{r4, sl, fp, lr}
   10450:	b	d148 <rb_helper_write@plt>
   10454:	.word	0x0004cf18
   10458:	.word	0x0004d108
   1045c:	.word	0x000303c2
   10460:	.word	0x000312f3
   10464:	.word	0x0004d0c4
   10468:	.word	0x00037244
   1046c:	.word	0x0004cea4
   10470:	.word	0x00037229
   10474:	.word	0x0004d098

00010478 <bandb_rehash_bans>:
   10478:	ldr	r0, [pc, #20]	; 10494 <bandb_rehash_bans+0x1c>
   1047c:	ldr	r0, [pc, r0]
   10480:	cmp	r0, #0
   10484:	bxeq	lr
   10488:	ldr	r1, [pc, #8]	; 10498 <bandb_rehash_bans+0x20>
   1048c:	add	r1, pc, r1
   10490:	b	d148 <rb_helper_write@plt>
   10494:	.word	0x0004ce5c
   10498:	.word	0x00030190

0001049c <rb_strdup>:
   1049c:	push	{r4, r5, fp, lr}
   104a0:	add	fp, sp, #8
   104a4:	mov	r4, r0
   104a8:	bl	dc94 <strlen@plt>
   104ac:	add	r0, r0, #1
   104b0:	bl	da90 <malloc@plt>
   104b4:	cmp	r0, #0
   104b8:	beq	104d0 <rb_strdup+0x34>
   104bc:	mov	r5, r0
   104c0:	mov	r1, r4
   104c4:	bl	d928 <strcpy@plt>
   104c8:	mov	r0, r5
   104cc:	pop	{r4, r5, fp, pc}
   104d0:	bl	d448 <rb_outofmemory@plt>

000104d4 <bandb_parse>:
   104d4:	push	{r4, r5, r6, sl, fp, lr}
   104d8:	add	fp, sp, #16
   104dc:	sub	sp, sp, #64	; 0x40
   104e0:	mov	r4, r0
   104e4:	ldr	r1, [pc, #376]	; 10664 <bandb_parse+0x190>
   104e8:	add	r1, pc, r1
   104ec:	mov	r2, #16384	; 0x4000
   104f0:	bl	d9dc <rb_helper_read@plt>
   104f4:	cmp	r0, #0
   104f8:	beq	10654 <bandb_parse+0x180>
   104fc:	ldr	r5, [pc, #356]	; 10668 <bandb_parse+0x194>
   10500:	add	r5, pc, r5
   10504:	add	r6, sp, #4
   10508:	b	1051c <bandb_parse+0x48>
   1050c:	bl	108c0 <bandb_handle_clear>
   10510:	b	1063c <bandb_parse+0x168>
   10514:	bl	1090c <bandb_handle_finish>
   10518:	b	1063c <bandb_parse+0x168>
   1051c:	mov	r0, r5
   10520:	mov	r1, r6
   10524:	mov	r2, #60	; 0x3c
   10528:	bl	da60 <rb_string_to_array@plt>
   1052c:	cmp	r0, #1
   10530:	blt	1063c <bandb_parse+0x168>
   10534:	ldr	r0, [sp, #4]
   10538:	ldrb	r0, [r0]
   1053c:	sub	r0, r0, #33	; 0x21
   10540:	cmp	r0, #55	; 0x37
   10544:	bhi	1063c <bandb_parse+0x168>
   10548:	add	r1, pc, #4
   1054c:	ldr	r0, [r1, r0, lsl #2]
   10550:	add	pc, r1, r0
   10554:	.word	0x00000108
   10558:	.word	0x000000e8
   1055c:	.word	0x000000e8
   10560:	.word	0x000000e8
   10564:	.word	0x000000e8
   10568:	.word	0x000000e8
   1056c:	.word	0x000000e8
   10570:	.word	0x000000e8
   10574:	.word	0x000000e8
   10578:	.word	0x000000e8
   1057c:	.word	0x000000e8
   10580:	.word	0x000000e8
   10584:	.word	0x000000e8
   10588:	.word	0x000000e8
   1058c:	.word	0x000000e8
   10590:	.word	0x000000e8
   10594:	.word	0x000000e8
   10598:	.word	0x000000e8
   1059c:	.word	0x000000e8
   105a0:	.word	0x000000e8
   105a4:	.word	0x000000e8
   105a8:	.word	0x000000e8
   105ac:	.word	0x000000e8
   105b0:	.word	0x000000e8
   105b4:	.word	0x000000e8
   105b8:	.word	0x000000e8
   105bc:	.word	0x000000e8
   105c0:	.word	0x000000e8
   105c4:	.word	0x000000e8
   105c8:	.word	0x000000e8
   105cc:	.word	0x000000e8
   105d0:	.word	0x000000e8
   105d4:	.word	0x000000e8
   105d8:	.word	0x000000e8
   105dc:	.word	0xffffffb8
   105e0:	.word	0x000000e0
   105e4:	.word	0x000000e8
   105e8:	.word	0xffffffc0
   105ec:	.word	0x000000e8
   105f0:	.word	0x000000e8
   105f4:	.word	0x000000e8
   105f8:	.word	0x000000e8
   105fc:	.word	0x000000e0
   10600:	.word	0x000000e8
   10604:	.word	0x000000e8
   10608:	.word	0x000000e8
   1060c:	.word	0x000000e8
   10610:	.word	0x000000e8
   10614:	.word	0x000000e8
   10618:	.word	0x000000e0
   1061c:	.word	0x000000e8
   10620:	.word	0x000000e8
   10624:	.word	0x000000e8
   10628:	.word	0x000000e8
   1062c:	.word	0x000000e8
   10630:	.word	0x000000e0
   10634:	mov	r0, r6
   10638:	bl	1074c <bandb_handle_ban>
   1063c:	mov	r0, r4
   10640:	mov	r1, r5
   10644:	mov	r2, #16384	; 0x4000
   10648:	bl	d9dc <rb_helper_read@plt>
   1064c:	cmp	r0, #0
   10650:	bne	1051c <bandb_parse+0x48>
   10654:	sub	sp, fp, #16
   10658:	pop	{r4, r5, r6, sl, fp, pc}
   1065c:	add	r0, sp, #4
   10660:	bl	106cc <bandb_handle_failure>
   10664:	.word	0x0004d1f8
   10668:	.word	0x0004d1e0

0001066c <bandb_restart_cb>:
   1066c:	push	{r4, r5, r6, sl, fp, lr}
   10670:	add	fp, sp, #16
   10674:	mov	r4, r0
   10678:	mov	r6, #0
   1067c:	ldr	r5, [pc, #64]	; 106c4 <bandb_restart_cb+0x58>
   10680:	add	r5, pc, r5
   10684:	mov	r0, #0
   10688:	mov	r1, r5
   1068c:	bl	e0b4 <ilog@plt>
   10690:	mov	r0, #256	; 0x100
   10694:	mov	r1, #0
   10698:	mov	r2, r5
   1069c:	bl	d640 <sendto_realops_snomask@plt>
   106a0:	cmp	r4, #0
   106a4:	beq	106bc <bandb_restart_cb+0x50>
   106a8:	mov	r0, r4
   106ac:	bl	d19c <rb_helper_close@plt>
   106b0:	ldr	r0, [pc, #16]	; 106c8 <bandb_restart_cb+0x5c>
   106b4:	add	r0, pc, r0
   106b8:	str	r6, [r0]
   106bc:	pop	{r4, r5, r6, sl, fp, lr}
   106c0:	b	10090 <start_bandb>
   106c4:	.word	0x000300f2
   106c8:	.word	0x0004cc24

000106cc <bandb_handle_failure>:
   106cc:	push	{fp, lr}
   106d0:	mov	fp, sp
   106d4:	mov	r4, r0
   106d8:	ldr	r0, [pc, #92]	; 1073c <bandb_handle_failure+0x70>
   106dc:	ldr	r0, [pc, r0]
   106e0:	ldrb	r0, [r0]
   106e4:	cmp	r0, #0
   106e8:	beq	10708 <bandb_handle_failure+0x3c>
   106ec:	ldr	r2, [r4, #4]
   106f0:	ldr	r0, [pc, #72]	; 10740 <bandb_handle_failure+0x74>
   106f4:	ldr	r0, [pc, r0]
   106f8:	ldr	r0, [r0]
   106fc:	ldr	r1, [pc, #64]	; 10744 <bandb_handle_failure+0x78>
   10700:	add	r1, pc, r1
   10704:	bl	dd60 <fprintf@plt>
   10708:	ldr	r2, [r4, #4]
   1070c:	ldr	r5, [pc, #52]	; 10748 <bandb_handle_failure+0x7c>
   10710:	add	r5, pc, r5
   10714:	mov	r0, #0
   10718:	mov	r1, r5
   1071c:	bl	e0b4 <ilog@plt>
   10720:	ldr	r3, [r4, #4]
   10724:	mov	r0, #256	; 0x100
   10728:	mov	r1, #0
   1072c:	mov	r2, r5
   10730:	bl	d640 <sendto_realops_snomask@plt>
   10734:	mov	r0, #1
   10738:	bl	dc34 <exit@plt>
   1073c:	.word	0x0004a26c
   10740:	.word	0x0004a264
   10744:	.word	0x0003003d
   10748:	.word	0x00030048

0001074c <bandb_handle_ban>:
   1074c:	push	{r4, r5, r6, r7, fp, lr}
   10750:	add	fp, sp, #16
   10754:	mov	r5, r0
   10758:	bl	cfbc <make_conf@plt>
   1075c:	mov	r4, r0
   10760:	mov	r0, #0
   10764:	str	r0, [r4, #32]
   10768:	ldr	r0, [r5]
   1076c:	ldrb	r0, [r0]
   10770:	mov	r6, #1
   10774:	cmp	r0, #75	; 0x4b
   10778:	bne	1078c <bandb_handle_ban+0x40>
   1077c:	ldr	r0, [r5, #4]
   10780:	bl	1049c <rb_strdup>
   10784:	str	r0, [r4, #28]
   10788:	mov	r6, #2
   1078c:	mov	r7, r5
   10790:	ldr	r0, [r7, r6, lsl #2]!
   10794:	bl	1049c <rb_strdup>
   10798:	str	r0, [r4, #16]
   1079c:	ldr	r0, [r7, #4]
   107a0:	bl	d8c8 <operhash_add@plt>
   107a4:	str	r0, [r4, #12]
   107a8:	add	r6, r6, #2
   107ac:	ldr	r0, [r5]
   107b0:	ldrb	r0, [r0]
   107b4:	sub	r1, r0, #68	; 0x44
   107b8:	cmp	r1, #20
   107bc:	bhi	1086c <bandb_handle_ban+0x120>
   107c0:	mov	r0, #64	; 0x40
   107c4:	add	r2, pc, #4
   107c8:	ldr	r1, [r2, r1, lsl #2]
   107cc:	add	pc, r2, r1
   107d0:	.word	0x00000054
   107d4:	.word	0x0000009c
   107d8:	.word	0x0000009c
   107dc:	.word	0x0000009c
   107e0:	.word	0x0000009c
   107e4:	.word	0x0000009c
   107e8:	.word	0x0000009c
   107ec:	.word	0x00000098
   107f0:	.word	0x0000009c
   107f4:	.word	0x0000009c
   107f8:	.word	0x0000009c
   107fc:	.word	0x0000009c
   10800:	.word	0x0000009c
   10804:	.word	0x0000009c
   10808:	.word	0x0000005c
   1080c:	.word	0x0000009c
   10810:	.word	0x0000009c
   10814:	.word	0x0000009c
   10818:	.word	0x0000009c
   1081c:	.word	0x0000009c
   10820:	.word	0x0000008c
   10824:	mov	r0, #131072	; 0x20000
   10828:	b	10868 <bandb_handle_ban+0x11c>
   1082c:	ldr	r0, [r4, #16]
   10830:	cmp	r0, #0
   10834:	beq	10864 <bandb_handle_ban+0x118>
   10838:	ldrb	r0, [r0]
   1083c:	ldr	r1, [pc, #116]	; 108b8 <bandb_handle_ban+0x16c>
   10840:	ldr	r1, [pc, r1]
   10844:	add	r0, r1, r0, lsl #2
   10848:	ldrb	r1, [r0, #1]
   1084c:	mov	r0, #256	; 0x100
   10850:	tst	r1, #2
   10854:	moveq	r0, #512	; 0x200
   10858:	b	10868 <bandb_handle_ban+0x11c>
   1085c:	mov	r0, #128	; 0x80
   10860:	b	10868 <bandb_handle_ban+0x11c>
   10864:	mov	r0, #512	; 0x200
   10868:	str	r0, [r4]
   1086c:	ldr	r0, [r5, r6, lsl #2]
   10870:	mov	r1, #124	; 0x7c
   10874:	bl	dce8 <strchr@plt>
   10878:	cmp	r0, #0
   1087c:	beq	10890 <bandb_handle_ban+0x144>
   10880:	mov	r1, #0
   10884:	strb	r1, [r0], #1
   10888:	bl	1049c <rb_strdup>
   1088c:	str	r0, [r4, #24]
   10890:	ldr	r0, [r5, r6, lsl #2]
   10894:	bl	1049c <rb_strdup>
   10898:	str	r0, [r4, #20]
   1089c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   108a0:	mov	r1, r0
   108a4:	ldr	r2, [pc, #16]	; 108bc <bandb_handle_ban+0x170>
   108a8:	ldr	r2, [pc, r2]
   108ac:	mov	r0, r4
   108b0:	pop	{r4, r5, r6, r7, fp, lr}
   108b4:	b	10a9c <rb_dlinkAdd>
   108b8:	.word	0x0004a1b8
   108bc:	.word	0x0004a0f8

000108c0 <bandb_handle_clear>:
   108c0:	push	{r4, r5, fp, lr}
   108c4:	add	fp, sp, #8
   108c8:	ldr	r0, [pc, #56]	; 10908 <bandb_handle_clear+0x48>
   108cc:	ldr	r0, [pc, r0]
   108d0:	ldr	r4, [r0]
   108d4:	cmp	r4, #0
   108d8:	popeq	{r4, r5, fp, pc}
   108dc:	ldr	r0, [r4]
   108e0:	ldr	r5, [r4, #8]
   108e4:	bl	dc40 <free_conf@plt>
   108e8:	mov	r0, r4
   108ec:	bl	10b8c <rb_dlinkDelete>
   108f0:	mov	r0, r4
   108f4:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   108f8:	cmp	r5, #0
   108fc:	mov	r4, r5
   10900:	bne	108dc <bandb_handle_clear+0x1c>
   10904:	pop	{r4, r5, fp, pc}
   10908:	.word	0x0004a0d4

0001090c <bandb_handle_finish>:
   1090c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10910:	add	fp, sp, #24
   10914:	sub	sp, sp, #8
   10918:	bl	e780 <clear_out_address_conf_bans@plt>
   1091c:	bl	dd3c <clear_s_newconf_bans@plt>
   10920:	ldr	r0, [pc, #360]	; 10a90 <bandb_handle_finish+0x184>
   10924:	ldr	r0, [pc, r0]
   10928:	ldr	r4, [r0]
   1092c:	cmp	r4, #0
   10930:	beq	10a84 <bandb_handle_finish+0x178>
   10934:	ldr	r8, [pc, #344]	; 10a94 <bandb_handle_finish+0x188>
   10938:	ldr	r8, [pc, r8]
   1093c:	ldr	r5, [pc, #340]	; 10a98 <bandb_handle_finish+0x18c>
   10940:	ldr	r5, [pc, r5]
   10944:	mov	r7, r4
   10948:	ldr	r6, [r4]
   1094c:	ldr	r4, [r4, #8]
   10950:	mov	r0, r7
   10954:	bl	10b8c <rb_dlinkDelete>
   10958:	mov	r0, r7
   1095c:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   10960:	ldr	r0, [r6]
   10964:	cmp	r0, #255	; 0xff
   10968:	ble	109a8 <bandb_handle_finish+0x9c>
   1096c:	cmp	r0, #256	; 0x100
   10970:	beq	109e8 <bandb_handle_finish+0xdc>
   10974:	cmp	r0, #512	; 0x200
   10978:	beq	10a10 <bandb_handle_finish+0x104>
   1097c:	cmp	r0, #131072	; 0x20000
   10980:	bne	109dc <bandb_handle_finish+0xd0>
   10984:	mov	r0, r6
   10988:	bl	10d50 <bandb_check_dline>
   1098c:	cmp	r0, #0
   10990:	beq	10a74 <bandb_handle_finish+0x168>
   10994:	ldr	r0, [r6, #16]
   10998:	ldr	r2, [r6, #28]
   1099c:	str	r6, [sp]
   109a0:	mov	r1, #131072	; 0x20000
   109a4:	b	10a60 <bandb_handle_finish+0x154>
   109a8:	cmp	r0, #64	; 0x40
   109ac:	beq	10a40 <bandb_handle_finish+0x134>
   109b0:	cmp	r0, #128	; 0x80
   109b4:	bne	109dc <bandb_handle_finish+0xd0>
   109b8:	mov	r0, r6
   109bc:	bl	10d7c <bandb_check_xline>
   109c0:	cmp	r0, #0
   109c4:	beq	10a74 <bandb_handle_finish+0x168>
   109c8:	bl	dc64 <rb_make_rb_dlink_node@plt>
   109cc:	mov	r1, r0
   109d0:	mov	r0, r6
   109d4:	mov	r2, r8
   109d8:	bl	10a9c <rb_dlinkAdd>
   109dc:	cmp	r4, #0
   109e0:	bne	10944 <bandb_handle_finish+0x38>
   109e4:	b	10a84 <bandb_handle_finish+0x178>
   109e8:	mov	r0, r6
   109ec:	bl	10db0 <bandb_check_resv_channel>
   109f0:	cmp	r0, #0
   109f4:	beq	10a74 <bandb_handle_finish+0x168>
   109f8:	ldr	r0, [r6, #16]
   109fc:	mov	r1, r6
   10a00:	bl	d088 <add_to_resv_hash@plt>
   10a04:	cmp	r4, #0
   10a08:	bne	10944 <bandb_handle_finish+0x38>
   10a0c:	b	10a84 <bandb_handle_finish+0x178>
   10a10:	mov	r0, r6
   10a14:	bl	10e30 <bandb_check_resv_nick>
   10a18:	cmp	r0, #0
   10a1c:	beq	10a74 <bandb_handle_finish+0x168>
   10a20:	bl	dc64 <rb_make_rb_dlink_node@plt>
   10a24:	mov	r1, r0
   10a28:	mov	r0, r6
   10a2c:	mov	r2, r5
   10a30:	bl	10a9c <rb_dlinkAdd>
   10a34:	cmp	r4, #0
   10a38:	bne	10944 <bandb_handle_finish+0x38>
   10a3c:	b	10a84 <bandb_handle_finish+0x178>
   10a40:	mov	r0, r6
   10a44:	bl	10c18 <bandb_check_kline>
   10a48:	cmp	r0, #0
   10a4c:	beq	10a74 <bandb_handle_finish+0x168>
   10a50:	ldr	r0, [r6, #16]
   10a54:	ldr	r2, [r6, #28]
   10a58:	str	r6, [sp]
   10a5c:	mov	r1, #64	; 0x40
   10a60:	mov	r3, #0
   10a64:	bl	dad8 <add_conf_by_address@plt>
   10a68:	cmp	r4, #0
   10a6c:	bne	10944 <bandb_handle_finish+0x38>
   10a70:	b	10a84 <bandb_handle_finish+0x178>
   10a74:	mov	r0, r6
   10a78:	bl	dc40 <free_conf@plt>
   10a7c:	cmp	r4, #0
   10a80:	bne	10944 <bandb_handle_finish+0x38>
   10a84:	sub	sp, fp, #24
   10a88:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10a8c:	b	de08 <check_banned_lines@plt>
   10a90:	.word	0x0004a07c
   10a94:	.word	0x00049f8c
   10a98:	.word	0x00049f6c

00010a9c <rb_dlinkAdd>:
   10a9c:	push	{fp, lr}
   10aa0:	mov	fp, sp
   10aa4:	cmp	r0, #0
   10aa8:	beq	10b08 <rb_dlinkAdd+0x6c>
   10aac:	cmp	r1, #0
   10ab0:	beq	10b28 <rb_dlinkAdd+0x8c>
   10ab4:	cmp	r2, #0
   10ab8:	beq	10b48 <rb_dlinkAdd+0xac>
   10abc:	mov	r3, #0
   10ac0:	stm	r1, {r0, r3}
   10ac4:	ldr	r0, [r2]
   10ac8:	str	r0, [r1, #8]
   10acc:	ldr	r0, [r2]
   10ad0:	cmp	r0, #0
   10ad4:	beq	10ae4 <rb_dlinkAdd+0x48>
   10ad8:	add	r0, r0, #4
   10adc:	str	r1, [r0]
   10ae0:	b	10af4 <rb_dlinkAdd+0x58>
   10ae4:	mov	r0, r2
   10ae8:	ldr	r3, [r0, #4]!
   10aec:	cmp	r3, #0
   10af0:	streq	r1, [r0]
   10af4:	str	r1, [r2]
   10af8:	ldr	r0, [r2, #8]
   10afc:	add	r0, r0, #1
   10b00:	str	r0, [r2, #8]
   10b04:	pop	{fp, pc}
   10b08:	ldr	r0, [pc, #88]	; 10b68 <rb_dlinkAdd+0xcc>
   10b0c:	add	r0, pc, r0
   10b10:	ldr	r1, [pc, #84]	; 10b6c <rb_dlinkAdd+0xd0>
   10b14:	add	r1, pc, r1
   10b18:	ldr	r3, [pc, #80]	; 10b70 <rb_dlinkAdd+0xd4>
   10b1c:	add	r3, pc, r3
   10b20:	mov	r2, #143	; 0x8f
   10b24:	bl	e7e0 <__assert_fail@plt>
   10b28:	ldr	r0, [pc, #68]	; 10b74 <rb_dlinkAdd+0xd8>
   10b2c:	add	r0, pc, r0
   10b30:	ldr	r1, [pc, #64]	; 10b78 <rb_dlinkAdd+0xdc>
   10b34:	add	r1, pc, r1
   10b38:	ldr	r3, [pc, #60]	; 10b7c <rb_dlinkAdd+0xe0>
   10b3c:	add	r3, pc, r3
   10b40:	mov	r2, #144	; 0x90
   10b44:	bl	e7e0 <__assert_fail@plt>
   10b48:	ldr	r0, [pc, #48]	; 10b80 <rb_dlinkAdd+0xe4>
   10b4c:	add	r0, pc, r0
   10b50:	ldr	r1, [pc, #44]	; 10b84 <rb_dlinkAdd+0xe8>
   10b54:	add	r1, pc, r1
   10b58:	ldr	r3, [pc, #40]	; 10b88 <rb_dlinkAdd+0xec>
   10b5c:	add	r3, pc, r3
   10b60:	mov	r2, #145	; 0x91
   10b64:	bl	e7e0 <__assert_fail@plt>
   10b68:	.word	0x0002fb05
   10b6c:	.word	0x0002faa2
   10b70:	.word	0x0002fb02
   10b74:	.word	0x0002fa80
   10b78:	.word	0x0002fa82
   10b7c:	.word	0x0002fae2
   10b80:	.word	0x000352f9
   10b84:	.word	0x0002fa62
   10b88:	.word	0x0002fac2

00010b8c <rb_dlinkDelete>:
   10b8c:	cmp	r0, #0
   10b90:	beq	10be0 <rb_dlinkDelete+0x54>
   10b94:	ldr	ip, [pc, #108]	; 10c08 <rb_dlinkDelete+0x7c>
   10b98:	ldr	ip, [pc, ip]
   10b9c:	ldmib	r0, {r2, r3}
   10ba0:	add	r1, r3, #4
   10ba4:	cmp	r3, #0
   10ba8:	addeq	r1, ip, #4
   10bac:	str	r2, [r1]
   10bb0:	ldmib	r0, {r1, r2}
   10bb4:	cmp	r1, #0
   10bb8:	mov	r3, ip
   10bbc:	addne	r3, r1, #8
   10bc0:	str	r2, [r3]
   10bc4:	mov	r1, #0
   10bc8:	str	r1, [r0, #4]
   10bcc:	str	r1, [r0, #8]
   10bd0:	ldr	r0, [ip, #8]
   10bd4:	sub	r0, r0, #1
   10bd8:	str	r0, [ip, #8]
   10bdc:	bx	lr
   10be0:	push	{fp, lr}
   10be4:	mov	fp, sp
   10be8:	ldr	r0, [pc, #28]	; 10c0c <rb_dlinkDelete+0x80>
   10bec:	add	r0, pc, r0
   10bf0:	ldr	r1, [pc, #24]	; 10c10 <rb_dlinkDelete+0x84>
   10bf4:	add	r1, pc, r1
   10bf8:	ldr	r3, [pc, #20]	; 10c14 <rb_dlinkDelete+0x88>
   10bfc:	add	r3, pc, r3
   10c00:	mov	r2, #235	; 0xeb
   10c04:	bl	e7e0 <__assert_fail@plt>
   10c08:	.word	0x00049e08
   10c0c:	.word	0x0002f9c0
   10c10:	.word	0x0002f9c2
   10c14:	.word	0x0002fa5d

00010c18 <bandb_check_kline>:
   10c18:	push	{r4, r5, fp, lr}
   10c1c:	add	fp, sp, #8
   10c20:	sub	sp, sp, #144	; 0x90
   10c24:	mov	r4, r0
   10c28:	ldr	r0, [r0, #16]
   10c2c:	add	r1, sp, #16
   10c30:	mov	r5, #0
   10c34:	mov	r2, #0
   10c38:	bl	d568 <parse_netmask@plt>
   10c3c:	cmp	r0, #1
   10c40:	beq	10c78 <bandb_check_kline+0x60>
   10c44:	mov	r1, #10
   10c48:	cmp	r0, #3
   10c4c:	movne	r1, #2
   10c50:	ldr	r0, [r4, #16]
   10c54:	ldr	r2, [r4, #28]
   10c58:	mov	r3, #0
   10c5c:	mov	r5, #64	; 0x40
   10c60:	str	r5, [sp]
   10c64:	stmib	sp, {r1, r2, r3}
   10c68:	add	r3, sp, #16
   10c6c:	mov	r1, #0
   10c70:	mov	r2, #0
   10c74:	b	10c9c <bandb_check_kline+0x84>
   10c78:	ldr	r0, [r4, #16]
   10c7c:	ldr	r1, [r4, #28]
   10c80:	mov	r2, #64	; 0x40
   10c84:	stm	sp, {r2, r5}
   10c88:	str	r1, [sp, #8]
   10c8c:	str	r5, [sp, #12]
   10c90:	mov	r1, #0
   10c94:	mov	r2, #0
   10c98:	mov	r3, #0
   10c9c:	bl	d2f8 <find_conf_by_address@plt>
   10ca0:	cmp	r0, #0
   10ca4:	beq	10cb8 <bandb_check_kline+0xa0>
   10ca8:	ldrb	r1, [r0, #6]
   10cac:	mov	r0, #0
   10cb0:	tst	r1, #128	; 0x80
   10cb4:	beq	10d34 <bandb_check_kline+0x11c>
   10cb8:	ldr	r0, [r4, #28]
   10cbc:	ldrb	r2, [r0]
   10cc0:	cmp	r2, #0
   10cc4:	beq	10cf4 <bandb_check_kline+0xdc>
   10cc8:	add	r0, r0, #1
   10ccc:	ldr	r1, [pc, #116]	; 10d48 <bandb_check_kline+0x130>
   10cd0:	ldr	r1, [pc, r1]
   10cd4:	uxtb	r2, r2
   10cd8:	add	r2, r1, r2, lsl #2
   10cdc:	ldrb	r2, [r2, #1]
   10ce0:	tst	r2, #5
   10ce4:	beq	10d3c <bandb_check_kline+0x124>
   10ce8:	ldrb	r2, [r0], #1
   10cec:	cmp	r2, #0
   10cf0:	bne	10cd4 <bandb_check_kline+0xbc>
   10cf4:	ldr	r1, [r4, #16]
   10cf8:	ldrb	r3, [r1]
   10cfc:	mov	r0, #1
   10d00:	cmp	r3, #0
   10d04:	beq	10d34 <bandb_check_kline+0x11c>
   10d08:	add	r1, r1, #1
   10d0c:	ldr	r2, [pc, #56]	; 10d4c <bandb_check_kline+0x134>
   10d10:	ldr	r2, [pc, r2]
   10d14:	uxtb	r3, r3
   10d18:	add	r3, r2, r3, lsl #2
   10d1c:	ldrb	r3, [r3, #1]
   10d20:	tst	r3, #9
   10d24:	beq	10d3c <bandb_check_kline+0x124>
   10d28:	ldrb	r3, [r1], #1
   10d2c:	cmp	r3, #0
   10d30:	bne	10d14 <bandb_check_kline+0xfc>
   10d34:	sub	sp, fp, #8
   10d38:	pop	{r4, r5, fp, pc}
   10d3c:	mov	r0, #0
   10d40:	sub	sp, fp, #8
   10d44:	pop	{r4, r5, fp, pc}
   10d48:	.word	0x00049d28
   10d4c:	.word	0x00049ce8

00010d50 <bandb_check_dline>:
   10d50:	push	{fp, lr}
   10d54:	mov	fp, sp
   10d58:	sub	sp, sp, #136	; 0x88
   10d5c:	ldr	r0, [r0, #16]
   10d60:	add	r1, sp, #8
   10d64:	add	r2, sp, #4
   10d68:	bl	d568 <parse_netmask@plt>
   10d6c:	cmp	r0, #0
   10d70:	movwne	r0, #1
   10d74:	mov	sp, fp
   10d78:	pop	{fp, pc}

00010d7c <bandb_check_xline>:
   10d7c:	push	{fp, lr}
   10d80:	mov	fp, sp
   10d84:	ldr	r0, [r0, #16]
   10d88:	bl	dfd0 <find_xline_mask@plt>
   10d8c:	cmp	r0, #0
   10d90:	beq	10da8 <bandb_check_xline+0x2c>
   10d94:	ldrb	r1, [r0, #6]
   10d98:	mov	r0, #0
   10d9c:	tst	r1, #128	; 0x80
   10da0:	movne	r0, #1
   10da4:	pop	{fp, pc}
   10da8:	mov	r0, #1
   10dac:	pop	{fp, pc}

00010db0 <bandb_check_resv_channel>:
   10db0:	push	{r4, r5, fp, lr}
   10db4:	add	fp, sp, #8
   10db8:	mov	r5, r0
   10dbc:	ldr	r0, [r0, #16]
   10dc0:	bl	e600 <hash_find_resv@plt>
   10dc4:	mov	r4, #0
   10dc8:	cmp	r0, #0
   10dcc:	bne	10e24 <bandb_check_resv_channel+0x74>
   10dd0:	ldr	r5, [r5, #16]
   10dd4:	mov	r0, r5
   10dd8:	bl	dc94 <strlen@plt>
   10ddc:	cmp	r0, #200	; 0xc8
   10de0:	bhi	10e24 <bandb_check_resv_channel+0x74>
   10de4:	ldrb	r1, [r5]
   10de8:	cmp	r1, #0
   10dec:	beq	10e18 <bandb_check_resv_channel+0x68>
   10df0:	add	r0, r5, #1
   10df4:	ldr	r2, [pc, #48]	; 10e2c <bandb_check_resv_channel+0x7c>
   10df8:	ldr	r2, [pc, r2]
   10dfc:	uxtb	r1, r1
   10e00:	ldrb	r1, [r2, r1, lsl #2]
   10e04:	tst	r1, #128	; 0x80
   10e08:	beq	10e24 <bandb_check_resv_channel+0x74>
   10e0c:	ldrb	r1, [r0], #1
   10e10:	cmp	r1, #0
   10e14:	bne	10dfc <bandb_check_resv_channel+0x4c>
   10e18:	mov	r4, #1
   10e1c:	mov	r0, r4
   10e20:	pop	{r4, r5, fp, pc}
   10e24:	mov	r0, r4
   10e28:	pop	{r4, r5, fp, pc}
   10e2c:	.word	0x00049c00

00010e30 <bandb_check_resv_nick>:
   10e30:	push	{r4, sl, fp, lr}
   10e34:	add	fp, sp, #8
   10e38:	mov	r4, r0
   10e3c:	ldr	r0, [r0, #16]
   10e40:	bl	e7c8 <clean_resv_nick@plt>
   10e44:	cmp	r0, #0
   10e48:	moveq	r0, #0
   10e4c:	popeq	{r4, sl, fp, pc}
   10e50:	ldr	r0, [r4, #16]
   10e54:	bl	d9c4 <find_nick_resv@plt>
   10e58:	clz	r0, r0
   10e5c:	lsr	r0, r0, #5
   10e60:	pop	{r4, sl, fp, pc}

00010e64 <init_cache>:
   10e64:	push	{r4, r5, fp, lr}
   10e68:	add	fp, sp, #8
   10e6c:	mov	r0, #16
   10e70:	bl	10f7c <rb_malloc>
   10e74:	ldr	r4, [pc, #200]	; 10f44 <init_cache+0xe0>
   10e78:	ldr	r4, [pc, r4]
   10e7c:	str	r0, [r4]
   10e80:	ldr	r0, [pc, #192]	; 10f48 <init_cache+0xe4>
   10e84:	add	r0, pc, r0
   10e88:	bl	10f9c <rb_strdup>
   10e8c:	ldr	r1, [r4]
   10e90:	str	r0, [r1]
   10e94:	ldr	r0, [pc, #176]	; 10f4c <init_cache+0xe8>
   10e98:	ldr	r0, [pc, r0]
   10e9c:	mov	r4, #0
   10ea0:	strb	r4, [r0]
   10ea4:	ldr	r5, [pc, #164]	; 10f50 <init_cache+0xec>
   10ea8:	ldr	r5, [pc, r5]
   10eac:	ldr	r0, [r5, #36]	; 0x24
   10eb0:	ldr	r1, [pc, #156]	; 10f54 <init_cache+0xf0>
   10eb4:	add	r1, pc, r1
   10eb8:	mov	r2, #0
   10ebc:	bl	db08 <cache_file@plt>
   10ec0:	ldr	r1, [pc, #144]	; 10f58 <init_cache+0xf4>
   10ec4:	ldr	r1, [pc, r1]
   10ec8:	str	r0, [r1]
   10ecc:	ldr	r0, [r5, #48]	; 0x30
   10ed0:	ldr	r1, [pc, #132]	; 10f5c <init_cache+0xf8>
   10ed4:	add	r1, pc, r1
   10ed8:	mov	r2, #0
   10edc:	bl	db08 <cache_file@plt>
   10ee0:	ldr	r1, [pc, #120]	; 10f60 <init_cache+0xfc>
   10ee4:	ldr	r1, [pc, r1]
   10ee8:	str	r0, [r1]
   10eec:	ldr	r0, [pc, #112]	; 10f64 <init_cache+0x100>
   10ef0:	ldr	r0, [pc, r0]
   10ef4:	str	r4, [r0]
   10ef8:	str	r4, [r0, #4]
   10efc:	str	r4, [r0, #8]
   10f00:	ldr	r4, [pc, #96]	; 10f68 <init_cache+0x104>
   10f04:	ldr	r4, [pc, r4]
   10f08:	ldr	r0, [pc, #92]	; 10f6c <init_cache+0x108>
   10f0c:	add	r0, pc, r0
   10f10:	mov	r1, r4
   10f14:	bl	dfb8 <rb_dictionary_create@plt>
   10f18:	ldr	r1, [pc, #80]	; 10f70 <init_cache+0x10c>
   10f1c:	ldr	r1, [pc, r1]
   10f20:	str	r0, [r1]
   10f24:	ldr	r0, [pc, #72]	; 10f74 <init_cache+0x110>
   10f28:	add	r0, pc, r0
   10f2c:	mov	r1, r4
   10f30:	bl	dfb8 <rb_dictionary_create@plt>
   10f34:	ldr	r1, [pc, #60]	; 10f78 <init_cache+0x114>
   10f38:	ldr	r1, [pc, r1]
   10f3c:	str	r0, [r1]
   10f40:	pop	{r4, r5, fp, pc}
   10f44:	.word	0x000499f8
   10f48:	.word	0x000352e4
   10f4c:	.word	0x00049c0c
   10f50:	.word	0x00049ba0
   10f54:	.word	0x00030be1
   10f58:	.word	0x00049b78
   10f5c:	.word	0x00030c14
   10f60:	.word	0x00049b30
   10f64:	.word	0x00049c50
   10f68:	.word	0x000499ac
   10f6c:	.word	0x0002f8a2
   10f70:	.word	0x00049c30
   10f74:	.word	0x0002f890
   10f78:	.word	0x00049928

00010f7c <rb_malloc>:
   10f7c:	push	{fp, lr}
   10f80:	mov	fp, sp
   10f84:	mov	r1, r0
   10f88:	mov	r0, #1
   10f8c:	bl	cfa4 <calloc@plt>
   10f90:	cmp	r0, #0
   10f94:	popne	{fp, pc}
   10f98:	bl	d448 <rb_outofmemory@plt>

00010f9c <rb_strdup>:
   10f9c:	push	{r4, r5, fp, lr}
   10fa0:	add	fp, sp, #8
   10fa4:	mov	r4, r0
   10fa8:	bl	dc94 <strlen@plt>
   10fac:	add	r0, r0, #1
   10fb0:	bl	da90 <malloc@plt>
   10fb4:	cmp	r0, #0
   10fb8:	beq	10fd0 <rb_strdup+0x34>
   10fbc:	mov	r5, r0
   10fc0:	mov	r1, r4
   10fc4:	bl	d928 <strcpy@plt>
   10fc8:	mov	r0, r5
   10fcc:	pop	{r4, r5, fp, pc}
   10fd0:	bl	d448 <rb_outofmemory@plt>

00010fd4 <cache_file>:
   10fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd8:	add	fp, sp, #28
   10fdc:	sub	sp, sp, #12
   10fe0:	sub	sp, sp, #1024	; 0x400
   10fe4:	mov	r5, r2
   10fe8:	mov	r6, r1
   10fec:	ldr	r1, [pc, #288]	; 11114 <cache_file+0x140>
   10ff0:	add	r1, pc, r1
   10ff4:	bl	d1f0 <fopen@plt>
   10ff8:	cmp	r0, #0
   10ffc:	beq	11104 <cache_file+0x130>
   11000:	mov	r4, r0
   11004:	mov	r0, #48	; 0x30
   11008:	bl	10f7c <rb_malloc>
   1100c:	mov	r7, r0
   11010:	mov	r1, r6
   11014:	mov	r2, #30
   11018:	bl	e510 <rb_strlcpy@plt>
   1101c:	str	r7, [sp, #4]
   11020:	str	r5, [r7, #44]	; 0x2c
   11024:	add	r0, sp, #520	; 0x208
   11028:	mov	r1, #512	; 0x200
   1102c:	mov	r2, r4
   11030:	bl	e528 <fgets_unlocked@plt>
   11034:	cmp	r0, #0
   11038:	beq	110dc <cache_file+0x108>
   1103c:	ldr	r0, [sp, #4]
   11040:	add	r6, r0, #32
   11044:	add	r7, sp, #520	; 0x208
   11048:	ldr	r9, [pc, #200]	; 11118 <cache_file+0x144>
   1104c:	add	r9, pc, r9
   11050:	add	sl, sp, #8
   11054:	mov	r8, #0
   11058:	mov	r0, r7
   1105c:	mov	r1, r9
   11060:	bl	e4c8 <strpbrk@plt>
   11064:	cmp	r0, #0
   11068:	strbne	r8, [r0]
   1106c:	ldrb	r0, [sp, #520]	; 0x208
   11070:	cmp	r0, #0
   11074:	beq	110a4 <cache_file+0xd0>
   11078:	mov	r0, #16
   1107c:	bl	10f7c <rb_malloc>
   11080:	mov	r5, r0
   11084:	mov	r0, sl
   11088:	mov	r1, r7
   1108c:	bl	11120 <untabify>
   11090:	mov	r0, sl
   11094:	bl	10f9c <rb_strdup>
   11098:	mov	r1, r5
   1109c:	str	r0, [r1], #4
   110a0:	b	110b8 <cache_file+0xe4>
   110a4:	ldr	r0, [pc, #112]	; 1111c <cache_file+0x148>
   110a8:	ldr	r0, [pc, r0]
   110ac:	ldr	r5, [r0]
   110b0:	bl	dc64 <rb_make_rb_dlink_node@plt>
   110b4:	mov	r1, r0
   110b8:	mov	r0, r5
   110bc:	mov	r2, r6
   110c0:	bl	111c8 <rb_dlinkAddTail>
   110c4:	mov	r0, r7
   110c8:	mov	r1, #512	; 0x200
   110cc:	mov	r2, r4
   110d0:	bl	e528 <fgets_unlocked@plt>
   110d4:	cmp	r0, #0
   110d8:	bne	11058 <cache_file+0x84>
   110dc:	ldr	r5, [sp, #4]
   110e0:	ldr	r0, [r5, #40]	; 0x28
   110e4:	cmp	r0, #0
   110e8:	bne	110f8 <cache_file+0x124>
   110ec:	mov	r0, r5
   110f0:	bl	112c0 <rb_free>
   110f4:	mov	r5, #0
   110f8:	mov	r0, r4
   110fc:	bl	e0f0 <fclose@plt>
   11100:	b	11108 <cache_file+0x134>
   11104:	mov	r5, #0
   11108:	mov	r0, r5
   1110c:	sub	sp, fp, #28
   11110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11114:	.word	0x00031359
   11118:	.word	0x000347b7
   1111c:	.word	0x000497c8

00011120 <untabify>:
   11120:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11124:	add	fp, sp, #24
   11128:	mov	r4, r0
   1112c:	ldrb	r0, [r1]
   11130:	cmp	r0, #0
   11134:	beq	111bc <untabify+0x9c>
   11138:	mov	r5, r1
   1113c:	mov	r6, #0
   11140:	movw	r8, #511	; 0x1ff
   11144:	movw	r7, #510	; 0x1fe
   11148:	uxtb	r1, r0
   1114c:	cmp	r1, #9
   11150:	bne	111a0 <untabify+0x80>
   11154:	sub	r0, r6, r8
   11158:	cmn	r0, #8
   1115c:	mvnls	r0, #7
   11160:	rsb	r2, r0, #0
   11164:	mov	r0, r4
   11168:	mov	r1, #32
   1116c:	bl	df28 <memset@plt>
   11170:	mov	r0, #0
   11174:	add	r1, r6, r0
   11178:	add	r1, r1, #1
   1117c:	add	r0, r0, #1
   11180:	cmp	r1, r7
   11184:	cmpls	r0, #8
   11188:	bcc	11174 <untabify+0x54>
   1118c:	add	r6, r6, r0
   11190:	add	r4, r4, r0
   11194:	cmp	r6, r7
   11198:	bls	111b0 <untabify+0x90>
   1119c:	b	111bc <untabify+0x9c>
   111a0:	strb	r0, [r4], #1
   111a4:	add	r6, r6, #1
   111a8:	cmp	r6, r7
   111ac:	bhi	111bc <untabify+0x9c>
   111b0:	ldrb	r0, [r5, #1]!
   111b4:	cmp	r0, #0
   111b8:	bne	11148 <untabify+0x28>
   111bc:	mov	r0, #0
   111c0:	strb	r0, [r4]
   111c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000111c8 <rb_dlinkAddTail>:
   111c8:	push	{fp, lr}
   111cc:	mov	fp, sp
   111d0:	cmp	r1, #0
   111d4:	beq	1123c <rb_dlinkAddTail+0x74>
   111d8:	cmp	r2, #0
   111dc:	beq	1125c <rb_dlinkAddTail+0x94>
   111e0:	cmp	r0, #0
   111e4:	beq	1127c <rb_dlinkAddTail+0xb4>
   111e8:	mov	r3, #0
   111ec:	str	r3, [r1, #8]
   111f0:	str	r0, [r1]
   111f4:	ldr	r0, [r2, #4]
   111f8:	str	r0, [r1, #4]
   111fc:	ldr	r0, [r2, #4]
   11200:	cmp	r0, #0
   11204:	beq	11214 <rb_dlinkAddTail+0x4c>
   11208:	add	r0, r0, #8
   1120c:	str	r1, [r0]
   11210:	b	11220 <rb_dlinkAddTail+0x58>
   11214:	ldr	r0, [r2]
   11218:	cmp	r0, #0
   1121c:	beq	11234 <rb_dlinkAddTail+0x6c>
   11220:	str	r1, [r2, #4]
   11224:	ldr	r0, [r2, #8]
   11228:	add	r0, r0, #1
   1122c:	str	r0, [r2, #8]
   11230:	pop	{fp, pc}
   11234:	mov	r0, r2
   11238:	b	1120c <rb_dlinkAddTail+0x44>
   1123c:	ldr	r0, [pc, #88]	; 1129c <rb_dlinkAddTail+0xd4>
   11240:	add	r0, pc, r0
   11244:	ldr	r1, [pc, #84]	; 112a0 <rb_dlinkAddTail+0xd8>
   11248:	add	r1, pc, r1
   1124c:	ldr	r3, [pc, #80]	; 112a4 <rb_dlinkAddTail+0xdc>
   11250:	add	r3, pc, r3
   11254:	mov	r2, #211	; 0xd3
   11258:	bl	e7e0 <__assert_fail@plt>
   1125c:	ldr	r0, [pc, #68]	; 112a8 <rb_dlinkAddTail+0xe0>
   11260:	add	r0, pc, r0
   11264:	ldr	r1, [pc, #64]	; 112ac <rb_dlinkAddTail+0xe4>
   11268:	add	r1, pc, r1
   1126c:	ldr	r3, [pc, #60]	; 112b0 <rb_dlinkAddTail+0xe8>
   11270:	add	r3, pc, r3
   11274:	mov	r2, #212	; 0xd4
   11278:	bl	e7e0 <__assert_fail@plt>
   1127c:	ldr	r0, [pc, #48]	; 112b4 <rb_dlinkAddTail+0xec>
   11280:	add	r0, pc, r0
   11284:	ldr	r1, [pc, #44]	; 112b8 <rb_dlinkAddTail+0xf0>
   11288:	add	r1, pc, r1
   1128c:	ldr	r3, [pc, #40]	; 112bc <rb_dlinkAddTail+0xf4>
   11290:	add	r3, pc, r3
   11294:	mov	r2, #213	; 0xd5
   11298:	bl	e7e0 <__assert_fail@plt>
   1129c:	.word	0x0002f36c
   112a0:	.word	0x0002f36e
   112a4:	.word	0x0002f382
   112a8:	.word	0x00034be5
   112ac:	.word	0x0002f34e
   112b0:	.word	0x0002f362
   112b4:	.word	0x0002f391
   112b8:	.word	0x0002f32e
   112bc:	.word	0x0002f342

000112c0 <rb_free>:
   112c0:	cmp	r0, #0
   112c4:	bxeq	lr
   112c8:	b	d328 <free@plt>

000112cc <cache_links>:
   112cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112d0:	add	fp, sp, #28
   112d4:	sub	sp, sp, #12
   112d8:	ldr	r5, [pc, #256]	; 113e0 <cache_links+0x114>
   112dc:	ldr	r5, [pc, r5]
   112e0:	ldr	r4, [r5]
   112e4:	cmp	r4, #0
   112e8:	beq	1130c <cache_links+0x40>
   112ec:	ldr	r0, [r4]
   112f0:	ldr	r6, [r4, #8]
   112f4:	bl	112c0 <rb_free>
   112f8:	mov	r0, r4
   112fc:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   11300:	cmp	r6, #0
   11304:	mov	r4, r6
   11308:	bne	112ec <cache_links+0x20>
   1130c:	mov	r0, #0
   11310:	str	r0, [r5]
   11314:	str	r0, [r5, #4]
   11318:	str	r0, [r5, #8]
   1131c:	ldr	r0, [pc, #192]	; 113e4 <cache_links+0x118>
   11320:	ldr	r0, [pc, r0]
   11324:	ldr	r7, [r0]
   11328:	cmp	r7, #0
   1132c:	beq	113d8 <cache_links+0x10c>
   11330:	ldr	r4, [pc, #176]	; 113e8 <cache_links+0x11c>
   11334:	ldr	r4, [pc, r4]
   11338:	ldr	r0, [pc, #172]	; 113ec <cache_links+0x120>
   1133c:	ldr	r0, [pc, r0]
   11340:	add	r5, r0, #88	; 0x58
   11344:	ldr	r8, [pc, #164]	; 113f0 <cache_links+0x124>
   11348:	add	r8, pc, r8
   1134c:	ldr	r9, [pc, #160]	; 113f4 <cache_links+0x128>
   11350:	ldr	r9, [pc, r9]
   11354:	ldr	sl, [r7]
   11358:	ldrh	r0, [sl, #80]	; 0x50
   1135c:	cmp	r0, #4
   11360:	beq	113cc <cache_links+0x100>
   11364:	ldrb	r0, [sl, #65]	; 0x41
   11368:	tst	r0, #8
   1136c:	beq	1137c <cache_links+0xb0>
   11370:	ldr	r0, [r4, #12]
   11374:	cmp	r0, #0
   11378:	beq	113cc <cache_links+0x100>
   1137c:	mov	r0, #182	; 0xb6
   11380:	bl	10f7c <rb_malloc>
   11384:	mov	r6, r0
   11388:	ldrb	r0, [sl, #345]!	; 0x159
   1138c:	cmp	r0, #0
   11390:	movw	r0, #257	; 0x101
   11394:	sub	r3, sl, r0
   11398:	ldr	r0, [pc, #88]	; 113f8 <cache_links+0x12c>
   1139c:	add	r0, pc, r0
   113a0:	moveq	sl, r0
   113a4:	stm	sp, {r5, sl}
   113a8:	mov	r0, r6
   113ac:	mov	r1, #182	; 0xb6
   113b0:	mov	r2, r8
   113b4:	bl	de74 <snprintf@plt>
   113b8:	bl	dc64 <rb_make_rb_dlink_node@plt>
   113bc:	mov	r1, r0
   113c0:	mov	r0, r6
   113c4:	mov	r2, r9
   113c8:	bl	111c8 <rb_dlinkAddTail>
   113cc:	ldr	r7, [r7, #8]
   113d0:	cmp	r7, #0
   113d4:	bne	11354 <cache_links+0x88>
   113d8:	sub	sp, fp, #28
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	.word	0x00049864
   113e4:	.word	0x00049558
   113e8:	.word	0x00049680
   113ec:	.word	0x0004981c
   113f0:	.word	0x0002f47a
   113f4:	.word	0x000497f0
   113f8:	.word	0x0002f432

000113fc <free_cachefile>:
   113fc:	cmp	r0, #0
   11400:	bxeq	lr
   11404:	push	{r4, r5, r6, r7, fp, lr}
   11408:	add	fp, sp, #16
   1140c:	mov	r4, r0
   11410:	ldr	r0, [r0, #32]
   11414:	cmp	r0, #0
   11418:	beq	1145c <free_cachefile+0x60>
   1141c:	ldr	r6, [pc, #68]	; 11468 <free_cachefile+0x6c>
   11420:	ldr	r6, [pc, r6]
   11424:	ldr	r5, [r0]
   11428:	ldr	r7, [r0, #8]
   1142c:	ldr	r1, [r6]
   11430:	cmp	r5, r1
   11434:	beq	1144c <free_cachefile+0x50>
   11438:	ldr	r0, [r5]
   1143c:	bl	112c0 <rb_free>
   11440:	mov	r0, r5
   11444:	bl	112c0 <rb_free>
   11448:	b	11450 <free_cachefile+0x54>
   1144c:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   11450:	cmp	r7, #0
   11454:	mov	r0, r7
   11458:	bne	11424 <free_cachefile+0x28>
   1145c:	mov	r0, r4
   11460:	pop	{r4, r5, r6, r7, fp, lr}
   11464:	b	112c0 <rb_free>
   11468:	.word	0x00049450

0001146c <load_help>:
   1146c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11470:	add	fp, sp, #28
   11474:	sub	sp, sp, #20
   11478:	sub	sp, sp, #4096	; 0x1000
   1147c:	ldr	r6, [pc, #548]	; 116a8 <load_help+0x23c>
   11480:	ldr	r6, [pc, r6]
   11484:	ldr	r0, [r6]
   11488:	add	r4, sp, #8
   1148c:	mov	r1, r4
   11490:	bl	d97c <rb_dictionary_foreach_start@plt>
   11494:	ldr	r0, [r6]
   11498:	mov	r1, r4
   1149c:	bl	e300 <rb_dictionary_foreach_cur@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	114e8 <load_help+0x7c>
   114a8:	mov	r5, r0
   114ac:	add	r4, sp, #8
   114b0:	ldr	r0, [r6]
   114b4:	mov	r1, r5
   114b8:	bl	d838 <rb_dictionary_delete@plt>
   114bc:	mov	r0, r5
   114c0:	bl	d34c <free_cachefile@plt>
   114c4:	ldr	r0, [r6]
   114c8:	mov	r1, r4
   114cc:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   114d0:	ldr	r0, [r6]
   114d4:	mov	r1, r4
   114d8:	bl	e300 <rb_dictionary_foreach_cur@plt>
   114dc:	mov	r5, r0
   114e0:	cmp	r0, #0
   114e4:	bne	114b0 <load_help+0x44>
   114e8:	ldr	r9, [pc, #444]	; 116ac <load_help+0x240>
   114ec:	ldr	r9, [pc, r9]
   114f0:	ldr	r0, [r9]
   114f4:	add	r4, sp, #8
   114f8:	mov	r1, r4
   114fc:	bl	d97c <rb_dictionary_foreach_start@plt>
   11500:	ldr	r0, [r9]
   11504:	mov	r1, r4
   11508:	bl	e300 <rb_dictionary_foreach_cur@plt>
   1150c:	cmp	r0, #0
   11510:	beq	11554 <load_help+0xe8>
   11514:	mov	r5, r0
   11518:	add	r4, sp, #8
   1151c:	ldr	r0, [r9]
   11520:	mov	r1, r5
   11524:	bl	d838 <rb_dictionary_delete@plt>
   11528:	mov	r0, r5
   1152c:	bl	d34c <free_cachefile@plt>
   11530:	ldr	r0, [r9]
   11534:	mov	r1, r4
   11538:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   1153c:	ldr	r0, [r9]
   11540:	mov	r1, r4
   11544:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11548:	mov	r5, r0
   1154c:	cmp	r0, #0
   11550:	bne	1151c <load_help+0xb0>
   11554:	ldr	r0, [pc, #340]	; 116b0 <load_help+0x244>
   11558:	ldr	r0, [pc, r0]
   1155c:	ldr	r0, [r0, #24]
   11560:	bl	d9f4 <opendir@plt>
   11564:	cmp	r0, #0
   11568:	beq	116a0 <load_help+0x234>
   1156c:	mov	r4, r0
   11570:	bl	e264 <readdir@plt>
   11574:	cmp	r0, #0
   11578:	beq	115f4 <load_help+0x188>
   1157c:	mov	r7, r0
   11580:	mov	sl, #47	; 0x2f
   11584:	add	r5, sp, #16
   11588:	ldr	r8, [pc, #292]	; 116b4 <load_help+0x248>
   1158c:	add	r8, pc, r8
   11590:	ldrb	r0, [r7, #11]!
   11594:	cmp	r0, #46	; 0x2e
   11598:	beq	115e0 <load_help+0x174>
   1159c:	ldr	r0, [pc, #276]	; 116b8 <load_help+0x24c>
   115a0:	ldr	r0, [pc, r0]
   115a4:	ldr	r3, [r0, #24]
   115a8:	str	sl, [sp]
   115ac:	str	r7, [sp, #4]
   115b0:	mov	r0, r5
   115b4:	mov	r1, #4096	; 0x1000
   115b8:	mov	r2, r8
   115bc:	bl	de74 <snprintf@plt>
   115c0:	mov	r0, r5
   115c4:	mov	r1, r7
   115c8:	mov	r2, #2
   115cc:	bl	db08 <cache_file@plt>
   115d0:	mov	r1, r0
   115d4:	ldr	r0, [r6]
   115d8:	mov	r2, r1
   115dc:	bl	d70c <rb_dictionary_add@plt>
   115e0:	mov	r0, r4
   115e4:	bl	e264 <readdir@plt>
   115e8:	mov	r7, r0
   115ec:	cmp	r0, #0
   115f0:	bne	11590 <load_help+0x124>
   115f4:	mov	r0, r4
   115f8:	bl	e75c <closedir@plt>
   115fc:	ldr	r0, [pc, #184]	; 116bc <load_help+0x250>
   11600:	ldr	r0, [pc, r0]
   11604:	ldr	r0, [r0, #20]
   11608:	bl	d9f4 <opendir@plt>
   1160c:	cmp	r0, #0
   11610:	beq	116a0 <load_help+0x234>
   11614:	mov	r4, r0
   11618:	bl	e264 <readdir@plt>
   1161c:	cmp	r0, #0
   11620:	beq	11698 <load_help+0x22c>
   11624:	mov	r7, r0
   11628:	mov	r6, #47	; 0x2f
   1162c:	add	r5, sp, #16
   11630:	ldr	r8, [pc, #136]	; 116c0 <load_help+0x254>
   11634:	add	r8, pc, r8
   11638:	ldrb	r0, [r7, #11]!
   1163c:	cmp	r0, #46	; 0x2e
   11640:	beq	11684 <load_help+0x218>
   11644:	ldr	r0, [pc, #120]	; 116c4 <load_help+0x258>
   11648:	ldr	r0, [pc, r0]
   1164c:	ldr	r3, [r0, #20]
   11650:	stm	sp, {r6, r7}
   11654:	mov	r0, r5
   11658:	mov	r1, #4096	; 0x1000
   1165c:	mov	r2, r8
   11660:	bl	de74 <snprintf@plt>
   11664:	mov	r0, r5
   11668:	mov	r1, r7
   1166c:	mov	r2, #1
   11670:	bl	db08 <cache_file@plt>
   11674:	mov	r1, r0
   11678:	ldr	r0, [r9]
   1167c:	mov	r2, r1
   11680:	bl	d70c <rb_dictionary_add@plt>
   11684:	mov	r0, r4
   11688:	bl	e264 <readdir@plt>
   1168c:	mov	r7, r0
   11690:	cmp	r0, #0
   11694:	bne	11638 <load_help+0x1cc>
   11698:	mov	r0, r4
   1169c:	bl	e75c <closedir@plt>
   116a0:	sub	sp, fp, #28
   116a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116a8:	.word	0x000496cc
   116ac:	.word	0x00049374
   116b0:	.word	0x000494f0
   116b4:	.word	0x0002f255
   116b8:	.word	0x000494a8
   116bc:	.word	0x00049448
   116c0:	.word	0x0002f1ad
   116c4:	.word	0x00049400

000116c8 <send_user_motd>:
   116c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116cc:	add	fp, sp, #24
   116d0:	sub	sp, sp, #8
   116d4:	mov	r4, r0
   116d8:	ldr	r0, [pc, #268]	; 117ec <send_user_motd+0x124>
   116dc:	ldr	r0, [pc, r0]
   116e0:	ldr	r1, [r4, #36]	; 0x24
   116e4:	ldrh	r2, [r1, #80]	; 0x50
   116e8:	cmp	r2, #32
   116ec:	bne	11710 <send_user_motd+0x48>
   116f0:	ldrb	r2, [r1, #396]	; 0x18c
   116f4:	cmp	r2, #0
   116f8:	beq	11718 <send_user_motd+0x50>
   116fc:	mov	r5, r0
   11700:	ldrb	r2, [r5, #396]!	; 0x18c
   11704:	cmp	r2, #0
   11708:	subeq	r5, r5, #308	; 0x134
   1170c:	b	1171c <send_user_motd+0x54>
   11710:	add	r5, r0, #88	; 0x58
   11714:	b	1173c <send_user_motd+0x74>
   11718:	add	r5, r0, #88	; 0x58
   1171c:	ldrb	r1, [r1, #396]	; 0x18c
   11720:	cmp	r1, #0
   11724:	beq	1173c <send_user_motd+0x74>
   11728:	mov	r6, r4
   1172c:	ldrb	r1, [r6, #396]!	; 0x18c
   11730:	cmp	r1, #0
   11734:	subeq	r6, r6, #308	; 0x134
   11738:	b	11740 <send_user_motd+0x78>
   1173c:	add	r6, r4, #88	; 0x58
   11740:	ldr	r7, [pc, #168]	; 117f0 <send_user_motd+0x128>
   11744:	ldr	r7, [pc, r7]
   11748:	ldr	r1, [r7]
   1174c:	cmp	r1, #0
   11750:	ldrne	r1, [r1, #40]	; 0x28
   11754:	cmpne	r1, #0
   11758:	bne	11768 <send_user_motd+0xa0>
   1175c:	ldr	r1, [pc, #144]	; 117f4 <send_user_motd+0x12c>
   11760:	add	r1, pc, r1
   11764:	b	117d4 <send_user_motd+0x10c>
   11768:	add	r0, r0, #88	; 0x58
   1176c:	str	r0, [sp]
   11770:	ldr	r1, [pc, #128]	; 117f8 <send_user_motd+0x130>
   11774:	add	r1, pc, r1
   11778:	mov	r0, r4
   1177c:	mov	r2, r5
   11780:	mov	r3, r6
   11784:	bl	d1e4 <sendto_one@plt>
   11788:	ldr	r0, [r7]
   1178c:	ldr	r7, [r0, #32]
   11790:	cmp	r7, #0
   11794:	beq	117cc <send_user_motd+0x104>
   11798:	ldr	r8, [pc, #92]	; 117fc <send_user_motd+0x134>
   1179c:	add	r8, pc, r8
   117a0:	ldr	r0, [r7]
   117a4:	ldr	r0, [r0]
   117a8:	str	r0, [sp]
   117ac:	mov	r0, r4
   117b0:	mov	r1, r8
   117b4:	mov	r2, r5
   117b8:	mov	r3, r6
   117bc:	bl	d1e4 <sendto_one@plt>
   117c0:	ldr	r7, [r7, #8]
   117c4:	cmp	r7, #0
   117c8:	bne	117a0 <send_user_motd+0xd8>
   117cc:	ldr	r1, [pc, #44]	; 11800 <send_user_motd+0x138>
   117d0:	add	r1, pc, r1
   117d4:	mov	r0, r4
   117d8:	mov	r2, r5
   117dc:	mov	r3, r6
   117e0:	sub	sp, fp, #24
   117e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   117e8:	b	d1e4 <sendto_one@plt>
   117ec:	.word	0x0004947c
   117f0:	.word	0x000492f8
   117f4:	.word	0x0002f088
   117f8:	.word	0x0002f095
   117fc:	.word	0x0002f094
   11800:	.word	0x0002f071

00011804 <cache_user_motd>:
   11804:	push	{r4, r5, fp, lr}
   11808:	add	fp, sp, #8
   1180c:	sub	sp, sp, #104	; 0x68
   11810:	ldr	r5, [pc, #148]	; 118ac <cache_user_motd+0xa8>
   11814:	ldr	r5, [pc, r5]
   11818:	ldr	r0, [r5, #36]	; 0x24
   1181c:	add	r4, sp, #16
   11820:	mov	r1, r4
   11824:	bl	40210 <__stat>
   11828:	cmp	r0, #0
   1182c:	bne	1187c <cache_user_motd+0x78>
   11830:	add	r0, r4, #64	; 0x40
   11834:	bl	db44 <localtime@plt>
   11838:	cmp	r0, #0
   1183c:	beq	1187c <cache_user_motd+0x78>
   11840:	ldr	ip, [r0, #4]
   11844:	add	r4, r0, #8
   11848:	ldm	r4, {r2, r3, r4}
   1184c:	ldr	r0, [r0, #20]
   11850:	movw	r1, #1900	; 0x76c
   11854:	add	r0, r0, r1
   11858:	add	r1, r4, #1
   1185c:	str	r1, [sp]
   11860:	stmib	sp, {r0, r2, ip}
   11864:	ldr	r0, [pc, #68]	; 118b0 <cache_user_motd+0xac>
   11868:	ldr	r0, [pc, r0]
   1186c:	ldr	r2, [pc, #64]	; 118b4 <cache_user_motd+0xb0>
   11870:	add	r2, pc, r2
   11874:	mov	r1, #32
   11878:	bl	de74 <snprintf@plt>
   1187c:	ldr	r4, [pc, #52]	; 118b8 <cache_user_motd+0xb4>
   11880:	ldr	r4, [pc, r4]
   11884:	ldr	r0, [r4]
   11888:	bl	d34c <free_cachefile@plt>
   1188c:	ldr	r0, [r5, #36]	; 0x24
   11890:	ldr	r1, [pc, #36]	; 118bc <cache_user_motd+0xb8>
   11894:	add	r1, pc, r1
   11898:	mov	r2, #0
   1189c:	bl	db08 <cache_file@plt>
   118a0:	str	r0, [r4]
   118a4:	sub	sp, fp, #8
   118a8:	pop	{r4, r5, fp, pc}
   118ac:	.word	0x00049234
   118b0:	.word	0x0004923c
   118b4:	.word	0x0002eff3
   118b8:	.word	0x000491bc
   118bc:	.word	0x00030201

000118c0 <send_oper_motd>:
   118c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   118c4:	add	fp, sp, #24
   118c8:	sub	sp, sp, #8
   118cc:	mov	r4, r0
   118d0:	ldr	r7, [pc, #168]	; 11980 <send_oper_motd+0xc0>
   118d4:	ldr	r7, [pc, r7]
   118d8:	ldr	r0, [r7]
   118dc:	cmp	r0, #0
   118e0:	ldrne	r0, [r0, #40]	; 0x28
   118e4:	cmpne	r0, #0
   118e8:	bne	118f4 <send_oper_motd+0x34>
   118ec:	sub	sp, fp, #24
   118f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   118f4:	add	r5, r4, #88	; 0x58
   118f8:	ldr	r0, [pc, #132]	; 11984 <send_oper_motd+0xc4>
   118fc:	ldr	r0, [pc, r0]
   11900:	add	r6, r0, #88	; 0x58
   11904:	ldr	r1, [pc, #124]	; 11988 <send_oper_motd+0xc8>
   11908:	add	r1, pc, r1
   1190c:	mov	r0, r4
   11910:	mov	r2, r6
   11914:	mov	r3, r5
   11918:	bl	d1e4 <sendto_one@plt>
   1191c:	ldr	r0, [r7]
   11920:	ldr	r7, [r0, #32]
   11924:	cmp	r7, #0
   11928:	beq	11960 <send_oper_motd+0xa0>
   1192c:	ldr	r8, [pc, #88]	; 1198c <send_oper_motd+0xcc>
   11930:	add	r8, pc, r8
   11934:	ldr	r0, [r7]
   11938:	ldr	r0, [r0]
   1193c:	str	r0, [sp]
   11940:	mov	r0, r4
   11944:	mov	r1, r8
   11948:	mov	r2, r6
   1194c:	mov	r3, r5
   11950:	bl	d1e4 <sendto_one@plt>
   11954:	ldr	r7, [r7, #8]
   11958:	cmp	r7, #0
   1195c:	bne	11934 <send_oper_motd+0x74>
   11960:	ldr	r1, [pc, #40]	; 11990 <send_oper_motd+0xd0>
   11964:	add	r1, pc, r1
   11968:	mov	r0, r4
   1196c:	mov	r2, r6
   11970:	mov	r3, r5
   11974:	sub	sp, fp, #24
   11978:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1197c:	b	d1e4 <sendto_one@plt>
   11980:	.word	0x00049140
   11984:	.word	0x0004925c
   11988:	.word	0x0002ef6a
   1198c:	.word	0x0002ef61
   11990:	.word	0x0002ef3c

00011994 <capability_find>:
   11994:	cmp	r1, #0
   11998:	moveq	r0, #0
   1199c:	bxeq	lr
   119a0:	push	{fp, lr}
   119a4:	mov	fp, sp
   119a8:	ldr	r0, [r0, #4]
   119ac:	bl	e6e4 <rb_dictionary_retrieve@plt>
   119b0:	pop	{fp, pc}

000119b4 <capability_get>:
   119b4:	push	{r4, r5, fp, lr}
   119b8:	add	fp, sp, #8
   119bc:	mov	r4, #0
   119c0:	cmp	r1, #0
   119c4:	beq	11a00 <capability_get+0x4c>
   119c8:	mov	r5, r2
   119cc:	ldr	r0, [r0, #4]
   119d0:	bl	e6e4 <rb_dictionary_retrieve@plt>
   119d4:	cmp	r0, #0
   119d8:	beq	11a00 <capability_get+0x4c>
   119dc:	ldrb	r1, [r0, #8]
   119e0:	tst	r1, #1
   119e4:	bne	11a00 <capability_get+0x4c>
   119e8:	cmp	r5, #0
   119ec:	ldrne	r1, [r0, #12]
   119f0:	strne	r1, [r5]
   119f4:	ldr	r0, [r0, #4]
   119f8:	mov	r1, #1
   119fc:	lsl	r4, r1, r0
   11a00:	mov	r0, r4
   11a04:	pop	{r4, r5, fp, pc}

00011a08 <capability_put>:
   11a08:	push	{r4, r5, r6, r7, fp, lr}
   11a0c:	add	fp, sp, #16
   11a10:	mov	r4, r0
   11a14:	ldr	r0, [r0, #8]
   11a18:	cmp	r0, #0
   11a1c:	mvneq	r0, #0
   11a20:	popeq	{r4, r5, r6, r7, fp, pc}
   11a24:	mov	r5, r2
   11a28:	mov	r6, r1
   11a2c:	ldr	r0, [r4, #4]
   11a30:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11a34:	cmp	r0, #0
   11a38:	beq	11a58 <capability_put+0x50>
   11a3c:	ldr	r1, [r0, #8]
   11a40:	bic	r1, r1, #1
   11a44:	str	r1, [r0, #8]
   11a48:	cmp	r5, #0
   11a4c:	strne	r5, [r0, #12]
   11a50:	add	r0, r0, #4
   11a54:	b	11aa4 <capability_put+0x9c>
   11a58:	mov	r0, #16
   11a5c:	bl	11ab4 <rb_malloc>
   11a60:	mov	r7, r0
   11a64:	mov	r0, r6
   11a68:	bl	11ad4 <rb_strdup>
   11a6c:	mov	r1, r0
   11a70:	mov	r2, #0
   11a74:	ldmib	r4, {r0, r3}
   11a78:	stm	r7, {r1, r3}
   11a7c:	str	r2, [r7, #8]
   11a80:	str	r5, [r7, #12]
   11a84:	mov	r2, r7
   11a88:	bl	d70c <rb_dictionary_add@plt>
   11a8c:	ldr	r0, [r4, #8]
   11a90:	add	r0, r0, #1
   11a94:	ands	r1, r0, #31
   11a98:	movne	r1, r0
   11a9c:	str	r1, [r4, #8]
   11aa0:	add	r0, r7, #4
   11aa4:	ldr	r0, [r0]
   11aa8:	mov	r1, #1
   11aac:	lsl	r0, r1, r0
   11ab0:	pop	{r4, r5, r6, r7, fp, pc}

00011ab4 <rb_malloc>:
   11ab4:	push	{fp, lr}
   11ab8:	mov	fp, sp
   11abc:	mov	r1, r0
   11ac0:	mov	r0, #1
   11ac4:	bl	cfa4 <calloc@plt>
   11ac8:	cmp	r0, #0
   11acc:	popne	{fp, pc}
   11ad0:	bl	d448 <rb_outofmemory@plt>

00011ad4 <rb_strdup>:
   11ad4:	push	{r4, r5, fp, lr}
   11ad8:	add	fp, sp, #8
   11adc:	mov	r4, r0
   11ae0:	bl	dc94 <strlen@plt>
   11ae4:	add	r0, r0, #1
   11ae8:	bl	da90 <malloc@plt>
   11aec:	cmp	r0, #0
   11af0:	beq	11b08 <rb_strdup+0x34>
   11af4:	mov	r5, r0
   11af8:	mov	r1, r4
   11afc:	bl	d928 <strcpy@plt>
   11b00:	mov	r0, r5
   11b04:	pop	{r4, r5, fp, pc}
   11b08:	bl	d448 <rb_outofmemory@plt>

00011b0c <capability_put_anonymous>:
   11b0c:	ldr	r1, [r0, #8]
   11b10:	cmp	r1, #0
   11b14:	mvneq	r0, #0
   11b18:	bxeq	lr
   11b1c:	add	r2, r1, #1
   11b20:	ands	r3, r2, #31
   11b24:	movne	r3, r2
   11b28:	str	r3, [r0, #8]
   11b2c:	mov	r0, #1
   11b30:	lsl	r0, r0, r1
   11b34:	bx	lr

00011b38 <capability_orphan>:
   11b38:	push	{fp, lr}
   11b3c:	mov	fp, sp
   11b40:	ldr	r0, [r0, #4]
   11b44:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11b48:	cmp	r0, #0
   11b4c:	popeq	{fp, pc}
   11b50:	mov	r1, #0
   11b54:	str	r1, [r0, #12]
   11b58:	ldr	r1, [r0, #8]
   11b5c:	mov	r2, #1
   11b60:	bfi	r1, r2, #0, #2
   11b64:	str	r1, [r0, #8]
   11b68:	pop	{fp, pc}

00011b6c <capability_require>:
   11b6c:	push	{fp, lr}
   11b70:	mov	fp, sp
   11b74:	ldr	r0, [r0, #4]
   11b78:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11b7c:	cmp	r0, #0
   11b80:	ldrne	r1, [r0, #8]
   11b84:	orrne	r1, r1, #2
   11b88:	strne	r1, [r0, #8]
   11b8c:	pop	{fp, pc}

00011b90 <capability_index_create>:
   11b90:	push	{r4, r5, fp, lr}
   11b94:	add	fp, sp, #8
   11b98:	mov	r4, r0
   11b9c:	mov	r0, #24
   11ba0:	bl	11ab4 <rb_malloc>
   11ba4:	mov	r5, r0
   11ba8:	str	r4, [r0]
   11bac:	ldr	r1, [pc, #36]	; 11bd8 <capability_index_create+0x48>
   11bb0:	ldr	r1, [pc, r1]
   11bb4:	mov	r0, r4
   11bb8:	bl	dfb8 <rb_dictionary_create@plt>
   11bbc:	mov	r1, #1
   11bc0:	stmib	r5, {r0, r1}
   11bc4:	add	r1, r5, #12
   11bc8:	mov	r0, r5
   11bcc:	bl	11bdc <rb_dlinkAdd>
   11bd0:	mov	r0, r5
   11bd4:	pop	{r4, r5, fp, pc}
   11bd8:	.word	0x00048d00

00011bdc <rb_dlinkAdd>:
   11bdc:	push	{fp, lr}
   11be0:	mov	fp, sp
   11be4:	cmp	r0, #0
   11be8:	beq	11c4c <rb_dlinkAdd+0x70>
   11bec:	cmp	r1, #0
   11bf0:	beq	11c6c <rb_dlinkAdd+0x90>
   11bf4:	mov	r2, #0
   11bf8:	stm	r1, {r0, r2}
   11bfc:	ldr	r0, [pc, #136]	; 11c8c <rb_dlinkAdd+0xb0>
   11c00:	ldr	r0, [pc, r0]
   11c04:	str	r0, [r1, #8]
   11c08:	cmp	r0, #0
   11c0c:	beq	11c1c <rb_dlinkAdd+0x40>
   11c10:	add	r0, r0, #4
   11c14:	str	r1, [r0]
   11c18:	b	11c30 <rb_dlinkAdd+0x54>
   11c1c:	ldr	r0, [pc, #108]	; 11c90 <rb_dlinkAdd+0xb4>
   11c20:	add	r0, pc, r0
   11c24:	ldr	r2, [r0, #4]!
   11c28:	cmp	r2, #0
   11c2c:	streq	r1, [r0]
   11c30:	ldr	r0, [pc, #92]	; 11c94 <rb_dlinkAdd+0xb8>
   11c34:	add	r0, pc, r0
   11c38:	str	r1, [r0]
   11c3c:	ldr	r1, [r0, #8]
   11c40:	add	r1, r1, #1
   11c44:	str	r1, [r0, #8]
   11c48:	pop	{fp, pc}
   11c4c:	ldr	r0, [pc, #68]	; 11c98 <rb_dlinkAdd+0xbc>
   11c50:	add	r0, pc, r0
   11c54:	ldr	r1, [pc, #64]	; 11c9c <rb_dlinkAdd+0xc0>
   11c58:	add	r1, pc, r1
   11c5c:	ldr	r3, [pc, #60]	; 11ca0 <rb_dlinkAdd+0xc4>
   11c60:	add	r3, pc, r3
   11c64:	mov	r2, #143	; 0x8f
   11c68:	bl	e7e0 <__assert_fail@plt>
   11c6c:	ldr	r0, [pc, #48]	; 11ca4 <rb_dlinkAdd+0xc8>
   11c70:	add	r0, pc, r0
   11c74:	ldr	r1, [pc, #44]	; 11ca8 <rb_dlinkAdd+0xcc>
   11c78:	add	r1, pc, r1
   11c7c:	ldr	r3, [pc, #40]	; 11cac <rb_dlinkAdd+0xd0>
   11c80:	add	r3, pc, r3
   11c84:	mov	r2, #144	; 0x90
   11c88:	bl	e7e0 <__assert_fail@plt>
   11c8c:	.word	0x0004faf4
   11c90:	.word	0x0004fad4
   11c94:	.word	0x0004fac0
   11c98:	.word	0x0002e9c1
   11c9c:	.word	0x0002e95e
   11ca0:	.word	0x0002e9be
   11ca4:	.word	0x0002e93c
   11ca8:	.word	0x0002e93e
   11cac:	.word	0x0002e99e

00011cb0 <capability_index_destroy>:
   11cb0:	push	{r4, sl, fp, lr}
   11cb4:	add	fp, sp, #8
   11cb8:	mov	r4, r0
   11cbc:	add	r0, r0, #12
   11cc0:	bl	11ce8 <rb_dlinkDelete>
   11cc4:	ldr	r0, [r4, #4]
   11cc8:	ldr	r1, [pc, #20]	; 11ce4 <capability_index_destroy+0x34>
   11ccc:	add	r1, pc, r1
   11cd0:	mov	r2, #0
   11cd4:	bl	e0cc <rb_dictionary_destroy@plt>
   11cd8:	mov	r0, r4
   11cdc:	pop	{r4, sl, fp, lr}
   11ce0:	b	11d94 <rb_free>
   11ce4:	.word	0x000000a0

00011ce8 <rb_dlinkDelete>:
   11ce8:	cmp	r0, #0
   11cec:	beq	11d3c <rb_dlinkDelete+0x54>
   11cf0:	ldr	ip, [pc, #108]	; 11d64 <rb_dlinkDelete+0x7c>
   11cf4:	add	ip, pc, ip
   11cf8:	ldmib	r0, {r2, r3}
   11cfc:	add	r1, r3, #4
   11d00:	cmp	r3, #0
   11d04:	addeq	r1, ip, #4
   11d08:	str	r2, [r1]
   11d0c:	ldmib	r0, {r1, r2}
   11d10:	cmp	r1, #0
   11d14:	mov	r3, ip
   11d18:	addne	r3, r1, #8
   11d1c:	str	r2, [r3]
   11d20:	mov	r1, #0
   11d24:	str	r1, [r0, #4]
   11d28:	str	r1, [r0, #8]
   11d2c:	ldr	r0, [ip, #8]
   11d30:	sub	r0, r0, #1
   11d34:	str	r0, [ip, #8]
   11d38:	bx	lr
   11d3c:	push	{fp, lr}
   11d40:	mov	fp, sp
   11d44:	ldr	r0, [pc, #28]	; 11d68 <rb_dlinkDelete+0x80>
   11d48:	add	r0, pc, r0
   11d4c:	ldr	r1, [pc, #24]	; 11d6c <rb_dlinkDelete+0x84>
   11d50:	add	r1, pc, r1
   11d54:	ldr	r3, [pc, #20]	; 11d70 <rb_dlinkDelete+0x88>
   11d58:	add	r3, pc, r3
   11d5c:	mov	r2, #235	; 0xeb
   11d60:	bl	e7e0 <__assert_fail@plt>
   11d64:	.word	0x0004fa00
   11d68:	.word	0x0002e864
   11d6c:	.word	0x0002e866
   11d70:	.word	0x0002e901

00011d74 <capability_destroy>:
   11d74:	push	{r4, sl, fp, lr}
   11d78:	add	fp, sp, #8
   11d7c:	ldr	r4, [r0, #16]
   11d80:	ldr	r0, [r4]
   11d84:	bl	11d94 <rb_free>
   11d88:	mov	r0, r4
   11d8c:	pop	{r4, sl, fp, lr}
   11d90:	b	11d94 <rb_free>

00011d94 <rb_free>:
   11d94:	cmp	r0, #0
   11d98:	bxeq	lr
   11d9c:	b	d328 <free@plt>

00011da0 <capability_index_list>:
   11da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11da4:	add	fp, sp, #28
   11da8:	sub	sp, sp, #12
   11dac:	mov	r4, r1
   11db0:	mov	r5, r0
   11db4:	ldr	r6, [pc, #152]	; 11e54 <capability_index_list+0xb4>
   11db8:	add	r6, pc, r6
   11dbc:	mov	r9, #0
   11dc0:	strb	r9, [r6]
   11dc4:	ldr	r0, [r0, #4]
   11dc8:	add	r7, sp, #4
   11dcc:	mov	r1, r7
   11dd0:	bl	d97c <rb_dictionary_foreach_start@plt>
   11dd4:	ldr	r0, [r5, #4]
   11dd8:	mov	r1, r7
   11ddc:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11de0:	cmp	r0, #0
   11de4:	beq	11e40 <capability_index_list+0xa0>
   11de8:	ldr	r6, [pc, #104]	; 11e58 <capability_index_list+0xb8>
   11dec:	add	r6, pc, r6
   11df0:	mov	sl, #1
   11df4:	add	r7, sp, #4
   11df8:	ldr	r8, [pc, #92]	; 11e5c <capability_index_list+0xbc>
   11dfc:	add	r8, pc, r8
   11e00:	ldr	r1, [r0, #4]
   11e04:	tst	r4, sl, lsl r1
   11e08:	beq	11e20 <capability_index_list+0x80>
   11e0c:	ldr	r2, [r0]
   11e10:	mov	r0, r6
   11e14:	mov	r1, r8
   11e18:	bl	e3a8 <sprintf@plt>
   11e1c:	add	r6, r6, r0
   11e20:	ldr	r0, [r5, #4]
   11e24:	mov	r1, r7
   11e28:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11e2c:	ldr	r0, [r5, #4]
   11e30:	mov	r1, r7
   11e34:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11e38:	cmp	r0, #0
   11e3c:	bne	11e00 <capability_index_list+0x60>
   11e40:	strb	r9, [r6, #-1]
   11e44:	ldr	r0, [pc, #20]	; 11e60 <capability_index_list+0xc0>
   11e48:	add	r0, pc, r0
   11e4c:	sub	sp, fp, #28
   11e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e54:	.word	0x0004f948
   11e58:	.word	0x0004f914
   11e5c:	.word	0x000354eb
   11e60:	.word	0x0004f8b8

00011e64 <capability_index_mask>:
   11e64:	push	{r4, r5, r6, r7, fp, lr}
   11e68:	add	fp, sp, #16
   11e6c:	sub	sp, sp, #8
   11e70:	mov	r4, r0
   11e74:	ldr	r0, [r0, #4]
   11e78:	mov	r5, sp
   11e7c:	mov	r1, r5
   11e80:	bl	d97c <rb_dictionary_foreach_start@plt>
   11e84:	ldr	r0, [r4, #4]
   11e88:	mov	r1, r5
   11e8c:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11e90:	mov	r5, #0
   11e94:	cmp	r0, #0
   11e98:	beq	11ed4 <capability_index_mask+0x70>
   11e9c:	mov	r7, #1
   11ea0:	mov	r6, sp
   11ea4:	ldrb	r1, [r0, #8]
   11ea8:	tst	r1, #1
   11eac:	ldreq	r0, [r0, #4]
   11eb0:	orreq	r5, r5, r7, lsl r0
   11eb4:	ldr	r0, [r4, #4]
   11eb8:	mov	r1, r6
   11ebc:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11ec0:	ldr	r0, [r4, #4]
   11ec4:	mov	r1, r6
   11ec8:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11ecc:	cmp	r0, #0
   11ed0:	bne	11ea4 <capability_index_mask+0x40>
   11ed4:	mov	r0, r5
   11ed8:	sub	sp, fp, #16
   11edc:	pop	{r4, r5, r6, r7, fp, pc}

00011ee0 <capability_index_get_required>:
   11ee0:	push	{r4, r5, r6, r7, fp, lr}
   11ee4:	add	fp, sp, #16
   11ee8:	sub	sp, sp, #8
   11eec:	mov	r4, r0
   11ef0:	ldr	r0, [r0, #4]
   11ef4:	mov	r5, sp
   11ef8:	mov	r1, r5
   11efc:	bl	d97c <rb_dictionary_foreach_start@plt>
   11f00:	ldr	r0, [r4, #4]
   11f04:	mov	r1, r5
   11f08:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11f0c:	mov	r5, #0
   11f10:	cmp	r0, #0
   11f14:	beq	11f54 <capability_index_get_required+0x74>
   11f18:	mov	r7, #1
   11f1c:	mov	r6, sp
   11f20:	ldr	r1, [r0, #8]
   11f24:	and	r1, r1, #3
   11f28:	cmp	r1, #2
   11f2c:	ldreq	r0, [r0, #4]
   11f30:	orreq	r5, r5, r7, lsl r0
   11f34:	ldr	r0, [r4, #4]
   11f38:	mov	r1, r6
   11f3c:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11f40:	ldr	r0, [r4, #4]
   11f44:	mov	r1, r6
   11f48:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11f4c:	cmp	r0, #0
   11f50:	bne	11f20 <capability_index_get_required+0x40>
   11f54:	mov	r0, r5
   11f58:	sub	sp, fp, #16
   11f5c:	pop	{r4, r5, r6, r7, fp, pc}

00011f60 <capability_index_stats>:
   11f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f64:	add	fp, sp, #28
   11f68:	sub	sp, sp, #532	; 0x214
   11f6c:	mov	r5, r1
   11f70:	mov	r4, r0
   11f74:	ldr	r8, [pc, #276]	; 12090 <capability_index_stats+0x130>
   11f78:	ldr	r8, [pc, r8]
   11f7c:	cmp	r8, #0
   11f80:	beq	12058 <capability_index_stats+0xf8>
   11f84:	add	r6, sp, #16
   11f88:	add	r7, sp, #8
   11f8c:	ldr	sl, [pc, #256]	; 12094 <capability_index_stats+0x134>
   11f90:	add	sl, pc, sl
   11f94:	ldr	r9, [r8]
   11f98:	ldr	r3, [r9]
   11f9c:	ldr	r0, [r9, #8]
   11fa0:	sub	r0, r0, #1
   11fa4:	str	r0, [sp]
   11fa8:	mov	r0, r6
   11fac:	mov	r1, #512	; 0x200
   11fb0:	ldr	r2, [pc, #224]	; 12098 <capability_index_stats+0x138>
   11fb4:	add	r2, pc, r2
   11fb8:	bl	de74 <snprintf@plt>
   11fbc:	mov	r0, r6
   11fc0:	mov	r1, r5
   11fc4:	blx	r4
   11fc8:	ldr	r0, [r9, #4]
   11fcc:	mov	r1, r7
   11fd0:	bl	d97c <rb_dictionary_foreach_start@plt>
   11fd4:	b	12008 <capability_index_stats+0xa8>
   11fd8:	ldm	r0, {r1, r3}
   11fdc:	str	r1, [sp]
   11fe0:	mov	r0, r6
   11fe4:	mov	r1, #512	; 0x200
   11fe8:	mov	r2, sl
   11fec:	bl	de74 <snprintf@plt>
   11ff0:	mov	r0, r6
   11ff4:	mov	r1, r5
   11ff8:	blx	r4
   11ffc:	ldr	r0, [r9, #4]
   12000:	mov	r1, r7
   12004:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   12008:	ldr	r0, [r9, #4]
   1200c:	mov	r1, r7
   12010:	bl	e300 <rb_dictionary_foreach_cur@plt>
   12014:	cmp	r0, #0
   12018:	bne	11fd8 <capability_index_stats+0x78>
   1201c:	ldr	r3, [r9]
   12020:	ldr	r0, [r9, #8]
   12024:	rsb	r0, r0, #33	; 0x21
   12028:	str	r0, [sp]
   1202c:	mov	r0, r6
   12030:	mov	r1, #512	; 0x200
   12034:	ldr	r2, [pc, #96]	; 1209c <capability_index_stats+0x13c>
   12038:	add	r2, pc, r2
   1203c:	bl	de74 <snprintf@plt>
   12040:	mov	r0, r6
   12044:	mov	r1, r5
   12048:	blx	r4
   1204c:	ldr	r8, [r8, #8]
   12050:	cmp	r8, #0
   12054:	bne	11f94 <capability_index_stats+0x34>
   12058:	ldr	r0, [pc, #64]	; 120a0 <capability_index_stats+0x140>
   1205c:	add	r0, pc, r0
   12060:	ldr	r3, [r0, #8]
   12064:	add	r6, sp, #16
   12068:	ldr	r2, [pc, #52]	; 120a4 <capability_index_stats+0x144>
   1206c:	add	r2, pc, r2
   12070:	mov	r0, r6
   12074:	mov	r1, #512	; 0x200
   12078:	bl	de74 <snprintf@plt>
   1207c:	mov	r0, r6
   12080:	mov	r1, r5
   12084:	blx	r4
   12088:	sub	sp, fp, #28
   1208c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12090:	.word	0x0004f77c
   12094:	.word	0x0002e947
   12098:	.word	0x0002e909
   1209c:	.word	0x0002e8ac
   120a0:	.word	0x0004f698
   120a4:	.word	0x0002e892

000120a8 <init_channels>:
   120a8:	push	{fp, lr}
   120ac:	mov	fp, sp
   120b0:	ldr	r2, [pc, #196]	; 1217c <init_channels+0xd4>
   120b4:	add	r2, pc, r2
   120b8:	mov	r0, #256	; 0x100
   120bc:	mov	r1, #8192	; 0x2000
   120c0:	bl	ded4 <rb_bh_create@plt>
   120c4:	ldr	r1, [pc, #180]	; 12180 <init_channels+0xd8>
   120c8:	add	r1, pc, r1
   120cc:	str	r0, [r1]
   120d0:	ldr	r2, [pc, #172]	; 12184 <init_channels+0xdc>
   120d4:	add	r2, pc, r2
   120d8:	mov	r0, #28
   120dc:	mov	r1, #4096	; 0x1000
   120e0:	bl	ded4 <rb_bh_create@plt>
   120e4:	ldr	r1, [pc, #156]	; 12188 <init_channels+0xe0>
   120e8:	add	r1, pc, r1
   120ec:	str	r0, [r1]
   120f0:	ldr	r2, [pc, #148]	; 1218c <init_channels+0xe4>
   120f4:	add	r2, pc, r2
   120f8:	mov	r0, #532	; 0x214
   120fc:	mov	r1, #4096	; 0x1000
   12100:	bl	ded4 <rb_bh_create@plt>
   12104:	ldr	r1, [pc, #132]	; 12190 <init_channels+0xe8>
   12108:	add	r1, pc, r1
   1210c:	str	r0, [r1]
   12110:	ldr	r2, [pc, #124]	; 12194 <init_channels+0xec>
   12114:	add	r2, pc, r2
   12118:	mov	r0, #52	; 0x34
   1211c:	mov	r1, #32768	; 0x8000
   12120:	bl	ded4 <rb_bh_create@plt>
   12124:	ldr	r1, [pc, #108]	; 12198 <init_channels+0xf0>
   12128:	add	r1, pc, r1
   1212c:	str	r0, [r1]
   12130:	ldr	r0, [pc, #100]	; 1219c <init_channels+0xf4>
   12134:	add	r0, pc, r0
   12138:	bl	dbbc <register_hook@plt>
   1213c:	ldr	r1, [pc, #92]	; 121a0 <init_channels+0xf8>
   12140:	add	r1, pc, r1
   12144:	str	r0, [r1]
   12148:	ldr	r0, [pc, #84]	; 121a4 <init_channels+0xfc>
   1214c:	add	r0, pc, r0
   12150:	bl	dbbc <register_hook@plt>
   12154:	ldr	r1, [pc, #76]	; 121a8 <init_channels+0x100>
   12158:	add	r1, pc, r1
   1215c:	str	r0, [r1]
   12160:	ldr	r0, [pc, #68]	; 121ac <init_channels+0x104>
   12164:	add	r0, pc, r0
   12168:	bl	dbbc <register_hook@plt>
   1216c:	ldr	r1, [pc, #60]	; 121b0 <init_channels+0x108>
   12170:	ldr	r1, [pc, r1]
   12174:	str	r0, [r1]
   12178:	pop	{fp, pc}
   1217c:	.word	0x0002e861
   12180:	.word	0x0004f838
   12184:	.word	0x0002e84e
   12188:	.word	0x0004f81c
   1218c:	.word	0x0002e837
   12190:	.word	0x0004f800
   12194:	.word	0x0002e822
   12198:	.word	0x0004f7e4
   1219c:	.word	0x0002e80e
   121a0:	.word	0x0004f7d0
   121a4:	.word	0x0002e7ff
   121a8:	.word	0x0004f7bc
   121ac:	.word	0x0002e7f0
   121b0:	.word	0x0004882c

000121b4 <allocate_channel>:
   121b4:	push	{r4, r5, fp, lr}
   121b8:	add	fp, sp, #8
   121bc:	mov	r4, r0
   121c0:	ldr	r0, [pc, #28]	; 121e4 <allocate_channel+0x30>
   121c4:	ldr	r0, [pc, r0]
   121c8:	bl	de20 <rb_bh_alloc@plt>
   121cc:	mov	r5, r0
   121d0:	mov	r0, r4
   121d4:	bl	121e8 <rb_strdup>
   121d8:	str	r0, [r5, #236]	; 0xec
   121dc:	mov	r0, r5
   121e0:	pop	{r4, r5, fp, pc}
   121e4:	.word	0x0004f73c

000121e8 <rb_strdup>:
   121e8:	push	{r4, r5, fp, lr}
   121ec:	add	fp, sp, #8
   121f0:	mov	r4, r0
   121f4:	bl	dc94 <strlen@plt>
   121f8:	add	r0, r0, #1
   121fc:	bl	da90 <malloc@plt>
   12200:	cmp	r0, #0
   12204:	beq	1221c <rb_strdup+0x34>
   12208:	mov	r5, r0
   1220c:	mov	r1, r4
   12210:	bl	d928 <strcpy@plt>
   12214:	mov	r0, r5
   12218:	pop	{r4, r5, fp, pc}
   1221c:	bl	d448 <rb_outofmemory@plt>

00012220 <free_channel>:
   12220:	push	{r4, sl, fp, lr}
   12224:	add	fp, sp, #8
   12228:	mov	r4, r0
   1222c:	ldr	r0, [r0, #236]	; 0xec
   12230:	bl	12254 <rb_free>
   12234:	ldr	r0, [r4, #104]	; 0x68
   12238:	bl	12254 <rb_free>
   1223c:	ldr	r0, [pc, #12]	; 12250 <free_channel+0x30>
   12240:	ldr	r0, [pc, r0]
   12244:	mov	r1, r4
   12248:	pop	{r4, sl, fp, lr}
   1224c:	b	e708 <rb_bh_free@plt>
   12250:	.word	0x0004f6c0

00012254 <rb_free>:
   12254:	cmp	r0, #0
   12258:	bxeq	lr
   1225c:	b	d328 <free@plt>

00012260 <allocate_ban>:
   12260:	push	{r4, r5, r6, r7, fp, lr}
   12264:	add	fp, sp, #16
   12268:	mov	r5, r2
   1226c:	mov	r6, r1
   12270:	mov	r7, r0
   12274:	ldr	r0, [pc, #68]	; 122c0 <allocate_ban+0x60>
   12278:	ldr	r0, [pc, r0]
   1227c:	bl	de20 <rb_bh_alloc@plt>
   12280:	mov	r4, r0
   12284:	mov	r0, r7
   12288:	bl	121e8 <rb_strdup>
   1228c:	str	r0, [r4]
   12290:	mov	r0, r6
   12294:	bl	121e8 <rb_strdup>
   12298:	str	r0, [r4, #4]
   1229c:	cmp	r5, #0
   122a0:	beq	122b0 <allocate_ban+0x50>
   122a4:	mov	r0, r5
   122a8:	bl	121e8 <rb_strdup>
   122ac:	b	122b4 <allocate_ban+0x54>
   122b0:	mov	r0, #0
   122b4:	str	r0, [r4, #12]
   122b8:	mov	r0, r4
   122bc:	pop	{r4, r5, r6, r7, fp, pc}
   122c0:	.word	0x0004f68c

000122c4 <free_ban>:
   122c4:	push	{r4, sl, fp, lr}
   122c8:	add	fp, sp, #8
   122cc:	mov	r4, r0
   122d0:	ldr	r0, [r0]
   122d4:	bl	12254 <rb_free>
   122d8:	ldr	r0, [r4, #4]
   122dc:	bl	12254 <rb_free>
   122e0:	ldr	r0, [r4, #12]
   122e4:	bl	12254 <rb_free>
   122e8:	ldr	r0, [pc, #12]	; 122fc <free_ban+0x38>
   122ec:	ldr	r0, [pc, r0]
   122f0:	mov	r1, r4
   122f4:	pop	{r4, sl, fp, lr}
   122f8:	b	e708 <rb_bh_free@plt>
   122fc:	.word	0x0004f618

00012300 <send_channel_join>:
   12300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12304:	add	fp, sp, #28
   12308:	sub	sp, sp, #36	; 0x24
   1230c:	mov	r5, r0
   12310:	ldrh	r0, [r1, #80]	; 0x50
   12314:	cmp	r0, #64	; 0x40
   12318:	bne	12404 <send_channel_join+0x104>
   1231c:	mov	r4, r1
   12320:	ldr	r9, [pc, #228]	; 1240c <send_channel_join+0x10c>
   12324:	ldr	r9, [pc, r9]
   12328:	ldr	r3, [r9]
   1232c:	ldr	r0, [r5, #236]	; 0xec
   12330:	add	r8, r1, #163	; 0xa3
   12334:	add	sl, r1, #152	; 0x98
   12338:	add	r6, r1, #88	; 0x58
   1233c:	ldr	r1, [pc, #204]	; 12410 <send_channel_join+0x110>
   12340:	add	r1, pc, r1
   12344:	str	r5, [sp]
   12348:	stmib	sp, {r1, r6, sl}
   1234c:	str	r8, [sp, #16]
   12350:	str	r0, [sp, #20]
   12354:	mov	r0, r4
   12358:	mov	r1, #0
   1235c:	mov	r2, #0
   12360:	bl	d2ec <sendto_channel_local_with_capability@plt>
   12364:	movw	r0, #345	; 0x159
   12368:	add	lr, r4, r0
   1236c:	ldr	r2, [r9]
   12370:	ldr	r1, [r4, #24]
   12374:	ldrb	r3, [r1, #40]!	; 0x28
   12378:	ldr	r7, [r5, #236]	; 0xec
   1237c:	ldr	ip, [pc, #144]	; 12414 <send_channel_join+0x114>
   12380:	add	ip, pc, ip
   12384:	ldr	r0, [pc, #140]	; 12418 <send_channel_join+0x118>
   12388:	add	r0, pc, r0
   1238c:	cmp	r3, #0
   12390:	movne	r0, r1
   12394:	stm	sp, {r5, ip}
   12398:	str	r6, [sp, #8]
   1239c:	str	sl, [sp, #12]
   123a0:	str	r8, [sp, #16]
   123a4:	str	r7, [sp, #20]
   123a8:	str	r0, [sp, #24]
   123ac:	str	lr, [sp, #28]
   123b0:	mov	r0, r4
   123b4:	mov	r1, #0
   123b8:	mov	r3, #0
   123bc:	bl	d2ec <sendto_channel_local_with_capability@plt>
   123c0:	ldr	r0, [r4, #24]
   123c4:	ldr	r0, [r0, #24]
   123c8:	cmp	r0, #0
   123cc:	beq	12404 <send_channel_join+0x104>
   123d0:	ldr	r1, [pc, #68]	; 1241c <send_channel_join+0x11c>
   123d4:	ldr	r1, [pc, r1]
   123d8:	ldr	r2, [r1]
   123dc:	ldr	r1, [pc, #60]	; 12420 <send_channel_join+0x120>
   123e0:	add	r1, pc, r1
   123e4:	str	r5, [sp]
   123e8:	stmib	sp, {r1, r6, sl}
   123ec:	str	r8, [sp, #16]
   123f0:	str	r0, [sp, #20]
   123f4:	mov	r0, r4
   123f8:	mov	r1, #0
   123fc:	mov	r3, #0
   12400:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   12404:	sub	sp, fp, #28
   12408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1240c:	.word	0x000487a8
   12410:	.word	0x0002e627
   12414:	.word	0x0002e5f9
   12418:	.word	0x0002efb5
   1241c:	.word	0x00048614
   12420:	.word	0x0002e5b2

00012424 <find_channel_membership>:
   12424:	ldrh	r2, [r1, #80]	; 0x50
   12428:	cmp	r2, #64	; 0x40
   1242c:	bne	124a8 <find_channel_membership+0x84>
   12430:	ldr	ip, [r0, #132]	; 0x84
   12434:	ldr	r2, [r1, #24]
   12438:	ldr	r3, [r2, #8]
   1243c:	cmp	ip, r3
   12440:	bcs	12474 <find_channel_membership+0x50>
   12444:	ldr	r0, [r0, #124]	; 0x7c
   12448:	cmp	r0, #0
   1244c:	bne	12460 <find_channel_membership+0x3c>
   12450:	b	124a8 <find_channel_membership+0x84>
   12454:	ldr	r0, [r0, #8]
   12458:	cmp	r0, #0
   1245c:	beq	124a8 <find_channel_membership+0x84>
   12460:	ldr	r2, [r0]
   12464:	ldr	r3, [r2, #40]	; 0x28
   12468:	cmp	r3, r1
   1246c:	bne	12454 <find_channel_membership+0x30>
   12470:	b	124a0 <find_channel_membership+0x7c>
   12474:	ldr	r1, [r2]
   12478:	cmp	r1, #0
   1247c:	bne	12490 <find_channel_membership+0x6c>
   12480:	b	124a8 <find_channel_membership+0x84>
   12484:	ldr	r1, [r1, #8]
   12488:	cmp	r1, #0
   1248c:	beq	124a8 <find_channel_membership+0x84>
   12490:	ldr	r2, [r1]
   12494:	ldr	r3, [r2, #36]	; 0x24
   12498:	cmp	r3, r0
   1249c:	bne	12484 <find_channel_membership+0x60>
   124a0:	mov	r0, r2
   124a4:	bx	lr
   124a8:	mov	r2, #0
   124ac:	mov	r0, r2
   124b0:	bx	lr

000124b4 <find_channel_status>:
   124b4:	mov	r2, r0
   124b8:	ldr	r0, [pc, #96]	; 12520 <find_channel_status+0x6c>
   124bc:	add	r0, pc, r0
   124c0:	cmp	r2, #0
   124c4:	mov	r3, r0
   124c8:	beq	12514 <find_channel_status+0x60>
   124cc:	ldrb	r3, [r2, #44]	; 0x2c
   124d0:	tst	r3, #2
   124d4:	bne	124e4 <find_channel_status+0x30>
   124d8:	ldr	r3, [pc, #68]	; 12524 <find_channel_status+0x70>
   124dc:	add	r3, pc, r3
   124e0:	b	12504 <find_channel_status+0x50>
   124e4:	cmp	r1, #0
   124e8:	ldreq	r0, [pc, #56]	; 12528 <find_channel_status+0x74>
   124ec:	addeq	r0, pc, r0
   124f0:	bxeq	lr
   124f4:	ldr	r3, [pc, #48]	; 1252c <find_channel_status+0x78>
   124f8:	add	r3, pc, r3
   124fc:	mov	r1, #64	; 0x40
   12500:	strb	r1, [r3], #1
   12504:	ldrb	r1, [r2, #44]	; 0x2c
   12508:	tst	r1, #1
   1250c:	movne	r1, #43	; 0x2b
   12510:	strbne	r1, [r3], #1
   12514:	mov	r1, #0
   12518:	strb	r1, [r3]
   1251c:	bx	lr
   12520:	.word	0x0004f45c
   12524:	.word	0x0004f43c
   12528:	.word	0x0003091b
   1252c:	.word	0x0004f420

00012530 <add_user_to_channel>:
   12530:	push	{r4, r5, r6, r7, fp, lr}
   12534:	add	fp, sp, #16
   12538:	mov	r4, r0
   1253c:	ldr	r0, [r1, #24]
   12540:	cmp	r0, #0
   12544:	beq	125b0 <add_user_to_channel+0x80>
   12548:	mov	r7, r2
   1254c:	mov	r5, r1
   12550:	ldr	r0, [pc, #92]	; 125b4 <add_user_to_channel+0x84>
   12554:	ldr	r0, [pc, r0]
   12558:	bl	de20 <rb_bh_alloc@plt>
   1255c:	mov	r6, r0
   12560:	add	r1, r0, #36	; 0x24
   12564:	stm	r1, {r4, r5, r7}
   12568:	ldr	r2, [r5, #24]
   1256c:	add	r1, r0, #24
   12570:	bl	125b8 <rb_dlinkAdd>
   12574:	add	r2, r4, #124	; 0x7c
   12578:	mov	r0, r6
   1257c:	mov	r1, r6
   12580:	bl	125b8 <rb_dlinkAdd>
   12584:	ldrb	r0, [r5, #65]	; 0x41
   12588:	tst	r0, #32
   1258c:	popeq	{r4, r5, r6, r7, fp, pc}
   12590:	ldrh	r0, [r5, #80]	; 0x50
   12594:	cmp	r0, #64	; 0x40
   12598:	bne	125b0 <add_user_to_channel+0x80>
   1259c:	add	r1, r6, #12
   125a0:	add	r2, r4, #136	; 0x88
   125a4:	mov	r0, r6
   125a8:	pop	{r4, r5, r6, r7, fp, lr}
   125ac:	b	125b8 <rb_dlinkAdd>
   125b0:	pop	{r4, r5, r6, r7, fp, pc}
   125b4:	.word	0x0004f3b8

000125b8 <rb_dlinkAdd>:
   125b8:	push	{fp, lr}
   125bc:	mov	fp, sp
   125c0:	cmp	r0, #0
   125c4:	beq	12624 <rb_dlinkAdd+0x6c>
   125c8:	cmp	r1, #0
   125cc:	beq	12644 <rb_dlinkAdd+0x8c>
   125d0:	cmp	r2, #0
   125d4:	beq	12664 <rb_dlinkAdd+0xac>
   125d8:	mov	r3, #0
   125dc:	stm	r1, {r0, r3}
   125e0:	ldr	r0, [r2]
   125e4:	str	r0, [r1, #8]
   125e8:	ldr	r0, [r2]
   125ec:	cmp	r0, #0
   125f0:	beq	12600 <rb_dlinkAdd+0x48>
   125f4:	add	r0, r0, #4
   125f8:	str	r1, [r0]
   125fc:	b	12610 <rb_dlinkAdd+0x58>
   12600:	mov	r0, r2
   12604:	ldr	r3, [r0, #4]!
   12608:	cmp	r3, #0
   1260c:	streq	r1, [r0]
   12610:	str	r1, [r2]
   12614:	ldr	r0, [r2, #8]
   12618:	add	r0, r0, #1
   1261c:	str	r0, [r2, #8]
   12620:	pop	{fp, pc}
   12624:	ldr	r0, [pc, #88]	; 12684 <rb_dlinkAdd+0xcc>
   12628:	add	r0, pc, r0
   1262c:	ldr	r1, [pc, #84]	; 12688 <rb_dlinkAdd+0xd0>
   12630:	add	r1, pc, r1
   12634:	ldr	r3, [pc, #80]	; 1268c <rb_dlinkAdd+0xd4>
   12638:	add	r3, pc, r3
   1263c:	mov	r2, #143	; 0x8f
   12640:	bl	e7e0 <__assert_fail@plt>
   12644:	ldr	r0, [pc, #68]	; 12690 <rb_dlinkAdd+0xd8>
   12648:	add	r0, pc, r0
   1264c:	ldr	r1, [pc, #64]	; 12694 <rb_dlinkAdd+0xdc>
   12650:	add	r1, pc, r1
   12654:	ldr	r3, [pc, #60]	; 12698 <rb_dlinkAdd+0xe0>
   12658:	add	r3, pc, r3
   1265c:	mov	r2, #144	; 0x90
   12660:	bl	e7e0 <__assert_fail@plt>
   12664:	ldr	r0, [pc, #48]	; 1269c <rb_dlinkAdd+0xe4>
   12668:	add	r0, pc, r0
   1266c:	ldr	r1, [pc, #44]	; 126a0 <rb_dlinkAdd+0xe8>
   12670:	add	r1, pc, r1
   12674:	ldr	r3, [pc, #40]	; 126a4 <rb_dlinkAdd+0xec>
   12678:	add	r3, pc, r3
   1267c:	mov	r2, #145	; 0x91
   12680:	bl	e7e0 <__assert_fail@plt>
   12684:	.word	0x0002dfe9
   12688:	.word	0x0002df86
   1268c:	.word	0x0002dfe6
   12690:	.word	0x0002df64
   12694:	.word	0x0002df66
   12698:	.word	0x0002dfc6
   1269c:	.word	0x000337dd
   126a0:	.word	0x0002df46
   126a4:	.word	0x0002dfa6

000126a8 <remove_user_from_channel>:
   126a8:	cmp	r0, #0
   126ac:	bxeq	lr
   126b0:	push	{r4, r5, r6, sl, fp, lr}
   126b4:	add	fp, sp, #16
   126b8:	mov	r4, r0
   126bc:	ldr	r5, [r0, #36]	; 0x24
   126c0:	ldr	r6, [r0, #40]	; 0x28
   126c4:	ldr	r1, [r6, #24]
   126c8:	add	r0, r0, #24
   126cc:	bl	12738 <rb_dlinkDelete>
   126d0:	add	r1, r5, #124	; 0x7c
   126d4:	mov	r0, r4
   126d8:	bl	12738 <rb_dlinkDelete>
   126dc:	ldr	r0, [r6, #32]
   126e0:	ldr	r1, [pc, #72]	; 12730 <remove_user_from_channel+0x88>
   126e4:	ldr	r1, [pc, r1]
   126e8:	cmp	r0, r1
   126ec:	bne	126fc <remove_user_from_channel+0x54>
   126f0:	add	r0, r4, #12
   126f4:	add	r1, r5, #136	; 0x88
   126f8:	bl	12738 <rb_dlinkDelete>
   126fc:	ldrb	r0, [r5, #13]
   12700:	tst	r0, #2
   12704:	ldreq	r0, [r5, #132]	; 0x84
   12708:	cmpeq	r0, #0
   1270c:	beq	12724 <remove_user_from_channel+0x7c>
   12710:	ldr	r0, [pc, #28]	; 12734 <remove_user_from_channel+0x8c>
   12714:	ldr	r0, [pc, r0]
   12718:	mov	r1, r4
   1271c:	pop	{r4, r5, r6, sl, fp, lr}
   12720:	b	e708 <rb_bh_free@plt>
   12724:	mov	r0, r5
   12728:	bl	e0e4 <destroy_channel@plt>
   1272c:	b	12710 <remove_user_from_channel+0x68>
   12730:	.word	0x00048474
   12734:	.word	0x0004f1f8

00012738 <rb_dlinkDelete>:
   12738:	push	{fp, lr}
   1273c:	mov	fp, sp
   12740:	cmp	r0, #0
   12744:	beq	12798 <rb_dlinkDelete+0x60>
   12748:	cmp	r1, #0
   1274c:	beq	127b8 <rb_dlinkDelete+0x80>
   12750:	ldr	ip, [r0, #4]
   12754:	ldr	r3, [r0, #8]
   12758:	add	r2, r3, #4
   1275c:	cmp	r3, #0
   12760:	addeq	r2, r1, #4
   12764:	str	ip, [r2]
   12768:	ldmib	r0, {r2, ip}
   1276c:	cmp	r2, #0
   12770:	mov	r3, r1
   12774:	addne	r3, r2, #8
   12778:	str	ip, [r3]
   1277c:	mov	r2, #0
   12780:	str	r2, [r0, #4]
   12784:	str	r2, [r0, #8]
   12788:	ldr	r0, [r1, #8]
   1278c:	sub	r0, r0, #1
   12790:	str	r0, [r1, #8]
   12794:	pop	{fp, pc}
   12798:	ldr	r0, [pc, #56]	; 127d8 <rb_dlinkDelete+0xa0>
   1279c:	add	r0, pc, r0
   127a0:	ldr	r1, [pc, #52]	; 127dc <rb_dlinkDelete+0xa4>
   127a4:	add	r1, pc, r1
   127a8:	ldr	r3, [pc, #48]	; 127e0 <rb_dlinkDelete+0xa8>
   127ac:	add	r3, pc, r3
   127b0:	mov	r2, #235	; 0xeb
   127b4:	bl	e7e0 <__assert_fail@plt>
   127b8:	ldr	r0, [pc, #36]	; 127e4 <rb_dlinkDelete+0xac>
   127bc:	add	r0, pc, r0
   127c0:	ldr	r1, [pc, #32]	; 127e8 <rb_dlinkDelete+0xb0>
   127c4:	add	r1, pc, r1
   127c8:	ldr	r3, [pc, #28]	; 127ec <rb_dlinkDelete+0xb4>
   127cc:	add	r3, pc, r3
   127d0:	mov	r2, #236	; 0xec
   127d4:	bl	e7e0 <__assert_fail@plt>
   127d8:	.word	0x0002de10
   127dc:	.word	0x0002de12
   127e0:	.word	0x0002dead
   127e4:	.word	0x00033689
   127e8:	.word	0x0002ddf2
   127ec:	.word	0x0002de8d

000127f0 <destroy_channel>:
   127f0:	push	{r4, r5, fp, lr}
   127f4:	add	fp, sp, #8
   127f8:	mov	r4, r0
   127fc:	ldr	r5, [r0, #148]	; 0x94
   12800:	cmp	r5, #0
   12804:	beq	12820 <destroy_channel+0x30>
   12808:	ldr	r1, [r5]
   1280c:	ldr	r5, [r5, #8]
   12810:	mov	r0, r4
   12814:	bl	d46c <del_invite@plt>
   12818:	cmp	r5, #0
   1281c:	bne	12808 <destroy_channel+0x18>
   12820:	add	r0, r4, #160	; 0xa0
   12824:	bl	e648 <free_channel_list@plt>
   12828:	add	r0, r4, #172	; 0xac
   1282c:	bl	e648 <free_channel_list@plt>
   12830:	add	r0, r4, #184	; 0xb8
   12834:	bl	e648 <free_channel_list@plt>
   12838:	add	r0, r4, #196	; 0xc4
   1283c:	bl	e648 <free_channel_list@plt>
   12840:	mov	r0, r4
   12844:	bl	12a38 <free_topic>
   12848:	ldr	r1, [pc, #32]	; 12870 <destroy_channel+0x80>
   1284c:	ldr	r1, [pc, r1]
   12850:	mov	r0, r4
   12854:	bl	12738 <rb_dlinkDelete>
   12858:	ldr	r0, [r4, #236]	; 0xec
   1285c:	mov	r1, r4
   12860:	bl	e288 <del_from_channel_hash@plt>
   12864:	mov	r0, r4
   12868:	pop	{r4, r5, fp, lr}
   1286c:	b	12220 <free_channel>
   12870:	.word	0x00048120

00012874 <remove_user_from_channels>:
   12874:	cmp	r0, #0
   12878:	bxeq	lr
   1287c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12880:	add	fp, sp, #24
   12884:	mov	r4, r0
   12888:	ldr	r0, [r0, #24]
   1288c:	ldr	r7, [r0]
   12890:	cmp	r7, #0
   12894:	beq	1290c <remove_user_from_channels+0x98>
   12898:	ldr	r8, [pc, #136]	; 12928 <remove_user_from_channels+0xb4>
   1289c:	ldr	r8, [pc, r8]
   128a0:	b	128b0 <remove_user_from_channels+0x3c>
   128a4:	mov	r0, r6
   128a8:	bl	e0e4 <destroy_channel@plt>
   128ac:	b	128f4 <remove_user_from_channels+0x80>
   128b0:	ldr	r5, [r7]
   128b4:	ldr	r7, [r7, #8]
   128b8:	ldr	r6, [r5, #36]	; 0x24
   128bc:	add	r1, r6, #124	; 0x7c
   128c0:	mov	r0, r5
   128c4:	bl	12738 <rb_dlinkDelete>
   128c8:	ldr	r0, [r4, #32]
   128cc:	cmp	r0, r8
   128d0:	bne	128e0 <remove_user_from_channels+0x6c>
   128d4:	add	r0, r5, #12
   128d8:	add	r1, r6, #136	; 0x88
   128dc:	bl	12738 <rb_dlinkDelete>
   128e0:	ldrb	r0, [r6, #13]
   128e4:	tst	r0, #2
   128e8:	ldreq	r0, [r6, #132]	; 0x84
   128ec:	cmpeq	r0, #0
   128f0:	beq	128a4 <remove_user_from_channels+0x30>
   128f4:	ldr	r0, [pc, #48]	; 1292c <remove_user_from_channels+0xb8>
   128f8:	ldr	r0, [pc, r0]
   128fc:	mov	r1, r5
   12900:	bl	e708 <rb_bh_free@plt>
   12904:	cmp	r7, #0
   12908:	bne	128b0 <remove_user_from_channels+0x3c>
   1290c:	ldr	r0, [r4, #24]
   12910:	mov	r1, #0
   12914:	str	r1, [r0]
   12918:	str	r1, [r0, #4]
   1291c:	str	r1, [r0, #8]
   12920:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12924:	bx	lr
   12928:	.word	0x000482bc
   1292c:	.word	0x0004f014

00012930 <invalidate_bancache_user>:
   12930:	cmp	r0, #0
   12934:	beq	1296c <invalidate_bancache_user+0x3c>
   12938:	ldr	r0, [r0, #24]
   1293c:	ldr	r0, [r0]
   12940:	cmp	r0, #0
   12944:	bxeq	lr
   12948:	mov	r1, #0
   1294c:	ldr	r2, [r0]
   12950:	str	r1, [r2, #48]	; 0x30
   12954:	ldr	r3, [r2, #44]	; 0x2c
   12958:	bic	r3, r3, #8
   1295c:	str	r3, [r2, #44]	; 0x2c
   12960:	ldr	r0, [r0, #8]
   12964:	cmp	r0, #0
   12968:	bne	1294c <invalidate_bancache_user+0x1c>
   1296c:	bx	lr

00012970 <check_channel_name>:
   12970:	mov	r1, r0
   12974:	mov	r0, #0
   12978:	cmp	r1, #0
   1297c:	bxeq	lr
   12980:	ldrb	r2, [r1]
   12984:	cmp	r2, #0
   12988:	moveq	r0, #1
   1298c:	bxeq	lr
   12990:	add	r1, r1, #1
   12994:	ldr	r3, [pc, #40]	; 129c4 <check_channel_name+0x54>
   12998:	ldr	r3, [pc, r3]
   1299c:	b	129b0 <check_channel_name+0x40>
   129a0:	ldrb	r2, [r1], #1
   129a4:	cmp	r2, #0
   129a8:	moveq	r0, #1
   129ac:	bxeq	lr
   129b0:	uxtb	r2, r2
   129b4:	ldrb	r2, [r3, r2, lsl #2]
   129b8:	tst	r2, #128	; 0x80
   129bc:	bne	129a0 <check_channel_name+0x30>
   129c0:	bx	lr
   129c4:	.word	0x00048060

000129c8 <free_channel_list>:
   129c8:	push	{r4, r5, fp, lr}
   129cc:	add	fp, sp, #8
   129d0:	mov	r4, r0
   129d4:	ldr	r5, [r0]
   129d8:	cmp	r5, #0
   129dc:	beq	129f4 <free_channel_list+0x2c>
   129e0:	ldr	r0, [r5]
   129e4:	ldr	r5, [r5, #8]
   129e8:	bl	e438 <free_ban@plt>
   129ec:	cmp	r5, #0
   129f0:	bne	129e0 <free_channel_list+0x18>
   129f4:	mov	r0, #0
   129f8:	str	r0, [r4]
   129fc:	str	r0, [r4, #4]
   12a00:	str	r0, [r4, #8]
   12a04:	pop	{r4, r5, fp, pc}

00012a08 <del_invite>:
   12a08:	push	{r4, r5, fp, lr}
   12a0c:	add	fp, sp, #8
   12a10:	mov	r4, r1
   12a14:	mov	r5, r0
   12a18:	add	r1, r0, #148	; 0x94
   12a1c:	mov	r0, r4
   12a20:	bl	12df0 <rb_dlinkFindDestroy>
   12a24:	ldr	r0, [r4, #24]
   12a28:	add	r1, r0, #12
   12a2c:	mov	r0, r5
   12a30:	pop	{r4, r5, fp, lr}
   12a34:	b	12df0 <rb_dlinkFindDestroy>

00012a38 <free_topic>:
   12a38:	push	{r4, sl, fp, lr}
   12a3c:	add	fp, sp, #8
   12a40:	cmp	r0, #0
   12a44:	beq	12a70 <free_topic+0x38>
   12a48:	mov	r4, r0
   12a4c:	ldr	r1, [r0, #108]	; 0x6c
   12a50:	cmp	r1, #0
   12a54:	popeq	{r4, sl, fp, pc}
   12a58:	ldr	r0, [pc, #20]	; 12a74 <free_topic+0x3c>
   12a5c:	ldr	r0, [pc, r0]
   12a60:	bl	e708 <rb_bh_free@plt>
   12a64:	mov	r0, #0
   12a68:	str	r0, [r4, #108]	; 0x6c
   12a6c:	str	r0, [r4, #112]	; 0x70
   12a70:	pop	{r4, sl, fp, pc}
   12a74:	.word	0x0004eeac

00012a78 <channel_member_names>:
   12a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a7c:	add	fp, sp, #28
   12a80:	sub	sp, sp, #564	; 0x234
   12a84:	str	r2, [sp, #8]
   12a88:	mov	sl, r1
   12a8c:	ldr	r1, [pc, #744]	; 12d7c <channel_member_names+0x304>
   12a90:	ldr	r1, [pc, r1]
   12a94:	ldr	r9, [r1]
   12a98:	ldr	r1, [sl, #432]	; 0x1b0
   12a9c:	ldr	r4, [r1, #296]	; 0x128
   12aa0:	str	r0, [sp, #12]
   12aa4:	cmp	r0, #0
   12aa8:	beq	12adc <channel_member_names+0x64>
   12aac:	ldr	r0, [sp, #12]
   12ab0:	ldrb	r0, [r0, #12]
   12ab4:	tst	r0, #3
   12ab8:	beq	12adc <channel_member_names+0x64>
   12abc:	ldr	r0, [sl, #24]
   12ac0:	cmp	r0, #0
   12ac4:	beq	12d3c <channel_member_names+0x2c4>
   12ac8:	ldr	r0, [sp, #12]
   12acc:	mov	r1, sl
   12ad0:	bl	d958 <find_channel_membership@plt>
   12ad4:	cmp	r0, #0
   12ad8:	beq	12d3c <channel_member_names+0x2c4>
   12adc:	ldr	r0, [sl, #24]
   12ae0:	cmp	r0, #0
   12ae4:	beq	12b08 <channel_member_names+0x90>
   12ae8:	ldr	r6, [sp, #12]
   12aec:	mov	r0, r6
   12af0:	mov	r1, sl
   12af4:	bl	d958 <find_channel_membership@plt>
   12af8:	mov	r7, r0
   12afc:	cmp	r0, #0
   12b00:	movwne	r7, #1
   12b04:	b	12b10 <channel_member_names+0x98>
   12b08:	mov	r7, #0
   12b0c:	ldr	r6, [sp, #12]
   12b10:	mov	r0, r6
   12b14:	bl	12da8 <channel_pub_or_secret>
   12b18:	ldr	r1, [r6, #236]	; 0xec
   12b1c:	stm	sp, {r0, r1}
   12b20:	add	r3, sl, #88	; 0x58
   12b24:	ldr	r0, [pc, #596]	; 12d80 <channel_member_names+0x308>
   12b28:	ldr	r0, [pc, r0]
   12b2c:	add	r2, r0, #88	; 0x58
   12b30:	add	r5, sp, #48	; 0x30
   12b34:	ldr	r1, [pc, #584]	; 12d84 <channel_member_names+0x30c>
   12b38:	add	r1, pc, r1
   12b3c:	mov	r0, r5
   12b40:	bl	e3a8 <sprintf@plt>
   12b44:	ldr	r6, [r6, #124]	; 0x7c
   12b48:	cmp	r6, #0
   12b4c:	beq	12d3c <channel_member_names+0x2c4>
   12b50:	mov	r8, r0
   12b54:	and	r0, r9, r4
   12b58:	sub	r0, r0, r9
   12b5c:	clz	r0, r0
   12b60:	lsr	r0, r0, #5
   12b64:	str	r0, [sp, #32]
   12b68:	add	r4, r5, r8
   12b6c:	mvn	r5, r7
   12b70:	str	r4, [sp, #16]
   12b74:	str	r8, [sp, #44]	; 0x2c
   12b78:	str	r8, [sp, #28]
   12b7c:	str	r5, [sp, #24]
   12b80:	str	sl, [sp, #20]
   12b84:	ldr	r9, [r6]
   12b88:	ldr	r7, [r9, #40]	; 0x28
   12b8c:	ldrb	r0, [r7, #56]	; 0x38
   12b90:	and	r0, r0, #8
   12b94:	tst	r5, r0, lsr #3
   12b98:	bne	12d08 <channel_member_names+0x290>
   12b9c:	str	r4, [sp, #36]	; 0x24
   12ba0:	ldr	r0, [pc, #480]	; 12d88 <channel_member_names+0x310>
   12ba4:	ldr	r0, [pc, r0]
   12ba8:	ldr	r4, [r0]
   12bac:	mov	r8, sl
   12bb0:	ldr	r0, [sl, #432]	; 0x1b0
   12bb4:	ldr	sl, [r0, #296]	; 0x128
   12bb8:	add	r0, r7, #88	; 0x58
   12bbc:	str	r0, [sp, #40]	; 0x28
   12bc0:	bl	dc94 <strlen@plt>
   12bc4:	ldr	r1, [sp, #44]	; 0x2c
   12bc8:	add	r5, r0, r1
   12bcc:	and	r0, r4, sl
   12bd0:	cmp	r0, r4
   12bd4:	bne	12c3c <channel_member_names+0x1c4>
   12bd8:	add	sl, r7, #152	; 0x98
   12bdc:	mov	r0, sl
   12be0:	bl	dc94 <strlen@plt>
   12be4:	add	r5, r5, r0
   12be8:	add	r7, r7, #163	; 0xa3
   12bec:	mov	r0, r7
   12bf0:	bl	dc94 <strlen@plt>
   12bf4:	add	r0, r5, r0
   12bf8:	add	r0, r0, #5
   12bfc:	movw	r1, #507	; 0x1fb
   12c00:	cmp	r0, r1
   12c04:	bcc	12c80 <channel_member_names+0x208>
   12c08:	mov	r0, #0
   12c0c:	ldr	r1, [sp, #36]	; 0x24
   12c10:	strb	r0, [r1, #-1]
   12c14:	mov	r0, r8
   12c18:	ldr	r1, [pc, #364]	; 12d8c <channel_member_names+0x314>
   12c1c:	add	r1, pc, r1
   12c20:	add	r2, sp, #48	; 0x30
   12c24:	bl	d1e4 <sendto_one@plt>
   12c28:	ldr	r8, [sp, #28]
   12c2c:	str	r8, [sp, #44]	; 0x2c
   12c30:	ldr	r4, [sp, #16]
   12c34:	ldr	r5, [sp, #24]
   12c38:	b	12c8c <channel_member_names+0x214>
   12c3c:	add	r0, r5, #3
   12c40:	cmp	r0, #508	; 0x1fc
   12c44:	bls	12cc0 <channel_member_names+0x248>
   12c48:	mov	r0, #0
   12c4c:	ldr	r1, [sp, #36]	; 0x24
   12c50:	strb	r0, [r1, #-1]
   12c54:	mov	sl, r8
   12c58:	mov	r0, r8
   12c5c:	ldr	r1, [pc, #304]	; 12d94 <channel_member_names+0x31c>
   12c60:	add	r1, pc, r1
   12c64:	add	r2, sp, #48	; 0x30
   12c68:	bl	d1e4 <sendto_one@plt>
   12c6c:	ldr	r8, [sp, #28]
   12c70:	str	r8, [sp, #44]	; 0x2c
   12c74:	ldr	r4, [sp, #16]
   12c78:	ldr	r5, [sp, #24]
   12c7c:	b	12cd0 <channel_member_names+0x258>
   12c80:	ldr	r8, [sp, #28]
   12c84:	ldr	r5, [sp, #24]
   12c88:	ldr	r4, [sp, #36]	; 0x24
   12c8c:	mov	r0, r9
   12c90:	ldr	r1, [sp, #32]
   12c94:	bl	d01c <find_channel_status@plt>
   12c98:	mov	r2, r0
   12c9c:	str	sl, [sp]
   12ca0:	str	r7, [sp, #4]
   12ca4:	mov	r0, r4
   12ca8:	ldr	r1, [pc, #224]	; 12d90 <channel_member_names+0x318>
   12cac:	add	r1, pc, r1
   12cb0:	ldr	r3, [sp, #40]	; 0x28
   12cb4:	bl	e3a8 <sprintf@plt>
   12cb8:	ldr	sl, [sp, #20]
   12cbc:	b	12cf8 <channel_member_names+0x280>
   12cc0:	mov	sl, r8
   12cc4:	ldr	r8, [sp, #28]
   12cc8:	ldr	r5, [sp, #24]
   12ccc:	ldr	r4, [sp, #36]	; 0x24
   12cd0:	ldr	r7, [sp, #40]	; 0x28
   12cd4:	mov	r0, r9
   12cd8:	ldr	r1, [sp, #32]
   12cdc:	bl	d01c <find_channel_status@plt>
   12ce0:	mov	r2, r0
   12ce4:	mov	r0, r4
   12ce8:	ldr	r1, [pc, #168]	; 12d98 <channel_member_names+0x320>
   12cec:	add	r1, pc, r1
   12cf0:	mov	r3, r7
   12cf4:	bl	e3a8 <sprintf@plt>
   12cf8:	add	r4, r4, r0
   12cfc:	ldr	r1, [sp, #44]	; 0x2c
   12d00:	add	r1, r1, r0
   12d04:	str	r1, [sp, #44]	; 0x2c
   12d08:	ldr	r6, [r6, #8]
   12d0c:	cmp	r6, #0
   12d10:	bne	12b84 <channel_member_names+0x10c>
   12d14:	ldr	r0, [sp, #44]	; 0x2c
   12d18:	cmp	r0, r8
   12d1c:	beq	12d3c <channel_member_names+0x2c4>
   12d20:	mov	r0, #0
   12d24:	strb	r0, [r4, #-1]
   12d28:	ldr	r1, [pc, #108]	; 12d9c <channel_member_names+0x324>
   12d2c:	add	r1, pc, r1
   12d30:	add	r2, sp, #48	; 0x30
   12d34:	mov	r0, sl
   12d38:	bl	d1e4 <sendto_one@plt>
   12d3c:	ldr	r0, [sp, #8]
   12d40:	cmp	r0, #0
   12d44:	beq	12d74 <channel_member_names+0x2fc>
   12d48:	ldr	r0, [sp, #12]
   12d4c:	ldr	r0, [r0, #236]	; 0xec
   12d50:	str	r0, [sp]
   12d54:	add	r3, sl, #88	; 0x58
   12d58:	ldr	r0, [pc, #64]	; 12da0 <channel_member_names+0x328>
   12d5c:	ldr	r0, [pc, r0]
   12d60:	add	r2, r0, #88	; 0x58
   12d64:	ldr	r1, [pc, #56]	; 12da4 <channel_member_names+0x32c>
   12d68:	add	r1, pc, r1
   12d6c:	mov	r0, sl
   12d70:	bl	d1e4 <sendto_one@plt>
   12d74:	sub	sp, fp, #28
   12d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d7c:	.word	0x000480d4
   12d80:	.word	0x00048030
   12d84:	.word	0x0002de6d
   12d88:	.word	0x00047d9c
   12d8c:	.word	0x00034a49
   12d90:	.word	0x0002dd0c
   12d94:	.word	0x00034a05
   12d98:	.word	0x0002dcd8
   12d9c:	.word	0x00034939
   12da0:	.word	0x00047dfc
   12da4:	.word	0x0002dc62

00012da8 <channel_pub_or_secret>:
   12da8:	mov	r1, r0
   12dac:	ldr	r0, [pc, #48]	; 12de4 <channel_pub_or_secret+0x3c>
   12db0:	add	r0, pc, r0
   12db4:	cmp	r1, #0
   12db8:	ldrne	r1, [r1, #12]
   12dbc:	tstne	r1, #3
   12dc0:	bne	12dc8 <channel_pub_or_secret+0x20>
   12dc4:	bx	lr
   12dc8:	ldr	r2, [pc, #24]	; 12de8 <channel_pub_or_secret+0x40>
   12dcc:	add	r2, pc, r2
   12dd0:	ldr	r0, [pc, #20]	; 12dec <channel_pub_or_secret+0x44>
   12dd4:	add	r0, pc, r0
   12dd8:	tst	r1, #2
   12ddc:	moveq	r0, r2
   12de0:	bx	lr
   12de4:	.word	0x0002de13
   12de8:	.word	0x0002e571
   12dec:	.word	0x00030033

00012df0 <rb_dlinkFindDestroy>:
   12df0:	push	{fp, lr}
   12df4:	mov	fp, sp
   12df8:	cmp	r1, #0
   12dfc:	beq	12e1c <rb_dlinkFindDestroy+0x2c>
   12e00:	cmp	r0, #0
   12e04:	beq	12e3c <rb_dlinkFindDestroy+0x4c>
   12e08:	bl	1416c <rb_dlinkFindDelete>
   12e0c:	cmp	r0, #0
   12e10:	popeq	{fp, pc}
   12e14:	pop	{fp, lr}
   12e18:	b	d7c0 <rb_free_rb_dlink_node@plt>
   12e1c:	ldr	r0, [pc, #56]	; 12e5c <rb_dlinkFindDestroy+0x6c>
   12e20:	add	r0, pc, r0
   12e24:	ldr	r1, [pc, #52]	; 12e60 <rb_dlinkFindDestroy+0x70>
   12e28:	add	r1, pc, r1
   12e2c:	ldr	r3, [pc, #48]	; 12e64 <rb_dlinkFindDestroy+0x74>
   12e30:	add	r3, pc, r3
   12e34:	movw	r2, #287	; 0x11f
   12e38:	bl	e7e0 <__assert_fail@plt>
   12e3c:	ldr	r0, [pc, #36]	; 12e68 <rb_dlinkFindDestroy+0x78>
   12e40:	add	r0, pc, r0
   12e44:	ldr	r1, [pc, #32]	; 12e6c <rb_dlinkFindDestroy+0x7c>
   12e48:	add	r1, pc, r1
   12e4c:	ldr	r3, [pc, #28]	; 12e70 <rb_dlinkFindDestroy+0x80>
   12e50:	add	r3, pc, r3
   12e54:	mov	r2, #288	; 0x120
   12e58:	bl	e7e0 <__assert_fail@plt>
   12e5c:	.word	0x00033025
   12e60:	.word	0x0002d78e
   12e64:	.word	0x0002dd95
   12e68:	.word	0x0002d7d1
   12e6c:	.word	0x0002d76e
   12e70:	.word	0x0002dd75

00012e74 <is_banned>:
   12e74:	push	{fp, lr}
   12e78:	mov	fp, sp
   12e7c:	sub	sp, sp, #8
   12e80:	mov	ip, r2
   12e84:	mov	r2, r1
   12e88:	str	r3, [sp]
   12e8c:	ldr	r1, [fp, #8]
   12e90:	str	r1, [sp, #4]
   12e94:	add	r1, r0, #160	; 0xa0
   12e98:	mov	r3, ip
   12e9c:	bl	12ea8 <is_banned_list>
   12ea0:	mov	sp, fp
   12ea4:	pop	{fp, pc}

00012ea8 <is_banned_list>:
   12ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eac:	add	fp, sp, #28
   12eb0:	sub	sp, sp, #556	; 0x22c
   12eb4:	mov	r9, r0
   12eb8:	ldrb	r0, [r2, #65]	; 0x41
   12ebc:	mov	sl, #0
   12ec0:	tst	r0, #32
   12ec4:	beq	12fe8 <is_banned_list+0x140>
   12ec8:	mov	r7, r2
   12ecc:	ldrh	r0, [r2, #80]	; 0x50
   12ed0:	cmp	r0, #64	; 0x40
   12ed4:	bne	12fe8 <is_banned_list+0x140>
   12ed8:	mov	r8, r3
   12edc:	mov	r5, r1
   12ee0:	ldr	r4, [fp, #8]
   12ee4:	cmp	r4, #0
   12ee8:	bne	12efc <is_banned_list+0x54>
   12eec:	add	r4, sp, #4
   12ef0:	mov	r0, r7
   12ef4:	mov	r1, r4
   12ef8:	bl	e018 <matchset_for_client@plt>
   12efc:	ldr	r6, [r5]
   12f00:	cmp	r6, #0
   12f04:	bne	12f18 <is_banned_list+0x70>
   12f08:	b	12fa4 <is_banned_list+0xfc>
   12f0c:	ldr	r6, [r6, #8]
   12f10:	cmp	r6, #0
   12f14:	beq	12fa4 <is_banned_list+0xfc>
   12f18:	ldr	r5, [r6]
   12f1c:	ldr	r1, [r5]
   12f20:	mov	r0, r4
   12f24:	bl	d310 <matches_mask@plt>
   12f28:	cmp	r0, #0
   12f2c:	bne	12f4c <is_banned_list+0xa4>
   12f30:	ldr	r0, [r5]
   12f34:	mov	r1, r7
   12f38:	mov	r2, r9
   12f3c:	mov	r3, #268435456	; 0x10000000
   12f40:	bl	dd78 <match_extban@plt>
   12f44:	cmp	r0, #0
   12f48:	beq	12f0c <is_banned_list+0x64>
   12f4c:	cmp	r5, #0
   12f50:	mov	sl, r5
   12f54:	movwne	sl, #1
   12f58:	beq	12f78 <is_banned_list+0xd0>
   12f5c:	ldr	r0, [pc, #268]	; 13070 <is_banned_list+0x1c8>
   12f60:	ldr	r0, [pc, r0]
   12f64:	ldr	r0, [r0]
   12f68:	cmp	r0, #0
   12f6c:	ldrne	r6, [r9, #172]	; 0xac
   12f70:	cmpne	r6, #0
   12f74:	bne	12ff4 <is_banned_list+0x14c>
   12f78:	cmp	r8, #0
   12f7c:	beq	12fb4 <is_banned_list+0x10c>
   12f80:	ldr	r0, [r9, #228]	; 0xe4
   12f84:	str	r0, [r8, #48]	; 0x30
   12f88:	ldr	r0, [r8, #44]	; 0x2c
   12f8c:	cmp	sl, #0
   12f90:	beq	12fdc <is_banned_list+0x134>
   12f94:	orr	r0, r0, #8
   12f98:	str	r0, [r8, #44]	; 0x2c
   12f9c:	mov	sl, #268435456	; 0x10000000
   12fa0:	b	12fe8 <is_banned_list+0x140>
   12fa4:	mov	sl, #0
   12fa8:	mov	r5, #0
   12fac:	cmp	r8, #0
   12fb0:	bne	12f80 <is_banned_list+0xd8>
   12fb4:	cmp	sl, #0
   12fb8:	ldrne	r0, [fp, #12]
   12fbc:	cmpne	r0, #0
   12fc0:	beq	12fd0 <is_banned_list+0x128>
   12fc4:	ldr	r1, [r5, #12]
   12fc8:	cmp	r1, #0
   12fcc:	strne	r1, [r0]
   12fd0:	cmp	sl, #0
   12fd4:	movne	sl, #268435456	; 0x10000000
   12fd8:	b	12fe8 <is_banned_list+0x140>
   12fdc:	bic	r0, r0, #8
   12fe0:	str	r0, [r8, #44]	; 0x2c
   12fe4:	mov	sl, #0
   12fe8:	mov	r0, sl
   12fec:	sub	sp, fp, #28
   12ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ff4:	str	r8, [sp]
   12ff8:	ldr	r8, [r6]
   12ffc:	ldr	r1, [r8]
   13000:	mov	r0, r4
   13004:	bl	d310 <matches_mask@plt>
   13008:	cmp	r0, #0
   1300c:	bne	13048 <is_banned_list+0x1a0>
   13010:	ldr	r0, [r8]
   13014:	mov	r1, r7
   13018:	mov	r2, r9
   1301c:	mov	r3, #268435456	; 0x10000000
   13020:	bl	dd78 <match_extban@plt>
   13024:	cmp	r0, #0
   13028:	bne	13048 <is_banned_list+0x1a0>
   1302c:	ldr	r6, [r6, #8]
   13030:	cmp	r6, #0
   13034:	bne	12ff8 <is_banned_list+0x150>
   13038:	ldr	r8, [sp]
   1303c:	cmp	r8, #0
   13040:	bne	12f80 <is_banned_list+0xd8>
   13044:	b	12fb4 <is_banned_list+0x10c>
   13048:	mov	sl, #536870912	; 0x20000000
   1304c:	ldr	r1, [sp]
   13050:	cmp	r1, #0
   13054:	beq	12fe8 <is_banned_list+0x140>
   13058:	ldr	r0, [r9, #228]	; 0xe4
   1305c:	str	r0, [r1, #48]	; 0x30
   13060:	ldr	r0, [r1, #44]	; 0x2c
   13064:	bic	r0, r0, #8
   13068:	str	r0, [r1, #44]	; 0x2c
   1306c:	b	12fe8 <is_banned_list+0x140>
   13070:	.word	0x00047bb8

00013074 <is_quieted>:
   13074:	push	{fp, lr}
   13078:	mov	fp, sp
   1307c:	sub	sp, sp, #8
   13080:	mov	ip, r2
   13084:	mov	r2, r1
   13088:	mov	r1, #0
   1308c:	str	r3, [sp]
   13090:	str	r1, [sp, #4]
   13094:	add	r1, r0, #196	; 0xc4
   13098:	mov	r3, ip
   1309c:	bl	12ea8 <is_banned_list>
   130a0:	mov	sp, fp
   130a4:	pop	{fp, pc}

000130a8 <can_join>:
   130a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130ac:	add	fp, sp, #24
   130b0:	sub	sp, sp, #568	; 0x238
   130b4:	mov	r6, r3
   130b8:	mov	r7, r2
   130bc:	mov	r4, r1
   130c0:	mov	r8, r0
   130c4:	stmib	sp, {r0, r1}
   130c8:	mov	r0, #0
   130cc:	str	r0, [sp, #12]
   130d0:	add	r5, sp, #16
   130d4:	mov	r0, r8
   130d8:	mov	r1, r5
   130dc:	bl	e018 <matchset_for_client@plt>
   130e0:	str	r6, [sp]
   130e4:	mov	r0, r4
   130e8:	mov	r1, r8
   130ec:	mov	r2, #0
   130f0:	mov	r3, r5
   130f4:	bl	e240 <is_banned@plt>
   130f8:	cmp	r0, #268435456	; 0x10000000
   130fc:	bne	1310c <can_join+0x64>
   13100:	movw	r0, #474	; 0x1da
   13104:	str	r0, [sp, #12]
   13108:	b	1329c <can_join+0x1f4>
   1310c:	mov	r0, r4
   13110:	ldrb	r1, [r0, #20]!
   13114:	cmp	r1, #0
   13118:	beq	13148 <can_join+0xa0>
   1311c:	cmp	r7, #0
   13120:	ldrbne	r1, [r7]
   13124:	cmpne	r1, #0
   13128:	bne	13138 <can_join+0x90>
   1312c:	movw	r0, #475	; 0x1db
   13130:	str	r0, [sp, #12]
   13134:	b	1329c <can_join+0x1f4>
   13138:	mov	r1, r7
   1313c:	bl	e750 <irccmp@plt>
   13140:	cmp	r0, #0
   13144:	bne	1312c <can_join+0x84>
   13148:	cmp	r6, #0
   1314c:	addne	r0, r4, #52	; 0x34
   13150:	strne	r0, [r6]
   13154:	ldrb	r0, [r4, #12]
   13158:	mov	r5, #0
   1315c:	tst	r0, #16
   13160:	mov	r6, #0
   13164:	beq	1320c <can_join+0x164>
   13168:	ldr	r0, [r8, #24]
   1316c:	ldr	r6, [r0, #12]
   13170:	cmp	r6, #0
   13174:	bne	13188 <can_join+0xe0>
   13178:	b	13198 <can_join+0xf0>
   1317c:	ldr	r6, [r6, #8]
   13180:	cmp	r6, #0
   13184:	beq	13198 <can_join+0xf0>
   13188:	ldr	r0, [r6]
   1318c:	cmp	r0, r4
   13190:	bne	1317c <can_join+0xd4>
   13194:	b	1320c <can_join+0x164>
   13198:	ldr	r0, [pc, #348]	; 132fc <can_join+0x254>
   1319c:	ldr	r0, [pc, r0]
   131a0:	ldr	r0, [r0, #4]
   131a4:	cmp	r0, #0
   131a8:	movweq	r0, #473	; 0x1d9
   131ac:	streq	r0, [sp, #12]
   131b0:	ldr	r7, [r4, #184]	; 0xb8
   131b4:	cmp	r7, #0
   131b8:	beq	13200 <can_join+0x158>
   131bc:	add	r9, sp, #16
   131c0:	ldr	r6, [r7]
   131c4:	ldr	r1, [r6]
   131c8:	mov	r0, r9
   131cc:	bl	d310 <matches_mask@plt>
   131d0:	cmp	r0, #0
   131d4:	bne	13208 <can_join+0x160>
   131d8:	ldr	r0, [r6]
   131dc:	mov	r1, r8
   131e0:	mov	r2, r4
   131e4:	mov	r3, #1073741824	; 0x40000000
   131e8:	bl	dd78 <match_extban@plt>
   131ec:	cmp	r0, #0
   131f0:	bne	13208 <can_join+0x160>
   131f4:	ldr	r7, [r7, #8]
   131f8:	cmp	r7, #0
   131fc:	bne	131c0 <can_join+0x118>
   13200:	movw	r0, #473	; 0x1d9
   13204:	str	r0, [sp, #12]
   13208:	mov	r6, #0
   1320c:	ldr	r0, [r4, #16]
   13210:	cmp	r0, #0
   13214:	beq	13228 <can_join+0x180>
   13218:	ldr	r1, [r4, #132]	; 0x84
   1321c:	movw	r5, #471	; 0x1d7
   13220:	cmp	r1, r0
   13224:	movwcc	r5, #0
   13228:	ldrb	r0, [r4, #12]
   1322c:	tst	r0, #64	; 0x40
   13230:	beq	13244 <can_join+0x19c>
   13234:	ldr	r0, [r8, #24]
   13238:	ldrb	r0, [r0, #40]	; 0x28
   1323c:	cmp	r0, #0
   13240:	beq	132ec <can_join+0x244>
   13244:	ldr	r0, [r4, #44]	; 0x2c
   13248:	cmp	r0, #0
   1324c:	ldrne	r0, [r4, #48]	; 0x30
   13250:	cmpne	r0, #0
   13254:	bne	132b8 <can_join+0x210>
   13258:	cmp	r6, #0
   1325c:	bne	1329c <can_join+0x1f4>
   13260:	cmp	r5, #0
   13264:	beq	1329c <can_join+0x1f4>
   13268:	ldr	r0, [r8, #24]
   1326c:	ldr	r0, [r0, #12]
   13270:	cmp	r0, #0
   13274:	bne	13288 <can_join+0x1e0>
   13278:	b	13298 <can_join+0x1f0>
   1327c:	ldr	r0, [r0, #8]
   13280:	cmp	r0, #0
   13284:	beq	13298 <can_join+0x1f0>
   13288:	ldr	r1, [r0]
   1328c:	cmp	r1, r4
   13290:	bne	1327c <can_join+0x1d4>
   13294:	b	1329c <can_join+0x1f4>
   13298:	str	r5, [sp, #12]
   1329c:	ldr	r0, [pc, #92]	; 13300 <can_join+0x258>
   132a0:	ldr	r0, [pc, r0]
   132a4:	add	r1, sp, #4
   132a8:	bl	e654 <call_hook@plt>
   132ac:	ldr	r0, [sp, #12]
   132b0:	sub	sp, fp, #24
   132b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   132b8:	bl	d07c <rb_current_time@plt>
   132bc:	ldr	r1, [r4, #48]	; 0x30
   132c0:	ldr	r2, [r4, #224]	; 0xe0
   132c4:	sub	r0, r0, r2
   132c8:	cmp	r0, r1
   132cc:	bhi	13258 <can_join+0x1b0>
   132d0:	ldr	r0, [r4, #44]	; 0x2c
   132d4:	ldr	r1, [r4, #220]	; 0xdc
   132d8:	cmp	r1, r0
   132dc:	movcs	r5, #480	; 0x1e0
   132e0:	cmp	r6, #0
   132e4:	beq	13260 <can_join+0x1b8>
   132e8:	b	1329c <can_join+0x1f4>
   132ec:	movw	r5, #477	; 0x1dd
   132f0:	cmp	r6, #0
   132f4:	beq	13260 <can_join+0x1b8>
   132f8:	b	1329c <can_join+0x1f4>
   132fc:	.word	0x0004797c
   13300:	.word	0x0004e670

00013304 <can_send>:
   13304:	push	{r4, r5, r6, r7, fp, lr}
   13308:	add	fp, sp, #16
   1330c:	sub	sp, sp, #40	; 0x28
   13310:	mov	r4, r1
   13314:	mov	r6, r0
   13318:	mov	r0, #0
   1331c:	str	r0, [sp, #28]
   13320:	mov	r0, #1
   13324:	str	r0, [sp, #24]
   13328:	ldrh	r1, [r1, #80]	; 0x50
   1332c:	mov	r0, #2
   13330:	cmp	r1, #32
   13334:	beq	134a4 <can_send+0x1a0>
   13338:	mov	r5, r2
   1333c:	ldrb	r2, [r4, #56]	; 0x38
   13340:	tst	r2, #64	; 0x40
   13344:	bne	134a4 <can_send+0x1a0>
   13348:	mov	r7, r4
   1334c:	ldr	r0, [r7, #64]!	; 0x40
   13350:	cmp	r1, #64	; 0x40
   13354:	bne	13388 <can_send+0x84>
   13358:	ands	r0, r0, #8192	; 0x2000
   1335c:	beq	13388 <can_send+0x84>
   13360:	ldr	r0, [r6, #236]	; 0xec
   13364:	bl	e600 <hash_find_resv@plt>
   13368:	cmp	r0, #0
   1336c:	beq	13388 <can_send+0x84>
   13370:	ldrb	r0, [r4, #57]	; 0x39
   13374:	tst	r0, #16
   13378:	ldrbeq	r0, [r7, #2]
   1337c:	tsteq	r0, #32
   13380:	moveq	r0, #0
   13384:	streq	r0, [sp, #24]
   13388:	cmp	r5, #0
   1338c:	bne	133a8 <can_send+0xa4>
   13390:	mov	r0, r6
   13394:	mov	r1, r4
   13398:	bl	d958 <find_channel_membership@plt>
   1339c:	mov	r5, r0
   133a0:	cmp	r0, #0
   133a4:	beq	133f4 <can_send+0xf0>
   133a8:	ldrb	r0, [r6, #12]
   133ac:	tst	r0, #4
   133b0:	movne	r0, #0
   133b4:	strne	r0, [sp, #24]
   133b8:	ldrb	r0, [r7, #1]
   133bc:	tst	r0, #32
   133c0:	beq	13458 <can_send+0x154>
   133c4:	ldrh	r0, [r4, #80]	; 0x50
   133c8:	cmp	r0, #64	; 0x40
   133cc:	bne	13458 <can_send+0x154>
   133d0:	ldr	r0, [r6, #228]	; 0xe4
   133d4:	ldr	r1, [r5, #48]	; 0x30
   133d8:	cmp	r1, r0
   133dc:	bne	13410 <can_send+0x10c>
   133e0:	ldrb	r0, [r5, #44]	; 0x2c
   133e4:	tst	r0, #24
   133e8:	movne	r0, #0
   133ec:	strne	r0, [sp, #24]
   133f0:	b	13458 <can_send+0x154>
   133f4:	ldr	r0, [r6, #12]
   133f8:	and	r0, r0, #36	; 0x24
   133fc:	clz	r0, r0
   13400:	lsr	r0, r0, #5
   13404:	str	r0, [sp, #24]
   13408:	sub	sp, fp, #16
   1340c:	pop	{r4, r5, r6, r7, fp, pc}
   13410:	mov	r7, #0
   13414:	str	r7, [sp]
   13418:	mov	r0, r6
   1341c:	mov	r1, r4
   13420:	mov	r2, r5
   13424:	mov	r3, #0
   13428:	bl	e240 <is_banned@plt>
   1342c:	cmp	r0, #268435456	; 0x10000000
   13430:	bne	1343c <can_send+0x138>
   13434:	str	r7, [sp, #24]
   13438:	b	13458 <can_send+0x154>
   1343c:	mov	r0, r6
   13440:	mov	r1, r4
   13444:	mov	r2, r5
   13448:	mov	r3, #0
   1344c:	bl	e354 <is_quieted@plt>
   13450:	cmp	r0, #268435456	; 0x10000000
   13454:	streq	r7, [sp, #24]
   13458:	ldrb	r0, [r5, #44]	; 0x2c
   1345c:	tst	r0, #3
   13460:	movne	r0, #2
   13464:	strne	r0, [sp, #24]
   13468:	str	r4, [sp, #8]
   1346c:	ldr	r0, [r5, #36]	; 0x24
   13470:	str	r5, [sp, #16]
   13474:	mov	r1, #0
   13478:	str	r1, [sp, #20]
   1347c:	str	r0, [sp, #12]
   13480:	ldr	r0, [sp, #24]
   13484:	clz	r0, r0
   13488:	lsr	r0, r0, #5
   1348c:	str	r0, [sp, #28]
   13490:	ldr	r0, [pc, #20]	; 134ac <can_send+0x1a8>
   13494:	ldr	r0, [pc, r0]
   13498:	add	r1, sp, #8
   1349c:	bl	e654 <call_hook@plt>
   134a0:	ldr	r0, [sp, #24]
   134a4:	sub	sp, fp, #16
   134a8:	pop	{r4, r5, r6, r7, fp, pc}
   134ac:	.word	0x0004e480

000134b0 <flood_attack_channel>:
   134b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   134b4:	add	fp, sp, #24
   134b8:	sub	sp, sp, #16
   134bc:	mov	r8, r0
   134c0:	ldr	r7, [pc, #352]	; 13628 <flood_attack_channel+0x178>
   134c4:	ldr	r7, [pc, r7]
   134c8:	ldr	r0, [r7, #8]
   134cc:	mov	r6, #0
   134d0:	cmp	r0, #0
   134d4:	beq	135d8 <flood_attack_channel+0x128>
   134d8:	mov	r4, r1
   134dc:	ldrb	r0, [r1, #65]	; 0x41
   134e0:	tst	r0, #32
   134e4:	beq	135d8 <flood_attack_channel+0x128>
   134e8:	ldrh	r0, [r4, #80]	; 0x50
   134ec:	cmp	r0, #64	; 0x40
   134f0:	bne	135d8 <flood_attack_channel+0x128>
   134f4:	mov	r5, r2
   134f8:	ldr	r0, [r2, #208]	; 0xd0
   134fc:	add	r9, r0, #1
   13500:	bl	d07c <rb_current_time@plt>
   13504:	cmp	r9, r0
   13508:	bge	13540 <flood_attack_channel+0x90>
   1350c:	bl	d07c <rb_current_time@plt>
   13510:	ldr	r1, [r5, #208]	; 0xd0
   13514:	ldr	r2, [r5, #212]	; 0xd4
   13518:	sub	r0, r1, r0
   1351c:	add	r0, r0, r2
   13520:	str	r0, [r5, #212]	; 0xd4
   13524:	bl	d07c <rb_current_time@plt>
   13528:	str	r0, [r5, #208]	; 0xd0
   1352c:	ldr	r0, [r5, #212]	; 0xd4
   13530:	cmp	r0, #0
   13534:	movle	r0, #0
   13538:	strle	r0, [r5, #212]	; 0xd4
   1353c:	strle	r0, [r5, #216]	; 0xd8
   13540:	ldr	r0, [r5, #212]	; 0xd4
   13544:	ldr	r1, [r7, #8]
   13548:	cmp	r0, r1
   1354c:	bge	1355c <flood_attack_channel+0xac>
   13550:	ldr	r1, [r5, #216]	; 0xd8
   13554:	cmp	r1, #0
   13558:	beq	1361c <flood_attack_channel+0x16c>
   1355c:	add	r6, r4, #64	; 0x40
   13560:	ldr	r0, [r5, #216]	; 0xd8
   13564:	cmp	r0, #0
   13568:	bne	135c4 <flood_attack_channel+0x114>
   1356c:	ldr	r0, [r5, #236]	; 0xec
   13570:	ldrb	r1, [r0]
   13574:	ldr	r2, [r4, #32]
   13578:	add	r2, r2, #88	; 0x58
   1357c:	add	r3, r4, #227	; 0xe3
   13580:	add	r7, r4, #152	; 0x98
   13584:	str	r7, [sp]
   13588:	str	r3, [sp, #4]
   1358c:	str	r2, [sp, #8]
   13590:	str	r0, [sp, #12]
   13594:	subs	r1, r1, #38	; 0x26
   13598:	movwne	r1, #256	; 0x100
   1359c:	add	r3, r4, #88	; 0x58
   135a0:	ldr	r2, [pc, #132]	; 1362c <flood_attack_channel+0x17c>
   135a4:	add	r2, pc, r2
   135a8:	mov	r0, #2
   135ac:	bl	d640 <sendto_realops_snomask@plt>
   135b0:	mov	r0, #1
   135b4:	str	r0, [r5, #216]	; 0xd8
   135b8:	ldr	r0, [r5, #212]	; 0xd4
   135bc:	add	r0, r0, #2
   135c0:	str	r0, [r5, #212]	; 0xd4
   135c4:	ldrb	r0, [r6, #1]
   135c8:	mov	r6, #1
   135cc:	tst	r0, #32
   135d0:	cmpne	r8, #1
   135d4:	bne	135e4 <flood_attack_channel+0x134>
   135d8:	mov	r0, r6
   135dc:	sub	sp, fp, #24
   135e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   135e4:	ldrh	r0, [r4, #80]	; 0x50
   135e8:	cmp	r0, #64	; 0x40
   135ec:	bne	135d8 <flood_attack_channel+0x128>
   135f0:	ldr	r0, [r5, #236]	; 0xec
   135f4:	str	r0, [sp]
   135f8:	add	r3, r4, #88	; 0x58
   135fc:	ldr	r0, [pc, #44]	; 13630 <flood_attack_channel+0x180>
   13600:	ldr	r0, [pc, r0]
   13604:	add	r2, r0, #88	; 0x58
   13608:	ldr	r1, [pc, #36]	; 13634 <flood_attack_channel+0x184>
   1360c:	add	r1, pc, r1
   13610:	mov	r0, r4
   13614:	bl	d1e4 <sendto_one@plt>
   13618:	b	135d8 <flood_attack_channel+0x128>
   1361c:	add	r0, r0, #1
   13620:	str	r0, [r5, #212]	; 0xd4
   13624:	b	135d8 <flood_attack_channel+0x128>
   13628:	.word	0x00047394
   1362c:	.word	0x0002d449
   13630:	.word	0x00047558
   13634:	.word	0x0002d40d

00013638 <find_bannickchange_channel>:
   13638:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1363c:	add	fp, sp, #24
   13640:	sub	sp, sp, #560	; 0x230
   13644:	mov	r4, r0
   13648:	ldrb	r0, [r0, #65]	; 0x41
   1364c:	mov	r5, #0
   13650:	tst	r0, #32
   13654:	beq	1370c <find_bannickchange_channel+0xd4>
   13658:	ldrh	r0, [r4, #80]	; 0x50
   1365c:	cmp	r0, #64	; 0x40
   13660:	bne	1370c <find_bannickchange_channel+0xd4>
   13664:	add	r1, sp, #8
   13668:	mov	r0, r4
   1366c:	bl	e018 <matchset_for_client@plt>
   13670:	ldr	r0, [r4, #24]
   13674:	ldr	r6, [r0]
   13678:	cmp	r6, #0
   1367c:	beq	1370c <find_bannickchange_channel+0xd4>
   13680:	mov	r9, #0
   13684:	add	r8, sp, #8
   13688:	ldr	r7, [r6]
   1368c:	ldr	r5, [r7, #36]	; 0x24
   13690:	cmp	r7, #0
   13694:	ldrbne	r0, [r7, #44]	; 0x2c
   13698:	tstne	r0, #3
   1369c:	bne	136fc <find_bannickchange_channel+0xc4>
   136a0:	ldr	r0, [r5, #228]	; 0xe4
   136a4:	ldr	r1, [r7, #48]	; 0x30
   136a8:	cmp	r1, r0
   136ac:	bne	136c0 <find_bannickchange_channel+0x88>
   136b0:	ldrb	r0, [r7, #44]	; 0x2c
   136b4:	tst	r0, #24
   136b8:	beq	136fc <find_bannickchange_channel+0xc4>
   136bc:	b	1370c <find_bannickchange_channel+0xd4>
   136c0:	str	r9, [sp]
   136c4:	mov	r0, r5
   136c8:	mov	r1, r4
   136cc:	mov	r2, r7
   136d0:	mov	r3, r8
   136d4:	bl	e240 <is_banned@plt>
   136d8:	cmp	r0, #268435456	; 0x10000000
   136dc:	beq	1370c <find_bannickchange_channel+0xd4>
   136e0:	mov	r0, r5
   136e4:	mov	r1, r4
   136e8:	mov	r2, r7
   136ec:	mov	r3, r8
   136f0:	bl	e354 <is_quieted@plt>
   136f4:	cmp	r0, #268435456	; 0x10000000
   136f8:	beq	1370c <find_bannickchange_channel+0xd4>
   136fc:	ldr	r6, [r6, #8]
   13700:	cmp	r6, #0
   13704:	bne	13688 <find_bannickchange_channel+0x50>
   13708:	mov	r5, #0
   1370c:	mov	r0, r5
   13710:	sub	sp, fp, #24
   13714:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013718 <check_spambot_warning>:
   13718:	push	{r4, r5, r6, sl, fp, lr}
   1371c:	add	fp, sp, #16
   13720:	sub	sp, sp, #16
   13724:	mov	r5, r1
   13728:	mov	r4, r0
   1372c:	ldr	r6, [pc, #284]	; 13850 <check_spambot_warning+0x138>
   13730:	ldr	r6, [pc, r6]
   13734:	ldr	r1, [r6, #16]
   13738:	cmp	r1, #0
   1373c:	beq	13750 <check_spambot_warning+0x38>
   13740:	ldr	r0, [r4, #432]	; 0x1b0
   13744:	ldr	r2, [r0, #32]
   13748:	cmp	r2, r1
   1374c:	bge	137bc <check_spambot_warning+0xa4>
   13750:	bl	d07c <rb_current_time@plt>
   13754:	ldr	r1, [r4, #432]	; 0x1b0
   13758:	ldr	r2, [r1, #28]
   1375c:	sub	r0, r0, r2
   13760:	cmp	r0, #121	; 0x79
   13764:	blt	1377c <check_spambot_warning+0x64>
   13768:	cmp	r5, #0
   1376c:	beq	1381c <check_spambot_warning+0x104>
   13770:	bl	d07c <rb_current_time@plt>
   13774:	ldr	r1, [r4, #432]	; 0x1b0
   13778:	b	137b0 <check_spambot_warning+0x98>
   1377c:	bl	d07c <rb_current_time@plt>
   13780:	ldr	r1, [r4, #432]	; 0x1b0
   13784:	ldr	r2, [r1, #24]
   13788:	sub	r0, r0, r2
   1378c:	ldr	r2, [r6, #20]
   13790:	cmp	r0, r2
   13794:	ldrlt	r0, [r1, #32]
   13798:	addlt	r0, r0, #1
   1379c:	strlt	r0, [r1, #32]
   137a0:	bl	d07c <rb_current_time@plt>
   137a4:	ldr	r1, [r4, #432]	; 0x1b0
   137a8:	cmp	r5, #0
   137ac:	beq	13844 <check_spambot_warning+0x12c>
   137b0:	str	r0, [r1, #24]
   137b4:	sub	sp, fp, #16
   137b8:	pop	{r4, r5, r6, sl, fp, pc}
   137bc:	ldr	r2, [r0, #36]	; 0x24
   137c0:	mov	r1, #0
   137c4:	cmp	r2, #0
   137c8:	subgt	r1, r2, #1
   137cc:	str	r1, [r0, #36]	; 0x24
   137d0:	cmp	r5, #0
   137d4:	beq	13848 <check_spambot_warning+0x130>
   137d8:	cmp	r1, #0
   137dc:	bne	13848 <check_spambot_warning+0x130>
   137e0:	add	r0, r4, #227	; 0xe3
   137e4:	add	r1, r4, #152	; 0x98
   137e8:	str	r1, [sp]
   137ec:	stmib	sp, {r0, r5}
   137f0:	add	r3, r4, #88	; 0x58
   137f4:	ldr	r2, [pc, #88]	; 13854 <check_spambot_warning+0x13c>
   137f8:	add	r2, pc, r2
   137fc:	mov	r0, #2
   13800:	mov	r1, #256	; 0x100
   13804:	bl	d640 <sendto_realops_snomask@plt>
   13808:	ldr	r0, [r4, #432]	; 0x1b0
   1380c:	mov	r1, #5
   13810:	str	r1, [r0, #36]	; 0x24
   13814:	sub	sp, fp, #16
   13818:	pop	{r4, r5, r6, sl, fp, pc}
   1381c:	movw	r2, #34953	; 0x8889
   13820:	movt	r2, #34952	; 0x8888
   13824:	umull	r0, r2, r0, r2
   13828:	lsr	r0, r2, #6
   1382c:	ldr	r2, [r1, #32]
   13830:	subs	r0, r2, r0
   13834:	movwlt	r0, #0
   13838:	str	r0, [r1, #32]
   1383c:	bl	d07c <rb_current_time@plt>
   13840:	ldr	r1, [r4, #432]	; 0x1b0
   13844:	str	r0, [r1, #28]
   13848:	sub	sp, fp, #16
   1384c:	pop	{r4, r5, r6, sl, fp, pc}
   13850:	.word	0x00047128
   13854:	.word	0x0002d25c

00013858 <check_splitmode>:
   13858:	push	{r4, r5, fp, lr}
   1385c:	add	fp, sp, #8
   13860:	ldr	r0, [pc, #284]	; 13984 <check_splitmode+0x12c>
   13864:	ldr	r0, [pc, r0]
   13868:	ldr	r0, [r0]
   1386c:	cmp	r0, #0
   13870:	ldrne	r0, [pc, #272]	; 13988 <check_splitmode+0x130>
   13874:	ldrne	r0, [pc, r0]
   13878:	ldrne	r1, [r0, #40]	; 0x28
   1387c:	ldrne	r0, [r0, #44]	; 0x2c
   13880:	orrsne	r0, r1, r0
   13884:	bne	1388c <check_splitmode+0x34>
   13888:	pop	{r4, r5, fp, pc}
   1388c:	ldr	r0, [pc, #248]	; 1398c <check_splitmode+0x134>
   13890:	ldr	r0, [pc, r0]
   13894:	ldr	r1, [r0]
   13898:	ldr	r0, [pc, #240]	; 13990 <check_splitmode+0x138>
   1389c:	ldr	r0, [pc, r0]
   138a0:	ldr	r2, [r0]
   138a4:	ldr	r0, [pc, #232]	; 13994 <check_splitmode+0x13c>
   138a8:	ldr	r0, [pc, r0]
   138ac:	ldr	r3, [r0]
   138b0:	cmp	r3, #0
   138b4:	beq	13914 <check_splitmode+0xbc>
   138b8:	cmp	r2, r1
   138bc:	blt	13888 <check_splitmode+0x30>
   138c0:	ldr	r1, [pc, #232]	; 139b0 <check_splitmode+0x158>
   138c4:	ldr	r1, [pc, r1]
   138c8:	ldr	r1, [r1]
   138cc:	ldr	r2, [pc, #224]	; 139b4 <check_splitmode+0x15c>
   138d0:	ldr	r2, [pc, r2]
   138d4:	ldr	r2, [r2, #4]
   138d8:	cmp	r2, r1
   138dc:	poplt	{r4, r5, fp, pc}
   138e0:	mov	r4, #0
   138e4:	str	r4, [r0]
   138e8:	ldr	r2, [pc, #200]	; 139b8 <check_splitmode+0x160>
   138ec:	add	r2, pc, r2
   138f0:	mov	r0, #256	; 0x100
   138f4:	mov	r1, #0
   138f8:	bl	d640 <sendto_realops_snomask@plt>
   138fc:	ldr	r5, [pc, #184]	; 139bc <check_splitmode+0x164>
   13900:	ldr	r5, [pc, r5]
   13904:	ldr	r0, [r5]
   13908:	bl	d28c <rb_event_delete@plt>
   1390c:	str	r4, [r5]
   13910:	pop	{r4, r5, fp, pc}
   13914:	cmp	r2, r1
   13918:	blt	1393c <check_splitmode+0xe4>
   1391c:	ldr	r1, [pc, #116]	; 13998 <check_splitmode+0x140>
   13920:	ldr	r1, [pc, r1]
   13924:	ldr	r1, [r1]
   13928:	ldr	r2, [pc, #108]	; 1399c <check_splitmode+0x144>
   1392c:	ldr	r2, [pc, r2]
   13930:	ldr	r2, [r2, #4]
   13934:	cmp	r2, r1
   13938:	bge	13888 <check_splitmode+0x30>
   1393c:	mov	r1, #1
   13940:	str	r1, [r0]
   13944:	ldr	r2, [pc, #84]	; 139a0 <check_splitmode+0x148>
   13948:	add	r2, pc, r2
   1394c:	mov	r0, #256	; 0x100
   13950:	mov	r1, #0
   13954:	bl	d640 <sendto_realops_snomask@plt>
   13958:	ldr	r1, [pc, #68]	; 139a4 <check_splitmode+0x14c>
   1395c:	ldr	r1, [pc, r1]
   13960:	ldr	r0, [pc, #64]	; 139a8 <check_splitmode+0x150>
   13964:	add	r0, pc, r0
   13968:	mov	r2, #0
   1396c:	mov	r3, #2
   13970:	bl	d220 <rb_event_addish@plt>
   13974:	ldr	r1, [pc, #48]	; 139ac <check_splitmode+0x154>
   13978:	ldr	r1, [pc, r1]
   1397c:	str	r0, [r1]
   13980:	pop	{r4, r5, fp, pc}
   13984:	.word	0x00047190
   13988:	.word	0x000472a4
   1398c:	.word	0x00047170
   13990:	.word	0x00047280
   13994:	.word	0x000472b4
   13998:	.word	0x000470f0
   1399c:	.word	0x00046ff4
   139a0:	.word	0x0002d144
   139a4:	.word	0x000471dc
   139a8:	.word	0x0002d14c
   139ac:	.word	0x00046f20
   139b0:	.word	0x0004714c
   139b4:	.word	0x00047050
   139b8:	.word	0x0002d1d4
   139bc:	.word	0x00046f98

000139c0 <set_channel_topic>:
   139c0:	push	{r4, r5, r6, r7, fp, lr}
   139c4:	add	fp, sp, #16
   139c8:	mov	r7, r1
   139cc:	mov	r5, r0
   139d0:	ldr	r0, [r0, #108]	; 0x6c
   139d4:	ldrb	r1, [r1]
   139d8:	cmp	r1, #0
   139dc:	beq	13a20 <set_channel_topic+0x60>
   139e0:	mov	r4, r3
   139e4:	mov	r6, r2
   139e8:	cmp	r0, #0
   139ec:	bne	139f8 <set_channel_topic+0x38>
   139f0:	mov	r0, r5
   139f4:	bl	13a38 <allocate_topic>
   139f8:	ldr	r0, [r5, #108]	; 0x6c
   139fc:	mov	r1, r7
   13a00:	movw	r2, #391	; 0x187
   13a04:	bl	e510 <rb_strlcpy@plt>
   13a08:	ldr	r0, [r5, #112]	; 0x70
   13a0c:	mov	r1, r6
   13a10:	mov	r2, #141	; 0x8d
   13a14:	bl	e510 <rb_strlcpy@plt>
   13a18:	str	r4, [r5, #116]	; 0x74
   13a1c:	pop	{r4, r5, r6, r7, fp, pc}
   13a20:	mov	r4, #0
   13a24:	cmp	r0, #0
   13a28:	movne	r0, r5
   13a2c:	blne	12a38 <free_topic>
   13a30:	str	r4, [r5, #116]	; 0x74
   13a34:	pop	{r4, r5, r6, r7, fp, pc}

00013a38 <allocate_topic>:
   13a38:	cmp	r0, #0
   13a3c:	bxeq	lr
   13a40:	push	{r4, sl, fp, lr}
   13a44:	add	fp, sp, #8
   13a48:	mov	r4, r0
   13a4c:	ldr	r0, [pc, #44]	; 13a80 <allocate_topic+0x48>
   13a50:	ldr	r0, [pc, r0]
   13a54:	bl	de20 <rb_bh_alloc@plt>
   13a58:	movw	r1, #391	; 0x187
   13a5c:	add	r1, r0, r1
   13a60:	str	r0, [r4, #108]	; 0x6c
   13a64:	str	r1, [r4, #112]	; 0x70
   13a68:	mov	r1, #0
   13a6c:	strb	r1, [r0]
   13a70:	ldr	r0, [r4, #112]	; 0x70
   13a74:	strb	r1, [r0]
   13a78:	pop	{r4, sl, fp, lr}
   13a7c:	bx	lr
   13a80:	.word	0x0004deb8

00013a84 <channel_modes>:
   13a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a88:	add	fp, sp, #28
   13a8c:	sub	sp, sp, #4
   13a90:	sub	sp, sp, #1024	; 0x400
   13a94:	mov	sl, r1
   13a98:	mov	r9, r0
   13a9c:	mov	r7, #0
   13aa0:	strb	r7, [sp]
   13aa4:	mov	r0, #43	; 0x2b
   13aa8:	strb	r0, [sp, #512]	; 0x200
   13aac:	add	r0, sp, #512	; 0x200
   13ab0:	add	r6, r0, #1
   13ab4:	ldr	r4, [pc, #604]	; 13d18 <channel_modes+0x294>
   13ab8:	ldr	r4, [pc, r4]
   13abc:	ldr	r5, [pc, #600]	; 13d1c <channel_modes+0x298>
   13ac0:	ldr	r5, [pc, r5]
   13ac4:	ldr	r8, [pc, #596]	; 13d20 <channel_modes+0x29c>
   13ac8:	ldr	r8, [pc, r8]
   13acc:	b	13af4 <channel_modes+0x70>
   13ad0:	ldr	r1, [pc, #588]	; 13d24 <channel_modes+0x2a0>
   13ad4:	add	r1, pc, r1
   13ad8:	bl	e594 <privilegeset_in_set@plt>
   13adc:	cmp	r0, #0
   13ae0:	beq	13b28 <channel_modes+0xa4>
   13ae4:	ldrh	r0, [sl, #80]	; 0x50
   13ae8:	cmp	r0, #64	; 0x40
   13aec:	beq	13b00 <channel_modes+0x7c>
   13af0:	b	13b28 <channel_modes+0xa4>
   13af4:	ldr	r0, [r4, r7, lsl #3]
   13af8:	cmp	r0, r5
   13afc:	beq	13b14 <channel_modes+0x90>
   13b00:	ldr	r0, [r8, r7, lsl #2]
   13b04:	ldr	r1, [r9, #12]
   13b08:	tst	r0, r1
   13b0c:	strbne	r7, [r6], #1
   13b10:	b	13b28 <channel_modes+0xa4>
   13b14:	ldr	r0, [sl, #24]
   13b18:	cmp	r0, #0
   13b1c:	ldrne	r0, [r0, #36]	; 0x24
   13b20:	cmpne	r0, #0
   13b24:	bne	13ad0 <channel_modes+0x4c>
   13b28:	add	r7, r7, #1
   13b2c:	cmp	r7, #256	; 0x100
   13b30:	bne	13af4 <channel_modes+0x70>
   13b34:	ldr	r0, [r9, #16]
   13b38:	mov	r8, #0
   13b3c:	cmp	r0, #0
   13b40:	beq	13b90 <channel_modes+0x10c>
   13b44:	mov	r0, #108	; 0x6c
   13b48:	strb	r0, [r6], #1
   13b4c:	ldrh	r0, [sl, #80]	; 0x50
   13b50:	cmp	r0, #64	; 0x40
   13b54:	bne	13b78 <channel_modes+0xf4>
   13b58:	ldr	r0, [sl, #24]
   13b5c:	cmp	r0, #0
   13b60:	beq	13b90 <channel_modes+0x10c>
   13b64:	mov	r0, r9
   13b68:	mov	r1, sl
   13b6c:	bl	d958 <find_channel_membership@plt>
   13b70:	cmp	r0, #0
   13b74:	beq	13b90 <channel_modes+0x10c>
   13b78:	ldr	r2, [r9, #16]
   13b7c:	mov	r0, sp
   13b80:	ldr	r1, [pc, #416]	; 13d28 <channel_modes+0x2a4>
   13b84:	add	r1, pc, r1
   13b88:	bl	e3a8 <sprintf@plt>
   13b8c:	mov	r8, r0
   13b90:	mov	r4, sp
   13b94:	mov	r7, r9
   13b98:	ldrb	r0, [r7, #20]!
   13b9c:	cmp	r0, #0
   13ba0:	beq	13bf8 <channel_modes+0x174>
   13ba4:	mov	r0, #107	; 0x6b
   13ba8:	strb	r0, [r6], #1
   13bac:	cmp	r8, #0
   13bb0:	bgt	13be0 <channel_modes+0x15c>
   13bb4:	ldrh	r0, [sl, #80]	; 0x50
   13bb8:	cmp	r0, #64	; 0x40
   13bbc:	bne	13be0 <channel_modes+0x15c>
   13bc0:	ldr	r0, [sl, #24]
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bf8 <channel_modes+0x174>
   13bcc:	mov	r0, r9
   13bd0:	mov	r1, sl
   13bd4:	bl	d958 <find_channel_membership@plt>
   13bd8:	cmp	r0, #0
   13bdc:	beq	13bf8 <channel_modes+0x174>
   13be0:	add	r0, r4, r8
   13be4:	ldr	r1, [pc, #320]	; 13d2c <channel_modes+0x2a8>
   13be8:	add	r1, pc, r1
   13bec:	mov	r2, r7
   13bf0:	bl	e3a8 <sprintf@plt>
   13bf4:	add	r8, r0, r8
   13bf8:	ldr	r0, [r9, #44]	; 0x2c
   13bfc:	cmp	r0, #0
   13c00:	beq	13c5c <channel_modes+0x1d8>
   13c04:	mov	r0, #106	; 0x6a
   13c08:	strb	r0, [r6], #1
   13c0c:	cmp	r8, #0
   13c10:	bgt	13c40 <channel_modes+0x1bc>
   13c14:	ldrh	r0, [sl, #80]	; 0x50
   13c18:	cmp	r0, #64	; 0x40
   13c1c:	bne	13c40 <channel_modes+0x1bc>
   13c20:	ldr	r0, [sl, #24]
   13c24:	cmp	r0, #0
   13c28:	beq	13c5c <channel_modes+0x1d8>
   13c2c:	mov	r0, r9
   13c30:	mov	r1, sl
   13c34:	bl	d958 <find_channel_membership@plt>
   13c38:	cmp	r0, #0
   13c3c:	beq	13c5c <channel_modes+0x1d8>
   13c40:	add	r0, r4, r8
   13c44:	ldr	r2, [r9, #44]	; 0x2c
   13c48:	ldr	r3, [r9, #48]	; 0x30
   13c4c:	ldr	r1, [pc, #220]	; 13d30 <channel_modes+0x2ac>
   13c50:	add	r1, pc, r1
   13c54:	bl	e3a8 <sprintf@plt>
   13c58:	add	r8, r0, r8
   13c5c:	mov	r7, r9
   13c60:	ldrb	r0, [r7, #52]!	; 0x34
   13c64:	cmp	r0, #0
   13c68:	beq	13cdc <channel_modes+0x258>
   13c6c:	ldr	r0, [pc, #192]	; 13d34 <channel_modes+0x2b0>
   13c70:	ldr	r0, [pc, r0]
   13c74:	ldr	r0, [r0, #8]
   13c78:	cmp	r0, #0
   13c7c:	bne	13c8c <channel_modes+0x208>
   13c80:	ldrh	r0, [sl, #80]	; 0x50
   13c84:	cmp	r0, #64	; 0x40
   13c88:	beq	13cdc <channel_modes+0x258>
   13c8c:	mov	r0, #102	; 0x66
   13c90:	strb	r0, [r6], #1
   13c94:	cmp	r8, #0
   13c98:	bgt	13cc8 <channel_modes+0x244>
   13c9c:	ldrh	r0, [sl, #80]	; 0x50
   13ca0:	cmp	r0, #64	; 0x40
   13ca4:	bne	13cc8 <channel_modes+0x244>
   13ca8:	ldr	r0, [sl, #24]
   13cac:	cmp	r0, #0
   13cb0:	beq	13cdc <channel_modes+0x258>
   13cb4:	mov	r0, r9
   13cb8:	mov	r1, sl
   13cbc:	bl	d958 <find_channel_membership@plt>
   13cc0:	cmp	r0, #0
   13cc4:	beq	13cdc <channel_modes+0x258>
   13cc8:	add	r0, r4, r8
   13ccc:	ldr	r1, [pc, #100]	; 13d38 <channel_modes+0x2b4>
   13cd0:	add	r1, pc, r1
   13cd4:	mov	r2, r7
   13cd8:	bl	e3a8 <sprintf@plt>
   13cdc:	mov	r0, #0
   13ce0:	strb	r0, [r6]
   13ce4:	ldr	r4, [pc, #80]	; 13d3c <channel_modes+0x2b8>
   13ce8:	add	r4, pc, r4
   13cec:	add	r1, sp, #512	; 0x200
   13cf0:	mov	r0, r4
   13cf4:	mov	r2, #512	; 0x200
   13cf8:	bl	e510 <rb_strlcpy@plt>
   13cfc:	mov	r1, sp
   13d00:	mov	r0, r4
   13d04:	mov	r2, #512	; 0x200
   13d08:	bl	e7d4 <rb_strlcat@plt>
   13d0c:	mov	r0, r4
   13d10:	sub	sp, fp, #28
   13d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d18:	.word	0x00046fdc
   13d1c:	.word	0x00046ec8
   13d20:	.word	0x0004701c
   13d24:	.word	0x0002d015
   13d28:	.word	0x0002cd4f
   13d2c:	.word	0x00033a7c
   13d30:	.word	0x0002cc1b
   13d34:	.word	0x00046ea8
   13d38:	.word	0x00033994
   13d3c:	.word	0x0004dc33

00013d40 <send_cap_mode_changes>:
   13d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d44:	add	fp, sp, #28
   13d48:	sub	sp, sp, #36	; 0x24
   13d4c:	mov	r4, r3
   13d50:	mov	r7, r1
   13d54:	str	r0, [sp, #12]
   13d58:	ldr	r5, [pc, #608]	; 13fc0 <send_cap_mode_changes+0x280>
   13d5c:	add	r5, pc, r5
   13d60:	mov	r0, #0
   13d64:	strb	r0, [r5]
   13d68:	ldrb	r0, [r7, #396]!	; 0x18c
   13d6c:	ldr	r3, [r2, #232]	; 0xe8
   13d70:	str	r2, [sp, #16]
   13d74:	ldr	r1, [r2, #236]	; 0xec
   13d78:	str	r1, [sp]
   13d7c:	cmp	r0, #0
   13d80:	subeq	r7, r7, #308	; 0x134
   13d84:	ldr	r0, [pc, #568]	; 13fc4 <send_cap_mode_changes+0x284>
   13d88:	add	r0, pc, r0
   13d8c:	ldr	r1, [pc, #564]	; 13fc8 <send_cap_mode_changes+0x288>
   13d90:	add	r1, pc, r1
   13d94:	mov	r2, r7
   13d98:	bl	e3a8 <sprintf@plt>
   13d9c:	ldr	r9, [fp, #8]
   13da0:	cmp	r9, #1
   13da4:	blt	13fb8 <send_cap_mode_changes+0x278>
   13da8:	add	sl, r4, #12
   13dac:	mov	r7, #0
   13db0:	str	r5, [sp, #24]
   13db4:	str	r0, [sp, #20]
   13db8:	mov	r5, r0
   13dbc:	mov	r8, #0
   13dc0:	mov	r0, #0
   13dc4:	str	r0, [sp, #32]
   13dc8:	mov	r0, #0
   13dcc:	str	r0, [sp, #28]
   13dd0:	ldrb	r0, [sl, #-12]
   13dd4:	cmp	r0, #0
   13dd8:	beq	13f40 <send_cap_mode_changes+0x200>
   13ddc:	ldr	r4, [sl, #-4]
   13de0:	cmp	r4, #0
   13de4:	ldrbne	r0, [r4]
   13de8:	cmpne	r0, #0
   13dec:	bne	13dfc <send_cap_mode_changes+0xbc>
   13df0:	ldr	r4, [sl, #-8]
   13df4:	cmp	r4, #0
   13df8:	beq	13ea4 <send_cap_mode_changes+0x164>
   13dfc:	mov	r0, r4
   13e00:	bl	dc94 <strlen@plt>
   13e04:	cmp	r0, #195	; 0xc3
   13e08:	bgt	13f40 <send_cap_mode_changes+0x200>
   13e0c:	cmp	r8, #10
   13e10:	beq	13e30 <send_cap_mode_changes+0xf0>
   13e14:	ldr	r1, [sp, #28]
   13e18:	add	r1, r5, r1
   13e1c:	add	r1, r1, r0
   13e20:	mov	r0, #1
   13e24:	movw	r2, #506	; 0x1fa
   13e28:	cmp	r1, r2
   13e2c:	blt	13eac <send_cap_mode_changes+0x16c>
   13e30:	ldr	r0, [sp, #32]
   13e34:	cmp	r0, #0
   13e38:	ldr	r5, [pc, #396]	; 13fcc <send_cap_mode_changes+0x28c>
   13e3c:	add	r5, pc, r5
   13e40:	beq	13e70 <send_cap_mode_changes+0x130>
   13e44:	ldr	r0, [pc, #388]	; 13fd0 <send_cap_mode_changes+0x290>
   13e48:	add	r0, pc, r0
   13e4c:	str	r0, [sp]
   13e50:	ldr	r0, [pc, #380]	; 13fd4 <send_cap_mode_changes+0x294>
   13e54:	add	r0, pc, r0
   13e58:	stmib	sp, {r0, r5}
   13e5c:	ldr	r0, [sp, #12]
   13e60:	ldr	r1, [sp, #16]
   13e64:	mov	r2, #0
   13e68:	mov	r3, #0
   13e6c:	bl	d9a0 <sendto_server@plt>
   13e70:	mov	r1, #0
   13e74:	mov	r0, #0
   13e78:	str	r0, [sp, #28]
   13e7c:	strb	r1, [r5]
   13e80:	mov	r0, #1
   13e84:	mov	r1, #0
   13e88:	str	r1, [sp, #32]
   13e8c:	mov	r8, #0
   13e90:	mov	r1, r5
   13e94:	ldr	r5, [sp, #20]
   13e98:	str	r1, [sp, #24]
   13e9c:	mov	r7, #0
   13ea0:	b	13eac <send_cap_mode_changes+0x16c>
   13ea4:	mov	r4, #0
   13ea8:	mov	r0, #0
   13eac:	ldr	r1, [sl]
   13eb0:	cmp	r7, r1
   13eb4:	bne	13ec8 <send_cap_mode_changes+0x188>
   13eb8:	mov	r1, r5
   13ebc:	ldr	r3, [pc, #276]	; 13fd8 <send_cap_mode_changes+0x298>
   13ec0:	add	r3, pc, r3
   13ec4:	b	13ee8 <send_cap_mode_changes+0x1a8>
   13ec8:	cmp	r1, #1
   13ecc:	mov	r1, #45	; 0x2d
   13ed0:	movweq	r1, #43	; 0x2b
   13ed4:	ldr	r3, [pc, #256]	; 13fdc <send_cap_mode_changes+0x29c>
   13ed8:	add	r3, pc, r3
   13edc:	strb	r1, [r3, r5]
   13ee0:	add	r1, r5, #1
   13ee4:	ldr	r7, [sl]
   13ee8:	ldrb	r2, [sl, #-12]
   13eec:	add	r5, r1, #1
   13ef0:	mov	r6, #0
   13ef4:	strb	r6, [r3, r5]
   13ef8:	strb	r2, [r3, r1]
   13efc:	ldr	r1, [sp, #32]
   13f00:	add	r1, r1, #1
   13f04:	str	r1, [sp, #32]
   13f08:	cmp	r0, #0
   13f0c:	beq	13f40 <send_cap_mode_changes+0x200>
   13f10:	ldr	r6, [sp, #24]
   13f14:	mov	r0, r6
   13f18:	ldr	r1, [pc, #192]	; 13fe0 <send_cap_mode_changes+0x2a0>
   13f1c:	add	r1, pc, r1
   13f20:	mov	r2, r4
   13f24:	bl	e3a8 <sprintf@plt>
   13f28:	ldr	r1, [sp, #28]
   13f2c:	add	r1, r0, r1
   13f30:	str	r1, [sp, #28]
   13f34:	add	r6, r6, r0
   13f38:	str	r6, [sp, #24]
   13f3c:	add	r8, r8, #1
   13f40:	add	sl, sl, #20
   13f44:	subs	r9, r9, #1
   13f48:	bne	13dd0 <send_cap_mode_changes+0x90>
   13f4c:	ldr	r0, [sp, #28]
   13f50:	cmp	r0, #0
   13f54:	beq	13f74 <send_cap_mode_changes+0x234>
   13f58:	sub	r0, r0, #1
   13f5c:	ldr	r1, [pc, #128]	; 13fe4 <send_cap_mode_changes+0x2a4>
   13f60:	add	r1, pc, r1
   13f64:	ldrb	r2, [r1, r0]
   13f68:	cmp	r2, #32
   13f6c:	moveq	r2, #0
   13f70:	strbeq	r2, [r1, r0]
   13f74:	ldr	r0, [sp, #32]
   13f78:	cmp	r0, #0
   13f7c:	ldr	r1, [pc, #100]	; 13fe8 <send_cap_mode_changes+0x2a8>
   13f80:	add	r1, pc, r1
   13f84:	beq	13fb8 <send_cap_mode_changes+0x278>
   13f88:	ldr	r0, [pc, #92]	; 13fec <send_cap_mode_changes+0x2ac>
   13f8c:	add	r0, pc, r0
   13f90:	ldr	r2, [pc, #88]	; 13ff0 <send_cap_mode_changes+0x2b0>
   13f94:	add	r2, pc, r2
   13f98:	str	r2, [sp]
   13f9c:	str	r1, [sp, #4]
   13fa0:	str	r0, [sp, #8]
   13fa4:	ldr	r0, [sp, #12]
   13fa8:	ldr	r1, [sp, #16]
   13fac:	mov	r2, #0
   13fb0:	mov	r3, #0
   13fb4:	bl	d9a0 <sendto_server@plt>
   13fb8:	sub	sp, fp, #28
   13fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fc0:	.word	0x0004dfbf
   13fc4:	.word	0x0004dd93
   13fc8:	.word	0x0002cd67
   13fcc:	.word	0x0004dedf
   13fd0:	.word	0x00031ed0
   13fd4:	.word	0x0004dcc7
   13fd8:	.word	0x0004dc5b
   13fdc:	.word	0x0004dc43
   13fe0:	.word	0x000333cb
   13fe4:	.word	0x0004ddbb
   13fe8:	.word	0x0004db9b
   13fec:	.word	0x0004dd8f
   13ff0:	.word	0x00031d84

00013ff4 <resv_chan_forcepart>:
   13ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff8:	add	fp, sp, #28
   13ffc:	sub	sp, sp, #36	; 0x24
   14000:	str	r2, [sp, #32]
   14004:	str	r1, [sp, #28]
   14008:	mov	r5, r0
   1400c:	ldr	r0, [pc, #316]	; 14150 <resv_chan_forcepart+0x15c>
   14010:	ldr	r0, [pc, r0]
   14014:	ldr	r0, [r0, #68]	; 0x44
   14018:	cmp	r0, #0
   1401c:	beq	14148 <resv_chan_forcepart+0x154>
   14020:	mov	r0, r5
   14024:	bl	d748 <find_channel@plt>
   14028:	str	r0, [sp, #24]
   1402c:	cmp	r0, #0
   14030:	beq	14148 <resv_chan_forcepart+0x154>
   14034:	ldr	r0, [sp, #24]
   14038:	ldr	r4, [r0, #136]	; 0x88
   1403c:	cmp	r4, #0
   14040:	beq	14148 <resv_chan_forcepart+0x154>
   14044:	str	r5, [sp, #20]
   14048:	ldr	r7, [sp, #24]
   1404c:	ldr	r8, [r4]
   14050:	ldr	r4, [r4, #8]
   14054:	ldr	sl, [r8, #40]	; 0x28
   14058:	ldrb	r0, [sl, #66]	; 0x42
   1405c:	tst	r0, #32
   14060:	bne	14140 <resv_chan_forcepart+0x14c>
   14064:	ldr	r0, [pc, #232]	; 14154 <resv_chan_forcepart+0x160>
   14068:	ldr	r0, [pc, r0]
   1406c:	ldr	r2, [r0]
   14070:	ldr	r0, [r7, #236]	; 0xec
   14074:	add	r1, sl, #396	; 0x18c
   14078:	ldr	r3, [pc, #216]	; 14158 <resv_chan_forcepart+0x164>
   1407c:	add	r3, pc, r3
   14080:	str	r3, [sp]
   14084:	str	r1, [sp, #4]
   14088:	str	r0, [sp, #8]
   1408c:	mov	r0, sl
   14090:	mov	r1, r7
   14094:	mov	r3, #0
   14098:	bl	d9a0 <sendto_server@plt>
   1409c:	ldr	r0, [r7, #236]	; 0xec
   140a0:	add	r9, sl, #88	; 0x58
   140a4:	add	r5, sl, #163	; 0xa3
   140a8:	add	r6, sl, #152	; 0x98
   140ac:	str	r9, [sp]
   140b0:	str	r6, [sp, #4]
   140b4:	str	r5, [sp, #8]
   140b8:	str	r0, [sp, #12]
   140bc:	str	r9, [sp, #16]
   140c0:	mov	r0, sl
   140c4:	mov	r1, #0
   140c8:	mov	r2, r7
   140cc:	ldr	r3, [pc, #136]	; 1415c <resv_chan_forcepart+0x168>
   140d0:	add	r3, pc, r3
   140d4:	bl	cf5c <sendto_channel_local@plt>
   140d8:	mov	r0, r8
   140dc:	bl	e2dc <remove_user_from_channel@plt>
   140e0:	str	r6, [sp]
   140e4:	str	r5, [sp, #4]
   140e8:	ldr	r5, [sp, #20]
   140ec:	str	r5, [sp, #8]
   140f0:	ldr	r0, [sp, #28]
   140f4:	str	r0, [sp, #12]
   140f8:	mov	r0, #256	; 0x100
   140fc:	mov	r1, #0
   14100:	ldr	r2, [pc, #88]	; 14160 <resv_chan_forcepart+0x16c>
   14104:	add	r2, pc, r2
   14108:	mov	r3, r9
   1410c:	bl	d640 <sendto_realops_snomask@plt>
   14110:	ldr	r0, [sp, #32]
   14114:	cmp	r0, #1
   14118:	blt	1412c <resv_chan_forcepart+0x138>
   1411c:	mov	r0, sl
   14120:	ldr	r1, [pc, #60]	; 14164 <resv_chan_forcepart+0x170>
   14124:	add	r1, pc, r1
   14128:	b	14138 <resv_chan_forcepart+0x144>
   1412c:	mov	r0, sl
   14130:	ldr	r1, [pc, #48]	; 14168 <resv_chan_forcepart+0x174>
   14134:	add	r1, pc, r1
   14138:	mov	r2, r5
   1413c:	bl	e414 <sendto_one_notice@plt>
   14140:	cmp	r4, #0
   14144:	bne	1404c <resv_chan_forcepart+0x58>
   14148:	sub	sp, fp, #28
   1414c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14150:	.word	0x00046b08
   14154:	.word	0x000468c0
   14158:	.word	0x0002ca8d
   1415c:	.word	0x0002ca45
   14160:	.word	0x0002ca27
   14164:	.word	0x0002ca2d
   14168:	.word	0x0002ca58

0001416c <rb_dlinkFindDelete>:
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	cmp	r1, #0
   14178:	beq	141ec <rb_dlinkFindDelete+0x80>
   1417c:	mov	ip, r0
   14180:	cmp	r0, #0
   14184:	beq	1420c <rb_dlinkFindDelete+0xa0>
   14188:	ldr	r3, [r1]
   1418c:	mov	r0, r3
   14190:	cmp	r3, #0
   14194:	popeq	{fp, pc}
   14198:	ldr	r2, [r0]
   1419c:	ldr	r3, [r0, #8]
   141a0:	cmp	r2, ip
   141a4:	bne	1418c <rb_dlinkFindDelete+0x20>
   141a8:	add	r2, r3, #4
   141ac:	cmp	r3, #0
   141b0:	addeq	r2, r1, #4
   141b4:	ldr	r3, [r0, #4]
   141b8:	str	r3, [r2]
   141bc:	ldmib	r0, {r2, ip}
   141c0:	cmp	r2, #0
   141c4:	mov	r3, r1
   141c8:	addne	r3, r2, #8
   141cc:	str	ip, [r3]
   141d0:	mov	r2, #0
   141d4:	str	r2, [r0, #4]
   141d8:	str	r2, [r0, #8]
   141dc:	ldr	r2, [r1, #8]
   141e0:	sub	r2, r2, #1
   141e4:	str	r2, [r1, #8]
   141e8:	pop	{fp, pc}
   141ec:	ldr	r0, [pc, #56]	; 1422c <rb_dlinkFindDelete+0xc0>
   141f0:	add	r0, pc, r0
   141f4:	ldr	r1, [pc, #52]	; 14230 <rb_dlinkFindDelete+0xc4>
   141f8:	add	r1, pc, r1
   141fc:	ldr	r3, [pc, #48]	; 14234 <rb_dlinkFindDelete+0xc8>
   14200:	add	r3, pc, r3
   14204:	movw	r2, #258	; 0x102
   14208:	bl	e7e0 <__assert_fail@plt>
   1420c:	ldr	r0, [pc, #36]	; 14238 <rb_dlinkFindDelete+0xcc>
   14210:	add	r0, pc, r0
   14214:	ldr	r1, [pc, #32]	; 1423c <rb_dlinkFindDelete+0xd0>
   14218:	add	r1, pc, r1
   1421c:	ldr	r3, [pc, #28]	; 14240 <rb_dlinkFindDelete+0xd4>
   14220:	add	r3, pc, r3
   14224:	movw	r2, #259	; 0x103
   14228:	bl	e7e0 <__assert_fail@plt>
   1422c:	.word	0x00031c55
   14230:	.word	0x0002c3be
   14234:	.word	0x0002c9f6
   14238:	.word	0x0002c401
   1423c:	.word	0x0002c39e
   14240:	.word	0x0002c9d6

00014244 <construct_cflags_strings>:
   14244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14248:	add	fp, sp, #28
   1424c:	ldr	r0, [pc, #296]	; 1437c <construct_cflags_strings+0x138>
   14250:	ldr	r0, [pc, r0]
   14254:	mov	r2, #0
   14258:	strb	r2, [r0]
   1425c:	ldr	r1, [pc, #284]	; 14380 <construct_cflags_strings+0x13c>
   14260:	ldr	r1, [pc, r1]
   14264:	strb	r2, [r1]
   14268:	ldr	r3, [pc, #276]	; 14384 <construct_cflags_strings+0x140>
   1426c:	ldr	r3, [pc, r3]
   14270:	ldr	ip, [pc, #272]	; 14388 <construct_cflags_strings+0x144>
   14274:	ldr	ip, [pc, ip]
   14278:	ldr	lr, [pc, #268]	; 1438c <construct_cflags_strings+0x148>
   1427c:	ldr	lr, [pc, lr]
   14280:	ldr	r4, [pc, #264]	; 14390 <construct_cflags_strings+0x14c>
   14284:	ldr	r4, [pc, r4]
   14288:	ldr	r5, [pc, #260]	; 14394 <construct_cflags_strings+0x150>
   1428c:	ldr	r5, [pc, r5]
   14290:	ldr	r7, [pc, #256]	; 14398 <construct_cflags_strings+0x154>
   14294:	ldr	r7, [pc, r7]
   14298:	ldr	r9, [pc, #252]	; 1439c <construct_cflags_strings+0x158>
   1429c:	ldr	r9, [pc, r9]
   142a0:	ldr	sl, [r3, r2, lsl #3]
   142a4:	cmp	sl, ip
   142a8:	mov	r8, #0
   142ac:	beq	1431c <construct_cflags_strings+0xd8>
   142b0:	cmp	sl, r7
   142b4:	mov	r8, #0
   142b8:	beq	1431c <construct_cflags_strings+0xd8>
   142bc:	cmp	sl, r9
   142c0:	mov	r8, #0
   142c4:	beq	1431c <construct_cflags_strings+0xd8>
   142c8:	ldr	r6, [pc, #208]	; 143a0 <construct_cflags_strings+0x15c>
   142cc:	ldr	r6, [pc, r6]
   142d0:	cmp	sl, r6
   142d4:	mov	r8, #0
   142d8:	beq	1431c <construct_cflags_strings+0xd8>
   142dc:	ldr	r6, [pc, #192]	; 143a4 <construct_cflags_strings+0x160>
   142e0:	ldr	r6, [pc, r6]
   142e4:	cmp	sl, r6
   142e8:	mov	r8, #0
   142ec:	beq	1431c <construct_cflags_strings+0xd8>
   142f0:	ldr	r6, [pc, #176]	; 143a8 <construct_cflags_strings+0x164>
   142f4:	ldr	r6, [pc, r6]
   142f8:	cmp	sl, r6
   142fc:	mov	r8, #0
   14300:	beq	1431c <construct_cflags_strings+0xd8>
   14304:	ldr	r6, [pc, #160]	; 143ac <construct_cflags_strings+0x168>
   14308:	ldr	r6, [pc, r6]
   1430c:	cmp	sl, r6
   14310:	mov	r8, #0
   14314:	addne	r6, r3, r2, lsl #3
   14318:	ldrne	r8, [r6, #4]
   1431c:	str	r8, [lr, r2, lsl #2]
   14320:	cmp	r8, #0
   14324:	beq	14350 <construct_cflags_strings+0x10c>
   14328:	cmp	r8, #8192	; 0x2000
   1432c:	cmpne	r8, #4096	; 0x1000
   14330:	bne	1434c <construct_cflags_strings+0x108>
   14334:	ldr	r6, [pc, #116]	; 143b0 <construct_cflags_strings+0x16c>
   14338:	ldr	r6, [pc, r6]
   1433c:	ldr	r6, [r6, #8]
   14340:	cmp	r6, #0
   14344:	strbne	r2, [r1], #1
   14348:	b	14350 <construct_cflags_strings+0x10c>
   1434c:	strb	r2, [r1], #1
   14350:	ldr	r6, [r3, r2, lsl #3]
   14354:	cmp	r6, r4
   14358:	cmpne	r6, r5
   1435c:	strbne	r2, [r0], #1
   14360:	add	r2, r2, #1
   14364:	cmp	r2, #256	; 0x100
   14368:	bne	142a0 <construct_cflags_strings+0x5c>
   1436c:	mov	r2, #0
   14370:	strb	r2, [r1]
   14374:	strb	r2, [r0]
   14378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1437c:	.word	0x0004660c
   14380:	.word	0x00046680
   14384:	.word	0x00046828
   14388:	.word	0x00046838
   1438c:	.word	0x00046868
   14390:	.word	0x00046668
   14394:	.word	0x000467d0
   14398:	.word	0x000468cc
   1439c:	.word	0x00046898
   143a0:	.word	0x000468b4
   143a4:	.word	0x00046790
   143a8:	.word	0x0004685c
   143ac:	.word	0x00046728
   143b0:	.word	0x000467e0

000143b4 <chm_ban>:
   143b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143b8:	add	fp, sp, #28
   143bc:	sub	sp, sp, #236	; 0xec
   143c0:	mov	r7, r1
   143c4:	str	r0, [sp, #32]
   143c8:	ldr	r9, [fp, #28]
   143cc:	ldr	ip, [fp, #24]
   143d0:	ldr	r5, [fp, #20]
   143d4:	ldr	r8, [fp, #16]
   143d8:	ldr	r0, [fp, #12]
   143dc:	ldr	sl, [fp, #8]
   143e0:	cmn	r9, #-536870911	; 0xe0000001
   143e4:	bgt	14428 <chm_ban+0x74>
   143e8:	cmp	r9, #-2147483648	; 0x80000000
   143ec:	beq	144b0 <chm_ban+0xfc>
   143f0:	cmp	r9, #268435456	; 0x10000000
   143f4:	bne	14714 <chm_ban+0x360>
   143f8:	str	r0, [sp, #24]
   143fc:	add	lr, r7, #160	; 0xa0
   14400:	mov	r4, #0
   14404:	ldr	r0, [pc, #1764]	; 14af0 <chm_ban+0x73c>
   14408:	add	r0, pc, r0
   1440c:	str	r0, [sp, #28]
   14410:	ldr	r6, [pc, #1756]	; 14af4 <chm_ban+0x740>
   14414:	add	r6, pc, r6
   14418:	mov	r0, #16
   1441c:	cmp	r5, #0
   14420:	bne	14554 <chm_ban+0x1a0>
   14424:	b	1461c <chm_ban+0x268>
   14428:	cmp	r9, #536870912	; 0x20000000
   1442c:	beq	144e0 <chm_ban+0x12c>
   14430:	cmp	r9, #1073741824	; 0x40000000
   14434:	bne	14714 <chm_ban+0x360>
   14438:	str	r0, [sp, #24]
   1443c:	ldr	r0, [pc, #1716]	; 14af8 <chm_ban+0x744>
   14440:	ldr	r0, [pc, r0]
   14444:	ldr	r0, [r0, #4]
   14448:	cmp	r0, #0
   1444c:	bne	14474 <chm_ban+0xc0>
   14450:	ldr	r1, [sp, #32]
   14454:	ldrb	r1, [r1, #65]	; 0x41
   14458:	tst	r1, #32
   1445c:	beq	14474 <chm_ban+0xc0>
   14460:	cmp	r5, #1
   14464:	ldreq	r1, [sp, #32]
   14468:	ldrheq	r1, [r1, #80]	; 0x50
   1446c:	cmpeq	r1, #64	; 0x40
   14470:	beq	147c8 <chm_ban+0x414>
   14474:	mov	r4, #32
   14478:	cmp	r0, #0
   1447c:	movwne	r4, #2
   14480:	cmn	r5, #1
   14484:	movweq	r4, #2
   14488:	add	lr, r7, #184	; 0xb8
   1448c:	ldr	r0, [pc, #1640]	; 14afc <chm_ban+0x748>
   14490:	add	r0, pc, r0
   14494:	str	r0, [sp, #28]
   14498:	ldr	r6, [pc, #1632]	; 14b00 <chm_ban+0x74c>
   1449c:	add	r6, pc, r6
   144a0:	mov	r0, #256	; 0x100
   144a4:	cmp	r5, #0
   144a8:	bne	14554 <chm_ban+0x1a0>
   144ac:	b	1461c <chm_ban+0x268>
   144b0:	str	r0, [sp, #24]
   144b4:	add	lr, r7, #196	; 0xc4
   144b8:	mov	r4, #0
   144bc:	ldr	r0, [pc, #1616]	; 14b14 <chm_ban+0x760>
   144c0:	add	r0, pc, r0
   144c4:	str	r0, [sp, #28]
   144c8:	ldr	r6, [pc, #1608]	; 14b18 <chm_ban+0x764>
   144cc:	add	r6, pc, r6
   144d0:	mov	r0, #2048	; 0x800
   144d4:	cmp	r5, #0
   144d8:	bne	14554 <chm_ban+0x1a0>
   144dc:	b	1461c <chm_ban+0x268>
   144e0:	str	r0, [sp, #24]
   144e4:	ldr	r0, [pc, #1560]	; 14b04 <chm_ban+0x750>
   144e8:	ldr	r0, [pc, r0]
   144ec:	ldr	r1, [r0]
   144f0:	cmp	r1, #0
   144f4:	bne	1451c <chm_ban+0x168>
   144f8:	ldr	r0, [sp, #32]
   144fc:	ldrb	r0, [r0, #65]	; 0x41
   14500:	tst	r0, #32
   14504:	beq	1451c <chm_ban+0x168>
   14508:	cmp	r5, #1
   1450c:	ldreq	r0, [sp, #32]
   14510:	ldrheq	r0, [r0, #80]	; 0x50
   14514:	cmpeq	r0, #64	; 0x40
   14518:	beq	147d8 <chm_ban+0x424>
   1451c:	mov	r0, #32
   14520:	cmp	r1, #0
   14524:	mov	r4, #32
   14528:	movwne	r4, #2
   1452c:	cmn	r5, #1
   14530:	movweq	r4, #2
   14534:	add	lr, r7, #172	; 0xac
   14538:	ldr	r1, [pc, #1480]	; 14b08 <chm_ban+0x754>
   1453c:	add	r1, pc, r1
   14540:	str	r1, [sp, #28]
   14544:	ldr	r6, [pc, #1472]	; 14b0c <chm_ban+0x758>
   14548:	add	r6, pc, r6
   1454c:	cmp	r5, #0
   14550:	beq	1461c <chm_ban+0x268>
   14554:	ldr	r1, [sl]
   14558:	cmp	r1, r3
   1455c:	bge	1461c <chm_ban+0x268>
   14560:	str	r4, [sp, #20]
   14564:	str	ip, [sp]
   14568:	ldr	r0, [sp, #32]
   1456c:	mov	r1, r7
   14570:	mov	r3, r8
   14574:	str	ip, [sp, #28]
   14578:	mov	r4, lr
   1457c:	mov	r8, r7
   14580:	bl	160cc <allow_mode_change>
   14584:	cmp	r0, #0
   14588:	beq	14628 <chm_ban+0x274>
   1458c:	ldr	r7, [sp, #32]
   14590:	ldr	r0, [r7, #64]!	; 0x40
   14594:	ands	r0, r0, #8192	; 0x2000
   14598:	beq	145cc <chm_ban+0x218>
   1459c:	ldr	r1, [sp, #32]
   145a0:	ldrh	r1, [r1, #80]	; 0x50
   145a4:	cmp	r1, #64	; 0x40
   145a8:	bne	145cc <chm_ban+0x218>
   145ac:	ldr	r1, [pc, #1404]	; 14b30 <chm_ban+0x77c>
   145b0:	ldr	r1, [pc, r1]
   145b4:	add	r2, r1, #1
   145b8:	ldr	r3, [pc, #1396]	; 14b34 <chm_ban+0x780>
   145bc:	add	r3, pc, r3
   145c0:	str	r2, [r3]
   145c4:	cmp	r1, #3
   145c8:	bgt	14628 <chm_ban+0x274>
   145cc:	ldr	r1, [sl]
   145d0:	ldr	r2, [sp, #24]
   145d4:	ldr	r6, [r2, r1, lsl #2]
   145d8:	add	r1, r1, #1
   145dc:	str	r1, [sl]
   145e0:	cmp	r6, #0
   145e4:	beq	14628 <chm_ban+0x274>
   145e8:	ldrb	r1, [r6]
   145ec:	cmp	r1, #0
   145f0:	cmpne	r1, #58	; 0x3a
   145f4:	beq	14628 <chm_ban+0x274>
   145f8:	cmp	r0, #0
   145fc:	beq	14774 <chm_ban+0x3c0>
   14600:	ldr	r0, [sp, #32]
   14604:	ldrh	r0, [r0, #80]	; 0x50
   14608:	cmp	r0, #64	; 0x40
   1460c:	bne	14774 <chm_ban+0x3c0>
   14610:	mov	r0, r6
   14614:	bl	16658 <pretty_mask>
   14618:	b	1478c <chm_ban+0x3d8>
   1461c:	ldr	r1, [r8]
   14620:	tst	r1, r0
   14624:	beq	14630 <chm_ban+0x27c>
   14628:	sub	sp, fp, #28
   1462c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14630:	orr	r0, r1, r0
   14634:	str	r0, [r8]
   14638:	cmp	r2, #1
   1463c:	bgt	1464c <chm_ban+0x298>
   14640:	cmp	r9, #-2147483648	; 0x80000000
   14644:	cmpne	r9, #268435456	; 0x10000000
   14648:	bne	14730 <chm_ban+0x37c>
   1464c:	mov	r9, r7
   14650:	ldr	sl, [lr]
   14654:	cmp	sl, #0
   14658:	beq	146e8 <chm_ban+0x334>
   1465c:	ldr	r0, [sp, #32]
   14660:	add	r7, r0, #88	; 0x58
   14664:	add	r4, sp, #37	; 0x25
   14668:	ldr	r0, [pc, #1204]	; 14b24 <chm_ban+0x770>
   1466c:	ldr	r0, [pc, r0]
   14670:	add	r5, r0, #88	; 0x58
   14674:	ldr	r8, [sl]
   14678:	ldr	r3, [r8]
   1467c:	ldr	r0, [r8, #12]
   14680:	cmp	r0, #0
   14684:	beq	146a4 <chm_ban+0x2f0>
   14688:	str	r0, [sp]
   1468c:	mov	r0, r4
   14690:	mov	r1, #195	; 0xc3
   14694:	ldr	r2, [pc, #1164]	; 14b28 <chm_ban+0x774>
   14698:	add	r2, pc, r2
   1469c:	bl	de74 <snprintf@plt>
   146a0:	b	146b4 <chm_ban+0x300>
   146a4:	mov	r0, r4
   146a8:	mov	r1, r3
   146ac:	mov	r2, #195	; 0xc3
   146b0:	bl	e510 <rb_strlcpy@plt>
   146b4:	ldr	r0, [r9, #236]	; 0xec
   146b8:	ldmib	r8, {r1, r2}
   146bc:	stm	sp, {r0, r4}
   146c0:	str	r1, [sp, #8]
   146c4:	str	r2, [sp, #12]
   146c8:	ldr	r0, [sp, #32]
   146cc:	mov	r1, r6
   146d0:	mov	r2, r5
   146d4:	mov	r3, r7
   146d8:	bl	d1e4 <sendto_one@plt>
   146dc:	ldr	sl, [sl, #8]
   146e0:	cmp	sl, #0
   146e4:	bne	14674 <chm_ban+0x2c0>
   146e8:	ldr	r0, [r9, #236]	; 0xec
   146ec:	str	r0, [sp]
   146f0:	ldr	r0, [sp, #32]
   146f4:	add	r3, r0, #88	; 0x58
   146f8:	ldr	r1, [pc, #1068]	; 14b2c <chm_ban+0x778>
   146fc:	ldr	r1, [pc, r1]
   14700:	add	r2, r1, #88	; 0x58
   14704:	ldr	r1, [sp, #28]
   14708:	bl	d1e4 <sendto_one@plt>
   1470c:	sub	sp, fp, #28
   14710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14714:	ldr	r2, [pc, #1012]	; 14b10 <chm_ban+0x75c>
   14718:	add	r2, pc, r2
   1471c:	mov	r0, #256	; 0x100
   14720:	mov	r1, #0
   14724:	sub	sp, fp, #28
   14728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1472c:	b	d640 <sendto_realops_snomask@plt>
   14730:	tst	r1, #2
   14734:	bne	14760 <chm_ban+0x3ac>
   14738:	ldr	r0, [r7, #236]	; 0xec
   1473c:	str	r0, [sp]
   14740:	ldr	r0, [sp, #32]
   14744:	add	r3, r0, #88	; 0x58
   14748:	ldr	r1, [pc, #972]	; 14b1c <chm_ban+0x768>
   1474c:	ldr	r1, [pc, r1]
   14750:	add	r2, r1, #88	; 0x58
   14754:	ldr	r1, [pc, #964]	; 14b20 <chm_ban+0x76c>
   14758:	add	r1, pc, r1
   1475c:	bl	d1e4 <sendto_one@plt>
   14760:	ldr	r0, [r8]
   14764:	orr	r0, r0, #2
   14768:	str	r0, [r8]
   1476c:	sub	sp, fp, #28
   14770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14774:	mov	r0, r6
   14778:	mov	r1, #32
   1477c:	bl	dce8 <strchr@plt>
   14780:	cmp	r0, #0
   14784:	mov	r0, r6
   14788:	bne	14628 <chm_ban+0x274>
   1478c:	mov	sl, r0
   14790:	bl	dc94 <strlen@plt>
   14794:	cmp	r0, #196	; 0xc4
   14798:	bcc	147e8 <chm_ban+0x434>
   1479c:	ldr	r3, [r8, #236]	; 0xec
   147a0:	ldr	r0, [sp, #28]
   147a4:	str	r0, [sp]
   147a8:	str	r6, [sp, #4]
   147ac:	ldr	r2, [pc, #900]	; 14b38 <chm_ban+0x784>
   147b0:	add	r2, pc, r2
   147b4:	ldr	r0, [sp, #32]
   147b8:	movw	r1, #743	; 0x2e7
   147bc:	bl	dc88 <sendto_one_numeric@plt>
   147c0:	sub	sp, fp, #28
   147c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147c8:	ldr	r1, [sl]
   147cc:	cmp	r1, r3
   147d0:	bge	14474 <chm_ban+0xc0>
   147d4:	b	14628 <chm_ban+0x274>
   147d8:	ldr	r0, [sl]
   147dc:	cmp	r0, r3
   147e0:	bge	1451c <chm_ban+0x168>
   147e4:	b	14628 <chm_ban+0x274>
   147e8:	str	sl, [sp, #24]
   147ec:	add	r0, sl, #1
   147f0:	mov	r1, #36	; 0x24
   147f4:	bl	dce8 <strchr@plt>
   147f8:	cmp	r0, #0
   147fc:	beq	1481c <chm_ban+0x468>
   14800:	mov	sl, r0
   14804:	mov	r0, #0
   14808:	strb	r0, [sl]
   1480c:	ldrb	r0, [sl, #1]!
   14810:	cmp	r0, #0
   14814:	moveq	sl, r0
   14818:	b	14820 <chm_ban+0x46c>
   1481c:	mov	sl, #0
   14820:	mov	r2, r4
   14824:	cmn	r5, #1
   14828:	mov	ip, r8
   1482c:	ldr	lr, [sp, #24]
   14830:	beq	1490c <chm_ban+0x558>
   14834:	cmp	r5, #1
   14838:	bne	14628 <chm_ban+0x274>
   1483c:	ldrb	r0, [lr]
   14840:	cmp	r0, #36	; 0x24
   14844:	bne	14890 <chm_ban+0x4dc>
   14848:	ldrb	r0, [r7, #1]
   1484c:	tst	r0, #32
   14850:	beq	14890 <chm_ban+0x4dc>
   14854:	ldr	r0, [sp, #32]
   14858:	ldrh	r0, [r0, #80]	; 0x50
   1485c:	cmp	r0, #64	; 0x40
   14860:	bne	14890 <chm_ban+0x4dc>
   14864:	mov	r0, lr
   14868:	ldr	r1, [sp, #32]
   1486c:	mov	r2, ip
   14870:	mov	r3, r9
   14874:	bl	dcdc <valid_extban@plt>
   14878:	ldr	lr, [sp, #24]
   1487c:	mov	ip, r8
   14880:	mov	r2, r4
   14884:	ldr	r1, [sp, #28]
   14888:	cmp	r0, #0
   1488c:	beq	14aac <chm_ban+0x6f8>
   14890:	cmp	sl, #0
   14894:	ldrbne	r0, [r7, #1]
   14898:	tstne	r0, #32
   1489c:	bne	149c4 <chm_ban+0x610>
   148a0:	stm	sp, {r2, r9}
   148a4:	ldr	r0, [sp, #32]
   148a8:	mov	r1, ip
   148ac:	mov	r2, lr
   148b0:	mov	r3, sl
   148b4:	bl	d100 <add_id@plt>
   148b8:	ldr	r6, [sp, #24]
   148bc:	ldr	r4, [sp, #28]
   148c0:	cmp	r0, #0
   148c4:	beq	14628 <chm_ban+0x274>
   148c8:	cmp	sl, #0
   148cc:	movne	r0, #36	; 0x24
   148d0:	strbne	r0, [sl, #-1]
   148d4:	ldr	r0, [pc, #612]	; 14b40 <chm_ban+0x78c>
   148d8:	ldr	r0, [pc, r0]
   148dc:	add	r1, r0, r0, lsl #2
   148e0:	ldr	r2, [pc, #604]	; 14b44 <chm_ban+0x790>
   148e4:	add	r2, pc, r2
   148e8:	strb	r4, [r2, r1, lsl #2]!
   148ec:	mov	r1, #1
   148f0:	mov	r3, #0
   148f4:	add	r0, r0, #1
   148f8:	ldr	r7, [pc, #584]	; 14b48 <chm_ban+0x794>
   148fc:	add	r7, pc, r7
   14900:	str	r0, [r7]
   14904:	str	r6, [r2, #4]
   14908:	b	14a94 <chm_ban+0x6e0>
   1490c:	ldr	r8, [pc, #568]	; 14b4c <chm_ban+0x798>
   14910:	ldr	r8, [pc, r8]
   14914:	mov	r0, ip
   14918:	mov	r1, lr
   1491c:	mov	r3, r9
   14920:	mov	sl, r2
   14924:	mov	r4, ip
   14928:	mov	r5, lr
   1492c:	bl	e2d0 <del_id@plt>
   14930:	cmp	r0, #0
   14934:	beq	14944 <chm_ban+0x590>
   14938:	mov	r7, r0
   1493c:	mov	r1, r5
   14940:	b	1496c <chm_ban+0x5b8>
   14944:	mov	r0, r4
   14948:	mov	r1, r6
   1494c:	mov	r2, sl
   14950:	mov	r3, r9
   14954:	bl	e2d0 <del_id@plt>
   14958:	cmp	r0, #0
   1495c:	movne	r5, r6
   14960:	mov	r1, r5
   14964:	beq	14a08 <chm_ban+0x654>
   14968:	mov	r7, r0
   1496c:	ldr	r0, [r7, #12]
   14970:	cmp	r0, #0
   14974:	beq	149bc <chm_ban+0x608>
   14978:	ldr	r3, [r7]
   1497c:	str	r0, [sp]
   14980:	ldr	r0, [pc, #468]	; 14b5c <chm_ban+0x7a8>
   14984:	add	r0, pc, r0
   14988:	add	r0, r0, r8
   1498c:	ldr	r2, [pc, #460]	; 14b60 <chm_ban+0x7ac>
   14990:	add	r2, pc, r2
   14994:	mov	r1, #780	; 0x30c
   14998:	bl	de74 <snprintf@plt>
   1499c:	ldr	r1, [pc, #448]	; 14b64 <chm_ban+0x7b0>
   149a0:	ldr	r1, [pc, r1]
   149a4:	add	r0, r0, r1
   149a8:	add	r0, r0, #1
   149ac:	ldr	r1, [pc, #436]	; 14b68 <chm_ban+0x7b4>
   149b0:	add	r1, pc, r1
   149b4:	str	r0, [r1]
   149b8:	b	14a48 <chm_ban+0x694>
   149bc:	mov	r6, #1
   149c0:	b	14a10 <chm_ban+0x65c>
   149c4:	ldr	r0, [sp, #32]
   149c8:	ldrh	r0, [r0, #80]	; 0x50
   149cc:	cmp	r0, #64	; 0x40
   149d0:	bne	148a0 <chm_ban+0x4ec>
   149d4:	ldr	r0, [pc, #352]	; 14b3c <chm_ban+0x788>
   149d8:	ldr	r0, [pc, r0]
   149dc:	ldr	r0, [r0, #8]
   149e0:	cmp	r0, #0
   149e4:	beq	14a00 <chm_ban+0x64c>
   149e8:	mov	r0, sl
   149ec:	mov	r1, #36	; 0x24
   149f0:	bl	dce8 <strchr@plt>
   149f4:	mov	ip, r8
   149f8:	cmp	r0, #0
   149fc:	beq	14ab8 <chm_ban+0x704>
   14a00:	ldr	r3, [ip, #236]	; 0xec
   14a04:	b	147a0 <chm_ban+0x3ec>
   14a08:	mov	r6, #0
   14a0c:	mov	r7, #0
   14a10:	ldr	r0, [pc, #312]	; 14b50 <chm_ban+0x79c>
   14a14:	add	r0, pc, r0
   14a18:	add	r0, r0, r8
   14a1c:	mov	r2, #780	; 0x30c
   14a20:	bl	e510 <rb_strlcpy@plt>
   14a24:	ldr	r1, [pc, #296]	; 14b54 <chm_ban+0x7a0>
   14a28:	ldr	r1, [pc, r1]
   14a2c:	add	r0, r0, r1
   14a30:	add	r0, r0, #1
   14a34:	ldr	r1, [pc, #284]	; 14b58 <chm_ban+0x7a4>
   14a38:	add	r1, pc, r1
   14a3c:	str	r0, [r1]
   14a40:	cmp	r6, #0
   14a44:	beq	14a50 <chm_ban+0x69c>
   14a48:	mov	r0, r7
   14a4c:	bl	e438 <free_ban@plt>
   14a50:	ldr	r0, [pc, #276]	; 14b6c <chm_ban+0x7b8>
   14a54:	ldr	r0, [pc, r0]
   14a58:	add	r1, r0, r0, lsl #2
   14a5c:	ldr	r2, [pc, #268]	; 14b70 <chm_ban+0x7bc>
   14a60:	add	r2, pc, r2
   14a64:	ldr	r3, [sp, #28]
   14a68:	strb	r3, [r2, r1, lsl #2]!
   14a6c:	mvn	r1, #0
   14a70:	mov	r3, #0
   14a74:	add	r0, r0, #1
   14a78:	ldr	r7, [pc, #244]	; 14b74 <chm_ban+0x7c0>
   14a7c:	add	r7, pc, r7
   14a80:	str	r0, [r7]
   14a84:	ldr	r0, [pc, #236]	; 14b78 <chm_ban+0x7c4>
   14a88:	add	r0, pc, r0
   14a8c:	add	r0, r0, r8
   14a90:	str	r0, [r2, #4]
   14a94:	str	r3, [r2, #8]
   14a98:	str	r1, [r2, #12]
   14a9c:	ldr	r0, [sp, #20]
   14aa0:	str	r0, [r2, #16]
   14aa4:	sub	sp, fp, #28
   14aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aac:	ldr	r3, [ip, #236]	; 0xec
   14ab0:	str	r1, [sp]
   14ab4:	b	147a8 <chm_ban+0x3f4>
   14ab8:	ldr	r0, [sp, #32]
   14abc:	mov	r1, ip
   14ac0:	mov	r2, sl
   14ac4:	bl	16ab4 <check_forward>
   14ac8:	cmp	r0, #0
   14acc:	ldr	r0, [sp, #28]
   14ad0:	ldr	lr, [sp, #24]
   14ad4:	beq	14628 <chm_ban+0x274>
   14ad8:	mov	ip, r8
   14adc:	mov	r2, r4
   14ae0:	cmp	r9, #268435456	; 0x10000000
   14ae4:	beq	148a0 <chm_ban+0x4ec>
   14ae8:	ldr	r3, [ip, #236]	; 0xec
   14aec:	b	147a4 <chm_ban+0x3f0>
   14af0:	.word	0x0002c92f
   14af4:	.word	0x0002c90b
   14af8:	.word	0x000466d8
   14afc:	.word	0x0002c92b
   14b00:	.word	0x0002c907
   14b04:	.word	0x00046630
   14b08:	.word	0x0002c83a
   14b0c:	.word	0x0002c816
   14b10:	.word	0x0002c712
   14b14:	.word	0x0002c93f
   14b18:	.word	0x0002c919
   14b1c:	.word	0x0004640c
   14b20:	.word	0x0002c6f6
   14b24:	.word	0x000464ec
   14b28:	.word	0x0002c7e3
   14b2c:	.word	0x0004645c
   14b30:	.word	0x00050204
   14b34:	.word	0x000501f8
   14b38:	.word	0x0002c6d1
   14b3c:	.word	0x00046140
   14b40:	.word	0x0004fed8
   14b44:	.word	0x0004d6cc
   14b48:	.word	0x0004feb4
   14b4c:	.word	0x000501b4
   14b50:	.word	0x0004fda4
   14b54:	.word	0x0005009c
   14b58:	.word	0x0005008c
   14b5c:	.word	0x0004fe34
   14b60:	.word	0x0002c4eb
   14b64:	.word	0x00050124
   14b68:	.word	0x00050114
   14b6c:	.word	0x0004fd5c
   14b70:	.word	0x0004d550
   14b74:	.word	0x0004fd34
   14b78:	.word	0x0004fd30

00014b7c <chm_forward>:
   14b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b80:	add	fp, sp, #28
   14b84:	sub	sp, sp, #4
   14b88:	mov	r6, r3
   14b8c:	mov	r4, r1
   14b90:	mov	r5, r0
   14b94:	ldr	r0, [pc, #572]	; 14dd8 <chm_forward+0x25c>
   14b98:	ldr	r0, [pc, r0]
   14b9c:	ldr	r0, [r0, #8]
   14ba0:	ldr	r9, [fp, #20]
   14ba4:	ldr	r7, [fp, #16]
   14ba8:	ldr	sl, [fp, #8]
   14bac:	cmp	r0, #0
   14bb0:	bne	14bd0 <chm_forward+0x54>
   14bb4:	ldrb	r0, [r5, #65]	; 0x41
   14bb8:	tst	r0, #32
   14bbc:	beq	14bd0 <chm_forward+0x54>
   14bc0:	cmp	r9, #1
   14bc4:	ldrheq	r0, [r5, #80]	; 0x50
   14bc8:	cmpeq	r0, #64	; 0x40
   14bcc:	beq	14dc4 <chm_forward+0x248>
   14bd0:	cmp	r9, #0
   14bd4:	beq	14d08 <chm_forward+0x18c>
   14bd8:	mov	r8, #0
   14bdc:	cmp	r9, #1
   14be0:	bne	14bf4 <chm_forward+0x78>
   14be4:	ldr	r0, [sl]
   14be8:	mov	r8, #1
   14bec:	cmp	r0, r6
   14bf0:	bge	14d08 <chm_forward+0x18c>
   14bf4:	ldr	r0, [fp, #24]
   14bf8:	str	r0, [sp]
   14bfc:	mov	r0, r5
   14c00:	mov	r1, r4
   14c04:	mov	r3, r7
   14c08:	bl	160cc <allow_mode_change>
   14c0c:	cmp	r0, #0
   14c10:	beq	14dd0 <chm_forward+0x254>
   14c14:	ldrb	r0, [r5, #65]	; 0x41
   14c18:	tst	r0, #32
   14c1c:	beq	14c4c <chm_forward+0xd0>
   14c20:	ldrh	r0, [r5, #80]	; 0x50
   14c24:	cmp	r0, #64	; 0x40
   14c28:	bne	14c4c <chm_forward+0xd0>
   14c2c:	ldr	r0, [pc, #432]	; 14de4 <chm_forward+0x268>
   14c30:	ldr	r0, [pc, r0]
   14c34:	add	r1, r0, #1
   14c38:	ldr	r2, [pc, #424]	; 14de8 <chm_forward+0x26c>
   14c3c:	add	r2, pc, r2
   14c40:	str	r1, [r2]
   14c44:	cmp	r0, #45	; 0x2d
   14c48:	bgt	14dd0 <chm_forward+0x254>
   14c4c:	cmp	r8, #0
   14c50:	beq	14d3c <chm_forward+0x1c0>
   14c54:	ldr	r0, [sl]
   14c58:	cmp	r0, r6
   14c5c:	bge	14d3c <chm_forward+0x1c0>
   14c60:	ldr	r1, [fp, #12]
   14c64:	ldr	r6, [r1, r0, lsl #2]
   14c68:	add	r0, r0, #1
   14c6c:	str	r0, [sl]
   14c70:	cmp	r6, #0
   14c74:	ldrbne	r0, [r6]
   14c78:	cmpne	r0, #0
   14c7c:	beq	14dd0 <chm_forward+0x254>
   14c80:	mov	r0, r5
   14c84:	mov	r1, r4
   14c88:	mov	r2, r6
   14c8c:	bl	16ab4 <check_forward>
   14c90:	cmp	r0, #0
   14c94:	beq	14dd0 <chm_forward+0x254>
   14c98:	add	r0, r4, #52	; 0x34
   14c9c:	mov	r1, r6
   14ca0:	mov	r2, #51	; 0x33
   14ca4:	bl	e510 <rb_strlcpy@plt>
   14ca8:	ldr	r0, [pc, #316]	; 14dec <chm_forward+0x270>
   14cac:	ldr	r0, [pc, r0]
   14cb0:	add	r1, r0, r0, lsl #2
   14cb4:	ldr	r2, [pc, #308]	; 14df0 <chm_forward+0x274>
   14cb8:	add	r2, pc, r2
   14cbc:	ldr	r3, [fp, #24]
   14cc0:	strb	r3, [r2, r1, lsl #2]!
   14cc4:	mov	r1, #1
   14cc8:	ldr	r3, [pc, #292]	; 14df4 <chm_forward+0x278>
   14ccc:	ldr	r3, [pc, r3]
   14cd0:	ldr	r3, [r3, #8]
   14cd4:	mov	r7, #0
   14cd8:	clz	r3, r3
   14cdc:	lsr	r3, r3, #5
   14ce0:	lsl	r3, r3, #5
   14ce4:	add	r0, r0, #1
   14ce8:	ldr	r5, [pc, #264]	; 14df8 <chm_forward+0x27c>
   14cec:	add	r5, pc, r5
   14cf0:	str	r0, [r5]
   14cf4:	stmib	r2, {r6, r7}
   14cf8:	str	r1, [r2, #12]
   14cfc:	str	r3, [r2, #16]
   14d00:	sub	sp, fp, #28
   14d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d08:	ldrb	r0, [r7, #1]
   14d0c:	tst	r0, #16
   14d10:	bne	14dd0 <chm_forward+0x254>
   14d14:	ldrb	r0, [r4, #52]!	; 0x34
   14d18:	ldr	r2, [r4, #184]	; 0xb8
   14d1c:	cmp	r0, #0
   14d20:	beq	14da0 <chm_forward+0x224>
   14d24:	ldr	r1, [pc, #180]	; 14de0 <chm_forward+0x264>
   14d28:	add	r1, pc, r1
   14d2c:	mov	r0, r5
   14d30:	mov	r3, r4
   14d34:	bl	e414 <sendto_one_notice@plt>
   14d38:	b	14db0 <chm_forward+0x234>
   14d3c:	cmn	r9, #1
   14d40:	bne	14dd0 <chm_forward+0x254>
   14d44:	ldrb	r0, [r4, #52]	; 0x34
   14d48:	cmp	r0, #0
   14d4c:	beq	14dd0 <chm_forward+0x254>
   14d50:	mov	r0, #0
   14d54:	strb	r0, [r4, #52]	; 0x34
   14d58:	ldr	r1, [pc, #156]	; 14dfc <chm_forward+0x280>
   14d5c:	ldr	r1, [pc, r1]
   14d60:	add	r2, r1, r1, lsl #2
   14d64:	ldr	r3, [pc, #148]	; 14e00 <chm_forward+0x284>
   14d68:	add	r3, pc, r3
   14d6c:	ldr	r7, [fp, #24]
   14d70:	strb	r7, [r3, r2, lsl #2]!
   14d74:	mvn	r2, #0
   14d78:	add	r1, r1, #1
   14d7c:	ldr	r7, [pc, #128]	; 14e04 <chm_forward+0x288>
   14d80:	add	r7, pc, r7
   14d84:	str	r1, [r7]
   14d88:	str	r0, [r3, #4]
   14d8c:	str	r0, [r3, #8]
   14d90:	str	r2, [r3, #12]
   14d94:	str	r0, [r3, #16]
   14d98:	sub	sp, fp, #28
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da0:	ldr	r1, [pc, #52]	; 14ddc <chm_forward+0x260>
   14da4:	add	r1, pc, r1
   14da8:	mov	r0, r5
   14dac:	bl	e414 <sendto_one_notice@plt>
   14db0:	ldr	r0, [r7]
   14db4:	orr	r0, r0, #4096	; 0x1000
   14db8:	str	r0, [r7]
   14dbc:	sub	sp, fp, #28
   14dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc4:	ldr	r0, [sl]
   14dc8:	cmp	r0, r6
   14dcc:	bge	14be4 <chm_forward+0x68>
   14dd0:	sub	sp, fp, #28
   14dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dd8:	.word	0x00045f80
   14ddc:	.word	0x0002c16c
   14de0:	.word	0x0002c203
   14de4:	.word	0x0004d37c
   14de8:	.word	0x0004d370
   14dec:	.word	0x0004fb04
   14df0:	.word	0x0004d2f8
   14df4:	.word	0x00045e4c
   14df8:	.word	0x0004fac4
   14dfc:	.word	0x0004fa54
   14e00:	.word	0x0004d248
   14e04:	.word	0x0004fa30

00014e08 <chm_throttle>:
   14e08:	push	{r4, r5, r6, r7, fp, lr}
   14e0c:	add	fp, sp, #16
   14e10:	sub	sp, sp, #16
   14e14:	mov	r5, r3
   14e18:	mov	r4, r1
   14e1c:	mov	r6, r0
   14e20:	mov	r0, #0
   14e24:	str	r0, [sp, #12]
   14e28:	str	r0, [sp, #8]
   14e2c:	ldr	r7, [fp, #24]
   14e30:	str	r7, [sp]
   14e34:	ldr	r3, [fp, #16]
   14e38:	mov	r0, r6
   14e3c:	bl	160cc <allow_mode_change>
   14e40:	ldr	r1, [fp, #20]
   14e44:	cmp	r1, #0
   14e48:	cmpne	r0, #0
   14e4c:	bne	14e58 <chm_throttle+0x50>
   14e50:	sub	sp, fp, #16
   14e54:	pop	{r4, r5, r6, r7, fp, pc}
   14e58:	ldrb	r0, [r6, #65]	; 0x41
   14e5c:	tst	r0, #32
   14e60:	beq	14e90 <chm_throttle+0x88>
   14e64:	ldrh	r0, [r6, #80]	; 0x50
   14e68:	cmp	r0, #64	; 0x40
   14e6c:	bne	14e90 <chm_throttle+0x88>
   14e70:	ldr	r0, [pc, #308]	; 14fac <chm_throttle+0x1a4>
   14e74:	ldr	r0, [pc, r0]
   14e78:	add	r2, r0, #1
   14e7c:	ldr	r3, [pc, #300]	; 14fb0 <chm_throttle+0x1a8>
   14e80:	add	r3, pc, r3
   14e84:	str	r2, [r3]
   14e88:	cmp	r0, #45	; 0x2d
   14e8c:	bgt	14e50 <chm_throttle+0x48>
   14e90:	cmn	r1, #1
   14e94:	beq	14f48 <chm_throttle+0x140>
   14e98:	cmp	r1, #1
   14e9c:	bne	14e50 <chm_throttle+0x48>
   14ea0:	ldr	r6, [fp, #8]
   14ea4:	ldr	r0, [r6]
   14ea8:	cmp	r0, r5
   14eac:	bge	14e50 <chm_throttle+0x48>
   14eb0:	ldr	r5, [fp, #12]
   14eb4:	ldr	r0, [r5, r0, lsl #2]
   14eb8:	ldr	r1, [pc, #244]	; 14fb4 <chm_throttle+0x1ac>
   14ebc:	add	r1, pc, r1
   14ec0:	add	r2, sp, #12
   14ec4:	add	r3, sp, #8
   14ec8:	bl	de8c <__isoc99_sscanf@plt>
   14ecc:	cmp	r0, #2
   14ed0:	blt	14e50 <chm_throttle+0x48>
   14ed4:	ldr	r0, [sp, #12]
   14ed8:	cmp	r0, #1
   14edc:	ldrge	r1, [sp, #8]
   14ee0:	cmpge	r1, #1
   14ee4:	blt	14e50 <chm_throttle+0x48>
   14ee8:	ldr	r2, [pc, #200]	; 14fb8 <chm_throttle+0x1b0>
   14eec:	ldr	r2, [pc, r2]
   14ef0:	add	ip, r2, r2, lsl #2
   14ef4:	ldr	r3, [pc, #192]	; 14fbc <chm_throttle+0x1b4>
   14ef8:	add	r3, pc, r3
   14efc:	strb	r7, [r3, ip, lsl #2]!
   14f00:	mov	r7, #1
   14f04:	str	r7, [r3, #12]
   14f08:	mov	r7, #0
   14f0c:	str	r7, [r3, #16]
   14f10:	str	r7, [r3, #8]
   14f14:	ldr	r7, [r6]
   14f18:	ldr	ip, [r5, r7, lsl #2]
   14f1c:	add	r2, r2, #1
   14f20:	ldr	r5, [pc, #152]	; 14fc0 <chm_throttle+0x1b8>
   14f24:	add	r5, pc, r5
   14f28:	str	r2, [r5]
   14f2c:	str	ip, [r3, #4]
   14f30:	add	r2, r7, #1
   14f34:	str	r2, [r6]
   14f38:	str	r0, [r4, #44]	; 0x2c
   14f3c:	str	r1, [r4, #48]	; 0x30
   14f40:	sub	sp, fp, #16
   14f44:	pop	{r4, r5, r6, r7, fp, pc}
   14f48:	ldr	r0, [r4, #44]	; 0x2c
   14f4c:	cmp	r0, #0
   14f50:	beq	14e50 <chm_throttle+0x48>
   14f54:	mov	r0, #0
   14f58:	str	r0, [r4, #44]	; 0x2c
   14f5c:	str	r0, [r4, #48]	; 0x30
   14f60:	str	r0, [r4, #220]	; 0xdc
   14f64:	str	r0, [r4, #224]	; 0xe0
   14f68:	ldr	r1, [pc, #84]	; 14fc4 <chm_throttle+0x1bc>
   14f6c:	ldr	r1, [pc, r1]
   14f70:	add	r2, r1, r1, lsl #2
   14f74:	ldr	r3, [pc, #76]	; 14fc8 <chm_throttle+0x1c0>
   14f78:	add	r3, pc, r3
   14f7c:	strb	r7, [r3, r2, lsl #2]!
   14f80:	mvn	r2, #0
   14f84:	add	r1, r1, #1
   14f88:	ldr	r7, [pc, #60]	; 14fcc <chm_throttle+0x1c4>
   14f8c:	add	r7, pc, r7
   14f90:	str	r1, [r7]
   14f94:	str	r0, [r3, #4]
   14f98:	str	r0, [r3, #8]
   14f9c:	str	r2, [r3, #12]
   14fa0:	str	r0, [r3, #16]
   14fa4:	sub	sp, fp, #16
   14fa8:	pop	{r4, r5, r6, r7, fp, pc}
   14fac:	.word	0x0004d138
   14fb0:	.word	0x0004d12c
   14fb4:	.word	0x0002b9b0
   14fb8:	.word	0x0004f8c4
   14fbc:	.word	0x0004d0b8
   14fc0:	.word	0x0004f88c
   14fc4:	.word	0x0004f844
   14fc8:	.word	0x0004d038
   14fcc:	.word	0x0004f824

00014fd0 <chm_key>:
   14fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fd4:	add	fp, sp, #28
   14fd8:	sub	sp, sp, #4
   14fdc:	mov	r6, r3
   14fe0:	mov	r4, r1
   14fe4:	mov	r5, r0
   14fe8:	sub	sp, sp, #8
   14fec:	ldr	r8, [fp, #24]
   14ff0:	str	r8, [sp]
   14ff4:	ldr	r3, [fp, #16]
   14ff8:	bl	160cc <allow_mode_change>
   14ffc:	add	sp, sp, #8
   15000:	ldr	r1, [fp, #20]
   15004:	cmp	r1, #0
   15008:	cmpne	r0, #0
   1500c:	bne	15018 <chm_key+0x48>
   15010:	sub	sp, fp, #28
   15014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15018:	ldrb	r0, [r5, #65]	; 0x41
   1501c:	tst	r0, #32
   15020:	beq	15050 <chm_key+0x80>
   15024:	ldrh	r0, [r5, #80]	; 0x50
   15028:	cmp	r0, #64	; 0x40
   1502c:	bne	15050 <chm_key+0x80>
   15030:	ldr	r0, [pc, #444]	; 151f4 <chm_key+0x224>
   15034:	ldr	r0, [pc, r0]
   15038:	add	r2, r0, #1
   1503c:	ldr	r3, [pc, #436]	; 151f8 <chm_key+0x228>
   15040:	add	r3, pc, r3
   15044:	str	r2, [r3]
   15048:	cmp	r0, #45	; 0x2d
   1504c:	bgt	15010 <chm_key+0x40>
   15050:	ldr	r7, [fp, #8]
   15054:	cmn	r1, #1
   15058:	beq	150d0 <chm_key+0x100>
   1505c:	cmp	r1, #1
   15060:	bne	15010 <chm_key+0x40>
   15064:	ldr	r0, [r7]
   15068:	cmp	r0, r6
   1506c:	bge	15010 <chm_key+0x40>
   15070:	ldr	r1, [fp, #12]
   15074:	add	sl, r5, #64	; 0x40
   15078:	ldr	r9, [r1, r0, lsl #2]
   1507c:	mov	r0, r9
   15080:	bl	dc94 <strlen@plt>
   15084:	add	r0, r0, #8
   15088:	bic	r0, r0, #7
   1508c:	sub	r6, sp, r0
   15090:	mov	sp, r6
   15094:	mov	r0, r6
   15098:	mov	r1, r9
   1509c:	bl	d928 <strcpy@plt>
   150a0:	ldr	r0, [r7]
   150a4:	add	r0, r0, #1
   150a8:	str	r0, [r7]
   150ac:	ldrb	r0, [sl, #1]
   150b0:	tst	r0, #32
   150b4:	beq	15184 <chm_key+0x1b4>
   150b8:	ldrh	r0, [r5, #80]	; 0x50
   150bc:	cmp	r0, #64	; 0x40
   150c0:	bne	15184 <chm_key+0x1b4>
   150c4:	mov	r0, r6
   150c8:	bl	16c34 <fix_key>
   150cc:	b	1518c <chm_key+0x1bc>
   150d0:	ldr	r0, [r7]
   150d4:	cmp	r0, r6
   150d8:	addlt	r0, r0, #1
   150dc:	strlt	r0, [r7]
   150e0:	ldrb	r0, [r4, #20]
   150e4:	cmp	r0, #0
   150e8:	beq	15010 <chm_key+0x40>
   150ec:	ldr	r0, [pc, #276]	; 15208 <chm_key+0x238>
   150f0:	ldr	r0, [pc, r0]
   150f4:	cmp	r0, #1
   150f8:	blt	15140 <chm_key+0x170>
   150fc:	ldr	r0, [pc, #264]	; 1520c <chm_key+0x23c>
   15100:	add	r0, pc, r0
   15104:	add	r1, r0, #12
   15108:	mov	r2, #0
   1510c:	ldr	r0, [pc, #252]	; 15210 <chm_key+0x240>
   15110:	ldr	r0, [pc, r0]
   15114:	ldr	r3, [pc, #248]	; 15214 <chm_key+0x244>
   15118:	add	r3, pc, r3
   1511c:	ldrb	r7, [r1, #-12]
   15120:	cmp	r7, #107	; 0x6b
   15124:	ldreq	r7, [r1]
   15128:	cmpeq	r7, #1
   1512c:	streq	r3, [r1, #-8]
   15130:	add	r1, r1, #20
   15134:	add	r2, r2, #1
   15138:	cmp	r2, r0
   1513c:	blt	1511c <chm_key+0x14c>
   15140:	mov	r1, #0
   15144:	strb	r1, [r4, #20]
   15148:	add	r2, r0, r0, lsl #2
   1514c:	ldr	r3, [pc, #196]	; 15218 <chm_key+0x248>
   15150:	add	r3, pc, r3
   15154:	strb	r8, [r3, r2, lsl #2]!
   15158:	mvn	r2, #0
   1515c:	add	r0, r0, #1
   15160:	ldr	r7, [pc, #180]	; 1521c <chm_key+0x24c>
   15164:	add	r7, pc, r7
   15168:	str	r0, [r7]
   1516c:	ldr	r0, [pc, #172]	; 15220 <chm_key+0x250>
   15170:	add	r0, pc, r0
   15174:	stmib	r3, {r0, r1, r2}
   15178:	str	r1, [r3, #16]
   1517c:	sub	sp, fp, #28
   15180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15184:	mov	r0, r6
   15188:	bl	16c7c <fix_key_remote>
   1518c:	ldrb	r0, [r6]
   15190:	cmp	r0, #0
   15194:	beq	15010 <chm_key+0x40>
   15198:	add	r4, r4, #20
   1519c:	mov	r0, r4
   151a0:	mov	r1, r6
   151a4:	mov	r2, #24
   151a8:	bl	e510 <rb_strlcpy@plt>
   151ac:	ldr	r0, [pc, #72]	; 151fc <chm_key+0x22c>
   151b0:	ldr	r0, [pc, r0]
   151b4:	add	r1, r0, r0, lsl #2
   151b8:	ldr	r2, [pc, #64]	; 15200 <chm_key+0x230>
   151bc:	add	r2, pc, r2
   151c0:	strb	r8, [r2, r1, lsl #2]!
   151c4:	mov	r1, #1
   151c8:	mov	r3, #0
   151cc:	add	r0, r0, #1
   151d0:	ldr	r7, [pc, #44]	; 15204 <chm_key+0x234>
   151d4:	add	r7, pc, r7
   151d8:	str	r0, [r7]
   151dc:	str	r4, [r2, #4]
   151e0:	str	r3, [r2, #8]
   151e4:	str	r1, [r2, #12]
   151e8:	str	r3, [r2, #16]
   151ec:	sub	sp, fp, #28
   151f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151f4:	.word	0x0004cf78
   151f8:	.word	0x0004cf6c
   151fc:	.word	0x0004f600
   15200:	.word	0x0004cdf4
   15204:	.word	0x0004f5dc
   15208:	.word	0x0004f6c0
   1520c:	.word	0x0004ceb0
   15210:	.word	0x0004f6a0
   15214:	.word	0x00046274
   15218:	.word	0x0004ce60
   1521c:	.word	0x0004f64c
   15220:	.word	0x0002c1cd

00015224 <chm_limit>:
   15224:	push	{r4, r5, r6, r7, fp, lr}
   15228:	add	fp, sp, #16
   1522c:	sub	sp, sp, #8
   15230:	mov	r5, r3
   15234:	mov	r4, r1
   15238:	mov	r6, r0
   1523c:	ldr	r7, [fp, #24]
   15240:	str	r7, [sp]
   15244:	ldr	r3, [fp, #16]
   15248:	bl	160cc <allow_mode_change>
   1524c:	ldr	r1, [fp, #20]
   15250:	cmp	r1, #0
   15254:	cmpne	r0, #0
   15258:	bne	15264 <chm_limit+0x40>
   1525c:	sub	sp, fp, #16
   15260:	pop	{r4, r5, r6, r7, fp, pc}
   15264:	ldrb	r0, [r6, #65]	; 0x41
   15268:	tst	r0, #32
   1526c:	beq	1529c <chm_limit+0x78>
   15270:	ldrh	r0, [r6, #80]	; 0x50
   15274:	cmp	r0, #64	; 0x40
   15278:	bne	1529c <chm_limit+0x78>
   1527c:	ldr	r0, [pc, #296]	; 153ac <chm_limit+0x188>
   15280:	ldr	r0, [pc, r0]
   15284:	add	r2, r0, #1
   15288:	ldr	r3, [pc, #288]	; 153b0 <chm_limit+0x18c>
   1528c:	add	r3, pc, r3
   15290:	str	r2, [r3]
   15294:	cmp	r0, #45	; 0x2d
   15298:	bgt	1525c <chm_limit+0x38>
   1529c:	cmn	r1, #1
   152a0:	beq	15354 <chm_limit+0x130>
   152a4:	cmp	r1, #1
   152a8:	bne	1525c <chm_limit+0x38>
   152ac:	ldr	r1, [fp, #8]
   152b0:	ldr	r2, [r1]
   152b4:	cmp	r2, r5
   152b8:	bge	1525c <chm_limit+0x38>
   152bc:	ldr	r0, [fp, #12]
   152c0:	ldr	r0, [r0, r2, lsl #2]
   152c4:	add	r2, r2, #1
   152c8:	str	r2, [r1]
   152cc:	cmp	r0, #0
   152d0:	ldrbne	r1, [r0]
   152d4:	cmpne	r1, #0
   152d8:	beq	1525c <chm_limit+0x38>
   152dc:	bl	e468 <atoi@plt>
   152e0:	cmp	r0, #1
   152e4:	blt	1525c <chm_limit+0x38>
   152e8:	mov	r5, r0
   152ec:	ldr	r6, [pc, #192]	; 153b4 <chm_limit+0x190>
   152f0:	add	r6, pc, r6
   152f4:	ldr	r1, [pc, #188]	; 153b8 <chm_limit+0x194>
   152f8:	add	r1, pc, r1
   152fc:	mov	r0, r6
   15300:	mov	r2, r5
   15304:	bl	e3a8 <sprintf@plt>
   15308:	ldr	r0, [pc, #172]	; 153bc <chm_limit+0x198>
   1530c:	ldr	r0, [pc, r0]
   15310:	add	r1, r0, r0, lsl #2
   15314:	ldr	r2, [pc, #164]	; 153c0 <chm_limit+0x19c>
   15318:	add	r2, pc, r2
   1531c:	strb	r7, [r2, r1, lsl #2]!
   15320:	mov	r1, #1
   15324:	mov	r3, #0
   15328:	add	r0, r0, #1
   1532c:	ldr	r7, [pc, #144]	; 153c4 <chm_limit+0x1a0>
   15330:	add	r7, pc, r7
   15334:	str	r0, [r7]
   15338:	str	r6, [r2, #4]
   1533c:	str	r3, [r2, #8]
   15340:	str	r1, [r2, #12]
   15344:	str	r3, [r2, #16]
   15348:	str	r5, [r4, #16]
   1534c:	sub	sp, fp, #16
   15350:	pop	{r4, r5, r6, r7, fp, pc}
   15354:	ldr	r0, [r4, #16]
   15358:	cmp	r0, #0
   1535c:	beq	1525c <chm_limit+0x38>
   15360:	mov	r0, #0
   15364:	str	r0, [r4, #16]
   15368:	ldr	r1, [pc, #88]	; 153c8 <chm_limit+0x1a4>
   1536c:	ldr	r1, [pc, r1]
   15370:	add	r2, r1, r1, lsl #2
   15374:	ldr	r3, [pc, #80]	; 153cc <chm_limit+0x1a8>
   15378:	add	r3, pc, r3
   1537c:	strb	r7, [r3, r2, lsl #2]!
   15380:	mvn	r2, #0
   15384:	add	r1, r1, #1
   15388:	ldr	r7, [pc, #64]	; 153d0 <chm_limit+0x1ac>
   1538c:	add	r7, pc, r7
   15390:	str	r1, [r7]
   15394:	str	r0, [r3, #4]
   15398:	str	r0, [r3, #8]
   1539c:	str	r2, [r3, #12]
   153a0:	str	r0, [r3, #16]
   153a4:	sub	sp, fp, #16
   153a8:	pop	{r4, r5, r6, r7, fp, pc}
   153ac:	.word	0x0004cd2c
   153b0:	.word	0x0004cd20
   153b4:	.word	0x0004f7d8
   153b8:	.word	0x0002b5dc
   153bc:	.word	0x0004f4a4
   153c0:	.word	0x0004cc98
   153c4:	.word	0x0004f480
   153c8:	.word	0x0004f444
   153cc:	.word	0x0004cc38
   153d0:	.word	0x0004f424

000153d4 <chm_op>:
   153d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153d8:	add	fp, sp, #28
   153dc:	sub	sp, sp, #12
   153e0:	mov	r6, r3
   153e4:	mov	r5, r1
   153e8:	mov	sl, r0
   153ec:	ldr	r9, [fp, #24]
   153f0:	str	r9, [sp]
   153f4:	ldr	r7, [fp, #16]
   153f8:	mov	r3, r7
   153fc:	bl	160cc <allow_mode_change>
   15400:	ldr	r4, [fp, #20]
   15404:	cmp	r4, #0
   15408:	cmpne	r0, #0
   1540c:	bne	15418 <chm_op+0x44>
   15410:	sub	sp, fp, #28
   15414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15418:	ldr	r0, [fp, #8]
   1541c:	ldr	r1, [r0]
   15420:	cmp	r1, r6
   15424:	bge	15410 <chm_op+0x3c>
   15428:	ldr	r2, [fp, #12]
   1542c:	ldr	r6, [r2, r1, lsl #2]
   15430:	add	r1, r1, #1
   15434:	str	r1, [r0]
   15438:	cmp	r6, #0
   1543c:	ldrbne	r0, [r6]
   15440:	cmpne	r0, #0
   15444:	bne	1546c <chm_op+0x98>
   15448:	ldr	r2, [pc, #540]	; 1566c <chm_op+0x298>
   1544c:	add	r2, pc, r2
   15450:	ldr	r3, [pc, #536]	; 15670 <chm_op+0x29c>
   15454:	add	r3, pc, r3
   15458:	mov	r0, sl
   1545c:	movw	r1, #401	; 0x191
   15460:	sub	sp, fp, #28
   15464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15468:	b	dc88 <sendto_one_numeric@plt>
   1546c:	mov	r0, sl
   15470:	mov	r1, r6
   15474:	mov	r2, #0
   15478:	bl	d1cc <find_chasing@plt>
   1547c:	cmp	r0, #0
   15480:	beq	15410 <chm_op+0x3c>
   15484:	mov	r8, r0
   15488:	mov	r0, r5
   1548c:	mov	r1, r8
   15490:	bl	d958 <find_channel_membership@plt>
   15494:	cmp	r0, #0
   15498:	beq	15540 <chm_op+0x16c>
   1549c:	ldr	r1, [sl, #64]	; 0x40
   154a0:	ands	r1, r1, #8192	; 0x2000
   154a4:	beq	154d4 <chm_op+0x100>
   154a8:	ldrh	r2, [sl, #80]	; 0x50
   154ac:	cmp	r2, #64	; 0x40
   154b0:	bne	154d4 <chm_op+0x100>
   154b4:	ldr	r2, [pc, #400]	; 1564c <chm_op+0x278>
   154b8:	ldr	r2, [pc, r2]
   154bc:	add	r3, r2, #1
   154c0:	ldr	r7, [pc, #392]	; 15650 <chm_op+0x27c>
   154c4:	add	r7, pc, r7
   154c8:	str	r3, [r7]
   154cc:	cmp	r2, #3
   154d0:	bgt	15410 <chm_op+0x3c>
   154d4:	cmp	r4, #1
   154d8:	bne	15598 <chm_op+0x1c4>
   154dc:	cmp	r8, sl
   154e0:	bne	154f0 <chm_op+0x11c>
   154e4:	ldrb	r1, [r0, #44]	; 0x2c
   154e8:	tst	r1, #2
   154ec:	bne	15410 <chm_op+0x3c>
   154f0:	ldr	r1, [pc, #348]	; 15654 <chm_op+0x280>
   154f4:	ldr	r1, [pc, r1]
   154f8:	add	r2, r1, r1, lsl #2
   154fc:	ldr	r3, [pc, #340]	; 15658 <chm_op+0x284>
   15500:	add	r3, pc, r3
   15504:	strb	r9, [r3, r2, lsl #2]!
   15508:	mov	r2, #1
   1550c:	mov	r7, #0
   15510:	add	r6, r8, #396	; 0x18c
   15514:	add	r1, r1, #1
   15518:	ldr	r5, [pc, #316]	; 1565c <chm_op+0x288>
   1551c:	add	r5, pc, r5
   15520:	str	r1, [r5]
   15524:	add	r1, r8, #88	; 0x58
   15528:	stmib	r3, {r1, r6}
   1552c:	str	r2, [r3, #12]
   15530:	str	r7, [r3, #16]
   15534:	ldr	r1, [r0, #44]	; 0x2c
   15538:	orr	r1, r1, #2
   1553c:	b	15604 <chm_op+0x230>
   15540:	ldrb	r0, [r7]
   15544:	tst	r0, #64	; 0x40
   15548:	bne	15584 <chm_op+0x1b0>
   1554c:	ldrb	r0, [sl, #65]	; 0x41
   15550:	tst	r0, #32
   15554:	beq	15584 <chm_op+0x1b0>
   15558:	ldrh	r0, [sl, #80]	; 0x50
   1555c:	cmp	r0, #64	; 0x40
   15560:	bne	15584 <chm_op+0x1b0>
   15564:	ldr	r0, [r5, #236]	; 0xec
   15568:	str	r0, [sp]
   1556c:	ldr	r2, [pc, #212]	; 15648 <chm_op+0x274>
   15570:	add	r2, pc, r2
   15574:	mov	r0, sl
   15578:	movw	r1, #441	; 0x1b9
   1557c:	mov	r3, r6
   15580:	bl	dc88 <sendto_one_numeric@plt>
   15584:	ldr	r0, [r7]
   15588:	orr	r0, r0, #64	; 0x40
   1558c:	str	r0, [r7]
   15590:	sub	sp, fp, #28
   15594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15598:	cmp	r1, #0
   1559c:	beq	155b8 <chm_op+0x1e4>
   155a0:	ldrh	r1, [sl, #80]	; 0x50
   155a4:	cmp	r1, #64	; 0x40
   155a8:	bne	155b8 <chm_op+0x1e4>
   155ac:	ldrb	r1, [r8, #56]	; 0x38
   155b0:	tst	r1, #64	; 0x40
   155b4:	bne	15610 <chm_op+0x23c>
   155b8:	ldr	r1, [pc, #160]	; 15660 <chm_op+0x28c>
   155bc:	ldr	r1, [pc, r1]
   155c0:	add	r2, r1, r1, lsl #2
   155c4:	ldr	r3, [pc, #152]	; 15664 <chm_op+0x290>
   155c8:	add	r3, pc, r3
   155cc:	strb	r9, [r3, r2, lsl #2]!
   155d0:	mvn	r2, #0
   155d4:	mov	r7, #0
   155d8:	add	r6, r8, #396	; 0x18c
   155dc:	add	r1, r1, #1
   155e0:	ldr	r5, [pc, #128]	; 15668 <chm_op+0x294>
   155e4:	add	r5, pc, r5
   155e8:	str	r1, [r5]
   155ec:	add	r1, r8, #88	; 0x58
   155f0:	stmib	r3, {r1, r6}
   155f4:	str	r2, [r3, #12]
   155f8:	str	r7, [r3, #16]
   155fc:	ldr	r1, [r0, #44]	; 0x2c
   15600:	bic	r1, r1, #2
   15604:	str	r1, [r0, #44]	; 0x2c
   15608:	sub	sp, fp, #28
   1560c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15610:	ldr	r0, [r5, #236]	; 0xec
   15614:	add	r1, r8, #88	; 0x58
   15618:	str	r1, [sp]
   1561c:	str	r0, [sp, #4]
   15620:	add	r3, sl, #88	; 0x58
   15624:	ldr	r0, [pc, #72]	; 15674 <chm_op+0x2a0>
   15628:	ldr	r0, [pc, r0]
   1562c:	add	r2, r0, #88	; 0x58
   15630:	ldr	r1, [pc, #64]	; 15678 <chm_op+0x2a4>
   15634:	add	r1, pc, r1
   15638:	mov	r0, sl
   1563c:	bl	d1e4 <sendto_one@plt>
   15640:	sub	sp, fp, #28
   15644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15648:	.word	0x0002b945
   1564c:	.word	0x0004f2fc
   15650:	.word	0x0004f2f0
   15654:	.word	0x0004f2bc
   15658:	.word	0x0004cab0
   1565c:	.word	0x0004f294
   15660:	.word	0x0004f1f4
   15664:	.word	0x0004c9e8
   15668:	.word	0x0004f1cc
   1566c:	.word	0x0002ba50
   15670:	.word	0x0002bee9
   15674:	.word	0x00045530
   15678:	.word	0x0002b8a4

0001567c <chm_voice>:
   1567c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15680:	add	fp, sp, #28
   15684:	sub	sp, sp, #4
   15688:	mov	r7, r3
   1568c:	mov	r6, r1
   15690:	mov	r4, r0
   15694:	ldr	r9, [fp, #24]
   15698:	str	r9, [sp]
   1569c:	ldr	sl, [fp, #16]
   156a0:	mov	r3, sl
   156a4:	bl	160cc <allow_mode_change>
   156a8:	ldr	r5, [fp, #20]
   156ac:	cmp	r5, #0
   156b0:	cmpne	r0, #0
   156b4:	bne	156c0 <chm_voice+0x44>
   156b8:	sub	sp, fp, #28
   156bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156c0:	ldr	r0, [fp, #8]
   156c4:	ldr	r1, [r0]
   156c8:	cmp	r1, r7
   156cc:	bge	156b8 <chm_voice+0x3c>
   156d0:	ldr	r2, [fp, #12]
   156d4:	ldr	r7, [r2, r1, lsl #2]
   156d8:	add	r1, r1, #1
   156dc:	str	r1, [r0]
   156e0:	cmp	r7, #0
   156e4:	ldrbne	r0, [r7]
   156e8:	cmpne	r0, #0
   156ec:	bne	15714 <chm_voice+0x98>
   156f0:	ldr	r2, [pc, #400]	; 15888 <chm_voice+0x20c>
   156f4:	add	r2, pc, r2
   156f8:	ldr	r3, [pc, #396]	; 1588c <chm_voice+0x210>
   156fc:	add	r3, pc, r3
   15700:	mov	r0, r4
   15704:	movw	r1, #401	; 0x191
   15708:	sub	sp, fp, #28
   1570c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15710:	b	dc88 <sendto_one_numeric@plt>
   15714:	mov	r0, r4
   15718:	mov	r1, r7
   1571c:	mov	r2, #0
   15720:	bl	d1cc <find_chasing@plt>
   15724:	cmp	r0, #0
   15728:	beq	156b8 <chm_voice+0x3c>
   1572c:	mov	r8, r0
   15730:	mov	r0, r6
   15734:	mov	r1, r8
   15738:	bl	d958 <find_channel_membership@plt>
   1573c:	cmp	r0, #0
   15740:	beq	157d0 <chm_voice+0x154>
   15744:	ldrb	r1, [r4, #65]	; 0x41
   15748:	tst	r1, #32
   1574c:	beq	1577c <chm_voice+0x100>
   15750:	ldrh	r1, [r4, #80]	; 0x50
   15754:	cmp	r1, #64	; 0x40
   15758:	bne	1577c <chm_voice+0x100>
   1575c:	ldr	r1, [pc, #268]	; 15870 <chm_voice+0x1f4>
   15760:	ldr	r1, [pc, r1]
   15764:	add	r2, r1, #1
   15768:	ldr	r3, [pc, #260]	; 15874 <chm_voice+0x1f8>
   1576c:	add	r3, pc, r3
   15770:	str	r2, [r3]
   15774:	cmp	r1, #3
   15778:	bgt	156b8 <chm_voice+0x3c>
   1577c:	ldr	r2, [pc, #244]	; 15878 <chm_voice+0x1fc>
   15780:	ldr	r2, [pc, r2]
   15784:	add	r1, r2, r2, lsl #2
   15788:	ldr	r3, [pc, #236]	; 1587c <chm_voice+0x200>
   1578c:	add	r3, pc, r3
   15790:	add	r1, r3, r1, lsl #2
   15794:	cmp	r5, #1
   15798:	bne	15828 <chm_voice+0x1ac>
   1579c:	strb	r9, [r1]
   157a0:	add	r3, r8, #396	; 0x18c
   157a4:	mov	r7, #0
   157a8:	mov	r6, #1
   157ac:	add	r2, r2, #1
   157b0:	ldr	r5, [pc, #200]	; 15880 <chm_voice+0x204>
   157b4:	add	r5, pc, r5
   157b8:	str	r2, [r5]
   157bc:	add	r2, r8, #88	; 0x58
   157c0:	stmib	r1, {r2, r3, r6, r7}
   157c4:	ldr	r1, [r0, #44]	; 0x2c
   157c8:	orr	r1, r1, #1
   157cc:	b	15860 <chm_voice+0x1e4>
   157d0:	ldrb	r0, [sl]
   157d4:	tst	r0, #64	; 0x40
   157d8:	bne	15814 <chm_voice+0x198>
   157dc:	ldrb	r0, [r4, #65]	; 0x41
   157e0:	tst	r0, #32
   157e4:	beq	15814 <chm_voice+0x198>
   157e8:	ldrh	r0, [r4, #80]	; 0x50
   157ec:	cmp	r0, #64	; 0x40
   157f0:	bne	15814 <chm_voice+0x198>
   157f4:	ldr	r0, [r6, #236]	; 0xec
   157f8:	str	r0, [sp]
   157fc:	ldr	r2, [pc, #104]	; 1586c <chm_voice+0x1f0>
   15800:	add	r2, pc, r2
   15804:	mov	r0, r4
   15808:	movw	r1, #441	; 0x1b9
   1580c:	mov	r3, r7
   15810:	bl	dc88 <sendto_one_numeric@plt>
   15814:	ldr	r0, [sl]
   15818:	orr	r0, r0, #64	; 0x40
   1581c:	str	r0, [sl]
   15820:	sub	sp, fp, #28
   15824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15828:	mov	r3, #118	; 0x76
   1582c:	strb	r3, [r1]
   15830:	mov	r3, #0
   15834:	mvn	r7, #0
   15838:	add	r6, r8, #396	; 0x18c
   1583c:	add	r2, r2, #1
   15840:	ldr	r5, [pc, #60]	; 15884 <chm_voice+0x208>
   15844:	add	r5, pc, r5
   15848:	str	r2, [r5]
   1584c:	add	r2, r8, #88	; 0x58
   15850:	stmib	r1, {r2, r6, r7}
   15854:	str	r3, [r1, #16]
   15858:	ldr	r1, [r0, #44]	; 0x2c
   1585c:	bic	r1, r1, #1
   15860:	str	r1, [r0, #44]	; 0x2c
   15864:	sub	sp, fp, #28
   15868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1586c:	.word	0x0002b6b5
   15870:	.word	0x0004f054
   15874:	.word	0x0004f048
   15878:	.word	0x0004f030
   1587c:	.word	0x0004c824
   15880:	.word	0x0004effc
   15884:	.word	0x0004ef6c
   15888:	.word	0x0002b7a8
   1588c:	.word	0x0002bc41

00015890 <chm_nosuch>:
   15890:	push	{fp, lr}
   15894:	mov	fp, sp
   15898:	sub	sp, sp, #8
   1589c:	ldr	r1, [fp, #16]
   158a0:	ldr	r2, [r1]
   158a4:	tst	r2, #4
   158a8:	bne	158d8 <chm_nosuch+0x48>
   158ac:	ldr	r3, [fp, #24]
   158b0:	orr	r2, r2, #4
   158b4:	str	r2, [r1]
   158b8:	str	r3, [sp]
   158bc:	add	r3, r0, #88	; 0x58
   158c0:	ldr	r1, [pc, #24]	; 158e0 <chm_nosuch+0x50>
   158c4:	ldr	r1, [pc, r1]
   158c8:	add	r2, r1, #88	; 0x58
   158cc:	ldr	r1, [pc, #16]	; 158e4 <chm_nosuch+0x54>
   158d0:	add	r1, pc, r1
   158d4:	bl	d1e4 <sendto_one@plt>
   158d8:	mov	sp, fp
   158dc:	pop	{fp, pc}
   158e0:	.word	0x00045294
   158e4:	.word	0x0002b395

000158e8 <chm_orphaned>:
   158e8:	ldrb	r2, [r0, #65]	; 0x41
   158ec:	tst	r2, #32
   158f0:	beq	15900 <chm_orphaned+0x18>
   158f4:	ldrh	r0, [r0, #80]	; 0x50
   158f8:	cmp	r0, #64	; 0x40
   158fc:	beq	15924 <chm_orphaned+0x3c>
   15900:	ldr	r2, [sp, #20]
   15904:	ldr	r0, [sp, #16]
   15908:	ldr	r3, [sp, #12]
   1590c:	cmn	r3, #1
   15910:	beq	15928 <chm_orphaned+0x40>
   15914:	cmp	r3, #1
   15918:	ldreq	r3, [r1, #12]
   1591c:	tsteq	r3, r2
   15920:	beq	1595c <chm_orphaned+0x74>
   15924:	bx	lr
   15928:	ldr	r3, [r1, #12]
   1592c:	tst	r3, r2
   15930:	bxeq	lr
   15934:	bic	r2, r3, r2
   15938:	str	r2, [r1, #12]
   1593c:	ldr	r1, [pc, #108]	; 159b0 <chm_orphaned+0xc8>
   15940:	ldr	r1, [pc, r1]
   15944:	add	r2, r1, r1, lsl #2
   15948:	ldr	r3, [pc, #100]	; 159b4 <chm_orphaned+0xcc>
   1594c:	add	r3, pc, r3
   15950:	strb	r0, [r3, r2, lsl #2]!
   15954:	mvn	ip, #0
   15958:	b	15980 <chm_orphaned+0x98>
   1595c:	orr	r2, r3, r2
   15960:	str	r2, [r1, #12]
   15964:	ldr	r1, [pc, #60]	; 159a8 <chm_orphaned+0xc0>
   15968:	ldr	r1, [pc, r1]
   1596c:	add	r2, r1, r1, lsl #2
   15970:	ldr	r3, [pc, #52]	; 159ac <chm_orphaned+0xc4>
   15974:	add	r3, pc, r3
   15978:	strb	r0, [r3, r2, lsl #2]!
   1597c:	mov	ip, #1
   15980:	mov	r2, #0
   15984:	add	r1, r1, #1
   15988:	ldr	r0, [pc, #40]	; 159b8 <chm_orphaned+0xd0>
   1598c:	add	r0, pc, r0
   15990:	str	r1, [r0]
   15994:	str	r2, [r3, #4]
   15998:	str	r2, [r3, #8]
   1599c:	str	ip, [r3, #12]
   159a0:	str	r2, [r3, #16]
   159a4:	bx	lr
   159a8:	.word	0x0004ee48
   159ac:	.word	0x0004c63c
   159b0:	.word	0x0004ee70
   159b4:	.word	0x0004c664
   159b8:	.word	0x0004ee24

000159bc <cflag_add>:
   159bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   159c0:	add	fp, sp, #24
   159c4:	mov	r8, r1
   159c8:	mov	r6, r0
   159cc:	ldr	r7, [pc, #92]	; 15a30 <cflag_add+0x74>
   159d0:	ldr	r7, [pc, r7]
   159d4:	ldr	r0, [r7, r0, lsl #3]
   159d8:	mov	r4, #0
   159dc:	ldr	r1, [pc, #80]	; 15a34 <cflag_add+0x78>
   159e0:	ldr	r1, [pc, r1]
   159e4:	cmp	r0, r1
   159e8:	ldrne	r2, [pc, #72]	; 15a38 <cflag_add+0x7c>
   159ec:	ldrne	r2, [pc, r2]
   159f0:	cmpne	r0, r2
   159f4:	bne	15a28 <cflag_add+0x6c>
   159f8:	cmp	r0, r1
   159fc:	bne	15a0c <cflag_add+0x50>
   15a00:	add	r5, r7, r6, lsl #3
   15a04:	bl	15a3c <find_cflag_slot>
   15a08:	str	r0, [r5, #4]
   15a0c:	add	r5, r7, r6, lsl #3
   15a10:	ldr	r0, [r5, #4]!
   15a14:	cmp	r0, #0
   15a18:	beq	15a28 <cflag_add+0x6c>
   15a1c:	str	r8, [r7, r6, lsl #3]
   15a20:	bl	df70 <construct_cflags_strings@plt>
   15a24:	ldr	r4, [r5]
   15a28:	mov	r0, r4
   15a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a30:	.word	0x000450c4
   15a34:	.word	0x00044f0c
   15a38:	.word	0x00045070

00015a3c <find_cflag_slot>:
   15a3c:	mov	r0, #0
   15a40:	ldr	r2, [pc, #48]	; 15a78 <find_cflag_slot+0x3c>
   15a44:	ldr	r2, [pc, r2]
   15a48:	mov	r1, #0
   15a4c:	ldr	r3, [r2, r0, lsl #2]
   15a50:	orr	r1, r3, r1
   15a54:	add	r0, r0, #1
   15a58:	cmp	r0, #256	; 0x100
   15a5c:	bne	15a4c <find_cflag_slot+0x10>
   15a60:	mov	r2, #1
   15a64:	mov	r0, r2
   15a68:	lsl	r2, r2, #1
   15a6c:	tst	r0, r1
   15a70:	bne	15a64 <find_cflag_slot+0x28>
   15a74:	bx	lr
   15a78:	.word	0x000450a0

00015a7c <cflag_orphan>:
   15a7c:	ldr	r1, [pc, #16]	; 15a94 <cflag_orphan+0x18>
   15a80:	ldr	r1, [pc, r1]
   15a84:	ldr	r2, [pc, #12]	; 15a98 <cflag_orphan+0x1c>
   15a88:	ldr	r2, [pc, r2]
   15a8c:	str	r2, [r1, r0, lsl #3]
   15a90:	b	14244 <construct_cflags_strings>
   15a94:	.word	0x00045014
   15a98:	.word	0x00044fd4

00015a9c <get_channel_access>:
   15a9c:	push	{fp, lr}
   15aa0:	mov	fp, sp
   15aa4:	sub	sp, sp, #32
   15aa8:	mov	ip, r0
   15aac:	ldrb	lr, [r0, #65]	; 0x41
   15ab0:	mov	r0, #2
   15ab4:	tst	lr, #32
   15ab8:	beq	15b0c <get_channel_access+0x70>
   15abc:	ldrh	lr, [ip, #80]	; 0x50
   15ac0:	cmp	lr, #64	; 0x40
   15ac4:	bne	15b0c <get_channel_access+0x70>
   15ac8:	ldr	r0, [fp, #8]
   15acc:	str	ip, [sp]
   15ad0:	stmib	sp, {r1, r2}
   15ad4:	mov	r1, #0
   15ad8:	str	r1, [sp, #12]
   15adc:	cmp	r2, #0
   15ae0:	ldrne	r1, [r2, #44]	; 0x2c
   15ae4:	andne	r1, r1, #2
   15ae8:	str	r3, [sp, #20]
   15aec:	str	r1, [sp, #16]
   15af0:	str	r0, [sp, #24]
   15af4:	ldr	r0, [pc, #24]	; 15b14 <get_channel_access+0x78>
   15af8:	ldr	r0, [pc, r0]
   15afc:	ldr	r0, [r0]
   15b00:	mov	r1, sp
   15b04:	bl	e654 <call_hook@plt>
   15b08:	ldr	r0, [sp, #16]
   15b0c:	mov	sp, fp
   15b10:	pop	{fp, pc}
   15b14:	.word	0x00044ea4

00015b18 <add_id>:
   15b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b1c:	add	fp, sp, #28
   15b20:	sub	sp, sp, #4
   15b24:	mov	r9, r3
   15b28:	mov	r5, r2
   15b2c:	mov	r4, r1
   15b30:	mov	r6, r0
   15b34:	mov	r0, r2
   15b38:	bl	dc94 <strlen@plt>
   15b3c:	add	r0, r0, #8
   15b40:	bic	r0, r0, #7
   15b44:	sub	r7, sp, r0
   15b48:	mov	sp, r7
   15b4c:	mov	r0, r7
   15b50:	mov	r1, r5
   15b54:	bl	d928 <strcpy@plt>
   15b58:	ldrb	r0, [r6, #65]	; 0x41
   15b5c:	ldr	r8, [fp, #8]
   15b60:	tst	r0, #32
   15b64:	beq	15be8 <add_id+0xd0>
   15b68:	ldrh	r0, [r6, #80]	; 0x50
   15b6c:	cmp	r0, #64	; 0x40
   15b70:	bne	15be8 <add_id+0xd0>
   15b74:	ldrb	r0, [r4, #13]
   15b78:	ldr	r1, [pc, #396]	; 15d0c <add_id+0x1f4>
   15b7c:	ldr	r1, [pc, r1]
   15b80:	add	r2, r1, #28
   15b84:	tst	r0, #1
   15b88:	addeq	r2, r1, #24
   15b8c:	ldr	r0, [r2]
   15b90:	ldr	r1, [r4, #168]	; 0xa8
   15b94:	ldr	r2, [r4, #180]	; 0xb4
   15b98:	add	r1, r2, r1
   15b9c:	ldr	r2, [r4, #192]	; 0xc0
   15ba0:	add	r1, r1, r2
   15ba4:	ldr	r2, [r4, #204]	; 0xcc
   15ba8:	add	r1, r1, r2
   15bac:	cmp	r1, r0
   15bb0:	bcs	15cd0 <add_id+0x1b8>
   15bb4:	ldr	r5, [r8]
   15bb8:	cmp	r5, #0
   15bbc:	beq	15c18 <add_id+0x100>
   15bc0:	ldr	r0, [r5]
   15bc4:	ldr	r0, [r0]
   15bc8:	mov	r1, r7
   15bcc:	bl	d154 <mask_match@plt>
   15bd0:	cmp	r0, #0
   15bd4:	bne	15cfc <add_id+0x1e4>
   15bd8:	ldr	r5, [r5, #8]
   15bdc:	cmp	r5, #0
   15be0:	bne	15bc0 <add_id+0xa8>
   15be4:	b	15c18 <add_id+0x100>
   15be8:	ldr	r5, [r8]
   15bec:	cmp	r5, #0
   15bf0:	beq	15c18 <add_id+0x100>
   15bf4:	ldr	r0, [r5]
   15bf8:	ldr	r0, [r0]
   15bfc:	mov	r1, r7
   15c00:	bl	e750 <irccmp@plt>
   15c04:	cmp	r0, #0
   15c08:	beq	15cfc <add_id+0x1e4>
   15c0c:	ldr	r5, [r5, #8]
   15c10:	cmp	r5, #0
   15c14:	bne	15bf4 <add_id+0xdc>
   15c18:	ldr	sl, [fp, #12]
   15c1c:	ldrh	r0, [r6, #80]	; 0x50
   15c20:	cmp	r0, #64	; 0x40
   15c24:	bne	15c64 <add_id+0x14c>
   15c28:	ldr	r0, [r6, #24]
   15c2c:	cmp	r0, #0
   15c30:	beq	15c64 <add_id+0x14c>
   15c34:	sub	sp, sp, #8
   15c38:	add	r0, r6, #163	; 0xa3
   15c3c:	str	r0, [sp]
   15c40:	add	r2, r6, #88	; 0x58
   15c44:	add	r3, r6, #152	; 0x98
   15c48:	ldr	r0, [pc, #200]	; 15d18 <add_id+0x200>
   15c4c:	add	r0, pc, r0
   15c50:	ldr	r1, [pc, #196]	; 15d1c <add_id+0x204>
   15c54:	add	r1, pc, r1
   15c58:	bl	e3a8 <sprintf@plt>
   15c5c:	add	sp, sp, #8
   15c60:	b	15c78 <add_id+0x160>
   15c64:	add	r1, r6, #88	; 0x58
   15c68:	ldr	r0, [pc, #176]	; 15d20 <add_id+0x208>
   15c6c:	add	r0, pc, r0
   15c70:	mov	r2, #141	; 0x8d
   15c74:	bl	e510 <rb_strlcpy@plt>
   15c78:	ldr	r1, [pc, #164]	; 15d24 <add_id+0x20c>
   15c7c:	add	r1, pc, r1
   15c80:	mov	r0, r7
   15c84:	mov	r2, r9
   15c88:	bl	d880 <allocate_ban@plt>
   15c8c:	mov	r5, r0
   15c90:	bl	d07c <rb_current_time@plt>
   15c94:	str	r0, [r5, #8]
   15c98:	add	r1, r5, #16
   15c9c:	mov	r0, r5
   15ca0:	mov	r2, r8
   15ca4:	bl	15d28 <rb_dlinkAdd>
   15ca8:	mov	r5, #1
   15cac:	cmp	sl, #-2147483648	; 0x80000000
   15cb0:	cmpne	sl, #536870912	; 0x20000000
   15cb4:	bne	15cc4 <add_id+0x1ac>
   15cb8:	bl	d07c <rb_current_time@plt>
   15cbc:	str	r0, [r4, #228]	; 0xe4
   15cc0:	b	15d00 <add_id+0x1e8>
   15cc4:	cmp	sl, #268435456	; 0x10000000
   15cc8:	beq	15cb8 <add_id+0x1a0>
   15ccc:	b	15d00 <add_id+0x1e8>
   15cd0:	ldr	r0, [r4, #236]	; 0xec
   15cd4:	push	{r0, r7}
   15cd8:	add	r3, r6, #88	; 0x58
   15cdc:	ldr	r0, [pc, #44]	; 15d10 <add_id+0x1f8>
   15ce0:	ldr	r0, [pc, r0]
   15ce4:	add	r2, r0, #88	; 0x58
   15ce8:	ldr	r1, [pc, #36]	; 15d14 <add_id+0x1fc>
   15cec:	add	r1, pc, r1
   15cf0:	mov	r0, r6
   15cf4:	bl	d1e4 <sendto_one@plt>
   15cf8:	add	sp, sp, #8
   15cfc:	mov	r5, #0
   15d00:	mov	r0, r5
   15d04:	sub	sp, fp, #28
   15d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d0c:	.word	0x00044f9c
   15d10:	.word	0x00044e78
   15d14:	.word	0x0002af45
   15d18:	.word	0x0004c2d0
   15d1c:	.word	0x0002b008
   15d20:	.word	0x0004c2b0
   15d24:	.word	0x0004c2a0

00015d28 <rb_dlinkAdd>:
   15d28:	push	{fp, lr}
   15d2c:	mov	fp, sp
   15d30:	cmp	r0, #0
   15d34:	beq	15d94 <rb_dlinkAdd+0x6c>
   15d38:	cmp	r1, #0
   15d3c:	beq	15db4 <rb_dlinkAdd+0x8c>
   15d40:	cmp	r2, #0
   15d44:	beq	15dd4 <rb_dlinkAdd+0xac>
   15d48:	mov	r3, #0
   15d4c:	stm	r1, {r0, r3}
   15d50:	ldr	r0, [r2]
   15d54:	str	r0, [r1, #8]
   15d58:	ldr	r0, [r2]
   15d5c:	cmp	r0, #0
   15d60:	beq	15d70 <rb_dlinkAdd+0x48>
   15d64:	add	r0, r0, #4
   15d68:	str	r1, [r0]
   15d6c:	b	15d80 <rb_dlinkAdd+0x58>
   15d70:	mov	r0, r2
   15d74:	ldr	r3, [r0, #4]!
   15d78:	cmp	r3, #0
   15d7c:	streq	r1, [r0]
   15d80:	str	r1, [r2]
   15d84:	ldr	r0, [r2, #8]
   15d88:	add	r0, r0, #1
   15d8c:	str	r0, [r2, #8]
   15d90:	pop	{fp, pc}
   15d94:	ldr	r0, [pc, #88]	; 15df4 <rb_dlinkAdd+0xcc>
   15d98:	add	r0, pc, r0
   15d9c:	ldr	r1, [pc, #84]	; 15df8 <rb_dlinkAdd+0xd0>
   15da0:	add	r1, pc, r1
   15da4:	ldr	r3, [pc, #80]	; 15dfc <rb_dlinkAdd+0xd4>
   15da8:	add	r3, pc, r3
   15dac:	mov	r2, #143	; 0x8f
   15db0:	bl	e7e0 <__assert_fail@plt>
   15db4:	ldr	r0, [pc, #68]	; 15e00 <rb_dlinkAdd+0xd8>
   15db8:	add	r0, pc, r0
   15dbc:	ldr	r1, [pc, #64]	; 15e04 <rb_dlinkAdd+0xdc>
   15dc0:	add	r1, pc, r1
   15dc4:	ldr	r3, [pc, #60]	; 15e08 <rb_dlinkAdd+0xe0>
   15dc8:	add	r3, pc, r3
   15dcc:	mov	r2, #144	; 0x90
   15dd0:	bl	e7e0 <__assert_fail@plt>
   15dd4:	ldr	r0, [pc, #48]	; 15e0c <rb_dlinkAdd+0xe4>
   15dd8:	add	r0, pc, r0
   15ddc:	ldr	r1, [pc, #44]	; 15e10 <rb_dlinkAdd+0xe8>
   15de0:	add	r1, pc, r1
   15de4:	ldr	r3, [pc, #40]	; 15e14 <rb_dlinkAdd+0xec>
   15de8:	add	r3, pc, r3
   15dec:	mov	r2, #145	; 0x91
   15df0:	bl	e7e0 <__assert_fail@plt>
   15df4:	.word	0x0002a879
   15df8:	.word	0x0002a816
   15dfc:	.word	0x0002a876
   15e00:	.word	0x0002a7f4
   15e04:	.word	0x0002a7f6
   15e08:	.word	0x0002a856
   15e0c:	.word	0x0003006d
   15e10:	.word	0x0002a7d6
   15e14:	.word	0x0002a836

00015e18 <del_id>:
   15e18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e1c:	add	fp, sp, #24
   15e20:	cmp	r1, #0
   15e24:	beq	15e74 <del_id+0x5c>
   15e28:	mov	r4, r1
   15e2c:	mov	r8, r0
   15e30:	ldrb	r0, [r1]
   15e34:	cmp	r0, #0
   15e38:	beq	15e74 <del_id+0x5c>
   15e3c:	mov	r7, r2
   15e40:	ldr	r5, [r2]
   15e44:	cmp	r5, #0
   15e48:	beq	15e74 <del_id+0x5c>
   15e4c:	mov	r9, r3
   15e50:	ldr	r6, [r5]
   15e54:	ldr	r1, [r6]
   15e58:	mov	r0, r4
   15e5c:	bl	e750 <irccmp@plt>
   15e60:	cmp	r0, #0
   15e64:	beq	15e80 <del_id+0x68>
   15e68:	ldr	r5, [r5, #8]
   15e6c:	cmp	r5, #0
   15e70:	bne	15e50 <del_id+0x38>
   15e74:	mov	r6, #0
   15e78:	mov	r0, r6
   15e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e80:	add	r0, r6, #16
   15e84:	mov	r1, r7
   15e88:	bl	15eb8 <rb_dlinkDelete>
   15e8c:	cmp	r9, #-2147483648	; 0x80000000
   15e90:	cmpne	r9, #536870912	; 0x20000000
   15e94:	bne	15ea8 <del_id+0x90>
   15e98:	bl	d07c <rb_current_time@plt>
   15e9c:	str	r0, [r8, #228]	; 0xe4
   15ea0:	mov	r0, r6
   15ea4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ea8:	cmp	r9, #268435456	; 0x10000000
   15eac:	beq	15e98 <del_id+0x80>
   15eb0:	mov	r0, r6
   15eb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015eb8 <rb_dlinkDelete>:
   15eb8:	push	{fp, lr}
   15ebc:	mov	fp, sp
   15ec0:	cmp	r0, #0
   15ec4:	beq	15f18 <rb_dlinkDelete+0x60>
   15ec8:	cmp	r1, #0
   15ecc:	beq	15f38 <rb_dlinkDelete+0x80>
   15ed0:	ldr	ip, [r0, #4]
   15ed4:	ldr	r3, [r0, #8]
   15ed8:	add	r2, r3, #4
   15edc:	cmp	r3, #0
   15ee0:	addeq	r2, r1, #4
   15ee4:	str	ip, [r2]
   15ee8:	ldmib	r0, {r2, ip}
   15eec:	cmp	r2, #0
   15ef0:	mov	r3, r1
   15ef4:	addne	r3, r2, #8
   15ef8:	str	ip, [r3]
   15efc:	mov	r2, #0
   15f00:	str	r2, [r0, #4]
   15f04:	str	r2, [r0, #8]
   15f08:	ldr	r0, [r1, #8]
   15f0c:	sub	r0, r0, #1
   15f10:	str	r0, [r1, #8]
   15f14:	pop	{fp, pc}
   15f18:	ldr	r0, [pc, #56]	; 15f58 <rb_dlinkDelete+0xa0>
   15f1c:	add	r0, pc, r0
   15f20:	ldr	r1, [pc, #52]	; 15f5c <rb_dlinkDelete+0xa4>
   15f24:	add	r1, pc, r1
   15f28:	ldr	r3, [pc, #48]	; 15f60 <rb_dlinkDelete+0xa8>
   15f2c:	add	r3, pc, r3
   15f30:	mov	r2, #235	; 0xeb
   15f34:	bl	e7e0 <__assert_fail@plt>
   15f38:	ldr	r0, [pc, #36]	; 15f64 <rb_dlinkDelete+0xac>
   15f3c:	add	r0, pc, r0
   15f40:	ldr	r1, [pc, #32]	; 15f68 <rb_dlinkDelete+0xb0>
   15f44:	add	r1, pc, r1
   15f48:	ldr	r3, [pc, #28]	; 15f6c <rb_dlinkDelete+0xb4>
   15f4c:	add	r3, pc, r3
   15f50:	mov	r2, #236	; 0xec
   15f54:	bl	e7e0 <__assert_fail@plt>
   15f58:	.word	0x0002a690
   15f5c:	.word	0x0002a692
   15f60:	.word	0x0002a72d
   15f64:	.word	0x0002ff09
   15f68:	.word	0x0002a672
   15f6c:	.word	0x0002a70d

00015f70 <chm_simple>:
   15f70:	push	{r4, r5, r6, sl, fp, lr}
   15f74:	add	fp, sp, #16
   15f78:	sub	sp, sp, #8
   15f7c:	mov	r4, r1
   15f80:	mov	r5, r0
   15f84:	ldr	r6, [fp, #24]
   15f88:	str	r6, [sp]
   15f8c:	ldr	r3, [fp, #16]
   15f90:	bl	160cc <allow_mode_change>
   15f94:	cmp	r0, #0
   15f98:	beq	16094 <chm_simple+0x124>
   15f9c:	ldr	r0, [r5, #64]	; 0x40
   15fa0:	ands	r1, r0, #8192	; 0x2000
   15fa4:	beq	15fd4 <chm_simple+0x64>
   15fa8:	ldrh	r0, [r5, #80]	; 0x50
   15fac:	cmp	r0, #64	; 0x40
   15fb0:	bne	15fd4 <chm_simple+0x64>
   15fb4:	ldr	r0, [pc, #240]	; 160ac <chm_simple+0x13c>
   15fb8:	ldr	r0, [pc, r0]
   15fbc:	add	r2, r0, #1
   15fc0:	ldr	r3, [pc, #232]	; 160b0 <chm_simple+0x140>
   15fc4:	add	r3, pc, r3
   15fc8:	str	r2, [r3]
   15fcc:	cmp	r0, #45	; 0x2d
   15fd0:	bgt	16094 <chm_simple+0x124>
   15fd4:	ldr	r0, [fp, #28]
   15fd8:	ldr	r2, [fp, #20]
   15fdc:	cmn	r2, #1
   15fe0:	beq	16040 <chm_simple+0xd0>
   15fe4:	cmp	r2, #1
   15fe8:	ldreq	r2, [r4, #12]
   15fec:	tsteq	r2, r0
   15ff0:	bne	16094 <chm_simple+0x124>
   15ff4:	cmp	r1, #0
   15ff8:	beq	16018 <chm_simple+0xa8>
   15ffc:	ldr	r1, [pc, #176]	; 160b4 <chm_simple+0x144>
   16000:	ldr	r1, [pc, r1]
   16004:	ldr	r1, [r1, #8]
   16008:	cmp	r1, #0
   1600c:	ldrheq	r1, [r5, #80]	; 0x50
   16010:	cmpeq	r1, #64	; 0x40
   16014:	beq	1609c <chm_simple+0x12c>
   16018:	orr	r0, r2, r0
   1601c:	str	r0, [r4, #12]
   16020:	ldr	r0, [pc, #144]	; 160b8 <chm_simple+0x148>
   16024:	ldr	r0, [pc, r0]
   16028:	add	r1, r0, r0, lsl #2
   1602c:	ldr	r2, [pc, #136]	; 160bc <chm_simple+0x14c>
   16030:	add	r2, pc, r2
   16034:	strb	r6, [r2, r1, lsl #2]!
   16038:	mov	r1, #1
   1603c:	b	16070 <chm_simple+0x100>
   16040:	ldr	r1, [r4, #12]
   16044:	tst	r1, r0
   16048:	beq	16094 <chm_simple+0x124>
   1604c:	bic	r0, r1, r0
   16050:	str	r0, [r4, #12]
   16054:	ldr	r0, [pc, #100]	; 160c0 <chm_simple+0x150>
   16058:	ldr	r0, [pc, r0]
   1605c:	add	r1, r0, r0, lsl #2
   16060:	ldr	r2, [pc, #92]	; 160c4 <chm_simple+0x154>
   16064:	add	r2, pc, r2
   16068:	strb	r6, [r2, r1, lsl #2]!
   1606c:	mvn	r1, #0
   16070:	mov	r3, #0
   16074:	add	r0, r0, #1
   16078:	ldr	r6, [pc, #72]	; 160c8 <chm_simple+0x158>
   1607c:	add	r6, pc, r6
   16080:	str	r0, [r6]
   16084:	str	r3, [r2, #4]
   16088:	str	r3, [r2, #8]
   1608c:	str	r1, [r2, #12]
   16090:	str	r3, [r2, #16]
   16094:	sub	sp, fp, #16
   16098:	pop	{r4, r5, r6, sl, fp, pc}
   1609c:	cmp	r6, #70	; 0x46
   160a0:	cmpne	r6, #81	; 0x51
   160a4:	beq	16094 <chm_simple+0x124>
   160a8:	b	16018 <chm_simple+0xa8>
   160ac:	.word	0x0004bff4
   160b0:	.word	0x0004bfe8
   160b4:	.word	0x00044b18
   160b8:	.word	0x0004e78c
   160bc:	.word	0x0004bf80
   160c0:	.word	0x0004e758
   160c4:	.word	0x0004bf4c
   160c8:	.word	0x0004e734

000160cc <allow_mode_change>:
   160cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   160d0:	add	fp, sp, #24
   160d4:	sub	sp, sp, #8
   160d8:	mov	r4, r3
   160dc:	mov	r7, r2
   160e0:	mov	r6, r1
   160e4:	mov	r5, r0
   160e8:	ldrb	r0, [r0, #65]	; 0x41
   160ec:	tst	r0, #32
   160f0:	beq	16158 <allow_mode_change+0x8c>
   160f4:	ldrh	r0, [r5, #80]	; 0x50
   160f8:	cmp	r0, #64	; 0x40
   160fc:	bne	16158 <allow_mode_change+0x8c>
   16100:	ldr	r8, [r6, #104]	; 0x68
   16104:	cmp	r8, #0
   16108:	beq	16158 <allow_mode_change+0x8c>
   1610c:	ldr	r9, [fp, #8]
   16110:	mov	r0, r8
   16114:	mov	r1, r9
   16118:	bl	dce8 <strchr@plt>
   1611c:	cmp	r0, #0
   16120:	beq	16158 <allow_mode_change+0x8c>
   16124:	ldrb	r0, [r4, #1]
   16128:	mov	r7, #8192	; 0x2000
   1612c:	tst	r0, #32
   16130:	bne	1619c <allow_mode_change+0xd0>
   16134:	ldr	r3, [r6, #236]	; 0xec
   16138:	str	r9, [sp]
   1613c:	str	r8, [sp, #4]
   16140:	ldr	r2, [pc, #108]	; 161b4 <allow_mode_change+0xe8>
   16144:	add	r2, pc, r2
   16148:	mov	r0, r5
   1614c:	movw	r1, #742	; 0x2e6
   16150:	bl	dc88 <sendto_one_numeric@plt>
   16154:	b	1619c <allow_mode_change+0xd0>
   16158:	mov	r0, #1
   1615c:	cmp	r7, #1
   16160:	bgt	161ac <allow_mode_change+0xe0>
   16164:	ldrb	r0, [r4]
   16168:	mov	r7, #2
   1616c:	tst	r0, #2
   16170:	bne	1619c <allow_mode_change+0xd0>
   16174:	ldr	r0, [r6, #236]	; 0xec
   16178:	str	r0, [sp]
   1617c:	add	r3, r5, #88	; 0x58
   16180:	ldr	r0, [pc, #48]	; 161b8 <allow_mode_change+0xec>
   16184:	ldr	r0, [pc, r0]
   16188:	add	r2, r0, #88	; 0x58
   1618c:	ldr	r1, [pc, #40]	; 161bc <allow_mode_change+0xf0>
   16190:	add	r1, pc, r1
   16194:	mov	r0, r5
   16198:	bl	d1e4 <sendto_one@plt>
   1619c:	ldr	r0, [r4]
   161a0:	orr	r0, r0, r7
   161a4:	str	r0, [r4]
   161a8:	mov	r0, #0
   161ac:	sub	sp, fp, #24
   161b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161b4:	.word	0x0002ae36
   161b8:	.word	0x000449d4
   161bc:	.word	0x0002acbe

000161c0 <chm_hidden>:
   161c0:	push	{r4, r5, r6, r7, fp, lr}
   161c4:	add	fp, sp, #16
   161c8:	sub	sp, sp, #8
   161cc:	mov	r4, r1
   161d0:	mov	r5, r0
   161d4:	ldrb	r0, [r0, #65]	; 0x41
   161d8:	ldr	r6, [fp, #16]
   161dc:	tst	r0, #32
   161e0:	beq	16260 <chm_hidden+0xa0>
   161e4:	ldrh	r0, [r5, #80]	; 0x50
   161e8:	cmp	r0, #64	; 0x40
   161ec:	bne	16260 <chm_hidden+0xa0>
   161f0:	ldr	r0, [r5, #24]
   161f4:	cmp	r0, #0
   161f8:	ldrne	r0, [r0, #36]	; 0x24
   161fc:	cmpne	r0, #0
   16200:	bne	1623c <chm_hidden+0x7c>
   16204:	ldrb	r0, [r5, #57]	; 0x39
   16208:	tst	r0, #16
   1620c:	ldrne	r0, [r5, #24]
   16210:	cmpne	r0, #0
   16214:	bne	16254 <chm_hidden+0x94>
   16218:	ldrb	r0, [r6, #1]
   1621c:	tst	r0, #4
   16220:	bne	162f4 <chm_hidden+0x134>
   16224:	ldr	r2, [pc, #516]	; 16430 <chm_hidden+0x270>
   16228:	add	r2, pc, r2
   1622c:	mov	r0, r5
   16230:	movw	r1, #481	; 0x1e1
   16234:	bl	dc88 <sendto_one_numeric@plt>
   16238:	b	162f4 <chm_hidden+0x134>
   1623c:	ldr	r1, [pc, #488]	; 1642c <chm_hidden+0x26c>
   16240:	add	r1, pc, r1
   16244:	bl	e594 <privilegeset_in_set@plt>
   16248:	cmp	r0, #0
   1624c:	bne	16260 <chm_hidden+0xa0>
   16250:	b	16204 <chm_hidden+0x44>
   16254:	ldr	r0, [r0, #36]	; 0x24
   16258:	cmp	r0, #0
   1625c:	bne	16218 <chm_hidden+0x58>
   16260:	add	r7, r5, #64	; 0x40
   16264:	ldrb	r0, [r7, #1]
   16268:	tst	r0, #32
   1626c:	beq	1631c <chm_hidden+0x15c>
   16270:	ldrh	r0, [r5, #80]	; 0x50
   16274:	cmp	r0, #64	; 0x40
   16278:	bne	1631c <chm_hidden+0x15c>
   1627c:	ldr	r0, [r5, #24]
   16280:	cmp	r0, #0
   16284:	beq	162bc <chm_hidden+0xfc>
   16288:	ldr	r0, [r0, #36]	; 0x24
   1628c:	cmp	r0, #0
   16290:	beq	162a8 <chm_hidden+0xe8>
   16294:	ldr	r1, [pc, #408]	; 16434 <chm_hidden+0x274>
   16298:	add	r1, pc, r1
   1629c:	bl	e594 <privilegeset_in_set@plt>
   162a0:	cmp	r0, #0
   162a4:	bne	1631c <chm_hidden+0x15c>
   162a8:	ldr	r0, [r5, #24]
   162ac:	cmp	r0, #0
   162b0:	ldrne	r0, [r0, #36]	; 0x24
   162b4:	cmpne	r0, #0
   162b8:	bne	16308 <chm_hidden+0x148>
   162bc:	ldrb	r0, [r6, #1]
   162c0:	tst	r0, #4
   162c4:	bne	162f4 <chm_hidden+0x134>
   162c8:	ldr	r0, [pc, #364]	; 1643c <chm_hidden+0x27c>
   162cc:	add	r0, pc, r0
   162d0:	str	r0, [sp]
   162d4:	add	r3, r5, #88	; 0x58
   162d8:	ldr	r0, [pc, #352]	; 16440 <chm_hidden+0x280>
   162dc:	ldr	r0, [pc, r0]
   162e0:	add	r2, r0, #88	; 0x58
   162e4:	ldr	r1, [pc, #344]	; 16444 <chm_hidden+0x284>
   162e8:	add	r1, pc, r1
   162ec:	mov	r0, r5
   162f0:	bl	d1e4 <sendto_one@plt>
   162f4:	ldr	r0, [r6]
   162f8:	orr	r0, r0, #1024	; 0x400
   162fc:	str	r0, [r6]
   16300:	sub	sp, fp, #16
   16304:	pop	{r4, r5, r6, r7, fp, pc}
   16308:	ldr	r1, [pc, #296]	; 16438 <chm_hidden+0x278>
   1630c:	add	r1, pc, r1
   16310:	bl	e594 <privilegeset_in_set@plt>
   16314:	cmp	r0, #0
   16318:	beq	162bc <chm_hidden+0xfc>
   1631c:	ldrb	r0, [r7, #1]
   16320:	tst	r0, #32
   16324:	beq	16354 <chm_hidden+0x194>
   16328:	ldrh	r0, [r5, #80]	; 0x50
   1632c:	cmp	r0, #64	; 0x40
   16330:	bne	16354 <chm_hidden+0x194>
   16334:	ldr	r0, [pc, #268]	; 16448 <chm_hidden+0x288>
   16338:	ldr	r0, [pc, r0]
   1633c:	add	r1, r0, #1
   16340:	ldr	r2, [pc, #260]	; 1644c <chm_hidden+0x28c>
   16344:	add	r2, pc, r2
   16348:	str	r1, [r2]
   1634c:	cmp	r0, #45	; 0x2d
   16350:	bgt	16424 <chm_hidden+0x264>
   16354:	ldr	r1, [fp, #28]
   16358:	ldr	r0, [fp, #24]
   1635c:	ldr	r2, [fp, #20]
   16360:	cmn	r2, #1
   16364:	beq	163cc <chm_hidden+0x20c>
   16368:	cmp	r2, #1
   1636c:	ldreq	r2, [r4, #12]
   16370:	tsteq	r2, r1
   16374:	bne	16424 <chm_hidden+0x264>
   16378:	orr	r1, r2, r1
   1637c:	str	r1, [r4, #12]
   16380:	ldr	r1, [pc, #200]	; 16450 <chm_hidden+0x290>
   16384:	ldr	r1, [pc, r1]
   16388:	add	r2, r1, r1, lsl #2
   1638c:	ldr	r3, [pc, #192]	; 16454 <chm_hidden+0x294>
   16390:	add	r3, pc, r3
   16394:	strb	r0, [r3, r2, lsl #2]!
   16398:	mov	r0, #1
   1639c:	mov	r2, #0
   163a0:	mov	r7, #64	; 0x40
   163a4:	add	r1, r1, #1
   163a8:	ldr	r6, [pc, #168]	; 16458 <chm_hidden+0x298>
   163ac:	add	r6, pc, r6
   163b0:	str	r1, [r6]
   163b4:	str	r2, [r3, #4]
   163b8:	str	r2, [r3, #8]
   163bc:	str	r0, [r3, #12]
   163c0:	str	r7, [r3, #16]
   163c4:	sub	sp, fp, #16
   163c8:	pop	{r4, r5, r6, r7, fp, pc}
   163cc:	ldr	r2, [r4, #12]
   163d0:	tst	r2, r1
   163d4:	beq	16424 <chm_hidden+0x264>
   163d8:	bic	r1, r2, r1
   163dc:	str	r1, [r4, #12]
   163e0:	ldr	r1, [pc, #116]	; 1645c <chm_hidden+0x29c>
   163e4:	ldr	r1, [pc, r1]
   163e8:	add	r2, r1, r1, lsl #2
   163ec:	ldr	r3, [pc, #108]	; 16460 <chm_hidden+0x2a0>
   163f0:	add	r3, pc, r3
   163f4:	strb	r0, [r3, r2, lsl #2]!
   163f8:	mvn	r0, #0
   163fc:	mov	r2, #64	; 0x40
   16400:	mov	r7, #0
   16404:	add	r1, r1, #1
   16408:	ldr	r6, [pc, #84]	; 16464 <chm_hidden+0x2a4>
   1640c:	add	r6, pc, r6
   16410:	str	r1, [r6]
   16414:	str	r7, [r3, #4]
   16418:	str	r7, [r3, #8]
   1641c:	str	r0, [r3, #12]
   16420:	str	r2, [r3, #16]
   16424:	sub	sp, fp, #16
   16428:	pop	{r4, r5, r6, r7, fp, pc}
   1642c:	.word	0x0002aa52
   16430:	.word	0x0002aa77
   16434:	.word	0x0002aa37
   16438:	.word	0x0002a9ce
   1643c:	.word	0x0002aa08
   16440:	.word	0x0004487c
   16444:	.word	0x0002aa04
   16448:	.word	0x0004bc74
   1644c:	.word	0x0004bc68
   16450:	.word	0x0004e42c
   16454:	.word	0x0004bc20
   16458:	.word	0x0004e404
   1645c:	.word	0x0004e3cc
   16460:	.word	0x0004bbc0
   16464:	.word	0x0004e3a4

00016468 <chm_staff>:
   16468:	push	{r4, r5, r6, sl, fp, lr}
   1646c:	add	fp, sp, #16
   16470:	sub	sp, sp, #8
   16474:	mov	r4, r1
   16478:	mov	r5, r0
   1647c:	ldrb	r0, [r0, #65]	; 0x41
   16480:	tst	r0, #32
   16484:	beq	16544 <chm_staff+0xdc>
   16488:	ldr	r6, [fp, #16]
   1648c:	ldrh	r0, [r5, #80]	; 0x50
   16490:	cmp	r0, #64	; 0x40
   16494:	ldrbeq	r0, [r5, #57]	; 0x39
   16498:	tsteq	r0, #16
   1649c:	beq	164fc <chm_staff+0x94>
   164a0:	ldrh	r0, [r5, #80]	; 0x50
   164a4:	cmp	r0, #64	; 0x40
   164a8:	bne	16544 <chm_staff+0xdc>
   164ac:	ldr	r0, [r5, #24]
   164b0:	cmp	r0, #0
   164b4:	ldrne	r0, [r0, #36]	; 0x24
   164b8:	cmpne	r0, #0
   164bc:	bne	16530 <chm_staff+0xc8>
   164c0:	ldrb	r0, [r6, #1]
   164c4:	tst	r0, #4
   164c8:	bne	1651c <chm_staff+0xb4>
   164cc:	ldr	r0, [pc, #348]	; 16630 <chm_staff+0x1c8>
   164d0:	add	r0, pc, r0
   164d4:	str	r0, [sp]
   164d8:	add	r3, r5, #88	; 0x58
   164dc:	ldr	r0, [pc, #336]	; 16634 <chm_staff+0x1cc>
   164e0:	ldr	r0, [pc, r0]
   164e4:	add	r2, r0, #88	; 0x58
   164e8:	ldr	r1, [pc, #328]	; 16638 <chm_staff+0x1d0>
   164ec:	add	r1, pc, r1
   164f0:	mov	r0, r5
   164f4:	bl	d1e4 <sendto_one@plt>
   164f8:	b	1651c <chm_staff+0xb4>
   164fc:	ldrb	r0, [r6, #1]
   16500:	tst	r0, #4
   16504:	bne	1651c <chm_staff+0xb4>
   16508:	ldr	r2, [pc, #280]	; 16628 <chm_staff+0x1c0>
   1650c:	add	r2, pc, r2
   16510:	mov	r0, r5
   16514:	movw	r1, #481	; 0x1e1
   16518:	bl	dc88 <sendto_one_numeric@plt>
   1651c:	ldr	r0, [r6]
   16520:	orr	r0, r0, #1024	; 0x400
   16524:	str	r0, [r6]
   16528:	sub	sp, fp, #16
   1652c:	pop	{r4, r5, r6, sl, fp, pc}
   16530:	ldr	r1, [pc, #244]	; 1662c <chm_staff+0x1c4>
   16534:	add	r1, pc, r1
   16538:	bl	e594 <privilegeset_in_set@plt>
   1653c:	cmp	r0, #0
   16540:	beq	164c0 <chm_staff+0x58>
   16544:	add	r0, r5, #64	; 0x40
   16548:	ldrb	r0, [r0, #1]
   1654c:	tst	r0, #32
   16550:	beq	16580 <chm_staff+0x118>
   16554:	ldrh	r0, [r5, #80]	; 0x50
   16558:	cmp	r0, #64	; 0x40
   1655c:	bne	16580 <chm_staff+0x118>
   16560:	ldr	r0, [pc, #212]	; 1663c <chm_staff+0x1d4>
   16564:	ldr	r0, [pc, r0]
   16568:	add	r1, r0, #1
   1656c:	ldr	r2, [pc, #204]	; 16640 <chm_staff+0x1d8>
   16570:	add	r2, pc, r2
   16574:	str	r1, [r2]
   16578:	cmp	r0, #45	; 0x2d
   1657c:	bgt	16620 <chm_staff+0x1b8>
   16580:	ldr	r1, [fp, #28]
   16584:	ldr	r0, [fp, #24]
   16588:	ldr	r2, [fp, #20]
   1658c:	cmn	r2, #1
   16590:	beq	165cc <chm_staff+0x164>
   16594:	cmp	r2, #1
   16598:	ldreq	r2, [r4, #12]
   1659c:	tsteq	r2, r1
   165a0:	bne	16620 <chm_staff+0x1b8>
   165a4:	orr	r1, r2, r1
   165a8:	str	r1, [r4, #12]
   165ac:	ldr	r1, [pc, #144]	; 16644 <chm_staff+0x1dc>
   165b0:	ldr	r1, [pc, r1]
   165b4:	add	r2, r1, r1, lsl #2
   165b8:	ldr	r3, [pc, #136]	; 16648 <chm_staff+0x1e0>
   165bc:	add	r3, pc, r3
   165c0:	strb	r0, [r3, r2, lsl #2]!
   165c4:	mov	r0, #1
   165c8:	b	165fc <chm_staff+0x194>
   165cc:	ldr	r2, [r4, #12]
   165d0:	tst	r2, r1
   165d4:	beq	16620 <chm_staff+0x1b8>
   165d8:	bic	r1, r2, r1
   165dc:	str	r1, [r4, #12]
   165e0:	ldr	r1, [pc, #100]	; 1664c <chm_staff+0x1e4>
   165e4:	ldr	r1, [pc, r1]
   165e8:	add	r2, r1, r1, lsl #2
   165ec:	ldr	r3, [pc, #92]	; 16650 <chm_staff+0x1e8>
   165f0:	add	r3, pc, r3
   165f4:	strb	r0, [r3, r2, lsl #2]!
   165f8:	mvn	r0, #0
   165fc:	mov	r2, #0
   16600:	add	r1, r1, #1
   16604:	ldr	r6, [pc, #72]	; 16654 <chm_staff+0x1ec>
   16608:	add	r6, pc, r6
   1660c:	str	r1, [r6]
   16610:	str	r2, [r3, #4]
   16614:	str	r2, [r3, #8]
   16618:	str	r0, [r3, #12]
   1661c:	str	r2, [r3, #16]
   16620:	sub	sp, fp, #16
   16624:	pop	{r4, r5, r6, sl, fp, pc}
   16628:	.word	0x0002a793
   1662c:	.word	0x0002a7df
   16630:	.word	0x0002a848
   16634:	.word	0x00044678
   16638:	.word	0x0002a800
   1663c:	.word	0x0004ba48
   16640:	.word	0x0004ba3c
   16644:	.word	0x0004e200
   16648:	.word	0x0004b9f4
   1664c:	.word	0x0004e1cc
   16650:	.word	0x0004b9c0
   16654:	.word	0x0004e1a8

00016658 <pretty_mask>:
   16658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1665c:	add	fp, sp, #28
   16660:	sub	sp, sp, #20
   16664:	mov	r4, r0
   16668:	bl	dc94 <strlen@plt>
   1666c:	add	r0, r0, #8
   16670:	bic	r0, r0, #7
   16674:	sub	r5, sp, r0
   16678:	mov	sp, r5
   1667c:	mov	r0, r5
   16680:	mov	r1, r4
   16684:	bl	d928 <strcpy@plt>
   16688:	mov	r0, r5
   1668c:	bl	174a8 <check_string>
   16690:	mov	r4, r0
   16694:	bl	e108 <collapse@plt>
   16698:	mov	r0, r4
   1669c:	bl	dc94 <strlen@plt>
   166a0:	mov	r5, r0
   166a4:	add	r0, r0, #5
   166a8:	ldr	r9, [pc, #972]	; 16a7c <pretty_mask+0x424>
   166ac:	ldr	r9, [pc, r9]
   166b0:	rsb	r1, r9, #512	; 0x200
   166b4:	mov	r6, #0
   166b8:	cmp	r1, r0
   166bc:	bcc	1699c <pretty_mask+0x344>
   166c0:	ldrb	r0, [r4]
   166c4:	cmp	r0, #36	; 0x24
   166c8:	bne	16734 <pretty_mask+0xdc>
   166cc:	ldr	r0, [pc, #940]	; 16a80 <pretty_mask+0x428>
   166d0:	add	r0, pc, r0
   166d4:	add	r6, r0, r9
   166d8:	add	r5, r5, #1
   166dc:	mov	r0, r6
   166e0:	mov	r1, r4
   166e4:	mov	r2, r5
   166e8:	bl	d40c <memcpy@plt>
   166ec:	add	r0, r9, r5
   166f0:	ldr	r1, [pc, #908]	; 16a84 <pretty_mask+0x42c>
   166f4:	add	r1, pc, r1
   166f8:	str	r0, [r1]
   166fc:	ldrb	r0, [r6, #1]
   16700:	cmp	r0, #33	; 0x21
   16704:	moveq	r0, #126	; 0x7e
   16708:	strbeq	r0, [r6, #1]
   1670c:	ldrb	r0, [r6, #1]
   16710:	mov	r1, #1
   16714:	cmp	r0, #126	; 0x7e
   16718:	movweq	r1, #2
   1671c:	ldrb	r0, [r6, r1]
   16720:	ldr	r2, [pc, #864]	; 16a88 <pretty_mask+0x430>
   16724:	ldr	r2, [pc, r2]
   16728:	ldrb	r0, [r2, r0]
   1672c:	strb	r0, [r6, r1]
   16730:	b	1699c <pretty_mask+0x344>
   16734:	mov	r0, r4
   16738:	mov	r1, #64	; 0x40
   1673c:	mov	r2, r5
   16740:	bl	e090 <memchr@plt>
   16744:	cmp	r0, #0
   16748:	beq	16770 <pretty_mask+0x118>
   1674c:	mov	r7, r0
   16750:	mov	r8, r0
   16754:	ldrb	r0, [r8, #1]!
   16758:	cmp	r0, #0
   1675c:	beq	167cc <pretty_mask+0x174>
   16760:	mov	r0, r8
   16764:	bl	dc94 <strlen@plt>
   16768:	mov	r6, r0
   1676c:	b	167d8 <pretty_mask+0x180>
   16770:	mov	r0, r4
   16774:	mov	r1, #33	; 0x21
   16778:	mov	r2, r5
   1677c:	bl	e090 <memchr@plt>
   16780:	cmp	r0, #0
   16784:	beq	169a8 <pretty_mask+0x350>
   16788:	ldr	r8, [pc, #776]	; 16a98 <pretty_mask+0x440>
   1678c:	add	r8, pc, r8
   16790:	cmp	r0, r4
   16794:	sub	r5, r0, r4
   16798:	moveq	r4, r8
   1679c:	movweq	r5, #1
   167a0:	ldrb	r1, [r0, #1]!
   167a4:	cmp	r1, #0
   167a8:	beq	16a24 <pretty_mask+0x3cc>
   167ac:	str	r0, [fp, #-40]	; 0xffffffd8
   167b0:	bl	dc94 <strlen@plt>
   167b4:	mov	sl, r0
   167b8:	mov	r0, #0
   167bc:	str	r0, [fp, #-44]	; 0xffffffd4
   167c0:	mov	r6, #1
   167c4:	mov	r3, #0
   167c8:	b	168a0 <pretty_mask+0x248>
   167cc:	mov	r6, #1
   167d0:	ldr	r8, [pc, #692]	; 16a8c <pretty_mask+0x434>
   167d4:	add	r8, pc, r8
   167d8:	sub	sl, r7, r4
   167dc:	mov	r0, r4
   167e0:	mov	r1, #33	; 0x21
   167e4:	mov	r2, sl
   167e8:	bl	e090 <memchr@plt>
   167ec:	cmp	r0, #0
   167f0:	beq	16824 <pretty_mask+0x1cc>
   167f4:	add	r2, r0, #1
   167f8:	ldr	r1, [pc, #656]	; 16a90 <pretty_mask+0x438>
   167fc:	add	r1, pc, r1
   16800:	cmp	r7, r2
   16804:	sub	sl, r7, r2
   16808:	moveq	r2, r1
   1680c:	str	r2, [fp, #-40]	; 0xffffffd8
   16810:	movweq	sl, #1
   16814:	cmp	r0, r4
   16818:	beq	16848 <pretty_mask+0x1f0>
   1681c:	sub	r5, r0, r4
   16820:	b	16850 <pretty_mask+0x1f8>
   16824:	ldr	r0, [pc, #616]	; 16a94 <pretty_mask+0x43c>
   16828:	add	r0, pc, r0
   1682c:	cmp	r7, r4
   16830:	moveq	r4, r0
   16834:	movweq	sl, #1
   16838:	mov	r5, #1
   1683c:	str	r4, [fp, #-40]	; 0xffffffd8
   16840:	mov	r4, r0
   16844:	b	16850 <pretty_mask+0x1f8>
   16848:	mov	r5, #1
   1684c:	mov	r4, r1
   16850:	mov	r0, r8
   16854:	mov	r1, #33	; 0x21
   16858:	mov	r2, r6
   1685c:	bl	e090 <memchr@plt>
   16860:	cmp	r0, #0
   16864:	bne	16880 <pretty_mask+0x228>
   16868:	mov	r0, r8
   1686c:	mov	r1, #36	; 0x24
   16870:	mov	r2, r6
   16874:	bl	e090 <memchr@plt>
   16878:	cmp	r0, #0
   1687c:	beq	16a0c <pretty_mask+0x3b4>
   16880:	add	r1, r8, r6
   16884:	add	r2, r0, #1
   16888:	subs	r1, r1, r2
   1688c:	mov	r3, r1
   16890:	movne	r3, r1
   16894:	movne	r1, r2
   16898:	str	r1, [fp, #-44]	; 0xffffffd4
   1689c:	sub	r6, r0, r8
   168a0:	cmp	r5, #31
   168a4:	movge	r5, #31
   168a8:	mov	r0, #10
   168ac:	cmp	sl, #9
   168b0:	movle	r0, sl
   168b4:	str	r0, [fp, #-36]	; 0xffffffdc
   168b8:	mov	r7, r5
   168bc:	cmp	r3, #200	; 0xc8
   168c0:	movge	r3, #200	; 0xc8
   168c4:	str	r3, [fp, #-48]	; 0xffffffd0
   168c8:	cmp	r6, #63	; 0x3f
   168cc:	movge	r6, #63	; 0x3f
   168d0:	mov	r5, r6
   168d4:	mov	r1, r4
   168d8:	mov	r4, r8
   168dc:	ldr	r8, [pc, #452]	; 16aa8 <pretty_mask+0x450>
   168e0:	add	r8, pc, r8
   168e4:	add	r6, r8, r9
   168e8:	mov	r0, r6
   168ec:	mov	r2, r7
   168f0:	bl	d40c <memcpy@plt>
   168f4:	add	r0, r7, r9
   168f8:	add	sl, r0, #1
   168fc:	ldr	r9, [pc, #424]	; 16aac <pretty_mask+0x454>
   16900:	add	r9, pc, r9
   16904:	str	sl, [r9]
   16908:	mov	r1, #33	; 0x21
   1690c:	strb	r1, [r8, r0]
   16910:	add	r0, r8, sl
   16914:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16918:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1691c:	mov	r2, r7
   16920:	bl	d40c <memcpy@plt>
   16924:	add	r0, sl, r7
   16928:	add	r7, r0, #1
   1692c:	str	r7, [r9]
   16930:	mov	r1, #64	; 0x40
   16934:	strb	r1, [r8, r0]
   16938:	add	r0, r8, r7
   1693c:	mov	r1, r4
   16940:	mov	r2, r5
   16944:	bl	d40c <memcpy@plt>
   16948:	add	r0, r7, r5
   1694c:	str	r0, [r9]
   16950:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16954:	cmp	r1, #0
   16958:	beq	16984 <pretty_mask+0x32c>
   1695c:	add	r4, r0, #1
   16960:	str	r4, [r9]
   16964:	mov	r2, #36	; 0x24
   16968:	strb	r2, [r8, r0]
   1696c:	add	r0, r8, r4
   16970:	ldr	r5, [fp, #-48]	; 0xffffffd0
   16974:	mov	r2, r5
   16978:	bl	d40c <memcpy@plt>
   1697c:	add	r0, r4, r5
   16980:	str	r0, [r9]
   16984:	ldr	r0, [pc, #292]	; 16ab0 <pretty_mask+0x458>
   16988:	ldr	r0, [pc, r0]
   1698c:	add	r1, r0, #1
   16990:	str	r1, [r9]
   16994:	mov	r1, #0
   16998:	strb	r1, [r8, r0]
   1699c:	mov	r0, r6
   169a0:	sub	sp, fp, #28
   169a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169a8:	mov	r0, r4
   169ac:	mov	r1, #46	; 0x2e
   169b0:	mov	r2, r5
   169b4:	bl	e090 <memchr@plt>
   169b8:	cmp	r0, #0
   169bc:	bne	169d8 <pretty_mask+0x380>
   169c0:	mov	r0, r4
   169c4:	mov	r1, #58	; 0x3a
   169c8:	mov	r2, r5
   169cc:	bl	e090 <memchr@plt>
   169d0:	cmp	r0, #0
   169d4:	beq	16a1c <pretty_mask+0x3c4>
   169d8:	cmp	r5, #63	; 0x3f
   169dc:	movge	r5, #63	; 0x3f
   169e0:	mov	r0, #0
   169e4:	str	r0, [fp, #-44]	; 0xffffffd4
   169e8:	ldr	r1, [pc, #176]	; 16aa0 <pretty_mask+0x448>
   169ec:	add	r1, pc, r1
   169f0:	mov	r0, #1
   169f4:	str	r0, [fp, #-36]	; 0xffffffdc
   169f8:	str	r1, [fp, #-40]	; 0xffffffd8
   169fc:	mov	r7, #1
   16a00:	mov	r0, #0
   16a04:	str	r0, [fp, #-48]	; 0xffffffd0
   16a08:	b	168dc <pretty_mask+0x284>
   16a0c:	mov	r0, #0
   16a10:	str	r0, [fp, #-44]	; 0xffffffd4
   16a14:	mov	r3, #0
   16a18:	b	168a0 <pretty_mask+0x248>
   16a1c:	cmp	r5, #0
   16a20:	beq	16a54 <pretty_mask+0x3fc>
   16a24:	cmp	r5, #31
   16a28:	movge	r5, #31
   16a2c:	mov	r3, #0
   16a30:	mov	r6, #1
   16a34:	ldr	r8, [pc, #104]	; 16aa4 <pretty_mask+0x44c>
   16a38:	add	r8, pc, r8
   16a3c:	mov	sl, #1
   16a40:	mov	r1, #0
   16a44:	str	r1, [fp, #-44]	; 0xffffffd4
   16a48:	str	r8, [fp, #-40]	; 0xffffffd8
   16a4c:	mov	r0, sl
   16a50:	b	168b4 <pretty_mask+0x25c>
   16a54:	mov	r0, #0
   16a58:	str	r0, [fp, #-44]	; 0xffffffd4
   16a5c:	ldr	r1, [pc, #56]	; 16a9c <pretty_mask+0x444>
   16a60:	add	r1, pc, r1
   16a64:	mov	r5, #1
   16a68:	mov	r0, #1
   16a6c:	str	r0, [fp, #-36]	; 0xffffffdc
   16a70:	str	r1, [fp, #-40]	; 0xffffffd8
   16a74:	mov	r4, r1
   16a78:	b	169fc <pretty_mask+0x3a4>
   16a7c:	.word	0x0004e83c
   16a80:	.word	0x0004e81c
   16a84:	.word	0x0004e7f4
   16a88:	.word	0x000443b8
   16a8c:	.word	0x0002ab69
   16a90:	.word	0x0002ab41
   16a94:	.word	0x0002ab15
   16a98:	.word	0x0002abb1
   16a9c:	.word	0x0002a8dd
   16aa0:	.word	0x0002a951
   16aa4:	.word	0x0002a905
   16aa8:	.word	0x0004e60c
   16aac:	.word	0x0004e5e8
   16ab0:	.word	0x0004e560

00016ab4 <check_forward>:
   16ab4:	push	{r4, r5, r6, r7, fp, lr}
   16ab8:	add	fp, sp, #16
   16abc:	sub	sp, sp, #8
   16ac0:	mov	r5, r2
   16ac4:	mov	r6, r1
   16ac8:	mov	r4, r0
   16acc:	mov	r0, r2
   16ad0:	bl	d358 <check_channel_name@plt>
   16ad4:	cmp	r0, #0
   16ad8:	beq	16be8 <check_forward+0x134>
   16adc:	ldrb	r0, [r4, #65]	; 0x41
   16ae0:	tst	r0, #32
   16ae4:	beq	16b14 <check_forward+0x60>
   16ae8:	ldrh	r0, [r4, #80]	; 0x50
   16aec:	cmp	r0, #64	; 0x40
   16af0:	bne	16b14 <check_forward+0x60>
   16af4:	mov	r0, r5
   16af8:	bl	dc94 <strlen@plt>
   16afc:	cmp	r0, #50	; 0x32
   16b00:	bhi	16be8 <check_forward+0x134>
   16b04:	mov	r0, r5
   16b08:	bl	e600 <hash_find_resv@plt>
   16b0c:	cmp	r0, #0
   16b10:	bne	16be8 <check_forward+0x134>
   16b14:	ldr	r0, [r6, #236]	; 0xec
   16b18:	ldrb	r0, [r0]
   16b1c:	cmp	r0, #35	; 0x23
   16b20:	ldrbeq	r0, [r5]
   16b24:	cmpeq	r0, #38	; 0x26
   16b28:	beq	16be8 <check_forward+0x134>
   16b2c:	add	r7, r4, #64	; 0x40
   16b30:	ldrb	r0, [r7, #1]
   16b34:	mov	r6, #0
   16b38:	tst	r0, #32
   16b3c:	beq	16b60 <check_forward+0xac>
   16b40:	ldrh	r0, [r4, #80]	; 0x50
   16b44:	cmp	r0, #64	; 0x40
   16b48:	bne	16b60 <check_forward+0xac>
   16b4c:	mov	r0, r5
   16b50:	bl	d748 <find_channel@plt>
   16b54:	mov	r6, r0
   16b58:	cmp	r0, #0
   16b5c:	beq	16c10 <check_forward+0x15c>
   16b60:	ldrb	r0, [r7, #1]
   16b64:	mov	r5, #1
   16b68:	tst	r0, #32
   16b6c:	beq	16c04 <check_forward+0x150>
   16b70:	ldrh	r0, [r4, #80]	; 0x50
   16b74:	cmp	r0, #64	; 0x40
   16b78:	ldrbeq	r0, [r6, #13]
   16b7c:	tsteq	r0, #16
   16b80:	bne	16c04 <check_forward+0x150>
   16b84:	mov	r0, r6
   16b88:	mov	r1, r4
   16b8c:	bl	d958 <find_channel_membership@plt>
   16b90:	cmp	r0, #0
   16b94:	beq	16bbc <check_forward+0x108>
   16b98:	mov	r2, r0
   16b9c:	mov	r0, #0
   16ba0:	str	r0, [sp]
   16ba4:	mov	r0, r4
   16ba8:	mov	r1, r6
   16bac:	mov	r3, #0
   16bb0:	bl	dc4c <get_channel_access@plt>
   16bb4:	cmp	r0, #1
   16bb8:	bgt	16c04 <check_forward+0x150>
   16bbc:	ldr	r0, [r6, #236]	; 0xec
   16bc0:	str	r0, [sp]
   16bc4:	add	r3, r4, #88	; 0x58
   16bc8:	ldr	r0, [pc, #92]	; 16c2c <check_forward+0x178>
   16bcc:	ldr	r0, [pc, r0]
   16bd0:	add	r2, r0, #88	; 0x58
   16bd4:	ldr	r1, [pc, #84]	; 16c30 <check_forward+0x17c>
   16bd8:	add	r1, pc, r1
   16bdc:	mov	r0, r4
   16be0:	bl	d1e4 <sendto_one@plt>
   16be4:	b	16c00 <check_forward+0x14c>
   16be8:	ldr	r2, [pc, #52]	; 16c24 <check_forward+0x170>
   16bec:	add	r2, pc, r2
   16bf0:	mov	r0, r4
   16bf4:	movw	r1, #479	; 0x1df
   16bf8:	mov	r3, r5
   16bfc:	bl	dc88 <sendto_one_numeric@plt>
   16c00:	mov	r5, #0
   16c04:	mov	r0, r5
   16c08:	sub	sp, fp, #16
   16c0c:	pop	{r4, r5, r6, r7, fp, pc}
   16c10:	ldr	r2, [pc, #16]	; 16c28 <check_forward+0x174>
   16c14:	add	r2, pc, r2
   16c18:	mov	r0, r4
   16c1c:	movw	r1, #403	; 0x193
   16c20:	b	16bf8 <check_forward+0x144>
   16c24:	.word	0x0002a3e4
   16c28:	.word	0x0002a3d5
   16c2c:	.word	0x00043f8c
   16c30:	.word	0x0002a276

00016c34 <fix_key>:
   16c34:	ldrb	r2, [r0]
   16c38:	cmp	r2, #0
   16c3c:	beq	16c70 <fix_key+0x3c>
   16c40:	add	r1, r0, #1
   16c44:	b	16c54 <fix_key+0x20>
   16c48:	cmp	r2, #33	; 0x21
   16c4c:	strbcs	r2, [r0], #1
   16c50:	b	16c64 <fix_key+0x30>
   16c54:	and	r2, r2, #127	; 0x7f
   16c58:	cmp	r2, #44	; 0x2c
   16c5c:	cmpne	r2, #58	; 0x3a
   16c60:	bne	16c48 <fix_key+0x14>
   16c64:	ldrb	r2, [r1], #1
   16c68:	cmp	r2, #0
   16c6c:	bne	16c54 <fix_key+0x20>
   16c70:	mov	r1, #0
   16c74:	strb	r1, [r0]
   16c78:	bx	lr

00016c7c <fix_key_remote>:
   16c7c:	ldrb	r2, [r0]
   16c80:	cmp	r2, #0
   16c84:	beq	16d84 <fix_key_remote+0x108>
   16c88:	add	r1, r0, #1
   16c8c:	b	16c98 <fix_key_remote+0x1c>
   16c90:	strb	ip, [r0], #1
   16c94:	b	16d78 <fix_key_remote+0xfc>
   16c98:	and	ip, r2, #127	; 0x7f
   16c9c:	sub	r3, ip, #10
   16ca0:	cmp	r3, #48	; 0x30
   16ca4:	bhi	16c90 <fix_key_remote+0x14>
   16ca8:	add	r2, pc, #4
   16cac:	ldr	r3, [r2, r3, lsl #2]
   16cb0:	add	pc, r2, r3
   16cb4:	.word	0x000000c4
   16cb8:	.word	0xffffffdc
   16cbc:	.word	0xffffffdc
   16cc0:	.word	0x000000c4
   16cc4:	.word	0xffffffdc
   16cc8:	.word	0xffffffdc
   16ccc:	.word	0xffffffdc
   16cd0:	.word	0xffffffdc
   16cd4:	.word	0xffffffdc
   16cd8:	.word	0xffffffdc
   16cdc:	.word	0xffffffdc
   16ce0:	.word	0xffffffdc
   16ce4:	.word	0xffffffdc
   16ce8:	.word	0xffffffdc
   16cec:	.word	0xffffffdc
   16cf0:	.word	0xffffffdc
   16cf4:	.word	0xffffffdc
   16cf8:	.word	0xffffffdc
   16cfc:	.word	0xffffffdc
   16d00:	.word	0xffffffdc
   16d04:	.word	0xffffffdc
   16d08:	.word	0xffffffdc
   16d0c:	.word	0x000000c4
   16d10:	.word	0xffffffdc
   16d14:	.word	0xffffffdc
   16d18:	.word	0xffffffdc
   16d1c:	.word	0xffffffdc
   16d20:	.word	0xffffffdc
   16d24:	.word	0xffffffdc
   16d28:	.word	0xffffffdc
   16d2c:	.word	0xffffffdc
   16d30:	.word	0xffffffdc
   16d34:	.word	0xffffffdc
   16d38:	.word	0xffffffdc
   16d3c:	.word	0x000000c4
   16d40:	.word	0xffffffdc
   16d44:	.word	0xffffffdc
   16d48:	.word	0xffffffdc
   16d4c:	.word	0xffffffdc
   16d50:	.word	0xffffffdc
   16d54:	.word	0xffffffdc
   16d58:	.word	0xffffffdc
   16d5c:	.word	0xffffffdc
   16d60:	.word	0xffffffdc
   16d64:	.word	0xffffffdc
   16d68:	.word	0xffffffdc
   16d6c:	.word	0xffffffdc
   16d70:	.word	0xffffffdc
   16d74:	.word	0x000000c4
   16d78:	ldrb	r2, [r1], #1
   16d7c:	cmp	r2, #0
   16d80:	bne	16c98 <fix_key_remote+0x1c>
   16d84:	mov	r1, #0
   16d88:	strb	r1, [r0]
   16d8c:	bx	lr

00016d90 <set_channel_mode>:
   16d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d94:	add	fp, sp, #28
   16d98:	sub	sp, sp, #84	; 0x54
   16d9c:	str	r3, [fp, #-40]	; 0xffffffd8
   16da0:	str	r2, [sp, #48]	; 0x30
   16da4:	mov	r4, r1
   16da8:	str	r0, [sp, #24]
   16dac:	mov	r0, #1
   16db0:	str	r0, [fp, #-32]	; 0xffffffe0
   16db4:	mov	r0, #0
   16db8:	str	r0, [fp, #-36]	; 0xffffffdc
   16dbc:	ldr	r8, [fp, #12]
   16dc0:	ldr	r5, [r8]
   16dc4:	ldr	r1, [pc, #1368]	; 17324 <set_channel_mode+0x594>
   16dc8:	add	r1, pc, r1
   16dcc:	str	r0, [r1]
   16dd0:	ldr	r1, [pc, #1360]	; 17328 <set_channel_mode+0x598>
   16dd4:	add	r1, pc, r1
   16dd8:	str	r0, [r1]
   16ddc:	ldr	r1, [pc, #1352]	; 1732c <set_channel_mode+0x59c>
   16de0:	add	r1, pc, r1
   16de4:	str	r0, [r1]
   16de8:	ldr	r1, [pc, #1344]	; 17330 <set_channel_mode+0x5a0>
   16dec:	add	r1, pc, r1
   16df0:	str	r0, [r1]
   16df4:	ldr	r1, [pc, #1336]	; 17334 <set_channel_mode+0x5a4>
   16df8:	add	r1, pc, r1
   16dfc:	str	r0, [r1]
   16e00:	ldr	r0, [pc, #1328]	; 17338 <set_channel_mode+0x5a8>
   16e04:	ldr	r0, [pc, r0]
   16e08:	ldr	r0, [r0]
   16e0c:	ldr	r7, [fp, #8]
   16e10:	cmp	r0, #0
   16e14:	beq	16e2c <set_channel_mode+0x9c>
   16e18:	ldrh	r0, [r4, #80]	; 0x50
   16e1c:	cmp	r0, #32
   16e20:	ldrbeq	r0, [r4, #396]	; 0x18c
   16e24:	cmpeq	r0, #0
   16e28:	beq	17308 <set_channel_mode+0x578>
   16e2c:	str	r4, [sp, #36]	; 0x24
   16e30:	mov	r0, r7
   16e34:	mov	r1, r8
   16e38:	bl	e678 <reconstruct_parv@plt>
   16e3c:	str	r0, [sp]
   16e40:	mov	r9, #0
   16e44:	str	r4, [sp, #40]	; 0x28
   16e48:	mov	r0, r4
   16e4c:	ldr	r1, [sp, #48]	; 0x30
   16e50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16e54:	mov	r3, #0
   16e58:	bl	dc4c <get_channel_access@plt>
   16e5c:	mov	r4, r0
   16e60:	mov	sl, #0
   16e64:	b	16e6c <set_channel_mode+0xdc>
   16e68:	add	r5, r5, #1
   16e6c:	ldrb	r0, [r5]
   16e70:	cmp	r0, #44	; 0x2c
   16e74:	ble	16e94 <set_channel_mode+0x104>
   16e78:	cmp	r0, #45	; 0x2d
   16e7c:	beq	16ed0 <set_channel_mode+0x140>
   16e80:	cmp	r0, #61	; 0x3d
   16e84:	bne	16f1c <set_channel_mode+0x18c>
   16e88:	mov	r9, #0
   16e8c:	add	r5, r5, #1
   16e90:	b	16e6c <set_channel_mode+0xdc>
   16e94:	cmp	r0, #43	; 0x2b
   16e98:	bne	16f14 <set_channel_mode+0x184>
   16e9c:	mov	r9, #1
   16ea0:	cmp	sl, #0
   16ea4:	bne	16e68 <set_channel_mode+0xd8>
   16ea8:	mov	r0, r7
   16eac:	mov	r1, r8
   16eb0:	bl	e678 <reconstruct_parv@plt>
   16eb4:	str	r0, [sp]
   16eb8:	mov	r9, #1
   16ebc:	ldr	r0, [sp, #40]	; 0x28
   16ec0:	ldr	r1, [sp, #48]	; 0x30
   16ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ec8:	mov	r3, #1
   16ecc:	b	16f00 <set_channel_mode+0x170>
   16ed0:	mvn	r9, #0
   16ed4:	cmp	sl, #0
   16ed8:	bne	16e68 <set_channel_mode+0xd8>
   16edc:	mov	r0, r7
   16ee0:	mov	r1, r8
   16ee4:	bl	e678 <reconstruct_parv@plt>
   16ee8:	str	r0, [sp]
   16eec:	mvn	r9, #0
   16ef0:	ldr	r0, [sp, #40]	; 0x28
   16ef4:	ldr	r1, [sp, #48]	; 0x30
   16ef8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16efc:	mvn	r3, #0
   16f00:	bl	dc4c <get_channel_access@plt>
   16f04:	mov	r4, r0
   16f08:	mov	sl, #1
   16f0c:	add	r5, r5, #1
   16f10:	b	16e6c <set_channel_mode+0xdc>
   16f14:	cmp	r0, #0
   16f18:	beq	16f60 <set_channel_mode+0x1d0>
   16f1c:	ldr	r1, [pc, #1052]	; 17340 <set_channel_mode+0x5b0>
   16f20:	ldr	r1, [pc, r1]
   16f24:	ldr	r6, [r1, r0, lsl #3]!
   16f28:	ldr	r1, [r1, #4]
   16f2c:	sub	r2, fp, #32
   16f30:	stm	sp, {r2, r8}
   16f34:	sub	r2, fp, #36	; 0x24
   16f38:	str	r2, [sp, #8]
   16f3c:	str	r9, [sp, #12]
   16f40:	str	r0, [sp, #16]
   16f44:	str	r1, [sp, #20]
   16f48:	ldr	r0, [sp, #36]	; 0x24
   16f4c:	ldr	r1, [sp, #48]	; 0x30
   16f50:	mov	r2, r4
   16f54:	mov	r3, r7
   16f58:	blx	r6
   16f5c:	b	16e68 <set_channel_mode+0xd8>
   16f60:	ldr	r0, [pc, #988]	; 17344 <set_channel_mode+0x5b4>
   16f64:	ldr	r0, [pc, r0]
   16f68:	cmp	r0, #0
   16f6c:	ldr	r4, [sp, #40]	; 0x28
   16f70:	beq	172b4 <set_channel_mode+0x524>
   16f74:	ldrh	r0, [r4, #80]	; 0x50
   16f78:	cmp	r0, #32
   16f7c:	bne	16fa4 <set_channel_mode+0x214>
   16f80:	ldr	r0, [sp, #48]	; 0x30
   16f84:	ldr	r3, [r0, #236]	; 0xec
   16f88:	ldr	r0, [sp, #36]	; 0x24
   16f8c:	add	r2, r0, #88	; 0x58
   16f90:	ldr	r0, [pc, #944]	; 17348 <set_channel_mode+0x5b8>
   16f94:	add	r0, pc, r0
   16f98:	ldr	r1, [pc, #940]	; 1734c <set_channel_mode+0x5bc>
   16f9c:	add	r1, pc, r1
   16fa0:	b	16fd0 <set_channel_mode+0x240>
   16fa4:	ldr	r0, [sp, #48]	; 0x30
   16fa8:	ldr	r0, [r0, #236]	; 0xec
   16fac:	add	r1, r4, #163	; 0xa3
   16fb0:	str	r1, [sp]
   16fb4:	str	r0, [sp, #4]
   16fb8:	add	r2, r4, #88	; 0x58
   16fbc:	add	r3, r4, #152	; 0x98
   16fc0:	ldr	r0, [pc, #904]	; 17350 <set_channel_mode+0x5c0>
   16fc4:	add	r0, pc, r0
   16fc8:	ldr	r1, [pc, #900]	; 17354 <set_channel_mode+0x5c4>
   16fcc:	add	r1, pc, r1
   16fd0:	bl	e3a8 <sprintf@plt>
   16fd4:	mov	r8, r0
   16fd8:	ldr	r0, [pc, #888]	; 17358 <set_channel_mode+0x5c8>
   16fdc:	add	r0, pc, r0
   16fe0:	add	r0, r0, r8
   16fe4:	str	r0, [sp, #44]	; 0x2c
   16fe8:	mov	r5, #0
   16fec:	ldr	r9, [pc, #872]	; 1735c <set_channel_mode+0x5cc>
   16ff0:	add	r9, pc, r9
   16ff4:	ldr	r0, [pc, #868]	; 17360 <set_channel_mode+0x5d0>
   16ff8:	add	r0, pc, r0
   16ffc:	add	r0, r0, #12
   17000:	str	r0, [sp, #28]
   17004:	mov	r6, #0
   17008:	str	r8, [fp, #-52]	; 0xffffffcc
   1700c:	strb	r5, [r9]
   17010:	cmp	r6, #2
   17014:	mov	r1, #0
   17018:	ldr	r0, [pc, #836]	; 17364 <set_channel_mode+0x5d4>
   1701c:	add	r0, pc, r0
   17020:	moveq	r1, r0
   17024:	str	r1, [sp, #56]	; 0x38
   17028:	ldr	r0, [pc, #824]	; 17368 <set_channel_mode+0x5d8>
   1702c:	add	r0, pc, r0
   17030:	ldr	r0, [r0, r6, lsl #2]
   17034:	str	r0, [fp, #-48]	; 0xffffffd0
   17038:	subeq	r0, r6, #2
   1703c:	str	r0, [sp, #52]	; 0x34
   17040:	ldr	r0, [pc, #804]	; 1736c <set_channel_mode+0x5dc>
   17044:	ldr	r0, [pc, r0]
   17048:	cmp	r0, #1
   1704c:	blt	17280 <set_channel_mode+0x4f0>
   17050:	str	r6, [sp, #32]
   17054:	mov	r1, #0
   17058:	ldr	r5, [sp, #28]
   1705c:	ldr	sl, [sp, #44]	; 0x2c
   17060:	mov	r4, r9
   17064:	mov	r6, #0
   17068:	mov	r0, #0
   1706c:	str	r0, [fp, #-44]	; 0xffffffd4
   17070:	mov	r0, #0
   17074:	str	r0, [fp, #-40]	; 0xffffffd8
   17078:	ldr	r7, [fp, #-48]	; 0xffffffd0
   1707c:	ldrb	r0, [r5, #-12]
   17080:	cmp	r0, #0
   17084:	beq	171e0 <set_channel_mode+0x450>
   17088:	ldr	r0, [r5, #4]
   1708c:	cmp	r0, r7
   17090:	bne	171e0 <set_channel_mode+0x450>
   17094:	ldr	r0, [r5, #-8]
   17098:	cmp	r0, #0
   1709c:	beq	1716c <set_channel_mode+0x3dc>
   170a0:	mov	r9, r1
   170a4:	bl	dc94 <strlen@plt>
   170a8:	cmp	r0, #195	; 0xc3
   170ac:	ble	170b8 <set_channel_mode+0x328>
   170b0:	mov	r1, r9
   170b4:	b	171e0 <set_channel_mode+0x450>
   170b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   170bc:	cmp	r1, #10
   170c0:	beq	170dc <set_channel_mode+0x34c>
   170c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   170c8:	add	r1, r8, r1
   170cc:	add	r0, r1, r0
   170d0:	movw	r1, #506	; 0x1fa
   170d4:	cmp	r0, r1
   170d8:	blt	17168 <set_channel_mode+0x3d8>
   170dc:	mov	r0, #0
   170e0:	strb	r0, [sl]
   170e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   170e8:	cmp	r8, r0
   170ec:	mov	r1, r9
   170f0:	ble	171e0 <set_channel_mode+0x450>
   170f4:	ldr	r1, [sp, #40]	; 0x28
   170f8:	ldrh	r0, [r1, #80]	; 0x50
   170fc:	ldr	r2, [pc, #620]	; 17370 <set_channel_mode+0x5e0>
   17100:	add	r2, pc, r2
   17104:	str	r2, [sp]
   17108:	ldr	r2, [pc, #612]	; 17374 <set_channel_mode+0x5e4>
   1710c:	add	r2, pc, r2
   17110:	str	r2, [sp, #4]
   17114:	ldr	r4, [pc, #604]	; 17378 <set_channel_mode+0x5e8>
   17118:	add	r4, pc, r4
   1711c:	str	r4, [sp, #8]
   17120:	cmp	r0, #32
   17124:	mov	r0, r1
   17128:	ldr	r1, [sp, #36]	; 0x24
   1712c:	moveq	r0, r1
   17130:	ldr	r1, [sp, #52]	; 0x34
   17134:	ldr	r2, [sp, #56]	; 0x38
   17138:	ldr	r3, [sp, #48]	; 0x30
   1713c:	bl	d73c <sendto_channel_local_priv@plt>
   17140:	mov	r1, #0
   17144:	mov	r0, #0
   17148:	str	r0, [fp, #-40]	; 0xffffffd8
   1714c:	strb	r1, [r4]
   17150:	mov	r0, #0
   17154:	str	r0, [fp, #-44]	; 0xffffffd4
   17158:	ldr	r8, [fp, #-52]	; 0xffffffcc
   1715c:	mov	r1, #0
   17160:	ldr	sl, [sp, #44]	; 0x2c
   17164:	b	1716c <set_channel_mode+0x3dc>
   17168:	mov	r1, r9
   1716c:	ldr	r0, [r5]
   17170:	cmp	r1, r0
   17174:	beq	17190 <set_channel_mode+0x400>
   17178:	cmp	r0, #1
   1717c:	mov	r0, #45	; 0x2d
   17180:	movweq	r0, #43	; 0x2b
   17184:	strb	r0, [sl], #1
   17188:	add	r8, r8, #1
   1718c:	ldr	r1, [r5]
   17190:	ldrb	r0, [r5, #-12]
   17194:	strb	r0, [sl], #1
   17198:	add	r8, r8, #1
   1719c:	ldr	r2, [r5, #-8]
   171a0:	cmp	r2, #0
   171a4:	beq	171e0 <set_channel_mode+0x450>
   171a8:	mov	r0, r4
   171ac:	mov	r7, r1
   171b0:	ldr	r1, [pc, #452]	; 1737c <set_channel_mode+0x5ec>
   171b4:	add	r1, pc, r1
   171b8:	bl	e3a8 <sprintf@plt>
   171bc:	mov	r1, r7
   171c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   171c4:	ldr	r7, [fp, #-48]	; 0xffffffd0
   171c8:	add	r2, r0, r2
   171cc:	str	r2, [fp, #-40]	; 0xffffffd8
   171d0:	add	r4, r4, r0
   171d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   171d8:	add	r0, r0, #1
   171dc:	str	r0, [fp, #-44]	; 0xffffffd4
   171e0:	add	r5, r5, #20
   171e4:	add	r6, r6, #1
   171e8:	ldr	r0, [pc, #400]	; 17380 <set_channel_mode+0x5f0>
   171ec:	ldr	r0, [pc, r0]
   171f0:	cmp	r6, r0
   171f4:	blt	1707c <set_channel_mode+0x2ec>
   171f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171fc:	cmp	r0, #0
   17200:	mov	r5, #0
   17204:	ldr	r9, [pc, #376]	; 17384 <set_channel_mode+0x5f4>
   17208:	add	r9, pc, r9
   1720c:	beq	17224 <set_channel_mode+0x494>
   17210:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17214:	sub	r0, r0, #1
   17218:	ldrb	r1, [r9, r0]
   1721c:	cmp	r1, #32
   17220:	strbeq	r5, [r9, r0]
   17224:	strb	r5, [sl]
   17228:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1722c:	cmp	r8, r0
   17230:	mov	r8, r0
   17234:	ldr	r4, [sp, #40]	; 0x28
   17238:	ldr	r6, [sp, #32]
   1723c:	ble	17288 <set_channel_mode+0x4f8>
   17240:	ldrh	r0, [r4, #80]	; 0x50
   17244:	ldr	r1, [pc, #316]	; 17388 <set_channel_mode+0x5f8>
   17248:	add	r1, pc, r1
   1724c:	str	r1, [sp]
   17250:	ldr	r1, [pc, #308]	; 1738c <set_channel_mode+0x5fc>
   17254:	add	r1, pc, r1
   17258:	stmib	sp, {r1, r9}
   1725c:	cmp	r0, #32
   17260:	mov	r0, r4
   17264:	ldr	r1, [sp, #36]	; 0x24
   17268:	moveq	r0, r1
   1726c:	ldr	r1, [sp, #52]	; 0x34
   17270:	ldr	r2, [sp, #56]	; 0x38
   17274:	ldr	r3, [sp, #48]	; 0x30
   17278:	bl	d73c <sendto_channel_local_priv@plt>
   1727c:	b	17288 <set_channel_mode+0x4f8>
   17280:	ldr	r0, [sp, #44]	; 0x2c
   17284:	strb	r5, [r0]
   17288:	add	r6, r6, #1
   1728c:	cmp	r6, #3
   17290:	bne	1700c <set_channel_mode+0x27c>
   17294:	ldrb	r0, [r4, #65]	; 0x41
   17298:	tst	r0, #32
   1729c:	bne	172bc <set_channel_mode+0x52c>
   172a0:	ldr	r0, [pc, #236]	; 17394 <set_channel_mode+0x604>
   172a4:	ldr	r0, [pc, r0]
   172a8:	ldr	r0, [r0, #8]
   172ac:	cmp	r0, #2
   172b0:	bcs	172dc <set_channel_mode+0x54c>
   172b4:	sub	sp, fp, #28
   172b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172bc:	ldrh	r0, [r4, #80]	; 0x50
   172c0:	cmp	r0, #64	; 0x40
   172c4:	beq	172dc <set_channel_mode+0x54c>
   172c8:	ldr	r0, [pc, #192]	; 17390 <set_channel_mode+0x600>
   172cc:	ldr	r0, [pc, r0]
   172d0:	ldr	r0, [r0, #8]
   172d4:	cmp	r0, #1
   172d8:	bls	172b4 <set_channel_mode+0x524>
   172dc:	ldr	r0, [pc, #180]	; 17398 <set_channel_mode+0x608>
   172e0:	ldr	r0, [pc, r0]
   172e4:	str	r0, [sp]
   172e8:	ldr	r3, [pc, #172]	; 1739c <set_channel_mode+0x60c>
   172ec:	add	r3, pc, r3
   172f0:	ldr	r0, [sp, #24]
   172f4:	mov	r1, r4
   172f8:	ldr	r2, [sp, #48]	; 0x30
   172fc:	bl	d784 <send_cap_mode_changes@plt>
   17300:	sub	sp, fp, #28
   17304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17308:	ldrb	r0, [r4, #65]	; 0x41
   1730c:	tst	r0, #16
   17310:	bne	16e2c <set_channel_mode+0x9c>
   17314:	ldr	r0, [pc, #32]	; 1733c <set_channel_mode+0x5ac>
   17318:	ldr	r0, [pc, r0]
   1731c:	str	r0, [sp, #36]	; 0x24
   17320:	b	16e30 <set_channel_mode+0xa0>
   17324:	.word	0x0004dcfc
   17328:	.word	0x0004e114
   1732c:	.word	0x0004d9d0
   17330:	.word	0x0004d9c8
   17334:	.word	0x0004b1b4
   17338:	.word	0x00043bb0
   1733c:	.word	0x00043840
   17340:	.word	0x00043b74
   17344:	.word	0x0004d84c
   17348:	.word	0x0004db52
   1734c:	.word	0x00029fa9
   17350:	.word	0x0004db22
   17354:	.word	0x00029f86
   17358:	.word	0x0004db0a
   1735c:	.word	0x0004dcf6
   17360:	.word	0x0004afb8
   17364:	.word	0x00029acd
   17368:	.word	0x00029fd4
   1736c:	.word	0x0004d76c
   17370:	.word	0x0002ec18
   17374:	.word	0x0004d9da
   17378:	.word	0x0004dbce
   1737c:	.word	0x00030133
   17380:	.word	0x0004d5c4
   17384:	.word	0x0004dade
   17388:	.word	0x0002ead0
   1738c:	.word	0x0004d892
   17390:	.word	0x00043704
   17394:	.word	0x0004372c
   17398:	.word	0x0004d4d0
   1739c:	.word	0x0004acc4

000173a0 <set_channel_mlock>:
   173a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   173a4:	add	fp, sp, #24
   173a8:	sub	sp, sp, #24
   173ac:	mov	r7, r3
   173b0:	mov	r6, r2
   173b4:	mov	r5, r1
   173b8:	mov	r8, r0
   173bc:	ldr	r0, [r2, #104]	; 0x68
   173c0:	bl	17464 <rb_free>
   173c4:	ldr	r4, [fp, #8]
   173c8:	cmp	r7, #0
   173cc:	beq	173dc <set_channel_mlock+0x3c>
   173d0:	mov	r0, r7
   173d4:	bl	17470 <rb_strdup>
   173d8:	b	173e0 <set_channel_mlock+0x40>
   173dc:	mov	r0, #0
   173e0:	str	r0, [r6, #104]	; 0x68
   173e4:	cmp	r4, #0
   173e8:	beq	1744c <set_channel_mlock+0xac>
   173ec:	ldr	r1, [pc, #96]	; 17454 <set_channel_mlock+0xb4>
   173f0:	add	r1, pc, r1
   173f4:	cmp	r0, #0
   173f8:	movne	r1, r0
   173fc:	ldr	r0, [pc, #84]	; 17458 <set_channel_mlock+0xb8>
   17400:	ldr	r0, [pc, r0]
   17404:	ldr	r0, [r0]
   17408:	ldr	r2, [pc, #76]	; 1745c <set_channel_mlock+0xbc>
   1740c:	ldr	r2, [pc, r2]
   17410:	ldr	r2, [r2]
   17414:	ldr	r3, [r6, #232]	; 0xe8
   17418:	ldr	r7, [r6, #236]	; 0xec
   1741c:	add	r6, r5, #396	; 0x18c
   17420:	ldr	r5, [pc, #56]	; 17460 <set_channel_mlock+0xc0>
   17424:	add	r5, pc, r5
   17428:	stm	sp, {r5, r6}
   1742c:	str	r3, [sp, #8]
   17430:	str	r7, [sp, #12]
   17434:	str	r1, [sp, #16]
   17438:	orr	r2, r0, r2
   1743c:	mov	r0, r8
   17440:	mov	r1, #0
   17444:	mov	r3, #0
   17448:	bl	d9a0 <sendto_server@plt>
   1744c:	sub	sp, fp, #24
   17450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17454:	.word	0x0002e415
   17458:	.word	0x00043494
   1745c:	.word	0x0004351c
   17460:	.word	0x00029b41

00017464 <rb_free>:
   17464:	cmp	r0, #0
   17468:	bxeq	lr
   1746c:	b	d328 <free@plt>

00017470 <rb_strdup>:
   17470:	push	{r4, r5, fp, lr}
   17474:	add	fp, sp, #8
   17478:	mov	r4, r0
   1747c:	bl	dc94 <strlen@plt>
   17480:	add	r0, r0, #1
   17484:	bl	da90 <malloc@plt>
   17488:	cmp	r0, #0
   1748c:	beq	174a4 <rb_strdup+0x34>
   17490:	mov	r5, r0
   17494:	mov	r1, r4
   17498:	bl	d928 <strcpy@plt>
   1749c:	mov	r0, r5
   174a0:	pop	{r4, r5, fp, pc}
   174a4:	bl	d448 <rb_outofmemory@plt>

000174a8 <check_string>:
   174a8:	ldr	r1, [pc, #88]	; 17508 <check_string+0x60>
   174ac:	add	r1, pc, r1
   174b0:	cmp	r0, #0
   174b4:	ldrbne	r2, [r0]
   174b8:	cmpne	r2, #0
   174bc:	bne	174c8 <check_string+0x20>
   174c0:	mov	r0, r1
   174c4:	bx	lr
   174c8:	add	r1, r0, #1
   174cc:	ldr	r3, [pc, #56]	; 1750c <check_string+0x64>
   174d0:	ldr	r3, [pc, r3]
   174d4:	uxtb	r2, r2
   174d8:	ldrb	r2, [r3, r2, lsl #2]
   174dc:	tst	r2, #32
   174e0:	bne	174f4 <check_string+0x4c>
   174e4:	ldrb	r2, [r1], #1
   174e8:	cmp	r2, #0
   174ec:	bne	174d4 <check_string+0x2c>
   174f0:	b	174fc <check_string+0x54>
   174f4:	mov	r2, #0
   174f8:	strb	r2, [r1, #-1]
   174fc:	mov	r1, r0
   17500:	mov	r0, r1
   17504:	bx	lr
   17508:	.word	0x00043ee2
   1750c:	.word	0x00043528

00017510 <make_class>:
   17510:	push	{r4, sl, fp, lr}
   17514:	add	fp, sp, #8
   17518:	bl	17558 <rb_malloc>
   1751c:	mov	r4, r0
   17520:	mov	r0, #600	; 0x258
   17524:	mov	r1, #120	; 0x78
   17528:	mov	r2, #1
   1752c:	str	r2, [r4, #8]
   17530:	movw	r2, #11520	; 0x2d00
   17534:	movt	r2, #305	; 0x131
   17538:	str	r2, [r4, #24]
   1753c:	str	r0, [r4, #28]
   17540:	str	r1, [r4, #32]
   17544:	mov	r0, #128	; 0x80
   17548:	bl	d418 <rb_new_patricia@plt>
   1754c:	str	r0, [r4, #40]	; 0x28
   17550:	mov	r0, r4
   17554:	pop	{r4, sl, fp, pc}

00017558 <rb_malloc>:
   17558:	push	{fp, lr}
   1755c:	mov	fp, sp
   17560:	mov	r0, #1
   17564:	mov	r1, #56	; 0x38
   17568:	bl	cfa4 <calloc@plt>
   1756c:	cmp	r0, #0
   17570:	popne	{fp, pc}
   17574:	bl	d448 <rb_outofmemory@plt>

00017578 <free_class>:
   17578:	push	{r4, sl, fp, lr}
   1757c:	add	fp, sp, #8
   17580:	mov	r4, r0
   17584:	ldr	r0, [r0, #40]	; 0x28
   17588:	cmp	r0, #0
   1758c:	beq	17598 <free_class+0x20>
   17590:	mov	r1, #0
   17594:	bl	e558 <rb_destroy_patricia@plt>
   17598:	ldr	r0, [r4, #4]
   1759c:	bl	175ac <rb_free>
   175a0:	mov	r0, r4
   175a4:	pop	{r4, sl, fp, lr}
   175a8:	b	175ac <rb_free>

000175ac <rb_free>:
   175ac:	cmp	r0, #0
   175b0:	bxeq	lr
   175b4:	b	d328 <free@plt>

000175b8 <get_client_class>:
   175b8:	mov	r1, r0
   175bc:	ldr	r0, [pc, #88]	; 1761c <get_client_class+0x64>
   175c0:	add	r0, pc, r0
   175c4:	cmp	r1, #0
   175c8:	ldrhne	r2, [r1, #80]	; 0x50
   175cc:	cmpne	r2, #4
   175d0:	bne	175d8 <get_client_class+0x20>
   175d4:	bx	lr
   175d8:	cmp	r2, #32
   175dc:	ldreq	r0, [r1, #432]	; 0x1b0
   175e0:	ldreq	r0, [r0, #136]	; 0x88
   175e4:	ldreq	r0, [r0, #572]	; 0x23c
   175e8:	bxeq	lr
   175ec:	ldr	r0, [r1, #432]	; 0x1b0
   175f0:	ldr	r0, [r0, #132]	; 0x84
   175f4:	cmp	r0, #0
   175f8:	ldreq	r0, [pc, #32]	; 17620 <get_client_class+0x68>
   175fc:	addeq	r0, pc, r0
   17600:	bxeq	lr
   17604:	ldr	r1, [r0, #48]	; 0x30
   17608:	ldr	r0, [pc, #20]	; 17624 <get_client_class+0x6c>
   1760c:	add	r0, pc, r0
   17610:	cmp	r1, #0
   17614:	movne	r0, r1
   17618:	bx	lr
   1761c:	.word	0x00029a4c
   17620:	.word	0x00029a18
   17624:	.word	0x00029a08

00017628 <get_client_ping>:
   17628:	ldr	r1, [r0, #432]	; 0x1b0
   1762c:	ldrh	r0, [r0, #80]	; 0x50
   17630:	cmp	r0, #32
   17634:	bne	17648 <get_client_ping+0x20>
   17638:	ldr	r0, [r1, #136]	; 0x88
   1763c:	ldr	r0, [r0, #576]	; 0x240
   17640:	ldr	r0, [r0, #32]
   17644:	b	17668 <get_client_ping+0x40>
   17648:	ldr	r0, [r1, #132]	; 0x84
   1764c:	cmp	r0, #0
   17650:	moveq	r0, #120	; 0x78
   17654:	bxeq	lr
   17658:	push	{fp, lr}
   1765c:	mov	fp, sp
   17660:	bl	17674 <get_conf_ping>
   17664:	pop	{fp, lr}
   17668:	cmp	r0, #1
   1766c:	movwlt	r0, #120	; 0x78
   17670:	bx	lr

00017674 <get_conf_ping>:
   17674:	mov	r1, r0
   17678:	mvn	r0, #1
   1767c:	cmp	r1, #0
   17680:	ldrne	r1, [r1, #52]	; 0x34
   17684:	cmpne	r1, #0
   17688:	ldrne	r0, [r1, #32]
   1768c:	bx	lr

00017690 <get_con_freq>:
   17690:	cmp	r0, #0
   17694:	ldrne	r0, [r0, #28]
   17698:	moveq	r0, #600	; 0x258
   1769c:	bx	lr

000176a0 <add_class>:
   176a0:	push	{r4, sl, fp, lr}
   176a4:	add	fp, sp, #8
   176a8:	mov	r4, r0
   176ac:	ldr	r0, [r0, #4]
   176b0:	bl	d6ac <find_class@plt>
   176b4:	ldr	r1, [pc, #132]	; 17740 <add_class+0xa0>
   176b8:	ldr	r1, [pc, r1]
   176bc:	ldr	r1, [r1]
   176c0:	cmp	r0, r1
   176c4:	beq	17724 <add_class+0x84>
   176c8:	ldr	r1, [r4, #8]
   176cc:	str	r1, [r0, #8]
   176d0:	ldr	r1, [r4, #12]
   176d4:	str	r1, [r0, #12]
   176d8:	ldr	r1, [r4, #16]
   176dc:	str	r1, [r0, #16]
   176e0:	ldr	r1, [r4, #20]
   176e4:	str	r1, [r0, #20]
   176e8:	ldr	r1, [r4, #32]
   176ec:	str	r1, [r0, #32]
   176f0:	ldr	r1, [r4, #24]
   176f4:	str	r1, [r0, #24]
   176f8:	ldr	r1, [r4, #28]
   176fc:	str	r1, [r0, #28]
   17700:	ldr	r1, [r4, #44]	; 0x2c
   17704:	str	r1, [r0, #44]	; 0x2c
   17708:	ldr	r1, [r4, #48]	; 0x30
   1770c:	str	r1, [r0, #48]	; 0x30
   17710:	ldr	r1, [r4, #52]	; 0x34
   17714:	str	r1, [r0, #52]	; 0x34
   17718:	mov	r0, r4
   1771c:	pop	{r4, sl, fp, lr}
   17720:	b	17578 <free_class>
   17724:	bl	dc64 <rb_make_rb_dlink_node@plt>
   17728:	mov	r1, r0
   1772c:	mov	r0, r4
   17730:	bl	177b0 <rb_dlinkAdd>
   17734:	mov	r0, #0
   17738:	str	r0, [r4, #36]	; 0x24
   1773c:	pop	{r4, sl, fp, pc}
   17740:	.word	0x00043194

00017744 <find_class>:
   17744:	push	{r4, r5, r6, sl, fp, lr}
   17748:	add	fp, sp, #16
   1774c:	cmp	r0, #0
   17750:	beq	17794 <find_class+0x50>
   17754:	mov	r4, r0
   17758:	ldr	r0, [pc, #72]	; 177a8 <find_class+0x64>
   1775c:	ldr	r0, [pc, r0]
   17760:	ldr	r6, [r0]
   17764:	cmp	r6, #0
   17768:	beq	17794 <find_class+0x50>
   1776c:	ldr	r5, [r6]
   17770:	ldr	r0, [r5, #4]
   17774:	mov	r1, r4
   17778:	bl	d0c4 <strcmp@plt>
   1777c:	cmp	r0, #0
   17780:	moveq	r0, r5
   17784:	popeq	{r4, r5, r6, sl, fp, pc}
   17788:	ldr	r6, [r6, #8]
   1778c:	cmp	r6, #0
   17790:	bne	1776c <find_class+0x28>
   17794:	ldr	r0, [pc, #16]	; 177ac <find_class+0x68>
   17798:	ldr	r0, [pc, r0]
   1779c:	ldr	r5, [r0]
   177a0:	mov	r0, r5
   177a4:	pop	{r4, r5, r6, sl, fp, pc}
   177a8:	.word	0x00043368
   177ac:	.word	0x000430b4

000177b0 <rb_dlinkAdd>:
   177b0:	push	{fp, lr}
   177b4:	mov	fp, sp
   177b8:	cmp	r0, #0
   177bc:	beq	17818 <rb_dlinkAdd+0x68>
   177c0:	cmp	r1, #0
   177c4:	beq	17838 <rb_dlinkAdd+0x88>
   177c8:	mov	r2, #0
   177cc:	stm	r1, {r0, r2}
   177d0:	ldr	r0, [pc, #128]	; 17858 <rb_dlinkAdd+0xa8>
   177d4:	ldr	r0, [pc, r0]
   177d8:	ldr	r2, [r0]
   177dc:	str	r2, [r1, #8]
   177e0:	cmp	r2, #0
   177e4:	beq	177f4 <rb_dlinkAdd+0x44>
   177e8:	add	r2, r2, #4
   177ec:	str	r1, [r2]
   177f0:	b	17804 <rb_dlinkAdd+0x54>
   177f4:	mov	r2, r0
   177f8:	ldr	r3, [r2, #4]!
   177fc:	cmp	r3, #0
   17800:	streq	r1, [r2]
   17804:	str	r1, [r0]
   17808:	ldr	r1, [r0, #8]
   1780c:	add	r1, r1, #1
   17810:	str	r1, [r0, #8]
   17814:	pop	{fp, pc}
   17818:	ldr	r0, [pc, #60]	; 1785c <rb_dlinkAdd+0xac>
   1781c:	add	r0, pc, r0
   17820:	ldr	r1, [pc, #56]	; 17860 <rb_dlinkAdd+0xb0>
   17824:	add	r1, pc, r1
   17828:	ldr	r3, [pc, #52]	; 17864 <rb_dlinkAdd+0xb4>
   1782c:	add	r3, pc, r3
   17830:	mov	r2, #143	; 0x8f
   17834:	bl	e7e0 <__assert_fail@plt>
   17838:	ldr	r0, [pc, #40]	; 17868 <rb_dlinkAdd+0xb8>
   1783c:	add	r0, pc, r0
   17840:	ldr	r1, [pc, #36]	; 1786c <rb_dlinkAdd+0xbc>
   17844:	add	r1, pc, r1
   17848:	ldr	r3, [pc, #32]	; 17870 <rb_dlinkAdd+0xc0>
   1784c:	add	r3, pc, r3
   17850:	mov	r2, #144	; 0x90
   17854:	bl	e7e0 <__assert_fail@plt>
   17858:	.word	0x000432f0
   1785c:	.word	0x00028df5
   17860:	.word	0x00028d92
   17864:	.word	0x00028df2
   17868:	.word	0x00028d70
   1786c:	.word	0x00028d72
   17870:	.word	0x00028dd2

00017874 <check_class>:
   17874:	push	{r4, r5, r6, sl, fp, lr}
   17878:	add	fp, sp, #16
   1787c:	ldr	r0, [pc, #80]	; 178d4 <check_class+0x60>
   17880:	ldr	r0, [pc, r0]
   17884:	ldr	r6, [r0]
   17888:	b	17894 <check_class+0x20>
   1788c:	mov	r0, r4
   17890:	bl	e7bc <free_class@plt>
   17894:	cmp	r6, #0
   17898:	popeq	{r4, r5, r6, sl, fp, pc}
   1789c:	mov	r5, r6
   178a0:	ldr	r4, [r6]
   178a4:	ldr	r6, [r6, #8]
   178a8:	ldr	r0, [r4, #8]
   178ac:	cmn	r0, #1
   178b0:	bgt	17894 <check_class+0x20>
   178b4:	mov	r0, r5
   178b8:	bl	178d8 <rb_dlinkDelete>
   178bc:	mov	r0, r5
   178c0:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   178c4:	ldr	r0, [r4, #36]	; 0x24
   178c8:	cmp	r0, #0
   178cc:	bgt	17894 <check_class+0x20>
   178d0:	b	1788c <check_class+0x18>
   178d4:	.word	0x00043244

000178d8 <rb_dlinkDelete>:
   178d8:	cmp	r0, #0
   178dc:	beq	1792c <rb_dlinkDelete+0x54>
   178e0:	ldr	ip, [pc, #108]	; 17954 <rb_dlinkDelete+0x7c>
   178e4:	ldr	ip, [pc, ip]
   178e8:	ldmib	r0, {r2, r3}
   178ec:	add	r1, r3, #4
   178f0:	cmp	r3, #0
   178f4:	addeq	r1, ip, #4
   178f8:	str	r2, [r1]
   178fc:	ldmib	r0, {r1, r2}
   17900:	cmp	r1, #0
   17904:	mov	r3, ip
   17908:	addne	r3, r1, #8
   1790c:	str	r2, [r3]
   17910:	mov	r1, #0
   17914:	str	r1, [r0, #4]
   17918:	str	r1, [r0, #8]
   1791c:	ldr	r0, [ip, #8]
   17920:	sub	r0, r0, #1
   17924:	str	r0, [ip, #8]
   17928:	bx	lr
   1792c:	push	{fp, lr}
   17930:	mov	fp, sp
   17934:	ldr	r0, [pc, #28]	; 17958 <rb_dlinkDelete+0x80>
   17938:	add	r0, pc, r0
   1793c:	ldr	r1, [pc, #24]	; 1795c <rb_dlinkDelete+0x84>
   17940:	add	r1, pc, r1
   17944:	ldr	r3, [pc, #20]	; 17960 <rb_dlinkDelete+0x88>
   17948:	add	r3, pc, r3
   1794c:	mov	r2, #235	; 0xeb
   17950:	bl	e7e0 <__assert_fail@plt>
   17954:	.word	0x000431e0
   17958:	.word	0x00028c74
   1795c:	.word	0x00028c76
   17960:	.word	0x00028d11

00017964 <initclass>:
   17964:	push	{r4, sl, fp, lr}
   17968:	add	fp, sp, #8
   1796c:	bl	de68 <make_class@plt>
   17970:	ldr	r4, [pc, #20]	; 1798c <initclass+0x28>
   17974:	ldr	r4, [pc, r4]
   17978:	str	r0, [r4]
   1797c:	bl	17990 <rb_strdup>
   17980:	ldr	r1, [r4]
   17984:	str	r0, [r1, #4]
   17988:	pop	{r4, sl, fp, pc}
   1798c:	.word	0x00042ed8

00017990 <rb_strdup>:
   17990:	push	{fp, lr}
   17994:	mov	fp, sp
   17998:	mov	r0, #8
   1799c:	bl	da90 <malloc@plt>
   179a0:	cmp	r0, #0
   179a4:	movwne	r1, #27765	; 0x6c75
   179a8:	movtne	r1, #116	; 0x74
   179ac:	strne	r1, [r0, #4]
   179b0:	movwne	r1, #25956	; 0x6564
   179b4:	movtne	r1, #24934	; 0x6166
   179b8:	strne	r1, [r0]
   179bc:	popne	{fp, pc}
   179c0:	bl	d448 <rb_outofmemory@plt>

000179c4 <report_classes>:
   179c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179c8:	add	fp, sp, #24
   179cc:	sub	sp, sp, #40	; 0x28
   179d0:	mov	r9, r0
   179d4:	ldr	r0, [pc, #220]	; 17ab8 <report_classes+0xf4>
   179d8:	ldr	r0, [pc, r0]
   179dc:	ldr	r6, [r0]
   179e0:	cmp	r6, #0
   179e4:	beq	17a50 <report_classes+0x8c>
   179e8:	ldr	r8, [pc, #204]	; 17abc <report_classes+0xf8>
   179ec:	add	r8, pc, r8
   179f0:	ldr	r0, [r6]
   179f4:	ldr	r3, [r0, #4]
   179f8:	ldr	r1, [r0, #8]
   179fc:	ldr	lr, [r0, #12]
   17a00:	ldr	ip, [r0, #16]
   17a04:	ldr	r7, [r0, #20]
   17a08:	ldr	r4, [r0, #24]
   17a0c:	ldr	r5, [r0, #28]
   17a10:	ldr	r2, [r0, #32]
   17a14:	ldr	r0, [r0, #36]	; 0x24
   17a18:	str	r0, [sp, #32]
   17a1c:	stm	sp, {r2, r5}
   17a20:	add	r0, sp, #8
   17a24:	stm	r0, {r1, r4, lr}
   17a28:	str	r7, [sp, #20]
   17a2c:	str	ip, [sp, #24]
   17a30:	str	r7, [sp, #28]
   17a34:	mov	r0, r9
   17a38:	mov	r1, #218	; 0xda
   17a3c:	mov	r2, r8
   17a40:	bl	dc88 <sendto_one_numeric@plt>
   17a44:	ldr	r6, [r6, #8]
   17a48:	cmp	r6, #0
   17a4c:	bne	179f0 <report_classes+0x2c>
   17a50:	ldr	r0, [pc, #104]	; 17ac0 <report_classes+0xfc>
   17a54:	ldr	r0, [pc, r0]
   17a58:	ldr	r0, [r0]
   17a5c:	ldr	r3, [r0, #4]
   17a60:	add	ip, r0, #8
   17a64:	ldm	ip, {r1, r2, ip}
   17a68:	ldr	r6, [r0, #20]
   17a6c:	ldr	r5, [r0, #24]
   17a70:	ldr	r4, [r0, #28]
   17a74:	ldr	r7, [r0, #32]
   17a78:	ldr	r0, [r0, #36]	; 0x24
   17a7c:	str	r0, [sp, #32]
   17a80:	str	r7, [sp]
   17a84:	str	r4, [sp, #4]
   17a88:	str	r1, [sp, #8]
   17a8c:	str	r5, [sp, #12]
   17a90:	add	r0, sp, #16
   17a94:	stm	r0, {r2, r6, ip}
   17a98:	str	r6, [sp, #28]
   17a9c:	ldr	r2, [pc, #32]	; 17ac4 <report_classes+0x100>
   17aa0:	add	r2, pc, r2
   17aa4:	mov	r0, r9
   17aa8:	mov	r1, #218	; 0xda
   17aac:	bl	dc88 <sendto_one_numeric@plt>
   17ab0:	sub	sp, fp, #24
   17ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ab8:	.word	0x000430ec
   17abc:	.word	0x00029630
   17ac0:	.word	0x00042df8
   17ac4:	.word	0x0002957c

00017ac8 <get_sendq>:
   17ac8:	mov	r1, r0
   17acc:	movw	r0, #11520	; 0x2d00
   17ad0:	movt	r0, #305	; 0x131
   17ad4:	cmp	r1, #0
   17ad8:	ldrhne	r2, [r1, #80]	; 0x50
   17adc:	cmpne	r2, #4
   17ae0:	bne	17ae8 <get_sendq+0x20>
   17ae4:	bx	lr
   17ae8:	cmp	r2, #32
   17aec:	bne	17b04 <get_sendq+0x3c>
   17af0:	ldr	r0, [r1, #432]	; 0x1b0
   17af4:	ldr	r0, [r0, #136]	; 0x88
   17af8:	ldr	r0, [r0, #576]	; 0x240
   17afc:	ldr	r0, [r0, #24]
   17b00:	bx	lr
   17b04:	ldr	r1, [r1, #432]	; 0x1b0
   17b08:	ldr	r1, [r1, #132]	; 0x84
   17b0c:	cmp	r1, #0
   17b10:	ldrbne	r2, [r1]
   17b14:	tstne	r2, #2
   17b18:	beq	17ae4 <get_sendq+0x1c>
   17b1c:	ldr	r0, [r1, #52]	; 0x34
   17b20:	ldr	r0, [r0, #24]
   17b24:	bx	lr

00017b28 <init_client>:
   17b28:	push	{fp, lr}
   17b2c:	mov	fp, sp
   17b30:	ldr	r2, [pc, #300]	; 17c64 <init_client+0x13c>
   17b34:	add	r2, pc, r2
   17b38:	mov	r0, #448	; 0x1c0
   17b3c:	mov	r1, #8192	; 0x2000
   17b40:	bl	ded4 <rb_bh_create@plt>
   17b44:	ldr	r1, [pc, #284]	; 17c68 <init_client+0x140>
   17b48:	add	r1, pc, r1
   17b4c:	str	r0, [r1]
   17b50:	ldr	r2, [pc, #276]	; 17c6c <init_client+0x144>
   17b54:	add	r2, pc, r2
   17b58:	mov	r0, #492	; 0x1ec
   17b5c:	mov	r1, #1024	; 0x400
   17b60:	bl	ded4 <rb_bh_create@plt>
   17b64:	ldr	r1, [pc, #260]	; 17c70 <init_client+0x148>
   17b68:	add	r1, pc, r1
   17b6c:	str	r0, [r1]
   17b70:	ldr	r2, [pc, #252]	; 17c74 <init_client+0x14c>
   17b74:	add	r2, pc, r2
   17b78:	mov	r0, #272	; 0x110
   17b7c:	mov	r1, #256	; 0x100
   17b80:	bl	ded4 <rb_bh_create@plt>
   17b84:	ldr	r1, [pc, #236]	; 17c78 <init_client+0x150>
   17b88:	add	r1, pc, r1
   17b8c:	str	r0, [r1]
   17b90:	ldr	r2, [pc, #228]	; 17c7c <init_client+0x154>
   17b94:	add	r2, pc, r2
   17b98:	mov	r0, #76	; 0x4c
   17b9c:	mov	r1, #8192	; 0x2000
   17ba0:	bl	ded4 <rb_bh_create@plt>
   17ba4:	ldr	r1, [pc, #212]	; 17c80 <init_client+0x158>
   17ba8:	add	r1, pc, r1
   17bac:	str	r0, [r1]
   17bb0:	ldr	r2, [pc, #204]	; 17c84 <init_client+0x15c>
   17bb4:	add	r2, pc, r2
   17bb8:	movw	r0, #390	; 0x186
   17bbc:	mov	r1, #512	; 0x200
   17bc0:	bl	ded4 <rb_bh_create@plt>
   17bc4:	ldr	r1, [pc, #188]	; 17c88 <init_client+0x160>
   17bc8:	add	r1, pc, r1
   17bcc:	str	r0, [r1]
   17bd0:	ldr	r0, [pc, #180]	; 17c8c <init_client+0x164>
   17bd4:	add	r0, pc, r0
   17bd8:	ldr	r1, [pc, #176]	; 17c90 <init_client+0x168>
   17bdc:	add	r1, pc, r1
   17be0:	mov	r2, #0
   17be4:	mov	r3, #30
   17be8:	bl	d220 <rb_event_addish@plt>
   17bec:	ldr	r0, [pc, #160]	; 17c94 <init_client+0x16c>
   17bf0:	add	r0, pc, r0
   17bf4:	ldr	r1, [pc, #156]	; 17c98 <init_client+0x170>
   17bf8:	add	r1, pc, r1
   17bfc:	mov	r2, #0
   17c00:	mov	r3, #4
   17c04:	bl	d220 <rb_event_addish@plt>
   17c08:	ldr	r0, [pc, #140]	; 17c9c <init_client+0x174>
   17c0c:	add	r0, pc, r0
   17c10:	ldr	r1, [pc, #136]	; 17ca0 <init_client+0x178>
   17c14:	add	r1, pc, r1
   17c18:	mov	r2, #0
   17c1c:	mov	r3, #1
   17c20:	bl	d220 <rb_event_addish@plt>
   17c24:	ldr	r1, [pc, #120]	; 17ca4 <init_client+0x17c>
   17c28:	ldr	r1, [pc, r1]
   17c2c:	ldr	r0, [pc, #116]	; 17ca8 <init_client+0x180>
   17c30:	add	r0, pc, r0
   17c34:	mov	r2, #0
   17c38:	mov	r3, #1
   17c3c:	bl	d0e8 <rb_event_add@plt>
   17c40:	ldr	r1, [pc, #100]	; 17cac <init_client+0x184>
   17c44:	ldr	r1, [pc, r1]
   17c48:	ldr	r0, [pc, #96]	; 17cb0 <init_client+0x188>
   17c4c:	add	r0, pc, r0
   17c50:	bl	dfb8 <rb_dictionary_create@plt>
   17c54:	ldr	r1, [pc, #88]	; 17cb4 <init_client+0x18c>
   17c58:	ldr	r1, [pc, r1]
   17c5c:	str	r0, [r1]
   17c60:	pop	{fp, pc}
   17c64:	.word	0x00029509
   17c68:	.word	0x0004d5ac
   17c6c:	.word	0x000294e8
   17c70:	.word	0x0004d590
   17c74:	.word	0x000294d5
   17c78:	.word	0x0004d574
   17c7c:	.word	0x000294c2
   17c80:	.word	0x0004d558
   17c84:	.word	0x000294ac
   17c88:	.word	0x0004d53c
   17c8c:	.word	0x00029496
   17c90:	.word	0x000000d4
   17c94:	.word	0x00029486
   17c98:	.word	0x000000e8
   17c9c:	.word	0x0002947e
   17ca0:	.word	0x000002d0
   17ca4:	.word	0x00042f2c
   17ca8:	.word	0x0002946f
   17cac:	.word	0x00042f34
   17cb0:	.word	0x00029460
   17cb4:	.word	0x00042ce4

00017cb8 <check_pings>:
   17cb8:	push	{fp, lr}
   17cbc:	mov	fp, sp
   17cc0:	ldr	r0, [pc, #24]	; 17ce0 <check_pings+0x28>
   17cc4:	ldr	r0, [pc, r0]
   17cc8:	bl	1a794 <check_pings_list>
   17ccc:	ldr	r0, [pc, #16]	; 17ce4 <check_pings+0x2c>
   17cd0:	ldr	r0, [pc, r0]
   17cd4:	bl	1a794 <check_pings_list>
   17cd8:	pop	{fp, lr}
   17cdc:	b	1a910 <check_unknowns_list>
   17ce0:	.word	0x00042e64
   17ce4:	.word	0x00042d00

00017ce8 <free_exited_clients>:
   17ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17cec:	add	fp, sp, #28
   17cf0:	sub	sp, sp, #28
   17cf4:	ldr	r0, [pc, #452]	; 17ec0 <free_exited_clients+0x1d8>
   17cf8:	ldr	r0, [pc, r0]
   17cfc:	ldr	r6, [r0]
   17d00:	cmp	r6, #0
   17d04:	beq	17e34 <free_exited_clients+0x14c>
   17d08:	ldr	r7, [pc, #436]	; 17ec4 <free_exited_clients+0x1dc>
   17d0c:	add	r7, pc, r7
   17d10:	mov	r4, r6
   17d14:	ldr	r5, [r6]
   17d18:	ldr	r6, [r6, #8]
   17d1c:	ldr	r9, [pc, #420]	; 17ec8 <free_exited_clients+0x1e0>
   17d20:	ldr	r9, [pc, r9]
   17d24:	cmp	r9, #0
   17d28:	beq	17dd0 <free_exited_clients+0xe8>
   17d2c:	str	r6, [sp, #24]
   17d30:	add	r8, r5, #64	; 0x40
   17d34:	add	r6, r5, #88	; 0x58
   17d38:	mov	sl, #0
   17d3c:	ldr	r0, [r9]
   17d40:	ldr	r0, [r0, #12]
   17d44:	cmp	r0, r5
   17d48:	bne	17d94 <free_exited_clients+0xac>
   17d4c:	ldrh	r0, [r5, #80]	; 0x50
   17d50:	ldrd	r2, [r8]
   17d54:	ldrb	r1, [r5, #82]	; 0x52
   17d58:	str	r2, [sp, #8]
   17d5c:	str	r3, [sp, #12]
   17d60:	str	r1, [sp, #16]
   17d64:	str	r0, [sp]
   17d68:	mov	r0, #256	; 0x100
   17d6c:	mov	r1, #0
   17d70:	ldr	r2, [pc, #340]	; 17ecc <free_exited_clients+0x1e4>
   17d74:	add	r2, pc, r2
   17d78:	mov	r3, r6
   17d7c:	bl	d640 <sendto_realops_snomask@plt>
   17d80:	mov	r0, #256	; 0x100
   17d84:	mov	r1, #0
   17d88:	mov	r2, r7
   17d8c:	bl	d640 <sendto_realops_snomask@plt>
   17d90:	add	sl, sl, #1
   17d94:	ldr	r9, [r9, #8]
   17d98:	cmp	r9, #0
   17d9c:	bne	17d3c <free_exited_clients+0x54>
   17da0:	cmp	sl, #0
   17da4:	beq	17df0 <free_exited_clients+0x108>
   17da8:	mov	r0, r4
   17dac:	ldr	r1, [pc, #284]	; 17ed0 <free_exited_clients+0x1e8>
   17db0:	ldr	r1, [pc, r1]
   17db4:	bl	18f58 <rb_dlinkDelete>
   17db8:	mov	r0, r4
   17dbc:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   17dc0:	ldr	r6, [sp, #24]
   17dc4:	cmp	r6, #0
   17dc8:	bne	17d10 <free_exited_clients+0x28>
   17dcc:	b	17e34 <free_exited_clients+0x14c>
   17dd0:	mov	r0, r5
   17dd4:	cmp	r0, #0
   17dd8:	beq	17e00 <free_exited_clients+0x118>
   17ddc:	mov	r0, r5
   17de0:	bl	1aa48 <release_client_state>
   17de4:	mov	r0, r5
   17de8:	bl	1aa9c <free_client>
   17dec:	b	17e14 <free_exited_clients+0x12c>
   17df0:	ldr	r0, [r4]
   17df4:	ldr	r6, [sp, #24]
   17df8:	cmp	r0, #0
   17dfc:	bne	17ddc <free_exited_clients+0xf4>
   17e00:	mov	r0, #256	; 0x100
   17e04:	mov	r1, #0
   17e08:	ldr	r2, [pc, #196]	; 17ed4 <free_exited_clients+0x1ec>
   17e0c:	add	r2, pc, r2
   17e10:	bl	d640 <sendto_realops_snomask@plt>
   17e14:	mov	r0, r4
   17e18:	ldr	r1, [pc, #184]	; 17ed8 <free_exited_clients+0x1f0>
   17e1c:	ldr	r1, [pc, r1]
   17e20:	bl	18f58 <rb_dlinkDelete>
   17e24:	mov	r0, r4
   17e28:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   17e2c:	cmp	r6, #0
   17e30:	bne	17d10 <free_exited_clients+0x28>
   17e34:	ldr	r6, [pc, #160]	; 17edc <free_exited_clients+0x1f4>
   17e38:	ldr	r6, [pc, r6]
   17e3c:	cmp	r6, #0
   17e40:	beq	17eb8 <free_exited_clients+0x1d0>
   17e44:	ldr	r8, [pc, #148]	; 17ee0 <free_exited_clients+0x1f8>
   17e48:	add	r8, pc, r8
   17e4c:	ldr	r9, [pc, #144]	; 17ee4 <free_exited_clients+0x1fc>
   17e50:	ldr	r9, [pc, r9]
   17e54:	ldr	r7, [pc, #140]	; 17ee8 <free_exited_clients+0x200>
   17e58:	add	r7, pc, r7
   17e5c:	ldr	r4, [r6]
   17e60:	ldr	r5, [r6, #8]
   17e64:	cmp	r4, #0
   17e68:	beq	17e88 <free_exited_clients+0x1a0>
   17e6c:	mov	r0, r4
   17e70:	bl	1aa48 <release_client_state>
   17e74:	mov	r0, r4
   17e78:	bl	1aa9c <free_client>
   17e7c:	mov	r0, r6
   17e80:	mov	r1, r7
   17e84:	b	17ea0 <free_exited_clients+0x1b8>
   17e88:	mov	r0, #256	; 0x100
   17e8c:	mov	r1, #0
   17e90:	mov	r2, r8
   17e94:	bl	d640 <sendto_realops_snomask@plt>
   17e98:	mov	r0, r6
   17e9c:	mov	r1, r9
   17ea0:	bl	18f58 <rb_dlinkDelete>
   17ea4:	mov	r0, r6
   17ea8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   17eac:	cmp	r5, #0
   17eb0:	mov	r6, r5
   17eb4:	bne	17e5c <free_exited_clients+0x174>
   17eb8:	sub	sp, fp, #28
   17ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ec0:	.word	0x00042d8c
   17ec4:	.word	0x00029733
   17ec8:	.word	0x0004d508
   17ecc:	.word	0x00029698
   17ed0:	.word	0x00042cd4
   17ed4:	.word	0x00029663
   17ed8:	.word	0x00042c68
   17edc:	.word	0x0004d410
   17ee0:	.word	0x00029627
   17ee4:	.word	0x00042c34
   17ee8:	.word	0x0004d3f0

00017eec <exit_aborted_clients>:
   17eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ef0:	add	fp, sp, #28
   17ef4:	sub	sp, sp, #20
   17ef8:	ldr	r5, [pc, #272]	; 18010 <exit_aborted_clients+0x124>
   17efc:	ldr	r5, [pc, r5]
   17f00:	cmp	r5, #0
   17f04:	beq	18008 <exit_aborted_clients+0x11c>
   17f08:	ldr	r9, [pc, #260]	; 18014 <exit_aborted_clients+0x128>
   17f0c:	add	r9, pc, r9
   17f10:	ldr	sl, [pc, #256]	; 18018 <exit_aborted_clients+0x12c>
   17f14:	ldr	sl, [pc, sl]
   17f18:	ldr	r7, [pc, #252]	; 1801c <exit_aborted_clients+0x130>
   17f1c:	add	r7, pc, r7
   17f20:	ldr	r6, [pc, #248]	; 18020 <exit_aborted_clients+0x134>
   17f24:	add	r6, pc, r6
   17f28:	ldr	r4, [r5]
   17f2c:	ldr	r8, [r5, #8]
   17f30:	ldr	r0, [r4, #12]
   17f34:	bl	1ac34 <rb_dlinkFind>
   17f38:	cmp	r0, #0
   17f3c:	beq	17f84 <exit_aborted_clients+0x98>
   17f40:	ldr	r0, [r4, #12]
   17f44:	ldrh	r1, [r0, #80]	; 0x50
   17f48:	ldrd	r2, [r0, #64]	; 0x40
   17f4c:	ldrb	r5, [r0, #82]	; 0x52
   17f50:	add	ip, sp, #8
   17f54:	stm	ip, {r2, r3, r5}
   17f58:	str	r1, [sp]
   17f5c:	add	r3, r0, #88	; 0x58
   17f60:	mov	r0, #256	; 0x100
   17f64:	mov	r1, #0
   17f68:	mov	r2, r7
   17f6c:	bl	d640 <sendto_realops_snomask@plt>
   17f70:	mov	r0, #256	; 0x100
   17f74:	mov	r1, #0
   17f78:	mov	r2, r6
   17f7c:	bl	d640 <sendto_realops_snomask@plt>
   17f80:	b	17ffc <exit_aborted_clients+0x110>
   17f84:	mov	r0, r5
   17f88:	mov	r1, r9
   17f8c:	bl	18f58 <rb_dlinkDelete>
   17f90:	ldr	r0, [r4, #12]
   17f94:	ldrh	r1, [r0, #80]	; 0x50
   17f98:	sub	r1, r1, #1
   17f9c:	cmp	r1, #31
   17fa0:	bhi	17fd4 <exit_aborted_clients+0xe8>
   17fa4:	mov	r2, #1
   17fa8:	mov	r3, #-2147483645	; 0x80000003
   17fac:	tst	r3, r2, lsl r1
   17fb0:	beq	17fd4 <exit_aborted_clients+0xe8>
   17fb4:	add	r1, r4, #16
   17fb8:	str	r1, [sp]
   17fbc:	add	r3, r0, #88	; 0x58
   17fc0:	mov	r0, #256	; 0x100
   17fc4:	mov	r1, #0
   17fc8:	ldr	r2, [pc, #84]	; 18024 <exit_aborted_clients+0x138>
   17fcc:	add	r2, pc, r2
   17fd0:	bl	d640 <sendto_realops_snomask@plt>
   17fd4:	ldr	r0, [r4, #12]
   17fd8:	ldr	r1, [r0, #64]	; 0x40
   17fdc:	bic	r1, r1, #32
   17fe0:	str	r1, [r0, #64]	; 0x40
   17fe4:	add	r3, r4, #16
   17fe8:	mov	r1, r0
   17fec:	mov	r2, sl
   17ff0:	bl	e534 <exit_client@plt>
   17ff4:	mov	r0, r4
   17ff8:	bl	183ec <rb_free>
   17ffc:	cmp	r8, #0
   18000:	mov	r5, r8
   18004:	bne	17f28 <exit_aborted_clients+0x3c>
   18008:	sub	sp, fp, #28
   1800c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18010:	.word	0x0004d32c
   18014:	.word	0x0004d31c
   18018:	.word	0x00042c44
   1801c:	.word	0x00029576
   18020:	.word	0x0002951b
   18024:	.word	0x000294f8

00018028 <connid_get>:
   18028:	push	{r4, r5, fp, lr}
   1802c:	add	fp, sp, #8
   18030:	mov	r4, r0
   18034:	ldrb	r1, [r0, #65]	; 0x41
   18038:	mov	r0, #0
   1803c:	tst	r1, #32
   18040:	popeq	{r4, r5, fp, pc}
   18044:	ldr	r0, [pc, #116]	; 180c0 <connid_get+0x98>
   18048:	ldr	r0, [pc, r0]
   1804c:	add	r0, r0, #1
   18050:	ldr	r5, [pc, #108]	; 180c4 <connid_get+0x9c>
   18054:	add	r5, pc, r5
   18058:	b	18074 <connid_get+0x4c>
   1805c:	cmp	r1, #0
   18060:	addeq	r0, r1, #1
   18064:	streq	r0, [r5]
   18068:	ldr	r0, [pc, #92]	; 180cc <connid_get+0xa4>
   1806c:	ldr	r0, [pc, r0]
   18070:	add	r0, r0, #1
   18074:	str	r0, [r5]
   18078:	bl	dfdc <find_cli_connid_hash@plt>
   1807c:	ldr	r1, [pc, #68]	; 180c8 <connid_get+0xa0>
   18080:	ldr	r1, [pc, r1]
   18084:	cmp	r0, #0
   18088:	bne	1805c <connid_get+0x34>
   1808c:	mov	r0, r4
   18090:	bl	de44 <add_to_cli_connid_hash@plt>
   18094:	ldr	r5, [pc, #52]	; 180d0 <connid_get+0xa8>
   18098:	ldr	r5, [pc, r5]
   1809c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   180a0:	mov	r1, r0
   180a4:	ldr	r0, [r4, #432]	; 0x1b0
   180a8:	add	r2, r0, #12
   180ac:	mov	r0, r5
   180b0:	bl	180d8 <rb_dlinkAdd>
   180b4:	ldr	r0, [pc, #24]	; 180d4 <connid_get+0xac>
   180b8:	ldr	r0, [pc, r0]
   180bc:	pop	{r4, r5, fp, pc}
   180c0:	.word	0x0004d0c0
   180c4:	.word	0x0004d0b4
   180c8:	.word	0x0004d088
   180cc:	.word	0x0004d09c
   180d0:	.word	0x0004d070
   180d4:	.word	0x0004d050

000180d8 <rb_dlinkAdd>:
   180d8:	push	{fp, lr}
   180dc:	mov	fp, sp
   180e0:	cmp	r0, #0
   180e4:	beq	18144 <rb_dlinkAdd+0x6c>
   180e8:	cmp	r1, #0
   180ec:	beq	18164 <rb_dlinkAdd+0x8c>
   180f0:	cmp	r2, #0
   180f4:	beq	18184 <rb_dlinkAdd+0xac>
   180f8:	mov	r3, #0
   180fc:	stm	r1, {r0, r3}
   18100:	ldr	r0, [r2]
   18104:	str	r0, [r1, #8]
   18108:	ldr	r0, [r2]
   1810c:	cmp	r0, #0
   18110:	beq	18120 <rb_dlinkAdd+0x48>
   18114:	add	r0, r0, #4
   18118:	str	r1, [r0]
   1811c:	b	18130 <rb_dlinkAdd+0x58>
   18120:	mov	r0, r2
   18124:	ldr	r3, [r0, #4]!
   18128:	cmp	r3, #0
   1812c:	streq	r1, [r0]
   18130:	str	r1, [r2]
   18134:	ldr	r0, [r2, #8]
   18138:	add	r0, r0, #1
   1813c:	str	r0, [r2, #8]
   18140:	pop	{fp, pc}
   18144:	ldr	r0, [pc, #88]	; 181a4 <rb_dlinkAdd+0xcc>
   18148:	add	r0, pc, r0
   1814c:	ldr	r1, [pc, #84]	; 181a8 <rb_dlinkAdd+0xd0>
   18150:	add	r1, pc, r1
   18154:	ldr	r3, [pc, #80]	; 181ac <rb_dlinkAdd+0xd4>
   18158:	add	r3, pc, r3
   1815c:	mov	r2, #143	; 0x8f
   18160:	bl	e7e0 <__assert_fail@plt>
   18164:	ldr	r0, [pc, #68]	; 181b0 <rb_dlinkAdd+0xd8>
   18168:	add	r0, pc, r0
   1816c:	ldr	r1, [pc, #64]	; 181b4 <rb_dlinkAdd+0xdc>
   18170:	add	r1, pc, r1
   18174:	ldr	r3, [pc, #60]	; 181b8 <rb_dlinkAdd+0xe0>
   18178:	add	r3, pc, r3
   1817c:	mov	r2, #144	; 0x90
   18180:	bl	e7e0 <__assert_fail@plt>
   18184:	ldr	r0, [pc, #48]	; 181bc <rb_dlinkAdd+0xe4>
   18188:	add	r0, pc, r0
   1818c:	ldr	r1, [pc, #44]	; 181c0 <rb_dlinkAdd+0xe8>
   18190:	add	r1, pc, r1
   18194:	ldr	r3, [pc, #40]	; 181c4 <rb_dlinkAdd+0xec>
   18198:	add	r3, pc, r3
   1819c:	mov	r2, #145	; 0x91
   181a0:	bl	e7e0 <__assert_fail@plt>
   181a4:	.word	0x000284c9
   181a8:	.word	0x00028466
   181ac:	.word	0x000284c6
   181b0:	.word	0x00028444
   181b4:	.word	0x00028446
   181b8:	.word	0x000284a6
   181bc:	.word	0x0002dcbd
   181c0:	.word	0x00028426
   181c4:	.word	0x00028486

000181c8 <connid_put>:
   181c8:	push	{r4, r5, fp, lr}
   181cc:	add	fp, sp, #8
   181d0:	cmp	r0, #0
   181d4:	popeq	{r4, r5, fp, pc}
   181d8:	mov	r4, r0
   181dc:	bl	dfdc <find_cli_connid_hash@plt>
   181e0:	cmp	r0, #0
   181e4:	beq	18208 <connid_put+0x40>
   181e8:	mov	r5, r0
   181ec:	mov	r0, r4
   181f0:	bl	e3d8 <del_from_cli_connid_hash@plt>
   181f4:	ldr	r0, [r5, #432]	; 0x1b0
   181f8:	add	r1, r0, #12
   181fc:	mov	r0, r4
   18200:	pop	{r4, r5, fp, lr}
   18204:	b	1820c <rb_dlinkFindDestroy>
   18208:	pop	{r4, r5, fp, pc}

0001820c <rb_dlinkFindDestroy>:
   1820c:	push	{fp, lr}
   18210:	mov	fp, sp
   18214:	cmp	r1, #0
   18218:	beq	18238 <rb_dlinkFindDestroy+0x2c>
   1821c:	cmp	r0, #0
   18220:	beq	18258 <rb_dlinkFindDestroy+0x4c>
   18224:	bl	1a6bc <rb_dlinkFindDelete>
   18228:	cmp	r0, #0
   1822c:	popeq	{fp, pc}
   18230:	pop	{fp, lr}
   18234:	b	d7c0 <rb_free_rb_dlink_node@plt>
   18238:	ldr	r0, [pc, #56]	; 18278 <rb_dlinkFindDestroy+0x6c>
   1823c:	add	r0, pc, r0
   18240:	ldr	r1, [pc, #52]	; 1827c <rb_dlinkFindDestroy+0x70>
   18244:	add	r1, pc, r1
   18248:	ldr	r3, [pc, #48]	; 18280 <rb_dlinkFindDestroy+0x74>
   1824c:	add	r3, pc, r3
   18250:	movw	r2, #287	; 0x11f
   18254:	bl	e7e0 <__assert_fail@plt>
   18258:	ldr	r0, [pc, #36]	; 18284 <rb_dlinkFindDestroy+0x78>
   1825c:	add	r0, pc, r0
   18260:	ldr	r1, [pc, #32]	; 18288 <rb_dlinkFindDestroy+0x7c>
   18264:	add	r1, pc, r1
   18268:	ldr	r3, [pc, #28]	; 1828c <rb_dlinkFindDestroy+0x80>
   1826c:	add	r3, pc, r3
   18270:	mov	r2, #288	; 0x120
   18274:	bl	e7e0 <__assert_fail@plt>
   18278:	.word	0x0002dc09
   1827c:	.word	0x00028372
   18280:	.word	0x00028979
   18284:	.word	0x000283b5
   18288:	.word	0x00028352
   1828c:	.word	0x00028959

00018290 <client_release_connids>:
   18290:	push	{r4, sl, fp, lr}
   18294:	add	fp, sp, #8
   18298:	ldrb	r1, [r0, #65]	; 0x41
   1829c:	tst	r1, #32
   182a0:	popeq	{r4, sl, fp, pc}
   182a4:	ldr	r0, [r0, #432]	; 0x1b0
   182a8:	ldr	r4, [r0, #12]
   182ac:	cmp	r4, #0
   182b0:	beq	182c8 <client_release_connids+0x38>
   182b4:	ldr	r0, [r4]
   182b8:	ldr	r4, [r4, #8]
   182bc:	bl	e6f0 <connid_put@plt>
   182c0:	cmp	r4, #0
   182c4:	bne	182b4 <client_release_connids+0x24>
   182c8:	pop	{r4, sl, fp, pc}

000182cc <make_client>:
   182cc:	push	{r4, r5, fp, lr}
   182d0:	add	fp, sp, #8
   182d4:	mov	r5, r0
   182d8:	ldr	r0, [pc, #172]	; 1838c <make_client+0xc0>
   182dc:	ldr	r0, [pc, r0]
   182e0:	bl	de20 <rb_bh_alloc@plt>
   182e4:	mov	r4, r0
   182e8:	cmp	r5, #0
   182ec:	beq	18304 <make_client+0x38>
   182f0:	mov	r0, #0
   182f4:	str	r0, [r4, #432]	; 0x1b0
   182f8:	str	r0, [r4, #436]	; 0x1b4
   182fc:	str	r5, [r4, #36]	; 0x24
   18300:	b	18360 <make_client+0x94>
   18304:	str	r4, [r4, #36]	; 0x24
   18308:	ldr	r0, [pc, #128]	; 18390 <make_client+0xc4>
   1830c:	ldr	r0, [pc, r0]
   18310:	bl	de20 <rb_bh_alloc@plt>
   18314:	str	r0, [r4, #432]	; 0x1b0
   18318:	ldr	r0, [r4, #64]	; 0x40
   1831c:	orr	r0, r0, #8192	; 0x2000
   18320:	str	r0, [r4, #64]	; 0x40
   18324:	bl	d07c <rb_current_time@plt>
   18328:	ldr	r1, [r4, #432]	; 0x1b0
   1832c:	str	r0, [r1, #44]	; 0x2c
   18330:	str	r0, [r1, #48]	; 0x30
   18334:	mov	r0, #0
   18338:	str	r0, [r1, #300]	; 0x12c
   1833c:	ldr	r0, [pc, #80]	; 18394 <make_client+0xc8>
   18340:	ldr	r0, [pc, r0]
   18344:	bl	de20 <rb_bh_alloc@plt>
   18348:	str	r0, [r4, #436]	; 0x1b4
   1834c:	ldr	r1, [r4, #432]	; 0x1b0
   18350:	ldr	r2, [pc, #64]	; 18398 <make_client+0xcc>
   18354:	ldr	r2, [pc, r2]
   18358:	mov	r0, r4
   1835c:	bl	180d8 <rb_dlinkAdd>
   18360:	mov	r0, #0
   18364:	strb	r0, [r4, #82]	; 0x52
   18368:	mov	r0, #8
   1836c:	strh	r0, [r4, #80]	; 0x50
   18370:	add	r0, r4, #152	; 0x98
   18374:	ldr	r1, [pc, #32]	; 1839c <make_client+0xd0>
   18378:	add	r1, pc, r1
   1837c:	mov	r2, #11
   18380:	bl	e510 <rb_strlcpy@plt>
   18384:	mov	r0, r4
   18388:	pop	{r4, r5, fp, pc}
   1838c:	.word	0x0004ce18
   18390:	.word	0x0004cdec
   18394:	.word	0x0004cdbc
   18398:	.word	0x00042520
   1839c:	.word	0x00028c94

000183a0 <free_pre_client>:
   183a0:	push	{r4, sl, fp, lr}
   183a4:	add	fp, sp, #8
   183a8:	mov	r4, r0
   183ac:	ldr	r0, [r0, #436]	; 0x1b4
   183b0:	cmp	r0, #0
   183b4:	popeq	{r4, sl, fp, pc}
   183b8:	ldr	r0, [r0, #120]	; 0x78
   183bc:	bl	183ec <rb_free>
   183c0:	ldr	r0, [r4, #436]	; 0x1b4
   183c4:	ldr	r0, [r0, #124]	; 0x7c
   183c8:	bl	183ec <rb_free>
   183cc:	ldr	r1, [r4, #436]	; 0x1b4
   183d0:	ldr	r0, [pc, #16]	; 183e8 <free_pre_client+0x48>
   183d4:	ldr	r0, [pc, r0]
   183d8:	bl	e708 <rb_bh_free@plt>
   183dc:	mov	r0, #0
   183e0:	str	r0, [r4, #436]	; 0x1b4
   183e4:	pop	{r4, sl, fp, pc}
   183e8:	.word	0x0004cd28

000183ec <rb_free>:
   183ec:	cmp	r0, #0
   183f0:	bxeq	lr
   183f4:	b	d328 <free@plt>

000183f8 <notify_banned_client>:
   183f8:	push	{r4, r5, r6, r7, fp, lr}
   183fc:	add	fp, sp, #16
   18400:	sub	sp, sp, #8
   18404:	mov	r6, r2
   18408:	mov	r4, r0
   1840c:	ldr	r7, [pc, #216]	; 184ec <notify_banned_client+0xf4>
   18410:	ldr	r7, [pc, r7]
   18414:	ldr	r0, [r7, #124]	; 0x7c
   18418:	cmp	r0, #0
   1841c:	beq	18438 <notify_banned_client+0x40>
   18420:	mov	r0, r1
   18424:	bl	d010 <get_user_ban_reason@plt>
   18428:	mov	r5, r0
   1842c:	cmp	r6, #0
   18430:	bne	1847c <notify_banned_client+0x84>
   18434:	b	18464 <notify_banned_client+0x6c>
   18438:	ldr	r1, [r1]
   1843c:	ldr	r2, [pc, #172]	; 184f0 <notify_banned_client+0xf8>
   18440:	add	r2, pc, r2
   18444:	ldr	r0, [pc, #168]	; 184f4 <notify_banned_client+0xfc>
   18448:	add	r0, pc, r0
   1844c:	cmp	r1, #0
   18450:	moveq	r0, r2
   18454:	ldr	r5, [pc, #156]	; 184f8 <notify_banned_client+0x100>
   18458:	add	r5, pc, r5
   1845c:	cmp	r6, #0
   18460:	bne	1847c <notify_banned_client+0x84>
   18464:	ldrh	r1, [r4, #80]	; 0x50
   18468:	cmp	r1, #64	; 0x40
   1846c:	bne	184a4 <notify_banned_client+0xac>
   18470:	ldr	r1, [r4, #24]
   18474:	cmp	r1, #0
   18478:	beq	184a4 <notify_banned_client+0xac>
   1847c:	str	r0, [sp]
   18480:	add	r3, r4, #88	; 0x58
   18484:	ldr	r0, [pc, #116]	; 18500 <notify_banned_client+0x108>
   18488:	ldr	r0, [pc, r0]
   1848c:	add	r2, r0, #88	; 0x58
   18490:	ldr	r1, [pc, #108]	; 18504 <notify_banned_client+0x10c>
   18494:	add	r1, pc, r1
   18498:	mov	r0, r4
   1849c:	bl	d1e4 <sendto_one@plt>
   184a0:	b	184b4 <notify_banned_client+0xbc>
   184a4:	ldr	r1, [pc, #80]	; 184fc <notify_banned_client+0x104>
   184a8:	add	r1, pc, r1
   184ac:	mov	r0, r4
   184b0:	bl	d1e4 <sendto_one@plt>
   184b4:	ldr	r0, [r7, #20]
   184b8:	cmp	r0, #0
   184bc:	beq	184cc <notify_banned_client+0xd4>
   184c0:	ldrb	r1, [r0]
   184c4:	cmp	r1, #0
   184c8:	movne	r5, r0
   184cc:	ldr	r2, [pc, #52]	; 18508 <notify_banned_client+0x110>
   184d0:	ldr	r2, [pc, r2]
   184d4:	mov	r0, r4
   184d8:	mov	r1, r4
   184dc:	mov	r3, r5
   184e0:	sub	sp, fp, #16
   184e4:	pop	{r4, r5, r6, r7, fp, lr}
   184e8:	b	1850c <exit_client>
   184ec:	.word	0x0004276c
   184f0:	.word	0x00029230
   184f4:	.word	0x00029230
   184f8:	.word	0x00029206
   184fc:	.word	0x00028c0e
   18500:	.word	0x000426d0
   18504:	.word	0x00028c4a
   18508:	.word	0x00042688

0001850c <exit_client>:
   1850c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18510:	add	fp, sp, #24
   18514:	sub	sp, sp, #16
   18518:	mov	r6, r0
   1851c:	mov	r5, r1
   18520:	ldr	r0, [r5, #64]!	; 0x40
   18524:	mvn	r4, #0
   18528:	tst	r0, #32
   1852c:	bne	1864c <exit_client+0x140>
   18530:	mov	r8, r3
   18534:	mov	r9, r2
   18538:	mov	r7, r1
   1853c:	ldr	r1, [r5, #4]
   18540:	orr	r0, r0, #32
   18544:	strd	r0, [r5]
   18548:	stm	sp, {r6, r7}
   1854c:	str	r2, [sp, #8]
   18550:	str	r3, [sp, #12]
   18554:	ldr	r0, [pc, #252]	; 18658 <exit_client+0x14c>
   18558:	ldr	r0, [pc, r0]
   1855c:	ldr	r0, [r0]
   18560:	mov	r1, sp
   18564:	bl	e654 <call_hook@plt>
   18568:	ldrh	r0, [r7, #80]	; 0x50
   1856c:	ldrb	r1, [r5, #1]
   18570:	tst	r1, #32
   18574:	bne	185a4 <exit_client+0x98>
   18578:	cmp	r0, #64	; 0x40
   1857c:	bne	185d0 <exit_client+0xc4>
   18580:	ldr	r0, [r7, #24]
   18584:	cmp	r0, #0
   18588:	beq	18620 <exit_client+0x114>
   1858c:	mov	r0, r6
   18590:	mov	r1, r7
   18594:	mov	r2, r8
   18598:	bl	199fc <exit_remote_client>
   1859c:	mvn	r4, #1
   185a0:	b	18638 <exit_client+0x12c>
   185a4:	cmp	r0, #64	; 0x40
   185a8:	bne	185f4 <exit_client+0xe8>
   185ac:	ldr	r0, [r7, #24]
   185b0:	cmp	r0, #0
   185b4:	beq	18628 <exit_client+0x11c>
   185b8:	mov	r0, r6
   185bc:	mov	r1, r7
   185c0:	mov	r2, r8
   185c4:	bl	193bc <exit_local_client>
   185c8:	mvn	r4, #1
   185cc:	b	18638 <exit_client+0x12c>
   185d0:	mvn	r4, #0
   185d4:	cmp	r0, #32
   185d8:	bne	18638 <exit_client+0x12c>
   185dc:	mov	r0, r6
   185e0:	mov	r1, r7
   185e4:	mov	r2, r9
   185e8:	mov	r3, r8
   185ec:	bl	19ac4 <exit_remote_server>
   185f0:	b	18618 <exit_client+0x10c>
   185f4:	cmp	r0, #16
   185f8:	beq	18620 <exit_client+0x114>
   185fc:	cmp	r0, #32
   18600:	bne	18628 <exit_client+0x11c>
   18604:	mov	r0, r6
   18608:	mov	r1, r7
   1860c:	mov	r2, r9
   18610:	mov	r3, r8
   18614:	bl	19624 <exit_local_server>
   18618:	mov	r4, #0
   1861c:	b	18638 <exit_client+0x12c>
   18620:	mvn	r4, #0
   18624:	b	18638 <exit_client+0x12c>
   18628:	mov	r0, r7
   1862c:	mov	r1, r8
   18630:	bl	19908 <exit_unknown_client>
   18634:	mvn	r4, #1
   18638:	ldr	r0, [pc, #28]	; 1865c <exit_client+0x150>
   1863c:	ldr	r0, [pc, r0]
   18640:	ldr	r0, [r0]
   18644:	mov	r1, #0
   18648:	bl	e654 <call_hook@plt>
   1864c:	mov	r0, r4
   18650:	sub	sp, fp, #24
   18654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18658:	.word	0x00042590
   1865c:	.word	0x00042428

00018660 <check_banned_lines>:
   18660:	push	{fp, lr}
   18664:	mov	fp, sp
   18668:	bl	e390 <check_dlines@plt>
   1866c:	bl	e6d8 <check_klines@plt>
   18670:	pop	{fp, lr}
   18674:	b	188bc <check_xlines>

00018678 <check_dlines>:
   18678:	push	{r4, r5, r6, r7, fp, lr}
   1867c:	add	fp, sp, #16
   18680:	ldr	r0, [pc, #216]	; 18760 <check_dlines+0xe8>
   18684:	ldr	r0, [pc, r0]
   18688:	ldr	r7, [r0]
   1868c:	cmp	r7, #0
   18690:	beq	1870c <check_dlines+0x94>
   18694:	ldr	r4, [pc, #200]	; 18764 <check_dlines+0xec>
   18698:	add	r4, pc, r4
   1869c:	ldr	r5, [r7]
   186a0:	ldr	r7, [r7, #8]
   186a4:	ldrh	r0, [r5, #80]	; 0x50
   186a8:	cmp	r0, #4
   186ac:	beq	18704 <check_dlines+0x8c>
   186b0:	ldr	r0, [r5, #432]	; 0x1b0
   186b4:	ldrh	r1, [r0, #140]!	; 0x8c
   186b8:	bl	e78c <find_dline@plt>
   186bc:	cmp	r0, #0
   186c0:	beq	18704 <check_dlines+0x8c>
   186c4:	mov	r6, r0
   186c8:	ldrb	r0, [r0, #2]
   186cc:	tst	r0, #16
   186d0:	bne	18704 <check_dlines+0x8c>
   186d4:	mov	r0, r5
   186d8:	mov	r1, #0
   186dc:	bl	d004 <get_client_name@plt>
   186e0:	mov	r3, r0
   186e4:	mov	r0, #256	; 0x100
   186e8:	mov	r1, #0
   186ec:	mov	r2, r4
   186f0:	bl	d640 <sendto_realops_snomask@plt>
   186f4:	mov	r0, r5
   186f8:	mov	r1, r6
   186fc:	mov	r2, #0
   18700:	bl	dc70 <notify_banned_client@plt>
   18704:	cmp	r7, #0
   18708:	bne	1869c <check_dlines+0x24>
   1870c:	ldr	r0, [pc, #84]	; 18768 <check_dlines+0xf0>
   18710:	ldr	r0, [pc, r0]
   18714:	ldr	r5, [r0]
   18718:	b	18728 <check_dlines+0xb0>
   1871c:	mov	r0, r4
   18720:	mov	r2, #0
   18724:	bl	dc70 <notify_banned_client@plt>
   18728:	cmp	r5, #0
   1872c:	popeq	{r4, r5, r6, r7, fp, pc}
   18730:	ldr	r4, [r5]
   18734:	ldr	r5, [r5, #8]
   18738:	ldr	r0, [r4, #432]	; 0x1b0
   1873c:	ldrh	r1, [r0, #140]!	; 0x8c
   18740:	bl	e78c <find_dline@plt>
   18744:	cmp	r0, #0
   18748:	beq	18728 <check_dlines+0xb0>
   1874c:	mov	r1, r0
   18750:	ldrb	r0, [r0, #2]
   18754:	tst	r0, #16
   18758:	bne	18728 <check_dlines+0xb0>
   1875c:	b	1871c <check_dlines+0xa4>
   18760:	.word	0x000424a4
   18764:	.word	0x00028ac2
   18768:	.word	0x00042164

0001876c <check_klines>:
   1876c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18770:	add	fp, sp, #28
   18774:	sub	sp, sp, #20
   18778:	ldr	r0, [pc, #304]	; 188b0 <check_klines+0x144>
   1877c:	ldr	r0, [pc, r0]
   18780:	ldr	r4, [r0]
   18784:	cmp	r4, #0
   18788:	beq	188a8 <check_klines+0x13c>
   1878c:	movw	r5, #512	; 0x200
   18790:	movt	r5, #8192	; 0x2000
   18794:	mov	sl, #0
   18798:	mov	r9, #64	; 0x40
   1879c:	ldr	r6, [r4]
   187a0:	ldr	r4, [r4, #8]
   187a4:	ldrh	r0, [r6, #80]	; 0x50
   187a8:	cmp	r0, #64	; 0x40
   187ac:	bne	18870 <check_klines+0x104>
   187b0:	ldr	r0, [r6, #24]
   187b4:	cmp	r0, #0
   187b8:	beq	18870 <check_klines+0x104>
   187bc:	ldr	r3, [r6, #432]	; 0x1b0
   187c0:	ldr	r0, [r3, #132]	; 0x84
   187c4:	ldr	r0, [r0, #4]
   187c8:	and	r0, r0, r5
   187cc:	cmp	r0, r5
   187d0:	bne	18800 <check_klines+0x94>
   187d4:	add	r0, r6, #152	; 0x98
   187d8:	str	r9, [sp]
   187dc:	mov	r1, #2
   187e0:	str	r1, [sp, #4]
   187e4:	str	r0, [sp, #8]
   187e8:	str	sl, [sp, #12]
   187ec:	add	r0, r6, #227	; 0xe3
   187f0:	mov	r1, #0
   187f4:	mov	r2, #0
   187f8:	mov	r3, #0
   187fc:	b	18820 <check_klines+0xb4>
   18800:	ldrh	r0, [r3, #140]!	; 0x8c
   18804:	add	r1, r6, #152	; 0x98
   18808:	str	r9, [sp]
   1880c:	stmib	sp, {r0, r1, sl}
   18810:	movw	r0, #291	; 0x123
   18814:	add	r1, r6, r0
   18818:	add	r0, r6, #163	; 0xa3
   1881c:	add	r2, r6, #227	; 0xe3
   18820:	bl	d2f8 <find_conf_by_address@plt>
   18824:	mov	r7, r0
   18828:	cmp	r0, #0
   1882c:	beq	18870 <check_klines+0x104>
   18830:	ldr	r8, [r6, #64]	; 0x40
   18834:	mov	r0, r6
   18838:	mov	r1, #0
   1883c:	bl	d004 <get_client_name@plt>
   18840:	mov	r3, r0
   18844:	tst	r8, #4194304	; 0x400000
   18848:	bne	1887c <check_klines+0x110>
   1884c:	mov	r0, #256	; 0x100
   18850:	mov	r1, #0
   18854:	ldr	r2, [pc, #92]	; 188b8 <check_klines+0x14c>
   18858:	add	r2, pc, r2
   1885c:	bl	d640 <sendto_realops_snomask@plt>
   18860:	mov	r0, r6
   18864:	mov	r1, r7
   18868:	mov	r2, #1
   1886c:	bl	dc70 <notify_banned_client@plt>
   18870:	cmp	r4, #0
   18874:	bne	1879c <check_klines+0x30>
   18878:	b	188a8 <check_klines+0x13c>
   1887c:	ldr	r0, [r7, #16]
   18880:	ldr	r1, [r7, #28]
   18884:	str	r1, [sp]
   18888:	str	r0, [sp, #4]
   1888c:	mov	r0, #256	; 0x100
   18890:	mov	r1, #0
   18894:	ldr	r2, [pc, #24]	; 188b4 <check_klines+0x148>
   18898:	add	r2, pc, r2
   1889c:	bl	d640 <sendto_realops_snomask@plt>
   188a0:	cmp	r4, #0
   188a4:	bne	1879c <check_klines+0x30>
   188a8:	sub	sp, fp, #28
   188ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188b0:	.word	0x000423ac
   188b4:	.word	0x00028876
   188b8:	.word	0x000288ee

000188bc <check_xlines>:
   188bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188c0:	add	fp, sp, #28
   188c4:	sub	sp, sp, #4
   188c8:	ldr	r0, [pc, #212]	; 189a4 <check_xlines+0xe8>
   188cc:	ldr	r0, [pc, r0]
   188d0:	ldr	r6, [r0]
   188d4:	cmp	r6, #0
   188d8:	beq	1899c <check_xlines+0xe0>
   188dc:	movw	r8, #345	; 0x159
   188e0:	ldr	sl, [pc, #192]	; 189a8 <check_xlines+0xec>
   188e4:	add	sl, pc, sl
   188e8:	ldr	r7, [pc, #188]	; 189ac <check_xlines+0xf0>
   188ec:	add	r7, pc, r7
   188f0:	ldr	r4, [r6]
   188f4:	ldr	r6, [r6, #8]
   188f8:	ldrh	r0, [r4, #80]	; 0x50
   188fc:	cmp	r0, #64	; 0x40
   18900:	bne	18970 <check_xlines+0xb4>
   18904:	ldr	r0, [r4, #24]
   18908:	cmp	r0, #0
   1890c:	beq	18970 <check_xlines+0xb4>
   18910:	add	r0, r4, r8
   18914:	mov	r1, #1
   18918:	bl	e1b0 <find_xline@plt>
   1891c:	cmp	r0, #0
   18920:	beq	18970 <check_xlines+0xb4>
   18924:	mov	r5, r0
   18928:	ldr	r9, [r4, #64]	; 0x40
   1892c:	mov	r0, r4
   18930:	mov	r1, #0
   18934:	bl	d004 <get_client_name@plt>
   18938:	mov	r3, r0
   1893c:	tst	r9, #4194304	; 0x400000
   18940:	bne	1897c <check_xlines+0xc0>
   18944:	mov	r0, #256	; 0x100
   18948:	mov	r1, #0
   1894c:	ldr	r2, [pc, #92]	; 189b0 <check_xlines+0xf4>
   18950:	add	r2, pc, r2
   18954:	bl	d640 <sendto_realops_snomask@plt>
   18958:	mov	r0, r4
   1895c:	mov	r1, r4
   18960:	ldr	r2, [pc, #76]	; 189b4 <check_xlines+0xf8>
   18964:	ldr	r2, [pc, r2]
   18968:	mov	r3, sl
   1896c:	bl	e534 <exit_client@plt>
   18970:	cmp	r6, #0
   18974:	bne	188f0 <check_xlines+0x34>
   18978:	b	1899c <check_xlines+0xe0>
   1897c:	ldr	r0, [r5, #16]
   18980:	str	r0, [sp]
   18984:	mov	r0, #256	; 0x100
   18988:	mov	r1, #0
   1898c:	mov	r2, r7
   18990:	bl	d640 <sendto_realops_snomask@plt>
   18994:	cmp	r6, #0
   18998:	bne	188f0 <check_xlines+0x34>
   1899c:	sub	sp, fp, #28
   189a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189a4:	.word	0x0004225c
   189a8:	.word	0x000288d3
   189ac:	.word	0x00028882
   189b0:	.word	0x00028853
   189b4:	.word	0x000421f4

000189b8 <get_client_name>:
   189b8:	push	{r4, r5, r6, r7, fp, lr}
   189bc:	add	fp, sp, #16
   189c0:	sub	sp, sp, #8
   189c4:	cmp	r0, #0
   189c8:	beq	18a7c <get_client_name+0xc4>
   189cc:	mov	r5, r0
   189d0:	add	r4, r0, #88	; 0x58
   189d4:	ldrb	r0, [r0, #65]	; 0x41
   189d8:	tst	r0, #32
   189dc:	beq	18a74 <get_client_name+0xbc>
   189e0:	mov	r6, r1
   189e4:	add	r7, r5, #163	; 0xa3
   189e8:	mov	r0, r4
   189ec:	mov	r1, r7
   189f0:	bl	e750 <irccmp@plt>
   189f4:	cmp	r0, #0
   189f8:	beq	18a74 <get_client_name+0xbc>
   189fc:	cmp	r6, #1
   18a00:	bne	18a28 <get_client_name+0x70>
   18a04:	ldr	r0, [pc, #196]	; 18ad0 <get_client_name+0x118>
   18a08:	ldr	r0, [pc, r0]
   18a0c:	ldr	r0, [r0, #204]	; 0xcc
   18a10:	cmp	r0, #0
   18a14:	beq	18a28 <get_client_name+0x70>
   18a18:	add	r0, r5, #64	; 0x40
   18a1c:	ldrb	r0, [r0, #3]
   18a20:	tst	r0, #1
   18a24:	movne	r6, #2
   18a28:	ldrh	r0, [r5, #80]	; 0x50
   18a2c:	sub	r0, r0, #1
   18a30:	cmp	r0, #31
   18a34:	bhi	18a8c <get_client_name+0xd4>
   18a38:	mov	r1, #1
   18a3c:	mov	r2, #-2147483645	; 0x80000003
   18a40:	tst	r2, r1, lsl r0
   18a44:	beq	18a8c <get_client_name+0xd4>
   18a48:	add	r0, r5, #152	; 0x98
   18a4c:	str	r0, [sp]
   18a50:	ldr	r5, [pc, #124]	; 18ad4 <get_client_name+0x11c>
   18a54:	add	r5, pc, r5
   18a58:	ldr	r2, [pc, #120]	; 18ad8 <get_client_name+0x120>
   18a5c:	add	r2, pc, r2
   18a60:	mov	r0, r5
   18a64:	mov	r1, #141	; 0x8d
   18a68:	mov	r3, r4
   18a6c:	bl	de74 <snprintf@plt>
   18a70:	b	18a80 <get_client_name+0xc8>
   18a74:	mov	r5, r4
   18a78:	b	18a80 <get_client_name+0xc8>
   18a7c:	mov	r5, #0
   18a80:	mov	r0, r5
   18a84:	sub	sp, fp, #16
   18a88:	pop	{r4, r5, r6, r7, fp, pc}
   18a8c:	cmp	r6, #2
   18a90:	beq	18a48 <get_client_name+0x90>
   18a94:	cmp	r6, #1
   18a98:	bne	18ab4 <get_client_name+0xfc>
   18a9c:	movw	r0, #291	; 0x123
   18aa0:	add	r0, r5, r0
   18aa4:	add	r1, r5, #152	; 0x98
   18aa8:	str	r1, [sp]
   18aac:	str	r0, [sp, #4]
   18ab0:	b	18abc <get_client_name+0x104>
   18ab4:	add	r0, r5, #152	; 0x98
   18ab8:	stm	sp, {r0, r7}
   18abc:	ldr	r5, [pc, #24]	; 18adc <get_client_name+0x124>
   18ac0:	add	r5, pc, r5
   18ac4:	ldr	r2, [pc, #20]	; 18ae0 <get_client_name+0x128>
   18ac8:	add	r2, pc, r2
   18acc:	b	18a60 <get_client_name+0xa8>
   18ad0:	.word	0x00042174
   18ad4:	.word	0x0004c6b8
   18ad8:	.word	0x00028872
   18adc:	.word	0x0004c64c
   18ae0:	.word	0x000287fc

00018ae4 <check_one_kline>:
   18ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ae8:	add	fp, sp, #28
   18aec:	sub	sp, sp, #156	; 0x9c
   18af0:	mov	r4, r0
   18af4:	ldr	r0, [r0, #16]
   18af8:	add	r1, sp, #24
   18afc:	sub	r2, fp, #32
   18b00:	bl	d568 <parse_netmask@plt>
   18b04:	mov	r6, r0
   18b08:	ldr	r0, [pc, #432]	; 18cc0 <check_one_kline+0x1dc>
   18b0c:	ldr	r0, [pc, r0]
   18b10:	ldr	r9, [r0]
   18b14:	cmp	r9, #0
   18b18:	beq	18cb8 <check_one_kline+0x1d4>
   18b1c:	movw	r5, #512	; 0x200
   18b20:	movt	r5, #8192	; 0x2000
   18b24:	sub	sl, r6, #2
   18b28:	ldr	r7, [r9]
   18b2c:	ldr	r9, [r9, #8]
   18b30:	ldrh	r0, [r7, #80]	; 0x50
   18b34:	cmp	r0, #64	; 0x40
   18b38:	bne	18c04 <check_one_kline+0x120>
   18b3c:	ldr	r0, [r7, #24]
   18b40:	cmp	r0, #0
   18b44:	beq	18c04 <check_one_kline+0x120>
   18b48:	ldr	r0, [r4, #28]
   18b4c:	add	r1, r7, #152	; 0x98
   18b50:	bl	e114 <match@plt>
   18b54:	cmp	r0, #0
   18b58:	beq	18c04 <check_one_kline+0x120>
   18b5c:	cmp	sl, #2
   18b60:	bcs	18bbc <check_one_kline+0xd8>
   18b64:	ldr	r0, [r7, #432]	; 0x1b0
   18b68:	ldr	r1, [r0, #132]	; 0x84
   18b6c:	ldr	r1, [r1, #4]
   18b70:	and	r1, r1, r5
   18b74:	cmp	r1, r5
   18b78:	beq	18c04 <check_one_kline+0x120>
   18b7c:	ldrh	r1, [r0, #140]!	; 0x8c
   18b80:	cmp	r1, #10
   18b84:	ldrheq	r1, [sp, #24]
   18b88:	cmpeq	r1, #2
   18b8c:	beq	18c10 <check_one_kline+0x12c>
   18b90:	ldr	r0, [r7, #432]	; 0x1b0
   18b94:	ldrh	r1, [r0, #140]!	; 0x8c
   18b98:	ldrh	r2, [sp, #24]
   18b9c:	cmp	r1, r2
   18ba0:	bne	18c04 <check_one_kline+0x120>
   18ba4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18ba8:	add	r1, sp, #24
   18bac:	bl	d034 <comp_with_mask_sock@plt>
   18bb0:	cmp	r0, #0
   18bb4:	bne	18c38 <check_one_kline+0x154>
   18bb8:	b	18c04 <check_one_kline+0x120>
   18bbc:	cmp	r6, #1
   18bc0:	bne	18c04 <check_one_kline+0x120>
   18bc4:	ldr	r0, [r4, #16]
   18bc8:	add	r1, r7, #227	; 0xe3
   18bcc:	bl	e114 <match@plt>
   18bd0:	mov	r8, r0
   18bd4:	ldr	r0, [r7, #432]	; 0x1b0
   18bd8:	ldr	r0, [r0, #132]	; 0x84
   18bdc:	ldr	r0, [r0, #4]
   18be0:	and	r0, r0, r5
   18be4:	cmp	r0, r5
   18be8:	beq	18c04 <check_one_kline+0x120>
   18bec:	movw	r0, #291	; 0x123
   18bf0:	add	r1, r7, r0
   18bf4:	ldr	r0, [r4, #16]
   18bf8:	bl	e114 <match@plt>
   18bfc:	orrs	r0, r0, r8
   18c00:	bne	18c38 <check_one_kline+0x154>
   18c04:	cmp	r9, #0
   18c08:	bne	18b28 <check_one_kline+0x44>
   18c0c:	b	18cb8 <check_one_kline+0x1d4>
   18c10:	add	r1, sp, #8
   18c14:	bl	d88c <rb_ipv4_from_ipv6@plt>
   18c18:	cmp	r0, #0
   18c1c:	beq	18b90 <check_one_kline+0xac>
   18c20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18c24:	add	r0, sp, #8
   18c28:	add	r1, sp, #24
   18c2c:	bl	d034 <comp_with_mask_sock@plt>
   18c30:	cmp	r0, #0
   18c34:	beq	18b90 <check_one_kline+0xac>
   18c38:	mov	r8, r6
   18c3c:	mov	r6, r5
   18c40:	ldr	r5, [r7, #64]	; 0x40
   18c44:	mov	r0, r7
   18c48:	mov	r1, #0
   18c4c:	bl	d004 <get_client_name@plt>
   18c50:	mov	r3, r0
   18c54:	tst	r5, #4194304	; 0x400000
   18c58:	bne	18c84 <check_one_kline+0x1a0>
   18c5c:	mov	r0, #256	; 0x100
   18c60:	mov	r1, #0
   18c64:	ldr	r2, [pc, #92]	; 18cc8 <check_one_kline+0x1e4>
   18c68:	add	r2, pc, r2
   18c6c:	bl	d640 <sendto_realops_snomask@plt>
   18c70:	mov	r0, r7
   18c74:	mov	r1, r4
   18c78:	mov	r2, #1
   18c7c:	bl	dc70 <notify_banned_client@plt>
   18c80:	b	18ca8 <check_one_kline+0x1c4>
   18c84:	ldr	r0, [r4, #16]
   18c88:	ldr	r1, [r4, #28]
   18c8c:	str	r1, [sp]
   18c90:	str	r0, [sp, #4]
   18c94:	mov	r0, #256	; 0x100
   18c98:	mov	r1, #256	; 0x100
   18c9c:	ldr	r2, [pc, #32]	; 18cc4 <check_one_kline+0x1e0>
   18ca0:	add	r2, pc, r2
   18ca4:	bl	d640 <sendto_realops_snomask@plt>
   18ca8:	mov	r5, r6
   18cac:	mov	r6, r8
   18cb0:	cmp	r9, #0
   18cb4:	bne	18b28 <check_one_kline+0x44>
   18cb8:	sub	sp, fp, #28
   18cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18cc0:	.word	0x0004201c
   18cc4:	.word	0x0002846e
   18cc8:	.word	0x000284de

00018ccc <resv_nick_fnc>:
   18ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cd0:	add	fp, sp, #28
   18cd4:	sub	sp, sp, #68	; 0x44
   18cd8:	mov	r7, r0
   18cdc:	ldr	r0, [pc, #584]	; 18f2c <resv_nick_fnc+0x260>
   18ce0:	ldr	r0, [pc, r0]
   18ce4:	ldr	r0, [r0, #308]	; 0x134
   18ce8:	cmp	r0, #0
   18cec:	beq	18d70 <resv_nick_fnc+0xa4>
   18cf0:	ldr	r0, [pc, #568]	; 18f30 <resv_nick_fnc+0x264>
   18cf4:	ldr	r0, [pc, r0]
   18cf8:	ldr	r5, [r0]
   18cfc:	cmp	r5, #0
   18d00:	beq	18d70 <resv_nick_fnc+0xa4>
   18d04:	mov	r9, r2
   18d08:	mov	sl, r1
   18d0c:	ldr	r8, [pc, #544]	; 18f34 <resv_nick_fnc+0x268>
   18d10:	ldr	r8, [pc, r8]
   18d14:	ldr	r4, [r5]
   18d18:	ldr	r5, [r5, #8]
   18d1c:	ldrh	r0, [r4, #80]	; 0x50
   18d20:	cmp	r0, #64	; 0x40
   18d24:	bne	18d68 <resv_nick_fnc+0x9c>
   18d28:	ldr	r0, [r4, #24]
   18d2c:	cmp	r0, #0
   18d30:	beq	18d68 <resv_nick_fnc+0x9c>
   18d34:	ldrb	r0, [r4, #66]	; 0x42
   18d38:	tst	r0, #32
   18d3c:	bne	18d68 <resv_nick_fnc+0x9c>
   18d40:	mov	r6, r4
   18d44:	ldrb	r0, [r6, #88]!	; 0x58
   18d48:	ldrb	r0, [r8, r0, lsl #2]
   18d4c:	tst	r0, #16
   18d50:	bne	18d68 <resv_nick_fnc+0x9c>
   18d54:	mov	r0, r7
   18d58:	mov	r1, r6
   18d5c:	bl	d16c <match_esc@plt>
   18d60:	cmp	r0, #0
   18d64:	bne	18d78 <resv_nick_fnc+0xac>
   18d68:	cmp	r5, #0
   18d6c:	bne	18d14 <resv_nick_fnc+0x48>
   18d70:	sub	sp, fp, #28
   18d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d78:	add	r8, r4, #396	; 0x18c
   18d7c:	add	r0, r4, #163	; 0xa3
   18d80:	add	r5, r4, #152	; 0x98
   18d84:	str	r5, [sp]
   18d88:	stmib	sp, {r0, r8}
   18d8c:	str	r7, [sp, #12]
   18d90:	mov	r7, r0
   18d94:	str	sl, [sp, #16]
   18d98:	ldr	r2, [pc, #408]	; 18f38 <resv_nick_fnc+0x26c>
   18d9c:	add	r2, pc, r2
   18da0:	mov	r0, #256	; 0x100
   18da4:	mov	r1, #0
   18da8:	mov	r3, r6
   18dac:	bl	d640 <sendto_realops_snomask@plt>
   18db0:	str	r8, [sp]
   18db4:	stmib	sp, {r5, r7}
   18db8:	ldr	r2, [pc, #380]	; 18f3c <resv_nick_fnc+0x270>
   18dbc:	add	r2, pc, r2
   18dc0:	mov	r0, #64	; 0x40
   18dc4:	mov	r1, #0
   18dc8:	mov	r3, r6
   18dcc:	bl	d640 <sendto_realops_snomask@plt>
   18dd0:	cmp	r9, #1
   18dd4:	blt	18de4 <resv_nick_fnc+0x118>
   18dd8:	ldr	r1, [pc, #352]	; 18f40 <resv_nick_fnc+0x274>
   18ddc:	add	r1, pc, r1
   18de0:	b	18dec <resv_nick_fnc+0x120>
   18de4:	ldr	r1, [pc, #344]	; 18f44 <resv_nick_fnc+0x278>
   18de8:	add	r1, pc, r1
   18dec:	mov	r0, r4
   18df0:	mov	r2, r6
   18df4:	bl	e414 <sendto_one_notice@plt>
   18df8:	bl	d07c <rb_current_time@plt>
   18dfc:	str	r0, [r4, #52]	; 0x34
   18e00:	mov	r0, r4
   18e04:	mov	r1, #1
   18e08:	bl	e3cc <whowas_add_history@plt>
   18e0c:	mov	r0, r4
   18e10:	bl	e150 <monitor_signoff@plt>
   18e14:	mov	r0, r4
   18e18:	bl	d7f0 <invalidate_bancache_user@plt>
   18e1c:	str	r6, [sp]
   18e20:	stmib	sp, {r5, r7, r8}
   18e24:	ldr	r3, [pc, #284]	; 18f48 <resv_nick_fnc+0x27c>
   18e28:	add	r3, pc, r3
   18e2c:	mov	r0, r4
   18e30:	mov	r1, #0
   18e34:	mov	r2, #0
   18e38:	bl	de2c <sendto_common_channels_local@plt>
   18e3c:	ldr	r0, [pc, #264]	; 18f4c <resv_nick_fnc+0x280>
   18e40:	ldr	r0, [pc, r0]
   18e44:	ldr	r2, [r0]
   18e48:	ldrb	r0, [r4, #396]	; 0x18c
   18e4c:	ldr	r1, [r4, #52]	; 0x34
   18e50:	ldr	r3, [pc, #248]	; 18f50 <resv_nick_fnc+0x284>
   18e54:	add	r3, pc, r3
   18e58:	cmp	r0, #0
   18e5c:	mov	r0, r8
   18e60:	moveq	r0, r6
   18e64:	str	r3, [sp]
   18e68:	stmib	sp, {r0, r8}
   18e6c:	str	r1, [sp, #12]
   18e70:	mov	r0, r4
   18e74:	mov	r1, #0
   18e78:	mov	r3, #0
   18e7c:	bl	d9a0 <sendto_server@plt>
   18e80:	mov	r0, r6
   18e84:	mov	r1, r4
   18e88:	bl	db20 <del_from_client_hash@plt>
   18e8c:	mov	r0, r6
   18e90:	mov	r1, r8
   18e94:	mov	r2, #64	; 0x40
   18e98:	bl	e510 <rb_strlcpy@plt>
   18e9c:	mov	r0, r8
   18ea0:	mov	r1, r4
   18ea4:	bl	da48 <add_to_client_hash@plt>
   18ea8:	mov	r0, r4
   18eac:	bl	ddfc <monitor_signon@plt>
   18eb0:	mov	r5, r4
   18eb4:	ldr	r6, [r5, #408]!	; 0x198
   18eb8:	cmp	r6, #0
   18ebc:	beq	18ef8 <resv_nick_fnc+0x22c>
   18ec0:	ldr	r0, [r6]
   18ec4:	ldr	r7, [r6, #8]
   18ec8:	ldr	r0, [r0, #432]	; 0x1b0
   18ecc:	add	r1, r0, #316	; 0x13c
   18ed0:	mov	r0, r4
   18ed4:	bl	1820c <rb_dlinkFindDestroy>
   18ed8:	mov	r0, r6
   18edc:	mov	r1, r5
   18ee0:	bl	18f58 <rb_dlinkDelete>
   18ee4:	mov	r0, r6
   18ee8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   18eec:	cmp	r7, #0
   18ef0:	mov	r6, r7
   18ef4:	bne	18ec0 <resv_nick_fnc+0x1f4>
   18ef8:	add	r5, sp, #26
   18efc:	ldr	r2, [pc, #80]	; 18f54 <resv_nick_fnc+0x288>
   18f00:	add	r2, pc, r2
   18f04:	mov	r0, r5
   18f08:	mov	r1, #42	; 0x2a
   18f0c:	mov	r3, r8
   18f10:	bl	de74 <snprintf@plt>
   18f14:	ldr	r0, [r4, #432]	; 0x1b0
   18f18:	ldr	r0, [r0, #300]	; 0x12c
   18f1c:	mov	r1, r5
   18f20:	bl	e270 <rb_note@plt>
   18f24:	sub	sp, fp, #28
   18f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f2c:	.word	0x00041e9c
   18f30:	.word	0x00041e34
   18f34:	.word	0x00041ce8
   18f38:	.word	0x00028429
   18f3c:	.word	0x0002844c
   18f40:	.word	0x0002844f
   18f44:	.word	0x0002847b
   18f48:	.word	0x0002846f
   18f4c:	.word	0x00041ae8
   18f50:	.word	0x00028456
   18f54:	.word	0x000283bb

00018f58 <rb_dlinkDelete>:
   18f58:	push	{fp, lr}
   18f5c:	mov	fp, sp
   18f60:	cmp	r0, #0
   18f64:	beq	18fb8 <rb_dlinkDelete+0x60>
   18f68:	cmp	r1, #0
   18f6c:	beq	18fd8 <rb_dlinkDelete+0x80>
   18f70:	ldr	ip, [r0, #4]
   18f74:	ldr	r3, [r0, #8]
   18f78:	add	r2, r3, #4
   18f7c:	cmp	r3, #0
   18f80:	addeq	r2, r1, #4
   18f84:	str	ip, [r2]
   18f88:	ldmib	r0, {r2, ip}
   18f8c:	cmp	r2, #0
   18f90:	mov	r3, r1
   18f94:	addne	r3, r2, #8
   18f98:	str	ip, [r3]
   18f9c:	mov	r2, #0
   18fa0:	str	r2, [r0, #4]
   18fa4:	str	r2, [r0, #8]
   18fa8:	ldr	r0, [r1, #8]
   18fac:	sub	r0, r0, #1
   18fb0:	str	r0, [r1, #8]
   18fb4:	pop	{fp, pc}
   18fb8:	ldr	r0, [pc, #56]	; 18ff8 <rb_dlinkDelete+0xa0>
   18fbc:	add	r0, pc, r0
   18fc0:	ldr	r1, [pc, #52]	; 18ffc <rb_dlinkDelete+0xa4>
   18fc4:	add	r1, pc, r1
   18fc8:	ldr	r3, [pc, #48]	; 19000 <rb_dlinkDelete+0xa8>
   18fcc:	add	r3, pc, r3
   18fd0:	mov	r2, #235	; 0xeb
   18fd4:	bl	e7e0 <__assert_fail@plt>
   18fd8:	ldr	r0, [pc, #36]	; 19004 <rb_dlinkDelete+0xac>
   18fdc:	add	r0, pc, r0
   18fe0:	ldr	r1, [pc, #32]	; 19008 <rb_dlinkDelete+0xb0>
   18fe4:	add	r1, pc, r1
   18fe8:	ldr	r3, [pc, #28]	; 1900c <rb_dlinkDelete+0xb4>
   18fec:	add	r3, pc, r3
   18ff0:	mov	r2, #236	; 0xec
   18ff4:	bl	e7e0 <__assert_fail@plt>
   18ff8:	.word	0x000275f0
   18ffc:	.word	0x000275f2
   19000:	.word	0x0002768d
   19004:	.word	0x0002ce69
   19008:	.word	0x000275d2
   1900c:	.word	0x0002766d

00019010 <clean_nick>:
   19010:	ldrb	r2, [r0]
   19014:	cmp	r2, #0
   19018:	cmpne	r2, #45	; 0x2d
   1901c:	bne	19028 <clean_nick+0x18>
   19020:	mov	r0, #0
   19024:	bx	lr
   19028:	cmp	r1, #0
   1902c:	beq	19050 <clean_nick+0x40>
   19030:	ldr	r1, [pc, #124]	; 190b4 <clean_nick+0xa4>
   19034:	ldr	r1, [pc, r1]
   19038:	ldrb	r1, [r1, r2, lsl #2]
   1903c:	tst	r1, #16
   19040:	bne	19020 <clean_nick+0x10>
   19044:	ldrb	r2, [r0]
   19048:	cmp	r2, #0
   1904c:	beq	19084 <clean_nick+0x74>
   19050:	add	r1, r0, #1
   19054:	mov	r0, #0
   19058:	ldr	r3, [pc, #88]	; 190b8 <clean_nick+0xa8>
   1905c:	ldr	r3, [pc, r3]
   19060:	uxtb	r2, r2
   19064:	ldrb	r2, [r3, r2, lsl #2]
   19068:	tst	r2, #64	; 0x40
   1906c:	beq	19020 <clean_nick+0x10>
   19070:	ldrb	r2, [r1, r0]
   19074:	add	r0, r0, #1
   19078:	cmp	r2, #0
   1907c:	bne	19060 <clean_nick+0x50>
   19080:	b	19088 <clean_nick+0x78>
   19084:	mov	r0, #0
   19088:	ldr	r1, [pc, #44]	; 190bc <clean_nick+0xac>
   1908c:	ldr	r1, [pc, r1]
   19090:	ldr	r1, [r1, #360]	; 0x168
   19094:	mov	r2, #0
   19098:	cmp	r0, r1
   1909c:	mov	r1, #0
   190a0:	movwcc	r1, #1
   190a4:	cmp	r0, #32
   190a8:	movwcc	r2, #1
   190ac:	orr	r0, r2, r1
   190b0:	bx	lr
   190b4:	.word	0x000419c4
   190b8:	.word	0x0004199c
   190bc:	.word	0x00041af0

000190c0 <find_person>:
   190c0:	push	{fp, lr}
   190c4:	mov	fp, sp
   190c8:	bl	d424 <find_client@plt>
   190cc:	cmp	r0, #0
   190d0:	beq	190f0 <find_person+0x30>
   190d4:	ldrh	r1, [r0, #80]	; 0x50
   190d8:	cmp	r1, #64	; 0x40
   190dc:	bne	190f0 <find_person+0x30>
   190e0:	ldr	r1, [r0, #24]
   190e4:	cmp	r1, #0
   190e8:	moveq	r0, #0
   190ec:	pop	{fp, pc}
   190f0:	mov	r0, #0
   190f4:	pop	{fp, pc}

000190f8 <find_named_person>:
   190f8:	push	{fp, lr}
   190fc:	mov	fp, sp
   19100:	bl	d37c <find_named_client@plt>
   19104:	cmp	r0, #0
   19108:	beq	19128 <find_named_person+0x30>
   1910c:	ldrh	r1, [r0, #80]	; 0x50
   19110:	cmp	r1, #64	; 0x40
   19114:	bne	19128 <find_named_person+0x30>
   19118:	ldr	r1, [r0, #24]
   1911c:	cmp	r1, #0
   19120:	moveq	r0, #0
   19124:	pop	{fp, pc}
   19128:	mov	r0, #0
   1912c:	pop	{fp, pc}

00019130 <find_chasing>:
   19130:	push	{r4, r5, r6, r7, fp, lr}
   19134:	add	fp, sp, #16
   19138:	mov	r5, r2
   1913c:	mov	r4, r1
   19140:	mov	r6, r0
   19144:	ldrb	r0, [r0, #65]	; 0x41
   19148:	tst	r0, #32
   1914c:	beq	19168 <find_chasing+0x38>
   19150:	ldrh	r0, [r6, #80]	; 0x50
   19154:	cmp	r0, #64	; 0x40
   19158:	bne	19168 <find_chasing+0x38>
   1915c:	mov	r0, r4
   19160:	bl	e474 <find_named_person@plt>
   19164:	b	19170 <find_chasing+0x40>
   19168:	mov	r0, r4
   1916c:	bl	e1e0 <find_person@plt>
   19170:	mov	r7, r0
   19174:	cmp	r5, #0
   19178:	movne	r0, #0
   1917c:	strne	r0, [r5]
   19180:	cmp	r7, #0
   19184:	bne	191c8 <find_chasing+0x98>
   19188:	ldrb	r0, [r4]
   1918c:	ldr	r1, [pc, #92]	; 191f0 <find_chasing+0xc0>
   19190:	ldr	r1, [pc, r1]
   19194:	ldrb	r0, [r1, r0, lsl #2]
   19198:	mov	r7, #0
   1919c:	tst	r0, #16
   191a0:	bne	191c8 <find_chasing+0x98>
   191a4:	mov	r0, r4
   191a8:	mov	r1, #90	; 0x5a
   191ac:	bl	e228 <whowas_get_history@plt>
   191b0:	cmp	r0, #0
   191b4:	beq	191d0 <find_chasing+0xa0>
   191b8:	cmp	r5, #0
   191bc:	movne	r1, #1
   191c0:	strne	r1, [r5]
   191c4:	mov	r7, r0
   191c8:	mov	r0, r7
   191cc:	pop	{r4, r5, r6, r7, fp, pc}
   191d0:	ldr	r2, [pc, #28]	; 191f4 <find_chasing+0xc4>
   191d4:	add	r2, pc, r2
   191d8:	mov	r0, r6
   191dc:	movw	r1, #401	; 0x191
   191e0:	mov	r3, r4
   191e4:	bl	dc88 <sendto_one_numeric@plt>
   191e8:	mov	r0, r7
   191ec:	pop	{r4, r5, r6, r7, fp, pc}
   191f0:	.word	0x00041868
   191f4:	.word	0x00027cc8

000191f8 <log_client_name>:
   191f8:	push	{r4, r5, r6, r7, fp, lr}
   191fc:	add	fp, sp, #16
   19200:	sub	sp, sp, #8
   19204:	cmp	r0, #0
   19208:	beq	19260 <log_client_name+0x68>
   1920c:	mov	r5, r0
   19210:	ldrb	r0, [r0, #65]	; 0x41
   19214:	add	r4, r5, #88	; 0x58
   19218:	tst	r0, #32
   1921c:	beq	19258 <log_client_name+0x60>
   19220:	mov	r6, r1
   19224:	add	r7, r5, #163	; 0xa3
   19228:	mov	r0, r4
   1922c:	mov	r1, r7
   19230:	bl	e750 <irccmp@plt>
   19234:	cmp	r0, #0
   19238:	beq	19258 <log_client_name+0x60>
   1923c:	add	r0, r5, #152	; 0x98
   19240:	cmp	r6, #1
   19244:	bne	19268 <log_client_name+0x70>
   19248:	movw	r1, #291	; 0x123
   1924c:	add	r1, r5, r1
   19250:	stm	sp, {r0, r1}
   19254:	b	1926c <log_client_name+0x74>
   19258:	mov	r5, r4
   1925c:	b	1928c <log_client_name+0x94>
   19260:	mov	r5, #0
   19264:	b	1928c <log_client_name+0x94>
   19268:	stm	sp, {r0, r7}
   1926c:	ldr	r5, [pc, #36]	; 19298 <log_client_name+0xa0>
   19270:	add	r5, pc, r5
   19274:	ldr	r2, [pc, #32]	; 1929c <log_client_name+0xa4>
   19278:	add	r2, pc, r2
   1927c:	mov	r0, r5
   19280:	mov	r1, #141	; 0x8d
   19284:	mov	r3, r4
   19288:	bl	de74 <snprintf@plt>
   1928c:	mov	r0, r5
   19290:	sub	sp, fp, #16
   19294:	pop	{r4, r5, r6, r7, fp, pc}
   19298:	.word	0x0004bf29
   1929c:	.word	0x0002804c

000192a0 <is_remote_connect>:
   192a0:	push	{r4, sl, fp, lr}
   192a4:	add	fp, sp, #8
   192a8:	ldr	r0, [r0, #28]
   192ac:	mov	r4, #0
   192b0:	cmp	r0, #0
   192b4:	beq	192d8 <is_remote_connect+0x38>
   192b8:	add	r0, r0, #4
   192bc:	bl	e474 <find_named_person@plt>
   192c0:	cmp	r0, #0
   192c4:	ldrbne	r1, [r0, #57]	; 0x39
   192c8:	tstne	r1, #16
   192cc:	ldrne	r0, [r0, #64]	; 0x40
   192d0:	movne	r1, #1
   192d4:	bicne	r4, r1, r0, lsr #13
   192d8:	mov	r0, r4
   192dc:	pop	{r4, sl, fp, pc}

000192e0 <dead_link>:
   192e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   192e4:	add	fp, sp, #24
   192e8:	mov	r6, r0
   192ec:	mov	r4, r0
   192f0:	ldrb	r0, [r4, #64]!	; 0x40
   192f4:	tst	r0, #34	; 0x22
   192f8:	beq	19300 <dead_link+0x20>
   192fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19300:	ldrh	r0, [r6, #80]	; 0x50
   19304:	cmp	r0, #4
   19308:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1930c:	mov	r7, r1
   19310:	mov	r0, #276	; 0x114
   19314:	bl	1939c <rb_malloc>
   19318:	mov	r5, r0
   1931c:	add	r8, r0, #16
   19320:	cmp	r7, #0
   19324:	beq	19340 <dead_link+0x60>
   19328:	ldr	r1, [pc, #96]	; 19390 <dead_link+0xb0>
   1932c:	add	r1, pc, r1
   19330:	mov	r0, r8
   19334:	mov	r2, #260	; 0x104
   19338:	bl	e510 <rb_strlcpy@plt>
   1933c:	b	19364 <dead_link+0x84>
   19340:	bl	de38 <__errno_location@plt>
   19344:	ldr	r0, [r0]
   19348:	bl	dacc <strerror@plt>
   1934c:	mov	r3, r0
   19350:	ldr	r2, [pc, #60]	; 19394 <dead_link+0xb4>
   19354:	add	r2, pc, r2
   19358:	mov	r0, r8
   1935c:	mov	r1, #260	; 0x104
   19360:	bl	de74 <snprintf@plt>
   19364:	str	r6, [r5, #12]
   19368:	ldr	r0, [r4]
   1936c:	movw	r1, #16418	; 0x4022
   19370:	orr	r0, r0, r1
   19374:	str	r0, [r4]
   19378:	ldr	r2, [pc, #24]	; 19398 <dead_link+0xb8>
   1937c:	add	r2, pc, r2
   19380:	mov	r0, r5
   19384:	mov	r1, r5
   19388:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1938c:	b	180d8 <rb_dlinkAdd>
   19390:	.word	0x00027fb9
   19394:	.word	0x00027fa4
   19398:	.word	0x0004beac

0001939c <rb_malloc>:
   1939c:	push	{fp, lr}
   193a0:	mov	fp, sp
   193a4:	mov	r1, r0
   193a8:	mov	r0, #1
   193ac:	bl	cfa4 <calloc@plt>
   193b0:	cmp	r0, #0
   193b4:	popne	{fp, pc}
   193b8:	bl	d448 <rb_outofmemory@plt>

000193bc <exit_local_client>:
   193bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193c0:	add	fp, sp, #28
   193c4:	sub	sp, sp, #68	; 0x44
   193c8:	mov	r9, r2
   193cc:	mov	r4, r1
   193d0:	str	r0, [sp, #32]
   193d4:	mov	r0, r1
   193d8:	mov	r1, r2
   193dc:	bl	1acac <exit_generic_client>
   193e0:	mov	r0, r4
   193e4:	bl	dd30 <clear_monitor@plt>
   193e8:	ldr	r0, [r4, #432]	; 0x1b0
   193ec:	ldr	r1, [pc, #516]	; 195f8 <exit_local_client+0x23c>
   193f0:	ldr	r1, [pc, r1]
   193f4:	bl	18f58 <rb_dlinkDelete>
   193f8:	ldr	r0, [pc, #508]	; 195fc <exit_local_client+0x240>
   193fc:	ldr	r0, [pc, r0]
   19400:	ldr	r1, [r0, #28]
   19404:	add	r0, r4, #12
   19408:	add	r1, r1, #48	; 0x30
   1940c:	bl	18f58 <rb_dlinkDelete>
   19410:	ldrb	r0, [r4, #57]	; 0x39
   19414:	tst	r0, #16
   19418:	beq	1942c <exit_local_client+0x70>
   1941c:	ldr	r1, [pc, #476]	; 19600 <exit_local_client+0x244>
   19420:	ldr	r1, [pc, r1]
   19424:	mov	r0, r4
   19428:	bl	1820c <rb_dlinkFindDestroy>
   1942c:	mov	r0, #0
   19430:	mov	r1, r4
   19434:	bl	e60c <show_ip@plt>
   19438:	movw	r1, #291	; 0x123
   1943c:	add	r7, r4, r1
   19440:	ldr	r6, [pc, #444]	; 19604 <exit_local_client+0x248>
   19444:	add	r6, pc, r6
   19448:	cmp	r0, #0
   1944c:	mov	r0, r7
   19450:	moveq	r0, r6
   19454:	add	r5, r4, #163	; 0xa3
   19458:	add	r8, r4, #152	; 0x98
   1945c:	str	r8, [sp]
   19460:	stmib	sp, {r5, r9}
   19464:	str	r0, [sp, #12]
   19468:	add	sl, r4, #88	; 0x58
   1946c:	ldr	r2, [pc, #404]	; 19608 <exit_local_client+0x24c>
   19470:	add	r2, pc, r2
   19474:	mov	r0, #4
   19478:	mov	r1, #0
   1947c:	mov	r3, sl
   19480:	bl	d640 <sendto_realops_snomask@plt>
   19484:	mov	r0, #0
   19488:	mov	r1, r4
   1948c:	bl	e60c <show_ip@plt>
   19490:	cmp	r0, #0
   19494:	movne	r6, r7
   19498:	str	r8, [sp]
   1949c:	stmib	sp, {r5, r6, r9}
   194a0:	ldr	r2, [pc, #356]	; 1960c <exit_local_client+0x250>
   194a4:	add	r2, pc, r2
   194a8:	mov	r0, #1
   194ac:	mov	r1, #0
   194b0:	mov	r3, sl
   194b4:	bl	d640 <sendto_realops_snomask@plt>
   194b8:	bl	d07c <rb_current_time@plt>
   194bc:	str	r0, [sp, #36]	; 0x24
   194c0:	ldr	r0, [r4, #432]	; 0x1b0
   194c4:	mov	r6, r9
   194c8:	ldr	r9, [r0, #48]	; 0x30
   194cc:	bl	d07c <rb_current_time@plt>
   194d0:	add	r1, sp, #42	; 0x2a
   194d4:	mov	r2, #26
   194d8:	bl	d5bc <rb_ctime@plt>
   194dc:	mov	r2, r0
   194e0:	ldr	r0, [r4, #432]	; 0x1b0
   194e4:	ldr	r1, [r0, #112]	; 0x70
   194e8:	ldr	r0, [r0, #120]	; 0x78
   194ec:	str	r0, [sp, #28]
   194f0:	str	r1, [sp, #24]
   194f4:	str	r7, [sp, #20]
   194f8:	str	r8, [sp, #12]
   194fc:	ldr	r0, [sp, #36]	; 0x24
   19500:	sub	r0, r0, r9
   19504:	movw	r1, #34953	; 0x8889
   19508:	movt	r1, #34952	; 0x8888
   1950c:	umull	r3, r7, r0, r1
   19510:	lsr	r3, r7, #5
   19514:	lsl	r3, r3, #4
   19518:	sub	r3, r3, r7, lsr #5
   1951c:	sub	r3, r0, r3, lsl #2
   19520:	str	r3, [sp, #4]
   19524:	movw	r3, #46021	; 0xb3c5
   19528:	movt	r3, #37282	; 0x91a2
   1952c:	umull	r3, r7, r0, r3
   19530:	lsr	r3, r7, #11
   19534:	mov	r7, #3600	; 0xe10
   19538:	mls	r0, r3, r7, r0
   1953c:	umull	r0, r1, r0, r1
   19540:	lsr	r0, r1, #5
   19544:	str	r5, [sp, #16]
   19548:	str	sl, [sp, #8]
   1954c:	str	r0, [sp]
   19550:	ldr	r1, [pc, #184]	; 19610 <exit_local_client+0x254>
   19554:	add	r1, pc, r1
   19558:	mov	r0, #1
   1955c:	bl	e0b4 <ilog@plt>
   19560:	ldr	r1, [pc, #172]	; 19614 <exit_local_client+0x258>
   19564:	add	r1, pc, r1
   19568:	mov	r0, r4
   1956c:	mov	r2, r5
   19570:	mov	r3, r6
   19574:	bl	d1e4 <sendto_one@plt>
   19578:	mov	r0, r4
   1957c:	bl	d9ac <close_connection@plt>
   19580:	mov	r5, r4
   19584:	ldrb	r0, [r5, #64]!	; 0x40
   19588:	tst	r0, #4
   1958c:	bne	195cc <exit_local_client+0x210>
   19590:	ldr	r0, [pc, #128]	; 19618 <exit_local_client+0x25c>
   19594:	ldr	r0, [pc, r0]
   19598:	ldr	r2, [r0]
   1959c:	mov	r0, r4
   195a0:	ldrb	r1, [r0, #396]!	; 0x18c
   195a4:	cmp	r1, #0
   195a8:	moveq	r0, sl
   195ac:	ldr	r1, [pc, #104]	; 1961c <exit_local_client+0x260>
   195b0:	add	r1, pc, r1
   195b4:	str	r1, [sp]
   195b8:	stmib	sp, {r0, r6}
   195bc:	ldr	r0, [sp, #32]
   195c0:	mov	r1, #0
   195c4:	mov	r3, #0
   195c8:	bl	d9a0 <sendto_server@plt>
   195cc:	ldr	r0, [r5]
   195d0:	orr	r0, r0, #2
   195d4:	str	r0, [r5]
   195d8:	bl	dc64 <rb_make_rb_dlink_node@plt>
   195dc:	mov	r1, r0
   195e0:	ldr	r2, [pc, #56]	; 19620 <exit_local_client+0x264>
   195e4:	ldr	r2, [pc, r2]
   195e8:	mov	r0, r4
   195ec:	bl	180d8 <rb_dlinkAdd>
   195f0:	sub	sp, fp, #28
   195f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195f8:	.word	0x00041738
   195fc:	.word	0x0004175c
   19600:	.word	0x00041518
   19604:	.word	0x000280f1
   19608:	.word	0x000280a0
   1960c:	.word	0x000280a1
   19610:	.word	0x0002800a
   19614:	.word	0x00028023
   19618:	.word	0x00041394
   1961c:	.word	0x00027ff4
   19620:	.word	0x000414a0

00019624 <exit_local_server>:
   19624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19628:	add	fp, sp, #28
   1962c:	sub	sp, sp, #20
   19630:	mov	r6, r3
   19634:	mov	r7, r2
   19638:	mov	r4, r1
   1963c:	mov	r9, r0
   19640:	ldr	r0, [r1, #432]	; 0x1b0
   19644:	ldr	r1, [pc, #640]	; 198cc <exit_local_server+0x2a8>
   19648:	ldr	r1, [pc, r1]
   1964c:	bl	18f58 <rb_dlinkDelete>
   19650:	ldr	r1, [pc, #632]	; 198d0 <exit_local_server+0x2ac>
   19654:	ldr	r1, [pc, r1]
   19658:	mov	r0, r4
   1965c:	bl	1820c <rb_dlinkFindDestroy>
   19660:	ldr	r0, [r4, #432]	; 0x1b0
   19664:	ldr	r5, [r0, #112]	; 0x70
   19668:	ldr	r8, [r0, #120]	; 0x78
   1966c:	str	r6, [sp, #16]
   19670:	str	r6, [sp]
   19674:	add	r3, r7, #88	; 0x58
   19678:	ldr	r0, [pc, #596]	; 198d4 <exit_local_server+0x2b0>
   1967c:	ldr	r0, [pc, r0]
   19680:	cmp	r7, r4
   19684:	addeq	r3, r0, #88	; 0x58
   19688:	ldr	r6, [pc, #584]	; 198d8 <exit_local_server+0x2b4>
   1968c:	add	r6, pc, r6
   19690:	ldr	r2, [pc, #580]	; 198dc <exit_local_server+0x2b8>
   19694:	add	r2, pc, r2
   19698:	mov	r0, r6
   1969c:	mov	r1, #512	; 0x200
   196a0:	bl	de74 <snprintf@plt>
   196a4:	ldrb	r0, [r4, #65]	; 0x41
   196a8:	tst	r0, #64	; 0x40
   196ac:	bne	196d8 <exit_local_server+0xb4>
   196b0:	mov	r2, r4
   196b4:	ldrb	r0, [r2, #396]!	; 0x18c
   196b8:	cmp	r0, #0
   196bc:	addeq	r2, r4, #88	; 0x58
   196c0:	ldr	r1, [pc, #536]	; 198e0 <exit_local_server+0x2bc>
   196c4:	add	r1, pc, r1
   196c8:	ldr	r3, [pc, #532]	; 198e4 <exit_local_server+0x2c0>
   196cc:	add	r3, pc, r3
   196d0:	mov	r0, r4
   196d4:	bl	d1e4 <sendto_one@plt>
   196d8:	add	sl, r4, #64	; 0x40
   196dc:	cmp	r9, #0
   196e0:	cmpne	r4, r9
   196e4:	bne	197c8 <exit_local_server+0x1a4>
   196e8:	ldr	r0, [r4, #32]
   196ec:	cmp	r0, #0
   196f0:	ldrne	r1, [r0, #28]
   196f4:	cmpne	r1, #0
   196f8:	beq	19708 <exit_local_server+0xe4>
   196fc:	add	r0, r4, #12
   19700:	add	r1, r1, #36	; 0x24
   19704:	bl	18f58 <rb_dlinkDelete>
   19708:	mov	r0, r4
   1970c:	bl	d9ac <close_connection@plt>
   19710:	ldr	r0, [pc, #468]	; 198ec <exit_local_server+0x2c8>
   19714:	ldr	r0, [pc, r0]
   19718:	ldr	r0, [r0]
   1971c:	cmp	r0, #0
   19720:	beq	19750 <exit_local_server+0x12c>
   19724:	ldr	r0, [pc, #452]	; 198f0 <exit_local_server+0x2cc>
   19728:	add	r0, pc, r0
   1972c:	vldr	d16, [r0]
   19730:	add	r0, r0, #6
   19734:	ldr	r1, [pc, #440]	; 198f4 <exit_local_server+0x2d0>
   19738:	add	r1, pc, r1
   1973c:	vld1.16	{d17}, [r0]
   19740:	vstr	d16, [r1]
   19744:	add	r0, r1, #6
   19748:	vst1.16	{d17}, [r0]
   1974c:	b	197a0 <exit_local_server+0x17c>
   19750:	ldr	r0, [r4, #32]
   19754:	add	r1, r0, #88	; 0x58
   19758:	str	sl, [sp, #12]
   1975c:	mov	sl, r8
   19760:	mov	r8, r5
   19764:	ldr	r5, [pc, #396]	; 198f8 <exit_local_server+0x2d4>
   19768:	add	r5, pc, r5
   1976c:	mov	r0, r5
   19770:	bl	d928 <strcpy@plt>
   19774:	mov	r0, r5
   19778:	bl	dc94 <strlen@plt>
   1977c:	add	r0, r5, r0
   19780:	mov	r1, #32
   19784:	strh	r1, [r0]
   19788:	add	r1, r4, #88	; 0x58
   1978c:	mov	r0, r5
   19790:	mov	r5, r8
   19794:	mov	r8, sl
   19798:	ldr	sl, [sp, #12]
   1979c:	bl	d8bc <strcat@plt>
   197a0:	ldr	r0, [r4, #28]
   197a4:	cmp	r0, #0
   197a8:	beq	1980c <exit_local_server+0x1e8>
   197ac:	ldrh	r0, [r7, #80]	; 0x50
   197b0:	cmp	r0, #64	; 0x40
   197b4:	bne	197f0 <exit_local_server+0x1cc>
   197b8:	ldr	r0, [r7, #24]
   197bc:	cmp	r0, #0
   197c0:	ldreq	r6, [sp, #16]
   197c4:	b	197f4 <exit_local_server+0x1d0>
   197c8:	ldrb	r0, [sl, #1]
   197cc:	tst	r0, #64	; 0x40
   197d0:	bne	196e8 <exit_local_server+0xc4>
   197d4:	add	r2, r4, #88	; 0x58
   197d8:	ldr	r1, [pc, #264]	; 198e8 <exit_local_server+0x2c4>
   197dc:	add	r1, pc, r1
   197e0:	mov	r0, r4
   197e4:	ldr	r3, [sp, #16]
   197e8:	bl	d1e4 <sendto_one@plt>
   197ec:	b	196e8 <exit_local_server+0xc4>
   197f0:	ldr	r6, [sp, #16]
   197f4:	ldr	r3, [pc, #256]	; 198fc <exit_local_server+0x2d8>
   197f8:	add	r3, pc, r3
   197fc:	mov	r0, r9
   19800:	mov	r1, r4
   19804:	mov	r2, r6
   19808:	bl	1aef4 <remove_dependents>
   1980c:	bl	d07c <rb_current_time@plt>
   19810:	ldr	r1, [r4, #432]	; 0x1b0
   19814:	ldr	r1, [r1, #48]	; 0x30
   19818:	sub	r0, r0, r1
   1981c:	stm	sp, {r0, r5, r8}
   19820:	mov	r7, r5
   19824:	add	r5, r4, #88	; 0x58
   19828:	ldr	r6, [pc, #208]	; 19900 <exit_local_server+0x2dc>
   1982c:	add	r6, pc, r6
   19830:	mov	r0, #256	; 0x100
   19834:	mov	r1, #0
   19838:	mov	r2, r6
   1983c:	mov	r3, r5
   19840:	bl	d640 <sendto_realops_snomask@plt>
   19844:	bl	d07c <rb_current_time@plt>
   19848:	ldr	r1, [r4, #432]	; 0x1b0
   1984c:	ldr	r1, [r1, #48]	; 0x30
   19850:	stm	sp, {r7, r8}
   19854:	sub	r3, r0, r1
   19858:	mov	r0, #5
   1985c:	mov	r1, r6
   19860:	mov	r2, r5
   19864:	bl	e0b4 <ilog@plt>
   19868:	mov	r0, r4
   1986c:	ldrb	r1, [r0, #396]!	; 0x18c
   19870:	cmp	r1, #0
   19874:	beq	19880 <exit_local_server+0x25c>
   19878:	mov	r1, r4
   1987c:	bl	da9c <del_from_id_hash@plt>
   19880:	mov	r0, r5
   19884:	mov	r1, r4
   19888:	bl	db20 <del_from_client_hash@plt>
   1988c:	mov	r0, r4
   19890:	bl	1adac <remove_client_from_list>
   19894:	ldr	r0, [r4, #28]
   19898:	ldr	r0, [r0, #68]	; 0x44
   1989c:	bl	db68 <scache_split@plt>
   198a0:	ldr	r0, [sl]
   198a4:	orr	r0, r0, #2
   198a8:	str	r0, [sl]
   198ac:	bl	dc64 <rb_make_rb_dlink_node@plt>
   198b0:	mov	r1, r0
   198b4:	ldr	r2, [pc, #72]	; 19904 <exit_local_server+0x2e0>
   198b8:	ldr	r2, [pc, r2]
   198bc:	mov	r0, r4
   198c0:	sub	sp, fp, #28
   198c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198c8:	b	180d8 <rb_dlinkAdd>
   198cc:	.word	0x00041388
   198d0:	.word	0x00041224
   198d4:	.word	0x000414dc
   198d8:	.word	0x0004bc4c
   198dc:	.word	0x00027f48
   198e0:	.word	0x00027f8d
   198e4:	.word	0x0004bc0c
   198e8:	.word	0x00027e0a
   198ec:	.word	0x000412a0
   198f0:	.word	0x00027f58
   198f4:	.word	0x0004bb20
   198f8:	.word	0x0004baf0
   198fc:	.word	0x0004ba60
   19900:	.word	0x00027de1
   19904:	.word	0x000411cc

00019908 <exit_unknown_client>:
   19908:	push	{r4, r5, fp, lr}
   1990c:	add	fp, sp, #8
   19910:	mov	r5, r1
   19914:	mov	r4, r0
   19918:	bl	e714 <authd_abort_client@plt>
   1991c:	ldr	r0, [r4, #432]	; 0x1b0
   19920:	ldr	r1, [pc, #196]	; 199ec <exit_unknown_client+0xe4>
   19924:	ldr	r1, [pc, r1]
   19928:	bl	18f58 <rb_dlinkDelete>
   1992c:	ldrb	r0, [r4, #65]	; 0x41
   19930:	tst	r0, #64	; 0x40
   19934:	bne	19960 <exit_unknown_client+0x58>
   19938:	ldr	r0, [r4, #24]
   1993c:	ldr	r2, [pc, #172]	; 199f0 <exit_unknown_client+0xe8>
   19940:	add	r2, pc, r2
   19944:	cmp	r0, #0
   19948:	addne	r2, r4, #163	; 0xa3
   1994c:	ldr	r1, [pc, #160]	; 199f4 <exit_unknown_client+0xec>
   19950:	add	r1, pc, r1
   19954:	mov	r0, r4
   19958:	mov	r3, r5
   1995c:	bl	d1e4 <sendto_one@plt>
   19960:	mov	r0, r4
   19964:	bl	d9ac <close_connection@plt>
   19968:	mov	r0, r4
   1996c:	ldrb	r1, [r0, #396]!	; 0x18c
   19970:	cmp	r1, #0
   19974:	beq	19980 <exit_unknown_client+0x78>
   19978:	mov	r1, r4
   1997c:	bl	da9c <del_from_id_hash@plt>
   19980:	add	r5, r4, #64	; 0x40
   19984:	add	r0, r4, #163	; 0xa3
   19988:	mov	r1, r4
   1998c:	bl	d43c <del_from_hostname_hash@plt>
   19990:	ldrh	r0, [r4, #80]	; 0x50
   19994:	sub	r0, r0, #1
   19998:	cmp	r0, #31
   1999c:	bhi	199b0 <exit_unknown_client+0xa8>
   199a0:	mov	r1, #1
   199a4:	mov	r2, #-2147483645	; 0x80000003
   199a8:	tst	r2, r1, lsl r0
   199ac:	bne	199bc <exit_unknown_client+0xb4>
   199b0:	add	r0, r4, #88	; 0x58
   199b4:	mov	r1, r4
   199b8:	bl	db20 <del_from_client_hash@plt>
   199bc:	mov	r0, r4
   199c0:	bl	1adac <remove_client_from_list>
   199c4:	ldr	r0, [r5]
   199c8:	orr	r0, r0, #2
   199cc:	str	r0, [r5]
   199d0:	bl	dc64 <rb_make_rb_dlink_node@plt>
   199d4:	mov	r1, r0
   199d8:	ldr	r2, [pc, #24]	; 199f8 <exit_unknown_client+0xf0>
   199dc:	ldr	r2, [pc, r2]
   199e0:	mov	r0, r4
   199e4:	pop	{r4, r5, fp, lr}
   199e8:	b	180d8 <rb_dlinkAdd>
   199ec:	.word	0x00040f50
   199f0:	.word	0x00027d03
   199f4:	.word	0x00027c37
   199f8:	.word	0x000410a8

000199fc <exit_remote_client>:
   199fc:	push	{r4, r5, r6, r7, fp, lr}
   19a00:	add	fp, sp, #16
   19a04:	sub	sp, sp, #16
   19a08:	mov	r6, r2
   19a0c:	mov	r4, r1
   19a10:	mov	r5, r0
   19a14:	mov	r0, r1
   19a18:	mov	r1, r2
   19a1c:	bl	1acac <exit_generic_client>
   19a20:	ldr	r0, [r4, #32]
   19a24:	cmp	r0, #0
   19a28:	ldrne	r1, [r0, #28]
   19a2c:	cmpne	r1, #0
   19a30:	beq	19a40 <exit_remote_client+0x44>
   19a34:	add	r0, r4, #12
   19a38:	add	r1, r1, #48	; 0x30
   19a3c:	bl	18f58 <rb_dlinkDelete>
   19a40:	mov	r7, r4
   19a44:	ldrb	r0, [r7, #64]!	; 0x40
   19a48:	tst	r0, #4
   19a4c:	bne	19a8c <exit_remote_client+0x90>
   19a50:	ldr	r0, [pc, #96]	; 19ab8 <exit_remote_client+0xbc>
   19a54:	ldr	r0, [pc, r0]
   19a58:	ldr	r2, [r0]
   19a5c:	mov	r0, r4
   19a60:	ldrb	r1, [r0, #396]!	; 0x18c
   19a64:	cmp	r1, #0
   19a68:	subeq	r0, r0, #308	; 0x134
   19a6c:	ldr	r1, [pc, #72]	; 19abc <exit_remote_client+0xc0>
   19a70:	add	r1, pc, r1
   19a74:	str	r1, [sp]
   19a78:	stmib	sp, {r0, r6}
   19a7c:	mov	r0, r5
   19a80:	mov	r1, #0
   19a84:	mov	r3, #0
   19a88:	bl	d9a0 <sendto_server@plt>
   19a8c:	ldr	r0, [r7]
   19a90:	orr	r0, r0, #2
   19a94:	str	r0, [r7]
   19a98:	bl	dc64 <rb_make_rb_dlink_node@plt>
   19a9c:	mov	r1, r0
   19aa0:	ldr	r2, [pc, #24]	; 19ac0 <exit_remote_client+0xc4>
   19aa4:	add	r2, pc, r2
   19aa8:	mov	r0, r4
   19aac:	sub	sp, fp, #16
   19ab0:	pop	{r4, r5, r6, r7, fp, lr}
   19ab4:	b	180d8 <rb_dlinkAdd>
   19ab8:	.word	0x00040ed4
   19abc:	.word	0x00027b34
   19ac0:	.word	0x0004b7a4

00019ac4 <exit_remote_server>:
   19ac4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19ac8:	add	fp, sp, #24
   19acc:	sub	sp, sp, #8
   19ad0:	mov	r8, r3
   19ad4:	mov	r5, r2
   19ad8:	mov	r4, r1
   19adc:	mov	r7, r0
   19ae0:	ldr	r0, [pc, #516]	; 19cec <exit_remote_server+0x228>
   19ae4:	ldr	r0, [pc, r0]
   19ae8:	ldr	r0, [r0]
   19aec:	cmp	r0, #0
   19af0:	beq	19b20 <exit_remote_server+0x5c>
   19af4:	ldr	r0, [pc, #500]	; 19cf0 <exit_remote_server+0x22c>
   19af8:	add	r0, pc, r0
   19afc:	vldr	d16, [r0]
   19b00:	add	r0, r0, #6
   19b04:	ldr	r1, [pc, #488]	; 19cf4 <exit_remote_server+0x230>
   19b08:	add	r1, pc, r1
   19b0c:	vld1.16	{d17}, [r0]
   19b10:	vstr	d16, [r1]
   19b14:	add	r0, r1, #6
   19b18:	vst1.16	{d17}, [r0]
   19b1c:	b	19b58 <exit_remote_server+0x94>
   19b20:	ldr	r0, [r4, #32]
   19b24:	add	r1, r0, #88	; 0x58
   19b28:	ldr	r6, [pc, #456]	; 19cf8 <exit_remote_server+0x234>
   19b2c:	add	r6, pc, r6
   19b30:	mov	r0, r6
   19b34:	bl	d928 <strcpy@plt>
   19b38:	mov	r0, r6
   19b3c:	bl	dc94 <strlen@plt>
   19b40:	add	r0, r6, r0
   19b44:	mov	r1, #32
   19b48:	strh	r1, [r0]
   19b4c:	add	r1, r4, #88	; 0x58
   19b50:	mov	r0, r6
   19b54:	bl	d8bc <strcat@plt>
   19b58:	ldrh	r0, [r5, #80]	; 0x50
   19b5c:	cmp	r0, #64	; 0x40
   19b60:	bne	19bb4 <exit_remote_server+0xf0>
   19b64:	ldr	r0, [r5, #24]
   19b68:	cmp	r0, #0
   19b6c:	beq	19b90 <exit_remote_server+0xcc>
   19b70:	str	r8, [sp]
   19b74:	add	r3, r5, #88	; 0x58
   19b78:	ldr	r0, [pc, #380]	; 19cfc <exit_remote_server+0x238>
   19b7c:	add	r0, pc, r0
   19b80:	ldr	r2, [pc, #376]	; 19d00 <exit_remote_server+0x23c>
   19b84:	add	r2, pc, r2
   19b88:	mov	r1, #512	; 0x200
   19b8c:	bl	de74 <snprintf@plt>
   19b90:	ldrh	r0, [r5, #80]	; 0x50
   19b94:	cmp	r0, #64	; 0x40
   19b98:	bne	19bb4 <exit_remote_server+0xf0>
   19b9c:	ldr	r0, [r5, #24]
   19ba0:	cmp	r0, #0
   19ba4:	beq	19bb4 <exit_remote_server+0xf0>
   19ba8:	ldr	r2, [pc, #340]	; 19d04 <exit_remote_server+0x240>
   19bac:	add	r2, pc, r2
   19bb0:	b	19bb8 <exit_remote_server+0xf4>
   19bb4:	mov	r2, r8
   19bb8:	ldr	r3, [pc, #328]	; 19d08 <exit_remote_server+0x244>
   19bbc:	add	r3, pc, r3
   19bc0:	mov	r0, r7
   19bc4:	mov	r1, r4
   19bc8:	bl	1aef4 <remove_dependents>
   19bcc:	ldr	r0, [r4, #32]
   19bd0:	ldr	r1, [r0, #28]
   19bd4:	add	r0, r4, #12
   19bd8:	add	r1, r1, #36	; 0x24
   19bdc:	bl	18f58 <rb_dlinkDelete>
   19be0:	ldr	r1, [pc, #292]	; 19d0c <exit_remote_server+0x248>
   19be4:	ldr	r1, [pc, r1]
   19be8:	mov	r0, r4
   19bec:	bl	1820c <rb_dlinkFindDestroy>
   19bf0:	ldr	r0, [r4, #36]	; 0x24
   19bf4:	cmp	r0, #0
   19bf8:	cmpne	r0, r7
   19bfc:	beq	19c14 <exit_remote_server+0x150>
   19c00:	ldrh	r1, [r0, #80]	; 0x50
   19c04:	cmp	r1, #32
   19c08:	ldrbeq	r1, [r4, #64]	; 0x40
   19c0c:	tsteq	r1, #4
   19c10:	beq	19c78 <exit_remote_server+0x1b4>
   19c14:	mov	r0, r4
   19c18:	ldrb	r1, [r0, #396]!	; 0x18c
   19c1c:	cmp	r1, #0
   19c20:	beq	19c2c <exit_remote_server+0x168>
   19c24:	mov	r1, r4
   19c28:	bl	da9c <del_from_id_hash@plt>
   19c2c:	add	r0, r4, #88	; 0x58
   19c30:	mov	r1, r4
   19c34:	bl	db20 <del_from_client_hash@plt>
   19c38:	mov	r0, r4
   19c3c:	bl	1adac <remove_client_from_list>
   19c40:	ldr	r0, [r4, #28]
   19c44:	ldr	r0, [r0, #68]	; 0x44
   19c48:	bl	db68 <scache_split@plt>
   19c4c:	ldr	r0, [r4, #64]	; 0x40
   19c50:	orr	r0, r0, #2
   19c54:	str	r0, [r4, #64]	; 0x40
   19c58:	bl	dc64 <rb_make_rb_dlink_node@plt>
   19c5c:	mov	r1, r0
   19c60:	ldr	r2, [pc, #172]	; 19d14 <exit_remote_server+0x250>
   19c64:	add	r2, pc, r2
   19c68:	mov	r0, r4
   19c6c:	sub	sp, fp, #24
   19c70:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   19c74:	b	180d8 <rb_dlinkAdd>
   19c78:	ldr	r1, [r0, #36]	; 0x24
   19c7c:	ldrh	r2, [r1, #80]	; 0x50
   19c80:	cmp	r2, #32
   19c84:	bne	19ca4 <exit_remote_server+0x1e0>
   19c88:	ldrb	r2, [r1, #396]	; 0x18c
   19c8c:	cmp	r2, #0
   19c90:	beq	19cac <exit_remote_server+0x1e8>
   19c94:	ldrb	r2, [r5, #396]!	; 0x18c
   19c98:	cmp	r2, #0
   19c9c:	subeq	r5, r5, #308	; 0x134
   19ca0:	b	19cb0 <exit_remote_server+0x1ec>
   19ca4:	add	r5, r5, #88	; 0x58
   19ca8:	b	19cd0 <exit_remote_server+0x20c>
   19cac:	add	r5, r5, #88	; 0x58
   19cb0:	ldrb	r1, [r1, #396]	; 0x18c
   19cb4:	cmp	r1, #0
   19cb8:	beq	19cd0 <exit_remote_server+0x20c>
   19cbc:	mov	r3, r4
   19cc0:	ldrb	r1, [r3, #396]!	; 0x18c
   19cc4:	cmp	r1, #0
   19cc8:	subeq	r3, r3, #308	; 0x134
   19ccc:	b	19cd4 <exit_remote_server+0x210>
   19cd0:	add	r3, r4, #88	; 0x58
   19cd4:	str	r8, [sp]
   19cd8:	ldr	r1, [pc, #48]	; 19d10 <exit_remote_server+0x24c>
   19cdc:	add	r1, pc, r1
   19ce0:	mov	r2, r5
   19ce4:	bl	d1e4 <sendto_one@plt>
   19ce8:	b	19c14 <exit_remote_server+0x150>
   19cec:	.word	0x00040ed0
   19cf0:	.word	0x00027b88
   19cf4:	.word	0x0004b9d0
   19cf8:	.word	0x0004b9ac
   19cfc:	.word	0x0004b9dc
   19d00:	.word	0x00027a58
   19d04:	.word	0x0004b9ac
   19d08:	.word	0x0004b91c
   19d0c:	.word	0x00040c94
   19d10:	.word	0x00027971
   19d14:	.word	0x0004b5e4

00019d18 <count_local_client_memory>:
   19d18:	push	{r4, r5, fp, lr}
   19d1c:	add	fp, sp, #8
   19d20:	sub	sp, sp, #8
   19d24:	mov	r4, r1
   19d28:	mov	r5, r0
   19d2c:	ldr	r0, [pc, #52]	; 19d68 <count_local_client_memory+0x50>
   19d30:	ldr	r0, [pc, r0]
   19d34:	mov	r1, #0
   19d38:	str	r1, [sp]
   19d3c:	add	r3, sp, #4
   19d40:	mov	r1, r5
   19d44:	mov	r2, #0
   19d48:	bl	e384 <rb_bh_usage@plt>
   19d4c:	ldr	r0, [r5]
   19d50:	ldr	r1, [sp, #4]
   19d54:	mov	r2, #452	; 0x1c4
   19d58:	mla	r0, r0, r2, r1
   19d5c:	str	r0, [r4]
   19d60:	sub	sp, fp, #8
   19d64:	pop	{r4, r5, fp, pc}
   19d68:	.word	0x0004b3c8

00019d6c <count_remote_client_memory>:
   19d6c:	push	{r4, r5, r6, sl, fp, lr}
   19d70:	add	fp, sp, #16
   19d74:	sub	sp, sp, #16
   19d78:	mov	r4, r1
   19d7c:	mov	r5, r0
   19d80:	ldr	r0, [pc, #88]	; 19de0 <count_remote_client_memory+0x74>
   19d84:	ldr	r0, [pc, r0]
   19d88:	mov	r6, #0
   19d8c:	str	r6, [sp]
   19d90:	add	r1, sp, #12
   19d94:	mov	r2, #0
   19d98:	mov	r3, #0
   19d9c:	bl	e384 <rb_bh_usage@plt>
   19da0:	ldr	r0, [pc, #60]	; 19de4 <count_remote_client_memory+0x78>
   19da4:	ldr	r0, [pc, r0]
   19da8:	str	r6, [sp]
   19dac:	add	r1, sp, #8
   19db0:	mov	r2, #0
   19db4:	mov	r3, #0
   19db8:	bl	e384 <rb_bh_usage@plt>
   19dbc:	ldr	r0, [sp, #12]
   19dc0:	ldr	r1, [sp, #8]
   19dc4:	sub	r0, r1, r0
   19dc8:	str	r0, [r5]
   19dcc:	mov	r1, #452	; 0x1c4
   19dd0:	mul	r0, r0, r1
   19dd4:	str	r0, [r4]
   19dd8:	sub	sp, fp, #16
   19ddc:	pop	{r4, r5, r6, sl, fp, pc}
   19de0:	.word	0x0004b374
   19de4:	.word	0x0004b350

00019de8 <del_all_accepts>:
   19de8:	push	{r4, r5, r6, r7, fp, lr}
   19dec:	add	fp, sp, #16
   19df0:	mov	r4, r0
   19df4:	ldrb	r0, [r0, #65]	; 0x41
   19df8:	tst	r0, #32
   19dfc:	beq	19e54 <del_all_accepts+0x6c>
   19e00:	ldrh	r0, [r4, #80]	; 0x50
   19e04:	cmp	r0, #64	; 0x40
   19e08:	bne	19e54 <del_all_accepts+0x6c>
   19e0c:	ldr	r0, [r4, #432]	; 0x1b0
   19e10:	ldr	r5, [r0, #316]	; 0x13c
   19e14:	cmp	r5, #0
   19e18:	beq	19e54 <del_all_accepts+0x6c>
   19e1c:	ldr	r0, [r5]
   19e20:	ldr	r6, [r5, #8]
   19e24:	add	r1, r0, #408	; 0x198
   19e28:	mov	r0, r4
   19e2c:	bl	1820c <rb_dlinkFindDestroy>
   19e30:	ldr	r0, [r4, #432]	; 0x1b0
   19e34:	add	r1, r0, #316	; 0x13c
   19e38:	mov	r0, r5
   19e3c:	bl	18f58 <rb_dlinkDelete>
   19e40:	mov	r0, r5
   19e44:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   19e48:	cmp	r6, #0
   19e4c:	mov	r5, r6
   19e50:	bne	19e1c <del_all_accepts+0x34>
   19e54:	mov	r5, r4
   19e58:	ldr	r6, [r5, #408]!	; 0x198
   19e5c:	cmp	r6, #0
   19e60:	popeq	{r4, r5, r6, r7, fp, pc}
   19e64:	ldr	r0, [r6]
   19e68:	ldr	r7, [r6, #8]
   19e6c:	ldr	r0, [r0, #432]	; 0x1b0
   19e70:	add	r1, r0, #316	; 0x13c
   19e74:	mov	r0, r4
   19e78:	bl	1820c <rb_dlinkFindDestroy>
   19e7c:	mov	r0, r6
   19e80:	mov	r1, r5
   19e84:	bl	18f58 <rb_dlinkDelete>
   19e88:	mov	r0, r6
   19e8c:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   19e90:	cmp	r7, #0
   19e94:	mov	r6, r7
   19e98:	bne	19e64 <del_all_accepts+0x7c>
   19e9c:	pop	{r4, r5, r6, r7, fp, pc}

00019ea0 <show_ip>:
   19ea0:	push	{r4, r5, fp, lr}
   19ea4:	add	fp, sp, #8
   19ea8:	ldrh	r2, [r1, #80]	; 0x50
   19eac:	sub	r2, r2, #1
   19eb0:	mov	r5, #0
   19eb4:	cmp	r2, #31
   19eb8:	bhi	19ed4 <show_ip+0x34>
   19ebc:	mov	r3, #1
   19ec0:	mov	r4, #-2147483645	; 0x80000003
   19ec4:	tst	r4, r3, lsl r2
   19ec8:	beq	19ed4 <show_ip+0x34>
   19ecc:	mov	r0, r5
   19ed0:	pop	{r4, r5, fp, pc}
   19ed4:	ldr	r1, [r1, #64]	; 0x40
   19ed8:	tst	r1, #16777216	; 0x1000000
   19edc:	bne	19ef8 <show_ip+0x58>
   19ee0:	cmp	r0, #0
   19ee4:	andsne	r1, r1, #131072	; 0x20000
   19ee8:	bne	19f5c <show_ip+0xbc>
   19eec:	mov	r5, #1
   19ef0:	mov	r0, r5
   19ef4:	pop	{r4, r5, fp, pc}
   19ef8:	ldr	r1, [pc, #140]	; 19f8c <show_ip+0xec>
   19efc:	ldr	r1, [pc, r1]
   19f00:	ldr	r1, [r1, #204]	; 0xcc
   19f04:	cmp	r1, #0
   19f08:	beq	19f18 <show_ip+0x78>
   19f0c:	mov	r5, #0
   19f10:	mov	r0, r5
   19f14:	pop	{r4, r5, fp, pc}
   19f18:	mov	r5, #1
   19f1c:	cmp	r0, #0
   19f20:	beq	19ecc <show_ip+0x2c>
   19f24:	ldrb	r1, [r0, #65]	; 0x41
   19f28:	tst	r1, #32
   19f2c:	beq	19f0c <show_ip+0x6c>
   19f30:	ldr	r0, [r0, #24]
   19f34:	cmp	r0, #0
   19f38:	ldrne	r0, [r0, #36]	; 0x24
   19f3c:	cmpne	r0, #0
   19f40:	beq	19f0c <show_ip+0x6c>
   19f44:	ldr	r1, [pc, #68]	; 19f90 <show_ip+0xf0>
   19f48:	add	r1, pc, r1
   19f4c:	bl	e594 <privilegeset_in_set@plt>
   19f50:	cmp	r0, #0
   19f54:	bne	19ecc <show_ip+0x2c>
   19f58:	b	19f0c <show_ip+0x6c>
   19f5c:	ldr	r0, [r0, #24]
   19f60:	cmp	r0, #0
   19f64:	ldrne	r0, [r0, #36]	; 0x24
   19f68:	cmpne	r0, #0
   19f6c:	beq	19ecc <show_ip+0x2c>
   19f70:	ldr	r1, [pc, #28]	; 19f94 <show_ip+0xf4>
   19f74:	add	r1, pc, r1
   19f78:	bl	e594 <privilegeset_in_set@plt>
   19f7c:	cmp	r0, #0
   19f80:	movne	r5, #1
   19f84:	mov	r0, r5
   19f88:	pop	{r4, r5, fp, pc}
   19f8c:	.word	0x00040c80
   19f90:	.word	0x000273c0
   19f94:	.word	0x00027394

00019f98 <show_ip_conf>:
   19f98:	ldrb	r2, [r0, #5]
   19f9c:	mov	r0, #1
   19fa0:	tst	r2, #2
   19fa4:	bxeq	lr
   19fa8:	ldr	r2, [pc, #44]	; 19fdc <show_ip_conf+0x44>
   19fac:	ldr	r2, [pc, r2]
   19fb0:	ldr	r2, [r2, #204]	; 0xcc
   19fb4:	cmp	r2, #0
   19fb8:	beq	19fc4 <show_ip_conf+0x2c>
   19fbc:	mov	r0, #0
   19fc0:	bx	lr
   19fc4:	ldrb	r2, [r1, #65]	; 0x41
   19fc8:	tst	r2, #32
   19fcc:	ldrbne	r1, [r1, #57]	; 0x39
   19fd0:	tstne	r1, #16
   19fd4:	moveq	r0, #0
   19fd8:	bx	lr
   19fdc:	.word	0x00040bd0

00019fe0 <show_ip_whowas>:
   19fe0:	ldrb	r2, [r0, #286]	; 0x11e
   19fe4:	tst	r2, #1
   19fe8:	beq	1a01c <show_ip_whowas+0x3c>
   19fec:	ldr	r0, [pc, #76]	; 1a040 <show_ip_whowas+0x60>
   19ff0:	ldr	r0, [pc, r0]
   19ff4:	ldr	r3, [r0, #204]	; 0xcc
   19ff8:	mov	r0, #0
   19ffc:	cmp	r3, #0
   1a000:	bxne	lr
   1a004:	ldrb	r3, [r1, #65]	; 0x41
   1a008:	tst	r3, #32
   1a00c:	ldrbne	r3, [r1, #57]	; 0x39
   1a010:	tstne	r3, #16
   1a014:	bne	1a01c <show_ip_whowas+0x3c>
   1a018:	bx	lr
   1a01c:	tst	r2, #2
   1a020:	bne	1a02c <show_ip_whowas+0x4c>
   1a024:	mov	r0, #1
   1a028:	bx	lr
   1a02c:	ldrb	r1, [r1, #57]	; 0x39
   1a030:	mov	r0, #0
   1a034:	tst	r1, #16
   1a038:	movne	r0, #1
   1a03c:	bx	lr
   1a040:	.word	0x00040b8c

0001a044 <make_user>:
   1a044:	push	{r4, sl, fp, lr}
   1a048:	add	fp, sp, #8
   1a04c:	mov	r4, r0
   1a050:	ldr	r0, [r0, #24]
   1a054:	cmp	r0, #0
   1a058:	popne	{r4, sl, fp, pc}
   1a05c:	ldr	r0, [pc, #20]	; 1a078 <make_user+0x34>
   1a060:	ldr	r0, [pc, r0]
   1a064:	bl	de20 <rb_bh_alloc@plt>
   1a068:	mov	r1, #1
   1a06c:	str	r1, [r0, #28]
   1a070:	str	r0, [r4, #24]
   1a074:	pop	{r4, sl, fp, pc}
   1a078:	.word	0x0004b0a0

0001a07c <make_server>:
   1a07c:	push	{r4, sl, fp, lr}
   1a080:	add	fp, sp, #8
   1a084:	mov	r4, r0
   1a088:	ldr	r0, [r0, #28]
   1a08c:	cmp	r0, #0
   1a090:	beq	1a09c <make_server+0x20>
   1a094:	ldr	r0, [r4, #28]
   1a098:	pop	{r4, sl, fp, pc}
   1a09c:	mov	r0, #72	; 0x48
   1a0a0:	bl	1939c <rb_malloc>
   1a0a4:	str	r0, [r4, #28]
   1a0a8:	ldr	r0, [r4, #28]
   1a0ac:	pop	{r4, sl, fp, pc}

0001a0b0 <free_user>:
   1a0b0:	push	{r4, r5, r6, sl, fp, lr}
   1a0b4:	add	fp, sp, #16
   1a0b8:	sub	sp, sp, #32
   1a0bc:	mov	r5, r1
   1a0c0:	mov	r4, r0
   1a0c4:	mov	r0, r1
   1a0c8:	bl	db8c <free_away@plt>
   1a0cc:	ldr	r0, [r4, #28]
   1a0d0:	subs	r0, r0, #1
   1a0d4:	str	r0, [r4, #28]
   1a0d8:	subgt	sp, fp, #16
   1a0dc:	popgt	{r4, r5, r6, sl, fp, pc}
   1a0e0:	ldr	r0, [r4, #24]
   1a0e4:	cmp	r0, #0
   1a0e8:	blne	183ec <rb_free>
   1a0ec:	ldr	r0, [r4, #32]
   1a0f0:	bl	183ec <rb_free>
   1a0f4:	ldr	r0, [r4, #36]	; 0x24
   1a0f8:	cmp	r0, #0
   1a0fc:	beq	1a104 <free_user+0x54>
   1a100:	bl	e630 <privilegeset_unref@plt>
   1a104:	ldr	r0, [r4, #28]
   1a108:	cmp	r0, #0
   1a10c:	blt	1a128 <free_user+0x78>
   1a110:	ldr	r1, [r4, #12]
   1a114:	cmp	r1, #0
   1a118:	bne	1a128 <free_user+0x78>
   1a11c:	ldr	r1, [r4]
   1a120:	cmp	r1, #0
   1a124:	beq	1a180 <free_user+0xd0>
   1a128:	ldr	ip, [r4]
   1a12c:	ldr	lr, [r4, #8]
   1a130:	ldr	r3, [r4, #12]
   1a134:	add	r1, r5, #163	; 0xa3
   1a138:	add	r2, r5, #152	; 0x98
   1a13c:	ldr	r6, [pc, #84]	; 1a198 <free_user+0xe8>
   1a140:	add	r6, pc, r6
   1a144:	cmp	r5, #0
   1a148:	addne	r6, r5, #88	; 0x58
   1a14c:	str	r6, [sp]
   1a150:	str	r2, [sp, #4]
   1a154:	str	r1, [sp, #8]
   1a158:	str	r4, [sp, #12]
   1a15c:	add	r1, sp, #16
   1a160:	stm	r1, {r3, ip, lr}
   1a164:	str	r0, [sp, #28]
   1a168:	ldr	r2, [pc, #44]	; 1a19c <free_user+0xec>
   1a16c:	add	r2, pc, r2
   1a170:	mov	r0, #256	; 0x100
   1a174:	mov	r1, #0
   1a178:	mov	r3, r5
   1a17c:	bl	d640 <sendto_realops_snomask@plt>
   1a180:	ldr	r0, [pc, #24]	; 1a1a0 <free_user+0xf0>
   1a184:	ldr	r0, [pc, r0]
   1a188:	mov	r1, r4
   1a18c:	sub	sp, fp, #16
   1a190:	pop	{r4, r5, r6, sl, fp, lr}
   1a194:	b	e708 <rb_bh_free@plt>
   1a198:	.word	0x000271ff
   1a19c:	.word	0x000271ac
   1a1a0:	.word	0x0004af7c

0001a1a4 <free_away>:
   1a1a4:	push	{r4, sl, fp, lr}
   1a1a8:	add	fp, sp, #8
   1a1ac:	mov	r4, r0
   1a1b0:	ldr	r0, [r0, #24]
   1a1b4:	cmp	r0, #0
   1a1b8:	ldrne	r1, [r0, #24]
   1a1bc:	cmpne	r1, #0
   1a1c0:	bne	1a1c8 <free_away+0x24>
   1a1c4:	pop	{r4, sl, fp, pc}
   1a1c8:	ldr	r0, [pc, #20]	; 1a1e4 <free_away+0x40>
   1a1cc:	ldr	r0, [pc, r0]
   1a1d0:	bl	e708 <rb_bh_free@plt>
   1a1d4:	ldr	r0, [r4, #24]
   1a1d8:	mov	r1, #0
   1a1dc:	str	r1, [r0, #24]
   1a1e0:	pop	{r4, sl, fp, pc}
   1a1e4:	.word	0x0004af38

0001a1e8 <allocate_away>:
   1a1e8:	push	{r4, sl, fp, lr}
   1a1ec:	add	fp, sp, #8
   1a1f0:	mov	r4, r0
   1a1f4:	ldr	r0, [r0, #24]
   1a1f8:	ldr	r0, [r0, #24]
   1a1fc:	cmp	r0, #0
   1a200:	popne	{r4, sl, fp, pc}
   1a204:	ldr	r0, [pc, #16]	; 1a21c <allocate_away+0x34>
   1a208:	ldr	r0, [pc, r0]
   1a20c:	bl	de20 <rb_bh_alloc@plt>
   1a210:	ldr	r1, [r4, #24]
   1a214:	str	r0, [r1, #24]
   1a218:	pop	{r4, sl, fp, pc}
   1a21c:	.word	0x0004aefc

0001a220 <init_uid>:
   1a220:	ldr	r0, [pc, #60]	; 1a264 <init_uid+0x44>
   1a224:	add	r0, pc, r0
   1a228:	movw	r1, #16705	; 0x4141
   1a22c:	strh	r1, [r0, #7]
   1a230:	movw	r1, #16705	; 0x4141
   1a234:	movt	r1, #16705	; 0x4141
   1a238:	str	r1, [r0, #3]
   1a23c:	mov	r1, #0
   1a240:	strb	r1, [r0, #9]
   1a244:	ldr	r1, [pc, #28]	; 1a268 <init_uid+0x48>
   1a248:	ldr	r1, [pc, r1]
   1a24c:	ldrb	r2, [r1, #398]	; 0x18e
   1a250:	strb	r2, [r0, #2]
   1a254:	mov	r2, #396	; 0x18c
   1a258:	ldrh	r1, [r1, r2]
   1a25c:	strh	r1, [r0]
   1a260:	bx	lr
   1a264:	.word	0x0004b014
   1a268:	.word	0x00040910

0001a26c <generate_uid>:
   1a26c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a270:	add	fp, sp, #24
   1a274:	mov	r0, #8
   1a278:	ldr	r4, [pc, #164]	; 1a324 <generate_uid+0xb8>
   1a27c:	add	r4, pc, r4
   1a280:	mov	r5, #65	; 0x41
   1a284:	ldr	r6, [pc, #156]	; 1a328 <generate_uid+0xbc>
   1a288:	add	r6, pc, r6
   1a28c:	mov	r8, #1
   1a290:	mov	r7, #48	; 0x30
   1a294:	ldrb	r1, [r4, r0]
   1a298:	cmp	r1, #57	; 0x39
   1a29c:	beq	1a2b0 <generate_uid+0x44>
   1a2a0:	cmp	r1, #90	; 0x5a
   1a2a4:	bne	1a2e0 <generate_uid+0x74>
   1a2a8:	strb	r7, [r4, r0]
   1a2ac:	b	1a2e8 <generate_uid+0x7c>
   1a2b0:	strb	r5, [r4, r0]
   1a2b4:	sub	r1, r0, #1
   1a2b8:	cmp	r0, #4
   1a2bc:	mov	r0, r1
   1a2c0:	bhi	1a294 <generate_uid+0x28>
   1a2c4:	ldrb	r0, [r4, #3]
   1a2c8:	cmp	r0, #90	; 0x5a
   1a2cc:	beq	1a30c <generate_uid+0xa0>
   1a2d0:	ldrb	r0, [r4, r1]
   1a2d4:	add	r0, r0, #1
   1a2d8:	strb	r0, [r4, r1]
   1a2dc:	b	1a2e8 <generate_uid+0x7c>
   1a2e0:	add	r1, r1, #1
   1a2e4:	strb	r1, [r4, r0]
   1a2e8:	ldrb	r0, [r6]
   1a2ec:	cmp	r0, #1
   1a2f0:	bne	1a318 <generate_uid+0xac>
   1a2f4:	mov	r0, r4
   1a2f8:	bl	e4f8 <find_id@plt>
   1a2fc:	cmp	r0, #0
   1a300:	mov	r0, #8
   1a304:	bne	1a294 <generate_uid+0x28>
   1a308:	b	1a318 <generate_uid+0xac>
   1a30c:	strb	r5, [r4, r1]
   1a310:	strb	r8, [r6]
   1a314:	b	1a2f4 <generate_uid+0x88>
   1a318:	ldr	r0, [pc, #12]	; 1a32c <generate_uid+0xc0>
   1a31c:	add	r0, pc, r0
   1a320:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a324:	.word	0x0004afbc
   1a328:	.word	0x0004afbc
   1a32c:	.word	0x0004af1c

0001a330 <close_connection>:
   1a330:	push	{r4, r5, fp, lr}
   1a334:	add	fp, sp, #8
   1a338:	cmp	r0, #0
   1a33c:	beq	1a524 <close_connection+0x1f4>
   1a340:	mov	r4, r0
   1a344:	ldrb	r0, [r0, #65]	; 0x41
   1a348:	tst	r0, #32
   1a34c:	popeq	{r4, r5, fp, pc}
   1a350:	ldrh	r0, [r4, #80]	; 0x50
   1a354:	cmp	r0, #64	; 0x40
   1a358:	beq	1a418 <close_connection+0xe8>
   1a35c:	cmp	r0, #32
   1a360:	bne	1a488 <close_connection+0x158>
   1a364:	ldr	r5, [pc, #444]	; 1a528 <close_connection+0x1f8>
   1a368:	ldr	r5, [pc, r5]
   1a36c:	ldr	r0, [r5, #4]
   1a370:	add	ip, r5, #32
   1a374:	ldm	ip, {r1, r2, ip}
   1a378:	add	r0, r0, #1
   1a37c:	str	r0, [r5, #4]
   1a380:	ldr	r0, [r4, #432]	; 0x1b0
   1a384:	ldrh	r3, [r0, #124]	; 0x7c
   1a388:	adds	r1, r1, r3
   1a38c:	str	r1, [r5, #32]
   1a390:	adc	r1, r2, #0
   1a394:	str	r1, [r5, #36]	; 0x24
   1a398:	ldrh	r0, [r0, #126]	; 0x7e
   1a39c:	adds	r0, ip, r0
   1a3a0:	str	r0, [r5, #40]	; 0x28
   1a3a4:	ldr	r0, [r5, #44]	; 0x2c
   1a3a8:	adc	r0, r0, #0
   1a3ac:	str	r0, [r5, #44]	; 0x2c
   1a3b0:	bl	d07c <rb_current_time@plt>
   1a3b4:	ldr	r1, [r4, #432]	; 0x1b0
   1a3b8:	ldr	r1, [r1, #48]	; 0x30
   1a3bc:	sub	r0, r0, r1
   1a3c0:	ldrd	r2, [r5, #56]	; 0x38
   1a3c4:	adds	r2, r2, r0
   1a3c8:	adc	r3, r3, r0, asr #31
   1a3cc:	strd	r2, [r5, #56]	; 0x38
   1a3d0:	add	r0, r4, #88	; 0x58
   1a3d4:	bl	e0d8 <find_server_conf@plt>
   1a3d8:	cmp	r0, #0
   1a3dc:	beq	1a49c <close_connection+0x16c>
   1a3e0:	mov	r5, r0
   1a3e4:	mov	r0, #0
   1a3e8:	bl	d49c <time@plt>
   1a3ec:	str	r0, [r5, #296]	; 0x128
   1a3f0:	ldr	r1, [r4, #432]	; 0x1b0
   1a3f4:	ldr	r1, [r1, #44]	; 0x2c
   1a3f8:	sub	r2, r0, r1
   1a3fc:	mov	r1, #60	; 0x3c
   1a400:	cmp	r2, #3600	; 0xe10
   1a404:	ldrle	r1, [r5, #576]	; 0x240
   1a408:	ldrle	r1, [r1, #28]
   1a40c:	add	r0, r1, r0
   1a410:	str	r0, [r5, #296]	; 0x128
   1a414:	b	1a49c <close_connection+0x16c>
   1a418:	ldr	r5, [pc, #268]	; 1a52c <close_connection+0x1fc>
   1a41c:	ldr	r5, [pc, r5]
   1a420:	ldr	r0, [r5]
   1a424:	add	ip, r5, #16
   1a428:	ldm	ip, {r1, r2, ip}
   1a42c:	add	r0, r0, #1
   1a430:	str	r0, [r5]
   1a434:	ldr	r0, [r4, #432]	; 0x1b0
   1a438:	ldrh	r3, [r0, #124]	; 0x7c
   1a43c:	adds	r1, r1, r3
   1a440:	str	r1, [r5, #16]
   1a444:	adc	r1, r2, #0
   1a448:	str	r1, [r5, #20]
   1a44c:	ldrh	r0, [r0, #126]	; 0x7e
   1a450:	adds	r0, ip, r0
   1a454:	str	r0, [r5, #24]
   1a458:	ldr	r0, [r5, #28]
   1a45c:	adc	r0, r0, #0
   1a460:	str	r0, [r5, #28]
   1a464:	bl	d07c <rb_current_time@plt>
   1a468:	ldr	r1, [r4, #432]	; 0x1b0
   1a46c:	ldr	r1, [r1, #48]	; 0x30
   1a470:	sub	r0, r0, r1
   1a474:	ldrd	r2, [r5, #48]	; 0x30
   1a478:	adds	r2, r2, r0
   1a47c:	adc	r3, r3, r0, asr #31
   1a480:	strd	r2, [r5, #48]	; 0x30
   1a484:	b	1a49c <close_connection+0x16c>
   1a488:	ldr	r0, [pc, #160]	; 1a530 <close_connection+0x200>
   1a48c:	ldr	r0, [pc, r0]
   1a490:	ldr	r1, [r0, #8]
   1a494:	add	r1, r1, #1
   1a498:	str	r1, [r0, #8]
   1a49c:	add	r5, r4, #64	; 0x40
   1a4a0:	mov	r0, r4
   1a4a4:	bl	d298 <client_release_connids@plt>
   1a4a8:	ldr	r0, [r4, #432]	; 0x1b0
   1a4ac:	ldr	r0, [r0, #300]	; 0x12c
   1a4b0:	cmp	r0, #0
   1a4b4:	beq	1a4e4 <close_connection+0x1b4>
   1a4b8:	ldrb	r0, [r5, #1]
   1a4bc:	tst	r0, #64	; 0x40
   1a4c0:	bne	1a4cc <close_connection+0x19c>
   1a4c4:	mov	r0, r4
   1a4c8:	bl	e7f8 <send_queued@plt>
   1a4cc:	ldr	r0, [r4, #432]	; 0x1b0
   1a4d0:	ldr	r0, [r0, #300]	; 0x12c
   1a4d4:	bl	db5c <rb_close@plt>
   1a4d8:	ldr	r0, [r4, #432]	; 0x1b0
   1a4dc:	mov	r1, #0
   1a4e0:	str	r1, [r0, #300]	; 0x12c
   1a4e4:	ldr	r0, [r4, #432]	; 0x1b0
   1a4e8:	add	r0, r0, #52	; 0x34
   1a4ec:	bl	e00c <rb_linebuf_donebuf@plt>
   1a4f0:	ldr	r0, [r4, #432]	; 0x1b0
   1a4f4:	add	r0, r0, #80	; 0x50
   1a4f8:	bl	e00c <rb_linebuf_donebuf@plt>
   1a4fc:	mov	r0, r4
   1a500:	bl	d280 <detach_conf@plt>
   1a504:	mov	r0, r4
   1a508:	bl	ddcc <detach_server_conf@plt>
   1a50c:	mov	r0, #0
   1a510:	str	r0, [r4, #36]	; 0x24
   1a514:	ldr	r0, [r5]
   1a518:	mov	r1, #2
   1a51c:	bfi	r0, r1, #13, #2
   1a520:	str	r0, [r5]
   1a524:	pop	{r4, r5, fp, pc}
   1a528:	.word	0x00040654
   1a52c:	.word	0x000405a0
   1a530:	.word	0x00040530

0001a534 <error_exit_client>:
   1a534:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a538:	add	fp, sp, #24
   1a53c:	sub	sp, sp, #264	; 0x108
   1a540:	mov	r6, r1
   1a544:	mov	r4, r0
   1a548:	ldr	r0, [r0, #432]	; 0x1b0
   1a54c:	ldr	r0, [r0, #300]	; 0x12c
   1a550:	bl	e4bc <rb_get_sockerr@plt>
   1a554:	mov	r5, r0
   1a558:	ldr	r0, [r4, #64]	; 0x40
   1a55c:	orr	r0, r0, #16384	; 0x4000
   1a560:	str	r0, [r4, #64]	; 0x40
   1a564:	ldrh	r0, [r4, #80]	; 0x50
   1a568:	cmp	r0, #32
   1a56c:	cmpne	r0, #2
   1a570:	bne	1a59c <error_exit_client+0x68>
   1a574:	mov	r0, r4
   1a578:	bl	dea4 <is_remote_connect@plt>
   1a57c:	cmp	r6, #0
   1a580:	beq	1a5a8 <error_exit_client+0x74>
   1a584:	cmp	r0, #0
   1a588:	beq	1a5c0 <error_exit_client+0x8c>
   1a58c:	ldrh	r0, [r4, #80]	; 0x50
   1a590:	subs	r6, r0, #32
   1a594:	movwne	r6, #256	; 0x100
   1a598:	b	1a5c4 <error_exit_client+0x90>
   1a59c:	cmp	r6, #0
   1a5a0:	bne	1a618 <error_exit_client+0xe4>
   1a5a4:	b	1a674 <error_exit_client+0x140>
   1a5a8:	cmp	r0, #0
   1a5ac:	beq	1a63c <error_exit_client+0x108>
   1a5b0:	ldrh	r0, [r4, #80]	; 0x50
   1a5b4:	subs	r1, r0, #32
   1a5b8:	movwne	r1, #256	; 0x100
   1a5bc:	b	1a640 <error_exit_client+0x10c>
   1a5c0:	mov	r6, #0
   1a5c4:	mov	r0, r5
   1a5c8:	bl	dacc <strerror@plt>
   1a5cc:	str	r0, [sp]
   1a5d0:	add	r3, r4, #88	; 0x58
   1a5d4:	ldr	r7, [pc, #208]	; 1a6ac <error_exit_client+0x178>
   1a5d8:	add	r7, pc, r7
   1a5dc:	mov	r0, #256	; 0x100
   1a5e0:	mov	r1, r6
   1a5e4:	mov	r2, r7
   1a5e8:	bl	d640 <sendto_realops_snomask@plt>
   1a5ec:	mov	r0, r4
   1a5f0:	mov	r1, #1
   1a5f4:	bl	e168 <log_client_name@plt>
   1a5f8:	mov	r6, r0
   1a5fc:	mov	r0, r5
   1a600:	bl	dacc <strerror@plt>
   1a604:	mov	r3, r0
   1a608:	mov	r0, #5
   1a60c:	mov	r1, r7
   1a610:	mov	r2, r6
   1a614:	bl	e0b4 <ilog@plt>
   1a618:	mov	r0, r5
   1a61c:	bl	dacc <strerror@plt>
   1a620:	mov	r3, r0
   1a624:	add	r0, sp, #9
   1a628:	ldr	r2, [pc, #128]	; 1a6b0 <error_exit_client+0x17c>
   1a62c:	add	r2, pc, r2
   1a630:	mov	r1, #255	; 0xff
   1a634:	bl	de74 <snprintf@plt>
   1a638:	b	1a688 <error_exit_client+0x154>
   1a63c:	mov	r1, #0
   1a640:	add	r3, r4, #88	; 0x58
   1a644:	ldr	r5, [pc, #92]	; 1a6a8 <error_exit_client+0x174>
   1a648:	add	r5, pc, r5
   1a64c:	mov	r0, #256	; 0x100
   1a650:	mov	r2, r5
   1a654:	bl	d640 <sendto_realops_snomask@plt>
   1a658:	mov	r0, r4
   1a65c:	mov	r1, #1
   1a660:	bl	e168 <log_client_name@plt>
   1a664:	mov	r2, r0
   1a668:	mov	r0, #5
   1a66c:	mov	r1, r5
   1a670:	bl	e0b4 <ilog@plt>
   1a674:	add	r0, sp, #9
   1a678:	ldr	r1, [pc, #52]	; 1a6b4 <error_exit_client+0x180>
   1a67c:	add	r1, pc, r1
   1a680:	mov	r2, #255	; 0xff
   1a684:	bl	e510 <rb_strlcpy@plt>
   1a688:	ldr	r2, [pc, #40]	; 1a6b8 <error_exit_client+0x184>
   1a68c:	ldr	r2, [pc, r2]
   1a690:	add	r3, sp, #9
   1a694:	mov	r0, r4
   1a698:	mov	r1, r4
   1a69c:	bl	e534 <exit_client@plt>
   1a6a0:	sub	sp, fp, #24
   1a6a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a6a8:	.word	0x00026d00
   1a6ac:	.word	0x00026d90
   1a6b0:	.word	0x00026d78
   1a6b4:	.word	0x00026d06
   1a6b8:	.word	0x000404cc

0001a6bc <rb_dlinkFindDelete>:
   1a6bc:	push	{fp, lr}
   1a6c0:	mov	fp, sp
   1a6c4:	cmp	r1, #0
   1a6c8:	beq	1a73c <rb_dlinkFindDelete+0x80>
   1a6cc:	mov	ip, r0
   1a6d0:	cmp	r0, #0
   1a6d4:	beq	1a75c <rb_dlinkFindDelete+0xa0>
   1a6d8:	ldr	r3, [r1]
   1a6dc:	mov	r0, r3
   1a6e0:	cmp	r3, #0
   1a6e4:	popeq	{fp, pc}
   1a6e8:	ldr	r2, [r0]
   1a6ec:	ldr	r3, [r0, #8]
   1a6f0:	cmp	r2, ip
   1a6f4:	bne	1a6dc <rb_dlinkFindDelete+0x20>
   1a6f8:	add	r2, r3, #4
   1a6fc:	cmp	r3, #0
   1a700:	addeq	r2, r1, #4
   1a704:	ldr	r3, [r0, #4]
   1a708:	str	r3, [r2]
   1a70c:	ldmib	r0, {r2, ip}
   1a710:	cmp	r2, #0
   1a714:	mov	r3, r1
   1a718:	addne	r3, r2, #8
   1a71c:	str	ip, [r3]
   1a720:	mov	r2, #0
   1a724:	str	r2, [r0, #4]
   1a728:	str	r2, [r0, #8]
   1a72c:	ldr	r2, [r1, #8]
   1a730:	sub	r2, r2, #1
   1a734:	str	r2, [r1, #8]
   1a738:	pop	{fp, pc}
   1a73c:	ldr	r0, [pc, #56]	; 1a77c <rb_dlinkFindDelete+0xc0>
   1a740:	add	r0, pc, r0
   1a744:	ldr	r1, [pc, #52]	; 1a780 <rb_dlinkFindDelete+0xc4>
   1a748:	add	r1, pc, r1
   1a74c:	ldr	r3, [pc, #48]	; 1a784 <rb_dlinkFindDelete+0xc8>
   1a750:	add	r3, pc, r3
   1a754:	movw	r2, #258	; 0x102
   1a758:	bl	e7e0 <__assert_fail@plt>
   1a75c:	ldr	r0, [pc, #36]	; 1a788 <rb_dlinkFindDelete+0xcc>
   1a760:	add	r0, pc, r0
   1a764:	ldr	r1, [pc, #32]	; 1a78c <rb_dlinkFindDelete+0xd0>
   1a768:	add	r1, pc, r1
   1a76c:	ldr	r3, [pc, #28]	; 1a790 <rb_dlinkFindDelete+0xd4>
   1a770:	add	r3, pc, r3
   1a774:	movw	r2, #259	; 0x103
   1a778:	bl	e7e0 <__assert_fail@plt>
   1a77c:	.word	0x0002b705
   1a780:	.word	0x00025e6e
   1a784:	.word	0x000264a6
   1a788:	.word	0x00025eb1
   1a78c:	.word	0x00025e4e
   1a790:	.word	0x00026486

0001a794 <check_pings_list>:
   1a794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a798:	add	fp, sp, #28
   1a79c:	sub	sp, sp, #36	; 0x24
   1a7a0:	ldr	r9, [r0]
   1a7a4:	cmp	r9, #0
   1a7a8:	beq	1a8f4 <check_pings_list+0x160>
   1a7ac:	movw	sl, #8194	; 0x2002
   1a7b0:	ldr	r0, [pc, #324]	; 1a8fc <check_pings_list+0x168>
   1a7b4:	ldr	r0, [pc, r0]
   1a7b8:	add	r5, r0, #88	; 0x58
   1a7bc:	add	r7, sp, #4
   1a7c0:	ldr	r6, [r9]
   1a7c4:	ldr	r9, [r9, #8]
   1a7c8:	mov	r4, r6
   1a7cc:	ldr	r0, [r4, #64]!	; 0x40
   1a7d0:	and	r0, r0, sl
   1a7d4:	teq	r0, #8192	; 0x2000
   1a7d8:	bne	1a860 <check_pings_list+0xcc>
   1a7dc:	mov	r0, r6
   1a7e0:	bl	d58c <get_client_ping@plt>
   1a7e4:	mov	r8, r0
   1a7e8:	bl	d07c <rb_current_time@plt>
   1a7ec:	ldr	r1, [r6, #432]	; 0x1b0
   1a7f0:	ldr	r1, [r1, #44]	; 0x2c
   1a7f4:	sub	r0, r0, r1
   1a7f8:	cmp	r8, r0
   1a7fc:	bge	1a860 <check_pings_list+0xcc>
   1a800:	bl	d07c <rb_current_time@plt>
   1a804:	ldr	r1, [r6, #432]	; 0x1b0
   1a808:	ldr	r1, [r1, #44]	; 0x2c
   1a80c:	sub	r0, r0, r1
   1a810:	cmp	r0, r8, lsl #1
   1a814:	blt	1a824 <check_pings_list+0x90>
   1a818:	ldrb	r0, [r4]
   1a81c:	tst	r0, #1
   1a820:	bne	1a86c <check_pings_list+0xd8>
   1a824:	ldr	r0, [r4]
   1a828:	tst	r0, #1
   1a82c:	bne	1a860 <check_pings_list+0xcc>
   1a830:	ldr	r1, [r4, #4]
   1a834:	orr	r0, r0, #1
   1a838:	strd	r0, [r4]
   1a83c:	bl	d07c <rb_current_time@plt>
   1a840:	sub	r0, r0, r8
   1a844:	ldr	r1, [r6, #432]	; 0x1b0
   1a848:	str	r0, [r1, #44]	; 0x2c
   1a84c:	mov	r0, r6
   1a850:	ldr	r1, [pc, #180]	; 1a90c <check_pings_list+0x178>
   1a854:	add	r1, pc, r1
   1a858:	mov	r2, r5
   1a85c:	bl	d1e4 <sendto_one@plt>
   1a860:	cmp	r9, #0
   1a864:	bne	1a7c0 <check_pings_list+0x2c>
   1a868:	b	1a8f4 <check_pings_list+0x160>
   1a86c:	ldrh	r0, [r6, #80]	; 0x50
   1a870:	cmp	r0, #32
   1a874:	bne	1a8b0 <check_pings_list+0x11c>
   1a878:	add	r3, r6, #88	; 0x58
   1a87c:	mov	r0, #256	; 0x100
   1a880:	mov	r1, #0
   1a884:	ldr	r4, [pc, #116]	; 1a900 <check_pings_list+0x16c>
   1a888:	add	r4, pc, r4
   1a88c:	mov	r2, r4
   1a890:	bl	d640 <sendto_realops_snomask@plt>
   1a894:	mov	r0, r6
   1a898:	mov	r1, #0
   1a89c:	bl	e168 <log_client_name@plt>
   1a8a0:	mov	r2, r0
   1a8a4:	mov	r0, #5
   1a8a8:	mov	r1, r4
   1a8ac:	bl	e0b4 <ilog@plt>
   1a8b0:	bl	d07c <rb_current_time@plt>
   1a8b4:	ldr	r1, [r6, #432]	; 0x1b0
   1a8b8:	ldr	r1, [r1, #44]	; 0x2c
   1a8bc:	sub	r3, r0, r1
   1a8c0:	mov	r0, r7
   1a8c4:	mov	r1, #32
   1a8c8:	ldr	r2, [pc, #52]	; 1a904 <check_pings_list+0x170>
   1a8cc:	add	r2, pc, r2
   1a8d0:	bl	de74 <snprintf@plt>
   1a8d4:	mov	r0, r6
   1a8d8:	mov	r1, r6
   1a8dc:	ldr	r2, [pc, #36]	; 1a908 <check_pings_list+0x174>
   1a8e0:	ldr	r2, [pc, r2]
   1a8e4:	mov	r3, r7
   1a8e8:	bl	e534 <exit_client@plt>
   1a8ec:	cmp	r9, #0
   1a8f0:	bne	1a7c0 <check_pings_list+0x2c>
   1a8f4:	sub	sp, fp, #28
   1a8f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8fc:	.word	0x000403a4
   1a900:	.word	0x00026b2b
   1a904:	.word	0x00026b09
   1a908:	.word	0x00040278
   1a90c:	.word	0x00026b9a

0001a910 <check_unknowns_list>:
   1a910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a914:	add	fp, sp, #28
   1a918:	sub	sp, sp, #4
   1a91c:	ldr	r0, [pc, #272]	; 1aa34 <check_unknowns_list+0x124>
   1a920:	ldr	r0, [pc, r0]
   1a924:	ldr	r4, [r0]
   1a928:	cmp	r4, #0
   1a92c:	beq	1aa2c <check_unknowns_list+0x11c>
   1a930:	mov	r5, #1
   1a934:	mov	r6, #-2147483645	; 0x80000003
   1a938:	ldr	sl, [pc, #248]	; 1aa38 <check_unknowns_list+0x128>
   1a93c:	add	sl, pc, sl
   1a940:	ldr	r8, [pc, #244]	; 1aa3c <check_unknowns_list+0x12c>
   1a944:	ldr	r8, [pc, r8]
   1a948:	ldr	r7, [r4]
   1a94c:	ldr	r4, [r4, #8]
   1a950:	ldrb	r0, [r7, #64]	; 0x40
   1a954:	tst	r0, #34	; 0x22
   1a958:	beq	1a968 <check_unknowns_list+0x58>
   1a95c:	cmp	r4, #0
   1a960:	bne	1a948 <check_unknowns_list+0x38>
   1a964:	b	1aa2c <check_unknowns_list+0x11c>
   1a968:	ldr	r0, [r7, #436]	; 0x1b4
   1a96c:	cmp	r0, #0
   1a970:	ldrne	r0, [r0, #108]	; 0x6c
   1a974:	cmpne	r0, #0
   1a978:	bne	1a95c <check_unknowns_list+0x4c>
   1a97c:	ldrh	r0, [r7, #80]	; 0x50
   1a980:	sub	r0, r0, #1
   1a984:	mov	r9, #30
   1a988:	cmp	r0, #31
   1a98c:	bhi	1a998 <check_unknowns_list+0x88>
   1a990:	tst	r6, r5, lsl r0
   1a994:	ldrne	r9, [r8, #272]	; 0x110
   1a998:	bl	d07c <rb_current_time@plt>
   1a99c:	ldr	r1, [r7, #432]	; 0x1b0
   1a9a0:	ldr	r1, [r1, #48]	; 0x30
   1a9a4:	sub	r0, r0, r1
   1a9a8:	cmp	r0, r9
   1a9ac:	ble	1a95c <check_unknowns_list+0x4c>
   1a9b0:	ldrh	r0, [r7, #80]	; 0x50
   1a9b4:	sub	r0, r0, #1
   1a9b8:	cmp	r0, #31
   1a9bc:	bhi	1aa08 <check_unknowns_list+0xf8>
   1a9c0:	tst	r6, r5, lsl r0
   1a9c4:	beq	1aa08 <check_unknowns_list+0xf8>
   1a9c8:	mov	r0, r7
   1a9cc:	bl	dea4 <is_remote_connect@plt>
   1a9d0:	mov	r1, r0
   1a9d4:	add	r3, r7, #88	; 0x58
   1a9d8:	cmp	r0, #0
   1a9dc:	movwne	r1, #256	; 0x100
   1a9e0:	mov	r0, #256	; 0x100
   1a9e4:	mov	r2, sl
   1a9e8:	bl	d640 <sendto_realops_snomask@plt>
   1a9ec:	mov	r0, r7
   1a9f0:	mov	r1, #0
   1a9f4:	bl	e168 <log_client_name@plt>
   1a9f8:	mov	r2, r0
   1a9fc:	mov	r0, #5
   1aa00:	mov	r1, sl
   1aa04:	bl	e0b4 <ilog@plt>
   1aa08:	mov	r0, r7
   1aa0c:	mov	r1, r7
   1aa10:	ldr	r2, [pc, #40]	; 1aa40 <check_unknowns_list+0x130>
   1aa14:	ldr	r2, [pc, r2]
   1aa18:	ldr	r3, [pc, #36]	; 1aa44 <check_unknowns_list+0x134>
   1aa1c:	add	r3, pc, r3
   1aa20:	bl	e534 <exit_client@plt>
   1aa24:	cmp	r4, #0
   1aa28:	bne	1a948 <check_unknowns_list+0x38>
   1aa2c:	sub	sp, fp, #28
   1aa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa34:	.word	0x0003ff54
   1aa38:	.word	0x00026a77
   1aa3c:	.word	0x00040238
   1aa40:	.word	0x00040144
   1aa44:	.word	0x000269db

0001aa48 <release_client_state>:
   1aa48:	push	{r4, sl, fp, lr}
   1aa4c:	add	fp, sp, #8
   1aa50:	mov	r4, r0
   1aa54:	ldr	r0, [r0, #24]
   1aa58:	cmp	r0, #0
   1aa5c:	movne	r1, r4
   1aa60:	blne	ddf0 <free_user@plt>
   1aa64:	ldr	r0, [r4, #28]
   1aa68:	cmp	r0, #0
   1aa6c:	popeq	{r4, sl, fp, pc}
   1aa70:	ldr	r0, [r0]
   1aa74:	cmp	r0, #0
   1aa78:	movne	r1, r4
   1aa7c:	blne	ddf0 <free_user@plt>
   1aa80:	ldr	r0, [r4, #28]
   1aa84:	ldr	r0, [r0, #64]	; 0x40
   1aa88:	cmp	r0, #0
   1aa8c:	blne	183ec <rb_free>
   1aa90:	ldr	r0, [r4, #28]
   1aa94:	pop	{r4, sl, fp, lr}
   1aa98:	b	183ec <rb_free>

0001aa9c <free_client>:
   1aa9c:	push	{r4, sl, fp, lr}
   1aaa0:	add	fp, sp, #8
   1aaa4:	mov	r4, r0
   1aaa8:	bl	1aad4 <free_local_client>
   1aaac:	mov	r0, r4
   1aab0:	bl	de50 <free_pre_client@plt>
   1aab4:	ldr	r0, [r4, #444]	; 0x1bc
   1aab8:	bl	183ec <rb_free>
   1aabc:	ldr	r0, [pc, #12]	; 1aad0 <free_client+0x34>
   1aac0:	ldr	r0, [pc, r0]
   1aac4:	mov	r1, r4
   1aac8:	pop	{r4, sl, fp, lr}
   1aacc:	b	e708 <rb_bh_free@plt>
   1aad0:	.word	0x0004a634

0001aad4 <free_local_client>:
   1aad4:	push	{r4, r5, fp, lr}
   1aad8:	add	fp, sp, #8
   1aadc:	mov	r4, r0
   1aae0:	ldr	r0, [r0, #432]	; 0x1b0
   1aae4:	cmp	r0, #0
   1aae8:	popeq	{r4, r5, fp, pc}
   1aaec:	ldr	r0, [r0, #128]	; 0x80
   1aaf0:	cmp	r0, #0
   1aaf4:	beq	1ab24 <free_local_client+0x50>
   1aaf8:	ldr	r1, [r0, #12]
   1aafc:	subs	r1, r1, #1
   1ab00:	str	r1, [r0, #12]
   1ab04:	bne	1ab18 <free_local_client+0x44>
   1ab08:	ldr	r1, [r0, #16]
   1ab0c:	cmp	r1, #0
   1ab10:	bne	1ab18 <free_local_client+0x44>
   1ab14:	bl	d844 <free_listener@plt>
   1ab18:	ldr	r0, [r4, #432]	; 0x1b0
   1ab1c:	mov	r1, #0
   1ab20:	str	r1, [r0, #128]	; 0x80
   1ab24:	mov	r0, r4
   1ab28:	bl	d298 <client_release_connids@plt>
   1ab2c:	ldr	r0, [r4, #432]	; 0x1b0
   1ab30:	ldr	r0, [r0, #300]	; 0x12c
   1ab34:	cmp	r0, #0
   1ab38:	beq	1ab40 <free_local_client+0x6c>
   1ab3c:	bl	db5c <rb_close@plt>
   1ab40:	ldr	r0, [r4, #432]	; 0x1b0
   1ab44:	ldr	r5, [r0, #276]	; 0x114
   1ab48:	cmp	r5, #0
   1ab4c:	beq	1ab74 <free_local_client+0xa0>
   1ab50:	mov	r0, r5
   1ab54:	bl	dc94 <strlen@plt>
   1ab58:	mov	r2, r0
   1ab5c:	mov	r0, r5
   1ab60:	mov	r1, #0
   1ab64:	bl	df28 <memset@plt>
   1ab68:	ldr	r0, [r4, #432]	; 0x1b0
   1ab6c:	ldr	r0, [r0, #276]	; 0x114
   1ab70:	bl	183ec <rb_free>
   1ab74:	ldr	r0, [r4, #432]	; 0x1b0
   1ab78:	ldr	r0, [r0, #280]	; 0x118
   1ab7c:	bl	183ec <rb_free>
   1ab80:	ldr	r0, [r4, #432]	; 0x1b0
   1ab84:	ldr	r0, [r0, #284]	; 0x11c
   1ab88:	bl	183ec <rb_free>
   1ab8c:	ldr	r0, [r4, #432]	; 0x1b0
   1ab90:	ldr	r0, [r0, #288]	; 0x120
   1ab94:	bl	183ec <rb_free>
   1ab98:	ldr	r0, [r4, #432]	; 0x1b0
   1ab9c:	ldr	r0, [r0, #432]	; 0x1b0
   1aba0:	bl	183ec <rb_free>
   1aba4:	ldr	r0, [r4, #432]	; 0x1b0
   1aba8:	ldrb	r1, [r0, #452]	; 0x1c4
   1abac:	tst	r1, #1
   1abb0:	beq	1abbc <free_local_client+0xe8>
   1abb4:	ldr	r0, [r0, #436]	; 0x1b4
   1abb8:	bl	d208 <ssld_decrement_clicount@plt>
   1abbc:	ldr	r0, [r4, #432]	; 0x1b0
   1abc0:	ldr	r0, [r0, #292]	; 0x124
   1abc4:	bl	183ec <rb_free>
   1abc8:	ldr	r0, [pc, #92]	; 1ac2c <free_local_client+0x158>
   1abcc:	ldr	r0, [pc, r0]
   1abd0:	ldr	r1, [r0]
   1abd4:	ldr	r0, [r4, #432]	; 0x1b0
   1abd8:	ldr	r2, [r0, #296]	; 0x128
   1abdc:	and	r2, r1, r2
   1abe0:	cmp	r2, r1
   1abe4:	bne	1abf0 <free_local_client+0x11c>
   1abe8:	ldr	r0, [r0, #440]	; 0x1b8
   1abec:	bl	d208 <ssld_decrement_clicount@plt>
   1abf0:	ldr	r0, [r4, #432]	; 0x1b0
   1abf4:	ldr	r0, [r0, #456]	; 0x1c8
   1abf8:	bl	183ec <rb_free>
   1abfc:	ldr	r0, [r4, #432]	; 0x1b0
   1ac00:	ldr	r0, [r0, #444]	; 0x1bc
   1ac04:	cmp	r0, #0
   1ac08:	beq	1ac10 <free_local_client+0x13c>
   1ac0c:	bl	d454 <wsockd_decrement_clicount@plt>
   1ac10:	ldr	r1, [r4, #432]	; 0x1b0
   1ac14:	ldr	r0, [pc, #20]	; 1ac30 <free_local_client+0x15c>
   1ac18:	ldr	r0, [pc, r0]
   1ac1c:	bl	e708 <rb_bh_free@plt>
   1ac20:	mov	r0, #0
   1ac24:	str	r0, [r4, #432]	; 0x1b0
   1ac28:	pop	{r4, r5, fp, pc}
   1ac2c:	.word	0x0003fd18
   1ac30:	.word	0x0004a4e0

0001ac34 <rb_dlinkFind>:
   1ac34:	cmp	r0, #0
   1ac38:	beq	1ac74 <rb_dlinkFind+0x40>
   1ac3c:	mov	r1, r0
   1ac40:	ldr	r0, [pc, #84]	; 1ac9c <rb_dlinkFind+0x68>
   1ac44:	ldr	r0, [pc, r0]
   1ac48:	ldr	r2, [r0]
   1ac4c:	mov	r0, #0
   1ac50:	b	1ac58 <rb_dlinkFind+0x24>
   1ac54:	ldr	r2, [r2, #8]
   1ac58:	cmp	r2, #0
   1ac5c:	bxeq	lr
   1ac60:	ldr	r3, [r2]
   1ac64:	cmp	r3, r1
   1ac68:	bne	1ac54 <rb_dlinkFind+0x20>
   1ac6c:	mov	r0, r2
   1ac70:	bx	lr
   1ac74:	push	{fp, lr}
   1ac78:	mov	fp, sp
   1ac7c:	ldr	r0, [pc, #28]	; 1aca0 <rb_dlinkFind+0x6c>
   1ac80:	add	r0, pc, r0
   1ac84:	ldr	r1, [pc, #24]	; 1aca4 <rb_dlinkFind+0x70>
   1ac88:	add	r1, pc, r1
   1ac8c:	ldr	r3, [pc, #20]	; 1aca8 <rb_dlinkFind+0x74>
   1ac90:	add	r3, pc, r3
   1ac94:	movw	r2, #311	; 0x137
   1ac98:	bl	e7e0 <__assert_fail@plt>
   1ac9c:	.word	0x0003fe40
   1aca0:	.word	0x00025991
   1aca4:	.word	0x0002592e
   1aca8:	.word	0x0002684b

0001acac <exit_generic_client>:
   1acac:	push	{r4, r5, r6, sl, fp, lr}
   1acb0:	add	fp, sp, #16
   1acb4:	sub	sp, sp, #16
   1acb8:	mov	r6, r1
   1acbc:	mov	r4, r0
   1acc0:	ldrb	r0, [r0, #57]	; 0x39
   1acc4:	tst	r0, #16
   1acc8:	beq	1acdc <exit_generic_client+0x30>
   1accc:	ldr	r1, [pc, #208]	; 1ada4 <exit_generic_client+0xf8>
   1acd0:	ldr	r1, [pc, r1]
   1acd4:	mov	r0, r4
   1acd8:	bl	1820c <rb_dlinkFindDestroy>
   1acdc:	add	r0, r4, #163	; 0xa3
   1ace0:	add	r1, r4, #152	; 0x98
   1ace4:	add	r5, r4, #88	; 0x58
   1ace8:	str	r5, [sp]
   1acec:	str	r1, [sp, #4]
   1acf0:	str	r0, [sp, #8]
   1acf4:	str	r6, [sp, #12]
   1acf8:	ldr	r3, [pc, #168]	; 1ada8 <exit_generic_client+0xfc>
   1acfc:	add	r3, pc, r3
   1ad00:	mov	r0, r4
   1ad04:	mov	r1, #0
   1ad08:	mov	r2, #0
   1ad0c:	bl	de2c <sendto_common_channels_local@plt>
   1ad10:	mov	r0, r4
   1ad14:	bl	d460 <remove_user_from_channels@plt>
   1ad18:	ldr	r0, [r4, #24]
   1ad1c:	ldr	r6, [r0, #12]
   1ad20:	cmp	r6, #0
   1ad24:	beq	1ad40 <exit_generic_client+0x94>
   1ad28:	ldr	r0, [r6]
   1ad2c:	ldr	r6, [r6, #8]
   1ad30:	mov	r1, r4
   1ad34:	bl	d46c <del_invite@plt>
   1ad38:	cmp	r6, #0
   1ad3c:	bne	1ad28 <exit_generic_client+0x7c>
   1ad40:	mov	r0, r4
   1ad44:	bl	dcc4 <del_all_accepts@plt>
   1ad48:	mov	r0, r4
   1ad4c:	mov	r1, #0
   1ad50:	bl	e3cc <whowas_add_history@plt>
   1ad54:	mov	r0, r4
   1ad58:	bl	e4e0 <whowas_off_history@plt>
   1ad5c:	mov	r0, r4
   1ad60:	bl	e150 <monitor_signoff@plt>
   1ad64:	mov	r0, r4
   1ad68:	ldrb	r1, [r0, #396]!	; 0x18c
   1ad6c:	cmp	r1, #0
   1ad70:	beq	1ad7c <exit_generic_client+0xd0>
   1ad74:	mov	r1, r4
   1ad78:	bl	da9c <del_from_id_hash@plt>
   1ad7c:	add	r0, r4, #227	; 0xe3
   1ad80:	mov	r1, r4
   1ad84:	bl	d43c <del_from_hostname_hash@plt>
   1ad88:	mov	r0, r5
   1ad8c:	mov	r1, r4
   1ad90:	bl	db20 <del_from_client_hash@plt>
   1ad94:	mov	r0, r4
   1ad98:	sub	sp, fp, #16
   1ad9c:	pop	{r4, r5, r6, sl, fp, lr}
   1ada0:	b	1adac <remove_client_from_list>
   1ada4:	.word	0x0003fdd0
   1ada8:	.word	0x000268b5

0001adac <remove_client_from_list>:
   1adac:	push	{r4, sl, fp, lr}
   1adb0:	add	fp, sp, #8
   1adb4:	cmp	r0, #0
   1adb8:	popeq	{r4, sl, fp, pc}
   1adbc:	mov	r4, r0
   1adc0:	ldr	r0, [r0, #4]
   1adc4:	cmp	r0, #0
   1adc8:	bne	1add8 <remove_client_from_list+0x2c>
   1adcc:	ldr	r0, [r4, #8]
   1add0:	cmp	r0, #0
   1add4:	beq	1adf4 <remove_client_from_list+0x48>
   1add8:	ldr	r1, [pc, #24]	; 1adf8 <remove_client_from_list+0x4c>
   1addc:	ldr	r1, [pc, r1]
   1ade0:	mov	r0, r4
   1ade4:	bl	18f58 <rb_dlinkDelete>
   1ade8:	mov	r0, r4
   1adec:	pop	{r4, sl, fp, lr}
   1adf0:	b	1adfc <update_client_exit_stats>
   1adf4:	pop	{r4, sl, fp, pc}
   1adf8:	.word	0x0003fcb4

0001adfc <update_client_exit_stats>:
   1adfc:	push	{r4, sl, fp, lr}
   1ae00:	add	fp, sp, #8
   1ae04:	sub	sp, sp, #8
   1ae08:	mov	r4, r0
   1ae0c:	ldrh	r0, [r0, #80]	; 0x50
   1ae10:	cmp	r0, #64	; 0x40
   1ae14:	beq	1ae68 <update_client_exit_stats+0x6c>
   1ae18:	cmp	r0, #32
   1ae1c:	bne	1aea0 <update_client_exit_stats+0xa4>
   1ae20:	ldr	r0, [r4, #32]
   1ae24:	add	r0, r0, #88	; 0x58
   1ae28:	str	r0, [sp]
   1ae2c:	add	r3, r4, #88	; 0x58
   1ae30:	ldr	r2, [pc, #168]	; 1aee0 <update_client_exit_stats+0xe4>
   1ae34:	add	r2, pc, r2
   1ae38:	mov	r0, #1024	; 0x400
   1ae3c:	mov	r1, #0
   1ae40:	bl	d640 <sendto_realops_snomask@plt>
   1ae44:	ldrb	r0, [r4, #65]	; 0x41
   1ae48:	tst	r0, #16
   1ae4c:	beq	1aea0 <update_client_exit_stats+0xa4>
   1ae50:	ldr	r0, [pc, #140]	; 1aee4 <update_client_exit_stats+0xe8>
   1ae54:	ldr	r0, [pc, r0]
   1ae58:	ldr	r1, [r0]
   1ae5c:	sub	r1, r1, #1
   1ae60:	str	r1, [r0]
   1ae64:	b	1aea0 <update_client_exit_stats+0xa4>
   1ae68:	ldr	r0, [pc, #120]	; 1aee8 <update_client_exit_stats+0xec>
   1ae6c:	ldr	r0, [pc, r0]
   1ae70:	ldr	r1, [r0, #4]
   1ae74:	sub	r1, r1, #1
   1ae78:	str	r1, [r0, #4]
   1ae7c:	ldr	r1, [r4, #56]	; 0x38
   1ae80:	tst	r1, #4096	; 0x1000
   1ae84:	ldrne	r2, [r0]
   1ae88:	subne	r2, r2, #1
   1ae8c:	strne	r2, [r0]
   1ae90:	tst	r1, #8
   1ae94:	ldrne	r1, [r0, #8]
   1ae98:	subne	r1, r1, #1
   1ae9c:	strne	r1, [r0, #8]
   1aea0:	ldr	r0, [pc, #68]	; 1aeec <update_client_exit_stats+0xf0>
   1aea4:	ldr	r0, [pc, r0]
   1aea8:	ldr	r0, [r0]
   1aeac:	cmp	r0, #0
   1aeb0:	beq	1aed8 <update_client_exit_stats+0xdc>
   1aeb4:	ldr	r0, [pc, #52]	; 1aef0 <update_client_exit_stats+0xf4>
   1aeb8:	ldr	r0, [pc, r0]
   1aebc:	ldr	r0, [r0]
   1aec0:	cmp	r0, #0
   1aec4:	bne	1aed8 <update_client_exit_stats+0xdc>
   1aec8:	mov	r0, #0
   1aecc:	sub	sp, fp, #8
   1aed0:	pop	{r4, sl, fp, lr}
   1aed4:	b	e5f4 <check_splitmode@plt>
   1aed8:	sub	sp, fp, #8
   1aedc:	pop	{r4, sl, fp, pc}
   1aee0:	.word	0x00026790
   1aee4:	.word	0x0003fcc8
   1aee8:	.word	0x0003fab4
   1aeec:	.word	0x0003fb50
   1aef0:	.word	0x0003fca4

0001aef4 <remove_dependents>:
   1aef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aef8:	add	fp, sp, #28
   1aefc:	push	{r3}		; (str r3, [sp, #-4]!)
   1af00:	mov	r5, r1
   1af04:	mov	r7, r0
   1af08:	ldr	r0, [pc, #172]	; 1afbc <remove_dependents+0xc8>
   1af0c:	ldr	r0, [pc, r0]
   1af10:	ldr	r4, [r0]
   1af14:	cmp	r4, #0
   1af18:	beq	1afa8 <remove_dependents+0xb4>
   1af1c:	mov	sl, r2
   1af20:	add	r6, r5, #88	; 0x58
   1af24:	add	r8, r5, #396	; 0x18c
   1af28:	ldr	r9, [pc, #144]	; 1afc0 <remove_dependents+0xcc>
   1af2c:	add	r9, pc, r9
   1af30:	ldr	r0, [r4]
   1af34:	ldr	r4, [r4, #8]
   1af38:	ldrh	r1, [r0, #80]	; 0x50
   1af3c:	cmp	r1, #4
   1af40:	beq	1af54 <remove_dependents+0x60>
   1af44:	cmp	r0, r7
   1af48:	ldrne	r1, [r5, #36]	; 0x24
   1af4c:	cmpne	r0, r1
   1af50:	bne	1af60 <remove_dependents+0x6c>
   1af54:	cmp	r4, #0
   1af58:	bne	1af30 <remove_dependents+0x3c>
   1af5c:	b	1afa8 <remove_dependents+0xb4>
   1af60:	ldr	r1, [r0, #36]	; 0x24
   1af64:	ldrh	r2, [r1, #80]	; 0x50
   1af68:	cmp	r2, #32
   1af6c:	mov	r2, r6
   1af70:	bne	1af94 <remove_dependents+0xa0>
   1af74:	ldrb	r1, [r1, #396]	; 0x18c
   1af78:	cmp	r1, #0
   1af7c:	mov	r2, r6
   1af80:	beq	1af94 <remove_dependents+0xa0>
   1af84:	ldrb	r1, [r8]
   1af88:	cmp	r1, #0
   1af8c:	mov	r2, r8
   1af90:	moveq	r2, r6
   1af94:	mov	r1, r9
   1af98:	mov	r3, sl
   1af9c:	bl	d1e4 <sendto_one@plt>
   1afa0:	cmp	r4, #0
   1afa4:	bne	1af30 <remove_dependents+0x3c>
   1afa8:	mov	r0, r5
   1afac:	ldr	r1, [sp]
   1afb0:	sub	sp, fp, #28
   1afb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afb8:	b	1afc4 <recurse_remove_clients>
   1afbc:	.word	0x0003fac4
   1afc0:	.word	0x00026725

0001afc4 <recurse_remove_clients>:
   1afc4:	push	{r4, r5, r6, r7, fp, lr}
   1afc8:	add	fp, sp, #16
   1afcc:	mov	r5, r0
   1afd0:	ldrh	r0, [r0, #80]	; 0x50
   1afd4:	cmp	r0, #4
   1afd8:	ldrne	r0, [r5, #28]
   1afdc:	cmpne	r0, #0
   1afe0:	bne	1afe8 <recurse_remove_clients+0x24>
   1afe4:	pop	{r4, r5, r6, r7, fp, pc}
   1afe8:	mov	r4, r1
   1afec:	ldr	r7, [r0, #48]	; 0x30
   1aff0:	ldr	r0, [pc, #188]	; 1b0b4 <recurse_remove_clients+0xf0>
   1aff4:	ldr	r0, [pc, r0]
   1aff8:	ldr	r0, [r0, #136]	; 0x88
   1affc:	cmp	r0, #1
   1b000:	bge	1b018 <recurse_remove_clients+0x54>
   1b004:	b	1b058 <recurse_remove_clients+0x94>
   1b008:	mov	r0, #0
   1b00c:	mov	r1, r6
   1b010:	mov	r2, r4
   1b014:	bl	199fc <exit_remote_client>
   1b018:	cmp	r7, #0
   1b01c:	beq	1b080 <recurse_remove_clients+0xbc>
   1b020:	ldr	r6, [r7]
   1b024:	ldr	r7, [r7, #8]
   1b028:	ldr	r0, [r6, #64]	; 0x40
   1b02c:	orr	r0, r0, #4
   1b030:	str	r0, [r6, #64]	; 0x40
   1b034:	add	r0, r6, #88	; 0x58
   1b038:	bl	d868 <add_nd_entry@plt>
   1b03c:	ldrb	r0, [r6, #64]	; 0x40
   1b040:	tst	r0, #34	; 0x22
   1b044:	bne	1b018 <recurse_remove_clients+0x54>
   1b048:	b	1b008 <recurse_remove_clients+0x44>
   1b04c:	mov	r0, #0
   1b050:	mov	r2, r4
   1b054:	bl	199fc <exit_remote_client>
   1b058:	cmp	r7, #0
   1b05c:	beq	1b080 <recurse_remove_clients+0xbc>
   1b060:	ldr	r1, [r7]
   1b064:	ldr	r7, [r7, #8]
   1b068:	ldr	r0, [r1, #64]	; 0x40
   1b06c:	orr	r2, r0, #4
   1b070:	str	r2, [r1, #64]	; 0x40
   1b074:	tst	r0, #34	; 0x22
   1b078:	bne	1b058 <recurse_remove_clients+0x94>
   1b07c:	b	1b04c <recurse_remove_clients+0x88>
   1b080:	ldr	r0, [r5, #28]
   1b084:	ldr	r6, [r0, #36]	; 0x24
   1b088:	b	1b0a8 <recurse_remove_clients+0xe4>
   1b08c:	ldr	r5, [r6]
   1b090:	ldr	r6, [r6, #8]
   1b094:	mov	r0, r5
   1b098:	mov	r1, r4
   1b09c:	bl	1afc4 <recurse_remove_clients>
   1b0a0:	mov	r0, r5
   1b0a4:	bl	1b0b8 <qs_server>
   1b0a8:	cmp	r6, #0
   1b0ac:	popeq	{r4, r5, r6, r7, fp, pc}
   1b0b0:	b	1b08c <recurse_remove_clients+0xc8>
   1b0b4:	.word	0x0003fb88

0001b0b8 <qs_server>:
   1b0b8:	push	{r4, sl, fp, lr}
   1b0bc:	add	fp, sp, #8
   1b0c0:	mov	r4, r0
   1b0c4:	ldr	r0, [r0, #32]
   1b0c8:	cmp	r0, #0
   1b0cc:	ldrne	r1, [r0, #28]
   1b0d0:	cmpne	r1, #0
   1b0d4:	beq	1b0e4 <qs_server+0x2c>
   1b0d8:	add	r0, r4, #12
   1b0dc:	add	r1, r1, #36	; 0x24
   1b0e0:	bl	18f58 <rb_dlinkDelete>
   1b0e4:	ldr	r1, [pc, #104]	; 1b154 <qs_server+0x9c>
   1b0e8:	ldr	r1, [pc, r1]
   1b0ec:	mov	r0, r4
   1b0f0:	bl	1820c <rb_dlinkFindDestroy>
   1b0f4:	mov	r0, r4
   1b0f8:	ldrb	r1, [r0, #396]!	; 0x18c
   1b0fc:	cmp	r1, #0
   1b100:	beq	1b10c <qs_server+0x54>
   1b104:	mov	r1, r4
   1b108:	bl	da9c <del_from_id_hash@plt>
   1b10c:	add	r0, r4, #88	; 0x58
   1b110:	mov	r1, r4
   1b114:	bl	db20 <del_from_client_hash@plt>
   1b118:	mov	r0, r4
   1b11c:	bl	1adac <remove_client_from_list>
   1b120:	ldr	r0, [r4, #28]
   1b124:	ldr	r0, [r0, #68]	; 0x44
   1b128:	bl	db68 <scache_split@plt>
   1b12c:	ldr	r0, [r4, #64]	; 0x40
   1b130:	orr	r0, r0, #2
   1b134:	str	r0, [r4, #64]	; 0x40
   1b138:	bl	dc64 <rb_make_rb_dlink_node@plt>
   1b13c:	mov	r1, r0
   1b140:	ldr	r2, [pc, #16]	; 1b158 <qs_server+0xa0>
   1b144:	ldr	r2, [pc, r2]
   1b148:	mov	r0, r4
   1b14c:	pop	{r4, sl, fp, lr}
   1b150:	b	180d8 <rb_dlinkAdd>
   1b154:	.word	0x0003f790
   1b158:	.word	0x0003f940

0001b15c <cancel_lookup>:
   1b15c:	push	{fp, lr}
   1b160:	mov	fp, sp
   1b164:	mov	r1, r0
   1b168:	ldr	r0, [pc, #24]	; 1b188 <cancel_lookup+0x2c>
   1b16c:	ldr	r0, [pc, r0]
   1b170:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b174:	cmp	r0, #0
   1b178:	movne	r1, #0
   1b17c:	strne	r1, [r0]
   1b180:	strne	r1, [r0, #4]
   1b184:	pop	{fp, pc}
   1b188:	.word	0x0004a5ec

0001b18c <cancel_dns_stats>:
   1b18c:	push	{fp, lr}
   1b190:	mov	fp, sp
   1b194:	mov	r1, r0
   1b198:	ldr	r0, [pc, #24]	; 1b1b8 <cancel_dns_stats+0x2c>
   1b19c:	ldr	r0, [pc, r0]
   1b1a0:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b1a4:	cmp	r0, #0
   1b1a8:	movne	r1, #0
   1b1ac:	strne	r1, [r0]
   1b1b0:	strne	r1, [r0, #4]
   1b1b4:	pop	{fp, pc}
   1b1b8:	.word	0x0004a5c0

0001b1bc <lookup_hostname>:
   1b1bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b1c0:	add	fp, sp, #24
   1b1c4:	mov	r9, r3
   1b1c8:	mov	r5, r2
   1b1cc:	mov	r6, r1
   1b1d0:	mov	r8, r0
   1b1d4:	bl	1b230 <rb_malloc>
   1b1d8:	mov	r7, r0
   1b1dc:	ldr	r0, [pc, #68]	; 1b228 <lookup_hostname+0x6c>
   1b1e0:	add	r0, pc, r0
   1b1e4:	bl	1b250 <assign_id>
   1b1e8:	mov	r4, r0
   1b1ec:	bl	d724 <check_authd@plt>
   1b1f0:	ldr	r0, [pc, #52]	; 1b22c <lookup_hostname+0x70>
   1b1f4:	ldr	r0, [pc, r0]
   1b1f8:	mov	r1, r4
   1b1fc:	mov	r2, r7
   1b200:	bl	d70c <rb_dictionary_add@plt>
   1b204:	stm	r7, {r5, r9}
   1b208:	mov	r1, #52	; 0x34
   1b20c:	cmp	r6, #10
   1b210:	movweq	r1, #54	; 0x36
   1b214:	mov	r0, r4
   1b218:	mov	r2, r8
   1b21c:	bl	1b268 <submit_dns>
   1b220:	mov	r0, r4
   1b224:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b228:	.word	0x0004a580
   1b22c:	.word	0x0004a564

0001b230 <rb_malloc>:
   1b230:	push	{fp, lr}
   1b234:	mov	fp, sp
   1b238:	mov	r0, #1
   1b23c:	mov	r1, #8
   1b240:	bl	cfa4 <calloc@plt>
   1b244:	cmp	r0, #0
   1b248:	popne	{fp, pc}
   1b24c:	bl	d448 <rb_outofmemory@plt>

0001b250 <assign_id>:
   1b250:	ldr	r1, [r0]
   1b254:	adds	r1, r1, #1
   1b258:	movweq	r1, #1
   1b25c:	str	r1, [r0]
   1b260:	mov	r0, r1
   1b264:	bx	lr

0001b268 <submit_dns>:
   1b268:	mov	r3, r0
   1b26c:	ldr	r0, [pc, #68]	; 1b2b8 <submit_dns+0x50>
   1b270:	ldr	r0, [pc, r0]
   1b274:	ldr	r0, [r0]
   1b278:	cmp	r0, #0
   1b27c:	beq	1b2b0 <submit_dns+0x48>
   1b280:	push	{fp, lr}
   1b284:	mov	fp, sp
   1b288:	sub	sp, sp, #8
   1b28c:	mov	ip, r1
   1b290:	str	r2, [sp]
   1b294:	ldr	r1, [pc, #32]	; 1b2bc <submit_dns+0x54>
   1b298:	add	r1, pc, r1
   1b29c:	mov	r2, r3
   1b2a0:	mov	r3, ip
   1b2a4:	bl	d148 <rb_helper_write@plt>
   1b2a8:	mov	sp, fp
   1b2ac:	pop	{fp, pc}
   1b2b0:	mov	r0, r3
   1b2b4:	b	1b86c <handle_dns_failure>
   1b2b8:	.word	0x0003f798
   1b2bc:	.word	0x0002644a

0001b2c0 <lookup_ip>:
   1b2c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b2c4:	add	fp, sp, #24
   1b2c8:	mov	r9, r3
   1b2cc:	mov	r5, r2
   1b2d0:	mov	r6, r1
   1b2d4:	mov	r8, r0
   1b2d8:	bl	1b230 <rb_malloc>
   1b2dc:	mov	r7, r0
   1b2e0:	ldr	r0, [pc, #68]	; 1b32c <lookup_ip+0x6c>
   1b2e4:	add	r0, pc, r0
   1b2e8:	bl	1b250 <assign_id>
   1b2ec:	mov	r4, r0
   1b2f0:	bl	d724 <check_authd@plt>
   1b2f4:	ldr	r0, [pc, #52]	; 1b330 <lookup_ip+0x70>
   1b2f8:	ldr	r0, [pc, r0]
   1b2fc:	mov	r1, r4
   1b300:	mov	r2, r7
   1b304:	bl	d70c <rb_dictionary_add@plt>
   1b308:	stm	r7, {r5, r9}
   1b30c:	mov	r1, #82	; 0x52
   1b310:	cmp	r6, #10
   1b314:	movweq	r1, #83	; 0x53
   1b318:	mov	r0, r4
   1b31c:	mov	r2, r8
   1b320:	bl	1b268 <submit_dns>
   1b324:	mov	r0, r4
   1b328:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b32c:	.word	0x0004a47c
   1b330:	.word	0x0004a460

0001b334 <dns_results_callback>:
   1b334:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b338:	add	fp, sp, #24
   1b33c:	mov	r8, r3
   1b340:	mov	r4, r2
   1b344:	mov	r9, r1
   1b348:	mov	r1, #0
   1b34c:	mov	r2, #16
   1b350:	bl	d118 <strtol@plt>
   1b354:	mov	r5, r0
   1b358:	ldr	r0, [pc, #124]	; 1b3dc <dns_results_callback+0xa8>
   1b35c:	ldr	r0, [pc, r0]
   1b360:	mov	r1, r5
   1b364:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b368:	cmp	r0, #0
   1b36c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b370:	mov	r7, r0
   1b374:	ldr	r6, [r0]
   1b378:	cmp	r6, #0
   1b37c:	beq	1b3d0 <dns_results_callback+0x9c>
   1b380:	ldrb	r0, [r4]
   1b384:	mov	r2, #2
   1b388:	cmp	r0, #83	; 0x53
   1b38c:	movweq	r2, #10
   1b390:	cmp	r0, #54	; 0x36
   1b394:	movweq	r2, #10
   1b398:	ldr	r3, [r7, #4]
   1b39c:	ldrb	r0, [r9]
   1b3a0:	sub	r0, r0, #79	; 0x4f
   1b3a4:	clz	r0, r0
   1b3a8:	lsr	r1, r0, #5
   1b3ac:	mov	r0, r8
   1b3b0:	blx	r6
   1b3b4:	mov	r0, r7
   1b3b8:	bl	1b3e4 <rb_free>
   1b3bc:	ldr	r0, [pc, #28]	; 1b3e0 <dns_results_callback+0xac>
   1b3c0:	ldr	r0, [pc, r0]
   1b3c4:	mov	r1, r5
   1b3c8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b3cc:	b	d838 <rb_dictionary_delete@plt>
   1b3d0:	mov	r0, #0
   1b3d4:	str	r0, [r7, #4]
   1b3d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b3dc:	.word	0x0004a3fc
   1b3e0:	.word	0x0004a398

0001b3e4 <rb_free>:
   1b3e4:	cmp	r0, #0
   1b3e8:	bxeq	lr
   1b3ec:	b	d328 <free@plt>

0001b3f0 <dns_stats_results_callback>:
   1b3f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b3f4:	add	fp, sp, #24
   1b3f8:	mov	r8, r3
   1b3fc:	mov	r9, r2
   1b400:	mov	r4, r1
   1b404:	mov	r1, #0
   1b408:	mov	r2, #16
   1b40c:	bl	d118 <strtol@plt>
   1b410:	mov	r5, r0
   1b414:	ldr	r0, [pc, #120]	; 1b494 <dns_stats_results_callback+0xa4>
   1b418:	ldr	r0, [pc, r0]
   1b41c:	mov	r1, r5
   1b420:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b424:	cmp	r0, #0
   1b428:	beq	1b460 <dns_stats_results_callback+0x70>
   1b42c:	mov	r7, r0
   1b430:	ldr	r6, [r0]
   1b434:	cmp	r6, #0
   1b438:	beq	1b458 <dns_stats_results_callback+0x68>
   1b43c:	ldrb	r0, [r4]
   1b440:	cmp	r0, #89	; 0x59
   1b444:	beq	1b464 <dns_stats_results_callback+0x74>
   1b448:	cmp	r0, #88	; 0x58
   1b44c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b450:	mov	r2, #1
   1b454:	b	1b468 <dns_stats_results_callback+0x78>
   1b458:	mov	r0, #0
   1b45c:	str	r0, [r7, #4]
   1b460:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b464:	mov	r2, #0
   1b468:	ldr	r3, [r7, #4]
   1b46c:	mov	r0, r9
   1b470:	mov	r1, r8
   1b474:	blx	r6
   1b478:	mov	r0, r7
   1b47c:	bl	1b3e4 <rb_free>
   1b480:	ldr	r0, [pc, #16]	; 1b498 <dns_stats_results_callback+0xa8>
   1b484:	ldr	r0, [pc, r0]
   1b488:	mov	r1, r5
   1b48c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b490:	b	d838 <rb_dictionary_delete@plt>
   1b494:	.word	0x0004a344
   1b498:	.word	0x0004a2d8

0001b49c <init_dns>:
   1b49c:	push	{r4, sl, fp, lr}
   1b4a0:	add	fp, sp, #8
   1b4a4:	ldr	r0, [pc, #64]	; 1b4ec <init_dns+0x50>
   1b4a8:	add	r0, pc, r0
   1b4ac:	ldr	r4, [pc, #60]	; 1b4f0 <init_dns+0x54>
   1b4b0:	add	r4, pc, r4
   1b4b4:	mov	r1, r4
   1b4b8:	bl	dfb8 <rb_dictionary_create@plt>
   1b4bc:	ldr	r1, [pc, #48]	; 1b4f4 <init_dns+0x58>
   1b4c0:	add	r1, pc, r1
   1b4c4:	str	r0, [r1]
   1b4c8:	ldr	r0, [pc, #40]	; 1b4f8 <init_dns+0x5c>
   1b4cc:	add	r0, pc, r0
   1b4d0:	mov	r1, r4
   1b4d4:	bl	dfb8 <rb_dictionary_create@plt>
   1b4d8:	ldr	r1, [pc, #28]	; 1b4fc <init_dns+0x60>
   1b4dc:	add	r1, pc, r1
   1b4e0:	str	r0, [r1]
   1b4e4:	pop	{r4, sl, fp, lr}
   1b4e8:	b	1b508 <get_nameservers>
   1b4ec:	.word	0x000261e6
   1b4f0:	.word	0x00000048
   1b4f4:	.word	0x0004a298
   1b4f8:	.word	0x000261ce
   1b4fc:	.word	0x0004a280

0001b500 <rb_uint32cmp>:
   1b500:	sub	r0, r1, r0
   1b504:	bx	lr

0001b508 <get_nameservers>:
   1b508:	push	{r4, r5, fp, lr}
   1b50c:	add	fp, sp, #8
   1b510:	bl	1b230 <rb_malloc>
   1b514:	mov	r4, r0
   1b518:	ldr	r0, [pc, #60]	; 1b55c <get_nameservers+0x54>
   1b51c:	add	r0, pc, r0
   1b520:	bl	1b250 <assign_id>
   1b524:	mov	r5, r0
   1b528:	bl	d724 <check_authd@plt>
   1b52c:	ldr	r0, [pc, #44]	; 1b560 <get_nameservers+0x58>
   1b530:	ldr	r0, [pc, r0]
   1b534:	mov	r1, r5
   1b538:	mov	r2, r4
   1b53c:	bl	d70c <rb_dictionary_add@plt>
   1b540:	ldr	r0, [pc, #28]	; 1b564 <get_nameservers+0x5c>
   1b544:	add	r0, pc, r0
   1b548:	mov	r1, #0
   1b54c:	stm	r4, {r0, r1}
   1b550:	mov	r0, r5
   1b554:	pop	{r4, r5, fp, lr}
   1b558:	b	1b658 <submit_dns_stat>
   1b55c:	.word	0x0004a248
   1b560:	.word	0x0004a22c
   1b564:	.word	0x0000001c

0001b568 <stats_results_callback>:
   1b568:	push	{r4, r5, r6, r7, fp, lr}
   1b56c:	add	fp, sp, #16
   1b570:	mov	r4, r1
   1b574:	mov	r5, r0
   1b578:	cmp	r2, #0
   1b57c:	beq	1b594 <stats_results_callback+0x2c>
   1b580:	cmp	r5, #0
   1b584:	beq	1b600 <stats_results_callback+0x98>
   1b588:	add	r0, r4, r5, lsl #2
   1b58c:	ldr	r1, [r0, #-4]
   1b590:	b	1b608 <stats_results_callback+0xa0>
   1b594:	ldr	r0, [pc, #124]	; 1b618 <stats_results_callback+0xb0>
   1b598:	ldr	r0, [pc, r0]
   1b59c:	ldr	r6, [r0]
   1b5a0:	cmp	r6, #0
   1b5a4:	beq	1b5d0 <stats_results_callback+0x68>
   1b5a8:	ldr	r0, [r6]
   1b5ac:	ldr	r7, [r6, #8]
   1b5b0:	bl	1b3e4 <rb_free>
   1b5b4:	mov	r0, r6
   1b5b8:	bl	1b6e4 <rb_dlinkDelete>
   1b5bc:	mov	r0, r6
   1b5c0:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   1b5c4:	cmp	r7, #0
   1b5c8:	mov	r6, r7
   1b5cc:	bne	1b5a8 <stats_results_callback+0x40>
   1b5d0:	cmp	r5, #1
   1b5d4:	poplt	{r4, r5, r6, r7, fp, pc}
   1b5d8:	ldr	r0, [r4], #4
   1b5dc:	bl	1b834 <rb_strdup>
   1b5e0:	mov	r6, r0
   1b5e4:	bl	dc64 <rb_make_rb_dlink_node@plt>
   1b5e8:	mov	r1, r0
   1b5ec:	mov	r0, r6
   1b5f0:	bl	1b770 <rb_dlinkAdd>
   1b5f4:	subs	r5, r5, #1
   1b5f8:	bne	1b5d8 <stats_results_callback+0x70>
   1b5fc:	pop	{r4, r5, r6, r7, fp, pc}
   1b600:	ldr	r1, [pc, #20]	; 1b61c <stats_results_callback+0xb4>
   1b604:	add	r1, pc, r1
   1b608:	ldr	r0, [pc, #16]	; 1b620 <stats_results_callback+0xb8>
   1b60c:	add	r0, pc, r0
   1b610:	pop	{r4, r5, r6, r7, fp, lr}
   1b614:	b	d3ac <iwarn@plt>
   1b618:	.word	0x0003f454
   1b61c:	.word	0x000260b2
   1b620:	.word	0x000260b8

0001b624 <reload_nameservers>:
   1b624:	push	{fp, lr}
   1b628:	mov	fp, sp
   1b62c:	bl	d724 <check_authd@plt>
   1b630:	ldr	r0, [pc, #24]	; 1b650 <reload_nameservers+0x2c>
   1b634:	ldr	r0, [pc, r0]
   1b638:	ldr	r0, [r0]
   1b63c:	ldr	r1, [pc, #16]	; 1b654 <reload_nameservers+0x30>
   1b640:	add	r1, pc, r1
   1b644:	bl	d148 <rb_helper_write@plt>
   1b648:	pop	{fp, lr}
   1b64c:	b	1b508 <get_nameservers>
   1b650:	.word	0x0003f3d4
   1b654:	.word	0x0002606b

0001b658 <submit_dns_stat>:
   1b658:	mov	r2, r0
   1b65c:	ldr	r0, [pc, #32]	; 1b684 <submit_dns_stat+0x2c>
   1b660:	ldr	r0, [pc, r0]
   1b664:	ldr	r0, [r0]
   1b668:	cmp	r0, #0
   1b66c:	beq	1b67c <submit_dns_stat+0x24>
   1b670:	ldr	r1, [pc, #16]	; 1b688 <submit_dns_stat+0x30>
   1b674:	add	r1, pc, r1
   1b678:	b	d148 <rb_helper_write@plt>
   1b67c:	mov	r0, r2
   1b680:	b	1b68c <handle_dns_stat_failure>
   1b684:	.word	0x0003f3a8
   1b688:	.word	0x0002603b

0001b68c <handle_dns_stat_failure>:
   1b68c:	push	{r4, r5, fp, lr}
   1b690:	add	fp, sp, #8
   1b694:	mov	r1, r0
   1b698:	ldr	r0, [pc, #64]	; 1b6e0 <handle_dns_stat_failure+0x54>
   1b69c:	ldr	r0, [pc, r0]
   1b6a0:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b6a4:	cmp	r0, #0
   1b6a8:	beq	1b6dc <handle_dns_stat_failure+0x50>
   1b6ac:	mov	r4, r0
   1b6b0:	ldr	ip, [r0]
   1b6b4:	cmp	ip, #0
   1b6b8:	popeq	{r4, r5, fp, pc}
   1b6bc:	ldr	r3, [r4, #4]
   1b6c0:	mov	r5, #0
   1b6c4:	mov	r0, #1
   1b6c8:	mov	r1, #0
   1b6cc:	mov	r2, #2
   1b6d0:	blx	ip
   1b6d4:	str	r5, [r4]
   1b6d8:	str	r5, [r4, #4]
   1b6dc:	pop	{r4, r5, fp, pc}
   1b6e0:	.word	0x0004a0c0

0001b6e4 <rb_dlinkDelete>:
   1b6e4:	cmp	r0, #0
   1b6e8:	beq	1b738 <rb_dlinkDelete+0x54>
   1b6ec:	ldr	ip, [pc, #108]	; 1b760 <rb_dlinkDelete+0x7c>
   1b6f0:	ldr	ip, [pc, ip]
   1b6f4:	ldmib	r0, {r2, r3}
   1b6f8:	add	r1, r3, #4
   1b6fc:	cmp	r3, #0
   1b700:	addeq	r1, ip, #4
   1b704:	str	r2, [r1]
   1b708:	ldmib	r0, {r1, r2}
   1b70c:	cmp	r1, #0
   1b710:	mov	r3, ip
   1b714:	addne	r3, r1, #8
   1b718:	str	r2, [r3]
   1b71c:	mov	r1, #0
   1b720:	str	r1, [r0, #4]
   1b724:	str	r1, [r0, #8]
   1b728:	ldr	r0, [ip, #8]
   1b72c:	sub	r0, r0, #1
   1b730:	str	r0, [ip, #8]
   1b734:	bx	lr
   1b738:	push	{fp, lr}
   1b73c:	mov	fp, sp
   1b740:	ldr	r0, [pc, #28]	; 1b764 <rb_dlinkDelete+0x80>
   1b744:	add	r0, pc, r0
   1b748:	ldr	r1, [pc, #24]	; 1b768 <rb_dlinkDelete+0x84>
   1b74c:	add	r1, pc, r1
   1b750:	ldr	r3, [pc, #20]	; 1b76c <rb_dlinkDelete+0x88>
   1b754:	add	r3, pc, r3
   1b758:	mov	r2, #235	; 0xeb
   1b75c:	bl	e7e0 <__assert_fail@plt>
   1b760:	.word	0x0003f2fc
   1b764:	.word	0x00024e68
   1b768:	.word	0x00024e6a
   1b76c:	.word	0x00024f05

0001b770 <rb_dlinkAdd>:
   1b770:	push	{fp, lr}
   1b774:	mov	fp, sp
   1b778:	cmp	r0, #0
   1b77c:	beq	1b7d8 <rb_dlinkAdd+0x68>
   1b780:	cmp	r1, #0
   1b784:	beq	1b7f8 <rb_dlinkAdd+0x88>
   1b788:	mov	r2, #0
   1b78c:	stm	r1, {r0, r2}
   1b790:	ldr	r0, [pc, #128]	; 1b818 <rb_dlinkAdd+0xa8>
   1b794:	ldr	r0, [pc, r0]
   1b798:	ldr	r2, [r0]
   1b79c:	str	r2, [r1, #8]
   1b7a0:	cmp	r2, #0
   1b7a4:	beq	1b7b4 <rb_dlinkAdd+0x44>
   1b7a8:	add	r2, r2, #4
   1b7ac:	str	r1, [r2]
   1b7b0:	b	1b7c4 <rb_dlinkAdd+0x54>
   1b7b4:	mov	r2, r0
   1b7b8:	ldr	r3, [r2, #4]!
   1b7bc:	cmp	r3, #0
   1b7c0:	streq	r1, [r2]
   1b7c4:	str	r1, [r0]
   1b7c8:	ldr	r1, [r0, #8]
   1b7cc:	add	r1, r1, #1
   1b7d0:	str	r1, [r0, #8]
   1b7d4:	pop	{fp, pc}
   1b7d8:	ldr	r0, [pc, #60]	; 1b81c <rb_dlinkAdd+0xac>
   1b7dc:	add	r0, pc, r0
   1b7e0:	ldr	r1, [pc, #56]	; 1b820 <rb_dlinkAdd+0xb0>
   1b7e4:	add	r1, pc, r1
   1b7e8:	ldr	r3, [pc, #52]	; 1b824 <rb_dlinkAdd+0xb4>
   1b7ec:	add	r3, pc, r3
   1b7f0:	mov	r2, #143	; 0x8f
   1b7f4:	bl	e7e0 <__assert_fail@plt>
   1b7f8:	ldr	r0, [pc, #40]	; 1b828 <rb_dlinkAdd+0xb8>
   1b7fc:	add	r0, pc, r0
   1b800:	ldr	r1, [pc, #36]	; 1b82c <rb_dlinkAdd+0xbc>
   1b804:	add	r1, pc, r1
   1b808:	ldr	r3, [pc, #32]	; 1b830 <rb_dlinkAdd+0xc0>
   1b80c:	add	r3, pc, r3
   1b810:	mov	r2, #144	; 0x90
   1b814:	bl	e7e0 <__assert_fail@plt>
   1b818:	.word	0x0003f258
   1b81c:	.word	0x00024e35
   1b820:	.word	0x00024dd2
   1b824:	.word	0x00024e32
   1b828:	.word	0x00024db0
   1b82c:	.word	0x00024db2
   1b830:	.word	0x00024e12

0001b834 <rb_strdup>:
   1b834:	push	{r4, r5, fp, lr}
   1b838:	add	fp, sp, #8
   1b83c:	mov	r4, r0
   1b840:	bl	dc94 <strlen@plt>
   1b844:	add	r0, r0, #1
   1b848:	bl	da90 <malloc@plt>
   1b84c:	cmp	r0, #0
   1b850:	beq	1b868 <rb_strdup+0x34>
   1b854:	mov	r5, r0
   1b858:	mov	r1, r4
   1b85c:	bl	d928 <strcpy@plt>
   1b860:	mov	r0, r5
   1b864:	pop	{r4, r5, fp, pc}
   1b868:	bl	d448 <rb_outofmemory@plt>

0001b86c <handle_dns_failure>:
   1b86c:	push	{r4, r5, fp, lr}
   1b870:	add	fp, sp, #8
   1b874:	mov	r1, r0
   1b878:	ldr	r0, [pc, #68]	; 1b8c4 <handle_dns_failure+0x58>
   1b87c:	ldr	r0, [pc, r0]
   1b880:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b884:	cmp	r0, #0
   1b888:	beq	1b8c0 <handle_dns_failure+0x54>
   1b88c:	mov	r4, r0
   1b890:	ldr	ip, [r0]
   1b894:	cmp	ip, #0
   1b898:	popeq	{r4, r5, fp, pc}
   1b89c:	ldr	r3, [r4, #4]
   1b8a0:	ldr	r0, [pc, #32]	; 1b8c8 <handle_dns_failure+0x5c>
   1b8a4:	add	r0, pc, r0
   1b8a8:	mov	r5, #0
   1b8ac:	mov	r1, #0
   1b8b0:	mov	r2, #0
   1b8b4:	blx	ip
   1b8b8:	str	r5, [r4]
   1b8bc:	str	r5, [r4, #4]
   1b8c0:	pop	{r4, r5, fp, pc}
   1b8c4:	.word	0x00049edc
   1b8c8:	.word	0x00025e49

0001b8cc <match_extban>:
   1b8cc:	push	{r4, r5, r6, r7, fp, lr}
   1b8d0:	add	fp, sp, #16
   1b8d4:	ldrb	r6, [r0]
   1b8d8:	mov	ip, #0
   1b8dc:	cmp	r6, #36	; 0x24
   1b8e0:	bne	1b960 <match_extban+0x94>
   1b8e4:	mov	r5, r0
   1b8e8:	ldrb	r7, [r5, #1]!
   1b8ec:	cmp	r7, #126	; 0x7e
   1b8f0:	addeq	r5, r0, #2
   1b8f4:	mov	r4, #1
   1b8f8:	movweq	r4, #2
   1b8fc:	ldrb	r0, [r0, r4]
   1b900:	ldr	r4, [pc, #96]	; 1b968 <match_extban+0x9c>
   1b904:	ldr	r4, [pc, r4]
   1b908:	ldrb	r4, [r4, r0]
   1b90c:	ldr	r6, [pc, #88]	; 1b96c <match_extban+0xa0>
   1b910:	ldr	r6, [pc, r6]
   1b914:	ldr	r4, [r6, r4, lsl #2]
   1b918:	cmp	r0, #0
   1b91c:	beq	1b940 <match_extban+0x74>
   1b920:	ldrb	r6, [r5, #1]
   1b924:	mov	r0, #0
   1b928:	cmp	r6, #58	; 0x3a
   1b92c:	addeq	r0, r5, #2
   1b930:	cmp	r4, #0
   1b934:	beq	1b94c <match_extban+0x80>
   1b938:	blx	r4
   1b93c:	b	1b950 <match_extban+0x84>
   1b940:	mov	r0, r5
   1b944:	cmp	r4, #0
   1b948:	bne	1b938 <match_extban+0x6c>
   1b94c:	mvn	r0, #0
   1b950:	cmp	r7, #126	; 0x7e
   1b954:	subne	r0, r0, #1
   1b958:	clz	r0, r0
   1b95c:	lsr	ip, r0, #5
   1b960:	mov	r0, ip
   1b964:	pop	{r4, r5, r6, r7, fp, pc}
   1b968:	.word	0x0003f1d8
   1b96c:	.word	0x0003f204

0001b970 <valid_extban>:
   1b970:	push	{r4, r5, fp, lr}
   1b974:	add	fp, sp, #8
   1b978:	mov	ip, r0
   1b97c:	ldrb	r4, [r0]
   1b980:	mov	r0, #0
   1b984:	cmp	r4, #36	; 0x24
   1b988:	bne	1ba00 <valid_extban+0x90>
   1b98c:	mov	r5, ip
   1b990:	ldrb	r4, [r5, #1]!
   1b994:	cmp	r4, #126	; 0x7e
   1b998:	addeq	r5, ip, #2
   1b99c:	mov	r4, #1
   1b9a0:	movweq	r4, #2
   1b9a4:	ldrb	ip, [ip, r4]
   1b9a8:	ldr	r4, [pc, #84]	; 1ba04 <valid_extban+0x94>
   1b9ac:	ldr	r4, [pc, r4]
   1b9b0:	ldrb	lr, [r4, ip]
   1b9b4:	ldr	r4, [pc, #76]	; 1ba08 <valid_extban+0x98>
   1b9b8:	ldr	r4, [pc, r4]
   1b9bc:	ldr	lr, [r4, lr, lsl #2]
   1b9c0:	cmp	ip, #0
   1b9c4:	beq	1b9dc <valid_extban+0x6c>
   1b9c8:	ldrb	r4, [r5, #1]
   1b9cc:	mov	ip, #0
   1b9d0:	cmp	r4, #58	; 0x3a
   1b9d4:	addeq	ip, r5, #2
   1b9d8:	b	1b9e0 <valid_extban+0x70>
   1b9dc:	mov	ip, r5
   1b9e0:	cmp	lr, #0
   1b9e4:	popeq	{r4, r5, fp, pc}
   1b9e8:	mov	r0, ip
   1b9ec:	blx	lr
   1b9f0:	mov	r1, r0
   1b9f4:	add	r0, r0, #1
   1b9f8:	cmn	r1, #1
   1b9fc:	movwne	r0, #1
   1ba00:	pop	{r4, r5, fp, pc}
   1ba04:	.word	0x0003f130
   1ba08:	.word	0x0003f15c

0001ba0c <get_extban_string>:
   1ba0c:	push	{fp, lr}
   1ba10:	mov	fp, sp
   1ba14:	mov	r2, #1
   1ba18:	mov	r1, #0
   1ba1c:	ldr	lr, [pc, #68]	; 1ba68 <get_extban_string+0x5c>
   1ba20:	ldr	lr, [pc, lr]
   1ba24:	ldr	ip, [pc, #64]	; 1ba6c <get_extban_string+0x60>
   1ba28:	ldr	ip, [pc, ip]
   1ba2c:	ldr	r0, [pc, #60]	; 1ba70 <get_extban_string+0x64>
   1ba30:	add	r0, pc, r0
   1ba34:	ldrb	r3, [lr, r2]
   1ba38:	cmp	r2, r3
   1ba3c:	bne	1ba50 <get_extban_string+0x44>
   1ba40:	ldr	r3, [ip, r2, lsl #2]
   1ba44:	cmp	r3, #0
   1ba48:	strbne	r2, [r0, r1]
   1ba4c:	addne	r1, r1, #1
   1ba50:	add	r2, r2, #1
   1ba54:	cmp	r2, #256	; 0x100
   1ba58:	bne	1ba34 <get_extban_string+0x28>
   1ba5c:	mov	r2, #0
   1ba60:	strb	r2, [r0, r1]
   1ba64:	pop	{fp, pc}
   1ba68:	.word	0x0003f0bc
   1ba6c:	.word	0x0003f0ec
   1ba70:	.word	0x0004a138

0001ba74 <parseargs>:
   1ba74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba78:	add	fp, sp, #28
   1ba7c:	sub	sp, sp, #12
   1ba80:	mov	sl, r2
   1ba84:	mov	r5, r1
   1ba88:	mov	r7, r0
   1ba8c:	add	r0, r2, #8
   1ba90:	str	r0, [sp, #8]
   1ba94:	ldr	r0, [r1]
   1ba98:	ldr	r0, [r0]
   1ba9c:	str	r0, [sp, #4]
   1baa0:	ldr	r1, [r7]
   1baa4:	sub	r0, r1, #1
   1baa8:	str	r0, [r7]
   1baac:	ldr	r0, [r5]
   1bab0:	add	r0, r0, #4
   1bab4:	str	r0, [r5]
   1bab8:	cmp	r1, #2
   1babc:	blt	1bc0c <parseargs+0x198>
   1bac0:	ldr	r0, [r0]
   1bac4:	ldrb	r0, [r0]
   1bac8:	cmp	r0, #45	; 0x2d
   1bacc:	bne	1bc0c <parseargs+0x198>
   1bad0:	ldr	r4, [sl]
   1bad4:	cmp	r4, #0
   1bad8:	beq	1bbe4 <parseargs+0x170>
   1badc:	mov	r9, #0
   1bae0:	ldr	r0, [sp, #8]
   1bae4:	b	1bbac <parseargs+0x138>
   1bae8:	ldr	r0, [r6]
   1baec:	cmp	r0, #3
   1baf0:	bhi	1bc14 <parseargs+0x1a0>
   1baf4:	add	r1, pc, #4
   1baf8:	ldr	r0, [r1, r0, lsl #2]
   1bafc:	add	pc, r1, r0
   1bb00:	.word	0x00000010
   1bb04:	.word	0x0000009c
   1bb08:	.word	0x00000044
   1bb0c:	.word	0x00000140
   1bb10:	ldr	r0, [r7]
   1bb14:	cmp	r0, #1
   1bb18:	ble	1bc48 <parseargs+0x1d4>
   1bb1c:	ldr	r0, [r8, #4]!
   1bb20:	bl	e468 <atoi@plt>
   1bb24:	ldr	r1, [r6, #-4]
   1bb28:	str	r0, [r1]
   1bb2c:	ldr	r0, [r7]
   1bb30:	sub	r0, r0, #1
   1bb34:	str	r0, [r7]
   1bb38:	str	r8, [r5]
   1bb3c:	mov	r9, #1
   1bb40:	b	1bbcc <parseargs+0x158>
   1bb44:	ldr	r0, [r7]
   1bb48:	cmp	r0, #1
   1bb4c:	ble	1bc60 <parseargs+0x1ec>
   1bb50:	ldr	r0, [r8, #4]
   1bb54:	bl	dc94 <strlen@plt>
   1bb58:	add	r0, r0, #1
   1bb5c:	bl	da90 <malloc@plt>
   1bb60:	ldr	r1, [r6, #-4]
   1bb64:	str	r0, [r1]
   1bb68:	ldr	r0, [r5]
   1bb6c:	ldr	r1, [r0, #4]
   1bb70:	ldr	r0, [r6, #-4]
   1bb74:	ldr	r0, [r0]
   1bb78:	bl	d928 <strcpy@plt>
   1bb7c:	ldr	r0, [r7]
   1bb80:	sub	r0, r0, #1
   1bb84:	str	r0, [r7]
   1bb88:	ldr	r0, [r5]
   1bb8c:	add	r0, r0, #4
   1bb90:	str	r0, [r5]
   1bb94:	mov	r9, #1
   1bb98:	b	1bbcc <parseargs+0x158>
   1bb9c:	ldr	r0, [r6, #-4]
   1bba0:	mov	r9, #1
   1bba4:	strb	r9, [r0]
   1bba8:	b	1bbcc <parseargs+0x158>
   1bbac:	mov	r6, r0
   1bbb0:	ldr	r8, [r5]
   1bbb4:	ldr	r0, [r8]
   1bbb8:	add	r1, r0, #1
   1bbbc:	mov	r0, r4
   1bbc0:	bl	d0c4 <strcmp@plt>
   1bbc4:	cmp	r0, #0
   1bbc8:	beq	1bae8 <parseargs+0x74>
   1bbcc:	add	r0, r6, #16
   1bbd0:	ldr	r4, [r6, #8]
   1bbd4:	cmp	r4, #0
   1bbd8:	bne	1bbac <parseargs+0x138>
   1bbdc:	cmp	r9, #0
   1bbe0:	bne	1baa0 <parseargs+0x2c>
   1bbe4:	ldr	r0, [pc, #184]	; 1bca4 <parseargs+0x230>
   1bbe8:	ldr	r0, [pc, r0]
   1bbec:	ldr	r0, [r0]
   1bbf0:	ldr	r1, [r5]
   1bbf4:	ldr	r1, [r1]
   1bbf8:	add	r3, r1, #1
   1bbfc:	ldr	r1, [pc, #164]	; 1bca8 <parseargs+0x234>
   1bc00:	add	r1, pc, r1
   1bc04:	mov	r2, #45	; 0x2d
   1bc08:	b	1bc7c <parseargs+0x208>
   1bc0c:	sub	sp, fp, #28
   1bc10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc14:	ldr	r0, [pc, #124]	; 1bc98 <parseargs+0x224>
   1bc18:	ldr	r0, [pc, r0]
   1bc1c:	ldr	r0, [r0]
   1bc20:	ldr	r1, [pc, #116]	; 1bc9c <parseargs+0x228>
   1bc24:	add	r1, pc, r1
   1bc28:	ldr	r2, [pc, #112]	; 1bca0 <parseargs+0x22c>
   1bc2c:	add	r2, pc, r2
   1bc30:	mov	r3, #105	; 0x69
   1bc34:	bl	dd60 <fprintf@plt>
   1bc38:	mov	r0, #1
   1bc3c:	bl	dc34 <exit@plt>
   1bc40:	ldr	r0, [sp, #4]
   1bc44:	bl	e144 <usage@plt>
   1bc48:	ldr	r0, [pc, #56]	; 1bc88 <parseargs+0x214>
   1bc4c:	ldr	r0, [pc, r0]
   1bc50:	ldr	r0, [r0]
   1bc54:	ldr	r1, [pc, #48]	; 1bc8c <parseargs+0x218>
   1bc58:	add	r1, pc, r1
   1bc5c:	b	1bc74 <parseargs+0x200>
   1bc60:	ldr	r0, [pc, #40]	; 1bc90 <parseargs+0x21c>
   1bc64:	ldr	r0, [pc, r0]
   1bc68:	ldr	r0, [r0]
   1bc6c:	ldr	r1, [pc, #32]	; 1bc94 <parseargs+0x220>
   1bc70:	add	r1, pc, r1
   1bc74:	mov	r2, #45	; 0x2d
   1bc78:	mov	r3, r4
   1bc7c:	bl	dd60 <fprintf@plt>
   1bc80:	ldr	r0, [sp, #4]
   1bc84:	bl	e144 <usage@plt>
   1bc88:	.word	0x0003ed0c
   1bc8c:	.word	0x00025a9c
   1bc90:	.word	0x0003ecf4
   1bc94:	.word	0x00025aaf
   1bc98:	.word	0x0003ed40
   1bc9c:	.word	0x00025b26
   1bca0:	.word	0x00025b4d
   1bca4:	.word	0x0003ed70
   1bca8:	.word	0x00025b82

0001bcac <usage>:
   1bcac:	push	{fp, lr}
   1bcb0:	mov	fp, sp
   1bcb4:	sub	sp, sp, #8
   1bcb8:	mov	r2, r0
   1bcbc:	ldr	r5, [pc, #180]	; 1bd78 <usage+0xcc>
   1bcc0:	ldr	r5, [pc, r5]
   1bcc4:	ldr	r0, [r5]
   1bcc8:	ldr	r1, [pc, #172]	; 1bd7c <usage+0xd0>
   1bccc:	add	r1, pc, r1
   1bcd0:	bl	dd60 <fprintf@plt>
   1bcd4:	ldr	r3, [r5]
   1bcd8:	ldr	r0, [pc, #160]	; 1bd80 <usage+0xd4>
   1bcdc:	add	r0, pc, r0
   1bce0:	mov	r1, #25
   1bce4:	mov	r2, #1
   1bce8:	bl	d8b0 <fwrite@plt>
   1bcec:	ldr	r0, [pc, #144]	; 1bd84 <usage+0xd8>
   1bcf0:	ldr	r0, [pc, r0]
   1bcf4:	ldr	r3, [r0]
   1bcf8:	cmp	r3, #0
   1bcfc:	beq	1bd70 <usage+0xc4>
   1bd00:	add	r7, r0, #8
   1bd04:	ldr	r6, [pc, #124]	; 1bd88 <usage+0xdc>
   1bd08:	add	r6, pc, r6
   1bd0c:	ldr	r4, [pc, #120]	; 1bd8c <usage+0xe0>
   1bd10:	add	r4, pc, r4
   1bd14:	ldr	r8, [pc, #116]	; 1bd90 <usage+0xe4>
   1bd18:	add	r8, pc, r8
   1bd1c:	ldr	r9, [pc, #112]	; 1bd94 <usage+0xe8>
   1bd20:	add	r9, pc, r9
   1bd24:	ldr	r0, [r5]
   1bd28:	ldr	r2, [r7]
   1bd2c:	orr	r1, r2, #2
   1bd30:	cmp	r1, #3
   1bd34:	mov	r1, r6
   1bd38:	beq	1bd48 <usage+0x9c>
   1bd3c:	cmp	r2, #0
   1bd40:	mov	r1, r9
   1bd44:	moveq	r1, r8
   1bd48:	ldr	r2, [r7, #4]
   1bd4c:	stm	sp, {r1, r2}
   1bd50:	mov	r1, r4
   1bd54:	mov	r2, #45	; 0x2d
   1bd58:	bl	dd60 <fprintf@plt>
   1bd5c:	add	r0, r7, #16
   1bd60:	ldr	r3, [r7, #8]
   1bd64:	cmp	r3, #0
   1bd68:	mov	r7, r0
   1bd6c:	bne	1bd24 <usage+0x78>
   1bd70:	mov	r0, #1
   1bd74:	bl	dc34 <exit@plt>
   1bd78:	.word	0x0003ec98
   1bd7c:	.word	0x00025ad6
   1bd80:	.word	0x00025adb
   1bd84:	.word	0x0003ede8
   1bd88:	.word	0x00029afd
   1bd8c:	.word	0x00025ac1
   1bd90:	.word	0x00025acb
   1bd94:	.word	0x00025acc

0001bd98 <init_hash>:
   1bd98:	push	{r4, sl, fp, lr}
   1bd9c:	add	fp, sp, #8
   1bda0:	ldr	r0, [pc, #176]	; 1be58 <init_hash+0xc0>
   1bda4:	add	r0, pc, r0
   1bda8:	ldr	r1, [pc, #172]	; 1be5c <init_hash+0xc4>
   1bdac:	add	r1, pc, r1
   1bdb0:	bl	dfb8 <rb_dictionary_create@plt>
   1bdb4:	ldr	r1, [pc, #164]	; 1be60 <init_hash+0xc8>
   1bdb8:	ldr	r1, [pc, r1]
   1bdbc:	str	r0, [r1]
   1bdc0:	ldr	r0, [pc, #156]	; 1be64 <init_hash+0xcc>
   1bdc4:	add	r0, pc, r0
   1bdc8:	mov	r1, #0
   1bdcc:	bl	d85c <rb_radixtree_create@plt>
   1bdd0:	ldr	r1, [pc, #144]	; 1be68 <init_hash+0xd0>
   1bdd4:	ldr	r1, [pc, r1]
   1bdd8:	str	r0, [r1]
   1bddc:	ldr	r0, [pc, #136]	; 1be6c <init_hash+0xd4>
   1bde0:	add	r0, pc, r0
   1bde4:	ldr	r4, [pc, #132]	; 1be70 <init_hash+0xd8>
   1bde8:	add	r4, pc, r4
   1bdec:	mov	r1, r4
   1bdf0:	bl	d85c <rb_radixtree_create@plt>
   1bdf4:	ldr	r1, [pc, #120]	; 1be74 <init_hash+0xdc>
   1bdf8:	ldr	r1, [pc, r1]
   1bdfc:	str	r0, [r1]
   1be00:	ldr	r0, [pc, #112]	; 1be78 <init_hash+0xe0>
   1be04:	add	r0, pc, r0
   1be08:	mov	r1, r4
   1be0c:	bl	d85c <rb_radixtree_create@plt>
   1be10:	ldr	r1, [pc, #100]	; 1be7c <init_hash+0xe4>
   1be14:	ldr	r1, [pc, r1]
   1be18:	str	r0, [r1]
   1be1c:	ldr	r0, [pc, #92]	; 1be80 <init_hash+0xe8>
   1be20:	add	r0, pc, r0
   1be24:	mov	r1, r4
   1be28:	bl	d85c <rb_radixtree_create@plt>
   1be2c:	ldr	r1, [pc, #80]	; 1be84 <init_hash+0xec>
   1be30:	ldr	r1, [pc, r1]
   1be34:	str	r0, [r1]
   1be38:	ldr	r0, [pc, #72]	; 1be88 <init_hash+0xf0>
   1be3c:	add	r0, pc, r0
   1be40:	mov	r1, r4
   1be44:	bl	d85c <rb_radixtree_create@plt>
   1be48:	ldr	r1, [pc, #60]	; 1be8c <init_hash+0xf4>
   1be4c:	ldr	r1, [pc, r1]
   1be50:	str	r0, [r1]
   1be54:	pop	{r4, sl, fp, pc}
   1be58:	.word	0x00025a51
   1be5c:	.word	0x000000dc
   1be60:	.word	0x0003ec64
   1be64:	.word	0x00025a3f
   1be68:	.word	0x0003eb80
   1be6c:	.word	0x00025a2d
   1be70:	.word	0x000000a8
   1be74:	.word	0x0003eb84
   1be78:	.word	0x0002511f
   1be7c:	.word	0x0003ec44
   1be80:	.word	0x000284ec
   1be84:	.word	0x0003eb78
   1be88:	.word	0x0002a90c
   1be8c:	.word	0x0003eb10

0001be90 <rb_uint32cmp>:
   1be90:	sub	r0, r1, r0
   1be94:	bx	lr

0001be98 <irccasecanon>:
   1be98:	ldrb	r1, [r0]
   1be9c:	cmp	r1, #0
   1bea0:	bxeq	lr
   1bea4:	add	r0, r0, #1
   1bea8:	ldr	r2, [pc, #32]	; 1bed0 <irccasecanon+0x38>
   1beac:	ldr	r2, [pc, r2]
   1beb0:	uxtb	r1, r1
   1beb4:	ldrb	r1, [r2, r1]
   1beb8:	strb	r1, [r0, #-1]
   1bebc:	ldrb	r1, [r0]
   1bec0:	add	r0, r0, #1
   1bec4:	cmp	r1, #0
   1bec8:	bne	1beb0 <irccasecanon+0x18>
   1becc:	bx	lr
   1bed0:	.word	0x0003eabc

0001bed4 <fnv_hash_upper>:
   1bed4:	push	{fp, lr}
   1bed8:	mov	fp, sp
   1bedc:	mov	r2, r0
   1bee0:	ldrb	r3, [r0]
   1bee4:	movw	r0, #40389	; 0x9dc5
   1bee8:	movt	r0, #33052	; 0x811c
   1beec:	cmp	r3, #0
   1bef0:	beq	1bf24 <fnv_hash_upper+0x50>
   1bef4:	add	r2, r2, #1
   1bef8:	ldr	ip, [pc, #56]	; 1bf38 <fnv_hash_upper+0x64>
   1befc:	ldr	ip, [pc, ip]
   1bf00:	movw	lr, #403	; 0x193
   1bf04:	movt	lr, #256	; 0x100
   1bf08:	uxtb	r3, r3
   1bf0c:	ldrb	r3, [ip, r3]
   1bf10:	eor	r0, r0, r3
   1bf14:	mul	r0, r0, lr
   1bf18:	ldrb	r3, [r2], #1
   1bf1c:	cmp	r3, #0
   1bf20:	bne	1bf08 <fnv_hash_upper+0x34>
   1bf24:	cmp	r1, #31
   1bf28:	eorle	r0, r0, r0, lsr r1
   1bf2c:	mvnle	r2, #0
   1bf30:	bicle	r0, r0, r2, lsl r1
   1bf34:	pop	{fp, pc}
   1bf38:	.word	0x0003ea6c

0001bf3c <fnv_hash>:
   1bf3c:	mov	r2, r0
   1bf40:	ldrb	r3, [r0]
   1bf44:	movw	r0, #40389	; 0x9dc5
   1bf48:	movt	r0, #33052	; 0x811c
   1bf4c:	cmp	r3, #0
   1bf50:	beq	1bf78 <fnv_hash+0x3c>
   1bf54:	add	r2, r2, #1
   1bf58:	movw	ip, #403	; 0x193
   1bf5c:	movt	ip, #256	; 0x100
   1bf60:	uxtb	r3, r3
   1bf64:	eor	r0, r0, r3
   1bf68:	mul	r0, r0, ip
   1bf6c:	ldrb	r3, [r2], #1
   1bf70:	cmp	r3, #0
   1bf74:	bne	1bf60 <fnv_hash+0x24>
   1bf78:	cmp	r1, #31
   1bf7c:	eorle	r0, r0, r0, lsr r1
   1bf80:	mvnle	r2, #0
   1bf84:	bicle	r0, r0, r2, lsl r1
   1bf88:	bx	lr

0001bf8c <fnv_hash_len>:
   1bf8c:	push	{fp, lr}
   1bf90:	mov	fp, sp
   1bf94:	mov	ip, r0
   1bf98:	movw	r0, #40389	; 0x9dc5
   1bf9c:	movt	r0, #33052	; 0x811c
   1bfa0:	cmp	r2, #1
   1bfa4:	blt	1bfe4 <fnv_hash_len+0x58>
   1bfa8:	mov	lr, ip
   1bfac:	ldrb	r3, [lr], r2
   1bfb0:	cmp	r3, #0
   1bfb4:	beq	1bfe4 <fnv_hash_len+0x58>
   1bfb8:	add	r2, ip, #1
   1bfbc:	movw	ip, #403	; 0x193
   1bfc0:	movt	ip, #256	; 0x100
   1bfc4:	uxtb	r3, r3
   1bfc8:	eor	r0, r0, r3
   1bfcc:	mul	r0, r0, ip
   1bfd0:	cmp	r2, lr
   1bfd4:	bcs	1bfe4 <fnv_hash_len+0x58>
   1bfd8:	ldrb	r3, [r2], #1
   1bfdc:	cmp	r3, #0
   1bfe0:	bne	1bfc4 <fnv_hash_len+0x38>
   1bfe4:	cmp	r1, #31
   1bfe8:	eorle	r0, r0, r0, lsr r1
   1bfec:	mvnle	r2, #0
   1bff0:	bicle	r0, r0, r2, lsl r1
   1bff4:	pop	{fp, pc}

0001bff8 <fnv_hash_upper_len>:
   1bff8:	push	{r4, sl, fp, lr}
   1bffc:	add	fp, sp, #8
   1c000:	mov	ip, r0
   1c004:	movw	r0, #40389	; 0x9dc5
   1c008:	movt	r0, #33052	; 0x811c
   1c00c:	cmp	r2, #1
   1c010:	blt	1c05c <fnv_hash_upper_len+0x64>
   1c014:	mov	r3, ip
   1c018:	ldrb	r4, [r3], r2
   1c01c:	cmp	r4, #0
   1c020:	beq	1c05c <fnv_hash_upper_len+0x64>
   1c024:	add	r2, ip, #1
   1c028:	ldr	ip, [pc, #64]	; 1c070 <fnv_hash_upper_len+0x78>
   1c02c:	ldr	ip, [pc, ip]
   1c030:	movw	lr, #403	; 0x193
   1c034:	movt	lr, #256	; 0x100
   1c038:	uxtb	r4, r4
   1c03c:	ldrb	r4, [ip, r4]
   1c040:	eor	r0, r0, r4
   1c044:	mul	r0, r0, lr
   1c048:	cmp	r2, r3
   1c04c:	bcs	1c05c <fnv_hash_upper_len+0x64>
   1c050:	ldrb	r4, [r2], #1
   1c054:	cmp	r4, #0
   1c058:	bne	1c038 <fnv_hash_upper_len+0x40>
   1c05c:	cmp	r1, #31
   1c060:	eorle	r0, r0, r0, lsr r1
   1c064:	mvnle	r2, #0
   1c068:	bicle	r0, r0, r2, lsl r1
   1c06c:	pop	{r4, sl, fp, pc}
   1c070:	.word	0x0003e93c

0001c074 <add_to_id_hash>:
   1c074:	cmp	r0, #0
   1c078:	movne	r2, r1
   1c07c:	cmpne	r1, #0
   1c080:	bne	1c088 <add_to_id_hash+0x14>
   1c084:	bx	lr
   1c088:	mov	r1, r0
   1c08c:	ldrb	r0, [r0]
   1c090:	cmp	r0, #0
   1c094:	bxeq	lr
   1c098:	ldr	r0, [pc, #8]	; 1c0a8 <add_to_id_hash+0x34>
   1c09c:	ldr	r0, [pc, r0]
   1c0a0:	ldr	r0, [r0]
   1c0a4:	b	dd9c <rb_radixtree_add@plt>
   1c0a8:	.word	0x0003e8b8

0001c0ac <add_to_client_hash>:
   1c0ac:	cmp	r0, #0
   1c0b0:	movne	r2, r1
   1c0b4:	cmpne	r1, #0
   1c0b8:	bne	1c0c0 <add_to_client_hash+0x14>
   1c0bc:	bx	lr
   1c0c0:	mov	r1, r0
   1c0c4:	ldrb	r0, [r0]
   1c0c8:	cmp	r0, #0
   1c0cc:	bxeq	lr
   1c0d0:	ldr	r0, [pc, #8]	; 1c0e0 <add_to_client_hash+0x34>
   1c0d4:	ldr	r0, [pc, r0]
   1c0d8:	ldr	r0, [r0]
   1c0dc:	b	dd9c <rb_radixtree_add@plt>
   1c0e0:	.word	0x0003e8a8

0001c0e4 <add_to_hostname_hash>:
   1c0e4:	push	{r4, r5, r6, r7, fp, lr}
   1c0e8:	add	fp, sp, #16
   1c0ec:	cmp	r0, #0
   1c0f0:	popeq	{r4, r5, r6, r7, fp, pc}
   1c0f4:	mov	r4, r1
   1c0f8:	cmp	r1, #0
   1c0fc:	movne	r5, r0
   1c100:	ldrbne	r0, [r0]
   1c104:	cmpne	r0, #0
   1c108:	bne	1c110 <add_to_hostname_hash+0x2c>
   1c10c:	pop	{r4, r5, r6, r7, fp, pc}
   1c110:	ldr	r7, [pc, #76]	; 1c164 <add_to_hostname_hash+0x80>
   1c114:	ldr	r7, [pc, r7]
   1c118:	ldr	r0, [r7]
   1c11c:	mov	r1, r5
   1c120:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c124:	cmp	r0, #0
   1c128:	beq	1c134 <add_to_hostname_hash+0x50>
   1c12c:	mov	r6, r0
   1c130:	b	1c14c <add_to_hostname_hash+0x68>
   1c134:	bl	1c258 <rb_malloc>
   1c138:	mov	r6, r0
   1c13c:	ldr	r0, [r7]
   1c140:	mov	r1, r5
   1c144:	mov	r2, r6
   1c148:	bl	dd9c <rb_radixtree_add@plt>
   1c14c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   1c150:	mov	r1, r0
   1c154:	mov	r0, r4
   1c158:	mov	r2, r6
   1c15c:	pop	{r4, r5, r6, r7, fp, lr}
   1c160:	b	1c168 <rb_dlinkAdd>
   1c164:	.word	0x0003e848

0001c168 <rb_dlinkAdd>:
   1c168:	push	{fp, lr}
   1c16c:	mov	fp, sp
   1c170:	cmp	r0, #0
   1c174:	beq	1c1d4 <rb_dlinkAdd+0x6c>
   1c178:	cmp	r1, #0
   1c17c:	beq	1c1f4 <rb_dlinkAdd+0x8c>
   1c180:	cmp	r2, #0
   1c184:	beq	1c214 <rb_dlinkAdd+0xac>
   1c188:	mov	r3, #0
   1c18c:	stm	r1, {r0, r3}
   1c190:	ldr	r0, [r2]
   1c194:	str	r0, [r1, #8]
   1c198:	ldr	r0, [r2]
   1c19c:	cmp	r0, #0
   1c1a0:	beq	1c1b0 <rb_dlinkAdd+0x48>
   1c1a4:	add	r0, r0, #4
   1c1a8:	str	r1, [r0]
   1c1ac:	b	1c1c0 <rb_dlinkAdd+0x58>
   1c1b0:	mov	r0, r2
   1c1b4:	ldr	r3, [r0, #4]!
   1c1b8:	cmp	r3, #0
   1c1bc:	streq	r1, [r0]
   1c1c0:	str	r1, [r2]
   1c1c4:	ldr	r0, [r2, #8]
   1c1c8:	add	r0, r0, #1
   1c1cc:	str	r0, [r2, #8]
   1c1d0:	pop	{fp, pc}
   1c1d4:	ldr	r0, [pc, #88]	; 1c234 <rb_dlinkAdd+0xcc>
   1c1d8:	add	r0, pc, r0
   1c1dc:	ldr	r1, [pc, #84]	; 1c238 <rb_dlinkAdd+0xd0>
   1c1e0:	add	r1, pc, r1
   1c1e4:	ldr	r3, [pc, #80]	; 1c23c <rb_dlinkAdd+0xd4>
   1c1e8:	add	r3, pc, r3
   1c1ec:	mov	r2, #143	; 0x8f
   1c1f0:	bl	e7e0 <__assert_fail@plt>
   1c1f4:	ldr	r0, [pc, #68]	; 1c240 <rb_dlinkAdd+0xd8>
   1c1f8:	add	r0, pc, r0
   1c1fc:	ldr	r1, [pc, #64]	; 1c244 <rb_dlinkAdd+0xdc>
   1c200:	add	r1, pc, r1
   1c204:	ldr	r3, [pc, #60]	; 1c248 <rb_dlinkAdd+0xe0>
   1c208:	add	r3, pc, r3
   1c20c:	mov	r2, #144	; 0x90
   1c210:	bl	e7e0 <__assert_fail@plt>
   1c214:	ldr	r0, [pc, #48]	; 1c24c <rb_dlinkAdd+0xe4>
   1c218:	add	r0, pc, r0
   1c21c:	ldr	r1, [pc, #44]	; 1c250 <rb_dlinkAdd+0xe8>
   1c220:	add	r1, pc, r1
   1c224:	ldr	r3, [pc, #40]	; 1c254 <rb_dlinkAdd+0xec>
   1c228:	add	r3, pc, r3
   1c22c:	mov	r2, #145	; 0x91
   1c230:	bl	e7e0 <__assert_fail@plt>
   1c234:	.word	0x00024439
   1c238:	.word	0x000243d6
   1c23c:	.word	0x00024436
   1c240:	.word	0x000243b4
   1c244:	.word	0x000243b6
   1c248:	.word	0x00024416
   1c24c:	.word	0x00029c2d
   1c250:	.word	0x00024396
   1c254:	.word	0x000243f6

0001c258 <rb_malloc>:
   1c258:	push	{fp, lr}
   1c25c:	mov	fp, sp
   1c260:	mov	r0, #1
   1c264:	mov	r1, #12
   1c268:	bl	cfa4 <calloc@plt>
   1c26c:	cmp	r0, #0
   1c270:	popne	{fp, pc}
   1c274:	bl	d448 <rb_outofmemory@plt>

0001c278 <add_to_resv_hash>:
   1c278:	cmp	r0, #0
   1c27c:	movne	r2, r1
   1c280:	cmpne	r1, #0
   1c284:	bne	1c28c <add_to_resv_hash+0x14>
   1c288:	bx	lr
   1c28c:	mov	r1, r0
   1c290:	ldrb	r0, [r0]
   1c294:	cmp	r0, #0
   1c298:	bxeq	lr
   1c29c:	ldr	r0, [pc, #8]	; 1c2ac <add_to_resv_hash+0x34>
   1c2a0:	ldr	r0, [pc, r0]
   1c2a4:	ldr	r0, [r0]
   1c2a8:	b	dd9c <rb_radixtree_add@plt>
   1c2ac:	.word	0x0003e708

0001c2b0 <del_from_id_hash>:
   1c2b0:	cmp	r0, #0
   1c2b4:	cmpne	r1, #0
   1c2b8:	bne	1c2c0 <del_from_id_hash+0x10>
   1c2bc:	bx	lr
   1c2c0:	mov	r2, r0
   1c2c4:	ldrb	r0, [r0]
   1c2c8:	cmp	r0, #0
   1c2cc:	bxeq	lr
   1c2d0:	ldr	r0, [pc, #12]	; 1c2e4 <del_from_id_hash+0x34>
   1c2d4:	ldr	r0, [pc, r0]
   1c2d8:	ldr	r0, [r0]
   1c2dc:	mov	r1, r2
   1c2e0:	b	e0c0 <rb_radixtree_delete@plt>
   1c2e4:	.word	0x0003e680

0001c2e8 <del_from_client_hash>:
   1c2e8:	cmp	r0, #0
   1c2ec:	cmpne	r1, #0
   1c2f0:	bne	1c2f8 <del_from_client_hash+0x10>
   1c2f4:	bx	lr
   1c2f8:	mov	r2, r0
   1c2fc:	ldrb	r0, [r0]
   1c300:	cmp	r0, #0
   1c304:	bxeq	lr
   1c308:	ldr	r0, [pc, #12]	; 1c31c <del_from_client_hash+0x34>
   1c30c:	ldr	r0, [pc, r0]
   1c310:	ldr	r0, [r0]
   1c314:	mov	r1, r2
   1c318:	b	e0c0 <rb_radixtree_delete@plt>
   1c31c:	.word	0x0003e670

0001c320 <del_from_channel_hash>:
   1c320:	cmp	r0, #0
   1c324:	cmpne	r1, #0
   1c328:	bne	1c330 <del_from_channel_hash+0x10>
   1c32c:	bx	lr
   1c330:	mov	r2, r0
   1c334:	ldrb	r0, [r0]
   1c338:	cmp	r0, #0
   1c33c:	bxeq	lr
   1c340:	ldr	r0, [pc, #12]	; 1c354 <del_from_channel_hash+0x34>
   1c344:	ldr	r0, [pc, r0]
   1c348:	ldr	r0, [r0]
   1c34c:	mov	r1, r2
   1c350:	b	e0c0 <rb_radixtree_delete@plt>
   1c354:	.word	0x0003e714

0001c358 <del_from_hostname_hash>:
   1c358:	push	{r4, r5, r6, r7, fp, lr}
   1c35c:	add	fp, sp, #16
   1c360:	cmp	r0, #0
   1c364:	movne	r5, r1
   1c368:	cmpne	r1, #0
   1c36c:	bne	1c374 <del_from_hostname_hash+0x1c>
   1c370:	pop	{r4, r5, r6, r7, fp, pc}
   1c374:	mov	r4, r0
   1c378:	ldr	r7, [pc, #72]	; 1c3c8 <del_from_hostname_hash+0x70>
   1c37c:	ldr	r7, [pc, r7]
   1c380:	ldr	r0, [r7]
   1c384:	mov	r1, r4
   1c388:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c38c:	cmp	r0, #0
   1c390:	popeq	{r4, r5, r6, r7, fp, pc}
   1c394:	mov	r6, r0
   1c398:	mov	r0, r5
   1c39c:	mov	r1, r6
   1c3a0:	bl	1c3cc <rb_dlinkFindDestroy>
   1c3a4:	ldr	r0, [r6, #8]
   1c3a8:	cmp	r0, #0
   1c3ac:	bne	1c370 <del_from_hostname_hash+0x18>
   1c3b0:	ldr	r0, [r7]
   1c3b4:	mov	r1, r4
   1c3b8:	bl	e0c0 <rb_radixtree_delete@plt>
   1c3bc:	mov	r0, r6
   1c3c0:	pop	{r4, r5, r6, r7, fp, lr}
   1c3c4:	b	1c450 <rb_free>
   1c3c8:	.word	0x0003e5e0

0001c3cc <rb_dlinkFindDestroy>:
   1c3cc:	push	{fp, lr}
   1c3d0:	mov	fp, sp
   1c3d4:	cmp	r1, #0
   1c3d8:	beq	1c3f8 <rb_dlinkFindDestroy+0x2c>
   1c3dc:	cmp	r0, #0
   1c3e0:	beq	1c418 <rb_dlinkFindDestroy+0x4c>
   1c3e4:	bl	1c908 <rb_dlinkFindDelete>
   1c3e8:	cmp	r0, #0
   1c3ec:	popeq	{fp, pc}
   1c3f0:	pop	{fp, lr}
   1c3f4:	b	d7c0 <rb_free_rb_dlink_node@plt>
   1c3f8:	ldr	r0, [pc, #56]	; 1c438 <rb_dlinkFindDestroy+0x6c>
   1c3fc:	add	r0, pc, r0
   1c400:	ldr	r1, [pc, #52]	; 1c43c <rb_dlinkFindDestroy+0x70>
   1c404:	add	r1, pc, r1
   1c408:	ldr	r3, [pc, #48]	; 1c440 <rb_dlinkFindDestroy+0x74>
   1c40c:	add	r3, pc, r3
   1c410:	movw	r2, #287	; 0x11f
   1c414:	bl	e7e0 <__assert_fail@plt>
   1c418:	ldr	r0, [pc, #36]	; 1c444 <rb_dlinkFindDestroy+0x78>
   1c41c:	add	r0, pc, r0
   1c420:	ldr	r1, [pc, #32]	; 1c448 <rb_dlinkFindDestroy+0x7c>
   1c424:	add	r1, pc, r1
   1c428:	ldr	r3, [pc, #28]	; 1c44c <rb_dlinkFindDestroy+0x80>
   1c42c:	add	r3, pc, r3
   1c430:	mov	r2, #288	; 0x120
   1c434:	bl	e7e0 <__assert_fail@plt>
   1c438:	.word	0x00029a49
   1c43c:	.word	0x000241b2
   1c440:	.word	0x000247b9
   1c444:	.word	0x000241f5
   1c448:	.word	0x00024192
   1c44c:	.word	0x00024799

0001c450 <rb_free>:
   1c450:	cmp	r0, #0
   1c454:	bxeq	lr
   1c458:	b	d328 <free@plt>

0001c45c <del_from_resv_hash>:
   1c45c:	cmp	r0, #0
   1c460:	cmpne	r1, #0
   1c464:	bne	1c46c <del_from_resv_hash+0x10>
   1c468:	bx	lr
   1c46c:	mov	r2, r0
   1c470:	ldrb	r0, [r0]
   1c474:	cmp	r0, #0
   1c478:	bxeq	lr
   1c47c:	ldr	r0, [pc, #12]	; 1c490 <del_from_resv_hash+0x34>
   1c480:	ldr	r0, [pc, r0]
   1c484:	ldr	r0, [r0]
   1c488:	mov	r1, r2
   1c48c:	b	e0c0 <rb_radixtree_delete@plt>
   1c490:	.word	0x0003e528

0001c494 <find_id>:
   1c494:	mov	r1, r0
   1c498:	mov	r0, #0
   1c49c:	cmp	r1, #0
   1c4a0:	ldrbne	r2, [r1]
   1c4a4:	cmpne	r2, #0
   1c4a8:	bne	1c4b0 <find_id+0x1c>
   1c4ac:	bx	lr
   1c4b0:	push	{fp, lr}
   1c4b4:	mov	fp, sp
   1c4b8:	ldr	r0, [pc, #16]	; 1c4d0 <find_id+0x3c>
   1c4bc:	ldr	r0, [pc, r0]
   1c4c0:	ldr	r0, [r0]
   1c4c4:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c4c8:	pop	{fp, lr}
   1c4cc:	bx	lr
   1c4d0:	.word	0x0003e498

0001c4d4 <find_client>:
   1c4d4:	mov	r1, r0
   1c4d8:	mov	r0, #0
   1c4dc:	cmp	r1, #0
   1c4e0:	ldrbne	r2, [r1]
   1c4e4:	cmpne	r2, #0
   1c4e8:	bne	1c4f0 <find_client+0x1c>
   1c4ec:	bx	lr
   1c4f0:	ldr	r0, [pc, #52]	; 1c52c <find_client+0x58>
   1c4f4:	ldr	r0, [pc, r0]
   1c4f8:	ldrb	r0, [r0, r2, lsl #2]
   1c4fc:	tst	r0, #16
   1c500:	bne	1c524 <find_client+0x50>
   1c504:	push	{fp, lr}
   1c508:	mov	fp, sp
   1c50c:	ldr	r0, [pc, #28]	; 1c530 <find_client+0x5c>
   1c510:	ldr	r0, [pc, r0]
   1c514:	ldr	r0, [r0]
   1c518:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c51c:	pop	{fp, lr}
   1c520:	bx	lr
   1c524:	mov	r0, r1
   1c528:	b	1c494 <find_id>
   1c52c:	.word	0x0003e504
   1c530:	.word	0x0003e46c

0001c534 <find_named_client>:
   1c534:	mov	r1, r0
   1c538:	mov	r0, #0
   1c53c:	cmp	r1, #0
   1c540:	ldrbne	r2, [r1]
   1c544:	cmpne	r2, #0
   1c548:	bne	1c550 <find_named_client+0x1c>
   1c54c:	bx	lr
   1c550:	push	{fp, lr}
   1c554:	mov	fp, sp
   1c558:	ldr	r0, [pc, #16]	; 1c570 <find_named_client+0x3c>
   1c55c:	ldr	r0, [pc, r0]
   1c560:	ldr	r0, [r0]
   1c564:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c568:	pop	{fp, lr}
   1c56c:	bx	lr
   1c570:	.word	0x0003e420

0001c574 <find_server>:
   1c574:	push	{r4, sl, fp, lr}
   1c578:	add	fp, sp, #8
   1c57c:	mov	r4, r1
   1c580:	mov	r1, r0
   1c584:	mov	r0, #0
   1c588:	cmp	r4, #0
   1c58c:	ldrbne	r2, [r4]
   1c590:	cmpne	r2, #0
   1c594:	bne	1c59c <find_server+0x28>
   1c598:	pop	{r4, sl, fp, pc}
   1c59c:	cmp	r1, #0
   1c5a0:	ldrbne	r0, [r1, #65]	; 0x41
   1c5a4:	tstne	r0, #32
   1c5a8:	bne	1c5dc <find_server+0x68>
   1c5ac:	ldr	r0, [pc, #104]	; 1c61c <find_server+0xa8>
   1c5b0:	ldr	r0, [pc, r0]
   1c5b4:	ldrb	r0, [r0, r2, lsl #2]
   1c5b8:	tst	r0, #16
   1c5bc:	beq	1c5e8 <find_server+0x74>
   1c5c0:	mov	r0, r4
   1c5c4:	bl	dc94 <strlen@plt>
   1c5c8:	cmp	r0, #3
   1c5cc:	bne	1c5e8 <find_server+0x74>
   1c5d0:	mov	r0, r4
   1c5d4:	pop	{r4, sl, fp, lr}
   1c5d8:	b	1c494 <find_id>
   1c5dc:	ldrh	r0, [r1, #80]	; 0x50
   1c5e0:	cmp	r0, #64	; 0x40
   1c5e4:	bne	1c5ac <find_server+0x38>
   1c5e8:	ldr	r0, [pc, #48]	; 1c620 <find_server+0xac>
   1c5ec:	ldr	r0, [pc, r0]
   1c5f0:	ldr	r0, [r0]
   1c5f4:	mov	r1, r4
   1c5f8:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c5fc:	cmp	r0, #0
   1c600:	beq	1c614 <find_server+0xa0>
   1c604:	ldrh	r1, [r0, #80]	; 0x50
   1c608:	cmp	r1, #4
   1c60c:	cmpne	r1, #32
   1c610:	beq	1c598 <find_server+0x24>
   1c614:	mov	r0, #0
   1c618:	pop	{r4, sl, fp, pc}
   1c61c:	.word	0x0003e448
   1c620:	.word	0x0003e390

0001c624 <find_hostname>:
   1c624:	push	{r4, sl, fp, lr}
   1c628:	add	fp, sp, #8
   1c62c:	mov	r4, #0
   1c630:	cmp	r0, #0
   1c634:	beq	1c660 <find_hostname+0x3c>
   1c638:	mov	r1, r0
   1c63c:	ldrb	r0, [r0]
   1c640:	cmp	r0, #0
   1c644:	beq	1c660 <find_hostname+0x3c>
   1c648:	ldr	r0, [pc, #24]	; 1c668 <find_hostname+0x44>
   1c64c:	ldr	r0, [pc, r0]
   1c650:	ldr	r0, [r0]
   1c654:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c658:	cmp	r0, #0
   1c65c:	ldrne	r4, [r0]
   1c660:	mov	r0, r4
   1c664:	pop	{r4, sl, fp, pc}
   1c668:	.word	0x0003e310

0001c66c <find_channel>:
   1c66c:	mov	r1, r0
   1c670:	mov	r0, #0
   1c674:	cmp	r1, #0
   1c678:	ldrbne	r2, [r1]
   1c67c:	cmpne	r2, #0
   1c680:	bne	1c688 <find_channel+0x1c>
   1c684:	bx	lr
   1c688:	push	{fp, lr}
   1c68c:	mov	fp, sp
   1c690:	ldr	r0, [pc, #16]	; 1c6a8 <find_channel+0x3c>
   1c694:	ldr	r0, [pc, r0]
   1c698:	ldr	r0, [r0]
   1c69c:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c6a0:	pop	{fp, lr}
   1c6a4:	bx	lr
   1c6a8:	.word	0x0003e3c4

0001c6ac <get_or_create_channel>:
   1c6ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c6b0:	add	fp, sp, #24
   1c6b4:	mov	r6, #0
   1c6b8:	cmp	r1, #0
   1c6bc:	beq	1c7c4 <get_or_create_channel+0x118>
   1c6c0:	mov	r5, r1
   1c6c4:	mov	r7, r0
   1c6c8:	ldrb	r0, [r1]
   1c6cc:	cmp	r0, #0
   1c6d0:	beq	1c7c4 <get_or_create_channel+0x118>
   1c6d4:	mov	r4, r2
   1c6d8:	mov	r0, r5
   1c6dc:	bl	dc94 <strlen@plt>
   1c6e0:	cmp	r0, #201	; 0xc9
   1c6e4:	blt	1c74c <get_or_create_channel+0xa0>
   1c6e8:	ldrh	r1, [r7, #80]	; 0x50
   1c6ec:	cmp	r1, #32
   1c6f0:	bne	1c71c <get_or_create_channel+0x70>
   1c6f4:	sub	sp, sp, #16
   1c6f8:	mov	r1, #200	; 0xc8
   1c6fc:	stm	sp, {r0, r1, r5}
   1c700:	add	r3, r7, #88	; 0x58
   1c704:	ldr	r2, [pc, #196]	; 1c7d0 <get_or_create_channel+0x124>
   1c708:	add	r2, pc, r2
   1c70c:	mov	r0, #8
   1c710:	mov	r1, #0
   1c714:	bl	d640 <sendto_realops_snomask@plt>
   1c718:	add	sp, sp, #16
   1c71c:	mov	r0, r5
   1c720:	bl	dc94 <strlen@plt>
   1c724:	add	r0, r0, #8
   1c728:	bic	r0, r0, #7
   1c72c:	sub	r7, sp, r0
   1c730:	mov	sp, r7
   1c734:	mov	r0, r7
   1c738:	mov	r1, r5
   1c73c:	bl	d928 <strcpy@plt>
   1c740:	mov	r0, #0
   1c744:	strb	r0, [r7, #200]	; 0xc8
   1c748:	b	1c750 <get_or_create_channel+0xa4>
   1c74c:	mov	r7, r5
   1c750:	ldr	r5, [pc, #124]	; 1c7d4 <get_or_create_channel+0x128>
   1c754:	ldr	r5, [pc, r5]
   1c758:	ldr	r0, [r5]
   1c75c:	mov	r1, r7
   1c760:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c764:	cmp	r0, #0
   1c768:	beq	1c780 <get_or_create_channel+0xd4>
   1c76c:	mov	r6, r0
   1c770:	cmp	r4, #0
   1c774:	movne	r0, #0
   1c778:	strbne	r0, [r4]
   1c77c:	b	1c7c4 <get_or_create_channel+0x118>
   1c780:	cmp	r4, #0
   1c784:	movne	r0, #1
   1c788:	strbne	r0, [r4]
   1c78c:	mov	r0, r7
   1c790:	bl	d1a8 <allocate_channel@plt>
   1c794:	mov	r6, r0
   1c798:	bl	d07c <rb_current_time@plt>
   1c79c:	str	r0, [r6, #232]	; 0xe8
   1c7a0:	ldr	r2, [pc, #48]	; 1c7d8 <get_or_create_channel+0x12c>
   1c7a4:	ldr	r2, [pc, r2]
   1c7a8:	mov	r0, r6
   1c7ac:	mov	r1, r6
   1c7b0:	bl	1c168 <rb_dlinkAdd>
   1c7b4:	ldr	r1, [r6, #236]	; 0xec
   1c7b8:	ldr	r0, [r5]
   1c7bc:	mov	r2, r6
   1c7c0:	bl	dd9c <rb_radixtree_add@plt>
   1c7c4:	mov	r0, r6
   1c7c8:	sub	sp, fp, #24
   1c7cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c7d0:	.word	0x00025111
   1c7d4:	.word	0x0003e304
   1c7d8:	.word	0x0003e1c8

0001c7dc <hash_find_resv>:
   1c7dc:	push	{r4, sl, fp, lr}
   1c7e0:	add	fp, sp, #8
   1c7e4:	mov	r4, #0
   1c7e8:	cmp	r0, #0
   1c7ec:	beq	1c824 <hash_find_resv+0x48>
   1c7f0:	mov	r1, r0
   1c7f4:	ldrb	r0, [r0]
   1c7f8:	cmp	r0, #0
   1c7fc:	beq	1c824 <hash_find_resv+0x48>
   1c800:	ldr	r0, [pc, #36]	; 1c82c <hash_find_resv+0x50>
   1c804:	ldr	r0, [pc, r0]
   1c808:	ldr	r0, [r0]
   1c80c:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c810:	cmp	r0, #0
   1c814:	ldrne	r1, [r0, #32]
   1c818:	addne	r1, r1, #1
   1c81c:	strne	r1, [r0, #32]
   1c820:	movne	r4, r0
   1c824:	mov	r0, r4
   1c828:	pop	{r4, sl, fp, pc}
   1c82c:	.word	0x0003e1a4

0001c830 <clear_resv_hash>:
   1c830:	push	{r4, r5, r6, sl, fp, lr}
   1c834:	add	fp, sp, #16
   1c838:	sub	sp, sp, #40	; 0x28
   1c83c:	ldr	r6, [pc, #120]	; 1c8bc <clear_resv_hash+0x8c>
   1c840:	ldr	r6, [pc, r6]
   1c844:	ldr	r0, [r6]
   1c848:	mov	r4, sp
   1c84c:	mov	r1, r4
   1c850:	bl	e318 <rb_radixtree_foreach_start@plt>
   1c854:	ldr	r0, [r6]
   1c858:	mov	r1, r4
   1c85c:	bl	e06c <rb_radixtree_foreach_cur@plt>
   1c860:	cmp	r0, #0
   1c864:	beq	1c8b4 <clear_resv_hash+0x84>
   1c868:	mov	r5, r0
   1c86c:	mov	r4, sp
   1c870:	ldr	r0, [r5, #36]	; 0x24
   1c874:	cmp	r0, #0
   1c878:	bne	1c890 <clear_resv_hash+0x60>
   1c87c:	ldr	r1, [r5, #16]
   1c880:	ldr	r0, [r6]
   1c884:	bl	e0c0 <rb_radixtree_delete@plt>
   1c888:	mov	r0, r5
   1c88c:	bl	dc40 <free_conf@plt>
   1c890:	ldr	r0, [r6]
   1c894:	mov	r1, r4
   1c898:	bl	d580 <rb_radixtree_foreach_next@plt>
   1c89c:	ldr	r0, [r6]
   1c8a0:	mov	r1, r4
   1c8a4:	bl	e06c <rb_radixtree_foreach_cur@plt>
   1c8a8:	mov	r5, r0
   1c8ac:	cmp	r0, #0
   1c8b0:	bne	1c870 <clear_resv_hash+0x40>
   1c8b4:	sub	sp, fp, #16
   1c8b8:	pop	{r4, r5, r6, sl, fp, pc}
   1c8bc:	.word	0x0003e168

0001c8c0 <add_to_cli_connid_hash>:
   1c8c0:	mov	r2, r0
   1c8c4:	ldr	r0, [pc, #8]	; 1c8d4 <add_to_cli_connid_hash+0x14>
   1c8c8:	ldr	r0, [pc, r0]
   1c8cc:	ldr	r0, [r0]
   1c8d0:	b	d70c <rb_dictionary_add@plt>
   1c8d4:	.word	0x0003e154

0001c8d8 <del_from_cli_connid_hash>:
   1c8d8:	mov	r1, r0
   1c8dc:	ldr	r0, [pc, #8]	; 1c8ec <del_from_cli_connid_hash+0x14>
   1c8e0:	ldr	r0, [pc, r0]
   1c8e4:	ldr	r0, [r0]
   1c8e8:	b	d838 <rb_dictionary_delete@plt>
   1c8ec:	.word	0x0003e13c

0001c8f0 <find_cli_connid_hash>:
   1c8f0:	mov	r1, r0
   1c8f4:	ldr	r0, [pc, #8]	; 1c904 <find_cli_connid_hash+0x14>
   1c8f8:	ldr	r0, [pc, r0]
   1c8fc:	ldr	r0, [r0]
   1c900:	b	e6e4 <rb_dictionary_retrieve@plt>
   1c904:	.word	0x0003e124

0001c908 <rb_dlinkFindDelete>:
   1c908:	push	{fp, lr}
   1c90c:	mov	fp, sp
   1c910:	cmp	r1, #0
   1c914:	beq	1c988 <rb_dlinkFindDelete+0x80>
   1c918:	mov	ip, r0
   1c91c:	cmp	r0, #0
   1c920:	beq	1c9a8 <rb_dlinkFindDelete+0xa0>
   1c924:	ldr	r3, [r1]
   1c928:	mov	r0, r3
   1c92c:	cmp	r3, #0
   1c930:	popeq	{fp, pc}
   1c934:	ldr	r2, [r0]
   1c938:	ldr	r3, [r0, #8]
   1c93c:	cmp	r2, ip
   1c940:	bne	1c928 <rb_dlinkFindDelete+0x20>
   1c944:	add	r2, r3, #4
   1c948:	cmp	r3, #0
   1c94c:	addeq	r2, r1, #4
   1c950:	ldr	r3, [r0, #4]
   1c954:	str	r3, [r2]
   1c958:	ldmib	r0, {r2, ip}
   1c95c:	cmp	r2, #0
   1c960:	mov	r3, r1
   1c964:	addne	r3, r2, #8
   1c968:	str	ip, [r3]
   1c96c:	mov	r2, #0
   1c970:	str	r2, [r0, #4]
   1c974:	str	r2, [r0, #8]
   1c978:	ldr	r2, [r1, #8]
   1c97c:	sub	r2, r2, #1
   1c980:	str	r2, [r1, #8]
   1c984:	pop	{fp, pc}
   1c988:	ldr	r0, [pc, #56]	; 1c9c8 <rb_dlinkFindDelete+0xc0>
   1c98c:	add	r0, pc, r0
   1c990:	ldr	r1, [pc, #52]	; 1c9cc <rb_dlinkFindDelete+0xc4>
   1c994:	add	r1, pc, r1
   1c998:	ldr	r3, [pc, #48]	; 1c9d0 <rb_dlinkFindDelete+0xc8>
   1c99c:	add	r3, pc, r3
   1c9a0:	movw	r2, #258	; 0x102
   1c9a4:	bl	e7e0 <__assert_fail@plt>
   1c9a8:	ldr	r0, [pc, #36]	; 1c9d4 <rb_dlinkFindDelete+0xcc>
   1c9ac:	add	r0, pc, r0
   1c9b0:	ldr	r1, [pc, #32]	; 1c9d8 <rb_dlinkFindDelete+0xd0>
   1c9b4:	add	r1, pc, r1
   1c9b8:	ldr	r3, [pc, #28]	; 1c9dc <rb_dlinkFindDelete+0xd4>
   1c9bc:	add	r3, pc, r3
   1c9c0:	movw	r2, #259	; 0x103
   1c9c4:	bl	e7e0 <__assert_fail@plt>
   1c9c8:	.word	0x000294b9
   1c9cc:	.word	0x00023c22
   1c9d0:	.word	0x0002425a
   1c9d4:	.word	0x00023c65
   1c9d8:	.word	0x00023c02
   1c9dc:	.word	0x0002423a

0001c9e0 <init_hook>:
   1c9e0:	push	{fp, lr}
   1c9e4:	mov	fp, sp
   1c9e8:	mov	r0, #16000	; 0x3e80
   1c9ec:	bl	1cc44 <rb_malloc>
   1c9f0:	ldr	r1, [pc, #440]	; 1cbb0 <init_hook+0x1d0>
   1c9f4:	ldr	r1, [pc, r1]
   1c9f8:	str	r0, [r1]
   1c9fc:	ldr	r0, [pc, #432]	; 1cbb4 <init_hook+0x1d4>
   1ca00:	add	r0, pc, r0
   1ca04:	bl	dbbc <register_hook@plt>
   1ca08:	ldr	r1, [pc, #424]	; 1cbb8 <init_hook+0x1d8>
   1ca0c:	ldr	r1, [pc, r1]
   1ca10:	str	r0, [r1]
   1ca14:	ldr	r0, [pc, #416]	; 1cbbc <init_hook+0x1dc>
   1ca18:	add	r0, pc, r0
   1ca1c:	bl	dbbc <register_hook@plt>
   1ca20:	ldr	r1, [pc, #408]	; 1cbc0 <init_hook+0x1e0>
   1ca24:	ldr	r1, [pc, r1]
   1ca28:	str	r0, [r1]
   1ca2c:	ldr	r0, [pc, #400]	; 1cbc4 <init_hook+0x1e4>
   1ca30:	add	r0, pc, r0
   1ca34:	bl	dbbc <register_hook@plt>
   1ca38:	ldr	r1, [pc, #392]	; 1cbc8 <init_hook+0x1e8>
   1ca3c:	ldr	r1, [pc, r1]
   1ca40:	str	r0, [r1]
   1ca44:	ldr	r0, [pc, #384]	; 1cbcc <init_hook+0x1ec>
   1ca48:	add	r0, pc, r0
   1ca4c:	bl	dbbc <register_hook@plt>
   1ca50:	ldr	r1, [pc, #376]	; 1cbd0 <init_hook+0x1f0>
   1ca54:	ldr	r1, [pc, r1]
   1ca58:	str	r0, [r1]
   1ca5c:	ldr	r0, [pc, #368]	; 1cbd4 <init_hook+0x1f4>
   1ca60:	add	r0, pc, r0
   1ca64:	bl	dbbc <register_hook@plt>
   1ca68:	ldr	r1, [pc, #360]	; 1cbd8 <init_hook+0x1f8>
   1ca6c:	ldr	r1, [pc, r1]
   1ca70:	str	r0, [r1]
   1ca74:	ldr	r0, [pc, #352]	; 1cbdc <init_hook+0x1fc>
   1ca78:	add	r0, pc, r0
   1ca7c:	bl	dbbc <register_hook@plt>
   1ca80:	ldr	r1, [pc, #344]	; 1cbe0 <init_hook+0x200>
   1ca84:	ldr	r1, [pc, r1]
   1ca88:	str	r0, [r1]
   1ca8c:	ldr	r0, [pc, #336]	; 1cbe4 <init_hook+0x204>
   1ca90:	add	r0, pc, r0
   1ca94:	bl	dbbc <register_hook@plt>
   1ca98:	ldr	r1, [pc, #328]	; 1cbe8 <init_hook+0x208>
   1ca9c:	ldr	r1, [pc, r1]
   1caa0:	str	r0, [r1]
   1caa4:	ldr	r0, [pc, #320]	; 1cbec <init_hook+0x20c>
   1caa8:	add	r0, pc, r0
   1caac:	bl	dbbc <register_hook@plt>
   1cab0:	ldr	r1, [pc, #312]	; 1cbf0 <init_hook+0x210>
   1cab4:	ldr	r1, [pc, r1]
   1cab8:	str	r0, [r1]
   1cabc:	ldr	r0, [pc, #304]	; 1cbf4 <init_hook+0x214>
   1cac0:	add	r0, pc, r0
   1cac4:	bl	dbbc <register_hook@plt>
   1cac8:	ldr	r1, [pc, #296]	; 1cbf8 <init_hook+0x218>
   1cacc:	ldr	r1, [pc, r1]
   1cad0:	str	r0, [r1]
   1cad4:	ldr	r0, [pc, #288]	; 1cbfc <init_hook+0x21c>
   1cad8:	add	r0, pc, r0
   1cadc:	bl	dbbc <register_hook@plt>
   1cae0:	ldr	r1, [pc, #280]	; 1cc00 <init_hook+0x220>
   1cae4:	ldr	r1, [pc, r1]
   1cae8:	str	r0, [r1]
   1caec:	ldr	r0, [pc, #272]	; 1cc04 <init_hook+0x224>
   1caf0:	add	r0, pc, r0
   1caf4:	bl	dbbc <register_hook@plt>
   1caf8:	ldr	r1, [pc, #264]	; 1cc08 <init_hook+0x228>
   1cafc:	ldr	r1, [pc, r1]
   1cb00:	str	r0, [r1]
   1cb04:	ldr	r0, [pc, #256]	; 1cc0c <init_hook+0x22c>
   1cb08:	add	r0, pc, r0
   1cb0c:	bl	dbbc <register_hook@plt>
   1cb10:	ldr	r1, [pc, #248]	; 1cc10 <init_hook+0x230>
   1cb14:	ldr	r1, [pc, r1]
   1cb18:	str	r0, [r1]
   1cb1c:	ldr	r0, [pc, #240]	; 1cc14 <init_hook+0x234>
   1cb20:	add	r0, pc, r0
   1cb24:	bl	dbbc <register_hook@plt>
   1cb28:	ldr	r1, [pc, #232]	; 1cc18 <init_hook+0x238>
   1cb2c:	ldr	r1, [pc, r1]
   1cb30:	str	r0, [r1]
   1cb34:	ldr	r0, [pc, #224]	; 1cc1c <init_hook+0x23c>
   1cb38:	add	r0, pc, r0
   1cb3c:	bl	dbbc <register_hook@plt>
   1cb40:	ldr	r1, [pc, #216]	; 1cc20 <init_hook+0x240>
   1cb44:	ldr	r1, [pc, r1]
   1cb48:	str	r0, [r1]
   1cb4c:	ldr	r0, [pc, #208]	; 1cc24 <init_hook+0x244>
   1cb50:	add	r0, pc, r0
   1cb54:	bl	dbbc <register_hook@plt>
   1cb58:	ldr	r1, [pc, #200]	; 1cc28 <init_hook+0x248>
   1cb5c:	ldr	r1, [pc, r1]
   1cb60:	str	r0, [r1]
   1cb64:	ldr	r0, [pc, #192]	; 1cc2c <init_hook+0x24c>
   1cb68:	add	r0, pc, r0
   1cb6c:	bl	dbbc <register_hook@plt>
   1cb70:	ldr	r1, [pc, #184]	; 1cc30 <init_hook+0x250>
   1cb74:	ldr	r1, [pc, r1]
   1cb78:	str	r0, [r1]
   1cb7c:	ldr	r0, [pc, #176]	; 1cc34 <init_hook+0x254>
   1cb80:	add	r0, pc, r0
   1cb84:	bl	dbbc <register_hook@plt>
   1cb88:	ldr	r1, [pc, #168]	; 1cc38 <init_hook+0x258>
   1cb8c:	ldr	r1, [pc, r1]
   1cb90:	str	r0, [r1]
   1cb94:	ldr	r0, [pc, #160]	; 1cc3c <init_hook+0x25c>
   1cb98:	add	r0, pc, r0
   1cb9c:	bl	dbbc <register_hook@plt>
   1cba0:	ldr	r1, [pc, #152]	; 1cc40 <init_hook+0x260>
   1cba4:	ldr	r1, [pc, r1]
   1cba8:	str	r0, [r1]
   1cbac:	pop	{fp, pc}
   1cbb0:	.word	0x0003e05c
   1cbb4:	.word	0x00024e45
   1cbb8:	.word	0x0003e0a8
   1cbbc:	.word	0x00024e3a
   1cbc0:	.word	0x0003de78
   1cbc4:	.word	0x00024e30
   1cbc8:	.word	0x0003dff0
   1cbcc:	.word	0x00024e27
   1cbd0:	.word	0x0003dea0
   1cbd4:	.word	0x00024e21
   1cbd8:	.word	0x0003df5c
   1cbdc:	.word	0x00024e1a
   1cbe0:	.word	0x0003e064
   1cbe4:	.word	0x00024dfc
   1cbe8:	.word	0x0003dfc8
   1cbec:	.word	0x00024df6
   1cbf0:	.word	0x0003df90
   1cbf4:	.word	0x00024dec
   1cbf8:	.word	0x0003e0a0
   1cbfc:	.word	0x00024de3
   1cc00:	.word	0x0003def4
   1cc04:	.word	0x00024ddb
   1cc08:	.word	0x0003dda4
   1cc0c:	.word	0x00024dd4
   1cc10:	.word	0x0003e01c
   1cc14:	.word	0x00024dc5
   1cc18:	.word	0x0003df3c
   1cc1c:	.word	0x00024dba
   1cc20:	.word	0x0003dd88
   1cc24:	.word	0x00024db2
   1cc28:	.word	0x0003dd74
   1cc2c:	.word	0x00024daa
   1cc30:	.word	0x0003dfac
   1cc34:	.word	0x00024da0
   1cc38:	.word	0x0003de8c
   1cc3c:	.word	0x00025295
   1cc40:	.word	0x0003df58

0001cc44 <rb_malloc>:
   1cc44:	push	{fp, lr}
   1cc48:	mov	fp, sp
   1cc4c:	mov	r1, r0
   1cc50:	mov	r0, #1
   1cc54:	bl	cfa4 <calloc@plt>
   1cc58:	cmp	r0, #0
   1cc5c:	popne	{fp, pc}
   1cc60:	bl	d448 <rb_outofmemory@plt>

0001cc64 <register_hook>:
   1cc64:	push	{r4, r5, fp, lr}
   1cc68:	add	fp, sp, #8
   1cc6c:	mov	r5, r0
   1cc70:	bl	1cccc <find_hook>
   1cc74:	mov	r4, r0
   1cc78:	cmn	r0, #1
   1cc7c:	ble	1cc88 <register_hook+0x24>
   1cc80:	mov	r0, r4
   1cc84:	pop	{r4, r5, fp, pc}
   1cc88:	bl	1cd40 <find_freehookslot>
   1cc8c:	mov	r4, r0
   1cc90:	mov	r0, r5
   1cc94:	bl	1cdb8 <rb_strdup>
   1cc98:	ldr	r1, [pc, #36]	; 1ccc4 <register_hook+0x60>
   1cc9c:	ldr	r1, [pc, r1]
   1cca0:	ldr	r1, [r1]
   1cca4:	str	r0, [r1, r4, lsl #4]
   1cca8:	ldr	r0, [pc, #24]	; 1ccc8 <register_hook+0x64>
   1ccac:	ldr	r0, [pc, r0]
   1ccb0:	ldr	r1, [r0]
   1ccb4:	add	r1, r1, #1
   1ccb8:	str	r1, [r0]
   1ccbc:	mov	r0, r4
   1ccc0:	pop	{r4, r5, fp, pc}
   1ccc4:	.word	0x0003ddb4
   1ccc8:	.word	0x0003dc54

0001cccc <find_hook>:
   1cccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ccd0:	add	fp, sp, #24
   1ccd4:	mov	r5, r0
   1ccd8:	ldr	r6, [pc, #88]	; 1cd38 <find_hook+0x6c>
   1ccdc:	ldr	r6, [pc, r6]
   1cce0:	ldr	r0, [r6]
   1cce4:	mvn	r8, #0
   1cce8:	cmp	r0, #1
   1ccec:	blt	1cd30 <find_hook+0x64>
   1ccf0:	mov	r7, #0
   1ccf4:	ldr	r4, [pc, #64]	; 1cd3c <find_hook+0x70>
   1ccf8:	ldr	r4, [pc, r4]
   1ccfc:	ldr	r0, [r4]
   1cd00:	ldr	r0, [r0, r7, lsl #4]
   1cd04:	cmp	r0, #0
   1cd08:	beq	1cd20 <find_hook+0x54>
   1cd0c:	mov	r1, r5
   1cd10:	bl	e750 <irccmp@plt>
   1cd14:	cmp	r0, #0
   1cd18:	moveq	r0, r7
   1cd1c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cd20:	add	r7, r7, #1
   1cd24:	ldr	r0, [r6]
   1cd28:	cmp	r7, r0
   1cd2c:	blt	1ccfc <find_hook+0x30>
   1cd30:	mov	r0, r8
   1cd34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cd38:	.word	0x0003dd90
   1cd3c:	.word	0x0003dd58

0001cd40 <find_freehookslot>:
   1cd40:	push	{r4, sl, fp, lr}
   1cd44:	add	fp, sp, #8
   1cd48:	ldr	r4, [pc, #92]	; 1cdac <find_freehookslot+0x6c>
   1cd4c:	ldr	r4, [pc, r4]
   1cd50:	ldr	r1, [r4]
   1cd54:	ldr	r0, [pc, #84]	; 1cdb0 <find_freehookslot+0x70>
   1cd58:	ldr	r0, [pc, r0]
   1cd5c:	ldr	r0, [r0]
   1cd60:	cmp	r0, r1
   1cd64:	blt	1cd70 <find_freehookslot+0x30>
   1cd68:	bl	1d20c <grow_hooktable>
   1cd6c:	ldr	r1, [r4]
   1cd70:	cmp	r1, #1
   1cd74:	blt	1cda4 <find_freehookslot+0x64>
   1cd78:	ldr	r1, [r4]
   1cd7c:	ldr	r0, [pc, #48]	; 1cdb4 <find_freehookslot+0x74>
   1cd80:	ldr	r0, [pc, r0]
   1cd84:	ldr	r2, [r0]
   1cd88:	mov	r0, #0
   1cd8c:	ldr	r3, [r2, r0, lsl #4]
   1cd90:	cmp	r3, #0
   1cd94:	popeq	{r4, sl, fp, pc}
   1cd98:	add	r0, r0, #1
   1cd9c:	cmp	r0, r1
   1cda0:	blt	1cd8c <find_freehookslot+0x4c>
   1cda4:	sub	r0, r1, #1
   1cda8:	pop	{r4, sl, fp, pc}
   1cdac:	.word	0x0003dd20
   1cdb0:	.word	0x0003dba8
   1cdb4:	.word	0x0003dcd0

0001cdb8 <rb_strdup>:
   1cdb8:	push	{r4, r5, fp, lr}
   1cdbc:	add	fp, sp, #8
   1cdc0:	mov	r4, r0
   1cdc4:	bl	dc94 <strlen@plt>
   1cdc8:	add	r0, r0, #1
   1cdcc:	bl	da90 <malloc@plt>
   1cdd0:	cmp	r0, #0
   1cdd4:	beq	1cdec <rb_strdup+0x34>
   1cdd8:	mov	r5, r0
   1cddc:	mov	r1, r4
   1cde0:	bl	d928 <strcpy@plt>
   1cde4:	mov	r0, r5
   1cde8:	pop	{r4, r5, fp, pc}
   1cdec:	bl	d448 <rb_outofmemory@plt>

0001cdf0 <add_hook>:
   1cdf0:	mov	r2, #30
   1cdf4:	b	1cdf8 <add_hook_prio>

0001cdf8 <add_hook_prio>:
   1cdf8:	push	{r4, r5, r6, r7, fp, lr}
   1cdfc:	add	fp, sp, #16
   1ce00:	mov	r4, r2
   1ce04:	mov	r6, r1
   1ce08:	mov	r7, r0
   1ce0c:	mov	r0, #20
   1ce10:	bl	1cc44 <rb_malloc>
   1ce14:	mov	r5, r0
   1ce18:	mov	r0, r7
   1ce1c:	bl	dbbc <register_hook@plt>
   1ce20:	str	r6, [r5, #12]
   1ce24:	str	r4, [r5, #16]
   1ce28:	ldr	r1, [pc, #92]	; 1ce8c <add_hook_prio+0x94>
   1ce2c:	ldr	r1, [pc, r1]
   1ce30:	ldr	r1, [r1]
   1ce34:	add	r1, r1, r0, lsl #4
   1ce38:	ldr	r0, [r1, #4]
   1ce3c:	cmp	r0, #0
   1ce40:	bne	1ce54 <add_hook_prio+0x5c>
   1ce44:	b	1ce78 <add_hook_prio+0x80>
   1ce48:	ldr	r0, [r0, #8]
   1ce4c:	cmp	r0, #0
   1ce50:	beq	1ce78 <add_hook_prio+0x80>
   1ce54:	ldr	r2, [r0]
   1ce58:	ldr	r2, [r2, #16]
   1ce5c:	cmp	r2, r4
   1ce60:	bcc	1ce48 <add_hook_prio+0x50>
   1ce64:	add	r3, r1, #4
   1ce68:	mov	r1, r5
   1ce6c:	mov	r2, r5
   1ce70:	pop	{r4, r5, r6, r7, fp, lr}
   1ce74:	b	1ce90 <rb_dlinkAddBefore>
   1ce78:	add	r2, r1, #4
   1ce7c:	mov	r0, r5
   1ce80:	mov	r1, r5
   1ce84:	pop	{r4, r5, r6, r7, fp, lr}
   1ce88:	b	1cfb4 <rb_dlinkAddTail>
   1ce8c:	.word	0x0003dc24

0001ce90 <rb_dlinkAddBefore>:
   1ce90:	push	{fp, lr}
   1ce94:	mov	fp, sp
   1ce98:	cmp	r0, #0
   1ce9c:	beq	1cf04 <rb_dlinkAddBefore+0x74>
   1cea0:	cmp	r1, #0
   1cea4:	beq	1cf24 <rb_dlinkAddBefore+0x94>
   1cea8:	cmp	r2, #0
   1ceac:	beq	1cf44 <rb_dlinkAddBefore+0xb4>
   1ceb0:	cmp	r3, #0
   1ceb4:	beq	1cf64 <rb_dlinkAddBefore+0xd4>
   1ceb8:	ldr	ip, [r3]
   1cebc:	cmp	ip, r0
   1cec0:	beq	1cef0 <rb_dlinkAddBefore+0x60>
   1cec4:	str	r1, [r2]
   1cec8:	ldr	r1, [r0, #4]
   1cecc:	str	r2, [r1, #8]
   1ced0:	ldr	r1, [r0, #4]
   1ced4:	str	r1, [r2, #4]
   1ced8:	str	r2, [r0, #4]
   1cedc:	str	r0, [r2, #8]
   1cee0:	ldr	r0, [r3, #8]
   1cee4:	add	r0, r0, #1
   1cee8:	str	r0, [r3, #8]
   1ceec:	pop	{fp, pc}
   1cef0:	mov	r0, r1
   1cef4:	mov	r1, r2
   1cef8:	mov	r2, r3
   1cefc:	pop	{fp, lr}
   1cf00:	b	1d28c <rb_dlinkAdd>
   1cf04:	ldr	r0, [pc, #120]	; 1cf84 <rb_dlinkAddBefore+0xf4>
   1cf08:	add	r0, pc, r0
   1cf0c:	ldr	r1, [pc, #116]	; 1cf88 <rb_dlinkAddBefore+0xf8>
   1cf10:	add	r1, pc, r1
   1cf14:	ldr	r3, [pc, #112]	; 1cf8c <rb_dlinkAddBefore+0xfc>
   1cf18:	add	r3, pc, r3
   1cf1c:	mov	r2, #164	; 0xa4
   1cf20:	bl	e7e0 <__assert_fail@plt>
   1cf24:	ldr	r0, [pc, #100]	; 1cf90 <rb_dlinkAddBefore+0x100>
   1cf28:	add	r0, pc, r0
   1cf2c:	ldr	r1, [pc, #96]	; 1cf94 <rb_dlinkAddBefore+0x104>
   1cf30:	add	r1, pc, r1
   1cf34:	ldr	r3, [pc, #92]	; 1cf98 <rb_dlinkAddBefore+0x108>
   1cf38:	add	r3, pc, r3
   1cf3c:	mov	r2, #165	; 0xa5
   1cf40:	bl	e7e0 <__assert_fail@plt>
   1cf44:	ldr	r0, [pc, #80]	; 1cf9c <rb_dlinkAddBefore+0x10c>
   1cf48:	add	r0, pc, r0
   1cf4c:	ldr	r1, [pc, #76]	; 1cfa0 <rb_dlinkAddBefore+0x110>
   1cf50:	add	r1, pc, r1
   1cf54:	ldr	r3, [pc, #72]	; 1cfa4 <rb_dlinkAddBefore+0x114>
   1cf58:	add	r3, pc, r3
   1cf5c:	mov	r2, #166	; 0xa6
   1cf60:	bl	e7e0 <__assert_fail@plt>
   1cf64:	ldr	r0, [pc, #60]	; 1cfa8 <rb_dlinkAddBefore+0x118>
   1cf68:	add	r0, pc, r0
   1cf6c:	ldr	r1, [pc, #56]	; 1cfac <rb_dlinkAddBefore+0x11c>
   1cf70:	add	r1, pc, r1
   1cf74:	ldr	r3, [pc, #52]	; 1cfb0 <rb_dlinkAddBefore+0x120>
   1cf78:	add	r3, pc, r3
   1cf7c:	mov	r2, #167	; 0xa7
   1cf80:	bl	e7e0 <__assert_fail@plt>
   1cf84:	.word	0x00024a28
   1cf88:	.word	0x000236a6
   1cf8c:	.word	0x00024a22
   1cf90:	.word	0x000236e9
   1cf94:	.word	0x00023686
   1cf98:	.word	0x00024a02
   1cf9c:	.word	0x00023664
   1cfa0:	.word	0x00023666
   1cfa4:	.word	0x000249e2
   1cfa8:	.word	0x00028edd
   1cfac:	.word	0x00023646
   1cfb0:	.word	0x000249c2

0001cfb4 <rb_dlinkAddTail>:
   1cfb4:	push	{fp, lr}
   1cfb8:	mov	fp, sp
   1cfbc:	cmp	r1, #0
   1cfc0:	beq	1d028 <rb_dlinkAddTail+0x74>
   1cfc4:	cmp	r2, #0
   1cfc8:	beq	1d048 <rb_dlinkAddTail+0x94>
   1cfcc:	cmp	r0, #0
   1cfd0:	beq	1d068 <rb_dlinkAddTail+0xb4>
   1cfd4:	mov	r3, #0
   1cfd8:	str	r3, [r1, #8]
   1cfdc:	str	r0, [r1]
   1cfe0:	ldr	r0, [r2, #4]
   1cfe4:	str	r0, [r1, #4]
   1cfe8:	ldr	r0, [r2, #4]
   1cfec:	cmp	r0, #0
   1cff0:	beq	1d000 <rb_dlinkAddTail+0x4c>
   1cff4:	add	r0, r0, #8
   1cff8:	str	r1, [r0]
   1cffc:	b	1d00c <rb_dlinkAddTail+0x58>
   1d000:	ldr	r0, [r2]
   1d004:	cmp	r0, #0
   1d008:	beq	1d020 <rb_dlinkAddTail+0x6c>
   1d00c:	str	r1, [r2, #4]
   1d010:	ldr	r0, [r2, #8]
   1d014:	add	r0, r0, #1
   1d018:	str	r0, [r2, #8]
   1d01c:	pop	{fp, pc}
   1d020:	mov	r0, r2
   1d024:	b	1cff8 <rb_dlinkAddTail+0x44>
   1d028:	ldr	r0, [pc, #88]	; 1d088 <rb_dlinkAddTail+0xd4>
   1d02c:	add	r0, pc, r0
   1d030:	ldr	r1, [pc, #84]	; 1d08c <rb_dlinkAddTail+0xd8>
   1d034:	add	r1, pc, r1
   1d038:	ldr	r3, [pc, #80]	; 1d090 <rb_dlinkAddTail+0xdc>
   1d03c:	add	r3, pc, r3
   1d040:	mov	r2, #211	; 0xd3
   1d044:	bl	e7e0 <__assert_fail@plt>
   1d048:	ldr	r0, [pc, #68]	; 1d094 <rb_dlinkAddTail+0xe0>
   1d04c:	add	r0, pc, r0
   1d050:	ldr	r1, [pc, #64]	; 1d098 <rb_dlinkAddTail+0xe4>
   1d054:	add	r1, pc, r1
   1d058:	ldr	r3, [pc, #60]	; 1d09c <rb_dlinkAddTail+0xe8>
   1d05c:	add	r3, pc, r3
   1d060:	mov	r2, #212	; 0xd4
   1d064:	bl	e7e0 <__assert_fail@plt>
   1d068:	ldr	r0, [pc, #48]	; 1d0a0 <rb_dlinkAddTail+0xec>
   1d06c:	add	r0, pc, r0
   1d070:	ldr	r1, [pc, #44]	; 1d0a4 <rb_dlinkAddTail+0xf0>
   1d074:	add	r1, pc, r1
   1d078:	ldr	r3, [pc, #40]	; 1d0a8 <rb_dlinkAddTail+0xf4>
   1d07c:	add	r3, pc, r3
   1d080:	mov	r2, #213	; 0xd5
   1d084:	bl	e7e0 <__assert_fail@plt>
   1d088:	.word	0x00023580
   1d08c:	.word	0x00023582
   1d090:	.word	0x00023596
   1d094:	.word	0x00028df9
   1d098:	.word	0x00023562
   1d09c:	.word	0x00023576
   1d0a0:	.word	0x000235a5
   1d0a4:	.word	0x00023542
   1d0a8:	.word	0x00023556

0001d0ac <remove_hook>:
   1d0ac:	push	{r4, sl, fp, lr}
   1d0b0:	add	fp, sp, #8
   1d0b4:	mov	r4, r1
   1d0b8:	bl	1cccc <find_hook>
   1d0bc:	cmp	r0, #0
   1d0c0:	blt	1d104 <remove_hook+0x58>
   1d0c4:	ldr	r1, [pc, #60]	; 1d108 <remove_hook+0x5c>
   1d0c8:	ldr	r1, [pc, r1]
   1d0cc:	ldr	r1, [r1]
   1d0d0:	add	r1, r1, r0, lsl #4
   1d0d4:	ldr	r0, [r1, #4]
   1d0d8:	b	1d0e0 <remove_hook+0x34>
   1d0dc:	ldr	r0, [r0, #8]
   1d0e0:	cmp	r0, #0
   1d0e4:	popeq	{r4, sl, fp, pc}
   1d0e8:	ldr	r2, [r0]
   1d0ec:	ldr	r2, [r2, #12]
   1d0f0:	cmp	r2, r4
   1d0f4:	bne	1d0dc <remove_hook+0x30>
   1d0f8:	add	r1, r1, #4
   1d0fc:	pop	{r4, sl, fp, lr}
   1d100:	b	1d10c <rb_dlinkDelete>
   1d104:	pop	{r4, sl, fp, pc}
   1d108:	.word	0x0003d988

0001d10c <rb_dlinkDelete>:
   1d10c:	push	{fp, lr}
   1d110:	mov	fp, sp
   1d114:	cmp	r0, #0
   1d118:	beq	1d16c <rb_dlinkDelete+0x60>
   1d11c:	cmp	r1, #0
   1d120:	beq	1d18c <rb_dlinkDelete+0x80>
   1d124:	ldr	ip, [r0, #4]
   1d128:	ldr	r3, [r0, #8]
   1d12c:	add	r2, r3, #4
   1d130:	cmp	r3, #0
   1d134:	addeq	r2, r1, #4
   1d138:	str	ip, [r2]
   1d13c:	ldmib	r0, {r2, ip}
   1d140:	cmp	r2, #0
   1d144:	mov	r3, r1
   1d148:	addne	r3, r2, #8
   1d14c:	str	ip, [r3]
   1d150:	mov	r2, #0
   1d154:	str	r2, [r0, #4]
   1d158:	str	r2, [r0, #8]
   1d15c:	ldr	r0, [r1, #8]
   1d160:	sub	r0, r0, #1
   1d164:	str	r0, [r1, #8]
   1d168:	pop	{fp, pc}
   1d16c:	ldr	r0, [pc, #56]	; 1d1ac <rb_dlinkDelete+0xa0>
   1d170:	add	r0, pc, r0
   1d174:	ldr	r1, [pc, #52]	; 1d1b0 <rb_dlinkDelete+0xa4>
   1d178:	add	r1, pc, r1
   1d17c:	ldr	r3, [pc, #48]	; 1d1b4 <rb_dlinkDelete+0xa8>
   1d180:	add	r3, pc, r3
   1d184:	mov	r2, #235	; 0xeb
   1d188:	bl	e7e0 <__assert_fail@plt>
   1d18c:	ldr	r0, [pc, #36]	; 1d1b8 <rb_dlinkDelete+0xac>
   1d190:	add	r0, pc, r0
   1d194:	ldr	r1, [pc, #32]	; 1d1bc <rb_dlinkDelete+0xb0>
   1d198:	add	r1, pc, r1
   1d19c:	ldr	r3, [pc, #28]	; 1d1c0 <rb_dlinkDelete+0xb4>
   1d1a0:	add	r3, pc, r3
   1d1a4:	mov	r2, #236	; 0xec
   1d1a8:	bl	e7e0 <__assert_fail@plt>
   1d1ac:	.word	0x0002343c
   1d1b0:	.word	0x0002343e
   1d1b4:	.word	0x000234d9
   1d1b8:	.word	0x00028cb5
   1d1bc:	.word	0x0002341e
   1d1c0:	.word	0x000234b9

0001d1c4 <call_hook>:
   1d1c4:	push	{r4, r5, fp, lr}
   1d1c8:	add	fp, sp, #8
   1d1cc:	mov	r4, r1
   1d1d0:	ldr	r1, [pc, #48]	; 1d208 <call_hook+0x44>
   1d1d4:	ldr	r1, [pc, r1]
   1d1d8:	ldr	r1, [r1]
   1d1dc:	add	r0, r1, r0, lsl #4
   1d1e0:	ldr	r5, [r0, #4]
   1d1e4:	b	1d1fc <call_hook+0x38>
   1d1e8:	ldr	r0, [r5]
   1d1ec:	ldr	r1, [r0, #12]
   1d1f0:	mov	r0, r4
   1d1f4:	blx	r1
   1d1f8:	ldr	r5, [r5, #8]
   1d1fc:	cmp	r5, #0
   1d200:	popeq	{r4, r5, fp, pc}
   1d204:	b	1d1e8 <call_hook+0x24>
   1d208:	.word	0x0003d87c

0001d20c <grow_hooktable>:
   1d20c:	push	{r4, r5, r6, r7, fp, lr}
   1d210:	add	fp, sp, #16
   1d214:	ldr	r6, [pc, #88]	; 1d274 <grow_hooktable+0x68>
   1d218:	ldr	r6, [pc, r6]
   1d21c:	ldr	r0, [r6]
   1d220:	mov	r1, #16000	; 0x3e80
   1d224:	add	r0, r1, r0, lsl #4
   1d228:	bl	1cc44 <rb_malloc>
   1d22c:	mov	r4, r0
   1d230:	ldr	r7, [pc, #64]	; 1d278 <grow_hooktable+0x6c>
   1d234:	ldr	r7, [pc, r7]
   1d238:	ldr	r5, [r7]
   1d23c:	ldr	r0, [pc, #56]	; 1d27c <grow_hooktable+0x70>
   1d240:	ldr	r0, [pc, r0]
   1d244:	ldr	r0, [r0]
   1d248:	lsl	r2, r0, #4
   1d24c:	mov	r0, r4
   1d250:	mov	r1, r5
   1d254:	bl	d40c <memcpy@plt>
   1d258:	mov	r0, r5
   1d25c:	bl	1d280 <rb_free>
   1d260:	str	r4, [r7]
   1d264:	ldr	r0, [r6]
   1d268:	add	r0, r0, #1000	; 0x3e8
   1d26c:	str	r0, [r6]
   1d270:	pop	{r4, r5, r6, r7, fp, pc}
   1d274:	.word	0x0003d854
   1d278:	.word	0x0003d81c
   1d27c:	.word	0x0003d6c0

0001d280 <rb_free>:
   1d280:	cmp	r0, #0
   1d284:	bxeq	lr
   1d288:	b	d328 <free@plt>

0001d28c <rb_dlinkAdd>:
   1d28c:	push	{fp, lr}
   1d290:	mov	fp, sp
   1d294:	cmp	r0, #0
   1d298:	beq	1d2f8 <rb_dlinkAdd+0x6c>
   1d29c:	cmp	r1, #0
   1d2a0:	beq	1d318 <rb_dlinkAdd+0x8c>
   1d2a4:	cmp	r2, #0
   1d2a8:	beq	1d338 <rb_dlinkAdd+0xac>
   1d2ac:	mov	r3, #0
   1d2b0:	stm	r1, {r0, r3}
   1d2b4:	ldr	r0, [r2]
   1d2b8:	str	r0, [r1, #8]
   1d2bc:	ldr	r0, [r2]
   1d2c0:	cmp	r0, #0
   1d2c4:	beq	1d2d4 <rb_dlinkAdd+0x48>
   1d2c8:	add	r0, r0, #4
   1d2cc:	str	r1, [r0]
   1d2d0:	b	1d2e4 <rb_dlinkAdd+0x58>
   1d2d4:	mov	r0, r2
   1d2d8:	ldr	r3, [r0, #4]!
   1d2dc:	cmp	r3, #0
   1d2e0:	streq	r1, [r0]
   1d2e4:	str	r1, [r2]
   1d2e8:	ldr	r0, [r2, #8]
   1d2ec:	add	r0, r0, #1
   1d2f0:	str	r0, [r2, #8]
   1d2f4:	pop	{fp, pc}
   1d2f8:	ldr	r0, [pc, #88]	; 1d358 <rb_dlinkAdd+0xcc>
   1d2fc:	add	r0, pc, r0
   1d300:	ldr	r1, [pc, #84]	; 1d35c <rb_dlinkAdd+0xd0>
   1d304:	add	r1, pc, r1
   1d308:	ldr	r3, [pc, #80]	; 1d360 <rb_dlinkAdd+0xd4>
   1d30c:	add	r3, pc, r3
   1d310:	mov	r2, #143	; 0x8f
   1d314:	bl	e7e0 <__assert_fail@plt>
   1d318:	ldr	r0, [pc, #68]	; 1d364 <rb_dlinkAdd+0xd8>
   1d31c:	add	r0, pc, r0
   1d320:	ldr	r1, [pc, #64]	; 1d368 <rb_dlinkAdd+0xdc>
   1d324:	add	r1, pc, r1
   1d328:	ldr	r3, [pc, #60]	; 1d36c <rb_dlinkAdd+0xe0>
   1d32c:	add	r3, pc, r3
   1d330:	mov	r2, #144	; 0x90
   1d334:	bl	e7e0 <__assert_fail@plt>
   1d338:	ldr	r0, [pc, #48]	; 1d370 <rb_dlinkAdd+0xe4>
   1d33c:	add	r0, pc, r0
   1d340:	ldr	r1, [pc, #44]	; 1d374 <rb_dlinkAdd+0xe8>
   1d344:	add	r1, pc, r1
   1d348:	ldr	r3, [pc, #40]	; 1d378 <rb_dlinkAdd+0xec>
   1d34c:	add	r3, pc, r3
   1d350:	mov	r2, #145	; 0x91
   1d354:	bl	e7e0 <__assert_fail@plt>
   1d358:	.word	0x00023315
   1d35c:	.word	0x000232b2
   1d360:	.word	0x00023312
   1d364:	.word	0x00023290
   1d368:	.word	0x00023292
   1d36c:	.word	0x000232f2
   1d370:	.word	0x00028b09
   1d374:	.word	0x00023272
   1d378:	.word	0x000232d2

0001d37c <parse_netmask>:
   1d37c:	mov	r3, #0
   1d380:	b	1d384 <_parse_netmask>

0001d384 <_parse_netmask>:
   1d384:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d388:	add	fp, sp, #24
   1d38c:	sub	sp, sp, #144	; 0x90
   1d390:	mov	r8, r3
   1d394:	mov	r7, r2
   1d398:	mov	r5, r1
   1d39c:	mov	r6, r0
   1d3a0:	bl	dc94 <strlen@plt>
   1d3a4:	add	r0, r0, #8
   1d3a8:	bic	r0, r0, #7
   1d3ac:	sub	r4, sp, r0
   1d3b0:	mov	sp, r4
   1d3b4:	mov	r0, r4
   1d3b8:	mov	r1, r6
   1d3bc:	bl	d928 <strcpy@plt>
   1d3c0:	sub	r9, fp, #160	; 0xa0
   1d3c4:	cmp	r5, #0
   1d3c8:	movne	r9, r5
   1d3cc:	sub	r5, fp, #164	; 0xa4
   1d3d0:	cmp	r7, #0
   1d3d4:	movne	r5, r7
   1d3d8:	ldr	r1, [pc, #392]	; 1d568 <_parse_netmask+0x1e4>
   1d3dc:	add	r1, pc, r1
   1d3e0:	mov	r0, r4
   1d3e4:	bl	e4c8 <strpbrk@plt>
   1d3e8:	mov	r7, #1
   1d3ec:	cmp	r0, #0
   1d3f0:	beq	1d400 <_parse_netmask+0x7c>
   1d3f4:	mov	r0, r7
   1d3f8:	sub	sp, fp, #24
   1d3fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d400:	mov	r0, r4
   1d404:	mov	r1, #58	; 0x3a
   1d408:	bl	dce8 <strchr@plt>
   1d40c:	cmp	r0, #0
   1d410:	beq	1d478 <_parse_netmask+0xf4>
   1d414:	mov	r0, r4
   1d418:	mov	r1, #47	; 0x2f
   1d41c:	bl	dce8 <strchr@plt>
   1d420:	mov	r6, r0
   1d424:	mov	r0, #128	; 0x80
   1d428:	cmp	r6, #0
   1d42c:	beq	1d50c <_parse_netmask+0x188>
   1d430:	mov	r0, #0
   1d434:	strb	r0, [r6], #1
   1d438:	sub	r1, fp, #32
   1d43c:	mov	r0, r6
   1d440:	mov	r2, #10
   1d444:	bl	d118 <strtol@plt>
   1d448:	cmp	r0, #0
   1d44c:	blt	1d3f4 <_parse_netmask+0x70>
   1d450:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d454:	cmp	r1, r6
   1d458:	beq	1d3f4 <_parse_netmask+0x70>
   1d45c:	cmp	r0, #128	; 0x80
   1d460:	ble	1d4f0 <_parse_netmask+0x16c>
   1d464:	mov	r7, #0
   1d468:	cmp	r8, #0
   1d46c:	mov	r0, #128	; 0x80
   1d470:	bne	1d3f4 <_parse_netmask+0x70>
   1d474:	b	1d50c <_parse_netmask+0x188>
   1d478:	mov	r0, r6
   1d47c:	mov	r1, #46	; 0x2e
   1d480:	bl	dce8 <strchr@plt>
   1d484:	cmp	r0, #0
   1d488:	beq	1d3f4 <_parse_netmask+0x70>
   1d48c:	mov	r0, r4
   1d490:	mov	r1, #47	; 0x2f
   1d494:	bl	dce8 <strchr@plt>
   1d498:	mov	r6, r0
   1d49c:	mov	r0, #32
   1d4a0:	cmp	r6, #0
   1d4a4:	beq	1d548 <_parse_netmask+0x1c4>
   1d4a8:	mov	r0, #0
   1d4ac:	strb	r0, [r6], #1
   1d4b0:	sub	r1, fp, #32
   1d4b4:	mov	r0, r6
   1d4b8:	mov	r2, #10
   1d4bc:	bl	d118 <strtol@plt>
   1d4c0:	cmp	r0, #0
   1d4c4:	blt	1d3f4 <_parse_netmask+0x70>
   1d4c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d4cc:	cmp	r1, r6
   1d4d0:	beq	1d3f4 <_parse_netmask+0x70>
   1d4d4:	cmp	r0, #32
   1d4d8:	ble	1d52c <_parse_netmask+0x1a8>
   1d4dc:	mov	r7, #0
   1d4e0:	cmp	r8, #0
   1d4e4:	mov	r0, #32
   1d4e8:	bne	1d3f4 <_parse_netmask+0x70>
   1d4ec:	b	1d548 <_parse_netmask+0x1c4>
   1d4f0:	ldrb	r1, [r1]
   1d4f4:	cmp	r1, #0
   1d4f8:	movne	r0, #128	; 0x80
   1d4fc:	beq	1d50c <_parse_netmask+0x188>
   1d500:	mov	r7, #0
   1d504:	cmp	r8, #0
   1d508:	bne	1d3f4 <_parse_netmask+0x70>
   1d50c:	str	r0, [r5]
   1d510:	mov	r0, r4
   1d514:	mov	r1, r9
   1d518:	bl	e000 <rb_inet_pton_sock@plt>
   1d51c:	mov	r7, #1
   1d520:	cmp	r0, #0
   1d524:	movwgt	r7, #3
   1d528:	b	1d3f4 <_parse_netmask+0x70>
   1d52c:	ldrb	r1, [r1]
   1d530:	cmp	r1, #0
   1d534:	movne	r0, #32
   1d538:	beq	1d548 <_parse_netmask+0x1c4>
   1d53c:	mov	r7, #0
   1d540:	cmp	r8, #0
   1d544:	bne	1d3f4 <_parse_netmask+0x70>
   1d548:	str	r0, [r5]
   1d54c:	mov	r0, r4
   1d550:	mov	r1, r9
   1d554:	bl	e000 <rb_inet_pton_sock@plt>
   1d558:	mov	r7, #1
   1d55c:	cmp	r0, #0
   1d560:	movwgt	r7, #2
   1d564:	b	1d3f4 <_parse_netmask+0x70>
   1d568:	.word	0x000245cf

0001d56c <parse_netmask_strict>:
   1d56c:	mov	r3, #1
   1d570:	b	1d384 <_parse_netmask>

0001d574 <init_host_hash>:
   1d574:	ldr	r0, [pc, #12]	; 1d588 <init_host_hash+0x14>
   1d578:	ldr	r0, [pc, r0]
   1d57c:	mov	r1, #0
   1d580:	mov	r2, #16384	; 0x4000
   1d584:	b	df28 <memset@plt>
   1d588:	.word	0x0003d400

0001d58c <find_conf_by_address>:
   1d58c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d590:	add	fp, sp, #28
   1d594:	sub	sp, sp, #36	; 0x24
   1d598:	str	r2, [sp, #8]
   1d59c:	mov	r2, r1
   1d5a0:	ldr	r1, [fp, #16]
   1d5a4:	ldr	r9, [pc, #1588]	; 1dbe0 <find_conf_by_address+0x654>
   1d5a8:	add	r9, pc, r9
   1d5ac:	cmp	r1, #0
   1d5b0:	movne	r9, r1
   1d5b4:	cmp	r3, #0
   1d5b8:	stm	sp, {r0, r2}
   1d5bc:	beq	1d708 <find_conf_by_address+0x17c>
   1d5c0:	mov	r8, r3
   1d5c4:	ldr	r1, [fp, #12]
   1d5c8:	mov	sl, #0
   1d5cc:	cmp	r1, #2
   1d5d0:	mov	r3, #0
   1d5d4:	moveq	r3, r8
   1d5d8:	str	r3, [sp, #16]
   1d5dc:	cmp	r1, #10
   1d5e0:	bne	1d718 <find_conf_by_address+0x18c>
   1d5e4:	ldr	r1, [fp, #8]
   1d5e8:	mov	r5, r9
   1d5ec:	cmp	r1, #64	; 0x40
   1d5f0:	bne	1d614 <find_conf_by_address+0x88>
   1d5f4:	add	r4, sp, #20
   1d5f8:	mov	r0, r8
   1d5fc:	mov	r1, r4
   1d600:	bl	d88c <rb_ipv4_from_ipv6@plt>
   1d604:	cmp	r0, #0
   1d608:	ldr	r0, [sp, #16]
   1d60c:	movne	r0, r4
   1d610:	str	r0, [sp, #16]
   1d614:	ldr	r0, [fp, #8]
   1d618:	and	r6, r0, #1
   1d61c:	bic	r7, r0, #1
   1d620:	mov	r0, #0
   1d624:	str	r0, [sp, #12]
   1d628:	mov	r4, #128	; 0x80
   1d62c:	mov	sl, #0
   1d630:	mov	r0, r8
   1d634:	mov	r1, r4
   1d638:	bl	1dbf4 <hash_ipv6>
   1d63c:	ldr	r1, [pc, #1440]	; 1dbe4 <find_conf_by_address+0x658>
   1d640:	ldr	r1, [pc, r1]
   1d644:	ldr	r9, [r1, r0, lsl #2]
   1d648:	cmp	r9, #0
   1d64c:	bne	1d6d0 <find_conf_by_address+0x144>
   1d650:	b	1d6f0 <find_conf_by_address+0x164>
   1d654:	ldr	r2, [r9, #132]	; 0x84
   1d658:	add	r1, r9, #4
   1d65c:	mov	r0, r8
   1d660:	bl	d034 <comp_with_mask_sock@plt>
   1d664:	cmp	r0, #0
   1d668:	beq	1d6e4 <find_conf_by_address+0x158>
   1d66c:	cmp	r6, #0
   1d670:	bne	1d688 <find_conf_by_address+0xfc>
   1d674:	ldr	r0, [r9, #144]	; 0x90
   1d678:	mov	r1, r5
   1d67c:	bl	e114 <match@plt>
   1d680:	cmp	r0, #0
   1d684:	beq	1d6e4 <find_conf_by_address+0x158>
   1d688:	ldr	r0, [fp, #8]
   1d68c:	cmp	r0, #2
   1d690:	bne	1d6b8 <find_conf_by_address+0x12c>
   1d694:	ldr	r0, [r9, #148]	; 0x94
   1d698:	cmp	r0, #0
   1d69c:	beq	1d6b8 <find_conf_by_address+0x12c>
   1d6a0:	ldr	r1, [fp, #20]
   1d6a4:	cmp	r1, #0
   1d6a8:	beq	1d6e4 <find_conf_by_address+0x158>
   1d6ac:	bl	e114 <match@plt>
   1d6b0:	cmp	r0, #0
   1d6b4:	beq	1d6e4 <find_conf_by_address+0x158>
   1d6b8:	ldr	r0, [r9, #140]	; 0x8c
   1d6bc:	cmp	r0, sl
   1d6c0:	ldrhi	r1, [r9, #152]	; 0x98
   1d6c4:	strhi	r1, [sp, #12]
   1d6c8:	movhi	sl, r0
   1d6cc:	b	1d6e4 <find_conf_by_address+0x158>
   1d6d0:	ldr	r0, [r9, #136]	; 0x88
   1d6d4:	cmp	r0, r7
   1d6d8:	ldreq	r0, [r9]
   1d6dc:	cmpeq	r0, #3
   1d6e0:	beq	1d654 <find_conf_by_address+0xc8>
   1d6e4:	ldr	r9, [r9, #156]	; 0x9c
   1d6e8:	cmp	r9, #0
   1d6ec:	bne	1d6d0 <find_conf_by_address+0x144>
   1d6f0:	sub	r0, r4, #16
   1d6f4:	cmp	r4, #0
   1d6f8:	mov	r4, r0
   1d6fc:	bne	1d630 <find_conf_by_address+0xa4>
   1d700:	mov	r9, r5
   1d704:	b	1d720 <find_conf_by_address+0x194>
   1d708:	mov	sl, #0
   1d70c:	mov	r0, #0
   1d710:	str	r0, [sp, #12]
   1d714:	b	1d80c <find_conf_by_address+0x280>
   1d718:	mov	r0, #0
   1d71c:	str	r0, [sp, #12]
   1d720:	ldr	r0, [sp, #16]
   1d724:	cmp	r0, #0
   1d728:	beq	1d80c <find_conf_by_address+0x280>
   1d72c:	ldr	r0, [fp, #8]
   1d730:	and	r6, r0, #1
   1d734:	bic	r7, r0, #1
   1d738:	mov	r4, #32
   1d73c:	ldr	r8, [pc, #1188]	; 1dbe8 <find_conf_by_address+0x65c>
   1d740:	ldr	r8, [pc, r8]
   1d744:	ldr	r0, [sp, #16]
   1d748:	mov	r1, r4
   1d74c:	bl	1dc58 <hash_ipv4>
   1d750:	ldr	r5, [r8, r0, lsl #2]
   1d754:	cmp	r5, #0
   1d758:	bne	1d7dc <find_conf_by_address+0x250>
   1d75c:	b	1d7fc <find_conf_by_address+0x270>
   1d760:	ldr	r2, [r5, #132]	; 0x84
   1d764:	add	r1, r5, #4
   1d768:	ldr	r0, [sp, #16]
   1d76c:	bl	d034 <comp_with_mask_sock@plt>
   1d770:	cmp	r0, #0
   1d774:	beq	1d7f0 <find_conf_by_address+0x264>
   1d778:	cmp	r6, #0
   1d77c:	bne	1d794 <find_conf_by_address+0x208>
   1d780:	ldr	r0, [r5, #144]	; 0x90
   1d784:	mov	r1, r9
   1d788:	bl	e114 <match@plt>
   1d78c:	cmp	r0, #0
   1d790:	beq	1d7f0 <find_conf_by_address+0x264>
   1d794:	ldr	r0, [fp, #8]
   1d798:	cmp	r0, #2
   1d79c:	bne	1d7c4 <find_conf_by_address+0x238>
   1d7a0:	ldr	r0, [r5, #148]	; 0x94
   1d7a4:	cmp	r0, #0
   1d7a8:	beq	1d7c4 <find_conf_by_address+0x238>
   1d7ac:	ldr	r1, [fp, #20]
   1d7b0:	cmp	r1, #0
   1d7b4:	beq	1d7f0 <find_conf_by_address+0x264>
   1d7b8:	bl	e114 <match@plt>
   1d7bc:	cmp	r0, #0
   1d7c0:	beq	1d7f0 <find_conf_by_address+0x264>
   1d7c4:	ldr	r0, [r5, #140]	; 0x8c
   1d7c8:	cmp	r0, sl
   1d7cc:	ldrhi	r1, [r5, #152]	; 0x98
   1d7d0:	strhi	r1, [sp, #12]
   1d7d4:	movhi	sl, r0
   1d7d8:	b	1d7f0 <find_conf_by_address+0x264>
   1d7dc:	ldr	r0, [r5, #136]	; 0x88
   1d7e0:	cmp	r0, r7
   1d7e4:	ldreq	r0, [r5]
   1d7e8:	cmpeq	r0, #2
   1d7ec:	beq	1d760 <find_conf_by_address+0x1d4>
   1d7f0:	ldr	r5, [r5, #156]	; 0x9c
   1d7f4:	cmp	r5, #0
   1d7f8:	bne	1d7dc <find_conf_by_address+0x250>
   1d7fc:	sub	r0, r4, #8
   1d800:	cmp	r4, #0
   1d804:	mov	r4, r0
   1d808:	bne	1d744 <find_conf_by_address+0x1b8>
   1d80c:	ldr	r4, [sp, #8]
   1d810:	cmp	r4, #0
   1d814:	beq	1d9f0 <find_conf_by_address+0x464>
   1d818:	ldr	r0, [fp, #8]
   1d81c:	and	r1, r0, #1
   1d820:	str	r1, [sp, #16]
   1d824:	bic	r5, r0, #1
   1d828:	ldr	r8, [pc, #956]	; 1dbec <find_conf_by_address+0x660>
   1d82c:	ldr	r8, [pc, r8]
   1d830:	ldr	r7, [fp, #20]
   1d834:	mov	r0, r4
   1d838:	bl	1dc94 <hash_text>
   1d83c:	ldr	r6, [r8, r0, lsl #2]
   1d840:	cmp	r6, #0
   1d844:	bne	1d8d0 <find_conf_by_address+0x344>
   1d848:	b	1d8f0 <find_conf_by_address+0x364>
   1d84c:	ldr	r0, [r6, #140]	; 0x8c
   1d850:	cmp	r0, sl
   1d854:	bls	1d8e4 <find_conf_by_address+0x358>
   1d858:	ldr	r0, [r6, #4]
   1d85c:	ldr	r1, [sp, #8]
   1d860:	bl	e114 <match@plt>
   1d864:	cmp	r0, #0
   1d868:	beq	1d8e4 <find_conf_by_address+0x358>
   1d86c:	ldr	r0, [fp, #8]
   1d870:	cmp	r0, #2
   1d874:	bne	1d8a0 <find_conf_by_address+0x314>
   1d878:	ldr	r0, [r6, #148]	; 0x94
   1d87c:	cmp	r0, #0
   1d880:	beq	1d8ac <find_conf_by_address+0x320>
   1d884:	cmp	r7, #0
   1d888:	beq	1d8e4 <find_conf_by_address+0x358>
   1d88c:	mov	r1, r7
   1d890:	bl	e114 <match@plt>
   1d894:	cmp	r0, #0
   1d898:	bne	1d8ac <find_conf_by_address+0x320>
   1d89c:	b	1d8e4 <find_conf_by_address+0x358>
   1d8a0:	ldr	r0, [sp, #16]
   1d8a4:	cmp	r0, #0
   1d8a8:	bne	1d8c0 <find_conf_by_address+0x334>
   1d8ac:	ldr	r0, [r6, #144]	; 0x90
   1d8b0:	mov	r1, r9
   1d8b4:	bl	e114 <match@plt>
   1d8b8:	cmp	r0, #0
   1d8bc:	beq	1d8e4 <find_conf_by_address+0x358>
   1d8c0:	ldr	sl, [r6, #140]	; 0x8c
   1d8c4:	ldr	r0, [r6, #152]	; 0x98
   1d8c8:	str	r0, [sp, #12]
   1d8cc:	b	1d8e4 <find_conf_by_address+0x358>
   1d8d0:	ldr	r0, [r6, #136]	; 0x88
   1d8d4:	cmp	r0, r5
   1d8d8:	ldreq	r0, [r6]
   1d8dc:	cmpeq	r0, #1
   1d8e0:	beq	1d84c <find_conf_by_address+0x2c0>
   1d8e4:	ldr	r6, [r6, #156]	; 0x9c
   1d8e8:	cmp	r6, #0
   1d8ec:	bne	1d8d0 <find_conf_by_address+0x344>
   1d8f0:	mov	r0, r4
   1d8f4:	mov	r1, #46	; 0x2e
   1d8f8:	bl	dce8 <strchr@plt>
   1d8fc:	add	r4, r0, #1
   1d900:	cmp	r0, #0
   1d904:	bne	1d834 <find_conf_by_address+0x2a8>
   1d908:	ldr	r4, [r8]
   1d90c:	cmp	r4, #0
   1d910:	ldr	r6, [sp]
   1d914:	beq	1d9e4 <find_conf_by_address+0x458>
   1d918:	ldr	r8, [sp, #8]
   1d91c:	b	1d9c4 <find_conf_by_address+0x438>
   1d920:	ldr	r0, [r4, #140]	; 0x8c
   1d924:	cmp	r0, sl
   1d928:	bls	1d9d8 <find_conf_by_address+0x44c>
   1d92c:	ldr	r0, [r4, #4]
   1d930:	mov	r1, r8
   1d934:	bl	e114 <match@plt>
   1d938:	cmp	r0, #0
   1d93c:	beq	1d974 <find_conf_by_address+0x3e8>
   1d940:	ldr	r0, [fp, #8]
   1d944:	cmp	r0, #2
   1d948:	bne	1d994 <find_conf_by_address+0x408>
   1d94c:	ldr	r0, [r4, #148]	; 0x94
   1d950:	cmp	r0, #0
   1d954:	beq	1d9a0 <find_conf_by_address+0x414>
   1d958:	cmp	r7, #0
   1d95c:	beq	1d9d8 <find_conf_by_address+0x44c>
   1d960:	mov	r1, r7
   1d964:	bl	e114 <match@plt>
   1d968:	cmp	r0, #0
   1d96c:	bne	1d9a0 <find_conf_by_address+0x414>
   1d970:	b	1d9d8 <find_conf_by_address+0x44c>
   1d974:	ldr	r1, [sp, #4]
   1d978:	cmp	r1, #0
   1d97c:	beq	1d9d8 <find_conf_by_address+0x44c>
   1d980:	ldr	r0, [r4, #4]
   1d984:	bl	e114 <match@plt>
   1d988:	cmp	r0, #0
   1d98c:	bne	1d940 <find_conf_by_address+0x3b4>
   1d990:	b	1d9d8 <find_conf_by_address+0x44c>
   1d994:	ldr	r0, [sp, #16]
   1d998:	cmp	r0, #0
   1d99c:	bne	1d9b4 <find_conf_by_address+0x428>
   1d9a0:	ldr	r0, [r4, #144]	; 0x90
   1d9a4:	mov	r1, r9
   1d9a8:	bl	e114 <match@plt>
   1d9ac:	cmp	r0, #0
   1d9b0:	beq	1d9d8 <find_conf_by_address+0x44c>
   1d9b4:	ldr	sl, [r4, #140]	; 0x8c
   1d9b8:	ldr	r0, [r4, #152]	; 0x98
   1d9bc:	str	r0, [sp, #12]
   1d9c0:	b	1d9d8 <find_conf_by_address+0x44c>
   1d9c4:	ldr	r0, [r4, #136]	; 0x88
   1d9c8:	cmp	r0, r5
   1d9cc:	ldreq	r0, [r4]
   1d9d0:	cmpeq	r0, #1
   1d9d4:	beq	1d920 <find_conf_by_address+0x394>
   1d9d8:	ldr	r4, [r4, #156]	; 0x9c
   1d9dc:	cmp	r4, #0
   1d9e0:	bne	1d9c4 <find_conf_by_address+0x438>
   1d9e4:	cmp	r6, #0
   1d9e8:	bne	1d9fc <find_conf_by_address+0x470>
   1d9ec:	b	1dbd0 <find_conf_by_address+0x644>
   1d9f0:	ldr	r6, [sp]
   1d9f4:	cmp	r6, #0
   1d9f8:	beq	1dbd0 <find_conf_by_address+0x644>
   1d9fc:	mov	r8, r9
   1da00:	ldr	r0, [fp, #8]
   1da04:	and	r1, r0, #1
   1da08:	str	r1, [sp, #16]
   1da0c:	bic	r7, r0, #1
   1da10:	ldr	r5, [pc, #472]	; 1dbf0 <find_conf_by_address+0x664>
   1da14:	ldr	r5, [pc, r5]
   1da18:	mov	r9, r6
   1da1c:	mov	r4, r6
   1da20:	mov	r0, r4
   1da24:	bl	1dc94 <hash_text>
   1da28:	ldr	r6, [r5, r0, lsl #2]
   1da2c:	cmp	r6, #0
   1da30:	bne	1dabc <find_conf_by_address+0x530>
   1da34:	b	1dadc <find_conf_by_address+0x550>
   1da38:	ldr	r0, [r6, #140]	; 0x8c
   1da3c:	cmp	r0, sl
   1da40:	bls	1dad0 <find_conf_by_address+0x544>
   1da44:	ldr	r0, [r6, #4]
   1da48:	mov	r1, r9
   1da4c:	bl	e114 <match@plt>
   1da50:	cmp	r0, #0
   1da54:	beq	1dad0 <find_conf_by_address+0x544>
   1da58:	ldr	r0, [fp, #8]
   1da5c:	cmp	r0, #2
   1da60:	bne	1da8c <find_conf_by_address+0x500>
   1da64:	ldr	r0, [r6, #148]	; 0x94
   1da68:	cmp	r0, #0
   1da6c:	beq	1da98 <find_conf_by_address+0x50c>
   1da70:	ldr	r1, [fp, #20]
   1da74:	cmp	r1, #0
   1da78:	beq	1dad0 <find_conf_by_address+0x544>
   1da7c:	bl	e114 <match@plt>
   1da80:	cmp	r0, #0
   1da84:	bne	1da98 <find_conf_by_address+0x50c>
   1da88:	b	1dad0 <find_conf_by_address+0x544>
   1da8c:	ldr	r0, [sp, #16]
   1da90:	cmp	r0, #0
   1da94:	bne	1daac <find_conf_by_address+0x520>
   1da98:	ldr	r0, [r6, #144]	; 0x90
   1da9c:	mov	r1, r8
   1daa0:	bl	e114 <match@plt>
   1daa4:	cmp	r0, #0
   1daa8:	beq	1dad0 <find_conf_by_address+0x544>
   1daac:	ldr	sl, [r6, #140]	; 0x8c
   1dab0:	ldr	r0, [r6, #152]	; 0x98
   1dab4:	str	r0, [sp, #12]
   1dab8:	b	1dad0 <find_conf_by_address+0x544>
   1dabc:	ldr	r0, [r6, #136]	; 0x88
   1dac0:	cmp	r0, r7
   1dac4:	ldreq	r0, [r6]
   1dac8:	cmpeq	r0, #1
   1dacc:	beq	1da38 <find_conf_by_address+0x4ac>
   1dad0:	ldr	r6, [r6, #156]	; 0x9c
   1dad4:	cmp	r6, #0
   1dad8:	bne	1dabc <find_conf_by_address+0x530>
   1dadc:	mov	r0, r4
   1dae0:	mov	r1, #46	; 0x2e
   1dae4:	bl	dce8 <strchr@plt>
   1dae8:	add	r4, r0, #1
   1daec:	cmp	r0, #0
   1daf0:	bne	1da20 <find_conf_by_address+0x494>
   1daf4:	ldr	r4, [r5]
   1daf8:	cmp	r4, #0
   1dafc:	ldr	r6, [sp, #4]
   1db00:	beq	1dbd0 <find_conf_by_address+0x644>
   1db04:	ldr	r5, [sp, #12]
   1db08:	b	1dbac <find_conf_by_address+0x620>
   1db0c:	ldr	r0, [r4, #140]	; 0x8c
   1db10:	cmp	r0, sl
   1db14:	bls	1dbc0 <find_conf_by_address+0x634>
   1db18:	ldr	r0, [r4, #4]
   1db1c:	mov	r1, r9
   1db20:	bl	e114 <match@plt>
   1db24:	cmp	r0, #0
   1db28:	beq	1db60 <find_conf_by_address+0x5d4>
   1db2c:	ldr	r0, [fp, #8]
   1db30:	cmp	r0, #2
   1db34:	bne	1db80 <find_conf_by_address+0x5f4>
   1db38:	ldr	r0, [r4, #148]	; 0x94
   1db3c:	cmp	r0, #0
   1db40:	beq	1db8c <find_conf_by_address+0x600>
   1db44:	ldr	r1, [fp, #20]
   1db48:	cmp	r1, #0
   1db4c:	beq	1dbc0 <find_conf_by_address+0x634>
   1db50:	bl	e114 <match@plt>
   1db54:	cmp	r0, #0
   1db58:	bne	1db8c <find_conf_by_address+0x600>
   1db5c:	b	1dbc0 <find_conf_by_address+0x634>
   1db60:	cmp	r6, #0
   1db64:	beq	1dbc0 <find_conf_by_address+0x634>
   1db68:	ldr	r0, [r4, #4]
   1db6c:	mov	r1, r6
   1db70:	bl	e114 <match@plt>
   1db74:	cmp	r0, #0
   1db78:	bne	1db2c <find_conf_by_address+0x5a0>
   1db7c:	b	1dbc0 <find_conf_by_address+0x634>
   1db80:	ldr	r0, [sp, #16]
   1db84:	cmp	r0, #0
   1db88:	bne	1dba0 <find_conf_by_address+0x614>
   1db8c:	ldr	r0, [r4, #144]	; 0x90
   1db90:	mov	r1, r8
   1db94:	bl	e114 <match@plt>
   1db98:	cmp	r0, #0
   1db9c:	beq	1dbc0 <find_conf_by_address+0x634>
   1dba0:	ldr	sl, [r4, #140]	; 0x8c
   1dba4:	ldr	r5, [r4, #152]	; 0x98
   1dba8:	b	1dbc0 <find_conf_by_address+0x634>
   1dbac:	ldr	r0, [r4, #136]	; 0x88
   1dbb0:	cmp	r0, r7
   1dbb4:	ldreq	r0, [r4]
   1dbb8:	cmpeq	r0, #1
   1dbbc:	beq	1db0c <find_conf_by_address+0x580>
   1dbc0:	ldr	r4, [r4, #156]	; 0x9c
   1dbc4:	cmp	r4, #0
   1dbc8:	bne	1dbac <find_conf_by_address+0x620>
   1dbcc:	b	1dbd4 <find_conf_by_address+0x648>
   1dbd0:	ldr	r5, [sp, #12]
   1dbd4:	mov	r0, r5
   1dbd8:	sub	sp, fp, #28
   1dbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbe0:	.word	0x0002825d
   1dbe4:	.word	0x0003d338
   1dbe8:	.word	0x0003d238
   1dbec:	.word	0x0003d14c
   1dbf0:	.word	0x0003cf64

0001dbf4 <hash_ipv6>:
   1dbf4:	push	{fp, lr}
   1dbf8:	mov	fp, sp
   1dbfc:	mov	ip, r0
   1dc00:	add	lr, r0, #8
   1dc04:	mov	r3, #0
   1dc08:	mov	r0, #0
   1dc0c:	cmp	r1, #8
   1dc10:	blt	1dc30 <hash_ipv6+0x3c>
   1dc14:	ldrb	r2, [lr, r3]
   1dc18:	eor	r0, r0, r2
   1dc1c:	add	r3, r3, #1
   1dc20:	sub	r1, r1, #8
   1dc24:	cmp	r3, #16
   1dc28:	bcc	1dc0c <hash_ipv6+0x18>
   1dc2c:	b	1dc50 <hash_ipv6+0x5c>
   1dc30:	cmp	r1, #0
   1dc34:	beq	1dc50 <hash_ipv6+0x5c>
   1dc38:	add	r2, ip, r3
   1dc3c:	ldrb	r2, [r2, #8]
   1dc40:	rsb	r1, r1, #8
   1dc44:	mvn	r3, #0
   1dc48:	and	r1, r2, r3, lsl r1
   1dc4c:	eor	r0, r1, r0
   1dc50:	bfc	r0, #12, #20
   1dc54:	pop	{fp, pc}

0001dc58 <hash_ipv4>:
   1dc58:	cmp	r1, #0
   1dc5c:	moveq	r0, #0
   1dc60:	bxeq	lr
   1dc64:	push	{r4, sl, fp, lr}
   1dc68:	add	fp, sp, #8
   1dc6c:	mov	r4, r1
   1dc70:	ldr	r0, [r0, #4]
   1dc74:	bl	1e718 <__bswap_32>
   1dc78:	rsb	r1, r4, #32
   1dc7c:	mvn	r2, #0
   1dc80:	and	r0, r0, r2, lsl r1
   1dc84:	eor	r1, r0, r0, lsr #12
   1dc88:	bfc	r1, #12, #20
   1dc8c:	eor	r0, r1, r0, lsr #24
   1dc90:	pop	{r4, sl, fp, pc}

0001dc94 <hash_text>:
   1dc94:	ldrb	r2, [r0]
   1dc98:	cmp	r2, #0
   1dc9c:	moveq	r0, #0
   1dca0:	bxeq	lr
   1dca4:	add	r1, r0, #1
   1dca8:	mov	r0, #0
   1dcac:	ldr	r3, [pc, #36]	; 1dcd8 <hash_text+0x44>
   1dcb0:	ldr	r3, [pc, r3]
   1dcb4:	uxtb	r2, r2
   1dcb8:	ldrb	r2, [r3, r2]
   1dcbc:	rsb	r0, r0, r0, lsl #4
   1dcc0:	sub	r0, r0, r2
   1dcc4:	ldrb	r2, [r1], #1
   1dcc8:	cmp	r2, #0
   1dccc:	bne	1dcb4 <hash_text+0x20>
   1dcd0:	bfc	r0, #12, #20
   1dcd4:	bx	lr
   1dcd8:	.word	0x0003ce2c

0001dcdc <find_address_conf>:
   1dcdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dce0:	add	fp, sp, #28
   1dce4:	sub	sp, sp, #20
   1dce8:	mov	r8, r3
   1dcec:	mov	r4, r2
   1dcf0:	mov	r9, r1
   1dcf4:	mov	sl, r0
   1dcf8:	str	r2, [sp, #8]
   1dcfc:	mov	r0, #2
   1dd00:	str	r0, [sp]
   1dd04:	ldr	r0, [fp, #16]
   1dd08:	str	r0, [sp, #12]
   1dd0c:	ldr	r0, [fp, #12]
   1dd10:	str	r0, [sp, #4]
   1dd14:	ldr	r5, [fp, #8]
   1dd18:	mov	r7, #0
   1dd1c:	mov	r0, sl
   1dd20:	mov	r2, #0
   1dd24:	mov	r3, r5
   1dd28:	bl	d2f8 <find_conf_by_address@plt>
   1dd2c:	cmp	r0, #0
   1dd30:	beq	1de7c <find_address_conf+0x1a0>
   1dd34:	mov	r6, r0
   1dd38:	ldr	r0, [r0, #4]
   1dd3c:	tst	r0, #4
   1dd40:	moveq	r8, r4
   1dd44:	tst	r0, #64	; 0x40
   1dd48:	bne	1de78 <find_address_conf+0x19c>
   1dd4c:	tst	r0, #512	; 0x200
   1dd50:	bne	1ddd0 <find_address_conf+0xf4>
   1dd54:	mov	r0, #0
   1dd58:	mov	r1, #64	; 0x40
   1dd5c:	str	r1, [sp]
   1dd60:	ldr	r1, [fp, #12]
   1dd64:	stmib	sp, {r1, r4}
   1dd68:	str	r0, [sp, #12]
   1dd6c:	mov	r0, sl
   1dd70:	mov	r1, r9
   1dd74:	mov	r2, #0
   1dd78:	mov	r3, r5
   1dd7c:	bl	d2f8 <find_conf_by_address@plt>
   1dd80:	mov	r7, r0
   1dd84:	cmp	r0, #0
   1dd88:	bne	1de7c <find_address_conf+0x1a0>
   1dd8c:	cmp	r8, r4
   1dd90:	beq	1de78 <find_address_conf+0x19c>
   1dd94:	mov	r0, #0
   1dd98:	mov	r1, #64	; 0x40
   1dd9c:	str	r1, [sp]
   1dda0:	ldr	r1, [fp, #12]
   1dda4:	stmib	sp, {r1, r8}
   1dda8:	str	r0, [sp, #12]
   1ddac:	mov	r0, sl
   1ddb0:	mov	r1, r9
   1ddb4:	mov	r2, #0
   1ddb8:	mov	r3, r5
   1ddbc:	bl	d2f8 <find_conf_by_address@plt>
   1ddc0:	mov	r7, r0
   1ddc4:	cmp	r0, #0
   1ddc8:	moveq	r7, r6
   1ddcc:	b	1de7c <find_address_conf+0x1a0>
   1ddd0:	ldr	r7, [r6, #12]
   1ddd4:	mov	r0, r7
   1ddd8:	mov	r1, #64	; 0x40
   1dddc:	bl	dce8 <strchr@plt>
   1dde0:	cmp	r0, #0
   1dde4:	beq	1de30 <find_address_conf+0x154>
   1dde8:	mov	r5, r0
   1ddec:	mov	r1, #0
   1ddf0:	strb	r1, [r0], #1
   1ddf4:	ldr	r2, [r6, #12]
   1ddf8:	mov	r3, #64	; 0x40
   1ddfc:	str	r3, [sp]
   1de00:	ldr	r3, [fp, #12]
   1de04:	str	r3, [sp, #4]
   1de08:	str	r2, [sp, #8]
   1de0c:	str	r1, [sp, #12]
   1de10:	mov	r1, #0
   1de14:	mov	r2, #0
   1de18:	mov	r3, #0
   1de1c:	bl	d2f8 <find_conf_by_address@plt>
   1de20:	mov	r7, r0
   1de24:	mov	r0, #64	; 0x40
   1de28:	strb	r0, [r5]
   1de2c:	b	1de60 <find_address_conf+0x184>
   1de30:	mov	r0, #0
   1de34:	mov	r1, #64	; 0x40
   1de38:	str	r1, [sp]
   1de3c:	ldr	r1, [fp, #12]
   1de40:	stmib	sp, {r1, r8}
   1de44:	str	r0, [sp, #12]
   1de48:	mov	r0, r7
   1de4c:	mov	r1, #0
   1de50:	mov	r2, #0
   1de54:	mov	r3, #0
   1de58:	bl	d2f8 <find_conf_by_address@plt>
   1de5c:	mov	r7, r0
   1de60:	ldr	r5, [fp, #8]
   1de64:	cmp	r7, #0
   1de68:	bne	1de7c <find_address_conf+0x1a0>
   1de6c:	ldrb	r0, [r6, #7]
   1de70:	tst	r0, #32
   1de74:	beq	1dd54 <find_address_conf+0x78>
   1de78:	mov	r7, r6
   1de7c:	mov	r0, r7
   1de80:	sub	sp, fp, #28
   1de84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001de88 <find_dline>:
   1de88:	push	{r4, r5, r6, r7, fp, lr}
   1de8c:	add	fp, sp, #16
   1de90:	sub	sp, sp, #32
   1de94:	mov	r5, r1
   1de98:	mov	r4, r0
   1de9c:	mov	r7, #0
   1dea0:	movw	r6, #1
   1dea4:	movt	r6, #2
   1dea8:	add	r0, r6, #917504	; 0xe0000
   1deac:	stm	sp, {r0, r1, r7}
   1deb0:	str	r7, [sp, #12]
   1deb4:	mov	r0, #0
   1deb8:	mov	r1, #0
   1debc:	mov	r2, #0
   1dec0:	mov	r3, r4
   1dec4:	bl	d2f8 <find_conf_by_address@plt>
   1dec8:	cmp	r0, #0
   1decc:	bne	1def8 <find_dline+0x70>
   1ded0:	str	r6, [sp]
   1ded4:	stmib	sp, {r5, r7}
   1ded8:	str	r7, [sp, #12]
   1dedc:	mov	r0, #0
   1dee0:	mov	r1, #0
   1dee4:	mov	r2, #0
   1dee8:	mov	r3, r4
   1deec:	bl	d2f8 <find_conf_by_address@plt>
   1def0:	cmp	r0, #0
   1def4:	beq	1df00 <find_dline+0x78>
   1def8:	sub	sp, fp, #16
   1defc:	pop	{r4, r5, r6, r7, fp, pc}
   1df00:	ldrh	r0, [r4]
   1df04:	cmp	r0, #10
   1df08:	bne	1df5c <find_dline+0xd4>
   1df0c:	add	r1, sp, #16
   1df10:	mov	r0, r4
   1df14:	bl	d88c <rb_ipv4_from_ipv6@plt>
   1df18:	cmp	r0, #0
   1df1c:	beq	1df5c <find_dline+0xd4>
   1df20:	mov	r0, #0
   1df24:	mov	r1, #2
   1df28:	str	r6, [sp]
   1df2c:	str	r1, [sp, #4]
   1df30:	str	r0, [sp, #8]
   1df34:	str	r0, [sp, #12]
   1df38:	add	r3, sp, #16
   1df3c:	mov	r0, #0
   1df40:	mov	r1, #0
   1df44:	mov	r2, #0
   1df48:	bl	d2f8 <find_conf_by_address@plt>
   1df4c:	cmp	r0, #0
   1df50:	moveq	r0, #0
   1df54:	sub	sp, fp, #16
   1df58:	pop	{r4, r5, r6, r7, fp, pc}
   1df5c:	mov	r0, #0
   1df60:	sub	sp, fp, #16
   1df64:	pop	{r4, r5, r6, r7, fp, pc}

0001df68 <find_exact_conf_by_address>:
   1df68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df6c:	add	fp, sp, #28
   1df70:	sub	sp, sp, #132	; 0x84
   1df74:	mov	r4, r2
   1df78:	mov	r5, r1
   1df7c:	ldr	sl, [pc, #300]	; 1e0b0 <find_exact_conf_by_address+0x148>
   1df80:	add	sl, pc, sl
   1df84:	cmp	r0, #0
   1df88:	movne	sl, r0
   1df8c:	mov	r1, sp
   1df90:	sub	r2, fp, #32
   1df94:	mov	r0, sl
   1df98:	bl	d568 <parse_netmask@plt>
   1df9c:	mov	r7, r0
   1dfa0:	cmp	r0, #2
   1dfa4:	beq	1dfcc <find_exact_conf_by_address+0x64>
   1dfa8:	cmp	r7, #3
   1dfac:	bne	1dfe8 <find_exact_conf_by_address+0x80>
   1dfb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfb4:	asr	r1, r0, #31
   1dfb8:	add	r0, r0, r1, lsr #28
   1dfbc:	bic	r1, r0, #15
   1dfc0:	mov	r0, sp
   1dfc4:	bl	1dbf4 <hash_ipv6>
   1dfc8:	b	1dff0 <find_exact_conf_by_address+0x88>
   1dfcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfd0:	asr	r1, r0, #31
   1dfd4:	add	r0, r0, r1, lsr #29
   1dfd8:	bic	r1, r0, #7
   1dfdc:	mov	r0, sp
   1dfe0:	bl	1dc58 <hash_ipv4>
   1dfe4:	b	1dff0 <find_exact_conf_by_address+0x88>
   1dfe8:	mov	r0, sl
   1dfec:	bl	1e0b8 <get_mask_hash>
   1dff0:	ldr	r1, [pc, #188]	; 1e0b4 <find_exact_conf_by_address+0x14c>
   1dff4:	ldr	r1, [pc, r1]
   1dff8:	ldr	r6, [r1, r0, lsl #2]
   1dffc:	mov	r8, #0
   1e000:	cmp	r6, #0
   1e004:	beq	1e0a4 <find_exact_conf_by_address+0x13c>
   1e008:	mov	r9, sp
   1e00c:	ldr	r0, [r6, #136]	; 0x88
   1e010:	cmp	r0, r5
   1e014:	ldreq	r0, [r6]
   1e018:	cmpeq	r0, r7
   1e01c:	beq	1e030 <find_exact_conf_by_address+0xc8>
   1e020:	ldr	r6, [r6, #156]	; 0x9c
   1e024:	cmp	r6, #0
   1e028:	bne	1e00c <find_exact_conf_by_address+0xa4>
   1e02c:	b	1e0a4 <find_exact_conf_by_address+0x13c>
   1e030:	ldr	r0, [r6, #144]	; 0x90
   1e034:	cmp	r4, #0
   1e038:	cmpne	r0, #0
   1e03c:	bne	1e04c <find_exact_conf_by_address+0xe4>
   1e040:	cmp	r0, r4
   1e044:	bne	1e020 <find_exact_conf_by_address+0xb8>
   1e048:	b	1e05c <find_exact_conf_by_address+0xf4>
   1e04c:	mov	r1, r4
   1e050:	bl	e750 <irccmp@plt>
   1e054:	cmp	r0, #0
   1e058:	bne	1e020 <find_exact_conf_by_address+0xb8>
   1e05c:	add	r0, r6, #4
   1e060:	cmp	r7, #1
   1e064:	bne	1e080 <find_exact_conf_by_address+0x118>
   1e068:	ldr	r0, [r0]
   1e06c:	mov	r1, sl
   1e070:	bl	e750 <irccmp@plt>
   1e074:	cmp	r0, #0
   1e078:	bne	1e020 <find_exact_conf_by_address+0xb8>
   1e07c:	b	1e0a0 <find_exact_conf_by_address+0x138>
   1e080:	ldr	r1, [r6, #132]	; 0x84
   1e084:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e088:	cmp	r1, r2
   1e08c:	bne	1e020 <find_exact_conf_by_address+0xb8>
   1e090:	mov	r1, r9
   1e094:	bl	d034 <comp_with_mask_sock@plt>
   1e098:	cmp	r0, #0
   1e09c:	beq	1e020 <find_exact_conf_by_address+0xb8>
   1e0a0:	ldr	r8, [r6, #152]	; 0x98
   1e0a4:	mov	r0, r8
   1e0a8:	sub	sp, fp, #28
   1e0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e0b0:	.word	0x00023a0c
   1e0b4:	.word	0x0003c984

0001e0b8 <get_mask_hash>:
   1e0b8:	push	{r4, sl, fp, lr}
   1e0bc:	add	fp, sp, #8
   1e0c0:	mov	r4, r0
   1e0c4:	bl	dc94 <strlen@plt>
   1e0c8:	add	r0, r4, r0
   1e0cc:	sub	r1, r0, #1
   1e0d0:	cmp	r1, r4
   1e0d4:	bcc	1e114 <get_mask_hash+0x5c>
   1e0d8:	ldr	r0, [pc, #64]	; 1e120 <get_mask_hash+0x68>
   1e0dc:	add	r0, pc, r0
   1e0e0:	mov	r3, r1
   1e0e4:	ldrb	r2, [r3], #1
   1e0e8:	cmp	r2, #46	; 0x2e
   1e0ec:	beq	1e104 <get_mask_hash+0x4c>
   1e0f0:	cmp	r2, #42	; 0x2a
   1e0f4:	beq	1e118 <get_mask_hash+0x60>
   1e0f8:	cmp	r2, #63	; 0x3f
   1e0fc:	bne	1e108 <get_mask_hash+0x50>
   1e100:	b	1e118 <get_mask_hash+0x60>
   1e104:	mov	r0, r3
   1e108:	sub	r1, r1, #1
   1e10c:	cmp	r1, r4
   1e110:	bcs	1e0e0 <get_mask_hash+0x28>
   1e114:	mov	r0, r4
   1e118:	pop	{r4, sl, fp, lr}
   1e11c:	b	1dc94 <hash_text>
   1e120:	.word	0x00027729

0001e124 <add_conf_by_address>:
   1e124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e128:	add	fp, sp, #28
   1e12c:	sub	sp, sp, #4
   1e130:	mov	r8, r3
   1e134:	mov	r9, r2
   1e138:	mov	r6, r1
   1e13c:	ldr	r5, [pc, #216]	; 1e21c <add_conf_by_address+0xf8>
   1e140:	add	r5, pc, r5
   1e144:	cmp	r0, #0
   1e148:	movne	r5, r0
   1e14c:	bl	1e22c <rb_malloc>
   1e150:	mov	r7, r0
   1e154:	add	r4, r0, #4
   1e158:	mov	r2, sp
   1e15c:	mov	r0, r5
   1e160:	mov	r1, r4
   1e164:	bl	d568 <parse_netmask@plt>
   1e168:	str	r0, [r7]
   1e16c:	ldr	sl, [fp, #8]
   1e170:	cmp	r0, #2
   1e174:	beq	1e1a4 <add_conf_by_address+0x80>
   1e178:	cmp	r0, #3
   1e17c:	bne	1e1c8 <add_conf_by_address+0xa4>
   1e180:	ldr	r0, [sp]
   1e184:	str	r0, [r7, #132]	; 0x84
   1e188:	asr	r1, r0, #31
   1e18c:	add	r0, r0, r1, lsr #28
   1e190:	bic	r1, r0, #15
   1e194:	str	r1, [sp]
   1e198:	mov	r0, r4
   1e19c:	bl	1dbf4 <hash_ipv6>
   1e1a0:	b	1e1d4 <add_conf_by_address+0xb0>
   1e1a4:	ldr	r0, [sp]
   1e1a8:	str	r0, [r7, #132]	; 0x84
   1e1ac:	asr	r1, r0, #31
   1e1b0:	add	r0, r0, r1, lsr #29
   1e1b4:	bic	r1, r0, #7
   1e1b8:	str	r1, [sp]
   1e1bc:	mov	r0, r4
   1e1c0:	bl	1dc58 <hash_ipv4>
   1e1c4:	b	1e1d4 <add_conf_by_address+0xb0>
   1e1c8:	str	r5, [r4]
   1e1cc:	mov	r0, r5
   1e1d0:	bl	1e0b8 <get_mask_hash>
   1e1d4:	ldr	r1, [pc, #68]	; 1e220 <add_conf_by_address+0xfc>
   1e1d8:	ldr	r1, [pc, r1]
   1e1dc:	ldr	r2, [r1, r0, lsl #2]
   1e1e0:	str	r7, [r1, r0, lsl #2]
   1e1e4:	ldr	r0, [pc, #56]	; 1e224 <add_conf_by_address+0x100>
   1e1e8:	ldr	r0, [pc, r0]
   1e1ec:	sub	r1, r0, #1
   1e1f0:	ldr	r3, [pc, #48]	; 1e228 <add_conf_by_address+0x104>
   1e1f4:	add	r3, pc, r3
   1e1f8:	str	r1, [r3]
   1e1fc:	str	r6, [r7, #136]	; 0x88
   1e200:	str	r0, [r7, #140]	; 0x8c
   1e204:	str	r9, [r7, #144]	; 0x90
   1e208:	str	r8, [r7, #148]	; 0x94
   1e20c:	str	sl, [r7, #152]	; 0x98
   1e210:	str	r2, [r7, #156]	; 0x9c
   1e214:	sub	sp, fp, #28
   1e218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e21c:	.word	0x0002384c
   1e220:	.word	0x0003c7a0
   1e224:	.word	0x0003d1ac
   1e228:	.word	0x0003d1a0

0001e22c <rb_malloc>:
   1e22c:	push	{fp, lr}
   1e230:	mov	fp, sp
   1e234:	mov	r0, #1
   1e238:	mov	r1, #160	; 0xa0
   1e23c:	bl	cfa4 <calloc@plt>
   1e240:	cmp	r0, #0
   1e244:	popne	{fp, pc}
   1e248:	bl	d448 <rb_outofmemory@plt>

0001e24c <delete_one_address_conf>:
   1e24c:	push	{r4, r5, fp, lr}
   1e250:	add	fp, sp, #8
   1e254:	sub	sp, sp, #136	; 0x88
   1e258:	mov	r4, r1
   1e25c:	mov	r5, r0
   1e260:	add	r1, sp, #4
   1e264:	sub	r2, fp, #12
   1e268:	bl	d568 <parse_netmask@plt>
   1e26c:	cmp	r0, #2
   1e270:	beq	1e29c <delete_one_address_conf+0x50>
   1e274:	cmp	r0, #3
   1e278:	bne	1e2bc <delete_one_address_conf+0x70>
   1e27c:	ldr	r0, [fp, #-12]
   1e280:	asr	r1, r0, #31
   1e284:	add	r0, r0, r1, lsr #28
   1e288:	bic	r1, r0, #15
   1e28c:	str	r1, [fp, #-12]
   1e290:	add	r0, sp, #4
   1e294:	bl	1dbf4 <hash_ipv6>
   1e298:	b	1e2c4 <delete_one_address_conf+0x78>
   1e29c:	ldr	r0, [fp, #-12]
   1e2a0:	asr	r1, r0, #31
   1e2a4:	add	r0, r0, r1, lsr #29
   1e2a8:	bic	r1, r0, #7
   1e2ac:	str	r1, [fp, #-12]
   1e2b0:	add	r0, sp, #4
   1e2b4:	bl	1dc58 <hash_ipv4>
   1e2b8:	b	1e2c4 <delete_one_address_conf+0x78>
   1e2bc:	mov	r0, r5
   1e2c0:	bl	1e0b8 <get_mask_hash>
   1e2c4:	ldr	r1, [pc, #140]	; 1e358 <delete_one_address_conf+0x10c>
   1e2c8:	ldr	r1, [pc, r1]
   1e2cc:	ldr	r5, [r1, r0, lsl #2]!
   1e2d0:	cmp	r5, #0
   1e2d4:	beq	1e30c <delete_one_address_conf+0xc0>
   1e2d8:	ldr	r0, [r5, #152]	; 0x98
   1e2dc:	cmp	r0, r4
   1e2e0:	beq	1e314 <delete_one_address_conf+0xc8>
   1e2e4:	mov	r0, r5
   1e2e8:	ldr	r5, [r0, #156]	; 0x9c
   1e2ec:	cmp	r5, #0
   1e2f0:	beq	1e30c <delete_one_address_conf+0xc0>
   1e2f4:	ldr	r2, [r5, #152]	; 0x98
   1e2f8:	cmp	r2, r4
   1e2fc:	mov	r2, r0
   1e300:	mov	r0, r5
   1e304:	bne	1e2e8 <delete_one_address_conf+0x9c>
   1e308:	b	1e318 <delete_one_address_conf+0xcc>
   1e30c:	sub	sp, fp, #8
   1e310:	pop	{r4, r5, fp, pc}
   1e314:	mov	r2, #0
   1e318:	cmp	r2, #0
   1e31c:	addne	r1, r2, #156	; 0x9c
   1e320:	ldr	r0, [r5, #156]	; 0x9c
   1e324:	str	r0, [r1]
   1e328:	ldr	r0, [r4]
   1e32c:	ldr	r1, [r4, #8]
   1e330:	orr	r0, r0, #-2147483648	; 0x80000000
   1e334:	str	r0, [r4]
   1e338:	cmp	r1, #0
   1e33c:	bne	1e348 <delete_one_address_conf+0xfc>
   1e340:	mov	r0, r4
   1e344:	bl	dc40 <free_conf@plt>
   1e348:	mov	r0, r5
   1e34c:	bl	1e35c <rb_free>
   1e350:	sub	sp, fp, #8
   1e354:	pop	{r4, r5, fp, pc}
   1e358:	.word	0x0003c6b0

0001e35c <rb_free>:
   1e35c:	cmp	r0, #0
   1e360:	bxeq	lr
   1e364:	b	d328 <free@plt>

0001e368 <clear_out_address_conf>:
   1e368:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e36c:	add	fp, sp, #24
   1e370:	mov	r8, #0
   1e374:	ldr	r9, [pc, #144]	; 1e40c <clear_out_address_conf+0xa4>
   1e378:	ldr	r9, [pc, r9]
   1e37c:	mov	r7, #0
   1e380:	b	1e394 <clear_out_address_conf+0x2c>
   1e384:	str	r8, [r6]
   1e388:	add	r7, r7, #1
   1e38c:	cmp	r7, #4096	; 0x1000
   1e390:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e394:	mov	r6, r9
   1e398:	ldr	r4, [r6, r7, lsl #2]!
   1e39c:	cmp	r4, #0
   1e3a0:	beq	1e384 <clear_out_address_conf+0x1c>
   1e3a4:	mov	r1, r4
   1e3a8:	ldr	r5, [r1, #156]!	; 0x9c
   1e3ac:	ldr	r0, [r1, #-4]
   1e3b0:	ldrb	r2, [r0, #6]
   1e3b4:	tst	r2, #128	; 0x80
   1e3b8:	bne	1e3f4 <clear_out_address_conf+0x8c>
   1e3bc:	ldr	r2, [r4, #136]	; 0x88
   1e3c0:	cmp	r2, #2
   1e3c4:	cmpne	r2, #1048576	; 0x100000
   1e3c8:	bne	1e3f4 <clear_out_address_conf+0x8c>
   1e3cc:	ldr	r1, [r0]
   1e3d0:	ldr	r2, [r0, #8]
   1e3d4:	orr	r1, r1, #-2147483648	; 0x80000000
   1e3d8:	str	r1, [r0]
   1e3dc:	cmp	r2, #0
   1e3e0:	bne	1e3e8 <clear_out_address_conf+0x80>
   1e3e4:	bl	dc40 <free_conf@plt>
   1e3e8:	mov	r0, r4
   1e3ec:	bl	1e35c <rb_free>
   1e3f0:	b	1e3fc <clear_out_address_conf+0x94>
   1e3f4:	str	r4, [r6]
   1e3f8:	mov	r6, r1
   1e3fc:	cmp	r5, #0
   1e400:	mov	r4, r5
   1e404:	bne	1e3a4 <clear_out_address_conf+0x3c>
   1e408:	b	1e384 <clear_out_address_conf+0x1c>
   1e40c:	.word	0x0003c600

0001e410 <clear_out_address_conf_bans>:
   1e410:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e414:	add	fp, sp, #24
   1e418:	mov	r8, #0
   1e41c:	ldr	r9, [pc, #156]	; 1e4c0 <clear_out_address_conf_bans+0xb0>
   1e420:	ldr	r9, [pc, r9]
   1e424:	mov	r7, #0
   1e428:	b	1e43c <clear_out_address_conf_bans+0x2c>
   1e42c:	str	r8, [r1]
   1e430:	add	r7, r7, #1
   1e434:	cmp	r7, #4096	; 0x1000
   1e438:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e43c:	mov	r6, r9
   1e440:	ldr	r4, [r6, r7, lsl #2]!
   1e444:	cmp	r4, #0
   1e448:	bne	1e480 <clear_out_address_conf_bans+0x70>
   1e44c:	mov	r1, r6
   1e450:	b	1e42c <clear_out_address_conf_bans+0x1c>
   1e454:	ldr	r1, [r0]
   1e458:	ldr	r2, [r0, #8]
   1e45c:	orr	r1, r1, #-2147483648	; 0x80000000
   1e460:	str	r1, [r0]
   1e464:	cmp	r2, #0
   1e468:	bne	1e470 <clear_out_address_conf_bans+0x60>
   1e46c:	bl	dc40 <free_conf@plt>
   1e470:	mov	r0, r4
   1e474:	bl	1e35c <rb_free>
   1e478:	mov	r1, r6
   1e47c:	b	1e4b0 <clear_out_address_conf_bans+0xa0>
   1e480:	mov	r1, r4
   1e484:	ldr	r5, [r1, #156]!	; 0x9c
   1e488:	ldr	r0, [r1, #-4]
   1e48c:	ldrb	r2, [r0, #6]
   1e490:	tst	r2, #128	; 0x80
   1e494:	bne	1e4a8 <clear_out_address_conf_bans+0x98>
   1e498:	ldr	r2, [r4, #136]	; 0x88
   1e49c:	cmp	r2, #1048576	; 0x100000
   1e4a0:	cmpne	r2, #2
   1e4a4:	bne	1e454 <clear_out_address_conf_bans+0x44>
   1e4a8:	str	r4, [r6]
   1e4ac:	mov	r6, r1
   1e4b0:	cmp	r5, #0
   1e4b4:	mov	r4, r5
   1e4b8:	bne	1e480 <clear_out_address_conf_bans+0x70>
   1e4bc:	b	1e42c <clear_out_address_conf_bans+0x1c>
   1e4c0:	.word	0x0003c558

0001e4c4 <show_iline_prefix>:
   1e4c4:	push	{fp, lr}
   1e4c8:	mov	fp, sp
   1e4cc:	mov	ip, r2
   1e4d0:	mov	lr, r0
   1e4d4:	ldr	r2, [r1, #4]
   1e4d8:	ldr	r0, [pc, #180]	; 1e594 <show_iline_prefix+0xd0>
   1e4dc:	add	r0, pc, r0
   1e4e0:	tst	r2, #4
   1e4e4:	movne	r3, #45	; 0x2d
   1e4e8:	strbne	r3, [r0], #1
   1e4ec:	tst	r2, #8
   1e4f0:	movne	r3, #43	; 0x2b
   1e4f4:	strbne	r3, [r0], #1
   1e4f8:	tst	r2, #512	; 0x200
   1e4fc:	movne	r2, #61	; 0x3d
   1e500:	strbne	r2, [r0], #1
   1e504:	ldrb	r2, [lr, #57]	; 0x39
   1e508:	tst	r2, #16
   1e50c:	ldrbne	r2, [r1, #5]
   1e510:	tstne	r2, #64	; 0x40
   1e514:	movne	r2, #124	; 0x7c
   1e518:	strbne	r2, [r0], #1
   1e51c:	ldrb	r2, [lr, #57]	; 0x39
   1e520:	tst	r2, #16
   1e524:	beq	1e544 <show_iline_prefix+0x80>
   1e528:	ldr	r2, [r1, #4]
   1e52c:	movw	r3, #64	; 0x40
   1e530:	movt	r3, #1024	; 0x400
   1e534:	and	r2, r2, r3
   1e538:	cmp	r2, #67108864	; 0x4000000
   1e53c:	moveq	r2, #36	; 0x24
   1e540:	strbeq	r2, [r0], #1
   1e544:	ldrb	r2, [lr, #57]	; 0x39
   1e548:	tst	r2, #16
   1e54c:	ldrbne	r2, [r1, #4]
   1e550:	tstne	r2, #64	; 0x40
   1e554:	movne	r2, #94	; 0x5e
   1e558:	strbne	r2, [r0], #1
   1e55c:	ldrb	r2, [lr, #57]	; 0x39
   1e560:	tst	r2, #16
   1e564:	ldrbne	r1, [r1, #4]
   1e568:	tstne	r1, #128	; 0x80
   1e56c:	movne	r1, #62	; 0x3e
   1e570:	strbne	r1, [r0], #1
   1e574:	mov	r1, #0
   1e578:	strb	r1, [r0]
   1e57c:	mov	r1, ip
   1e580:	mov	r2, #10
   1e584:	bl	df7c <strncpy@plt>
   1e588:	ldr	r0, [pc, #8]	; 1e598 <show_iline_prefix+0xd4>
   1e58c:	add	r0, pc, r0
   1e590:	pop	{fp, pc}
   1e594:	.word	0x000477ac
   1e598:	.word	0x000476fc

0001e59c <report_auth>:
   1e59c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e5a0:	add	fp, sp, #28
   1e5a4:	sub	sp, sp, #44	; 0x2c
   1e5a8:	mov	r4, r0
   1e5ac:	mov	r8, #0
   1e5b0:	ldr	r5, [pc, #332]	; 1e704 <report_auth+0x168>
   1e5b4:	add	r5, pc, r5
   1e5b8:	b	1e5cc <report_auth+0x30>
   1e5bc:	add	r8, r8, #1
   1e5c0:	cmp	r8, #4096	; 0x1000
   1e5c4:	subeq	sp, fp, #28
   1e5c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5cc:	ldr	r0, [pc, #308]	; 1e708 <report_auth+0x16c>
   1e5d0:	ldr	r0, [pc, r0]
   1e5d4:	ldr	r7, [r0, r8, lsl #2]
   1e5d8:	cmp	r7, #0
   1e5dc:	bne	1e5f0 <report_auth+0x54>
   1e5e0:	b	1e5bc <report_auth+0x20>
   1e5e4:	ldr	r7, [r7, #156]	; 0x9c
   1e5e8:	cmp	r7, #0
   1e5ec:	beq	1e5bc <report_auth+0x20>
   1e5f0:	ldr	r0, [r7, #136]	; 0x88
   1e5f4:	cmp	r0, #2
   1e5f8:	bne	1e5e4 <report_auth+0x48>
   1e5fc:	ldr	r0, [r4, #24]
   1e600:	ldr	r6, [r7, #152]	; 0x98
   1e604:	cmp	r0, #0
   1e608:	ldrne	r0, [r0, #36]	; 0x24
   1e60c:	cmpne	r0, #0
   1e610:	bne	1e638 <report_auth+0x9c>
   1e614:	ldrb	r0, [r4, #57]	; 0x39
   1e618:	tst	r0, #16
   1e61c:	ldrne	r0, [r4, #24]
   1e620:	cmpne	r0, #0
   1e624:	bne	1e650 <report_auth+0xb4>
   1e628:	ldrb	r0, [r6, #5]
   1e62c:	tst	r0, #2
   1e630:	bne	1e5e4 <report_auth+0x48>
   1e634:	b	1e65c <report_auth+0xc0>
   1e638:	ldr	r1, [pc, #204]	; 1e70c <report_auth+0x170>
   1e63c:	add	r1, pc, r1
   1e640:	bl	e594 <privilegeset_in_set@plt>
   1e644:	cmp	r0, #0
   1e648:	bne	1e65c <report_auth+0xc0>
   1e64c:	b	1e614 <report_auth+0x78>
   1e650:	ldr	r0, [r0, #36]	; 0x24
   1e654:	cmp	r0, #0
   1e658:	bne	1e628 <report_auth+0x8c>
   1e65c:	add	r0, sp, #32
   1e660:	str	r0, [sp]
   1e664:	add	r0, sp, #20
   1e668:	str	r0, [sp, #4]
   1e66c:	add	r0, sp, #28
   1e670:	str	r0, [sp, #8]
   1e674:	mov	r0, r6
   1e678:	sub	r1, fp, #32
   1e67c:	add	r2, sp, #36	; 0x24
   1e680:	add	r3, sp, #24
   1e684:	bl	e6fc <get_printable_conf@plt>
   1e688:	ldr	r0, [r6, #24]
   1e68c:	cmp	r0, #0
   1e690:	ldrbne	r1, [r0]
   1e694:	cmpne	r1, #0
   1e698:	strne	r0, [sp, #24]
   1e69c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1e6a0:	ldr	sl, [sp, #24]
   1e6a4:	ldr	r2, [sp, #32]
   1e6a8:	mov	r0, r4
   1e6ac:	mov	r1, r6
   1e6b0:	bl	db14 <show_iline_prefix@plt>
   1e6b4:	mov	r0, r6
   1e6b8:	mov	r1, r4
   1e6bc:	bl	d04c <show_ip_conf@plt>
   1e6c0:	ldr	r1, [sp, #36]	; 0x24
   1e6c4:	ldr	r2, [sp, #20]
   1e6c8:	ldr	r3, [sp, #28]
   1e6cc:	cmp	r0, #0
   1e6d0:	ldr	r0, [pc, #56]	; 1e710 <report_auth+0x174>
   1e6d4:	add	r0, pc, r0
   1e6d8:	moveq	r1, r0
   1e6dc:	str	sl, [sp]
   1e6e0:	ldr	r0, [pc, #44]	; 1e714 <report_auth+0x178>
   1e6e4:	add	r0, pc, r0
   1e6e8:	stmib	sp, {r0, r1, r2, r3}
   1e6ec:	mov	r0, r4
   1e6f0:	mov	r1, #215	; 0xd7
   1e6f4:	mov	r2, r5
   1e6f8:	mov	r3, r9
   1e6fc:	bl	dc88 <sendto_one_numeric@plt>
   1e700:	b	1e5e4 <report_auth+0x48>
   1e704:	.word	0x000233e3
   1e708:	.word	0x0003c3a8
   1e70c:	.word	0x00022656
   1e710:	.word	0x00022e61
   1e714:	.word	0x000475a4

0001e718 <__bswap_32>:
   1e718:	rev	r0, r0
   1e71c:	bx	lr

0001e720 <ircd_shutdown>:
   1e720:	push	{fp, lr}
   1e724:	mov	fp, sp
   1e728:	sub	sp, sp, #8
   1e72c:	mov	r4, r0
   1e730:	ldr	r0, [pc, #188]	; 1e7f4 <ircd_shutdown+0xd4>
   1e734:	ldr	r0, [pc, r0]
   1e738:	ldr	r7, [r0]
   1e73c:	cmp	r7, #0
   1e740:	beq	1e77c <ircd_shutdown+0x5c>
   1e744:	ldr	r0, [pc, #172]	; 1e7f8 <ircd_shutdown+0xd8>
   1e748:	ldr	r0, [pc, r0]
   1e74c:	add	r5, r0, #88	; 0x58
   1e750:	ldr	r6, [pc, #164]	; 1e7fc <ircd_shutdown+0xdc>
   1e754:	add	r6, pc, r6
   1e758:	ldr	r0, [r7]
   1e75c:	str	r4, [sp]
   1e760:	add	r3, r0, #88	; 0x58
   1e764:	mov	r1, r6
   1e768:	mov	r2, r5
   1e76c:	bl	d1e4 <sendto_one@plt>
   1e770:	ldr	r7, [r7, #8]
   1e774:	cmp	r7, #0
   1e778:	bne	1e758 <ircd_shutdown+0x38>
   1e77c:	ldr	r0, [pc, #124]	; 1e800 <ircd_shutdown+0xe0>
   1e780:	ldr	r0, [pc, r0]
   1e784:	ldr	r7, [r0]
   1e788:	cmp	r7, #0
   1e78c:	beq	1e7c4 <ircd_shutdown+0xa4>
   1e790:	ldr	r0, [pc, #108]	; 1e804 <ircd_shutdown+0xe4>
   1e794:	ldr	r0, [pc, r0]
   1e798:	add	r5, r0, #88	; 0x58
   1e79c:	ldr	r6, [pc, #100]	; 1e808 <ircd_shutdown+0xe8>
   1e7a0:	add	r6, pc, r6
   1e7a4:	ldr	r0, [r7]
   1e7a8:	mov	r1, r6
   1e7ac:	mov	r2, r5
   1e7b0:	mov	r3, r4
   1e7b4:	bl	d1e4 <sendto_one@plt>
   1e7b8:	ldr	r7, [r7, #8]
   1e7bc:	cmp	r7, #0
   1e7c0:	bne	1e7a4 <ircd_shutdown+0x84>
   1e7c4:	ldr	r1, [pc, #64]	; 1e80c <ircd_shutdown+0xec>
   1e7c8:	add	r1, pc, r1
   1e7cc:	mov	r0, #0
   1e7d0:	mov	r2, r4
   1e7d4:	bl	e0b4 <ilog@plt>
   1e7d8:	bl	e3c0 <close_logfiles@plt>
   1e7dc:	ldr	r0, [pc, #44]	; 1e810 <ircd_shutdown+0xf0>
   1e7e0:	ldr	r0, [pc, r0]
   1e7e4:	ldr	r0, [r0]
   1e7e8:	bl	d6a0 <unlink@plt>
   1e7ec:	mov	r0, #0
   1e7f0:	bl	dc34 <exit@plt>
   1e7f4:	.word	0x0003c3f4
   1e7f8:	.word	0x0003c410
   1e7fc:	.word	0x00023422
   1e800:	.word	0x0003c250
   1e804:	.word	0x0003c3c4
   1e808:	.word	0x000233fc
   1e80c:	.word	0x000233bd
   1e810:	.word	0x0003c2dc

0001e814 <charybdis_main>:
   1e814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e818:	add	fp, sp, #28
   1e81c:	sub	sp, sp, #20
   1e820:	str	r1, [sp, #12]
   1e824:	str	r0, [sp, #16]
   1e828:	bl	d7d8 <geteuid@plt>
   1e82c:	cmp	r0, #0
   1e830:	beq	1ed88 <charybdis_main+0x574>
   1e834:	ldr	r9, [pc, #1844]	; 1ef70 <charybdis_main+0x75c>
   1e838:	ldr	r9, [pc, r9]
   1e83c:	mov	r0, #30
   1e840:	str	r0, [r9, #272]	; 0x110
   1e844:	ldr	r0, [pc, #1832]	; 1ef74 <charybdis_main+0x760>
   1e848:	ldr	r0, [pc, r0]
   1e84c:	ldr	r1, [r0]
   1e850:	ldr	r2, [r0, #32]
   1e854:	ldr	r3, [r0, #40]	; 0x28
   1e858:	ldr	r0, [r0, #44]	; 0x2c
   1e85c:	ldr	r7, [pc, #1812]	; 1ef78 <charybdis_main+0x764>
   1e860:	ldr	r7, [pc, r7]
   1e864:	str	r3, [r7]
   1e868:	ldr	r7, [pc, #1804]	; 1ef7c <charybdis_main+0x768>
   1e86c:	ldr	r7, [pc, r7]
   1e870:	str	r0, [r7]
   1e874:	stm	r9, {r1, r2}
   1e878:	bl	1f084 <init_sys>
   1e87c:	mov	r0, #63	; 0x3f
   1e880:	bl	e63c <umask@plt>
   1e884:	ldr	r0, [pc, #1780]	; 1ef80 <charybdis_main+0x76c>
   1e888:	ldr	r0, [pc, r0]
   1e88c:	ldr	r1, [sp, #12]
   1e890:	str	r1, [r0]
   1e894:	ldr	r2, [pc, #1768]	; 1ef84 <charybdis_main+0x770>
   1e898:	ldr	r2, [pc, r2]
   1e89c:	add	r0, sp, #16
   1e8a0:	add	r1, sp, #12
   1e8a4:	bl	d874 <parseargs@plt>
   1e8a8:	ldr	r0, [r9]
   1e8ac:	bl	d790 <chdir@plt>
   1e8b0:	cmp	r0, #0
   1e8b4:	bne	1edd0 <charybdis_main+0x5bc>
   1e8b8:	bl	da0c <rb_set_time@plt>
   1e8bc:	bl	1f12c <setup_corefile>
   1e8c0:	bl	d4c0 <init_operhash@plt>
   1e8c4:	ldr	r8, [pc, #1724]	; 1ef88 <charybdis_main+0x774>
   1e8c8:	ldr	r8, [pc, r8]
   1e8cc:	mov	r6, #0
   1e8d0:	mov	r0, r8
   1e8d4:	mov	r1, #0
   1e8d8:	mov	r2, #448	; 0x1c0
   1e8dc:	bl	df28 <memset@plt>
   1e8e0:	ldr	r4, [pc, #1700]	; 1ef8c <charybdis_main+0x778>
   1e8e4:	ldr	r4, [pc, r4]
   1e8e8:	mov	r0, r4
   1e8ec:	mov	r1, #0
   1e8f0:	mov	r2, #492	; 0x1ec
   1e8f4:	bl	df28 <memset@plt>
   1e8f8:	str	r4, [r8, #432]	; 0x1b0
   1e8fc:	ldr	r0, [pc, #1676]	; 1ef90 <charybdis_main+0x77c>
   1e900:	ldr	r0, [pc, r0]
   1e904:	str	r6, [r0]
   1e908:	str	r6, [r0, #4]
   1e90c:	str	r6, [r0, #8]
   1e910:	ldr	r0, [pc, #1660]	; 1ef94 <charybdis_main+0x780>
   1e914:	ldr	r0, [pc, r0]
   1e918:	str	r6, [r0]
   1e91c:	str	r6, [r0, #4]
   1e920:	str	r6, [r0, #8]
   1e924:	ldr	r0, [pc, #1644]	; 1ef98 <charybdis_main+0x784>
   1e928:	ldr	r0, [pc, r0]
   1e92c:	str	r6, [r0]
   1e930:	str	r6, [r0, #4]
   1e934:	str	r6, [r0, #8]
   1e938:	ldr	r0, [pc, #1628]	; 1ef9c <charybdis_main+0x788>
   1e93c:	ldr	r0, [pc, r0]
   1e940:	str	r6, [r0]
   1e944:	str	r6, [r0, #4]
   1e948:	str	r6, [r0, #8]
   1e94c:	ldr	r0, [pc, #1612]	; 1efa0 <charybdis_main+0x78c>
   1e950:	ldr	r0, [pc, r0]
   1e954:	str	r6, [r0]
   1e958:	str	r6, [r0, #4]
   1e95c:	str	r6, [r0, #8]
   1e960:	ldr	r0, [pc, #1596]	; 1efa4 <charybdis_main+0x790>
   1e964:	ldr	r0, [pc, r0]
   1e968:	str	r6, [r0]
   1e96c:	str	r6, [r0, #4]
   1e970:	str	r6, [r0, #8]
   1e974:	ldr	r0, [pc, #1580]	; 1efa8 <charybdis_main+0x794>
   1e978:	ldr	r0, [pc, r0]
   1e97c:	str	r6, [r0]
   1e980:	str	r6, [r0, #4]
   1e984:	str	r6, [r0, #8]
   1e988:	bl	1f170 <rb_dlinkAddTail>
   1e98c:	ldr	r0, [pc, #1560]	; 1efac <charybdis_main+0x798>
   1e990:	ldr	r0, [pc, r0]
   1e994:	vmov.i32	q8, #0	; 0x00000000
   1e998:	str	r6, [r0, #16]
   1e99c:	mov	r1, #20
   1e9a0:	vst1.32	{d16-d17}, [r0], r1
   1e9a4:	str	r6, [r0]
   1e9a8:	ldr	r5, [pc, #1536]	; 1efb0 <charybdis_main+0x79c>
   1e9ac:	ldr	r5, [pc, r5]
   1e9b0:	mov	r0, r5
   1e9b4:	mov	r1, #0
   1e9b8:	mov	r2, #308	; 0x134
   1e9bc:	bl	df28 <memset@plt>
   1e9c0:	ldr	r0, [pc, #1516]	; 1efb4 <charybdis_main+0x7a0>
   1e9c4:	ldr	r0, [pc, r0]
   1e9c8:	str	r6, [r0]
   1e9cc:	str	r6, [r0, #4]
   1e9d0:	str	r6, [r0, #8]
   1e9d4:	ldr	r0, [pc, #1500]	; 1efb8 <charybdis_main+0x7a4>
   1e9d8:	ldr	r0, [pc, r0]
   1e9dc:	mov	r1, #0
   1e9e0:	mov	r2, #136	; 0x88
   1e9e4:	bl	df28 <memset@plt>
   1e9e8:	ldr	r0, [pc, #1484]	; 1efbc <charybdis_main+0x7a8>
   1e9ec:	ldr	r0, [pc, r0]
   1e9f0:	cmp	r0, #0
   1e9f4:	bne	1ee0c <charybdis_main+0x5f8>
   1e9f8:	bl	dca0 <setup_signals@plt>
   1e9fc:	ldr	sl, [pc, #1468]	; 1efc0 <charybdis_main+0x7ac>
   1ea00:	ldr	sl, [pc, sl]
   1ea04:	ldr	r0, [sl]
   1ea08:	cmp	r0, #0
   1ea0c:	ldrne	r0, [pc, #1456]	; 1efc4 <charybdis_main+0x7b0>
   1ea10:	ldrne	r0, [pc, r0]
   1ea14:	movne	r1, #1
   1ea18:	strbne	r1, [r0]
   1ea1c:	ldr	r4, [pc, #1444]	; 1efc8 <charybdis_main+0x7b4>
   1ea20:	add	r4, pc, r4
   1ea24:	mov	r0, r4
   1ea28:	mov	r1, #2
   1ea2c:	bl	dbf8 <open@plt>
   1ea30:	cmp	r0, #1
   1ea34:	bgt	1ea40 <charybdis_main+0x22c>
   1ea38:	cmn	r0, #1
   1ea3c:	bne	1ea24 <charybdis_main+0x210>
   1ea40:	cmp	r0, #3
   1ea44:	blt	1ea50 <charybdis_main+0x23c>
   1ea48:	bl	e72c <close@plt>
   1ea4c:	b	1ea58 <charybdis_main+0x244>
   1ea50:	cmn	r0, #1
   1ea54:	beq	1ee4c <charybdis_main+0x638>
   1ea58:	ldr	r0, [sl]
   1ea5c:	cmp	r0, #0
   1ea60:	bne	1eaac <charybdis_main+0x298>
   1ea64:	ldr	r0, [r7]
   1ea68:	bl	1f1cc <check_pidfile>
   1ea6c:	ldr	r0, [pc, #1368]	; 1efcc <charybdis_main+0x7b8>
   1ea70:	ldr	r0, [pc, r0]
   1ea74:	ldr	r1, [r0]
   1ea78:	ldr	r0, [pc, #1360]	; 1efd0 <charybdis_main+0x7bc>
   1ea7c:	add	r0, pc, r0
   1ea80:	bl	d10c <inotice@plt>
   1ea84:	bl	e660 <rb_lib_version@plt>
   1ea88:	mov	r1, r0
   1ea8c:	ldr	r0, [pc, #1344]	; 1efd4 <charybdis_main+0x7c0>
   1ea90:	add	r0, pc, r0
   1ea94:	bl	d10c <inotice@plt>
   1ea98:	ldr	r0, [pc, #1336]	; 1efd8 <charybdis_main+0x7c4>
   1ea9c:	ldr	r0, [pc, r0]
   1eaa0:	ldrb	r0, [r0]
   1eaa4:	cmp	r0, #0
   1eaa8:	bleq	1f24c <make_daemon>
   1eaac:	ldr	r0, [pc, #1320]	; 1efdc <charybdis_main+0x7c8>
   1eab0:	ldr	r0, [pc, r0]
   1eab4:	ldrb	r0, [r0]
   1eab8:	ldr	r1, [pc, #1312]	; 1efe0 <charybdis_main+0x7cc>
   1eabc:	ldr	r1, [pc, r1]
   1eac0:	ldr	r1, [r1]
   1eac4:	mov	r2, #1024	; 0x400
   1eac8:	mov	r3, #8192	; 0x2000
   1eacc:	stm	sp, {r1, r3}
   1ead0:	str	r2, [sp, #8]
   1ead4:	eor	r3, r0, #1
   1ead8:	ldr	r0, [pc, #1284]	; 1efe4 <charybdis_main+0x7d0>
   1eadc:	add	r0, pc, r0
   1eae0:	ldr	r1, [pc, #1280]	; 1efe8 <charybdis_main+0x7d4>
   1eae4:	add	r1, pc, r1
   1eae8:	ldr	r2, [pc, #1276]	; 1efec <charybdis_main+0x7d8>
   1eaec:	add	r2, pc, r2
   1eaf0:	bl	e048 <rb_lib_init@plt>
   1eaf4:	mov	r0, #2048	; 0x800
   1eaf8:	bl	e060 <rb_linebuf_init@plt>
   1eafc:	mov	r0, #0
   1eb00:	mov	r1, #1
   1eb04:	bl	e744 <rb_init_prng@plt>
   1eb08:	mov	r0, #0
   1eb0c:	bl	1f3c8 <seed_random>
   1eb10:	bl	d124 <init_builtin_capabs@plt>
   1eb14:	ldr	r0, [pc, #1236]	; 1eff0 <charybdis_main+0x7dc>
   1eb18:	ldr	r0, [pc, r0]
   1eb1c:	ldr	r0, [r0]
   1eb20:	bl	d904 <capability_index_mask@plt>
   1eb24:	ldr	r1, [pc, #1224]	; 1eff4 <charybdis_main+0x7e0>
   1eb28:	ldr	r1, [pc, r1]
   1eb2c:	ldr	r1, [r1]
   1eb30:	ldr	r2, [pc, #1216]	; 1eff8 <charybdis_main+0x7e4>
   1eb34:	ldr	r2, [pc, r2]
   1eb38:	ldr	r2, [r2]
   1eb3c:	orr	r1, r2, r1
   1eb40:	bic	r0, r0, r1
   1eb44:	ldr	r1, [pc, #1200]	; 1effc <charybdis_main+0x7e8>
   1eb48:	ldr	r1, [pc, r1]
   1eb4c:	str	r0, [r1]
   1eb50:	bl	d244 <init_main_logfile@plt>
   1eb54:	bl	dd24 <newconf_init@plt>
   1eb58:	bl	e69c <init_s_conf@plt>
   1eb5c:	bl	d91c <init_s_newconf@plt>
   1eb60:	bl	d670 <init_hash@plt>
   1eb64:	bl	e810 <clear_scache_hash_table@plt>
   1eb68:	bl	d9b8 <init_host_hash@plt>
   1eb6c:	bl	da18 <clear_hash_parse@plt>
   1eb70:	bl	e5c4 <init_client@plt>
   1eb74:	bl	dba4 <init_hook@plt>
   1eb78:	bl	d508 <init_channels@plt>
   1eb7c:	bl	d3b8 <initclass@plt>
   1eb80:	bl	dd48 <whowas_init@plt>
   1eb84:	bl	e5e8 <init_reject@plt>
   1eb88:	bl	e5ac <init_cache@plt>
   1eb8c:	bl	e588 <init_monitor@plt>
   1eb90:	bl	df70 <construct_cflags_strings@plt>
   1eb94:	bl	db50 <init_authd@plt>
   1eb98:	bl	dec8 <init_dns@plt>
   1eb9c:	bl	d1fc <init_modules@plt>
   1eba0:	ldr	r0, [pc, #1112]	; 1f000 <charybdis_main+0x7ec>
   1eba4:	add	r0, pc, r0
   1eba8:	ldr	r1, [pc, #1108]	; 1f004 <charybdis_main+0x7f0>
   1ebac:	add	r1, pc, r1
   1ebb0:	mov	r2, #0
   1ebb4:	bl	d778 <privilegeset_set_new@plt>
   1ebb8:	ldr	r0, [sl]
   1ebbc:	cmp	r0, #0
   1ebc0:	bne	1edac <charybdis_main+0x598>
   1ebc4:	mov	r0, #1
   1ebc8:	bl	d8e0 <read_conf_files@plt>
   1ebcc:	mov	r0, #1
   1ebd0:	bl	d94c <load_all_modules@plt>
   1ebd4:	mov	r0, #1
   1ebd8:	bl	d82c <load_core_modules@plt>
   1ebdc:	bl	e7a4 <init_isupport@plt>
   1ebe0:	bl	d058 <init_bandb@plt>
   1ebe4:	bl	d2e0 <init_ssld@plt>
   1ebe8:	bl	e7b0 <init_wsockd@plt>
   1ebec:	bl	e42c <rehash_bans@plt>
   1ebf0:	bl	1f418 <initialize_server_capabs>
   1ebf4:	bl	1f444 <initialize_global_set_options>
   1ebf8:	ldr	r1, [r5]
   1ebfc:	cmp	r1, #0
   1ec00:	beq	1ed44 <charybdis_main+0x530>
   1ec04:	add	r6, r8, #88	; 0x58
   1ec08:	mov	r0, r6
   1ec0c:	mov	r2, #64	; 0x40
   1ec10:	bl	e510 <rb_strlcpy@plt>
   1ec14:	ldrb	r0, [r5, #4]
   1ec18:	cmp	r0, #0
   1ec1c:	beq	1ed58 <charybdis_main+0x544>
   1ec20:	add	r7, r8, #396	; 0x18c
   1ec24:	add	r1, r5, #4
   1ec28:	mov	r0, r7
   1ec2c:	mov	r2, #10
   1ec30:	bl	e510 <rb_strlcpy@plt>
   1ec34:	bl	e504 <init_uid@plt>
   1ec38:	ldr	r1, [r5, #8]
   1ec3c:	cmp	r1, #0
   1ec40:	beq	1ed6c <charybdis_main+0x558>
   1ec44:	movw	r0, #345	; 0x159
   1ec48:	add	r4, r8, r0
   1ec4c:	mov	r0, r4
   1ec50:	mov	r2, #51	; 0x33
   1ec54:	bl	e510 <rb_strlcpy@plt>
   1ec58:	ldr	r0, [r5, #288]	; 0x120
   1ec5c:	cmp	r0, #0
   1ec60:	beq	1eca0 <charybdis_main+0x48c>
   1ec64:	ldr	r1, [r5, #280]	; 0x118
   1ec68:	ldr	r2, [r5, #292]	; 0x124
   1ec6c:	ldr	r3, [r5, #296]	; 0x128
   1ec70:	bl	d238 <rb_setup_ssl_server@plt>
   1ec74:	mov	r5, #1
   1ec78:	cmp	r0, #0
   1ec7c:	bne	1ec94 <charybdis_main+0x480>
   1ec80:	mov	r5, #0
   1ec84:	ldr	r1, [pc, #912]	; 1f01c <charybdis_main+0x808>
   1ec88:	add	r1, pc, r1
   1ec8c:	mov	r0, #0
   1ec90:	bl	e0b4 <ilog@plt>
   1ec94:	ldr	r0, [pc, #900]	; 1f020 <charybdis_main+0x80c>
   1ec98:	ldr	r0, [pc, r0]
   1ec9c:	strb	r5, [r0]
   1eca0:	mov	r0, #4
   1eca4:	strh	r0, [r8, #80]	; 0x50
   1eca8:	mov	r5, #0
   1ecac:	strb	r5, [r8, #82]	; 0x52
   1ecb0:	str	r8, [r8, #32]
   1ecb4:	str	r8, [r8, #36]	; 0x24
   1ecb8:	mov	r0, r8
   1ecbc:	bl	d5ec <make_server@plt>
   1ecc0:	bl	d07c <rb_current_time@plt>
   1ecc4:	ldr	r1, [pc, #856]	; 1f024 <charybdis_main+0x810>
   1ecc8:	ldr	r1, [pc, r1]
   1eccc:	str	r0, [r1]
   1ecd0:	mov	r0, r6
   1ecd4:	mov	r1, r8
   1ecd8:	bl	da48 <add_to_client_hash@plt>
   1ecdc:	mov	r0, r7
   1ece0:	mov	r1, r8
   1ece4:	bl	d0d0 <add_to_id_hash@plt>
   1ece8:	mov	r0, r6
   1ecec:	mov	r1, r4
   1ecf0:	mov	r2, #0
   1ecf4:	bl	e2b8 <scache_connect@plt>
   1ecf8:	ldr	r1, [r8, #28]
   1ecfc:	str	r0, [r1, #68]	; 0x44
   1ed00:	bl	dc64 <rb_make_rb_dlink_node@plt>
   1ed04:	bl	1f59c <rb_dlinkAdd>
   1ed08:	bl	e804 <construct_umodebuf@plt>
   1ed0c:	ldr	r0, [sl]
   1ed10:	cmp	r0, #0
   1ed14:	beq	1ee54 <charybdis_main+0x640>
   1ed18:	ldr	r4, [pc, #776]	; 1f028 <charybdis_main+0x814>
   1ed1c:	ldr	r4, [pc, r4]
   1ed20:	ldr	r3, [r4]
   1ed24:	ldr	r0, [pc, #768]	; 1f02c <charybdis_main+0x818>
   1ed28:	add	r0, pc, r0
   1ed2c:	mov	r1, #26
   1ed30:	mov	r2, #1
   1ed34:	bl	d8b0 <fwrite@plt>
   1ed38:	ldr	r0, [r4]
   1ed3c:	bl	d25c <fflush@plt>
   1ed40:	b	1ed7c <charybdis_main+0x568>
   1ed44:	ldr	r0, [pc, #708]	; 1f010 <charybdis_main+0x7fc>
   1ed48:	add	r0, pc, r0
   1ed4c:	bl	d64c <ierror@plt>
   1ed50:	mvn	r5, #0
   1ed54:	b	1ed7c <charybdis_main+0x568>
   1ed58:	ldr	r0, [pc, #692]	; 1f014 <charybdis_main+0x800>
   1ed5c:	add	r0, pc, r0
   1ed60:	bl	d64c <ierror@plt>
   1ed64:	mvn	r5, #1
   1ed68:	b	1ed7c <charybdis_main+0x568>
   1ed6c:	ldr	r0, [pc, #676]	; 1f018 <charybdis_main+0x804>
   1ed70:	add	r0, pc, r0
   1ed74:	bl	d64c <ierror@plt>
   1ed78:	mvn	r5, #2
   1ed7c:	mov	r0, r5
   1ed80:	sub	sp, fp, #28
   1ed84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed88:	ldr	r0, [pc, #472]	; 1ef68 <charybdis_main+0x754>
   1ed8c:	ldr	r0, [pc, r0]
   1ed90:	ldr	r3, [r0]
   1ed94:	ldr	r0, [pc, #464]	; 1ef6c <charybdis_main+0x758>
   1ed98:	add	r0, pc, r0
   1ed9c:	mov	r1, #26
   1eda0:	mov	r2, #1
   1eda4:	bl	d8b0 <fwrite@plt>
   1eda8:	b	1ed50 <charybdis_main+0x53c>
   1edac:	ldr	r0, [pc, #596]	; 1f008 <charybdis_main+0x7f4>
   1edb0:	ldr	r0, [pc, r0]
   1edb4:	ldr	r3, [r0]
   1edb8:	ldr	r0, [pc, #588]	; 1f00c <charybdis_main+0x7f8>
   1edbc:	add	r0, pc, r0
   1edc0:	mov	r1, #23
   1edc4:	mov	r2, #1
   1edc8:	bl	d8b0 <fwrite@plt>
   1edcc:	b	1ebc4 <charybdis_main+0x3b0>
   1edd0:	ldr	r4, [r9]
   1edd4:	ldr	r0, [pc, #656]	; 1f06c <charybdis_main+0x858>
   1edd8:	ldr	r0, [pc, r0]
   1eddc:	ldr	r5, [r0]
   1ede0:	bl	de38 <__errno_location@plt>
   1ede4:	ldr	r0, [r0]
   1ede8:	bl	dacc <strerror@plt>
   1edec:	mov	r3, r0
   1edf0:	ldr	r1, [pc, #632]	; 1f070 <charybdis_main+0x85c>
   1edf4:	add	r1, pc, r1
   1edf8:	mov	r0, r5
   1edfc:	mov	r2, r4
   1ee00:	bl	dd60 <fprintf@plt>
   1ee04:	mov	r0, #1
   1ee08:	bl	dc34 <exit@plt>
   1ee0c:	ldr	r0, [pc, #608]	; 1f074 <charybdis_main+0x860>
   1ee10:	ldr	r0, [pc, r0]
   1ee14:	ldr	r2, [r0]
   1ee18:	ldr	r0, [pc, #600]	; 1f078 <charybdis_main+0x864>
   1ee1c:	ldr	r0, [pc, r0]
   1ee20:	ldr	r1, [r0]
   1ee24:	ldr	r0, [pc, #592]	; 1f07c <charybdis_main+0x868>
   1ee28:	add	r0, pc, r0
   1ee2c:	bl	d1c0 <printf@plt>
   1ee30:	bl	e660 <rb_lib_version@plt>
   1ee34:	mov	r1, r0
   1ee38:	ldr	r0, [pc, #576]	; 1f080 <charybdis_main+0x86c>
   1ee3c:	add	r0, pc, r0
   1ee40:	bl	d1c0 <printf@plt>
   1ee44:	mov	r0, #0
   1ee48:	bl	dc34 <exit@plt>
   1ee4c:	mov	r0, #1
   1ee50:	bl	dc34 <exit@plt>
   1ee54:	bl	dde4 <check_class@plt>
   1ee58:	ldr	r0, [pc, #464]	; 1f030 <charybdis_main+0x81c>
   1ee5c:	ldr	r0, [pc, r0]
   1ee60:	ldr	r0, [r0]
   1ee64:	bl	1f63c <write_pidfile>
   1ee68:	bl	d064 <load_help@plt>
   1ee6c:	bl	e0fc <open_logfiles@plt>
   1ee70:	bl	d7cc <configure_authd@plt>
   1ee74:	ldr	r1, [pc, #440]	; 1f034 <charybdis_main+0x820>
   1ee78:	add	r1, pc, r1
   1ee7c:	mov	r0, #0
   1ee80:	bl	e0b4 <ilog@plt>
   1ee84:	ldr	r4, [pc, #428]	; 1f038 <charybdis_main+0x824>
   1ee88:	ldr	r4, [pc, r4]
   1ee8c:	ldr	r0, [pc, #424]	; 1f03c <charybdis_main+0x828>
   1ee90:	add	r0, pc, r0
   1ee94:	mov	r1, r4
   1ee98:	mov	r2, #0
   1ee9c:	mov	r3, #60	; 0x3c
   1eea0:	bl	d220 <rb_event_addish@plt>
   1eea4:	ldr	r0, [pc, #404]	; 1f040 <charybdis_main+0x82c>
   1eea8:	add	r0, pc, r0
   1eeac:	mov	r1, r4
   1eeb0:	mov	r2, #0
   1eeb4:	mov	r3, #2
   1eeb8:	bl	e7ec <rb_event_addonce@plt>
   1eebc:	ldr	r0, [pc, #384]	; 1f044 <charybdis_main+0x830>
   1eec0:	add	r0, pc, r0
   1eec4:	ldr	r1, [pc, #380]	; 1f048 <charybdis_main+0x834>
   1eec8:	add	r1, pc, r1
   1eecc:	mov	r2, #0
   1eed0:	mov	r3, #3
   1eed4:	bl	d0e8 <rb_event_add@plt>
   1eed8:	ldr	r0, [pc, #364]	; 1f04c <charybdis_main+0x838>
   1eedc:	add	r0, pc, r0
   1eee0:	ldr	r1, [pc, #360]	; 1f050 <charybdis_main+0x83c>
   1eee4:	add	r1, pc, r1
   1eee8:	mov	r2, #0
   1eeec:	mov	r3, #300	; 0x12c
   1eef0:	bl	d220 <rb_event_addish@plt>
   1eef4:	ldr	r0, [pc, #344]	; 1f054 <charybdis_main+0x840>
   1eef8:	ldr	r0, [pc, r0]
   1eefc:	ldr	r0, [r0]
   1ef00:	cmp	r0, #0
   1ef04:	beq	1ef30 <charybdis_main+0x71c>
   1ef08:	ldr	r1, [pc, #328]	; 1f058 <charybdis_main+0x844>
   1ef0c:	ldr	r1, [pc, r1]
   1ef10:	ldr	r0, [pc, #324]	; 1f05c <charybdis_main+0x848>
   1ef14:	add	r0, pc, r0
   1ef18:	mov	r2, #0
   1ef1c:	mov	r3, #5
   1ef20:	bl	d0e8 <rb_event_add@plt>
   1ef24:	ldr	r1, [pc, #308]	; 1f060 <charybdis_main+0x84c>
   1ef28:	ldr	r1, [pc, r1]
   1ef2c:	str	r0, [r1]
   1ef30:	ldr	r0, [pc, #300]	; 1f064 <charybdis_main+0x850>
   1ef34:	ldr	r0, [pc, r0]
   1ef38:	ldrb	r0, [r0]
   1ef3c:	cmp	r0, #0
   1ef40:	beq	1ef60 <charybdis_main+0x74c>
   1ef44:	ldr	r4, [r9]
   1ef48:	bl	dc28 <getpid@plt>
   1ef4c:	mov	r2, r0
   1ef50:	ldr	r0, [pc, #272]	; 1f068 <charybdis_main+0x854>
   1ef54:	add	r0, pc, r0
   1ef58:	mov	r1, r4
   1ef5c:	bl	d10c <inotice@plt>
   1ef60:	mov	r0, #0
   1ef64:	bl	e33c <rb_lib_loop@plt>
   1ef68:	.word	0x0003bbcc
   1ef6c:	.word	0x00022f13
   1ef70:	.word	0x0003c344
   1ef74:	.word	0x0003c200
   1ef78:	.word	0x0003c1c4
   1ef7c:	.word	0x0003c250
   1ef80:	.word	0x0003c0ec
   1ef84:	.word	0x0003c240
   1ef88:	.word	0x0003c290
   1ef8c:	.word	0x0003c0a0
   1ef90:	.word	0x0003c190
   1ef94:	.word	0x0003bf60
   1ef98:	.word	0x0003c200
   1ef9c:	.word	0x0003c094
   1efa0:	.word	0x0003bf28
   1efa4:	.word	0x0003bfd4
   1efa8:	.word	0x0003c128
   1efac:	.word	0x0003bf90
   1efb0:	.word	0x0003bfa4
   1efb4:	.word	0x0003c180
   1efb8:	.word	0x0003bfe4
   1efbc:	.word	0x000472d4
   1efc0:	.word	0x0003c08c
   1efc4:	.word	0x0003bf38
   1efc8:	.word	0x000234c3
   1efcc:	.word	0x0003be20
   1efd0:	.word	0x00023285
   1efd4:	.word	0x00028bd5
   1efd8:	.word	0x0003beac
   1efdc:	.word	0x0003be98
   1efe0:	.word	0x0003c00c
   1efe4:	.word	0x00000834
   1efe8:	.word	0x00000844
   1efec:	.word	0x00000864
   1eff0:	.word	0x0003bd68
   1eff4:	.word	0x0003be00
   1eff8:	.word	0x0003bd30
   1effc:	.word	0x0003bf54
   1f000:	.word	0x00022470
   1f004:	.word	0x00026c59
   1f008:	.word	0x0003bba8
   1f00c:	.word	0x00022f55
   1f010:	.word	0x00022fe1
   1f014:	.word	0x00022ffb
   1f018:	.word	0x00023014
   1f01c:	.word	0x00023131
   1f020:	.word	0x0003bcc8
   1f024:	.word	0x0003be80
   1f028:	.word	0x0003bc3c
   1f02c:	.word	0x000230af
   1f030:	.word	0x0003bc60
   1f034:	.word	0x00022f7a
   1f038:	.word	0x0003bc9c
   1f03c:	.word	0x00022f6f
   1f040:	.word	0x00022f67
   1f044:	.word	0x00022f67
   1f048:	.word	0x00000830
   1f04c:	.word	0x00022f58
   1f050:	.word	0x000004dc
   1f054:	.word	0x0003bc64
   1f058:	.word	0x0003bc2c
   1f05c:	.word	0x00021b9c
   1f060:	.word	0x0003b970
   1f064:	.word	0x0003ba14
   1f068:	.word	0x00022eed
   1f06c:	.word	0x0003bb80
   1f070:	.word	0x00022ed2
   1f074:	.word	0x0003bb80
   1f078:	.word	0x0003ba74
   1f07c:	.word	0x00022eb9
   1f080:	.word	0x00022ebb

0001f084 <init_sys>:
   1f084:	push	{r4, sl, fp, lr}
   1f088:	add	fp, sp, #8
   1f08c:	sub	sp, sp, #8
   1f090:	mov	r1, sp
   1f094:	mov	r0, #7
   1f098:	bl	d6f4 <getrlimit@plt>
   1f09c:	cmp	r0, #0
   1f0a0:	beq	1f0bc <init_sys+0x38>
   1f0a4:	ldr	r0, [pc, #124]	; 1f128 <init_sys+0xa4>
   1f0a8:	ldr	r0, [pc, r0]
   1f0ac:	movw	r1, #65535	; 0xffff
   1f0b0:	str	r1, [r0]
   1f0b4:	sub	sp, fp, #8
   1f0b8:	pop	{r4, sl, fp, pc}
   1f0bc:	ldr	r0, [pc, #84]	; 1f118 <init_sys+0x94>
   1f0c0:	ldr	r0, [pc, r0]
   1f0c4:	ldr	r1, [sp]
   1f0c8:	str	r1, [r0]
   1f0cc:	cmp	r1, #60	; 0x3c
   1f0d0:	ble	1f0dc <init_sys+0x58>
   1f0d4:	sub	sp, fp, #8
   1f0d8:	pop	{r4, sl, fp, pc}
   1f0dc:	ldr	r4, [pc, #56]	; 1f11c <init_sys+0x98>
   1f0e0:	ldr	r4, [pc, r4]
   1f0e4:	ldr	r3, [r4]
   1f0e8:	ldr	r0, [pc, #48]	; 1f120 <init_sys+0x9c>
   1f0ec:	add	r0, pc, r0
   1f0f0:	mov	r1, #36	; 0x24
   1f0f4:	mov	r2, #1
   1f0f8:	bl	d8b0 <fwrite@plt>
   1f0fc:	ldr	r0, [r4]
   1f100:	ldr	r1, [pc, #28]	; 1f124 <init_sys+0xa0>
   1f104:	add	r1, pc, r1
   1f108:	mov	r2, #60	; 0x3c
   1f10c:	bl	dd60 <fprintf@plt>
   1f110:	mov	r0, #1
   1f114:	bl	dc34 <exit@plt>
   1f118:	.word	0x0003ba08
   1f11c:	.word	0x0003b878
   1f120:	.word	0x00022d8a
   1f124:	.word	0x00022d97
   1f128:	.word	0x0003ba20

0001f12c <setup_corefile>:
   1f12c:	push	{fp, lr}
   1f130:	mov	fp, sp
   1f134:	sub	sp, sp, #8
   1f138:	mov	r1, sp
   1f13c:	mov	r0, #4
   1f140:	bl	d6f4 <getrlimit@plt>
   1f144:	cmp	r0, #0
   1f148:	beq	1f154 <setup_corefile+0x28>
   1f14c:	mov	sp, fp
   1f150:	pop	{fp, pc}
   1f154:	ldr	r0, [sp, #4]
   1f158:	str	r0, [sp]
   1f15c:	mov	r1, sp
   1f160:	mov	r0, #4
   1f164:	bl	da24 <setrlimit@plt>
   1f168:	mov	sp, fp
   1f16c:	pop	{fp, pc}

0001f170 <rb_dlinkAddTail>:
   1f170:	ldr	r1, [pc, #76]	; 1f1c4 <rb_dlinkAddTail+0x54>
   1f174:	ldr	r1, [pc, r1]
   1f178:	mov	r3, #0
   1f17c:	ldr	r0, [pc, #68]	; 1f1c8 <rb_dlinkAddTail+0x58>
   1f180:	ldr	r0, [pc, r0]
   1f184:	ldr	r2, [r0, #4]
   1f188:	stm	r1, {r1, r2, r3}
   1f18c:	cmp	r2, #0
   1f190:	beq	1f1a0 <rb_dlinkAddTail+0x30>
   1f194:	add	r2, r2, #8
   1f198:	str	r1, [r2]
   1f19c:	b	1f1b0 <rb_dlinkAddTail+0x40>
   1f1a0:	ldr	r2, [r0]
   1f1a4:	cmp	r2, #0
   1f1a8:	mov	r2, r0
   1f1ac:	streq	r1, [r2]
   1f1b0:	str	r1, [r0, #4]
   1f1b4:	ldr	r1, [r0, #8]
   1f1b8:	add	r1, r1, #1
   1f1bc:	str	r1, [r0, #8]
   1f1c0:	bx	lr
   1f1c4:	.word	0x0003b9e4
   1f1c8:	.word	0x0003b910

0001f1cc <check_pidfile>:
   1f1cc:	push	{r4, sl, fp, lr}
   1f1d0:	add	fp, sp, #8
   1f1d4:	sub	sp, sp, #32
   1f1d8:	ldr	r1, [pc, #100]	; 1f244 <check_pidfile+0x78>
   1f1dc:	add	r1, pc, r1
   1f1e0:	bl	d1f0 <fopen@plt>
   1f1e4:	cmp	r0, #0
   1f1e8:	beq	1f228 <check_pidfile+0x5c>
   1f1ec:	mov	r4, r0
   1f1f0:	mov	r0, sp
   1f1f4:	mov	r1, #20
   1f1f8:	mov	r2, r4
   1f1fc:	bl	e528 <fgets_unlocked@plt>
   1f200:	cmp	r0, #0
   1f204:	beq	1f220 <check_pidfile+0x54>
   1f208:	mov	r0, sp
   1f20c:	bl	e468 <atoi@plt>
   1f210:	mov	r1, #0
   1f214:	bl	d478 <rb_kill@plt>
   1f218:	cmp	r0, #0
   1f21c:	beq	1f230 <check_pidfile+0x64>
   1f220:	mov	r0, r4
   1f224:	bl	e0f0 <fclose@plt>
   1f228:	sub	sp, fp, #8
   1f22c:	pop	{r4, sl, fp, pc}
   1f230:	ldr	r0, [pc, #16]	; 1f248 <check_pidfile+0x7c>
   1f234:	add	r0, pc, r0
   1f238:	bl	da78 <puts@plt>
   1f23c:	mvn	r0, #0
   1f240:	bl	dc34 <exit@plt>
   1f244:	.word	0x0002316d
   1f248:	.word	0x00022e14

0001f24c <make_daemon>:
   1f24c:	push	{r4, r5, fp, lr}
   1f250:	add	fp, sp, #8
   1f254:	ldr	r0, [pc, #168]	; 1f304 <make_daemon+0xb8>
   1f258:	add	r0, pc, r0
   1f25c:	mov	r1, #2
   1f260:	bl	dbf8 <open@plt>
   1f264:	cmn	r0, #1
   1f268:	ble	1f2c4 <make_daemon+0x78>
   1f26c:	mov	r4, r0
   1f270:	bl	e234 <fork@plt>
   1f274:	cmn	r0, #1
   1f278:	ble	1f2d0 <make_daemon+0x84>
   1f27c:	mov	r2, r0
   1f280:	cmp	r0, #0
   1f284:	bne	1f2e4 <make_daemon+0x98>
   1f288:	mov	r5, #0
   1f28c:	cmp	r4, r5
   1f290:	beq	1f2a0 <make_daemon+0x54>
   1f294:	mov	r0, r4
   1f298:	mov	r1, r5
   1f29c:	bl	d6b8 <dup2@plt>
   1f2a0:	add	r5, r5, #1
   1f2a4:	cmp	r5, #3
   1f2a8:	bne	1f28c <make_daemon+0x40>
   1f2ac:	cmp	r4, #3
   1f2b0:	blt	1f2bc <make_daemon+0x70>
   1f2b4:	mov	r0, r4
   1f2b8:	bl	e72c <close@plt>
   1f2bc:	pop	{r4, r5, fp, lr}
   1f2c0:	b	dcac <setsid@plt>
   1f2c4:	ldr	r0, [pc, #60]	; 1f308 <make_daemon+0xbc>
   1f2c8:	add	r0, pc, r0
   1f2cc:	b	1f2d8 <make_daemon+0x8c>
   1f2d0:	ldr	r0, [pc, #52]	; 1f30c <make_daemon+0xc0>
   1f2d4:	add	r0, pc, r0
   1f2d8:	bl	d7fc <perror@plt>
   1f2dc:	mov	r0, #1
   1f2e0:	bl	dc34 <exit@plt>
   1f2e4:	ldr	r0, [pc, #36]	; 1f310 <make_daemon+0xc4>
   1f2e8:	ldr	r0, [pc, r0]
   1f2ec:	ldr	r1, [r0]
   1f2f0:	ldr	r0, [pc, #28]	; 1f314 <make_daemon+0xc8>
   1f2f4:	add	r0, pc, r0
   1f2f8:	bl	d10c <inotice@plt>
   1f2fc:	mov	r0, #0
   1f300:	bl	dc34 <exit@plt>
   1f304:	.word	0x00022c8b
   1f308:	.word	0x00022c16
   1f30c:	.word	0x00022c19
   1f310:	.word	0x0003b894
   1f314:	.word	0x00022bfe

0001f318 <ircd_log_cb>:
   1f318:	mov	r2, r0
   1f31c:	ldr	r1, [pc, #8]	; 1f32c <ircd_log_cb+0x14>
   1f320:	add	r1, pc, r1
   1f324:	mov	r0, #0
   1f328:	b	e0b4 <ilog@plt>
   1f32c:	.word	0x00022c07

0001f330 <ircd_restart_cb>:
   1f330:	push	{fp, lr}
   1f334:	mov	fp, sp
   1f338:	mov	r4, r0
   1f33c:	ldr	r0, [pc, #16]	; 1f354 <ircd_restart_cb+0x24>
   1f340:	add	r0, pc, r0
   1f344:	mov	r1, r4
   1f348:	bl	d10c <inotice@plt>
   1f34c:	mov	r0, r4
   1f350:	bl	d130 <restart@plt>
   1f354:	.word	0x00022bf9

0001f358 <ircd_die_cb>:
   1f358:	push	{fp, lr}
   1f35c:	mov	fp, sp
   1f360:	cmp	r0, #0
   1f364:	bne	1f378 <ircd_die_cb+0x20>
   1f368:	ldr	r0, [pc, #80]	; 1f3c0 <ircd_die_cb+0x68>
   1f36c:	add	r0, pc, r0
   1f370:	bl	d10c <inotice@plt>
   1f374:	b	1f3a4 <ircd_die_cb+0x4c>
   1f378:	mov	r4, r0
   1f37c:	ldr	r5, [pc, #56]	; 1f3bc <ircd_die_cb+0x64>
   1f380:	add	r5, pc, r5
   1f384:	mov	r0, #256	; 0x100
   1f388:	mov	r1, #256	; 0x100
   1f38c:	mov	r2, r5
   1f390:	mov	r3, r4
   1f394:	bl	d640 <sendto_realops_snomask@plt>
   1f398:	mov	r0, r5
   1f39c:	mov	r1, r4
   1f3a0:	bl	d10c <inotice@plt>
   1f3a4:	ldr	r0, [pc, #24]	; 1f3c4 <ircd_die_cb+0x6c>
   1f3a8:	ldr	r0, [pc, r0]
   1f3ac:	ldr	r0, [r0]
   1f3b0:	bl	d6a0 <unlink@plt>
   1f3b4:	mov	r0, #1
   1f3b8:	bl	dc34 <exit@plt>
   1f3bc:	.word	0x00022be3
   1f3c0:	.word	0x00022c27
   1f3c4:	.word	0x0003b714

0001f3c8 <seed_random>:
   1f3c8:	push	{fp, lr}
   1f3cc:	mov	fp, sp
   1f3d0:	sub	sp, sp, #8
   1f3d4:	add	r0, sp, #4
   1f3d8:	mov	r1, #4
   1f3dc:	bl	daf0 <rb_get_random@plt>
   1f3e0:	cmn	r0, #1
   1f3e4:	beq	1f3f8 <seed_random+0x30>
   1f3e8:	ldr	r0, [sp, #4]
   1f3ec:	bl	dd0c <srand@plt>
   1f3f0:	mov	sp, fp
   1f3f4:	pop	{fp, pc}
   1f3f8:	bl	1f794 <seed_with_urandom>
   1f3fc:	cmp	r0, #0
   1f400:	beq	1f40c <seed_random+0x44>
   1f404:	mov	sp, fp
   1f408:	pop	{fp, pc}
   1f40c:	bl	1f7fc <seed_with_clock>
   1f410:	mov	sp, fp
   1f414:	pop	{fp, pc}

0001f418 <initialize_server_capabs>:
   1f418:	ldr	r0, [pc, #28]	; 1f43c <initialize_server_capabs+0x24>
   1f41c:	ldr	r0, [pc, r0]
   1f420:	ldr	r0, [r0]
   1f424:	ldr	r1, [pc, #20]	; 1f440 <initialize_server_capabs+0x28>
   1f428:	ldr	r1, [pc, r1]
   1f42c:	ldr	r2, [r1]
   1f430:	bic	r0, r2, r0
   1f434:	str	r0, [r1]
   1f438:	bx	lr
   1f43c:	.word	0x0003b4c8
   1f440:	.word	0x0003b674

0001f444 <initialize_global_set_options>:
   1f444:	push	{r4, r5, r6, r7, fp, lr}
   1f448:	add	fp, sp, #16
   1f44c:	ldr	r4, [pc, #292]	; 1f578 <initialize_global_set_options+0x134>
   1f450:	ldr	r4, [pc, r4]
   1f454:	vmov.i32	q8, #0	; 0x00000000
   1f458:	add	r0, r4, #12
   1f45c:	vst1.32	{d16-d17}, [r0]
   1f460:	mov	r0, #1
   1f464:	str	r0, [r4, #4]
   1f468:	add	r0, r4, #108	; 0x6c
   1f46c:	vst1.32	{d16-d17}, [r0]
   1f470:	add	r0, r4, #92	; 0x5c
   1f474:	vst1.32	{d16-d17}, [r0]
   1f478:	add	r0, r4, #76	; 0x4c
   1f47c:	vst1.32	{d16-d17}, [r0]
   1f480:	add	r0, r4, #60	; 0x3c
   1f484:	vst1.32	{d16-d17}, [r0]
   1f488:	add	r0, r4, #44	; 0x2c
   1f48c:	vst1.32	{d16-d17}, [r0]
   1f490:	add	r0, r4, #28
   1f494:	vst1.32	{d16-d17}, [r0]
   1f498:	mov	r0, #60	; 0x3c
   1f49c:	mov	r1, #25
   1f4a0:	str	r1, [r4, #16]
   1f4a4:	str	r0, [r4, #20]
   1f4a8:	ldr	r7, [pc, #204]	; 1f57c <initialize_global_set_options+0x138>
   1f4ac:	ldr	r7, [pc, r7]
   1f4b0:	ldr	r0, [r7, #244]	; 0xf4
   1f4b4:	str	r0, [r4, #8]
   1f4b8:	ldr	r0, [pc, #192]	; 1f580 <initialize_global_set_options+0x13c>
   1f4bc:	ldr	r0, [pc, r0]
   1f4c0:	ldr	r2, [r0, #48]	; 0x30
   1f4c4:	ldr	r1, [r0, #52]	; 0x34
   1f4c8:	ldr	r3, [pc, #180]	; 1f584 <initialize_global_set_options+0x140>
   1f4cc:	ldr	r3, [pc, r3]
   1f4d0:	str	r2, [r3]
   1f4d4:	ldr	r3, [pc, #172]	; 1f588 <initialize_global_set_options+0x144>
   1f4d8:	ldr	r3, [pc, r3]
   1f4dc:	ldr	r6, [r3, #276]	; 0x114
   1f4e0:	ldr	r5, [pc, #164]	; 1f58c <initialize_global_set_options+0x148>
   1f4e4:	ldr	r5, [pc, r5]
   1f4e8:	ldr	r5, [r5]
   1f4ec:	sub	r5, r5, #60	; 0x3c
   1f4f0:	cmp	r6, r5
   1f4f4:	mov	r3, r6
   1f4f8:	movgt	r3, r5
   1f4fc:	cmp	r6, #1
   1f500:	movlt	r3, r5
   1f504:	str	r3, [r4]
   1f508:	ldr	r3, [pc, #128]	; 1f590 <initialize_global_set_options+0x14c>
   1f50c:	ldr	r3, [pc, r3]
   1f510:	str	r1, [r3]
   1f514:	cmp	r2, #0
   1f518:	beq	1f54c <initialize_global_set_options+0x108>
   1f51c:	cmp	r1, #0
   1f520:	ldrne	r1, [r0, #40]	; 0x28
   1f524:	ldrne	r0, [r0, #44]	; 0x2c
   1f528:	orrsne	r0, r0, r1
   1f52c:	beq	1f54c <initialize_global_set_options+0x108>
   1f530:	ldr	r0, [pc, #92]	; 1f594 <initialize_global_set_options+0x150>
   1f534:	ldr	r0, [pc, r0]
   1f538:	mov	r1, #1
   1f53c:	str	r1, [r0]
   1f540:	ldr	r0, [pc, #80]	; 1f598 <initialize_global_set_options+0x154>
   1f544:	ldr	r0, [pc, r0]
   1f548:	str	r1, [r0]
   1f54c:	ldr	r1, [r7, #8]
   1f550:	ldr	r0, [r7, #248]	; 0xf8
   1f554:	str	r0, [r4, #12]
   1f558:	add	r0, r4, #24
   1f55c:	mov	r2, #50	; 0x32
   1f560:	bl	e510 <rb_strlcpy@plt>
   1f564:	ldr	r1, [r7, #12]
   1f568:	add	r0, r4, #74	; 0x4a
   1f56c:	mov	r2, #50	; 0x32
   1f570:	pop	{r4, r5, r6, r7, fp, lr}
   1f574:	b	e510 <rb_strlcpy@plt>
   1f578:	.word	0x0003b408
   1f57c:	.word	0x0003b6d0
   1f580:	.word	0x0003b65c
   1f584:	.word	0x0003b534
   1f588:	.word	0x0003b478
   1f58c:	.word	0x0003b5e4
   1f590:	.word	0x0003b504
   1f594:	.word	0x0003b4c0
   1f598:	.word	0x0003b618

0001f59c <rb_dlinkAdd>:
   1f59c:	cmp	r0, #0
   1f5a0:	beq	1f600 <rb_dlinkAdd+0x64>
   1f5a4:	mov	r1, #0
   1f5a8:	str	r1, [r0, #4]
   1f5ac:	ldr	r1, [pc, #116]	; 1f628 <rb_dlinkAdd+0x8c>
   1f5b0:	ldr	r1, [pc, r1]
   1f5b4:	str	r1, [r0]
   1f5b8:	ldr	r1, [pc, #108]	; 1f62c <rb_dlinkAdd+0x90>
   1f5bc:	ldr	r1, [pc, r1]
   1f5c0:	ldr	r2, [r1]
   1f5c4:	str	r2, [r0, #8]
   1f5c8:	cmp	r2, #0
   1f5cc:	beq	1f5dc <rb_dlinkAdd+0x40>
   1f5d0:	add	r2, r2, #4
   1f5d4:	str	r0, [r2]
   1f5d8:	b	1f5ec <rb_dlinkAdd+0x50>
   1f5dc:	mov	r2, r1
   1f5e0:	ldr	r3, [r2, #4]!
   1f5e4:	cmp	r3, #0
   1f5e8:	streq	r0, [r2]
   1f5ec:	str	r0, [r1]
   1f5f0:	ldr	r0, [r1, #8]
   1f5f4:	add	r0, r0, #1
   1f5f8:	str	r0, [r1, #8]
   1f5fc:	bx	lr
   1f600:	push	{fp, lr}
   1f604:	mov	fp, sp
   1f608:	ldr	r0, [pc, #32]	; 1f630 <rb_dlinkAdd+0x94>
   1f60c:	add	r0, pc, r0
   1f610:	ldr	r1, [pc, #28]	; 1f634 <rb_dlinkAdd+0x98>
   1f614:	add	r1, pc, r1
   1f618:	ldr	r3, [pc, #24]	; 1f638 <rb_dlinkAdd+0x9c>
   1f61c:	add	r3, pc, r3
   1f620:	mov	r2, #144	; 0x90
   1f624:	bl	e7e0 <__assert_fail@plt>
   1f628:	.word	0x0003b5a8
   1f62c:	.word	0x0003b2bc
   1f630:	.word	0x00020fa0
   1f634:	.word	0x00020fa2
   1f638:	.word	0x00021002

0001f63c <write_pidfile>:
   1f63c:	push	{r4, r5, r6, r7, fp, lr}
   1f640:	add	fp, sp, #16
   1f644:	sub	sp, sp, #40	; 0x28
   1f648:	mov	r4, r0
   1f64c:	ldr	r1, [pc, #156]	; 1f6f0 <write_pidfile+0xb4>
   1f650:	add	r1, pc, r1
   1f654:	bl	d1f0 <fopen@plt>
   1f658:	cmp	r0, #0
   1f65c:	beq	1f6d4 <write_pidfile+0x98>
   1f660:	mov	r5, r0
   1f664:	bl	dc28 <getpid@plt>
   1f668:	mov	r6, r0
   1f66c:	add	r7, sp, #8
   1f670:	ldr	r2, [pc, #124]	; 1f6f4 <write_pidfile+0xb8>
   1f674:	add	r2, pc, r2
   1f678:	mov	r0, r7
   1f67c:	mov	r1, #32
   1f680:	mov	r3, r6
   1f684:	bl	de74 <snprintf@plt>
   1f688:	mov	r0, r7
   1f68c:	mov	r1, r5
   1f690:	bl	cfb0 <fputs_unlocked@plt>
   1f694:	cmn	r0, #1
   1f698:	bne	1f6c4 <write_pidfile+0x88>
   1f69c:	bl	de38 <__errno_location@plt>
   1f6a0:	ldr	r0, [r0]
   1f6a4:	bl	dacc <strerror@plt>
   1f6a8:	str	r0, [sp]
   1f6ac:	ldr	r1, [pc, #68]	; 1f6f8 <write_pidfile+0xbc>
   1f6b0:	add	r1, pc, r1
   1f6b4:	mov	r0, #0
   1f6b8:	mov	r2, r6
   1f6bc:	mov	r3, r4
   1f6c0:	bl	e0b4 <ilog@plt>
   1f6c4:	mov	r0, r5
   1f6c8:	bl	e0f0 <fclose@plt>
   1f6cc:	sub	sp, fp, #16
   1f6d0:	pop	{r4, r5, r6, r7, fp, pc}
   1f6d4:	ldr	r1, [pc, #32]	; 1f6fc <write_pidfile+0xc0>
   1f6d8:	add	r1, pc, r1
   1f6dc:	mov	r0, #0
   1f6e0:	mov	r2, r4
   1f6e4:	bl	e0b4 <ilog@plt>
   1f6e8:	sub	sp, fp, #16
   1f6ec:	pop	{r4, r5, r6, r7, fp, pc}
   1f6f0:	.word	0x0002338d
   1f6f4:	.word	0x00022958
   1f6f8:	.word	0x00022920
   1f6fc:	.word	0x0002291d

0001f700 <check_rehash>:
   1f700:	push	{r4, r5, fp, lr}
   1f704:	add	fp, sp, #8
   1f708:	ldr	r4, [pc, #116]	; 1f784 <check_rehash+0x84>
   1f70c:	ldr	r4, [pc, r4]
   1f710:	ldr	r0, [r4]
   1f714:	cmp	r0, #0
   1f718:	beq	1f72c <check_rehash+0x2c>
   1f71c:	mov	r0, #1
   1f720:	bl	d4d8 <rehash@plt>
   1f724:	mov	r0, #0
   1f728:	str	r0, [r4]
   1f72c:	ldr	r4, [pc, #84]	; 1f788 <check_rehash+0x88>
   1f730:	ldr	r4, [pc, r4]
   1f734:	ldr	r0, [r4]
   1f738:	cmp	r0, #0
   1f73c:	beq	1f74c <check_rehash+0x4c>
   1f740:	bl	e42c <rehash_bans@plt>
   1f744:	mov	r0, #0
   1f748:	str	r0, [r4]
   1f74c:	ldr	r4, [pc, #56]	; 1f78c <check_rehash+0x8c>
   1f750:	ldr	r4, [pc, r4]
   1f754:	ldr	r0, [r4]
   1f758:	cmp	r0, #0
   1f75c:	popeq	{r4, r5, fp, pc}
   1f760:	mov	r5, #0
   1f764:	ldr	r2, [pc, #36]	; 1f790 <check_rehash+0x90>
   1f768:	add	r2, pc, r2
   1f76c:	mov	r0, #256	; 0x100
   1f770:	mov	r1, #0
   1f774:	bl	d640 <sendto_realops_snomask@plt>
   1f778:	bl	dcb8 <cache_user_motd@plt>
   1f77c:	str	r5, [r4]
   1f780:	pop	{r4, r5, fp, pc}
   1f784:	.word	0x0003b45c
   1f788:	.word	0x0003b40c
   1f78c:	.word	0x0003b360
   1f790:	.word	0x000228a7

0001f794 <seed_with_urandom>:
   1f794:	push	{r4, r5, r6, sl, fp, lr}
   1f798:	add	fp, sp, #16
   1f79c:	sub	sp, sp, #8
   1f7a0:	ldr	r0, [pc, #80]	; 1f7f8 <seed_with_urandom+0x64>
   1f7a4:	add	r0, pc, r0
   1f7a8:	mov	r4, #0
   1f7ac:	mov	r1, #0
   1f7b0:	bl	dbf8 <open@plt>
   1f7b4:	cmp	r0, #0
   1f7b8:	blt	1f7ec <seed_with_urandom+0x58>
   1f7bc:	mov	r5, r0
   1f7c0:	add	r1, sp, #4
   1f7c4:	mov	r2, #4
   1f7c8:	bl	d214 <read@plt>
   1f7cc:	mov	r6, r0
   1f7d0:	mov	r0, r5
   1f7d4:	bl	e72c <close@plt>
   1f7d8:	cmp	r6, #4
   1f7dc:	bne	1f7ec <seed_with_urandom+0x58>
   1f7e0:	ldr	r0, [sp, #4]
   1f7e4:	bl	dd0c <srand@plt>
   1f7e8:	mov	r4, #1
   1f7ec:	mov	r0, r4
   1f7f0:	sub	sp, fp, #16
   1f7f4:	pop	{r4, r5, r6, sl, fp, pc}
   1f7f8:	.word	0x0002281b

0001f7fc <seed_with_clock>:
   1f7fc:	push	{r4, r5, fp, lr}
   1f800:	add	fp, sp, #8
   1f804:	bl	da0c <rb_set_time@plt>
   1f808:	bl	d610 <rb_current_time_tv@plt>
   1f80c:	ldm	r0, {r4, r5}
   1f810:	bl	dc28 <getpid@plt>
   1f814:	orr	r0, r5, r0, lsl #20
   1f818:	eor	r0, r0, r4
   1f81c:	pop	{r4, r5, fp, lr}
   1f820:	b	dd0c <srand@plt>

0001f824 <yyparse>:
   1f824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f828:	add	fp, sp, #28
   1f82c:	sub	sp, sp, #420	; 0x1a4
   1f830:	sub	sp, sp, #205824	; 0x32400
   1f834:	ldr	r8, [pc, #1668]	; 1fec0 <yyparse+0x69c>
   1f838:	ldr	r8, [pc, r8]
   1f83c:	mvn	r0, #1
   1f840:	str	r0, [r8]
   1f844:	ldr	r0, [pc, #1656]	; 1fec4 <yyparse+0x6a0>
   1f848:	ldr	r0, [pc, r0]
   1f84c:	mov	r1, #0
   1f850:	str	r1, [r0]
   1f854:	mov	r2, #200	; 0xc8
   1f858:	add	r6, sp, #1040	; 0x410
   1f85c:	sub	r3, fp, #432	; 0x1b0
   1f860:	ldr	r5, [pc, #1632]	; 1fec8 <yyparse+0x6a4>
   1f864:	add	r5, pc, r5
   1f868:	ldr	r9, [pc, #1628]	; 1fecc <yyparse+0x6a8>
   1f86c:	add	r9, pc, r9
   1f870:	str	r6, [sp, #4]
   1f874:	mov	sl, r3
   1f878:	mov	r0, #0
   1f87c:	str	r0, [sp]
   1f880:	mov	r7, #0
   1f884:	b	1f88c <yyparse+0x68>
   1f888:	add	sl, sl, #2
   1f88c:	strh	r7, [sl]
   1f890:	add	r0, r3, r2, lsl #1
   1f894:	sub	r0, r0, #2
   1f898:	cmp	r0, sl
   1f89c:	bhi	1f970 <yyparse+0x14c>
   1f8a0:	mov	r8, r3
   1f8a4:	movw	r0, #9999	; 0x270f
   1f8a8:	cmp	r2, r0
   1f8ac:	movw	r9, #1023	; 0x3ff
   1f8b0:	bhi	1fe94 <yyparse+0x670>
   1f8b4:	lsl	r0, r2, #1
   1f8b8:	movw	r1, #10000	; 0x2710
   1f8bc:	cmp	r0, r1
   1f8c0:	movw	r4, #10000	; 0x2710
   1f8c4:	lslcc	r4, r2, #1
   1f8c8:	add	r0, r4, r4, lsl #9
   1f8cc:	add	r0, r9, r0, lsl #1
   1f8d0:	bl	da90 <malloc@plt>
   1f8d4:	cmp	r0, #0
   1f8d8:	beq	1fe94 <yyparse+0x670>
   1f8dc:	mov	r5, r0
   1f8e0:	sub	r0, sl, r8
   1f8e4:	mov	r1, #1
   1f8e8:	add	r6, r1, r0, asr #1
   1f8ec:	asr	sl, r0, #1
   1f8f0:	lsl	r2, r6, #1
   1f8f4:	mov	r0, r5
   1f8f8:	mov	r1, r8
   1f8fc:	bl	d40c <memcpy@plt>
   1f900:	add	r0, r9, r4, lsl #1
   1f904:	bfc	r0, #0, #10
   1f908:	add	r9, r5, r0
   1f90c:	lsl	r2, r6, #10
   1f910:	mov	r0, r9
   1f914:	ldr	r1, [sp, #4]
   1f918:	bl	d40c <memcpy@plt>
   1f91c:	sub	r0, fp, #432	; 0x1b0
   1f920:	cmp	r8, r0
   1f924:	beq	1f930 <yyparse+0x10c>
   1f928:	mov	r0, r8
   1f92c:	bl	d328 <free@plt>
   1f930:	mov	r1, sl
   1f934:	add	sl, r5, sl, lsl #1
   1f938:	add	r0, r5, r4, lsl #1
   1f93c:	sub	r0, r0, #2
   1f940:	cmp	r0, sl
   1f944:	bls	1feb4 <yyparse+0x690>
   1f948:	add	r6, r9, r1, lsl #10
   1f94c:	mov	r2, r4
   1f950:	str	r9, [sp, #4]
   1f954:	mov	r3, r5
   1f958:	ldr	r8, [pc, #1396]	; 1fed4 <yyparse+0x6b0>
   1f95c:	ldr	r8, [pc, r8]
   1f960:	ldr	r5, [pc, #1392]	; 1fed8 <yyparse+0x6b4>
   1f964:	add	r5, pc, r5
   1f968:	ldr	r9, [pc, #1388]	; 1fedc <yyparse+0x6b8>
   1f96c:	add	r9, pc, r9
   1f970:	cmp	r7, #3
   1f974:	beq	1feac <yyparse+0x688>
   1f978:	add	r0, r5, r7
   1f97c:	ldrsb	r4, [r0]
   1f980:	cmn	r4, #33	; 0x21
   1f984:	str	r3, [sp, #12]
   1f988:	str	r2, [sp, #8]
   1f98c:	beq	1fa3c <yyparse+0x218>
   1f990:	ldr	r0, [r8]
   1f994:	cmn	r0, #2
   1f998:	bne	1f9a8 <yyparse+0x184>
   1f99c:	bl	e18c <yylex@plt>
   1f9a0:	ldr	r3, [sp, #12]
   1f9a4:	str	r0, [r8]
   1f9a8:	cmp	r0, #0
   1f9ac:	ble	1f9cc <yyparse+0x1a8>
   1f9b0:	mov	r1, #2
   1f9b4:	movw	r2, #262	; 0x106
   1f9b8:	cmp	r0, r2
   1f9bc:	ldrls	r1, [pc, #1308]	; 1fee0 <yyparse+0x6bc>
   1f9c0:	addls	r1, pc, r1
   1f9c4:	ldrbls	r1, [r1, r0]
   1f9c8:	b	1f9d4 <yyparse+0x1b0>
   1f9cc:	mov	r1, #0
   1f9d0:	str	r1, [r8]
   1f9d4:	add	r0, r1, r4
   1f9d8:	cmp	r0, #42	; 0x2a
   1f9dc:	bhi	1fa3c <yyparse+0x218>
   1f9e0:	ldr	r2, [pc, #1276]	; 1fee4 <yyparse+0x6c0>
   1f9e4:	add	r2, pc, r2
   1f9e8:	ldrb	r2, [r2, r0]
   1f9ec:	cmp	r1, r2
   1f9f0:	bne	1fa3c <yyparse+0x218>
   1f9f4:	add	r0, r9, r0
   1f9f8:	ldrsb	r7, [r0]
   1f9fc:	cmp	r7, #0
   1fa00:	ble	1fb5c <yyparse+0x338>
   1fa04:	mvn	r0, #1
   1fa08:	str	r0, [r8]
   1fa0c:	add	r6, r6, #1024	; 0x400
   1fa10:	mov	r0, r6
   1fa14:	ldr	r1, [pc, #1204]	; 1fed0 <yyparse+0x6ac>
   1fa18:	ldr	r1, [pc, r1]
   1fa1c:	mov	r2, #1024	; 0x400
   1fa20:	bl	d40c <memcpy@plt>
   1fa24:	ldr	r2, [sp, #8]
   1fa28:	ldr	r3, [sp, #12]
   1fa2c:	ldr	r0, [sp]
   1fa30:	cmp	r0, #0
   1fa34:	subne	r0, r0, #1
   1fa38:	b	1fbd8 <yyparse+0x3b4>
   1fa3c:	ldr	r0, [pc, #1188]	; 1fee8 <yyparse+0x6c4>
   1fa40:	add	r0, pc, r0
   1fa44:	ldrb	r4, [r0, r7]
   1fa48:	cmp	r4, #0
   1fa4c:	beq	1faf4 <yyparse+0x2d0>
   1fa50:	ldr	r0, [pc, #1172]	; 1feec <yyparse+0x6c8>
   1fa54:	add	r0, pc, r0
   1fa58:	ldrb	r9, [r0, r4]
   1fa5c:	rsb	r0, r9, #1
   1fa60:	add	r1, r6, r0, lsl #10
   1fa64:	add	r0, sp, #16
   1fa68:	mov	r2, #1024	; 0x400
   1fa6c:	bl	d40c <memcpy@plt>
   1fa70:	sub	r0, r4, #7
   1fa74:	cmp	r0, #22
   1fa78:	bhi	1fdd8 <yyparse+0x5b4>
   1fa7c:	add	r1, pc, #4
   1fa80:	ldr	r0, [r1, r0, lsl #2]
   1fa84:	add	pc, r1, r0
   1fa88:	.word	0x00000158
   1fa8c:	.word	0x00000168
   1fa90:	.word	0x00000174
   1fa94:	.word	0x00000184
   1fa98:	.word	0x00000350
   1fa9c:	.word	0x00000350
   1faa0:	.word	0x000001a0
   1faa4:	.word	0x00000350
   1faa8:	.word	0x00000350
   1faac:	.word	0x000001d8
   1fab0:	.word	0x000001e4
   1fab4:	.word	0x0000024c
   1fab8:	.word	0x0000025c
   1fabc:	.word	0x0000026c
   1fac0:	.word	0x00000288
   1fac4:	.word	0x000002b8
   1fac8:	.word	0x00000350
   1facc:	.word	0x0000005c
   1fad0:	.word	0x0000005c
   1fad4:	.word	0x000002ec
   1fad8:	.word	0x000002f4
   1fadc:	.word	0x000000c4
   1fae0:	.word	0x000000c4
   1fae4:	add	r0, sp, #16
   1fae8:	mov	r1, r6
   1faec:	bl	d928 <strcpy@plt>
   1faf0:	b	1fdd8 <yyparse+0x5b4>
   1faf4:	ldr	r0, [sp]
   1faf8:	cmp	r0, #3
   1fafc:	beq	1fb34 <yyparse+0x310>
   1fb00:	cmp	r0, #0
   1fb04:	bne	1fb68 <yyparse+0x344>
   1fb08:	ldr	r0, [pc, #1040]	; 1ff20 <yyparse+0x6fc>
   1fb0c:	ldr	r0, [pc, r0]
   1fb10:	mov	r1, r0
   1fb14:	ldr	r0, [r0]
   1fb18:	add	r0, r0, #1
   1fb1c:	str	r0, [r1]
   1fb20:	ldr	r0, [pc, #1020]	; 1ff24 <yyparse+0x700>
   1fb24:	add	r0, pc, r0
   1fb28:	bl	d484 <yyerror@plt>
   1fb2c:	ldr	r3, [sp, #12]
   1fb30:	b	1fb68 <yyparse+0x344>
   1fb34:	ldr	r0, [r8]
   1fb38:	cmp	r0, #0
   1fb3c:	ble	1fb64 <yyparse+0x340>
   1fb40:	mvn	r0, #1
   1fb44:	str	r0, [r8]
   1fb48:	b	1fb68 <yyparse+0x344>
   1fb4c:	ldr	r0, [r6, #-1024]	; 0xfffffc00
   1fb50:	ldr	r1, [r6]
   1fb54:	add	r0, r1, r0
   1fb58:	b	1fda8 <yyparse+0x584>
   1fb5c:	rsb	r4, r7, #0
   1fb60:	b	1fa50 <yyparse+0x22c>
   1fb64:	beq	1fe70 <yyparse+0x64c>
   1fb68:	add	r6, r6, #1024	; 0x400
   1fb6c:	b	1fb78 <yyparse+0x354>
   1fb70:	sub	r6, r6, #1024	; 0x400
   1fb74:	ldrsh	r7, [sl, #-2]!
   1fb78:	add	r0, r5, r7
   1fb7c:	ldrsb	r0, [r0]
   1fb80:	cmn	r0, #33	; 0x21
   1fb84:	beq	1fbac <yyparse+0x388>
   1fb88:	cmn	r0, #1
   1fb8c:	blt	1fbac <yyparse+0x388>
   1fb90:	add	r0, r0, #1
   1fb94:	cmp	r0, #12
   1fb98:	bne	1fbac <yyparse+0x388>
   1fb9c:	add	r0, r9, r0
   1fba0:	ldrsb	r7, [r0]
   1fba4:	cmp	r7, #0
   1fba8:	bgt	1fbb8 <yyparse+0x394>
   1fbac:	cmp	r3, sl
   1fbb0:	bne	1fb70 <yyparse+0x34c>
   1fbb4:	b	1fe70 <yyparse+0x64c>
   1fbb8:	mov	r0, r6
   1fbbc:	ldr	r1, [pc, #868]	; 1ff28 <yyparse+0x704>
   1fbc0:	ldr	r1, [pc, r1]
   1fbc4:	mov	r2, #1024	; 0x400
   1fbc8:	bl	d40c <memcpy@plt>
   1fbcc:	ldr	r2, [sp, #8]
   1fbd0:	ldr	r3, [sp, #12]
   1fbd4:	mov	r0, #3
   1fbd8:	str	r0, [sp]
   1fbdc:	b	1f888 <yyparse+0x64>
   1fbe0:	mov	r0, r6
   1fbe4:	mov	r1, #0
   1fbe8:	bl	e774 <conf_start_block@plt>
   1fbec:	b	1fdd8 <yyparse+0x5b4>
   1fbf0:	ldr	r0, [pc, #760]	; 1fef0 <yyparse+0x6cc>
   1fbf4:	ldr	r0, [pc, r0]
   1fbf8:	b	1fc14 <yyparse+0x3f0>
   1fbfc:	sub	r0, r6, #1024	; 0x400
   1fc00:	mov	r1, r6
   1fc04:	bl	e774 <conf_start_block@plt>
   1fc08:	b	1fdd8 <yyparse+0x5b4>
   1fc0c:	ldr	r0, [pc, #736]	; 1fef4 <yyparse+0x6d0>
   1fc10:	ldr	r0, [pc, r0]
   1fc14:	ldr	r0, [r0]
   1fc18:	cmp	r0, #0
   1fc1c:	beq	1fdd8 <yyparse+0x5b4>
   1fc20:	bl	e5d0 <conf_end_block@plt>
   1fc24:	b	1fdd8 <yyparse+0x5b4>
   1fc28:	ldr	r0, [pc, #712]	; 1fef8 <yyparse+0x6d4>
   1fc2c:	ldr	r0, [pc, r0]
   1fc30:	mov	r7, r0
   1fc34:	ldr	r2, [r0]
   1fc38:	ldr	r0, [pc, #700]	; 1fefc <yyparse+0x6d8>
   1fc3c:	ldr	r0, [pc, r0]
   1fc40:	ldr	r0, [r0]
   1fc44:	sub	r1, r6, #3072	; 0xc00
   1fc48:	bl	d718 <conf_call_set@plt>
   1fc4c:	ldr	r0, [r7]
   1fc50:	bl	1ff30 <free_cur_list>
   1fc54:	mov	r0, #0
   1fc58:	str	r0, [r7]
   1fc5c:	b	1fdd8 <yyparse+0x5b4>
   1fc60:	ldr	r0, [r6]
   1fc64:	bl	1ff84 <add_cur_list_cpt>
   1fc68:	b	1fdd8 <yyparse+0x5b4>
   1fc6c:	ldr	r0, [r6, #-2048]	; 0xfffff800
   1fc70:	ldr	r1, [r0, #4]
   1fc74:	cmp	r1, #2
   1fc78:	bne	1fdb0 <yyparse+0x58c>
   1fc7c:	ldr	r1, [r6]
   1fc80:	ldr	r1, [r1, #4]
   1fc84:	cmp	r1, #2
   1fc88:	bne	1fdb0 <yyparse+0x58c>
   1fc8c:	ldr	r7, [r0, #8]
   1fc90:	ldr	r0, [r6]
   1fc94:	ldr	r0, [r0, #8]
   1fc98:	cmp	r7, r0
   1fc9c:	bgt	1fcc0 <yyparse+0x49c>
   1fca0:	mov	r0, r7
   1fca4:	bl	1ffd4 <add_cur_list>
   1fca8:	add	r0, r7, #1
   1fcac:	ldr	r1, [r6]
   1fcb0:	ldr	r1, [r1, #8]
   1fcb4:	cmp	r7, r1
   1fcb8:	mov	r7, r0
   1fcbc:	blt	1fca0 <yyparse+0x47c>
   1fcc0:	ldr	r0, [r6, #-2048]	; 0xfffff800
   1fcc4:	bl	1fff8 <rb_free>
   1fcc8:	ldr	r0, [r6]
   1fccc:	bl	1fff8 <rb_free>
   1fcd0:	b	1fdd8 <yyparse+0x5b4>
   1fcd4:	bl	20004 <rb_malloc>
   1fcd8:	str	r0, [sp, #16]
   1fcdc:	mov	r1, #1
   1fce0:	b	1fdc4 <yyparse+0x5a0>
   1fce4:	bl	20004 <rb_malloc>
   1fce8:	str	r0, [sp, #16]
   1fcec:	mov	r1, #4
   1fcf0:	b	1fd00 <yyparse+0x4dc>
   1fcf4:	bl	20004 <rb_malloc>
   1fcf8:	str	r0, [sp, #16]
   1fcfc:	mov	r1, #2
   1fd00:	str	r1, [r0, #4]
   1fd04:	ldr	r1, [r6]
   1fd08:	str	r1, [r0, #8]
   1fd0c:	b	1fdd8 <yyparse+0x5b4>
   1fd10:	mov	r0, r6
   1fd14:	bl	2005c <conf_get_yesno_value>
   1fd18:	mov	r7, r0
   1fd1c:	bl	20004 <rb_malloc>
   1fd20:	str	r0, [sp, #16]
   1fd24:	cmn	r7, #1
   1fd28:	beq	1fdc0 <yyparse+0x59c>
   1fd2c:	mov	r1, #5
   1fd30:	str	r1, [r0, #4]
   1fd34:	ldr	r0, [sp, #16]
   1fd38:	str	r7, [r0, #8]
   1fd3c:	b	1fdd8 <yyparse+0x5b4>
   1fd40:	mov	r0, r6
   1fd44:	bl	da3c <rb_basename@plt>
   1fd48:	mov	r7, r0
   1fd4c:	bl	d160 <findmodule_byname@plt>
   1fd50:	cmp	r0, #0
   1fd54:	bne	1fd68 <yyparse+0x544>
   1fd58:	mov	r0, r6
   1fd5c:	mov	r1, #1
   1fd60:	mov	r2, #0
   1fd64:	bl	debc <load_one_module@plt>
   1fd68:	mov	r0, r7
   1fd6c:	bl	1fff8 <rb_free>
   1fd70:	b	1fdd8 <yyparse+0x5b4>
   1fd74:	ldr	r0, [r6]
   1fd78:	b	1fda8 <yyparse+0x584>
   1fd7c:	mov	r0, r6
   1fd80:	bl	200ac <conf_find_time>
   1fd84:	cmp	r0, #0
   1fd88:	bne	1fda0 <yyparse+0x57c>
   1fd8c:	ldr	r0, [pc, #368]	; 1ff04 <yyparse+0x6e0>
   1fd90:	add	r0, pc, r0
   1fd94:	mov	r1, r6
   1fd98:	bl	d400 <conf_report_error@plt>
   1fd9c:	mov	r0, #1
   1fda0:	ldr	r1, [r6, #-1024]	; 0xfffffc00
   1fda4:	mul	r0, r1, r0
   1fda8:	str	r0, [sp, #16]
   1fdac:	b	1fdd8 <yyparse+0x5b4>
   1fdb0:	ldr	r0, [pc, #328]	; 1ff00 <yyparse+0x6dc>
   1fdb4:	add	r0, pc, r0
   1fdb8:	bl	d400 <conf_report_error@plt>
   1fdbc:	b	1fdd8 <yyparse+0x5b4>
   1fdc0:	mov	r1, #3
   1fdc4:	str	r1, [r0, #4]
   1fdc8:	mov	r0, r6
   1fdcc:	bl	20024 <rb_strdup>
   1fdd0:	ldr	r1, [sp, #16]
   1fdd4:	str	r0, [r1, #8]
   1fdd8:	sub	r0, r6, r9, lsl #10
   1fddc:	add	r6, r0, #1024	; 0x400
   1fde0:	mov	r0, r6
   1fde4:	add	r1, sp, #16
   1fde8:	mov	r2, #1024	; 0x400
   1fdec:	bl	d40c <memcpy@plt>
   1fdf0:	lsl	r0, r9, #1
   1fdf4:	ldrsh	r1, [sl, -r0]!
   1fdf8:	ldr	r0, [pc, #264]	; 1ff08 <yyparse+0x6e4>
   1fdfc:	add	r0, pc, r0
   1fe00:	ldrb	r0, [r0, r4]
   1fe04:	sub	r0, r0, #13
   1fe08:	ldr	r2, [pc, #252]	; 1ff0c <yyparse+0x6e8>
   1fe0c:	add	r2, pc, r2
   1fe10:	add	r2, r2, r0
   1fe14:	ldrsb	r2, [r2]
   1fe18:	add	r2, r1, r2
   1fe1c:	cmp	r2, #42	; 0x2a
   1fe20:	bhi	1fe4c <yyparse+0x628>
   1fe24:	ldr	r3, [pc, #228]	; 1ff10 <yyparse+0x6ec>
   1fe28:	add	r3, pc, r3
   1fe2c:	ldrb	r3, [r3, r2]
   1fe30:	cmp	r3, r1
   1fe34:	bne	1fe4c <yyparse+0x628>
   1fe38:	ldr	r9, [pc, #212]	; 1ff14 <yyparse+0x6f0>
   1fe3c:	add	r9, pc, r9
   1fe40:	add	r0, r9, r2
   1fe44:	ldrsb	r7, [r0]
   1fe48:	b	1fe64 <yyparse+0x640>
   1fe4c:	ldr	r1, [pc, #196]	; 1ff18 <yyparse+0x6f4>
   1fe50:	add	r1, pc, r1
   1fe54:	add	r0, r1, r0
   1fe58:	ldrsb	r7, [r0]
   1fe5c:	ldr	r9, [pc, #184]	; 1ff1c <yyparse+0x6f8>
   1fe60:	add	r9, pc, r9
   1fe64:	ldr	r3, [sp, #12]
   1fe68:	ldr	r2, [sp, #8]
   1fe6c:	b	1f888 <yyparse+0x64>
   1fe70:	mov	r4, #1
   1fe74:	sub	r0, fp, #432	; 0x1b0
   1fe78:	cmp	r3, r0
   1fe7c:	beq	1fe88 <yyparse+0x664>
   1fe80:	mov	r0, r3
   1fe84:	bl	d328 <free@plt>
   1fe88:	mov	r0, r4
   1fe8c:	sub	sp, fp, #28
   1fe90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe94:	ldr	r0, [pc, #144]	; 1ff2c <yyparse+0x708>
   1fe98:	add	r0, pc, r0
   1fe9c:	bl	d484 <yyerror@plt>
   1fea0:	mov	r4, #2
   1fea4:	mov	r3, r8
   1fea8:	b	1fe74 <yyparse+0x650>
   1feac:	mov	r4, #0
   1feb0:	b	1fe74 <yyparse+0x650>
   1feb4:	mov	r4, #1
   1feb8:	mov	r3, r5
   1febc:	b	1fe80 <yyparse+0x65c>
   1fec0:	.word	0x0003b1b8
   1fec4:	.word	0x0003b020
   1fec8:	.word	0x00022804
   1fecc:	.word	0x0002295b
   1fed0:	.word	0x0003b0f0
   1fed4:	.word	0x0003b094
   1fed8:	.word	0x00022704
   1fedc:	.word	0x0002285b
   1fee0:	.word	0x000226d5
   1fee4:	.word	0x000227b8
   1fee8:	.word	0x000227b2
   1feec:	.word	0x000227cb
   1fef0:	.word	0x0003ae18
   1fef4:	.word	0x0003adfc
   1fef8:	.word	0x0003ae94
   1fefc:	.word	0x0003add0
   1ff00:	.word	0x000224c9
   1ff04:	.word	0x0002251f
   1ff08:	.word	0x00022441
   1ff0c:	.word	0x0002244f
   1ff10:	.word	0x00022374
   1ff14:	.word	0x0002238b
   1ff18:	.word	0x0002241c
   1ff1c:	.word	0x00022367
   1ff20:	.word	0x0003ad5c
   1ff24:	.word	0x000227ac
   1ff28:	.word	0x0003af48
   1ff2c:	.word	0x00022445

0001ff30 <free_cur_list>:
   1ff30:	push	{r4, sl, fp, lr}
   1ff34:	add	fp, sp, #8
   1ff38:	mov	r4, r0
   1ff3c:	ldr	r0, [r0, #4]
   1ff40:	cmp	r0, #1
   1ff44:	beq	1ff58 <free_cur_list+0x28>
   1ff48:	cmp	r0, #256	; 0x100
   1ff4c:	beq	1ff64 <free_cur_list+0x34>
   1ff50:	cmp	r0, #3
   1ff54:	bne	1ff6c <free_cur_list+0x3c>
   1ff58:	ldr	r0, [r4, #8]
   1ff5c:	bl	1fff8 <rb_free>
   1ff60:	b	1ff6c <free_cur_list+0x3c>
   1ff64:	ldr	r0, [r4, #8]
   1ff68:	bl	1ff30 <free_cur_list>
   1ff6c:	ldr	r0, [r4]
   1ff70:	cmp	r0, #0
   1ff74:	blne	1ff30 <free_cur_list>
   1ff78:	mov	r0, r4
   1ff7c:	pop	{r4, sl, fp, lr}
   1ff80:	b	1fff8 <rb_free>

0001ff84 <add_cur_list_cpt>:
   1ff84:	push	{r4, r5, fp, lr}
   1ff88:	add	fp, sp, #8
   1ff8c:	mov	r4, r0
   1ff90:	ldr	r5, [pc, #56]	; 1ffd0 <add_cur_list_cpt+0x4c>
   1ff94:	ldr	r5, [pc, r5]
   1ff98:	ldr	r0, [r5]
   1ff9c:	cmp	r0, #0
   1ffa0:	beq	1ffb4 <add_cur_list_cpt+0x30>
   1ffa4:	ldr	r0, [r0, #8]
   1ffa8:	str	r0, [r4]
   1ffac:	ldr	r0, [r5]
   1ffb0:	b	1ffc4 <add_cur_list_cpt+0x40>
   1ffb4:	bl	20004 <rb_malloc>
   1ffb8:	str	r0, [r5]
   1ffbc:	mov	r1, #256	; 0x100
   1ffc0:	str	r1, [r0, #4]
   1ffc4:	add	r0, r0, #8
   1ffc8:	str	r4, [r0]
   1ffcc:	pop	{r4, r5, fp, pc}
   1ffd0:	.word	0x0003ab2c

0001ffd4 <add_cur_list>:
   1ffd4:	push	{r4, sl, fp, lr}
   1ffd8:	add	fp, sp, #8
   1ffdc:	mov	r4, r0
   1ffe0:	bl	20004 <rb_malloc>
   1ffe4:	mov	r1, #0
   1ffe8:	mov	r2, #2
   1ffec:	stm	r0, {r1, r2, r4}
   1fff0:	pop	{r4, sl, fp, lr}
   1fff4:	b	1ff84 <add_cur_list_cpt>

0001fff8 <rb_free>:
   1fff8:	cmp	r0, #0
   1fffc:	bxeq	lr
   20000:	b	d328 <free@plt>

00020004 <rb_malloc>:
   20004:	push	{fp, lr}
   20008:	mov	fp, sp
   2000c:	mov	r0, #1
   20010:	mov	r1, #12
   20014:	bl	cfa4 <calloc@plt>
   20018:	cmp	r0, #0
   2001c:	popne	{fp, pc}
   20020:	bl	d448 <rb_outofmemory@plt>

00020024 <rb_strdup>:
   20024:	push	{r4, r5, fp, lr}
   20028:	add	fp, sp, #8
   2002c:	mov	r4, r0
   20030:	bl	dc94 <strlen@plt>
   20034:	add	r0, r0, #1
   20038:	bl	da90 <malloc@plt>
   2003c:	cmp	r0, #0
   20040:	beq	20058 <rb_strdup+0x34>
   20044:	mov	r5, r0
   20048:	mov	r1, r4
   2004c:	bl	d928 <strcpy@plt>
   20050:	mov	r0, r5
   20054:	pop	{r4, r5, fp, pc}
   20058:	bl	d448 <rb_outofmemory@plt>

0002005c <conf_get_yesno_value>:
   2005c:	push	{r4, r5, r6, sl, fp, lr}
   20060:	add	fp, sp, #16
   20064:	mov	r4, r0
   20068:	mov	r5, #0
   2006c:	ldr	r6, [pc, #52]	; 200a8 <conf_get_yesno_value+0x4c>
   20070:	add	r6, pc, r6
   20074:	b	20088 <conf_get_yesno_value+0x2c>
   20078:	add	r5, r5, #1
   2007c:	cmp	r5, #6
   20080:	mvneq	r0, #0
   20084:	popeq	{r4, r5, r6, sl, fp, pc}
   20088:	ldr	r1, [r6, r5, lsl #3]
   2008c:	mov	r0, r4
   20090:	bl	d340 <rb_strcasecmp@plt>
   20094:	cmp	r0, #0
   20098:	bne	20078 <conf_get_yesno_value+0x1c>
   2009c:	add	r0, r6, r5, lsl #3
   200a0:	ldr	r0, [r0, #4]
   200a4:	pop	{r4, r5, r6, sl, fp, pc}
   200a8:	.word	0x00039c88

000200ac <conf_find_time>:
   200ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   200b0:	add	fp, sp, #24
   200b4:	mov	r4, r0
   200b8:	ldr	r0, [pc, #96]	; 20120 <conf_find_time+0x74>
   200bc:	add	r0, pc, r0
   200c0:	add	r5, r0, #4
   200c4:	mov	r6, #0
   200c8:	movw	r8, #28159	; 0x6dff
   200cc:	mov	r7, #1
   200d0:	b	200e8 <conf_find_time+0x3c>
   200d4:	add	r5, r5, #12
   200d8:	add	r6, r6, #1
   200dc:	cmp	r6, #15
   200e0:	moveq	r0, #0
   200e4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   200e8:	ldr	r0, [r5, #-4]
   200ec:	mov	r1, r4
   200f0:	bl	d340 <rb_strcasecmp@plt>
   200f4:	cmp	r0, #0
   200f8:	beq	20118 <conf_find_time+0x6c>
   200fc:	tst	r7, r8, lsr r6
   20100:	beq	200d4 <conf_find_time+0x28>
   20104:	ldr	r0, [r5]
   20108:	mov	r1, r4
   2010c:	bl	d340 <rb_strcasecmp@plt>
   20110:	cmp	r0, #0
   20114:	bne	200d4 <conf_find_time+0x28>
   20118:	ldr	r0, [r5, #4]
   2011c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20120:	.word	0x00039c74

00020124 <yylex>:
   20124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20128:	add	fp, sp, #28
   2012c:	sub	sp, sp, #4
   20130:	ldr	r1, [pc, #1936]	; 208c8 <yylex+0x7a4>
   20134:	add	r1, pc, r1
   20138:	ldrb	r0, [r1]
   2013c:	cmp	r0, #0
   20140:	bne	201f4 <yylex+0xd0>
   20144:	mov	r0, #1
   20148:	strb	r0, [r1]
   2014c:	ldr	r1, [pc, #1912]	; 208cc <yylex+0x7a8>
   20150:	add	r1, pc, r1
   20154:	ldrb	r2, [r1]
   20158:	cmp	r2, #0
   2015c:	strbeq	r0, [r1]
   20160:	ldr	r4, [pc, #1896]	; 208d0 <yylex+0x7ac>
   20164:	ldr	r4, [pc, r4]
   20168:	ldr	r0, [r4]
   2016c:	cmp	r0, #0
   20170:	bne	20184 <yylex+0x60>
   20174:	ldr	r0, [pc, #1880]	; 208d4 <yylex+0x7b0>
   20178:	ldr	r0, [pc, r0]
   2017c:	ldr	r0, [r0]
   20180:	str	r0, [r4]
   20184:	ldr	r0, [pc, #1868]	; 208d8 <yylex+0x7b4>
   20188:	ldr	r0, [pc, r0]
   2018c:	ldr	r1, [r0]
   20190:	cmp	r1, #0
   20194:	bne	201a8 <yylex+0x84>
   20198:	ldr	r1, [pc, #1852]	; 208dc <yylex+0x7b8>
   2019c:	ldr	r1, [pc, r1]
   201a0:	ldr	r1, [r1]
   201a4:	str	r1, [r0]
   201a8:	ldr	r0, [pc, #1840]	; 208e0 <yylex+0x7bc>
   201ac:	ldr	r0, [pc, r0]
   201b0:	cmp	r0, #0
   201b4:	beq	201cc <yylex+0xa8>
   201b8:	ldr	r1, [pc, #1828]	; 208e4 <yylex+0x7c0>
   201bc:	ldr	r1, [pc, r1]
   201c0:	ldr	r0, [r0, r1, lsl #2]
   201c4:	cmp	r0, #0
   201c8:	bne	201f0 <yylex+0xcc>
   201cc:	bl	20a04 <yyensure_buffer_stack>
   201d0:	ldr	r0, [r4]
   201d4:	mov	r1, #16384	; 0x4000
   201d8:	bl	d6dc <yy_create_buffer@plt>
   201dc:	ldr	r1, [pc, #1796]	; 208e8 <yylex+0x7c4>
   201e0:	ldr	r1, [pc, r1]
   201e4:	ldr	r2, [pc, #1792]	; 208ec <yylex+0x7c8>
   201e8:	ldr	r2, [pc, r2]
   201ec:	str	r0, [r1, r2, lsl #2]
   201f0:	bl	20b98 <yy_load_buffer_state>
   201f4:	ldr	r5, [pc, #1780]	; 208f0 <yylex+0x7cc>
   201f8:	ldr	r5, [pc, r5]
   201fc:	ldr	r9, [pc, #1776]	; 208f4 <yylex+0x7d0>
   20200:	add	r9, pc, r9
   20204:	ldr	r8, [pc, #1772]	; 208f8 <yylex+0x7d4>
   20208:	add	r8, pc, r8
   2020c:	ldr	r6, [pc, #1768]	; 208fc <yylex+0x7d8>
   20210:	add	r6, pc, r6
   20214:	ldr	r4, [pc, #1764]	; 20900 <yylex+0x7dc>
   20218:	add	r4, pc, r4
   2021c:	b	20244 <yylex+0x120>
   20220:	ldr	r0, [pc, #1928]	; 209b0 <yylex+0x88c>
   20224:	ldr	r0, [pc, r0]
   20228:	ldr	r3, [r0]
   2022c:	ldr	r0, [pc, #1920]	; 209b4 <yylex+0x890>
   20230:	ldr	r0, [pc, r0]
   20234:	ldr	r1, [r0]
   20238:	ldr	r0, [r5]
   2023c:	mov	r2, #1
   20240:	bl	d8b0 <fwrite@plt>
   20244:	ldr	r0, [pc, #1720]	; 20904 <yylex+0x7e0>
   20248:	add	r0, pc, r0
   2024c:	mov	r1, #0
   20250:	str	r1, [r0]
   20254:	ldr	r0, [pc, #1708]	; 20908 <yylex+0x7e4>
   20258:	add	r0, pc, r0
   2025c:	ldrb	r0, [r0]
   20260:	cmp	r0, #1
   20264:	bne	20294 <yylex+0x170>
   20268:	mov	r0, #0
   2026c:	ldr	r1, [pc, #1688]	; 2090c <yylex+0x7e8>
   20270:	add	r1, pc, r1
   20274:	strb	r0, [r1]
   20278:	ldr	r0, [r5]
   2027c:	ldr	r1, [pc, #1676]	; 20910 <yylex+0x7ec>
   20280:	ldr	r1, [pc, r1]
   20284:	sub	r0, r1, r0
   20288:	ldr	r1, [pc, #1668]	; 20914 <yylex+0x7f0>
   2028c:	add	r1, pc, r1
   20290:	str	r0, [r1]
   20294:	ldr	r0, [pc, #1660]	; 20918 <yylex+0x7f4>
   20298:	add	r0, pc, r0
   2029c:	ldrb	r0, [r0]
   202a0:	ldr	sl, [pc, #1652]	; 2091c <yylex+0x7f8>
   202a4:	ldr	sl, [pc, sl]
   202a8:	strb	r0, [sl]
   202ac:	ldr	r0, [pc, #1644]	; 20920 <yylex+0x7fc>
   202b0:	add	r0, pc, r0
   202b4:	ldrb	r7, [r0]
   202b8:	str	sl, [sp]
   202bc:	b	202f8 <yylex+0x1d4>
   202c0:	mvn	r0, r7
   202c4:	add	r0, r0, sl
   202c8:	ldr	r1, [r5]
   202cc:	add	sl, r1, r0
   202d0:	ldr	r0, [pc, #1800]	; 209e0 <yylex+0x8bc>
   202d4:	add	r0, pc, r0
   202d8:	str	sl, [r0]
   202dc:	bl	21044 <yy_get_previous_state>
   202e0:	mov	r7, r0
   202e4:	ldr	r0, [r5]
   202e8:	ldr	r1, [pc, #1780]	; 209e4 <yylex+0x8c0>
   202ec:	ldr	r1, [pc, r1]
   202f0:	add	r0, r0, r1
   202f4:	str	r0, [sp]
   202f8:	ldrb	r0, [sl]
   202fc:	ldr	r1, [pc, #1568]	; 20924 <yylex+0x800>
   20300:	add	r1, pc, r1
   20304:	ldrb	r0, [r1, r0]
   20308:	ldr	r1, [pc, #1560]	; 20928 <yylex+0x804>
   2030c:	add	r1, pc, r1
   20310:	add	r1, r1, r7, lsl #1
   20314:	ldrh	r1, [r1]
   20318:	cmp	r1, #0
   2031c:	beq	20338 <yylex+0x214>
   20320:	ldr	r1, [pc, #1540]	; 2092c <yylex+0x808>
   20324:	add	r1, pc, r1
   20328:	str	sl, [r1]
   2032c:	ldr	r1, [pc, #1532]	; 20930 <yylex+0x80c>
   20330:	add	r1, pc, r1
   20334:	str	r7, [r1]
   20338:	add	r1, r9, r7, lsl #1
   2033c:	ldrsh	r1, [r1]
   20340:	add	r2, r1, r0
   20344:	add	r1, r8, r2, lsl #1
   20348:	ldrsh	r1, [r1]
   2034c:	cmp	r7, r1
   20350:	beq	20394 <yylex+0x270>
   20354:	mov	r1, r0
   20358:	add	r2, r6, r7, lsl #1
   2035c:	ldrsh	r7, [r2]
   20360:	cmp	r7, #47	; 0x2f
   20364:	ldrbge	r1, [r4, r0]
   20368:	add	r0, r9, r7, lsl #1
   2036c:	ldrsh	r0, [r0]
   20370:	uxtab	r2, r0, r1
   20374:	add	r0, r8, r2, lsl #1
   20378:	ldrh	r3, [r0]
   2037c:	uxtb	r0, r1
   20380:	uxth	r5, r7
   20384:	cmp	r5, r3
   20388:	bne	20358 <yylex+0x234>
   2038c:	ldr	r5, [pc, #1440]	; 20934 <yylex+0x810>
   20390:	ldr	r5, [pc, r5]
   20394:	ldr	r0, [pc, #1436]	; 20938 <yylex+0x814>
   20398:	add	r0, pc, r0
   2039c:	add	r0, r0, r2, lsl #1
   203a0:	ldrsh	r7, [r0]
   203a4:	add	r0, r9, r7, lsl #1
   203a8:	ldrh	r0, [r0]
   203ac:	add	sl, sl, #1
   203b0:	cmp	r0, #104	; 0x68
   203b4:	bne	202f8 <yylex+0x1d4>
   203b8:	b	20408 <yylex+0x2e4>
   203bc:	ldr	r0, [pc, #1572]	; 209e8 <yylex+0x8c4>
   203c0:	ldr	r0, [pc, r0]
   203c4:	ldr	r1, [pc, #1568]	; 209ec <yylex+0x8c8>
   203c8:	ldr	r1, [pc, r1]
   203cc:	ldr	r0, [r1, r0, lsl #2]
   203d0:	ldr	r0, [r0, #4]
   203d4:	ldr	r1, [pc, #1556]	; 209f0 <yylex+0x8cc>
   203d8:	ldr	r1, [pc, r1]
   203dc:	add	sl, r0, r1
   203e0:	ldr	r0, [pc, #1548]	; 209f4 <yylex+0x8d0>
   203e4:	add	r0, pc, r0
   203e8:	str	sl, [r0]
   203ec:	bl	21044 <yy_get_previous_state>
   203f0:	mov	r7, r0
   203f4:	ldr	r0, [r5]
   203f8:	ldr	r1, [pc, #1528]	; 209f8 <yylex+0x8d4>
   203fc:	ldr	r1, [pc, r1]
   20400:	add	r0, r0, r1
   20404:	str	r0, [sp]
   20408:	ldr	r0, [pc, #1324]	; 2093c <yylex+0x818>
   2040c:	add	r0, pc, r0
   20410:	add	r0, r0, r7, lsl #1
   20414:	ldrh	r0, [r0]
   20418:	cmp	r0, #0
   2041c:	bne	20440 <yylex+0x31c>
   20420:	ldr	r0, [pc, #1304]	; 20940 <yylex+0x81c>
   20424:	ldr	r0, [pc, r0]
   20428:	ldr	r1, [pc, #1300]	; 20944 <yylex+0x820>
   2042c:	add	r1, pc, r1
   20430:	add	r0, r1, r0, lsl #1
   20434:	ldrh	r0, [r0]
   20438:	ldr	sl, [pc, #1288]	; 20948 <yylex+0x824>
   2043c:	ldr	sl, [pc, sl]
   20440:	ldr	r1, [pc, #1284]	; 2094c <yylex+0x828>
   20444:	ldr	r1, [pc, r1]
   20448:	ldr	r2, [sp]
   2044c:	sub	r1, r2, r1
   20450:	str	r1, [r5]
   20454:	sub	r1, sl, r1
   20458:	ldr	r2, [pc, #1264]	; 20950 <yylex+0x82c>
   2045c:	ldr	r2, [pc, r2]
   20460:	str	r1, [r2]
   20464:	ldrb	r1, [sl]
   20468:	ldr	r2, [pc, #1252]	; 20954 <yylex+0x830>
   2046c:	add	r2, pc, r2
   20470:	strb	r1, [r2]
   20474:	mov	r1, #0
   20478:	strb	r1, [sl]
   2047c:	sxth	r0, r0
   20480:	mov	r1, sl
   20484:	b	2049c <yylex+0x378>
   20488:	ldr	r0, [r5]
   2048c:	ldr	r1, [pc, #1384]	; 209fc <yylex+0x8d8>
   20490:	ldr	r1, [pc, r1]
   20494:	add	r1, r0, r1
   20498:	mov	r0, #14
   2049c:	ldr	r2, [pc, #1204]	; 20958 <yylex+0x834>
   204a0:	add	r2, pc, r2
   204a4:	str	r1, [r2]
   204a8:	cmp	r0, #13
   204ac:	bne	20550 <yylex+0x42c>
   204b0:	ldr	r7, [r5]
   204b4:	ldr	r0, [pc, #1276]	; 209b8 <yylex+0x894>
   204b8:	add	r0, pc, r0
   204bc:	ldrb	r0, [r0]
   204c0:	strb	r0, [sl]
   204c4:	ldr	r0, [pc, #1264]	; 209bc <yylex+0x898>
   204c8:	ldr	r0, [pc, r0]
   204cc:	ldr	r1, [pc, #1260]	; 209c0 <yylex+0x89c>
   204d0:	ldr	r1, [pc, r1]
   204d4:	ldr	r2, [r1, r0, lsl #2]
   204d8:	ldr	r3, [r2, #44]	; 0x2c
   204dc:	cmp	r3, #0
   204e0:	bne	20514 <yylex+0x3f0>
   204e4:	ldr	r2, [r2, #16]
   204e8:	ldr	r3, [pc, #1236]	; 209c4 <yylex+0x8a0>
   204ec:	add	r3, pc, r3
   204f0:	str	r2, [r3]
   204f4:	ldr	r2, [r1, r0, lsl #2]
   204f8:	ldr	r3, [pc, #1224]	; 209c8 <yylex+0x8a4>
   204fc:	ldr	r3, [pc, r3]
   20500:	ldr	r3, [r3]
   20504:	str	r3, [r2]
   20508:	ldr	r2, [r1, r0, lsl #2]
   2050c:	mov	r3, #1
   20510:	str	r3, [r2, #44]	; 0x2c
   20514:	ldr	r0, [r1, r0, lsl #2]
   20518:	ldr	r0, [r0, #4]
   2051c:	ldr	r1, [pc, #1192]	; 209cc <yylex+0x8a8>
   20520:	ldr	r1, [pc, r1]
   20524:	add	r0, r0, r1
   20528:	ldr	r1, [pc, #1184]	; 209d0 <yylex+0x8ac>
   2052c:	ldr	r1, [pc, r1]
   20530:	cmp	r1, r0
   20534:	bls	205c4 <yylex+0x4a0>
   20538:	bl	2129c <yy_get_next_buffer>
   2053c:	cmp	r0, #1
   20540:	beq	20488 <yylex+0x364>
   20544:	cmp	r0, #2
   20548:	bne	20620 <yylex+0x4fc>
   2054c:	b	203bc <yylex+0x298>
   20550:	cmp	r0, #14
   20554:	bhi	20780 <yylex+0x65c>
   20558:	add	r1, pc, #4
   2055c:	ldr	r0, [r1, r0, lsl #2]
   20560:	add	pc, r1, r0
   20564:	.word	0x0000003c
   20568:	.word	0x000000c8
   2056c:	.word	0x000000d0
   20570:	.word	0x000000d8
   20574:	.word	0xfffffce0
   20578:	.word	0x0000016c
   2057c:	.word	0x00000274
   20580:	.word	0x00000174
   20584:	.word	0x00000294
   20588:	.word	0x000002a0
   2058c:	.word	0x000002d8
   20590:	.word	0x000002e4
   20594:	.word	0xfffffcbc
   20598:	.word	0x0000021c
   2059c:	.word	0x0000020c
   205a0:	ldr	r0, [pc, #948]	; 2095c <yylex+0x838>
   205a4:	add	r0, pc, r0
   205a8:	ldrb	r0, [r0]
   205ac:	strb	r0, [sl]
   205b0:	ldr	r7, [pc, #936]	; 20960 <yylex+0x83c>
   205b4:	ldr	r7, [pc, r7]
   205b8:	ldr	sl, [pc, #932]	; 20964 <yylex+0x840>
   205bc:	ldr	sl, [pc, sl]
   205c0:	b	20408 <yylex+0x2e4>
   205c4:	mvn	r0, r7
   205c8:	add	r0, r0, sl
   205cc:	ldr	r1, [r5]
   205d0:	add	sl, r1, r0
   205d4:	ldr	r0, [pc, #1016]	; 209d4 <yylex+0x8b0>
   205d8:	add	r0, pc, r0
   205dc:	str	sl, [r0]
   205e0:	bl	21044 <yy_get_previous_state>
   205e4:	mov	r7, r0
   205e8:	bl	211c0 <yy_try_NUL_trans>
   205ec:	ldr	r1, [r5]
   205f0:	ldr	r2, [pc, #992]	; 209d8 <yylex+0x8b4>
   205f4:	ldr	r2, [pc, r2]
   205f8:	add	r1, r1, r2
   205fc:	str	r1, [sp]
   20600:	cmp	r0, #0
   20604:	beq	20408 <yylex+0x2e4>
   20608:	add	sl, sl, #1
   2060c:	ldr	r1, [pc, #968]	; 209dc <yylex+0x8b8>
   20610:	add	r1, pc, r1
   20614:	str	sl, [r1]
   20618:	mov	r7, r0
   2061c:	b	202f8 <yylex+0x1d4>
   20620:	cmp	r0, #0
   20624:	bne	20244 <yylex+0x120>
   20628:	b	202c0 <yylex+0x19c>
   2062c:	bl	e51c <cinclude@plt>
   20630:	b	20244 <yylex+0x120>
   20634:	bl	d79c <ccomment@plt>
   20638:	b	20244 <yylex+0x120>
   2063c:	ldr	r0, [r5]
   20640:	add	r1, r0, #1
   20644:	ldr	r0, [pc, #796]	; 20968 <yylex+0x844>
   20648:	ldr	r0, [pc, r0]
   2064c:	mov	r2, #16384	; 0x4000
   20650:	bl	e510 <rb_strlcpy@plt>
   20654:	ldr	r0, [pc, #784]	; 2096c <yylex+0x848>
   20658:	ldr	r0, [pc, r0]
   2065c:	mov	r1, r0
   20660:	ldr	r0, [r0]
   20664:	add	r0, r0, #1
   20668:	str	r0, [r1]
   2066c:	ldr	r0, [pc, #764]	; 20970 <yylex+0x84c>
   20670:	add	r0, pc, r0
   20674:	mov	r3, r0
   20678:	ldrb	r0, [r0]
   2067c:	strb	r0, [sl]
   20680:	ldr	r0, [pc, #748]	; 20974 <yylex+0x850>
   20684:	ldr	r0, [pc, r0]
   20688:	mov	r1, #1
   2068c:	str	r1, [r0]
   20690:	ldr	r0, [pc, #736]	; 20978 <yylex+0x854>
   20694:	ldr	r0, [pc, r0]
   20698:	ldr	r1, [sp]
   2069c:	sub	r0, r1, r0
   206a0:	str	r0, [r5]
   206a4:	add	r1, r0, #1
   206a8:	ldr	r2, [pc, #716]	; 2097c <yylex+0x858>
   206ac:	add	r2, pc, r2
   206b0:	mov	r7, r2
   206b4:	str	r1, [r2]
   206b8:	ldrb	r2, [r0, #1]
   206bc:	strb	r2, [r3]
   206c0:	mov	r2, #0
   206c4:	strb	r2, [r0, #1]
   206c8:	str	r1, [r7]
   206cc:	b	20244 <yylex+0x120>
   206d0:	bl	df1c <hashcomment@plt>
   206d4:	b	20244 <yylex+0x120>
   206d8:	ldr	r7, [pc, #676]	; 20984 <yylex+0x860>
   206dc:	ldr	r7, [pc, r7]
   206e0:	ldr	r0, [r7]
   206e4:	ldr	r1, [r5]
   206e8:	add	r2, r1, r0
   206ec:	ldrb	r2, [r2, #-2]
   206f0:	cmp	r2, #92	; 0x5c
   206f4:	bne	20790 <yylex+0x66c>
   206f8:	ldr	r1, [pc, #648]	; 20988 <yylex+0x864>
   206fc:	add	r1, pc, r1
   20700:	mov	ip, r1
   20704:	ldrb	r1, [r1]
   20708:	strb	r1, [sl]
   2070c:	mov	sl, r7
   20710:	ldr	r7, [sp]
   20714:	add	r0, r7, r0
   20718:	sub	r0, r0, #1
   2071c:	ldr	r1, [pc, #616]	; 2098c <yylex+0x868>
   20720:	ldr	r1, [pc, r1]
   20724:	sub	r2, r0, r1
   20728:	ldr	r3, [pc, #608]	; 20990 <yylex+0x86c>
   2072c:	add	r3, pc, r3
   20730:	mov	lr, r3
   20734:	str	r2, [r3]
   20738:	sub	r3, r7, r1
   2073c:	str	r3, [r5]
   20740:	sub	r3, r2, r3
   20744:	str	r3, [sl]
   20748:	ldrb	r3, [r0, -r1]
   2074c:	strb	r3, [ip]
   20750:	mov	r3, #0
   20754:	strb	r3, [r0, -r1]
   20758:	ldr	r0, [pc, #564]	; 20994 <yylex+0x870>
   2075c:	add	r0, pc, r0
   20760:	mov	r1, #1
   20764:	strb	r1, [r0]
   20768:	str	r2, [lr]
   2076c:	b	20244 <yylex+0x120>
   20770:	bl	e15c <ieof@plt>
   20774:	cmp	r0, #0
   20778:	beq	20244 <yylex+0x120>
   2077c:	b	20858 <yylex+0x734>
   20780:	ldr	r0, [pc, #632]	; 20a00 <yylex+0x8dc>
   20784:	add	r0, pc, r0
   20788:	bl	d3d0 <conf_yy_fatal_error@plt>
   2078c:	b	20244 <yylex+0x120>
   20790:	add	r1, r1, #1
   20794:	ldr	r5, [pc, #508]	; 20998 <yylex+0x874>
   20798:	ldr	r5, [pc, r5]
   2079c:	mov	r0, r5
   207a0:	mov	r2, #1024	; 0x400
   207a4:	bl	e510 <rb_strlcpy@plt>
   207a8:	ldr	r0, [r7]
   207ac:	sub	r1, r0, #2
   207b0:	ldrb	r0, [r5, r1]
   207b4:	cmp	r0, #34	; 0x22
   207b8:	beq	20864 <yylex+0x740>
   207bc:	mov	r0, #0
   207c0:	ldr	r1, [pc, #468]	; 2099c <yylex+0x878>
   207c4:	add	r1, pc, r1
   207c8:	bl	e0b4 <ilog@plt>
   207cc:	ldr	r5, [pc, #460]	; 209a0 <yylex+0x87c>
   207d0:	ldr	r5, [pc, r5]
   207d4:	b	20244 <yylex+0x120>
   207d8:	ldr	r0, [r5]
   207dc:	bl	e468 <atoi@plt>
   207e0:	ldr	r1, [pc, #408]	; 20980 <yylex+0x85c>
   207e4:	ldr	r1, [pc, r1]
   207e8:	str	r0, [r1]
   207ec:	movw	r0, #262	; 0x106
   207f0:	sub	sp, fp, #28
   207f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207f8:	movw	r0, #258	; 0x102
   207fc:	sub	sp, fp, #28
   20800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20804:	ldr	r1, [r5]
   20808:	ldr	r4, [pc, #408]	; 209a8 <yylex+0x884>
   2080c:	ldr	r4, [pc, r4]
   20810:	mov	r0, r4
   20814:	mov	r2, #1024	; 0x400
   20818:	bl	e510 <rb_strlcpy@plt>
   2081c:	ldr	r0, [pc, #392]	; 209ac <yylex+0x888>
   20820:	ldr	r0, [pc, r0]
   20824:	ldr	r0, [r0]
   20828:	mov	r1, #0
   2082c:	strb	r1, [r4, r0]
   20830:	movw	r0, #261	; 0x105
   20834:	sub	sp, fp, #28
   20838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2083c:	movw	r0, #259	; 0x103
   20840:	sub	sp, fp, #28
   20844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20848:	ldr	r0, [r5]
   2084c:	ldrb	r0, [r0]
   20850:	sub	sp, fp, #28
   20854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20858:	mov	r0, #0
   2085c:	sub	sp, fp, #28
   20860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20864:	mov	r0, #0
   20868:	strb	r0, [r5, r1]
   2086c:	mov	r4, r5
   20870:	b	2087c <yylex+0x758>
   20874:	strb	r1, [r4], #1
   20878:	add	r0, r0, #1
   2087c:	ldrb	r1, [r5, r0]
   20880:	cmp	r1, #92	; 0x5c
   20884:	beq	20894 <yylex+0x770>
   20888:	cmp	r1, #0
   2088c:	bne	20874 <yylex+0x750>
   20890:	b	208b4 <yylex+0x790>
   20894:	add	r0, r0, #1
   20898:	ldrb	r1, [r5, r0]
   2089c:	cmp	r1, #0
   208a0:	bne	20874 <yylex+0x750>
   208a4:	ldr	r1, [pc, #248]	; 209a4 <yylex+0x880>
   208a8:	add	r1, pc, r1
   208ac:	mov	r0, #0
   208b0:	bl	e0b4 <ilog@plt>
   208b4:	mov	r0, #0
   208b8:	strb	r0, [r4]
   208bc:	mov	r0, #260	; 0x104
   208c0:	sub	sp, fp, #28
   208c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208c8:	.word	0x00045ba8
   208cc:	.word	0x00045b90
   208d0:	.word	0x0003a764
   208d4:	.word	0x0003a8c0
   208d8:	.word	0x0003a810
   208dc:	.word	0x0003a8ec
   208e0:	.word	0x00045b38
   208e4:	.word	0x00045b2c
   208e8:	.word	0x00045b04
   208ec:	.word	0x00045b00
   208f0:	.word	0x0003a714
   208f4:	.word	0x0002240a
   208f8:	.word	0x000222ee
   208fc:	.word	0x00022466
   20900:	.word	0x000224ca
   20904:	.word	0x00045aa4
   20908:	.word	0x00045a98
   2090c:	.word	0x00045a80
   20910:	.word	0x00045a74
   20914:	.word	0x00045a60
   20918:	.word	0x00045a60
   2091c:	.word	0x00045a50
   20920:	.word	0x00045a30
   20924:	.word	0x00022098
   20928:	.word	0x0002218c
   2092c:	.word	0x000459dc
   20930:	.word	0x000459cc
   20934:	.word	0x0003a57c
   20938:	.word	0x0002236c
   2093c:	.word	0x0002208c
   20940:	.word	0x000458d8
   20944:	.word	0x0002206c
   20948:	.word	0x000458c4
   2094c:	.word	0x000458a8
   20950:	.word	0x0003a604
   20954:	.word	0x0004588c
   20958:	.word	0x00045854
   2095c:	.word	0x00045754
   20960:	.word	0x00045748
   20964:	.word	0x00045744
   20968:	.word	0x0003a2b4
   2096c:	.word	0x0003a3e8
   20970:	.word	0x00045688
   20974:	.word	0x0003a3dc
   20978:	.word	0x00045658
   2097c:	.word	0x00045648
   20980:	.word	0x0003a324
   20984:	.word	0x0003a384
   20988:	.word	0x000455fc
   2098c:	.word	0x000455cc
   20990:	.word	0x000455c8
   20994:	.word	0x00045594
   20998:	.word	0x0003a370
   2099c:	.word	0x00022054
   209a0:	.word	0x0003a13c
   209a4:	.word	0x00021f70
   209a8:	.word	0x0003a2fc
   209ac:	.word	0x0003a240
   209b0:	.word	0x0003a774
   209b4:	.word	0x0003a830
   209b8:	.word	0x00045840
   209bc:	.word	0x00045820
   209c0:	.word	0x00045814
   209c4:	.word	0x00045818
   209c8:	.word	0x0003a3cc
   209cc:	.word	0x000457e4
   209d0:	.word	0x000457c8
   209d4:	.word	0x0004571c
   209d8:	.word	0x000456f8
   209dc:	.word	0x000456e4
   209e0:	.word	0x00045a20
   209e4:	.word	0x00045a00
   209e8:	.word	0x00045928
   209ec:	.word	0x0004591c
   209f0:	.word	0x0004592c
   209f4:	.word	0x00045910
   209f8:	.word	0x000458f0
   209fc:	.word	0x0004585c
   20a00:	.word	0x000220b2

00020a04 <yyensure_buffer_stack>:
   20a04:	push	{r4, sl, fp, lr}
   20a08:	add	fp, sp, #8
   20a0c:	ldr	r0, [pc, #216]	; 20aec <yyensure_buffer_stack+0xe8>
   20a10:	ldr	r0, [pc, r0]
   20a14:	cmp	r0, #0
   20a18:	beq	20a94 <yyensure_buffer_stack+0x90>
   20a1c:	ldr	r1, [pc, #224]	; 20b04 <yyensure_buffer_stack+0x100>
   20a20:	ldr	r1, [pc, r1]
   20a24:	sub	r2, r1, #1
   20a28:	ldr	r3, [pc, #216]	; 20b08 <yyensure_buffer_stack+0x104>
   20a2c:	ldr	r3, [pc, r3]
   20a30:	cmp	r3, r2
   20a34:	popcc	{r4, sl, fp, pc}
   20a38:	add	r4, r1, #8
   20a3c:	lsl	r1, r4, #2
   20a40:	bl	d67c <yyrealloc@plt>
   20a44:	ldr	r1, [pc, #192]	; 20b0c <yyensure_buffer_stack+0x108>
   20a48:	add	r1, pc, r1
   20a4c:	str	r0, [r1]
   20a50:	cmp	r0, #0
   20a54:	bne	20a64 <yyensure_buffer_stack+0x60>
   20a58:	ldr	r0, [pc, #176]	; 20b10 <yyensure_buffer_stack+0x10c>
   20a5c:	add	r0, pc, r0
   20a60:	bl	d3d0 <conf_yy_fatal_error@plt>
   20a64:	ldr	r0, [pc, #168]	; 20b14 <yyensure_buffer_stack+0x110>
   20a68:	ldr	r0, [pc, r0]
   20a6c:	ldr	r1, [pc, #164]	; 20b18 <yyensure_buffer_stack+0x114>
   20a70:	ldr	r1, [pc, r1]
   20a74:	vmov.i32	q8, #0	; 0x00000000
   20a78:	add	r0, r1, r0, lsl #2
   20a7c:	vst1.32	{d16-d17}, [r0]!
   20a80:	vst1.32	{d16-d17}, [r0]
   20a84:	ldr	r0, [pc, #144]	; 20b1c <yyensure_buffer_stack+0x118>
   20a88:	add	r0, pc, r0
   20a8c:	str	r4, [r0]
   20a90:	pop	{r4, sl, fp, pc}
   20a94:	mov	r0, #4
   20a98:	bl	d8f8 <yyalloc@plt>
   20a9c:	ldr	r1, [pc, #76]	; 20af0 <yyensure_buffer_stack+0xec>
   20aa0:	add	r1, pc, r1
   20aa4:	str	r0, [r1]
   20aa8:	cmp	r0, #0
   20aac:	bne	20abc <yyensure_buffer_stack+0xb8>
   20ab0:	ldr	r0, [pc, #60]	; 20af4 <yyensure_buffer_stack+0xf0>
   20ab4:	add	r0, pc, r0
   20ab8:	bl	d3d0 <conf_yy_fatal_error@plt>
   20abc:	ldr	r0, [pc, #52]	; 20af8 <yyensure_buffer_stack+0xf4>
   20ac0:	ldr	r0, [pc, r0]
   20ac4:	mov	r1, #0
   20ac8:	str	r1, [r0]
   20acc:	ldr	r0, [pc, #40]	; 20afc <yyensure_buffer_stack+0xf8>
   20ad0:	add	r0, pc, r0
   20ad4:	str	r1, [r0]
   20ad8:	ldr	r0, [pc, #32]	; 20b00 <yyensure_buffer_stack+0xfc>
   20adc:	add	r0, pc, r0
   20ae0:	mov	r1, #1
   20ae4:	str	r1, [r0]
   20ae8:	pop	{r4, sl, fp, pc}
   20aec:	.word	0x000452d4
   20af0:	.word	0x00045244
   20af4:	.word	0x00021f76
   20af8:	.word	0x00045224
   20afc:	.word	0x00045218
   20b00:	.word	0x0004522c
   20b04:	.word	0x000452e8
   20b08:	.word	0x000452bc
   20b0c:	.word	0x0004529c
   20b10:	.word	0x00021fce
   20b14:	.word	0x000452a0
   20b18:	.word	0x00045274
   20b1c:	.word	0x00045280

00020b20 <yy_create_buffer>:
   20b20:	push	{r4, r5, r6, sl, fp, lr}
   20b24:	add	fp, sp, #16
   20b28:	mov	r6, r1
   20b2c:	mov	r4, r0
   20b30:	mov	r0, #48	; 0x30
   20b34:	bl	d8f8 <yyalloc@plt>
   20b38:	mov	r5, r0
   20b3c:	cmp	r0, #0
   20b40:	bne	20b50 <yy_create_buffer+0x30>
   20b44:	ldr	r0, [pc, #68]	; 20b90 <yy_create_buffer+0x70>
   20b48:	add	r0, pc, r0
   20b4c:	bl	d3d0 <conf_yy_fatal_error@plt>
   20b50:	str	r6, [r5, #12]
   20b54:	add	r0, r6, #2
   20b58:	bl	d8f8 <yyalloc@plt>
   20b5c:	str	r0, [r5, #4]
   20b60:	cmp	r0, #0
   20b64:	bne	20b74 <yy_create_buffer+0x54>
   20b68:	ldr	r0, [pc, #36]	; 20b94 <yy_create_buffer+0x74>
   20b6c:	add	r0, pc, r0
   20b70:	bl	d3d0 <conf_yy_fatal_error@plt>
   20b74:	mov	r0, #1
   20b78:	str	r0, [r5, #20]
   20b7c:	mov	r0, r5
   20b80:	mov	r1, r4
   20b84:	bl	21780 <yy_init_buffer>
   20b88:	mov	r0, r5
   20b8c:	pop	{r4, r5, r6, sl, fp, pc}
   20b90:	.word	0x00021d21
   20b94:	.word	0x00021cfd

00020b98 <yy_load_buffer_state>:
   20b98:	ldr	r0, [pc, #96]	; 20c00 <yy_load_buffer_state+0x68>
   20b9c:	ldr	r0, [pc, r0]
   20ba0:	ldr	r1, [pc, #92]	; 20c04 <yy_load_buffer_state+0x6c>
   20ba4:	ldr	r1, [pc, r1]
   20ba8:	ldr	r2, [r1, r0, lsl #2]
   20bac:	ldr	ip, [r2, #16]
   20bb0:	ldr	r3, [pc, #80]	; 20c08 <yy_load_buffer_state+0x70>
   20bb4:	add	r3, pc, r3
   20bb8:	str	ip, [r3]
   20bbc:	ldr	r2, [r2, #8]
   20bc0:	ldr	r3, [pc, #68]	; 20c0c <yy_load_buffer_state+0x74>
   20bc4:	ldr	r3, [pc, r3]
   20bc8:	str	r2, [r3]
   20bcc:	ldr	r3, [pc, #60]	; 20c10 <yy_load_buffer_state+0x78>
   20bd0:	add	r3, pc, r3
   20bd4:	str	r2, [r3]
   20bd8:	ldr	r0, [r1, r0, lsl #2]
   20bdc:	ldr	r0, [r0]
   20be0:	ldr	r1, [pc, #44]	; 20c14 <yy_load_buffer_state+0x7c>
   20be4:	ldr	r1, [pc, r1]
   20be8:	str	r0, [r1]
   20bec:	ldrb	r0, [r2]
   20bf0:	ldr	r1, [pc, #32]	; 20c18 <yy_load_buffer_state+0x80>
   20bf4:	add	r1, pc, r1
   20bf8:	strb	r0, [r1]
   20bfc:	bx	lr
   20c00:	.word	0x0004514c
   20c04:	.word	0x00045140
   20c08:	.word	0x00045150
   20c0c:	.word	0x00039d48
   20c10:	.word	0x00045124
   20c14:	.word	0x00039ce4
   20c18:	.word	0x00045104

00020c1c <cinclude>:
   20c1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20c20:	add	fp, sp, #24
   20c24:	sub	sp, sp, #520	; 0x208
   20c28:	ldr	r0, [pc, #452]	; 20df4 <cinclude+0x1d8>
   20c2c:	ldr	r0, [pc, r0]
   20c30:	ldr	r4, [r0]
   20c34:	mov	r0, r4
   20c38:	mov	r1, #60	; 0x3c
   20c3c:	bl	dce8 <strchr@plt>
   20c40:	cmp	r0, #0
   20c44:	beq	20c58 <cinclude+0x3c>
   20c48:	add	r4, r0, #1
   20c4c:	mov	r0, r4
   20c50:	mov	r1, #62	; 0x3e
   20c54:	b	20c70 <cinclude+0x54>
   20c58:	mov	r0, r4
   20c5c:	mov	r1, #34	; 0x22
   20c60:	bl	dce8 <strchr@plt>
   20c64:	add	r4, r0, #1
   20c68:	mov	r0, r4
   20c6c:	mov	r1, #34	; 0x22
   20c70:	bl	dce8 <strchr@plt>
   20c74:	mov	r1, #0
   20c78:	strb	r1, [r0]
   20c7c:	ldr	r6, [pc, #372]	; 20df8 <cinclude+0x1dc>
   20c80:	ldr	r6, [pc, r6]
   20c84:	ldr	r0, [r6]
   20c88:	cmp	r0, #10
   20c8c:	blt	20ca8 <cinclude+0x8c>
   20c90:	ldr	r0, [pc, #412]	; 20e34 <cinclude+0x218>
   20c94:	add	r0, pc, r0
   20c98:	mov	r1, #10
   20c9c:	sub	sp, fp, #24
   20ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20ca4:	b	d400 <conf_report_error@plt>
   20ca8:	ldr	r1, [pc, #332]	; 20dfc <cinclude+0x1e0>
   20cac:	add	r1, pc, r1
   20cb0:	mov	r0, r4
   20cb4:	bl	d1f0 <fopen@plt>
   20cb8:	mov	r5, r0
   20cbc:	cmp	r0, #0
   20cc0:	bne	20d0c <cinclude+0xf0>
   20cc4:	ldr	r0, [pc, #308]	; 20e00 <cinclude+0x1e4>
   20cc8:	ldr	r0, [pc, r0]
   20ccc:	ldr	r3, [r0, #12]
   20cd0:	mov	r0, #47	; 0x2f
   20cd4:	stm	sp, {r0, r4}
   20cd8:	add	r5, sp, #8
   20cdc:	ldr	r2, [pc, #288]	; 20e04 <cinclude+0x1e8>
   20ce0:	add	r2, pc, r2
   20ce4:	mov	r0, r5
   20ce8:	mov	r1, #512	; 0x200
   20cec:	bl	de74 <snprintf@plt>
   20cf0:	ldr	r1, [pc, #272]	; 20e08 <cinclude+0x1ec>
   20cf4:	add	r1, pc, r1
   20cf8:	mov	r0, r5
   20cfc:	bl	d1f0 <fopen@plt>
   20d00:	cmp	r0, #0
   20d04:	beq	20dcc <cinclude+0x1b0>
   20d08:	mov	r5, r0
   20d0c:	ldr	r0, [r6]
   20d10:	ldr	r1, [pc, #244]	; 20e0c <cinclude+0x1f0>
   20d14:	ldr	r1, [pc, r1]
   20d18:	ldr	r2, [r1]
   20d1c:	ldr	r3, [pc, #236]	; 20e10 <cinclude+0x1f4>
   20d20:	ldr	r3, [pc, r3]
   20d24:	str	r2, [r3, r0, lsl #2]
   20d28:	mov	r2, #1
   20d2c:	str	r2, [r1]
   20d30:	ldr	r8, [pc, #220]	; 20e14 <cinclude+0x1f8>
   20d34:	ldr	r8, [pc, r8]
   20d38:	ldr	r1, [r8]
   20d3c:	ldr	r2, [pc, #212]	; 20e18 <cinclude+0x1fc>
   20d40:	ldr	r2, [pc, r2]
   20d44:	str	r1, [r2, r0, lsl #2]
   20d48:	ldr	r7, [pc, #204]	; 20e1c <cinclude+0x200>
   20d4c:	ldr	r7, [pc, r7]
   20d50:	add	r0, r7, r0, lsl #9
   20d54:	mov	r1, r4
   20d58:	bl	d928 <strcpy@plt>
   20d5c:	ldr	r0, [r6]
   20d60:	add	r1, r7, r0, lsl #9
   20d64:	ldr	r2, [pc, #180]	; 20e20 <cinclude+0x204>
   20d68:	ldr	r2, [pc, r2]
   20d6c:	str	r1, [r2]
   20d70:	ldr	r1, [pc, #172]	; 20e24 <cinclude+0x208>
   20d74:	ldr	r1, [pc, r1]
   20d78:	cmp	r1, #0
   20d7c:	beq	20d90 <cinclude+0x174>
   20d80:	ldr	r2, [pc, #160]	; 20e28 <cinclude+0x20c>
   20d84:	ldr	r2, [pc, r2]
   20d88:	ldr	r1, [r1, r2, lsl #2]
   20d8c:	b	20d94 <cinclude+0x178>
   20d90:	mov	r1, #0
   20d94:	add	r2, r0, #1
   20d98:	str	r2, [r6]
   20d9c:	ldr	r2, [pc, #136]	; 20e2c <cinclude+0x210>
   20da0:	ldr	r2, [pc, r2]
   20da4:	str	r1, [r2, r0, lsl #2]
   20da8:	str	r5, [r8]
   20dac:	ldr	r0, [pc, #124]	; 20e30 <cinclude+0x214>
   20db0:	ldr	r0, [pc, r0]
   20db4:	ldr	r0, [r0]
   20db8:	mov	r1, #16384	; 0x4000
   20dbc:	bl	d6dc <yy_create_buffer@plt>
   20dc0:	sub	sp, fp, #24
   20dc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20dc8:	b	21824 <yy_switch_to_buffer>
   20dcc:	bl	de38 <__errno_location@plt>
   20dd0:	ldr	r0, [r0]
   20dd4:	bl	dacc <strerror@plt>
   20dd8:	mov	r2, r0
   20ddc:	ldr	r0, [pc, #84]	; 20e38 <cinclude+0x21c>
   20de0:	add	r0, pc, r0
   20de4:	mov	r1, r4
   20de8:	bl	d400 <conf_report_error@plt>
   20dec:	sub	sp, fp, #24
   20df0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20df4:	.word	0x00039ce0
   20df8:	.word	0x00039c54
   20dfc:	.word	0x0002169d
   20e00:	.word	0x00039d80
   20e04:	.word	0x0001fb01
   20e08:	.word	0x00021655
   20e0c:	.word	0x00039d2c
   20e10:	.word	0x00039cac
   20e14:	.word	0x00039cc8
   20e18:	.word	0x00039bc8
   20e1c:	.word	0x00039d5c
   20e20:	.word	0x00039b90
   20e24:	.word	0x00044f70
   20e28:	.word	0x00044f64
   20e2c:	.word	0x00039b90
   20e30:	.word	0x00039b18
   20e34:	.word	0x00021c81
   20e38:	.word	0x00021b5a

00020e3c <ccomment>:
   20e3c:	push	{r4, sl, fp, lr}
   20e40:	add	fp, sp, #8
   20e44:	ldr	r4, [pc, #108]	; 20eb8 <ccomment+0x7c>
   20e48:	ldr	r4, [pc, r4]
   20e4c:	b	20e5c <ccomment+0x20>
   20e50:	ldr	r0, [r4]
   20e54:	add	r0, r0, #1
   20e58:	str	r0, [r4]
   20e5c:	bl	21e8c <input>
   20e60:	cmp	r0, #10
   20e64:	beq	20e50 <ccomment+0x14>
   20e68:	cmp	r0, #42	; 0x2a
   20e6c:	beq	20e7c <ccomment+0x40>
   20e70:	cmn	r0, #1
   20e74:	bne	20e5c <ccomment+0x20>
   20e78:	b	20ea8 <ccomment+0x6c>
   20e7c:	bl	21e8c <input>
   20e80:	cmp	r0, #41	; 0x29
   20e84:	ble	20e9c <ccomment+0x60>
   20e88:	cmp	r0, #42	; 0x2a
   20e8c:	beq	20e7c <ccomment+0x40>
   20e90:	cmp	r0, #47	; 0x2f
   20e94:	popeq	{r4, sl, fp, pc}
   20e98:	b	20e5c <ccomment+0x20>
   20e9c:	cmp	r0, #10
   20ea0:	beq	20e50 <ccomment+0x14>
   20ea4:	b	20e70 <ccomment+0x34>
   20ea8:	ldr	r0, [pc, #12]	; 20ebc <ccomment+0x80>
   20eac:	add	r0, pc, r0
   20eb0:	bl	d3d0 <conf_yy_fatal_error@plt>
   20eb4:	bl	21fa8 <yy_fatal_error>
   20eb8:	.word	0x00039bf8
   20ebc:	.word	0x00021a5a

00020ec0 <hashcomment>:
   20ec0:	push	{r4, sl, fp, lr}
   20ec4:	add	fp, sp, #8
   20ec8:	ldr	r0, [pc, #68]	; 20f14 <hashcomment+0x54>
   20ecc:	ldr	r0, [pc, r0]
   20ed0:	ldr	r4, [r0]
   20ed4:	mov	r0, r4
   20ed8:	bl	dc94 <strlen@plt>
   20edc:	cmp	r0, #8
   20ee0:	popcc	{r4, sl, fp, pc}
   20ee4:	ldr	r1, [pc, #44]	; 20f18 <hashcomment+0x58>
   20ee8:	add	r1, pc, r1
   20eec:	mov	r0, r4
   20ef0:	mov	r2, #8
   20ef4:	bl	d538 <rb_strncasecmp@plt>
   20ef8:	cmp	r0, #0
   20efc:	beq	20f04 <hashcomment+0x44>
   20f00:	pop	{r4, sl, fp, pc}
   20f04:	ldr	r0, [pc, #16]	; 20f1c <hashcomment+0x5c>
   20f08:	add	r0, pc, r0
   20f0c:	pop	{r4, sl, fp, lr}
   20f10:	b	d484 <yyerror@plt>
   20f14:	.word	0x00039a40
   20f18:	.word	0x00021a62
   20f1c:	.word	0x00021a4b

00020f20 <ieof>:
   20f20:	push	{r4, r5, r6, sl, fp, lr}
   20f24:	add	fp, sp, #16
   20f28:	ldr	r5, [pc, #228]	; 21014 <ieof+0xf4>
   20f2c:	ldr	r5, [pc, r5]
   20f30:	ldr	r0, [r5]
   20f34:	cmp	r0, #0
   20f38:	beq	20fec <ieof+0xcc>
   20f3c:	ldr	r6, [pc, #212]	; 21018 <ieof+0xf8>
   20f40:	ldr	r6, [pc, r6]
   20f44:	ldr	r0, [r6]
   20f48:	bl	e0f0 <fclose@plt>
   20f4c:	ldr	r0, [r5]
   20f50:	sub	r1, r0, #1
   20f54:	str	r1, [r5]
   20f58:	cmp	r0, #0
   20f5c:	ble	20ff4 <ieof+0xd4>
   20f60:	mov	r4, #0
   20f64:	ldr	r1, [pc, #180]	; 21020 <ieof+0x100>
   20f68:	ldr	r1, [pc, r1]
   20f6c:	cmp	r1, #0
   20f70:	mov	r0, #0
   20f74:	ldrne	r0, [pc, #168]	; 21024 <ieof+0x104>
   20f78:	ldrne	r0, [pc, r0]
   20f7c:	ldrne	r0, [r1, r0, lsl #2]
   20f80:	bl	dd84 <yy_delete_buffer@plt>
   20f84:	ldr	r0, [r5]
   20f88:	ldr	r1, [pc, #152]	; 21028 <ieof+0x108>
   20f8c:	ldr	r1, [pc, r1]
   20f90:	ldr	r1, [r1, r0, lsl #2]
   20f94:	ldr	r2, [pc, #144]	; 2102c <ieof+0x10c>
   20f98:	ldr	r2, [pc, r2]
   20f9c:	str	r1, [r2]
   20fa0:	ldr	r1, [pc, #136]	; 21030 <ieof+0x110>
   20fa4:	ldr	r1, [pc, r1]
   20fa8:	ldr	r1, [r1, r0, lsl #2]
   20fac:	ldr	r2, [pc, #128]	; 21034 <ieof+0x114>
   20fb0:	ldr	r2, [pc, r2]
   20fb4:	ldr	r3, [pc, #124]	; 21038 <ieof+0x118>
   20fb8:	ldr	r3, [pc, r3]
   20fbc:	cmp	r0, #0
   20fc0:	addne	r3, r2, r0, lsl #9
   20fc4:	ldr	r2, [pc, #112]	; 2103c <ieof+0x11c>
   20fc8:	ldr	r2, [pc, r2]
   20fcc:	str	r3, [r2]
   20fd0:	str	r1, [r6]
   20fd4:	ldr	r1, [pc, #100]	; 21040 <ieof+0x120>
   20fd8:	ldr	r1, [pc, r1]
   20fdc:	ldr	r0, [r1, r0, lsl #2]
   20fe0:	bl	cf80 <yy_switch_to_buffer@plt>
   20fe4:	mov	r0, r4
   20fe8:	pop	{r4, r5, r6, sl, fp, pc}
   20fec:	sub	r0, r0, #1
   20ff0:	str	r0, [r5]
   20ff4:	ldr	r0, [pc, #32]	; 2101c <ieof+0xfc>
   20ff8:	ldr	r0, [pc, r0]
   20ffc:	mov	r4, #1
   21000:	str	r4, [r0]
   21004:	mov	r0, #0
   21008:	str	r0, [r5]
   2100c:	mov	r0, r4
   21010:	pop	{r4, r5, r6, sl, fp, pc}
   21014:	.word	0x000399a8
   21018:	.word	0x00039abc
   2101c:	.word	0x00039a48
   21020:	.word	0x00044d7c
   21024:	.word	0x00044d70
   21028:	.word	0x00039a40
   2102c:	.word	0x00039aa8
   21030:	.word	0x00039964
   21034:	.word	0x00039af8
   21038:	.word	0x00039bb8
   2103c:	.word	0x00039930
   21040:	.word	0x00039958

00021044 <yy_get_previous_state>:
   21044:	ldr	r0, [pc, #316]	; 21188 <yy_get_previous_state+0x144>
   21048:	ldr	r0, [pc, r0]
   2104c:	ldr	r0, [r0]
   21050:	ldr	r1, [pc, #308]	; 2118c <yy_get_previous_state+0x148>
   21054:	ldr	r1, [pc, r1]
   21058:	add	r1, r0, r1
   2105c:	ldr	r0, [pc, #300]	; 21190 <yy_get_previous_state+0x14c>
   21060:	add	r0, pc, r0
   21064:	ldrb	r0, [r0]
   21068:	ldr	r2, [pc, #292]	; 21194 <yy_get_previous_state+0x150>
   2106c:	ldr	r2, [pc, r2]
   21070:	cmp	r1, r2
   21074:	bxcs	lr
   21078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2107c:	add	fp, sp, #28
   21080:	sub	sp, sp, #4
   21084:	ldr	lr, [pc, #268]	; 21198 <yy_get_previous_state+0x154>
   21088:	ldr	lr, [pc, lr]
   2108c:	ldr	sl, [pc, #264]	; 2119c <yy_get_previous_state+0x158>
   21090:	add	sl, pc, sl
   21094:	ldr	r3, [pc, #260]	; 211a0 <yy_get_previous_state+0x15c>
   21098:	add	r3, pc, r3
   2109c:	ldr	r2, [pc, #256]	; 211a4 <yy_get_previous_state+0x160>
   210a0:	add	r2, pc, r2
   210a4:	ldr	r8, [pc, #252]	; 211a8 <yy_get_previous_state+0x164>
   210a8:	add	r8, pc, r8
   210ac:	ldr	r5, [pc, #248]	; 211ac <yy_get_previous_state+0x168>
   210b0:	add	r5, pc, r5
   210b4:	ldr	r6, [pc, #244]	; 211b0 <yy_get_previous_state+0x16c>
   210b8:	add	r6, pc, r6
   210bc:	str	lr, [sp]
   210c0:	ldrb	r7, [r1]
   210c4:	cmp	r7, #0
   210c8:	beq	210dc <yy_get_previous_state+0x98>
   210cc:	ldr	r4, [pc, #224]	; 211b4 <yy_get_previous_state+0x170>
   210d0:	add	r4, pc, r4
   210d4:	ldrb	r7, [r4, r7]
   210d8:	b	210e0 <yy_get_previous_state+0x9c>
   210dc:	mov	r7, #1
   210e0:	add	r4, sl, r0, lsl #1
   210e4:	ldrh	r4, [r4]
   210e8:	cmp	r4, #0
   210ec:	beq	21108 <yy_get_previous_state+0xc4>
   210f0:	ldr	r4, [pc, #192]	; 211b8 <yy_get_previous_state+0x174>
   210f4:	add	r4, pc, r4
   210f8:	str	r1, [r4]
   210fc:	ldr	r4, [pc, #184]	; 211bc <yy_get_previous_state+0x178>
   21100:	add	r4, pc, r4
   21104:	str	r0, [r4]
   21108:	add	r4, r3, r0, lsl #1
   2110c:	ldrsh	r4, [r4]
   21110:	add	r9, r4, r7
   21114:	add	r4, r2, r9, lsl #1
   21118:	ldrsh	r4, [r4]
   2111c:	cmp	r0, r4
   21120:	beq	21168 <yy_get_previous_state+0x124>
   21124:	mov	lr, r8
   21128:	mov	r8, r7
   2112c:	add	r0, r5, r0, lsl #1
   21130:	ldrsh	r0, [r0]
   21134:	cmp	r0, #47	; 0x2f
   21138:	ldrbge	r8, [r6, r7]
   2113c:	add	r4, r3, r0, lsl #1
   21140:	ldrsh	r4, [r4]
   21144:	uxtab	r9, r4, r8
   21148:	add	r4, r2, r9, lsl #1
   2114c:	ldrh	r4, [r4]
   21150:	uxtb	r7, r8
   21154:	uxth	ip, r0
   21158:	cmp	ip, r4
   2115c:	bne	2112c <yy_get_previous_state+0xe8>
   21160:	mov	r8, lr
   21164:	ldr	lr, [sp]
   21168:	add	r0, r8, r9, lsl #1
   2116c:	ldrsh	r0, [r0]
   21170:	add	r1, r1, #1
   21174:	cmp	r1, lr
   21178:	bcc	210c0 <yy_get_previous_state+0x7c>
   2117c:	sub	sp, fp, #28
   21180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21184:	bx	lr
   21188:	.word	0x000398c4
   2118c:	.word	0x00044c98
   21190:	.word	0x00044c80
   21194:	.word	0x00044c88
   21198:	.word	0x00044c6c
   2119c:	.word	0x00021408
   211a0:	.word	0x00021572
   211a4:	.word	0x00021456
   211a8:	.word	0x0002165c
   211ac:	.word	0x000215c6
   211b0:	.word	0x0002162a
   211b4:	.word	0x000212c8
   211b8:	.word	0x00044c0c
   211bc:	.word	0x00044bfc

000211c0 <yy_try_NUL_trans>:
   211c0:	ldr	r1, [pc, #180]	; 2127c <yy_try_NUL_trans+0xbc>
   211c4:	add	r1, pc, r1
   211c8:	add	r1, r1, r0, lsl #1
   211cc:	ldrh	r1, [r1]
   211d0:	cmp	r1, #0
   211d4:	beq	211f8 <yy_try_NUL_trans+0x38>
   211d8:	ldr	r1, [pc, #160]	; 21280 <yy_try_NUL_trans+0xc0>
   211dc:	add	r1, pc, r1
   211e0:	str	r0, [r1]
   211e4:	ldr	r1, [pc, #152]	; 21284 <yy_try_NUL_trans+0xc4>
   211e8:	ldr	r1, [pc, r1]
   211ec:	ldr	r2, [pc, #148]	; 21288 <yy_try_NUL_trans+0xc8>
   211f0:	add	r2, pc, r2
   211f4:	str	r1, [r2]
   211f8:	push	{r4, sl, fp, lr}
   211fc:	add	fp, sp, #8
   21200:	ldr	ip, [pc, #132]	; 2128c <yy_try_NUL_trans+0xcc>
   21204:	add	ip, pc, ip
   21208:	add	r1, ip, r0, lsl #1
   2120c:	ldrsh	r1, [r1]
   21210:	add	r3, r1, #1
   21214:	ldr	lr, [pc, #116]	; 21290 <yy_try_NUL_trans+0xd0>
   21218:	add	lr, pc, lr
   2121c:	add	r1, lr, r3, lsl #1
   21220:	ldrsh	r1, [r1]
   21224:	cmp	r1, r0
   21228:	beq	2125c <yy_try_NUL_trans+0x9c>
   2122c:	ldr	r1, [pc, #96]	; 21294 <yy_try_NUL_trans+0xd4>
   21230:	add	r1, pc, r1
   21234:	add	r0, r1, r0, lsl #1
   21238:	ldrh	r2, [r0]
   2123c:	sxth	r0, r2
   21240:	add	r3, ip, r0, lsl #1
   21244:	ldrsh	r3, [r3]
   21248:	add	r3, r3, #1
   2124c:	add	r4, lr, r3, lsl #1
   21250:	ldrh	r4, [r4]
   21254:	cmp	r2, r4
   21258:	bne	21234 <yy_try_NUL_trans+0x74>
   2125c:	ldr	r0, [pc, #52]	; 21298 <yy_try_NUL_trans+0xd8>
   21260:	add	r0, pc, r0
   21264:	add	r0, r0, r3, lsl #1
   21268:	ldrh	r0, [r0]
   2126c:	subs	r1, r0, #46	; 0x2e
   21270:	movne	r1, r0
   21274:	sxth	r0, r1
   21278:	pop	{r4, sl, fp, pc}
   2127c:	.word	0x000212d4
   21280:	.word	0x00044b20
   21284:	.word	0x00044b0c
   21288:	.word	0x00044b10
   2128c:	.word	0x00021406
   21290:	.word	0x000212de
   21294:	.word	0x00021446
   21298:	.word	0x000214a4

0002129c <yy_get_next_buffer>:
   2129c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   212a0:	add	fp, sp, #28
   212a4:	sub	sp, sp, #4
   212a8:	ldr	r0, [pc, #876]	; 2161c <yy_get_next_buffer+0x380>
   212ac:	ldr	r0, [pc, r0]
   212b0:	ldr	r1, [pc, #872]	; 21620 <yy_get_next_buffer+0x384>
   212b4:	ldr	r1, [pc, r1]
   212b8:	ldr	r0, [r1, r0, lsl #2]
   212bc:	ldr	r4, [r0, #4]
   212c0:	ldr	r0, [pc, #860]	; 21624 <yy_get_next_buffer+0x388>
   212c4:	ldr	r0, [pc, r0]
   212c8:	add	r0, r4, r0
   212cc:	add	r0, r0, #1
   212d0:	ldr	r8, [pc, #848]	; 21628 <yy_get_next_buffer+0x38c>
   212d4:	ldr	r8, [pc, r8]
   212d8:	ldr	r5, [r8]
   212dc:	ldr	r1, [pc, #840]	; 2162c <yy_get_next_buffer+0x390>
   212e0:	ldr	r1, [pc, r1]
   212e4:	cmp	r1, r0
   212e8:	bls	212f8 <yy_get_next_buffer+0x5c>
   212ec:	ldr	r0, [pc, #828]	; 21630 <yy_get_next_buffer+0x394>
   212f0:	add	r0, pc, r0
   212f4:	bl	d3d0 <conf_yy_fatal_error@plt>
   212f8:	ldr	r0, [r8]
   212fc:	ldr	r1, [pc, #816]	; 21634 <yy_get_next_buffer+0x398>
   21300:	ldr	r1, [pc, r1]
   21304:	sub	r7, r1, r0
   21308:	ldr	r0, [pc, #808]	; 21638 <yy_get_next_buffer+0x39c>
   2130c:	ldr	r0, [pc, r0]
   21310:	ldr	r1, [pc, #804]	; 2163c <yy_get_next_buffer+0x3a0>
   21314:	ldr	r1, [pc, r1]
   21318:	ldr	r2, [r1, r0, lsl #2]
   2131c:	ldr	r2, [r2, #40]	; 0x28
   21320:	cmp	r2, #0
   21324:	beq	21374 <yy_get_next_buffer+0xd8>
   21328:	sub	r6, r7, #1
   2132c:	cmp	r7, #2
   21330:	blt	2134c <yy_get_next_buffer+0xb0>
   21334:	mov	r2, #0
   21338:	ldrb	r3, [r5, r2]
   2133c:	strb	r3, [r4, r2]
   21340:	add	r2, r2, #1
   21344:	cmp	r2, r6
   21348:	blt	21338 <yy_get_next_buffer+0x9c>
   2134c:	ldr	r0, [r1, r0, lsl #2]
   21350:	ldr	r1, [r0, #44]	; 0x2c
   21354:	cmp	r1, #2
   21358:	bne	2138c <yy_get_next_buffer+0xf0>
   2135c:	ldr	r1, [pc, #868]	; 216c8 <yy_get_next_buffer+0x42c>
   21360:	add	r1, pc, r1
   21364:	mov	r2, #0
   21368:	str	r2, [r1]
   2136c:	str	r2, [r0, #16]
   21370:	b	214ec <yy_get_next_buffer+0x250>
   21374:	ldr	r0, [pc, #708]	; 21640 <yy_get_next_buffer+0x3a4>
   21378:	ldr	r0, [pc, r0]
   2137c:	sub	r4, r7, r0
   21380:	cmp	r4, #1
   21384:	movwne	r4, #2
   21388:	b	21610 <yy_get_next_buffer+0x374>
   2138c:	ldr	r0, [r0, #12]
   21390:	sub	r1, r0, r7
   21394:	cmp	r1, #0
   21398:	bgt	2145c <yy_get_next_buffer+0x1c0>
   2139c:	mov	r9, #0
   213a0:	ldr	sl, [pc, #668]	; 21644 <yy_get_next_buffer+0x3a8>
   213a4:	add	sl, pc, sl
   213a8:	ldr	r5, [pc, #664]	; 21648 <yy_get_next_buffer+0x3ac>
   213ac:	add	r5, pc, r5
   213b0:	ldr	r0, [pc, #660]	; 2164c <yy_get_next_buffer+0x3b0>
   213b4:	ldr	r0, [pc, r0]
   213b8:	ldr	r1, [pc, #656]	; 21650 <yy_get_next_buffer+0x3b4>
   213bc:	ldr	r1, [pc, r1]
   213c0:	ldr	r4, [r1, r0, lsl #2]
   213c4:	ldr	r0, [r4, #4]
   213c8:	ldr	r1, [r4, #20]
   213cc:	ldr	r2, [pc, #640]	; 21654 <yy_get_next_buffer+0x3b8>
   213d0:	ldr	r2, [pc, r2]
   213d4:	sub	r8, r2, r0
   213d8:	cmp	r1, #0
   213dc:	beq	213f4 <yy_get_next_buffer+0x158>
   213e0:	ldr	r0, [r4, #12]
   213e4:	cmp	r0, #0
   213e8:	ble	213fc <yy_get_next_buffer+0x160>
   213ec:	lsl	r1, r0, #1
   213f0:	b	21408 <yy_get_next_buffer+0x16c>
   213f4:	str	r9, [r4, #4]
   213f8:	b	21424 <yy_get_next_buffer+0x188>
   213fc:	asr	r1, r0, #31
   21400:	add	r1, r0, r1, lsr #29
   21404:	add	r1, r0, r1, asr #3
   21408:	str	r1, [r4, #12]
   2140c:	ldr	r0, [r4, #4]
   21410:	add	r1, r1, #2
   21414:	bl	d67c <yyrealloc@plt>
   21418:	str	r0, [r4, #4]
   2141c:	cmp	r0, #0
   21420:	bne	2142c <yy_get_next_buffer+0x190>
   21424:	mov	r0, sl
   21428:	bl	d3d0 <conf_yy_fatal_error@plt>
   2142c:	ldr	r0, [r4, #4]
   21430:	add	r0, r0, r8
   21434:	str	r0, [r5]
   21438:	ldr	r0, [pc, #536]	; 21658 <yy_get_next_buffer+0x3bc>
   2143c:	ldr	r0, [pc, r0]
   21440:	ldr	r1, [pc, #532]	; 2165c <yy_get_next_buffer+0x3c0>
   21444:	ldr	r1, [pc, r1]
   21448:	ldr	r0, [r1, r0, lsl #2]
   2144c:	ldr	r0, [r0, #12]
   21450:	sub	r1, r0, r7
   21454:	cmp	r1, #1
   21458:	blt	213b0 <yy_get_next_buffer+0x114>
   2145c:	cmp	r1, #8192	; 0x2000
   21460:	movge	r1, #8192	; 0x2000
   21464:	ldr	r0, [pc, #500]	; 21660 <yy_get_next_buffer+0x3c4>
   21468:	ldr	r0, [pc, r0]
   2146c:	ldr	r2, [pc, #496]	; 21664 <yy_get_next_buffer+0x3c8>
   21470:	ldr	r2, [pc, r2]
   21474:	ldr	r0, [r2, r0, lsl #2]
   21478:	ldr	r0, [r0, #4]
   2147c:	add	r0, r0, r6
   21480:	ldr	r2, [pc, #480]	; 21668 <yy_get_next_buffer+0x3cc>
   21484:	ldr	r2, [pc, r2]
   21488:	ldr	r2, [r2]
   2148c:	bl	d940 <conf_fgets@plt>
   21490:	ldr	r1, [pc, #468]	; 2166c <yy_get_next_buffer+0x3d0>
   21494:	add	r1, pc, r1
   21498:	str	r0, [r1]
   2149c:	cmp	r0, #0
   214a0:	bne	214b0 <yy_get_next_buffer+0x214>
   214a4:	ldr	r0, [pc, #452]	; 21670 <yy_get_next_buffer+0x3d4>
   214a8:	add	r0, pc, r0
   214ac:	bl	d3d0 <conf_yy_fatal_error@plt>
   214b0:	ldr	r0, [pc, #444]	; 21674 <yy_get_next_buffer+0x3d8>
   214b4:	ldr	r0, [pc, r0]
   214b8:	ldr	r1, [pc, #440]	; 21678 <yy_get_next_buffer+0x3dc>
   214bc:	ldr	r1, [pc, r1]
   214c0:	ldr	r0, [r1, r0, lsl #2]
   214c4:	ldr	r1, [pc, #432]	; 2167c <yy_get_next_buffer+0x3e0>
   214c8:	ldr	r1, [pc, r1]
   214cc:	str	r1, [r0, #16]
   214d0:	mov	r4, #0
   214d4:	ldr	r0, [pc, #420]	; 21680 <yy_get_next_buffer+0x3e4>
   214d8:	ldr	r0, [pc, r0]
   214dc:	cmp	r0, #0
   214e0:	ldr	r8, [pc, #412]	; 21684 <yy_get_next_buffer+0x3e8>
   214e4:	ldr	r8, [pc, r8]
   214e8:	bne	21530 <yy_get_next_buffer+0x294>
   214ec:	ldr	r0, [pc, #404]	; 21688 <yy_get_next_buffer+0x3ec>
   214f0:	ldr	r0, [pc, r0]
   214f4:	cmp	r6, r0
   214f8:	bne	21514 <yy_get_next_buffer+0x278>
   214fc:	ldr	r0, [pc, #392]	; 2168c <yy_get_next_buffer+0x3f0>
   21500:	ldr	r0, [pc, r0]
   21504:	ldr	r0, [r0]
   21508:	bl	d028 <yyrestart@plt>
   2150c:	mov	r4, #1
   21510:	b	21530 <yy_get_next_buffer+0x294>
   21514:	ldr	r0, [pc, #372]	; 21690 <yy_get_next_buffer+0x3f4>
   21518:	ldr	r0, [pc, r0]
   2151c:	ldr	r1, [pc, #368]	; 21694 <yy_get_next_buffer+0x3f8>
   21520:	ldr	r1, [pc, r1]
   21524:	ldr	r0, [r1, r0, lsl #2]
   21528:	mov	r4, #2
   2152c:	str	r4, [r0, #44]	; 0x2c
   21530:	ldr	r0, [pc, #352]	; 21698 <yy_get_next_buffer+0x3fc>
   21534:	ldr	r0, [pc, r0]
   21538:	add	r1, r0, r6
   2153c:	ldr	r2, [pc, #344]	; 2169c <yy_get_next_buffer+0x400>
   21540:	ldr	r2, [pc, r2]
   21544:	ldr	r3, [pc, #340]	; 216a0 <yy_get_next_buffer+0x404>
   21548:	ldr	r3, [pc, r3]
   2154c:	ldr	r2, [r3, r2, lsl #2]
   21550:	ldr	r3, [r2, #12]
   21554:	cmp	r1, r3
   21558:	ble	215bc <yy_get_next_buffer+0x320>
   2155c:	add	r5, r1, r0, asr #1
   21560:	ldr	r0, [r2, #4]
   21564:	mov	r1, r5
   21568:	bl	d67c <yyrealloc@plt>
   2156c:	ldr	r1, [pc, #304]	; 216a4 <yy_get_next_buffer+0x408>
   21570:	ldr	r1, [pc, r1]
   21574:	ldr	r2, [pc, #300]	; 216a8 <yy_get_next_buffer+0x40c>
   21578:	ldr	r2, [pc, r2]
   2157c:	ldr	r3, [r2, r1, lsl #2]
   21580:	str	r0, [r3, #4]
   21584:	ldr	r0, [r2, r1, lsl #2]
   21588:	ldr	r0, [r0, #4]
   2158c:	cmp	r0, #0
   21590:	bne	215a0 <yy_get_next_buffer+0x304>
   21594:	ldr	r0, [pc, #272]	; 216ac <yy_get_next_buffer+0x410>
   21598:	add	r0, pc, r0
   2159c:	bl	d3d0 <conf_yy_fatal_error@plt>
   215a0:	ldr	r0, [pc, #264]	; 216b0 <yy_get_next_buffer+0x414>
   215a4:	ldr	r0, [pc, r0]
   215a8:	ldr	r1, [pc, #260]	; 216b4 <yy_get_next_buffer+0x418>
   215ac:	ldr	r1, [pc, r1]
   215b0:	ldr	r0, [r1, r0, lsl #2]
   215b4:	sub	r1, r5, #2
   215b8:	str	r1, [r0, #12]
   215bc:	ldr	r0, [pc, #244]	; 216b8 <yy_get_next_buffer+0x41c>
   215c0:	ldr	r0, [pc, r0]
   215c4:	add	r1, r0, r6
   215c8:	ldr	r2, [pc, #236]	; 216bc <yy_get_next_buffer+0x420>
   215cc:	add	r2, pc, r2
   215d0:	str	r1, [r2]
   215d4:	ldr	r2, [pc, #228]	; 216c0 <yy_get_next_buffer+0x424>
   215d8:	ldr	r2, [pc, r2]
   215dc:	ldr	r3, [pc, #224]	; 216c4 <yy_get_next_buffer+0x428>
   215e0:	ldr	r3, [pc, r3]
   215e4:	ldr	r6, [r3, r2, lsl #2]
   215e8:	ldr	r6, [r6, #4]
   215ec:	mov	r5, #0
   215f0:	strb	r5, [r6, r1]
   215f4:	add	r0, r0, r7
   215f8:	ldr	r1, [r3, r2, lsl #2]
   215fc:	ldr	r1, [r1, #4]
   21600:	strb	r5, [r1, r0]
   21604:	ldr	r0, [r3, r2, lsl #2]
   21608:	ldr	r0, [r0, #4]
   2160c:	str	r0, [r8]
   21610:	mov	r0, r4
   21614:	sub	sp, fp, #28
   21618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2161c:	.word	0x00044a3c
   21620:	.word	0x00044a30
   21624:	.word	0x00044a40
   21628:	.word	0x00039638
   2162c:	.word	0x00044a14
   21630:	.word	0x0002168b
   21634:	.word	0x000449f4
   21638:	.word	0x000449dc
   2163c:	.word	0x000449d0
   21640:	.word	0x00044974
   21644:	.word	0x0002160f
   21648:	.word	0x00044948
   2164c:	.word	0x00044934
   21650:	.word	0x00044928
   21654:	.word	0x00044924
   21658:	.word	0x000448ac
   2165c:	.word	0x000448a0
   21660:	.word	0x00044880
   21664:	.word	0x00044874
   21668:	.word	0x00039578
   2166c:	.word	0x00044870
   21670:	.word	0x00021537
   21674:	.word	0x00044834
   21678:	.word	0x00044828
   2167c:	.word	0x0004483c
   21680:	.word	0x0004482c
   21684:	.word	0x00039428
   21688:	.word	0x000447fc
   2168c:	.word	0x000393c8
   21690:	.word	0x000447d0
   21694:	.word	0x000447c4
   21698:	.word	0x000447d0
   2169c:	.word	0x000447a8
   216a0:	.word	0x0004479c
   216a4:	.word	0x00044778
   216a8:	.word	0x0004476c
   216ac:	.word	0x00021464
   216b0:	.word	0x00044744
   216b4:	.word	0x00044738
   216b8:	.word	0x00044744
   216bc:	.word	0x00044738
   216c0:	.word	0x00044710
   216c4:	.word	0x00044704
   216c8:	.word	0x000449a4

000216cc <yyrestart>:
   216cc:	push	{r4, sl, fp, lr}
   216d0:	add	fp, sp, #8
   216d4:	mov	r4, r0
   216d8:	ldr	r0, [pc, #132]	; 21764 <yyrestart+0x98>
   216dc:	ldr	r0, [pc, r0]
   216e0:	cmp	r0, #0
   216e4:	beq	21714 <yyrestart+0x48>
   216e8:	ldr	r1, [pc, #120]	; 21768 <yyrestart+0x9c>
   216ec:	ldr	r1, [pc, r1]
   216f0:	ldr	r0, [r0, r1, lsl #2]
   216f4:	cmp	r0, #0
   216f8:	beq	21714 <yyrestart+0x48>
   216fc:	ldr	r1, [pc, #116]	; 21778 <yyrestart+0xac>
   21700:	ldr	r1, [pc, r1]
   21704:	cmp	r1, #0
   21708:	bne	21748 <yyrestart+0x7c>
   2170c:	mov	r0, #0
   21710:	b	21754 <yyrestart+0x88>
   21714:	bl	20a04 <yyensure_buffer_stack>
   21718:	ldr	r0, [pc, #76]	; 2176c <yyrestart+0xa0>
   2171c:	ldr	r0, [pc, r0]
   21720:	ldr	r0, [r0]
   21724:	mov	r1, #16384	; 0x4000
   21728:	bl	d6dc <yy_create_buffer@plt>
   2172c:	ldr	r1, [pc, #60]	; 21770 <yyrestart+0xa4>
   21730:	ldr	r1, [pc, r1]
   21734:	ldr	r2, [pc, #56]	; 21774 <yyrestart+0xa8>
   21738:	ldr	r2, [pc, r2]
   2173c:	str	r0, [r1, r2, lsl #2]
   21740:	cmp	r1, #0
   21744:	beq	2170c <yyrestart+0x40>
   21748:	ldr	r0, [pc, #44]	; 2177c <yyrestart+0xb0>
   2174c:	ldr	r0, [pc, r0]
   21750:	ldr	r0, [r1, r0, lsl #2]
   21754:	mov	r1, r4
   21758:	bl	21780 <yy_init_buffer>
   2175c:	pop	{r4, sl, fp, lr}
   21760:	b	20b98 <yy_load_buffer_state>
   21764:	.word	0x00044608
   21768:	.word	0x000445fc
   2176c:	.word	0x000391ac
   21770:	.word	0x000445b4
   21774:	.word	0x000445b0
   21778:	.word	0x000445e4
   2177c:	.word	0x0004459c

00021780 <yy_init_buffer>:
   21780:	push	{r4, r5, r6, r7, fp, lr}
   21784:	add	fp, sp, #16
   21788:	mov	r6, r1
   2178c:	mov	r4, r0
   21790:	bl	de38 <__errno_location@plt>
   21794:	mov	r5, r0
   21798:	ldr	r7, [r0]
   2179c:	mov	r0, r4
   217a0:	bl	e2f4 <yy_flush_buffer@plt>
   217a4:	mov	r0, #1
   217a8:	str	r0, [r4, #40]	; 0x28
   217ac:	str	r6, [r4]
   217b0:	ldr	r0, [pc, #100]	; 2181c <yy_init_buffer+0x9c>
   217b4:	ldr	r0, [pc, r0]
   217b8:	cmp	r0, #0
   217bc:	beq	217d0 <yy_init_buffer+0x50>
   217c0:	ldr	r1, [pc, #88]	; 21820 <yy_init_buffer+0xa0>
   217c4:	ldr	r1, [pc, r1]
   217c8:	ldr	r0, [r0, r1, lsl #2]
   217cc:	b	217d4 <yy_init_buffer+0x54>
   217d0:	mov	r0, #0
   217d4:	cmp	r0, r4
   217d8:	movne	r0, #0
   217dc:	movne	r1, #1
   217e0:	strne	r1, [r4, #32]
   217e4:	strne	r0, [r4, #36]	; 0x24
   217e8:	cmp	r6, #0
   217ec:	beq	2180c <yy_init_buffer+0x8c>
   217f0:	mov	r0, r6
   217f4:	bl	e03c <fileno@plt>
   217f8:	bl	e66c <isatty@plt>
   217fc:	mov	r1, #0
   21800:	cmp	r0, #0
   21804:	movwgt	r1, #1
   21808:	b	21810 <yy_init_buffer+0x90>
   2180c:	mov	r1, #0
   21810:	str	r1, [r4, #24]
   21814:	str	r7, [r5]
   21818:	pop	{r4, r5, r6, r7, fp, pc}
   2181c:	.word	0x00044530
   21820:	.word	0x00044524

00021824 <yy_switch_to_buffer>:
   21824:	push	{r4, sl, fp, lr}
   21828:	add	fp, sp, #8
   2182c:	mov	r4, r0
   21830:	bl	20a04 <yyensure_buffer_stack>
   21834:	ldr	r0, [pc, #132]	; 218c0 <yy_switch_to_buffer+0x9c>
   21838:	ldr	r0, [pc, r0]
   2183c:	cmp	r0, #0
   21840:	beq	21854 <yy_switch_to_buffer+0x30>
   21844:	ldr	r1, [pc, #120]	; 218c4 <yy_switch_to_buffer+0xa0>
   21848:	ldr	r1, [pc, r1]
   2184c:	ldr	r1, [r0, r1, lsl #2]
   21850:	b	21858 <yy_switch_to_buffer+0x34>
   21854:	mov	r1, #0
   21858:	cmp	r1, r4
   2185c:	popeq	{r4, sl, fp, pc}
   21860:	cmp	r0, #0
   21864:	beq	218ac <yy_switch_to_buffer+0x88>
   21868:	ldr	r1, [pc, #88]	; 218c8 <yy_switch_to_buffer+0xa4>
   2186c:	ldr	r1, [pc, r1]
   21870:	ldr	r2, [r0, r1, lsl #2]
   21874:	cmp	r2, #0
   21878:	beq	218ac <yy_switch_to_buffer+0x88>
   2187c:	ldr	r2, [pc, #72]	; 218cc <yy_switch_to_buffer+0xa8>
   21880:	add	r2, pc, r2
   21884:	ldrb	r2, [r2]
   21888:	ldr	r3, [pc, #64]	; 218d0 <yy_switch_to_buffer+0xac>
   2188c:	ldr	r3, [pc, r3]
   21890:	strb	r2, [r3]
   21894:	ldr	r2, [r0, r1, lsl #2]
   21898:	str	r3, [r2, #8]
   2189c:	ldr	r1, [r0, r1, lsl #2]
   218a0:	ldr	r2, [pc, #44]	; 218d4 <yy_switch_to_buffer+0xb0>
   218a4:	ldr	r2, [pc, r2]
   218a8:	str	r2, [r1, #16]
   218ac:	ldr	r1, [pc, #36]	; 218d8 <yy_switch_to_buffer+0xb4>
   218b0:	ldr	r1, [pc, r1]
   218b4:	str	r4, [r0, r1, lsl #2]
   218b8:	pop	{r4, sl, fp, lr}
   218bc:	b	20b98 <yy_load_buffer_state>
   218c0:	.word	0x000444ac
   218c4:	.word	0x000444a0
   218c8:	.word	0x0004447c
   218cc:	.word	0x00044478
   218d0:	.word	0x00044468
   218d4:	.word	0x00044460
   218d8:	.word	0x00044438

000218dc <yyalloc>:
   218dc:	b	da90 <malloc@plt>

000218e0 <yy_delete_buffer>:
   218e0:	cmp	r0, #0
   218e4:	bxeq	lr
   218e8:	push	{r4, sl, fp, lr}
   218ec:	add	fp, sp, #8
   218f0:	mov	r4, r0
   218f4:	ldr	r0, [pc, #88]	; 21954 <yy_delete_buffer+0x74>
   218f8:	ldr	r0, [pc, r0]
   218fc:	cmp	r0, #0
   21900:	beq	21944 <yy_delete_buffer+0x64>
   21904:	ldr	r1, [pc, #76]	; 21958 <yy_delete_buffer+0x78>
   21908:	ldr	r1, [pc, r1]
   2190c:	ldr	r1, [r0, r1, lsl #2]
   21910:	cmp	r1, r4
   21914:	bne	21928 <yy_delete_buffer+0x48>
   21918:	ldr	r1, [pc, #60]	; 2195c <yy_delete_buffer+0x7c>
   2191c:	ldr	r1, [pc, r1]
   21920:	mov	r2, #0
   21924:	str	r2, [r0, r1, lsl #2]
   21928:	ldr	r0, [r4, #20]
   2192c:	cmp	r0, #0
   21930:	ldrne	r0, [r4, #4]
   21934:	blne	d934 <yyfree@plt>
   21938:	mov	r0, r4
   2193c:	pop	{r4, sl, fp, lr}
   21940:	b	21960 <yyfree>
   21944:	mov	r1, #0
   21948:	cmp	r1, r4
   2194c:	bne	21928 <yy_delete_buffer+0x48>
   21950:	b	21918 <yy_delete_buffer+0x38>
   21954:	.word	0x000443ec
   21958:	.word	0x000443e0
   2195c:	.word	0x000443cc

00021960 <yyfree>:
   21960:	b	d328 <free@plt>

00021964 <yy_flush_buffer>:
   21964:	cmp	r0, #0
   21968:	beq	219bc <yy_flush_buffer+0x58>
   2196c:	mov	r1, #0
   21970:	str	r1, [r0, #16]
   21974:	ldr	r2, [r0, #4]
   21978:	strb	r1, [r2]
   2197c:	ldr	r2, [r0, #4]
   21980:	strb	r1, [r2, #1]
   21984:	mov	r2, #1
   21988:	str	r2, [r0, #28]
   2198c:	str	r1, [r0, #44]	; 0x2c
   21990:	ldr	r2, [r0, #4]
   21994:	str	r2, [r0, #8]
   21998:	ldr	r2, [pc, #32]	; 219c0 <yy_flush_buffer+0x5c>
   2199c:	ldr	r2, [pc, r2]
   219a0:	cmp	r2, #0
   219a4:	ldrne	r1, [pc, #24]	; 219c4 <yy_flush_buffer+0x60>
   219a8:	ldrne	r1, [pc, r1]
   219ac:	ldrne	r1, [r2, r1, lsl #2]
   219b0:	cmp	r1, r0
   219b4:	bxne	lr
   219b8:	b	20b98 <yy_load_buffer_state>
   219bc:	bx	lr
   219c0:	.word	0x00044348
   219c4:	.word	0x00044340

000219c8 <yypush_buffer_state>:
   219c8:	cmp	r0, #0
   219cc:	bxeq	lr
   219d0:	push	{r4, sl, fp, lr}
   219d4:	add	fp, sp, #8
   219d8:	mov	r4, r0
   219dc:	bl	20a04 <yyensure_buffer_stack>
   219e0:	ldr	r0, [pc, #128]	; 21a68 <yypush_buffer_state+0xa0>
   219e4:	ldr	r0, [pc, r0]
   219e8:	cmp	r0, #0
   219ec:	beq	21a54 <yypush_buffer_state+0x8c>
   219f0:	ldr	r1, [pc, #116]	; 21a6c <yypush_buffer_state+0xa4>
   219f4:	ldr	r1, [pc, r1]
   219f8:	ldr	r2, [r0, r1, lsl #2]
   219fc:	cmp	r2, #0
   21a00:	beq	21a34 <yypush_buffer_state+0x6c>
   21a04:	ldr	r2, [pc, #100]	; 21a70 <yypush_buffer_state+0xa8>
   21a08:	add	r2, pc, r2
   21a0c:	ldrb	r2, [r2]
   21a10:	ldr	r3, [pc, #92]	; 21a74 <yypush_buffer_state+0xac>
   21a14:	ldr	r3, [pc, r3]
   21a18:	strb	r2, [r3]
   21a1c:	ldr	r2, [r0, r1, lsl #2]
   21a20:	str	r3, [r2, #8]
   21a24:	ldr	r1, [r0, r1, lsl #2]
   21a28:	ldr	r2, [pc, #72]	; 21a78 <yypush_buffer_state+0xb0>
   21a2c:	ldr	r2, [pc, r2]
   21a30:	str	r2, [r1, #16]
   21a34:	ldr	r1, [pc, #64]	; 21a7c <yypush_buffer_state+0xb4>
   21a38:	ldr	r1, [pc, r1]
   21a3c:	ldr	r2, [r0, r1, lsl #2]
   21a40:	cmp	r2, #0
   21a44:	addne	r1, r1, #1
   21a48:	ldrne	r2, [pc, #48]	; 21a80 <yypush_buffer_state+0xb8>
   21a4c:	addne	r2, pc, r2
   21a50:	strne	r1, [r2]
   21a54:	ldr	r1, [pc, #40]	; 21a84 <yypush_buffer_state+0xbc>
   21a58:	ldr	r1, [pc, r1]
   21a5c:	str	r4, [r0, r1, lsl #2]
   21a60:	pop	{r4, sl, fp, lr}
   21a64:	b	20b98 <yy_load_buffer_state>
   21a68:	.word	0x00044300
   21a6c:	.word	0x000442f4
   21a70:	.word	0x000442f0
   21a74:	.word	0x000442e0
   21a78:	.word	0x000442d8
   21a7c:	.word	0x000442b0
   21a80:	.word	0x0004429c
   21a84:	.word	0x00044290

00021a88 <yypop_buffer_state>:
   21a88:	ldr	r0, [pc, #124]	; 21b0c <yypop_buffer_state+0x84>
   21a8c:	ldr	r0, [pc, r0]
   21a90:	cmp	r0, #0
   21a94:	beq	21b08 <yypop_buffer_state+0x80>
   21a98:	ldr	r1, [pc, #112]	; 21b10 <yypop_buffer_state+0x88>
   21a9c:	ldr	r1, [pc, r1]
   21aa0:	ldr	r0, [r0, r1, lsl #2]
   21aa4:	cmp	r0, #0
   21aa8:	beq	21b08 <yypop_buffer_state+0x80>
   21aac:	push	{fp, lr}
   21ab0:	mov	fp, sp
   21ab4:	bl	dd84 <yy_delete_buffer@plt>
   21ab8:	ldr	r1, [pc, #84]	; 21b14 <yypop_buffer_state+0x8c>
   21abc:	ldr	r1, [pc, r1]
   21ac0:	ldr	r0, [pc, #80]	; 21b18 <yypop_buffer_state+0x90>
   21ac4:	ldr	r0, [pc, r0]
   21ac8:	mov	r2, #0
   21acc:	str	r2, [r0, r1, lsl #2]
   21ad0:	cmp	r1, #0
   21ad4:	pop	{fp, lr}
   21ad8:	subne	r1, r1, #1
   21adc:	ldrne	r2, [pc, #56]	; 21b1c <yypop_buffer_state+0x94>
   21ae0:	addne	r2, pc, r2
   21ae4:	strne	r1, [r2]
   21ae8:	cmp	r0, #0
   21aec:	bxeq	lr
   21af0:	ldr	r1, [pc, #40]	; 21b20 <yypop_buffer_state+0x98>
   21af4:	ldr	r1, [pc, r1]
   21af8:	ldr	r0, [r0, r1, lsl #2]
   21afc:	cmp	r0, #0
   21b00:	beq	21b08 <yypop_buffer_state+0x80>
   21b04:	b	20b98 <yy_load_buffer_state>
   21b08:	bx	lr
   21b0c:	.word	0x00044258
   21b10:	.word	0x0004424c
   21b14:	.word	0x0004422c
   21b18:	.word	0x00044220
   21b1c:	.word	0x00044208
   21b20:	.word	0x000441f4

00021b24 <yy_scan_buffer>:
   21b24:	push	{r4, r5, r6, sl, fp, lr}
   21b28:	add	fp, sp, #16
   21b2c:	mov	r4, #0
   21b30:	cmp	r1, #2
   21b34:	bcc	21b5c <yy_scan_buffer+0x38>
   21b38:	mov	r5, r0
   21b3c:	sub	r6, r1, #2
   21b40:	ldrb	r0, [r0, r6]
   21b44:	cmp	r0, #0
   21b48:	bne	21b5c <yy_scan_buffer+0x38>
   21b4c:	add	r0, r5, r1
   21b50:	ldrb	r0, [r0, #-1]
   21b54:	cmp	r0, #0
   21b58:	beq	21b64 <yy_scan_buffer+0x40>
   21b5c:	mov	r0, r4
   21b60:	pop	{r4, r5, r6, sl, fp, pc}
   21b64:	mov	r0, #48	; 0x30
   21b68:	bl	d8f8 <yyalloc@plt>
   21b6c:	mov	r4, r0
   21b70:	cmp	r0, #0
   21b74:	bne	21b84 <yy_scan_buffer+0x60>
   21b78:	ldr	r0, [pc, #64]	; 21bc0 <yy_scan_buffer+0x9c>
   21b7c:	add	r0, pc, r0
   21b80:	bl	d3d0 <conf_yy_fatal_error@plt>
   21b84:	mov	r0, #0
   21b88:	mov	r1, #1
   21b8c:	stm	r4, {r0, r5}
   21b90:	str	r5, [r4, #8]
   21b94:	str	r6, [r4, #12]
   21b98:	str	r6, [r4, #16]
   21b9c:	str	r0, [r4, #20]
   21ba0:	str	r0, [r4, #24]
   21ba4:	str	r1, [r4, #28]
   21ba8:	str	r0, [r4, #40]	; 0x28
   21bac:	str	r0, [r4, #44]	; 0x2c
   21bb0:	mov	r0, r4
   21bb4:	bl	cf80 <yy_switch_to_buffer@plt>
   21bb8:	mov	r0, r4
   21bbc:	pop	{r4, r5, r6, sl, fp, pc}
   21bc0:	.word	0x00020d19

00021bc4 <yy_scan_string>:
   21bc4:	push	{r4, sl, fp, lr}
   21bc8:	add	fp, sp, #8
   21bcc:	mov	r4, r0
   21bd0:	bl	dc94 <strlen@plt>
   21bd4:	mov	r1, r0
   21bd8:	mov	r0, r4
   21bdc:	pop	{r4, sl, fp, lr}
   21be0:	b	21be4 <yy_scan_bytes>

00021be4 <yy_scan_bytes>:
   21be4:	push	{r4, r5, r6, r7, fp, lr}
   21be8:	add	fp, sp, #16
   21bec:	mov	r5, r1
   21bf0:	mov	r7, r0
   21bf4:	add	r4, r1, #2
   21bf8:	mov	r0, r4
   21bfc:	bl	d8f8 <yyalloc@plt>
   21c00:	mov	r6, r0
   21c04:	cmp	r0, #0
   21c08:	beq	21c64 <yy_scan_bytes+0x80>
   21c0c:	cmp	r5, #1
   21c10:	blt	21c24 <yy_scan_bytes+0x40>
   21c14:	mov	r0, r6
   21c18:	mov	r1, r7
   21c1c:	mov	r2, r5
   21c20:	bl	d40c <memcpy@plt>
   21c24:	add	r0, r6, r5
   21c28:	mov	r1, #0
   21c2c:	strh	r1, [r0]
   21c30:	mov	r0, r6
   21c34:	mov	r1, r4
   21c38:	bl	d970 <yy_scan_buffer@plt>
   21c3c:	mov	r4, r0
   21c40:	cmp	r0, #0
   21c44:	bne	21c54 <yy_scan_bytes+0x70>
   21c48:	ldr	r0, [pc, #48]	; 21c80 <yy_scan_bytes+0x9c>
   21c4c:	add	r0, pc, r0
   21c50:	bl	d3d0 <conf_yy_fatal_error@plt>
   21c54:	mov	r0, #1
   21c58:	str	r0, [r4, #20]
   21c5c:	mov	r0, r4
   21c60:	pop	{r4, r5, r6, r7, fp, pc}
   21c64:	ldr	r0, [pc, #16]	; 21c7c <yy_scan_bytes+0x98>
   21c68:	add	r0, pc, r0
   21c6c:	bl	d3d0 <conf_yy_fatal_error@plt>
   21c70:	cmp	r5, #1
   21c74:	bge	21c14 <yy_scan_bytes+0x30>
   21c78:	b	21c24 <yy_scan_bytes+0x40>
   21c7c:	.word	0x00020c57
   21c80:	.word	0x00020c9c

00021c84 <yyget_lineno>:
   21c84:	ldr	r0, [pc, #8]	; 21c94 <yyget_lineno+0x10>
   21c88:	ldr	r0, [pc, r0]
   21c8c:	ldr	r0, [r0]
   21c90:	bx	lr
   21c94:	.word	0x00038cbc

00021c98 <yyget_in>:
   21c98:	ldr	r0, [pc, #8]	; 21ca8 <yyget_in+0x10>
   21c9c:	ldr	r0, [pc, r0]
   21ca0:	ldr	r0, [r0]
   21ca4:	bx	lr
   21ca8:	.word	0x00038c2c

00021cac <yyget_out>:
   21cac:	ldr	r0, [pc, #8]	; 21cbc <yyget_out+0x10>
   21cb0:	ldr	r0, [pc, r0]
   21cb4:	ldr	r0, [r0]
   21cb8:	bx	lr
   21cbc:	.word	0x00038ce8

00021cc0 <yyget_leng>:
   21cc0:	ldr	r0, [pc, #8]	; 21cd0 <yyget_leng+0x10>
   21cc4:	ldr	r0, [pc, r0]
   21cc8:	ldr	r0, [r0]
   21ccc:	bx	lr
   21cd0:	.word	0x00038d9c

00021cd4 <yyget_text>:
   21cd4:	ldr	r0, [pc, #8]	; 21ce4 <yyget_text+0x10>
   21cd8:	ldr	r0, [pc, r0]
   21cdc:	ldr	r0, [r0]
   21ce0:	bx	lr
   21ce4:	.word	0x00038c34

00021ce8 <yyset_lineno>:
   21ce8:	ldr	r1, [pc, #8]	; 21cf8 <yyset_lineno+0x10>
   21cec:	ldr	r1, [pc, r1]
   21cf0:	str	r0, [r1]
   21cf4:	bx	lr
   21cf8:	.word	0x00038c58

00021cfc <yyset_in>:
   21cfc:	ldr	r1, [pc, #8]	; 21d0c <yyset_in+0x10>
   21d00:	ldr	r1, [pc, r1]
   21d04:	str	r0, [r1]
   21d08:	bx	lr
   21d0c:	.word	0x00038bc8

00021d10 <yyset_out>:
   21d10:	ldr	r1, [pc, #8]	; 21d20 <yyset_out+0x10>
   21d14:	ldr	r1, [pc, r1]
   21d18:	str	r0, [r1]
   21d1c:	bx	lr
   21d20:	.word	0x00038c84

00021d24 <yyget_debug>:
   21d24:	ldr	r0, [pc, #8]	; 21d34 <yyget_debug+0x10>
   21d28:	ldr	r0, [pc, r0]
   21d2c:	ldr	r0, [r0]
   21d30:	bx	lr
   21d34:	.word	0x00038c24

00021d38 <yyset_debug>:
   21d38:	ldr	r1, [pc, #8]	; 21d48 <yyset_debug+0x10>
   21d3c:	ldr	r1, [pc, r1]
   21d40:	str	r0, [r1]
   21d44:	bx	lr
   21d48:	.word	0x00038c10

00021d4c <yylex_destroy>:
   21d4c:	push	{r4, r5, fp, lr}
   21d50:	add	fp, sp, #8
   21d54:	mov	r5, #0
   21d58:	ldr	r0, [pc, #132]	; 21de4 <yylex_destroy+0x98>
   21d5c:	ldr	r0, [pc, r0]
   21d60:	cmp	r0, #0
   21d64:	mov	r4, #0
   21d68:	beq	21dc4 <yylex_destroy+0x78>
   21d6c:	mov	r4, #0
   21d70:	ldr	r1, [pc, #112]	; 21de8 <yylex_destroy+0x9c>
   21d74:	ldr	r1, [pc, r1]
   21d78:	ldr	r1, [r0, r1, lsl #2]
   21d7c:	cmp	r1, #0
   21d80:	beq	21dc0 <yylex_destroy+0x74>
   21d84:	ldr	r1, [pc, #96]	; 21dec <yylex_destroy+0xa0>
   21d88:	ldr	r1, [pc, r1]
   21d8c:	ldr	r0, [r0, r1, lsl #2]
   21d90:	bl	dd84 <yy_delete_buffer@plt>
   21d94:	ldr	r0, [pc, #84]	; 21df0 <yylex_destroy+0xa4>
   21d98:	ldr	r0, [pc, r0]
   21d9c:	ldr	r1, [pc, #80]	; 21df4 <yylex_destroy+0xa8>
   21da0:	ldr	r1, [pc, r1]
   21da4:	str	r4, [r1, r0, lsl #2]
   21da8:	bl	df4c <yypop_buffer_state@plt>
   21dac:	ldr	r0, [pc, #68]	; 21df8 <yylex_destroy+0xac>
   21db0:	ldr	r0, [pc, r0]
   21db4:	cmp	r0, #0
   21db8:	bne	21d70 <yylex_destroy+0x24>
   21dbc:	b	21dc4 <yylex_destroy+0x78>
   21dc0:	mov	r4, r0
   21dc4:	mov	r0, r4
   21dc8:	bl	d934 <yyfree@plt>
   21dcc:	ldr	r0, [pc, #40]	; 21dfc <yylex_destroy+0xb0>
   21dd0:	add	r0, pc, r0
   21dd4:	str	r5, [r0]
   21dd8:	bl	21e00 <yy_init_globals>
   21ddc:	mov	r0, #0
   21de0:	pop	{r4, r5, fp, pc}
   21de4:	.word	0x00043f88
   21de8:	.word	0x00043f74
   21dec:	.word	0x00043f60
   21df0:	.word	0x00043f50
   21df4:	.word	0x00043f44
   21df8:	.word	0x00043f34
   21dfc:	.word	0x00043f14

00021e00 <yy_init_globals>:
   21e00:	ldr	r0, [pc, #96]	; 21e68 <yy_init_globals+0x68>
   21e04:	add	r0, pc, r0
   21e08:	mov	r1, #0
   21e0c:	str	r1, [r0]
   21e10:	ldr	r0, [pc, #84]	; 21e6c <yy_init_globals+0x6c>
   21e14:	add	r0, pc, r0
   21e18:	str	r1, [r0]
   21e1c:	ldr	r0, [pc, #76]	; 21e70 <yy_init_globals+0x70>
   21e20:	add	r0, pc, r0
   21e24:	str	r1, [r0]
   21e28:	ldr	r0, [pc, #68]	; 21e74 <yy_init_globals+0x74>
   21e2c:	add	r0, pc, r0
   21e30:	str	r1, [r0]
   21e34:	ldr	r0, [pc, #60]	; 21e78 <yy_init_globals+0x78>
   21e38:	add	r0, pc, r0
   21e3c:	strb	r1, [r0]
   21e40:	ldr	r0, [pc, #52]	; 21e7c <yy_init_globals+0x7c>
   21e44:	add	r0, pc, r0
   21e48:	strb	r1, [r0]
   21e4c:	ldr	r0, [pc, #44]	; 21e80 <yy_init_globals+0x80>
   21e50:	ldr	r0, [pc, r0]
   21e54:	str	r1, [r0]
   21e58:	ldr	r0, [pc, #36]	; 21e84 <yy_init_globals+0x84>
   21e5c:	ldr	r0, [pc, r0]
   21e60:	str	r1, [r0]
   21e64:	bx	lr
   21e68:	.word	0x00043ee4
   21e6c:	.word	0x00043ed0
   21e70:	.word	0x00043ee8
   21e74:	.word	0x00043ec8
   21e78:	.word	0x00043ea4
   21e7c:	.word	0x00043e9c
   21e80:	.word	0x00038a78
   21e84:	.word	0x00038b3c

00021e88 <yyrealloc>:
   21e88:	b	d6d0 <realloc@plt>

00021e8c <input>:
   21e8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21e90:	add	fp, sp, #24
   21e94:	ldr	r5, [pc, #228]	; 21f80 <input+0xf4>
   21e98:	add	r5, pc, r5
   21e9c:	ldrb	r0, [r5]
   21ea0:	ldr	r4, [pc, #220]	; 21f84 <input+0xf8>
   21ea4:	ldr	r4, [pc, r4]
   21ea8:	strb	r0, [r4]
   21eac:	cmp	r0, #0
   21eb0:	bne	21f50 <input+0xc4>
   21eb4:	ldr	r0, [pc, #204]	; 21f88 <input+0xfc>
   21eb8:	ldr	r0, [pc, r0]
   21ebc:	ldr	r1, [pc, #200]	; 21f8c <input+0x100>
   21ec0:	ldr	r1, [pc, r1]
   21ec4:	ldr	r0, [r1, r0, lsl #2]
   21ec8:	ldr	r0, [r0, #4]
   21ecc:	ldr	r1, [pc, #188]	; 21f90 <input+0x104>
   21ed0:	ldr	r1, [pc, r1]
   21ed4:	add	r0, r0, r1
   21ed8:	cmp	r4, r0
   21edc:	bcs	21eec <input+0x60>
   21ee0:	mov	r0, #0
   21ee4:	strb	r0, [r4]
   21ee8:	b	21f50 <input+0xc4>
   21eec:	add	r0, r4, #1
   21ef0:	ldr	r8, [pc, #156]	; 21f94 <input+0x108>
   21ef4:	add	r8, pc, r8
   21ef8:	str	r0, [r8]
   21efc:	ldr	r7, [pc, #148]	; 21f98 <input+0x10c>
   21f00:	ldr	r7, [pc, r7]
   21f04:	ldr	r6, [r7]
   21f08:	bl	2129c <yy_get_next_buffer>
   21f0c:	cmp	r0, #0
   21f10:	beq	21f40 <input+0xb4>
   21f14:	mov	r4, #0
   21f18:	cmp	r0, #1
   21f1c:	beq	21f78 <input+0xec>
   21f20:	cmp	r0, #2
   21f24:	bne	21f50 <input+0xc4>
   21f28:	ldr	r0, [pc, #108]	; 21f9c <input+0x110>
   21f2c:	ldr	r0, [pc, r0]
   21f30:	ldr	r0, [r0]
   21f34:	bl	d028 <yyrestart@plt>
   21f38:	mov	r0, r4
   21f3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21f40:	sub	r0, r4, r6
   21f44:	ldr	r1, [r7]
   21f48:	add	r0, r1, r0
   21f4c:	str	r0, [r8]
   21f50:	ldr	r0, [pc, #72]	; 21fa0 <input+0x114>
   21f54:	ldr	r0, [pc, r0]
   21f58:	ldrb	r4, [r0]
   21f5c:	mov	r1, #0
   21f60:	strb	r1, [r0], #1
   21f64:	ldr	r1, [pc, #56]	; 21fa4 <input+0x118>
   21f68:	add	r1, pc, r1
   21f6c:	str	r0, [r1]
   21f70:	ldrb	r0, [r0]
   21f74:	strb	r0, [r5]
   21f78:	mov	r0, r4
   21f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21f80:	.word	0x00043e60
   21f84:	.word	0x00043e50
   21f88:	.word	0x00043e30
   21f8c:	.word	0x00043e24
   21f90:	.word	0x00043e34
   21f94:	.word	0x00043e00
   21f98:	.word	0x00038a0c
   21f9c:	.word	0x0003899c
   21fa0:	.word	0x00043da0
   21fa4:	.word	0x00043d8c

00021fa8 <yy_fatal_error>:
   21fa8:	push	{fp, lr}
   21fac:	mov	fp, sp
   21fb0:	ldr	r0, [pc, #32]	; 21fd8 <yy_fatal_error+0x30>
   21fb4:	ldr	r0, [pc, r0]
   21fb8:	ldr	r0, [r0]
   21fbc:	ldr	r1, [pc, #24]	; 21fdc <yy_fatal_error+0x34>
   21fc0:	add	r1, pc, r1
   21fc4:	ldr	r2, [pc, #20]	; 21fe0 <yy_fatal_error+0x38>
   21fc8:	add	r2, pc, r2
   21fcc:	bl	dd60 <fprintf@plt>
   21fd0:	mov	r0, #2
   21fd4:	bl	dc34 <exit@plt>
   21fd8:	.word	0x000389a4
   21fdc:	.word	0x0002170b
   21fe0:	.word	0x0002093e

00021fe4 <setup_signals>:
   21fe4:	push	{r4, r5, r6, sl, fp, lr}
   21fe8:	add	fp, sp, #16
   21fec:	sub	sp, sp, #272	; 0x110
   21ff0:	add	r4, sp, #144	; 0x90
   21ff4:	mov	r0, r4
   21ff8:	bl	e1ec <sigemptyset@plt>
   21ffc:	mov	r0, #0
   22000:	str	r0, [sp, #136]	; 0x88
   22004:	mov	r0, #1
   22008:	str	r0, [sp, #4]
   2200c:	add	r5, sp, #4
   22010:	add	r6, r5, #4
   22014:	mov	r0, r6
   22018:	bl	e1ec <sigemptyset@plt>
   2201c:	mov	r0, r6
   22020:	mov	r1, #13
   22024:	bl	dab4 <sigaddset@plt>
   22028:	mov	r0, r6
   2202c:	mov	r1, #14
   22030:	bl	dab4 <sigaddset@plt>
   22034:	mov	r0, r6
   22038:	mov	r1, #5
   2203c:	bl	dab4 <sigaddset@plt>
   22040:	mov	r0, r6
   22044:	mov	r1, #28
   22048:	bl	dab4 <sigaddset@plt>
   2204c:	mov	r0, #28
   22050:	mov	r1, r5
   22054:	mov	r2, #0
   22058:	bl	d898 <sigaction@plt>
   2205c:	mov	r0, #13
   22060:	mov	r1, r5
   22064:	mov	r2, #0
   22068:	bl	d898 <sigaction@plt>
   2206c:	mov	r0, #5
   22070:	mov	r1, r5
   22074:	mov	r2, #0
   22078:	bl	d898 <sigaction@plt>
   2207c:	ldr	r0, [pc, #376]	; 221fc <setup_signals+0x218>
   22080:	add	r0, pc, r0
   22084:	str	r0, [sp, #4]
   22088:	mov	r0, #14
   2208c:	mov	r1, r5
   22090:	mov	r2, #0
   22094:	bl	d898 <sigaction@plt>
   22098:	mov	r0, r4
   2209c:	mov	r1, #14
   220a0:	bl	dab4 <sigaddset@plt>
   220a4:	ldr	r0, [pc, #340]	; 22200 <setup_signals+0x21c>
   220a8:	add	r0, pc, r0
   220ac:	str	r0, [sp, #4]
   220b0:	mov	r0, r6
   220b4:	bl	e1ec <sigemptyset@plt>
   220b8:	mov	r0, r6
   220bc:	mov	r1, #1
   220c0:	bl	dab4 <sigaddset@plt>
   220c4:	mov	r0, #1
   220c8:	mov	r1, r5
   220cc:	mov	r2, #0
   220d0:	bl	d898 <sigaction@plt>
   220d4:	mov	r0, r4
   220d8:	mov	r1, #1
   220dc:	bl	dab4 <sigaddset@plt>
   220e0:	ldr	r0, [pc, #284]	; 22204 <setup_signals+0x220>
   220e4:	add	r0, pc, r0
   220e8:	str	r0, [sp, #4]
   220ec:	mov	r0, r6
   220f0:	mov	r1, #2
   220f4:	bl	dab4 <sigaddset@plt>
   220f8:	mov	r0, #2
   220fc:	mov	r1, r5
   22100:	mov	r2, #0
   22104:	bl	d898 <sigaction@plt>
   22108:	mov	r0, r4
   2210c:	mov	r1, #2
   22110:	bl	dab4 <sigaddset@plt>
   22114:	ldr	r0, [pc, #236]	; 22208 <setup_signals+0x224>
   22118:	add	r0, pc, r0
   2211c:	str	r0, [sp, #4]
   22120:	mov	r0, r6
   22124:	mov	r1, #15
   22128:	bl	dab4 <sigaddset@plt>
   2212c:	mov	r0, #15
   22130:	mov	r1, r5
   22134:	mov	r2, #0
   22138:	bl	d898 <sigaction@plt>
   2213c:	mov	r0, r4
   22140:	mov	r1, #15
   22144:	bl	dab4 <sigaddset@plt>
   22148:	ldr	r0, [pc, #188]	; 2220c <setup_signals+0x228>
   2214c:	add	r0, pc, r0
   22150:	str	r0, [sp, #4]
   22154:	mov	r0, r6
   22158:	mov	r1, #10
   2215c:	bl	dab4 <sigaddset@plt>
   22160:	mov	r0, #10
   22164:	mov	r1, r5
   22168:	mov	r2, #0
   2216c:	bl	d898 <sigaction@plt>
   22170:	mov	r0, r4
   22174:	mov	r1, #10
   22178:	bl	dab4 <sigaddset@plt>
   2217c:	ldr	r0, [pc, #140]	; 22210 <setup_signals+0x22c>
   22180:	add	r0, pc, r0
   22184:	str	r0, [sp, #4]
   22188:	mov	r0, r6
   2218c:	mov	r1, #12
   22190:	bl	dab4 <sigaddset@plt>
   22194:	mov	r0, #12
   22198:	mov	r1, r5
   2219c:	mov	r2, #0
   221a0:	bl	d898 <sigaction@plt>
   221a4:	mov	r0, r4
   221a8:	mov	r1, #12
   221ac:	bl	dab4 <sigaddset@plt>
   221b0:	ldr	r0, [pc, #92]	; 22214 <setup_signals+0x230>
   221b4:	add	r0, pc, r0
   221b8:	str	r0, [sp, #4]
   221bc:	mov	r0, r6
   221c0:	mov	r1, #17
   221c4:	bl	dab4 <sigaddset@plt>
   221c8:	mov	r0, #17
   221cc:	mov	r1, r5
   221d0:	mov	r2, #0
   221d4:	bl	d898 <sigaction@plt>
   221d8:	mov	r0, r4
   221dc:	mov	r1, #17
   221e0:	bl	dab4 <sigaddset@plt>
   221e4:	mov	r0, #1
   221e8:	mov	r1, r4
   221ec:	mov	r2, #0
   221f0:	bl	d2b0 <sigprocmask@plt>
   221f4:	sub	sp, fp, #16
   221f8:	pop	{r4, r5, r6, sl, fp, pc}
   221fc:	.word	0x00000190
   22200:	.word	0x0000016c
   22204:	.word	0x00000148
   22208:	.word	0x00000188
   2220c:	.word	0x0000016c
   22210:	.word	0x00000150
   22214:	.word	0x00000134

00022218 <dummy_handler>:
   22218:	bx	lr

0002221c <sighup_handler>:
   2221c:	ldr	r0, [pc, #12]	; 22230 <sighup_handler+0x14>
   22220:	ldr	r0, [pc, r0]
   22224:	mov	r1, #1
   22228:	str	r1, [r0]
   2222c:	bx	lr
   22230:	.word	0x00038948

00022234 <sigint_handler>:
   22234:	push	{fp, lr}
   22238:	mov	fp, sp
   2223c:	ldr	r0, [pc, #84]	; 22298 <sigint_handler+0x64>
   22240:	ldr	r0, [pc, r0]
   22244:	ldrb	r0, [r0]
   22248:	cmp	r0, #0
   2224c:	bne	22280 <sigint_handler+0x4c>
   22250:	ldr	r1, [pc, #68]	; 2229c <sigint_handler+0x68>
   22254:	add	r1, pc, r1
   22258:	mov	r0, #0
   2225c:	bl	e0b4 <ilog@plt>
   22260:	ldr	r0, [pc, #56]	; 222a0 <sigint_handler+0x6c>
   22264:	add	r0, pc, r0
   22268:	ldrb	r1, [r0]
   2226c:	cmp	r1, #0
   22270:	popne	{fp, pc}
   22274:	mov	r1, #1
   22278:	strb	r1, [r0]
   2227c:	bl	df58 <server_reboot@plt>
   22280:	ldr	r1, [pc, #28]	; 222a4 <sigint_handler+0x70>
   22284:	add	r1, pc, r1
   22288:	mov	r0, #0
   2228c:	bl	e0b4 <ilog@plt>
   22290:	mov	r0, #0
   22294:	bl	dc34 <exit@plt>
   22298:	.word	0x00038708
   2229c:	.word	0x00020820
   222a0:	.word	0x00043aa8
   222a4:	.word	0x000207d7

000222a8 <sigterm_handler>:
   222a8:	push	{fp, lr}
   222ac:	mov	fp, sp
   222b0:	ldr	r0, [pc, #4]	; 222bc <sigterm_handler+0x14>
   222b4:	add	r0, pc, r0
   222b8:	bl	dfac <ircd_shutdown@plt>
   222bc:	.word	0x000207dc

000222c0 <sigusr1_handler>:
   222c0:	ldr	r0, [pc, #12]	; 222d4 <sigusr1_handler+0x14>
   222c4:	ldr	r0, [pc, r0]
   222c8:	mov	r1, #1
   222cc:	str	r1, [r0]
   222d0:	bx	lr
   222d4:	.word	0x000387ec

000222d8 <sigusr2_handler>:
   222d8:	ldr	r0, [pc, #12]	; 222ec <sigusr2_handler+0x14>
   222dc:	ldr	r0, [pc, r0]
   222e0:	mov	r1, #1
   222e4:	str	r1, [r0]
   222e8:	bx	lr
   222ec:	.word	0x00038860

000222f0 <sigchld_handler>:
   222f0:	push	{r4, r5, r6, sl, fp, lr}
   222f4:	add	fp, sp, #16
   222f8:	sub	sp, sp, #8
   222fc:	bl	de38 <__errno_location@plt>
   22300:	mov	r4, r0
   22304:	ldr	r6, [r0]
   22308:	add	r5, sp, #4
   2230c:	mvn	r0, #0
   22310:	mov	r1, r5
   22314:	mov	r2, #1
   22318:	bl	d8ec <waitpid@plt>
   2231c:	cmp	r0, #0
   22320:	bgt	2230c <sigchld_handler+0x1c>
   22324:	str	r6, [r4]
   22328:	sub	sp, fp, #16
   2232c:	pop	{r4, r5, r6, sl, fp, pc}

00022330 <free_listener>:
   22330:	cmp	r0, #0
   22334:	bxeq	lr
   22338:	ldr	r2, [pc, #64]	; 22380 <free_listener+0x50>
   2233c:	ldr	r2, [pc, r2]
   22340:	cmp	r2, r0
   22344:	beq	2236c <free_listener+0x3c>
   22348:	cmp	r2, #0
   2234c:	beq	22368 <free_listener+0x38>
   22350:	mov	r1, r2
   22354:	ldr	r2, [r2]
   22358:	cmp	r2, r0
   2235c:	bne	22348 <free_listener+0x18>
   22360:	ldr	r2, [r0]
   22364:	str	r2, [r1]
   22368:	b	22388 <rb_free>
   2236c:	ldr	r1, [r0]
   22370:	ldr	r2, [pc, #12]	; 22384 <free_listener+0x54>
   22374:	add	r2, pc, r2
   22378:	str	r1, [r2]
   2237c:	b	22388 <rb_free>
   22380:	.word	0x000439d4
   22384:	.word	0x0004399c

00022388 <rb_free>:
   22388:	cmp	r0, #0
   2238c:	bxeq	lr
   22390:	b	d328 <free@plt>

00022394 <get_listener_name>:
   22394:	push	{r4, sl, fp, lr}
   22398:	add	fp, sp, #8
   2239c:	sub	sp, sp, #8
   223a0:	ldr	r4, [r0, #4]
   223a4:	bl	223f0 <get_listener_port>
   223a8:	str	r4, [sp]
   223ac:	str	r0, [sp, #4]
   223b0:	ldr	r0, [pc, #44]	; 223e4 <get_listener_name+0x50>
   223b4:	ldr	r0, [pc, r0]
   223b8:	add	r3, r0, #88	; 0x58
   223bc:	ldr	r4, [pc, #36]	; 223e8 <get_listener_name+0x54>
   223c0:	add	r4, pc, r4
   223c4:	ldr	r2, [pc, #32]	; 223ec <get_listener_name+0x58>
   223c8:	add	r2, pc, r2
   223cc:	mov	r0, r4
   223d0:	mov	r1, #512	; 0x200
   223d4:	bl	de74 <snprintf@plt>
   223d8:	mov	r0, r4
   223dc:	sub	sp, fp, #8
   223e0:	pop	{r4, sl, fp, pc}
   223e4:	.word	0x000387a4
   223e8:	.word	0x00043954
   223ec:	.word	0x000206d9

000223f0 <get_listener_port>:
   223f0:	ldrh	r0, [r0, #38]	; 0x26
   223f4:	b	226e0 <__bswap_16>

000223f8 <show_ports>:
   223f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223fc:	add	fp, sp, #28
   22400:	sub	sp, sp, #28
   22404:	ldr	r5, [pc, #296]	; 22534 <show_ports+0x13c>
   22408:	ldr	r5, [pc, r5]
   2240c:	cmp	r5, #0
   22410:	beq	2252c <show_ports+0x134>
   22414:	mov	r9, r0
   22418:	ldr	r0, [pc, #280]	; 22538 <show_ports+0x140>
   2241c:	ldr	r0, [pc, r0]
   22420:	add	r8, r0, #88	; 0x58
   22424:	ldr	sl, [pc, #272]	; 2253c <show_ports+0x144>
   22428:	add	sl, pc, sl
   2242c:	mov	r0, r5
   22430:	bl	223f0 <get_listener_port>
   22434:	mov	r7, r0
   22438:	ldr	r0, [r9, #24]
   2243c:	cmp	r0, #0
   22440:	mov	r1, r8
   22444:	beq	224a8 <show_ports+0xb0>
   22448:	ldr	r0, [r0, #36]	; 0x24
   2244c:	cmp	r0, #0
   22450:	beq	22470 <show_ports+0x78>
   22454:	ldr	r1, [pc, #228]	; 22540 <show_ports+0x148>
   22458:	add	r1, pc, r1
   2245c:	bl	e594 <privilegeset_in_set@plt>
   22460:	cmp	r0, #0
   22464:	beq	22470 <show_ports+0x78>
   22468:	ldr	r1, [r5, #4]
   2246c:	b	224a8 <show_ports+0xb0>
   22470:	ldr	r0, [r9, #24]
   22474:	cmp	r0, #0
   22478:	mov	r1, r8
   2247c:	beq	224a8 <show_ports+0xb0>
   22480:	ldr	r0, [r0, #36]	; 0x24
   22484:	cmp	r0, #0
   22488:	mov	r1, r8
   2248c:	beq	224a8 <show_ports+0xb0>
   22490:	ldr	r1, [pc, #172]	; 22544 <show_ports+0x14c>
   22494:	add	r1, pc, r1
   22498:	bl	e594 <privilegeset_in_set@plt>
   2249c:	cmp	r0, #0
   224a0:	mov	r1, r8
   224a4:	ldrne	r1, [r5, #4]
   224a8:	ldrb	r0, [r5, #28]
   224ac:	add	r6, r5, #12
   224b0:	ldm	r6, {r2, r3, r6}
   224b4:	cmp	r6, #0
   224b8:	ldr	r6, [pc, #136]	; 22548 <show_ports+0x150>
   224bc:	add	r6, pc, r6
   224c0:	ldr	r4, [pc, #132]	; 2254c <show_ports+0x154>
   224c4:	add	r4, pc, r4
   224c8:	moveq	r6, r4
   224cc:	cmp	r0, #0
   224d0:	ldr	r0, [pc, #120]	; 22550 <show_ports+0x158>
   224d4:	add	r0, pc, r0
   224d8:	ldr	r4, [pc, #116]	; 22554 <show_ports+0x15c>
   224dc:	add	r4, pc, r4
   224e0:	moveq	r0, r4
   224e4:	cmp	r3, #0
   224e8:	ldr	r3, [pc, #104]	; 22558 <show_ports+0x160>
   224ec:	add	r3, pc, r3
   224f0:	ldr	r4, [pc, #100]	; 2255c <show_ports+0x164>
   224f4:	add	r4, pc, r4
   224f8:	moveq	r3, r4
   224fc:	str	r7, [sp]
   22500:	stmib	sp, {r1, r2, r3}
   22504:	str	r0, [sp, #16]
   22508:	str	r6, [sp, #20]
   2250c:	mov	r0, r9
   22510:	mov	r1, #220	; 0xdc
   22514:	mov	r2, sl
   22518:	mov	r3, #80	; 0x50
   2251c:	bl	dc88 <sendto_one_numeric@plt>
   22520:	ldr	r5, [r5]
   22524:	cmp	r5, #0
   22528:	bne	2242c <show_ports+0x34>
   2252c:	sub	sp, fp, #28
   22530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22534:	.word	0x00043908
   22538:	.word	0x0003873c
   2253c:	.word	0x00020683
   22540:	.word	0x0001e877
   22544:	.word	0x0001e846
   22548:	.word	0x00020615
   2254c:	.word	0x00023341
   22550:	.word	0x000205f2
   22554:	.word	0x000205f0
   22558:	.word	0x000205d3
   2255c:	.word	0x00022421

00022560 <add_tcp_listener>:
   22560:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22564:	add	fp, sp, #24
   22568:	sub	sp, sp, #256	; 0x100
   2256c:	cmp	r0, #0
   22570:	beq	2265c <add_tcp_listener+0xfc>
   22574:	mov	r8, r3
   22578:	mov	r6, r2
   2257c:	mov	r7, r1
   22580:	mov	r5, r0
   22584:	mov	r4, sp
   22588:	mov	r0, r4
   2258c:	mov	r1, #0
   22590:	mov	r2, #256	; 0x100
   22594:	bl	df28 <memset@plt>
   22598:	cmp	r7, #0
   2259c:	beq	225c8 <add_tcp_listener+0x68>
   225a0:	cmp	r6, #2
   225a4:	bne	225e8 <add_tcp_listener+0x88>
   225a8:	orr	r2, r4, #4
   225ac:	mov	r0, r6
   225b0:	mov	r1, r7
   225b4:	bl	d820 <rb_inet_pton@plt>
   225b8:	mov	r1, #2
   225bc:	cmp	r0, #1
   225c0:	bge	22628 <add_tcp_listener+0xc8>
   225c4:	b	2265c <add_tcp_listener+0xfc>
   225c8:	cmp	r6, #10
   225cc:	beq	22610 <add_tcp_listener+0xb0>
   225d0:	cmp	r6, #2
   225d4:	bne	2265c <add_tcp_listener+0xfc>
   225d8:	mov	r0, #0
   225dc:	str	r0, [sp, #4]
   225e0:	mov	r1, #2
   225e4:	b	22628 <add_tcp_listener+0xc8>
   225e8:	add	r2, r4, #8
   225ec:	mov	r0, r6
   225f0:	mov	r1, r7
   225f4:	bl	d820 <rb_inet_pton@plt>
   225f8:	cmp	r0, #1
   225fc:	blt	2265c <add_tcp_listener+0xfc>
   22600:	mov	r1, #10
   22604:	cmp	r6, #10
   22608:	beq	22628 <add_tcp_listener+0xc8>
   2260c:	b	22638 <add_tcp_listener+0xd8>
   22610:	ldr	r0, [pc, #188]	; 226d4 <add_tcp_listener+0x174>
   22614:	ldr	r0, [pc, r0]
   22618:	vld1.32	{d16-d17}, [r0]
   2261c:	add	r0, r4, #8
   22620:	vst1.64	{d16-d17}, [r0]
   22624:	mov	r1, #10
   22628:	strh	r1, [sp]
   2262c:	uxth	r0, r5
   22630:	bl	226e0 <__bswap_16>
   22634:	strh	r0, [sp, #2]
   22638:	mov	r0, sp
   2263c:	mov	r1, #0
   22640:	bl	226e8 <find_listener>
   22644:	cmp	r0, #0
   22648:	beq	22664 <add_tcp_listener+0x104>
   2264c:	mov	r5, r0
   22650:	ldr	r0, [r0, #8]
   22654:	cmp	r0, #0
   22658:	beq	22688 <add_tcp_listener+0x128>
   2265c:	sub	sp, fp, #24
   22660:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22664:	mov	r0, sp
   22668:	bl	227d8 <make_listener>
   2266c:	mov	r5, r0
   22670:	ldr	r0, [pc, #96]	; 226d8 <add_tcp_listener+0x178>
   22674:	ldr	r0, [pc, r0]
   22678:	str	r0, [r5]
   2267c:	ldr	r0, [pc, #88]	; 226dc <add_tcp_listener+0x17c>
   22680:	add	r0, pc, r0
   22684:	str	r5, [r0]
   22688:	ldr	r0, [fp, #12]
   2268c:	ldr	r1, [fp, #8]
   22690:	mov	r2, #0
   22694:	str	r2, [r5, #8]
   22698:	str	r8, [r5, #20]
   2269c:	str	r1, [r5, #24]
   226a0:	strb	r2, [r5, #28]
   226a4:	str	r0, [r5, #32]
   226a8:	mov	r0, r5
   226ac:	bl	22820 <inetport>
   226b0:	cmp	r0, #0
   226b4:	movne	r0, #1
   226b8:	strne	r0, [r5, #16]
   226bc:	subne	sp, fp, #24
   226c0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   226c4:	mov	r0, r5
   226c8:	bl	e120 <close_listener@plt>
   226cc:	sub	sp, fp, #24
   226d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   226d4:	.word	0x000384d8
   226d8:	.word	0x0004369c
   226dc:	.word	0x00043690

000226e0 <__bswap_16>:
   226e0:	rev16	r0, r0
   226e4:	bx	lr

000226e8 <find_listener>:
   226e8:	push	{r4, r5, r6, r7, fp, lr}
   226ec:	add	fp, sp, #16
   226f0:	ldr	lr, [pc, #220]	; 227d4 <find_listener+0xec>
   226f4:	ldr	lr, [pc, lr]
   226f8:	mov	ip, #0
   226fc:	cmp	lr, #0
   22700:	bne	22718 <find_listener+0x30>
   22704:	mov	r0, ip
   22708:	pop	{r4, r5, r6, r7, fp, pc}
   2270c:	ldr	lr, [lr]
   22710:	cmp	lr, #0
   22714:	beq	22704 <find_listener+0x1c>
   22718:	ldrb	r2, [lr, #28]
   2271c:	cmp	r2, r1
   22720:	bne	2270c <find_listener+0x24>
   22724:	mov	r2, #0
   22728:	mov	r3, #0
   2272c:	add	r4, r0, r2
   22730:	ldrh	r6, [r4]
   22734:	add	r5, lr, r2
   22738:	ldrh	r7, [r5, #36]	; 0x24
   2273c:	cmp	r6, r7
   22740:	bne	2270c <find_listener+0x24>
   22744:	cmp	r6, #10
   22748:	beq	22760 <find_listener+0x78>
   2274c:	cmp	r6, #2
   22750:	bne	227a8 <find_listener+0xc0>
   22754:	ldr	r6, [r5, #40]	; 0x28
   22758:	ldr	r7, [r4, #4]
   2275c:	b	22794 <find_listener+0xac>
   22760:	ldr	r6, [r5, #44]	; 0x2c
   22764:	ldr	r7, [r4, #8]
   22768:	cmp	r7, r6
   2276c:	bne	2270c <find_listener+0x24>
   22770:	ldr	r6, [r5, #48]	; 0x30
   22774:	ldr	r7, [r4, #12]
   22778:	cmp	r7, r6
   2277c:	ldreq	r6, [r5, #52]	; 0x34
   22780:	ldreq	r7, [r4, #16]
   22784:	cmpeq	r7, r6
   22788:	bne	2270c <find_listener+0x24>
   2278c:	ldr	r6, [r5, #56]	; 0x38
   22790:	ldr	r7, [r4, #20]
   22794:	cmp	r7, r6
   22798:	ldrheq	r5, [r5, #38]	; 0x26
   2279c:	ldrheq	r4, [r4, #2]
   227a0:	cmpeq	r4, r5
   227a4:	bne	2270c <find_listener+0x24>
   227a8:	add	r2, r2, #128	; 0x80
   227ac:	add	r3, r3, #1
   227b0:	cmp	r3, #2
   227b4:	bcc	2272c <find_listener+0x44>
   227b8:	ldr	r2, [lr, #8]
   227bc:	cmp	r2, #0
   227c0:	mov	ip, lr
   227c4:	beq	2270c <find_listener+0x24>
   227c8:	mov	ip, lr
   227cc:	mov	r0, ip
   227d0:	pop	{r4, r5, r6, r7, fp, pc}
   227d4:	.word	0x0004361c

000227d8 <make_listener>:
   227d8:	push	{r4, r5, r6, sl, fp, lr}
   227dc:	add	fp, sp, #16
   227e0:	mov	r4, r0
   227e4:	bl	22e04 <rb_malloc>
   227e8:	mov	r5, r0
   227ec:	mov	r6, #0
   227f0:	ldr	r0, [pc, #36]	; 2281c <make_listener+0x44>
   227f4:	ldr	r0, [pc, r0]
   227f8:	add	r0, r0, #88	; 0x58
   227fc:	stmib	r5, {r0, r6}
   22800:	add	r0, r5, #36	; 0x24
   22804:	mov	r1, r4
   22808:	mov	r2, #256	; 0x100
   2280c:	bl	d40c <memcpy@plt>
   22810:	str	r6, [r5]
   22814:	mov	r0, r5
   22818:	pop	{r4, r5, r6, sl, fp, pc}
   2281c:	.word	0x00038364

00022820 <inetport>:
   22820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22824:	add	fp, sp, #28
   22828:	sub	sp, sp, #12
   2282c:	mov	r4, r0
   22830:	ldrb	r0, [r0, #28]
   22834:	mov	r8, #0
   22838:	cmp	r0, #0
   2283c:	bne	2285c <inetport+0x3c>
   22840:	ldrh	r0, [r4, #36]	; 0x24
   22844:	ldr	r3, [pc, #808]	; 22b74 <inetport+0x354>
   22848:	add	r3, pc, r3
   2284c:	mov	r1, #1
   22850:	mov	r2, #6
   22854:	bl	d5e0 <rb_socket@plt>
   22858:	mov	r8, r0
   2285c:	mov	r6, r4
   22860:	ldrh	r0, [r6, #36]!	; 0x24
   22864:	movw	r1, #367	; 0x16f
   22868:	vmov.i32	q8, #0	; 0x00000000
   2286c:	add	r1, r6, r1
   22870:	vst1.8	{d16-d17}, [r1]
   22874:	add	r1, r6, #352	; 0x160
   22878:	vst1.32	{d16-d17}, [r1]
   2287c:	add	r1, r6, #336	; 0x150
   22880:	vst1.32	{d16-d17}, [r1]
   22884:	add	r1, r6, #320	; 0x140
   22888:	vst1.32	{d16-d17}, [r1]
   2288c:	add	r1, r6, #304	; 0x130
   22890:	vst1.32	{d16-d17}, [r1]
   22894:	add	r1, r6, #288	; 0x120
   22898:	vst1.32	{d16-d17}, [r1]
   2289c:	add	r1, r6, #272	; 0x110
   228a0:	vst1.32	{d16-d17}, [r1]
   228a4:	add	r7, r6, #256	; 0x100
   228a8:	vst1.32	{d16-d17}, [r7]
   228ac:	cmp	r0, #2
   228b0:	beq	228c8 <inetport+0xa8>
   228b4:	cmp	r0, #10
   228b8:	bne	228dc <inetport+0xbc>
   228bc:	add	r1, r4, #44	; 0x2c
   228c0:	mov	r0, #10
   228c4:	b	228d0 <inetport+0xb0>
   228c8:	add	r1, r4, #40	; 0x28
   228cc:	mov	r0, #2
   228d0:	mov	r2, r7
   228d4:	mov	r3, #127	; 0x7f
   228d8:	bl	d1b4 <rb_inet_ntop@plt>
   228dc:	ldrh	r0, [r4, #164]	; 0xa4
   228e0:	cmp	r0, #2
   228e4:	beq	22924 <inetport+0x104>
   228e8:	cmp	r0, #10
   228ec:	bne	22958 <inetport+0x138>
   228f0:	mov	r0, r7
   228f4:	bl	dc94 <strlen@plt>
   228f8:	add	r5, r4, #292	; 0x124
   228fc:	add	r0, r5, r0
   22900:	mov	r1, #38	; 0x26
   22904:	strh	r1, [r0]
   22908:	mov	r0, r7
   2290c:	bl	dc94 <strlen@plt>
   22910:	add	r2, r5, r0
   22914:	add	r1, r4, #172	; 0xac
   22918:	rsb	r3, r0, #127	; 0x7f
   2291c:	mov	r0, #10
   22920:	b	22954 <inetport+0x134>
   22924:	mov	r0, r7
   22928:	bl	dc94 <strlen@plt>
   2292c:	add	r5, r4, #292	; 0x124
   22930:	add	r0, r5, r0
   22934:	mov	r1, #38	; 0x26
   22938:	strh	r1, [r0]
   2293c:	mov	r0, r7
   22940:	bl	dc94 <strlen@plt>
   22944:	add	r2, r5, r0
   22948:	add	r1, r4, #168	; 0xa8
   2294c:	rsb	r3, r0, #127	; 0x7f
   22950:	mov	r0, #2
   22954:	bl	d1b4 <rb_inet_ntop@plt>
   22958:	ldrb	r0, [r7]
   2295c:	cmp	r0, #0
   22960:	strne	r7, [r4, #4]
   22964:	ldrb	r7, [r4, #28]
   22968:	cmp	r8, #0
   2296c:	beq	22a18 <inetport+0x1f8>
   22970:	mov	r0, r8
   22974:	mov	r1, r6
   22978:	cmp	r7, #0
   2297c:	beq	22a8c <inetport+0x26c>
   22980:	mov	r2, #2
   22984:	bl	d7e4 <rb_sctp_bindx@plt>
   22988:	cmp	r0, #0
   2298c:	beq	22a98 <inetport+0x278>
   22990:	mov	r0, r8
   22994:	bl	e4bc <rb_get_sockerr@plt>
   22998:	bl	dacc <strerror@plt>
   2299c:	mov	r7, r0
   229a0:	ldrb	r6, [r4, #28]
   229a4:	mov	r0, r4
   229a8:	bl	223f0 <get_listener_port>
   229ac:	stm	sp, {r0, r7}
   229b0:	ldr	r9, [pc, #468]	; 22b8c <inetport+0x36c>
   229b4:	add	r9, pc, r9
   229b8:	ldr	r5, [pc, #464]	; 22b90 <inetport+0x370>
   229bc:	add	r5, pc, r5
   229c0:	cmp	r6, #0
   229c4:	mov	r3, r5
   229c8:	moveq	r3, r9
   229cc:	mov	sl, #0
   229d0:	ldr	r2, [pc, #444]	; 22b94 <inetport+0x374>
   229d4:	add	r2, pc, r2
   229d8:	mov	r0, #256	; 0x100
   229dc:	mov	r1, #0
   229e0:	bl	d640 <sendto_realops_snomask@plt>
   229e4:	ldrb	r6, [r4, #28]
   229e8:	mov	r0, r4
   229ec:	bl	d550 <get_listener_name@plt>
   229f0:	str	r7, [sp]
   229f4:	cmp	r6, #0
   229f8:	moveq	r5, r9
   229fc:	ldr	r1, [pc, #404]	; 22b98 <inetport+0x378>
   22a00:	add	r1, pc, r1
   22a04:	ldr	r3, [pc, #400]	; 22b9c <inetport+0x37c>
   22a08:	add	r3, pc, r3
   22a0c:	mov	r0, #0
   22a10:	mov	r2, r5
   22a14:	b	22b34 <inetport+0x314>
   22a18:	mov	r0, r4
   22a1c:	bl	223f0 <get_listener_port>
   22a20:	str	r0, [sp]
   22a24:	ldr	r8, [pc, #332]	; 22b78 <inetport+0x358>
   22a28:	add	r8, pc, r8
   22a2c:	ldr	r5, [pc, #328]	; 22b7c <inetport+0x35c>
   22a30:	add	r5, pc, r5
   22a34:	cmp	r7, #0
   22a38:	mov	r3, r5
   22a3c:	movne	r3, r8
   22a40:	mov	sl, #0
   22a44:	ldr	r2, [pc, #308]	; 22b80 <inetport+0x360>
   22a48:	add	r2, pc, r2
   22a4c:	mov	r0, #256	; 0x100
   22a50:	mov	r1, #0
   22a54:	bl	d640 <sendto_realops_snomask@plt>
   22a58:	ldrb	r7, [r4, #28]
   22a5c:	mov	r0, r4
   22a60:	bl	d550 <get_listener_name@plt>
   22a64:	cmp	r7, #0
   22a68:	movne	r5, r8
   22a6c:	ldr	r1, [pc, #272]	; 22b84 <inetport+0x364>
   22a70:	add	r1, pc, r1
   22a74:	ldr	r3, [pc, #268]	; 22b88 <inetport+0x368>
   22a78:	add	r3, pc, r3
   22a7c:	mov	r0, #0
   22a80:	mov	r2, r5
   22a84:	bl	e0b4 <ilog@plt>
   22a88:	b	22b40 <inetport+0x320>
   22a8c:	bl	e57c <rb_bind@plt>
   22a90:	cmp	r0, #0
   22a94:	bne	22990 <inetport+0x170>
   22a98:	ldr	r2, [r4, #24]
   22a9c:	mov	r0, r8
   22aa0:	mov	r1, #128	; 0x80
   22aa4:	bl	cfe0 <rb_listen@plt>
   22aa8:	cmp	r0, #0
   22aac:	beq	22b4c <inetport+0x32c>
   22ab0:	mov	r0, r8
   22ab4:	bl	e4bc <rb_get_sockerr@plt>
   22ab8:	bl	dacc <strerror@plt>
   22abc:	mov	r5, r0
   22ac0:	ldrb	r6, [r4, #28]
   22ac4:	mov	r0, r4
   22ac8:	bl	223f0 <get_listener_port>
   22acc:	stm	sp, {r0, r5}
   22ad0:	ldr	r9, [pc, #200]	; 22ba0 <inetport+0x380>
   22ad4:	add	r9, pc, r9
   22ad8:	ldr	r7, [pc, #196]	; 22ba4 <inetport+0x384>
   22adc:	add	r7, pc, r7
   22ae0:	cmp	r6, #0
   22ae4:	mov	r3, r7
   22ae8:	moveq	r3, r9
   22aec:	mov	sl, #0
   22af0:	ldr	r2, [pc, #176]	; 22ba8 <inetport+0x388>
   22af4:	add	r2, pc, r2
   22af8:	mov	r0, #256	; 0x100
   22afc:	mov	r1, #0
   22b00:	bl	d640 <sendto_realops_snomask@plt>
   22b04:	ldrb	r6, [r4, #28]
   22b08:	mov	r0, r4
   22b0c:	bl	d550 <get_listener_name@plt>
   22b10:	str	r5, [sp]
   22b14:	cmp	r6, #0
   22b18:	moveq	r7, r9
   22b1c:	ldr	r1, [pc, #136]	; 22bac <inetport+0x38c>
   22b20:	add	r1, pc, r1
   22b24:	ldr	r3, [pc, #132]	; 22bb0 <inetport+0x390>
   22b28:	add	r3, pc, r3
   22b2c:	mov	r0, #0
   22b30:	mov	r2, r7
   22b34:	bl	e0b4 <ilog@plt>
   22b38:	mov	r0, r8
   22b3c:	bl	db5c <rb_close@plt>
   22b40:	mov	r0, sl
   22b44:	sub	sp, fp, #28
   22b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b4c:	str	r8, [r4, #8]
   22b50:	ldr	r1, [pc, #92]	; 22bb4 <inetport+0x394>
   22b54:	add	r1, pc, r1
   22b58:	ldr	r2, [pc, #88]	; 22bb8 <inetport+0x398>
   22b5c:	add	r2, pc, r2
   22b60:	mov	r0, r8
   22b64:	mov	r3, r4
   22b68:	bl	dc10 <rb_accept_tcp@plt>
   22b6c:	mov	sl, #1
   22b70:	b	22b40 <inetport+0x320>
   22b74:	.word	0x0002028e
   22b78:	.word	0x000200ec
   22b7c:	.word	0x000200e9
   22b80:	.word	0x0002009e
   22b84:	.word	0x000200ad
   22b88:	.word	0x0004329c
   22b8c:	.word	0x00020165
   22b90:	.word	0x00020158
   22b94:	.word	0x0002016f
   22b98:	.word	0x0002016e
   22b9c:	.word	0x0004330c
   22ba0:	.word	0x00020045
   22ba4:	.word	0x00020038
   22ba8:	.word	0x0002009d
   22bac:	.word	0x000200a0
   22bb0:	.word	0x000431ec
   22bb4:	.word	0x000002c8
   22bb8:	.word	0x000004fc

00022bbc <close_listener>:
   22bbc:	push	{r4, sl, fp, lr}
   22bc0:	add	fp, sp, #8
   22bc4:	cmp	r0, #0
   22bc8:	popeq	{r4, sl, fp, pc}
   22bcc:	mov	r4, r0
   22bd0:	ldr	r0, [r0, #8]
   22bd4:	cmp	r0, #0
   22bd8:	beq	22be8 <close_listener+0x2c>
   22bdc:	bl	db5c <rb_close@plt>
   22be0:	mov	r0, #0
   22be4:	str	r0, [r4, #8]
   22be8:	mov	r0, #0
   22bec:	str	r0, [r4, #16]
   22bf0:	ldr	r0, [r4, #12]
   22bf4:	cmp	r0, #0
   22bf8:	beq	22c00 <close_listener+0x44>
   22bfc:	pop	{r4, sl, fp, pc}
   22c00:	mov	r0, r4
   22c04:	pop	{r4, sl, fp, lr}
   22c08:	b	22330 <free_listener>

00022c0c <add_sctp_listener>:
   22c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c10:	add	fp, sp, #28
   22c14:	sub	sp, sp, #388	; 0x184
   22c18:	cmp	r0, #0
   22c1c:	beq	22d50 <add_sctp_listener+0x144>
   22c20:	mov	r9, r3
   22c24:	mov	r6, r2
   22c28:	mov	r7, r1
   22c2c:	mov	r5, r0
   22c30:	add	sl, sp, #128	; 0x80
   22c34:	add	r4, sp, #128	; 0x80
   22c38:	mov	r8, #0
   22c3c:	mov	r0, r4
   22c40:	mov	r1, #0
   22c44:	mov	r2, #256	; 0x100
   22c48:	bl	df28 <memset@plt>
   22c4c:	cmp	r7, #0
   22c50:	beq	22c8c <add_sctp_listener+0x80>
   22c54:	add	r8, sp, #128	; 0x80
   22c58:	mov	r0, r7
   22c5c:	mov	r1, r8
   22c60:	bl	e000 <rb_inet_pton_sock@plt>
   22c64:	cmp	r0, #1
   22c68:	blt	22d50 <add_sctp_listener+0x144>
   22c6c:	cmp	r6, #0
   22c70:	beq	22cb4 <add_sctp_listener+0xa8>
   22c74:	add	r1, r8, #128	; 0x80
   22c78:	mov	r0, r6
   22c7c:	bl	e000 <rb_inet_pton_sock@plt>
   22c80:	cmp	r0, #1
   22c84:	bge	22cc0 <add_sctp_listener+0xb4>
   22c88:	b	22d50 <add_sctp_listener+0x144>
   22c8c:	ldr	r0, [pc, #304]	; 22dc4 <add_sctp_listener+0x1b8>
   22c90:	ldr	r0, [pc, r0]
   22c94:	vld1.32	{d16-d17}, [r0]
   22c98:	add	r0, r4, #8
   22c9c:	vst1.64	{d16-d17}, [r0]
   22ca0:	mov	r0, #10
   22ca4:	strh	r0, [sl]
   22ca8:	add	lr, sp, #256	; 0x100
   22cac:	strh	r8, [lr]
   22cb0:	b	22d18 <add_sctp_listener+0x10c>
   22cb4:	mov	r0, #0
   22cb8:	add	lr, sp, #256	; 0x100
   22cbc:	strh	r0, [lr]
   22cc0:	ldrh	r0, [sl]
   22cc4:	cmp	r0, #2
   22cc8:	bne	22d18 <add_sctp_listener+0x10c>
   22ccc:	add	lr, sp, #256	; 0x100
   22cd0:	ldrh	r0, [lr]
   22cd4:	cmp	r0, #10
   22cd8:	bne	22d18 <add_sctp_listener+0x10c>
   22cdc:	add	r4, r8, #128	; 0x80
   22ce0:	mov	r6, sp
   22ce4:	add	r7, sp, #128	; 0x80
   22ce8:	mov	r0, r6
   22cec:	mov	r1, r7
   22cf0:	mov	r2, #128	; 0x80
   22cf4:	bl	d40c <memcpy@plt>
   22cf8:	mov	r0, r7
   22cfc:	mov	r1, r4
   22d00:	mov	r2, #128	; 0x80
   22d04:	bl	d40c <memcpy@plt>
   22d08:	mov	r0, r4
   22d0c:	mov	r1, r6
   22d10:	mov	r2, #128	; 0x80
   22d14:	bl	d40c <memcpy@plt>
   22d18:	uxth	r0, r5
   22d1c:	bl	226e0 <__bswap_16>
   22d20:	strh	r0, [sl, #2]
   22d24:	add	lr, sp, #256	; 0x100
   22d28:	strh	r0, [lr, #2]
   22d2c:	add	r0, sp, #128	; 0x80
   22d30:	mov	r1, #1
   22d34:	bl	226e8 <find_listener>
   22d38:	cmp	r0, #0
   22d3c:	beq	22d58 <add_sctp_listener+0x14c>
   22d40:	mov	r5, r0
   22d44:	ldr	r0, [r0, #8]
   22d48:	cmp	r0, #0
   22d4c:	beq	22d7c <add_sctp_listener+0x170>
   22d50:	sub	sp, fp, #28
   22d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d58:	add	r0, sp, #128	; 0x80
   22d5c:	bl	227d8 <make_listener>
   22d60:	mov	r5, r0
   22d64:	ldr	r0, [pc, #92]	; 22dc8 <add_sctp_listener+0x1bc>
   22d68:	ldr	r0, [pc, r0]
   22d6c:	str	r0, [r5]
   22d70:	ldr	r0, [pc, #84]	; 22dcc <add_sctp_listener+0x1c0>
   22d74:	add	r0, pc, r0
   22d78:	str	r5, [r0]
   22d7c:	ldr	r0, [fp, #8]
   22d80:	mov	r1, #0
   22d84:	str	r1, [r5, #8]
   22d88:	str	r9, [r5, #20]
   22d8c:	str	r1, [r5, #24]
   22d90:	mov	r4, #1
   22d94:	strb	r4, [r5, #28]
   22d98:	str	r0, [r5, #32]
   22d9c:	mov	r0, r5
   22da0:	bl	22820 <inetport>
   22da4:	cmp	r0, #0
   22da8:	strne	r4, [r5, #16]
   22dac:	subne	sp, fp, #28
   22db0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22db4:	mov	r0, r5
   22db8:	bl	e120 <close_listener@plt>
   22dbc:	sub	sp, fp, #28
   22dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dc4:	.word	0x00037e5c
   22dc8:	.word	0x00042fa8
   22dcc:	.word	0x00042f9c

00022dd0 <close_listeners>:
   22dd0:	push	{r4, sl, fp, lr}
   22dd4:	add	fp, sp, #8
   22dd8:	ldr	r0, [pc, #32]	; 22e00 <close_listeners+0x30>
   22ddc:	ldr	r0, [pc, r0]
   22de0:	cmp	r0, #0
   22de4:	popeq	{r4, sl, fp, pc}
   22de8:	ldr	r4, [r0]
   22dec:	bl	e120 <close_listener@plt>
   22df0:	cmp	r4, #0
   22df4:	mov	r0, r4
   22df8:	bne	22de8 <close_listeners+0x18>
   22dfc:	pop	{r4, sl, fp, pc}
   22e00:	.word	0x00042f34

00022e04 <rb_malloc>:
   22e04:	push	{fp, lr}
   22e08:	mov	fp, sp
   22e0c:	mov	r0, #1
   22e10:	mov	r1, #420	; 0x1a4
   22e14:	bl	cfa4 <calloc@plt>
   22e18:	cmp	r0, #0
   22e1c:	popne	{fp, pc}
   22e20:	bl	d448 <rb_outofmemory@plt>

00022e24 <accept_precallback>:
   22e24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22e28:	add	fp, sp, #24
   22e2c:	sub	sp, sp, #512	; 0x200
   22e30:	mov	r6, r3
   22e34:	mov	r5, r1
   22e38:	mov	r4, r0
   22e3c:	ldr	r0, [r3, #20]
   22e40:	cmp	r0, #0
   22e44:	beq	22e68 <accept_precallback+0x44>
   22e48:	ldr	r0, [pc, #476]	; 2302c <accept_precallback+0x208>
   22e4c:	ldr	r0, [pc, r0]
   22e50:	ldrb	r0, [r0]
   22e54:	cmp	r0, #0
   22e58:	beq	2300c <accept_precallback+0x1e8>
   22e5c:	bl	deb0 <get_ssld_count@plt>
   22e60:	cmp	r0, #0
   22e64:	beq	2300c <accept_precallback+0x1e8>
   22e68:	ldr	r0, [pc, #448]	; 23030 <accept_precallback+0x20c>
   22e6c:	ldr	r0, [pc, r0]
   22e70:	ldr	r0, [r0]
   22e74:	sub	r7, r0, #10
   22e78:	mov	r0, r4
   22e7c:	bl	db98 <rb_get_fd@plt>
   22e80:	cmp	r7, r0
   22e84:	bge	22efc <accept_precallback+0xd8>
   22e88:	ldr	r0, [pc, #420]	; 23034 <accept_precallback+0x210>
   22e8c:	ldr	r0, [pc, r0]
   22e90:	ldr	r1, [r0, #68]	; 0x44
   22e94:	add	r1, r1, #1
   22e98:	str	r1, [r0, #68]	; 0x44
   22e9c:	ldr	r0, [pc, #404]	; 23038 <accept_precallback+0x214>
   22ea0:	ldr	r0, [pc, r0]
   22ea4:	add	r5, r0, #20
   22ea8:	bl	d07c <rb_current_time@plt>
   22eac:	cmp	r5, r0
   22eb0:	bgt	22ee8 <accept_precallback+0xc4>
   22eb4:	mov	r0, r6
   22eb8:	bl	d550 <get_listener_name@plt>
   22ebc:	ldr	r2, [pc, #376]	; 2303c <accept_precallback+0x218>
   22ec0:	add	r2, pc, r2
   22ec4:	ldr	r3, [pc, #372]	; 23040 <accept_precallback+0x21c>
   22ec8:	add	r3, pc, r3
   22ecc:	mov	r0, #256	; 0x100
   22ed0:	mov	r1, #0
   22ed4:	bl	d640 <sendto_realops_snomask@plt>
   22ed8:	bl	d07c <rb_current_time@plt>
   22edc:	ldr	r1, [pc, #352]	; 23044 <accept_precallback+0x220>
   22ee0:	add	r1, pc, r1
   22ee4:	str	r0, [r1]
   22ee8:	ldr	r1, [pc, #344]	; 23048 <accept_precallback+0x224>
   22eec:	add	r1, pc, r1
   22ef0:	mov	r0, r4
   22ef4:	mov	r2, #31
   22ef8:	b	23008 <accept_precallback+0x1e4>
   22efc:	ldrh	r1, [r5]
   22f00:	mov	r0, r5
   22f04:	bl	e78c <find_dline@plt>
   22f08:	cmp	r0, #0
   22f0c:	beq	22f8c <accept_precallback+0x168>
   22f10:	ldrb	r1, [r0, #2]
   22f14:	mov	r6, #1
   22f18:	tst	r1, #16
   22f1c:	bne	23018 <accept_precallback+0x1f4>
   22f20:	ldr	r1, [pc, #292]	; 2304c <accept_precallback+0x228>
   22f24:	ldr	r1, [pc, r1]
   22f28:	ldr	r2, [r1, #68]	; 0x44
   22f2c:	add	r2, r2, #1
   22f30:	str	r2, [r1, #68]	; 0x44
   22f34:	ldr	r1, [pc, #276]	; 23050 <accept_precallback+0x22c>
   22f38:	ldr	r1, [pc, r1]
   22f3c:	ldr	r1, [r1, #120]	; 0x78
   22f40:	cmp	r1, #0
   22f44:	beq	22fd4 <accept_precallback+0x1b0>
   22f48:	bl	d010 <get_user_ban_reason@plt>
   22f4c:	mov	r3, r0
   22f50:	mov	r5, sp
   22f54:	ldr	r2, [pc, #248]	; 23054 <accept_precallback+0x230>
   22f58:	add	r2, pc, r2
   22f5c:	mov	r0, r5
   22f60:	mov	r1, #512	; 0x200
   22f64:	bl	de74 <snprintf@plt>
   22f68:	movw	r1, #511	; 0x1ff
   22f6c:	cmp	r0, r1
   22f70:	blt	22ff0 <accept_precallback+0x1cc>
   22f74:	movw	r0, #509	; 0x1fd
   22f78:	movw	r1, #2573	; 0xa0d
   22f7c:	strh	r1, [r5, r0]
   22f80:	mov	r0, #0
   22f84:	strb	r0, [sp, #511]	; 0x1ff
   22f88:	b	22ff0 <accept_precallback+0x1cc>
   22f8c:	mov	r0, r4
   22f90:	mov	r1, r5
   22f94:	bl	e684 <check_reject@plt>
   22f98:	mov	r6, #0
   22f9c:	cmp	r0, #0
   22fa0:	bne	23018 <accept_precallback+0x1f4>
   22fa4:	mov	r0, r5
   22fa8:	bl	d040 <throttle_add@plt>
   22fac:	cmp	r0, #0
   22fb0:	beq	23024 <accept_precallback+0x200>
   22fb4:	ldr	r1, [pc, #160]	; 2305c <accept_precallback+0x238>
   22fb8:	add	r1, pc, r1
   22fbc:	mov	r0, r4
   22fc0:	mov	r2, #42	; 0x2a
   22fc4:	bl	e738 <rb_write@plt>
   22fc8:	mov	r0, r4
   22fcc:	bl	db5c <rb_close@plt>
   22fd0:	b	23018 <accept_precallback+0x1f4>
   22fd4:	ldr	r0, [pc, #124]	; 23058 <accept_precallback+0x234>
   22fd8:	add	r0, pc, r0
   22fdc:	vld1.64	{d16-d17}, [r0]!
   22fe0:	vld1.64	{d18-d19}, [r0]
   22fe4:	mov	r0, sp
   22fe8:	vst1.64	{d16-d17}, [r0]!
   22fec:	vst1.64	{d18-d19}, [r0]
   22ff0:	mov	r5, sp
   22ff4:	mov	r0, r5
   22ff8:	bl	dc94 <strlen@plt>
   22ffc:	mov	r2, r0
   23000:	mov	r0, r4
   23004:	mov	r1, r5
   23008:	bl	e738 <rb_write@plt>
   2300c:	mov	r0, r4
   23010:	bl	db5c <rb_close@plt>
   23014:	mov	r6, #0
   23018:	mov	r0, r6
   2301c:	sub	sp, fp, #24
   23020:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23024:	mov	r6, #1
   23028:	b	23018 <accept_precallback+0x1f4>
   2302c:	.word	0x00037b14
   23030:	.word	0x00037c5c
   23034:	.word	0x00037b30
   23038:	.word	0x00043074
   2303c:	.word	0x0001fd27
   23040:	.word	0x00042e4c
   23044:	.word	0x00043034
   23048:	.word	0x0001fd18
   2304c:	.word	0x00037a98
   23050:	.word	0x00037c44
   23054:	.word	0x0001fccc
   23058:	.word	0x0001fce8
   2305c:	.word	0x0001fc84

00023060 <accept_callback>:
   23060:	push	{r4, r5, fp, lr}
   23064:	add	fp, sp, #8
   23068:	sub	sp, sp, #136	; 0x88
   2306c:	mov	r5, r2
   23070:	mov	r4, r0
   23074:	ldr	r0, [pc, #92]	; 230d8 <accept_callback+0x78>
   23078:	ldr	r0, [pc, r0]
   2307c:	ldr	r1, [r0, #64]	; 0x40
   23080:	add	r1, r1, #1
   23084:	str	r1, [r0, #64]	; 0x40
   23088:	mov	r0, #128	; 0x80
   2308c:	str	r0, [sp, #4]
   23090:	mov	r0, r4
   23094:	bl	db98 <rb_get_fd@plt>
   23098:	add	r1, sp, #8
   2309c:	add	r2, sp, #4
   230a0:	bl	e3fc <getsockname@plt>
   230a4:	cmn	r0, #1
   230a8:	ble	230c8 <accept_callback+0x68>
   230ac:	ldr	r0, [fp, #8]
   230b0:	add	r3, sp, #8
   230b4:	mov	r1, r4
   230b8:	mov	r2, r5
   230bc:	bl	230dc <add_connection>
   230c0:	sub	sp, fp, #8
   230c4:	pop	{r4, r5, fp, pc}
   230c8:	mov	r0, r4
   230cc:	bl	db5c <rb_close@plt>
   230d0:	sub	sp, fp, #8
   230d4:	pop	{r4, r5, fp, pc}
   230d8:	.word	0x00037944

000230dc <add_connection>:
   230dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   230e0:	add	fp, sp, #24
   230e4:	sub	sp, sp, #16
   230e8:	mov	r7, r3
   230ec:	mov	r6, r2
   230f0:	mov	r9, r1
   230f4:	mov	r5, r0
   230f8:	mov	r8, #0
   230fc:	mov	r0, #0
   23100:	bl	d4a8 <make_client@plt>
   23104:	mov	r4, r0
   23108:	ldr	r0, [r0, #432]	; 0x1b0
   2310c:	str	r9, [r0, #300]	; 0x12c
   23110:	add	r0, r0, #140	; 0x8c
   23114:	mov	r1, r6
   23118:	mov	r2, #128	; 0x80
   2311c:	bl	d40c <memcpy@plt>
   23120:	ldr	r0, [r4, #436]	; 0x1b4
   23124:	add	r0, r0, #132	; 0x84
   23128:	mov	r1, r7
   2312c:	mov	r2, #128	; 0x80
   23130:	bl	d40c <memcpy@plt>
   23134:	movw	r0, #291	; 0x123
   23138:	add	r6, r4, r0
   2313c:	ldr	r0, [r4, #432]	; 0x1b0
   23140:	add	r0, r0, #140	; 0x8c
   23144:	mov	r1, r6
   23148:	mov	r2, #54	; 0x36
   2314c:	bl	cf50 <rb_inet_ntop_sock@plt>
   23150:	add	r0, r4, #163	; 0xa3
   23154:	mov	r1, r6
   23158:	mov	r2, #64	; 0x40
   2315c:	bl	e510 <rb_strlcpy@plt>
   23160:	ldrb	r0, [r5, #28]
   23164:	cmp	r0, #0
   23168:	ldrne	r0, [r4, #432]	; 0x1b0
   2316c:	ldrne	r1, [r0, #452]	; 0x1c4
   23170:	orrne	r1, r1, #8
   23174:	strne	r1, [r0, #452]	; 0x1c4
   23178:	ldr	r0, [r5, #20]
   2317c:	cmp	r0, #0
   23180:	beq	23208 <add_connection+0x12c>
   23184:	ldr	r0, [pc, #344]	; 232e4 <add_connection+0x208>
   23188:	add	r0, pc, r0
   2318c:	add	r3, sp, #8
   23190:	add	r1, r3, #4
   23194:	str	r1, [sp]
   23198:	str	r0, [sp, #4]
   2319c:	mov	r0, #1
   231a0:	mov	r1, #1
   231a4:	mov	r2, #0
   231a8:	bl	d514 <rb_socketpair@plt>
   231ac:	cmn	r0, #1
   231b0:	beq	232a0 <add_connection+0x1c4>
   231b4:	ldr	r0, [r4, #432]	; 0x1b0
   231b8:	ldr	r1, [pc, #300]	; 232ec <add_connection+0x210>
   231bc:	add	r1, pc, r1
   231c0:	str	r1, [r0, #448]	; 0x1c0
   231c4:	ldr	r6, [sp, #12]
   231c8:	mov	r0, r4
   231cc:	bl	dbec <connid_get@plt>
   231d0:	mov	r2, r0
   231d4:	mov	r0, r9
   231d8:	mov	r1, r6
   231dc:	bl	daa8 <start_ssld_accept@plt>
   231e0:	ldr	r1, [r4, #432]	; 0x1b0
   231e4:	str	r0, [r1, #436]	; 0x1b4
   231e8:	cmp	r0, #0
   231ec:	beq	232b8 <add_connection+0x1dc>
   231f0:	ldr	r9, [sp, #8]
   231f4:	str	r9, [r1, #300]	; 0x12c
   231f8:	ldr	r0, [r1, #452]	; 0x1c4
   231fc:	orr	r0, r0, #1
   23200:	str	r0, [r1, #452]	; 0x1c4
   23204:	mov	r8, #1
   23208:	ldr	r0, [r5, #32]
   2320c:	cmp	r0, #0
   23210:	beq	23278 <add_connection+0x19c>
   23214:	ldr	r0, [pc, #216]	; 232f4 <add_connection+0x218>
   23218:	add	r0, pc, r0
   2321c:	add	r3, sp, #8
   23220:	add	r1, r3, #4
   23224:	str	r1, [sp]
   23228:	str	r0, [sp, #4]
   2322c:	mov	r0, #1
   23230:	mov	r1, #1
   23234:	mov	r2, #0
   23238:	bl	d514 <rb_socketpair@plt>
   2323c:	cmn	r0, #1
   23240:	beq	232a0 <add_connection+0x1c4>
   23244:	ldr	r6, [sp, #12]
   23248:	mov	r0, r4
   2324c:	bl	dbec <connid_get@plt>
   23250:	mov	r2, r0
   23254:	mov	r0, r9
   23258:	mov	r1, r6
   2325c:	bl	d754 <start_wsockd_accept@plt>
   23260:	ldr	r1, [r4, #432]	; 0x1b0
   23264:	str	r0, [r1, #444]	; 0x1bc
   23268:	cmp	r0, #0
   2326c:	beq	232b8 <add_connection+0x1dc>
   23270:	ldr	r0, [sp, #8]
   23274:	str	r0, [r1, #300]	; 0x12c
   23278:	ldr	r0, [r4, #432]	; 0x1b0
   2327c:	str	r5, [r0, #128]	; 0x80
   23280:	ldr	r0, [r5, #12]
   23284:	add	r0, r0, #1
   23288:	str	r0, [r5, #12]
   2328c:	mov	r0, r4
   23290:	mov	r1, r8
   23294:	bl	cf8c <authd_initiate_client@plt>
   23298:	sub	sp, fp, #24
   2329c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   232a0:	ldr	r0, [r4, #64]	; 0x40
   232a4:	orr	r0, r0, #16384	; 0x4000
   232a8:	str	r0, [r4, #64]	; 0x40
   232ac:	ldr	r3, [pc, #52]	; 232e8 <add_connection+0x20c>
   232b0:	add	r3, pc, r3
   232b4:	b	232cc <add_connection+0x1f0>
   232b8:	ldr	r0, [r4, #64]	; 0x40
   232bc:	orr	r0, r0, #16384	; 0x4000
   232c0:	str	r0, [r4, #64]	; 0x40
   232c4:	ldr	r3, [pc, #36]	; 232f0 <add_connection+0x214>
   232c8:	add	r3, pc, r3
   232cc:	mov	r0, r4
   232d0:	mov	r1, r4
   232d4:	mov	r2, r4
   232d8:	bl	e534 <exit_client@plt>
   232dc:	sub	sp, fp, #24
   232e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   232e4:	.word	0x0001fadf
   232e8:	.word	0x0001f9d0
   232ec:	.word	0x00000134
   232f0:	.word	0x0001f9c4
   232f4:	.word	0x0001fa88

000232f8 <accept_sslcallback>:
   232f8:	push	{fp, lr}
   232fc:	mov	fp, sp
   23300:	bl	e204 <authd_deferred_client@plt>
   23304:	mov	r0, #0
   23308:	pop	{fp, pc}

0002330c <init_main_logfile>:
   2330c:	push	{r4, sl, fp, lr}
   23310:	add	fp, sp, #8
   23314:	ldr	r4, [pc, #56]	; 23354 <init_main_logfile+0x48>
   23318:	ldr	r4, [pc, r4]
   2331c:	ldr	r0, [r4]
   23320:	bl	23364 <verify_logfile_access>
   23324:	ldr	r0, [pc, #44]	; 23358 <init_main_logfile+0x4c>
   23328:	ldr	r0, [pc, r0]
   2332c:	cmp	r0, #0
   23330:	popne	{r4, sl, fp, pc}
   23334:	ldr	r0, [r4]
   23338:	ldr	r1, [pc, #28]	; 2335c <init_main_logfile+0x50>
   2333c:	add	r1, pc, r1
   23340:	bl	d1f0 <fopen@plt>
   23344:	ldr	r1, [pc, #20]	; 23360 <init_main_logfile+0x54>
   23348:	add	r1, pc, r1
   2334c:	str	r0, [r1]
   23350:	pop	{r4, sl, fp, pc}
   23354:	.word	0x0003770c
   23358:	.word	0x00042bf0
   2335c:	.word	0x0002386a
   23360:	.word	0x00042bd0

00023364 <verify_logfile_access>:
   23364:	push	{r4, r5, r6, sl, fp, lr}
   23368:	add	fp, sp, #16
   2336c:	sub	sp, sp, #512	; 0x200
   23370:	mov	r4, r0
   23374:	bl	d274 <rb_dirname@plt>
   23378:	mov	r6, r0
   2337c:	bl	dc94 <strlen@plt>
   23380:	add	r0, r0, #8
   23384:	bic	r0, r0, #7
   23388:	sub	r5, sp, r0
   2338c:	mov	sp, r5
   23390:	mov	r0, r5
   23394:	mov	r1, r6
   23398:	bl	d928 <strcpy@plt>
   2339c:	mov	r0, r6
   233a0:	bl	23a1c <rb_free>
   233a4:	mov	r0, r5
   233a8:	mov	r1, #0
   233ac:	bl	e09c <access@plt>
   233b0:	cmn	r0, #1
   233b4:	beq	23404 <verify_logfile_access+0xa0>
   233b8:	mov	r0, r4
   233bc:	mov	r1, #0
   233c0:	bl	e09c <access@plt>
   233c4:	cmn	r0, #1
   233c8:	beq	2346c <verify_logfile_access+0x108>
   233cc:	mov	r0, r4
   233d0:	mov	r1, #2
   233d4:	bl	e09c <access@plt>
   233d8:	cmn	r0, #1
   233dc:	bne	23464 <verify_logfile_access+0x100>
   233e0:	bl	de38 <__errno_location@plt>
   233e4:	ldr	r0, [r0]
   233e8:	bl	dacc <strerror@plt>
   233ec:	sub	sp, sp, #8
   233f0:	str	r0, [sp]
   233f4:	sub	r0, fp, #528	; 0x210
   233f8:	ldr	r2, [pc, #208]	; 234d0 <verify_logfile_access+0x16c>
   233fc:	add	r2, pc, r2
   23400:	b	23418 <verify_logfile_access+0xb4>
   23404:	sub	sp, sp, #8
   23408:	str	r5, [sp]
   2340c:	sub	r0, fp, #528	; 0x210
   23410:	ldr	r2, [pc, #176]	; 234c8 <verify_logfile_access+0x164>
   23414:	add	r2, pc, r2
   23418:	mov	r1, #512	; 0x200
   2341c:	mov	r3, r4
   23420:	bl	de74 <snprintf@plt>
   23424:	add	sp, sp, #8
   23428:	ldr	r0, [pc, #164]	; 234d4 <verify_logfile_access+0x170>
   2342c:	ldr	r0, [pc, r0]
   23430:	ldr	r0, [r0]
   23434:	cmp	r0, #0
   23438:	ldreq	r0, [pc, #152]	; 234d8 <verify_logfile_access+0x174>
   2343c:	ldreq	r0, [pc, r0]
   23440:	ldrbeq	r0, [r0]
   23444:	cmpeq	r0, #0
   23448:	bne	234a8 <verify_logfile_access+0x144>
   2344c:	ldr	r2, [pc, #144]	; 234e4 <verify_logfile_access+0x180>
   23450:	add	r2, pc, r2
   23454:	sub	r3, fp, #528	; 0x210
   23458:	mov	r0, #256	; 0x100
   2345c:	mov	r1, #0
   23460:	bl	d640 <sendto_realops_snomask@plt>
   23464:	sub	sp, fp, #16
   23468:	pop	{r4, r5, r6, sl, fp, pc}
   2346c:	mov	r0, r5
   23470:	mov	r1, #2
   23474:	bl	e09c <access@plt>
   23478:	cmn	r0, #1
   2347c:	bne	23464 <verify_logfile_access+0x100>
   23480:	bl	de38 <__errno_location@plt>
   23484:	ldr	r0, [r0]
   23488:	bl	dacc <strerror@plt>
   2348c:	sub	sp, sp, #8
   23490:	str	r5, [sp]
   23494:	str	r0, [sp, #4]
   23498:	sub	r0, fp, #528	; 0x210
   2349c:	ldr	r2, [pc, #40]	; 234cc <verify_logfile_access+0x168>
   234a0:	add	r2, pc, r2
   234a4:	b	23418 <verify_logfile_access+0xb4>
   234a8:	ldr	r0, [pc, #44]	; 234dc <verify_logfile_access+0x178>
   234ac:	ldr	r0, [pc, r0]
   234b0:	ldr	r0, [r0]
   234b4:	ldr	r1, [pc, #36]	; 234e0 <verify_logfile_access+0x17c>
   234b8:	add	r1, pc, r1
   234bc:	sub	r2, fp, #528	; 0x210
   234c0:	bl	dd60 <fprintf@plt>
   234c4:	b	2344c <verify_logfile_access+0xe8>
   234c8:	.word	0x0001f921
   234cc:	.word	0x0001f8df
   234d0:	.word	0x0001f9d3
   234d4:	.word	0x00037660
   234d8:	.word	0x0003750c
   234dc:	.word	0x000374ac
   234e0:	.word	0x00020213
   234e4:	.word	0x00024215

000234e8 <open_logfiles>:
   234e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   234ec:	add	fp, sp, #24
   234f0:	bl	e3c0 <close_logfiles@plt>
   234f4:	ldr	r0, [pc, #116]	; 23570 <open_logfiles+0x88>
   234f8:	ldr	r0, [pc, r0]
   234fc:	ldr	r0, [r0]
   23500:	ldr	r8, [pc, #108]	; 23574 <open_logfiles+0x8c>
   23504:	add	r8, pc, r8
   23508:	mov	r1, r8
   2350c:	bl	d1f0 <fopen@plt>
   23510:	ldr	r1, [pc, #96]	; 23578 <open_logfiles+0x90>
   23514:	add	r1, pc, r1
   23518:	str	r0, [r1]
   2351c:	mov	r5, #0
   23520:	ldr	r6, [pc, #84]	; 2357c <open_logfiles+0x94>
   23524:	add	r6, pc, r6
   23528:	b	23538 <open_logfiles+0x50>
   2352c:	sub	r5, r5, #1
   23530:	cmn	r5, #9
   23534:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   23538:	sub	r7, r6, r5, lsl #3
   2353c:	ldr	r4, [r7, #8]
   23540:	ldr	r0, [r4]
   23544:	cmp	r0, #0
   23548:	ldrbne	r1, [r0]
   2354c:	cmpne	r1, #0
   23550:	beq	2352c <open_logfiles+0x44>
   23554:	bl	23364 <verify_logfile_access>
   23558:	ldr	r0, [r4]
   2355c:	mov	r1, r8
   23560:	bl	d1f0 <fopen@plt>
   23564:	ldr	r1, [r7, #12]
   23568:	str	r0, [r1]
   2356c:	b	2352c <open_logfiles+0x44>
   23570:	.word	0x0003752c
   23574:	.word	0x000236a2
   23578:	.word	0x00042a04
   2357c:	.word	0x000368cc

00023580 <close_logfiles>:
   23580:	push	{r4, r5, r6, r7, fp, lr}
   23584:	add	fp, sp, #16
   23588:	ldr	r0, [pc, #76]	; 235dc <close_logfiles+0x5c>
   2358c:	ldr	r0, [pc, r0]
   23590:	cmp	r0, #0
   23594:	beq	2359c <close_logfiles+0x1c>
   23598:	bl	e0f0 <fclose@plt>
   2359c:	mov	r4, #0
   235a0:	ldr	r5, [pc, #56]	; 235e0 <close_logfiles+0x60>
   235a4:	add	r5, pc, r5
   235a8:	mov	r6, #0
   235ac:	b	235bc <close_logfiles+0x3c>
   235b0:	sub	r6, r6, #1
   235b4:	cmn	r6, #9
   235b8:	popeq	{r4, r5, r6, r7, fp, pc}
   235bc:	sub	r0, r5, r6, lsl #3
   235c0:	ldr	r7, [r0, #12]
   235c4:	ldr	r0, [r7]
   235c8:	cmp	r0, #0
   235cc:	beq	235b0 <close_logfiles+0x30>
   235d0:	bl	e0f0 <fclose@plt>
   235d4:	str	r4, [r7]
   235d8:	b	235b0 <close_logfiles+0x30>
   235dc:	.word	0x0004298c
   235e0:	.word	0x0003684c

000235e4 <ilog>:
   235e4:	sub	sp, sp, #8
   235e8:	push	{r4, r5, r6, sl, fp, lr}
   235ec:	add	fp, sp, #16
   235f0:	sub	sp, sp, #1072	; 0x430
   235f4:	mov	ip, r1
   235f8:	str	r3, [fp, #12]
   235fc:	str	r2, [fp, #8]
   23600:	ldr	r1, [pc, #156]	; 236a4 <ilog+0xc0>
   23604:	add	r1, pc, r1
   23608:	add	r0, r1, r0, lsl #3
   2360c:	ldr	r6, [r0, #4]
   23610:	ldr	r4, [r6]
   23614:	cmp	r4, #0
   23618:	beq	23694 <ilog+0xb0>
   2361c:	add	r3, fp, #8
   23620:	str	r3, [sp, #8]
   23624:	sub	r5, fp, #528	; 0x210
   23628:	mov	r0, r5
   2362c:	mov	r1, #512	; 0x200
   23630:	mov	r2, ip
   23634:	bl	e450 <vsnprintf@plt>
   23638:	bl	d07c <rb_current_time@plt>
   2363c:	bl	e2c4 <smalldate@plt>
   23640:	str	r5, [sp]
   23644:	add	r5, sp, #14
   23648:	ldr	r2, [pc, #88]	; 236a8 <ilog+0xc4>
   2364c:	add	r2, pc, r2
   23650:	ldr	r3, [pc, #84]	; 236ac <ilog+0xc8>
   23654:	add	r3, pc, r3
   23658:	mov	r0, r5
   2365c:	movw	r1, #546	; 0x222
   23660:	bl	de74 <snprintf@plt>
   23664:	mov	r0, r5
   23668:	mov	r1, r4
   2366c:	bl	e6a8 <fputs@plt>
   23670:	cmn	r0, #1
   23674:	ble	23684 <ilog+0xa0>
   23678:	mov	r0, r4
   2367c:	bl	d25c <fflush@plt>
   23680:	b	23694 <ilog+0xb0>
   23684:	mov	r0, r4
   23688:	bl	e0f0 <fclose@plt>
   2368c:	mov	r0, #0
   23690:	str	r0, [r6]
   23694:	sub	sp, fp, #16
   23698:	pop	{r4, r5, r6, sl, fp, lr}
   2369c:	add	sp, sp, #8
   236a0:	bx	lr
   236a4:	.word	0x000367ec
   236a8:	.word	0x0001f694
   236ac:	.word	0x000428c8

000236b0 <smalldate>:
   236b0:	push	{r4, sl, fp, lr}
   236b4:	add	fp, sp, #8
   236b8:	sub	sp, sp, #24
   236bc:	str	r0, [fp, #-12]
   236c0:	sub	r0, fp, #12
   236c4:	bl	db44 <localtime@plt>
   236c8:	ldmib	r0, {r1, r2, r3, r4}
   236cc:	ldr	r0, [r0, #20]
   236d0:	add	r4, r4, #1
   236d4:	str	r4, [sp]
   236d8:	str	r3, [sp, #4]
   236dc:	str	r2, [sp, #8]
   236e0:	str	r1, [sp, #12]
   236e4:	movw	r1, #1900	; 0x76c
   236e8:	add	r3, r0, r1
   236ec:	ldr	r4, [pc, #32]	; 23714 <smalldate+0x64>
   236f0:	add	r4, pc, r4
   236f4:	ldr	r2, [pc, #28]	; 23718 <smalldate+0x68>
   236f8:	add	r2, pc, r2
   236fc:	mov	r0, r4
   23700:	mov	r1, #32
   23704:	bl	de74 <snprintf@plt>
   23708:	mov	r0, r4
   2370c:	sub	sp, fp, #8
   23710:	pop	{r4, sl, fp, pc}
   23714:	.word	0x0004282c
   23718:	.word	0x0001f61e

0002371c <idebug>:
   2371c:	bx	lr

00023720 <inotice>:
   23720:	sub	sp, sp, #12
   23724:	push	{r4, sl, fp, lr}
   23728:	add	fp, sp, #8
   2372c:	sub	sp, sp, #516	; 0x204
   23730:	mov	ip, r0
   23734:	add	r0, fp, #8
   23738:	stm	r0, {r1, r2, r3}
   2373c:	add	r3, fp, #8
   23740:	str	r3, [sp]
   23744:	add	r4, sp, #4
   23748:	mov	r0, r4
   2374c:	mov	r1, #512	; 0x200
   23750:	mov	r2, ip
   23754:	bl	e450 <vsnprintf@plt>
   23758:	ldr	r0, [pc, #44]	; 2378c <inotice+0x6c>
   2375c:	add	r0, pc, r0
   23760:	mov	r1, r4
   23764:	bl	23794 <_iprint>
   23768:	ldr	r1, [pc, #32]	; 23790 <inotice+0x70>
   2376c:	add	r1, pc, r1
   23770:	mov	r0, #0
   23774:	mov	r2, r4
   23778:	bl	e0b4 <ilog@plt>
   2377c:	sub	sp, fp, #8
   23780:	pop	{r4, sl, fp, lr}
   23784:	add	sp, sp, #12
   23788:	bx	lr
   2378c:	.word	0x00020a18
   23790:	.word	0x00023ef9

00023794 <_iprint>:
   23794:	cmp	r0, #0
   23798:	movne	r3, r1
   2379c:	cmpne	r1, #0
   237a0:	bxeq	lr
   237a4:	mov	r2, r0
   237a8:	ldr	r0, [pc, #16]	; 237c0 <_iprint+0x2c>
   237ac:	ldr	r0, [pc, r0]
   237b0:	ldr	r0, [r0]
   237b4:	ldr	r1, [pc, #8]	; 237c4 <_iprint+0x30>
   237b8:	add	r1, pc, r1
   237bc:	b	dd60 <fprintf@plt>
   237c0:	.word	0x000371ac
   237c4:	.word	0x0001f641

000237c8 <iwarn>:
   237c8:	sub	sp, sp, #12
   237cc:	push	{r4, sl, fp, lr}
   237d0:	add	fp, sp, #8
   237d4:	sub	sp, sp, #516	; 0x204
   237d8:	mov	ip, r0
   237dc:	add	r0, fp, #8
   237e0:	stm	r0, {r1, r2, r3}
   237e4:	add	r3, fp, #8
   237e8:	str	r3, [sp]
   237ec:	add	r4, sp, #4
   237f0:	mov	r0, r4
   237f4:	mov	r1, #512	; 0x200
   237f8:	mov	r2, ip
   237fc:	bl	e450 <vsnprintf@plt>
   23800:	ldr	r0, [pc, #44]	; 23834 <iwarn+0x6c>
   23804:	add	r0, pc, r0
   23808:	mov	r1, r4
   2380c:	bl	23794 <_iprint>
   23810:	ldr	r1, [pc, #32]	; 23838 <iwarn+0x70>
   23814:	add	r1, pc, r1
   23818:	mov	r0, #0
   2381c:	mov	r2, r4
   23820:	bl	e0b4 <ilog@plt>
   23824:	sub	sp, fp, #8
   23828:	pop	{r4, sl, fp, lr}
   2382c:	add	sp, sp, #12
   23830:	bx	lr
   23834:	.word	0x0001f4e3
   23838:	.word	0x00023e51

0002383c <ierror>:
   2383c:	sub	sp, sp, #12
   23840:	push	{r4, sl, fp, lr}
   23844:	add	fp, sp, #8
   23848:	sub	sp, sp, #516	; 0x204
   2384c:	mov	ip, r0
   23850:	add	r0, fp, #8
   23854:	stm	r0, {r1, r2, r3}
   23858:	add	r3, fp, #8
   2385c:	str	r3, [sp]
   23860:	add	r4, sp, #4
   23864:	mov	r0, r4
   23868:	mov	r1, #512	; 0x200
   2386c:	mov	r2, ip
   23870:	bl	e450 <vsnprintf@plt>
   23874:	ldr	r0, [pc, #44]	; 238a8 <ierror+0x6c>
   23878:	add	r0, pc, r0
   2387c:	mov	r1, r4
   23880:	bl	23794 <_iprint>
   23884:	ldr	r1, [pc, #32]	; 238ac <ierror+0x70>
   23888:	add	r1, pc, r1
   2388c:	mov	r0, #0
   23890:	mov	r2, r4
   23894:	bl	e0b4 <ilog@plt>
   23898:	sub	sp, fp, #8
   2389c:	pop	{r4, sl, fp, lr}
   238a0:	add	sp, sp, #12
   238a4:	bx	lr
   238a8:	.word	0x0002271b
   238ac:	.word	0x00023ddd

000238b0 <report_operspy>:
   238b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   238b4:	add	fp, sp, #24
   238b8:	sub	sp, sp, #16
   238bc:	mov	r6, r2
   238c0:	mov	r8, r1
   238c4:	mov	r5, r0
   238c8:	ldrb	r0, [r0, #65]	; 0x41
   238cc:	tst	r0, #32
   238d0:	beq	23920 <report_operspy+0x70>
   238d4:	ldrh	r0, [r5, #80]	; 0x50
   238d8:	cmp	r0, #64	; 0x40
   238dc:	bne	23920 <report_operspy+0x70>
   238e0:	ldr	r0, [pc, #176]	; 23998 <report_operspy+0xe8>
   238e4:	add	r0, pc, r0
   238e8:	cmp	r6, #0
   238ec:	movne	r0, r6
   238f0:	ldr	r1, [pc, #164]	; 2399c <report_operspy+0xec>
   238f4:	ldr	r1, [pc, r1]
   238f8:	ldr	r2, [r1]
   238fc:	ldr	r1, [pc, #156]	; 239a0 <report_operspy+0xf0>
   23900:	add	r1, pc, r1
   23904:	stm	sp, {r1, r8}
   23908:	str	r0, [sp, #8]
   2390c:	ldr	r1, [pc, #144]	; 239a4 <report_operspy+0xf4>
   23910:	add	r1, pc, r1
   23914:	mov	r0, r5
   23918:	mov	r3, #0
   2391c:	bl	d0b8 <sendto_match_servs@plt>
   23920:	ldr	r4, [pc, #128]	; 239a8 <report_operspy+0xf8>
   23924:	add	r4, pc, r4
   23928:	cmp	r6, #0
   2392c:	movne	r4, r6
   23930:	ldr	r0, [pc, #116]	; 239ac <report_operspy+0xfc>
   23934:	ldr	r0, [pc, r0]
   23938:	ldr	r6, [r0, #180]	; 0xb4
   2393c:	mov	r0, r5
   23940:	bl	d730 <get_oper_name@plt>
   23944:	mov	r3, r0
   23948:	str	r8, [sp]
   2394c:	str	r4, [sp, #4]
   23950:	cmp	r6, #0
   23954:	movwne	r6, #2
   23958:	ldr	r7, [pc, #80]	; 239b0 <report_operspy+0x100>
   2395c:	add	r7, pc, r7
   23960:	mov	r0, #4096	; 0x1000
   23964:	mov	r1, r6
   23968:	mov	r2, r7
   2396c:	bl	d640 <sendto_realops_snomask@plt>
   23970:	mov	r0, r5
   23974:	bl	d730 <get_oper_name@plt>
   23978:	mov	r2, r0
   2397c:	str	r4, [sp]
   23980:	mov	r0, #8
   23984:	mov	r1, r7
   23988:	mov	r3, r8
   2398c:	bl	e0b4 <ilog@plt>
   23990:	sub	sp, fp, #24
   23994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23998:	.word	0x00021f21
   2399c:	.word	0x00037280
   239a0:	.word	0x0001f3ef
   239a4:	.word	0x0001da2d
   239a8:	.word	0x00021ee1
   239ac:	.word	0x00037248
   239b0:	.word	0x0001f3a9

000239b4 <ilog_error>:
   239b4:	push	{r4, r5, r6, r7, fp, lr}
   239b8:	add	fp, sp, #16
   239bc:	sub	sp, sp, #8
   239c0:	mov	r4, r0
   239c4:	bl	de38 <__errno_location@plt>
   239c8:	ldr	r5, [r0]
   239cc:	mov	r0, r5
   239d0:	bl	dacc <strerror@plt>
   239d4:	mov	r6, r0
   239d8:	str	r0, [sp]
   239dc:	ldr	r7, [pc, #52]	; 23a18 <ilog_error+0x64>
   239e0:	add	r7, pc, r7
   239e4:	mov	r0, #9
   239e8:	mov	r1, r7
   239ec:	mov	r2, r4
   239f0:	mov	r3, r5
   239f4:	bl	e0b4 <ilog@plt>
   239f8:	stm	sp, {r5, r6}
   239fc:	mov	r0, #8
   23a00:	mov	r1, #0
   23a04:	mov	r2, r7
   23a08:	mov	r3, r4
   23a0c:	bl	d640 <sendto_realops_snomask@plt>
   23a10:	sub	sp, fp, #16
   23a14:	pop	{r4, r5, r6, r7, fp, pc}
   23a18:	.word	0x0001f349

00023a1c <rb_free>:
   23a1c:	cmp	r0, #0
   23a20:	bxeq	lr
   23a24:	b	d328 <free@plt>

00023a28 <match>:
   23a28:	push	{r4, r5, r6, sl, fp, lr}
   23a2c:	add	fp, sp, #16
   23a30:	ldr	r6, [pc, #288]	; 23b58 <match+0x130>
   23a34:	ldr	r6, [pc, r6]
   23a38:	mov	r3, r0
   23a3c:	mov	ip, r0
   23a40:	b	23a58 <match+0x30>
   23a44:	cmp	ip, r0
   23a48:	moveq	r0, #0
   23a4c:	popeq	{r4, r5, r6, sl, fp, pc}
   23a50:	add	r1, lr, #1
   23a54:	mov	r3, ip
   23a58:	mov	lr, r1
   23a5c:	b	23a68 <match+0x40>
   23a60:	add	r1, r4, #1
   23a64:	add	r3, r3, #1
   23a68:	ldrb	r2, [r3]
   23a6c:	cmp	r2, #0
   23a70:	beq	23b34 <match+0x10c>
   23a74:	cmp	r2, #63	; 0x3f
   23a78:	cmpne	r2, #42	; 0x2a
   23a7c:	bne	23b00 <match+0xd8>
   23a80:	mov	r4, #0
   23a84:	b	23a90 <match+0x68>
   23a88:	mov	r4, #1
   23a8c:	add	r3, r3, #1
   23a90:	ldrb	r5, [r3]
   23a94:	cmp	r5, #42	; 0x2a
   23a98:	beq	23a88 <match+0x60>
   23a9c:	cmp	r5, #63	; 0x3f
   23aa0:	bne	23ab8 <match+0x90>
   23aa4:	ldrb	r2, [r1], #1
   23aa8:	cmp	r2, #0
   23aac:	beq	23a44 <match+0x1c>
   23ab0:	add	r3, r3, #1
   23ab4:	b	23a90 <match+0x68>
   23ab8:	cmp	r4, #0
   23abc:	beq	23b00 <match+0xd8>
   23ac0:	cmp	r5, #0
   23ac4:	moveq	r0, #1
   23ac8:	popeq	{r4, r5, r6, sl, fp, pc}
   23acc:	ldrb	r2, [r1]
   23ad0:	cmp	r2, #0
   23ad4:	beq	23b48 <match+0x120>
   23ad8:	ldrb	r5, [r6, r5]
   23adc:	mov	r4, r1
   23ae0:	uxtb	r2, r2
   23ae4:	ldrb	r2, [r6, r2]
   23ae8:	cmp	r2, r5
   23aec:	beq	23b08 <match+0xe0>
   23af0:	ldrb	r2, [r4, #1]!
   23af4:	cmp	r2, #0
   23af8:	bne	23ae0 <match+0xb8>
   23afc:	b	23b48 <match+0x120>
   23b00:	mov	r4, r1
   23b04:	b	23b10 <match+0xe8>
   23b08:	mov	ip, r3
   23b0c:	mov	lr, r1
   23b10:	ldrb	r1, [r3]
   23b14:	ldrb	r2, [r4]
   23b18:	cmp	r2, #0
   23b1c:	beq	23b4c <match+0x124>
   23b20:	ldrb	r2, [r6, r2]
   23b24:	ldrb	r1, [r6, r1]
   23b28:	cmp	r1, r2
   23b2c:	bne	23a44 <match+0x1c>
   23b30:	b	23a60 <match+0x38>
   23b34:	ldrb	r1, [r1]
   23b38:	cmp	r1, #0
   23b3c:	moveq	r0, #1
   23b40:	popeq	{r4, r5, r6, sl, fp, pc}
   23b44:	b	23a44 <match+0x1c>
   23b48:	ldrb	r1, [r3]
   23b4c:	clz	r0, r1
   23b50:	lsr	r0, r0, #5
   23b54:	pop	{r4, r5, r6, sl, fp, pc}
   23b58:	.word	0x000370a8

00023b5c <mask_match>:
   23b5c:	push	{r4, r5, r6, sl, fp, lr}
   23b60:	add	fp, sp, #16
   23b64:	ldr	r6, [pc, #296]	; 23c94 <mask_match+0x138>
   23b68:	ldr	r6, [pc, r6]
   23b6c:	mov	r3, r0
   23b70:	mov	ip, r0
   23b74:	b	23b8c <mask_match+0x30>
   23b78:	cmp	ip, r0
   23b7c:	moveq	r0, #0
   23b80:	popeq	{r4, r5, r6, sl, fp, pc}
   23b84:	add	r1, lr, #1
   23b88:	mov	r3, ip
   23b8c:	mov	lr, r1
   23b90:	b	23b9c <mask_match+0x40>
   23b94:	add	r1, r4, #1
   23b98:	add	r3, r3, #1
   23b9c:	ldrb	r2, [r3]
   23ba0:	cmp	r2, #0
   23ba4:	beq	23c70 <mask_match+0x114>
   23ba8:	cmp	r2, #63	; 0x3f
   23bac:	cmpne	r2, #42	; 0x2a
   23bb0:	bne	23c3c <mask_match+0xe0>
   23bb4:	mov	r4, #0
   23bb8:	b	23bc4 <mask_match+0x68>
   23bbc:	mov	r4, #1
   23bc0:	add	r3, r3, #1
   23bc4:	ldrb	r5, [r3]
   23bc8:	cmp	r5, #42	; 0x2a
   23bcc:	beq	23bbc <mask_match+0x60>
   23bd0:	cmp	r5, #63	; 0x3f
   23bd4:	bne	23bf4 <mask_match+0x98>
   23bd8:	ldrb	r2, [r1]
   23bdc:	cmp	r2, #0
   23be0:	cmpne	r2, #42	; 0x2a
   23be4:	beq	23b78 <mask_match+0x1c>
   23be8:	add	r1, r1, #1
   23bec:	add	r3, r3, #1
   23bf0:	b	23bc4 <mask_match+0x68>
   23bf4:	cmp	r4, #0
   23bf8:	beq	23c3c <mask_match+0xe0>
   23bfc:	cmp	r5, #0
   23c00:	moveq	r0, #1
   23c04:	popeq	{r4, r5, r6, sl, fp, pc}
   23c08:	ldrb	r2, [r1]
   23c0c:	cmp	r2, #0
   23c10:	beq	23c84 <mask_match+0x128>
   23c14:	ldrb	r5, [r6, r5]
   23c18:	mov	r4, r1
   23c1c:	uxtb	r2, r2
   23c20:	ldrb	r2, [r6, r2]
   23c24:	cmp	r2, r5
   23c28:	beq	23c64 <mask_match+0x108>
   23c2c:	ldrb	r2, [r4, #1]!
   23c30:	cmp	r2, #0
   23c34:	bne	23c1c <mask_match+0xc0>
   23c38:	b	23c84 <mask_match+0x128>
   23c3c:	mov	r4, r1
   23c40:	ldrb	r1, [r3]
   23c44:	ldrb	r2, [r4]
   23c48:	cmp	r2, #0
   23c4c:	beq	23c88 <mask_match+0x12c>
   23c50:	ldrb	r2, [r6, r2]
   23c54:	ldrb	r1, [r6, r1]
   23c58:	cmp	r1, r2
   23c5c:	bne	23b78 <mask_match+0x1c>
   23c60:	b	23b94 <mask_match+0x38>
   23c64:	mov	ip, r3
   23c68:	mov	lr, r1
   23c6c:	b	23c40 <mask_match+0xe4>
   23c70:	ldrb	r1, [r1]
   23c74:	cmp	r1, #0
   23c78:	moveq	r0, #1
   23c7c:	popeq	{r4, r5, r6, sl, fp, pc}
   23c80:	b	23b78 <mask_match+0x1c>
   23c84:	ldrb	r1, [r3]
   23c88:	clz	r0, r1
   23c8c:	lsr	r0, r0, #5
   23c90:	pop	{r4, r5, r6, sl, fp, pc}
   23c94:	.word	0x00036f74

00023c98 <match_esc>:
   23c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c9c:	add	fp, sp, #28
   23ca0:	mov	r2, #0
   23ca4:	cmp	r0, #0
   23ca8:	cmpne	r1, #0
   23cac:	beq	23f1c <match_esc+0x284>
   23cb0:	ldrb	r2, [r0]
   23cb4:	cmp	r2, #42	; 0x2a
   23cb8:	ldrbeq	r2, [r0, #1]
   23cbc:	cmpeq	r2, #0
   23cc0:	beq	23ef8 <match_esc+0x260>
   23cc4:	mov	r4, #0
   23cc8:	mov	r7, #1
   23ccc:	ldr	lr, [pc, #620]	; 23f40 <match_esc+0x2a8>
   23cd0:	ldr	lr, [pc, lr]
   23cd4:	ldr	ip, [pc, #616]	; 23f44 <match_esc+0x2ac>
   23cd8:	ldr	ip, [pc, ip]
   23cdc:	mov	r8, #0
   23ce0:	mov	r9, r0
   23ce4:	mov	r6, r1
   23ce8:	mov	r3, r0
   23cec:	mov	r5, r7
   23cf0:	mov	r7, r4
   23cf4:	add	r2, r3, #1
   23cf8:	cmp	r7, #0
   23cfc:	addne	r7, r7, #1
   23d00:	subs	r4, r7, #3
   23d04:	movne	r4, r7
   23d08:	ldrb	r7, [r3]
   23d0c:	cmp	r4, #0
   23d10:	cmpeq	r7, #92	; 0x5c
   23d14:	bne	23d38 <match_esc+0xa0>
   23d18:	add	r2, r2, #1
   23d1c:	add	r4, r5, #1
   23d20:	add	r3, r3, #1
   23d24:	mov	r7, #1
   23d28:	cmp	r5, #512	; 0x200
   23d2c:	mov	r5, r4
   23d30:	blt	23cf8 <match_esc+0x60>
   23d34:	b	23f04 <match_esc+0x26c>
   23d38:	cmp	r7, #42	; 0x2a
   23d3c:	cmpeq	r4, #0
   23d40:	bne	23d98 <match_esc+0x100>
   23d44:	mov	r3, r2
   23d48:	b	23d50 <match_esc+0xb8>
   23d4c:	add	r3, r3, #1
   23d50:	ldrb	r2, [r3, #-1]
   23d54:	cmp	r2, #42	; 0x2a
   23d58:	beq	23d4c <match_esc+0xb4>
   23d5c:	cmp	r2, #92	; 0x5c
   23d60:	bne	23da0 <match_esc+0x108>
   23d64:	mov	r9, r3
   23d68:	ldrb	r1, [r9], #-1
   23d6c:	mov	r2, #0
   23d70:	cmp	r1, #0
   23d74:	beq	23f1c <match_esc+0x284>
   23d78:	add	r1, r5, #1
   23d7c:	add	r7, r4, #1
   23d80:	mov	r8, #1
   23d84:	cmp	r5, #512	; 0x200
   23d88:	mov	r5, r1
   23d8c:	mov	r1, r6
   23d90:	blt	23cf4 <match_esc+0x5c>
   23d94:	b	23f1c <match_esc+0x284>
   23d98:	ldrb	r2, [r3]
   23d9c:	b	23db0 <match_esc+0x118>
   23da0:	sub	r3, r3, #1
   23da4:	mov	r8, #1
   23da8:	mov	r9, r3
   23dac:	mov	r1, r6
   23db0:	ldrb	r7, [r6]
   23db4:	cmp	r2, #0
   23db8:	beq	23dcc <match_esc+0x134>
   23dbc:	cmp	r7, #0
   23dc0:	beq	23f10 <match_esc+0x278>
   23dc4:	mov	sl, r6
   23dc8:	b	23e24 <match_esc+0x18c>
   23dcc:	clz	r2, r7
   23dd0:	lsr	r2, r2, #5
   23dd4:	cmp	r4, #0
   23dd8:	cmpeq	r2, #0
   23ddc:	bne	23f1c <match_esc+0x284>
   23de0:	sub	r3, r3, #1
   23de4:	cmp	r3, r0
   23de8:	bls	23e10 <match_esc+0x178>
   23dec:	mov	r2, r3
   23df0:	ldrb	r6, [r3], #-1
   23df4:	cmp	r6, #63	; 0x3f
   23df8:	beq	23de4 <match_esc+0x14c>
   23dfc:	ldrb	r3, [r2]
   23e00:	cmp	r3, #42	; 0x2a
   23e04:	bne	23e10 <match_esc+0x178>
   23e08:	cmp	r2, r0
   23e0c:	bhi	23ef8 <match_esc+0x260>
   23e10:	cmp	r8, #0
   23e14:	beq	23f04 <match_esc+0x26c>
   23e18:	add	sl, r1, #1
   23e1c:	mov	r3, r9
   23e20:	mov	r1, sl
   23e24:	ldrb	r6, [r3]
   23e28:	cmp	r4, #0
   23e2c:	beq	23e7c <match_esc+0x1e4>
   23e30:	mov	r7, #32
   23e34:	cmp	r6, #115	; 0x73
   23e38:	mov	r2, sl
   23e3c:	addne	r2, lr, r6
   23e40:	ldrbne	r7, [sl]
   23e44:	ldrbne	r7, [lr, r7]
   23e48:	ldrb	r2, [r2]
   23e4c:	sub	r2, r2, r7
   23e50:	clz	r2, r2
   23e54:	lsr	r7, r2, #5
   23e58:	cmp	r7, #0
   23e5c:	beq	23ec0 <match_esc+0x228>
   23e60:	cmp	r6, #0
   23e64:	addne	r3, r3, #1
   23e68:	mov	r6, sl
   23e6c:	ldrb	r2, [r6], #1
   23e70:	cmp	r2, #0
   23e74:	moveq	r6, sl
   23e78:	b	23ed4 <match_esc+0x23c>
   23e7c:	cmp	r6, #35	; 0x23
   23e80:	beq	23eac <match_esc+0x214>
   23e84:	cmp	r6, #63	; 0x3f
   23e88:	beq	23e60 <match_esc+0x1c8>
   23e8c:	cmp	r6, #64	; 0x40
   23e90:	bne	23ee8 <match_esc+0x250>
   23e94:	ldrb	r2, [sl]
   23e98:	ldr	r2, [ip, r2, lsl #2]
   23e9c:	and	r7, r2, #65536	; 0x10000
   23ea0:	cmp	r7, #0
   23ea4:	bne	23e60 <match_esc+0x1c8>
   23ea8:	b	23ec0 <match_esc+0x228>
   23eac:	ldrb	r2, [sl]
   23eb0:	ldr	r2, [ip, r2, lsl #2]
   23eb4:	and	r7, r2, #16
   23eb8:	cmp	r7, #0
   23ebc:	bne	23e60 <match_esc+0x1c8>
   23ec0:	cmp	r8, #0
   23ec4:	beq	23f04 <match_esc+0x26c>
   23ec8:	add	r6, r1, #1
   23ecc:	mov	r3, r9
   23ed0:	mov	r1, r6
   23ed4:	add	r7, r5, #1
   23ed8:	mov	r2, #0
   23edc:	cmp	r5, #512	; 0x200
   23ee0:	blt	23cec <match_esc+0x54>
   23ee4:	b	23f1c <match_esc+0x284>
   23ee8:	ldrb	r2, [lr, r6]
   23eec:	ldrb	r7, [sl]
   23ef0:	ldrb	r7, [lr, r7]
   23ef4:	b	23e4c <match_esc+0x1b4>
   23ef8:	mov	r2, #1
   23efc:	mov	r0, r2
   23f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f04:	mov	r2, #0
   23f08:	mov	r0, r2
   23f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f10:	mov	r2, #0
   23f14:	cmp	r4, #0
   23f18:	beq	23f24 <match_esc+0x28c>
   23f1c:	mov	r0, r2
   23f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f24:	ldrb	r0, [r3], #1
   23f28:	cmp	r0, #42	; 0x2a
   23f2c:	beq	23f24 <match_esc+0x28c>
   23f30:	clz	r0, r0
   23f34:	lsr	r2, r0, #5
   23f38:	mov	r0, r2
   23f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f40:	.word	0x00036e0c
   23f44:	.word	0x00036d20

00023f48 <comp_with_mask>:
   23f48:	push	{r4, r5, r6, r7, fp, lr}
   23f4c:	add	fp, sp, #16
   23f50:	mov	r7, r2
   23f54:	mov	r4, r1
   23f58:	mov	r5, r0
   23f5c:	lsr	r6, r2, #3
   23f60:	mov	r2, r6
   23f64:	bl	d55c <memcmp@plt>
   23f68:	mov	r1, r0
   23f6c:	mov	r0, #0
   23f70:	cmp	r1, #0
   23f74:	popne	{r4, r5, r6, r7, fp, pc}
   23f78:	ands	r0, r7, #7
   23f7c:	moveq	r0, #1
   23f80:	popeq	{r4, r5, r6, r7, fp, pc}
   23f84:	ldrb	r1, [r5, r6]
   23f88:	ldrb	r2, [r4, r6]
   23f8c:	eor	r1, r2, r1
   23f90:	rsb	r0, r0, #8
   23f94:	mov	r2, #255	; 0xff
   23f98:	and	r0, r1, r2, lsl r0
   23f9c:	clz	r0, r0
   23fa0:	lsr	r0, r0, #5
   23fa4:	pop	{r4, r5, r6, r7, fp, pc}

00023fa8 <comp_with_mask_sock>:
   23fa8:	push	{fp, lr}
   23fac:	mov	fp, sp
   23fb0:	mov	r3, r0
   23fb4:	ldrh	lr, [r3], #4
   23fb8:	add	ip, r1, #8
   23fbc:	cmp	lr, #2
   23fc0:	addeq	ip, r1, #4
   23fc4:	addne	r3, r0, #8
   23fc8:	mov	r0, r3
   23fcc:	mov	r1, ip
   23fd0:	pop	{fp, lr}
   23fd4:	b	23f48 <comp_with_mask>

00023fd8 <match_ips>:
   23fd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23fdc:	add	fp, sp, #24
   23fe0:	sub	sp, sp, #832	; 0x340
   23fe4:	mov	r4, r1
   23fe8:	mov	r1, r0
   23fec:	add	r5, sp, #64	; 0x40
   23ff0:	mov	r0, r5
   23ff4:	mov	r2, #512	; 0x200
   23ff8:	bl	e510 <rb_strlcpy@plt>
   23ffc:	mov	r0, sp
   24000:	mov	r1, r4
   24004:	mov	r2, #64	; 0x40
   24008:	bl	e510 <rb_strlcpy@plt>
   2400c:	mov	r0, r5
   24010:	mov	r1, #47	; 0x2f
   24014:	bl	e27c <strrchr@plt>
   24018:	mov	r4, #0
   2401c:	cmp	r0, #0
   24020:	beq	240f4 <match_ips+0x11c>
   24024:	strb	r4, [r0], #1
   24028:	bl	e468 <atoi@plt>
   2402c:	cmp	r0, #1
   24030:	blt	240f4 <match_ips+0x11c>
   24034:	mov	r5, r0
   24038:	add	r0, sp, #64	; 0x40
   2403c:	mov	r1, #58	; 0x3a
   24040:	bl	dce8 <strchr@plt>
   24044:	mov	r6, r0
   24048:	mov	r0, sp
   2404c:	mov	r1, #58	; 0x3a
   24050:	bl	dce8 <strchr@plt>
   24054:	cmp	r6, #0
   24058:	beq	24084 <match_ips+0xac>
   2405c:	cmp	r5, #128	; 0x80
   24060:	bgt	240f4 <match_ips+0x11c>
   24064:	cmp	r0, #0
   24068:	beq	240f4 <match_ips+0x11c>
   2406c:	sub	r0, fp, #280	; 0x118
   24070:	add	r8, r0, #8
   24074:	sub	r0, fp, #152	; 0x98
   24078:	add	r7, r0, #8
   2407c:	mov	r6, #10
   24080:	b	240a8 <match_ips+0xd0>
   24084:	cmp	r5, #32
   24088:	bgt	240f4 <match_ips+0x11c>
   2408c:	cmp	r0, #0
   24090:	bne	240f4 <match_ips+0x11c>
   24094:	sub	r0, fp, #280	; 0x118
   24098:	add	r8, r0, #4
   2409c:	sub	r0, fp, #152	; 0x98
   240a0:	add	r7, r0, #4
   240a4:	mov	r6, #2
   240a8:	mov	r1, sp
   240ac:	mov	r0, r6
   240b0:	mov	r2, r7
   240b4:	bl	d820 <rb_inet_pton@plt>
   240b8:	cmp	r0, #1
   240bc:	blt	240f4 <match_ips+0x11c>
   240c0:	add	r1, sp, #64	; 0x40
   240c4:	mov	r0, r6
   240c8:	mov	r2, r8
   240cc:	bl	d820 <rb_inet_pton@plt>
   240d0:	cmp	r0, #1
   240d4:	blt	240f4 <match_ips+0x11c>
   240d8:	mov	r0, r7
   240dc:	mov	r1, r8
   240e0:	mov	r2, r5
   240e4:	bl	d0a0 <comp_with_mask@plt>
   240e8:	mov	r4, r0
   240ec:	cmp	r0, #0
   240f0:	movwne	r4, #1
   240f4:	mov	r0, r4
   240f8:	sub	sp, fp, #24
   240fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024100 <match_cidr>:
   24100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24104:	add	fp, sp, #28
   24108:	sub	sp, sp, #884	; 0x374
   2410c:	mov	r4, r1
   24110:	mov	r1, r0
   24114:	add	r5, sp, #112	; 0x70
   24118:	mov	r0, r5
   2411c:	mov	r2, #512	; 0x200
   24120:	bl	e510 <rb_strlcpy@plt>
   24124:	add	r0, sp, #1
   24128:	mov	r1, r4
   2412c:	mov	r2, #111	; 0x6f
   24130:	bl	e510 <rb_strlcpy@plt>
   24134:	mov	r0, r5
   24138:	mov	r1, #64	; 0x40
   2413c:	bl	e27c <strrchr@plt>
   24140:	cmp	r0, #0
   24144:	beq	24274 <match_cidr+0x174>
   24148:	mov	r5, r0
   2414c:	mov	r4, #0
   24150:	strb	r4, [r5], #1
   24154:	add	r0, sp, #1
   24158:	mov	r1, #64	; 0x40
   2415c:	bl	e27c <strrchr@plt>
   24160:	cmp	r0, #0
   24164:	beq	24278 <match_cidr+0x178>
   24168:	mov	r6, r0
   2416c:	mov	r4, #0
   24170:	strb	r4, [r6], #1
   24174:	mov	r0, r5
   24178:	mov	r1, #47	; 0x2f
   2417c:	bl	e27c <strrchr@plt>
   24180:	cmp	r0, #0
   24184:	beq	24278 <match_cidr+0x178>
   24188:	mov	r4, #0
   2418c:	strb	r4, [r0], #1
   24190:	bl	e468 <atoi@plt>
   24194:	cmp	r0, #1
   24198:	blt	24278 <match_cidr+0x178>
   2419c:	mov	r8, r0
   241a0:	mov	r0, r6
   241a4:	mov	r1, #58	; 0x3a
   241a8:	bl	dce8 <strchr@plt>
   241ac:	mov	r7, r0
   241b0:	mov	r0, r5
   241b4:	mov	r1, #58	; 0x3a
   241b8:	bl	dce8 <strchr@plt>
   241bc:	cmp	r7, #0
   241c0:	beq	241ec <match_cidr+0xec>
   241c4:	cmp	r8, #128	; 0x80
   241c8:	bgt	24278 <match_cidr+0x178>
   241cc:	cmp	r0, #0
   241d0:	beq	24278 <match_cidr+0x178>
   241d4:	sub	r0, fp, #288	; 0x120
   241d8:	add	r7, r0, #8
   241dc:	sub	r0, fp, #160	; 0xa0
   241e0:	add	r9, r0, #8
   241e4:	mov	sl, #10
   241e8:	b	24210 <match_cidr+0x110>
   241ec:	cmp	r8, #32
   241f0:	bgt	24278 <match_cidr+0x178>
   241f4:	cmp	r0, #0
   241f8:	bne	24278 <match_cidr+0x178>
   241fc:	sub	r0, fp, #288	; 0x120
   24200:	add	r7, r0, #4
   24204:	sub	r0, fp, #160	; 0xa0
   24208:	add	r9, r0, #4
   2420c:	mov	sl, #2
   24210:	mov	r0, sl
   24214:	mov	r1, r6
   24218:	mov	r2, r9
   2421c:	bl	d820 <rb_inet_pton@plt>
   24220:	cmp	r0, #1
   24224:	blt	24278 <match_cidr+0x178>
   24228:	mov	r0, sl
   2422c:	mov	r1, r5
   24230:	mov	r2, r7
   24234:	bl	d820 <rb_inet_pton@plt>
   24238:	cmp	r0, #1
   2423c:	blt	24278 <match_cidr+0x178>
   24240:	mov	r0, r9
   24244:	mov	r1, r7
   24248:	mov	r2, r8
   2424c:	bl	d0a0 <comp_with_mask@plt>
   24250:	cmp	r0, #0
   24254:	beq	24274 <match_cidr+0x174>
   24258:	add	r0, sp, #112	; 0x70
   2425c:	add	r1, sp, #1
   24260:	bl	e114 <match@plt>
   24264:	mov	r4, #1
   24268:	cmp	r0, #0
   2426c:	moveq	r4, #0
   24270:	b	24278 <match_cidr+0x178>
   24274:	mov	r4, #0
   24278:	mov	r0, r4
   2427c:	sub	sp, fp, #28
   24280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024284 <collapse>:
   24284:	cmp	r0, #0
   24288:	bxeq	lr
   2428c:	push	{fp, lr}
   24290:	mov	fp, sp
   24294:	mov	r1, #0
   24298:	mov	ip, #42	; 0x2a
   2429c:	mov	r3, r0
   242a0:	mov	lr, r0
   242a4:	b	242b0 <collapse+0x2c>
   242a8:	strb	r2, [lr], #1
   242ac:	bic	r1, r1, #1
   242b0:	ldrb	r2, [r3], #1
   242b4:	cmp	r2, #42	; 0x2a
   242b8:	beq	242c8 <collapse+0x44>
   242bc:	cmp	r2, #0
   242c0:	bne	242a8 <collapse+0x24>
   242c4:	b	242d8 <collapse+0x54>
   242c8:	tst	r1, #1
   242cc:	strbeq	ip, [lr], #1
   242d0:	orr	r1, r1, #1
   242d4:	b	242b0 <collapse+0x2c>
   242d8:	mov	r1, #0
   242dc:	strb	r1, [lr]
   242e0:	pop	{fp, lr}
   242e4:	bx	lr

000242e8 <collapse_esc>:
   242e8:	cmp	r0, #0
   242ec:	bxeq	lr
   242f0:	push	{r4, r5, r6, sl, fp, lr}
   242f4:	add	fp, sp, #16
   242f8:	ldrb	r4, [r0]
   242fc:	cmp	r4, #0
   24300:	mov	r3, r0
   24304:	beq	24374 <collapse_esc+0x8c>
   24308:	add	r1, r0, #1
   2430c:	mov	r2, #0
   24310:	mov	ip, #42	; 0x2a
   24314:	mov	lr, #92	; 0x5c
   24318:	mov	r3, r0
   2431c:	ands	r6, r2, #2
   24320:	uxtbeq	r5, r4
   24324:	cmpeq	r5, #42	; 0x2a
   24328:	beq	2434c <collapse_esc+0x64>
   2432c:	add	r5, r3, #1
   24330:	cmp	r6, #0
   24334:	uxtbeq	r6, r4
   24338:	cmpeq	r6, #92	; 0x5c
   2433c:	beq	2435c <collapse_esc+0x74>
   24340:	strb	r4, [r3]
   24344:	bic	r2, r2, #3
   24348:	b	24364 <collapse_esc+0x7c>
   2434c:	tst	r2, #1
   24350:	strbeq	ip, [r3], #1
   24354:	orr	r2, r2, #1
   24358:	b	24368 <collapse_esc+0x80>
   2435c:	strb	lr, [r3]
   24360:	orr	r2, r2, #2
   24364:	mov	r3, r5
   24368:	ldrb	r4, [r1], #1
   2436c:	cmp	r4, #0
   24370:	bne	2431c <collapse_esc+0x34>
   24374:	mov	r1, #0
   24378:	strb	r1, [r3]
   2437c:	pop	{r4, r5, r6, sl, fp, lr}
   24380:	bx	lr

00024384 <irccmp>:
   24384:	push	{r4, r5, fp, lr}
   24388:	add	fp, sp, #8
   2438c:	mov	ip, r0
   24390:	ldrb	r0, [r1]
   24394:	ldr	r5, [pc, #80]	; 243ec <irccmp+0x68>
   24398:	ldr	r5, [pc, r5]
   2439c:	ldrb	lr, [r5, r0]
   243a0:	ldrb	r2, [ip]
   243a4:	ldrb	r0, [r5, r2]
   243a8:	sub	r0, r0, lr
   243ac:	cmp	r2, #0
   243b0:	beq	243e8 <irccmp+0x64>
   243b4:	cmp	r0, #0
   243b8:	bne	243e8 <irccmp+0x64>
   243bc:	add	r2, ip, #1
   243c0:	add	r1, r1, #1
   243c4:	ldrb	r0, [r1], #1
   243c8:	ldrb	r0, [r5, r0]
   243cc:	ldrb	r3, [r2], #1
   243d0:	ldrb	r4, [r5, r3]
   243d4:	sub	r0, r4, r0
   243d8:	cmp	r3, #0
   243dc:	popeq	{r4, r5, fp, pc}
   243e0:	cmp	r0, #0
   243e4:	beq	243c4 <irccmp+0x40>
   243e8:	pop	{r4, r5, fp, pc}
   243ec:	.word	0x000365d0

000243f0 <ircncmp>:
   243f0:	push	{fp, lr}
   243f4:	mov	fp, sp
   243f8:	mov	ip, r0
   243fc:	ldrb	r0, [r1]
   24400:	ldr	lr, [pc, #100]	; 2446c <ircncmp+0x7c>
   24404:	ldr	lr, [pc, lr]
   24408:	ldrb	r0, [lr, r0]
   2440c:	ldrb	r3, [ip]
   24410:	ldrb	r3, [lr, r3]
   24414:	subs	r0, r3, r0
   24418:	bne	24468 <ircncmp+0x78>
   2441c:	rsb	r2, r2, #1
   24420:	add	r3, ip, #1
   24424:	add	ip, r1, #1
   24428:	mov	r0, #0
   2442c:	cmp	r2, #0
   24430:	beq	24468 <ircncmp+0x78>
   24434:	ldrb	r1, [r3]
   24438:	cmp	r1, #0
   2443c:	bne	2444c <ircncmp+0x5c>
   24440:	ldrb	r1, [ip]
   24444:	cmp	r1, #0
   24448:	popeq	{fp, pc}
   2444c:	ldrb	r0, [ip], #1
   24450:	ldrb	r0, [lr, r0]
   24454:	ldrb	r1, [r3], #1
   24458:	ldrb	r1, [lr, r1]
   2445c:	subs	r0, r1, r0
   24460:	add	r2, r2, #1
   24464:	beq	24428 <ircncmp+0x38>
   24468:	pop	{fp, pc}
   2446c:	.word	0x00036564

00024470 <matchset_for_client>:
   24470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24474:	add	fp, sp, #28
   24478:	sub	sp, sp, #28
   2447c:	mov	r4, r1
   24480:	mov	r7, r0
   24484:	add	r5, r0, #163	; 0xa3
   24488:	str	r5, [sp]
   2448c:	add	r6, r0, #88	; 0x58
   24490:	add	r9, r0, #152	; 0x98
   24494:	ldr	r1, [pc, #412]	; 24638 <matchset_for_client+0x1c8>
   24498:	add	r1, pc, r1
   2449c:	mov	r0, r4
   244a0:	mov	r2, r6
   244a4:	mov	r3, r9
   244a8:	bl	e3a8 <sprintf@plt>
   244ac:	ldrb	r0, [r7, #67]	; 0x43
   244b0:	mov	r1, #0
   244b4:	tst	r0, #1
   244b8:	bne	244e4 <matchset_for_client+0x74>
   244bc:	movw	r0, #291	; 0x123
   244c0:	add	r0, r7, r0
   244c4:	str	r0, [sp]
   244c8:	add	r0, r4, #284	; 0x11c
   244cc:	ldr	r1, [pc, #360]	; 2463c <matchset_for_client+0x1cc>
   244d0:	add	r1, pc, r1
   244d4:	mov	r2, r6
   244d8:	mov	r3, r9
   244dc:	bl	e3a8 <sprintf@plt>
   244e0:	mov	r1, #1
   244e4:	str	r6, [sp, #4]
   244e8:	str	r1, [sp, #8]
   244ec:	add	r8, r7, #64	; 0x40
   244f0:	ldr	r0, [r7, #432]	; 0x1b0
   244f4:	ldr	r6, [r0, #432]	; 0x1b0
   244f8:	mov	sl, #1
   244fc:	cmp	r6, #0
   24500:	beq	24550 <matchset_for_client+0xe0>
   24504:	mov	r0, r5
   24508:	mov	r1, r6
   2450c:	bl	d0c4 <strcmp@plt>
   24510:	cmp	r0, #0
   24514:	beq	2452c <matchset_for_client+0xbc>
   24518:	ldrb	r0, [r8, #2]
   2451c:	tst	r0, #2
   24520:	bne	24550 <matchset_for_client+0xe0>
   24524:	str	r6, [sp]
   24528:	b	24534 <matchset_for_client+0xc4>
   2452c:	add	r0, r7, #227	; 0xe3
   24530:	str	r0, [sp]
   24534:	add	r0, r4, #142	; 0x8e
   24538:	ldr	r1, [pc, #256]	; 24640 <matchset_for_client+0x1d0>
   2453c:	add	r1, pc, r1
   24540:	ldr	r2, [sp, #4]
   24544:	mov	r3, r9
   24548:	bl	e3a8 <sprintf@plt>
   2454c:	mov	sl, #2
   24550:	ldrb	r0, [r8, #3]
   24554:	tst	r0, #1
   24558:	bne	245c8 <matchset_for_client+0x158>
   2455c:	ldr	r0, [r7, #432]	; 0x1b0
   24560:	ldrh	r1, [r0, #140]!	; 0x8c
   24564:	cmp	r1, #10
   24568:	bne	24628 <matchset_for_client+0x1b8>
   2456c:	add	r1, sp, #12
   24570:	bl	d88c <rb_ipv4_from_ipv6@plt>
   24574:	cmp	r0, #0
   24578:	ldr	r6, [sp, #8]
   2457c:	beq	245cc <matchset_for_client+0x15c>
   24580:	add	r0, r6, r6, lsl #5
   24584:	add	r0, r4, r0, lsl #2
   24588:	add	r5, r0, #284	; 0x11c
   2458c:	ldr	r1, [pc, #176]	; 24644 <matchset_for_client+0x1d4>
   24590:	add	r1, pc, r1
   24594:	mov	r0, r5
   24598:	ldr	r2, [sp, #4]
   2459c:	mov	r3, r9
   245a0:	bl	e3a8 <sprintf@plt>
   245a4:	add	r1, r5, r0
   245a8:	add	r1, r1, #132	; 0x84
   245ac:	rsb	r2, r0, #132	; 0x84
   245b0:	add	r0, sp, #12
   245b4:	bl	cf50 <rb_inet_ntop_sock@plt>
   245b8:	add	r6, r6, #1
   245bc:	cmp	sl, #1
   245c0:	bls	245d4 <matchset_for_client+0x164>
   245c4:	b	245f0 <matchset_for_client+0x180>
   245c8:	ldr	r6, [sp, #8]
   245cc:	cmp	sl, #1
   245d0:	bhi	245f0 <matchset_for_client+0x180>
   245d4:	add	r0, r4, #142	; 0x8e
   245d8:	mov	r1, #0
   245dc:	mov	r2, #0
   245e0:	strb	r1, [r0, r2]
   245e4:	add	r2, r2, #142	; 0x8e
   245e8:	cmp	r2, #142	; 0x8e
   245ec:	bne	245e0 <matchset_for_client+0x170>
   245f0:	cmp	r6, #1
   245f4:	bhi	24620 <matchset_for_client+0x1b0>
   245f8:	add	r1, r6, r6, lsl #5
   245fc:	movw	r0, #64988	; 0xfddc
   24600:	movt	r0, #65535	; 0xffff
   24604:	add	r2, r0, #264	; 0x108
   24608:	sub	r1, r2, r1, lsl #2
   2460c:	mov	r2, #0
   24610:	strb	r2, [r4, -r1]
   24614:	sub	r1, r1, #132	; 0x84
   24618:	cmp	r1, r0
   2461c:	bne	24610 <matchset_for_client+0x1a0>
   24620:	sub	sp, fp, #28
   24624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24628:	ldr	r6, [sp, #8]
   2462c:	cmp	sl, #1
   24630:	bls	245d4 <matchset_for_client+0x164>
   24634:	b	245f0 <matchset_for_client+0x180>
   24638:	.word	0x0001c7c4
   2463c:	.word	0x0001c78c
   24640:	.word	0x0001c720
   24644:	.word	0x0001e872

00024648 <client_matches_mask>:
   24648:	push	{r4, r5, fp, lr}
   2464c:	add	fp, sp, #8
   24650:	mov	r4, r1
   24654:	ldr	r5, [pc, #24]	; 24674 <client_matches_mask+0x2c>
   24658:	add	r5, pc, r5
   2465c:	mov	r1, r5
   24660:	bl	e018 <matchset_for_client@plt>
   24664:	mov	r0, r5
   24668:	mov	r1, r4
   2466c:	pop	{r4, r5, fp, lr}
   24670:	b	24678 <matches_mask>
   24674:	.word	0x00041908

00024678 <matches_mask>:
   24678:	push	{r4, r5, r6, r7, fp, lr}
   2467c:	add	fp, sp, #16
   24680:	mov	r4, r1
   24684:	mov	r5, r0
   24688:	mov	r7, #0
   2468c:	mov	r6, r0
   24690:	ldrb	r0, [r6]
   24694:	cmp	r0, #0
   24698:	beq	246c0 <matches_mask+0x48>
   2469c:	mov	r0, r4
   246a0:	mov	r1, r6
   246a4:	bl	e114 <match@plt>
   246a8:	cmp	r0, #0
   246ac:	bne	2471c <matches_mask+0xa4>
   246b0:	add	r7, r7, #1
   246b4:	add	r6, r6, #142	; 0x8e
   246b8:	cmp	r7, #2
   246bc:	bcc	24690 <matches_mask+0x18>
   246c0:	add	r5, r5, #284	; 0x11c
   246c4:	mov	r7, #0
   246c8:	mov	r6, #1
   246cc:	ldrb	r0, [r5]
   246d0:	cmp	r0, #0
   246d4:	beq	24710 <matches_mask+0x98>
   246d8:	mov	r0, r4
   246dc:	mov	r1, r5
   246e0:	bl	e114 <match@plt>
   246e4:	cmp	r0, #0
   246e8:	bne	24728 <matches_mask+0xb0>
   246ec:	mov	r0, r4
   246f0:	mov	r1, r5
   246f4:	bl	d598 <match_cidr@plt>
   246f8:	cmp	r0, #0
   246fc:	bne	24728 <matches_mask+0xb0>
   24700:	add	r7, r7, #1
   24704:	add	r5, r5, #132	; 0x84
   24708:	cmp	r7, #1
   2470c:	bls	246cc <matches_mask+0x54>
   24710:	mov	r6, #0
   24714:	mov	r0, r6
   24718:	pop	{r4, r5, r6, r7, fp, pc}
   2471c:	mov	r6, #1
   24720:	mov	r0, r6
   24724:	pop	{r4, r5, r6, r7, fp, pc}
   24728:	mov	r0, r6
   2472c:	pop	{r4, r5, r6, r7, fp, pc}

00024730 <init_modules>:
   24730:	push	{r4, sl, fp, lr}
   24734:	add	fp, sp, #8
   24738:	bl	dcd0 <lt_dlinit@plt>
   2473c:	cmp	r0, #0
   24740:	bne	24760 <init_modules+0x30>
   24744:	ldr	r4, [pc, #48]	; 2477c <init_modules+0x4c>
   24748:	ldr	r4, [pc, r4]
   2474c:	ldr	r0, [r4, #4]
   24750:	bl	e564 <mod_add_path@plt>
   24754:	ldr	r0, [r4, #8]
   24758:	pop	{r4, sl, fp, lr}
   2475c:	b	24780 <mod_add_path>
   24760:	ldr	r1, [pc, #16]	; 24778 <init_modules+0x48>
   24764:	add	r1, pc, r1
   24768:	mov	r0, #0
   2476c:	bl	e0b4 <ilog@plt>
   24770:	mov	r0, #1
   24774:	bl	dc34 <exit@plt>
   24778:	.word	0x0001e8a5
   2477c:	.word	0x00036300

00024780 <mod_add_path>:
   24780:	push	{r4, sl, fp, lr}
   24784:	add	fp, sp, #8
   24788:	mov	r4, r0
   2478c:	bl	248bc <mod_find_path>
   24790:	cmp	r0, #0
   24794:	popne	{r4, sl, fp, pc}
   24798:	mov	r0, r4
   2479c:	bl	24914 <rb_strdup>
   247a0:	mov	r4, r0
   247a4:	bl	dc64 <rb_make_rb_dlink_node@plt>
   247a8:	mov	r1, r0
   247ac:	ldr	r2, [pc, #12]	; 247c0 <mod_add_path+0x40>
   247b0:	ldr	r2, [pc, r2]
   247b4:	mov	r0, r4
   247b8:	pop	{r4, sl, fp, lr}
   247bc:	b	2494c <rb_dlinkAdd>
   247c0:	.word	0x0003635c

000247c4 <mod_remember_clicaps>:
   247c4:	push	{fp, lr}
   247c8:	mov	fp, sp
   247cc:	ldr	r0, [pc, #24]	; 247ec <mod_remember_clicaps+0x28>
   247d0:	ldr	r0, [pc, r0]
   247d4:	ldr	r0, [r0]
   247d8:	bl	d904 <capability_index_mask@plt>
   247dc:	ldr	r1, [pc, #12]	; 247f0 <mod_remember_clicaps+0x2c>
   247e0:	add	r1, pc, r1
   247e4:	str	r0, [r1]
   247e8:	pop	{fp, pc}
   247ec:	.word	0x00036210
   247f0:	.word	0x000419a4

000247f4 <mod_notify_clicaps>:
   247f4:	push	{r4, r5, r6, sl, fp, lr}
   247f8:	add	fp, sp, #16
   247fc:	ldr	r6, [pc, #152]	; 2489c <mod_notify_clicaps+0xa8>
   24800:	ldr	r6, [pc, r6]
   24804:	ldr	r0, [r6]
   24808:	bl	d904 <capability_index_mask@plt>
   2480c:	ldr	r1, [pc, #140]	; 248a0 <mod_notify_clicaps+0xac>
   24810:	ldr	r1, [pc, r1]
   24814:	bic	r4, r0, r1
   24818:	bic	r1, r1, r0
   2481c:	cmp	r1, #0
   24820:	beq	24858 <mod_notify_clicaps+0x64>
   24824:	ldr	r0, [pc, #120]	; 248a4 <mod_notify_clicaps+0xb0>
   24828:	ldr	r0, [pc, r0]
   2482c:	ldr	r5, [r0]
   24830:	ldr	r0, [r6]
   24834:	bl	deec <capability_index_list@plt>
   24838:	mov	r3, r0
   2483c:	ldr	r0, [pc, #100]	; 248a8 <mod_notify_clicaps+0xb4>
   24840:	ldr	r0, [pc, r0]
   24844:	add	r2, r0, #88	; 0x58
   24848:	ldr	r1, [pc, #92]	; 248ac <mod_notify_clicaps+0xb8>
   2484c:	add	r1, pc, r1
   24850:	mov	r0, r5
   24854:	bl	dd90 <sendto_local_clients_with_capability@plt>
   24858:	cmp	r4, #0
   2485c:	popeq	{r4, r5, r6, sl, fp, pc}
   24860:	ldr	r0, [pc, #72]	; 248b0 <mod_notify_clicaps+0xbc>
   24864:	ldr	r0, [pc, r0]
   24868:	ldr	r5, [r0]
   2486c:	ldr	r0, [r6]
   24870:	mov	r1, r4
   24874:	bl	deec <capability_index_list@plt>
   24878:	mov	r3, r0
   2487c:	ldr	r0, [pc, #48]	; 248b4 <mod_notify_clicaps+0xc0>
   24880:	ldr	r0, [pc, r0]
   24884:	add	r2, r0, #88	; 0x58
   24888:	ldr	r1, [pc, #40]	; 248b8 <mod_notify_clicaps+0xc4>
   2488c:	add	r1, pc, r1
   24890:	mov	r0, r5
   24894:	pop	{r4, r5, r6, sl, fp, lr}
   24898:	b	dd90 <sendto_local_clients_with_capability@plt>
   2489c:	.word	0x000361e0
   248a0:	.word	0x00041974
   248a4:	.word	0x00036270
   248a8:	.word	0x00036318
   248ac:	.word	0x0001e7ce
   248b0:	.word	0x00036234
   248b4:	.word	0x000362d8
   248b8:	.word	0x0001e7a0

000248bc <mod_find_path>:
   248bc:	push	{r4, r5, r6, sl, fp, lr}
   248c0:	add	fp, sp, #16
   248c4:	mov	r4, r0
   248c8:	ldr	r0, [pc, #64]	; 24910 <mod_find_path+0x54>
   248cc:	ldr	r0, [pc, r0]
   248d0:	ldr	r6, [r0]
   248d4:	cmp	r6, #0
   248d8:	beq	24904 <mod_find_path+0x48>
   248dc:	ldr	r5, [r6]
   248e0:	mov	r0, r4
   248e4:	mov	r1, r5
   248e8:	bl	d0c4 <strcmp@plt>
   248ec:	cmp	r0, #0
   248f0:	moveq	r0, r5
   248f4:	popeq	{r4, r5, r6, sl, fp, pc}
   248f8:	ldr	r6, [r6, #8]
   248fc:	cmp	r6, #0
   24900:	bne	248dc <mod_find_path+0x20>
   24904:	mov	r5, #0
   24908:	mov	r0, r5
   2490c:	pop	{r4, r5, r6, sl, fp, pc}
   24910:	.word	0x00036240

00024914 <rb_strdup>:
   24914:	push	{r4, r5, fp, lr}
   24918:	add	fp, sp, #8
   2491c:	mov	r4, r0
   24920:	bl	dc94 <strlen@plt>
   24924:	add	r0, r0, #1
   24928:	bl	da90 <malloc@plt>
   2492c:	cmp	r0, #0
   24930:	beq	24948 <rb_strdup+0x34>
   24934:	mov	r5, r0
   24938:	mov	r1, r4
   2493c:	bl	d928 <strcpy@plt>
   24940:	mov	r0, r5
   24944:	pop	{r4, r5, fp, pc}
   24948:	bl	d448 <rb_outofmemory@plt>

0002494c <rb_dlinkAdd>:
   2494c:	push	{fp, lr}
   24950:	mov	fp, sp
   24954:	cmp	r0, #0
   24958:	beq	249b8 <rb_dlinkAdd+0x6c>
   2495c:	cmp	r1, #0
   24960:	beq	249d8 <rb_dlinkAdd+0x8c>
   24964:	cmp	r2, #0
   24968:	beq	249f8 <rb_dlinkAdd+0xac>
   2496c:	mov	r3, #0
   24970:	stm	r1, {r0, r3}
   24974:	ldr	r0, [r2]
   24978:	str	r0, [r1, #8]
   2497c:	ldr	r0, [r2]
   24980:	cmp	r0, #0
   24984:	beq	24994 <rb_dlinkAdd+0x48>
   24988:	add	r0, r0, #4
   2498c:	str	r1, [r0]
   24990:	b	249a4 <rb_dlinkAdd+0x58>
   24994:	mov	r0, r2
   24998:	ldr	r3, [r0, #4]!
   2499c:	cmp	r3, #0
   249a0:	streq	r1, [r0]
   249a4:	str	r1, [r2]
   249a8:	ldr	r0, [r2, #8]
   249ac:	add	r0, r0, #1
   249b0:	str	r0, [r2, #8]
   249b4:	pop	{fp, pc}
   249b8:	ldr	r0, [pc, #88]	; 24a18 <rb_dlinkAdd+0xcc>
   249bc:	add	r0, pc, r0
   249c0:	ldr	r1, [pc, #84]	; 24a1c <rb_dlinkAdd+0xd0>
   249c4:	add	r1, pc, r1
   249c8:	ldr	r3, [pc, #80]	; 24a20 <rb_dlinkAdd+0xd4>
   249cc:	add	r3, pc, r3
   249d0:	mov	r2, #143	; 0x8f
   249d4:	bl	e7e0 <__assert_fail@plt>
   249d8:	ldr	r0, [pc, #68]	; 24a24 <rb_dlinkAdd+0xd8>
   249dc:	add	r0, pc, r0
   249e0:	ldr	r1, [pc, #64]	; 24a28 <rb_dlinkAdd+0xdc>
   249e4:	add	r1, pc, r1
   249e8:	ldr	r3, [pc, #60]	; 24a2c <rb_dlinkAdd+0xe0>
   249ec:	add	r3, pc, r3
   249f0:	mov	r2, #144	; 0x90
   249f4:	bl	e7e0 <__assert_fail@plt>
   249f8:	ldr	r0, [pc, #48]	; 24a30 <rb_dlinkAdd+0xe4>
   249fc:	add	r0, pc, r0
   24a00:	ldr	r1, [pc, #44]	; 24a34 <rb_dlinkAdd+0xe8>
   24a04:	add	r1, pc, r1
   24a08:	ldr	r3, [pc, #40]	; 24a38 <rb_dlinkAdd+0xec>
   24a0c:	add	r3, pc, r3
   24a10:	mov	r2, #145	; 0x91
   24a14:	bl	e7e0 <__assert_fail@plt>
   24a18:	.word	0x0001bc55
   24a1c:	.word	0x0001bbf2
   24a20:	.word	0x0001bc52
   24a24:	.word	0x0001bbd0
   24a28:	.word	0x0001bbd2
   24a2c:	.word	0x0001bc32
   24a30:	.word	0x00021449
   24a34:	.word	0x0001bbb2
   24a38:	.word	0x0001bc12

00024a3c <mod_clear_paths>:
   24a3c:	push	{r4, r5, r6, sl, fp, lr}
   24a40:	add	fp, sp, #16
   24a44:	ldr	r5, [pc, #64]	; 24a8c <mod_clear_paths+0x50>
   24a48:	ldr	r5, [pc, r5]
   24a4c:	ldr	r4, [r5]
   24a50:	cmp	r4, #0
   24a54:	beq	24a78 <mod_clear_paths+0x3c>
   24a58:	ldr	r0, [r4]
   24a5c:	ldr	r6, [r4, #8]
   24a60:	bl	24a90 <rb_free>
   24a64:	mov	r0, r4
   24a68:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   24a6c:	cmp	r6, #0
   24a70:	mov	r4, r6
   24a74:	bne	24a58 <mod_clear_paths+0x1c>
   24a78:	mov	r0, #0
   24a7c:	str	r0, [r5]
   24a80:	str	r0, [r5, #4]
   24a84:	str	r0, [r5, #8]
   24a88:	pop	{r4, r5, r6, sl, fp, pc}
   24a8c:	.word	0x000360c4

00024a90 <rb_free>:
   24a90:	cmp	r0, #0
   24a94:	bxeq	lr
   24a98:	b	d328 <free@plt>

00024a9c <findmodule_byname>:
   24a9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24aa0:	add	fp, sp, #24
   24aa4:	sub	sp, sp, #8
   24aa8:	sub	sp, sp, #4096	; 0x1000
   24aac:	mov	r4, r0
   24ab0:	add	r5, sp, #7
   24ab4:	mov	r0, r5
   24ab8:	mov	r1, r4
   24abc:	movw	r2, #4097	; 0x1001
   24ac0:	bl	e510 <rb_strlcpy@plt>
   24ac4:	ldr	r1, [pc, #108]	; 24b38 <findmodule_byname+0x9c>
   24ac8:	add	r1, pc, r1
   24acc:	mov	r0, r5
   24ad0:	movw	r2, #4097	; 0x1001
   24ad4:	bl	e7d4 <rb_strlcat@plt>
   24ad8:	ldr	r0, [pc, #92]	; 24b3c <findmodule_byname+0xa0>
   24adc:	ldr	r0, [pc, r0]
   24ae0:	ldr	r7, [r0]
   24ae4:	cmp	r7, #0
   24ae8:	beq	24b28 <findmodule_byname+0x8c>
   24aec:	add	r5, sp, #7
   24af0:	ldr	r6, [r7]
   24af4:	ldr	r0, [r6]
   24af8:	mov	r1, r4
   24afc:	bl	e750 <irccmp@plt>
   24b00:	cmp	r0, #0
   24b04:	beq	24b2c <findmodule_byname+0x90>
   24b08:	ldr	r0, [r6]
   24b0c:	mov	r1, r5
   24b10:	bl	e750 <irccmp@plt>
   24b14:	cmp	r0, #0
   24b18:	beq	24b2c <findmodule_byname+0x90>
   24b1c:	ldr	r7, [r7, #8]
   24b20:	cmp	r7, #0
   24b24:	bne	24af0 <findmodule_byname+0x54>
   24b28:	mov	r6, #0
   24b2c:	mov	r0, r6
   24b30:	sub	sp, fp, #24
   24b34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   24b38:	.word	0x0001e576
   24b3c:	.word	0x00036014

00024b40 <load_all_modules>:
   24b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b44:	add	fp, sp, #28
   24b48:	sub	sp, sp, #20
   24b4c:	sub	sp, sp, #4096	; 0x1000
   24b50:	mov	sl, r0
   24b54:	ldr	r8, [pc, #232]	; 24c44 <load_all_modules+0x104>
   24b58:	ldr	r8, [pc, r8]
   24b5c:	ldr	r0, [r8, #8]
   24b60:	bl	d9f4 <opendir@plt>
   24b64:	cmp	r0, #0
   24b68:	beq	24c14 <load_all_modules+0xd4>
   24b6c:	mov	r5, r0
   24b70:	bl	e264 <readdir@plt>
   24b74:	cmp	r0, #0
   24b78:	beq	24c04 <load_all_modules+0xc4>
   24b7c:	mov	r7, r0
   24b80:	ldr	r6, [pc, #192]	; 24c48 <load_all_modules+0x108>
   24b84:	add	r6, pc, r6
   24b88:	add	r9, sp, #15
   24b8c:	add	r4, r7, #11
   24b90:	mov	r0, r4
   24b94:	bl	dc94 <strlen@plt>
   24b98:	cmp	r0, #4
   24b9c:	bcc	24bf0 <load_all_modules+0xb0>
   24ba0:	add	r0, r7, r0
   24ba4:	add	r0, r0, #8
   24ba8:	mov	r1, r6
   24bac:	mov	r2, #3
   24bb0:	bl	d538 <rb_strncasecmp@plt>
   24bb4:	cmp	r0, #0
   24bb8:	bne	24bf0 <load_all_modules+0xb0>
   24bbc:	ldr	r3, [r8, #8]
   24bc0:	mov	r0, #47	; 0x2f
   24bc4:	stm	sp, {r0, r4}
   24bc8:	mov	r0, r9
   24bcc:	movw	r1, #4097	; 0x1001
   24bd0:	ldr	r2, [pc, #116]	; 24c4c <load_all_modules+0x10c>
   24bd4:	add	r2, pc, r2
   24bd8:	bl	de74 <snprintf@plt>
   24bdc:	mov	r0, r9
   24be0:	mov	r1, sl
   24be4:	mov	r2, #2
   24be8:	mov	r3, #0
   24bec:	bl	dfa0 <load_a_module@plt>
   24bf0:	mov	r0, r5
   24bf4:	bl	e264 <readdir@plt>
   24bf8:	mov	r7, r0
   24bfc:	cmp	r0, #0
   24c00:	bne	24b8c <load_all_modules+0x4c>
   24c04:	mov	r0, r5
   24c08:	bl	e75c <closedir@plt>
   24c0c:	sub	sp, fp, #28
   24c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c14:	ldr	r4, [r8, #8]
   24c18:	bl	de38 <__errno_location@plt>
   24c1c:	ldr	r0, [r0]
   24c20:	bl	dacc <strerror@plt>
   24c24:	mov	r3, r0
   24c28:	ldr	r1, [pc, #32]	; 24c50 <load_all_modules+0x110>
   24c2c:	add	r1, pc, r1
   24c30:	mov	r0, #0
   24c34:	mov	r2, r4
   24c38:	bl	e0b4 <ilog@plt>
   24c3c:	sub	sp, fp, #28
   24c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c44:	.word	0x00035ef0
   24c48:	.word	0x0001e4ba
   24c4c:	.word	0x0001bc0d
   24c50:	.word	0x0001e416

00024c54 <load_a_module>:
   24c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c58:	add	fp, sp, #28
   24c5c:	sub	sp, sp, #36	; 0x24
   24c60:	mov	sl, r3
   24c64:	mov	r5, r2
   24c68:	mov	r8, r1
   24c6c:	mov	r6, r0
   24c70:	bl	da3c <rb_basename@plt>
   24c74:	mov	r4, r0
   24c78:	ldr	r1, [pc, #1492]	; 25254 <load_a_module+0x600>
   24c7c:	add	r1, pc, r1
   24c80:	bl	e3b4 <rb_strcasestr@plt>
   24c84:	cmp	r0, #0
   24c88:	movne	r1, #0
   24c8c:	strbne	r1, [r0]
   24c90:	mov	r0, r6
   24c94:	bl	d22c <lt_dlopenext@plt>
   24c98:	cmp	r0, #0
   24c9c:	beq	24dc0 <load_a_module+0x16c>
   24ca0:	mov	r9, r0
   24ca4:	ldr	r1, [pc, #1456]	; 2525c <load_a_module+0x608>
   24ca8:	add	r1, pc, r1
   24cac:	bl	e5b8 <lt_dlsym@plt>
   24cb0:	mov	r7, r0
   24cb4:	cmp	r0, #0
   24cb8:	bne	24cd8 <load_a_module+0x84>
   24cbc:	ldr	r1, [pc, #1436]	; 25260 <load_a_module+0x60c>
   24cc0:	add	r1, pc, r1
   24cc4:	mov	r0, r9
   24cc8:	bl	e5b8 <lt_dlsym@plt>
   24ccc:	mov	r7, r0
   24cd0:	cmp	r0, #0
   24cd4:	beq	24e04 <load_a_module+0x1b0>
   24cd8:	ldr	r0, [r7]
   24cdc:	movw	r1, #19777	; 0x4d41
   24ce0:	cmp	r1, r0, lsr #16
   24ce4:	bne	24e04 <load_a_module+0x1b0>
   24ce8:	uxth	r3, r0
   24cec:	cmp	r3, #2
   24cf0:	beq	24e38 <load_a_module+0x1e4>
   24cf4:	cmp	r3, #1
   24cf8:	bne	250ec <load_a_module+0x498>
   24cfc:	ldr	r0, [r7, #4]
   24d00:	cmp	r0, #0
   24d04:	beq	24d14 <load_a_module+0xc0>
   24d08:	blx	r0
   24d0c:	cmn	r0, #1
   24d10:	beq	25198 <load_a_module+0x544>
   24d14:	str	r5, [sp, #28]
   24d18:	ldr	r1, [r7, #12]
   24d1c:	cmp	r1, #0
   24d20:	ldrne	r0, [r1]
   24d24:	cmpne	r0, #0
   24d28:	beq	24d40 <load_a_module+0xec>
   24d2c:	add	r5, r1, #4
   24d30:	bl	e6b4 <mod_add_cmd@plt>
   24d34:	ldr	r0, [r5], #4
   24d38:	cmp	r0, #0
   24d3c:	bne	24d30 <load_a_module+0xdc>
   24d40:	ldr	r1, [r7, #16]
   24d44:	cmp	r1, #0
   24d48:	ldrne	r0, [r1]
   24d4c:	cmpne	r0, #0
   24d50:	beq	24d74 <load_a_module+0x120>
   24d54:	add	r5, r1, #4
   24d58:	bl	dbbc <register_hook@plt>
   24d5c:	ldr	r1, [r5]
   24d60:	str	r0, [r1]
   24d64:	ldr	r0, [r5, #4]
   24d68:	add	r5, r5, #8
   24d6c:	cmp	r0, #0
   24d70:	bne	24d58 <load_a_module+0x104>
   24d74:	str	sl, [sp, #20]
   24d78:	str	r6, [sp, #24]
   24d7c:	mov	r6, r8
   24d80:	str	r9, [sp, #32]
   24d84:	ldr	r1, [r7, #20]
   24d88:	cmp	r1, #0
   24d8c:	ldrne	r0, [r1]
   24d90:	cmpne	r0, #0
   24d94:	beq	24db4 <load_a_module+0x160>
   24d98:	add	r5, r1, #12
   24d9c:	ldr	r1, [r5, #-8]
   24da0:	bl	e348 <add_hook@plt>
   24da4:	ldr	r0, [r5]
   24da8:	add	r5, r5, #12
   24dac:	cmp	r0, #0
   24db0:	bne	24d9c <load_a_module+0x148>
   24db4:	ldr	r5, [r7, #24]
   24db8:	mov	r9, #0
   24dbc:	b	24fd4 <load_a_module+0x380>
   24dc0:	bl	d2a4 <lt_dlerror@plt>
   24dc4:	mov	r5, r0
   24dc8:	str	r0, [sp]
   24dcc:	mov	r6, #0
   24dd0:	ldr	r7, [pc, #1152]	; 25258 <load_a_module+0x604>
   24dd4:	add	r7, pc, r7
   24dd8:	mov	r0, #256	; 0x100
   24ddc:	mov	r1, #0
   24de0:	mov	r2, r7
   24de4:	mov	r3, r4
   24de8:	bl	d640 <sendto_realops_snomask@plt>
   24dec:	mov	r0, #0
   24df0:	mov	r1, r7
   24df4:	mov	r2, r4
   24df8:	mov	r3, r5
   24dfc:	bl	e0b4 <ilog@plt>
   24e00:	b	2512c <load_a_module+0x4d8>
   24e04:	mov	r6, #0
   24e08:	ldr	r7, [pc, #1108]	; 25264 <load_a_module+0x610>
   24e0c:	add	r7, pc, r7
   24e10:	mov	r0, #256	; 0x100
   24e14:	mov	r1, #0
   24e18:	mov	r2, r7
   24e1c:	mov	r3, r4
   24e20:	bl	d640 <sendto_realops_snomask@plt>
   24e24:	mov	r0, #0
   24e28:	mov	r1, r7
   24e2c:	mov	r2, r4
   24e30:	bl	e0b4 <ilog@plt>
   24e34:	b	25124 <load_a_module+0x4d0>
   24e38:	str	sl, [sp, #20]
   24e3c:	str	r6, [sp, #24]
   24e40:	mov	r6, r8
   24e44:	str	r5, [sp, #28]
   24e48:	ldr	r0, [r7, #24]
   24e4c:	cmp	r0, #0
   24e50:	ldrne	r1, [r0, #4]
   24e54:	cmpne	r1, #0
   24e58:	beq	24eec <load_a_module+0x298>
   24e5c:	add	r0, r0, #12
   24e60:	ldr	r5, [pc, #1028]	; 2526c <load_a_module+0x618>
   24e64:	ldr	r5, [pc, r5]
   24e68:	ldr	r8, [pc, #1024]	; 25270 <load_a_module+0x61c>
   24e6c:	add	r8, pc, r8
   24e70:	mov	sl, r0
   24e74:	ldr	r3, [r0, #-12]
   24e78:	cmp	r3, #1
   24e7c:	mov	r0, r5
   24e80:	beq	24e94 <load_a_module+0x240>
   24e84:	cmp	r3, #2
   24e88:	bne	24eb0 <load_a_module+0x25c>
   24e8c:	ldr	r0, [pc, #992]	; 25274 <load_a_module+0x620>
   24e90:	ldr	r0, [pc, r0]
   24e94:	ldr	r2, [sl, #-4]
   24e98:	ldr	r0, [r0]
   24e9c:	bl	de14 <capability_put@plt>
   24ea0:	ldr	r1, [sl]
   24ea4:	cmp	r1, #0
   24ea8:	strne	r0, [r1]
   24eac:	b	24edc <load_a_module+0x288>
   24eb0:	stm	sp, {r1, r4}
   24eb4:	mov	r0, #256	; 0x100
   24eb8:	mov	r1, #0
   24ebc:	mov	r2, r8
   24ec0:	bl	d640 <sendto_realops_snomask@plt>
   24ec4:	ldr	r2, [sl, #-12]
   24ec8:	ldr	r3, [sl, #-8]
   24ecc:	str	r4, [sp]
   24ed0:	mov	r0, #0
   24ed4:	mov	r1, r8
   24ed8:	bl	e0b4 <ilog@plt>
   24edc:	add	r0, sl, #16
   24ee0:	ldr	r1, [sl, #8]
   24ee4:	cmp	r1, #0
   24ee8:	bne	24e70 <load_a_module+0x21c>
   24eec:	ldr	r0, [r7, #4]
   24ef0:	cmp	r0, #0
   24ef4:	beq	24f04 <load_a_module+0x2b0>
   24ef8:	blx	r0
   24efc:	cmn	r0, #1
   24f00:	beq	251c4 <load_a_module+0x570>
   24f04:	ldr	r0, [r7, #36]	; 0x24
   24f08:	cmp	r0, #0
   24f0c:	ldrne	r1, [pc, #880]	; 25284 <load_a_module+0x630>
   24f10:	ldrne	r1, [pc, r1]
   24f14:	ldrne	r1, [r1]
   24f18:	cmpne	r1, r0
   24f1c:	bne	25140 <load_a_module+0x4ec>
   24f20:	ldr	r1, [r7, #12]
   24f24:	cmp	r1, #0
   24f28:	ldrne	r0, [r1]
   24f2c:	cmpne	r0, #0
   24f30:	beq	24f48 <load_a_module+0x2f4>
   24f34:	add	r5, r1, #4
   24f38:	bl	e6b4 <mod_add_cmd@plt>
   24f3c:	ldr	r0, [r5], #4
   24f40:	cmp	r0, #0
   24f44:	bne	24f38 <load_a_module+0x2e4>
   24f48:	ldr	r1, [r7, #16]
   24f4c:	cmp	r1, #0
   24f50:	ldrne	r0, [r1]
   24f54:	cmpne	r0, #0
   24f58:	beq	24f7c <load_a_module+0x328>
   24f5c:	add	r5, r1, #4
   24f60:	bl	dbbc <register_hook@plt>
   24f64:	ldr	r1, [r5]
   24f68:	str	r0, [r1]
   24f6c:	ldr	r0, [r5, #4]
   24f70:	add	r5, r5, #8
   24f74:	cmp	r0, #0
   24f78:	bne	24f60 <load_a_module+0x30c>
   24f7c:	str	r9, [sp, #32]
   24f80:	ldr	r1, [r7, #20]
   24f84:	cmp	r1, #0
   24f88:	ldrne	r0, [r1]
   24f8c:	cmpne	r0, #0
   24f90:	beq	24fb8 <load_a_module+0x364>
   24f94:	add	r5, r1, #8
   24f98:	ldmda	r5, {r1, r2}
   24f9c:	cmp	r2, #0
   24fa0:	movweq	r2, #30
   24fa4:	bl	e24c <add_hook_prio@plt>
   24fa8:	ldr	r0, [r5, #4]
   24fac:	add	r5, r5, #12
   24fb0:	cmp	r0, #0
   24fb4:	bne	24f98 <load_a_module+0x344>
   24fb8:	ldr	r0, [r7, #28]
   24fbc:	ldr	r9, [r7, #32]
   24fc0:	ldr	r1, [pc, #708]	; 2528c <load_a_module+0x638>
   24fc4:	ldr	r1, [pc, r1]
   24fc8:	ldr	r5, [r1]
   24fcc:	cmp	r0, #0
   24fd0:	movne	r5, r0
   24fd4:	bl	257ec <rb_malloc>
   24fd8:	mov	sl, r0
   24fdc:	ldr	r8, [pc, #684]	; 25290 <load_a_module+0x63c>
   24fe0:	add	r8, pc, r8
   24fe4:	cmp	r5, #0
   24fe8:	movne	r8, r5
   24fec:	ldr	r5, [pc, #672]	; 25294 <load_a_module+0x640>
   24ff0:	add	r5, pc, r5
   24ff4:	cmp	r9, #0
   24ff8:	movne	r5, r9
   24ffc:	str	r8, [r0, #4]
   25000:	str	r5, [r0, #8]
   25004:	ldr	r0, [sp, #32]
   25008:	str	r0, [sl, #12]
   2500c:	ldr	r0, [sp, #20]
   25010:	str	r0, [sl, #16]
   25014:	mov	r0, r4
   25018:	bl	24914 <rb_strdup>
   2501c:	str	r0, [sl]
   25020:	str	r7, [sl, #32]
   25024:	ldrh	r0, [r7]
   25028:	ldr	r9, [sp, #28]
   2502c:	str	r9, [sl, #20]
   25030:	str	r0, [sl, #28]
   25034:	ldr	r0, [sp, #24]
   25038:	bl	24914 <rb_strdup>
   2503c:	str	r0, [sl, #24]
   25040:	add	r1, sl, #36	; 0x24
   25044:	ldr	r2, [pc, #588]	; 25298 <load_a_module+0x644>
   25048:	ldr	r2, [pc, r2]
   2504c:	mov	r0, sl
   25050:	bl	2494c <rb_dlinkAdd>
   25054:	cmp	r6, #0
   25058:	beq	250dc <load_a_module+0x488>
   2505c:	ldrh	r0, [r7]
   25060:	ldr	r1, [pc, #564]	; 2529c <load_a_module+0x648>
   25064:	add	r1, pc, r1
   25068:	ldr	r2, [pc, #560]	; 252a0 <load_a_module+0x64c>
   2506c:	add	r2, pc, r2
   25070:	cmp	r9, #2
   25074:	moveq	r2, r1
   25078:	ldr	r6, [pc, #548]	; 252a4 <load_a_module+0x650>
   2507c:	add	r6, pc, r6
   25080:	cmp	r9, #1
   25084:	movne	r6, r2
   25088:	str	r8, [sp]
   2508c:	stmib	sp, {r0, r6}
   25090:	str	r5, [sp, #12]
   25094:	ldr	sl, [sp, #32]
   25098:	str	sl, [sp, #16]
   2509c:	ldr	r9, [pc, #516]	; 252a8 <load_a_module+0x654>
   250a0:	add	r9, pc, r9
   250a4:	mov	r0, #256	; 0x100
   250a8:	mov	r1, #0
   250ac:	mov	r2, r9
   250b0:	mov	r3, r4
   250b4:	bl	d640 <sendto_realops_snomask@plt>
   250b8:	ldrh	r0, [r7]
   250bc:	stm	sp, {r0, r6}
   250c0:	str	r5, [sp, #8]
   250c4:	str	sl, [sp, #12]
   250c8:	mov	r0, #0
   250cc:	mov	r1, r9
   250d0:	mov	r2, r4
   250d4:	mov	r3, r8
   250d8:	bl	e0b4 <ilog@plt>
   250dc:	mov	r0, r4
   250e0:	bl	24a90 <rb_free>
   250e4:	mov	r6, #1
   250e8:	b	25134 <load_a_module+0x4e0>
   250ec:	mov	r6, #0
   250f0:	ldr	r8, [pc, #436]	; 252ac <load_a_module+0x658>
   250f4:	add	r8, pc, r8
   250f8:	mov	r0, #0
   250fc:	mov	r1, r8
   25100:	mov	r2, r4
   25104:	bl	e0b4 <ilog@plt>
   25108:	ldr	r0, [r7]
   2510c:	str	r0, [sp]
   25110:	mov	r0, #256	; 0x100
   25114:	mov	r1, #0
   25118:	mov	r2, r8
   2511c:	mov	r3, r4
   25120:	bl	d640 <sendto_realops_snomask@plt>
   25124:	mov	r0, r9
   25128:	bl	cf98 <lt_dlclose@plt>
   2512c:	mov	r0, r4
   25130:	bl	24a90 <rb_free>
   25134:	mov	r0, r6
   25138:	sub	sp, fp, #28
   2513c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25140:	sub	r0, r1, r0
   25144:	movw	r1, #42753	; 0xa701
   25148:	movt	r1, #118	; 0x76
   2514c:	cmp	r0, r1
   25150:	blt	24f20 <load_a_module+0x2cc>
   25154:	movw	r1, #17671	; 0x4507
   25158:	movt	r1, #49710	; 0xc22e
   2515c:	umull	r0, r1, r0, r1
   25160:	lsr	r8, r1, #16
   25164:	ldr	r5, [pc, #284]	; 25288 <load_a_module+0x634>
   25168:	add	r5, pc, r5
   2516c:	mov	r0, r5
   25170:	mov	r1, r4
   25174:	mov	r2, r8
   25178:	bl	d3ac <iwarn@plt>
   2517c:	str	r8, [sp]
   25180:	mov	r0, #256	; 0x100
   25184:	mov	r1, #0
   25188:	mov	r2, r5
   2518c:	mov	r3, r4
   25190:	bl	d640 <sendto_realops_snomask@plt>
   25194:	b	24f20 <load_a_module+0x2cc>
   25198:	mov	r6, #0
   2519c:	ldr	r7, [pc, #196]	; 25268 <load_a_module+0x614>
   251a0:	add	r7, pc, r7
   251a4:	mov	r0, #0
   251a8:	mov	r1, r7
   251ac:	mov	r2, r4
   251b0:	bl	e0b4 <ilog@plt>
   251b4:	mov	r0, #256	; 0x100
   251b8:	mov	r1, #0
   251bc:	mov	r2, r7
   251c0:	b	2511c <load_a_module+0x4c8>
   251c4:	mov	r6, #0
   251c8:	ldr	r8, [pc, #168]	; 25278 <load_a_module+0x624>
   251cc:	add	r8, pc, r8
   251d0:	mov	r0, #0
   251d4:	mov	r1, r8
   251d8:	mov	r2, r4
   251dc:	bl	e0b4 <ilog@plt>
   251e0:	mov	r0, #256	; 0x100
   251e4:	mov	r1, #0
   251e8:	mov	r2, r8
   251ec:	mov	r3, r4
   251f0:	bl	d640 <sendto_realops_snomask@plt>
   251f4:	ldr	r5, [r7, #24]
   251f8:	cmp	r5, #0
   251fc:	ldrne	r1, [r5, #4]
   25200:	cmpne	r1, #0
   25204:	beq	25124 <load_a_module+0x4d0>
   25208:	ldr	r7, [pc, #108]	; 2527c <load_a_module+0x628>
   2520c:	ldr	r7, [pc, r7]
   25210:	ldr	r8, [pc, #104]	; 25280 <load_a_module+0x62c>
   25214:	ldr	r8, [pc, r8]
   25218:	ldr	r0, [r5]
   2521c:	cmp	r0, #1
   25220:	mov	r2, r7
   25224:	beq	25234 <load_a_module+0x5e0>
   25228:	cmp	r0, #2
   2522c:	bne	2523c <load_a_module+0x5e8>
   25230:	mov	r2, r8
   25234:	ldr	r0, [r2]
   25238:	bl	e30c <capability_orphan@plt>
   2523c:	add	r0, r5, #16
   25240:	ldr	r1, [r5, #20]
   25244:	cmp	r1, #0
   25248:	mov	r5, r0
   2524c:	bne	25218 <load_a_module+0x5c4>
   25250:	b	25124 <load_a_module+0x4d0>
   25254:	.word	0x0001e3c2
   25258:	.word	0x0001e3b3
   2525c:	.word	0x0001e4fc
   25260:	.word	0x0001e4e3
   25264:	.word	0x0001e3a1
   25268:	.word	0x0001e03e
   2526c:	.word	0x00035b7c
   25270:	.word	0x0001e39b
   25274:	.word	0x000359f0
   25278:	.word	0x0001e012
   2527c:	.word	0x000357d4
   25280:	.word	0x0003566c
   25284:	.word	0x00035a84
   25288:	.word	0x0001e0ef
   2528c:	.word	0x000358cc
   25290:	.word	0x000368c8
   25294:	.word	0x000368c2
   25298:	.word	0x00035aa8
   2529c:	.word	0x0001e286
   252a0:	.word	0x0001bfa0
   252a4:	.word	0x0001e264
   252a8:	.word	0x0001e24f
   252ac:	.word	0x0001e1b9

000252b0 <load_core_modules>:
   252b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252b4:	add	fp, sp, #28
   252b8:	sub	sp, sp, #12
   252bc:	sub	sp, sp, #4096	; 0x1000
   252c0:	mov	r4, r0
   252c4:	mov	r6, #0
   252c8:	ldr	sl, [pc, #132]	; 25354 <load_core_modules+0xa4>
   252cc:	ldr	sl, [pc, sl]
   252d0:	mov	r9, #47	; 0x2f
   252d4:	add	r5, sp, #8
   252d8:	ldr	r8, [pc, #120]	; 25358 <load_core_modules+0xa8>
   252dc:	add	r8, pc, r8
   252e0:	b	252f4 <load_core_modules+0x44>
   252e4:	add	r6, r6, #1
   252e8:	cmp	r6, #14
   252ec:	subeq	sp, fp, #28
   252f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252f4:	ldr	r0, [pc, #96]	; 2535c <load_core_modules+0xac>
   252f8:	add	r0, pc, r0
   252fc:	ldr	r7, [r0, r6, lsl #2]
   25300:	ldr	r3, [sl, #4]
   25304:	str	r9, [sp]
   25308:	str	r7, [sp, #4]
   2530c:	mov	r0, r5
   25310:	mov	r1, #4096	; 0x1000
   25314:	mov	r2, r8
   25318:	bl	de74 <snprintf@plt>
   2531c:	mov	r0, r5
   25320:	mov	r1, r4
   25324:	mov	r2, #2
   25328:	mov	r3, #1
   2532c:	bl	dfa0 <load_a_module@plt>
   25330:	cmp	r0, #0
   25334:	bne	252e4 <load_core_modules+0x34>
   25338:	ldr	r1, [pc, #32]	; 25360 <load_core_modules+0xb0>
   2533c:	add	r1, pc, r1
   25340:	mov	r0, #0
   25344:	mov	r2, r7
   25348:	bl	e0b4 <ilog@plt>
   2534c:	mov	r0, #1
   25350:	bl	dc34 <exit@plt>
   25354:	.word	0x0003577c
   25358:	.word	0x0001b505
   2535c:	.word	0x00034b48
   25360:	.word	0x0001dd29

00025364 <load_one_module>:
   25364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25368:	add	fp, sp, #28
   2536c:	sub	sp, sp, #116	; 0x74
   25370:	sub	sp, sp, #4096	; 0x1000
   25374:	mov	r5, r2
   25378:	mov	r6, r1
   2537c:	mov	r4, r0
   25380:	ldr	r0, [pc, #320]	; 254c8 <load_one_module+0x164>
   25384:	ldr	r0, [pc, r0]
   25388:	ldrb	r0, [r0]
   2538c:	cmp	r0, #0
   25390:	beq	253a4 <load_one_module+0x40>
   25394:	ldr	r0, [pc, #304]	; 254cc <load_one_module+0x168>
   25398:	add	r0, pc, r0
   2539c:	mov	r1, r4
   253a0:	bl	d10c <inotice@plt>
   253a4:	str	r5, [sp, #20]
   253a8:	cmp	r5, #0
   253ac:	movwne	r6, #2
   253b0:	str	r6, [sp, #16]
   253b4:	ldr	r0, [pc, #276]	; 254d0 <load_one_module+0x16c>
   253b8:	ldr	r0, [pc, r0]
   253bc:	ldr	r8, [r0]
   253c0:	cmp	r8, #0
   253c4:	beq	25460 <load_one_module+0xfc>
   253c8:	ldr	r9, [pc, #260]	; 254d4 <load_one_module+0x170>
   253cc:	add	r9, pc, r9
   253d0:	mov	sl, #47	; 0x2f
   253d4:	add	r7, sp, #112	; 0x70
   253d8:	ldr	r5, [pc, #248]	; 254d8 <load_one_module+0x174>
   253dc:	add	r5, pc, r5
   253e0:	ldr	r6, [pc, #244]	; 254dc <load_one_module+0x178>
   253e4:	add	r6, pc, r6
   253e8:	ldr	r3, [r8]
   253ec:	str	sl, [sp]
   253f0:	stmib	sp, {r4, r9}
   253f4:	mov	r0, r7
   253f8:	mov	r1, #4096	; 0x1000
   253fc:	mov	r2, r5
   25400:	bl	de74 <snprintf@plt>
   25404:	mov	r0, r7
   25408:	mov	r1, r6
   2540c:	bl	cfc8 <strstr@plt>
   25410:	cmp	r0, #0
   25414:	bne	25454 <load_one_module+0xf0>
   25418:	mov	r0, r7
   2541c:	ldr	r1, [pc, #188]	; 254e0 <load_one_module+0x17c>
   25420:	add	r1, pc, r1
   25424:	bl	cfc8 <strstr@plt>
   25428:	cmp	r0, #0
   2542c:	bne	25454 <load_one_module+0xf0>
   25430:	mov	r0, r7
   25434:	add	r1, sp, #24
   25438:	bl	40210 <__stat>
   2543c:	cmp	r0, #0
   25440:	bne	25454 <load_one_module+0xf0>
   25444:	ldr	r0, [sp, #40]	; 0x28
   25448:	and	r0, r0, #61440	; 0xf000
   2544c:	cmp	r0, #32768	; 0x8000
   25450:	beq	254ac <load_one_module+0x148>
   25454:	ldr	r8, [r8, #8]
   25458:	cmp	r8, #0
   2545c:	bne	253e8 <load_one_module+0x84>
   25460:	mov	r5, #0
   25464:	ldr	r2, [pc, #120]	; 254e4 <load_one_module+0x180>
   25468:	add	r2, pc, r2
   2546c:	mov	r0, #256	; 0x100
   25470:	mov	r1, #0
   25474:	mov	r3, r4
   25478:	bl	d640 <sendto_realops_snomask@plt>
   2547c:	ldr	r0, [pc, #100]	; 254e8 <load_one_module+0x184>
   25480:	ldr	r0, [pc, r0]
   25484:	ldrb	r0, [r0]
   25488:	cmp	r0, #0
   2548c:	beq	254a0 <load_one_module+0x13c>
   25490:	ldr	r0, [pc, #84]	; 254ec <load_one_module+0x188>
   25494:	add	r0, pc, r0
   25498:	mov	r1, r4
   2549c:	bl	d64c <ierror@plt>
   254a0:	mov	r0, r5
   254a4:	sub	sp, fp, #28
   254a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   254ac:	add	r0, sp, #112	; 0x70
   254b0:	mov	r1, #1
   254b4:	ldr	r2, [sp, #16]
   254b8:	ldr	r3, [sp, #20]
   254bc:	bl	dfa0 <load_a_module@plt>
   254c0:	mov	r5, r0
   254c4:	b	254a0 <load_one_module+0x13c>
   254c8:	.word	0x000355c4
   254cc:	.word	0x0001dcfc
   254d0:	.word	0x00035754
   254d4:	.word	0x0001dc72
   254d8:	.word	0x0001dcce
   254dc:	.word	0x0001dccf
   254e0:	.word	0x0001dc97
   254e4:	.word	0x0001dc53
   254e8:	.word	0x000354c8
   254ec:	.word	0x0001dc3f

000254f0 <unload_one_module>:
   254f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   254f4:	add	fp, sp, #28
   254f8:	sub	sp, sp, #12
   254fc:	mov	r8, r1
   25500:	mov	r9, r0
   25504:	bl	d160 <findmodule_byname@plt>
   25508:	cmp	r0, #0
   2550c:	beq	25598 <unload_one_module+0xa8>
   25510:	mov	r6, r0
   25514:	ldr	r3, [r0, #28]
   25518:	cmp	r3, #2
   2551c:	beq	255a0 <unload_one_module+0xb0>
   25520:	cmp	r3, #1
   25524:	bne	256ac <unload_one_module+0x1bc>
   25528:	ldr	r4, [r6, #32]
   2552c:	ldr	r1, [r4, #12]
   25530:	cmp	r1, #0
   25534:	ldrne	r0, [r1]
   25538:	cmpne	r0, #0
   2553c:	beq	25554 <unload_one_module+0x64>
   25540:	add	r5, r1, #4
   25544:	bl	cfd4 <mod_del_cmd@plt>
   25548:	ldr	r0, [r5], #4
   2554c:	cmp	r0, #0
   25550:	bne	25544 <unload_one_module+0x54>
   25554:	ldr	r1, [r4, #20]
   25558:	cmp	r1, #0
   2555c:	ldrne	r0, [r1]
   25560:	cmpne	r0, #0
   25564:	beq	25584 <unload_one_module+0x94>
   25568:	add	r5, r1, #12
   2556c:	ldr	r1, [r5, #-8]
   25570:	bl	e378 <remove_hook@plt>
   25574:	ldr	r0, [r5]
   25578:	add	r5, r5, #12
   2557c:	cmp	r0, #0
   25580:	bne	2556c <unload_one_module+0x7c>
   25584:	ldr	r0, [r4, #8]
   25588:	cmp	r0, #0
   2558c:	beq	256e0 <unload_one_module+0x1f0>
   25590:	blx	r0
   25594:	b	256e0 <unload_one_module+0x1f0>
   25598:	mov	r6, #0
   2559c:	b	25740 <unload_one_module+0x250>
   255a0:	ldr	r7, [r6, #32]
   255a4:	ldr	r1, [r7, #12]
   255a8:	cmp	r1, #0
   255ac:	ldrne	r0, [r1]
   255b0:	cmpne	r0, #0
   255b4:	beq	255cc <unload_one_module+0xdc>
   255b8:	add	r4, r1, #4
   255bc:	bl	cfd4 <mod_del_cmd@plt>
   255c0:	ldr	r0, [r4], #4
   255c4:	cmp	r0, #0
   255c8:	bne	255bc <unload_one_module+0xcc>
   255cc:	ldr	r1, [r7, #20]
   255d0:	cmp	r1, #0
   255d4:	ldrne	r0, [r1]
   255d8:	cmpne	r0, #0
   255dc:	beq	255fc <unload_one_module+0x10c>
   255e0:	add	r4, r1, #12
   255e4:	ldr	r1, [r4, #-8]
   255e8:	bl	e378 <remove_hook@plt>
   255ec:	ldr	r0, [r4]
   255f0:	add	r4, r4, #12
   255f4:	cmp	r0, #0
   255f8:	bne	255e4 <unload_one_module+0xf4>
   255fc:	ldr	r0, [r7, #8]
   25600:	cmp	r0, #0
   25604:	beq	2560c <unload_one_module+0x11c>
   25608:	blx	r0
   2560c:	ldr	r0, [r7, #24]
   25610:	cmp	r0, #0
   25614:	ldrne	r1, [r0, #4]
   25618:	cmpne	r1, #0
   2561c:	beq	256e0 <unload_one_module+0x1f0>
   25620:	add	r5, r0, #20
   25624:	ldr	r4, [pc, #288]	; 2574c <unload_one_module+0x25c>
   25628:	ldr	r4, [pc, r4]
   2562c:	ldr	sl, [pc, #284]	; 25750 <unload_one_module+0x260>
   25630:	ldr	sl, [pc, sl]
   25634:	ldr	r7, [pc, #280]	; 25754 <unload_one_module+0x264>
   25638:	add	r7, pc, r7
   2563c:	ldr	r3, [r5, #-20]	; 0xffffffec
   25640:	cmp	r3, #1
   25644:	mov	r0, r4
   25648:	beq	25658 <unload_one_module+0x168>
   2564c:	cmp	r3, #2
   25650:	bne	25664 <unload_one_module+0x174>
   25654:	mov	r0, sl
   25658:	ldr	r0, [r0]
   2565c:	bl	e30c <capability_orphan@plt>
   25660:	b	2569c <unload_one_module+0x1ac>
   25664:	ldr	r0, [r6]
   25668:	str	r1, [sp]
   2566c:	str	r0, [sp, #4]
   25670:	mov	r0, #256	; 0x100
   25674:	mov	r1, #0
   25678:	mov	r2, r7
   2567c:	bl	d640 <sendto_realops_snomask@plt>
   25680:	ldr	r2, [r5, #-20]	; 0xffffffec
   25684:	ldr	r3, [r5, #-16]
   25688:	ldr	r0, [r6]
   2568c:	str	r0, [sp]
   25690:	mov	r0, #0
   25694:	mov	r1, r7
   25698:	bl	e0b4 <ilog@plt>
   2569c:	ldr	r1, [r5], #16
   256a0:	cmp	r1, #0
   256a4:	bne	2563c <unload_one_module+0x14c>
   256a8:	b	256e0 <unload_one_module+0x1f0>
   256ac:	ldr	r0, [r6]
   256b0:	str	r0, [sp]
   256b4:	ldr	r7, [pc, #156]	; 25758 <unload_one_module+0x268>
   256b8:	add	r7, pc, r7
   256bc:	mov	r0, #256	; 0x100
   256c0:	mov	r1, #0
   256c4:	mov	r2, r7
   256c8:	bl	d640 <sendto_realops_snomask@plt>
   256cc:	ldr	r3, [r6]
   256d0:	ldr	r2, [r6, #28]
   256d4:	mov	r0, #0
   256d8:	mov	r1, r7
   256dc:	bl	e0b4 <ilog@plt>
   256e0:	ldr	r0, [r6, #12]
   256e4:	bl	cf98 <lt_dlclose@plt>
   256e8:	add	r0, r6, #36	; 0x24
   256ec:	bl	25760 <rb_dlinkDelete>
   256f0:	ldr	r0, [r6]
   256f4:	bl	24a90 <rb_free>
   256f8:	ldr	r0, [r6, #24]
   256fc:	bl	24a90 <rb_free>
   25700:	mov	r0, r6
   25704:	bl	24a90 <rb_free>
   25708:	mov	r6, #1
   2570c:	cmp	r8, #0
   25710:	beq	25740 <unload_one_module+0x250>
   25714:	ldr	r5, [pc, #64]	; 2575c <unload_one_module+0x26c>
   25718:	add	r5, pc, r5
   2571c:	mov	r0, #0
   25720:	mov	r1, r5
   25724:	mov	r2, r9
   25728:	bl	e0b4 <ilog@plt>
   2572c:	mov	r0, #256	; 0x100
   25730:	mov	r1, #0
   25734:	mov	r2, r5
   25738:	mov	r3, r9
   2573c:	bl	d640 <sendto_realops_snomask@plt>
   25740:	mov	r0, r6
   25744:	sub	sp, fp, #28
   25748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2574c:	.word	0x000353b8
   25750:	.word	0x00035250
   25754:	.word	0x0001dab3
   25758:	.word	0x0001da85
   2575c:	.word	0x0001da5c

00025760 <rb_dlinkDelete>:
   25760:	cmp	r0, #0
   25764:	beq	257b4 <rb_dlinkDelete+0x54>
   25768:	ldr	ip, [pc, #108]	; 257dc <rb_dlinkDelete+0x7c>
   2576c:	ldr	ip, [pc, ip]
   25770:	ldmib	r0, {r2, r3}
   25774:	add	r1, r3, #4
   25778:	cmp	r3, #0
   2577c:	addeq	r1, ip, #4
   25780:	str	r2, [r1]
   25784:	ldmib	r0, {r1, r2}
   25788:	cmp	r1, #0
   2578c:	mov	r3, ip
   25790:	addne	r3, r1, #8
   25794:	str	r2, [r3]
   25798:	mov	r1, #0
   2579c:	str	r1, [r0, #4]
   257a0:	str	r1, [r0, #8]
   257a4:	ldr	r0, [ip, #8]
   257a8:	sub	r0, r0, #1
   257ac:	str	r0, [ip, #8]
   257b0:	bx	lr
   257b4:	push	{fp, lr}
   257b8:	mov	fp, sp
   257bc:	ldr	r0, [pc, #28]	; 257e0 <rb_dlinkDelete+0x80>
   257c0:	add	r0, pc, r0
   257c4:	ldr	r1, [pc, #24]	; 257e4 <rb_dlinkDelete+0x84>
   257c8:	add	r1, pc, r1
   257cc:	ldr	r3, [pc, #20]	; 257e8 <rb_dlinkDelete+0x88>
   257d0:	add	r3, pc, r3
   257d4:	mov	r2, #235	; 0xeb
   257d8:	bl	e7e0 <__assert_fail@plt>
   257dc:	.word	0x00035384
   257e0:	.word	0x0001adec
   257e4:	.word	0x0001adee
   257e8:	.word	0x0001ae89

000257ec <rb_malloc>:
   257ec:	push	{fp, lr}
   257f0:	mov	fp, sp
   257f4:	mov	r0, #1
   257f8:	mov	r1, #48	; 0x30
   257fc:	bl	cfa4 <calloc@plt>
   25800:	cmp	r0, #0
   25804:	popne	{fp, pc}
   25808:	bl	d448 <rb_outofmemory@plt>

0002580c <modules_do_reload>:
   2580c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25810:	add	fp, sp, #24
   25814:	mov	r5, r0
   25818:	bl	da3c <rb_basename@plt>
   2581c:	mov	r4, r0
   25820:	add	r0, r5, #512	; 0x200
   25824:	bl	e4f8 <find_id@plt>
   25828:	mov	r7, r0
   2582c:	mov	r0, r4
   25830:	bl	d160 <findmodule_byname@plt>
   25834:	cmp	r0, #0
   25838:	beq	2589c <modules_do_reload+0x90>
   2583c:	ldr	r6, [r0, #16]
   25840:	ldr	r9, [r0, #20]
   25844:	ldr	r0, [r0, #24]
   25848:	bl	24914 <rb_strdup>
   2584c:	mov	r8, r0
   25850:	bl	da6c <mod_remember_clicaps@plt>
   25854:	mov	r0, r4
   25858:	mov	r1, #1
   2585c:	bl	d520 <unload_one_module@plt>
   25860:	cmp	r0, #0
   25864:	beq	258cc <modules_do_reload+0xc0>
   25868:	cmp	r6, #0
   2586c:	mov	r3, r6
   25870:	movwne	r3, #1
   25874:	mov	r0, r8
   25878:	mov	r1, #1
   2587c:	mov	r2, r9
   25880:	bl	dfa0 <load_a_module@plt>
   25884:	cmp	r6, #0
   25888:	beq	25894 <modules_do_reload+0x88>
   2588c:	cmp	r0, #0
   25890:	beq	25904 <modules_do_reload+0xf8>
   25894:	bl	d13c <mod_notify_clicaps@plt>
   25898:	b	258e8 <modules_do_reload+0xdc>
   2589c:	cmp	r7, #0
   258a0:	beq	258b8 <modules_do_reload+0xac>
   258a4:	ldr	r1, [pc, #140]	; 25938 <modules_do_reload+0x12c>
   258a8:	add	r1, pc, r1
   258ac:	mov	r0, r7
   258b0:	mov	r2, r4
   258b4:	bl	e414 <sendto_one_notice@plt>
   258b8:	mov	r0, r5
   258bc:	bl	24a90 <rb_free>
   258c0:	mov	r0, r4
   258c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   258c8:	b	24a90 <rb_free>
   258cc:	cmp	r7, #0
   258d0:	beq	258e8 <modules_do_reload+0xdc>
   258d4:	ldr	r1, [pc, #96]	; 2593c <modules_do_reload+0x130>
   258d8:	add	r1, pc, r1
   258dc:	mov	r0, r7
   258e0:	mov	r2, r4
   258e4:	bl	e414 <sendto_one_notice@plt>
   258e8:	mov	r0, r5
   258ec:	bl	24a90 <rb_free>
   258f0:	mov	r0, r4
   258f4:	bl	24a90 <rb_free>
   258f8:	mov	r0, r8
   258fc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   25900:	b	24a90 <rb_free>
   25904:	ldr	r2, [pc, #52]	; 25940 <modules_do_reload+0x134>
   25908:	add	r2, pc, r2
   2590c:	mov	r0, #256	; 0x100
   25910:	mov	r1, #256	; 0x100
   25914:	mov	r3, r4
   25918:	bl	d640 <sendto_realops_snomask@plt>
   2591c:	ldr	r1, [pc, #32]	; 25944 <modules_do_reload+0x138>
   25920:	add	r1, pc, r1
   25924:	mov	r0, #0
   25928:	mov	r2, r4
   2592c:	bl	e0b4 <ilog@plt>
   25930:	mov	r0, #0
   25934:	bl	dc34 <exit@plt>
   25938:	.word	0x0001da9d
   2593c:	.word	0x0001da6d
   25940:	.word	0x0001da56
   25944:	.word	0x0001d745

00025948 <modules_do_restart>:
   25948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2594c:	add	fp, sp, #28
   25950:	sub	sp, sp, #4
   25954:	bl	da6c <mod_remember_clicaps@plt>
   25958:	ldr	r0, [pc, #280]	; 25a78 <modules_do_restart+0x130>
   2595c:	ldr	r0, [pc, r0]
   25960:	ldr	r7, [r0]
   25964:	mov	r4, #0
   25968:	cmp	r7, #0
   2596c:	beq	25a10 <modules_do_restart+0xc8>
   25970:	ldr	sl, [pc, #260]	; 25a7c <modules_do_restart+0x134>
   25974:	add	sl, pc, sl
   25978:	ldr	r6, [pc, #256]	; 25a80 <modules_do_restart+0x138>
   2597c:	add	r6, pc, r6
   25980:	ldr	r5, [pc, #252]	; 25a84 <modules_do_restart+0x13c>
   25984:	add	r5, pc, r5
   25988:	ldr	r9, [pc, #248]	; 25a88 <modules_do_restart+0x140>
   2598c:	add	r9, pc, r9
   25990:	ldr	r8, [r7]
   25994:	ldr	r7, [r7, #8]
   25998:	ldr	r0, [r8]
   2599c:	mov	r1, #0
   259a0:	bl	d520 <unload_one_module@plt>
   259a4:	cmp	r0, #0
   259a8:	beq	259bc <modules_do_restart+0x74>
   259ac:	add	r4, r4, #1
   259b0:	cmp	r7, #0
   259b4:	bne	25990 <modules_do_restart+0x48>
   259b8:	b	25a10 <modules_do_restart+0xc8>
   259bc:	ldr	r2, [r8]
   259c0:	ldr	r0, [r8, #16]
   259c4:	cmp	r0, #0
   259c8:	mov	r3, r6
   259cc:	moveq	r3, sl
   259d0:	mov	r0, #0
   259d4:	mov	r1, r5
   259d8:	bl	e0b4 <ilog@plt>
   259dc:	ldr	r0, [r8, #16]
   259e0:	cmp	r0, #0
   259e4:	beq	259f4 <modules_do_restart+0xac>
   259e8:	cmp	r7, #0
   259ec:	bne	25990 <modules_do_restart+0x48>
   259f0:	b	25a10 <modules_do_restart+0xc8>
   259f4:	ldr	r3, [r8]
   259f8:	mov	r0, #256	; 0x100
   259fc:	mov	r1, #256	; 0x100
   25a00:	mov	r2, r9
   25a04:	bl	d640 <sendto_realops_snomask@plt>
   25a08:	cmp	r7, #0
   25a0c:	bne	25990 <modules_do_restart+0x48>
   25a10:	mov	r0, #0
   25a14:	bl	d94c <load_all_modules@plt>
   25a18:	mov	r0, #0
   25a1c:	bl	d82c <load_core_modules@plt>
   25a20:	mov	r0, #0
   25a24:	bl	d4d8 <rehash@plt>
   25a28:	bl	d13c <mod_notify_clicaps@plt>
   25a2c:	ldr	r0, [pc, #88]	; 25a8c <modules_do_restart+0x144>
   25a30:	ldr	r0, [pc, r0]
   25a34:	mov	r6, r0
   25a38:	ldr	r0, [r0, #8]
   25a3c:	str	r0, [sp]
   25a40:	ldr	r5, [pc, #72]	; 25a90 <modules_do_restart+0x148>
   25a44:	add	r5, pc, r5
   25a48:	mov	r0, #256	; 0x100
   25a4c:	mov	r1, #256	; 0x100
   25a50:	mov	r2, r5
   25a54:	mov	r3, r4
   25a58:	bl	d640 <sendto_realops_snomask@plt>
   25a5c:	ldr	r3, [r6, #8]
   25a60:	mov	r0, #0
   25a64:	mov	r1, r5
   25a68:	mov	r2, r4
   25a6c:	sub	sp, fp, #28
   25a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25a74:	b	e0b4 <ilog@plt>
   25a78:	.word	0x00035194
   25a7c:	.word	0x0001fe91
   25a80:	.word	0x0001da3b
   25a84:	.word	0x0001da0c
   25a88:	.word	0x0001da39
   25a8c:	.word	0x000350c0
   25a90:	.word	0x0001d9a5

00025a94 <init_monitor>:
   25a94:	push	{fp, lr}
   25a98:	mov	fp, sp
   25a9c:	ldr	r0, [pc, #28]	; 25ac0 <init_monitor+0x2c>
   25aa0:	add	r0, pc, r0
   25aa4:	ldr	r1, [pc, #24]	; 25ac4 <init_monitor+0x30>
   25aa8:	add	r1, pc, r1
   25aac:	bl	d85c <rb_radixtree_create@plt>
   25ab0:	ldr	r1, [pc, #16]	; 25ac8 <init_monitor+0x34>
   25ab4:	add	r1, pc, r1
   25ab8:	str	r0, [r1]
   25abc:	pop	{fp, pc}
   25ac0:	.word	0x0001d9eb
   25ac4:	.word	0x0000001c
   25ac8:	.word	0x000406d4

00025acc <irccasecanon>:
   25acc:	ldrb	r1, [r0]
   25ad0:	cmp	r1, #0
   25ad4:	bxeq	lr
   25ad8:	add	r0, r0, #1
   25adc:	ldr	r2, [pc, #32]	; 25b04 <irccasecanon+0x38>
   25ae0:	ldr	r2, [pc, r2]
   25ae4:	uxtb	r1, r1
   25ae8:	ldrb	r1, [r2, r1]
   25aec:	strb	r1, [r0, #-1]
   25af0:	ldrb	r1, [r0]
   25af4:	add	r0, r0, #1
   25af8:	cmp	r1, #0
   25afc:	bne	25ae4 <irccasecanon+0x18>
   25b00:	bx	lr
   25b04:	.word	0x00034e88

00025b08 <find_monitor>:
   25b08:	push	{r4, r5, r6, sl, fp, lr}
   25b0c:	add	fp, sp, #16
   25b10:	mov	r6, r1
   25b14:	mov	r5, r0
   25b18:	ldr	r0, [pc, #80]	; 25b70 <find_monitor+0x68>
   25b1c:	ldr	r0, [pc, r0]
   25b20:	mov	r1, r5
   25b24:	bl	dee0 <rb_radixtree_retrieve@plt>
   25b28:	cmp	r0, #0
   25b2c:	popne	{r4, r5, r6, sl, fp, pc}
   25b30:	cmp	r6, #0
   25b34:	moveq	r4, #0
   25b38:	moveq	r0, r4
   25b3c:	popeq	{r4, r5, r6, sl, fp, pc}
   25b40:	bl	25b78 <rb_malloc>
   25b44:	mov	r4, r0
   25b48:	mov	r1, r5
   25b4c:	mov	r2, #32
   25b50:	bl	e510 <rb_strlcpy@plt>
   25b54:	ldr	r0, [pc, #24]	; 25b74 <find_monitor+0x6c>
   25b58:	ldr	r0, [pc, r0]
   25b5c:	mov	r1, r4
   25b60:	mov	r2, r4
   25b64:	bl	dd9c <rb_radixtree_add@plt>
   25b68:	mov	r0, r4
   25b6c:	pop	{r4, r5, r6, sl, fp, pc}
   25b70:	.word	0x0004066c
   25b74:	.word	0x00040630

00025b78 <rb_malloc>:
   25b78:	push	{fp, lr}
   25b7c:	mov	fp, sp
   25b80:	mov	r0, #1
   25b84:	mov	r1, #60	; 0x3c
   25b88:	bl	cfa4 <calloc@plt>
   25b8c:	cmp	r0, #0
   25b90:	popne	{fp, pc}
   25b94:	bl	d448 <rb_outofmemory@plt>

00025b98 <free_monitor>:
   25b98:	push	{r4, sl, fp, lr}
   25b9c:	add	fp, sp, #8
   25ba0:	mov	r4, r0
   25ba4:	ldr	r0, [r0, #40]	; 0x28
   25ba8:	cmp	r0, #0
   25bac:	popne	{r4, sl, fp, pc}
   25bb0:	ldr	r0, [pc, #20]	; 25bcc <free_monitor+0x34>
   25bb4:	ldr	r0, [pc, r0]
   25bb8:	mov	r1, r4
   25bbc:	bl	e0c0 <rb_radixtree_delete@plt>
   25bc0:	mov	r0, r4
   25bc4:	pop	{r4, sl, fp, lr}
   25bc8:	b	25bd0 <rb_free>
   25bcc:	.word	0x000405d4

00025bd0 <rb_free>:
   25bd0:	cmp	r0, #0
   25bd4:	bxeq	lr
   25bd8:	b	d328 <free@plt>

00025bdc <monitor_signon>:
   25bdc:	push	{r4, r5, r6, r7, fp, lr}
   25be0:	add	fp, sp, #16
   25be4:	sub	sp, sp, #152	; 0x98
   25be8:	mov	r4, r0
   25bec:	add	r6, r0, #88	; 0x58
   25bf0:	mov	r0, r6
   25bf4:	mov	r1, #0
   25bf8:	bl	dbb0 <find_monitor@plt>
   25bfc:	cmp	r0, #0
   25c00:	beq	25c60 <monitor_signon+0x84>
   25c04:	mov	r5, r0
   25c08:	add	r0, r4, #163	; 0xa3
   25c0c:	add	r1, r4, #152	; 0x98
   25c10:	str	r1, [sp]
   25c14:	str	r0, [sp, #4]
   25c18:	add	r7, sp, #11
   25c1c:	ldr	r2, [pc, #68]	; 25c68 <monitor_signon+0x8c>
   25c20:	add	r2, pc, r2
   25c24:	mov	r0, r7
   25c28:	mov	r1, #141	; 0x8d
   25c2c:	mov	r3, r6
   25c30:	bl	de74 <snprintf@plt>
   25c34:	ldr	r0, [pc, #48]	; 25c6c <monitor_signon+0x90>
   25c38:	add	r0, pc, r0
   25c3c:	stm	sp, {r0, r7}
   25c40:	ldr	r0, [pc, #40]	; 25c70 <monitor_signon+0x94>
   25c44:	ldr	r0, [pc, r0]
   25c48:	add	r3, r0, #88	; 0x58
   25c4c:	ldr	r2, [pc, #32]	; 25c74 <monitor_signon+0x98>
   25c50:	add	r2, pc, r2
   25c54:	mov	r0, r4
   25c58:	mov	r1, r5
   25c5c:	bl	da00 <sendto_monitor@plt>
   25c60:	sub	sp, fp, #16
   25c64:	pop	{r4, r5, r6, r7, fp, pc}
   25c68:	.word	0x0001b03c
   25c6c:	.word	0x0001b705
   25c70:	.word	0x00034f14
   25c74:	.word	0x0001d849

00025c78 <monitor_signoff>:
   25c78:	push	{r4, r5, fp, lr}
   25c7c:	add	fp, sp, #8
   25c80:	sub	sp, sp, #8
   25c84:	mov	r4, r0
   25c88:	add	r5, r0, #88	; 0x58
   25c8c:	mov	r0, r5
   25c90:	mov	r1, #0
   25c94:	bl	dbb0 <find_monitor@plt>
   25c98:	cmp	r0, #0
   25c9c:	beq	25ccc <monitor_signoff+0x54>
   25ca0:	mov	r1, r0
   25ca4:	ldr	r0, [pc, #40]	; 25cd4 <monitor_signoff+0x5c>
   25ca8:	add	r0, pc, r0
   25cac:	stm	sp, {r0, r5}
   25cb0:	ldr	r0, [pc, #32]	; 25cd8 <monitor_signoff+0x60>
   25cb4:	ldr	r0, [pc, r0]
   25cb8:	add	r3, r0, #88	; 0x58
   25cbc:	ldr	r2, [pc, #24]	; 25cdc <monitor_signoff+0x64>
   25cc0:	add	r2, pc, r2
   25cc4:	mov	r0, r4
   25cc8:	bl	da00 <sendto_monitor@plt>
   25ccc:	sub	sp, fp, #8
   25cd0:	pop	{r4, r5, fp, pc}
   25cd4:	.word	0x0001b695
   25cd8:	.word	0x00034ea4
   25cdc:	.word	0x0001d7e8

00025ce0 <clear_monitor>:
   25ce0:	push	{r4, r5, r6, r7, fp, lr}
   25ce4:	add	fp, sp, #16
   25ce8:	mov	r4, r0
   25cec:	ldr	r0, [r0, #432]	; 0x1b0
   25cf0:	ldr	r5, [r0, #328]	; 0x148
   25cf4:	cmp	r5, #0
   25cf8:	beq	25d2c <clear_monitor+0x4c>
   25cfc:	ldr	r6, [r5]
   25d00:	ldr	r7, [r5, #8]
   25d04:	add	r1, r6, #32
   25d08:	mov	r0, r4
   25d0c:	bl	25d44 <rb_dlinkFindDestroy>
   25d10:	mov	r0, r5
   25d14:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   25d18:	mov	r0, r6
   25d1c:	bl	d4fc <free_monitor@plt>
   25d20:	cmp	r7, #0
   25d24:	mov	r5, r7
   25d28:	bne	25cfc <clear_monitor+0x1c>
   25d2c:	ldr	r0, [r4, #432]	; 0x1b0
   25d30:	mov	r1, #0
   25d34:	str	r1, [r0, #328]	; 0x148
   25d38:	str	r1, [r0, #332]	; 0x14c
   25d3c:	str	r1, [r0, #336]	; 0x150
   25d40:	pop	{r4, r5, r6, r7, fp, pc}

00025d44 <rb_dlinkFindDestroy>:
   25d44:	push	{fp, lr}
   25d48:	mov	fp, sp
   25d4c:	cmp	r1, #0
   25d50:	beq	25d70 <rb_dlinkFindDestroy+0x2c>
   25d54:	cmp	r0, #0
   25d58:	beq	25d90 <rb_dlinkFindDestroy+0x4c>
   25d5c:	bl	25dc8 <rb_dlinkFindDelete>
   25d60:	cmp	r0, #0
   25d64:	popeq	{fp, pc}
   25d68:	pop	{fp, lr}
   25d6c:	b	d7c0 <rb_free_rb_dlink_node@plt>
   25d70:	ldr	r0, [pc, #56]	; 25db0 <rb_dlinkFindDestroy+0x6c>
   25d74:	add	r0, pc, r0
   25d78:	ldr	r1, [pc, #52]	; 25db4 <rb_dlinkFindDestroy+0x70>
   25d7c:	add	r1, pc, r1
   25d80:	ldr	r3, [pc, #48]	; 25db8 <rb_dlinkFindDestroy+0x74>
   25d84:	add	r3, pc, r3
   25d88:	movw	r2, #287	; 0x11f
   25d8c:	bl	e7e0 <__assert_fail@plt>
   25d90:	ldr	r0, [pc, #36]	; 25dbc <rb_dlinkFindDestroy+0x78>
   25d94:	add	r0, pc, r0
   25d98:	ldr	r1, [pc, #32]	; 25dc0 <rb_dlinkFindDestroy+0x7c>
   25d9c:	add	r1, pc, r1
   25da0:	ldr	r3, [pc, #28]	; 25dc4 <rb_dlinkFindDestroy+0x80>
   25da4:	add	r3, pc, r3
   25da8:	mov	r2, #288	; 0x120
   25dac:	bl	e7e0 <__assert_fail@plt>
   25db0:	.word	0x000200d1
   25db4:	.word	0x0001a83a
   25db8:	.word	0x0001ae41
   25dbc:	.word	0x0001a87d
   25dc0:	.word	0x0001a81a
   25dc4:	.word	0x0001ae21

00025dc8 <rb_dlinkFindDelete>:
   25dc8:	push	{fp, lr}
   25dcc:	mov	fp, sp
   25dd0:	cmp	r1, #0
   25dd4:	beq	25e48 <rb_dlinkFindDelete+0x80>
   25dd8:	mov	ip, r0
   25ddc:	cmp	r0, #0
   25de0:	beq	25e68 <rb_dlinkFindDelete+0xa0>
   25de4:	ldr	r3, [r1]
   25de8:	mov	r0, r3
   25dec:	cmp	r3, #0
   25df0:	popeq	{fp, pc}
   25df4:	ldr	r2, [r0]
   25df8:	ldr	r3, [r0, #8]
   25dfc:	cmp	r2, ip
   25e00:	bne	25de8 <rb_dlinkFindDelete+0x20>
   25e04:	add	r2, r3, #4
   25e08:	cmp	r3, #0
   25e0c:	addeq	r2, r1, #4
   25e10:	ldr	r3, [r0, #4]
   25e14:	str	r3, [r2]
   25e18:	ldmib	r0, {r2, ip}
   25e1c:	cmp	r2, #0
   25e20:	mov	r3, r1
   25e24:	addne	r3, r2, #8
   25e28:	str	ip, [r3]
   25e2c:	mov	r2, #0
   25e30:	str	r2, [r0, #4]
   25e34:	str	r2, [r0, #8]
   25e38:	ldr	r2, [r1, #8]
   25e3c:	sub	r2, r2, #1
   25e40:	str	r2, [r1, #8]
   25e44:	pop	{fp, pc}
   25e48:	ldr	r0, [pc, #56]	; 25e88 <rb_dlinkFindDelete+0xc0>
   25e4c:	add	r0, pc, r0
   25e50:	ldr	r1, [pc, #52]	; 25e8c <rb_dlinkFindDelete+0xc4>
   25e54:	add	r1, pc, r1
   25e58:	ldr	r3, [pc, #48]	; 25e90 <rb_dlinkFindDelete+0xc8>
   25e5c:	add	r3, pc, r3
   25e60:	movw	r2, #258	; 0x102
   25e64:	bl	e7e0 <__assert_fail@plt>
   25e68:	ldr	r0, [pc, #36]	; 25e94 <rb_dlinkFindDelete+0xcc>
   25e6c:	add	r0, pc, r0
   25e70:	ldr	r1, [pc, #32]	; 25e98 <rb_dlinkFindDelete+0xd0>
   25e74:	add	r1, pc, r1
   25e78:	ldr	r3, [pc, #28]	; 25e9c <rb_dlinkFindDelete+0xd4>
   25e7c:	add	r3, pc, r3
   25e80:	movw	r2, #259	; 0x103
   25e84:	bl	e7e0 <__assert_fail@plt>
   25e88:	.word	0x0001fff9
   25e8c:	.word	0x0001a762
   25e90:	.word	0x0001ad9a
   25e94:	.word	0x0001a7a5
   25e98:	.word	0x0001a742
   25e9c:	.word	0x0001ad7a

00025ea0 <msgbuf_parse>:
   25ea0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25ea4:	add	fp, sp, #24
   25ea8:	mov	r5, r1
   25eac:	mov	r4, r0
   25eb0:	bl	26038 <msgbuf_init>
   25eb4:	ldrb	r0, [r5]
   25eb8:	cmp	r0, #64	; 0x40
   25ebc:	bne	25f9c <msgbuf_parse+0xfc>
   25ec0:	mov	r0, r5
   25ec4:	mov	r1, #32
   25ec8:	bl	dce8 <strchr@plt>
   25ecc:	cmp	r0, #0
   25ed0:	beq	25ee8 <msgbuf_parse+0x48>
   25ed4:	mov	r8, r0
   25ed8:	sub	r0, r0, r5
   25edc:	cmp	r0, #512	; 0x200
   25ee0:	bge	25f00 <msgbuf_parse+0x60>
   25ee4:	b	25f08 <msgbuf_parse+0x68>
   25ee8:	mov	r0, r5
   25eec:	bl	dc94 <strlen@plt>
   25ef0:	mov	r1, r0
   25ef4:	mov	r0, #1
   25ef8:	cmp	r1, #512	; 0x200
   25efc:	popcc	{r4, r5, r6, r7, r8, r9, fp, pc}
   25f00:	movw	r0, #511	; 0x1ff
   25f04:	add	r8, r5, r0
   25f08:	mov	r9, #0
   25f0c:	strb	r9, [r8]
   25f10:	add	r7, r5, #1
   25f14:	mov	r0, r7
   25f18:	mov	r1, #59	; 0x3b
   25f1c:	bl	dce8 <strchr@plt>
   25f20:	mov	r5, r0
   25f24:	mov	r0, r7
   25f28:	mov	r1, #61	; 0x3d
   25f2c:	bl	dce8 <strchr@plt>
   25f30:	cmp	r5, #0
   25f34:	beq	25f54 <msgbuf_parse+0xb4>
   25f38:	mov	r6, #0
   25f3c:	strb	r6, [r5]
   25f40:	cmp	r0, r5
   25f44:	bhi	25f6c <msgbuf_parse+0xcc>
   25f48:	cmp	r0, #0
   25f4c:	bne	25f5c <msgbuf_parse+0xbc>
   25f50:	b	25f6c <msgbuf_parse+0xcc>
   25f54:	cmp	r0, #0
   25f58:	beq	25f68 <msgbuf_parse+0xc8>
   25f5c:	strb	r9, [r0], #1
   25f60:	mov	r6, r0
   25f64:	b	25f6c <msgbuf_parse+0xcc>
   25f68:	mov	r6, #0
   25f6c:	ldrb	r0, [r7]
   25f70:	cmp	r0, #0
   25f74:	beq	25f90 <msgbuf_parse+0xf0>
   25f78:	mov	r0, r6
   25f7c:	bl	26044 <msgbuf_unescape_value>
   25f80:	mov	r0, r4
   25f84:	mov	r1, r7
   25f88:	mov	r2, r6
   25f8c:	bl	260bc <msgbuf_append_tag>
   25f90:	cmp	r5, #0
   25f94:	bne	25f10 <msgbuf_parse+0x70>
   25f98:	add	r5, r8, #1
   25f9c:	mov	r0, r5
   25fa0:	bl	dc94 <strlen@plt>
   25fa4:	movw	r1, #511	; 0x1ff
   25fa8:	cmp	r0, r1
   25fac:	movcs	r0, #0
   25fb0:	strbcs	r0, [r5, #510]	; 0x1fe
   25fb4:	ldrb	r0, [r5]
   25fb8:	cmp	r0, #58	; 0x3a
   25fbc:	bne	25fec <msgbuf_parse+0x14c>
   25fc0:	add	r0, r5, #1
   25fc4:	str	r0, [r4, #184]	; 0xb8
   25fc8:	mov	r1, #32
   25fcc:	bl	dce8 <strchr@plt>
   25fd0:	cmp	r0, #0
   25fd4:	moveq	r0, #4
   25fd8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   25fdc:	mov	r5, r0
   25fe0:	mov	r0, #0
   25fe4:	strb	r0, [r5]
   25fe8:	ldrb	r0, [r5, #1]!
   25fec:	cmp	r0, #0
   25ff0:	moveq	r0, #2
   25ff4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   25ff8:	mov	r0, r5
   25ffc:	bl	dc94 <strlen@plt>
   26000:	add	r0, r5, r0
   26004:	str	r0, [r4, #196]	; 0xc4
   26008:	add	r1, r4, #204	; 0xcc
   2600c:	mov	r0, r5
   26010:	mov	r2, #15
   26014:	bl	da60 <rb_string_to_array@plt>
   26018:	str	r0, [r4, #200]	; 0xc8
   2601c:	cmp	r0, #0
   26020:	moveq	r0, #3
   26024:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   26028:	ldr	r0, [r4, #204]	; 0xcc
   2602c:	str	r0, [r4, #192]	; 0xc0
   26030:	mov	r0, #0
   26034:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026038 <msgbuf_init>:
   26038:	mov	r1, #0
   2603c:	mov	r2, #264	; 0x108
   26040:	b	df28 <memset@plt>

00026044 <msgbuf_unescape_value>:
   26044:	cmp	r0, #0
   26048:	bxeq	lr
   2604c:	ldr	ip, [pc, #100]	; 260b8 <msgbuf_unescape_value+0x74>
   26050:	add	ip, pc, ip
   26054:	mov	r1, r0
   26058:	b	26068 <msgbuf_unescape_value+0x24>
   2605c:	strb	r3, [r0]
   26060:	add	r1, r1, #1
   26064:	add	r0, r0, #1
   26068:	ldrb	r3, [r1]
   2606c:	cmp	r3, #92	; 0x5c
   26070:	beq	26080 <msgbuf_unescape_value+0x3c>
   26074:	cmp	r3, #0
   26078:	bne	2605c <msgbuf_unescape_value+0x18>
   2607c:	b	260ac <msgbuf_unescape_value+0x68>
   26080:	ldrb	r3, [r1, #1]
   26084:	cmp	r3, #0
   26088:	beq	260a8 <msgbuf_unescape_value+0x64>
   2608c:	ldrb	r2, [ip, r3]
   26090:	cmp	r2, #0
   26094:	moveq	r2, r3
   26098:	strb	r2, [r0]
   2609c:	add	r1, r1, #2
   260a0:	add	r0, r0, #1
   260a4:	b	26068 <msgbuf_unescape_value+0x24>
   260a8:	add	r1, r1, #1
   260ac:	ldrb	r1, [r1]
   260b0:	strb	r1, [r0]
   260b4:	bx	lr
   260b8:	.word	0x0001d46c

000260bc <msgbuf_append_tag>:
   260bc:	ldr	ip, [r0]
   260c0:	cmp	ip, #14
   260c4:	bxhi	lr
   260c8:	push	{fp, lr}
   260cc:	mov	fp, sp
   260d0:	add	r3, ip, ip, lsl #1
   260d4:	add	r3, r0, r3, lsl #2
   260d8:	mov	lr, #0
   260dc:	stmib	r3, {r1, r2, lr}
   260e0:	add	r1, ip, #1
   260e4:	str	r1, [r0]
   260e8:	pop	{fp, lr}
   260ec:	bx	lr

000260f0 <msgbuf_reconstruct_tail>:
   260f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   260f4:	add	fp, sp, #24
   260f8:	ldr	r7, [r0, #196]	; 0xc4
   260fc:	cmp	r7, #0
   26100:	beq	26180 <msgbuf_reconstruct_tail+0x90>
   26104:	mov	r5, r1
   26108:	mov	r4, r0
   2610c:	ldr	r6, [r0, #200]	; 0xc8
   26110:	cmp	r6, r1
   26114:	bcc	26180 <msgbuf_reconstruct_tail+0x90>
   26118:	add	r0, r4, r5, lsl #2
   2611c:	cmp	r5, #0
   26120:	beq	2613c <msgbuf_reconstruct_tail+0x4c>
   26124:	ldr	r8, [r0, #200]	; 0xc8
   26128:	mov	r0, r8
   2612c:	bl	dc94 <strlen@plt>
   26130:	add	r0, r8, r0
   26134:	add	r0, r0, #1
   26138:	b	26140 <msgbuf_reconstruct_tail+0x50>
   2613c:	ldr	r0, [r0, #204]	; 0xcc
   26140:	cmp	r6, r5
   26144:	cmpeq	r0, r7
   26148:	beq	26180 <msgbuf_reconstruct_tail+0x90>
   2614c:	add	r1, r4, r5, lsl #2
   26150:	str	r0, [r1, #204]	; 0xcc
   26154:	ldr	r1, [r4, #196]	; 0xc4
   26158:	cmp	r0, r1
   2615c:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   26160:	mov	r1, #32
   26164:	ldrb	r2, [r0]
   26168:	cmp	r2, #0
   2616c:	strbeq	r1, [r0]
   26170:	ldr	r2, [r4, #196]	; 0xc4
   26174:	add	r0, r0, #1
   26178:	cmp	r0, r2
   2617c:	bcc	26164 <msgbuf_reconstruct_tail+0x74>
   26180:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026184 <msgbuf_unparse_linebuf_tags>:
   26184:	ldr	ip, [r2]
   26188:	ldr	r3, [r2, #4]
   2618c:	mov	r2, ip
   26190:	b	26194 <msgbuf_unparse_tags>

00026194 <msgbuf_unparse_tags>:
   26194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26198:	add	fp, sp, #28
   2619c:	sub	sp, sp, #20
   261a0:	mov	r6, r2
   261a4:	ldr	r2, [r2]
   261a8:	cmp	r2, #0
   261ac:	mov	r2, r0
   261b0:	beq	26350 <msgbuf_unparse_tags+0x1bc>
   261b4:	add	r1, r0, r1
   261b8:	sub	r5, r1, #2
   261bc:	mov	r1, #0
   261c0:	str	r0, [sp, #8]
   261c4:	mov	r8, #0
   261c8:	str	r0, [sp, #4]
   261cc:	mov	r9, r0
   261d0:	str	r3, [sp, #12]
   261d4:	add	r0, r8, r8, lsl #1
   261d8:	add	sl, r6, r0, lsl #2
   261dc:	ldr	r0, [sl, #12]
   261e0:	tst	r0, r3
   261e4:	beq	26314 <msgbuf_unparse_tags+0x180>
   261e8:	cmp	r9, r5
   261ec:	bcs	26324 <msgbuf_unparse_tags+0x190>
   261f0:	tst	r1, #1
   261f4:	mov	r0, #64	; 0x40
   261f8:	movwne	r0, #59	; 0x3b
   261fc:	strb	r0, [r9], #1
   26200:	ldr	r7, [sl, #4]
   26204:	cmp	r7, #0
   26208:	beq	26314 <msgbuf_unparse_tags+0x180>
   2620c:	str	r1, [sp, #16]
   26210:	mov	r0, r7
   26214:	bl	dc94 <strlen@plt>
   26218:	cmp	r0, #0
   2621c:	beq	262e8 <msgbuf_unparse_tags+0x154>
   26220:	add	r4, r9, r0
   26224:	cmp	r4, r5
   26228:	bhi	26340 <msgbuf_unparse_tags+0x1ac>
   2622c:	mov	r0, r9
   26230:	mov	r1, r7
   26234:	bl	d8bc <strcat@plt>
   26238:	ldr	r0, [sl, #8]!
   2623c:	cmp	r0, #0
   26240:	beq	262f4 <msgbuf_unparse_tags+0x160>
   26244:	cmp	r4, r5
   26248:	bcs	26340 <msgbuf_unparse_tags+0x1ac>
   2624c:	mov	r0, #61	; 0x3d
   26250:	strb	r0, [r4], #1
   26254:	ldr	r0, [sl]
   26258:	bl	dc94 <strlen@plt>
   2625c:	add	r1, r4, r0
   26260:	cmp	r1, r5
   26264:	ldr	r3, [sp, #12]
   26268:	ldr	r1, [sp, #16]
   2626c:	bhi	26324 <msgbuf_unparse_tags+0x190>
   26270:	cmp	r0, #0
   26274:	beq	26308 <msgbuf_unparse_tags+0x174>
   26278:	mov	ip, r6
   2627c:	mov	r1, #0
   26280:	ldr	r6, [pc, #220]	; 26364 <msgbuf_unparse_tags+0x1d0>
   26284:	add	r6, pc, r6
   26288:	mov	lr, #92	; 0x5c
   2628c:	ldr	r2, [sl]
   26290:	ldrb	r7, [r2, r1]
   26294:	ldrb	r2, [r6, r7]
   26298:	cmp	r2, #0
   2629c:	beq	262b8 <msgbuf_unparse_tags+0x124>
   262a0:	add	r7, r4, #2
   262a4:	cmp	r7, r5
   262a8:	bhi	262d4 <msgbuf_unparse_tags+0x140>
   262ac:	strb	lr, [r4]
   262b0:	strb	r2, [r4, #1]!
   262b4:	b	262c4 <msgbuf_unparse_tags+0x130>
   262b8:	cmp	r4, r5
   262bc:	bcs	262d4 <msgbuf_unparse_tags+0x140>
   262c0:	strb	r7, [r4]
   262c4:	add	r1, r1, #1
   262c8:	add	r4, r4, #1
   262cc:	cmp	r1, r0
   262d0:	bcc	2628c <msgbuf_unparse_tags+0xf8>
   262d4:	mov	r9, r4
   262d8:	str	r4, [sp, #8]
   262dc:	mov	r1, #1
   262e0:	mov	r6, ip
   262e4:	b	26314 <msgbuf_unparse_tags+0x180>
   262e8:	ldr	r3, [sp, #12]
   262ec:	ldr	r1, [sp, #16]
   262f0:	b	26314 <msgbuf_unparse_tags+0x180>
   262f4:	mov	r9, r4
   262f8:	str	r4, [sp, #8]
   262fc:	mov	r1, #1
   26300:	ldr	r3, [sp, #12]
   26304:	b	26314 <msgbuf_unparse_tags+0x180>
   26308:	mov	r9, r4
   2630c:	str	r4, [sp, #8]
   26310:	mov	r1, #1
   26314:	ldr	r0, [r6]
   26318:	add	r8, r8, #1
   2631c:	cmp	r8, r0
   26320:	bcc	261d4 <msgbuf_unparse_tags+0x40>
   26324:	tst	r1, #1
   26328:	beq	2634c <msgbuf_unparse_tags+0x1b8>
   2632c:	mov	r0, #32
   26330:	ldr	r2, [sp, #8]
   26334:	strb	r0, [r2], #1
   26338:	ldr	r0, [sp, #4]
   2633c:	b	26350 <msgbuf_unparse_tags+0x1bc>
   26340:	ldr	r1, [sp, #16]
   26344:	tst	r1, #1
   26348:	bne	2632c <msgbuf_unparse_tags+0x198>
   2634c:	ldmib	sp, {r0, r2}
   26350:	mov	r1, #0
   26354:	strb	r1, [r2], -r0
   26358:	mov	r0, r2
   2635c:	sub	sp, fp, #28
   26360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26364:	.word	0x0001d338

00026368 <msgbuf_unparse_prefix>:
   26368:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2636c:	add	fp, sp, #24
   26370:	mov	r7, r3
   26374:	mov	r6, r2
   26378:	mov	r5, r1
   2637c:	mov	r8, r0
   26380:	ldr	r2, [r1]
   26384:	mov	r4, #0
   26388:	mov	r1, #0
   2638c:	bl	df28 <memset@plt>
   26390:	ldr	r0, [r6]
   26394:	cmp	r0, #0
   26398:	beq	263bc <msgbuf_unparse_prefix+0x54>
   2639c:	ldr	r1, [r5]
   263a0:	cmp	r1, #512	; 0x200
   263a4:	movwhi	r1, #513	; 0x201
   263a8:	mov	r0, r8
   263ac:	mov	r2, r6
   263b0:	mov	r3, r7
   263b4:	bl	26194 <msgbuf_unparse_tags>
   263b8:	mov	r4, r0
   263bc:	movw	r0, #511	; 0x1ff
   263c0:	add	r0, r4, r0
   263c4:	ldr	r1, [r5]
   263c8:	cmp	r1, r0
   263cc:	strhi	r0, [r5]
   263d0:	movw	r9, #510	; 0x1fe
   263d4:	ldr	r3, [r6, #184]	; 0xb8
   263d8:	ldr	r0, [pc, #140]	; 2646c <msgbuf_unparse_prefix+0x104>
   263dc:	ldr	r0, [pc, r0]
   263e0:	cmp	r3, #0
   263e4:	addeq	r3, r0, #88	; 0x58
   263e8:	ldr	r1, [r5]
   263ec:	ldr	r2, [pc, #124]	; 26470 <msgbuf_unparse_prefix+0x108>
   263f0:	add	r2, pc, r2
   263f4:	mov	r0, r8
   263f8:	bl	d664 <rb_snprintf_append@plt>
   263fc:	cmp	r0, #0
   26400:	mov	r7, r4
   26404:	addgt	r7, r7, r0
   26408:	ldr	r3, [r6, #192]	; 0xc0
   2640c:	cmp	r3, #0
   26410:	beq	26430 <msgbuf_unparse_prefix+0xc8>
   26414:	ldr	r1, [r5]
   26418:	ldr	r2, [pc, #84]	; 26474 <msgbuf_unparse_prefix+0x10c>
   2641c:	add	r2, pc, r2
   26420:	mov	r0, r8
   26424:	bl	d664 <rb_snprintf_append@plt>
   26428:	cmp	r0, #0
   2642c:	addgt	r7, r7, r0
   26430:	add	r4, r4, r9
   26434:	ldr	r3, [r6, #188]	; 0xbc
   26438:	cmp	r3, #0
   2643c:	beq	2645c <msgbuf_unparse_prefix+0xf4>
   26440:	ldr	r1, [r5]
   26444:	ldr	r2, [pc, #44]	; 26478 <msgbuf_unparse_prefix+0x110>
   26448:	add	r2, pc, r2
   2644c:	mov	r0, r8
   26450:	bl	d664 <rb_snprintf_append@plt>
   26454:	cmp	r0, #0
   26458:	addgt	r7, r7, r0
   2645c:	cmp	r7, r4
   26460:	movhi	r7, r4
   26464:	mov	r0, r7
   26468:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2646c:	.word	0x0003477c
   26470:	.word	0x0001d0c7
   26474:	.word	0x00020ecb
   26478:	.word	0x00020e9f

0002647c <msgbuf_unparse>:
   2647c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26480:	add	fp, sp, #28
   26484:	sub	sp, sp, #4
   26488:	mov	r4, r2
   2648c:	mov	r8, r0
   26490:	str	r1, [sp]
   26494:	mov	r1, sp
   26498:	bl	e2e8 <msgbuf_unparse_prefix@plt>
   2649c:	ldr	r0, [r4, #200]	; 0xc8
   264a0:	cmp	r0, #0
   264a4:	beq	2652c <msgbuf_unparse+0xb0>
   264a8:	add	r7, r4, #204	; 0xcc
   264ac:	mov	r5, #0
   264b0:	ldr	r6, [sp]
   264b4:	ldr	r9, [pc, #124]	; 26538 <msgbuf_unparse+0xbc>
   264b8:	add	r9, pc, r9
   264bc:	ldr	sl, [pc, #120]	; 2653c <msgbuf_unparse+0xc0>
   264c0:	add	sl, pc, sl
   264c4:	sub	r0, r0, #1
   264c8:	cmp	r5, r0
   264cc:	bne	26500 <msgbuf_unparse+0x84>
   264d0:	ldr	r0, [r7, r5, lsl #2]
   264d4:	mov	r1, #32
   264d8:	bl	dce8 <strchr@plt>
   264dc:	cmp	r0, #0
   264e0:	beq	26500 <msgbuf_unparse+0x84>
   264e4:	cmp	r5, #0
   264e8:	ldr	r2, [pc, #80]	; 26540 <msgbuf_unparse+0xc4>
   264ec:	add	r2, pc, r2
   264f0:	ldr	r0, [pc, #76]	; 26544 <msgbuf_unparse+0xc8>
   264f4:	add	r0, pc, r0
   264f8:	moveq	r2, r0
   264fc:	b	2650c <msgbuf_unparse+0x90>
   26500:	cmp	r5, #0
   26504:	mov	r2, sl
   26508:	moveq	r2, r9
   2650c:	ldr	r3, [r7, r5, lsl #2]
   26510:	mov	r0, r8
   26514:	mov	r1, r6
   26518:	bl	d664 <rb_snprintf_append@plt>
   2651c:	add	r5, r5, #1
   26520:	ldr	r0, [r4, #200]	; 0xc8
   26524:	cmp	r5, r0
   26528:	bcc	264c4 <msgbuf_unparse+0x48>
   2652c:	mov	r0, #0
   26530:	sub	sp, fp, #28
   26534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26538:	.word	0x000211ad
   2653c:	.word	0x000211a4
   26540:	.word	0x0001fc03
   26544:	.word	0x0001fbfc

00026548 <msgbuf_vunparse_fmt>:
   26548:	push	{r4, sl, fp, lr}
   2654c:	add	fp, sp, #8
   26550:	sub	sp, sp, #8
   26554:	mov	r4, r0
   26558:	str	r1, [sp, #4]
   2655c:	add	r1, sp, #4
   26560:	bl	e2e8 <msgbuf_unparse_prefix@plt>
   26564:	mov	r0, r4
   26568:	bl	dc94 <strlen@plt>
   2656c:	add	r4, r4, r0
   26570:	ldr	r1, [sp, #4]
   26574:	sub	r1, r1, r0
   26578:	ldr	r2, [fp, #8]
   2657c:	ldr	r3, [fp, #12]
   26580:	mov	r0, r4
   26584:	bl	e450 <vsnprintf@plt>
   26588:	mov	r0, #0
   2658c:	sub	sp, fp, #8
   26590:	pop	{r4, sl, fp, pc}

00026594 <msgbuf_unparse_fmt>:
   26594:	push	{fp, lr}
   26598:	mov	fp, sp
   2659c:	sub	sp, sp, #16
   265a0:	add	ip, fp, #12
   265a4:	str	ip, [fp, #-4]
   265a8:	str	ip, [sp, #4]
   265ac:	ldr	ip, [fp, #8]
   265b0:	str	ip, [sp]
   265b4:	bl	d694 <msgbuf_vunparse_fmt@plt>
   265b8:	mov	r0, #0
   265bc:	mov	sp, fp
   265c0:	pop	{fp, pc}

000265c4 <msgbuf_cache_init>:
   265c4:	push	{r4, sl, fp, lr}
   265c8:	add	fp, sp, #8
   265cc:	mov	ip, #0
   265d0:	str	ip, [r0, #1672]	; 0x688
   265d4:	str	r1, [r0]
   265d8:	str	ip, [r0, #516]	; 0x204
   265dc:	ldr	r3, [r1]
   265e0:	cmp	r3, #0
   265e4:	beq	26608 <msgbuf_cache_init+0x44>
   265e8:	ldr	lr, [r1], #12
   265ec:	ldr	r3, [r0, #516]	; 0x204
   265f0:	ldr	r4, [r1], #12
   265f4:	orr	r3, r3, r4
   265f8:	add	ip, ip, #1
   265fc:	cmp	ip, lr
   26600:	bcc	265f0 <msgbuf_cache_init+0x2c>
   26604:	str	r3, [r0, #516]	; 0x204
   26608:	mov	r1, #0
   2660c:	mov	r3, #0
   26610:	add	r4, r0, r3
   26614:	str	r1, [r4, #552]	; 0x228
   26618:	str	r1, [r4, #520]	; 0x208
   2661c:	add	r3, r3, #36	; 0x24
   26620:	cmp	r3, #1152	; 0x480
   26624:	bne	26610 <msgbuf_cache_init+0x4c>
   26628:	add	r0, r0, #4
   2662c:	movw	r1, #511	; 0x1ff
   26630:	pop	{r4, sl, fp, lr}
   26634:	b	e1f8 <rb_fsnprint@plt>

00026638 <msgbuf_cache_initf>:
   26638:	push	{fp, lr}
   2663c:	mov	fp, sp
   26640:	sub	sp, sp, #24
   26644:	str	r3, [sp, #4]
   26648:	mov	r3, #0
   2664c:	str	r3, [sp]
   26650:	str	r3, [sp, #8]
   26654:	sub	r3, fp, #4
   26658:	str	r3, [sp, #12]
   2665c:	str	r2, [sp, #16]
   26660:	add	r2, fp, #8
   26664:	str	r2, [fp, #-4]
   26668:	mov	r2, sp
   2666c:	bl	e798 <msgbuf_cache_init@plt>
   26670:	mov	sp, fp
   26674:	pop	{fp, pc}

00026678 <msgbuf_cache_get>:
   26678:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2667c:	add	fp, sp, #24
   26680:	sub	sp, sp, #48	; 0x30
   26684:	mov	r5, r1
   26688:	mov	r9, r0
   2668c:	ldr	r7, [r0, #1672]	; 0x688
   26690:	cmp	r7, #0
   26694:	beq	266d0 <msgbuf_cache_get+0x58>
   26698:	ldr	r0, [r7]
   2669c:	mov	r4, #0
   266a0:	cmp	r0, r5
   266a4:	beq	26754 <msgbuf_cache_get+0xdc>
   266a8:	mov	r0, #1
   266ac:	mov	r4, r7
   266b0:	ldr	r7, [r7, #32]
   266b4:	cmp	r7, #0
   266b8:	beq	26784 <msgbuf_cache_get+0x10c>
   266bc:	add	r0, r0, #1
   266c0:	ldr	r1, [r7]
   266c4:	cmp	r1, r5
   266c8:	bne	266ac <msgbuf_cache_get+0x34>
   266cc:	b	26754 <msgbuf_cache_get+0xdc>
   266d0:	mov	r0, #0
   266d4:	add	r0, r0, r0, lsl #3
   266d8:	add	r0, r9, r0, lsl #2
   266dc:	add	r7, r0, #520	; 0x208
   266e0:	mov	r0, r9
   266e4:	ldr	r1, [r0], #4
   266e8:	str	r5, [fp, #-28]	; 0xffffffe4
   266ec:	str	r1, [fp, #-32]	; 0xffffffe0
   266f0:	mov	r4, #0
   266f4:	str	r4, [sp, #4]
   266f8:	movw	r1, #513	; 0x201
   266fc:	str	r1, [sp]
   26700:	ldr	r1, [pc, #148]	; 2679c <msgbuf_cache_get+0x124>
   26704:	ldr	r1, [pc, r1]
   26708:	str	r1, [sp, #8]
   2670c:	sub	r1, fp, #32
   26710:	str	r1, [sp, #12]
   26714:	mov	r8, sp
   26718:	add	r1, r8, #20
   2671c:	str	r1, [sp, #16]
   26720:	movw	r1, #511	; 0x1ff
   26724:	str	r1, [sp, #20]
   26728:	str	r0, [sp, #24]
   2672c:	str	r4, [sp, #28]
   26730:	str	r4, [sp, #32]
   26734:	str	r4, [sp, #36]	; 0x24
   26738:	mov	r6, r7
   2673c:	str	r5, [r6], #4
   26740:	mov	r0, r6
   26744:	bl	d7b4 <rb_linebuf_newbuf@plt>
   26748:	mov	r0, r6
   2674c:	mov	r1, r8
   26750:	bl	e45c <rb_linebuf_put@plt>
   26754:	ldr	r0, [r9, #1672]	; 0x688
   26758:	cmp	r0, r7
   2675c:	beq	26778 <msgbuf_cache_get+0x100>
   26760:	cmp	r4, #0
   26764:	ldrne	r0, [r7, #32]
   26768:	strne	r0, [r4, #32]
   2676c:	ldr	r0, [r9, #1672]	; 0x688
   26770:	str	r0, [r7, #32]
   26774:	str	r7, [r9, #1672]	; 0x688
   26778:	add	r0, r7, #4
   2677c:	sub	sp, fp, #24
   26780:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26784:	cmp	r0, #31
   26788:	bls	266d4 <msgbuf_cache_get+0x5c>
   2678c:	add	r0, r4, #4
   26790:	bl	e00c <rb_linebuf_donebuf@plt>
   26794:	mov	r7, r4
   26798:	b	266e0 <msgbuf_cache_get+0x68>
   2679c:	.word	0x00034214

000267a0 <msgbuf_cache_free>:
   267a0:	push	{r4, r5, fp, lr}
   267a4:	add	fp, sp, #8
   267a8:	mov	r4, r0
   267ac:	ldr	r5, [r0, #1672]	; 0x688
   267b0:	cmp	r5, #0
   267b4:	beq	267cc <msgbuf_cache_free+0x2c>
   267b8:	add	r0, r5, #4
   267bc:	bl	e00c <rb_linebuf_donebuf@plt>
   267c0:	ldr	r5, [r5, #32]
   267c4:	cmp	r5, #0
   267c8:	bne	267b8 <msgbuf_cache_free+0x18>
   267cc:	mov	r0, #0
   267d0:	str	r0, [r4, #1672]	; 0x688
   267d4:	pop	{r4, r5, fp, pc}

000267d8 <add_top_conf>:
   267d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   267dc:	add	fp, sp, #24
   267e0:	mov	r8, r3
   267e4:	mov	r5, r2
   267e8:	mov	r6, r1
   267ec:	mov	r7, r0
   267f0:	mov	r0, #28
   267f4:	bl	26830 <rb_malloc>
   267f8:	mov	r4, r0
   267fc:	str	r7, [r0]
   26800:	str	r6, [r0, #4]
   26804:	str	r5, [r0, #8]
   26808:	str	r8, [r0, #24]
   2680c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   26810:	mov	r1, r0
   26814:	ldr	r2, [pc, #16]	; 2682c <add_top_conf+0x54>
   26818:	add	r2, pc, r2
   2681c:	mov	r0, r4
   26820:	bl	26850 <rb_dlinkAdd>
   26824:	mov	r0, #0
   26828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2682c:	.word	0x0003f974

00026830 <rb_malloc>:
   26830:	push	{fp, lr}
   26834:	mov	fp, sp
   26838:	mov	r1, r0
   2683c:	mov	r0, #1
   26840:	bl	cfa4 <calloc@plt>
   26844:	cmp	r0, #0
   26848:	popne	{fp, pc}
   2684c:	bl	d448 <rb_outofmemory@plt>

00026850 <rb_dlinkAdd>:
   26850:	push	{fp, lr}
   26854:	mov	fp, sp
   26858:	cmp	r0, #0
   2685c:	beq	268bc <rb_dlinkAdd+0x6c>
   26860:	cmp	r1, #0
   26864:	beq	268dc <rb_dlinkAdd+0x8c>
   26868:	cmp	r2, #0
   2686c:	beq	268fc <rb_dlinkAdd+0xac>
   26870:	mov	r3, #0
   26874:	stm	r1, {r0, r3}
   26878:	ldr	r0, [r2]
   2687c:	str	r0, [r1, #8]
   26880:	ldr	r0, [r2]
   26884:	cmp	r0, #0
   26888:	beq	26898 <rb_dlinkAdd+0x48>
   2688c:	add	r0, r0, #4
   26890:	str	r1, [r0]
   26894:	b	268a8 <rb_dlinkAdd+0x58>
   26898:	mov	r0, r2
   2689c:	ldr	r3, [r0, #4]!
   268a0:	cmp	r3, #0
   268a4:	streq	r1, [r0]
   268a8:	str	r1, [r2]
   268ac:	ldr	r0, [r2, #8]
   268b0:	add	r0, r0, #1
   268b4:	str	r0, [r2, #8]
   268b8:	pop	{fp, pc}
   268bc:	ldr	r0, [pc, #88]	; 2691c <rb_dlinkAdd+0xcc>
   268c0:	add	r0, pc, r0
   268c4:	ldr	r1, [pc, #84]	; 26920 <rb_dlinkAdd+0xd0>
   268c8:	add	r1, pc, r1
   268cc:	ldr	r3, [pc, #80]	; 26924 <rb_dlinkAdd+0xd4>
   268d0:	add	r3, pc, r3
   268d4:	mov	r2, #143	; 0x8f
   268d8:	bl	e7e0 <__assert_fail@plt>
   268dc:	ldr	r0, [pc, #68]	; 26928 <rb_dlinkAdd+0xd8>
   268e0:	add	r0, pc, r0
   268e4:	ldr	r1, [pc, #64]	; 2692c <rb_dlinkAdd+0xdc>
   268e8:	add	r1, pc, r1
   268ec:	ldr	r3, [pc, #60]	; 26930 <rb_dlinkAdd+0xe0>
   268f0:	add	r3, pc, r3
   268f4:	mov	r2, #144	; 0x90
   268f8:	bl	e7e0 <__assert_fail@plt>
   268fc:	ldr	r0, [pc, #48]	; 26934 <rb_dlinkAdd+0xe4>
   26900:	add	r0, pc, r0
   26904:	ldr	r1, [pc, #44]	; 26938 <rb_dlinkAdd+0xe8>
   26908:	add	r1, pc, r1
   2690c:	ldr	r3, [pc, #40]	; 2693c <rb_dlinkAdd+0xec>
   26910:	add	r3, pc, r3
   26914:	mov	r2, #145	; 0x91
   26918:	bl	e7e0 <__assert_fail@plt>
   2691c:	.word	0x00019d51
   26920:	.word	0x00019cee
   26924:	.word	0x00019d4e
   26928:	.word	0x00019ccc
   2692c:	.word	0x00019cce
   26930:	.word	0x00019d2e
   26934:	.word	0x0001f545
   26938:	.word	0x00019cae
   2693c:	.word	0x00019d0e

00026940 <find_top_conf>:
   26940:	push	{r4, r5, r6, sl, fp, lr}
   26944:	add	fp, sp, #16
   26948:	ldr	r6, [pc, #64]	; 26990 <find_top_conf+0x50>
   2694c:	ldr	r6, [pc, r6]
   26950:	cmp	r6, #0
   26954:	beq	26984 <find_top_conf+0x44>
   26958:	mov	r4, r0
   2695c:	ldr	r5, [r6]
   26960:	ldr	r0, [r5]
   26964:	mov	r1, r4
   26968:	bl	d340 <rb_strcasecmp@plt>
   2696c:	cmp	r0, #0
   26970:	moveq	r0, r5
   26974:	popeq	{r4, r5, r6, sl, fp, pc}
   26978:	ldr	r6, [r6, #8]
   2697c:	cmp	r6, #0
   26980:	bne	2695c <find_top_conf+0x1c>
   26984:	mov	r5, #0
   26988:	mov	r0, r5
   2698c:	pop	{r4, r5, r6, sl, fp, pc}
   26990:	.word	0x0003f840

00026994 <find_conf_item>:
   26994:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26998:	add	fp, sp, #24
   2699c:	mov	r4, r1
   269a0:	mov	r8, r0
   269a4:	ldr	r0, [r0, #24]
   269a8:	cmp	r0, #0
   269ac:	beq	269fc <find_conf_item+0x68>
   269b0:	ldr	r5, [r8, #24]
   269b4:	ldr	r0, [r5, #4]
   269b8:	cmp	r0, #0
   269bc:	beq	269fc <find_conf_item+0x68>
   269c0:	mov	r7, #0
   269c4:	mov	r6, #24
   269c8:	ldr	r0, [r5]
   269cc:	mov	r1, r4
   269d0:	bl	d340 <rb_strcasecmp@plt>
   269d4:	cmp	r0, #0
   269d8:	beq	26a30 <find_conf_item+0x9c>
   269dc:	add	r7, r7, #1
   269e0:	ldr	r0, [r8, #24]
   269e4:	add	r1, r7, r7, lsl #2
   269e8:	add	r5, r0, r1, lsl #2
   269ec:	ldr	r0, [r0, r6]
   269f0:	add	r6, r6, #20
   269f4:	cmp	r0, #0
   269f8:	bne	269c8 <find_conf_item+0x34>
   269fc:	ldr	r6, [r8, #12]
   26a00:	cmp	r6, #0
   26a04:	bne	26a18 <find_conf_item+0x84>
   26a08:	b	26a38 <find_conf_item+0xa4>
   26a0c:	ldr	r6, [r6, #8]
   26a10:	cmp	r6, #0
   26a14:	beq	26a38 <find_conf_item+0xa4>
   26a18:	ldr	r5, [r6]
   26a1c:	ldr	r0, [r5]
   26a20:	mov	r1, r4
   26a24:	bl	d340 <rb_strcasecmp@plt>
   26a28:	cmp	r0, #0
   26a2c:	bne	26a0c <find_conf_item+0x78>
   26a30:	mov	r0, r5
   26a34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26a38:	mov	r5, #0
   26a3c:	mov	r0, r5
   26a40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026a44 <remove_top_conf>:
   26a44:	push	{r4, r5, r6, sl, fp, lr}
   26a48:	add	fp, sp, #16
   26a4c:	bl	dae4 <find_top_conf@plt>
   26a50:	mvn	r5, #0
   26a54:	cmp	r0, #0
   26a58:	beq	26a98 <remove_top_conf+0x54>
   26a5c:	mov	r4, r0
   26a60:	ldr	r1, [pc, #56]	; 26aa0 <remove_top_conf+0x5c>
   26a64:	add	r1, pc, r1
   26a68:	bl	26aa8 <rb_dlinkFind>
   26a6c:	cmp	r0, #0
   26a70:	beq	26a98 <remove_top_conf+0x54>
   26a74:	mov	r6, r0
   26a78:	ldr	r1, [pc, #36]	; 26aa4 <remove_top_conf+0x60>
   26a7c:	add	r1, pc, r1
   26a80:	bl	26b54 <rb_dlinkDelete>
   26a84:	mov	r0, r6
   26a88:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   26a8c:	mov	r0, r4
   26a90:	bl	26c0c <rb_free>
   26a94:	mov	r5, #0
   26a98:	mov	r0, r5
   26a9c:	pop	{r4, r5, r6, sl, fp, pc}
   26aa0:	.word	0x0003f728
   26aa4:	.word	0x0003f710

00026aa8 <rb_dlinkFind>:
   26aa8:	push	{fp, lr}
   26aac:	mov	fp, sp
   26ab0:	cmp	r1, #0
   26ab4:	beq	26afc <rb_dlinkFind+0x54>
   26ab8:	cmp	r0, #0
   26abc:	beq	26b1c <rb_dlinkFind+0x74>
   26ac0:	ldr	r2, [r1]
   26ac4:	mov	r1, #0
   26ac8:	cmp	r2, #0
   26acc:	bne	26ae4 <rb_dlinkFind+0x3c>
   26ad0:	mov	r0, r1
   26ad4:	pop	{fp, pc}
   26ad8:	ldr	r2, [r2, #8]
   26adc:	cmp	r2, #0
   26ae0:	beq	26ad0 <rb_dlinkFind+0x28>
   26ae4:	ldr	r3, [r2]
   26ae8:	cmp	r3, r0
   26aec:	bne	26ad8 <rb_dlinkFind+0x30>
   26af0:	mov	r1, r2
   26af4:	mov	r0, r1
   26af8:	pop	{fp, pc}
   26afc:	ldr	r0, [pc, #56]	; 26b3c <rb_dlinkFind+0x94>
   26b00:	add	r0, pc, r0
   26b04:	ldr	r1, [pc, #52]	; 26b40 <rb_dlinkFind+0x98>
   26b08:	add	r1, pc, r1
   26b0c:	ldr	r3, [pc, #48]	; 26b44 <rb_dlinkFind+0x9c>
   26b10:	add	r3, pc, r3
   26b14:	movw	r2, #310	; 0x136
   26b18:	bl	e7e0 <__assert_fail@plt>
   26b1c:	ldr	r0, [pc, #36]	; 26b48 <rb_dlinkFind+0xa0>
   26b20:	add	r0, pc, r0
   26b24:	ldr	r1, [pc, #32]	; 26b4c <rb_dlinkFind+0xa4>
   26b28:	add	r1, pc, r1
   26b2c:	ldr	r3, [pc, #28]	; 26b50 <rb_dlinkFind+0xa8>
   26b30:	add	r3, pc, r3
   26b34:	movw	r2, #311	; 0x137
   26b38:	bl	e7e0 <__assert_fail@plt>
   26b3c:	.word	0x0001f345
   26b40:	.word	0x00019aae
   26b44:	.word	0x0001a9cb
   26b48:	.word	0x00019af1
   26b4c:	.word	0x00019a8e
   26b50:	.word	0x0001a9ab

00026b54 <rb_dlinkDelete>:
   26b54:	push	{fp, lr}
   26b58:	mov	fp, sp
   26b5c:	cmp	r0, #0
   26b60:	beq	26bb4 <rb_dlinkDelete+0x60>
   26b64:	cmp	r1, #0
   26b68:	beq	26bd4 <rb_dlinkDelete+0x80>
   26b6c:	ldr	ip, [r0, #4]
   26b70:	ldr	r3, [r0, #8]
   26b74:	add	r2, r3, #4
   26b78:	cmp	r3, #0
   26b7c:	addeq	r2, r1, #4
   26b80:	str	ip, [r2]
   26b84:	ldmib	r0, {r2, ip}
   26b88:	cmp	r2, #0
   26b8c:	mov	r3, r1
   26b90:	addne	r3, r2, #8
   26b94:	str	ip, [r3]
   26b98:	mov	r2, #0
   26b9c:	str	r2, [r0, #4]
   26ba0:	str	r2, [r0, #8]
   26ba4:	ldr	r0, [r1, #8]
   26ba8:	sub	r0, r0, #1
   26bac:	str	r0, [r1, #8]
   26bb0:	pop	{fp, pc}
   26bb4:	ldr	r0, [pc, #56]	; 26bf4 <rb_dlinkDelete+0xa0>
   26bb8:	add	r0, pc, r0
   26bbc:	ldr	r1, [pc, #52]	; 26bf8 <rb_dlinkDelete+0xa4>
   26bc0:	add	r1, pc, r1
   26bc4:	ldr	r3, [pc, #48]	; 26bfc <rb_dlinkDelete+0xa8>
   26bc8:	add	r3, pc, r3
   26bcc:	mov	r2, #235	; 0xeb
   26bd0:	bl	e7e0 <__assert_fail@plt>
   26bd4:	ldr	r0, [pc, #36]	; 26c00 <rb_dlinkDelete+0xac>
   26bd8:	add	r0, pc, r0
   26bdc:	ldr	r1, [pc, #32]	; 26c04 <rb_dlinkDelete+0xb0>
   26be0:	add	r1, pc, r1
   26be4:	ldr	r3, [pc, #28]	; 26c08 <rb_dlinkDelete+0xb4>
   26be8:	add	r3, pc, r3
   26bec:	mov	r2, #236	; 0xec
   26bf0:	bl	e7e0 <__assert_fail@plt>
   26bf4:	.word	0x000199f4
   26bf8:	.word	0x000199f6
   26bfc:	.word	0x00019a91
   26c00:	.word	0x0001f26d
   26c04:	.word	0x000199d6
   26c08:	.word	0x00019a71

00026c0c <rb_free>:
   26c0c:	cmp	r0, #0
   26c10:	bxeq	lr
   26c14:	b	d328 <free@plt>

00026c18 <conf_report_error>:
   26c18:	sub	sp, sp, #12
   26c1c:	push	{r4, r5, r6, sl, fp, lr}
   26c20:	add	fp, sp, #16
   26c24:	sub	sp, sp, #532	; 0x214
   26c28:	mov	r5, r0
   26c2c:	add	r0, fp, #8
   26c30:	stm	r0, {r1, r2, r3}
   26c34:	add	r4, sp, #8
   26c38:	mov	r0, r4
   26c3c:	mov	r1, #0
   26c40:	movw	r2, #513	; 0x201
   26c44:	bl	df28 <memset@plt>
   26c48:	add	r3, fp, #8
   26c4c:	str	r3, [fp, #-20]	; 0xffffffec
   26c50:	mov	r0, r4
   26c54:	mov	r1, #512	; 0x200
   26c58:	mov	r2, r5
   26c5c:	bl	e450 <vsnprintf@plt>
   26c60:	ldr	r0, [pc, #168]	; 26d10 <conf_report_error+0xf8>
   26c64:	ldr	r0, [pc, r0]
   26c68:	ldr	r0, [r0]
   26c6c:	cmp	r0, #0
   26c70:	bne	26cd4 <conf_report_error+0xbc>
   26c74:	ldr	r5, [pc, #168]	; 26d24 <conf_report_error+0x10c>
   26c78:	ldr	r5, [pc, r5]
   26c7c:	ldr	r1, [r5]
   26c80:	ldr	r6, [pc, #160]	; 26d28 <conf_report_error+0x110>
   26c84:	ldr	r6, [pc, r6]
   26c88:	ldr	r0, [r6]
   26c8c:	add	r2, r0, #1
   26c90:	ldr	r0, [pc, #148]	; 26d2c <conf_report_error+0x114>
   26c94:	add	r0, pc, r0
   26c98:	mov	r3, r4
   26c9c:	bl	d64c <ierror@plt>
   26ca0:	ldr	r3, [r5]
   26ca4:	ldr	r0, [r6]
   26ca8:	add	r0, r0, #1
   26cac:	stm	sp, {r0, r4}
   26cb0:	ldr	r2, [pc, #120]	; 26d30 <conf_report_error+0x118>
   26cb4:	add	r2, pc, r2
   26cb8:	mov	r0, #256	; 0x100
   26cbc:	mov	r1, #0
   26cc0:	bl	d640 <sendto_realops_snomask@plt>
   26cc4:	sub	sp, fp, #16
   26cc8:	pop	{r4, r5, r6, sl, fp, lr}
   26ccc:	add	sp, sp, #12
   26cd0:	bx	lr
   26cd4:	ldr	r0, [pc, #56]	; 26d14 <conf_report_error+0xfc>
   26cd8:	ldr	r0, [pc, r0]
   26cdc:	ldr	r2, [r0]
   26ce0:	ldr	r0, [pc, #48]	; 26d18 <conf_report_error+0x100>
   26ce4:	ldr	r0, [pc, r0]
   26ce8:	ldr	r0, [r0]
   26cec:	ldr	r1, [pc, #40]	; 26d1c <conf_report_error+0x104>
   26cf0:	ldr	r1, [pc, r1]
   26cf4:	ldr	r1, [r1]
   26cf8:	str	r4, [sp]
   26cfc:	add	r3, r1, #1
   26d00:	ldr	r1, [pc, #24]	; 26d20 <conf_report_error+0x108>
   26d04:	add	r1, pc, r1
   26d08:	bl	dd60 <fprintf@plt>
   26d0c:	b	26cc4 <conf_report_error+0xac>
   26d10:	.word	0x00033e28
   26d14:	.word	0x00033c20
   26d18:	.word	0x00033c74
   26d1c:	.word	0x00033d50
   26d20:	.word	0x0001c9b8
   26d24:	.word	0x00033c80
   26d28:	.word	0x00033dbc
   26d2c:	.word	0x0001ca5d
   26d30:	.word	0x0001ca1b

00026d34 <conf_report_warning>:
   26d34:	sub	sp, sp, #12
   26d38:	push	{r4, r5, r6, sl, fp, lr}
   26d3c:	add	fp, sp, #16
   26d40:	sub	sp, sp, #532	; 0x214
   26d44:	mov	r5, r0
   26d48:	add	r0, fp, #8
   26d4c:	stm	r0, {r1, r2, r3}
   26d50:	add	r4, sp, #8
   26d54:	mov	r0, r4
   26d58:	mov	r1, #0
   26d5c:	movw	r2, #513	; 0x201
   26d60:	bl	df28 <memset@plt>
   26d64:	add	r3, fp, #8
   26d68:	str	r3, [fp, #-20]	; 0xffffffec
   26d6c:	mov	r0, r4
   26d70:	mov	r1, #512	; 0x200
   26d74:	mov	r2, r5
   26d78:	bl	e450 <vsnprintf@plt>
   26d7c:	ldr	r0, [pc, #168]	; 26e2c <conf_report_warning+0xf8>
   26d80:	ldr	r0, [pc, r0]
   26d84:	ldr	r0, [r0]
   26d88:	cmp	r0, #0
   26d8c:	bne	26df0 <conf_report_warning+0xbc>
   26d90:	ldr	r5, [pc, #168]	; 26e40 <conf_report_warning+0x10c>
   26d94:	ldr	r5, [pc, r5]
   26d98:	ldr	r1, [r5]
   26d9c:	ldr	r6, [pc, #160]	; 26e44 <conf_report_warning+0x110>
   26da0:	ldr	r6, [pc, r6]
   26da4:	ldr	r0, [r6]
   26da8:	add	r2, r0, #1
   26dac:	ldr	r0, [pc, #148]	; 26e48 <conf_report_warning+0x114>
   26db0:	add	r0, pc, r0
   26db4:	mov	r3, r4
   26db8:	bl	d3ac <iwarn@plt>
   26dbc:	ldr	r3, [r5]
   26dc0:	ldr	r0, [r6]
   26dc4:	add	r0, r0, #1
   26dc8:	stm	sp, {r0, r4}
   26dcc:	ldr	r2, [pc, #120]	; 26e4c <conf_report_warning+0x118>
   26dd0:	add	r2, pc, r2
   26dd4:	mov	r0, #256	; 0x100
   26dd8:	mov	r1, #0
   26ddc:	bl	d640 <sendto_realops_snomask@plt>
   26de0:	sub	sp, fp, #16
   26de4:	pop	{r4, r5, r6, sl, fp, lr}
   26de8:	add	sp, sp, #12
   26dec:	bx	lr
   26df0:	ldr	r0, [pc, #56]	; 26e30 <conf_report_warning+0xfc>
   26df4:	ldr	r0, [pc, r0]
   26df8:	ldr	r2, [r0]
   26dfc:	ldr	r0, [pc, #48]	; 26e34 <conf_report_warning+0x100>
   26e00:	ldr	r0, [pc, r0]
   26e04:	ldr	r0, [r0]
   26e08:	ldr	r1, [pc, #40]	; 26e38 <conf_report_warning+0x104>
   26e0c:	ldr	r1, [pc, r1]
   26e10:	ldr	r1, [r1]
   26e14:	str	r4, [sp]
   26e18:	add	r3, r1, #1
   26e1c:	ldr	r1, [pc, #24]	; 26e3c <conf_report_warning+0x108>
   26e20:	add	r1, pc, r1
   26e24:	bl	dd60 <fprintf@plt>
   26e28:	b	26de0 <conf_report_warning+0xac>
   26e2c:	.word	0x00033d0c
   26e30:	.word	0x00033b04
   26e34:	.word	0x00033b58
   26e38:	.word	0x00033c34
   26e3c:	.word	0x0001c89c
   26e40:	.word	0x00033b64
   26e44:	.word	0x00033ca0
   26e48:	.word	0x0001c941
   26e4c:	.word	0x0001c918

00026e50 <conf_start_block>:
   26e50:	push	{r4, r5, r6, sl, fp, lr}
   26e54:	add	fp, sp, #16
   26e58:	mov	r4, r1
   26e5c:	mov	r5, r0
   26e60:	bl	dae4 <find_top_conf@plt>
   26e64:	ldr	r6, [pc, #112]	; 26edc <conf_start_block+0x8c>
   26e68:	ldr	r6, [pc, r6]
   26e6c:	str	r0, [r6]
   26e70:	cmp	r0, #0
   26e74:	beq	26e8c <conf_start_block+0x3c>
   26e78:	cmp	r4, #0
   26e7c:	beq	26ea0 <conf_start_block+0x50>
   26e80:	mov	r0, r4
   26e84:	bl	26ee8 <rb_strdup>
   26e88:	b	26ea4 <conf_start_block+0x54>
   26e8c:	ldr	r0, [pc, #76]	; 26ee0 <conf_start_block+0x90>
   26e90:	add	r0, pc, r0
   26e94:	mov	r1, r5
   26e98:	bl	d400 <conf_report_error@plt>
   26e9c:	b	26ed4 <conf_start_block+0x84>
   26ea0:	mov	r0, #0
   26ea4:	ldr	r1, [pc, #56]	; 26ee4 <conf_start_block+0x94>
   26ea8:	add	r1, pc, r1
   26eac:	str	r0, [r1]
   26eb0:	ldr	r0, [r6]
   26eb4:	ldr	r1, [r0, #4]
   26eb8:	cmp	r1, #0
   26ebc:	beq	26ecc <conf_start_block+0x7c>
   26ec0:	blx	r1
   26ec4:	cmp	r0, #0
   26ec8:	blt	26ed4 <conf_start_block+0x84>
   26ecc:	mov	r0, #0
   26ed0:	pop	{r4, r5, r6, sl, fp, pc}
   26ed4:	mvn	r0, #0
   26ed8:	pop	{r4, r5, r6, sl, fp, pc}
   26edc:	.word	0x00033ba4
   26ee0:	.word	0x0001c873
   26ee4:	.word	0x0003f2f0

00026ee8 <rb_strdup>:
   26ee8:	push	{r4, r5, fp, lr}
   26eec:	add	fp, sp, #8
   26ef0:	mov	r4, r0
   26ef4:	bl	dc94 <strlen@plt>
   26ef8:	add	r0, r0, #1
   26efc:	bl	da90 <malloc@plt>
   26f00:	cmp	r0, #0
   26f04:	beq	26f1c <rb_strdup+0x34>
   26f08:	mov	r5, r0
   26f0c:	mov	r1, r4
   26f10:	bl	d928 <strcpy@plt>
   26f14:	mov	r0, r5
   26f18:	pop	{r4, r5, fp, pc}
   26f1c:	bl	d448 <rb_outofmemory@plt>

00026f20 <conf_end_block>:
   26f20:	push	{r4, r5, fp, lr}
   26f24:	add	fp, sp, #8
   26f28:	ldr	r1, [r0, #8]
   26f2c:	mov	r5, #0
   26f30:	cmp	r1, #0
   26f34:	mov	r4, #0
   26f38:	beq	26f44 <conf_end_block+0x24>
   26f3c:	blx	r1
   26f40:	mov	r4, r0
   26f44:	ldr	r0, [pc, #24]	; 26f64 <conf_end_block+0x44>
   26f48:	ldr	r0, [pc, r0]
   26f4c:	bl	26c0c <rb_free>
   26f50:	ldr	r0, [pc, #16]	; 26f68 <conf_end_block+0x48>
   26f54:	add	r0, pc, r0
   26f58:	str	r5, [r0]
   26f5c:	mov	r0, r4
   26f60:	pop	{r4, r5, fp, pc}
   26f64:	.word	0x0003f250
   26f68:	.word	0x0003f244

00026f6c <conf_call_set>:
   26f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26f70:	add	fp, sp, #28
   26f74:	sub	sp, sp, #4
   26f78:	mvn	r8, #0
   26f7c:	cmp	r0, #0
   26f80:	beq	270c0 <conf_call_set+0x154>
   26f84:	mov	r4, r2
   26f88:	mov	r9, r1
   26f8c:	mov	r7, r0
   26f90:	bl	d994 <find_conf_item@plt>
   26f94:	cmp	r0, #0
   26f98:	beq	2702c <conf_call_set+0xc0>
   26f9c:	mov	r6, r0
   26fa0:	ldr	sl, [r4, #8]
   26fa4:	ldr	r5, [sl, #4]
   26fa8:	tst	r5, #256	; 0x100
   26fac:	beq	26fcc <conf_call_set+0x60>
   26fb0:	ldrb	r0, [r6, #5]
   26fb4:	tst	r0, #1
   26fb8:	bne	26fcc <conf_call_set+0x60>
   26fbc:	ldr	r1, [r7]
   26fc0:	ldr	r0, [pc, #360]	; 27130 <conf_call_set+0x1c4>
   26fc4:	add	r0, pc, r0
   26fc8:	b	27038 <conf_call_set+0xcc>
   26fcc:	uxtb	r2, r5
   26fd0:	ldr	r0, [r6, #4]
   26fd4:	uxtb	r1, r0
   26fd8:	cmp	r2, r1
   26fdc:	beq	27074 <conf_call_set+0x108>
   26fe0:	cmp	r2, #5
   26fe4:	cmpeq	r1, #3
   26fe8:	beq	27044 <conf_call_set+0xd8>
   26fec:	cmp	r2, #2
   26ff0:	cmpeq	r1, #4
   26ff4:	beq	27070 <conf_call_set+0x104>
   26ff8:	ldr	r4, [r7]
   26ffc:	bl	27144 <conf_strtype>
   27000:	mov	r6, r0
   27004:	mov	r0, r5
   27008:	bl	27144 <conf_strtype>
   2700c:	str	r0, [sp]
   27010:	ldr	r0, [pc, #292]	; 2713c <conf_call_set+0x1d0>
   27014:	add	r0, pc, r0
   27018:	mov	r1, r4
   2701c:	mov	r2, r9
   27020:	mov	r3, r6
   27024:	bl	d400 <conf_report_error@plt>
   27028:	b	270c0 <conf_call_set+0x154>
   2702c:	ldr	r1, [r7]
   27030:	ldr	r0, [pc, #244]	; 2712c <conf_call_set+0x1c0>
   27034:	add	r0, pc, r0
   27038:	mov	r2, r9
   2703c:	bl	d400 <conf_report_error@plt>
   27040:	b	270c0 <conf_call_set+0x154>
   27044:	mov	r0, #3
   27048:	str	r0, [sl, #4]
   2704c:	ldr	r1, [sl, #8]
   27050:	ldr	r2, [pc, #220]	; 27134 <conf_call_set+0x1c8>
   27054:	add	r2, pc, r2
   27058:	ldr	r0, [pc, #216]	; 27138 <conf_call_set+0x1cc>
   2705c:	add	r0, pc, r0
   27060:	cmp	r1, #1
   27064:	moveq	r0, r2
   27068:	bl	26ee8 <rb_strdup>
   2706c:	str	r0, [sl, #8]
   27070:	ldr	r0, [r6, #4]
   27074:	tst	r0, #256	; 0x100
   27078:	bne	270b0 <conf_call_set+0x144>
   2707c:	mov	r8, #0
   27080:	cmp	r0, #5
   27084:	bhi	270c0 <conf_call_set+0x154>
   27088:	mov	r1, #1
   2708c:	mov	r2, #52	; 0x34
   27090:	tst	r2, r1, lsl r0
   27094:	beq	270cc <conf_call_set+0x160>
   27098:	ldr	r1, [r6, #16]
   2709c:	cmp	r1, #0
   270a0:	beq	270fc <conf_call_set+0x190>
   270a4:	add	r0, sl, #8
   270a8:	bl	27178 <conf_set_generic_int>
   270ac:	b	270c0 <conf_call_set+0x154>
   270b0:	ldr	r0, [r4, #8]
   270b4:	ldr	r1, [r6, #8]
   270b8:	blx	r1
   270bc:	mov	r8, #0
   270c0:	mov	r0, r8
   270c4:	sub	sp, fp, #28
   270c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270cc:	mov	r2, #10
   270d0:	tst	r2, r1, lsl r0
   270d4:	beq	270c0 <conf_call_set+0x154>
   270d8:	ldr	r0, [sl, #8]
   270dc:	cmp	r0, #0
   270e0:	ldrbne	r1, [r0]
   270e4:	cmpne	r1, #0
   270e8:	bne	27108 <conf_call_set+0x19c>
   270ec:	ldr	r1, [r7]
   270f0:	ldr	r0, [pc, #72]	; 27140 <conf_call_set+0x1d4>
   270f4:	add	r0, pc, r0
   270f8:	b	27038 <conf_call_set+0xcc>
   270fc:	ldr	r1, [r6, #8]
   27100:	add	r0, sl, #8
   27104:	b	27124 <conf_call_set+0x1b8>
   27108:	ldr	r2, [r6, #16]
   2710c:	cmp	r2, #0
   27110:	beq	27120 <conf_call_set+0x1b4>
   27114:	ldr	r1, [r6, #12]
   27118:	bl	27184 <conf_set_generic_string>
   2711c:	b	270c0 <conf_call_set+0x154>
   27120:	ldr	r1, [r6, #8]
   27124:	blx	r1
   27128:	b	270c0 <conf_call_set+0x154>
   2712c:	.word	0x0001c6f8
   27130:	.word	0x0001c793
   27134:	.word	0x0001b29a
   27138:	.word	0x0001b296
   2713c:	.word	0x0001c771
   27140:	.word	0x0001c6bd

00027144 <conf_strtype>:
   27144:	sub	r0, r0, #1
   27148:	uxtb	r1, r0
   2714c:	cmp	r1, #4
   27150:	ldrhi	r0, [pc, #28]	; 27174 <conf_strtype+0x30>
   27154:	addhi	r0, pc, r0
   27158:	bxhi	lr
   2715c:	sxtb	r0, r0
   27160:	ldr	r1, [pc, #8]	; 27170 <conf_strtype+0x2c>
   27164:	add	r1, pc, r1
   27168:	ldr	r0, [r1, r0, lsl #2]
   2716c:	bx	lr
   27170:	.word	0x00032d24
   27174:	.word	0x0001c778

00027178 <conf_set_generic_int>:
   27178:	ldr	r0, [r0]
   2717c:	str	r0, [r1]
   27180:	bx	lr

00027184 <conf_set_generic_string>:
   27184:	push	{r4, r5, r6, sl, fp, lr}
   27188:	add	fp, sp, #16
   2718c:	mov	r4, r2
   27190:	mov	r5, r0
   27194:	cmp	r1, #0
   27198:	beq	271b4 <conf_set_generic_string+0x30>
   2719c:	mov	r6, r1
   271a0:	mov	r0, r5
   271a4:	bl	dc94 <strlen@plt>
   271a8:	cmp	r0, r6
   271ac:	movhi	r0, #0
   271b0:	strbhi	r0, [r5, r6]
   271b4:	ldr	r0, [r4]
   271b8:	bl	26c0c <rb_free>
   271bc:	mov	r0, r5
   271c0:	bl	26ee8 <rb_strdup>
   271c4:	str	r0, [r4]
   271c8:	pop	{r4, r5, r6, sl, fp, pc}

000271cc <add_conf_item>:
   271cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   271d0:	add	fp, sp, #24
   271d4:	mov	r8, r3
   271d8:	mov	r9, r2
   271dc:	mov	r5, r1
   271e0:	bl	dae4 <find_top_conf@plt>
   271e4:	mvn	r4, #0
   271e8:	cmp	r0, #0
   271ec:	beq	27204 <add_conf_item+0x38>
   271f0:	mov	r6, r0
   271f4:	mov	r1, r5
   271f8:	bl	d994 <find_conf_item@plt>
   271fc:	cmp	r0, #0
   27200:	beq	2720c <add_conf_item+0x40>
   27204:	mov	r0, r4
   27208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2720c:	mov	r0, #20
   27210:	bl	26830 <rb_malloc>
   27214:	mov	r7, r0
   27218:	stm	r0, {r5, r9}
   2721c:	str	r8, [r0, #8]
   27220:	mov	r4, #0
   27224:	str	r4, [r0, #16]
   27228:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2722c:	mov	r1, r0
   27230:	add	r2, r6, #12
   27234:	mov	r0, r7
   27238:	bl	26850 <rb_dlinkAdd>
   2723c:	mov	r0, r4
   27240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027244 <remove_conf_item>:
   27244:	push	{r4, r5, r6, r7, fp, lr}
   27248:	add	fp, sp, #16
   2724c:	mov	r5, r1
   27250:	bl	dae4 <find_top_conf@plt>
   27254:	mvn	r4, #0
   27258:	cmp	r0, #0
   2725c:	beq	272ac <remove_conf_item+0x68>
   27260:	mov	r6, r0
   27264:	mov	r1, r5
   27268:	bl	d994 <find_conf_item@plt>
   2726c:	cmp	r0, #0
   27270:	beq	272ac <remove_conf_item+0x68>
   27274:	mov	r5, r0
   27278:	add	r6, r6, #12
   2727c:	mov	r1, r6
   27280:	bl	26aa8 <rb_dlinkFind>
   27284:	cmp	r0, #0
   27288:	beq	272ac <remove_conf_item+0x68>
   2728c:	mov	r7, r0
   27290:	mov	r1, r6
   27294:	bl	26b54 <rb_dlinkDelete>
   27298:	mov	r0, r7
   2729c:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   272a0:	mov	r0, r5
   272a4:	bl	26c0c <rb_free>
   272a8:	mov	r4, #0
   272ac:	mov	r0, r4
   272b0:	pop	{r4, r5, r6, r7, fp, pc}

000272b4 <newconf_init>:
   272b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272b8:	add	fp, sp, #28
   272bc:	sub	sp, sp, #4
   272c0:	ldr	r4, [pc, #1656]	; 27940 <newconf_init+0x68c>
   272c4:	add	r4, pc, r4
   272c8:	mov	r0, r4
   272cc:	mov	r1, #0
   272d0:	mov	r2, #0
   272d4:	mov	r3, #0
   272d8:	bl	e420 <add_top_conf@plt>
   272dc:	ldr	r1, [pc, #1632]	; 27944 <newconf_init+0x690>
   272e0:	add	r1, pc, r1
   272e4:	ldr	r3, [pc, #1628]	; 27948 <newconf_init+0x694>
   272e8:	add	r3, pc, r3
   272ec:	mov	r0, r4
   272f0:	mov	r2, #1
   272f4:	bl	d3f4 <add_conf_item@plt>
   272f8:	ldr	r1, [pc, #1612]	; 2794c <newconf_init+0x698>
   272fc:	add	r1, pc, r1
   27300:	ldr	r3, [pc, #1608]	; 27950 <newconf_init+0x69c>
   27304:	add	r3, pc, r3
   27308:	mov	r0, r4
   2730c:	mov	r2, #1
   27310:	bl	d3f4 <add_conf_item@plt>
   27314:	ldr	r0, [pc, #1592]	; 27954 <newconf_init+0x6a0>
   27318:	add	r0, pc, r0
   2731c:	ldr	r3, [pc, #1588]	; 27958 <newconf_init+0x6a4>
   27320:	add	r3, pc, r3
   27324:	mov	r1, #0
   27328:	mov	r2, #0
   2732c:	bl	e420 <add_top_conf@plt>
   27330:	ldr	r0, [pc, #1572]	; 2795c <newconf_init+0x6a8>
   27334:	add	r0, pc, r0
   27338:	ldr	r3, [pc, #1568]	; 27960 <newconf_init+0x6ac>
   2733c:	add	r3, pc, r3
   27340:	mov	r1, #0
   27344:	mov	r2, #0
   27348:	bl	e420 <add_top_conf@plt>
   2734c:	ldr	r0, [pc, #1552]	; 27964 <newconf_init+0x6b0>
   27350:	add	r0, pc, r0
   27354:	ldr	r3, [pc, #1548]	; 27968 <newconf_init+0x6b4>
   27358:	add	r3, pc, r3
   2735c:	mov	r1, #0
   27360:	mov	r2, #0
   27364:	bl	e420 <add_top_conf@plt>
   27368:	ldr	r0, [pc, #1532]	; 2796c <newconf_init+0x6b8>
   2736c:	add	r0, pc, r0
   27370:	ldr	r1, [pc, #1528]	; 27970 <newconf_init+0x6bc>
   27374:	add	r1, pc, r1
   27378:	ldr	r2, [pc, #1524]	; 27974 <newconf_init+0x6c0>
   2737c:	add	r2, pc, r2
   27380:	ldr	r3, [pc, #1520]	; 27978 <newconf_init+0x6c4>
   27384:	add	r3, pc, r3
   27388:	bl	e420 <add_top_conf@plt>
   2738c:	ldr	r0, [pc, #1512]	; 2797c <newconf_init+0x6c8>
   27390:	add	r0, pc, r0
   27394:	ldr	r1, [pc, #1508]	; 27980 <newconf_init+0x6cc>
   27398:	add	r1, pc, r1
   2739c:	ldr	r2, [pc, #1504]	; 27984 <newconf_init+0x6d0>
   273a0:	add	r2, pc, r2
   273a4:	ldr	r3, [pc, #1500]	; 27988 <newconf_init+0x6d4>
   273a8:	add	r3, pc, r3
   273ac:	bl	e420 <add_top_conf@plt>
   273b0:	ldr	r0, [pc, #1492]	; 2798c <newconf_init+0x6d8>
   273b4:	add	r0, pc, r0
   273b8:	ldr	r3, [pc, #1488]	; 27990 <newconf_init+0x6dc>
   273bc:	add	r3, pc, r3
   273c0:	mov	r1, #0
   273c4:	mov	r2, #0
   273c8:	bl	e420 <add_top_conf@plt>
   273cc:	ldr	r6, [pc, #1472]	; 27994 <newconf_init+0x6e0>
   273d0:	add	r6, pc, r6
   273d4:	ldr	r1, [pc, #1468]	; 27998 <newconf_init+0x6e4>
   273d8:	add	r1, pc, r1
   273dc:	ldr	r2, [pc, #1464]	; 2799c <newconf_init+0x6e8>
   273e0:	add	r2, pc, r2
   273e4:	mov	r0, r6
   273e8:	mov	r3, #0
   273ec:	bl	e420 <add_top_conf@plt>
   273f0:	ldr	r1, [pc, #1448]	; 279a0 <newconf_init+0x6ec>
   273f4:	add	r1, pc, r1
   273f8:	ldr	r3, [pc, #1444]	; 279a4 <newconf_init+0x6f0>
   273fc:	add	r3, pc, r3
   27400:	mov	r0, r6
   27404:	mov	r2, #5
   27408:	bl	d3f4 <add_conf_item@plt>
   2740c:	ldr	r1, [pc, #1428]	; 279a8 <newconf_init+0x6f4>
   27410:	add	r1, pc, r1
   27414:	ldr	r3, [pc, #1424]	; 279ac <newconf_init+0x6f8>
   27418:	add	r3, pc, r3
   2741c:	mov	r0, r6
   27420:	mov	r2, #5
   27424:	bl	d3f4 <add_conf_item@plt>
   27428:	ldr	r1, [pc, #1408]	; 279b0 <newconf_init+0x6fc>
   2742c:	add	r1, pc, r1
   27430:	ldr	r3, [pc, #1404]	; 279b4 <newconf_init+0x700>
   27434:	add	r3, pc, r3
   27438:	mov	r0, r6
   2743c:	movw	r2, #258	; 0x102
   27440:	bl	d3f4 <add_conf_item@plt>
   27444:	ldr	r1, [pc, #1388]	; 279b8 <newconf_init+0x704>
   27448:	add	r1, pc, r1
   2744c:	ldr	r3, [pc, #1384]	; 279bc <newconf_init+0x708>
   27450:	add	r3, pc, r3
   27454:	mov	r0, r6
   27458:	movw	r2, #258	; 0x102
   2745c:	bl	d3f4 <add_conf_item@plt>
   27460:	ldr	r1, [pc, #1368]	; 279c0 <newconf_init+0x70c>
   27464:	add	r1, pc, r1
   27468:	ldr	r3, [pc, #1364]	; 279c4 <newconf_init+0x710>
   2746c:	add	r3, pc, r3
   27470:	mov	r0, r6
   27474:	movw	r2, #258	; 0x102
   27478:	bl	d3f4 <add_conf_item@plt>
   2747c:	ldr	r1, [pc, #1348]	; 279c8 <newconf_init+0x714>
   27480:	add	r1, pc, r1
   27484:	ldr	r3, [pc, #1344]	; 279cc <newconf_init+0x718>
   27488:	add	r3, pc, r3
   2748c:	mov	r0, r6
   27490:	movw	r2, #258	; 0x102
   27494:	bl	d3f4 <add_conf_item@plt>
   27498:	ldr	r5, [pc, #1328]	; 279d0 <newconf_init+0x71c>
   2749c:	add	r5, pc, r5
   274a0:	ldr	r4, [pc, #1324]	; 279d4 <newconf_init+0x720>
   274a4:	add	r4, pc, r4
   274a8:	mov	r0, r6
   274ac:	mov	r1, r5
   274b0:	mov	r2, #1
   274b4:	mov	r3, r4
   274b8:	bl	d3f4 <add_conf_item@plt>
   274bc:	ldr	sl, [pc, #1300]	; 279d8 <newconf_init+0x724>
   274c0:	add	sl, pc, sl
   274c4:	mov	r0, r6
   274c8:	mov	r1, sl
   274cc:	mov	r2, #1
   274d0:	mov	r3, r4
   274d4:	bl	d3f4 <add_conf_item@plt>
   274d8:	ldr	r0, [pc, #1276]	; 279dc <newconf_init+0x728>
   274dc:	add	r0, pc, r0
   274e0:	ldr	r1, [pc, #1272]	; 279e0 <newconf_init+0x72c>
   274e4:	add	r1, pc, r1
   274e8:	ldr	r2, [pc, #1268]	; 279e4 <newconf_init+0x730>
   274ec:	add	r2, pc, r2
   274f0:	ldr	r3, [pc, #1264]	; 279e8 <newconf_init+0x734>
   274f4:	add	r3, pc, r3
   274f8:	bl	e420 <add_top_conf@plt>
   274fc:	ldr	r4, [pc, #1256]	; 279ec <newconf_init+0x738>
   27500:	add	r4, pc, r4
   27504:	ldr	r1, [pc, #1252]	; 279f0 <newconf_init+0x73c>
   27508:	add	r1, pc, r1
   2750c:	mov	r0, r4
   27510:	mov	r2, r1
   27514:	mov	r3, #0
   27518:	bl	e420 <add_top_conf@plt>
   2751c:	ldr	r1, [pc, #1232]	; 279f4 <newconf_init+0x740>
   27520:	add	r1, pc, r1
   27524:	ldr	r3, [pc, #1228]	; 279f8 <newconf_init+0x744>
   27528:	add	r3, pc, r3
   2752c:	mov	r0, r4
   27530:	movw	r2, #257	; 0x101
   27534:	bl	d3f4 <add_conf_item@plt>
   27538:	ldr	r6, [pc, #1212]	; 279fc <newconf_init+0x748>
   2753c:	add	r6, pc, r6
   27540:	ldr	r3, [pc, #1208]	; 27a00 <newconf_init+0x74c>
   27544:	add	r3, pc, r3
   27548:	mov	r0, r4
   2754c:	mov	r1, r6
   27550:	movw	r2, #259	; 0x103
   27554:	bl	d3f4 <add_conf_item@plt>
   27558:	ldr	r0, [pc, #1188]	; 27a04 <newconf_init+0x750>
   2755c:	add	r0, pc, r0
   27560:	ldr	r1, [pc, #1184]	; 27a08 <newconf_init+0x754>
   27564:	add	r1, pc, r1
   27568:	ldr	r2, [pc, #1180]	; 27a0c <newconf_init+0x758>
   2756c:	add	r2, pc, r2
   27570:	ldr	r3, [pc, #1176]	; 27a10 <newconf_init+0x75c>
   27574:	add	r3, pc, r3
   27578:	bl	e420 <add_top_conf@plt>
   2757c:	ldr	r4, [pc, #1168]	; 27a14 <newconf_init+0x760>
   27580:	add	r4, pc, r4
   27584:	mov	r0, r4
   27588:	mov	r1, #0
   2758c:	mov	r2, #0
   27590:	mov	r3, #0
   27594:	bl	e420 <add_top_conf@plt>
   27598:	ldr	r3, [pc, #1144]	; 27a18 <newconf_init+0x764>
   2759c:	add	r3, pc, r3
   275a0:	mov	r0, r4
   275a4:	mov	r1, r5
   275a8:	mov	r2, #1
   275ac:	bl	d3f4 <add_conf_item@plt>
   275b0:	ldr	r4, [pc, #1124]	; 27a1c <newconf_init+0x768>
   275b4:	add	r4, pc, r4
   275b8:	ldr	r1, [pc, #1120]	; 27a20 <newconf_init+0x76c>
   275bc:	add	r1, pc, r1
   275c0:	mov	r0, r4
   275c4:	mov	r2, r1
   275c8:	mov	r3, #0
   275cc:	bl	e420 <add_top_conf@plt>
   275d0:	ldr	r5, [pc, #1100]	; 27a24 <newconf_init+0x770>
   275d4:	add	r5, pc, r5
   275d8:	ldr	r3, [pc, #1096]	; 27a28 <newconf_init+0x774>
   275dc:	add	r3, pc, r3
   275e0:	mov	r0, r4
   275e4:	mov	r1, r5
   275e8:	mov	r2, #1
   275ec:	bl	d3f4 <add_conf_item@plt>
   275f0:	ldr	r3, [pc, #1076]	; 27a2c <newconf_init+0x778>
   275f4:	add	r3, pc, r3
   275f8:	mov	r0, r4
   275fc:	mov	r1, r6
   27600:	movw	r2, #259	; 0x103
   27604:	bl	d3f4 <add_conf_item@plt>
   27608:	ldr	r0, [pc, #1056]	; 27a30 <newconf_init+0x77c>
   2760c:	add	r0, pc, r0
   27610:	ldr	r3, [pc, #1052]	; 27a34 <newconf_init+0x780>
   27614:	add	r3, pc, r3
   27618:	mov	r1, #0
   2761c:	mov	r2, #0
   27620:	bl	e420 <add_top_conf@plt>
   27624:	ldr	r0, [pc, #1036]	; 27a38 <newconf_init+0x784>
   27628:	add	r0, pc, r0
   2762c:	ldr	r3, [pc, #1032]	; 27a3c <newconf_init+0x788>
   27630:	add	r3, pc, r3
   27634:	mov	r1, #0
   27638:	mov	r2, #0
   2763c:	bl	e420 <add_top_conf@plt>
   27640:	ldr	r0, [pc, #1016]	; 27a40 <newconf_init+0x78c>
   27644:	add	r0, pc, r0
   27648:	ldr	r3, [pc, #1012]	; 27a44 <newconf_init+0x790>
   2764c:	add	r3, pc, r3
   27650:	mov	r1, #0
   27654:	mov	r2, #0
   27658:	bl	e420 <add_top_conf@plt>
   2765c:	ldr	r4, [pc, #996]	; 27a48 <newconf_init+0x794>
   27660:	add	r4, pc, r4
   27664:	mov	r0, r4
   27668:	mov	r1, #0
   2766c:	mov	r2, #0
   27670:	mov	r3, #0
   27674:	bl	e420 <add_top_conf@plt>
   27678:	ldr	r3, [pc, #972]	; 27a4c <newconf_init+0x798>
   2767c:	add	r3, pc, r3
   27680:	mov	r0, r4
   27684:	mov	r1, r5
   27688:	mov	r2, #1
   2768c:	bl	d3f4 <add_conf_item@plt>
   27690:	ldr	r4, [pc, #952]	; 27a50 <newconf_init+0x79c>
   27694:	add	r4, pc, r4
   27698:	ldr	r1, [pc, #948]	; 27a54 <newconf_init+0x7a0>
   2769c:	add	r1, pc, r1
   276a0:	ldr	r2, [pc, #944]	; 27a58 <newconf_init+0x7a4>
   276a4:	add	r2, pc, r2
   276a8:	mov	r0, r4
   276ac:	mov	r3, #0
   276b0:	bl	e420 <add_top_conf@plt>
   276b4:	ldr	r3, [pc, #928]	; 27a5c <newconf_init+0x7a8>
   276b8:	add	r3, pc, r3
   276bc:	mov	r0, r4
   276c0:	mov	r1, r5
   276c4:	mov	r2, #1
   276c8:	bl	d3f4 <add_conf_item@plt>
   276cc:	ldr	r1, [pc, #908]	; 27a60 <newconf_init+0x7ac>
   276d0:	add	r1, pc, r1
   276d4:	ldr	r3, [pc, #904]	; 27a64 <newconf_init+0x7b0>
   276d8:	add	r3, pc, r3
   276dc:	mov	r0, r4
   276e0:	mov	r2, #1
   276e4:	bl	d3f4 <add_conf_item@plt>
   276e8:	ldr	r9, [pc, #888]	; 27a68 <newconf_init+0x7b4>
   276ec:	add	r9, pc, r9
   276f0:	mov	r0, r9
   276f4:	mov	r1, #0
   276f8:	mov	r2, #0
   276fc:	mov	r3, #0
   27700:	bl	e420 <add_top_conf@plt>
   27704:	ldr	r3, [pc, #864]	; 27a6c <newconf_init+0x7b8>
   27708:	add	r3, pc, r3
   2770c:	mov	r0, r9
   27710:	mov	r1, sl
   27714:	mov	r2, #1
   27718:	bl	d3f4 <add_conf_item@plt>
   2771c:	ldr	r1, [pc, #844]	; 27a70 <newconf_init+0x7bc>
   27720:	add	r1, pc, r1
   27724:	ldr	r3, [pc, #840]	; 27a74 <newconf_init+0x7c0>
   27728:	add	r3, pc, r3
   2772c:	mov	r0, r9
   27730:	movw	r2, #259	; 0x103
   27734:	bl	d3f4 <add_conf_item@plt>
   27738:	ldr	r5, [pc, #824]	; 27a78 <newconf_init+0x7c4>
   2773c:	add	r5, pc, r5
   27740:	ldr	r4, [pc, #820]	; 27a7c <newconf_init+0x7c8>
   27744:	add	r4, pc, r4
   27748:	mov	r0, r9
   2774c:	mov	r1, r5
   27750:	movw	r2, #257	; 0x101
   27754:	mov	r3, r4
   27758:	bl	d3f4 <add_conf_item@plt>
   2775c:	ldr	r8, [pc, #796]	; 27a80 <newconf_init+0x7cc>
   27760:	add	r8, pc, r8
   27764:	ldr	r6, [pc, #792]	; 27a84 <newconf_init+0x7d0>
   27768:	add	r6, pc, r6
   2776c:	mov	r0, r9
   27770:	mov	r1, r8
   27774:	mov	r2, #1
   27778:	mov	r3, r6
   2777c:	bl	d3f4 <add_conf_item@plt>
   27780:	ldr	r7, [pc, #768]	; 27a88 <newconf_init+0x7d4>
   27784:	add	r7, pc, r7
   27788:	ldr	r1, [pc, #764]	; 27a8c <newconf_init+0x7d8>
   2778c:	add	r1, pc, r1
   27790:	mov	r0, r7
   27794:	mov	r2, #0
   27798:	mov	r3, #0
   2779c:	bl	e420 <add_top_conf@plt>
   277a0:	mov	r0, r7
   277a4:	mov	r1, sl
   277a8:	mov	r2, #1
   277ac:	ldr	r3, [pc, #732]	; 27a90 <newconf_init+0x7dc>
   277b0:	add	r3, pc, r3
   277b4:	bl	d3f4 <add_conf_item@plt>
   277b8:	mov	r0, r7
   277bc:	ldr	r1, [pc, #720]	; 27a94 <newconf_init+0x7e0>
   277c0:	add	r1, pc, r1
   277c4:	movw	r2, #259	; 0x103
   277c8:	ldr	r3, [pc, #712]	; 27a98 <newconf_init+0x7e4>
   277cc:	add	r3, pc, r3
   277d0:	bl	d3f4 <add_conf_item@plt>
   277d4:	mov	r0, r7
   277d8:	mov	r1, r5
   277dc:	movw	r2, #257	; 0x101
   277e0:	mov	r3, r4
   277e4:	bl	d3f4 <add_conf_item@plt>
   277e8:	mov	r0, r7
   277ec:	mov	r1, r8
   277f0:	mov	r2, #1
   277f4:	mov	r3, r6
   277f8:	bl	d3f4 <add_conf_item@plt>
   277fc:	ldr	r4, [pc, #664]	; 27a9c <newconf_init+0x7e8>
   27800:	add	r4, pc, r4
   27804:	ldr	r1, [pc, #660]	; 27aa0 <newconf_init+0x7ec>
   27808:	add	r1, pc, r1
   2780c:	ldr	r2, [pc, #656]	; 27aa4 <newconf_init+0x7f0>
   27810:	add	r2, pc, r2
   27814:	mov	r0, r4
   27818:	mov	r3, #0
   2781c:	bl	e420 <add_top_conf@plt>
   27820:	ldr	r1, [pc, #640]	; 27aa8 <newconf_init+0x7f4>
   27824:	add	r1, pc, r1
   27828:	ldr	r3, [pc, #636]	; 27aac <newconf_init+0x7f8>
   2782c:	add	r3, pc, r3
   27830:	mov	r0, r4
   27834:	mov	r2, #2
   27838:	bl	d3f4 <add_conf_item@plt>
   2783c:	ldr	r1, [pc, #620]	; 27ab0 <newconf_init+0x7fc>
   27840:	add	r1, pc, r1
   27844:	ldr	r3, [pc, #616]	; 27ab4 <newconf_init+0x800>
   27848:	add	r3, pc, r3
   2784c:	mov	r0, r4
   27850:	mov	r2, #1
   27854:	bl	d3f4 <add_conf_item@plt>
   27858:	ldr	r1, [pc, #600]	; 27ab8 <newconf_init+0x804>
   2785c:	add	r1, pc, r1
   27860:	ldr	r3, [pc, #596]	; 27abc <newconf_init+0x808>
   27864:	add	r3, pc, r3
   27868:	mov	r0, r4
   2786c:	mov	r2, #1
   27870:	bl	d3f4 <add_conf_item@plt>
   27874:	ldr	r1, [pc, #580]	; 27ac0 <newconf_init+0x80c>
   27878:	add	r1, pc, r1
   2787c:	ldr	r3, [pc, #576]	; 27ac4 <newconf_init+0x810>
   27880:	add	r3, pc, r3
   27884:	mov	r0, r4
   27888:	mov	r2, #2
   2788c:	bl	d3f4 <add_conf_item@plt>
   27890:	ldr	r1, [pc, #560]	; 27ac8 <newconf_init+0x814>
   27894:	add	r1, pc, r1
   27898:	ldr	r3, [pc, #556]	; 27acc <newconf_init+0x818>
   2789c:	add	r3, pc, r3
   278a0:	mov	r0, r4
   278a4:	mov	r2, #2
   278a8:	bl	d3f4 <add_conf_item@plt>
   278ac:	ldr	r1, [pc, #540]	; 27ad0 <newconf_init+0x81c>
   278b0:	add	r1, pc, r1
   278b4:	ldr	r3, [pc, #536]	; 27ad4 <newconf_init+0x820>
   278b8:	add	r3, pc, r3
   278bc:	mov	r0, r4
   278c0:	mov	r2, #2
   278c4:	bl	d3f4 <add_conf_item@plt>
   278c8:	ldr	r1, [pc, #520]	; 27ad8 <newconf_init+0x824>
   278cc:	add	r1, pc, r1
   278d0:	ldr	r3, [pc, #516]	; 27adc <newconf_init+0x828>
   278d4:	add	r3, pc, r3
   278d8:	mov	r0, r4
   278dc:	movw	r2, #258	; 0x102
   278e0:	bl	d3f4 <add_conf_item@plt>
   278e4:	ldr	r1, [pc, #500]	; 27ae0 <newconf_init+0x82c>
   278e8:	add	r1, pc, r1
   278ec:	ldr	r3, [pc, #496]	; 27ae4 <newconf_init+0x830>
   278f0:	add	r3, pc, r3
   278f4:	mov	r0, r4
   278f8:	movw	r2, #258	; 0x102
   278fc:	bl	d3f4 <add_conf_item@plt>
   27900:	ldr	r1, [pc, #480]	; 27ae8 <newconf_init+0x834>
   27904:	add	r1, pc, r1
   27908:	ldr	r3, [pc, #476]	; 27aec <newconf_init+0x838>
   2790c:	add	r3, pc, r3
   27910:	mov	r0, r4
   27914:	movw	r2, #258	; 0x102
   27918:	bl	d3f4 <add_conf_item@plt>
   2791c:	ldr	r1, [pc, #460]	; 27af0 <newconf_init+0x83c>
   27920:	add	r1, pc, r1
   27924:	ldr	r3, [pc, #456]	; 27af4 <newconf_init+0x840>
   27928:	add	r3, pc, r3
   2792c:	mov	r0, r4
   27930:	movw	r2, #258	; 0x102
   27934:	sub	sp, fp, #28
   27938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2793c:	b	271cc <add_conf_item>
   27940:	.word	0x0001a876
   27944:	.word	0x0001c4f0
   27948:	.word	0x00000808
   2794c:	.word	0x0001faea
   27950:	.word	0x000007f0
   27954:	.word	0x0001c4bd
   27958:	.word	0x0003459c
   2795c:	.word	0x000199a0
   27960:	.word	0x000346ac
   27964:	.word	0x0001a8aa
   27968:	.word	0x000346e0
   2796c:	.word	0x0001eb0b
   27970:	.word	0x000007bc
   27974:	.word	0x0000085c
   27978:	.word	0x0003477c
   2797c:	.word	0x0001e7d2
   27980:	.word	0x00000aac
   27984:	.word	0x00000ae0
   27988:	.word	0x0003480c
   2798c:	.word	0x0001c42c
   27990:	.word	0x000348d4
   27994:	.word	0x0001c418
   27998:	.word	0x00000b30
   2799c:	.word	0x00000b88
   279a0:	.word	0x0001c3fb
   279a4:	.word	0x00000bcc
   279a8:	.word	0x0001c3ec
   279ac:	.word	0x00000bc8
   279b0:	.word	0x0001c460
   279b4:	.word	0x00000bc4
   279b8:	.word	0x0001c3c9
   279bc:	.word	0x00000bb4
   279c0:	.word	0x0001c39e
   279c4:	.word	0x00000ba4
   279c8:	.word	0x0001c38c
   279cc:	.word	0x00000b94
   279d0:	.word	0x0001cda1
   279d4:	.word	0x00000b84
   279d8:	.word	0x0001f970
   279dc:	.word	0x0001d272
   279e0:	.word	0x00000b84
   279e4:	.word	0x00000c0c
   279e8:	.word	0x000347d8
   279ec:	.word	0x0001c319
   279f0:	.word	0x00000f4c
   279f4:	.word	0x0001c300
   279f8:	.word	0x00000fb4
   279fc:	.word	0x0001c2e9
   27a00:	.word	0x00001118
   27a04:	.word	0x0001dee1
   27a08:	.word	0x000011ec
   27a0c:	.word	0x0000125c
   27a10:	.word	0x0003480c
   27a14:	.word	0x0001f9ed
   27a18:	.word	0x000013c8
   27a1c:	.word	0x0001c277
   27a20:	.word	0x00001434
   27a24:	.word	0x00019a10
   27a28:	.word	0x0000149c
   27a2c:	.word	0x000014fc
   27a30:	.word	0x0001968b
   27a34:	.word	0x0003485c
   27a38:	.word	0x000198fb
   27a3c:	.word	0x00034ed0
   27a40:	.word	0x0001c1ef
   27a44:	.word	0x000350a8
   27a48:	.word	0x000198a8
   27a4c:	.word	0x0000155c
   27a50:	.word	0x0001c1aa
   27a54:	.word	0x000015e8
   27a58:	.word	0x00001644
   27a5c:	.word	0x000016c0
   27a60:	.word	0x0001c174
   27a64:	.word	0x000016e0
   27a68:	.word	0x0001c15f
   27a6c:	.word	0x000016f0
   27a70:	.word	0x0001c1b4
   27a74:	.word	0x00001740
   27a78:	.word	0x0001c115
   27a7c:	.word	0x000017f4
   27a80:	.word	0x0001c0f9
   27a84:	.word	0x00001938
   27a88:	.word	0x0001c0e3
   27a8c:	.word	0x00001abc
   27a90:	.word	0x00001648
   27a94:	.word	0x0001c114
   27a98:	.word	0x0000169c
   27a9c:	.word	0x0001c071
   27aa0:	.word	0x00001a60
   27aa4:	.word	0x00001ac4
   27aa8:	.word	0x00018a36
   27aac:	.word	0x00001ce0
   27ab0:	.word	0x0001da69
   27ab4:	.word	0x00001cf4
   27ab8:	.word	0x0001da3c
   27abc:	.word	0x00001ce0
   27ac0:	.word	0x0001bffd
   27ac4:	.word	0x00001ccc
   27ac8:	.word	0x0001bfe9
   27acc:	.word	0x00001cb8
   27ad0:	.word	0x0001bfd5
   27ad4:	.word	0x00001ca4
   27ad8:	.word	0x0001daa6
   27adc:	.word	0x00001cac
   27ae0:	.word	0x0001db26
   27ae4:	.word	0x00001cac
   27ae8:	.word	0x0001db23
   27aec:	.word	0x00001cac
   27af0:	.word	0x0001db2a
   27af4:	.word	0x00001cac

00027af8 <conf_set_modules_path>:
   27af8:	b	e564 <mod_add_path@plt>

00027afc <conf_set_modules_module>:
   27afc:	push	{r4, r5, fp, lr}
   27b00:	add	fp, sp, #8
   27b04:	mov	r5, r0
   27b08:	bl	da3c <rb_basename@plt>
   27b0c:	mov	r4, r0
   27b10:	bl	d160 <findmodule_byname@plt>
   27b14:	cmp	r0, #0
   27b18:	bne	27b2c <conf_set_modules_module+0x30>
   27b1c:	mov	r0, r5
   27b20:	mov	r1, #1
   27b24:	mov	r2, #0
   27b28:	bl	debc <load_one_module@plt>
   27b2c:	mov	r0, r4
   27b30:	pop	{r4, r5, fp, lr}
   27b34:	b	26c0c <rb_free>

00027b38 <conf_begin_oper>:
   27b38:	push	{r4, r5, r6, sl, fp, lr}
   27b3c:	add	fp, sp, #16
   27b40:	ldr	r0, [pc, #132]	; 27bcc <conf_begin_oper+0x94>
   27b44:	ldr	r0, [pc, r0]
   27b48:	cmp	r0, #0
   27b4c:	beq	27b64 <conf_begin_oper+0x2c>
   27b50:	bl	d9d0 <free_oper_conf@plt>
   27b54:	ldr	r0, [pc, #116]	; 27bd0 <conf_begin_oper+0x98>
   27b58:	add	r0, pc, r0
   27b5c:	mov	r1, #0
   27b60:	str	r1, [r0]
   27b64:	ldr	r4, [pc, #104]	; 27bd4 <conf_begin_oper+0x9c>
   27b68:	ldr	r4, [pc, r4]
   27b6c:	cmp	r4, #0
   27b70:	beq	27ba8 <conf_begin_oper+0x70>
   27b74:	ldr	r5, [pc, #92]	; 27bd8 <conf_begin_oper+0xa0>
   27b78:	add	r5, pc, r5
   27b7c:	ldr	r0, [r4]
   27b80:	ldr	r6, [r4, #8]
   27b84:	bl	d9d0 <free_oper_conf@plt>
   27b88:	mov	r0, r4
   27b8c:	mov	r1, r5
   27b90:	bl	26b54 <rb_dlinkDelete>
   27b94:	mov	r0, r4
   27b98:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   27b9c:	cmp	r6, #0
   27ba0:	mov	r4, r6
   27ba4:	bne	27b7c <conf_begin_oper+0x44>
   27ba8:	bl	d190 <make_oper_conf@plt>
   27bac:	ldr	r1, [pc, #40]	; 27bdc <conf_begin_oper+0xa4>
   27bb0:	add	r1, pc, r1
   27bb4:	str	r0, [r1]
   27bb8:	ldr	r1, [r0, #20]
   27bbc:	orr	r1, r1, #1
   27bc0:	str	r1, [r0, #20]
   27bc4:	mov	r0, #0
   27bc8:	pop	{r4, r5, r6, sl, fp, pc}
   27bcc:	.word	0x0003e658
   27bd0:	.word	0x0003e644
   27bd4:	.word	0x0003e638
   27bd8:	.word	0x0003e628
   27bdc:	.word	0x0003e5ec

00027be0 <conf_end_oper>:
   27be0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27be4:	add	fp, sp, #24
   27be8:	ldr	r4, [pc, #536]	; 27e08 <conf_end_oper+0x228>
   27bec:	ldr	r4, [pc, r4]
   27bf0:	cmp	r4, #0
   27bf4:	beq	27c20 <conf_end_oper+0x40>
   27bf8:	mov	r0, r4
   27bfc:	bl	dc94 <strlen@plt>
   27c00:	cmp	r0, #65	; 0x41
   27c04:	movcs	r0, #0
   27c08:	strbcs	r0, [r4, #64]	; 0x40
   27c0c:	mov	r0, r4
   27c10:	bl	26ee8 <rb_strdup>
   27c14:	ldr	r1, [pc, #496]	; 27e0c <conf_end_oper+0x22c>
   27c18:	ldr	r1, [pc, r1]
   27c1c:	str	r0, [r1]
   27c20:	ldr	r0, [pc, #488]	; 27e10 <conf_end_oper+0x230>
   27c24:	ldr	r0, [pc, r0]
   27c28:	ldr	r1, [r0]
   27c2c:	cmp	r1, #0
   27c30:	ldrbne	r2, [r1]
   27c34:	cmpne	r2, #0
   27c38:	bne	27c50 <conf_end_oper+0x70>
   27c3c:	ldr	r0, [pc, #464]	; 27e14 <conf_end_oper+0x234>
   27c40:	add	r0, pc, r0
   27c44:	bl	d400 <conf_report_error@plt>
   27c48:	mov	r0, #0
   27c4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27c50:	ldr	r2, [r0, #12]
   27c54:	cmp	r2, #0
   27c58:	ldrbne	r2, [r2]
   27c5c:	cmpne	r2, #0
   27c60:	bne	27c84 <conf_end_oper+0xa4>
   27c64:	ldr	r2, [r0, #36]	; 0x24
   27c68:	cmp	r2, #0
   27c6c:	ldrbne	r2, [r2]
   27c70:	cmpne	r2, #0
   27c74:	bne	27c84 <conf_end_oper+0xa4>
   27c78:	ldr	r0, [pc, #408]	; 27e18 <conf_end_oper+0x238>
   27c7c:	add	r0, pc, r0
   27c80:	b	27dfc <conf_end_oper+0x21c>
   27c84:	ldr	r0, [r0, #32]
   27c88:	cmp	r0, #0
   27c8c:	bne	27ca8 <conf_end_oper+0xc8>
   27c90:	ldr	r0, [pc, #388]	; 27e1c <conf_end_oper+0x23c>
   27c94:	add	r0, pc, r0
   27c98:	bl	d394 <privilegeset_get@plt>
   27c9c:	ldr	r1, [pc, #380]	; 27e20 <conf_end_oper+0x240>
   27ca0:	ldr	r1, [pc, r1]
   27ca4:	str	r0, [r1, #32]
   27ca8:	ldr	r7, [pc, #372]	; 27e24 <conf_end_oper+0x244>
   27cac:	ldr	r7, [pc, r7]
   27cb0:	cmp	r7, #0
   27cb4:	beq	27dbc <conf_end_oper+0x1dc>
   27cb8:	ldr	r8, [pc, #360]	; 27e28 <conf_end_oper+0x248>
   27cbc:	add	r8, pc, r8
   27cc0:	mov	r5, r7
   27cc4:	ldr	r4, [r7]
   27cc8:	ldr	r7, [r7, #8]
   27ccc:	ldr	r0, [pc, #344]	; 27e2c <conf_end_oper+0x24c>
   27cd0:	ldr	r0, [pc, r0]
   27cd4:	ldr	r0, [r0]
   27cd8:	bl	26ee8 <rb_strdup>
   27cdc:	str	r0, [r4]
   27ce0:	ldr	r0, [pc, #328]	; 27e30 <conf_end_oper+0x250>
   27ce4:	ldr	r0, [pc, r0]
   27ce8:	ldr	r0, [r0, #12]
   27cec:	cmp	r0, #0
   27cf0:	ldrbne	r1, [r0]
   27cf4:	cmpne	r1, #0
   27cf8:	beq	27d04 <conf_end_oper+0x124>
   27cfc:	bl	26ee8 <rb_strdup>
   27d00:	str	r0, [r4, #12]
   27d04:	ldr	r0, [pc, #296]	; 27e34 <conf_end_oper+0x254>
   27d08:	ldr	r0, [pc, r0]
   27d0c:	ldr	r1, [r0, #20]
   27d10:	str	r1, [r4, #20]
   27d14:	ldr	r1, [r0, #24]
   27d18:	str	r1, [r4, #24]
   27d1c:	ldr	r1, [r0, #28]
   27d20:	str	r1, [r4, #28]
   27d24:	ldr	r1, [r0, #32]
   27d28:	str	r1, [r4, #32]
   27d2c:	ldr	r0, [r0, #36]	; 0x24
   27d30:	cmp	r0, #0
   27d34:	beq	27d88 <conf_end_oper+0x1a8>
   27d38:	mov	r1, r8
   27d3c:	bl	e720 <BIO_new_file@plt>
   27d40:	cmp	r0, #0
   27d44:	beq	27de0 <conf_end_oper+0x200>
   27d48:	mov	r6, r0
   27d4c:	mov	r1, #0
   27d50:	mov	r2, #0
   27d54:	mov	r3, #0
   27d58:	bl	dd18 <PEM_read_bio_RSA_PUBKEY@plt>
   27d5c:	str	r0, [r4, #40]	; 0x28
   27d60:	mov	r0, r6
   27d64:	mov	r1, #9
   27d68:	mov	r2, #1
   27d6c:	mov	r3, #0
   27d70:	bl	def8 <BIO_ctrl@plt>
   27d74:	mov	r0, r6
   27d78:	bl	df34 <BIO_free@plt>
   27d7c:	ldr	r0, [r4, #40]	; 0x28
   27d80:	cmp	r0, #0
   27d84:	beq	27df0 <conf_end_oper+0x210>
   27d88:	ldr	r0, [pc, #176]	; 27e40 <conf_end_oper+0x260>
   27d8c:	ldr	r0, [pc, r0]
   27d90:	ldr	r0, [r0, #16]
   27d94:	cmp	r0, #0
   27d98:	ldrbne	r1, [r0]
   27d9c:	cmpne	r1, #0
   27da0:	beq	27dac <conf_end_oper+0x1cc>
   27da4:	bl	26ee8 <rb_strdup>
   27da8:	str	r0, [r4, #16]
   27dac:	mov	r0, r5
   27db0:	bl	298f0 <rb_dlinkMoveNode>
   27db4:	cmp	r7, #0
   27db8:	bne	27cc0 <conf_end_oper+0xe0>
   27dbc:	ldr	r0, [pc, #128]	; 27e44 <conf_end_oper+0x264>
   27dc0:	ldr	r0, [pc, r0]
   27dc4:	bl	d9d0 <free_oper_conf@plt>
   27dc8:	ldr	r0, [pc, #120]	; 27e48 <conf_end_oper+0x268>
   27dcc:	add	r0, pc, r0
   27dd0:	mov	r1, #0
   27dd4:	str	r1, [r0]
   27dd8:	mov	r0, #0
   27ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27de0:	ldr	r1, [r4]
   27de4:	ldr	r0, [pc, #76]	; 27e38 <conf_end_oper+0x258>
   27de8:	add	r0, pc, r0
   27dec:	b	27dfc <conf_end_oper+0x21c>
   27df0:	ldr	r1, [r4]
   27df4:	ldr	r0, [pc, #64]	; 27e3c <conf_end_oper+0x25c>
   27df8:	add	r0, pc, r0
   27dfc:	bl	d400 <conf_report_error@plt>
   27e00:	mov	r0, #0
   27e04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27e08:	.word	0x0003e5ac
   27e0c:	.word	0x0003e584
   27e10:	.word	0x0003e578
   27e14:	.word	0x0001bf6e
   27e18:	.word	0x0001bf5b
   27e1c:	.word	0x00019380
   27e20:	.word	0x0003e4fc
   27e24:	.word	0x0003e4f4
   27e28:	.word	0x0001a68d
   27e2c:	.word	0x0003e4cc
   27e30:	.word	0x0003e4b8
   27e34:	.word	0x0003e494
   27e38:	.word	0x0001be22
   27e3c:	.word	0x0001be57
   27e40:	.word	0x0003e410
   27e44:	.word	0x0003e3dc
   27e48:	.word	0x0003e3d0

00027e4c <conf_begin_class>:
   27e4c:	push	{fp, lr}
   27e50:	mov	fp, sp
   27e54:	ldr	r0, [pc, #36]	; 27e80 <conf_begin_class+0x34>
   27e58:	ldr	r0, [pc, r0]
   27e5c:	cmp	r0, #0
   27e60:	beq	27e68 <conf_begin_class+0x1c>
   27e64:	bl	e7bc <free_class@plt>
   27e68:	bl	de68 <make_class@plt>
   27e6c:	ldr	r1, [pc, #16]	; 27e84 <conf_begin_class+0x38>
   27e70:	add	r1, pc, r1
   27e74:	str	r0, [r1]
   27e78:	mov	r0, #0
   27e7c:	pop	{fp, pc}
   27e80:	.word	0x0003e354
   27e84:	.word	0x0003e33c

00027e88 <conf_end_class>:
   27e88:	push	{fp, lr}
   27e8c:	mov	fp, sp
   27e90:	ldr	r0, [pc, #100]	; 27efc <conf_end_class+0x74>
   27e94:	ldr	r0, [pc, r0]
   27e98:	cmp	r0, #0
   27e9c:	beq	27eb0 <conf_end_class+0x28>
   27ea0:	bl	26ee8 <rb_strdup>
   27ea4:	ldr	r1, [pc, #84]	; 27f00 <conf_end_class+0x78>
   27ea8:	ldr	r1, [pc, r1]
   27eac:	str	r0, [r1, #4]
   27eb0:	ldr	r0, [pc, #76]	; 27f04 <conf_end_class+0x7c>
   27eb4:	ldr	r0, [pc, r0]
   27eb8:	ldr	r1, [r0, #4]
   27ebc:	cmp	r1, #0
   27ec0:	ldrbne	r1, [r1]
   27ec4:	cmpne	r1, #0
   27ec8:	bne	27ee0 <conf_end_class+0x58>
   27ecc:	ldr	r0, [pc, #52]	; 27f08 <conf_end_class+0x80>
   27ed0:	add	r0, pc, r0
   27ed4:	bl	d400 <conf_report_error@plt>
   27ed8:	mov	r0, #0
   27edc:	pop	{fp, pc}
   27ee0:	bl	e030 <add_class@plt>
   27ee4:	ldr	r0, [pc, #32]	; 27f0c <conf_end_class+0x84>
   27ee8:	add	r0, pc, r0
   27eec:	mov	r1, #0
   27ef0:	str	r1, [r0]
   27ef4:	mov	r0, #0
   27ef8:	pop	{fp, pc}
   27efc:	.word	0x0003e304
   27f00:	.word	0x0003e304
   27f04:	.word	0x0003e2f8
   27f08:	.word	0x0001bee2
   27f0c:	.word	0x0003e2c4

00027f10 <conf_begin_listen>:
   27f10:	push	{r4, r5, r6, sl, fp, lr}
   27f14:	add	fp, sp, #16
   27f18:	mov	r4, #0
   27f1c:	ldr	r5, [pc, #64]	; 27f64 <conf_begin_listen+0x54>
   27f20:	add	r5, pc, r5
   27f24:	mov	r6, #0
   27f28:	ldr	r0, [r5, r6, lsl #2]
   27f2c:	bl	26c0c <rb_free>
   27f30:	str	r4, [r5, r6, lsl #2]
   27f34:	add	r6, r6, #1
   27f38:	cmp	r6, #2
   27f3c:	bne	27f28 <conf_begin_listen+0x18>
   27f40:	ldr	r0, [pc, #32]	; 27f68 <conf_begin_listen+0x58>
   27f44:	add	r0, pc, r0
   27f48:	mov	r1, #0
   27f4c:	str	r1, [r0]
   27f50:	ldr	r0, [pc, #20]	; 27f6c <conf_begin_listen+0x5c>
   27f54:	add	r0, pc, r0
   27f58:	str	r1, [r0]
   27f5c:	mov	r0, #0
   27f60:	pop	{r4, r5, r6, sl, fp, pc}
   27f64:	.word	0x0003e294
   27f68:	.word	0x0003486c
   27f6c:	.word	0x0003e268

00027f70 <conf_end_listen>:
   27f70:	push	{r4, r5, r6, sl, fp, lr}
   27f74:	add	fp, sp, #16
   27f78:	mov	r4, #0
   27f7c:	ldr	r5, [pc, #64]	; 27fc4 <conf_end_listen+0x54>
   27f80:	add	r5, pc, r5
   27f84:	mov	r6, #0
   27f88:	ldr	r0, [r5, r6, lsl #2]
   27f8c:	bl	26c0c <rb_free>
   27f90:	str	r4, [r5, r6, lsl #2]
   27f94:	add	r6, r6, #1
   27f98:	cmp	r6, #2
   27f9c:	bne	27f88 <conf_end_listen+0x18>
   27fa0:	ldr	r0, [pc, #32]	; 27fc8 <conf_end_listen+0x58>
   27fa4:	add	r0, pc, r0
   27fa8:	mov	r1, #0
   27fac:	str	r1, [r0]
   27fb0:	ldr	r0, [pc, #20]	; 27fcc <conf_end_listen+0x5c>
   27fb4:	add	r0, pc, r0
   27fb8:	str	r1, [r0]
   27fbc:	mov	r0, #0
   27fc0:	pop	{r4, r5, r6, sl, fp, pc}
   27fc4:	.word	0x0003e234
   27fc8:	.word	0x0003480c
   27fcc:	.word	0x0003e208

00027fd0 <conf_set_listen_defer_accept>:
   27fd0:	ldr	r0, [r0]
   27fd4:	ldr	r1, [pc, #8]	; 27fe4 <conf_set_listen_defer_accept+0x14>
   27fd8:	add	r1, pc, r1
   27fdc:	str	r0, [r1]
   27fe0:	bx	lr
   27fe4:	.word	0x000347d8

00027fe8 <conf_set_listen_wsock>:
   27fe8:	ldr	r0, [r0]
   27fec:	ldr	r1, [pc, #8]	; 27ffc <conf_set_listen_wsock+0x14>
   27ff0:	add	r1, pc, r1
   27ff4:	str	r0, [r1]
   27ff8:	bx	lr
   27ffc:	.word	0x0003e1cc

00028000 <conf_set_listen_port>:
   28000:	mov	r1, #0
   28004:	mov	r2, #0
   28008:	b	2a000 <conf_set_listen_port_both>

0002800c <conf_set_listen_sslport>:
   2800c:	mov	r1, #1
   28010:	mov	r2, #0
   28014:	b	2a000 <conf_set_listen_port_both>

00028018 <conf_set_listen_sctp_port>:
   28018:	mov	r1, #0
   2801c:	mov	r2, #1
   28020:	b	2a000 <conf_set_listen_port_both>

00028024 <conf_set_listen_sctp_sslport>:
   28024:	mov	r1, #1
   28028:	mov	r2, #1
   2802c:	b	2a000 <conf_set_listen_port_both>

00028030 <conf_set_listen_address>:
   28030:	push	{r4, r5, fp, lr}
   28034:	add	fp, sp, #8
   28038:	mov	r4, r0
   2803c:	ldr	r5, [pc, #36]	; 28068 <conf_set_listen_address+0x38>
   28040:	add	r5, pc, r5
   28044:	ldr	r0, [r5, #4]
   28048:	bl	26c0c <rb_free>
   2804c:	ldr	r0, [pc, #24]	; 2806c <conf_set_listen_address+0x3c>
   28050:	ldr	r0, [pc, r0]
   28054:	str	r0, [r5, #4]
   28058:	mov	r0, r4
   2805c:	bl	26ee8 <rb_strdup>
   28060:	str	r0, [r5]
   28064:	pop	{r4, r5, fp, pc}
   28068:	.word	0x0003e174
   2806c:	.word	0x0003e164

00028070 <conf_begin_auth>:
   28070:	push	{r4, r5, r6, sl, fp, lr}
   28074:	add	fp, sp, #16
   28078:	ldr	r0, [pc, #112]	; 280f0 <conf_begin_auth+0x80>
   2807c:	ldr	r0, [pc, r0]
   28080:	cmp	r0, #0
   28084:	beq	2808c <conf_begin_auth+0x1c>
   28088:	bl	dc40 <free_conf@plt>
   2808c:	ldr	r4, [pc, #96]	; 280f4 <conf_begin_auth+0x84>
   28090:	ldr	r4, [pc, r4]
   28094:	cmp	r4, #0
   28098:	beq	280d0 <conf_begin_auth+0x60>
   2809c:	ldr	r5, [pc, #84]	; 280f8 <conf_begin_auth+0x88>
   280a0:	add	r5, pc, r5
   280a4:	ldr	r0, [r4]
   280a8:	ldr	r6, [r4, #8]
   280ac:	bl	dc40 <free_conf@plt>
   280b0:	mov	r0, r4
   280b4:	mov	r1, r5
   280b8:	bl	26b54 <rb_dlinkDelete>
   280bc:	mov	r0, r4
   280c0:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   280c4:	cmp	r6, #0
   280c8:	mov	r4, r6
   280cc:	bne	280a4 <conf_begin_auth+0x34>
   280d0:	bl	cfbc <make_conf@plt>
   280d4:	ldr	r1, [pc, #32]	; 280fc <conf_begin_auth+0x8c>
   280d8:	add	r1, pc, r1
   280dc:	str	r0, [r1]
   280e0:	mov	r1, #2
   280e4:	str	r1, [r0]
   280e8:	mov	r0, #0
   280ec:	pop	{r4, r5, r6, sl, fp, pc}
   280f0:	.word	0x0003e144
   280f4:	.word	0x0003e134
   280f8:	.word	0x0003e124
   280fc:	.word	0x0003e0e8

00028100 <conf_end_auth>:
   28100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28104:	add	fp, sp, #28
   28108:	sub	sp, sp, #4
   2810c:	ldr	r0, [pc, #740]	; 283f8 <conf_end_auth+0x2f8>
   28110:	ldr	r0, [pc, r0]
   28114:	ldr	r0, [r0, #12]
   28118:	cmp	r0, #0
   2811c:	ldrbne	r0, [r0]
   28120:	cmpne	r0, #0
   28124:	bne	28140 <conf_end_auth+0x40>
   28128:	ldr	r0, [pc, #716]	; 283fc <conf_end_auth+0x2fc>
   2812c:	add	r0, pc, r0
   28130:	bl	26ee8 <rb_strdup>
   28134:	ldr	r1, [pc, #708]	; 28400 <conf_end_auth+0x300>
   28138:	ldr	r1, [pc, r1]
   2813c:	str	r0, [r1, #12]
   28140:	ldr	r0, [pc, #700]	; 28404 <conf_end_auth+0x304>
   28144:	ldr	r0, [pc, r0]
   28148:	ldr	r1, [r0, #16]
   2814c:	cmp	r1, #0
   28150:	ldrbne	r1, [r1]
   28154:	cmpne	r1, #0
   28158:	bne	2816c <conf_end_auth+0x6c>
   2815c:	ldr	r0, [pc, #676]	; 28408 <conf_end_auth+0x308>
   28160:	add	r0, pc, r0
   28164:	bl	d400 <conf_report_error@plt>
   28168:	b	283ec <conf_end_auth+0x2ec>
   2816c:	ldr	r0, [r0, #28]
   28170:	bl	e108 <collapse@plt>
   28174:	ldr	r0, [pc, #656]	; 2840c <conf_end_auth+0x30c>
   28178:	ldr	r0, [pc, r0]
   2817c:	ldr	r0, [r0, #16]
   28180:	bl	e108 <collapse@plt>
   28184:	ldr	r0, [pc, #644]	; 28410 <conf_end_auth+0x310>
   28188:	ldr	r0, [pc, r0]
   2818c:	bl	dd54 <conf_add_class_to_conf@plt>
   28190:	ldr	r0, [pc, #636]	; 28414 <conf_end_auth+0x314>
   28194:	add	r0, pc, r0
   28198:	mov	r1, #2
   2819c:	mov	r2, r0
   281a0:	bl	e498 <find_exact_conf_by_address@plt>
   281a4:	cmp	r0, #0
   281a8:	beq	281b8 <conf_end_auth+0xb8>
   281ac:	ldr	r0, [r0, #24]
   281b0:	cmp	r0, #0
   281b4:	beq	28228 <conf_end_auth+0x128>
   281b8:	ldr	r1, [pc, #604]	; 2841c <conf_end_auth+0x31c>
   281bc:	ldr	r1, [pc, r1]
   281c0:	ldr	r0, [r1, #16]
   281c4:	ldr	r2, [r1, #28]
   281c8:	mov	r1, #2
   281cc:	bl	e498 <find_exact_conf_by_address@plt>
   281d0:	cmp	r0, #0
   281d4:	beq	28204 <conf_end_auth+0x104>
   281d8:	ldr	r0, [r0, #24]
   281dc:	cmp	r0, #0
   281e0:	beq	28238 <conf_end_auth+0x138>
   281e4:	ldr	r1, [pc, #564]	; 28420 <conf_end_auth+0x320>
   281e8:	ldr	r1, [pc, r1]
   281ec:	ldr	r1, [r1, #24]
   281f0:	cmp	r1, #0
   281f4:	beq	28204 <conf_end_auth+0x104>
   281f8:	bl	e750 <irccmp@plt>
   281fc:	cmp	r0, #0
   28200:	beq	28238 <conf_end_auth+0x138>
   28204:	ldr	r1, [pc, #544]	; 2842c <conf_end_auth+0x32c>
   28208:	ldr	r1, [pc, r1]
   2820c:	ldr	r0, [r1, #16]
   28210:	ldr	r3, [r1, #24]
   28214:	ldr	r2, [r1, #28]
   28218:	str	r1, [sp]
   2821c:	mov	r1, #2
   28220:	bl	dad8 <add_conf_by_address@plt>
   28224:	b	28254 <conf_end_auth+0x154>
   28228:	ldr	r0, [pc, #488]	; 28418 <conf_end_auth+0x318>
   2822c:	add	r0, pc, r0
   28230:	bl	d400 <conf_report_error@plt>
   28234:	b	28254 <conf_end_auth+0x154>
   28238:	ldr	r0, [pc, #484]	; 28424 <conf_end_auth+0x324>
   2823c:	ldr	r0, [pc, r0]
   28240:	ldr	r2, [r0, #16]
   28244:	ldr	r1, [r0, #28]
   28248:	ldr	r0, [pc, #472]	; 28428 <conf_end_auth+0x328>
   2824c:	add	r0, pc, r0
   28250:	bl	d400 <conf_report_error@plt>
   28254:	ldr	r6, [pc, #468]	; 28430 <conf_end_auth+0x330>
   28258:	ldr	r6, [pc, r6]
   2825c:	cmp	r6, #0
   28260:	beq	283dc <conf_end_auth+0x2dc>
   28264:	ldr	r4, [pc, #456]	; 28434 <conf_end_auth+0x334>
   28268:	add	r4, pc, r4
   2826c:	ldr	r9, [pc, #452]	; 28438 <conf_end_auth+0x338>
   28270:	add	r9, pc, r9
   28274:	ldr	sl, [pc, #448]	; 2843c <conf_end_auth+0x33c>
   28278:	add	sl, pc, sl
   2827c:	ldr	r8, [pc, #444]	; 28440 <conf_end_auth+0x340>
   28280:	add	r8, pc, r8
   28284:	mov	r7, r6
   28288:	ldr	r5, [r6]
   2828c:	ldr	r6, [r6, #8]
   28290:	ldr	r0, [pc, #428]	; 28444 <conf_end_auth+0x344>
   28294:	ldr	r0, [pc, r0]
   28298:	ldr	r0, [r0, #20]
   2829c:	cmp	r0, #0
   282a0:	beq	282ac <conf_end_auth+0x1ac>
   282a4:	bl	26ee8 <rb_strdup>
   282a8:	str	r0, [r5, #20]
   282ac:	ldr	r0, [pc, #404]	; 28448 <conf_end_auth+0x348>
   282b0:	ldr	r0, [pc, r0]
   282b4:	ldr	r0, [r0, #24]
   282b8:	cmp	r0, #0
   282bc:	beq	282c8 <conf_end_auth+0x1c8>
   282c0:	bl	26ee8 <rb_strdup>
   282c4:	str	r0, [r5, #24]
   282c8:	ldr	r0, [pc, #380]	; 2844c <conf_end_auth+0x34c>
   282cc:	ldr	r0, [pc, r0]
   282d0:	ldr	r0, [r0, #12]
   282d4:	bl	26ee8 <rb_strdup>
   282d8:	str	r0, [r5, #12]
   282dc:	ldr	r0, [pc, #364]	; 28450 <conf_end_auth+0x350>
   282e0:	ldr	r0, [pc, r0]
   282e4:	ldr	r0, [r0, #48]	; 0x30
   282e8:	cmp	r0, #0
   282ec:	beq	282f8 <conf_end_auth+0x1f8>
   282f0:	bl	26ee8 <rb_strdup>
   282f4:	str	r0, [r5, #48]	; 0x30
   282f8:	ldr	r0, [pc, #340]	; 28454 <conf_end_auth+0x354>
   282fc:	ldr	r0, [pc, r0]
   28300:	ldr	r1, [r0, #4]
   28304:	str	r1, [r5, #4]
   28308:	ldr	r0, [r0, #32]
   2830c:	str	r0, [r5, #32]
   28310:	ldr	r0, [r5, #28]
   28314:	bl	e108 <collapse@plt>
   28318:	ldr	r0, [r5, #16]
   2831c:	bl	e108 <collapse@plt>
   28320:	mov	r0, r5
   28324:	bl	dd54 <conf_add_class_to_conf@plt>
   28328:	mov	r0, r4
   2832c:	mov	r1, #2
   28330:	mov	r2, r4
   28334:	bl	e498 <find_exact_conf_by_address@plt>
   28338:	cmp	r0, #0
   2833c:	beq	2834c <conf_end_auth+0x24c>
   28340:	ldr	r0, [r0, #24]
   28344:	cmp	r0, #0
   28348:	beq	283b8 <conf_end_auth+0x2b8>
   2834c:	ldr	r0, [r5, #16]
   28350:	ldr	r2, [r5, #28]
   28354:	mov	r1, #2
   28358:	bl	e498 <find_exact_conf_by_address@plt>
   2835c:	cmp	r0, #0
   28360:	beq	28388 <conf_end_auth+0x288>
   28364:	ldr	r0, [r0, #24]
   28368:	cmp	r0, #0
   2836c:	beq	283a4 <conf_end_auth+0x2a4>
   28370:	ldr	r1, [r5, #24]
   28374:	cmp	r1, #0
   28378:	beq	28388 <conf_end_auth+0x288>
   2837c:	bl	e750 <irccmp@plt>
   28380:	cmp	r0, #0
   28384:	beq	283a4 <conf_end_auth+0x2a4>
   28388:	ldr	r0, [r5, #16]
   2838c:	ldr	r3, [r5, #24]
   28390:	ldr	r2, [r5, #28]
   28394:	str	r5, [sp]
   28398:	mov	r1, #2
   2839c:	bl	dad8 <add_conf_by_address@plt>
   283a0:	b	283c0 <conf_end_auth+0x2c0>
   283a4:	ldr	r2, [r5, #16]
   283a8:	ldr	r1, [r5, #28]
   283ac:	mov	r0, r9
   283b0:	bl	d400 <conf_report_error@plt>
   283b4:	b	283c0 <conf_end_auth+0x2c0>
   283b8:	mov	r0, r8
   283bc:	bl	d400 <conf_report_error@plt>
   283c0:	mov	r0, r7
   283c4:	mov	r1, sl
   283c8:	bl	26b54 <rb_dlinkDelete>
   283cc:	mov	r0, r7
   283d0:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   283d4:	cmp	r6, #0
   283d8:	bne	28284 <conf_end_auth+0x184>
   283dc:	ldr	r0, [pc, #116]	; 28458 <conf_end_auth+0x358>
   283e0:	add	r0, pc, r0
   283e4:	mov	r1, #0
   283e8:	str	r1, [r0]
   283ec:	mov	r0, #0
   283f0:	sub	sp, fp, #28
   283f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283f8:	.word	0x0003e0b0
   283fc:	.word	0x0001bed0
   28400:	.word	0x0003e088
   28404:	.word	0x0003e07c
   28408:	.word	0x0001bea4
   2840c:	.word	0x0003e048
   28410:	.word	0x0003e038
   28414:	.word	0x000191a9
   28418:	.word	0x0001be01
   2841c:	.word	0x0003e004
   28420:	.word	0x0003dfd8
   28424:	.word	0x0003df84
   28428:	.word	0x0001be0b
   2842c:	.word	0x0003dfb8
   28430:	.word	0x0003df6c
   28434:	.word	0x000190d5
   28438:	.word	0x0001bde7
   2843c:	.word	0x0003df4c
   28440:	.word	0x0001bdad
   28444:	.word	0x0003df2c
   28448:	.word	0x0003df10
   2844c:	.word	0x0003def4
   28450:	.word	0x0003dee0
   28454:	.word	0x0003dec4
   28458:	.word	0x0003dde0

0002845c <conf_cleanup_shared>:
   2845c:	push	{r4, r5, r6, sl, fp, lr}
   28460:	add	fp, sp, #16
   28464:	ldr	r4, [pc, #104]	; 284d4 <conf_cleanup_shared+0x78>
   28468:	ldr	r4, [pc, r4]
   2846c:	cmp	r4, #0
   28470:	beq	284a8 <conf_cleanup_shared+0x4c>
   28474:	ldr	r5, [pc, #92]	; 284d8 <conf_cleanup_shared+0x7c>
   28478:	add	r5, pc, r5
   2847c:	ldr	r0, [r4]
   28480:	ldr	r6, [r4, #8]
   28484:	bl	e3e4 <free_remote_conf@plt>
   28488:	mov	r0, r4
   2848c:	mov	r1, r5
   28490:	bl	26b54 <rb_dlinkDelete>
   28494:	mov	r0, r4
   28498:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   2849c:	cmp	r6, #0
   284a0:	mov	r4, r6
   284a4:	bne	2847c <conf_cleanup_shared+0x20>
   284a8:	ldr	r0, [pc, #44]	; 284dc <conf_cleanup_shared+0x80>
   284ac:	ldr	r0, [pc, r0]
   284b0:	cmp	r0, #0
   284b4:	beq	284cc <conf_cleanup_shared+0x70>
   284b8:	bl	e3e4 <free_remote_conf@plt>
   284bc:	ldr	r0, [pc, #28]	; 284e0 <conf_cleanup_shared+0x84>
   284c0:	add	r0, pc, r0
   284c4:	mov	r1, #0
   284c8:	str	r1, [r0]
   284cc:	mov	r0, #0
   284d0:	pop	{r4, r5, r6, sl, fp, pc}
   284d4:	.word	0x0003dd68
   284d8:	.word	0x0003dd58
   284dc:	.word	0x0003dd30
   284e0:	.word	0x0003dd1c

000284e4 <conf_set_shared_oper>:
   284e4:	push	{r4, r5, fp, lr}
   284e8:	add	fp, sp, #8
   284ec:	mov	r4, r0
   284f0:	ldr	r0, [pc, #312]	; 28630 <conf_set_shared_oper+0x14c>
   284f4:	ldr	r0, [pc, r0]
   284f8:	cmp	r0, #0
   284fc:	beq	28504 <conf_set_shared_oper+0x20>
   28500:	bl	e3e4 <free_remote_conf@plt>
   28504:	bl	d3dc <make_remote_conf@plt>
   28508:	ldr	r5, [pc, #292]	; 28634 <conf_set_shared_oper+0x150>
   2850c:	add	r5, pc, r5
   28510:	str	r0, [r5]
   28514:	ldr	r0, [r4]
   28518:	cmp	r0, #0
   2851c:	beq	28548 <conf_set_shared_oper+0x64>
   28520:	ldrb	r0, [r4, #4]
   28524:	cmp	r0, #1
   28528:	bne	285d8 <conf_set_shared_oper+0xf4>
   2852c:	ldr	r0, [r4, #8]
   28530:	bl	26ee8 <rb_strdup>
   28534:	ldr	r1, [pc, #252]	; 28638 <conf_set_shared_oper+0x154>
   28538:	ldr	r1, [pc, r1]
   2853c:	str	r0, [r1, #8]
   28540:	ldr	r4, [r4]
   28544:	b	28560 <conf_set_shared_oper+0x7c>
   28548:	ldr	r0, [pc, #236]	; 2863c <conf_set_shared_oper+0x158>
   2854c:	add	r0, pc, r0
   28550:	bl	26ee8 <rb_strdup>
   28554:	ldr	r1, [pc, #228]	; 28640 <conf_set_shared_oper+0x15c>
   28558:	ldr	r1, [pc, r1]
   2855c:	str	r0, [r1, #8]
   28560:	ldrb	r0, [r4, #4]
   28564:	cmp	r0, #1
   28568:	bne	285c8 <conf_set_shared_oper+0xe4>
   2856c:	ldr	r4, [r4, #8]
   28570:	mov	r0, r4
   28574:	mov	r1, #64	; 0x40
   28578:	bl	dce8 <strchr@plt>
   2857c:	cmp	r0, #0
   28580:	beq	285e8 <conf_set_shared_oper+0x104>
   28584:	mov	r1, #0
   28588:	strb	r1, [r0]
   2858c:	ldrb	r1, [r0, #1]!
   28590:	cmp	r1, #0
   28594:	ldreq	r0, [pc, #168]	; 28644 <conf_set_shared_oper+0x160>
   28598:	addeq	r0, pc, r0
   2859c:	bl	26ee8 <rb_strdup>
   285a0:	ldr	r1, [pc, #160]	; 28648 <conf_set_shared_oper+0x164>
   285a4:	ldr	r1, [pc, r1]
   285a8:	str	r0, [r1, #4]
   285ac:	cmp	r4, #0
   285b0:	ldrbne	r0, [r4]
   285b4:	cmpne	r0, #0
   285b8:	bne	285f8 <conf_set_shared_oper+0x114>
   285bc:	ldr	r0, [pc, #136]	; 2864c <conf_set_shared_oper+0x168>
   285c0:	add	r0, pc, r0
   285c4:	b	285fc <conf_set_shared_oper+0x118>
   285c8:	ldr	r0, [pc, #140]	; 2865c <conf_set_shared_oper+0x178>
   285cc:	add	r0, pc, r0
   285d0:	pop	{r4, r5, fp, lr}
   285d4:	b	26c18 <conf_report_error>
   285d8:	ldr	r0, [pc, #120]	; 28658 <conf_set_shared_oper+0x174>
   285dc:	add	r0, pc, r0
   285e0:	pop	{r4, r5, fp, lr}
   285e4:	b	26c18 <conf_report_error>
   285e8:	ldr	r0, [pc, #112]	; 28660 <conf_set_shared_oper+0x17c>
   285ec:	add	r0, pc, r0
   285f0:	pop	{r4, r5, fp, lr}
   285f4:	b	26c18 <conf_report_error>
   285f8:	mov	r0, r4
   285fc:	bl	26ee8 <rb_strdup>
   28600:	ldr	r4, [pc, #72]	; 28650 <conf_set_shared_oper+0x16c>
   28604:	ldr	r4, [pc, r4]
   28608:	str	r0, [r4]
   2860c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   28610:	mov	r1, r0
   28614:	ldr	r2, [pc, #56]	; 28654 <conf_set_shared_oper+0x170>
   28618:	add	r2, pc, r2
   2861c:	mov	r0, r4
   28620:	bl	26850 <rb_dlinkAdd>
   28624:	mov	r0, #0
   28628:	str	r0, [r5]
   2862c:	pop	{r4, r5, fp, pc}
   28630:	.word	0x0003dce8
   28634:	.word	0x0003dcd0
   28638:	.word	0x0003dca4
   2863c:	.word	0x00018df1
   28640:	.word	0x0003dc84
   28644:	.word	0x00018da5
   28648:	.word	0x0003dc38
   2864c:	.word	0x00018d7d
   28650:	.word	0x0003dbd8
   28654:	.word	0x0003dbb8
   28658:	.word	0x0001bc64
   2865c:	.word	0x0001bca5
   28660:	.word	0x0001bcb4

00028664 <conf_set_shared_flags>:
   28664:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28668:	add	fp, sp, #24
   2866c:	sub	sp, sp, #8
   28670:	mov	r4, r0
   28674:	mov	r0, #0
   28678:	str	r0, [sp, #4]
   2867c:	ldr	r0, [pc, #176]	; 28734 <conf_set_shared_flags+0xd0>
   28680:	ldr	r0, [pc, r0]
   28684:	cmp	r0, #0
   28688:	beq	28690 <conf_set_shared_flags+0x2c>
   2868c:	bl	e3e4 <free_remote_conf@plt>
   28690:	add	r0, sp, #4
   28694:	ldr	r1, [pc, #156]	; 28738 <conf_set_shared_flags+0xd4>
   28698:	add	r1, pc, r1
   2869c:	ldr	r2, [pc, #152]	; 2873c <conf_set_shared_flags+0xd8>
   286a0:	add	r2, pc, r2
   286a4:	mov	r3, r4
   286a8:	bl	29c10 <set_modes_from_table>
   286ac:	ldr	r6, [pc, #140]	; 28740 <conf_set_shared_flags+0xdc>
   286b0:	ldr	r6, [pc, r6]
   286b4:	cmp	r6, #0
   286b8:	beq	2871c <conf_set_shared_flags+0xb8>
   286bc:	ldr	r7, [sp, #4]
   286c0:	ldr	r8, [pc, #124]	; 28744 <conf_set_shared_flags+0xe0>
   286c4:	add	r8, pc, r8
   286c8:	ldr	r9, [pc, #120]	; 28748 <conf_set_shared_flags+0xe4>
   286cc:	add	r9, pc, r9
   286d0:	ldr	r5, [pc, #116]	; 2874c <conf_set_shared_flags+0xe8>
   286d4:	ldr	r5, [pc, r5]
   286d8:	ldr	r0, [r6]
   286dc:	ldr	r4, [r6, #8]
   286e0:	str	r0, [r8]
   286e4:	str	r7, [r0, #12]
   286e8:	mov	r0, r6
   286ec:	mov	r1, r9
   286f0:	bl	26b54 <rb_dlinkDelete>
   286f4:	mov	r0, r6
   286f8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   286fc:	ldr	r0, [pc, #76]	; 28750 <conf_set_shared_flags+0xec>
   28700:	ldr	r0, [pc, r0]
   28704:	add	r1, r0, #16
   28708:	mov	r2, r5
   2870c:	bl	2a518 <rb_dlinkAddTail>
   28710:	cmp	r4, #0
   28714:	mov	r6, r4
   28718:	bne	286d8 <conf_set_shared_flags+0x74>
   2871c:	ldr	r0, [pc, #48]	; 28754 <conf_set_shared_flags+0xf0>
   28720:	add	r0, pc, r0
   28724:	mov	r1, #0
   28728:	str	r1, [r0]
   2872c:	sub	sp, fp, #24
   28730:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28734:	.word	0x0003db5c
   28738:	.word	0x0001e460
   2873c:	.word	0x000341b4
   28740:	.word	0x0003db20
   28744:	.word	0x0003db18
   28748:	.word	0x0003db04
   2874c:	.word	0x000321e0
   28750:	.word	0x0003dadc
   28754:	.word	0x0003dabc

00028758 <conf_begin_connect>:
   28758:	push	{fp, lr}
   2875c:	mov	fp, sp
   28760:	ldr	r0, [pc, #88]	; 287c0 <conf_begin_connect+0x68>
   28764:	ldr	r0, [pc, r0]
   28768:	cmp	r0, #0
   2876c:	beq	28774 <conf_begin_connect+0x1c>
   28770:	bl	dcf4 <free_server_conf@plt>
   28774:	bl	d9e8 <make_server_conf@plt>
   28778:	ldr	r1, [pc, #68]	; 287c4 <conf_begin_connect+0x6c>
   2877c:	add	r1, pc, r1
   28780:	str	r0, [r1]
   28784:	movw	r1, #6667	; 0x1a0b
   28788:	str	r1, [r0, #284]	; 0x11c
   2878c:	ldr	r1, [r0, #288]	; 0x120
   28790:	orr	r1, r1, #16
   28794:	str	r1, [r0, #288]	; 0x120
   28798:	ldr	r0, [pc, #40]	; 287c8 <conf_begin_connect+0x70>
   2879c:	ldr	r0, [pc, r0]
   287a0:	cmp	r0, #0
   287a4:	beq	287b8 <conf_begin_connect+0x60>
   287a8:	bl	26ee8 <rb_strdup>
   287ac:	ldr	r1, [pc, #24]	; 287cc <conf_begin_connect+0x74>
   287b0:	ldr	r1, [pc, r1]
   287b4:	str	r0, [r1]
   287b8:	mov	r0, #0
   287bc:	pop	{fp, pc}
   287c0:	.word	0x0003da7c
   287c4:	.word	0x0003da64
   287c8:	.word	0x0003d9fc
   287cc:	.word	0x0003da30

000287d0 <conf_end_connect>:
   287d0:	push	{fp, lr}
   287d4:	mov	fp, sp
   287d8:	ldr	r0, [pc, #348]	; 2893c <conf_end_connect+0x16c>
   287dc:	ldr	r0, [pc, r0]
   287e0:	ldr	r1, [r0]
   287e4:	cmp	r1, #0
   287e8:	ldrbne	r0, [r1]
   287ec:	cmpne	r0, #0
   287f0:	bne	28808 <conf_end_connect+0x38>
   287f4:	ldr	r0, [pc, #324]	; 28940 <conf_end_connect+0x170>
   287f8:	add	r0, pc, r0
   287fc:	bl	d400 <conf_report_error@plt>
   28800:	mov	r0, #0
   28804:	pop	{fp, pc}
   28808:	ldr	r0, [pc, #308]	; 28944 <conf_end_connect+0x174>
   2880c:	ldr	r0, [pc, r0]
   28810:	ldr	r0, [r0]
   28814:	cmp	r0, #0
   28818:	beq	28828 <conf_end_connect+0x58>
   2881c:	bl	e750 <irccmp@plt>
   28820:	cmp	r0, #0
   28824:	beq	28874 <conf_end_connect+0xa4>
   28828:	ldr	r0, [pc, #288]	; 28950 <conf_end_connect+0x180>
   2882c:	ldr	r0, [pc, r0]
   28830:	ldr	r1, [r0, #272]	; 0x110
   28834:	cmp	r1, #0
   28838:	beq	28850 <conf_end_connect+0x80>
   2883c:	ldrb	r1, [r1]
   28840:	cmp	r1, #0
   28844:	ldrne	r1, [r0, #276]	; 0x114
   28848:	cmpne	r1, #0
   2884c:	bne	2888c <conf_end_connect+0xbc>
   28850:	ldr	r1, [r0, #280]	; 0x118
   28854:	cmp	r1, #0
   28858:	ldrbne	r1, [r1]
   2885c:	cmpne	r1, #0
   28860:	bne	28898 <conf_end_connect+0xc8>
   28864:	ldr	r1, [r0]
   28868:	ldr	r0, [pc, #228]	; 28954 <conf_end_connect+0x184>
   2886c:	add	r0, pc, r0
   28870:	b	28930 <conf_end_connect+0x160>
   28874:	ldr	r0, [pc, #204]	; 28948 <conf_end_connect+0x178>
   28878:	ldr	r0, [pc, r0]
   2887c:	ldr	r1, [r0]
   28880:	ldr	r0, [pc, #196]	; 2894c <conf_end_connect+0x17c>
   28884:	add	r0, pc, r0
   28888:	b	28930 <conf_end_connect+0x160>
   2888c:	ldrb	r1, [r1]
   28890:	cmp	r1, #0
   28894:	beq	28850 <conf_end_connect+0x80>
   28898:	ldrb	r1, [r0, #288]	; 0x120
   2889c:	tst	r1, #64	; 0x40
   288a0:	beq	288c8 <conf_end_connect+0xf8>
   288a4:	ldr	r1, [r0, #280]	; 0x118
   288a8:	cmp	r1, #0
   288ac:	ldrbne	r1, [r1]
   288b0:	cmpne	r1, #0
   288b4:	bne	288c8 <conf_end_connect+0xf8>
   288b8:	ldr	r1, [r0]
   288bc:	ldr	r0, [pc, #148]	; 28958 <conf_end_connect+0x188>
   288c0:	add	r0, pc, r0
   288c4:	b	28930 <conf_end_connect+0x160>
   288c8:	ldr	r1, [r0, #4]
   288cc:	cmp	r1, #0
   288d0:	ldrbne	r1, [r1]
   288d4:	cmpne	r1, #0
   288d8:	bne	288f0 <conf_end_connect+0x120>
   288dc:	ldrh	r1, [r0, #8]
   288e0:	cmp	r1, #2
   288e4:	ldrhne	r1, [r0, #140]	; 0x8c
   288e8:	cmpne	r1, #10
   288ec:	bne	28924 <conf_end_connect+0x154>
   288f0:	bl	ddc0 <add_server_conf@plt>
   288f4:	ldr	r0, [pc, #100]	; 28960 <conf_end_connect+0x190>
   288f8:	ldr	r0, [pc, r0]
   288fc:	add	r1, r0, #580	; 0x244
   28900:	ldr	r2, [pc, #92]	; 28964 <conf_end_connect+0x194>
   28904:	ldr	r2, [pc, r2]
   28908:	bl	26850 <rb_dlinkAdd>
   2890c:	ldr	r0, [pc, #84]	; 28968 <conf_end_connect+0x198>
   28910:	add	r0, pc, r0
   28914:	mov	r1, #0
   28918:	str	r1, [r0]
   2891c:	mov	r0, #0
   28920:	pop	{fp, pc}
   28924:	ldr	r1, [r0]
   28928:	ldr	r0, [pc, #44]	; 2895c <conf_end_connect+0x18c>
   2892c:	add	r0, pc, r0
   28930:	bl	d400 <conf_report_error@plt>
   28934:	mov	r0, #0
   28938:	pop	{fp, pc}
   2893c:	.word	0x0003da04
   28940:	.word	0x0001b5ba
   28944:	.word	0x00032144
   28948:	.word	0x0003d968
   2894c:	.word	0x0001ba98
   28950:	.word	0x0003d9b4
   28954:	.word	0x0001baef
   28958:	.word	0x0001baed
   2895c:	.word	0x0001bace
   28960:	.word	0x0003d8e8
   28964:	.word	0x000321dc
   28968:	.word	0x0003d8d0

0002896c <conf_set_exempt_ip>:
   2896c:	push	{r4, r5, fp, lr}
   28970:	add	fp, sp, #8
   28974:	sub	sp, sp, #8
   28978:	mov	r4, r0
   2897c:	mov	r1, #0
   28980:	mov	r2, #0
   28984:	bl	cfec <parse_netmask_strict@plt>
   28988:	orr	r0, r0, #1
   2898c:	cmp	r0, #3
   28990:	bne	289dc <conf_set_exempt_ip+0x70>
   28994:	bl	cfbc <make_conf@plt>
   28998:	mov	r5, r0
   2899c:	ldr	r0, [pc, #76]	; 289f0 <conf_set_exempt_ip+0x84>
   289a0:	add	r0, pc, r0
   289a4:	bl	26ee8 <rb_strdup>
   289a8:	str	r0, [r5, #20]
   289ac:	mov	r0, r4
   289b0:	bl	26ee8 <rb_strdup>
   289b4:	str	r0, [r5, #16]
   289b8:	mov	r1, #1048576	; 0x100000
   289bc:	str	r1, [r5]
   289c0:	str	r5, [sp]
   289c4:	mov	r1, #1048576	; 0x100000
   289c8:	mov	r2, #0
   289cc:	mov	r3, #0
   289d0:	bl	dad8 <add_conf_by_address@plt>
   289d4:	sub	sp, fp, #8
   289d8:	pop	{r4, r5, fp, pc}
   289dc:	ldr	r0, [pc, #16]	; 289f4 <conf_set_exempt_ip+0x88>
   289e0:	add	r0, pc, r0
   289e4:	sub	sp, fp, #8
   289e8:	pop	{r4, r5, fp, lr}
   289ec:	b	26c18 <conf_report_error>
   289f0:	.word	0x0001899d
   289f4:	.word	0x0001bb34

000289f8 <conf_cleanup_cluster>:
   289f8:	push	{r4, r5, r6, sl, fp, lr}
   289fc:	add	fp, sp, #16
   28a00:	ldr	r4, [pc, #104]	; 28a70 <conf_cleanup_cluster+0x78>
   28a04:	ldr	r4, [pc, r4]
   28a08:	cmp	r4, #0
   28a0c:	beq	28a44 <conf_cleanup_cluster+0x4c>
   28a10:	ldr	r5, [pc, #92]	; 28a74 <conf_cleanup_cluster+0x7c>
   28a14:	add	r5, pc, r5
   28a18:	ldr	r0, [r4]
   28a1c:	ldr	r6, [r4, #8]
   28a20:	bl	e3e4 <free_remote_conf@plt>
   28a24:	mov	r0, r4
   28a28:	mov	r1, r5
   28a2c:	bl	26b54 <rb_dlinkDelete>
   28a30:	mov	r0, r4
   28a34:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   28a38:	cmp	r6, #0
   28a3c:	mov	r4, r6
   28a40:	bne	28a18 <conf_cleanup_cluster+0x20>
   28a44:	ldr	r0, [pc, #44]	; 28a78 <conf_cleanup_cluster+0x80>
   28a48:	ldr	r0, [pc, r0]
   28a4c:	cmp	r0, #0
   28a50:	beq	28a68 <conf_cleanup_cluster+0x70>
   28a54:	bl	e3e4 <free_remote_conf@plt>
   28a58:	ldr	r0, [pc, #28]	; 28a7c <conf_cleanup_cluster+0x84>
   28a5c:	add	r0, pc, r0
   28a60:	mov	r1, #0
   28a64:	str	r1, [r0]
   28a68:	mov	r0, #0
   28a6c:	pop	{r4, r5, r6, sl, fp, pc}
   28a70:	.word	0x0003d7e0
   28a74:	.word	0x0003d7d0
   28a78:	.word	0x0003d794
   28a7c:	.word	0x0003d780

00028a80 <conf_set_cluster_name>:
   28a80:	push	{r4, r5, fp, lr}
   28a84:	add	fp, sp, #8
   28a88:	mov	r4, r0
   28a8c:	ldr	r0, [pc, #84]	; 28ae8 <conf_set_cluster_name+0x68>
   28a90:	ldr	r0, [pc, r0]
   28a94:	cmp	r0, #0
   28a98:	beq	28aa0 <conf_set_cluster_name+0x20>
   28a9c:	bl	e3e4 <free_remote_conf@plt>
   28aa0:	bl	d3dc <make_remote_conf@plt>
   28aa4:	ldr	r5, [pc, #64]	; 28aec <conf_set_cluster_name+0x6c>
   28aa8:	add	r5, pc, r5
   28aac:	str	r0, [r5]
   28ab0:	mov	r0, r4
   28ab4:	bl	26ee8 <rb_strdup>
   28ab8:	ldr	r4, [pc, #48]	; 28af0 <conf_set_cluster_name+0x70>
   28abc:	ldr	r4, [pc, r4]
   28ac0:	str	r0, [r4, #8]
   28ac4:	bl	dc64 <rb_make_rb_dlink_node@plt>
   28ac8:	mov	r1, r0
   28acc:	ldr	r2, [pc, #32]	; 28af4 <conf_set_cluster_name+0x74>
   28ad0:	add	r2, pc, r2
   28ad4:	mov	r0, r4
   28ad8:	bl	26850 <rb_dlinkAdd>
   28adc:	mov	r0, #0
   28ae0:	str	r0, [r5]
   28ae4:	pop	{r4, r5, fp, pc}
   28ae8:	.word	0x0003d74c
   28aec:	.word	0x0003d734
   28af0:	.word	0x0003d720
   28af4:	.word	0x0003d714

00028af8 <conf_set_cluster_flags>:
   28af8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28afc:	add	fp, sp, #24
   28b00:	sub	sp, sp, #8
   28b04:	mov	r4, r0
   28b08:	mov	r0, #0
   28b0c:	str	r0, [sp, #4]
   28b10:	ldr	r0, [pc, #168]	; 28bc0 <conf_set_cluster_flags+0xc8>
   28b14:	ldr	r0, [pc, r0]
   28b18:	cmp	r0, #0
   28b1c:	beq	28b24 <conf_set_cluster_flags+0x2c>
   28b20:	bl	e3e4 <free_remote_conf@plt>
   28b24:	add	r0, sp, #4
   28b28:	ldr	r1, [pc, #148]	; 28bc4 <conf_set_cluster_flags+0xcc>
   28b2c:	add	r1, pc, r1
   28b30:	ldr	r2, [pc, #144]	; 28bc8 <conf_set_cluster_flags+0xd0>
   28b34:	add	r2, pc, r2
   28b38:	mov	r3, r4
   28b3c:	bl	29c10 <set_modes_from_table>
   28b40:	ldr	r4, [pc, #132]	; 28bcc <conf_set_cluster_flags+0xd4>
   28b44:	ldr	r4, [pc, r4]
   28b48:	cmp	r4, #0
   28b4c:	beq	28ba8 <conf_set_cluster_flags+0xb0>
   28b50:	ldr	r7, [sp, #4]
   28b54:	ldr	r8, [pc, #116]	; 28bd0 <conf_set_cluster_flags+0xd8>
   28b58:	add	r8, pc, r8
   28b5c:	ldr	r9, [pc, #112]	; 28bd4 <conf_set_cluster_flags+0xdc>
   28b60:	ldr	r9, [pc, r9]
   28b64:	ldr	r6, [pc, #108]	; 28bd8 <conf_set_cluster_flags+0xe0>
   28b68:	add	r6, pc, r6
   28b6c:	ldr	r0, [r4]
   28b70:	ldr	r5, [r4, #8]
   28b74:	str	r0, [r8]
   28b78:	str	r7, [r0, #12]
   28b7c:	add	r1, r0, #16
   28b80:	mov	r2, r9
   28b84:	bl	2a518 <rb_dlinkAddTail>
   28b88:	mov	r0, r4
   28b8c:	mov	r1, r6
   28b90:	bl	26b54 <rb_dlinkDelete>
   28b94:	mov	r0, r4
   28b98:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   28b9c:	cmp	r5, #0
   28ba0:	mov	r4, r5
   28ba4:	bne	28b6c <conf_set_cluster_flags+0x74>
   28ba8:	ldr	r0, [pc, #44]	; 28bdc <conf_set_cluster_flags+0xe4>
   28bac:	add	r0, pc, r0
   28bb0:	mov	r1, #0
   28bb4:	str	r1, [r0]
   28bb8:	sub	sp, fp, #24
   28bbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28bc0:	.word	0x0003d6c8
   28bc4:	.word	0x0001dfcc
   28bc8:	.word	0x00033e08
   28bcc:	.word	0x0003d6a0
   28bd0:	.word	0x0003d684
   28bd4:	.word	0x00031e74
   28bd8:	.word	0x0003d67c
   28bdc:	.word	0x0003d630

00028be0 <conf_set_service_name>:
   28be0:	push	{r4, sl, fp, lr}
   28be4:	add	fp, sp, #8
   28be8:	ldrb	r4, [r0]
   28bec:	cmp	r4, #0
   28bf0:	beq	28c5c <conf_set_service_name+0x7c>
   28bf4:	mov	r1, #0
   28bf8:	mov	r2, #1
   28bfc:	ldr	ip, [pc, #120]	; 28c7c <conf_set_service_name+0x9c>
   28c00:	ldr	ip, [pc, ip]
   28c04:	uxtb	r4, r4
   28c08:	add	r3, ip, r4, lsl #2
   28c0c:	ldrh	r3, [r3]
   28c10:	tst	r3, #8256	; 0x2040
   28c14:	beq	28c6c <conf_set_service_name+0x8c>
   28c18:	cmp	r4, #46	; 0x2e
   28c1c:	addeq	r1, r1, #1
   28c20:	ldrb	r4, [r0, r2]
   28c24:	add	r2, r2, #1
   28c28:	cmp	r4, #0
   28c2c:	bne	28c04 <conf_set_service_name+0x24>
   28c30:	cmp	r1, #0
   28c34:	beq	28c5c <conf_set_service_name+0x7c>
   28c38:	bl	26ee8 <rb_strdup>
   28c3c:	mov	r4, r0
   28c40:	bl	dc64 <rb_make_rb_dlink_node@plt>
   28c44:	mov	r1, r0
   28c48:	ldr	r2, [pc, #48]	; 28c80 <conf_set_service_name+0xa0>
   28c4c:	ldr	r2, [pc, r2]
   28c50:	mov	r0, r4
   28c54:	pop	{r4, sl, fp, lr}
   28c58:	b	26850 <rb_dlinkAdd>
   28c5c:	ldr	r0, [pc, #36]	; 28c88 <conf_set_service_name+0xa8>
   28c60:	add	r0, pc, r0
   28c64:	pop	{r4, sl, fp, lr}
   28c68:	b	26c18 <conf_report_error>
   28c6c:	ldr	r0, [pc, #16]	; 28c84 <conf_set_service_name+0xa4>
   28c70:	add	r0, pc, r0
   28c74:	pop	{r4, sl, fp, lr}
   28c78:	b	26c18 <conf_report_error>
   28c7c:	.word	0x00031df8
   28c80:	.word	0x00031c9c
   28c84:	.word	0x0001c22d
   28c88:	.word	0x0001c269

00028c8c <conf_begin_alias>:
   28c8c:	push	{fp, lr}
   28c90:	mov	fp, sp
   28c94:	mov	r0, #12
   28c98:	bl	26830 <rb_malloc>
   28c9c:	ldr	r1, [pc, #60]	; 28ce0 <conf_begin_alias+0x54>
   28ca0:	add	r1, pc, r1
   28ca4:	str	r0, [r1]
   28ca8:	ldr	r0, [pc, #52]	; 28ce4 <conf_begin_alias+0x58>
   28cac:	ldr	r0, [pc, r0]
   28cb0:	cmp	r0, #0
   28cb4:	beq	28cc8 <conf_begin_alias+0x3c>
   28cb8:	bl	26ee8 <rb_strdup>
   28cbc:	ldr	r1, [pc, #36]	; 28ce8 <conf_begin_alias+0x5c>
   28cc0:	ldr	r1, [pc, r1]
   28cc4:	str	r0, [r1]
   28cc8:	ldr	r0, [pc, #28]	; 28cec <conf_begin_alias+0x60>
   28ccc:	ldr	r0, [pc, r0]
   28cd0:	mov	r1, #0
   28cd4:	str	r1, [r0, #8]
   28cd8:	mov	r0, #0
   28cdc:	pop	{fp, pc}
   28ce0:	.word	0x0003d550
   28ce4:	.word	0x0003d4ec
   28ce8:	.word	0x0003d530
   28cec:	.word	0x0003d524

00028cf0 <conf_end_alias>:
   28cf0:	push	{r4, sl, fp, lr}
   28cf4:	add	fp, sp, #8
   28cf8:	mvn	r4, #0
   28cfc:	ldr	r2, [pc, #104]	; 28d6c <conf_end_alias+0x7c>
   28d00:	ldr	r2, [pc, r2]
   28d04:	cmp	r2, #0
   28d08:	beq	28d38 <conf_end_alias+0x48>
   28d0c:	ldr	r1, [r2]
   28d10:	cmp	r1, #0
   28d14:	beq	28d40 <conf_end_alias+0x50>
   28d18:	ldr	r0, [r2, #4]
   28d1c:	cmp	r0, #0
   28d20:	beq	28d4c <conf_end_alias+0x5c>
   28d24:	ldr	r0, [pc, #80]	; 28d7c <conf_end_alias+0x8c>
   28d28:	ldr	r0, [pc, r0]
   28d2c:	ldr	r0, [r0]
   28d30:	bl	d70c <rb_dictionary_add@plt>
   28d34:	mov	r4, #0
   28d38:	mov	r0, r4
   28d3c:	pop	{r4, sl, fp, pc}
   28d40:	ldr	r0, [pc, #40]	; 28d70 <conf_end_alias+0x80>
   28d44:	add	r0, pc, r0
   28d48:	b	28d54 <conf_end_alias+0x64>
   28d4c:	ldr	r0, [pc, #36]	; 28d78 <conf_end_alias+0x88>
   28d50:	add	r0, pc, r0
   28d54:	bl	d400 <conf_report_error@plt>
   28d58:	ldr	r0, [pc, #20]	; 28d74 <conf_end_alias+0x84>
   28d5c:	ldr	r0, [pc, r0]
   28d60:	bl	26c0c <rb_free>
   28d64:	mov	r0, r4
   28d68:	pop	{r4, sl, fp, pc}
   28d6c:	.word	0x0003d4f0
   28d70:	.word	0x0001c1b0
   28d74:	.word	0x0003d494
   28d78:	.word	0x0001c1c8
   28d7c:	.word	0x00031c64

00028d80 <conf_set_alias_name>:
   28d80:	cmp	r0, #0
   28d84:	ldrne	r1, [pc, #44]	; 28db8 <conf_set_alias_name+0x38>
   28d88:	ldrne	r1, [pc, r1]
   28d8c:	cmpne	r1, #0
   28d90:	bne	28d98 <conf_set_alias_name+0x18>
   28d94:	bx	lr
   28d98:	push	{fp, lr}
   28d9c:	mov	fp, sp
   28da0:	bl	26ee8 <rb_strdup>
   28da4:	ldr	r1, [pc, #16]	; 28dbc <conf_set_alias_name+0x3c>
   28da8:	ldr	r1, [pc, r1]
   28dac:	str	r0, [r1]
   28db0:	pop	{fp, lr}
   28db4:	bx	lr
   28db8:	.word	0x0003d468
   28dbc:	.word	0x0003d448

00028dc0 <conf_set_alias_target>:
   28dc0:	cmp	r0, #0
   28dc4:	ldrne	r1, [pc, #44]	; 28df8 <conf_set_alias_target+0x38>
   28dc8:	ldrne	r1, [pc, r1]
   28dcc:	cmpne	r1, #0
   28dd0:	bne	28dd8 <conf_set_alias_target+0x18>
   28dd4:	bx	lr
   28dd8:	push	{fp, lr}
   28ddc:	mov	fp, sp
   28de0:	bl	26ee8 <rb_strdup>
   28de4:	ldr	r1, [pc, #16]	; 28dfc <conf_set_alias_target+0x3c>
   28de8:	ldr	r1, [pc, r1]
   28dec:	str	r0, [r1, #4]
   28df0:	pop	{fp, lr}
   28df4:	bx	lr
   28df8:	.word	0x0003d428
   28dfc:	.word	0x0003d408

00028e00 <conf_set_dnsbl_entry_host>:
   28e00:	push	{fp, lr}
   28e04:	mov	fp, sp
   28e08:	mov	r1, r0
   28e0c:	ldr	r2, [pc, #76]	; 28e60 <conf_set_dnsbl_entry_host+0x60>
   28e10:	ldr	r2, [pc, r2]
   28e14:	cmp	r2, #0
   28e18:	beq	28e34 <conf_set_dnsbl_entry_host+0x34>
   28e1c:	ldr	r0, [pc, #72]	; 28e6c <conf_set_dnsbl_entry_host+0x6c>
   28e20:	add	r0, pc, r0
   28e24:	bl	d400 <conf_report_error@plt>
   28e28:	mov	r0, #0
   28e2c:	pop	{fp, lr}
   28e30:	b	290a8 <conf_set_dnsbl_entry_reason>
   28e34:	ldr	r0, [pc, #40]	; 28e64 <conf_set_dnsbl_entry_host+0x64>
   28e38:	add	r0, pc, r0
   28e3c:	ldrb	r2, [r0]
   28e40:	orr	r2, r2, #1
   28e44:	strb	r2, [r0]
   28e48:	mov	r0, r1
   28e4c:	bl	26ee8 <rb_strdup>
   28e50:	ldr	r1, [pc, #16]	; 28e68 <conf_set_dnsbl_entry_host+0x68>
   28e54:	add	r1, pc, r1
   28e58:	str	r0, [r1]
   28e5c:	pop	{fp, pc}
   28e60:	.word	0x0003d3e4
   28e64:	.word	0x0003d3c0
   28e68:	.word	0x0003d3a0
   28e6c:	.word	0x0001c11e

00028e70 <conf_set_dnsbl_entry_type>:
   28e70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28e74:	add	fp, sp, #24
   28e78:	mov	r4, r0
   28e7c:	ldr	r7, [pc, #168]	; 28f2c <conf_set_dnsbl_entry_type+0xbc>
   28e80:	add	r7, pc, r7
   28e84:	mov	r0, #0
   28e88:	strb	r0, [r7]
   28e8c:	cmp	r4, #0
   28e90:	beq	28f14 <conf_set_dnsbl_entry_type+0xa4>
   28e94:	ldr	r5, [pc, #148]	; 28f30 <conf_set_dnsbl_entry_type+0xc0>
   28e98:	add	r5, pc, r5
   28e9c:	ldr	r6, [pc, #144]	; 28f34 <conf_set_dnsbl_entry_type+0xc4>
   28ea0:	add	r6, pc, r6
   28ea4:	ldr	r8, [pc, #140]	; 28f38 <conf_set_dnsbl_entry_type+0xc8>
   28ea8:	add	r8, pc, r8
   28eac:	ldr	r0, [r4, #8]
   28eb0:	mov	r1, r5
   28eb4:	bl	d340 <rb_strcasecmp@plt>
   28eb8:	cmp	r0, #0
   28ebc:	beq	28ee4 <conf_set_dnsbl_entry_type+0x74>
   28ec0:	ldr	r0, [r4, #8]
   28ec4:	mov	r1, r6
   28ec8:	bl	d340 <rb_strcasecmp@plt>
   28ecc:	cmp	r0, #0
   28ed0:	beq	28ef0 <conf_set_dnsbl_entry_type+0x80>
   28ed4:	ldr	r1, [r4, #8]
   28ed8:	mov	r0, r8
   28edc:	bl	d400 <conf_report_error@plt>
   28ee0:	b	28efc <conf_set_dnsbl_entry_type+0x8c>
   28ee4:	ldrb	r0, [r7]
   28ee8:	orr	r0, r0, #1
   28eec:	b	28ef8 <conf_set_dnsbl_entry_type+0x88>
   28ef0:	ldrb	r0, [r7]
   28ef4:	orr	r0, r0, #2
   28ef8:	strb	r0, [r7]
   28efc:	ldr	r4, [r4]
   28f00:	cmp	r4, #0
   28f04:	bne	28eac <conf_set_dnsbl_entry_type+0x3c>
   28f08:	ldrb	r0, [r7]
   28f0c:	cmp	r0, #0
   28f10:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   28f14:	ldr	r0, [pc, #32]	; 28f3c <conf_set_dnsbl_entry_type+0xcc>
   28f18:	add	r0, pc, r0
   28f1c:	bl	e6c0 <conf_report_warning@plt>
   28f20:	mov	r0, #1
   28f24:	strb	r0, [r7]
   28f28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28f2c:	.word	0x0003d378
   28f30:	.word	0x0001c418
   28f34:	.word	0x0001c3ff
   28f38:	.word	0x0001c0bf
   28f3c:	.word	0x0001c079

00028f40 <conf_set_dnsbl_entry_matches>:
   28f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f44:	add	fp, sp, #28
   28f48:	sub	sp, sp, #132	; 0x84
   28f4c:	cmp	r0, #0
   28f50:	beq	29088 <conf_set_dnsbl_entry_matches+0x148>
   28f54:	mov	r4, r0
   28f58:	ldr	r5, [pc, #304]	; 29090 <conf_set_dnsbl_entry_matches+0x150>
   28f5c:	add	r5, pc, r5
   28f60:	ldr	r8, [pc, #300]	; 29094 <conf_set_dnsbl_entry_matches+0x154>
   28f64:	add	r8, pc, r8
   28f68:	b	28f94 <conf_set_dnsbl_entry_matches+0x54>
   28f6c:	mov	r0, r9
   28f70:	bl	26ee8 <rb_strdup>
   28f74:	mov	r7, r0
   28f78:	bl	dc64 <rb_make_rb_dlink_node@plt>
   28f7c:	mov	r1, r0
   28f80:	mov	r0, r7
   28f84:	ldr	r2, [pc, #276]	; 290a0 <conf_set_dnsbl_entry_matches+0x160>
   28f88:	add	r2, pc, r2
   28f8c:	bl	26850 <rb_dlinkAdd>
   28f90:	b	2907c <conf_set_dnsbl_entry_matches+0x13c>
   28f94:	ldrb	r0, [r4, #4]
   28f98:	cmp	r0, #1
   28f9c:	bne	28fc8 <conf_set_dnsbl_entry_matches+0x88>
   28fa0:	ldr	r9, [r4, #8]
   28fa4:	cmp	r9, #0
   28fa8:	beq	28fd0 <conf_set_dnsbl_entry_matches+0x90>
   28fac:	mov	r0, r9
   28fb0:	bl	dc94 <strlen@plt>
   28fb4:	cmp	r0, #53	; 0x35
   28fb8:	bls	28fdc <conf_set_dnsbl_entry_matches+0x9c>
   28fbc:	ldr	r0, [pc, #212]	; 29098 <conf_set_dnsbl_entry_matches+0x158>
   28fc0:	add	r0, pc, r0
   28fc4:	b	29074 <conf_set_dnsbl_entry_matches+0x134>
   28fc8:	mov	r0, r8
   28fcc:	b	28fd4 <conf_set_dnsbl_entry_matches+0x94>
   28fd0:	mov	r0, r5
   28fd4:	bl	d400 <conf_report_error@plt>
   28fd8:	b	2907c <conf_set_dnsbl_entry_matches+0x13c>
   28fdc:	mov	sl, #2
   28fe0:	mov	r7, r9
   28fe4:	b	28ff0 <conf_set_dnsbl_entry_matches+0xb0>
   28fe8:	add	r7, r7, #1
   28fec:	mov	sl, r0
   28ff0:	ldrb	r6, [r7]
   28ff4:	mov	r0, #1
   28ff8:	cmp	r6, #46	; 0x2e
   28ffc:	beq	28fe8 <conf_set_dnsbl_entry_matches+0xa8>
   29000:	cmp	r6, #0
   29004:	beq	29028 <conf_set_dnsbl_entry_matches+0xe8>
   29008:	bl	dc1c <__ctype_b_loc@plt>
   2900c:	ldr	r0, [r0]
   29010:	add	r0, r0, r6, lsl #1
   29014:	ldrb	r0, [r0, #1]
   29018:	tst	r0, #8
   2901c:	mov	r0, sl
   29020:	bne	28fe8 <conf_set_dnsbl_entry_matches+0xa8>
   29024:	b	29050 <conf_set_dnsbl_entry_matches+0x110>
   29028:	cmp	sl, #2
   2902c:	beq	2905c <conf_set_dnsbl_entry_matches+0x11c>
   29030:	cmp	sl, #1
   29034:	bne	2907c <conf_set_dnsbl_entry_matches+0x13c>
   29038:	mov	r0, #2
   2903c:	mov	r1, r9
   29040:	add	r2, sp, #4
   29044:	bl	d820 <rb_inet_pton@plt>
   29048:	cmp	r0, #0
   2904c:	bgt	28f6c <conf_set_dnsbl_entry_matches+0x2c>
   29050:	ldr	r0, [pc, #68]	; 2909c <conf_set_dnsbl_entry_matches+0x15c>
   29054:	add	r0, pc, r0
   29058:	b	29074 <conf_set_dnsbl_entry_matches+0x134>
   2905c:	mov	r0, r9
   29060:	bl	dc94 <strlen@plt>
   29064:	cmp	r0, #4
   29068:	bcc	28f6c <conf_set_dnsbl_entry_matches+0x2c>
   2906c:	ldr	r0, [pc, #48]	; 290a4 <conf_set_dnsbl_entry_matches+0x164>
   29070:	add	r0, pc, r0
   29074:	mov	r1, r9
   29078:	bl	d400 <conf_report_error@plt>
   2907c:	ldr	r4, [r4]
   29080:	cmp	r4, #0
   29084:	bne	28f94 <conf_set_dnsbl_entry_matches+0x54>
   29088:	sub	sp, fp, #28
   2908c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29090:	.word	0x0001c098
   29094:	.word	0x0001c068
   29098:	.word	0x0001c054
   2909c:	.word	0x0001bfe9
   290a0:	.word	0x0003d274
   290a4:	.word	0x0001bffa

000290a8 <conf_set_dnsbl_entry_reason>:
   290a8:	push	{r4, r5, r6, sl, fp, lr}
   290ac:	add	fp, sp, #16
   290b0:	cmp	r0, #0
   290b4:	ldrne	r1, [pc, #336]	; 2920c <conf_set_dnsbl_entry_reason+0x164>
   290b8:	ldrne	r1, [pc, r1]
   290bc:	cmpne	r1, #0
   290c0:	bne	29160 <conf_set_dnsbl_entry_reason+0xb8>
   290c4:	ldr	r4, [pc, #356]	; 29230 <conf_set_dnsbl_entry_reason+0x188>
   290c8:	ldr	r4, [pc, r4]
   290cc:	cmp	r4, #0
   290d0:	beq	29108 <conf_set_dnsbl_entry_reason+0x60>
   290d4:	ldr	r5, [pc, #344]	; 29234 <conf_set_dnsbl_entry_reason+0x18c>
   290d8:	add	r5, pc, r5
   290dc:	ldr	r0, [r4]
   290e0:	ldr	r6, [r4, #8]
   290e4:	bl	26c0c <rb_free>
   290e8:	mov	r0, r4
   290ec:	mov	r1, r5
   290f0:	bl	26b54 <rb_dlinkDelete>
   290f4:	mov	r0, r4
   290f8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   290fc:	cmp	r6, #0
   29100:	mov	r4, r6
   29104:	bne	290dc <conf_set_dnsbl_entry_reason+0x34>
   29108:	ldr	r0, [pc, #296]	; 29238 <conf_set_dnsbl_entry_reason+0x190>
   2910c:	add	r0, pc, r0
   29110:	mov	r4, #0
   29114:	str	r4, [r0]
   29118:	str	r4, [r0, #4]
   2911c:	str	r4, [r0, #8]
   29120:	ldr	r0, [pc, #276]	; 2923c <conf_set_dnsbl_entry_reason+0x194>
   29124:	ldr	r0, [pc, r0]
   29128:	bl	26c0c <rb_free>
   2912c:	ldr	r0, [pc, #268]	; 29240 <conf_set_dnsbl_entry_reason+0x198>
   29130:	ldr	r0, [pc, r0]
   29134:	bl	26c0c <rb_free>
   29138:	ldr	r0, [pc, #260]	; 29244 <conf_set_dnsbl_entry_reason+0x19c>
   2913c:	add	r0, pc, r0
   29140:	str	r4, [r0]
   29144:	ldr	r0, [pc, #252]	; 29248 <conf_set_dnsbl_entry_reason+0x1a0>
   29148:	add	r0, pc, r0
   2914c:	str	r4, [r0]
   29150:	ldr	r0, [pc, #244]	; 2924c <conf_set_dnsbl_entry_reason+0x1a4>
   29154:	add	r0, pc, r0
   29158:	strb	r4, [r0]
   2915c:	pop	{r4, r5, r6, sl, fp, pc}
   29160:	bl	26ee8 <rb_strdup>
   29164:	mov	r4, r0
   29168:	ldr	r0, [pc, #160]	; 29210 <conf_set_dnsbl_entry_reason+0x168>
   2916c:	add	r0, pc, r0
   29170:	str	r4, [r0]
   29174:	ldr	r0, [pc, #152]	; 29214 <conf_set_dnsbl_entry_reason+0x16c>
   29178:	add	r0, pc, r0
   2917c:	ldrb	r5, [r0]
   29180:	tst	r5, #2
   29184:	beq	291b0 <conf_set_dnsbl_entry_reason+0x108>
   29188:	ldr	r6, [pc, #136]	; 29218 <conf_set_dnsbl_entry_reason+0x170>
   2918c:	ldr	r6, [pc, r6]
   29190:	mov	r0, r6
   29194:	bl	dc94 <strlen@plt>
   29198:	add	r0, r0, #64	; 0x40
   2919c:	cmp	r0, #256	; 0x100
   291a0:	bcc	291b0 <conf_set_dnsbl_entry_reason+0x108>
   291a4:	ldr	r0, [pc, #112]	; 2921c <conf_set_dnsbl_entry_reason+0x174>
   291a8:	add	r0, pc, r0
   291ac:	b	291e0 <conf_set_dnsbl_entry_reason+0x138>
   291b0:	and	r0, r5, #3
   291b4:	cmp	r0, #1
   291b8:	bne	291ec <conf_set_dnsbl_entry_reason+0x144>
   291bc:	ldr	r6, [pc, #92]	; 29220 <conf_set_dnsbl_entry_reason+0x178>
   291c0:	ldr	r6, [pc, r6]
   291c4:	mov	r0, r6
   291c8:	bl	dc94 <strlen@plt>
   291cc:	add	r0, r0, #16
   291d0:	cmp	r0, #256	; 0x100
   291d4:	bcc	291ec <conf_set_dnsbl_entry_reason+0x144>
   291d8:	ldr	r0, [pc, #68]	; 29224 <conf_set_dnsbl_entry_reason+0x17c>
   291dc:	add	r0, pc, r0
   291e0:	mov	r1, r6
   291e4:	bl	d400 <conf_report_error@plt>
   291e8:	b	290c4 <conf_set_dnsbl_entry_reason+0x1c>
   291ec:	ldr	r0, [pc, #52]	; 29228 <conf_set_dnsbl_entry_reason+0x180>
   291f0:	ldr	r0, [pc, r0]
   291f4:	ldr	r3, [pc, #48]	; 2922c <conf_set_dnsbl_entry_reason+0x184>
   291f8:	add	r3, pc, r3
   291fc:	mov	r1, r4
   29200:	mov	r2, r5
   29204:	bl	d910 <add_dnsbl_entry@plt>
   29208:	b	290c4 <conf_set_dnsbl_entry_reason+0x1c>
   2920c:	.word	0x0003d13c
   29210:	.word	0x0003d09c
   29214:	.word	0x0003d080
   29218:	.word	0x0003d068
   2921c:	.word	0x0001bef2
   29220:	.word	0x0003d034
   29224:	.word	0x0001bef7
   29228:	.word	0x0003d004
   2922c:	.word	0x0003d004
   29230:	.word	0x0003d134
   29234:	.word	0x0003d124
   29238:	.word	0x0003d0f0
   2923c:	.word	0x0003d0d0
   29240:	.word	0x0003d0d8
   29244:	.word	0x0003d0cc
   29248:	.word	0x0003d0ac
   2924c:	.word	0x0003d0a4

00029250 <conf_warn_blacklist_deprecation>:
   29250:	push	{fp, lr}
   29254:	mov	fp, sp
   29258:	ldr	r0, [pc, #12]	; 2926c <conf_warn_blacklist_deprecation+0x1c>
   2925c:	add	r0, pc, r0
   29260:	bl	d400 <conf_report_error@plt>
   29264:	mov	r0, #0
   29268:	pop	{fp, pc}
   2926c:	.word	0x0001beb0

00029270 <conf_begin_opm>:
   29270:	push	{fp, lr}
   29274:	mov	fp, sp
   29278:	ldr	r0, [pc, #72]	; 292c8 <conf_begin_opm+0x58>
   2927c:	add	r0, pc, r0
   29280:	mov	r1, #0
   29284:	str	r1, [r0]
   29288:	ldr	r0, [pc, #60]	; 292cc <conf_begin_opm+0x5c>
   2928c:	add	r0, pc, r0
   29290:	str	r1, [r0]
   29294:	ldr	r0, [pc, #52]	; 292d0 <conf_begin_opm+0x60>
   29298:	add	r0, pc, r0
   2929c:	str	r1, [r0]
   292a0:	ldr	r0, [pc, #44]	; 292d4 <conf_begin_opm+0x64>
   292a4:	add	r0, pc, r0
   292a8:	strh	r1, [r0]
   292ac:	ldr	r0, [pc, #36]	; 292d8 <conf_begin_opm+0x68>
   292b0:	add	r0, pc, r0
   292b4:	strh	r1, [r0]
   292b8:	bl	d52c <delete_opm_proxy_scanner_all@plt>
   292bc:	bl	d700 <delete_opm_listener_all@plt>
   292c0:	mov	r0, #0
   292c4:	pop	{fp, pc}
   292c8:	.word	0x0003cf94
   292cc:	.word	0x0003cf80
   292d0:	.word	0x0003cf7c
   292d4:	.word	0x0003cf74
   292d8:	.word	0x0003cf6a

000292dc <conf_end_opm>:
   292dc:	push	{r4, r5, r6, r7, fp, lr}
   292e0:	add	fp, sp, #16
   292e4:	sub	sp, sp, #56	; 0x38
   292e8:	ldr	r0, [pc, #476]	; 294cc <conf_end_opm+0x1f0>
   292ec:	add	r0, pc, r0
   292f0:	ldr	r0, [r0, #8]
   292f4:	cmp	r0, #0
   292f8:	beq	293ec <conf_end_opm+0x110>
   292fc:	ldr	r4, [pc, #464]	; 294d4 <conf_end_opm+0x1f8>
   29300:	add	r4, pc, r4
   29304:	ldrh	r1, [r4]
   29308:	cmp	r1, #0
   2930c:	beq	2934c <conf_end_opm+0x70>
   29310:	ldr	r0, [pc, #448]	; 294d8 <conf_end_opm+0x1fc>
   29314:	ldr	r0, [pc, r0]
   29318:	cmp	r0, #0
   2931c:	bne	29348 <conf_end_opm+0x6c>
   29320:	ldr	r0, [pc, #436]	; 294dc <conf_end_opm+0x200>
   29324:	ldr	r0, [pc, r0]
   29328:	add	r0, r0, #20
   2932c:	add	r1, sp, #3
   29330:	mov	r2, #53	; 0x35
   29334:	bl	cf50 <rb_inet_ntop_sock@plt>
   29338:	cmp	r0, #0
   2933c:	beq	294ac <conf_end_opm+0x1d0>
   29340:	ldrh	r1, [r4]
   29344:	add	r0, sp, #3
   29348:	bl	dd6c <conf_create_opm_listener@plt>
   2934c:	ldr	r5, [pc, #400]	; 294e4 <conf_end_opm+0x208>
   29350:	add	r5, pc, r5
   29354:	ldrh	r1, [r5]
   29358:	cmp	r1, #0
   2935c:	beq	2939c <conf_end_opm+0xc0>
   29360:	ldr	r0, [pc, #384]	; 294e8 <conf_end_opm+0x20c>
   29364:	ldr	r0, [pc, r0]
   29368:	cmp	r0, #0
   2936c:	bne	29398 <conf_end_opm+0xbc>
   29370:	ldr	r0, [pc, #372]	; 294ec <conf_end_opm+0x210>
   29374:	ldr	r0, [pc, r0]
   29378:	add	r0, r0, #148	; 0x94
   2937c:	add	r1, sp, #3
   29380:	mov	r2, #53	; 0x35
   29384:	bl	cf50 <rb_inet_ntop_sock@plt>
   29388:	cmp	r0, #0
   2938c:	beq	294bc <conf_end_opm+0x1e0>
   29390:	ldrh	r1, [r5]
   29394:	add	r0, sp, #3
   29398:	bl	dd6c <conf_create_opm_listener@plt>
   2939c:	ldrh	r2, [r5]
   293a0:	clz	r0, r2
   293a4:	lsr	r0, r0, #5
   293a8:	ldrh	r3, [r4]
   293ac:	clz	r1, r3
   293b0:	lsr	r1, r1, #5
   293b4:	orr	r6, r1, r0
   293b8:	ldr	r1, [pc, #308]	; 294f4 <conf_end_opm+0x218>
   293bc:	ldr	r1, [pc, r1]
   293c0:	sub	r0, r1, #1
   293c4:	cmp	r0, #58	; 0x3a
   293c8:	bhi	293d8 <conf_end_opm+0xfc>
   293cc:	cmp	r3, #0
   293d0:	cmpne	r2, #0
   293d4:	bne	2941c <conf_end_opm+0x140>
   293d8:	cmp	r6, #0
   293dc:	beq	29400 <conf_end_opm+0x124>
   293e0:	ldr	r0, [pc, #276]	; 294fc <conf_end_opm+0x220>
   293e4:	add	r0, pc, r0
   293e8:	b	293f4 <conf_end_opm+0x118>
   293ec:	ldr	r0, [pc, #220]	; 294d0 <conf_end_opm+0x1f4>
   293f0:	add	r0, pc, r0
   293f4:	bl	d400 <conf_report_error@plt>
   293f8:	mov	r6, #1
   293fc:	b	29428 <conf_end_opm+0x14c>
   29400:	mov	r6, #0
   29404:	cmp	r0, #59	; 0x3b
   29408:	bcc	29428 <conf_end_opm+0x14c>
   2940c:	ldr	r0, [pc, #236]	; 29500 <conf_end_opm+0x224>
   29410:	add	r0, pc, r0
   29414:	bl	d400 <conf_report_error@plt>
   29418:	b	29428 <conf_end_opm+0x14c>
   2941c:	ldr	r0, [pc, #212]	; 294f8 <conf_end_opm+0x21c>
   29420:	add	r0, pc, r0
   29424:	bl	e3f0 <set_authd_timeout@plt>
   29428:	ldr	r7, [pc, #212]	; 29504 <conf_end_opm+0x228>
   2942c:	ldr	r7, [pc, r7]
   29430:	cmp	r7, #0
   29434:	beq	29478 <conf_end_opm+0x19c>
   29438:	ldr	r4, [pc, #200]	; 29508 <conf_end_opm+0x22c>
   2943c:	add	r4, pc, r4
   29440:	ldr	r5, [r7]
   29444:	ldr	r7, [r7, #8]
   29448:	cmp	r6, #0
   2944c:	bne	2945c <conf_end_opm+0x180>
   29450:	ldrh	r1, [r5, #4]
   29454:	ldr	r0, [r5]
   29458:	bl	d574 <create_opm_proxy_scanner@plt>
   2945c:	add	r0, r5, #8
   29460:	mov	r1, r4
   29464:	bl	26b54 <rb_dlinkDelete>
   29468:	mov	r0, r5
   2946c:	bl	26c0c <rb_free>
   29470:	cmp	r7, #0
   29474:	bne	29440 <conf_end_opm+0x164>
   29478:	cmp	r6, #0
   2947c:	bne	29488 <conf_end_opm+0x1ac>
   29480:	mov	r0, #1
   29484:	bl	df40 <opm_check_enable@plt>
   29488:	ldr	r0, [pc, #124]	; 2950c <conf_end_opm+0x230>
   2948c:	ldr	r0, [pc, r0]
   29490:	bl	26c0c <rb_free>
   29494:	ldr	r0, [pc, #116]	; 29510 <conf_end_opm+0x234>
   29498:	ldr	r0, [pc, r0]
   2949c:	bl	26c0c <rb_free>
   294a0:	mov	r0, #0
   294a4:	sub	sp, fp, #16
   294a8:	pop	{r4, r5, r6, r7, fp, pc}
   294ac:	ldr	r0, [pc, #44]	; 294e0 <conf_end_opm+0x204>
   294b0:	add	r0, pc, r0
   294b4:	bl	d400 <conf_report_error@plt>
   294b8:	b	2934c <conf_end_opm+0x70>
   294bc:	ldr	r0, [pc, #44]	; 294f0 <conf_end_opm+0x214>
   294c0:	add	r0, pc, r0
   294c4:	bl	d400 <conf_report_error@plt>
   294c8:	b	2939c <conf_end_opm+0xc0>
   294cc:	.word	0x0003cf30
   294d0:	.word	0x0001bd63
   294d4:	.word	0x0003cf1a
   294d8:	.word	0x0003cefc
   294dc:	.word	0x0003162c
   294e0:	.word	0x0001bcd0
   294e4:	.word	0x0003cec8
   294e8:	.word	0x0003cea8
   294ec:	.word	0x000315dc
   294f0:	.word	0x0001bd0b
   294f4:	.word	0x0003ce58
   294f8:	.word	0x0001bdf6
   294fc:	.word	0x0001be3e
   29500:	.word	0x0001be30
   29504:	.word	0x0003cdf0
   29508:	.word	0x0003cde0
   2950c:	.word	0x0003cd84
   29510:	.word	0x0003cd74

00029514 <conf_set_opm_timeout>:
   29514:	ldr	r1, [r0]
   29518:	sub	r0, r1, #1
   2951c:	cmp	r0, #60	; 0x3c
   29520:	ldrcc	r0, [pc, #20]	; 2953c <conf_set_opm_timeout+0x28>
   29524:	addcc	r0, pc, r0
   29528:	strcc	r1, [r0]
   2952c:	bxcc	lr
   29530:	ldr	r0, [pc, #8]	; 29540 <conf_set_opm_timeout+0x2c>
   29534:	add	r0, pc, r0
   29538:	b	26c18 <conf_report_error>
   2953c:	.word	0x0003ccf0
   29540:	.word	0x0001bd36

00029544 <conf_set_opm_listen_address_ipv4>:
   29544:	mov	r1, #0
   29548:	b	2b17c <conf_set_opm_listen_address_both>

0002954c <conf_set_opm_listen_address_ipv6>:
   2954c:	mov	r1, #1
   29550:	b	2b17c <conf_set_opm_listen_address_both>

00029554 <conf_set_opm_listen_port_ipv4>:
   29554:	mov	r1, #0
   29558:	b	2b280 <conf_set_opm_listen_port_both>

0002955c <conf_set_opm_listen_port_ipv6>:
   2955c:	mov	r1, #1
   29560:	b	2b280 <conf_set_opm_listen_port_both>

00029564 <conf_set_opm_listen_port>:
   29564:	push	{r4, sl, fp, lr}
   29568:	add	fp, sp, #8
   2956c:	mov	r4, r0
   29570:	mov	r1, #1
   29574:	bl	2b280 <conf_set_opm_listen_port_both>
   29578:	mov	r0, r4
   2957c:	mov	r1, #0
   29580:	pop	{r4, sl, fp, lr}
   29584:	b	2b280 <conf_set_opm_listen_port_both>

00029588 <conf_set_opm_scan_ports_socks4>:
   29588:	ldr	r1, [pc, #12]	; 2959c <conf_set_opm_scan_ports_socks4+0x14>
   2958c:	add	r1, pc, r1
   29590:	ldr	r2, [pc, #8]	; 295a0 <conf_set_opm_scan_ports_socks4+0x18>
   29594:	add	r2, pc, r2
   29598:	b	2b310 <conf_set_opm_scan_ports_all>
   2959c:	.word	0x0001bde1
   295a0:	.word	0x0001bdeb

000295a4 <conf_set_opm_scan_ports_socks5>:
   295a4:	ldr	r1, [pc, #12]	; 295b8 <conf_set_opm_scan_ports_socks5+0x14>
   295a8:	add	r1, pc, r1
   295ac:	ldr	r2, [pc, #8]	; 295bc <conf_set_opm_scan_ports_socks5+0x18>
   295b0:	add	r2, pc, r2
   295b4:	b	2b310 <conf_set_opm_scan_ports_all>
   295b8:	.word	0x0001be61
   295bc:	.word	0x0001be6b

000295c0 <conf_set_opm_scan_ports_httpconnect>:
   295c0:	ldr	r1, [pc, #12]	; 295d4 <conf_set_opm_scan_ports_httpconnect+0x14>
   295c4:	add	r1, pc, r1
   295c8:	ldr	r2, [pc, #8]	; 295d8 <conf_set_opm_scan_ports_httpconnect+0x18>
   295cc:	add	r2, pc, r2
   295d0:	b	2b310 <conf_set_opm_scan_ports_all>
   295d4:	.word	0x0001be5e
   295d8:	.word	0x0001be6d

000295dc <conf_set_opm_scan_ports_httpsconnect>:
   295dc:	ldr	r1, [pc, #12]	; 295f0 <conf_set_opm_scan_ports_httpsconnect+0x14>
   295e0:	add	r1, pc, r1
   295e4:	ldr	r2, [pc, #8]	; 295f4 <conf_set_opm_scan_ports_httpsconnect+0x18>
   295e8:	add	r2, pc, r2
   295ec:	b	2b310 <conf_set_opm_scan_ports_all>
   295f0:	.word	0x0001be65
   295f4:	.word	0x0001be75

000295f8 <conf_set_serverinfo_network_name>:
   295f8:	push	{r4, r5, fp, lr}
   295fc:	add	fp, sp, #8
   29600:	mov	r4, r0
   29604:	mov	r1, #32
   29608:	bl	dce8 <strchr@plt>
   2960c:	cmp	r0, #0
   29610:	movne	r1, #0
   29614:	strbne	r1, [r0]
   29618:	ldr	r5, [pc, #24]	; 29638 <conf_set_serverinfo_network_name+0x40>
   2961c:	ldr	r5, [pc, r5]
   29620:	ldr	r0, [r5, #12]
   29624:	bl	26c0c <rb_free>
   29628:	mov	r0, r4
   2962c:	bl	26ee8 <rb_strdup>
   29630:	str	r0, [r5, #12]
   29634:	pop	{r4, r5, fp, pc}
   29638:	.word	0x00031334

0002963c <conf_set_serverinfo_name>:
   2963c:	push	{r4, r5, r6, sl, fp, lr}
   29640:	add	fp, sp, #16
   29644:	mov	r4, r0
   29648:	ldr	r6, [pc, #192]	; 29710 <conf_set_serverinfo_name+0xd4>
   2964c:	ldr	r6, [pc, r6]
   29650:	ldr	r0, [r6]
   29654:	cmp	r0, #0
   29658:	beq	29660 <conf_set_serverinfo_name+0x24>
   2965c:	pop	{r4, r5, r6, sl, fp, pc}
   29660:	ldrb	r3, [r4]
   29664:	cmp	r3, #0
   29668:	beq	296e0 <conf_set_serverinfo_name+0xa4>
   2966c:	mov	r1, #0
   29670:	mov	r2, #1
   29674:	ldr	r0, [pc, #152]	; 29714 <conf_set_serverinfo_name+0xd8>
   29678:	ldr	r0, [pc, r0]
   2967c:	uxtb	r3, r3
   29680:	add	r5, r0, r3, lsl #2
   29684:	ldrh	r5, [r5]
   29688:	tst	r5, #8256	; 0x2040
   2968c:	beq	296f0 <conf_set_serverinfo_name+0xb4>
   29690:	cmp	r3, #46	; 0x2e
   29694:	addeq	r1, r1, #1
   29698:	ldrb	r3, [r4, r2]
   2969c:	add	r2, r2, #1
   296a0:	cmp	r3, #0
   296a4:	bne	2967c <conf_set_serverinfo_name+0x40>
   296a8:	cmp	r1, #0
   296ac:	beq	296e0 <conf_set_serverinfo_name+0xa4>
   296b0:	ldrb	r1, [r4]
   296b4:	ldrb	r0, [r0, r1, lsl #2]
   296b8:	tst	r0, #16
   296bc:	bne	29700 <conf_set_serverinfo_name+0xc4>
   296c0:	mov	r0, r4
   296c4:	bl	dc94 <strlen@plt>
   296c8:	cmp	r0, #63	; 0x3f
   296cc:	pophi	{r4, r5, r6, sl, fp, pc}
   296d0:	mov	r0, r4
   296d4:	bl	26ee8 <rb_strdup>
   296d8:	str	r0, [r6]
   296dc:	pop	{r4, r5, r6, sl, fp, pc}
   296e0:	ldr	r0, [pc, #52]	; 2971c <conf_set_serverinfo_name+0xe0>
   296e4:	add	r0, pc, r0
   296e8:	pop	{r4, r5, r6, sl, fp, lr}
   296ec:	b	26c18 <conf_report_error>
   296f0:	ldr	r0, [pc, #32]	; 29718 <conf_set_serverinfo_name+0xdc>
   296f4:	add	r0, pc, r0
   296f8:	pop	{r4, r5, r6, sl, fp, lr}
   296fc:	b	26c18 <conf_report_error>
   29700:	ldr	r0, [pc, #24]	; 29720 <conf_set_serverinfo_name+0xe4>
   29704:	add	r0, pc, r0
   29708:	pop	{r4, r5, r6, sl, fp, lr}
   2970c:	b	26c18 <conf_report_error>
   29710:	.word	0x00031304
   29714:	.word	0x00031380
   29718:	.word	0x0001a279
   2971c:	.word	0x0001a2b8
   29720:	.word	0x0001a2c6

00029724 <conf_set_serverinfo_sid>:
   29724:	mov	r1, r0
   29728:	ldr	r0, [pc, #112]	; 297a0 <conf_set_serverinfo_sid+0x7c>
   2972c:	ldr	r0, [pc, r0]
   29730:	ldrb	r2, [r0, #4]
   29734:	cmp	r2, #0
   29738:	bxne	lr
   2973c:	ldrb	r3, [r1]
   29740:	ldr	r2, [pc, #92]	; 297a4 <conf_set_serverinfo_sid+0x80>
   29744:	ldr	r2, [pc, r2]
   29748:	ldrb	r3, [r2, r3, lsl #2]
   2974c:	tst	r3, #16
   29750:	beq	29788 <conf_set_serverinfo_sid+0x64>
   29754:	ldrb	r3, [r1, #1]
   29758:	ldr	r3, [r2, r3, lsl #2]
   2975c:	movw	ip, #16
   29760:	movt	ip, #1
   29764:	tst	r3, ip
   29768:	beq	29788 <conf_set_serverinfo_sid+0x64>
   2976c:	ldrb	r3, [r1, #2]
   29770:	ldr	r2, [r2, r3, lsl #2]
   29774:	tst	r2, ip
   29778:	beq	29788 <conf_set_serverinfo_sid+0x64>
   2977c:	ldrb	r2, [r1, #3]
   29780:	cmp	r2, #0
   29784:	beq	29794 <conf_set_serverinfo_sid+0x70>
   29788:	ldr	r0, [pc, #24]	; 297a8 <conf_set_serverinfo_sid+0x84>
   2978c:	add	r0, pc, r0
   29790:	b	26c18 <conf_report_error>
   29794:	add	r0, r0, #4
   29798:	mov	r2, #4
   2979c:	b	e510 <rb_strlcpy@plt>
   297a0:	.word	0x00031224
   297a4:	.word	0x000312b4
   297a8:	.word	0x0001a274

000297ac <conf_set_serverinfo_vhost>:
   297ac:	push	{r4, sl, fp, lr}
   297b0:	add	fp, sp, #8
   297b4:	sub	sp, sp, #128	; 0x80
   297b8:	mov	r4, r0
   297bc:	mov	r1, sp
   297c0:	bl	e000 <rb_inet_pton_sock@plt>
   297c4:	cmp	r0, #1
   297c8:	blt	297f8 <conf_set_serverinfo_vhost+0x4c>
   297cc:	ldrh	r0, [sp]
   297d0:	cmp	r0, #2
   297d4:	bne	297f8 <conf_set_serverinfo_vhost+0x4c>
   297d8:	ldr	r0, [pc, #52]	; 29814 <conf_set_serverinfo_vhost+0x68>
   297dc:	ldr	r0, [pc, r0]
   297e0:	add	r0, r0, #20
   297e4:	mov	r1, sp
   297e8:	mov	r2, #128	; 0x80
   297ec:	bl	d40c <memcpy@plt>
   297f0:	sub	sp, fp, #8
   297f4:	pop	{r4, sl, fp, pc}
   297f8:	ldr	r0, [pc, #16]	; 29810 <conf_set_serverinfo_vhost+0x64>
   297fc:	add	r0, pc, r0
   29800:	mov	r1, r4
   29804:	bl	d400 <conf_report_error@plt>
   29808:	sub	sp, fp, #8
   2980c:	pop	{r4, sl, fp, pc}
   29810:	.word	0x0001a22b
   29814:	.word	0x00031174

00029818 <conf_set_serverinfo_vhost6>:
   29818:	push	{r4, sl, fp, lr}
   2981c:	add	fp, sp, #8
   29820:	sub	sp, sp, #128	; 0x80
   29824:	mov	r4, r0
   29828:	mov	r1, sp
   2982c:	bl	e000 <rb_inet_pton_sock@plt>
   29830:	cmp	r0, #1
   29834:	blt	29864 <conf_set_serverinfo_vhost6+0x4c>
   29838:	ldrh	r0, [sp]
   2983c:	cmp	r0, #10
   29840:	bne	29864 <conf_set_serverinfo_vhost6+0x4c>
   29844:	ldr	r0, [pc, #52]	; 29880 <conf_set_serverinfo_vhost6+0x68>
   29848:	ldr	r0, [pc, r0]
   2984c:	add	r0, r0, #148	; 0x94
   29850:	mov	r1, sp
   29854:	mov	r2, #128	; 0x80
   29858:	bl	d40c <memcpy@plt>
   2985c:	sub	sp, fp, #8
   29860:	pop	{r4, sl, fp, pc}
   29864:	ldr	r0, [pc, #16]	; 2987c <conf_set_serverinfo_vhost6+0x64>
   29868:	add	r0, pc, r0
   2986c:	mov	r1, r4
   29870:	bl	d400 <conf_report_error@plt>
   29874:	sub	sp, fp, #8
   29878:	pop	{r4, sl, fp, pc}
   2987c:	.word	0x0001a1ea
   29880:	.word	0x00031108

00029884 <conf_set_serverinfo_nicklen>:
   29884:	push	{r4, sl, fp, lr}
   29888:	add	fp, sp, #8
   2988c:	ldr	r1, [r0]
   29890:	add	r0, r1, #1
   29894:	ldr	r4, [pc, #72]	; 298e4 <conf_set_serverinfo_nicklen+0x60>
   29898:	ldr	r4, [pc, r4]
   2989c:	str	r0, [r4, #360]	; 0x168
   298a0:	cmp	r0, #33	; 0x21
   298a4:	bcc	298c4 <conf_set_serverinfo_nicklen+0x40>
   298a8:	ldr	r0, [pc, #56]	; 298e8 <conf_set_serverinfo_nicklen+0x64>
   298ac:	add	r0, pc, r0
   298b0:	mov	r2, #31
   298b4:	bl	d400 <conf_report_error@plt>
   298b8:	mov	r0, #32
   298bc:	str	r0, [r4, #360]	; 0x168
   298c0:	pop	{r4, sl, fp, pc}
   298c4:	cmp	r0, #9
   298c8:	pophi	{r4, sl, fp, pc}
   298cc:	ldr	r0, [pc, #24]	; 298ec <conf_set_serverinfo_nicklen+0x68>
   298d0:	add	r0, pc, r0
   298d4:	bl	d400 <conf_report_error@plt>
   298d8:	mov	r0, #10
   298dc:	str	r0, [r4, #360]	; 0x168
   298e0:	pop	{r4, sl, fp, pc}
   298e4:	.word	0x000312e4
   298e8:	.word	0x0001a1d1
   298ec:	.word	0x0001a213

000298f0 <rb_dlinkMoveNode>:
   298f0:	cmp	r0, #0
   298f4:	beq	29980 <rb_dlinkMoveNode+0x90>
   298f8:	ldr	ip, [pc, #168]	; 299a8 <rb_dlinkMoveNode+0xb8>
   298fc:	add	ip, pc, ip
   29900:	ldmib	r0, {r2, r3}
   29904:	add	r1, r3, #4
   29908:	cmp	r3, #0
   2990c:	addeq	r1, ip, #4
   29910:	str	r2, [r1]
   29914:	ldmib	r0, {r1, r2}
   29918:	cmp	r1, #0
   2991c:	mov	r3, ip
   29920:	addne	r3, r1, #8
   29924:	str	r2, [r3]
   29928:	mov	r1, #0
   2992c:	ldr	r2, [pc, #120]	; 299ac <rb_dlinkMoveNode+0xbc>
   29930:	ldr	r2, [pc, r2]
   29934:	ldr	r3, [r2]
   29938:	stmib	r0, {r1, r3}
   2993c:	cmp	r3, #0
   29940:	beq	29950 <rb_dlinkMoveNode+0x60>
   29944:	add	r3, r3, #4
   29948:	str	r0, [r3]
   2994c:	b	29960 <rb_dlinkMoveNode+0x70>
   29950:	mov	r3, r2
   29954:	ldr	r1, [r3, #4]!
   29958:	cmp	r1, #0
   2995c:	streq	r0, [r3]
   29960:	str	r0, [r2]
   29964:	ldr	r0, [ip, #8]
   29968:	sub	r0, r0, #1
   2996c:	str	r0, [ip, #8]
   29970:	ldr	r0, [r2, #8]
   29974:	add	r0, r0, #1
   29978:	str	r0, [r2, #8]
   2997c:	bx	lr
   29980:	push	{fp, lr}
   29984:	mov	fp, sp
   29988:	ldr	r0, [pc, #32]	; 299b0 <rb_dlinkMoveNode+0xc0>
   2998c:	add	r0, pc, r0
   29990:	ldr	r1, [pc, #28]	; 299b4 <rb_dlinkMoveNode+0xc4>
   29994:	add	r1, pc, r1
   29998:	ldr	r3, [pc, #24]	; 299b8 <rb_dlinkMoveNode+0xc8>
   2999c:	add	r3, pc, r3
   299a0:	mov	r2, #114	; 0x72
   299a4:	bl	e7e0 <__assert_fail@plt>
   299a8:	.word	0x0003c8a4
   299ac:	.word	0x00031080
   299b0:	.word	0x00016c20
   299b4:	.word	0x00016c22
   299b8:	.word	0x0001a303

000299bc <conf_set_oper_rsa_public_key_file>:
   299bc:	push	{r4, sl, fp, lr}
   299c0:	add	fp, sp, #8
   299c4:	mov	r4, r0
   299c8:	ldr	r0, [pc, #32]	; 299f0 <conf_set_oper_rsa_public_key_file+0x34>
   299cc:	ldr	r0, [pc, r0]
   299d0:	ldr	r0, [r0, #36]	; 0x24
   299d4:	bl	26c0c <rb_free>
   299d8:	mov	r0, r4
   299dc:	bl	26ee8 <rb_strdup>
   299e0:	ldr	r1, [pc, #12]	; 299f4 <conf_set_oper_rsa_public_key_file+0x38>
   299e4:	ldr	r1, [pc, r1]
   299e8:	str	r0, [r1, #36]	; 0x24
   299ec:	pop	{r4, sl, fp, pc}
   299f0:	.word	0x0003c7d0
   299f4:	.word	0x0003c7b8

000299f8 <conf_set_oper_flags>:
   299f8:	mov	r3, r0
   299fc:	ldr	r0, [pc, #24]	; 29a1c <conf_set_oper_flags+0x24>
   29a00:	ldr	r0, [pc, r0]
   29a04:	add	r0, r0, #20
   29a08:	ldr	r1, [pc, #16]	; 29a20 <conf_set_oper_flags+0x28>
   29a0c:	add	r1, pc, r1
   29a10:	ldr	r2, [pc, #12]	; 29a24 <conf_set_oper_flags+0x2c>
   29a14:	add	r2, pc, r2
   29a18:	b	29c10 <set_modes_from_table>
   29a1c:	.word	0x0003c79c
   29a20:	.word	0x0001d0ec
   29a24:	.word	0x00032d44

00029a28 <conf_set_oper_umodes>:
   29a28:	mov	r3, r0
   29a2c:	ldr	r0, [pc, #24]	; 29a4c <conf_set_oper_umodes+0x24>
   29a30:	ldr	r0, [pc, r0]
   29a34:	add	r0, r0, #24
   29a38:	ldr	r1, [pc, #16]	; 29a50 <conf_set_oper_umodes+0x28>
   29a3c:	add	r1, pc, r1
   29a40:	ldr	r2, [pc, #12]	; 29a54 <conf_set_oper_umodes+0x2c>
   29a44:	add	r2, pc, r2
   29a48:	b	29c10 <set_modes_from_table>
   29a4c:	.word	0x0003c76c
   29a50:	.word	0x0001a322
   29a54:	.word	0x00032d2c

00029a58 <conf_set_oper_privset>:
   29a58:	push	{fp, lr}
   29a5c:	mov	fp, sp
   29a60:	bl	d394 <privilegeset_get@plt>
   29a64:	ldr	r1, [pc, #8]	; 29a74 <conf_set_oper_privset+0x1c>
   29a68:	ldr	r1, [pc, r1]
   29a6c:	str	r0, [r1, #32]
   29a70:	pop	{fp, pc}
   29a74:	.word	0x0003c734

00029a78 <conf_set_oper_snomask>:
   29a78:	push	{fp, lr}
   29a7c:	mov	fp, sp
   29a80:	mov	r1, r0
   29a84:	mov	r0, #0
   29a88:	bl	de98 <parse_snobuf_to_mask@plt>
   29a8c:	ldr	r1, [pc, #8]	; 29a9c <conf_set_oper_snomask+0x24>
   29a90:	ldr	r1, [pc, r1]
   29a94:	str	r0, [r1, #28]
   29a98:	pop	{fp, pc}
   29a9c:	.word	0x0003c70c

00029aa0 <conf_set_oper_user>:
   29aa0:	push	{r4, r5, r6, sl, fp, lr}
   29aa4:	add	fp, sp, #16
   29aa8:	mov	r5, r0
   29aac:	bl	d190 <make_oper_conf@plt>
   29ab0:	mov	r4, r0
   29ab4:	mov	r0, r5
   29ab8:	mov	r1, #64	; 0x40
   29abc:	bl	dce8 <strchr@plt>
   29ac0:	cmp	r0, #0
   29ac4:	beq	29ae8 <conf_set_oper_user+0x48>
   29ac8:	mov	r6, r0
   29acc:	mov	r0, #0
   29ad0:	strb	r0, [r6], #1
   29ad4:	mov	r0, r5
   29ad8:	bl	26ee8 <rb_strdup>
   29adc:	str	r0, [r4, #4]
   29ae0:	mov	r0, r6
   29ae4:	b	29afc <conf_set_oper_user+0x5c>
   29ae8:	ldr	r0, [pc, #116]	; 29b64 <conf_set_oper_user+0xc4>
   29aec:	add	r0, pc, r0
   29af0:	bl	26ee8 <rb_strdup>
   29af4:	str	r0, [r4, #4]
   29af8:	mov	r0, r5
   29afc:	bl	26ee8 <rb_strdup>
   29b00:	str	r0, [r4, #8]
   29b04:	ldr	r0, [r4, #4]
   29b08:	cmp	r0, #0
   29b0c:	beq	29b24 <conf_set_oper_user+0x84>
   29b10:	ldrb	r0, [r0]
   29b14:	cmp	r0, #0
   29b18:	ldrne	r0, [r4, #8]
   29b1c:	cmpne	r0, #0
   29b20:	bne	29b3c <conf_set_oper_user+0x9c>
   29b24:	ldr	r0, [pc, #60]	; 29b68 <conf_set_oper_user+0xc8>
   29b28:	add	r0, pc, r0
   29b2c:	bl	d400 <conf_report_error@plt>
   29b30:	mov	r0, r4
   29b34:	pop	{r4, r5, r6, sl, fp, lr}
   29b38:	b	d9d0 <free_oper_conf@plt>
   29b3c:	ldrb	r0, [r0]
   29b40:	cmp	r0, #0
   29b44:	beq	29b24 <conf_set_oper_user+0x84>
   29b48:	bl	dc64 <rb_make_rb_dlink_node@plt>
   29b4c:	mov	r1, r0
   29b50:	ldr	r2, [pc, #20]	; 29b6c <conf_set_oper_user+0xcc>
   29b54:	add	r2, pc, r2
   29b58:	mov	r0, r4
   29b5c:	pop	{r4, r5, r6, sl, fp, lr}
   29b60:	b	26850 <rb_dlinkAdd>
   29b64:	.word	0x00017851
   29b68:	.word	0x0001a263
   29b6c:	.word	0x0003c64c

00029b70 <conf_set_oper_password>:
   29b70:	push	{r4, r5, r6, sl, fp, lr}
   29b74:	add	fp, sp, #16
   29b78:	mov	r4, r0
   29b7c:	ldr	r6, [pc, #68]	; 29bc8 <conf_set_oper_password+0x58>
   29b80:	ldr	r6, [pc, r6]
   29b84:	ldr	r5, [r6, #12]
   29b88:	cmp	r5, #0
   29b8c:	beq	29bb0 <conf_set_oper_password+0x40>
   29b90:	mov	r0, r5
   29b94:	bl	dc94 <strlen@plt>
   29b98:	mov	r2, r0
   29b9c:	mov	r0, r5
   29ba0:	mov	r1, #0
   29ba4:	bl	df28 <memset@plt>
   29ba8:	ldr	r0, [r6, #12]
   29bac:	bl	26c0c <rb_free>
   29bb0:	mov	r0, r4
   29bb4:	bl	26ee8 <rb_strdup>
   29bb8:	ldr	r1, [pc, #12]	; 29bcc <conf_set_oper_password+0x5c>
   29bbc:	ldr	r1, [pc, r1]
   29bc0:	str	r0, [r1, #12]
   29bc4:	pop	{r4, r5, r6, sl, fp, pc}
   29bc8:	.word	0x0003c61c
   29bcc:	.word	0x0003c5e0

00029bd0 <conf_set_oper_fingerprint>:
   29bd0:	push	{r4, sl, fp, lr}
   29bd4:	add	fp, sp, #8
   29bd8:	mov	r4, r0
   29bdc:	ldr	r0, [pc, #36]	; 29c08 <conf_set_oper_fingerprint+0x38>
   29be0:	ldr	r0, [pc, r0]
   29be4:	ldr	r0, [r0, #16]
   29be8:	cmp	r0, #0
   29bec:	blne	26c0c <rb_free>
   29bf0:	mov	r0, r4
   29bf4:	bl	26ee8 <rb_strdup>
   29bf8:	ldr	r1, [pc, #12]	; 29c0c <conf_set_oper_fingerprint+0x3c>
   29bfc:	ldr	r1, [pc, r1]
   29c00:	str	r0, [r1, #16]
   29c04:	pop	{r4, sl, fp, pc}
   29c08:	.word	0x0003c5bc
   29c0c:	.word	0x0003c5a0

00029c10 <set_modes_from_table>:
   29c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29c14:	add	fp, sp, #28
   29c18:	sub	sp, sp, #4
   29c1c:	cmp	r3, #0
   29c20:	beq	29cc4 <set_modes_from_table+0xb4>
   29c24:	mov	r4, r3
   29c28:	mov	sl, r2
   29c2c:	mov	r6, r1
   29c30:	mov	r7, r0
   29c34:	ldr	r9, [pc, #144]	; 29ccc <set_modes_from_table+0xbc>
   29c38:	add	r9, pc, r9
   29c3c:	ldrb	r0, [r4, #4]
   29c40:	cmp	r0, #3
   29c44:	bne	29c8c <set_modes_from_table+0x7c>
   29c48:	ldr	r5, [r4, #8]
   29c4c:	mov	r1, r5
   29c50:	ldrb	r8, [r1], #1
   29c54:	cmp	r8, #126	; 0x7e
   29c58:	movne	r1, r5
   29c5c:	mov	r0, sl
   29c60:	bl	29cd4 <find_umode>
   29c64:	cmp	r0, #0
   29c68:	beq	29c9c <set_modes_from_table+0x8c>
   29c6c:	cmn	r0, #1
   29c70:	bne	29ca4 <set_modes_from_table+0x94>
   29c74:	ldr	r0, [pc, #84]	; 29cd0 <set_modes_from_table+0xc0>
   29c78:	add	r0, pc, r0
   29c7c:	mov	r1, r6
   29c80:	mov	r2, r5
   29c84:	bl	d400 <conf_report_error@plt>
   29c88:	b	29cb8 <set_modes_from_table+0xa8>
   29c8c:	mov	r0, r9
   29c90:	mov	r1, r6
   29c94:	bl	d400 <conf_report_error@plt>
   29c98:	b	29cb8 <set_modes_from_table+0xa8>
   29c9c:	mov	r0, #0
   29ca0:	b	29cb4 <set_modes_from_table+0xa4>
   29ca4:	cmp	r8, #126	; 0x7e
   29ca8:	ldr	r1, [r7]
   29cac:	biceq	r0, r1, r0
   29cb0:	orrne	r0, r1, r0
   29cb4:	str	r0, [r7]
   29cb8:	ldr	r4, [r4]
   29cbc:	cmp	r4, #0
   29cc0:	bne	29c3c <set_modes_from_table+0x2c>
   29cc4:	sub	sp, fp, #28
   29cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ccc:	.word	0x0001a0d0
   29cd0:	.word	0x0001a0b9

00029cd4 <find_umode>:
   29cd4:	push	{r4, r5, r6, sl, fp, lr}
   29cd8:	add	fp, sp, #16
   29cdc:	mov	r5, r1
   29ce0:	mov	r1, r0
   29ce4:	ldr	r0, [r0]
   29ce8:	mvn	r4, #0
   29cec:	cmp	r0, #0
   29cf0:	beq	29d1c <find_umode+0x48>
   29cf4:	add	r6, r1, #4
   29cf8:	mov	r1, r5
   29cfc:	bl	d0c4 <strcmp@plt>
   29d00:	cmp	r0, #0
   29d04:	beq	29d24 <find_umode+0x50>
   29d08:	add	r1, r6, #8
   29d0c:	ldr	r0, [r6, #4]
   29d10:	cmp	r0, #0
   29d14:	mov	r6, r1
   29d18:	bne	29cf8 <find_umode+0x24>
   29d1c:	mov	r0, r4
   29d20:	pop	{r4, r5, r6, sl, fp, pc}
   29d24:	ldr	r4, [r6]
   29d28:	mov	r0, r4
   29d2c:	pop	{r4, r5, r6, sl, fp, pc}

00029d30 <conf_set_class_ping_time>:
   29d30:	ldr	r0, [r0]
   29d34:	ldr	r1, [pc, #8]	; 29d44 <conf_set_class_ping_time+0x14>
   29d38:	ldr	r1, [pc, r1]
   29d3c:	str	r0, [r1, #32]
   29d40:	bx	lr
   29d44:	.word	0x0003c474

00029d48 <conf_set_class_cidr_ipv4_bitlen>:
   29d48:	ldr	r1, [r0]
   29d4c:	cmp	r1, #33	; 0x21
   29d50:	ldrcc	r0, [pc, #24]	; 29d70 <conf_set_class_cidr_ipv4_bitlen+0x28>
   29d54:	ldrcc	r0, [pc, r0]
   29d58:	strcc	r1, [r0, #44]	; 0x2c
   29d5c:	bxcc	lr
   29d60:	ldr	r0, [pc, #12]	; 29d74 <conf_set_class_cidr_ipv4_bitlen+0x2c>
   29d64:	add	r0, pc, r0
   29d68:	mov	r2, #32
   29d6c:	b	26c18 <conf_report_error>
   29d70:	.word	0x0003c458
   29d74:	.word	0x0001a103

00029d78 <conf_set_class_cidr_ipv6_bitlen>:
   29d78:	ldr	r1, [r0]
   29d7c:	cmp	r1, #129	; 0x81
   29d80:	ldrcc	r0, [pc, #24]	; 29da0 <conf_set_class_cidr_ipv6_bitlen+0x28>
   29d84:	ldrcc	r0, [pc, r0]
   29d88:	strcc	r1, [r0, #48]	; 0x30
   29d8c:	bxcc	lr
   29d90:	ldr	r0, [pc, #12]	; 29da4 <conf_set_class_cidr_ipv6_bitlen+0x2c>
   29d94:	add	r0, pc, r0
   29d98:	mov	r2, #128	; 0x80
   29d9c:	b	26c18 <conf_report_error>
   29da0:	.word	0x0003c428
   29da4:	.word	0x0001a11a

00029da8 <conf_set_class_number_per_cidr>:
   29da8:	ldr	r0, [r0]
   29dac:	ldr	r1, [pc, #8]	; 29dbc <conf_set_class_number_per_cidr+0x14>
   29db0:	ldr	r1, [pc, r1]
   29db4:	str	r0, [r1, #52]	; 0x34
   29db8:	bx	lr
   29dbc:	.word	0x0003c3fc

00029dc0 <conf_set_class_number_per_ip>:
   29dc0:	ldr	r0, [r0]
   29dc4:	ldr	r1, [pc, #8]	; 29dd4 <conf_set_class_number_per_ip+0x14>
   29dc8:	ldr	r1, [pc, r1]
   29dcc:	str	r0, [r1, #12]
   29dd0:	bx	lr
   29dd4:	.word	0x0003c3e4

00029dd8 <conf_set_class_number_per_ip_global>:
   29dd8:	ldr	r0, [r0]
   29ddc:	ldr	r1, [pc, #8]	; 29dec <conf_set_class_number_per_ip_global+0x14>
   29de0:	ldr	r1, [pc, r1]
   29de4:	str	r0, [r1, #16]
   29de8:	bx	lr
   29dec:	.word	0x0003c3cc

00029df0 <conf_set_class_number_per_ident>:
   29df0:	ldr	r0, [r0]
   29df4:	ldr	r1, [pc, #8]	; 29e04 <conf_set_class_number_per_ident+0x14>
   29df8:	ldr	r1, [pc, r1]
   29dfc:	str	r0, [r1, #20]
   29e00:	bx	lr
   29e04:	.word	0x0003c3b4

00029e08 <conf_set_class_connectfreq>:
   29e08:	ldr	r0, [r0]
   29e0c:	ldr	r1, [pc, #8]	; 29e1c <conf_set_class_connectfreq+0x14>
   29e10:	ldr	r1, [pc, r1]
   29e14:	str	r0, [r1, #28]
   29e18:	bx	lr
   29e1c:	.word	0x0003c39c

00029e20 <conf_set_class_max_number>:
   29e20:	ldr	r0, [r0]
   29e24:	ldr	r1, [pc, #8]	; 29e34 <conf_set_class_max_number+0x14>
   29e28:	ldr	r1, [pc, r1]
   29e2c:	str	r0, [r1, #8]
   29e30:	bx	lr
   29e34:	.word	0x0003c384

00029e38 <conf_set_class_sendq>:
   29e38:	ldr	r0, [r0]
   29e3c:	ldr	r1, [pc, #8]	; 29e4c <conf_set_class_sendq+0x14>
   29e40:	ldr	r1, [pc, r1]
   29e44:	str	r0, [r1, #24]
   29e48:	bx	lr
   29e4c:	.word	0x0003c36c

00029e50 <conf_set_privset_extends>:
   29e50:	push	{fp, lr}
   29e54:	mov	fp, sp
   29e58:	bl	26ee8 <rb_strdup>
   29e5c:	ldr	r1, [pc, #8]	; 29e6c <conf_set_privset_extends+0x1c>
   29e60:	add	r1, pc, r1
   29e64:	str	r0, [r1]
   29e68:	pop	{fp, pc}
   29e6c:	.word	0x0003c350

00029e70 <conf_set_privset_privs>:
   29e70:	push	{r4, r5, r6, r7, fp, lr}
   29e74:	add	fp, sp, #16
   29e78:	cmp	r0, #0
   29e7c:	beq	29fa0 <conf_set_privset_privs+0x130>
   29e80:	mov	r5, r0
   29e84:	mov	r4, #0
   29e88:	mov	r0, #1
   29e8c:	mov	r7, #32
   29e90:	tst	r0, #1
   29e94:	beq	29ea8 <conf_set_privset_privs+0x38>
   29e98:	ldr	r0, [r5, #8]
   29e9c:	bl	26ee8 <rb_strdup>
   29ea0:	mov	r4, r0
   29ea4:	b	29efc <conf_set_privset_privs+0x8c>
   29ea8:	mov	r0, r4
   29eac:	bl	dc94 <strlen@plt>
   29eb0:	mov	r6, r0
   29eb4:	ldr	r0, [r5, #8]
   29eb8:	bl	dc94 <strlen@plt>
   29ebc:	add	r0, r6, r0
   29ec0:	add	r0, r0, #2
   29ec4:	bl	26830 <rb_malloc>
   29ec8:	mov	r6, r0
   29ecc:	mov	r1, r4
   29ed0:	bl	d928 <strcpy@plt>
   29ed4:	mov	r0, r6
   29ed8:	bl	dc94 <strlen@plt>
   29edc:	add	r0, r6, r0
   29ee0:	strh	r7, [r0]
   29ee4:	ldr	r1, [r5, #8]
   29ee8:	mov	r0, r6
   29eec:	bl	d8bc <strcat@plt>
   29ef0:	mov	r0, r4
   29ef4:	bl	26c0c <rb_free>
   29ef8:	mov	r4, r6
   29efc:	ldr	r5, [r5]
   29f00:	clz	r0, r4
   29f04:	lsr	r0, r0, #5
   29f08:	cmp	r5, #0
   29f0c:	bne	29e90 <conf_set_privset_privs+0x20>
   29f10:	cmp	r4, #0
   29f14:	popeq	{r4, r5, r6, r7, fp, pc}
   29f18:	ldr	r0, [pc, #180]	; 29fd4 <conf_set_privset_privs+0x164>
   29f1c:	ldr	r0, [pc, r0]
   29f20:	cmp	r0, #0
   29f24:	beq	29fa4 <conf_set_privset_privs+0x134>
   29f28:	bl	d394 <privilegeset_get@plt>
   29f2c:	cmp	r0, #0
   29f30:	bne	29f5c <conf_set_privset_privs+0xec>
   29f34:	ldr	r2, [pc, #156]	; 29fd8 <conf_set_privset_privs+0x168>
   29f38:	ldr	r2, [pc, r2]
   29f3c:	ldr	r1, [pc, #152]	; 29fdc <conf_set_privset_privs+0x16c>
   29f40:	ldr	r1, [pc, r1]
   29f44:	ldr	r0, [pc, #148]	; 29fe0 <conf_set_privset_privs+0x170>
   29f48:	add	r0, pc, r0
   29f4c:	bl	d400 <conf_report_error@plt>
   29f50:	ldr	r0, [pc, #140]	; 29fe4 <conf_set_privset_privs+0x174>
   29f54:	add	r0, pc, r0
   29f58:	bl	d394 <privilegeset_get@plt>
   29f5c:	ldr	r2, [pc, #132]	; 29fe8 <conf_set_privset_privs+0x178>
   29f60:	ldr	r2, [pc, r2]
   29f64:	ldr	r1, [pc, #128]	; 29fec <conf_set_privset_privs+0x17c>
   29f68:	add	r1, pc, r1
   29f6c:	cmp	r2, #0
   29f70:	movne	r1, r2
   29f74:	mov	r5, #0
   29f78:	mov	r2, r4
   29f7c:	mov	r3, #0
   29f80:	bl	dbe0 <privilegeset_extend@plt>
   29f84:	ldr	r0, [pc, #100]	; 29ff0 <conf_set_privset_privs+0x180>
   29f88:	ldr	r0, [pc, r0]
   29f8c:	bl	26c0c <rb_free>
   29f90:	ldr	r0, [pc, #92]	; 29ff4 <conf_set_privset_privs+0x184>
   29f94:	add	r0, pc, r0
   29f98:	str	r5, [r0]
   29f9c:	b	29fc8 <conf_set_privset_privs+0x158>
   29fa0:	pop	{r4, r5, r6, r7, fp, pc}
   29fa4:	ldr	r1, [pc, #76]	; 29ff8 <conf_set_privset_privs+0x188>
   29fa8:	ldr	r1, [pc, r1]
   29fac:	ldr	r0, [pc, #72]	; 29ffc <conf_set_privset_privs+0x18c>
   29fb0:	add	r0, pc, r0
   29fb4:	cmp	r1, #0
   29fb8:	movne	r0, r1
   29fbc:	mov	r1, r4
   29fc0:	mov	r2, #0
   29fc4:	bl	d778 <privilegeset_set_new@plt>
   29fc8:	mov	r0, r4
   29fcc:	pop	{r4, r5, r6, r7, fp, lr}
   29fd0:	b	26c0c <rb_free>
   29fd4:	.word	0x0003c294
   29fd8:	.word	0x0003c260
   29fdc:	.word	0x0003c270
   29fe0:	.word	0x00019fb5
   29fe4:	.word	0x000170c0
   29fe8:	.word	0x0003c238
   29fec:	.word	0x00019fda
   29ff0:	.word	0x0003c228
   29ff4:	.word	0x0003c21c
   29ff8:	.word	0x0003c1f0
   29ffc:	.word	0x00019f92

0002a000 <conf_set_listen_port_both>:
   2a000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a004:	add	fp, sp, #28
   2a008:	sub	sp, sp, #12
   2a00c:	cmp	r0, #0
   2a010:	beq	2a138 <conf_set_listen_port_both+0x138>
   2a014:	mov	r4, r2
   2a018:	mov	r5, r1
   2a01c:	mov	r6, r0
   2a020:	ldr	r8, [pc, #280]	; 2a140 <conf_set_listen_port_both+0x140>
   2a024:	add	r8, pc, r8
   2a028:	ldr	r9, [pc, #276]	; 2a144 <conf_set_listen_port_both+0x144>
   2a02c:	add	r9, pc, r9
   2a030:	ldr	sl, [pc, #272]	; 2a148 <conf_set_listen_port_both+0x148>
   2a034:	add	sl, pc, sl
   2a038:	ldrb	r0, [r6, #4]
   2a03c:	cmp	r0, #2
   2a040:	bne	2a068 <conf_set_listen_port_both+0x68>
   2a044:	ldr	r7, [pc, #256]	; 2a14c <conf_set_listen_port_both+0x14c>
   2a048:	ldr	r7, [pc, r7]
   2a04c:	cmp	r7, #0
   2a050:	beq	2a074 <conf_set_listen_port_both+0x74>
   2a054:	cmp	r4, #0
   2a058:	beq	2a088 <conf_set_listen_port_both+0x88>
   2a05c:	mov	r0, r9
   2a060:	bl	d400 <conf_report_error@plt>
   2a064:	b	2a12c <conf_set_listen_port_both+0x12c>
   2a068:	mov	r0, sl
   2a06c:	bl	d400 <conf_report_error@plt>
   2a070:	b	2a12c <conf_set_listen_port_both+0x12c>
   2a074:	cmp	r4, #0
   2a078:	beq	2a0cc <conf_set_listen_port_both+0xcc>
   2a07c:	mov	r0, r8
   2a080:	bl	d400 <conf_report_error@plt>
   2a084:	b	2a12c <conf_set_listen_port_both+0x12c>
   2a088:	mov	r0, r7
   2a08c:	mov	r1, #58	; 0x3a
   2a090:	bl	dce8 <strchr@plt>
   2a094:	ldr	r1, [r6, #8]
   2a098:	ldr	r2, [pc, #192]	; 2a160 <conf_set_listen_port_both+0x160>
   2a09c:	ldr	r2, [pc, r2]
   2a0a0:	ldr	r3, [pc, #188]	; 2a164 <conf_set_listen_port_both+0x164>
   2a0a4:	ldr	r3, [pc, r3]
   2a0a8:	orrs	r2, r2, r5
   2a0ac:	movwne	r2, #1
   2a0b0:	stm	sp, {r2, r3}
   2a0b4:	cmp	r0, #0
   2a0b8:	mov	r2, #10
   2a0bc:	movweq	r2, #2
   2a0c0:	mov	r0, r1
   2a0c4:	mov	r1, r7
   2a0c8:	b	2a124 <conf_set_listen_port_both+0x124>
   2a0cc:	ldr	r0, [r6, #8]
   2a0d0:	ldr	r1, [pc, #120]	; 2a150 <conf_set_listen_port_both+0x150>
   2a0d4:	ldr	r1, [pc, r1]
   2a0d8:	ldr	r2, [pc, #116]	; 2a154 <conf_set_listen_port_both+0x154>
   2a0dc:	ldr	r2, [pc, r2]
   2a0e0:	orrs	r1, r1, r5
   2a0e4:	movwne	r1, #1
   2a0e8:	stm	sp, {r1, r2}
   2a0ec:	mov	r1, #0
   2a0f0:	mov	r2, #2
   2a0f4:	mov	r3, r5
   2a0f8:	bl	e330 <add_tcp_listener@plt>
   2a0fc:	ldr	r0, [r6, #8]
   2a100:	ldr	r1, [pc, #80]	; 2a158 <conf_set_listen_port_both+0x158>
   2a104:	ldr	r1, [pc, r1]
   2a108:	ldr	r2, [pc, #76]	; 2a15c <conf_set_listen_port_both+0x15c>
   2a10c:	ldr	r2, [pc, r2]
   2a110:	orrs	r1, r1, r5
   2a114:	movwne	r1, #1
   2a118:	stm	sp, {r1, r2}
   2a11c:	mov	r1, #0
   2a120:	mov	r2, #10
   2a124:	mov	r3, r5
   2a128:	bl	e330 <add_tcp_listener@plt>
   2a12c:	ldr	r6, [r6]
   2a130:	cmp	r6, #0
   2a134:	bne	2a038 <conf_set_listen_port_both+0x38>
   2a138:	sub	sp, fp, #28
   2a13c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a140:	.word	0x00019f5f
   2a144:	.word	0x00019f89
   2a148:	.word	0x00019f18
   2a14c:	.word	0x0003c16c
   2a150:	.word	0x000326dc
   2a154:	.word	0x0003c0e0
   2a158:	.word	0x000326ac
   2a15c:	.word	0x0003c0b0
   2a160:	.word	0x00032714
   2a164:	.word	0x0003c118

0002a168 <conf_set_auth_user>:
   2a168:	push	{r4, r5, r6, sl, fp, lr}
   2a16c:	add	fp, sp, #16
   2a170:	mov	r5, r0
   2a174:	ldr	r4, [pc, #160]	; 2a21c <conf_set_auth_user+0xb4>
   2a178:	ldr	r4, [pc, r4]
   2a17c:	ldr	r0, [r4, #16]
   2a180:	cmp	r0, #0
   2a184:	ldrbne	r0, [r0]
   2a188:	cmpne	r0, #0
   2a18c:	beq	2a1a0 <conf_set_auth_user+0x38>
   2a190:	bl	cfbc <make_conf@plt>
   2a194:	mov	r4, r0
   2a198:	mov	r0, #2
   2a19c:	str	r0, [r4]
   2a1a0:	mov	r0, r5
   2a1a4:	mov	r1, #64	; 0x40
   2a1a8:	bl	dce8 <strchr@plt>
   2a1ac:	cmp	r0, #0
   2a1b0:	beq	2a1d4 <conf_set_auth_user+0x6c>
   2a1b4:	mov	r6, r0
   2a1b8:	mov	r0, #0
   2a1bc:	strb	r0, [r6], #1
   2a1c0:	mov	r0, r5
   2a1c4:	bl	26ee8 <rb_strdup>
   2a1c8:	str	r0, [r4, #28]
   2a1cc:	mov	r0, r6
   2a1d0:	b	2a1e8 <conf_set_auth_user+0x80>
   2a1d4:	ldr	r0, [pc, #68]	; 2a220 <conf_set_auth_user+0xb8>
   2a1d8:	add	r0, pc, r0
   2a1dc:	bl	26ee8 <rb_strdup>
   2a1e0:	str	r0, [r4, #28]
   2a1e4:	mov	r0, r5
   2a1e8:	bl	26ee8 <rb_strdup>
   2a1ec:	str	r0, [r4, #16]
   2a1f0:	ldr	r0, [pc, #44]	; 2a224 <conf_set_auth_user+0xbc>
   2a1f4:	ldr	r0, [pc, r0]
   2a1f8:	cmp	r0, r4
   2a1fc:	popeq	{r4, r5, r6, sl, fp, pc}
   2a200:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2a204:	mov	r1, r0
   2a208:	ldr	r2, [pc, #24]	; 2a228 <conf_set_auth_user+0xc0>
   2a20c:	add	r2, pc, r2
   2a210:	mov	r0, r4
   2a214:	pop	{r4, r5, r6, sl, fp, lr}
   2a218:	b	26850 <rb_dlinkAdd>
   2a21c:	.word	0x0003c048
   2a220:	.word	0x00017165
   2a224:	.word	0x0003bfcc
   2a228:	.word	0x0003bfb8

0002a22c <conf_set_auth_auth_user>:
   2a22c:	push	{r4, r5, r6, sl, fp, lr}
   2a230:	add	fp, sp, #16
   2a234:	mov	r4, r0
   2a238:	ldr	r6, [pc, #68]	; 2a284 <conf_set_auth_auth_user+0x58>
   2a23c:	ldr	r6, [pc, r6]
   2a240:	ldr	r5, [r6, #24]
   2a244:	cmp	r5, #0
   2a248:	beq	2a264 <conf_set_auth_auth_user+0x38>
   2a24c:	mov	r0, r5
   2a250:	bl	dc94 <strlen@plt>
   2a254:	mov	r2, r0
   2a258:	mov	r0, r5
   2a25c:	mov	r1, #0
   2a260:	bl	df28 <memset@plt>
   2a264:	ldr	r0, [r6, #24]
   2a268:	bl	26c0c <rb_free>
   2a26c:	mov	r0, r4
   2a270:	bl	26ee8 <rb_strdup>
   2a274:	ldr	r1, [pc, #12]	; 2a288 <conf_set_auth_auth_user+0x5c>
   2a278:	ldr	r1, [pc, r1]
   2a27c:	str	r0, [r1, #24]
   2a280:	pop	{r4, r5, r6, sl, fp, pc}
   2a284:	.word	0x0003bf84
   2a288:	.word	0x0003bf48

0002a28c <conf_set_auth_passwd>:
   2a28c:	push	{r4, r5, r6, sl, fp, lr}
   2a290:	add	fp, sp, #16
   2a294:	mov	r4, r0
   2a298:	ldr	r6, [pc, #68]	; 2a2e4 <conf_set_auth_passwd+0x58>
   2a29c:	ldr	r6, [pc, r6]
   2a2a0:	ldr	r5, [r6, #20]
   2a2a4:	cmp	r5, #0
   2a2a8:	beq	2a2c4 <conf_set_auth_passwd+0x38>
   2a2ac:	mov	r0, r5
   2a2b0:	bl	dc94 <strlen@plt>
   2a2b4:	mov	r2, r0
   2a2b8:	mov	r0, r5
   2a2bc:	mov	r1, #0
   2a2c0:	bl	df28 <memset@plt>
   2a2c4:	ldr	r0, [r6, #20]
   2a2c8:	bl	26c0c <rb_free>
   2a2cc:	mov	r0, r4
   2a2d0:	bl	26ee8 <rb_strdup>
   2a2d4:	ldr	r1, [pc, #12]	; 2a2e8 <conf_set_auth_passwd+0x5c>
   2a2d8:	ldr	r1, [pc, r1]
   2a2dc:	str	r0, [r1, #20]
   2a2e0:	pop	{r4, r5, r6, sl, fp, pc}
   2a2e4:	.word	0x0003bf24
   2a2e8:	.word	0x0003bee8

0002a2ec <conf_set_auth_class>:
   2a2ec:	push	{r4, sl, fp, lr}
   2a2f0:	add	fp, sp, #8
   2a2f4:	mov	r4, r0
   2a2f8:	ldr	r0, [pc, #32]	; 2a320 <conf_set_auth_class+0x34>
   2a2fc:	ldr	r0, [pc, r0]
   2a300:	ldr	r0, [r0, #48]	; 0x30
   2a304:	bl	26c0c <rb_free>
   2a308:	mov	r0, r4
   2a30c:	bl	26ee8 <rb_strdup>
   2a310:	ldr	r1, [pc, #12]	; 2a324 <conf_set_auth_class+0x38>
   2a314:	ldr	r1, [pc, r1]
   2a318:	str	r0, [r1, #48]	; 0x30
   2a31c:	pop	{r4, sl, fp, pc}
   2a320:	.word	0x0003bec4
   2a324:	.word	0x0003beac

0002a328 <conf_set_auth_spoof>:
   2a328:	push	{r4, r5, r6, sl, fp, lr}
   2a32c:	add	fp, sp, #16
   2a330:	mov	r4, r0
   2a334:	mov	r1, #64	; 0x40
   2a338:	bl	dce8 <strchr@plt>
   2a33c:	cmp	r0, #0
   2a340:	beq	2a374 <conf_set_auth_spoof+0x4c>
   2a344:	mov	r6, r0
   2a348:	mov	r0, #0
   2a34c:	mov	r5, r6
   2a350:	strb	r0, [r5], #1
   2a354:	cmp	r4, #0
   2a358:	ldrbne	r0, [r4]
   2a35c:	cmpne	r0, #0
   2a360:	bne	2a3bc <conf_set_auth_spoof+0x94>
   2a364:	ldr	r0, [pc, #248]	; 2a464 <conf_set_auth_spoof+0x13c>
   2a368:	add	r0, pc, r0
   2a36c:	pop	{r4, r5, r6, sl, fp, lr}
   2a370:	b	26c18 <conf_report_error>
   2a374:	cmp	r4, #0
   2a378:	mov	r5, r4
   2a37c:	beq	2a3ac <conf_set_auth_spoof+0x84>
   2a380:	ldrb	r0, [r5]
   2a384:	cmp	r0, #0
   2a388:	beq	2a3ac <conf_set_auth_spoof+0x84>
   2a38c:	mov	r0, r5
   2a390:	bl	dc94 <strlen@plt>
   2a394:	cmp	r0, #64	; 0x40
   2a398:	bcc	2a3f8 <conf_set_auth_spoof+0xd0>
   2a39c:	ldr	r0, [pc, #208]	; 2a474 <conf_set_auth_spoof+0x14c>
   2a3a0:	add	r0, pc, r0
   2a3a4:	pop	{r4, r5, r6, sl, fp, lr}
   2a3a8:	b	26c18 <conf_report_error>
   2a3ac:	ldr	r0, [pc, #188]	; 2a470 <conf_set_auth_spoof+0x148>
   2a3b0:	add	r0, pc, r0
   2a3b4:	pop	{r4, r5, r6, sl, fp, lr}
   2a3b8:	b	26c18 <conf_report_error>
   2a3bc:	mov	r0, r4
   2a3c0:	bl	dc94 <strlen@plt>
   2a3c4:	cmp	r0, #11
   2a3c8:	bcc	2a3dc <conf_set_auth_spoof+0xb4>
   2a3cc:	ldr	r0, [pc, #148]	; 2a468 <conf_set_auth_spoof+0x140>
   2a3d0:	add	r0, pc, r0
   2a3d4:	pop	{r4, r5, r6, sl, fp, lr}
   2a3d8:	b	26c18 <conf_report_error>
   2a3dc:	mov	r0, r4
   2a3e0:	bl	e078 <valid_username@plt>
   2a3e4:	cmp	r0, #0
   2a3e8:	beq	2a43c <conf_set_auth_spoof+0x114>
   2a3ec:	mov	r0, #64	; 0x40
   2a3f0:	strb	r0, [r6]
   2a3f4:	b	2a380 <conf_set_auth_spoof+0x58>
   2a3f8:	mov	r0, r5
   2a3fc:	bl	e084 <valid_hostname@plt>
   2a400:	cmp	r0, #0
   2a404:	beq	2a44c <conf_set_auth_spoof+0x124>
   2a408:	ldr	r0, [pc, #76]	; 2a45c <conf_set_auth_spoof+0x134>
   2a40c:	ldr	r0, [pc, r0]
   2a410:	ldr	r0, [r0, #12]
   2a414:	bl	26c0c <rb_free>
   2a418:	mov	r0, r4
   2a41c:	bl	26ee8 <rb_strdup>
   2a420:	ldr	r1, [pc, #56]	; 2a460 <conf_set_auth_spoof+0x138>
   2a424:	ldr	r1, [pc, r1]
   2a428:	str	r0, [r1, #12]
   2a42c:	ldr	r0, [r1, #4]
   2a430:	orr	r0, r0, #512	; 0x200
   2a434:	str	r0, [r1, #4]
   2a438:	pop	{r4, r5, r6, sl, fp, pc}
   2a43c:	ldr	r0, [pc, #40]	; 2a46c <conf_set_auth_spoof+0x144>
   2a440:	add	r0, pc, r0
   2a444:	pop	{r4, r5, r6, sl, fp, lr}
   2a448:	b	26c18 <conf_report_error>
   2a44c:	ldr	r0, [pc, #36]	; 2a478 <conf_set_auth_spoof+0x150>
   2a450:	add	r0, pc, r0
   2a454:	pop	{r4, r5, r6, sl, fp, lr}
   2a458:	b	26c18 <conf_report_error>
   2a45c:	.word	0x0003bdb4
   2a460:	.word	0x0003bd9c
   2a464:	.word	0x00019d3b
   2a468:	.word	0x00019cf1
   2a46c:	.word	0x00019ca8
   2a470:	.word	0x00019d5a
   2a474:	.word	0x00019d87
   2a478:	.word	0x00019cfd

0002a47c <conf_set_auth_redir_serv>:
   2a47c:	push	{r4, sl, fp, lr}
   2a480:	add	fp, sp, #8
   2a484:	mov	r4, r0
   2a488:	ldr	r1, [pc, #44]	; 2a4bc <conf_set_auth_redir_serv+0x40>
   2a48c:	ldr	r1, [pc, r1]
   2a490:	ldr	r2, [r1, #4]
   2a494:	ldr	r0, [r1, #12]
   2a498:	orr	r2, r2, #2048	; 0x800
   2a49c:	str	r2, [r1, #4]
   2a4a0:	bl	26c0c <rb_free>
   2a4a4:	mov	r0, r4
   2a4a8:	bl	26ee8 <rb_strdup>
   2a4ac:	ldr	r1, [pc, #12]	; 2a4c0 <conf_set_auth_redir_serv+0x44>
   2a4b0:	ldr	r1, [pc, r1]
   2a4b4:	str	r0, [r1, #12]
   2a4b8:	pop	{r4, sl, fp, pc}
   2a4bc:	.word	0x0003bd34
   2a4c0:	.word	0x0003bd10

0002a4c4 <conf_set_auth_redir_port>:
   2a4c4:	ldr	r0, [r0]
   2a4c8:	ldr	r1, [pc, #20]	; 2a4e4 <conf_set_auth_redir_port+0x20>
   2a4cc:	ldr	r1, [pc, r1]
   2a4d0:	str	r0, [r1, #32]
   2a4d4:	ldr	r0, [r1, #4]
   2a4d8:	orr	r0, r0, #2048	; 0x800
   2a4dc:	str	r0, [r1, #4]
   2a4e0:	bx	lr
   2a4e4:	.word	0x0003bcf4

0002a4e8 <conf_set_auth_flags>:
   2a4e8:	mov	r3, r0
   2a4ec:	ldr	r0, [pc, #24]	; 2a50c <conf_set_auth_flags+0x24>
   2a4f0:	ldr	r0, [pc, r0]
   2a4f4:	add	r0, r0, #4
   2a4f8:	ldr	r1, [pc, #16]	; 2a510 <conf_set_auth_flags+0x28>
   2a4fc:	add	r1, pc, r1
   2a500:	ldr	r2, [pc, #12]	; 2a514 <conf_set_auth_flags+0x2c>
   2a504:	add	r2, pc, r2
   2a508:	b	29c10 <set_modes_from_table>
   2a50c:	.word	0x0003bcd0
   2a510:	.word	0x0001c5fc
   2a514:	.word	0x000322b0

0002a518 <rb_dlinkAddTail>:
   2a518:	push	{fp, lr}
   2a51c:	mov	fp, sp
   2a520:	cmp	r1, #0
   2a524:	beq	2a58c <rb_dlinkAddTail+0x74>
   2a528:	cmp	r2, #0
   2a52c:	beq	2a5ac <rb_dlinkAddTail+0x94>
   2a530:	cmp	r0, #0
   2a534:	beq	2a5cc <rb_dlinkAddTail+0xb4>
   2a538:	mov	r3, #0
   2a53c:	str	r3, [r1, #8]
   2a540:	str	r0, [r1]
   2a544:	ldr	r0, [r2, #4]
   2a548:	str	r0, [r1, #4]
   2a54c:	ldr	r0, [r2, #4]
   2a550:	cmp	r0, #0
   2a554:	beq	2a564 <rb_dlinkAddTail+0x4c>
   2a558:	add	r0, r0, #8
   2a55c:	str	r1, [r0]
   2a560:	b	2a570 <rb_dlinkAddTail+0x58>
   2a564:	ldr	r0, [r2]
   2a568:	cmp	r0, #0
   2a56c:	beq	2a584 <rb_dlinkAddTail+0x6c>
   2a570:	str	r1, [r2, #4]
   2a574:	ldr	r0, [r2, #8]
   2a578:	add	r0, r0, #1
   2a57c:	str	r0, [r2, #8]
   2a580:	pop	{fp, pc}
   2a584:	mov	r0, r2
   2a588:	b	2a55c <rb_dlinkAddTail+0x44>
   2a58c:	ldr	r0, [pc, #88]	; 2a5ec <rb_dlinkAddTail+0xd4>
   2a590:	add	r0, pc, r0
   2a594:	ldr	r1, [pc, #84]	; 2a5f0 <rb_dlinkAddTail+0xd8>
   2a598:	add	r1, pc, r1
   2a59c:	ldr	r3, [pc, #80]	; 2a5f4 <rb_dlinkAddTail+0xdc>
   2a5a0:	add	r3, pc, r3
   2a5a4:	mov	r2, #211	; 0xd3
   2a5a8:	bl	e7e0 <__assert_fail@plt>
   2a5ac:	ldr	r0, [pc, #68]	; 2a5f8 <rb_dlinkAddTail+0xe0>
   2a5b0:	add	r0, pc, r0
   2a5b4:	ldr	r1, [pc, #64]	; 2a5fc <rb_dlinkAddTail+0xe4>
   2a5b8:	add	r1, pc, r1
   2a5bc:	ldr	r3, [pc, #60]	; 2a600 <rb_dlinkAddTail+0xe8>
   2a5c0:	add	r3, pc, r3
   2a5c4:	mov	r2, #212	; 0xd4
   2a5c8:	bl	e7e0 <__assert_fail@plt>
   2a5cc:	ldr	r0, [pc, #48]	; 2a604 <rb_dlinkAddTail+0xec>
   2a5d0:	add	r0, pc, r0
   2a5d4:	ldr	r1, [pc, #44]	; 2a608 <rb_dlinkAddTail+0xf0>
   2a5d8:	add	r1, pc, r1
   2a5dc:	ldr	r3, [pc, #40]	; 2a60c <rb_dlinkAddTail+0xf4>
   2a5e0:	add	r3, pc, r3
   2a5e4:	mov	r2, #213	; 0xd5
   2a5e8:	bl	e7e0 <__assert_fail@plt>
   2a5ec:	.word	0x0001601c
   2a5f0:	.word	0x0001601e
   2a5f4:	.word	0x00016032
   2a5f8:	.word	0x0001b895
   2a5fc:	.word	0x00015ffe
   2a600:	.word	0x00016012
   2a604:	.word	0x00016041
   2a608:	.word	0x00015fde
   2a60c:	.word	0x00015ff2

0002a610 <conf_set_connect_send_password>:
   2a610:	push	{r4, r5, r6, sl, fp, lr}
   2a614:	add	fp, sp, #16
   2a618:	mov	r4, r0
   2a61c:	ldr	r6, [pc, #68]	; 2a668 <conf_set_connect_send_password+0x58>
   2a620:	ldr	r6, [pc, r6]
   2a624:	ldr	r5, [r6, #276]	; 0x114
   2a628:	cmp	r5, #0
   2a62c:	beq	2a650 <conf_set_connect_send_password+0x40>
   2a630:	mov	r0, r5
   2a634:	bl	dc94 <strlen@plt>
   2a638:	mov	r2, r0
   2a63c:	mov	r0, r5
   2a640:	mov	r1, #0
   2a644:	bl	df28 <memset@plt>
   2a648:	ldr	r0, [r6, #276]	; 0x114
   2a64c:	bl	26c0c <rb_free>
   2a650:	mov	r0, r4
   2a654:	bl	26ee8 <rb_strdup>
   2a658:	ldr	r1, [pc, #12]	; 2a66c <conf_set_connect_send_password+0x5c>
   2a65c:	ldr	r1, [pc, r1]
   2a660:	str	r0, [r1, #276]	; 0x114
   2a664:	pop	{r4, r5, r6, sl, fp, pc}
   2a668:	.word	0x0003bbc0
   2a66c:	.word	0x0003bb84

0002a670 <conf_set_connect_accept_password>:
   2a670:	push	{r4, r5, r6, sl, fp, lr}
   2a674:	add	fp, sp, #16
   2a678:	mov	r4, r0
   2a67c:	ldr	r6, [pc, #68]	; 2a6c8 <conf_set_connect_accept_password+0x58>
   2a680:	ldr	r6, [pc, r6]
   2a684:	ldr	r5, [r6, #272]	; 0x110
   2a688:	cmp	r5, #0
   2a68c:	beq	2a6b0 <conf_set_connect_accept_password+0x40>
   2a690:	mov	r0, r5
   2a694:	bl	dc94 <strlen@plt>
   2a698:	mov	r2, r0
   2a69c:	mov	r0, r5
   2a6a0:	mov	r1, #0
   2a6a4:	bl	df28 <memset@plt>
   2a6a8:	ldr	r0, [r6, #272]	; 0x110
   2a6ac:	bl	26c0c <rb_free>
   2a6b0:	mov	r0, r4
   2a6b4:	bl	26ee8 <rb_strdup>
   2a6b8:	ldr	r1, [pc, #12]	; 2a6cc <conf_set_connect_accept_password+0x5c>
   2a6bc:	ldr	r1, [pc, r1]
   2a6c0:	str	r0, [r1, #272]	; 0x110
   2a6c4:	pop	{r4, r5, r6, sl, fp, pc}
   2a6c8:	.word	0x0003bb60
   2a6cc:	.word	0x0003bb24

0002a6d0 <conf_set_connect_fingerprint>:
   2a6d0:	push	{r4, sl, fp, lr}
   2a6d4:	add	fp, sp, #8
   2a6d8:	mov	r4, r0
   2a6dc:	ldr	r0, [pc, #48]	; 2a714 <conf_set_connect_fingerprint+0x44>
   2a6e0:	ldr	r0, [pc, r0]
   2a6e4:	ldr	r0, [r0, #280]	; 0x118
   2a6e8:	cmp	r0, #0
   2a6ec:	blne	26c0c <rb_free>
   2a6f0:	mov	r0, r4
   2a6f4:	bl	26ee8 <rb_strdup>
   2a6f8:	ldr	r1, [pc, #24]	; 2a718 <conf_set_connect_fingerprint+0x48>
   2a6fc:	ldr	r1, [pc, r1]
   2a700:	str	r0, [r1, #280]	; 0x118
   2a704:	ldr	r0, [r1, #288]	; 0x120
   2a708:	orr	r0, r0, #64	; 0x40
   2a70c:	str	r0, [r1, #288]	; 0x120
   2a710:	pop	{r4, sl, fp, pc}
   2a714:	.word	0x0003bb00
   2a718:	.word	0x0003bae4

0002a71c <conf_set_connect_flags>:
   2a71c:	mov	r3, r0
   2a720:	ldr	r0, [pc, #24]	; 2a740 <conf_set_connect_flags+0x24>
   2a724:	ldr	r0, [pc, r0]
   2a728:	add	r0, r0, #288	; 0x120
   2a72c:	ldr	r1, [pc, #16]	; 2a744 <conf_set_connect_flags+0x28>
   2a730:	add	r1, pc, r1
   2a734:	ldr	r2, [pc, #12]	; 2a748 <conf_set_connect_flags+0x2c>
   2a738:	add	r2, pc, r2
   2a73c:	b	29c10 <set_modes_from_table>
   2a740:	.word	0x0003babc
   2a744:	.word	0x0001c3c8
   2a748:	.word	0x000321c4

0002a74c <conf_set_connect_host>:
   2a74c:	push	{r4, sl, fp, lr}
   2a750:	add	fp, sp, #8
   2a754:	sub	sp, sp, #128	; 0x80
   2a758:	mov	r4, r0
   2a75c:	mov	r1, sp
   2a760:	bl	e000 <rb_inet_pton_sock@plt>
   2a764:	cmp	r0, #0
   2a768:	ble	2a790 <conf_set_connect_host+0x44>
   2a76c:	ldrh	r0, [sp]
   2a770:	cmp	r0, #10
   2a774:	beq	2a7bc <conf_set_connect_host+0x70>
   2a778:	cmp	r0, #2
   2a77c:	bne	2a7dc <conf_set_connect_host+0x90>
   2a780:	ldr	r0, [pc, #116]	; 2a7fc <conf_set_connect_host+0xb0>
   2a784:	ldr	r0, [pc, r0]
   2a788:	add	r0, r0, #8
   2a78c:	b	2a7c8 <conf_set_connect_host+0x7c>
   2a790:	ldr	r0, [pc, #92]	; 2a7f4 <conf_set_connect_host+0xa8>
   2a794:	ldr	r0, [pc, r0]
   2a798:	ldr	r0, [r0, #4]
   2a79c:	bl	26c0c <rb_free>
   2a7a0:	mov	r0, r4
   2a7a4:	bl	26ee8 <rb_strdup>
   2a7a8:	ldr	r1, [pc, #72]	; 2a7f8 <conf_set_connect_host+0xac>
   2a7ac:	ldr	r1, [pc, r1]
   2a7b0:	str	r0, [r1, #4]
   2a7b4:	sub	sp, fp, #8
   2a7b8:	pop	{r4, sl, fp, pc}
   2a7bc:	ldr	r0, [pc, #60]	; 2a800 <conf_set_connect_host+0xb4>
   2a7c0:	ldr	r0, [pc, r0]
   2a7c4:	add	r0, r0, #140	; 0x8c
   2a7c8:	mov	r1, sp
   2a7cc:	mov	r2, #128	; 0x80
   2a7d0:	bl	d40c <memcpy@plt>
   2a7d4:	sub	sp, fp, #8
   2a7d8:	pop	{r4, sl, fp, pc}
   2a7dc:	ldr	r0, [pc, #32]	; 2a804 <conf_set_connect_host+0xb8>
   2a7e0:	add	r0, pc, r0
   2a7e4:	mov	r1, r4
   2a7e8:	bl	d400 <conf_report_error@plt>
   2a7ec:	sub	sp, fp, #8
   2a7f0:	pop	{r4, sl, fp, pc}
   2a7f4:	.word	0x0003ba4c
   2a7f8:	.word	0x0003ba34
   2a7fc:	.word	0x0003ba5c
   2a800:	.word	0x0003ba20
   2a804:	.word	0x00019caa

0002a808 <conf_set_connect_vhost>:
   2a808:	push	{r4, sl, fp, lr}
   2a80c:	add	fp, sp, #8
   2a810:	sub	sp, sp, #128	; 0x80
   2a814:	mov	r4, r0
   2a818:	mov	r1, sp
   2a81c:	bl	e000 <rb_inet_pton_sock@plt>
   2a820:	cmp	r0, #0
   2a824:	ble	2a84c <conf_set_connect_vhost+0x44>
   2a828:	ldrh	r0, [sp]
   2a82c:	cmp	r0, #10
   2a830:	beq	2a878 <conf_set_connect_vhost+0x70>
   2a834:	cmp	r0, #2
   2a838:	bne	2a898 <conf_set_connect_vhost+0x90>
   2a83c:	ldr	r0, [pc, #116]	; 2a8b8 <conf_set_connect_vhost+0xb0>
   2a840:	ldr	r0, [pc, r0]
   2a844:	add	r0, r0, #308	; 0x134
   2a848:	b	2a884 <conf_set_connect_vhost+0x7c>
   2a84c:	ldr	r0, [pc, #92]	; 2a8b0 <conf_set_connect_vhost+0xa8>
   2a850:	ldr	r0, [pc, r0]
   2a854:	ldr	r0, [r0, #304]	; 0x130
   2a858:	bl	26c0c <rb_free>
   2a85c:	mov	r0, r4
   2a860:	bl	26ee8 <rb_strdup>
   2a864:	ldr	r1, [pc, #72]	; 2a8b4 <conf_set_connect_vhost+0xac>
   2a868:	ldr	r1, [pc, r1]
   2a86c:	str	r0, [r1, #304]	; 0x130
   2a870:	sub	sp, fp, #8
   2a874:	pop	{r4, sl, fp, pc}
   2a878:	ldr	r0, [pc, #60]	; 2a8bc <conf_set_connect_vhost+0xb4>
   2a87c:	ldr	r0, [pc, r0]
   2a880:	add	r0, r0, #440	; 0x1b8
   2a884:	mov	r1, sp
   2a888:	mov	r2, #128	; 0x80
   2a88c:	bl	d40c <memcpy@plt>
   2a890:	sub	sp, fp, #8
   2a894:	pop	{r4, sl, fp, pc}
   2a898:	ldr	r0, [pc, #32]	; 2a8c0 <conf_set_connect_vhost+0xb8>
   2a89c:	add	r0, pc, r0
   2a8a0:	mov	r1, r4
   2a8a4:	bl	d400 <conf_report_error@plt>
   2a8a8:	sub	sp, fp, #8
   2a8ac:	pop	{r4, sl, fp, pc}
   2a8b0:	.word	0x0003b990
   2a8b4:	.word	0x0003b978
   2a8b8:	.word	0x0003b9a0
   2a8bc:	.word	0x0003b964
   2a8c0:	.word	0x00019c22

0002a8c4 <conf_set_connect_port>:
   2a8c4:	ldr	r0, [r0]
   2a8c8:	cmp	r0, #1
   2a8cc:	movwlt	r0, #6667	; 0x1a0b
   2a8d0:	ldr	r1, [pc, #8]	; 2a8e0 <conf_set_connect_port+0x1c>
   2a8d4:	ldr	r1, [pc, r1]
   2a8d8:	str	r0, [r1, #284]	; 0x11c
   2a8dc:	bx	lr
   2a8e0:	.word	0x0003b90c

0002a8e4 <conf_set_connect_aftype>:
   2a8e4:	push	{r4, sl, fp, lr}
   2a8e8:	add	fp, sp, #8
   2a8ec:	mov	r4, r0
   2a8f0:	ldr	r1, [pc, #96]	; 2a958 <conf_set_connect_aftype+0x74>
   2a8f4:	add	r1, pc, r1
   2a8f8:	bl	d340 <rb_strcasecmp@plt>
   2a8fc:	cmp	r0, #0
   2a900:	beq	2a930 <conf_set_connect_aftype+0x4c>
   2a904:	ldr	r1, [pc, #84]	; 2a960 <conf_set_connect_aftype+0x7c>
   2a908:	add	r1, pc, r1
   2a90c:	mov	r0, r4
   2a910:	bl	d340 <rb_strcasecmp@plt>
   2a914:	cmp	r0, #0
   2a918:	beq	2a944 <conf_set_connect_aftype+0x60>
   2a91c:	ldr	r0, [pc, #68]	; 2a968 <conf_set_connect_aftype+0x84>
   2a920:	add	r0, pc, r0
   2a924:	mov	r1, r4
   2a928:	pop	{r4, sl, fp, lr}
   2a92c:	b	26c18 <conf_report_error>
   2a930:	ldr	r0, [pc, #36]	; 2a95c <conf_set_connect_aftype+0x78>
   2a934:	ldr	r0, [pc, r0]
   2a938:	mov	r1, #2
   2a93c:	str	r1, [r0, #300]	; 0x12c
   2a940:	pop	{r4, sl, fp, pc}
   2a944:	ldr	r0, [pc, #24]	; 2a964 <conf_set_connect_aftype+0x80>
   2a948:	ldr	r0, [pc, r0]
   2a94c:	mov	r1, #10
   2a950:	str	r1, [r0, #300]	; 0x12c
   2a954:	pop	{r4, sl, fp, pc}
   2a958:	.word	0x0001a9bc
   2a95c:	.word	0x0003b8ac
   2a960:	.word	0x0001a997
   2a964:	.word	0x0003b898
   2a968:	.word	0x00019bd3

0002a96c <conf_set_connect_hub_mask>:
   2a96c:	push	{r4, r5, fp, lr}
   2a970:	add	fp, sp, #8
   2a974:	mov	r4, r0
   2a978:	ldr	r0, [pc, #92]	; 2a9dc <conf_set_connect_hub_mask+0x70>
   2a97c:	ldr	r0, [pc, r0]
   2a980:	ldr	r0, [r0]
   2a984:	cmp	r0, #0
   2a988:	ldrbne	r0, [r0]
   2a98c:	cmpne	r0, #0
   2a990:	popeq	{r4, r5, fp, pc}
   2a994:	bl	d3dc <make_remote_conf@plt>
   2a998:	mov	r5, r0
   2a99c:	mov	r0, #1
   2a9a0:	str	r0, [r5, #12]
   2a9a4:	mov	r0, r4
   2a9a8:	bl	26ee8 <rb_strdup>
   2a9ac:	str	r0, [r5, #4]
   2a9b0:	ldr	r0, [pc, #40]	; 2a9e0 <conf_set_connect_hub_mask+0x74>
   2a9b4:	ldr	r0, [pc, r0]
   2a9b8:	ldr	r0, [r0]
   2a9bc:	bl	26ee8 <rb_strdup>
   2a9c0:	str	r0, [r5, #8]
   2a9c4:	add	r1, r5, #16
   2a9c8:	ldr	r2, [pc, #20]	; 2a9e4 <conf_set_connect_hub_mask+0x78>
   2a9cc:	ldr	r2, [pc, r2]
   2a9d0:	mov	r0, r5
   2a9d4:	pop	{r4, r5, fp, lr}
   2a9d8:	b	26850 <rb_dlinkAdd>
   2a9dc:	.word	0x0003b864
   2a9e0:	.word	0x0003b82c
   2a9e4:	.word	0x0002fff8

0002a9e8 <conf_set_connect_leaf_mask>:
   2a9e8:	push	{r4, r5, fp, lr}
   2a9ec:	add	fp, sp, #8
   2a9f0:	mov	r4, r0
   2a9f4:	ldr	r0, [pc, #92]	; 2aa58 <conf_set_connect_leaf_mask+0x70>
   2a9f8:	ldr	r0, [pc, r0]
   2a9fc:	ldr	r0, [r0]
   2aa00:	cmp	r0, #0
   2aa04:	ldrbne	r0, [r0]
   2aa08:	cmpne	r0, #0
   2aa0c:	popeq	{r4, r5, fp, pc}
   2aa10:	bl	d3dc <make_remote_conf@plt>
   2aa14:	mov	r5, r0
   2aa18:	mov	r0, #2
   2aa1c:	str	r0, [r5, #12]
   2aa20:	mov	r0, r4
   2aa24:	bl	26ee8 <rb_strdup>
   2aa28:	str	r0, [r5, #4]
   2aa2c:	ldr	r0, [pc, #40]	; 2aa5c <conf_set_connect_leaf_mask+0x74>
   2aa30:	ldr	r0, [pc, r0]
   2aa34:	ldr	r0, [r0]
   2aa38:	bl	26ee8 <rb_strdup>
   2aa3c:	str	r0, [r5, #8]
   2aa40:	add	r1, r5, #16
   2aa44:	ldr	r2, [pc, #20]	; 2aa60 <conf_set_connect_leaf_mask+0x78>
   2aa48:	ldr	r2, [pc, r2]
   2aa4c:	mov	r0, r5
   2aa50:	pop	{r4, r5, fp, lr}
   2aa54:	b	26850 <rb_dlinkAdd>
   2aa58:	.word	0x0003b7e8
   2aa5c:	.word	0x0003b7b0
   2aa60:	.word	0x0002ff7c

0002aa64 <conf_set_connect_class>:
   2aa64:	push	{r4, sl, fp, lr}
   2aa68:	add	fp, sp, #8
   2aa6c:	mov	r4, r0
   2aa70:	ldr	r0, [pc, #32]	; 2aa98 <conf_set_connect_class+0x34>
   2aa74:	ldr	r0, [pc, r0]
   2aa78:	ldr	r0, [r0, #572]	; 0x23c
   2aa7c:	bl	26c0c <rb_free>
   2aa80:	mov	r0, r4
   2aa84:	bl	26ee8 <rb_strdup>
   2aa88:	ldr	r1, [pc, #12]	; 2aa9c <conf_set_connect_class+0x38>
   2aa8c:	ldr	r1, [pc, r1]
   2aa90:	str	r0, [r1, #572]	; 0x23c
   2aa94:	pop	{r4, sl, fp, pc}
   2aa98:	.word	0x0003b76c
   2aa9c:	.word	0x0003b754

0002aaa0 <conf_set_general_oper_only_umodes>:
   2aaa0:	mov	r3, r0
   2aaa4:	ldr	r0, [pc, #24]	; 2aac4 <conf_set_general_oper_only_umodes+0x24>
   2aaa8:	ldr	r0, [pc, r0]
   2aaac:	add	r0, r0, #216	; 0xd8
   2aab0:	ldr	r1, [pc, #16]	; 2aac8 <conf_set_general_oper_only_umodes+0x28>
   2aab4:	add	r1, pc, r1
   2aab8:	ldr	r2, [pc, #12]	; 2aacc <conf_set_general_oper_only_umodes+0x2c>
   2aabc:	add	r2, pc, r2
   2aac0:	b	29c10 <set_modes_from_table>
   2aac4:	.word	0x000300d4
   2aac8:	.word	0x000192aa
   2aacc:	.word	0x00031cb4

0002aad0 <conf_set_general_oper_umodes>:
   2aad0:	mov	r3, r0
   2aad4:	ldr	r0, [pc, #24]	; 2aaf4 <conf_set_general_oper_umodes+0x24>
   2aad8:	ldr	r0, [pc, r0]
   2aadc:	add	r0, r0, #220	; 0xdc
   2aae0:	ldr	r1, [pc, #16]	; 2aaf8 <conf_set_general_oper_umodes+0x28>
   2aae4:	add	r1, pc, r1
   2aae8:	ldr	r2, [pc, #12]	; 2aafc <conf_set_general_oper_umodes+0x2c>
   2aaec:	add	r2, pc, r2
   2aaf0:	b	29c10 <set_modes_from_table>
   2aaf4:	.word	0x000300a4
   2aaf8:	.word	0x0001927a
   2aafc:	.word	0x00031c84

0002ab00 <conf_set_general_oper_snomask>:
   2ab00:	push	{fp, lr}
   2ab04:	mov	fp, sp
   2ab08:	ldr	lr, [pc, #140]	; 2ab9c <conf_set_general_oper_snomask+0x9c>
   2ab0c:	ldr	lr, [pc, lr]
   2ab10:	mov	r1, #0
   2ab14:	str	r1, [lr, #224]	; 0xe0
   2ab18:	mov	r3, #1
   2ab1c:	ldr	ip, [pc, #124]	; 2aba0 <conf_set_general_oper_snomask+0xa0>
   2ab20:	ldr	ip, [pc, ip]
   2ab24:	b	2ab2c <conf_set_general_oper_snomask+0x2c>
   2ab28:	add	r0, r0, #1
   2ab2c:	mov	r2, r3
   2ab30:	ldrb	r1, [r0]
   2ab34:	cmp	r1, #43	; 0x2b
   2ab38:	mov	r3, #1
   2ab3c:	beq	2ab28 <conf_set_general_oper_snomask+0x28>
   2ab40:	cmp	r1, #45	; 0x2d
   2ab44:	beq	2ab7c <conf_set_general_oper_snomask+0x7c>
   2ab48:	cmp	r1, #0
   2ab4c:	popeq	{fp, pc}
   2ab50:	ldr	r1, [ip, r1, lsl #2]
   2ab54:	cmp	r1, #0
   2ab58:	beq	2ab94 <conf_set_general_oper_snomask+0x94>
   2ab5c:	cmp	r2, #1
   2ab60:	bne	2ab88 <conf_set_general_oper_snomask+0x88>
   2ab64:	ldr	r2, [lr, #224]	; 0xe0
   2ab68:	orr	r1, r2, r1
   2ab6c:	str	r1, [lr, #224]	; 0xe0
   2ab70:	mov	r3, #1
   2ab74:	add	r0, r0, #1
   2ab78:	b	2ab2c <conf_set_general_oper_snomask+0x2c>
   2ab7c:	mvn	r3, #0
   2ab80:	add	r0, r0, #1
   2ab84:	b	2ab2c <conf_set_general_oper_snomask+0x2c>
   2ab88:	ldr	r3, [lr, #224]	; 0xe0
   2ab8c:	bic	r1, r3, r1
   2ab90:	str	r1, [lr, #224]	; 0xe0
   2ab94:	mov	r3, r2
   2ab98:	b	2ab28 <conf_set_general_oper_snomask+0x28>
   2ab9c:	.word	0x00030070
   2aba0:	.word	0x0002ff08

0002aba4 <conf_set_general_compression_level>:
   2aba4:	push	{r4, sl, fp, lr}
   2aba8:	add	fp, sp, #8
   2abac:	ldr	r0, [r0]
   2abb0:	ldr	r4, [pc, #48]	; 2abe8 <conf_set_general_compression_level+0x44>
   2abb4:	ldr	r4, [pc, r4]
   2abb8:	strb	r0, [r4, #72]	; 0x48
   2abbc:	mvn	r1, #0
   2abc0:	uxtab	r1, r1, r0
   2abc4:	cmp	r1, #9
   2abc8:	popcc	{r4, sl, fp, pc}
   2abcc:	uxtb	r1, r0
   2abd0:	ldr	r0, [pc, #20]	; 2abec <conf_set_general_compression_level+0x48>
   2abd4:	add	r0, pc, r0
   2abd8:	bl	d400 <conf_report_error@plt>
   2abdc:	mov	r0, #0
   2abe0:	strb	r0, [r4, #72]	; 0x48
   2abe4:	pop	{r4, sl, fp, pc}
   2abe8:	.word	0x0002ffc8
   2abec:	.word	0x00019ece

0002abf0 <conf_set_general_havent_read_conf>:
   2abf0:	push	{fp, lr}
   2abf4:	mov	fp, sp
   2abf8:	ldr	r0, [r0]
   2abfc:	cmp	r0, #0
   2ac00:	popeq	{fp, pc}
   2ac04:	ldr	r0, [pc, #60]	; 2ac48 <conf_set_general_havent_read_conf+0x58>
   2ac08:	add	r0, pc, r0
   2ac0c:	bl	d400 <conf_report_error@plt>
   2ac10:	ldr	r0, [pc, #52]	; 2ac4c <conf_set_general_havent_read_conf+0x5c>
   2ac14:	add	r0, pc, r0
   2ac18:	bl	d400 <conf_report_error@plt>
   2ac1c:	ldr	r0, [pc, #44]	; 2ac50 <conf_set_general_havent_read_conf+0x60>
   2ac20:	add	r0, pc, r0
   2ac24:	bl	d400 <conf_report_error@plt>
   2ac28:	ldr	r0, [pc, #36]	; 2ac54 <conf_set_general_havent_read_conf+0x64>
   2ac2c:	ldr	r0, [pc, r0]
   2ac30:	ldr	r0, [r0]
   2ac34:	cmp	r0, #0
   2ac38:	beq	2ac40 <conf_set_general_havent_read_conf+0x50>
   2ac3c:	pop	{fp, pc}
   2ac40:	mov	r0, #0
   2ac44:	bl	dc34 <exit@plt>
   2ac48:	.word	0x00019ed2
   2ac4c:	.word	0x00019ef2
   2ac50:	.word	0x00019f35
   2ac54:	.word	0x0002fe60

0002ac58 <conf_set_general_hide_error_messages>:
   2ac58:	push	{r4, sl, fp, lr}
   2ac5c:	add	fp, sp, #8
   2ac60:	mov	r4, r0
   2ac64:	ldr	r1, [pc, #140]	; 2acf8 <conf_set_general_hide_error_messages+0xa0>
   2ac68:	add	r1, pc, r1
   2ac6c:	bl	d340 <rb_strcasecmp@plt>
   2ac70:	cmp	r0, #0
   2ac74:	beq	2acbc <conf_set_general_hide_error_messages+0x64>
   2ac78:	ldr	r1, [pc, #128]	; 2ad00 <conf_set_general_hide_error_messages+0xa8>
   2ac7c:	add	r1, pc, r1
   2ac80:	mov	r0, r4
   2ac84:	bl	d340 <rb_strcasecmp@plt>
   2ac88:	cmp	r0, #0
   2ac8c:	beq	2acd0 <conf_set_general_hide_error_messages+0x78>
   2ac90:	ldr	r1, [pc, #112]	; 2ad08 <conf_set_general_hide_error_messages+0xb0>
   2ac94:	add	r1, pc, r1
   2ac98:	mov	r0, r4
   2ac9c:	bl	d340 <rb_strcasecmp@plt>
   2aca0:	cmp	r0, #0
   2aca4:	beq	2ace4 <conf_set_general_hide_error_messages+0x8c>
   2aca8:	ldr	r0, [pc, #96]	; 2ad10 <conf_set_general_hide_error_messages+0xb8>
   2acac:	add	r0, pc, r0
   2acb0:	mov	r1, r4
   2acb4:	pop	{r4, sl, fp, lr}
   2acb8:	b	26c18 <conf_report_error>
   2acbc:	ldr	r0, [pc, #56]	; 2acfc <conf_set_general_hide_error_messages+0xa4>
   2acc0:	ldr	r0, [pc, r0]
   2acc4:	mov	r1, #2
   2acc8:	str	r1, [r0, #208]	; 0xd0
   2accc:	pop	{r4, sl, fp, pc}
   2acd0:	ldr	r0, [pc, #44]	; 2ad04 <conf_set_general_hide_error_messages+0xac>
   2acd4:	ldr	r0, [pc, r0]
   2acd8:	mov	r1, #1
   2acdc:	str	r1, [r0, #208]	; 0xd0
   2ace0:	pop	{r4, sl, fp, pc}
   2ace4:	ldr	r0, [pc, #32]	; 2ad0c <conf_set_general_hide_error_messages+0xb4>
   2ace8:	ldr	r0, [pc, r0]
   2acec:	mov	r1, #0
   2acf0:	str	r1, [r0, #208]	; 0xd0
   2acf4:	pop	{r4, sl, fp, pc}
   2acf8:	.word	0x00017686
   2acfc:	.word	0x0002febc
   2ad00:	.word	0x00016dc7
   2ad04:	.word	0x0002fea8
   2ad08:	.word	0x0001765e
   2ad0c:	.word	0x0002fe94
   2ad10:	.word	0x00019ef2

0002ad14 <conf_set_general_stats_k_oper_only>:
   2ad14:	push	{r4, sl, fp, lr}
   2ad18:	add	fp, sp, #8
   2ad1c:	mov	r4, r0
   2ad20:	ldr	r1, [pc, #140]	; 2adb4 <conf_set_general_stats_k_oper_only+0xa0>
   2ad24:	add	r1, pc, r1
   2ad28:	bl	d340 <rb_strcasecmp@plt>
   2ad2c:	cmp	r0, #0
   2ad30:	beq	2ad78 <conf_set_general_stats_k_oper_only+0x64>
   2ad34:	ldr	r1, [pc, #128]	; 2adbc <conf_set_general_stats_k_oper_only+0xa8>
   2ad38:	add	r1, pc, r1
   2ad3c:	mov	r0, r4
   2ad40:	bl	d340 <rb_strcasecmp@plt>
   2ad44:	cmp	r0, #0
   2ad48:	beq	2ad8c <conf_set_general_stats_k_oper_only+0x78>
   2ad4c:	ldr	r1, [pc, #112]	; 2adc4 <conf_set_general_stats_k_oper_only+0xb0>
   2ad50:	add	r1, pc, r1
   2ad54:	mov	r0, r4
   2ad58:	bl	d340 <rb_strcasecmp@plt>
   2ad5c:	cmp	r0, #0
   2ad60:	beq	2ada0 <conf_set_general_stats_k_oper_only+0x8c>
   2ad64:	ldr	r0, [pc, #96]	; 2adcc <conf_set_general_stats_k_oper_only+0xb8>
   2ad68:	add	r0, pc, r0
   2ad6c:	mov	r1, r4
   2ad70:	pop	{r4, sl, fp, lr}
   2ad74:	b	26c18 <conf_report_error>
   2ad78:	ldr	r0, [pc, #56]	; 2adb8 <conf_set_general_stats_k_oper_only+0xa4>
   2ad7c:	ldr	r0, [pc, r0]
   2ad80:	mov	r1, #2
   2ad84:	str	r1, [r0, #164]	; 0xa4
   2ad88:	pop	{r4, sl, fp, pc}
   2ad8c:	ldr	r0, [pc, #44]	; 2adc0 <conf_set_general_stats_k_oper_only+0xac>
   2ad90:	ldr	r0, [pc, r0]
   2ad94:	mov	r1, #1
   2ad98:	str	r1, [r0, #164]	; 0xa4
   2ad9c:	pop	{r4, sl, fp, pc}
   2ada0:	ldr	r0, [pc, #32]	; 2adc8 <conf_set_general_stats_k_oper_only+0xb4>
   2ada4:	ldr	r0, [pc, r0]
   2ada8:	mov	r1, #0
   2adac:	str	r1, [r0, #164]	; 0xa4
   2adb0:	pop	{r4, sl, fp, pc}
   2adb4:	.word	0x000175ca
   2adb8:	.word	0x0002fe00
   2adbc:	.word	0x00019e9d
   2adc0:	.word	0x0002fdec
   2adc4:	.word	0x000175a2
   2adc8:	.word	0x0002fdd8
   2adcc:	.word	0x00019e74

0002add0 <conf_set_general_stats_i_oper_only>:
   2add0:	push	{r4, sl, fp, lr}
   2add4:	add	fp, sp, #8
   2add8:	mov	r4, r0
   2addc:	ldr	r1, [pc, #140]	; 2ae70 <conf_set_general_stats_i_oper_only+0xa0>
   2ade0:	add	r1, pc, r1
   2ade4:	bl	d340 <rb_strcasecmp@plt>
   2ade8:	cmp	r0, #0
   2adec:	beq	2ae34 <conf_set_general_stats_i_oper_only+0x64>
   2adf0:	ldr	r1, [pc, #128]	; 2ae78 <conf_set_general_stats_i_oper_only+0xa8>
   2adf4:	add	r1, pc, r1
   2adf8:	mov	r0, r4
   2adfc:	bl	d340 <rb_strcasecmp@plt>
   2ae00:	cmp	r0, #0
   2ae04:	beq	2ae48 <conf_set_general_stats_i_oper_only+0x78>
   2ae08:	ldr	r1, [pc, #112]	; 2ae80 <conf_set_general_stats_i_oper_only+0xb0>
   2ae0c:	add	r1, pc, r1
   2ae10:	mov	r0, r4
   2ae14:	bl	d340 <rb_strcasecmp@plt>
   2ae18:	cmp	r0, #0
   2ae1c:	beq	2ae5c <conf_set_general_stats_i_oper_only+0x8c>
   2ae20:	ldr	r0, [pc, #96]	; 2ae88 <conf_set_general_stats_i_oper_only+0xb8>
   2ae24:	add	r0, pc, r0
   2ae28:	mov	r1, r4
   2ae2c:	pop	{r4, sl, fp, lr}
   2ae30:	b	26c18 <conf_report_error>
   2ae34:	ldr	r0, [pc, #56]	; 2ae74 <conf_set_general_stats_i_oper_only+0xa4>
   2ae38:	ldr	r0, [pc, r0]
   2ae3c:	mov	r1, #2
   2ae40:	str	r1, [r0, #168]	; 0xa8
   2ae44:	pop	{r4, sl, fp, pc}
   2ae48:	ldr	r0, [pc, #44]	; 2ae7c <conf_set_general_stats_i_oper_only+0xac>
   2ae4c:	ldr	r0, [pc, r0]
   2ae50:	mov	r1, #1
   2ae54:	str	r1, [r0, #168]	; 0xa8
   2ae58:	pop	{r4, sl, fp, pc}
   2ae5c:	ldr	r0, [pc, #32]	; 2ae84 <conf_set_general_stats_i_oper_only+0xb4>
   2ae60:	ldr	r0, [pc, r0]
   2ae64:	mov	r1, #0
   2ae68:	str	r1, [r0, #168]	; 0xa8
   2ae6c:	pop	{r4, sl, fp, pc}
   2ae70:	.word	0x0001750e
   2ae74:	.word	0x0002fd44
   2ae78:	.word	0x00019de1
   2ae7c:	.word	0x0002fd30
   2ae80:	.word	0x000174e6
   2ae84:	.word	0x0002fd1c
   2ae88:	.word	0x00019ded

0002ae8c <conf_set_general_default_umodes>:
   2ae8c:	push	{r4, r5, fp, lr}
   2ae90:	add	fp, sp, #8
   2ae94:	ldr	lr, [pc, #180]	; 2af50 <conf_set_general_default_umodes+0xc4>
   2ae98:	ldr	lr, [pc, lr]
   2ae9c:	mov	r1, #0
   2aea0:	str	r1, [lr, #312]	; 0x138
   2aea4:	mov	r2, #1
   2aea8:	ldr	ip, [pc, #164]	; 2af54 <conf_set_general_default_umodes+0xc8>
   2aeac:	ldr	ip, [pc, ip]
   2aeb0:	movw	r3, #129	; 0x81
   2aeb4:	movt	r3, #4096	; 0x1000
   2aeb8:	mov	r1, #1
   2aebc:	b	2aec4 <conf_set_general_default_umodes+0x38>
   2aec0:	add	r0, r0, #1
   2aec4:	ldrb	r4, [r0]
   2aec8:	cmp	r4, #44	; 0x2c
   2aecc:	bgt	2aeec <conf_set_general_default_umodes+0x60>
   2aed0:	cmp	r4, #32
   2aed4:	beq	2aec0 <conf_set_general_default_umodes+0x34>
   2aed8:	cmp	r4, #43	; 0x2b
   2aedc:	beq	2af34 <conf_set_general_default_umodes+0xa8>
   2aee0:	cmp	r4, #0
   2aee4:	popeq	{r4, r5, fp, pc}
   2aee8:	b	2af14 <conf_set_general_default_umodes+0x88>
   2aeec:	sub	r5, r4, #83	; 0x53
   2aef0:	cmp	r5, #28
   2aef4:	bhi	2af00 <conf_set_general_default_umodes+0x74>
   2aef8:	tst	r3, r2, lsl r5
   2aefc:	bne	2aec0 <conf_set_general_default_umodes+0x34>
   2af00:	cmp	r4, #45	; 0x2d
   2af04:	bne	2af14 <conf_set_general_default_umodes+0x88>
   2af08:	mvn	r1, #0
   2af0c:	add	r0, r0, #1
   2af10:	b	2aec4 <conf_set_general_default_umodes+0x38>
   2af14:	ldr	r4, [ip, r4, lsl #2]
   2af18:	cmp	r4, #0
   2af1c:	beq	2aec0 <conf_set_general_default_umodes+0x34>
   2af20:	cmp	r1, #1
   2af24:	bne	2af40 <conf_set_general_default_umodes+0xb4>
   2af28:	ldr	r1, [lr, #312]	; 0x138
   2af2c:	orr	r1, r1, r4
   2af30:	str	r1, [lr, #312]	; 0x138
   2af34:	mov	r1, #1
   2af38:	add	r0, r0, #1
   2af3c:	b	2aec4 <conf_set_general_default_umodes+0x38>
   2af40:	ldr	r5, [lr, #312]	; 0x138
   2af44:	bic	r4, r5, r4
   2af48:	str	r4, [lr, #312]	; 0x138
   2af4c:	b	2aec0 <conf_set_general_default_umodes+0x34>
   2af50:	.word	0x0002fce4
   2af54:	.word	0x0002fac4

0002af58 <conf_set_general_certfp_method>:
   2af58:	push	{r4, sl, fp, lr}
   2af5c:	add	fp, sp, #8
   2af60:	mov	r4, r0
   2af64:	ldr	r1, [pc, #244]	; 2b060 <conf_set_general_certfp_method+0x108>
   2af68:	add	r1, pc, r1
   2af6c:	bl	d340 <rb_strcasecmp@plt>
   2af70:	cmp	r0, #0
   2af74:	beq	2affc <conf_set_general_certfp_method+0xa4>
   2af78:	ldr	r1, [pc, #232]	; 2b068 <conf_set_general_certfp_method+0x110>
   2af7c:	add	r1, pc, r1
   2af80:	mov	r0, r4
   2af84:	bl	d340 <rb_strcasecmp@plt>
   2af88:	cmp	r0, #0
   2af8c:	beq	2b010 <conf_set_general_certfp_method+0xb8>
   2af90:	ldr	r1, [pc, #216]	; 2b070 <conf_set_general_certfp_method+0x118>
   2af94:	add	r1, pc, r1
   2af98:	mov	r0, r4
   2af9c:	bl	d340 <rb_strcasecmp@plt>
   2afa0:	cmp	r0, #0
   2afa4:	beq	2b024 <conf_set_general_certfp_method+0xcc>
   2afa8:	ldr	r1, [pc, #200]	; 2b078 <conf_set_general_certfp_method+0x120>
   2afac:	add	r1, pc, r1
   2afb0:	mov	r0, r4
   2afb4:	bl	d340 <rb_strcasecmp@plt>
   2afb8:	cmp	r0, #0
   2afbc:	beq	2b038 <conf_set_general_certfp_method+0xe0>
   2afc0:	ldr	r1, [pc, #184]	; 2b080 <conf_set_general_certfp_method+0x128>
   2afc4:	add	r1, pc, r1
   2afc8:	mov	r0, r4
   2afcc:	bl	d340 <rb_strcasecmp@plt>
   2afd0:	cmp	r0, #0
   2afd4:	beq	2b04c <conf_set_general_certfp_method+0xf4>
   2afd8:	ldr	r0, [pc, #168]	; 2b088 <conf_set_general_certfp_method+0x130>
   2afdc:	ldr	r0, [pc, r0]
   2afe0:	mov	r1, #0
   2afe4:	str	r1, [r0, #364]	; 0x16c
   2afe8:	ldr	r0, [pc, #156]	; 2b08c <conf_set_general_certfp_method+0x134>
   2afec:	add	r0, pc, r0
   2aff0:	mov	r1, r4
   2aff4:	pop	{r4, sl, fp, lr}
   2aff8:	b	26c18 <conf_report_error>
   2affc:	ldr	r0, [pc, #96]	; 2b064 <conf_set_general_certfp_method+0x10c>
   2b000:	ldr	r0, [pc, r0]
   2b004:	mov	r1, #0
   2b008:	str	r1, [r0, #364]	; 0x16c
   2b00c:	pop	{r4, sl, fp, pc}
   2b010:	ldr	r0, [pc, #84]	; 2b06c <conf_set_general_certfp_method+0x114>
   2b014:	ldr	r0, [pc, r0]
   2b018:	mov	r1, #1
   2b01c:	str	r1, [r0, #364]	; 0x16c
   2b020:	pop	{r4, sl, fp, pc}
   2b024:	ldr	r0, [pc, #72]	; 2b074 <conf_set_general_certfp_method+0x11c>
   2b028:	ldr	r0, [pc, r0]
   2b02c:	mov	r1, #2
   2b030:	str	r1, [r0, #364]	; 0x16c
   2b034:	pop	{r4, sl, fp, pc}
   2b038:	ldr	r0, [pc, #60]	; 2b07c <conf_set_general_certfp_method+0x124>
   2b03c:	ldr	r0, [pc, r0]
   2b040:	movw	r1, #4097	; 0x1001
   2b044:	str	r1, [r0, #364]	; 0x16c
   2b048:	pop	{r4, sl, fp, pc}
   2b04c:	ldr	r0, [pc, #48]	; 2b084 <conf_set_general_certfp_method+0x12c>
   2b050:	ldr	r0, [pc, r0]
   2b054:	movw	r1, #4098	; 0x1002
   2b058:	str	r1, [r0, #364]	; 0x16c
   2b05c:	pop	{r4, sl, fp, pc}
   2b060:	.word	0x00019cde
   2b064:	.word	0x0002fb7c
   2b068:	.word	0x00019cd4
   2b06c:	.word	0x0002fb68
   2b070:	.word	0x00019cc8
   2b074:	.word	0x0002fb54
   2b078:	.word	0x00019c9f
   2b07c:	.word	0x0002fb40
   2b080:	.word	0x00019c93
   2b084:	.word	0x0002fb2c
   2b088:	.word	0x0002fba0
   2b08c:	.word	0x00019c77

0002b090 <conf_set_channel_autochanmodes>:
   2b090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b094:	add	fp, sp, #24
   2b098:	ldr	r9, [pc, #180]	; 2b154 <conf_set_channel_autochanmodes+0xc4>
   2b09c:	ldr	r9, [pc, r9]
   2b0a0:	mov	r1, #0
   2b0a4:	str	r1, [r9, #80]	; 0x50
   2b0a8:	ldrb	r1, [r0]
   2b0ac:	cmp	r1, #0
   2b0b0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b0b4:	add	r6, r0, #1
   2b0b8:	mov	r0, #1
   2b0bc:	ldr	r7, [pc, #148]	; 2b158 <conf_set_channel_autochanmodes+0xc8>
   2b0c0:	ldr	r7, [pc, r7]
   2b0c4:	ldr	r4, [pc, #144]	; 2b15c <conf_set_channel_autochanmodes+0xcc>
   2b0c8:	ldr	r4, [pc, r4]
   2b0cc:	ldr	r8, [pc, #140]	; 2b160 <conf_set_channel_autochanmodes+0xd0>
   2b0d0:	add	r8, pc, r8
   2b0d4:	mov	r5, r0
   2b0d8:	uxtb	r1, r1
   2b0dc:	cmp	r1, #43	; 0x2b
   2b0e0:	mov	r0, #1
   2b0e4:	beq	2b144 <conf_set_channel_autochanmodes+0xb4>
   2b0e8:	cmp	r1, #45	; 0x2d
   2b0ec:	bne	2b0f8 <conf_set_channel_autochanmodes+0x68>
   2b0f0:	mvn	r0, #0
   2b0f4:	b	2b144 <conf_set_channel_autochanmodes+0xb4>
   2b0f8:	ldr	r0, [r7, r1, lsl #3]
   2b0fc:	cmp	r0, r4
   2b100:	beq	2b110 <conf_set_channel_autochanmodes+0x80>
   2b104:	mov	r0, r8
   2b108:	bl	d400 <conf_report_error@plt>
   2b10c:	b	2b140 <conf_set_channel_autochanmodes+0xb0>
   2b110:	add	r0, r7, r1, lsl #3
   2b114:	ldr	r0, [r0, #4]
   2b118:	cmp	r5, #1
   2b11c:	bne	2b134 <conf_set_channel_autochanmodes+0xa4>
   2b120:	ldr	r1, [r9, #80]	; 0x50
   2b124:	orr	r0, r1, r0
   2b128:	str	r0, [r9, #80]	; 0x50
   2b12c:	mov	r0, #1
   2b130:	b	2b144 <conf_set_channel_autochanmodes+0xb4>
   2b134:	ldr	r1, [r9, #80]	; 0x50
   2b138:	bic	r0, r1, r0
   2b13c:	str	r0, [r9, #80]	; 0x50
   2b140:	mov	r0, r5
   2b144:	ldrb	r1, [r6], #1
   2b148:	cmp	r1, #0
   2b14c:	bne	2b0d4 <conf_set_channel_autochanmodes+0x44>
   2b150:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b154:	.word	0x0002fa7c
   2b158:	.word	0x0002f9d4
   2b15c:	.word	0x0002f8dc
   2b160:	.word	0x00019d72

0002b164 <conf_set_serverhide_links_delay>:
   2b164:	ldr	r0, [r0]
   2b168:	ldr	r1, [pc, #8]	; 2b178 <conf_set_serverhide_links_delay+0x14>
   2b16c:	ldr	r1, [pc, r1]
   2b170:	str	r0, [r1, #4]
   2b174:	bx	lr
   2b178:	.word	0x0002f848

0002b17c <conf_set_opm_listen_address_both>:
   2b17c:	push	{r4, r5, r6, sl, fp, lr}
   2b180:	add	fp, sp, #16
   2b184:	sub	sp, sp, #128	; 0x80
   2b188:	mov	r6, r1
   2b18c:	mov	r4, r0
   2b190:	ldr	r0, [pc, #196]	; 2b25c <conf_set_opm_listen_address_both+0xe0>
   2b194:	add	r0, pc, r0
   2b198:	ldr	r5, [pc, #192]	; 2b260 <conf_set_opm_listen_address_both+0xe4>
   2b19c:	add	r5, pc, r5
   2b1a0:	cmp	r1, #0
   2b1a4:	movne	r5, r0
   2b1a8:	mov	r1, sp
   2b1ac:	mov	r0, r4
   2b1b0:	bl	e000 <rb_inet_pton_sock@plt>
   2b1b4:	cmp	r0, #0
   2b1b8:	beq	2b1f4 <conf_set_opm_listen_address_both+0x78>
   2b1bc:	ldrh	r0, [sp]
   2b1c0:	cmp	r6, #0
   2b1c4:	beq	2b200 <conf_set_opm_listen_address_both+0x84>
   2b1c8:	cmp	r0, #10
   2b1cc:	bne	2b224 <conf_set_opm_listen_address_both+0xa8>
   2b1d0:	ldr	r0, [pc, #148]	; 2b26c <conf_set_opm_listen_address_both+0xf0>
   2b1d4:	ldr	r0, [pc, r0]
   2b1d8:	cmp	r0, #0
   2b1dc:	bne	2b218 <conf_set_opm_listen_address_both+0x9c>
   2b1e0:	mov	r0, r4
   2b1e4:	bl	26ee8 <rb_strdup>
   2b1e8:	ldr	r1, [pc, #132]	; 2b274 <conf_set_opm_listen_address_both+0xf8>
   2b1ec:	add	r1, pc, r1
   2b1f0:	b	2b250 <conf_set_opm_listen_address_both+0xd4>
   2b1f4:	ldr	r0, [pc, #104]	; 2b264 <conf_set_opm_listen_address_both+0xe8>
   2b1f8:	add	r0, pc, r0
   2b1fc:	b	2b22c <conf_set_opm_listen_address_both+0xb0>
   2b200:	cmp	r0, #2
   2b204:	bne	2b224 <conf_set_opm_listen_address_both+0xa8>
   2b208:	ldr	r0, [pc, #104]	; 2b278 <conf_set_opm_listen_address_both+0xfc>
   2b20c:	ldr	r0, [pc, r0]
   2b210:	cmp	r0, #0
   2b214:	beq	2b240 <conf_set_opm_listen_address_both+0xc4>
   2b218:	ldr	r0, [pc, #80]	; 2b270 <conf_set_opm_listen_address_both+0xf4>
   2b21c:	add	r0, pc, r0
   2b220:	b	2b22c <conf_set_opm_listen_address_both+0xb0>
   2b224:	ldr	r0, [pc, #60]	; 2b268 <conf_set_opm_listen_address_both+0xec>
   2b228:	add	r0, pc, r0
   2b22c:	mov	r1, r5
   2b230:	mov	r2, r4
   2b234:	bl	d400 <conf_report_error@plt>
   2b238:	sub	sp, fp, #16
   2b23c:	pop	{r4, r5, r6, sl, fp, pc}
   2b240:	mov	r0, r4
   2b244:	bl	26ee8 <rb_strdup>
   2b248:	ldr	r1, [pc, #44]	; 2b27c <conf_set_opm_listen_address_both+0x100>
   2b24c:	add	r1, pc, r1
   2b250:	str	r0, [r1]
   2b254:	sub	sp, fp, #16
   2b258:	pop	{r4, r5, r6, sl, fp, pc}
   2b25c:	.word	0x0001a0ff
   2b260:	.word	0x0001a108
   2b264:	.word	0x0001a0bd
   2b268:	.word	0x0001a0aa
   2b26c:	.word	0x0003b038
   2b270:	.word	0x0001a0da
   2b274:	.word	0x0003b020
   2b278:	.word	0x0003b004
   2b27c:	.word	0x0003afc4

0002b280 <conf_set_opm_listen_port_both>:
   2b280:	mov	ip, r1
   2b284:	ldr	r2, [pc, #108]	; 2b2f8 <conf_set_opm_listen_port_both+0x78>
   2b288:	add	r2, pc, r2
   2b28c:	ldr	r1, [pc, #104]	; 2b2fc <conf_set_opm_listen_port_both+0x7c>
   2b290:	add	r1, pc, r1
   2b294:	cmp	ip, #0
   2b298:	movne	r1, r2
   2b29c:	ldr	r2, [r0]
   2b2a0:	sub	r0, r2, #1
   2b2a4:	movw	r3, #65535	; 0xffff
   2b2a8:	cmp	r0, r3
   2b2ac:	bcc	2b2bc <conf_set_opm_listen_port_both+0x3c>
   2b2b0:	ldr	r0, [pc, #84]	; 2b30c <conf_set_opm_listen_port_both+0x8c>
   2b2b4:	add	r0, pc, r0
   2b2b8:	b	26c18 <conf_report_error>
   2b2bc:	cmp	ip, #0
   2b2c0:	beq	2b2d0 <conf_set_opm_listen_port_both+0x50>
   2b2c4:	ldr	r0, [pc, #52]	; 2b300 <conf_set_opm_listen_port_both+0x80>
   2b2c8:	add	r0, pc, r0
   2b2cc:	b	2b2d8 <conf_set_opm_listen_port_both+0x58>
   2b2d0:	ldr	r0, [pc, #48]	; 2b308 <conf_set_opm_listen_port_both+0x88>
   2b2d4:	add	r0, pc, r0
   2b2d8:	ldrh	r3, [r0]
   2b2dc:	cmp	r3, #0
   2b2e0:	strheq	r2, [r0]
   2b2e4:	bxeq	lr
   2b2e8:	ldr	r0, [pc, #20]	; 2b304 <conf_set_opm_listen_port_both+0x84>
   2b2ec:	add	r0, pc, r0
   2b2f0:	mov	r2, r3
   2b2f4:	b	26c18 <conf_report_error>
   2b2f8:	.word	0x0001a090
   2b2fc:	.word	0x0001a097
   2b300:	.word	0x0003af52
   2b304:	.word	0x0001a061
   2b308:	.word	0x0003af44
   2b30c:	.word	0x0001a082

0002b310 <conf_set_opm_scan_ports_all>:
   2b310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b314:	add	fp, sp, #28
   2b318:	sub	sp, sp, #4
   2b31c:	cmp	r0, #0
   2b320:	beq	2b3f8 <conf_set_opm_scan_ports_all+0xe8>
   2b324:	mov	r4, r2
   2b328:	mov	r5, r1
   2b32c:	mov	r6, r0
   2b330:	movw	r9, #65534	; 0xfffe
   2b334:	ldr	r7, [pc, #196]	; 2b400 <conf_set_opm_scan_ports_all+0xf0>
   2b338:	add	r7, pc, r7
   2b33c:	b	2b3b8 <conf_set_opm_scan_ports_all+0xa8>
   2b340:	ldr	r8, [pc, #188]	; 2b404 <conf_set_opm_scan_ports_all+0xf4>
   2b344:	ldr	r8, [pc, r8]
   2b348:	cmp	r8, #0
   2b34c:	beq	2b384 <conf_set_opm_scan_ports_all+0x74>
   2b350:	ldr	sl, [r6, #8]
   2b354:	ldr	r0, [r8]
   2b358:	ldrh	r1, [r0, #4]
   2b35c:	cmp	sl, r1
   2b360:	bne	2b378 <conf_set_opm_scan_ports_all+0x68>
   2b364:	ldr	r1, [r0]
   2b368:	mov	r0, r4
   2b36c:	bl	d0c4 <strcmp@plt>
   2b370:	cmp	r0, #0
   2b374:	beq	2b3ac <conf_set_opm_scan_ports_all+0x9c>
   2b378:	ldr	r8, [r8, #8]
   2b37c:	cmp	r8, #0
   2b380:	bne	2b354 <conf_set_opm_scan_ports_all+0x44>
   2b384:	mov	r0, #20
   2b388:	bl	26830 <rb_malloc>
   2b38c:	ldr	r1, [r6, #8]
   2b390:	str	r4, [r0]
   2b394:	strh	r1, [r0, #4]
   2b398:	add	r1, r0, #8
   2b39c:	ldr	r2, [pc, #104]	; 2b40c <conf_set_opm_scan_ports_all+0xfc>
   2b3a0:	add	r2, pc, r2
   2b3a4:	bl	26850 <rb_dlinkAdd>
   2b3a8:	b	2b3ec <conf_set_opm_scan_ports_all+0xdc>
   2b3ac:	ldr	r0, [pc, #84]	; 2b408 <conf_set_opm_scan_ports_all+0xf8>
   2b3b0:	add	r0, pc, r0
   2b3b4:	b	2b3e4 <conf_set_opm_scan_ports_all+0xd4>
   2b3b8:	ldrb	r0, [r6, #4]
   2b3bc:	cmp	r0, #2
   2b3c0:	bne	2b3e0 <conf_set_opm_scan_ports_all+0xd0>
   2b3c4:	ldr	r0, [r6, #8]
   2b3c8:	sub	r0, r0, #1
   2b3cc:	cmp	r0, r9
   2b3d0:	bls	2b340 <conf_set_opm_scan_ports_all+0x30>
   2b3d4:	ldr	r0, [pc, #52]	; 2b410 <conf_set_opm_scan_ports_all+0x100>
   2b3d8:	add	r0, pc, r0
   2b3dc:	b	2b3e4 <conf_set_opm_scan_ports_all+0xd4>
   2b3e0:	mov	r0, r7
   2b3e4:	mov	r1, r5
   2b3e8:	bl	d400 <conf_report_error@plt>
   2b3ec:	ldr	r6, [r6]
   2b3f0:	cmp	r6, #0
   2b3f4:	bne	2b3b8 <conf_set_opm_scan_ports_all+0xa8>
   2b3f8:	sub	sp, fp, #28
   2b3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b400:	.word	0x0001a04e
   2b404:	.word	0x0003aed8
   2b408:	.word	0x0001a040
   2b40c:	.word	0x0003ae7c
   2b410:	.word	0x00019fd9

0002b414 <init_operhash>:
   2b414:	push	{fp, lr}
   2b418:	mov	fp, sp
   2b41c:	ldr	r0, [pc, #24]	; 2b43c <init_operhash+0x28>
   2b420:	add	r0, pc, r0
   2b424:	mov	r1, #0
   2b428:	bl	d85c <rb_radixtree_create@plt>
   2b42c:	ldr	r1, [pc, #12]	; 2b440 <init_operhash+0x2c>
   2b430:	add	r1, pc, r1
   2b434:	str	r0, [r1]
   2b438:	pop	{fp, pc}
   2b43c:	.word	0x0001a04c
   2b440:	.word	0x0003adf8

0002b444 <operhash_add>:
   2b444:	push	{r4, r5, r6, r7, fp, lr}
   2b448:	add	fp, sp, #16
   2b44c:	mov	r4, #0
   2b450:	cmp	r0, #0
   2b454:	beq	2b4e0 <operhash_add+0x9c>
   2b458:	mov	r5, r0
   2b45c:	ldrb	r0, [r0]
   2b460:	cmp	r0, #0
   2b464:	beq	2b4e0 <operhash_add+0x9c>
   2b468:	ldr	r0, [pc, #120]	; 2b4e8 <operhash_add+0xa4>
   2b46c:	ldr	r0, [pc, r0]
   2b470:	mov	r1, r5
   2b474:	bl	dee0 <rb_radixtree_retrieve@plt>
   2b478:	cmp	r0, #0
   2b47c:	beq	2b498 <operhash_add+0x54>
   2b480:	mov	r4, r0
   2b484:	ldr	r0, [r0]
   2b488:	add	r0, r0, #1
   2b48c:	str	r0, [r4], #4
   2b490:	mov	r0, r4
   2b494:	pop	{r4, r5, r6, r7, fp, pc}
   2b498:	mov	r0, r5
   2b49c:	bl	dc94 <strlen@plt>
   2b4a0:	mov	r6, r0
   2b4a4:	add	r0, r0, #5
   2b4a8:	bl	2b4f0 <rb_malloc>
   2b4ac:	mov	r7, r0
   2b4b0:	mov	r0, #1
   2b4b4:	mov	r4, r7
   2b4b8:	str	r0, [r4], #4
   2b4bc:	add	r2, r6, #1
   2b4c0:	mov	r0, r4
   2b4c4:	mov	r1, r5
   2b4c8:	bl	d40c <memcpy@plt>
   2b4cc:	ldr	r0, [pc, #24]	; 2b4ec <operhash_add+0xa8>
   2b4d0:	ldr	r0, [pc, r0]
   2b4d4:	mov	r1, r4
   2b4d8:	mov	r2, r7
   2b4dc:	bl	dd9c <rb_radixtree_add@plt>
   2b4e0:	mov	r0, r4
   2b4e4:	pop	{r4, r5, r6, r7, fp, pc}
   2b4e8:	.word	0x0003adbc
   2b4ec:	.word	0x0003ad58

0002b4f0 <rb_malloc>:
   2b4f0:	push	{fp, lr}
   2b4f4:	mov	fp, sp
   2b4f8:	mov	r1, r0
   2b4fc:	mov	r0, #1
   2b500:	bl	cfa4 <calloc@plt>
   2b504:	cmp	r0, #0
   2b508:	popne	{fp, pc}
   2b50c:	bl	d448 <rb_outofmemory@plt>

0002b510 <operhash_find>:
   2b510:	mov	r1, r0
   2b514:	ldr	r0, [pc, #4]	; 2b520 <operhash_find+0x10>
   2b518:	ldr	r0, [pc, r0]
   2b51c:	b	dee0 <rb_radixtree_retrieve@plt>
   2b520:	.word	0x0003ad10

0002b524 <operhash_delete>:
   2b524:	push	{r4, sl, fp, lr}
   2b528:	add	fp, sp, #8
   2b52c:	mov	r1, r0
   2b530:	ldr	r0, [pc, #64]	; 2b578 <operhash_delete+0x54>
   2b534:	ldr	r0, [pc, r0]
   2b538:	bl	dee0 <rb_radixtree_retrieve@plt>
   2b53c:	cmp	r0, #0
   2b540:	popeq	{r4, sl, fp, pc}
   2b544:	mov	r4, r0
   2b548:	ldr	r0, [r0]
   2b54c:	subs	r0, r0, #1
   2b550:	str	r0, [r4]
   2b554:	beq	2b55c <operhash_delete+0x38>
   2b558:	pop	{r4, sl, fp, pc}
   2b55c:	ldr	r0, [pc, #24]	; 2b57c <operhash_delete+0x58>
   2b560:	ldr	r0, [pc, r0]
   2b564:	add	r1, r4, #4
   2b568:	bl	e0c0 <rb_radixtree_delete@plt>
   2b56c:	mov	r0, r4
   2b570:	pop	{r4, sl, fp, lr}
   2b574:	b	2b580 <rb_free>
   2b578:	.word	0x0003acf4
   2b57c:	.word	0x0003acc8

0002b580 <rb_free>:
   2b580:	cmp	r0, #0
   2b584:	bxeq	lr
   2b588:	b	d328 <free@plt>

0002b58c <flood_endgrace>:
   2b58c:	ldr	r1, [r0, #64]	; 0x40
   2b590:	ldr	r2, [r0, #432]	; 0x1b0
   2b594:	orr	r1, r1, #256	; 0x100
   2b598:	str	r1, [r0, #64]	; 0x40
   2b59c:	mov	r0, #0
   2b5a0:	str	r0, [r2, #340]	; 0x154
   2b5a4:	bx	lr

0002b5a8 <flood_recalc>:
   2b5a8:	push	{r4, r5, r6, sl, fp, lr}
   2b5ac:	add	fp, sp, #16
   2b5b0:	ldr	r0, [pc, #192]	; 2b678 <flood_recalc+0xd0>
   2b5b4:	ldr	r0, [pc, r0]
   2b5b8:	ldr	r4, [r0]
   2b5bc:	cmp	r4, #0
   2b5c0:	beq	2b634 <flood_recalc+0x8c>
   2b5c4:	mov	r5, #0
   2b5c8:	ldr	r6, [pc, #172]	; 2b67c <flood_recalc+0xd4>
   2b5cc:	ldr	r6, [pc, r6]
   2b5d0:	ldr	r0, [r4]
   2b5d4:	ldr	r4, [r4, #8]
   2b5d8:	ldrh	r1, [r0, #80]	; 0x50
   2b5dc:	cmp	r1, #4
   2b5e0:	ldrne	r1, [r0, #432]	; 0x1b0
   2b5e4:	cmpne	r1, #0
   2b5e8:	bne	2b5f8 <flood_recalc+0x50>
   2b5ec:	cmp	r4, #0
   2b5f0:	bne	2b5d0 <flood_recalc+0x28>
   2b5f4:	b	2b634 <flood_recalc+0x8c>
   2b5f8:	ldrb	r2, [r0, #65]	; 0x41
   2b5fc:	tst	r2, #1
   2b600:	bne	2b60c <flood_recalc+0x64>
   2b604:	str	r5, [r1, #340]	; 0x154
   2b608:	b	2b61c <flood_recalc+0x74>
   2b60c:	ldr	r2, [r1, #340]	; 0x154
   2b610:	ldr	r3, [r6, #356]	; 0x164
   2b614:	sub	r2, r2, r3
   2b618:	str	r2, [r1, #340]	; 0x154
   2b61c:	ldr	r2, [r1, #340]	; 0x154
   2b620:	cmn	r2, #1
   2b624:	strle	r5, [r1, #340]	; 0x154
   2b628:	bl	2b684 <parse_client_queued>
   2b62c:	cmp	r4, #0
   2b630:	bne	2b5d0 <flood_recalc+0x28>
   2b634:	ldr	r0, [pc, #68]	; 2b680 <flood_recalc+0xd8>
   2b638:	ldr	r0, [pc, r0]
   2b63c:	ldr	r4, [r0]
   2b640:	b	2b658 <flood_recalc+0xb0>
   2b644:	ldr	r2, [r1, #340]	; 0x154
   2b648:	sub	r2, r2, #1
   2b64c:	bic	r2, r2, r2, asr #31
   2b650:	str	r2, [r1, #340]	; 0x154
   2b654:	bl	2b684 <parse_client_queued>
   2b658:	cmp	r4, #0
   2b65c:	popeq	{r4, r5, r6, sl, fp, pc}
   2b660:	ldr	r0, [r4]
   2b664:	ldr	r4, [r4, #8]
   2b668:	ldr	r1, [r0, #432]	; 0x1b0
   2b66c:	cmp	r1, #0
   2b670:	bne	2b644 <flood_recalc+0x9c>
   2b674:	b	2b658 <flood_recalc+0xb0>
   2b678:	.word	0x0002f574
   2b67c:	.word	0x0002f5b0
   2b680:	.word	0x0002f23c

0002b684 <parse_client_queued>:
   2b684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b688:	add	fp, sp, #28
   2b68c:	sub	sp, sp, #4
   2b690:	mov	r4, r0
   2b694:	mov	r6, r0
   2b698:	ldrh	r0, [r6, #64]!	; 0x40
   2b69c:	movw	r1, #16418	; 0x4022
   2b6a0:	tst	r0, r1
   2b6a4:	bne	2b914 <parse_client_queued+0x290>
   2b6a8:	ldrh	r0, [r4, #80]	; 0x50
   2b6ac:	cmp	r0, #8
   2b6b0:	bne	2b75c <parse_client_queued+0xd8>
   2b6b4:	ldr	r0, [pc, #608]	; 2b91c <parse_client_queued+0x298>
   2b6b8:	ldr	r0, [pc, r0]
   2b6bc:	ldr	r7, [r0, #348]	; 0x15c
   2b6c0:	mov	r8, #0
   2b6c4:	ldr	r5, [pc, #596]	; 2b920 <parse_client_queued+0x29c>
   2b6c8:	add	r5, pc, r5
   2b6cc:	movw	r9, #16418	; 0x4022
   2b6d0:	ldr	r0, [r4, #432]	; 0x1b0
   2b6d4:	ldr	r1, [r0, #340]	; 0x154
   2b6d8:	cmp	r1, r7
   2b6dc:	bge	2b748 <parse_client_queued+0xc4>
   2b6e0:	str	r8, [sp]
   2b6e4:	add	r0, r0, #80	; 0x50
   2b6e8:	mov	r1, r5
   2b6ec:	mov	r2, #16384	; 0x4000
   2b6f0:	mov	r3, #0
   2b6f4:	bl	e54c <rb_linebuf_get@plt>
   2b6f8:	cmp	r0, #1
   2b6fc:	blt	2b748 <parse_client_queued+0xc4>
   2b700:	mov	r1, r0
   2b704:	ldrb	r0, [r6]
   2b708:	tst	r0, #2
   2b70c:	bne	2b748 <parse_client_queued+0xc4>
   2b710:	mov	r0, r4
   2b714:	bl	2bb5c <client_dopacket>
   2b718:	ldr	r0, [r4, #432]	; 0x1b0
   2b71c:	ldr	r1, [r0, #340]	; 0x154
   2b720:	add	r1, r1, #1
   2b724:	str	r1, [r0, #340]	; 0x154
   2b728:	ldrh	r1, [r6]
   2b72c:	tst	r1, r9
   2b730:	bne	2b914 <parse_client_queued+0x290>
   2b734:	ldrh	r1, [r4, #80]	; 0x50
   2b738:	cmp	r1, #8
   2b73c:	beq	2b6d0 <parse_client_queued+0x4c>
   2b740:	mov	r1, #0
   2b744:	str	r1, [r0, #340]	; 0x154
   2b748:	ldr	r0, [r4, #432]	; 0x1b0
   2b74c:	ldr	r1, [r0, #340]	; 0x154
   2b750:	cmp	r1, r7
   2b754:	strgt	r7, [r0, #340]	; 0x154
   2b758:	ldrh	r0, [r4, #80]	; 0x50
   2b75c:	sub	r1, r0, #1
   2b760:	cmp	r1, #31
   2b764:	bhi	2b7d4 <parse_client_queued+0x150>
   2b768:	mov	r2, #1
   2b76c:	mov	r3, #-2147483645	; 0x80000003
   2b770:	tst	r3, r2, lsl r1
   2b774:	beq	2b7d4 <parse_client_queued+0x150>
   2b778:	ldrh	r0, [r6]
   2b77c:	movw	r7, #16418	; 0x4022
   2b780:	tst	r0, r7
   2b784:	bne	2b914 <parse_client_queued+0x290>
   2b788:	mov	r8, #0
   2b78c:	ldr	r5, [pc, #400]	; 2b924 <parse_client_queued+0x2a0>
   2b790:	add	r5, pc, r5
   2b794:	ldr	r0, [r4, #432]	; 0x1b0
   2b798:	str	r8, [sp]
   2b79c:	add	r0, r0, #80	; 0x50
   2b7a0:	mov	r1, r5
   2b7a4:	mov	r2, #16384	; 0x4000
   2b7a8:	mov	r3, #0
   2b7ac:	bl	e54c <rb_linebuf_get@plt>
   2b7b0:	cmp	r0, #1
   2b7b4:	blt	2b914 <parse_client_queued+0x290>
   2b7b8:	mov	r1, r0
   2b7bc:	mov	r0, r4
   2b7c0:	bl	2bb5c <client_dopacket>
   2b7c4:	ldrh	r0, [r6]
   2b7c8:	tst	r0, r7
   2b7cc:	beq	2b794 <parse_client_queued+0x110>
   2b7d0:	b	2b914 <parse_client_queued+0x290>
   2b7d4:	ldr	r1, [r6]
   2b7d8:	tst	r1, #8388608	; 0x800000
   2b7dc:	bne	2b778 <parse_client_queued+0xf4>
   2b7e0:	cmp	r0, #64	; 0x40
   2b7e4:	bne	2b914 <parse_client_queued+0x290>
   2b7e8:	ldr	r7, [pc, #312]	; 2b928 <parse_client_queued+0x2a4>
   2b7ec:	ldr	r7, [pc, r7]
   2b7f0:	add	r0, r7, #348	; 0x15c
   2b7f4:	tst	r1, #256	; 0x100
   2b7f8:	addeq	r0, r7, #344	; 0x158
   2b7fc:	ldr	r0, [r0]
   2b800:	ldr	r1, [r7, #352]	; 0x160
   2b804:	mul	r5, r0, r1
   2b808:	ldr	r0, [r4, #24]
   2b80c:	cmp	r0, #0
   2b810:	ldrne	r0, [r0, #36]	; 0x24
   2b814:	cmpne	r0, #0
   2b818:	bne	2b840 <parse_client_queued+0x1bc>
   2b81c:	ldrb	r0, [r4, #57]	; 0x39
   2b820:	tst	r0, #16
   2b824:	ldrne	r0, [r4, #24]
   2b828:	cmpne	r0, #0
   2b82c:	beq	2b860 <parse_client_queued+0x1dc>
   2b830:	ldr	r0, [r0, #36]	; 0x24
   2b834:	cmp	r0, #0
   2b838:	beq	2b854 <parse_client_queued+0x1d0>
   2b83c:	b	2b860 <parse_client_queued+0x1dc>
   2b840:	ldr	r1, [pc, #228]	; 2b92c <parse_client_queued+0x2a8>
   2b844:	add	r1, pc, r1
   2b848:	bl	e594 <privilegeset_in_set@plt>
   2b84c:	cmp	r0, #0
   2b850:	beq	2b81c <parse_client_queued+0x198>
   2b854:	ldr	r0, [r7, #196]	; 0xc4
   2b858:	cmp	r0, #0
   2b85c:	lslne	r5, r5, #2
   2b860:	ldr	r0, [r4, #432]	; 0x1b0
   2b864:	ldr	r0, [r0, #340]	; 0x154
   2b868:	cmp	r0, r5
   2b86c:	bge	2b8f8 <parse_client_queued+0x274>
   2b870:	mov	r9, #0
   2b874:	ldr	r8, [pc, #180]	; 2b930 <parse_client_queued+0x2ac>
   2b878:	add	r8, pc, r8
   2b87c:	movw	sl, #16418	; 0x4022
   2b880:	bl	d07c <rb_current_time@plt>
   2b884:	ldr	r2, [r7, #268]	; 0x10c
   2b888:	ldr	r1, [r4, #432]	; 0x1b0
   2b88c:	ldr	r3, [r1, #48]	; 0x30
   2b890:	add	r2, r2, r3
   2b894:	cmp	r0, r2
   2b898:	blt	2b8f8 <parse_client_queued+0x274>
   2b89c:	str	r9, [sp]
   2b8a0:	add	r0, r1, #80	; 0x50
   2b8a4:	mov	r1, r8
   2b8a8:	mov	r2, #16384	; 0x4000
   2b8ac:	mov	r3, #0
   2b8b0:	bl	e54c <rb_linebuf_get@plt>
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2b8f8 <parse_client_queued+0x274>
   2b8bc:	mov	r1, r0
   2b8c0:	mov	r0, r4
   2b8c4:	bl	2bb5c <client_dopacket>
   2b8c8:	ldrh	r0, [r6]
   2b8cc:	tst	r0, sl
   2b8d0:	bne	2b914 <parse_client_queued+0x290>
   2b8d4:	ldr	r0, [r7, #352]	; 0x160
   2b8d8:	ldr	r1, [r4, #432]	; 0x1b0
   2b8dc:	ldr	r2, [r1, #340]	; 0x154
   2b8e0:	add	r0, r2, r0
   2b8e4:	str	r0, [r1, #340]	; 0x154
   2b8e8:	ldr	r0, [r4, #432]	; 0x1b0
   2b8ec:	ldr	r0, [r0, #340]	; 0x154
   2b8f0:	cmp	r0, r5
   2b8f4:	blt	2b880 <parse_client_queued+0x1fc>
   2b8f8:	ldr	r0, [r7, #352]	; 0x160
   2b8fc:	add	r1, r0, r5
   2b900:	ldr	r0, [r4, #432]	; 0x1b0
   2b904:	ldr	r2, [r0, #340]	; 0x154
   2b908:	cmp	r2, r1
   2b90c:	subge	r1, r1, #1
   2b910:	strge	r1, [r0, #340]	; 0x154
   2b914:	sub	sp, fp, #28
   2b918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b91c:	.word	0x0002f4c4
   2b920:	.word	0x0003ab64
   2b924:	.word	0x0003aa9c
   2b928:	.word	0x0002f390
   2b92c:	.word	0x0001544e
   2b930:	.word	0x0003a9b4

0002b934 <read_packet>:
   2b934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b938:	add	fp, sp, #28
   2b93c:	sub	sp, sp, #4
   2b940:	mov	r5, r1
   2b944:	ldrh	r0, [r5, #64]!	; 0x40
   2b948:	movw	sl, #16418	; 0x4022
   2b94c:	tst	r0, sl
   2b950:	beq	2b95c <read_packet+0x28>
   2b954:	sub	sp, fp, #28
   2b958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b95c:	mov	r4, r1
   2b960:	mov	r6, #0
   2b964:	ldr	r9, [pc, #472]	; 2bb44 <read_packet+0x210>
   2b968:	add	r9, pc, r9
   2b96c:	ldr	r0, [r4, #432]	; 0x1b0
   2b970:	ldr	r0, [r0, #300]	; 0x12c
   2b974:	mov	r1, r9
   2b978:	mov	r2, #16384	; 0x4000
   2b97c:	bl	db38 <rb_read@plt>
   2b980:	mov	r7, r0
   2b984:	cmn	r0, #1
   2b988:	ble	2baf8 <read_packet+0x1c4>
   2b98c:	cmp	r7, #0
   2b990:	beq	2bb30 <read_packet+0x1fc>
   2b994:	ldr	r0, [r4, #432]	; 0x1b0
   2b998:	ldr	r8, [r0, #44]	; 0x2c
   2b99c:	bl	d07c <rb_current_time@plt>
   2b9a0:	cmp	r8, r0
   2b9a4:	bge	2b9b4 <read_packet+0x80>
   2b9a8:	bl	d07c <rb_current_time@plt>
   2b9ac:	ldr	r1, [r4, #432]	; 0x1b0
   2b9b0:	str	r0, [r1, #44]	; 0x2c
   2b9b4:	ldr	r0, [r5]
   2b9b8:	bic	r0, r0, #1
   2b9bc:	str	r0, [r5]
   2b9c0:	ldrh	r0, [r4, #80]	; 0x50
   2b9c4:	cmp	r0, #8
   2b9c8:	cmpne	r0, #2
   2b9cc:	moveq	r6, #1
   2b9d0:	ldr	r0, [r4, #432]	; 0x1b0
   2b9d4:	add	r0, r0, #80	; 0x50
   2b9d8:	mov	r1, r9
   2b9dc:	mov	r2, r7
   2b9e0:	mov	r3, r6
   2b9e4:	bl	d094 <rb_linebuf_parse@plt>
   2b9e8:	ldrh	r0, [r5]
   2b9ec:	tst	r0, sl
   2b9f0:	bne	2b954 <read_packet+0x20>
   2b9f4:	mov	r0, r4
   2b9f8:	bl	2b684 <parse_client_queued>
   2b9fc:	ldrh	r0, [r5]
   2ba00:	tst	r0, sl
   2ba04:	bne	2b954 <read_packet+0x20>
   2ba08:	ldrh	r0, [r4, #80]	; 0x50
   2ba0c:	sub	r0, r0, #1
   2ba10:	cmp	r0, #31
   2ba14:	bhi	2ba58 <read_packet+0x124>
   2ba18:	mov	r1, #1
   2ba1c:	mov	r2, #-2147483645	; 0x80000003
   2ba20:	tst	r2, r1, lsl r0
   2ba24:	beq	2ba58 <read_packet+0x124>
   2ba28:	cmp	r7, #16384	; 0x4000
   2ba2c:	bge	2ba48 <read_packet+0x114>
   2ba30:	ldr	r0, [r4, #432]	; 0x1b0
   2ba34:	ldr	r0, [r0, #300]	; 0x12c
   2ba38:	bl	e570 <rb_get_type@plt>
   2ba3c:	sxtb	r0, r0
   2ba40:	cmp	r0, #0
   2ba44:	bge	2bb0c <read_packet+0x1d8>
   2ba48:	ldrh	r0, [r5]
   2ba4c:	tst	r0, sl
   2ba50:	beq	2b96c <read_packet+0x38>
   2ba54:	b	2b954 <read_packet+0x20>
   2ba58:	ldr	r0, [pc, #232]	; 2bb48 <read_packet+0x214>
   2ba5c:	ldr	r0, [pc, r0]
   2ba60:	ldr	r0, [r0, #340]	; 0x154
   2ba64:	ldr	r1, [r4, #432]	; 0x1b0
   2ba68:	ldr	r1, [r1, #96]	; 0x60
   2ba6c:	cmp	r1, r0
   2ba70:	ble	2ba28 <read_packet+0xf4>
   2ba74:	ldr	r0, [pc, #208]	; 2bb4c <read_packet+0x218>
   2ba78:	ldr	r0, [pc, r0]
   2ba7c:	ldr	r0, [r0, #196]	; 0xc4
   2ba80:	cmp	r0, #0
   2ba84:	beq	2bad8 <read_packet+0x1a4>
   2ba88:	ldr	r0, [r4, #24]
   2ba8c:	cmp	r0, #0
   2ba90:	ldrne	r0, [r0, #36]	; 0x24
   2ba94:	cmpne	r0, #0
   2ba98:	bne	2bac0 <read_packet+0x18c>
   2ba9c:	ldrb	r0, [r4, #57]	; 0x39
   2baa0:	tst	r0, #16
   2baa4:	ldrne	r0, [r4, #24]
   2baa8:	cmpne	r0, #0
   2baac:	beq	2bad8 <read_packet+0x1a4>
   2bab0:	ldr	r0, [r0, #36]	; 0x24
   2bab4:	cmp	r0, #0
   2bab8:	beq	2ba28 <read_packet+0xf4>
   2babc:	b	2bad8 <read_packet+0x1a4>
   2bac0:	ldr	r1, [pc, #136]	; 2bb50 <read_packet+0x21c>
   2bac4:	add	r1, pc, r1
   2bac8:	bl	e594 <privilegeset_in_set@plt>
   2bacc:	cmp	r0, #0
   2bad0:	bne	2ba28 <read_packet+0xf4>
   2bad4:	b	2ba9c <read_packet+0x168>
   2bad8:	ldr	r3, [pc, #120]	; 2bb58 <read_packet+0x224>
   2badc:	add	r3, pc, r3
   2bae0:	mov	r0, r4
   2bae4:	mov	r1, r4
   2bae8:	mov	r2, r4
   2baec:	sub	sp, fp, #28
   2baf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2baf4:	b	e534 <exit_client@plt>
   2baf8:	bl	de38 <__errno_location@plt>
   2bafc:	ldr	r0, [r0]
   2bb00:	bl	dac0 <rb_ignore_errno@plt>
   2bb04:	cmp	r0, #0
   2bb08:	beq	2bb30 <read_packet+0x1fc>
   2bb0c:	ldr	r0, [r4, #432]	; 0x1b0
   2bb10:	ldr	r0, [r0, #300]	; 0x12c
   2bb14:	ldr	r2, [pc, #56]	; 2bb54 <read_packet+0x220>
   2bb18:	ldr	r2, [pc, r2]
   2bb1c:	mov	r1, #1
   2bb20:	mov	r3, r4
   2bb24:	sub	sp, fp, #28
   2bb28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb2c:	b	d304 <rb_setselect@plt>
   2bb30:	mov	r0, r4
   2bb34:	mov	r1, r7
   2bb38:	sub	sp, fp, #28
   2bb3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb40:	b	e408 <error_exit_client@plt>
   2bb44:	.word	0x0003a8c4
   2bb48:	.word	0x0002f120
   2bb4c:	.word	0x0002f104
   2bb50:	.word	0x000151ce
   2bb54:	.word	0x0002ee0c
   2bb58:	.word	0x00019999

0002bb5c <client_dopacket>:
   2bb5c:	cmp	r0, #0
   2bb60:	beq	2bc1c <client_dopacket+0xc0>
   2bb64:	ldrh	r2, [r0, #64]	; 0x40
   2bb68:	movw	r3, #16418	; 0x4022
   2bb6c:	tst	r2, r3
   2bb70:	bxne	lr
   2bb74:	push	{r4, sl, fp, lr}
   2bb78:	add	fp, sp, #8
   2bb7c:	ldr	r2, [pc, #156]	; 2bc20 <client_dopacket+0xc4>
   2bb80:	ldr	r2, [pc, r2]
   2bb84:	ldr	ip, [r2, #432]	; 0x1b0
   2bb88:	ldr	r2, [ip, #116]	; 0x74
   2bb8c:	add	r2, r2, #1
   2bb90:	str	r2, [ip, #116]	; 0x74
   2bb94:	ldr	r3, [r0, #432]	; 0x1b0
   2bb98:	ldr	r2, [r3, #116]	; 0x74
   2bb9c:	add	r2, r2, #1
   2bba0:	str	r2, [r3, #116]	; 0x74
   2bba4:	ldrh	r2, [r3, #126]	; 0x7e
   2bba8:	add	lr, r2, r1
   2bbac:	strh	lr, [r3, #126]	; 0x7e
   2bbb0:	uxth	r2, lr
   2bbb4:	cmp	r2, #1024	; 0x400
   2bbb8:	bcc	2bbd4 <client_dopacket+0x78>
   2bbbc:	and	r4, lr, #64512	; 0xfc00
   2bbc0:	bfc	lr, #10, #22
   2bbc4:	strh	lr, [r3, #126]	; 0x7e
   2bbc8:	ldr	r2, [r3, #120]	; 0x78
   2bbcc:	add	r2, r2, r4, lsr #10
   2bbd0:	str	r2, [r3, #120]	; 0x78
   2bbd4:	ldrh	r2, [ip, #126]	; 0x7e
   2bbd8:	add	r2, r2, r1
   2bbdc:	strh	r2, [ip, #126]	; 0x7e
   2bbe0:	uxth	r3, r2
   2bbe4:	cmp	r3, #1024	; 0x400
   2bbe8:	pop	{r4, sl, fp, lr}
   2bbec:	bcc	2bc08 <client_dopacket+0xac>
   2bbf0:	and	r3, r2, #64512	; 0xfc00
   2bbf4:	bfc	r2, #10, #22
   2bbf8:	strh	r2, [ip, #126]	; 0x7e
   2bbfc:	ldr	r2, [ip, #120]	; 0x78
   2bc00:	add	r2, r2, r3, lsr #10
   2bc04:	str	r2, [ip, #120]	; 0x78
   2bc08:	ldr	r3, [pc, #20]	; 2bc24 <client_dopacket+0xc8>
   2bc0c:	add	r3, pc, r3
   2bc10:	add	r2, r3, r1
   2bc14:	mov	r1, r3
   2bc18:	b	e4d4 <parse@plt>
   2bc1c:	bx	lr
   2bc20:	.word	0x0002efd8
   2bc24:	.word	0x0003a620

0002bc28 <reconstruct_parv>:
   2bc28:	push	{r4, r5, r6, r7, fp, lr}
   2bc2c:	add	fp, sp, #16
   2bc30:	mov	r4, r1
   2bc34:	mov	r5, r0
   2bc38:	ldr	r1, [r1]
   2bc3c:	ldr	r0, [pc, #92]	; 2bca0 <reconstruct_parv+0x78>
   2bc40:	add	r0, pc, r0
   2bc44:	mov	r2, #512	; 0x200
   2bc48:	bl	e510 <rb_strlcpy@plt>
   2bc4c:	cmp	r5, #2
   2bc50:	blt	2bc94 <reconstruct_parv+0x6c>
   2bc54:	sub	r6, r5, #1
   2bc58:	add	r7, r4, #4
   2bc5c:	ldr	r4, [pc, #64]	; 2bca4 <reconstruct_parv+0x7c>
   2bc60:	add	r4, pc, r4
   2bc64:	ldr	r5, [pc, #60]	; 2bca8 <reconstruct_parv+0x80>
   2bc68:	add	r5, pc, r5
   2bc6c:	mov	r0, r4
   2bc70:	mov	r1, r5
   2bc74:	mov	r2, #512	; 0x200
   2bc78:	bl	e7d4 <rb_strlcat@plt>
   2bc7c:	ldr	r1, [r7], #4
   2bc80:	mov	r0, r4
   2bc84:	mov	r2, #512	; 0x200
   2bc88:	bl	e7d4 <rb_strlcat@plt>
   2bc8c:	subs	r6, r6, #1
   2bc90:	bne	2bc6c <reconstruct_parv+0x44>
   2bc94:	ldr	r0, [pc, #16]	; 2bcac <reconstruct_parv+0x84>
   2bc98:	add	r0, pc, r0
   2bc9c:	pop	{r4, r5, r6, r7, fp, pc}
   2bca0:	.word	0x0003e5f4
   2bca4:	.word	0x0003e5d4
   2bca8:	.word	0x0001a500
   2bcac:	.word	0x0003e59c

0002bcb0 <parse>:
   2bcb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2bcb4:	add	fp, sp, #24
   2bcb8:	sub	sp, sp, #328	; 0x148
   2bcbc:	mov	r4, r1
   2bcc0:	mov	r5, r0
   2bcc4:	ldrh	r0, [r0, #64]	; 0x40
   2bcc8:	movw	r1, #16418	; 0x4022
   2bccc:	tst	r0, r1
   2bcd0:	beq	2bcdc <parse+0x2c>
   2bcd4:	sub	sp, fp, #24
   2bcd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bcdc:	mov	r7, r2
   2bce0:	ldrb	r0, [r7, #-1]!
   2bce4:	cmp	r0, #10
   2bce8:	ldrbeq	r0, [r2, #-2]!
   2bcec:	moveq	r1, #0
   2bcf0:	strbeq	r1, [r2, #1]
   2bcf4:	moveq	r7, r2
   2bcf8:	cmp	r0, #13
   2bcfc:	moveq	r0, #0
   2bd00:	strbeq	r0, [r7]
   2bd04:	add	r8, sp, #60	; 0x3c
   2bd08:	mov	r0, r8
   2bd0c:	mov	r1, r4
   2bd10:	bl	e618 <msgbuf_parse@plt>
   2bd14:	cmp	r0, #0
   2bd18:	beq	2bd38 <parse+0x88>
   2bd1c:	ldr	r0, [pc, #600]	; 2bf7c <parse+0x2cc>
   2bd20:	ldr	r0, [pc, r0]
   2bd24:	ldr	r1, [r0, #84]	; 0x54
   2bd28:	add	r1, r1, #1
   2bd2c:	str	r1, [r0, #84]	; 0x54
   2bd30:	sub	sp, fp, #24
   2bd34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bd38:	ldr	r0, [sp, #244]	; 0xf4
   2bd3c:	cmp	r0, #0
   2bd40:	mov	r6, r5
   2bd44:	beq	2bd9c <parse+0xec>
   2bd48:	ldrh	r1, [r5, #80]	; 0x50
   2bd4c:	cmp	r1, #32
   2bd50:	mov	r6, r5
   2bd54:	bne	2bd9c <parse+0xec>
   2bd58:	bl	d424 <find_client@plt>
   2bd5c:	cmp	r0, #0
   2bd60:	beq	2bf14 <parse+0x264>
   2bd64:	mov	r6, r0
   2bd68:	ldr	r0, [r0, #36]	; 0x24
   2bd6c:	cmp	r0, r5
   2bd70:	beq	2bd9c <parse+0xec>
   2bd74:	ldr	r0, [pc, #520]	; 2bf84 <parse+0x2d4>
   2bd78:	ldr	r0, [pc, r0]
   2bd7c:	ldr	r1, [r0, #76]	; 0x4c
   2bd80:	add	r1, r1, #1
   2bd84:	str	r1, [r0, #76]	; 0x4c
   2bd88:	mov	r0, r5
   2bd8c:	mov	r1, r6
   2bd90:	bl	2c15c <cancel_clients>
   2bd94:	sub	sp, fp, #24
   2bd98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bd9c:	ldr	r1, [sp, #252]	; 0xfc
   2bda0:	ldrb	r2, [r1]
   2bda4:	ldr	r0, [pc, #476]	; 2bf88 <parse+0x2d8>
   2bda8:	ldr	r0, [pc, r0]
   2bdac:	ldrb	r2, [r0, r2, lsl #2]
   2bdb0:	tst	r2, #16
   2bdb4:	beq	2bdd8 <parse+0x128>
   2bdb8:	ldrb	r2, [r1, #1]
   2bdbc:	ldrb	r2, [r0, r2, lsl #2]
   2bdc0:	tst	r2, #16
   2bdc4:	beq	2bdd8 <parse+0x128>
   2bdc8:	ldrb	r2, [r1, #2]
   2bdcc:	ldrb	r0, [r0, r2, lsl #2]
   2bdd0:	tst	r0, #16
   2bdd4:	bne	2bf40 <parse+0x290>
   2bdd8:	ldr	r0, [pc, #432]	; 2bf90 <parse+0x2e0>
   2bddc:	ldr	r0, [pc, r0]
   2bde0:	ldr	r0, [r0]
   2bde4:	bl	e6e4 <rb_dictionary_retrieve@plt>
   2bde8:	cmp	r0, #0
   2bdec:	ldrne	r1, [r0]
   2bdf0:	cmpne	r1, #0
   2bdf4:	bne	2be54 <parse+0x1a4>
   2bdf8:	ldrh	r0, [r6, #80]	; 0x50
   2bdfc:	cmp	r0, #64	; 0x40
   2be00:	bne	2be38 <parse+0x188>
   2be04:	ldr	r0, [r6, #24]
   2be08:	cmp	r0, #0
   2be0c:	beq	2be38 <parse+0x188>
   2be10:	ldr	r0, [sp, #252]	; 0xfc
   2be14:	str	r0, [sp]
   2be18:	add	r3, r6, #88	; 0x58
   2be1c:	ldr	r0, [pc, #368]	; 2bf94 <parse+0x2e4>
   2be20:	ldr	r0, [pc, r0]
   2be24:	add	r2, r0, #88	; 0x58
   2be28:	ldr	r1, [pc, #360]	; 2bf98 <parse+0x2e8>
   2be2c:	add	r1, pc, r1
   2be30:	mov	r0, r6
   2be34:	bl	d1e4 <sendto_one@plt>
   2be38:	ldr	r0, [pc, #348]	; 2bf9c <parse+0x2ec>
   2be3c:	ldr	r0, [pc, r0]
   2be40:	ldr	r1, [r0, #72]	; 0x48
   2be44:	add	r1, r1, #1
   2be48:	str	r1, [r0, #72]	; 0x48
   2be4c:	sub	sp, fp, #24
   2be50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2be54:	add	r1, sp, #60	; 0x3c
   2be58:	mov	r2, r5
   2be5c:	mov	r3, r6
   2be60:	bl	2c418 <handle_command>
   2be64:	cmn	r0, #2
   2be68:	bgt	2bcd4 <parse+0x24>
   2be6c:	cmp	r7, r4
   2be70:	bcc	2bcd4 <parse+0x24>
   2be74:	ldr	r5, [pc, #292]	; 2bfa0 <parse+0x2f0>
   2be78:	add	r5, pc, r5
   2be7c:	ldr	r8, [pc, #288]	; 2bfa4 <parse+0x2f4>
   2be80:	add	r8, pc, r8
   2be84:	add	r0, r4, #8
   2be88:	cmp	r0, r7
   2be8c:	bhi	2befc <parse+0x24c>
   2be90:	ldrb	r2, [r4]
   2be94:	ldrb	r3, [r4, #1]
   2be98:	ldrb	r0, [r4, #2]
   2be9c:	ldrb	r1, [r4, #3]
   2bea0:	ldrb	r6, [r4, #4]
   2bea4:	ldrb	ip, [r4, #5]
   2bea8:	ldrb	lr, [r4, #6]
   2beac:	ldrb	r9, [r4, #7]
   2beb0:	str	r0, [sp, #32]
   2beb4:	str	r1, [sp, #36]	; 0x24
   2beb8:	str	r6, [sp, #40]	; 0x28
   2bebc:	str	ip, [sp, #44]	; 0x2c
   2bec0:	str	lr, [sp, #48]	; 0x30
   2bec4:	str	r9, [sp, #52]	; 0x34
   2bec8:	stm	sp, {r0, r1, r6, ip, lr}
   2becc:	str	r9, [sp, #20]
   2bed0:	str	r2, [sp, #24]
   2bed4:	str	r3, [sp, #28]
   2bed8:	mov	r0, #0
   2bedc:	mov	r1, r8
   2bee0:	bl	e0b4 <ilog@plt>
   2bee4:	b	2bf04 <parse+0x254>
   2bee8:	ldrb	r2, [r4], #1
   2beec:	mov	r0, #0
   2bef0:	mov	r1, r5
   2bef4:	mov	r3, r2
   2bef8:	bl	e0b4 <ilog@plt>
   2befc:	cmp	r4, r7
   2bf00:	bls	2bee8 <parse+0x238>
   2bf04:	add	r4, r4, #8
   2bf08:	cmp	r4, r7
   2bf0c:	bls	2be84 <parse+0x1d4>
   2bf10:	b	2bcd4 <parse+0x24>
   2bf14:	ldr	r0, [pc, #100]	; 2bf80 <parse+0x2d0>
   2bf18:	ldr	r0, [pc, r0]
   2bf1c:	ldr	r1, [r0, #80]	; 0x50
   2bf20:	add	r1, r1, #1
   2bf24:	str	r1, [r0, #80]	; 0x50
   2bf28:	ldr	r1, [sp, #244]	; 0xf4
   2bf2c:	mov	r0, r5
   2bf30:	mov	r2, r4
   2bf34:	bl	2bfa8 <remove_unknown>
   2bf38:	sub	sp, fp, #24
   2bf3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf40:	mov	r0, r1
   2bf44:	bl	e468 <atoi@plt>
   2bf48:	ldr	r1, [pc, #60]	; 2bf8c <parse+0x2dc>
   2bf4c:	ldr	r1, [pc, r1]
   2bf50:	ldr	r2, [r1, #88]	; 0x58
   2bf54:	add	r2, r2, #1
   2bf58:	str	r2, [r1, #88]	; 0x58
   2bf5c:	ldr	r3, [sp, #260]	; 0x104
   2bf60:	add	r1, r8, #204	; 0xcc
   2bf64:	str	r1, [sp]
   2bf68:	mov	r1, r5
   2bf6c:	mov	r2, r6
   2bf70:	bl	2c1e4 <do_numeric>
   2bf74:	sub	sp, fp, #24
   2bf78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf7c:	.word	0x0002ec9c
   2bf80:	.word	0x0002eaa4
   2bf84:	.word	0x0002ec44
   2bf88:	.word	0x0002ec50
   2bf8c:	.word	0x0002ea70
   2bf90:	.word	0x0002eb50
   2bf94:	.word	0x0002ed38
   2bf98:	.word	0x00019656
   2bf9c:	.word	0x0002eb80
   2bfa0:	.word	0x00019629
   2bfa4:	.word	0x0001962a

0002bfa8 <remove_unknown>:
   2bfa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bfac:	add	fp, sp, #24
   2bfb0:	sub	sp, sp, #16
   2bfb4:	mov	r6, r2
   2bfb8:	mov	r4, r1
   2bfbc:	mov	r8, r0
   2bfc0:	mov	r0, r1
   2bfc4:	bl	dc94 <strlen@plt>
   2bfc8:	mov	r7, r0
   2bfcc:	ldrb	r0, [r4]
   2bfd0:	ldr	r1, [pc, #360]	; 2c140 <remove_unknown+0x198>
   2bfd4:	ldr	r1, [pc, r1]
   2bfd8:	ldr	r0, [r1, r0, lsl #2]
   2bfdc:	and	r5, r0, #16
   2bfe0:	cmp	r7, #3
   2bfe4:	bne	2bff0 <remove_unknown+0x48>
   2bfe8:	cmp	r5, #0
   2bfec:	bne	2c004 <remove_unknown+0x5c>
   2bff0:	mov	r0, r4
   2bff4:	mov	r1, #46	; 0x2e
   2bff8:	bl	dce8 <strchr@plt>
   2bffc:	cmp	r0, #0
   2c000:	beq	2c080 <remove_unknown+0xd8>
   2c004:	add	r7, r8, #88	; 0x58
   2c008:	str	r7, [sp]
   2c00c:	str	r4, [sp, #4]
   2c010:	ldr	r2, [pc, #300]	; 2c144 <remove_unknown+0x19c>
   2c014:	add	r2, pc, r2
   2c018:	mov	r0, #8
   2c01c:	mov	r1, #0
   2c020:	mov	r3, r6
   2c024:	bl	d640 <sendto_realops_snomask@plt>
   2c028:	ldr	r0, [pc, #280]	; 2c148 <remove_unknown+0x1a0>
   2c02c:	ldr	r0, [pc, r0]
   2c030:	add	r2, r0, #88	; 0x58
   2c034:	ldr	r1, [r8, #36]	; 0x24
   2c038:	ldrh	r3, [r1, #80]	; 0x50
   2c03c:	cmp	r3, #32
   2c040:	bne	2c060 <remove_unknown+0xb8>
   2c044:	ldrb	r1, [r1, #396]	; 0x18c
   2c048:	cmp	r1, #0
   2c04c:	beq	2c060 <remove_unknown+0xb8>
   2c050:	ldrb	r1, [r0, #396]!	; 0x18c
   2c054:	cmp	r1, #0
   2c058:	subeq	r0, r0, #308	; 0x134
   2c05c:	mov	r2, r0
   2c060:	stm	sp, {r6, r7}
   2c064:	ldr	r1, [pc, #224]	; 2c14c <remove_unknown+0x1a4>
   2c068:	add	r1, pc, r1
   2c06c:	mov	r0, r8
   2c070:	mov	r3, r4
   2c074:	bl	d1e4 <sendto_one@plt>
   2c078:	sub	sp, fp, #24
   2c07c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c080:	cmp	r5, #0
   2c084:	beq	2c078 <remove_unknown+0xd0>
   2c088:	cmp	r7, #9
   2c08c:	bne	2c118 <remove_unknown+0x170>
   2c090:	ldrh	r0, [r4]
   2c094:	ldrb	r1, [r4, #2]
   2c098:	mov	r2, #0
   2c09c:	strb	r2, [sp, #15]
   2c0a0:	strb	r1, [sp, #14]
   2c0a4:	strh	r0, [sp, #12]
   2c0a8:	add	r1, sp, #12
   2c0ac:	mov	r0, #0
   2c0b0:	bl	df04 <find_server@plt>
   2c0b4:	cmp	r0, #0
   2c0b8:	beq	2c078 <remove_unknown+0xd0>
   2c0bc:	ldr	r0, [r0, #36]	; 0x24
   2c0c0:	cmp	r0, r8
   2c0c4:	bne	2c078 <remove_unknown+0xd0>
   2c0c8:	ldr	r1, [pc, #132]	; 2c154 <remove_unknown+0x1ac>
   2c0cc:	ldr	r1, [pc, r1]
   2c0d0:	add	r0, r1, #88	; 0x58
   2c0d4:	ldr	r3, [r8, #36]	; 0x24
   2c0d8:	ldrh	r2, [r3, #80]	; 0x50
   2c0dc:	cmp	r2, #32
   2c0e0:	mov	r2, r0
   2c0e4:	bne	2c108 <remove_unknown+0x160>
   2c0e8:	ldrb	r2, [r3, #396]	; 0x18c
   2c0ec:	cmp	r2, #0
   2c0f0:	mov	r2, r0
   2c0f4:	beq	2c108 <remove_unknown+0x160>
   2c0f8:	ldrb	r2, [r1, #396]!	; 0x18c
   2c0fc:	cmp	r2, #0
   2c100:	subeq	r1, r1, #308	; 0x134
   2c104:	mov	r2, r1
   2c108:	str	r0, [sp]
   2c10c:	ldr	r1, [pc, #68]	; 2c158 <remove_unknown+0x1b0>
   2c110:	add	r1, pc, r1
   2c114:	b	2c06c <remove_unknown+0xc4>
   2c118:	add	r0, r8, #88	; 0x58
   2c11c:	str	r0, [sp]
   2c120:	ldr	r2, [pc, #40]	; 2c150 <remove_unknown+0x1a8>
   2c124:	add	r2, pc, r2
   2c128:	mov	r0, #8
   2c12c:	mov	r1, #0
   2c130:	mov	r3, r6
   2c134:	bl	d640 <sendto_realops_snomask@plt>
   2c138:	sub	sp, fp, #24
   2c13c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c140:	.word	0x0002ea24
   2c144:	.word	0x0001968e
   2c148:	.word	0x0002eb2c
   2c14c:	.word	0x00019664
   2c150:	.word	0x000195d4
   2c154:	.word	0x0002ea8c
   2c158:	.word	0x00019604

0002c15c <cancel_clients>:
   2c15c:	push	{fp, lr}
   2c160:	mov	fp, sp
   2c164:	sub	sp, sp, #16
   2c168:	ldrh	r2, [r1, #80]	; 0x50
   2c16c:	cmp	r2, #32
   2c170:	cmpne	r2, #4
   2c174:	bne	2c19c <cancel_clients+0x40>
   2c178:	ldr	r2, [r1, #36]	; 0x24
   2c17c:	add	r0, r0, #88	; 0x58
   2c180:	add	r2, r2, #88	; 0x58
   2c184:	str	r2, [sp]
   2c188:	str	r0, [sp, #4]
   2c18c:	add	r3, r1, #88	; 0x58
   2c190:	ldr	r2, [pc, #68]	; 2c1dc <cancel_clients+0x80>
   2c194:	add	r2, pc, r2
   2c198:	b	2c1c8 <cancel_clients+0x6c>
   2c19c:	ldr	r2, [r1, #36]	; 0x24
   2c1a0:	add	ip, r0, #88	; 0x58
   2c1a4:	add	r3, r1, #163	; 0xa3
   2c1a8:	add	r0, r1, #152	; 0x98
   2c1ac:	add	r2, r2, #88	; 0x58
   2c1b0:	stm	sp, {r0, r3}
   2c1b4:	str	r2, [sp, #8]
   2c1b8:	str	ip, [sp, #12]
   2c1bc:	add	r3, r1, #88	; 0x58
   2c1c0:	ldr	r2, [pc, #24]	; 2c1e0 <cancel_clients+0x84>
   2c1c4:	add	r2, pc, r2
   2c1c8:	mov	r0, #8
   2c1cc:	mov	r1, #0
   2c1d0:	bl	d640 <sendto_realops_snomask@plt>
   2c1d4:	mov	sp, fp
   2c1d8:	pop	{fp, pc}
   2c1dc:	.word	0x000194c4
   2c1e0:	.word	0x000194af

0002c1e4 <do_numeric>:
   2c1e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c1e8:	add	fp, sp, #28
   2c1ec:	sub	sp, sp, #28
   2c1f0:	cmp	r3, #2
   2c1f4:	blt	2c39c <do_numeric+0x1b8>
   2c1f8:	mov	r5, r0
   2c1fc:	ldrh	r0, [r2, #80]	; 0x50
   2c200:	cmp	r0, #32
   2c204:	bne	2c39c <do_numeric+0x1b8>
   2c208:	mov	r6, r1
   2c20c:	ldr	r0, [fp, #8]
   2c210:	cmp	r5, #100	; 0x64
   2c214:	addlt	r5, r5, #100	; 0x64
   2c218:	sub	r1, r3, #1
   2c21c:	cmp	r3, #4
   2c220:	str	r2, [sp, #24]
   2c224:	str	r1, [sp, #20]
   2c228:	blt	2c268 <do_numeric+0x84>
   2c22c:	sub	r9, r3, #3
   2c230:	mov	r8, r0
   2c234:	add	sl, r0, #8
   2c238:	ldr	r7, [pc, #436]	; 2c3f4 <do_numeric+0x210>
   2c23c:	add	r7, pc, r7
   2c240:	ldr	r4, [pc, #432]	; 2c3f8 <do_numeric+0x214>
   2c244:	add	r4, pc, r4
   2c248:	ldr	r2, [sl], #4
   2c24c:	mov	r0, r7
   2c250:	mov	r1, r4
   2c254:	bl	e3a8 <sprintf@plt>
   2c258:	add	r7, r7, r0
   2c25c:	subs	r9, r9, #1
   2c260:	bne	2c248 <do_numeric+0x64>
   2c264:	b	2c274 <do_numeric+0x90>
   2c268:	mov	r8, r0
   2c26c:	ldr	r7, [pc, #380]	; 2c3f0 <do_numeric+0x20c>
   2c270:	add	r7, pc, r7
   2c274:	ldr	r0, [sp, #20]
   2c278:	ldr	r2, [r8, r0, lsl #2]
   2c27c:	ldr	r1, [pc, #376]	; 2c3fc <do_numeric+0x218>
   2c280:	add	r1, pc, r1
   2c284:	mov	r0, r7
   2c288:	bl	e3a8 <sprintf@plt>
   2c28c:	ldr	r0, [r8, #4]
   2c290:	bl	d424 <find_client@plt>
   2c294:	cmp	r0, #0
   2c298:	beq	2c2f0 <do_numeric+0x10c>
   2c29c:	ldrh	r7, [r0, #80]	; 0x50
   2c2a0:	cmp	r7, #4
   2c2a4:	bne	2c340 <do_numeric+0x15c>
   2c2a8:	movw	r0, #401	; 0x191
   2c2ac:	sub	r0, r5, r0
   2c2b0:	cmp	r0, #2
   2c2b4:	ldr	r2, [sp, #24]
   2c2b8:	bcc	2c39c <do_numeric+0x1b8>
   2c2bc:	ldr	r0, [pc, #316]	; 2c400 <do_numeric+0x21c>
   2c2c0:	add	r0, pc, r0
   2c2c4:	add	r1, r6, #88	; 0x58
   2c2c8:	stm	sp, {r1, r5}
   2c2cc:	str	r0, [sp, #8]
   2c2d0:	add	r3, r2, #88	; 0x58
   2c2d4:	ldr	r2, [pc, #296]	; 2c404 <do_numeric+0x220>
   2c2d8:	add	r2, pc, r2
   2c2dc:	mov	r0, #256	; 0x100
   2c2e0:	mov	r1, #2
   2c2e4:	bl	d640 <sendto_realops_snomask@plt>
   2c2e8:	sub	sp, fp, #28
   2c2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c2f0:	ldr	r0, [r8, #4]
   2c2f4:	bl	d748 <find_channel@plt>
   2c2f8:	cmp	r0, #0
   2c2fc:	ldr	r2, [sp, #24]
   2c300:	beq	2c39c <do_numeric+0x1b8>
   2c304:	mov	r3, r0
   2c308:	ldr	r0, [r0, #236]	; 0xec
   2c30c:	ldr	r1, [pc, #252]	; 2c410 <do_numeric+0x22c>
   2c310:	add	r1, pc, r1
   2c314:	ldr	r7, [pc, #248]	; 2c414 <do_numeric+0x230>
   2c318:	add	r7, pc, r7
   2c31c:	str	r7, [sp]
   2c320:	str	r5, [sp, #4]
   2c324:	str	r0, [sp, #8]
   2c328:	str	r1, [sp, #12]
   2c32c:	mov	r0, r6
   2c330:	mov	r1, #0
   2c334:	bl	d430 <sendto_channel_flags@plt>
   2c338:	sub	sp, fp, #28
   2c33c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c340:	ldr	r1, [r0, #36]	; 0x24
   2c344:	cmp	r1, r6
   2c348:	ldr	r2, [sp, #24]
   2c34c:	beq	2c39c <do_numeric+0x1b8>
   2c350:	movw	r3, #501	; 0x1f5
   2c354:	cmp	r5, r3
   2c358:	cmpeq	r7, #64	; 0x40
   2c35c:	beq	2c390 <do_numeric+0x1ac>
   2c360:	ldrh	r3, [r1, #80]	; 0x50
   2c364:	cmp	r3, #32
   2c368:	bne	2c388 <do_numeric+0x1a4>
   2c36c:	ldrb	r3, [r1, #396]	; 0x18c
   2c370:	cmp	r3, #0
   2c374:	beq	2c3a4 <do_numeric+0x1c0>
   2c378:	ldrb	r3, [r2, #396]!	; 0x18c
   2c37c:	cmp	r3, #0
   2c380:	subeq	r2, r2, #308	; 0x134
   2c384:	b	2c3a8 <do_numeric+0x1c4>
   2c388:	add	r2, r2, #88	; 0x58
   2c38c:	b	2c3c8 <do_numeric+0x1e4>
   2c390:	ldr	r3, [r0, #64]	; 0x40
   2c394:	ands	r3, r3, #8192	; 0x2000
   2c398:	beq	2c360 <do_numeric+0x17c>
   2c39c:	sub	sp, fp, #28
   2c3a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c3a4:	add	r2, r2, #88	; 0x58
   2c3a8:	ldrb	r1, [r1, #396]	; 0x18c
   2c3ac:	cmp	r1, #0
   2c3b0:	beq	2c3c8 <do_numeric+0x1e4>
   2c3b4:	mov	r1, r0
   2c3b8:	ldrb	r3, [r1, #396]!	; 0x18c
   2c3bc:	cmp	r3, #0
   2c3c0:	subeq	r1, r1, #308	; 0x134
   2c3c4:	b	2c3cc <do_numeric+0x1e8>
   2c3c8:	add	r1, r0, #88	; 0x58
   2c3cc:	ldr	r3, [pc, #52]	; 2c408 <do_numeric+0x224>
   2c3d0:	add	r3, pc, r3
   2c3d4:	stm	sp, {r1, r3}
   2c3d8:	ldr	r1, [pc, #44]	; 2c40c <do_numeric+0x228>
   2c3dc:	add	r1, pc, r1
   2c3e0:	mov	r3, r5
   2c3e4:	bl	d1e4 <sendto_one@plt>
   2c3e8:	sub	sp, fp, #28
   2c3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c3f0:	.word	0x0003e1c4
   2c3f4:	.word	0x0003e1f8
   2c3f8:	.word	0x0001b420
   2c3fc:	.word	0x00019e6f
   2c400:	.word	0x0003e174
   2c404:	.word	0x0001945d
   2c408:	.word	0x0003e064
   2c40c:	.word	0x00019386
   2c410:	.word	0x0003e124
   2c414:	.word	0x0001944e

0002c418 <handle_command>:
   2c418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c41c:	add	fp, sp, #28
   2c420:	sub	sp, sp, #92	; 0x5c
   2c424:	mov	r6, r1
   2c428:	mov	r7, r0
   2c42c:	mov	r4, r2
   2c430:	ldrh	r0, [r4, #64]!	; 0x40
   2c434:	mvn	r8, #0
   2c438:	movw	r1, #16418	; 0x4022
   2c43c:	tst	r0, r1
   2c440:	beq	2c450 <handle_command+0x38>
   2c444:	mov	r0, r8
   2c448:	sub	sp, fp, #28
   2c44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c450:	mov	r5, r2
   2c454:	ldrh	r0, [r2, #80]	; 0x50
   2c458:	cmp	r0, #32
   2c45c:	ldreq	r1, [r7, #8]
   2c460:	addeq	r1, r1, #1
   2c464:	streq	r1, [r7, #8]
   2c468:	ldr	r1, [r7, #4]
   2c46c:	add	r1, r1, #1
   2c470:	str	r1, [r7, #4]
   2c474:	ldrb	r1, [r3, #82]	; 0x52
   2c478:	add	r1, r7, r1, lsl #3
   2c47c:	ldr	sl, [r1, #24]
   2c480:	ldr	ip, [r6, #200]	; 0xc8
   2c484:	cmp	ip, sl
   2c488:	bcc	2c4b0 <handle_command+0x98>
   2c48c:	ldr	lr, [r1, #20]
   2c490:	cmp	sl, #0
   2c494:	beq	2c590 <handle_command+0x178>
   2c498:	add	r1, r6, sl, lsl #2
   2c49c:	ldr	r1, [r1, #200]	; 0xc8
   2c4a0:	cmp	r1, #0
   2c4a4:	ldrbne	r1, [r1]
   2c4a8:	cmpne	r1, #0
   2c4ac:	bne	2c590 <handle_command+0x178>
   2c4b0:	add	r9, r5, #88	; 0x58
   2c4b4:	cmp	r0, #32
   2c4b8:	bne	2c540 <handle_command+0x128>
   2c4bc:	ldr	r0, [r7]
   2c4c0:	stm	sp, {r0, ip}
   2c4c4:	str	sl, [sp, #8]
   2c4c8:	ldr	r2, [pc, #260]	; 2c5d4 <handle_command+0x1bc>
   2c4cc:	add	r2, pc, r2
   2c4d0:	mov	r0, #256	; 0x100
   2c4d4:	mov	r1, #0
   2c4d8:	mov	r3, r9
   2c4dc:	bl	d640 <sendto_realops_snomask@plt>
   2c4e0:	ldr	r2, [r6, #200]	; 0xc8
   2c4e4:	ldr	r0, [r7]
   2c4e8:	stm	sp, {r0, r9}
   2c4ec:	ldr	r1, [pc, #228]	; 2c5d8 <handle_command+0x1c0>
   2c4f0:	add	r1, pc, r1
   2c4f4:	mov	r0, #5
   2c4f8:	mov	r3, sl
   2c4fc:	bl	e0b4 <ilog@plt>
   2c500:	ldr	r3, [r6, #200]	; 0xc8
   2c504:	ldr	r0, [r7]
   2c508:	str	sl, [sp]
   2c50c:	str	r0, [sp, #4]
   2c510:	add	r4, sp, #12
   2c514:	ldr	r2, [pc, #192]	; 2c5dc <handle_command+0x1c4>
   2c518:	add	r2, pc, r2
   2c51c:	mov	r0, r4
   2c520:	mov	r1, #80	; 0x50
   2c524:	bl	de74 <snprintf@plt>
   2c528:	mov	r0, r5
   2c52c:	mov	r1, r5
   2c530:	mov	r2, r5
   2c534:	mov	r3, r4
   2c538:	bl	e534 <exit_client@plt>
   2c53c:	b	2c444 <handle_command+0x2c>
   2c540:	ldrb	r0, [r5, #88]	; 0x58
   2c544:	ldr	r1, [r7]
   2c548:	str	r1, [sp]
   2c54c:	ldr	r1, [pc, #116]	; 2c5c8 <handle_command+0x1b0>
   2c550:	add	r1, pc, r1
   2c554:	cmp	r0, #0
   2c558:	moveq	r9, r1
   2c55c:	ldr	r0, [pc, #104]	; 2c5cc <handle_command+0x1b4>
   2c560:	ldr	r0, [pc, r0]
   2c564:	add	r2, r0, #88	; 0x58
   2c568:	ldr	r1, [pc, #96]	; 2c5d0 <handle_command+0x1b8>
   2c56c:	add	r1, pc, r1
   2c570:	mov	r0, r5
   2c574:	mov	r3, r9
   2c578:	bl	d1e4 <sendto_one@plt>
   2c57c:	ldrb	r0, [r4, #1]
   2c580:	tst	r0, #32
   2c584:	bne	2c5b4 <handle_command+0x19c>
   2c588:	mvn	r8, #0
   2c58c:	b	2c444 <handle_command+0x2c>
   2c590:	add	r0, r6, #204	; 0xcc
   2c594:	str	r0, [sp]
   2c598:	mov	r0, r6
   2c59c:	mov	r1, r5
   2c5a0:	mov	r2, r3
   2c5a4:	mov	r3, ip
   2c5a8:	blx	lr
   2c5ac:	mov	r8, #1
   2c5b0:	b	2c444 <handle_command+0x2c>
   2c5b4:	ldrh	r0, [r5, #80]	; 0x50
   2c5b8:	mov	r8, #1
   2c5bc:	cmp	r0, #64	; 0x40
   2c5c0:	mvnne	r8, #0
   2c5c4:	b	2c444 <handle_command+0x2c>
   2c5c8:	.word	0x00014ded
   2c5cc:	.word	0x0002e5f8
   2c5d0:	.word	0x00018ffa
   2c5d4:	.word	0x000190bf
   2c5d8:	.word	0x000190f5
   2c5dc:	.word	0x0001910b

0002c5e0 <handle_encap>:
   2c5e0:	push	{r4, r5, r6, sl, fp, lr}
   2c5e4:	add	fp, sp, #16
   2c5e8:	sub	sp, sp, #8
   2c5ec:	mov	r4, r2
   2c5f0:	mov	r5, r1
   2c5f4:	mov	r6, r0
   2c5f8:	ldr	r0, [pc, #120]	; 2c678 <handle_encap+0x98>
   2c5fc:	ldr	r0, [pc, r0]
   2c600:	ldr	r0, [r0]
   2c604:	mov	r1, r3
   2c608:	bl	e6e4 <rb_dictionary_retrieve@plt>
   2c60c:	cmp	r0, #0
   2c610:	ldrne	r1, [r0]
   2c614:	cmpne	r1, #0
   2c618:	bne	2c624 <handle_encap+0x44>
   2c61c:	sub	sp, fp, #16
   2c620:	pop	{r4, r5, r6, sl, fp, pc}
   2c624:	ldr	r3, [fp, #8]
   2c628:	ldr	r2, [r0, #56]	; 0x38
   2c62c:	cmp	r2, r3
   2c630:	bhi	2c61c <handle_encap+0x3c>
   2c634:	ldr	r1, [fp, #12]
   2c638:	ldr	ip, [r0, #52]	; 0x34
   2c63c:	cmp	r2, #0
   2c640:	beq	2c65c <handle_encap+0x7c>
   2c644:	add	r0, r1, r2, lsl #2
   2c648:	ldr	r0, [r0, #-4]
   2c64c:	cmp	r0, #0
   2c650:	ldrbne	r0, [r0]
   2c654:	cmpne	r0, #0
   2c658:	beq	2c61c <handle_encap+0x3c>
   2c65c:	str	r1, [sp]
   2c660:	mov	r0, r6
   2c664:	mov	r1, r5
   2c668:	mov	r2, r4
   2c66c:	blx	ip
   2c670:	sub	sp, fp, #16
   2c674:	pop	{r4, r5, r6, sl, fp, pc}
   2c678:	.word	0x0002e330

0002c67c <clear_hash_parse>:
   2c67c:	push	{fp, lr}
   2c680:	mov	fp, sp
   2c684:	ldr	r1, [pc, #28]	; 2c6a8 <clear_hash_parse+0x2c>
   2c688:	ldr	r1, [pc, r1]
   2c68c:	ldr	r0, [pc, #24]	; 2c6ac <clear_hash_parse+0x30>
   2c690:	add	r0, pc, r0
   2c694:	bl	dfb8 <rb_dictionary_create@plt>
   2c698:	ldr	r1, [pc, #16]	; 2c6b0 <clear_hash_parse+0x34>
   2c69c:	ldr	r1, [pc, r1]
   2c6a0:	str	r0, [r1]
   2c6a4:	pop	{fp, pc}
   2c6a8:	.word	0x0002e228
   2c6ac:	.word	0x00018e09
   2c6b0:	.word	0x0002e290

0002c6b4 <mod_add_cmd>:
   2c6b4:	push	{r4, r5, fp, lr}
   2c6b8:	add	fp, sp, #8
   2c6bc:	cmp	r0, #0
   2c6c0:	popeq	{r4, r5, fp, pc}
   2c6c4:	mov	r4, r0
   2c6c8:	ldr	r1, [r0]
   2c6cc:	ldr	r5, [pc, #76]	; 2c720 <mod_add_cmd+0x6c>
   2c6d0:	ldr	r5, [pc, r5]
   2c6d4:	ldr	r0, [r5]
   2c6d8:	bl	d5d4 <rb_dictionary_find@plt>
   2c6dc:	cmp	r0, #0
   2c6e0:	beq	2c6fc <mod_add_cmd+0x48>
   2c6e4:	ldr	r2, [r4]
   2c6e8:	ldr	r1, [pc, #52]	; 2c724 <mod_add_cmd+0x70>
   2c6ec:	add	r1, pc, r1
   2c6f0:	mov	r0, #0
   2c6f4:	pop	{r4, r5, fp, lr}
   2c6f8:	b	e0b4 <ilog@plt>
   2c6fc:	mov	r0, #0
   2c700:	str	r0, [r4, #4]
   2c704:	str	r0, [r4, #8]
   2c708:	str	r0, [r4, #12]
   2c70c:	ldr	r1, [r4]
   2c710:	ldr	r0, [r5]
   2c714:	mov	r2, r4
   2c718:	pop	{r4, r5, fp, lr}
   2c71c:	b	d70c <rb_dictionary_add@plt>
   2c720:	.word	0x0002e25c
   2c724:	.word	0x00018df8

0002c728 <mod_del_cmd>:
   2c728:	push	{r4, sl, fp, lr}
   2c72c:	add	fp, sp, #8
   2c730:	cmp	r0, #0
   2c734:	popeq	{r4, sl, fp, pc}
   2c738:	mov	r4, r0
   2c73c:	ldr	r1, [r0]
   2c740:	ldr	r0, [pc, #44]	; 2c774 <mod_del_cmd+0x4c>
   2c744:	ldr	r0, [pc, r0]
   2c748:	ldr	r0, [r0]
   2c74c:	bl	d838 <rb_dictionary_delete@plt>
   2c750:	cmp	r0, #0
   2c754:	beq	2c75c <mod_del_cmd+0x34>
   2c758:	pop	{r4, sl, fp, pc}
   2c75c:	ldr	r2, [r4]
   2c760:	ldr	r1, [pc, #16]	; 2c778 <mod_del_cmd+0x50>
   2c764:	add	r1, pc, r1
   2c768:	mov	r0, #0
   2c76c:	pop	{r4, sl, fp, lr}
   2c770:	b	e0b4 <ilog@plt>
   2c774:	.word	0x0002e1e8
   2c778:	.word	0x00018d9f

0002c77c <m_not_oper>:
   2c77c:	mov	r0, r2
   2c780:	ldr	r2, [pc, #8]	; 2c790 <m_not_oper+0x14>
   2c784:	add	r2, pc, r2
   2c788:	movw	r1, #481	; 0x1e1
   2c78c:	b	dc88 <sendto_one_numeric@plt>
   2c790:	.word	0x0001451b

0002c794 <m_unregistered>:
   2c794:	push	{r4, sl, fp, lr}
   2c798:	add	fp, sp, #8
   2c79c:	mov	r4, r1
   2c7a0:	ldrh	r0, [r1, #80]	; 0x50
   2c7a4:	sub	r0, r0, #1
   2c7a8:	cmp	r0, #31
   2c7ac:	bhi	2c7c4 <m_unregistered+0x30>
   2c7b0:	mov	r1, #1
   2c7b4:	mov	r2, #-2147483645	; 0x80000003
   2c7b8:	tst	r2, r1, lsl r0
   2c7bc:	beq	2c7c4 <m_unregistered+0x30>
   2c7c0:	pop	{r4, sl, fp, pc}
   2c7c4:	ldr	r0, [r4, #432]	; 0x1b0
   2c7c8:	ldr	r0, [r0, #272]	; 0x110
   2c7cc:	cmp	r0, #0
   2c7d0:	popne	{r4, sl, fp, pc}
   2c7d4:	ldr	r0, [pc, #40]	; 2c804 <m_unregistered+0x70>
   2c7d8:	ldr	r0, [pc, r0]
   2c7dc:	add	r2, r0, #88	; 0x58
   2c7e0:	ldr	r1, [pc, #32]	; 2c808 <m_unregistered+0x74>
   2c7e4:	add	r1, pc, r1
   2c7e8:	mov	r0, r4
   2c7ec:	bl	d1e4 <sendto_one@plt>
   2c7f0:	ldr	r0, [r4, #432]	; 0x1b0
   2c7f4:	ldr	r1, [r0, #272]	; 0x110
   2c7f8:	add	r1, r1, #1
   2c7fc:	str	r1, [r0, #272]	; 0x110
   2c800:	pop	{r4, sl, fp, pc}
   2c804:	.word	0x0002e380
   2c808:	.word	0x00018d3c

0002c80c <m_registered>:
   2c80c:	mov	r0, r1
   2c810:	add	r3, r2, #88	; 0x58
   2c814:	ldr	r1, [pc, #16]	; 2c82c <m_registered+0x20>
   2c818:	ldr	r1, [pc, r1]
   2c81c:	add	r2, r1, #88	; 0x58
   2c820:	ldr	r1, [pc, #8]	; 2c830 <m_registered+0x24>
   2c824:	add	r1, pc, r1
   2c828:	b	d1e4 <sendto_one@plt>
   2c82c:	.word	0x0002e340
   2c830:	.word	0x00018d1f

0002c834 <m_ignore>:
   2c834:	bx	lr

0002c838 <privilegeset_in_set>:
   2c838:	push	{fp, lr}
   2c83c:	mov	fp, sp
   2c840:	ldr	r0, [r0, #12]
   2c844:	bl	cfc8 <strstr@plt>
   2c848:	cmp	r0, #0
   2c84c:	movwne	r0, #1
   2c850:	pop	{fp, pc}

0002c854 <privilegeset_set_new>:
   2c854:	push	{r4, r5, r6, r7, fp, lr}
   2c858:	add	fp, sp, #16
   2c85c:	mov	r4, r2
   2c860:	mov	r5, r1
   2c864:	mov	r7, r0
   2c868:	bl	2c8fc <privilegeset_get_any>
   2c86c:	cmp	r0, #0
   2c870:	beq	2c8b0 <privilegeset_set_new+0x5c>
   2c874:	mov	r6, r0
   2c878:	ldr	r0, [r0]
   2c87c:	cmp	r0, #0
   2c880:	blt	2c898 <privilegeset_set_new+0x44>
   2c884:	ldr	r1, [pc, #108]	; 2c8f8 <privilegeset_set_new+0xa4>
   2c888:	add	r1, pc, r1
   2c88c:	mov	r0, #0
   2c890:	mov	r2, r7
   2c894:	bl	e0b4 <ilog@plt>
   2c898:	ldr	r1, [r6]
   2c89c:	ldr	r0, [r6, #12]
   2c8a0:	bic	r1, r1, #-2147483648	; 0x80000000
   2c8a4:	str	r1, [r6]
   2c8a8:	bl	2c950 <rb_free>
   2c8ac:	b	2c8e0 <privilegeset_set_new+0x8c>
   2c8b0:	mov	r0, #32
   2c8b4:	bl	2c95c <rb_malloc>
   2c8b8:	mov	r6, r0
   2c8bc:	mov	r0, #0
   2c8c0:	str	r0, [r6]
   2c8c4:	str	r0, [r6, #4]
   2c8c8:	mov	r0, r7
   2c8cc:	bl	2c97c <rb_strdup>
   2c8d0:	str	r0, [r6, #8]
   2c8d4:	add	r1, r6, #20
   2c8d8:	mov	r0, r6
   2c8dc:	bl	2c9b4 <rb_dlinkAdd>
   2c8e0:	mov	r0, r5
   2c8e4:	bl	2c97c <rb_strdup>
   2c8e8:	str	r0, [r6, #12]
   2c8ec:	str	r4, [r6, #16]
   2c8f0:	mov	r0, r6
   2c8f4:	pop	{r4, r5, r6, r7, fp, pc}
   2c8f8:	.word	0x00018ee8

0002c8fc <privilegeset_get_any>:
   2c8fc:	push	{r4, r5, r6, sl, fp, lr}
   2c900:	add	fp, sp, #16
   2c904:	ldr	r6, [pc, #64]	; 2c94c <privilegeset_get_any+0x50>
   2c908:	ldr	r6, [pc, r6]
   2c90c:	cmp	r6, #0
   2c910:	beq	2c940 <privilegeset_get_any+0x44>
   2c914:	mov	r4, r0
   2c918:	ldr	r5, [r6]
   2c91c:	ldr	r0, [r5, #8]
   2c920:	mov	r1, r4
   2c924:	bl	d340 <rb_strcasecmp@plt>
   2c928:	cmp	r0, #0
   2c92c:	moveq	r0, r5
   2c930:	popeq	{r4, r5, r6, sl, fp, pc}
   2c934:	ldr	r6, [r6, #8]
   2c938:	cmp	r6, #0
   2c93c:	bne	2c918 <privilegeset_get_any+0x1c>
   2c940:	mov	r5, #0
   2c944:	mov	r0, r5
   2c948:	pop	{r4, r5, r6, sl, fp, pc}
   2c94c:	.word	0x0003df2c

0002c950 <rb_free>:
   2c950:	cmp	r0, #0
   2c954:	bxeq	lr
   2c958:	b	d328 <free@plt>

0002c95c <rb_malloc>:
   2c95c:	push	{fp, lr}
   2c960:	mov	fp, sp
   2c964:	mov	r1, r0
   2c968:	mov	r0, #1
   2c96c:	bl	cfa4 <calloc@plt>
   2c970:	cmp	r0, #0
   2c974:	popne	{fp, pc}
   2c978:	bl	d448 <rb_outofmemory@plt>

0002c97c <rb_strdup>:
   2c97c:	push	{r4, r5, fp, lr}
   2c980:	add	fp, sp, #8
   2c984:	mov	r4, r0
   2c988:	bl	dc94 <strlen@plt>
   2c98c:	add	r0, r0, #1
   2c990:	bl	da90 <malloc@plt>
   2c994:	cmp	r0, #0
   2c998:	beq	2c9b0 <rb_strdup+0x34>
   2c99c:	mov	r5, r0
   2c9a0:	mov	r1, r4
   2c9a4:	bl	d928 <strcpy@plt>
   2c9a8:	mov	r0, r5
   2c9ac:	pop	{r4, r5, fp, pc}
   2c9b0:	bl	d448 <rb_outofmemory@plt>

0002c9b4 <rb_dlinkAdd>:
   2c9b4:	push	{fp, lr}
   2c9b8:	mov	fp, sp
   2c9bc:	cmp	r0, #0
   2c9c0:	beq	2ca24 <rb_dlinkAdd+0x70>
   2c9c4:	cmp	r1, #0
   2c9c8:	beq	2ca44 <rb_dlinkAdd+0x90>
   2c9cc:	mov	r2, #0
   2c9d0:	stm	r1, {r0, r2}
   2c9d4:	ldr	r0, [pc, #136]	; 2ca64 <rb_dlinkAdd+0xb0>
   2c9d8:	ldr	r0, [pc, r0]
   2c9dc:	str	r0, [r1, #8]
   2c9e0:	cmp	r0, #0
   2c9e4:	beq	2c9f4 <rb_dlinkAdd+0x40>
   2c9e8:	add	r0, r0, #4
   2c9ec:	str	r1, [r0]
   2c9f0:	b	2ca08 <rb_dlinkAdd+0x54>
   2c9f4:	ldr	r0, [pc, #108]	; 2ca68 <rb_dlinkAdd+0xb4>
   2c9f8:	add	r0, pc, r0
   2c9fc:	ldr	r2, [r0, #4]!
   2ca00:	cmp	r2, #0
   2ca04:	streq	r1, [r0]
   2ca08:	ldr	r0, [pc, #92]	; 2ca6c <rb_dlinkAdd+0xb8>
   2ca0c:	add	r0, pc, r0
   2ca10:	str	r1, [r0]
   2ca14:	ldr	r1, [r0, #8]
   2ca18:	add	r1, r1, #1
   2ca1c:	str	r1, [r0, #8]
   2ca20:	pop	{fp, pc}
   2ca24:	ldr	r0, [pc, #68]	; 2ca70 <rb_dlinkAdd+0xbc>
   2ca28:	add	r0, pc, r0
   2ca2c:	ldr	r1, [pc, #64]	; 2ca74 <rb_dlinkAdd+0xc0>
   2ca30:	add	r1, pc, r1
   2ca34:	ldr	r3, [pc, #60]	; 2ca78 <rb_dlinkAdd+0xc4>
   2ca38:	add	r3, pc, r3
   2ca3c:	mov	r2, #143	; 0x8f
   2ca40:	bl	e7e0 <__assert_fail@plt>
   2ca44:	ldr	r0, [pc, #48]	; 2ca7c <rb_dlinkAdd+0xc8>
   2ca48:	add	r0, pc, r0
   2ca4c:	ldr	r1, [pc, #44]	; 2ca80 <rb_dlinkAdd+0xcc>
   2ca50:	add	r1, pc, r1
   2ca54:	ldr	r3, [pc, #40]	; 2ca84 <rb_dlinkAdd+0xd0>
   2ca58:	add	r3, pc, r3
   2ca5c:	mov	r2, #144	; 0x90
   2ca60:	bl	e7e0 <__assert_fail@plt>
   2ca64:	.word	0x0003de5c
   2ca68:	.word	0x0003de3c
   2ca6c:	.word	0x0003de28
   2ca70:	.word	0x00013be9
   2ca74:	.word	0x00013b86
   2ca78:	.word	0x00013be6
   2ca7c:	.word	0x00013b64
   2ca80:	.word	0x00013b66
   2ca84:	.word	0x00013bc6

0002ca88 <privilegeset_extend>:
   2ca88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ca8c:	add	fp, sp, #24
   2ca90:	mov	r8, r3
   2ca94:	mov	r4, r2
   2ca98:	mov	r7, r1
   2ca9c:	mov	r6, r0
   2caa0:	mov	r0, r1
   2caa4:	bl	2c8fc <privilegeset_get_any>
   2caa8:	cmp	r0, #0
   2caac:	beq	2caec <privilegeset_extend+0x64>
   2cab0:	mov	r5, r0
   2cab4:	ldr	r0, [r0]
   2cab8:	cmp	r0, #0
   2cabc:	blt	2cad4 <privilegeset_extend+0x4c>
   2cac0:	ldr	r1, [pc, #176]	; 2cb78 <privilegeset_extend+0xf0>
   2cac4:	add	r1, pc, r1
   2cac8:	mov	r0, #0
   2cacc:	mov	r2, r7
   2cad0:	bl	e0b4 <ilog@plt>
   2cad4:	ldr	r1, [r5]
   2cad8:	ldr	r0, [r5, #12]
   2cadc:	bic	r1, r1, #-2147483648	; 0x80000000
   2cae0:	str	r1, [r5]
   2cae4:	bl	2c950 <rb_free>
   2cae8:	b	2cb1c <privilegeset_extend+0x94>
   2caec:	mov	r0, #32
   2caf0:	bl	2c95c <rb_malloc>
   2caf4:	mov	r5, r0
   2caf8:	mov	r0, #0
   2cafc:	str	r0, [r5]
   2cb00:	str	r0, [r5, #4]
   2cb04:	mov	r0, r7
   2cb08:	bl	2c97c <rb_strdup>
   2cb0c:	str	r0, [r5, #8]
   2cb10:	add	r1, r5, #20
   2cb14:	mov	r0, r5
   2cb18:	bl	2c9b4 <rb_dlinkAdd>
   2cb1c:	str	r8, [r5, #16]
   2cb20:	ldr	r0, [r6, #12]
   2cb24:	bl	dc94 <strlen@plt>
   2cb28:	mov	r7, r0
   2cb2c:	mov	r0, r4
   2cb30:	bl	dc94 <strlen@plt>
   2cb34:	add	r0, r7, r0
   2cb38:	add	r0, r0, #2
   2cb3c:	bl	2c95c <rb_malloc>
   2cb40:	str	r0, [r5, #12]
   2cb44:	ldr	r1, [r6, #12]
   2cb48:	bl	d928 <strcpy@plt>
   2cb4c:	ldr	r6, [r5, #12]
   2cb50:	mov	r0, r6
   2cb54:	bl	dc94 <strlen@plt>
   2cb58:	add	r0, r6, r0
   2cb5c:	mov	r1, #32
   2cb60:	strh	r1, [r0]
   2cb64:	ldr	r0, [r5, #12]
   2cb68:	mov	r1, r4
   2cb6c:	bl	d8bc <strcat@plt>
   2cb70:	mov	r0, r5
   2cb74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cb78:	.word	0x00018cac

0002cb7c <privilegeset_get>:
   2cb7c:	push	{fp, lr}
   2cb80:	mov	fp, sp
   2cb84:	bl	2c8fc <privilegeset_get_any>
   2cb88:	cmp	r0, #0
   2cb8c:	moveq	r0, #0
   2cb90:	popeq	{fp, pc}
   2cb94:	ldr	r1, [r0]
   2cb98:	cmp	r1, #0
   2cb9c:	movwlt	r0, #0
   2cba0:	pop	{fp, pc}

0002cba4 <privilegeset_ref>:
   2cba4:	ldr	r1, [r0, #4]
   2cba8:	add	r1, r1, #1
   2cbac:	str	r1, [r0, #4]
   2cbb0:	bx	lr

0002cbb4 <privilegeset_unref>:
   2cbb4:	push	{r4, sl, fp, lr}
   2cbb8:	add	fp, sp, #8
   2cbbc:	mov	r4, r0
   2cbc0:	ldr	r0, [r0, #4]
   2cbc4:	cmp	r0, #1
   2cbc8:	blt	2cbd8 <privilegeset_unref+0x24>
   2cbcc:	sub	r0, r0, #1
   2cbd0:	str	r0, [r4, #4]
   2cbd4:	b	2cbf0 <privilegeset_unref+0x3c>
   2cbd8:	ldr	r2, [r4, #8]
   2cbdc:	ldr	r1, [pc, #72]	; 2cc2c <privilegeset_unref+0x78>
   2cbe0:	add	r1, pc, r1
   2cbe4:	mov	r0, #0
   2cbe8:	bl	e0b4 <ilog@plt>
   2cbec:	ldr	r0, [r4, #4]
   2cbf0:	cmp	r0, #0
   2cbf4:	popne	{r4, sl, fp, pc}
   2cbf8:	ldr	r0, [r4]
   2cbfc:	cmn	r0, #1
   2cc00:	ble	2cc08 <privilegeset_unref+0x54>
   2cc04:	pop	{r4, sl, fp, pc}
   2cc08:	add	r0, r4, #20
   2cc0c:	bl	2cc30 <rb_dlinkDelete>
   2cc10:	ldr	r0, [r4, #8]
   2cc14:	bl	2c950 <rb_free>
   2cc18:	ldr	r0, [r4, #12]
   2cc1c:	bl	2c950 <rb_free>
   2cc20:	mov	r0, r4
   2cc24:	pop	{r4, sl, fp, lr}
   2cc28:	b	2c950 <rb_free>
   2cc2c:	.word	0x00018ba5

0002cc30 <rb_dlinkDelete>:
   2cc30:	cmp	r0, #0
   2cc34:	beq	2cc84 <rb_dlinkDelete+0x54>
   2cc38:	ldr	ip, [pc, #108]	; 2ccac <rb_dlinkDelete+0x7c>
   2cc3c:	add	ip, pc, ip
   2cc40:	ldmib	r0, {r2, r3}
   2cc44:	add	r1, r3, #4
   2cc48:	cmp	r3, #0
   2cc4c:	addeq	r1, ip, #4
   2cc50:	str	r2, [r1]
   2cc54:	ldmib	r0, {r1, r2}
   2cc58:	cmp	r1, #0
   2cc5c:	mov	r3, ip
   2cc60:	addne	r3, r1, #8
   2cc64:	str	r2, [r3]
   2cc68:	mov	r1, #0
   2cc6c:	str	r1, [r0, #4]
   2cc70:	str	r1, [r0, #8]
   2cc74:	ldr	r0, [ip, #8]
   2cc78:	sub	r0, r0, #1
   2cc7c:	str	r0, [ip, #8]
   2cc80:	bx	lr
   2cc84:	push	{fp, lr}
   2cc88:	mov	fp, sp
   2cc8c:	ldr	r0, [pc, #28]	; 2ccb0 <rb_dlinkDelete+0x80>
   2cc90:	add	r0, pc, r0
   2cc94:	ldr	r1, [pc, #24]	; 2ccb4 <rb_dlinkDelete+0x84>
   2cc98:	add	r1, pc, r1
   2cc9c:	ldr	r3, [pc, #20]	; 2ccb8 <rb_dlinkDelete+0x88>
   2cca0:	add	r3, pc, r3
   2cca4:	mov	r2, #235	; 0xeb
   2cca8:	bl	e7e0 <__assert_fail@plt>
   2ccac:	.word	0x0003dbf8
   2ccb0:	.word	0x0001391c
   2ccb4:	.word	0x0001391e
   2ccb8:	.word	0x000139b9

0002ccbc <privilegeset_mark_all_illegal>:
   2ccbc:	push	{r4, r5, r6, r7, fp, lr}
   2ccc0:	add	fp, sp, #16
   2ccc4:	ldr	r6, [pc, #96]	; 2cd2c <privilegeset_mark_all_illegal+0x70>
   2ccc8:	ldr	r6, [pc, r6]
   2cccc:	cmp	r6, #0
   2ccd0:	popeq	{r4, r5, r6, r7, fp, pc}
   2ccd4:	ldr	r4, [pc, #84]	; 2cd30 <privilegeset_mark_all_illegal+0x74>
   2ccd8:	add	r4, pc, r4
   2ccdc:	ldr	r5, [pc, #80]	; 2cd34 <privilegeset_mark_all_illegal+0x78>
   2cce0:	add	r5, pc, r5
   2cce4:	ldr	r7, [r6]
   2cce8:	ldr	r0, [r7, #8]
   2ccec:	mov	r1, r4
   2ccf0:	bl	d0c4 <strcmp@plt>
   2ccf4:	cmp	r0, #0
   2ccf8:	beq	2cd1c <privilegeset_mark_all_illegal+0x60>
   2ccfc:	ldr	r1, [r7]
   2cd00:	ldr	r0, [r7, #12]
   2cd04:	orr	r1, r1, #-2147483648	; 0x80000000
   2cd08:	str	r1, [r7]
   2cd0c:	bl	2c950 <rb_free>
   2cd10:	mov	r0, r5
   2cd14:	bl	2c97c <rb_strdup>
   2cd18:	str	r0, [r7, #12]
   2cd1c:	ldr	r6, [r6, #8]
   2cd20:	cmp	r6, #0
   2cd24:	bne	2cce4 <privilegeset_mark_all_illegal+0x28>
   2cd28:	pop	{r4, r5, r6, r7, fp, pc}
   2cd2c:	.word	0x0003db6c
   2cd30:	.word	0x0001433c
   2cd34:	.word	0x00018b25

0002cd38 <privilegeset_delete_all_illegal>:
   2cd38:	push	{r4, sl, fp, lr}
   2cd3c:	add	fp, sp, #8
   2cd40:	ldr	r4, [pc, #32]	; 2cd68 <privilegeset_delete_all_illegal+0x30>
   2cd44:	ldr	r4, [pc, r4]
   2cd48:	b	2cd5c <privilegeset_delete_all_illegal+0x24>
   2cd4c:	ldr	r0, [r4]
   2cd50:	ldr	r4, [r4, #8]
   2cd54:	bl	dafc <privilegeset_ref@plt>
   2cd58:	bl	e630 <privilegeset_unref@plt>
   2cd5c:	cmp	r4, #0
   2cd60:	popeq	{r4, sl, fp, pc}
   2cd64:	b	2cd4c <privilegeset_delete_all_illegal+0x14>
   2cd68:	.word	0x0003daf0

0002cd6c <privilegeset_report>:
   2cd6c:	push	{r4, r5, r6, sl, fp, lr}
   2cd70:	add	fp, sp, #16
   2cd74:	sub	sp, sp, #8
   2cd78:	ldr	r6, [pc, #72]	; 2cdc8 <privilegeset_report+0x5c>
   2cd7c:	ldr	r6, [pc, r6]
   2cd80:	cmp	r6, #0
   2cd84:	beq	2cdc0 <privilegeset_report+0x54>
   2cd88:	mov	r4, r0
   2cd8c:	ldr	r5, [pc, #56]	; 2cdcc <privilegeset_report+0x60>
   2cd90:	add	r5, pc, r5
   2cd94:	ldr	r0, [r6]
   2cd98:	ldr	r3, [r0, #8]
   2cd9c:	ldr	r0, [r0, #12]
   2cda0:	str	r0, [sp]
   2cda4:	mov	r0, r4
   2cda8:	mov	r1, #249	; 0xf9
   2cdac:	mov	r2, r5
   2cdb0:	bl	dc88 <sendto_one_numeric@plt>
   2cdb4:	ldr	r6, [r6, #8]
   2cdb8:	cmp	r6, #0
   2cdbc:	bne	2cd94 <privilegeset_report+0x28>
   2cdc0:	sub	sp, fp, #16
   2cdc4:	pop	{r4, r5, r6, sl, fp, pc}
   2cdc8:	.word	0x0003dab8
   2cdcc:	.word	0x00018a15

0002cdd0 <ratelimit_client>:
   2cdd0:	push	{r4, r5, r6, r7, fp, lr}
   2cdd4:	add	fp, sp, #16
   2cdd8:	mov	r4, r1
   2cddc:	mov	r5, r0
   2cde0:	ldr	r0, [r0, #432]	; 0x1b0
   2cde4:	ldr	r0, [r0, #420]	; 0x1a4
   2cde8:	cmp	r0, #0
   2cdec:	bne	2ce0c <ratelimit_client+0x3c>
   2cdf0:	bl	d07c <rb_current_time@plt>
   2cdf4:	ldr	r1, [pc, #172]	; 2cea8 <ratelimit_client+0xd8>
   2cdf8:	ldr	r1, [pc, r1]
   2cdfc:	ldr	r1, [r1, #328]	; 0x148
   2ce00:	sub	r0, r0, r1
   2ce04:	ldr	r1, [r5, #432]	; 0x1b0
   2ce08:	str	r0, [r1, #420]	; 0x1a4
   2ce0c:	ldr	r6, [pc, #152]	; 2ceac <ratelimit_client+0xdc>
   2ce10:	ldr	r6, [pc, r6]
   2ce14:	ldr	r0, [r6, #328]	; 0x148
   2ce18:	cmp	r0, r4
   2ce1c:	movcc	r4, r0
   2ce20:	ldr	r0, [r5, #432]	; 0x1b0
   2ce24:	ldr	r7, [r0, #420]	; 0x1a4
   2ce28:	bl	d07c <rb_current_time@plt>
   2ce2c:	ldr	r1, [r6, #328]	; 0x148
   2ce30:	sub	r0, r0, r1
   2ce34:	cmp	r7, r0
   2ce38:	ble	2ce70 <ratelimit_client+0xa0>
   2ce3c:	ldr	r0, [r5, #432]	; 0x1b0
   2ce40:	ldr	r0, [r0, #420]	; 0x1a4
   2ce44:	add	r6, r0, r4
   2ce48:	bl	d07c <rb_current_time@plt>
   2ce4c:	cmp	r6, r0
   2ce50:	bls	2ce90 <ratelimit_client+0xc0>
   2ce54:	ldr	r0, [pc, #84]	; 2ceb0 <ratelimit_client+0xe0>
   2ce58:	ldr	r0, [pc, r0]
   2ce5c:	ldr	r1, [r0, #128]	; 0x80
   2ce60:	add	r1, r1, #1
   2ce64:	str	r1, [r0, #128]	; 0x80
   2ce68:	mov	r0, #0
   2ce6c:	pop	{r4, r5, r6, r7, fp, pc}
   2ce70:	bl	d07c <rb_current_time@plt>
   2ce74:	add	r0, r0, r4
   2ce78:	ldr	r1, [r6, #328]	; 0x148
   2ce7c:	sub	r0, r0, r1
   2ce80:	ldr	r1, [r5, #432]	; 0x1b0
   2ce84:	str	r0, [r1, #420]	; 0x1a4
   2ce88:	mov	r0, #1
   2ce8c:	pop	{r4, r5, r6, r7, fp, pc}
   2ce90:	ldr	r0, [r5, #432]	; 0x1b0
   2ce94:	ldr	r1, [r0, #420]	; 0x1a4
   2ce98:	add	r1, r1, r4
   2ce9c:	str	r1, [r0, #420]	; 0x1a4
   2cea0:	mov	r0, #1
   2cea4:	pop	{r4, r5, r6, r7, fp, pc}
   2cea8:	.word	0x0002dd84
   2ceac:	.word	0x0002dd6c
   2ceb0:	.word	0x0002db64

0002ceb4 <ratelimit_client_who>:
   2ceb4:	ldr	r2, [r0, #432]	; 0x1b0
   2ceb8:	ldr	r3, [r2, #424]	; 0x1a8
   2cebc:	cmp	r3, #0
   2cec0:	subne	r0, r3, #1
   2cec4:	strne	r0, [r2, #424]	; 0x1a8
   2cec8:	movne	r0, #1
   2cecc:	bxne	lr
   2ced0:	b	2cdd0 <ratelimit_client>

0002ced4 <credit_client_join>:
   2ced4:	ldr	r0, [r0, #432]	; 0x1b0
   2ced8:	ldr	r1, [r0, #424]	; 0x1a8
   2cedc:	add	r1, r1, #1
   2cee0:	str	r1, [r0, #424]	; 0x1a8
   2cee4:	bx	lr

0002cee8 <delay_exit_length>:
   2cee8:	ldr	r0, [pc, #8]	; 2cef8 <delay_exit_length+0x10>
   2ceec:	add	r0, pc, r0
   2cef0:	ldr	r0, [r0, #8]
   2cef4:	bx	lr
   2cef8:	.word	0x0003d954

0002cefc <init_reject>:
   2cefc:	push	{fp, lr}
   2cf00:	mov	fp, sp
   2cf04:	mov	r0, #128	; 0x80
   2cf08:	bl	d418 <rb_new_patricia@plt>
   2cf0c:	ldr	r1, [pc, #112]	; 2cf84 <init_reject+0x88>
   2cf10:	add	r1, pc, r1
   2cf14:	str	r0, [r1]
   2cf18:	mov	r0, #128	; 0x80
   2cf1c:	bl	d418 <rb_new_patricia@plt>
   2cf20:	ldr	r1, [pc, #96]	; 2cf88 <init_reject+0x8c>
   2cf24:	add	r1, pc, r1
   2cf28:	str	r0, [r1]
   2cf2c:	ldr	r0, [pc, #88]	; 2cf8c <init_reject+0x90>
   2cf30:	add	r0, pc, r0
   2cf34:	ldr	r1, [pc, #84]	; 2cf90 <init_reject+0x94>
   2cf38:	add	r1, pc, r1
   2cf3c:	mov	r2, #0
   2cf40:	mov	r3, #10
   2cf44:	bl	d0e8 <rb_event_add@plt>
   2cf48:	ldr	r0, [pc, #68]	; 2cf94 <init_reject+0x98>
   2cf4c:	add	r0, pc, r0
   2cf50:	ldr	r1, [pc, #64]	; 2cf98 <init_reject+0x9c>
   2cf54:	add	r1, pc, r1
   2cf58:	mov	r2, #0
   2cf5c:	mov	r3, #60	; 0x3c
   2cf60:	bl	d0e8 <rb_event_add@plt>
   2cf64:	ldr	r0, [pc, #48]	; 2cf9c <init_reject+0xa0>
   2cf68:	add	r0, pc, r0
   2cf6c:	ldr	r1, [pc, #44]	; 2cfa0 <init_reject+0xa4>
   2cf70:	add	r1, pc, r1
   2cf74:	mov	r2, #0
   2cf78:	mov	r3, #10
   2cf7c:	pop	{fp, lr}
   2cf80:	b	d0e8 <rb_event_add@plt>
   2cf84:	.word	0x0003d93c
   2cf88:	.word	0x0003d92c
   2cf8c:	.word	0x0001887e
   2cf90:	.word	0x00000064
   2cf94:	.word	0x0001886e
   2cf98:	.word	0x000001ac
   2cf9c:	.word	0x00018861
   2cfa0:	.word	0x00000228

0002cfa4 <reject_exit>:
   2cfa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cfa8:	add	fp, sp, #28
   2cfac:	sub	sp, sp, #12
   2cfb0:	ldr	r8, [pc, #300]	; 2d0e4 <reject_exit+0x140>
   2cfb4:	ldr	r8, [pc, r8]
   2cfb8:	cmp	r8, #0
   2cfbc:	beq	2d0c4 <reject_exit+0x120>
   2cfc0:	ldr	r4, [pc, #288]	; 2d0e8 <reject_exit+0x144>
   2cfc4:	add	r4, pc, r4
   2cfc8:	mov	r9, #0
   2cfcc:	ldr	r0, [pc, #280]	; 2d0ec <reject_exit+0x148>
   2cfd0:	ldr	r0, [pc, r0]
   2cfd4:	add	r5, r0, #88	; 0x58
   2cfd8:	ldr	sl, [pc, #272]	; 2d0f0 <reject_exit+0x14c>
   2cfdc:	add	sl, pc, sl
   2cfe0:	ldr	r6, [r8]
   2cfe4:	ldr	r8, [r8, #8]
   2cfe8:	strb	r9, [r4]
   2cfec:	ldr	r0, [r6, #16]
   2cff0:	cmp	r0, #0
   2cff4:	beq	2d04c <reject_exit+0xa8>
   2cff8:	bl	d010 <get_user_ban_reason@plt>
   2cffc:	ldr	r1, [pc, #240]	; 2d0f4 <reject_exit+0x150>
   2d000:	add	r1, pc, r1
   2d004:	str	r1, [sp]
   2d008:	str	r0, [sp, #4]
   2d00c:	mov	r0, r4
   2d010:	mov	r1, #512	; 0x200
   2d014:	ldr	r2, [pc, #220]	; 2d0f8 <reject_exit+0x154>
   2d018:	add	r2, pc, r2
   2d01c:	mov	r3, r5
   2d020:	bl	de74 <snprintf@plt>
   2d024:	ldr	r7, [r6, #12]
   2d028:	mov	r0, r4
   2d02c:	bl	dc94 <strlen@plt>
   2d030:	mov	r2, r0
   2d034:	mov	r0, r7
   2d038:	mov	r1, r4
   2d03c:	bl	e738 <rb_write@plt>
   2d040:	ldr	r0, [r6, #16]
   2d044:	bl	d184 <deref_conf@plt>
   2d048:	b	2d09c <reject_exit+0xf8>
   2d04c:	ldr	r0, [r6, #20]
   2d050:	cmp	r0, #0
   2d054:	beq	2d09c <reject_exit+0xf8>
   2d058:	ldr	r1, [pc, #156]	; 2d0fc <reject_exit+0x158>
   2d05c:	add	r1, pc, r1
   2d060:	str	r1, [sp]
   2d064:	str	r0, [sp, #4]
   2d068:	mov	r0, r4
   2d06c:	mov	r1, #512	; 0x200
   2d070:	ldr	r2, [pc, #136]	; 2d100 <reject_exit+0x15c>
   2d074:	add	r2, pc, r2
   2d078:	mov	r3, r5
   2d07c:	bl	de74 <snprintf@plt>
   2d080:	ldr	r7, [r6, #12]
   2d084:	mov	r0, r4
   2d088:	bl	dc94 <strlen@plt>
   2d08c:	mov	r2, r0
   2d090:	mov	r0, r7
   2d094:	mov	r1, r4
   2d098:	bl	e738 <rb_write@plt>
   2d09c:	ldr	r0, [r6, #12]
   2d0a0:	mov	r1, sl
   2d0a4:	mov	r2, #43	; 0x2b
   2d0a8:	bl	e738 <rb_write@plt>
   2d0ac:	ldr	r0, [r6, #12]
   2d0b0:	bl	db5c <rb_close@plt>
   2d0b4:	mov	r0, r6
   2d0b8:	bl	2dc38 <rb_free>
   2d0bc:	cmp	r8, #0
   2d0c0:	bne	2cfe0 <reject_exit+0x3c>
   2d0c4:	ldr	r0, [pc, #56]	; 2d104 <reject_exit+0x160>
   2d0c8:	add	r0, pc, r0
   2d0cc:	mov	r1, #0
   2d0d0:	str	r1, [r0]
   2d0d4:	str	r1, [r0, #4]
   2d0d8:	str	r1, [r0, #8]
   2d0dc:	sub	sp, fp, #28
   2d0e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0e4:	.word	0x0003d88c
   2d0e8:	.word	0x0003d8a8
   2d0ec:	.word	0x0002db88
   2d0f0:	.word	0x000187fe
   2d0f4:	.word	0x0001433d
   2d0f8:	.word	0x000187ee
   2d0fc:	.word	0x000142e1
   2d100:	.word	0x000187c4
   2d104:	.word	0x0003d778

0002d108 <reject_expires>:
   2d108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d10c:	add	fp, sp, #28
   2d110:	sub	sp, sp, #4
   2d114:	ldr	r5, [pc, #116]	; 2d190 <reject_expires+0x88>
   2d118:	ldr	r5, [pc, r5]
   2d11c:	cmp	r5, #0
   2d120:	beq	2d188 <reject_expires+0x80>
   2d124:	ldr	r9, [pc, #104]	; 2d194 <reject_expires+0x8c>
   2d128:	ldr	r9, [pc, r9]
   2d12c:	ldr	r8, [pc, #100]	; 2d198 <reject_expires+0x90>
   2d130:	add	r8, pc, r8
   2d134:	ldr	r0, [r9, #288]	; 0x120
   2d138:	ldr	sl, [r5]
   2d13c:	ldr	r4, [r5, #8]
   2d140:	ldr	r7, [sl, #20]
   2d144:	ldr	r1, [r7, #20]
   2d148:	add	r6, r0, r1
   2d14c:	bl	d07c <rb_current_time@plt>
   2d150:	cmp	r6, r0
   2d154:	bgt	2d17c <reject_expires+0x74>
   2d158:	mov	r0, r5
   2d15c:	mov	r1, r8
   2d160:	bl	2d670 <rb_dlinkDelete>
   2d164:	mov	r0, r7
   2d168:	bl	2d728 <reject_free>
   2d16c:	ldr	r0, [pc, #40]	; 2d19c <reject_expires+0x94>
   2d170:	ldr	r0, [pc, r0]
   2d174:	mov	r1, sl
   2d178:	bl	cf74 <rb_patricia_remove@plt>
   2d17c:	cmp	r4, #0
   2d180:	mov	r5, r4
   2d184:	bne	2d134 <reject_expires+0x2c>
   2d188:	sub	sp, fp, #28
   2d18c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d190:	.word	0x0003d748
   2d194:	.word	0x0002da54
   2d198:	.word	0x0003d730
   2d19c:	.word	0x0003d6dc

0002d1a0 <throttle_expires>:
   2d1a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1a4:	add	fp, sp, #28
   2d1a8:	sub	sp, sp, #4
   2d1ac:	ldr	r5, [pc, #116]	; 2d228 <throttle_expires+0x88>
   2d1b0:	ldr	r5, [pc, r5]
   2d1b4:	cmp	r5, #0
   2d1b8:	beq	2d220 <throttle_expires+0x80>
   2d1bc:	ldr	r9, [pc, #104]	; 2d22c <throttle_expires+0x8c>
   2d1c0:	ldr	r9, [pc, r9]
   2d1c4:	ldr	r8, [pc, #100]	; 2d230 <throttle_expires+0x90>
   2d1c8:	add	r8, pc, r8
   2d1cc:	ldr	r0, [r9, #296]	; 0x128
   2d1d0:	ldr	sl, [r5]
   2d1d4:	ldr	r4, [r5, #8]
   2d1d8:	ldr	r7, [sl, #20]
   2d1dc:	ldr	r1, [r7, #12]
   2d1e0:	add	r6, r0, r1
   2d1e4:	bl	d07c <rb_current_time@plt>
   2d1e8:	cmp	r6, r0
   2d1ec:	bgt	2d214 <throttle_expires+0x74>
   2d1f0:	mov	r0, r5
   2d1f4:	mov	r1, r8
   2d1f8:	bl	2d670 <rb_dlinkDelete>
   2d1fc:	mov	r0, r7
   2d200:	bl	2dc38 <rb_free>
   2d204:	ldr	r0, [pc, #40]	; 2d234 <throttle_expires+0x94>
   2d208:	ldr	r0, [pc, r0]
   2d20c:	mov	r1, sl
   2d210:	bl	cf74 <rb_patricia_remove@plt>
   2d214:	cmp	r4, #0
   2d218:	mov	r5, r4
   2d21c:	bne	2d1cc <throttle_expires+0x2c>
   2d220:	sub	sp, fp, #28
   2d224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d228:	.word	0x0003d6a4
   2d22c:	.word	0x0002d9bc
   2d230:	.word	0x0003d68c
   2d234:	.word	0x0003d648

0002d238 <throttle_size>:
   2d238:	ldr	r1, [pc, #64]	; 2d280 <throttle_size+0x48>
   2d23c:	ldr	r1, [pc, r1]
   2d240:	cmp	r1, #0
   2d244:	moveq	r0, #0
   2d248:	bxeq	lr
   2d24c:	ldr	r0, [pc, #48]	; 2d284 <throttle_size+0x4c>
   2d250:	ldr	r0, [pc, r0]
   2d254:	ldr	r2, [r0, #292]	; 0x124
   2d258:	mov	r0, #0
   2d25c:	ldr	r3, [r1]
   2d260:	ldr	r1, [r1, #8]
   2d264:	ldr	r3, [r3, #20]
   2d268:	ldr	r3, [r3, #16]
   2d26c:	cmp	r3, r2
   2d270:	addgt	r0, r0, #1
   2d274:	cmp	r1, #0
   2d278:	bne	2d25c <throttle_size+0x24>
   2d27c:	bx	lr
   2d280:	.word	0x0003d618
   2d284:	.word	0x0002d92c

0002d288 <add_reject>:
   2d288:	push	{r4, r5, r6, r7, fp, lr}
   2d28c:	add	fp, sp, #16
   2d290:	mov	r7, r2
   2d294:	mov	r6, r0
   2d298:	ldr	r0, [pc, #356]	; 2d404 <add_reject+0x17c>
   2d29c:	ldr	r0, [pc, r0]
   2d2a0:	ldr	r2, [r0, #284]	; 0x11c
   2d2a4:	cmp	r2, #0
   2d2a8:	ldrne	r0, [r0, #288]	; 0x120
   2d2ac:	cmpne	r0, #0
   2d2b0:	bne	2d2b8 <add_reject+0x30>
   2d2b4:	pop	{r4, r5, r6, r7, fp, pc}
   2d2b8:	mov	r4, r3
   2d2bc:	cmp	r1, #0
   2d2c0:	beq	2d324 <add_reject+0x9c>
   2d2c4:	mov	r0, r1
   2d2c8:	mov	r1, #32
   2d2cc:	bl	da84 <fnv_hash_upper@plt>
   2d2d0:	mov	r5, r0
   2d2d4:	cmp	r7, #0
   2d2d8:	beq	2d2ec <add_reject+0x64>
   2d2dc:	mov	r0, r7
   2d2e0:	mov	r1, #32
   2d2e4:	bl	da84 <fnv_hash_upper@plt>
   2d2e8:	eor	r5, r0, r5
   2d2ec:	ldr	r1, [r6, #432]	; 0x1b0
   2d2f0:	ldr	r0, [pc, #272]	; 2d408 <add_reject+0x180>
   2d2f4:	ldr	r0, [pc, r0]
   2d2f8:	add	r1, r1, #140	; 0x8c
   2d2fc:	bl	d3c4 <rb_match_ip@plt>
   2d300:	cmp	r0, #0
   2d304:	beq	2d334 <add_reject+0xac>
   2d308:	ldr	r6, [r0, #20]
   2d30c:	bl	d07c <rb_current_time@plt>
   2d310:	str	r0, [r6, #20]
   2d314:	ldr	r0, [r6, #24]
   2d318:	add	r0, r0, #1
   2d31c:	str	r0, [r6, #24]
   2d320:	b	2d390 <add_reject+0x108>
   2d324:	mov	r5, #0
   2d328:	cmp	r7, #0
   2d32c:	bne	2d2dc <add_reject+0x54>
   2d330:	b	2d2ec <add_reject+0x64>
   2d334:	ldr	r1, [r6, #432]	; 0x1b0
   2d338:	ldrh	r0, [r1, #140]!	; 0x8c
   2d33c:	cmp	r0, #10
   2d340:	mov	r2, #32
   2d344:	movweq	r2, #128	; 0x80
   2d348:	ldr	r0, [pc, #188]	; 2d40c <add_reject+0x184>
   2d34c:	ldr	r0, [pc, r0]
   2d350:	bl	d250 <make_and_lookup_ip@plt>
   2d354:	mov	r7, r0
   2d358:	mov	r0, #32
   2d35c:	bl	2d410 <rb_malloc>
   2d360:	mov	r6, r0
   2d364:	str	r0, [r7, #20]
   2d368:	mov	r0, r7
   2d36c:	mov	r1, r6
   2d370:	bl	2d430 <rb_dlinkAddTail>
   2d374:	bl	d07c <rb_current_time@plt>
   2d378:	mov	r1, #1
   2d37c:	mov	r2, #0
   2d380:	str	r2, [r6, #12]
   2d384:	str	r2, [r6, #16]
   2d388:	str	r0, [r6, #20]
   2d38c:	str	r1, [r6, #24]
   2d390:	str	r5, [r6, #28]
   2d394:	cmp	r4, #0
   2d398:	ldrne	r0, [r6, #12]
   2d39c:	cmpne	r0, r4
   2d3a0:	beq	2d3b8 <add_reject+0x130>
   2d3a4:	ldrb	r1, [r4]
   2d3a8:	tst	r1, #64	; 0x40
   2d3ac:	ldrne	r1, [r4, #20]
   2d3b0:	cmpne	r1, #0
   2d3b4:	bne	2d3e4 <add_reject+0x15c>
   2d3b8:	ldr	r4, [fp, #8]
   2d3bc:	cmp	r4, #0
   2d3c0:	popeq	{r4, r5, r6, r7, fp, pc}
   2d3c4:	ldr	r0, [r6, #12]
   2d3c8:	cmp	r0, #0
   2d3cc:	beq	2d3d4 <add_reject+0x14c>
   2d3d0:	bl	d184 <deref_conf@plt>
   2d3d4:	mov	r0, #0
   2d3d8:	str	r0, [r6, #12]
   2d3dc:	str	r4, [r6, #16]
   2d3e0:	pop	{r4, r5, r6, r7, fp, pc}
   2d3e4:	cmp	r0, #0
   2d3e8:	beq	2d3f0 <add_reject+0x168>
   2d3ec:	bl	d184 <deref_conf@plt>
   2d3f0:	ldr	r0, [r4, #8]
   2d3f4:	add	r0, r0, #1
   2d3f8:	str	r0, [r4, #8]
   2d3fc:	str	r4, [r6, #12]
   2d400:	pop	{r4, r5, r6, r7, fp, pc}
   2d404:	.word	0x0002d8e0
   2d408:	.word	0x0003d558
   2d40c:	.word	0x0003d500

0002d410 <rb_malloc>:
   2d410:	push	{fp, lr}
   2d414:	mov	fp, sp
   2d418:	mov	r1, r0
   2d41c:	mov	r0, #1
   2d420:	bl	cfa4 <calloc@plt>
   2d424:	cmp	r0, #0
   2d428:	popne	{fp, pc}
   2d42c:	bl	d448 <rb_outofmemory@plt>

0002d430 <rb_dlinkAddTail>:
   2d430:	push	{fp, lr}
   2d434:	mov	fp, sp
   2d438:	cmp	r1, #0
   2d43c:	beq	2d4a4 <rb_dlinkAddTail+0x74>
   2d440:	cmp	r0, #0
   2d444:	beq	2d4c4 <rb_dlinkAddTail+0x94>
   2d448:	mov	r2, #0
   2d44c:	str	r2, [r1, #8]
   2d450:	str	r0, [r1]
   2d454:	ldr	r0, [pc, #136]	; 2d4e4 <rb_dlinkAddTail+0xb4>
   2d458:	add	r0, pc, r0
   2d45c:	ldr	r2, [r0, #4]
   2d460:	str	r2, [r1, #4]
   2d464:	ldr	r2, [r0, #4]
   2d468:	cmp	r2, #0
   2d46c:	beq	2d47c <rb_dlinkAddTail+0x4c>
   2d470:	add	r2, r2, #8
   2d474:	str	r1, [r2]
   2d478:	b	2d490 <rb_dlinkAddTail+0x60>
   2d47c:	ldr	r2, [pc, #100]	; 2d4e8 <rb_dlinkAddTail+0xb8>
   2d480:	ldr	r2, [pc, r2]
   2d484:	cmp	r2, #0
   2d488:	mov	r2, r0
   2d48c:	streq	r1, [r2]
   2d490:	str	r1, [r0, #4]
   2d494:	ldr	r1, [r0, #8]
   2d498:	add	r1, r1, #1
   2d49c:	str	r1, [r0, #8]
   2d4a0:	pop	{fp, pc}
   2d4a4:	ldr	r0, [pc, #64]	; 2d4ec <rb_dlinkAddTail+0xbc>
   2d4a8:	add	r0, pc, r0
   2d4ac:	ldr	r1, [pc, #60]	; 2d4f0 <rb_dlinkAddTail+0xc0>
   2d4b0:	add	r1, pc, r1
   2d4b4:	ldr	r3, [pc, #56]	; 2d4f4 <rb_dlinkAddTail+0xc4>
   2d4b8:	add	r3, pc, r3
   2d4bc:	mov	r2, #211	; 0xd3
   2d4c0:	bl	e7e0 <__assert_fail@plt>
   2d4c4:	ldr	r0, [pc, #44]	; 2d4f8 <rb_dlinkAddTail+0xc8>
   2d4c8:	add	r0, pc, r0
   2d4cc:	ldr	r1, [pc, #40]	; 2d4fc <rb_dlinkAddTail+0xcc>
   2d4d0:	add	r1, pc, r1
   2d4d4:	ldr	r3, [pc, #36]	; 2d500 <rb_dlinkAddTail+0xd0>
   2d4d8:	add	r3, pc, r3
   2d4dc:	mov	r2, #213	; 0xd5
   2d4e0:	bl	e7e0 <__assert_fail@plt>
   2d4e4:	.word	0x0003d408
   2d4e8:	.word	0x0003d3e0
   2d4ec:	.word	0x00013104
   2d4f0:	.word	0x00013106
   2d4f4:	.word	0x0001311a
   2d4f8:	.word	0x00013149
   2d4fc:	.word	0x000130e6
   2d500:	.word	0x000130fa

0002d504 <check_reject>:
   2d504:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d508:	add	fp, sp, #24
   2d50c:	mov	r8, r0
   2d510:	ldr	r4, [pc, #320]	; 2d658 <check_reject+0x154>
   2d514:	ldr	r4, [pc, r4]
   2d518:	ldr	r0, [r4, #284]	; 0x11c
   2d51c:	mov	r5, #0
   2d520:	cmp	r0, #0
   2d524:	ldrne	r0, [r4, #288]	; 0x120
   2d528:	cmpne	r0, #0
   2d52c:	bne	2d538 <check_reject+0x34>
   2d530:	mov	r0, r5
   2d534:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d538:	ldr	r0, [pc, #284]	; 2d65c <check_reject+0x158>
   2d53c:	ldr	r0, [pc, r0]
   2d540:	bl	d3c4 <rb_match_ip@plt>
   2d544:	cmp	r0, #0
   2d548:	beq	2d530 <check_reject+0x2c>
   2d54c:	mov	r7, r0
   2d550:	ldr	r6, [r0, #20]
   2d554:	bl	d07c <rb_current_time@plt>
   2d558:	str	r0, [r6, #20]
   2d55c:	ldr	r0, [r6, #24]
   2d560:	ldr	r1, [r4, #284]	; 0x11c
   2d564:	cmp	r0, r1
   2d568:	bls	2d530 <check_reject+0x2c>
   2d56c:	ldr	r0, [r6, #12]
   2d570:	cmp	r0, #0
   2d574:	beq	2d584 <check_reject+0x80>
   2d578:	ldr	r0, [r0]
   2d57c:	cmn	r0, #1
   2d580:	ble	2d5f8 <check_reject+0xf4>
   2d584:	mov	r0, #24
   2d588:	bl	2d410 <rb_malloc>
   2d58c:	mov	r5, r0
   2d590:	ldr	r0, [pc, #208]	; 2d668 <check_reject+0x164>
   2d594:	ldr	r0, [pc, r0]
   2d598:	ldr	r1, [r0, #108]	; 0x6c
   2d59c:	add	r1, r1, #1
   2d5a0:	str	r1, [r0, #108]	; 0x6c
   2d5a4:	mov	r4, #0
   2d5a8:	mov	r0, r8
   2d5ac:	mov	r1, #3
   2d5b0:	mov	r2, #0
   2d5b4:	mov	r3, #0
   2d5b8:	bl	d304 <rb_setselect@plt>
   2d5bc:	ldr	r0, [r6, #12]
   2d5c0:	cmp	r0, #0
   2d5c4:	beq	2d5e0 <check_reject+0xdc>
   2d5c8:	str	r0, [r5, #16]
   2d5cc:	ldr	r1, [r0, #8]
   2d5d0:	add	r1, r1, #1
   2d5d4:	str	r1, [r0, #8]
   2d5d8:	str	r4, [r5, #20]
   2d5dc:	b	2d634 <check_reject+0x130>
   2d5e0:	ldr	r0, [r6, #16]
   2d5e4:	cmp	r0, #0
   2d5e8:	beq	2d628 <check_reject+0x124>
   2d5ec:	mov	r1, #0
   2d5f0:	str	r1, [r5, #16]
   2d5f4:	b	2d630 <check_reject+0x12c>
   2d5f8:	ldr	r1, [pc, #96]	; 2d660 <check_reject+0x15c>
   2d5fc:	add	r1, pc, r1
   2d600:	mov	r0, r6
   2d604:	bl	2d670 <rb_dlinkDelete>
   2d608:	mov	r0, r6
   2d60c:	bl	2d728 <reject_free>
   2d610:	ldr	r0, [pc, #76]	; 2d664 <check_reject+0x160>
   2d614:	ldr	r0, [pc, r0]
   2d618:	mov	r1, r7
   2d61c:	bl	cf74 <rb_patricia_remove@plt>
   2d620:	mov	r0, r5
   2d624:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d628:	mov	r0, #0
   2d62c:	str	r0, [r5, #16]
   2d630:	str	r0, [r5, #20]
   2d634:	str	r8, [r5, #12]
   2d638:	ldr	r2, [pc, #44]	; 2d66c <check_reject+0x168>
   2d63c:	add	r2, pc, r2
   2d640:	mov	r0, r5
   2d644:	mov	r1, r5
   2d648:	bl	2d750 <rb_dlinkAdd>
   2d64c:	mov	r5, #1
   2d650:	mov	r0, r5
   2d654:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d658:	.word	0x0002d668
   2d65c:	.word	0x0003d310
   2d660:	.word	0x0003d264
   2d664:	.word	0x0003d238
   2d668:	.word	0x0002d428
   2d66c:	.word	0x0003d204

0002d670 <rb_dlinkDelete>:
   2d670:	push	{fp, lr}
   2d674:	mov	fp, sp
   2d678:	cmp	r0, #0
   2d67c:	beq	2d6d0 <rb_dlinkDelete+0x60>
   2d680:	cmp	r1, #0
   2d684:	beq	2d6f0 <rb_dlinkDelete+0x80>
   2d688:	ldr	ip, [r0, #4]
   2d68c:	ldr	r3, [r0, #8]
   2d690:	add	r2, r3, #4
   2d694:	cmp	r3, #0
   2d698:	addeq	r2, r1, #4
   2d69c:	str	ip, [r2]
   2d6a0:	ldmib	r0, {r2, ip}
   2d6a4:	cmp	r2, #0
   2d6a8:	mov	r3, r1
   2d6ac:	addne	r3, r2, #8
   2d6b0:	str	ip, [r3]
   2d6b4:	mov	r2, #0
   2d6b8:	str	r2, [r0, #4]
   2d6bc:	str	r2, [r0, #8]
   2d6c0:	ldr	r0, [r1, #8]
   2d6c4:	sub	r0, r0, #1
   2d6c8:	str	r0, [r1, #8]
   2d6cc:	pop	{fp, pc}
   2d6d0:	ldr	r0, [pc, #56]	; 2d710 <rb_dlinkDelete+0xa0>
   2d6d4:	add	r0, pc, r0
   2d6d8:	ldr	r1, [pc, #52]	; 2d714 <rb_dlinkDelete+0xa4>
   2d6dc:	add	r1, pc, r1
   2d6e0:	ldr	r3, [pc, #48]	; 2d718 <rb_dlinkDelete+0xa8>
   2d6e4:	add	r3, pc, r3
   2d6e8:	mov	r2, #235	; 0xeb
   2d6ec:	bl	e7e0 <__assert_fail@plt>
   2d6f0:	ldr	r0, [pc, #36]	; 2d71c <rb_dlinkDelete+0xac>
   2d6f4:	add	r0, pc, r0
   2d6f8:	ldr	r1, [pc, #32]	; 2d720 <rb_dlinkDelete+0xb0>
   2d6fc:	add	r1, pc, r1
   2d700:	ldr	r3, [pc, #28]	; 2d724 <rb_dlinkDelete+0xb4>
   2d704:	add	r3, pc, r3
   2d708:	mov	r2, #236	; 0xec
   2d70c:	bl	e7e0 <__assert_fail@plt>
   2d710:	.word	0x00012ed8
   2d714:	.word	0x00012eda
   2d718:	.word	0x00012f75
   2d71c:	.word	0x00018751
   2d720:	.word	0x00012eba
   2d724:	.word	0x00012f55

0002d728 <reject_free>:
   2d728:	push	{r4, sl, fp, lr}
   2d72c:	add	fp, sp, #8
   2d730:	mov	r4, r0
   2d734:	ldr	r0, [r0, #12]
   2d738:	cmp	r0, #0
   2d73c:	beq	2d744 <reject_free+0x1c>
   2d740:	bl	d184 <deref_conf@plt>
   2d744:	mov	r0, r4
   2d748:	pop	{r4, sl, fp, lr}
   2d74c:	b	2dc38 <rb_free>

0002d750 <rb_dlinkAdd>:
   2d750:	push	{fp, lr}
   2d754:	mov	fp, sp
   2d758:	cmp	r0, #0
   2d75c:	beq	2d7bc <rb_dlinkAdd+0x6c>
   2d760:	cmp	r1, #0
   2d764:	beq	2d7dc <rb_dlinkAdd+0x8c>
   2d768:	cmp	r2, #0
   2d76c:	beq	2d7fc <rb_dlinkAdd+0xac>
   2d770:	mov	r3, #0
   2d774:	stm	r1, {r0, r3}
   2d778:	ldr	r0, [r2]
   2d77c:	str	r0, [r1, #8]
   2d780:	ldr	r0, [r2]
   2d784:	cmp	r0, #0
   2d788:	beq	2d798 <rb_dlinkAdd+0x48>
   2d78c:	add	r0, r0, #4
   2d790:	str	r1, [r0]
   2d794:	b	2d7a8 <rb_dlinkAdd+0x58>
   2d798:	mov	r0, r2
   2d79c:	ldr	r3, [r0, #4]!
   2d7a0:	cmp	r3, #0
   2d7a4:	streq	r1, [r0]
   2d7a8:	str	r1, [r2]
   2d7ac:	ldr	r0, [r2, #8]
   2d7b0:	add	r0, r0, #1
   2d7b4:	str	r0, [r2, #8]
   2d7b8:	pop	{fp, pc}
   2d7bc:	ldr	r0, [pc, #88]	; 2d81c <rb_dlinkAdd+0xcc>
   2d7c0:	add	r0, pc, r0
   2d7c4:	ldr	r1, [pc, #84]	; 2d820 <rb_dlinkAdd+0xd0>
   2d7c8:	add	r1, pc, r1
   2d7cc:	ldr	r3, [pc, #80]	; 2d824 <rb_dlinkAdd+0xd4>
   2d7d0:	add	r3, pc, r3
   2d7d4:	mov	r2, #143	; 0x8f
   2d7d8:	bl	e7e0 <__assert_fail@plt>
   2d7dc:	ldr	r0, [pc, #68]	; 2d828 <rb_dlinkAdd+0xd8>
   2d7e0:	add	r0, pc, r0
   2d7e4:	ldr	r1, [pc, #64]	; 2d82c <rb_dlinkAdd+0xdc>
   2d7e8:	add	r1, pc, r1
   2d7ec:	ldr	r3, [pc, #60]	; 2d830 <rb_dlinkAdd+0xe0>
   2d7f0:	add	r3, pc, r3
   2d7f4:	mov	r2, #144	; 0x90
   2d7f8:	bl	e7e0 <__assert_fail@plt>
   2d7fc:	ldr	r0, [pc, #48]	; 2d834 <rb_dlinkAdd+0xe4>
   2d800:	add	r0, pc, r0
   2d804:	ldr	r1, [pc, #44]	; 2d838 <rb_dlinkAdd+0xe8>
   2d808:	add	r1, pc, r1
   2d80c:	ldr	r3, [pc, #40]	; 2d83c <rb_dlinkAdd+0xec>
   2d810:	add	r3, pc, r3
   2d814:	mov	r2, #145	; 0x91
   2d818:	bl	e7e0 <__assert_fail@plt>
   2d81c:	.word	0x00012e51
   2d820:	.word	0x00012dee
   2d824:	.word	0x00012e4e
   2d828:	.word	0x00012dcc
   2d82c:	.word	0x00012dce
   2d830:	.word	0x00012e2e
   2d834:	.word	0x00018645
   2d838:	.word	0x00012dae
   2d83c:	.word	0x00012e0e

0002d840 <is_reject_ip>:
   2d840:	push	{r4, r5, fp, lr}
   2d844:	add	fp, sp, #8
   2d848:	mov	r1, r0
   2d84c:	ldr	r5, [pc, #108]	; 2d8c0 <is_reject_ip+0x80>
   2d850:	ldr	r5, [pc, r5]
   2d854:	ldr	r0, [r5, #284]	; 0x11c
   2d858:	mov	r4, #0
   2d85c:	cmp	r0, #0
   2d860:	ldrne	r0, [r5, #288]	; 0x120
   2d864:	cmpne	r0, #0
   2d868:	bne	2d874 <is_reject_ip+0x34>
   2d86c:	mov	r0, r4
   2d870:	pop	{r4, r5, fp, pc}
   2d874:	ldr	r0, [pc, #72]	; 2d8c4 <is_reject_ip+0x84>
   2d878:	ldr	r0, [pc, r0]
   2d87c:	bl	d3c4 <rb_match_ip@plt>
   2d880:	cmp	r0, #0
   2d884:	beq	2d86c <is_reject_ip+0x2c>
   2d888:	ldr	r1, [r5, #284]	; 0x11c
   2d88c:	ldr	r0, [r0, #20]
   2d890:	ldr	r2, [r0, #24]
   2d894:	cmp	r2, r1
   2d898:	bls	2d86c <is_reject_ip+0x2c>
   2d89c:	ldr	r0, [r0, #20]
   2d8a0:	ldr	r1, [r5, #288]	; 0x120
   2d8a4:	add	r4, r1, r0
   2d8a8:	bl	d07c <rb_current_time@plt>
   2d8ac:	sub	r4, r4, r0
   2d8b0:	cmp	r4, #1
   2d8b4:	movle	r4, #1
   2d8b8:	mov	r0, r4
   2d8bc:	pop	{r4, r5, fp, pc}
   2d8c0:	.word	0x0002d32c
   2d8c4:	.word	0x0003cfd4

0002d8c8 <flush_reject>:
   2d8c8:	push	{r4, r5, r6, r7, fp, lr}
   2d8cc:	add	fp, sp, #16
   2d8d0:	ldr	r0, [pc, #76]	; 2d924 <flush_reject+0x5c>
   2d8d4:	ldr	r0, [pc, r0]
   2d8d8:	cmp	r0, #0
   2d8dc:	popeq	{r4, r5, r6, r7, fp, pc}
   2d8e0:	ldr	r4, [pc, #64]	; 2d928 <flush_reject+0x60>
   2d8e4:	add	r4, pc, r4
   2d8e8:	ldr	r5, [r0]
   2d8ec:	ldr	r7, [r0, #8]
   2d8f0:	ldr	r6, [r5, #20]
   2d8f4:	mov	r1, r4
   2d8f8:	bl	2d670 <rb_dlinkDelete>
   2d8fc:	mov	r0, r6
   2d900:	bl	2d728 <reject_free>
   2d904:	ldr	r0, [pc, #32]	; 2d92c <flush_reject+0x64>
   2d908:	ldr	r0, [pc, r0]
   2d90c:	mov	r1, r5
   2d910:	bl	cf74 <rb_patricia_remove@plt>
   2d914:	cmp	r7, #0
   2d918:	mov	r0, r7
   2d91c:	bne	2d8e8 <flush_reject+0x20>
   2d920:	pop	{r4, r5, r6, r7, fp, pc}
   2d924:	.word	0x0003cf8c
   2d928:	.word	0x0003cf7c
   2d92c:	.word	0x0003cf44

0002d930 <remove_reject_ip>:
   2d930:	push	{r4, r5, fp, lr}
   2d934:	add	fp, sp, #8
   2d938:	mov	r1, r0
   2d93c:	ldr	r2, [pc, #108]	; 2d9b0 <remove_reject_ip+0x80>
   2d940:	ldr	r2, [pc, r2]
   2d944:	ldr	r3, [r2, #284]	; 0x11c
   2d948:	mvn	r0, #0
   2d94c:	cmp	r3, #0
   2d950:	ldrne	r2, [r2, #288]	; 0x120
   2d954:	cmpne	r2, #0
   2d958:	bne	2d960 <remove_reject_ip+0x30>
   2d95c:	pop	{r4, r5, fp, pc}
   2d960:	ldr	r0, [pc, #76]	; 2d9b4 <remove_reject_ip+0x84>
   2d964:	ldr	r0, [pc, r0]
   2d968:	bl	e5dc <rb_match_string@plt>
   2d96c:	cmp	r0, #0
   2d970:	moveq	r0, #0
   2d974:	popeq	{r4, r5, fp, pc}
   2d978:	mov	r4, r0
   2d97c:	ldr	r5, [r0, #20]
   2d980:	ldr	r1, [pc, #48]	; 2d9b8 <remove_reject_ip+0x88>
   2d984:	add	r1, pc, r1
   2d988:	mov	r0, r5
   2d98c:	bl	2d670 <rb_dlinkDelete>
   2d990:	mov	r0, r5
   2d994:	bl	2d728 <reject_free>
   2d998:	ldr	r0, [pc, #28]	; 2d9bc <remove_reject_ip+0x8c>
   2d99c:	ldr	r0, [pc, r0]
   2d9a0:	mov	r1, r4
   2d9a4:	bl	cf74 <rb_patricia_remove@plt>
   2d9a8:	mov	r0, #1
   2d9ac:	pop	{r4, r5, fp, pc}
   2d9b0:	.word	0x0002d23c
   2d9b4:	.word	0x0003cee8
   2d9b8:	.word	0x0003cedc
   2d9bc:	.word	0x0003ceb0

0002d9c0 <remove_reject_mask>:
   2d9c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d9c4:	add	fp, sp, #24
   2d9c8:	mov	r5, r1
   2d9cc:	cmp	r0, #0
   2d9d0:	beq	2da64 <remove_reject_mask+0xa4>
   2d9d4:	mov	r1, #32
   2d9d8:	bl	da84 <fnv_hash_upper@plt>
   2d9dc:	mov	r9, r0
   2d9e0:	cmp	r5, #0
   2d9e4:	beq	2d9f8 <remove_reject_mask+0x38>
   2d9e8:	mov	r0, r5
   2d9ec:	mov	r1, #32
   2d9f0:	bl	da84 <fnv_hash_upper@plt>
   2d9f4:	eor	r9, r0, r9
   2d9f8:	ldr	r0, [pc, #116]	; 2da74 <remove_reject_mask+0xb4>
   2d9fc:	ldr	r0, [pc, r0]
   2da00:	mov	r5, #0
   2da04:	cmp	r0, #0
   2da08:	beq	2da5c <remove_reject_mask+0x9c>
   2da0c:	ldr	r8, [pc, #100]	; 2da78 <remove_reject_mask+0xb8>
   2da10:	add	r8, pc, r8
   2da14:	ldr	r7, [r0]
   2da18:	ldr	r4, [r0, #8]
   2da1c:	ldr	r6, [r7, #20]
   2da20:	ldr	r1, [r6, #28]
   2da24:	cmp	r1, r9
   2da28:	bne	2da50 <remove_reject_mask+0x90>
   2da2c:	mov	r1, r8
   2da30:	bl	2d670 <rb_dlinkDelete>
   2da34:	mov	r0, r6
   2da38:	bl	2d728 <reject_free>
   2da3c:	ldr	r0, [pc, #56]	; 2da7c <remove_reject_mask+0xbc>
   2da40:	ldr	r0, [pc, r0]
   2da44:	mov	r1, r7
   2da48:	bl	cf74 <rb_patricia_remove@plt>
   2da4c:	add	r5, r5, #1
   2da50:	cmp	r4, #0
   2da54:	mov	r0, r4
   2da58:	bne	2da14 <remove_reject_mask+0x54>
   2da5c:	mov	r0, r5
   2da60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2da64:	mov	r9, #0
   2da68:	cmp	r5, #0
   2da6c:	bne	2d9e8 <remove_reject_mask+0x28>
   2da70:	b	2d9f8 <remove_reject_mask+0x38>
   2da74:	.word	0x0003ce64
   2da78:	.word	0x0003ce50
   2da7c:	.word	0x0003ce0c

0002da80 <throttle_add>:
   2da80:	push	{r4, r5, r6, sl, fp, lr}
   2da84:	add	fp, sp, #16
   2da88:	mov	r4, r0
   2da8c:	ldr	r0, [pc, #188]	; 2db50 <throttle_add+0xd0>
   2da90:	ldr	r0, [pc, r0]
   2da94:	mov	r1, r4
   2da98:	bl	d3c4 <rb_match_ip@plt>
   2da9c:	cmp	r0, #0
   2daa0:	beq	2dadc <throttle_add+0x5c>
   2daa4:	ldr	r1, [pc, #168]	; 2db54 <throttle_add+0xd4>
   2daa8:	ldr	r1, [pc, r1]
   2daac:	ldr	r1, [r1, #292]	; 0x124
   2dab0:	ldr	r4, [r0, #20]
   2dab4:	ldr	r0, [r4, #16]
   2dab8:	cmp	r0, r1
   2dabc:	ble	2db34 <throttle_add+0xb4>
   2dac0:	ldr	r0, [pc, #144]	; 2db58 <throttle_add+0xd8>
   2dac4:	ldr	r0, [pc, r0]
   2dac8:	ldr	r1, [r0, #112]	; 0x70
   2dacc:	add	r1, r1, #1
   2dad0:	str	r1, [r0, #112]	; 0x70
   2dad4:	mov	r0, #1
   2dad8:	pop	{r4, r5, r6, sl, fp, pc}
   2dadc:	ldrh	r6, [r4]
   2dae0:	mov	r0, #20
   2dae4:	bl	2d410 <rb_malloc>
   2dae8:	mov	r5, r0
   2daec:	bl	d07c <rb_current_time@plt>
   2daf0:	mov	r1, #1
   2daf4:	str	r0, [r5, #12]
   2daf8:	str	r1, [r5, #16]
   2dafc:	mov	r2, #32
   2db00:	cmp	r6, #10
   2db04:	movweq	r2, #128	; 0x80
   2db08:	ldr	r0, [pc, #76]	; 2db5c <throttle_add+0xdc>
   2db0c:	ldr	r0, [pc, r0]
   2db10:	mov	r1, r4
   2db14:	bl	d250 <make_and_lookup_ip@plt>
   2db18:	str	r5, [r0, #20]
   2db1c:	ldr	r2, [pc, #60]	; 2db60 <throttle_add+0xe0>
   2db20:	add	r2, pc, r2
   2db24:	mov	r1, r5
   2db28:	bl	2d750 <rb_dlinkAdd>
   2db2c:	mov	r0, #0
   2db30:	pop	{r4, r5, r6, sl, fp, pc}
   2db34:	bl	d07c <rb_current_time@plt>
   2db38:	str	r0, [r4, #12]
   2db3c:	ldr	r0, [r4, #16]
   2db40:	add	r0, r0, #1
   2db44:	str	r0, [r4, #16]
   2db48:	mov	r0, #0
   2db4c:	pop	{r4, r5, r6, sl, fp, pc}
   2db50:	.word	0x0003cdc0
   2db54:	.word	0x0002d0d4
   2db58:	.word	0x0002cef8
   2db5c:	.word	0x0003cd44
   2db60:	.word	0x0003cd34

0002db64 <is_throttle_ip>:
   2db64:	push	{r4, sl, fp, lr}
   2db68:	add	fp, sp, #8
   2db6c:	mov	r1, r0
   2db70:	ldr	r0, [pc, #80]	; 2dbc8 <is_throttle_ip+0x64>
   2db74:	ldr	r0, [pc, r0]
   2db78:	bl	d3c4 <rb_match_ip@plt>
   2db7c:	mov	r1, r0
   2db80:	mov	r0, #0
   2db84:	cmp	r1, #0
   2db88:	beq	2dbc4 <is_throttle_ip+0x60>
   2db8c:	ldr	ip, [pc, #56]	; 2dbcc <is_throttle_ip+0x68>
   2db90:	ldr	ip, [pc, ip]
   2db94:	ldr	r3, [ip, #292]	; 0x124
   2db98:	ldr	r1, [r1, #20]
   2db9c:	ldr	r2, [r1, #16]
   2dba0:	cmp	r2, r3
   2dba4:	pople	{r4, sl, fp, pc}
   2dba8:	ldr	r0, [r1, #12]
   2dbac:	ldr	r1, [ip, #296]	; 0x128
   2dbb0:	add	r4, r1, r0
   2dbb4:	bl	d07c <rb_current_time@plt>
   2dbb8:	sub	r0, r4, r0
   2dbbc:	cmp	r0, #1
   2dbc0:	movle	r0, #1
   2dbc4:	pop	{r4, sl, fp, pc}
   2dbc8:	.word	0x0003ccdc
   2dbcc:	.word	0x0002cfec

0002dbd0 <flush_throttle>:
   2dbd0:	push	{r4, r5, r6, r7, fp, lr}
   2dbd4:	add	fp, sp, #16
   2dbd8:	ldr	r0, [pc, #76]	; 2dc2c <flush_throttle+0x5c>
   2dbdc:	ldr	r0, [pc, r0]
   2dbe0:	cmp	r0, #0
   2dbe4:	popeq	{r4, r5, r6, r7, fp, pc}
   2dbe8:	ldr	r4, [pc, #64]	; 2dc30 <flush_throttle+0x60>
   2dbec:	add	r4, pc, r4
   2dbf0:	ldr	r5, [r0]
   2dbf4:	ldr	r7, [r0, #8]
   2dbf8:	ldr	r6, [r5, #20]
   2dbfc:	mov	r1, r4
   2dc00:	bl	2d670 <rb_dlinkDelete>
   2dc04:	mov	r0, r6
   2dc08:	bl	2dc38 <rb_free>
   2dc0c:	ldr	r0, [pc, #32]	; 2dc34 <flush_throttle+0x64>
   2dc10:	ldr	r0, [pc, r0]
   2dc14:	mov	r1, r5
   2dc18:	bl	cf74 <rb_patricia_remove@plt>
   2dc1c:	cmp	r7, #0
   2dc20:	mov	r0, r7
   2dc24:	bne	2dbf0 <flush_throttle+0x20>
   2dc28:	pop	{r4, r5, r6, r7, fp, pc}
   2dc2c:	.word	0x0003cc78
   2dc30:	.word	0x0003cc68
   2dc34:	.word	0x0003cc40

0002dc38 <rb_free>:
   2dc38:	cmp	r0, #0
   2dc3c:	bxeq	lr
   2dc40:	b	d328 <free@plt>

0002dc44 <restart>:
   2dc44:	push	{fp, lr}
   2dc48:	mov	fp, sp
   2dc4c:	mov	r2, r0
   2dc50:	ldr	r0, [pc, #44]	; 2dc84 <restart+0x40>
   2dc54:	add	r0, pc, r0
   2dc58:	ldrb	r1, [r0]
   2dc5c:	cmp	r1, #1
   2dc60:	bne	2dc68 <restart+0x24>
   2dc64:	bl	e6cc <abort@plt>
   2dc68:	mov	r1, #1
   2dc6c:	strb	r1, [r0]
   2dc70:	ldr	r1, [pc, #16]	; 2dc88 <restart+0x44>
   2dc74:	add	r1, pc, r1
   2dc78:	mov	r0, #0
   2dc7c:	bl	e0b4 <ilog@plt>
   2dc80:	bl	df58 <server_reboot@plt>
   2dc84:	.word	0x0003ce18
   2dc88:	.word	0x00017bd5

0002dc8c <server_reboot>:
   2dc8c:	push	{r4, r5, fp, lr}
   2dc90:	add	fp, sp, #8
   2dc94:	sub	sp, sp, #16
   2dc98:	sub	sp, sp, #4096	; 0x1000
   2dc9c:	mov	r4, #0
   2dca0:	ldr	r5, [pc, #184]	; 2dd60 <server_reboot+0xd4>
   2dca4:	add	r5, pc, r5
   2dca8:	mov	r0, #256	; 0x100
   2dcac:	mov	r1, #0
   2dcb0:	mov	r2, r5
   2dcb4:	bl	d640 <sendto_realops_snomask@plt>
   2dcb8:	mov	r0, #0
   2dcbc:	mov	r1, r5
   2dcc0:	bl	e0b4 <ilog@plt>
   2dcc4:	ldr	r5, [pc, #152]	; 2dd64 <server_reboot+0xd8>
   2dcc8:	ldr	r5, [pc, r5]
   2dccc:	ldr	r0, [r5]
   2dcd0:	cmp	r0, #1
   2dcd4:	blt	2dcf0 <server_reboot+0x64>
   2dcd8:	mov	r0, r4
   2dcdc:	bl	e72c <close@plt>
   2dce0:	add	r4, r4, #1
   2dce4:	ldr	r0, [r5]
   2dce8:	cmp	r4, r0
   2dcec:	blt	2dcd8 <server_reboot+0x4c>
   2dcf0:	ldr	r0, [pc, #112]	; 2dd68 <server_reboot+0xdc>
   2dcf4:	ldr	r0, [pc, r0]
   2dcf8:	ldr	r0, [r0]
   2dcfc:	bl	d6a0 <unlink@plt>
   2dd00:	ldr	r0, [pc, #100]	; 2dd6c <server_reboot+0xe0>
   2dd04:	ldr	r0, [pc, r0]
   2dd08:	ldr	r0, [r0, #28]
   2dd0c:	ldr	r5, [pc, #92]	; 2dd70 <server_reboot+0xe4>
   2dd10:	ldr	r5, [pc, r5]
   2dd14:	ldr	r1, [r5]
   2dd18:	bl	ddb4 <execv@plt>
   2dd1c:	ldr	r0, [pc, #80]	; 2dd74 <server_reboot+0xe8>
   2dd20:	ldr	r0, [pc, r0]
   2dd24:	ldr	r3, [r0]
   2dd28:	mov	r0, #47	; 0x2f
   2dd2c:	str	r0, [sp]
   2dd30:	str	r0, [sp, #4]
   2dd34:	add	r4, sp, #11
   2dd38:	ldr	r2, [pc, #56]	; 2dd78 <server_reboot+0xec>
   2dd3c:	add	r2, pc, r2
   2dd40:	mov	r0, r4
   2dd44:	movw	r1, #4097	; 0x1001
   2dd48:	bl	de74 <snprintf@plt>
   2dd4c:	ldr	r1, [r5]
   2dd50:	mov	r0, r4
   2dd54:	bl	ddb4 <execv@plt>
   2dd58:	mvn	r0, #0
   2dd5c:	bl	dc34 <exit@plt>
   2dd60:	.word	0x00017bc3
   2dd64:	.word	0x0002ce00
   2dd68:	.word	0x0002cdc8
   2dd6c:	.word	0x0002cd44
   2dd70:	.word	0x0002cc64
   2dd74:	.word	0x0002ce5c
   2dd78:	.word	0x00017b40

0002dd7c <init_s_conf>:
   2dd7c:	push	{r4, r5, r6, r7, fp, lr}
   2dd80:	add	fp, sp, #16
   2dd84:	ldr	r2, [pc, #300]	; 2deb8 <init_s_conf+0x13c>
   2dd88:	add	r2, pc, r2
   2dd8c:	mov	r0, #60	; 0x3c
   2dd90:	mov	r1, #256	; 0x100
   2dd94:	bl	ded4 <rb_bh_create@plt>
   2dd98:	ldr	r1, [pc, #284]	; 2debc <init_s_conf+0x140>
   2dd9c:	add	r1, pc, r1
   2dda0:	str	r0, [r1]
   2dda4:	ldr	r2, [pc, #276]	; 2dec0 <init_s_conf+0x144>
   2dda8:	ldr	r2, [pc, r2]
   2ddac:	ldr	r0, [pc, #272]	; 2dec4 <init_s_conf+0x148>
   2ddb0:	add	r0, pc, r0
   2ddb4:	ldr	r1, [pc, #268]	; 2dec8 <init_s_conf+0x14c>
   2ddb8:	add	r1, pc, r1
   2ddbc:	mov	r3, #60	; 0x3c
   2ddc0:	bl	d220 <rb_event_addish@plt>
   2ddc4:	ldr	r4, [pc, #256]	; 2decc <init_s_conf+0x150>
   2ddc8:	ldr	r4, [pc, r4]
   2ddcc:	ldr	r0, [pc, #252]	; 2ded0 <init_s_conf+0x154>
   2ddd0:	add	r0, pc, r0
   2ddd4:	ldr	r6, [pc, #248]	; 2ded4 <init_s_conf+0x158>
   2ddd8:	add	r6, pc, r6
   2dddc:	mov	r1, r6
   2dde0:	mov	r2, r4
   2dde4:	mov	r3, #60	; 0x3c
   2dde8:	bl	d220 <rb_event_addish@plt>
   2ddec:	ldr	r5, [pc, #228]	; 2ded8 <init_s_conf+0x15c>
   2ddf0:	ldr	r5, [pc, r5]
   2ddf4:	ldr	r0, [pc, #224]	; 2dedc <init_s_conf+0x160>
   2ddf8:	add	r0, pc, r0
   2ddfc:	mov	r1, r6
   2de00:	mov	r2, r5
   2de04:	mov	r3, #60	; 0x3c
   2de08:	bl	d220 <rb_event_addish@plt>
   2de0c:	add	r2, r4, #12
   2de10:	ldr	r0, [pc, #200]	; 2dee0 <init_s_conf+0x164>
   2de14:	add	r0, pc, r0
   2de18:	ldr	r6, [pc, #196]	; 2dee4 <init_s_conf+0x168>
   2de1c:	add	r6, pc, r6
   2de20:	mov	r1, r6
   2de24:	mov	r3, #3600	; 0xe10
   2de28:	bl	d220 <rb_event_addish@plt>
   2de2c:	add	r2, r5, #12
   2de30:	ldr	r0, [pc, #176]	; 2dee8 <init_s_conf+0x16c>
   2de34:	add	r0, pc, r0
   2de38:	mov	r1, r6
   2de3c:	mov	r3, #3600	; 0xe10
   2de40:	bl	d220 <rb_event_addish@plt>
   2de44:	add	r2, r4, #24
   2de48:	ldr	r0, [pc, #156]	; 2deec <init_s_conf+0x170>
   2de4c:	add	r0, pc, r0
   2de50:	movw	r7, #20864	; 0x5180
   2de54:	movt	r7, #1
   2de58:	mov	r1, r6
   2de5c:	mov	r3, r7
   2de60:	bl	d220 <rb_event_addish@plt>
   2de64:	add	r2, r5, #24
   2de68:	ldr	r0, [pc, #128]	; 2def0 <init_s_conf+0x174>
   2de6c:	add	r0, pc, r0
   2de70:	mov	r1, r6
   2de74:	mov	r3, r7
   2de78:	bl	d220 <rb_event_addish@plt>
   2de7c:	add	r2, r4, #36	; 0x24
   2de80:	ldr	r0, [pc, #108]	; 2def4 <init_s_conf+0x178>
   2de84:	add	r0, pc, r0
   2de88:	movw	r4, #14976	; 0x3a80
   2de8c:	movt	r4, #9
   2de90:	mov	r1, r6
   2de94:	mov	r3, r4
   2de98:	bl	d220 <rb_event_addish@plt>
   2de9c:	add	r2, r5, #36	; 0x24
   2dea0:	ldr	r0, [pc, #80]	; 2def8 <init_s_conf+0x17c>
   2dea4:	add	r0, pc, r0
   2dea8:	mov	r1, r6
   2deac:	mov	r3, r4
   2deb0:	pop	{r4, r5, r6, r7, fp, lr}
   2deb4:	b	d220 <rb_event_addish@plt>
   2deb8:	.word	0x00017b02
   2debc:	.word	0x0003ccd4
   2dec0:	.word	0x0002cb18
   2dec4:	.word	0x00017ae8
   2dec8:	.word	0x0000013c
   2decc:	.word	0x0002cd30
   2ded0:	.word	0x00017ad9
   2ded4:	.word	0x00000218
   2ded8:	.word	0x0002cc88
   2dedc:	.word	0x00017ac4
   2dee0:	.word	0x00017abb
   2dee4:	.word	0x00000294
   2dee8:	.word	0x00017ab3
   2deec:	.word	0x00017ab3
   2def0:	.word	0x00017aaa
   2def4:	.word	0x00017aa9
   2def8:	.word	0x00017aa1

0002defc <expire_prop_bans>:
   2defc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2df00:	add	fp, sp, #28
   2df04:	sub	sp, sp, #12
   2df08:	mov	r5, r0
   2df0c:	bl	d07c <rb_current_time@plt>
   2df10:	ldr	r5, [r5]
   2df14:	cmp	r5, #0
   2df18:	beq	2dfdc <expire_prop_bans+0xe0>
   2df1c:	mov	r4, r0
   2df20:	ldr	r9, [pc, #188]	; 2dfe4 <expire_prop_bans+0xe8>
   2df24:	ldr	r9, [pc, r9]
   2df28:	ldr	sl, [pc, #184]	; 2dfe8 <expire_prop_bans+0xec>
   2df2c:	add	sl, pc, sl
   2df30:	ldr	r8, [pc, #180]	; 2dfec <expire_prop_bans+0xf0>
   2df34:	add	r8, pc, r8
   2df38:	mov	r6, r5
   2df3c:	ldr	r7, [r5]
   2df40:	ldr	r5, [r5, #8]
   2df44:	ldr	r0, [r7, #44]	; 0x2c
   2df48:	cmp	r0, r4
   2df4c:	ble	2df68 <expire_prop_bans+0x6c>
   2df50:	ldr	r0, [r7, #36]	; 0x24
   2df54:	cmp	r0, r4
   2df58:	bgt	2dfd4 <expire_prop_bans+0xd8>
   2df5c:	ldr	r0, [r7]
   2df60:	cmp	r0, #0
   2df64:	blt	2dfd4 <expire_prop_bans+0xd8>
   2df68:	ldr	r0, [r9, #256]	; 0x100
   2df6c:	cmp	r0, #0
   2df70:	beq	2dfc4 <expire_prop_bans+0xc8>
   2df74:	ldr	r0, [r7]
   2df78:	cmp	r0, #0
   2df7c:	blt	2dfc4 <expire_prop_bans+0xc8>
   2df80:	ldr	r0, [r7, #16]
   2df84:	ldr	r3, [r7, #28]
   2df88:	cmp	r0, #0
   2df8c:	ldr	r1, [pc, #92]	; 2dff0 <expire_prop_bans+0xf4>
   2df90:	add	r1, pc, r1
   2df94:	moveq	r0, r1
   2df98:	cmp	r3, #0
   2df9c:	ldr	r1, [pc, #80]	; 2dff4 <expire_prop_bans+0xf8>
   2dfa0:	add	r1, pc, r1
   2dfa4:	moveq	r1, sl
   2dfa8:	str	r1, [sp]
   2dfac:	str	r0, [sp, #4]
   2dfb0:	moveq	r3, sl
   2dfb4:	mov	r0, #256	; 0x100
   2dfb8:	mov	r1, #0
   2dfbc:	mov	r2, r8
   2dfc0:	bl	d640 <sendto_realops_snomask@plt>
   2dfc4:	mov	r0, r7
   2dfc8:	mov	r1, r6
   2dfcc:	mov	r2, r4
   2dfd0:	bl	d6e8 <deactivate_conf@plt>
   2dfd4:	cmp	r5, #0
   2dfd8:	bne	2df38 <expire_prop_bans+0x3c>
   2dfdc:	sub	sp, fp, #28
   2dfe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dfe4:	.word	0x0002cc58
   2dfe8:	.word	0x000178d9
   2dfec:	.word	0x00017ec5
   2dff0:	.word	0x000133ad
   2dff4:	.word	0x00014e67

0002dff8 <expire_temp_kd>:
   2dff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dffc:	add	fp, sp, #28
   2e000:	sub	sp, sp, #4
   2e004:	ldr	r5, [r0]
   2e008:	cmp	r5, #0
   2e00c:	beq	2e0a4 <expire_temp_kd+0xac>
   2e010:	mov	r4, r0
   2e014:	ldr	r9, [pc, #144]	; 2e0ac <expire_temp_kd+0xb4>
   2e018:	ldr	r9, [pc, r9]
   2e01c:	ldr	sl, [pc, #140]	; 2e0b0 <expire_temp_kd+0xb8>
   2e020:	add	sl, pc, sl
   2e024:	ldr	r7, [r5]
   2e028:	ldr	r6, [r5, #8]
   2e02c:	ldr	r8, [r7, #36]	; 0x24
   2e030:	bl	d07c <rb_current_time@plt>
   2e034:	cmp	r8, r0
   2e038:	bgt	2e098 <expire_temp_kd+0xa0>
   2e03c:	ldr	r0, [r9, #256]	; 0x100
   2e040:	cmp	r0, #0
   2e044:	beq	2e078 <expire_temp_kd+0x80>
   2e048:	ldr	r0, [r7, #16]
   2e04c:	ldr	r3, [r7, #28]
   2e050:	cmp	r0, #0
   2e054:	moveq	r0, sl
   2e058:	str	r0, [sp]
   2e05c:	cmp	r3, #0
   2e060:	moveq	r3, sl
   2e064:	mov	r0, #256	; 0x100
   2e068:	mov	r1, #0
   2e06c:	ldr	r2, [pc, #64]	; 2e0b4 <expire_temp_kd+0xbc>
   2e070:	add	r2, pc, r2
   2e074:	bl	d640 <sendto_realops_snomask@plt>
   2e078:	ldr	r0, [r7, #16]
   2e07c:	mov	r1, r7
   2e080:	bl	e054 <delete_one_address_conf@plt>
   2e084:	mov	r0, r5
   2e088:	mov	r1, r4
   2e08c:	bl	2f77c <rb_dlinkDelete>
   2e090:	mov	r0, r5
   2e094:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   2e098:	cmp	r6, #0
   2e09c:	mov	r5, r6
   2e0a0:	bne	2e024 <expire_temp_kd+0x2c>
   2e0a4:	sub	sp, fp, #28
   2e0a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e0ac:	.word	0x0002cb64
   2e0b0:	.word	0x0001331d
   2e0b4:	.word	0x00017dad

0002e0b8 <reorganise_temp_kd>:
   2e0b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0bc:	add	fp, sp, #28
   2e0c0:	sub	sp, sp, #12
   2e0c4:	ldr	r6, [r0]
   2e0c8:	cmp	r6, #0
   2e0cc:	beq	2e1e0 <reorganise_temp_kd+0x128>
   2e0d0:	mov	r4, r0
   2e0d4:	ldr	r8, [pc, #268]	; 2e1e8 <reorganise_temp_kd+0x130>
   2e0d8:	ldr	r8, [pc, r8]
   2e0dc:	ldr	r0, [pc, #264]	; 2e1ec <reorganise_temp_kd+0x134>
   2e0e0:	ldr	r0, [pc, r0]
   2e0e4:	add	r1, r0, #12
   2e0e8:	str	r1, [sp, #8]
   2e0ec:	add	r0, r0, #24
   2e0f0:	str	r0, [sp, #4]
   2e0f4:	b	2e144 <reorganise_temp_kd+0x8c>
   2e0f8:	ldr	r0, [sl, #32]
   2e0fc:	cmp	r0, #3
   2e100:	blt	2e1d8 <reorganise_temp_kd+0x120>
   2e104:	ldr	r7, [sl, #36]	; 0x24
   2e108:	bl	d07c <rb_current_time@plt>
   2e10c:	movw	r1, #14976	; 0x3a80
   2e110:	movt	r1, #9
   2e114:	add	r0, r0, r1
   2e118:	cmp	r7, r0
   2e11c:	bge	2e1d8 <reorganise_temp_kd+0x120>
   2e120:	ldr	r0, [sl]
   2e124:	cmp	r0, #64	; 0x40
   2e128:	ldr	r2, [sp, #4]
   2e12c:	addeq	r2, r8, #24
   2e130:	mov	r0, r5
   2e134:	mov	r1, r4
   2e138:	bl	304e8 <rb_dlinkMoveNode>
   2e13c:	mov	r0, #2
   2e140:	b	2e1d4 <reorganise_temp_kd+0x11c>
   2e144:	mov	r5, r6
   2e148:	ldr	sl, [r6]
   2e14c:	ldr	r6, [r6, #8]
   2e150:	ldr	r9, [sl, #36]	; 0x24
   2e154:	bl	d07c <rb_current_time@plt>
   2e158:	add	r0, r0, #3600	; 0xe10
   2e15c:	cmp	r9, r0
   2e160:	bge	2e18c <reorganise_temp_kd+0xd4>
   2e164:	ldr	r0, [sl]
   2e168:	cmp	r0, #64	; 0x40
   2e16c:	ldr	r2, [pc, #124]	; 2e1f0 <reorganise_temp_kd+0x138>
   2e170:	ldr	r2, [pc, r2]
   2e174:	moveq	r2, r8
   2e178:	mov	r0, r5
   2e17c:	mov	r1, r4
   2e180:	bl	304e8 <rb_dlinkMoveNode>
   2e184:	mov	r0, #0
   2e188:	b	2e1d4 <reorganise_temp_kd+0x11c>
   2e18c:	ldr	r0, [sl, #32]
   2e190:	cmp	r0, #2
   2e194:	blt	2e1d8 <reorganise_temp_kd+0x120>
   2e198:	ldr	r7, [sl, #36]	; 0x24
   2e19c:	bl	d07c <rb_current_time@plt>
   2e1a0:	movw	r1, #20864	; 0x5180
   2e1a4:	movt	r1, #1
   2e1a8:	add	r0, r0, r1
   2e1ac:	cmp	r7, r0
   2e1b0:	bge	2e0f8 <reorganise_temp_kd+0x40>
   2e1b4:	ldr	r0, [sl]
   2e1b8:	cmp	r0, #64	; 0x40
   2e1bc:	ldr	r2, [sp, #8]
   2e1c0:	addeq	r2, r8, #12
   2e1c4:	mov	r0, r5
   2e1c8:	mov	r1, r4
   2e1cc:	bl	304e8 <rb_dlinkMoveNode>
   2e1d0:	mov	r0, #1
   2e1d4:	str	r0, [sl, #32]
   2e1d8:	cmp	r6, #0
   2e1dc:	bne	2e144 <reorganise_temp_kd+0x8c>
   2e1e0:	sub	sp, fp, #28
   2e1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1e8:	.word	0x0002ca20
   2e1ec:	.word	0x0002c998
   2e1f0:	.word	0x0002c908

0002e1f4 <make_conf>:
   2e1f4:	push	{fp, lr}
   2e1f8:	mov	fp, sp
   2e1fc:	ldr	r0, [pc, #16]	; 2e214 <make_conf+0x20>
   2e200:	ldr	r0, [pc, r0]
   2e204:	bl	de20 <rb_bh_alloc@plt>
   2e208:	mov	r1, #-2147483648	; 0x80000000
   2e20c:	str	r1, [r0]
   2e210:	pop	{fp, pc}
   2e214:	.word	0x0003c870

0002e218 <free_conf>:
   2e218:	cmp	r0, #0
   2e21c:	bxeq	lr
   2e220:	push	{r4, r5, fp, lr}
   2e224:	add	fp, sp, #8
   2e228:	mov	r4, r0
   2e22c:	ldr	r5, [r0, #20]
   2e230:	cmp	r5, #0
   2e234:	beq	2e250 <free_conf+0x38>
   2e238:	mov	r0, r5
   2e23c:	bl	dc94 <strlen@plt>
   2e240:	mov	r2, r0
   2e244:	mov	r0, r5
   2e248:	mov	r1, #0
   2e24c:	bl	df28 <memset@plt>
   2e250:	ldr	r5, [r4, #24]
   2e254:	cmp	r5, #0
   2e258:	beq	2e274 <free_conf+0x5c>
   2e25c:	mov	r0, r5
   2e260:	bl	dc94 <strlen@plt>
   2e264:	mov	r2, r0
   2e268:	mov	r0, r5
   2e26c:	mov	r1, #0
   2e270:	bl	df28 <memset@plt>
   2e274:	ldr	r0, [r4, #20]
   2e278:	bl	2e2d8 <rb_free>
   2e27c:	ldr	r0, [r4, #24]
   2e280:	bl	2e2d8 <rb_free>
   2e284:	ldr	r0, [r4, #48]	; 0x30
   2e288:	bl	2e2d8 <rb_free>
   2e28c:	ldr	r0, [r4, #28]
   2e290:	bl	2e2d8 <rb_free>
   2e294:	ldr	r0, [r4, #16]
   2e298:	bl	2e2d8 <rb_free>
   2e29c:	ldr	r1, [r4]
   2e2a0:	ldr	r0, [r4, #12]
   2e2a4:	movw	r2, #960	; 0x3c0
   2e2a8:	movt	r2, #2
   2e2ac:	tst	r1, r2
   2e2b0:	beq	2e2bc <free_conf+0xa4>
   2e2b4:	bl	d5c8 <operhash_delete@plt>
   2e2b8:	b	2e2c0 <free_conf+0xa8>
   2e2bc:	bl	2e2d8 <rb_free>
   2e2c0:	ldr	r0, [pc, #12]	; 2e2d4 <free_conf+0xbc>
   2e2c4:	ldr	r0, [pc, r0]
   2e2c8:	mov	r1, r4
   2e2cc:	pop	{r4, r5, fp, lr}
   2e2d0:	b	e708 <rb_bh_free@plt>
   2e2d4:	.word	0x0003c7ac

0002e2d8 <rb_free>:
   2e2d8:	cmp	r0, #0
   2e2dc:	bxeq	lr
   2e2e0:	b	d328 <free@plt>

0002e2e4 <check_client>:
   2e2e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2e8:	add	fp, sp, #28
   2e2ec:	sub	sp, sp, #28
   2e2f0:	mov	r5, r1
   2e2f4:	mov	r7, r0
   2e2f8:	mov	r0, r1
   2e2fc:	mov	r1, r2
   2e300:	bl	2e914 <verify_access>
   2e304:	mov	r4, r0
   2e308:	cmp	r0, #0
   2e30c:	beq	2e848 <check_client+0x564>
   2e310:	movw	r0, #291	; 0x123
   2e314:	add	r6, r5, r0
   2e318:	add	r9, r5, #88	; 0x58
   2e31c:	ldr	r1, [pc, #1328]	; 2e854 <check_client+0x570>
   2e320:	add	r1, pc, r1
   2e324:	mov	r0, #2
   2e328:	mov	r2, r9
   2e32c:	mov	r3, r6
   2e330:	bl	e0b4 <ilog@plt>
   2e334:	add	r0, r4, #8
   2e338:	cmp	r0, #7
   2e33c:	bhi	2e848 <check_client+0x564>
   2e340:	add	r1, pc, #4
   2e344:	ldr	r0, [r1, r0, lsl #2]
   2e348:	add	pc, r1, r0
   2e34c:	.word	0x00000020
   2e350:	.word	0x00000074
   2e354:	.word	0x000000c8
   2e358:	.word	0x000004fc
   2e35c:	.word	0x0000011c
   2e360:	.word	0x00000150
   2e364:	.word	0x000001ac
   2e368:	.word	0x000001c4
   2e36c:	str	r7, [sp, #24]
   2e370:	mov	sl, r5
   2e374:	ldr	r0, [sl, #64]!	; 0x40
   2e378:	ldr	r1, [pc, #1312]	; 2e8a0 <check_client+0x5bc>
   2e37c:	add	r1, pc, r1
   2e380:	ldr	r7, [pc, #1308]	; 2e8a4 <check_client+0x5c0>
   2e384:	add	r7, pc, r7
   2e388:	tst	r0, #128	; 0x80
   2e38c:	mov	r8, r7
   2e390:	moveq	r8, r1
   2e394:	mov	r0, #0
   2e398:	mov	r1, r5
   2e39c:	bl	e60c <show_ip@plt>
   2e3a0:	add	r1, r5, #152	; 0x98
   2e3a4:	cmp	r0, #0
   2e3a8:	beq	2e618 <check_client+0x334>
   2e3ac:	ldrb	r0, [sl, #3]
   2e3b0:	tst	r0, #1
   2e3b4:	mov	r0, r6
   2e3b8:	addne	r0, r5, #163	; 0xa3
   2e3bc:	b	2e61c <check_client+0x338>
   2e3c0:	str	r7, [sp, #24]
   2e3c4:	mov	sl, r5
   2e3c8:	ldr	r0, [sl, #64]!	; 0x40
   2e3cc:	ldr	r1, [pc, #1196]	; 2e880 <check_client+0x59c>
   2e3d0:	add	r1, pc, r1
   2e3d4:	ldr	r7, [pc, #1192]	; 2e884 <check_client+0x5a0>
   2e3d8:	add	r7, pc, r7
   2e3dc:	tst	r0, #128	; 0x80
   2e3e0:	mov	r8, r7
   2e3e4:	moveq	r8, r1
   2e3e8:	mov	r0, #0
   2e3ec:	mov	r1, r5
   2e3f0:	bl	e60c <show_ip@plt>
   2e3f4:	add	r1, r5, #152	; 0x98
   2e3f8:	cmp	r0, #0
   2e3fc:	beq	2e6a0 <check_client+0x3bc>
   2e400:	ldrb	r0, [sl, #3]
   2e404:	tst	r0, #1
   2e408:	mov	r0, r6
   2e40c:	addne	r0, r5, #163	; 0xa3
   2e410:	b	2e6a4 <check_client+0x3c0>
   2e414:	str	r7, [sp, #24]
   2e418:	mov	sl, r5
   2e41c:	ldr	r0, [sl, #64]!	; 0x40
   2e420:	ldr	r1, [pc, #1080]	; 2e860 <check_client+0x57c>
   2e424:	add	r1, pc, r1
   2e428:	ldr	r7, [pc, #1076]	; 2e864 <check_client+0x580>
   2e42c:	add	r7, pc, r7
   2e430:	tst	r0, #128	; 0x80
   2e434:	mov	r8, r7
   2e438:	moveq	r8, r1
   2e43c:	mov	r0, #0
   2e440:	mov	r1, r5
   2e444:	bl	e60c <show_ip@plt>
   2e448:	add	r1, r5, #152	; 0x98
   2e44c:	cmp	r0, #0
   2e450:	beq	2e728 <check_client+0x444>
   2e454:	ldrb	r0, [sl, #3]
   2e458:	tst	r0, #1
   2e45c:	mov	r0, r6
   2e460:	addne	r0, r5, #163	; 0xa3
   2e464:	b	2e72c <check_client+0x448>
   2e468:	ldr	r2, [pc, #1176]	; 2e908 <check_client+0x624>
   2e46c:	ldr	r2, [pc, r2]
   2e470:	ldr	r3, [pc, #1172]	; 2e90c <check_client+0x628>
   2e474:	add	r3, pc, r3
   2e478:	mov	r0, r7
   2e47c:	mov	r1, r7
   2e480:	bl	e534 <exit_client@plt>
   2e484:	ldr	r0, [pc, #1156]	; 2e910 <check_client+0x62c>
   2e488:	ldr	r0, [pc, r0]
   2e48c:	ldr	r1, [r0, #68]	; 0x44
   2e490:	add	r1, r1, #1
   2e494:	str	r1, [r0, #68]	; 0x44
   2e498:	b	2e848 <check_client+0x564>
   2e49c:	str	r7, [sp, #24]
   2e4a0:	mov	sl, r5
   2e4a4:	ldr	r0, [sl, #64]!	; 0x40
   2e4a8:	ldr	r1, [pc, #1040]	; 2e8c0 <check_client+0x5dc>
   2e4ac:	add	r1, pc, r1
   2e4b0:	ldr	r8, [pc, #1036]	; 2e8c4 <check_client+0x5e0>
   2e4b4:	add	r8, pc, r8
   2e4b8:	tst	r0, #128	; 0x80
   2e4bc:	mov	r7, r8
   2e4c0:	moveq	r7, r1
   2e4c4:	mov	r0, #0
   2e4c8:	mov	r1, r5
   2e4cc:	bl	e60c <show_ip@plt>
   2e4d0:	add	r1, r5, #163	; 0xa3
   2e4d4:	add	r3, r5, #152	; 0x98
   2e4d8:	cmp	r0, #0
   2e4dc:	beq	2e7b0 <check_client+0x4cc>
   2e4e0:	ldrb	r2, [sl, #3]
   2e4e4:	ldr	r0, [pc, #992]	; 2e8cc <check_client+0x5e8>
   2e4e8:	add	r0, pc, r0
   2e4ec:	tst	r2, #1
   2e4f0:	moveq	r0, r6
   2e4f4:	b	2e7b8 <check_client+0x4d4>
   2e4f8:	ldr	r2, [pc, #856]	; 2e858 <check_client+0x574>
   2e4fc:	ldr	r2, [pc, r2]
   2e500:	ldr	r3, [pc, #852]	; 2e85c <check_client+0x578>
   2e504:	add	r3, pc, r3
   2e508:	mov	r0, r7
   2e50c:	b	2e840 <check_client+0x55c>
   2e510:	ldr	r0, [r5, #432]	; 0x1b0
   2e514:	str	r7, [sp, #24]
   2e518:	ldr	r8, [r0, #128]	; 0x80
   2e51c:	ldrh	r0, [r8, #38]	; 0x26
   2e520:	bl	2eae8 <__bswap_16>
   2e524:	mov	r7, r0
   2e528:	ldr	r0, [pc, #952]	; 2e8e8 <check_client+0x604>
   2e52c:	ldr	r0, [pc, r0]
   2e530:	ldr	r1, [r0, #68]	; 0x44
   2e534:	add	r1, r1, #1
   2e538:	str	r1, [r0, #68]	; 0x44
   2e53c:	ldr	r0, [r5, #64]	; 0x40
   2e540:	ldr	r1, [r8, #4]
   2e544:	add	r2, r5, #163	; 0xa3
   2e548:	ldr	r3, [pc, #924]	; 2e8ec <check_client+0x608>
   2e54c:	add	r3, pc, r3
   2e550:	ldr	sl, [pc, #920]	; 2e8f0 <check_client+0x60c>
   2e554:	add	sl, pc, sl
   2e558:	tst	r0, #128	; 0x80
   2e55c:	mov	r0, sl
   2e560:	moveq	r0, r3
   2e564:	add	r8, r5, #152	; 0x98
   2e568:	stm	sp, {r0, r8}
   2e56c:	str	r2, [sp, #8]
   2e570:	str	r6, [sp, #12]
   2e574:	str	r1, [sp, #16]
   2e578:	str	r7, [sp, #20]
   2e57c:	ldr	r2, [pc, #880]	; 2e8f4 <check_client+0x610>
   2e580:	add	r2, pc, r2
   2e584:	mov	r0, #512	; 0x200
   2e588:	mov	r1, #0
   2e58c:	mov	r3, r9
   2e590:	bl	d640 <sendto_realops_snomask@plt>
   2e594:	ldr	r0, [r5, #64]	; 0x40
   2e598:	ldr	r1, [r5, #432]	; 0x1b0
   2e59c:	ldr	r1, [r1, #128]	; 0x80
   2e5a0:	ldr	r1, [r1, #4]
   2e5a4:	str	r8, [sp]
   2e5a8:	str	r6, [sp, #4]
   2e5ac:	str	r1, [sp, #8]
   2e5b0:	str	r7, [sp, #12]
   2e5b4:	tst	r0, #128	; 0x80
   2e5b8:	ldr	r0, [pc, #824]	; 2e8f8 <check_client+0x614>
   2e5bc:	add	r0, pc, r0
   2e5c0:	moveq	sl, r0
   2e5c4:	ldr	r1, [pc, #816]	; 2e8fc <check_client+0x618>
   2e5c8:	add	r1, pc, r1
   2e5cc:	mov	r0, #2
   2e5d0:	mov	r2, r9
   2e5d4:	mov	r3, sl
   2e5d8:	bl	e0b4 <ilog@plt>
   2e5dc:	ldr	r6, [pc, #796]	; 2e900 <check_client+0x61c>
   2e5e0:	add	r6, pc, r6
   2e5e4:	str	r6, [sp]
   2e5e8:	ldr	r7, [sp, #24]
   2e5ec:	mov	r0, r7
   2e5f0:	mov	r1, #0
   2e5f4:	mov	r2, #0
   2e5f8:	mov	r3, #0
   2e5fc:	bl	e138 <add_reject@plt>
   2e600:	ldr	r2, [pc, #764]	; 2e904 <check_client+0x620>
   2e604:	ldr	r2, [pc, r2]
   2e608:	mov	r0, r7
   2e60c:	mov	r1, r5
   2e610:	mov	r3, r6
   2e614:	b	2e844 <check_client+0x560>
   2e618:	add	r0, r5, #163	; 0xa3
   2e61c:	str	r8, [sp]
   2e620:	str	r1, [sp, #4]
   2e624:	str	r0, [sp, #8]
   2e628:	ldr	r2, [pc, #632]	; 2e8a8 <check_client+0x5c4>
   2e62c:	add	r2, pc, r2
   2e630:	mov	r0, #16
   2e634:	mov	r8, r1
   2e638:	mov	r1, #256	; 0x100
   2e63c:	mov	r3, r9
   2e640:	bl	d640 <sendto_realops_snomask@plt>
   2e644:	ldr	r0, [sl]
   2e648:	str	r8, [sp]
   2e64c:	str	r6, [sp, #4]
   2e650:	tst	r0, #128	; 0x80
   2e654:	ldr	r0, [pc, #592]	; 2e8ac <check_client+0x5c8>
   2e658:	add	r0, pc, r0
   2e65c:	moveq	r7, r0
   2e660:	ldr	r1, [pc, #584]	; 2e8b0 <check_client+0x5cc>
   2e664:	add	r1, pc, r1
   2e668:	mov	r0, #2
   2e66c:	mov	r2, r9
   2e670:	mov	r3, r7
   2e674:	bl	e0b4 <ilog@plt>
   2e678:	ldr	r0, [pc, #564]	; 2e8b4 <check_client+0x5d0>
   2e67c:	ldr	r0, [pc, r0]
   2e680:	ldr	r1, [r0, #68]	; 0x44
   2e684:	add	r1, r1, #1
   2e688:	str	r1, [r0, #68]	; 0x44
   2e68c:	ldr	r2, [pc, #548]	; 2e8b8 <check_client+0x5d4>
   2e690:	ldr	r2, [pc, r2]
   2e694:	ldr	r3, [pc, #544]	; 2e8bc <check_client+0x5d8>
   2e698:	add	r3, pc, r3
   2e69c:	b	2e83c <check_client+0x558>
   2e6a0:	add	r0, r5, #163	; 0xa3
   2e6a4:	str	r8, [sp]
   2e6a8:	str	r1, [sp, #4]
   2e6ac:	str	r0, [sp, #8]
   2e6b0:	ldr	r2, [pc, #464]	; 2e888 <check_client+0x5a4>
   2e6b4:	add	r2, pc, r2
   2e6b8:	mov	r0, #16
   2e6bc:	mov	r8, r1
   2e6c0:	mov	r1, #256	; 0x100
   2e6c4:	mov	r3, r9
   2e6c8:	bl	d640 <sendto_realops_snomask@plt>
   2e6cc:	ldr	r0, [sl]
   2e6d0:	str	r8, [sp]
   2e6d4:	str	r6, [sp, #4]
   2e6d8:	tst	r0, #128	; 0x80
   2e6dc:	ldr	r0, [pc, #424]	; 2e88c <check_client+0x5a8>
   2e6e0:	add	r0, pc, r0
   2e6e4:	moveq	r7, r0
   2e6e8:	ldr	r1, [pc, #416]	; 2e890 <check_client+0x5ac>
   2e6ec:	add	r1, pc, r1
   2e6f0:	mov	r0, #2
   2e6f4:	mov	r2, r9
   2e6f8:	mov	r3, r7
   2e6fc:	bl	e0b4 <ilog@plt>
   2e700:	ldr	r0, [pc, #396]	; 2e894 <check_client+0x5b0>
   2e704:	ldr	r0, [pc, r0]
   2e708:	ldr	r1, [r0, #68]	; 0x44
   2e70c:	add	r1, r1, #1
   2e710:	str	r1, [r0, #68]	; 0x44
   2e714:	ldr	r2, [pc, #380]	; 2e898 <check_client+0x5b4>
   2e718:	ldr	r2, [pc, r2]
   2e71c:	ldr	r3, [pc, #376]	; 2e89c <check_client+0x5b8>
   2e720:	add	r3, pc, r3
   2e724:	b	2e83c <check_client+0x558>
   2e728:	add	r0, r5, #163	; 0xa3
   2e72c:	str	r8, [sp]
   2e730:	str	r1, [sp, #4]
   2e734:	str	r0, [sp, #8]
   2e738:	ldr	r2, [pc, #296]	; 2e868 <check_client+0x584>
   2e73c:	add	r2, pc, r2
   2e740:	mov	r0, #16
   2e744:	mov	r8, r1
   2e748:	mov	r1, #256	; 0x100
   2e74c:	mov	r3, r9
   2e750:	bl	d640 <sendto_realops_snomask@plt>
   2e754:	ldr	r0, [sl]
   2e758:	str	r8, [sp]
   2e75c:	str	r6, [sp, #4]
   2e760:	tst	r0, #128	; 0x80
   2e764:	ldr	r0, [pc, #256]	; 2e86c <check_client+0x588>
   2e768:	add	r0, pc, r0
   2e76c:	moveq	r7, r0
   2e770:	ldr	r1, [pc, #248]	; 2e870 <check_client+0x58c>
   2e774:	add	r1, pc, r1
   2e778:	mov	r0, #2
   2e77c:	mov	r2, r9
   2e780:	mov	r3, r7
   2e784:	bl	e0b4 <ilog@plt>
   2e788:	ldr	r0, [pc, #228]	; 2e874 <check_client+0x590>
   2e78c:	ldr	r0, [pc, r0]
   2e790:	ldr	r1, [r0, #68]	; 0x44
   2e794:	add	r1, r1, #1
   2e798:	str	r1, [r0, #68]	; 0x44
   2e79c:	ldr	r2, [pc, #212]	; 2e878 <check_client+0x594>
   2e7a0:	ldr	r2, [pc, r2]
   2e7a4:	ldr	r3, [pc, #208]	; 2e87c <check_client+0x598>
   2e7a8:	add	r3, pc, r3
   2e7ac:	b	2e83c <check_client+0x558>
   2e7b0:	ldr	r0, [pc, #272]	; 2e8c8 <check_client+0x5e4>
   2e7b4:	add	r0, pc, r0
   2e7b8:	str	r7, [sp]
   2e7bc:	str	r3, [sp, #4]
   2e7c0:	str	r1, [sp, #8]
   2e7c4:	str	r0, [sp, #12]
   2e7c8:	ldr	r2, [pc, #256]	; 2e8d0 <check_client+0x5ec>
   2e7cc:	add	r2, pc, r2
   2e7d0:	mov	r0, #16
   2e7d4:	mov	r1, #256	; 0x100
   2e7d8:	mov	r7, r3
   2e7dc:	mov	r3, r9
   2e7e0:	bl	d640 <sendto_realops_snomask@plt>
   2e7e4:	ldr	r0, [sl]
   2e7e8:	str	r7, [sp]
   2e7ec:	str	r6, [sp, #4]
   2e7f0:	tst	r0, #128	; 0x80
   2e7f4:	ldr	r0, [pc, #216]	; 2e8d4 <check_client+0x5f0>
   2e7f8:	add	r0, pc, r0
   2e7fc:	moveq	r8, r0
   2e800:	ldr	r1, [pc, #208]	; 2e8d8 <check_client+0x5f4>
   2e804:	add	r1, pc, r1
   2e808:	mov	r0, #2
   2e80c:	mov	r2, r9
   2e810:	mov	r3, r8
   2e814:	bl	e0b4 <ilog@plt>
   2e818:	ldr	r0, [pc, #188]	; 2e8dc <check_client+0x5f8>
   2e81c:	ldr	r0, [pc, r0]
   2e820:	ldr	r1, [r0, #68]	; 0x44
   2e824:	add	r1, r1, #1
   2e828:	str	r1, [r0, #68]	; 0x44
   2e82c:	ldr	r2, [pc, #172]	; 2e8e0 <check_client+0x5fc>
   2e830:	ldr	r2, [pc, r2]
   2e834:	ldr	r3, [pc, #168]	; 2e8e4 <check_client+0x600>
   2e838:	add	r3, pc, r3
   2e83c:	ldr	r0, [sp, #24]
   2e840:	mov	r1, r5
   2e844:	bl	e534 <exit_client@plt>
   2e848:	mov	r0, r4
   2e84c:	sub	sp, fp, #28
   2e850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e854:	.word	0x0001763d
   2e858:	.word	0x0002c65c
   2e85c:	.word	0x0001746f
   2e860:	.word	0x00017586
   2e864:	.word	0x000173d9
   2e868:	.word	0x00017244
   2e86c:	.word	0x00017242
   2e870:	.word	0x00017238
   2e874:	.word	0x0002c230
   2e878:	.word	0x0002c3b8
   2e87c:	.word	0x0001722f
   2e880:	.word	0x000175da
   2e884:	.word	0x0001742d
   2e888:	.word	0x00017345
   2e88c:	.word	0x000172ca
   2e890:	.word	0x00017338
   2e894:	.word	0x0002c2b8
   2e898:	.word	0x0002c440
   2e89c:	.word	0x00017330
   2e8a0:	.word	0x0001762e
   2e8a4:	.word	0x00017481
   2e8a8:	.word	0x00017447
   2e8ac:	.word	0x00017352
   2e8b0:	.word	0x00017438
   2e8b4:	.word	0x0002c340
   2e8b8:	.word	0x0002c4c8
   2e8bc:	.word	0x0001742e
   2e8c0:	.word	0x000174fe
   2e8c4:	.word	0x00017351
   2e8c8:	.word	0x00012d81
   2e8cc:	.word	0x0001304d
   2e8d0:	.word	0x0001731d
   2e8d4:	.word	0x000171b2
   2e8d8:	.word	0x00017309
   2e8dc:	.word	0x0002c1a0
   2e8e0:	.word	0x0002c328
   2e8e4:	.word	0x000172fb
   2e8e8:	.word	0x0002c490
   2e8ec:	.word	0x0001745e
   2e8f0:	.word	0x000172b1
   2e8f4:	.word	0x000175e8
   2e8f8:	.word	0x000173ee
   2e8fc:	.word	0x000175e0
   2e900:	.word	0x00017603
   2e904:	.word	0x0002c554
   2e908:	.word	0x0002c6ec
   2e90c:	.word	0x0001779a
   2e910:	.word	0x0002c534

0002e914 <verify_access>:
   2e914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e918:	add	fp, sp, #24
   2e91c:	sub	sp, sp, #8
   2e920:	mov	r4, r0
   2e924:	bl	301d8 <find_address_conf_by_client>
   2e928:	mvn	r6, #0
   2e92c:	cmp	r0, #0
   2e930:	beq	2ea9c <verify_access+0x188>
   2e934:	mov	r5, r0
   2e938:	ldr	r0, [r0]
   2e93c:	tst	r0, #2
   2e940:	bne	2e9b8 <verify_access+0xa4>
   2e944:	tst	r0, #64	; 0x40
   2e948:	beq	2ea9c <verify_access+0x188>
   2e94c:	ldr	r0, [pc, #388]	; 2ead8 <verify_access+0x1c4>
   2e950:	ldr	r0, [pc, r0]
   2e954:	ldr	r0, [r0, #124]	; 0x7c
   2e958:	cmp	r0, #0
   2e95c:	beq	2e994 <verify_access+0x80>
   2e960:	mov	r0, r5
   2e964:	bl	d010 <get_user_ban_reason@plt>
   2e968:	ldr	r0, [pc, #364]	; 2eadc <verify_access+0x1c8>
   2e96c:	add	r0, pc, r0
   2e970:	str	r0, [sp]
   2e974:	add	r3, r4, #88	; 0x58
   2e978:	ldr	r0, [pc, #352]	; 2eae0 <verify_access+0x1cc>
   2e97c:	ldr	r0, [pc, r0]
   2e980:	add	r2, r0, #88	; 0x58
   2e984:	ldr	r1, [pc, #344]	; 2eae4 <verify_access+0x1d0>
   2e988:	add	r1, pc, r1
   2e98c:	mov	r0, r4
   2e990:	bl	d1e4 <sendto_one@plt>
   2e994:	ldr	r2, [r5, #16]
   2e998:	ldr	r1, [r5, #28]
   2e99c:	mov	r0, #0
   2e9a0:	str	r0, [sp]
   2e9a4:	mov	r0, r4
   2e9a8:	mov	r3, r5
   2e9ac:	bl	e138 <add_reject@plt>
   2e9b0:	mvn	r6, #3
   2e9b4:	b	2ea9c <verify_access+0x188>
   2e9b8:	ldr	r0, [r5, #4]
   2e9bc:	tst	r0, #2048	; 0x800
   2e9c0:	bne	2ea6c <verify_access+0x158>
   2e9c4:	tst	r0, #512	; 0x200
   2e9c8:	beq	2eab8 <verify_access+0x1a4>
   2e9cc:	ldr	r1, [r4, #64]	; 0x40
   2e9d0:	orr	r1, r1, #16777216	; 0x1000000
   2e9d4:	str	r1, [r4, #64]	; 0x40
   2e9d8:	tst	r0, #1024	; 0x400
   2e9dc:	beq	2ea18 <verify_access+0x104>
   2e9e0:	mov	r0, #0
   2e9e4:	mov	r1, r4
   2e9e8:	bl	e60c <show_ip@plt>
   2e9ec:	add	r3, r4, #88	; 0x58
   2e9f0:	cmp	r0, #0
   2e9f4:	ldreq	r0, [r5, #12]
   2e9f8:	addne	r0, r4, #163	; 0xa3
   2e9fc:	ldr	r1, [r5, #12]
   2ea00:	stm	sp, {r0, r1}
   2ea04:	ldr	r2, [pc, #200]	; 2ead4 <verify_access+0x1c0>
   2ea08:	add	r2, pc, r2
   2ea0c:	mov	r0, #256	; 0x100
   2ea10:	mov	r1, #0
   2ea14:	bl	d640 <sendto_realops_snomask@plt>
   2ea18:	ldr	r7, [r5, #12]
   2ea1c:	mov	r8, #64	; 0x40
   2ea20:	mov	r0, r7
   2ea24:	mov	r1, #64	; 0x40
   2ea28:	bl	dce8 <strchr@plt>
   2ea2c:	cmp	r0, #0
   2ea30:	beq	2eaa8 <verify_access+0x194>
   2ea34:	mov	r6, r0
   2ea38:	mov	r0, #0
   2ea3c:	mov	r7, r6
   2ea40:	strb	r0, [r7], #1
   2ea44:	ldr	r1, [r5, #12]
   2ea48:	add	r0, r4, #152	; 0x98
   2ea4c:	mov	r2, #11
   2ea50:	bl	e510 <rb_strlcpy@plt>
   2ea54:	add	r0, r4, #163	; 0xa3
   2ea58:	mov	r1, r7
   2ea5c:	mov	r2, #64	; 0x40
   2ea60:	bl	e510 <rb_strlcpy@plt>
   2ea64:	strb	r8, [r6]
   2ea68:	b	2eab8 <verify_access+0x1a4>
   2ea6c:	ldr	r0, [r5, #12]
   2ea70:	ldr	r1, [r5, #32]
   2ea74:	str	r1, [sp]
   2ea78:	ldr	r3, [pc, #76]	; 2eacc <verify_access+0x1b8>
   2ea7c:	add	r3, pc, r3
   2ea80:	cmp	r0, #0
   2ea84:	movne	r3, r0
   2ea88:	ldr	r2, [pc, #64]	; 2ead0 <verify_access+0x1bc>
   2ea8c:	add	r2, pc, r2
   2ea90:	mov	r0, r4
   2ea94:	mov	r1, #10
   2ea98:	bl	dc88 <sendto_one_numeric@plt>
   2ea9c:	mov	r0, r6
   2eaa0:	sub	sp, fp, #24
   2eaa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eaa8:	add	r0, r4, #163	; 0xa3
   2eaac:	mov	r1, r7
   2eab0:	mov	r2, #64	; 0x40
   2eab4:	bl	e510 <rb_strlcpy@plt>
   2eab8:	mov	r0, r4
   2eabc:	mov	r1, r5
   2eac0:	sub	sp, fp, #24
   2eac4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eac8:	b	3027c <attach_iline>
   2eacc:	.word	0x00016d89
   2ead0:	.word	0x0001732c
   2ead4:	.word	0x000173db
   2ead8:	.word	0x0002c22c
   2eadc:	.word	0x0003c1d4
   2eae0:	.word	0x0002c1dc
   2eae4:	.word	0x00012756

0002eae8 <__bswap_16>:
   2eae8:	rev16	r0, r0
   2eaec:	bx	lr

0002eaf0 <deref_conf>:
   2eaf0:	ldr	r1, [r0, #8]
   2eaf4:	subs	r1, r1, #1
   2eaf8:	str	r1, [r0, #8]
   2eafc:	bxne	lr
   2eb00:	ldr	r1, [r0]
   2eb04:	cmn	r1, #1
   2eb08:	ble	2eb10 <deref_conf+0x20>
   2eb0c:	bx	lr
   2eb10:	b	2e218 <free_conf>

0002eb14 <detach_conf>:
   2eb14:	push	{r4, r5, fp, lr}
   2eb18:	add	fp, sp, #8
   2eb1c:	mov	r4, r0
   2eb20:	ldr	r0, [r0, #432]	; 0x1b0
   2eb24:	ldr	r5, [r0, #132]	; 0x84
   2eb28:	cmp	r5, #0
   2eb2c:	mvneq	r0, #0
   2eb30:	popeq	{r4, r5, fp, pc}
   2eb34:	ldr	r0, [r5, #52]	; 0x34
   2eb38:	cmp	r0, #0
   2eb3c:	beq	2eb84 <detach_conf+0x70>
   2eb40:	mov	r0, r4
   2eb44:	mov	r1, r5
   2eb48:	bl	2ebb8 <remove_ip_limit>
   2eb4c:	ldr	r0, [r5, #52]	; 0x34
   2eb50:	ldr	r1, [r0, #36]	; 0x24
   2eb54:	cmp	r1, #1
   2eb58:	subge	r1, r1, #1
   2eb5c:	strge	r1, [r0, #36]	; 0x24
   2eb60:	ldr	r1, [r0, #8]
   2eb64:	cmn	r1, #1
   2eb68:	bne	2eb84 <detach_conf+0x70>
   2eb6c:	ldr	r1, [r0, #36]	; 0x24
   2eb70:	cmp	r1, #0
   2eb74:	bne	2eb84 <detach_conf+0x70>
   2eb78:	bl	e7bc <free_class@plt>
   2eb7c:	mov	r0, #0
   2eb80:	str	r0, [r5, #52]	; 0x34
   2eb84:	ldr	r0, [r5, #8]
   2eb88:	subs	r0, r0, #1
   2eb8c:	str	r0, [r5, #8]
   2eb90:	bne	2eba8 <detach_conf+0x94>
   2eb94:	ldr	r0, [r5]
   2eb98:	cmn	r0, #1
   2eb9c:	bgt	2eba8 <detach_conf+0x94>
   2eba0:	mov	r0, r5
   2eba4:	bl	dc40 <free_conf@plt>
   2eba8:	ldr	r1, [r4, #432]	; 0x1b0
   2ebac:	mov	r0, #0
   2ebb0:	str	r0, [r1, #132]	; 0x84
   2ebb4:	pop	{r4, r5, fp, pc}

0002ebb8 <remove_ip_limit>:
   2ebb8:	push	{r4, sl, fp, lr}
   2ebbc:	add	fp, sp, #8
   2ebc0:	mov	r4, r1
   2ebc4:	ldr	r1, [r1, #52]	; 0x34
   2ebc8:	ldr	r2, [r1, #52]	; 0x34
   2ebcc:	cmp	r2, #0
   2ebd0:	beq	2ec1c <remove_ip_limit+0x64>
   2ebd4:	ldr	r2, [r1, #44]	; 0x2c
   2ebd8:	cmp	r2, #0
   2ebdc:	bne	2ebec <remove_ip_limit+0x34>
   2ebe0:	ldr	r2, [r1, #48]	; 0x30
   2ebe4:	cmp	r2, #0
   2ebe8:	beq	2ec1c <remove_ip_limit+0x64>
   2ebec:	ldr	r2, [r1, #40]	; 0x28
   2ebf0:	ldr	r0, [r0, #432]	; 0x1b0
   2ebf4:	add	r1, r0, #140	; 0x8c
   2ebf8:	mov	r0, r2
   2ebfc:	bl	d3c4 <rb_match_ip@plt>
   2ec00:	cmp	r0, #0
   2ec04:	popeq	{r4, sl, fp, pc}
   2ec08:	mov	r1, r0
   2ec0c:	ldr	r0, [r0, #20]
   2ec10:	subs	r0, r0, #1
   2ec14:	str	r0, [r1, #20]
   2ec18:	beq	2ec20 <remove_ip_limit+0x68>
   2ec1c:	pop	{r4, sl, fp, pc}
   2ec20:	ldr	r0, [r4, #52]	; 0x34
   2ec24:	ldr	r0, [r0, #40]	; 0x28
   2ec28:	pop	{r4, sl, fp, lr}
   2ec2c:	b	cf74 <rb_patricia_remove@plt>

0002ec30 <attach_conf>:
   2ec30:	push	{r4, r5, fp, lr}
   2ec34:	add	fp, sp, #8
   2ec38:	mov	r5, r0
   2ec3c:	ldr	r0, [r1]
   2ec40:	cmp	r0, #0
   2ec44:	mvnlt	r0, #0
   2ec48:	poplt	{r4, r5, fp, pc}
   2ec4c:	mov	r4, r1
   2ec50:	mov	r0, r5
   2ec54:	bl	2ecec <add_ip_limit>
   2ec58:	cmp	r0, #0
   2ec5c:	mvneq	r0, #5
   2ec60:	popeq	{r4, r5, fp, pc}
   2ec64:	ldrb	r0, [r4]
   2ec68:	tst	r0, #2
   2ec6c:	beq	2eca8 <attach_conf+0x78>
   2ec70:	ldr	r1, [r4, #52]	; 0x34
   2ec74:	ldr	r0, [r1, #8]
   2ec78:	ldr	r1, [r1, #36]	; 0x24
   2ec7c:	cmp	r1, r0
   2ec80:	cmpge	r0, #1
   2ec84:	blt	2eca8 <attach_conf+0x78>
   2ec88:	ldrb	r1, [r4, #4]
   2ec8c:	mvn	r0, #2
   2ec90:	tst	r1, #128	; 0x80
   2ec94:	popeq	{r4, r5, fp, pc}
   2ec98:	ldr	r1, [pc, #72]	; 2ece8 <attach_conf+0xb8>
   2ec9c:	add	r1, pc, r1
   2eca0:	mov	r0, r5
   2eca4:	bl	e414 <sendto_one_notice@plt>
   2eca8:	ldr	r0, [r5, #432]	; 0x1b0
   2ecac:	ldr	r0, [r0, #132]	; 0x84
   2ecb0:	cmp	r0, #0
   2ecb4:	movne	r0, r5
   2ecb8:	blne	d280 <detach_conf@plt>
   2ecbc:	ldr	r0, [r5, #432]	; 0x1b0
   2ecc0:	str	r4, [r0, #132]	; 0x84
   2ecc4:	ldr	r0, [r4, #8]
   2ecc8:	ldr	r1, [r4, #52]	; 0x34
   2eccc:	add	r0, r0, #1
   2ecd0:	str	r0, [r4, #8]
   2ecd4:	ldr	r0, [r1, #36]	; 0x24
   2ecd8:	add	r0, r0, #1
   2ecdc:	str	r0, [r1, #36]	; 0x24
   2ece0:	mov	r0, #0
   2ece4:	pop	{r4, r5, fp, pc}
   2ece8:	.word	0x00016f7e

0002ecec <add_ip_limit>:
   2ecec:	push	{r4, r5, r6, sl, fp, lr}
   2ecf0:	add	fp, sp, #16
   2ecf4:	mov	r4, r1
   2ecf8:	mov	r6, r0
   2ecfc:	ldr	r0, [r1, #52]	; 0x34
   2ed00:	ldr	r1, [r0, #52]	; 0x34
   2ed04:	mvn	r5, #0
   2ed08:	cmp	r1, #0
   2ed0c:	beq	2eda0 <add_ip_limit+0xb4>
   2ed10:	ldr	r1, [r0, #44]	; 0x2c
   2ed14:	cmp	r1, #0
   2ed18:	bne	2ed28 <add_ip_limit+0x3c>
   2ed1c:	ldr	r1, [r0, #48]	; 0x30
   2ed20:	cmp	r1, #0
   2ed24:	beq	2eda0 <add_ip_limit+0xb4>
   2ed28:	ldr	r0, [r0, #40]	; 0x28
   2ed2c:	ldr	r1, [r6, #432]	; 0x1b0
   2ed30:	add	r1, r1, #140	; 0x8c
   2ed34:	bl	d3c4 <rb_match_ip@plt>
   2ed38:	mov	r1, r0
   2ed3c:	cmp	r0, #0
   2ed40:	bne	2ed74 <add_ip_limit+0x88>
   2ed44:	ldr	r0, [r4, #52]	; 0x34
   2ed48:	ldr	r1, [r6, #432]	; 0x1b0
   2ed4c:	ldrh	r2, [r1, #140]!	; 0x8c
   2ed50:	mov	r3, #48	; 0x30
   2ed54:	cmp	r2, #2
   2ed58:	movweq	r3, #44	; 0x2c
   2ed5c:	ldr	r2, [r0, r3]
   2ed60:	ldr	r0, [r0, #40]	; 0x28
   2ed64:	bl	d250 <make_and_lookup_ip@plt>
   2ed68:	mov	r1, r0
   2ed6c:	cmp	r0, #0
   2ed70:	beq	2edb0 <add_ip_limit+0xc4>
   2ed74:	ldr	r2, [r1, #20]
   2ed78:	ldr	r0, [r4, #52]	; 0x34
   2ed7c:	ldr	r3, [r0, #52]	; 0x34
   2ed80:	cmp	r2, r3
   2ed84:	blt	2eda8 <add_ip_limit+0xbc>
   2ed88:	ldrb	r3, [r4, #4]
   2ed8c:	tst	r3, #128	; 0x80
   2ed90:	bne	2eda8 <add_ip_limit+0xbc>
   2ed94:	mov	r5, #0
   2ed98:	cmp	r2, #0
   2ed9c:	beq	2edbc <add_ip_limit+0xd0>
   2eda0:	mov	r0, r5
   2eda4:	pop	{r4, r5, r6, sl, fp, pc}
   2eda8:	add	r0, r2, #1
   2edac:	str	r0, [r1, #20]
   2edb0:	mov	r5, #1
   2edb4:	mov	r0, r5
   2edb8:	pop	{r4, r5, r6, sl, fp, pc}
   2edbc:	ldr	r0, [r0, #40]	; 0x28
   2edc0:	bl	cf74 <rb_patricia_remove@plt>
   2edc4:	mov	r0, r5
   2edc8:	pop	{r4, r5, r6, sl, fp, pc}

0002edcc <rehash>:
   2edcc:	push	{r4, r5, r6, r7, fp, lr}
   2edd0:	add	fp, sp, #16
   2edd4:	sub	sp, sp, #24
   2edd8:	strb	r0, [sp, #20]
   2eddc:	cmp	r0, #0
   2ede0:	beq	2edf8 <rehash+0x2c>
   2ede4:	ldr	r2, [pc, #212]	; 2eec0 <rehash+0xf4>
   2ede8:	add	r2, pc, r2
   2edec:	mov	r0, #256	; 0x100
   2edf0:	mov	r1, #0
   2edf4:	bl	d640 <sendto_realops_snomask@plt>
   2edf8:	bl	ddd8 <rehash_authd@plt>
   2edfc:	mov	r0, #0
   2ee00:	bl	d8e0 <read_conf_files@plt>
   2ee04:	ldr	r0, [pc, #184]	; 2eec4 <rehash+0xf8>
   2ee08:	ldr	r0, [pc, r0]
   2ee0c:	ldr	r1, [r0, #8]
   2ee10:	ldr	r0, [pc, #176]	; 2eec8 <rehash+0xfc>
   2ee14:	ldr	r0, [pc, r0]
   2ee18:	cmp	r1, #0
   2ee1c:	beq	2ee2c <rehash+0x60>
   2ee20:	movw	r2, #345	; 0x159
   2ee24:	add	r0, r0, r2
   2ee28:	b	2ee3c <rehash+0x70>
   2ee2c:	movw	r1, #345	; 0x159
   2ee30:	add	r0, r0, r1
   2ee34:	ldr	r1, [pc, #144]	; 2eecc <rehash+0x100>
   2ee38:	add	r1, pc, r1
   2ee3c:	mov	r2, #51	; 0x33
   2ee40:	bl	e510 <rb_strlcpy@plt>
   2ee44:	bl	e0fc <open_logfiles@plt>
   2ee48:	ldr	r0, [pc, #128]	; 2eed0 <rehash+0x104>
   2ee4c:	ldr	r0, [pc, r0]
   2ee50:	ldr	r5, [r0]
   2ee54:	cmp	r5, #0
   2ee58:	beq	2eea0 <rehash+0xd4>
   2ee5c:	ldr	r6, [pc, #112]	; 2eed4 <rehash+0x108>
   2ee60:	add	r6, pc, r6
   2ee64:	mov	r7, #0
   2ee68:	add	r4, sp, #4
   2ee6c:	ldr	r0, [r5]
   2ee70:	str	r6, [sp, #12]
   2ee74:	str	r7, [sp, #16]
   2ee78:	add	r1, r0, #88	; 0x58
   2ee7c:	str	r1, [sp, #4]
   2ee80:	str	r1, [sp, #8]
   2ee84:	mov	r1, r0
   2ee88:	mov	r2, #3
   2ee8c:	mov	r3, r4
   2ee90:	bl	d628 <user_mode@plt>
   2ee94:	ldr	r5, [r5, #8]
   2ee98:	cmp	r5, #0
   2ee9c:	bne	2ee6c <rehash+0xa0>
   2eea0:	ldr	r0, [pc, #48]	; 2eed8 <rehash+0x10c>
   2eea4:	ldr	r0, [pc, r0]
   2eea8:	ldr	r0, [r0]
   2eeac:	add	r1, sp, #20
   2eeb0:	bl	e654 <call_hook@plt>
   2eeb4:	mov	r0, #0
   2eeb8:	sub	sp, fp, #16
   2eebc:	pop	{r4, r5, r6, r7, fp, pc}
   2eec0:	.word	0x00016e62
   2eec4:	.word	0x0002bb48
   2eec8:	.word	0x0002bd44
   2eecc:	.word	0x000121d4
   2eed0:	.word	0x0002baec
   2eed4:	.word	0x00018ac1
   2eed8:	.word	0x0002bc58

0002eedc <read_conf_files>:
   2eedc:	push	{r4, r5, r6, sl, fp, lr}
   2eee0:	add	fp, sp, #16
   2eee4:	mov	r5, r0
   2eee8:	ldr	r6, [pc, #280]	; 2f008 <read_conf_files+0x12c>
   2eeec:	ldr	r6, [pc, r6]
   2eef0:	mov	r0, #0
   2eef4:	str	r0, [r6]
   2eef8:	ldr	r0, [pc, #268]	; 2f00c <read_conf_files+0x130>
   2eefc:	ldr	r0, [pc, r0]
   2ef00:	ldr	r4, [r0, #4]
   2ef04:	ldr	r0, [pc, #260]	; 2f010 <read_conf_files+0x134>
   2ef08:	ldr	r0, [pc, r0]
   2ef0c:	mov	r1, r4
   2ef10:	movw	r2, #513	; 0x201
   2ef14:	bl	e510 <rb_strlcpy@plt>
   2ef18:	ldr	r1, [pc, #244]	; 2f014 <read_conf_files+0x138>
   2ef1c:	add	r1, pc, r1
   2ef20:	mov	r0, r4
   2ef24:	bl	d1f0 <fopen@plt>
   2ef28:	str	r0, [r6]
   2ef2c:	cmp	r0, #0
   2ef30:	beq	2ef74 <read_conf_files+0x98>
   2ef34:	cmp	r5, #0
   2ef38:	bleq	2fd10 <clear_out_old_conf>
   2ef3c:	ldr	r0, [pc, #216]	; 2f01c <read_conf_files+0x140>
   2ef40:	ldr	r0, [pc, r0]
   2ef44:	ldr	r0, [r0]
   2ef48:	mov	r1, #0
   2ef4c:	bl	e654 <call_hook@plt>
   2ef50:	bl	2ff1c <read_conf>
   2ef54:	ldr	r0, [pc, #196]	; 2f020 <read_conf_files+0x144>
   2ef58:	ldr	r0, [pc, r0]
   2ef5c:	ldr	r0, [r0]
   2ef60:	mov	r1, #0
   2ef64:	bl	e654 <call_hook@plt>
   2ef68:	ldr	r0, [r6]
   2ef6c:	pop	{r4, r5, r6, sl, fp, lr}
   2ef70:	b	e0f0 <fclose@plt>
   2ef74:	cmp	r5, #0
   2ef78:	bne	2ef98 <read_conf_files+0xbc>
   2ef7c:	ldr	r2, [pc, #148]	; 2f018 <read_conf_files+0x13c>
   2ef80:	add	r2, pc, r2
   2ef84:	mov	r0, #256	; 0x100
   2ef88:	mov	r1, #0
   2ef8c:	mov	r3, r4
   2ef90:	pop	{r4, r5, r6, sl, fp, lr}
   2ef94:	b	d640 <sendto_realops_snomask@plt>
   2ef98:	ldr	r0, [pc, #132]	; 2f024 <read_conf_files+0x148>
   2ef9c:	add	r0, pc, r0
   2efa0:	mov	r1, r4
   2efa4:	bl	d10c <inotice@plt>
   2efa8:	ldr	r1, [pc, #120]	; 2f028 <read_conf_files+0x14c>
   2efac:	add	r1, pc, r1
   2efb0:	mov	r0, #0
   2efb4:	mov	r2, r4
   2efb8:	bl	e0b4 <ilog@plt>
   2efbc:	bl	de38 <__errno_location@plt>
   2efc0:	ldr	r5, [r0]
   2efc4:	mov	r0, r5
   2efc8:	bl	dacc <strerror@plt>
   2efcc:	mov	r1, r0
   2efd0:	ldr	r6, [pc, #84]	; 2f02c <read_conf_files+0x150>
   2efd4:	add	r6, pc, r6
   2efd8:	mov	r0, r6
   2efdc:	mov	r2, r4
   2efe0:	bl	d10c <inotice@plt>
   2efe4:	mov	r0, r5
   2efe8:	bl	dacc <strerror@plt>
   2efec:	mov	r2, r0
   2eff0:	mov	r0, #0
   2eff4:	mov	r1, r6
   2eff8:	mov	r3, r4
   2effc:	bl	e0b4 <ilog@plt>
   2f000:	mvn	r0, #0
   2f004:	bl	dc34 <exit@plt>
   2f008:	.word	0x0002bb10
   2f00c:	.word	0x0002bc80
   2f010:	.word	0x0002bc68
   2f014:	.word	0x0001342d
   2f018:	.word	0x00016d9e
   2f01c:	.word	0x0002b990
   2f020:	.word	0x0002bbc8
   2f024:	.word	0x00016d1b
   2f028:	.word	0x00016d3d
   2f02c:	.word	0x00016d3d

0002f030 <rehash_bans>:
   2f030:	b	d8a4 <bandb_rehash_bans@plt>

0002f034 <add_temp_kline>:
   2f034:	push	{r4, r5, r6, sl, fp, lr}
   2f038:	add	fp, sp, #16
   2f03c:	sub	sp, sp, #8
   2f040:	mov	r4, r0
   2f044:	ldr	r5, [r0, #36]	; 0x24
   2f048:	bl	d07c <rb_current_time@plt>
   2f04c:	add	r0, r0, #14976	; 0x3a80
   2f050:	add	r0, r0, #589824	; 0x90000
   2f054:	cmp	r5, r0
   2f058:	bge	2f0a8 <add_temp_kline+0x74>
   2f05c:	ldr	r5, [r4, #36]	; 0x24
   2f060:	bl	d07c <rb_current_time@plt>
   2f064:	add	r0, r0, #4480	; 0x1180
   2f068:	add	r0, r0, #81920	; 0x14000
   2f06c:	cmp	r5, r0
   2f070:	bge	2f0cc <add_temp_kline+0x98>
   2f074:	ldr	r5, [r4, #36]	; 0x24
   2f078:	bl	d07c <rb_current_time@plt>
   2f07c:	add	r6, r0, #3600	; 0xe10
   2f080:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f084:	mov	r1, r0
   2f088:	cmp	r5, r6
   2f08c:	bge	2f0f0 <add_temp_kline+0xbc>
   2f090:	ldr	r2, [pc, #172]	; 2f144 <add_temp_kline+0x110>
   2f094:	ldr	r2, [pc, r2]
   2f098:	mov	r0, r4
   2f09c:	bl	2f148 <rb_dlinkAdd>
   2f0a0:	mov	r0, #0
   2f0a4:	b	2f108 <add_temp_kline+0xd4>
   2f0a8:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f0ac:	mov	r1, r0
   2f0b0:	ldr	r0, [pc, #128]	; 2f138 <add_temp_kline+0x104>
   2f0b4:	ldr	r0, [pc, r0]
   2f0b8:	add	r2, r0, #36	; 0x24
   2f0bc:	mov	r0, r4
   2f0c0:	bl	2f148 <rb_dlinkAdd>
   2f0c4:	mov	r0, #3
   2f0c8:	b	2f108 <add_temp_kline+0xd4>
   2f0cc:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f0d0:	mov	r1, r0
   2f0d4:	ldr	r0, [pc, #96]	; 2f13c <add_temp_kline+0x108>
   2f0d8:	ldr	r0, [pc, r0]
   2f0dc:	add	r2, r0, #24
   2f0e0:	mov	r0, r4
   2f0e4:	bl	2f148 <rb_dlinkAdd>
   2f0e8:	mov	r0, #2
   2f0ec:	b	2f108 <add_temp_kline+0xd4>
   2f0f0:	ldr	r0, [pc, #72]	; 2f140 <add_temp_kline+0x10c>
   2f0f4:	ldr	r0, [pc, r0]
   2f0f8:	add	r2, r0, #12
   2f0fc:	mov	r0, r4
   2f100:	bl	2f148 <rb_dlinkAdd>
   2f104:	mov	r0, #1
   2f108:	str	r0, [r4, #32]
   2f10c:	ldr	r1, [r4, #4]
   2f110:	ldr	r0, [r4, #16]
   2f114:	ldr	r2, [r4, #28]
   2f118:	orr	r1, r1, #8388608	; 0x800000
   2f11c:	str	r1, [r4, #4]
   2f120:	str	r4, [sp]
   2f124:	mov	r1, #64	; 0x40
   2f128:	mov	r3, #0
   2f12c:	bl	dad8 <add_conf_by_address@plt>
   2f130:	sub	sp, fp, #16
   2f134:	pop	{r4, r5, r6, sl, fp, pc}
   2f138:	.word	0x0002ba44
   2f13c:	.word	0x0002ba20
   2f140:	.word	0x0002ba04
   2f144:	.word	0x0002ba64

0002f148 <rb_dlinkAdd>:
   2f148:	push	{fp, lr}
   2f14c:	mov	fp, sp
   2f150:	cmp	r0, #0
   2f154:	beq	2f1b4 <rb_dlinkAdd+0x6c>
   2f158:	cmp	r1, #0
   2f15c:	beq	2f1d4 <rb_dlinkAdd+0x8c>
   2f160:	cmp	r2, #0
   2f164:	beq	2f1f4 <rb_dlinkAdd+0xac>
   2f168:	mov	r3, #0
   2f16c:	stm	r1, {r0, r3}
   2f170:	ldr	r0, [r2]
   2f174:	str	r0, [r1, #8]
   2f178:	ldr	r0, [r2]
   2f17c:	cmp	r0, #0
   2f180:	beq	2f190 <rb_dlinkAdd+0x48>
   2f184:	add	r0, r0, #4
   2f188:	str	r1, [r0]
   2f18c:	b	2f1a0 <rb_dlinkAdd+0x58>
   2f190:	mov	r0, r2
   2f194:	ldr	r3, [r0, #4]!
   2f198:	cmp	r3, #0
   2f19c:	streq	r1, [r0]
   2f1a0:	str	r1, [r2]
   2f1a4:	ldr	r0, [r2, #8]
   2f1a8:	add	r0, r0, #1
   2f1ac:	str	r0, [r2, #8]
   2f1b0:	pop	{fp, pc}
   2f1b4:	ldr	r0, [pc, #88]	; 2f214 <rb_dlinkAdd+0xcc>
   2f1b8:	add	r0, pc, r0
   2f1bc:	ldr	r1, [pc, #84]	; 2f218 <rb_dlinkAdd+0xd0>
   2f1c0:	add	r1, pc, r1
   2f1c4:	ldr	r3, [pc, #80]	; 2f21c <rb_dlinkAdd+0xd4>
   2f1c8:	add	r3, pc, r3
   2f1cc:	mov	r2, #143	; 0x8f
   2f1d0:	bl	e7e0 <__assert_fail@plt>
   2f1d4:	ldr	r0, [pc, #68]	; 2f220 <rb_dlinkAdd+0xd8>
   2f1d8:	add	r0, pc, r0
   2f1dc:	ldr	r1, [pc, #64]	; 2f224 <rb_dlinkAdd+0xdc>
   2f1e0:	add	r1, pc, r1
   2f1e4:	ldr	r3, [pc, #60]	; 2f228 <rb_dlinkAdd+0xe0>
   2f1e8:	add	r3, pc, r3
   2f1ec:	mov	r2, #144	; 0x90
   2f1f0:	bl	e7e0 <__assert_fail@plt>
   2f1f4:	ldr	r0, [pc, #48]	; 2f22c <rb_dlinkAdd+0xe4>
   2f1f8:	add	r0, pc, r0
   2f1fc:	ldr	r1, [pc, #44]	; 2f230 <rb_dlinkAdd+0xe8>
   2f200:	add	r1, pc, r1
   2f204:	ldr	r3, [pc, #40]	; 2f234 <rb_dlinkAdd+0xec>
   2f208:	add	r3, pc, r3
   2f20c:	mov	r2, #145	; 0x91
   2f210:	bl	e7e0 <__assert_fail@plt>
   2f214:	.word	0x00011459
   2f218:	.word	0x000113f6
   2f21c:	.word	0x00011456
   2f220:	.word	0x000113d4
   2f224:	.word	0x000113d6
   2f228:	.word	0x00011436
   2f22c:	.word	0x00016c4d
   2f230:	.word	0x000113b6
   2f234:	.word	0x00011416

0002f238 <add_temp_dline>:
   2f238:	push	{r4, r5, r6, sl, fp, lr}
   2f23c:	add	fp, sp, #16
   2f240:	sub	sp, sp, #8
   2f244:	mov	r4, r0
   2f248:	ldr	r5, [r0, #36]	; 0x24
   2f24c:	bl	d07c <rb_current_time@plt>
   2f250:	add	r0, r0, #14976	; 0x3a80
   2f254:	add	r0, r0, #589824	; 0x90000
   2f258:	cmp	r5, r0
   2f25c:	bge	2f2ac <add_temp_dline+0x74>
   2f260:	ldr	r5, [r4, #36]	; 0x24
   2f264:	bl	d07c <rb_current_time@plt>
   2f268:	add	r0, r0, #4480	; 0x1180
   2f26c:	add	r0, r0, #81920	; 0x14000
   2f270:	cmp	r5, r0
   2f274:	bge	2f2d0 <add_temp_dline+0x98>
   2f278:	ldr	r5, [r4, #36]	; 0x24
   2f27c:	bl	d07c <rb_current_time@plt>
   2f280:	add	r6, r0, #3600	; 0xe10
   2f284:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f288:	mov	r1, r0
   2f28c:	cmp	r5, r6
   2f290:	bge	2f2f4 <add_temp_dline+0xbc>
   2f294:	ldr	r2, [pc, #172]	; 2f348 <add_temp_dline+0x110>
   2f298:	ldr	r2, [pc, r2]
   2f29c:	mov	r0, r4
   2f2a0:	bl	2f148 <rb_dlinkAdd>
   2f2a4:	mov	r0, #0
   2f2a8:	b	2f30c <add_temp_dline+0xd4>
   2f2ac:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f2b0:	mov	r1, r0
   2f2b4:	ldr	r0, [pc, #128]	; 2f33c <add_temp_dline+0x104>
   2f2b8:	ldr	r0, [pc, r0]
   2f2bc:	add	r2, r0, #36	; 0x24
   2f2c0:	mov	r0, r4
   2f2c4:	bl	2f148 <rb_dlinkAdd>
   2f2c8:	mov	r0, #3
   2f2cc:	b	2f30c <add_temp_dline+0xd4>
   2f2d0:	bl	dc64 <rb_make_rb_dlink_node@plt>
   2f2d4:	mov	r1, r0
   2f2d8:	ldr	r0, [pc, #96]	; 2f340 <add_temp_dline+0x108>
   2f2dc:	ldr	r0, [pc, r0]
   2f2e0:	add	r2, r0, #24
   2f2e4:	mov	r0, r4
   2f2e8:	bl	2f148 <rb_dlinkAdd>
   2f2ec:	mov	r0, #2
   2f2f0:	b	2f30c <add_temp_dline+0xd4>
   2f2f4:	ldr	r0, [pc, #72]	; 2f344 <add_temp_dline+0x10c>
   2f2f8:	ldr	r0, [pc, r0]
   2f2fc:	add	r2, r0, #12
   2f300:	mov	r0, r4
   2f304:	bl	2f148 <rb_dlinkAdd>
   2f308:	mov	r0, #1
   2f30c:	str	r0, [r4, #32]
   2f310:	ldr	r1, [r4, #4]
   2f314:	ldr	r0, [r4, #16]
   2f318:	ldr	r2, [r4, #28]
   2f31c:	orr	r1, r1, #8388608	; 0x800000
   2f320:	str	r1, [r4, #4]
   2f324:	str	r4, [sp]
   2f328:	mov	r1, #131072	; 0x20000
   2f32c:	mov	r3, #0
   2f330:	bl	dad8 <add_conf_by_address@plt>
   2f334:	sub	sp, fp, #16
   2f338:	pop	{r4, r5, r6, sl, fp, pc}
   2f33c:	.word	0x0002b7c0
   2f340:	.word	0x0002b79c
   2f344:	.word	0x0002b780
   2f348:	.word	0x0002b7e0

0002f34c <valid_wild_card>:
   2f34c:	push	{r4, r5, r6, sl, fp, lr}
   2f350:	add	fp, sp, #16
   2f354:	mov	r4, r1
   2f358:	mov	r5, r0
   2f35c:	mov	r1, #63	; 0x3f
   2f360:	bl	dce8 <strchr@plt>
   2f364:	cmp	r0, #0
   2f368:	bne	2f380 <valid_wild_card+0x34>
   2f36c:	mov	r0, r5
   2f370:	mov	r1, #42	; 0x2a
   2f374:	bl	dce8 <strchr@plt>
   2f378:	cmp	r0, #0
   2f37c:	beq	2f45c <valid_wild_card+0x110>
   2f380:	ldrb	r3, [r5]
   2f384:	cmp	r3, #0
   2f388:	beq	2f3d8 <valid_wild_card+0x8c>
   2f38c:	add	r0, r5, #1
   2f390:	ldr	r1, [pc, #296]	; 2f4c0 <valid_wild_card+0x174>
   2f394:	ldr	r1, [pc, r1]
   2f398:	ldr	r1, [r1, #236]	; 0xec
   2f39c:	mov	r6, #0
   2f3a0:	ldr	r2, [pc, #284]	; 2f4c4 <valid_wild_card+0x178>
   2f3a4:	ldr	r2, [pc, r2]
   2f3a8:	uxtb	r3, r3
   2f3ac:	add	r3, r2, r3, lsl #2
   2f3b0:	ldrb	r3, [r3, #1]
   2f3b4:	tst	r3, #1
   2f3b8:	bne	2f3c8 <valid_wild_card+0x7c>
   2f3bc:	add	r6, r6, #1
   2f3c0:	cmp	r6, r1
   2f3c4:	bge	2f45c <valid_wild_card+0x110>
   2f3c8:	ldrb	r3, [r0], #1
   2f3cc:	cmp	r3, #0
   2f3d0:	bne	2f3a8 <valid_wild_card+0x5c>
   2f3d4:	b	2f3dc <valid_wild_card+0x90>
   2f3d8:	mov	r6, #0
   2f3dc:	mov	r0, r4
   2f3e0:	mov	r1, #47	; 0x2f
   2f3e4:	bl	e27c <strrchr@plt>
   2f3e8:	cmp	r0, #0
   2f3ec:	beq	2f408 <valid_wild_card+0xbc>
   2f3f0:	ldrb	r1, [r0, #1]!
   2f3f4:	ldr	r2, [pc, #204]	; 2f4c8 <valid_wild_card+0x17c>
   2f3f8:	ldr	r2, [pc, r2]
   2f3fc:	ldrb	r1, [r2, r1, lsl #2]
   2f400:	tst	r1, #16
   2f404:	bne	2f464 <valid_wild_card+0x118>
   2f408:	ldrb	r3, [r4]
   2f40c:	cmp	r3, #0
   2f410:	beq	2f4a0 <valid_wild_card+0x154>
   2f414:	add	r0, r4, #1
   2f418:	ldr	r1, [pc, #176]	; 2f4d0 <valid_wild_card+0x184>
   2f41c:	ldr	r1, [pc, r1]
   2f420:	ldr	r1, [r1, #236]	; 0xec
   2f424:	ldr	r2, [pc, #168]	; 2f4d4 <valid_wild_card+0x188>
   2f428:	ldr	r2, [pc, r2]
   2f42c:	uxtb	r3, r3
   2f430:	add	r3, r2, r3, lsl #2
   2f434:	ldrb	r3, [r3, #1]
   2f438:	tst	r3, #1
   2f43c:	bne	2f44c <valid_wild_card+0x100>
   2f440:	add	r6, r6, #1
   2f444:	cmp	r6, r1
   2f448:	bge	2f45c <valid_wild_card+0x110>
   2f44c:	ldrb	r3, [r0], #1
   2f450:	cmp	r3, #0
   2f454:	bne	2f42c <valid_wild_card+0xe0>
   2f458:	b	2f4a0 <valid_wild_card+0x154>
   2f45c:	mov	r0, #1
   2f460:	pop	{r4, r5, r6, sl, fp, pc}
   2f464:	bl	e468 <atoi@plt>
   2f468:	cmp	r0, #1
   2f46c:	blt	2f4a0 <valid_wild_card+0x154>
   2f470:	mov	r5, r0
   2f474:	mov	r0, r4
   2f478:	mov	r1, #58	; 0x3a
   2f47c:	bl	dce8 <strchr@plt>
   2f480:	cmp	r0, #0
   2f484:	beq	2f4a8 <valid_wild_card+0x15c>
   2f488:	ldr	r0, [pc, #60]	; 2f4cc <valid_wild_card+0x180>
   2f48c:	ldr	r0, [pc, r0]
   2f490:	ldr	r0, [r0, #236]	; 0xec
   2f494:	sub	r0, r0, r6
   2f498:	lsl	r1, r0, #2
   2f49c:	b	2f4b0 <valid_wild_card+0x164>
   2f4a0:	mov	r0, #0
   2f4a4:	pop	{r4, r5, r6, sl, fp, pc}
   2f4a8:	mov	r0, #6
   2f4ac:	sub	r1, r0, r6, lsl #1
   2f4b0:	mov	r0, #1
   2f4b4:	cmp	r5, r1
   2f4b8:	movlt	r0, #0
   2f4bc:	pop	{r4, r5, r6, sl, fp, pc}
   2f4c0:	.word	0x0002b7e8
   2f4c4:	.word	0x0002b654
   2f4c8:	.word	0x0002b600
   2f4cc:	.word	0x0002b6f0
   2f4d0:	.word	0x0002b760
   2f4d4:	.word	0x0002b5d0

0002f4d8 <find_prop_ban>:
   2f4d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f4dc:	add	fp, sp, #24
   2f4e0:	mov	r7, r0
   2f4e4:	ldr	r0, [pc, #128]	; 2f56c <find_prop_ban+0x94>
   2f4e8:	ldr	r0, [pc, r0]
   2f4ec:	ldr	r4, [r0]
   2f4f0:	mov	r8, #0
   2f4f4:	cmp	r4, #0
   2f4f8:	beq	2f564 <find_prop_ban+0x8c>
   2f4fc:	mov	r9, r2
   2f500:	mov	r6, r1
   2f504:	b	2f51c <find_prop_ban+0x44>
   2f508:	mov	r1, r6
   2f50c:	bl	e750 <irccmp@plt>
   2f510:	cmp	r0, #0
   2f514:	bne	2f558 <find_prop_ban+0x80>
   2f518:	b	2f540 <find_prop_ban+0x68>
   2f51c:	ldr	r5, [r4]
   2f520:	ldr	r0, [r5]
   2f524:	bic	r0, r0, #-2147483648	; 0x80000000
   2f528:	cmp	r0, r7
   2f52c:	bne	2f558 <find_prop_ban+0x80>
   2f530:	cmp	r6, #0
   2f534:	ldrne	r0, [r5, #28]
   2f538:	cmpne	r0, #0
   2f53c:	bne	2f508 <find_prop_ban+0x30>
   2f540:	ldr	r0, [r5, #16]
   2f544:	mov	r1, r9
   2f548:	bl	e750 <irccmp@plt>
   2f54c:	cmp	r0, #0
   2f550:	moveq	r0, r4
   2f554:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f558:	ldr	r4, [r4, #8]
   2f55c:	cmp	r4, #0
   2f560:	bne	2f51c <find_prop_ban+0x44>
   2f564:	mov	r0, r8
   2f568:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f56c:	.word	0x0002b3d8

0002f570 <deactivate_conf>:
   2f570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f574:	add	fp, sp, #24
   2f578:	mov	r6, r2
   2f57c:	mov	r8, r1
   2f580:	mov	r4, r0
   2f584:	ldr	r0, [r0]
   2f588:	cmp	r0, #255	; 0xff
   2f58c:	ble	2f5e8 <deactivate_conf+0x78>
   2f590:	cmp	r0, #256	; 0x100
   2f594:	beq	2f604 <deactivate_conf+0x94>
   2f598:	cmp	r0, #512	; 0x200
   2f59c:	beq	2f614 <deactivate_conf+0xa4>
   2f5a0:	cmp	r0, #131072	; 0x20000
   2f5a4:	bne	2f688 <deactivate_conf+0x118>
   2f5a8:	ldr	r0, [r4, #44]	; 0x2c
   2f5ac:	cmp	r0, #0
   2f5b0:	bne	2f664 <deactivate_conf+0xf4>
   2f5b4:	ldrb	r0, [r4, #6]
   2f5b8:	tst	r0, #128	; 0x80
   2f5bc:	beq	2f664 <deactivate_conf+0xf4>
   2f5c0:	mov	r7, #0
   2f5c4:	ldr	r5, [pc, #284]	; 2f6e8 <deactivate_conf+0x178>
   2f5c8:	ldr	r5, [pc, r5]
   2f5cc:	add	r1, r5, r7
   2f5d0:	mov	r0, r4
   2f5d4:	bl	2f6f8 <rb_dlinkFindDestroy>
   2f5d8:	add	r7, r7, #12
   2f5dc:	cmp	r7, #48	; 0x30
   2f5e0:	bne	2f5cc <deactivate_conf+0x5c>
   2f5e4:	b	2f664 <deactivate_conf+0xf4>
   2f5e8:	cmp	r0, #64	; 0x40
   2f5ec:	beq	2f628 <deactivate_conf+0xb8>
   2f5f0:	cmp	r0, #128	; 0x80
   2f5f4:	bne	2f688 <deactivate_conf+0x118>
   2f5f8:	ldr	r1, [pc, #228]	; 2f6e4 <deactivate_conf+0x174>
   2f5fc:	ldr	r1, [pc, r1]
   2f600:	b	2f61c <deactivate_conf+0xac>
   2f604:	ldr	r0, [r4, #16]
   2f608:	mov	r1, r4
   2f60c:	bl	e1c8 <del_from_resv_hash@plt>
   2f610:	b	2f688 <deactivate_conf+0x118>
   2f614:	ldr	r1, [pc, #212]	; 2f6f0 <deactivate_conf+0x180>
   2f618:	ldr	r1, [pc, r1]
   2f61c:	mov	r0, r4
   2f620:	bl	2f6f8 <rb_dlinkFindDestroy>
   2f624:	b	2f688 <deactivate_conf+0x118>
   2f628:	ldr	r0, [r4, #44]	; 0x2c
   2f62c:	cmp	r0, #0
   2f630:	bne	2f664 <deactivate_conf+0xf4>
   2f634:	ldrb	r0, [r4, #6]
   2f638:	tst	r0, #128	; 0x80
   2f63c:	beq	2f664 <deactivate_conf+0xf4>
   2f640:	mov	r7, #0
   2f644:	ldr	r5, [pc, #160]	; 2f6ec <deactivate_conf+0x17c>
   2f648:	ldr	r5, [pc, r5]
   2f64c:	add	r1, r5, r7
   2f650:	mov	r0, r4
   2f654:	bl	2f6f8 <rb_dlinkFindDestroy>
   2f658:	add	r7, r7, #12
   2f65c:	cmp	r7, #48	; 0x30
   2f660:	bne	2f64c <deactivate_conf+0xdc>
   2f664:	ldr	r1, [r4, #8]
   2f668:	ldr	r0, [r4, #16]
   2f66c:	add	r1, r1, #1
   2f670:	str	r1, [r4, #8]
   2f674:	mov	r1, r4
   2f678:	bl	e054 <delete_one_address_conf@plt>
   2f67c:	ldr	r0, [r4, #8]
   2f680:	sub	r0, r0, #1
   2f684:	str	r0, [r4, #8]
   2f688:	ldr	r0, [r4, #44]	; 0x2c
   2f68c:	cmp	r0, #0
   2f690:	beq	2f69c <deactivate_conf+0x12c>
   2f694:	cmp	r0, r6
   2f698:	bgt	2f6c8 <deactivate_conf+0x158>
   2f69c:	cmp	r0, #0
   2f6a0:	beq	2f6bc <deactivate_conf+0x14c>
   2f6a4:	ldr	r1, [pc, #72]	; 2f6f4 <deactivate_conf+0x184>
   2f6a8:	ldr	r1, [pc, r1]
   2f6ac:	mov	r0, r8
   2f6b0:	bl	2f77c <rb_dlinkDelete>
   2f6b4:	mov	r0, r8
   2f6b8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   2f6bc:	ldr	r0, [r4, #8]
   2f6c0:	cmp	r0, #0
   2f6c4:	beq	2f6d8 <deactivate_conf+0x168>
   2f6c8:	ldr	r0, [r4]
   2f6cc:	orr	r0, r0, #-2147483648	; 0x80000000
   2f6d0:	str	r0, [r4]
   2f6d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f6d8:	mov	r0, r4
   2f6dc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f6e0:	b	2e218 <free_conf>
   2f6e4:	.word	0x0002b2c8
   2f6e8:	.word	0x0002b4b0
   2f6ec:	.word	0x0002b4b0
   2f6f0:	.word	0x0002b294
   2f6f4:	.word	0x0002b218

0002f6f8 <rb_dlinkFindDestroy>:
   2f6f8:	push	{fp, lr}
   2f6fc:	mov	fp, sp
   2f700:	cmp	r1, #0
   2f704:	beq	2f724 <rb_dlinkFindDestroy+0x2c>
   2f708:	cmp	r0, #0
   2f70c:	beq	2f744 <rb_dlinkFindDestroy+0x4c>
   2f710:	bl	30410 <rb_dlinkFindDelete>
   2f714:	cmp	r0, #0
   2f718:	popeq	{fp, pc}
   2f71c:	pop	{fp, lr}
   2f720:	b	d7c0 <rb_free_rb_dlink_node@plt>
   2f724:	ldr	r0, [pc, #56]	; 2f764 <rb_dlinkFindDestroy+0x6c>
   2f728:	add	r0, pc, r0
   2f72c:	ldr	r1, [pc, #52]	; 2f768 <rb_dlinkFindDestroy+0x70>
   2f730:	add	r1, pc, r1
   2f734:	ldr	r3, [pc, #48]	; 2f76c <rb_dlinkFindDestroy+0x74>
   2f738:	add	r3, pc, r3
   2f73c:	movw	r2, #287	; 0x11f
   2f740:	bl	e7e0 <__assert_fail@plt>
   2f744:	ldr	r0, [pc, #36]	; 2f770 <rb_dlinkFindDestroy+0x78>
   2f748:	add	r0, pc, r0
   2f74c:	ldr	r1, [pc, #32]	; 2f774 <rb_dlinkFindDestroy+0x7c>
   2f750:	add	r1, pc, r1
   2f754:	ldr	r3, [pc, #28]	; 2f778 <rb_dlinkFindDestroy+0x80>
   2f758:	add	r3, pc, r3
   2f75c:	mov	r2, #288	; 0x120
   2f760:	bl	e7e0 <__assert_fail@plt>
   2f764:	.word	0x0001671d
   2f768:	.word	0x00010e86
   2f76c:	.word	0x0001148d
   2f770:	.word	0x00010ec9
   2f774:	.word	0x00010e66
   2f778:	.word	0x0001146d

0002f77c <rb_dlinkDelete>:
   2f77c:	push	{fp, lr}
   2f780:	mov	fp, sp
   2f784:	cmp	r0, #0
   2f788:	beq	2f7dc <rb_dlinkDelete+0x60>
   2f78c:	cmp	r1, #0
   2f790:	beq	2f7fc <rb_dlinkDelete+0x80>
   2f794:	ldr	ip, [r0, #4]
   2f798:	ldr	r3, [r0, #8]
   2f79c:	add	r2, r3, #4
   2f7a0:	cmp	r3, #0
   2f7a4:	addeq	r2, r1, #4
   2f7a8:	str	ip, [r2]
   2f7ac:	ldmib	r0, {r2, ip}
   2f7b0:	cmp	r2, #0
   2f7b4:	mov	r3, r1
   2f7b8:	addne	r3, r2, #8
   2f7bc:	str	ip, [r3]
   2f7c0:	mov	r2, #0
   2f7c4:	str	r2, [r0, #4]
   2f7c8:	str	r2, [r0, #8]
   2f7cc:	ldr	r0, [r1, #8]
   2f7d0:	sub	r0, r0, #1
   2f7d4:	str	r0, [r1, #8]
   2f7d8:	pop	{fp, pc}
   2f7dc:	ldr	r0, [pc, #56]	; 2f81c <rb_dlinkDelete+0xa0>
   2f7e0:	add	r0, pc, r0
   2f7e4:	ldr	r1, [pc, #52]	; 2f820 <rb_dlinkDelete+0xa4>
   2f7e8:	add	r1, pc, r1
   2f7ec:	ldr	r3, [pc, #48]	; 2f824 <rb_dlinkDelete+0xa8>
   2f7f0:	add	r3, pc, r3
   2f7f4:	mov	r2, #235	; 0xeb
   2f7f8:	bl	e7e0 <__assert_fail@plt>
   2f7fc:	ldr	r0, [pc, #36]	; 2f828 <rb_dlinkDelete+0xac>
   2f800:	add	r0, pc, r0
   2f804:	ldr	r1, [pc, #32]	; 2f82c <rb_dlinkDelete+0xb0>
   2f808:	add	r1, pc, r1
   2f80c:	ldr	r3, [pc, #28]	; 2f830 <rb_dlinkDelete+0xb4>
   2f810:	add	r3, pc, r3
   2f814:	mov	r2, #236	; 0xec
   2f818:	bl	e7e0 <__assert_fail@plt>
   2f81c:	.word	0x00010dcc
   2f820:	.word	0x00010dce
   2f824:	.word	0x00010e69
   2f828:	.word	0x00016645
   2f82c:	.word	0x00010dae
   2f830:	.word	0x00010e49

0002f834 <replace_old_ban>:
   2f834:	push	{r4, r5, r6, sl, fp, lr}
   2f838:	add	fp, sp, #16
   2f83c:	mov	r4, r0
   2f840:	ldr	r0, [r0]
   2f844:	ldr	r2, [r4, #16]
   2f848:	ldr	r1, [r4, #28]
   2f84c:	bl	e258 <find_prop_ban@plt>
   2f850:	cmp	r0, #0
   2f854:	popeq	{r4, r5, r6, sl, fp, pc}
   2f858:	mov	r5, r0
   2f85c:	ldr	r6, [r0]
   2f860:	ldr	r0, [r6, #44]	; 0x2c
   2f864:	ldr	r1, [r4, #44]	; 0x2c
   2f868:	cmp	r0, r1
   2f86c:	strgt	r0, [r4, #44]	; 0x2c
   2f870:	ldr	r0, [r6, #40]	; 0x28
   2f874:	ldr	r1, [r4, #40]	; 0x28
   2f878:	cmp	r0, r1
   2f87c:	addge	r0, r0, #1
   2f880:	strge	r0, [r4, #40]	; 0x28
   2f884:	ldr	r1, [r4, #36]	; 0x24
   2f888:	ldr	r0, [r4, #40]	; 0x28
   2f88c:	cmp	r1, r0
   2f890:	addle	r0, r0, #1
   2f894:	strle	r0, [r4, #36]	; 0x24
   2f898:	ldr	r0, [r4, #36]	; 0x24
   2f89c:	ldr	r1, [r4, #44]	; 0x2c
   2f8a0:	cmp	r1, r0
   2f8a4:	strlt	r0, [r4, #44]	; 0x2c
   2f8a8:	bl	d07c <rb_current_time@plt>
   2f8ac:	mov	r2, r0
   2f8b0:	str	r0, [r6, #44]	; 0x2c
   2f8b4:	mov	r0, r6
   2f8b8:	mov	r1, r5
   2f8bc:	pop	{r4, r5, r6, sl, fp, lr}
   2f8c0:	b	2f570 <deactivate_conf>

0002f8c4 <get_oper_name>:
   2f8c4:	push	{fp, lr}
   2f8c8:	mov	fp, sp
   2f8cc:	sub	sp, sp, #16
   2f8d0:	ldrb	r1, [r0, #65]	; 0x41
   2f8d4:	tst	r1, #32
   2f8d8:	ldrbne	r1, [r0, #57]	; 0x39
   2f8dc:	tstne	r1, #16
   2f8e0:	bne	2f8f8 <get_oper_name+0x34>
   2f8e4:	ldr	r1, [r0, #32]
   2f8e8:	add	r2, r0, #163	; 0xa3
   2f8ec:	add	r3, r0, #152	; 0x98
   2f8f0:	add	r1, r1, #88	; 0x58
   2f8f4:	b	2f908 <get_oper_name+0x44>
   2f8f8:	ldr	r1, [r0, #24]
   2f8fc:	ldr	r1, [r1, #32]
   2f900:	add	r2, r0, #163	; 0xa3
   2f904:	add	r3, r0, #152	; 0x98
   2f908:	str	r3, [sp]
   2f90c:	str	r2, [sp, #4]
   2f910:	str	r1, [sp, #8]
   2f914:	add	r3, r0, #88	; 0x58
   2f918:	ldr	r0, [pc, #32]	; 2f940 <get_oper_name+0x7c>
   2f91c:	add	r0, pc, r0
   2f920:	ldr	r2, [pc, #28]	; 2f944 <get_oper_name+0x80>
   2f924:	add	r2, pc, r2
   2f928:	mov	r1, #204	; 0xcc
   2f92c:	bl	de74 <snprintf@plt>
   2f930:	ldr	r0, [pc, #16]	; 2f948 <get_oper_name+0x84>
   2f934:	add	r0, pc, r0
   2f938:	mov	sp, fp
   2f93c:	pop	{fp, pc}
   2f940:	.word	0x0003b158
   2f944:	.word	0x00016353
   2f948:	.word	0x0003b140

0002f94c <get_printable_conf>:
   2f94c:	push	{r4, r5, fp, lr}
   2f950:	add	fp, sp, #8
   2f954:	ldr	lr, [r0, #12]
   2f958:	ldr	ip, [pc, #224]	; 2fa40 <get_printable_conf+0xf4>
   2f95c:	add	ip, pc, ip
   2f960:	cmp	lr, #0
   2f964:	mov	r4, ip
   2f968:	beq	2f980 <get_printable_conf+0x34>
   2f96c:	ldrb	r5, [lr]
   2f970:	ldr	r4, [pc, #204]	; 2fa44 <get_printable_conf+0xf8>
   2f974:	add	r4, pc, r4
   2f978:	cmp	r5, #0
   2f97c:	movne	r4, lr
   2f980:	str	r4, [r1]
   2f984:	ldr	r1, [r0, #16]
   2f988:	cmp	r1, #0
   2f98c:	mov	r4, ip
   2f990:	beq	2f9a8 <get_printable_conf+0x5c>
   2f994:	ldrb	r5, [r1]
   2f998:	ldr	r4, [pc, #168]	; 2fa48 <get_printable_conf+0xfc>
   2f99c:	add	r4, pc, r4
   2f9a0:	cmp	r5, #0
   2f9a4:	movne	r4, r1
   2f9a8:	str	r4, [r2]
   2f9ac:	ldr	r1, [r0, #20]
   2f9b0:	cmp	r1, #0
   2f9b4:	mov	r2, ip
   2f9b8:	beq	2f9d0 <get_printable_conf+0x84>
   2f9bc:	ldrb	r5, [r1]
   2f9c0:	ldr	r2, [pc, #132]	; 2fa4c <get_printable_conf+0x100>
   2f9c4:	add	r2, pc, r2
   2f9c8:	cmp	r5, #0
   2f9cc:	movne	r2, r1
   2f9d0:	ldr	r1, [fp, #8]
   2f9d4:	str	r2, [r3]
   2f9d8:	ldr	r2, [r0, #28]
   2f9dc:	cmp	r2, #0
   2f9e0:	beq	2f9f8 <get_printable_conf+0xac>
   2f9e4:	ldrb	r3, [r2]
   2f9e8:	ldr	ip, [pc, #96]	; 2fa50 <get_printable_conf+0x104>
   2f9ec:	add	ip, pc, ip
   2f9f0:	cmp	r3, #0
   2f9f4:	movne	ip, r2
   2f9f8:	ldr	r2, [fp, #16]
   2f9fc:	ldr	r3, [fp, #12]
   2fa00:	str	ip, [r1]
   2fa04:	ldr	r4, [r0, #48]	; 0x30
   2fa08:	cmp	r4, #0
   2fa0c:	beq	2fa28 <get_printable_conf+0xdc>
   2fa10:	ldrb	r5, [r4]
   2fa14:	ldr	r1, [pc, #60]	; 2fa58 <get_printable_conf+0x10c>
   2fa18:	add	r1, pc, r1
   2fa1c:	cmp	r5, #0
   2fa20:	movne	r1, r4
   2fa24:	b	2fa30 <get_printable_conf+0xe4>
   2fa28:	ldr	r1, [pc, #36]	; 2fa54 <get_printable_conf+0x108>
   2fa2c:	add	r1, pc, r1
   2fa30:	str	r1, [r2]
   2fa34:	ldr	r0, [r0, #32]
   2fa38:	str	r0, [r3]
   2fa3c:	pop	{r4, r5, fp, pc}
   2fa40:	.word	0x0002d040
   2fa44:	.word	0x0002d028
   2fa48:	.word	0x0002d000
   2fa4c:	.word	0x0002cfd8
   2fa50:	.word	0x0002cfb0
   2fa54:	.word	0x0002cf77
   2fa58:	.word	0x0002cf8b

0002fa5c <get_user_ban_reason>:
   2fa5c:	push	{r4, r5, fp, lr}
   2fa60:	add	fp, sp, #8
   2fa64:	sub	sp, sp, #8
   2fa68:	mov	r4, r0
   2fa6c:	ldr	r0, [pc, #264]	; 2fb7c <get_user_ban_reason+0x120>
   2fa70:	ldr	r0, [pc, r0]
   2fa74:	ldr	r0, [r0, #128]	; 0x80
   2fa78:	cmp	r0, #0
   2fa7c:	bne	2fae8 <get_user_ban_reason+0x8c>
   2fa80:	ldrb	r0, [r4, #6]
   2fa84:	tst	r0, #128	; 0x80
   2fa88:	beq	2fae8 <get_user_ban_reason+0x8c>
   2fa8c:	ldr	r0, [r4]
   2fa90:	cmp	r0, #131072	; 0x20000
   2fa94:	cmpne	r0, #64	; 0x40
   2fa98:	bne	2fae8 <get_user_ban_reason+0x8c>
   2fa9c:	ldr	r1, [r4, #36]	; 0x24
   2faa0:	ldr	r2, [r4, #40]	; 0x28
   2faa4:	sub	r1, r1, r2
   2faa8:	movw	r2, #34953	; 0x8889
   2faac:	movt	r2, #34952	; 0x8888
   2fab0:	smmla	r1, r1, r2, r1
   2fab4:	asr	r2, r1, #5
   2fab8:	add	r1, r2, r1, lsr #31
   2fabc:	str	r1, [sp]
   2fac0:	mov	r3, #75	; 0x4b
   2fac4:	cmp	r0, #131072	; 0x20000
   2fac8:	movweq	r3, #68	; 0x44
   2facc:	ldr	r0, [pc, #172]	; 2fb80 <get_user_ban_reason+0x124>
   2fad0:	add	r0, pc, r0
   2fad4:	ldr	r2, [pc, #168]	; 2fb84 <get_user_ban_reason+0x128>
   2fad8:	add	r2, pc, r2
   2fadc:	mov	r1, #512	; 0x200
   2fae0:	bl	de74 <snprintf@plt>
   2fae4:	b	2faf8 <get_user_ban_reason+0x9c>
   2fae8:	ldr	r0, [pc, #152]	; 2fb88 <get_user_ban_reason+0x12c>
   2faec:	add	r0, pc, r0
   2faf0:	mov	r1, #0
   2faf4:	strb	r1, [r0]
   2faf8:	ldr	r1, [r4, #20]
   2fafc:	ldr	r0, [pc, #136]	; 2fb8c <get_user_ban_reason+0x130>
   2fb00:	add	r0, pc, r0
   2fb04:	cmp	r1, #0
   2fb08:	ldreq	r1, [pc, #128]	; 2fb90 <get_user_ban_reason+0x134>
   2fb0c:	addeq	r1, pc, r1
   2fb10:	mov	r2, #512	; 0x200
   2fb14:	bl	e7d4 <rb_strlcat@plt>
   2fb18:	ldr	r0, [r4, #40]	; 0x28
   2fb1c:	cmp	r0, #0
   2fb20:	beq	2fb6c <get_user_ban_reason+0x110>
   2fb24:	ldr	r5, [pc, #104]	; 2fb94 <get_user_ban_reason+0x138>
   2fb28:	add	r5, pc, r5
   2fb2c:	ldr	r1, [pc, #100]	; 2fb98 <get_user_ban_reason+0x13c>
   2fb30:	add	r1, pc, r1
   2fb34:	mov	r0, r5
   2fb38:	mov	r2, #512	; 0x200
   2fb3c:	bl	e7d4 <rb_strlcat@plt>
   2fb40:	ldr	r0, [r4, #40]	; 0x28
   2fb44:	bl	e2c4 <smalldate@plt>
   2fb48:	mov	r1, r0
   2fb4c:	mov	r0, r5
   2fb50:	mov	r2, #512	; 0x200
   2fb54:	bl	e7d4 <rb_strlcat@plt>
   2fb58:	ldr	r1, [pc, #60]	; 2fb9c <get_user_ban_reason+0x140>
   2fb5c:	add	r1, pc, r1
   2fb60:	mov	r0, r5
   2fb64:	mov	r2, #512	; 0x200
   2fb68:	bl	e7d4 <rb_strlcat@plt>
   2fb6c:	ldr	r0, [pc, #44]	; 2fba0 <get_user_ban_reason+0x144>
   2fb70:	add	r0, pc, r0
   2fb74:	sub	sp, fp, #8
   2fb78:	pop	{r4, r5, fp, pc}
   2fb7c:	.word	0x0002b10c
   2fb80:	.word	0x0003b070
   2fb84:	.word	0x000161ac
   2fb88:	.word	0x0003b054
   2fb8c:	.word	0x0003b040
   2fb90:	.word	0x00016195
   2fb94:	.word	0x0003b018
   2fb98:	.word	0x0001617b
   2fb9c:	.word	0x00012efd
   2fba0:	.word	0x0003afd0

0002fba4 <get_printable_kline>:
   2fba4:	push	{r4, r5, r6, r7, fp, lr}
   2fba8:	add	fp, sp, #16
   2fbac:	sub	sp, sp, #8
   2fbb0:	mov	r6, r3
   2fbb4:	mov	r4, r1
   2fbb8:	mov	r5, r0
   2fbbc:	ldr	r1, [r1, #16]
   2fbc0:	ldr	r0, [pc, #288]	; 2fce8 <get_printable_kline+0x144>
   2fbc4:	add	r0, pc, r0
   2fbc8:	cmp	r1, #0
   2fbcc:	mov	r3, r0
   2fbd0:	beq	2fbe8 <get_printable_kline+0x44>
   2fbd4:	ldrb	r7, [r1]
   2fbd8:	ldr	r3, [pc, #268]	; 2fcec <get_printable_kline+0x148>
   2fbdc:	add	r3, pc, r3
   2fbe0:	cmp	r7, #0
   2fbe4:	movne	r3, r1
   2fbe8:	ldr	r1, [fp, #8]
   2fbec:	str	r3, [r2]
   2fbf0:	ldr	r2, [r4, #28]
   2fbf4:	cmp	r2, #0
   2fbf8:	beq	2fc10 <get_printable_kline+0x6c>
   2fbfc:	ldrb	r3, [r2]
   2fc00:	ldr	r0, [pc, #232]	; 2fcf0 <get_printable_kline+0x14c>
   2fc04:	add	r0, pc, r0
   2fc08:	cmp	r3, #0
   2fc0c:	movne	r0, r2
   2fc10:	ldr	r7, [fp, #12]
   2fc14:	str	r0, [r1]
   2fc18:	mov	r0, r4
   2fc1c:	bl	d010 <get_user_ban_reason@plt>
   2fc20:	ldr	r0, [pc, #204]	; 2fcf4 <get_printable_kline+0x150>
   2fc24:	add	r0, pc, r0
   2fc28:	str	r0, [r6]
   2fc2c:	ldr	r0, [r5, #24]
   2fc30:	cmp	r0, #0
   2fc34:	ldrne	r0, [r0, #36]	; 0x24
   2fc38:	cmpne	r0, #0
   2fc3c:	bne	2fc68 <get_printable_kline+0xc4>
   2fc40:	ldrb	r0, [r5, #57]	; 0x39
   2fc44:	mov	r6, #0
   2fc48:	tst	r0, #16
   2fc4c:	ldrne	r0, [r5, #24]
   2fc50:	cmpne	r0, #0
   2fc54:	beq	2fcdc <get_printable_kline+0x138>
   2fc58:	ldr	r0, [r0, #36]	; 0x24
   2fc5c:	cmp	r0, #0
   2fc60:	bne	2fcdc <get_printable_kline+0x138>
   2fc64:	b	2fc7c <get_printable_kline+0xd8>
   2fc68:	ldr	r1, [pc, #136]	; 2fcf8 <get_printable_kline+0x154>
   2fc6c:	add	r1, pc, r1
   2fc70:	bl	e594 <privilegeset_in_set@plt>
   2fc74:	cmp	r0, #0
   2fc78:	beq	2fc40 <get_printable_kline+0x9c>
   2fc7c:	ldr	r3, [r4, #24]
   2fc80:	cmp	r3, #0
   2fc84:	beq	2fcac <get_printable_kline+0x108>
   2fc88:	ldrb	r1, [r3]
   2fc8c:	ldr	r2, [pc, #108]	; 2fd00 <get_printable_kline+0x15c>
   2fc90:	add	r2, pc, r2
   2fc94:	ldr	r0, [pc, #104]	; 2fd04 <get_printable_kline+0x160>
   2fc98:	add	r0, pc, r0
   2fc9c:	cmp	r1, #0
   2fca0:	moveq	r0, r2
   2fca4:	moveq	r3, r2
   2fca8:	b	2fcb8 <get_printable_kline+0x114>
   2fcac:	ldr	r3, [pc, #72]	; 2fcfc <get_printable_kline+0x158>
   2fcb0:	add	r3, pc, r3
   2fcb4:	mov	r0, r3
   2fcb8:	ldr	r1, [r4, #12]
   2fcbc:	stm	sp, {r0, r1}
   2fcc0:	ldr	r6, [pc, #64]	; 2fd08 <get_printable_kline+0x164>
   2fcc4:	add	r6, pc, r6
   2fcc8:	ldr	r2, [pc, #60]	; 2fd0c <get_printable_kline+0x168>
   2fccc:	add	r2, pc, r2
   2fcd0:	mov	r0, r6
   2fcd4:	mov	r1, #512	; 0x200
   2fcd8:	bl	de74 <snprintf@plt>
   2fcdc:	str	r6, [r7]
   2fce0:	sub	sp, fp, #16
   2fce4:	pop	{r4, r5, r6, r7, fp, pc}
   2fce8:	.word	0x0002cde7
   2fcec:	.word	0x0002cdcf
   2fcf0:	.word	0x0002cda7
   2fcf4:	.word	0x0003af1c
   2fcf8:	.word	0x00011026
   2fcfc:	.word	0x00015b55
   2fd00:	.word	0x00015b75
   2fd04:	.word	0x000164d0
   2fd08:	.word	0x0003b07c
   2fd0c:	.word	0x00015fe2

0002fd10 <clear_out_old_conf>:
   2fd10:	ldr	r0, [pc, #476]	; 2fef4 <clear_out_old_conf+0x1e4>
   2fd14:	ldr	r0, [pc, r0]
   2fd18:	ldr	r0, [r0]
   2fd1c:	cmp	r0, #0
   2fd20:	beq	2fd3c <clear_out_old_conf+0x2c>
   2fd24:	mvn	r1, #0
   2fd28:	ldr	r2, [r0]
   2fd2c:	str	r1, [r2, #8]
   2fd30:	ldr	r0, [r0, #8]
   2fd34:	cmp	r0, #0
   2fd38:	bne	2fd28 <clear_out_old_conf+0x18>
   2fd3c:	push	{r4, r5, r6, sl, fp, lr}
   2fd40:	add	fp, sp, #16
   2fd44:	bl	e1d4 <clear_out_address_conf@plt>
   2fd48:	bl	e1a4 <clear_s_newconf@plt>
   2fd4c:	bl	dc04 <mod_clear_paths@plt>
   2fd50:	ldr	r0, [pc, #416]	; 2fef8 <clear_out_old_conf+0x1e8>
   2fd54:	add	r0, pc, r0
   2fd58:	bl	e564 <mod_add_path@plt>
   2fd5c:	ldr	r0, [pc, #408]	; 2fefc <clear_out_old_conf+0x1ec>
   2fd60:	add	r0, pc, r0
   2fd64:	bl	e564 <mod_add_path@plt>
   2fd68:	ldr	r5, [pc, #400]	; 2ff00 <clear_out_old_conf+0x1f0>
   2fd6c:	ldr	r5, [pc, r5]
   2fd70:	ldr	r0, [r5, #8]
   2fd74:	bl	2e2d8 <rb_free>
   2fd78:	mov	r4, #0
   2fd7c:	str	r4, [r5, #8]
   2fd80:	ldr	r0, [r5, #12]
   2fd84:	bl	2e2d8 <rb_free>
   2fd88:	mov	r0, #1
   2fd8c:	str	r0, [r5, #300]	; 0x12c
   2fd90:	str	r4, [r5, #12]
   2fd94:	ldr	r5, [pc, #360]	; 2ff04 <clear_out_old_conf+0x1f4>
   2fd98:	ldr	r5, [pc, r5]
   2fd9c:	ldr	r0, [r5]
   2fda0:	bl	2e2d8 <rb_free>
   2fda4:	str	r4, [r5]
   2fda8:	ldr	r0, [r5, #8]
   2fdac:	bl	2e2d8 <rb_free>
   2fdb0:	str	r4, [r5, #8]
   2fdb4:	ldr	r0, [r5, #4]
   2fdb8:	bl	2e2d8 <rb_free>
   2fdbc:	str	r4, [r5, #4]
   2fdc0:	bl	d268 <close_listeners@plt>
   2fdc4:	ldr	r5, [pc, #316]	; 2ff08 <clear_out_old_conf+0x1f8>
   2fdc8:	ldr	r5, [pc, r5]
   2fdcc:	ldr	r0, [r5, #8]
   2fdd0:	bl	2e2d8 <rb_free>
   2fdd4:	str	r4, [r5, #8]
   2fdd8:	ldr	r0, [r5, #12]
   2fddc:	bl	2e2d8 <rb_free>
   2fde0:	str	r4, [r5, #12]
   2fde4:	ldr	r0, [r5, #16]
   2fde8:	bl	2e2d8 <rb_free>
   2fdec:	str	r4, [r5, #16]
   2fdf0:	ldr	r0, [r5, #20]
   2fdf4:	bl	2e2d8 <rb_free>
   2fdf8:	str	r4, [r5, #20]
   2fdfc:	ldr	r0, [r5, #32]
   2fe00:	bl	2e2d8 <rb_free>
   2fe04:	str	r4, [r5, #32]
   2fe08:	ldr	r0, [r5, #36]	; 0x24
   2fe0c:	bl	2e2d8 <rb_free>
   2fe10:	str	r4, [r5, #36]	; 0x24
   2fe14:	ldr	r0, [r5, #40]	; 0x28
   2fe18:	bl	2e2d8 <rb_free>
   2fe1c:	str	r4, [r5, #40]	; 0x28
   2fe20:	ldr	r0, [r5, #44]	; 0x2c
   2fe24:	bl	2e2d8 <rb_free>
   2fe28:	str	r4, [r5, #44]	; 0x2c
   2fe2c:	ldr	r0, [r5, #48]	; 0x30
   2fe30:	bl	2e2d8 <rb_free>
   2fe34:	str	r4, [r5, #48]	; 0x30
   2fe38:	ldr	r0, [r5, #52]	; 0x34
   2fe3c:	bl	2e2d8 <rb_free>
   2fe40:	str	r4, [r5, #52]	; 0x34
   2fe44:	ldr	r0, [r5, #56]	; 0x38
   2fe48:	bl	2e2d8 <rb_free>
   2fe4c:	str	r4, [r5, #56]	; 0x38
   2fe50:	ldr	r0, [r5, #60]	; 0x3c
   2fe54:	bl	2e2d8 <rb_free>
   2fe58:	str	r4, [r5, #60]	; 0x3c
   2fe5c:	ldr	r0, [r5, #64]	; 0x40
   2fe60:	bl	2e2d8 <rb_free>
   2fe64:	str	r4, [r5, #64]	; 0x40
   2fe68:	ldr	r0, [r5, #68]	; 0x44
   2fe6c:	bl	2e2d8 <rb_free>
   2fe70:	str	r4, [r5, #68]	; 0x44
   2fe74:	ldr	r0, [pc, #144]	; 2ff0c <clear_out_old_conf+0x1fc>
   2fe78:	ldr	r0, [pc, r0]
   2fe7c:	ldr	r4, [r0]
   2fe80:	cmp	r4, #0
   2fe84:	beq	2febc <clear_out_old_conf+0x1ac>
   2fe88:	ldr	r5, [pc, #128]	; 2ff10 <clear_out_old_conf+0x200>
   2fe8c:	ldr	r5, [pc, r5]
   2fe90:	ldr	r0, [r4]
   2fe94:	ldr	r6, [r4, #8]
   2fe98:	bl	2e2d8 <rb_free>
   2fe9c:	mov	r0, r4
   2fea0:	mov	r1, r5
   2fea4:	bl	2f77c <rb_dlinkDelete>
   2fea8:	mov	r0, r4
   2feac:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   2feb0:	cmp	r6, #0
   2feb4:	mov	r4, r6
   2feb8:	bne	2fe90 <clear_out_old_conf+0x180>
   2febc:	ldr	r4, [pc, #80]	; 2ff14 <clear_out_old_conf+0x204>
   2fec0:	ldr	r4, [pc, r4]
   2fec4:	ldr	r0, [r4]
   2fec8:	cmp	r0, #0
   2fecc:	beq	2fee8 <clear_out_old_conf+0x1d8>
   2fed0:	ldr	r1, [pc, #64]	; 2ff18 <clear_out_old_conf+0x208>
   2fed4:	add	r1, pc, r1
   2fed8:	mov	r5, #0
   2fedc:	mov	r2, #0
   2fee0:	bl	e0cc <rb_dictionary_destroy@plt>
   2fee4:	str	r5, [r4]
   2fee8:	bl	d5b0 <del_dnsbl_entry_all@plt>
   2feec:	pop	{r4, r5, r6, sl, fp, lr}
   2fef0:	b	dfc4 <privilegeset_mark_all_illegal@plt>
   2fef4:	.word	0x0002adb0
   2fef8:	.word	0x00011c68
   2fefc:	.word	0x00016158
   2ff00:	.word	0x0002abe4
   2ff04:	.word	0x0002adac
   2ff08:	.word	0x0002adb4
   2ff0c:	.word	0x0002aa70
   2ff10:	.word	0x0002aa5c
   2ff14:	.word	0x0002aacc
   2ff18:	.word	0x00000c98

0002ff1c <read_conf>:
   2ff1c:	push	{fp, lr}
   2ff20:	mov	fp, sp
   2ff24:	ldr	r0, [pc, #36]	; 2ff50 <read_conf+0x34>
   2ff28:	ldr	r0, [pc, r0]
   2ff2c:	mov	r1, #0
   2ff30:	str	r1, [r0]
   2ff34:	bl	30610 <set_default_conf>
   2ff38:	bl	d4b4 <yyparse@plt>
   2ff3c:	bl	308c4 <validate_conf>
   2ff40:	bl	dde4 <check_class@plt>
   2ff44:	bl	d388 <privilegeset_delete_all_illegal@plt>
   2ff48:	pop	{fp, lr}
   2ff4c:	b	df70 <construct_cflags_strings@plt>
   2ff50:	.word	0x0002ab18

0002ff54 <conf_add_class_to_conf>:
   2ff54:	push	{r4, sl, fp, lr}
   2ff58:	add	fp, sp, #8
   2ff5c:	mov	r4, r0
   2ff60:	ldr	r0, [r0, #48]	; 0x30
   2ff64:	cmp	r0, #0
   2ff68:	beq	2ff9c <conf_add_class_to_conf+0x48>
   2ff6c:	bl	d6ac <find_class@plt>
   2ff70:	str	r0, [r4, #52]	; 0x34
   2ff74:	ldr	r1, [pc, #140]	; 30008 <conf_add_class_to_conf+0xb4>
   2ff78:	ldr	r1, [pc, r1]
   2ff7c:	ldr	r1, [r1]
   2ff80:	cmp	r0, r1
   2ff84:	beq	2ffc0 <conf_add_class_to_conf+0x6c>
   2ff88:	ldr	r0, [r0, #8]
   2ff8c:	cmn	r0, #1
   2ff90:	popgt	{r4, sl, fp, pc}
   2ff94:	str	r1, [r4, #52]	; 0x34
   2ff98:	b	2ffe4 <conf_add_class_to_conf+0x90>
   2ff9c:	ldr	r0, [pc, #92]	; 30000 <conf_add_class_to_conf+0xac>
   2ffa0:	add	r0, pc, r0
   2ffa4:	bl	30014 <rb_strdup>
   2ffa8:	str	r0, [r4, #48]	; 0x30
   2ffac:	ldr	r0, [pc, #80]	; 30004 <conf_add_class_to_conf+0xb0>
   2ffb0:	ldr	r0, [pc, r0]
   2ffb4:	ldr	r0, [r0]
   2ffb8:	str	r0, [r4, #52]	; 0x34
   2ffbc:	pop	{r4, sl, fp, pc}
   2ffc0:	ldr	r0, [r4]
   2ffc4:	cmp	r0, #2
   2ffc8:	bne	2ffe4 <conf_add_class_to_conf+0x90>
   2ffcc:	ldr	r3, [r4, #16]
   2ffd0:	ldr	r2, [r4, #28]
   2ffd4:	ldr	r1, [r4, #48]	; 0x30
   2ffd8:	ldr	r0, [pc, #44]	; 3000c <conf_add_class_to_conf+0xb8>
   2ffdc:	add	r0, pc, r0
   2ffe0:	bl	d400 <conf_report_error@plt>
   2ffe4:	ldr	r0, [r4, #48]	; 0x30
   2ffe8:	bl	2e2d8 <rb_free>
   2ffec:	ldr	r0, [pc, #28]	; 30010 <conf_add_class_to_conf+0xbc>
   2fff0:	add	r0, pc, r0
   2fff4:	bl	30014 <rb_strdup>
   2fff8:	str	r0, [r4, #48]	; 0x30
   2fffc:	pop	{r4, sl, fp, pc}
   30000:	.word	0x00011074
   30004:	.word	0x0002a89c
   30008:	.word	0x0002a8d4
   3000c:	.word	0x00015d6a
   30010:	.word	0x00011024

00030014 <rb_strdup>:
   30014:	push	{r4, r5, fp, lr}
   30018:	add	fp, sp, #8
   3001c:	mov	r4, r0
   30020:	bl	dc94 <strlen@plt>
   30024:	add	r0, r0, #1
   30028:	bl	da90 <malloc@plt>
   3002c:	cmp	r0, #0
   30030:	beq	30048 <rb_strdup+0x34>
   30034:	mov	r5, r0
   30038:	mov	r1, r4
   3003c:	bl	d928 <strcpy@plt>
   30040:	mov	r0, r5
   30044:	pop	{r4, r5, fp, pc}
   30048:	bl	d448 <rb_outofmemory@plt>

0003004c <conf_add_d_conf>:
   3004c:	push	{r4, sl, fp, lr}
   30050:	add	fp, sp, #8
   30054:	sub	sp, sp, #8
   30058:	mov	r4, r0
   3005c:	ldr	r0, [r0, #16]
   30060:	cmp	r0, #0
   30064:	beq	300c0 <conf_add_d_conf+0x74>
   30068:	mov	r1, #0
   3006c:	str	r1, [r4, #28]
   30070:	mov	r1, #0
   30074:	mov	r2, #0
   30078:	bl	d568 <parse_netmask@plt>
   3007c:	ldr	r2, [r4, #16]
   30080:	cmp	r0, #1
   30084:	bne	300a8 <conf_add_d_conf+0x5c>
   30088:	ldr	r1, [pc, #56]	; 300c8 <conf_add_d_conf+0x7c>
   3008c:	add	r1, pc, r1
   30090:	mov	r0, #0
   30094:	bl	e0b4 <ilog@plt>
   30098:	mov	r0, r4
   3009c:	sub	sp, fp, #8
   300a0:	pop	{r4, sl, fp, lr}
   300a4:	b	2e218 <free_conf>
   300a8:	str	r4, [sp]
   300ac:	mov	r0, r2
   300b0:	mov	r1, #131072	; 0x20000
   300b4:	mov	r2, #0
   300b8:	mov	r3, #0
   300bc:	bl	dad8 <add_conf_by_address@plt>
   300c0:	sub	sp, fp, #8
   300c4:	pop	{r4, sl, fp, pc}
   300c8:	.word	0x00015cf9

000300cc <yyerror>:
   300cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   300d0:	add	fp, sp, #24
   300d4:	sub	sp, sp, #528	; 0x210
   300d8:	mov	r4, r0
   300dc:	add	r5, sp, #16
   300e0:	mov	r0, r5
   300e4:	bl	30150 <strip_tabs>
   300e8:	ldr	r6, [pc, #84]	; 30144 <yyerror+0x78>
   300ec:	ldr	r6, [pc, r6]
   300f0:	ldr	r0, [r6]
   300f4:	str	r5, [sp]
   300f8:	add	r2, r0, #1
   300fc:	ldr	r8, [pc, #68]	; 30148 <yyerror+0x7c>
   30100:	ldr	r8, [pc, r8]
   30104:	ldr	r7, [pc, #64]	; 3014c <yyerror+0x80>
   30108:	add	r7, pc, r7
   3010c:	mov	r0, r7
   30110:	mov	r1, r8
   30114:	mov	r3, r4
   30118:	bl	d64c <ierror@plt>
   3011c:	ldr	r0, [r6]
   30120:	add	r0, r0, #1
   30124:	stm	sp, {r0, r4, r5}
   30128:	mov	r0, #256	; 0x100
   3012c:	mov	r1, #0
   30130:	mov	r2, r7
   30134:	mov	r3, r8
   30138:	bl	d640 <sendto_realops_snomask@plt>
   3013c:	sub	sp, fp, #24
   30140:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30144:	.word	0x0002a954
   30148:	.word	0x0002aa70
   3014c:	.word	0x00015c96

00030150 <strip_tabs>:
   30150:	push	{r4, sl, fp, lr}
   30154:	add	fp, sp, #8
   30158:	cmp	r0, #0
   3015c:	popeq	{r4, sl, fp, pc}
   30160:	mov	r4, r0
   30164:	ldr	r1, [pc, #56]	; 301a4 <strip_tabs+0x54>
   30168:	ldr	r1, [pc, r1]
   3016c:	mov	r2, #512	; 0x200
   30170:	bl	e510 <rb_strlcpy@plt>
   30174:	mov	r0, #32
   30178:	b	30180 <strip_tabs+0x30>
   3017c:	add	r4, r4, #1
   30180:	ldrb	r1, [r4]
   30184:	cmp	r1, #9
   30188:	beq	30198 <strip_tabs+0x48>
   3018c:	cmp	r1, #0
   30190:	bne	3017c <strip_tabs+0x2c>
   30194:	b	301a0 <strip_tabs+0x50>
   30198:	strb	r0, [r4]
   3019c:	b	3017c <strip_tabs+0x2c>
   301a0:	pop	{r4, sl, fp, pc}
   301a4:	.word	0x0002a794

000301a8 <conf_fgets>:
   301a8:	push	{r4, sl, fp, lr}
   301ac:	add	fp, sp, #8
   301b0:	mov	r4, r0
   301b4:	bl	d370 <fgets@plt>
   301b8:	cmp	r0, #0
   301bc:	moveq	r0, #0
   301c0:	popeq	{r4, sl, fp, pc}
   301c4:	mov	r0, r4
   301c8:	pop	{r4, sl, fp, lr}
   301cc:	b	dc94 <strlen@plt>

000301d0 <conf_yy_fatal_error>:
   301d0:	mov	r0, #0
   301d4:	bx	lr

000301d8 <find_address_conf_by_client>:
   301d8:	push	{r4, r5, r6, sl, fp, lr}
   301dc:	add	fp, sp, #16
   301e0:	sub	sp, sp, #24
   301e4:	mov	r4, r0
   301e8:	ldrb	r0, [r0, #64]	; 0x40
   301ec:	tst	r0, #128	; 0x80
   301f0:	bne	30248 <find_address_conf_by_client+0x70>
   301f4:	mov	r5, r1
   301f8:	add	r6, sp, #13
   301fc:	ldr	r1, [pc, #116]	; 30278 <find_address_conf_by_client+0xa0>
   30200:	add	r1, pc, r1
   30204:	mov	r0, r6
   30208:	mov	r2, #11
   3020c:	bl	e510 <rb_strlcpy@plt>
   30210:	mov	r0, r6
   30214:	mov	r1, r5
   30218:	mov	r2, #11
   3021c:	bl	e7d4 <rb_strlcat@plt>
   30220:	ldr	r0, [r4, #432]	; 0x1b0
   30224:	ldrh	r1, [r0, #140]!	; 0x8c
   30228:	ldr	r2, [r0, #140]	; 0x8c
   3022c:	stm	sp, {r0, r1, r2}
   30230:	movw	r0, #291	; 0x123
   30234:	add	r1, r4, r0
   30238:	add	r0, r4, #163	; 0xa3
   3023c:	add	r3, r4, #152	; 0x98
   30240:	mov	r2, r6
   30244:	b	3026c <find_address_conf_by_client+0x94>
   30248:	ldr	r0, [r4, #432]	; 0x1b0
   3024c:	ldrh	r1, [r0, #140]!	; 0x8c
   30250:	ldr	r2, [r0, #140]	; 0x8c
   30254:	stm	sp, {r0, r1, r2}
   30258:	movw	r0, #291	; 0x123
   3025c:	add	r1, r4, r0
   30260:	add	r0, r4, #163	; 0xa3
   30264:	add	r2, r4, #152	; 0x98
   30268:	mov	r3, r2
   3026c:	bl	d3a0 <find_address_conf@plt>
   30270:	sub	sp, fp, #16
   30274:	pop	{r4, r5, r6, sl, fp, pc}
   30278:	.word	0x000157aa

0003027c <attach_iline>:
   3027c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30280:	add	fp, sp, #28
   30284:	sub	sp, sp, #20
   30288:	mov	sl, r1
   3028c:	mov	r4, r0
   30290:	ldr	r0, [r1, #4]
   30294:	tst	r0, #128	; 0x80
   30298:	bne	303ac <attach_iline+0x130>
   3029c:	mov	r1, #0
   302a0:	str	r1, [sp, #16]
   302a4:	tst	r0, #4
   302a8:	ldreq	r1, [r4, #64]	; 0x40
   302ac:	andseq	r1, r1, #128	; 0x80
   302b0:	beq	303c0 <attach_iline+0x144>
   302b4:	str	r4, [sp, #4]
   302b8:	add	r5, r4, #163	; 0xa3
   302bc:	mov	r0, r5
   302c0:	bl	e174 <find_hostname@plt>
   302c4:	cmp	r0, #0
   302c8:	beq	303a4 <attach_iline+0x128>
   302cc:	mov	r7, r0
   302d0:	ldr	r0, [sp, #4]
   302d4:	add	r0, r0, #152	; 0x98
   302d8:	str	r0, [sp, #8]
   302dc:	mov	r6, #0
   302e0:	mov	r8, #0
   302e4:	mov	r9, #0
   302e8:	str	r5, [sp, #12]
   302ec:	ldr	r4, [r7]
   302f0:	add	r1, r4, #227	; 0xe3
   302f4:	mov	r0, r5
   302f8:	bl	e750 <irccmp@plt>
   302fc:	cmp	r0, #0
   30300:	bne	30398 <attach_iline+0x11c>
   30304:	mov	r5, sl
   30308:	ldr	r0, [r4, #64]	; 0x40
   3030c:	ubfx	sl, r0, #13, #1
   30310:	add	r0, r4, #152	; 0x98
   30314:	ldr	r1, [sp, #16]
   30318:	cmp	r1, #0
   3031c:	beq	3032c <attach_iline+0xb0>
   30320:	ldrb	r0, [r0]
   30324:	sub	r0, r0, #126	; 0x7e
   30328:	b	30334 <attach_iline+0xb8>
   3032c:	ldr	r1, [sp, #8]
   30330:	bl	e750 <irccmp@plt>
   30334:	clz	r0, r0
   30338:	lsr	r0, r0, #5
   3033c:	add	r9, sl, r9
   30340:	mov	sl, r5
   30344:	ldr	r1, [r5, #52]	; 0x34
   30348:	ldr	r2, [r1, #12]
   3034c:	cmp	r2, #0
   30350:	beq	3035c <attach_iline+0xe0>
   30354:	cmp	r9, r2
   30358:	bge	303ec <attach_iline+0x170>
   3035c:	add	r8, r8, #1
   30360:	ldr	r2, [r1, #16]
   30364:	cmp	r2, #0
   30368:	beq	30374 <attach_iline+0xf8>
   3036c:	cmp	r8, r2
   30370:	bge	303f8 <attach_iline+0x17c>
   30374:	add	r6, r6, r0
   30378:	ldr	r0, [r1, #20]
   3037c:	cmp	r0, #0
   30380:	beq	30394 <attach_iline+0x118>
   30384:	cmp	r6, r0
   30388:	ldr	r5, [sp, #12]
   3038c:	blt	30398 <attach_iline+0x11c>
   30390:	b	30404 <attach_iline+0x188>
   30394:	ldr	r5, [sp, #12]
   30398:	ldr	r7, [r7, #8]
   3039c:	cmp	r7, #0
   303a0:	bne	302ec <attach_iline+0x70>
   303a4:	ldr	r0, [sp, #4]
   303a8:	b	303b0 <attach_iline+0x134>
   303ac:	mov	r0, r4
   303b0:	mov	r1, sl
   303b4:	sub	sp, fp, #28
   303b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   303bc:	b	2ec30 <attach_conf>
   303c0:	mov	r1, #1
   303c4:	str	r1, [sp, #16]
   303c8:	tst	r0, #512	; 0x200
   303cc:	beq	302b4 <attach_iline+0x38>
   303d0:	ldr	r0, [sl, #12]
   303d4:	mov	r1, #64	; 0x40
   303d8:	bl	dce8 <strchr@plt>
   303dc:	clz	r0, r0
   303e0:	lsr	r0, r0, #5
   303e4:	str	r0, [sp, #16]
   303e8:	b	302b4 <attach_iline+0x38>
   303ec:	mvn	r0, #5
   303f0:	sub	sp, fp, #28
   303f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   303f8:	mvn	r0, #6
   303fc:	sub	sp, fp, #28
   30400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30404:	mvn	r0, #7
   30408:	sub	sp, fp, #28
   3040c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00030410 <rb_dlinkFindDelete>:
   30410:	push	{fp, lr}
   30414:	mov	fp, sp
   30418:	cmp	r1, #0
   3041c:	beq	30490 <rb_dlinkFindDelete+0x80>
   30420:	mov	ip, r0
   30424:	cmp	r0, #0
   30428:	beq	304b0 <rb_dlinkFindDelete+0xa0>
   3042c:	ldr	r3, [r1]
   30430:	mov	r0, r3
   30434:	cmp	r3, #0
   30438:	popeq	{fp, pc}
   3043c:	ldr	r2, [r0]
   30440:	ldr	r3, [r0, #8]
   30444:	cmp	r2, ip
   30448:	bne	30430 <rb_dlinkFindDelete+0x20>
   3044c:	add	r2, r3, #4
   30450:	cmp	r3, #0
   30454:	addeq	r2, r1, #4
   30458:	ldr	r3, [r0, #4]
   3045c:	str	r3, [r2]
   30460:	ldmib	r0, {r2, ip}
   30464:	cmp	r2, #0
   30468:	mov	r3, r1
   3046c:	addne	r3, r2, #8
   30470:	str	ip, [r3]
   30474:	mov	r2, #0
   30478:	str	r2, [r0, #4]
   3047c:	str	r2, [r0, #8]
   30480:	ldr	r2, [r1, #8]
   30484:	sub	r2, r2, #1
   30488:	str	r2, [r1, #8]
   3048c:	pop	{fp, pc}
   30490:	ldr	r0, [pc, #56]	; 304d0 <rb_dlinkFindDelete+0xc0>
   30494:	add	r0, pc, r0
   30498:	ldr	r1, [pc, #52]	; 304d4 <rb_dlinkFindDelete+0xc4>
   3049c:	add	r1, pc, r1
   304a0:	ldr	r3, [pc, #48]	; 304d8 <rb_dlinkFindDelete+0xc8>
   304a4:	add	r3, pc, r3
   304a8:	movw	r2, #258	; 0x102
   304ac:	bl	e7e0 <__assert_fail@plt>
   304b0:	ldr	r0, [pc, #36]	; 304dc <rb_dlinkFindDelete+0xcc>
   304b4:	add	r0, pc, r0
   304b8:	ldr	r1, [pc, #32]	; 304e0 <rb_dlinkFindDelete+0xd0>
   304bc:	add	r1, pc, r1
   304c0:	ldr	r3, [pc, #28]	; 304e4 <rb_dlinkFindDelete+0xd4>
   304c4:	add	r3, pc, r3
   304c8:	movw	r2, #259	; 0x103
   304cc:	bl	e7e0 <__assert_fail@plt>
   304d0:	.word	0x000159b1
   304d4:	.word	0x0001011a
   304d8:	.word	0x00010752
   304dc:	.word	0x0001015d
   304e0:	.word	0x000100fa
   304e4:	.word	0x00010732

000304e8 <rb_dlinkMoveNode>:
   304e8:	push	{fp, lr}
   304ec:	mov	fp, sp
   304f0:	cmp	r0, #0
   304f4:	beq	3058c <rb_dlinkMoveNode+0xa4>
   304f8:	cmp	r1, #0
   304fc:	beq	305ac <rb_dlinkMoveNode+0xc4>
   30500:	cmp	r2, #0
   30504:	beq	305cc <rb_dlinkMoveNode+0xe4>
   30508:	ldmib	r0, {ip, lr}
   3050c:	add	r3, lr, #4
   30510:	cmp	lr, #0
   30514:	addeq	r3, r1, #4
   30518:	str	ip, [r3]
   3051c:	ldr	lr, [r0, #4]
   30520:	ldr	ip, [r0, #8]
   30524:	cmp	lr, #0
   30528:	mov	r3, r1
   3052c:	addne	r3, lr, #8
   30530:	str	ip, [r3]
   30534:	mov	r3, #0
   30538:	str	r3, [r0, #4]
   3053c:	ldr	r3, [r2]
   30540:	str	r3, [r0, #8]
   30544:	ldr	r3, [r2]
   30548:	cmp	r3, #0
   3054c:	beq	3055c <rb_dlinkMoveNode+0x74>
   30550:	add	ip, r3, #4
   30554:	str	r0, [ip]
   30558:	b	3056c <rb_dlinkMoveNode+0x84>
   3055c:	mov	ip, r2
   30560:	ldr	r3, [ip, #4]!
   30564:	cmp	r3, #0
   30568:	streq	r0, [ip]
   3056c:	str	r0, [r2]
   30570:	ldr	r0, [r1, #8]
   30574:	sub	r0, r0, #1
   30578:	str	r0, [r1, #8]
   3057c:	ldr	r0, [r2, #8]
   30580:	add	r0, r0, #1
   30584:	str	r0, [r2, #8]
   30588:	pop	{fp, pc}
   3058c:	ldr	r0, [pc, #88]	; 305ec <rb_dlinkMoveNode+0x104>
   30590:	add	r0, pc, r0
   30594:	ldr	r1, [pc, #84]	; 305f0 <rb_dlinkMoveNode+0x108>
   30598:	add	r1, pc, r1
   3059c:	ldr	r3, [pc, #80]	; 305f4 <rb_dlinkMoveNode+0x10c>
   305a0:	add	r3, pc, r3
   305a4:	mov	r2, #114	; 0x72
   305a8:	bl	e7e0 <__assert_fail@plt>
   305ac:	ldr	r0, [pc, #68]	; 305f8 <rb_dlinkMoveNode+0x110>
   305b0:	add	r0, pc, r0
   305b4:	ldr	r1, [pc, #64]	; 305fc <rb_dlinkMoveNode+0x114>
   305b8:	add	r1, pc, r1
   305bc:	ldr	r3, [pc, #60]	; 30600 <rb_dlinkMoveNode+0x118>
   305c0:	add	r3, pc, r3
   305c4:	mov	r2, #115	; 0x73
   305c8:	bl	e7e0 <__assert_fail@plt>
   305cc:	ldr	r0, [pc, #48]	; 30604 <rb_dlinkMoveNode+0x11c>
   305d0:	add	r0, pc, r0
   305d4:	ldr	r1, [pc, #44]	; 30608 <rb_dlinkMoveNode+0x120>
   305d8:	add	r1, pc, r1
   305dc:	ldr	r3, [pc, #40]	; 3060c <rb_dlinkMoveNode+0x124>
   305e0:	add	r3, pc, r3
   305e4:	mov	r2, #116	; 0x74
   305e8:	bl	e7e0 <__assert_fail@plt>
   305ec:	.word	0x0001001c
   305f0:	.word	0x0001001e
   305f4:	.word	0x000136ff
   305f8:	.word	0x00015892
   305fc:	.word	0x0000fffe
   30600:	.word	0x000136df
   30604:	.word	0x00015882
   30608:	.word	0x0000ffde
   3060c:	.word	0x000136bf

00030610 <set_default_conf>:
   30610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30614:	add	fp, sp, #28
   30618:	sub	sp, sp, #4
   3061c:	ldr	r0, [pc, #636]	; 308a0 <set_default_conf+0x290>
   30620:	ldr	r0, [pc, r0]
   30624:	mov	r4, #0
   30628:	str	r4, [r0, #8]
   3062c:	str	r4, [r0, #12]
   30630:	add	r0, r0, #20
   30634:	mov	r8, #256	; 0x100
   30638:	mov	r1, #0
   3063c:	mov	r2, #256	; 0x100
   30640:	bl	df28 <memset@plt>
   30644:	ldr	r0, [pc, #600]	; 308a4 <set_default_conf+0x294>
   30648:	ldr	r0, [pc, r0]
   3064c:	str	r4, [r0]
   30650:	str	r4, [r0, #4]
   30654:	str	r4, [r0, #8]
   30658:	ldr	r0, [pc, #584]	; 308a8 <set_default_conf+0x298>
   3065c:	ldr	r0, [pc, r0]
   30660:	str	r4, [r0, #8]
   30664:	str	r4, [r0, #12]
   30668:	str	r4, [r0, #16]
   3066c:	str	r4, [r0, #32]
   30670:	mov	r1, #8
   30674:	str	r1, [r0, #312]	; 0x138
   30678:	mov	r1, #1
   3067c:	str	r1, [r0, #84]	; 0x54
   30680:	str	r4, [r0, #88]	; 0x58
   30684:	str	r4, [r0, #76]	; 0x4c
   30688:	mov	r2, #20
   3068c:	str	r2, [r0, #104]	; 0x68
   30690:	mov	r6, #900	; 0x384
   30694:	mov	r9, #5
   30698:	str	r2, [r0, #96]	; 0x60
   3069c:	mov	lr, #60	; 0x3c
   306a0:	str	lr, [r0, #100]	; 0x64
   306a4:	str	r1, [r0, #300]	; 0x12c
   306a8:	str	r4, [r0, #92]	; 0x5c
   306ac:	mov	r7, #600	; 0x258
   306b0:	mov	r5, #30
   306b4:	str	r1, [r0, #212]	; 0xd4
   306b8:	str	r9, [r0, #108]	; 0x6c
   306bc:	str	r7, [r0, #112]	; 0x70
   306c0:	str	r5, [r0, #116]	; 0x74
   306c4:	str	r1, [r0, #120]	; 0x78
   306c8:	str	r1, [r0, #124]	; 0x7c
   306cc:	str	r1, [r0, #132]	; 0x84
   306d0:	str	r6, [r0, #136]	; 0x88
   306d4:	str	r1, [r0, #140]	; 0x8c
   306d8:	str	r4, [r0, #144]	; 0x90
   306dc:	str	r4, [r0, #148]	; 0x94
   306e0:	str	r4, [r0, #152]	; 0x98
   306e4:	str	r4, [r0, #156]	; 0x9c
   306e8:	str	r4, [r0, #160]	; 0xa0
   306ec:	mov	sl, #10
   306f0:	str	lr, [r0, #232]	; 0xe8
   306f4:	vmov.i32	q8, #0	; 0x00000000
   306f8:	add	r7, r0, #52	; 0x34
   306fc:	vst1.32	{d16-d17}, [r7]
   30700:	add	r7, r0, #36	; 0x24
   30704:	vst1.32	{d16-d17}, [r7]
   30708:	str	r1, [r0, #164]	; 0xa4
   3070c:	str	r1, [r0, #168]	; 0xa8
   30710:	str	r4, [r0, #172]	; 0xac
   30714:	add	r2, r0, #176	; 0xb0
   30718:	stm	r2, {r1, r4, sl}
   3071c:	str	r1, [r0, #188]	; 0xbc
   30720:	str	r4, [r0, #192]	; 0xc0
   30724:	str	r4, [r0, #196]	; 0xc4
   30728:	str	r4, [r0, #68]	; 0x44
   3072c:	str	r1, [r0, #204]	; 0xcc
   30730:	str	r1, [r0, #208]	; 0xd0
   30734:	str	r4, [r0, #80]	; 0x50
   30738:	mov	r7, #4
   3073c:	str	r7, [r0, #228]	; 0xe4
   30740:	str	r1, [r0, #260]	; 0x104
   30744:	str	r4, [r0, #276]	; 0x114
   30748:	str	r1, [r0, #304]	; 0x130
   3074c:	str	r1, [r0, #308]	; 0x134
   30750:	str	r1, [r0, #316]	; 0x13c
   30754:	str	r4, [r0, #320]	; 0x140
   30758:	str	r1, [r0, #324]	; 0x144
   3075c:	str	r5, [r0, #328]	; 0x148
   30760:	str	r5, [r0, #332]	; 0x14c
   30764:	str	r4, [r0, #336]	; 0x150
   30768:	strb	r7, [r0, #72]	; 0x48
   3076c:	mov	r5, #39	; 0x27
   30770:	add	r2, r0, #216	; 0xd8
   30774:	stm	r2, {r1, r5, r8}
   30778:	ldr	r5, [pc, #300]	; 308ac <set_default_conf+0x29c>
   3077c:	ldr	r5, [pc, r5]
   30780:	mov	r8, #15
   30784:	mov	r6, #25
   30788:	mov	r3, #500	; 0x1f4
   3078c:	movw	ip, #15000	; 0x3a98
   30790:	mov	r2, #300	; 0x12c
   30794:	str	r1, [r5]
   30798:	str	r1, [r5, #4]
   3079c:	str	r1, [r5, #8]
   307a0:	str	r1, [r5, #12]
   307a4:	str	r2, [r5, #16]
   307a8:	str	lr, [r5, #20]
   307ac:	str	r6, [r5, #24]
   307b0:	add	r6, r5, #28
   307b4:	stm	r6, {r3, r8, lr}
   307b8:	add	r3, r5, #40	; 0x28
   307bc:	stm	r3, {r1, r4, sl, ip}
   307c0:	str	r4, [r5, #56]	; 0x38
   307c4:	str	r4, [r5, #60]	; 0x3c
   307c8:	mov	r3, #3
   307cc:	str	r4, [r5, #92]	; 0x5c
   307d0:	mov	r6, #40	; 0x28
   307d4:	str	r4, [r5, #64]	; 0x40
   307d8:	str	r1, [r5, #68]	; 0x44
   307dc:	add	ip, r5, #72	; 0x48
   307e0:	stm	ip, {r1, r4, r6}
   307e4:	str	r3, [r5, #84]	; 0x54
   307e8:	ldr	r6, [pc, #192]	; 308b0 <set_default_conf+0x2a0>
   307ec:	ldr	r6, [pc, r6]
   307f0:	str	r4, [r6]
   307f4:	stmib	r6, {r2, r4}
   307f8:	str	r4, [r6, #12]
   307fc:	str	r2, [r0, #280]	; 0x118
   30800:	mov	r2, #120	; 0x78
   30804:	str	r2, [r0, #288]	; 0x120
   30808:	str	r7, [r0, #236]	; 0xec
   3080c:	str	r3, [r0, #240]	; 0xf0
   30810:	mov	r2, #8
   30814:	str	r2, [r0, #244]	; 0xf4
   30818:	str	r9, [r0, #248]	; 0xf8
   3081c:	str	r4, [r0, #256]	; 0x100
   30820:	str	r9, [r0, #284]	; 0x11c
   30824:	str	r7, [r0, #292]	; 0x124
   30828:	str	lr, [r0, #296]	; 0x128
   3082c:	mov	r2, #2
   30830:	movw	r3, #65535	; 0xffff
   30834:	ldr	r7, [pc, #120]	; 308b4 <set_default_conf+0x2a4>
   30838:	ldr	r7, [pc, r7]
   3083c:	str	r3, [r7, #276]	; 0x114
   30840:	mov	r3, #32
   30844:	mov	r7, #20
   30848:	str	r7, [r0, #340]	; 0x154
   3084c:	str	r9, [r0, #344]	; 0x158
   30850:	str	r9, [r0, #348]	; 0x15c
   30854:	add	ip, r0, #352	; 0x160
   30858:	stm	ip, {r1, r2, r3, r4}
   3085c:	str	r4, [r0, #368]	; 0x170
   30860:	str	r4, [r0, #372]	; 0x174
   30864:	ldr	r4, [pc, #76]	; 308b8 <set_default_conf+0x2a8>
   30868:	ldr	r4, [pc, r4]
   3086c:	ldr	r0, [r4]
   30870:	cmp	r0, #0
   30874:	beq	30880 <set_default_conf+0x270>
   30878:	sub	sp, fp, #28
   3087c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30880:	ldr	r1, [pc, #52]	; 308bc <set_default_conf+0x2ac>
   30884:	ldr	r1, [pc, r1]
   30888:	ldr	r0, [pc, #48]	; 308c0 <set_default_conf+0x2b0>
   3088c:	add	r0, pc, r0
   30890:	bl	dfb8 <rb_dictionary_create@plt>
   30894:	str	r0, [r4]
   30898:	sub	sp, fp, #28
   3089c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   308a0:	.word	0x0002a330
   308a4:	.word	0x0002a4fc
   308a8:	.word	0x0002a520
   308ac:	.word	0x0002a39c
   308b0:	.word	0x0002a1c8
   308b4:	.word	0x0002a118
   308b8:	.word	0x0002a124
   308bc:	.word	0x0002a02c
   308c0:	.word	0x00012fb2

000308c4 <validate_conf>:
   308c4:	push	{r4, r5, r6, sl, fp, lr}
   308c8:	add	fp, sp, #16
   308cc:	ldr	r4, [pc, #600]	; 30b2c <validate_conf+0x268>
   308d0:	ldr	r4, [pc, r4]
   308d4:	ldr	r0, [r4, #248]	; 0xf8
   308d8:	cmp	r0, #0
   308dc:	movle	r0, #5
   308e0:	strle	r0, [r4, #248]	; 0xf8
   308e4:	ldr	r0, [r4, #116]	; 0x74
   308e8:	cmp	r0, #9
   308ec:	movle	r0, #30
   308f0:	strle	r0, [r4, #116]	; 0x74
   308f4:	ldr	r0, [r4, #112]	; 0x70
   308f8:	cmp	r0, #9
   308fc:	movle	r0, #600	; 0x258
   30900:	strle	r0, [r4, #112]	; 0x70
   30904:	ldr	r5, [pc, #548]	; 30b30 <validate_conf+0x26c>
   30908:	ldr	r5, [pc, r5]
   3090c:	ldr	r0, [r5, #12]
   30910:	cmp	r0, #0
   30914:	bne	30928 <validate_conf+0x64>
   30918:	ldr	r0, [pc, #532]	; 30b34 <validate_conf+0x270>
   3091c:	add	r0, pc, r0
   30920:	bl	30014 <rb_strdup>
   30924:	str	r0, [r5, #12]
   30928:	ldr	r0, [r5, #300]	; 0x12c
   3092c:	cmp	r0, #0
   30930:	movle	r0, #1
   30934:	strle	r0, [r5, #300]	; 0x12c
   30938:	mov	r6, #1
   3093c:	str	r6, [r5, #304]	; 0x130
   30940:	ldr	r1, [r5, #280]	; 0x118
   30944:	add	r3, r5, #288	; 0x120
   30948:	ldm	r3, {r0, r2, r3}
   3094c:	bl	d238 <rb_setup_ssl_server@plt>
   30950:	cmp	r0, #0
   30954:	beq	3096c <validate_conf+0xa8>
   30958:	ldr	r0, [pc, #480]	; 30b40 <validate_conf+0x27c>
   3095c:	ldr	r0, [pc, r0]
   30960:	strb	r6, [r0]
   30964:	bl	d5a4 <ssld_update_config@plt>
   30968:	b	3098c <validate_conf+0xc8>
   3096c:	mov	r6, #0
   30970:	ldr	r1, [pc, #448]	; 30b38 <validate_conf+0x274>
   30974:	add	r1, pc, r1
   30978:	mov	r0, #0
   3097c:	bl	e0b4 <ilog@plt>
   30980:	ldr	r0, [pc, #436]	; 30b3c <validate_conf+0x278>
   30984:	ldr	r0, [pc, r0]
   30988:	strb	r6, [r0]
   3098c:	ldr	r6, [r5, #300]	; 0x12c
   30990:	bl	deb0 <get_ssld_count@plt>
   30994:	cmp	r6, r0
   30998:	ble	309ac <validate_conf+0xe8>
   3099c:	ldr	r6, [r5, #300]	; 0x12c
   309a0:	bl	deb0 <get_ssld_count@plt>
   309a4:	sub	r0, r6, r0
   309a8:	bl	e690 <start_ssldaemon@plt>
   309ac:	ldr	r6, [r5, #304]	; 0x130
   309b0:	bl	e4b0 <get_wsockd_count@plt>
   309b4:	cmp	r6, r0
   309b8:	ble	309cc <validate_conf+0x108>
   309bc:	ldr	r5, [r5, #304]	; 0x130
   309c0:	bl	e4b0 <get_wsockd_count@plt>
   309c4:	sub	r0, r5, r0
   309c8:	bl	e324 <start_wsockd@plt>
   309cc:	ldr	r0, [r4, #8]
   309d0:	cmp	r0, #0
   309d4:	bne	309e8 <validate_conf+0x124>
   309d8:	ldr	r0, [pc, #356]	; 30b44 <validate_conf+0x280>
   309dc:	add	r0, pc, r0
   309e0:	bl	30014 <rb_strdup>
   309e4:	str	r0, [r4, #8]
   309e8:	ldr	r0, [r4, #12]
   309ec:	cmp	r0, #0
   309f0:	bne	30a04 <validate_conf+0x140>
   309f4:	ldr	r0, [pc, #332]	; 30b48 <validate_conf+0x284>
   309f8:	add	r0, pc, r0
   309fc:	bl	30014 <rb_strdup>
   30a00:	str	r0, [r4, #12]
   30a04:	ldr	r0, [r4, #16]
   30a08:	cmp	r0, #0
   30a0c:	bne	30a20 <validate_conf+0x15c>
   30a10:	ldr	r0, [pc, #308]	; 30b4c <validate_conf+0x288>
   30a14:	add	r0, pc, r0
   30a18:	bl	30014 <rb_strdup>
   30a1c:	str	r0, [r4, #16]
   30a20:	ldr	r0, [r4, #32]
   30a24:	cmp	r0, #0
   30a28:	bne	30a3c <validate_conf+0x178>
   30a2c:	ldr	r0, [pc, #284]	; 30b50 <validate_conf+0x28c>
   30a30:	add	r0, pc, r0
   30a34:	bl	30014 <rb_strdup>
   30a38:	str	r0, [r4, #32]
   30a3c:	ldr	r0, [r4, #344]	; 0x158
   30a40:	cmp	r0, #4
   30a44:	movle	r0, #5
   30a48:	strle	r0, [r4, #344]	; 0x158
   30a4c:	ldr	r0, [r4, #348]	; 0x15c
   30a50:	cmp	r0, #4
   30a54:	movle	r0, #5
   30a58:	strle	r0, [r4, #348]	; 0x15c
   30a5c:	ldr	r1, [r4, #352]	; 0x160
   30a60:	ldr	r0, [r4, #356]	; 0x164
   30a64:	cmp	r1, r0, lsl #1
   30a68:	lslgt	r0, r0, #1
   30a6c:	strgt	r0, [r4, #352]	; 0x160
   30a70:	ldr	r0, [r4, #340]	; 0x154
   30a74:	sub	r0, r0, #10
   30a78:	movw	r1, #1991	; 0x7c7
   30a7c:	cmp	r0, r1
   30a80:	movcs	r0, #2000	; 0x7d0
   30a84:	strcs	r0, [r4, #340]	; 0x154
   30a88:	ldr	r0, [pc, #196]	; 30b54 <validate_conf+0x290>
   30a8c:	ldr	r0, [pc, r0]
   30a90:	ldr	r0, [r0]
   30a94:	cmp	r0, #0
   30a98:	ldrne	r0, [pc, #184]	; 30b58 <validate_conf+0x294>
   30a9c:	ldrne	r0, [pc, r0]
   30aa0:	ldrne	r0, [r0]
   30aa4:	cmpne	r0, #0
   30aa8:	bne	30ae0 <validate_conf+0x21c>
   30aac:	ldr	r4, [pc, #172]	; 30b60 <validate_conf+0x29c>
   30ab0:	ldr	r4, [pc, r4]
   30ab4:	ldr	r0, [r4]
   30ab8:	bl	d28c <rb_event_delete@plt>
   30abc:	ldr	r0, [pc, #160]	; 30b64 <validate_conf+0x2a0>
   30ac0:	ldr	r0, [pc, r0]
   30ac4:	mov	r1, #0
   30ac8:	str	r1, [r0]
   30acc:	str	r1, [r4]
   30ad0:	ldr	r0, [pc, #144]	; 30b68 <validate_conf+0x2a4>
   30ad4:	ldr	r0, [pc, r0]
   30ad8:	str	r1, [r0]
   30adc:	b	30af8 <validate_conf+0x234>
   30ae0:	ldr	r0, [pc, #116]	; 30b5c <validate_conf+0x298>
   30ae4:	ldr	r0, [pc, r0]
   30ae8:	ldr	r1, [r0, #40]	; 0x28
   30aec:	ldr	r0, [r0, #44]	; 0x2c
   30af0:	orrs	r0, r0, r1
   30af4:	beq	30aac <validate_conf+0x1e8>
   30af8:	ldr	r0, [pc, #108]	; 30b6c <validate_conf+0x2a8>
   30afc:	ldr	r0, [pc, r0]
   30b00:	ldr	r1, [r0, #152]	; 0x98
   30b04:	orr	r2, r1, #512	; 0x200
   30b08:	str	r2, [r0, #152]	; 0x98
   30b0c:	ldr	r2, [pc, #92]	; 30b70 <validate_conf+0x2ac>
   30b10:	ldr	r2, [pc, r2]
   30b14:	ldr	r2, [r2, #76]	; 0x4c
   30b18:	cmp	r2, #0
   30b1c:	bicne	r1, r1, #512	; 0x200
   30b20:	strne	r1, [r0, #152]	; 0x98
   30b24:	pop	{r4, r5, r6, sl, fp, lr}
   30b28:	b	df64 <chantypes_update@plt>
   30b2c:	.word	0x0002a2ac
   30b30:	.word	0x0002a048
   30b34:	.word	0x00015546
   30b38:	.word	0x00011445
   30b3c:	.word	0x00029fdc
   30b40:	.word	0x0002a004
   30b44:	.word	0x00015491
   30b48:	.word	0x00015488
   30b4c:	.word	0x00015486
   30b50:	.word	0x0001547f
   30b54:	.word	0x00029f84
   30b58:	.word	0x00029f64
   30b5c:	.word	0x0002a034
   30b60:	.word	0x00029de8
   30b64:	.word	0x0002a09c
   30b68:	.word	0x00029f20
   30b6c:	.word	0x00029efc
   30b70:	.word	0x0002a008

00030b74 <free_alias_cb>:
   30b74:	push	{r4, sl, fp, lr}
   30b78:	add	fp, sp, #8
   30b7c:	ldr	r4, [r0, #16]
   30b80:	ldr	r0, [r4]
   30b84:	bl	2e2d8 <rb_free>
   30b88:	ldr	r0, [r4, #4]
   30b8c:	bl	2e2d8 <rb_free>
   30b90:	mov	r0, r4
   30b94:	pop	{r4, sl, fp, lr}
   30b98:	b	2e2d8 <rb_free>

00030b9c <init_s_newconf>:
   30b9c:	push	{fp, lr}
   30ba0:	mov	fp, sp
   30ba4:	mov	r0, #128	; 0x80
   30ba8:	bl	d418 <rb_new_patricia@plt>
   30bac:	ldr	r1, [pc, #120]	; 30c2c <init_s_newconf+0x90>
   30bb0:	ldr	r1, [pc, r1]
   30bb4:	str	r0, [r1]
   30bb8:	ldr	r2, [pc, #112]	; 30c30 <init_s_newconf+0x94>
   30bbc:	add	r2, pc, r2
   30bc0:	mov	r0, #52	; 0x34
   30bc4:	mov	r1, #512	; 0x200
   30bc8:	bl	ded4 <rb_bh_create@plt>
   30bcc:	ldr	r1, [pc, #96]	; 30c34 <init_s_newconf+0x98>
   30bd0:	add	r1, pc, r1
   30bd4:	str	r0, [r1]
   30bd8:	ldr	r0, [pc, #88]	; 30c38 <init_s_newconf+0x9c>
   30bdc:	add	r0, pc, r0
   30be0:	ldr	r1, [pc, #84]	; 30c3c <init_s_newconf+0xa0>
   30be4:	add	r1, pc, r1
   30be8:	mov	r2, #0
   30bec:	mov	r3, #30
   30bf0:	bl	d220 <rb_event_addish@plt>
   30bf4:	ldr	r1, [pc, #68]	; 30c40 <init_s_newconf+0xa4>
   30bf8:	ldr	r1, [pc, r1]
   30bfc:	str	r0, [r1]
   30c00:	ldr	r0, [pc, #60]	; 30c44 <init_s_newconf+0xa8>
   30c04:	add	r0, pc, r0
   30c08:	ldr	r1, [pc, #56]	; 30c48 <init_s_newconf+0xac>
   30c0c:	add	r1, pc, r1
   30c10:	mov	r2, #0
   30c14:	mov	r3, #60	; 0x3c
   30c18:	bl	d220 <rb_event_addish@plt>
   30c1c:	ldr	r1, [pc, #40]	; 30c4c <init_s_newconf+0xb0>
   30c20:	ldr	r1, [pc, r1]
   30c24:	str	r0, [r1]
   30c28:	pop	{fp, pc}
   30c2c:	.word	0x00029dfc
   30c30:	.word	0x0001531b
   30c34:	.word	0x0003a378
   30c38:	.word	0x00015303
   30c3c:	.word	0x00000064
   30c40:	.word	0x00029d24
   30c44:	.word	0x000152ed
   30c48:	.word	0x00000094
   30c4c:	.word	0x00029cd0

00030c50 <expire_nd_entries>:
   30c50:	push	{r4, r5, r6, sl, fp, lr}
   30c54:	add	fp, sp, #16
   30c58:	ldr	r0, [pc, #68]	; 30ca4 <expire_nd_entries+0x54>
   30c5c:	ldr	r0, [pc, r0]
   30c60:	ldr	r0, [r0]
   30c64:	cmp	r0, #0
   30c68:	beq	30ca0 <expire_nd_entries+0x50>
   30c6c:	ldr	r4, [r0]
   30c70:	ldr	r5, [r0, #8]
   30c74:	b	30c80 <expire_nd_entries+0x30>
   30c78:	ldr	r4, [r5]
   30c7c:	ldr	r5, [r5, #8]
   30c80:	ldr	r6, [r4, #36]	; 0x24
   30c84:	bl	d07c <rb_current_time@plt>
   30c88:	cmp	r6, r0
   30c8c:	popgt	{r4, r5, r6, sl, fp, pc}
   30c90:	mov	r0, r4
   30c94:	bl	e12c <free_nd_entry@plt>
   30c98:	cmp	r5, #0
   30c9c:	bne	30c78 <expire_nd_entries+0x28>
   30ca0:	pop	{r4, r5, r6, sl, fp, pc}
   30ca4:	.word	0x00029d88

00030ca8 <expire_temp_rxlines>:
   30ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30cac:	add	fp, sp, #28
   30cb0:	sub	sp, sp, #44	; 0x2c
   30cb4:	ldr	r7, [pc, #544]	; 30edc <expire_temp_rxlines+0x234>
   30cb8:	ldr	r7, [pc, r7]
   30cbc:	ldr	r0, [r7]
   30cc0:	add	r4, sp, #4
   30cc4:	mov	r1, r4
   30cc8:	bl	e318 <rb_radixtree_foreach_start@plt>
   30ccc:	ldr	r0, [r7]
   30cd0:	mov	r1, r4
   30cd4:	bl	e06c <rb_radixtree_foreach_cur@plt>
   30cd8:	cmp	r0, #0
   30cdc:	beq	30d7c <expire_temp_rxlines+0xd4>
   30ce0:	mov	r6, r0
   30ce4:	ldr	r9, [pc, #500]	; 30ee0 <expire_temp_rxlines+0x238>
   30ce8:	ldr	r9, [pc, r9]
   30cec:	ldr	r8, [pc, #496]	; 30ee4 <expire_temp_rxlines+0x23c>
   30cf0:	add	r8, pc, r8
   30cf4:	add	r5, sp, #4
   30cf8:	b	30d4c <expire_temp_rxlines+0xa4>
   30cfc:	ldr	r4, [r6, #36]	; 0x24
   30d00:	cmp	r4, #0
   30d04:	beq	30d58 <expire_temp_rxlines+0xb0>
   30d08:	bl	d07c <rb_current_time@plt>
   30d0c:	cmp	r4, r0
   30d10:	bgt	30d58 <expire_temp_rxlines+0xb0>
   30d14:	ldr	r0, [r9, #256]	; 0x100
   30d18:	cmp	r0, #0
   30d1c:	beq	30d34 <expire_temp_rxlines+0x8c>
   30d20:	ldr	r3, [r6, #16]
   30d24:	mov	r0, #256	; 0x100
   30d28:	mov	r1, #0
   30d2c:	mov	r2, r8
   30d30:	bl	d640 <sendto_realops_snomask@plt>
   30d34:	ldr	r1, [r6, #16]
   30d38:	ldr	r0, [r7]
   30d3c:	bl	e0c0 <rb_radixtree_delete@plt>
   30d40:	mov	r0, r6
   30d44:	bl	dc40 <free_conf@plt>
   30d48:	b	30d58 <expire_temp_rxlines+0xb0>
   30d4c:	ldr	r0, [r6, #44]	; 0x2c
   30d50:	cmp	r0, #0
   30d54:	beq	30cfc <expire_temp_rxlines+0x54>
   30d58:	ldr	r0, [r7]
   30d5c:	mov	r1, r5
   30d60:	bl	d580 <rb_radixtree_foreach_next@plt>
   30d64:	ldr	r0, [r7]
   30d68:	mov	r1, r5
   30d6c:	bl	e06c <rb_radixtree_foreach_cur@plt>
   30d70:	mov	r6, r0
   30d74:	cmp	r0, #0
   30d78:	bne	30d4c <expire_temp_rxlines+0xa4>
   30d7c:	ldr	r0, [pc, #356]	; 30ee8 <expire_temp_rxlines+0x240>
   30d80:	ldr	r0, [pc, r0]
   30d84:	ldr	r5, [r0]
   30d88:	cmp	r5, #0
   30d8c:	beq	30e28 <expire_temp_rxlines+0x180>
   30d90:	ldr	r9, [pc, #340]	; 30eec <expire_temp_rxlines+0x244>
   30d94:	ldr	r9, [pc, r9]
   30d98:	ldr	sl, [pc, #336]	; 30ef0 <expire_temp_rxlines+0x248>
   30d9c:	ldr	sl, [pc, sl]
   30da0:	ldr	r8, [pc, #332]	; 30ef4 <expire_temp_rxlines+0x24c>
   30da4:	add	r8, pc, r8
   30da8:	mov	r6, r5
   30dac:	ldr	r7, [r5]
   30db0:	ldr	r5, [r5, #8]
   30db4:	ldr	r0, [r7, #44]	; 0x2c
   30db8:	cmp	r0, #0
   30dbc:	beq	30dcc <expire_temp_rxlines+0x124>
   30dc0:	cmp	r5, #0
   30dc4:	bne	30da8 <expire_temp_rxlines+0x100>
   30dc8:	b	30e28 <expire_temp_rxlines+0x180>
   30dcc:	ldr	r4, [r7, #36]	; 0x24
   30dd0:	cmp	r4, #0
   30dd4:	beq	30dc0 <expire_temp_rxlines+0x118>
   30dd8:	bl	d07c <rb_current_time@plt>
   30ddc:	cmp	r4, r0
   30de0:	bgt	30dc0 <expire_temp_rxlines+0x118>
   30de4:	ldr	r0, [r9, #256]	; 0x100
   30de8:	cmp	r0, #0
   30dec:	beq	30e04 <expire_temp_rxlines+0x15c>
   30df0:	ldr	r3, [r7, #16]
   30df4:	mov	r0, #256	; 0x100
   30df8:	mov	r1, #0
   30dfc:	mov	r2, r8
   30e00:	bl	d640 <sendto_realops_snomask@plt>
   30e04:	mov	r0, r7
   30e08:	bl	dc40 <free_conf@plt>
   30e0c:	mov	r0, r6
   30e10:	mov	r1, sl
   30e14:	bl	310a4 <rb_dlinkDelete>
   30e18:	mov	r0, r6
   30e1c:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   30e20:	cmp	r5, #0
   30e24:	bne	30da8 <expire_temp_rxlines+0x100>
   30e28:	ldr	r0, [pc, #200]	; 30ef8 <expire_temp_rxlines+0x250>
   30e2c:	ldr	r0, [pc, r0]
   30e30:	ldr	r5, [r0]
   30e34:	cmp	r5, #0
   30e38:	beq	30ed4 <expire_temp_rxlines+0x22c>
   30e3c:	ldr	r9, [pc, #184]	; 30efc <expire_temp_rxlines+0x254>
   30e40:	ldr	r9, [pc, r9]
   30e44:	ldr	sl, [pc, #180]	; 30f00 <expire_temp_rxlines+0x258>
   30e48:	ldr	sl, [pc, sl]
   30e4c:	ldr	r8, [pc, #176]	; 30f04 <expire_temp_rxlines+0x25c>
   30e50:	add	r8, pc, r8
   30e54:	mov	r6, r5
   30e58:	ldr	r7, [r5]
   30e5c:	ldr	r5, [r5, #8]
   30e60:	ldr	r0, [r7, #44]	; 0x2c
   30e64:	cmp	r0, #0
   30e68:	beq	30e78 <expire_temp_rxlines+0x1d0>
   30e6c:	cmp	r5, #0
   30e70:	bne	30e54 <expire_temp_rxlines+0x1ac>
   30e74:	b	30ed4 <expire_temp_rxlines+0x22c>
   30e78:	ldr	r4, [r7, #36]	; 0x24
   30e7c:	cmp	r4, #0
   30e80:	beq	30e6c <expire_temp_rxlines+0x1c4>
   30e84:	bl	d07c <rb_current_time@plt>
   30e88:	cmp	r4, r0
   30e8c:	bgt	30e6c <expire_temp_rxlines+0x1c4>
   30e90:	ldr	r0, [r9, #256]	; 0x100
   30e94:	cmp	r0, #0
   30e98:	beq	30eb0 <expire_temp_rxlines+0x208>
   30e9c:	ldr	r3, [r7, #16]
   30ea0:	mov	r0, #256	; 0x100
   30ea4:	mov	r1, #0
   30ea8:	mov	r2, r8
   30eac:	bl	d640 <sendto_realops_snomask@plt>
   30eb0:	mov	r0, r7
   30eb4:	bl	dc40 <free_conf@plt>
   30eb8:	mov	r0, r6
   30ebc:	mov	r1, sl
   30ec0:	bl	310a4 <rb_dlinkDelete>
   30ec4:	mov	r0, r6
   30ec8:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   30ecc:	cmp	r5, #0
   30ed0:	bne	30e54 <expire_temp_rxlines+0x1ac>
   30ed4:	sub	sp, fp, #28
   30ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30edc:	.word	0x00029cf0
   30ee0:	.word	0x00029e94
   30ee4:	.word	0x000152a9
   30ee8:	.word	0x00029b2c
   30eec:	.word	0x00029de8
   30ef0:	.word	0x00029b10
   30ef4:	.word	0x000151f5
   30ef8:	.word	0x00029a98
   30efc:	.word	0x00029d3c
   30f00:	.word	0x00029a7c
   30f04:	.word	0x00015169

00030f08 <clear_s_newconf>:
   30f08:	push	{r4, r5, r6, sl, fp, lr}
   30f0c:	add	fp, sp, #16
   30f10:	ldr	r0, [pc, #356]	; 3107c <clear_s_newconf+0x174>
   30f14:	ldr	r0, [pc, r0]
   30f18:	ldr	r5, [r0]
   30f1c:	cmp	r5, #0
   30f20:	beq	30f50 <clear_s_newconf+0x48>
   30f24:	ldr	r4, [pc, #340]	; 31080 <clear_s_newconf+0x178>
   30f28:	ldr	r4, [pc, r4]
   30f2c:	ldr	r6, [r5, #8]
   30f30:	mov	r0, r5
   30f34:	mov	r1, r4
   30f38:	bl	310a4 <rb_dlinkDelete>
   30f3c:	ldr	r0, [r5]
   30f40:	bl	e3e4 <free_remote_conf@plt>
   30f44:	cmp	r6, #0
   30f48:	mov	r5, r6
   30f4c:	bne	30f2c <clear_s_newconf+0x24>
   30f50:	ldr	r0, [pc, #300]	; 31084 <clear_s_newconf+0x17c>
   30f54:	ldr	r0, [pc, r0]
   30f58:	ldr	r5, [r0]
   30f5c:	cmp	r5, #0
   30f60:	beq	30f90 <clear_s_newconf+0x88>
   30f64:	ldr	r4, [pc, #284]	; 31088 <clear_s_newconf+0x180>
   30f68:	ldr	r4, [pc, r4]
   30f6c:	ldr	r6, [r5, #8]
   30f70:	mov	r0, r5
   30f74:	mov	r1, r4
   30f78:	bl	310a4 <rb_dlinkDelete>
   30f7c:	ldr	r0, [r5]
   30f80:	bl	e3e4 <free_remote_conf@plt>
   30f84:	cmp	r6, #0
   30f88:	mov	r5, r6
   30f8c:	bne	30f6c <clear_s_newconf+0x64>
   30f90:	ldr	r0, [pc, #244]	; 3108c <clear_s_newconf+0x184>
   30f94:	ldr	r0, [pc, r0]
   30f98:	ldr	r5, [r0]
   30f9c:	cmp	r5, #0
   30fa0:	beq	30fd0 <clear_s_newconf+0xc8>
   30fa4:	ldr	r4, [pc, #228]	; 31090 <clear_s_newconf+0x188>
   30fa8:	ldr	r4, [pc, r4]
   30fac:	ldr	r6, [r5, #8]
   30fb0:	mov	r0, r5
   30fb4:	mov	r1, r4
   30fb8:	bl	310a4 <rb_dlinkDelete>
   30fbc:	ldr	r0, [r5]
   30fc0:	bl	e3e4 <free_remote_conf@plt>
   30fc4:	cmp	r6, #0
   30fc8:	mov	r5, r6
   30fcc:	bne	30fac <clear_s_newconf+0xa4>
   30fd0:	ldr	r0, [pc, #188]	; 31094 <clear_s_newconf+0x18c>
   30fd4:	ldr	r0, [pc, r0]
   30fd8:	ldr	r4, [r0]
   30fdc:	cmp	r4, #0
   30fe0:	beq	31018 <clear_s_newconf+0x110>
   30fe4:	ldr	r5, [pc, #172]	; 31098 <clear_s_newconf+0x190>
   30fe8:	ldr	r5, [pc, r5]
   30fec:	ldr	r0, [r4]
   30ff0:	ldr	r6, [r4, #8]
   30ff4:	bl	d9d0 <free_oper_conf@plt>
   30ff8:	mov	r0, r4
   30ffc:	mov	r1, r5
   31000:	bl	310a4 <rb_dlinkDelete>
   31004:	mov	r0, r4
   31008:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   3100c:	cmp	r6, #0
   31010:	mov	r4, r6
   31014:	bne	30fec <clear_s_newconf+0xe4>
   31018:	ldr	r0, [pc, #124]	; 3109c <clear_s_newconf+0x194>
   3101c:	ldr	r0, [pc, r0]
   31020:	ldr	r5, [r0]
   31024:	cmp	r5, #0
   31028:	popeq	{r4, r5, r6, sl, fp, pc}
   3102c:	ldr	r4, [pc, #108]	; 310a0 <clear_s_newconf+0x198>
   31030:	ldr	r4, [pc, r4]
   31034:	ldr	r0, [r5]
   31038:	ldr	r6, [r5, #8]
   3103c:	ldr	r1, [r0, #292]	; 0x124
   31040:	cmp	r1, #0
   31044:	beq	31058 <clear_s_newconf+0x150>
   31048:	ldr	r1, [r0, #288]	; 0x120
   3104c:	orr	r1, r1, #1
   31050:	str	r1, [r0, #288]	; 0x120
   31054:	b	3106c <clear_s_newconf+0x164>
   31058:	mov	r0, r5
   3105c:	mov	r1, r4
   31060:	bl	310a4 <rb_dlinkDelete>
   31064:	ldr	r0, [r5]
   31068:	bl	dcf4 <free_server_conf@plt>
   3106c:	cmp	r6, #0
   31070:	mov	r5, r6
   31074:	bne	31034 <clear_s_newconf+0x12c>
   31078:	pop	{r4, r5, r6, sl, fp, pc}
   3107c:	.word	0x000299a0
   31080:	.word	0x0002998c
   31084:	.word	0x00029a80
   31088:	.word	0x00029a6c
   3108c:	.word	0x00029a30
   31090:	.word	0x00029a1c
   31094:	.word	0x000299dc
   31098:	.word	0x000299c8
   3109c:	.word	0x00029ac4
   310a0:	.word	0x00029ab0

000310a4 <rb_dlinkDelete>:
   310a4:	push	{fp, lr}
   310a8:	mov	fp, sp
   310ac:	cmp	r0, #0
   310b0:	beq	31104 <rb_dlinkDelete+0x60>
   310b4:	cmp	r1, #0
   310b8:	beq	31124 <rb_dlinkDelete+0x80>
   310bc:	ldr	ip, [r0, #4]
   310c0:	ldr	r3, [r0, #8]
   310c4:	add	r2, r3, #4
   310c8:	cmp	r3, #0
   310cc:	addeq	r2, r1, #4
   310d0:	str	ip, [r2]
   310d4:	ldmib	r0, {r2, ip}
   310d8:	cmp	r2, #0
   310dc:	mov	r3, r1
   310e0:	addne	r3, r2, #8
   310e4:	str	ip, [r3]
   310e8:	mov	r2, #0
   310ec:	str	r2, [r0, #4]
   310f0:	str	r2, [r0, #8]
   310f4:	ldr	r0, [r1, #8]
   310f8:	sub	r0, r0, #1
   310fc:	str	r0, [r1, #8]
   31100:	pop	{fp, pc}
   31104:	ldr	r0, [pc, #56]	; 31144 <rb_dlinkDelete+0xa0>
   31108:	add	r0, pc, r0
   3110c:	ldr	r1, [pc, #52]	; 31148 <rb_dlinkDelete+0xa4>
   31110:	add	r1, pc, r1
   31114:	ldr	r3, [pc, #48]	; 3114c <rb_dlinkDelete+0xa8>
   31118:	add	r3, pc, r3
   3111c:	mov	r2, #235	; 0xeb
   31120:	bl	e7e0 <__assert_fail@plt>
   31124:	ldr	r0, [pc, #36]	; 31150 <rb_dlinkDelete+0xac>
   31128:	add	r0, pc, r0
   3112c:	ldr	r1, [pc, #32]	; 31154 <rb_dlinkDelete+0xb0>
   31130:	add	r1, pc, r1
   31134:	ldr	r3, [pc, #28]	; 31158 <rb_dlinkDelete+0xb4>
   31138:	add	r3, pc, r3
   3113c:	mov	r2, #236	; 0xec
   31140:	bl	e7e0 <__assert_fail@plt>
   31144:	.word	0x0000f4a4
   31148:	.word	0x0000f4a6
   3114c:	.word	0x0000f541
   31150:	.word	0x00014d1d
   31154:	.word	0x0000f486
   31158:	.word	0x0000f521

0003115c <free_remote_conf>:
   3115c:	cmp	r0, #0
   31160:	bxeq	lr
   31164:	push	{r4, sl, fp, lr}
   31168:	add	fp, sp, #8
   3116c:	mov	r4, r0
   31170:	ldr	r0, [r0]
   31174:	bl	313b8 <rb_free>
   31178:	ldr	r0, [r4, #4]
   3117c:	bl	313b8 <rb_free>
   31180:	ldr	r0, [r4, #8]
   31184:	bl	313b8 <rb_free>
   31188:	mov	r0, r4
   3118c:	pop	{r4, sl, fp, lr}
   31190:	b	313b8 <rb_free>

00031194 <free_oper_conf>:
   31194:	cmp	r0, #0
   31198:	bxeq	lr
   3119c:	push	{r4, r5, fp, lr}
   311a0:	add	fp, sp, #8
   311a4:	mov	r4, r0
   311a8:	ldr	r0, [r0, #4]
   311ac:	bl	313b8 <rb_free>
   311b0:	ldr	r0, [r4, #8]
   311b4:	bl	313b8 <rb_free>
   311b8:	ldr	r0, [r4]
   311bc:	bl	313b8 <rb_free>
   311c0:	ldr	r0, [r4, #16]
   311c4:	bl	313b8 <rb_free>
   311c8:	ldr	r5, [r4, #12]
   311cc:	cmp	r5, #0
   311d0:	beq	311f4 <free_oper_conf+0x60>
   311d4:	mov	r0, r5
   311d8:	bl	dc94 <strlen@plt>
   311dc:	mov	r2, r0
   311e0:	mov	r0, r5
   311e4:	mov	r1, #0
   311e8:	bl	df28 <memset@plt>
   311ec:	ldr	r0, [r4, #12]
   311f0:	bl	313b8 <rb_free>
   311f4:	ldr	r0, [r4, #36]	; 0x24
   311f8:	bl	313b8 <rb_free>
   311fc:	ldr	r0, [r4, #40]	; 0x28
   31200:	cmp	r0, #0
   31204:	beq	3120c <free_oper_conf+0x78>
   31208:	bl	d688 <RSA_free@plt>
   3120c:	mov	r0, r4
   31210:	pop	{r4, r5, fp, lr}
   31214:	b	313b8 <rb_free>

00031218 <free_server_conf>:
   31218:	cmp	r0, #0
   3121c:	bxeq	lr
   31220:	push	{r4, r5, fp, lr}
   31224:	add	fp, sp, #8
   31228:	mov	r4, r0
   3122c:	ldr	r5, [r0, #272]	; 0x110
   31230:	cmp	r5, #0
   31234:	ldrbne	r0, [r5]
   31238:	cmpne	r0, #0
   3123c:	beq	31260 <free_server_conf+0x48>
   31240:	mov	r0, r5
   31244:	bl	dc94 <strlen@plt>
   31248:	mov	r2, r0
   3124c:	mov	r0, r5
   31250:	mov	r1, #0
   31254:	bl	df28 <memset@plt>
   31258:	ldr	r0, [r4, #272]	; 0x110
   3125c:	bl	313b8 <rb_free>
   31260:	ldr	r5, [r4, #276]	; 0x114
   31264:	cmp	r5, #0
   31268:	ldrbne	r0, [r5]
   3126c:	cmpne	r0, #0
   31270:	beq	31294 <free_server_conf+0x7c>
   31274:	mov	r0, r5
   31278:	bl	dc94 <strlen@plt>
   3127c:	mov	r2, r0
   31280:	mov	r0, r5
   31284:	mov	r1, #0
   31288:	bl	df28 <memset@plt>
   3128c:	ldr	r0, [r4, #276]	; 0x114
   31290:	bl	313b8 <rb_free>
   31294:	ldr	r0, [r4]
   31298:	bl	313b8 <rb_free>
   3129c:	ldr	r0, [r4, #4]
   312a0:	bl	313b8 <rb_free>
   312a4:	ldr	r0, [r4, #304]	; 0x130
   312a8:	bl	313b8 <rb_free>
   312ac:	ldr	r0, [r4, #572]	; 0x23c
   312b0:	bl	313b8 <rb_free>
   312b4:	ldr	r0, [r4, #280]	; 0x118
   312b8:	bl	313b8 <rb_free>
   312bc:	mov	r0, r4
   312c0:	pop	{r4, r5, fp, lr}
   312c4:	b	313b8 <rb_free>

000312c8 <clear_s_newconf_bans>:
   312c8:	push	{r4, r5, r6, sl, fp, lr}
   312cc:	add	fp, sp, #16
   312d0:	ldr	r0, [pc, #168]	; 31380 <clear_s_newconf_bans+0xb8>
   312d4:	ldr	r0, [pc, r0]
   312d8:	ldr	r5, [r0]
   312dc:	cmp	r5, #0
   312e0:	beq	31324 <clear_s_newconf_bans+0x5c>
   312e4:	ldr	r4, [pc, #152]	; 31384 <clear_s_newconf_bans+0xbc>
   312e8:	ldr	r4, [pc, r4]
   312ec:	ldr	r0, [r5]
   312f0:	ldr	r6, [r5, #8]
   312f4:	ldr	r1, [r0, #36]	; 0x24
   312f8:	cmp	r1, #0
   312fc:	bne	31318 <clear_s_newconf_bans+0x50>
   31300:	bl	dc40 <free_conf@plt>
   31304:	mov	r0, r5
   31308:	mov	r1, r4
   3130c:	bl	310a4 <rb_dlinkDelete>
   31310:	mov	r0, r5
   31314:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   31318:	cmp	r6, #0
   3131c:	mov	r5, r6
   31320:	bne	312ec <clear_s_newconf_bans+0x24>
   31324:	ldr	r0, [pc, #92]	; 31388 <clear_s_newconf_bans+0xc0>
   31328:	ldr	r0, [pc, r0]
   3132c:	ldr	r5, [r0]
   31330:	cmp	r5, #0
   31334:	beq	31378 <clear_s_newconf_bans+0xb0>
   31338:	ldr	r4, [pc, #76]	; 3138c <clear_s_newconf_bans+0xc4>
   3133c:	ldr	r4, [pc, r4]
   31340:	ldr	r0, [r5]
   31344:	ldr	r6, [r5, #8]
   31348:	ldr	r1, [r0, #36]	; 0x24
   3134c:	cmp	r1, #0
   31350:	bne	3136c <clear_s_newconf_bans+0xa4>
   31354:	bl	dc40 <free_conf@plt>
   31358:	mov	r0, r5
   3135c:	mov	r1, r4
   31360:	bl	310a4 <rb_dlinkDelete>
   31364:	mov	r0, r5
   31368:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   3136c:	cmp	r6, #0
   31370:	mov	r5, r6
   31374:	bne	31340 <clear_s_newconf_bans+0x78>
   31378:	pop	{r4, r5, r6, sl, fp, lr}
   3137c:	b	d7a8 <clear_resv_hash@plt>
   31380:	.word	0x000295f0
   31384:	.word	0x000295dc
   31388:	.word	0x00029584
   3138c:	.word	0x00029570

00031390 <make_remote_conf>:
   31390:	mov	r0, #28
   31394:	b	31398 <rb_malloc>

00031398 <rb_malloc>:
   31398:	push	{fp, lr}
   3139c:	mov	fp, sp
   313a0:	mov	r1, r0
   313a4:	mov	r0, #1
   313a8:	bl	cfa4 <calloc@plt>
   313ac:	cmp	r0, #0
   313b0:	popne	{fp, pc}
   313b4:	bl	d448 <rb_outofmemory@plt>

000313b8 <rb_free>:
   313b8:	cmp	r0, #0
   313bc:	bxeq	lr
   313c0:	b	d328 <free@plt>

000313c4 <find_shared_conf>:
   313c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   313c8:	add	fp, sp, #28
   313cc:	sub	sp, sp, #4
   313d0:	mov	r5, r0
   313d4:	ldr	r0, [pc, #132]	; 31460 <find_shared_conf+0x9c>
   313d8:	ldr	r0, [pc, r0]
   313dc:	ldr	r4, [r0]
   313e0:	mov	r9, #0
   313e4:	cmp	r4, #0
   313e8:	beq	31454 <find_shared_conf+0x90>
   313ec:	mov	r8, r3
   313f0:	mov	sl, r2
   313f4:	mov	r7, r1
   313f8:	ldr	r6, [r4]
   313fc:	ldr	r0, [r6]
   31400:	mov	r1, r5
   31404:	bl	e114 <match@plt>
   31408:	cmp	r0, #0
   3140c:	beq	31438 <find_shared_conf+0x74>
   31410:	ldr	r0, [r6, #4]
   31414:	mov	r1, r7
   31418:	bl	e114 <match@plt>
   3141c:	cmp	r0, #0
   31420:	beq	31438 <find_shared_conf+0x74>
   31424:	ldr	r0, [r6, #8]
   31428:	mov	r1, sl
   3142c:	bl	e114 <match@plt>
   31430:	cmp	r0, #0
   31434:	bne	31448 <find_shared_conf+0x84>
   31438:	ldr	r4, [r4, #8]
   3143c:	cmp	r4, #0
   31440:	bne	313f8 <find_shared_conf+0x34>
   31444:	b	31454 <find_shared_conf+0x90>
   31448:	ldr	r0, [r6, #12]
   3144c:	ands	r9, r0, r8
   31450:	movwne	r9, #1
   31454:	mov	r0, r9
   31458:	sub	sp, fp, #28
   3145c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31460:	.word	0x000294dc

00031464 <propagate_generic>:
   31464:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31468:	add	fp, sp, #24
   3146c:	sub	sp, sp, #536	; 0x218
   31470:	mov	r4, r3
   31474:	mov	r5, r2
   31478:	mov	r7, r1
   3147c:	mov	r6, r0
   31480:	add	r3, fp, #12
   31484:	str	r3, [sp, #20]
   31488:	ldr	r2, [fp, #8]
   3148c:	add	r8, sp, #24
   31490:	mov	r0, r8
   31494:	mov	r1, #512	; 0x200
   31498:	bl	e450 <vsnprintf@plt>
   3149c:	ldr	r0, [pc, #80]	; 314f4 <propagate_generic+0x90>
   314a0:	add	r0, pc, r0
   314a4:	stm	sp, {r0, r7}
   314a8:	str	r5, [sp, #8]
   314ac:	str	r8, [sp, #12]
   314b0:	mov	r0, r6
   314b4:	mov	r1, r5
   314b8:	mov	r2, r4
   314bc:	mov	r3, #0
   314c0:	bl	d0b8 <sendto_match_servs@plt>
   314c4:	ldr	r0, [pc, #44]	; 314f8 <propagate_generic+0x94>
   314c8:	ldr	r0, [pc, r0]
   314cc:	ldr	r2, [r0]
   314d0:	ldr	r0, [pc, #36]	; 314fc <propagate_generic+0x98>
   314d4:	add	r0, pc, r0
   314d8:	stm	sp, {r0, r5, r7, r8}
   314dc:	mov	r0, r6
   314e0:	mov	r1, r5
   314e4:	mov	r3, r4
   314e8:	bl	d0b8 <sendto_match_servs@plt>
   314ec:	sub	sp, fp, #24
   314f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   314f4:	.word	0x00014a6b
   314f8:	.word	0x000296ac
   314fc:	.word	0x00014a31

00031500 <cluster_generic>:
   31500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31504:	add	fp, sp, #28
   31508:	sub	sp, sp, #540	; 0x21c
   3150c:	mov	r4, r3
   31510:	mov	r9, r2
   31514:	mov	r6, r1
   31518:	mov	r7, r0
   3151c:	add	r3, fp, #12
   31520:	str	r3, [sp, #20]
   31524:	ldr	r2, [fp, #8]
   31528:	add	r8, sp, #24
   3152c:	mov	r0, r8
   31530:	mov	r1, #512	; 0x200
   31534:	bl	e450 <vsnprintf@plt>
   31538:	ldr	r0, [pc, #124]	; 315bc <cluster_generic+0xbc>
   3153c:	ldr	r0, [pc, r0]
   31540:	ldr	r5, [r0]
   31544:	b	3154c <cluster_generic+0x4c>
   31548:	ldr	r5, [r5, #8]
   3154c:	cmp	r5, #0
   31550:	subeq	sp, fp, #28
   31554:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31558:	ldr	sl, [r5]
   3155c:	ldr	r0, [sl, #12]
   31560:	tst	r0, r9
   31564:	beq	31548 <cluster_generic+0x48>
   31568:	ldr	r1, [sl, #8]
   3156c:	ldr	r0, [pc, #76]	; 315c0 <cluster_generic+0xc0>
   31570:	add	r0, pc, r0
   31574:	stm	sp, {r0, r6}
   31578:	str	r1, [sp, #8]
   3157c:	str	r8, [sp, #12]
   31580:	mov	r0, r7
   31584:	mov	r2, r4
   31588:	mov	r3, #0
   3158c:	bl	d0b8 <sendto_match_servs@plt>
   31590:	ldr	r0, [pc, #44]	; 315c4 <cluster_generic+0xc4>
   31594:	ldr	r0, [pc, r0]
   31598:	ldr	r2, [r0]
   3159c:	ldr	r1, [sl, #8]
   315a0:	ldr	r0, [pc, #32]	; 315c8 <cluster_generic+0xc8>
   315a4:	add	r0, pc, r0
   315a8:	stm	sp, {r0, r1, r6, r8}
   315ac:	mov	r0, r7
   315b0:	mov	r3, r4
   315b4:	bl	d0b8 <sendto_match_servs@plt>
   315b8:	b	31548 <cluster_generic+0x48>
   315bc:	.word	0x00029498
   315c0:	.word	0x0001499b
   315c4:	.word	0x000295e0
   315c8:	.word	0x00014961

000315cc <make_oper_conf>:
   315cc:	mov	r0, #44	; 0x2c
   315d0:	b	31398 <rb_malloc>

000315d4 <find_oper_conf>:
   315d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   315d8:	add	fp, sp, #28
   315dc:	sub	sp, sp, #332	; 0x14c
   315e0:	mov	r4, r3
   315e4:	mov	r3, r2
   315e8:	mov	r5, r1
   315ec:	mov	r6, r0
   315f0:	add	r1, sp, #72	; 0x48
   315f4:	mov	r2, sp
   315f8:	mov	r0, r3
   315fc:	bl	d568 <parse_netmask@plt>
   31600:	ldr	r0, [pc, #192]	; 316c8 <find_oper_conf+0xf4>
   31604:	ldr	r0, [pc, r0]
   31608:	ldr	r9, [r0]
   3160c:	cmp	r9, #0
   31610:	beq	316b8 <find_oper_conf+0xe4>
   31614:	add	r7, sp, #8
   31618:	sub	r8, fp, #160	; 0xa0
   3161c:	ldr	sl, [r9]
   31620:	ldr	r0, [sl]
   31624:	mov	r1, r4
   31628:	bl	e750 <irccmp@plt>
   3162c:	cmp	r0, #0
   31630:	bne	316ac <find_oper_conf+0xd8>
   31634:	ldr	r0, [sl, #4]
   31638:	mov	r1, r6
   3163c:	bl	e114 <match@plt>
   31640:	cmp	r0, #0
   31644:	beq	316ac <find_oper_conf+0xd8>
   31648:	ldr	r1, [sl, #8]
   3164c:	mov	r0, r7
   31650:	mov	r2, #64	; 0x40
   31654:	bl	e510 <rb_strlcpy@plt>
   31658:	mov	r0, r7
   3165c:	mov	r1, r8
   31660:	add	r2, sp, #4
   31664:	bl	d568 <parse_netmask@plt>
   31668:	cmp	r0, #1
   3166c:	beq	31698 <find_oper_conf+0xc4>
   31670:	ldrh	r0, [sp, #72]	; 0x48
   31674:	ldrh	r1, [fp, #-160]	; 0xffffff60
   31678:	cmp	r1, r0
   3167c:	bne	31698 <find_oper_conf+0xc4>
   31680:	ldr	r2, [sp, #4]
   31684:	mov	r0, r8
   31688:	add	r1, sp, #72	; 0x48
   3168c:	bl	d034 <comp_with_mask_sock@plt>
   31690:	cmp	r0, #0
   31694:	bne	316bc <find_oper_conf+0xe8>
   31698:	ldr	r0, [sl, #8]
   3169c:	mov	r1, r5
   316a0:	bl	e114 <match@plt>
   316a4:	cmp	r0, #0
   316a8:	bne	316bc <find_oper_conf+0xe8>
   316ac:	ldr	r9, [r9, #8]
   316b0:	cmp	r9, #0
   316b4:	bne	3161c <find_oper_conf+0x48>
   316b8:	mov	sl, #0
   316bc:	mov	r0, sl
   316c0:	sub	sp, fp, #28
   316c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   316c8:	.word	0x000293ac

000316cc <make_server_conf>:
   316cc:	push	{fp, lr}
   316d0:	mov	fp, sp
   316d4:	mov	r0, #592	; 0x250
   316d8:	bl	31398 <rb_malloc>
   316dc:	mov	r1, #308	; 0x134
   316e0:	mov	r2, #0
   316e4:	strh	r2, [r0, r1]
   316e8:	mov	r1, #440	; 0x1b8
   316ec:	strh	r2, [r0, r1]
   316f0:	strh	r2, [r0, #8]
   316f4:	strh	r2, [r0, #140]	; 0x8c
   316f8:	str	r2, [r0, #300]	; 0x12c
   316fc:	pop	{fp, pc}

00031700 <add_server_conf>:
   31700:	push	{r4, r5, r6, sl, fp, lr}
   31704:	add	fp, sp, #16
   31708:	mov	r4, r0
   3170c:	ldr	r0, [r0, #572]	; 0x23c
   31710:	cmp	r0, #0
   31714:	ldrbne	r1, [r0]
   31718:	cmpne	r1, #0
   3171c:	bne	31744 <add_server_conf+0x44>
   31720:	ldr	r0, [pc, #268]	; 31834 <add_server_conf+0x134>
   31724:	add	r0, pc, r0
   31728:	bl	31854 <rb_strdup>
   3172c:	str	r0, [r4, #572]	; 0x23c
   31730:	ldr	r0, [pc, #256]	; 31838 <add_server_conf+0x138>
   31734:	ldr	r0, [pc, r0]
   31738:	ldr	r0, [r0]
   3173c:	str	r0, [r4, #576]	; 0x240
   31740:	pop	{r4, r5, r6, sl, fp, pc}
   31744:	bl	d6ac <find_class@plt>
   31748:	str	r0, [r4, #576]	; 0x240
   3174c:	ldr	r1, [pc, #232]	; 3183c <add_server_conf+0x13c>
   31750:	ldr	r1, [pc, r1]
   31754:	ldr	r1, [r1]
   31758:	cmp	r0, r1
   3175c:	bne	31788 <add_server_conf+0x88>
   31760:	ldr	r1, [r4]
   31764:	ldr	r0, [pc, #212]	; 31840 <add_server_conf+0x140>
   31768:	add	r0, pc, r0
   3176c:	bl	d400 <conf_report_error@plt>
   31770:	ldr	r0, [r4, #572]	; 0x23c
   31774:	bl	313b8 <rb_free>
   31778:	ldr	r0, [pc, #196]	; 31844 <add_server_conf+0x144>
   3177c:	add	r0, pc, r0
   31780:	bl	31854 <rb_strdup>
   31784:	str	r0, [r4, #572]	; 0x23c
   31788:	ldr	r5, [r4, #4]
   3178c:	cmp	r5, #0
   31790:	beq	317e8 <add_server_conf+0xe8>
   31794:	ldr	r1, [pc, #172]	; 31848 <add_server_conf+0x148>
   31798:	add	r1, pc, r1
   3179c:	mov	r0, r5
   317a0:	bl	e4c8 <strpbrk@plt>
   317a4:	cmp	r0, #0
   317a8:	bne	317e8 <add_server_conf+0xe8>
   317ac:	ldr	r6, [pc, #152]	; 3184c <add_server_conf+0x14c>
   317b0:	add	r6, pc, r6
   317b4:	mov	r0, r5
   317b8:	mov	r1, #2
   317bc:	mov	r2, r6
   317c0:	mov	r3, r4
   317c4:	bl	e024 <lookup_hostname@plt>
   317c8:	strh	r0, [r4, #136]	; 0x88
   317cc:	ldr	r0, [r4, #4]
   317d0:	mov	r1, #10
   317d4:	mov	r2, r6
   317d8:	mov	r3, r4
   317dc:	bl	e024 <lookup_hostname@plt>
   317e0:	mov	r1, #268	; 0x10c
   317e4:	strh	r0, [r4, r1]
   317e8:	ldr	r0, [r4, #304]	; 0x130
   317ec:	cmp	r0, #0
   317f0:	popeq	{r4, r5, r6, sl, fp, pc}
   317f4:	ldr	r5, [pc, #84]	; 31850 <add_server_conf+0x150>
   317f8:	add	r5, pc, r5
   317fc:	mov	r1, #2
   31800:	mov	r2, r5
   31804:	mov	r3, r4
   31808:	bl	e024 <lookup_hostname@plt>
   3180c:	mov	r1, #436	; 0x1b4
   31810:	strh	r0, [r4, r1]
   31814:	ldr	r0, [r4, #304]	; 0x130
   31818:	mov	r1, #10
   3181c:	mov	r2, r5
   31820:	mov	r3, r4
   31824:	bl	e024 <lookup_hostname@plt>
   31828:	mov	r1, #568	; 0x238
   3182c:	strh	r0, [r4, r1]
   31830:	pop	{r4, r5, r6, sl, fp, pc}
   31834:	.word	0x0000f8f0
   31838:	.word	0x00029118
   3183c:	.word	0x000290fc
   31840:	.word	0x000147ac
   31844:	.word	0x0000f898
   31848:	.word	0x00010213
   3184c:	.word	0x000000d4
   31850:	.word	0x000000e0

00031854 <rb_strdup>:
   31854:	push	{r4, r5, fp, lr}
   31858:	add	fp, sp, #8
   3185c:	mov	r4, r0
   31860:	bl	dc94 <strlen@plt>
   31864:	add	r0, r0, #1
   31868:	bl	da90 <malloc@plt>
   3186c:	cmp	r0, #0
   31870:	beq	31888 <rb_strdup+0x34>
   31874:	mov	r5, r0
   31878:	mov	r1, r4
   3187c:	bl	d928 <strcpy@plt>
   31880:	mov	r0, r5
   31884:	pop	{r4, r5, fp, pc}
   31888:	bl	d448 <rb_outofmemory@plt>

0003188c <conf_connect_dns_callback>:
   3188c:	push	{r4, r5, fp, lr}
   31890:	add	fp, sp, #8
   31894:	mov	r4, r3
   31898:	cmp	r2, #10
   3189c:	beq	318bc <conf_connect_dns_callback+0x30>
   318a0:	cmp	r2, #2
   318a4:	popne	{r4, r5, fp, pc}
   318a8:	mov	r5, #136	; 0x88
   318ac:	cmp	r1, #1
   318b0:	bne	318d0 <conf_connect_dns_callback+0x44>
   318b4:	add	r1, r4, #8
   318b8:	b	318cc <conf_connect_dns_callback+0x40>
   318bc:	mov	r5, #268	; 0x10c
   318c0:	cmp	r1, #1
   318c4:	bne	318d0 <conf_connect_dns_callback+0x44>
   318c8:	add	r1, r4, #140	; 0x8c
   318cc:	bl	e000 <rb_inet_pton_sock@plt>
   318d0:	add	r0, r4, r5
   318d4:	mov	r1, #0
   318d8:	strh	r1, [r0]
   318dc:	pop	{r4, r5, fp, pc}

000318e0 <conf_bind_dns_callback>:
   318e0:	push	{r4, r5, fp, lr}
   318e4:	add	fp, sp, #8
   318e8:	mov	r4, r3
   318ec:	cmp	r2, #10
   318f0:	beq	31910 <conf_bind_dns_callback+0x30>
   318f4:	cmp	r2, #2
   318f8:	popne	{r4, r5, fp, pc}
   318fc:	mov	r5, #436	; 0x1b4
   31900:	cmp	r1, #1
   31904:	bne	31924 <conf_bind_dns_callback+0x44>
   31908:	add	r1, r4, #308	; 0x134
   3190c:	b	31920 <conf_bind_dns_callback+0x40>
   31910:	mov	r5, #568	; 0x238
   31914:	cmp	r1, #1
   31918:	bne	31924 <conf_bind_dns_callback+0x44>
   3191c:	add	r1, r4, #440	; 0x1b8
   31920:	bl	e000 <rb_inet_pton_sock@plt>
   31924:	add	r0, r4, r5
   31928:	mov	r1, #0
   3192c:	strh	r1, [r0]
   31930:	pop	{r4, r5, fp, pc}

00031934 <find_server_conf>:
   31934:	push	{r4, r5, r6, sl, fp, lr}
   31938:	add	fp, sp, #16
   3193c:	mov	r4, r0
   31940:	ldr	r0, [pc, #84]	; 3199c <find_server_conf+0x68>
   31944:	ldr	r0, [pc, r0]
   31948:	ldr	r6, [r0]
   3194c:	cmp	r6, #0
   31950:	bne	31964 <find_server_conf+0x30>
   31954:	b	31990 <find_server_conf+0x5c>
   31958:	ldr	r6, [r6, #8]
   3195c:	cmp	r6, #0
   31960:	beq	31990 <find_server_conf+0x5c>
   31964:	ldr	r5, [r6]
   31968:	ldrb	r0, [r5, #288]	; 0x120
   3196c:	tst	r0, #1
   31970:	bne	31958 <find_server_conf+0x24>
   31974:	ldr	r1, [r5]
   31978:	mov	r0, r4
   3197c:	bl	e114 <match@plt>
   31980:	cmp	r0, #0
   31984:	beq	31958 <find_server_conf+0x24>
   31988:	mov	r0, r5
   3198c:	pop	{r4, r5, r6, sl, fp, pc}
   31990:	mov	r5, #0
   31994:	mov	r0, r5
   31998:	pop	{r4, r5, r6, sl, fp, pc}
   3199c:	.word	0x0002919c

000319a0 <attach_server_conf>:
   319a0:	push	{r4, r5, fp, lr}
   319a4:	add	fp, sp, #8
   319a8:	mov	r4, r1
   319ac:	mov	r5, r0
   319b0:	ldr	r0, [r0, #432]	; 0x1b0
   319b4:	ldr	r0, [r0, #136]	; 0x88
   319b8:	cmp	r0, #0
   319bc:	beq	319d0 <attach_server_conf+0x30>
   319c0:	cmp	r0, r4
   319c4:	popeq	{r4, r5, fp, pc}
   319c8:	mov	r0, r5
   319cc:	bl	ddcc <detach_server_conf@plt>
   319d0:	ldr	r0, [r4, #576]	; 0x240
   319d4:	ldr	r1, [r0, #36]	; 0x24
   319d8:	add	r1, r1, #1
   319dc:	str	r1, [r0, #36]	; 0x24
   319e0:	ldr	r0, [r5, #432]	; 0x1b0
   319e4:	str	r4, [r0, #136]	; 0x88
   319e8:	ldr	r0, [r4, #292]	; 0x124
   319ec:	add	r0, r0, #1
   319f0:	str	r0, [r4, #292]	; 0x124
   319f4:	pop	{r4, r5, fp, pc}

000319f8 <detach_server_conf>:
   319f8:	push	{r4, sl, fp, lr}
   319fc:	add	fp, sp, #8
   31a00:	ldr	r0, [r0, #432]	; 0x1b0
   31a04:	ldr	r4, [r0, #136]	; 0x88
   31a08:	cmp	r4, #0
   31a0c:	beq	31a74 <detach_server_conf+0x7c>
   31a10:	mov	r1, #0
   31a14:	str	r1, [r0, #136]	; 0x88
   31a18:	ldr	r1, [r4, #292]	; 0x124
   31a1c:	ldr	r0, [r4, #576]	; 0x240
   31a20:	subs	r1, r1, #1
   31a24:	str	r1, [r4, #292]	; 0x124
   31a28:	ldr	r1, [r0, #36]	; 0x24
   31a2c:	sub	r2, r1, #1
   31a30:	str	r2, [r0, #36]	; 0x24
   31a34:	popne	{r4, sl, fp, pc}
   31a38:	ldr	r2, [r4, #288]	; 0x120
   31a3c:	ands	r2, r2, #1
   31a40:	beq	31a74 <detach_server_conf+0x7c>
   31a44:	cmp	r1, #1
   31a48:	ldrle	r1, [r0, #8]
   31a4c:	cmnle	r1, #1
   31a50:	bgt	31a58 <detach_server_conf+0x60>
   31a54:	bl	e7bc <free_class@plt>
   31a58:	add	r0, r4, #580	; 0x244
   31a5c:	ldr	r1, [pc, #20]	; 31a78 <detach_server_conf+0x80>
   31a60:	ldr	r1, [pc, r1]
   31a64:	bl	310a4 <rb_dlinkDelete>
   31a68:	mov	r0, r4
   31a6c:	pop	{r4, sl, fp, lr}
   31a70:	b	31218 <free_server_conf>
   31a74:	pop	{r4, sl, fp, pc}
   31a78:	.word	0x00029080

00031a7c <set_server_conf_autoconn>:
   31a7c:	push	{r4, r5, r6, sl, fp, lr}
   31a80:	add	fp, sp, #16
   31a84:	sub	sp, sp, #8
   31a88:	mov	r5, r2
   31a8c:	mov	r4, r1
   31a90:	mov	r6, r0
   31a94:	mov	r0, r1
   31a98:	bl	e0d8 <find_server_conf@plt>
   31a9c:	cmp	r0, #0
   31aa0:	beq	31ae4 <set_server_conf_autoconn+0x68>
   31aa4:	ldr	r1, [r0, #288]	; 0x120
   31aa8:	orr	r2, r1, #32
   31aac:	cmp	r5, #0
   31ab0:	biceq	r2, r1, #32
   31ab4:	str	r2, [r0, #288]	; 0x120
   31ab8:	mov	r0, r6
   31abc:	bl	d730 <get_oper_name@plt>
   31ac0:	mov	r3, r0
   31ac4:	stm	sp, {r4, r5}
   31ac8:	ldr	r2, [pc, #48]	; 31b00 <set_server_conf_autoconn+0x84>
   31acc:	add	r2, pc, r2
   31ad0:	mov	r0, #256	; 0x100
   31ad4:	mov	r1, #0
   31ad8:	bl	d640 <sendto_realops_snomask@plt>
   31adc:	sub	sp, fp, #16
   31ae0:	pop	{r4, r5, r6, sl, fp, pc}
   31ae4:	ldr	r1, [pc, #24]	; 31b04 <set_server_conf_autoconn+0x88>
   31ae8:	add	r1, pc, r1
   31aec:	mov	r0, r6
   31af0:	mov	r2, r4
   31af4:	sub	sp, fp, #16
   31af8:	pop	{r4, r5, r6, sl, fp, lr}
   31afc:	b	e414 <sendto_one_notice@plt>
   31b00:	.word	0x0001446e
   31b04:	.word	0x00014477

00031b08 <disable_server_conf_autoconn>:
   31b08:	push	{r4, r5, fp, lr}
   31b0c:	add	fp, sp, #8
   31b10:	mov	r4, r0
   31b14:	bl	e0d8 <find_server_conf@plt>
   31b18:	cmp	r0, #0
   31b1c:	ldrne	r1, [r0, #288]	; 0x120
   31b20:	tstne	r1, #32
   31b24:	popeq	{r4, r5, fp, pc}
   31b28:	bic	r1, r1, #32
   31b2c:	str	r1, [r0, #288]	; 0x120
   31b30:	ldr	r5, [pc, #40]	; 31b60 <disable_server_conf_autoconn+0x58>
   31b34:	add	r5, pc, r5
   31b38:	mov	r0, #256	; 0x100
   31b3c:	mov	r1, #0
   31b40:	mov	r2, r5
   31b44:	mov	r3, r4
   31b48:	bl	d640 <sendto_realops_snomask@plt>
   31b4c:	mov	r0, #5
   31b50:	mov	r1, r5
   31b54:	mov	r2, r4
   31b58:	pop	{r4, r5, fp, lr}
   31b5c:	b	e0b4 <ilog@plt>
   31b60:	.word	0x0001443a

00031b64 <find_xline>:
   31b64:	push	{r4, r5, r6, r7, fp, lr}
   31b68:	add	fp, sp, #16
   31b6c:	mov	r6, r0
   31b70:	ldr	r0, [pc, #88]	; 31bd0 <find_xline+0x6c>
   31b74:	ldr	r0, [pc, r0]
   31b78:	ldr	r7, [r0]
   31b7c:	cmp	r7, #0
   31b80:	beq	31bac <find_xline+0x48>
   31b84:	mov	r4, r1
   31b88:	ldr	r5, [r7]
   31b8c:	ldr	r0, [r5, #16]
   31b90:	mov	r1, r6
   31b94:	bl	d16c <match_esc@plt>
   31b98:	cmp	r0, #0
   31b9c:	bne	31bb8 <find_xline+0x54>
   31ba0:	ldr	r7, [r7, #8]
   31ba4:	cmp	r7, #0
   31ba8:	bne	31b88 <find_xline+0x24>
   31bac:	mov	r5, #0
   31bb0:	mov	r0, r5
   31bb4:	pop	{r4, r5, r6, r7, fp, pc}
   31bb8:	cmp	r4, #0
   31bbc:	ldrne	r0, [r5, #32]
   31bc0:	addne	r0, r0, #1
   31bc4:	strne	r0, [r5, #32]
   31bc8:	mov	r0, r5
   31bcc:	pop	{r4, r5, r6, r7, fp, pc}
   31bd0:	.word	0x00028d50

00031bd4 <find_xline_mask>:
   31bd4:	push	{r4, r5, r6, sl, fp, lr}
   31bd8:	add	fp, sp, #16
   31bdc:	mov	r4, r0
   31be0:	ldr	r0, [pc, #64]	; 31c28 <find_xline_mask+0x54>
   31be4:	ldr	r0, [pc, r0]
   31be8:	ldr	r6, [r0]
   31bec:	cmp	r6, #0
   31bf0:	beq	31c1c <find_xline_mask+0x48>
   31bf4:	ldr	r5, [r6]
   31bf8:	ldr	r0, [r5, #16]
   31bfc:	mov	r1, r4
   31c00:	bl	e750 <irccmp@plt>
   31c04:	cmp	r0, #0
   31c08:	moveq	r0, r5
   31c0c:	popeq	{r4, r5, r6, sl, fp, pc}
   31c10:	ldr	r6, [r6, #8]
   31c14:	cmp	r6, #0
   31c18:	bne	31bf4 <find_xline_mask+0x20>
   31c1c:	mov	r5, #0
   31c20:	mov	r0, r5
   31c24:	pop	{r4, r5, r6, sl, fp, pc}
   31c28:	.word	0x00028ce0

00031c2c <find_nick_resv>:
   31c2c:	push	{r4, r5, r6, sl, fp, lr}
   31c30:	add	fp, sp, #16
   31c34:	mov	r4, r0
   31c38:	ldr	r0, [pc, #84]	; 31c94 <find_nick_resv+0x68>
   31c3c:	ldr	r0, [pc, r0]
   31c40:	ldr	r6, [r0]
   31c44:	cmp	r6, #0
   31c48:	bne	31c5c <find_nick_resv+0x30>
   31c4c:	b	31c88 <find_nick_resv+0x5c>
   31c50:	ldr	r6, [r6, #8]
   31c54:	cmp	r6, #0
   31c58:	beq	31c88 <find_nick_resv+0x5c>
   31c5c:	ldr	r5, [r6]
   31c60:	ldr	r0, [r5, #16]
   31c64:	mov	r1, r4
   31c68:	bl	d16c <match_esc@plt>
   31c6c:	cmp	r0, #0
   31c70:	beq	31c50 <find_nick_resv+0x24>
   31c74:	ldr	r0, [r5, #32]
   31c78:	add	r0, r0, #1
   31c7c:	str	r0, [r5, #32]
   31c80:	mov	r0, r5
   31c84:	pop	{r4, r5, r6, sl, fp, pc}
   31c88:	mov	r5, #0
   31c8c:	mov	r0, r5
   31c90:	pop	{r4, r5, r6, sl, fp, pc}
   31c94:	.word	0x00028c70

00031c98 <find_nick_resv_mask>:
   31c98:	push	{r4, r5, r6, sl, fp, lr}
   31c9c:	add	fp, sp, #16
   31ca0:	mov	r4, r0
   31ca4:	ldr	r0, [pc, #64]	; 31cec <find_nick_resv_mask+0x54>
   31ca8:	ldr	r0, [pc, r0]
   31cac:	ldr	r6, [r0]
   31cb0:	cmp	r6, #0
   31cb4:	beq	31ce0 <find_nick_resv_mask+0x48>
   31cb8:	ldr	r5, [r6]
   31cbc:	ldr	r0, [r5, #16]
   31cc0:	mov	r1, r4
   31cc4:	bl	e750 <irccmp@plt>
   31cc8:	cmp	r0, #0
   31ccc:	moveq	r0, r5
   31cd0:	popeq	{r4, r5, r6, sl, fp, pc}
   31cd4:	ldr	r6, [r6, #8]
   31cd8:	cmp	r6, #0
   31cdc:	bne	31cb8 <find_nick_resv_mask+0x20>
   31ce0:	mov	r5, #0
   31ce4:	mov	r0, r5
   31ce8:	pop	{r4, r5, r6, sl, fp, pc}
   31cec:	.word	0x00028c04

00031cf0 <clean_resv_nick>:
   31cf0:	push	{fp, lr}
   31cf4:	mov	fp, sp
   31cf8:	ldrb	r2, [r0]
   31cfc:	mov	r1, #0
   31d00:	cmp	r2, #45	; 0x2d
   31d04:	beq	31d8c <clean_resv_nick+0x9c>
   31d08:	ldr	ip, [pc, #144]	; 31da0 <clean_resv_nick+0xb0>
   31d0c:	ldr	ip, [pc, ip]
   31d10:	ldrb	r2, [ip, r2, lsl #2]
   31d14:	tst	r2, #16
   31d18:	bne	31d8c <clean_resv_nick+0x9c>
   31d1c:	mov	lr, #0
   31d20:	mov	r3, #0
   31d24:	b	31d2c <clean_resv_nick+0x3c>
   31d28:	add	lr, lr, #1
   31d2c:	add	r0, r0, #1
   31d30:	ldrb	r2, [r0, #-1]
   31d34:	cmp	r2, #62	; 0x3e
   31d38:	ble	31d4c <clean_resv_nick+0x5c>
   31d3c:	sub	r1, r2, #63	; 0x3f
   31d40:	cmp	r1, #1
   31d44:	bls	31d2c <clean_resv_nick+0x3c>
   31d48:	b	31d64 <clean_resv_nick+0x74>
   31d4c:	cmp	r2, #35	; 0x23
   31d50:	beq	31d2c <clean_resv_nick+0x3c>
   31d54:	cmp	r2, #0
   31d58:	beq	31d78 <clean_resv_nick+0x88>
   31d5c:	cmp	r2, #42	; 0x2a
   31d60:	beq	31d28 <clean_resv_nick+0x38>
   31d64:	ldrb	r1, [ip, r2, lsl #2]
   31d68:	tst	r1, #64	; 0x40
   31d6c:	beq	31d94 <clean_resv_nick+0xa4>
   31d70:	add	r3, r3, #1
   31d74:	b	31d2c <clean_resv_nick+0x3c>
   31d78:	cmp	r3, #0
   31d7c:	movwne	r3, #1
   31d80:	clz	r0, lr
   31d84:	lsr	r0, r0, #5
   31d88:	orr	r1, r0, r3
   31d8c:	mov	r0, r1
   31d90:	pop	{fp, pc}
   31d94:	mov	r1, #0
   31d98:	mov	r0, r1
   31d9c:	pop	{fp, pc}
   31da0:	.word	0x00028cec

00031da4 <valid_wild_card_simple>:
   31da4:	push	{r4, r5, fp, lr}
   31da8:	add	fp, sp, #8
   31dac:	ldrb	r2, [r0]
   31db0:	cmp	r2, #0
   31db4:	beq	31e48 <valid_wild_card_simple+0xa4>
   31db8:	ldr	r1, [pc, #152]	; 31e58 <valid_wild_card_simple+0xb4>
   31dbc:	ldr	r1, [pc, r1]
   31dc0:	ldr	lr, [r1, #240]	; 0xf0
   31dc4:	mov	r1, #0
   31dc8:	ldr	ip, [pc, #140]	; 31e5c <valid_wild_card_simple+0xb8>
   31dcc:	ldr	ip, [pc, ip]
   31dd0:	mov	r3, #0
   31dd4:	uxtb	r4, r2
   31dd8:	add	r2, r0, #1
   31ddc:	cmp	r4, #92	; 0x5c
   31de0:	bne	31e08 <valid_wild_card_simple+0x64>
   31de4:	ldrb	r5, [r2]
   31de8:	cmp	r5, #0
   31dec:	beq	31e08 <valid_wild_card_simple+0x64>
   31df0:	add	r3, r3, #1
   31df4:	cmp	r3, lr
   31df8:	movge	r0, #1
   31dfc:	popge	{r4, r5, fp, pc}
   31e00:	add	r0, r0, #2
   31e04:	b	31e38 <valid_wild_card_simple+0x94>
   31e08:	add	r0, ip, r4, lsl #2
   31e0c:	ldrb	r0, [r0, #1]
   31e10:	tst	r0, #128	; 0x80
   31e14:	bne	31e30 <valid_wild_card_simple+0x8c>
   31e18:	add	r3, r3, #1
   31e1c:	cmp	r3, lr
   31e20:	mov	r0, r2
   31e24:	movge	r0, #1
   31e28:	popge	{r4, r5, fp, pc}
   31e2c:	b	31e38 <valid_wild_card_simple+0x94>
   31e30:	add	r1, r1, #1
   31e34:	mov	r0, r2
   31e38:	ldrb	r2, [r0]
   31e3c:	cmp	r2, #0
   31e40:	bne	31dd4 <valid_wild_card_simple+0x30>
   31e44:	b	31e4c <valid_wild_card_simple+0xa8>
   31e48:	mov	r1, #0
   31e4c:	clz	r0, r1
   31e50:	lsr	r0, r0, #5
   31e54:	pop	{r4, r5, fp, pc}
   31e58:	.word	0x00028dc0
   31e5c:	.word	0x00028c2c

00031e60 <valid_temp_time>:
   31e60:	ldrb	r3, [r0]
   31e64:	cmp	r3, #0
   31e68:	beq	31ebc <valid_temp_time+0x5c>
   31e6c:	add	r1, r0, #1
   31e70:	mov	r0, #0
   31e74:	ldr	ip, [pc, #84]	; 31ed0 <valid_temp_time+0x70>
   31e78:	ldr	ip, [pc, ip]
   31e7c:	uxtb	r3, r3
   31e80:	ldrb	r2, [ip, r3, lsl #2]
   31e84:	tst	r2, #16
   31e88:	mvneq	r0, #0
   31e8c:	bxeq	lr
   31e90:	add	r0, r0, r0, lsl #2
   31e94:	and	r2, r3, #15
   31e98:	add	r0, r2, r0, lsl #1
   31e9c:	ldrb	r3, [r1], #1
   31ea0:	cmp	r3, #0
   31ea4:	bne	31e7c <valid_temp_time+0x1c>
   31ea8:	movw	r1, #65408	; 0xff80
   31eac:	movt	r1, #7
   31eb0:	cmp	r0, r1
   31eb4:	movlt	r1, r0
   31eb8:	b	31ec4 <valid_temp_time+0x64>
   31ebc:	mov	r0, #0
   31ec0:	mov	r1, r0
   31ec4:	rsb	r0, r1, r1, lsl #4
   31ec8:	lsl	r0, r0, #2
   31ecc:	bx	lr
   31ed0:	.word	0x00028b80

00031ed4 <get_nd_count>:
   31ed4:	ldr	r0, [pc, #8]	; 31ee4 <get_nd_count+0x10>
   31ed8:	ldr	r0, [pc, r0]
   31edc:	ldr	r0, [r0, #8]
   31ee0:	bx	lr
   31ee4:	.word	0x00028b0c

00031ee8 <add_nd_entry>:
   31ee8:	push	{r4, r5, r6, sl, fp, lr}
   31eec:	add	fp, sp, #16
   31ef0:	mov	r4, r0
   31ef4:	ldr	r6, [pc, #104]	; 31f64 <add_nd_entry+0x7c>
   31ef8:	ldr	r6, [pc, r6]
   31efc:	ldr	r0, [r6]
   31f00:	mov	r1, r4
   31f04:	bl	d5d4 <rb_dictionary_find@plt>
   31f08:	cmp	r0, #0
   31f0c:	popne	{r4, r5, r6, sl, fp, pc}
   31f10:	ldr	r0, [pc, #80]	; 31f68 <add_nd_entry+0x80>
   31f14:	ldr	r0, [pc, r0]
   31f18:	bl	de20 <rb_bh_alloc@plt>
   31f1c:	mov	r5, r0
   31f20:	mov	r1, r4
   31f24:	mov	r2, #33	; 0x21
   31f28:	bl	e510 <rb_strlcpy@plt>
   31f2c:	bl	d07c <rb_current_time@plt>
   31f30:	ldr	r1, [pc, #52]	; 31f6c <add_nd_entry+0x84>
   31f34:	ldr	r1, [pc, r1]
   31f38:	ldr	r1, [r1, #136]	; 0x88
   31f3c:	add	r0, r1, r0
   31f40:	str	r0, [r5, #36]	; 0x24
   31f44:	add	r1, r5, #40	; 0x28
   31f48:	mov	r0, r5
   31f4c:	bl	31f70 <rb_dlinkAddTail>
   31f50:	ldr	r0, [r6]
   31f54:	mov	r1, r5
   31f58:	mov	r2, r5
   31f5c:	pop	{r4, r5, r6, sl, fp, lr}
   31f60:	b	d70c <rb_dictionary_add@plt>
   31f64:	.word	0x00028a44
   31f68:	.word	0x00039034
   31f6c:	.word	0x00028c48

00031f70 <rb_dlinkAddTail>:
   31f70:	push	{fp, lr}
   31f74:	mov	fp, sp
   31f78:	cmp	r1, #0
   31f7c:	beq	31fe0 <rb_dlinkAddTail+0x70>
   31f80:	cmp	r0, #0
   31f84:	beq	32000 <rb_dlinkAddTail+0x90>
   31f88:	mov	r2, #0
   31f8c:	str	r2, [r1, #8]
   31f90:	str	r0, [r1]
   31f94:	ldr	r0, [pc, #132]	; 32020 <rb_dlinkAddTail+0xb0>
   31f98:	ldr	r0, [pc, r0]
   31f9c:	ldr	r2, [r0, #4]
   31fa0:	str	r2, [r1, #4]
   31fa4:	ldr	r2, [r0, #4]
   31fa8:	cmp	r2, #0
   31fac:	beq	31fbc <rb_dlinkAddTail+0x4c>
   31fb0:	add	r2, r2, #8
   31fb4:	str	r1, [r2]
   31fb8:	b	31fcc <rb_dlinkAddTail+0x5c>
   31fbc:	ldr	r2, [r0]
   31fc0:	cmp	r2, #0
   31fc4:	mov	r2, r0
   31fc8:	streq	r1, [r2]
   31fcc:	str	r1, [r0, #4]
   31fd0:	ldr	r1, [r0, #8]
   31fd4:	add	r1, r1, #1
   31fd8:	str	r1, [r0, #8]
   31fdc:	pop	{fp, pc}
   31fe0:	ldr	r0, [pc, #60]	; 32024 <rb_dlinkAddTail+0xb4>
   31fe4:	add	r0, pc, r0
   31fe8:	ldr	r1, [pc, #56]	; 32028 <rb_dlinkAddTail+0xb8>
   31fec:	add	r1, pc, r1
   31ff0:	ldr	r3, [pc, #52]	; 3202c <rb_dlinkAddTail+0xbc>
   31ff4:	add	r3, pc, r3
   31ff8:	mov	r2, #211	; 0xd3
   31ffc:	bl	e7e0 <__assert_fail@plt>
   32000:	ldr	r0, [pc, #40]	; 32030 <rb_dlinkAddTail+0xc0>
   32004:	add	r0, pc, r0
   32008:	ldr	r1, [pc, #36]	; 32034 <rb_dlinkAddTail+0xc4>
   3200c:	add	r1, pc, r1
   32010:	ldr	r3, [pc, #32]	; 32038 <rb_dlinkAddTail+0xc8>
   32014:	add	r3, pc, r3
   32018:	mov	r2, #213	; 0xd5
   3201c:	bl	e7e0 <__assert_fail@plt>
   32020:	.word	0x00028a4c
   32024:	.word	0x0000e5c8
   32028:	.word	0x0000e5ca
   3202c:	.word	0x0000e5de
   32030:	.word	0x0000e60d
   32034:	.word	0x0000e5aa
   32038:	.word	0x0000e5be

0003203c <free_nd_entry>:
   3203c:	push	{r4, sl, fp, lr}
   32040:	add	fp, sp, #8
   32044:	mov	r4, r0
   32048:	ldr	r0, [pc, #48]	; 32080 <free_nd_entry+0x44>
   3204c:	ldr	r0, [pc, r0]
   32050:	ldr	r0, [r0]
   32054:	mov	r1, r4
   32058:	bl	d838 <rb_dictionary_delete@plt>
   3205c:	add	r0, r4, #40	; 0x28
   32060:	ldr	r1, [pc, #28]	; 32084 <free_nd_entry+0x48>
   32064:	ldr	r1, [pc, r1]
   32068:	bl	310a4 <rb_dlinkDelete>
   3206c:	ldr	r0, [pc, #20]	; 32088 <free_nd_entry+0x4c>
   32070:	ldr	r0, [pc, r0]
   32074:	mov	r1, r4
   32078:	pop	{r4, sl, fp, lr}
   3207c:	b	e708 <rb_bh_free@plt>
   32080:	.word	0x000288f0
   32084:	.word	0x00028980
   32088:	.word	0x00038ed8

0003208c <add_tgchange>:
   3208c:	push	{r4, r5, fp, lr}
   32090:	add	fp, sp, #8
   32094:	mov	r4, r0
   32098:	bl	e768 <find_tgchange@plt>
   3209c:	cmp	r0, #0
   320a0:	popne	{r4, r5, fp, pc}
   320a4:	mov	r0, #24
   320a8:	bl	31398 <rb_malloc>
   320ac:	mov	r5, r0
   320b0:	ldr	r0, [pc, #64]	; 320f8 <add_tgchange+0x6c>
   320b4:	ldr	r0, [pc, r0]
   320b8:	ldr	r0, [r0]
   320bc:	mov	r1, r4
   320c0:	bl	e198 <make_and_lookup@plt>
   320c4:	str	r5, [r0, #20]
   320c8:	str	r0, [r5, #8]
   320cc:	mov	r0, r4
   320d0:	bl	31854 <rb_strdup>
   320d4:	str	r0, [r5]
   320d8:	bl	d07c <rb_current_time@plt>
   320dc:	movw	r1, #43200	; 0xa8c0
   320e0:	add	r0, r0, r1
   320e4:	str	r0, [r5, #4]
   320e8:	add	r1, r5, #12
   320ec:	mov	r0, r5
   320f0:	pop	{r4, r5, fp, lr}
   320f4:	b	3212c <rb_dlinkAdd>
   320f8:	.word	0x000288f8

000320fc <find_tgchange>:
   320fc:	push	{fp, lr}
   32100:	mov	fp, sp
   32104:	mov	r1, r0
   32108:	ldr	r0, [pc, #24]	; 32128 <find_tgchange+0x2c>
   3210c:	ldr	r0, [pc, r0]
   32110:	ldr	r0, [r0]
   32114:	bl	db2c <rb_match_exact_string@plt>
   32118:	cmp	r0, #0
   3211c:	ldrne	r0, [r0, #20]
   32120:	moveq	r0, #0
   32124:	pop	{fp, pc}
   32128:	.word	0x000288a0

0003212c <rb_dlinkAdd>:
   3212c:	push	{fp, lr}
   32130:	mov	fp, sp
   32134:	cmp	r0, #0
   32138:	beq	32194 <rb_dlinkAdd+0x68>
   3213c:	cmp	r1, #0
   32140:	beq	321b4 <rb_dlinkAdd+0x88>
   32144:	mov	r2, #0
   32148:	stm	r1, {r0, r2}
   3214c:	ldr	r0, [pc, #128]	; 321d4 <rb_dlinkAdd+0xa8>
   32150:	ldr	r0, [pc, r0]
   32154:	ldr	r2, [r0]
   32158:	str	r2, [r1, #8]
   3215c:	cmp	r2, #0
   32160:	beq	32170 <rb_dlinkAdd+0x44>
   32164:	add	r2, r2, #4
   32168:	str	r1, [r2]
   3216c:	b	32180 <rb_dlinkAdd+0x54>
   32170:	mov	r2, r0
   32174:	ldr	r3, [r2, #4]!
   32178:	cmp	r3, #0
   3217c:	streq	r1, [r2]
   32180:	str	r1, [r0]
   32184:	ldr	r1, [r0, #8]
   32188:	add	r1, r1, #1
   3218c:	str	r1, [r0, #8]
   32190:	pop	{fp, pc}
   32194:	ldr	r0, [pc, #60]	; 321d8 <rb_dlinkAdd+0xac>
   32198:	add	r0, pc, r0
   3219c:	ldr	r1, [pc, #56]	; 321dc <rb_dlinkAdd+0xb0>
   321a0:	add	r1, pc, r1
   321a4:	ldr	r3, [pc, #52]	; 321e0 <rb_dlinkAdd+0xb4>
   321a8:	add	r3, pc, r3
   321ac:	mov	r2, #143	; 0x8f
   321b0:	bl	e7e0 <__assert_fail@plt>
   321b4:	ldr	r0, [pc, #40]	; 321e4 <rb_dlinkAdd+0xb8>
   321b8:	add	r0, pc, r0
   321bc:	ldr	r1, [pc, #36]	; 321e8 <rb_dlinkAdd+0xbc>
   321c0:	add	r1, pc, r1
   321c4:	ldr	r3, [pc, #32]	; 321ec <rb_dlinkAdd+0xc0>
   321c8:	add	r3, pc, r3
   321cc:	mov	r2, #144	; 0x90
   321d0:	bl	e7e0 <__assert_fail@plt>
   321d4:	.word	0x00028758
   321d8:	.word	0x0000e479
   321dc:	.word	0x0000e416
   321e0:	.word	0x0000e476
   321e4:	.word	0x0000e3f4
   321e8:	.word	0x0000e3f6
   321ec:	.word	0x0000e456

000321f0 <init_builtin_capabs>:
   321f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   321f4:	add	fp, sp, #24
   321f8:	ldr	r0, [pc, #972]	; 325cc <init_builtin_capabs+0x3dc>
   321fc:	add	r0, pc, r0
   32200:	bl	d4cc <capability_index_create@plt>
   32204:	ldr	r4, [pc, #964]	; 325d0 <init_builtin_capabs+0x3e0>
   32208:	ldr	r4, [pc, r4]
   3220c:	str	r0, [r4]
   32210:	bl	d31c <capability_put_anonymous@plt>
   32214:	ldr	r1, [pc, #952]	; 325d4 <init_builtin_capabs+0x3e4>
   32218:	ldr	r1, [pc, r1]
   3221c:	str	r0, [r1]
   32220:	ldr	r0, [r4]
   32224:	bl	d31c <capability_put_anonymous@plt>
   32228:	ldr	r1, [pc, #936]	; 325d8 <init_builtin_capabs+0x3e8>
   3222c:	ldr	r1, [pc, r1]
   32230:	str	r0, [r1]
   32234:	ldr	r0, [r4]
   32238:	ldr	r8, [pc, #924]	; 325dc <init_builtin_capabs+0x3ec>
   3223c:	add	r8, pc, r8
   32240:	mov	r1, r8
   32244:	mov	r2, #0
   32248:	bl	de14 <capability_put@plt>
   3224c:	ldr	r1, [pc, #908]	; 325e0 <init_builtin_capabs+0x3f0>
   32250:	ldr	r1, [pc, r1]
   32254:	str	r0, [r1]
   32258:	ldr	r0, [r4]
   3225c:	ldr	r5, [pc, #896]	; 325e4 <init_builtin_capabs+0x3f4>
   32260:	add	r5, pc, r5
   32264:	mov	r1, r5
   32268:	mov	r2, #0
   3226c:	bl	de14 <capability_put@plt>
   32270:	ldr	r1, [pc, #880]	; 325e8 <init_builtin_capabs+0x3f8>
   32274:	ldr	r1, [pc, r1]
   32278:	str	r0, [r1]
   3227c:	ldr	r0, [r4]
   32280:	ldr	r1, [pc, #868]	; 325ec <init_builtin_capabs+0x3fc>
   32284:	add	r1, pc, r1
   32288:	mov	r2, #0
   3228c:	bl	de14 <capability_put@plt>
   32290:	ldr	r1, [pc, #856]	; 325f0 <init_builtin_capabs+0x400>
   32294:	ldr	r1, [pc, r1]
   32298:	str	r0, [r1]
   3229c:	ldr	r0, [r4]
   322a0:	ldr	r6, [pc, #844]	; 325f4 <init_builtin_capabs+0x404>
   322a4:	add	r6, pc, r6
   322a8:	mov	r1, r6
   322ac:	mov	r2, #0
   322b0:	bl	de14 <capability_put@plt>
   322b4:	ldr	r1, [pc, #828]	; 325f8 <init_builtin_capabs+0x408>
   322b8:	ldr	r1, [pc, r1]
   322bc:	str	r0, [r1]
   322c0:	ldr	r0, [r4]
   322c4:	ldr	r1, [pc, #816]	; 325fc <init_builtin_capabs+0x40c>
   322c8:	add	r1, pc, r1
   322cc:	mov	r2, #0
   322d0:	bl	de14 <capability_put@plt>
   322d4:	ldr	r1, [pc, #804]	; 32600 <init_builtin_capabs+0x410>
   322d8:	ldr	r1, [pc, r1]
   322dc:	str	r0, [r1]
   322e0:	ldr	r0, [r4]
   322e4:	ldr	r1, [pc, #792]	; 32604 <init_builtin_capabs+0x414>
   322e8:	add	r1, pc, r1
   322ec:	mov	r2, #0
   322f0:	bl	de14 <capability_put@plt>
   322f4:	ldr	r1, [pc, #780]	; 32608 <init_builtin_capabs+0x418>
   322f8:	ldr	r1, [pc, r1]
   322fc:	str	r0, [r1]
   32300:	ldr	r0, [r4]
   32304:	ldr	r1, [pc, #768]	; 3260c <init_builtin_capabs+0x41c>
   32308:	add	r1, pc, r1
   3230c:	mov	r2, #0
   32310:	bl	de14 <capability_put@plt>
   32314:	ldr	r1, [pc, #756]	; 32610 <init_builtin_capabs+0x420>
   32318:	ldr	r1, [pc, r1]
   3231c:	str	r0, [r1]
   32320:	ldr	r0, [r4]
   32324:	ldr	r1, [pc, #744]	; 32614 <init_builtin_capabs+0x424>
   32328:	add	r1, pc, r1
   3232c:	mov	r2, #0
   32330:	bl	de14 <capability_put@plt>
   32334:	ldr	r1, [pc, #732]	; 32618 <init_builtin_capabs+0x428>
   32338:	ldr	r1, [pc, r1]
   3233c:	str	r0, [r1]
   32340:	ldr	r0, [r4]
   32344:	ldr	r1, [pc, #720]	; 3261c <init_builtin_capabs+0x42c>
   32348:	add	r1, pc, r1
   3234c:	mov	r2, #0
   32350:	bl	de14 <capability_put@plt>
   32354:	ldr	r1, [pc, #708]	; 32620 <init_builtin_capabs+0x430>
   32358:	ldr	r1, [pc, r1]
   3235c:	str	r0, [r1]
   32360:	ldr	r0, [r4]
   32364:	ldr	r1, [pc, #696]	; 32624 <init_builtin_capabs+0x434>
   32368:	add	r1, pc, r1
   3236c:	mov	r2, #0
   32370:	bl	de14 <capability_put@plt>
   32374:	ldr	r1, [pc, #684]	; 32628 <init_builtin_capabs+0x438>
   32378:	ldr	r1, [pc, r1]
   3237c:	str	r0, [r1]
   32380:	ldr	r0, [r4]
   32384:	ldr	r7, [pc, #672]	; 3262c <init_builtin_capabs+0x43c>
   32388:	add	r7, pc, r7
   3238c:	mov	r1, r7
   32390:	mov	r2, #0
   32394:	bl	de14 <capability_put@plt>
   32398:	ldr	r1, [pc, #656]	; 32630 <init_builtin_capabs+0x440>
   3239c:	ldr	r1, [pc, r1]
   323a0:	str	r0, [r1]
   323a4:	ldr	r0, [r4]
   323a8:	ldr	r1, [pc, #644]	; 32634 <init_builtin_capabs+0x444>
   323ac:	add	r1, pc, r1
   323b0:	mov	r2, #0
   323b4:	bl	de14 <capability_put@plt>
   323b8:	ldr	r1, [pc, #632]	; 32638 <init_builtin_capabs+0x448>
   323bc:	ldr	r1, [pc, r1]
   323c0:	str	r0, [r1]
   323c4:	ldr	r0, [r4]
   323c8:	ldr	r1, [pc, #620]	; 3263c <init_builtin_capabs+0x44c>
   323cc:	add	r1, pc, r1
   323d0:	mov	r2, #0
   323d4:	bl	de14 <capability_put@plt>
   323d8:	ldr	r1, [pc, #608]	; 32640 <init_builtin_capabs+0x450>
   323dc:	ldr	r1, [pc, r1]
   323e0:	str	r0, [r1]
   323e4:	ldr	r0, [r4]
   323e8:	ldr	r1, [pc, #596]	; 32644 <init_builtin_capabs+0x454>
   323ec:	add	r1, pc, r1
   323f0:	mov	r2, #0
   323f4:	bl	de14 <capability_put@plt>
   323f8:	ldr	r1, [pc, #584]	; 32648 <init_builtin_capabs+0x458>
   323fc:	ldr	r1, [pc, r1]
   32400:	str	r0, [r1]
   32404:	ldr	r0, [r4]
   32408:	ldr	r1, [pc, #572]	; 3264c <init_builtin_capabs+0x45c>
   3240c:	add	r1, pc, r1
   32410:	mov	r2, #0
   32414:	bl	de14 <capability_put@plt>
   32418:	ldr	r1, [pc, #560]	; 32650 <init_builtin_capabs+0x460>
   3241c:	ldr	r1, [pc, r1]
   32420:	str	r0, [r1]
   32424:	ldr	r0, [r4]
   32428:	ldr	r1, [pc, #548]	; 32654 <init_builtin_capabs+0x464>
   3242c:	add	r1, pc, r1
   32430:	mov	r2, #0
   32434:	bl	de14 <capability_put@plt>
   32438:	ldr	r1, [pc, #536]	; 32658 <init_builtin_capabs+0x468>
   3243c:	ldr	r1, [pc, r1]
   32440:	str	r0, [r1]
   32444:	ldr	r0, [r4]
   32448:	ldr	r1, [pc, #524]	; 3265c <init_builtin_capabs+0x46c>
   3244c:	add	r1, pc, r1
   32450:	mov	r2, #0
   32454:	bl	de14 <capability_put@plt>
   32458:	ldr	r1, [pc, #512]	; 32660 <init_builtin_capabs+0x470>
   3245c:	ldr	r1, [pc, r1]
   32460:	str	r0, [r1]
   32464:	ldr	r0, [r4]
   32468:	ldr	r1, [pc, #500]	; 32664 <init_builtin_capabs+0x474>
   3246c:	add	r1, pc, r1
   32470:	mov	r2, #0
   32474:	bl	de14 <capability_put@plt>
   32478:	ldr	r1, [pc, #488]	; 32668 <init_builtin_capabs+0x478>
   3247c:	ldr	r1, [pc, r1]
   32480:	str	r0, [r1]
   32484:	ldr	r0, [r4]
   32488:	mov	r1, r8
   3248c:	bl	e21c <capability_require@plt>
   32490:	ldr	r0, [r4]
   32494:	mov	r1, r5
   32498:	bl	e21c <capability_require@plt>
   3249c:	ldr	r0, [r4]
   324a0:	mov	r1, r6
   324a4:	bl	e21c <capability_require@plt>
   324a8:	ldr	r0, [r4]
   324ac:	mov	r1, r7
   324b0:	bl	e21c <capability_require@plt>
   324b4:	ldr	r0, [pc, #432]	; 3266c <init_builtin_capabs+0x47c>
   324b8:	add	r0, pc, r0
   324bc:	bl	d4cc <capability_index_create@plt>
   324c0:	ldr	r4, [pc, #424]	; 32670 <init_builtin_capabs+0x480>
   324c4:	ldr	r4, [pc, r4]
   324c8:	str	r0, [r4]
   324cc:	ldr	r1, [pc, #416]	; 32674 <init_builtin_capabs+0x484>
   324d0:	add	r1, pc, r1
   324d4:	mov	r2, #0
   324d8:	bl	de14 <capability_put@plt>
   324dc:	ldr	r1, [pc, #404]	; 32678 <init_builtin_capabs+0x488>
   324e0:	ldr	r1, [pc, r1]
   324e4:	str	r0, [r1]
   324e8:	ldr	r0, [r4]
   324ec:	ldr	r1, [pc, #392]	; 3267c <init_builtin_capabs+0x48c>
   324f0:	add	r1, pc, r1
   324f4:	mov	r2, #0
   324f8:	bl	de14 <capability_put@plt>
   324fc:	ldr	r1, [pc, #380]	; 32680 <init_builtin_capabs+0x490>
   32500:	ldr	r1, [pc, r1]
   32504:	str	r0, [r1]
   32508:	ldr	r0, [r4]
   3250c:	ldr	r1, [pc, #368]	; 32684 <init_builtin_capabs+0x494>
   32510:	add	r1, pc, r1
   32514:	mov	r2, #0
   32518:	bl	de14 <capability_put@plt>
   3251c:	ldr	r1, [pc, #356]	; 32688 <init_builtin_capabs+0x498>
   32520:	ldr	r1, [pc, r1]
   32524:	str	r0, [r1]
   32528:	ldr	r0, [r4]
   3252c:	ldr	r1, [pc, #344]	; 3268c <init_builtin_capabs+0x49c>
   32530:	add	r1, pc, r1
   32534:	mov	r2, #0
   32538:	bl	de14 <capability_put@plt>
   3253c:	ldr	r1, [pc, #332]	; 32690 <init_builtin_capabs+0x4a0>
   32540:	ldr	r1, [pc, r1]
   32544:	str	r0, [r1]
   32548:	ldr	r0, [r4]
   3254c:	ldr	r1, [pc, #320]	; 32694 <init_builtin_capabs+0x4a4>
   32550:	add	r1, pc, r1
   32554:	mov	r2, #0
   32558:	bl	de14 <capability_put@plt>
   3255c:	ldr	r1, [pc, #308]	; 32698 <init_builtin_capabs+0x4a8>
   32560:	ldr	r1, [pc, r1]
   32564:	str	r0, [r1]
   32568:	ldr	r0, [r4]
   3256c:	ldr	r1, [pc, #296]	; 3269c <init_builtin_capabs+0x4ac>
   32570:	add	r1, pc, r1
   32574:	mov	r2, #0
   32578:	bl	de14 <capability_put@plt>
   3257c:	ldr	r1, [pc, #284]	; 326a0 <init_builtin_capabs+0x4b0>
   32580:	ldr	r1, [pc, r1]
   32584:	str	r0, [r1]
   32588:	ldr	r0, [r4]
   3258c:	ldr	r1, [pc, #272]	; 326a4 <init_builtin_capabs+0x4b4>
   32590:	add	r1, pc, r1
   32594:	mov	r2, #0
   32598:	bl	de14 <capability_put@plt>
   3259c:	ldr	r1, [pc, #260]	; 326a8 <init_builtin_capabs+0x4b8>
   325a0:	ldr	r1, [pc, r1]
   325a4:	str	r0, [r1]
   325a8:	ldr	r0, [r4]
   325ac:	ldr	r1, [pc, #248]	; 326ac <init_builtin_capabs+0x4bc>
   325b0:	add	r1, pc, r1
   325b4:	mov	r2, #0
   325b8:	bl	de14 <capability_put@plt>
   325bc:	ldr	r1, [pc, #236]	; 326b0 <init_builtin_capabs+0x4c0>
   325c0:	ldr	r1, [pc, r1]
   325c4:	str	r0, [r1]
   325c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   325cc:	.word	0x00013ddf
   325d0:	.word	0x00028678
   325d4:	.word	0x0002864c
   325d8:	.word	0x000286fc
   325dc:	.word	0x00013db3
   325e0:	.word	0x00028804
   325e4:	.word	0x0001569e
   325e8:	.word	0x00028808
   325ec:	.word	0x00013d6e
   325f0:	.word	0x000286d0
   325f4:	.word	0x00013d52
   325f8:	.word	0x000287bc
   325fc:	.word	0x00013d40
   32600:	.word	0x0002875c
   32604:	.word	0x00013d11
   32608:	.word	0x000287dc
   3260c:	.word	0x00013cf7
   32610:	.word	0x000285cc
   32614:	.word	0x00013cdb
   32618:	.word	0x000285dc
   3261c:	.word	0x00013cbe
   32620:	.word	0x00028530
   32624:	.word	0x00013ca4
   32628:	.word	0x00028564
   3262c:	.word	0x00013c8c
   32630:	.word	0x000287d8
   32634:	.word	0x00013c6e
   32638:	.word	0x0002848c
   3263c:	.word	0x00013c57
   32640:	.word	0x000284e0
   32644:	.word	0x00013c3d
   32648:	.word	0x00028508
   3264c:	.word	0x00013c22
   32650:	.word	0x00028604
   32654:	.word	0x00013c07
   32658:	.word	0x0002847c
   3265c:	.word	0x00015534
   32660:	.word	0x000284b4
   32664:	.word	0x00013bce
   32668:	.word	0x00028418
   3266c:	.word	0x00013b88
   32670:	.word	0x0002851c
   32674:	.word	0x00013b84
   32678:	.word	0x00028684
   3267c:	.word	0x00013b71
   32680:	.word	0x000285b8
   32684:	.word	0x00013b60
   32688:	.word	0x000285ac
   3268c:	.word	0x00013b4e
   32690:	.word	0x000284a8
   32694:	.word	0x00013b3a
   32698:	.word	0x000283e0
   3269c:	.word	0x00013b2c
   326a0:	.word	0x00028518
   326a4:	.word	0x00013b17
   326a8:	.word	0x000282b0
   326ac:	.word	0x00013aff
   326b0:	.word	0x00028534

000326b4 <hunt_server>:
   326b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   326b8:	add	fp, sp, #28
   326bc:	sub	sp, sp, #12
   326c0:	mov	r7, #0
   326c4:	ldr	r0, [fp, #8]
   326c8:	cmp	r0, r3
   326cc:	ble	32710 <hunt_server+0x5c>
   326d0:	mov	r4, r3
   326d4:	ldr	sl, [fp, #12]
   326d8:	ldr	r0, [sl, r3, lsl #2]
   326dc:	cmp	r0, #0
   326e0:	beq	32710 <hunt_server+0x5c>
   326e4:	mov	r8, r1
   326e8:	ldrb	r1, [r0]
   326ec:	cmp	r1, #0
   326f0:	beq	32710 <hunt_server+0x5c>
   326f4:	mov	r9, r2
   326f8:	ldr	r5, [pc, #656]	; 32990 <hunt_server+0x2dc>
   326fc:	ldr	r5, [pc, r5]
   32700:	add	r1, r5, #88	; 0x58
   32704:	bl	e114 <match@plt>
   32708:	cmp	r0, #0
   3270c:	beq	3271c <hunt_server+0x68>
   32710:	mov	r0, r7
   32714:	sub	sp, fp, #28
   32718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3271c:	ldr	r6, [sl, r4, lsl #2]
   32720:	add	r1, r5, #396	; 0x18c
   32724:	mov	r0, r6
   32728:	bl	d0c4 <strcmp@plt>
   3272c:	cmp	r0, #0
   32730:	beq	32710 <hunt_server+0x5c>
   32734:	mov	r0, r6
   32738:	bl	dc94 <strlen@plt>
   3273c:	add	r0, r0, #8
   32740:	bic	r0, r0, #7
   32744:	sub	r7, sp, r0
   32748:	mov	sp, r7
   3274c:	mov	r0, r7
   32750:	mov	r1, r6
   32754:	bl	d928 <strcpy@plt>
   32758:	ldrb	r0, [r8, #65]	; 0x41
   3275c:	tst	r0, #32
   32760:	beq	3277c <hunt_server+0xc8>
   32764:	ldrh	r0, [r8, #80]	; 0x50
   32768:	cmp	r0, #64	; 0x40
   3276c:	bne	3277c <hunt_server+0xc8>
   32770:	mov	r0, r7
   32774:	bl	d37c <find_named_client@plt>
   32778:	b	32784 <hunt_server+0xd0>
   3277c:	mov	r0, r7
   32780:	bl	d424 <find_client@plt>
   32784:	mov	r5, r0
   32788:	cmp	r0, #0
   3278c:	beq	327ac <hunt_server+0xf8>
   32790:	ldr	r0, [r8, #36]	; 0x24
   32794:	ldr	r1, [r5, #36]	; 0x24
   32798:	cmp	r1, r0
   3279c:	ldrbeq	r0, [r5, #65]	; 0x41
   327a0:	lsleq	r0, r0, #26
   327a4:	andeq	r5, r5, r0, asr #31
   327a8:	b	327b0 <hunt_server+0xfc>
   327ac:	mov	r5, #0
   327b0:	mov	r0, r7
   327b4:	bl	e108 <collapse@plt>
   327b8:	mov	r0, r7
   327bc:	mov	r1, #63	; 0x3f
   327c0:	bl	dce8 <strchr@plt>
   327c4:	mov	r1, r0
   327c8:	mov	r0, #1
   327cc:	cmp	r1, #0
   327d0:	bne	327e8 <hunt_server+0x134>
   327d4:	mov	r0, r7
   327d8:	mov	r1, #42	; 0x2a
   327dc:	bl	dce8 <strchr@plt>
   327e0:	cmp	r0, #0
   327e4:	movwne	r0, #1
   327e8:	cmp	r5, #0
   327ec:	bne	32838 <hunt_server+0x184>
   327f0:	cmp	r0, #0
   327f4:	beq	32838 <hunt_server+0x184>
   327f8:	ldr	r0, [pc, #404]	; 32994 <hunt_server+0x2e0>
   327fc:	ldr	r0, [pc, r0]
   32800:	ldr	r6, [r0]
   32804:	cmp	r6, #0
   32808:	beq	328b4 <hunt_server+0x200>
   3280c:	ldr	r0, [r6]
   32810:	add	r1, r0, #88	; 0x58
   32814:	mov	r0, r7
   32818:	bl	e114 <match@plt>
   3281c:	cmp	r0, #0
   32820:	bne	32834 <hunt_server+0x180>
   32824:	ldr	r6, [r6, #8]
   32828:	cmp	r6, #0
   3282c:	bne	3280c <hunt_server+0x158>
   32830:	b	32838 <hunt_server+0x184>
   32834:	ldr	r5, [r6]
   32838:	cmp	r5, #0
   3283c:	beq	328b4 <hunt_server+0x200>
   32840:	ldrh	r0, [r5, #80]	; 0x50
   32844:	cmp	r0, #9
   32848:	bcc	328b4 <hunt_server+0x200>
   3284c:	cmp	r0, #16
   32850:	beq	328b4 <hunt_server+0x200>
   32854:	ldrh	r0, [r5, #80]	; 0x50
   32858:	mov	r7, #0
   3285c:	cmp	r0, #4
   32860:	beq	32710 <hunt_server+0x5c>
   32864:	cmp	r0, #64	; 0x40
   32868:	bne	3287c <hunt_server+0x1c8>
   3286c:	ldr	r0, [r5, #64]	; 0x40
   32870:	ands	r0, r0, #8192	; 0x2000
   32874:	mov	r7, #0
   32878:	bne	32710 <hunt_server+0x5c>
   3287c:	ldr	r0, [sl, r4, lsl #2]
   32880:	str	r0, [fp, #-36]	; 0xffffffdc
   32884:	ldr	r0, [r5, #36]	; 0x24
   32888:	ldrh	r1, [r0, #80]	; 0x50
   3288c:	cmp	r1, #32
   32890:	bne	32910 <hunt_server+0x25c>
   32894:	ldrb	r0, [r0, #396]	; 0x18c
   32898:	cmp	r0, #0
   3289c:	beq	32910 <hunt_server+0x25c>
   328a0:	mov	r0, r5
   328a4:	ldrb	r1, [r0, #396]!	; 0x18c
   328a8:	cmp	r1, #0
   328ac:	subeq	r0, r0, #308	; 0x134
   328b0:	b	32914 <hunt_server+0x260>
   328b4:	add	r0, r8, #64	; 0x40
   328b8:	ldrb	r0, [r0, #1]
   328bc:	tst	r0, #32
   328c0:	beq	328d0 <hunt_server+0x21c>
   328c4:	ldrh	r0, [r8, #80]	; 0x50
   328c8:	cmp	r0, #64	; 0x40
   328cc:	beq	328f0 <hunt_server+0x23c>
   328d0:	ldr	r0, [sl, r4, lsl #2]
   328d4:	ldrb	r0, [r0]
   328d8:	ldr	r1, [pc, #184]	; 32998 <hunt_server+0x2e4>
   328dc:	ldr	r1, [pc, r1]
   328e0:	ldrb	r0, [r1, r0, lsl #2]
   328e4:	mvn	r7, #0
   328e8:	tst	r0, #16
   328ec:	bne	32710 <hunt_server+0x5c>
   328f0:	ldr	r3, [sl, r4, lsl #2]
   328f4:	ldr	r2, [pc, #160]	; 3299c <hunt_server+0x2e8>
   328f8:	add	r2, pc, r2
   328fc:	mov	r0, r8
   32900:	movw	r1, #402	; 0x192
   32904:	bl	dc88 <sendto_one_numeric@plt>
   32908:	mvn	r7, #0
   3290c:	b	32710 <hunt_server+0x5c>
   32910:	add	r0, r5, #88	; 0x58
   32914:	str	r0, [sl, r4, lsl #2]
   32918:	ldr	r0, [r5, #36]	; 0x24
   3291c:	ldrh	r1, [r0, #80]	; 0x50
   32920:	cmp	r1, #32
   32924:	bne	32944 <hunt_server+0x290>
   32928:	ldrb	r0, [r0, #396]	; 0x18c
   3292c:	cmp	r0, #0
   32930:	beq	32944 <hunt_server+0x290>
   32934:	ldrb	r0, [r8, #396]!	; 0x18c
   32938:	cmp	r0, #0
   3293c:	subeq	r8, r8, #308	; 0x134
   32940:	b	32948 <hunt_server+0x294>
   32944:	add	r8, r8, #88	; 0x58
   32948:	ldr	r3, [sl, #4]
   3294c:	add	r7, sl, #8
   32950:	ldm	r7, {r0, r1, r2, r7}
   32954:	add	lr, sl, #24
   32958:	ldm	lr, {r6, ip, lr}
   3295c:	sub	sp, sp, #32
   32960:	stm	sp, {r0, r1, r2, r7}
   32964:	add	r0, sp, #16
   32968:	stm	r0, {r6, ip, lr}
   3296c:	mov	r0, r5
   32970:	mov	r1, r9
   32974:	mov	r2, r8
   32978:	bl	d1e4 <sendto_one@plt>
   3297c:	add	sp, sp, #32
   32980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32984:	str	r0, [sl, r4, lsl #2]
   32988:	mov	r7, #1
   3298c:	b	32710 <hunt_server+0x5c>
   32990:	.word	0x0002845c
   32994:	.word	0x0002807c
   32998:	.word	0x0002811c
   3299c:	.word	0x000137c4

000329a0 <try_connections>:
   329a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   329a4:	add	fp, sp, #28
   329a8:	sub	sp, sp, #4
   329ac:	ldr	r0, [pc, #320]	; 32af4 <try_connections+0x154>
   329b0:	ldr	r0, [pc, r0]
   329b4:	ldr	r5, [r0]
   329b8:	cmp	r5, #0
   329bc:	beq	32aec <try_connections+0x14c>
   329c0:	mov	sl, #0
   329c4:	ldr	r4, [pc, #300]	; 32af8 <try_connections+0x158>
   329c8:	ldr	r4, [pc, r4]
   329cc:	mov	r9, #0
   329d0:	mov	r0, #0
   329d4:	str	r0, [sp]
   329d8:	ldr	r8, [r5]
   329dc:	ldr	r0, [r8, #288]	; 0x120
   329e0:	and	r1, r0, #33	; 0x21
   329e4:	cmp	r1, #32
   329e8:	bne	32a74 <try_connections+0xd4>
   329ec:	tst	r0, #64	; 0x40
   329f0:	beq	32a0c <try_connections+0x6c>
   329f4:	ldrb	r0, [r4]
   329f8:	cmp	r0, #0
   329fc:	beq	32a74 <try_connections+0xd4>
   32a00:	bl	deb0 <get_ssld_count@plt>
   32a04:	cmp	r0, #0
   32a08:	beq	32a74 <try_connections+0xd4>
   32a0c:	ldr	r7, [r8, #296]	; 0x128
   32a10:	ldr	r6, [r8, #576]	; 0x240
   32a14:	bl	d07c <rb_current_time@plt>
   32a18:	cmp	r7, r0
   32a1c:	bgt	32a74 <try_connections+0xd4>
   32a20:	mov	r0, r6
   32a24:	bl	d3e8 <get_con_freq@plt>
   32a28:	mov	r7, r0
   32a2c:	bl	d07c <rb_current_time@plt>
   32a30:	add	r0, r0, r7
   32a34:	str	r0, [r8, #296]	; 0x128
   32a38:	ldr	r1, [r8]
   32a3c:	mov	r0, #0
   32a40:	bl	df04 <find_server@plt>
   32a44:	cmp	r0, #0
   32a48:	bne	32a74 <try_connections+0xd4>
   32a4c:	ldr	r0, [r6, #8]
   32a50:	ldr	r1, [r6, #36]	; 0x24
   32a54:	cmp	r1, r0
   32a58:	bge	32a74 <try_connections+0xd4>
   32a5c:	ands	r0, sl, #1
   32a60:	moveq	r9, r8
   32a64:	ldr	r0, [sp]
   32a68:	moveq	r0, r8
   32a6c:	str	r0, [sp]
   32a70:	mov	sl, #1
   32a74:	ldr	r5, [r5, #8]
   32a78:	cmp	r5, #0
   32a7c:	bne	329d8 <try_connections+0x38>
   32a80:	ldr	r0, [pc, #116]	; 32afc <try_connections+0x15c>
   32a84:	ldr	r0, [pc, r0]
   32a88:	ldr	r0, [r0, #4]
   32a8c:	cmp	r0, #0
   32a90:	beq	32aec <try_connections+0x14c>
   32a94:	eor	r0, sl, #1
   32a98:	tst	r0, #1
   32a9c:	bne	32aec <try_connections+0x14c>
   32aa0:	add	r6, r9, #580	; 0x244
   32aa4:	mov	r0, r6
   32aa8:	bl	32b08 <rb_dlinkDelete>
   32aac:	ldr	r2, [pc, #76]	; 32b00 <try_connections+0x160>
   32ab0:	ldr	r2, [pc, r2]
   32ab4:	ldr	r0, [sp]
   32ab8:	mov	r1, r6
   32abc:	bl	32b94 <rb_dlinkAddTail>
   32ac0:	ldr	r3, [r9]
   32ac4:	ldr	r2, [pc, #56]	; 32b04 <try_connections+0x164>
   32ac8:	add	r2, pc, r2
   32acc:	mov	r0, #256	; 0x100
   32ad0:	mov	r1, #0
   32ad4:	bl	d640 <sendto_realops_snomask@plt>
   32ad8:	mov	r0, r9
   32adc:	mov	r1, #0
   32ae0:	sub	sp, fp, #28
   32ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ae8:	b	32c8c <serv_connect>
   32aec:	sub	sp, fp, #28
   32af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32af4:	.word	0x00028130
   32af8:	.word	0x00027f98
   32afc:	.word	0x00027dd4
   32b00:	.word	0x00028030
   32b04:	.word	0x00013607

00032b08 <rb_dlinkDelete>:
   32b08:	cmp	r0, #0
   32b0c:	beq	32b5c <rb_dlinkDelete+0x54>
   32b10:	ldr	ip, [pc, #108]	; 32b84 <rb_dlinkDelete+0x7c>
   32b14:	ldr	ip, [pc, ip]
   32b18:	ldmib	r0, {r2, r3}
   32b1c:	add	r1, r3, #4
   32b20:	cmp	r3, #0
   32b24:	addeq	r1, ip, #4
   32b28:	str	r2, [r1]
   32b2c:	ldmib	r0, {r1, r2}
   32b30:	cmp	r1, #0
   32b34:	mov	r3, ip
   32b38:	addne	r3, r1, #8
   32b3c:	str	r2, [r3]
   32b40:	mov	r1, #0
   32b44:	str	r1, [r0, #4]
   32b48:	str	r1, [r0, #8]
   32b4c:	ldr	r0, [ip, #8]
   32b50:	sub	r0, r0, #1
   32b54:	str	r0, [ip, #8]
   32b58:	bx	lr
   32b5c:	push	{fp, lr}
   32b60:	mov	fp, sp
   32b64:	ldr	r0, [pc, #28]	; 32b88 <rb_dlinkDelete+0x80>
   32b68:	add	r0, pc, r0
   32b6c:	ldr	r1, [pc, #24]	; 32b8c <rb_dlinkDelete+0x84>
   32b70:	add	r1, pc, r1
   32b74:	ldr	r3, [pc, #20]	; 32b90 <rb_dlinkDelete+0x88>
   32b78:	add	r3, pc, r3
   32b7c:	mov	r2, #235	; 0xeb
   32b80:	bl	e7e0 <__assert_fail@plt>
   32b84:	.word	0x00027fcc
   32b88:	.word	0x0000da44
   32b8c:	.word	0x0000da46
   32b90:	.word	0x0000dae1

00032b94 <rb_dlinkAddTail>:
   32b94:	push	{fp, lr}
   32b98:	mov	fp, sp
   32b9c:	cmp	r1, #0
   32ba0:	beq	32c08 <rb_dlinkAddTail+0x74>
   32ba4:	cmp	r2, #0
   32ba8:	beq	32c28 <rb_dlinkAddTail+0x94>
   32bac:	cmp	r0, #0
   32bb0:	beq	32c48 <rb_dlinkAddTail+0xb4>
   32bb4:	mov	r3, #0
   32bb8:	str	r3, [r1, #8]
   32bbc:	str	r0, [r1]
   32bc0:	ldr	r0, [r2, #4]
   32bc4:	str	r0, [r1, #4]
   32bc8:	ldr	r0, [r2, #4]
   32bcc:	cmp	r0, #0
   32bd0:	beq	32be0 <rb_dlinkAddTail+0x4c>
   32bd4:	add	r0, r0, #8
   32bd8:	str	r1, [r0]
   32bdc:	b	32bec <rb_dlinkAddTail+0x58>
   32be0:	ldr	r0, [r2]
   32be4:	cmp	r0, #0
   32be8:	beq	32c00 <rb_dlinkAddTail+0x6c>
   32bec:	str	r1, [r2, #4]
   32bf0:	ldr	r0, [r2, #8]
   32bf4:	add	r0, r0, #1
   32bf8:	str	r0, [r2, #8]
   32bfc:	pop	{fp, pc}
   32c00:	mov	r0, r2
   32c04:	b	32bd8 <rb_dlinkAddTail+0x44>
   32c08:	ldr	r0, [pc, #88]	; 32c68 <rb_dlinkAddTail+0xd4>
   32c0c:	add	r0, pc, r0
   32c10:	ldr	r1, [pc, #84]	; 32c6c <rb_dlinkAddTail+0xd8>
   32c14:	add	r1, pc, r1
   32c18:	ldr	r3, [pc, #80]	; 32c70 <rb_dlinkAddTail+0xdc>
   32c1c:	add	r3, pc, r3
   32c20:	mov	r2, #211	; 0xd3
   32c24:	bl	e7e0 <__assert_fail@plt>
   32c28:	ldr	r0, [pc, #68]	; 32c74 <rb_dlinkAddTail+0xe0>
   32c2c:	add	r0, pc, r0
   32c30:	ldr	r1, [pc, #64]	; 32c78 <rb_dlinkAddTail+0xe4>
   32c34:	add	r1, pc, r1
   32c38:	ldr	r3, [pc, #60]	; 32c7c <rb_dlinkAddTail+0xe8>
   32c3c:	add	r3, pc, r3
   32c40:	mov	r2, #212	; 0xd4
   32c44:	bl	e7e0 <__assert_fail@plt>
   32c48:	ldr	r0, [pc, #48]	; 32c80 <rb_dlinkAddTail+0xec>
   32c4c:	add	r0, pc, r0
   32c50:	ldr	r1, [pc, #44]	; 32c84 <rb_dlinkAddTail+0xf0>
   32c54:	add	r1, pc, r1
   32c58:	ldr	r3, [pc, #40]	; 32c88 <rb_dlinkAddTail+0xf4>
   32c5c:	add	r3, pc, r3
   32c60:	mov	r2, #213	; 0xd5
   32c64:	bl	e7e0 <__assert_fail@plt>
   32c68:	.word	0x0000d9a0
   32c6c:	.word	0x0000d9a2
   32c70:	.word	0x0000d9b6
   32c74:	.word	0x00013219
   32c78:	.word	0x0000d982
   32c7c:	.word	0x0000d996
   32c80:	.word	0x0000d9c5
   32c84:	.word	0x0000d962
   32c88:	.word	0x0000d976

00032c8c <serv_connect>:
   32c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c90:	add	fp, sp, #28
   32c94:	sub	sp, sp, #612	; 0x264
   32c98:	cmp	r0, #0
   32c9c:	beq	32cec <serv_connect+0x60>
   32ca0:	mov	r9, r1
   32ca4:	mov	r8, r0
   32ca8:	sub	r7, fp, #288	; 0x120
   32cac:	mov	r0, #0
   32cb0:	add	r5, sp, #96	; 0x60
   32cb4:	mov	r1, #0
   32cb8:	add	r2, r5, r1
   32cbc:	strh	r0, [r2]
   32cc0:	add	r2, r7, r1
   32cc4:	strh	r0, [r2]
   32cc8:	add	r1, r1, #128	; 0x80
   32ccc:	cmp	r1, #256	; 0x100
   32cd0:	bne	32cb8 <serv_connect+0x2c>
   32cd4:	ldr	r0, [r8, #300]	; 0x12c
   32cd8:	cmp	r0, #0
   32cdc:	beq	32cf4 <serv_connect+0x68>
   32ce0:	cmp	r0, #2
   32ce4:	beq	32d68 <serv_connect+0xdc>
   32ce8:	b	32d5c <serv_connect+0xd0>
   32cec:	mov	r6, #0
   32cf0:	b	3313c <serv_connect+0x4b0>
   32cf4:	mov	r6, r8
   32cf8:	ldrh	r1, [r6, #8]!
   32cfc:	cmp	r1, #2
   32d00:	bne	32d5c <serv_connect+0xd0>
   32d04:	mov	r4, r8
   32d08:	ldrh	r1, [r4, #140]!	; 0x8c
   32d0c:	cmp	r1, #10
   32d10:	bne	32d5c <serv_connect+0xd0>
   32d14:	bl	e0a8 <rand@plt>
   32d18:	tst	r0, #1
   32d1c:	bne	33148 <serv_connect+0x4bc>
   32d20:	mov	r0, r7
   32d24:	mov	r1, r6
   32d28:	mov	r2, #128	; 0x80
   32d2c:	bl	d40c <memcpy@plt>
   32d30:	add	r0, r7, #128	; 0x80
   32d34:	mov	r1, r4
   32d38:	mov	r2, #128	; 0x80
   32d3c:	bl	d40c <memcpy@plt>
   32d40:	add	r1, r8, #308	; 0x134
   32d44:	mov	r0, r5
   32d48:	mov	r2, #128	; 0x80
   32d4c:	bl	d40c <memcpy@plt>
   32d50:	add	r0, r5, #128	; 0x80
   32d54:	add	r1, r8, #440	; 0x1b8
   32d58:	b	32da8 <serv_connect+0x11c>
   32d5c:	ldrh	r1, [r8, #8]
   32d60:	cmp	r1, #2
   32d64:	bne	32d80 <serv_connect+0xf4>
   32d68:	add	r1, r8, #8
   32d6c:	sub	r0, fp, #288	; 0x120
   32d70:	mov	r2, #128	; 0x80
   32d74:	bl	d40c <memcpy@plt>
   32d78:	add	r1, r8, #308	; 0x134
   32d7c:	b	32da4 <serv_connect+0x118>
   32d80:	cmp	r0, #10
   32d84:	ldrhne	r0, [r8, #140]	; 0x8c
   32d88:	cmpne	r0, #10
   32d8c:	bne	32db0 <serv_connect+0x124>
   32d90:	add	r1, r8, #140	; 0x8c
   32d94:	sub	r0, fp, #288	; 0x120
   32d98:	mov	r2, #128	; 0x80
   32d9c:	bl	d40c <memcpy@plt>
   32da0:	add	r1, r8, #440	; 0x1b8
   32da4:	add	r0, sp, #96	; 0x60
   32da8:	mov	r2, #128	; 0x80
   32dac:	bl	d40c <memcpy@plt>
   32db0:	ldr	r4, [pc, #972]	; 33184 <serv_connect+0x4f8>
   32db4:	add	r4, pc, r4
   32db8:	mov	r6, #0
   32dbc:	strb	r6, [r4]
   32dc0:	sub	r0, fp, #288	; 0x120
   32dc4:	mov	r1, r4
   32dc8:	mov	r2, #512	; 0x200
   32dcc:	bl	cf50 <rb_inet_ntop_sock@plt>
   32dd0:	ldr	r2, [r8]
   32dd4:	ldr	r1, [pc, #940]	; 33188 <serv_connect+0x4fc>
   32dd8:	add	r1, pc, r1
   32ddc:	mov	r0, #5
   32de0:	mov	r3, r4
   32de4:	bl	e0b4 <ilog@plt>
   32de8:	ldr	r1, [r8]
   32dec:	mov	r0, #0
   32df0:	bl	df04 <find_server@plt>
   32df4:	cmp	r0, #0
   32df8:	beq	32e64 <serv_connect+0x1d8>
   32dfc:	ldr	r3, [r8]
   32e00:	add	r5, r0, #88	; 0x58
   32e04:	str	r5, [sp]
   32e08:	ldr	r2, [pc, #892]	; 3318c <serv_connect+0x500>
   32e0c:	add	r2, pc, r2
   32e10:	mov	r0, #256	; 0x100
   32e14:	mov	r1, #0
   32e18:	bl	d640 <sendto_realops_snomask@plt>
   32e1c:	cmp	r9, #0
   32e20:	beq	3313c <serv_connect+0x4b0>
   32e24:	ldrh	r0, [r9, #80]	; 0x50
   32e28:	cmp	r0, #64	; 0x40
   32e2c:	bne	3313c <serv_connect+0x4b0>
   32e30:	ldr	r0, [r9, #24]
   32e34:	cmp	r0, #0
   32e38:	beq	3313c <serv_connect+0x4b0>
   32e3c:	ldrb	r0, [r9, #65]	; 0x41
   32e40:	tst	r0, #32
   32e44:	bne	3313c <serv_connect+0x4b0>
   32e48:	ldr	r2, [r8]
   32e4c:	ldr	r1, [pc, #828]	; 33190 <serv_connect+0x504>
   32e50:	add	r1, pc, r1
   32e54:	mov	r0, r9
   32e58:	mov	r3, r5
   32e5c:	bl	e414 <sendto_one_notice@plt>
   32e60:	b	3313c <serv_connect+0x4b0>
   32e64:	ldr	r0, [r8, #576]	; 0x240
   32e68:	ldr	r1, [r0, #8]
   32e6c:	ldr	r2, [r0, #36]	; 0x24
   32e70:	cmp	r2, r1
   32e74:	bge	32f98 <serv_connect+0x30c>
   32e78:	ldrh	r0, [r7]
   32e7c:	cmp	r0, #0
   32e80:	beq	33008 <serv_connect+0x37c>
   32e84:	mov	r6, #0
   32e88:	mov	r1, #1
   32e8c:	mov	r2, #6
   32e90:	mov	r3, #0
   32e94:	bl	d5e0 <rb_socket@plt>
   32e98:	cmp	r0, #0
   32e9c:	beq	33130 <serv_connect+0x4a4>
   32ea0:	mov	r4, r0
   32ea4:	ldr	r3, [r8]
   32ea8:	add	r6, sp, #23
   32eac:	ldr	r2, [pc, #752]	; 331a4 <serv_connect+0x518>
   32eb0:	add	r2, pc, r2
   32eb4:	mov	r0, r6
   32eb8:	mov	r1, #73	; 0x49
   32ebc:	bl	de74 <snprintf@plt>
   32ec0:	mov	r0, r4
   32ec4:	mov	r1, r6
   32ec8:	bl	e270 <rb_note@plt>
   32ecc:	mov	r0, #0
   32ed0:	bl	d4a8 <make_client@plt>
   32ed4:	mov	r6, r0
   32ed8:	ldr	r1, [r8]
   32edc:	add	r0, r0, #88	; 0x58
   32ee0:	mov	r2, #64	; 0x40
   32ee4:	bl	e510 <rb_strlcpy@plt>
   32ee8:	add	r0, r6, #163	; 0xa3
   32eec:	ldr	r1, [r8, #4]
   32ef0:	cmp	r1, #0
   32ef4:	ldreq	r1, [pc, #684]	; 331a8 <serv_connect+0x51c>
   32ef8:	addeq	r1, pc, r1
   32efc:	mov	r2, #64	; 0x40
   32f00:	bl	e510 <rb_strlcpy@plt>
   32f04:	movw	r0, #291	; 0x123
   32f08:	add	r0, r6, r0
   32f0c:	ldr	r1, [pc, #664]	; 331ac <serv_connect+0x520>
   32f10:	add	r1, pc, r1
   32f14:	mov	r2, #54	; 0x36
   32f18:	bl	e510 <rb_strlcpy@plt>
   32f1c:	ldr	r0, [r6, #432]	; 0x1b0
   32f20:	str	r4, [r0, #300]	; 0x12c
   32f24:	mov	r0, #284	; 0x11c
   32f28:	ldrh	r0, [r8, r0]
   32f2c:	bl	349b4 <__bswap_16>
   32f30:	strh	r0, [r7, #2]
   32f34:	strh	r0, [fp, #-158]	; 0xffffff62
   32f38:	mov	r0, r4
   32f3c:	mov	r1, #16384	; 0x4000
   32f40:	bl	e210 <rb_set_buffers@plt>
   32f44:	cmp	r0, #0
   32f48:	bne	32f58 <serv_connect+0x2cc>
   32f4c:	ldr	r0, [pc, #604]	; 331b0 <serv_connect+0x524>
   32f50:	add	r0, pc, r0
   32f54:	bl	d604 <ilog_error@plt>
   32f58:	mov	r0, r6
   32f5c:	mov	r1, r8
   32f60:	bl	e4ec <attach_server_conf@plt>
   32f64:	mov	r0, r6
   32f68:	bl	d5ec <make_server@plt>
   32f6c:	cmp	r9, #0
   32f70:	beq	33014 <serv_connect+0x388>
   32f74:	ldrh	r0, [r9, #80]	; 0x50
   32f78:	cmp	r0, #64	; 0x40
   32f7c:	bne	33014 <serv_connect+0x388>
   32f80:	ldr	r0, [r6, #28]
   32f84:	add	r1, r9, #88	; 0x58
   32f88:	add	r0, r0, #4
   32f8c:	mov	r2, #32
   32f90:	bl	e510 <rb_strlcpy@plt>
   32f94:	b	33034 <serv_connect+0x3a8>
   32f98:	ldr	r3, [r0, #4]
   32f9c:	ldr	r0, [r8]
   32fa0:	str	r0, [sp]
   32fa4:	mov	r6, #0
   32fa8:	ldr	r2, [pc, #484]	; 33194 <serv_connect+0x508>
   32fac:	add	r2, pc, r2
   32fb0:	mov	r0, #256	; 0x100
   32fb4:	mov	r1, #0
   32fb8:	bl	d640 <sendto_realops_snomask@plt>
   32fbc:	cmp	r9, #0
   32fc0:	beq	3313c <serv_connect+0x4b0>
   32fc4:	ldrh	r0, [r9, #80]	; 0x50
   32fc8:	cmp	r0, #64	; 0x40
   32fcc:	bne	3313c <serv_connect+0x4b0>
   32fd0:	ldr	r0, [r9, #24]
   32fd4:	cmp	r0, #0
   32fd8:	beq	3313c <serv_connect+0x4b0>
   32fdc:	ldrb	r0, [r9, #65]	; 0x41
   32fe0:	tst	r0, #32
   32fe4:	bne	3313c <serv_connect+0x4b0>
   32fe8:	ldr	r3, [r8]
   32fec:	ldr	r0, [r8, #576]	; 0x240
   32ff0:	ldr	r2, [r0, #4]
   32ff4:	ldr	r1, [pc, #412]	; 33198 <serv_connect+0x50c>
   32ff8:	add	r1, pc, r1
   32ffc:	mov	r0, r9
   33000:	bl	e414 <sendto_one_notice@plt>
   33004:	b	3313c <serv_connect+0x4b0>
   33008:	ldr	r0, [pc, #396]	; 3319c <serv_connect+0x510>
   3300c:	add	r0, pc, r0
   33010:	b	33138 <serv_connect+0x4ac>
   33014:	ldr	r0, [r6, #28]
   33018:	mov	r1, #46	; 0x2e
   3301c:	ldr	r2, [pc, #400]	; 331b4 <serv_connect+0x528>
   33020:	add	r2, pc, r2
   33024:	vldr	d16, [r2]
   33028:	strh	r1, [r0, #12]
   3302c:	add	r0, r0, #4
   33030:	vst1.8	{d16}, [r0]
   33034:	mov	r4, #0
   33038:	strb	r4, [r6, #82]	; 0x52
   3303c:	mov	r0, #1
   33040:	strh	r0, [r6, #80]	; 0x50
   33044:	ldr	r2, [pc, #364]	; 331b8 <serv_connect+0x52c>
   33048:	ldr	r2, [pc, r2]
   3304c:	mov	r0, r6
   33050:	str	r6, [sp, #8]
   33054:	mov	r1, r6
   33058:	bl	32b94 <rb_dlinkAddTail>
   3305c:	ldr	r0, [pc, #344]	; 331bc <serv_connect+0x530>
   33060:	ldr	r0, [pc, r0]
   33064:	ldrh	sl, [r0, #148]	; 0x94
   33068:	ldrh	r9, [r0, #20]
   3306c:	add	r1, r0, #20
   33070:	str	r1, [sp, #16]
   33074:	add	r0, r0, #148	; 0x94
   33078:	str	r0, [sp, #12]
   3307c:	add	r7, r5, r4
   33080:	ldrh	r0, [r7]
   33084:	cmp	r0, #0
   33088:	bne	330c8 <serv_connect+0x43c>
   3308c:	sub	r0, fp, #288	; 0x120
   33090:	add	r0, r0, r4
   33094:	ldrh	r6, [r0]
   33098:	cmp	r6, r9
   3309c:	bne	330b0 <serv_connect+0x424>
   330a0:	mov	r0, r7
   330a4:	ldr	r1, [sp, #16]
   330a8:	mov	r2, #128	; 0x80
   330ac:	bl	d40c <memcpy@plt>
   330b0:	cmp	r6, sl
   330b4:	bne	330c8 <serv_connect+0x43c>
   330b8:	mov	r0, r7
   330bc:	ldr	r1, [sp, #12]
   330c0:	mov	r2, #128	; 0x80
   330c4:	bl	d40c <memcpy@plt>
   330c8:	add	r4, r4, #128	; 0x80
   330cc:	cmp	r4, #256	; 0x100
   330d0:	bne	3307c <serv_connect+0x3f0>
   330d4:	ldr	r3, [sp, #8]
   330d8:	ldr	r0, [r3, #432]	; 0x1b0
   330dc:	ldr	r0, [r0, #300]	; 0x12c
   330e0:	ldr	r1, [r8, #288]	; 0x120
   330e4:	ldr	r2, [pc, #212]	; 331c0 <serv_connect+0x534>
   330e8:	ldr	r2, [pc, r2]
   330ec:	ldr	r2, [r2, #272]	; 0x110
   330f0:	ldrh	r7, [sp, #96]	; 0x60
   330f4:	str	r3, [sp]
   330f8:	str	r2, [sp, #4]
   330fc:	ldr	r2, [pc, #192]	; 331c4 <serv_connect+0x538>
   33100:	add	r2, pc, r2
   33104:	ldr	r3, [pc, #188]	; 331c8 <serv_connect+0x53c>
   33108:	add	r3, pc, r3
   3310c:	tst	r1, #64	; 0x40
   33110:	moveq	r3, r2
   33114:	cmp	r7, #0
   33118:	moveq	r5, r7
   3311c:	sub	r1, fp, #288	; 0x120
   33120:	mov	r2, r5
   33124:	bl	d2bc <rb_connect_tcp@plt>
   33128:	mov	r6, #1
   3312c:	b	3313c <serv_connect+0x4b0>
   33130:	ldr	r0, [pc, #104]	; 331a0 <serv_connect+0x514>
   33134:	add	r0, pc, r0
   33138:	bl	d604 <ilog_error@plt>
   3313c:	mov	r0, r6
   33140:	sub	sp, fp, #28
   33144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33148:	mov	r0, r7
   3314c:	mov	r1, r4
   33150:	mov	r2, #128	; 0x80
   33154:	bl	d40c <memcpy@plt>
   33158:	add	r0, r7, #128	; 0x80
   3315c:	mov	r1, r6
   33160:	mov	r2, #128	; 0x80
   33164:	bl	d40c <memcpy@plt>
   33168:	add	r1, r8, #440	; 0x1b8
   3316c:	mov	r0, r5
   33170:	mov	r2, #128	; 0x80
   33174:	bl	d40c <memcpy@plt>
   33178:	add	r0, r5, #128	; 0x80
   3317c:	add	r1, r8, #308	; 0x134
   33180:	b	32da8 <serv_connect+0x11c>
   33184:	.word	0x000383a4
   33188:	.word	0x00013473
   3318c:	.word	0x00013455
   33190:	.word	0x00013410
   33194:	.word	0x000132d8
   33198:	.word	0x0001328b
   3319c:	.word	0x000132b0
   331a0:	.word	0x000131aa
   331a4:	.word	0x00013321
   331a8:	.word	0x00038260
   331ac:	.word	0x00038248
   331b0:	.word	0x000133a6
   331b4:	.word	0x000135a8
   331b8:	.word	0x00027a48
   331bc:	.word	0x000278f0
   331c0:	.word	0x00027a94
   331c4:	.word	0x000019b0
   331c8:	.word	0x000018ac

000331cc <check_server>:
   331cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   331d0:	add	fp, sp, #28
   331d4:	sub	sp, sp, #140	; 0x8c
   331d8:	mov	r5, r0
   331dc:	mvn	r0, #0
   331e0:	cmp	r1, #0
   331e4:	beq	333e0 <check_server+0x214>
   331e8:	mov	r4, r1
   331ec:	ldr	r0, [r1, #432]	; 0x1b0
   331f0:	ldr	r0, [r0, #276]	; 0x114
   331f4:	cmp	r0, #0
   331f8:	mvneq	r0, #1
   331fc:	subeq	sp, fp, #28
   33200:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33204:	mov	r0, r5
   33208:	bl	dc94 <strlen@plt>
   3320c:	mov	r1, r0
   33210:	mvn	r0, #3
   33214:	cmp	r1, #63	; 0x3f
   33218:	bhi	333e0 <check_server+0x214>
   3321c:	ldr	r0, [pc, #644]	; 334a8 <check_server+0x2dc>
   33220:	ldr	r0, [pc, r0]
   33224:	ldr	r6, [r0]
   33228:	cmp	r6, #0
   3322c:	mvn	r0, #0
   33230:	beq	333e0 <check_server+0x214>
   33234:	movw	r0, #291	; 0x123
   33238:	add	r0, r4, r0
   3323c:	str	r0, [sp, #8]
   33240:	add	r0, r4, #163	; 0xa3
   33244:	str	r0, [sp, #4]
   33248:	mov	r8, #0
   3324c:	mov	r9, #0
   33250:	mov	sl, #0
   33254:	ldr	r7, [r6]
   33258:	ldrb	r0, [r7, #288]	; 0x120
   3325c:	tst	r0, #1
   33260:	bne	333b0 <check_server+0x1e4>
   33264:	ldr	r0, [r7]
   33268:	mov	r1, r5
   3326c:	bl	e114 <match@plt>
   33270:	cmp	r0, #0
   33274:	beq	333b0 <check_server+0x1e4>
   33278:	ldr	r0, [sp, #8]
   3327c:	add	r1, sp, #12
   33280:	bl	e000 <rb_inet_pton_sock@plt>
   33284:	cmp	r0, #0
   33288:	movle	r0, #0
   3328c:	strhle	r0, [sp, #12]
   33290:	ldr	r0, [r7, #4]
   33294:	cmp	r0, #0
   33298:	beq	332ac <check_server+0xe0>
   3329c:	ldr	r1, [sp, #4]
   332a0:	bl	e114 <match@plt>
   332a4:	cmp	r0, #0
   332a8:	bne	33300 <check_server+0x134>
   332ac:	mov	r1, r7
   332b0:	ldrh	r0, [r1, #8]!
   332b4:	ldrh	r2, [sp, #12]
   332b8:	cmp	r2, r0
   332bc:	bne	332d4 <check_server+0x108>
   332c0:	add	r0, sp, #12
   332c4:	mov	r2, #32
   332c8:	bl	d034 <comp_with_mask_sock@plt>
   332cc:	cmp	r0, #0
   332d0:	bne	33300 <check_server+0x134>
   332d4:	mov	r1, r7
   332d8:	ldrh	r0, [r1, #140]!	; 0x8c
   332dc:	mov	sl, #1
   332e0:	ldrh	r2, [sp, #12]
   332e4:	cmp	r2, r0
   332e8:	bne	333b0 <check_server+0x1e4>
   332ec:	add	r0, sp, #12
   332f0:	mov	r2, #128	; 0x80
   332f4:	bl	d034 <comp_with_mask_sock@plt>
   332f8:	cmp	r0, #0
   332fc:	beq	333b0 <check_server+0x1e4>
   33300:	ldr	r1, [r7, #272]	; 0x110
   33304:	cmp	r1, #0
   33308:	beq	3333c <check_server+0x170>
   3330c:	ldrb	r0, [r7, #288]	; 0x120
   33310:	ldr	r2, [r4, #432]	; 0x1b0
   33314:	ldr	r2, [r2, #276]	; 0x114
   33318:	tst	r0, #4
   3331c:	bne	33370 <check_server+0x1a4>
   33320:	mov	r0, r1
   33324:	mov	r1, r2
   33328:	bl	d0c4 <strcmp@plt>
   3332c:	mov	sl, #1
   33330:	cmp	r0, #0
   33334:	mov	r9, #1
   33338:	bne	333b0 <check_server+0x1e4>
   3333c:	ldr	r0, [r7, #280]	; 0x118
   33340:	cmp	r0, #0
   33344:	beq	333e8 <check_server+0x21c>
   33348:	ldr	r1, [r4, #444]	; 0x1bc
   3334c:	mov	sl, #1
   33350:	cmp	r1, #0
   33354:	beq	333a0 <check_server+0x1d4>
   33358:	bl	d340 <rb_strcasecmp@plt>
   3335c:	cmp	r0, #0
   33360:	mov	r9, #1
   33364:	mov	r8, #1
   33368:	bne	333b0 <check_server+0x1e4>
   3336c:	b	333e8 <check_server+0x21c>
   33370:	mov	r0, r2
   33374:	bl	d988 <rb_crypt@plt>
   33378:	mov	sl, #1
   3337c:	cmp	r0, #0
   33380:	beq	333ac <check_server+0x1e0>
   33384:	mov	r1, r0
   33388:	ldr	r0, [r7, #272]	; 0x110
   3338c:	bl	d0c4 <strcmp@plt>
   33390:	cmp	r0, #0
   33394:	mov	r9, #1
   33398:	bne	333b0 <check_server+0x1e4>
   3339c:	b	333e8 <check_server+0x21c>
   333a0:	mov	r9, #1
   333a4:	mov	r8, #1
   333a8:	b	333b0 <check_server+0x1e4>
   333ac:	mov	r9, #1
   333b0:	ldr	r6, [r6, #8]
   333b4:	cmp	r6, #0
   333b8:	bne	33254 <check_server+0x88>
   333bc:	mvn	r0, #1
   333c0:	tst	r8, #1
   333c4:	mvnne	r0, #5
   333c8:	orr	r1, r9, r8
   333cc:	tst	r1, #1
   333d0:	bne	333e0 <check_server+0x214>
   333d4:	mvn	r0, #0
   333d8:	tst	sl, #1
   333dc:	mvnne	r0, #2
   333e0:	sub	sp, fp, #28
   333e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   333e8:	ldrb	r0, [r7, #288]	; 0x120
   333ec:	tst	r0, #64	; 0x40
   333f0:	beq	3340c <check_server+0x240>
   333f4:	ldr	r0, [r4, #432]	; 0x1b0
   333f8:	ldr	r0, [r0, #436]	; 0x1b4
   333fc:	cmp	r0, #0
   33400:	mvneq	r0, #4
   33404:	subeq	sp, fp, #28
   33408:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3340c:	ldr	r0, [r4, #432]	; 0x1b0
   33410:	ldr	r0, [r0, #136]	; 0x88
   33414:	cmp	r0, #0
   33418:	beq	3342c <check_server+0x260>
   3341c:	ldr	r1, [r7, #576]	; 0x240
   33420:	ldr	r0, [r0, #576]	; 0x240
   33424:	cmp	r0, r1
   33428:	beq	33444 <check_server+0x278>
   3342c:	ldr	r0, [r7, #576]	; 0x240
   33430:	ldr	r1, [r0, #8]
   33434:	ldr	r2, [r0, #36]	; 0x24
   33438:	mvn	r0, #6
   3343c:	cmp	r2, r1
   33440:	bge	333e0 <check_server+0x214>
   33444:	mov	r0, r4
   33448:	mov	r1, r7
   3344c:	bl	e4ec <attach_server_conf@plt>
   33450:	ldr	r1, [r7, #288]	; 0x120
   33454:	tst	r1, #8
   33458:	bne	33478 <check_server+0x2ac>
   3345c:	ldr	r0, [pc, #72]	; 334ac <check_server+0x2e0>
   33460:	ldr	r0, [pc, r0]
   33464:	ldr	r0, [r0]
   33468:	ldr	r2, [r4, #432]	; 0x1b0
   3346c:	ldr	r3, [r2, #296]	; 0x128
   33470:	bic	r0, r3, r0
   33474:	str	r0, [r2, #296]	; 0x128
   33478:	mov	r0, #0
   3347c:	tst	r1, #16
   33480:	bne	333e0 <check_server+0x214>
   33484:	ldr	r1, [pc, #36]	; 334b0 <check_server+0x2e4>
   33488:	ldr	r1, [pc, r1]
   3348c:	ldr	r1, [r1]
   33490:	ldr	r2, [r4, #432]	; 0x1b0
   33494:	ldr	r3, [r2, #296]	; 0x128
   33498:	bic	r1, r3, r1
   3349c:	str	r1, [r2, #296]	; 0x128
   334a0:	sub	sp, fp, #28
   334a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   334a8:	.word	0x000278c0
   334ac:	.word	0x00027484
   334b0:	.word	0x0002748c

000334b4 <send_capabilities>:
   334b4:	push	{r4, sl, fp, lr}
   334b8:	add	fp, sp, #8
   334bc:	mov	r4, r0
   334c0:	ldr	r0, [pc, #32]	; 334e8 <send_capabilities+0x34>
   334c4:	ldr	r0, [pc, r0]
   334c8:	ldr	r0, [r0]
   334cc:	bl	deec <capability_index_list@plt>
   334d0:	mov	r2, r0
   334d4:	ldr	r1, [pc, #16]	; 334ec <send_capabilities+0x38>
   334d8:	add	r1, pc, r1
   334dc:	mov	r0, r4
   334e0:	pop	{r4, sl, fp, lr}
   334e4:	b	d1e4 <sendto_one@plt>
   334e8:	.word	0x000273bc
   334ec:	.word	0x00012c12

000334f0 <show_capabilities>:
   334f0:	push	{r4, r5, r6, sl, fp, lr}
   334f4:	add	fp, sp, #16
   334f8:	mov	r4, r0
   334fc:	ldr	r6, [pc, #188]	; 335c0 <show_capabilities+0xd0>
   33500:	add	r6, pc, r6
   33504:	mov	r0, #0
   33508:	strb	r0, [r6]
   3350c:	ldrb	r0, [r4, #396]	; 0x18c
   33510:	cmp	r0, #0
   33514:	beq	33530 <show_capabilities+0x40>
   33518:	ldr	r0, [pc, #164]	; 335c4 <show_capabilities+0xd4>
   3351c:	add	r0, pc, r0
   33520:	ldr	r1, [pc, #160]	; 335c8 <show_capabilities+0xd8>
   33524:	add	r1, pc, r1
   33528:	mov	r2, #512	; 0x200
   3352c:	bl	e510 <rb_strlcpy@plt>
   33530:	ldr	r0, [r4, #432]	; 0x1b0
   33534:	ldrb	r0, [r0, #452]	; 0x1c4
   33538:	tst	r0, #1
   3353c:	beq	33558 <show_capabilities+0x68>
   33540:	ldr	r0, [pc, #132]	; 335cc <show_capabilities+0xdc>
   33544:	add	r0, pc, r0
   33548:	ldr	r1, [pc, #128]	; 335d0 <show_capabilities+0xe0>
   3354c:	add	r1, pc, r1
   33550:	mov	r2, #512	; 0x200
   33554:	bl	e7d4 <rb_strlcat@plt>
   33558:	ldrh	r0, [r4, #80]	; 0x50
   3355c:	cmp	r0, #32
   33560:	bne	335b8 <show_capabilities+0xc8>
   33564:	ldr	r0, [r4, #28]
   33568:	ldr	r0, [r0, #60]	; 0x3c
   3356c:	cmp	r0, #0
   33570:	beq	335b8 <show_capabilities+0xc8>
   33574:	ldr	r5, [pc, #88]	; 335d4 <show_capabilities+0xe4>
   33578:	add	r5, pc, r5
   3357c:	ldr	r1, [pc, #84]	; 335d8 <show_capabilities+0xe8>
   33580:	add	r1, pc, r1
   33584:	mov	r0, r5
   33588:	mov	r2, #512	; 0x200
   3358c:	bl	e7d4 <rb_strlcat@plt>
   33590:	ldr	r0, [pc, #68]	; 335dc <show_capabilities+0xec>
   33594:	ldr	r0, [pc, r0]
   33598:	ldr	r0, [r0]
   3359c:	ldr	r1, [r4, #28]
   335a0:	ldr	r1, [r1, #60]	; 0x3c
   335a4:	bl	deec <capability_index_list@plt>
   335a8:	mov	r1, r0
   335ac:	mov	r0, r5
   335b0:	mov	r2, #512	; 0x200
   335b4:	bl	e7d4 <rb_strlcat@plt>
   335b8:	add	r0, r6, #1
   335bc:	pop	{r4, r5, r6, sl, fp, pc}
   335c0:	.word	0x00037a58
   335c4:	.word	0x00037a3c
   335c8:	.word	0x00012bd0
   335cc:	.word	0x00037a14
   335d0:	.word	0x00012bad
   335d4:	.word	0x000379e0
   335d8:	.word	0x00012be8
   335dc:	.word	0x000272ec

000335e0 <server_estab>:
   335e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   335e4:	add	fp, sp, #28
   335e8:	sub	sp, sp, #124	; 0x7c
   335ec:	cmp	r0, #0
   335f0:	mvneq	r0, #0
   335f4:	subeq	sp, fp, #28
   335f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   335fc:	mov	r4, r0
   33600:	add	sl, r0, #88	; 0x58
   33604:	ldr	r0, [r0, #432]	; 0x1b0
   33608:	ldr	r6, [r0, #136]	; 0x88
   3360c:	cmp	r6, #0
   33610:	beq	33690 <server_estab+0xb0>
   33614:	ldr	r5, [r0, #276]	; 0x114
   33618:	cmp	r5, #0
   3361c:	beq	33650 <server_estab+0x70>
   33620:	mov	r0, r5
   33624:	bl	dc94 <strlen@plt>
   33628:	mov	r2, r0
   3362c:	mov	r7, #0
   33630:	mov	r0, r5
   33634:	mov	r1, #0
   33638:	bl	df28 <memset@plt>
   3363c:	ldr	r0, [r4, #432]	; 0x1b0
   33640:	ldr	r0, [r0, #276]	; 0x114
   33644:	bl	33e44 <rb_free>
   33648:	ldr	r0, [r4, #432]	; 0x1b0
   3364c:	str	r7, [r0, #276]	; 0x114
   33650:	mov	r9, r4
   33654:	ldr	r0, [r9, #64]!	; 0x40
   33658:	orr	r0, r0, #128	; 0x80
   3365c:	str	r0, [r9]
   33660:	ldrh	r0, [r9, #16]
   33664:	cmp	r0, #8
   33668:	bne	337cc <server_estab+0x1ec>
   3366c:	ldr	r0, [r6, #276]	; 0x114
   33670:	cmp	r0, #0
   33674:	beq	336d8 <server_estab+0xf8>
   33678:	ldrb	r1, [r0]
   3367c:	ldr	r2, [pc, #1796]	; 33d88 <server_estab+0x7a8>
   33680:	add	r2, pc, r2
   33684:	cmp	r1, #0
   33688:	movne	r2, r0
   3368c:	b	336e0 <server_estab+0x100>
   33690:	mov	r0, r4
   33694:	bl	dea4 <is_remote_connect@plt>
   33698:	mov	r1, r0
   3369c:	cmp	r0, #0
   336a0:	movwne	r1, #256	; 0x100
   336a4:	ldr	r2, [pc, #1744]	; 33d7c <server_estab+0x79c>
   336a8:	add	r2, pc, r2
   336ac:	mov	r0, #256	; 0x100
   336b0:	mov	r3, sl
   336b4:	bl	d640 <sendto_realops_snomask@plt>
   336b8:	ldr	r3, [pc, #1728]	; 33d80 <server_estab+0x7a0>
   336bc:	add	r3, pc, r3
   336c0:	mov	r0, r4
   336c4:	mov	r1, r4
   336c8:	mov	r2, r4
   336cc:	bl	e534 <exit_client@plt>
   336d0:	sub	sp, fp, #28
   336d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   336d8:	ldr	r2, [pc, #1700]	; 33d84 <server_estab+0x7a4>
   336dc:	add	r2, pc, r2
   336e0:	ldr	r5, [pc, #1700]	; 33d8c <server_estab+0x7ac>
   336e4:	ldr	r5, [pc, r5]
   336e8:	add	r0, r5, #396	; 0x18c
   336ec:	str	r0, [sp]
   336f0:	ldr	r1, [pc, #1688]	; 33d90 <server_estab+0x7b0>
   336f4:	add	r1, pc, r1
   336f8:	mov	r0, r4
   336fc:	mov	r3, #6
   33700:	bl	d1e4 <sendto_one@plt>
   33704:	ldr	r0, [pc, #1672]	; 33d94 <server_estab+0x7b4>
   33708:	ldr	r0, [pc, r0]
   3370c:	ldr	r7, [r0]
   33710:	ldr	r0, [pc, #1664]	; 33d98 <server_estab+0x7b8>
   33714:	ldr	r0, [pc, r0]
   33718:	ldr	r0, [r0]
   3371c:	bl	d904 <capability_index_mask@plt>
   33720:	ldr	r1, [pc, #1652]	; 33d9c <server_estab+0x7bc>
   33724:	ldr	r1, [pc, r1]
   33728:	ldr	r1, [r1]
   3372c:	ldr	r2, [pc, #1644]	; 33da0 <server_estab+0x7c0>
   33730:	ldr	r2, [pc, r2]
   33734:	ldr	r2, [r2]
   33738:	orr	r1, r2, r1
   3373c:	bic	r0, r0, r1
   33740:	orr	r1, r0, r7
   33744:	ldr	r0, [pc, #1624]	; 33da4 <server_estab+0x7c4>
   33748:	ldr	r0, [pc, r0]
   3374c:	ldr	r0, [r0]
   33750:	ldr	r2, [r6, #288]	; 0x120
   33754:	tst	r2, #8
   33758:	orrne	r1, r1, r0
   3375c:	ldr	r0, [pc, #1604]	; 33da8 <server_estab+0x7c8>
   33760:	ldr	r0, [pc, r0]
   33764:	ldr	r0, [r0]
   33768:	tst	r2, #16
   3376c:	orrne	r1, r1, r0
   33770:	mov	r0, r4
   33774:	bl	d0dc <send_capabilities@plt>
   33778:	ldrb	r0, [r5, #345]!	; 0x159
   3377c:	ldr	r1, [pc, #1576]	; 33dac <server_estab+0x7cc>
   33780:	add	r1, pc, r1
   33784:	cmp	r0, #0
   33788:	movne	r1, r5
   3378c:	ldr	r0, [pc, #1564]	; 33db0 <server_estab+0x7d0>
   33790:	ldr	r0, [pc, r0]
   33794:	ldr	r0, [r0, #8]
   33798:	str	r1, [sp]
   3379c:	ldr	r1, [pc, #1552]	; 33db4 <server_estab+0x7d4>
   337a0:	add	r1, pc, r1
   337a4:	ldr	r3, [pc, #1548]	; 33db8 <server_estab+0x7d8>
   337a8:	add	r3, pc, r3
   337ac:	cmp	r0, #0
   337b0:	moveq	r3, r1
   337b4:	movw	r0, #257	; 0x101
   337b8:	sub	r2, r5, r0
   337bc:	ldr	r1, [pc, #1528]	; 33dbc <server_estab+0x7dc>
   337c0:	add	r1, pc, r1
   337c4:	mov	r0, r4
   337c8:	bl	d1e4 <sendto_one@plt>
   337cc:	ldr	r0, [r4, #432]	; 0x1b0
   337d0:	ldr	r0, [r0, #300]	; 0x12c
   337d4:	mov	r1, #16384	; 0x4000
   337d8:	bl	e210 <rb_set_buffers@plt>
   337dc:	cmp	r0, #0
   337e0:	bne	337f0 <server_estab+0x210>
   337e4:	ldr	r0, [pc, #1492]	; 33dc0 <server_estab+0x7e0>
   337e8:	add	r0, pc, r0
   337ec:	bl	d604 <ilog_error@plt>
   337f0:	ldr	r0, [pc, #1484]	; 33dc4 <server_estab+0x7e4>
   337f4:	ldr	r0, [pc, r0]
   337f8:	ldr	r0, [r0]
   337fc:	ldr	r1, [r4, #432]	; 0x1b0
   33800:	ldr	r1, [r1, #296]	; 0x128
   33804:	and	r1, r0, r1
   33808:	cmp	r1, r0
   3380c:	bne	33818 <server_estab+0x238>
   33810:	mov	r0, r4
   33814:	bl	db80 <start_zlib_session@plt>
   33818:	ldr	r5, [pc, #1448]	; 33dc8 <server_estab+0x7e8>
   3381c:	ldr	r5, [pc, r5]
   33820:	str	r5, [r4, #32]
   33824:	ldrh	r1, [r9]
   33828:	mvn	r0, #1
   3382c:	movw	r2, #16418	; 0x4022
   33830:	tst	r1, r2
   33834:	beq	33840 <server_estab+0x260>
   33838:	sub	sp, fp, #28
   3383c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33840:	bl	d07c <rb_current_time@plt>
   33844:	str	r0, [sp]
   33848:	ldr	r1, [pc, #1404]	; 33dcc <server_estab+0x7ec>
   3384c:	add	r1, pc, r1
   33850:	mov	r0, r4
   33854:	mov	r2, #6
   33858:	mov	r3, #6
   3385c:	bl	d1e4 <sendto_one@plt>
   33860:	ldr	r0, [r5, #28]
   33864:	add	r1, r4, #12
   33868:	add	r2, r0, #36	; 0x24
   3386c:	mov	r0, r4
   33870:	bl	33e50 <rb_dlinkAdd>
   33874:	ldr	r0, [r4, #432]	; 0x1b0
   33878:	bl	33f40 <rb_dlinkMoveNode>
   3387c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   33880:	mov	r1, r0
   33884:	ldr	r2, [pc, #1348]	; 33dd0 <server_estab+0x7f0>
   33888:	ldr	r2, [pc, r2]
   3388c:	mov	r0, r4
   33890:	bl	32b94 <rb_dlinkAddTail>
   33894:	mov	r8, r4
   33898:	ldrb	r0, [r8, #396]!	; 0x18c
   3389c:	cmp	r0, #0
   338a0:	beq	338b0 <server_estab+0x2d0>
   338a4:	mov	r0, r8
   338a8:	mov	r1, r4
   338ac:	bl	d0d0 <add_to_id_hash@plt>
   338b0:	mov	r0, sl
   338b4:	mov	r1, r4
   338b8:	bl	da48 <add_to_client_hash@plt>
   338bc:	mov	r0, r4
   338c0:	bl	d5ec <make_server@plt>
   338c4:	mov	r0, #32
   338c8:	strh	r0, [r4, #80]	; 0x50
   338cc:	mov	r0, #3
   338d0:	strb	r0, [r4, #82]	; 0x52
   338d4:	ldr	r0, [r4, #28]
   338d8:	ldr	r1, [r4, #432]	; 0x1b0
   338dc:	ldr	r2, [r1, #296]	; 0x128
   338e0:	str	r2, [r0, #60]	; 0x3c
   338e4:	ldr	r0, [r1, #288]	; 0x120
   338e8:	cmp	r0, #0
   338ec:	beq	33914 <server_estab+0x334>
   338f0:	bl	3400c <rb_strdup>
   338f4:	ldr	r1, [r4, #28]
   338f8:	str	r0, [r1, #64]	; 0x40
   338fc:	ldr	r0, [r4, #432]	; 0x1b0
   33900:	ldr	r0, [r0, #288]	; 0x120
   33904:	bl	33e44 <rb_free>
   33908:	ldr	r0, [r4, #432]	; 0x1b0
   3390c:	mov	r1, #0
   33910:	str	r1, [r0, #288]	; 0x120
   33914:	movw	r0, #345	; 0x159
   33918:	add	r7, r4, r0
   3391c:	ldr	r0, [r9]
   33920:	and	r2, r0, #2048	; 0x800
   33924:	mov	r0, sl
   33928:	mov	r1, r7
   3392c:	bl	e2b8 <scache_connect@plt>
   33930:	ldr	r1, [r4, #28]
   33934:	str	r0, [r1, #68]	; 0x44
   33938:	bl	d07c <rb_current_time@plt>
   3393c:	ldr	r1, [r4, #432]	; 0x1b0
   33940:	str	r0, [r1, #48]	; 0x30
   33944:	ldr	r0, [pc, #1160]	; 33dd4 <server_estab+0x7f4>
   33948:	ldr	r0, [pc, r0]
   3394c:	ldr	r0, [r0, #8]
   33950:	ldr	r1, [pc, #1152]	; 33dd8 <server_estab+0x7f8>
   33954:	ldr	r1, [pc, r1]
   33958:	ldr	r1, [r1, #8]
   3395c:	add	r0, r1, r0
   33960:	ldr	r1, [pc, #1140]	; 33ddc <server_estab+0x7fc>
   33964:	ldr	r1, [pc, r1]
   33968:	ldr	r2, [r1]
   3396c:	cmp	r0, r2
   33970:	strhi	r0, [r1]
   33974:	mov	r0, r4
   33978:	bl	dda8 <show_capabilities@plt>
   3397c:	ldr	r0, [pc, #1116]	; 33de0 <server_estab+0x800>
   33980:	add	r0, pc, r0
   33984:	add	r5, r0, #1
   33988:	str	r5, [sp]
   3398c:	ldr	r2, [pc, #1104]	; 33de4 <server_estab+0x804>
   33990:	add	r2, pc, r2
   33994:	mov	r0, #256	; 0x100
   33998:	mov	r1, #0
   3399c:	mov	r3, sl
   339a0:	bl	d640 <sendto_realops_snomask@plt>
   339a4:	mov	r0, r4
   339a8:	mov	r1, #1
   339ac:	bl	e168 <log_client_name@plt>
   339b0:	mov	r6, r0
   339b4:	mov	r0, r4
   339b8:	bl	dda8 <show_capabilities@plt>
   339bc:	mov	r0, #5
   339c0:	ldr	r1, [pc, #1056]	; 33de8 <server_estab+0x808>
   339c4:	add	r1, pc, r1
   339c8:	mov	r2, r6
   339cc:	mov	r3, r5
   339d0:	bl	e0b4 <ilog@plt>
   339d4:	str	r4, [fp, #-40]	; 0xffffffd8
   339d8:	ldr	r0, [pc, #1036]	; 33dec <server_estab+0x80c>
   339dc:	ldr	r0, [pc, r0]
   339e0:	str	r0, [fp, #-44]	; 0xffffffd4
   339e4:	ldr	r0, [pc, #1028]	; 33df0 <server_estab+0x810>
   339e8:	ldr	r0, [pc, r0]
   339ec:	ldr	r0, [r0]
   339f0:	sub	r1, fp, #44	; 0x2c
   339f4:	bl	e654 <call_hook@plt>
   339f8:	add	r6, sp, #30
   339fc:	ldr	r2, [pc, #1008]	; 33df4 <server_estab+0x814>
   33a00:	add	r2, pc, r2
   33a04:	mov	r0, r6
   33a08:	mov	r1, #78	; 0x4e
   33a0c:	mov	r5, sl
   33a10:	mov	r3, sl
   33a14:	bl	de74 <snprintf@plt>
   33a18:	ldr	r0, [r4, #432]	; 0x1b0
   33a1c:	ldr	r0, [r0, #300]	; 0x12c
   33a20:	mov	r1, r6
   33a24:	bl	e270 <rb_note@plt>
   33a28:	ldr	r0, [pc, #968]	; 33df8 <server_estab+0x818>
   33a2c:	ldr	r0, [pc, r0]
   33a30:	ldr	r6, [r0]
   33a34:	cmp	r6, #0
   33a38:	beq	33b64 <server_estab+0x584>
   33a3c:	ldr	r0, [pc, #952]	; 33dfc <server_estab+0x81c>
   33a40:	ldr	r0, [pc, r0]
   33a44:	add	r1, r0, #88	; 0x58
   33a48:	str	r1, [sp, #24]
   33a4c:	add	r0, r0, #396	; 0x18c
   33a50:	str	r0, [sp, #20]
   33a54:	ldr	sl, [r6]
   33a58:	cmp	sl, r4
   33a5c:	beq	33b58 <server_estab+0x578>
   33a60:	ldr	r0, [sl, #432]	; 0x1b0
   33a64:	ldr	r0, [r0, #136]	; 0x88
   33a68:	cmp	r0, #0
   33a6c:	ldrbne	r0, [r0, #288]	; 0x120
   33a70:	tstne	r0, #128	; 0x80
   33a74:	bne	33b58 <server_estab+0x578>
   33a78:	ldrb	r0, [sl, #396]	; 0x18c
   33a7c:	cmp	r0, #0
   33a80:	ldrbne	r0, [r8]
   33a84:	cmpne	r0, #0
   33a88:	bne	33af0 <server_estab+0x510>
   33a8c:	ldr	r0, [r9]
   33a90:	tst	r0, #2048	; 0x800
   33a94:	ldr	r0, [pc, #900]	; 33e20 <server_estab+0x840>
   33a98:	add	r0, pc, r0
   33a9c:	ldr	r1, [pc, #896]	; 33e24 <server_estab+0x844>
   33aa0:	add	r1, pc, r1
   33aa4:	moveq	r0, r1
   33aa8:	stm	sp, {r0, r7}
   33aac:	mov	r0, sl
   33ab0:	ldr	r1, [pc, #880]	; 33e28 <server_estab+0x848>
   33ab4:	add	r1, pc, r1
   33ab8:	ldr	r2, [sp, #24]
   33abc:	mov	r3, r5
   33ac0:	bl	d1e4 <sendto_one@plt>
   33ac4:	ldr	r0, [r4, #28]
   33ac8:	ldr	r3, [r0, #64]	; 0x40
   33acc:	cmp	r3, #0
   33ad0:	ldrbne	r0, [r3]
   33ad4:	cmpne	r0, #0
   33ad8:	beq	33b58 <server_estab+0x578>
   33adc:	mov	r0, sl
   33ae0:	ldr	r1, [pc, #836]	; 33e2c <server_estab+0x84c>
   33ae4:	add	r1, pc, r1
   33ae8:	mov	r2, r5
   33aec:	b	33b54 <server_estab+0x574>
   33af0:	ldr	r0, [r9]
   33af4:	tst	r0, #2048	; 0x800
   33af8:	ldr	r0, [pc, #768]	; 33e00 <server_estab+0x820>
   33afc:	add	r0, pc, r0
   33b00:	ldr	r1, [pc, #764]	; 33e04 <server_estab+0x824>
   33b04:	add	r1, pc, r1
   33b08:	moveq	r0, r1
   33b0c:	str	r8, [sp]
   33b10:	stmib	sp, {r0, r7}
   33b14:	mov	r0, sl
   33b18:	ldr	r1, [pc, #744]	; 33e08 <server_estab+0x828>
   33b1c:	add	r1, pc, r1
   33b20:	ldr	r2, [sp, #20]
   33b24:	mov	r3, r5
   33b28:	bl	d1e4 <sendto_one@plt>
   33b2c:	ldr	r0, [r4, #28]
   33b30:	ldr	r3, [r0, #64]	; 0x40
   33b34:	cmp	r3, #0
   33b38:	ldrbne	r0, [r3]
   33b3c:	cmpne	r0, #0
   33b40:	beq	33b58 <server_estab+0x578>
   33b44:	mov	r0, sl
   33b48:	ldr	r1, [pc, #700]	; 33e0c <server_estab+0x82c>
   33b4c:	add	r1, pc, r1
   33b50:	mov	r2, r8
   33b54:	bl	d1e4 <sendto_one@plt>
   33b58:	ldr	r6, [r6, #8]
   33b5c:	cmp	r6, #0
   33b60:	bne	33a54 <server_estab+0x474>
   33b64:	ldr	r0, [pc, #676]	; 33e10 <server_estab+0x830>
   33b68:	ldr	r0, [pc, r0]
   33b6c:	ldr	r6, [r0]
   33b70:	cmp	r6, #0
   33b74:	beq	33cec <server_estab+0x70c>
   33b78:	movw	r5, #345	; 0x159
   33b7c:	ldr	r9, [pc, #656]	; 33e14 <server_estab+0x834>
   33b80:	add	r9, pc, r9
   33b84:	ldr	sl, [pc, #652]	; 33e18 <server_estab+0x838>
   33b88:	add	sl, pc, sl
   33b8c:	b	33cc8 <server_estab+0x6e8>
   33b90:	ldrb	r1, [r0, #65]	; 0x41
   33b94:	tst	r1, #32
   33b98:	beq	33bc0 <server_estab+0x5e0>
   33b9c:	ldrh	r1, [r0, #80]	; 0x50
   33ba0:	cmp	r1, #64	; 0x40
   33ba4:	bne	33bc0 <server_estab+0x5e0>
   33ba8:	ldr	r0, [r0, #432]	; 0x1b0
   33bac:	ldr	r0, [r0, #136]	; 0x88
   33bb0:	cmp	r0, #0
   33bb4:	ldrbne	r0, [r0, #288]	; 0x120
   33bb8:	tstne	r0, #128	; 0x80
   33bbc:	bne	33ce0 <server_estab+0x700>
   33bc0:	ldrb	r0, [r8]
   33bc4:	cmp	r0, #0
   33bc8:	beq	33c24 <server_estab+0x644>
   33bcc:	mov	r0, r7
   33bd0:	ldrb	r1, [r0, #396]!	; 0x18c
   33bd4:	cmp	r1, #0
   33bd8:	beq	33c24 <server_estab+0x644>
   33bdc:	add	r1, r7, r5
   33be0:	ldr	r2, [r7, #32]
   33be4:	ldr	r3, [r7, #64]	; 0x40
   33be8:	ldr	r5, [r7, #76]	; 0x4c
   33bec:	tst	r3, #2048	; 0x800
   33bf0:	mov	r3, sl
   33bf4:	moveq	r3, r9
   33bf8:	add	r5, r5, #1
   33bfc:	str	r5, [sp]
   33c00:	movw	r5, #345	; 0x159
   33c04:	stmib	sp, {r0, r3}
   33c08:	str	r1, [sp, #12]
   33c0c:	add	r3, r7, #88	; 0x58
   33c10:	add	r2, r2, #396	; 0x18c
   33c14:	mov	r0, r4
   33c18:	ldr	r1, [pc, #508]	; 33e1c <server_estab+0x83c>
   33c1c:	add	r1, pc, r1
   33c20:	b	33c64 <server_estab+0x684>
   33c24:	add	r0, r7, r5
   33c28:	ldr	r1, [r7, #32]
   33c2c:	ldr	r2, [r7, #64]	; 0x40
   33c30:	ldr	r3, [r7, #76]	; 0x4c
   33c34:	tst	r2, #2048	; 0x800
   33c38:	mov	r2, sl
   33c3c:	moveq	r2, r9
   33c40:	add	r3, r3, #1
   33c44:	str	r3, [sp]
   33c48:	str	r2, [sp, #4]
   33c4c:	str	r0, [sp, #8]
   33c50:	add	r3, r7, #88	; 0x58
   33c54:	add	r2, r1, #88	; 0x58
   33c58:	mov	r0, r4
   33c5c:	ldr	r1, [pc, #460]	; 33e30 <server_estab+0x850>
   33c60:	add	r1, pc, r1
   33c64:	bl	d1e4 <sendto_one@plt>
   33c68:	ldr	r0, [r7, #28]
   33c6c:	ldr	r3, [r0, #64]	; 0x40
   33c70:	cmp	r3, #0
   33c74:	ldrbne	r0, [r3]
   33c78:	cmpne	r0, #0
   33c7c:	beq	33ce0 <server_estab+0x700>
   33c80:	ldr	r0, [r4, #36]	; 0x24
   33c84:	ldrh	r1, [r0, #80]	; 0x50
   33c88:	cmp	r1, #32
   33c8c:	bne	33cac <server_estab+0x6cc>
   33c90:	ldrb	r0, [r0, #396]	; 0x18c
   33c94:	cmp	r0, #0
   33c98:	beq	33cac <server_estab+0x6cc>
   33c9c:	ldrb	r0, [r7, #396]!	; 0x18c
   33ca0:	cmp	r0, #0
   33ca4:	subeq	r7, r7, #308	; 0x134
   33ca8:	b	33cb0 <server_estab+0x6d0>
   33cac:	add	r7, r7, #88	; 0x58
   33cb0:	mov	r0, r4
   33cb4:	ldr	r1, [pc, #376]	; 33e34 <server_estab+0x854>
   33cb8:	add	r1, pc, r1
   33cbc:	mov	r2, r7
   33cc0:	bl	d1e4 <sendto_one@plt>
   33cc4:	b	33ce0 <server_estab+0x700>
   33cc8:	ldr	r7, [r6]
   33ccc:	ldrh	r0, [r7, #80]	; 0x50
   33cd0:	cmp	r0, #4
   33cd4:	ldrne	r0, [r7, #36]	; 0x24
   33cd8:	cmpne	r0, r4
   33cdc:	bne	33b90 <server_estab+0x5b0>
   33ce0:	ldr	r6, [r6, #8]
   33ce4:	cmp	r6, #0
   33ce8:	bne	33cc8 <server_estab+0x6e8>
   33cec:	ldr	r0, [pc, #324]	; 33e38 <server_estab+0x858>
   33cf0:	ldr	r0, [pc, r0]
   33cf4:	ldr	r0, [r0]
   33cf8:	ldr	r1, [r4, #432]	; 0x1b0
   33cfc:	ldr	r1, [r1, #296]	; 0x128
   33d00:	and	r1, r0, r1
   33d04:	cmp	r1, r0
   33d08:	moveq	r0, r4
   33d0c:	bleq	34044 <burst_ban>
   33d10:	mov	r0, r4
   33d14:	bl	3426c <burst_TS6>
   33d18:	ldr	r3, [pc, #284]	; 33e3c <server_estab+0x85c>
   33d1c:	ldr	r3, [pc, r3]
   33d20:	add	r2, r3, #88	; 0x58
   33d24:	ldr	r0, [r4, #36]	; 0x24
   33d28:	ldrh	r1, [r0, #80]	; 0x50
   33d2c:	cmp	r1, #32
   33d30:	bne	33d50 <server_estab+0x770>
   33d34:	ldrb	r0, [r0, #396]	; 0x18c
   33d38:	cmp	r0, #0
   33d3c:	beq	33d50 <server_estab+0x770>
   33d40:	ldrb	r0, [r3, #396]!	; 0x18c
   33d44:	cmp	r0, #0
   33d48:	subeq	r3, r3, #308	; 0x134
   33d4c:	mov	r2, r3
   33d50:	ldr	r1, [pc, #232]	; 33e40 <server_estab+0x860>
   33d54:	add	r1, pc, r1
   33d58:	mov	r0, r4
   33d5c:	bl	d1e4 <sendto_one@plt>
   33d60:	mov	r0, r4
   33d64:	bl	de50 <free_pre_client@plt>
   33d68:	mov	r0, r4
   33d6c:	bl	d544 <send_pop_queue@plt>
   33d70:	mov	r0, #0
   33d74:	sub	sp, fp, #28
   33d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33d7c:	.word	0x00012a56
   33d80:	.word	0x00012a6f
   33d84:	.word	0x0000dc61
   33d88:	.word	0x0000dcbd
   33d8c:	.word	0x00027474
   33d90:	.word	0x00012a4d
   33d94:	.word	0x00027394
   33d98:	.word	0x0002716c
   33d9c:	.word	0x00027204
   33da0:	.word	0x00027134
   33da4:	.word	0x0002719c
   33da8:	.word	0x000271b4
   33dac:	.word	0x000129ea
   33db0:	.word	0x00027224
   33db4:	.word	0x00012065
   33db8:	.word	0x000129bd
   33dbc:	.word	0x00012993
   33dc0:	.word	0x00012990
   33dc4:	.word	0x000270f0
   33dc8:	.word	0x0002733c
   33dcc:	.word	0x0001294d
   33dd0:	.word	0x00026ff0
   33dd4:	.word	0x000271e0
   33dd8:	.word	0x0002707c
   33ddc:	.word	0x00026f74
   33de0:	.word	0x000375d8
   33de4:	.word	0x0001281d
   33de8:	.word	0x000127e9
   33dec:	.word	0x0002717c
   33df0:	.word	0x00026f0c
   33df4:	.word	0x000127d1
   33df8:	.word	0x00026fa4
   33dfc:	.word	0x00027118
   33e00:	.word	0x00012669
   33e04:	.word	0x00011d01
   33e08:	.word	0x000126c0
   33e0c:	.word	0x000126a6
   33e10:	.word	0x00026d10
   33e14:	.word	0x00011c85
   33e18:	.word	0x000125dd
   33e1c:	.word	0x00012601
   33e20:	.word	0x000126cd
   33e24:	.word	0x00011d65
   33e28:	.word	0x00012753
   33e2c:	.word	0x0001270e
   33e30:	.word	0x000125d4
   33e34:	.word	0x0001253a
   33e38:	.word	0x00026c20
   33e3c:	.word	0x00026e3c
   33e40:	.word	0x0000d69a

00033e44 <rb_free>:
   33e44:	cmp	r0, #0
   33e48:	bxeq	lr
   33e4c:	b	d328 <free@plt>

00033e50 <rb_dlinkAdd>:
   33e50:	push	{fp, lr}
   33e54:	mov	fp, sp
   33e58:	cmp	r0, #0
   33e5c:	beq	33ebc <rb_dlinkAdd+0x6c>
   33e60:	cmp	r1, #0
   33e64:	beq	33edc <rb_dlinkAdd+0x8c>
   33e68:	cmp	r2, #0
   33e6c:	beq	33efc <rb_dlinkAdd+0xac>
   33e70:	mov	r3, #0
   33e74:	stm	r1, {r0, r3}
   33e78:	ldr	r0, [r2]
   33e7c:	str	r0, [r1, #8]
   33e80:	ldr	r0, [r2]
   33e84:	cmp	r0, #0
   33e88:	beq	33e98 <rb_dlinkAdd+0x48>
   33e8c:	add	r0, r0, #4
   33e90:	str	r1, [r0]
   33e94:	b	33ea8 <rb_dlinkAdd+0x58>
   33e98:	mov	r0, r2
   33e9c:	ldr	r3, [r0, #4]!
   33ea0:	cmp	r3, #0
   33ea4:	streq	r1, [r0]
   33ea8:	str	r1, [r2]
   33eac:	ldr	r0, [r2, #8]
   33eb0:	add	r0, r0, #1
   33eb4:	str	r0, [r2, #8]
   33eb8:	pop	{fp, pc}
   33ebc:	ldr	r0, [pc, #88]	; 33f1c <rb_dlinkAdd+0xcc>
   33ec0:	add	r0, pc, r0
   33ec4:	ldr	r1, [pc, #84]	; 33f20 <rb_dlinkAdd+0xd0>
   33ec8:	add	r1, pc, r1
   33ecc:	ldr	r3, [pc, #80]	; 33f24 <rb_dlinkAdd+0xd4>
   33ed0:	add	r3, pc, r3
   33ed4:	mov	r2, #143	; 0x8f
   33ed8:	bl	e7e0 <__assert_fail@plt>
   33edc:	ldr	r0, [pc, #68]	; 33f28 <rb_dlinkAdd+0xd8>
   33ee0:	add	r0, pc, r0
   33ee4:	ldr	r1, [pc, #64]	; 33f2c <rb_dlinkAdd+0xdc>
   33ee8:	add	r1, pc, r1
   33eec:	ldr	r3, [pc, #60]	; 33f30 <rb_dlinkAdd+0xe0>
   33ef0:	add	r3, pc, r3
   33ef4:	mov	r2, #144	; 0x90
   33ef8:	bl	e7e0 <__assert_fail@plt>
   33efc:	ldr	r0, [pc, #48]	; 33f34 <rb_dlinkAdd+0xe4>
   33f00:	add	r0, pc, r0
   33f04:	ldr	r1, [pc, #44]	; 33f38 <rb_dlinkAdd+0xe8>
   33f08:	add	r1, pc, r1
   33f0c:	ldr	r3, [pc, #40]	; 33f3c <rb_dlinkAdd+0xec>
   33f10:	add	r3, pc, r3
   33f14:	mov	r2, #145	; 0x91
   33f18:	bl	e7e0 <__assert_fail@plt>
   33f1c:	.word	0x0000c751
   33f20:	.word	0x0000c6ee
   33f24:	.word	0x0000c74e
   33f28:	.word	0x0000c6cc
   33f2c:	.word	0x0000c6ce
   33f30:	.word	0x0000c72e
   33f34:	.word	0x00011f45
   33f38:	.word	0x0000c6ae
   33f3c:	.word	0x0000c70e

00033f40 <rb_dlinkMoveNode>:
   33f40:	cmp	r0, #0
   33f44:	beq	33fd0 <rb_dlinkMoveNode+0x90>
   33f48:	ldr	ip, [pc, #168]	; 33ff8 <rb_dlinkMoveNode+0xb8>
   33f4c:	ldr	ip, [pc, ip]
   33f50:	ldmib	r0, {r2, r3}
   33f54:	add	r1, r3, #4
   33f58:	cmp	r3, #0
   33f5c:	addeq	r1, ip, #4
   33f60:	str	r2, [r1]
   33f64:	ldmib	r0, {r1, r2}
   33f68:	cmp	r1, #0
   33f6c:	mov	r3, ip
   33f70:	addne	r3, r1, #8
   33f74:	str	r2, [r3]
   33f78:	mov	r1, #0
   33f7c:	ldr	r2, [pc, #120]	; 33ffc <rb_dlinkMoveNode+0xbc>
   33f80:	ldr	r2, [pc, r2]
   33f84:	ldr	r3, [r2]
   33f88:	stmib	r0, {r1, r3}
   33f8c:	cmp	r3, #0
   33f90:	beq	33fa0 <rb_dlinkMoveNode+0x60>
   33f94:	add	r3, r3, #4
   33f98:	str	r0, [r3]
   33f9c:	b	33fb0 <rb_dlinkMoveNode+0x70>
   33fa0:	mov	r3, r2
   33fa4:	ldr	r1, [r3, #4]!
   33fa8:	cmp	r1, #0
   33fac:	streq	r0, [r3]
   33fb0:	str	r0, [r2]
   33fb4:	ldr	r0, [ip, #8]
   33fb8:	sub	r0, r0, #1
   33fbc:	str	r0, [ip, #8]
   33fc0:	ldr	r0, [r2, #8]
   33fc4:	add	r0, r0, #1
   33fc8:	str	r0, [r2, #8]
   33fcc:	bx	lr
   33fd0:	push	{fp, lr}
   33fd4:	mov	fp, sp
   33fd8:	ldr	r0, [pc, #32]	; 34000 <rb_dlinkMoveNode+0xc0>
   33fdc:	add	r0, pc, r0
   33fe0:	ldr	r1, [pc, #28]	; 34004 <rb_dlinkMoveNode+0xc4>
   33fe4:	add	r1, pc, r1
   33fe8:	ldr	r3, [pc, #24]	; 34008 <rb_dlinkMoveNode+0xc8>
   33fec:	add	r3, pc, r3
   33ff0:	mov	r2, #114	; 0x72
   33ff4:	bl	e7e0 <__assert_fail@plt>
   33ff8:	.word	0x00026928
   33ffc:	.word	0x00026a50
   34000:	.word	0x0000c5d0
   34004:	.word	0x0000c5d2
   34008:	.word	0x0000fcb3

0003400c <rb_strdup>:
   3400c:	push	{r4, r5, fp, lr}
   34010:	add	fp, sp, #8
   34014:	mov	r4, r0
   34018:	bl	dc94 <strlen@plt>
   3401c:	add	r0, r0, #1
   34020:	bl	da90 <malloc@plt>
   34024:	cmp	r0, #0
   34028:	beq	34040 <rb_strdup+0x34>
   3402c:	mov	r5, r0
   34030:	mov	r1, r4
   34034:	bl	d928 <strcpy@plt>
   34038:	mov	r0, r5
   3403c:	pop	{r4, r5, fp, pc}
   34040:	bl	d448 <rb_outofmemory@plt>

00034044 <burst_ban>:
   34044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34048:	add	fp, sp, #28
   3404c:	sub	sp, sp, #244	; 0xf4
   34050:	str	r0, [sp, #60]	; 0x3c
   34054:	ldr	r4, [pc, #488]	; 34244 <burst_ban+0x200>
   34058:	ldr	r4, [pc, r4]
   3405c:	add	r0, r4, #88	; 0x58
   34060:	str	r0, [sp, #40]	; 0x28
   34064:	bl	dc94 <strlen@plt>
   34068:	str	r0, [sp, #44]	; 0x2c
   3406c:	ldr	r0, [pc, #468]	; 34248 <burst_ban+0x204>
   34070:	ldr	r0, [pc, r0]
   34074:	ldr	sl, [r0]
   34078:	cmp	sl, #0
   3407c:	beq	3423c <burst_ban+0x1f8>
   34080:	ldr	r0, [sp, #44]	; 0x2c
   34084:	add	r1, r0, #1
   34088:	str	r1, [sp, #36]	; 0x24
   3408c:	add	r0, r0, #2
   34090:	str	r0, [sp, #52]	; 0x34
   34094:	add	r0, sp, #67	; 0x43
   34098:	add	r0, r0, #173	; 0xad
   3409c:	str	r0, [sp, #48]	; 0x30
   340a0:	add	r0, r4, #396	; 0x18c
   340a4:	str	r0, [sp, #56]	; 0x38
   340a8:	ldr	r4, [sl]
   340ac:	ldr	r6, [r4, #44]	; 0x2c
   340b0:	bl	d07c <rb_current_time@plt>
   340b4:	cmp	r6, r0
   340b8:	blt	34230 <burst_ban+0x1ec>
   340bc:	ldr	r0, [r4]
   340c0:	bic	r0, r0, #-2147483648	; 0x80000000
   340c4:	cmp	r0, #255	; 0xff
   340c8:	ble	340e4 <burst_ban+0xa0>
   340cc:	cmp	r0, #256	; 0x100
   340d0:	cmpne	r0, #512	; 0x200
   340d4:	bne	34110 <burst_ban+0xcc>
   340d8:	ldr	r0, [pc, #376]	; 34258 <burst_ban+0x214>
   340dc:	add	r0, pc, r0
   340e0:	b	34120 <burst_ban+0xdc>
   340e4:	cmp	r0, #64	; 0x40
   340e8:	ldr	r8, [pc, #348]	; 3424c <burst_ban+0x208>
   340ec:	add	r8, pc, r8
   340f0:	mov	r3, r8
   340f4:	beq	34124 <burst_ban+0xe0>
   340f8:	cmp	r0, #128	; 0x80
   340fc:	bne	34230 <burst_ban+0x1ec>
   34100:	ldr	r8, [pc, #328]	; 34250 <burst_ban+0x20c>
   34104:	add	r8, pc, r8
   34108:	mov	r3, r8
   3410c:	b	34124 <burst_ban+0xe0>
   34110:	cmp	r0, #131072	; 0x20000
   34114:	bne	34230 <burst_ban+0x1ec>
   34118:	ldr	r0, [pc, #308]	; 34254 <burst_ban+0x210>
   3411c:	add	r0, pc, r0
   34120:	mov	r3, r0
   34124:	ldr	r8, [r4, #12]
   34128:	ldrb	r0, [r4, #6]
   3412c:	tst	r0, #8
   34130:	beq	341b4 <burst_ban+0x170>
   34134:	mov	r6, r3
   34138:	add	r5, sp, #67	; 0x43
   3413c:	mov	r0, r5
   34140:	mov	r1, r8
   34144:	mov	r2, #173	; 0xad
   34148:	bl	e510 <rb_strlcpy@plt>
   3414c:	mov	r0, r5
   34150:	mov	r1, #123	; 0x7b
   34154:	bl	e27c <strrchr@plt>
   34158:	cmp	r0, #0
   3415c:	beq	341b0 <burst_ban+0x16c>
   34160:	mov	r9, r0
   34164:	ldr	r0, [sp, #48]	; 0x30
   34168:	sub	r0, r0, r9
   3416c:	ldr	r1, [sp, #52]	; 0x34
   34170:	cmp	r0, r1
   34174:	mov	r3, r6
   34178:	ble	341b4 <burst_ban+0x170>
   3417c:	add	r0, r9, #1
   34180:	ldr	r1, [sp, #40]	; 0x28
   34184:	ldr	r2, [sp, #44]	; 0x2c
   34188:	bl	d40c <memcpy@plt>
   3418c:	mov	r3, r6
   34190:	ldr	r0, [sp, #36]	; 0x24
   34194:	mov	r1, #125	; 0x7d
   34198:	strb	r1, [r9, r0]
   3419c:	ldr	r0, [sp, #52]	; 0x34
   341a0:	mov	r1, #0
   341a4:	strb	r1, [r9, r0]
   341a8:	add	r8, sp, #67	; 0x43
   341ac:	b	341b4 <burst_ban+0x170>
   341b0:	mov	r3, r6
   341b4:	add	r2, r4, #36	; 0x24
   341b8:	ldm	r2, {r0, r1, r2}
   341bc:	ldr	r5, [r4, #16]
   341c0:	ldr	ip, [r4, #20]
   341c4:	ldr	r6, [r4, #24]
   341c8:	ldr	r4, [r4, #28]
   341cc:	cmp	r6, #0
   341d0:	ldr	r7, [pc, #132]	; 3425c <burst_ban+0x218>
   341d4:	add	r7, pc, r7
   341d8:	moveq	r6, r7
   341dc:	str	r6, [sp, #32]
   341e0:	mov	r6, r7
   341e4:	ldr	r7, [pc, #116]	; 34260 <burst_ban+0x21c>
   341e8:	add	r7, pc, r7
   341ec:	movne	r6, r7
   341f0:	sub	r2, r2, r1
   341f4:	sub	r0, r0, r1
   341f8:	cmp	r4, #0
   341fc:	ldr	r7, [pc, #96]	; 34264 <burst_ban+0x220>
   34200:	add	r7, pc, r7
   34204:	moveq	r4, r7
   34208:	stm	sp, {r4, r5}
   3420c:	str	r1, [sp, #8]
   34210:	add	r1, sp, #12
   34214:	stm	r1, {r0, r2, r8, ip}
   34218:	str	r6, [sp, #28]
   3421c:	ldr	r0, [sp, #60]	; 0x3c
   34220:	ldr	r1, [pc, #64]	; 34268 <burst_ban+0x224>
   34224:	add	r1, pc, r1
   34228:	ldr	r2, [sp, #56]	; 0x38
   3422c:	bl	d1e4 <sendto_one@plt>
   34230:	ldr	sl, [sl, #8]
   34234:	cmp	sl, #0
   34238:	bne	340a8 <burst_ban+0x64>
   3423c:	sub	sp, fp, #28
   34240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34244:	.word	0x00026b00
   34248:	.word	0x00026850
   3424c:	.word	0x00011f52
   34250:	.word	0x0001260d
   34254:	.word	0x0000d591
   34258:	.word	0x00011f36
   3425c:	.word	0x00011631
   34260:	.word	0x00012164
   34264:	.word	0x0000d13d
   34268:	.word	0x00012102

0003426c <burst_TS6>:
   3426c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34270:	add	fp, sp, #28
   34274:	sub	sp, sp, #604	; 0x25c
   34278:	mov	r8, r0
   3427c:	str	r0, [sp, #72]	; 0x48
   34280:	str	r0, [sp, #60]	; 0x3c
   34284:	ldr	r0, [pc, #1692]	; 34928 <burst_TS6+0x6bc>
   34288:	ldr	r0, [pc, r0]
   3428c:	ldr	r6, [r0]
   34290:	cmp	r6, #0
   34294:	str	r8, [sp, #56]	; 0x38
   34298:	beq	345c0 <burst_TS6+0x354>
   3429c:	add	r3, sp, #88	; 0x58
   342a0:	b	342e4 <burst_TS6+0x78>
   342a4:	ldr	r3, [r0, #32]
   342a8:	cmp	r3, #0
   342ac:	ldrne	r0, [r0, #36]	; 0x24
   342b0:	cmpne	r0, #0
   342b4:	beq	34598 <burst_TS6+0x32c>
   342b8:	ldrb	r1, [r4]
   342bc:	ldr	r0, [r0, #8]
   342c0:	str	r0, [sp]
   342c4:	cmp	r1, #0
   342c8:	movne	r9, r4
   342cc:	mov	r0, r8
   342d0:	ldr	r1, [pc, #1684]	; 3496c <burst_TS6+0x700>
   342d4:	add	r1, pc, r1
   342d8:	mov	r2, r9
   342dc:	bl	d1e4 <sendto_one@plt>
   342e0:	b	34598 <burst_TS6+0x32c>
   342e4:	ldr	r5, [r6]
   342e8:	ldrh	r0, [r5, #80]	; 0x50
   342ec:	cmp	r0, #64	; 0x40
   342f0:	bne	345b4 <burst_TS6+0x348>
   342f4:	ldr	r0, [r5, #24]
   342f8:	cmp	r0, #0
   342fc:	beq	345b4 <burst_TS6+0x348>
   34300:	ldr	r0, [r5, #36]	; 0x24
   34304:	ldrb	r1, [r0, #65]	; 0x41
   34308:	tst	r1, #32
   3430c:	beq	34334 <burst_TS6+0xc8>
   34310:	ldrh	r0, [r0, #80]	; 0x50
   34314:	cmp	r0, #64	; 0x40
   34318:	bne	34334 <burst_TS6+0xc8>
   3431c:	ldr	r0, [r5, #432]	; 0x1b0
   34320:	ldr	r0, [r0, #136]	; 0x88
   34324:	cmp	r0, #0
   34328:	ldrbne	r0, [r0, #288]	; 0x120
   3432c:	tstne	r0, #128	; 0x80
   34330:	bne	345b4 <burst_TS6+0x348>
   34334:	mov	r0, #0
   34338:	mov	r1, r5
   3433c:	mov	r2, #0
   34340:	bl	d850 <send_umode@plt>
   34344:	ldrb	r0, [sp, #88]	; 0x58
   34348:	cmp	r0, #0
   3434c:	moveq	r0, #43	; 0x2b
   34350:	strheq	r0, [sp, #88]	; 0x58
   34354:	mov	sl, r5
   34358:	ldr	r4, [sl, #64]!	; 0x40
   3435c:	tst	r4, #16777216	; 0x1000000
   34360:	ldr	r0, [pc, #1476]	; 3492c <burst_TS6+0x6c0>
   34364:	add	r0, pc, r0
   34368:	addeq	r0, sl, #227	; 0xe3
   3436c:	ldr	r1, [pc, #1468]	; 34930 <burst_TS6+0x6c4>
   34370:	ldr	r1, [pc, r1]
   34374:	ldr	r3, [r1]
   34378:	ldr	r1, [r8, #432]	; 0x1b0
   3437c:	ldr	r1, [r1, #296]	; 0x128
   34380:	and	r9, r3, r1
   34384:	ldr	r2, [sl, #-32]	; 0xffffffe0
   34388:	ldr	lr, [sl, #-12]
   3438c:	ldr	r1, [sl, #12]
   34390:	add	r1, r1, #1
   34394:	add	r2, r2, #396	; 0x18c
   34398:	str	r2, [sp, #48]	; 0x30
   3439c:	add	r2, sl, #332	; 0x14c
   343a0:	str	r2, [sp, #52]	; 0x34
   343a4:	add	r2, sl, #99	; 0x63
   343a8:	add	r7, sl, #88	; 0x58
   343ac:	add	ip, sl, #24
   343b0:	cmp	r9, r3
   343b4:	bne	3443c <burst_TS6+0x1d0>
   343b8:	movw	r3, #345	; 0x159
   343bc:	add	r9, r5, r3
   343c0:	ldr	r3, [r5, #24]
   343c4:	ldrb	r8, [r3, #40]!	; 0x28
   343c8:	str	r9, [sp, #36]	; 0x24
   343cc:	tst	r4, #131072	; 0x20000
   343d0:	ldr	r4, [pc, #1372]	; 34934 <burst_TS6+0x6c8>
   343d4:	add	r4, pc, r4
   343d8:	addne	r4, r5, #227	; 0xe3
   343dc:	stm	sp, {r1, lr}
   343e0:	add	r9, sp, #88	; 0x58
   343e4:	str	r9, [sp, #8]
   343e8:	str	r7, [sp, #12]
   343ec:	str	r2, [sp, #16]
   343f0:	str	r0, [sp, #20]
   343f4:	ldr	r7, [sp, #52]	; 0x34
   343f8:	str	r7, [sp, #24]
   343fc:	str	r4, [sp, #28]
   34400:	cmp	r8, #0
   34404:	ldr	r8, [sp, #56]	; 0x38
   34408:	ldr	r0, [pc, #1320]	; 34938 <burst_TS6+0x6cc>
   3440c:	add	r0, pc, r0
   34410:	moveq	r3, r0
   34414:	str	r3, [sp, #32]
   34418:	mov	r0, r8
   3441c:	ldr	r1, [pc, #1304]	; 3493c <burst_TS6+0x6d0>
   34420:	add	r1, pc, r1
   34424:	ldr	r2, [sp, #48]	; 0x30
   34428:	mov	r9, ip
   3442c:	mov	r3, ip
   34430:	bl	d1e4 <sendto_one@plt>
   34434:	mov	r4, r7
   34438:	b	34484 <burst_TS6+0x218>
   3443c:	movw	r3, #345	; 0x159
   34440:	add	r3, r5, r3
   34444:	stm	sp, {r1, lr}
   34448:	add	r9, sp, #88	; 0x58
   3444c:	str	r9, [sp, #8]
   34450:	str	r7, [sp, #12]
   34454:	str	r2, [sp, #16]
   34458:	str	r0, [sp, #20]
   3445c:	ldr	r4, [sp, #52]	; 0x34
   34460:	str	r4, [sp, #24]
   34464:	str	r3, [sp, #28]
   34468:	mov	r0, r8
   3446c:	ldr	r1, [pc, #1244]	; 34950 <burst_TS6+0x6e4>
   34470:	add	r1, pc, r1
   34474:	ldr	r2, [sp, #48]	; 0x30
   34478:	mov	r9, ip
   3447c:	mov	r3, ip
   34480:	bl	d1e4 <sendto_one@plt>
   34484:	ldr	r3, [r5, #444]	; 0x1bc
   34488:	cmp	r3, #0
   3448c:	ldrbne	r0, [r3]
   34490:	cmpne	r0, #0
   34494:	beq	344b8 <burst_TS6+0x24c>
   34498:	ldrb	r0, [r4]
   3449c:	cmp	r0, #0
   344a0:	mov	r2, r4
   344a4:	moveq	r2, r9
   344a8:	mov	r0, r8
   344ac:	ldr	r1, [pc, #1184]	; 34954 <burst_TS6+0x6e8>
   344b0:	add	r1, pc, r1
   344b4:	bl	d1e4 <sendto_one@plt>
   344b8:	ldr	r0, [pc, #1176]	; 34958 <burst_TS6+0x6ec>
   344bc:	ldr	r0, [pc, r0]
   344c0:	ldr	r0, [r0]
   344c4:	ldr	r1, [r8, #432]	; 0x1b0
   344c8:	ldr	r1, [r1, #296]	; 0x128
   344cc:	and	r1, r0, r1
   344d0:	cmp	r1, r0
   344d4:	beq	34538 <burst_TS6+0x2cc>
   344d8:	ldrb	r0, [sl, #2]
   344dc:	tst	r0, #2
   344e0:	beq	34508 <burst_TS6+0x29c>
   344e4:	ldrb	r0, [r5, #396]	; 0x18c
   344e8:	cmp	r0, #0
   344ec:	mov	r2, r4
   344f0:	moveq	r2, r9
   344f4:	add	r3, r5, #227	; 0xe3
   344f8:	mov	r0, r8
   344fc:	ldr	r1, [pc, #1112]	; 3495c <burst_TS6+0x6f0>
   34500:	add	r1, pc, r1
   34504:	bl	d1e4 <sendto_one@plt>
   34508:	ldr	r3, [r5, #24]
   3450c:	ldrb	r0, [r3, #40]!	; 0x28
   34510:	cmp	r0, #0
   34514:	beq	34538 <burst_TS6+0x2cc>
   34518:	ldrb	r0, [r4]
   3451c:	cmp	r0, #0
   34520:	mov	r2, r4
   34524:	moveq	r2, r9
   34528:	mov	r0, r8
   3452c:	ldr	r1, [pc, #1068]	; 34960 <burst_TS6+0x6f4>
   34530:	add	r1, pc, r1
   34534:	bl	d1e4 <sendto_one@plt>
   34538:	ldr	r0, [pc, #1060]	; 34964 <burst_TS6+0x6f8>
   3453c:	ldr	r0, [pc, r0]
   34540:	ldr	r0, [r0, #276]	; 0x114
   34544:	cmp	r0, #0
   34548:	beq	34584 <burst_TS6+0x318>
   3454c:	ldr	r0, [r5, #24]
   34550:	ldr	r3, [r0, #24]
   34554:	cmp	r3, #0
   34558:	ldrbne	r0, [r3]
   3455c:	cmpne	r0, #0
   34560:	beq	34584 <burst_TS6+0x318>
   34564:	ldrb	r0, [r4]
   34568:	cmp	r0, #0
   3456c:	mov	r2, r4
   34570:	moveq	r2, r9
   34574:	mov	r0, r8
   34578:	ldr	r1, [pc, #1000]	; 34968 <burst_TS6+0x6fc>
   3457c:	add	r1, pc, r1
   34580:	bl	d1e4 <sendto_one@plt>
   34584:	ldrb	r0, [r5, #57]	; 0x39
   34588:	tst	r0, #16
   3458c:	ldrne	r0, [r5, #24]
   34590:	cmpne	r0, #0
   34594:	bne	342a4 <burst_TS6+0x38>
   34598:	str	r5, [sp, #76]	; 0x4c
   3459c:	ldr	r0, [pc, #972]	; 34970 <burst_TS6+0x704>
   345a0:	ldr	r0, [pc, r0]
   345a4:	ldr	r0, [r0]
   345a8:	add	r1, sp, #72	; 0x48
   345ac:	bl	e654 <call_hook@plt>
   345b0:	add	r3, sp, #88	; 0x58
   345b4:	ldr	r6, [r6, #8]
   345b8:	cmp	r6, #0
   345bc:	bne	342e4 <burst_TS6+0x78>
   345c0:	ldr	r0, [pc, #888]	; 34940 <burst_TS6+0x6d4>
   345c4:	ldr	r0, [pc, r0]
   345c8:	ldr	r7, [r0]
   345cc:	cmp	r7, #0
   345d0:	beq	34904 <burst_TS6+0x698>
   345d4:	ldr	r0, [pc, #872]	; 34944 <burst_TS6+0x6d8>
   345d8:	ldr	r0, [pc, r0]
   345dc:	add	r0, r0, #396	; 0x18c
   345e0:	str	r0, [sp, #44]	; 0x2c
   345e4:	ldr	r5, [r7]
   345e8:	ldr	r4, [r5, #236]	; 0xec
   345ec:	ldrb	r0, [r4]
   345f0:	cmp	r0, #35	; 0x23
   345f4:	bne	348f8 <burst_TS6+0x68c>
   345f8:	ldr	r6, [r5, #232]	; 0xe8
   345fc:	mov	r0, r5
   34600:	mov	r1, r8
   34604:	bl	da30 <channel_modes@plt>
   34608:	str	r4, [sp]
   3460c:	str	r0, [sp, #4]
   34610:	ldr	r4, [pc, #816]	; 34948 <burst_TS6+0x6dc>
   34614:	add	r4, pc, r4
   34618:	mov	r0, r4
   3461c:	ldr	r1, [pc, #808]	; 3494c <burst_TS6+0x6e0>
   34620:	add	r1, pc, r1
   34624:	ldr	r2, [sp, #44]	; 0x2c
   34628:	mov	r3, r6
   3462c:	bl	e3a8 <sprintf@plt>
   34630:	add	sl, r4, r0
   34634:	ldr	r4, [r5, #124]	; 0x7c
   34638:	cmp	r4, #0
   3463c:	str	r7, [sp, #52]	; 0x34
   34640:	str	r5, [sp, #48]	; 0x30
   34644:	beq	34708 <burst_TS6+0x49c>
   34648:	mov	r6, r0
   3464c:	mov	r9, r0
   34650:	mov	r5, sl
   34654:	ldr	r7, [r4]
   34658:	ldr	r0, [r7, #40]	; 0x28
   3465c:	ldrb	r1, [r0, #396]!	; 0x18c
   34660:	cmp	r1, #0
   34664:	subeq	r0, r0, #308	; 0x134
   34668:	bl	dc94 <strlen@plt>
   3466c:	add	r8, r0, #1
   34670:	cmp	r7, #0
   34674:	beq	3468c <burst_TS6+0x420>
   34678:	ldr	r1, [r7, #44]	; 0x2c
   3467c:	tst	r1, #2
   34680:	addne	r8, r0, #2
   34684:	and	r0, r1, #1
   34688:	add	r8, r8, r0
   3468c:	add	r0, r8, r9
   34690:	cmp	r0, #508	; 0x1fc
   34694:	ble	346c0 <burst_TS6+0x454>
   34698:	mov	r0, #0
   3469c:	strb	r0, [r5, #-1]
   346a0:	ldr	r0, [sp, #56]	; 0x38
   346a4:	ldr	r1, [pc, #712]	; 34974 <burst_TS6+0x708>
   346a8:	add	r1, pc, r1
   346ac:	ldr	r2, [pc, #708]	; 34978 <burst_TS6+0x70c>
   346b0:	add	r2, pc, r2
   346b4:	bl	d1e4 <sendto_one@plt>
   346b8:	mov	r5, sl
   346bc:	mov	r9, r6
   346c0:	mov	r0, r7
   346c4:	mov	r1, #1
   346c8:	bl	d01c <find_channel_status@plt>
   346cc:	mov	r2, r0
   346d0:	ldr	r3, [r7, #40]	; 0x28
   346d4:	ldrb	r0, [r3, #396]!	; 0x18c
   346d8:	cmp	r0, #0
   346dc:	subeq	r3, r3, #308	; 0x134
   346e0:	mov	r0, r5
   346e4:	ldr	r1, [pc, #656]	; 3497c <burst_TS6+0x710>
   346e8:	add	r1, pc, r1
   346ec:	bl	e3a8 <sprintf@plt>
   346f0:	add	r5, r5, r8
   346f4:	add	r9, r9, r8
   346f8:	ldr	r4, [r4, #8]
   346fc:	cmp	r4, #0
   34700:	bne	34654 <burst_TS6+0x3e8>
   34704:	b	3470c <burst_TS6+0x4a0>
   34708:	mov	r5, sl
   3470c:	ldr	r9, [sp, #48]	; 0x30
   34710:	ldr	r0, [r9, #132]	; 0x84
   34714:	cmp	r0, #0
   34718:	movne	r0, #0
   3471c:	strbne	r0, [r5, #-1]
   34720:	ldr	r8, [sp, #56]	; 0x38
   34724:	mov	r0, r8
   34728:	ldr	r1, [pc, #592]	; 34980 <burst_TS6+0x714>
   3472c:	add	r1, pc, r1
   34730:	ldr	r2, [pc, #588]	; 34984 <burst_TS6+0x718>
   34734:	add	r2, pc, r2
   34738:	bl	d1e4 <sendto_one@plt>
   3473c:	ldr	r0, [r9, #168]	; 0xa8
   34740:	cmp	r0, #0
   34744:	ldr	r7, [sp, #52]	; 0x34
   34748:	ldr	r4, [pc, #568]	; 34988 <burst_TS6+0x71c>
   3474c:	add	r4, pc, r4
   34750:	beq	34768 <burst_TS6+0x4fc>
   34754:	add	r2, r9, #160	; 0xa0
   34758:	mov	r0, r8
   3475c:	mov	r1, r9
   34760:	mov	r3, #98	; 0x62
   34764:	bl	34f20 <burst_modes_TS6>
   34768:	ldr	r0, [pc, #540]	; 3498c <burst_TS6+0x720>
   3476c:	ldr	r0, [pc, r0]
   34770:	ldr	r0, [r0]
   34774:	ldr	r1, [r8, #432]	; 0x1b0
   34778:	ldr	r1, [r1, #296]	; 0x128
   3477c:	and	r1, r0, r1
   34780:	cmp	r1, r0
   34784:	bne	347a8 <burst_TS6+0x53c>
   34788:	ldr	r0, [r9, #180]	; 0xb4
   3478c:	cmp	r0, #0
   34790:	beq	347a8 <burst_TS6+0x53c>
   34794:	add	r2, r9, #172	; 0xac
   34798:	mov	r0, r8
   3479c:	mov	r1, r9
   347a0:	mov	r3, #101	; 0x65
   347a4:	bl	34f20 <burst_modes_TS6>
   347a8:	ldr	r0, [pc, #480]	; 34990 <burst_TS6+0x724>
   347ac:	ldr	r0, [pc, r0]
   347b0:	ldr	r0, [r0]
   347b4:	ldr	r1, [r8, #432]	; 0x1b0
   347b8:	ldr	r1, [r1, #296]	; 0x128
   347bc:	and	r1, r0, r1
   347c0:	cmp	r1, r0
   347c4:	bne	347e8 <burst_TS6+0x57c>
   347c8:	ldr	r0, [r9, #192]	; 0xc0
   347cc:	cmp	r0, #0
   347d0:	beq	347e8 <burst_TS6+0x57c>
   347d4:	add	r2, r9, #184	; 0xb8
   347d8:	mov	r0, r8
   347dc:	mov	r1, r9
   347e0:	mov	r3, #73	; 0x49
   347e4:	bl	34f20 <burst_modes_TS6>
   347e8:	ldr	r0, [r9, #204]	; 0xcc
   347ec:	cmp	r0, #0
   347f0:	beq	34808 <burst_TS6+0x59c>
   347f4:	add	r2, r9, #196	; 0xc4
   347f8:	mov	r0, r8
   347fc:	mov	r1, r9
   34800:	mov	r3, #113	; 0x71
   34804:	bl	34f20 <burst_modes_TS6>
   34808:	ldr	r0, [pc, #388]	; 34994 <burst_TS6+0x728>
   3480c:	ldr	r0, [pc, r0]
   34810:	ldr	r0, [r0]
   34814:	ldr	r1, [r8, #432]	; 0x1b0
   34818:	ldr	r1, [r1, #296]	; 0x128
   3481c:	and	r1, r0, r1
   34820:	cmp	r1, r0
   34824:	bne	34880 <burst_TS6+0x614>
   34828:	ldr	r0, [r9, #108]	; 0x6c
   3482c:	cmp	r0, #0
   34830:	beq	34880 <burst_TS6+0x614>
   34834:	ldr	r1, [r9, #116]	; 0x74
   34838:	ldr	r3, [r9, #236]	; 0xec
   3483c:	ldr	r2, [pc, #340]	; 34998 <burst_TS6+0x72c>
   34840:	ldr	r2, [pc, r2]
   34844:	ldr	r6, [r2, #56]	; 0x38
   34848:	cmp	r6, #0
   3484c:	mov	r2, r4
   34850:	ldrne	r2, [r9, #112]	; 0x70
   34854:	cmp	r6, #0
   34858:	ldr	r6, [pc, #316]	; 3499c <burst_TS6+0x730>
   3485c:	add	r6, pc, r6
   34860:	moveq	r6, r4
   34864:	stm	sp, {r1, r2, r6}
   34868:	str	r0, [sp, #12]
   3486c:	mov	r0, r8
   34870:	ldr	r1, [pc, #296]	; 349a0 <burst_TS6+0x734>
   34874:	add	r1, pc, r1
   34878:	ldr	r2, [sp, #44]	; 0x2c
   3487c:	bl	d1e4 <sendto_one@plt>
   34880:	ldr	r0, [pc, #284]	; 349a4 <burst_TS6+0x738>
   34884:	ldr	r0, [pc, r0]
   34888:	ldr	r0, [r0]
   3488c:	ldr	r1, [r8, #432]	; 0x1b0
   34890:	ldr	r1, [r1, #296]	; 0x128
   34894:	and	r1, r0, r1
   34898:	cmp	r1, r0
   3489c:	bne	348e0 <burst_TS6+0x674>
   348a0:	ldr	r1, [r9, #104]	; 0x68
   348a4:	ldr	r3, [r9, #232]	; 0xe8
   348a8:	ldr	r0, [r9, #236]	; 0xec
   348ac:	cmp	r1, #0
   348b0:	mov	r2, r4
   348b4:	beq	348c8 <burst_TS6+0x65c>
   348b8:	ldrb	r2, [r1]
   348bc:	cmp	r2, #0
   348c0:	moveq	r1, r4
   348c4:	mov	r2, r1
   348c8:	stm	sp, {r0, r2}
   348cc:	mov	r0, r8
   348d0:	ldr	r1, [pc, #208]	; 349a8 <burst_TS6+0x73c>
   348d4:	add	r1, pc, r1
   348d8:	ldr	r2, [sp, #44]	; 0x2c
   348dc:	bl	d1e4 <sendto_one@plt>
   348e0:	str	r9, [sp, #64]	; 0x40
   348e4:	ldr	r0, [pc, #192]	; 349ac <burst_TS6+0x740>
   348e8:	ldr	r0, [pc, r0]
   348ec:	ldr	r0, [r0]
   348f0:	add	r1, sp, #60	; 0x3c
   348f4:	bl	e654 <call_hook@plt>
   348f8:	ldr	r7, [r7, #8]
   348fc:	cmp	r7, #0
   34900:	bne	345e4 <burst_TS6+0x378>
   34904:	mov	r0, #0
   34908:	str	r0, [sp, #76]	; 0x4c
   3490c:	ldr	r0, [pc, #156]	; 349b0 <burst_TS6+0x744>
   34910:	ldr	r0, [pc, r0]
   34914:	ldr	r0, [r0]
   34918:	add	r1, sp, #72	; 0x48
   3491c:	bl	e654 <call_hook@plt>
   34920:	sub	sp, fp, #28
   34924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34928:	.word	0x00026808
   3492c:	.word	0x000136c9
   34930:	.word	0x000266b0
   34934:	.word	0x0000cf69
   34938:	.word	0x0000cf31
   3493c:	.word	0x00011f2e
   34940:	.word	0x000263a8
   34944:	.word	0x00026580
   34948:	.word	0x00036b44
   3494c:	.word	0x00011ddf
   34950:	.word	0x00011f0a
   34954:	.word	0x00011eef
   34958:	.word	0x00026564
   3495c:	.word	0x00011eb6
   34960:	.word	0x00011e9e
   34964:	.word	0x00026640
   34968:	.word	0x00011e67
   3496c:	.word	0x0001211c
   34970:	.word	0x00026514
   34974:	.word	0x00012fbd
   34978:	.word	0x00036aa8
   3497c:	.word	0x0000c2dc
   34980:	.word	0x00012f39
   34984:	.word	0x00036a24
   34988:	.word	0x000110b9
   3498c:	.word	0x00026310
   34990:	.word	0x000262c8
   34994:	.word	0x00026108
   34998:	.word	0x000262d8
   3499c:	.word	0x0001190c
   349a0:	.word	0x00011ba1
   349a4:	.word	0x00026010
   349a8:	.word	0x0000c691
   349ac:	.word	0x00025fb4
   349b0:	.word	0x0002611c

000349b4 <__bswap_16>:
   349b4:	rev16	r0, r0
   349b8:	bx	lr

000349bc <serv_connect_ssl_callback>:
   349bc:	push	{r4, r5, r6, sl, fp, lr}
   349c0:	add	fp, sp, #16
   349c4:	sub	sp, sp, #16
   349c8:	mov	r4, r2
   349cc:	mov	r6, r1
   349d0:	mov	r5, r0
   349d4:	ldr	r0, [r2, #432]	; 0x1b0
   349d8:	add	r1, r0, #140	; 0x8c
   349dc:	mov	r0, r5
   349e0:	mov	r2, #128	; 0x80
   349e4:	bl	d334 <rb_connect_sockaddr@plt>
   349e8:	cmp	r6, #0
   349ec:	beq	349fc <serv_connect_ssl_callback+0x40>
   349f0:	mov	r0, r5
   349f4:	mov	r1, r6
   349f8:	b	34a9c <serv_connect_ssl_callback+0xe0>
   349fc:	ldr	r0, [pc, #168]	; 34aac <serv_connect_ssl_callback+0xf0>
   34a00:	add	r0, pc, r0
   34a04:	add	r3, sp, #8
   34a08:	add	r1, r3, #4
   34a0c:	str	r1, [sp]
   34a10:	str	r0, [sp, #4]
   34a14:	mov	r0, #1
   34a18:	mov	r1, #1
   34a1c:	mov	r2, #0
   34a20:	bl	d514 <rb_socketpair@plt>
   34a24:	cmn	r0, #1
   34a28:	beq	34a88 <serv_connect_ssl_callback+0xcc>
   34a2c:	ldr	r0, [r4, #432]	; 0x1b0
   34a30:	ldr	r1, [sp, #8]
   34a34:	ldr	r2, [pc, #120]	; 34ab4 <serv_connect_ssl_callback+0xf8>
   34a38:	add	r2, pc, r2
   34a3c:	str	r2, [r0, #448]	; 0x1c0
   34a40:	str	r1, [r0, #300]	; 0x12c
   34a44:	ldr	r6, [sp, #12]
   34a48:	mov	r0, r4
   34a4c:	bl	dbec <connid_get@plt>
   34a50:	mov	r2, r0
   34a54:	mov	r0, r5
   34a58:	mov	r1, r6
   34a5c:	bl	d1d8 <start_ssld_connect@plt>
   34a60:	ldr	r1, [r4, #432]	; 0x1b0
   34a64:	str	r0, [r1, #436]	; 0x1b4
   34a68:	cmp	r0, #0
   34a6c:	ldrne	r0, [r1, #452]	; 0x1c4
   34a70:	orrne	r0, r0, #1
   34a74:	strne	r0, [r1, #452]	; 0x1c4
   34a78:	subne	sp, fp, #16
   34a7c:	popne	{r4, r5, r6, sl, fp, pc}
   34a80:	ldr	r0, [r1, #300]	; 0x12c
   34a84:	b	34a98 <serv_connect_ssl_callback+0xdc>
   34a88:	ldr	r0, [pc, #32]	; 34ab0 <serv_connect_ssl_callback+0xf4>
   34a8c:	add	r0, pc, r0
   34a90:	bl	d604 <ilog_error@plt>
   34a94:	mov	r0, r5
   34a98:	mov	r1, #5
   34a9c:	mov	r2, r4
   34aa0:	bl	34ab8 <serv_connect_callback>
   34aa4:	sub	sp, fp, #16
   34aa8:	pop	{r4, r5, r6, sl, fp, pc}
   34aac:	.word	0x00011a48
   34ab0:	.word	0x000119d5
   34ab4:	.word	0x00000644

00034ab8 <serv_connect_callback>:
   34ab8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   34abc:	add	fp, sp, #24
   34ac0:	sub	sp, sp, #16
   34ac4:	cmp	r2, #0
   34ac8:	subeq	sp, fp, #24
   34acc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   34ad0:	mov	r4, r2
   34ad4:	mov	r7, r1
   34ad8:	mov	r6, r0
   34adc:	add	r5, r2, #88	; 0x58
   34ae0:	mov	r0, #0
   34ae4:	mov	r1, r5
   34ae8:	bl	df04 <find_server@plt>
   34aec:	cmp	r0, #0
   34af0:	beq	34b08 <serv_connect_callback+0x50>
   34af4:	ldr	r2, [pc, #936]	; 34ea4 <serv_connect_callback+0x3ec>
   34af8:	ldr	r2, [pc, r2]
   34afc:	ldr	r3, [pc, #932]	; 34ea8 <serv_connect_callback+0x3f0>
   34b00:	add	r3, pc, r3
   34b04:	b	34cdc <serv_connect_callback+0x224>
   34b08:	ldr	r0, [r4, #432]	; 0x1b0
   34b0c:	ldr	r1, [r0, #436]	; 0x1b4
   34b10:	cmp	r1, #0
   34b14:	beq	34b94 <serv_connect_callback+0xdc>
   34b18:	cmp	r7, #0
   34b1c:	beq	34bac <serv_connect_callback+0xf4>
   34b20:	cmp	r7, #6
   34b24:	cmpne	r7, #3
   34b28:	bne	34c4c <serv_connect_callback+0x194>
   34b2c:	mov	r0, r4
   34b30:	bl	dea4 <is_remote_connect@plt>
   34b34:	mov	r6, r0
   34b38:	mov	r0, r7
   34b3c:	bl	e2ac <rb_errstr@plt>
   34b40:	ldr	r1, [pc, #868]	; 34eac <serv_connect_callback+0x3f4>
   34b44:	add	r1, pc, r1
   34b48:	str	r1, [sp]
   34b4c:	str	r0, [sp, #4]
   34b50:	cmp	r6, #0
   34b54:	movwne	r6, #256	; 0x100
   34b58:	ldr	r8, [pc, #848]	; 34eb0 <serv_connect_callback+0x3f8>
   34b5c:	add	r8, pc, r8
   34b60:	mov	r0, #256	; 0x100
   34b64:	mov	r1, r6
   34b68:	mov	r2, r8
   34b6c:	mov	r3, r5
   34b70:	bl	d640 <sendto_realops_snomask@plt>
   34b74:	mov	r0, r7
   34b78:	bl	e2ac <rb_errstr@plt>
   34b7c:	str	r0, [sp]
   34b80:	movw	r0, #291	; 0x123
   34b84:	add	r3, r4, r0
   34b88:	mov	r0, #5
   34b8c:	mov	r1, r8
   34b90:	b	34cc0 <serv_connect_callback+0x208>
   34b94:	add	r1, r0, #140	; 0x8c
   34b98:	mov	r0, r6
   34b9c:	mov	r2, #128	; 0x80
   34ba0:	bl	d334 <rb_connect_sockaddr@plt>
   34ba4:	cmp	r7, #0
   34ba8:	bne	34b20 <serv_connect_callback+0x68>
   34bac:	ldr	r0, [r4, #432]	; 0x1b0
   34bb0:	ldr	r7, [r0, #136]	; 0x88
   34bb4:	cmp	r7, #0
   34bb8:	beq	34cf0 <serv_connect_callback+0x238>
   34bbc:	ldr	r0, [r7, #280]	; 0x118
   34bc0:	cmp	r0, #0
   34bc4:	beq	34d2c <serv_connect_callback+0x274>
   34bc8:	ldr	r1, [r4, #444]	; 0x1bc
   34bcc:	cmp	r1, #0
   34bd0:	beq	34be0 <serv_connect_callback+0x128>
   34bd4:	bl	d340 <rb_strcasecmp@plt>
   34bd8:	cmp	r0, #0
   34bdc:	beq	34d2c <serv_connect_callback+0x274>
   34be0:	mov	r0, r4
   34be4:	bl	dea4 <is_remote_connect@plt>
   34be8:	mov	r1, r0
   34bec:	ldr	r0, [r4, #444]	; 0x1bc
   34bf0:	str	r0, [sp]
   34bf4:	cmp	r1, #0
   34bf8:	movwne	r1, #256	; 0x100
   34bfc:	ldr	r2, [pc, #712]	; 34ecc <serv_connect_callback+0x414>
   34c00:	add	r2, pc, r2
   34c04:	mov	r0, #256	; 0x100
   34c08:	mov	r3, r5
   34c0c:	bl	d640 <sendto_realops_snomask@plt>
   34c10:	ldr	r5, [r4, #444]	; 0x1bc
   34c14:	mov	r0, r4
   34c18:	mov	r1, #1
   34c1c:	bl	e168 <log_client_name@plt>
   34c20:	mov	r3, r0
   34c24:	ldr	r1, [pc, #676]	; 34ed0 <serv_connect_callback+0x418>
   34c28:	add	r1, pc, r1
   34c2c:	mov	r0, #5
   34c30:	mov	r2, r5
   34c34:	bl	e0b4 <ilog@plt>
   34c38:	ldr	r2, [pc, #660]	; 34ed4 <serv_connect_callback+0x41c>
   34c3c:	ldr	r2, [pc, r2]
   34c40:	ldr	r3, [pc, #656]	; 34ed8 <serv_connect_callback+0x420>
   34c44:	add	r3, pc, r3
   34c48:	b	34cdc <serv_connect_callback+0x224>
   34c4c:	mov	r0, r6
   34c50:	bl	e4bc <rb_get_sockerr@plt>
   34c54:	bl	dacc <strerror@plt>
   34c58:	mov	r8, r0
   34c5c:	mov	r0, r4
   34c60:	bl	dea4 <is_remote_connect@plt>
   34c64:	mov	r6, r0
   34c68:	mov	r0, r7
   34c6c:	bl	e2ac <rb_errstr@plt>
   34c70:	ldr	r1, [pc, #572]	; 34eb4 <serv_connect_callback+0x3fc>
   34c74:	add	r1, pc, r1
   34c78:	str	r1, [sp]
   34c7c:	stmib	sp, {r0, r8}
   34c80:	cmp	r6, #0
   34c84:	movwne	r6, #256	; 0x100
   34c88:	ldr	r9, [pc, #552]	; 34eb8 <serv_connect_callback+0x400>
   34c8c:	add	r9, pc, r9
   34c90:	mov	r0, #256	; 0x100
   34c94:	mov	r1, r6
   34c98:	mov	r2, r9
   34c9c:	mov	r3, r5
   34ca0:	bl	d640 <sendto_realops_snomask@plt>
   34ca4:	mov	r0, r7
   34ca8:	bl	e2ac <rb_errstr@plt>
   34cac:	stm	sp, {r0, r8}
   34cb0:	movw	r0, #291	; 0x123
   34cb4:	add	r3, r4, r0
   34cb8:	mov	r0, #5
   34cbc:	mov	r1, r9
   34cc0:	mov	r2, r5
   34cc4:	bl	e0b4 <ilog@plt>
   34cc8:	mov	r0, r7
   34ccc:	bl	e2ac <rb_errstr@plt>
   34cd0:	mov	r3, r0
   34cd4:	ldr	r2, [pc, #480]	; 34ebc <serv_connect_callback+0x404>
   34cd8:	ldr	r2, [pc, r2]
   34cdc:	mov	r0, r4
   34ce0:	mov	r1, r4
   34ce4:	sub	sp, fp, #24
   34ce8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   34cec:	b	e534 <exit_client@plt>
   34cf0:	mov	r0, r4
   34cf4:	bl	dea4 <is_remote_connect@plt>
   34cf8:	mov	r1, r0
   34cfc:	cmp	r0, #0
   34d00:	movwne	r1, #256	; 0x100
   34d04:	ldr	r2, [pc, #436]	; 34ec0 <serv_connect_callback+0x408>
   34d08:	add	r2, pc, r2
   34d0c:	mov	r0, #256	; 0x100
   34d10:	mov	r3, r5
   34d14:	bl	d640 <sendto_realops_snomask@plt>
   34d18:	ldr	r2, [pc, #420]	; 34ec4 <serv_connect_callback+0x40c>
   34d1c:	ldr	r2, [pc, r2]
   34d20:	ldr	r3, [pc, #416]	; 34ec8 <serv_connect_callback+0x410>
   34d24:	add	r3, pc, r3
   34d28:	b	34cdc <serv_connect_callback+0x224>
   34d2c:	mov	r0, #0
   34d30:	strb	r0, [r4, #82]	; 0x52
   34d34:	mov	r0, #2
   34d38:	strh	r0, [r4, #80]	; 0x50
   34d3c:	ldr	r0, [r7, #276]	; 0x114
   34d40:	cmp	r0, #0
   34d44:	beq	34d60 <serv_connect_callback+0x2a8>
   34d48:	ldrb	r1, [r0]
   34d4c:	ldr	r2, [pc, #396]	; 34ee0 <serv_connect_callback+0x428>
   34d50:	add	r2, pc, r2
   34d54:	cmp	r1, #0
   34d58:	movne	r2, r0
   34d5c:	b	34d68 <serv_connect_callback+0x2b0>
   34d60:	ldr	r2, [pc, #372]	; 34edc <serv_connect_callback+0x424>
   34d64:	add	r2, pc, r2
   34d68:	ldr	r8, [pc, #372]	; 34ee4 <serv_connect_callback+0x42c>
   34d6c:	ldr	r8, [pc, r8]
   34d70:	add	r0, r8, #396	; 0x18c
   34d74:	str	r0, [sp]
   34d78:	ldr	r1, [pc, #360]	; 34ee8 <serv_connect_callback+0x430>
   34d7c:	add	r1, pc, r1
   34d80:	mov	r0, r4
   34d84:	mov	r3, #6
   34d88:	bl	d1e4 <sendto_one@plt>
   34d8c:	ldr	r0, [pc, #344]	; 34eec <serv_connect_callback+0x434>
   34d90:	ldr	r0, [pc, r0]
   34d94:	ldr	r9, [r0]
   34d98:	ldr	r0, [pc, #336]	; 34ef0 <serv_connect_callback+0x438>
   34d9c:	ldr	r0, [pc, r0]
   34da0:	ldr	r0, [r0]
   34da4:	bl	d904 <capability_index_mask@plt>
   34da8:	ldr	r1, [pc, #324]	; 34ef4 <serv_connect_callback+0x43c>
   34dac:	ldr	r1, [pc, r1]
   34db0:	ldr	r1, [r1]
   34db4:	ldr	r2, [pc, #316]	; 34ef8 <serv_connect_callback+0x440>
   34db8:	ldr	r2, [pc, r2]
   34dbc:	ldr	r2, [r2]
   34dc0:	orr	r1, r2, r1
   34dc4:	bic	r0, r0, r1
   34dc8:	orr	r1, r0, r9
   34dcc:	ldr	r0, [pc, #296]	; 34efc <serv_connect_callback+0x444>
   34dd0:	ldr	r0, [pc, r0]
   34dd4:	ldr	r0, [r0]
   34dd8:	ldr	r2, [r7, #288]	; 0x120
   34ddc:	tst	r2, #8
   34de0:	orrne	r1, r1, r0
   34de4:	ldr	r0, [pc, #276]	; 34f00 <serv_connect_callback+0x448>
   34de8:	ldr	r0, [pc, r0]
   34dec:	ldr	r0, [r0]
   34df0:	tst	r2, #16
   34df4:	orrne	r1, r1, r0
   34df8:	mov	r0, r4
   34dfc:	bl	d0dc <send_capabilities@plt>
   34e00:	movw	r0, #345	; 0x159
   34e04:	add	r0, r8, r0
   34e08:	ldr	r1, [pc, #244]	; 34f04 <serv_connect_callback+0x44c>
   34e0c:	ldr	r1, [pc, r1]
   34e10:	ldr	r1, [r1, #8]
   34e14:	str	r0, [sp]
   34e18:	ldr	r0, [pc, #232]	; 34f08 <serv_connect_callback+0x450>
   34e1c:	add	r0, pc, r0
   34e20:	ldr	r3, [pc, #228]	; 34f0c <serv_connect_callback+0x454>
   34e24:	add	r3, pc, r3
   34e28:	cmp	r1, #0
   34e2c:	moveq	r3, r0
   34e30:	add	r2, r8, #88	; 0x58
   34e34:	ldr	r1, [pc, #212]	; 34f10 <serv_connect_callback+0x458>
   34e38:	add	r1, pc, r1
   34e3c:	mov	r0, r4
   34e40:	bl	d1e4 <sendto_one@plt>
   34e44:	ldrh	r0, [r4, #64]	; 0x40
   34e48:	movw	r1, #16418	; 0x4022
   34e4c:	tst	r0, r1
   34e50:	beq	34e90 <serv_connect_callback+0x3d8>
   34e54:	mov	r0, r4
   34e58:	bl	dea4 <is_remote_connect@plt>
   34e5c:	mov	r1, r0
   34e60:	cmp	r0, #0
   34e64:	movwne	r1, #256	; 0x100
   34e68:	ldr	r2, [pc, #164]	; 34f14 <serv_connect_callback+0x45c>
   34e6c:	add	r2, pc, r2
   34e70:	mov	r0, #256	; 0x100
   34e74:	mov	r3, r5
   34e78:	bl	d640 <sendto_realops_snomask@plt>
   34e7c:	ldr	r2, [pc, #148]	; 34f18 <serv_connect_callback+0x460>
   34e80:	ldr	r2, [pc, r2]
   34e84:	ldr	r3, [pc, #144]	; 34f1c <serv_connect_callback+0x464>
   34e88:	add	r3, pc, r3
   34e8c:	b	34cdc <serv_connect_callback+0x224>
   34e90:	mov	r0, r6
   34e94:	mov	r1, r4
   34e98:	sub	sp, fp, #24
   34e9c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   34ea0:	b	d76c <read_packet@plt>
   34ea4:	.word	0x00026060
   34ea8:	.word	0x00011981
   34eac:	.word	0x0000c9f1
   34eb0:	.word	0x00011933
   34eb4:	.word	0x0000c8c1
   34eb8:	.word	0x00011822
   34ebc:	.word	0x00025e80
   34ec0:	.word	0x000117ca
   34ec4:	.word	0x00025e3c
   34ec8:	.word	0x000117ca
   34ecc:	.word	0x00011903
   34ed0:	.word	0x00011913
   34ed4:	.word	0x00025f1c
   34ed8:	.word	0x00011931
   34edc:	.word	0x0000c5d9
   34ee0:	.word	0x0000c5ed
   34ee4:	.word	0x00025dec
   34ee8:	.word	0x000113c5
   34eec:	.word	0x00025d0c
   34ef0:	.word	0x00025ae4
   34ef4:	.word	0x00025b7c
   34ef8:	.word	0x00025aac
   34efc:	.word	0x00025b14
   34f00:	.word	0x00025b2c
   34f04:	.word	0x00025ba8
   34f08:	.word	0x000109e9
   34f0c:	.word	0x00011341
   34f10:	.word	0x0001131b
   34f14:	.word	0x0001171e
   34f18:	.word	0x00025cd8
   34f1c:	.word	0x00011720

00034f20 <burst_modes_TS6>:
   34f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34f24:	add	fp, sp, #28
   34f28:	sub	sp, sp, #20
   34f2c:	mov	r8, r2
   34f30:	str	r0, [sp, #16]
   34f34:	ldr	r7, [r1, #232]	; 0xe8
   34f38:	ldr	r0, [r1, #236]	; 0xec
   34f3c:	stm	sp, {r0, r3}
   34f40:	ldr	r0, [pc, #280]	; 35060 <burst_modes_TS6+0x140>
   34f44:	ldr	r0, [pc, r0]
   34f48:	add	r2, r0, #396	; 0x18c
   34f4c:	ldr	r6, [pc, #272]	; 35064 <burst_modes_TS6+0x144>
   34f50:	add	r6, pc, r6
   34f54:	ldr	r1, [pc, #268]	; 35068 <burst_modes_TS6+0x148>
   34f58:	add	r1, pc, r1
   34f5c:	mov	r0, r6
   34f60:	mov	r3, r7
   34f64:	bl	e3a8 <sprintf@plt>
   34f68:	add	r6, r6, r0
   34f6c:	ldr	sl, [r8]
   34f70:	cmp	sl, #0
   34f74:	beq	35038 <burst_modes_TS6+0x118>
   34f78:	mov	r4, r0
   34f7c:	mov	r5, r0
   34f80:	str	r6, [sp, #12]
   34f84:	ldr	r9, [sl]
   34f88:	ldr	r0, [r9]
   34f8c:	bl	dc94 <strlen@plt>
   34f90:	mov	r8, r0
   34f94:	ldr	r0, [r9, #12]
   34f98:	cmp	r0, #0
   34f9c:	mov	r1, #0
   34fa0:	beq	34fac <burst_modes_TS6+0x8c>
   34fa4:	bl	dc94 <strlen@plt>
   34fa8:	add	r1, r0, #1
   34fac:	add	r0, r8, r1
   34fb0:	add	r7, r0, #1
   34fb4:	add	r0, r7, r5
   34fb8:	movw	r1, #510	; 0x1fe
   34fbc:	cmp	r0, r1
   34fc0:	blt	34ff4 <burst_modes_TS6+0xd4>
   34fc4:	cmp	r5, r4
   34fc8:	beq	3502c <burst_modes_TS6+0x10c>
   34fcc:	mov	r0, #0
   34fd0:	strb	r0, [r6, #-1]
   34fd4:	ldr	r0, [sp, #16]
   34fd8:	ldr	r1, [pc, #140]	; 3506c <burst_modes_TS6+0x14c>
   34fdc:	add	r1, pc, r1
   34fe0:	ldr	r2, [pc, #136]	; 35070 <burst_modes_TS6+0x150>
   34fe4:	add	r2, pc, r2
   34fe8:	bl	d1e4 <sendto_one@plt>
   34fec:	ldr	r6, [sp, #12]
   34ff0:	mov	r5, r4
   34ff4:	ldr	r2, [r9]
   34ff8:	ldr	r3, [r9, #12]
   34ffc:	mov	r0, r6
   35000:	cmp	r3, #0
   35004:	beq	35018 <burst_modes_TS6+0xf8>
   35008:	ldr	r1, [pc, #100]	; 35074 <burst_modes_TS6+0x154>
   3500c:	add	r1, pc, r1
   35010:	bl	e3a8 <sprintf@plt>
   35014:	b	35024 <burst_modes_TS6+0x104>
   35018:	ldr	r1, [pc, #88]	; 35078 <burst_modes_TS6+0x158>
   3501c:	add	r1, pc, r1
   35020:	bl	e3a8 <sprintf@plt>
   35024:	add	r5, r5, r7
   35028:	add	r6, r6, r7
   3502c:	ldr	sl, [sl, #8]
   35030:	cmp	sl, #0
   35034:	bne	34f84 <burst_modes_TS6+0x64>
   35038:	mov	r0, #0
   3503c:	strb	r0, [r6, #-1]
   35040:	ldr	r1, [pc, #52]	; 3507c <burst_modes_TS6+0x15c>
   35044:	add	r1, pc, r1
   35048:	ldr	r2, [pc, #48]	; 35080 <burst_modes_TS6+0x160>
   3504c:	add	r2, pc, r2
   35050:	ldr	r0, [sp, #16]
   35054:	sub	sp, fp, #28
   35058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3505c:	b	d1e4 <sendto_one@plt>
   35060:	.word	0x00025c14
   35064:	.word	0x00036208
   35068:	.word	0x000114d3
   3506c:	.word	0x00012689
   35070:	.word	0x00036174
   35074:	.word	0x00011435
   35078:	.word	0x000122cb
   3507c:	.word	0x00012621
   35080:	.word	0x0003610c

00035084 <serv_connect_ssl_open_callback>:
   35084:	push	{fp, lr}
   35088:	mov	fp, sp
   3508c:	mov	r2, r0
   35090:	ldr	r0, [r0, #432]	; 0x1b0
   35094:	ldr	r0, [r0, #300]	; 0x12c
   35098:	bl	34ab8 <serv_connect_callback>
   3509c:	mov	r0, #1
   350a0:	pop	{fp, pc}

000350a4 <show_lusers>:
   350a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   350a8:	add	fp, sp, #24
   350ac:	sub	sp, sp, #16
   350b0:	mov	r4, r0
   350b4:	ldr	r5, [pc, #380]	; 35238 <show_lusers+0x194>
   350b8:	ldr	r5, [pc, r5]
   350bc:	ldr	r0, [r5, #8]
   350c0:	ldr	r8, [pc, #372]	; 3523c <show_lusers+0x198>
   350c4:	ldr	r8, [pc, r8]
   350c8:	ldr	r1, [r8]
   350cc:	cmp	r0, r1
   350d0:	strhi	r0, [r8]
   350d4:	ldr	r6, [pc, #356]	; 35240 <show_lusers+0x19c>
   350d8:	ldr	r6, [pc, r6]
   350dc:	ldr	r1, [r6, #8]
   350e0:	add	r0, r1, r0
   350e4:	ldr	r9, [pc, #344]	; 35244 <show_lusers+0x1a0>
   350e8:	ldr	r9, [pc, r9]
   350ec:	ldr	r1, [r9]
   350f0:	cmp	r0, r1
   350f4:	strhi	r0, [r9]
   350f8:	ldr	r7, [pc, #328]	; 35248 <show_lusers+0x1a4>
   350fc:	ldr	r7, [pc, r7]
   35100:	ldmib	r7, {r0, r1}
   35104:	ldr	r2, [pc, #320]	; 3524c <show_lusers+0x1a8>
   35108:	ldr	r2, [pc, r2]
   3510c:	ldr	r2, [r2, #8]
   35110:	stm	sp, {r1, r2}
   35114:	sub	r3, r0, r1
   35118:	ldr	r2, [pc, #304]	; 35250 <show_lusers+0x1ac>
   3511c:	add	r2, pc, r2
   35120:	mov	r0, r4
   35124:	mov	r1, #251	; 0xfb
   35128:	bl	dc88 <sendto_one_numeric@plt>
   3512c:	ldr	r0, [pc, #288]	; 35254 <show_lusers+0x1b0>
   35130:	ldr	r0, [pc, r0]
   35134:	ldr	r3, [r0, #8]
   35138:	cmp	r3, #0
   3513c:	beq	35154 <show_lusers+0xb0>
   35140:	ldr	r2, [pc, #272]	; 35258 <show_lusers+0x1b4>
   35144:	add	r2, pc, r2
   35148:	mov	r0, r4
   3514c:	mov	r1, #252	; 0xfc
   35150:	bl	dc88 <sendto_one_numeric@plt>
   35154:	ldr	r0, [pc, #256]	; 3525c <show_lusers+0x1b8>
   35158:	ldr	r0, [pc, r0]
   3515c:	ldr	r3, [r0, #8]
   35160:	cmp	r3, #0
   35164:	beq	3517c <show_lusers+0xd8>
   35168:	ldr	r2, [pc, #240]	; 35260 <show_lusers+0x1bc>
   3516c:	add	r2, pc, r2
   35170:	mov	r0, r4
   35174:	mov	r1, #253	; 0xfd
   35178:	bl	dc88 <sendto_one_numeric@plt>
   3517c:	ldr	r0, [pc, #224]	; 35264 <show_lusers+0x1c0>
   35180:	ldr	r0, [pc, r0]
   35184:	ldr	r3, [r0, #8]
   35188:	cmp	r3, #0
   3518c:	beq	351a4 <show_lusers+0x100>
   35190:	ldr	r2, [pc, #208]	; 35268 <show_lusers+0x1c4>
   35194:	add	r2, pc, r2
   35198:	mov	r0, r4
   3519c:	mov	r1, #254	; 0xfe
   351a0:	bl	dc88 <sendto_one_numeric@plt>
   351a4:	ldr	r3, [r5, #8]
   351a8:	ldr	r0, [r6, #8]
   351ac:	str	r0, [sp]
   351b0:	ldr	r2, [pc, #180]	; 3526c <show_lusers+0x1c8>
   351b4:	add	r2, pc, r2
   351b8:	mov	r0, r4
   351bc:	mov	r1, #255	; 0xff
   351c0:	bl	dc88 <sendto_one_numeric@plt>
   351c4:	ldr	r3, [r5, #8]
   351c8:	ldr	r0, [r7, #12]
   351cc:	stm	sp, {r0, r3}
   351d0:	str	r0, [sp, #8]
   351d4:	ldr	r2, [pc, #148]	; 35270 <show_lusers+0x1cc>
   351d8:	add	r2, pc, r2
   351dc:	mov	r0, r4
   351e0:	movw	r1, #265	; 0x109
   351e4:	bl	dc88 <sendto_one_numeric@plt>
   351e8:	ldr	r3, [r7, #4]
   351ec:	ldr	r0, [r7, #16]
   351f0:	stm	sp, {r0, r3}
   351f4:	str	r0, [sp, #8]
   351f8:	ldr	r2, [pc, #116]	; 35274 <show_lusers+0x1d0>
   351fc:	add	r2, pc, r2
   35200:	mov	r0, r4
   35204:	movw	r1, #266	; 0x10a
   35208:	bl	dc88 <sendto_one_numeric@plt>
   3520c:	ldr	r3, [r9]
   35210:	ldr	r0, [r8]
   35214:	ldr	r1, [r7, #20]
   35218:	stm	sp, {r0, r1}
   3521c:	ldr	r2, [pc, #84]	; 35278 <show_lusers+0x1d4>
   35220:	add	r2, pc, r2
   35224:	mov	r0, r4
   35228:	mov	r1, #250	; 0xfa
   3522c:	bl	dc88 <sendto_one_numeric@plt>
   35230:	sub	sp, fp, #24
   35234:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35238:	.word	0x00025a70
   3523c:	.word	0x00025a40
   35240:	.word	0x000258f8
   35244:	.word	0x000257f0
   35248:	.word	0x00025824
   3524c:	.word	0x00025770
   35250:	.word	0x000114bc
   35254:	.word	0x00025970
   35258:	.word	0x000114c7
   3525c:	.word	0x0002571c
   35260:	.word	0x000114b8
   35264:	.word	0x000257ec
   35268:	.word	0x000114aa
   3526c:	.word	0x0001149f
   35270:	.word	0x0001149d
   35274:	.word	0x0001149f
   35278:	.word	0x000114a2

0003527c <register_local_user>:
   3527c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35280:	add	fp, sp, #28
   35284:	sub	sp, sp, #564	; 0x234
   35288:	mvn	sl, #0
   3528c:	cmp	r1, #0
   35290:	beq	352b0 <register_local_user+0x34>
   35294:	mov	r6, r1
   35298:	mov	r5, r0
   3529c:	mov	r4, r1
   352a0:	ldr	r0, [r4, #64]!	; 0x40
   352a4:	movw	r1, #16418	; 0x4022
   352a8:	tst	r0, r1
   352ac:	beq	352bc <register_local_user+0x40>
   352b0:	mov	r0, sl
   352b4:	sub	sp, fp, #28
   352b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   352bc:	ldr	r9, [pc, #2564]	; 35cc8 <register_local_user+0xa4c>
   352c0:	ldr	r9, [pc, r9]
   352c4:	ldr	r1, [r9, #252]	; 0xfc
   352c8:	cmp	r1, #0
   352cc:	beq	352f8 <register_local_user+0x7c>
   352d0:	tst	r0, #1
   352d4:	bne	352e8 <register_local_user+0x6c>
   352d8:	ldr	r1, [r6, #432]	; 0x1b0
   352dc:	ldr	r1, [r1, #348]	; 0x15c
   352e0:	cmp	r1, #0
   352e4:	beq	35398 <register_local_user+0x11c>
   352e8:	and	r0, r0, #80	; 0x50
   352ec:	teq	r0, #64	; 0x40
   352f0:	bne	352b0 <register_local_user+0x34>
   352f4:	b	35300 <register_local_user+0x84>
   352f8:	tst	r0, #16
   352fc:	bne	352b0 <register_local_user+0x34>
   35300:	ldr	r0, [r6, #436]	; 0x1b4
   35304:	ldr	r0, [r0, #108]	; 0x6c
   35308:	cmp	r0, #0
   3530c:	bne	352b0 <register_local_user+0x34>
   35310:	bl	d07c <rb_current_time@plt>
   35314:	ldr	r1, [r5, #432]	; 0x1b0
   35318:	str	r0, [r1, #312]	; 0x138
   3531c:	ldr	r1, [r6, #432]	; 0x1b0
   35320:	str	r0, [r1, #48]	; 0x30
   35324:	ldrb	r0, [r4]
   35328:	tst	r0, #128	; 0x80
   3532c:	bne	353d8 <register_local_user+0x15c>
   35330:	add	r7, r6, #152	; 0x98
   35334:	mov	r0, r7
   35338:	mov	r1, #91	; 0x5b
   3533c:	bl	dce8 <strchr@plt>
   35340:	cmp	r0, #0
   35344:	beq	353d8 <register_local_user+0x15c>
   35348:	ldrb	r7, [r7]
   3534c:	mov	ip, #0
   35350:	cmp	r7, #0
   35354:	mov	r1, #0
   35358:	beq	3538c <register_local_user+0x110>
   3535c:	add	r2, r6, #153	; 0x99
   35360:	mov	r1, #0
   35364:	add	r3, sp, #37	; 0x25
   35368:	uxtb	r0, r7
   3536c:	cmp	r0, #91	; 0x5b
   35370:	strbne	r7, [r3, r1]
   35374:	addne	r1, r1, #1
   35378:	cmp	r1, #9
   3537c:	bgt	3538c <register_local_user+0x110>
   35380:	ldrb	r7, [r2], #1
   35384:	cmp	r7, #0
   35388:	bne	35368 <register_local_user+0xec>
   3538c:	add	r0, sp, #37	; 0x25
   35390:	strb	ip, [r0, r1]
   35394:	b	353e8 <register_local_user+0x16c>
   35398:	bl	e0a8 <rand@plt>
   3539c:	mov	r5, r0
   353a0:	bl	e0a8 <rand@plt>
   353a4:	mul	r0, r5, r0
   353a8:	mov	r1, #1
   353ac:	orr	r2, r1, r0, lsl #1
   353b0:	ldr	r0, [r6, #432]	; 0x1b0
   353b4:	str	r2, [r0, #348]	; 0x15c
   353b8:	ldr	r1, [pc, #2316]	; 35ccc <register_local_user+0xa50>
   353bc:	add	r1, pc, r1
   353c0:	mov	r0, r6
   353c4:	bl	d1e4 <sendto_one@plt>
   353c8:	ldr	r0, [r4]
   353cc:	orr	r0, r0, #1
   353d0:	str	r0, [r4]
   353d4:	b	352b0 <register_local_user+0x34>
   353d8:	add	r1, r6, #152	; 0x98
   353dc:	add	r0, sp, #37	; 0x25
   353e0:	mov	r2, #11
   353e4:	bl	e510 <rb_strlcpy@plt>
   353e8:	add	r2, sp, #37	; 0x25
   353ec:	mov	r0, r5
   353f0:	mov	r1, r6
   353f4:	bl	d4f0 <check_client@plt>
   353f8:	mvn	sl, #1
   353fc:	cmp	r0, #0
   35400:	blt	352b0 <register_local_user+0x34>
   35404:	ldr	r0, [r6, #436]	; 0x1b4
   35408:	ldrb	r0, [r0]
   3540c:	cmp	r0, #0
   35410:	beq	3546c <register_local_user+0x1f0>
   35414:	add	r7, r6, #88	; 0x58
   35418:	mov	r0, r7
   3541c:	mov	r1, r6
   35420:	bl	db20 <del_from_client_hash@plt>
   35424:	ldr	r1, [r6, #436]	; 0x1b4
   35428:	mov	r0, r7
   3542c:	mov	r2, #33	; 0x21
   35430:	bl	e510 <rb_strlcpy@plt>
   35434:	mov	r0, r7
   35438:	mov	r1, r6
   3543c:	bl	da48 <add_to_client_hash@plt>
   35440:	add	r8, sp, #48	; 0x30
   35444:	ldr	r2, [pc, #2180]	; 35cd0 <register_local_user+0xa54>
   35448:	add	r2, pc, r2
   3544c:	mov	r0, r8
   35450:	mov	r1, #73	; 0x49
   35454:	mov	r3, r7
   35458:	bl	de74 <snprintf@plt>
   3545c:	ldr	r0, [r6, #432]	; 0x1b0
   35460:	ldr	r0, [r0, #300]	; 0x12c
   35464:	mov	r1, r8
   35468:	bl	e270 <rb_note@plt>
   3546c:	add	r7, r6, #163	; 0xa3
   35470:	mov	r0, r7
   35474:	bl	e084 <valid_hostname@plt>
   35478:	cmp	r0, #0
   3547c:	bne	354a4 <register_local_user+0x228>
   35480:	ldr	r1, [pc, #2124]	; 35cd4 <register_local_user+0xa58>
   35484:	add	r1, pc, r1
   35488:	mov	r0, r6
   3548c:	bl	e414 <sendto_one_notice@plt>
   35490:	movw	r0, #291	; 0x123
   35494:	add	r1, r6, r0
   35498:	mov	r0, r7
   3549c:	mov	r2, #64	; 0x40
   354a0:	bl	e510 <rb_strlcpy@plt>
   354a4:	ldr	r0, [r6, #432]	; 0x1b0
   354a8:	ldr	lr, [r0, #132]	; 0x84
   354ac:	cmp	lr, #0
   354b0:	beq	35550 <register_local_user+0x2d4>
   354b4:	ldr	r8, [lr, #4]
   354b8:	tst	r8, #2
   354bc:	beq	35504 <register_local_user+0x288>
   354c0:	ldrb	r1, [r0, #452]	; 0x1c4
   354c4:	tst	r1, #1
   354c8:	bne	35504 <register_local_user+0x288>
   354cc:	ldr	r0, [pc, #2060]	; 35ce0 <register_local_user+0xa64>
   354d0:	ldr	r0, [pc, r0]
   354d4:	ldr	r1, [r0, #68]	; 0x44
   354d8:	add	r1, r1, #1
   354dc:	str	r1, [r0, #68]	; 0x44
   354e0:	ldr	r1, [pc, #2044]	; 35ce4 <register_local_user+0xa68>
   354e4:	add	r1, pc, r1
   354e8:	mov	r0, r6
   354ec:	bl	e414 <sendto_one_notice@plt>
   354f0:	ldr	r2, [pc, #2032]	; 35ce8 <register_local_user+0xa6c>
   354f4:	ldr	r2, [pc, r2]
   354f8:	ldr	r3, [pc, #2028]	; 35cec <register_local_user+0xa70>
   354fc:	add	r3, pc, r3
   35500:	b	35560 <register_local_user+0x2e4>
   35504:	tst	r8, #268435456	; 0x10000000
   35508:	bne	35570 <register_local_user+0x2f4>
   3550c:	ldr	r0, [r0, #452]	; 0x1c4
   35510:	ands	r0, r0, #8
   35514:	beq	35570 <register_local_user+0x2f4>
   35518:	ldr	r0, [pc, #2000]	; 35cf0 <register_local_user+0xa74>
   3551c:	ldr	r0, [pc, r0]
   35520:	ldr	r1, [r0, #68]	; 0x44
   35524:	add	r1, r1, #1
   35528:	str	r1, [r0, #68]	; 0x44
   3552c:	ldr	r1, [pc, #1984]	; 35cf4 <register_local_user+0xa78>
   35530:	add	r1, pc, r1
   35534:	mov	r0, r6
   35538:	bl	e414 <sendto_one_notice@plt>
   3553c:	ldr	r2, [pc, #1972]	; 35cf8 <register_local_user+0xa7c>
   35540:	ldr	r2, [pc, r2]
   35544:	ldr	r3, [pc, #1968]	; 35cfc <register_local_user+0xa80>
   35548:	add	r3, pc, r3
   3554c:	b	35560 <register_local_user+0x2e4>
   35550:	ldr	r2, [pc, #1920]	; 35cd8 <register_local_user+0xa5c>
   35554:	ldr	r2, [pc, r2]
   35558:	ldr	r3, [pc, #1916]	; 35cdc <register_local_user+0xa60>
   3555c:	add	r3, pc, r3
   35560:	mov	r0, r5
   35564:	mov	r1, r6
   35568:	bl	e534 <exit_client@plt>
   3556c:	b	352b0 <register_local_user+0x34>
   35570:	ldrb	r0, [r4]
   35574:	tst	r0, #128	; 0x80
   35578:	bne	35604 <register_local_user+0x388>
   3557c:	tst	r8, #8
   35580:	bne	358d0 <register_local_user+0x654>
   35584:	tst	r8, #512	; 0x200
   35588:	beq	355a8 <register_local_user+0x32c>
   3558c:	ldr	r0, [lr, #12]
   35590:	mov	r1, #64	; 0x40
   35594:	str	lr, [sp, #28]
   35598:	bl	dce8 <strchr@plt>
   3559c:	ldr	lr, [sp, #28]
   355a0:	cmp	r0, #0
   355a4:	bne	35604 <register_local_user+0x388>
   355a8:	mov	r0, #0
   355ac:	tst	r8, #4
   355b0:	moveq	r0, #126	; 0x7e
   355b4:	strbeq	r0, [r6, #152]	; 0x98
   355b8:	moveq	r0, #1
   355bc:	ldrb	r2, [sp, #37]	; 0x25
   355c0:	cmp	r2, #0
   355c4:	beq	355f8 <register_local_user+0x37c>
   355c8:	add	r1, sp, #37	; 0x25
   355cc:	add	r1, r1, #1
   355d0:	uxtb	r3, r2
   355d4:	cmp	r3, #91	; 0x5b
   355d8:	addne	r3, r6, r0
   355dc:	strbne	r2, [r3, #152]	; 0x98
   355e0:	addne	r0, r0, #1
   355e4:	cmp	r0, #9
   355e8:	bgt	355f8 <register_local_user+0x37c>
   355ec:	ldrb	r2, [r1], #1
   355f0:	cmp	r2, #0
   355f4:	bne	355d0 <register_local_user+0x354>
   355f8:	add	r0, r6, r0
   355fc:	mov	r1, #0
   35600:	strb	r1, [r0, #152]	; 0x98
   35604:	ldr	r3, [lr, #4]
   35608:	tst	r3, #262144	; 0x40000
   3560c:	beq	35620 <register_local_user+0x3a4>
   35610:	ldr	r0, [r6, #24]
   35614:	ldrb	r0, [r0, #40]	; 0x28
   35618:	cmp	r0, #0
   3561c:	beq	35998 <register_local_user+0x71c>
   35620:	ldr	r1, [lr, #20]
   35624:	cmp	r1, #0
   35628:	str	r7, [sp, #32]
   3562c:	ldrbne	r0, [r1]
   35630:	cmpne	r0, #0
   35634:	bne	35908 <register_local_user+0x68c>
   35638:	mov	r0, r6
   3563c:	mov	r1, lr
   35640:	mov	r7, lr
   35644:	bl	35e98 <report_and_set_user_flags>
   35648:	ldr	r0, [pc, #1764]	; 35d34 <register_local_user+0xab8>
   3564c:	ldr	r0, [pc, r0]
   35650:	ldr	r0, [r0]
   35654:	ldr	r1, [pc, #1756]	; 35d38 <register_local_user+0xabc>
   35658:	ldr	r1, [pc, r1]
   3565c:	ldr	r1, [r1, #8]
   35660:	cmp	r1, r0
   35664:	bcc	356bc <register_local_user+0x440>
   35668:	ldrb	r0, [r7, #4]
   3566c:	tst	r0, #128	; 0x80
   35670:	bne	356bc <register_local_user+0x440>
   35674:	ldr	r0, [sp, #32]
   35678:	str	r0, [sp]
   3567c:	add	r3, r6, #88	; 0x58
   35680:	ldr	r2, [pc, #1716]	; 35d3c <register_local_user+0xac0>
   35684:	add	r2, pc, r2
   35688:	mov	r0, #16
   3568c:	mov	r1, #0
   35690:	bl	d640 <sendto_realops_snomask@plt>
   35694:	ldr	r0, [pc, #1700]	; 35d40 <register_local_user+0xac4>
   35698:	ldr	r0, [pc, r0]
   3569c:	ldr	r1, [r0, #68]	; 0x44
   356a0:	add	r1, r1, #1
   356a4:	str	r1, [r0, #68]	; 0x44
   356a8:	ldr	r2, [pc, #1684]	; 35d44 <register_local_user+0xac8>
   356ac:	ldr	r2, [pc, r2]
   356b0:	ldr	r3, [pc, #1680]	; 35d48 <register_local_user+0xacc>
   356b4:	add	r3, pc, r3
   356b8:	b	35560 <register_local_user+0x2e4>
   356bc:	ldrb	r0, [r4, #2]
   356c0:	tst	r0, #64	; 0x40
   356c4:	bne	35724 <register_local_user+0x4a8>
   356c8:	movw	r0, #345	; 0x159
   356cc:	add	r0, r6, r0
   356d0:	mov	r1, #1
   356d4:	bl	e1b0 <find_xline@plt>
   356d8:	cmp	r0, #0
   356dc:	beq	35724 <register_local_user+0x4a8>
   356e0:	ldr	r1, [pc, #1636]	; 35d4c <register_local_user+0xad0>
   356e4:	ldr	r1, [pc, r1]
   356e8:	ldr	r2, [r1, #68]	; 0x44
   356ec:	add	r2, r2, #1
   356f0:	str	r2, [r1, #68]	; 0x44
   356f4:	ldr	r1, [r0, #16]
   356f8:	mov	r0, #0
   356fc:	str	r0, [sp]
   35700:	mov	r0, r6
   35704:	mov	r2, #0
   35708:	mov	r3, #0
   3570c:	bl	e138 <add_reject@plt>
   35710:	ldr	r2, [pc, #1592]	; 35d50 <register_local_user+0xad4>
   35714:	ldr	r2, [pc, r2]
   35718:	ldr	r3, [pc, #1588]	; 35d54 <register_local_user+0xad8>
   3571c:	add	r3, pc, r3
   35720:	b	35560 <register_local_user+0x2e4>
   35724:	mov	r0, r5
   35728:	mov	r1, r6
   3572c:	bl	3604c <authd_check>
   35730:	cmp	r0, #0
   35734:	bne	352b0 <register_local_user+0x34>
   35738:	add	r7, r6, #152	; 0x98
   3573c:	mov	r0, r7
   35740:	bl	e078 <valid_username@plt>
   35744:	cmp	r0, #0
   35748:	beq	359d0 <register_local_user+0x754>
   3574c:	add	r8, r6, #227	; 0xe3
   35750:	mov	r0, r8
   35754:	ldr	r1, [sp, #32]
   35758:	mov	r2, #64	; 0x40
   3575c:	bl	e510 <rb_strlcpy@plt>
   35760:	ldr	r1, [r6, #436]	; 0x1b4
   35764:	ldrb	r0, [r1, #33]!	; 0x21
   35768:	cmp	r0, #0
   3576c:	beq	3577c <register_local_user+0x500>
   35770:	mov	r0, r7
   35774:	mov	r2, #11
   35778:	bl	e510 <rb_strlcpy@plt>
   3577c:	ldr	r1, [r6, #436]	; 0x1b4
   35780:	ldrb	r0, [r1, #44]!	; 0x2c
   35784:	cmp	r0, #0
   35788:	beq	357c0 <register_local_user+0x544>
   3578c:	str	r8, [sp, #28]
   35790:	ldr	r8, [sp, #32]
   35794:	mov	r0, r8
   35798:	mov	r2, #64	; 0x40
   3579c:	bl	e510 <rb_strlcpy@plt>
   357a0:	mov	r0, r8
   357a4:	ldr	r8, [sp, #28]
   357a8:	mov	r1, r8
   357ac:	bl	e750 <irccmp@plt>
   357b0:	cmp	r0, #0
   357b4:	ldrne	r0, [r4]
   357b8:	orrne	r0, r0, #131072	; 0x20000
   357bc:	strne	r0, [r4]
   357c0:	ldr	r0, [r9, #216]	; 0xd8
   357c4:	ldr	r1, [r9, #312]	; 0x138
   357c8:	bic	r0, r1, r0
   357cc:	ldr	r1, [pc, #1432]	; 35d6c <register_local_user+0xaf0>
   357d0:	ldr	r1, [pc, r1]
   357d4:	bic	r0, r0, r1
   357d8:	ldr	r1, [r6, #56]	; 0x38
   357dc:	orr	r0, r1, r0
   357e0:	str	r0, [r6, #56]	; 0x38
   357e4:	ldr	r0, [pc, #1412]	; 35d70 <register_local_user+0xaf4>
   357e8:	ldr	r0, [pc, r0]
   357ec:	ldr	r0, [r0]
   357f0:	mov	r1, r6
   357f4:	bl	e654 <call_hook@plt>
   357f8:	ldrh	r0, [r4]
   357fc:	movw	r1, #16418	; 0x4022
   35800:	tst	r0, r1
   35804:	bne	352b0 <register_local_user+0x34>
   35808:	ldr	r0, [r6, #432]	; 0x1b0
   3580c:	add	r0, r0, #140	; 0x8c
   35810:	add	r4, sp, #48	; 0x30
   35814:	mov	r1, r4
   35818:	mov	r2, #53	; 0x35
   3581c:	bl	cf50 <rb_inet_ntop_sock@plt>
   35820:	mov	r0, #0
   35824:	mov	r1, r6
   35828:	bl	e60c <show_ip@plt>
   3582c:	mov	sl, r0
   35830:	movw	r0, #345	; 0x159
   35834:	add	r9, r6, r0
   35838:	mov	r0, r6
   3583c:	bl	d5f8 <get_client_class@plt>
   35840:	ldr	r2, [pc, #1324]	; 35d74 <register_local_user+0xaf8>
   35844:	add	r2, pc, r2
   35848:	cmp	sl, #0
   3584c:	mov	r1, r4
   35850:	moveq	r1, r2
   35854:	mov	sl, r2
   35858:	str	r7, [sp, #28]
   3585c:	str	r7, [sp]
   35860:	mov	r7, r8
   35864:	str	r8, [sp, #4]
   35868:	str	r1, [sp, #8]
   3586c:	str	r0, [sp, #12]
   35870:	str	r9, [sp, #16]
   35874:	add	r3, r6, #88	; 0x58
   35878:	ldr	r2, [pc, #1272]	; 35d78 <register_local_user+0xafc>
   3587c:	add	r2, pc, r2
   35880:	mov	r0, #4
   35884:	mov	r1, #0
   35888:	str	r3, [sp, #32]
   3588c:	bl	d640 <sendto_realops_snomask@plt>
   35890:	mov	r0, #0
   35894:	mov	r1, r6
   35898:	bl	e60c <show_ip@plt>
   3589c:	cmp	r0, #0
   358a0:	moveq	r4, sl
   358a4:	mov	r0, r6
   358a8:	bl	d5f8 <get_client_class@plt>
   358ac:	mov	sl, r0
   358b0:	mov	r0, #0
   358b4:	mov	r1, r6
   358b8:	bl	e60c <show_ip@plt>
   358bc:	cmp	r0, #0
   358c0:	beq	35ab0 <register_local_user+0x834>
   358c4:	ldr	r0, [r6, #432]	; 0x1b0
   358c8:	ldr	r0, [r0, #288]	; 0x120
   358cc:	b	35ab8 <register_local_user+0x83c>
   358d0:	ldr	r0, [pc, #1064]	; 35d00 <register_local_user+0xa84>
   358d4:	ldr	r0, [pc, r0]
   358d8:	ldr	r1, [r0, #68]	; 0x44
   358dc:	add	r1, r1, #1
   358e0:	str	r1, [r0, #68]	; 0x44
   358e4:	ldr	r1, [pc, #1048]	; 35d04 <register_local_user+0xa88>
   358e8:	add	r1, pc, r1
   358ec:	mov	r0, r6
   358f0:	bl	e414 <sendto_one_notice@plt>
   358f4:	ldr	r2, [pc, #1036]	; 35d08 <register_local_user+0xa8c>
   358f8:	ldr	r2, [pc, r2]
   358fc:	ldr	r3, [pc, #1032]	; 35d0c <register_local_user+0xa90>
   35900:	add	r3, pc, r3
   35904:	b	35560 <register_local_user+0x2e4>
   35908:	ldr	r0, [r6, #432]	; 0x1b0
   3590c:	ldr	ip, [r0, #276]	; 0x114
   35910:	ldr	r0, [pc, #1032]	; 35d20 <register_local_user+0xaa4>
   35914:	add	r0, pc, r0
   35918:	cmp	ip, #0
   3591c:	beq	35934 <register_local_user+0x6b8>
   35920:	ldrb	r2, [ip]
   35924:	cmp	r2, #0
   35928:	movne	r0, ip
   3592c:	tstne	r3, #2097152	; 0x200000
   35930:	bne	35a98 <register_local_user+0x81c>
   35934:	ldr	r1, [lr, #20]
   35938:	mov	r8, lr
   3593c:	bl	d0c4 <strcmp@plt>
   35940:	cmp	r0, #0
   35944:	beq	35a4c <register_local_user+0x7d0>
   35948:	ldr	r0, [pc, #980]	; 35d24 <register_local_user+0xaa8>
   3594c:	ldr	r0, [pc, r0]
   35950:	ldr	r1, [r0, #68]	; 0x44
   35954:	add	r1, r1, #1
   35958:	str	r1, [r0, #68]	; 0x44
   3595c:	add	r3, r6, #88	; 0x58
   35960:	ldr	r7, [pc, #960]	; 35d28 <register_local_user+0xaac>
   35964:	ldr	r7, [pc, r7]
   35968:	add	r2, r7, #88	; 0x58
   3596c:	ldr	r1, [pc, #952]	; 35d2c <register_local_user+0xab0>
   35970:	add	r1, pc, r1
   35974:	mov	r0, r6
   35978:	bl	d1e4 <sendto_one@plt>
   3597c:	ldr	r3, [pc, #940]	; 35d30 <register_local_user+0xab4>
   35980:	add	r3, pc, r3
   35984:	mov	r0, r5
   35988:	mov	r1, r6
   3598c:	mov	r2, r7
   35990:	bl	e534 <exit_client@plt>
   35994:	b	352b0 <register_local_user+0x34>
   35998:	ldr	r0, [pc, #880]	; 35d10 <register_local_user+0xa94>
   3599c:	ldr	r0, [pc, r0]
   359a0:	ldr	r1, [r0, #68]	; 0x44
   359a4:	add	r1, r1, #1
   359a8:	str	r1, [r0, #68]	; 0x44
   359ac:	ldr	r1, [pc, #864]	; 35d14 <register_local_user+0xa98>
   359b0:	add	r1, pc, r1
   359b4:	mov	r0, r6
   359b8:	bl	e414 <sendto_one_notice@plt>
   359bc:	ldr	r2, [pc, #852]	; 35d18 <register_local_user+0xa9c>
   359c0:	ldr	r2, [pc, r2]
   359c4:	ldr	r3, [pc, #848]	; 35d1c <register_local_user+0xaa0>
   359c8:	add	r3, pc, r3
   359cc:	b	35560 <register_local_user+0x2e4>
   359d0:	str	r7, [sp]
   359d4:	ldr	r0, [sp, #32]
   359d8:	str	r0, [sp, #4]
   359dc:	add	r3, r6, #88	; 0x58
   359e0:	ldr	r2, [pc, #880]	; 35d58 <register_local_user+0xadc>
   359e4:	add	r2, pc, r2
   359e8:	mov	r0, #128	; 0x80
   359ec:	mov	r1, #0
   359f0:	bl	d640 <sendto_realops_snomask@plt>
   359f4:	ldr	r0, [pc, #864]	; 35d5c <register_local_user+0xae0>
   359f8:	ldr	r0, [pc, r0]
   359fc:	ldr	r1, [r0, #68]	; 0x44
   35a00:	add	r1, r1, #1
   35a04:	str	r1, [r0, #68]	; 0x44
   35a08:	ldr	r1, [pc, #848]	; 35d60 <register_local_user+0xae4>
   35a0c:	add	r1, pc, r1
   35a10:	mov	r0, r6
   35a14:	bl	e414 <sendto_one_notice@plt>
   35a18:	add	r4, sp, #48	; 0x30
   35a1c:	ldr	r1, [pc, #832]	; 35d64 <register_local_user+0xae8>
   35a20:	add	r1, pc, r1
   35a24:	mov	r0, r4
   35a28:	mov	r2, r7
   35a2c:	bl	e3a8 <sprintf@plt>
   35a30:	ldr	r2, [pc, #816]	; 35d68 <register_local_user+0xaec>
   35a34:	ldr	r2, [pc, r2]
   35a38:	mov	r0, r5
   35a3c:	mov	r1, r6
   35a40:	mov	r3, r4
   35a44:	bl	e534 <exit_client@plt>
   35a48:	b	352b0 <register_local_user+0x34>
   35a4c:	mov	lr, r8
   35a50:	ldr	r0, [r6, #432]	; 0x1b0
   35a54:	ldr	r0, [r0, #276]	; 0x114
   35a58:	cmp	r0, #0
   35a5c:	beq	35638 <register_local_user+0x3bc>
   35a60:	str	r0, [sp, #28]
   35a64:	bl	dc94 <strlen@plt>
   35a68:	mov	r2, r0
   35a6c:	ldr	r0, [sp, #28]
   35a70:	mov	r1, #0
   35a74:	bl	df28 <memset@plt>
   35a78:	ldr	r0, [r6, #432]	; 0x1b0
   35a7c:	ldr	r0, [r0, #276]	; 0x114
   35a80:	bl	35e8c <rb_free>
   35a84:	mov	lr, r8
   35a88:	ldr	r0, [r6, #432]	; 0x1b0
   35a8c:	mov	r1, #0
   35a90:	str	r1, [r0, #276]	; 0x114
   35a94:	b	35638 <register_local_user+0x3bc>
   35a98:	mov	r8, lr
   35a9c:	bl	d988 <rb_crypt@plt>
   35aa0:	mov	lr, r8
   35aa4:	cmp	r0, #0
   35aa8:	bne	35934 <register_local_user+0x6b8>
   35aac:	b	35948 <register_local_user+0x6cc>
   35ab0:	ldr	r0, [pc, #708]	; 35d7c <register_local_user+0xb00>
   35ab4:	add	r0, pc, r0
   35ab8:	ldr	r1, [sp, #28]
   35abc:	stm	sp, {r1, r7}
   35ac0:	str	r4, [sp, #8]
   35ac4:	str	sl, [sp, #12]
   35ac8:	str	r0, [sp, #16]
   35acc:	str	r9, [sp, #20]
   35ad0:	ldr	r2, [pc, #680]	; 35d80 <register_local_user+0xb04>
   35ad4:	add	r2, pc, r2
   35ad8:	mov	r0, #1
   35adc:	mov	r1, #0
   35ae0:	ldr	r8, [sp, #32]
   35ae4:	mov	r3, r8
   35ae8:	bl	d640 <sendto_realops_snomask@plt>
   35aec:	mov	r0, r7
   35af0:	mov	r1, r6
   35af4:	bl	df10 <add_to_hostname_hash@plt>
   35af8:	mov	r4, r6
   35afc:	ldrb	r0, [r4, #396]!	; 0x18c
   35b00:	cmp	r0, #0
   35b04:	bne	35b28 <register_local_user+0x8ac>
   35b08:	bl	df88 <generate_uid@plt>
   35b0c:	mov	r1, r0
   35b10:	mov	r0, r4
   35b14:	mov	r2, #10
   35b18:	bl	e510 <rb_strlcpy@plt>
   35b1c:	mov	r0, r4
   35b20:	mov	r1, r6
   35b24:	bl	d0d0 <add_to_id_hash@plt>
   35b28:	ldr	r0, [r6, #432]	; 0x1b0
   35b2c:	ldr	r1, [r0, #452]	; 0x1c4
   35b30:	and	r1, r1, #17
   35b34:	cmp	r1, #1
   35b38:	ldreq	r1, [r6, #56]	; 0x38
   35b3c:	orreq	r1, r1, #16384	; 0x4000
   35b40:	streq	r1, [r6, #56]	; 0x38
   35b44:	ldrb	r1, [r6, #56]	; 0x38
   35b48:	tst	r1, #8
   35b4c:	beq	35b64 <register_local_user+0x8e8>
   35b50:	ldr	r1, [pc, #556]	; 35d84 <register_local_user+0xb08>
   35b54:	ldr	r1, [pc, r1]
   35b58:	ldr	r2, [r1, #8]
   35b5c:	add	r2, r2, #1
   35b60:	str	r2, [r1, #8]
   35b64:	bl	365cc <rb_dlinkMoveNode>
   35b68:	mov	r0, #64	; 0x40
   35b6c:	strh	r0, [r6, #80]	; 0x50
   35b70:	ldr	r0, [r6, #24]
   35b74:	cmp	r0, #0
   35b78:	ldrne	r0, [r0, #36]	; 0x24
   35b7c:	cmpne	r0, #0
   35b80:	bne	35c98 <register_local_user+0xa1c>
   35b84:	ldrb	r0, [r6, #57]	; 0x39
   35b88:	mov	r1, #1
   35b8c:	tst	r0, #16
   35b90:	ldrne	r0, [r6, #24]
   35b94:	cmpne	r0, #0
   35b98:	bne	35cb4 <register_local_user+0xa38>
   35b9c:	strb	r1, [r6, #82]	; 0x52
   35ba0:	ldr	r0, [pc, #484]	; 35d8c <register_local_user+0xb10>
   35ba4:	ldr	r0, [pc, r0]
   35ba8:	str	r0, [r6, #32]
   35bac:	ldr	r0, [r0, #28]
   35bb0:	add	r1, r6, #12
   35bb4:	add	r2, r0, #48	; 0x30
   35bb8:	mov	r0, r6
   35bbc:	bl	36698 <rb_dlinkAdd>
   35bc0:	ldr	r0, [pc, #456]	; 35d90 <register_local_user+0xb14>
   35bc4:	ldr	r0, [pc, r0]
   35bc8:	ldr	r2, [r0, #4]
   35bcc:	ldr	r3, [r0, #16]
   35bd0:	add	r1, r2, #1
   35bd4:	str	r1, [r0, #4]
   35bd8:	cmp	r2, r3
   35bdc:	strge	r1, [r0, #16]
   35be0:	ldr	r1, [r0, #12]
   35be4:	ldr	r2, [r0, #20]
   35be8:	add	r2, r2, #1
   35bec:	str	r2, [r0, #20]
   35bf0:	ldr	r2, [pc, #412]	; 35d94 <register_local_user+0xb18>
   35bf4:	ldr	r2, [pc, r2]
   35bf8:	ldr	r3, [r2, #8]
   35bfc:	cmp	r3, r1
   35c00:	bls	35c40 <register_local_user+0x9c4>
   35c04:	str	r3, [r0, #12]
   35c08:	movw	r0, #26215	; 0x6667
   35c0c:	movt	r0, #26214	; 0x6666
   35c10:	smmul	r0, r3, r0
   35c14:	asr	r1, r0, #2
   35c18:	add	r0, r1, r0, lsr #31
   35c1c:	add	r0, r0, r0, lsl #2
   35c20:	sub	r0, r3, r0, lsl #1
   35c24:	cmp	r0, #0
   35c28:	bne	35c40 <register_local_user+0x9c4>
   35c2c:	ldr	r2, [pc, #356]	; 35d98 <register_local_user+0xb1c>
   35c30:	add	r2, pc, r2
   35c34:	mov	r0, #256	; 0x100
   35c38:	mov	r1, #0
   35c3c:	bl	d640 <sendto_realops_snomask@plt>
   35c40:	movw	r0, #291	; 0x123
   35c44:	add	r0, r6, r0
   35c48:	bl	e768 <find_tgchange@plt>
   35c4c:	mov	r1, #4
   35c50:	cmp	r0, #0
   35c54:	movweq	r1, #10
   35c58:	ldr	r0, [r6, #432]	; 0x1b0
   35c5c:	str	r1, [r0, #412]	; 0x19c
   35c60:	mov	r0, r6
   35c64:	bl	ddfc <monitor_signon@plt>
   35c68:	mov	r0, r6
   35c6c:	bl	d2c8 <user_welcome@plt>
   35c70:	mov	r0, r6
   35c74:	bl	de50 <free_pre_client@plt>
   35c78:	mov	r0, #1
   35c7c:	str	r0, [sp]
   35c80:	mov	r0, r5
   35c84:	mov	r1, r6
   35c88:	mov	r3, r8
   35c8c:	bl	d0ac <introduce_client@plt>
   35c90:	mov	sl, #0
   35c94:	b	352b0 <register_local_user+0x34>
   35c98:	ldr	r1, [pc, #232]	; 35d88 <register_local_user+0xb0c>
   35c9c:	add	r1, pc, r1
   35ca0:	bl	e594 <privilegeset_in_set@plt>
   35ca4:	mov	r1, #5
   35ca8:	cmp	r0, #0
   35cac:	bne	35b9c <register_local_user+0x920>
   35cb0:	b	35b84 <register_local_user+0x908>
   35cb4:	ldr	r0, [r0, #36]	; 0x24
   35cb8:	mov	r1, #1
   35cbc:	cmp	r0, #0
   35cc0:	movweq	r1, #5
   35cc4:	b	35b9c <register_local_user+0x920>
   35cc8:	.word	0x000258bc
   35ccc:	.word	0x0001134c
   35cd0:	.word	0x0000be73
   35cd4:	.word	0x0001128f
   35cd8:	.word	0x00025604
   35cdc:	.word	0x000111f5
   35ce0:	.word	0x000254ec
   35ce4:	.word	0x00011280
   35ce8:	.word	0x00025664
   35cec:	.word	0x000112a2
   35cf0:	.word	0x000254a0
   35cf4:	.word	0x0001127a
   35cf8:	.word	0x00025618
   35cfc:	.word	0x000112a0
   35d00:	.word	0x000250e8
   35d04:	.word	0x00010f11
   35d08:	.word	0x00025260
   35d0c:	.word	0x00010f36
   35d10:	.word	0x00025020
   35d14:	.word	0x00010e95
   35d18:	.word	0x00025198
   35d1c:	.word	0x00010ebd
   35d20:	.word	0x0000fef1
   35d24:	.word	0x00025070
   35d28:	.word	0x000251f4
   35d2c:	.word	0x00010f26
   35d30:	.word	0x00010f35
   35d34:	.word	0x0002520c
   35d38:	.word	0x000254d0
   35d3c:	.word	0x0001123e
   35d40:	.word	0x00025324
   35d44:	.word	0x000254ac
   35d48:	.word	0x00011232
   35d4c:	.word	0x000252d8
   35d50:	.word	0x00025444
   35d54:	.word	0x0000ba9b
   35d58:	.word	0x00010f24
   35d5c:	.word	0x00024fc4
   35d60:	.word	0x00010f19
   35d64:	.word	0x00010f6f
   35d68:	.word	0x00025124
   35d6c:	.word	0x00035b88
   35d70:	.word	0x00025384
   35d74:	.word	0x0000bcf1
   35d78:	.word	0x00011129
   35d7c:	.word	0x00010f3d
   35d80:	.word	0x00010efe
   35d84:	.word	0x00024dcc
   35d88:	.word	0x0000aff6
   35d8c:	.word	0x00024fb4
   35d90:	.word	0x00024d5c
   35d94:	.word	0x00024f34
   35d98:	.word	0x00010dd3

00035d9c <valid_hostname>:
   35d9c:	push	{r4, r5, fp, lr}
   35da0:	add	fp, sp, #8
   35da4:	mov	r4, #0
   35da8:	cmp	r0, #0
   35dac:	beq	35e7c <valid_hostname+0xe0>
   35db0:	mov	r5, r0
   35db4:	ldr	r1, [pc, #200]	; 35e84 <valid_hostname+0xe8>
   35db8:	add	r1, pc, r1
   35dbc:	bl	d0c4 <strcmp@plt>
   35dc0:	cmp	r0, #0
   35dc4:	beq	35e78 <valid_hostname+0xdc>
   35dc8:	ldrb	r3, [r5]
   35dcc:	sub	r0, r3, #46	; 0x2e
   35dd0:	cmp	r0, #12
   35dd4:	bhi	35de8 <valid_hostname+0x4c>
   35dd8:	mov	r1, #1
   35ddc:	movw	r2, #4099	; 0x1003
   35de0:	tst	r2, r1, lsl r0
   35de4:	bne	35e7c <valid_hostname+0xe0>
   35de8:	cmp	r3, #0
   35dec:	beq	35e7c <valid_hostname+0xe0>
   35df0:	mov	r4, #0
   35df4:	ldr	r0, [pc, #140]	; 35e88 <valid_hostname+0xec>
   35df8:	ldr	r0, [pc, r0]
   35dfc:	mov	r2, #0
   35e00:	mov	ip, #0
   35e04:	uxtb	r3, r3
   35e08:	add	r1, r0, r3, lsl #2
   35e0c:	ldrb	r1, [r1, #1]
   35e10:	tst	r1, #8
   35e14:	beq	35e7c <valid_hostname+0xe0>
   35e18:	cmp	r3, #58	; 0x3a
   35e1c:	beq	35e34 <valid_hostname+0x98>
   35e20:	cmp	r3, #47	; 0x2f
   35e24:	beq	35e3c <valid_hostname+0xa0>
   35e28:	cmp	r3, #46	; 0x2e
   35e2c:	addeq	r2, r2, #1
   35e30:	b	35e44 <valid_hostname+0xa8>
   35e34:	add	r2, r2, #1
   35e38:	b	35e44 <valid_hostname+0xa8>
   35e3c:	add	r2, r2, #1
   35e40:	mov	ip, r5
   35e44:	ldrb	r3, [r5, #1]!
   35e48:	cmp	r3, #0
   35e4c:	bne	35e04 <valid_hostname+0x68>
   35e50:	cmp	r2, #0
   35e54:	beq	35e7c <valid_hostname+0xe0>
   35e58:	cmp	ip, #0
   35e5c:	beq	35e78 <valid_hostname+0xdc>
   35e60:	ldrb	r1, [ip, #1]
   35e64:	ldrb	r0, [r0, r1, lsl #2]
   35e68:	tst	r0, #16
   35e6c:	moveq	r4, #1
   35e70:	mov	r0, r4
   35e74:	pop	{r4, r5, fp, pc}
   35e78:	mov	r4, #1
   35e7c:	mov	r0, r4
   35e80:	pop	{r4, r5, fp, pc}
   35e84:	.word	0x00010c94
   35e88:	.word	0x00024c00

00035e8c <rb_free>:
   35e8c:	cmp	r0, #0
   35e90:	bxeq	lr
   35e94:	b	d328 <free@plt>

00035e98 <report_and_set_user_flags>:
   35e98:	push	{r4, r5, fp, lr}
   35e9c:	add	fp, sp, #8
   35ea0:	mov	r5, r1
   35ea4:	mov	r4, r0
   35ea8:	ldrb	r0, [r1, #5]
   35eac:	tst	r0, #2
   35eb0:	beq	35ec4 <report_and_set_user_flags+0x2c>
   35eb4:	ldr	r1, [pc, #360]	; 36024 <report_and_set_user_flags+0x18c>
   35eb8:	add	r1, pc, r1
   35ebc:	mov	r0, r4
   35ec0:	bl	e414 <sendto_one_notice@plt>
   35ec4:	ldrb	r0, [r5, #4]
   35ec8:	tst	r0, #64	; 0x40
   35ecc:	beq	35eec <report_and_set_user_flags+0x54>
   35ed0:	ldr	r0, [r4, #64]	; 0x40
   35ed4:	orr	r0, r0, #4194304	; 0x400000
   35ed8:	str	r0, [r4, #64]	; 0x40
   35edc:	ldr	r1, [pc, #324]	; 36028 <report_and_set_user_flags+0x190>
   35ee0:	add	r1, pc, r1
   35ee4:	mov	r0, r4
   35ee8:	bl	e414 <sendto_one_notice@plt>
   35eec:	ldr	r0, [r5, #4]
   35ef0:	movw	r1, #64	; 0x40
   35ef4:	movt	r1, #1024	; 0x400
   35ef8:	and	r0, r0, r1
   35efc:	cmp	r0, #67108864	; 0x4000000
   35f00:	bne	35f14 <report_and_set_user_flags+0x7c>
   35f04:	ldr	r1, [pc, #288]	; 3602c <report_and_set_user_flags+0x194>
   35f08:	add	r1, pc, r1
   35f0c:	mov	r0, r4
   35f10:	bl	e414 <sendto_one_notice@plt>
   35f14:	ldrb	r0, [r5, #4]
   35f18:	tst	r0, #128	; 0x80
   35f1c:	beq	35f30 <report_and_set_user_flags+0x98>
   35f20:	ldr	r1, [pc, #264]	; 36030 <report_and_set_user_flags+0x198>
   35f24:	add	r1, pc, r1
   35f28:	mov	r0, r4
   35f2c:	bl	e414 <sendto_one_notice@plt>
   35f30:	ldrb	r0, [r5, #5]
   35f34:	tst	r0, #64	; 0x40
   35f38:	beq	35f58 <report_and_set_user_flags+0xc0>
   35f3c:	ldr	r0, [r4, #64]	; 0x40
   35f40:	orr	r0, r0, #8388608	; 0x800000
   35f44:	str	r0, [r4, #64]	; 0x40
   35f48:	ldr	r1, [pc, #228]	; 36034 <report_and_set_user_flags+0x19c>
   35f4c:	add	r1, pc, r1
   35f50:	mov	r0, r4
   35f54:	bl	e414 <sendto_one_notice@plt>
   35f58:	ldrb	r0, [r5, #5]
   35f5c:	tst	r0, #128	; 0x80
   35f60:	beq	35f80 <report_and_set_user_flags+0xe8>
   35f64:	ldr	r0, [r4, #64]	; 0x40
   35f68:	orr	r0, r0, #33554432	; 0x2000000
   35f6c:	str	r0, [r4, #64]	; 0x40
   35f70:	ldr	r1, [pc, #192]	; 36038 <report_and_set_user_flags+0x1a0>
   35f74:	add	r1, pc, r1
   35f78:	mov	r0, r4
   35f7c:	bl	e414 <sendto_one_notice@plt>
   35f80:	ldrb	r0, [r5, #6]
   35f84:	tst	r0, #2
   35f88:	beq	35fa8 <report_and_set_user_flags+0x110>
   35f8c:	ldr	r0, [r4, #64]	; 0x40
   35f90:	orr	r0, r0, #134217728	; 0x8000000
   35f94:	str	r0, [r4, #64]	; 0x40
   35f98:	ldr	r1, [pc, #156]	; 3603c <report_and_set_user_flags+0x1a4>
   35f9c:	add	r1, pc, r1
   35fa0:	mov	r0, r4
   35fa4:	bl	e414 <sendto_one_notice@plt>
   35fa8:	ldrb	r0, [r5, #5]
   35fac:	tst	r0, #32
   35fb0:	beq	35fd0 <report_and_set_user_flags+0x138>
   35fb4:	ldr	r0, [r4, #64]	; 0x40
   35fb8:	orr	r0, r0, #2097152	; 0x200000
   35fbc:	str	r0, [r4, #64]	; 0x40
   35fc0:	ldr	r1, [pc, #120]	; 36040 <report_and_set_user_flags+0x1a8>
   35fc4:	add	r1, pc, r1
   35fc8:	mov	r0, r4
   35fcc:	bl	e414 <sendto_one_notice@plt>
   35fd0:	ldrb	r0, [r5, #6]
   35fd4:	tst	r0, #1
   35fd8:	beq	35ff8 <report_and_set_user_flags+0x160>
   35fdc:	ldr	r0, [r4, #64]	; 0x40
   35fe0:	orr	r0, r0, #67108864	; 0x4000000
   35fe4:	str	r0, [r4, #64]	; 0x40
   35fe8:	ldr	r1, [pc, #84]	; 36044 <report_and_set_user_flags+0x1ac>
   35fec:	add	r1, pc, r1
   35ff0:	mov	r0, r4
   35ff4:	bl	e414 <sendto_one_notice@plt>
   35ff8:	ldrb	r0, [r5, #6]
   35ffc:	tst	r0, #8
   36000:	popeq	{r4, r5, fp, pc}
   36004:	ldr	r0, [r4, #64]	; 0x40
   36008:	orr	r0, r0, #1048576	; 0x100000
   3600c:	str	r0, [r4, #64]	; 0x40
   36010:	ldr	r1, [pc, #48]	; 36048 <report_and_set_user_flags+0x1b0>
   36014:	add	r1, pc, r1
   36018:	mov	r0, r4
   3601c:	pop	{r4, r5, fp, lr}
   36020:	b	e414 <sendto_one_notice@plt>
   36024:	.word	0x0001120b
   36028:	.word	0x000111f9
   3602c:	.word	0x000111f4
   36030:	.word	0x00011200
   36034:	.word	0x000111fd
   36038:	.word	0x000111fb
   3603c:	.word	0x000111fb
   36040:	.word	0x00011203
   36044:	.word	0x000111fa
   36048:	.word	0x000111f8

0003604c <authd_check>:
   3604c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36050:	add	fp, sp, #28
   36054:	sub	sp, sp, #44	; 0x2c
   36058:	mov	r4, r1
   3605c:	mov	r9, r0
   36060:	ldr	r0, [r1, #432]	; 0x1b0
   36064:	ldr	r1, [r1, #436]	; 0x1b4
   36068:	ldr	sl, [r0, #132]	; 0x84
   3606c:	mov	r8, #0
   36070:	str	r8, [sp, #36]	; 0x24
   36074:	str	r8, [sp, #32]
   36078:	str	r8, [sp, #40]	; 0x28
   3607c:	ldrb	r0, [r1, #116]	; 0x74
   36080:	cmp	r0, #0
   36084:	bne	363bc <authd_check+0x370>
   36088:	add	r8, r4, #88	; 0x58
   3608c:	add	r6, sp, #32
   36090:	ldr	r1, [pc, #1004]	; 36484 <authd_check+0x438>
   36094:	add	r1, pc, r1
   36098:	mov	r0, r6
   3609c:	mov	r2, r8
   360a0:	bl	d760 <substitution_append_var@plt>
   360a4:	movw	r0, #291	; 0x123
   360a8:	add	r7, r4, r0
   360ac:	ldr	r1, [pc, #980]	; 36488 <authd_check+0x43c>
   360b0:	add	r1, pc, r1
   360b4:	mov	r0, r6
   360b8:	mov	r2, r7
   360bc:	bl	d760 <substitution_append_var@plt>
   360c0:	add	r5, r4, #163	; 0xa3
   360c4:	ldr	r1, [pc, #960]	; 3648c <authd_check+0x440>
   360c8:	add	r1, pc, r1
   360cc:	mov	r0, r6
   360d0:	mov	r2, r5
   360d4:	bl	d760 <substitution_append_var@plt>
   360d8:	ldr	r0, [r4, #436]	; 0x1b4
   360dc:	ldr	r2, [r0, #120]	; 0x78
   360e0:	ldr	r1, [pc, #936]	; 36490 <authd_check+0x444>
   360e4:	add	r1, pc, r1
   360e8:	mov	r0, r6
   360ec:	bl	d760 <substitution_append_var@plt>
   360f0:	ldr	r0, [pc, #924]	; 36494 <authd_check+0x448>
   360f4:	ldr	r0, [pc, r0]
   360f8:	ldr	r2, [r0, #12]
   360fc:	ldr	r1, [pc, #916]	; 36498 <authd_check+0x44c>
   36100:	add	r1, pc, r1
   36104:	mov	r0, r6
   36108:	bl	d760 <substitution_append_var@plt>
   3610c:	ldr	r0, [r4, #436]	; 0x1b4
   36110:	ldr	r0, [r0, #124]	; 0x7c
   36114:	mov	r1, r6
   36118:	bl	e39c <substitution_parse@plt>
   3611c:	mov	r6, r0
   36120:	ldr	r0, [r4, #436]	; 0x1b4
   36124:	ldrb	r1, [r0, #117]	; 0x75
   36128:	cmp	r1, #79	; 0x4f
   3612c:	beq	361a0 <authd_check+0x154>
   36130:	cmp	r1, #66	; 0x42
   36134:	bne	36204 <authd_check+0x1b8>
   36138:	str	r6, [sp, #28]
   3613c:	ldr	r6, [r0, #120]	; 0x78
   36140:	ldr	r0, [pc, #852]	; 3649c <authd_check+0x450>
   36144:	ldr	r0, [pc, r0]
   36148:	ldr	r0, [r0]
   3614c:	cmp	r0, #0
   36150:	beq	3616c <authd_check+0x120>
   36154:	mov	r1, r6
   36158:	bl	e6e4 <rb_dictionary_retrieve@plt>
   3615c:	cmp	r0, #0
   36160:	ldrne	r1, [r0, #8]
   36164:	addne	r1, r1, #1
   36168:	strne	r1, [r0, #8]
   3616c:	ldr	r0, [r4, #64]	; 0x40
   36170:	tst	r0, #4194304	; 0x400000
   36174:	ldrbeq	r1, [sl, #7]
   36178:	tsteq	r1, #4
   3617c:	beq	362e4 <authd_check+0x298>
   36180:	ldr	r1, [pc, #792]	; 364a0 <authd_check+0x454>
   36184:	add	r1, pc, r1
   36188:	mov	r0, r4
   3618c:	mov	r2, r7
   36190:	mov	r3, r6
   36194:	bl	e414 <sendto_one_notice@plt>
   36198:	mov	r8, #0
   3619c:	b	363b4 <authd_check+0x368>
   361a0:	str	r6, [sp, #28]
   361a4:	str	r9, [sp, #24]
   361a8:	ldr	r6, [r0, #120]	; 0x78
   361ac:	mov	r0, r6
   361b0:	mov	r1, #58	; 0x3a
   361b4:	bl	e27c <strrchr@plt>
   361b8:	cmp	r0, #0
   361bc:	beq	362b4 <authd_check+0x268>
   361c0:	mov	r9, r0
   361c4:	mov	r2, r7
   361c8:	mov	r7, r8
   361cc:	mov	r8, #0
   361d0:	strb	r8, [r9], #1
   361d4:	ldr	r0, [r4, #64]	; 0x40
   361d8:	tst	r0, #4194304	; 0x400000
   361dc:	ldrbeq	r1, [sl, #7]
   361e0:	tsteq	r1, #8
   361e4:	beq	363c8 <authd_check+0x37c>
   361e8:	str	r9, [sp]
   361ec:	ldr	r1, [pc, #716]	; 364c0 <authd_check+0x474>
   361f0:	add	r1, pc, r1
   361f4:	mov	r0, r4
   361f8:	mov	r3, r6
   361fc:	bl	e414 <sendto_one_notice@plt>
   36200:	b	363b4 <authd_check+0x368>
   36204:	ldr	r0, [r4, #64]	; 0x40
   36208:	tst	r0, #4194304	; 0x400000
   3620c:	bne	36298 <authd_check+0x24c>
   36210:	movw	r1, #345	; 0x159
   36214:	add	r1, r4, r1
   36218:	ldr	r2, [pc, #704]	; 364e0 <authd_check+0x494>
   3621c:	add	r2, pc, r2
   36220:	tst	r0, #16777216	; 0x1000000
   36224:	moveq	r2, r7
   36228:	add	r0, r4, #152	; 0x98
   3622c:	str	r8, [sp]
   36230:	stmib	sp, {r0, r5}
   36234:	str	r2, [sp, #12]
   36238:	str	r1, [sp, #16]
   3623c:	ldr	r2, [pc, #672]	; 364e4 <authd_check+0x498>
   36240:	add	r2, pc, r2
   36244:	mov	r0, #128	; 0x80
   36248:	mov	r1, #256	; 0x100
   3624c:	mov	r3, r6
   36250:	bl	d640 <sendto_realops_snomask@plt>
   36254:	str	r6, [sp]
   36258:	ldr	r5, [pc, #648]	; 364e8 <authd_check+0x49c>
   3625c:	ldr	r5, [pc, r5]
   36260:	add	r2, r5, #88	; 0x58
   36264:	ldr	r1, [pc, #640]	; 364ec <authd_check+0x4a0>
   36268:	add	r1, pc, r1
   3626c:	mov	r0, r4
   36270:	mov	r3, r8
   36274:	bl	d1e4 <sendto_one@plt>
   36278:	ldr	r1, [pc, #624]	; 364f0 <authd_check+0x4a4>
   3627c:	add	r1, pc, r1
   36280:	mov	r0, r4
   36284:	mov	r2, r6
   36288:	bl	e414 <sendto_one_notice@plt>
   3628c:	ldr	r6, [pc, #608]	; 364f4 <authd_check+0x4a8>
   36290:	add	r6, pc, r6
   36294:	b	36370 <authd_check+0x324>
   36298:	ldr	r1, [pc, #572]	; 364dc <authd_check+0x490>
   3629c:	add	r1, pc, r1
   362a0:	mov	r0, r4
   362a4:	mov	r2, r6
   362a8:	bl	e414 <sendto_one_notice@plt>
   362ac:	mov	r8, #0
   362b0:	b	363b4 <authd_check+0x368>
   362b4:	ldr	r4, [pc, #512]	; 364bc <authd_check+0x470>
   362b8:	add	r4, pc, r4
   362bc:	mov	r0, r4
   362c0:	mov	r1, r6
   362c4:	bl	d64c <ierror@plt>
   362c8:	mov	r8, #0
   362cc:	mov	r0, #256	; 0x100
   362d0:	mov	r1, #0
   362d4:	mov	r2, r4
   362d8:	mov	r3, r6
   362dc:	bl	d640 <sendto_realops_snomask@plt>
   362e0:	b	363b4 <authd_check+0x368>
   362e4:	movw	r1, #345	; 0x159
   362e8:	add	r1, r4, r1
   362ec:	ldr	r2, [pc, #432]	; 364a4 <authd_check+0x458>
   362f0:	add	r2, pc, r2
   362f4:	tst	r0, #16777216	; 0x1000000
   362f8:	moveq	r2, r7
   362fc:	add	r0, r4, #152	; 0x98
   36300:	str	r8, [sp]
   36304:	stmib	sp, {r0, r5}
   36308:	str	r2, [sp, #12]
   3630c:	str	r1, [sp, #16]
   36310:	ldr	r2, [pc, #400]	; 364a8 <authd_check+0x45c>
   36314:	add	r2, pc, r2
   36318:	mov	r0, #128	; 0x80
   3631c:	mov	r1, #256	; 0x100
   36320:	mov	r3, r6
   36324:	bl	d640 <sendto_realops_snomask@plt>
   36328:	ldr	r0, [sp, #28]
   3632c:	str	r0, [sp]
   36330:	ldr	r5, [pc, #372]	; 364ac <authd_check+0x460>
   36334:	ldr	r5, [pc, r5]
   36338:	add	r2, r5, #88	; 0x58
   3633c:	ldr	r1, [pc, #364]	; 364b0 <authd_check+0x464>
   36340:	add	r1, pc, r1
   36344:	mov	r0, r4
   36348:	mov	r3, r8
   3634c:	bl	d1e4 <sendto_one@plt>
   36350:	ldr	r1, [pc, #348]	; 364b4 <authd_check+0x468>
   36354:	add	r1, pc, r1
   36358:	mov	r0, r4
   3635c:	mov	r2, r7
   36360:	mov	r3, r6
   36364:	bl	e414 <sendto_one_notice@plt>
   36368:	ldr	r6, [pc, #328]	; 364b8 <authd_check+0x46c>
   3636c:	add	r6, pc, r6
   36370:	str	r6, [sp]
   36374:	mov	r0, r4
   36378:	mov	r1, #0
   3637c:	mov	r2, #0
   36380:	mov	r3, #0
   36384:	bl	e138 <add_reject@plt>
   36388:	mov	r0, r9
   3638c:	mov	r1, r4
   36390:	mov	r2, r5
   36394:	mov	r3, r6
   36398:	bl	e534 <exit_client@plt>
   3639c:	ldr	r0, [pc, #340]	; 364f8 <authd_check+0x4ac>
   363a0:	ldr	r0, [pc, r0]
   363a4:	ldr	r1, [r0, #68]	; 0x44
   363a8:	add	r1, r1, #1
   363ac:	str	r1, [r0, #68]	; 0x44
   363b0:	mov	r8, #1
   363b4:	add	r0, sp, #32
   363b8:	bl	e180 <substitution_free@plt>
   363bc:	mov	r0, r8
   363c0:	sub	sp, fp, #28
   363c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   363c8:	movw	r1, #345	; 0x159
   363cc:	add	r1, r4, r1
   363d0:	ldr	r3, [pc, #236]	; 364c4 <authd_check+0x478>
   363d4:	add	r3, pc, r3
   363d8:	tst	r0, #16777216	; 0x1000000
   363dc:	mov	r8, r2
   363e0:	moveq	r3, r2
   363e4:	add	r0, r4, #152	; 0x98
   363e8:	str	r9, [sp]
   363ec:	str	r7, [sp, #4]
   363f0:	str	r0, [sp, #8]
   363f4:	str	r5, [sp, #12]
   363f8:	str	r3, [sp, #16]
   363fc:	str	r1, [sp, #20]
   36400:	ldr	r2, [pc, #192]	; 364c8 <authd_check+0x47c>
   36404:	add	r2, pc, r2
   36408:	mov	r0, #128	; 0x80
   3640c:	mov	r1, #256	; 0x100
   36410:	mov	r3, r6
   36414:	bl	d640 <sendto_realops_snomask@plt>
   36418:	ldr	r0, [sp, #28]
   3641c:	str	r0, [sp]
   36420:	ldr	r5, [pc, #164]	; 364cc <authd_check+0x480>
   36424:	ldr	r5, [pc, r5]
   36428:	add	r2, r5, #88	; 0x58
   3642c:	ldr	r1, [pc, #156]	; 364d0 <authd_check+0x484>
   36430:	add	r1, pc, r1
   36434:	mov	r0, r4
   36438:	mov	r3, r7
   3643c:	bl	d1e4 <sendto_one@plt>
   36440:	str	r9, [sp]
   36444:	ldr	r1, [pc, #136]	; 364d4 <authd_check+0x488>
   36448:	add	r1, pc, r1
   3644c:	mov	r0, r4
   36450:	mov	r2, r8
   36454:	mov	r3, r6
   36458:	bl	e414 <sendto_one_notice@plt>
   3645c:	ldr	r6, [pc, #116]	; 364d8 <authd_check+0x48c>
   36460:	add	r6, pc, r6
   36464:	str	r6, [sp]
   36468:	mov	r0, r4
   3646c:	mov	r1, #0
   36470:	mov	r2, #0
   36474:	mov	r3, #0
   36478:	bl	e138 <add_reject@plt>
   3647c:	ldr	r0, [sp, #24]
   36480:	b	3638c <authd_check+0x340>
   36484:	.word	0x0000d3d3
   36488:	.word	0x0000e18d
   3648c:	.word	0x00010d68
   36490:	.word	0x00010d46
   36494:	.word	0x0002485c
   36498:	.word	0x00010d35
   3649c:	.word	0x0002493c
   364a0:	.word	0x00010cbe
   364a4:	.word	0x0000b245
   364a8:	.word	0x00010b6a
   364ac:	.word	0x00024824
   364b0:	.word	0x0000ad9e
   364b4:	.word	0x00010b53
   364b8:	.word	0x00010b63
   364bc:	.word	0x00010c32
   364c0:	.word	0x00010d22
   364c4:	.word	0x0000b161
   364c8:	.word	0x00010b70
   364cc:	.word	0x00024734
   364d0:	.word	0x0000acae
   364d4:	.word	0x00010b53
   364d8:	.word	0x00010b89
   364dc:	.word	0x00010d61
   364e0:	.word	0x0000b319
   364e4:	.word	0x00010df5
   364e8:	.word	0x000248fc
   364ec:	.word	0x0000ae76
   364f0:	.word	0x00010dfd
   364f4:	.word	0x00010e14
   364f8:	.word	0x0002461c

000364fc <valid_username>:
   364fc:	push	{fp, lr}
   36500:	mov	fp, sp
   36504:	mov	r1, r0
   36508:	mov	r0, #0
   3650c:	cmp	r1, #0
   36510:	beq	365c0 <valid_username+0xc4>
   36514:	mov	r2, r1
   36518:	ldrb	r3, [r2], #1
   3651c:	cmp	r3, #126	; 0x7e
   36520:	movne	r2, r1
   36524:	ldrb	r1, [r2]
   36528:	ldr	ip, [pc, #148]	; 365c4 <valid_username+0xc8>
   3652c:	ldr	ip, [pc, ip]
   36530:	ldrb	r1, [ip, r1, lsl #2]
   36534:	tst	r1, #20
   36538:	beq	365c0 <valid_username+0xc4>
   3653c:	ldrb	r0, [r2, #1]
   36540:	cmp	r0, #0
   36544:	beq	365b4 <valid_username+0xb8>
   36548:	add	r2, r2, #2
   3654c:	ldr	r1, [pc, #116]	; 365c8 <valid_username+0xcc>
   36550:	ldr	r1, [pc, r1]
   36554:	ldr	lr, [r1, #80]	; 0x50
   36558:	mov	r1, #0
   3655c:	uxtb	r0, r0
   36560:	cmp	r0, #46	; 0x2e
   36564:	bne	36598 <valid_username+0x9c>
   36568:	cmp	lr, #0
   3656c:	beq	36598 <valid_username+0x9c>
   36570:	mov	r0, #0
   36574:	cmp	r1, lr
   36578:	bge	365c0 <valid_username+0xc4>
   3657c:	ldrb	r3, [r2]
   36580:	add	r3, ip, r3, lsl #2
   36584:	ldrb	r3, [r3, #1]
   36588:	tst	r3, #4
   3658c:	popeq	{fp, pc}
   36590:	add	r1, r1, #1
   36594:	b	365a8 <valid_username+0xac>
   36598:	add	r0, ip, r0, lsl #2
   3659c:	ldrb	r0, [r0, #1]
   365a0:	tst	r0, #4
   365a4:	beq	365bc <valid_username+0xc0>
   365a8:	ldrb	r0, [r2], #1
   365ac:	cmp	r0, #0
   365b0:	bne	3655c <valid_username+0x60>
   365b4:	mov	r0, #1
   365b8:	pop	{fp, pc}
   365bc:	mov	r0, #0
   365c0:	pop	{fp, pc}
   365c4:	.word	0x000244cc
   365c8:	.word	0x0002462c

000365cc <rb_dlinkMoveNode>:
   365cc:	cmp	r0, #0
   365d0:	beq	3665c <rb_dlinkMoveNode+0x90>
   365d4:	ldr	ip, [pc, #168]	; 36684 <rb_dlinkMoveNode+0xb8>
   365d8:	ldr	ip, [pc, ip]
   365dc:	ldmib	r0, {r2, r3}
   365e0:	add	r1, r3, #4
   365e4:	cmp	r3, #0
   365e8:	addeq	r1, ip, #4
   365ec:	str	r2, [r1]
   365f0:	ldmib	r0, {r1, r2}
   365f4:	cmp	r1, #0
   365f8:	mov	r3, ip
   365fc:	addne	r3, r1, #8
   36600:	str	r2, [r3]
   36604:	mov	r1, #0
   36608:	ldr	r2, [pc, #120]	; 36688 <rb_dlinkMoveNode+0xbc>
   3660c:	ldr	r2, [pc, r2]
   36610:	ldr	r3, [r2]
   36614:	stmib	r0, {r1, r3}
   36618:	cmp	r3, #0
   3661c:	beq	3662c <rb_dlinkMoveNode+0x60>
   36620:	add	r3, r3, #4
   36624:	str	r0, [r3]
   36628:	b	3663c <rb_dlinkMoveNode+0x70>
   3662c:	mov	r3, r2
   36630:	ldr	r1, [r3, #4]!
   36634:	cmp	r1, #0
   36638:	streq	r0, [r3]
   3663c:	str	r0, [r2]
   36640:	ldr	r0, [ip, #8]
   36644:	sub	r0, r0, #1
   36648:	str	r0, [ip, #8]
   3664c:	ldr	r0, [r2, #8]
   36650:	add	r0, r0, #1
   36654:	str	r0, [r2, #8]
   36658:	bx	lr
   3665c:	push	{fp, lr}
   36660:	mov	fp, sp
   36664:	ldr	r0, [pc, #32]	; 3668c <rb_dlinkMoveNode+0xc0>
   36668:	add	r0, pc, r0
   3666c:	ldr	r1, [pc, #28]	; 36690 <rb_dlinkMoveNode+0xc4>
   36670:	add	r1, pc, r1
   36674:	ldr	r3, [pc, #24]	; 36694 <rb_dlinkMoveNode+0xc8>
   36678:	add	r3, pc, r3
   3667c:	mov	r2, #114	; 0x72
   36680:	bl	e7e0 <__assert_fail@plt>
   36684:	.word	0x0002429c
   36688:	.word	0x0002451c
   3668c:	.word	0x00009f44
   36690:	.word	0x00009f46
   36694:	.word	0x0000d627

00036698 <rb_dlinkAdd>:
   36698:	push	{fp, lr}
   3669c:	mov	fp, sp
   366a0:	cmp	r0, #0
   366a4:	beq	36704 <rb_dlinkAdd+0x6c>
   366a8:	cmp	r1, #0
   366ac:	beq	36724 <rb_dlinkAdd+0x8c>
   366b0:	cmp	r2, #0
   366b4:	beq	36744 <rb_dlinkAdd+0xac>
   366b8:	mov	r3, #0
   366bc:	stm	r1, {r0, r3}
   366c0:	ldr	r0, [r2]
   366c4:	str	r0, [r1, #8]
   366c8:	ldr	r0, [r2]
   366cc:	cmp	r0, #0
   366d0:	beq	366e0 <rb_dlinkAdd+0x48>
   366d4:	add	r0, r0, #4
   366d8:	str	r1, [r0]
   366dc:	b	366f0 <rb_dlinkAdd+0x58>
   366e0:	mov	r0, r2
   366e4:	ldr	r3, [r0, #4]!
   366e8:	cmp	r3, #0
   366ec:	streq	r1, [r0]
   366f0:	str	r1, [r2]
   366f4:	ldr	r0, [r2, #8]
   366f8:	add	r0, r0, #1
   366fc:	str	r0, [r2, #8]
   36700:	pop	{fp, pc}
   36704:	ldr	r0, [pc, #88]	; 36764 <rb_dlinkAdd+0xcc>
   36708:	add	r0, pc, r0
   3670c:	ldr	r1, [pc, #84]	; 36768 <rb_dlinkAdd+0xd0>
   36710:	add	r1, pc, r1
   36714:	ldr	r3, [pc, #80]	; 3676c <rb_dlinkAdd+0xd4>
   36718:	add	r3, pc, r3
   3671c:	mov	r2, #143	; 0x8f
   36720:	bl	e7e0 <__assert_fail@plt>
   36724:	ldr	r0, [pc, #68]	; 36770 <rb_dlinkAdd+0xd8>
   36728:	add	r0, pc, r0
   3672c:	ldr	r1, [pc, #64]	; 36774 <rb_dlinkAdd+0xdc>
   36730:	add	r1, pc, r1
   36734:	ldr	r3, [pc, #60]	; 36778 <rb_dlinkAdd+0xe0>
   36738:	add	r3, pc, r3
   3673c:	mov	r2, #144	; 0x90
   36740:	bl	e7e0 <__assert_fail@plt>
   36744:	ldr	r0, [pc, #48]	; 3677c <rb_dlinkAdd+0xe4>
   36748:	add	r0, pc, r0
   3674c:	ldr	r1, [pc, #44]	; 36780 <rb_dlinkAdd+0xe8>
   36750:	add	r1, pc, r1
   36754:	ldr	r3, [pc, #40]	; 36784 <rb_dlinkAdd+0xec>
   36758:	add	r3, pc, r3
   3675c:	mov	r2, #145	; 0x91
   36760:	bl	e7e0 <__assert_fail@plt>
   36764:	.word	0x00009f09
   36768:	.word	0x00009ea6
   3676c:	.word	0x00009f06
   36770:	.word	0x00009e84
   36774:	.word	0x00009e86
   36778:	.word	0x00009ee6
   3677c:	.word	0x0000f6fd
   36780:	.word	0x00009e66
   36784:	.word	0x00009ec6

00036788 <user_welcome>:
   36788:	push	{r4, r5, r6, sl, fp, lr}
   3678c:	add	fp, sp, #16
   36790:	sub	sp, sp, #16
   36794:	mov	r4, r0
   36798:	ldr	r0, [pc, #368]	; 36910 <user_welcome+0x188>
   3679c:	ldr	r0, [pc, r0]
   367a0:	ldr	r3, [r0, #12]
   367a4:	add	r5, r4, #88	; 0x58
   367a8:	str	r5, [sp]
   367ac:	ldr	r2, [pc, #352]	; 36914 <user_welcome+0x18c>
   367b0:	add	r2, pc, r2
   367b4:	mov	r0, r4
   367b8:	mov	r1, #1
   367bc:	bl	dc88 <sendto_one_numeric@plt>
   367c0:	ldr	r0, [r4, #432]	; 0x1b0
   367c4:	ldr	r0, [r0, #128]	; 0x80
   367c8:	bl	d550 <get_listener_name@plt>
   367cc:	mov	r3, r0
   367d0:	ldr	r6, [pc, #320]	; 36918 <user_welcome+0x190>
   367d4:	ldr	r6, [pc, r6]
   367d8:	ldr	r0, [r6]
   367dc:	str	r0, [sp]
   367e0:	ldr	r2, [pc, #308]	; 3691c <user_welcome+0x194>
   367e4:	add	r2, pc, r2
   367e8:	mov	r0, r4
   367ec:	mov	r1, #2
   367f0:	bl	dc88 <sendto_one_numeric@plt>
   367f4:	ldr	r0, [pc, #292]	; 36920 <user_welcome+0x198>
   367f8:	ldr	r0, [pc, r0]
   367fc:	ldr	r3, [r0]
   36800:	ldr	r2, [pc, #284]	; 36924 <user_welcome+0x19c>
   36804:	add	r2, pc, r2
   36808:	mov	r0, r4
   3680c:	mov	r1, #3
   36810:	bl	dc88 <sendto_one_numeric@plt>
   36814:	ldr	r0, [r6]
   36818:	ldr	r1, [pc, #264]	; 36928 <user_welcome+0x1a0>
   3681c:	ldr	r1, [pc, r1]
   36820:	str	r1, [sp, #8]
   36824:	ldr	r1, [pc, #256]	; 3692c <user_welcome+0x1a4>
   36828:	ldr	r1, [pc, r1]
   3682c:	stm	sp, {r0, r1}
   36830:	ldr	r0, [pc, #248]	; 36930 <user_welcome+0x1a8>
   36834:	ldr	r0, [pc, r0]
   36838:	add	r6, r0, #88	; 0x58
   3683c:	ldr	r2, [pc, #240]	; 36934 <user_welcome+0x1ac>
   36840:	add	r2, pc, r2
   36844:	mov	r0, r4
   36848:	mov	r1, #4
   3684c:	mov	r3, r6
   36850:	bl	dc88 <sendto_one_numeric@plt>
   36854:	mov	r0, r4
   36858:	bl	da54 <show_isupport@plt>
   3685c:	mov	r0, r4
   36860:	bl	d8d4 <show_lusers@plt>
   36864:	ldr	r0, [pc, #204]	; 36938 <user_welcome+0x1b0>
   36868:	ldr	r0, [pc, r0]
   3686c:	ldr	r0, [r0, #192]	; 0xc0
   36870:	cmp	r0, #0
   36874:	beq	36900 <user_welcome+0x178>
   36878:	ldr	r2, [pc, #188]	; 3693c <user_welcome+0x1b4>
   3687c:	ldr	r2, [pc, r2]
   36880:	ldr	r1, [pc, #184]	; 36940 <user_welcome+0x1b8>
   36884:	add	r1, pc, r1
   36888:	mov	r0, r4
   3688c:	bl	e414 <sendto_one_notice@plt>
   36890:	ldr	r1, [pc, #172]	; 36944 <user_welcome+0x1bc>
   36894:	add	r1, pc, r1
   36898:	mov	r0, r4
   3689c:	bl	e414 <sendto_one_notice@plt>
   368a0:	str	r6, [sp]
   368a4:	ldr	r1, [pc, #156]	; 36948 <user_welcome+0x1c0>
   368a8:	add	r1, pc, r1
   368ac:	mov	r0, r4
   368b0:	mov	r2, r6
   368b4:	mov	r3, r5
   368b8:	bl	d1e4 <sendto_one@plt>
   368bc:	ldr	r0, [pc, #136]	; 3694c <user_welcome+0x1c4>
   368c0:	add	r0, pc, r0
   368c4:	str	r0, [sp]
   368c8:	ldr	r1, [pc, #128]	; 36950 <user_welcome+0x1c8>
   368cc:	add	r1, pc, r1
   368d0:	mov	r0, r4
   368d4:	mov	r2, r6
   368d8:	mov	r3, r5
   368dc:	bl	d1e4 <sendto_one@plt>
   368e0:	ldr	r1, [pc, #108]	; 36954 <user_welcome+0x1cc>
   368e4:	add	r1, pc, r1
   368e8:	mov	r0, r4
   368ec:	mov	r2, r6
   368f0:	mov	r3, r5
   368f4:	sub	sp, fp, #16
   368f8:	pop	{r4, r5, r6, sl, fp, lr}
   368fc:	b	d1e4 <sendto_one@plt>
   36900:	mov	r0, r4
   36904:	sub	sp, fp, #16
   36908:	pop	{r4, r5, r6, sl, fp, lr}
   3690c:	b	d634 <send_user_motd@plt>
   36910:	.word	0x000241b4
   36914:	.word	0x00010408
   36918:	.word	0x000240bc
   3691c:	.word	0x00010406
   36920:	.word	0x0002420c
   36924:	.word	0x0001040b
   36928:	.word	0x00024040
   3692c:	.word	0x00024224
   36930:	.word	0x00024324
   36934:	.word	0x000103eb
   36938:	.word	0x00024314
   3693c:	.word	0x00024228
   36940:	.word	0x000103be
   36944:	.word	0x000103d9
   36948:	.word	0x00009f61
   3694c:	.word	0x000103e8
   36950:	.word	0x00009f64
   36954:	.word	0x00009f5d

00036958 <introduce_client>:
   36958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3695c:	add	fp, sp, #28
   36960:	sub	sp, sp, #612	; 0x264
   36964:	mov	r4, r3
   36968:	mov	r5, r1
   3696c:	mov	r9, r0
   36970:	ldrb	r0, [r1, #65]	; 0x41
   36974:	tst	r0, #32
   36978:	beq	36994 <introduce_client+0x3c>
   3697c:	ldrh	r0, [r5, #80]	; 0x50
   36980:	cmp	r0, #64	; 0x40
   36984:	bne	36994 <introduce_client+0x3c>
   36988:	add	r3, sp, #96	; 0x60
   3698c:	mov	r0, r5
   36990:	b	3699c <introduce_client+0x44>
   36994:	add	r3, sp, #96	; 0x60
   36998:	mov	r0, #0
   3699c:	mov	r1, r5
   369a0:	mov	r2, #0
   369a4:	bl	d850 <send_umode@plt>
   369a8:	ldr	r1, [fp, #8]
   369ac:	ldrb	r0, [sp, #96]	; 0x60
   369b0:	cmp	r0, #0
   369b4:	moveq	r0, #43	; 0x2b
   369b8:	strheq	r0, [sp, #96]	; 0x60
   369bc:	add	r6, r5, #64	; 0x40
   369c0:	cmp	r1, #0
   369c4:	str	r6, [sp, #64]	; 0x40
   369c8:	str	r4, [sp, #60]	; 0x3c
   369cc:	beq	36ab4 <introduce_client+0x15c>
   369d0:	movw	r0, #345	; 0x159
   369d4:	add	r3, r5, r0
   369d8:	ldr	r0, [pc, #1064]	; 36e08 <introduce_client+0x4b0>
   369dc:	ldr	r0, [pc, r0]
   369e0:	ldr	r0, [r0]
   369e4:	str	r0, [sp, #56]	; 0x38
   369e8:	ldr	r1, [pc, #1052]	; 36e0c <introduce_client+0x4b4>
   369ec:	ldr	r1, [pc, r1]
   369f0:	ldr	lr, [r1]
   369f4:	ldr	r2, [r5, #24]
   369f8:	ldr	r6, [r5, #32]
   369fc:	ldr	r7, [r5, #52]	; 0x34
   36a00:	ldr	r0, [r5, #76]	; 0x4c
   36a04:	ldrb	ip, [r2, #40]!	; 0x28
   36a08:	ldr	r4, [sp, #64]	; 0x40
   36a0c:	ldr	r4, [r4]
   36a10:	str	r3, [sp, #48]	; 0x30
   36a14:	ldr	r3, [pc, #1012]	; 36e10 <introduce_client+0x4b8>
   36a18:	add	r3, pc, r3
   36a1c:	tst	r4, #131072	; 0x20000
   36a20:	addne	r3, r5, #227	; 0xe3
   36a24:	str	r3, [sp, #40]	; 0x28
   36a28:	add	r3, r5, #396	; 0x18c
   36a2c:	str	r3, [sp, #36]	; 0x24
   36a30:	movw	r3, #291	; 0x123
   36a34:	ldr	sl, [pc, #984]	; 36e14 <introduce_client+0x4bc>
   36a38:	add	sl, pc, sl
   36a3c:	tst	r4, #16777216	; 0x1000000
   36a40:	addeq	sl, r5, r3
   36a44:	str	sl, [sp, #32]
   36a48:	add	r3, r5, #163	; 0xa3
   36a4c:	add	r4, r5, #152	; 0x98
   36a50:	add	sl, sp, #96	; 0x60
   36a54:	add	r0, r0, #1
   36a58:	add	r6, r6, #396	; 0x18c
   36a5c:	ldr	r8, [pc, #948]	; 36e18 <introduce_client+0x4c0>
   36a60:	add	r8, pc, r8
   36a64:	str	r8, [sp]
   36a68:	str	r6, [sp, #4]
   36a6c:	ldr	r6, [sp, #64]	; 0x40
   36a70:	ldr	r1, [sp, #60]	; 0x3c
   36a74:	str	r1, [sp, #8]
   36a78:	add	r1, sp, #12
   36a7c:	stm	r1, {r0, r7, sl}
   36a80:	str	r4, [sp, #24]
   36a84:	str	r3, [sp, #28]
   36a88:	cmp	ip, #0
   36a8c:	ldr	r0, [pc, #904]	; 36e1c <introduce_client+0x4c4>
   36a90:	add	r0, pc, r0
   36a94:	moveq	r2, r0
   36a98:	str	r2, [sp, #44]	; 0x2c
   36a9c:	ldr	r0, [sp, #56]	; 0x38
   36aa0:	orr	r2, r0, lr
   36aa4:	mov	r0, r9
   36aa8:	mov	r1, #0
   36aac:	mov	r3, #0
   36ab0:	bl	d9a0 <sendto_server@plt>
   36ab4:	movw	r0, #345	; 0x159
   36ab8:	add	r0, r5, r0
   36abc:	ldr	r8, [pc, #860]	; 36e20 <introduce_client+0x4c8>
   36ac0:	ldr	r8, [pc, r8]
   36ac4:	ldr	r2, [r8]
   36ac8:	ldr	r1, [pc, #852]	; 36e24 <introduce_client+0x4cc>
   36acc:	ldr	r1, [pc, r1]
   36ad0:	ldr	r3, [r1]
   36ad4:	ldr	r1, [r6]
   36ad8:	ldr	r4, [r5, #32]
   36adc:	ldr	lr, [r5, #52]	; 0x34
   36ae0:	ldr	r7, [r5, #76]	; 0x4c
   36ae4:	str	r0, [sp, #40]	; 0x28
   36ae8:	movw	ip, #291	; 0x123
   36aec:	ldr	r0, [pc, #820]	; 36e28 <introduce_client+0x4d0>
   36af0:	add	r0, pc, r0
   36af4:	tst	r1, #16777216	; 0x1000000
   36af8:	addeq	r0, r5, ip
   36afc:	str	r0, [sp, #32]
   36b00:	add	r0, r5, #163	; 0xa3
   36b04:	add	r1, r5, #152	; 0x98
   36b08:	add	ip, sp, #96	; 0x60
   36b0c:	add	sl, r5, #396	; 0x18c
   36b10:	str	sl, [sp, #36]	; 0x24
   36b14:	add	r7, r7, #1
   36b18:	add	r4, r4, #396	; 0x18c
   36b1c:	ldr	r6, [pc, #776]	; 36e2c <introduce_client+0x4d4>
   36b20:	add	r6, pc, r6
   36b24:	str	r6, [sp]
   36b28:	str	r4, [sp, #4]
   36b2c:	ldr	r4, [sp, #60]	; 0x3c
   36b30:	add	r6, sp, #8
   36b34:	stm	r6, {r4, r7, lr}
   36b38:	str	ip, [sp, #20]
   36b3c:	str	r1, [sp, #24]
   36b40:	str	r0, [sp, #28]
   36b44:	ldr	r7, [fp, #8]
   36b48:	cmp	r7, #0
   36b4c:	moveq	r3, r7
   36b50:	mov	r0, r9
   36b54:	mov	r1, #0
   36b58:	bl	d9a0 <sendto_server@plt>
   36b5c:	ldr	r0, [r5, #444]	; 0x1bc
   36b60:	cmp	r0, #0
   36b64:	ldrbne	r1, [r0]
   36b68:	cmpne	r1, #0
   36b6c:	beq	36ba8 <introduce_client+0x250>
   36b70:	ldr	r2, [r8]
   36b74:	ldrb	r1, [r5, #396]	; 0x18c
   36b78:	cmp	r1, #0
   36b7c:	mov	r1, sl
   36b80:	addeq	r1, r5, #88	; 0x58
   36b84:	ldr	r3, [pc, #676]	; 36e30 <introduce_client+0x4d8>
   36b88:	add	r3, pc, r3
   36b8c:	str	r3, [sp]
   36b90:	str	r1, [sp, #4]
   36b94:	str	r0, [sp, #8]
   36b98:	mov	r0, r9
   36b9c:	mov	r1, #0
   36ba0:	mov	r3, #0
   36ba4:	bl	d9a0 <sendto_server@plt>
   36ba8:	ldr	r6, [sp, #64]	; 0x40
   36bac:	ldrb	r0, [r6, #2]
   36bb0:	tst	r0, #2
   36bb4:	ldr	r4, [pc, #632]	; 36e34 <introduce_client+0x4dc>
   36bb8:	ldr	r4, [pc, r4]
   36bbc:	beq	36c04 <introduce_client+0x2ac>
   36bc0:	ldr	r2, [r8]
   36bc4:	ldr	r3, [r4]
   36bc8:	ldrb	r0, [r5, #396]	; 0x18c
   36bcc:	add	r1, r5, #227	; 0xe3
   36bd0:	cmp	r0, #0
   36bd4:	mov	r0, sl
   36bd8:	addeq	r0, r5, #88	; 0x58
   36bdc:	ldr	r7, [pc, #596]	; 36e38 <introduce_client+0x4e0>
   36be0:	add	r7, pc, r7
   36be4:	str	r7, [sp]
   36be8:	ldr	r7, [fp, #8]
   36bec:	stmib	sp, {r0, r1}
   36bf0:	cmp	r7, #0
   36bf4:	moveq	r3, r7
   36bf8:	mov	r0, r9
   36bfc:	mov	r1, #0
   36c00:	bl	d9a0 <sendto_server@plt>
   36c04:	ldr	r0, [r5, #24]
   36c08:	ldrb	r1, [r0, #40]!	; 0x28
   36c0c:	cmp	r1, #0
   36c10:	beq	36c58 <introduce_client+0x300>
   36c14:	ldr	r2, [r8]
   36c18:	ldr	r3, [r4]
   36c1c:	ldrb	r1, [r5, #396]	; 0x18c
   36c20:	cmp	r1, #0
   36c24:	mov	r1, sl
   36c28:	addeq	r1, r5, #88	; 0x58
   36c2c:	mov	r4, r7
   36c30:	ldr	r7, [pc, #516]	; 36e3c <introduce_client+0x4e4>
   36c34:	add	r7, pc, r7
   36c38:	str	r7, [sp]
   36c3c:	str	r1, [sp, #4]
   36c40:	str	r0, [sp, #8]
   36c44:	cmp	r4, #0
   36c48:	moveq	r3, r4
   36c4c:	mov	r0, r9
   36c50:	mov	r1, #0
   36c54:	bl	d9a0 <sendto_server@plt>
   36c58:	ldrb	r0, [r6, #1]
   36c5c:	tst	r0, #32
   36c60:	beq	36cdc <introduce_client+0x384>
   36c64:	ldr	r0, [r5, #432]	; 0x1b0
   36c68:	ldr	r0, [r0, #276]	; 0x114
   36c6c:	cmp	r0, #0
   36c70:	beq	36cdc <introduce_client+0x384>
   36c74:	ldr	r4, [pc, #452]	; 36e40 <introduce_client+0x4e8>
   36c78:	ldr	r4, [pc, r4]
   36c7c:	ldr	r0, [r4, #24]
   36c80:	cmp	r0, #0
   36c84:	ldrbne	r1, [r0]
   36c88:	cmpne	r1, #0
   36c8c:	beq	36ca4 <introduce_client+0x34c>
   36c90:	ldr	r1, [r4, #28]
   36c94:	cmp	r1, #0
   36c98:	ldrbne	r1, [r1]
   36c9c:	cmpne	r1, #0
   36ca0:	bne	36d24 <introduce_client+0x3cc>
   36ca4:	ldr	r0, [r5, #432]	; 0x1b0
   36ca8:	ldr	r6, [r0, #276]	; 0x114
   36cac:	mov	r0, r6
   36cb0:	bl	dc94 <strlen@plt>
   36cb4:	mov	r2, r0
   36cb8:	mov	r4, #0
   36cbc:	mov	r0, r6
   36cc0:	mov	r1, #0
   36cc4:	bl	df28 <memset@plt>
   36cc8:	ldr	r0, [r5, #432]	; 0x1b0
   36ccc:	ldr	r0, [r0, #276]	; 0x114
   36cd0:	bl	35e8c <rb_free>
   36cd4:	ldr	r0, [r5, #432]	; 0x1b0
   36cd8:	str	r4, [r0, #276]	; 0x114
   36cdc:	mov	r0, #0
   36ce0:	str	r0, [sp, #88]	; 0x58
   36ce4:	str	r5, [sp, #84]	; 0x54
   36ce8:	str	r0, [sp, #92]	; 0x5c
   36cec:	ldr	r0, [pc, #344]	; 36e4c <introduce_client+0x4f4>
   36cf0:	ldr	r0, [pc, r0]
   36cf4:	ldr	r0, [r0]
   36cf8:	add	r1, sp, #84	; 0x54
   36cfc:	bl	e654 <call_hook@plt>
   36d00:	str	r5, [sp, #72]	; 0x48
   36d04:	str	r9, [sp, #68]	; 0x44
   36d08:	ldr	r0, [pc, #320]	; 36e50 <introduce_client+0x4f8>
   36d0c:	ldr	r0, [pc, r0]
   36d10:	ldr	r0, [r0]
   36d14:	add	r1, sp, #68	; 0x44
   36d18:	bl	e654 <call_hook@plt>
   36d1c:	sub	sp, fp, #28
   36d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d24:	mov	r1, #64	; 0x40
   36d28:	bl	dce8 <strchr@plt>
   36d2c:	cmp	r0, #0
   36d30:	beq	36ca4 <introduce_client+0x34c>
   36d34:	add	r0, r0, #1
   36d38:	bl	d37c <find_named_client@plt>
   36d3c:	cmp	r0, #0
   36d40:	beq	36ca4 <introduce_client+0x34c>
   36d44:	ldr	r1, [r5, #432]	; 0x1b0
   36d48:	ldr	r2, [r1, #280]	; 0x118
   36d4c:	cmp	r2, #0
   36d50:	ldrbne	r3, [r2]
   36d54:	cmpne	r3, #0
   36d58:	bne	36dac <introduce_client+0x454>
   36d5c:	ldr	r2, [r0, #36]	; 0x24
   36d60:	ldrh	r3, [r2, #80]	; 0x50
   36d64:	cmp	r3, #32
   36d68:	bne	36d88 <introduce_client+0x430>
   36d6c:	ldrb	r2, [r2, #396]	; 0x18c
   36d70:	cmp	r2, #0
   36d74:	beq	36d88 <introduce_client+0x430>
   36d78:	ldrb	r2, [r5, #396]	; 0x18c
   36d7c:	cmp	r2, #0
   36d80:	addeq	sl, r5, #88	; 0x58
   36d84:	b	36d8c <introduce_client+0x434>
   36d88:	add	sl, r5, #88	; 0x58
   36d8c:	ldr	r3, [r4, #24]
   36d90:	ldr	r2, [r4, #28]
   36d94:	ldr	r1, [r1, #276]	; 0x114
   36d98:	str	r2, [sp]
   36d9c:	str	r1, [sp, #4]
   36da0:	ldr	r1, [pc, #160]	; 36e48 <introduce_client+0x4f0>
   36da4:	add	r1, pc, r1
   36da8:	b	36dfc <introduce_client+0x4a4>
   36dac:	ldr	r3, [r0, #36]	; 0x24
   36db0:	ldrh	r7, [r3, #80]	; 0x50
   36db4:	cmp	r7, #32
   36db8:	bne	36dd8 <introduce_client+0x480>
   36dbc:	ldrb	r3, [r3, #396]	; 0x18c
   36dc0:	cmp	r3, #0
   36dc4:	beq	36dd8 <introduce_client+0x480>
   36dc8:	ldrb	r3, [r5, #396]	; 0x18c
   36dcc:	cmp	r3, #0
   36dd0:	addeq	sl, r5, #88	; 0x58
   36dd4:	b	36ddc <introduce_client+0x484>
   36dd8:	add	sl, r5, #88	; 0x58
   36ddc:	ldr	r3, [r4, #24]
   36de0:	ldr	r7, [r4, #28]
   36de4:	ldr	r1, [r1, #276]	; 0x114
   36de8:	str	r7, [sp]
   36dec:	str	r2, [sp, #4]
   36df0:	str	r1, [sp, #8]
   36df4:	ldr	r1, [pc, #72]	; 36e44 <introduce_client+0x4ec>
   36df8:	add	r1, pc, r1
   36dfc:	mov	r2, sl
   36e00:	bl	d1e4 <sendto_one@plt>
   36e04:	b	36ca4 <introduce_client+0x34c>
   36e08:	.word	0x00023f4c
   36e0c:	.word	0x00024034
   36e10:	.word	0x0000a925
   36e14:	.word	0x00010ff5
   36e18:	.word	0x0000f8ee
   36e1c:	.word	0x0000a8ad
   36e20:	.word	0x00023e68
   36e24:	.word	0x00023f54
   36e28:	.word	0x00010f3d
   36e2c:	.word	0x0000f85a
   36e30:	.word	0x0000f817
   36e34:	.word	0x00023e68
   36e38:	.word	0x0000f7d6
   36e3c:	.word	0x0000f79a
   36e40:	.word	0x00023f04
   36e44:	.word	0x0000fc25
   36e48:	.word	0x0000fc92
   36e4c:	.word	0x00023d54
   36e50:	.word	0x00023b94

00036e54 <send_umode>:
   36e54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36e58:	add	fp, sp, #24
   36e5c:	sub	sp, sp, #8
   36e60:	mov	r9, #0
   36e64:	strb	r9, [r3]
   36e68:	ldr	ip, [pc, #200]	; 36f38 <send_umode+0xe4>
   36e6c:	ldr	ip, [pc, ip]
   36e70:	mov	lr, #43	; 0x2b
   36e74:	mov	r8, #45	; 0x2d
   36e78:	mov	r4, r3
   36e7c:	mov	r6, #0
   36e80:	ldr	r7, [ip, r6, lsl #2]
   36e84:	ldr	r5, [r1, #56]	; 0x38
   36e88:	and	r5, r5, r7
   36e8c:	tst	r7, r2
   36e90:	beq	36eb0 <send_umode+0x5c>
   36e94:	cmp	r5, #0
   36e98:	bne	36eec <send_umode+0x98>
   36e9c:	cmn	r9, #1
   36ea0:	bne	36ec8 <send_umode+0x74>
   36ea4:	strb	r6, [r4], #1
   36ea8:	mvn	r9, #0
   36eac:	b	36eec <send_umode+0x98>
   36eb0:	cmp	r5, #0
   36eb4:	beq	36eec <send_umode+0x98>
   36eb8:	cmp	r9, #1
   36ebc:	bne	36edc <send_umode+0x88>
   36ec0:	strb	r6, [r4], #1
   36ec4:	b	36ee8 <send_umode+0x94>
   36ec8:	strb	r6, [r4, #1]
   36ecc:	strb	r8, [r4]
   36ed0:	add	r4, r4, #2
   36ed4:	mvn	r9, #0
   36ed8:	b	36eec <send_umode+0x98>
   36edc:	strb	r6, [r4, #1]
   36ee0:	strb	lr, [r4]
   36ee4:	add	r4, r4, #2
   36ee8:	mov	r9, #1
   36eec:	add	r6, r6, #1
   36ef0:	cmp	r6, #128	; 0x80
   36ef4:	bne	36e80 <send_umode+0x2c>
   36ef8:	mov	r2, #0
   36efc:	strb	r2, [r4]
   36f00:	cmp	r0, #0
   36f04:	ldrbne	r2, [r3]
   36f08:	cmpne	r2, #0
   36f0c:	bne	36f18 <send_umode+0xc4>
   36f10:	sub	sp, fp, #24
   36f14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36f18:	str	r3, [sp]
   36f1c:	add	r2, r1, #88	; 0x58
   36f20:	ldr	r1, [pc, #20]	; 36f3c <send_umode+0xe8>
   36f24:	add	r1, pc, r1
   36f28:	mov	r3, r2
   36f2c:	bl	d1e4 <sendto_one@plt>
   36f30:	sub	sp, fp, #24
   36f34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36f38:	.word	0x00023b04
   36f3c:	.word	0x0000fc84

00036f40 <user_mode>:
   36f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36f44:	add	fp, sp, #28
   36f48:	sub	sp, sp, #540	; 0x21c
   36f4c:	mov	r4, r1
   36f50:	cmp	r2, #1
   36f54:	bgt	36f88 <user_mode+0x48>
   36f58:	ldr	r0, [pc, #2512]	; 37930 <user_mode+0x9f0>
   36f5c:	add	r0, pc, r0
   36f60:	str	r0, [sp]
   36f64:	add	r3, r4, #88	; 0x58
   36f68:	ldr	r0, [pc, #2500]	; 37934 <user_mode+0x9f4>
   36f6c:	ldr	r0, [pc, r0]
   36f70:	add	r2, r0, #88	; 0x58
   36f74:	ldr	r1, [pc, #2492]	; 37938 <user_mode+0x9f8>
   36f78:	add	r1, pc, r1
   36f7c:	mov	r0, r4
   36f80:	bl	d1e4 <sendto_one@plt>
   36f84:	b	37808 <user_mode+0x8c8>
   36f88:	mov	r6, r3
   36f8c:	mov	r7, r2
   36f90:	mov	sl, r0
   36f94:	ldrb	r0, [r4, #65]	; 0x41
   36f98:	tst	r0, #32
   36f9c:	beq	36fb8 <user_mode+0x78>
   36fa0:	ldrh	r0, [r4, #80]	; 0x50
   36fa4:	cmp	r0, #64	; 0x40
   36fa8:	bne	36fb8 <user_mode+0x78>
   36fac:	ldr	r0, [r6, #4]
   36fb0:	bl	e474 <find_named_person@plt>
   36fb4:	b	36fc0 <user_mode+0x80>
   36fb8:	ldr	r0, [r6, #4]
   36fbc:	bl	e1e0 <find_person@plt>
   36fc0:	mov	r5, r0
   36fc4:	add	r9, r4, #64	; 0x40
   36fc8:	cmp	r0, #0
   36fcc:	beq	37000 <user_mode+0xc0>
   36fd0:	ldrh	r0, [r4, #80]	; 0x50
   36fd4:	cmp	r0, #32
   36fd8:	bne	37024 <user_mode+0xe4>
   36fdc:	ldr	r3, [r6, #4]
   36fe0:	add	r0, r4, #88	; 0x58
   36fe4:	str	r0, [sp]
   36fe8:	ldr	r2, [pc, #2384]	; 37940 <user_mode+0xa00>
   36fec:	add	r2, pc, r2
   36ff0:	mov	r0, #256	; 0x100
   36ff4:	mov	r1, #2
   36ff8:	bl	d640 <sendto_realops_snomask@plt>
   36ffc:	b	37808 <user_mode+0x8c8>
   37000:	ldrb	r0, [r9, #1]
   37004:	tst	r0, #32
   37008:	beq	37808 <user_mode+0x8c8>
   3700c:	ldr	r3, [r6, #4]
   37010:	ldr	r2, [pc, #2340]	; 3793c <user_mode+0x9fc>
   37014:	add	r2, pc, r2
   37018:	mov	r0, r4
   3701c:	movw	r1, #403	; 0x193
   37020:	b	37804 <user_mode+0x8c4>
   37024:	cmp	r5, r4
   37028:	beq	3705c <user_mode+0x11c>
   3702c:	ldr	r0, [r4, #24]
   37030:	cmp	r0, #0
   37034:	ldrne	r0, [r0, #36]	; 0x24
   37038:	cmpne	r0, #0
   3703c:	bne	3777c <user_mode+0x83c>
   37040:	add	r3, r4, #88	; 0x58
   37044:	ldr	r0, [pc, #2300]	; 37948 <user_mode+0xa08>
   37048:	ldr	r0, [pc, r0]
   3704c:	add	r2, r0, #88	; 0x58
   37050:	ldr	r1, [pc, #2292]	; 3794c <user_mode+0xa0c>
   37054:	add	r1, pc, r1
   37058:	b	36f7c <user_mode+0x3c>
   3705c:	cmp	r7, #2
   37060:	bgt	370cc <user_mode+0x18c>
   37064:	mov	r0, #43	; 0x2b
   37068:	strb	r0, [sp, #24]
   3706c:	add	r0, sp, #24
   37070:	add	r0, r0, #1
   37074:	mov	r1, #0
   37078:	ldr	r2, [pc, #2256]	; 37950 <user_mode+0xa10>
   3707c:	ldr	r2, [pc, r2]
   37080:	ldr	r3, [r2, r1, lsl #2]
   37084:	ldr	r7, [r4, #56]	; 0x38
   37088:	tst	r3, r7
   3708c:	strbne	r1, [r0], #1
   37090:	add	r1, r1, #1
   37094:	cmp	r1, #128	; 0x80
   37098:	bne	37080 <user_mode+0x140>
   3709c:	mov	r1, #0
   370a0:	strb	r1, [r0]
   370a4:	ldr	r2, [pc, #2216]	; 37954 <user_mode+0xa14>
   370a8:	add	r2, pc, r2
   370ac:	add	r3, sp, #24
   370b0:	mov	r0, r4
   370b4:	mov	r1, #221	; 0xdd
   370b8:	bl	dc88 <sendto_one_numeric@plt>
   370bc:	ldr	r0, [r4, #72]	; 0x48
   370c0:	cmp	r0, #0
   370c4:	bne	377ec <user_mode+0x8ac>
   370c8:	b	37808 <user_mode+0x8c8>
   370cc:	ldr	r5, [r6, #8]
   370d0:	ldr	r0, [r4, #56]	; 0x38
   370d4:	str	r0, [sp, #12]
   370d8:	ldr	r0, [r4, #72]	; 0x48
   370dc:	str	r0, [sp, #8]
   370e0:	mov	r8, #1
   370e4:	ldr	r3, [pc, #2156]	; 37958 <user_mode+0xa18>
   370e8:	ldr	r3, [pc, r3]
   370ec:	mov	ip, #0
   370f0:	mov	r0, #0
   370f4:	str	r0, [sp, #20]
   370f8:	b	37100 <user_mode+0x1c0>
   370fc:	add	r5, r5, #1
   37100:	ldrb	r0, [r5]
   37104:	cmp	r0, #45	; 0x2d
   37108:	bhi	371dc <user_mode+0x29c>
   3710c:	add	r1, pc, #4
   37110:	ldr	r2, [r1, r0, lsl #2]
   37114:	add	pc, r1, r2
   37118:	.word	0x00000470
   3711c:	.word	0x000001e8
   37120:	.word	0x000001e8
   37124:	.word	0x000001e8
   37128:	.word	0x000001e8
   3712c:	.word	0x000001e8
   37130:	.word	0x000001e8
   37134:	.word	0x000001e8
   37138:	.word	0x000001e8
   3713c:	.word	0xffffffe4
   37140:	.word	0xffffffe4
   37144:	.word	0x000001e8
   37148:	.word	0x000001e8
   3714c:	.word	0xffffffe4
   37150:	.word	0x000001e8
   37154:	.word	0x000001e8
   37158:	.word	0x000001e8
   3715c:	.word	0x000001e8
   37160:	.word	0x000001e8
   37164:	.word	0x000001e8
   37168:	.word	0x000001e8
   3716c:	.word	0x000001e8
   37170:	.word	0x000001e8
   37174:	.word	0x000001e8
   37178:	.word	0x000001e8
   3717c:	.word	0x000001e8
   37180:	.word	0x000001e8
   37184:	.word	0x000001e8
   37188:	.word	0x000001e8
   3718c:	.word	0x000001e8
   37190:	.word	0x000001e8
   37194:	.word	0x000001e8
   37198:	.word	0xffffffe4
   3719c:	.word	0x000001e8
   371a0:	.word	0x000001e8
   371a4:	.word	0x000001e8
   371a8:	.word	0x000001e8
   371ac:	.word	0x000001e8
   371b0:	.word	0x000001e8
   371b4:	.word	0x000001e8
   371b8:	.word	0x000001e8
   371bc:	.word	0x000001e8
   371c0:	.word	0x000001e8
   371c4:	.word	0x000000b8
   371c8:	.word	0x000001e8
   371cc:	.word	0x000001d0
   371d0:	mov	r8, #1
   371d4:	add	r5, r5, #1
   371d8:	b	37100 <user_mode+0x1c0>
   371dc:	sub	r1, r0, #83	; 0x53
   371e0:	cmp	r1, #32
   371e4:	bhi	37300 <user_mode+0x3c0>
   371e8:	add	r2, pc, #4
   371ec:	ldr	r1, [r2, r1, lsl #2]
   371f0:	add	pc, r2, r1
   371f4:	.word	0xffffff08
   371f8:	.word	0x0000010c
   371fc:	.word	0x0000010c
   37200:	.word	0x0000010c
   37204:	.word	0x0000010c
   37208:	.word	0x0000010c
   3720c:	.word	0x0000010c
   37210:	.word	0xffffff08
   37214:	.word	0x0000010c
   37218:	.word	0x0000010c
   3721c:	.word	0x0000010c
   37220:	.word	0x0000010c
   37224:	.word	0x0000010c
   37228:	.word	0x0000010c
   3722c:	.word	0x0000010c
   37230:	.word	0x0000010c
   37234:	.word	0x0000010c
   37238:	.word	0x0000010c
   3723c:	.word	0x0000010c
   37240:	.word	0x0000010c
   37244:	.word	0x0000010c
   37248:	.word	0x0000010c
   3724c:	.word	0x0000010c
   37250:	.word	0x0000010c
   37254:	.word	0x0000010c
   37258:	.word	0x0000010c
   3725c:	.word	0x0000010c
   37260:	.word	0x0000010c
   37264:	.word	0x00000084
   37268:	.word	0x0000010c
   3726c:	.word	0x0000010c
   37270:	.word	0x0000010c
   37274:	.word	0x00000100
   37278:	cmp	r8, #1
   3727c:	bne	3738c <user_mode+0x44c>
   37280:	ldrh	r0, [sl, #80]	; 0x50
   37284:	mov	r8, #1
   37288:	cmp	r0, #32
   3728c:	ldreq	r0, [r4, #56]	; 0x38
   37290:	tsteq	r0, #4096	; 0x1000
   37294:	bne	370fc <user_mode+0x1bc>
   37298:	ldr	r1, [pc, #1724]	; 3795c <user_mode+0xa1c>
   3729c:	ldr	r1, [pc, r1]
   372a0:	mov	r2, r1
   372a4:	ldr	r1, [r1]
   372a8:	add	r1, r1, #1
   372ac:	str	r1, [r2]
   372b0:	orr	r0, r0, #4096	; 0x1000
   372b4:	str	r0, [r4, #56]	; 0x38
   372b8:	str	ip, [sp, #16]
   372bc:	bl	dc64 <rb_make_rb_dlink_node@plt>
   372c0:	mov	r1, r0
   372c4:	mov	r0, r4
   372c8:	ldr	r2, [pc, #1680]	; 37960 <user_mode+0xa20>
   372cc:	ldr	r2, [pc, r2]
   372d0:	bl	36698 <rb_dlinkAdd>
   372d4:	ldr	ip, [sp, #16]
   372d8:	ldr	r3, [pc, #1668]	; 37964 <user_mode+0xa24>
   372dc:	ldr	r3, [pc, r3]
   372e0:	add	r5, r5, #1
   372e4:	b	37100 <user_mode+0x1c0>
   372e8:	mvn	r8, #0
   372ec:	add	r5, r5, #1
   372f0:	b	37100 <user_mode+0x1c0>
   372f4:	ldrb	r1, [r9, #1]
   372f8:	tst	r1, #32
   372fc:	bne	37450 <user_mode+0x510>
   37300:	ldr	r1, [r9]
   37304:	ands	r1, r1, #8192	; 0x2000
   37308:	beq	37324 <user_mode+0x3e4>
   3730c:	cmp	r0, #81	; 0x51
   37310:	ldreq	r2, [pc, #1652]	; 3798c <user_mode+0xa4c>
   37314:	ldreq	r2, [pc, r2]
   37318:	ldreq	r2, [r2, #8]
   3731c:	cmpeq	r2, #0
   37320:	beq	374e4 <user_mode+0x5a4>
   37324:	ldr	r0, [r3, r0, lsl #2]
   37328:	cmp	r0, #0
   3732c:	beq	374a0 <user_mode+0x560>
   37330:	cmp	r1, #0
   37334:	beq	37488 <user_mode+0x548>
   37338:	ldr	r1, [r4, #56]	; 0x38
   3733c:	tst	r1, #4096	; 0x1000
   37340:	bne	37358 <user_mode+0x418>
   37344:	ldr	r2, [pc, #1604]	; 37990 <user_mode+0xa50>
   37348:	ldr	r2, [pc, r2]
   3734c:	ldr	r2, [r2, #216]	; 0xd8
   37350:	tst	r2, r0
   37354:	bne	37368 <user_mode+0x428>
   37358:	ldr	r2, [pc, #1588]	; 37994 <user_mode+0xa54>
   3735c:	ldr	r2, [pc, r2]
   37360:	tst	r2, r0
   37364:	beq	37488 <user_mode+0x548>
   37368:	ands	r0, r1, r0
   3736c:	movwne	r0, #1
   37370:	sub	r1, r8, #1
   37374:	clz	r1, r1
   37378:	lsr	r1, r1, #5
   3737c:	orr	r0, r1, r0
   37380:	orr	ip, ip, r0
   37384:	add	r5, r5, #1
   37388:	b	37100 <user_mode+0x1c0>
   3738c:	ldr	r0, [r4, #56]	; 0x38
   37390:	tst	r0, #4096	; 0x1000
   37394:	beq	370fc <user_mode+0x1bc>
   37398:	str	ip, [sp, #16]
   3739c:	bic	r0, r0, #12288	; 0x3000
   373a0:	str	r0, [r4, #56]	; 0x38
   373a4:	ldr	r1, [pc, #1468]	; 37968 <user_mode+0xa28>
   373a8:	ldr	r1, [pc, r1]
   373ac:	mov	r2, r1
   373b0:	ldr	r1, [r1]
   373b4:	sub	r1, r1, #1
   373b8:	str	r1, [r2]
   373bc:	ldrb	r1, [r9, #1]
   373c0:	tst	r1, #32
   373c4:	beq	373ec <user_mode+0x4ac>
   373c8:	ldr	r1, [pc, #1436]	; 3796c <user_mode+0xa2c>
   373cc:	ldr	r1, [pc, r1]
   373d0:	ldr	r1, [r1, #216]	; 0xd8
   373d4:	bic	r0, r0, r1
   373d8:	str	r0, [r4, #56]	; 0x38
   373dc:	mov	r0, r4
   373e0:	ldr	r1, [pc, #1416]	; 37970 <user_mode+0xa30>
   373e4:	ldr	r1, [pc, r1]
   373e8:	bl	37a88 <rb_dlinkFindDestroy>
   373ec:	ldr	r0, [r4, #24]
   373f0:	ldr	r0, [r0, #32]
   373f4:	cmp	r0, #0
   373f8:	beq	3740c <user_mode+0x4cc>
   373fc:	bl	35e8c <rb_free>
   37400:	ldr	r0, [r4, #24]
   37404:	mov	r1, #0
   37408:	str	r1, [r0, #32]
   3740c:	ldr	r0, [r4, #24]
   37410:	ldr	r0, [r0, #36]	; 0x24
   37414:	cmp	r0, #0
   37418:	beq	3742c <user_mode+0x4ec>
   3741c:	bl	e630 <privilegeset_unref@plt>
   37420:	ldr	r0, [r4, #24]
   37424:	mov	r1, #0
   37428:	str	r1, [r0, #36]	; 0x24
   3742c:	mov	r0, r4
   37430:	ldr	r1, [pc, #1340]	; 37974 <user_mode+0xa34>
   37434:	ldr	r1, [pc, r1]
   37438:	bl	37a88 <rb_dlinkFindDestroy>
   3743c:	ldr	r3, [pc, #1332]	; 37978 <user_mode+0xa38>
   37440:	ldr	r3, [pc, r3]
   37444:	ldr	ip, [sp, #16]
   37448:	add	r5, r5, #1
   3744c:	b	37100 <user_mode+0x1c0>
   37450:	ldr	r0, [pc, #1316]	; 3797c <user_mode+0xa3c>
   37454:	ldr	r0, [pc, r0]
   37458:	ldrb	r0, [r0, #216]	; 0xd8
   3745c:	tst	r0, #1
   37460:	bne	374b0 <user_mode+0x570>
   37464:	cmp	r8, #1
   37468:	bne	37504 <user_mode+0x5c4>
   3746c:	ldr	r0, [r4, #72]	; 0x48
   37470:	cmp	r7, #3
   37474:	bne	3751c <user_mode+0x5dc>
   37478:	orr	r0, r0, #256	; 0x100
   3747c:	str	r0, [r4, #72]	; 0x48
   37480:	ldr	r1, [r4, #56]	; 0x38
   37484:	b	37544 <user_mode+0x604>
   37488:	cmp	r8, #1
   3748c:	bne	374f0 <user_mode+0x5b0>
   37490:	ldr	r1, [r4, #56]	; 0x38
   37494:	orr	r0, r1, r0
   37498:	str	r0, [r4, #56]	; 0x38
   3749c:	b	371d0 <user_mode+0x290>
   374a0:	cmp	r1, #0
   374a4:	movwne	r1, #1
   374a8:	orr	ip, ip, r1
   374ac:	b	370fc <user_mode+0x1bc>
   374b0:	ldrb	r0, [r4, #57]	; 0x39
   374b4:	tst	r0, #16
   374b8:	beq	374d0 <user_mode+0x590>
   374bc:	ldr	r0, [r4, #24]
   374c0:	cmp	r0, #0
   374c4:	ldrne	r0, [r0, #36]	; 0x24
   374c8:	cmpne	r0, #0
   374cc:	bne	37560 <user_mode+0x620>
   374d0:	cmp	r8, #1
   374d4:	beq	374e4 <user_mode+0x5a4>
   374d8:	ldrb	r0, [r4, #56]	; 0x38
   374dc:	tst	r0, #1
   374e0:	beq	370fc <user_mode+0x1bc>
   374e4:	mov	ip, #1
   374e8:	add	r5, r5, #1
   374ec:	b	37100 <user_mode+0x1c0>
   374f0:	ldr	r1, [r4, #56]	; 0x38
   374f4:	bic	r0, r1, r0
   374f8:	str	r0, [r4, #56]	; 0x38
   374fc:	add	r5, r5, #1
   37500:	b	37100 <user_mode+0x1c0>
   37504:	mov	r0, #0
   37508:	str	r0, [r4, #72]	; 0x48
   3750c:	ldr	r1, [r4, #56]	; 0x38
   37510:	bic	r0, r1, #1
   37514:	str	r0, [r4, #56]	; 0x38
   37518:	b	37550 <user_mode+0x610>
   3751c:	ldr	r1, [r6, #12]
   37520:	str	ip, [sp, #16]
   37524:	bl	de98 <parse_snobuf_to_mask@plt>
   37528:	ldr	ip, [sp, #16]
   3752c:	ldr	r3, [pc, #1108]	; 37988 <user_mode+0xa48>
   37530:	ldr	r3, [pc, r3]
   37534:	str	r0, [r4, #72]	; 0x48
   37538:	ldr	r1, [r4, #56]	; 0x38
   3753c:	cmp	r0, #0
   37540:	beq	37510 <user_mode+0x5d0>
   37544:	orr	r0, r1, #1
   37548:	str	r0, [r4, #56]	; 0x38
   3754c:	mov	r8, #1
   37550:	mov	r0, #1
   37554:	str	r0, [sp, #20]
   37558:	add	r5, r5, #1
   3755c:	b	37100 <user_mode+0x1c0>
   37560:	ldr	r1, [pc, #1048]	; 37980 <user_mode+0xa40>
   37564:	add	r1, pc, r1
   37568:	str	ip, [sp, #16]
   3756c:	bl	e594 <privilegeset_in_set@plt>
   37570:	ldr	ip, [sp, #16]
   37574:	ldr	r3, [pc, #1032]	; 37984 <user_mode+0xa44>
   37578:	ldr	r3, [pc, r3]
   3757c:	cmp	r0, #0
   37580:	bne	37464 <user_mode+0x524>
   37584:	b	374d0 <user_mode+0x590>
   37588:	tst	ip, #1
   3758c:	beq	375b0 <user_mode+0x670>
   37590:	add	r3, r4, #88	; 0x58
   37594:	ldr	r0, [pc, #1020]	; 37998 <user_mode+0xa58>
   37598:	ldr	r0, [pc, r0]
   3759c:	add	r2, r0, #88	; 0x58
   375a0:	ldr	r1, [pc, #1012]	; 3799c <user_mode+0xa5c>
   375a4:	add	r1, pc, r1
   375a8:	mov	r0, r4
   375ac:	bl	d1e4 <sendto_one@plt>
   375b0:	ldrb	r0, [r9, #1]
   375b4:	tst	r0, #32
   375b8:	ldr	r5, [sp, #12]
   375bc:	ldr	r6, [sp, #20]
   375c0:	beq	37624 <user_mode+0x6e4>
   375c4:	ldrh	r0, [r4, #80]	; 0x50
   375c8:	cmp	r0, #64	; 0x40
   375cc:	bne	37624 <user_mode+0x6e4>
   375d0:	ldr	r0, [pc, #968]	; 379a0 <user_mode+0xa60>
   375d4:	ldr	r0, [pc, r0]
   375d8:	ldrb	r0, [r0, #216]	; 0xd8
   375dc:	tst	r0, #1
   375e0:	beq	37604 <user_mode+0x6c4>
   375e4:	ldr	r0, [r4, #24]
   375e8:	cmp	r0, #0
   375ec:	ldrne	r0, [r0, #36]	; 0x24
   375f0:	cmpne	r0, #0
   375f4:	bne	378d0 <user_mode+0x990>
   375f8:	ldr	r0, [r4, #56]	; 0x38
   375fc:	bic	r0, r0, #1
   37600:	str	r0, [r4, #56]	; 0x38
   37604:	ldrb	r0, [r4, #56]	; 0x38
   37608:	tst	r0, #1
   3760c:	bne	37624 <user_mode+0x6e4>
   37610:	ldr	r0, [r4, #72]	; 0x48
   37614:	cmp	r0, #0
   37618:	movne	r0, #0
   3761c:	strne	r0, [r4, #72]	; 0x48
   37620:	movne	r6, #1
   37624:	ldrb	r0, [r9, #1]
   37628:	tst	r0, #32
   3762c:	beq	37678 <user_mode+0x738>
   37630:	ldrh	r0, [r4, #80]	; 0x50
   37634:	cmp	r0, #64	; 0x40
   37638:	bne	37678 <user_mode+0x738>
   3763c:	ldrb	r0, [r4, #72]	; 0x48
   37640:	tst	r0, #64	; 0x40
   37644:	beq	37678 <user_mode+0x738>
   37648:	ldr	r0, [r4, #24]
   3764c:	cmp	r0, #0
   37650:	ldrne	r0, [r0, #36]	; 0x24
   37654:	cmpne	r0, #0
   37658:	bne	378e8 <user_mode+0x9a8>
   3765c:	ldr	r1, [pc, #840]	; 379ac <user_mode+0xa6c>
   37660:	add	r1, pc, r1
   37664:	mov	r0, r4
   37668:	bl	e414 <sendto_one_notice@plt>
   3766c:	ldr	r0, [r4, #72]	; 0x48
   37670:	bic	r0, r0, #64	; 0x40
   37674:	str	r0, [r4, #72]	; 0x48
   37678:	ldrb	r0, [r9, #1]
   3767c:	tst	r0, #32
   37680:	beq	376cc <user_mode+0x78c>
   37684:	ldrh	r0, [r4, #80]	; 0x50
   37688:	cmp	r0, #64	; 0x40
   3768c:	bne	376cc <user_mode+0x78c>
   37690:	ldrb	r0, [r4, #56]	; 0x38
   37694:	tst	r0, #4
   37698:	beq	376cc <user_mode+0x78c>
   3769c:	ldr	r0, [r4, #24]
   376a0:	cmp	r0, #0
   376a4:	ldrne	r0, [r0, #36]	; 0x24
   376a8:	cmpne	r0, #0
   376ac:	bne	37900 <user_mode+0x9c0>
   376b0:	ldr	r1, [pc, #764]	; 379b4 <user_mode+0xa74>
   376b4:	add	r1, pc, r1
   376b8:	mov	r0, r4
   376bc:	bl	e414 <sendto_one_notice@plt>
   376c0:	ldr	r0, [r4, #56]	; 0x38
   376c4:	bic	r0, r0, #4
   376c8:	str	r0, [r4, #56]	; 0x38
   376cc:	ldrb	r0, [r9, #1]
   376d0:	tst	r0, #32
   376d4:	ldrbne	r0, [r4, #57]	; 0x39
   376d8:	tstne	r0, #32
   376dc:	bne	37814 <user_mode+0x8d4>
   376e0:	ldrb	r0, [r9, #1]
   376e4:	tst	r0, #32
   376e8:	beq	37728 <user_mode+0x7e8>
   376ec:	ldrh	r0, [r4, #80]	; 0x50
   376f0:	cmp	r0, #64	; 0x40
   376f4:	bne	37728 <user_mode+0x7e8>
   376f8:	ldr	r0, [r4, #24]
   376fc:	cmp	r0, #0
   37700:	ldrne	r0, [r0, #36]	; 0x24
   37704:	cmpne	r0, #0
   37708:	bne	378a0 <user_mode+0x960>
   3770c:	ldrb	r0, [r4, #57]	; 0x39
   37710:	mov	r1, #1
   37714:	tst	r0, #16
   37718:	ldrne	r0, [r4, #24]
   3771c:	cmpne	r0, #0
   37720:	bne	378bc <user_mode+0x97c>
   37724:	strb	r1, [r4, #82]	; 0x52
   37728:	str	r5, [sp, #28]
   3772c:	str	r4, [sp, #24]
   37730:	ldr	r0, [sp, #8]
   37734:	str	r0, [sp, #32]
   37738:	ldr	r0, [pc, #652]	; 379cc <user_mode+0xa8c>
   3773c:	ldr	r0, [pc, r0]
   37740:	ldr	r0, [r0]
   37744:	add	r1, sp, #24
   37748:	bl	e654 <call_hook@plt>
   3774c:	ldr	r0, [r4, #56]	; 0x38
   37750:	and	r0, r0, #8
   37754:	tst	r5, #8
   37758:	bne	377a8 <user_mode+0x868>
   3775c:	cmp	r0, #0
   37760:	beq	377c8 <user_mode+0x888>
   37764:	ldr	r0, [pc, #612]	; 379d0 <user_mode+0xa90>
   37768:	ldr	r0, [pc, r0]
   3776c:	mov	r1, r0
   37770:	ldr	r0, [r0, #8]
   37774:	add	r0, r0, #1
   37778:	b	377c4 <user_mode+0x884>
   3777c:	ldr	r1, [pc, #448]	; 37944 <user_mode+0xa04>
   37780:	add	r1, pc, r1
   37784:	bl	e594 <privilegeset_in_set@plt>
   37788:	cmp	r7, #2
   3778c:	bgt	37040 <user_mode+0x100>
   37790:	cmp	r0, #0
   37794:	beq	37040 <user_mode+0x100>
   37798:	mov	r0, r4
   3779c:	mov	r1, r5
   377a0:	bl	379dc <show_other_user_mode>
   377a4:	b	37808 <user_mode+0x8c8>
   377a8:	cmp	r0, #0
   377ac:	bne	377c8 <user_mode+0x888>
   377b0:	ldr	r0, [pc, #540]	; 379d4 <user_mode+0xa94>
   377b4:	ldr	r0, [pc, r0]
   377b8:	mov	r1, r0
   377bc:	ldr	r0, [r0, #8]
   377c0:	sub	r0, r0, #1
   377c4:	str	r0, [r1, #8]
   377c8:	mov	r0, sl
   377cc:	mov	r1, r4
   377d0:	mov	r2, r5
   377d4:	bl	e444 <send_umode_out@plt>
   377d8:	tst	r6, #1
   377dc:	ldrbne	r0, [r9, #1]
   377e0:	tstne	r0, #32
   377e4:	beq	37808 <user_mode+0x8c8>
   377e8:	ldr	r0, [r4, #72]	; 0x48
   377ec:	bl	d178 <construct_snobuf@plt>
   377f0:	mov	r3, r0
   377f4:	ldr	r2, [pc, #476]	; 379d8 <user_mode+0xa98>
   377f8:	add	r2, pc, r2
   377fc:	mov	r0, r4
   37800:	mov	r1, #8
   37804:	bl	dc88 <sendto_one_numeric@plt>
   37808:	mov	r0, #0
   3780c:	sub	sp, fp, #28
   37810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37814:	ldr	r0, [r4, #24]
   37818:	cmp	r0, #0
   3781c:	beq	37880 <user_mode+0x940>
   37820:	ldr	r0, [r0, #36]	; 0x24
   37824:	cmp	r0, #0
   37828:	beq	3786c <user_mode+0x92c>
   3782c:	ldr	r1, [pc, #388]	; 379b8 <user_mode+0xa78>
   37830:	add	r1, pc, r1
   37834:	bl	e594 <privilegeset_in_set@plt>
   37838:	cmp	r0, #0
   3783c:	beq	3786c <user_mode+0x92c>
   37840:	ldr	r0, [r4, #24]
   37844:	cmp	r0, #0
   37848:	ldrne	r0, [r0, #36]	; 0x24
   3784c:	cmpne	r0, #0
   37850:	beq	376e0 <user_mode+0x7a0>
   37854:	ldr	r1, [pc, #356]	; 379c0 <user_mode+0xa80>
   37858:	add	r1, pc, r1
   3785c:	bl	e594 <privilegeset_in_set@plt>
   37860:	cmp	r0, #0
   37864:	bne	37880 <user_mode+0x940>
   37868:	b	376e0 <user_mode+0x7a0>
   3786c:	ldr	r0, [r4, #24]
   37870:	cmp	r0, #0
   37874:	ldrne	r0, [r0, #36]	; 0x24
   37878:	cmpne	r0, #0
   3787c:	bne	37918 <user_mode+0x9d8>
   37880:	ldr	r1, [pc, #316]	; 379c4 <user_mode+0xa84>
   37884:	add	r1, pc, r1
   37888:	mov	r0, r4
   3788c:	bl	e414 <sendto_one_notice@plt>
   37890:	ldr	r0, [r4, #56]	; 0x38
   37894:	bic	r0, r0, #8192	; 0x2000
   37898:	str	r0, [r4, #56]	; 0x38
   3789c:	b	376e0 <user_mode+0x7a0>
   378a0:	ldr	r1, [pc, #288]	; 379c8 <user_mode+0xa88>
   378a4:	add	r1, pc, r1
   378a8:	bl	e594 <privilegeset_in_set@plt>
   378ac:	mov	r1, #5
   378b0:	cmp	r0, #0
   378b4:	bne	37724 <user_mode+0x7e4>
   378b8:	b	3770c <user_mode+0x7cc>
   378bc:	ldr	r0, [r0, #36]	; 0x24
   378c0:	mov	r1, #1
   378c4:	cmp	r0, #0
   378c8:	movweq	r1, #5
   378cc:	b	37724 <user_mode+0x7e4>
   378d0:	ldr	r1, [pc, #204]	; 379a4 <user_mode+0xa64>
   378d4:	add	r1, pc, r1
   378d8:	bl	e594 <privilegeset_in_set@plt>
   378dc:	cmp	r0, #0
   378e0:	bne	37604 <user_mode+0x6c4>
   378e4:	b	375f8 <user_mode+0x6b8>
   378e8:	ldr	r1, [pc, #184]	; 379a8 <user_mode+0xa68>
   378ec:	add	r1, pc, r1
   378f0:	bl	e594 <privilegeset_in_set@plt>
   378f4:	cmp	r0, #0
   378f8:	bne	37678 <user_mode+0x738>
   378fc:	b	3765c <user_mode+0x71c>
   37900:	ldr	r1, [pc, #168]	; 379b0 <user_mode+0xa70>
   37904:	add	r1, pc, r1
   37908:	bl	e594 <privilegeset_in_set@plt>
   3790c:	cmp	r0, #0
   37910:	bne	376cc <user_mode+0x78c>
   37914:	b	376b0 <user_mode+0x770>
   37918:	ldr	r1, [pc, #156]	; 379bc <user_mode+0xa7c>
   3791c:	add	r1, pc, r1
   37920:	bl	e594 <privilegeset_in_set@plt>
   37924:	cmp	r0, #0
   37928:	bne	37840 <user_mode+0x900>
   3792c:	b	37880 <user_mode+0x940>
   37930:	.word	0x0000fafa
   37934:	.word	0x00023bec
   37938:	.word	0x0000e5ee
   3793c:	.word	0x00009fd5
   37940:	.word	0x0000fa6f
   37944:	.word	0x0000f2f8
   37948:	.word	0x00023b10
   3794c:	.word	0x0000fa32
   37950:	.word	0x000238f4
   37954:	.word	0x000105bd
   37958:	.word	0x00023888
   3795c:	.word	0x00023684
   37960:	.word	0x000237d4
   37964:	.word	0x00023694
   37968:	.word	0x00023578
   3796c:	.word	0x000237b0
   37970:	.word	0x00023554
   37974:	.word	0x0002366c
   37978:	.word	0x00023530
   3797c:	.word	0x00023728
   37980:	.word	0x0000f567
   37984:	.word	0x000233f8
   37988:	.word	0x00023440
   3798c:	.word	0x00023804
   37990:	.word	0x00023834
   37994:	.word	0x00033ffc
   37998:	.word	0x000235c0
   3799c:	.word	0x0000f53b
   379a0:	.word	0x000235a8
   379a4:	.word	0x0000f1f7
   379a8:	.word	0x0000f211
   379ac:	.word	0x0000f4b2
   379b0:	.word	0x0000f241
   379b4:	.word	0x0000f49f
   379b8:	.word	0x0000949f
   379bc:	.word	0x000093be
   379c0:	.word	0x00009482
   379c4:	.word	0x0000f2fb
   379c8:	.word	0x000093ee
   379cc:	.word	0x00023308
   379d0:	.word	0x000231b8
   379d4:	.word	0x0002316c
   379d8:	.word	0x0000f2bc

000379dc <show_other_user_mode>:
   379dc:	push	{r4, r5, r6, sl, fp, lr}
   379e0:	add	fp, sp, #16
   379e4:	sub	sp, sp, #520	; 0x208
   379e8:	mov	r5, r1
   379ec:	mov	r6, r0
   379f0:	mov	r0, #43	; 0x2b
   379f4:	strb	r0, [sp, #8]
   379f8:	add	r0, sp, #8
   379fc:	add	r0, r0, #1
   37a00:	mov	r1, #0
   37a04:	ldr	r2, [pc, #112]	; 37a7c <show_other_user_mode+0xa0>
   37a08:	ldr	r2, [pc, r2]
   37a0c:	ldr	r3, [r2, r1, lsl #2]
   37a10:	ldr	r4, [r5, #56]	; 0x38
   37a14:	tst	r3, r4
   37a18:	strbne	r1, [r0], #1
   37a1c:	add	r1, r1, #1
   37a20:	cmp	r1, #128	; 0x80
   37a24:	bne	37a0c <show_other_user_mode+0x30>
   37a28:	mov	r1, #0
   37a2c:	strb	r1, [r0]
   37a30:	ldrb	r0, [r5, #65]	; 0x41
   37a34:	tst	r0, #32
   37a38:	ldrne	r0, [r5, #72]	; 0x48
   37a3c:	cmpne	r0, #0
   37a40:	bne	37a54 <show_other_user_mode+0x78>
   37a44:	add	r2, r5, #88	; 0x58
   37a48:	ldr	r1, [pc, #52]	; 37a84 <show_other_user_mode+0xa8>
   37a4c:	add	r1, pc, r1
   37a50:	b	37a68 <show_other_user_mode+0x8c>
   37a54:	bl	d178 <construct_snobuf@plt>
   37a58:	str	r0, [sp]
   37a5c:	add	r2, r5, #88	; 0x58
   37a60:	ldr	r1, [pc, #24]	; 37a80 <show_other_user_mode+0xa4>
   37a64:	add	r1, pc, r1
   37a68:	add	r3, sp, #8
   37a6c:	mov	r0, r6
   37a70:	bl	e414 <sendto_one_notice@plt>
   37a74:	sub	sp, fp, #16
   37a78:	pop	{r4, r5, r6, sl, fp, pc}
   37a7c:	.word	0x00022f68
   37a80:	.word	0x0000f7d7
   37a84:	.word	0x0000f807

00037a88 <rb_dlinkFindDestroy>:
   37a88:	push	{fp, lr}
   37a8c:	mov	fp, sp
   37a90:	cmp	r1, #0
   37a94:	beq	37ab4 <rb_dlinkFindDestroy+0x2c>
   37a98:	cmp	r0, #0
   37a9c:	beq	37ad4 <rb_dlinkFindDestroy+0x4c>
   37aa0:	bl	38780 <rb_dlinkFindDelete>
   37aa4:	cmp	r0, #0
   37aa8:	popeq	{fp, pc}
   37aac:	pop	{fp, lr}
   37ab0:	b	d7c0 <rb_free_rb_dlink_node@plt>
   37ab4:	ldr	r0, [pc, #56]	; 37af4 <rb_dlinkFindDestroy+0x6c>
   37ab8:	add	r0, pc, r0
   37abc:	ldr	r1, [pc, #52]	; 37af8 <rb_dlinkFindDestroy+0x70>
   37ac0:	add	r1, pc, r1
   37ac4:	ldr	r3, [pc, #48]	; 37afc <rb_dlinkFindDestroy+0x74>
   37ac8:	add	r3, pc, r3
   37acc:	movw	r2, #287	; 0x11f
   37ad0:	bl	e7e0 <__assert_fail@plt>
   37ad4:	ldr	r0, [pc, #36]	; 37b00 <rb_dlinkFindDestroy+0x78>
   37ad8:	add	r0, pc, r0
   37adc:	ldr	r1, [pc, #32]	; 37b04 <rb_dlinkFindDestroy+0x7c>
   37ae0:	add	r1, pc, r1
   37ae4:	ldr	r3, [pc, #28]	; 37b08 <rb_dlinkFindDestroy+0x80>
   37ae8:	add	r3, pc, r3
   37aec:	mov	r2, #288	; 0x120
   37af0:	bl	e7e0 <__assert_fail@plt>
   37af4:	.word	0x0000e38d
   37af8:	.word	0x00008af6
   37afc:	.word	0x000090fd
   37b00:	.word	0x00008b39
   37b04:	.word	0x00008ad6
   37b08:	.word	0x000090dd

00037b0c <send_umode_out>:
   37b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37b10:	add	fp, sp, #28
   37b14:	sub	sp, sp, #524	; 0x20c
   37b18:	mov	r5, r1
   37b1c:	mov	r6, r0
   37b20:	add	r9, sp, #8
   37b24:	mov	r0, #0
   37b28:	str	r2, [sp, #4]
   37b2c:	mov	r3, r9
   37b30:	bl	d850 <send_umode@plt>
   37b34:	ldr	r0, [pc, #236]	; 37c28 <send_umode_out+0x11c>
   37b38:	ldr	r0, [pc, r0]
   37b3c:	ldr	r7, [r0]
   37b40:	cmp	r7, #0
   37b44:	beq	37be8 <send_umode_out+0xdc>
   37b48:	add	r4, r5, #88	; 0x58
   37b4c:	add	r8, r5, #396	; 0x18c
   37b50:	ldr	sl, [pc, #212]	; 37c2c <send_umode_out+0x120>
   37b54:	add	sl, pc, sl
   37b58:	ldr	r0, [r7]
   37b5c:	cmp	r0, r6
   37b60:	beq	37bdc <send_umode_out+0xd0>
   37b64:	cmp	r0, r5
   37b68:	ldrbne	r1, [sp, #8]
   37b6c:	cmpne	r1, #0
   37b70:	beq	37bdc <send_umode_out+0xd0>
   37b74:	ldr	r1, [r0, #36]	; 0x24
   37b78:	ldrh	r2, [r1, #80]	; 0x50
   37b7c:	cmp	r2, #32
   37b80:	mov	r2, r4
   37b84:	mov	r3, r4
   37b88:	bne	37bd0 <send_umode_out+0xc4>
   37b8c:	ldrb	r2, [r1, #396]	; 0x18c
   37b90:	cmp	r2, #0
   37b94:	mov	r2, r4
   37b98:	beq	37bac <send_umode_out+0xa0>
   37b9c:	ldrb	r2, [r8]
   37ba0:	cmp	r2, #0
   37ba4:	mov	r2, r8
   37ba8:	moveq	r2, r4
   37bac:	ldrb	r1, [r1, #396]	; 0x18c
   37bb0:	cmp	r1, #0
   37bb4:	beq	37bcc <send_umode_out+0xc0>
   37bb8:	ldrb	r1, [r8]
   37bbc:	cmp	r1, #0
   37bc0:	mov	r3, r8
   37bc4:	moveq	r3, r4
   37bc8:	b	37bd0 <send_umode_out+0xc4>
   37bcc:	mov	r3, r4
   37bd0:	str	r9, [sp]
   37bd4:	mov	r1, sl
   37bd8:	bl	d1e4 <sendto_one@plt>
   37bdc:	ldr	r7, [r7, #8]
   37be0:	cmp	r7, #0
   37be4:	bne	37b58 <send_umode_out+0x4c>
   37be8:	cmp	r6, #0
   37bec:	ldrbne	r0, [r6, #65]	; 0x41
   37bf0:	tstne	r0, #32
   37bf4:	bne	37c00 <send_umode_out+0xf4>
   37bf8:	sub	sp, fp, #28
   37bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c00:	ldrh	r0, [r6, #80]	; 0x50
   37c04:	cmp	r0, #64	; 0x40
   37c08:	bne	37bf8 <send_umode_out+0xec>
   37c0c:	add	r3, sp, #8
   37c10:	mov	r0, r6
   37c14:	mov	r1, r5
   37c18:	ldr	r2, [sp, #4]
   37c1c:	bl	d850 <send_umode@plt>
   37c20:	sub	sp, fp, #28
   37c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c28:	.word	0x00022e98
   37c2c:	.word	0x0000f054

00037c30 <oper_up>:
   37c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37c34:	add	fp, sp, #28
   37c38:	sub	sp, sp, #28
   37c3c:	mov	r8, r1
   37c40:	mov	r4, r0
   37c44:	mov	r7, r0
   37c48:	ldr	sl, [r7, #56]!	; 0x38
   37c4c:	mov	r6, r7
   37c50:	ldr	r9, [r6, #16]!
   37c54:	orr	r0, sl, #4096	; 0x1000
   37c58:	str	r0, [r7]
   37c5c:	ldr	r1, [r1, #24]
   37c60:	cmp	r1, #0
   37c64:	beq	37c70 <oper_up+0x40>
   37c68:	orr	r0, r1, r0
   37c6c:	b	37c8c <oper_up+0x5c>
   37c70:	ldr	r1, [pc, #1044]	; 3808c <oper_up+0x45c>
   37c74:	ldr	r1, [pc, r1]
   37c78:	ldr	r1, [r1, #220]	; 0xdc
   37c7c:	cmp	r1, #0
   37c80:	movweq	r0, #4135	; 0x1027
   37c84:	orreq	r0, sl, r0
   37c88:	orrne	r0, r1, r0
   37c8c:	str	r0, [r7]
   37c90:	ldr	r0, [r8, #28]
   37c94:	cmp	r0, #0
   37c98:	beq	37cb4 <oper_up+0x84>
   37c9c:	orr	r0, r0, r9
   37ca0:	str	r0, [r6]
   37ca4:	ldr	r0, [r7]
   37ca8:	orr	r0, r0, #1
   37cac:	mov	r1, r7
   37cb0:	b	37cdc <oper_up+0xac>
   37cb4:	ldrb	r0, [r7]
   37cb8:	tst	r0, #1
   37cbc:	beq	37ce0 <oper_up+0xb0>
   37cc0:	ldr	r0, [pc, #968]	; 38090 <oper_up+0x460>
   37cc4:	ldr	r0, [pc, r0]
   37cc8:	ldr	r0, [r0, #224]	; 0xe0
   37ccc:	cmp	r0, #0
   37cd0:	orreq	r0, r9, #256	; 0x100
   37cd4:	orrne	r0, r0, r9
   37cd8:	mov	r1, r6
   37cdc:	str	r0, [r1]
   37ce0:	ldr	r1, [pc, #940]	; 38094 <oper_up+0x464>
   37ce4:	ldr	r1, [pc, r1]
   37ce8:	ldr	r0, [r1]
   37cec:	add	r0, r0, #1
   37cf0:	str	r0, [r1]
   37cf4:	ldr	r0, [r8, #20]
   37cf8:	ldrd	r2, [r4, #64]	; 0x40
   37cfc:	orr	r1, r3, r0, asr #31
   37d00:	orr	r0, r2, r0
   37d04:	orr	r0, r0, #5242880	; 0x500000
   37d08:	strd	r0, [r4, #64]	; 0x40
   37d0c:	ldr	r0, [r8]
   37d10:	bl	380ec <rb_strdup>
   37d14:	ldr	r1, [r4, #24]
   37d18:	str	r0, [r1, #32]
   37d1c:	ldr	r0, [r8, #32]
   37d20:	bl	dafc <privilegeset_ref@plt>
   37d24:	ldr	r1, [r4, #24]
   37d28:	str	r0, [r1, #36]	; 0x24
   37d2c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   37d30:	mov	r1, r0
   37d34:	ldr	r2, [pc, #860]	; 38098 <oper_up+0x468>
   37d38:	ldr	r2, [pc, r2]
   37d3c:	mov	r0, r4
   37d40:	bl	36698 <rb_dlinkAdd>
   37d44:	bl	dc64 <rb_make_rb_dlink_node@plt>
   37d48:	mov	r1, r0
   37d4c:	ldr	r2, [pc, #840]	; 3809c <oper_up+0x46c>
   37d50:	ldr	r2, [pc, r2]
   37d54:	mov	r0, r4
   37d58:	bl	36698 <rb_dlinkAdd>
   37d5c:	ldr	r0, [r4, #24]
   37d60:	cmp	r0, #0
   37d64:	beq	37de8 <oper_up+0x1b8>
   37d68:	ldr	r0, [r0, #36]	; 0x24
   37d6c:	cmp	r0, #0
   37d70:	beq	37d88 <oper_up+0x158>
   37d74:	ldr	r1, [pc, #804]	; 380a0 <oper_up+0x470>
   37d78:	add	r1, pc, r1
   37d7c:	bl	e594 <privilegeset_in_set@plt>
   37d80:	cmp	r0, #0
   37d84:	bne	37db4 <oper_up+0x184>
   37d88:	ldr	r0, [r4, #24]
   37d8c:	cmp	r0, #0
   37d90:	beq	37de8 <oper_up+0x1b8>
   37d94:	ldr	r0, [r0, #36]	; 0x24
   37d98:	cmp	r0, #0
   37d9c:	beq	37dd4 <oper_up+0x1a4>
   37da0:	ldr	r1, [pc, #764]	; 380a4 <oper_up+0x474>
   37da4:	add	r1, pc, r1
   37da8:	bl	e594 <privilegeset_in_set@plt>
   37dac:	cmp	r0, #0
   37db0:	beq	37dd4 <oper_up+0x1a4>
   37db4:	ldr	r0, [r4, #24]
   37db8:	cmp	r0, #0
   37dbc:	ldrne	r0, [r0, #36]	; 0x24
   37dc0:	cmpne	r0, #0
   37dc4:	bne	38074 <oper_up+0x444>
   37dc8:	ldr	r0, [r7]
   37dcc:	orr	r0, r0, #8192	; 0x2000
   37dd0:	str	r0, [r7]
   37dd4:	ldr	r0, [r4, #24]
   37dd8:	cmp	r0, #0
   37ddc:	ldrne	r0, [r0, #36]	; 0x24
   37de0:	cmpne	r0, #0
   37de4:	bne	38044 <oper_up+0x414>
   37de8:	ldr	r0, [r6]
   37dec:	bic	r0, r0, #64	; 0x40
   37df0:	str	r0, [r6]
   37df4:	ldr	r0, [r4, #24]
   37df8:	cmp	r0, #0
   37dfc:	ldrne	r0, [r0, #36]	; 0x24
   37e00:	cmpne	r0, #0
   37e04:	bne	37ffc <oper_up+0x3cc>
   37e08:	ldr	r0, [r7]
   37e0c:	bic	r0, r0, #4
   37e10:	str	r0, [r7]
   37e14:	ldr	r0, [pc, #664]	; 380b4 <oper_up+0x484>
   37e18:	ldr	r0, [pc, r0]
   37e1c:	ldrb	r0, [r0, #216]	; 0xd8
   37e20:	tst	r0, #1
   37e24:	beq	37e50 <oper_up+0x220>
   37e28:	ldr	r0, [r4, #24]
   37e2c:	cmp	r0, #0
   37e30:	ldrne	r0, [r0, #36]	; 0x24
   37e34:	cmpne	r0, #0
   37e38:	bne	3805c <oper_up+0x42c>
   37e3c:	ldr	r0, [r7]
   37e40:	bic	r0, r0, #1
   37e44:	str	r0, [r7]
   37e48:	mov	r0, #0
   37e4c:	str	r0, [r6]
   37e50:	str	sl, [sp, #20]
   37e54:	str	r4, [sp, #16]
   37e58:	str	r9, [sp, #24]
   37e5c:	ldr	r0, [pc, #600]	; 380bc <oper_up+0x48c>
   37e60:	ldr	r0, [pc, r0]
   37e64:	ldr	r0, [r0]
   37e68:	add	r1, sp, #16
   37e6c:	bl	e654 <call_hook@plt>
   37e70:	ldr	r0, [r4, #24]
   37e74:	cmp	r0, #0
   37e78:	ldrne	r0, [r0, #36]	; 0x24
   37e7c:	cmpne	r0, #0
   37e80:	bne	38014 <oper_up+0x3e4>
   37e84:	ldrb	r0, [r7, #1]
   37e88:	mov	r1, #1
   37e8c:	tst	r0, #16
   37e90:	ldrne	r0, [r4, #24]
   37e94:	cmpne	r0, #0
   37e98:	bne	38030 <oper_up+0x400>
   37e9c:	strb	r1, [r4, #82]	; 0x52
   37ea0:	ldr	r3, [r8]
   37ea4:	add	r0, r4, #163	; 0xa3
   37ea8:	add	r1, r4, #152	; 0x98
   37eac:	add	r7, r4, #88	; 0x58
   37eb0:	str	r7, [sp]
   37eb4:	str	r1, [sp, #4]
   37eb8:	str	r0, [sp, #8]
   37ebc:	ldr	r2, [pc, #512]	; 380c4 <oper_up+0x494>
   37ec0:	add	r2, pc, r2
   37ec4:	mov	r0, #256	; 0x100
   37ec8:	mov	r1, #0
   37ecc:	bl	d640 <sendto_realops_snomask@plt>
   37ed0:	ldr	r0, [pc, #496]	; 380c8 <oper_up+0x498>
   37ed4:	ldr	r0, [pc, r0]
   37ed8:	ldr	r2, [r0]
   37edc:	mov	r6, r4
   37ee0:	ldrb	r0, [r6, #396]!	; 0x18c
   37ee4:	ldr	r1, [r8]
   37ee8:	ldr	r3, [r8, #32]
   37eec:	ldr	r3, [r3, #8]
   37ef0:	cmp	r0, #0
   37ef4:	mov	r0, r6
   37ef8:	moveq	r0, r7
   37efc:	ldr	r5, [pc, #456]	; 380cc <oper_up+0x49c>
   37f00:	add	r5, pc, r5
   37f04:	str	r5, [sp]
   37f08:	stmib	sp, {r0, r1, r3}
   37f0c:	mov	r0, #0
   37f10:	mov	r1, #0
   37f14:	mov	r3, #0
   37f18:	bl	d9a0 <sendto_server@plt>
   37f1c:	ldr	r0, [r6, #-340]	; 0xfffffeac
   37f20:	and	r0, r0, #8
   37f24:	tst	sl, #8
   37f28:	bne	37f4c <oper_up+0x31c>
   37f2c:	cmp	r0, #0
   37f30:	beq	37f6c <oper_up+0x33c>
   37f34:	ldr	r0, [pc, #404]	; 380d0 <oper_up+0x4a0>
   37f38:	ldr	r0, [pc, r0]
   37f3c:	mov	r1, r0
   37f40:	ldr	r0, [r0, #8]
   37f44:	add	r0, r0, #1
   37f48:	b	37f68 <oper_up+0x338>
   37f4c:	cmp	r0, #0
   37f50:	bne	37f6c <oper_up+0x33c>
   37f54:	ldr	r0, [pc, #376]	; 380d4 <oper_up+0x4a4>
   37f58:	ldr	r0, [pc, r0]
   37f5c:	mov	r1, r0
   37f60:	ldr	r0, [r0, #8]
   37f64:	sub	r0, r0, #1
   37f68:	str	r0, [r1, #8]
   37f6c:	mov	r0, r4
   37f70:	mov	r1, r4
   37f74:	mov	r2, sl
   37f78:	bl	e444 <send_umode_out@plt>
   37f7c:	ldr	r0, [r4, #72]	; 0x48
   37f80:	bl	d178 <construct_snobuf@plt>
   37f84:	mov	r3, r0
   37f88:	ldr	r2, [pc, #328]	; 380d8 <oper_up+0x4a8>
   37f8c:	add	r2, pc, r2
   37f90:	mov	r0, r4
   37f94:	mov	r1, #8
   37f98:	bl	dc88 <sendto_one_numeric@plt>
   37f9c:	ldr	r0, [pc, #312]	; 380dc <oper_up+0x4ac>
   37fa0:	ldr	r0, [pc, r0]
   37fa4:	add	r2, r0, #88	; 0x58
   37fa8:	ldr	r1, [pc, #304]	; 380e0 <oper_up+0x4b0>
   37fac:	add	r1, pc, r1
   37fb0:	mov	r0, r4
   37fb4:	mov	r3, r7
   37fb8:	bl	d1e4 <sendto_one@plt>
   37fbc:	ldr	r0, [r8, #32]
   37fc0:	ldr	r2, [r0, #8]
   37fc4:	ldr	r1, [pc, #280]	; 380e4 <oper_up+0x4b4>
   37fc8:	add	r1, pc, r1
   37fcc:	mov	r0, r4
   37fd0:	bl	e414 <sendto_one_notice@plt>
   37fd4:	ldr	r0, [r8, #32]
   37fd8:	ldr	r2, [r0, #12]
   37fdc:	ldr	r1, [pc, #260]	; 380e8 <oper_up+0x4b8>
   37fe0:	add	r1, pc, r1
   37fe4:	mov	r0, r4
   37fe8:	bl	e414 <sendto_one_notice@plt>
   37fec:	mov	r0, r4
   37ff0:	bl	dc58 <send_oper_motd@plt>
   37ff4:	sub	sp, fp, #28
   37ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ffc:	ldr	r1, [pc, #172]	; 380b0 <oper_up+0x480>
   38000:	add	r1, pc, r1
   38004:	bl	e594 <privilegeset_in_set@plt>
   38008:	cmp	r0, #0
   3800c:	bne	37e14 <oper_up+0x1e4>
   38010:	b	37e08 <oper_up+0x1d8>
   38014:	ldr	r1, [pc, #164]	; 380c0 <oper_up+0x490>
   38018:	add	r1, pc, r1
   3801c:	bl	e594 <privilegeset_in_set@plt>
   38020:	mov	r1, #5
   38024:	cmp	r0, #0
   38028:	bne	37e9c <oper_up+0x26c>
   3802c:	b	37e84 <oper_up+0x254>
   38030:	ldr	r0, [r0, #36]	; 0x24
   38034:	mov	r1, #1
   38038:	cmp	r0, #0
   3803c:	movweq	r1, #5
   38040:	b	37e9c <oper_up+0x26c>
   38044:	ldr	r1, [pc, #96]	; 380ac <oper_up+0x47c>
   38048:	add	r1, pc, r1
   3804c:	bl	e594 <privilegeset_in_set@plt>
   38050:	cmp	r0, #0
   38054:	bne	37df4 <oper_up+0x1c4>
   38058:	b	37de8 <oper_up+0x1b8>
   3805c:	ldr	r1, [pc, #84]	; 380b8 <oper_up+0x488>
   38060:	add	r1, pc, r1
   38064:	bl	e594 <privilegeset_in_set@plt>
   38068:	cmp	r0, #0
   3806c:	bne	37e50 <oper_up+0x220>
   38070:	b	37e3c <oper_up+0x20c>
   38074:	ldr	r1, [pc, #44]	; 380a8 <oper_up+0x478>
   38078:	add	r1, pc, r1
   3807c:	bl	e594 <privilegeset_in_set@plt>
   38080:	cmp	r0, #0
   38084:	bne	37dd4 <oper_up+0x1a4>
   38088:	b	37dc8 <oper_up+0x198>
   3808c:	.word	0x00022f08
   38090:	.word	0x00022eb8
   38094:	.word	0x00022c3c
   38098:	.word	0x00022c00
   3809c:	.word	0x00022d50
   380a0:	.word	0x00008f57
   380a4:	.word	0x00008f36
   380a8:	.word	0x00008c62
   380ac:	.word	0x0000eab5
   380b0:	.word	0x0000eb45
   380b4:	.word	0x00022d64
   380b8:	.word	0x0000ea6b
   380bc:	.word	0x00022be4
   380c0:	.word	0x00008c7a
   380c4:	.word	0x0000ee07
   380c8:	.word	0x00022a54
   380cc:	.word	0x0000e4f0
   380d0:	.word	0x000229e8
   380d4:	.word	0x000229c8
   380d8:	.word	0x0000eb28
   380dc:	.word	0x00022bb8
   380e0:	.word	0x0000ed3c
   380e4:	.word	0x0000edac
   380e8:	.word	0x0000edb2

000380ec <rb_strdup>:
   380ec:	push	{r4, r5, fp, lr}
   380f0:	add	fp, sp, #8
   380f4:	mov	r4, r0
   380f8:	bl	dc94 <strlen@plt>
   380fc:	add	r0, r0, #1
   38100:	bl	da90 <malloc@plt>
   38104:	cmp	r0, #0
   38108:	beq	38120 <rb_strdup+0x34>
   3810c:	mov	r5, r0
   38110:	mov	r1, r4
   38114:	bl	d928 <strcpy@plt>
   38118:	mov	r0, r5
   3811c:	pop	{r4, r5, fp, pc}
   38120:	bl	d448 <rb_outofmemory@plt>

00038124 <find_umode_slot>:
   38124:	mov	r0, #0
   38128:	ldr	r2, [pc, #48]	; 38160 <find_umode_slot+0x3c>
   3812c:	ldr	r2, [pc, r2]
   38130:	mov	r1, #0
   38134:	ldr	r3, [r2, r0, lsl #2]
   38138:	orr	r1, r3, r1
   3813c:	add	r0, r0, #1
   38140:	cmp	r0, #128	; 0x80
   38144:	bne	38134 <find_umode_slot+0x10>
   38148:	mov	r2, #1
   3814c:	mov	r0, r2
   38150:	lsl	r2, r2, #1
   38154:	tst	r0, r1
   38158:	bne	3814c <find_umode_slot+0x28>
   3815c:	bx	lr
   38160:	.word	0x00022844

00038164 <construct_umodebuf>:
   38164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38168:	add	fp, sp, #28
   3816c:	sub	sp, sp, #4
   38170:	ldr	r7, [pc, #216]	; 38250 <construct_umodebuf+0xec>
   38174:	ldr	r7, [pc, r7]
   38178:	mov	r4, #0
   3817c:	strb	r4, [r7]
   38180:	ldr	r5, [pc, #204]	; 38254 <construct_umodebuf+0xf0>
   38184:	add	r5, pc, r5
   38188:	ldr	r8, [pc, #200]	; 38258 <construct_umodebuf+0xf4>
   3818c:	ldr	r8, [pc, r8]
   38190:	ldr	sl, [pc, #196]	; 3825c <construct_umodebuf+0xf8>
   38194:	add	sl, pc, sl
   38198:	ldr	r9, [pc, #192]	; 38260 <construct_umodebuf+0xfc>
   3819c:	add	r9, pc, r9
   381a0:	ldr	r0, [r5]
   381a4:	cmp	r0, #0
   381a8:	beq	381bc <construct_umodebuf+0x58>
   381ac:	mov	r6, r8
   381b0:	ldr	r1, [r6, r4, lsl #2]!
   381b4:	cmp	r0, r1
   381b8:	bne	381c8 <construct_umodebuf+0x64>
   381bc:	add	r0, r8, r4, lsl #2
   381c0:	mov	r6, r5
   381c4:	b	3821c <construct_umodebuf+0xb8>
   381c8:	cmp	r1, #0
   381cc:	beq	381f0 <construct_umodebuf+0x8c>
   381d0:	ldr	r1, [pc, #148]	; 3826c <construct_umodebuf+0x108>
   381d4:	ldr	r1, [pc, r1]
   381d8:	bic	r0, r1, r0
   381dc:	str	r0, [sl]
   381e0:	mov	r0, #8
   381e4:	mov	r1, #0
   381e8:	mov	r2, r9
   381ec:	b	38210 <construct_umodebuf+0xac>
   381f0:	ldr	r1, [pc, #108]	; 38264 <construct_umodebuf+0x100>
   381f4:	ldr	r1, [pc, r1]
   381f8:	orr	r0, r1, r0
   381fc:	str	r0, [sl]
   38200:	mov	r0, #8
   38204:	mov	r1, #0
   38208:	ldr	r2, [pc, #88]	; 38268 <construct_umodebuf+0x104>
   3820c:	add	r2, pc, r2
   38210:	mov	r3, r4
   38214:	bl	d640 <sendto_realops_snomask@plt>
   38218:	mov	r0, r5
   3821c:	ldr	r0, [r0]
   38220:	str	r0, [r6]
   38224:	ldr	r0, [r8, r4, lsl #2]
   38228:	cmp	r0, #0
   3822c:	strbne	r4, [r7], #1
   38230:	add	r5, r5, #4
   38234:	add	r4, r4, #1
   38238:	cmp	r4, #128	; 0x80
   3823c:	bne	381a0 <construct_umodebuf+0x3c>
   38240:	mov	r0, #0
   38244:	strb	r0, [r7]
   38248:	sub	sp, fp, #28
   3824c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38250:	.word	0x000228d8
   38254:	.word	0x000331d8
   38258:	.word	0x000227e4
   3825c:	.word	0x000331c4
   38260:	.word	0x0000ec27
   38264:	.word	0x00033164
   38268:	.word	0x0000eb9d
   3826c:	.word	0x00033184

00038270 <change_nick_user_host>:
   38270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38274:	add	fp, sp, #28
   38278:	sub	sp, sp, #412	; 0x19c
   3827c:	mov	r8, r3
   38280:	mov	r6, r2
   38284:	mov	r7, r1
   38288:	mov	r9, r0
   3828c:	add	r5, r0, #88	; 0x58
   38290:	mov	r0, r5
   38294:	bl	e750 <irccmp@plt>
   38298:	mov	sl, r0
   3829c:	mov	r0, r5
   382a0:	str	r7, [sp, #64]	; 0x40
   382a4:	mov	r1, r7
   382a8:	bl	d0c4 <strcmp@plt>
   382ac:	str	r0, [sp, #48]	; 0x30
   382b0:	add	r4, r9, #152	; 0x98
   382b4:	mov	r0, r4
   382b8:	mov	r1, r6
   382bc:	bl	e750 <irccmp@plt>
   382c0:	mov	r7, #1
   382c4:	cmp	r0, #0
   382c8:	bne	382e4 <change_nick_user_host+0x74>
   382cc:	add	r0, r9, #163	; 0xa3
   382d0:	mov	r1, r8
   382d4:	bl	e750 <irccmp@plt>
   382d8:	mov	r7, r0
   382dc:	cmp	r0, #0
   382e0:	movwne	r7, #1
   382e4:	mov	r0, #0
   382e8:	strb	r0, [fp, #-108]	; 0xffffff94
   382ec:	cmp	sl, #0
   382f0:	beq	38304 <change_nick_user_host+0x94>
   382f4:	ldr	r0, [fp, #8]
   382f8:	str	r0, [r9, #52]	; 0x34
   382fc:	mov	r0, r9
   38300:	bl	e150 <monitor_signoff@plt>
   38304:	mov	r0, r9
   38308:	bl	d7f0 <invalidate_bancache_user@plt>
   3830c:	cmp	r7, #0
   38310:	beq	38634 <change_nick_user_host+0x3c4>
   38314:	str	sl, [sp, #40]	; 0x28
   38318:	ldr	r2, [fp, #12]
   3831c:	add	r3, fp, #16
   38320:	str	r3, [sp, #72]	; 0x48
   38324:	add	r7, sp, #76	; 0x4c
   38328:	mov	r0, r7
   3832c:	mov	r1, #255	; 0xff
   38330:	bl	e450 <vsnprintf@plt>
   38334:	ldr	r0, [pc, #1032]	; 38744 <change_nick_user_host+0x4d4>
   38338:	ldr	r0, [pc, r0]
   3833c:	ldr	r2, [r0]
   38340:	add	r0, r9, #163	; 0xa3
   38344:	str	r5, [sp, #44]	; 0x2c
   38348:	str	r5, [sp]
   3834c:	str	r4, [sp, #36]	; 0x24
   38350:	str	r4, [sp, #4]
   38354:	str	r0, [sp, #32]
   38358:	str	r0, [sp, #8]
   3835c:	str	r7, [sp, #12]
   38360:	mov	r7, #0
   38364:	ldr	r3, [pc, #988]	; 38748 <change_nick_user_host+0x4d8>
   38368:	add	r3, pc, r3
   3836c:	mov	r0, r9
   38370:	mov	r1, #0
   38374:	bl	e480 <sendto_common_channels_local_butone@plt>
   38378:	ldr	r0, [r9, #24]
   3837c:	ldr	r1, [r0]
   38380:	cmp	r1, #0
   38384:	mov	r4, r8
   38388:	beq	38550 <change_nick_user_host+0x2e0>
   3838c:	movw	r0, #345	; 0x159
   38390:	add	r0, r9, r0
   38394:	str	r0, [sp, #56]	; 0x38
   38398:	sub	r0, fp, #42	; 0x2a
   3839c:	add	r0, r0, #1
   383a0:	str	r0, [sp, #52]	; 0x34
   383a4:	str	r9, [sp, #60]	; 0x3c
   383a8:	mov	r5, r6
   383ac:	mov	r6, r4
   383b0:	str	r1, [sp, #68]	; 0x44
   383b4:	ldr	r9, [r1]
   383b8:	ldr	sl, [r9, #36]	; 0x24
   383bc:	cmp	r9, #0
   383c0:	sub	r8, fp, #42	; 0x2a
   383c4:	beq	38428 <change_nick_user_host+0x1b8>
   383c8:	ldrb	r0, [r9, #44]	; 0x2c
   383cc:	tst	r0, #2
   383d0:	sub	r8, fp, #42	; 0x2a
   383d4:	beq	38408 <change_nick_user_host+0x198>
   383d8:	mov	r0, #111	; 0x6f
   383dc:	strb	r0, [fp, #-42]	; 0xffffffd6
   383e0:	sub	r4, fp, #108	; 0x6c
   383e4:	mov	r0, r4
   383e8:	ldr	r1, [sp, #64]	; 0x40
   383ec:	bl	d8bc <strcat@plt>
   383f0:	mov	r0, r4
   383f4:	bl	dc94 <strlen@plt>
   383f8:	add	r0, r4, r0
   383fc:	mov	r1, #32
   38400:	strh	r1, [r0]
   38404:	ldr	r8, [sp, #52]	; 0x34
   38408:	ldrb	r0, [r9, #44]	; 0x2c
   3840c:	tst	r0, #1
   38410:	beq	38428 <change_nick_user_host+0x1b8>
   38414:	mov	r0, #118	; 0x76
   38418:	strb	r0, [r8], #1
   3841c:	sub	r0, fp, #108	; 0x6c
   38420:	ldr	r1, [sp, #64]	; 0x40
   38424:	bl	d8bc <strcat@plt>
   38428:	strb	r7, [r8]
   3842c:	ldr	r8, [pc, #792]	; 3874c <change_nick_user_host+0x4dc>
   38430:	ldr	r8, [pc, r8]
   38434:	ldr	r0, [r8]
   38438:	ldr	r1, [pc, #784]	; 38750 <change_nick_user_host+0x4e0>
   3843c:	ldr	r1, [pc, r1]
   38440:	mov	r7, r1
   38444:	ldr	r1, [r1]
   38448:	ldr	r2, [sl, #236]	; 0xec
   3844c:	str	sl, [sp]
   38450:	ldr	r3, [pc, #764]	; 38754 <change_nick_user_host+0x4e4>
   38454:	add	r3, pc, r3
   38458:	str	r3, [sp, #4]
   3845c:	ldr	r4, [sp, #64]	; 0x40
   38460:	add	r3, sp, #8
   38464:	stm	r3, {r4, r5, r6}
   38468:	str	r2, [sp, #20]
   3846c:	orr	r3, r0, r1
   38470:	ldr	r9, [sp, #60]	; 0x3c
   38474:	mov	r0, r9
   38478:	mov	r1, #0
   3847c:	mov	r2, #0
   38480:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   38484:	ldr	r3, [r8]
   38488:	ldr	r2, [r7]
   3848c:	ldr	r0, [r9, #24]
   38490:	ldrb	r1, [r0, #40]!	; 0x28
   38494:	ldr	r7, [sl, #236]	; 0xec
   38498:	cmp	r1, #0
   3849c:	ldr	r1, [pc, #692]	; 38758 <change_nick_user_host+0x4e8>
   384a0:	add	r1, pc, r1
   384a4:	moveq	r0, r1
   384a8:	str	sl, [sp]
   384ac:	ldr	r1, [pc, #680]	; 3875c <change_nick_user_host+0x4ec>
   384b0:	add	r1, pc, r1
   384b4:	stmib	sp, {r1, r4}
   384b8:	mov	r4, r6
   384bc:	mov	r6, r5
   384c0:	str	r5, [sp, #12]
   384c4:	str	r4, [sp, #16]
   384c8:	str	r7, [sp, #20]
   384cc:	str	r0, [sp, #24]
   384d0:	ldr	r0, [sp, #56]	; 0x38
   384d4:	str	r0, [sp, #28]
   384d8:	mov	r0, r9
   384dc:	mov	r1, #0
   384e0:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   384e4:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   384e8:	cmp	r0, #0
   384ec:	beq	38538 <change_nick_user_host+0x2c8>
   384f0:	ldr	r3, [r8]
   384f4:	ldr	r0, [r9, #32]
   384f8:	ldr	r1, [sl, #236]	; 0xec
   384fc:	add	r0, r0, #88	; 0x58
   38500:	str	sl, [sp]
   38504:	ldr	r2, [pc, #596]	; 38760 <change_nick_user_host+0x4f0>
   38508:	add	r2, pc, r2
   3850c:	str	r2, [sp, #4]
   38510:	str	r0, [sp, #8]
   38514:	str	r1, [sp, #12]
   38518:	sub	r0, fp, #42	; 0x2a
   3851c:	str	r0, [sp, #16]
   38520:	sub	r0, fp, #108	; 0x6c
   38524:	str	r0, [sp, #20]
   38528:	mov	r0, r9
   3852c:	mov	r1, #0
   38530:	mov	r2, #0
   38534:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   38538:	mov	r7, #0
   3853c:	strb	r7, [fp, #-108]	; 0xffffff94
   38540:	ldr	r1, [sp, #68]	; 0x44
   38544:	ldr	r1, [r1, #8]
   38548:	cmp	r1, #0
   3854c:	bne	383a8 <change_nick_user_host+0x138>
   38550:	ldr	r0, [r9, #24]
   38554:	ldr	r0, [r0, #24]
   38558:	cmp	r0, #0
   3855c:	mov	r7, r6
   38560:	mov	r6, r4
   38564:	ldr	r4, [pc, #504]	; 38764 <change_nick_user_host+0x4f4>
   38568:	ldr	r4, [pc, r4]
   3856c:	beq	385a0 <change_nick_user_host+0x330>
   38570:	ldr	r2, [r4]
   38574:	ldr	r1, [pc, #492]	; 38768 <change_nick_user_host+0x4f8>
   38578:	ldr	r1, [pc, r1]
   3857c:	ldr	r1, [r1]
   38580:	ldr	r3, [sp, #64]	; 0x40
   38584:	stm	sp, {r3, r7}
   38588:	str	r6, [sp, #8]
   3858c:	str	r0, [sp, #12]
   38590:	ldr	r3, [pc, #468]	; 3876c <change_nick_user_host+0x4fc>
   38594:	add	r3, pc, r3
   38598:	mov	r0, r9
   3859c:	bl	e480 <sendto_common_channels_local_butone@plt>
   385a0:	ldr	r1, [r4]
   385a4:	ldr	r5, [sp, #44]	; 0x2c
   385a8:	str	r5, [sp]
   385ac:	ldr	r4, [sp, #36]	; 0x24
   385b0:	str	r4, [sp, #4]
   385b4:	ldr	r0, [sp, #32]
   385b8:	str	r0, [sp, #8]
   385bc:	str	r7, [sp, #12]
   385c0:	mov	r8, r6
   385c4:	str	r6, [sp, #16]
   385c8:	ldr	r3, [pc, #416]	; 38770 <change_nick_user_host+0x500>
   385cc:	add	r3, pc, r3
   385d0:	mov	r0, r9
   385d4:	mov	r2, #0
   385d8:	bl	e480 <sendto_common_channels_local_butone@plt>
   385dc:	ldrb	r0, [r9, #65]	; 0x41
   385e0:	tst	r0, #32
   385e4:	ldr	sl, [sp, #40]	; 0x28
   385e8:	mov	r6, r7
   385ec:	ldrne	r0, [sp, #48]	; 0x30
   385f0:	cmpne	r0, #0
   385f4:	beq	38698 <change_nick_user_host+0x428>
   385f8:	ldrh	r0, [r9, #80]	; 0x50
   385fc:	cmp	r0, #64	; 0x40
   38600:	bne	38698 <change_nick_user_host+0x428>
   38604:	str	r8, [sp]
   38608:	ldr	r0, [sp, #64]	; 0x40
   3860c:	str	r0, [sp, #4]
   38610:	ldr	r1, [pc, #348]	; 38774 <change_nick_user_host+0x504>
   38614:	add	r1, pc, r1
   38618:	mov	r0, r9
   3861c:	mov	r2, r5
   38620:	mov	r3, r6
   38624:	bl	d1e4 <sendto_one@plt>
   38628:	cmp	r4, r6
   3862c:	bne	386a0 <change_nick_user_host+0x430>
   38630:	b	386b0 <change_nick_user_host+0x440>
   38634:	ldr	r0, [sp, #48]	; 0x30
   38638:	cmp	r0, #0
   3863c:	beq	38698 <change_nick_user_host+0x428>
   38640:	stm	sp, {r5, r6, r8}
   38644:	ldr	r0, [sp, #64]	; 0x40
   38648:	str	r0, [sp, #12]
   3864c:	ldr	r3, [pc, #292]	; 38778 <change_nick_user_host+0x508>
   38650:	add	r3, pc, r3
   38654:	mov	r0, r9
   38658:	mov	r1, #0
   3865c:	mov	r2, #0
   38660:	bl	de2c <sendto_common_channels_local@plt>
   38664:	ldrb	r0, [r9, #65]	; 0x41
   38668:	tst	r0, #32
   3866c:	beq	38698 <change_nick_user_host+0x428>
   38670:	add	r0, r9, #163	; 0xa3
   38674:	ldr	r1, [sp, #64]	; 0x40
   38678:	stm	sp, {r1, r4}
   3867c:	str	r0, [sp, #8]
   38680:	ldr	r2, [pc, #244]	; 3877c <change_nick_user_host+0x50c>
   38684:	add	r2, pc, r2
   38688:	mov	r0, #64	; 0x40
   3868c:	mov	r1, #0
   38690:	mov	r3, r5
   38694:	bl	d640 <sendto_realops_snomask@plt>
   38698:	cmp	r4, r6
   3869c:	beq	386b0 <change_nick_user_host+0x440>
   386a0:	mov	r0, r4
   386a4:	mov	r1, r6
   386a8:	mov	r2, #11
   386ac:	bl	e510 <rb_strlcpy@plt>
   386b0:	add	r0, r9, #163	; 0xa3
   386b4:	mov	r1, r8
   386b8:	mov	r2, #64	; 0x40
   386bc:	bl	e510 <rb_strlcpy@plt>
   386c0:	cmp	sl, #0
   386c4:	beq	38714 <change_nick_user_host+0x4a4>
   386c8:	mov	r0, r9
   386cc:	mov	r1, #1
   386d0:	bl	e3cc <whowas_add_history@plt>
   386d4:	mov	r0, r5
   386d8:	mov	r1, r9
   386dc:	bl	db20 <del_from_client_hash@plt>
   386e0:	mov	r0, r5
   386e4:	ldr	r1, [sp, #64]	; 0x40
   386e8:	mov	r2, #32
   386ec:	bl	e510 <rb_strlcpy@plt>
   386f0:	mov	r0, r5
   386f4:	mov	r1, r9
   386f8:	bl	da48 <add_to_client_hash@plt>
   386fc:	mov	r0, r9
   38700:	bl	ddfc <monitor_signon@plt>
   38704:	mov	r0, r9
   38708:	bl	dcc4 <del_all_accepts@plt>
   3870c:	sub	sp, fp, #28
   38710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38714:	mov	r0, r5
   38718:	mov	r1, r9
   3871c:	bl	db20 <del_from_client_hash@plt>
   38720:	mov	r0, r5
   38724:	ldr	r1, [sp, #64]	; 0x40
   38728:	mov	r2, #32
   3872c:	bl	e510 <rb_strlcpy@plt>
   38730:	mov	r0, r5
   38734:	mov	r1, r9
   38738:	bl	da48 <add_to_client_hash@plt>
   3873c:	sub	sp, fp, #28
   38740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38744:	.word	0x00022518
   38748:	.word	0x00009249
   3874c:	.word	0x00022420
   38750:	.word	0x00022690
   38754:	.word	0x00008513
   38758:	.word	0x00008e9d
   3875c:	.word	0x000084c9
   38760:	.word	0x0000e8e5
   38764:	.word	0x000222e8
   38768:	.word	0x00022470
   3876c:	.word	0x000083fe
   38770:	.word	0x0000e834
   38774:	.word	0x0000e804
   38778:	.word	0x00008c47
   3877c:	.word	0x00008b84

00038780 <rb_dlinkFindDelete>:
   38780:	push	{fp, lr}
   38784:	mov	fp, sp
   38788:	cmp	r1, #0
   3878c:	beq	38800 <rb_dlinkFindDelete+0x80>
   38790:	mov	ip, r0
   38794:	cmp	r0, #0
   38798:	beq	38820 <rb_dlinkFindDelete+0xa0>
   3879c:	ldr	r3, [r1]
   387a0:	mov	r0, r3
   387a4:	cmp	r3, #0
   387a8:	popeq	{fp, pc}
   387ac:	ldr	r2, [r0]
   387b0:	ldr	r3, [r0, #8]
   387b4:	cmp	r2, ip
   387b8:	bne	387a0 <rb_dlinkFindDelete+0x20>
   387bc:	add	r2, r3, #4
   387c0:	cmp	r3, #0
   387c4:	addeq	r2, r1, #4
   387c8:	ldr	r3, [r0, #4]
   387cc:	str	r3, [r2]
   387d0:	ldmib	r0, {r2, ip}
   387d4:	cmp	r2, #0
   387d8:	mov	r3, r1
   387dc:	addne	r3, r2, #8
   387e0:	str	ip, [r3]
   387e4:	mov	r2, #0
   387e8:	str	r2, [r0, #4]
   387ec:	str	r2, [r0, #8]
   387f0:	ldr	r2, [r1, #8]
   387f4:	sub	r2, r2, #1
   387f8:	str	r2, [r1, #8]
   387fc:	pop	{fp, pc}
   38800:	ldr	r0, [pc, #56]	; 38840 <rb_dlinkFindDelete+0xc0>
   38804:	add	r0, pc, r0
   38808:	ldr	r1, [pc, #52]	; 38844 <rb_dlinkFindDelete+0xc4>
   3880c:	add	r1, pc, r1
   38810:	ldr	r3, [pc, #48]	; 38848 <rb_dlinkFindDelete+0xc8>
   38814:	add	r3, pc, r3
   38818:	movw	r2, #258	; 0x102
   3881c:	bl	e7e0 <__assert_fail@plt>
   38820:	ldr	r0, [pc, #36]	; 3884c <rb_dlinkFindDelete+0xcc>
   38824:	add	r0, pc, r0
   38828:	ldr	r1, [pc, #32]	; 38850 <rb_dlinkFindDelete+0xd0>
   3882c:	add	r1, pc, r1
   38830:	ldr	r3, [pc, #28]	; 38854 <rb_dlinkFindDelete+0xd4>
   38834:	add	r3, pc, r3
   38838:	movw	r2, #259	; 0x103
   3883c:	bl	e7e0 <__assert_fail@plt>
   38840:	.word	0x0000d641
   38844:	.word	0x00007daa
   38848:	.word	0x000083e2
   3884c:	.word	0x00007ded
   38850:	.word	0x00007d8a
   38854:	.word	0x000083c2

00038858 <clear_scache_hash_table>:
   38858:	push	{fp, lr}
   3885c:	mov	fp, sp
   38860:	ldr	r0, [pc, #28]	; 38884 <clear_scache_hash_table+0x2c>
   38864:	add	r0, pc, r0
   38868:	ldr	r1, [pc, #24]	; 38888 <clear_scache_hash_table+0x30>
   3886c:	add	r1, pc, r1
   38870:	bl	d85c <rb_radixtree_create@plt>
   38874:	ldr	r1, [pc, #16]	; 3888c <clear_scache_hash_table+0x34>
   38878:	add	r1, pc, r1
   3887c:	str	r0, [r1]
   38880:	pop	{fp, pc}
   38884:	.word	0x0000ea04
   38888:	.word	0x0000001c
   3888c:	.word	0x00032ce4

00038890 <irccasecanon>:
   38890:	ldrb	r1, [r0]
   38894:	cmp	r1, #0
   38898:	bxeq	lr
   3889c:	add	r0, r0, #1
   388a0:	ldr	r2, [pc, #32]	; 388c8 <irccasecanon+0x38>
   388a4:	ldr	r2, [pc, r2]
   388a8:	uxtb	r1, r1
   388ac:	ldrb	r1, [r2, r1]
   388b0:	strb	r1, [r0, #-1]
   388b4:	ldrb	r1, [r0]
   388b8:	add	r0, r0, #1
   388bc:	cmp	r1, #0
   388c0:	bne	388a8 <irccasecanon+0x18>
   388c4:	bx	lr
   388c8:	.word	0x000220c4

000388cc <scache_connect>:
   388cc:	push	{r4, r5, r6, sl, fp, lr}
   388d0:	add	fp, sp, #16
   388d4:	mov	r4, r2
   388d8:	mov	r5, r1
   388dc:	bl	38920 <find_or_add>
   388e0:	mov	r6, r0
   388e4:	add	r0, r0, #64	; 0x40
   388e8:	mov	r1, r5
   388ec:	mov	r2, #51	; 0x33
   388f0:	bl	e510 <rb_strlcpy@plt>
   388f4:	ldr	r0, [r6, #116]	; 0x74
   388f8:	mov	r1, #1
   388fc:	mov	r2, r0
   38900:	bfi	r2, r1, #0, #2
   38904:	cmp	r4, #0
   38908:	orrne	r2, r0, #3
   3890c:	str	r2, [r6, #116]	; 0x74
   38910:	bl	d07c <rb_current_time@plt>
   38914:	str	r0, [r6, #124]	; 0x7c
   38918:	mov	r0, r6
   3891c:	pop	{r4, r5, r6, sl, fp, pc}

00038920 <find_or_add>:
   38920:	push	{r4, r5, fp, lr}
   38924:	add	fp, sp, #8
   38928:	mov	r5, r0
   3892c:	ldr	r0, [pc, #104]	; 3899c <find_or_add+0x7c>
   38930:	ldr	r0, [pc, r0]
   38934:	mov	r1, r5
   38938:	bl	dee0 <rb_radixtree_retrieve@plt>
   3893c:	mov	r4, r0
   38940:	cmp	r0, #0
   38944:	beq	38950 <find_or_add+0x30>
   38948:	mov	r0, r4
   3894c:	pop	{r4, r5, fp, pc}
   38950:	bl	38d04 <rb_malloc>
   38954:	mov	r4, r0
   38958:	mov	r1, r5
   3895c:	mov	r2, #64	; 0x40
   38960:	bl	e510 <rb_strlcpy@plt>
   38964:	mov	r5, #0
   38968:	strb	r5, [r4, #64]	; 0x40
   3896c:	str	r5, [r4, #116]	; 0x74
   38970:	bl	d07c <rb_current_time@plt>
   38974:	str	r0, [r4, #120]	; 0x78
   38978:	str	r5, [r4, #124]	; 0x7c
   3897c:	str	r5, [r4, #128]	; 0x80
   38980:	ldr	r0, [pc, #24]	; 389a0 <find_or_add+0x80>
   38984:	ldr	r0, [pc, r0]
   38988:	mov	r1, r4
   3898c:	mov	r2, r4
   38990:	bl	dd9c <rb_radixtree_add@plt>
   38994:	mov	r0, r4
   38998:	pop	{r4, r5, fp, pc}
   3899c:	.word	0x00032c2c
   389a0:	.word	0x00032bd8

000389a4 <scache_split>:
   389a4:	cmp	r0, #0
   389a8:	bxeq	lr
   389ac:	push	{r4, sl, fp, lr}
   389b0:	add	fp, sp, #8
   389b4:	mov	r4, r0
   389b8:	ldr	r0, [r0, #116]	; 0x74
   389bc:	bic	r0, r0, #1
   389c0:	str	r0, [r4, #116]	; 0x74
   389c4:	bl	d07c <rb_current_time@plt>
   389c8:	str	r0, [r4, #128]	; 0x80
   389cc:	pop	{r4, sl, fp, lr}
   389d0:	bx	lr

000389d4 <scache_get_name>:
   389d4:	bx	lr

000389d8 <scache_send_flattened_links>:
   389d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   389dc:	add	fp, sp, #28
   389e0:	sub	sp, sp, #52	; 0x34
   389e4:	mov	r9, r0
   389e8:	ldr	r0, [pc, #368]	; 38b60 <scache_send_flattened_links+0x188>
   389ec:	ldr	r0, [pc, r0]
   389f0:	add	r5, sp, #12
   389f4:	mov	r1, r5
   389f8:	bl	e318 <rb_radixtree_foreach_start@plt>
   389fc:	ldr	r0, [pc, #352]	; 38b64 <scache_send_flattened_links+0x18c>
   38a00:	ldr	r0, [pc, r0]
   38a04:	mov	r1, r5
   38a08:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38a0c:	cmp	r0, #0
   38a10:	beq	38b04 <scache_send_flattened_links+0x12c>
   38a14:	mov	r7, r0
   38a18:	ldr	r0, [pc, #328]	; 38b68 <scache_send_flattened_links+0x190>
   38a1c:	ldr	r0, [pc, r0]
   38a20:	add	r5, r0, #88	; 0x58
   38a24:	add	r6, sp, #12
   38a28:	ldr	r8, [pc, #316]	; 38b6c <scache_send_flattened_links+0x194>
   38a2c:	ldr	r8, [pc, r8]
   38a30:	mov	r0, r7
   38a34:	mov	r1, r5
   38a38:	bl	e750 <irccmp@plt>
   38a3c:	cmp	r0, #0
   38a40:	beq	38ad8 <scache_send_flattened_links+0x100>
   38a44:	ldr	r0, [r7, #116]	; 0x74
   38a48:	tst	r0, #2
   38a4c:	beq	38a5c <scache_send_flattened_links+0x84>
   38a50:	ldr	r1, [r8, #12]
   38a54:	cmp	r1, #0
   38a58:	beq	38ad8 <scache_send_flattened_links+0x100>
   38a5c:	tst	r0, #1
   38a60:	bne	38a94 <scache_send_flattened_links+0xbc>
   38a64:	ldr	r4, [r7, #128]	; 0x80
   38a68:	bl	d07c <rb_current_time@plt>
   38a6c:	ldr	r1, [r8, #4]
   38a70:	sub	r0, r0, r1
   38a74:	cmp	r4, r0
   38a78:	ble	38ad8 <scache_send_flattened_links+0x100>
   38a7c:	ldr	r0, [r7, #120]	; 0x78
   38a80:	ldr	r2, [r7, #128]	; 0x80
   38a84:	sub	r0, r2, r0
   38a88:	cmp	r0, r1
   38a8c:	bgt	38aac <scache_send_flattened_links+0xd4>
   38a90:	b	38ad8 <scache_send_flattened_links+0x100>
   38a94:	ldr	sl, [r7, #120]	; 0x78
   38a98:	bl	d07c <rb_current_time@plt>
   38a9c:	ldr	r1, [r8, #4]
   38aa0:	sub	r0, r0, r1
   38aa4:	cmp	sl, r0
   38aa8:	bge	38ad8 <scache_send_flattened_links+0x100>
   38aac:	add	r0, r7, #64	; 0x40
   38ab0:	str	r5, [sp]
   38ab4:	mov	r1, #1
   38ab8:	str	r1, [sp, #4]
   38abc:	str	r0, [sp, #8]
   38ac0:	mov	r0, r9
   38ac4:	mov	r1, #364	; 0x16c
   38ac8:	ldr	r2, [pc, #160]	; 38b70 <scache_send_flattened_links+0x198>
   38acc:	add	r2, pc, r2
   38ad0:	mov	r3, r7
   38ad4:	bl	dc88 <sendto_one_numeric@plt>
   38ad8:	ldr	r0, [pc, #148]	; 38b74 <scache_send_flattened_links+0x19c>
   38adc:	ldr	r0, [pc, r0]
   38ae0:	mov	r1, r6
   38ae4:	bl	d580 <rb_radixtree_foreach_next@plt>
   38ae8:	ldr	r0, [pc, #136]	; 38b78 <scache_send_flattened_links+0x1a0>
   38aec:	ldr	r0, [pc, r0]
   38af0:	mov	r1, r6
   38af4:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38af8:	mov	r7, r0
   38afc:	cmp	r0, #0
   38b00:	bne	38a30 <scache_send_flattened_links+0x58>
   38b04:	mov	r0, #0
   38b08:	str	r0, [sp, #4]
   38b0c:	ldr	r0, [pc, #104]	; 38b7c <scache_send_flattened_links+0x1a4>
   38b10:	ldr	r0, [pc, r0]
   38b14:	movw	r1, #345	; 0x159
   38b18:	add	r1, r0, r1
   38b1c:	str	r1, [sp, #8]
   38b20:	add	r3, r0, #88	; 0x58
   38b24:	str	r3, [sp]
   38b28:	ldr	r2, [pc, #80]	; 38b80 <scache_send_flattened_links+0x1a8>
   38b2c:	add	r2, pc, r2
   38b30:	mov	r0, r9
   38b34:	mov	r1, #364	; 0x16c
   38b38:	bl	dc88 <sendto_one_numeric@plt>
   38b3c:	ldr	r2, [pc, #64]	; 38b84 <scache_send_flattened_links+0x1ac>
   38b40:	add	r2, pc, r2
   38b44:	ldr	r3, [pc, #60]	; 38b88 <scache_send_flattened_links+0x1b0>
   38b48:	add	r3, pc, r3
   38b4c:	mov	r0, r9
   38b50:	movw	r1, #365	; 0x16d
   38b54:	bl	dc88 <sendto_one_numeric@plt>
   38b58:	sub	sp, fp, #28
   38b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38b60:	.word	0x00032b70
   38b64:	.word	0x00032b5c
   38b68:	.word	0x0002213c
   38b6c:	.word	0x00021f88
   38b70:	.word	0x0000e7af
   38b74:	.word	0x00032a80
   38b78:	.word	0x00032a70
   38b7c:	.word	0x00022048
   38b80:	.word	0x0000e74f
   38b84:	.word	0x0000e748
   38b88:	.word	0x000087f5

00038b8c <scache_send_missing>:
   38b8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38b90:	add	fp, sp, #24
   38b94:	sub	sp, sp, #40	; 0x28
   38b98:	mov	r9, r0
   38b9c:	ldr	r0, [pc, #164]	; 38c48 <scache_send_missing+0xbc>
   38ba0:	ldr	r0, [pc, r0]
   38ba4:	mov	r5, sp
   38ba8:	mov	r1, r5
   38bac:	bl	e318 <rb_radixtree_foreach_start@plt>
   38bb0:	ldr	r0, [pc, #148]	; 38c4c <scache_send_missing+0xc0>
   38bb4:	ldr	r0, [pc, r0]
   38bb8:	mov	r1, r5
   38bbc:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38bc0:	cmp	r0, #0
   38bc4:	beq	38c40 <scache_send_missing+0xb4>
   38bc8:	mov	r7, r0
   38bcc:	movw	r5, #44672	; 0xae80
   38bd0:	movt	r5, #65534	; 0xfffe
   38bd4:	ldr	r8, [pc, #116]	; 38c50 <scache_send_missing+0xc4>
   38bd8:	add	r8, pc, r8
   38bdc:	mov	r6, sp
   38be0:	ldrb	r0, [r7, #116]	; 0x74
   38be4:	tst	r0, #1
   38be8:	bne	38c14 <scache_send_missing+0x88>
   38bec:	ldr	r4, [r7, #128]	; 0x80
   38bf0:	bl	d07c <rb_current_time@plt>
   38bf4:	add	r0, r0, r5
   38bf8:	cmp	r4, r0
   38bfc:	ble	38c14 <scache_send_missing+0x88>
   38c00:	mov	r0, r9
   38c04:	mov	r1, #15
   38c08:	mov	r2, r8
   38c0c:	mov	r3, r7
   38c10:	bl	dc88 <sendto_one_numeric@plt>
   38c14:	ldr	r0, [pc, #56]	; 38c54 <scache_send_missing+0xc8>
   38c18:	ldr	r0, [pc, r0]
   38c1c:	mov	r1, r6
   38c20:	bl	d580 <rb_radixtree_foreach_next@plt>
   38c24:	ldr	r0, [pc, #44]	; 38c58 <scache_send_missing+0xcc>
   38c28:	ldr	r0, [pc, r0]
   38c2c:	mov	r1, r6
   38c30:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38c34:	mov	r7, r0
   38c38:	cmp	r0, #0
   38c3c:	bne	38be0 <scache_send_missing+0x54>
   38c40:	sub	sp, fp, #24
   38c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   38c48:	.word	0x000329bc
   38c4c:	.word	0x000329a8
   38c50:	.word	0x0000e6c8
   38c54:	.word	0x00032944
   38c58:	.word	0x00032934

00038c5c <count_scache>:
   38c5c:	push	{r4, r5, r6, sl, fp, lr}
   38c60:	add	fp, sp, #16
   38c64:	sub	sp, sp, #40	; 0x28
   38c68:	mov	r4, r1
   38c6c:	mov	r5, r0
   38c70:	mov	r0, #0
   38c74:	str	r0, [r5]
   38c78:	str	r0, [r1]
   38c7c:	ldr	r0, [pc, #112]	; 38cf4 <count_scache+0x98>
   38c80:	ldr	r0, [pc, r0]
   38c84:	mov	r6, sp
   38c88:	mov	r1, r6
   38c8c:	bl	e318 <rb_radixtree_foreach_start@plt>
   38c90:	ldr	r0, [pc, #96]	; 38cf8 <count_scache+0x9c>
   38c94:	ldr	r0, [pc, r0]
   38c98:	mov	r1, r6
   38c9c:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38ca0:	cmp	r0, #0
   38ca4:	beq	38cec <count_scache+0x90>
   38ca8:	mov	r6, sp
   38cac:	ldr	r0, [r5]
   38cb0:	add	r0, r0, #1
   38cb4:	str	r0, [r5]
   38cb8:	ldr	r0, [r4]
   38cbc:	add	r0, r0, #132	; 0x84
   38cc0:	str	r0, [r4]
   38cc4:	ldr	r0, [pc, #48]	; 38cfc <count_scache+0xa0>
   38cc8:	ldr	r0, [pc, r0]
   38ccc:	mov	r1, r6
   38cd0:	bl	d580 <rb_radixtree_foreach_next@plt>
   38cd4:	ldr	r0, [pc, #36]	; 38d00 <count_scache+0xa4>
   38cd8:	ldr	r0, [pc, r0]
   38cdc:	mov	r1, r6
   38ce0:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38ce4:	cmp	r0, #0
   38ce8:	bne	38cac <count_scache+0x50>
   38cec:	sub	sp, fp, #16
   38cf0:	pop	{r4, r5, r6, sl, fp, pc}
   38cf4:	.word	0x000328dc
   38cf8:	.word	0x000328c8
   38cfc:	.word	0x00032894
   38d00:	.word	0x00032884

00038d04 <rb_malloc>:
   38d04:	push	{fp, lr}
   38d08:	mov	fp, sp
   38d0c:	mov	r0, #1
   38d10:	mov	r1, #132	; 0x84
   38d14:	bl	cfa4 <calloc@plt>
   38d18:	cmp	r0, #0
   38d1c:	popne	{fp, pc}
   38d20:	bl	d448 <rb_outofmemory@plt>

00038d24 <send_queued>:
   38d24:	push	{r4, r5, r6, r7, fp, lr}
   38d28:	add	fp, sp, #16
   38d2c:	mov	r4, r0
   38d30:	ldr	r0, [r0, #432]	; 0x1b0
   38d34:	ldr	r5, [r0, #300]	; 0x12c
   38d38:	cmp	r5, #0
   38d3c:	popeq	{r4, r5, r6, r7, fp, pc}
   38d40:	ldrb	r1, [r4, #65]	; 0x41
   38d44:	tst	r1, #64	; 0x40
   38d48:	ldrbeq	r1, [r0, #452]	; 0x1c4
   38d4c:	tsteq	r1, #2
   38d50:	beq	38d58 <send_queued+0x34>
   38d54:	pop	{r4, r5, r6, r7, fp, pc}
   38d58:	ldr	r0, [r0, #64]	; 0x40
   38d5c:	cmp	r0, #0
   38d60:	beq	38e20 <send_queued+0xfc>
   38d64:	ldr	r0, [r4, #432]	; 0x1b0
   38d68:	add	r1, r0, #52	; 0x34
   38d6c:	mov	r0, r5
   38d70:	bl	dff4 <rb_linebuf_flush@plt>
   38d74:	cmp	r0, #1
   38d78:	blt	38e04 <send_queued+0xe0>
   38d7c:	ldr	r6, [pc, #240]	; 38e74 <send_queued+0x150>
   38d80:	ldr	r6, [pc, r6]
   38d84:	mov	r7, #0
   38d88:	ldr	r1, [r4, #432]	; 0x1b0
   38d8c:	ldr	r2, [r1, #452]	; 0x1c4
   38d90:	bic	r2, r2, #2
   38d94:	str	r2, [r1, #452]	; 0x1c4
   38d98:	ldrh	r2, [r1, #124]	; 0x7c
   38d9c:	add	r2, r2, r0
   38da0:	strh	r2, [r1, #124]	; 0x7c
   38da4:	ldr	r2, [r6, #432]	; 0x1b0
   38da8:	ldrh	r3, [r2, #124]	; 0x7c
   38dac:	add	r3, r3, r0
   38db0:	strh	r3, [r2, #124]	; 0x7c
   38db4:	ldrh	r0, [r1, #124]	; 0x7c
   38db8:	cmp	r7, r0, lsr #10
   38dbc:	bne	38dd4 <send_queued+0xb0>
   38dc0:	uxth	r0, r3
   38dc4:	cmp	r0, #1024	; 0x400
   38dc8:	mov	r0, r3
   38dcc:	mov	r1, r2
   38dd0:	bcc	38dec <send_queued+0xc8>
   38dd4:	and	r2, r0, #64512	; 0xfc00
   38dd8:	bfc	r0, #10, #22
   38ddc:	strh	r0, [r1, #124]	; 0x7c
   38de0:	ldr	r0, [r1, #112]	; 0x70
   38de4:	add	r0, r0, r2, lsr #10
   38de8:	str	r0, [r1, #112]	; 0x70
   38dec:	ldr	r0, [r4, #432]	; 0x1b0
   38df0:	add	r1, r0, #52	; 0x34
   38df4:	mov	r0, r5
   38df8:	bl	dff4 <rb_linebuf_flush@plt>
   38dfc:	cmp	r0, #0
   38e00:	bgt	38d88 <send_queued+0x64>
   38e04:	cmp	r0, #0
   38e08:	beq	38e58 <send_queued+0x134>
   38e0c:	bl	de38 <__errno_location@plt>
   38e10:	ldr	r0, [r0]
   38e14:	bl	dac0 <rb_ignore_errno@plt>
   38e18:	cmp	r0, #0
   38e1c:	beq	38e58 <send_queued+0x134>
   38e20:	ldr	r0, [r4, #432]	; 0x1b0
   38e24:	ldr	r2, [r0, #64]	; 0x40
   38e28:	ldr	r1, [r0, #452]	; 0x1c4
   38e2c:	cmp	r2, #0
   38e30:	beq	38e68 <send_queued+0x144>
   38e34:	orr	r1, r1, #2
   38e38:	str	r1, [r0, #452]	; 0x1c4
   38e3c:	ldr	r0, [r0, #300]	; 0x12c
   38e40:	ldr	r2, [pc, #48]	; 38e78 <send_queued+0x154>
   38e44:	add	r2, pc, r2
   38e48:	mov	r1, #2
   38e4c:	mov	r3, r4
   38e50:	pop	{r4, r5, r6, r7, fp, lr}
   38e54:	b	d304 <rb_setselect@plt>
   38e58:	mov	r0, r4
   38e5c:	mov	r1, #0
   38e60:	pop	{r4, r5, r6, r7, fp, lr}
   38e64:	b	d364 <dead_link@plt>
   38e68:	bic	r1, r1, #2
   38e6c:	str	r1, [r0, #452]	; 0x1c4
   38e70:	pop	{r4, r5, r6, r7, fp, pc}
   38e74:	.word	0x00021dd8
   38e78:	.word	0x00000030

00038e7c <send_queued_write>:
   38e7c:	mov	r0, r1
   38e80:	ldr	r1, [r1, #432]	; 0x1b0
   38e84:	ldr	r2, [r1, #452]	; 0x1c4
   38e88:	bic	r2, r2, #2
   38e8c:	str	r2, [r1, #452]	; 0x1c4
   38e90:	b	38d24 <send_queued>

00038e94 <send_pop_queue>:
   38e94:	mov	r1, r0
   38e98:	ldr	r0, [r0, #36]	; 0x24
   38e9c:	cmp	r0, #0
   38ea0:	moveq	r0, r1
   38ea4:	ldr	r1, [r0, #64]	; 0x40
   38ea8:	and	r1, r1, #24576	; 0x6000
   38eac:	teq	r1, #8192	; 0x2000
   38eb0:	bxne	lr
   38eb4:	ldr	r1, [r0, #432]	; 0x1b0
   38eb8:	ldr	r1, [r1, #64]	; 0x40
   38ebc:	cmp	r1, #1
   38ec0:	blt	38ec8 <send_pop_queue+0x34>
   38ec4:	b	38d24 <send_queued>
   38ec8:	bx	lr

00038ecc <sendto_one>:
   38ecc:	sub	sp, sp, #8
   38ed0:	push	{r4, r5, r6, sl, fp, lr}
   38ed4:	add	fp, sp, #16
   38ed8:	sub	sp, sp, #320	; 0x140
   38edc:	str	r3, [fp, #12]
   38ee0:	str	r2, [fp, #8]
   38ee4:	str	r1, [sp, #8]
   38ee8:	mov	r1, #0
   38eec:	str	r1, [sp, #4]
   38ef0:	str	r1, [sp, #12]
   38ef4:	sub	r2, fp, #20
   38ef8:	str	r2, [sp, #16]
   38efc:	str	r1, [sp, #20]
   38f00:	ldr	r4, [r0, #36]	; 0x24
   38f04:	cmp	r4, #0
   38f08:	moveq	r4, r0
   38f0c:	ldrb	r0, [r4, #65]	; 0x41
   38f10:	tst	r0, #64	; 0x40
   38f14:	bne	38f68 <sendto_one+0x9c>
   38f18:	add	r5, sp, #24
   38f1c:	mov	r0, r5
   38f20:	bl	d7b4 <rb_linebuf_newbuf@plt>
   38f24:	ldr	r1, [pc, #76]	; 38f78 <sendto_one+0xac>
   38f28:	ldr	r1, [pc, r1]
   38f2c:	add	r6, sp, #52	; 0x34
   38f30:	mov	r0, r6
   38f34:	bl	38f7c <build_msgbuf_tags>
   38f38:	add	r0, fp, #8
   38f3c:	str	r0, [fp, #-20]	; 0xffffffec
   38f40:	add	r3, sp, #4
   38f44:	mov	r0, r5
   38f48:	mov	r1, r6
   38f4c:	mov	r2, r4
   38f50:	bl	38fb8 <linebuf_put_tags>
   38f54:	mov	r0, r4
   38f58:	mov	r1, r5
   38f5c:	bl	39030 <_send_linebuf>
   38f60:	mov	r0, r5
   38f64:	bl	e00c <rb_linebuf_donebuf@plt>
   38f68:	sub	sp, fp, #16
   38f6c:	pop	{r4, r5, r6, sl, fp, lr}
   38f70:	add	sp, sp, #8
   38f74:	bx	lr
   38f78:	.word	0x00021c30

00038f7c <build_msgbuf_tags>:
   38f7c:	push	{r4, r5, fp, lr}
   38f80:	add	fp, sp, #8
   38f84:	sub	sp, sp, #16
   38f88:	mov	r4, r1
   38f8c:	mov	r5, r0
   38f90:	bl	3b40c <msgbuf_init>
   38f94:	stmib	sp, {r4, r5}
   38f98:	ldr	r0, [pc, #20]	; 38fb4 <build_msgbuf_tags+0x38>
   38f9c:	ldr	r0, [pc, r0]
   38fa0:	ldr	r0, [r0]
   38fa4:	add	r1, sp, #4
   38fa8:	bl	e654 <call_hook@plt>
   38fac:	sub	sp, fp, #8
   38fb0:	pop	{r4, r5, fp, pc}
   38fb4:	.word	0x00021a7c

00038fb8 <linebuf_put_tags>:
   38fb8:	push	{fp, lr}
   38fbc:	mov	fp, sp
   38fc0:	sub	sp, sp, #32
   38fc4:	str	r1, [fp, #-8]
   38fc8:	ldrh	r1, [r2, #80]	; 0x50
   38fcc:	mov	ip, #0
   38fd0:	cmp	r1, #64	; 0x40
   38fd4:	mov	r1, #0
   38fd8:	bne	38fec <linebuf_put_tags+0x34>
   38fdc:	ldr	r2, [r2, #432]	; 0x1b0
   38fe0:	cmp	r2, #0
   38fe4:	mov	r1, #0
   38fe8:	ldrne	r1, [r2, #296]	; 0x128
   38fec:	str	r1, [fp, #-4]
   38ff0:	str	ip, [sp, #8]
   38ff4:	movw	r1, #513	; 0x201
   38ff8:	str	r1, [sp, #4]
   38ffc:	ldr	r1, [pc, #40]	; 3902c <linebuf_put_tags+0x74>
   39000:	ldr	r1, [pc, r1]
   39004:	str	r1, [sp, #12]
   39008:	sub	r1, fp, #8
   3900c:	str	r1, [sp, #16]
   39010:	str	r3, [sp, #20]
   39014:	movw	r1, #511	; 0x1ff
   39018:	str	r1, [r3]
   3901c:	add	r1, sp, #4
   39020:	bl	e45c <rb_linebuf_put@plt>
   39024:	mov	sp, fp
   39028:	pop	{fp, pc}
   3902c:	.word	0x00021918

00039030 <_send_linebuf>:
   39030:	push	{r4, r5, r6, r7, fp, lr}
   39034:	add	fp, sp, #16
   39038:	sub	sp, sp, #8
   3903c:	mov	r4, r0
   39040:	ldrh	r0, [r0, #80]	; 0x50
   39044:	cmp	r0, #4
   39048:	bne	39068 <_send_linebuf+0x38>
   3904c:	ldr	r2, [pc, #304]	; 39184 <_send_linebuf+0x154>
   39050:	add	r2, pc, r2
   39054:	mov	r0, #256	; 0x100
   39058:	mov	r1, #0
   3905c:	sub	sp, fp, #16
   39060:	pop	{r4, r5, r6, r7, fp, lr}
   39064:	b	392bc <sendto_realops_snomask>
   39068:	ldr	r0, [r4, #64]	; 0x40
   3906c:	and	r0, r0, #24576	; 0x6000
   39070:	teq	r0, #8192	; 0x2000
   39074:	bne	39174 <_send_linebuf+0x144>
   39078:	mov	r5, r1
   3907c:	ldr	r0, [r4, #432]	; 0x1b0
   39080:	ldr	r6, [r0, #64]	; 0x40
   39084:	mov	r0, r4
   39088:	bl	dc7c <get_sendq@plt>
   3908c:	cmp	r6, r0
   39090:	ble	39120 <_send_linebuf+0xf0>
   39094:	ldrh	r0, [r4, #80]	; 0x50
   39098:	cmp	r0, #32
   3909c:	bne	3910c <_send_linebuf+0xdc>
   390a0:	ldr	r0, [r4, #432]	; 0x1b0
   390a4:	ldr	r5, [r0, #64]	; 0x40
   390a8:	mov	r0, r4
   390ac:	bl	dc7c <get_sendq@plt>
   390b0:	str	r5, [sp]
   390b4:	str	r0, [sp, #4]
   390b8:	add	r3, r4, #88	; 0x58
   390bc:	ldr	r5, [pc, #184]	; 3917c <_send_linebuf+0x14c>
   390c0:	add	r5, pc, r5
   390c4:	mov	r0, #256	; 0x100
   390c8:	mov	r1, #0
   390cc:	mov	r2, r5
   390d0:	bl	d640 <sendto_realops_snomask@plt>
   390d4:	mov	r0, r4
   390d8:	mov	r1, #1
   390dc:	bl	e168 <log_client_name@plt>
   390e0:	mov	r6, r0
   390e4:	ldr	r0, [r4, #432]	; 0x1b0
   390e8:	ldr	r7, [r0, #64]	; 0x40
   390ec:	mov	r0, r4
   390f0:	bl	dc7c <get_sendq@plt>
   390f4:	str	r0, [sp]
   390f8:	mov	r0, #5
   390fc:	mov	r1, r5
   39100:	mov	r2, r6
   39104:	mov	r3, r7
   39108:	bl	e0b4 <ilog@plt>
   3910c:	mov	r0, r4
   39110:	mov	r1, #1
   39114:	sub	sp, fp, #16
   39118:	pop	{r4, r5, r6, r7, fp, lr}
   3911c:	b	d364 <dead_link@plt>
   39120:	ldr	r0, [r4, #432]	; 0x1b0
   39124:	add	r0, r0, #52	; 0x34
   39128:	mov	r1, r5
   3912c:	bl	d2d4 <rb_linebuf_attach@plt>
   39130:	ldr	r0, [r4, #432]	; 0x1b0
   39134:	ldr	r1, [r0, #108]	; 0x6c
   39138:	add	r1, r1, #1
   3913c:	str	r1, [r0, #108]	; 0x6c
   39140:	ldr	r1, [pc, #56]	; 39180 <_send_linebuf+0x150>
   39144:	ldr	r1, [pc, r1]
   39148:	ldr	r1, [r1, #432]	; 0x1b0
   3914c:	ldr	r2, [r1, #108]	; 0x6c
   39150:	add	r2, r2, #1
   39154:	str	r2, [r1, #108]	; 0x6c
   39158:	ldr	r0, [r0, #64]	; 0x40
   3915c:	cmp	r0, #1
   39160:	blt	39174 <_send_linebuf+0x144>
   39164:	mov	r0, r4
   39168:	sub	sp, fp, #16
   3916c:	pop	{r4, r5, r6, r7, fp, lr}
   39170:	b	38d24 <send_queued>
   39174:	sub	sp, fp, #16
   39178:	pop	{r4, r5, r6, r7, fp, pc}
   3917c:	.word	0x0000e35a
   39180:	.word	0x00021a14
   39184:	.word	0x0000e3a8

00039188 <sendto_one_prefix>:
   39188:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3918c:	add	fp, sp, #24
   39190:	sub	sp, sp, #336	; 0x150
   39194:	mov	r7, r1
   39198:	mov	r5, r0
   3919c:	ldr	r4, [r0, #36]	; 0x24
   391a0:	str	r3, [sp, #24]
   391a4:	mov	r0, #0
   391a8:	str	r0, [sp, #20]
   391ac:	str	r0, [sp, #28]
   391b0:	sub	r1, fp, #28
   391b4:	str	r1, [sp, #32]
   391b8:	str	r0, [sp, #36]	; 0x24
   391bc:	ldrb	r0, [r4, #65]	; 0x41
   391c0:	tst	r0, #64	; 0x40
   391c4:	bne	392ac <sendto_one_prefix+0x124>
   391c8:	ldrh	r0, [r4, #80]	; 0x50
   391cc:	cmp	r0, #4
   391d0:	bne	391f0 <sendto_one_prefix+0x68>
   391d4:	ldr	r2, [pc, #216]	; 392b4 <sendto_one_prefix+0x12c>
   391d8:	add	r2, pc, r2
   391dc:	mov	r0, #256	; 0x100
   391e0:	mov	r1, #0
   391e4:	bl	d640 <sendto_realops_snomask@plt>
   391e8:	sub	sp, fp, #24
   391ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   391f0:	mov	r6, r2
   391f4:	add	r0, sp, #68	; 0x44
   391f8:	mov	r1, r7
   391fc:	bl	38f7c <build_msgbuf_tags>
   39200:	add	r0, sp, #40	; 0x28
   39204:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39208:	add	r0, fp, #8
   3920c:	str	r0, [fp, #-28]	; 0xffffffe4
   39210:	ldr	r0, [r5, #36]	; 0x24
   39214:	ldrh	r1, [r0, #80]	; 0x50
   39218:	cmp	r1, #32
   3921c:	bne	3923c <sendto_one_prefix+0xb4>
   39220:	ldrb	r1, [r0, #396]	; 0x18c
   39224:	cmp	r1, #0
   39228:	beq	39244 <sendto_one_prefix+0xbc>
   3922c:	ldrb	r1, [r7, #396]!	; 0x18c
   39230:	cmp	r1, #0
   39234:	subeq	r7, r7, #308	; 0x134
   39238:	b	39248 <sendto_one_prefix+0xc0>
   3923c:	add	r7, r7, #88	; 0x58
   39240:	b	39268 <sendto_one_prefix+0xe0>
   39244:	add	r7, r7, #88	; 0x58
   39248:	ldrb	r0, [r0, #396]	; 0x18c
   3924c:	cmp	r0, #0
   39250:	beq	39268 <sendto_one_prefix+0xe0>
   39254:	mov	r0, r5
   39258:	ldrb	r1, [r0, #396]!	; 0x18c
   3925c:	cmp	r1, #0
   39260:	subeq	r0, r0, #308	; 0x134
   39264:	b	3926c <sendto_one_prefix+0xe4>
   39268:	add	r0, r5, #88	; 0x58
   3926c:	ldr	r1, [pc, #68]	; 392b8 <sendto_one_prefix+0x130>
   39270:	add	r1, pc, r1
   39274:	stm	sp, {r1, r7}
   39278:	str	r6, [sp, #8]
   3927c:	str	r0, [sp, #12]
   39280:	add	r6, sp, #40	; 0x28
   39284:	add	r1, sp, #68	; 0x44
   39288:	add	r3, sp, #20
   3928c:	mov	r0, r6
   39290:	mov	r2, r5
   39294:	bl	3954c <linebuf_put_tagsf>
   39298:	mov	r0, r4
   3929c:	mov	r1, r6
   392a0:	bl	39030 <_send_linebuf>
   392a4:	mov	r0, r6
   392a8:	bl	e00c <rb_linebuf_donebuf@plt>
   392ac:	sub	sp, fp, #24
   392b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   392b4:	.word	0x0000e0df
   392b8:	.word	0x0000e061

000392bc <sendto_realops_snomask>:
   392bc:	sub	sp, sp, #4
   392c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   392c4:	add	fp, sp, #28
   392c8:	sub	sp, sp, #1968	; 0x7b0
   392cc:	mov	r6, r2
   392d0:	mov	r5, r1
   392d4:	mov	r4, r0
   392d8:	str	r3, [fp, #8]
   392dc:	ldr	r8, [pc, #564]	; 39518 <sendto_realops_snomask+0x25c>
   392e0:	ldr	r8, [pc, r8]
   392e4:	sub	r7, fp, #300	; 0x12c
   392e8:	mov	r0, r7
   392ec:	mov	r1, r8
   392f0:	bl	38f7c <build_msgbuf_tags>
   392f4:	add	r3, fp, #8
   392f8:	str	r3, [fp, #-36]	; 0xffffffdc
   392fc:	ldr	r9, [pc, #536]	; 3951c <sendto_realops_snomask+0x260>
   39300:	add	r9, pc, r9
   39304:	mov	r0, r9
   39308:	mov	r1, #512	; 0x200
   3930c:	mov	r2, r6
   39310:	bl	e450 <vsnprintf@plt>
   39314:	add	r0, r8, #88	; 0x58
   39318:	stm	sp, {r0, r9}
   3931c:	add	r0, sp, #20
   39320:	ldr	r3, [pc, #504]	; 39520 <sendto_realops_snomask+0x264>
   39324:	add	r3, pc, r3
   39328:	mov	r1, r7
   3932c:	mov	r2, #0
   39330:	bl	d6c4 <msgbuf_cache_initf@plt>
   39334:	tst	r5, #256	; 0x100
   39338:	ldrne	r0, [pc, #484]	; 39524 <sendto_realops_snomask+0x268>
   3933c:	ldrne	r0, [pc, r0]
   39340:	ldrne	r0, [r0, #316]	; 0x13c
   39344:	cmpne	r0, #0
   39348:	bne	39378 <sendto_realops_snomask+0xbc>
   3934c:	ldr	r0, [pc, #480]	; 39534 <sendto_realops_snomask+0x278>
   39350:	ldr	r0, [pc, r0]
   39354:	ldr	r0, [r0]
   39358:	cmp	r0, #0
   3935c:	beq	393d4 <sendto_realops_snomask+0x118>
   39360:	ldr	r1, [pc, #464]	; 39538 <sendto_realops_snomask+0x27c>
   39364:	add	r1, pc, r1
   39368:	ldr	r2, [pc, #460]	; 3953c <sendto_realops_snomask+0x280>
   3936c:	add	r2, pc, r2
   39370:	bl	e414 <sendto_one_notice@plt>
   39374:	b	393d4 <sendto_realops_snomask+0x118>
   39378:	mov	r0, r4
   3937c:	bl	d178 <construct_snobuf@plt>
   39380:	ldrb	r0, [r0, #1]
   39384:	cmp	r0, #0
   39388:	beq	393d4 <sendto_realops_snomask+0x118>
   3938c:	ldr	r1, [pc, #404]	; 39528 <sendto_realops_snomask+0x26c>
   39390:	ldr	r1, [pc, r1]
   39394:	ldr	r1, [r1]
   39398:	ldr	r2, [pc, #396]	; 3952c <sendto_realops_snomask+0x270>
   3939c:	ldr	r2, [pc, r2]
   393a0:	ldr	r2, [r2]
   393a4:	add	r3, r8, #396	; 0x18c
   393a8:	ldr	r7, [pc, #384]	; 39530 <sendto_realops_snomask+0x274>
   393ac:	add	r7, pc, r7
   393b0:	str	r7, [sp]
   393b4:	str	r3, [sp, #4]
   393b8:	str	r0, [sp, #8]
   393bc:	str	r9, [sp, #12]
   393c0:	orr	r2, r1, r2
   393c4:	mov	r0, #0
   393c8:	mov	r1, #0
   393cc:	mov	r3, #0
   393d0:	bl	d9a0 <sendto_server@plt>
   393d4:	ldr	r0, [pc, #356]	; 39540 <sendto_realops_snomask+0x284>
   393d8:	ldr	r0, [pc, r0]
   393dc:	ldr	r6, [r0]
   393e0:	cmp	r6, #0
   393e4:	beq	39500 <sendto_realops_snomask+0x244>
   393e8:	bic	r7, r5, #256	; 0x100
   393ec:	ldr	r8, [pc, #336]	; 39544 <sendto_realops_snomask+0x288>
   393f0:	add	r8, pc, r8
   393f4:	ldr	r9, [pc, #332]	; 39548 <sendto_realops_snomask+0x28c>
   393f8:	add	r9, pc, r9
   393fc:	add	sl, sp, #20
   39400:	b	39418 <sendto_realops_snomask+0x15c>
   39404:	mov	r1, r8
   39408:	bl	e594 <privilegeset_in_set@plt>
   3940c:	cmp	r0, #0
   39410:	bne	394f8 <sendto_realops_snomask+0x23c>
   39414:	b	394bc <sendto_realops_snomask+0x200>
   39418:	ldr	r5, [r6]
   3941c:	ldr	r6, [r6, #8]
   39420:	cmp	r7, #1
   39424:	beq	39480 <sendto_realops_snomask+0x1c4>
   39428:	cmp	r7, #2
   3942c:	bne	394bc <sendto_realops_snomask+0x200>
   39430:	ldr	r0, [r5, #24]
   39434:	cmp	r0, #0
   39438:	beq	394f8 <sendto_realops_snomask+0x23c>
   3943c:	ldr	r0, [r0, #36]	; 0x24
   39440:	cmp	r0, #0
   39444:	beq	39458 <sendto_realops_snomask+0x19c>
   39448:	mov	r1, r9
   3944c:	bl	e594 <privilegeset_in_set@plt>
   39450:	cmp	r0, #0
   39454:	bne	394bc <sendto_realops_snomask+0x200>
   39458:	ldr	r0, [r5, #24]
   3945c:	cmp	r0, #0
   39460:	ldrne	r0, [r0, #36]	; 0x24
   39464:	cmpne	r0, #0
   39468:	beq	394f8 <sendto_realops_snomask+0x23c>
   3946c:	mov	r1, r8
   39470:	bl	e594 <privilegeset_in_set@plt>
   39474:	cmp	r0, #0
   39478:	bne	394bc <sendto_realops_snomask+0x200>
   3947c:	b	394f8 <sendto_realops_snomask+0x23c>
   39480:	ldr	r0, [r5, #24]
   39484:	cmp	r0, #0
   39488:	beq	394bc <sendto_realops_snomask+0x200>
   3948c:	ldr	r0, [r0, #36]	; 0x24
   39490:	cmp	r0, #0
   39494:	beq	394a8 <sendto_realops_snomask+0x1ec>
   39498:	mov	r1, r9
   3949c:	bl	e594 <privilegeset_in_set@plt>
   394a0:	cmp	r0, #0
   394a4:	bne	394f8 <sendto_realops_snomask+0x23c>
   394a8:	ldr	r0, [r5, #24]
   394ac:	cmp	r0, #0
   394b0:	ldrne	r0, [r0, #36]	; 0x24
   394b4:	cmpne	r0, #0
   394b8:	bne	39404 <sendto_realops_snomask+0x148>
   394bc:	ldr	r0, [r5, #72]	; 0x48
   394c0:	tst	r0, r4
   394c4:	beq	394f8 <sendto_realops_snomask+0x23c>
   394c8:	ldrh	r0, [r5, #80]	; 0x50
   394cc:	mov	r1, #0
   394d0:	cmp	r0, #64	; 0x40
   394d4:	bne	394e4 <sendto_realops_snomask+0x228>
   394d8:	ldr	r0, [r5, #432]	; 0x1b0
   394dc:	cmp	r0, #0
   394e0:	ldrne	r1, [r0, #296]	; 0x128
   394e4:	mov	r0, sl
   394e8:	bl	e540 <msgbuf_cache_get@plt>
   394ec:	mov	r1, r0
   394f0:	mov	r0, r5
   394f4:	bl	39030 <_send_linebuf>
   394f8:	cmp	r6, #0
   394fc:	bne	39418 <sendto_realops_snomask+0x15c>
   39500:	add	r0, sp, #20
   39504:	bl	de80 <msgbuf_cache_free@plt>
   39508:	sub	sp, fp, #28
   3950c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39510:	add	sp, sp, #4
   39514:	bx	lr
   39518:	.word	0x00021878
   3951c:	.word	0x00032864
   39520:	.word	0x0000e03f
   39524:	.word	0x00021840
   39528:	.word	0x00021598
   3952c:	.word	0x000217d8
   39530:	.word	0x0000dfd6
   39534:	.word	0x00021630
   39538:	.word	0x0000e00c
   3953c:	.word	0x000327f8
   39540:	.word	0x00021560
   39544:	.word	0x000078ea
   39548:	.word	0x000078d7

0003954c <linebuf_put_tagsf>:
   3954c:	push	{fp, lr}
   39550:	mov	fp, sp
   39554:	sub	sp, sp, #24
   39558:	mov	ip, #0
   3955c:	str	ip, [sp]
   39560:	str	ip, [sp, #8]
   39564:	sub	ip, fp, #4
   39568:	str	ip, [sp, #12]
   3956c:	str	r3, [sp, #16]
   39570:	add	r3, fp, #12
   39574:	str	r3, [fp, #-4]
   39578:	ldr	r3, [fp, #8]
   3957c:	str	r3, [sp, #4]
   39580:	mov	r3, sp
   39584:	bl	38fb8 <linebuf_put_tags>
   39588:	mov	sp, fp
   3958c:	pop	{fp, pc}

00039590 <sendto_one_notice>:
   39590:	sub	sp, sp, #8
   39594:	push	{r4, r5, r6, sl, fp, lr}
   39598:	add	fp, sp, #16
   3959c:	sub	sp, sp, #328	; 0x148
   395a0:	mov	r5, r0
   395a4:	str	r3, [fp, #12]
   395a8:	str	r2, [fp, #8]
   395ac:	ldr	r4, [r0, #36]	; 0x24
   395b0:	str	r1, [sp, #16]
   395b4:	mov	r0, #0
   395b8:	str	r0, [sp, #12]
   395bc:	str	r0, [sp, #20]
   395c0:	sub	r1, fp, #20
   395c4:	str	r1, [sp, #24]
   395c8:	str	r0, [sp, #28]
   395cc:	ldrb	r0, [r4, #65]	; 0x41
   395d0:	tst	r0, #64	; 0x40
   395d4:	bne	396cc <sendto_one_notice+0x13c>
   395d8:	ldrh	r0, [r4, #80]	; 0x50
   395dc:	cmp	r0, #4
   395e0:	bne	395fc <sendto_one_notice+0x6c>
   395e4:	ldr	r2, [pc, #240]	; 396dc <sendto_one_notice+0x14c>
   395e8:	add	r2, pc, r2
   395ec:	mov	r0, #256	; 0x100
   395f0:	mov	r1, #0
   395f4:	bl	d640 <sendto_realops_snomask@plt>
   395f8:	b	396cc <sendto_one_notice+0x13c>
   395fc:	ldr	r6, [pc, #220]	; 396e0 <sendto_one_notice+0x150>
   39600:	ldr	r6, [pc, r6]
   39604:	add	r0, sp, #60	; 0x3c
   39608:	mov	r1, r6
   3960c:	bl	38f7c <build_msgbuf_tags>
   39610:	add	r0, sp, #32
   39614:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39618:	add	r0, fp, #8
   3961c:	str	r0, [fp, #-20]	; 0xffffffec
   39620:	ldr	r0, [r5, #36]	; 0x24
   39624:	ldrh	r1, [r0, #80]	; 0x50
   39628:	cmp	r1, #32
   3962c:	bne	3964c <sendto_one_notice+0xbc>
   39630:	ldrb	r1, [r0, #396]	; 0x18c
   39634:	cmp	r1, #0
   39638:	beq	39654 <sendto_one_notice+0xc4>
   3963c:	ldrb	r1, [r6, #396]!	; 0x18c
   39640:	cmp	r1, #0
   39644:	subeq	r6, r6, #308	; 0x134
   39648:	b	39658 <sendto_one_notice+0xc8>
   3964c:	add	r6, r6, #88	; 0x58
   39650:	b	39678 <sendto_one_notice+0xe8>
   39654:	add	r6, r6, #88	; 0x58
   39658:	ldrb	r0, [r0, #396]	; 0x18c
   3965c:	cmp	r0, #0
   39660:	beq	39678 <sendto_one_notice+0xe8>
   39664:	mov	r0, r5
   39668:	ldrb	r1, [r0, #396]!	; 0x18c
   3966c:	cmp	r1, #0
   39670:	subeq	r0, r0, #308	; 0x134
   39674:	b	3967c <sendto_one_notice+0xec>
   39678:	add	r0, r5, #88	; 0x58
   3967c:	ldrb	r1, [r0]
   39680:	ldr	r2, [pc, #92]	; 396e4 <sendto_one_notice+0x154>
   39684:	add	r2, pc, r2
   39688:	ldr	r3, [pc, #88]	; 396e8 <sendto_one_notice+0x158>
   3968c:	add	r3, pc, r3
   39690:	cmp	r1, #0
   39694:	movne	r3, r0
   39698:	stm	sp, {r2, r6}
   3969c:	str	r3, [sp, #8]
   396a0:	add	r6, sp, #32
   396a4:	add	r1, sp, #60	; 0x3c
   396a8:	add	r3, sp, #12
   396ac:	mov	r0, r6
   396b0:	mov	r2, r5
   396b4:	bl	3954c <linebuf_put_tagsf>
   396b8:	mov	r0, r4
   396bc:	mov	r1, r6
   396c0:	bl	39030 <_send_linebuf>
   396c4:	mov	r0, r6
   396c8:	bl	e00c <rb_linebuf_donebuf@plt>
   396cc:	sub	sp, fp, #16
   396d0:	pop	{r4, r5, r6, sl, fp, lr}
   396d4:	add	sp, sp, #8
   396d8:	bx	lr
   396dc:	.word	0x0000dccf
   396e0:	.word	0x00021558
   396e4:	.word	0x0000dc58
   396e8:	.word	0x00007cb1

000396ec <sendto_one_numeric>:
   396ec:	sub	sp, sp, #4
   396f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   396f4:	add	fp, sp, #24
   396f8:	sub	sp, sp, #332	; 0x14c
   396fc:	mov	r6, r1
   39700:	mov	r5, r0
   39704:	str	r3, [fp, #8]
   39708:	ldr	r4, [r0, #36]	; 0x24
   3970c:	str	r2, [sp, #20]
   39710:	mov	r0, #0
   39714:	str	r0, [sp, #16]
   39718:	str	r0, [sp, #24]
   3971c:	sub	r1, fp, #28
   39720:	str	r1, [sp, #28]
   39724:	str	r0, [sp, #32]
   39728:	ldrb	r0, [r4, #65]	; 0x41
   3972c:	tst	r0, #64	; 0x40
   39730:	bne	3982c <sendto_one_numeric+0x140>
   39734:	ldrh	r0, [r4, #80]	; 0x50
   39738:	cmp	r0, #4
   3973c:	bne	39758 <sendto_one_numeric+0x6c>
   39740:	ldr	r2, [pc, #244]	; 3983c <sendto_one_numeric+0x150>
   39744:	add	r2, pc, r2
   39748:	mov	r0, #256	; 0x100
   3974c:	mov	r1, #0
   39750:	bl	d640 <sendto_realops_snomask@plt>
   39754:	b	3982c <sendto_one_numeric+0x140>
   39758:	ldr	r7, [pc, #224]	; 39840 <sendto_one_numeric+0x154>
   3975c:	ldr	r7, [pc, r7]
   39760:	add	r0, sp, #64	; 0x40
   39764:	mov	r1, r7
   39768:	bl	38f7c <build_msgbuf_tags>
   3976c:	add	r0, sp, #36	; 0x24
   39770:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39774:	add	r0, fp, #8
   39778:	str	r0, [fp, #-28]	; 0xffffffe4
   3977c:	ldr	r0, [r5, #36]	; 0x24
   39780:	ldrh	r1, [r0, #80]	; 0x50
   39784:	cmp	r1, #32
   39788:	bne	397a8 <sendto_one_numeric+0xbc>
   3978c:	ldrb	r1, [r0, #396]	; 0x18c
   39790:	cmp	r1, #0
   39794:	beq	397b0 <sendto_one_numeric+0xc4>
   39798:	ldrb	r1, [r7, #396]!	; 0x18c
   3979c:	cmp	r1, #0
   397a0:	subeq	r7, r7, #308	; 0x134
   397a4:	b	397b4 <sendto_one_numeric+0xc8>
   397a8:	add	r7, r7, #88	; 0x58
   397ac:	b	397d4 <sendto_one_numeric+0xe8>
   397b0:	add	r7, r7, #88	; 0x58
   397b4:	ldrb	r0, [r0, #396]	; 0x18c
   397b8:	cmp	r0, #0
   397bc:	beq	397d4 <sendto_one_numeric+0xe8>
   397c0:	mov	r0, r5
   397c4:	ldrb	r1, [r0, #396]!	; 0x18c
   397c8:	cmp	r1, #0
   397cc:	subeq	r0, r0, #308	; 0x134
   397d0:	b	397d8 <sendto_one_numeric+0xec>
   397d4:	add	r0, r5, #88	; 0x58
   397d8:	ldrb	r1, [r0]
   397dc:	ldr	r2, [pc, #96]	; 39844 <sendto_one_numeric+0x158>
   397e0:	add	r2, pc, r2
   397e4:	ldr	r3, [pc, #92]	; 39848 <sendto_one_numeric+0x15c>
   397e8:	add	r3, pc, r3
   397ec:	cmp	r1, #0
   397f0:	movne	r3, r0
   397f4:	stm	sp, {r2, r7}
   397f8:	str	r6, [sp, #8]
   397fc:	str	r3, [sp, #12]
   39800:	add	r6, sp, #36	; 0x24
   39804:	add	r1, sp, #64	; 0x40
   39808:	add	r3, sp, #16
   3980c:	mov	r0, r6
   39810:	mov	r2, r5
   39814:	bl	3954c <linebuf_put_tagsf>
   39818:	mov	r0, r4
   3981c:	mov	r1, r6
   39820:	bl	39030 <_send_linebuf>
   39824:	mov	r0, r6
   39828:	bl	e00c <rb_linebuf_donebuf@plt>
   3982c:	sub	sp, fp, #24
   39830:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   39834:	add	sp, sp, #4
   39838:	bx	lr
   3983c:	.word	0x0000db73
   39840:	.word	0x000213fc
   39844:	.word	0x0000db0b
   39848:	.word	0x00007b55

0003984c <sendto_server>:
   3984c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39850:	add	fp, sp, #24
   39854:	sub	sp, sp, #56	; 0x38
   39858:	mov	r5, r2
   3985c:	mov	r6, r0
   39860:	ldr	r0, [fp, #8]
   39864:	str	r0, [sp, #8]
   39868:	mov	r0, #0
   3986c:	str	r0, [sp, #4]
   39870:	str	r0, [sp, #12]
   39874:	sub	r2, fp, #28
   39878:	str	r2, [sp, #16]
   3987c:	str	r0, [sp, #20]
   39880:	ldr	r7, [pc, #168]	; 39930 <sendto_server+0xe4>
   39884:	ldr	r7, [pc, r7]
   39888:	ldr	r0, [r7, #8]
   3988c:	cmp	r0, #0
   39890:	beq	39928 <sendto_server+0xdc>
   39894:	mov	r4, r3
   39898:	cmp	r1, #0
   3989c:	beq	398b0 <sendto_server+0x64>
   398a0:	ldr	r0, [r1, #236]	; 0xec
   398a4:	ldrb	r0, [r0]
   398a8:	cmp	r0, #35	; 0x23
   398ac:	bne	39928 <sendto_server+0xdc>
   398b0:	add	r8, sp, #24
   398b4:	mov	r0, r8
   398b8:	bl	d7b4 <rb_linebuf_newbuf@plt>
   398bc:	add	r0, fp, #12
   398c0:	str	r0, [fp, #-28]	; 0xffffffe4
   398c4:	add	r1, sp, #4
   398c8:	mov	r0, r8
   398cc:	bl	39934 <linebuf_put_msg>
   398d0:	ldr	r7, [r7]
   398d4:	cmp	r7, #0
   398d8:	beq	39920 <sendto_server+0xd4>
   398dc:	add	r8, sp, #24
   398e0:	ldr	r0, [r7]
   398e4:	ldr	r7, [r7, #8]
   398e8:	cmp	r6, #0
   398ec:	beq	398fc <sendto_server+0xb0>
   398f0:	ldr	r1, [r6, #36]	; 0x24
   398f4:	cmp	r0, r1
   398f8:	beq	39918 <sendto_server+0xcc>
   398fc:	ldr	r1, [r0, #432]	; 0x1b0
   39900:	ldr	r1, [r1, #296]	; 0x128
   39904:	and	r2, r1, r5
   39908:	cmp	r2, r5
   3990c:	andseq	r1, r1, r4
   39910:	moveq	r1, r8
   39914:	bleq	39030 <_send_linebuf>
   39918:	cmp	r7, #0
   3991c:	bne	398e0 <sendto_server+0x94>
   39920:	add	r0, sp, #24
   39924:	bl	e00c <rb_linebuf_donebuf@plt>
   39928:	sub	sp, fp, #24
   3992c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39930:	.word	0x0002114c

00039934 <linebuf_put_msg>:
   39934:	movw	r2, #511	; 0x1ff
   39938:	str	r2, [r1]
   3993c:	b	e45c <rb_linebuf_put@plt>

00039940 <sendto_channel_flags>:
   39940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39944:	add	fp, sp, #28
   39948:	sub	sp, sp, #988	; 0x3dc
   3994c:	sub	sp, sp, #1024	; 0x400
   39950:	mov	r8, r3
   39954:	mov	sl, r2
   39958:	mov	r6, r1
   3995c:	mov	r4, r0
   39960:	ldr	r0, [pc, #672]	; 39c08 <sendto_channel_flags+0x2c8>
   39964:	add	r0, pc, r0
   39968:	vld1.64	{d16-d17}, [r0]!
   3996c:	add	r1, sp, #16
   39970:	vst1.64	{d16-d17}, [r1]!
   39974:	ldr	r0, [r0]
   39978:	str	r0, [r1]
   3997c:	sub	r9, fp, #64	; 0x40
   39980:	mov	r0, r9
   39984:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39988:	ldr	r1, [pc, #636]	; 39c0c <sendto_channel_flags+0x2cc>
   3998c:	ldr	r1, [pc, r1]
   39990:	ldr	r0, [r1]
   39994:	add	r0, r0, #1
   39998:	str	r0, [r1]
   3999c:	sub	r0, fp, #328	; 0x148
   399a0:	mov	r1, sl
   399a4:	bl	38f7c <build_msgbuf_tags>
   399a8:	add	r3, fp, #12
   399ac:	str	r3, [fp, #-36]	; 0xffffffdc
   399b0:	ldr	r2, [fp, #8]
   399b4:	ldr	r7, [pc, #596]	; 39c10 <sendto_channel_flags+0x2d0>
   399b8:	add	r7, pc, r7
   399bc:	mov	r0, r7
   399c0:	mov	r1, #512	; 0x200
   399c4:	bl	e450 <vsnprintf@plt>
   399c8:	mov	r5, sl
   399cc:	ldrb	r0, [r5, #396]!	; 0x18c
   399d0:	str	r7, [sp]
   399d4:	sub	r7, r5, #308	; 0x134
   399d8:	cmp	r0, #0
   399dc:	mov	r3, r5
   399e0:	moveq	r3, r7
   399e4:	ldr	r2, [pc, #552]	; 39c14 <sendto_channel_flags+0x2d4>
   399e8:	add	r2, pc, r2
   399ec:	mov	r0, r9
   399f0:	mov	r1, #0
   399f4:	bl	39c30 <linebuf_put_msgf>
   399f8:	movw	r0, #65220	; 0xfec4
   399fc:	movt	r0, #65535	; 0xffff
   39a00:	ldrh	r0, [r5, r0]
   39a04:	cmp	r0, #64	; 0x40
   39a08:	bne	39a2c <sendto_channel_flags+0xec>
   39a0c:	ldr	r0, [sl, #24]
   39a10:	ldr	r1, [pc, #516]	; 39c1c <sendto_channel_flags+0x2dc>
   39a14:	add	r1, pc, r1
   39a18:	ldr	r3, [pc, #512]	; 39c20 <sendto_channel_flags+0x2e0>
   39a1c:	add	r3, pc, r3
   39a20:	cmp	r0, #0
   39a24:	moveq	r3, r1
   39a28:	b	39a34 <sendto_channel_flags+0xf4>
   39a2c:	ldr	r3, [pc, #484]	; 39c18 <sendto_channel_flags+0x2d8>
   39a30:	add	r3, pc, r3
   39a34:	add	r0, sl, #163	; 0xa3
   39a38:	add	r1, sl, #152	; 0x98
   39a3c:	str	r7, [sp]
   39a40:	str	r1, [sp, #4]
   39a44:	str	r0, [sp, #8]
   39a48:	add	r0, sp, #36	; 0x24
   39a4c:	sub	r1, fp, #328	; 0x148
   39a50:	add	r2, sp, #16
   39a54:	bl	d6c4 <msgbuf_cache_initf@plt>
   39a58:	ldr	r8, [r8, #124]	; 0x7c
   39a5c:	cmp	r8, #0
   39a60:	ldr	r5, [pc, #444]	; 39c24 <sendto_channel_flags+0x2e4>
   39a64:	ldr	r5, [pc, r5]
   39a68:	beq	39b88 <sendto_channel_flags+0x248>
   39a6c:	add	r9, sl, #64	; 0x40
   39a70:	ldr	r0, [r9]
   39a74:	ands	r1, r0, #8192	; 0x2000
   39a78:	ldr	r0, [r8]
   39a7c:	ldr	r8, [r8, #8]
   39a80:	ldr	r7, [r0, #40]	; 0x28
   39a84:	beq	39a94 <sendto_channel_flags+0x154>
   39a88:	ldrh	r2, [sl, #80]	; 0x50
   39a8c:	cmp	r2, #64	; 0x40
   39a90:	beq	39ab4 <sendto_channel_flags+0x174>
   39a94:	ldr	r2, [r7, #36]	; 0x24
   39a98:	cmp	r2, r4
   39a9c:	beq	39b80 <sendto_channel_flags+0x240>
   39aa0:	ldr	r2, [r2, #64]	; 0x40
   39aa4:	ands	r2, r2, #16384	; 0x4000
   39aa8:	bne	39b80 <sendto_channel_flags+0x240>
   39aac:	cmp	r1, #0
   39ab0:	beq	39ac4 <sendto_channel_flags+0x184>
   39ab4:	cmp	r7, r4
   39ab8:	ldrheq	r1, [sl, #80]	; 0x50
   39abc:	cmpeq	r1, #64	; 0x40
   39ac0:	beq	39b80 <sendto_channel_flags+0x240>
   39ac4:	cmp	r6, #0
   39ac8:	beq	39ad8 <sendto_channel_flags+0x198>
   39acc:	ldr	r0, [r0, #44]	; 0x2c
   39ad0:	tst	r0, r6
   39ad4:	beq	39b80 <sendto_channel_flags+0x240>
   39ad8:	ldrb	r0, [r7, #56]	; 0x38
   39adc:	tst	r0, #128	; 0x80
   39ae0:	bne	39b80 <sendto_channel_flags+0x240>
   39ae4:	ldrb	r0, [r7, #65]	; 0x41
   39ae8:	tst	r0, #32
   39aec:	beq	39b2c <sendto_channel_flags+0x1ec>
   39af0:	ldrh	r0, [r7, #80]	; 0x50
   39af4:	cmp	r0, #64	; 0x40
   39af8:	bne	39b2c <sendto_channel_flags+0x1ec>
   39afc:	ldr	r0, [r7, #432]	; 0x1b0
   39b00:	cmp	r0, #0
   39b04:	ldrne	r1, [r0, #296]	; 0x128
   39b08:	moveq	r1, #0
   39b0c:	add	r0, sp, #36	; 0x24
   39b10:	bl	e540 <msgbuf_cache_get@plt>
   39b14:	mov	r1, r0
   39b18:	mov	r0, r7
   39b1c:	bl	39030 <_send_linebuf>
   39b20:	cmp	r8, #0
   39b24:	bne	39a70 <sendto_channel_flags+0x130>
   39b28:	b	39b88 <sendto_channel_flags+0x248>
   39b2c:	cmp	r6, #0
   39b30:	beq	39b54 <sendto_channel_flags+0x214>
   39b34:	ldr	r0, [pc, #236]	; 39c28 <sendto_channel_flags+0x2e8>
   39b38:	ldr	r0, [pc, r0]
   39b3c:	ldr	r0, [r0]
   39b40:	ldr	r1, [r7, #36]	; 0x24
   39b44:	ldr	r1, [r1, #432]	; 0x1b0
   39b48:	ldr	r1, [r1, #296]	; 0x128
   39b4c:	tst	r0, r1
   39b50:	beq	39b80 <sendto_channel_flags+0x240>
   39b54:	ldr	r0, [r5]
   39b58:	ldr	r1, [r7, #36]	; 0x24
   39b5c:	ldr	r1, [r1, #84]	; 0x54
   39b60:	cmp	r1, r0
   39b64:	beq	39b80 <sendto_channel_flags+0x240>
   39b68:	mov	r0, r7
   39b6c:	sub	r1, fp, #64	; 0x40
   39b70:	bl	39c80 <send_linebuf_remote>
   39b74:	ldr	r0, [r7, #36]	; 0x24
   39b78:	ldr	r1, [r5]
   39b7c:	str	r1, [r0, #84]	; 0x54
   39b80:	cmp	r8, #0
   39b84:	bne	39a70 <sendto_channel_flags+0x130>
   39b88:	ldrb	r0, [sl, #65]	; 0x41
   39b8c:	tst	r0, #32
   39b90:	beq	39bf0 <sendto_channel_flags+0x2b0>
   39b94:	ldrh	r0, [sl, #80]	; 0x50
   39b98:	cmp	r0, #64	; 0x40
   39b9c:	bne	39bf0 <sendto_channel_flags+0x2b0>
   39ba0:	ldr	r0, [pc, #132]	; 39c2c <sendto_channel_flags+0x2ec>
   39ba4:	ldr	r0, [pc, r0]
   39ba8:	ldr	r0, [r0]
   39bac:	ldr	r1, [sl, #432]	; 0x1b0
   39bb0:	ldr	r1, [r1, #296]	; 0x128
   39bb4:	and	r1, r0, r1
   39bb8:	cmp	r1, r0
   39bbc:	bne	39bf0 <sendto_channel_flags+0x2b0>
   39bc0:	ldrh	r0, [r4, #80]	; 0x50
   39bc4:	mov	r1, #0
   39bc8:	cmp	r0, #64	; 0x40
   39bcc:	bne	39bdc <sendto_channel_flags+0x29c>
   39bd0:	ldr	r0, [r4, #432]	; 0x1b0
   39bd4:	cmp	r0, #0
   39bd8:	ldrne	r1, [r0, #296]	; 0x128
   39bdc:	add	r0, sp, #36	; 0x24
   39be0:	bl	e540 <msgbuf_cache_get@plt>
   39be4:	mov	r1, r0
   39be8:	mov	r0, r4
   39bec:	bl	39030 <_send_linebuf>
   39bf0:	sub	r0, fp, #64	; 0x40
   39bf4:	bl	e00c <rb_linebuf_donebuf@plt>
   39bf8:	add	r0, sp, #36	; 0x24
   39bfc:	bl	de80 <msgbuf_cache_free@plt>
   39c00:	sub	sp, fp, #28
   39c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39c08:	.word	0x0002053c
   39c0c:	.word	0x00020ee0
   39c10:	.word	0x00031bac
   39c14:	.word	0x0000bdbf
   39c18:	.word	0x0000d8d9
   39c1c:	.word	0x0000d8f5
   39c20:	.word	0x0000d8dc
   39c24:	.word	0x00020e08
   39c28:	.word	0x00020e2c
   39c2c:	.word	0x00020f50

00039c30 <linebuf_put_msgf>:
   39c30:	sub	sp, sp, #4
   39c34:	push	{fp, lr}
   39c38:	mov	fp, sp
   39c3c:	sub	sp, sp, #28
   39c40:	str	r3, [fp, #8]
   39c44:	str	r2, [sp, #8]
   39c48:	mov	r2, #0
   39c4c:	str	r2, [sp, #4]
   39c50:	str	r2, [sp, #12]
   39c54:	sub	r2, fp, #4
   39c58:	str	r2, [sp, #16]
   39c5c:	str	r1, [sp, #20]
   39c60:	add	r1, fp, #8
   39c64:	str	r1, [fp, #-4]
   39c68:	add	r1, sp, #4
   39c6c:	bl	39934 <linebuf_put_msg>
   39c70:	mov	sp, fp
   39c74:	pop	{fp, lr}
   39c78:	add	sp, sp, #4
   39c7c:	bx	lr

00039c80 <send_linebuf_remote>:
   39c80:	ldr	r2, [r0, #36]	; 0x24
   39c84:	cmp	r2, #0
   39c88:	movne	r0, r2
   39c8c:	b	39030 <_send_linebuf>

00039c90 <sendto_channel_opmod>:
   39c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39c94:	add	fp, sp, #28
   39c98:	sub	sp, sp, #1020	; 0x3fc
   39c9c:	sub	sp, sp, #1024	; 0x400
   39ca0:	mov	r8, r3
   39ca4:	mov	r6, r2
   39ca8:	mov	r5, r1
   39cac:	mov	r4, r0
   39cb0:	vmov.i32	q8, #0	; 0x00000000
   39cb4:	add	r0, sp, #24
   39cb8:	vst1.64	{d16-d17}, [r0]!
   39cbc:	mov	r1, #0
   39cc0:	str	r1, [r0]
   39cc4:	ldr	r9, [fp, #8]
   39cc8:	str	r9, [sp, #28]
   39ccc:	sub	r0, fp, #60	; 0x3c
   39cd0:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39cd4:	sub	r0, fp, #88	; 0x58
   39cd8:	bl	d7b4 <rb_linebuf_newbuf@plt>
   39cdc:	sub	r0, fp, #352	; 0x160
   39ce0:	mov	r1, r5
   39ce4:	bl	38f7c <build_msgbuf_tags>
   39ce8:	ldr	r1, [pc, #760]	; 39fe8 <sendto_channel_opmod+0x358>
   39cec:	ldr	r1, [pc, r1]
   39cf0:	ldr	r0, [r1]
   39cf4:	add	r0, r0, #1
   39cf8:	str	r0, [r1]
   39cfc:	ldr	r0, [pc, #744]	; 39fec <sendto_channel_opmod+0x35c>
   39d00:	ldr	r0, [pc, r0]
   39d04:	ldr	r0, [r0, #92]	; 0x5c
   39d08:	ldr	r1, [pc, #736]	; 39ff0 <sendto_channel_opmod+0x360>
   39d0c:	add	r1, pc, r1
   39d10:	ldr	sl, [pc, #732]	; 39ff4 <sendto_channel_opmod+0x364>
   39d14:	add	sl, pc, sl
   39d18:	cmp	r0, #0
   39d1c:	moveq	sl, r1
   39d20:	add	r7, r5, #88	; 0x58
   39d24:	ldrh	r0, [r5, #80]	; 0x50
   39d28:	cmp	r0, #32
   39d2c:	bne	39d54 <sendto_channel_opmod+0xc4>
   39d30:	ldr	r0, [r6, #236]	; 0xec
   39d34:	stm	sp, {r7, r8, sl}
   39d38:	str	r0, [sp, #12]
   39d3c:	add	r0, sp, #44	; 0x2c
   39d40:	sub	r1, fp, #352	; 0x160
   39d44:	add	r2, sp, #24
   39d48:	ldr	r3, [pc, #680]	; 39ff8 <sendto_channel_opmod+0x368>
   39d4c:	add	r3, pc, r3
   39d50:	b	39d88 <sendto_channel_opmod+0xf8>
   39d54:	ldr	r0, [r6, #236]	; 0xec
   39d58:	add	r1, r5, #163	; 0xa3
   39d5c:	add	r2, r5, #152	; 0x98
   39d60:	str	r7, [sp]
   39d64:	str	r2, [sp, #4]
   39d68:	add	r2, sp, #8
   39d6c:	stm	r2, {r1, r8, sl}
   39d70:	str	r0, [sp, #20]
   39d74:	add	r0, sp, #44	; 0x2c
   39d78:	sub	r1, fp, #352	; 0x160
   39d7c:	add	r2, sp, #24
   39d80:	ldr	r3, [pc, #628]	; 39ffc <sendto_channel_opmod+0x36c>
   39d84:	add	r3, pc, r3
   39d88:	bl	d6c4 <msgbuf_cache_initf@plt>
   39d8c:	ldrb	r0, [r6, #12]
   39d90:	tst	r0, #4
   39d94:	bne	39dc8 <sendto_channel_opmod+0x138>
   39d98:	ldr	r3, [r5, #32]
   39d9c:	ldrb	r0, [r3, #396]!	; 0x18c
   39da0:	ldr	r1, [r6, #236]	; 0xec
   39da4:	stm	sp, {r1, r7}
   39da8:	str	r1, [sp, #8]
   39dac:	cmp	r0, #0
   39db0:	subeq	r3, r3, #308	; 0x134
   39db4:	sub	r0, fp, #60	; 0x3c
   39db8:	add	r1, sp, #24
   39dbc:	ldr	r2, [pc, #576]	; 3a004 <sendto_channel_opmod+0x374>
   39dc0:	add	r2, pc, r2
   39dc4:	b	39df8 <sendto_channel_opmod+0x168>
   39dc8:	mov	r3, r5
   39dcc:	ldrb	r0, [r3, #396]!	; 0x18c
   39dd0:	ldr	r1, [r6, #236]	; 0xec
   39dd4:	stm	sp, {r8, sl}
   39dd8:	str	r1, [sp, #8]
   39ddc:	str	r9, [sp, #12]
   39de0:	cmp	r0, #0
   39de4:	moveq	r3, r7
   39de8:	sub	r0, fp, #60	; 0x3c
   39dec:	add	r1, sp, #24
   39df0:	ldr	r2, [pc, #520]	; 3a000 <sendto_channel_opmod+0x370>
   39df4:	add	r2, pc, r2
   39df8:	bl	39c30 <linebuf_put_msgf>
   39dfc:	ldr	sl, [pc, #516]	; 3a008 <sendto_channel_opmod+0x378>
   39e00:	ldr	sl, [pc, sl]
   39e04:	mov	r3, r5
   39e08:	ldrb	r0, [r3, #396]!	; 0x18c
   39e0c:	ldr	r1, [r6, #236]	; 0xec
   39e10:	str	r8, [sp]
   39e14:	str	r1, [sp, #4]
   39e18:	cmp	r0, #0
   39e1c:	moveq	r3, r7
   39e20:	sub	r0, fp, #88	; 0x58
   39e24:	add	r1, sp, #24
   39e28:	ldr	r2, [pc, #476]	; 3a00c <sendto_channel_opmod+0x37c>
   39e2c:	add	r2, pc, r2
   39e30:	bl	39c30 <linebuf_put_msgf>
   39e34:	ldr	r8, [r6, #124]	; 0x7c
   39e38:	cmp	r8, #0
   39e3c:	beq	39f60 <sendto_channel_opmod+0x2d0>
   39e40:	add	r9, r5, #64	; 0x40
   39e44:	ldr	r6, [pc, #452]	; 3a010 <sendto_channel_opmod+0x380>
   39e48:	ldr	r6, [pc, r6]
   39e4c:	ldr	r0, [r9]
   39e50:	ands	r1, r0, #8192	; 0x2000
   39e54:	ldr	r0, [r8]
   39e58:	ldr	r8, [r8, #8]
   39e5c:	ldr	r7, [r0, #40]	; 0x28
   39e60:	beq	39e70 <sendto_channel_opmod+0x1e0>
   39e64:	ldrh	r2, [r5, #80]	; 0x50
   39e68:	cmp	r2, #64	; 0x40
   39e6c:	beq	39e90 <sendto_channel_opmod+0x200>
   39e70:	ldr	r2, [r7, #36]	; 0x24
   39e74:	cmp	r2, r4
   39e78:	beq	39f58 <sendto_channel_opmod+0x2c8>
   39e7c:	ldr	r2, [r2, #64]	; 0x40
   39e80:	ands	r2, r2, #16384	; 0x4000
   39e84:	bne	39f58 <sendto_channel_opmod+0x2c8>
   39e88:	cmp	r1, #0
   39e8c:	beq	39ea0 <sendto_channel_opmod+0x210>
   39e90:	cmp	r7, r4
   39e94:	ldrheq	r1, [r5, #80]	; 0x50
   39e98:	cmpeq	r1, #64	; 0x40
   39e9c:	beq	39f58 <sendto_channel_opmod+0x2c8>
   39ea0:	ldrb	r0, [r0, #44]	; 0x2c
   39ea4:	tst	r0, #2
   39ea8:	beq	39f58 <sendto_channel_opmod+0x2c8>
   39eac:	ldrb	r0, [r7, #56]	; 0x38
   39eb0:	tst	r0, #128	; 0x80
   39eb4:	bne	39f58 <sendto_channel_opmod+0x2c8>
   39eb8:	ldrb	r0, [r7, #65]	; 0x41
   39ebc:	tst	r0, #32
   39ec0:	beq	39f00 <sendto_channel_opmod+0x270>
   39ec4:	ldrh	r0, [r7, #80]	; 0x50
   39ec8:	cmp	r0, #64	; 0x40
   39ecc:	bne	39f00 <sendto_channel_opmod+0x270>
   39ed0:	ldr	r0, [r7, #432]	; 0x1b0
   39ed4:	cmp	r0, #0
   39ed8:	ldrne	r1, [r0, #296]	; 0x128
   39edc:	moveq	r1, #0
   39ee0:	add	r0, sp, #44	; 0x2c
   39ee4:	bl	e540 <msgbuf_cache_get@plt>
   39ee8:	mov	r1, r0
   39eec:	mov	r0, r7
   39ef0:	bl	39030 <_send_linebuf>
   39ef4:	cmp	r8, #0
   39ef8:	bne	39e4c <sendto_channel_opmod+0x1bc>
   39efc:	b	39f60 <sendto_channel_opmod+0x2d0>
   39f00:	ldr	r1, [r7, #36]	; 0x24
   39f04:	ldr	r0, [r1, #432]	; 0x1b0
   39f08:	ldr	r0, [r0, #296]	; 0x128
   39f0c:	ldr	r2, [r6]
   39f10:	tst	r2, r0
   39f14:	beq	39f58 <sendto_channel_opmod+0x2c8>
   39f18:	ldr	r1, [r1, #84]	; 0x54
   39f1c:	ldr	r2, [sl]
   39f20:	cmp	r1, r2
   39f24:	beq	39f58 <sendto_channel_opmod+0x2c8>
   39f28:	ldr	r1, [pc, #228]	; 3a014 <sendto_channel_opmod+0x384>
   39f2c:	ldr	r1, [pc, r1]
   39f30:	ldr	r1, [r1]
   39f34:	and	r0, r1, r0
   39f38:	cmp	r0, r1
   39f3c:	mov	r0, r7
   39f40:	subne	r1, fp, #60	; 0x3c
   39f44:	subeq	r1, fp, #88	; 0x58
   39f48:	bl	39c80 <send_linebuf_remote>
   39f4c:	ldr	r0, [r7, #36]	; 0x24
   39f50:	ldr	r1, [sl]
   39f54:	str	r1, [r0, #84]	; 0x54
   39f58:	cmp	r8, #0
   39f5c:	bne	39e4c <sendto_channel_opmod+0x1bc>
   39f60:	ldrb	r0, [r5, #65]	; 0x41
   39f64:	tst	r0, #32
   39f68:	beq	39fc8 <sendto_channel_opmod+0x338>
   39f6c:	ldrh	r0, [r5, #80]	; 0x50
   39f70:	cmp	r0, #64	; 0x40
   39f74:	bne	39fc8 <sendto_channel_opmod+0x338>
   39f78:	ldr	r0, [pc, #152]	; 3a018 <sendto_channel_opmod+0x388>
   39f7c:	ldr	r0, [pc, r0]
   39f80:	ldr	r0, [r0]
   39f84:	ldr	r1, [r5, #432]	; 0x1b0
   39f88:	ldr	r1, [r1, #296]	; 0x128
   39f8c:	and	r1, r0, r1
   39f90:	cmp	r1, r0
   39f94:	bne	39fc8 <sendto_channel_opmod+0x338>
   39f98:	ldrh	r0, [r4, #80]	; 0x50
   39f9c:	mov	r1, #0
   39fa0:	cmp	r0, #64	; 0x40
   39fa4:	bne	39fb4 <sendto_channel_opmod+0x324>
   39fa8:	ldr	r0, [r4, #432]	; 0x1b0
   39fac:	cmp	r0, #0
   39fb0:	ldrne	r1, [r0, #296]	; 0x128
   39fb4:	add	r0, sp, #44	; 0x2c
   39fb8:	bl	e540 <msgbuf_cache_get@plt>
   39fbc:	mov	r1, r0
   39fc0:	mov	r0, r4
   39fc4:	bl	39030 <_send_linebuf>
   39fc8:	sub	r0, fp, #60	; 0x3c
   39fcc:	bl	e00c <rb_linebuf_donebuf@plt>
   39fd0:	sub	r0, fp, #88	; 0x58
   39fd4:	bl	e00c <rb_linebuf_donebuf@plt>
   39fd8:	add	r0, sp, #44	; 0x2c
   39fdc:	bl	de80 <msgbuf_cache_free@plt>
   39fe0:	sub	sp, fp, #28
   39fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39fe8:	.word	0x00020b80
   39fec:	.word	0x00020e18
   39ff0:	.word	0x0000baf9
   39ff4:	.word	0x000090f3
   39ff8:	.word	0x0000d5c4
   39ffc:	.word	0x0000d59a
   3a000:	.word	0x0000d51c
   3a004:	.word	0x0000d572
   3a008:	.word	0x00020a6c
   3a00c:	.word	0x0000d51f
   3a010:	.word	0x00020b1c
   3a014:	.word	0x0002098c
   3a018:	.word	0x00020b78

0003a01c <_sendto_channel_local>:
   3a01c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a020:	add	fp, sp, #24
   3a024:	sub	sp, sp, #936	; 0x3a8
   3a028:	sub	sp, sp, #1024	; 0x400
   3a02c:	mov	r6, r3
   3a030:	mov	r4, r2
   3a034:	mov	r5, r1
   3a038:	mov	r1, r0
   3a03c:	ldr	r0, [fp, #8]
   3a040:	str	r0, [sp, #4]
   3a044:	mov	r0, #0
   3a048:	str	r0, [sp]
   3a04c:	str	r0, [sp, #8]
   3a050:	ldr	r2, [fp, #12]
   3a054:	str	r2, [sp, #12]
   3a058:	str	r0, [sp, #16]
   3a05c:	sub	r7, fp, #288	; 0x120
   3a060:	mov	r0, r7
   3a064:	bl	38f7c <build_msgbuf_tags>
   3a068:	add	r0, sp, #20
   3a06c:	mov	r2, sp
   3a070:	mov	r1, r7
   3a074:	bl	e798 <msgbuf_cache_init@plt>
   3a078:	ldr	r6, [r6, #136]	; 0x88
   3a07c:	cmp	r6, #0
   3a080:	beq	3a118 <_sendto_channel_local+0xfc>
   3a084:	add	r8, sp, #20
   3a088:	ldr	r0, [r6]
   3a08c:	ldr	r6, [r6, #8]
   3a090:	ldr	r7, [r0, #40]	; 0x28
   3a094:	ldrb	r1, [r7, #65]	; 0x41
   3a098:	tst	r1, #64	; 0x40
   3a09c:	bne	3a110 <_sendto_channel_local+0xf4>
   3a0a0:	cmp	r5, #0
   3a0a4:	beq	3a0b4 <_sendto_channel_local+0x98>
   3a0a8:	ldr	r0, [r0, #44]	; 0x2c
   3a0ac:	tst	r0, r5
   3a0b0:	beq	3a110 <_sendto_channel_local+0xf4>
   3a0b4:	cmp	r4, #0
   3a0b8:	beq	3a0e0 <_sendto_channel_local+0xc4>
   3a0bc:	ldr	r0, [r7, #24]
   3a0c0:	cmp	r0, #0
   3a0c4:	ldrne	r0, [r0, #36]	; 0x24
   3a0c8:	cmpne	r0, #0
   3a0cc:	beq	3a110 <_sendto_channel_local+0xf4>
   3a0d0:	mov	r1, r4
   3a0d4:	bl	e594 <privilegeset_in_set@plt>
   3a0d8:	cmp	r0, #0
   3a0dc:	beq	3a110 <_sendto_channel_local+0xf4>
   3a0e0:	ldrh	r0, [r7, #80]	; 0x50
   3a0e4:	mov	r1, #0
   3a0e8:	cmp	r0, #64	; 0x40
   3a0ec:	bne	3a0fc <_sendto_channel_local+0xe0>
   3a0f0:	ldr	r0, [r7, #432]	; 0x1b0
   3a0f4:	cmp	r0, #0
   3a0f8:	ldrne	r1, [r0, #296]	; 0x128
   3a0fc:	mov	r0, r8
   3a100:	bl	e540 <msgbuf_cache_get@plt>
   3a104:	mov	r1, r0
   3a108:	mov	r0, r7
   3a10c:	bl	39030 <_send_linebuf>
   3a110:	cmp	r6, #0
   3a114:	bne	3a088 <_sendto_channel_local+0x6c>
   3a118:	add	r0, sp, #20
   3a11c:	bl	de80 <msgbuf_cache_free@plt>
   3a120:	sub	sp, fp, #24
   3a124:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003a128 <sendto_channel_local_priv>:
   3a128:	push	{fp, lr}
   3a12c:	mov	fp, sp
   3a130:	sub	sp, sp, #16
   3a134:	add	ip, fp, #12
   3a138:	str	ip, [fp, #-4]
   3a13c:	sub	ip, fp, #4
   3a140:	str	ip, [sp, #4]
   3a144:	ldr	ip, [fp, #8]
   3a148:	str	ip, [sp]
   3a14c:	bl	cff8 <_sendto_channel_local@plt>
   3a150:	mov	sp, fp
   3a154:	pop	{fp, pc}

0003a158 <sendto_channel_local>:
   3a158:	push	{fp, lr}
   3a15c:	mov	fp, sp
   3a160:	sub	sp, sp, #16
   3a164:	mov	ip, r2
   3a168:	add	r2, fp, #8
   3a16c:	str	r2, [fp, #-4]
   3a170:	sub	r2, fp, #4
   3a174:	str	r3, [sp]
   3a178:	str	r2, [sp, #4]
   3a17c:	mov	r2, #0
   3a180:	mov	r3, ip
   3a184:	bl	cff8 <_sendto_channel_local@plt>
   3a188:	mov	sp, fp
   3a18c:	pop	{fp, pc}

0003a190 <sendto_channel_local_with_capability>:
   3a190:	push	{fp, lr}
   3a194:	mov	fp, sp
   3a198:	sub	sp, sp, #24
   3a19c:	mov	ip, r2
   3a1a0:	mov	r2, r1
   3a1a4:	add	r1, fp, #16
   3a1a8:	str	r1, [fp, #-4]
   3a1ac:	sub	r1, fp, #4
   3a1b0:	str	r1, [sp, #12]
   3a1b4:	ldr	r1, [fp, #12]
   3a1b8:	str	r1, [sp, #8]
   3a1bc:	ldr	r1, [fp, #8]
   3a1c0:	str	r1, [sp, #4]
   3a1c4:	str	r3, [sp]
   3a1c8:	mov	r1, #0
   3a1cc:	mov	r3, ip
   3a1d0:	bl	3a1dc <_sendto_channel_local_with_capability_butone>
   3a1d4:	mov	sp, fp
   3a1d8:	pop	{fp, pc}

0003a1dc <_sendto_channel_local_with_capability_butone>:
   3a1dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a1e0:	add	fp, sp, #28
   3a1e4:	sub	sp, sp, #940	; 0x3ac
   3a1e8:	sub	sp, sp, #1024	; 0x400
   3a1ec:	mov	r4, r3
   3a1f0:	mov	r9, r2
   3a1f4:	mov	r6, r1
   3a1f8:	mov	r1, r0
   3a1fc:	ldr	r0, [fp, #16]
   3a200:	str	r0, [sp, #4]
   3a204:	mov	r0, #0
   3a208:	str	r0, [sp]
   3a20c:	str	r0, [sp, #8]
   3a210:	ldr	r2, [fp, #20]
   3a214:	str	r2, [sp, #12]
   3a218:	str	r0, [sp, #16]
   3a21c:	sub	r7, fp, #296	; 0x128
   3a220:	mov	r0, r7
   3a224:	bl	38f7c <build_msgbuf_tags>
   3a228:	add	r0, sp, #20
   3a22c:	mov	r2, sp
   3a230:	mov	r1, r7
   3a234:	bl	e798 <msgbuf_cache_init@plt>
   3a238:	ldr	r0, [fp, #12]
   3a23c:	ldr	r5, [r0, #136]	; 0x88
   3a240:	cmp	r5, #0
   3a244:	beq	3a2cc <_sendto_channel_local_with_capability_butone+0xf0>
   3a248:	ldr	sl, [fp, #8]
   3a24c:	add	r8, sp, #20
   3a250:	ldr	r0, [r5]
   3a254:	ldr	r5, [r5, #8]
   3a258:	ldr	r7, [r0, #40]	; 0x28
   3a25c:	cmp	r7, r6
   3a260:	beq	3a2c4 <_sendto_channel_local_with_capability_butone+0xe8>
   3a264:	ldrb	r1, [r7, #65]	; 0x41
   3a268:	tst	r1, #64	; 0x40
   3a26c:	bne	3a2c4 <_sendto_channel_local_with_capability_butone+0xe8>
   3a270:	ldr	r2, [r7, #432]	; 0x1b0
   3a274:	ldr	r1, [r2, #296]	; 0x128
   3a278:	and	r3, r1, r4
   3a27c:	cmp	r3, r4
   3a280:	andseq	r3, r1, sl
   3a284:	bne	3a2c4 <_sendto_channel_local_with_capability_butone+0xe8>
   3a288:	cmp	r9, #0
   3a28c:	beq	3a29c <_sendto_channel_local_with_capability_butone+0xc0>
   3a290:	ldr	r0, [r0, #44]	; 0x2c
   3a294:	tst	r0, r9
   3a298:	beq	3a2c4 <_sendto_channel_local_with_capability_butone+0xe8>
   3a29c:	ldrh	r0, [r7, #80]	; 0x50
   3a2a0:	cmp	r0, #64	; 0x40
   3a2a4:	movwne	r1, #0
   3a2a8:	cmp	r2, #0
   3a2ac:	moveq	r1, r2
   3a2b0:	mov	r0, r8
   3a2b4:	bl	e540 <msgbuf_cache_get@plt>
   3a2b8:	mov	r1, r0
   3a2bc:	mov	r0, r7
   3a2c0:	bl	39030 <_send_linebuf>
   3a2c4:	cmp	r5, #0
   3a2c8:	bne	3a250 <_sendto_channel_local_with_capability_butone+0x74>
   3a2cc:	add	r0, sp, #20
   3a2d0:	bl	de80 <msgbuf_cache_free@plt>
   3a2d4:	sub	sp, fp, #28
   3a2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a2dc <sendto_channel_local_with_capability_butone>:
   3a2dc:	push	{fp, lr}
   3a2e0:	mov	fp, sp
   3a2e4:	sub	sp, sp, #24
   3a2e8:	mov	ip, r2
   3a2ec:	mov	r2, r1
   3a2f0:	add	r1, fp, #16
   3a2f4:	str	r1, [fp, #-4]
   3a2f8:	sub	r1, fp, #4
   3a2fc:	str	r1, [sp, #12]
   3a300:	ldr	r1, [fp, #12]
   3a304:	str	r1, [sp, #8]
   3a308:	ldr	r1, [fp, #8]
   3a30c:	str	r1, [sp, #4]
   3a310:	str	r3, [sp]
   3a314:	mov	r1, r0
   3a318:	mov	r3, ip
   3a31c:	bl	3a1dc <_sendto_channel_local_with_capability_butone>
   3a320:	mov	sp, fp
   3a324:	pop	{fp, pc}

0003a328 <sendto_channel_local_butone>:
   3a328:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a32c:	add	fp, sp, #24
   3a330:	sub	sp, sp, #1968	; 0x7b0
   3a334:	mov	r6, r2
   3a338:	mov	r4, r1
   3a33c:	mov	r5, r0
   3a340:	str	r3, [sp, #8]
   3a344:	mov	r0, #0
   3a348:	str	r0, [sp, #4]
   3a34c:	str	r0, [sp, #12]
   3a350:	sub	r1, fp, #28
   3a354:	str	r1, [sp, #16]
   3a358:	str	r0, [sp, #20]
   3a35c:	sub	r7, fp, #292	; 0x124
   3a360:	mov	r0, r7
   3a364:	mov	r1, r5
   3a368:	bl	38f7c <build_msgbuf_tags>
   3a36c:	add	r0, fp, #8
   3a370:	str	r0, [fp, #-28]	; 0xffffffe4
   3a374:	add	r0, sp, #24
   3a378:	add	r2, sp, #4
   3a37c:	mov	r1, r7
   3a380:	bl	e798 <msgbuf_cache_init@plt>
   3a384:	ldr	r6, [r6, #136]	; 0x88
   3a388:	cmp	r6, #0
   3a38c:	beq	3a400 <sendto_channel_local_butone+0xd8>
   3a390:	add	r8, sp, #24
   3a394:	ldr	r0, [r6]
   3a398:	ldr	r6, [r6, #8]
   3a39c:	ldr	r7, [r0, #40]	; 0x28
   3a3a0:	cmp	r7, r5
   3a3a4:	beq	3a3f8 <sendto_channel_local_butone+0xd0>
   3a3a8:	ldrb	r1, [r7, #65]	; 0x41
   3a3ac:	tst	r1, #64	; 0x40
   3a3b0:	bne	3a3f8 <sendto_channel_local_butone+0xd0>
   3a3b4:	cmp	r4, #0
   3a3b8:	beq	3a3c8 <sendto_channel_local_butone+0xa0>
   3a3bc:	ldr	r0, [r0, #44]	; 0x2c
   3a3c0:	tst	r0, r4
   3a3c4:	beq	3a3f8 <sendto_channel_local_butone+0xd0>
   3a3c8:	ldrh	r0, [r7, #80]	; 0x50
   3a3cc:	mov	r1, #0
   3a3d0:	cmp	r0, #64	; 0x40
   3a3d4:	bne	3a3e4 <sendto_channel_local_butone+0xbc>
   3a3d8:	ldr	r0, [r7, #432]	; 0x1b0
   3a3dc:	cmp	r0, #0
   3a3e0:	ldrne	r1, [r0, #296]	; 0x128
   3a3e4:	mov	r0, r8
   3a3e8:	bl	e540 <msgbuf_cache_get@plt>
   3a3ec:	mov	r1, r0
   3a3f0:	mov	r0, r7
   3a3f4:	bl	39030 <_send_linebuf>
   3a3f8:	cmp	r6, #0
   3a3fc:	bne	3a394 <sendto_channel_local_butone+0x6c>
   3a400:	add	r0, sp, #24
   3a404:	bl	de80 <msgbuf_cache_free@plt>
   3a408:	sub	sp, fp, #24
   3a40c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003a410 <sendto_common_channels_local>:
   3a410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a414:	add	fp, sp, #28
   3a418:	sub	sp, sp, #948	; 0x3b4
   3a41c:	sub	sp, sp, #1024	; 0x400
   3a420:	mov	sl, r2
   3a424:	mov	r6, r1
   3a428:	mov	r4, r0
   3a42c:	str	r3, [sp, #8]
   3a430:	mov	r0, #0
   3a434:	str	r0, [sp, #4]
   3a438:	str	r0, [sp, #12]
   3a43c:	sub	r1, fp, #36	; 0x24
   3a440:	str	r1, [sp, #16]
   3a444:	str	r0, [sp, #20]
   3a448:	sub	r7, fp, #300	; 0x12c
   3a44c:	mov	r0, r7
   3a450:	mov	r1, r4
   3a454:	bl	38f7c <build_msgbuf_tags>
   3a458:	add	r0, fp, #8
   3a45c:	str	r0, [fp, #-36]	; 0xffffffdc
   3a460:	add	r0, sp, #24
   3a464:	add	r2, sp, #4
   3a468:	mov	r1, r7
   3a46c:	bl	e798 <msgbuf_cache_init@plt>
   3a470:	ldr	r7, [pc, #308]	; 3a5ac <sendto_common_channels_local+0x19c>
   3a474:	ldr	r7, [pc, r7]
   3a478:	ldr	r0, [r7]
   3a47c:	add	r0, r0, #1
   3a480:	str	r0, [r7]
   3a484:	str	r4, [sp]
   3a488:	ldr	r0, [r4, #24]
   3a48c:	ldr	r5, [r0]
   3a490:	cmp	r5, #0
   3a494:	beq	3a530 <sendto_common_channels_local+0x120>
   3a498:	ldr	r0, [r5]
   3a49c:	ldr	r5, [r5, #8]
   3a4a0:	ldr	r0, [r0, #36]	; 0x24
   3a4a4:	ldr	r8, [r0, #136]	; 0x88
   3a4a8:	b	3a4e4 <sendto_common_channels_local+0xd4>
   3a4ac:	str	r2, [r9, #84]	; 0x54
   3a4b0:	ldrh	r2, [r9, #80]	; 0x50
   3a4b4:	cmp	r2, #64	; 0x40
   3a4b8:	movwne	r1, #0
   3a4bc:	cmp	r0, #0
   3a4c0:	moveq	r1, r0
   3a4c4:	ldr	r4, [r9, #36]	; 0x24
   3a4c8:	add	r0, sp, #24
   3a4cc:	bl	e540 <msgbuf_cache_get@plt>
   3a4d0:	mov	r1, r0
   3a4d4:	cmp	r4, #0
   3a4d8:	moveq	r4, r9
   3a4dc:	mov	r0, r4
   3a4e0:	bl	39030 <_send_linebuf>
   3a4e4:	cmp	r8, #0
   3a4e8:	beq	3a490 <sendto_common_channels_local+0x80>
   3a4ec:	ldr	r0, [r8]
   3a4f0:	ldr	r8, [r8, #8]
   3a4f4:	ldr	r9, [r0, #40]	; 0x28
   3a4f8:	ldrb	r0, [r9, #65]	; 0x41
   3a4fc:	tst	r0, #64	; 0x40
   3a500:	bne	3a4e4 <sendto_common_channels_local+0xd4>
   3a504:	ldr	r0, [r9, #84]	; 0x54
   3a508:	ldr	r2, [r7]
   3a50c:	cmp	r0, r2
   3a510:	beq	3a4e4 <sendto_common_channels_local+0xd4>
   3a514:	ldr	r0, [r9, #432]	; 0x1b0
   3a518:	ldr	r1, [r0, #296]	; 0x128
   3a51c:	and	r3, r1, r6
   3a520:	cmp	r3, r6
   3a524:	andseq	r3, r1, sl
   3a528:	bne	3a4e4 <sendto_common_channels_local+0xd4>
   3a52c:	b	3a4ac <sendto_common_channels_local+0x9c>
   3a530:	ldr	r5, [sp]
   3a534:	ldrb	r0, [r5, #65]	; 0x41
   3a538:	tst	r0, #32
   3a53c:	beq	3a59c <sendto_common_channels_local+0x18c>
   3a540:	ldr	r0, [r5, #84]	; 0x54
   3a544:	ldr	r1, [r7]
   3a548:	cmp	r0, r1
   3a54c:	beq	3a59c <sendto_common_channels_local+0x18c>
   3a550:	ldr	r0, [r5, #432]	; 0x1b0
   3a554:	ldr	r1, [r0, #296]	; 0x128
   3a558:	and	r2, r1, r6
   3a55c:	cmp	r2, r6
   3a560:	andseq	r2, r1, sl
   3a564:	bne	3a59c <sendto_common_channels_local+0x18c>
   3a568:	ldrh	r2, [r5, #80]	; 0x50
   3a56c:	cmp	r2, #64	; 0x40
   3a570:	movwne	r1, #0
   3a574:	cmp	r0, #0
   3a578:	moveq	r1, r0
   3a57c:	ldr	r4, [r5, #36]	; 0x24
   3a580:	add	r0, sp, #24
   3a584:	bl	e540 <msgbuf_cache_get@plt>
   3a588:	mov	r1, r0
   3a58c:	cmp	r4, #0
   3a590:	moveq	r4, r5
   3a594:	mov	r0, r4
   3a598:	bl	39030 <_send_linebuf>
   3a59c:	add	r0, sp, #24
   3a5a0:	bl	de80 <msgbuf_cache_free@plt>
   3a5a4:	sub	sp, fp, #28
   3a5a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a5ac:	.word	0x000203f8

0003a5b0 <sendto_common_channels_local_butone>:
   3a5b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a5b4:	add	fp, sp, #28
   3a5b8:	sub	sp, sp, #948	; 0x3b4
   3a5bc:	sub	sp, sp, #1024	; 0x400
   3a5c0:	mov	r9, r2
   3a5c4:	mov	r5, r1
   3a5c8:	mov	r7, r0
   3a5cc:	str	r3, [sp, #8]
   3a5d0:	mov	r0, #0
   3a5d4:	str	r0, [sp, #4]
   3a5d8:	str	r0, [sp, #12]
   3a5dc:	sub	r1, fp, #36	; 0x24
   3a5e0:	str	r1, [sp, #16]
   3a5e4:	str	r0, [sp, #20]
   3a5e8:	sub	r6, fp, #300	; 0x12c
   3a5ec:	mov	r0, r6
   3a5f0:	mov	r1, r7
   3a5f4:	bl	38f7c <build_msgbuf_tags>
   3a5f8:	add	r0, fp, #8
   3a5fc:	str	r0, [fp, #-36]	; 0xffffffdc
   3a600:	add	r0, sp, #24
   3a604:	add	r2, sp, #4
   3a608:	mov	r1, r6
   3a60c:	bl	e798 <msgbuf_cache_init@plt>
   3a610:	ldr	r6, [pc, #200]	; 3a6e0 <sendto_common_channels_local_butone+0x130>
   3a614:	ldr	r6, [pc, r6]
   3a618:	ldr	r0, [r6]
   3a61c:	add	r0, r0, #1
   3a620:	str	r0, [r6]
   3a624:	str	r0, [r7, #84]	; 0x54
   3a628:	ldr	r0, [r7, #24]
   3a62c:	ldr	sl, [r0]
   3a630:	cmp	sl, #0
   3a634:	beq	3a6d0 <sendto_common_channels_local_butone+0x120>
   3a638:	ldr	r0, [sl]
   3a63c:	ldr	sl, [sl, #8]
   3a640:	ldr	r0, [r0, #36]	; 0x24
   3a644:	ldr	r4, [r0, #136]	; 0x88
   3a648:	b	3a684 <sendto_common_channels_local_butone+0xd4>
   3a64c:	str	r2, [r8, #84]	; 0x54
   3a650:	ldrh	r2, [r8, #80]	; 0x50
   3a654:	cmp	r2, #64	; 0x40
   3a658:	movwne	r1, #0
   3a65c:	cmp	r0, #0
   3a660:	moveq	r1, r0
   3a664:	ldr	r7, [r8, #36]	; 0x24
   3a668:	add	r0, sp, #24
   3a66c:	bl	e540 <msgbuf_cache_get@plt>
   3a670:	mov	r1, r0
   3a674:	cmp	r7, #0
   3a678:	moveq	r7, r8
   3a67c:	mov	r0, r7
   3a680:	bl	39030 <_send_linebuf>
   3a684:	cmp	r4, #0
   3a688:	beq	3a630 <sendto_common_channels_local_butone+0x80>
   3a68c:	ldr	r0, [r4]
   3a690:	ldr	r4, [r4, #8]
   3a694:	ldr	r8, [r0, #40]	; 0x28
   3a698:	ldrb	r0, [r8, #65]	; 0x41
   3a69c:	tst	r0, #64	; 0x40
   3a6a0:	bne	3a684 <sendto_common_channels_local_butone+0xd4>
   3a6a4:	ldr	r0, [r8, #84]	; 0x54
   3a6a8:	ldr	r2, [r6]
   3a6ac:	cmp	r0, r2
   3a6b0:	beq	3a684 <sendto_common_channels_local_butone+0xd4>
   3a6b4:	ldr	r0, [r8, #432]	; 0x1b0
   3a6b8:	ldr	r1, [r0, #296]	; 0x128
   3a6bc:	and	r3, r1, r5
   3a6c0:	cmp	r3, r5
   3a6c4:	andseq	r3, r1, r9
   3a6c8:	bne	3a684 <sendto_common_channels_local_butone+0xd4>
   3a6cc:	b	3a64c <sendto_common_channels_local_butone+0x9c>
   3a6d0:	add	r0, sp, #24
   3a6d4:	bl	de80 <msgbuf_cache_free@plt>
   3a6d8:	sub	sp, fp, #28
   3a6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a6e0:	.word	0x00020258

0003a6e4 <sendto_match_butone>:
   3a6e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a6e8:	add	fp, sp, #28
   3a6ec:	sub	sp, sp, #988	; 0x3dc
   3a6f0:	sub	sp, sp, #1024	; 0x400
   3a6f4:	str	r3, [sp, #12]
   3a6f8:	mov	r5, r2
   3a6fc:	mov	r7, r1
   3a700:	mov	r4, r0
   3a704:	ldr	r0, [pc, #492]	; 3a8f8 <sendto_match_butone+0x214>
   3a708:	add	r0, pc, r0
   3a70c:	vld1.64	{d16-d17}, [r0]!
   3a710:	add	sl, sp, #16
   3a714:	mov	r1, sl
   3a718:	vst1.64	{d16-d17}, [r1]!
   3a71c:	ldr	r0, [r0]
   3a720:	str	r0, [r1]
   3a724:	sub	r0, fp, #64	; 0x40
   3a728:	bl	d7b4 <rb_linebuf_newbuf@plt>
   3a72c:	sub	r6, fp, #328	; 0x148
   3a730:	mov	r0, r6
   3a734:	mov	r1, r7
   3a738:	bl	38f7c <build_msgbuf_tags>
   3a73c:	add	r3, fp, #12
   3a740:	str	r3, [fp, #-36]	; 0xffffffdc
   3a744:	ldr	r2, [fp, #8]
   3a748:	ldr	r0, [pc, #428]	; 3a8fc <sendto_match_butone+0x218>
   3a74c:	add	r0, pc, r0
   3a750:	mov	r1, #512	; 0x200
   3a754:	bl	e450 <vsnprintf@plt>
   3a758:	ldrh	r0, [r7, #80]	; 0x50
   3a75c:	add	r1, r7, #163	; 0xa3
   3a760:	add	r2, r7, #152	; 0x98
   3a764:	add	r9, r7, #88	; 0x58
   3a768:	str	r9, [sp]
   3a76c:	str	r2, [sp, #4]
   3a770:	str	r1, [sp, #8]
   3a774:	ldr	r8, [pc, #388]	; 3a900 <sendto_match_butone+0x21c>
   3a778:	add	r8, pc, r8
   3a77c:	ldr	r3, [pc, #384]	; 3a904 <sendto_match_butone+0x220>
   3a780:	add	r3, pc, r3
   3a784:	cmp	r0, #32
   3a788:	moveq	r3, r8
   3a78c:	add	r0, sp, #36	; 0x24
   3a790:	mov	r1, r6
   3a794:	mov	r2, sl
   3a798:	bl	d6c4 <msgbuf_cache_initf@plt>
   3a79c:	ldrb	r0, [r7, #396]!	; 0x18c
   3a7a0:	cmp	r0, #0
   3a7a4:	movne	r9, r7
   3a7a8:	sub	r0, fp, #64	; 0x40
   3a7ac:	mov	r1, sl
   3a7b0:	mov	r2, r8
   3a7b4:	mov	r3, r9
   3a7b8:	bl	39c30 <linebuf_put_msgf>
   3a7bc:	ldr	r0, [sp, #12]
   3a7c0:	cmp	r0, #2
   3a7c4:	bne	3a838 <sendto_match_butone+0x154>
   3a7c8:	ldr	r0, [pc, #312]	; 3a908 <sendto_match_butone+0x224>
   3a7cc:	ldr	r0, [pc, r0]
   3a7d0:	ldr	r6, [r0]
   3a7d4:	cmp	r6, #0
   3a7d8:	beq	3a8ac <sendto_match_butone+0x1c8>
   3a7dc:	add	r8, sp, #36	; 0x24
   3a7e0:	ldr	r7, [r6]
   3a7e4:	ldr	r6, [r6, #8]
   3a7e8:	add	r1, r7, #163	; 0xa3
   3a7ec:	mov	r0, r5
   3a7f0:	bl	e114 <match@plt>
   3a7f4:	cmp	r0, #0
   3a7f8:	beq	3a82c <sendto_match_butone+0x148>
   3a7fc:	ldrh	r0, [r7, #80]	; 0x50
   3a800:	mov	r1, #0
   3a804:	cmp	r0, #64	; 0x40
   3a808:	bne	3a818 <sendto_match_butone+0x134>
   3a80c:	ldr	r0, [r7, #432]	; 0x1b0
   3a810:	cmp	r0, #0
   3a814:	ldrne	r1, [r0, #296]	; 0x128
   3a818:	mov	r0, r8
   3a81c:	bl	e540 <msgbuf_cache_get@plt>
   3a820:	mov	r1, r0
   3a824:	mov	r0, r7
   3a828:	bl	39030 <_send_linebuf>
   3a82c:	cmp	r6, #0
   3a830:	bne	3a7e0 <sendto_match_butone+0xfc>
   3a834:	b	3a8ac <sendto_match_butone+0x1c8>
   3a838:	ldr	r0, [pc, #204]	; 3a90c <sendto_match_butone+0x228>
   3a83c:	ldr	r0, [pc, r0]
   3a840:	add	r1, r0, #88	; 0x58
   3a844:	mov	r0, r5
   3a848:	bl	e114 <match@plt>
   3a84c:	cmp	r0, #0
   3a850:	beq	3a8ac <sendto_match_butone+0x1c8>
   3a854:	ldr	r0, [pc, #180]	; 3a910 <sendto_match_butone+0x22c>
   3a858:	ldr	r0, [pc, r0]
   3a85c:	ldr	r7, [r0]
   3a860:	cmp	r7, #0
   3a864:	beq	3a8ac <sendto_match_butone+0x1c8>
   3a868:	add	r5, sp, #36	; 0x24
   3a86c:	ldr	r6, [r7]
   3a870:	ldr	r7, [r7, #8]
   3a874:	ldrh	r0, [r6, #80]	; 0x50
   3a878:	mov	r1, #0
   3a87c:	cmp	r0, #64	; 0x40
   3a880:	bne	3a890 <sendto_match_butone+0x1ac>
   3a884:	ldr	r0, [r6, #432]	; 0x1b0
   3a888:	cmp	r0, #0
   3a88c:	ldrne	r1, [r0, #296]	; 0x128
   3a890:	mov	r0, r5
   3a894:	bl	e540 <msgbuf_cache_get@plt>
   3a898:	mov	r1, r0
   3a89c:	mov	r0, r6
   3a8a0:	bl	39030 <_send_linebuf>
   3a8a4:	cmp	r7, #0
   3a8a8:	bne	3a86c <sendto_match_butone+0x188>
   3a8ac:	ldr	r0, [pc, #96]	; 3a914 <sendto_match_butone+0x230>
   3a8b0:	ldr	r0, [pc, r0]
   3a8b4:	ldr	r6, [r0]
   3a8b8:	cmp	r6, #0
   3a8bc:	beq	3a8e0 <sendto_match_butone+0x1fc>
   3a8c0:	sub	r5, fp, #64	; 0x40
   3a8c4:	ldr	r0, [r6]
   3a8c8:	cmp	r0, r4
   3a8cc:	movne	r1, r5
   3a8d0:	blne	39c80 <send_linebuf_remote>
   3a8d4:	ldr	r6, [r6, #8]
   3a8d8:	cmp	r6, #0
   3a8dc:	bne	3a8c4 <sendto_match_butone+0x1e0>
   3a8e0:	add	r0, sp, #36	; 0x24
   3a8e4:	bl	de80 <msgbuf_cache_free@plt>
   3a8e8:	sub	r0, fp, #64	; 0x40
   3a8ec:	bl	e00c <rb_linebuf_donebuf@plt>
   3a8f0:	sub	sp, fp, #28
   3a8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a8f8:	.word	0x0001f7b0
   3a8fc:	.word	0x00031018
   3a900:	.word	0x00008d3f
   3a904:	.word	0x0000cbd8
   3a908:	.word	0x0002035c
   3a90c:	.word	0x0002031c
   3a910:	.word	0x000202d0
   3a914:	.word	0x00020120

0003a918 <sendto_match_servs>:
   3a918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a91c:	add	fp, sp, #28
   3a920:	sub	sp, sp, #52	; 0x34
   3a924:	mov	r6, r1
   3a928:	mov	r7, r0
   3a92c:	ldr	r0, [pc, #348]	; 3aa90 <sendto_match_servs+0x178>
   3a930:	add	r0, pc, r0
   3a934:	vld1.64	{d16-d17}, [r0]!
   3a938:	mov	r1, sp
   3a93c:	vst1.64	{d16-d17}, [r1]!
   3a940:	ldr	r0, [r0]
   3a944:	str	r0, [r1]
   3a948:	cmp	r6, #0
   3a94c:	ldrbne	r0, [r6]
   3a950:	cmpne	r0, #0
   3a954:	bne	3a960 <sendto_match_servs+0x48>
   3a958:	sub	sp, fp, #28
   3a95c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a960:	mov	sl, r3
   3a964:	mov	r8, r2
   3a968:	ldr	r4, [fp, #8]
   3a96c:	add	r9, sp, #20
   3a970:	mov	r0, r9
   3a974:	bl	d7b4 <rb_linebuf_newbuf@plt>
   3a978:	add	r3, fp, #12
   3a97c:	str	r3, [fp, #-32]	; 0xffffffe0
   3a980:	ldr	r0, [pc, #268]	; 3aa94 <sendto_match_servs+0x17c>
   3a984:	add	r0, pc, r0
   3a988:	mov	r1, #512	; 0x200
   3a98c:	mov	r2, r4
   3a990:	bl	e450 <vsnprintf@plt>
   3a994:	mov	r3, r7
   3a998:	ldrb	r0, [r3, #396]!	; 0x18c
   3a99c:	cmp	r0, #0
   3a9a0:	subeq	r3, r3, #308	; 0x134
   3a9a4:	mov	r1, sp
   3a9a8:	ldr	r2, [pc, #232]	; 3aa98 <sendto_match_servs+0x180>
   3a9ac:	add	r2, pc, r2
   3a9b0:	mov	r0, r9
   3a9b4:	bl	39c30 <linebuf_put_msgf>
   3a9b8:	ldr	r4, [pc, #220]	; 3aa9c <sendto_match_servs+0x184>
   3a9bc:	ldr	r4, [pc, r4]
   3a9c0:	ldr	r0, [r4]
   3a9c4:	add	r0, r0, #1
   3a9c8:	str	r0, [r4]
   3a9cc:	ldr	r0, [pc, #204]	; 3aaa0 <sendto_match_servs+0x188>
   3a9d0:	ldr	r0, [pc, r0]
   3a9d4:	ldr	r5, [r0]
   3a9d8:	cmp	r5, #0
   3a9dc:	bne	3a9f0 <sendto_match_servs+0xd8>
   3a9e0:	b	3aa80 <sendto_match_servs+0x168>
   3a9e4:	ldr	r5, [r5, #8]
   3a9e8:	cmp	r5, #0
   3a9ec:	beq	3aa80 <sendto_match_servs+0x168>
   3a9f0:	ldr	r9, [r5]
   3a9f4:	ldrh	r0, [r9, #80]	; 0x50
   3a9f8:	cmp	r0, #4
   3a9fc:	beq	3a9e4 <sendto_match_servs+0xcc>
   3aa00:	ldr	r0, [r9, #36]	; 0x24
   3aa04:	ldr	r1, [r7, #36]	; 0x24
   3aa08:	cmp	r0, r1
   3aa0c:	beq	3a9e4 <sendto_match_servs+0xcc>
   3aa10:	ldr	r0, [r0, #84]	; 0x54
   3aa14:	ldr	r1, [r4]
   3aa18:	cmp	r0, r1
   3aa1c:	beq	3a9e4 <sendto_match_servs+0xcc>
   3aa20:	add	r1, r9, #88	; 0x58
   3aa24:	mov	r0, r6
   3aa28:	bl	e114 <match@plt>
   3aa2c:	cmp	r0, #0
   3aa30:	beq	3a9e4 <sendto_match_servs+0xcc>
   3aa34:	ldr	r0, [r9, #36]	; 0x24
   3aa38:	ldr	r1, [r4]
   3aa3c:	str	r1, [r0, #84]	; 0x54
   3aa40:	cmp	r8, #0
   3aa44:	beq	3aa5c <sendto_match_servs+0x144>
   3aa48:	ldr	r1, [r0, #432]	; 0x1b0
   3aa4c:	ldr	r1, [r1, #296]	; 0x128
   3aa50:	and	r1, r1, r8
   3aa54:	cmp	r1, r8
   3aa58:	bne	3a9e4 <sendto_match_servs+0xcc>
   3aa5c:	cmp	sl, #0
   3aa60:	beq	3aa74 <sendto_match_servs+0x15c>
   3aa64:	ldr	r1, [r0, #432]	; 0x1b0
   3aa68:	ldr	r1, [r1, #296]	; 0x128
   3aa6c:	tst	r1, sl
   3aa70:	bne	3a9e4 <sendto_match_servs+0xcc>
   3aa74:	add	r1, sp, #20
   3aa78:	bl	39030 <_send_linebuf>
   3aa7c:	b	3a9e4 <sendto_match_servs+0xcc>
   3aa80:	add	r0, sp, #20
   3aa84:	bl	e00c <rb_linebuf_donebuf@plt>
   3aa88:	sub	sp, fp, #28
   3aa8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aa90:	.word	0x0001f5a0
   3aa94:	.word	0x00030fe0
   3aa98:	.word	0x00008b0b
   3aa9c:	.word	0x0001feb0
   3aaa0:	.word	0x0001fea8

0003aaa4 <sendto_local_clients_with_capability>:
   3aaa4:	sub	sp, sp, #8
   3aaa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3aaac:	add	fp, sp, #24
   3aab0:	sub	sp, sp, #1968	; 0x7b0
   3aab4:	mov	r4, r0
   3aab8:	str	r3, [fp, #12]
   3aabc:	str	r2, [fp, #8]
   3aac0:	str	r1, [sp, #8]
   3aac4:	mov	r0, #0
   3aac8:	str	r0, [sp, #4]
   3aacc:	str	r0, [sp, #12]
   3aad0:	sub	r1, fp, #28
   3aad4:	str	r1, [sp, #16]
   3aad8:	str	r0, [sp, #20]
   3aadc:	ldr	r1, [pc, #184]	; 3ab9c <sendto_local_clients_with_capability+0xf8>
   3aae0:	ldr	r1, [pc, r1]
   3aae4:	sub	r5, fp, #292	; 0x124
   3aae8:	mov	r0, r5
   3aaec:	bl	38f7c <build_msgbuf_tags>
   3aaf0:	add	r0, fp, #8
   3aaf4:	str	r0, [fp, #-28]	; 0xffffffe4
   3aaf8:	add	r0, sp, #24
   3aafc:	add	r2, sp, #4
   3ab00:	mov	r1, r5
   3ab04:	bl	e798 <msgbuf_cache_init@plt>
   3ab08:	ldr	r0, [pc, #144]	; 3aba0 <sendto_local_clients_with_capability+0xfc>
   3ab0c:	ldr	r0, [pc, r0]
   3ab10:	ldr	r7, [r0]
   3ab14:	cmp	r7, #0
   3ab18:	beq	3ab84 <sendto_local_clients_with_capability+0xe0>
   3ab1c:	add	r8, sp, #24
   3ab20:	ldr	r5, [r7]
   3ab24:	ldrb	r0, [r5, #65]	; 0x41
   3ab28:	tst	r0, #64	; 0x40
   3ab2c:	bne	3ab78 <sendto_local_clients_with_capability+0xd4>
   3ab30:	ldr	r0, [r5, #432]	; 0x1b0
   3ab34:	ldr	r1, [r0, #296]	; 0x128
   3ab38:	and	r2, r1, r4
   3ab3c:	cmp	r2, r4
   3ab40:	bne	3ab78 <sendto_local_clients_with_capability+0xd4>
   3ab44:	ldrh	r2, [r5, #80]	; 0x50
   3ab48:	cmp	r2, #64	; 0x40
   3ab4c:	movwne	r1, #0
   3ab50:	cmp	r0, #0
   3ab54:	moveq	r1, r0
   3ab58:	ldr	r6, [r5, #36]	; 0x24
   3ab5c:	mov	r0, r8
   3ab60:	bl	e540 <msgbuf_cache_get@plt>
   3ab64:	mov	r1, r0
   3ab68:	cmp	r6, #0
   3ab6c:	moveq	r6, r5
   3ab70:	mov	r0, r6
   3ab74:	bl	39030 <_send_linebuf>
   3ab78:	ldr	r7, [r7, #8]
   3ab7c:	cmp	r7, #0
   3ab80:	bne	3ab20 <sendto_local_clients_with_capability+0x7c>
   3ab84:	add	r0, sp, #24
   3ab88:	bl	de80 <msgbuf_cache_free@plt>
   3ab8c:	sub	sp, fp, #24
   3ab90:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ab94:	add	sp, sp, #8
   3ab98:	bx	lr
   3ab9c:	.word	0x00020078
   3aba0:	.word	0x0002001c

0003aba4 <sendto_monitor>:
   3aba4:	sub	sp, sp, #4
   3aba8:	push	{r4, r5, r6, sl, fp, lr}
   3abac:	add	fp, sp, #16
   3abb0:	sub	sp, sp, #940	; 0x3ac
   3abb4:	sub	sp, sp, #1024	; 0x400
   3abb8:	mov	r4, r1
   3abbc:	mov	r1, r0
   3abc0:	str	r3, [fp, #8]
   3abc4:	str	r2, [sp, #4]
   3abc8:	mov	r0, #0
   3abcc:	str	r0, [sp]
   3abd0:	str	r0, [sp, #8]
   3abd4:	sub	r2, fp, #20
   3abd8:	str	r2, [sp, #12]
   3abdc:	str	r0, [sp, #16]
   3abe0:	sub	r5, fp, #284	; 0x11c
   3abe4:	mov	r0, r5
   3abe8:	bl	38f7c <build_msgbuf_tags>
   3abec:	add	r0, fp, #8
   3abf0:	str	r0, [fp, #-20]	; 0xffffffec
   3abf4:	add	r0, sp, #20
   3abf8:	mov	r2, sp
   3abfc:	mov	r1, r5
   3ac00:	bl	e798 <msgbuf_cache_init@plt>
   3ac04:	ldr	r6, [r4, #32]
   3ac08:	cmp	r6, #0
   3ac0c:	beq	3ac60 <sendto_monitor+0xbc>
   3ac10:	add	r4, sp, #20
   3ac14:	ldr	r5, [r6]
   3ac18:	ldr	r6, [r6, #8]
   3ac1c:	ldrb	r0, [r5, #65]	; 0x41
   3ac20:	tst	r0, #64	; 0x40
   3ac24:	bne	3ac58 <sendto_monitor+0xb4>
   3ac28:	ldrh	r0, [r5, #80]	; 0x50
   3ac2c:	mov	r1, #0
   3ac30:	cmp	r0, #64	; 0x40
   3ac34:	bne	3ac44 <sendto_monitor+0xa0>
   3ac38:	ldr	r0, [r5, #432]	; 0x1b0
   3ac3c:	cmp	r0, #0
   3ac40:	ldrne	r1, [r0, #296]	; 0x128
   3ac44:	mov	r0, r4
   3ac48:	bl	e540 <msgbuf_cache_get@plt>
   3ac4c:	mov	r1, r0
   3ac50:	mov	r0, r5
   3ac54:	bl	39030 <_send_linebuf>
   3ac58:	cmp	r6, #0
   3ac5c:	bne	3ac14 <sendto_monitor+0x70>
   3ac60:	add	r0, sp, #20
   3ac64:	bl	de80 <msgbuf_cache_free@plt>
   3ac68:	sub	sp, fp, #16
   3ac6c:	pop	{r4, r5, r6, sl, fp, lr}
   3ac70:	add	sp, sp, #4
   3ac74:	bx	lr

0003ac78 <sendto_anywhere>:
   3ac78:	push	{fp, lr}
   3ac7c:	mov	fp, sp
   3ac80:	sub	sp, sp, #16
   3ac84:	mov	ip, r2
   3ac88:	mov	r2, r1
   3ac8c:	add	r1, fp, #8
   3ac90:	str	r1, [fp, #-4]
   3ac94:	sub	r1, fp, #4
   3ac98:	str	r3, [sp]
   3ac9c:	str	r1, [sp, #4]
   3aca0:	mov	r1, r0
   3aca4:	mov	r3, ip
   3aca8:	bl	3acb4 <_sendto_anywhere>
   3acac:	mov	sp, fp
   3acb0:	pop	{fp, pc}

0003acb4 <_sendto_anywhere>:
   3acb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3acb8:	add	fp, sp, #24
   3acbc:	sub	sp, sp, #336	; 0x150
   3acc0:	mov	r6, r3
   3acc4:	mov	r5, r2
   3acc8:	mov	r7, r1
   3accc:	mov	r4, r0
   3acd0:	mov	r0, #0
   3acd4:	str	r0, [fp, #-72]	; 0xffffffb8
   3acd8:	str	r0, [fp, #-64]	; 0xffffffc0
   3acdc:	str	r0, [fp, #-56]	; 0xffffffc8
   3ace0:	ldr	r0, [fp, #8]
   3ace4:	str	r0, [fp, #-68]	; 0xffffffbc
   3ace8:	ldr	r0, [fp, #12]
   3acec:	str	r0, [fp, #-60]	; 0xffffffc4
   3acf0:	sub	r0, fp, #52	; 0x34
   3acf4:	bl	d7b4 <rb_linebuf_newbuf@plt>
   3acf8:	ldrb	r0, [r4, #65]	; 0x41
   3acfc:	tst	r0, #32
   3ad00:	beq	3ad44 <_sendto_anywhere+0x90>
   3ad04:	ldrh	r0, [r4, #80]	; 0x50
   3ad08:	cmp	r0, #64	; 0x40
   3ad0c:	bne	3ad44 <_sendto_anywhere+0x90>
   3ad10:	ldrh	r0, [r5, #80]	; 0x50
   3ad14:	cmp	r0, #32
   3ad18:	bne	3adcc <_sendto_anywhere+0x118>
   3ad1c:	add	r0, r7, #88	; 0x58
   3ad20:	str	r6, [sp]
   3ad24:	str	r0, [sp, #4]
   3ad28:	add	r3, r5, #88	; 0x58
   3ad2c:	sub	r0, fp, #52	; 0x34
   3ad30:	sub	r1, fp, #72	; 0x48
   3ad34:	ldr	r2, [pc, #292]	; 3ae60 <_sendto_anywhere+0x1ac>
   3ad38:	add	r2, pc, r2
   3ad3c:	bl	39c30 <linebuf_put_msgf>
   3ad40:	b	3ae44 <_sendto_anywhere+0x190>
   3ad44:	ldr	r0, [r7, #36]	; 0x24
   3ad48:	ldrh	r1, [r0, #80]	; 0x50
   3ad4c:	cmp	r1, #32
   3ad50:	bne	3ad70 <_sendto_anywhere+0xbc>
   3ad54:	ldrb	r1, [r0, #396]	; 0x18c
   3ad58:	cmp	r1, #0
   3ad5c:	beq	3ad78 <_sendto_anywhere+0xc4>
   3ad60:	ldrb	r1, [r5, #396]!	; 0x18c
   3ad64:	cmp	r1, #0
   3ad68:	subeq	r5, r5, #308	; 0x134
   3ad6c:	b	3ad7c <_sendto_anywhere+0xc8>
   3ad70:	add	r5, r5, #88	; 0x58
   3ad74:	b	3ad98 <_sendto_anywhere+0xe4>
   3ad78:	add	r5, r5, #88	; 0x58
   3ad7c:	ldrb	r0, [r0, #396]	; 0x18c
   3ad80:	cmp	r0, #0
   3ad84:	beq	3ad98 <_sendto_anywhere+0xe4>
   3ad88:	ldrb	r0, [r7, #396]!	; 0x18c
   3ad8c:	cmp	r0, #0
   3ad90:	subeq	r7, r7, #308	; 0x134
   3ad94:	b	3ad9c <_sendto_anywhere+0xe8>
   3ad98:	add	r7, r7, #88	; 0x58
   3ad9c:	stm	sp, {r6, r7}
   3ada0:	sub	r6, fp, #52	; 0x34
   3ada4:	sub	r1, fp, #72	; 0x48
   3ada8:	ldr	r2, [pc, #192]	; 3ae70 <_sendto_anywhere+0x1bc>
   3adac:	add	r2, pc, r2
   3adb0:	mov	r0, r6
   3adb4:	mov	r3, r5
   3adb8:	bl	39c30 <linebuf_put_msgf>
   3adbc:	mov	r0, r4
   3adc0:	mov	r1, r6
   3adc4:	bl	39c80 <send_linebuf_remote>
   3adc8:	b	3ae50 <_sendto_anywhere+0x19c>
   3adcc:	add	r0, sp, #24
   3add0:	mov	r1, r5
   3add4:	bl	38f7c <build_msgbuf_tags>
   3add8:	ldrh	r0, [r5, #80]	; 0x50
   3addc:	cmp	r0, #64	; 0x40
   3ade0:	bne	3ae04 <_sendto_anywhere+0x150>
   3ade4:	ldr	r1, [r5, #24]
   3ade8:	ldr	r2, [pc, #120]	; 3ae68 <_sendto_anywhere+0x1b4>
   3adec:	add	r2, pc, r2
   3adf0:	ldr	r0, [pc, #116]	; 3ae6c <_sendto_anywhere+0x1b8>
   3adf4:	add	r0, pc, r0
   3adf8:	cmp	r1, #0
   3adfc:	moveq	r0, r2
   3ae00:	b	3ae0c <_sendto_anywhere+0x158>
   3ae04:	ldr	r0, [pc, #88]	; 3ae64 <_sendto_anywhere+0x1b0>
   3ae08:	add	r0, pc, r0
   3ae0c:	add	r1, r5, #163	; 0xa3
   3ae10:	add	r2, r5, #152	; 0x98
   3ae14:	add	r3, r7, #88	; 0x58
   3ae18:	add	r7, r5, #88	; 0x58
   3ae1c:	stm	sp, {r0, r7}
   3ae20:	str	r6, [sp, #8]
   3ae24:	str	r3, [sp, #12]
   3ae28:	str	r2, [sp, #16]
   3ae2c:	str	r1, [sp, #20]
   3ae30:	sub	r0, fp, #52	; 0x34
   3ae34:	add	r1, sp, #24
   3ae38:	sub	r3, fp, #72	; 0x48
   3ae3c:	mov	r2, r4
   3ae40:	bl	3954c <linebuf_put_tagsf>
   3ae44:	sub	r1, fp, #52	; 0x34
   3ae48:	mov	r0, r4
   3ae4c:	bl	39030 <_send_linebuf>
   3ae50:	sub	r0, fp, #52	; 0x34
   3ae54:	bl	e00c <rb_linebuf_donebuf@plt>
   3ae58:	sub	sp, fp, #24
   3ae5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ae60:	.word	0x0000c599
   3ae64:	.word	0x0000c657
   3ae68:	.word	0x0000c673
   3ae6c:	.word	0x0000c650
   3ae70:	.word	0x0000c525

0003ae74 <sendto_anywhere_echo>:
   3ae74:	push	{fp, lr}
   3ae78:	mov	fp, sp
   3ae7c:	sub	sp, sp, #16
   3ae80:	mov	ip, r2
   3ae84:	mov	r2, r1
   3ae88:	mov	r1, r0
   3ae8c:	add	r0, fp, #8
   3ae90:	str	r0, [fp, #-4]
   3ae94:	sub	r0, fp, #4
   3ae98:	str	r3, [sp]
   3ae9c:	str	r0, [sp, #4]
   3aea0:	mov	r0, r2
   3aea4:	mov	r3, ip
   3aea8:	bl	3acb4 <_sendto_anywhere>
   3aeac:	mov	sp, fp
   3aeb0:	pop	{fp, pc}

0003aeb4 <sendto_realops_snomask_from>:
   3aeb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3aeb8:	add	fp, sp, #28
   3aebc:	sub	sp, sp, #948	; 0x3b4
   3aec0:	sub	sp, sp, #1024	; 0x400
   3aec4:	mov	r6, r2
   3aec8:	mov	r4, r1
   3aecc:	mov	r5, r0
   3aed0:	str	r3, [sp, #8]
   3aed4:	mov	r0, #0
   3aed8:	str	r0, [sp, #4]
   3aedc:	str	r0, [sp, #12]
   3aee0:	sub	r1, fp, #36	; 0x24
   3aee4:	str	r1, [sp, #16]
   3aee8:	str	r0, [sp, #20]
   3aeec:	ldr	r1, [pc, #364]	; 3b060 <sendto_realops_snomask_from+0x1ac>
   3aef0:	ldr	r1, [pc, r1]
   3aef4:	sub	r7, fp, #300	; 0x12c
   3aef8:	mov	r0, r7
   3aefc:	bl	38f7c <build_msgbuf_tags>
   3af00:	add	r0, fp, #8
   3af04:	str	r0, [fp, #-36]	; 0xffffffdc
   3af08:	add	r0, r6, #88	; 0x58
   3af0c:	str	r0, [sp]
   3af10:	add	r0, sp, #24
   3af14:	add	r2, sp, #4
   3af18:	ldr	r3, [pc, #324]	; 3b064 <sendto_realops_snomask_from+0x1b0>
   3af1c:	add	r3, pc, r3
   3af20:	mov	r1, r7
   3af24:	bl	d6c4 <msgbuf_cache_initf@plt>
   3af28:	ldr	r0, [pc, #312]	; 3b068 <sendto_realops_snomask_from+0x1b4>
   3af2c:	ldr	r0, [pc, r0]
   3af30:	ldr	r6, [r0]
   3af34:	cmp	r6, #0
   3af38:	beq	3b050 <sendto_realops_snomask_from+0x19c>
   3af3c:	ldr	r8, [pc, #296]	; 3b06c <sendto_realops_snomask_from+0x1b8>
   3af40:	add	r8, pc, r8
   3af44:	ldr	r9, [pc, #292]	; 3b070 <sendto_realops_snomask_from+0x1bc>
   3af48:	add	r9, pc, r9
   3af4c:	add	sl, sp, #24
   3af50:	b	3af68 <sendto_realops_snomask_from+0xb4>
   3af54:	mov	r1, r8
   3af58:	bl	e594 <privilegeset_in_set@plt>
   3af5c:	cmp	r0, #0
   3af60:	bne	3b048 <sendto_realops_snomask_from+0x194>
   3af64:	b	3b00c <sendto_realops_snomask_from+0x158>
   3af68:	ldr	r7, [r6]
   3af6c:	ldr	r6, [r6, #8]
   3af70:	cmp	r4, #1
   3af74:	beq	3afd0 <sendto_realops_snomask_from+0x11c>
   3af78:	cmp	r4, #2
   3af7c:	bne	3b00c <sendto_realops_snomask_from+0x158>
   3af80:	ldr	r0, [r7, #24]
   3af84:	cmp	r0, #0
   3af88:	beq	3b048 <sendto_realops_snomask_from+0x194>
   3af8c:	ldr	r0, [r0, #36]	; 0x24
   3af90:	cmp	r0, #0
   3af94:	beq	3afa8 <sendto_realops_snomask_from+0xf4>
   3af98:	mov	r1, r9
   3af9c:	bl	e594 <privilegeset_in_set@plt>
   3afa0:	cmp	r0, #0
   3afa4:	bne	3b00c <sendto_realops_snomask_from+0x158>
   3afa8:	ldr	r0, [r7, #24]
   3afac:	cmp	r0, #0
   3afb0:	ldrne	r0, [r0, #36]	; 0x24
   3afb4:	cmpne	r0, #0
   3afb8:	beq	3b048 <sendto_realops_snomask_from+0x194>
   3afbc:	mov	r1, r8
   3afc0:	bl	e594 <privilegeset_in_set@plt>
   3afc4:	cmp	r0, #0
   3afc8:	bne	3b00c <sendto_realops_snomask_from+0x158>
   3afcc:	b	3b048 <sendto_realops_snomask_from+0x194>
   3afd0:	ldr	r0, [r7, #24]
   3afd4:	cmp	r0, #0
   3afd8:	beq	3b00c <sendto_realops_snomask_from+0x158>
   3afdc:	ldr	r0, [r0, #36]	; 0x24
   3afe0:	cmp	r0, #0
   3afe4:	beq	3aff8 <sendto_realops_snomask_from+0x144>
   3afe8:	mov	r1, r9
   3afec:	bl	e594 <privilegeset_in_set@plt>
   3aff0:	cmp	r0, #0
   3aff4:	bne	3b048 <sendto_realops_snomask_from+0x194>
   3aff8:	ldr	r0, [r7, #24]
   3affc:	cmp	r0, #0
   3b000:	ldrne	r0, [r0, #36]	; 0x24
   3b004:	cmpne	r0, #0
   3b008:	bne	3af54 <sendto_realops_snomask_from+0xa0>
   3b00c:	ldr	r0, [r7, #72]	; 0x48
   3b010:	tst	r0, r5
   3b014:	beq	3b048 <sendto_realops_snomask_from+0x194>
   3b018:	ldrh	r0, [r7, #80]	; 0x50
   3b01c:	mov	r1, #0
   3b020:	cmp	r0, #64	; 0x40
   3b024:	bne	3b034 <sendto_realops_snomask_from+0x180>
   3b028:	ldr	r0, [r7, #432]	; 0x1b0
   3b02c:	cmp	r0, #0
   3b030:	ldrne	r1, [r0, #296]	; 0x128
   3b034:	mov	r0, sl
   3b038:	bl	e540 <msgbuf_cache_get@plt>
   3b03c:	mov	r1, r0
   3b040:	mov	r0, r7
   3b044:	bl	39030 <_send_linebuf>
   3b048:	cmp	r6, #0
   3b04c:	bne	3af68 <sendto_realops_snomask_from+0xb4>
   3b050:	add	r0, sp, #24
   3b054:	bl	de80 <msgbuf_cache_free@plt>
   3b058:	sub	sp, fp, #28
   3b05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b060:	.word	0x0001fc68
   3b064:	.word	0x0000c47f
   3b068:	.word	0x0001fa0c
   3b06c:	.word	0x00005d9a
   3b070:	.word	0x00005d87

0003b074 <sendto_wallops_flags>:
   3b074:	sub	sp, sp, #4
   3b078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b07c:	add	fp, sp, #24
   3b080:	sub	sp, sp, #956	; 0x3bc
   3b084:	sub	sp, sp, #1024	; 0x400
   3b088:	mov	r5, r1
   3b08c:	mov	r4, r0
   3b090:	str	r3, [fp, #8]
   3b094:	str	r2, [sp, #20]
   3b098:	mov	r0, #0
   3b09c:	str	r0, [sp, #16]
   3b0a0:	str	r0, [sp, #24]
   3b0a4:	sub	r1, fp, #28
   3b0a8:	str	r1, [sp, #28]
   3b0ac:	str	r0, [sp, #32]
   3b0b0:	sub	r0, fp, #292	; 0x124
   3b0b4:	mov	r1, r5
   3b0b8:	bl	38f7c <build_msgbuf_tags>
   3b0bc:	add	r0, fp, #8
   3b0c0:	str	r0, [fp, #-28]	; 0xffffffe4
   3b0c4:	ldrh	r0, [r5, #80]	; 0x50
   3b0c8:	cmp	r0, #64	; 0x40
   3b0cc:	bne	3b10c <sendto_wallops_flags+0x98>
   3b0d0:	ldr	r0, [r5, #24]
   3b0d4:	cmp	r0, #0
   3b0d8:	beq	3b10c <sendto_wallops_flags+0x98>
   3b0dc:	add	r0, r5, #163	; 0xa3
   3b0e0:	add	r1, r5, #152	; 0x98
   3b0e4:	add	r2, r5, #88	; 0x58
   3b0e8:	str	r2, [sp]
   3b0ec:	str	r1, [sp, #4]
   3b0f0:	str	r0, [sp, #8]
   3b0f4:	add	r0, sp, #36	; 0x24
   3b0f8:	sub	r1, fp, #292	; 0x124
   3b0fc:	add	r2, sp, #16
   3b100:	ldr	r3, [pc, #200]	; 3b1d0 <sendto_wallops_flags+0x15c>
   3b104:	add	r3, pc, r3
   3b108:	b	3b128 <sendto_wallops_flags+0xb4>
   3b10c:	add	r0, r5, #88	; 0x58
   3b110:	str	r0, [sp]
   3b114:	add	r0, sp, #36	; 0x24
   3b118:	sub	r1, fp, #292	; 0x124
   3b11c:	add	r2, sp, #16
   3b120:	ldr	r3, [pc, #172]	; 3b1d4 <sendto_wallops_flags+0x160>
   3b124:	add	r3, pc, r3
   3b128:	bl	d6c4 <msgbuf_cache_initf@plt>
   3b12c:	ldrh	r0, [r5, #80]	; 0x50
   3b130:	cmp	r0, #64	; 0x40
   3b134:	cmpeq	r4, #2
   3b138:	beq	3b1b8 <sendto_wallops_flags+0x144>
   3b13c:	ldr	r0, [pc, #152]	; 3b1dc <sendto_wallops_flags+0x168>
   3b140:	ldr	r0, [pc, r0]
   3b144:	ldr	r7, [r0]
   3b148:	cmp	r7, #0
   3b14c:	beq	3b1a0 <sendto_wallops_flags+0x12c>
   3b150:	add	r5, sp, #36	; 0x24
   3b154:	ldr	r6, [r7]
   3b158:	ldr	r7, [r7, #8]
   3b15c:	ldr	r0, [r6, #56]	; 0x38
   3b160:	tst	r0, r4
   3b164:	beq	3b198 <sendto_wallops_flags+0x124>
   3b168:	ldrh	r0, [r6, #80]	; 0x50
   3b16c:	mov	r1, #0
   3b170:	cmp	r0, #64	; 0x40
   3b174:	bne	3b184 <sendto_wallops_flags+0x110>
   3b178:	ldr	r0, [r6, #432]	; 0x1b0
   3b17c:	cmp	r0, #0
   3b180:	ldrne	r1, [r0, #296]	; 0x128
   3b184:	mov	r0, r5
   3b188:	bl	e540 <msgbuf_cache_get@plt>
   3b18c:	mov	r1, r0
   3b190:	mov	r0, r6
   3b194:	bl	39030 <_send_linebuf>
   3b198:	cmp	r7, #0
   3b19c:	bne	3b154 <sendto_wallops_flags+0xe0>
   3b1a0:	add	r0, sp, #36	; 0x24
   3b1a4:	bl	de80 <msgbuf_cache_free@plt>
   3b1a8:	sub	sp, fp, #24
   3b1ac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b1b0:	add	sp, sp, #4
   3b1b4:	bx	lr
   3b1b8:	ldr	r0, [r5, #24]
   3b1bc:	cmp	r0, #0
   3b1c0:	beq	3b13c <sendto_wallops_flags+0xc8>
   3b1c4:	ldr	r0, [pc, #12]	; 3b1d8 <sendto_wallops_flags+0x164>
   3b1c8:	ldr	r0, [pc, r0]
   3b1cc:	b	3b144 <sendto_wallops_flags+0xd0>
   3b1d0:	.word	0x0000c2b4
   3b1d4:	.word	0x0000c2a8
   3b1d8:	.word	0x0001f960
   3b1dc:	.word	0x0001f7f8

0003b1e0 <kill_client>:
   3b1e0:	sub	sp, sp, #4
   3b1e4:	push	{r4, r5, r6, sl, fp, lr}
   3b1e8:	add	fp, sp, #16
   3b1ec:	sub	sp, sp, #332	; 0x14c
   3b1f0:	mov	r5, r1
   3b1f4:	mov	r4, r0
   3b1f8:	str	r3, [fp, #8]
   3b1fc:	str	r2, [sp, #20]
   3b200:	mov	r0, #0
   3b204:	str	r0, [sp, #16]
   3b208:	str	r0, [sp, #24]
   3b20c:	sub	r1, fp, #20
   3b210:	str	r1, [sp, #28]
   3b214:	str	r0, [sp, #32]
   3b218:	ldr	r6, [pc, #200]	; 3b2e8 <kill_client+0x108>
   3b21c:	ldr	r6, [pc, r6]
   3b220:	add	r0, sp, #36	; 0x24
   3b224:	mov	r1, r6
   3b228:	bl	38f7c <build_msgbuf_tags>
   3b22c:	sub	r0, fp, #48	; 0x30
   3b230:	bl	d7b4 <rb_linebuf_newbuf@plt>
   3b234:	add	r0, fp, #8
   3b238:	str	r0, [fp, #-20]	; 0xffffffec
   3b23c:	ldr	r0, [r4, #36]	; 0x24
   3b240:	ldrh	r1, [r0, #80]	; 0x50
   3b244:	cmp	r1, #32
   3b248:	bne	3b268 <kill_client+0x88>
   3b24c:	ldrb	r1, [r0, #396]	; 0x18c
   3b250:	cmp	r1, #0
   3b254:	beq	3b270 <kill_client+0x90>
   3b258:	ldrb	r1, [r6, #396]!	; 0x18c
   3b25c:	cmp	r1, #0
   3b260:	subeq	r6, r6, #308	; 0x134
   3b264:	b	3b274 <kill_client+0x94>
   3b268:	add	r6, r6, #88	; 0x58
   3b26c:	b	3b290 <kill_client+0xb0>
   3b270:	add	r6, r6, #88	; 0x58
   3b274:	ldrb	r0, [r0, #396]	; 0x18c
   3b278:	cmp	r0, #0
   3b27c:	beq	3b290 <kill_client+0xb0>
   3b280:	ldrb	r0, [r5, #396]!	; 0x18c
   3b284:	cmp	r0, #0
   3b288:	subeq	r5, r5, #308	; 0x134
   3b28c:	b	3b294 <kill_client+0xb4>
   3b290:	add	r5, r5, #88	; 0x58
   3b294:	ldr	r0, [pc, #80]	; 3b2ec <kill_client+0x10c>
   3b298:	add	r0, pc, r0
   3b29c:	stm	sp, {r0, r6}
   3b2a0:	str	r5, [sp, #8]
   3b2a4:	sub	r5, fp, #48	; 0x30
   3b2a8:	add	r1, sp, #36	; 0x24
   3b2ac:	add	r3, sp, #16
   3b2b0:	mov	r0, r5
   3b2b4:	mov	r2, r4
   3b2b8:	bl	3954c <linebuf_put_tagsf>
   3b2bc:	ldr	r0, [r4, #36]	; 0x24
   3b2c0:	cmp	r0, #0
   3b2c4:	moveq	r0, r4
   3b2c8:	mov	r1, r5
   3b2cc:	bl	39030 <_send_linebuf>
   3b2d0:	mov	r0, r5
   3b2d4:	bl	e00c <rb_linebuf_donebuf@plt>
   3b2d8:	sub	sp, fp, #16
   3b2dc:	pop	{r4, r5, r6, sl, fp, lr}
   3b2e0:	add	sp, sp, #4
   3b2e4:	bx	lr
   3b2e8:	.word	0x0001f93c
   3b2ec:	.word	0x0000c142

0003b2f0 <kill_client_serv_butone>:
   3b2f0:	sub	sp, sp, #4
   3b2f4:	push	{r4, r5, r6, r7, fp, lr}
   3b2f8:	add	fp, sp, #16
   3b2fc:	sub	sp, sp, #60	; 0x3c
   3b300:	mov	r4, r1
   3b304:	mov	r5, r0
   3b308:	str	r3, [fp, #8]
   3b30c:	str	r2, [sp, #12]
   3b310:	mov	r0, #0
   3b314:	str	r0, [sp, #8]
   3b318:	str	r0, [sp, #16]
   3b31c:	sub	r1, fp, #20
   3b320:	str	r1, [sp, #20]
   3b324:	str	r0, [sp, #24]
   3b328:	add	r6, sp, #28
   3b32c:	mov	r0, r6
   3b330:	bl	d7b4 <rb_linebuf_newbuf@plt>
   3b334:	add	r0, fp, #8
   3b338:	str	r0, [fp, #-20]	; 0xffffffec
   3b33c:	ldr	r3, [pc, #184]	; 3b3fc <kill_client_serv_butone+0x10c>
   3b340:	ldr	r3, [pc, r3]
   3b344:	ldrb	r0, [r3, #396]!	; 0x18c
   3b348:	ldrb	r1, [r4, #396]!	; 0x18c
   3b34c:	ldr	r2, [pc, #172]	; 3b400 <kill_client_serv_butone+0x110>
   3b350:	add	r2, pc, r2
   3b354:	cmp	r1, #0
   3b358:	mov	r1, r4
   3b35c:	subeq	r1, r1, #308	; 0x134
   3b360:	stm	sp, {r1, r2}
   3b364:	cmp	r0, #0
   3b368:	subeq	r3, r3, #308	; 0x134
   3b36c:	add	r1, sp, #8
   3b370:	ldr	r2, [pc, #140]	; 3b404 <kill_client_serv_butone+0x114>
   3b374:	add	r2, pc, r2
   3b378:	mov	r0, r6
   3b37c:	bl	39c30 <linebuf_put_msgf>
   3b380:	ldr	r0, [pc, #128]	; 3b408 <kill_client_serv_butone+0x118>
   3b384:	ldr	r0, [pc, r0]
   3b388:	ldr	r7, [r0]
   3b38c:	cmp	r7, #0
   3b390:	beq	3b3e4 <kill_client_serv_butone+0xf4>
   3b394:	add	r6, sp, #28
   3b398:	ldr	r0, [r7]
   3b39c:	ldr	r7, [r7, #8]
   3b3a0:	cmp	r5, #0
   3b3a4:	beq	3b3b4 <kill_client_serv_butone+0xc4>
   3b3a8:	ldr	r1, [r5, #36]	; 0x24
   3b3ac:	cmp	r0, r1
   3b3b0:	beq	3b3c8 <kill_client_serv_butone+0xd8>
   3b3b4:	mov	r1, r6
   3b3b8:	bl	39030 <_send_linebuf>
   3b3bc:	cmp	r7, #0
   3b3c0:	bne	3b398 <kill_client_serv_butone+0xa8>
   3b3c4:	b	3b3e4 <kill_client_serv_butone+0xf4>
   3b3c8:	ldrb	r1, [r0, #396]	; 0x18c
   3b3cc:	cmp	r1, #0
   3b3d0:	ldrbne	r1, [r4]
   3b3d4:	cmpne	r1, #0
   3b3d8:	bne	3b3b4 <kill_client_serv_butone+0xc4>
   3b3dc:	cmp	r7, #0
   3b3e0:	bne	3b398 <kill_client_serv_butone+0xa8>
   3b3e4:	add	r0, sp, #28
   3b3e8:	bl	e00c <rb_linebuf_donebuf@plt>
   3b3ec:	sub	sp, fp, #16
   3b3f0:	pop	{r4, r5, r6, r7, fp, lr}
   3b3f4:	add	sp, sp, #4
   3b3f8:	bx	lr
   3b3fc:	.word	0x0001f818
   3b400:	.word	0x00030a14
   3b404:	.word	0x0000c074
   3b408:	.word	0x0001f64c

0003b40c <msgbuf_init>:
   3b40c:	mov	r1, #0
   3b410:	mov	r2, #264	; 0x108
   3b414:	b	df28 <memset@plt>

0003b418 <construct_snobuf>:
   3b418:	ldr	r1, [pc, #64]	; 3b460 <construct_snobuf+0x48>
   3b41c:	add	r1, pc, r1
   3b420:	mov	r2, #43	; 0x2b
   3b424:	strb	r2, [r1], #1
   3b428:	mov	r2, #0
   3b42c:	ldr	ip, [pc, #48]	; 3b464 <construct_snobuf+0x4c>
   3b430:	ldr	ip, [pc, ip]
   3b434:	ldr	r3, [ip, r2, lsl #2]
   3b438:	tst	r3, r0
   3b43c:	strbne	r2, [r1], #1
   3b440:	add	r2, r2, #1
   3b444:	cmp	r2, #128	; 0x80
   3b448:	bne	3b434 <construct_snobuf+0x1c>
   3b44c:	mov	r0, #0
   3b450:	strb	r0, [r1]
   3b454:	ldr	r0, [pc, #12]	; 3b468 <construct_snobuf+0x50>
   3b458:	add	r0, pc, r0
   3b45c:	bx	lr
   3b460:	.word	0x00030b48
   3b464:	.word	0x0001f5f8
   3b468:	.word	0x00030b0c

0003b46c <parse_snobuf_to_mask>:
   3b46c:	cmp	r1, #0
   3b470:	beq	3b4d8 <parse_snobuf_to_mask+0x6c>
   3b474:	mov	r3, #1
   3b478:	ldr	ip, [pc, #92]	; 3b4dc <parse_snobuf_to_mask+0x70>
   3b47c:	ldr	ip, [pc, ip]
   3b480:	b	3b488 <parse_snobuf_to_mask+0x1c>
   3b484:	add	r1, r1, #1
   3b488:	ldrb	r2, [r1]
   3b48c:	cmp	r2, #43	; 0x2b
   3b490:	beq	3b4bc <parse_snobuf_to_mask+0x50>
   3b494:	cmp	r2, #45	; 0x2d
   3b498:	beq	3b4d0 <parse_snobuf_to_mask+0x64>
   3b49c:	cmp	r2, #0
   3b4a0:	bxeq	lr
   3b4a4:	cmp	r3, #2
   3b4a8:	beq	3b4c8 <parse_snobuf_to_mask+0x5c>
   3b4ac:	cmp	r3, #1
   3b4b0:	bne	3b484 <parse_snobuf_to_mask+0x18>
   3b4b4:	ldr	r2, [ip, r2, lsl #2]
   3b4b8:	orr	r0, r2, r0
   3b4bc:	mov	r3, #1
   3b4c0:	add	r1, r1, #1
   3b4c4:	b	3b488 <parse_snobuf_to_mask+0x1c>
   3b4c8:	ldr	r2, [ip, r2, lsl #2]
   3b4cc:	bic	r0, r0, r2
   3b4d0:	mov	r3, #2
   3b4d4:	b	3b484 <parse_snobuf_to_mask+0x18>
   3b4d8:	bx	lr
   3b4dc:	.word	0x0001f5ac

0003b4e0 <find_snomask_slot>:
   3b4e0:	mov	r0, #0
   3b4e4:	ldr	r2, [pc, #48]	; 3b51c <find_snomask_slot+0x3c>
   3b4e8:	ldr	r2, [pc, r2]
   3b4ec:	mov	r1, #0
   3b4f0:	ldr	r3, [r2, r0, lsl #2]
   3b4f4:	orr	r1, r3, r1
   3b4f8:	add	r0, r0, #1
   3b4fc:	cmp	r0, #128	; 0x80
   3b500:	bne	3b4f0 <find_snomask_slot+0x10>
   3b504:	mov	r2, #1
   3b508:	mov	r0, r2
   3b50c:	lsl	r2, r2, #1
   3b510:	tst	r0, r1
   3b514:	bne	3b508 <find_snomask_slot+0x28>
   3b518:	bx	lr
   3b51c:	.word	0x0001f540

0003b520 <restart_ssld>:
   3b520:	push	{r4, r5, r6, r7, fp, lr}
   3b524:	add	fp, sp, #16
   3b528:	ldr	r5, [pc, #184]	; 3b5e8 <restart_ssld+0xc8>
   3b52c:	ldr	r5, [pc, r5]
   3b530:	cmp	r5, #0
   3b534:	beq	3b5ac <restart_ssld+0x8c>
   3b538:	mov	r6, #1
   3b53c:	ldr	r7, [pc, #168]	; 3b5ec <restart_ssld+0xcc>
   3b540:	add	r7, pc, r7
   3b544:	ldr	r4, [r5]
   3b548:	ldr	r5, [r5, #8]
   3b54c:	ldrb	r0, [r4, #53]	; 0x35
   3b550:	cmp	r0, #0
   3b554:	bne	3b584 <restart_ssld+0x64>
   3b558:	ldrb	r0, [r4, #52]	; 0x34
   3b55c:	cmp	r0, #0
   3b560:	bne	3b584 <restart_ssld+0x64>
   3b564:	strb	r6, [r4, #52]	; 0x34
   3b568:	ldr	r0, [pc, #128]	; 3b5f0 <restart_ssld+0xd0>
   3b56c:	ldr	r0, [pc, r0]
   3b570:	sub	r0, r0, #1
   3b574:	str	r0, [r7]
   3b578:	ldr	r0, [r4, #12]
   3b57c:	cmp	r0, #0
   3b580:	beq	3b590 <restart_ssld+0x70>
   3b584:	cmp	r5, #0
   3b588:	bne	3b544 <restart_ssld+0x24>
   3b58c:	b	3b5ac <restart_ssld+0x8c>
   3b590:	ldr	r0, [r4, #24]
   3b594:	mov	r1, #9
   3b598:	bl	d478 <rb_kill@plt>
   3b59c:	mov	r0, r4
   3b5a0:	bl	3b604 <free_ssl_daemon>
   3b5a4:	cmp	r5, #0
   3b5a8:	bne	3b544 <restart_ssld+0x24>
   3b5ac:	ldr	r0, [pc, #64]	; 3b5f4 <restart_ssld+0xd4>
   3b5b0:	add	r0, pc, r0
   3b5b4:	mov	r1, #0
   3b5b8:	str	r1, [r0]
   3b5bc:	ldr	r0, [pc, #52]	; 3b5f8 <restart_ssld+0xd8>
   3b5c0:	add	r0, pc, r0
   3b5c4:	str	r1, [r0]
   3b5c8:	ldr	r0, [pc, #44]	; 3b5fc <restart_ssld+0xdc>
   3b5cc:	add	r0, pc, r0
   3b5d0:	strb	r1, [r0]
   3b5d4:	ldr	r0, [pc, #36]	; 3b600 <restart_ssld+0xe0>
   3b5d8:	ldr	r0, [pc, r0]
   3b5dc:	ldr	r0, [r0, #300]	; 0x12c
   3b5e0:	pop	{r4, r5, r6, r7, fp, lr}
   3b5e4:	b	3b70c <start_ssldaemon>
   3b5e8:	.word	0x00030c38
   3b5ec:	.word	0x00030c30
   3b5f0:	.word	0x00030c04
   3b5f4:	.word	0x00030bc8
   3b5f8:	.word	0x00030bb4
   3b5fc:	.word	0x00030bb0
   3b600:	.word	0x0001f378

0003b604 <free_ssl_daemon>:
   3b604:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b608:	add	fp, sp, #24
   3b60c:	mov	r8, r0
   3b610:	ldr	r0, [r0, #12]
   3b614:	cmp	r0, #0
   3b618:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b61c:	ldr	r6, [r8, #28]
   3b620:	cmp	r6, #0
   3b624:	bne	3b648 <free_ssl_daemon+0x44>
   3b628:	b	3b67c <free_ssl_daemon+0x78>
   3b62c:	ldr	r0, [r5, #12]
   3b630:	bl	3c348 <rb_free>
   3b634:	mov	r0, r5
   3b638:	bl	3c348 <rb_free>
   3b63c:	ldr	r6, [r6, #8]
   3b640:	cmp	r6, #0
   3b644:	beq	3b67c <free_ssl_daemon+0x78>
   3b648:	ldr	r5, [r6]
   3b64c:	ldr	r0, [r5, #36]	; 0x24
   3b650:	cmp	r0, #1
   3b654:	blt	3b62c <free_ssl_daemon+0x28>
   3b658:	add	r7, r5, #20
   3b65c:	mov	r4, #0
   3b660:	ldr	r0, [r7, r4, lsl #2]
   3b664:	bl	db5c <rb_close@plt>
   3b668:	add	r4, r4, #1
   3b66c:	ldr	r0, [r5, #36]	; 0x24
   3b670:	cmp	r4, r0
   3b674:	blt	3b660 <free_ssl_daemon+0x5c>
   3b678:	b	3b62c <free_ssl_daemon+0x28>
   3b67c:	ldr	r6, [r8, #40]	; 0x28
   3b680:	cmp	r6, #0
   3b684:	bne	3b6a8 <free_ssl_daemon+0xa4>
   3b688:	b	3b6dc <free_ssl_daemon+0xd8>
   3b68c:	ldr	r0, [r5, #12]
   3b690:	bl	3c348 <rb_free>
   3b694:	mov	r0, r5
   3b698:	bl	3c348 <rb_free>
   3b69c:	ldr	r6, [r6, #8]
   3b6a0:	cmp	r6, #0
   3b6a4:	beq	3b6dc <free_ssl_daemon+0xd8>
   3b6a8:	ldr	r5, [r6]
   3b6ac:	ldr	r0, [r5, #36]	; 0x24
   3b6b0:	cmp	r0, #1
   3b6b4:	blt	3b68c <free_ssl_daemon+0x88>
   3b6b8:	add	r7, r5, #20
   3b6bc:	mov	r4, #0
   3b6c0:	ldr	r0, [r7, r4, lsl #2]
   3b6c4:	bl	db5c <rb_close@plt>
   3b6c8:	add	r4, r4, #1
   3b6cc:	ldr	r0, [r5, #36]	; 0x24
   3b6d0:	cmp	r4, r0
   3b6d4:	blt	3b6c0 <free_ssl_daemon+0xbc>
   3b6d8:	b	3b68c <free_ssl_daemon+0x88>
   3b6dc:	ldr	r0, [r8, #16]
   3b6e0:	bl	db5c <rb_close@plt>
   3b6e4:	ldr	r0, [r8, #20]
   3b6e8:	bl	db5c <rb_close@plt>
   3b6ec:	ldr	r1, [pc, #20]	; 3b708 <free_ssl_daemon+0x104>
   3b6f0:	add	r1, pc, r1
   3b6f4:	mov	r0, r8
   3b6f8:	bl	3c538 <rb_dlinkDelete>
   3b6fc:	mov	r0, r8
   3b700:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b704:	b	3c348 <rb_free>
   3b708:	.word	0x00030a74

0003b70c <start_ssldaemon>:
   3b70c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b710:	add	fp, sp, #28
   3b714:	sub	sp, sp, #188	; 0xbc
   3b718:	sub	sp, sp, #4096	; 0x1000
   3b71c:	mov	r8, r0
   3b720:	ldr	r6, [pc, #972]	; 3baf4 <start_ssldaemon+0x3e8>
   3b724:	add	r6, pc, r6
   3b728:	ldrb	r0, [r6]
   3b72c:	mov	r4, #0
   3b730:	cmp	r0, #0
   3b734:	bne	3bae8 <start_ssldaemon+0x3dc>
   3b738:	ldr	r0, [pc, #952]	; 3baf8 <start_ssldaemon+0x3ec>
   3b73c:	ldr	r0, [pc, r0]
   3b740:	cmp	r0, #21
   3b744:	blt	3b7b0 <start_ssldaemon+0xa4>
   3b748:	bl	d07c <rb_current_time@plt>
   3b74c:	ldr	r1, [pc, #936]	; 3bafc <start_ssldaemon+0x3f0>
   3b750:	ldr	r1, [pc, r1]
   3b754:	sub	r0, r0, r1
   3b758:	cmp	r0, #4
   3b75c:	bgt	3b7b0 <start_ssldaemon+0xa4>
   3b760:	mov	r4, #0
   3b764:	ldr	r5, [pc, #916]	; 3bb00 <start_ssldaemon+0x3f4>
   3b768:	add	r5, pc, r5
   3b76c:	mov	r0, #0
   3b770:	mov	r1, r5
   3b774:	bl	e0b4 <ilog@plt>
   3b778:	mov	r0, #256	; 0x100
   3b77c:	mov	r1, #0
   3b780:	mov	r2, r5
   3b784:	bl	d640 <sendto_realops_snomask@plt>
   3b788:	ldr	r0, [pc, #884]	; 3bb04 <start_ssldaemon+0x3f8>
   3b78c:	add	r0, pc, r0
   3b790:	ldr	r1, [pc, #880]	; 3bb08 <start_ssldaemon+0x3fc>
   3b794:	add	r1, pc, r1
   3b798:	mov	r2, #0
   3b79c:	mov	r3, #60	; 0x3c
   3b7a0:	bl	d0e8 <rb_event_add@plt>
   3b7a4:	mov	r0, #1
   3b7a8:	strb	r0, [r6]
   3b7ac:	b	3bae8 <start_ssldaemon+0x3dc>
   3b7b0:	ldr	r0, [pc, #852]	; 3bb0c <start_ssldaemon+0x400>
   3b7b4:	ldr	r0, [pc, r0]
   3b7b8:	add	r0, r0, #1
   3b7bc:	ldr	r1, [pc, #844]	; 3bb10 <start_ssldaemon+0x404>
   3b7c0:	add	r1, pc, r1
   3b7c4:	str	r0, [r1]
   3b7c8:	bl	d07c <rb_current_time@plt>
   3b7cc:	ldr	r1, [pc, #832]	; 3bb14 <start_ssldaemon+0x408>
   3b7d0:	add	r1, pc, r1
   3b7d4:	str	r0, [r1]
   3b7d8:	ldr	r0, [pc, #824]	; 3bb18 <start_ssldaemon+0x40c>
   3b7dc:	ldr	r0, [pc, r0]
   3b7e0:	cmp	r0, #0
   3b7e4:	bne	3b88c <start_ssldaemon+0x180>
   3b7e8:	ldr	r5, [pc, #812]	; 3bb1c <start_ssldaemon+0x410>
   3b7ec:	ldr	r5, [pc, r5]
   3b7f0:	ldr	r3, [r5, #60]	; 0x3c
   3b7f4:	ldr	r6, [pc, #804]	; 3bb20 <start_ssldaemon+0x414>
   3b7f8:	add	r6, pc, r6
   3b7fc:	mov	r7, #47	; 0x2f
   3b800:	str	r7, [sp]
   3b804:	str	r6, [sp, #4]
   3b808:	add	r4, sp, #167	; 0xa7
   3b80c:	ldr	r2, [pc, #784]	; 3bb24 <start_ssldaemon+0x418>
   3b810:	add	r2, pc, r2
   3b814:	mov	r0, r4
   3b818:	movw	r1, #4097	; 0x1001
   3b81c:	bl	de74 <snprintf@plt>
   3b820:	mov	r0, r4
   3b824:	mov	r1, #1
   3b828:	bl	e09c <access@plt>
   3b82c:	cmn	r0, #1
   3b830:	bne	3b878 <start_ssldaemon+0x16c>
   3b834:	ldr	r9, [pc, #748]	; 3bb28 <start_ssldaemon+0x41c>
   3b838:	ldr	r9, [pc, r9]
   3b83c:	ldr	r3, [r9]
   3b840:	str	r7, [sp]
   3b844:	str	r7, [sp, #4]
   3b848:	str	r6, [sp, #8]
   3b84c:	add	r4, sp, #167	; 0xa7
   3b850:	ldr	r2, [pc, #724]	; 3bb2c <start_ssldaemon+0x420>
   3b854:	add	r2, pc, r2
   3b858:	mov	r0, r4
   3b85c:	movw	r1, #4097	; 0x1001
   3b860:	bl	de74 <snprintf@plt>
   3b864:	mov	r0, r4
   3b868:	mov	r1, #1
   3b86c:	bl	e09c <access@plt>
   3b870:	cmn	r0, #1
   3b874:	beq	3bac0 <start_ssldaemon+0x3b4>
   3b878:	add	r0, sp, #167	; 0xa7
   3b87c:	bl	3bc00 <rb_strdup>
   3b880:	ldr	r1, [pc, #688]	; 3bb38 <start_ssldaemon+0x42c>
   3b884:	add	r1, pc, r1
   3b888:	str	r0, [r1]
   3b88c:	add	r4, sp, #24
   3b890:	ldr	r1, [pc, #676]	; 3bb3c <start_ssldaemon+0x430>
   3b894:	add	r1, pc, r1
   3b898:	mov	r0, r4
   3b89c:	mov	r2, #128	; 0x80
   3b8a0:	bl	e510 <rb_strlcpy@plt>
   3b8a4:	str	r4, [sp, #152]	; 0x98
   3b8a8:	mov	r4, #0
   3b8ac:	str	r4, [sp, #156]	; 0x9c
   3b8b0:	cmp	r8, #1
   3b8b4:	blt	3bae8 <start_ssldaemon+0x3dc>
   3b8b8:	mov	r4, #0
   3b8bc:	add	r7, sp, #161	; 0xa1
   3b8c0:	ldr	r6, [pc, #632]	; 3bb40 <start_ssldaemon+0x434>
   3b8c4:	add	r6, pc, r6
   3b8c8:	add	sl, sp, #14
   3b8cc:	sub	r0, fp, #40	; 0x28
   3b8d0:	str	r0, [sp]
   3b8d4:	ldr	r0, [pc, #616]	; 3bb44 <start_ssldaemon+0x438>
   3b8d8:	add	r0, pc, r0
   3b8dc:	str	r0, [sp, #4]
   3b8e0:	mov	r0, #1
   3b8e4:	mov	r1, #2
   3b8e8:	mov	r2, #0
   3b8ec:	sub	r3, fp, #36	; 0x24
   3b8f0:	bl	d514 <rb_socketpair@plt>
   3b8f4:	cmn	r0, #1
   3b8f8:	beq	3ba3c <start_ssldaemon+0x330>
   3b8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b900:	mov	r1, #16384	; 0x4000
   3b904:	bl	e210 <rb_set_buffers@plt>
   3b908:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b90c:	mov	r1, #16384	; 0x4000
   3b910:	bl	e210 <rb_set_buffers@plt>
   3b914:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b918:	bl	db98 <rb_get_fd@plt>
   3b91c:	mov	r3, r0
   3b920:	mov	r0, r7
   3b924:	mov	r1, #6
   3b928:	mov	r2, r6
   3b92c:	bl	de74 <snprintf@plt>
   3b930:	ldr	r0, [pc, #532]	; 3bb4c <start_ssldaemon+0x440>
   3b934:	add	r0, pc, r0
   3b938:	mov	r1, r7
   3b93c:	mov	r2, #1
   3b940:	bl	cf68 <rb_setenv@plt>
   3b944:	sub	r0, fp, #44	; 0x2c
   3b948:	sub	r1, fp, #48	; 0x30
   3b94c:	ldr	r2, [pc, #508]	; 3bb50 <start_ssldaemon+0x444>
   3b950:	add	r2, pc, r2
   3b954:	bl	e2a0 <rb_pipe@plt>
   3b958:	cmn	r0, #1
   3b95c:	beq	3ba58 <start_ssldaemon+0x34c>
   3b960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b964:	bl	db98 <rb_get_fd@plt>
   3b968:	mov	r3, r0
   3b96c:	mov	r0, r7
   3b970:	mov	r1, #6
   3b974:	mov	r2, r6
   3b978:	bl	de74 <snprintf@plt>
   3b97c:	ldr	r0, [pc, #468]	; 3bb58 <start_ssldaemon+0x44c>
   3b980:	add	r0, pc, r0
   3b984:	mov	r1, r7
   3b988:	mov	r2, #1
   3b98c:	bl	cf68 <rb_setenv@plt>
   3b990:	bl	dc28 <getpid@plt>
   3b994:	mov	r3, r0
   3b998:	mov	r0, sl
   3b99c:	mov	r1, #10
   3b9a0:	mov	r2, r6
   3b9a4:	bl	de74 <snprintf@plt>
   3b9a8:	ldr	r0, [pc, #428]	; 3bb5c <start_ssldaemon+0x450>
   3b9ac:	add	r0, pc, r0
   3b9b0:	mov	r1, sl
   3b9b4:	mov	r2, #1
   3b9b8:	bl	cf68 <rb_setenv@plt>
   3b9bc:	ldr	r0, [pc, #412]	; 3bb60 <start_ssldaemon+0x454>
   3b9c0:	ldr	r0, [pc, r0]
   3b9c4:	add	r1, sp, #152	; 0x98
   3b9c8:	bl	e294 <rb_spawn_process@plt>
   3b9cc:	cmn	r0, #1
   3b9d0:	beq	3ba7c <start_ssldaemon+0x370>
   3b9d4:	mov	r5, r0
   3b9d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b9dc:	bl	db5c <rb_close@plt>
   3b9e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b9e4:	bl	db5c <rb_close@plt>
   3b9e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3b9ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b9f0:	mov	r2, r5
   3b9f4:	bl	3bc38 <allocate_ssl_daemon>
   3b9f8:	mov	r9, r0
   3b9fc:	add	r4, r4, #1
   3ba00:	ldr	r0, [pc, #352]	; 3bb68 <start_ssldaemon+0x45c>
   3ba04:	ldr	r0, [pc, r0]
   3ba08:	ldrb	r0, [r0]
   3ba0c:	cmp	r0, #0
   3ba10:	movne	r0, r9
   3ba14:	blne	3bcac <ssld_update_config_one>
   3ba18:	ldr	r0, [r9, #16]
   3ba1c:	mov	r1, r9
   3ba20:	bl	3bcc8 <ssl_read_ctl>
   3ba24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3ba28:	mov	r1, r9
   3ba2c:	bl	3bde4 <ssl_do_pipe>
   3ba30:	cmp	r4, r8
   3ba34:	blt	3b8cc <start_ssldaemon+0x1c0>
   3ba38:	b	3bae8 <start_ssldaemon+0x3dc>
   3ba3c:	bl	de38 <__errno_location@plt>
   3ba40:	ldr	r0, [r0]
   3ba44:	bl	dacc <strerror@plt>
   3ba48:	mov	r2, r0
   3ba4c:	ldr	r1, [pc, #244]	; 3bb48 <start_ssldaemon+0x43c>
   3ba50:	add	r1, pc, r1
   3ba54:	b	3ba70 <start_ssldaemon+0x364>
   3ba58:	bl	de38 <__errno_location@plt>
   3ba5c:	ldr	r0, [r0]
   3ba60:	bl	dacc <strerror@plt>
   3ba64:	mov	r2, r0
   3ba68:	ldr	r1, [pc, #228]	; 3bb54 <start_ssldaemon+0x448>
   3ba6c:	add	r1, pc, r1
   3ba70:	mov	r0, #0
   3ba74:	bl	e0b4 <ilog@plt>
   3ba78:	b	3bae8 <start_ssldaemon+0x3dc>
   3ba7c:	bl	de38 <__errno_location@plt>
   3ba80:	ldr	r0, [r0]
   3ba84:	bl	dacc <strerror@plt>
   3ba88:	mov	r2, r0
   3ba8c:	ldr	r1, [pc, #208]	; 3bb64 <start_ssldaemon+0x458>
   3ba90:	add	r1, pc, r1
   3ba94:	mov	r0, #0
   3ba98:	bl	e0b4 <ilog@plt>
   3ba9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3baa0:	bl	db5c <rb_close@plt>
   3baa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3baa8:	bl	db5c <rb_close@plt>
   3baac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3bab0:	bl	db5c <rb_close@plt>
   3bab4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3bab8:	bl	db5c <rb_close@plt>
   3babc:	b	3bae8 <start_ssldaemon+0x3dc>
   3bac0:	ldr	r3, [r5, #60]	; 0x3c
   3bac4:	ldr	r0, [r9]
   3bac8:	str	r0, [sp]
   3bacc:	mov	r4, #0
   3bad0:	ldr	r1, [pc, #88]	; 3bb30 <start_ssldaemon+0x424>
   3bad4:	add	r1, pc, r1
   3bad8:	ldr	r2, [pc, #84]	; 3bb34 <start_ssldaemon+0x428>
   3badc:	add	r2, pc, r2
   3bae0:	mov	r0, #0
   3bae4:	bl	e0b4 <ilog@plt>
   3bae8:	mov	r0, r4
   3baec:	sub	sp, fp, #28
   3baf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3baf4:	.word	0x00030a58
   3baf8:	.word	0x00030a38
   3bafc:	.word	0x00030a28
   3bb00:	.word	0x0000bd08
   3bb04:	.word	0x0000bd22
   3bb08:	.word	0x000003d0
   3bb0c:	.word	0x000309c0
   3bb10:	.word	0x000309b4
   3bb14:	.word	0x000309a8
   3bb18:	.word	0x000309a4
   3bb1c:	.word	0x0001f25c
   3bb20:	.word	0x0000a00d
   3bb24:	.word	0x0000bcb1
   3bb28:	.word	0x0001f344
   3bb2c:	.word	0x0000bc78
   3bb30:	.word	0x0000ba08
   3bb34:	.word	0x00009d29
   3bb38:	.word	0x000308fc
   3bb3c:	.word	0x0000bc71
   3bb40:	.word	0x00005010
   3bb44:	.word	0x0000bc3f
   3bb48:	.word	0x0000bae5
   3bb4c:	.word	0x0000bc32
   3bb50:	.word	0x0000bc1d
   3bb54:	.word	0x0000bb0e
   3bb58:	.word	0x0000bc25
   3bb5c:	.word	0x0000bc02
   3bb60:	.word	0x000307c0
   3bb64:	.word	0x0000bb27
   3bb68:	.word	0x0001ef5c

0003bb6c <restart_ssld_event>:
   3bb6c:	push	{r4, r5, fp, lr}
   3bb70:	add	fp, sp, #8
   3bb74:	ldr	r0, [pc, #108]	; 3bbe8 <restart_ssld_event+0x7c>
   3bb78:	add	r0, pc, r0
   3bb7c:	mov	r1, #0
   3bb80:	str	r1, [r0]
   3bb84:	ldr	r0, [pc, #96]	; 3bbec <restart_ssld_event+0x80>
   3bb88:	add	r0, pc, r0
   3bb8c:	str	r1, [r0]
   3bb90:	ldr	r0, [pc, #88]	; 3bbf0 <restart_ssld_event+0x84>
   3bb94:	add	r0, pc, r0
   3bb98:	strb	r1, [r0]
   3bb9c:	ldr	r0, [pc, #80]	; 3bbf4 <restart_ssld_event+0x88>
   3bba0:	ldr	r0, [pc, r0]
   3bba4:	ldr	r5, [r0, #300]	; 0x12c
   3bba8:	bl	deb0 <get_ssld_count@plt>
   3bbac:	cmp	r5, r0
   3bbb0:	pople	{r4, r5, fp, pc}
   3bbb4:	mov	r4, r0
   3bbb8:	ldr	r1, [pc, #56]	; 3bbf8 <restart_ssld_event+0x8c>
   3bbbc:	add	r1, pc, r1
   3bbc0:	mov	r0, #0
   3bbc4:	bl	e0b4 <ilog@plt>
   3bbc8:	ldr	r2, [pc, #44]	; 3bbfc <restart_ssld_event+0x90>
   3bbcc:	add	r2, pc, r2
   3bbd0:	mov	r0, #256	; 0x100
   3bbd4:	mov	r1, #0
   3bbd8:	bl	d640 <sendto_realops_snomask@plt>
   3bbdc:	sub	r0, r5, r4
   3bbe0:	pop	{r4, r5, fp, lr}
   3bbe4:	b	3b70c <start_ssldaemon>
   3bbe8:	.word	0x00030600
   3bbec:	.word	0x000305ec
   3bbf0:	.word	0x000305e8
   3bbf4:	.word	0x0001edb0
   3bbf8:	.word	0x0000bb30
   3bbfc:	.word	0x0000bb45

0003bc00 <rb_strdup>:
   3bc00:	push	{r4, r5, fp, lr}
   3bc04:	add	fp, sp, #8
   3bc08:	mov	r4, r0
   3bc0c:	bl	dc94 <strlen@plt>
   3bc10:	add	r0, r0, #1
   3bc14:	bl	da90 <malloc@plt>
   3bc18:	cmp	r0, #0
   3bc1c:	beq	3bc34 <rb_strdup+0x34>
   3bc20:	mov	r5, r0
   3bc24:	mov	r1, r4
   3bc28:	bl	d928 <strcpy@plt>
   3bc2c:	mov	r0, r5
   3bc30:	pop	{r4, r5, fp, pc}
   3bc34:	bl	d448 <rb_outofmemory@plt>

0003bc38 <allocate_ssl_daemon>:
   3bc38:	push	{r4, r5, r6, r7, fp, lr}
   3bc3c:	add	fp, sp, #16
   3bc40:	mov	r4, #0
   3bc44:	cmp	r0, #0
   3bc48:	beq	3bc9c <allocate_ssl_daemon+0x64>
   3bc4c:	mov	r5, r2
   3bc50:	cmp	r2, #0
   3bc54:	blt	3bc9c <allocate_ssl_daemon+0x64>
   3bc58:	mov	r6, r1
   3bc5c:	mov	r7, r0
   3bc60:	mov	r0, #312	; 0x138
   3bc64:	bl	3c328 <rb_malloc>
   3bc68:	mov	r4, r0
   3bc6c:	str	r7, [r0, #16]
   3bc70:	str	r6, [r0, #20]
   3bc74:	str	r5, [r0, #24]
   3bc78:	ldr	r0, [pc, #36]	; 3bca4 <allocate_ssl_daemon+0x6c>
   3bc7c:	ldr	r0, [pc, r0]
   3bc80:	add	r0, r0, #1
   3bc84:	ldr	r1, [pc, #28]	; 3bca8 <allocate_ssl_daemon+0x70>
   3bc88:	add	r1, pc, r1
   3bc8c:	str	r0, [r1]
   3bc90:	mov	r0, r4
   3bc94:	mov	r1, r4
   3bc98:	bl	3c5f0 <rb_dlinkAdd>
   3bc9c:	mov	r0, r4
   3bca0:	pop	{r4, r5, r6, r7, fp, pc}
   3bca4:	.word	0x000304f4
   3bca8:	.word	0x000304e8

0003bcac <ssld_update_config_one>:
   3bcac:	push	{r4, sl, fp, lr}
   3bcb0:	add	fp, sp, #8
   3bcb4:	mov	r4, r0
   3bcb8:	bl	3d140 <send_certfp_method>
   3bcbc:	mov	r0, r4
   3bcc0:	pop	{r4, sl, fp, lr}
   3bcc4:	b	3d198 <send_new_ssl_certs_one>

0003bcc8 <ssl_read_ctl>:
   3bcc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3bccc:	add	fp, sp, #24
   3bcd0:	sub	sp, sp, #8
   3bcd4:	ldrb	r0, [r1, #53]	; 0x35
   3bcd8:	cmp	r0, #0
   3bcdc:	subne	sp, fp, #24
   3bce0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3bce4:	mov	r4, r1
   3bce8:	mov	r0, #40	; 0x28
   3bcec:	bl	3c328 <rb_malloc>
   3bcf0:	mov	r5, r0
   3bcf4:	mov	r0, #1024	; 0x400
   3bcf8:	bl	3c328 <rb_malloc>
   3bcfc:	mov	r1, r0
   3bd00:	str	r0, [r5, #12]
   3bd04:	ldr	r0, [r4, #16]
   3bd08:	mov	r8, #4
   3bd0c:	str	r8, [sp]
   3bd10:	add	r3, r5, #20
   3bd14:	mov	r2, #1024	; 0x400
   3bd18:	bl	d814 <rb_recv_fd_buf@plt>
   3bd1c:	str	r0, [r5, #16]
   3bd20:	cmp	r0, #1
   3bd24:	blt	3bd78 <ssl_read_ctl+0xb0>
   3bd28:	add	r6, r4, #28
   3bd2c:	mov	r0, r5
   3bd30:	mov	r1, r5
   3bd34:	mov	r2, r6
   3bd38:	bl	3c754 <rb_dlinkAddTail>
   3bd3c:	mov	r0, #40	; 0x28
   3bd40:	bl	3c328 <rb_malloc>
   3bd44:	mov	r5, r0
   3bd48:	mov	r0, #1024	; 0x400
   3bd4c:	bl	3c328 <rb_malloc>
   3bd50:	mov	r1, r0
   3bd54:	str	r0, [r5, #12]
   3bd58:	ldr	r0, [r4, #16]
   3bd5c:	str	r8, [sp]
   3bd60:	add	r3, r5, #20
   3bd64:	mov	r2, #1024	; 0x400
   3bd68:	bl	d814 <rb_recv_fd_buf@plt>
   3bd6c:	str	r0, [r5, #16]
   3bd70:	cmp	r0, #0
   3bd74:	bgt	3bd2c <ssl_read_ctl+0x64>
   3bd78:	mov	r7, r0
   3bd7c:	ldr	r0, [r5, #12]
   3bd80:	bl	3c348 <rb_free>
   3bd84:	mov	r0, r5
   3bd88:	bl	3c348 <rb_free>
   3bd8c:	cmp	r7, #0
   3bd90:	beq	3bdd0 <ssl_read_ctl+0x108>
   3bd94:	bl	de38 <__errno_location@plt>
   3bd98:	ldr	r0, [r0]
   3bd9c:	bl	dac0 <rb_ignore_errno@plt>
   3bda0:	cmp	r0, #0
   3bda4:	beq	3bdd0 <ssl_read_ctl+0x108>
   3bda8:	mov	r0, r4
   3bdac:	bl	3c84c <ssl_process_cmd_recv>
   3bdb0:	ldr	r0, [r4, #16]
   3bdb4:	ldr	r2, [pc, #36]	; 3bde0 <ssl_read_ctl+0x118>
   3bdb8:	add	r2, pc, r2
   3bdbc:	mov	r1, #1
   3bdc0:	mov	r3, r4
   3bdc4:	sub	sp, fp, #24
   3bdc8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3bdcc:	b	d304 <rb_setselect@plt>
   3bdd0:	mov	r0, r4
   3bdd4:	sub	sp, fp, #24
   3bdd8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3bddc:	b	3c6c4 <ssl_dead>
   3bde0:	.word	0xffffff08

0003bde4 <ssl_do_pipe>:
   3bde4:	push	{r4, r5, fp, lr}
   3bde8:	add	fp, sp, #8
   3bdec:	mov	r4, r1
   3bdf0:	mov	r5, r0
   3bdf4:	ldr	r1, [pc, #84]	; 3be50 <ssl_do_pipe+0x6c>
   3bdf8:	add	r1, pc, r1
   3bdfc:	mov	r2, #1
   3be00:	bl	e738 <rb_write@plt>
   3be04:	cmp	r0, #0
   3be08:	beq	3be44 <ssl_do_pipe+0x60>
   3be0c:	cmn	r0, #1
   3be10:	bgt	3be28 <ssl_do_pipe+0x44>
   3be14:	bl	de38 <__errno_location@plt>
   3be18:	ldr	r0, [r0]
   3be1c:	bl	dac0 <rb_ignore_errno@plt>
   3be20:	cmp	r0, #0
   3be24:	beq	3be44 <ssl_do_pipe+0x60>
   3be28:	ldr	r2, [pc, #36]	; 3be54 <ssl_do_pipe+0x70>
   3be2c:	add	r2, pc, r2
   3be30:	mov	r0, r5
   3be34:	mov	r1, #1
   3be38:	mov	r3, r4
   3be3c:	pop	{r4, r5, fp, lr}
   3be40:	b	d304 <rb_setselect@plt>
   3be44:	mov	r0, r4
   3be48:	pop	{r4, r5, fp, lr}
   3be4c:	b	3c6c4 <ssl_dead>
   3be50:	.word	0x0000bc35
   3be54:	.word	0xffffffb0

0003be58 <ssld_update_config>:
   3be58:	push	{r4, sl, fp, lr}
   3be5c:	add	fp, sp, #8
   3be60:	ldr	r4, [pc, #48]	; 3be98 <ssld_update_config+0x40>
   3be64:	ldr	r4, [pc, r4]
   3be68:	b	3be70 <ssld_update_config+0x18>
   3be6c:	ldr	r4, [r4, #8]
   3be70:	cmp	r4, #0
   3be74:	popeq	{r4, sl, fp, pc}
   3be78:	ldr	r0, [r4]
   3be7c:	ldrb	r1, [r0, #53]	; 0x35
   3be80:	cmp	r1, #0
   3be84:	bne	3be6c <ssld_update_config+0x14>
   3be88:	ldrb	r1, [r0, #52]	; 0x34
   3be8c:	cmp	r1, #0
   3be90:	bleq	3bcac <ssld_update_config_one>
   3be94:	b	3be6c <ssld_update_config+0x14>
   3be98:	.word	0x00030300

0003be9c <start_ssld_accept>:
   3be9c:	push	{r4, sl, fp, lr}
   3bea0:	add	fp, sp, #8
   3bea4:	sub	sp, sp, #24
   3bea8:	str	r1, [sp, #20]
   3beac:	str	r0, [sp, #16]
   3beb0:	mov	r0, #65	; 0x41
   3beb4:	strb	r0, [sp, #11]
   3beb8:	add	r0, sp, #11
   3bebc:	add	r0, r0, #1
   3bec0:	mov	r1, r2
   3bec4:	bl	3bf0c <uint32_to_buf>
   3bec8:	bl	3bf14 <which_ssld>
   3becc:	mov	r4, r0
   3bed0:	cmp	r0, #0
   3bed4:	beq	3bf00 <start_ssld_accept+0x64>
   3bed8:	ldr	r0, [r4, #12]
   3bedc:	add	r0, r0, #1
   3bee0:	str	r0, [r4, #12]
   3bee4:	mov	r0, #5
   3bee8:	str	r0, [sp]
   3beec:	add	r1, sp, #16
   3bef0:	add	r3, sp, #11
   3bef4:	mov	r0, r4
   3bef8:	mov	r2, #2
   3befc:	bl	3bf78 <ssl_cmd_write_queue>
   3bf00:	mov	r0, r4
   3bf04:	sub	sp, fp, #8
   3bf08:	pop	{r4, sl, fp, pc}

0003bf0c <uint32_to_buf>:
   3bf0c:	str	r1, [r0]
   3bf10:	bx	lr

0003bf14 <which_ssld>:
   3bf14:	ldr	r1, [pc, #88]	; 3bf74 <which_ssld+0x60>
   3bf18:	ldr	r1, [pc, r1]
   3bf1c:	mov	r0, #0
   3bf20:	b	3bf28 <which_ssld+0x14>
   3bf24:	ldr	r1, [r1, #8]
   3bf28:	cmp	r1, #0
   3bf2c:	bxeq	lr
   3bf30:	ldr	r2, [r1]
   3bf34:	ldrb	r3, [r2, #53]	; 0x35
   3bf38:	cmp	r3, #0
   3bf3c:	bne	3bf24 <which_ssld+0x10>
   3bf40:	ldrb	r3, [r2, #52]	; 0x34
   3bf44:	cmp	r3, #0
   3bf48:	bne	3bf24 <which_ssld+0x10>
   3bf4c:	cmp	r0, #0
   3bf50:	beq	3bf68 <which_ssld+0x54>
   3bf54:	ldr	ip, [r0, #12]
   3bf58:	ldr	r3, [r2, #12]
   3bf5c:	cmp	r3, ip
   3bf60:	movlt	r0, r2
   3bf64:	b	3bf24 <which_ssld+0x10>
   3bf68:	mov	r0, r2
   3bf6c:	ldr	r1, [r1, #8]
   3bf70:	b	3bf28 <which_ssld+0x14>
   3bf74:	.word	0x0003024c

0003bf78 <ssl_cmd_write_queue>:
   3bf78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bf7c:	add	fp, sp, #24
   3bf80:	mov	r4, r0
   3bf84:	ldrb	r0, [r0, #53]	; 0x35
   3bf88:	cmp	r0, #0
   3bf8c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3bf90:	mov	r6, r3
   3bf94:	mov	r9, r2
   3bf98:	mov	r8, r1
   3bf9c:	ldr	r5, [fp, #8]
   3bfa0:	mov	r0, #40	; 0x28
   3bfa4:	bl	3c328 <rb_malloc>
   3bfa8:	mov	r7, r0
   3bfac:	mov	r0, r5
   3bfb0:	bl	3c328 <rb_malloc>
   3bfb4:	str	r0, [r7, #12]
   3bfb8:	mov	r1, r6
   3bfbc:	mov	r2, r5
   3bfc0:	bl	d40c <memcpy@plt>
   3bfc4:	str	r5, [r7, #16]
   3bfc8:	cmp	r9, #1
   3bfcc:	blt	3bff0 <ssl_cmd_write_queue+0x78>
   3bfd0:	rsb	r0, r9, #0
   3bfd4:	cmn	r0, #4
   3bfd8:	mvnls	r0, #3
   3bfdc:	mov	r1, #0
   3bfe0:	sub	r2, r1, r0, lsl #2
   3bfe4:	add	r0, r7, #20
   3bfe8:	mov	r1, r8
   3bfec:	bl	d40c <memcpy@plt>
   3bff0:	str	r9, [r7, #36]	; 0x24
   3bff4:	add	r2, r4, #40	; 0x28
   3bff8:	mov	r0, r7
   3bffc:	mov	r1, r7
   3c000:	bl	3c754 <rb_dlinkAddTail>
   3c004:	ldr	r0, [r4, #16]
   3c008:	mov	r1, r4
   3c00c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c010:	b	3d2f8 <ssl_write_ctl>

0003c014 <start_ssld_connect>:
   3c014:	push	{r4, sl, fp, lr}
   3c018:	add	fp, sp, #8
   3c01c:	sub	sp, sp, #24
   3c020:	str	r1, [sp, #20]
   3c024:	str	r0, [sp, #16]
   3c028:	mov	r0, #67	; 0x43
   3c02c:	strb	r0, [sp, #11]
   3c030:	add	r0, sp, #11
   3c034:	add	r0, r0, #1
   3c038:	mov	r1, r2
   3c03c:	bl	3bf0c <uint32_to_buf>
   3c040:	bl	3bf14 <which_ssld>
   3c044:	mov	r4, r0
   3c048:	cmp	r0, #0
   3c04c:	beq	3c078 <start_ssld_connect+0x64>
   3c050:	ldr	r0, [r4, #12]
   3c054:	add	r0, r0, #1
   3c058:	str	r0, [r4, #12]
   3c05c:	mov	r0, #5
   3c060:	str	r0, [sp]
   3c064:	add	r1, sp, #16
   3c068:	add	r3, sp, #11
   3c06c:	mov	r0, r4
   3c070:	mov	r2, #2
   3c074:	bl	3bf78 <ssl_cmd_write_queue>
   3c078:	mov	r0, r4
   3c07c:	sub	sp, fp, #8
   3c080:	pop	{r4, sl, fp, pc}

0003c084 <ssld_decrement_clicount>:
   3c084:	push	{r4, sl, fp, lr}
   3c088:	add	fp, sp, #8
   3c08c:	cmp	r0, #0
   3c090:	beq	3c0e0 <ssld_decrement_clicount+0x5c>
   3c094:	mov	r4, r0
   3c098:	ldr	r0, [r0, #12]
   3c09c:	subs	r0, r0, #1
   3c0a0:	str	r0, [r4, #12]
   3c0a4:	bne	3c0c8 <ssld_decrement_clicount+0x44>
   3c0a8:	ldrb	r0, [r4, #52]	; 0x34
   3c0ac:	cmp	r0, #0
   3c0b0:	beq	3c0c8 <ssld_decrement_clicount+0x44>
   3c0b4:	mov	r0, #1
   3c0b8:	strb	r0, [r4, #53]	; 0x35
   3c0bc:	ldr	r0, [r4, #24]
   3c0c0:	mov	r1, #9
   3c0c4:	bl	d478 <rb_kill@plt>
   3c0c8:	ldrb	r0, [r4, #53]	; 0x35
   3c0cc:	cmp	r0, #0
   3c0d0:	popeq	{r4, sl, fp, pc}
   3c0d4:	ldr	r0, [r4, #12]
   3c0d8:	cmp	r0, #0
   3c0dc:	beq	3c0e4 <ssld_decrement_clicount+0x60>
   3c0e0:	pop	{r4, sl, fp, pc}
   3c0e4:	mov	r0, r4
   3c0e8:	pop	{r4, sl, fp, lr}
   3c0ec:	b	3b604 <free_ssl_daemon>

0003c0f0 <start_zlib_session>:
   3c0f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c0f4:	add	fp, sp, #28
   3c0f8:	sub	sp, sp, #28
   3c0fc:	mov	r4, r0
   3c100:	ldr	r0, [r0, #432]	; 0x1b0
   3c104:	mov	r1, #0
   3c108:	str	r1, [r0, #464]	; 0x1d0
   3c10c:	ldrh	r7, [r0, #92]	; 0x5c
   3c110:	add	sl, r7, #6
   3c114:	cmp	sl, #16384	; 0x4000
   3c118:	bls	3c174 <start_zlib_session+0x84>
   3c11c:	mov	r0, #16384	; 0x4000
   3c120:	str	r0, [sp]
   3c124:	ldr	r5, [pc, #476]	; 3c308 <start_zlib_session+0x218>
   3c128:	add	r5, pc, r5
   3c12c:	mov	r0, #256	; 0x100
   3c130:	mov	r1, #0
   3c134:	mov	r2, r5
   3c138:	mov	r3, sl
   3c13c:	bl	d640 <sendto_realops_snomask@plt>
   3c140:	mov	r0, #0
   3c144:	mov	r1, r5
   3c148:	mov	r2, sl
   3c14c:	mov	r3, #16384	; 0x4000
   3c150:	bl	e0b4 <ilog@plt>
   3c154:	ldr	r3, [pc, #432]	; 3c30c <start_zlib_session+0x21c>
   3c158:	add	r3, pc, r3
   3c15c:	mov	r0, r4
   3c160:	mov	r1, r4
   3c164:	mov	r2, r4
   3c168:	bl	e534 <exit_client@plt>
   3c16c:	sub	sp, fp, #28
   3c170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c174:	mov	r0, sl
   3c178:	bl	3c328 <rb_malloc>
   3c17c:	mov	r9, r0
   3c180:	ldr	r0, [pc, #392]	; 3c310 <start_zlib_session+0x220>
   3c184:	ldr	r0, [pc, r0]
   3c188:	ldrb	r5, [r0, #72]	; 0x48
   3c18c:	ldr	r0, [r4, #432]	; 0x1b0
   3c190:	ldr	r0, [r0, #300]	; 0x12c
   3c194:	bl	db98 <rb_get_fd@plt>
   3c198:	mov	r1, r0
   3c19c:	add	r8, r9, #1
   3c1a0:	mov	r0, r8
   3c1a4:	bl	3bf0c <uint32_to_buf>
   3c1a8:	strb	r5, [r9, #5]
   3c1ac:	mov	r0, #48	; 0x30
   3c1b0:	bl	3c328 <rb_malloc>
   3c1b4:	ldr	r1, [r4, #432]	; 0x1b0
   3c1b8:	str	r0, [r1, #456]	; 0x1c8
   3c1bc:	add	r5, r9, #6
   3c1c0:	mov	r6, #1
   3c1c4:	ldr	r0, [r4, #432]	; 0x1b0
   3c1c8:	str	r6, [sp]
   3c1cc:	add	r0, r0, #80	; 0x50
   3c1d0:	mov	r1, r5
   3c1d4:	mov	r2, r7
   3c1d8:	mov	r3, #1
   3c1dc:	bl	e54c <rb_linebuf_get@plt>
   3c1e0:	add	r5, r0, r5
   3c1e4:	sub	r7, r7, r0
   3c1e8:	cmp	r0, #0
   3c1ec:	bgt	3c1c4 <start_zlib_session+0xd4>
   3c1f0:	mov	r0, #90	; 0x5a
   3c1f4:	strb	r0, [r9]
   3c1f8:	ldr	r0, [pc, #276]	; 3c314 <start_zlib_session+0x224>
   3c1fc:	add	r0, pc, r0
   3c200:	add	r1, sp, #12
   3c204:	str	r1, [sp]
   3c208:	str	r0, [sp, #4]
   3c20c:	add	r3, sp, #16
   3c210:	mov	r0, #1
   3c214:	mov	r1, #1
   3c218:	mov	r2, #0
   3c21c:	bl	d514 <rb_socketpair@plt>
   3c220:	cmn	r0, #1
   3c224:	beq	3c290 <start_zlib_session+0x1a0>
   3c228:	ldr	r0, [r4, #432]	; 0x1b0
   3c22c:	ldr	r1, [r0, #300]	; 0x12c
   3c230:	ldr	r2, [sp, #16]
   3c234:	str	r2, [sp, #24]
   3c238:	str	r1, [sp, #20]
   3c23c:	ldr	r1, [sp, #12]
   3c240:	str	r1, [r0, #300]	; 0x12c
   3c244:	mov	r0, r4
   3c248:	bl	dbec <connid_get@plt>
   3c24c:	mov	r1, r0
   3c250:	mov	r0, r8
   3c254:	bl	3bf0c <uint32_to_buf>
   3c258:	bl	3bf14 <which_ssld>
   3c25c:	ldr	r1, [r4, #432]	; 0x1b0
   3c260:	str	r0, [r1, #440]	; 0x1b8
   3c264:	cmp	r0, #0
   3c268:	beq	3c2e0 <start_zlib_session+0x1f0>
   3c26c:	ldr	r1, [r0, #12]
   3c270:	add	r1, r1, #1
   3c274:	str	r1, [r0, #12]
   3c278:	str	sl, [sp]
   3c27c:	add	r1, sp, #20
   3c280:	mov	r2, #2
   3c284:	mov	r3, r9
   3c288:	bl	3bf78 <ssl_cmd_write_queue>
   3c28c:	b	3c2f8 <start_zlib_session+0x208>
   3c290:	bl	de38 <__errno_location@plt>
   3c294:	mov	r5, r0
   3c298:	ldr	r0, [r0]
   3c29c:	bl	dacc <strerror@plt>
   3c2a0:	mov	r3, r0
   3c2a4:	ldr	r2, [pc, #108]	; 3c318 <start_zlib_session+0x228>
   3c2a8:	add	r2, pc, r2
   3c2ac:	mov	r0, #256	; 0x100
   3c2b0:	mov	r1, #0
   3c2b4:	bl	d640 <sendto_realops_snomask@plt>
   3c2b8:	ldr	r0, [r5]
   3c2bc:	bl	dacc <strerror@plt>
   3c2c0:	mov	r2, r0
   3c2c4:	ldr	r1, [pc, #80]	; 3c31c <start_zlib_session+0x22c>
   3c2c8:	add	r1, pc, r1
   3c2cc:	mov	r0, #0
   3c2d0:	bl	e0b4 <ilog@plt>
   3c2d4:	ldr	r3, [pc, #68]	; 3c320 <start_zlib_session+0x230>
   3c2d8:	add	r3, pc, r3
   3c2dc:	b	3c2e8 <start_zlib_session+0x1f8>
   3c2e0:	ldr	r3, [pc, #60]	; 3c324 <start_zlib_session+0x234>
   3c2e4:	add	r3, pc, r3
   3c2e8:	mov	r0, r4
   3c2ec:	mov	r1, r4
   3c2f0:	mov	r2, r4
   3c2f4:	bl	e534 <exit_client@plt>
   3c2f8:	mov	r0, r9
   3c2fc:	bl	3c348 <rb_free>
   3c300:	sub	sp, fp, #28
   3c304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c308:	.word	0x0000b4aa
   3c30c:	.word	0x0000b4bd
   3c310:	.word	0x0001e9f8
   3c314:	.word	0x0000b42f
   3c318:	.word	0x0000b39c
   3c31c:	.word	0x0000b3a0
   3c320:	.word	0x0000b3b5
   3c324:	.word	0x0000b3c8

0003c328 <rb_malloc>:
   3c328:	push	{fp, lr}
   3c32c:	mov	fp, sp
   3c330:	mov	r1, r0
   3c334:	mov	r0, #1
   3c338:	bl	cfa4 <calloc@plt>
   3c33c:	cmp	r0, #0
   3c340:	popne	{fp, pc}
   3c344:	bl	d448 <rb_outofmemory@plt>

0003c348 <rb_free>:
   3c348:	cmp	r0, #0
   3c34c:	bxeq	lr
   3c350:	b	d328 <free@plt>

0003c354 <get_ssld_count>:
   3c354:	ldr	r0, [pc, #4]	; 3c360 <get_ssld_count+0xc>
   3c358:	ldr	r0, [pc, r0]
   3c35c:	bx	lr
   3c360:	.word	0x0002fe18

0003c364 <ssld_foreach_info>:
   3c364:	push	{r4, r5, r6, r7, fp, lr}
   3c368:	add	fp, sp, #16
   3c36c:	sub	sp, sp, #8
   3c370:	ldr	r6, [pc, #92]	; 3c3d4 <ssld_foreach_info+0x70>
   3c374:	ldr	r6, [pc, r6]
   3c378:	cmp	r6, #0
   3c37c:	beq	3c3cc <ssld_foreach_info+0x68>
   3c380:	mov	r7, r1
   3c384:	mov	r5, r0
   3c388:	ldr	r0, [r6]
   3c38c:	ldr	r6, [r6, #8]
   3c390:	ldr	r2, [r0, #12]
   3c394:	ldr	r1, [r0, #24]
   3c398:	ldrb	r4, [r0, #53]	; 0x35
   3c39c:	mov	r3, #2
   3c3a0:	cmp	r4, #0
   3c3a4:	bne	3c3b4 <ssld_foreach_info+0x50>
   3c3a8:	ldrb	r3, [r0, #52]	; 0x34
   3c3ac:	cmp	r3, #0
   3c3b0:	movwne	r3, #1
   3c3b4:	add	r0, r0, #54	; 0x36
   3c3b8:	str	r0, [sp]
   3c3bc:	mov	r0, r7
   3c3c0:	blx	r5
   3c3c4:	cmp	r6, #0
   3c3c8:	bne	3c388 <ssld_foreach_info+0x24>
   3c3cc:	sub	sp, fp, #16
   3c3d0:	pop	{r4, r5, r6, r7, fp, pc}
   3c3d4:	.word	0x0002fdf0

0003c3d8 <init_ssld>:
   3c3d8:	push	{fp, lr}
   3c3dc:	mov	fp, sp
   3c3e0:	ldr	r0, [pc, #52]	; 3c41c <init_ssld+0x44>
   3c3e4:	add	r0, pc, r0
   3c3e8:	ldr	r1, [pc, #48]	; 3c420 <init_ssld+0x48>
   3c3ec:	add	r1, pc, r1
   3c3f0:	mov	r2, #0
   3c3f4:	mov	r3, #60	; 0x3c
   3c3f8:	bl	d220 <rb_event_addish@plt>
   3c3fc:	ldr	r0, [pc, #32]	; 3c424 <init_ssld+0x4c>
   3c400:	add	r0, pc, r0
   3c404:	ldr	r1, [pc, #28]	; 3c428 <init_ssld+0x50>
   3c408:	add	r1, pc, r1
   3c40c:	mov	r2, #0
   3c410:	mov	r3, #60	; 0x3c
   3c414:	pop	{fp, lr}
   3c418:	b	d220 <rb_event_addish@plt>
   3c41c:	.word	0x0000b2e5
   3c420:	.word	0x00000038
   3c424:	.word	0x0000b2da
   3c428:	.word	0x000000e0

0003c42c <collect_zipstats>:
   3c42c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c430:	add	fp, sp, #24
   3c434:	sub	sp, sp, #72	; 0x48
   3c438:	mov	r0, #83	; 0x53
   3c43c:	strb	r0, [sp, #4]
   3c440:	ldr	r0, [pc, #160]	; 3c4e8 <collect_zipstats+0xbc>
   3c444:	ldr	r0, [pc, r0]
   3c448:	ldr	r7, [r0]
   3c44c:	cmp	r7, #0
   3c450:	beq	3c4e0 <collect_zipstats+0xb4>
   3c454:	add	r8, sp, #4
   3c458:	add	r5, r8, #5
   3c45c:	add	r6, r8, #1
   3c460:	ldr	r9, [pc, #132]	; 3c4ec <collect_zipstats+0xc0>
   3c464:	ldr	r9, [pc, r9]
   3c468:	ldr	r1, [r9]
   3c46c:	ldr	r4, [r7]
   3c470:	ldr	r0, [r4, #432]	; 0x1b0
   3c474:	ldr	r2, [r0, #296]	; 0x128
   3c478:	and	r2, r1, r2
   3c47c:	cmp	r2, r1
   3c480:	bne	3c4d4 <collect_zipstats+0xa8>
   3c484:	ldr	r0, [r0, #300]	; 0x12c
   3c488:	bl	db98 <rb_get_fd@plt>
   3c48c:	mov	r1, r0
   3c490:	mov	r0, r6
   3c494:	bl	3bf0c <uint32_to_buf>
   3c498:	add	r1, r4, #88	; 0x58
   3c49c:	mov	r0, r5
   3c4a0:	mov	r2, #63	; 0x3f
   3c4a4:	bl	e510 <rb_strlcpy@plt>
   3c4a8:	mov	r0, r5
   3c4ac:	bl	dc94 <strlen@plt>
   3c4b0:	ldr	r1, [r4, #432]	; 0x1b0
   3c4b4:	ldr	r1, [r1, #440]	; 0x1b8
   3c4b8:	add	r0, r0, #6
   3c4bc:	str	r0, [sp]
   3c4c0:	mov	r0, r1
   3c4c4:	mov	r1, #0
   3c4c8:	mov	r2, #0
   3c4cc:	mov	r3, r8
   3c4d0:	bl	3bf78 <ssl_cmd_write_queue>
   3c4d4:	ldr	r7, [r7, #8]
   3c4d8:	cmp	r7, #0
   3c4dc:	bne	3c468 <collect_zipstats+0x3c>
   3c4e0:	sub	sp, fp, #24
   3c4e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c4e8:	.word	0x0001e58c
   3c4ec:	.word	0x0001e480

0003c4f0 <cleanup_dead_ssl>:
   3c4f0:	push	{r4, sl, fp, lr}
   3c4f4:	add	fp, sp, #8
   3c4f8:	ldr	r4, [pc, #52]	; 3c534 <cleanup_dead_ssl+0x44>
   3c4fc:	ldr	r4, [pc, r4]
   3c500:	b	3c508 <cleanup_dead_ssl+0x18>
   3c504:	bl	3b604 <free_ssl_daemon>
   3c508:	cmp	r4, #0
   3c50c:	popeq	{r4, sl, fp, pc}
   3c510:	ldr	r0, [r4]
   3c514:	ldr	r4, [r4, #8]
   3c518:	ldrb	r1, [r0, #53]	; 0x35
   3c51c:	cmp	r1, #0
   3c520:	beq	3c508 <cleanup_dead_ssl+0x18>
   3c524:	ldr	r1, [r0, #12]
   3c528:	cmp	r1, #0
   3c52c:	bne	3c508 <cleanup_dead_ssl+0x18>
   3c530:	b	3c504 <cleanup_dead_ssl+0x14>
   3c534:	.word	0x0002fc68

0003c538 <rb_dlinkDelete>:
   3c538:	push	{fp, lr}
   3c53c:	mov	fp, sp
   3c540:	cmp	r0, #0
   3c544:	beq	3c598 <rb_dlinkDelete+0x60>
   3c548:	cmp	r1, #0
   3c54c:	beq	3c5b8 <rb_dlinkDelete+0x80>
   3c550:	ldr	ip, [r0, #4]
   3c554:	ldr	r3, [r0, #8]
   3c558:	add	r2, r3, #4
   3c55c:	cmp	r3, #0
   3c560:	addeq	r2, r1, #4
   3c564:	str	ip, [r2]
   3c568:	ldmib	r0, {r2, ip}
   3c56c:	cmp	r2, #0
   3c570:	mov	r3, r1
   3c574:	addne	r3, r2, #8
   3c578:	str	ip, [r3]
   3c57c:	mov	r2, #0
   3c580:	str	r2, [r0, #4]
   3c584:	str	r2, [r0, #8]
   3c588:	ldr	r0, [r1, #8]
   3c58c:	sub	r0, r0, #1
   3c590:	str	r0, [r1, #8]
   3c594:	pop	{fp, pc}
   3c598:	ldr	r0, [pc, #56]	; 3c5d8 <rb_dlinkDelete+0xa0>
   3c59c:	add	r0, pc, r0
   3c5a0:	ldr	r1, [pc, #52]	; 3c5dc <rb_dlinkDelete+0xa4>
   3c5a4:	add	r1, pc, r1
   3c5a8:	ldr	r3, [pc, #48]	; 3c5e0 <rb_dlinkDelete+0xa8>
   3c5ac:	add	r3, pc, r3
   3c5b0:	mov	r2, #235	; 0xeb
   3c5b4:	bl	e7e0 <__assert_fail@plt>
   3c5b8:	ldr	r0, [pc, #36]	; 3c5e4 <rb_dlinkDelete+0xac>
   3c5bc:	add	r0, pc, r0
   3c5c0:	ldr	r1, [pc, #32]	; 3c5e8 <rb_dlinkDelete+0xb0>
   3c5c4:	add	r1, pc, r1
   3c5c8:	ldr	r3, [pc, #28]	; 3c5ec <rb_dlinkDelete+0xb4>
   3c5cc:	add	r3, pc, r3
   3c5d0:	mov	r2, #236	; 0xec
   3c5d4:	bl	e7e0 <__assert_fail@plt>
   3c5d8:	.word	0x00004010
   3c5dc:	.word	0x00004012
   3c5e0:	.word	0x000040ad
   3c5e4:	.word	0x00009889
   3c5e8:	.word	0x00003ff2
   3c5ec:	.word	0x0000408d

0003c5f0 <rb_dlinkAdd>:
   3c5f0:	push	{fp, lr}
   3c5f4:	mov	fp, sp
   3c5f8:	cmp	r0, #0
   3c5fc:	beq	3c660 <rb_dlinkAdd+0x70>
   3c600:	cmp	r1, #0
   3c604:	beq	3c680 <rb_dlinkAdd+0x90>
   3c608:	mov	r2, #0
   3c60c:	stm	r1, {r0, r2}
   3c610:	ldr	r0, [pc, #136]	; 3c6a0 <rb_dlinkAdd+0xb0>
   3c614:	ldr	r0, [pc, r0]
   3c618:	str	r0, [r1, #8]
   3c61c:	cmp	r0, #0
   3c620:	beq	3c630 <rb_dlinkAdd+0x40>
   3c624:	add	r0, r0, #4
   3c628:	str	r1, [r0]
   3c62c:	b	3c644 <rb_dlinkAdd+0x54>
   3c630:	ldr	r0, [pc, #108]	; 3c6a4 <rb_dlinkAdd+0xb4>
   3c634:	add	r0, pc, r0
   3c638:	ldr	r2, [r0, #4]!
   3c63c:	cmp	r2, #0
   3c640:	streq	r1, [r0]
   3c644:	ldr	r0, [pc, #92]	; 3c6a8 <rb_dlinkAdd+0xb8>
   3c648:	add	r0, pc, r0
   3c64c:	str	r1, [r0]
   3c650:	ldr	r1, [r0, #8]
   3c654:	add	r1, r1, #1
   3c658:	str	r1, [r0, #8]
   3c65c:	pop	{fp, pc}
   3c660:	ldr	r0, [pc, #68]	; 3c6ac <rb_dlinkAdd+0xbc>
   3c664:	add	r0, pc, r0
   3c668:	ldr	r1, [pc, #64]	; 3c6b0 <rb_dlinkAdd+0xc0>
   3c66c:	add	r1, pc, r1
   3c670:	ldr	r3, [pc, #60]	; 3c6b4 <rb_dlinkAdd+0xc4>
   3c674:	add	r3, pc, r3
   3c678:	mov	r2, #143	; 0x8f
   3c67c:	bl	e7e0 <__assert_fail@plt>
   3c680:	ldr	r0, [pc, #48]	; 3c6b8 <rb_dlinkAdd+0xc8>
   3c684:	add	r0, pc, r0
   3c688:	ldr	r1, [pc, #44]	; 3c6bc <rb_dlinkAdd+0xcc>
   3c68c:	add	r1, pc, r1
   3c690:	ldr	r3, [pc, #40]	; 3c6c0 <rb_dlinkAdd+0xd0>
   3c694:	add	r3, pc, r3
   3c698:	mov	r2, #144	; 0x90
   3c69c:	bl	e7e0 <__assert_fail@plt>
   3c6a0:	.word	0x0002fb50
   3c6a4:	.word	0x0002fb30
   3c6a8:	.word	0x0002fb1c
   3c6ac:	.word	0x00003fad
   3c6b0:	.word	0x00003f4a
   3c6b4:	.word	0x00003faa
   3c6b8:	.word	0x00003f28
   3c6bc:	.word	0x00003f2a
   3c6c0:	.word	0x00003f8a

0003c6c4 <ssl_dead>:
   3c6c4:	push	{r4, sl, fp, lr}
   3c6c8:	add	fp, sp, #8
   3c6cc:	mov	r4, r0
   3c6d0:	ldrb	r0, [r0, #53]	; 0x35
   3c6d4:	cmp	r0, #0
   3c6d8:	popne	{r4, sl, fp, pc}
   3c6dc:	mov	r0, #1
   3c6e0:	strb	r0, [r4, #53]	; 0x35
   3c6e4:	ldr	r0, [r4, #24]
   3c6e8:	mov	r1, #9
   3c6ec:	bl	d478 <rb_kill@plt>
   3c6f0:	ldrb	r0, [r4, #52]	; 0x34
   3c6f4:	cmp	r0, #0
   3c6f8:	beq	3c700 <ssl_dead+0x3c>
   3c6fc:	pop	{r4, sl, fp, pc}
   3c700:	ldr	r0, [pc, #64]	; 3c748 <ssl_dead+0x84>
   3c704:	ldr	r0, [pc, r0]
   3c708:	sub	r0, r0, #1
   3c70c:	ldr	r1, [pc, #56]	; 3c74c <ssl_dead+0x88>
   3c710:	add	r1, pc, r1
   3c714:	str	r0, [r1]
   3c718:	ldr	r4, [pc, #48]	; 3c750 <ssl_dead+0x8c>
   3c71c:	add	r4, pc, r4
   3c720:	mov	r0, #0
   3c724:	mov	r1, r4
   3c728:	bl	e0b4 <ilog@plt>
   3c72c:	mov	r0, #256	; 0x100
   3c730:	mov	r1, #0
   3c734:	mov	r2, r4
   3c738:	bl	d640 <sendto_realops_snomask@plt>
   3c73c:	mov	r0, #1
   3c740:	pop	{r4, sl, fp, lr}
   3c744:	b	3b70c <start_ssldaemon>
   3c748:	.word	0x0002fa6c
   3c74c:	.word	0x0002fa60
   3c750:	.word	0x0000b017

0003c754 <rb_dlinkAddTail>:
   3c754:	push	{fp, lr}
   3c758:	mov	fp, sp
   3c75c:	cmp	r1, #0
   3c760:	beq	3c7c8 <rb_dlinkAddTail+0x74>
   3c764:	cmp	r2, #0
   3c768:	beq	3c7e8 <rb_dlinkAddTail+0x94>
   3c76c:	cmp	r0, #0
   3c770:	beq	3c808 <rb_dlinkAddTail+0xb4>
   3c774:	mov	r3, #0
   3c778:	str	r3, [r1, #8]
   3c77c:	str	r0, [r1]
   3c780:	ldr	r0, [r2, #4]
   3c784:	str	r0, [r1, #4]
   3c788:	ldr	r0, [r2, #4]
   3c78c:	cmp	r0, #0
   3c790:	beq	3c7a0 <rb_dlinkAddTail+0x4c>
   3c794:	add	r0, r0, #8
   3c798:	str	r1, [r0]
   3c79c:	b	3c7ac <rb_dlinkAddTail+0x58>
   3c7a0:	ldr	r0, [r2]
   3c7a4:	cmp	r0, #0
   3c7a8:	beq	3c7c0 <rb_dlinkAddTail+0x6c>
   3c7ac:	str	r1, [r2, #4]
   3c7b0:	ldr	r0, [r2, #8]
   3c7b4:	add	r0, r0, #1
   3c7b8:	str	r0, [r2, #8]
   3c7bc:	pop	{fp, pc}
   3c7c0:	mov	r0, r2
   3c7c4:	b	3c798 <rb_dlinkAddTail+0x44>
   3c7c8:	ldr	r0, [pc, #88]	; 3c828 <rb_dlinkAddTail+0xd4>
   3c7cc:	add	r0, pc, r0
   3c7d0:	ldr	r1, [pc, #84]	; 3c82c <rb_dlinkAddTail+0xd8>
   3c7d4:	add	r1, pc, r1
   3c7d8:	ldr	r3, [pc, #80]	; 3c830 <rb_dlinkAddTail+0xdc>
   3c7dc:	add	r3, pc, r3
   3c7e0:	mov	r2, #211	; 0xd3
   3c7e4:	bl	e7e0 <__assert_fail@plt>
   3c7e8:	ldr	r0, [pc, #68]	; 3c834 <rb_dlinkAddTail+0xe0>
   3c7ec:	add	r0, pc, r0
   3c7f0:	ldr	r1, [pc, #64]	; 3c838 <rb_dlinkAddTail+0xe4>
   3c7f4:	add	r1, pc, r1
   3c7f8:	ldr	r3, [pc, #60]	; 3c83c <rb_dlinkAddTail+0xe8>
   3c7fc:	add	r3, pc, r3
   3c800:	mov	r2, #212	; 0xd4
   3c804:	bl	e7e0 <__assert_fail@plt>
   3c808:	ldr	r0, [pc, #48]	; 3c840 <rb_dlinkAddTail+0xec>
   3c80c:	add	r0, pc, r0
   3c810:	ldr	r1, [pc, #44]	; 3c844 <rb_dlinkAddTail+0xf0>
   3c814:	add	r1, pc, r1
   3c818:	ldr	r3, [pc, #40]	; 3c848 <rb_dlinkAddTail+0xf4>
   3c81c:	add	r3, pc, r3
   3c820:	mov	r2, #213	; 0xd5
   3c824:	bl	e7e0 <__assert_fail@plt>
   3c828:	.word	0x00003de0
   3c82c:	.word	0x00003de2
   3c830:	.word	0x00003df6
   3c834:	.word	0x00009659
   3c838:	.word	0x00003dc2
   3c83c:	.word	0x00003dd6
   3c840:	.word	0x00003e05
   3c844:	.word	0x00003da2
   3c848:	.word	0x00003db6

0003c84c <ssl_process_cmd_recv>:
   3c84c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c850:	add	fp, sp, #28
   3c854:	sub	sp, sp, #4
   3c858:	ldrb	r1, [r0, #53]	; 0x35
   3c85c:	cmp	r1, #0
   3c860:	beq	3c86c <ssl_process_cmd_recv+0x20>
   3c864:	sub	sp, fp, #28
   3c868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c86c:	mov	r4, r0
   3c870:	ldr	r9, [r4, #28]!
   3c874:	cmp	r9, #0
   3c878:	beq	3c864 <ssl_process_cmd_recv+0x18>
   3c87c:	add	r0, r0, #54	; 0x36
   3c880:	str	r0, [sp]
   3c884:	mov	r5, #0
   3c888:	ldr	r7, [pc, #624]	; 3cb00 <ssl_process_cmd_recv+0x2b4>
   3c88c:	ldr	r7, [pc, r7]
   3c890:	ldr	sl, [pc, #620]	; 3cb04 <ssl_process_cmd_recv+0x2b8>
   3c894:	add	sl, pc, sl
   3c898:	mov	r8, r9
   3c89c:	ldr	r6, [r9]
   3c8a0:	ldr	r9, [r9, #8]
   3c8a4:	ldr	r2, [r6, #12]
   3c8a8:	ldrb	r0, [r2]
   3c8ac:	sub	r0, r0, #67	; 0x43
   3c8b0:	cmp	r0, #55	; 0x37
   3c8b4:	bhi	3c9bc <ssl_process_cmd_recv+0x170>
   3c8b8:	add	r1, pc, #4
   3c8bc:	ldr	r0, [r1, r0, lsl #2]
   3c8c0:	add	pc, r1, r0
   3c8c4:	.word	0x000000e0
   3c8c8:	.word	0x000000ec
   3c8cc:	.word	0x000000f8
   3c8d0:	.word	0x00000120
   3c8d4:	.word	0x000000f8
   3c8d8:	.word	0x000000f8
   3c8dc:	.word	0x0000012c
   3c8e0:	.word	0x000000f8
   3c8e4:	.word	0x000000f8
   3c8e8:	.word	0x000000f8
   3c8ec:	.word	0x000000f8
   3c8f0:	.word	0x00000174
   3c8f4:	.word	0x00000184
   3c8f8:	.word	0x000000f8
   3c8fc:	.word	0x000000f8
   3c900:	.word	0x000000f8
   3c904:	.word	0x00000190
   3c908:	.word	0x000000f8
   3c90c:	.word	0x000001e8
   3c910:	.word	0x0000019c
   3c914:	.word	0x000000f8
   3c918:	.word	0x000000f8
   3c91c:	.word	0x000000f8
   3c920:	.word	0x000000f8
   3c924:	.word	0x000000f8
   3c928:	.word	0x000000f8
   3c92c:	.word	0x000000f8
   3c930:	.word	0x000000f8
   3c934:	.word	0x000000f8
   3c938:	.word	0x000000f8
   3c93c:	.word	0x000000f8
   3c940:	.word	0x000000f8
   3c944:	.word	0x000000f8
   3c948:	.word	0x000000f8
   3c94c:	.word	0x000000f8
   3c950:	.word	0x000000f8
   3c954:	.word	0x000000f8
   3c958:	.word	0x000000f8
   3c95c:	.word	0x000000f8
   3c960:	.word	0x000000f8
   3c964:	.word	0x000000f8
   3c968:	.word	0x000000f8
   3c96c:	.word	0x000000f8
   3c970:	.word	0x000000f8
   3c974:	.word	0x000000f8
   3c978:	.word	0x000000f8
   3c97c:	.word	0x000000f8
   3c980:	.word	0x000000f8
   3c984:	.word	0x000000f8
   3c988:	.word	0x000000f8
   3c98c:	.word	0x000000f8
   3c990:	.word	0x000000f8
   3c994:	.word	0x000000f8
   3c998:	.word	0x000000f8
   3c99c:	.word	0x000000f8
   3c9a0:	.word	0x000001bc
   3c9a4:	mov	r0, r6
   3c9a8:	bl	3cd24 <ssl_process_cipher_string>
   3c9ac:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3c9b0:	mov	r0, r6
   3c9b4:	bl	3cb80 <ssl_process_dead_fd>
   3c9b8:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3c9bc:	mov	r0, #0
   3c9c0:	ldr	r1, [pc, #344]	; 3cb20 <ssl_process_cmd_recv+0x2d4>
   3c9c4:	add	r1, pc, r1
   3c9c8:	bl	e0b4 <ilog@plt>
   3c9cc:	mov	r0, #256	; 0x100
   3c9d0:	mov	r1, #0
   3c9d4:	ldr	r2, [pc, #328]	; 3cb24 <ssl_process_cmd_recv+0x2d8>
   3c9d8:	add	r2, pc, r2
   3c9dc:	bl	d640 <sendto_realops_snomask@plt>
   3c9e0:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3c9e4:	mov	r0, r6
   3c9e8:	bl	3cd8c <ssl_process_certfp>
   3c9ec:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3c9f0:	ldr	r0, [pc, #276]	; 3cb0c <ssl_process_cmd_recv+0x2c0>
   3c9f4:	ldr	r0, [pc, r0]
   3c9f8:	strb	r5, [r0]
   3c9fc:	mov	r0, #0
   3ca00:	mov	r5, r7
   3ca04:	ldr	r7, [pc, #260]	; 3cb10 <ssl_process_cmd_recv+0x2c4>
   3ca08:	add	r7, pc, r7
   3ca0c:	mov	r1, r7
   3ca10:	mov	r2, sl
   3ca14:	bl	e0b4 <ilog@plt>
   3ca18:	mov	r0, #256	; 0x100
   3ca1c:	mov	r1, #0
   3ca20:	mov	r2, r7
   3ca24:	mov	r7, r5
   3ca28:	mov	r5, #0
   3ca2c:	mov	r3, sl
   3ca30:	bl	d640 <sendto_realops_snomask@plt>
   3ca34:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3ca38:	ldr	r0, [pc, #200]	; 3cb08 <ssl_process_cmd_recv+0x2bc>
   3ca3c:	ldr	r0, [pc, r0]
   3ca40:	strb	r5, [r0]
   3ca44:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3ca48:	mov	r0, r6
   3ca4c:	bl	3cb28 <ssl_process_open_fd>
   3ca50:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3ca54:	mov	r0, r6
   3ca58:	bl	3ceb8 <ssl_process_zipstats>
   3ca5c:	b	3ca84 <ssl_process_cmd_recv+0x238>
   3ca60:	ldr	r0, [r6, #16]
   3ca64:	sub	r3, r0, #1
   3ca68:	cmp	r3, #255	; 0xff
   3ca6c:	movcs	r3, #255	; 0xff
   3ca70:	add	r1, r2, #1
   3ca74:	ldr	r0, [sp]
   3ca78:	mov	r2, r3
   3ca7c:	bl	df7c <strncpy@plt>
   3ca80:	strb	r5, [r7]
   3ca84:	mov	r0, r8
   3ca88:	mov	r1, r4
   3ca8c:	bl	3c538 <rb_dlinkDelete>
   3ca90:	ldr	r0, [r6, #12]
   3ca94:	bl	3c348 <rb_free>
   3ca98:	mov	r0, r6
   3ca9c:	bl	3c348 <rb_free>
   3caa0:	cmp	r9, #0
   3caa4:	bne	3c898 <ssl_process_cmd_recv+0x4c>
   3caa8:	b	3c864 <ssl_process_cmd_recv+0x18>
   3caac:	mov	r0, #0
   3cab0:	ldr	r1, [pc, #92]	; 3cb14 <ssl_process_cmd_recv+0x2c8>
   3cab4:	ldr	r1, [pc, r1]
   3cab8:	strb	r0, [r1]
   3cabc:	strb	r0, [r7]
   3cac0:	ldr	r4, [pc, #80]	; 3cb18 <ssl_process_cmd_recv+0x2cc>
   3cac4:	add	r4, pc, r4
   3cac8:	ldr	r5, [pc, #76]	; 3cb1c <ssl_process_cmd_recv+0x2d0>
   3cacc:	add	r5, pc, r5
   3cad0:	mov	r0, #0
   3cad4:	mov	r1, r4
   3cad8:	mov	r2, r5
   3cadc:	bl	e0b4 <ilog@plt>
   3cae0:	mov	r0, #256	; 0x100
   3cae4:	mov	r1, #0
   3cae8:	mov	r2, r4
   3caec:	mov	r3, r5
   3caf0:	bl	d640 <sendto_realops_snomask@plt>
   3caf4:	sub	sp, fp, #28
   3caf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cafc:	b	3d09c <ssl_killall>
   3cb00:	.word	0x0001e018
   3cb04:	.word	0x0000aec8
   3cb08:	.word	0x0001df24
   3cb0c:	.word	0x0001df6c
   3cb10:	.word	0x0000ac5d
   3cb14:	.word	0x0001deac
   3cb18:	.word	0x0000aba1
   3cb1c:	.word	0x0000accf
   3cb20:	.word	0x0000ae12
   3cb24:	.word	0x0000ae25

0003cb28 <ssl_process_open_fd>:
   3cb28:	ldr	r1, [r0, #16]
   3cb2c:	cmp	r1, #5
   3cb30:	bcc	3cb60 <ssl_process_open_fd+0x38>
   3cb34:	push	{fp, lr}
   3cb38:	mov	fp, sp
   3cb3c:	ldr	r0, [r0, #12]
   3cb40:	add	r0, r0, #1
   3cb44:	bl	3d138 <buf_to_uint32>
   3cb48:	bl	dfdc <find_cli_connid_hash@plt>
   3cb4c:	cmp	r0, #0
   3cb50:	pop	{fp, lr}
   3cb54:	ldrne	r1, [r0, #432]	; 0x1b0
   3cb58:	cmpne	r1, #0
   3cb5c:	bne	3cb64 <ssl_process_open_fd+0x3c>
   3cb60:	bx	lr
   3cb64:	ldr	r2, [r1, #448]	; 0x1c0
   3cb68:	cmp	r2, #0
   3cb6c:	bxeq	lr
   3cb70:	mov	r3, #0
   3cb74:	str	r3, [r1, #448]	; 0x1c0
   3cb78:	mov	r1, #0
   3cb7c:	bx	r2

0003cb80 <ssl_process_dead_fd>:
   3cb80:	push	{r4, r5, r6, sl, fp, lr}
   3cb84:	add	fp, sp, #16
   3cb88:	sub	sp, sp, #264	; 0x108
   3cb8c:	ldr	r1, [r0, #16]
   3cb90:	cmp	r1, #6
   3cb94:	bcc	3cce0 <ssl_process_dead_fd+0x160>
   3cb98:	ldr	r5, [r0, #12]
   3cb9c:	add	r0, r5, #1
   3cba0:	bl	3d138 <buf_to_uint32>
   3cba4:	mov	r4, r0
   3cba8:	add	r1, r5, #5
   3cbac:	add	r5, sp, #8
   3cbb0:	mov	r0, r5
   3cbb4:	mov	r2, #256	; 0x100
   3cbb8:	bl	e510 <rb_strlcpy@plt>
   3cbbc:	mov	r0, r4
   3cbc0:	bl	dfdc <find_cli_connid_hash@plt>
   3cbc4:	cmp	r0, #0
   3cbc8:	beq	3cce0 <ssl_process_dead_fd+0x160>
   3cbcc:	mov	r4, r0
   3cbd0:	ldr	r0, [r0, #432]	; 0x1b0
   3cbd4:	cmp	r0, #0
   3cbd8:	beq	3cce0 <ssl_process_dead_fd+0x160>
   3cbdc:	ldrh	r0, [r4, #80]	; 0x50
   3cbe0:	sub	r0, r0, #1
   3cbe4:	cmp	r0, #31
   3cbe8:	bhi	3cc5c <ssl_process_dead_fd+0xdc>
   3cbec:	mov	r1, #1
   3cbf0:	mov	r2, #-2147483645	; 0x80000003
   3cbf4:	tst	r2, r1, lsl r0
   3cbf8:	beq	3cc5c <ssl_process_dead_fd+0xdc>
   3cbfc:	mov	r0, r4
   3cc00:	bl	dea4 <is_remote_connect@plt>
   3cc04:	cmp	r0, #0
   3cc08:	beq	3cc1c <ssl_process_dead_fd+0x9c>
   3cc0c:	ldrh	r0, [r4, #80]	; 0x50
   3cc10:	subs	r1, r0, #32
   3cc14:	movwne	r1, #256	; 0x100
   3cc18:	b	3cc20 <ssl_process_dead_fd+0xa0>
   3cc1c:	mov	r1, #0
   3cc20:	str	r5, [sp]
   3cc24:	add	r3, r4, #88	; 0x58
   3cc28:	ldr	r6, [pc, #232]	; 3cd18 <ssl_process_dead_fd+0x198>
   3cc2c:	add	r6, pc, r6
   3cc30:	mov	r0, #256	; 0x100
   3cc34:	mov	r2, r6
   3cc38:	bl	d640 <sendto_realops_snomask@plt>
   3cc3c:	mov	r0, r4
   3cc40:	mov	r1, #1
   3cc44:	bl	e168 <log_client_name@plt>
   3cc48:	mov	r2, r0
   3cc4c:	mov	r0, #5
   3cc50:	mov	r1, r6
   3cc54:	mov	r3, r5
   3cc58:	bl	e0b4 <ilog@plt>
   3cc5c:	ldr	r0, [r4, #432]	; 0x1b0
   3cc60:	ldr	r2, [r0, #448]	; 0x1c0
   3cc64:	cmp	r2, #0
   3cc68:	beq	3cc88 <ssl_process_dead_fd+0x108>
   3cc6c:	mov	r1, #0
   3cc70:	str	r1, [r0, #448]	; 0x1c0
   3cc74:	mov	r0, r4
   3cc78:	mov	r1, #6
   3cc7c:	blx	r2
   3cc80:	cmp	r0, #0
   3cc84:	bne	3cce0 <ssl_process_dead_fd+0x160>
   3cc88:	ldrh	r0, [r4, #80]	; 0x50
   3cc8c:	sub	r1, r0, #1
   3cc90:	cmp	r1, #31
   3cc94:	bhi	3cce8 <ssl_process_dead_fd+0x168>
   3cc98:	mov	r2, #1
   3cc9c:	mov	r3, #-2147483645	; 0x80000003
   3cca0:	tst	r3, r2, lsl r1
   3cca4:	beq	3cce8 <ssl_process_dead_fd+0x168>
   3cca8:	add	r0, sp, #8
   3ccac:	ldr	r1, [pc, #104]	; 3cd1c <ssl_process_dead_fd+0x19c>
   3ccb0:	add	r1, pc, r1
   3ccb4:	bl	d0c4 <strcmp@plt>
   3ccb8:	cmp	r0, #0
   3ccbc:	bne	3ccd0 <ssl_process_dead_fd+0x150>
   3ccc0:	ldr	r0, [r4, #432]	; 0x1b0
   3ccc4:	ldr	r0, [r0, #300]	; 0x12c
   3ccc8:	mov	r1, r4
   3cccc:	bl	d76c <read_packet@plt>
   3ccd0:	ldrh	r0, [r4, #64]	; 0x40
   3ccd4:	movw	r1, #16418	; 0x4022
   3ccd8:	tst	r0, r1
   3ccdc:	beq	3ccf8 <ssl_process_dead_fd+0x178>
   3cce0:	sub	sp, fp, #16
   3cce4:	pop	{r4, r5, r6, sl, fp, pc}
   3cce8:	cmp	r0, #9
   3ccec:	bcc	3ccf8 <ssl_process_dead_fd+0x178>
   3ccf0:	cmp	r0, #16
   3ccf4:	bne	3cca8 <ssl_process_dead_fd+0x128>
   3ccf8:	ldr	r2, [pc, #32]	; 3cd20 <ssl_process_dead_fd+0x1a0>
   3ccfc:	ldr	r2, [pc, r2]
   3cd00:	add	r3, sp, #8
   3cd04:	mov	r0, r4
   3cd08:	mov	r1, r4
   3cd0c:	bl	e534 <exit_client@plt>
   3cd10:	sub	sp, fp, #16
   3cd14:	pop	{r4, r5, r6, sl, fp, pc}
   3cd18:	.word	0x0000abf4
   3cd1c:	.word	0x000046d2
   3cd20:	.word	0x0001de5c

0003cd24 <ssl_process_cipher_string>:
   3cd24:	push	{r4, r5, fp, lr}
   3cd28:	add	fp, sp, #8
   3cd2c:	ldr	r1, [r0, #16]
   3cd30:	cmp	r1, #6
   3cd34:	bcc	3cd88 <ssl_process_cipher_string+0x64>
   3cd38:	ldr	r0, [r0, #12]
   3cd3c:	mov	r4, r0
   3cd40:	ldrb	r1, [r4, #5]!
   3cd44:	cmp	r1, #0
   3cd48:	beq	3cd88 <ssl_process_cipher_string+0x64>
   3cd4c:	add	r0, r0, #1
   3cd50:	bl	3d138 <buf_to_uint32>
   3cd54:	bl	dfdc <find_cli_connid_hash@plt>
   3cd58:	cmp	r0, #0
   3cd5c:	beq	3cd88 <ssl_process_cipher_string+0x64>
   3cd60:	mov	r5, r0
   3cd64:	ldr	r0, [r0, #432]	; 0x1b0
   3cd68:	cmp	r0, #0
   3cd6c:	popeq	{r4, r5, fp, pc}
   3cd70:	ldr	r0, [r0, #292]	; 0x124
   3cd74:	bl	3c348 <rb_free>
   3cd78:	mov	r0, r4
   3cd7c:	bl	3bc00 <rb_strdup>
   3cd80:	ldr	r1, [r5, #432]	; 0x1b0
   3cd84:	str	r0, [r1, #292]	; 0x124
   3cd88:	pop	{r4, r5, fp, pc}

0003cd8c <ssl_process_certfp>:
   3cd8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cd90:	add	fp, sp, #28
   3cd94:	sub	sp, sp, #4
   3cd98:	ldr	r1, [r0, #16]
   3cd9c:	cmp	r1, #77	; 0x4d
   3cda0:	bhi	3ce9c <ssl_process_certfp+0x110>
   3cda4:	ldr	r7, [r0, #12]
   3cda8:	add	r0, r7, #1
   3cdac:	bl	3d138 <buf_to_uint32>
   3cdb0:	mov	r6, r0
   3cdb4:	add	r0, r7, #5
   3cdb8:	bl	3d138 <buf_to_uint32>
   3cdbc:	mov	r5, r0
   3cdc0:	add	r0, r7, #9
   3cdc4:	bl	3d138 <buf_to_uint32>
   3cdc8:	mov	r4, r0
   3cdcc:	mov	r0, r6
   3cdd0:	bl	dfdc <find_cli_connid_hash@plt>
   3cdd4:	cmp	r0, #0
   3cdd8:	beq	3ce9c <ssl_process_certfp+0x110>
   3cddc:	mov	r6, r0
   3cde0:	cmp	r5, #3
   3cde4:	bcs	3cdf4 <ssl_process_certfp+0x68>
   3cde8:	ldr	sl, [pc, #180]	; 3cea4 <ssl_process_certfp+0x118>
   3cdec:	add	sl, pc, sl
   3cdf0:	b	3ce20 <ssl_process_certfp+0x94>
   3cdf4:	movw	r0, #4098	; 0x1002
   3cdf8:	cmp	r5, r0
   3cdfc:	beq	3ce18 <ssl_process_certfp+0x8c>
   3ce00:	movw	r0, #4097	; 0x1001
   3ce04:	cmp	r5, r0
   3ce08:	bne	3ce9c <ssl_process_certfp+0x110>
   3ce0c:	ldr	sl, [pc, #148]	; 3cea8 <ssl_process_certfp+0x11c>
   3ce10:	add	sl, pc, sl
   3ce14:	b	3ce20 <ssl_process_certfp+0x94>
   3ce18:	ldr	sl, [pc, #140]	; 3ceac <ssl_process_certfp+0x120>
   3ce1c:	add	sl, pc, sl
   3ce20:	mov	r0, sl
   3ce24:	bl	dc94 <strlen@plt>
   3ce28:	mov	r9, r0
   3ce2c:	str	r6, [sp]
   3ce30:	ldr	r0, [r6, #444]	; 0x1bc
   3ce34:	bl	3c348 <rb_free>
   3ce38:	mov	r0, #1
   3ce3c:	orr	r0, r0, r4, lsl #1
   3ce40:	add	r5, r0, r9
   3ce44:	mov	r0, r5
   3ce48:	bl	3c328 <rb_malloc>
   3ce4c:	mov	r8, r0
   3ce50:	mov	r1, sl
   3ce54:	mov	r2, r5
   3ce58:	bl	e510 <rb_strlcpy@plt>
   3ce5c:	cmp	r4, #0
   3ce60:	beq	3ce94 <ssl_process_certfp+0x108>
   3ce64:	add	r6, r7, #13
   3ce68:	add	r5, r8, r9
   3ce6c:	ldr	r7, [pc, #60]	; 3ceb0 <ssl_process_certfp+0x124>
   3ce70:	add	r7, pc, r7
   3ce74:	ldrb	r3, [r6], #1
   3ce78:	mov	r0, r5
   3ce7c:	mov	r1, #3
   3ce80:	mov	r2, r7
   3ce84:	bl	de74 <snprintf@plt>
   3ce88:	add	r5, r5, #2
   3ce8c:	subs	r4, r4, #1
   3ce90:	bne	3ce74 <ssl_process_certfp+0xe8>
   3ce94:	ldr	r0, [sp]
   3ce98:	str	r8, [r0, #444]	; 0x1bc
   3ce9c:	sub	sp, fp, #28
   3cea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cea4:	.word	0x00008a19
   3cea8:	.word	0x0000aa26
   3ceac:	.word	0x0000aa29
   3ceb0:	.word	0x0000a9e4
   3ceb4:	.word	0xe320f000

0003ceb8 <ssl_process_zipstats>:
   3ceb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cebc:	add	fp, sp, #28
   3cec0:	sub	sp, sp, #28
   3cec4:	ldr	r0, [r0, #12]
   3cec8:	add	r1, sp, #4
   3cecc:	mov	r2, #24
   3ced0:	bl	da60 <rb_string_to_array@plt>
   3ced4:	cmp	r0, #24
   3ced8:	bcc	3d084 <ssl_process_zipstats+0x1cc>
   3cedc:	ldr	r1, [sp, #8]
   3cee0:	mov	r0, #0
   3cee4:	bl	df04 <find_server@plt>
   3cee8:	cmp	r0, #0
   3ceec:	beq	3d084 <ssl_process_zipstats+0x1cc>
   3cef0:	mov	r4, r0
   3cef4:	ldr	r0, [r0, #432]	; 0x1b0
   3cef8:	cmp	r0, #0
   3cefc:	beq	3d084 <ssl_process_zipstats+0x1cc>
   3cf00:	ldr	r1, [r0, #296]	; 0x128
   3cf04:	ldr	r2, [pc, #396]	; 3d098 <ssl_process_zipstats+0x1e0>
   3cf08:	ldr	r2, [pc, r2]
   3cf0c:	ldr	r2, [r2]
   3cf10:	and	r1, r2, r1
   3cf14:	cmp	r1, r2
   3cf18:	bne	3d084 <ssl_process_zipstats+0x1cc>
   3cf1c:	ldr	r0, [r0, #456]	; 0x1c8
   3cf20:	cmp	r0, #0
   3cf24:	bne	3cf38 <ssl_process_zipstats+0x80>
   3cf28:	mov	r0, #48	; 0x30
   3cf2c:	bl	3c328 <rb_malloc>
   3cf30:	ldr	r1, [r4, #432]	; 0x1b0
   3cf34:	str	r0, [r1, #456]	; 0x1c8
   3cf38:	ldr	r0, [r4, #432]	; 0x1b0
   3cf3c:	ldr	r6, [r0, #456]	; 0x1c8
   3cf40:	ldr	r0, [sp, #12]
   3cf44:	mov	r1, #0
   3cf48:	mov	r2, #10
   3cf4c:	bl	dfe8 <strtoull@plt>
   3cf50:	ldrd	r2, [r6]
   3cf54:	adds	r0, r2, r0
   3cf58:	adc	r1, r3, r1
   3cf5c:	strd	r0, [r6]
   3cf60:	ldr	r0, [sp, #16]
   3cf64:	mov	r1, #0
   3cf68:	mov	r2, #10
   3cf6c:	bl	dfe8 <strtoull@plt>
   3cf70:	mov	r7, r6
   3cf74:	ldr	r2, [r7, #8]!
   3cf78:	adds	r0, r2, r0
   3cf7c:	str	r0, [r7]
   3cf80:	ldr	r0, [r6, #12]
   3cf84:	adc	r0, r0, r1
   3cf88:	str	r0, [r6, #12]
   3cf8c:	ldr	r0, [sp, #20]
   3cf90:	mov	r1, #0
   3cf94:	mov	r2, #10
   3cf98:	bl	dfe8 <strtoull@plt>
   3cf9c:	mov	sl, r6
   3cfa0:	ldr	r2, [sl, #16]!
   3cfa4:	adds	r0, r2, r0
   3cfa8:	str	r0, [sl]
   3cfac:	ldr	r0, [r6, #20]
   3cfb0:	adc	r0, r0, r1
   3cfb4:	str	r0, [r6, #20]
   3cfb8:	ldr	r0, [sp, #24]
   3cfbc:	mov	r1, #0
   3cfc0:	mov	r2, #10
   3cfc4:	bl	dfe8 <strtoull@plt>
   3cfc8:	ldrd	r4, [r6]
   3cfcc:	ldrd	r2, [r6, #24]
   3cfd0:	adds	r8, r2, r0
   3cfd4:	adc	r9, r3, r1
   3cfd8:	orrs	r0, r4, r5
   3cfdc:	strd	r8, [r6, #24]
   3cfe0:	beq	3d024 <ssl_process_zipstats+0x16c>
   3cfe4:	ldrd	r0, [r7]
   3cfe8:	subs	r0, r4, r0
   3cfec:	sbc	r1, r5, r1
   3cff0:	bl	4019c <__aeabi_ul2d>
   3cff4:	mov	r7, r0
   3cff8:	str	r1, [sp]
   3cffc:	mov	r0, r4
   3d000:	mov	r1, r5
   3d004:	bl	4019c <__aeabi_ul2d>
   3d008:	vldr	d16, [pc, #128]	; 3d090 <ssl_process_zipstats+0x1d8>
   3d00c:	vmov	d17, r0, r1
   3d010:	ldr	r0, [sp]
   3d014:	vmov	d18, r7, r0
   3d018:	vdiv.f64	d17, d18, d17
   3d01c:	vmul.f64	d16, d17, d16
   3d020:	b	3d028 <ssl_process_zipstats+0x170>
   3d024:	vmov.i32	d16, #0	; 0x00000000
   3d028:	vstr	d16, [r6, #32]
   3d02c:	ldm	sl, {r4, r7}
   3d030:	orrs	r0, r4, r7
   3d034:	beq	3d078 <ssl_process_zipstats+0x1c0>
   3d038:	subs	r0, r4, r8
   3d03c:	sbc	r1, r7, r9
   3d040:	bl	4019c <__aeabi_ul2d>
   3d044:	mov	r8, r0
   3d048:	mov	r5, r1
   3d04c:	mov	r0, r4
   3d050:	mov	r1, r7
   3d054:	bl	4019c <__aeabi_ul2d>
   3d058:	vldr	d16, [pc, #48]	; 3d090 <ssl_process_zipstats+0x1d8>
   3d05c:	vmov	d17, r0, r1
   3d060:	vmov	d18, r8, r5
   3d064:	vdiv.f64	d17, d18, d17
   3d068:	vmul.f64	d16, d17, d16
   3d06c:	vstr	d16, [r6, #40]	; 0x28
   3d070:	sub	sp, fp, #28
   3d074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d078:	mov	r0, #0
   3d07c:	str	r0, [r6, #40]	; 0x28
   3d080:	str	r0, [r6, #44]	; 0x2c
   3d084:	sub	sp, fp, #28
   3d088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d08c:	nop	{0}
   3d090:	.word	0x00000000
   3d094:	.word	0x40590000
   3d098:	.word	0x0001d9dc

0003d09c <ssl_killall>:
   3d09c:	push	{r4, r5, r6, r7, fp, lr}
   3d0a0:	add	fp, sp, #16
   3d0a4:	ldr	r5, [pc, #128]	; 3d12c <ssl_killall+0x90>
   3d0a8:	ldr	r5, [pc, r5]
   3d0ac:	cmp	r5, #0
   3d0b0:	popeq	{r4, r5, r6, r7, fp, pc}
   3d0b4:	mov	r6, #1
   3d0b8:	ldr	r7, [pc, #112]	; 3d130 <ssl_killall+0x94>
   3d0bc:	add	r7, pc, r7
   3d0c0:	ldr	r4, [r5]
   3d0c4:	ldr	r5, [r5, #8]
   3d0c8:	ldrb	r0, [r4, #53]	; 0x35
   3d0cc:	cmp	r0, #0
   3d0d0:	bne	3d10c <ssl_killall+0x70>
   3d0d4:	strb	r6, [r4, #53]	; 0x35
   3d0d8:	ldrb	r0, [r4, #52]	; 0x34
   3d0dc:	cmp	r0, #0
   3d0e0:	bne	3d0f4 <ssl_killall+0x58>
   3d0e4:	ldr	r0, [pc, #72]	; 3d134 <ssl_killall+0x98>
   3d0e8:	ldr	r0, [pc, r0]
   3d0ec:	sub	r0, r0, #1
   3d0f0:	str	r0, [r7]
   3d0f4:	ldr	r0, [r4, #24]
   3d0f8:	mov	r1, #9
   3d0fc:	bl	d478 <rb_kill@plt>
   3d100:	ldr	r0, [r4, #12]
   3d104:	cmp	r0, #0
   3d108:	beq	3d118 <ssl_killall+0x7c>
   3d10c:	cmp	r5, #0
   3d110:	bne	3d0c0 <ssl_killall+0x24>
   3d114:	b	3d128 <ssl_killall+0x8c>
   3d118:	mov	r0, r4
   3d11c:	bl	3b604 <free_ssl_daemon>
   3d120:	cmp	r5, #0
   3d124:	bne	3d0c0 <ssl_killall+0x24>
   3d128:	pop	{r4, r5, r6, r7, fp, pc}
   3d12c:	.word	0x0002f0bc
   3d130:	.word	0x0002f0b4
   3d134:	.word	0x0002f088

0003d138 <buf_to_uint32>:
   3d138:	ldr	r0, [r0]
   3d13c:	bx	lr

0003d140 <send_certfp_method>:
   3d140:	push	{r4, r5, fp, lr}
   3d144:	add	fp, sp, #8
   3d148:	sub	sp, sp, #16
   3d14c:	mov	r4, r0
   3d150:	mov	r0, #70	; 0x46
   3d154:	strb	r0, [sp, #11]
   3d158:	ldr	r0, [pc, #52]	; 3d194 <send_certfp_method+0x54>
   3d15c:	ldr	r0, [pc, r0]
   3d160:	ldr	r1, [r0, #364]	; 0x16c
   3d164:	add	r5, sp, #11
   3d168:	add	r0, r5, #1
   3d16c:	bl	3bf0c <uint32_to_buf>
   3d170:	mov	r0, #5
   3d174:	str	r0, [sp]
   3d178:	mov	r0, r4
   3d17c:	mov	r1, #0
   3d180:	mov	r2, #0
   3d184:	mov	r3, r5
   3d188:	bl	3bf78 <ssl_cmd_write_queue>
   3d18c:	sub	sp, fp, #8
   3d190:	pop	{r4, r5, fp, pc}
   3d194:	.word	0x0001da20

0003d198 <send_new_ssl_certs_one>:
   3d198:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d19c:	add	fp, sp, #24
   3d1a0:	sub	sp, sp, #32
   3d1a4:	ldr	r5, [pc, #308]	; 3d2e0 <send_new_ssl_certs_one+0x148>
   3d1a8:	ldr	r5, [pc, r5]
   3d1ac:	ldr	r9, [r5, #288]	; 0x120
   3d1b0:	cmp	r9, #0
   3d1b4:	beq	3d2d8 <send_new_ssl_certs_one+0x140>
   3d1b8:	mov	r8, r0
   3d1bc:	mov	r0, r9
   3d1c0:	bl	dc94 <strlen@plt>
   3d1c4:	add	r6, r0, #5
   3d1c8:	ldr	r7, [r5, #280]	; 0x118
   3d1cc:	cmp	r7, #0
   3d1d0:	beq	3d1e0 <send_new_ssl_certs_one+0x48>
   3d1d4:	mov	r0, r7
   3d1d8:	bl	dc94 <strlen@plt>
   3d1dc:	add	r6, r0, r6
   3d1e0:	ldr	r4, [r5, #292]	; 0x124
   3d1e4:	cmp	r4, #0
   3d1e8:	beq	3d1f8 <send_new_ssl_certs_one+0x60>
   3d1ec:	mov	r0, r4
   3d1f0:	bl	dc94 <strlen@plt>
   3d1f4:	add	r6, r0, r6
   3d1f8:	ldr	r5, [r5, #296]	; 0x128
   3d1fc:	cmp	r5, #0
   3d200:	beq	3d210 <send_new_ssl_certs_one+0x78>
   3d204:	mov	r0, r5
   3d208:	bl	dc94 <strlen@plt>
   3d20c:	add	r6, r0, r6
   3d210:	cmp	r6, #16384	; 0x4000
   3d214:	bls	3d258 <send_new_ssl_certs_one+0xc0>
   3d218:	mov	r0, #16384	; 0x4000
   3d21c:	str	r0, [sp]
   3d220:	ldr	r4, [pc, #204]	; 3d2f4 <send_new_ssl_certs_one+0x15c>
   3d224:	add	r4, pc, r4
   3d228:	mov	r0, #256	; 0x100
   3d22c:	mov	r1, #0
   3d230:	mov	r2, r4
   3d234:	mov	r3, r6
   3d238:	bl	d640 <sendto_realops_snomask@plt>
   3d23c:	mov	r0, #0
   3d240:	mov	r1, r4
   3d244:	mov	r2, r6
   3d248:	mov	r3, #16384	; 0x4000
   3d24c:	sub	sp, fp, #24
   3d250:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d254:	b	e0b4 <ilog@plt>
   3d258:	mov	r0, #0
   3d25c:	ldr	r1, [pc, #128]	; 3d2e4 <send_new_ssl_certs_one+0x14c>
   3d260:	add	r1, pc, r1
   3d264:	cmp	r5, #0
   3d268:	moveq	r5, r1
   3d26c:	cmp	r4, #0
   3d270:	moveq	r4, r1
   3d274:	cmp	r7, #0
   3d278:	moveq	r7, r1
   3d27c:	str	r9, [sp]
   3d280:	stmib	sp, {r0, r7}
   3d284:	str	r0, [sp, #12]
   3d288:	str	r4, [sp, #16]
   3d28c:	str	r0, [sp, #20]
   3d290:	str	r5, [sp, #24]
   3d294:	str	r0, [sp, #28]
   3d298:	ldr	r0, [pc, #72]	; 3d2e8 <send_new_ssl_certs_one+0x150>
   3d29c:	add	r0, pc, r0
   3d2a0:	ldr	r2, [pc, #68]	; 3d2ec <send_new_ssl_certs_one+0x154>
   3d2a4:	add	r2, pc, r2
   3d2a8:	mov	r1, #16384	; 0x4000
   3d2ac:	mov	r3, #0
   3d2b0:	bl	de74 <snprintf@plt>
   3d2b4:	cmp	r0, #6
   3d2b8:	blt	3d2d8 <send_new_ssl_certs_one+0x140>
   3d2bc:	str	r0, [sp]
   3d2c0:	ldr	r3, [pc, #40]	; 3d2f0 <send_new_ssl_certs_one+0x158>
   3d2c4:	add	r3, pc, r3
   3d2c8:	mov	r0, r8
   3d2cc:	mov	r1, #0
   3d2d0:	mov	r2, #0
   3d2d4:	bl	3bf78 <ssl_cmd_write_queue>
   3d2d8:	sub	sp, fp, #24
   3d2dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d2e0:	.word	0x0001d7a8
   3d2e4:	.word	0x000085a5
   3d2e8:	.word	0x0002eee8
   3d2ec:	.word	0x0000a610
   3d2f0:	.word	0x0002eec0
   3d2f4:	.word	0x0000a635

0003d2f8 <ssl_write_ctl>:
   3d2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d2fc:	add	fp, sp, #28
   3d300:	sub	sp, sp, #12
   3d304:	ldrb	r0, [r1, #53]	; 0x35
   3d308:	cmp	r0, #0
   3d30c:	beq	3d318 <ssl_write_ctl+0x20>
   3d310:	sub	sp, fp, #28
   3d314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d318:	mov	sl, r1
   3d31c:	mov	r9, r1
   3d320:	ldr	r4, [r9, #40]!	; 0x28
   3d324:	cmp	r4, #0
   3d328:	beq	3d310 <ssl_write_ctl+0x18>
   3d32c:	ldr	r7, [r4]
   3d330:	ldr	r8, [r4, #8]
   3d334:	ldr	r3, [r7, #12]
   3d338:	ldr	r1, [r7, #16]
   3d33c:	ldr	r2, [r7, #36]	; 0x24
   3d340:	ldr	r0, [sl, #16]
   3d344:	ldr	r6, [sl, #24]
   3d348:	stm	sp, {r1, r6}
   3d34c:	add	r5, r7, #20
   3d350:	mov	r1, r5
   3d354:	bl	df94 <rb_send_fd_buf@plt>
   3d358:	mov	r6, r0
   3d35c:	cmp	r0, #1
   3d360:	blt	3d3a8 <ssl_write_ctl+0xb0>
   3d364:	mov	r0, r4
   3d368:	mov	r1, r9
   3d36c:	bl	3c538 <rb_dlinkDelete>
   3d370:	ldr	r0, [r7, #36]	; 0x24
   3d374:	cmp	r0, #1
   3d378:	blt	3d398 <ssl_write_ctl+0xa0>
   3d37c:	mov	r4, #0
   3d380:	ldr	r0, [r5, r4, lsl #2]
   3d384:	bl	db5c <rb_close@plt>
   3d388:	add	r4, r4, #1
   3d38c:	ldr	r0, [r7, #36]	; 0x24
   3d390:	cmp	r4, r0
   3d394:	blt	3d380 <ssl_write_ctl+0x88>
   3d398:	ldr	r0, [r7, #12]
   3d39c:	bl	3c348 <rb_free>
   3d3a0:	mov	r0, r7
   3d3a4:	bl	3c348 <rb_free>
   3d3a8:	cmp	r6, #0
   3d3ac:	beq	3d3f4 <ssl_write_ctl+0xfc>
   3d3b0:	cmn	r6, #1
   3d3b4:	bgt	3d3cc <ssl_write_ctl+0xd4>
   3d3b8:	bl	de38 <__errno_location@plt>
   3d3bc:	ldr	r0, [r0]
   3d3c0:	bl	dac0 <rb_ignore_errno@plt>
   3d3c4:	cmp	r0, #0
   3d3c8:	beq	3d3f4 <ssl_write_ctl+0xfc>
   3d3cc:	ldr	r0, [sl, #16]
   3d3d0:	mov	r1, #2
   3d3d4:	ldr	r2, [pc, #40]	; 3d404 <ssl_write_ctl+0x10c>
   3d3d8:	add	r2, pc, r2
   3d3dc:	mov	r3, sl
   3d3e0:	bl	d304 <rb_setselect@plt>
   3d3e4:	cmp	r8, #0
   3d3e8:	mov	r4, r8
   3d3ec:	bne	3d32c <ssl_write_ctl+0x34>
   3d3f0:	b	3d310 <ssl_write_ctl+0x18>
   3d3f4:	mov	r0, sl
   3d3f8:	sub	sp, fp, #28
   3d3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d400:	b	3c6c4 <ssl_dead>
   3d404:	.word	0xffffff18

0003d408 <substitution_append_var>:
   3d408:	push	{r4, r5, r6, r7, fp, lr}
   3d40c:	add	fp, sp, #16
   3d410:	mov	r4, r2
   3d414:	mov	r5, r1
   3d418:	mov	r6, r0
   3d41c:	bl	3d454 <rb_malloc>
   3d420:	mov	r7, r0
   3d424:	mov	r0, r5
   3d428:	bl	3d474 <rb_strdup>
   3d42c:	str	r0, [r7]
   3d430:	mov	r0, r4
   3d434:	bl	3d474 <rb_strdup>
   3d438:	str	r0, [r7, #4]
   3d43c:	bl	dc64 <rb_make_rb_dlink_node@plt>
   3d440:	mov	r1, r0
   3d444:	mov	r0, r7
   3d448:	mov	r2, r6
   3d44c:	pop	{r4, r5, r6, r7, fp, lr}
   3d450:	b	3d4ac <rb_dlinkAdd>

0003d454 <rb_malloc>:
   3d454:	push	{fp, lr}
   3d458:	mov	fp, sp
   3d45c:	mov	r0, #1
   3d460:	mov	r1, #8
   3d464:	bl	cfa4 <calloc@plt>
   3d468:	cmp	r0, #0
   3d46c:	popne	{fp, pc}
   3d470:	bl	d448 <rb_outofmemory@plt>

0003d474 <rb_strdup>:
   3d474:	push	{r4, r5, fp, lr}
   3d478:	add	fp, sp, #8
   3d47c:	mov	r4, r0
   3d480:	bl	dc94 <strlen@plt>
   3d484:	add	r0, r0, #1
   3d488:	bl	da90 <malloc@plt>
   3d48c:	cmp	r0, #0
   3d490:	beq	3d4a8 <rb_strdup+0x34>
   3d494:	mov	r5, r0
   3d498:	mov	r1, r4
   3d49c:	bl	d928 <strcpy@plt>
   3d4a0:	mov	r0, r5
   3d4a4:	pop	{r4, r5, fp, pc}
   3d4a8:	bl	d448 <rb_outofmemory@plt>

0003d4ac <rb_dlinkAdd>:
   3d4ac:	push	{fp, lr}
   3d4b0:	mov	fp, sp
   3d4b4:	cmp	r0, #0
   3d4b8:	beq	3d518 <rb_dlinkAdd+0x6c>
   3d4bc:	cmp	r1, #0
   3d4c0:	beq	3d538 <rb_dlinkAdd+0x8c>
   3d4c4:	cmp	r2, #0
   3d4c8:	beq	3d558 <rb_dlinkAdd+0xac>
   3d4cc:	mov	r3, #0
   3d4d0:	stm	r1, {r0, r3}
   3d4d4:	ldr	r0, [r2]
   3d4d8:	str	r0, [r1, #8]
   3d4dc:	ldr	r0, [r2]
   3d4e0:	cmp	r0, #0
   3d4e4:	beq	3d4f4 <rb_dlinkAdd+0x48>
   3d4e8:	add	r0, r0, #4
   3d4ec:	str	r1, [r0]
   3d4f0:	b	3d504 <rb_dlinkAdd+0x58>
   3d4f4:	mov	r0, r2
   3d4f8:	ldr	r3, [r0, #4]!
   3d4fc:	cmp	r3, #0
   3d500:	streq	r1, [r0]
   3d504:	str	r1, [r2]
   3d508:	ldr	r0, [r2, #8]
   3d50c:	add	r0, r0, #1
   3d510:	str	r0, [r2, #8]
   3d514:	pop	{fp, pc}
   3d518:	ldr	r0, [pc, #88]	; 3d578 <rb_dlinkAdd+0xcc>
   3d51c:	add	r0, pc, r0
   3d520:	ldr	r1, [pc, #84]	; 3d57c <rb_dlinkAdd+0xd0>
   3d524:	add	r1, pc, r1
   3d528:	ldr	r3, [pc, #80]	; 3d580 <rb_dlinkAdd+0xd4>
   3d52c:	add	r3, pc, r3
   3d530:	mov	r2, #143	; 0x8f
   3d534:	bl	e7e0 <__assert_fail@plt>
   3d538:	ldr	r0, [pc, #68]	; 3d584 <rb_dlinkAdd+0xd8>
   3d53c:	add	r0, pc, r0
   3d540:	ldr	r1, [pc, #64]	; 3d588 <rb_dlinkAdd+0xdc>
   3d544:	add	r1, pc, r1
   3d548:	ldr	r3, [pc, #60]	; 3d58c <rb_dlinkAdd+0xe0>
   3d54c:	add	r3, pc, r3
   3d550:	mov	r2, #144	; 0x90
   3d554:	bl	e7e0 <__assert_fail@plt>
   3d558:	ldr	r0, [pc, #48]	; 3d590 <rb_dlinkAdd+0xe4>
   3d55c:	add	r0, pc, r0
   3d560:	ldr	r1, [pc, #44]	; 3d594 <rb_dlinkAdd+0xe8>
   3d564:	add	r1, pc, r1
   3d568:	ldr	r3, [pc, #40]	; 3d598 <rb_dlinkAdd+0xec>
   3d56c:	add	r3, pc, r3
   3d570:	mov	r2, #145	; 0x91
   3d574:	bl	e7e0 <__assert_fail@plt>
   3d578:	.word	0x000030f5
   3d57c:	.word	0x00003092
   3d580:	.word	0x000030f2
   3d584:	.word	0x00003070
   3d588:	.word	0x00003072
   3d58c:	.word	0x000030d2
   3d590:	.word	0x000088e9
   3d594:	.word	0x00003052
   3d598:	.word	0x000030b2

0003d59c <substitution_free>:
   3d59c:	push	{r4, r5, r6, r7, fp, lr}
   3d5a0:	add	fp, sp, #16
   3d5a4:	ldr	r5, [r0]
   3d5a8:	cmp	r5, #0
   3d5ac:	popeq	{r4, r5, r6, r7, fp, pc}
   3d5b0:	mov	r4, r0
   3d5b4:	ldr	r6, [r5]
   3d5b8:	ldr	r7, [r5, #8]
   3d5bc:	mov	r0, r5
   3d5c0:	mov	r1, r4
   3d5c4:	bl	3d5f8 <rb_dlinkDelete>
   3d5c8:	mov	r0, r5
   3d5cc:	bl	d7c0 <rb_free_rb_dlink_node@plt>
   3d5d0:	ldr	r0, [r6]
   3d5d4:	bl	3d6b0 <rb_free>
   3d5d8:	ldr	r0, [r6, #4]
   3d5dc:	bl	3d6b0 <rb_free>
   3d5e0:	mov	r0, r6
   3d5e4:	bl	3d6b0 <rb_free>
   3d5e8:	cmp	r7, #0
   3d5ec:	mov	r5, r7
   3d5f0:	bne	3d5b4 <substitution_free+0x18>
   3d5f4:	pop	{r4, r5, r6, r7, fp, pc}

0003d5f8 <rb_dlinkDelete>:
   3d5f8:	push	{fp, lr}
   3d5fc:	mov	fp, sp
   3d600:	cmp	r0, #0
   3d604:	beq	3d658 <rb_dlinkDelete+0x60>
   3d608:	cmp	r1, #0
   3d60c:	beq	3d678 <rb_dlinkDelete+0x80>
   3d610:	ldr	ip, [r0, #4]
   3d614:	ldr	r3, [r0, #8]
   3d618:	add	r2, r3, #4
   3d61c:	cmp	r3, #0
   3d620:	addeq	r2, r1, #4
   3d624:	str	ip, [r2]
   3d628:	ldmib	r0, {r2, ip}
   3d62c:	cmp	r2, #0
   3d630:	mov	r3, r1
   3d634:	addne	r3, r2, #8
   3d638:	str	ip, [r3]
   3d63c:	mov	r2, #0
   3d640:	str	r2, [r0, #4]
   3d644:	str	r2, [r0, #8]
   3d648:	ldr	r0, [r1, #8]
   3d64c:	sub	r0, r0, #1
   3d650:	str	r0, [r1, #8]
   3d654:	pop	{fp, pc}
   3d658:	ldr	r0, [pc, #56]	; 3d698 <rb_dlinkDelete+0xa0>
   3d65c:	add	r0, pc, r0
   3d660:	ldr	r1, [pc, #52]	; 3d69c <rb_dlinkDelete+0xa4>
   3d664:	add	r1, pc, r1
   3d668:	ldr	r3, [pc, #48]	; 3d6a0 <rb_dlinkDelete+0xa8>
   3d66c:	add	r3, pc, r3
   3d670:	mov	r2, #235	; 0xeb
   3d674:	bl	e7e0 <__assert_fail@plt>
   3d678:	ldr	r0, [pc, #36]	; 3d6a4 <rb_dlinkDelete+0xac>
   3d67c:	add	r0, pc, r0
   3d680:	ldr	r1, [pc, #32]	; 3d6a8 <rb_dlinkDelete+0xb0>
   3d684:	add	r1, pc, r1
   3d688:	ldr	r3, [pc, #28]	; 3d6ac <rb_dlinkDelete+0xb4>
   3d68c:	add	r3, pc, r3
   3d690:	mov	r2, #236	; 0xec
   3d694:	bl	e7e0 <__assert_fail@plt>
   3d698:	.word	0x00002f50
   3d69c:	.word	0x00002f52
   3d6a0:	.word	0x00002fed
   3d6a4:	.word	0x000087c9
   3d6a8:	.word	0x00002f32
   3d6ac:	.word	0x00002fcd

0003d6b0 <rb_free>:
   3d6b0:	cmp	r0, #0
   3d6b4:	bxeq	lr
   3d6b8:	b	d328 <free@plt>

0003d6bc <substitution_parse>:
   3d6bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d6c0:	add	fp, sp, #28
   3d6c4:	sub	sp, sp, #524	; 0x20c
   3d6c8:	str	r1, [sp, #4]
   3d6cc:	mov	r5, r0
   3d6d0:	ldrb	r0, [r0]
   3d6d4:	cmp	r0, #0
   3d6d8:	beq	3d7e4 <substitution_parse+0x128>
   3d6dc:	movw	r1, #511	; 0x1ff
   3d6e0:	add	r7, sp, #8
   3d6e4:	add	r4, r7, r1
   3d6e8:	ldr	sl, [pc, #280]	; 3d808 <substitution_parse+0x14c>
   3d6ec:	add	sl, pc, sl
   3d6f0:	mov	r6, sl
   3d6f4:	sub	r1, r6, sl
   3d6f8:	cmp	r1, #512	; 0x200
   3d6fc:	bge	3d7ec <substitution_parse+0x130>
   3d700:	uxtb	r1, r0
   3d704:	cmp	r1, #36	; 0x24
   3d708:	bne	3d734 <substitution_parse+0x78>
   3d70c:	ldrb	r0, [r5, #1]
   3d710:	cmp	r0, #123	; 0x7b
   3d714:	bne	3d7d4 <substitution_parse+0x118>
   3d718:	mov	r0, r7
   3d71c:	mov	r1, #0
   3d720:	mov	r2, #512	; 0x200
   3d724:	bl	df28 <memset@plt>
   3d728:	add	r5, r5, #2
   3d72c:	mov	r0, r7
   3d730:	b	3d748 <substitution_parse+0x8c>
   3d734:	strb	r0, [r6], #1
   3d738:	b	3d7d4 <substitution_parse+0x118>
   3d73c:	cmp	r0, r4
   3d740:	strbcc	r1, [r0], #1
   3d744:	add	r5, r5, #1
   3d748:	ldrb	r1, [r5]
   3d74c:	cmp	r1, #0
   3d750:	cmpne	r1, #125	; 0x7d
   3d754:	beq	3d764 <substitution_parse+0xa8>
   3d758:	cmp	r1, #36	; 0x24
   3d75c:	bne	3d73c <substitution_parse+0x80>
   3d760:	sub	r5, r5, #1
   3d764:	ldr	r0, [sp, #4]
   3d768:	ldr	r8, [r0]
   3d76c:	cmp	r8, #0
   3d770:	bne	3d784 <substitution_parse+0xc8>
   3d774:	b	3d7c8 <substitution_parse+0x10c>
   3d778:	ldr	r8, [r8, #8]
   3d77c:	cmp	r8, #0
   3d780:	beq	3d7c8 <substitution_parse+0x10c>
   3d784:	ldr	r9, [r8]
   3d788:	ldr	r1, [r9]
   3d78c:	mov	r0, r7
   3d790:	bl	d340 <rb_strcasecmp@plt>
   3d794:	cmp	r0, #0
   3d798:	bne	3d778 <substitution_parse+0xbc>
   3d79c:	add	r8, sl, #512	; 0x200
   3d7a0:	sub	r2, r8, r6
   3d7a4:	ldr	r1, [r9, #4]
   3d7a8:	mov	r0, r6
   3d7ac:	bl	e510 <rb_strlcpy@plt>
   3d7b0:	ldr	r0, [r9, #4]
   3d7b4:	bl	dc94 <strlen@plt>
   3d7b8:	add	r6, r6, r0
   3d7bc:	cmp	r6, r8
   3d7c0:	movw	r0, #511	; 0x1ff
   3d7c4:	addcs	r6, sl, r0
   3d7c8:	ldrb	r0, [r5]
   3d7cc:	cmp	r0, #0
   3d7d0:	beq	3d7ec <substitution_parse+0x130>
   3d7d4:	ldrb	r0, [r5, #1]!
   3d7d8:	cmp	r0, #0
   3d7dc:	bne	3d6f4 <substitution_parse+0x38>
   3d7e0:	b	3d7ec <substitution_parse+0x130>
   3d7e4:	ldr	r6, [pc, #24]	; 3d804 <substitution_parse+0x148>
   3d7e8:	add	r6, pc, r6
   3d7ec:	mov	r0, #0
   3d7f0:	strb	r0, [r6]
   3d7f4:	ldr	r0, [pc, #16]	; 3d80c <substitution_parse+0x150>
   3d7f8:	add	r0, pc, r0
   3d7fc:	sub	sp, fp, #28
   3d800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d804:	.word	0x0003299c
   3d808:	.word	0x00032a98
   3d80c:	.word	0x0003298c

0003d810 <add_isupport>:
   3d810:	push	{r4, r5, r6, sl, fp, lr}
   3d814:	add	fp, sp, #16
   3d818:	mov	r4, r2
   3d81c:	mov	r5, r1
   3d820:	mov	r6, r0
   3d824:	bl	3d840 <rb_malloc>
   3d828:	str	r6, [r0]
   3d82c:	str	r5, [r0, #4]
   3d830:	str	r4, [r0, #8]
   3d834:	add	r1, r0, #12
   3d838:	pop	{r4, r5, r6, sl, fp, lr}
   3d83c:	b	3d860 <rb_dlinkAddTail>

0003d840 <rb_malloc>:
   3d840:	push	{fp, lr}
   3d844:	mov	fp, sp
   3d848:	mov	r0, #1
   3d84c:	mov	r1, #24
   3d850:	bl	cfa4 <calloc@plt>
   3d854:	cmp	r0, #0
   3d858:	popne	{fp, pc}
   3d85c:	bl	d448 <rb_outofmemory@plt>

0003d860 <rb_dlinkAddTail>:
   3d860:	push	{fp, lr}
   3d864:	mov	fp, sp
   3d868:	cmp	r1, #0
   3d86c:	beq	3d8d0 <rb_dlinkAddTail+0x70>
   3d870:	cmp	r0, #0
   3d874:	beq	3d8f0 <rb_dlinkAddTail+0x90>
   3d878:	mov	r2, #0
   3d87c:	str	r2, [r1, #8]
   3d880:	str	r0, [r1]
   3d884:	ldr	r0, [pc, #132]	; 3d910 <rb_dlinkAddTail+0xb0>
   3d888:	ldr	r0, [pc, r0]
   3d88c:	ldr	r2, [r0, #4]
   3d890:	str	r2, [r1, #4]
   3d894:	ldr	r2, [r0, #4]
   3d898:	cmp	r2, #0
   3d89c:	beq	3d8ac <rb_dlinkAddTail+0x4c>
   3d8a0:	add	r2, r2, #8
   3d8a4:	str	r1, [r2]
   3d8a8:	b	3d8bc <rb_dlinkAddTail+0x5c>
   3d8ac:	ldr	r2, [r0]
   3d8b0:	cmp	r2, #0
   3d8b4:	mov	r2, r0
   3d8b8:	streq	r1, [r2]
   3d8bc:	str	r1, [r0, #4]
   3d8c0:	ldr	r1, [r0, #8]
   3d8c4:	add	r1, r1, #1
   3d8c8:	str	r1, [r0, #8]
   3d8cc:	pop	{fp, pc}
   3d8d0:	ldr	r0, [pc, #60]	; 3d914 <rb_dlinkAddTail+0xb4>
   3d8d4:	add	r0, pc, r0
   3d8d8:	ldr	r1, [pc, #56]	; 3d918 <rb_dlinkAddTail+0xb8>
   3d8dc:	add	r1, pc, r1
   3d8e0:	ldr	r3, [pc, #52]	; 3d91c <rb_dlinkAddTail+0xbc>
   3d8e4:	add	r3, pc, r3
   3d8e8:	mov	r2, #211	; 0xd3
   3d8ec:	bl	e7e0 <__assert_fail@plt>
   3d8f0:	ldr	r0, [pc, #40]	; 3d920 <rb_dlinkAddTail+0xc0>
   3d8f4:	add	r0, pc, r0
   3d8f8:	ldr	r1, [pc, #36]	; 3d924 <rb_dlinkAddTail+0xc4>
   3d8fc:	add	r1, pc, r1
   3d900:	ldr	r3, [pc, #32]	; 3d928 <rb_dlinkAddTail+0xc8>
   3d904:	add	r3, pc, r3
   3d908:	mov	r2, #213	; 0xd5
   3d90c:	bl	e7e0 <__assert_fail@plt>
   3d910:	.word	0x0001d130
   3d914:	.word	0x00002cd8
   3d918:	.word	0x00002cda
   3d91c:	.word	0x00002cee
   3d920:	.word	0x00002d1d
   3d924:	.word	0x00002cba
   3d928:	.word	0x00002cce

0003d92c <change_isupport>:
   3d92c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d930:	add	fp, sp, #24
   3d934:	mov	r7, r0
   3d938:	ldr	r0, [pc, #88]	; 3d998 <change_isupport+0x6c>
   3d93c:	ldr	r0, [pc, r0]
   3d940:	ldr	r5, [r0]
   3d944:	mov	r4, #0
   3d948:	cmp	r5, #0
   3d94c:	beq	3d97c <change_isupport+0x50>
   3d950:	mov	r8, r2
   3d954:	mov	r9, r1
   3d958:	ldr	r6, [r5]
   3d95c:	ldr	r0, [r6]
   3d960:	mov	r1, r7
   3d964:	bl	d0c4 <strcmp@plt>
   3d968:	cmp	r0, #0
   3d96c:	beq	3d984 <change_isupport+0x58>
   3d970:	ldr	r5, [r5, #8]
   3d974:	cmp	r5, #0
   3d978:	bne	3d958 <change_isupport+0x2c>
   3d97c:	mov	r0, r4
   3d980:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d984:	str	r9, [r6, #4]
   3d988:	ldr	r4, [r6, #8]
   3d98c:	str	r8, [r6, #8]
   3d990:	mov	r0, r4
   3d994:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d998:	.word	0x0001d07c

0003d99c <delete_isupport>:
   3d99c:	push	{r4, r5, r6, r7, fp, lr}
   3d9a0:	add	fp, sp, #16
   3d9a4:	mov	r4, r0
   3d9a8:	ldr	r0, [pc, #72]	; 3d9f8 <delete_isupport+0x5c>
   3d9ac:	ldr	r0, [pc, r0]
   3d9b0:	ldr	r5, [r0]
   3d9b4:	cmp	r5, #0
   3d9b8:	popeq	{r4, r5, r6, r7, fp, pc}
   3d9bc:	ldr	r6, [r5]
   3d9c0:	ldr	r7, [r5, #8]
   3d9c4:	ldr	r0, [r6]
   3d9c8:	mov	r1, r4
   3d9cc:	bl	d0c4 <strcmp@plt>
   3d9d0:	cmp	r0, #0
   3d9d4:	bne	3d9e8 <delete_isupport+0x4c>
   3d9d8:	mov	r0, r5
   3d9dc:	bl	3d9fc <rb_dlinkDelete>
   3d9e0:	mov	r0, r6
   3d9e4:	bl	3da88 <rb_free>
   3d9e8:	cmp	r7, #0
   3d9ec:	mov	r5, r7
   3d9f0:	bne	3d9bc <delete_isupport+0x20>
   3d9f4:	pop	{r4, r5, r6, r7, fp, pc}
   3d9f8:	.word	0x0001d00c

0003d9fc <rb_dlinkDelete>:
   3d9fc:	cmp	r0, #0
   3da00:	beq	3da50 <rb_dlinkDelete+0x54>
   3da04:	ldr	ip, [pc, #108]	; 3da78 <rb_dlinkDelete+0x7c>
   3da08:	ldr	ip, [pc, ip]
   3da0c:	ldmib	r0, {r2, r3}
   3da10:	add	r1, r3, #4
   3da14:	cmp	r3, #0
   3da18:	addeq	r1, ip, #4
   3da1c:	str	r2, [r1]
   3da20:	ldmib	r0, {r1, r2}
   3da24:	cmp	r1, #0
   3da28:	mov	r3, ip
   3da2c:	addne	r3, r1, #8
   3da30:	str	r2, [r3]
   3da34:	mov	r1, #0
   3da38:	str	r1, [r0, #4]
   3da3c:	str	r1, [r0, #8]
   3da40:	ldr	r0, [ip, #8]
   3da44:	sub	r0, r0, #1
   3da48:	str	r0, [ip, #8]
   3da4c:	bx	lr
   3da50:	push	{fp, lr}
   3da54:	mov	fp, sp
   3da58:	ldr	r0, [pc, #28]	; 3da7c <rb_dlinkDelete+0x80>
   3da5c:	add	r0, pc, r0
   3da60:	ldr	r1, [pc, #24]	; 3da80 <rb_dlinkDelete+0x84>
   3da64:	add	r1, pc, r1
   3da68:	ldr	r3, [pc, #20]	; 3da84 <rb_dlinkDelete+0x88>
   3da6c:	add	r3, pc, r3
   3da70:	mov	r2, #235	; 0xeb
   3da74:	bl	e7e0 <__assert_fail@plt>
   3da78:	.word	0x0001cfb0
   3da7c:	.word	0x00002b50
   3da80:	.word	0x00002b52
   3da84:	.word	0x00002bed

0003da88 <rb_free>:
   3da88:	cmp	r0, #0
   3da8c:	bxeq	lr
   3da90:	b	d328 <free@plt>

0003da94 <show_isupport>:
   3da94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da98:	add	fp, sp, #28
   3da9c:	sub	sp, sp, #532	; 0x214
   3daa0:	mov	r4, r0
   3daa4:	add	r0, r0, #88	; 0x58
   3daa8:	bl	dc94 <strlen@plt>
   3daac:	mov	r5, r0
   3dab0:	str	r4, [sp, #8]
   3dab4:	ldrb	r0, [r4, #65]	; 0x41
   3dab8:	tst	r0, #32
   3dabc:	bne	3dad0 <show_isupport+0x3c>
   3dac0:	cmp	r5, #8
   3dac4:	bgt	3dae8 <show_isupport+0x54>
   3dac8:	mov	r5, #9
   3dacc:	b	3dae8 <show_isupport+0x54>
   3dad0:	cmp	r5, #8
   3dad4:	bgt	3dae8 <show_isupport+0x54>
   3dad8:	ldr	r0, [sp, #8]
   3dadc:	ldrh	r0, [r0, #80]	; 0x50
   3dae0:	cmp	r0, #64	; 0x40
   3dae4:	movne	r5, #9
   3dae8:	ldr	r0, [pc, #384]	; 3dc70 <show_isupport+0x1dc>
   3daec:	ldr	r0, [pc, r0]
   3daf0:	add	r0, r0, #88	; 0x58
   3daf4:	bl	dc94 <strlen@plt>
   3daf8:	mov	r9, #0
   3dafc:	strb	r9, [sp, #16]
   3db00:	ldr	r1, [pc, #364]	; 3dc74 <show_isupport+0x1e0>
   3db04:	ldr	r1, [pc, r1]
   3db08:	ldr	r8, [r1]
   3db0c:	cmp	r8, #0
   3db10:	beq	3dc68 <show_isupport+0x1d4>
   3db14:	add	r0, r5, r0
   3db18:	add	r6, r0, #33	; 0x21
   3db1c:	str	r6, [sp, #4]
   3db20:	ldr	r4, [r8]
   3db24:	ldr	r1, [r4, #4]
   3db28:	ldr	r0, [r4, #8]
   3db2c:	blx	r1
   3db30:	cmp	r0, #0
   3db34:	beq	3dc3c <show_isupport+0x1a8>
   3db38:	mov	r5, r0
   3db3c:	ldr	r0, [r4]
   3db40:	bl	dc94 <strlen@plt>
   3db44:	mov	r7, r0
   3db48:	ldrb	r0, [r5]
   3db4c:	cmp	r0, #0
   3db50:	beq	3db64 <show_isupport+0xd0>
   3db54:	mov	r0, r5
   3db58:	bl	dc94 <strlen@plt>
   3db5c:	add	r0, r0, #1
   3db60:	b	3db68 <show_isupport+0xd4>
   3db64:	mov	r0, #0
   3db68:	add	sl, r6, #1
   3db6c:	cmp	r9, #0
   3db70:	mov	r1, r6
   3db74:	movne	r1, sl
   3db78:	add	r2, r0, r7
   3db7c:	add	r0, r9, #1
   3db80:	cmp	r0, #12
   3db84:	str	r2, [sp, #12]
   3db88:	addls	r0, r1, r2
   3db8c:	cmpls	r0, #512	; 0x200
   3db90:	bcc	3dbc0 <show_isupport+0x12c>
   3db94:	ldr	r0, [sp, #8]
   3db98:	mov	r1, #5
   3db9c:	ldr	r2, [pc, #212]	; 3dc78 <show_isupport+0x1e4>
   3dba0:	add	r2, pc, r2
   3dba4:	add	r7, sp, #16
   3dba8:	mov	r3, r7
   3dbac:	bl	dc88 <sendto_one_numeric@plt>
   3dbb0:	mov	r9, #0
   3dbb4:	strb	r9, [sp, #16]
   3dbb8:	ldr	r6, [sp, #4]
   3dbbc:	b	3dbf0 <show_isupport+0x15c>
   3dbc0:	cmp	r9, #0
   3dbc4:	beq	3dbe8 <show_isupport+0x154>
   3dbc8:	add	r7, sp, #16
   3dbcc:	mov	r0, r7
   3dbd0:	ldr	r1, [pc, #164]	; 3dc7c <show_isupport+0x1e8>
   3dbd4:	add	r1, pc, r1
   3dbd8:	mov	r2, #512	; 0x200
   3dbdc:	bl	e7d4 <rb_strlcat@plt>
   3dbe0:	mov	r6, sl
   3dbe4:	b	3dbf0 <show_isupport+0x15c>
   3dbe8:	mov	r9, #0
   3dbec:	add	r7, sp, #16
   3dbf0:	ldr	r1, [r4]
   3dbf4:	mov	r0, r7
   3dbf8:	mov	r2, #512	; 0x200
   3dbfc:	bl	e7d4 <rb_strlcat@plt>
   3dc00:	ldrb	r0, [r5]
   3dc04:	cmp	r0, #0
   3dc08:	beq	3dc30 <show_isupport+0x19c>
   3dc0c:	mov	r0, r7
   3dc10:	ldr	r1, [pc, #104]	; 3dc80 <show_isupport+0x1ec>
   3dc14:	add	r1, pc, r1
   3dc18:	mov	r2, #512	; 0x200
   3dc1c:	bl	e7d4 <rb_strlcat@plt>
   3dc20:	mov	r0, r7
   3dc24:	mov	r1, r5
   3dc28:	mov	r2, #512	; 0x200
   3dc2c:	bl	e7d4 <rb_strlcat@plt>
   3dc30:	ldr	r0, [sp, #12]
   3dc34:	add	r6, r6, r0
   3dc38:	add	r9, r9, #1
   3dc3c:	ldr	r8, [r8, #8]
   3dc40:	cmp	r8, #0
   3dc44:	bne	3db20 <show_isupport+0x8c>
   3dc48:	cmp	r9, #0
   3dc4c:	beq	3dc68 <show_isupport+0x1d4>
   3dc50:	ldr	r2, [pc, #44]	; 3dc84 <show_isupport+0x1f0>
   3dc54:	add	r2, pc, r2
   3dc58:	add	r3, sp, #16
   3dc5c:	ldr	r0, [sp, #8]
   3dc60:	mov	r1, #5
   3dc64:	bl	dc88 <sendto_one_numeric@plt>
   3dc68:	sub	sp, fp, #28
   3dc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dc70:	.word	0x0001d06c
   3dc74:	.word	0x0001ceb4
   3dc78:	.word	0x00009d28
   3dc7c:	.word	0x00008594
   3dc80:	.word	0x00002faf
   3dc84:	.word	0x00009c74

0003dc88 <isupport_intptr>:
   3dc88:	push	{r4, sl, fp, lr}
   3dc8c:	add	fp, sp, #8
   3dc90:	ldr	r3, [r0]
   3dc94:	ldr	r4, [pc, #28]	; 3dcb8 <isupport_intptr+0x30>
   3dc98:	add	r4, pc, r4
   3dc9c:	ldr	r2, [pc, #24]	; 3dcbc <isupport_intptr+0x34>
   3dca0:	add	r2, pc, r2
   3dca4:	mov	r0, r4
   3dca8:	mov	r1, #15
   3dcac:	bl	de74 <snprintf@plt>
   3dcb0:	mov	r0, r4
   3dcb4:	pop	{r4, sl, fp, pc}
   3dcb8:	.word	0x000326f0
   3dcbc:	.word	0x00002c34

0003dcc0 <isupport_boolean>:
   3dcc0:	ldr	r1, [r0]
   3dcc4:	ldr	r0, [pc, #12]	; 3dcd8 <isupport_boolean+0x18>
   3dcc8:	add	r0, pc, r0
   3dccc:	cmp	r1, #0
   3dcd0:	moveq	r0, r1
   3dcd4:	bx	lr
   3dcd8:	.word	0x00007b3d

0003dcdc <isupport_string>:
   3dcdc:	bx	lr

0003dce0 <isupport_stringptr>:
   3dce0:	ldr	r0, [r0]
   3dce4:	bx	lr

0003dce8 <isupport_umode>:
   3dce8:	ldrb	r1, [r0]
   3dcec:	ldr	r2, [pc, #28]	; 3dd10 <isupport_umode+0x28>
   3dcf0:	ldr	r2, [pc, r2]
   3dcf4:	ldr	r1, [r2, r1, lsl #2]
   3dcf8:	ldr	r2, [pc, #20]	; 3dd14 <isupport_umode+0x2c>
   3dcfc:	ldr	r2, [pc, r2]
   3dd00:	ldr	r2, [r2, #216]	; 0xd8
   3dd04:	tst	r1, r2
   3dd08:	movne	r0, #0
   3dd0c:	bx	lr
   3dd10:	.word	0x0001cc80
   3dd14:	.word	0x0001ce80

0003dd18 <init_isupport>:
   3dd18:	push	{r4, r5, r6, sl, fp, lr}
   3dd1c:	add	fp, sp, #16
   3dd20:	ldr	r4, [pc, #488]	; 3df10 <init_isupport+0x1f8>
   3dd24:	ldr	r4, [pc, r4]
   3dd28:	ldr	r0, [pc, #484]	; 3df14 <init_isupport+0x1fc>
   3dd2c:	add	r0, pc, r0
   3dd30:	ldr	r2, [pc, #480]	; 3df18 <init_isupport+0x200>
   3dd34:	add	r2, pc, r2
   3dd38:	mov	r1, r4
   3dd3c:	bl	e4a4 <add_isupport@plt>
   3dd40:	ldr	r5, [pc, #468]	; 3df1c <init_isupport+0x204>
   3dd44:	ldr	r5, [pc, r5]
   3dd48:	ldr	r6, [pc, #464]	; 3df20 <init_isupport+0x208>
   3dd4c:	ldr	r6, [pc, r6]
   3dd50:	ldr	r0, [pc, #460]	; 3df24 <init_isupport+0x20c>
   3dd54:	add	r0, pc, r0
   3dd58:	mov	r1, r5
   3dd5c:	mov	r2, r6
   3dd60:	bl	e4a4 <add_isupport@plt>
   3dd64:	add	r2, r6, #4
   3dd68:	ldr	r0, [pc, #440]	; 3df28 <init_isupport+0x210>
   3dd6c:	add	r0, pc, r0
   3dd70:	mov	r1, r5
   3dd74:	bl	e4a4 <add_isupport@plt>
   3dd78:	ldr	r0, [pc, #428]	; 3df2c <init_isupport+0x214>
   3dd7c:	add	r0, pc, r0
   3dd80:	ldr	r1, [pc, #424]	; 3df30 <init_isupport+0x218>
   3dd84:	add	r1, pc, r1
   3dd88:	mov	r2, #0
   3dd8c:	bl	e4a4 <add_isupport@plt>
   3dd90:	ldr	r0, [pc, #412]	; 3df34 <init_isupport+0x21c>
   3dd94:	add	r0, pc, r0
   3dd98:	ldr	r1, [pc, #408]	; 3df38 <init_isupport+0x220>
   3dd9c:	add	r1, pc, r1
   3dda0:	mov	r2, #0
   3dda4:	bl	e4a4 <add_isupport@plt>
   3dda8:	ldr	r0, [pc, #396]	; 3df3c <init_isupport+0x224>
   3ddac:	add	r0, pc, r0
   3ddb0:	ldr	r2, [pc, #392]	; 3df40 <init_isupport+0x228>
   3ddb4:	add	r2, pc, r2
   3ddb8:	mov	r1, r4
   3ddbc:	bl	e4a4 <add_isupport@plt>
   3ddc0:	ldr	r0, [pc, #380]	; 3df44 <init_isupport+0x22c>
   3ddc4:	add	r0, pc, r0
   3ddc8:	ldr	r1, [pc, #376]	; 3df48 <init_isupport+0x230>
   3ddcc:	add	r1, pc, r1
   3ddd0:	mov	r2, #0
   3ddd4:	bl	e4a4 <add_isupport@plt>
   3ddd8:	ldr	r5, [pc, #364]	; 3df4c <init_isupport+0x234>
   3dddc:	ldr	r5, [pc, r5]
   3dde0:	ldr	r0, [pc, #360]	; 3df50 <init_isupport+0x238>
   3dde4:	add	r0, pc, r0
   3dde8:	ldr	r2, [pc, #356]	; 3df54 <init_isupport+0x23c>
   3ddec:	add	r2, pc, r2
   3ddf0:	mov	r1, r5
   3ddf4:	bl	e4a4 <add_isupport@plt>
   3ddf8:	ldr	r0, [pc, #344]	; 3df58 <init_isupport+0x240>
   3ddfc:	ldr	r0, [pc, r0]
   3de00:	add	r2, r0, #12
   3de04:	ldr	r1, [pc, #336]	; 3df5c <init_isupport+0x244>
   3de08:	ldr	r1, [pc, r1]
   3de0c:	ldr	r0, [pc, #332]	; 3df60 <init_isupport+0x248>
   3de10:	add	r0, pc, r0
   3de14:	bl	e4a4 <add_isupport@plt>
   3de18:	ldr	r0, [pc, #324]	; 3df64 <init_isupport+0x24c>
   3de1c:	add	r0, pc, r0
   3de20:	ldr	r2, [pc, #320]	; 3df68 <init_isupport+0x250>
   3de24:	add	r2, pc, r2
   3de28:	mov	r1, r4
   3de2c:	bl	e4a4 <add_isupport@plt>
   3de30:	ldr	r0, [pc, #308]	; 3df6c <init_isupport+0x254>
   3de34:	add	r0, pc, r0
   3de38:	ldr	r2, [pc, #304]	; 3df70 <init_isupport+0x258>
   3de3c:	add	r2, pc, r2
   3de40:	mov	r1, r4
   3de44:	bl	e4a4 <add_isupport@plt>
   3de48:	ldr	r0, [pc, #292]	; 3df74 <init_isupport+0x25c>
   3de4c:	add	r0, pc, r0
   3de50:	ldr	r1, [pc, #288]	; 3df78 <init_isupport+0x260>
   3de54:	add	r1, pc, r1
   3de58:	mov	r2, #0
   3de5c:	bl	e4a4 <add_isupport@plt>
   3de60:	ldr	r0, [pc, #276]	; 3df7c <init_isupport+0x264>
   3de64:	add	r0, pc, r0
   3de68:	ldr	r2, [pc, #272]	; 3df80 <init_isupport+0x268>
   3de6c:	add	r2, pc, r2
   3de70:	mov	r1, r5
   3de74:	bl	e4a4 <add_isupport@plt>
   3de78:	ldr	r0, [pc, #260]	; 3df84 <init_isupport+0x26c>
   3de7c:	add	r0, pc, r0
   3de80:	ldr	r2, [pc, #256]	; 3df88 <init_isupport+0x270>
   3de84:	add	r2, pc, r2
   3de88:	mov	r1, r5
   3de8c:	bl	e4a4 <add_isupport@plt>
   3de90:	ldr	r0, [pc, #244]	; 3df8c <init_isupport+0x274>
   3de94:	add	r0, pc, r0
   3de98:	ldr	r2, [pc, #240]	; 3df90 <init_isupport+0x278>
   3de9c:	add	r2, pc, r2
   3dea0:	mov	r1, r5
   3dea4:	bl	e4a4 <add_isupport@plt>
   3dea8:	ldr	r1, [pc, #228]	; 3df94 <init_isupport+0x27c>
   3deac:	ldr	r1, [pc, r1]
   3deb0:	ldr	r0, [pc, #224]	; 3df98 <init_isupport+0x280>
   3deb4:	add	r0, pc, r0
   3deb8:	ldr	r2, [pc, #220]	; 3df9c <init_isupport+0x284>
   3debc:	add	r2, pc, r2
   3dec0:	bl	e4a4 <add_isupport@plt>
   3dec4:	ldr	r0, [pc, #212]	; 3dfa0 <init_isupport+0x288>
   3dec8:	add	r0, pc, r0
   3decc:	ldr	r1, [pc, #208]	; 3dfa4 <init_isupport+0x28c>
   3ded0:	add	r1, pc, r1
   3ded4:	mov	r2, #0
   3ded8:	bl	e4a4 <add_isupport@plt>
   3dedc:	ldr	r0, [pc, #196]	; 3dfa8 <init_isupport+0x290>
   3dee0:	add	r0, pc, r0
   3dee4:	ldr	r1, [pc, #192]	; 3dfac <init_isupport+0x294>
   3dee8:	add	r1, pc, r1
   3deec:	mov	r2, #0
   3def0:	bl	e4a4 <add_isupport@plt>
   3def4:	ldr	r0, [pc, #180]	; 3dfb0 <init_isupport+0x298>
   3def8:	add	r0, pc, r0
   3defc:	ldr	r2, [pc, #176]	; 3dfb4 <init_isupport+0x29c>
   3df00:	add	r2, pc, r2
   3df04:	mov	r1, r4
   3df08:	pop	{r4, r5, r6, sl, fp, lr}
   3df0c:	b	3d810 <add_isupport>
   3df10:	.word	0x0001cddc
   3df14:	.word	0x00009bbd
   3df18:	.word	0x00032664
   3df1c:	.word	0x0001cb10
   3df20:	.word	0x0001cdcc
   3df24:	.word	0x00009b9f
   3df28:	.word	0x00009b8f
   3df2c:	.word	0x00009b85
   3df30:	.word	0x0000022c
   3df34:	.word	0x00009b77
   3df38:	.word	0x000002bc
   3df3c:	.word	0x00009b69
   3df40:	.word	0x00009b68
   3df44:	.word	0x00009b5f
   3df48:	.word	0x000002e8
   3df4c:	.word	0x0001caa8
   3df50:	.word	0x00009b21
   3df54:	.word	0x0001f3d0
   3df58:	.word	0x0001cb54
   3df5c:	.word	0x0001cbd4
   3df60:	.word	0x00009b1b
   3df64:	.word	0x00009b17
   3df68:	.word	0x00009afc
   3df6c:	.word	0x00009b09
   3df70:	.word	0x00009b0d
   3df74:	.word	0x00009b08
   3df78:	.word	0x000002ec
   3df7c:	.word	0x00009aed
   3df80:	.word	0x0001f35c
   3df84:	.word	0x00009ae0
   3df88:	.word	0x0001f33c
   3df8c:	.word	0x00009ad3
   3df90:	.word	0x0001f328
   3df94:	.word	0x0001ca88
   3df98:	.word	0x00009abc
   3df9c:	.word	0x000037f1
   3dfa0:	.word	0x00009aad
   3dfa4:	.word	0x000002b8
   3dfa8:	.word	0x00009a9d
   3dfac:	.word	0x000002f0
   3dfb0:	.word	0x00009a8c
   3dfb4:	.word	0x00009a8e

0003dfb8 <isupport_chanmodes>:
   3dfb8:	push	{r4, sl, fp, lr}
   3dfbc:	add	fp, sp, #8
   3dfc0:	sub	sp, sp, #16
   3dfc4:	ldr	r0, [pc, #116]	; 3e040 <isupport_chanmodes+0x88>
   3dfc8:	ldr	r0, [pc, r0]
   3dfcc:	ldm	r0, {r1, r2}
   3dfd0:	ldr	r0, [r0, #8]
   3dfd4:	ldr	ip, [pc, #104]	; 3e044 <isupport_chanmodes+0x8c>
   3dfd8:	ldr	ip, [pc, ip]
   3dfdc:	ldr	r4, [pc, #100]	; 3e048 <isupport_chanmodes+0x90>
   3dfe0:	add	r4, pc, r4
   3dfe4:	ldr	r3, [pc, #96]	; 3e04c <isupport_chanmodes+0x94>
   3dfe8:	add	r3, pc, r3
   3dfec:	cmp	r0, #0
   3dff0:	moveq	r3, r4
   3dff4:	ldr	r0, [pc, #84]	; 3e050 <isupport_chanmodes+0x98>
   3dff8:	add	r0, pc, r0
   3dffc:	cmp	r2, #0
   3e000:	moveq	r0, r4
   3e004:	stm	sp, {r0, r3, ip}
   3e008:	ldr	r3, [pc, #68]	; 3e054 <isupport_chanmodes+0x9c>
   3e00c:	add	r3, pc, r3
   3e010:	cmp	r1, #0
   3e014:	moveq	r3, r4
   3e018:	ldr	r4, [pc, #56]	; 3e058 <isupport_chanmodes+0xa0>
   3e01c:	add	r4, pc, r4
   3e020:	ldr	r2, [pc, #52]	; 3e05c <isupport_chanmodes+0xa4>
   3e024:	add	r2, pc, r2
   3e028:	mov	r0, r4
   3e02c:	mov	r1, #300	; 0x12c
   3e030:	bl	de74 <snprintf@plt>
   3e034:	mov	r0, r4
   3e038:	sub	sp, fp, #8
   3e03c:	pop	{r4, sl, fp, pc}
   3e040:	.word	0x0001cb50
   3e044:	.word	0x0001c908
   3e048:	.word	0x00007825
   3e04c:	.word	0x00005d7f
   3e050:	.word	0x00008c48
   3e054:	.word	0x0000616d
   3e058:	.word	0x0003257c
   3e05c:	.word	0x0000996e

0003e060 <isupport_chanlimit>:
   3e060:	push	{r4, sl, fp, lr}
   3e064:	add	fp, sp, #8
   3e068:	sub	sp, sp, #8
   3e06c:	ldr	r0, [pc, #56]	; 3e0ac <isupport_chanlimit+0x4c>
   3e070:	ldr	r0, [pc, r0]
   3e074:	ldr	r0, [r0, #32]
   3e078:	str	r0, [sp]
   3e07c:	ldr	r4, [pc, #44]	; 3e0b0 <isupport_chanlimit+0x50>
   3e080:	add	r4, pc, r4
   3e084:	ldr	r2, [pc, #40]	; 3e0b4 <isupport_chanlimit+0x54>
   3e088:	add	r2, pc, r2
   3e08c:	ldr	r3, [pc, #36]	; 3e0b8 <isupport_chanlimit+0x58>
   3e090:	add	r3, pc, r3
   3e094:	mov	r0, r4
   3e098:	movw	r1, #542	; 0x21e
   3e09c:	bl	de74 <snprintf@plt>
   3e0a0:	mov	r0, r4
   3e0a4:	sub	sp, fp, #8
   3e0a8:	pop	{r4, sl, fp, pc}
   3e0ac:	.word	0x0001caa8
   3e0b0:	.word	0x00032644
   3e0b4:	.word	0x0000991f
   3e0b8:	.word	0x00032308

0003e0bc <isupport_maxlist>:
   3e0bc:	push	{r4, sl, fp, lr}
   3e0c0:	add	fp, sp, #8
   3e0c4:	sub	sp, sp, #8
   3e0c8:	ldr	r0, [pc, #96]	; 3e130 <isupport_maxlist+0x74>
   3e0cc:	ldr	r0, [pc, r0]
   3e0d0:	ldm	r0, {r1, r2}
   3e0d4:	ldr	r0, [r0, #24]
   3e0d8:	ldr	r4, [pc, #84]	; 3e134 <isupport_maxlist+0x78>
   3e0dc:	add	r4, pc, r4
   3e0e0:	ldr	r3, [pc, #80]	; 3e138 <isupport_maxlist+0x7c>
   3e0e4:	add	r3, pc, r3
   3e0e8:	cmp	r2, #0
   3e0ec:	moveq	r3, r4
   3e0f0:	str	r3, [sp]
   3e0f4:	str	r0, [sp, #4]
   3e0f8:	ldr	r3, [pc, #60]	; 3e13c <isupport_maxlist+0x80>
   3e0fc:	add	r3, pc, r3
   3e100:	cmp	r1, #0
   3e104:	moveq	r3, r4
   3e108:	ldr	r4, [pc, #48]	; 3e140 <isupport_maxlist+0x84>
   3e10c:	add	r4, pc, r4
   3e110:	ldr	r2, [pc, #44]	; 3e144 <isupport_maxlist+0x88>
   3e114:	add	r2, pc, r2
   3e118:	mov	r0, r4
   3e11c:	mov	r1, #30
   3e120:	bl	de74 <snprintf@plt>
   3e124:	mov	r0, r4
   3e128:	sub	sp, fp, #8
   3e12c:	pop	{r4, sl, fp, pc}
   3e130:	.word	0x0001ca4c
   3e134:	.word	0x00007729
   3e138:	.word	0x00008b5c
   3e13c:	.word	0x0000607d
   3e140:	.word	0x000327d6
   3e144:	.word	0x0000988f

0003e148 <isupport_nicklen>:
   3e148:	push	{r4, sl, fp, lr}
   3e14c:	add	fp, sp, #8
   3e150:	ldr	r0, [pc, #44]	; 3e184 <isupport_nicklen+0x3c>
   3e154:	ldr	r0, [pc, r0]
   3e158:	ldr	r0, [r0, #360]	; 0x168
   3e15c:	sub	r3, r0, #1
   3e160:	ldr	r4, [pc, #32]	; 3e188 <isupport_nicklen+0x40>
   3e164:	add	r4, pc, r4
   3e168:	ldr	r2, [pc, #28]	; 3e18c <isupport_nicklen+0x44>
   3e16c:	add	r2, pc, r2
   3e170:	mov	r0, r4
   3e174:	mov	r1, #200	; 0xc8
   3e178:	bl	de74 <snprintf@plt>
   3e17c:	mov	r0, r4
   3e180:	pop	{r4, sl, fp, pc}
   3e184:	.word	0x0001ca28
   3e188:	.word	0x0003279c
   3e18c:	.word	0x0000278f

0003e190 <isupport_targmax>:
   3e190:	push	{r4, sl, fp, lr}
   3e194:	add	fp, sp, #8
   3e198:	sub	sp, sp, #8
   3e19c:	ldr	r0, [pc, #48]	; 3e1d4 <isupport_targmax+0x44>
   3e1a0:	ldr	r0, [pc, r0]
   3e1a4:	ldr	r3, [r0, #228]	; 0xe4
   3e1a8:	str	r3, [sp]
   3e1ac:	ldr	r4, [pc, #36]	; 3e1d8 <isupport_targmax+0x48>
   3e1b0:	add	r4, pc, r4
   3e1b4:	ldr	r2, [pc, #32]	; 3e1dc <isupport_targmax+0x4c>
   3e1b8:	add	r2, pc, r2
   3e1bc:	mov	r0, r4
   3e1c0:	mov	r1, #200	; 0xc8
   3e1c4:	bl	de74 <snprintf@plt>
   3e1c8:	mov	r0, r4
   3e1cc:	sub	sp, fp, #8
   3e1d0:	pop	{r4, sl, fp, pc}
   3e1d4:	.word	0x0001c9dc
   3e1d8:	.word	0x00032818
   3e1dc:	.word	0x000097f5

0003e1e0 <isupport_extban>:
   3e1e0:	push	{r4, sl, fp, lr}
   3e1e4:	add	fp, sp, #8
   3e1e8:	bl	e360 <get_extban_string@plt>
   3e1ec:	mov	r4, #0
   3e1f0:	cmp	r0, #0
   3e1f4:	beq	3e224 <isupport_extban+0x44>
   3e1f8:	mov	r3, r0
   3e1fc:	ldrb	r0, [r0]
   3e200:	cmp	r0, #0
   3e204:	beq	3e224 <isupport_extban+0x44>
   3e208:	ldr	r4, [pc, #28]	; 3e22c <isupport_extban+0x4c>
   3e20c:	add	r4, pc, r4
   3e210:	ldr	r2, [pc, #24]	; 3e230 <isupport_extban+0x50>
   3e214:	add	r2, pc, r2
   3e218:	mov	r0, r4
   3e21c:	mov	r1, #200	; 0xc8
   3e220:	bl	de74 <snprintf@plt>
   3e224:	mov	r0, r4
   3e228:	pop	{r4, sl, fp, pc}
   3e22c:	.word	0x00032884
   3e230:	.word	0x000097dd

0003e234 <chantypes_update>:
   3e234:	push	{r4, r5, fp, lr}
   3e238:	add	fp, sp, #8
   3e23c:	ldr	r4, [pc, #60]	; 3e280 <chantypes_update+0x4c>
   3e240:	add	r4, pc, r4
   3e244:	mov	r5, #0
   3e248:	mov	r0, r4
   3e24c:	mov	r1, #0
   3e250:	mov	r2, #512	; 0x200
   3e254:	bl	df28 <memset@plt>
   3e258:	ldr	r0, [pc, #36]	; 3e284 <chantypes_update+0x50>
   3e25c:	ldr	r0, [pc, r0]
   3e260:	add	r1, r0, r5, lsl #2
   3e264:	ldrb	r1, [r1, #1]
   3e268:	tst	r1, #2
   3e26c:	strbne	r5, [r4], #1
   3e270:	add	r5, r5, #1
   3e274:	cmp	r5, #256	; 0x100
   3e278:	popeq	{r4, r5, fp, pc}
   3e27c:	b	3e260 <chantypes_update+0x2c>
   3e280:	.word	0x00032158
   3e284:	.word	0x0001c79c

0003e288 <find_allowing_channel>:
   3e288:	push	{r4, r5, r6, r7, fp, lr}
   3e28c:	add	fp, sp, #16
   3e290:	ldr	r0, [r0, #24]
   3e294:	ldr	r6, [r0]
   3e298:	mov	r4, #0
   3e29c:	cmp	r6, #0
   3e2a0:	beq	3e2ec <find_allowing_channel+0x64>
   3e2a4:	mov	r5, r1
   3e2a8:	ldr	r7, [r6]
   3e2ac:	cmp	r7, #0
   3e2b0:	cmpne	r5, #0
   3e2b4:	beq	3e2e0 <find_allowing_channel+0x58>
   3e2b8:	ldr	r0, [r7, #44]	; 0x2c
   3e2bc:	ands	r0, r0, #3
   3e2c0:	ldrne	r0, [r5, #24]
   3e2c4:	cmpne	r0, #0
   3e2c8:	beq	3e2e0 <find_allowing_channel+0x58>
   3e2cc:	ldr	r0, [r7, #36]	; 0x24
   3e2d0:	mov	r1, r5
   3e2d4:	bl	d958 <find_channel_membership@plt>
   3e2d8:	cmp	r0, #0
   3e2dc:	bne	3e2f4 <find_allowing_channel+0x6c>
   3e2e0:	ldr	r6, [r6, #8]
   3e2e4:	cmp	r6, #0
   3e2e8:	bne	3e2a8 <find_allowing_channel+0x20>
   3e2ec:	mov	r0, r4
   3e2f0:	pop	{r4, r5, r6, r7, fp, pc}
   3e2f4:	ldr	r4, [r7, #36]	; 0x24
   3e2f8:	mov	r0, r4
   3e2fc:	pop	{r4, r5, r6, r7, fp, pc}

0003e300 <add_target>:
   3e300:	push	{r4, r5, r6, sl, fp, lr}
   3e304:	add	fp, sp, #16
   3e308:	cmp	r0, r1
   3e30c:	beq	3e36c <add_target+0x6c>
   3e310:	mov	r5, r1
   3e314:	mov	r4, r0
   3e318:	ldrb	r0, [r1, #56]	; 0x38
   3e31c:	tst	r0, #64	; 0x40
   3e320:	bne	3e36c <add_target+0x6c>
   3e324:	ldr	r0, [r4, #432]	; 0x1b0
   3e328:	ldr	r6, [r0, #416]	; 0x1a0
   3e32c:	bl	d07c <rb_current_time@plt>
   3e330:	cmp	r6, r0
   3e334:	ble	3e344 <add_target+0x44>
   3e338:	ldrb	r0, [r5, #57]	; 0x39
   3e33c:	tst	r0, #16
   3e340:	bne	3e36c <add_target+0x6c>
   3e344:	ldrb	r0, [r5, #396]!	; 0x18c
   3e348:	cmp	r0, #0
   3e34c:	subeq	r5, r5, #308	; 0x134
   3e350:	mov	r0, r5
   3e354:	mov	r1, #32
   3e358:	bl	da84 <fnv_hash_upper@plt>
   3e35c:	mov	r1, r0
   3e360:	mov	r0, r4
   3e364:	pop	{r4, r5, r6, sl, fp, lr}
   3e368:	b	3e374 <add_hashed_target>
   3e36c:	mov	r0, #1
   3e370:	pop	{r4, r5, r6, sl, fp, pc}

0003e374 <add_hashed_target>:
   3e374:	push	{r4, r5, r6, r7, fp, lr}
   3e378:	add	fp, sp, #16
   3e37c:	sub	sp, sp, #8
   3e380:	mov	r5, r1
   3e384:	mov	r4, r0
   3e388:	ldr	r6, [r0, #432]	; 0x1b0
   3e38c:	add	r1, r6, #352	; 0x160
   3e390:	mov	r0, #0
   3e394:	ldr	r2, [r1, r0, lsl #2]
   3e398:	cmp	r2, r5
   3e39c:	beq	3e3d8 <add_hashed_target+0x64>
   3e3a0:	add	r0, r0, #1
   3e3a4:	cmp	r0, #15
   3e3a8:	bcc	3e394 <add_hashed_target+0x20>
   3e3ac:	ldr	r0, [r6, #412]	; 0x19c
   3e3b0:	cmp	r0, #9
   3e3b4:	bhi	3e3fc <add_hashed_target+0x88>
   3e3b8:	mov	r7, r4
   3e3bc:	ldr	r0, [r7, #64]!	; 0x40
   3e3c0:	tst	r0, #65536	; 0x10000
   3e3c4:	bne	3e418 <add_hashed_target+0xa4>
   3e3c8:	ldr	r1, [r7, #4]
   3e3cc:	orr	r0, r0, #65536	; 0x10000
   3e3d0:	strd	r0, [r7]
   3e3d4:	b	3e45c <add_hashed_target+0xe8>
   3e3d8:	cmp	r0, #0
   3e3dc:	beq	3e3f4 <add_hashed_target+0x80>
   3e3e0:	add	r1, r6, r0, lsl #2
   3e3e4:	ldr	r2, [r1, #348]	; 0x15c
   3e3e8:	str	r2, [r1, #352]	; 0x160
   3e3ec:	subs	r0, r0, #1
   3e3f0:	bgt	3e3e0 <add_hashed_target+0x6c>
   3e3f4:	str	r5, [r6, #352]	; 0x160
   3e3f8:	b	3e4a0 <add_hashed_target+0x12c>
   3e3fc:	bl	d07c <rb_current_time@plt>
   3e400:	ldr	r1, [r4, #432]	; 0x1b0
   3e404:	str	r0, [r1, #416]	; 0x1a0
   3e408:	ldr	r0, [r4, #64]	; 0x40
   3e40c:	orr	r0, r0, #65536	; 0x10000
   3e410:	str	r0, [r4, #64]	; 0x40
   3e414:	b	3e468 <add_hashed_target+0xf4>
   3e418:	bl	d07c <rb_current_time@plt>
   3e41c:	ldr	r1, [r4, #432]	; 0x1b0
   3e420:	ldr	r2, [r1, #416]	; 0x1a0
   3e424:	sub	r0, r0, r2
   3e428:	add	r2, r0, #59	; 0x3b
   3e42c:	cmp	r2, #119	; 0x77
   3e430:	bcc	3e4b0 <add_hashed_target+0x13c>
   3e434:	movw	r2, #34953	; 0x8889
   3e438:	movt	r2, #34952	; 0x8888
   3e43c:	smmla	r0, r0, r2, r0
   3e440:	asr	r2, r0, #5
   3e444:	add	r0, r2, r0, lsr #31
   3e448:	ldr	r2, [r1, #412]	; 0x19c
   3e44c:	add	r0, r2, r0
   3e450:	cmp	r0, #10
   3e454:	movcs	r0, #10
   3e458:	str	r0, [r1, #412]	; 0x19c
   3e45c:	bl	d07c <rb_current_time@plt>
   3e460:	ldr	r1, [r4, #432]	; 0x1b0
   3e464:	str	r0, [r1, #416]	; 0x1a0
   3e468:	mov	r0, #0
   3e46c:	add	r1, r6, r0, lsl #2
   3e470:	ldr	r2, [r1, #404]	; 0x194
   3e474:	str	r2, [r1, #408]	; 0x198
   3e478:	sub	r1, r0, #1
   3e47c:	add	r0, r0, #14
   3e480:	cmp	r0, #1
   3e484:	mov	r0, r1
   3e488:	bhi	3e46c <add_hashed_target+0xf8>
   3e48c:	str	r5, [r6, #352]	; 0x160
   3e490:	ldr	r0, [r4, #432]	; 0x1b0
   3e494:	ldr	r1, [r0, #412]	; 0x19c
   3e498:	sub	r1, r1, #1
   3e49c:	str	r1, [r0, #412]	; 0x19c
   3e4a0:	mov	r5, #1
   3e4a4:	mov	r0, r5
   3e4a8:	sub	sp, fp, #16
   3e4ac:	pop	{r4, r5, r6, r7, fp, pc}
   3e4b0:	ldr	r0, [r1, #412]	; 0x19c
   3e4b4:	cmp	r0, #0
   3e4b8:	bne	3e468 <add_hashed_target+0xf4>
   3e4bc:	ldr	r0, [pc, #140]	; 3e550 <add_hashed_target+0x1dc>
   3e4c0:	ldr	r0, [pc, r0]
   3e4c4:	ldr	r1, [r0, #124]	; 0x7c
   3e4c8:	add	r1, r1, #1
   3e4cc:	str	r1, [r0, #124]	; 0x7c
   3e4d0:	movw	r0, #291	; 0x123
   3e4d4:	add	r0, r4, r0
   3e4d8:	bl	d61c <add_tgchange@plt>
   3e4dc:	ldr	r0, [r7]
   3e4e0:	tst	r0, #262144	; 0x40000
   3e4e4:	bne	3e51c <add_hashed_target+0x1a8>
   3e4e8:	ldr	r1, [r7, #4]
   3e4ec:	orr	r0, r0, #262144	; 0x40000
   3e4f0:	strd	r0, [r7]
   3e4f4:	add	r0, r4, #227	; 0xe3
   3e4f8:	add	r1, r4, #152	; 0x98
   3e4fc:	str	r1, [sp]
   3e500:	str	r0, [sp, #4]
   3e504:	add	r3, r4, #88	; 0x58
   3e508:	ldr	r2, [pc, #68]	; 3e554 <add_hashed_target+0x1e0>
   3e50c:	add	r2, pc, r2
   3e510:	mov	r0, #2
   3e514:	mov	r1, #0
   3e518:	bl	d640 <sendto_realops_snomask@plt>
   3e51c:	ldr	r0, [pc, #52]	; 3e558 <add_hashed_target+0x1e4>
   3e520:	ldr	r0, [pc, r0]
   3e524:	ldr	r2, [r0]
   3e528:	ldr	r0, [pc, #44]	; 3e55c <add_hashed_target+0x1e8>
   3e52c:	add	r0, pc, r0
   3e530:	str	r0, [sp]
   3e534:	ldr	r1, [pc, #36]	; 3e560 <add_hashed_target+0x1ec>
   3e538:	add	r1, pc, r1
   3e53c:	mov	r5, #0
   3e540:	mov	r0, r4
   3e544:	mov	r3, #0
   3e548:	bl	d0b8 <sendto_match_servs@plt>
   3e54c:	b	3e4a4 <add_hashed_target+0x130>
   3e550:	.word	0x0001c4fc
   3e554:	.word	0x000094ea
   3e558:	.word	0x0001c654
   3e55c:	.word	0x000094f2
   3e560:	.word	0x00002e05

0003e564 <add_channel_target>:
   3e564:	push	{r4, sl, fp, lr}
   3e568:	add	fp, sp, #8
   3e56c:	mov	r4, r0
   3e570:	ldr	r0, [pc, #44]	; 3e5a4 <add_channel_target+0x40>
   3e574:	ldr	r0, [pc, r0]
   3e578:	ldr	r0, [r0, #72]	; 0x48
   3e57c:	cmp	r0, #0
   3e580:	moveq	r0, #1
   3e584:	popeq	{r4, sl, fp, pc}
   3e588:	ldr	r0, [r1, #236]	; 0xec
   3e58c:	mov	r1, #32
   3e590:	bl	da84 <fnv_hash_upper@plt>
   3e594:	mov	r1, r0
   3e598:	mov	r0, r4
   3e59c:	pop	{r4, sl, fp, lr}
   3e5a0:	b	3e374 <add_hashed_target>
   3e5a4:	.word	0x0001c5a4

0003e5a8 <add_reply_target>:
   3e5a8:	push	{r4, sl, fp, lr}
   3e5ac:	add	fp, sp, #8
   3e5b0:	cmp	r0, r1
   3e5b4:	beq	3e654 <add_reply_target+0xac>
   3e5b8:	mov	r4, r0
   3e5bc:	ldrb	r0, [r1, #56]	; 0x38
   3e5c0:	tst	r0, #64	; 0x40
   3e5c4:	bne	3e654 <add_reply_target+0xac>
   3e5c8:	ldrb	r0, [r1, #396]!	; 0x18c
   3e5cc:	cmp	r0, #0
   3e5d0:	subeq	r1, r1, #308	; 0x134
   3e5d4:	mov	r0, r1
   3e5d8:	mov	r1, #32
   3e5dc:	bl	da84 <fnv_hash_upper@plt>
   3e5e0:	ldr	r1, [r4, #432]	; 0x1b0
   3e5e4:	add	r3, r1, #352	; 0x160
   3e5e8:	mov	r2, #0
   3e5ec:	ldr	r4, [r3, r2, lsl #2]
   3e5f0:	cmp	r4, r0
   3e5f4:	beq	3e62c <add_reply_target+0x84>
   3e5f8:	add	r2, r2, #1
   3e5fc:	cmp	r2, #15
   3e600:	bcc	3e5ec <add_reply_target+0x44>
   3e604:	mov	r2, #0
   3e608:	add	r3, r1, r2, lsl #2
   3e60c:	ldr	r4, [r3, #404]	; 0x194
   3e610:	str	r4, [r3, #408]	; 0x198
   3e614:	sub	r3, r2, #1
   3e618:	add	r2, r2, #14
   3e61c:	cmp	r2, #11
   3e620:	mov	r2, r3
   3e624:	bhi	3e608 <add_reply_target+0x60>
   3e628:	b	3e650 <add_reply_target+0xa8>
   3e62c:	cmp	r2, #11
   3e630:	popcc	{r4, sl, fp, pc}
   3e634:	add	r3, r1, r2, lsl #2
   3e638:	ldr	r4, [r3, #348]	; 0x15c
   3e63c:	str	r4, [r3, #352]	; 0x160
   3e640:	sub	r3, r2, #1
   3e644:	cmp	r2, #11
   3e648:	mov	r2, r3
   3e64c:	bgt	3e634 <add_reply_target+0x8c>
   3e650:	str	r0, [r1, #392]	; 0x188
   3e654:	pop	{r4, sl, fp, pc}

0003e658 <whowas_get_list>:
   3e658:	push	{fp, lr}
   3e65c:	mov	fp, sp
   3e660:	mov	r1, r0
   3e664:	ldr	r0, [pc, #16]	; 3e67c <whowas_get_list+0x24>
   3e668:	ldr	r0, [pc, r0]
   3e66c:	bl	dee0 <rb_radixtree_retrieve@plt>
   3e670:	cmp	r0, #0
   3e674:	addne	r0, r0, #4
   3e678:	pop	{fp, pc}
   3e67c:	.word	0x000324f0

0003e680 <whowas_add_history>:
   3e680:	cmp	r0, #0
   3e684:	bxeq	lr
   3e688:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e68c:	add	fp, sp, #24
   3e690:	mov	r8, r1
   3e694:	mov	r4, r0
   3e698:	ldr	r0, [pc, #280]	; 3e7b8 <whowas_add_history+0x138>
   3e69c:	add	r0, pc, r0
   3e6a0:	ldr	r0, [r0, #8]
   3e6a4:	ldr	r1, [pc, #272]	; 3e7bc <whowas_add_history+0x13c>
   3e6a8:	ldr	r1, [pc, r1]
   3e6ac:	add	r1, r1, #100	; 0x64
   3e6b0:	cmp	r0, r1
   3e6b4:	movhi	r0, #0
   3e6b8:	blhi	3e7c4 <whowas_trim>
   3e6bc:	add	r5, r4, #88	; 0x58
   3e6c0:	mov	r0, r5
   3e6c4:	bl	3e870 <whowas_get_top>
   3e6c8:	mov	r7, r0
   3e6cc:	mov	r0, #300	; 0x12c
   3e6d0:	bl	3e8dc <rb_malloc>
   3e6d4:	mov	r6, r0
   3e6d8:	str	r7, [r0]
   3e6dc:	bl	d07c <rb_current_time@plt>
   3e6e0:	str	r0, [r6, #292]	; 0x124
   3e6e4:	add	r0, r6, #40	; 0x28
   3e6e8:	mov	r1, r5
   3e6ec:	mov	r2, #33	; 0x21
   3e6f0:	bl	e510 <rb_strlcpy@plt>
   3e6f4:	add	r1, r4, #152	; 0x98
   3e6f8:	add	r0, r6, #73	; 0x49
   3e6fc:	mov	r2, #11
   3e700:	bl	e510 <rb_strlcpy@plt>
   3e704:	add	r1, r4, #163	; 0xa3
   3e708:	add	r0, r6, #84	; 0x54
   3e70c:	mov	r2, #64	; 0x40
   3e710:	bl	e510 <rb_strlcpy@plt>
   3e714:	movw	r0, #345	; 0x159
   3e718:	add	r1, r4, r0
   3e71c:	add	r0, r6, #202	; 0xca
   3e720:	mov	r2, #51	; 0x33
   3e724:	bl	e510 <rb_strlcpy@plt>
   3e728:	movw	r0, #291	; 0x123
   3e72c:	add	r1, r4, r0
   3e730:	add	r0, r6, #148	; 0x94
   3e734:	mov	r2, #54	; 0x36
   3e738:	bl	e510 <rb_strlcpy@plt>
   3e73c:	ldr	r0, [r4, #64]	; 0x40
   3e740:	mov	r1, #2
   3e744:	and	r1, r1, r0, lsr #16
   3e748:	ubfx	r0, r0, #24, #1
   3e74c:	orr	r0, r0, r1
   3e750:	strb	r0, [r6, #286]	; 0x11e
   3e754:	ldr	r0, [r4, #32]
   3e758:	ldr	r0, [r0, #28]
   3e75c:	ldr	r0, [r0, #68]	; 0x44
   3e760:	bl	d070 <scache_get_name@plt>
   3e764:	str	r0, [r6, #288]	; 0x120
   3e768:	cmp	r8, #0
   3e76c:	beq	3e788 <whowas_add_history+0x108>
   3e770:	str	r4, [r6, #296]	; 0x128
   3e774:	add	r1, r6, #16
   3e778:	add	r2, r4, #40	; 0x28
   3e77c:	mov	r0, r6
   3e780:	bl	3e8fc <rb_dlinkAdd>
   3e784:	b	3e790 <whowas_add_history+0x110>
   3e788:	mov	r0, #0
   3e78c:	str	r0, [r6, #296]	; 0x128
   3e790:	add	r1, r6, #4
   3e794:	add	r2, r7, #4
   3e798:	mov	r0, r6
   3e79c:	bl	3e8fc <rb_dlinkAdd>
   3e7a0:	add	r1, r6, #28
   3e7a4:	ldr	r2, [pc, #20]	; 3e7c0 <whowas_add_history+0x140>
   3e7a8:	add	r2, pc, r2
   3e7ac:	mov	r0, r6
   3e7b0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e7b4:	b	3e8fc <rb_dlinkAdd>
   3e7b8:	.word	0x000324c0
   3e7bc:	.word	0x0001ec18
   3e7c0:	.word	0x000323b4

0003e7c4 <whowas_trim>:
   3e7c4:	push	{r4, r5, r6, r7, fp, lr}
   3e7c8:	add	fp, sp, #16
   3e7cc:	ldr	r4, [pc, #148]	; 3e868 <whowas_trim+0xa4>
   3e7d0:	add	r4, pc, r4
   3e7d4:	ldr	r0, [r4, #8]
   3e7d8:	ldr	r1, [pc, #140]	; 3e86c <whowas_trim+0xa8>
   3e7dc:	ldr	r1, [pc, r1]
   3e7e0:	cmp	r0, r1
   3e7e4:	popcc	{r4, r5, r6, r7, fp, pc}
   3e7e8:	sub	r7, r0, r1
   3e7ec:	cmp	r7, #1
   3e7f0:	blt	3e864 <whowas_trim+0xa0>
   3e7f4:	ldr	r0, [r4, #4]
   3e7f8:	cmp	r0, #0
   3e7fc:	ldrne	r5, [r0]
   3e800:	cmpne	r5, #0
   3e804:	bne	3e814 <whowas_trim+0x50>
   3e808:	subs	r7, r7, #1
   3e80c:	bne	3e7f4 <whowas_trim+0x30>
   3e810:	b	3e864 <whowas_trim+0xa0>
   3e814:	ldr	r1, [r5, #296]	; 0x128
   3e818:	cmp	r1, #0
   3e81c:	beq	3e82c <whowas_trim+0x68>
   3e820:	add	r0, r5, #16
   3e824:	add	r1, r1, #40	; 0x28
   3e828:	bl	3ea2c <rb_dlinkDelete>
   3e82c:	mov	r6, r5
   3e830:	ldr	r1, [r6], #28
   3e834:	add	r0, r5, #4
   3e838:	add	r1, r1, #4
   3e83c:	bl	3ea2c <rb_dlinkDelete>
   3e840:	mov	r0, r6
   3e844:	mov	r1, r4
   3e848:	bl	3ea2c <rb_dlinkDelete>
   3e84c:	ldr	r0, [r5]
   3e850:	bl	3ecb8 <whowas_free_wtop>
   3e854:	mov	r0, r5
   3e858:	bl	3ecf8 <rb_free>
   3e85c:	subs	r7, r7, #1
   3e860:	bne	3e7f4 <whowas_trim+0x30>
   3e864:	pop	{r4, r5, r6, r7, fp, pc}
   3e868:	.word	0x0003238c
   3e86c:	.word	0x0001eae4

0003e870 <whowas_get_top>:
   3e870:	push	{r4, r5, fp, lr}
   3e874:	add	fp, sp, #8
   3e878:	mov	r5, r0
   3e87c:	ldr	r0, [pc, #80]	; 3e8d4 <whowas_get_top+0x64>
   3e880:	ldr	r0, [pc, r0]
   3e884:	mov	r1, r5
   3e888:	bl	dee0 <rb_radixtree_retrieve@plt>
   3e88c:	mov	r4, r0
   3e890:	cmp	r0, #0
   3e894:	beq	3e8a0 <whowas_get_top+0x30>
   3e898:	mov	r0, r4
   3e89c:	pop	{r4, r5, fp, pc}
   3e8a0:	mov	r0, #16
   3e8a4:	bl	3e8dc <rb_malloc>
   3e8a8:	mov	r4, r0
   3e8ac:	mov	r0, r5
   3e8b0:	bl	3ec80 <rb_strdup>
   3e8b4:	mov	r1, r0
   3e8b8:	str	r0, [r4]
   3e8bc:	ldr	r0, [pc, #20]	; 3e8d8 <whowas_get_top+0x68>
   3e8c0:	ldr	r0, [pc, r0]
   3e8c4:	mov	r2, r4
   3e8c8:	bl	dd9c <rb_radixtree_add@plt>
   3e8cc:	mov	r0, r4
   3e8d0:	pop	{r4, r5, fp, pc}
   3e8d4:	.word	0x000322d8
   3e8d8:	.word	0x00032298

0003e8dc <rb_malloc>:
   3e8dc:	push	{fp, lr}
   3e8e0:	mov	fp, sp
   3e8e4:	mov	r1, r0
   3e8e8:	mov	r0, #1
   3e8ec:	bl	cfa4 <calloc@plt>
   3e8f0:	cmp	r0, #0
   3e8f4:	popne	{fp, pc}
   3e8f8:	bl	d448 <rb_outofmemory@plt>

0003e8fc <rb_dlinkAdd>:
   3e8fc:	push	{fp, lr}
   3e900:	mov	fp, sp
   3e904:	cmp	r0, #0
   3e908:	beq	3e968 <rb_dlinkAdd+0x6c>
   3e90c:	cmp	r1, #0
   3e910:	beq	3e988 <rb_dlinkAdd+0x8c>
   3e914:	cmp	r2, #0
   3e918:	beq	3e9a8 <rb_dlinkAdd+0xac>
   3e91c:	mov	r3, #0
   3e920:	stm	r1, {r0, r3}
   3e924:	ldr	r0, [r2]
   3e928:	str	r0, [r1, #8]
   3e92c:	ldr	r0, [r2]
   3e930:	cmp	r0, #0
   3e934:	beq	3e944 <rb_dlinkAdd+0x48>
   3e938:	add	r0, r0, #4
   3e93c:	str	r1, [r0]
   3e940:	b	3e954 <rb_dlinkAdd+0x58>
   3e944:	mov	r0, r2
   3e948:	ldr	r3, [r0, #4]!
   3e94c:	cmp	r3, #0
   3e950:	streq	r1, [r0]
   3e954:	str	r1, [r2]
   3e958:	ldr	r0, [r2, #8]
   3e95c:	add	r0, r0, #1
   3e960:	str	r0, [r2, #8]
   3e964:	pop	{fp, pc}
   3e968:	ldr	r0, [pc, #88]	; 3e9c8 <rb_dlinkAdd+0xcc>
   3e96c:	add	r0, pc, r0
   3e970:	ldr	r1, [pc, #84]	; 3e9cc <rb_dlinkAdd+0xd0>
   3e974:	add	r1, pc, r1
   3e978:	ldr	r3, [pc, #80]	; 3e9d0 <rb_dlinkAdd+0xd4>
   3e97c:	add	r3, pc, r3
   3e980:	mov	r2, #143	; 0x8f
   3e984:	bl	e7e0 <__assert_fail@plt>
   3e988:	ldr	r0, [pc, #68]	; 3e9d4 <rb_dlinkAdd+0xd8>
   3e98c:	add	r0, pc, r0
   3e990:	ldr	r1, [pc, #64]	; 3e9d8 <rb_dlinkAdd+0xdc>
   3e994:	add	r1, pc, r1
   3e998:	ldr	r3, [pc, #60]	; 3e9dc <rb_dlinkAdd+0xe0>
   3e99c:	add	r3, pc, r3
   3e9a0:	mov	r2, #144	; 0x90
   3e9a4:	bl	e7e0 <__assert_fail@plt>
   3e9a8:	ldr	r0, [pc, #48]	; 3e9e0 <rb_dlinkAdd+0xe4>
   3e9ac:	add	r0, pc, r0
   3e9b0:	ldr	r1, [pc, #44]	; 3e9e4 <rb_dlinkAdd+0xe8>
   3e9b4:	add	r1, pc, r1
   3e9b8:	ldr	r3, [pc, #40]	; 3e9e8 <rb_dlinkAdd+0xec>
   3e9bc:	add	r3, pc, r3
   3e9c0:	mov	r2, #145	; 0x91
   3e9c4:	bl	e7e0 <__assert_fail@plt>
   3e9c8:	.word	0x00001ca5
   3e9cc:	.word	0x00001c42
   3e9d0:	.word	0x00001ca2
   3e9d4:	.word	0x00001c20
   3e9d8:	.word	0x00001c22
   3e9dc:	.word	0x00001c82
   3e9e0:	.word	0x00007499
   3e9e4:	.word	0x00001c02
   3e9e8:	.word	0x00001c62

0003e9ec <whowas_off_history>:
   3e9ec:	push	{r4, r5, r6, sl, fp, lr}
   3e9f0:	add	fp, sp, #16
   3e9f4:	mov	r4, r0
   3e9f8:	ldr	r5, [r4, #40]!	; 0x28
   3e9fc:	cmp	r5, #0
   3ea00:	popeq	{r4, r5, r6, sl, fp, pc}
   3ea04:	mov	r6, #0
   3ea08:	ldr	r0, [r5]
   3ea0c:	ldr	r5, [r5, #8]
   3ea10:	str	r6, [r0, #296]	; 0x128
   3ea14:	add	r0, r0, #16
   3ea18:	mov	r1, r4
   3ea1c:	bl	3ea2c <rb_dlinkDelete>
   3ea20:	cmp	r5, #0
   3ea24:	bne	3ea08 <whowas_off_history+0x1c>
   3ea28:	pop	{r4, r5, r6, sl, fp, pc}

0003ea2c <rb_dlinkDelete>:
   3ea2c:	push	{fp, lr}
   3ea30:	mov	fp, sp
   3ea34:	cmp	r0, #0
   3ea38:	beq	3ea8c <rb_dlinkDelete+0x60>
   3ea3c:	cmp	r1, #0
   3ea40:	beq	3eaac <rb_dlinkDelete+0x80>
   3ea44:	ldr	ip, [r0, #4]
   3ea48:	ldr	r3, [r0, #8]
   3ea4c:	add	r2, r3, #4
   3ea50:	cmp	r3, #0
   3ea54:	addeq	r2, r1, #4
   3ea58:	str	ip, [r2]
   3ea5c:	ldmib	r0, {r2, ip}
   3ea60:	cmp	r2, #0
   3ea64:	mov	r3, r1
   3ea68:	addne	r3, r2, #8
   3ea6c:	str	ip, [r3]
   3ea70:	mov	r2, #0
   3ea74:	str	r2, [r0, #4]
   3ea78:	str	r2, [r0, #8]
   3ea7c:	ldr	r0, [r1, #8]
   3ea80:	sub	r0, r0, #1
   3ea84:	str	r0, [r1, #8]
   3ea88:	pop	{fp, pc}
   3ea8c:	ldr	r0, [pc, #56]	; 3eacc <rb_dlinkDelete+0xa0>
   3ea90:	add	r0, pc, r0
   3ea94:	ldr	r1, [pc, #52]	; 3ead0 <rb_dlinkDelete+0xa4>
   3ea98:	add	r1, pc, r1
   3ea9c:	ldr	r3, [pc, #48]	; 3ead4 <rb_dlinkDelete+0xa8>
   3eaa0:	add	r3, pc, r3
   3eaa4:	mov	r2, #235	; 0xeb
   3eaa8:	bl	e7e0 <__assert_fail@plt>
   3eaac:	ldr	r0, [pc, #36]	; 3ead8 <rb_dlinkDelete+0xac>
   3eab0:	add	r0, pc, r0
   3eab4:	ldr	r1, [pc, #32]	; 3eadc <rb_dlinkDelete+0xb0>
   3eab8:	add	r1, pc, r1
   3eabc:	ldr	r3, [pc, #28]	; 3eae0 <rb_dlinkDelete+0xb4>
   3eac0:	add	r3, pc, r3
   3eac4:	mov	r2, #236	; 0xec
   3eac8:	bl	e7e0 <__assert_fail@plt>
   3eacc:	.word	0x00001b1c
   3ead0:	.word	0x00001b1e
   3ead4:	.word	0x00001bb9
   3ead8:	.word	0x00007395
   3eadc:	.word	0x00001afe
   3eae0:	.word	0x00001b99

0003eae4 <whowas_get_history>:
   3eae4:	push	{r4, r5, r6, sl, fp, lr}
   3eae8:	add	fp, sp, #16
   3eaec:	mov	r5, r1
   3eaf0:	mov	r1, r0
   3eaf4:	ldr	r0, [pc, #88]	; 3eb54 <whowas_get_history+0x70>
   3eaf8:	ldr	r0, [pc, r0]
   3eafc:	bl	dee0 <rb_radixtree_retrieve@plt>
   3eb00:	mov	r4, #0
   3eb04:	cmp	r0, #0
   3eb08:	beq	3eb40 <whowas_get_history+0x5c>
   3eb0c:	mov	r6, r0
   3eb10:	bl	d07c <rb_current_time@plt>
   3eb14:	ldr	r1, [r6, #8]
   3eb18:	cmp	r1, #0
   3eb1c:	beq	3eb40 <whowas_get_history+0x5c>
   3eb20:	sub	r0, r0, r5
   3eb24:	ldr	r2, [r1]
   3eb28:	ldr	r3, [r2, #292]	; 0x124
   3eb2c:	cmp	r3, r0
   3eb30:	bge	3eb48 <whowas_get_history+0x64>
   3eb34:	ldr	r1, [r1, #4]
   3eb38:	cmp	r1, #0
   3eb3c:	bne	3eb24 <whowas_get_history+0x40>
   3eb40:	mov	r0, r4
   3eb44:	pop	{r4, r5, r6, sl, fp, pc}
   3eb48:	ldr	r4, [r2, #296]	; 0x128
   3eb4c:	mov	r0, r4
   3eb50:	pop	{r4, r5, r6, sl, fp, pc}
   3eb54:	.word	0x00032060

0003eb58 <whowas_init>:
   3eb58:	push	{fp, lr}
   3eb5c:	mov	fp, sp
   3eb60:	ldr	r0, [pc, #88]	; 3ebc0 <whowas_init+0x68>
   3eb64:	add	r0, pc, r0
   3eb68:	ldr	r1, [pc, #84]	; 3ebc4 <whowas_init+0x6c>
   3eb6c:	add	r1, pc, r1
   3eb70:	bl	d85c <rb_radixtree_create@plt>
   3eb74:	ldr	r1, [pc, #76]	; 3ebc8 <whowas_init+0x70>
   3eb78:	add	r1, pc, r1
   3eb7c:	str	r0, [r1]
   3eb80:	ldr	r0, [pc, #68]	; 3ebcc <whowas_init+0x74>
   3eb84:	ldr	r0, [pc, r0]
   3eb88:	cmp	r0, #0
   3eb8c:	bne	3eba0 <whowas_init+0x48>
   3eb90:	ldr	r0, [pc, #56]	; 3ebd0 <whowas_init+0x78>
   3eb94:	add	r0, pc, r0
   3eb98:	movw	r1, #15000	; 0x3a98
   3eb9c:	str	r1, [r0]
   3eba0:	ldr	r0, [pc, #44]	; 3ebd4 <whowas_init+0x7c>
   3eba4:	add	r0, pc, r0
   3eba8:	ldr	r1, [pc, #40]	; 3ebd8 <whowas_init+0x80>
   3ebac:	add	r1, pc, r1
   3ebb0:	mov	r2, #0
   3ebb4:	mov	r3, #10
   3ebb8:	pop	{fp, lr}
   3ebbc:	b	d0e8 <rb_event_add@plt>
   3ebc0:	.word	0x000097a0
   3ebc4:	.word	0x00000068
   3ebc8:	.word	0x00031fe0
   3ebcc:	.word	0x0001e73c
   3ebd0:	.word	0x0001e72c
   3ebd4:	.word	0x00009767
   3ebd8:	.word	0xfffffc10

0003ebdc <irccasecanon>:
   3ebdc:	ldrb	r1, [r0]
   3ebe0:	cmp	r1, #0
   3ebe4:	bxeq	lr
   3ebe8:	add	r0, r0, #1
   3ebec:	ldr	r2, [pc, #32]	; 3ec14 <irccasecanon+0x38>
   3ebf0:	ldr	r2, [pc, r2]
   3ebf4:	uxtb	r1, r1
   3ebf8:	ldrb	r1, [r2, r1]
   3ebfc:	strb	r1, [r0, #-1]
   3ec00:	ldrb	r1, [r0]
   3ec04:	add	r0, r0, #1
   3ec08:	cmp	r1, #0
   3ec0c:	bne	3ebf4 <irccasecanon+0x18>
   3ec10:	bx	lr
   3ec14:	.word	0x0001bd78

0003ec18 <whowas_set_size>:
   3ec18:	ldr	r1, [pc, #12]	; 3ec2c <whowas_set_size+0x14>
   3ec1c:	add	r1, pc, r1
   3ec20:	str	r0, [r1]
   3ec24:	mov	r0, #0
   3ec28:	b	3e7c4 <whowas_trim>
   3ec2c:	.word	0x0001e6a4

0003ec30 <whowas_memory_usage>:
   3ec30:	push	{r4, sl, fp, lr}
   3ec34:	add	fp, sp, #8
   3ec38:	mov	r4, r1
   3ec3c:	ldr	r1, [pc, #52]	; 3ec78 <whowas_memory_usage+0x48>
   3ec40:	add	r1, pc, r1
   3ec44:	ldr	r1, [r1, #8]
   3ec48:	str	r1, [r0]
   3ec4c:	ldr	r0, [r4]
   3ec50:	mov	r2, #300	; 0x12c
   3ec54:	mla	r0, r1, r2, r0
   3ec58:	str	r0, [r4]
   3ec5c:	ldr	r0, [pc, #24]	; 3ec7c <whowas_memory_usage+0x4c>
   3ec60:	ldr	r0, [pc, r0]
   3ec64:	bl	e624 <rb_radixtree_size@plt>
   3ec68:	ldr	r1, [r4]
   3ec6c:	add	r0, r1, r0, lsl #4
   3ec70:	str	r0, [r4]
   3ec74:	pop	{r4, sl, fp, pc}
   3ec78:	.word	0x00031f1c
   3ec7c:	.word	0x00031ef8

0003ec80 <rb_strdup>:
   3ec80:	push	{r4, r5, fp, lr}
   3ec84:	add	fp, sp, #8
   3ec88:	mov	r4, r0
   3ec8c:	bl	dc94 <strlen@plt>
   3ec90:	add	r0, r0, #1
   3ec94:	bl	da90 <malloc@plt>
   3ec98:	cmp	r0, #0
   3ec9c:	beq	3ecb4 <rb_strdup+0x34>
   3eca0:	mov	r5, r0
   3eca4:	mov	r1, r4
   3eca8:	bl	d928 <strcpy@plt>
   3ecac:	mov	r0, r5
   3ecb0:	pop	{r4, r5, fp, pc}
   3ecb4:	bl	d448 <rb_outofmemory@plt>

0003ecb8 <whowas_free_wtop>:
   3ecb8:	push	{r4, sl, fp, lr}
   3ecbc:	add	fp, sp, #8
   3ecc0:	mov	r4, r0
   3ecc4:	ldr	r0, [r0, #12]
   3ecc8:	cmp	r0, #0
   3eccc:	popne	{r4, sl, fp, pc}
   3ecd0:	ldr	r1, [r4]
   3ecd4:	ldr	r0, [pc, #24]	; 3ecf4 <whowas_free_wtop+0x3c>
   3ecd8:	ldr	r0, [pc, r0]
   3ecdc:	bl	e0c0 <rb_radixtree_delete@plt>
   3ece0:	ldr	r0, [r4]
   3ece4:	bl	3ecf8 <rb_free>
   3ece8:	mov	r0, r4
   3ecec:	pop	{r4, sl, fp, lr}
   3ecf0:	b	3ecf8 <rb_free>
   3ecf4:	.word	0x00031e80

0003ecf8 <rb_free>:
   3ecf8:	cmp	r0, #0
   3ecfc:	bxeq	lr
   3ed00:	b	d328 <free@plt>

0003ed04 <restart_wsockd>:
   3ed04:	push	{r4, r5, r6, r7, fp, lr}
   3ed08:	add	fp, sp, #16
   3ed0c:	ldr	r5, [pc, #144]	; 3eda4 <restart_wsockd+0xa0>
   3ed10:	ldr	r5, [pc, r5]
   3ed14:	cmp	r5, #0
   3ed18:	beq	3ed90 <restart_wsockd+0x8c>
   3ed1c:	mov	r6, #1
   3ed20:	ldr	r7, [pc, #128]	; 3eda8 <restart_wsockd+0xa4>
   3ed24:	add	r7, pc, r7
   3ed28:	ldr	r4, [r5]
   3ed2c:	ldr	r5, [r5, #8]
   3ed30:	ldrb	r0, [r4, #53]	; 0x35
   3ed34:	cmp	r0, #0
   3ed38:	bne	3ed68 <restart_wsockd+0x64>
   3ed3c:	ldrb	r0, [r4, #52]	; 0x34
   3ed40:	cmp	r0, #0
   3ed44:	bne	3ed68 <restart_wsockd+0x64>
   3ed48:	strb	r6, [r4, #52]	; 0x34
   3ed4c:	ldr	r0, [pc, #88]	; 3edac <restart_wsockd+0xa8>
   3ed50:	ldr	r0, [pc, r0]
   3ed54:	sub	r0, r0, #1
   3ed58:	str	r0, [r7]
   3ed5c:	ldr	r0, [r4, #12]
   3ed60:	cmp	r0, #0
   3ed64:	beq	3ed74 <restart_wsockd+0x70>
   3ed68:	cmp	r5, #0
   3ed6c:	bne	3ed28 <restart_wsockd+0x24>
   3ed70:	b	3ed90 <restart_wsockd+0x8c>
   3ed74:	ldr	r0, [r4, #24]
   3ed78:	mov	r1, #9
   3ed7c:	bl	d478 <rb_kill@plt>
   3ed80:	mov	r0, r4
   3ed84:	bl	3edb4 <free_ws_daemon>
   3ed88:	cmp	r5, #0
   3ed8c:	bne	3ed28 <restart_wsockd+0x24>
   3ed90:	ldr	r0, [pc, #24]	; 3edb0 <restart_wsockd+0xac>
   3ed94:	ldr	r0, [pc, r0]
   3ed98:	ldr	r0, [r0, #304]	; 0x130
   3ed9c:	pop	{r4, r5, r6, r7, fp, lr}
   3eda0:	b	3eebc <start_wsockd>
   3eda4:	.word	0x00031e58
   3eda8:	.word	0x00031e50
   3edac:	.word	0x00031e24
   3edb0:	.word	0x0001bbbc

0003edb4 <free_ws_daemon>:
   3edb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3edb8:	add	fp, sp, #24
   3edbc:	mov	r8, r0
   3edc0:	ldr	r0, [r0, #12]
   3edc4:	cmp	r0, #0
   3edc8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3edcc:	ldr	r6, [r8, #28]
   3edd0:	cmp	r6, #0
   3edd4:	bne	3edf8 <free_ws_daemon+0x44>
   3edd8:	b	3ee2c <free_ws_daemon+0x78>
   3eddc:	ldr	r0, [r5, #12]
   3ede0:	bl	3f86c <rb_free>
   3ede4:	mov	r0, r5
   3ede8:	bl	3f86c <rb_free>
   3edec:	ldr	r6, [r6, #8]
   3edf0:	cmp	r6, #0
   3edf4:	beq	3ee2c <free_ws_daemon+0x78>
   3edf8:	ldr	r5, [r6]
   3edfc:	ldr	r0, [r5, #36]	; 0x24
   3ee00:	cmp	r0, #1
   3ee04:	blt	3eddc <free_ws_daemon+0x28>
   3ee08:	add	r7, r5, #20
   3ee0c:	mov	r4, #0
   3ee10:	ldr	r0, [r7, r4, lsl #2]
   3ee14:	bl	db5c <rb_close@plt>
   3ee18:	add	r4, r4, #1
   3ee1c:	ldr	r0, [r5, #36]	; 0x24
   3ee20:	cmp	r4, r0
   3ee24:	blt	3ee10 <free_ws_daemon+0x5c>
   3ee28:	b	3eddc <free_ws_daemon+0x28>
   3ee2c:	ldr	r6, [r8, #40]	; 0x28
   3ee30:	cmp	r6, #0
   3ee34:	bne	3ee58 <free_ws_daemon+0xa4>
   3ee38:	b	3ee8c <free_ws_daemon+0xd8>
   3ee3c:	ldr	r0, [r5, #12]
   3ee40:	bl	3f86c <rb_free>
   3ee44:	mov	r0, r5
   3ee48:	bl	3f86c <rb_free>
   3ee4c:	ldr	r6, [r6, #8]
   3ee50:	cmp	r6, #0
   3ee54:	beq	3ee8c <free_ws_daemon+0xd8>
   3ee58:	ldr	r5, [r6]
   3ee5c:	ldr	r0, [r5, #36]	; 0x24
   3ee60:	cmp	r0, #1
   3ee64:	blt	3ee3c <free_ws_daemon+0x88>
   3ee68:	add	r7, r5, #20
   3ee6c:	mov	r4, #0
   3ee70:	ldr	r0, [r7, r4, lsl #2]
   3ee74:	bl	db5c <rb_close@plt>
   3ee78:	add	r4, r4, #1
   3ee7c:	ldr	r0, [r5, #36]	; 0x24
   3ee80:	cmp	r4, r0
   3ee84:	blt	3ee70 <free_ws_daemon+0xbc>
   3ee88:	b	3ee3c <free_ws_daemon+0x88>
   3ee8c:	ldr	r0, [r8, #16]
   3ee90:	bl	db5c <rb_close@plt>
   3ee94:	ldr	r0, [r8, #20]
   3ee98:	bl	db5c <rb_close@plt>
   3ee9c:	ldr	r1, [pc, #20]	; 3eeb8 <free_ws_daemon+0x104>
   3eea0:	add	r1, pc, r1
   3eea4:	mov	r0, r8
   3eea8:	bl	3f878 <rb_dlinkDelete>
   3eeac:	mov	r0, r8
   3eeb0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3eeb4:	b	3f86c <rb_free>
   3eeb8:	.word	0x00031cc8

0003eebc <start_wsockd>:
   3eebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eec0:	add	fp, sp, #28
   3eec4:	sub	sp, sp, #188	; 0xbc
   3eec8:	sub	sp, sp, #4096	; 0x1000
   3eecc:	mov	r9, r0
   3eed0:	ldr	r6, [pc, #948]	; 3f28c <start_wsockd+0x3d0>
   3eed4:	add	r6, pc, r6
   3eed8:	ldrb	r0, [r6]
   3eedc:	mov	r4, #0
   3eee0:	cmp	r0, #0
   3eee4:	bne	3f280 <start_wsockd+0x3c4>
   3eee8:	ldr	r0, [pc, #928]	; 3f290 <start_wsockd+0x3d4>
   3eeec:	ldr	r0, [pc, r0]
   3eef0:	cmp	r0, #21
   3eef4:	blt	3ef60 <start_wsockd+0xa4>
   3eef8:	bl	d07c <rb_current_time@plt>
   3eefc:	ldr	r1, [pc, #912]	; 3f294 <start_wsockd+0x3d8>
   3ef00:	ldr	r1, [pc, r1]
   3ef04:	sub	r0, r0, r1
   3ef08:	cmp	r0, #4
   3ef0c:	bgt	3ef60 <start_wsockd+0xa4>
   3ef10:	mov	r4, #0
   3ef14:	ldr	r5, [pc, #892]	; 3f298 <start_wsockd+0x3dc>
   3ef18:	add	r5, pc, r5
   3ef1c:	mov	r0, #0
   3ef20:	mov	r1, r5
   3ef24:	bl	e0b4 <ilog@plt>
   3ef28:	mov	r0, #256	; 0x100
   3ef2c:	mov	r1, #0
   3ef30:	mov	r2, r5
   3ef34:	bl	d640 <sendto_realops_snomask@plt>
   3ef38:	ldr	r0, [pc, #860]	; 3f29c <start_wsockd+0x3e0>
   3ef3c:	add	r0, pc, r0
   3ef40:	ldr	r1, [pc, #856]	; 3f2a0 <start_wsockd+0x3e4>
   3ef44:	add	r1, pc, r1
   3ef48:	mov	r2, #0
   3ef4c:	mov	r3, #60	; 0x3c
   3ef50:	bl	d0e8 <rb_event_add@plt>
   3ef54:	mov	r0, #1
   3ef58:	strb	r0, [r6]
   3ef5c:	b	3f280 <start_wsockd+0x3c4>
   3ef60:	ldr	r0, [pc, #828]	; 3f2a4 <start_wsockd+0x3e8>
   3ef64:	ldr	r0, [pc, r0]
   3ef68:	add	r0, r0, #1
   3ef6c:	ldr	r1, [pc, #820]	; 3f2a8 <start_wsockd+0x3ec>
   3ef70:	add	r1, pc, r1
   3ef74:	str	r0, [r1]
   3ef78:	bl	d07c <rb_current_time@plt>
   3ef7c:	ldr	r1, [pc, #808]	; 3f2ac <start_wsockd+0x3f0>
   3ef80:	add	r1, pc, r1
   3ef84:	str	r0, [r1]
   3ef88:	ldr	r0, [pc, #800]	; 3f2b0 <start_wsockd+0x3f4>
   3ef8c:	ldr	r0, [pc, r0]
   3ef90:	cmp	r0, #0
   3ef94:	bne	3f03c <start_wsockd+0x180>
   3ef98:	ldr	r5, [pc, #788]	; 3f2b4 <start_wsockd+0x3f8>
   3ef9c:	ldr	r5, [pc, r5]
   3efa0:	ldr	r3, [r5, #60]	; 0x3c
   3efa4:	ldr	r6, [pc, #780]	; 3f2b8 <start_wsockd+0x3fc>
   3efa8:	add	r6, pc, r6
   3efac:	mov	r7, #47	; 0x2f
   3efb0:	str	r7, [sp]
   3efb4:	str	r6, [sp, #4]
   3efb8:	add	r4, sp, #167	; 0xa7
   3efbc:	ldr	r2, [pc, #760]	; 3f2bc <start_wsockd+0x400>
   3efc0:	add	r2, pc, r2
   3efc4:	mov	r0, r4
   3efc8:	movw	r1, #4097	; 0x1001
   3efcc:	bl	de74 <snprintf@plt>
   3efd0:	mov	r0, r4
   3efd4:	mov	r1, #1
   3efd8:	bl	e09c <access@plt>
   3efdc:	cmn	r0, #1
   3efe0:	bne	3f028 <start_wsockd+0x16c>
   3efe4:	ldr	r8, [pc, #724]	; 3f2c0 <start_wsockd+0x404>
   3efe8:	ldr	r8, [pc, r8]
   3efec:	ldr	r3, [r8]
   3eff0:	str	r7, [sp]
   3eff4:	str	r7, [sp, #4]
   3eff8:	str	r6, [sp, #8]
   3effc:	add	r4, sp, #167	; 0xa7
   3f000:	ldr	r2, [pc, #700]	; 3f2c4 <start_wsockd+0x408>
   3f004:	add	r2, pc, r2
   3f008:	mov	r0, r4
   3f00c:	movw	r1, #4097	; 0x1001
   3f010:	bl	de74 <snprintf@plt>
   3f014:	mov	r0, r4
   3f018:	mov	r1, #1
   3f01c:	bl	e09c <access@plt>
   3f020:	cmn	r0, #1
   3f024:	beq	3f258 <start_wsockd+0x39c>
   3f028:	add	r0, sp, #167	; 0xa7
   3f02c:	bl	3f390 <rb_strdup>
   3f030:	ldr	r1, [pc, #664]	; 3f2d0 <start_wsockd+0x414>
   3f034:	add	r1, pc, r1
   3f038:	str	r0, [r1]
   3f03c:	add	r4, sp, #24
   3f040:	ldr	r1, [pc, #652]	; 3f2d4 <start_wsockd+0x418>
   3f044:	add	r1, pc, r1
   3f048:	mov	r0, r4
   3f04c:	mov	r2, #128	; 0x80
   3f050:	bl	e510 <rb_strlcpy@plt>
   3f054:	str	r4, [sp, #152]	; 0x98
   3f058:	mov	r4, #0
   3f05c:	str	r4, [sp, #156]	; 0x9c
   3f060:	cmp	r9, #1
   3f064:	blt	3f280 <start_wsockd+0x3c4>
   3f068:	mov	r4, #0
   3f06c:	add	r7, sp, #161	; 0xa1
   3f070:	ldr	r6, [pc, #608]	; 3f2d8 <start_wsockd+0x41c>
   3f074:	add	r6, pc, r6
   3f078:	add	sl, sp, #14
   3f07c:	sub	r0, fp, #40	; 0x28
   3f080:	str	r0, [sp]
   3f084:	ldr	r0, [pc, #592]	; 3f2dc <start_wsockd+0x420>
   3f088:	add	r0, pc, r0
   3f08c:	str	r0, [sp, #4]
   3f090:	mov	r0, #1
   3f094:	mov	r1, #2
   3f098:	mov	r2, #0
   3f09c:	sub	r3, fp, #36	; 0x24
   3f0a0:	bl	d514 <rb_socketpair@plt>
   3f0a4:	cmn	r0, #1
   3f0a8:	beq	3f1d4 <start_wsockd+0x318>
   3f0ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f0b0:	mov	r1, #16384	; 0x4000
   3f0b4:	bl	e210 <rb_set_buffers@plt>
   3f0b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f0bc:	mov	r1, #16384	; 0x4000
   3f0c0:	bl	e210 <rb_set_buffers@plt>
   3f0c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f0c8:	bl	db98 <rb_get_fd@plt>
   3f0cc:	mov	r3, r0
   3f0d0:	mov	r0, r7
   3f0d4:	mov	r1, #6
   3f0d8:	mov	r2, r6
   3f0dc:	bl	de74 <snprintf@plt>
   3f0e0:	ldr	r0, [pc, #508]	; 3f2e4 <start_wsockd+0x428>
   3f0e4:	add	r0, pc, r0
   3f0e8:	mov	r1, r7
   3f0ec:	mov	r2, #1
   3f0f0:	bl	cf68 <rb_setenv@plt>
   3f0f4:	sub	r0, fp, #44	; 0x2c
   3f0f8:	sub	r1, fp, #48	; 0x30
   3f0fc:	ldr	r2, [pc, #484]	; 3f2e8 <start_wsockd+0x42c>
   3f100:	add	r2, pc, r2
   3f104:	bl	e2a0 <rb_pipe@plt>
   3f108:	cmn	r0, #1
   3f10c:	beq	3f1f0 <start_wsockd+0x334>
   3f110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f114:	bl	db98 <rb_get_fd@plt>
   3f118:	mov	r3, r0
   3f11c:	mov	r0, r7
   3f120:	mov	r1, #6
   3f124:	mov	r2, r6
   3f128:	bl	de74 <snprintf@plt>
   3f12c:	ldr	r0, [pc, #444]	; 3f2f0 <start_wsockd+0x434>
   3f130:	add	r0, pc, r0
   3f134:	mov	r1, r7
   3f138:	mov	r2, #1
   3f13c:	bl	cf68 <rb_setenv@plt>
   3f140:	bl	dc28 <getpid@plt>
   3f144:	mov	r3, r0
   3f148:	mov	r0, sl
   3f14c:	mov	r1, #10
   3f150:	mov	r2, r6
   3f154:	bl	de74 <snprintf@plt>
   3f158:	ldr	r0, [pc, #404]	; 3f2f4 <start_wsockd+0x438>
   3f15c:	add	r0, pc, r0
   3f160:	mov	r1, sl
   3f164:	mov	r2, #1
   3f168:	bl	cf68 <rb_setenv@plt>
   3f16c:	ldr	r0, [pc, #388]	; 3f2f8 <start_wsockd+0x43c>
   3f170:	ldr	r0, [pc, r0]
   3f174:	add	r1, sp, #152	; 0x98
   3f178:	bl	e294 <rb_spawn_process@plt>
   3f17c:	cmn	r0, #1
   3f180:	beq	3f214 <start_wsockd+0x358>
   3f184:	mov	r8, r0
   3f188:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f18c:	bl	db5c <rb_close@plt>
   3f190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f194:	bl	db5c <rb_close@plt>
   3f198:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f19c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f1a0:	mov	r2, r8
   3f1a4:	bl	3f3c8 <allocate_ws_daemon>
   3f1a8:	mov	r5, r0
   3f1ac:	ldr	r0, [r0, #16]
   3f1b0:	mov	r1, r5
   3f1b4:	bl	3f43c <ws_read_ctl>
   3f1b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f1bc:	mov	r1, r5
   3f1c0:	bl	3f558 <ws_do_pipe>
   3f1c4:	add	r4, r4, #1
   3f1c8:	cmp	r4, r9
   3f1cc:	blt	3f07c <start_wsockd+0x1c0>
   3f1d0:	b	3f280 <start_wsockd+0x3c4>
   3f1d4:	bl	de38 <__errno_location@plt>
   3f1d8:	ldr	r0, [r0]
   3f1dc:	bl	dacc <strerror@plt>
   3f1e0:	mov	r2, r0
   3f1e4:	ldr	r1, [pc, #244]	; 3f2e0 <start_wsockd+0x424>
   3f1e8:	add	r1, pc, r1
   3f1ec:	b	3f208 <start_wsockd+0x34c>
   3f1f0:	bl	de38 <__errno_location@plt>
   3f1f4:	ldr	r0, [r0]
   3f1f8:	bl	dacc <strerror@plt>
   3f1fc:	mov	r2, r0
   3f200:	ldr	r1, [pc, #228]	; 3f2ec <start_wsockd+0x430>
   3f204:	add	r1, pc, r1
   3f208:	mov	r0, #0
   3f20c:	bl	e0b4 <ilog@plt>
   3f210:	b	3f280 <start_wsockd+0x3c4>
   3f214:	bl	de38 <__errno_location@plt>
   3f218:	ldr	r0, [r0]
   3f21c:	bl	dacc <strerror@plt>
   3f220:	mov	r2, r0
   3f224:	ldr	r1, [pc, #208]	; 3f2fc <start_wsockd+0x440>
   3f228:	add	r1, pc, r1
   3f22c:	mov	r0, #0
   3f230:	bl	e0b4 <ilog@plt>
   3f234:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f238:	bl	db5c <rb_close@plt>
   3f23c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f240:	bl	db5c <rb_close@plt>
   3f244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f248:	bl	db5c <rb_close@plt>
   3f24c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f250:	bl	db5c <rb_close@plt>
   3f254:	b	3f280 <start_wsockd+0x3c4>
   3f258:	ldr	r3, [r5, #60]	; 0x3c
   3f25c:	ldr	r0, [r8]
   3f260:	str	r0, [sp]
   3f264:	mov	r4, #0
   3f268:	ldr	r1, [pc, #88]	; 3f2c8 <start_wsockd+0x40c>
   3f26c:	add	r1, pc, r1
   3f270:	ldr	r2, [pc, #84]	; 3f2cc <start_wsockd+0x410>
   3f274:	add	r2, pc, r2
   3f278:	mov	r0, #0
   3f27c:	bl	e0b4 <ilog@plt>
   3f280:	mov	r0, r4
   3f284:	sub	sp, fp, #28
   3f288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f28c:	.word	0x00031ca4
   3f290:	.word	0x00031c90
   3f294:	.word	0x00031c80
   3f298:	.word	0x000093ff
   3f29c:	.word	0x0000941b
   3f2a0:	.word	0x000003b4
   3f2a4:	.word	0x00031c18
   3f2a8:	.word	0x00031c0c
   3f2ac:	.word	0x00031c00
   3f2b0:	.word	0x00031bf8
   3f2b4:	.word	0x0001baac
   3f2b8:	.word	0x0000685d
   3f2bc:	.word	0x000093ac
   3f2c0:	.word	0x0001bb94
   3f2c4:	.word	0x00009375
   3f2c8:	.word	0x0000911f
   3f2cc:	.word	0x00006591
   3f2d0:	.word	0x00031b50
   3f2d4:	.word	0x00009372
   3f2d8:	.word	0x00001860
   3f2dc:	.word	0x00009342
   3f2e0:	.word	0x000091ff
   3f2e4:	.word	0x00008482
   3f2e8:	.word	0x0000931a
   3f2ec:	.word	0x00009222
   3f2f0:	.word	0x00008475
   3f2f4:	.word	0x00008452
   3f2f8:	.word	0x00031a14
   3f2fc:	.word	0x0000922b

0003f300 <restart_wsockd_event>:
   3f300:	push	{r4, r5, r6, sl, fp, lr}
   3f304:	add	fp, sp, #16
   3f308:	ldr	r0, [pc, #108]	; 3f37c <restart_wsockd_event+0x7c>
   3f30c:	add	r0, pc, r0
   3f310:	mov	r1, #0
   3f314:	str	r1, [r0]
   3f318:	ldr	r0, [pc, #96]	; 3f380 <restart_wsockd_event+0x80>
   3f31c:	add	r0, pc, r0
   3f320:	str	r1, [r0]
   3f324:	ldr	r0, [pc, #88]	; 3f384 <restart_wsockd_event+0x84>
   3f328:	add	r0, pc, r0
   3f32c:	strb	r1, [r0]
   3f330:	ldr	r0, [pc, #80]	; 3f388 <restart_wsockd_event+0x88>
   3f334:	ldr	r0, [pc, r0]
   3f338:	ldr	r6, [r0, #304]	; 0x130
   3f33c:	bl	e4b0 <get_wsockd_count@plt>
   3f340:	cmp	r6, r0
   3f344:	pople	{r4, r5, r6, sl, fp, pc}
   3f348:	mov	r4, r0
   3f34c:	ldr	r5, [pc, #56]	; 3f38c <restart_wsockd_event+0x8c>
   3f350:	add	r5, pc, r5
   3f354:	mov	r0, #0
   3f358:	mov	r1, r5
   3f35c:	bl	e0b4 <ilog@plt>
   3f360:	mov	r0, #256	; 0x100
   3f364:	mov	r1, #0
   3f368:	mov	r2, r5
   3f36c:	bl	d640 <sendto_realops_snomask@plt>
   3f370:	sub	r0, r6, r4
   3f374:	pop	{r4, r5, r6, sl, fp, lr}
   3f378:	b	3eebc <start_wsockd>
   3f37c:	.word	0x00031874
   3f380:	.word	0x00031860
   3f384:	.word	0x00031850
   3f388:	.word	0x0001b61c
   3f38c:	.word	0x00009130

0003f390 <rb_strdup>:
   3f390:	push	{r4, r5, fp, lr}
   3f394:	add	fp, sp, #8
   3f398:	mov	r4, r0
   3f39c:	bl	dc94 <strlen@plt>
   3f3a0:	add	r0, r0, #1
   3f3a4:	bl	da90 <malloc@plt>
   3f3a8:	cmp	r0, #0
   3f3ac:	beq	3f3c4 <rb_strdup+0x34>
   3f3b0:	mov	r5, r0
   3f3b4:	mov	r1, r4
   3f3b8:	bl	d928 <strcpy@plt>
   3f3bc:	mov	r0, r5
   3f3c0:	pop	{r4, r5, fp, pc}
   3f3c4:	bl	d448 <rb_outofmemory@plt>

0003f3c8 <allocate_ws_daemon>:
   3f3c8:	push	{r4, r5, r6, r7, fp, lr}
   3f3cc:	add	fp, sp, #16
   3f3d0:	mov	r4, #0
   3f3d4:	cmp	r0, #0
   3f3d8:	beq	3f42c <allocate_ws_daemon+0x64>
   3f3dc:	mov	r5, r2
   3f3e0:	cmp	r2, #0
   3f3e4:	blt	3f42c <allocate_ws_daemon+0x64>
   3f3e8:	mov	r6, r1
   3f3ec:	mov	r7, r0
   3f3f0:	mov	r0, #56	; 0x38
   3f3f4:	bl	3f930 <rb_malloc>
   3f3f8:	mov	r4, r0
   3f3fc:	str	r7, [r0, #16]
   3f400:	str	r6, [r0, #20]
   3f404:	str	r5, [r0, #24]
   3f408:	ldr	r0, [pc, #36]	; 3f434 <allocate_ws_daemon+0x6c>
   3f40c:	ldr	r0, [pc, r0]
   3f410:	add	r0, r0, #1
   3f414:	ldr	r1, [pc, #28]	; 3f438 <allocate_ws_daemon+0x70>
   3f418:	add	r1, pc, r1
   3f41c:	str	r0, [r1]
   3f420:	mov	r0, r4
   3f424:	mov	r1, r4
   3f428:	bl	3f950 <rb_dlinkAdd>
   3f42c:	mov	r0, r4
   3f430:	pop	{r4, r5, r6, r7, fp, pc}
   3f434:	.word	0x00031768
   3f438:	.word	0x0003175c

0003f43c <ws_read_ctl>:
   3f43c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f440:	add	fp, sp, #24
   3f444:	sub	sp, sp, #8
   3f448:	ldrb	r0, [r1, #53]	; 0x35
   3f44c:	cmp	r0, #0
   3f450:	subne	sp, fp, #24
   3f454:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f458:	mov	r4, r1
   3f45c:	mov	r0, #40	; 0x28
   3f460:	bl	3f930 <rb_malloc>
   3f464:	mov	r5, r0
   3f468:	mov	r0, #1024	; 0x400
   3f46c:	bl	3f930 <rb_malloc>
   3f470:	mov	r1, r0
   3f474:	str	r0, [r5, #12]
   3f478:	ldr	r0, [r4, #16]
   3f47c:	mov	r8, #4
   3f480:	str	r8, [sp]
   3f484:	add	r3, r5, #20
   3f488:	mov	r2, #1024	; 0x400
   3f48c:	bl	d814 <rb_recv_fd_buf@plt>
   3f490:	str	r0, [r5, #16]
   3f494:	cmp	r0, #1
   3f498:	blt	3f4ec <ws_read_ctl+0xb0>
   3f49c:	add	r6, r4, #28
   3f4a0:	mov	r0, r5
   3f4a4:	mov	r1, r5
   3f4a8:	mov	r2, r6
   3f4ac:	bl	3fab4 <rb_dlinkAddTail>
   3f4b0:	mov	r0, #40	; 0x28
   3f4b4:	bl	3f930 <rb_malloc>
   3f4b8:	mov	r5, r0
   3f4bc:	mov	r0, #1024	; 0x400
   3f4c0:	bl	3f930 <rb_malloc>
   3f4c4:	mov	r1, r0
   3f4c8:	str	r0, [r5, #12]
   3f4cc:	ldr	r0, [r4, #16]
   3f4d0:	str	r8, [sp]
   3f4d4:	add	r3, r5, #20
   3f4d8:	mov	r2, #1024	; 0x400
   3f4dc:	bl	d814 <rb_recv_fd_buf@plt>
   3f4e0:	str	r0, [r5, #16]
   3f4e4:	cmp	r0, #0
   3f4e8:	bgt	3f4a0 <ws_read_ctl+0x64>
   3f4ec:	mov	r7, r0
   3f4f0:	ldr	r0, [r5, #12]
   3f4f4:	bl	3f86c <rb_free>
   3f4f8:	mov	r0, r5
   3f4fc:	bl	3f86c <rb_free>
   3f500:	cmp	r7, #0
   3f504:	beq	3f544 <ws_read_ctl+0x108>
   3f508:	bl	de38 <__errno_location@plt>
   3f50c:	ldr	r0, [r0]
   3f510:	bl	dac0 <rb_ignore_errno@plt>
   3f514:	cmp	r0, #0
   3f518:	beq	3f544 <ws_read_ctl+0x108>
   3f51c:	mov	r0, r4
   3f520:	bl	3fbac <ws_process_cmd_recv>
   3f524:	ldr	r0, [r4, #16]
   3f528:	ldr	r2, [pc, #36]	; 3f554 <ws_read_ctl+0x118>
   3f52c:	add	r2, pc, r2
   3f530:	mov	r1, #1
   3f534:	mov	r3, r4
   3f538:	sub	sp, fp, #24
   3f53c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f540:	b	d304 <rb_setselect@plt>
   3f544:	mov	r0, r4
   3f548:	sub	sp, fp, #24
   3f54c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f550:	b	3fa24 <ws_dead>
   3f554:	.word	0xffffff08

0003f558 <ws_do_pipe>:
   3f558:	push	{r4, r5, fp, lr}
   3f55c:	add	fp, sp, #8
   3f560:	mov	r4, r1
   3f564:	mov	r5, r0
   3f568:	ldr	r1, [pc, #84]	; 3f5c4 <ws_do_pipe+0x6c>
   3f56c:	add	r1, pc, r1
   3f570:	mov	r2, #1
   3f574:	bl	e738 <rb_write@plt>
   3f578:	cmp	r0, #0
   3f57c:	beq	3f5b8 <ws_do_pipe+0x60>
   3f580:	cmn	r0, #1
   3f584:	bgt	3f59c <ws_do_pipe+0x44>
   3f588:	bl	de38 <__errno_location@plt>
   3f58c:	ldr	r0, [r0]
   3f590:	bl	dac0 <rb_ignore_errno@plt>
   3f594:	cmp	r0, #0
   3f598:	beq	3f5b8 <ws_do_pipe+0x60>
   3f59c:	ldr	r2, [pc, #36]	; 3f5c8 <ws_do_pipe+0x70>
   3f5a0:	add	r2, pc, r2
   3f5a4:	mov	r0, r5
   3f5a8:	mov	r1, #1
   3f5ac:	mov	r3, r4
   3f5b0:	pop	{r4, r5, fp, lr}
   3f5b4:	b	d304 <rb_setselect@plt>
   3f5b8:	mov	r0, r4
   3f5bc:	pop	{r4, r5, fp, lr}
   3f5c0:	b	3fa24 <ws_dead>
   3f5c4:	.word	0x000084c1
   3f5c8:	.word	0xffffffb0

0003f5cc <start_wsockd_accept>:
   3f5cc:	push	{r4, sl, fp, lr}
   3f5d0:	add	fp, sp, #8
   3f5d4:	sub	sp, sp, #16
   3f5d8:	str	r1, [sp, #12]
   3f5dc:	str	r0, [sp, #8]
   3f5e0:	mov	r0, #65	; 0x41
   3f5e4:	strb	r0, [sp, #3]
   3f5e8:	add	r0, sp, #3
   3f5ec:	add	r0, r0, #1
   3f5f0:	mov	r1, r2
   3f5f4:	bl	3f630 <uint32_to_buf>
   3f5f8:	bl	3f638 <which_wsockd>
   3f5fc:	mov	r4, r0
   3f600:	cmp	r0, #0
   3f604:	beq	3f624 <start_wsockd_accept+0x58>
   3f608:	ldr	r0, [r4, #12]
   3f60c:	add	r0, r0, #1
   3f610:	str	r0, [r4, #12]
   3f614:	add	r1, sp, #8
   3f618:	add	r2, sp, #3
   3f61c:	mov	r0, r4
   3f620:	bl	3f69c <ws_cmd_write_queue>
   3f624:	mov	r0, r4
   3f628:	sub	sp, fp, #8
   3f62c:	pop	{r4, sl, fp, pc}

0003f630 <uint32_to_buf>:
   3f630:	str	r1, [r0]
   3f634:	bx	lr

0003f638 <which_wsockd>:
   3f638:	ldr	r1, [pc, #88]	; 3f698 <which_wsockd+0x60>
   3f63c:	ldr	r1, [pc, r1]
   3f640:	mov	r0, #0
   3f644:	b	3f64c <which_wsockd+0x14>
   3f648:	ldr	r1, [r1, #8]
   3f64c:	cmp	r1, #0
   3f650:	bxeq	lr
   3f654:	ldr	r2, [r1]
   3f658:	ldrb	r3, [r2, #53]	; 0x35
   3f65c:	cmp	r3, #0
   3f660:	bne	3f648 <which_wsockd+0x10>
   3f664:	ldrb	r3, [r2, #52]	; 0x34
   3f668:	cmp	r3, #0
   3f66c:	bne	3f648 <which_wsockd+0x10>
   3f670:	cmp	r0, #0
   3f674:	beq	3f68c <which_wsockd+0x54>
   3f678:	ldr	ip, [r0, #12]
   3f67c:	ldr	r3, [r2, #12]
   3f680:	cmp	r3, ip
   3f684:	movlt	r0, r2
   3f688:	b	3f648 <which_wsockd+0x10>
   3f68c:	mov	r0, r2
   3f690:	ldr	r1, [r1, #8]
   3f694:	b	3f64c <which_wsockd+0x14>
   3f698:	.word	0x0003152c

0003f69c <ws_cmd_write_queue>:
   3f69c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f6a0:	add	fp, sp, #24
   3f6a4:	mov	r4, r0
   3f6a8:	ldrb	r0, [r0, #53]	; 0x35
   3f6ac:	cmp	r0, #0
   3f6b0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f6b4:	mov	r6, r2
   3f6b8:	mov	r5, r1
   3f6bc:	mov	r0, #40	; 0x28
   3f6c0:	bl	3f930 <rb_malloc>
   3f6c4:	mov	r7, r0
   3f6c8:	mov	r8, #5
   3f6cc:	mov	r0, #5
   3f6d0:	bl	3f930 <rb_malloc>
   3f6d4:	ldrb	r1, [r6, #4]
   3f6d8:	strb	r1, [r0, #4]
   3f6dc:	ldr	r1, [r6]
   3f6e0:	str	r1, [r0]
   3f6e4:	ldm	r5, {r1, r2}
   3f6e8:	mov	r3, #2
   3f6ec:	str	r3, [r7, #36]	; 0x24
   3f6f0:	str	r0, [r7, #12]
   3f6f4:	str	r8, [r7, #16]
   3f6f8:	str	r1, [r7, #20]
   3f6fc:	str	r2, [r7, #24]
   3f700:	add	r2, r4, #40	; 0x28
   3f704:	mov	r0, r7
   3f708:	mov	r1, r7
   3f70c:	bl	3fab4 <rb_dlinkAddTail>
   3f710:	ldr	r0, [r4, #16]
   3f714:	mov	r1, r4
   3f718:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f71c:	b	3fd40 <ws_write_ctl>

0003f720 <wsockd_decrement_clicount>:
   3f720:	push	{r4, sl, fp, lr}
   3f724:	add	fp, sp, #8
   3f728:	cmp	r0, #0
   3f72c:	beq	3f77c <wsockd_decrement_clicount+0x5c>
   3f730:	mov	r4, r0
   3f734:	ldr	r0, [r0, #12]
   3f738:	subs	r0, r0, #1
   3f73c:	str	r0, [r4, #12]
   3f740:	bne	3f764 <wsockd_decrement_clicount+0x44>
   3f744:	ldrb	r0, [r4, #52]	; 0x34
   3f748:	cmp	r0, #0
   3f74c:	beq	3f764 <wsockd_decrement_clicount+0x44>
   3f750:	mov	r0, #1
   3f754:	strb	r0, [r4, #53]	; 0x35
   3f758:	ldr	r0, [r4, #24]
   3f75c:	mov	r1, #9
   3f760:	bl	d478 <rb_kill@plt>
   3f764:	ldrb	r0, [r4, #53]	; 0x35
   3f768:	cmp	r0, #0
   3f76c:	popeq	{r4, sl, fp, pc}
   3f770:	ldr	r0, [r4, #12]
   3f774:	cmp	r0, #0
   3f778:	beq	3f780 <wsockd_decrement_clicount+0x60>
   3f77c:	pop	{r4, sl, fp, pc}
   3f780:	mov	r0, r4
   3f784:	pop	{r4, sl, fp, lr}
   3f788:	b	3edb4 <free_ws_daemon>

0003f78c <get_wsockd_count>:
   3f78c:	ldr	r0, [pc, #4]	; 3f798 <get_wsockd_count+0xc>
   3f790:	ldr	r0, [pc, r0]
   3f794:	bx	lr
   3f798:	.word	0x000313e4

0003f79c <wsockd_foreach_info>:
   3f79c:	push	{r4, r5, r6, r7, fp, lr}
   3f7a0:	add	fp, sp, #16
   3f7a4:	ldr	r6, [pc, #80]	; 3f7fc <wsockd_foreach_info+0x60>
   3f7a8:	ldr	r6, [pc, r6]
   3f7ac:	cmp	r6, #0
   3f7b0:	popeq	{r4, r5, r6, r7, fp, pc}
   3f7b4:	mov	r7, r1
   3f7b8:	mov	r5, r0
   3f7bc:	ldr	r0, [r6]
   3f7c0:	ldr	r6, [r6, #8]
   3f7c4:	ldr	r2, [r0, #12]
   3f7c8:	ldr	r1, [r0, #24]
   3f7cc:	ldrb	r4, [r0, #53]	; 0x35
   3f7d0:	mov	r3, #2
   3f7d4:	cmp	r4, #0
   3f7d8:	bne	3f7e8 <wsockd_foreach_info+0x4c>
   3f7dc:	ldrb	r3, [r0, #52]	; 0x34
   3f7e0:	cmp	r3, #0
   3f7e4:	movwne	r3, #1
   3f7e8:	mov	r0, r7
   3f7ec:	blx	r5
   3f7f0:	cmp	r6, #0
   3f7f4:	bne	3f7bc <wsockd_foreach_info+0x20>
   3f7f8:	pop	{r4, r5, r6, r7, fp, pc}
   3f7fc:	.word	0x000313c0

0003f800 <init_wsockd>:
   3f800:	ldr	r0, [pc, #20]	; 3f81c <init_wsockd+0x1c>
   3f804:	add	r0, pc, r0
   3f808:	ldr	r1, [pc, #16]	; 3f820 <init_wsockd+0x20>
   3f80c:	add	r1, pc, r1
   3f810:	mov	r2, #0
   3f814:	mov	r3, #60	; 0x3c
   3f818:	b	d220 <rb_event_addish@plt>
   3f81c:	.word	0x00008c6c
   3f820:	.word	0x00000010

0003f824 <cleanup_dead_ws>:
   3f824:	push	{r4, sl, fp, lr}
   3f828:	add	fp, sp, #8
   3f82c:	ldr	r4, [pc, #52]	; 3f868 <cleanup_dead_ws+0x44>
   3f830:	ldr	r4, [pc, r4]
   3f834:	b	3f83c <cleanup_dead_ws+0x18>
   3f838:	bl	3edb4 <free_ws_daemon>
   3f83c:	cmp	r4, #0
   3f840:	popeq	{r4, sl, fp, pc}
   3f844:	ldr	r0, [r4]
   3f848:	ldr	r4, [r4, #8]
   3f84c:	ldrb	r1, [r0, #53]	; 0x35
   3f850:	cmp	r1, #0
   3f854:	beq	3f83c <cleanup_dead_ws+0x18>
   3f858:	ldr	r1, [r0, #12]
   3f85c:	cmp	r1, #0
   3f860:	bne	3f83c <cleanup_dead_ws+0x18>
   3f864:	b	3f838 <cleanup_dead_ws+0x14>
   3f868:	.word	0x00031338

0003f86c <rb_free>:
   3f86c:	cmp	r0, #0
   3f870:	bxeq	lr
   3f874:	b	d328 <free@plt>

0003f878 <rb_dlinkDelete>:
   3f878:	push	{fp, lr}
   3f87c:	mov	fp, sp
   3f880:	cmp	r0, #0
   3f884:	beq	3f8d8 <rb_dlinkDelete+0x60>
   3f888:	cmp	r1, #0
   3f88c:	beq	3f8f8 <rb_dlinkDelete+0x80>
   3f890:	ldr	ip, [r0, #4]
   3f894:	ldr	r3, [r0, #8]
   3f898:	add	r2, r3, #4
   3f89c:	cmp	r3, #0
   3f8a0:	addeq	r2, r1, #4
   3f8a4:	str	ip, [r2]
   3f8a8:	ldmib	r0, {r2, ip}
   3f8ac:	cmp	r2, #0
   3f8b0:	mov	r3, r1
   3f8b4:	addne	r3, r2, #8
   3f8b8:	str	ip, [r3]
   3f8bc:	mov	r2, #0
   3f8c0:	str	r2, [r0, #4]
   3f8c4:	str	r2, [r0, #8]
   3f8c8:	ldr	r0, [r1, #8]
   3f8cc:	sub	r0, r0, #1
   3f8d0:	str	r0, [r1, #8]
   3f8d4:	pop	{fp, pc}
   3f8d8:	ldr	r0, [pc, #56]	; 3f918 <rb_dlinkDelete+0xa0>
   3f8dc:	add	r0, pc, r0
   3f8e0:	ldr	r1, [pc, #52]	; 3f91c <rb_dlinkDelete+0xa4>
   3f8e4:	add	r1, pc, r1
   3f8e8:	ldr	r3, [pc, #48]	; 3f920 <rb_dlinkDelete+0xa8>
   3f8ec:	add	r3, pc, r3
   3f8f0:	mov	r2, #235	; 0xeb
   3f8f4:	bl	e7e0 <__assert_fail@plt>
   3f8f8:	ldr	r0, [pc, #36]	; 3f924 <rb_dlinkDelete+0xac>
   3f8fc:	add	r0, pc, r0
   3f900:	ldr	r1, [pc, #32]	; 3f928 <rb_dlinkDelete+0xb0>
   3f904:	add	r1, pc, r1
   3f908:	ldr	r3, [pc, #28]	; 3f92c <rb_dlinkDelete+0xb4>
   3f90c:	add	r3, pc, r3
   3f910:	mov	r2, #236	; 0xec
   3f914:	bl	e7e0 <__assert_fail@plt>
   3f918:	.word	0x00000cd0
   3f91c:	.word	0x00000cd2
   3f920:	.word	0x00000d6d
   3f924:	.word	0x00006549
   3f928:	.word	0x00000cb2
   3f92c:	.word	0x00000d4d

0003f930 <rb_malloc>:
   3f930:	push	{fp, lr}
   3f934:	mov	fp, sp
   3f938:	mov	r1, r0
   3f93c:	mov	r0, #1
   3f940:	bl	cfa4 <calloc@plt>
   3f944:	cmp	r0, #0
   3f948:	popne	{fp, pc}
   3f94c:	bl	d448 <rb_outofmemory@plt>

0003f950 <rb_dlinkAdd>:
   3f950:	push	{fp, lr}
   3f954:	mov	fp, sp
   3f958:	cmp	r0, #0
   3f95c:	beq	3f9c0 <rb_dlinkAdd+0x70>
   3f960:	cmp	r1, #0
   3f964:	beq	3f9e0 <rb_dlinkAdd+0x90>
   3f968:	mov	r2, #0
   3f96c:	stm	r1, {r0, r2}
   3f970:	ldr	r0, [pc, #136]	; 3fa00 <rb_dlinkAdd+0xb0>
   3f974:	ldr	r0, [pc, r0]
   3f978:	str	r0, [r1, #8]
   3f97c:	cmp	r0, #0
   3f980:	beq	3f990 <rb_dlinkAdd+0x40>
   3f984:	add	r0, r0, #4
   3f988:	str	r1, [r0]
   3f98c:	b	3f9a4 <rb_dlinkAdd+0x54>
   3f990:	ldr	r0, [pc, #108]	; 3fa04 <rb_dlinkAdd+0xb4>
   3f994:	add	r0, pc, r0
   3f998:	ldr	r2, [r0, #4]!
   3f99c:	cmp	r2, #0
   3f9a0:	streq	r1, [r0]
   3f9a4:	ldr	r0, [pc, #92]	; 3fa08 <rb_dlinkAdd+0xb8>
   3f9a8:	add	r0, pc, r0
   3f9ac:	str	r1, [r0]
   3f9b0:	ldr	r1, [r0, #8]
   3f9b4:	add	r1, r1, #1
   3f9b8:	str	r1, [r0, #8]
   3f9bc:	pop	{fp, pc}
   3f9c0:	ldr	r0, [pc, #68]	; 3fa0c <rb_dlinkAdd+0xbc>
   3f9c4:	add	r0, pc, r0
   3f9c8:	ldr	r1, [pc, #64]	; 3fa10 <rb_dlinkAdd+0xc0>
   3f9cc:	add	r1, pc, r1
   3f9d0:	ldr	r3, [pc, #60]	; 3fa14 <rb_dlinkAdd+0xc4>
   3f9d4:	add	r3, pc, r3
   3f9d8:	mov	r2, #143	; 0x8f
   3f9dc:	bl	e7e0 <__assert_fail@plt>
   3f9e0:	ldr	r0, [pc, #48]	; 3fa18 <rb_dlinkAdd+0xc8>
   3f9e4:	add	r0, pc, r0
   3f9e8:	ldr	r1, [pc, #44]	; 3fa1c <rb_dlinkAdd+0xcc>
   3f9ec:	add	r1, pc, r1
   3f9f0:	ldr	r3, [pc, #40]	; 3fa20 <rb_dlinkAdd+0xd0>
   3f9f4:	add	r3, pc, r3
   3f9f8:	mov	r2, #144	; 0x90
   3f9fc:	bl	e7e0 <__assert_fail@plt>
   3fa00:	.word	0x000311f4
   3fa04:	.word	0x000311d4
   3fa08:	.word	0x000311c0
   3fa0c:	.word	0x00000c4d
   3fa10:	.word	0x00000bea
   3fa14:	.word	0x00000c4a
   3fa18:	.word	0x00000bc8
   3fa1c:	.word	0x00000bca
   3fa20:	.word	0x00000c2a

0003fa24 <ws_dead>:
   3fa24:	push	{r4, sl, fp, lr}
   3fa28:	add	fp, sp, #8
   3fa2c:	mov	r4, r0
   3fa30:	ldrb	r0, [r0, #53]	; 0x35
   3fa34:	cmp	r0, #0
   3fa38:	popne	{r4, sl, fp, pc}
   3fa3c:	mov	r0, #1
   3fa40:	strb	r0, [r4, #53]	; 0x35
   3fa44:	ldr	r0, [r4, #24]
   3fa48:	mov	r1, #9
   3fa4c:	bl	d478 <rb_kill@plt>
   3fa50:	ldrb	r0, [r4, #52]	; 0x34
   3fa54:	cmp	r0, #0
   3fa58:	beq	3fa60 <ws_dead+0x3c>
   3fa5c:	pop	{r4, sl, fp, pc}
   3fa60:	ldr	r0, [pc, #64]	; 3faa8 <ws_dead+0x84>
   3fa64:	ldr	r0, [pc, r0]
   3fa68:	sub	r0, r0, #1
   3fa6c:	ldr	r1, [pc, #56]	; 3faac <ws_dead+0x88>
   3fa70:	add	r1, pc, r1
   3fa74:	str	r0, [r1]
   3fa78:	ldr	r4, [pc, #48]	; 3fab0 <ws_dead+0x8c>
   3fa7c:	add	r4, pc, r4
   3fa80:	mov	r0, #0
   3fa84:	mov	r1, r4
   3fa88:	bl	e0b4 <ilog@plt>
   3fa8c:	mov	r0, #256	; 0x100
   3fa90:	mov	r1, #0
   3fa94:	mov	r2, r4
   3fa98:	bl	d640 <sendto_realops_snomask@plt>
   3fa9c:	mov	r0, #1
   3faa0:	pop	{r4, sl, fp, lr}
   3faa4:	b	3eebc <start_wsockd>
   3faa8:	.word	0x00031110
   3faac:	.word	0x00031104
   3fab0:	.word	0x00008a2b

0003fab4 <rb_dlinkAddTail>:
   3fab4:	push	{fp, lr}
   3fab8:	mov	fp, sp
   3fabc:	cmp	r1, #0
   3fac0:	beq	3fb28 <rb_dlinkAddTail+0x74>
   3fac4:	cmp	r2, #0
   3fac8:	beq	3fb48 <rb_dlinkAddTail+0x94>
   3facc:	cmp	r0, #0
   3fad0:	beq	3fb68 <rb_dlinkAddTail+0xb4>
   3fad4:	mov	r3, #0
   3fad8:	str	r3, [r1, #8]
   3fadc:	str	r0, [r1]
   3fae0:	ldr	r0, [r2, #4]
   3fae4:	str	r0, [r1, #4]
   3fae8:	ldr	r0, [r2, #4]
   3faec:	cmp	r0, #0
   3faf0:	beq	3fb00 <rb_dlinkAddTail+0x4c>
   3faf4:	add	r0, r0, #8
   3faf8:	str	r1, [r0]
   3fafc:	b	3fb0c <rb_dlinkAddTail+0x58>
   3fb00:	ldr	r0, [r2]
   3fb04:	cmp	r0, #0
   3fb08:	beq	3fb20 <rb_dlinkAddTail+0x6c>
   3fb0c:	str	r1, [r2, #4]
   3fb10:	ldr	r0, [r2, #8]
   3fb14:	add	r0, r0, #1
   3fb18:	str	r0, [r2, #8]
   3fb1c:	pop	{fp, pc}
   3fb20:	mov	r0, r2
   3fb24:	b	3faf8 <rb_dlinkAddTail+0x44>
   3fb28:	ldr	r0, [pc, #88]	; 3fb88 <rb_dlinkAddTail+0xd4>
   3fb2c:	add	r0, pc, r0
   3fb30:	ldr	r1, [pc, #84]	; 3fb8c <rb_dlinkAddTail+0xd8>
   3fb34:	add	r1, pc, r1
   3fb38:	ldr	r3, [pc, #80]	; 3fb90 <rb_dlinkAddTail+0xdc>
   3fb3c:	add	r3, pc, r3
   3fb40:	mov	r2, #211	; 0xd3
   3fb44:	bl	e7e0 <__assert_fail@plt>
   3fb48:	ldr	r0, [pc, #68]	; 3fb94 <rb_dlinkAddTail+0xe0>
   3fb4c:	add	r0, pc, r0
   3fb50:	ldr	r1, [pc, #64]	; 3fb98 <rb_dlinkAddTail+0xe4>
   3fb54:	add	r1, pc, r1
   3fb58:	ldr	r3, [pc, #60]	; 3fb9c <rb_dlinkAddTail+0xe8>
   3fb5c:	add	r3, pc, r3
   3fb60:	mov	r2, #212	; 0xd4
   3fb64:	bl	e7e0 <__assert_fail@plt>
   3fb68:	ldr	r0, [pc, #48]	; 3fba0 <rb_dlinkAddTail+0xec>
   3fb6c:	add	r0, pc, r0
   3fb70:	ldr	r1, [pc, #44]	; 3fba4 <rb_dlinkAddTail+0xf0>
   3fb74:	add	r1, pc, r1
   3fb78:	ldr	r3, [pc, #40]	; 3fba8 <rb_dlinkAddTail+0xf4>
   3fb7c:	add	r3, pc, r3
   3fb80:	mov	r2, #213	; 0xd5
   3fb84:	bl	e7e0 <__assert_fail@plt>
   3fb88:	.word	0x00000a80
   3fb8c:	.word	0x00000a82
   3fb90:	.word	0x00000a96
   3fb94:	.word	0x000062f9
   3fb98:	.word	0x00000a62
   3fb9c:	.word	0x00000a76
   3fba0:	.word	0x00000aa5
   3fba4:	.word	0x00000a42
   3fba8:	.word	0x00000a56

0003fbac <ws_process_cmd_recv>:
   3fbac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3fbb0:	add	fp, sp, #24
   3fbb4:	mov	r4, r0
   3fbb8:	ldrb	r0, [r0, #53]	; 0x35
   3fbbc:	cmp	r0, #0
   3fbc0:	bne	3fc48 <ws_process_cmd_recv+0x9c>
   3fbc4:	ldr	r7, [r4, #28]!
   3fbc8:	cmp	r7, #0
   3fbcc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3fbd0:	ldr	r8, [pc, #116]	; 3fc4c <ws_process_cmd_recv+0xa0>
   3fbd4:	add	r8, pc, r8
   3fbd8:	ldr	r9, [pc, #112]	; 3fc50 <ws_process_cmd_recv+0xa4>
   3fbdc:	add	r9, pc, r9
   3fbe0:	ldr	r5, [r7]
   3fbe4:	ldr	r6, [r7, #8]
   3fbe8:	ldr	r2, [r5, #12]
   3fbec:	ldrb	r0, [r2]
   3fbf0:	cmp	r0, #68	; 0x44
   3fbf4:	bne	3fc04 <ws_process_cmd_recv+0x58>
   3fbf8:	mov	r0, r5
   3fbfc:	bl	3fc54 <ws_process_dead_fd>
   3fc00:	b	3fc20 <ws_process_cmd_recv+0x74>
   3fc04:	mov	r0, #0
   3fc08:	mov	r1, r8
   3fc0c:	bl	e0b4 <ilog@plt>
   3fc10:	mov	r0, #256	; 0x100
   3fc14:	mov	r1, #0
   3fc18:	mov	r2, r9
   3fc1c:	bl	d640 <sendto_realops_snomask@plt>
   3fc20:	mov	r0, r7
   3fc24:	mov	r1, r4
   3fc28:	bl	3f878 <rb_dlinkDelete>
   3fc2c:	ldr	r0, [r5, #12]
   3fc30:	bl	3f86c <rb_free>
   3fc34:	mov	r0, r5
   3fc38:	bl	3f86c <rb_free>
   3fc3c:	cmp	r6, #0
   3fc40:	mov	r7, r6
   3fc44:	bne	3fbe0 <ws_process_cmd_recv+0x34>
   3fc48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3fc4c:	.word	0x000088fe
   3fc50:	.word	0x0000891f

0003fc54 <ws_process_dead_fd>:
   3fc54:	push	{r4, r5, r6, r7, fp, lr}
   3fc58:	add	fp, sp, #16
   3fc5c:	sub	sp, sp, #256	; 0x100
   3fc60:	ldr	r1, [r0, #16]
   3fc64:	cmp	r1, #6
   3fc68:	bcc	3fcf8 <ws_process_dead_fd+0xa4>
   3fc6c:	ldr	r5, [r0, #12]
   3fc70:	add	r0, r5, #1
   3fc74:	bl	3fd38 <buf_to_uint32>
   3fc78:	mov	r4, r0
   3fc7c:	add	r1, r5, #5
   3fc80:	mov	r0, sp
   3fc84:	mov	r2, #256	; 0x100
   3fc88:	bl	e510 <rb_strlcpy@plt>
   3fc8c:	mov	r0, r4
   3fc90:	bl	dfdc <find_cli_connid_hash@plt>
   3fc94:	cmp	r0, #0
   3fc98:	beq	3fcf8 <ws_process_dead_fd+0xa4>
   3fc9c:	mov	r4, r0
   3fca0:	ldrh	r0, [r0, #80]	; 0x50
   3fca4:	sub	r1, r0, #1
   3fca8:	cmp	r1, #31
   3fcac:	bhi	3fd00 <ws_process_dead_fd+0xac>
   3fcb0:	mov	r2, #1
   3fcb4:	mov	r3, #-2147483645	; 0x80000003
   3fcb8:	tst	r3, r2, lsl r1
   3fcbc:	beq	3fd00 <ws_process_dead_fd+0xac>
   3fcc0:	mov	r0, sp
   3fcc4:	ldr	r1, [pc, #100]	; 3fd30 <ws_process_dead_fd+0xdc>
   3fcc8:	add	r1, pc, r1
   3fccc:	bl	d0c4 <strcmp@plt>
   3fcd0:	cmp	r0, #0
   3fcd4:	bne	3fce8 <ws_process_dead_fd+0x94>
   3fcd8:	ldr	r0, [r4, #432]	; 0x1b0
   3fcdc:	ldr	r0, [r0, #300]	; 0x12c
   3fce0:	mov	r1, r4
   3fce4:	bl	d76c <read_packet@plt>
   3fce8:	ldrh	r0, [r4, #64]	; 0x40
   3fcec:	movw	r1, #16418	; 0x4022
   3fcf0:	tst	r0, r1
   3fcf4:	beq	3fd10 <ws_process_dead_fd+0xbc>
   3fcf8:	sub	sp, fp, #16
   3fcfc:	pop	{r4, r5, r6, r7, fp, pc}
   3fd00:	cmp	r0, #9
   3fd04:	bcc	3fd10 <ws_process_dead_fd+0xbc>
   3fd08:	cmp	r0, #16
   3fd0c:	bne	3fcc0 <ws_process_dead_fd+0x6c>
   3fd10:	ldr	r2, [pc, #28]	; 3fd34 <ws_process_dead_fd+0xe0>
   3fd14:	ldr	r2, [pc, r2]
   3fd18:	mov	r3, sp
   3fd1c:	mov	r0, r4
   3fd20:	mov	r1, r4
   3fd24:	bl	e534 <exit_client@plt>
   3fd28:	sub	sp, fp, #16
   3fd2c:	pop	{r4, r5, r6, r7, fp, pc}
   3fd30:	.word	0x000016ba
   3fd34:	.word	0x0001ae44

0003fd38 <buf_to_uint32>:
   3fd38:	ldr	r0, [r0]
   3fd3c:	bx	lr

0003fd40 <ws_write_ctl>:
   3fd40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fd44:	add	fp, sp, #28
   3fd48:	sub	sp, sp, #12
   3fd4c:	ldrb	r0, [r1, #53]	; 0x35
   3fd50:	cmp	r0, #0
   3fd54:	beq	3fd60 <ws_write_ctl+0x20>
   3fd58:	sub	sp, fp, #28
   3fd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fd60:	mov	sl, r1
   3fd64:	mov	r9, r1
   3fd68:	ldr	r4, [r9, #40]!	; 0x28
   3fd6c:	cmp	r4, #0
   3fd70:	beq	3fd58 <ws_write_ctl+0x18>
   3fd74:	ldr	r7, [r4]
   3fd78:	ldr	r8, [r4, #8]
   3fd7c:	ldr	r3, [r7, #12]
   3fd80:	ldr	r1, [r7, #16]
   3fd84:	ldr	r2, [r7, #36]	; 0x24
   3fd88:	ldr	r0, [sl, #16]
   3fd8c:	ldr	r6, [sl, #24]
   3fd90:	stm	sp, {r1, r6}
   3fd94:	add	r5, r7, #20
   3fd98:	mov	r1, r5
   3fd9c:	bl	df94 <rb_send_fd_buf@plt>
   3fda0:	mov	r6, r0
   3fda4:	cmp	r0, #1
   3fda8:	blt	3fdf0 <ws_write_ctl+0xb0>
   3fdac:	mov	r0, r4
   3fdb0:	mov	r1, r9
   3fdb4:	bl	3f878 <rb_dlinkDelete>
   3fdb8:	ldr	r0, [r7, #36]	; 0x24
   3fdbc:	cmp	r0, #1
   3fdc0:	blt	3fde0 <ws_write_ctl+0xa0>
   3fdc4:	mov	r4, #0
   3fdc8:	ldr	r0, [r5, r4, lsl #2]
   3fdcc:	bl	db5c <rb_close@plt>
   3fdd0:	add	r4, r4, #1
   3fdd4:	ldr	r0, [r7, #36]	; 0x24
   3fdd8:	cmp	r4, r0
   3fddc:	blt	3fdc8 <ws_write_ctl+0x88>
   3fde0:	ldr	r0, [r7, #12]
   3fde4:	bl	3f86c <rb_free>
   3fde8:	mov	r0, r7
   3fdec:	bl	3f86c <rb_free>
   3fdf0:	cmp	r6, #0
   3fdf4:	beq	3fe3c <ws_write_ctl+0xfc>
   3fdf8:	cmn	r6, #1
   3fdfc:	bgt	3fe14 <ws_write_ctl+0xd4>
   3fe00:	bl	de38 <__errno_location@plt>
   3fe04:	ldr	r0, [r0]
   3fe08:	bl	dac0 <rb_ignore_errno@plt>
   3fe0c:	cmp	r0, #0
   3fe10:	beq	3fe3c <ws_write_ctl+0xfc>
   3fe14:	ldr	r0, [sl, #16]
   3fe18:	mov	r1, #2
   3fe1c:	ldr	r2, [pc, #40]	; 3fe4c <ws_write_ctl+0x10c>
   3fe20:	add	r2, pc, r2
   3fe24:	mov	r3, sl
   3fe28:	bl	d304 <rb_setselect@plt>
   3fe2c:	cmp	r8, #0
   3fe30:	mov	r4, r8
   3fe34:	bne	3fd74 <ws_write_ctl+0x34>
   3fe38:	b	3fd58 <ws_write_ctl+0x18>
   3fe3c:	mov	r0, sl
   3fe40:	sub	sp, fp, #28
   3fe44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fe48:	b	3fa24 <ws_dead>
   3fe4c:	.word	0xffffff18

0003fe50 <__aeabi_drsub>:
   3fe50:	eor	r1, r1, #-2147483648	; 0x80000000
   3fe54:	b	3fe5c <__adddf3>

0003fe58 <__aeabi_dsub>:
   3fe58:	eor	r3, r3, #-2147483648	; 0x80000000

0003fe5c <__adddf3>:
   3fe5c:	push	{r4, r5, lr}
   3fe60:	lsl	r4, r1, #1
   3fe64:	lsl	r5, r3, #1
   3fe68:	teq	r4, r5
   3fe6c:	teqeq	r0, r2
   3fe70:	orrsne	ip, r4, r0
   3fe74:	orrsne	ip, r5, r2
   3fe78:	mvnsne	ip, r4, asr #21
   3fe7c:	mvnsne	ip, r5, asr #21
   3fe80:	beq	4006c <__adddf3+0x210>
   3fe84:	lsr	r4, r4, #21
   3fe88:	rsbs	r5, r4, r5, lsr #21
   3fe8c:	rsblt	r5, r5, #0
   3fe90:	ble	3feb0 <__adddf3+0x54>
   3fe94:	add	r4, r4, r5
   3fe98:	eor	r2, r0, r2
   3fe9c:	eor	r3, r1, r3
   3fea0:	eor	r0, r2, r0
   3fea4:	eor	r1, r3, r1
   3fea8:	eor	r2, r0, r2
   3feac:	eor	r3, r1, r3
   3feb0:	cmp	r5, #54	; 0x36
   3feb4:	pophi	{r4, r5, pc}
   3feb8:	tst	r1, #-2147483648	; 0x80000000
   3febc:	lsl	r1, r1, #12
   3fec0:	mov	ip, #1048576	; 0x100000
   3fec4:	orr	r1, ip, r1, lsr #12
   3fec8:	beq	3fed4 <__adddf3+0x78>
   3fecc:	rsbs	r0, r0, #0
   3fed0:	rsc	r1, r1, #0
   3fed4:	tst	r3, #-2147483648	; 0x80000000
   3fed8:	lsl	r3, r3, #12
   3fedc:	orr	r3, ip, r3, lsr #12
   3fee0:	beq	3feec <__adddf3+0x90>
   3fee4:	rsbs	r2, r2, #0
   3fee8:	rsc	r3, r3, #0
   3feec:	teq	r4, r5
   3fef0:	beq	40054 <__adddf3+0x1f8>
   3fef4:	sub	r4, r4, #1
   3fef8:	rsbs	lr, r5, #32
   3fefc:	blt	3ff18 <__adddf3+0xbc>
   3ff00:	lsl	ip, r2, lr
   3ff04:	adds	r0, r0, r2, lsr r5
   3ff08:	adc	r1, r1, #0
   3ff0c:	adds	r0, r0, r3, lsl lr
   3ff10:	adcs	r1, r1, r3, asr r5
   3ff14:	b	3ff34 <__adddf3+0xd8>
   3ff18:	sub	r5, r5, #32
   3ff1c:	add	lr, lr, #32
   3ff20:	cmp	r2, #1
   3ff24:	lsl	ip, r3, lr
   3ff28:	orrcs	ip, ip, #2
   3ff2c:	adds	r0, r0, r3, asr r5
   3ff30:	adcs	r1, r1, r3, asr #31
   3ff34:	and	r5, r1, #-2147483648	; 0x80000000
   3ff38:	bpl	3ff48 <__adddf3+0xec>
   3ff3c:	rsbs	ip, ip, #0
   3ff40:	rscs	r0, r0, #0
   3ff44:	rsc	r1, r1, #0
   3ff48:	cmp	r1, #1048576	; 0x100000
   3ff4c:	bcc	3ff8c <__adddf3+0x130>
   3ff50:	cmp	r1, #2097152	; 0x200000
   3ff54:	bcc	3ff74 <__adddf3+0x118>
   3ff58:	lsrs	r1, r1, #1
   3ff5c:	rrxs	r0, r0
   3ff60:	rrx	ip, ip
   3ff64:	add	r4, r4, #1
   3ff68:	lsl	r2, r4, #21
   3ff6c:	cmn	r2, #4194304	; 0x400000
   3ff70:	bcs	400cc <__adddf3+0x270>
   3ff74:	cmp	ip, #-2147483648	; 0x80000000
   3ff78:	lsrseq	ip, r0, #1
   3ff7c:	adcs	r0, r0, #0
   3ff80:	adc	r1, r1, r4, lsl #20
   3ff84:	orr	r1, r1, r5
   3ff88:	pop	{r4, r5, pc}
   3ff8c:	lsls	ip, ip, #1
   3ff90:	adcs	r0, r0, r0
   3ff94:	adc	r1, r1, r1
   3ff98:	tst	r1, #1048576	; 0x100000
   3ff9c:	sub	r4, r4, #1
   3ffa0:	bne	3ff74 <__adddf3+0x118>
   3ffa4:	teq	r1, #0
   3ffa8:	moveq	r1, r0
   3ffac:	moveq	r0, #0
   3ffb0:	clz	r3, r1
   3ffb4:	addeq	r3, r3, #32
   3ffb8:	sub	r3, r3, #11
   3ffbc:	subs	r2, r3, #32
   3ffc0:	bge	3ffe4 <__adddf3+0x188>
   3ffc4:	adds	r2, r2, #12
   3ffc8:	ble	3ffe0 <__adddf3+0x184>
   3ffcc:	add	ip, r2, #20
   3ffd0:	rsb	r2, r2, #12
   3ffd4:	lsl	r0, r1, ip
   3ffd8:	lsr	r1, r1, r2
   3ffdc:	b	3fff4 <__adddf3+0x198>
   3ffe0:	add	r2, r2, #20
   3ffe4:	rsble	ip, r2, #32
   3ffe8:	lsl	r1, r1, r2
   3ffec:	orrle	r1, r1, r0, lsr ip
   3fff0:	lslle	r0, r0, r2
   3fff4:	subs	r4, r4, r3
   3fff8:	addge	r1, r1, r4, lsl #20
   3fffc:	orrge	r1, r1, r5
   40000:	popge	{r4, r5, pc}
   40004:	mvn	r4, r4
   40008:	subs	r4, r4, #31
   4000c:	bge	40048 <__adddf3+0x1ec>
   40010:	adds	r4, r4, #12
   40014:	bgt	40030 <__adddf3+0x1d4>
   40018:	add	r4, r4, #20
   4001c:	rsb	r2, r4, #32
   40020:	lsr	r0, r0, r4
   40024:	orr	r0, r0, r1, lsl r2
   40028:	orr	r1, r5, r1, lsr r4
   4002c:	pop	{r4, r5, pc}
   40030:	rsb	r4, r4, #12
   40034:	rsb	r2, r4, #32
   40038:	lsr	r0, r0, r2
   4003c:	orr	r0, r0, r1, lsl r4
   40040:	mov	r1, r5
   40044:	pop	{r4, r5, pc}
   40048:	lsr	r0, r1, r4
   4004c:	mov	r1, r5
   40050:	pop	{r4, r5, pc}
   40054:	teq	r4, #0
   40058:	eor	r3, r3, #1048576	; 0x100000
   4005c:	eoreq	r1, r1, #1048576	; 0x100000
   40060:	addeq	r4, r4, #1
   40064:	subne	r5, r5, #1
   40068:	b	3fef4 <__adddf3+0x98>
   4006c:	mvns	ip, r4, asr #21
   40070:	mvnsne	ip, r5, asr #21
   40074:	beq	400dc <__adddf3+0x280>
   40078:	teq	r4, r5
   4007c:	teqeq	r0, r2
   40080:	beq	40094 <__adddf3+0x238>
   40084:	orrs	ip, r4, r0
   40088:	moveq	r1, r3
   4008c:	moveq	r0, r2
   40090:	pop	{r4, r5, pc}
   40094:	teq	r1, r3
   40098:	movne	r1, #0
   4009c:	movne	r0, #0
   400a0:	popne	{r4, r5, pc}
   400a4:	lsrs	ip, r4, #21
   400a8:	bne	400bc <__adddf3+0x260>
   400ac:	lsls	r0, r0, #1
   400b0:	adcs	r1, r1, r1
   400b4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   400b8:	pop	{r4, r5, pc}
   400bc:	adds	r4, r4, #4194304	; 0x400000
   400c0:	addcc	r1, r1, #1048576	; 0x100000
   400c4:	popcc	{r4, r5, pc}
   400c8:	and	r5, r1, #-2147483648	; 0x80000000
   400cc:	orr	r1, r5, #2130706432	; 0x7f000000
   400d0:	orr	r1, r1, #15728640	; 0xf00000
   400d4:	mov	r0, #0
   400d8:	pop	{r4, r5, pc}
   400dc:	mvns	ip, r4, asr #21
   400e0:	movne	r1, r3
   400e4:	movne	r0, r2
   400e8:	mvnseq	ip, r5, asr #21
   400ec:	movne	r3, r1
   400f0:	movne	r2, r0
   400f4:	orrs	r4, r0, r1, lsl #12
   400f8:	orrseq	r5, r2, r3, lsl #12
   400fc:	teqeq	r1, r3
   40100:	orrne	r1, r1, #524288	; 0x80000
   40104:	pop	{r4, r5, pc}

00040108 <__aeabi_ui2d>:
   40108:	teq	r0, #0
   4010c:	moveq	r1, #0
   40110:	bxeq	lr
   40114:	push	{r4, r5, lr}
   40118:	mov	r4, #1024	; 0x400
   4011c:	add	r4, r4, #50	; 0x32
   40120:	mov	r5, #0
   40124:	mov	r1, #0
   40128:	b	3ffa4 <__adddf3+0x148>

0004012c <__aeabi_i2d>:
   4012c:	teq	r0, #0
   40130:	moveq	r1, #0
   40134:	bxeq	lr
   40138:	push	{r4, r5, lr}
   4013c:	mov	r4, #1024	; 0x400
   40140:	add	r4, r4, #50	; 0x32
   40144:	ands	r5, r0, #-2147483648	; 0x80000000
   40148:	rsbmi	r0, r0, #0
   4014c:	mov	r1, #0
   40150:	b	3ffa4 <__adddf3+0x148>

00040154 <__aeabi_f2d>:
   40154:	lsls	r2, r0, #1
   40158:	asr	r1, r2, #3
   4015c:	rrx	r1, r1
   40160:	lsl	r0, r2, #28
   40164:	andsne	r3, r2, #-16777216	; 0xff000000
   40168:	teqne	r3, #-16777216	; 0xff000000
   4016c:	eorne	r1, r1, #939524096	; 0x38000000
   40170:	bxne	lr
   40174:	bics	r2, r2, #-16777216	; 0xff000000
   40178:	bxeq	lr
   4017c:	teq	r3, #-16777216	; 0xff000000
   40180:	orreq	r1, r1, #524288	; 0x80000
   40184:	bxeq	lr
   40188:	push	{r4, r5, lr}
   4018c:	mov	r4, #896	; 0x380
   40190:	and	r5, r1, #-2147483648	; 0x80000000
   40194:	bic	r1, r1, #-2147483648	; 0x80000000
   40198:	b	3ffa4 <__adddf3+0x148>

0004019c <__aeabi_ul2d>:
   4019c:	orrs	r2, r0, r1
   401a0:	bxeq	lr
   401a4:	push	{r4, r5, lr}
   401a8:	mov	r5, #0
   401ac:	b	401cc <__aeabi_l2d+0x1c>

000401b0 <__aeabi_l2d>:
   401b0:	orrs	r2, r0, r1
   401b4:	bxeq	lr
   401b8:	push	{r4, r5, lr}
   401bc:	ands	r5, r1, #-2147483648	; 0x80000000
   401c0:	bpl	401cc <__aeabi_l2d+0x1c>
   401c4:	rsbs	r0, r0, #0
   401c8:	rsc	r1, r1, #0
   401cc:	mov	r4, #1024	; 0x400
   401d0:	add	r4, r4, #50	; 0x32
   401d4:	lsrs	ip, r1, #22
   401d8:	beq	3ff48 <__adddf3+0xec>
   401dc:	mov	r2, #3
   401e0:	lsrs	ip, ip, #3
   401e4:	addne	r2, r2, #3
   401e8:	lsrs	ip, ip, #3
   401ec:	addne	r2, r2, #3
   401f0:	add	r2, r2, ip, lsr #3
   401f4:	rsb	r3, r2, #32
   401f8:	lsl	ip, r0, r3
   401fc:	lsr	r0, r0, r2
   40200:	orr	r0, r0, r1, lsl r3
   40204:	lsr	r1, r1, r2
   40208:	add	r4, r4, r2
   4020c:	b	3ff48 <__adddf3+0xec>

00040210 <__stat>:
   40210:	mov	r2, r1
   40214:	mov	r1, r0
   40218:	mov	r0, #3
   4021c:	b	d808 <__xstat@plt>

Disassembly of section .fini:

00040220 <_fini>:
   40220:	push	{r3, lr}
   40224:	pop	{r3, pc}
