
../repos/inetutils/tests/ls:     file format elf32-littlearm


Disassembly of section .init:

00010c64 <.init>:
   10c64:	push	{r3, lr}
   10c68:	bl	10f34 <__assert_fail@plt+0x4c>
   10c6c:	pop	{r3, pc}

Disassembly of section .plt:

00010c70 <fstatfs64@plt-0x14>:
   10c70:	push	{lr}		; (str lr, [sp, #-4]!)
   10c74:	ldr	lr, [pc, #4]	; 10c80 <fstatfs64@plt-0x4>
   10c78:	add	lr, pc, lr
   10c7c:	ldr	pc, [lr, #8]!
   10c80:	andeq	ip, r1, r0, lsl #7

00010c84 <fstatfs64@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #28, 20	; 0x1c000
   10c8c:	ldr	pc, [ip, #896]!	; 0x380

00010c90 <calloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #28, 20	; 0x1c000
   10c98:	ldr	pc, [ip, #888]!	; 0x378

00010c9c <raise@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #28, 20	; 0x1c000
   10ca4:	ldr	pc, [ip, #880]!	; 0x370

00010ca8 <strcmp@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #28, 20	; 0x1c000
   10cb0:	ldr	pc, [ip, #872]!	; 0x368

00010cb4 <getpwuid@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #28, 20	; 0x1c000
   10cbc:	ldr	pc, [ip, #864]!	; 0x360

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #28, 20	; 0x1c000
   10cc8:	ldr	pc, [ip, #856]!	; 0x358

00010ccc <getuid@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #28, 20	; 0x1c000
   10cd4:	ldr	pc, [ip, #848]!	; 0x350

00010cd8 <memmove@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #28, 20	; 0x1c000
   10ce0:	ldr	pc, [ip, #840]!	; 0x348

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #28, 20	; 0x1c000
   10cec:	ldr	pc, [ip, #832]!	; 0x340

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #28, 20	; 0x1c000
   10cf8:	ldr	pc, [ip, #824]!	; 0x338

00010cfc <time@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #28, 20	; 0x1c000
   10d04:	ldr	pc, [ip, #816]!	; 0x330

00010d08 <ctime@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #28, 20	; 0x1c000
   10d10:	ldr	pc, [ip, #808]!	; 0x328

00010d14 <realloc@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #28, 20	; 0x1c000
   10d1c:	ldr	pc, [ip, #800]!	; 0x320

00010d20 <funlockfile@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #28, 20	; 0x1c000
   10d28:	ldr	pc, [ip, #792]!	; 0x318

00010d2c <__fxstatat64@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #28, 20	; 0x1c000
   10d34:	ldr	pc, [ip, #784]!	; 0x310

00010d38 <__fxstat64@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #28, 20	; 0x1c000
   10d40:	ldr	pc, [ip, #776]!	; 0x308

00010d44 <readlink@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #28, 20	; 0x1c000
   10d4c:	ldr	pc, [ip, #768]!	; 0x300

00010d50 <ioctl@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #28, 20	; 0x1c000
   10d58:	ldr	pc, [ip, #760]!	; 0x2f8

00010d5c <strcpy@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #28, 20	; 0x1c000
   10d64:	ldr	pc, [ip, #752]!	; 0x2f0

00010d68 <open64@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #28, 20	; 0x1c000
   10d70:	ldr	pc, [ip, #744]!	; 0x2e8

00010d74 <getenv@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #28, 20	; 0x1c000
   10d7c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #28, 20	; 0x1c000
   10d88:	ldr	pc, [ip, #728]!	; 0x2d8

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #28, 20	; 0x1c000
   10d94:	ldr	pc, [ip, #720]!	; 0x2d0

00010d98 <strerror@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #28, 20	; 0x1c000
   10da0:	ldr	pc, [ip, #712]!	; 0x2c8

00010da4 <__gmon_start__@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #28, 20	; 0x1c000
   10dac:	ldr	pc, [ip, #704]!	; 0x2c0

00010db0 <__ctype_b_loc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #28, 20	; 0x1c000
   10db8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dbc <strlen@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #28, 20	; 0x1c000
   10dc4:	ldr	pc, [ip, #688]!	; 0x2b0

00010dc8 <strchr@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #28, 20	; 0x1c000
   10dd0:	ldr	pc, [ip, #680]!	; 0x2a8

00010dd4 <openat64@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #28, 20	; 0x1c000
   10ddc:	ldr	pc, [ip, #672]!	; 0x2a0

00010de0 <fprintf@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #28, 20	; 0x1c000
   10de8:	ldr	pc, [ip, #664]!	; 0x298

00010dec <__errno_location@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #28, 20	; 0x1c000
   10df4:	ldr	pc, [ip, #656]!	; 0x290

00010df8 <snprintf@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #28, 20	; 0x1c000
   10e00:	ldr	pc, [ip, #648]!	; 0x288

00010e04 <memset@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #28, 20	; 0x1c000
   10e0c:	ldr	pc, [ip, #640]!	; 0x280

00010e10 <putchar@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #28, 20	; 0x1c000
   10e18:	ldr	pc, [ip, #632]!	; 0x278

00010e1c <fcntl64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #28, 20	; 0x1c000
   10e24:	ldr	pc, [ip, #624]!	; 0x270

00010e28 <strrchr@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #28, 20	; 0x1c000
   10e30:	ldr	pc, [ip, #616]!	; 0x268

00010e34 <readdir64@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #28, 20	; 0x1c000
   10e3c:	ldr	pc, [ip, #608]!	; 0x260

00010e40 <fdopendir@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #28, 20	; 0x1c000
   10e48:	ldr	pc, [ip, #600]!	; 0x258

00010e4c <dirfd@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #28, 20	; 0x1c000
   10e54:	ldr	pc, [ip, #592]!	; 0x250

00010e58 <flockfile@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #28, 20	; 0x1c000
   10e60:	ldr	pc, [ip, #584]!	; 0x248

00010e64 <atoi@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #28, 20	; 0x1c000
   10e6c:	ldr	pc, [ip, #576]!	; 0x240

00010e70 <fchdir@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #28, 20	; 0x1c000
   10e78:	ldr	pc, [ip, #568]!	; 0x238

00010e7c <qsort@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #28, 20	; 0x1c000
   10e84:	ldr	pc, [ip, #560]!	; 0x230

00010e88 <__xstat64@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #28, 20	; 0x1c000
   10e90:	ldr	pc, [ip, #552]!	; 0x228

00010e94 <isatty@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #28, 20	; 0x1c000
   10e9c:	ldr	pc, [ip, #544]!	; 0x220

00010ea0 <strncmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #28, 20	; 0x1c000
   10ea8:	ldr	pc, [ip, #536]!	; 0x218

00010eac <abort@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #28, 20	; 0x1c000
   10eb4:	ldr	pc, [ip, #528]!	; 0x210

00010eb8 <close@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #28, 20	; 0x1c000
   10ec0:	ldr	pc, [ip, #520]!	; 0x208

00010ec4 <__lxstat64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #28, 20	; 0x1c000
   10ecc:	ldr	pc, [ip, #512]!	; 0x200

00010ed0 <closedir@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #28, 20	; 0x1c000
   10ed8:	ldr	pc, [ip, #504]!	; 0x1f8

00010edc <getgrgid@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #28, 20	; 0x1c000
   10ee4:	ldr	pc, [ip, #496]!	; 0x1f0

00010ee8 <__assert_fail@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #28, 20	; 0x1c000
   10ef0:	ldr	pc, [ip, #488]!	; 0x1e8

Disassembly of section .text:

00010ef8 <.text>:
   10ef8:	mov	fp, #0
   10efc:	mov	lr, #0
   10f00:	pop	{r1}		; (ldr r1, [sp], #4)
   10f04:	mov	r2, sp
   10f08:	push	{r2}		; (str r2, [sp, #-4]!)
   10f0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f10:	ldr	ip, [pc, #16]	; 10f28 <__assert_fail@plt+0x40>
   10f14:	push	{ip}		; (str ip, [sp, #-4]!)
   10f18:	ldr	r0, [pc, #12]	; 10f2c <__assert_fail@plt+0x44>
   10f1c:	ldr	r3, [pc, #12]	; 10f30 <__assert_fail@plt+0x48>
   10f20:	bl	10d8c <__libc_start_main@plt>
   10f24:	bl	10eac <abort@plt>
   10f28:	andeq	ip, r1, r4, ror r0
   10f2c:	andeq	r0, r1, r8, ror #31
   10f30:	andeq	ip, r1, r4, lsl r0
   10f34:	ldr	r3, [pc, #20]	; 10f50 <__assert_fail@plt+0x68>
   10f38:	ldr	r2, [pc, #20]	; 10f54 <__assert_fail@plt+0x6c>
   10f3c:	add	r3, pc, r3
   10f40:	ldr	r2, [r3, r2]
   10f44:	cmp	r2, #0
   10f48:	bxeq	lr
   10f4c:	b	10da4 <__gmon_start__@plt>
   10f50:	strheq	ip, [r1], -ip	; <UNPREDICTABLE>
   10f54:	ldrdeq	r0, [r0], -ip
   10f58:	ldr	r0, [pc, #24]	; 10f78 <__assert_fail@plt+0x90>
   10f5c:	ldr	r3, [pc, #24]	; 10f7c <__assert_fail@plt+0x94>
   10f60:	cmp	r3, r0
   10f64:	bxeq	lr
   10f68:	ldr	r3, [pc, #16]	; 10f80 <__assert_fail@plt+0x98>
   10f6c:	cmp	r3, #0
   10f70:	bxeq	lr
   10f74:	bx	r3
   10f78:	andeq	sp, r2, r8, lsl #2
   10f7c:	andeq	sp, r2, r8, lsl #2
   10f80:	andeq	r0, r0, r0
   10f84:	ldr	r0, [pc, #36]	; 10fb0 <__assert_fail@plt+0xc8>
   10f88:	ldr	r1, [pc, #36]	; 10fb4 <__assert_fail@plt+0xcc>
   10f8c:	sub	r1, r1, r0
   10f90:	asr	r1, r1, #2
   10f94:	add	r1, r1, r1, lsr #31
   10f98:	asrs	r1, r1, #1
   10f9c:	bxeq	lr
   10fa0:	ldr	r3, [pc, #16]	; 10fb8 <__assert_fail@plt+0xd0>
   10fa4:	cmp	r3, #0
   10fa8:	bxeq	lr
   10fac:	bx	r3
   10fb0:	andeq	sp, r2, r8, lsl #2
   10fb4:	andeq	sp, r2, r8, lsl #2
   10fb8:	andeq	r0, r0, r0
   10fbc:	push	{r4, lr}
   10fc0:	ldr	r4, [pc, #24]	; 10fe0 <__assert_fail@plt+0xf8>
   10fc4:	ldrb	r3, [r4]
   10fc8:	cmp	r3, #0
   10fcc:	popne	{r4, pc}
   10fd0:	bl	10f58 <__assert_fail@plt+0x70>
   10fd4:	mov	r3, #1
   10fd8:	strb	r3, [r4]
   10fdc:	pop	{r4, pc}
   10fe0:	andeq	sp, r2, ip, lsl #2
   10fe4:	b	10f84 <__assert_fail@plt+0x9c>
   10fe8:	push	{fp, lr}
   10fec:	mov	fp, sp
   10ff0:	sub	sp, sp, #16
   10ff4:	movw	r2, #0
   10ff8:	str	r2, [fp, #-4]
   10ffc:	str	r0, [sp, #8]
   11000:	str	r1, [sp, #4]
   11004:	ldr	r0, [sp, #8]
   11008:	ldr	r1, [sp, #4]
   1100c:	bl	11018 <__assert_fail@plt+0x130>
   11010:	mov	sp, fp
   11014:	pop	{fp, pc}
   11018:	push	{fp, lr}
   1101c:	mov	fp, sp
   11020:	sub	sp, sp, #48	; 0x30
   11024:	str	r0, [fp, #-8]
   11028:	str	r1, [fp, #-12]
   1102c:	movw	r0, #53524	; 0xd114
   11030:	movt	r0, #2
   11034:	movw	r1, #0
   11038:	str	r1, [r0]
   1103c:	movw	r0, #53604	; 0xd164
   11040:	movt	r0, #2
   11044:	str	r1, [r0]
   11048:	movw	r0, #53596	; 0xd15c
   1104c:	movt	r0, #2
   11050:	str	r1, [r0]
   11054:	movw	r0, #53648	; 0xd190
   11058:	movt	r0, #2
   1105c:	str	r1, [r0]
   11060:	movw	r0, #53592	; 0xd158
   11064:	movt	r0, #2
   11068:	str	r1, [r0]
   1106c:	movw	r0, #53612	; 0xd16c
   11070:	movt	r0, #2
   11074:	str	r1, [r0]
   11078:	movw	r0, #53664	; 0xd1a0
   1107c:	movt	r0, #2
   11080:	str	r1, [r0]
   11084:	movw	r0, #53632	; 0xd180
   11088:	movt	r0, #2
   1108c:	str	r1, [r0]
   11090:	movw	r0, #53668	; 0xd1a4
   11094:	movt	r0, #2
   11098:	str	r1, [r0]
   1109c:	movw	r0, #53652	; 0xd194
   110a0:	movt	r0, #2
   110a4:	str	r1, [r0]
   110a8:	movw	r0, #53644	; 0xd18c
   110ac:	movt	r0, #2
   110b0:	str	r1, [r0]
   110b4:	movw	r0, #53616	; 0xd170
   110b8:	movt	r0, #2
   110bc:	str	r1, [r0]
   110c0:	movw	r0, #53672	; 0xd1a8
   110c4:	movt	r0, #2
   110c8:	str	r1, [r0]
   110cc:	movw	r0, #53588	; 0xd154
   110d0:	movt	r0, #2
   110d4:	str	r1, [r0]
   110d8:	movw	r0, #53640	; 0xd188
   110dc:	movt	r0, #2
   110e0:	str	r1, [r0]
   110e4:	movw	r0, #53608	; 0xd168
   110e8:	movt	r0, #2
   110ec:	str	r1, [r0]
   110f0:	movw	r0, #53600	; 0xd160
   110f4:	movt	r0, #2
   110f8:	str	r1, [r0]
   110fc:	movw	r0, #53584	; 0xd150
   11100:	movt	r0, #2
   11104:	str	r1, [r0]
   11108:	movw	r0, #53676	; 0xd1ac
   1110c:	movt	r0, #2
   11110:	str	r1, [r0]
   11114:	movw	r0, #53656	; 0xd198
   11118:	movt	r0, #2
   1111c:	str	r1, [r0]
   11120:	movw	r0, #53580	; 0xd14c
   11124:	movt	r0, #2
   11128:	str	r1, [r0]
   1112c:	movw	r0, #53624	; 0xd178
   11130:	movt	r0, #2
   11134:	str	r1, [r0]
   11138:	movw	r0, #53636	; 0xd184
   1113c:	movt	r0, #2
   11140:	str	r1, [r0]
   11144:	movw	r0, #53620	; 0xd174
   11148:	movt	r0, #2
   1114c:	str	r1, [r0]
   11150:	movw	r0, #1
   11154:	bl	10e94 <isatty@plt>
   11158:	cmp	r0, #0
   1115c:	beq	111f0 <__assert_fail@plt+0x308>
   11160:	movw	r0, #49372	; 0xc0dc
   11164:	movt	r0, #1
   11168:	bl	10d74 <getenv@plt>
   1116c:	str	r0, [sp, #16]
   11170:	ldr	r0, [sp, #16]
   11174:	movw	r1, #0
   11178:	cmp	r0, r1
   1117c:	beq	11198 <__assert_fail@plt+0x2b0>
   11180:	ldr	r0, [sp, #16]
   11184:	bl	10e64 <atoi@plt>
   11188:	movw	r1, #53480	; 0xd0e8
   1118c:	movt	r1, #2
   11190:	str	r0, [r1]
   11194:	b	111d0 <__assert_fail@plt+0x2e8>
   11198:	movw	r0, #1
   1119c:	movw	r1, #21523	; 0x5413
   111a0:	sub	r2, fp, #20
   111a4:	bl	1b08c <__assert_fail@plt+0xa1a4>
   111a8:	cmp	r0, #0
   111ac:	bne	111cc <__assert_fail@plt+0x2e4>
   111b0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   111b4:	cmp	r0, #0
   111b8:	ble	111cc <__assert_fail@plt+0x2e4>
   111bc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   111c0:	movw	r1, #53480	; 0xd0e8
   111c4:	movt	r1, #2
   111c8:	str	r0, [r1]
   111cc:	b	111d0 <__assert_fail@plt+0x2e8>
   111d0:	movw	r0, #53672	; 0xd1a8
   111d4:	movt	r0, #2
   111d8:	movw	r1, #1
   111dc:	str	r1, [r0]
   111e0:	movw	r0, #53592	; 0xd158
   111e4:	movt	r0, #2
   111e8:	str	r1, [r0]
   111ec:	b	11200 <__assert_fail@plt+0x318>
   111f0:	movw	r0, #53588	; 0xd154
   111f4:	movt	r0, #2
   111f8:	movw	r1, #1
   111fc:	str	r1, [r0]
   11200:	bl	10ccc <getuid@plt>
   11204:	cmp	r0, #0
   11208:	bne	1121c <__assert_fail@plt+0x334>
   1120c:	movw	r0, #53668	; 0xd1a4
   11210:	movt	r0, #2
   11214:	movw	r1, #1
   11218:	str	r1, [r0]
   1121c:	movw	r0, #53500	; 0xd0fc
   11220:	movt	r0, #2
   11224:	movw	r1, #1
   11228:	str	r1, [r0]
   1122c:	movw	r0, #20
   11230:	str	r0, [sp, #20]
   11234:	ldr	r0, [fp, #-8]
   11238:	ldr	r1, [fp, #-12]
   1123c:	movw	r2, #49380	; 0xc0e4
   11240:	movt	r2, #1
   11244:	bl	190d0 <__assert_fail@plt+0x81e8>
   11248:	str	r0, [sp, #24]
   1124c:	cmn	r0, #1
   11250:	beq	11738 <__assert_fail@plt+0x850>
   11254:	ldr	r0, [sp, #24]
   11258:	sub	r0, r0, #49	; 0x31
   1125c:	cmp	r0, #71	; 0x47
   11260:	str	r0, [sp, #12]
   11264:	bhi	11728 <__assert_fail@plt+0x840>
   11268:	add	r0, pc, #8
   1126c:	ldr	r1, [sp, #12]
   11270:	ldr	r0, [r0, r1, lsl #2]
   11274:	mov	pc, r0
   11278:	muleq	r1, r8, r3
   1127c:	andeq	r1, r1, r8, lsr #14
   11280:	andeq	r1, r1, r8, lsr #14
   11284:	andeq	r1, r1, r8, lsr #14
   11288:	andeq	r1, r1, r8, lsr #14
   1128c:	andeq	r1, r1, r8, lsr #14
   11290:	andeq	r1, r1, r8, lsr #14
   11294:	andeq	r1, r1, r8, lsr #14
   11298:	andeq	r1, r1, r8, lsr #14
   1129c:	andeq	r1, r1, r8, lsr #14
   112a0:	andeq	r1, r1, r8, lsr #14
   112a4:	andeq	r1, r1, r8, lsr #14
   112a8:	andeq	r1, r1, r8, lsr #14
   112ac:	andeq	r1, r1, r8, lsr #14
   112b0:	andeq	r1, r1, r8, lsr #14
   112b4:	andeq	r1, r1, r8, lsr #14
   112b8:	strdeq	r1, [r1], -ip
   112bc:	andeq	r1, r1, r8, lsr #14
   112c0:	andeq	r1, r1, r0, ror #7
   112c4:	andeq	r1, r1, r8, lsr #14
   112c8:	andeq	r1, r1, r8, lsr #14
   112cc:	andeq	r1, r1, r8, lsr #11
   112d0:	andeq	r1, r1, r8, lsr #14
   112d4:	andeq	r1, r1, r8, lsr #14
   112d8:	andeq	r1, r1, r8, lsr #14
   112dc:	andeq	r1, r1, r8, lsr #14
   112e0:	andeq	r1, r1, r8, lsr #14
   112e4:			; <UNDEFINED> instruction: 0x000115bc
   112e8:	andeq	r1, r1, r8, lsr #14
   112ec:	andeq	r1, r1, r8, lsr #14
   112f0:	andeq	r1, r1, r8, lsr #14
   112f4:	andeq	r1, r1, r8, lsr #14
   112f8:	andeq	r1, r1, r8, lsr #14
   112fc:	ldrdeq	r1, [r1], -ip
   11300:	andeq	r1, r1, r4, asr #13
   11304:	andeq	r1, r1, ip, ror #13
   11308:	andeq	r1, r1, r8, lsr #14
   1130c:	andeq	r1, r1, r8, lsr #14
   11310:	andeq	r1, r1, r4, lsl r7
   11314:	andeq	r1, r1, r8, lsr #14
   11318:	andeq	r1, r1, r8, lsr #14
   1131c:	andeq	r1, r1, r8, lsr #14
   11320:	andeq	r1, r1, r8, lsr #14
   11324:	andeq	r1, r1, r8, lsr #14
   11328:	andeq	r1, r1, r8, lsr #14
   1132c:	andeq	r1, r1, r8, lsr #14
   11330:	andeq	r1, r1, r8, lsr #14
   11334:	andeq	r1, r1, r8, lsr #14
   11338:	strdeq	r1, [r1], -r0
   1133c:	andeq	r1, r1, r8, lsr #14
   11340:	andeq	r1, r1, r0, ror #10
   11344:	andeq	r1, r1, r0, lsl r6
   11348:	andeq	r1, r1, r8, lsr #14
   1134c:	andeq	r1, r1, r4, lsr r6
   11350:	andeq	r1, r1, r8, asr #12
   11354:	andeq	r1, r1, r8, lsr #14
   11358:	andeq	r1, r1, ip, asr #12
   1135c:	andeq	r1, r1, r8, lsr #14
   11360:	andeq	r1, r1, r0, ror #12
   11364:	andeq	r1, r1, r8, lsr #8
   11368:	andeq	r1, r1, ip, ror r4
   1136c:	andeq	r1, r1, ip, lsl #10
   11370:	andeq	r1, r1, r4, ror r6
   11374:	andeq	r1, r1, r8, lsl #13
   11378:	muleq	r1, ip, r6
   1137c:			; <UNDEFINED> instruction: 0x000116b0
   11380:	ldrdeq	r1, [r1], -r8
   11384:	andeq	r1, r1, r0, lsl #14
   11388:	andeq	r1, r1, r4, lsl #11
   1138c:	andeq	r1, r1, r8, lsr #14
   11390:	andeq	r1, r1, r8, lsr #14
   11394:	andeq	r1, r1, r4, asr #9
   11398:	movw	r0, #53588	; 0xd154
   1139c:	movt	r0, #2
   113a0:	movw	r1, #1
   113a4:	str	r1, [r0]
   113a8:	movw	r0, #53676	; 0xd1ac
   113ac:	movt	r0, #2
   113b0:	movw	r1, #0
   113b4:	str	r1, [r0]
   113b8:	movw	r0, #53632	; 0xd180
   113bc:	movt	r0, #2
   113c0:	str	r1, [r0]
   113c4:	movw	r0, #53648	; 0xd190
   113c8:	movt	r0, #2
   113cc:	str	r1, [r0]
   113d0:	movw	r0, #53592	; 0xd158
   113d4:	movt	r0, #2
   113d8:	str	r1, [r0]
   113dc:	b	11734 <__assert_fail@plt+0x84c>
   113e0:	movw	r0, #53592	; 0xd158
   113e4:	movt	r0, #2
   113e8:	movw	r1, #1
   113ec:	str	r1, [r0]
   113f0:	movw	r0, #53676	; 0xd1ac
   113f4:	movt	r0, #2
   113f8:	movw	r1, #0
   113fc:	str	r1, [r0]
   11400:	movw	r0, #53588	; 0xd154
   11404:	movt	r0, #2
   11408:	str	r1, [r0]
   1140c:	movw	r0, #53648	; 0xd190
   11410:	movt	r0, #2
   11414:	str	r1, [r0]
   11418:	movw	r0, #53632	; 0xd180
   1141c:	movt	r0, #2
   11420:	str	r1, [r0]
   11424:	b	11734 <__assert_fail@plt+0x84c>
   11428:	movw	r0, #53632	; 0xd180
   1142c:	movt	r0, #2
   11430:	movw	r1, #1
   11434:	str	r1, [r0]
   11438:	movw	r0, #53644	; 0xd18c
   1143c:	movt	r0, #2
   11440:	movw	r1, #0
   11444:	str	r1, [r0]
   11448:	movw	r0, #53676	; 0xd1ac
   1144c:	movt	r0, #2
   11450:	str	r1, [r0]
   11454:	movw	r0, #53588	; 0xd154
   11458:	movt	r0, #2
   1145c:	str	r1, [r0]
   11460:	movw	r0, #53648	; 0xd190
   11464:	movt	r0, #2
   11468:	str	r1, [r0]
   1146c:	movw	r0, #53592	; 0xd158
   11470:	movt	r0, #2
   11474:	str	r1, [r0]
   11478:	b	11734 <__assert_fail@plt+0x84c>
   1147c:	movw	r0, #53676	; 0xd1ac
   11480:	movt	r0, #2
   11484:	movw	r1, #1
   11488:	str	r1, [r0]
   1148c:	movw	r0, #53588	; 0xd154
   11490:	movt	r0, #2
   11494:	movw	r1, #0
   11498:	str	r1, [r0]
   1149c:	movw	r0, #53632	; 0xd180
   114a0:	movt	r0, #2
   114a4:	str	r1, [r0]
   114a8:	movw	r0, #53648	; 0xd190
   114ac:	movt	r0, #2
   114b0:	str	r1, [r0]
   114b4:	movw	r0, #53592	; 0xd158
   114b8:	movt	r0, #2
   114bc:	str	r1, [r0]
   114c0:	b	11734 <__assert_fail@plt+0x84c>
   114c4:	movw	r0, #53648	; 0xd190
   114c8:	movt	r0, #2
   114cc:	movw	r1, #1
   114d0:	str	r1, [r0]
   114d4:	movw	r0, #53676	; 0xd1ac
   114d8:	movt	r0, #2
   114dc:	movw	r1, #0
   114e0:	str	r1, [r0]
   114e4:	movw	r0, #53588	; 0xd154
   114e8:	movt	r0, #2
   114ec:	str	r1, [r0]
   114f0:	movw	r0, #53632	; 0xd180
   114f4:	movt	r0, #2
   114f8:	str	r1, [r0]
   114fc:	movw	r0, #53592	; 0xd158
   11500:	movt	r0, #2
   11504:	str	r1, [r0]
   11508:	b	11734 <__assert_fail@plt+0x84c>
   1150c:	movw	r0, #53632	; 0xd180
   11510:	movt	r0, #2
   11514:	movw	r1, #1
   11518:	str	r1, [r0]
   1151c:	movw	r0, #53644	; 0xd18c
   11520:	movt	r0, #2
   11524:	str	r1, [r0]
   11528:	movw	r0, #53676	; 0xd1ac
   1152c:	movt	r0, #2
   11530:	movw	r1, #0
   11534:	str	r1, [r0]
   11538:	movw	r0, #53588	; 0xd154
   1153c:	movt	r0, #2
   11540:	str	r1, [r0]
   11544:	movw	r0, #53648	; 0xd190
   11548:	movt	r0, #2
   1154c:	str	r1, [r0]
   11550:	movw	r0, #53592	; 0xd158
   11554:	movt	r0, #2
   11558:	str	r1, [r0]
   1155c:	b	11734 <__assert_fail@plt+0x84c>
   11560:	movw	r0, #53656	; 0xd198
   11564:	movt	r0, #2
   11568:	movw	r1, #1
   1156c:	str	r1, [r0]
   11570:	movw	r0, #53612	; 0xd16c
   11574:	movt	r0, #2
   11578:	movw	r1, #0
   1157c:	str	r1, [r0]
   11580:	b	11734 <__assert_fail@plt+0x84c>
   11584:	movw	r0, #53612	; 0xd16c
   11588:	movt	r0, #2
   1158c:	movw	r1, #1
   11590:	str	r1, [r0]
   11594:	movw	r0, #53656	; 0xd198
   11598:	movt	r0, #2
   1159c:	movw	r1, #0
   115a0:	str	r1, [r0]
   115a4:	b	11734 <__assert_fail@plt+0x84c>
   115a8:	movw	r0, #53620	; 0xd174
   115ac:	movt	r0, #2
   115b0:	movw	r1, #1
   115b4:	str	r1, [r0]
   115b8:	b	11734 <__assert_fail@plt+0x84c>
   115bc:	ldr	r0, [sp, #20]
   115c0:	mvn	r1, #16
   115c4:	and	r0, r0, r1
   115c8:	str	r0, [sp, #20]
   115cc:	ldr	r0, [sp, #20]
   115d0:	orr	r0, r0, #2
   115d4:	str	r0, [sp, #20]
   115d8:	b	11734 <__assert_fail@plt+0x84c>
   115dc:	movw	r0, #53600	; 0xd160
   115e0:	movt	r0, #2
   115e4:	movw	r1, #1
   115e8:	str	r1, [r0]
   115ec:	b	11734 <__assert_fail@plt+0x84c>
   115f0:	ldr	r0, [sp, #20]
   115f4:	orr	r0, r0, #32
   115f8:	str	r0, [sp, #20]
   115fc:	movw	r0, #53668	; 0xd1a4
   11600:	movt	r0, #2
   11604:	movw	r1, #1
   11608:	str	r1, [r0]
   1160c:	b	11734 <__assert_fail@plt+0x84c>
   11610:	movw	r0, #53652	; 0xd194
   11614:	movt	r0, #2
   11618:	movw	r1, #1
   1161c:	str	r1, [r0]
   11620:	movw	r0, #53600	; 0xd160
   11624:	movt	r0, #2
   11628:	movw	r1, #0
   1162c:	str	r1, [r0]
   11630:	b	11734 <__assert_fail@plt+0x84c>
   11634:	movw	r0, #53616	; 0xd170
   11638:	movt	r0, #2
   1163c:	movw	r1, #1
   11640:	str	r1, [r0]
   11644:	b	11734 <__assert_fail@plt+0x84c>
   11648:	b	11734 <__assert_fail@plt+0x84c>
   1164c:	movw	r0, #53604	; 0xd164
   11650:	movt	r0, #2
   11654:	movw	r1, #1
   11658:	str	r1, [r0]
   1165c:	b	11734 <__assert_fail@plt+0x84c>
   11660:	movw	r0, #53660	; 0xd19c
   11664:	movt	r0, #2
   11668:	movw	r1, #1024	; 0x400
   1166c:	str	r1, [r0]
   11670:	b	11734 <__assert_fail@plt+0x84c>
   11674:	movw	r0, #53596	; 0xd15c
   11678:	movt	r0, #2
   1167c:	movw	r1, #1
   11680:	str	r1, [r0]
   11684:	b	11734 <__assert_fail@plt+0x84c>
   11688:	movw	r0, #53636	; 0xd184
   1168c:	movt	r0, #2
   11690:	movw	r1, #1
   11694:	str	r1, [r0]
   11698:	b	11734 <__assert_fail@plt+0x84c>
   1169c:	movw	r0, #53672	; 0xd1a8
   116a0:	movt	r0, #2
   116a4:	movw	r1, #1
   116a8:	str	r1, [r0]
   116ac:	b	11734 <__assert_fail@plt+0x84c>
   116b0:	movw	r0, #53608	; 0xd168
   116b4:	movt	r0, #2
   116b8:	movw	r1, #1
   116bc:	str	r1, [r0]
   116c0:	b	11734 <__assert_fail@plt+0x84c>
   116c4:	movw	r0, #53520	; 0xd110
   116c8:	movt	r0, #2
   116cc:	movw	r1, #1
   116d0:	str	r1, [r0]
   116d4:	b	11734 <__assert_fail@plt+0x84c>
   116d8:	movw	r0, #53580	; 0xd14c
   116dc:	movt	r0, #2
   116e0:	movw	r1, #1
   116e4:	str	r1, [r0]
   116e8:	b	11734 <__assert_fail@plt+0x84c>
   116ec:	movw	r0, #53640	; 0xd188
   116f0:	movt	r0, #2
   116f4:	movw	r1, #1
   116f8:	str	r1, [r0]
   116fc:	b	11734 <__assert_fail@plt+0x84c>
   11700:	movw	r0, #53520	; 0xd110
   11704:	movt	r0, #2
   11708:	movw	r1, #2
   1170c:	str	r1, [r0]
   11710:	b	11734 <__assert_fail@plt+0x84c>
   11714:	movw	r0, #53624	; 0xd178
   11718:	movt	r0, #2
   1171c:	movw	r1, #1
   11720:	str	r1, [r0]
   11724:	b	11734 <__assert_fail@plt+0x84c>
   11728:	bl	13890 <__assert_fail@plt+0x29a8>
   1172c:	str	r0, [fp, #-4]
   11730:	b	11b84 <__assert_fail@plt+0xc9c>
   11734:	b	11234 <__assert_fail@plt+0x34c>
   11738:	movw	r0, #53500	; 0xd0fc
   1173c:	movt	r0, #2
   11740:	ldr	r1, [r0]
   11744:	ldr	r2, [fp, #-8]
   11748:	sub	r1, r2, r1
   1174c:	str	r1, [fp, #-8]
   11750:	ldr	r0, [r0]
   11754:	ldr	r1, [fp, #-12]
   11758:	add	r0, r1, r0, lsl #2
   1175c:	str	r0, [fp, #-12]
   11760:	movw	r0, #53632	; 0xd180
   11764:	movt	r0, #2
   11768:	ldr	r0, [r0]
   1176c:	cmp	r0, #0
   11770:	bne	117e4 <__assert_fail@plt+0x8fc>
   11774:	movw	r0, #53604	; 0xd164
   11778:	movt	r0, #2
   1177c:	ldr	r0, [r0]
   11780:	cmp	r0, #0
   11784:	bne	117e4 <__assert_fail@plt+0x8fc>
   11788:	movw	r0, #53580	; 0xd14c
   1178c:	movt	r0, #2
   11790:	ldr	r0, [r0]
   11794:	cmp	r0, #0
   11798:	bne	117e4 <__assert_fail@plt+0x8fc>
   1179c:	movw	r0, #53620	; 0xd174
   117a0:	movt	r0, #2
   117a4:	ldr	r0, [r0]
   117a8:	cmp	r0, #0
   117ac:	bne	117e4 <__assert_fail@plt+0x8fc>
   117b0:	movw	r0, #53636	; 0xd184
   117b4:	movt	r0, #2
   117b8:	ldr	r0, [r0]
   117bc:	cmp	r0, #0
   117c0:	bne	117e4 <__assert_fail@plt+0x8fc>
   117c4:	movw	r0, #53520	; 0xd110
   117c8:	movt	r0, #2
   117cc:	ldr	r0, [r0]
   117d0:	cmp	r0, #0
   117d4:	bne	117e4 <__assert_fail@plt+0x8fc>
   117d8:	ldr	r0, [sp, #20]
   117dc:	orr	r0, r0, #8
   117e0:	str	r0, [sp, #20]
   117e4:	movw	r0, #53632	; 0xd180
   117e8:	movt	r0, #2
   117ec:	ldr	r0, [r0]
   117f0:	cmp	r0, #0
   117f4:	bne	1182c <__assert_fail@plt+0x944>
   117f8:	movw	r0, #53652	; 0xd194
   117fc:	movt	r0, #2
   11800:	ldr	r0, [r0]
   11804:	cmp	r0, #0
   11808:	bne	1182c <__assert_fail@plt+0x944>
   1180c:	movw	r0, #53620	; 0xd174
   11810:	movt	r0, #2
   11814:	ldr	r0, [r0]
   11818:	cmp	r0, #0
   1181c:	bne	1182c <__assert_fail@plt+0x944>
   11820:	ldr	r0, [sp, #20]
   11824:	orr	r0, r0, #1
   11828:	str	r0, [sp, #20]
   1182c:	movw	r0, #53624	; 0xd178
   11830:	movt	r0, #2
   11834:	ldr	r0, [r0]
   11838:	cmp	r0, #0
   1183c:	beq	1184c <__assert_fail@plt+0x964>
   11840:	ldr	r0, [sp, #20]
   11844:	orr	r0, r0, #128	; 0x80
   11848:	str	r0, [sp, #20]
   1184c:	movw	r0, #53632	; 0xd180
   11850:	movt	r0, #2
   11854:	ldr	r0, [r0]
   11858:	cmp	r0, #0
   1185c:	bne	11874 <__assert_fail@plt+0x98c>
   11860:	movw	r0, #53580	; 0xd14c
   11864:	movt	r0, #2
   11868:	ldr	r0, [r0]
   1186c:	cmp	r0, #0
   11870:	beq	11894 <__assert_fail@plt+0x9ac>
   11874:	movw	r0, #1024	; 0x400
   11878:	movw	r1, #53660	; 0xd19c
   1187c:	movt	r1, #2
   11880:	str	r0, [r1]
   11884:	ldr	r0, [r1]
   11888:	movw	r2, #512	; 0x200
   1188c:	sdiv	r0, r0, r2
   11890:	str	r0, [r1]
   11894:	movw	r0, #53608	; 0xd168
   11898:	movt	r0, #2
   1189c:	ldr	r0, [r0]
   118a0:	cmp	r0, #0
   118a4:	beq	1198c <__assert_fail@plt+0xaa4>
   118a8:	movw	r0, #53520	; 0xd110
   118ac:	movt	r0, #2
   118b0:	ldr	r0, [r0]
   118b4:	cmp	r0, #0
   118b8:	str	r0, [sp, #8]
   118bc:	beq	118e4 <__assert_fail@plt+0x9fc>
   118c0:	b	118c4 <__assert_fail@plt+0x9dc>
   118c4:	ldr	r0, [sp, #8]
   118c8:	cmp	r0, #1
   118cc:	beq	118fc <__assert_fail@plt+0xa14>
   118d0:	b	118d4 <__assert_fail@plt+0x9ec>
   118d4:	ldr	r0, [sp, #8]
   118d8:	cmp	r0, #2
   118dc:	beq	11914 <__assert_fail@plt+0xa2c>
   118e0:	b	11988 <__assert_fail@plt+0xaa0>
   118e4:	movw	r0, #53528	; 0xd118
   118e8:	movt	r0, #2
   118ec:	movw	r1, #14584	; 0x38f8
   118f0:	movt	r1, #1
   118f4:	str	r1, [r0]
   118f8:	b	11988 <__assert_fail@plt+0xaa0>
   118fc:	movw	r0, #53528	; 0xd118
   11900:	movt	r0, #2
   11904:	movw	r1, #15576	; 0x3cd8
   11908:	movt	r1, #1
   1190c:	str	r1, [r0]
   11910:	b	11988 <__assert_fail@plt+0xaa0>
   11914:	movw	r0, #53612	; 0xd16c
   11918:	movt	r0, #2
   1191c:	ldr	r0, [r0]
   11920:	cmp	r0, #0
   11924:	beq	11940 <__assert_fail@plt+0xa58>
   11928:	movw	r0, #53528	; 0xd118
   1192c:	movt	r0, #2
   11930:	movw	r1, #15112	; 0x3b08
   11934:	movt	r1, #1
   11938:	str	r1, [r0]
   1193c:	b	11984 <__assert_fail@plt+0xa9c>
   11940:	movw	r0, #53656	; 0xd198
   11944:	movt	r0, #2
   11948:	ldr	r0, [r0]
   1194c:	cmp	r0, #0
   11950:	beq	1196c <__assert_fail@plt+0xa84>
   11954:	movw	r0, #53528	; 0xd118
   11958:	movt	r0, #2
   1195c:	movw	r1, #15376	; 0x3c10
   11960:	movt	r1, #1
   11964:	str	r1, [r0]
   11968:	b	11980 <__assert_fail@plt+0xa98>
   1196c:	movw	r0, #53528	; 0xd118
   11970:	movt	r0, #2
   11974:	movw	r1, #14848	; 0x3a00
   11978:	movt	r1, #1
   1197c:	str	r1, [r0]
   11980:	b	11984 <__assert_fail@plt+0xa9c>
   11984:	b	11988 <__assert_fail@plt+0xaa0>
   11988:	b	11a70 <__assert_fail@plt+0xb88>
   1198c:	movw	r0, #53520	; 0xd110
   11990:	movt	r0, #2
   11994:	ldr	r0, [r0]
   11998:	cmp	r0, #0
   1199c:	str	r0, [sp, #4]
   119a0:	beq	119c8 <__assert_fail@plt+0xae0>
   119a4:	b	119a8 <__assert_fail@plt+0xac0>
   119a8:	ldr	r0, [sp, #4]
   119ac:	cmp	r0, #1
   119b0:	beq	119e0 <__assert_fail@plt+0xaf8>
   119b4:	b	119b8 <__assert_fail@plt+0xad0>
   119b8:	ldr	r0, [sp, #4]
   119bc:	cmp	r0, #2
   119c0:	beq	119f8 <__assert_fail@plt+0xb10>
   119c4:	b	11a6c <__assert_fail@plt+0xb84>
   119c8:	movw	r0, #53528	; 0xd118
   119cc:	movt	r0, #2
   119d0:	movw	r1, #14536	; 0x38c8
   119d4:	movt	r1, #1
   119d8:	str	r1, [r0]
   119dc:	b	11a6c <__assert_fail@plt+0xb84>
   119e0:	movw	r0, #53528	; 0xd118
   119e4:	movt	r0, #2
   119e8:	movw	r1, #15424	; 0x3c40
   119ec:	movt	r1, #1
   119f0:	str	r1, [r0]
   119f4:	b	11a6c <__assert_fail@plt+0xb84>
   119f8:	movw	r0, #53612	; 0xd16c
   119fc:	movt	r0, #2
   11a00:	ldr	r0, [r0]
   11a04:	cmp	r0, #0
   11a08:	beq	11a24 <__assert_fail@plt+0xb3c>
   11a0c:	movw	r0, #53528	; 0xd118
   11a10:	movt	r0, #2
   11a14:	movw	r1, #14896	; 0x3a30
   11a18:	movt	r1, #1
   11a1c:	str	r1, [r0]
   11a20:	b	11a68 <__assert_fail@plt+0xb80>
   11a24:	movw	r0, #53656	; 0xd198
   11a28:	movt	r0, #2
   11a2c:	ldr	r0, [r0]
   11a30:	cmp	r0, #0
   11a34:	beq	11a50 <__assert_fail@plt+0xb68>
   11a38:	movw	r0, #53528	; 0xd118
   11a3c:	movt	r0, #2
   11a40:	movw	r1, #15160	; 0x3b38
   11a44:	movt	r1, #1
   11a48:	str	r1, [r0]
   11a4c:	b	11a64 <__assert_fail@plt+0xb7c>
   11a50:	movw	r0, #53528	; 0xd118
   11a54:	movt	r0, #2
   11a58:	movw	r1, #14632	; 0x3928
   11a5c:	movt	r1, #1
   11a60:	str	r1, [r0]
   11a64:	b	11a68 <__assert_fail@plt+0xb80>
   11a68:	b	11a6c <__assert_fail@plt+0xb84>
   11a6c:	b	11a70 <__assert_fail@plt+0xb88>
   11a70:	movw	r0, #53588	; 0xd154
   11a74:	movt	r0, #2
   11a78:	ldr	r0, [r0]
   11a7c:	cmp	r0, #0
   11a80:	beq	11a9c <__assert_fail@plt+0xbb4>
   11a84:	movw	r0, #53532	; 0xd11c
   11a88:	movt	r0, #2
   11a8c:	movw	r1, #10148	; 0x27a4
   11a90:	movt	r1, #1
   11a94:	str	r1, [r0]
   11a98:	b	11b40 <__assert_fail@plt+0xc58>
   11a9c:	movw	r0, #53648	; 0xd190
   11aa0:	movt	r0, #2
   11aa4:	ldr	r0, [r0]
   11aa8:	cmp	r0, #0
   11aac:	beq	11ac8 <__assert_fail@plt+0xbe0>
   11ab0:	movw	r0, #53532	; 0xd11c
   11ab4:	movt	r0, #2
   11ab8:	movw	r1, #13520	; 0x34d0
   11abc:	movt	r1, #1
   11ac0:	str	r1, [r0]
   11ac4:	b	11b3c <__assert_fail@plt+0xc54>
   11ac8:	movw	r0, #53632	; 0xd180
   11acc:	movt	r0, #2
   11ad0:	ldr	r0, [r0]
   11ad4:	cmp	r0, #0
   11ad8:	beq	11af4 <__assert_fail@plt+0xc0c>
   11adc:	movw	r0, #53532	; 0xd11c
   11ae0:	movt	r0, #2
   11ae4:	movw	r1, #10644	; 0x2994
   11ae8:	movt	r1, #1
   11aec:	str	r1, [r0]
   11af0:	b	11b38 <__assert_fail@plt+0xc50>
   11af4:	movw	r0, #53676	; 0xd1ac
   11af8:	movt	r0, #2
   11afc:	ldr	r0, [r0]
   11b00:	cmp	r0, #0
   11b04:	beq	11b20 <__assert_fail@plt+0xc38>
   11b08:	movw	r0, #53532	; 0xd11c
   11b0c:	movt	r0, #2
   11b10:	movw	r1, #13916	; 0x365c
   11b14:	movt	r1, #1
   11b18:	str	r1, [r0]
   11b1c:	b	11b34 <__assert_fail@plt+0xc4c>
   11b20:	movw	r0, #53532	; 0xd11c
   11b24:	movt	r0, #2
   11b28:	movw	r1, #12504	; 0x30d8
   11b2c:	movt	r1, #1
   11b30:	str	r1, [r0]
   11b34:	b	11b38 <__assert_fail@plt+0xc50>
   11b38:	b	11b3c <__assert_fail@plt+0xc54>
   11b3c:	b	11b40 <__assert_fail@plt+0xc58>
   11b40:	ldr	r0, [fp, #-8]
   11b44:	cmp	r0, #0
   11b48:	beq	11b60 <__assert_fail@plt+0xc78>
   11b4c:	ldr	r0, [fp, #-8]
   11b50:	ldr	r1, [fp, #-12]
   11b54:	ldr	r2, [sp, #20]
   11b58:	bl	11b90 <__assert_fail@plt+0xca8>
   11b5c:	b	11b74 <__assert_fail@plt+0xc8c>
   11b60:	ldr	r2, [sp, #20]
   11b64:	movw	r0, #1
   11b68:	movw	r1, #53488	; 0xd0f0
   11b6c:	movt	r1, #2
   11b70:	bl	11b90 <__assert_fail@plt+0xca8>
   11b74:	movw	r0, #53628	; 0xd17c
   11b78:	movt	r0, #2
   11b7c:	ldr	r0, [r0]
   11b80:	str	r0, [fp, #-4]
   11b84:	ldr	r0, [fp, #-4]
   11b88:	mov	sp, fp
   11b8c:	pop	{fp, pc}
   11b90:	push	{fp, lr}
   11b94:	mov	fp, sp
   11b98:	sub	sp, sp, #72	; 0x48
   11b9c:	str	r0, [fp, #-4]
   11ba0:	str	r1, [fp, #-8]
   11ba4:	str	r2, [fp, #-12]
   11ba8:	ldr	r0, [fp, #-8]
   11bac:	ldr	r1, [fp, #-12]
   11bb0:	movw	r2, #53616	; 0xd170
   11bb4:	movt	r2, #2
   11bb8:	ldr	r2, [r2]
   11bbc:	cmp	r2, #0
   11bc0:	movw	r2, #0
   11bc4:	movne	r2, #1
   11bc8:	tst	r2, #1
   11bcc:	movw	r2, #7932	; 0x1efc
   11bd0:	movt	r2, #1
   11bd4:	movw	r3, #0
   11bd8:	movne	r2, r3
   11bdc:	bl	14150 <__assert_fail@plt+0x3268>
   11be0:	str	r0, [fp, #-16]
   11be4:	ldr	r0, [fp, #-16]
   11be8:	movw	r1, #0
   11bec:	cmp	r0, r1
   11bf0:	bne	11c50 <__assert_fail@plt+0xd68>
   11bf4:	movw	r0, #53512	; 0xd108
   11bf8:	movt	r0, #2
   11bfc:	ldr	r0, [r0]
   11c00:	ldr	r1, [fp, #-8]
   11c04:	ldr	r2, [r1]
   11c08:	str	r0, [fp, #-32]	; 0xffffffe0
   11c0c:	str	r2, [sp, #36]	; 0x24
   11c10:	bl	10dec <__errno_location@plt>
   11c14:	ldr	r0, [r0]
   11c18:	bl	10d98 <strerror@plt>
   11c1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c20:	str	r0, [sp, #32]
   11c24:	mov	r0, r1
   11c28:	movw	r1, #49408	; 0xc100
   11c2c:	movt	r1, #1
   11c30:	ldr	r2, [sp, #36]	; 0x24
   11c34:	ldr	r3, [sp, #32]
   11c38:	bl	10de0 <fprintf@plt>
   11c3c:	movw	r1, #53628	; 0xd17c
   11c40:	movt	r1, #2
   11c44:	movw	r2, #1
   11c48:	str	r2, [r1]
   11c4c:	b	11ef4 <__assert_fail@plt+0x100c>
   11c50:	ldr	r0, [fp, #-16]
   11c54:	movw	r1, #0
   11c58:	bl	17200 <__assert_fail@plt+0x6318>
   11c5c:	movw	r1, #0
   11c60:	str	r0, [sp, #28]
   11c64:	mov	r0, r1
   11c68:	ldr	r1, [sp, #28]
   11c6c:	bl	12070 <__assert_fail@plt+0x1188>
   11c70:	movw	r0, #53652	; 0xd194
   11c74:	movt	r0, #2
   11c78:	ldr	r0, [r0]
   11c7c:	cmp	r0, #0
   11c80:	beq	11c88 <__assert_fail@plt+0xda0>
   11c84:	b	11ef4 <__assert_fail@plt+0x100c>
   11c88:	movw	r0, #53600	; 0xd160
   11c8c:	movt	r0, #2
   11c90:	ldr	r0, [r0]
   11c94:	cmp	r0, #0
   11c98:	movw	r0, #0
   11c9c:	str	r0, [sp, #24]
   11ca0:	bne	11cbc <__assert_fail@plt+0xdd4>
   11ca4:	ldr	r0, [fp, #-12]
   11ca8:	and	r0, r0, #8
   11cac:	cmp	r0, #0
   11cb0:	movw	r0, #0
   11cb4:	movne	r0, #1
   11cb8:	str	r0, [sp, #24]
   11cbc:	ldr	r0, [sp, #24]
   11cc0:	tst	r0, #1
   11cc4:	movw	r0, #4096	; 0x1000
   11cc8:	moveq	r0, #0
   11ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   11cd0:	ldr	r0, [fp, #-16]
   11cd4:	bl	15250 <__assert_fail@plt+0x4368>
   11cd8:	str	r0, [fp, #-20]	; 0xffffffec
   11cdc:	movw	r1, #0
   11ce0:	cmp	r0, r1
   11ce4:	beq	11e9c <__assert_fail@plt+0xfb4>
   11ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11cec:	ldrh	r0, [r0, #56]	; 0x38
   11cf0:	sub	r0, r0, #1
   11cf4:	cmp	r0, #6
   11cf8:	str	r0, [sp, #20]
   11cfc:	bhi	11e98 <__assert_fail@plt+0xfb0>
   11d00:	add	r0, pc, #8
   11d04:	ldr	r1, [sp, #20]
   11d08:	ldr	r0, [r0, r1, lsl #2]
   11d0c:	mov	pc, r0
   11d10:	andeq	r1, r1, ip, lsr #26
   11d14:	andeq	r1, r1, r8, lsl lr
   11d18:	muleq	r1, r8, lr
   11d1c:	andeq	r1, r1, ip, lsr lr
   11d20:	muleq	r1, r8, lr
   11d24:	muleq	r1, r8, lr
   11d28:	andeq	r1, r1, ip, lsr lr
   11d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d30:	ldrb	r0, [r0, #168]	; 0xa8
   11d34:	cmp	r0, #46	; 0x2e
   11d38:	bne	11d64 <__assert_fail@plt+0xe7c>
   11d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d40:	ldr	r0, [r0, #48]	; 0x30
   11d44:	cmp	r0, #0
   11d48:	beq	11d64 <__assert_fail@plt+0xe7c>
   11d4c:	movw	r0, #53668	; 0xd1a4
   11d50:	movt	r0, #2
   11d54:	ldr	r0, [r0]
   11d58:	cmp	r0, #0
   11d5c:	bne	11d64 <__assert_fail@plt+0xe7c>
   11d60:	b	11e98 <__assert_fail@plt+0xfb0>
   11d64:	movw	r0, #53524	; 0xd114
   11d68:	movt	r0, #2
   11d6c:	ldr	r0, [r0]
   11d70:	cmp	r0, #0
   11d74:	beq	11d90 <__assert_fail@plt+0xea8>
   11d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d7c:	ldr	r1, [r0, #28]
   11d80:	movw	r0, #49425	; 0xc111
   11d84:	movt	r0, #1
   11d88:	bl	10cc0 <printf@plt>
   11d8c:	b	11dc4 <__assert_fail@plt+0xedc>
   11d90:	ldr	r0, [fp, #-4]
   11d94:	cmp	r0, #1
   11d98:	ble	11dc0 <__assert_fail@plt+0xed8>
   11d9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11da0:	ldr	r1, [r0, #28]
   11da4:	movw	r0, #49426	; 0xc112
   11da8:	movt	r0, #1
   11dac:	bl	10cc0 <printf@plt>
   11db0:	movw	r1, #53524	; 0xd114
   11db4:	movt	r1, #2
   11db8:	movw	r2, #1
   11dbc:	str	r2, [r1]
   11dc0:	b	11dc4 <__assert_fail@plt+0xedc>
   11dc4:	ldr	r0, [fp, #-16]
   11dc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11dcc:	bl	17200 <__assert_fail@plt+0x6318>
   11dd0:	str	r0, [fp, #-24]	; 0xffffffe8
   11dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ddc:	bl	12070 <__assert_fail@plt+0x1188>
   11de0:	movw	r0, #53600	; 0xd160
   11de4:	movt	r0, #2
   11de8:	ldr	r0, [r0]
   11dec:	cmp	r0, #0
   11df0:	bne	11e14 <__assert_fail@plt+0xf2c>
   11df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11df8:	movw	r1, #0
   11dfc:	cmp	r0, r1
   11e00:	beq	11e14 <__assert_fail@plt+0xf2c>
   11e04:	ldr	r0, [fp, #-16]
   11e08:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e0c:	movw	r2, #4
   11e10:	bl	17174 <__assert_fail@plt+0x628c>
   11e14:	b	11e98 <__assert_fail@plt+0xfb0>
   11e18:	movw	r0, #53512	; 0xd108
   11e1c:	movt	r0, #2
   11e20:	ldr	r0, [r0]
   11e24:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e28:	add	r2, r1, #168	; 0xa8
   11e2c:	movw	r1, #49431	; 0xc117
   11e30:	movt	r1, #1
   11e34:	bl	10de0 <fprintf@plt>
   11e38:	b	11e98 <__assert_fail@plt+0xfb0>
   11e3c:	movw	r0, #53512	; 0xd108
   11e40:	movt	r0, #2
   11e44:	ldr	r0, [r0]
   11e48:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e4c:	add	r2, r1, #168	; 0xa8
   11e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e54:	ldr	r1, [r1, #32]
   11e58:	str	r0, [sp, #16]
   11e5c:	mov	r0, r1
   11e60:	str	r2, [sp, #12]
   11e64:	bl	10d98 <strerror@plt>
   11e68:	ldr	r1, [sp, #16]
   11e6c:	str	r0, [sp, #8]
   11e70:	mov	r0, r1
   11e74:	movw	r1, #49585	; 0xc1b1
   11e78:	movt	r1, #1
   11e7c:	ldr	r2, [sp, #12]
   11e80:	ldr	r3, [sp, #8]
   11e84:	bl	10de0 <fprintf@plt>
   11e88:	movw	r1, #53628	; 0xd17c
   11e8c:	movt	r1, #2
   11e90:	movw	r2, #1
   11e94:	str	r2, [r1]
   11e98:	b	11cd0 <__assert_fail@plt+0xde8>
   11e9c:	bl	10dec <__errno_location@plt>
   11ea0:	ldr	r0, [r0]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ef4 <__assert_fail@plt+0x100c>
   11eac:	movw	r0, #53512	; 0xd108
   11eb0:	movt	r0, #2
   11eb4:	ldr	r0, [r0]
   11eb8:	str	r0, [sp, #4]
   11ebc:	bl	10dec <__errno_location@plt>
   11ec0:	ldr	r0, [r0]
   11ec4:	bl	10d98 <strerror@plt>
   11ec8:	ldr	r1, [sp, #4]
   11ecc:	str	r0, [sp]
   11ed0:	mov	r0, r1
   11ed4:	movw	r1, #49460	; 0xc134
   11ed8:	movt	r1, #1
   11edc:	ldr	r2, [sp]
   11ee0:	bl	10de0 <fprintf@plt>
   11ee4:	movw	r1, #53628	; 0xd17c
   11ee8:	movt	r1, #2
   11eec:	movw	r2, #1
   11ef0:	str	r2, [r1]
   11ef4:	mov	sp, fp
   11ef8:	pop	{fp, pc}
   11efc:	push	{fp, lr}
   11f00:	mov	fp, sp
   11f04:	sub	sp, sp, #24
   11f08:	str	r0, [fp, #-8]
   11f0c:	str	r1, [sp, #12]
   11f10:	ldr	r0, [fp, #-8]
   11f14:	ldr	r0, [r0]
   11f18:	ldrh	r0, [r0, #56]	; 0x38
   11f1c:	str	r0, [sp, #8]
   11f20:	ldr	r0, [sp, #8]
   11f24:	cmp	r0, #7
   11f28:	bne	11f38 <__assert_fail@plt+0x1050>
   11f2c:	movw	r0, #0
   11f30:	str	r0, [fp, #-4]
   11f34:	b	12064 <__assert_fail@plt+0x117c>
   11f38:	ldr	r0, [sp, #12]
   11f3c:	ldr	r0, [r0]
   11f40:	ldrh	r0, [r0, #56]	; 0x38
   11f44:	str	r0, [sp, #4]
   11f48:	ldr	r0, [sp, #4]
   11f4c:	cmp	r0, #7
   11f50:	bne	11f60 <__assert_fail@plt+0x1078>
   11f54:	movw	r0, #0
   11f58:	str	r0, [fp, #-4]
   11f5c:	b	12064 <__assert_fail@plt+0x117c>
   11f60:	ldr	r0, [sp, #8]
   11f64:	cmp	r0, #10
   11f68:	beq	11f78 <__assert_fail@plt+0x1090>
   11f6c:	ldr	r0, [sp, #4]
   11f70:	cmp	r0, #10
   11f74:	bne	11fc4 <__assert_fail@plt+0x10dc>
   11f78:	ldr	r0, [sp, #4]
   11f7c:	cmp	r0, #10
   11f80:	beq	11f90 <__assert_fail@plt+0x10a8>
   11f84:	movw	r0, #1
   11f88:	str	r0, [fp, #-4]
   11f8c:	b	12064 <__assert_fail@plt+0x117c>
   11f90:	ldr	r0, [sp, #8]
   11f94:	cmp	r0, #10
   11f98:	beq	11fa8 <__assert_fail@plt+0x10c0>
   11f9c:	mvn	r0, #0
   11fa0:	str	r0, [fp, #-4]
   11fa4:	b	12064 <__assert_fail@plt+0x117c>
   11fa8:	ldr	r0, [fp, #-8]
   11fac:	ldr	r0, [r0]
   11fb0:	ldr	r1, [sp, #12]
   11fb4:	ldr	r1, [r1]
   11fb8:	bl	138c8 <__assert_fail@plt+0x29e0>
   11fbc:	str	r0, [fp, #-4]
   11fc0:	b	12064 <__assert_fail@plt+0x117c>
   11fc4:	ldr	r0, [sp, #8]
   11fc8:	ldr	r1, [sp, #4]
   11fcc:	cmp	r0, r1
   11fd0:	beq	12030 <__assert_fail@plt+0x1148>
   11fd4:	ldr	r0, [fp, #-8]
   11fd8:	ldr	r0, [r0]
   11fdc:	ldr	r0, [r0, #48]	; 0x30
   11fe0:	cmp	r0, #0
   11fe4:	bne	12030 <__assert_fail@plt+0x1148>
   11fe8:	movw	r0, #53652	; 0xd194
   11fec:	movt	r0, #2
   11ff0:	ldr	r0, [r0]
   11ff4:	cmp	r0, #0
   11ff8:	bne	12030 <__assert_fail@plt+0x1148>
   11ffc:	ldr	r0, [sp, #8]
   12000:	cmp	r0, #1
   12004:	bne	12014 <__assert_fail@plt+0x112c>
   12008:	movw	r0, #1
   1200c:	str	r0, [fp, #-4]
   12010:	b	12064 <__assert_fail@plt+0x117c>
   12014:	ldr	r0, [sp, #4]
   12018:	cmp	r0, #1
   1201c:	bne	1202c <__assert_fail@plt+0x1144>
   12020:	mvn	r0, #0
   12024:	str	r0, [fp, #-4]
   12028:	b	12064 <__assert_fail@plt+0x117c>
   1202c:	b	12030 <__assert_fail@plt+0x1148>
   12030:	movw	r0, #53528	; 0xd118
   12034:	movt	r0, #2
   12038:	ldr	r0, [r0]
   1203c:	ldr	r1, [fp, #-8]
   12040:	ldr	r1, [r1]
   12044:	ldr	r2, [sp, #12]
   12048:	ldr	r2, [r2]
   1204c:	str	r0, [sp]
   12050:	mov	r0, r1
   12054:	mov	r1, r2
   12058:	ldr	r2, [sp]
   1205c:	blx	r2
   12060:	str	r0, [fp, #-4]
   12064:	ldr	r0, [fp, #-4]
   12068:	mov	sp, fp
   1206c:	pop	{fp, pc}
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	sub	sp, sp, #264	; 0x108
   1207c:	str	r0, [fp, #-12]
   12080:	str	r1, [fp, #-16]
   12084:	movw	r0, #0
   12088:	str	r0, [sp, #124]	; 0x7c
   1208c:	str	r0, [sp, #120]	; 0x78
   12090:	str	r0, [sp, #52]	; 0x34
   12094:	ldr	r1, [fp, #-16]
   12098:	cmp	r1, r0
   1209c:	bne	120a4 <__assert_fail@plt+0x11bc>
   120a0:	b	1279c <__assert_fail@plt+0x18b4>
   120a4:	movw	r0, #53604	; 0xd164
   120a8:	movt	r0, #2
   120ac:	ldr	r0, [r0]
   120b0:	cmp	r0, #0
   120b4:	movw	r0, #1
   120b8:	str	r0, [sp, #40]	; 0x28
   120bc:	bne	120f8 <__assert_fail@plt+0x1210>
   120c0:	movw	r0, #53632	; 0xd180
   120c4:	movt	r0, #2
   120c8:	ldr	r0, [r0]
   120cc:	cmp	r0, #0
   120d0:	movw	r0, #1
   120d4:	str	r0, [sp, #40]	; 0x28
   120d8:	bne	120f8 <__assert_fail@plt+0x1210>
   120dc:	movw	r0, #53580	; 0xd14c
   120e0:	movt	r0, #2
   120e4:	ldr	r0, [r0]
   120e8:	cmp	r0, #0
   120ec:	movw	r0, #0
   120f0:	movne	r0, #1
   120f4:	str	r0, [sp, #40]	; 0x28
   120f8:	ldr	r0, [sp, #40]	; 0x28
   120fc:	and	r0, r0, #1
   12100:	str	r0, [sp, #128]	; 0x80
   12104:	mov	r0, #0
   12108:	str	r0, [fp, #-116]	; 0xffffff8c
   1210c:	str	r0, [fp, #-104]	; 0xffffff98
   12110:	str	r0, [fp, #-100]	; 0xffffff9c
   12114:	str	r0, [fp, #-96]	; 0xffffffa0
   12118:	str	r0, [fp, #-108]	; 0xffffff94
   1211c:	str	r0, [fp, #-92]	; 0xffffffa4
   12120:	str	r0, [fp, #-112]	; 0xffffff90
   12124:	str	r0, [fp, #-128]	; 0xffffff80
   12128:	str	r0, [fp, #-132]	; 0xffffff7c
   1212c:	str	r0, [sp, #136]	; 0x88
   12130:	str	r0, [fp, #-84]	; 0xffffffac
   12134:	str	r0, [fp, #-88]	; 0xffffffa8
   12138:	ldr	r0, [fp, #-16]
   1213c:	str	r0, [fp, #-72]	; 0xffffffb8
   12140:	movw	r0, #0
   12144:	str	r0, [sp, #132]	; 0x84
   12148:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1214c:	movw	r1, #0
   12150:	cmp	r0, r1
   12154:	beq	12650 <__assert_fail@plt+0x1768>
   12158:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1215c:	ldrh	r0, [r0, #56]	; 0x38
   12160:	cmp	r0, #7
   12164:	beq	12178 <__assert_fail@plt+0x1290>
   12168:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1216c:	ldrh	r0, [r0, #56]	; 0x38
   12170:	cmp	r0, #10
   12174:	bne	121e0 <__assert_fail@plt+0x12f8>
   12178:	movw	r0, #53512	; 0xd108
   1217c:	movt	r0, #2
   12180:	ldr	r0, [r0]
   12184:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12188:	add	r2, r1, #168	; 0xa8
   1218c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12190:	ldr	r1, [r1, #32]
   12194:	str	r0, [sp, #36]	; 0x24
   12198:	mov	r0, r1
   1219c:	str	r2, [sp, #32]
   121a0:	bl	10d98 <strerror@plt>
   121a4:	ldr	r1, [sp, #36]	; 0x24
   121a8:	str	r0, [sp, #28]
   121ac:	mov	r0, r1
   121b0:	movw	r1, #49585	; 0xc1b1
   121b4:	movt	r1, #1
   121b8:	ldr	r2, [sp, #32]
   121bc:	ldr	r3, [sp, #28]
   121c0:	bl	10de0 <fprintf@plt>
   121c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   121c8:	movw	r2, #1
   121cc:	str	r2, [r1, #16]
   121d0:	movw	r1, #53628	; 0xd17c
   121d4:	movt	r1, #2
   121d8:	str	r2, [r1]
   121dc:	b	12640 <__assert_fail@plt+0x1758>
   121e0:	ldr	r0, [fp, #-12]
   121e4:	movw	r1, #0
   121e8:	cmp	r0, r1
   121ec:	bne	12228 <__assert_fail@plt+0x1340>
   121f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   121f4:	ldrh	r0, [r0, #56]	; 0x38
   121f8:	cmp	r0, #1
   121fc:	bne	12224 <__assert_fail@plt+0x133c>
   12200:	movw	r0, #53652	; 0xd194
   12204:	movt	r0, #2
   12208:	ldr	r0, [r0]
   1220c:	cmp	r0, #0
   12210:	bne	12224 <__assert_fail@plt+0x133c>
   12214:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12218:	movw	r1, #1
   1221c:	str	r1, [r0, #16]
   12220:	b	12640 <__assert_fail@plt+0x1758>
   12224:	b	12260 <__assert_fail@plt+0x1378>
   12228:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1222c:	ldrb	r0, [r0, #168]	; 0xa8
   12230:	cmp	r0, #46	; 0x2e
   12234:	bne	1225c <__assert_fail@plt+0x1374>
   12238:	movw	r0, #53668	; 0xd1a4
   1223c:	movt	r0, #2
   12240:	ldr	r0, [r0]
   12244:	cmp	r0, #0
   12248:	bne	1225c <__assert_fail@plt+0x1374>
   1224c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12250:	movw	r1, #1
   12254:	str	r1, [r0, #16]
   12258:	b	12640 <__assert_fail@plt+0x1758>
   1225c:	b	12260 <__assert_fail@plt+0x1378>
   12260:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12264:	ldr	r0, [r0, #52]	; 0x34
   12268:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1226c:	cmp	r0, r1
   12270:	bls	12280 <__assert_fail@plt+0x1398>
   12274:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12278:	ldr	r0, [r0, #52]	; 0x34
   1227c:	str	r0, [fp, #-100]	; 0xffffff9c
   12280:	ldr	r0, [sp, #128]	; 0x80
   12284:	cmp	r0, #0
   12288:	beq	12634 <__assert_fail@plt+0x174c>
   1228c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12290:	add	r0, r0, #64	; 0x40
   12294:	str	r0, [fp, #-20]	; 0xffffffec
   12298:	ldr	r0, [fp, #-20]	; 0xffffffec
   1229c:	ldr	r1, [r0, #64]	; 0x40
   122a0:	ldr	r0, [r0, #68]	; 0x44
   122a4:	ldr	r2, [fp, #-108]	; 0xffffff94
   122a8:	subs	r1, r2, r1
   122ac:	rscs	r0, r0, r2, asr #31
   122b0:	bge	122c4 <__assert_fail@plt+0x13dc>
   122b4:	b	122b8 <__assert_fail@plt+0x13d0>
   122b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   122bc:	ldr	r0, [r0, #64]	; 0x40
   122c0:	str	r0, [fp, #-108]	; 0xffffff94
   122c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   122c8:	ldr	r1, [r0, #96]	; 0x60
   122cc:	ldr	r0, [r0, #100]	; 0x64
   122d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   122d4:	subs	r1, r2, r1
   122d8:	rscs	r0, r0, #0
   122dc:	bcs	122f0 <__assert_fail@plt+0x1408>
   122e0:	b	122e4 <__assert_fail@plt+0x13fc>
   122e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   122e8:	ldr	r0, [r0, #96]	; 0x60
   122ec:	str	r0, [fp, #-96]	; 0xffffffa0
   122f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   122f4:	ldr	r0, [r0, #20]
   122f8:	ldr	r1, [fp, #-104]	; 0xffffff98
   122fc:	cmp	r0, r1
   12300:	bls	12310 <__assert_fail@plt+0x1428>
   12304:	ldr	r0, [fp, #-20]	; 0xffffffec
   12308:	ldr	r0, [r0, #20]
   1230c:	str	r0, [fp, #-104]	; 0xffffff98
   12310:	ldr	r0, [fp, #-20]	; 0xffffffec
   12314:	ldr	r1, [r0, #48]	; 0x30
   12318:	ldr	r0, [r0, #52]	; 0x34
   1231c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12320:	ldr	r3, [fp, #-84]	; 0xffffffac
   12324:	subs	r1, r2, r1
   12328:	sbcs	r0, r3, r0
   1232c:	bge	12348 <__assert_fail@plt+0x1460>
   12330:	b	12334 <__assert_fail@plt+0x144c>
   12334:	ldr	r0, [fp, #-20]	; 0xffffffec
   12338:	ldr	r1, [r0, #48]	; 0x30
   1233c:	ldr	r0, [r0, #52]	; 0x34
   12340:	str	r0, [fp, #-84]	; 0xffffffac
   12344:	str	r1, [fp, #-88]	; 0xffffffa8
   12348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1234c:	ldr	r0, [r0, #64]	; 0x40
   12350:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12354:	add	r0, r1, r0
   12358:	str	r0, [fp, #-92]	; 0xffffffa4
   1235c:	movw	r0, #53632	; 0xd180
   12360:	movt	r0, #2
   12364:	ldr	r0, [r0]
   12368:	cmp	r0, #0
   1236c:	beq	12630 <__assert_fail@plt+0x1748>
   12370:	movw	r0, #0
   12374:	str	r0, [sp, #120]	; 0x78
   12378:	str	r0, [sp, #124]	; 0x7c
   1237c:	movw	r0, #53644	; 0xd18c
   12380:	movt	r0, #2
   12384:	ldr	r0, [r0]
   12388:	cmp	r0, #0
   1238c:	bne	123ec <__assert_fail@plt+0x1504>
   12390:	ldr	r0, [fp, #-20]	; 0xffffffec
   12394:	ldr	r0, [r0, #24]
   12398:	bl	10cb4 <getpwuid@plt>
   1239c:	str	r0, [sp, #48]	; 0x30
   123a0:	ldr	r0, [sp, #48]	; 0x30
   123a4:	movw	r1, #0
   123a8:	cmp	r0, r1
   123ac:	beq	123bc <__assert_fail@plt+0x14d4>
   123b0:	ldr	r0, [sp, #48]	; 0x30
   123b4:	ldr	r0, [r0]
   123b8:	str	r0, [sp, #124]	; 0x7c
   123bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   123c0:	ldr	r0, [r0, #28]
   123c4:	bl	10edc <getgrgid@plt>
   123c8:	str	r0, [sp, #44]	; 0x2c
   123cc:	ldr	r0, [sp, #44]	; 0x2c
   123d0:	movw	r1, #0
   123d4:	cmp	r0, r1
   123d8:	beq	123e8 <__assert_fail@plt+0x1500>
   123dc:	ldr	r0, [sp, #44]	; 0x2c
   123e0:	ldr	r0, [r0]
   123e4:	str	r0, [sp, #120]	; 0x78
   123e8:	b	123ec <__assert_fail@plt+0x1504>
   123ec:	ldr	r0, [sp, #124]	; 0x7c
   123f0:	movw	r1, #0
   123f4:	cmp	r0, r1
   123f8:	bne	12414 <__assert_fail@plt+0x152c>
   123fc:	add	r2, sp, #78	; 0x4e
   12400:	ldr	r0, [fp, #-20]	; 0xffffffec
   12404:	ldr	r0, [r0, #24]
   12408:	mov	r1, #0
   1240c:	bl	1af5c <__assert_fail@plt+0xa074>
   12410:	str	r0, [sp, #124]	; 0x7c
   12414:	ldr	r0, [sp, #120]	; 0x78
   12418:	movw	r1, #0
   1241c:	cmp	r0, r1
   12420:	bne	1243c <__assert_fail@plt+0x1554>
   12424:	add	r2, sp, #57	; 0x39
   12428:	ldr	r0, [fp, #-20]	; 0xffffffec
   1242c:	ldr	r0, [r0, #28]
   12430:	mov	r1, #0
   12434:	bl	1af5c <__assert_fail@plt+0xa074>
   12438:	str	r0, [sp, #120]	; 0x78
   1243c:	ldr	r0, [sp, #124]	; 0x7c
   12440:	bl	10dbc <strlen@plt>
   12444:	str	r0, [fp, #-124]	; 0xffffff84
   12448:	ldr	r0, [fp, #-124]	; 0xffffff84
   1244c:	ldr	r1, [sp, #136]	; 0x88
   12450:	cmp	r0, r1
   12454:	ble	12460 <__assert_fail@plt+0x1578>
   12458:	ldr	r0, [fp, #-124]	; 0xffffff84
   1245c:	str	r0, [sp, #136]	; 0x88
   12460:	ldr	r0, [sp, #120]	; 0x78
   12464:	bl	10dbc <strlen@plt>
   12468:	str	r0, [fp, #-120]	; 0xffffff88
   1246c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12470:	ldr	r1, [fp, #-132]	; 0xffffff7c
   12474:	cmp	r0, r1
   12478:	ble	12484 <__assert_fail@plt+0x159c>
   1247c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12480:	str	r0, [fp, #-132]	; 0xffffff7c
   12484:	movw	r0, #53596	; 0xd15c
   12488:	movt	r0, #2
   1248c:	ldr	r0, [r0]
   12490:	cmp	r0, #0
   12494:	beq	124cc <__assert_fail@plt+0x15e4>
   12498:	movw	r0, #49654	; 0xc1f6
   1249c:	movt	r0, #1
   124a0:	str	r0, [sp, #52]	; 0x34
   124a4:	ldr	r0, [sp, #52]	; 0x34
   124a8:	bl	10dbc <strlen@plt>
   124ac:	str	r0, [fp, #-116]	; 0xffffff8c
   124b0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   124b4:	ldr	r1, [fp, #-128]	; 0xffffff80
   124b8:	cmp	r0, r1
   124bc:	ble	124c8 <__assert_fail@plt+0x15e0>
   124c0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   124c4:	str	r0, [fp, #-128]	; 0xffffff80
   124c8:	b	124d4 <__assert_fail@plt+0x15ec>
   124cc:	movw	r0, #0
   124d0:	str	r0, [fp, #-116]	; 0xffffff8c
   124d4:	ldr	r0, [fp, #-124]	; 0xffffff84
   124d8:	add	r0, r0, #16
   124dc:	ldr	r1, [fp, #-120]	; 0xffffff88
   124e0:	add	r0, r0, r1
   124e4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   124e8:	add	r0, r0, r1
   124ec:	add	r0, r0, #3
   124f0:	bl	1b360 <__assert_fail@plt+0xa478>
   124f4:	str	r0, [fp, #-76]	; 0xffffffb4
   124f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   124fc:	movw	r1, #0
   12500:	cmp	r0, r1
   12504:	bne	12554 <__assert_fail@plt+0x166c>
   12508:	movw	r0, #53512	; 0xd108
   1250c:	movt	r0, #2
   12510:	ldr	r0, [r0]
   12514:	str	r0, [sp, #24]
   12518:	bl	10dec <__errno_location@plt>
   1251c:	ldr	r0, [r0]
   12520:	bl	10d98 <strerror@plt>
   12524:	ldr	r1, [sp, #24]
   12528:	str	r0, [sp, #20]
   1252c:	mov	r0, r1
   12530:	movw	r1, #49473	; 0xc141
   12534:	movt	r1, #1
   12538:	ldr	r2, [sp, #20]
   1253c:	bl	10de0 <fprintf@plt>
   12540:	movw	r1, #53628	; 0xd17c
   12544:	movt	r1, #2
   12548:	movw	r2, #1
   1254c:	str	r2, [r1]
   12550:	b	1279c <__assert_fail@plt+0x18b4>
   12554:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12558:	add	r0, r0, #12
   1255c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12560:	str	r0, [r1]
   12564:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12568:	ldr	r0, [r0]
   1256c:	ldr	r1, [sp, #124]	; 0x7c
   12570:	bl	10d5c <strcpy@plt>
   12574:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12578:	add	r1, r1, #12
   1257c:	ldr	r2, [fp, #-124]	; 0xffffff84
   12580:	add	r2, r2, #1
   12584:	add	r1, r1, r2
   12588:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1258c:	str	r1, [r2, #4]
   12590:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12594:	ldr	r1, [r1, #4]
   12598:	ldr	r2, [sp, #120]	; 0x78
   1259c:	str	r0, [sp, #16]
   125a0:	mov	r0, r1
   125a4:	mov	r1, r2
   125a8:	bl	10d5c <strcpy@plt>
   125ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   125b0:	ldr	r1, [r1, #16]
   125b4:	and	r1, r1, #61440	; 0xf000
   125b8:	cmp	r1, #8192	; 0x2000
   125bc:	beq	125d4 <__assert_fail@plt+0x16ec>
   125c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   125c4:	ldr	r0, [r0, #16]
   125c8:	and	r0, r0, #61440	; 0xf000
   125cc:	cmp	r0, #24576	; 0x6000
   125d0:	bne	125dc <__assert_fail@plt+0x16f4>
   125d4:	movw	r0, #1
   125d8:	str	r0, [fp, #-112]	; 0xffffff90
   125dc:	movw	r0, #53596	; 0xd15c
   125e0:	movt	r0, #2
   125e4:	ldr	r0, [r0]
   125e8:	cmp	r0, #0
   125ec:	beq	12624 <__assert_fail@plt+0x173c>
   125f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   125f4:	add	r0, r0, #12
   125f8:	ldr	r1, [fp, #-124]	; 0xffffff84
   125fc:	ldr	r2, [fp, #-120]	; 0xffffff88
   12600:	add	r1, r1, r2
   12604:	add	r1, r1, #2
   12608:	add	r0, r0, r1
   1260c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12610:	str	r0, [r1, #8]
   12614:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12618:	ldr	r0, [r0, #8]
   1261c:	ldr	r1, [sp, #52]	; 0x34
   12620:	bl	10d5c <strcpy@plt>
   12624:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12628:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1262c:	str	r0, [r1, #20]
   12630:	b	12634 <__assert_fail@plt+0x174c>
   12634:	ldr	r0, [sp, #132]	; 0x84
   12638:	add	r0, r0, #1
   1263c:	str	r0, [sp, #132]	; 0x84
   12640:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12644:	ldr	r0, [r0, #8]
   12648:	str	r0, [fp, #-72]	; 0xffffffb8
   1264c:	b	12148 <__assert_fail@plt+0x1260>
   12650:	ldr	r0, [sp, #132]	; 0x84
   12654:	cmp	r0, #0
   12658:	bne	12660 <__assert_fail@plt+0x1778>
   1265c:	b	1279c <__assert_fail@plt+0x18b4>
   12660:	ldr	r0, [fp, #-16]
   12664:	str	r0, [fp, #-68]	; 0xffffffbc
   12668:	ldr	r0, [sp, #132]	; 0x84
   1266c:	str	r0, [fp, #-56]	; 0xffffffc8
   12670:	ldr	r0, [fp, #-100]	; 0xffffff9c
   12674:	str	r0, [fp, #-52]	; 0xffffffcc
   12678:	ldr	r0, [sp, #128]	; 0x80
   1267c:	cmp	r0, #0
   12680:	beq	12720 <__assert_fail@plt+0x1838>
   12684:	add	r2, sp, #99	; 0x63
   12688:	ldr	r0, [fp, #-112]	; 0xffffff90
   1268c:	str	r0, [fp, #-60]	; 0xffffffc4
   12690:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12694:	str	r0, [fp, #-64]	; 0xffffffc0
   12698:	ldr	r0, [fp, #-108]	; 0xffffff94
   1269c:	asr	r1, r0, #31
   126a0:	add	r3, sp, #99	; 0x63
   126a4:	str	r2, [sp, #12]
   126a8:	mov	r2, r3
   126ac:	str	r3, [sp, #8]
   126b0:	bl	1af5c <__assert_fail@plt+0xa074>
   126b4:	bl	10dbc <strlen@plt>
   126b8:	str	r0, [fp, #-48]	; 0xffffffd0
   126bc:	ldr	r0, [fp, #-128]	; 0xffffff80
   126c0:	str	r0, [fp, #-44]	; 0xffffffd4
   126c4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   126c8:	str	r0, [fp, #-40]	; 0xffffffd8
   126cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   126d0:	mov	r1, #0
   126d4:	str	r1, [sp, #4]
   126d8:	ldr	r2, [sp, #8]
   126dc:	bl	1af5c <__assert_fail@plt+0xa074>
   126e0:	bl	10dbc <strlen@plt>
   126e4:	str	r0, [fp, #-36]	; 0xffffffdc
   126e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   126ec:	ldr	r1, [sp, #4]
   126f0:	ldr	r2, [sp, #8]
   126f4:	bl	1af5c <__assert_fail@plt+0xa074>
   126f8:	bl	10dbc <strlen@plt>
   126fc:	str	r0, [fp, #-32]	; 0xffffffe0
   12700:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12704:	ldr	r1, [fp, #-84]	; 0xffffffac
   12708:	ldr	r2, [sp, #12]
   1270c:	bl	1af5c <__assert_fail@plt+0xa074>
   12710:	bl	10dbc <strlen@plt>
   12714:	str	r0, [fp, #-28]	; 0xffffffe4
   12718:	ldr	r0, [sp, #136]	; 0x88
   1271c:	str	r0, [fp, #-24]	; 0xffffffe8
   12720:	movw	r0, #53532	; 0xd11c
   12724:	movt	r0, #2
   12728:	ldr	r0, [r0]
   1272c:	sub	r1, fp, #68	; 0x44
   12730:	str	r0, [sp]
   12734:	mov	r0, r1
   12738:	ldr	r1, [sp]
   1273c:	blx	r1
   12740:	movw	r0, #53524	; 0xd114
   12744:	movt	r0, #2
   12748:	movw	r1, #1
   1274c:	str	r1, [r0]
   12750:	movw	r0, #53632	; 0xd180
   12754:	movt	r0, #2
   12758:	ldr	r0, [r0]
   1275c:	cmp	r0, #0
   12760:	beq	1279c <__assert_fail@plt+0x18b4>
   12764:	ldr	r0, [fp, #-16]
   12768:	str	r0, [fp, #-72]	; 0xffffffb8
   1276c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12770:	movw	r1, #0
   12774:	cmp	r0, r1
   12778:	beq	12798 <__assert_fail@plt+0x18b0>
   1277c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12780:	ldr	r0, [r0, #20]
   12784:	bl	14110 <__assert_fail@plt+0x3228>
   12788:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1278c:	ldr	r0, [r0, #8]
   12790:	str	r0, [fp, #-72]	; 0xffffffb8
   12794:	b	1276c <__assert_fail@plt+0x1884>
   12798:	b	1279c <__assert_fail@plt+0x18b4>
   1279c:	sub	sp, fp, #8
   127a0:	pop	{r4, r5, fp, pc}
   127a4:	push	{fp, lr}
   127a8:	mov	fp, sp
   127ac:	sub	sp, sp, #16
   127b0:	str	r0, [fp, #-4]
   127b4:	ldr	r0, [fp, #-4]
   127b8:	ldr	r0, [r0]
   127bc:	str	r0, [sp, #8]
   127c0:	ldr	r0, [sp, #8]
   127c4:	movw	r1, #0
   127c8:	cmp	r0, r1
   127cc:	beq	1281c <__assert_fail@plt+0x1934>
   127d0:	ldr	r0, [sp, #8]
   127d4:	ldr	r0, [r0, #16]
   127d8:	cmp	r0, #1
   127dc:	bne	127e4 <__assert_fail@plt+0x18fc>
   127e0:	b	1280c <__assert_fail@plt+0x1924>
   127e4:	ldr	r0, [sp, #8]
   127e8:	ldr	r1, [fp, #-4]
   127ec:	ldr	r1, [r1, #32]
   127f0:	ldr	r2, [fp, #-4]
   127f4:	ldr	r2, [r2, #20]
   127f8:	bl	12824 <__assert_fail@plt+0x193c>
   127fc:	movw	r1, #10
   12800:	str	r0, [sp, #4]
   12804:	mov	r0, r1
   12808:	bl	10e10 <putchar@plt>
   1280c:	ldr	r0, [sp, #8]
   12810:	ldr	r0, [r0, #8]
   12814:	str	r0, [sp, #8]
   12818:	b	127c0 <__assert_fail@plt+0x18d8>
   1281c:	mov	sp, fp
   12820:	pop	{fp, pc}
   12824:	push	{fp, lr}
   12828:	mov	fp, sp
   1282c:	sub	sp, sp, #40	; 0x28
   12830:	str	r0, [fp, #-4]
   12834:	str	r1, [fp, #-8]
   12838:	str	r2, [fp, #-12]
   1283c:	ldr	r0, [fp, #-4]
   12840:	add	r0, r0, #64	; 0x40
   12844:	str	r0, [fp, #-16]
   12848:	movw	r0, #0
   1284c:	str	r0, [sp, #20]
   12850:	movw	r0, #53604	; 0xd164
   12854:	movt	r0, #2
   12858:	ldr	r0, [r0]
   1285c:	cmp	r0, #0
   12860:	beq	12888 <__assert_fail@plt+0x19a0>
   12864:	ldr	r1, [fp, #-8]
   12868:	ldr	r0, [fp, #-16]
   1286c:	ldr	r2, [r0, #96]	; 0x60
   12870:	movw	r0, #49495	; 0xc157
   12874:	movt	r0, #1
   12878:	bl	10cc0 <printf@plt>
   1287c:	ldr	r1, [sp, #20]
   12880:	add	r0, r1, r0
   12884:	str	r0, [sp, #20]
   12888:	movw	r0, #53580	; 0xd14c
   1288c:	movt	r0, #2
   12890:	ldr	r0, [r0]
   12894:	cmp	r0, #0
   12898:	beq	1291c <__assert_fail@plt+0x1a34>
   1289c:	ldr	r1, [fp, #-12]
   128a0:	ldr	r0, [fp, #-16]
   128a4:	ldr	r2, [r0, #64]	; 0x40
   128a8:	ldr	r0, [r0, #68]	; 0x44
   128ac:	movw	r3, #53660	; 0xd19c
   128b0:	movt	r3, #2
   128b4:	ldr	r3, [r3]
   128b8:	asr	ip, r3, #31
   128bc:	sub	lr, r3, #1
   128c0:	adds	r2, r2, lr
   128c4:	adc	r0, r0, lr, asr #31
   128c8:	str	r0, [sp, #16]
   128cc:	mov	r0, r2
   128d0:	ldr	r2, [sp, #16]
   128d4:	str	r1, [sp, #12]
   128d8:	mov	r1, r2
   128dc:	mov	r2, r3
   128e0:	mov	r3, ip
   128e4:	bl	1bdcc <__assert_fail@plt+0xaee4>
   128e8:	movw	r2, #49540	; 0xc184
   128ec:	movt	r2, #1
   128f0:	str	r0, [sp, #8]
   128f4:	mov	r0, r2
   128f8:	ldr	r2, [sp, #12]
   128fc:	str	r1, [sp, #4]
   12900:	mov	r1, r2
   12904:	ldr	r2, [sp, #8]
   12908:	ldr	r3, [sp, #4]
   1290c:	bl	10cc0 <printf@plt>
   12910:	ldr	r1, [sp, #20]
   12914:	add	r0, r1, r0
   12918:	str	r0, [sp, #20]
   1291c:	ldr	r0, [fp, #-4]
   12920:	add	r0, r0, #168	; 0xa8
   12924:	bl	137e4 <__assert_fail@plt+0x28fc>
   12928:	ldr	r1, [sp, #20]
   1292c:	add	r0, r1, r0
   12930:	str	r0, [sp, #20]
   12934:	movw	r0, #53620	; 0xd174
   12938:	movt	r0, #2
   1293c:	ldr	r0, [r0]
   12940:	cmp	r0, #0
   12944:	bne	12970 <__assert_fail@plt+0x1a88>
   12948:	movw	r0, #53636	; 0xd184
   1294c:	movt	r0, #2
   12950:	ldr	r0, [r0]
   12954:	cmp	r0, #0
   12958:	beq	12988 <__assert_fail@plt+0x1aa0>
   1295c:	ldr	r0, [fp, #-16]
   12960:	ldr	r0, [r0, #16]
   12964:	and	r0, r0, #61440	; 0xf000
   12968:	cmp	r0, #16384	; 0x4000
   1296c:	bne	12988 <__assert_fail@plt+0x1aa0>
   12970:	ldr	r0, [fp, #-16]
   12974:	ldr	r0, [r0, #16]
   12978:	bl	12ed0 <__assert_fail@plt+0x1fe8>
   1297c:	ldr	r1, [sp, #20]
   12980:	add	r0, r1, r0
   12984:	str	r0, [sp, #20]
   12988:	ldr	r0, [sp, #20]
   1298c:	mov	sp, fp
   12990:	pop	{fp, pc}
   12994:	push	{r4, r5, fp, lr}
   12998:	add	fp, sp, #8
   1299c:	sub	sp, sp, #80	; 0x50
   129a0:	str	r0, [fp, #-12]
   129a4:	ldr	r0, [fp, #-12]
   129a8:	ldr	r0, [r0]
   129ac:	ldr	r0, [r0, #48]	; 0x30
   129b0:	cmp	r0, #0
   129b4:	beq	12a10 <__assert_fail@plt+0x1b28>
   129b8:	movw	r0, #53632	; 0xd180
   129bc:	movt	r0, #2
   129c0:	ldr	r0, [r0]
   129c4:	cmp	r0, #0
   129c8:	bne	129e0 <__assert_fail@plt+0x1af8>
   129cc:	movw	r0, #53580	; 0xd14c
   129d0:	movt	r0, #2
   129d4:	ldr	r0, [r0]
   129d8:	cmp	r0, #0
   129dc:	beq	12a10 <__assert_fail@plt+0x1b28>
   129e0:	ldr	r0, [fp, #-12]
   129e4:	ldr	r0, [r0, #4]
   129e8:	movw	r1, #53660	; 0xd19c
   129ec:	movt	r1, #2
   129f0:	ldr	r2, [r1]
   129f4:	sub	r2, r2, #1
   129f8:	add	r0, r0, r2
   129fc:	ldr	r1, [r1]
   12a00:	udiv	r1, r0, r1
   12a04:	movw	r0, #49484	; 0xc14c
   12a08:	movt	r0, #1
   12a0c:	bl	10cc0 <printf@plt>
   12a10:	ldr	r0, [fp, #-12]
   12a14:	ldr	r0, [r0]
   12a18:	str	r0, [fp, #-20]	; 0xffffffec
   12a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a20:	movw	r1, #0
   12a24:	cmp	r0, r1
   12a28:	beq	12d64 <__assert_fail@plt+0x1e7c>
   12a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a30:	ldr	r0, [r0, #16]
   12a34:	cmp	r0, #1
   12a38:	bne	12a40 <__assert_fail@plt+0x1b58>
   12a3c:	b	12d54 <__assert_fail@plt+0x1e6c>
   12a40:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a44:	add	r0, r0, #64	; 0x40
   12a48:	str	r0, [fp, #-16]
   12a4c:	movw	r0, #53604	; 0xd164
   12a50:	movt	r0, #2
   12a54:	ldr	r0, [r0]
   12a58:	cmp	r0, #0
   12a5c:	beq	12a7c <__assert_fail@plt+0x1b94>
   12a60:	ldr	r0, [fp, #-12]
   12a64:	ldr	r1, [r0, #32]
   12a68:	ldr	r0, [fp, #-16]
   12a6c:	ldr	r2, [r0, #96]	; 0x60
   12a70:	movw	r0, #49495	; 0xc157
   12a74:	movt	r0, #1
   12a78:	bl	10cc0 <printf@plt>
   12a7c:	movw	r0, #53580	; 0xd14c
   12a80:	movt	r0, #2
   12a84:	ldr	r0, [r0]
   12a88:	cmp	r0, #0
   12a8c:	beq	12b08 <__assert_fail@plt+0x1c20>
   12a90:	ldr	r0, [fp, #-12]
   12a94:	ldr	r1, [r0, #20]
   12a98:	ldr	r0, [fp, #-16]
   12a9c:	ldr	r2, [r0, #64]	; 0x40
   12aa0:	ldr	r0, [r0, #68]	; 0x44
   12aa4:	movw	r3, #53660	; 0xd19c
   12aa8:	movt	r3, #2
   12aac:	ldr	r3, [r3]
   12ab0:	asr	ip, r3, #31
   12ab4:	sub	lr, r3, #1
   12ab8:	adds	r2, r2, lr
   12abc:	adc	r0, r0, lr, asr #31
   12ac0:	str	r0, [sp, #40]	; 0x28
   12ac4:	mov	r0, r2
   12ac8:	ldr	r2, [sp, #40]	; 0x28
   12acc:	str	r1, [sp, #36]	; 0x24
   12ad0:	mov	r1, r2
   12ad4:	mov	r2, r3
   12ad8:	mov	r3, ip
   12adc:	bl	1bdcc <__assert_fail@plt+0xaee4>
   12ae0:	movw	r2, #49540	; 0xc184
   12ae4:	movt	r2, #1
   12ae8:	str	r0, [sp, #32]
   12aec:	mov	r0, r2
   12af0:	ldr	r2, [sp, #36]	; 0x24
   12af4:	str	r1, [sp, #28]
   12af8:	mov	r1, r2
   12afc:	ldr	r2, [sp, #32]
   12b00:	ldr	r3, [sp, #28]
   12b04:	bl	10cc0 <printf@plt>
   12b08:	add	r1, sp, #44	; 0x2c
   12b0c:	ldr	r0, [fp, #-16]
   12b10:	ldr	r0, [r0, #16]
   12b14:	bl	13d08 <__assert_fail@plt+0x2e20>
   12b18:	add	r1, sp, #44	; 0x2c
   12b1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b20:	ldr	r0, [r0, #20]
   12b24:	str	r0, [fp, #-24]	; 0xffffffe8
   12b28:	ldr	r0, [fp, #-12]
   12b2c:	ldr	r2, [r0, #36]	; 0x24
   12b30:	ldr	r0, [fp, #-16]
   12b34:	ldr	r3, [r0, #20]
   12b38:	ldr	r0, [fp, #-12]
   12b3c:	ldr	r0, [r0, #44]	; 0x2c
   12b40:	ldr	ip, [fp, #-24]	; 0xffffffe8
   12b44:	ldr	ip, [ip]
   12b48:	ldr	lr, [fp, #-12]
   12b4c:	ldr	lr, [lr, #28]
   12b50:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12b54:	ldr	r4, [r4, #4]
   12b58:	movw	r5, #49501	; 0xc15d
   12b5c:	movt	r5, #1
   12b60:	str	r0, [sp, #24]
   12b64:	mov	r0, r5
   12b68:	ldr	r5, [sp, #24]
   12b6c:	str	r5, [sp]
   12b70:	str	ip, [sp, #4]
   12b74:	str	lr, [sp, #8]
   12b78:	str	r4, [sp, #12]
   12b7c:	bl	10cc0 <printf@plt>
   12b80:	movw	r1, #53596	; 0xd15c
   12b84:	movt	r1, #2
   12b88:	ldr	r1, [r1]
   12b8c:	cmp	r1, #0
   12b90:	beq	12bb0 <__assert_fail@plt+0x1cc8>
   12b94:	ldr	r0, [fp, #-12]
   12b98:	ldr	r1, [r0, #24]
   12b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ba0:	ldr	r2, [r0, #8]
   12ba4:	movw	r0, #49521	; 0xc171
   12ba8:	movt	r0, #1
   12bac:	bl	10cc0 <printf@plt>
   12bb0:	ldr	r0, [fp, #-16]
   12bb4:	ldr	r0, [r0, #16]
   12bb8:	and	r0, r0, #61440	; 0xf000
   12bbc:	cmp	r0, #8192	; 0x2000
   12bc0:	beq	12bd8 <__assert_fail@plt+0x1cf0>
   12bc4:	ldr	r0, [fp, #-16]
   12bc8:	ldr	r0, [r0, #16]
   12bcc:	and	r0, r0, #61440	; 0xf000
   12bd0:	cmp	r0, #24576	; 0x6000
   12bd4:	bne	12c04 <__assert_fail@plt+0x1d1c>
   12bd8:	ldr	r0, [fp, #-16]
   12bdc:	ldr	r0, [r0, #32]
   12be0:	ubfx	r1, r0, #8, #8
   12be4:	uxtb	r0, r0
   12be8:	movw	r2, #49527	; 0xc177
   12bec:	movt	r2, #1
   12bf0:	str	r0, [sp, #20]
   12bf4:	mov	r0, r2
   12bf8:	ldr	r2, [sp, #20]
   12bfc:	bl	10cc0 <printf@plt>
   12c00:	b	12c84 <__assert_fail@plt+0x1d9c>
   12c04:	ldr	r0, [fp, #-12]
   12c08:	ldr	r0, [r0, #8]
   12c0c:	cmp	r0, #0
   12c10:	beq	12c60 <__assert_fail@plt+0x1d78>
   12c14:	ldr	r0, [fp, #-12]
   12c18:	ldr	r0, [r0, #40]	; 0x28
   12c1c:	rsb	r1, r0, #8
   12c20:	ldr	r2, [fp, #-16]
   12c24:	ldr	r3, [r2, #48]	; 0x30
   12c28:	ldr	r2, [r2, #52]	; 0x34
   12c2c:	mov	ip, sp
   12c30:	str	r2, [ip, #4]
   12c34:	str	r3, [ip]
   12c38:	movw	r2, #49537	; 0xc181
   12c3c:	movt	r2, #1
   12c40:	movw	r3, #49561	; 0xc199
   12c44:	movt	r3, #1
   12c48:	str	r0, [sp, #16]
   12c4c:	mov	r0, r2
   12c50:	mov	r2, r3
   12c54:	ldr	r3, [sp, #16]
   12c58:	bl	10cc0 <printf@plt>
   12c5c:	b	12c80 <__assert_fail@plt+0x1d98>
   12c60:	ldr	r0, [fp, #-12]
   12c64:	ldr	r1, [r0, #40]	; 0x28
   12c68:	ldr	r0, [fp, #-16]
   12c6c:	ldr	r2, [r0, #48]	; 0x30
   12c70:	ldr	r3, [r0, #52]	; 0x34
   12c74:	movw	r0, #49540	; 0xc184
   12c78:	movt	r0, #1
   12c7c:	bl	10cc0 <printf@plt>
   12c80:	b	12c84 <__assert_fail@plt+0x1d9c>
   12c84:	movw	r0, #53612	; 0xd16c
   12c88:	movt	r0, #2
   12c8c:	ldr	r0, [r0]
   12c90:	cmp	r0, #0
   12c94:	beq	12ca8 <__assert_fail@plt+0x1dc0>
   12c98:	ldr	r0, [fp, #-16]
   12c9c:	ldr	r0, [r0, #72]	; 0x48
   12ca0:	bl	12d6c <__assert_fail@plt+0x1e84>
   12ca4:	b	12cdc <__assert_fail@plt+0x1df4>
   12ca8:	movw	r0, #53656	; 0xd198
   12cac:	movt	r0, #2
   12cb0:	ldr	r0, [r0]
   12cb4:	cmp	r0, #0
   12cb8:	beq	12ccc <__assert_fail@plt+0x1de4>
   12cbc:	ldr	r0, [fp, #-16]
   12cc0:	ldr	r0, [r0, #88]	; 0x58
   12cc4:	bl	12d6c <__assert_fail@plt+0x1e84>
   12cc8:	b	12cd8 <__assert_fail@plt+0x1df0>
   12ccc:	ldr	r0, [fp, #-16]
   12cd0:	ldr	r0, [r0, #80]	; 0x50
   12cd4:	bl	12d6c <__assert_fail@plt+0x1e84>
   12cd8:	b	12cdc <__assert_fail@plt+0x1df4>
   12cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ce0:	add	r0, r0, #168	; 0xa8
   12ce4:	bl	137e4 <__assert_fail@plt+0x28fc>
   12ce8:	movw	r1, #53620	; 0xd174
   12cec:	movt	r1, #2
   12cf0:	ldr	r1, [r1]
   12cf4:	cmp	r1, #0
   12cf8:	bne	12d24 <__assert_fail@plt+0x1e3c>
   12cfc:	movw	r0, #53636	; 0xd184
   12d00:	movt	r0, #2
   12d04:	ldr	r0, [r0]
   12d08:	cmp	r0, #0
   12d0c:	beq	12d30 <__assert_fail@plt+0x1e48>
   12d10:	ldr	r0, [fp, #-16]
   12d14:	ldr	r0, [r0, #16]
   12d18:	and	r0, r0, #61440	; 0xf000
   12d1c:	cmp	r0, #16384	; 0x4000
   12d20:	bne	12d30 <__assert_fail@plt+0x1e48>
   12d24:	ldr	r0, [fp, #-16]
   12d28:	ldr	r0, [r0, #16]
   12d2c:	bl	12ed0 <__assert_fail@plt+0x1fe8>
   12d30:	ldr	r0, [fp, #-16]
   12d34:	ldr	r0, [r0, #16]
   12d38:	and	r0, r0, #61440	; 0xf000
   12d3c:	cmp	r0, #40960	; 0xa000
   12d40:	bne	12d4c <__assert_fail@plt+0x1e64>
   12d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d48:	bl	12fb0 <__assert_fail@plt+0x20c8>
   12d4c:	movw	r0, #10
   12d50:	bl	10e10 <putchar@plt>
   12d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d58:	ldr	r0, [r0, #8]
   12d5c:	str	r0, [fp, #-20]	; 0xffffffec
   12d60:	b	12a1c <__assert_fail@plt+0x1b34>
   12d64:	sub	sp, fp, #8
   12d68:	pop	{r4, r5, fp, pc}
   12d6c:	push	{fp, lr}
   12d70:	mov	fp, sp
   12d74:	sub	sp, sp, #16
   12d78:	str	r0, [fp, #-4]
   12d7c:	sub	r0, fp, #4
   12d80:	bl	10d08 <ctime@plt>
   12d84:	str	r0, [sp, #4]
   12d88:	movw	r0, #4
   12d8c:	str	r0, [sp, #8]
   12d90:	ldr	r0, [sp, #8]
   12d94:	cmp	r0, #11
   12d98:	bge	12dc0 <__assert_fail@plt+0x1ed8>
   12d9c:	ldr	r0, [sp, #4]
   12da0:	ldr	r1, [sp, #8]
   12da4:	add	r0, r0, r1
   12da8:	ldrb	r0, [r0]
   12dac:	bl	10e10 <putchar@plt>
   12db0:	ldr	r0, [sp, #8]
   12db4:	add	r0, r0, #1
   12db8:	str	r0, [sp, #8]
   12dbc:	b	12d90 <__assert_fail@plt+0x1ea8>
   12dc0:	movw	r0, #53640	; 0xd188
   12dc4:	movt	r0, #2
   12dc8:	ldr	r0, [r0]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e10 <__assert_fail@plt+0x1f28>
   12dd4:	movw	r0, #11
   12dd8:	str	r0, [sp, #8]
   12ddc:	ldr	r0, [sp, #8]
   12de0:	cmp	r0, #24
   12de4:	bge	12e0c <__assert_fail@plt+0x1f24>
   12de8:	ldr	r0, [sp, #4]
   12dec:	ldr	r1, [sp, #8]
   12df0:	add	r0, r0, r1
   12df4:	ldrb	r0, [r0]
   12df8:	bl	10e10 <putchar@plt>
   12dfc:	ldr	r0, [sp, #8]
   12e00:	add	r0, r0, #1
   12e04:	str	r0, [sp, #8]
   12e08:	b	12ddc <__assert_fail@plt+0x1ef4>
   12e0c:	b	12ebc <__assert_fail@plt+0x1fd4>
   12e10:	ldr	r0, [pc, #180]	; 12ecc <__assert_fail@plt+0x1fe4>
   12e14:	ldr	r1, [fp, #-4]
   12e18:	add	r0, r1, r0
   12e1c:	movw	r1, #0
   12e20:	str	r0, [sp]
   12e24:	mov	r0, r1
   12e28:	bl	10cfc <time@plt>
   12e2c:	ldr	r1, [sp]
   12e30:	cmp	r1, r0
   12e34:	ble	12e74 <__assert_fail@plt+0x1f8c>
   12e38:	movw	r0, #11
   12e3c:	str	r0, [sp, #8]
   12e40:	ldr	r0, [sp, #8]
   12e44:	cmp	r0, #16
   12e48:	bge	12e70 <__assert_fail@plt+0x1f88>
   12e4c:	ldr	r0, [sp, #4]
   12e50:	ldr	r1, [sp, #8]
   12e54:	add	r0, r0, r1
   12e58:	ldrb	r0, [r0]
   12e5c:	bl	10e10 <putchar@plt>
   12e60:	ldr	r0, [sp, #8]
   12e64:	add	r0, r0, #1
   12e68:	str	r0, [sp, #8]
   12e6c:	b	12e40 <__assert_fail@plt+0x1f58>
   12e70:	b	12eb8 <__assert_fail@plt+0x1fd0>
   12e74:	movw	r0, #32
   12e78:	bl	10e10 <putchar@plt>
   12e7c:	movw	r1, #20
   12e80:	str	r1, [sp, #8]
   12e84:	ldr	r0, [sp, #8]
   12e88:	cmp	r0, #24
   12e8c:	bge	12eb4 <__assert_fail@plt+0x1fcc>
   12e90:	ldr	r0, [sp, #4]
   12e94:	ldr	r1, [sp, #8]
   12e98:	add	r0, r0, r1
   12e9c:	ldrb	r0, [r0]
   12ea0:	bl	10e10 <putchar@plt>
   12ea4:	ldr	r0, [sp, #8]
   12ea8:	add	r0, r0, #1
   12eac:	str	r0, [sp, #8]
   12eb0:	b	12e84 <__assert_fail@plt+0x1f9c>
   12eb4:	b	12eb8 <__assert_fail@plt+0x1fd0>
   12eb8:	b	12ebc <__assert_fail@plt+0x1fd4>
   12ebc:	movw	r0, #32
   12ec0:	bl	10e10 <putchar@plt>
   12ec4:	mov	sp, fp
   12ec8:	pop	{fp, pc}
   12ecc:	rsceq	pc, pc, r0, lsl #2
   12ed0:	push	{fp, lr}
   12ed4:	mov	fp, sp
   12ed8:	sub	sp, sp, #16
   12edc:	str	r0, [sp, #8]
   12ee0:	ldr	r0, [sp, #8]
   12ee4:	and	r0, r0, #61440	; 0xf000
   12ee8:	cmp	r0, #4096	; 0x1000
   12eec:	str	r0, [sp, #4]
   12ef0:	beq	12f3c <__assert_fail@plt+0x2054>
   12ef4:	b	12ef8 <__assert_fail@plt+0x2010>
   12ef8:	ldr	r0, [sp, #4]
   12efc:	cmp	r0, #16384	; 0x4000
   12f00:	beq	12f28 <__assert_fail@plt+0x2040>
   12f04:	b	12f08 <__assert_fail@plt+0x2020>
   12f08:	ldr	r0, [sp, #4]
   12f0c:	cmp	r0, #40960	; 0xa000
   12f10:	beq	12f50 <__assert_fail@plt+0x2068>
   12f14:	b	12f18 <__assert_fail@plt+0x2030>
   12f18:	ldr	r0, [sp, #4]
   12f1c:	cmp	r0, #49152	; 0xc000
   12f20:	beq	12f64 <__assert_fail@plt+0x207c>
   12f24:	b	12f78 <__assert_fail@plt+0x2090>
   12f28:	movw	r0, #47	; 0x2f
   12f2c:	bl	10e10 <putchar@plt>
   12f30:	movw	r1, #1
   12f34:	str	r1, [fp, #-4]
   12f38:	b	12fa4 <__assert_fail@plt+0x20bc>
   12f3c:	movw	r0, #124	; 0x7c
   12f40:	bl	10e10 <putchar@plt>
   12f44:	movw	r1, #1
   12f48:	str	r1, [fp, #-4]
   12f4c:	b	12fa4 <__assert_fail@plt+0x20bc>
   12f50:	movw	r0, #64	; 0x40
   12f54:	bl	10e10 <putchar@plt>
   12f58:	movw	r1, #1
   12f5c:	str	r1, [fp, #-4]
   12f60:	b	12fa4 <__assert_fail@plt+0x20bc>
   12f64:	movw	r0, #61	; 0x3d
   12f68:	bl	10e10 <putchar@plt>
   12f6c:	movw	r1, #1
   12f70:	str	r1, [fp, #-4]
   12f74:	b	12fa4 <__assert_fail@plt+0x20bc>
   12f78:	ldr	r0, [sp, #8]
   12f7c:	and	r0, r0, #73	; 0x49
   12f80:	cmp	r0, #0
   12f84:	beq	12f9c <__assert_fail@plt+0x20b4>
   12f88:	movw	r0, #42	; 0x2a
   12f8c:	bl	10e10 <putchar@plt>
   12f90:	movw	r1, #1
   12f94:	str	r1, [fp, #-4]
   12f98:	b	12fa4 <__assert_fail@plt+0x20bc>
   12f9c:	movw	r0, #0
   12fa0:	str	r0, [fp, #-4]
   12fa4:	ldr	r0, [fp, #-4]
   12fa8:	mov	sp, fp
   12fac:	pop	{fp, pc}
   12fb0:	push	{r4, r5, fp, lr}
   12fb4:	add	fp, sp, #8
   12fb8:	sub	sp, sp, #32
   12fbc:	sub	sp, sp, #8192	; 0x2000
   12fc0:	str	r0, [fp, #-12]
   12fc4:	ldr	r0, [fp, #-12]
   12fc8:	ldr	r0, [r0, #48]	; 0x30
   12fcc:	cmp	r0, #0
   12fd0:	bne	12ff8 <__assert_fail@plt+0x2110>
   12fd4:	sub	lr, fp, #4096	; 0x1000
   12fd8:	sub	r0, lr, #16
   12fdc:	ldr	r1, [fp, #-12]
   12fe0:	add	r3, r1, #168	; 0xa8
   12fe4:	movw	r1, #4096	; 0x1000
   12fe8:	movw	r2, #49481	; 0xc149
   12fec:	movt	r2, #1
   12ff0:	bl	10df8 <snprintf@plt>
   12ff4:	b	13034 <__assert_fail@plt+0x214c>
   12ff8:	sub	lr, fp, #4096	; 0x1000
   12ffc:	sub	r0, lr, #16
   13000:	ldr	r1, [fp, #-12]
   13004:	ldr	r1, [r1, #4]
   13008:	ldr	r3, [r1, #24]
   1300c:	ldr	r1, [fp, #-12]
   13010:	add	r1, r1, #168	; 0xa8
   13014:	movw	r2, #4096	; 0x1000
   13018:	str	r1, [sp, #20]
   1301c:	mov	r1, r2
   13020:	movw	r2, #49574	; 0xc1a6
   13024:	movt	r2, #1
   13028:	ldr	ip, [sp, #20]
   1302c:	str	ip, [sp]
   13030:	bl	10df8 <snprintf@plt>
   13034:	add	r1, sp, #24
   13038:	sub	lr, fp, #4096	; 0x1000
   1303c:	sub	r0, lr, #16
   13040:	movw	r2, #4095	; 0xfff
   13044:	bl	10d44 <readlink@plt>
   13048:	str	r0, [fp, #-16]
   1304c:	cmn	r0, #1
   13050:	bne	130a0 <__assert_fail@plt+0x21b8>
   13054:	sub	lr, fp, #4096	; 0x1000
   13058:	sub	r2, lr, #16
   1305c:	movw	r0, #53512	; 0xd108
   13060:	movt	r0, #2
   13064:	ldr	r0, [r0]
   13068:	str	r2, [sp, #16]
   1306c:	str	r0, [sp, #12]
   13070:	bl	10dec <__errno_location@plt>
   13074:	ldr	r0, [r0]
   13078:	bl	10d98 <strerror@plt>
   1307c:	ldr	r1, [sp, #12]
   13080:	str	r0, [sp, #8]
   13084:	mov	r0, r1
   13088:	movw	r1, #49580	; 0xc1ac
   1308c:	movt	r1, #1
   13090:	ldr	r2, [sp, #16]
   13094:	ldr	r3, [sp, #8]
   13098:	bl	10de0 <fprintf@plt>
   1309c:	b	130d0 <__assert_fail@plt+0x21e8>
   130a0:	ldr	r0, [fp, #-16]
   130a4:	add	r1, sp, #24
   130a8:	add	r0, r1, r0
   130ac:	movw	r1, #0
   130b0:	strb	r1, [r0]
   130b4:	movw	r0, #49593	; 0xc1b9
   130b8:	movt	r0, #1
   130bc:	bl	10cc0 <printf@plt>
   130c0:	add	r1, sp, #24
   130c4:	str	r0, [sp, #4]
   130c8:	mov	r0, r1
   130cc:	bl	137e4 <__assert_fail@plt+0x28fc>
   130d0:	sub	sp, fp, #8
   130d4:	pop	{r4, r5, fp, pc}
   130d8:	push	{fp, lr}
   130dc:	mov	fp, sp
   130e0:	sub	sp, sp, #56	; 0x38
   130e4:	str	r0, [fp, #-4]
   130e8:	ldr	r0, [fp, #-4]
   130ec:	add	r1, sp, #24
   130f0:	bl	133a8 <__assert_fail@plt+0x24c0>
   130f4:	str	r0, [fp, #-24]	; 0xffffffe8
   130f8:	cmp	r0, #0
   130fc:	bne	13104 <__assert_fail@plt+0x221c>
   13100:	b	133a0 <__assert_fail@plt+0x24b8>
   13104:	ldr	r0, [fp, #-4]
   13108:	ldr	r0, [r0, #12]
   1310c:	movw	r1, #53496	; 0xd0f8
   13110:	movt	r1, #2
   13114:	ldr	r1, [r1]
   13118:	cmp	r0, r1
   1311c:	ble	131bc <__assert_fail@plt+0x22d4>
   13120:	movw	r0, #53536	; 0xd120
   13124:	movt	r0, #2
   13128:	ldr	r0, [r0]
   1312c:	ldr	r1, [fp, #-4]
   13130:	ldr	r1, [r1, #12]
   13134:	lsl	r1, r1, #2
   13138:	bl	1b3d0 <__assert_fail@plt+0xa4e8>
   1313c:	str	r0, [sp, #12]
   13140:	movw	r1, #0
   13144:	cmp	r0, r1
   13148:	bne	13198 <__assert_fail@plt+0x22b0>
   1314c:	movw	r0, #53512	; 0xd108
   13150:	movt	r0, #2
   13154:	ldr	r0, [r0]
   13158:	str	r0, [sp, #8]
   1315c:	bl	10dec <__errno_location@plt>
   13160:	ldr	r0, [r0]
   13164:	bl	10d98 <strerror@plt>
   13168:	ldr	r1, [sp, #8]
   1316c:	str	r0, [sp, #4]
   13170:	mov	r0, r1
   13174:	movw	r1, #49547	; 0xc18b
   13178:	movt	r1, #1
   1317c:	ldr	r2, [sp, #4]
   13180:	bl	10de0 <fprintf@plt>
   13184:	ldr	r1, [fp, #-4]
   13188:	str	r0, [sp]
   1318c:	mov	r0, r1
   13190:	bl	127a4 <__assert_fail@plt+0x18bc>
   13194:	b	133a0 <__assert_fail@plt+0x24b8>
   13198:	ldr	r0, [fp, #-4]
   1319c:	ldr	r0, [r0, #12]
   131a0:	movw	r1, #53496	; 0xd0f8
   131a4:	movt	r1, #2
   131a8:	str	r0, [r1]
   131ac:	ldr	r0, [sp, #12]
   131b0:	movw	r1, #53536	; 0xd120
   131b4:	movt	r1, #2
   131b8:	str	r0, [r1]
   131bc:	ldr	r0, [fp, #-4]
   131c0:	ldr	r0, [r0]
   131c4:	str	r0, [fp, #-8]
   131c8:	movw	r0, #0
   131cc:	str	r0, [sp, #28]
   131d0:	ldr	r0, [fp, #-8]
   131d4:	movw	r1, #0
   131d8:	cmp	r0, r1
   131dc:	beq	13228 <__assert_fail@plt+0x2340>
   131e0:	ldr	r0, [fp, #-8]
   131e4:	ldr	r0, [r0, #16]
   131e8:	cmp	r0, #1
   131ec:	beq	13214 <__assert_fail@plt+0x232c>
   131f0:	ldr	r0, [fp, #-8]
   131f4:	movw	r1, #53536	; 0xd120
   131f8:	movt	r1, #2
   131fc:	ldr	r1, [r1]
   13200:	ldr	r2, [sp, #28]
   13204:	add	r3, r2, #1
   13208:	str	r3, [sp, #28]
   1320c:	add	r1, r1, r2, lsl #2
   13210:	str	r0, [r1]
   13214:	b	13218 <__assert_fail@plt+0x2330>
   13218:	ldr	r0, [fp, #-8]
   1321c:	ldr	r0, [r0, #8]
   13220:	str	r0, [fp, #-8]
   13224:	b	131d0 <__assert_fail@plt+0x22e8>
   13228:	ldr	r0, [sp, #28]
   1322c:	ldr	r1, [sp, #24]
   13230:	sdiv	r0, r0, r1
   13234:	str	r0, [sp, #20]
   13238:	ldr	r0, [sp, #28]
   1323c:	ldr	r1, [sp, #24]
   13240:	sdiv	r2, r0, r1
   13244:	mls	r0, r2, r1, r0
   13248:	cmp	r0, #0
   1324c:	beq	1325c <__assert_fail@plt+0x2374>
   13250:	ldr	r0, [sp, #20]
   13254:	add	r0, r0, #1
   13258:	str	r0, [sp, #20]
   1325c:	ldr	r0, [fp, #-4]
   13260:	ldr	r0, [r0]
   13264:	ldr	r0, [r0, #48]	; 0x30
   13268:	cmp	r0, #0
   1326c:	beq	132c8 <__assert_fail@plt+0x23e0>
   13270:	movw	r0, #53632	; 0xd180
   13274:	movt	r0, #2
   13278:	ldr	r0, [r0]
   1327c:	cmp	r0, #0
   13280:	bne	13298 <__assert_fail@plt+0x23b0>
   13284:	movw	r0, #53580	; 0xd14c
   13288:	movt	r0, #2
   1328c:	ldr	r0, [r0]
   13290:	cmp	r0, #0
   13294:	beq	132c8 <__assert_fail@plt+0x23e0>
   13298:	ldr	r0, [fp, #-4]
   1329c:	ldr	r0, [r0, #4]
   132a0:	movw	r1, #53660	; 0xd19c
   132a4:	movt	r1, #2
   132a8:	ldr	r2, [r1]
   132ac:	sub	r2, r2, #1
   132b0:	add	r0, r0, r2
   132b4:	ldr	r1, [r1]
   132b8:	udiv	r1, r0, r1
   132bc:	movw	r0, #49484	; 0xc14c
   132c0:	movt	r0, #1
   132c4:	bl	10cc0 <printf@plt>
   132c8:	movw	r0, #0
   132cc:	str	r0, [sp, #16]
   132d0:	ldr	r0, [sp, #16]
   132d4:	ldr	r1, [sp, #20]
   132d8:	cmp	r0, r1
   132dc:	bge	133a0 <__assert_fail@plt+0x24b8>
   132e0:	ldr	r0, [sp, #16]
   132e4:	str	r0, [fp, #-12]
   132e8:	movw	r0, #0
   132ec:	str	r0, [fp, #-20]	; 0xffffffec
   132f0:	movw	r0, #53536	; 0xd120
   132f4:	movt	r0, #2
   132f8:	ldr	r0, [r0]
   132fc:	ldr	r1, [fp, #-12]
   13300:	add	r0, r0, r1, lsl #2
   13304:	ldr	r0, [r0]
   13308:	ldr	r1, [fp, #-4]
   1330c:	ldr	r1, [r1, #32]
   13310:	ldr	r2, [fp, #-4]
   13314:	ldr	r2, [r2, #20]
   13318:	bl	12824 <__assert_fail@plt+0x193c>
   1331c:	str	r0, [fp, #-16]
   13320:	ldr	r0, [sp, #20]
   13324:	ldr	r1, [fp, #-12]
   13328:	add	r0, r1, r0
   1332c:	str	r0, [fp, #-12]
   13330:	ldr	r1, [sp, #28]
   13334:	cmp	r0, r1
   13338:	blt	13340 <__assert_fail@plt+0x2458>
   1333c:	b	13388 <__assert_fail@plt+0x24a0>
   13340:	ldr	r0, [fp, #-20]	; 0xffffffec
   13344:	add	r0, r0, #1
   13348:	str	r0, [fp, #-20]	; 0xffffffec
   1334c:	ldr	r1, [sp, #24]
   13350:	cmp	r0, r1
   13354:	bne	1335c <__assert_fail@plt+0x2474>
   13358:	b	13388 <__assert_fail@plt+0x24a0>
   1335c:	b	13360 <__assert_fail@plt+0x2478>
   13360:	ldr	r0, [fp, #-16]
   13364:	add	r1, r0, #1
   13368:	str	r1, [fp, #-16]
   1336c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13370:	cmp	r0, r1
   13374:	bge	13384 <__assert_fail@plt+0x249c>
   13378:	movw	r0, #32
   1337c:	bl	10e10 <putchar@plt>
   13380:	b	13360 <__assert_fail@plt+0x2478>
   13384:	b	132f0 <__assert_fail@plt+0x2408>
   13388:	movw	r0, #10
   1338c:	bl	10e10 <putchar@plt>
   13390:	ldr	r0, [sp, #16]
   13394:	add	r0, r0, #1
   13398:	str	r0, [sp, #16]
   1339c:	b	132d0 <__assert_fail@plt+0x23e8>
   133a0:	mov	sp, fp
   133a4:	pop	{fp, pc}
   133a8:	push	{fp, lr}
   133ac:	mov	fp, sp
   133b0:	sub	sp, sp, #24
   133b4:	str	r0, [fp, #-8]
   133b8:	str	r1, [sp, #12]
   133bc:	ldr	r0, [fp, #-8]
   133c0:	ldr	r0, [r0, #16]
   133c4:	str	r0, [sp, #8]
   133c8:	movw	r0, #53604	; 0xd164
   133cc:	movt	r0, #2
   133d0:	ldr	r0, [r0]
   133d4:	cmp	r0, #0
   133d8:	beq	133f4 <__assert_fail@plt+0x250c>
   133dc:	ldr	r0, [fp, #-8]
   133e0:	ldr	r0, [r0, #32]
   133e4:	add	r0, r0, #1
   133e8:	ldr	r1, [sp, #8]
   133ec:	add	r0, r1, r0
   133f0:	str	r0, [sp, #8]
   133f4:	movw	r0, #53580	; 0xd14c
   133f8:	movt	r0, #2
   133fc:	ldr	r0, [r0]
   13400:	cmp	r0, #0
   13404:	beq	13420 <__assert_fail@plt+0x2538>
   13408:	ldr	r0, [fp, #-8]
   1340c:	ldr	r0, [r0, #20]
   13410:	add	r0, r0, #1
   13414:	ldr	r1, [sp, #8]
   13418:	add	r0, r1, r0
   1341c:	str	r0, [sp, #8]
   13420:	movw	r0, #53620	; 0xd174
   13424:	movt	r0, #2
   13428:	ldr	r0, [r0]
   1342c:	cmp	r0, #0
   13430:	bne	13448 <__assert_fail@plt+0x2560>
   13434:	movw	r0, #53636	; 0xd184
   13438:	movt	r0, #2
   1343c:	ldr	r0, [r0]
   13440:	cmp	r0, #0
   13444:	beq	13454 <__assert_fail@plt+0x256c>
   13448:	ldr	r0, [sp, #8]
   1344c:	add	r0, r0, #1
   13450:	str	r0, [sp, #8]
   13454:	ldr	r0, [sp, #8]
   13458:	add	r0, r0, #1
   1345c:	str	r0, [sp, #8]
   13460:	movw	r0, #53480	; 0xd0e8
   13464:	movt	r0, #2
   13468:	ldr	r0, [r0]
   1346c:	add	r0, r0, #1
   13470:	str	r0, [sp, #4]
   13474:	ldr	r0, [sp, #4]
   13478:	ldr	r1, [sp, #8]
   1347c:	lsl	r1, r1, #1
   13480:	cmp	r0, r1
   13484:	bge	1349c <__assert_fail@plt+0x25b4>
   13488:	ldr	r0, [fp, #-8]
   1348c:	bl	127a4 <__assert_fail@plt+0x18bc>
   13490:	movw	r0, #0
   13494:	str	r0, [fp, #-4]
   13498:	b	134c4 <__assert_fail@plt+0x25dc>
   1349c:	ldr	r0, [sp, #4]
   134a0:	ldr	r1, [sp, #8]
   134a4:	sdiv	r0, r0, r1
   134a8:	ldr	r1, [sp, #12]
   134ac:	str	r0, [r1]
   134b0:	ldr	r0, [sp, #4]
   134b4:	ldr	r1, [sp, #12]
   134b8:	ldr	r1, [r1]
   134bc:	sdiv	r0, r0, r1
   134c0:	str	r0, [fp, #-4]
   134c4:	ldr	r0, [fp, #-4]
   134c8:	mov	sp, fp
   134cc:	pop	{fp, pc}
   134d0:	push	{fp, lr}
   134d4:	mov	fp, sp
   134d8:	sub	sp, sp, #32
   134dc:	str	r0, [fp, #-4]
   134e0:	ldr	r0, [fp, #-4]
   134e4:	add	r1, sp, #8
   134e8:	bl	133a8 <__assert_fail@plt+0x24c0>
   134ec:	str	r0, [sp, #12]
   134f0:	cmp	r0, #0
   134f4:	bne	134fc <__assert_fail@plt+0x2614>
   134f8:	b	13654 <__assert_fail@plt+0x276c>
   134fc:	ldr	r0, [fp, #-4]
   13500:	ldr	r0, [r0]
   13504:	ldr	r0, [r0, #48]	; 0x30
   13508:	cmp	r0, #0
   1350c:	beq	1357c <__assert_fail@plt+0x2694>
   13510:	movw	r0, #53632	; 0xd180
   13514:	movt	r0, #2
   13518:	ldr	r0, [r0]
   1351c:	cmp	r0, #0
   13520:	bne	13538 <__assert_fail@plt+0x2650>
   13524:	movw	r0, #53580	; 0xd14c
   13528:	movt	r0, #2
   1352c:	ldr	r0, [r0]
   13530:	cmp	r0, #0
   13534:	beq	1357c <__assert_fail@plt+0x2694>
   13538:	ldr	r0, [fp, #-4]
   1353c:	ldr	r0, [r0, #4]
   13540:	movw	r1, #53660	; 0xd19c
   13544:	movt	r1, #2
   13548:	ldr	r1, [r1]
   1354c:	add	r0, r1, r0
   13550:	sub	r0, r0, #1
   13554:	udiv	r0, r0, r1
   13558:	mov	r1, r0
   1355c:	mov	r3, #0
   13560:	movw	r2, #49562	; 0xc19a
   13564:	movt	r2, #1
   13568:	str	r0, [sp, #4]
   1356c:	mov	r0, r2
   13570:	ldr	r2, [sp, #4]
   13574:	str	r1, [sp]
   13578:	bl	10cc0 <printf@plt>
   1357c:	movw	r0, #0
   13580:	str	r0, [sp, #16]
   13584:	ldr	r0, [fp, #-4]
   13588:	ldr	r0, [r0]
   1358c:	str	r0, [fp, #-8]
   13590:	ldr	r0, [fp, #-8]
   13594:	movw	r1, #0
   13598:	cmp	r0, r1
   1359c:	beq	1364c <__assert_fail@plt+0x2764>
   135a0:	ldr	r0, [fp, #-8]
   135a4:	ldr	r0, [r0, #16]
   135a8:	cmp	r0, #1
   135ac:	bne	135b4 <__assert_fail@plt+0x26cc>
   135b0:	b	1363c <__assert_fail@plt+0x2754>
   135b4:	ldr	r0, [sp, #16]
   135b8:	ldr	r1, [sp, #8]
   135bc:	cmp	r0, r1
   135c0:	blt	135d4 <__assert_fail@plt+0x26ec>
   135c4:	movw	r0, #0
   135c8:	str	r0, [sp, #16]
   135cc:	movw	r0, #10
   135d0:	bl	10e10 <putchar@plt>
   135d4:	ldr	r0, [fp, #-8]
   135d8:	ldr	r1, [fp, #-4]
   135dc:	ldr	r1, [r1, #32]
   135e0:	ldr	r2, [fp, #-4]
   135e4:	ldr	r2, [r2, #20]
   135e8:	bl	12824 <__assert_fail@plt+0x193c>
   135ec:	str	r0, [fp, #-12]
   135f0:	ldr	r0, [sp, #16]
   135f4:	add	r0, r0, #1
   135f8:	str	r0, [sp, #16]
   135fc:	ldr	r0, [sp, #16]
   13600:	ldr	r1, [sp, #8]
   13604:	cmp	r0, r1
   13608:	bge	13638 <__assert_fail@plt+0x2750>
   1360c:	b	13610 <__assert_fail@plt+0x2728>
   13610:	ldr	r0, [fp, #-12]
   13614:	add	r1, r0, #1
   13618:	str	r1, [fp, #-12]
   1361c:	ldr	r1, [sp, #12]
   13620:	cmp	r0, r1
   13624:	bge	13634 <__assert_fail@plt+0x274c>
   13628:	movw	r0, #32
   1362c:	bl	10e10 <putchar@plt>
   13630:	b	13610 <__assert_fail@plt+0x2728>
   13634:	b	13638 <__assert_fail@plt+0x2750>
   13638:	b	1363c <__assert_fail@plt+0x2754>
   1363c:	ldr	r0, [fp, #-8]
   13640:	ldr	r0, [r0, #8]
   13644:	str	r0, [fp, #-8]
   13648:	b	13590 <__assert_fail@plt+0x26a8>
   1364c:	movw	r0, #10
   13650:	bl	10e10 <putchar@plt>
   13654:	mov	sp, fp
   13658:	pop	{fp, pc}
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	sub	sp, sp, #16
   13668:	str	r0, [fp, #-4]
   1366c:	movw	r0, #0
   13670:	str	r0, [sp]
   13674:	movw	r0, #53604	; 0xd164
   13678:	movt	r0, #2
   1367c:	ldr	r0, [r0]
   13680:	cmp	r0, #0
   13684:	beq	136a0 <__assert_fail@plt+0x27b8>
   13688:	ldr	r0, [fp, #-4]
   1368c:	ldr	r0, [r0, #32]
   13690:	add	r0, r0, #1
   13694:	ldr	r1, [sp]
   13698:	add	r0, r1, r0
   1369c:	str	r0, [sp]
   136a0:	movw	r0, #53580	; 0xd14c
   136a4:	movt	r0, #2
   136a8:	ldr	r0, [r0]
   136ac:	cmp	r0, #0
   136b0:	beq	136cc <__assert_fail@plt+0x27e4>
   136b4:	ldr	r0, [fp, #-4]
   136b8:	ldr	r0, [r0, #20]
   136bc:	add	r0, r0, #1
   136c0:	ldr	r1, [sp]
   136c4:	add	r0, r1, r0
   136c8:	str	r0, [sp]
   136cc:	movw	r0, #53620	; 0xd174
   136d0:	movt	r0, #2
   136d4:	ldr	r0, [r0]
   136d8:	cmp	r0, #0
   136dc:	beq	136ec <__assert_fail@plt+0x2804>
   136e0:	ldr	r0, [sp]
   136e4:	add	r0, r0, #1
   136e8:	str	r0, [sp]
   136ec:	movw	r0, #0
   136f0:	str	r0, [sp, #4]
   136f4:	ldr	r0, [fp, #-4]
   136f8:	ldr	r0, [r0]
   136fc:	str	r0, [sp, #8]
   13700:	ldr	r0, [sp, #8]
   13704:	movw	r1, #0
   13708:	cmp	r0, r1
   1370c:	beq	137d4 <__assert_fail@plt+0x28ec>
   13710:	ldr	r0, [sp, #8]
   13714:	ldr	r0, [r0, #16]
   13718:	cmp	r0, #1
   1371c:	bne	13724 <__assert_fail@plt+0x283c>
   13720:	b	137c4 <__assert_fail@plt+0x28dc>
   13724:	ldr	r0, [sp, #4]
   13728:	cmp	r0, #0
   1372c:	ble	137a0 <__assert_fail@plt+0x28b8>
   13730:	movw	r0, #44	; 0x2c
   13734:	bl	10e10 <putchar@plt>
   13738:	ldr	r1, [sp, #4]
   1373c:	add	r1, r1, #1
   13740:	str	r1, [sp, #4]
   13744:	ldr	r1, [sp, #4]
   13748:	add	r1, r1, #1
   1374c:	ldr	r2, [sp]
   13750:	add	r1, r1, r2
   13754:	ldr	r2, [sp, #8]
   13758:	ldr	r2, [r2, #52]	; 0x34
   1375c:	add	r1, r1, r2
   13760:	movw	r2, #53480	; 0xd0e8
   13764:	movt	r2, #2
   13768:	ldr	r2, [r2]
   1376c:	cmp	r1, r2
   13770:	bcc	13788 <__assert_fail@plt+0x28a0>
   13774:	movw	r0, #10
   13778:	bl	10e10 <putchar@plt>
   1377c:	movw	r1, #0
   13780:	str	r1, [sp, #4]
   13784:	b	1379c <__assert_fail@plt+0x28b4>
   13788:	movw	r0, #32
   1378c:	bl	10e10 <putchar@plt>
   13790:	ldr	r1, [sp, #4]
   13794:	add	r1, r1, #1
   13798:	str	r1, [sp, #4]
   1379c:	b	137a0 <__assert_fail@plt+0x28b8>
   137a0:	ldr	r0, [sp, #8]
   137a4:	ldr	r1, [fp, #-4]
   137a8:	ldr	r1, [r1, #32]
   137ac:	ldr	r2, [fp, #-4]
   137b0:	ldr	r2, [r2, #20]
   137b4:	bl	12824 <__assert_fail@plt+0x193c>
   137b8:	ldr	r1, [sp, #4]
   137bc:	add	r0, r1, r0
   137c0:	str	r0, [sp, #4]
   137c4:	ldr	r0, [sp, #8]
   137c8:	ldr	r0, [r0, #8]
   137cc:	str	r0, [sp, #8]
   137d0:	b	13700 <__assert_fail@plt+0x2818>
   137d4:	movw	r0, #10
   137d8:	bl	10e10 <putchar@plt>
   137dc:	mov	sp, fp
   137e0:	pop	{fp, pc}
   137e4:	push	{fp, lr}
   137e8:	mov	fp, sp
   137ec:	sub	sp, sp, #16
   137f0:	str	r0, [fp, #-4]
   137f4:	movw	r0, #0
   137f8:	str	r0, [sp, #8]
   137fc:	ldr	r0, [fp, #-4]
   13800:	ldrsb	r0, [r0]
   13804:	cmp	r0, #0
   13808:	beq	13884 <__assert_fail@plt+0x299c>
   1380c:	bl	10db0 <__ctype_b_loc@plt>
   13810:	ldr	r0, [r0]
   13814:	ldr	r1, [fp, #-4]
   13818:	ldrb	r1, [r1]
   1381c:	mov	r2, r1
   13820:	add	r0, r0, r1, lsl #1
   13824:	ldrh	r0, [r0]
   13828:	and	r0, r0, #16384	; 0x4000
   1382c:	cmp	r0, #0
   13830:	bne	13854 <__assert_fail@plt+0x296c>
   13834:	movw	r0, #53672	; 0xd1a8
   13838:	movt	r0, #2
   1383c:	ldr	r0, [r0]
   13840:	cmp	r0, #0
   13844:	beq	13854 <__assert_fail@plt+0x296c>
   13848:	movw	r0, #63	; 0x3f
   1384c:	str	r0, [sp, #4]
   13850:	b	13860 <__assert_fail@plt+0x2978>
   13854:	ldr	r0, [fp, #-4]
   13858:	ldrb	r0, [r0]
   1385c:	str	r0, [sp, #4]
   13860:	ldr	r0, [sp, #4]
   13864:	bl	10e10 <putchar@plt>
   13868:	ldr	r0, [sp, #8]
   1386c:	add	r0, r0, #1
   13870:	str	r0, [sp, #8]
   13874:	ldr	r0, [fp, #-4]
   13878:	add	r0, r0, #1
   1387c:	str	r0, [fp, #-4]
   13880:	b	137fc <__assert_fail@plt+0x2914>
   13884:	ldr	r0, [sp, #8]
   13888:	mov	sp, fp
   1388c:	pop	{fp, pc}
   13890:	push	{fp, lr}
   13894:	mov	fp, sp
   13898:	sub	sp, sp, #8
   1389c:	movw	r0, #53512	; 0xd108
   138a0:	movt	r0, #2
   138a4:	ldr	r0, [r0]
   138a8:	movw	r1, #49598	; 0xc1be
   138ac:	movt	r1, #1
   138b0:	bl	10de0 <fprintf@plt>
   138b4:	movw	r1, #1
   138b8:	str	r0, [sp, #4]
   138bc:	mov	r0, r1
   138c0:	mov	sp, fp
   138c4:	pop	{fp, pc}
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	sub	sp, sp, #8
   138d4:	str	r0, [sp, #4]
   138d8:	str	r1, [sp]
   138dc:	ldr	r0, [sp, #4]
   138e0:	add	r0, r0, #168	; 0xa8
   138e4:	ldr	r1, [sp]
   138e8:	add	r1, r1, #168	; 0xa8
   138ec:	bl	10ca8 <strcmp@plt>
   138f0:	mov	sp, fp
   138f4:	pop	{fp, pc}
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	sub	sp, sp, #8
   13904:	str	r0, [sp, #4]
   13908:	str	r1, [sp]
   1390c:	ldr	r0, [sp]
   13910:	add	r0, r0, #168	; 0xa8
   13914:	ldr	r1, [sp, #4]
   13918:	add	r1, r1, #168	; 0xa8
   1391c:	bl	10ca8 <strcmp@plt>
   13920:	mov	sp, fp
   13924:	pop	{fp, pc}
   13928:	push	{fp, lr}
   1392c:	mov	fp, sp
   13930:	sub	sp, sp, #16
   13934:	str	r0, [sp, #8]
   13938:	str	r1, [sp, #4]
   1393c:	ldr	r0, [sp, #4]
   13940:	ldr	r0, [r0, #144]	; 0x90
   13944:	ldr	r1, [sp, #8]
   13948:	ldr	r1, [r1, #144]	; 0x90
   1394c:	cmp	r0, r1
   13950:	bgt	13984 <__assert_fail@plt+0x2a9c>
   13954:	ldr	r0, [sp, #4]
   13958:	ldr	r0, [r0, #144]	; 0x90
   1395c:	ldr	r1, [sp, #8]
   13960:	ldr	r1, [r1, #144]	; 0x90
   13964:	cmp	r0, r1
   13968:	bne	13990 <__assert_fail@plt+0x2aa8>
   1396c:	ldr	r0, [sp, #4]
   13970:	ldr	r0, [r0, #148]	; 0x94
   13974:	ldr	r1, [sp, #8]
   13978:	ldr	r1, [r1, #148]	; 0x94
   1397c:	cmp	r0, r1
   13980:	ble	13990 <__assert_fail@plt+0x2aa8>
   13984:	movw	r0, #1
   13988:	str	r0, [fp, #-4]
   1398c:	b	139f4 <__assert_fail@plt+0x2b0c>
   13990:	ldr	r0, [sp, #4]
   13994:	ldr	r0, [r0, #144]	; 0x90
   13998:	ldr	r1, [sp, #8]
   1399c:	ldr	r1, [r1, #144]	; 0x90
   139a0:	cmp	r0, r1
   139a4:	blt	139d8 <__assert_fail@plt+0x2af0>
   139a8:	ldr	r0, [sp, #4]
   139ac:	ldr	r0, [r0, #144]	; 0x90
   139b0:	ldr	r1, [sp, #8]
   139b4:	ldr	r1, [r1, #144]	; 0x90
   139b8:	cmp	r0, r1
   139bc:	bne	139e4 <__assert_fail@plt+0x2afc>
   139c0:	ldr	r0, [sp, #4]
   139c4:	ldr	r0, [r0, #148]	; 0x94
   139c8:	ldr	r1, [sp, #8]
   139cc:	ldr	r1, [r1, #148]	; 0x94
   139d0:	cmp	r0, r1
   139d4:	bge	139e4 <__assert_fail@plt+0x2afc>
   139d8:	mvn	r0, #0
   139dc:	str	r0, [fp, #-4]
   139e0:	b	139f4 <__assert_fail@plt+0x2b0c>
   139e4:	ldr	r0, [sp, #8]
   139e8:	ldr	r1, [sp, #4]
   139ec:	bl	138c8 <__assert_fail@plt+0x29e0>
   139f0:	str	r0, [fp, #-4]
   139f4:	ldr	r0, [fp, #-4]
   139f8:	mov	sp, fp
   139fc:	pop	{fp, pc}
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	sub	sp, sp, #8
   13a0c:	str	r0, [sp, #4]
   13a10:	str	r1, [sp]
   13a14:	ldr	r0, [sp, #4]
   13a18:	ldr	r1, [sp]
   13a1c:	bl	13928 <__assert_fail@plt+0x2a40>
   13a20:	movw	r1, #0
   13a24:	sub	r0, r1, r0
   13a28:	mov	sp, fp
   13a2c:	pop	{fp, pc}
   13a30:	push	{fp, lr}
   13a34:	mov	fp, sp
   13a38:	sub	sp, sp, #16
   13a3c:	str	r0, [sp, #8]
   13a40:	str	r1, [sp, #4]
   13a44:	ldr	r0, [sp, #4]
   13a48:	ldr	r0, [r0, #136]	; 0x88
   13a4c:	ldr	r1, [sp, #8]
   13a50:	ldr	r1, [r1, #136]	; 0x88
   13a54:	cmp	r0, r1
   13a58:	bgt	13a8c <__assert_fail@plt+0x2ba4>
   13a5c:	ldr	r0, [sp, #4]
   13a60:	ldr	r0, [r0, #136]	; 0x88
   13a64:	ldr	r1, [sp, #8]
   13a68:	ldr	r1, [r1, #136]	; 0x88
   13a6c:	cmp	r0, r1
   13a70:	bne	13a98 <__assert_fail@plt+0x2bb0>
   13a74:	ldr	r0, [sp, #4]
   13a78:	ldr	r0, [r0, #140]	; 0x8c
   13a7c:	ldr	r1, [sp, #8]
   13a80:	ldr	r1, [r1, #140]	; 0x8c
   13a84:	cmp	r0, r1
   13a88:	ble	13a98 <__assert_fail@plt+0x2bb0>
   13a8c:	movw	r0, #1
   13a90:	str	r0, [fp, #-4]
   13a94:	b	13afc <__assert_fail@plt+0x2c14>
   13a98:	ldr	r0, [sp, #4]
   13a9c:	ldr	r0, [r0, #136]	; 0x88
   13aa0:	ldr	r1, [sp, #8]
   13aa4:	ldr	r1, [r1, #136]	; 0x88
   13aa8:	cmp	r0, r1
   13aac:	blt	13ae0 <__assert_fail@plt+0x2bf8>
   13ab0:	ldr	r0, [sp, #4]
   13ab4:	ldr	r0, [r0, #136]	; 0x88
   13ab8:	ldr	r1, [sp, #8]
   13abc:	ldr	r1, [r1, #136]	; 0x88
   13ac0:	cmp	r0, r1
   13ac4:	bne	13aec <__assert_fail@plt+0x2c04>
   13ac8:	ldr	r0, [sp, #4]
   13acc:	ldr	r0, [r0, #140]	; 0x8c
   13ad0:	ldr	r1, [sp, #8]
   13ad4:	ldr	r1, [r1, #140]	; 0x8c
   13ad8:	cmp	r0, r1
   13adc:	bge	13aec <__assert_fail@plt+0x2c04>
   13ae0:	mvn	r0, #0
   13ae4:	str	r0, [fp, #-4]
   13ae8:	b	13afc <__assert_fail@plt+0x2c14>
   13aec:	ldr	r0, [sp, #8]
   13af0:	ldr	r1, [sp, #4]
   13af4:	bl	138c8 <__assert_fail@plt+0x29e0>
   13af8:	str	r0, [fp, #-4]
   13afc:	ldr	r0, [fp, #-4]
   13b00:	mov	sp, fp
   13b04:	pop	{fp, pc}
   13b08:	push	{fp, lr}
   13b0c:	mov	fp, sp
   13b10:	sub	sp, sp, #8
   13b14:	str	r0, [sp, #4]
   13b18:	str	r1, [sp]
   13b1c:	ldr	r0, [sp, #4]
   13b20:	ldr	r1, [sp]
   13b24:	bl	13a30 <__assert_fail@plt+0x2b48>
   13b28:	movw	r1, #0
   13b2c:	sub	r0, r1, r0
   13b30:	mov	sp, fp
   13b34:	pop	{fp, pc}
   13b38:	push	{fp, lr}
   13b3c:	mov	fp, sp
   13b40:	sub	sp, sp, #16
   13b44:	str	r0, [sp, #8]
   13b48:	str	r1, [sp, #4]
   13b4c:	ldr	r0, [sp, #4]
   13b50:	ldr	r0, [r0, #152]	; 0x98
   13b54:	ldr	r1, [sp, #8]
   13b58:	ldr	r1, [r1, #152]	; 0x98
   13b5c:	cmp	r0, r1
   13b60:	bgt	13b94 <__assert_fail@plt+0x2cac>
   13b64:	ldr	r0, [sp, #4]
   13b68:	ldr	r0, [r0, #152]	; 0x98
   13b6c:	ldr	r1, [sp, #8]
   13b70:	ldr	r1, [r1, #152]	; 0x98
   13b74:	cmp	r0, r1
   13b78:	bne	13ba0 <__assert_fail@plt+0x2cb8>
   13b7c:	ldr	r0, [sp, #4]
   13b80:	ldr	r0, [r0, #156]	; 0x9c
   13b84:	ldr	r1, [sp, #8]
   13b88:	ldr	r1, [r1, #156]	; 0x9c
   13b8c:	cmp	r0, r1
   13b90:	ble	13ba0 <__assert_fail@plt+0x2cb8>
   13b94:	movw	r0, #1
   13b98:	str	r0, [fp, #-4]
   13b9c:	b	13c04 <__assert_fail@plt+0x2d1c>
   13ba0:	ldr	r0, [sp, #4]
   13ba4:	ldr	r0, [r0, #152]	; 0x98
   13ba8:	ldr	r1, [sp, #8]
   13bac:	ldr	r1, [r1, #152]	; 0x98
   13bb0:	cmp	r0, r1
   13bb4:	blt	13be8 <__assert_fail@plt+0x2d00>
   13bb8:	ldr	r0, [sp, #4]
   13bbc:	ldr	r0, [r0, #152]	; 0x98
   13bc0:	ldr	r1, [sp, #8]
   13bc4:	ldr	r1, [r1, #152]	; 0x98
   13bc8:	cmp	r0, r1
   13bcc:	bne	13bf4 <__assert_fail@plt+0x2d0c>
   13bd0:	ldr	r0, [sp, #4]
   13bd4:	ldr	r0, [r0, #156]	; 0x9c
   13bd8:	ldr	r1, [sp, #8]
   13bdc:	ldr	r1, [r1, #156]	; 0x9c
   13be0:	cmp	r0, r1
   13be4:	bge	13bf4 <__assert_fail@plt+0x2d0c>
   13be8:	mvn	r0, #0
   13bec:	str	r0, [fp, #-4]
   13bf0:	b	13c04 <__assert_fail@plt+0x2d1c>
   13bf4:	ldr	r0, [sp, #8]
   13bf8:	ldr	r1, [sp, #4]
   13bfc:	bl	138c8 <__assert_fail@plt+0x29e0>
   13c00:	str	r0, [fp, #-4]
   13c04:	ldr	r0, [fp, #-4]
   13c08:	mov	sp, fp
   13c0c:	pop	{fp, pc}
   13c10:	push	{fp, lr}
   13c14:	mov	fp, sp
   13c18:	sub	sp, sp, #8
   13c1c:	str	r0, [sp, #4]
   13c20:	str	r1, [sp]
   13c24:	ldr	r0, [sp, #4]
   13c28:	ldr	r1, [sp]
   13c2c:	bl	13b38 <__assert_fail@plt+0x2c50>
   13c30:	movw	r1, #0
   13c34:	sub	r0, r1, r0
   13c38:	mov	sp, fp
   13c3c:	pop	{fp, pc}
   13c40:	push	{fp, lr}
   13c44:	mov	fp, sp
   13c48:	sub	sp, sp, #16
   13c4c:	str	r0, [sp, #8]
   13c50:	str	r1, [sp, #4]
   13c54:	ldr	r0, [sp, #4]
   13c58:	ldr	r1, [r0, #112]	; 0x70
   13c5c:	ldr	r0, [r0, #116]	; 0x74
   13c60:	ldr	r2, [sp, #8]
   13c64:	ldr	r3, [r2, #112]	; 0x70
   13c68:	ldr	r2, [r2, #116]	; 0x74
   13c6c:	subs	r1, r3, r1
   13c70:	sbcs	r0, r2, r0
   13c74:	bge	13c88 <__assert_fail@plt+0x2da0>
   13c78:	b	13c7c <__assert_fail@plt+0x2d94>
   13c7c:	movw	r0, #1
   13c80:	str	r0, [fp, #-4]
   13c84:	b	13ccc <__assert_fail@plt+0x2de4>
   13c88:	ldr	r0, [sp, #4]
   13c8c:	ldr	r1, [r0, #112]	; 0x70
   13c90:	ldr	r0, [r0, #116]	; 0x74
   13c94:	ldr	r2, [sp, #8]
   13c98:	ldr	r3, [r2, #112]	; 0x70
   13c9c:	ldr	r2, [r2, #116]	; 0x74
   13ca0:	subs	r1, r1, r3
   13ca4:	sbcs	r0, r0, r2
   13ca8:	bge	13cbc <__assert_fail@plt+0x2dd4>
   13cac:	b	13cb0 <__assert_fail@plt+0x2dc8>
   13cb0:	mvn	r0, #0
   13cb4:	str	r0, [fp, #-4]
   13cb8:	b	13ccc <__assert_fail@plt+0x2de4>
   13cbc:	ldr	r0, [sp, #8]
   13cc0:	ldr	r1, [sp, #4]
   13cc4:	bl	138c8 <__assert_fail@plt+0x29e0>
   13cc8:	str	r0, [fp, #-4]
   13ccc:	ldr	r0, [fp, #-4]
   13cd0:	mov	sp, fp
   13cd4:	pop	{fp, pc}
   13cd8:	push	{fp, lr}
   13cdc:	mov	fp, sp
   13ce0:	sub	sp, sp, #8
   13ce4:	str	r0, [sp, #4]
   13ce8:	str	r1, [sp]
   13cec:	ldr	r0, [sp, #4]
   13cf0:	ldr	r1, [sp]
   13cf4:	bl	13c40 <__assert_fail@plt+0x2d58>
   13cf8:	movw	r1, #0
   13cfc:	sub	r0, r1, r0
   13d00:	mov	sp, fp
   13d04:	pop	{fp, pc}
   13d08:	push	{fp, lr}
   13d0c:	mov	fp, sp
   13d10:	sub	sp, sp, #24
   13d14:	str	r0, [fp, #-4]
   13d18:	str	r1, [fp, #-8]
   13d1c:	ldr	r0, [fp, #-4]
   13d20:	bl	13f74 <__assert_fail@plt+0x308c>
   13d24:	ldr	r1, [fp, #-8]
   13d28:	strb	r0, [r1]
   13d2c:	ldr	r0, [fp, #-4]
   13d30:	and	r0, r0, #256	; 0x100
   13d34:	cmp	r0, #0
   13d38:	movw	r0, #0
   13d3c:	movne	r0, #1
   13d40:	tst	r0, #1
   13d44:	movw	r0, #114	; 0x72
   13d48:	moveq	r0, #45	; 0x2d
   13d4c:	ldr	r1, [fp, #-8]
   13d50:	strb	r0, [r1, #1]
   13d54:	ldr	r0, [fp, #-4]
   13d58:	and	r0, r0, #128	; 0x80
   13d5c:	cmp	r0, #0
   13d60:	movw	r0, #0
   13d64:	movne	r0, #1
   13d68:	tst	r0, #1
   13d6c:	movw	r0, #119	; 0x77
   13d70:	moveq	r0, #45	; 0x2d
   13d74:	ldr	r1, [fp, #-8]
   13d78:	strb	r0, [r1, #2]
   13d7c:	ldr	r0, [fp, #-4]
   13d80:	and	r0, r0, #2048	; 0x800
   13d84:	cmp	r0, #0
   13d88:	beq	13db4 <__assert_fail@plt+0x2ecc>
   13d8c:	ldr	r0, [fp, #-4]
   13d90:	and	r0, r0, #64	; 0x40
   13d94:	cmp	r0, #0
   13d98:	movw	r0, #0
   13d9c:	movne	r0, #1
   13da0:	tst	r0, #1
   13da4:	movw	r0, #115	; 0x73
   13da8:	moveq	r0, #83	; 0x53
   13dac:	str	r0, [sp, #12]
   13db0:	b	13dd8 <__assert_fail@plt+0x2ef0>
   13db4:	ldr	r0, [fp, #-4]
   13db8:	and	r0, r0, #64	; 0x40
   13dbc:	cmp	r0, #0
   13dc0:	movw	r0, #0
   13dc4:	movne	r0, #1
   13dc8:	tst	r0, #1
   13dcc:	movw	r0, #120	; 0x78
   13dd0:	moveq	r0, #45	; 0x2d
   13dd4:	str	r0, [sp, #12]
   13dd8:	ldr	r0, [sp, #12]
   13ddc:	ldr	r1, [fp, #-8]
   13de0:	strb	r0, [r1, #3]
   13de4:	ldr	r0, [fp, #-4]
   13de8:	and	r0, r0, #32
   13dec:	cmp	r0, #0
   13df0:	movw	r0, #0
   13df4:	movne	r0, #1
   13df8:	tst	r0, #1
   13dfc:	movw	r0, #114	; 0x72
   13e00:	moveq	r0, #45	; 0x2d
   13e04:	ldr	r1, [fp, #-8]
   13e08:	strb	r0, [r1, #4]
   13e0c:	ldr	r0, [fp, #-4]
   13e10:	and	r0, r0, #16
   13e14:	cmp	r0, #0
   13e18:	movw	r0, #0
   13e1c:	movne	r0, #1
   13e20:	tst	r0, #1
   13e24:	movw	r0, #119	; 0x77
   13e28:	moveq	r0, #45	; 0x2d
   13e2c:	ldr	r1, [fp, #-8]
   13e30:	strb	r0, [r1, #5]
   13e34:	ldr	r0, [fp, #-4]
   13e38:	and	r0, r0, #1024	; 0x400
   13e3c:	cmp	r0, #0
   13e40:	beq	13e6c <__assert_fail@plt+0x2f84>
   13e44:	ldr	r0, [fp, #-4]
   13e48:	and	r0, r0, #8
   13e4c:	cmp	r0, #0
   13e50:	movw	r0, #0
   13e54:	movne	r0, #1
   13e58:	tst	r0, #1
   13e5c:	movw	r0, #115	; 0x73
   13e60:	moveq	r0, #83	; 0x53
   13e64:	str	r0, [sp, #8]
   13e68:	b	13e90 <__assert_fail@plt+0x2fa8>
   13e6c:	ldr	r0, [fp, #-4]
   13e70:	and	r0, r0, #8
   13e74:	cmp	r0, #0
   13e78:	movw	r0, #0
   13e7c:	movne	r0, #1
   13e80:	tst	r0, #1
   13e84:	movw	r0, #120	; 0x78
   13e88:	moveq	r0, #45	; 0x2d
   13e8c:	str	r0, [sp, #8]
   13e90:	ldr	r0, [sp, #8]
   13e94:	ldr	r1, [fp, #-8]
   13e98:	strb	r0, [r1, #6]
   13e9c:	ldr	r0, [fp, #-4]
   13ea0:	and	r0, r0, #4
   13ea4:	cmp	r0, #0
   13ea8:	movw	r0, #0
   13eac:	movne	r0, #1
   13eb0:	tst	r0, #1
   13eb4:	movw	r0, #114	; 0x72
   13eb8:	moveq	r0, #45	; 0x2d
   13ebc:	ldr	r1, [fp, #-8]
   13ec0:	strb	r0, [r1, #7]
   13ec4:	ldr	r0, [fp, #-4]
   13ec8:	and	r0, r0, #2
   13ecc:	cmp	r0, #0
   13ed0:	movw	r0, #0
   13ed4:	movne	r0, #1
   13ed8:	tst	r0, #1
   13edc:	movw	r0, #119	; 0x77
   13ee0:	moveq	r0, #45	; 0x2d
   13ee4:	ldr	r1, [fp, #-8]
   13ee8:	strb	r0, [r1, #8]
   13eec:	ldr	r0, [fp, #-4]
   13ef0:	and	r0, r0, #512	; 0x200
   13ef4:	cmp	r0, #0
   13ef8:	beq	13f24 <__assert_fail@plt+0x303c>
   13efc:	ldr	r0, [fp, #-4]
   13f00:	and	r0, r0, #1
   13f04:	cmp	r0, #0
   13f08:	movw	r0, #0
   13f0c:	movne	r0, #1
   13f10:	tst	r0, #1
   13f14:	movw	r0, #116	; 0x74
   13f18:	moveq	r0, #84	; 0x54
   13f1c:	str	r0, [sp, #4]
   13f20:	b	13f48 <__assert_fail@plt+0x3060>
   13f24:	ldr	r0, [fp, #-4]
   13f28:	and	r0, r0, #1
   13f2c:	cmp	r0, #0
   13f30:	movw	r0, #0
   13f34:	movne	r0, #1
   13f38:	tst	r0, #1
   13f3c:	movw	r0, #120	; 0x78
   13f40:	moveq	r0, #45	; 0x2d
   13f44:	str	r0, [sp, #4]
   13f48:	ldr	r0, [sp, #4]
   13f4c:	ldr	r1, [fp, #-8]
   13f50:	strb	r0, [r1, #9]
   13f54:	ldr	r0, [fp, #-8]
   13f58:	movw	r1, #32
   13f5c:	strb	r1, [r0, #10]
   13f60:	ldr	r0, [fp, #-8]
   13f64:	movw	r1, #0
   13f68:	strb	r1, [r0, #11]
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}
   13f74:	sub	sp, sp, #8
   13f78:	str	r0, [sp]
   13f7c:	ldr	r0, [sp]
   13f80:	and	r0, r0, #61440	; 0xf000
   13f84:	cmp	r0, #32768	; 0x8000
   13f88:	bne	13f98 <__assert_fail@plt+0x30b0>
   13f8c:	movw	r0, #45	; 0x2d
   13f90:	strb	r0, [sp, #7]
   13f94:	b	14048 <__assert_fail@plt+0x3160>
   13f98:	ldr	r0, [sp]
   13f9c:	and	r0, r0, #61440	; 0xf000
   13fa0:	cmp	r0, #16384	; 0x4000
   13fa4:	bne	13fb4 <__assert_fail@plt+0x30cc>
   13fa8:	movw	r0, #100	; 0x64
   13fac:	strb	r0, [sp, #7]
   13fb0:	b	14048 <__assert_fail@plt+0x3160>
   13fb4:	ldr	r0, [sp]
   13fb8:	and	r0, r0, #61440	; 0xf000
   13fbc:	cmp	r0, #24576	; 0x6000
   13fc0:	bne	13fd0 <__assert_fail@plt+0x30e8>
   13fc4:	movw	r0, #98	; 0x62
   13fc8:	strb	r0, [sp, #7]
   13fcc:	b	14048 <__assert_fail@plt+0x3160>
   13fd0:	ldr	r0, [sp]
   13fd4:	and	r0, r0, #61440	; 0xf000
   13fd8:	cmp	r0, #8192	; 0x2000
   13fdc:	bne	13fec <__assert_fail@plt+0x3104>
   13fe0:	movw	r0, #99	; 0x63
   13fe4:	strb	r0, [sp, #7]
   13fe8:	b	14048 <__assert_fail@plt+0x3160>
   13fec:	ldr	r0, [sp]
   13ff0:	and	r0, r0, #61440	; 0xf000
   13ff4:	cmp	r0, #40960	; 0xa000
   13ff8:	bne	14008 <__assert_fail@plt+0x3120>
   13ffc:	movw	r0, #108	; 0x6c
   14000:	strb	r0, [sp, #7]
   14004:	b	14048 <__assert_fail@plt+0x3160>
   14008:	ldr	r0, [sp]
   1400c:	and	r0, r0, #61440	; 0xf000
   14010:	cmp	r0, #4096	; 0x1000
   14014:	bne	14024 <__assert_fail@plt+0x313c>
   14018:	movw	r0, #112	; 0x70
   1401c:	strb	r0, [sp, #7]
   14020:	b	14048 <__assert_fail@plt+0x3160>
   14024:	ldr	r0, [sp]
   14028:	and	r0, r0, #61440	; 0xf000
   1402c:	cmp	r0, #49152	; 0xc000
   14030:	bne	14040 <__assert_fail@plt+0x3158>
   14034:	movw	r0, #115	; 0x73
   14038:	strb	r0, [sp, #7]
   1403c:	b	14048 <__assert_fail@plt+0x3160>
   14040:	movw	r0, #63	; 0x3f
   14044:	strb	r0, [sp, #7]
   14048:	ldrb	r0, [sp, #7]
   1404c:	add	sp, sp, #8
   14050:	bx	lr
   14054:	push	{fp, lr}
   14058:	mov	fp, sp
   1405c:	sub	sp, sp, #8
   14060:	str	r0, [sp, #4]
   14064:	str	r1, [sp]
   14068:	ldr	r0, [sp, #4]
   1406c:	ldr	r0, [r0, #16]
   14070:	ldr	r1, [sp]
   14074:	bl	13d08 <__assert_fail@plt+0x2e20>
   14078:	ldr	r0, [sp, #4]
   1407c:	ldr	r0, [r0, #16]
   14080:	ldr	r1, [sp, #4]
   14084:	ldr	r1, [r1, #16]
   14088:	sub	r0, r0, r1
   1408c:	cmp	r0, #0
   14090:	beq	140a4 <__assert_fail@plt+0x31bc>
   14094:	ldr	r0, [sp]
   14098:	movw	r1, #70	; 0x46
   1409c:	strb	r1, [r0]
   140a0:	b	14108 <__assert_fail@plt+0x3220>
   140a4:	ldr	r0, [sp, #4]
   140a8:	ldr	r0, [r0, #16]
   140ac:	ldr	r1, [sp, #4]
   140b0:	ldr	r1, [r1, #16]
   140b4:	sub	r0, r0, r1
   140b8:	cmp	r0, #0
   140bc:	beq	140d0 <__assert_fail@plt+0x31e8>
   140c0:	ldr	r0, [sp]
   140c4:	movw	r1, #81	; 0x51
   140c8:	strb	r1, [r0]
   140cc:	b	14104 <__assert_fail@plt+0x321c>
   140d0:	ldr	r0, [sp, #4]
   140d4:	ldr	r0, [r0, #16]
   140d8:	ldr	r1, [sp, #4]
   140dc:	ldr	r1, [r1, #16]
   140e0:	sub	r0, r0, r1
   140e4:	cmp	r0, #0
   140e8:	beq	140fc <__assert_fail@plt+0x3214>
   140ec:	ldr	r0, [sp]
   140f0:	movw	r1, #83	; 0x53
   140f4:	strb	r1, [r0]
   140f8:	b	14100 <__assert_fail@plt+0x3218>
   140fc:	b	14100 <__assert_fail@plt+0x3218>
   14100:	b	14104 <__assert_fail@plt+0x321c>
   14104:	b	14108 <__assert_fail@plt+0x3220>
   14108:	mov	sp, fp
   1410c:	pop	{fp, pc}
   14110:	push	{fp, lr}
   14114:	mov	fp, sp
   14118:	sub	sp, sp, #16
   1411c:	str	r0, [fp, #-4]
   14120:	bl	10dec <__errno_location@plt>
   14124:	ldr	r0, [r0]
   14128:	str	r0, [sp, #8]
   1412c:	ldr	r0, [fp, #-4]
   14130:	bl	10ce4 <free@plt>
   14134:	ldr	r0, [sp, #8]
   14138:	str	r0, [sp, #4]
   1413c:	bl	10dec <__errno_location@plt>
   14140:	ldr	r1, [sp, #4]
   14144:	str	r1, [r0]
   14148:	mov	sp, fp
   1414c:	pop	{fp, pc}
   14150:	push	{fp, lr}
   14154:	mov	fp, sp
   14158:	sub	sp, sp, #80	; 0x50
   1415c:	ldr	r3, [pc, #1452]	; 14710 <__assert_fail@plt+0x3828>
   14160:	str	r0, [fp, #-8]
   14164:	str	r1, [fp, #-12]
   14168:	str	r2, [fp, #-16]
   1416c:	movw	r0, #0
   14170:	str	r0, [fp, #-36]	; 0xffffffdc
   14174:	str	r0, [sp, #40]	; 0x28
   14178:	ldr	r0, [fp, #-12]
   1417c:	and	r0, r0, r3
   14180:	cmp	r0, #0
   14184:	beq	141a0 <__assert_fail@plt+0x32b8>
   14188:	bl	10dec <__errno_location@plt>
   1418c:	movw	r1, #22
   14190:	str	r1, [r0]
   14194:	movw	r0, #0
   14198:	str	r0, [fp, #-4]
   1419c:	b	14704 <__assert_fail@plt+0x381c>
   141a0:	ldr	r0, [fp, #-12]
   141a4:	and	r0, r0, #4
   141a8:	cmp	r0, #0
   141ac:	beq	141d8 <__assert_fail@plt+0x32f0>
   141b0:	ldr	r0, [fp, #-12]
   141b4:	and	r0, r0, #512	; 0x200
   141b8:	cmp	r0, #0
   141bc:	beq	141d8 <__assert_fail@plt+0x32f0>
   141c0:	bl	10dec <__errno_location@plt>
   141c4:	movw	r1, #22
   141c8:	str	r1, [r0]
   141cc:	movw	r0, #0
   141d0:	str	r0, [fp, #-4]
   141d4:	b	14704 <__assert_fail@plt+0x381c>
   141d8:	ldr	r0, [fp, #-12]
   141dc:	and	r0, r0, #18
   141e0:	cmp	r0, #0
   141e4:	bne	14200 <__assert_fail@plt+0x3318>
   141e8:	bl	10dec <__errno_location@plt>
   141ec:	movw	r1, #22
   141f0:	str	r1, [r0]
   141f4:	movw	r0, #0
   141f8:	str	r0, [fp, #-4]
   141fc:	b	14704 <__assert_fail@plt+0x381c>
   14200:	movw	r0, #1
   14204:	movw	r1, #96	; 0x60
   14208:	bl	1b2c4 <__assert_fail@plt+0xa3dc>
   1420c:	str	r0, [fp, #-20]	; 0xffffffec
   14210:	ldr	r0, [fp, #-20]	; 0xffffffec
   14214:	movw	r1, #0
   14218:	cmp	r0, r1
   1421c:	bne	1422c <__assert_fail@plt+0x3344>
   14220:	movw	r0, #0
   14224:	str	r0, [fp, #-4]
   14228:	b	14704 <__assert_fail@plt+0x381c>
   1422c:	ldr	r0, [fp, #-16]
   14230:	ldr	r1, [fp, #-20]	; 0xffffffec
   14234:	str	r0, [r1, #44]	; 0x2c
   14238:	ldr	r0, [fp, #-12]
   1423c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14240:	str	r0, [r1, #48]	; 0x30
   14244:	ldr	r0, [fp, #-20]	; 0xffffffec
   14248:	ldr	r0, [r0, #48]	; 0x30
   1424c:	and	r0, r0, #2
   14250:	cmp	r0, #0
   14254:	beq	1427c <__assert_fail@plt+0x3394>
   14258:	ldr	r0, [fp, #-20]	; 0xffffffec
   1425c:	ldr	r1, [r0, #48]	; 0x30
   14260:	orr	r1, r1, #4
   14264:	str	r1, [r0, #48]	; 0x30
   14268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1426c:	ldr	r1, [r0, #48]	; 0x30
   14270:	mvn	r2, #512	; 0x200
   14274:	and	r1, r1, r2
   14278:	str	r1, [r0, #48]	; 0x30
   1427c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14280:	mvn	r1, #99	; 0x63
   14284:	str	r1, [r0, #32]
   14288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1428c:	ldr	r0, [r0, #48]	; 0x30
   14290:	and	r0, r0, #512	; 0x200
   14294:	cmp	r0, #0
   14298:	beq	142d0 <__assert_fail@plt+0x33e8>
   1429c:	b	142d0 <__assert_fail@plt+0x33e8>
   142a0:	ldr	r1, [pc, #1132]	; 14714 <__assert_fail@plt+0x382c>
   142a4:	movw	r0, #49651	; 0xc1f3
   142a8:	movt	r0, #1
   142ac:	bl	1bd24 <__assert_fail@plt+0xae3c>
   142b0:	str	r0, [sp, #32]
   142b4:	ldr	r0, [sp, #32]
   142b8:	cmp	r0, #0
   142bc:	bge	142c4 <__assert_fail@plt+0x33dc>
   142c0:	b	142cc <__assert_fail@plt+0x33e4>
   142c4:	ldr	r0, [sp, #32]
   142c8:	bl	10eb8 <close@plt>
   142cc:	b	142d0 <__assert_fail@plt+0x33e8>
   142d0:	ldr	r0, [fp, #-8]
   142d4:	bl	14718 <__assert_fail@plt+0x3830>
   142d8:	str	r0, [sp, #28]
   142dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   142e0:	ldr	r1, [sp, #28]
   142e4:	cmp	r1, #4096	; 0x1000
   142e8:	str	r0, [sp, #16]
   142ec:	bls	142fc <__assert_fail@plt+0x3414>
   142f0:	ldr	r0, [sp, #28]
   142f4:	str	r0, [sp, #12]
   142f8:	b	14308 <__assert_fail@plt+0x3420>
   142fc:	movw	r0, #4096	; 0x1000
   14300:	str	r0, [sp, #12]
   14304:	b	14308 <__assert_fail@plt+0x3420>
   14308:	ldr	r0, [sp, #12]
   1430c:	ldr	r1, [sp, #16]
   14310:	str	r0, [sp, #8]
   14314:	mov	r0, r1
   14318:	ldr	r1, [sp, #8]
   1431c:	bl	1478c <__assert_fail@plt+0x38a4>
   14320:	tst	r0, #1
   14324:	bne	1432c <__assert_fail@plt+0x3444>
   14328:	b	146f4 <__assert_fail@plt+0x380c>
   1432c:	ldr	r0, [fp, #-8]
   14330:	ldr	r0, [r0]
   14334:	movw	r1, #0
   14338:	cmp	r0, r1
   1433c:	beq	14374 <__assert_fail@plt+0x348c>
   14340:	ldr	r0, [fp, #-20]	; 0xffffffec
   14344:	movw	r1, #49561	; 0xc199
   14348:	movt	r1, #1
   1434c:	movw	r2, #0
   14350:	bl	14884 <__assert_fail@plt+0x399c>
   14354:	str	r0, [fp, #-36]	; 0xffffffdc
   14358:	movw	r1, #0
   1435c:	cmp	r0, r1
   14360:	bne	14368 <__assert_fail@plt+0x3480>
   14364:	b	146e8 <__assert_fail@plt+0x3800>
   14368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1436c:	mvn	r1, #0
   14370:	str	r1, [r0, #48]	; 0x30
   14374:	ldr	r0, [fp, #-16]
   14378:	movw	r1, #0
   1437c:	cmp	r0, r1
   14380:	movw	r0, #1
   14384:	str	r0, [sp, #4]
   14388:	beq	143a8 <__assert_fail@plt+0x34c0>
   1438c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14390:	ldr	r0, [r0, #48]	; 0x30
   14394:	and	r0, r0, #1024	; 0x400
   14398:	cmp	r0, #0
   1439c:	movw	r0, #0
   143a0:	movne	r0, #1
   143a4:	str	r0, [sp, #4]
   143a8:	ldr	r0, [sp, #4]
   143ac:	and	r0, r0, #1
   143b0:	strb	r0, [sp, #39]	; 0x27
   143b4:	movw	r0, #0
   143b8:	str	r0, [fp, #-28]	; 0xffffffe4
   143bc:	str	r0, [fp, #-32]	; 0xffffffe0
   143c0:	ldr	r0, [fp, #-8]
   143c4:	ldr	r0, [r0]
   143c8:	movw	r1, #0
   143cc:	cmp	r0, r1
   143d0:	beq	145c4 <__assert_fail@plt+0x36dc>
   143d4:	ldr	r0, [fp, #-8]
   143d8:	ldr	r0, [r0]
   143dc:	bl	10dbc <strlen@plt>
   143e0:	str	r0, [sp, #24]
   143e4:	ldr	r0, [fp, #-12]
   143e8:	and	r0, r0, #2048	; 0x800
   143ec:	cmp	r0, #0
   143f0:	bne	14494 <__assert_fail@plt+0x35ac>
   143f4:	ldr	r0, [fp, #-8]
   143f8:	ldr	r0, [r0]
   143fc:	str	r0, [sp, #20]
   14400:	ldr	r0, [sp, #24]
   14404:	movw	r1, #2
   14408:	cmp	r1, r0
   1440c:	bcs	14490 <__assert_fail@plt+0x35a8>
   14410:	ldr	r0, [sp, #20]
   14414:	ldr	r1, [sp, #24]
   14418:	sub	r1, r1, #1
   1441c:	add	r0, r0, r1
   14420:	ldrb	r0, [r0]
   14424:	cmp	r0, #47	; 0x2f
   14428:	bne	14490 <__assert_fail@plt+0x35a8>
   1442c:	b	14430 <__assert_fail@plt+0x3548>
   14430:	ldr	r0, [sp, #24]
   14434:	movw	r1, #1
   14438:	cmp	r1, r0
   1443c:	movw	r0, #0
   14440:	str	r0, [sp]
   14444:	bcs	1446c <__assert_fail@plt+0x3584>
   14448:	ldr	r0, [sp, #20]
   1444c:	ldr	r1, [sp, #24]
   14450:	sub	r1, r1, #2
   14454:	add	r0, r0, r1
   14458:	ldrb	r0, [r0]
   1445c:	cmp	r0, #47	; 0x2f
   14460:	movw	r0, #0
   14464:	moveq	r0, #1
   14468:	str	r0, [sp]
   1446c:	ldr	r0, [sp]
   14470:	tst	r0, #1
   14474:	beq	1448c <__assert_fail@plt+0x35a4>
   14478:	ldr	r0, [sp, #24]
   1447c:	mvn	r1, #0
   14480:	add	r0, r0, r1
   14484:	str	r0, [sp, #24]
   14488:	b	14430 <__assert_fail@plt+0x3548>
   1448c:	b	14490 <__assert_fail@plt+0x35a8>
   14490:	b	14494 <__assert_fail@plt+0x35ac>
   14494:	ldr	r0, [fp, #-20]	; 0xffffffec
   14498:	ldr	r1, [fp, #-8]
   1449c:	ldr	r1, [r1]
   144a0:	ldr	r2, [sp, #24]
   144a4:	bl	14884 <__assert_fail@plt+0x399c>
   144a8:	str	r0, [fp, #-24]	; 0xffffffe8
   144ac:	movw	r1, #0
   144b0:	cmp	r0, r1
   144b4:	bne	144bc <__assert_fail@plt+0x35d4>
   144b8:	b	146d8 <__assert_fail@plt+0x37f0>
   144bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144c0:	movw	r1, #0
   144c4:	str	r1, [r0, #48]	; 0x30
   144c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   144cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144d0:	str	r0, [r1, #4]
   144d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144d8:	add	r0, r0, #168	; 0xa8
   144dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144e0:	str	r0, [r1, #24]
   144e4:	ldrb	r0, [sp, #39]	; 0x27
   144e8:	tst	r0, #1
   144ec:	beq	14520 <__assert_fail@plt+0x3638>
   144f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144f4:	movw	r1, #0
   144f8:	cmp	r0, r1
   144fc:	beq	14520 <__assert_fail@plt+0x3638>
   14500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14504:	movw	r1, #11
   14508:	strh	r1, [r0, #56]	; 0x38
   1450c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14510:	movw	r1, #1
   14514:	and	r1, r1, #1
   14518:	bl	1497c <__assert_fail@plt+0x3a94>
   1451c:	b	1453c <__assert_fail@plt+0x3654>
   14520:	ldr	r0, [fp, #-20]	; 0xffffffec
   14524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14528:	movw	r2, #0
   1452c:	and	r2, r2, #1
   14530:	bl	149d4 <__assert_fail@plt+0x3aec>
   14534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14538:	strh	r0, [r1, #56]	; 0x38
   1453c:	ldr	r0, [fp, #-16]
   14540:	movw	r1, #0
   14544:	cmp	r0, r1
   14548:	beq	14564 <__assert_fail@plt+0x367c>
   1454c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14554:	str	r0, [r1, #8]
   14558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1455c:	str	r0, [fp, #-28]	; 0xffffffe4
   14560:	b	145a4 <__assert_fail@plt+0x36bc>
   14564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14568:	movw	r1, #0
   1456c:	str	r1, [r0, #8]
   14570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14574:	cmp	r0, r1
   14578:	bne	1458c <__assert_fail@plt+0x36a4>
   1457c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14580:	str	r0, [fp, #-28]	; 0xffffffe4
   14584:	str	r0, [sp, #40]	; 0x28
   14588:	b	145a0 <__assert_fail@plt+0x36b8>
   1458c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14590:	ldr	r1, [sp, #40]	; 0x28
   14594:	str	r0, [r1, #8]
   14598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1459c:	str	r0, [sp, #40]	; 0x28
   145a0:	b	145a4 <__assert_fail@plt+0x36bc>
   145a4:	b	145a8 <__assert_fail@plt+0x36c0>
   145a8:	ldr	r0, [fp, #-8]
   145ac:	add	r0, r0, #4
   145b0:	str	r0, [fp, #-8]
   145b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145b8:	add	r0, r0, #1
   145bc:	str	r0, [fp, #-32]	; 0xffffffe0
   145c0:	b	143c0 <__assert_fail@plt+0x34d8>
   145c4:	ldr	r0, [fp, #-16]
   145c8:	movw	r1, #0
   145cc:	cmp	r0, r1
   145d0:	beq	145f4 <__assert_fail@plt+0x370c>
   145d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145d8:	cmp	r0, #1
   145dc:	bls	145f4 <__assert_fail@plt+0x370c>
   145e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   145e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   145ec:	bl	14bec <__assert_fail@plt+0x3d04>
   145f0:	str	r0, [fp, #-28]	; 0xffffffe4
   145f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   145f8:	movw	r1, #49561	; 0xc199
   145fc:	movt	r1, #1
   14600:	movw	r2, #0
   14604:	bl	14884 <__assert_fail@plt+0x399c>
   14608:	ldr	r1, [fp, #-20]	; 0xffffffec
   1460c:	str	r0, [r1]
   14610:	movw	r1, #0
   14614:	cmp	r0, r1
   14618:	bne	14620 <__assert_fail@plt+0x3738>
   1461c:	b	146d8 <__assert_fail@plt+0x37f0>
   14620:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14624:	ldr	r1, [fp, #-20]	; 0xffffffec
   14628:	ldr	r1, [r1]
   1462c:	str	r0, [r1, #8]
   14630:	ldr	r0, [fp, #-20]	; 0xffffffec
   14634:	ldr	r0, [r0]
   14638:	movw	r1, #9
   1463c:	strh	r1, [r0, #56]	; 0x38
   14640:	ldr	r0, [fp, #-20]	; 0xffffffec
   14644:	ldr	r0, [r0]
   14648:	movw	r1, #1
   1464c:	str	r1, [r0, #48]	; 0x30
   14650:	ldr	r0, [fp, #-20]	; 0xffffffec
   14654:	bl	14db4 <__assert_fail@plt+0x3ecc>
   14658:	tst	r0, #1
   1465c:	bne	14664 <__assert_fail@plt+0x377c>
   14660:	b	146d8 <__assert_fail@plt+0x37f0>
   14664:	ldr	r0, [fp, #-20]	; 0xffffffec
   14668:	ldr	r0, [r0, #48]	; 0x30
   1466c:	and	r0, r0, #4
   14670:	cmp	r0, #0
   14674:	bne	146bc <__assert_fail@plt+0x37d4>
   14678:	ldr	r0, [fp, #-20]	; 0xffffffec
   1467c:	ldr	r0, [r0, #48]	; 0x30
   14680:	and	r0, r0, #512	; 0x200
   14684:	cmp	r0, #0
   14688:	bne	146bc <__assert_fail@plt+0x37d4>
   1468c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14690:	movw	r1, #49651	; 0xc1f3
   14694:	movt	r1, #1
   14698:	bl	14e90 <__assert_fail@plt+0x3fa8>
   1469c:	ldr	r1, [fp, #-20]	; 0xffffffec
   146a0:	str	r0, [r1, #28]
   146a4:	cmp	r0, #0
   146a8:	bge	146bc <__assert_fail@plt+0x37d4>
   146ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   146b0:	ldr	r1, [r0, #48]	; 0x30
   146b4:	orr	r1, r1, #4
   146b8:	str	r1, [r0, #48]	; 0x30
   146bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   146c0:	add	r0, r0, #60	; 0x3c
   146c4:	mvn	r1, #0
   146c8:	bl	1ad80 <__assert_fail@plt+0x9e98>
   146cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   146d0:	str	r0, [fp, #-4]
   146d4:	b	14704 <__assert_fail@plt+0x381c>
   146d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   146dc:	bl	14f2c <__assert_fail@plt+0x4044>
   146e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   146e4:	bl	14110 <__assert_fail@plt+0x3228>
   146e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   146ec:	ldr	r0, [r0, #24]
   146f0:	bl	14110 <__assert_fail@plt+0x3228>
   146f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146f8:	bl	14110 <__assert_fail@plt+0x3228>
   146fc:	movw	r0, #0
   14700:	str	r0, [fp, #-4]
   14704:	ldr	r0, [fp, #-4]
   14708:	mov	sp, fp
   1470c:	pop	{fp, pc}
   14710:			; <UNDEFINED> instruction: 0xfffff000
   14714:	andeq	r0, r8, r0
   14718:	push	{fp, lr}
   1471c:	mov	fp, sp
   14720:	sub	sp, sp, #16
   14724:	str	r0, [fp, #-4]
   14728:	movw	r0, #0
   1472c:	str	r0, [sp, #4]
   14730:	ldr	r0, [fp, #-4]
   14734:	ldr	r0, [r0]
   14738:	movw	r1, #0
   1473c:	cmp	r0, r1
   14740:	beq	1477c <__assert_fail@plt+0x3894>
   14744:	ldr	r0, [fp, #-4]
   14748:	ldr	r0, [r0]
   1474c:	bl	10dbc <strlen@plt>
   14750:	str	r0, [sp, #8]
   14754:	ldr	r1, [sp, #4]
   14758:	cmp	r0, r1
   1475c:	bls	14768 <__assert_fail@plt+0x3880>
   14760:	ldr	r0, [sp, #8]
   14764:	str	r0, [sp, #4]
   14768:	b	1476c <__assert_fail@plt+0x3884>
   1476c:	ldr	r0, [fp, #-4]
   14770:	add	r0, r0, #4
   14774:	str	r0, [fp, #-4]
   14778:	b	14730 <__assert_fail@plt+0x3848>
   1477c:	ldr	r0, [sp, #4]
   14780:	add	r0, r0, #1
   14784:	mov	sp, fp
   14788:	pop	{fp, pc}
   1478c:	push	{fp, lr}
   14790:	mov	fp, sp
   14794:	sub	sp, sp, #24
   14798:	str	r0, [fp, #-8]
   1479c:	str	r1, [sp, #12]
   147a0:	ldr	r0, [fp, #-8]
   147a4:	ldr	r0, [r0, #36]	; 0x24
   147a8:	ldr	r1, [sp, #12]
   147ac:	add	r0, r0, r1
   147b0:	add	r0, r0, #256	; 0x100
   147b4:	str	r0, [sp, #4]
   147b8:	ldr	r0, [sp, #4]
   147bc:	ldr	r1, [fp, #-8]
   147c0:	ldr	r1, [r1, #36]	; 0x24
   147c4:	cmp	r0, r1
   147c8:	bcs	14800 <__assert_fail@plt+0x3918>
   147cc:	ldr	r0, [fp, #-8]
   147d0:	ldr	r0, [r0, #24]
   147d4:	bl	14110 <__assert_fail@plt+0x3228>
   147d8:	ldr	r0, [fp, #-8]
   147dc:	movw	r1, #0
   147e0:	str	r1, [r0, #24]
   147e4:	bl	10dec <__errno_location@plt>
   147e8:	movw	r1, #36	; 0x24
   147ec:	str	r1, [r0]
   147f0:	movw	r0, #0
   147f4:	and	r0, r0, #1
   147f8:	strb	r0, [fp, #-1]
   147fc:	b	14874 <__assert_fail@plt+0x398c>
   14800:	ldr	r0, [sp, #4]
   14804:	ldr	r1, [fp, #-8]
   14808:	str	r0, [r1, #36]	; 0x24
   1480c:	ldr	r0, [fp, #-8]
   14810:	ldr	r0, [r0, #24]
   14814:	ldr	r1, [fp, #-8]
   14818:	ldr	r1, [r1, #36]	; 0x24
   1481c:	bl	1b3d0 <__assert_fail@plt+0xa4e8>
   14820:	str	r0, [sp, #8]
   14824:	ldr	r0, [sp, #8]
   14828:	movw	r1, #0
   1482c:	cmp	r0, r1
   14830:	bne	1485c <__assert_fail@plt+0x3974>
   14834:	ldr	r0, [fp, #-8]
   14838:	ldr	r0, [r0, #24]
   1483c:	bl	14110 <__assert_fail@plt+0x3228>
   14840:	ldr	r0, [fp, #-8]
   14844:	movw	r1, #0
   14848:	str	r1, [r0, #24]
   1484c:	movw	r0, #0
   14850:	and	r0, r0, #1
   14854:	strb	r0, [fp, #-1]
   14858:	b	14874 <__assert_fail@plt+0x398c>
   1485c:	ldr	r0, [sp, #8]
   14860:	ldr	r1, [fp, #-8]
   14864:	str	r0, [r1, #24]
   14868:	movw	r0, #1
   1486c:	and	r0, r0, #1
   14870:	strb	r0, [fp, #-1]
   14874:	ldrb	r0, [fp, #-1]
   14878:	and	r0, r0, #1
   1487c:	mov	sp, fp
   14880:	pop	{fp, pc}
   14884:	push	{fp, lr}
   14888:	mov	fp, sp
   1488c:	sub	sp, sp, #24
   14890:	str	r0, [fp, #-8]
   14894:	str	r1, [sp, #12]
   14898:	str	r2, [sp, #8]
   1489c:	ldr	r0, [sp, #8]
   148a0:	add	r0, r0, #1
   148a4:	add	r0, r0, #175	; 0xaf
   148a8:	mvn	r1, #7
   148ac:	and	r0, r0, r1
   148b0:	str	r0, [sp]
   148b4:	ldr	r0, [sp]
   148b8:	bl	1b360 <__assert_fail@plt+0xa478>
   148bc:	str	r0, [sp, #4]
   148c0:	movw	r1, #0
   148c4:	cmp	r0, r1
   148c8:	bne	148d8 <__assert_fail@plt+0x39f0>
   148cc:	movw	r0, #0
   148d0:	str	r0, [fp, #-4]
   148d4:	b	14970 <__assert_fail@plt+0x3a88>
   148d8:	ldr	r0, [sp, #4]
   148dc:	add	r0, r0, #168	; 0xa8
   148e0:	ldr	r1, [sp, #12]
   148e4:	ldr	r2, [sp, #8]
   148e8:	bl	10cf0 <memcpy@plt>
   148ec:	ldr	r0, [sp, #4]
   148f0:	add	r0, r0, #168	; 0xa8
   148f4:	ldr	r1, [sp, #8]
   148f8:	add	r0, r0, r1
   148fc:	movw	r1, #0
   14900:	strb	r1, [r0]
   14904:	ldr	r0, [sp, #8]
   14908:	ldr	r1, [sp, #4]
   1490c:	str	r0, [r1, #52]	; 0x34
   14910:	ldr	r0, [fp, #-8]
   14914:	ldr	r1, [sp, #4]
   14918:	str	r0, [r1, #44]	; 0x2c
   1491c:	ldr	r0, [fp, #-8]
   14920:	ldr	r0, [r0, #24]
   14924:	ldr	r1, [sp, #4]
   14928:	str	r0, [r1, #28]
   1492c:	ldr	r0, [sp, #4]
   14930:	movw	r1, #0
   14934:	str	r1, [r0, #32]
   14938:	ldr	r0, [sp, #4]
   1493c:	str	r1, [r0, #12]
   14940:	ldr	r0, [sp, #4]
   14944:	movw	r2, #0
   14948:	strh	r2, [r0, #58]	; 0x3a
   1494c:	ldr	r0, [sp, #4]
   14950:	movw	r2, #3
   14954:	strh	r2, [r0, #60]	; 0x3c
   14958:	ldr	r0, [sp, #4]
   1495c:	str	r1, [r0, #16]
   14960:	ldr	r0, [sp, #4]
   14964:	str	r1, [r0, #20]
   14968:	ldr	r0, [sp, #4]
   1496c:	str	r0, [fp, #-4]
   14970:	ldr	r0, [fp, #-4]
   14974:	mov	sp, fp
   14978:	pop	{fp, pc}
   1497c:	push	{fp, lr}
   14980:	mov	fp, sp
   14984:	sub	sp, sp, #8
   14988:	str	r0, [sp, #4]
   1498c:	and	r0, r1, #1
   14990:	strb	r0, [sp, #3]
   14994:	ldr	r0, [sp, #4]
   14998:	ldrh	r0, [r0, #56]	; 0x38
   1499c:	cmp	r0, #11
   149a0:	beq	149a8 <__assert_fail@plt+0x3ac0>
   149a4:	bl	10eac <abort@plt>
   149a8:	b	149ac <__assert_fail@plt+0x3ac4>
   149ac:	ldrb	r0, [sp, #3]
   149b0:	mov	r1, #1
   149b4:	tst	r0, #1
   149b8:	movwne	r1, #2
   149bc:	ldr	r0, [sp, #4]
   149c0:	mov	r2, #0
   149c4:	str	r2, [r0, #116]	; 0x74
   149c8:	str	r1, [r0, #112]	; 0x70
   149cc:	mov	sp, fp
   149d0:	pop	{fp, pc}
   149d4:	push	{fp, lr}
   149d8:	mov	fp, sp
   149dc:	sub	sp, sp, #24
   149e0:	str	r0, [fp, #-8]
   149e4:	str	r1, [sp, #12]
   149e8:	and	r0, r2, #1
   149ec:	strb	r0, [sp, #11]
   149f0:	ldr	r0, [sp, #12]
   149f4:	add	r0, r0, #64	; 0x40
   149f8:	str	r0, [sp, #4]
   149fc:	ldr	r0, [sp, #12]
   14a00:	ldr	r0, [r0, #48]	; 0x30
   14a04:	cmp	r0, #0
   14a08:	bne	14a28 <__assert_fail@plt+0x3b40>
   14a0c:	ldr	r0, [fp, #-8]
   14a10:	ldr	r0, [r0, #48]	; 0x30
   14a14:	and	r0, r0, #1
   14a18:	cmp	r0, #0
   14a1c:	beq	14a28 <__assert_fail@plt+0x3b40>
   14a20:	movw	r0, #1
   14a24:	strb	r0, [sp, #11]
   14a28:	ldr	r0, [fp, #-8]
   14a2c:	ldr	r0, [r0, #48]	; 0x30
   14a30:	and	r0, r0, #2
   14a34:	cmp	r0, #0
   14a38:	bne	14a48 <__assert_fail@plt+0x3b60>
   14a3c:	ldrb	r0, [sp, #11]
   14a40:	tst	r0, #1
   14a44:	beq	14ab8 <__assert_fail@plt+0x3bd0>
   14a48:	ldr	r0, [sp, #12]
   14a4c:	ldr	r0, [r0, #24]
   14a50:	ldr	r1, [sp, #4]
   14a54:	bl	1c078 <__assert_fail@plt+0xb190>
   14a58:	cmp	r0, #0
   14a5c:	beq	14ab4 <__assert_fail@plt+0x3bcc>
   14a60:	bl	10dec <__errno_location@plt>
   14a64:	ldr	r0, [r0]
   14a68:	cmp	r0, #2
   14a6c:	bne	14aa0 <__assert_fail@plt+0x3bb8>
   14a70:	ldr	r0, [sp, #12]
   14a74:	ldr	r0, [r0, #24]
   14a78:	ldr	r1, [sp, #4]
   14a7c:	bl	1c098 <__assert_fail@plt+0xb1b0>
   14a80:	cmp	r0, #0
   14a84:	bne	14aa0 <__assert_fail@plt+0x3bb8>
   14a88:	bl	10dec <__errno_location@plt>
   14a8c:	movw	r1, #0
   14a90:	str	r1, [r0]
   14a94:	movw	r0, #13
   14a98:	strh	r0, [fp, #-2]
   14a9c:	b	14be0 <__assert_fail@plt+0x3cf8>
   14aa0:	bl	10dec <__errno_location@plt>
   14aa4:	ldr	r0, [r0]
   14aa8:	ldr	r1, [sp, #12]
   14aac:	str	r0, [r1, #32]
   14ab0:	b	14aec <__assert_fail@plt+0x3c04>
   14ab4:	b	14b10 <__assert_fail@plt+0x3c28>
   14ab8:	ldr	r0, [fp, #-8]
   14abc:	ldr	r0, [r0, #32]
   14ac0:	ldr	r1, [sp, #12]
   14ac4:	ldr	r1, [r1, #24]
   14ac8:	ldr	r2, [sp, #4]
   14acc:	movw	r3, #256	; 0x100
   14ad0:	bl	1c0a8 <__assert_fail@plt+0xb1c0>
   14ad4:	cmp	r0, #0
   14ad8:	beq	14b0c <__assert_fail@plt+0x3c24>
   14adc:	bl	10dec <__errno_location@plt>
   14ae0:	ldr	r0, [r0]
   14ae4:	ldr	r1, [sp, #12]
   14ae8:	str	r0, [r1, #32]
   14aec:	ldr	r0, [sp, #4]
   14af0:	movw	r1, #0
   14af4:	and	r1, r1, #255	; 0xff
   14af8:	movw	r2, #104	; 0x68
   14afc:	bl	10e04 <memset@plt>
   14b00:	movw	r0, #10
   14b04:	strh	r0, [fp, #-2]
   14b08:	b	14be0 <__assert_fail@plt+0x3cf8>
   14b0c:	b	14b10 <__assert_fail@plt+0x3c28>
   14b10:	ldr	r0, [sp, #4]
   14b14:	ldr	r0, [r0, #16]
   14b18:	and	r0, r0, #61440	; 0xf000
   14b1c:	cmp	r0, #16384	; 0x4000
   14b20:	bne	14b98 <__assert_fail@plt+0x3cb0>
   14b24:	ldr	r0, [sp, #12]
   14b28:	ldrb	r0, [r0, #168]	; 0xa8
   14b2c:	cmp	r0, #46	; 0x2e
   14b30:	bne	14b8c <__assert_fail@plt+0x3ca4>
   14b34:	ldr	r0, [sp, #12]
   14b38:	ldrsb	r0, [r0, #169]	; 0xa9
   14b3c:	cmp	r0, #0
   14b40:	beq	14b64 <__assert_fail@plt+0x3c7c>
   14b44:	ldr	r0, [sp, #12]
   14b48:	ldrb	r0, [r0, #169]	; 0xa9
   14b4c:	cmp	r0, #46	; 0x2e
   14b50:	bne	14b8c <__assert_fail@plt+0x3ca4>
   14b54:	ldr	r0, [sp, #12]
   14b58:	ldrsb	r0, [r0, #170]	; 0xaa
   14b5c:	cmp	r0, #0
   14b60:	bne	14b8c <__assert_fail@plt+0x3ca4>
   14b64:	ldr	r0, [sp, #12]
   14b68:	ldr	r0, [r0, #48]	; 0x30
   14b6c:	cmp	r0, #0
   14b70:	movw	r0, #0
   14b74:	moveq	r0, #1
   14b78:	tst	r0, #1
   14b7c:	movw	r0, #1
   14b80:	moveq	r0, #5
   14b84:	strh	r0, [fp, #-2]
   14b88:	b	14be0 <__assert_fail@plt+0x3cf8>
   14b8c:	movw	r0, #1
   14b90:	strh	r0, [fp, #-2]
   14b94:	b	14be0 <__assert_fail@plt+0x3cf8>
   14b98:	ldr	r0, [sp, #4]
   14b9c:	ldr	r0, [r0, #16]
   14ba0:	and	r0, r0, #61440	; 0xf000
   14ba4:	cmp	r0, #40960	; 0xa000
   14ba8:	bne	14bb8 <__assert_fail@plt+0x3cd0>
   14bac:	movw	r0, #12
   14bb0:	strh	r0, [fp, #-2]
   14bb4:	b	14be0 <__assert_fail@plt+0x3cf8>
   14bb8:	ldr	r0, [sp, #4]
   14bbc:	ldr	r0, [r0, #16]
   14bc0:	and	r0, r0, #61440	; 0xf000
   14bc4:	cmp	r0, #32768	; 0x8000
   14bc8:	bne	14bd8 <__assert_fail@plt+0x3cf0>
   14bcc:	movw	r0, #8
   14bd0:	strh	r0, [fp, #-2]
   14bd4:	b	14be0 <__assert_fail@plt+0x3cf8>
   14bd8:	movw	r0, #3
   14bdc:	strh	r0, [fp, #-2]
   14be0:	ldrh	r0, [fp, #-2]
   14be4:	mov	sp, fp
   14be8:	pop	{fp, pc}
   14bec:	push	{fp, lr}
   14bf0:	mov	fp, sp
   14bf4:	sub	sp, sp, #48	; 0x30
   14bf8:	add	r3, sp, #20
   14bfc:	str	r0, [fp, #-8]
   14c00:	str	r1, [fp, #-12]
   14c04:	str	r2, [fp, #-16]
   14c08:	mov	r0, r3
   14c0c:	cmp	r3, r0
   14c10:	bne	14c24 <__assert_fail@plt+0x3d3c>
   14c14:	ldr	r0, [fp, #-8]
   14c18:	ldr	r0, [r0, #44]	; 0x2c
   14c1c:	str	r0, [sp, #8]
   14c20:	b	14c34 <__assert_fail@plt+0x3d4c>
   14c24:	movw	r0, #31568	; 0x7b50
   14c28:	movt	r0, #1
   14c2c:	str	r0, [sp, #8]
   14c30:	b	14c34 <__assert_fail@plt+0x3d4c>
   14c34:	ldr	r0, [sp, #8]
   14c38:	str	r0, [sp, #16]
   14c3c:	ldr	r0, [fp, #-16]
   14c40:	ldr	r1, [fp, #-8]
   14c44:	ldr	r1, [r1, #40]	; 0x28
   14c48:	cmp	r0, r1
   14c4c:	bls	14cdc <__assert_fail@plt+0x3df4>
   14c50:	ldr	r0, [pc, #344]	; 14db0 <__assert_fail@plt+0x3ec8>
   14c54:	ldr	r1, [fp, #-16]
   14c58:	add	r1, r1, #40	; 0x28
   14c5c:	ldr	r2, [fp, #-8]
   14c60:	str	r1, [r2, #40]	; 0x28
   14c64:	ldr	r1, [fp, #-8]
   14c68:	ldr	r1, [r1, #40]	; 0x28
   14c6c:	cmp	r0, r1
   14c70:	bcc	14ca4 <__assert_fail@plt+0x3dbc>
   14c74:	ldr	r0, [fp, #-8]
   14c78:	ldr	r1, [r0, #8]
   14c7c:	ldr	r0, [r0, #40]	; 0x28
   14c80:	lsl	r0, r0, #2
   14c84:	str	r0, [sp, #4]
   14c88:	mov	r0, r1
   14c8c:	ldr	r1, [sp, #4]
   14c90:	bl	1b3d0 <__assert_fail@plt+0xa4e8>
   14c94:	str	r0, [sp, #12]
   14c98:	movw	r1, #0
   14c9c:	cmp	r0, r1
   14ca0:	bne	14cd0 <__assert_fail@plt+0x3de8>
   14ca4:	ldr	r0, [fp, #-8]
   14ca8:	ldr	r0, [r0, #8]
   14cac:	bl	14110 <__assert_fail@plt+0x3228>
   14cb0:	ldr	r0, [fp, #-8]
   14cb4:	movw	r1, #0
   14cb8:	str	r1, [r0, #8]
   14cbc:	ldr	r0, [fp, #-8]
   14cc0:	str	r1, [r0, #40]	; 0x28
   14cc4:	ldr	r0, [fp, #-12]
   14cc8:	str	r0, [fp, #-4]
   14ccc:	b	14da4 <__assert_fail@plt+0x3ebc>
   14cd0:	ldr	r0, [sp, #12]
   14cd4:	ldr	r1, [fp, #-8]
   14cd8:	str	r0, [r1, #8]
   14cdc:	ldr	r0, [fp, #-8]
   14ce0:	ldr	r0, [r0, #8]
   14ce4:	str	r0, [fp, #-20]	; 0xffffffec
   14ce8:	ldr	r0, [fp, #-12]
   14cec:	str	r0, [sp, #24]
   14cf0:	ldr	r0, [sp, #24]
   14cf4:	movw	r1, #0
   14cf8:	cmp	r0, r1
   14cfc:	beq	14d24 <__assert_fail@plt+0x3e3c>
   14d00:	ldr	r0, [sp, #24]
   14d04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d08:	add	r2, r1, #4
   14d0c:	str	r2, [fp, #-20]	; 0xffffffec
   14d10:	str	r0, [r1]
   14d14:	ldr	r0, [sp, #24]
   14d18:	ldr	r0, [r0, #8]
   14d1c:	str	r0, [sp, #24]
   14d20:	b	14cf0 <__assert_fail@plt+0x3e08>
   14d24:	ldr	r0, [fp, #-8]
   14d28:	ldr	r0, [r0, #8]
   14d2c:	ldr	r1, [fp, #-16]
   14d30:	ldr	r3, [sp, #16]
   14d34:	movw	r2, #4
   14d38:	bl	10e7c <qsort@plt>
   14d3c:	ldr	r0, [fp, #-8]
   14d40:	ldr	r0, [r0, #8]
   14d44:	str	r0, [fp, #-20]	; 0xffffffec
   14d48:	ldr	r0, [r0]
   14d4c:	str	r0, [fp, #-12]
   14d50:	ldr	r0, [fp, #-16]
   14d54:	mvn	r1, #0
   14d58:	add	r0, r0, r1
   14d5c:	str	r0, [fp, #-16]
   14d60:	cmp	r0, #0
   14d64:	beq	14d8c <__assert_fail@plt+0x3ea4>
   14d68:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d6c:	ldr	r0, [r0, #4]
   14d70:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d74:	ldr	r1, [r1]
   14d78:	str	r0, [r1, #8]
   14d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d80:	add	r0, r0, #4
   14d84:	str	r0, [fp, #-20]	; 0xffffffec
   14d88:	b	14d50 <__assert_fail@plt+0x3e68>
   14d8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d90:	ldr	r0, [r0]
   14d94:	movw	r1, #0
   14d98:	str	r1, [r0, #8]
   14d9c:	ldr	r0, [fp, #-12]
   14da0:	str	r0, [fp, #-4]
   14da4:	ldr	r0, [fp, #-4]
   14da8:	mov	sp, fp
   14dac:	pop	{fp, pc}
   14db0:	svccc	0x00ffffff
   14db4:	push	{fp, lr}
   14db8:	mov	fp, sp
   14dbc:	sub	sp, sp, #16
   14dc0:	str	r0, [sp, #8]
   14dc4:	ldr	r0, [sp, #8]
   14dc8:	ldr	r0, [r0, #48]	; 0x30
   14dcc:	movw	r1, #258	; 0x102
   14dd0:	and	r0, r0, r1
   14dd4:	cmp	r0, #0
   14dd8:	beq	14e34 <__assert_fail@plt+0x3f4c>
   14ddc:	movw	r0, #31
   14de0:	movw	r1, #0
   14de4:	movw	r2, #29748	; 0x7434
   14de8:	movt	r2, #1
   14dec:	movw	r3, #29828	; 0x7484
   14df0:	movt	r3, #1
   14df4:	movw	ip, #16656	; 0x4110
   14df8:	movt	ip, #1
   14dfc:	str	ip, [sp]
   14e00:	bl	1992c <__assert_fail@plt+0x8a44>
   14e04:	ldr	r1, [sp, #8]
   14e08:	str	r0, [r1, #56]	; 0x38
   14e0c:	ldr	r0, [sp, #8]
   14e10:	ldr	r0, [r0, #56]	; 0x38
   14e14:	movw	r1, #0
   14e18:	cmp	r0, r1
   14e1c:	bne	14e30 <__assert_fail@plt+0x3f48>
   14e20:	movw	r0, #0
   14e24:	and	r0, r0, #1
   14e28:	strb	r0, [fp, #-1]
   14e2c:	b	14e80 <__assert_fail@plt+0x3f98>
   14e30:	b	14e74 <__assert_fail@plt+0x3f8c>
   14e34:	movw	r0, #32
   14e38:	bl	1b360 <__assert_fail@plt+0xa478>
   14e3c:	ldr	r1, [sp, #8]
   14e40:	str	r0, [r1, #56]	; 0x38
   14e44:	ldr	r0, [sp, #8]
   14e48:	ldr	r0, [r0, #56]	; 0x38
   14e4c:	movw	r1, #0
   14e50:	cmp	r0, r1
   14e54:	bne	14e68 <__assert_fail@plt+0x3f80>
   14e58:	movw	r0, #0
   14e5c:	and	r0, r0, #1
   14e60:	strb	r0, [fp, #-1]
   14e64:	b	14e80 <__assert_fail@plt+0x3f98>
   14e68:	ldr	r0, [sp, #8]
   14e6c:	ldr	r0, [r0, #56]	; 0x38
   14e70:	bl	1b754 <__assert_fail@plt+0xa86c>
   14e74:	movw	r0, #1
   14e78:	and	r0, r0, #1
   14e7c:	strb	r0, [fp, #-1]
   14e80:	ldrb	r0, [fp, #-1]
   14e84:	and	r0, r0, #1
   14e88:	mov	sp, fp
   14e8c:	pop	{fp, pc}
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	sub	sp, sp, #24
   14e9c:	ldr	r2, [pc, #132]	; 14f28 <__assert_fail@plt+0x4040>
   14ea0:	str	r0, [fp, #-4]
   14ea4:	str	r1, [fp, #-8]
   14ea8:	ldr	r0, [fp, #-4]
   14eac:	ldr	r0, [r0, #48]	; 0x30
   14eb0:	and	r0, r0, #16
   14eb4:	cmp	r0, #0
   14eb8:	movw	r0, #0
   14ebc:	movne	r0, #1
   14ec0:	tst	r0, #1
   14ec4:	movw	r0, #32768	; 0x8000
   14ec8:	moveq	r0, #0
   14ecc:	orr	r0, r0, r2
   14ed0:	str	r0, [sp, #12]
   14ed4:	ldr	r0, [fp, #-4]
   14ed8:	ldr	r0, [r0, #48]	; 0x30
   14edc:	and	r0, r0, #512	; 0x200
   14ee0:	cmp	r0, #0
   14ee4:	beq	14f04 <__assert_fail@plt+0x401c>
   14ee8:	ldr	r0, [fp, #-4]
   14eec:	ldr	r0, [r0, #32]
   14ef0:	ldr	r1, [fp, #-8]
   14ef4:	ldr	r2, [sp, #12]
   14ef8:	bl	1b100 <__assert_fail@plt+0xa218>
   14efc:	str	r0, [sp, #4]
   14f00:	b	14f14 <__assert_fail@plt+0x402c>
   14f04:	ldr	r0, [fp, #-8]
   14f08:	ldr	r1, [sp, #12]
   14f0c:	bl	1bd24 <__assert_fail@plt+0xae3c>
   14f10:	str	r0, [sp, #4]
   14f14:	ldr	r0, [sp, #4]
   14f18:	str	r0, [sp, #8]
   14f1c:	ldr	r0, [sp, #8]
   14f20:	mov	sp, fp
   14f24:	pop	{fp, pc}
   14f28:	andeq	r4, r8, r0, lsl #18
   14f2c:	push	{fp, lr}
   14f30:	mov	fp, sp
   14f34:	sub	sp, sp, #8
   14f38:	str	r0, [sp, #4]
   14f3c:	ldr	r0, [sp, #4]
   14f40:	str	r0, [sp]
   14f44:	movw	r1, #0
   14f48:	cmp	r0, r1
   14f4c:	beq	14f88 <__assert_fail@plt+0x40a0>
   14f50:	ldr	r0, [sp, #4]
   14f54:	ldr	r0, [r0, #8]
   14f58:	str	r0, [sp, #4]
   14f5c:	ldr	r0, [sp]
   14f60:	ldr	r0, [r0, #12]
   14f64:	movw	r1, #0
   14f68:	cmp	r0, r1
   14f6c:	beq	14f7c <__assert_fail@plt+0x4094>
   14f70:	ldr	r0, [sp]
   14f74:	ldr	r0, [r0, #12]
   14f78:	bl	10ed0 <closedir@plt>
   14f7c:	ldr	r0, [sp]
   14f80:	bl	14110 <__assert_fail@plt+0x3228>
   14f84:	b	14f3c <__assert_fail@plt+0x4054>
   14f88:	mov	sp, fp
   14f8c:	pop	{fp, pc}
   14f90:	push	{fp, lr}
   14f94:	mov	fp, sp
   14f98:	sub	sp, sp, #32
   14f9c:	str	r0, [fp, #-8]
   14fa0:	movw	r0, #0
   14fa4:	str	r0, [sp, #12]
   14fa8:	ldr	r1, [fp, #-8]
   14fac:	ldr	r1, [r1]
   14fb0:	cmp	r1, r0
   14fb4:	beq	15028 <__assert_fail@plt+0x4140>
   14fb8:	ldr	r0, [fp, #-8]
   14fbc:	ldr	r0, [r0]
   14fc0:	str	r0, [sp, #16]
   14fc4:	ldr	r0, [sp, #16]
   14fc8:	ldr	r0, [r0, #48]	; 0x30
   14fcc:	cmp	r0, #0
   14fd0:	blt	15020 <__assert_fail@plt+0x4138>
   14fd4:	ldr	r0, [sp, #16]
   14fd8:	str	r0, [fp, #-12]
   14fdc:	ldr	r0, [sp, #16]
   14fe0:	ldr	r0, [r0, #8]
   14fe4:	movw	r1, #0
   14fe8:	cmp	r0, r1
   14fec:	beq	15000 <__assert_fail@plt+0x4118>
   14ff0:	ldr	r0, [sp, #16]
   14ff4:	ldr	r0, [r0, #8]
   14ff8:	str	r0, [sp, #8]
   14ffc:	b	1500c <__assert_fail@plt+0x4124>
   15000:	ldr	r0, [sp, #16]
   15004:	ldr	r0, [r0, #4]
   15008:	str	r0, [sp, #8]
   1500c:	ldr	r0, [sp, #8]
   15010:	str	r0, [sp, #16]
   15014:	ldr	r0, [fp, #-12]
   15018:	bl	14110 <__assert_fail@plt+0x3228>
   1501c:	b	14fc4 <__assert_fail@plt+0x40dc>
   15020:	ldr	r0, [sp, #16]
   15024:	bl	14110 <__assert_fail@plt+0x3228>
   15028:	ldr	r0, [fp, #-8]
   1502c:	ldr	r0, [r0, #4]
   15030:	movw	r1, #0
   15034:	cmp	r0, r1
   15038:	beq	15048 <__assert_fail@plt+0x4160>
   1503c:	ldr	r0, [fp, #-8]
   15040:	ldr	r0, [r0, #4]
   15044:	bl	14f2c <__assert_fail@plt+0x4044>
   15048:	ldr	r0, [fp, #-8]
   1504c:	ldr	r0, [r0, #8]
   15050:	bl	14110 <__assert_fail@plt+0x3228>
   15054:	ldr	r0, [fp, #-8]
   15058:	ldr	r0, [r0, #24]
   1505c:	bl	14110 <__assert_fail@plt+0x3228>
   15060:	ldr	r0, [fp, #-8]
   15064:	ldr	r0, [r0, #48]	; 0x30
   15068:	and	r0, r0, #512	; 0x200
   1506c:	cmp	r0, #0
   15070:	beq	150b0 <__assert_fail@plt+0x41c8>
   15074:	ldr	r0, [fp, #-8]
   15078:	ldr	r0, [r0, #32]
   1507c:	movw	r1, #0
   15080:	cmp	r1, r0
   15084:	bgt	150ac <__assert_fail@plt+0x41c4>
   15088:	ldr	r0, [fp, #-8]
   1508c:	ldr	r0, [r0, #32]
   15090:	bl	10eb8 <close@plt>
   15094:	cmp	r0, #0
   15098:	beq	150a8 <__assert_fail@plt+0x41c0>
   1509c:	bl	10dec <__errno_location@plt>
   150a0:	ldr	r0, [r0]
   150a4:	str	r0, [sp, #12]
   150a8:	b	150ac <__assert_fail@plt+0x41c4>
   150ac:	b	1511c <__assert_fail@plt+0x4234>
   150b0:	ldr	r0, [fp, #-8]
   150b4:	ldr	r0, [r0, #48]	; 0x30
   150b8:	and	r0, r0, #4
   150bc:	cmp	r0, #0
   150c0:	bne	15118 <__assert_fail@plt+0x4230>
   150c4:	ldr	r0, [fp, #-8]
   150c8:	ldr	r0, [r0, #28]
   150cc:	bl	10e70 <fchdir@plt>
   150d0:	cmp	r0, #0
   150d4:	beq	150e4 <__assert_fail@plt+0x41fc>
   150d8:	bl	10dec <__errno_location@plt>
   150dc:	ldr	r0, [r0]
   150e0:	str	r0, [sp, #12]
   150e4:	ldr	r0, [fp, #-8]
   150e8:	ldr	r0, [r0, #28]
   150ec:	bl	10eb8 <close@plt>
   150f0:	cmp	r0, #0
   150f4:	beq	15114 <__assert_fail@plt+0x422c>
   150f8:	ldr	r0, [sp, #12]
   150fc:	cmp	r0, #0
   15100:	bne	15110 <__assert_fail@plt+0x4228>
   15104:	bl	10dec <__errno_location@plt>
   15108:	ldr	r0, [r0]
   1510c:	str	r0, [sp, #12]
   15110:	b	15114 <__assert_fail@plt+0x422c>
   15114:	b	15118 <__assert_fail@plt+0x4230>
   15118:	b	1511c <__assert_fail@plt+0x4234>
   1511c:	ldr	r0, [fp, #-8]
   15120:	add	r0, r0, #60	; 0x3c
   15124:	bl	15198 <__assert_fail@plt+0x42b0>
   15128:	ldr	r0, [fp, #-8]
   1512c:	ldr	r0, [r0, #52]	; 0x34
   15130:	movw	r1, #0
   15134:	cmp	r0, r1
   15138:	beq	15148 <__assert_fail@plt+0x4260>
   1513c:	ldr	r0, [fp, #-8]
   15140:	ldr	r0, [r0, #52]	; 0x34
   15144:	bl	19e7c <__assert_fail@plt+0x8f94>
   15148:	ldr	r0, [fp, #-8]
   1514c:	bl	151f0 <__assert_fail@plt+0x4308>
   15150:	ldr	r0, [fp, #-8]
   15154:	bl	14110 <__assert_fail@plt+0x3228>
   15158:	ldr	r0, [sp, #12]
   1515c:	cmp	r0, #0
   15160:	beq	15184 <__assert_fail@plt+0x429c>
   15164:	ldr	r0, [sp, #12]
   15168:	str	r0, [sp, #4]
   1516c:	bl	10dec <__errno_location@plt>
   15170:	ldr	r1, [sp, #4]
   15174:	str	r1, [r0]
   15178:	mvn	r0, #0
   1517c:	str	r0, [fp, #-4]
   15180:	b	1518c <__assert_fail@plt+0x42a4>
   15184:	movw	r0, #0
   15188:	str	r0, [fp, #-4]
   1518c:	ldr	r0, [fp, #-4]
   15190:	mov	sp, fp
   15194:	pop	{fp, pc}
   15198:	push	{fp, lr}
   1519c:	mov	fp, sp
   151a0:	sub	sp, sp, #8
   151a4:	str	r0, [sp, #4]
   151a8:	ldr	r0, [sp, #4]
   151ac:	bl	1adf4 <__assert_fail@plt+0x9f0c>
   151b0:	mvn	r1, #0
   151b4:	eor	r0, r0, r1
   151b8:	tst	r0, #1
   151bc:	beq	151e8 <__assert_fail@plt+0x4300>
   151c0:	ldr	r0, [sp, #4]
   151c4:	bl	1aec4 <__assert_fail@plt+0x9fdc>
   151c8:	str	r0, [sp]
   151cc:	ldr	r0, [sp]
   151d0:	movw	r1, #0
   151d4:	cmp	r1, r0
   151d8:	bgt	151e4 <__assert_fail@plt+0x42fc>
   151dc:	ldr	r0, [sp]
   151e0:	bl	10eb8 <close@plt>
   151e4:	b	151a8 <__assert_fail@plt+0x42c0>
   151e8:	mov	sp, fp
   151ec:	pop	{fp, pc}
   151f0:	push	{fp, lr}
   151f4:	mov	fp, sp
   151f8:	sub	sp, sp, #8
   151fc:	str	r0, [sp, #4]
   15200:	ldr	r0, [sp, #4]
   15204:	ldr	r0, [r0, #48]	; 0x30
   15208:	movw	r1, #258	; 0x102
   1520c:	and	r0, r0, r1
   15210:	cmp	r0, #0
   15214:	beq	1523c <__assert_fail@plt+0x4354>
   15218:	ldr	r0, [sp, #4]
   1521c:	ldr	r0, [r0, #56]	; 0x38
   15220:	movw	r1, #0
   15224:	cmp	r0, r1
   15228:	beq	15238 <__assert_fail@plt+0x4350>
   1522c:	ldr	r0, [sp, #4]
   15230:	ldr	r0, [r0, #56]	; 0x38
   15234:	bl	19e7c <__assert_fail@plt+0x8f94>
   15238:	b	15248 <__assert_fail@plt+0x4360>
   1523c:	ldr	r0, [sp, #4]
   15240:	ldr	r0, [r0, #56]	; 0x38
   15244:	bl	14110 <__assert_fail@plt+0x3228>
   15248:	mov	sp, fp
   1524c:	pop	{fp, pc}
   15250:	push	{fp, lr}
   15254:	mov	fp, sp
   15258:	sub	sp, sp, #40	; 0x28
   1525c:	str	r0, [fp, #-8]
   15260:	ldr	r0, [fp, #-8]
   15264:	ldr	r0, [r0]
   15268:	movw	r1, #0
   1526c:	cmp	r0, r1
   15270:	beq	15288 <__assert_fail@plt+0x43a0>
   15274:	ldr	r0, [fp, #-8]
   15278:	ldr	r0, [r0, #48]	; 0x30
   1527c:	and	r0, r0, #8192	; 0x2000
   15280:	cmp	r0, #0
   15284:	beq	15294 <__assert_fail@plt+0x43ac>
   15288:	movw	r0, #0
   1528c:	str	r0, [fp, #-4]
   15290:	b	15c24 <__assert_fail@plt+0x4d3c>
   15294:	ldr	r0, [fp, #-8]
   15298:	ldr	r0, [r0]
   1529c:	str	r0, [fp, #-12]
   152a0:	ldr	r0, [fp, #-12]
   152a4:	ldrh	r0, [r0, #60]	; 0x3c
   152a8:	strh	r0, [fp, #-18]	; 0xffffffee
   152ac:	ldr	r0, [fp, #-12]
   152b0:	movw	r1, #3
   152b4:	strh	r1, [r0, #60]	; 0x3c
   152b8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   152bc:	cmp	r0, #1
   152c0:	bne	152ec <__assert_fail@plt+0x4404>
   152c4:	ldr	r0, [fp, #-8]
   152c8:	ldr	r1, [fp, #-12]
   152cc:	movw	r2, #0
   152d0:	and	r2, r2, #1
   152d4:	bl	149d4 <__assert_fail@plt+0x3aec>
   152d8:	ldr	r1, [fp, #-12]
   152dc:	strh	r0, [r1, #56]	; 0x38
   152e0:	ldr	r0, [fp, #-12]
   152e4:	str	r0, [fp, #-4]
   152e8:	b	15c24 <__assert_fail@plt+0x4d3c>
   152ec:	ldrh	r0, [fp, #-18]	; 0xffffffee
   152f0:	cmp	r0, #2
   152f4:	bne	153b0 <__assert_fail@plt+0x44c8>
   152f8:	ldr	r0, [fp, #-12]
   152fc:	ldrh	r0, [r0, #56]	; 0x38
   15300:	cmp	r0, #12
   15304:	beq	15318 <__assert_fail@plt+0x4430>
   15308:	ldr	r0, [fp, #-12]
   1530c:	ldrh	r0, [r0, #56]	; 0x38
   15310:	cmp	r0, #13
   15314:	bne	153b0 <__assert_fail@plt+0x44c8>
   15318:	ldr	r0, [fp, #-8]
   1531c:	ldr	r1, [fp, #-12]
   15320:	movw	r2, #1
   15324:	and	r2, r2, #1
   15328:	bl	149d4 <__assert_fail@plt+0x3aec>
   1532c:	ldr	r1, [fp, #-12]
   15330:	strh	r0, [r1, #56]	; 0x38
   15334:	ldr	r0, [fp, #-12]
   15338:	ldrh	r0, [r0, #56]	; 0x38
   1533c:	cmp	r0, #1
   15340:	bne	153ac <__assert_fail@plt+0x44c4>
   15344:	ldr	r0, [fp, #-8]
   15348:	ldr	r0, [r0, #48]	; 0x30
   1534c:	and	r0, r0, #4
   15350:	cmp	r0, #0
   15354:	bne	153ac <__assert_fail@plt+0x44c4>
   15358:	ldr	r0, [fp, #-8]
   1535c:	movw	r1, #49651	; 0xc1f3
   15360:	movt	r1, #1
   15364:	bl	14e90 <__assert_fail@plt+0x3fa8>
   15368:	ldr	r1, [fp, #-12]
   1536c:	str	r0, [r1, #36]	; 0x24
   15370:	cmp	r0, #0
   15374:	bge	15398 <__assert_fail@plt+0x44b0>
   15378:	bl	10dec <__errno_location@plt>
   1537c:	ldr	r0, [r0]
   15380:	ldr	r1, [fp, #-12]
   15384:	str	r0, [r1, #32]
   15388:	ldr	r0, [fp, #-12]
   1538c:	movw	r1, #7
   15390:	strh	r1, [r0, #56]	; 0x38
   15394:	b	153a8 <__assert_fail@plt+0x44c0>
   15398:	ldr	r0, [fp, #-12]
   1539c:	ldrh	r1, [r0, #58]	; 0x3a
   153a0:	orr	r1, r1, #2
   153a4:	strh	r1, [r0, #58]	; 0x3a
   153a8:	b	153ac <__assert_fail@plt+0x44c4>
   153ac:	b	158c0 <__assert_fail@plt+0x49d8>
   153b0:	ldr	r0, [fp, #-12]
   153b4:	ldrh	r0, [r0, #56]	; 0x38
   153b8:	cmp	r0, #1
   153bc:	bne	15618 <__assert_fail@plt+0x4730>
   153c0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   153c4:	cmp	r0, #4
   153c8:	beq	15410 <__assert_fail@plt+0x4528>
   153cc:	ldr	r0, [fp, #-8]
   153d0:	ldr	r0, [r0, #48]	; 0x30
   153d4:	and	r0, r0, #64	; 0x40
   153d8:	cmp	r0, #0
   153dc:	beq	15480 <__assert_fail@plt+0x4598>
   153e0:	ldr	r0, [fp, #-12]
   153e4:	ldr	r1, [r0, #64]	; 0x40
   153e8:	ldr	r0, [r0, #68]	; 0x44
   153ec:	ldr	r2, [fp, #-8]
   153f0:	ldr	r3, [r2, #16]
   153f4:	ldr	r2, [r2, #20]
   153f8:	eor	r0, r0, r2
   153fc:	eor	r1, r1, r3
   15400:	orr	r0, r1, r0
   15404:	cmp	r0, #0
   15408:	beq	15480 <__assert_fail@plt+0x4598>
   1540c:	b	15410 <__assert_fail@plt+0x4528>
   15410:	ldr	r0, [fp, #-12]
   15414:	ldrh	r0, [r0, #58]	; 0x3a
   15418:	and	r0, r0, #2
   1541c:	cmp	r0, #0
   15420:	beq	15430 <__assert_fail@plt+0x4548>
   15424:	ldr	r0, [fp, #-12]
   15428:	ldr	r0, [r0, #36]	; 0x24
   1542c:	bl	10eb8 <close@plt>
   15430:	ldr	r0, [fp, #-8]
   15434:	ldr	r0, [r0, #4]
   15438:	movw	r1, #0
   1543c:	cmp	r0, r1
   15440:	beq	1545c <__assert_fail@plt+0x4574>
   15444:	ldr	r0, [fp, #-8]
   15448:	ldr	r0, [r0, #4]
   1544c:	bl	14f2c <__assert_fail@plt+0x4044>
   15450:	ldr	r0, [fp, #-8]
   15454:	movw	r1, #0
   15458:	str	r1, [r0, #4]
   1545c:	ldr	r0, [fp, #-12]
   15460:	movw	r1, #6
   15464:	strh	r1, [r0, #56]	; 0x38
   15468:	ldr	r0, [fp, #-8]
   1546c:	ldr	r1, [fp, #-12]
   15470:	bl	15c30 <__assert_fail@plt+0x4d48>
   15474:	ldr	r0, [fp, #-12]
   15478:	str	r0, [fp, #-4]
   1547c:	b	15c24 <__assert_fail@plt+0x4d3c>
   15480:	ldr	r0, [fp, #-8]
   15484:	ldr	r0, [r0, #4]
   15488:	movw	r1, #0
   1548c:	cmp	r0, r1
   15490:	beq	154d4 <__assert_fail@plt+0x45ec>
   15494:	ldr	r0, [fp, #-8]
   15498:	ldr	r0, [r0, #48]	; 0x30
   1549c:	and	r0, r0, #4096	; 0x1000
   154a0:	cmp	r0, #0
   154a4:	beq	154d4 <__assert_fail@plt+0x45ec>
   154a8:	ldr	r0, [fp, #-8]
   154ac:	ldr	r1, [r0, #48]	; 0x30
   154b0:	mvn	r2, #4096	; 0x1000
   154b4:	and	r1, r1, r2
   154b8:	str	r1, [r0, #48]	; 0x30
   154bc:	ldr	r0, [fp, #-8]
   154c0:	ldr	r0, [r0, #4]
   154c4:	bl	14f2c <__assert_fail@plt+0x4044>
   154c8:	ldr	r0, [fp, #-8]
   154cc:	movw	r1, #0
   154d0:	str	r1, [r0, #4]
   154d4:	ldr	r0, [fp, #-8]
   154d8:	ldr	r0, [r0, #4]
   154dc:	movw	r1, #0
   154e0:	cmp	r0, r1
   154e4:	beq	15570 <__assert_fail@plt+0x4688>
   154e8:	ldr	r0, [fp, #-8]
   154ec:	ldr	r1, [fp, #-12]
   154f0:	ldr	r2, [fp, #-12]
   154f4:	ldr	r3, [r2, #24]
   154f8:	mvn	r2, #0
   154fc:	bl	15dd0 <__assert_fail@plt+0x4ee8>
   15500:	cmp	r0, #0
   15504:	beq	1556c <__assert_fail@plt+0x4684>
   15508:	bl	10dec <__errno_location@plt>
   1550c:	ldr	r0, [r0]
   15510:	ldr	r1, [fp, #-12]
   15514:	str	r0, [r1, #32]
   15518:	ldr	r0, [fp, #-12]
   1551c:	ldrh	r1, [r0, #58]	; 0x3a
   15520:	orr	r1, r1, #1
   15524:	strh	r1, [r0, #58]	; 0x3a
   15528:	ldr	r0, [fp, #-8]
   1552c:	ldr	r0, [r0, #4]
   15530:	str	r0, [fp, #-12]
   15534:	ldr	r0, [fp, #-12]
   15538:	movw	r1, #0
   1553c:	cmp	r0, r1
   15540:	beq	15568 <__assert_fail@plt+0x4680>
   15544:	ldr	r0, [fp, #-12]
   15548:	ldr	r0, [r0, #4]
   1554c:	ldr	r0, [r0, #24]
   15550:	ldr	r1, [fp, #-12]
   15554:	str	r0, [r1, #24]
   15558:	ldr	r0, [fp, #-12]
   1555c:	ldr	r0, [r0, #8]
   15560:	str	r0, [fp, #-12]
   15564:	b	15534 <__assert_fail@plt+0x464c>
   15568:	b	1556c <__assert_fail@plt+0x4684>
   1556c:	b	155fc <__assert_fail@plt+0x4714>
   15570:	ldr	r0, [fp, #-8]
   15574:	movw	r1, #3
   15578:	bl	16090 <__assert_fail@plt+0x51a8>
   1557c:	ldr	r1, [fp, #-8]
   15580:	str	r0, [r1, #4]
   15584:	movw	r1, #0
   15588:	cmp	r0, r1
   1558c:	bne	155f8 <__assert_fail@plt+0x4710>
   15590:	ldr	r0, [fp, #-8]
   15594:	ldr	r0, [r0, #48]	; 0x30
   15598:	and	r0, r0, #8192	; 0x2000
   1559c:	cmp	r0, #0
   155a0:	beq	155b0 <__assert_fail@plt+0x46c8>
   155a4:	movw	r0, #0
   155a8:	str	r0, [fp, #-4]
   155ac:	b	15c24 <__assert_fail@plt+0x4d3c>
   155b0:	ldr	r0, [fp, #-12]
   155b4:	ldr	r0, [r0, #32]
   155b8:	cmp	r0, #0
   155bc:	beq	155dc <__assert_fail@plt+0x46f4>
   155c0:	ldr	r0, [fp, #-12]
   155c4:	ldrh	r0, [r0, #56]	; 0x38
   155c8:	cmp	r0, #4
   155cc:	beq	155dc <__assert_fail@plt+0x46f4>
   155d0:	ldr	r0, [fp, #-12]
   155d4:	movw	r1, #7
   155d8:	strh	r1, [r0, #56]	; 0x38
   155dc:	b	155e0 <__assert_fail@plt+0x46f8>
   155e0:	ldr	r0, [fp, #-8]
   155e4:	ldr	r1, [fp, #-12]
   155e8:	bl	15c30 <__assert_fail@plt+0x4d48>
   155ec:	ldr	r0, [fp, #-12]
   155f0:	str	r0, [fp, #-4]
   155f4:	b	15c24 <__assert_fail@plt+0x4d3c>
   155f8:	b	155fc <__assert_fail@plt+0x4714>
   155fc:	ldr	r0, [fp, #-8]
   15600:	ldr	r0, [r0, #4]
   15604:	str	r0, [fp, #-12]
   15608:	ldr	r0, [fp, #-8]
   1560c:	movw	r1, #0
   15610:	str	r1, [r0, #4]
   15614:	b	15820 <__assert_fail@plt+0x4938>
   15618:	b	1561c <__assert_fail@plt+0x4734>
   1561c:	ldr	r0, [fp, #-12]
   15620:	str	r0, [fp, #-16]
   15624:	ldr	r0, [fp, #-12]
   15628:	ldr	r0, [r0, #8]
   1562c:	movw	r1, #0
   15630:	cmp	r0, r1
   15634:	bne	156d0 <__assert_fail@plt+0x47e8>
   15638:	ldr	r0, [fp, #-12]
   1563c:	ldr	r0, [r0, #4]
   15640:	ldr	r0, [r0, #12]
   15644:	movw	r1, #0
   15648:	cmp	r0, r1
   1564c:	beq	156d0 <__assert_fail@plt+0x47e8>
   15650:	ldr	r0, [fp, #-16]
   15654:	ldr	r0, [r0, #4]
   15658:	str	r0, [fp, #-12]
   1565c:	ldr	r0, [fp, #-12]
   15660:	ldr	r1, [fp, #-8]
   15664:	str	r0, [r1]
   15668:	ldr	r0, [fp, #-8]
   1566c:	ldr	r0, [r0, #24]
   15670:	ldr	r1, [fp, #-12]
   15674:	ldr	r1, [r1, #40]	; 0x28
   15678:	add	r0, r0, r1
   1567c:	movw	r1, #0
   15680:	strb	r1, [r0]
   15684:	ldr	r0, [fp, #-8]
   15688:	movw	r1, #3
   1568c:	bl	16090 <__assert_fail@plt+0x51a8>
   15690:	str	r0, [fp, #-12]
   15694:	movw	r1, #0
   15698:	cmp	r0, r1
   1569c:	bne	156c4 <__assert_fail@plt+0x47dc>
   156a0:	ldr	r0, [fp, #-8]
   156a4:	ldr	r0, [r0, #48]	; 0x30
   156a8:	and	r0, r0, #8192	; 0x2000
   156ac:	cmp	r0, #0
   156b0:	beq	156c0 <__assert_fail@plt+0x47d8>
   156b4:	movw	r0, #0
   156b8:	str	r0, [fp, #-4]
   156bc:	b	15c24 <__assert_fail@plt+0x4d3c>
   156c0:	b	159c8 <__assert_fail@plt+0x4ae0>
   156c4:	ldr	r0, [fp, #-16]
   156c8:	bl	14110 <__assert_fail@plt+0x3228>
   156cc:	b	15820 <__assert_fail@plt+0x4938>
   156d0:	ldr	r0, [fp, #-12]
   156d4:	ldr	r0, [r0, #8]
   156d8:	str	r0, [fp, #-12]
   156dc:	movw	r1, #0
   156e0:	cmp	r0, r1
   156e4:	beq	159c4 <__assert_fail@plt+0x4adc>
   156e8:	ldr	r0, [fp, #-12]
   156ec:	ldr	r1, [fp, #-8]
   156f0:	str	r0, [r1]
   156f4:	ldr	r0, [fp, #-16]
   156f8:	bl	14110 <__assert_fail@plt+0x3228>
   156fc:	ldr	r0, [fp, #-12]
   15700:	ldr	r0, [r0, #48]	; 0x30
   15704:	cmp	r0, #0
   15708:	bne	15758 <__assert_fail@plt+0x4870>
   1570c:	ldr	r0, [fp, #-8]
   15710:	bl	16d54 <__assert_fail@plt+0x5e6c>
   15714:	cmp	r0, #0
   15718:	beq	15738 <__assert_fail@plt+0x4850>
   1571c:	ldr	r0, [fp, #-8]
   15720:	ldr	r1, [r0, #48]	; 0x30
   15724:	orr	r1, r1, #8192	; 0x2000
   15728:	str	r1, [r0, #48]	; 0x30
   1572c:	movw	r0, #0
   15730:	str	r0, [fp, #-4]
   15734:	b	15c24 <__assert_fail@plt+0x4d3c>
   15738:	ldr	r0, [fp, #-8]
   1573c:	bl	151f0 <__assert_fail@plt+0x4308>
   15740:	ldr	r0, [fp, #-8]
   15744:	ldr	r1, [fp, #-12]
   15748:	bl	16e64 <__assert_fail@plt+0x5f7c>
   1574c:	ldr	r0, [fp, #-8]
   15750:	bl	14db4 <__assert_fail@plt+0x3ecc>
   15754:	b	158c0 <__assert_fail@plt+0x49d8>
   15758:	ldr	r0, [fp, #-12]
   1575c:	ldrh	r0, [r0, #60]	; 0x3c
   15760:	cmp	r0, #4
   15764:	bne	1576c <__assert_fail@plt+0x4884>
   15768:	b	1561c <__assert_fail@plt+0x4734>
   1576c:	ldr	r0, [fp, #-12]
   15770:	ldrh	r0, [r0, #60]	; 0x3c
   15774:	cmp	r0, #2
   15778:	bne	1581c <__assert_fail@plt+0x4934>
   1577c:	ldr	r0, [fp, #-8]
   15780:	ldr	r1, [fp, #-12]
   15784:	movw	r2, #1
   15788:	and	r2, r2, #1
   1578c:	bl	149d4 <__assert_fail@plt+0x3aec>
   15790:	ldr	r1, [fp, #-12]
   15794:	strh	r0, [r1, #56]	; 0x38
   15798:	ldr	r0, [fp, #-12]
   1579c:	ldrh	r0, [r0, #56]	; 0x38
   157a0:	cmp	r0, #1
   157a4:	bne	15810 <__assert_fail@plt+0x4928>
   157a8:	ldr	r0, [fp, #-8]
   157ac:	ldr	r0, [r0, #48]	; 0x30
   157b0:	and	r0, r0, #4
   157b4:	cmp	r0, #0
   157b8:	bne	15810 <__assert_fail@plt+0x4928>
   157bc:	ldr	r0, [fp, #-8]
   157c0:	movw	r1, #49651	; 0xc1f3
   157c4:	movt	r1, #1
   157c8:	bl	14e90 <__assert_fail@plt+0x3fa8>
   157cc:	ldr	r1, [fp, #-12]
   157d0:	str	r0, [r1, #36]	; 0x24
   157d4:	cmp	r0, #0
   157d8:	bge	157fc <__assert_fail@plt+0x4914>
   157dc:	bl	10dec <__errno_location@plt>
   157e0:	ldr	r0, [r0]
   157e4:	ldr	r1, [fp, #-12]
   157e8:	str	r0, [r1, #32]
   157ec:	ldr	r0, [fp, #-12]
   157f0:	movw	r1, #7
   157f4:	strh	r1, [r0, #56]	; 0x38
   157f8:	b	1580c <__assert_fail@plt+0x4924>
   157fc:	ldr	r0, [fp, #-12]
   15800:	ldrh	r1, [r0, #58]	; 0x3a
   15804:	orr	r1, r1, #2
   15808:	strh	r1, [r0, #58]	; 0x3a
   1580c:	b	15810 <__assert_fail@plt+0x4928>
   15810:	ldr	r0, [fp, #-12]
   15814:	movw	r1, #3
   15818:	strh	r1, [r0, #60]	; 0x3c
   1581c:	b	15820 <__assert_fail@plt+0x4938>
   15820:	ldr	r0, [fp, #-8]
   15824:	ldr	r0, [r0, #24]
   15828:	ldr	r1, [fp, #-12]
   1582c:	ldr	r1, [r1, #4]
   15830:	ldr	r1, [r1, #28]
   15834:	ldr	r2, [fp, #-12]
   15838:	ldr	r2, [r2, #4]
   1583c:	ldr	r2, [r2, #40]	; 0x28
   15840:	sub	r2, r2, #1
   15844:	add	r1, r1, r2
   15848:	ldrb	r1, [r1]
   1584c:	cmp	r1, #47	; 0x2f
   15850:	str	r0, [sp, #12]
   15854:	bne	15870 <__assert_fail@plt+0x4988>
   15858:	ldr	r0, [fp, #-12]
   1585c:	ldr	r0, [r0, #4]
   15860:	ldr	r0, [r0, #40]	; 0x28
   15864:	sub	r0, r0, #1
   15868:	str	r0, [sp, #8]
   1586c:	b	15880 <__assert_fail@plt+0x4998>
   15870:	ldr	r0, [fp, #-12]
   15874:	ldr	r0, [r0, #4]
   15878:	ldr	r0, [r0, #40]	; 0x28
   1587c:	str	r0, [sp, #8]
   15880:	ldr	r0, [sp, #8]
   15884:	ldr	r1, [sp, #12]
   15888:	add	r0, r1, r0
   1588c:	str	r0, [sp, #16]
   15890:	ldr	r0, [sp, #16]
   15894:	add	r2, r0, #1
   15898:	str	r2, [sp, #16]
   1589c:	movw	r2, #47	; 0x2f
   158a0:	strb	r2, [r0]
   158a4:	ldr	r0, [sp, #16]
   158a8:	ldr	r2, [fp, #-12]
   158ac:	add	r1, r2, #168	; 0xa8
   158b0:	ldr	r2, [fp, #-12]
   158b4:	ldr	r2, [r2, #52]	; 0x34
   158b8:	add	r2, r2, #1
   158bc:	bl	10cd8 <memmove@plt>
   158c0:	ldr	r0, [fp, #-12]
   158c4:	ldr	r1, [fp, #-8]
   158c8:	str	r0, [r1]
   158cc:	ldr	r0, [fp, #-12]
   158d0:	ldrh	r0, [r0, #56]	; 0x38
   158d4:	cmp	r0, #11
   158d8:	bne	15950 <__assert_fail@plt+0x4a68>
   158dc:	ldr	r0, [fp, #-12]
   158e0:	ldr	r1, [r0, #112]	; 0x70
   158e4:	ldr	r0, [r0, #116]	; 0x74
   158e8:	eor	r1, r1, #2
   158ec:	orr	r0, r1, r0
   158f0:	cmp	r0, #0
   158f4:	bne	1591c <__assert_fail@plt+0x4a34>
   158f8:	b	158fc <__assert_fail@plt+0x4a14>
   158fc:	ldr	r0, [fp, #-8]
   15900:	ldr	r1, [fp, #-12]
   15904:	movw	r2, #0
   15908:	and	r2, r2, #1
   1590c:	bl	149d4 <__assert_fail@plt+0x3aec>
   15910:	ldr	r1, [fp, #-12]
   15914:	strh	r0, [r1, #56]	; 0x38
   15918:	b	1594c <__assert_fail@plt+0x4a64>
   1591c:	b	15920 <__assert_fail@plt+0x4a38>
   15920:	ldr	r0, [fp, #-12]
   15924:	ldr	r1, [r0, #112]	; 0x70
   15928:	ldr	r0, [r0, #116]	; 0x74
   1592c:	eor	r1, r1, #1
   15930:	orr	r0, r1, r0
   15934:	cmp	r0, #0
   15938:	beq	15944 <__assert_fail@plt+0x4a5c>
   1593c:	b	15940 <__assert_fail@plt+0x4a58>
   15940:	bl	10eac <abort@plt>
   15944:	b	15948 <__assert_fail@plt+0x4a60>
   15948:	b	1594c <__assert_fail@plt+0x4a64>
   1594c:	b	15950 <__assert_fail@plt+0x4a68>
   15950:	ldr	r0, [fp, #-12]
   15954:	ldrh	r0, [r0, #56]	; 0x38
   15958:	cmp	r0, #1
   1595c:	bne	159b8 <__assert_fail@plt+0x4ad0>
   15960:	ldr	r0, [fp, #-12]
   15964:	ldr	r0, [r0, #48]	; 0x30
   15968:	cmp	r0, #0
   1596c:	bne	15988 <__assert_fail@plt+0x4aa0>
   15970:	ldr	r0, [fp, #-12]
   15974:	ldr	r1, [r0, #64]	; 0x40
   15978:	ldr	r0, [r0, #68]	; 0x44
   1597c:	ldr	r2, [fp, #-8]
   15980:	str	r0, [r2, #20]
   15984:	str	r1, [r2, #16]
   15988:	ldr	r0, [fp, #-8]
   1598c:	ldr	r1, [fp, #-12]
   15990:	bl	16f44 <__assert_fail@plt+0x605c>
   15994:	tst	r0, #1
   15998:	bne	159b4 <__assert_fail@plt+0x4acc>
   1599c:	bl	10dec <__errno_location@plt>
   159a0:	movw	r1, #12
   159a4:	str	r1, [r0]
   159a8:	movw	r0, #0
   159ac:	str	r0, [fp, #-4]
   159b0:	b	15c24 <__assert_fail@plt+0x4d3c>
   159b4:	b	159b8 <__assert_fail@plt+0x4ad0>
   159b8:	ldr	r0, [fp, #-12]
   159bc:	str	r0, [fp, #-4]
   159c0:	b	15c24 <__assert_fail@plt+0x4d3c>
   159c4:	b	159c8 <__assert_fail@plt+0x4ae0>
   159c8:	ldr	r0, [fp, #-16]
   159cc:	ldr	r0, [r0, #4]
   159d0:	str	r0, [fp, #-12]
   159d4:	ldr	r0, [fp, #-12]
   159d8:	ldr	r1, [fp, #-8]
   159dc:	str	r0, [r1]
   159e0:	ldr	r0, [fp, #-16]
   159e4:	bl	14110 <__assert_fail@plt+0x3228>
   159e8:	ldr	r0, [fp, #-12]
   159ec:	ldr	r0, [r0, #48]	; 0x30
   159f0:	cmn	r0, #1
   159f4:	bne	15a1c <__assert_fail@plt+0x4b34>
   159f8:	ldr	r0, [fp, #-12]
   159fc:	bl	14110 <__assert_fail@plt+0x3228>
   15a00:	bl	10dec <__errno_location@plt>
   15a04:	movw	r1, #0
   15a08:	str	r1, [r0]
   15a0c:	ldr	r0, [fp, #-8]
   15a10:	str	r1, [r0]
   15a14:	str	r1, [fp, #-4]
   15a18:	b	15c24 <__assert_fail@plt+0x4d3c>
   15a1c:	b	15a20 <__assert_fail@plt+0x4b38>
   15a20:	ldr	r0, [fp, #-12]
   15a24:	ldrh	r0, [r0, #56]	; 0x38
   15a28:	cmp	r0, #11
   15a2c:	bne	15a34 <__assert_fail@plt+0x4b4c>
   15a30:	bl	10eac <abort@plt>
   15a34:	b	15a38 <__assert_fail@plt+0x4b50>
   15a38:	ldr	r0, [fp, #-8]
   15a3c:	ldr	r0, [r0, #24]
   15a40:	ldr	r1, [fp, #-12]
   15a44:	ldr	r1, [r1, #40]	; 0x28
   15a48:	add	r0, r0, r1
   15a4c:	movw	r1, #0
   15a50:	strb	r1, [r0]
   15a54:	ldr	r0, [fp, #-12]
   15a58:	ldr	r0, [r0, #48]	; 0x30
   15a5c:	cmp	r0, #0
   15a60:	bne	15a98 <__assert_fail@plt+0x4bb0>
   15a64:	ldr	r0, [fp, #-8]
   15a68:	bl	16d54 <__assert_fail@plt+0x5e6c>
   15a6c:	cmp	r0, #0
   15a70:	beq	15a94 <__assert_fail@plt+0x4bac>
   15a74:	bl	10dec <__errno_location@plt>
   15a78:	ldr	r0, [r0]
   15a7c:	ldr	r1, [fp, #-12]
   15a80:	str	r0, [r1, #32]
   15a84:	ldr	r0, [fp, #-8]
   15a88:	ldr	r1, [r0, #48]	; 0x30
   15a8c:	orr	r1, r1, #8192	; 0x2000
   15a90:	str	r1, [r0, #48]	; 0x30
   15a94:	b	15b94 <__assert_fail@plt+0x4cac>
   15a98:	ldr	r0, [fp, #-12]
   15a9c:	ldrh	r0, [r0, #58]	; 0x3a
   15aa0:	and	r0, r0, #2
   15aa4:	cmp	r0, #0
   15aa8:	beq	15b34 <__assert_fail@plt+0x4c4c>
   15aac:	ldr	r0, [fp, #-8]
   15ab0:	ldr	r0, [r0, #48]	; 0x30
   15ab4:	and	r0, r0, #4
   15ab8:	cmp	r0, #0
   15abc:	bne	15b24 <__assert_fail@plt+0x4c3c>
   15ac0:	ldr	r0, [fp, #-8]
   15ac4:	ldr	r0, [r0, #48]	; 0x30
   15ac8:	and	r0, r0, #512	; 0x200
   15acc:	cmp	r0, #0
   15ad0:	beq	15af0 <__assert_fail@plt+0x4c08>
   15ad4:	ldr	r0, [fp, #-8]
   15ad8:	ldr	r1, [fp, #-12]
   15adc:	ldr	r1, [r1, #36]	; 0x24
   15ae0:	movw	r2, #1
   15ae4:	and	r2, r2, #1
   15ae8:	bl	170a4 <__assert_fail@plt+0x61bc>
   15aec:	b	15b24 <__assert_fail@plt+0x4c3c>
   15af0:	ldr	r0, [fp, #-12]
   15af4:	ldr	r0, [r0, #36]	; 0x24
   15af8:	bl	10e70 <fchdir@plt>
   15afc:	cmp	r0, #0
   15b00:	beq	15b24 <__assert_fail@plt+0x4c3c>
   15b04:	bl	10dec <__errno_location@plt>
   15b08:	ldr	r0, [r0]
   15b0c:	ldr	r1, [fp, #-12]
   15b10:	str	r0, [r1, #32]
   15b14:	ldr	r0, [fp, #-8]
   15b18:	ldr	r1, [r0, #48]	; 0x30
   15b1c:	orr	r1, r1, #8192	; 0x2000
   15b20:	str	r1, [r0, #48]	; 0x30
   15b24:	ldr	r0, [fp, #-12]
   15b28:	ldr	r0, [r0, #36]	; 0x24
   15b2c:	bl	10eb8 <close@plt>
   15b30:	b	15b90 <__assert_fail@plt+0x4ca8>
   15b34:	ldr	r0, [fp, #-12]
   15b38:	ldrh	r0, [r0, #58]	; 0x3a
   15b3c:	and	r0, r0, #1
   15b40:	cmp	r0, #0
   15b44:	bne	15b8c <__assert_fail@plt+0x4ca4>
   15b48:	ldr	r0, [fp, #-8]
   15b4c:	ldr	r1, [fp, #-12]
   15b50:	ldr	r1, [r1, #4]
   15b54:	mvn	r2, #0
   15b58:	movw	r3, #49650	; 0xc1f2
   15b5c:	movt	r3, #1
   15b60:	bl	15dd0 <__assert_fail@plt+0x4ee8>
   15b64:	cmp	r0, #0
   15b68:	beq	15b8c <__assert_fail@plt+0x4ca4>
   15b6c:	bl	10dec <__errno_location@plt>
   15b70:	ldr	r0, [r0]
   15b74:	ldr	r1, [fp, #-12]
   15b78:	str	r0, [r1, #32]
   15b7c:	ldr	r0, [fp, #-8]
   15b80:	ldr	r1, [r0, #48]	; 0x30
   15b84:	orr	r1, r1, #8192	; 0x2000
   15b88:	str	r1, [r0, #48]	; 0x30
   15b8c:	b	15b90 <__assert_fail@plt+0x4ca8>
   15b90:	b	15b94 <__assert_fail@plt+0x4cac>
   15b94:	ldr	r0, [fp, #-12]
   15b98:	ldrh	r0, [r0, #56]	; 0x38
   15b9c:	cmp	r0, #2
   15ba0:	beq	15bf4 <__assert_fail@plt+0x4d0c>
   15ba4:	ldr	r0, [fp, #-12]
   15ba8:	ldr	r0, [r0, #32]
   15bac:	cmp	r0, #0
   15bb0:	movw	r0, #0
   15bb4:	movne	r0, #1
   15bb8:	tst	r0, #1
   15bbc:	movw	r0, #7
   15bc0:	moveq	r0, #6
   15bc4:	ldr	r1, [fp, #-12]
   15bc8:	strh	r0, [r1, #56]	; 0x38
   15bcc:	ldr	r0, [fp, #-12]
   15bd0:	ldr	r0, [r0, #32]
   15bd4:	cmp	r0, #0
   15bd8:	bne	15bf0 <__assert_fail@plt+0x4d08>
   15bdc:	b	15be0 <__assert_fail@plt+0x4cf8>
   15be0:	ldr	r0, [fp, #-8]
   15be4:	ldr	r1, [fp, #-12]
   15be8:	bl	15c30 <__assert_fail@plt+0x4d48>
   15bec:	b	15bf0 <__assert_fail@plt+0x4d08>
   15bf0:	b	15bf4 <__assert_fail@plt+0x4d0c>
   15bf4:	ldr	r0, [fp, #-8]
   15bf8:	ldr	r0, [r0, #48]	; 0x30
   15bfc:	and	r0, r0, #8192	; 0x2000
   15c00:	cmp	r0, #0
   15c04:	beq	15c14 <__assert_fail@plt+0x4d2c>
   15c08:	movw	r0, #0
   15c0c:	str	r0, [sp, #4]
   15c10:	b	15c1c <__assert_fail@plt+0x4d34>
   15c14:	ldr	r0, [fp, #-12]
   15c18:	str	r0, [sp, #4]
   15c1c:	ldr	r0, [sp, #4]
   15c20:	str	r0, [fp, #-4]
   15c24:	ldr	r0, [fp, #-4]
   15c28:	mov	sp, fp
   15c2c:	pop	{fp, pc}
   15c30:	push	{fp, lr}
   15c34:	mov	fp, sp
   15c38:	sub	sp, sp, #48	; 0x30
   15c3c:	str	r0, [fp, #-4]
   15c40:	str	r1, [fp, #-8]
   15c44:	ldr	r0, [fp, #-8]
   15c48:	add	r0, r0, #64	; 0x40
   15c4c:	str	r0, [fp, #-12]
   15c50:	ldr	r0, [fp, #-4]
   15c54:	ldr	r0, [r0, #48]	; 0x30
   15c58:	movw	r1, #258	; 0x102
   15c5c:	and	r0, r0, r1
   15c60:	cmp	r0, #0
   15c64:	beq	15cc4 <__assert_fail@plt+0x4ddc>
   15c68:	ldr	r0, [fp, #-12]
   15c6c:	ldr	r1, [r0]
   15c70:	ldr	r0, [r0, #4]
   15c74:	str	r0, [sp, #12]
   15c78:	str	r1, [sp, #8]
   15c7c:	ldr	r0, [fp, #-12]
   15c80:	ldr	r1, [r0, #96]	; 0x60
   15c84:	ldr	r0, [r0, #100]	; 0x64
   15c88:	str	r0, [sp, #20]
   15c8c:	str	r1, [sp, #16]
   15c90:	ldr	r0, [fp, #-4]
   15c94:	ldr	r0, [r0, #56]	; 0x38
   15c98:	add	r1, sp, #8
   15c9c:	bl	1a9c4 <__assert_fail@plt+0x9adc>
   15ca0:	str	r0, [sp, #4]
   15ca4:	ldr	r0, [sp, #4]
   15ca8:	movw	r1, #0
   15cac:	cmp	r0, r1
   15cb0:	bne	15cb8 <__assert_fail@plt+0x4dd0>
   15cb4:	bl	10eac <abort@plt>
   15cb8:	ldr	r0, [sp, #4]
   15cbc:	bl	14110 <__assert_fail@plt+0x3228>
   15cc0:	b	15dc8 <__assert_fail@plt+0x4ee0>
   15cc4:	ldr	r0, [fp, #-8]
   15cc8:	ldr	r0, [r0, #4]
   15ccc:	str	r0, [sp]
   15cd0:	ldr	r0, [sp]
   15cd4:	movw	r1, #0
   15cd8:	cmp	r0, r1
   15cdc:	beq	15dc4 <__assert_fail@plt+0x4edc>
   15ce0:	ldr	r0, [sp]
   15ce4:	ldr	r0, [r0, #48]	; 0x30
   15ce8:	movw	r1, #0
   15cec:	cmp	r1, r0
   15cf0:	bgt	15dc4 <__assert_fail@plt+0x4edc>
   15cf4:	b	15cf8 <__assert_fail@plt+0x4e10>
   15cf8:	ldr	r0, [fp, #-4]
   15cfc:	ldr	r0, [r0, #56]	; 0x38
   15d00:	ldr	r1, [r0, #16]
   15d04:	ldr	r0, [r0, #20]
   15d08:	orr	r0, r1, r0
   15d0c:	cmp	r0, #0
   15d10:	bne	15d1c <__assert_fail@plt+0x4e34>
   15d14:	b	15d18 <__assert_fail@plt+0x4e30>
   15d18:	bl	10eac <abort@plt>
   15d1c:	ldr	r0, [fp, #-4]
   15d20:	ldr	r0, [r0, #56]	; 0x38
   15d24:	ldr	r1, [r0]
   15d28:	ldr	r0, [r0, #4]
   15d2c:	ldr	r2, [fp, #-12]
   15d30:	ldr	r3, [r2, #96]	; 0x60
   15d34:	ldr	r2, [r2, #100]	; 0x64
   15d38:	eor	r0, r0, r2
   15d3c:	eor	r1, r1, r3
   15d40:	orr	r0, r1, r0
   15d44:	cmp	r0, #0
   15d48:	bne	15dbc <__assert_fail@plt+0x4ed4>
   15d4c:	b	15d50 <__assert_fail@plt+0x4e68>
   15d50:	ldr	r0, [fp, #-4]
   15d54:	ldr	r0, [r0, #56]	; 0x38
   15d58:	ldr	r1, [r0, #8]
   15d5c:	ldr	r0, [r0, #12]
   15d60:	ldr	r2, [fp, #-12]
   15d64:	ldr	r3, [r2]
   15d68:	ldr	r2, [r2, #4]
   15d6c:	eor	r0, r0, r2
   15d70:	eor	r1, r1, r3
   15d74:	orr	r0, r1, r0
   15d78:	cmp	r0, #0
   15d7c:	bne	15dbc <__assert_fail@plt+0x4ed4>
   15d80:	b	15d84 <__assert_fail@plt+0x4e9c>
   15d84:	ldr	r0, [sp]
   15d88:	ldr	r1, [r0, #64]	; 0x40
   15d8c:	ldr	r0, [r0, #68]	; 0x44
   15d90:	ldr	r2, [fp, #-4]
   15d94:	ldr	r2, [r2, #56]	; 0x38
   15d98:	str	r0, [r2, #12]
   15d9c:	str	r1, [r2, #8]
   15da0:	ldr	r0, [sp]
   15da4:	ldr	r1, [r0, #160]	; 0xa0
   15da8:	ldr	r0, [r0, #164]	; 0xa4
   15dac:	ldr	r2, [fp, #-4]
   15db0:	ldr	r2, [r2, #56]	; 0x38
   15db4:	str	r0, [r2, #4]
   15db8:	str	r1, [r2]
   15dbc:	b	15dc0 <__assert_fail@plt+0x4ed8>
   15dc0:	b	15dc4 <__assert_fail@plt+0x4edc>
   15dc4:	b	15dc8 <__assert_fail@plt+0x4ee0>
   15dc8:	mov	sp, fp
   15dcc:	pop	{fp, pc}
   15dd0:	push	{fp, lr}
   15dd4:	mov	fp, sp
   15dd8:	sub	sp, sp, #160	; 0xa0
   15ddc:	str	r0, [fp, #-8]
   15de0:	str	r1, [fp, #-12]
   15de4:	str	r2, [fp, #-16]
   15de8:	str	r3, [fp, #-20]	; 0xffffffec
   15dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   15df0:	movw	r1, #0
   15df4:	cmp	r0, r1
   15df8:	movw	r0, #0
   15dfc:	str	r0, [sp, #8]
   15e00:	beq	15e24 <__assert_fail@plt+0x4f3c>
   15e04:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e08:	movw	r1, #49650	; 0xc1f2
   15e0c:	movt	r1, #1
   15e10:	bl	10ca8 <strcmp@plt>
   15e14:	cmp	r0, #0
   15e18:	movw	r0, #0
   15e1c:	moveq	r0, #1
   15e20:	str	r0, [sp, #8]
   15e24:	ldr	r0, [sp, #8]
   15e28:	and	r0, r0, #1
   15e2c:	strb	r0, [fp, #-25]	; 0xffffffe7
   15e30:	ldr	r0, [fp, #-8]
   15e34:	ldr	r0, [r0, #48]	; 0x30
   15e38:	and	r0, r0, #4
   15e3c:	cmp	r0, #0
   15e40:	beq	15e7c <__assert_fail@plt+0x4f94>
   15e44:	ldr	r0, [fp, #-8]
   15e48:	ldr	r0, [r0, #48]	; 0x30
   15e4c:	and	r0, r0, #512	; 0x200
   15e50:	cmp	r0, #0
   15e54:	beq	15e70 <__assert_fail@plt+0x4f88>
   15e58:	ldr	r0, [fp, #-16]
   15e5c:	movw	r1, #0
   15e60:	cmp	r1, r0
   15e64:	bgt	15e70 <__assert_fail@plt+0x4f88>
   15e68:	ldr	r0, [fp, #-16]
   15e6c:	bl	10eb8 <close@plt>
   15e70:	movw	r0, #0
   15e74:	str	r0, [fp, #-4]
   15e78:	b	16084 <__assert_fail@plt+0x519c>
   15e7c:	ldr	r0, [fp, #-16]
   15e80:	cmp	r0, #0
   15e84:	bge	15ef4 <__assert_fail@plt+0x500c>
   15e88:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15e8c:	tst	r0, #1
   15e90:	beq	15ef4 <__assert_fail@plt+0x500c>
   15e94:	ldr	r0, [fp, #-8]
   15e98:	ldr	r0, [r0, #48]	; 0x30
   15e9c:	and	r0, r0, #512	; 0x200
   15ea0:	cmp	r0, #0
   15ea4:	beq	15ef4 <__assert_fail@plt+0x500c>
   15ea8:	ldr	r0, [fp, #-8]
   15eac:	add	r0, r0, #60	; 0x3c
   15eb0:	bl	1adf4 <__assert_fail@plt+0x9f0c>
   15eb4:	tst	r0, #1
   15eb8:	bne	15ef0 <__assert_fail@plt+0x5008>
   15ebc:	ldr	r0, [fp, #-8]
   15ec0:	add	r0, r0, #60	; 0x3c
   15ec4:	bl	1aec4 <__assert_fail@plt+0x9fdc>
   15ec8:	str	r0, [fp, #-36]	; 0xffffffdc
   15ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ed0:	movw	r1, #0
   15ed4:	cmp	r1, r0
   15ed8:	bgt	15eec <__assert_fail@plt+0x5004>
   15edc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ee0:	str	r0, [fp, #-16]
   15ee4:	movw	r0, #0
   15ee8:	str	r0, [fp, #-20]	; 0xffffffec
   15eec:	b	15ef0 <__assert_fail@plt+0x5008>
   15ef0:	b	15ef4 <__assert_fail@plt+0x500c>
   15ef4:	ldr	r0, [fp, #-16]
   15ef8:	str	r0, [fp, #-32]	; 0xffffffe0
   15efc:	ldr	r0, [fp, #-16]
   15f00:	cmp	r0, #0
   15f04:	bge	15f2c <__assert_fail@plt+0x5044>
   15f08:	ldr	r0, [fp, #-8]
   15f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f10:	bl	14e90 <__assert_fail@plt+0x3fa8>
   15f14:	str	r0, [fp, #-32]	; 0xffffffe0
   15f18:	cmp	r0, #0
   15f1c:	bge	15f2c <__assert_fail@plt+0x5044>
   15f20:	mvn	r0, #0
   15f24:	str	r0, [fp, #-4]
   15f28:	b	16084 <__assert_fail@plt+0x519c>
   15f2c:	ldr	r0, [fp, #-8]
   15f30:	ldr	r0, [r0, #48]	; 0x30
   15f34:	and	r0, r0, #2
   15f38:	cmp	r0, #0
   15f3c:	bne	15f68 <__assert_fail@plt+0x5080>
   15f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f44:	movw	r1, #0
   15f48:	cmp	r0, r1
   15f4c:	beq	15ffc <__assert_fail@plt+0x5114>
   15f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f54:	movw	r1, #49650	; 0xc1f2
   15f58:	movt	r1, #1
   15f5c:	bl	10ca8 <strcmp@plt>
   15f60:	cmp	r0, #0
   15f64:	bne	15ffc <__assert_fail@plt+0x5114>
   15f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f6c:	add	r1, sp, #16
   15f70:	bl	1c088 <__assert_fail@plt+0xb1a0>
   15f74:	cmp	r0, #0
   15f78:	beq	15f88 <__assert_fail@plt+0x50a0>
   15f7c:	mvn	r0, #0
   15f80:	str	r0, [fp, #-24]	; 0xffffffe8
   15f84:	b	16044 <__assert_fail@plt+0x515c>
   15f88:	ldr	r0, [fp, #-12]
   15f8c:	ldr	r1, [r0, #64]	; 0x40
   15f90:	ldr	r0, [r0, #68]	; 0x44
   15f94:	ldr	r2, [sp, #16]
   15f98:	ldr	r3, [sp, #20]
   15f9c:	eor	r0, r0, r3
   15fa0:	eor	r1, r1, r2
   15fa4:	orr	r0, r1, r0
   15fa8:	cmp	r0, #0
   15fac:	bne	15fe0 <__assert_fail@plt+0x50f8>
   15fb0:	b	15fb4 <__assert_fail@plt+0x50cc>
   15fb4:	ldr	r0, [fp, #-12]
   15fb8:	ldr	r1, [r0, #160]	; 0xa0
   15fbc:	ldr	r0, [r0, #164]	; 0xa4
   15fc0:	ldr	r2, [sp, #112]	; 0x70
   15fc4:	ldr	r3, [sp, #116]	; 0x74
   15fc8:	eor	r0, r0, r3
   15fcc:	eor	r1, r1, r2
   15fd0:	orr	r0, r1, r0
   15fd4:	cmp	r0, #0
   15fd8:	beq	15ff8 <__assert_fail@plt+0x5110>
   15fdc:	b	15fe0 <__assert_fail@plt+0x50f8>
   15fe0:	bl	10dec <__errno_location@plt>
   15fe4:	movw	r1, #2
   15fe8:	str	r1, [r0]
   15fec:	mvn	r0, #0
   15ff0:	str	r0, [fp, #-24]	; 0xffffffe8
   15ff4:	b	16044 <__assert_fail@plt+0x515c>
   15ff8:	b	15ffc <__assert_fail@plt+0x5114>
   15ffc:	ldr	r0, [fp, #-8]
   16000:	ldr	r0, [r0, #48]	; 0x30
   16004:	and	r0, r0, #512	; 0x200
   16008:	cmp	r0, #0
   1600c:	beq	16038 <__assert_fail@plt+0x5150>
   16010:	ldr	r0, [fp, #-8]
   16014:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16018:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   1601c:	mvn	r3, #0
   16020:	eor	r2, r2, r3
   16024:	and	r2, r2, #1
   16028:	bl	170a4 <__assert_fail@plt+0x61bc>
   1602c:	movw	r0, #0
   16030:	str	r0, [fp, #-4]
   16034:	b	16084 <__assert_fail@plt+0x519c>
   16038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1603c:	bl	10e70 <fchdir@plt>
   16040:	str	r0, [fp, #-24]	; 0xffffffe8
   16044:	ldr	r0, [fp, #-16]
   16048:	cmp	r0, #0
   1604c:	bge	1607c <__assert_fail@plt+0x5194>
   16050:	bl	10dec <__errno_location@plt>
   16054:	ldr	r0, [r0]
   16058:	str	r0, [sp, #12]
   1605c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16060:	bl	10eb8 <close@plt>
   16064:	ldr	r1, [sp, #12]
   16068:	str	r0, [sp, #4]
   1606c:	str	r1, [sp]
   16070:	bl	10dec <__errno_location@plt>
   16074:	ldr	r1, [sp]
   16078:	str	r1, [r0]
   1607c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16080:	str	r0, [fp, #-4]
   16084:	ldr	r0, [fp, #-4]
   16088:	mov	sp, fp
   1608c:	pop	{fp, pc}
   16090:	push	{fp, lr}
   16094:	mov	fp, sp
   16098:	sub	sp, sp, #152	; 0x98
   1609c:	str	r0, [fp, #-8]
   160a0:	str	r1, [fp, #-12]
   160a4:	ldr	r0, [fp, #-8]
   160a8:	ldr	r0, [r0]
   160ac:	str	r0, [fp, #-68]	; 0xffffffbc
   160b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160b4:	ldr	r0, [r0, #12]
   160b8:	movw	r1, #0
   160bc:	cmp	r0, r1
   160c0:	movw	r0, #0
   160c4:	movne	r0, #1
   160c8:	mvn	r1, #0
   160cc:	eor	r0, r0, r1
   160d0:	eor	r0, r0, r1
   160d4:	and	r0, r0, #1
   160d8:	strb	r0, [fp, #-69]	; 0xffffffbb
   160dc:	movw	r0, #0
   160e0:	strb	r0, [fp, #-70]	; 0xffffffba
   160e4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   160e8:	tst	r0, #1
   160ec:	beq	16168 <__assert_fail@plt+0x5280>
   160f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160f4:	ldr	r0, [r0, #12]
   160f8:	str	r0, [sp, #72]	; 0x48
   160fc:	ldr	r0, [sp, #72]	; 0x48
   16100:	bl	10e4c <dirfd@plt>
   16104:	str	r0, [fp, #-64]	; 0xffffffc0
   16108:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1610c:	cmp	r0, #0
   16110:	bge	16164 <__assert_fail@plt+0x527c>
   16114:	b	16118 <__assert_fail@plt+0x5230>
   16118:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1611c:	ldr	r0, [r0, #12]
   16120:	bl	10ed0 <closedir@plt>
   16124:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16128:	movw	r2, #0
   1612c:	str	r2, [r1, #12]
   16130:	ldr	r0, [fp, #-12]
   16134:	cmp	r0, #3
   16138:	bne	16158 <__assert_fail@plt+0x5270>
   1613c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16140:	movw	r1, #4
   16144:	strh	r1, [r0, #56]	; 0x38
   16148:	bl	10dec <__errno_location@plt>
   1614c:	ldr	r0, [r0]
   16150:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16154:	str	r0, [r1, #32]
   16158:	movw	r0, #0
   1615c:	str	r0, [fp, #-4]
   16160:	b	16d44 <__assert_fail@plt+0x5e5c>
   16164:	b	16340 <__assert_fail@plt+0x5458>
   16168:	ldr	r0, [fp, #-8]
   1616c:	ldr	r0, [r0, #48]	; 0x30
   16170:	and	r0, r0, #4
   16174:	cmp	r0, #0
   16178:	bne	161a0 <__assert_fail@plt+0x52b8>
   1617c:	ldr	r0, [fp, #-8]
   16180:	ldr	r0, [r0, #48]	; 0x30
   16184:	and	r0, r0, #512	; 0x200
   16188:	cmp	r0, #0
   1618c:	beq	161a0 <__assert_fail@plt+0x52b8>
   16190:	ldr	r0, [fp, #-8]
   16194:	ldr	r0, [r0, #32]
   16198:	str	r0, [sp, #56]	; 0x38
   1619c:	b	161ac <__assert_fail@plt+0x52c4>
   161a0:	mvn	r0, #99	; 0x63
   161a4:	str	r0, [sp, #56]	; 0x38
   161a8:	b	161ac <__assert_fail@plt+0x52c4>
   161ac:	ldr	r0, [sp, #56]	; 0x38
   161b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   161b4:	ldr	r1, [r1, #24]
   161b8:	ldr	r2, [fp, #-8]
   161bc:	ldr	r2, [r2, #48]	; 0x30
   161c0:	and	r2, r2, #16
   161c4:	cmp	r2, #0
   161c8:	movw	r2, #0
   161cc:	str	r0, [sp, #52]	; 0x34
   161d0:	str	r1, [sp, #48]	; 0x30
   161d4:	str	r2, [sp, #44]	; 0x2c
   161d8:	beq	16220 <__assert_fail@plt+0x5338>
   161dc:	ldr	r0, [fp, #-8]
   161e0:	ldr	r0, [r0, #48]	; 0x30
   161e4:	and	r0, r0, #1
   161e8:	cmp	r0, #0
   161ec:	movw	r0, #0
   161f0:	str	r0, [sp, #40]	; 0x28
   161f4:	beq	16210 <__assert_fail@plt+0x5328>
   161f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   161fc:	ldr	r0, [r0, #48]	; 0x30
   16200:	cmp	r0, #0
   16204:	movw	r0, #0
   16208:	moveq	r0, #1
   1620c:	str	r0, [sp, #40]	; 0x28
   16210:	ldr	r0, [sp, #40]	; 0x28
   16214:	mvn	r1, #0
   16218:	eor	r0, r0, r1
   1621c:	str	r0, [sp, #44]	; 0x2c
   16220:	ldr	r0, [sp, #44]	; 0x2c
   16224:	tst	r0, #1
   16228:	movw	r0, #32768	; 0x8000
   1622c:	moveq	r0, #0
   16230:	ldr	r1, [sp, #52]	; 0x34
   16234:	str	r0, [sp, #36]	; 0x24
   16238:	mov	r0, r1
   1623c:	ldr	r1, [sp, #48]	; 0x30
   16240:	ldr	r2, [sp, #36]	; 0x24
   16244:	sub	r3, fp, #64	; 0x40
   16248:	bl	1b184 <__assert_fail@plt+0xa29c>
   1624c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16250:	str	r0, [r1, #12]
   16254:	movw	r1, #0
   16258:	cmp	r0, r1
   1625c:	bne	16294 <__assert_fail@plt+0x53ac>
   16260:	ldr	r0, [fp, #-12]
   16264:	cmp	r0, #3
   16268:	bne	16288 <__assert_fail@plt+0x53a0>
   1626c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16270:	movw	r1, #4
   16274:	strh	r1, [r0, #56]	; 0x38
   16278:	bl	10dec <__errno_location@plt>
   1627c:	ldr	r0, [r0]
   16280:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16284:	str	r0, [r1, #32]
   16288:	movw	r0, #0
   1628c:	str	r0, [fp, #-4]
   16290:	b	16d44 <__assert_fail@plt+0x5e5c>
   16294:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16298:	ldrh	r0, [r0, #56]	; 0x38
   1629c:	cmp	r0, #11
   162a0:	bne	162c4 <__assert_fail@plt+0x53dc>
   162a4:	ldr	r0, [fp, #-8]
   162a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   162ac:	movw	r2, #0
   162b0:	and	r2, r2, #1
   162b4:	bl	149d4 <__assert_fail@plt+0x3aec>
   162b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   162bc:	strh	r0, [r1, #56]	; 0x38
   162c0:	b	1633c <__assert_fail@plt+0x5454>
   162c4:	ldr	r0, [fp, #-8]
   162c8:	ldr	r0, [r0, #48]	; 0x30
   162cc:	and	r0, r0, #256	; 0x100
   162d0:	cmp	r0, #0
   162d4:	beq	16338 <__assert_fail@plt+0x5450>
   162d8:	b	162dc <__assert_fail@plt+0x53f4>
   162dc:	ldr	r0, [fp, #-8]
   162e0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   162e4:	bl	15c30 <__assert_fail@plt+0x4d48>
   162e8:	ldr	r0, [fp, #-8]
   162ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   162f0:	movw	r2, #0
   162f4:	and	r2, r2, #1
   162f8:	bl	149d4 <__assert_fail@plt+0x3aec>
   162fc:	ldr	r1, [fp, #-8]
   16300:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16304:	str	r0, [sp, #32]
   16308:	mov	r0, r1
   1630c:	mov	r1, r2
   16310:	bl	16f44 <__assert_fail@plt+0x605c>
   16314:	tst	r0, #1
   16318:	bne	16334 <__assert_fail@plt+0x544c>
   1631c:	bl	10dec <__errno_location@plt>
   16320:	movw	r1, #12
   16324:	str	r1, [r0]
   16328:	movw	r0, #0
   1632c:	str	r0, [fp, #-4]
   16330:	b	16d44 <__assert_fail@plt+0x5e5c>
   16334:	b	16338 <__assert_fail@plt+0x5450>
   16338:	b	1633c <__assert_fail@plt+0x5454>
   1633c:	b	16340 <__assert_fail@plt+0x5458>
   16340:	ldr	r0, [pc, #2568]	; 16d50 <__assert_fail@plt+0x5e68>
   16344:	ldr	r1, [fp, #-8]
   16348:	ldr	r1, [r1, #44]	; 0x2c
   1634c:	movw	r2, #0
   16350:	cmp	r1, r2
   16354:	movw	r1, #0
   16358:	movne	r1, #1
   1635c:	tst	r1, #1
   16360:	mvn	r1, #0
   16364:	movne	r0, r1
   16368:	str	r0, [sp, #76]	; 0x4c
   1636c:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   16370:	tst	r0, #1
   16374:	beq	16384 <__assert_fail@plt+0x549c>
   16378:	movw	r0, #1
   1637c:	strb	r0, [fp, #-37]	; 0xffffffdb
   16380:	b	16548 <__assert_fail@plt+0x5660>
   16384:	ldr	r0, [fp, #-12]
   16388:	cmp	r0, #2
   1638c:	movw	r0, #0
   16390:	str	r0, [sp, #28]
   16394:	beq	16430 <__assert_fail@plt+0x5548>
   16398:	ldr	r0, [fp, #-8]
   1639c:	ldr	r0, [r0, #48]	; 0x30
   163a0:	and	r0, r0, #8
   163a4:	cmp	r0, #0
   163a8:	movw	r0, #0
   163ac:	str	r0, [sp, #24]
   163b0:	beq	16420 <__assert_fail@plt+0x5538>
   163b4:	ldr	r0, [fp, #-8]
   163b8:	ldr	r0, [r0, #48]	; 0x30
   163bc:	and	r0, r0, #16
   163c0:	cmp	r0, #0
   163c4:	movw	r0, #0
   163c8:	str	r0, [sp, #24]
   163cc:	beq	16420 <__assert_fail@plt+0x5538>
   163d0:	ldr	r0, [fp, #-8]
   163d4:	ldr	r0, [r0, #48]	; 0x30
   163d8:	and	r0, r0, #32
   163dc:	cmp	r0, #0
   163e0:	movw	r0, #0
   163e4:	str	r0, [sp, #24]
   163e8:	bne	16420 <__assert_fail@plt+0x5538>
   163ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163f0:	ldr	r0, [r0, #84]	; 0x54
   163f4:	cmp	r0, #2
   163f8:	movw	r0, #0
   163fc:	str	r0, [sp, #24]
   16400:	bne	16420 <__assert_fail@plt+0x5538>
   16404:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16408:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1640c:	bl	17518 <__assert_fail@plt+0x6630>
   16410:	cmp	r0, #0
   16414:	movw	r0, #0
   16418:	movne	r0, #1
   1641c:	str	r0, [sp, #24]
   16420:	ldr	r0, [sp, #24]
   16424:	mvn	r1, #0
   16428:	eor	r0, r0, r1
   1642c:	str	r0, [sp, #28]
   16430:	ldr	r0, [sp, #28]
   16434:	and	r0, r0, #1
   16438:	strb	r0, [fp, #-37]	; 0xffffffdb
   1643c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16440:	tst	r0, #1
   16444:	bne	16454 <__assert_fail@plt+0x556c>
   16448:	ldr	r0, [fp, #-12]
   1644c:	cmp	r0, #3
   16450:	bne	16544 <__assert_fail@plt+0x565c>
   16454:	ldr	r0, [fp, #-8]
   16458:	ldr	r0, [r0, #48]	; 0x30
   1645c:	and	r0, r0, #512	; 0x200
   16460:	cmp	r0, #0
   16464:	beq	1647c <__assert_fail@plt+0x5594>
   16468:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1646c:	movw	r1, #1030	; 0x406
   16470:	movw	r2, #3
   16474:	bl	1b944 <__assert_fail@plt+0xaa5c>
   16478:	str	r0, [fp, #-64]	; 0xffffffc0
   1647c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16480:	cmp	r0, #0
   16484:	blt	164a4 <__assert_fail@plt+0x55bc>
   16488:	ldr	r0, [fp, #-8]
   1648c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16490:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16494:	movw	r3, #0
   16498:	bl	15dd0 <__assert_fail@plt+0x4ee8>
   1649c:	cmp	r0, #0
   164a0:	beq	16538 <__assert_fail@plt+0x5650>
   164a4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   164a8:	tst	r0, #1
   164ac:	beq	164cc <__assert_fail@plt+0x55e4>
   164b0:	ldr	r0, [fp, #-12]
   164b4:	cmp	r0, #3
   164b8:	bne	164cc <__assert_fail@plt+0x55e4>
   164bc:	bl	10dec <__errno_location@plt>
   164c0:	ldr	r0, [r0]
   164c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   164c8:	str	r0, [r1, #32]
   164cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164d0:	ldrh	r1, [r0, #58]	; 0x3a
   164d4:	orr	r1, r1, #1
   164d8:	strh	r1, [r0, #58]	; 0x3a
   164dc:	movw	r0, #0
   164e0:	strb	r0, [fp, #-37]	; 0xffffffdb
   164e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164e8:	ldr	r0, [r0, #12]
   164ec:	bl	10ed0 <closedir@plt>
   164f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   164f4:	movw	r2, #0
   164f8:	str	r2, [r1, #12]
   164fc:	ldr	r0, [fp, #-8]
   16500:	ldr	r0, [r0, #48]	; 0x30
   16504:	and	r0, r0, #512	; 0x200
   16508:	cmp	r0, #0
   1650c:	beq	16528 <__assert_fail@plt+0x5640>
   16510:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16514:	movw	r1, #0
   16518:	cmp	r1, r0
   1651c:	bgt	16528 <__assert_fail@plt+0x5640>
   16520:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16524:	bl	10eb8 <close@plt>
   16528:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1652c:	movw	r1, #0
   16530:	str	r1, [r0, #12]
   16534:	b	16540 <__assert_fail@plt+0x5658>
   16538:	movw	r0, #1
   1653c:	strb	r0, [fp, #-37]	; 0xffffffdb
   16540:	b	16544 <__assert_fail@plt+0x565c>
   16544:	b	16548 <__assert_fail@plt+0x5660>
   16548:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1654c:	ldr	r0, [r0, #28]
   16550:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16554:	ldr	r1, [r1, #40]	; 0x28
   16558:	sub	r1, r1, #1
   1655c:	add	r0, r0, r1
   16560:	ldrb	r0, [r0]
   16564:	cmp	r0, #47	; 0x2f
   16568:	bne	16580 <__assert_fail@plt+0x5698>
   1656c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16570:	ldr	r0, [r0, #40]	; 0x28
   16574:	sub	r0, r0, #1
   16578:	str	r0, [sp, #20]
   1657c:	b	1658c <__assert_fail@plt+0x56a4>
   16580:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16584:	ldr	r0, [r0, #40]	; 0x28
   16588:	str	r0, [sp, #20]
   1658c:	ldr	r0, [sp, #20]
   16590:	str	r0, [fp, #-48]	; 0xffffffd0
   16594:	ldr	r0, [fp, #-8]
   16598:	ldr	r0, [r0, #48]	; 0x30
   1659c:	and	r0, r0, #4
   165a0:	cmp	r0, #0
   165a4:	beq	165d4 <__assert_fail@plt+0x56ec>
   165a8:	ldr	r0, [fp, #-8]
   165ac:	ldr	r0, [r0, #24]
   165b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   165b4:	add	r0, r0, r1
   165b8:	str	r0, [fp, #-60]	; 0xffffffc4
   165bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   165c0:	add	r1, r0, #1
   165c4:	str	r1, [fp, #-60]	; 0xffffffc4
   165c8:	movw	r1, #47	; 0x2f
   165cc:	strb	r1, [r0]
   165d0:	b	165dc <__assert_fail@plt+0x56f4>
   165d4:	movw	r0, #0
   165d8:	str	r0, [fp, #-60]	; 0xffffffc4
   165dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165e0:	add	r0, r0, #1
   165e4:	str	r0, [fp, #-48]	; 0xffffffd0
   165e8:	ldr	r0, [fp, #-8]
   165ec:	ldr	r0, [r0, #36]	; 0x24
   165f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   165f4:	sub	r0, r0, r1
   165f8:	str	r0, [fp, #-52]	; 0xffffffcc
   165fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16600:	ldr	r0, [r0, #48]	; 0x30
   16604:	add	r0, r0, #1
   16608:	str	r0, [fp, #-44]	; 0xffffffd4
   1660c:	movw	r0, #0
   16610:	strb	r0, [fp, #-38]	; 0xffffffda
   16614:	movw	r0, #0
   16618:	str	r0, [fp, #-20]	; 0xffffffec
   1661c:	str	r0, [fp, #-28]	; 0xffffffe4
   16620:	str	r0, [fp, #-24]	; 0xffffffe8
   16624:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16628:	ldr	r0, [r0, #12]
   1662c:	movw	r1, #0
   16630:	cmp	r0, r1
   16634:	beq	16b2c <__assert_fail@plt+0x5c44>
   16638:	bl	10dec <__errno_location@plt>
   1663c:	movw	r1, #0
   16640:	str	r1, [r0]
   16644:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16648:	ldr	r0, [r0, #12]
   1664c:	bl	10e34 <readdir64@plt>
   16650:	str	r0, [sp, #64]	; 0x40
   16654:	ldr	r0, [sp, #64]	; 0x40
   16658:	movw	r1, #0
   1665c:	cmp	r0, r1
   16660:	bne	166c8 <__assert_fail@plt+0x57e0>
   16664:	bl	10dec <__errno_location@plt>
   16668:	ldr	r0, [r0]
   1666c:	cmp	r0, #0
   16670:	beq	166c4 <__assert_fail@plt+0x57dc>
   16674:	bl	10dec <__errno_location@plt>
   16678:	ldr	r0, [r0]
   1667c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16680:	str	r0, [r1, #32]
   16684:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   16688:	tst	r0, #1
   1668c:	movw	r0, #1
   16690:	str	r0, [sp, #16]
   16694:	bne	166ac <__assert_fail@plt+0x57c4>
   16698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1669c:	cmp	r0, #0
   166a0:	movw	r0, #0
   166a4:	movne	r0, #1
   166a8:	str	r0, [sp, #16]
   166ac:	ldr	r0, [sp, #16]
   166b0:	tst	r0, #1
   166b4:	movw	r0, #7
   166b8:	moveq	r0, #4
   166bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   166c0:	strh	r0, [r1, #56]	; 0x38
   166c4:	b	16b2c <__assert_fail@plt+0x5c44>
   166c8:	ldr	r0, [fp, #-8]
   166cc:	ldr	r0, [r0, #48]	; 0x30
   166d0:	and	r0, r0, #32
   166d4:	cmp	r0, #0
   166d8:	bne	16720 <__assert_fail@plt+0x5838>
   166dc:	ldr	r0, [sp, #64]	; 0x40
   166e0:	ldrb	r0, [r0, #19]
   166e4:	cmp	r0, #46	; 0x2e
   166e8:	bne	16720 <__assert_fail@plt+0x5838>
   166ec:	ldr	r0, [sp, #64]	; 0x40
   166f0:	ldrsb	r0, [r0, #20]
   166f4:	cmp	r0, #0
   166f8:	beq	1671c <__assert_fail@plt+0x5834>
   166fc:	ldr	r0, [sp, #64]	; 0x40
   16700:	ldrb	r0, [r0, #20]
   16704:	cmp	r0, #46	; 0x2e
   16708:	bne	16720 <__assert_fail@plt+0x5838>
   1670c:	ldr	r0, [sp, #64]	; 0x40
   16710:	ldrsb	r0, [r0, #21]
   16714:	cmp	r0, #0
   16718:	bne	16720 <__assert_fail@plt+0x5838>
   1671c:	b	16624 <__assert_fail@plt+0x573c>
   16720:	ldr	r0, [sp, #64]	; 0x40
   16724:	add	r0, r0, #19
   16728:	bl	10dbc <strlen@plt>
   1672c:	str	r0, [sp, #68]	; 0x44
   16730:	ldr	r0, [fp, #-8]
   16734:	ldr	r1, [sp, #64]	; 0x40
   16738:	add	r1, r1, #19
   1673c:	ldr	r2, [sp, #68]	; 0x44
   16740:	bl	14884 <__assert_fail@plt+0x399c>
   16744:	str	r0, [fp, #-16]
   16748:	ldr	r0, [fp, #-16]
   1674c:	movw	r1, #0
   16750:	cmp	r0, r1
   16754:	bne	1675c <__assert_fail@plt+0x5874>
   16758:	b	1679c <__assert_fail@plt+0x58b4>
   1675c:	ldr	r0, [sp, #68]	; 0x44
   16760:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16764:	cmp	r0, r1
   16768:	bcc	16868 <__assert_fail@plt+0x5980>
   1676c:	ldr	r0, [fp, #-8]
   16770:	ldr	r0, [r0, #24]
   16774:	str	r0, [fp, #-32]	; 0xffffffe0
   16778:	ldr	r0, [fp, #-8]
   1677c:	ldr	r1, [sp, #68]	; 0x44
   16780:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16784:	add	r1, r1, r2
   16788:	add	r1, r1, #1
   1678c:	bl	1478c <__assert_fail@plt+0x38a4>
   16790:	tst	r0, #1
   16794:	bne	1680c <__assert_fail@plt+0x5924>
   16798:	b	1679c <__assert_fail@plt+0x58b4>
   1679c:	bl	10dec <__errno_location@plt>
   167a0:	ldr	r0, [r0]
   167a4:	str	r0, [fp, #-36]	; 0xffffffdc
   167a8:	ldr	r0, [fp, #-16]
   167ac:	bl	14110 <__assert_fail@plt+0x3228>
   167b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167b4:	bl	14f2c <__assert_fail@plt+0x4044>
   167b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   167bc:	ldr	r0, [r0, #12]
   167c0:	bl	10ed0 <closedir@plt>
   167c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   167c8:	movw	r2, #0
   167cc:	str	r2, [r1, #12]
   167d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   167d4:	movw	r1, #7
   167d8:	strh	r1, [r0, #56]	; 0x38
   167dc:	ldr	r0, [fp, #-8]
   167e0:	ldr	r1, [r0, #48]	; 0x30
   167e4:	orr	r1, r1, #8192	; 0x2000
   167e8:	str	r1, [r0, #48]	; 0x30
   167ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   167f0:	str	r0, [sp, #12]
   167f4:	bl	10dec <__errno_location@plt>
   167f8:	ldr	r1, [sp, #12]
   167fc:	str	r1, [r0]
   16800:	movw	r0, #0
   16804:	str	r0, [fp, #-4]
   16808:	b	16d44 <__assert_fail@plt+0x5e5c>
   1680c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16810:	ldr	r1, [fp, #-8]
   16814:	ldr	r1, [r1, #24]
   16818:	cmp	r0, r1
   1681c:	beq	16854 <__assert_fail@plt+0x596c>
   16820:	movw	r0, #1
   16824:	strb	r0, [fp, #-38]	; 0xffffffda
   16828:	ldr	r0, [fp, #-8]
   1682c:	ldr	r0, [r0, #48]	; 0x30
   16830:	and	r0, r0, #4
   16834:	cmp	r0, #0
   16838:	beq	16850 <__assert_fail@plt+0x5968>
   1683c:	ldr	r0, [fp, #-8]
   16840:	ldr	r0, [r0, #24]
   16844:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16848:	add	r0, r0, r1
   1684c:	str	r0, [fp, #-60]	; 0xffffffc4
   16850:	b	16854 <__assert_fail@plt+0x596c>
   16854:	ldr	r0, [fp, #-8]
   16858:	ldr	r0, [r0, #36]	; 0x24
   1685c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16860:	sub	r0, r0, r1
   16864:	str	r0, [fp, #-52]	; 0xffffffcc
   16868:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1686c:	ldr	r1, [sp, #68]	; 0x44
   16870:	add	r0, r0, r1
   16874:	str	r0, [fp, #-56]	; 0xffffffc8
   16878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1687c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16880:	cmp	r0, r1
   16884:	bcs	168e4 <__assert_fail@plt+0x59fc>
   16888:	ldr	r0, [fp, #-16]
   1688c:	bl	14110 <__assert_fail@plt+0x3228>
   16890:	ldr	r0, [fp, #-20]	; 0xffffffec
   16894:	bl	14f2c <__assert_fail@plt+0x4044>
   16898:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1689c:	ldr	r0, [r0, #12]
   168a0:	bl	10ed0 <closedir@plt>
   168a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   168a8:	movw	r2, #0
   168ac:	str	r2, [r1, #12]
   168b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   168b4:	movw	r1, #7
   168b8:	strh	r1, [r0, #56]	; 0x38
   168bc:	ldr	r0, [fp, #-8]
   168c0:	ldr	r1, [r0, #48]	; 0x30
   168c4:	orr	r1, r1, #8192	; 0x2000
   168c8:	str	r1, [r0, #48]	; 0x30
   168cc:	bl	10dec <__errno_location@plt>
   168d0:	movw	r1, #36	; 0x24
   168d4:	str	r1, [r0]
   168d8:	movw	r0, #0
   168dc:	str	r0, [fp, #-4]
   168e0:	b	16d44 <__assert_fail@plt+0x5e5c>
   168e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168e8:	ldr	r1, [fp, #-16]
   168ec:	str	r0, [r1, #48]	; 0x30
   168f0:	ldr	r0, [fp, #-8]
   168f4:	ldr	r0, [r0]
   168f8:	ldr	r1, [fp, #-16]
   168fc:	str	r0, [r1, #4]
   16900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16904:	ldr	r1, [fp, #-16]
   16908:	str	r0, [r1, #40]	; 0x28
   1690c:	ldr	r0, [sp, #64]	; 0x40
   16910:	ldr	r1, [r0]
   16914:	ldr	r0, [r0, #4]
   16918:	ldr	r2, [fp, #-16]
   1691c:	str	r0, [r2, #164]	; 0xa4
   16920:	str	r1, [r2, #160]	; 0xa0
   16924:	ldr	r0, [fp, #-8]
   16928:	ldr	r0, [r0, #48]	; 0x30
   1692c:	and	r0, r0, #4
   16930:	cmp	r0, #0
   16934:	beq	16968 <__assert_fail@plt+0x5a80>
   16938:	ldr	r0, [fp, #-16]
   1693c:	ldr	r0, [r0, #28]
   16940:	ldr	r1, [fp, #-16]
   16944:	str	r0, [r1, #24]
   16948:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1694c:	ldr	r1, [fp, #-16]
   16950:	add	r1, r1, #168	; 0xa8
   16954:	ldr	r2, [fp, #-16]
   16958:	ldr	r2, [r2, #52]	; 0x34
   1695c:	add	r2, r2, #1
   16960:	bl	10cd8 <memmove@plt>
   16964:	b	16978 <__assert_fail@plt+0x5a90>
   16968:	ldr	r0, [fp, #-16]
   1696c:	add	r0, r0, #168	; 0xa8
   16970:	ldr	r1, [fp, #-16]
   16974:	str	r0, [r1, #24]
   16978:	ldr	r0, [fp, #-8]
   1697c:	ldr	r0, [r0, #44]	; 0x2c
   16980:	movw	r1, #0
   16984:	cmp	r0, r1
   16988:	beq	169a0 <__assert_fail@plt+0x5ab8>
   1698c:	ldr	r0, [fp, #-8]
   16990:	ldr	r0, [r0, #48]	; 0x30
   16994:	and	r0, r0, #1024	; 0x400
   16998:	cmp	r0, #0
   1699c:	beq	16a78 <__assert_fail@plt+0x5b90>
   169a0:	ldr	r0, [fp, #-8]
   169a4:	ldr	r0, [r0, #48]	; 0x30
   169a8:	and	r0, r0, #8
   169ac:	cmp	r0, #0
   169b0:	movw	r0, #0
   169b4:	str	r0, [sp, #8]
   169b8:	beq	16a30 <__assert_fail@plt+0x5b48>
   169bc:	ldr	r0, [sp, #64]	; 0x40
   169c0:	ldrb	r0, [r0, #18]
   169c4:	cmp	r0, #0
   169c8:	movw	r0, #0
   169cc:	str	r0, [sp, #8]
   169d0:	beq	16a30 <__assert_fail@plt+0x5b48>
   169d4:	ldr	r0, [sp, #64]	; 0x40
   169d8:	ldrb	r0, [r0, #18]
   169dc:	cmp	r0, #4
   169e0:	movw	r0, #0
   169e4:	str	r0, [sp, #8]
   169e8:	beq	16a30 <__assert_fail@plt+0x5b48>
   169ec:	ldr	r0, [fp, #-8]
   169f0:	ldr	r0, [r0, #48]	; 0x30
   169f4:	and	r0, r0, #16
   169f8:	cmp	r0, #0
   169fc:	movw	r0, #1
   16a00:	str	r0, [sp, #4]
   16a04:	bne	16a28 <__assert_fail@plt+0x5b40>
   16a08:	ldr	r0, [sp, #64]	; 0x40
   16a0c:	ldrb	r0, [r0, #18]
   16a10:	cmp	r0, #10
   16a14:	movw	r0, #0
   16a18:	moveq	r0, #1
   16a1c:	mvn	r1, #0
   16a20:	eor	r0, r0, r1
   16a24:	str	r0, [sp, #4]
   16a28:	ldr	r0, [sp, #4]
   16a2c:	str	r0, [sp, #8]
   16a30:	ldr	r0, [sp, #8]
   16a34:	and	r0, r0, #1
   16a38:	strb	r0, [sp, #63]	; 0x3f
   16a3c:	ldr	r0, [fp, #-16]
   16a40:	movw	r1, #11
   16a44:	strh	r1, [r0, #56]	; 0x38
   16a48:	ldr	r0, [fp, #-16]
   16a4c:	add	r0, r0, #64	; 0x40
   16a50:	ldr	r1, [sp, #64]	; 0x40
   16a54:	ldrb	r1, [r1, #18]
   16a58:	bl	175d4 <__assert_fail@plt+0x66ec>
   16a5c:	ldr	r0, [fp, #-16]
   16a60:	ldrb	r1, [sp, #63]	; 0x3f
   16a64:	mvn	r2, #0
   16a68:	eor	r1, r1, r2
   16a6c:	and	r1, r1, #1
   16a70:	bl	1497c <__assert_fail@plt+0x3a94>
   16a74:	b	16a94 <__assert_fail@plt+0x5bac>
   16a78:	ldr	r0, [fp, #-8]
   16a7c:	ldr	r1, [fp, #-16]
   16a80:	movw	r2, #0
   16a84:	and	r2, r2, #1
   16a88:	bl	149d4 <__assert_fail@plt+0x3aec>
   16a8c:	ldr	r1, [fp, #-16]
   16a90:	strh	r0, [r1, #56]	; 0x38
   16a94:	ldr	r0, [fp, #-16]
   16a98:	movw	r1, #0
   16a9c:	str	r1, [r0, #8]
   16aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16aa4:	cmp	r0, r1
   16aa8:	bne	16abc <__assert_fail@plt+0x5bd4>
   16aac:	ldr	r0, [fp, #-16]
   16ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ab4:	str	r0, [fp, #-20]	; 0xffffffec
   16ab8:	b	16ad0 <__assert_fail@plt+0x5be8>
   16abc:	ldr	r0, [fp, #-16]
   16ac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ac4:	str	r0, [r1, #8]
   16ac8:	ldr	r0, [fp, #-16]
   16acc:	str	r0, [fp, #-28]	; 0xffffffe4
   16ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad4:	movw	r1, #10000	; 0x2710
   16ad8:	cmp	r0, r1
   16adc:	bne	16b08 <__assert_fail@plt+0x5c20>
   16ae0:	ldr	r0, [fp, #-8]
   16ae4:	ldr	r0, [r0, #44]	; 0x2c
   16ae8:	movw	r1, #0
   16aec:	cmp	r0, r1
   16af0:	bne	16b08 <__assert_fail@plt+0x5c20>
   16af4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16af8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16afc:	bl	176a4 <__assert_fail@plt+0x67bc>
   16b00:	and	r0, r0, #1
   16b04:	strb	r0, [fp, #-70]	; 0xffffffba
   16b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b0c:	add	r0, r0, #1
   16b10:	str	r0, [fp, #-24]	; 0xffffffe8
   16b14:	ldr	r0, [sp, #76]	; 0x4c
   16b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b1c:	cmp	r0, r1
   16b20:	bhi	16b28 <__assert_fail@plt+0x5c40>
   16b24:	b	16b64 <__assert_fail@plt+0x5c7c>
   16b28:	b	16624 <__assert_fail@plt+0x573c>
   16b2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16b30:	ldr	r0, [r0, #12]
   16b34:	movw	r1, #0
   16b38:	cmp	r0, r1
   16b3c:	beq	16b60 <__assert_fail@plt+0x5c78>
   16b40:	b	16b44 <__assert_fail@plt+0x5c5c>
   16b44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16b48:	ldr	r0, [r0, #12]
   16b4c:	bl	10ed0 <closedir@plt>
   16b50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16b54:	movw	r2, #0
   16b58:	str	r2, [r1, #12]
   16b5c:	b	16b60 <__assert_fail@plt+0x5c78>
   16b60:	b	16b64 <__assert_fail@plt+0x5c7c>
   16b64:	ldrb	r0, [fp, #-38]	; 0xffffffda
   16b68:	tst	r0, #1
   16b6c:	beq	16b7c <__assert_fail@plt+0x5c94>
   16b70:	ldr	r0, [fp, #-8]
   16b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b78:	bl	17738 <__assert_fail@plt+0x6850>
   16b7c:	ldr	r0, [fp, #-8]
   16b80:	ldr	r0, [r0, #48]	; 0x30
   16b84:	and	r0, r0, #4
   16b88:	cmp	r0, #0
   16b8c:	beq	16bcc <__assert_fail@plt+0x5ce4>
   16b90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b94:	ldr	r1, [fp, #-8]
   16b98:	ldr	r1, [r1, #36]	; 0x24
   16b9c:	cmp	r0, r1
   16ba0:	beq	16bb0 <__assert_fail@plt+0x5cc8>
   16ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	cmp	r0, #0
   16bac:	bne	16bc0 <__assert_fail@plt+0x5cd8>
   16bb0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16bb4:	mvn	r1, #0
   16bb8:	add	r0, r0, r1
   16bbc:	str	r0, [fp, #-60]	; 0xffffffc4
   16bc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16bc4:	movw	r1, #0
   16bc8:	strb	r1, [r0]
   16bcc:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   16bd0:	tst	r0, #1
   16bd4:	bne	16c74 <__assert_fail@plt+0x5d8c>
   16bd8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16bdc:	tst	r0, #1
   16be0:	beq	16c74 <__assert_fail@plt+0x5d8c>
   16be4:	ldr	r0, [fp, #-12]
   16be8:	cmp	r0, #1
   16bec:	beq	16bfc <__assert_fail@plt+0x5d14>
   16bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf4:	cmp	r0, #0
   16bf8:	bne	16c74 <__assert_fail@plt+0x5d8c>
   16bfc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c00:	ldr	r0, [r0, #48]	; 0x30
   16c04:	cmp	r0, #0
   16c08:	bne	16c20 <__assert_fail@plt+0x5d38>
   16c0c:	ldr	r0, [fp, #-8]
   16c10:	bl	16d54 <__assert_fail@plt+0x5e6c>
   16c14:	cmp	r0, #0
   16c18:	bne	16c44 <__assert_fail@plt+0x5d5c>
   16c1c:	b	16c74 <__assert_fail@plt+0x5d8c>
   16c20:	ldr	r0, [fp, #-8]
   16c24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16c28:	ldr	r1, [r1, #4]
   16c2c:	mvn	r2, #0
   16c30:	movw	r3, #49650	; 0xc1f2
   16c34:	movt	r3, #1
   16c38:	bl	15dd0 <__assert_fail@plt+0x4ee8>
   16c3c:	cmp	r0, #0
   16c40:	beq	16c74 <__assert_fail@plt+0x5d8c>
   16c44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c48:	movw	r1, #7
   16c4c:	strh	r1, [r0, #56]	; 0x38
   16c50:	ldr	r0, [fp, #-8]
   16c54:	ldr	r1, [r0, #48]	; 0x30
   16c58:	orr	r1, r1, #8192	; 0x2000
   16c5c:	str	r1, [r0, #48]	; 0x30
   16c60:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c64:	bl	14f2c <__assert_fail@plt+0x4044>
   16c68:	movw	r0, #0
   16c6c:	str	r0, [fp, #-4]
   16c70:	b	16d44 <__assert_fail@plt+0x5e5c>
   16c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c78:	cmp	r0, #0
   16c7c:	bne	16ccc <__assert_fail@plt+0x5de4>
   16c80:	ldr	r0, [fp, #-12]
   16c84:	cmp	r0, #3
   16c88:	bne	16cb8 <__assert_fail@plt+0x5dd0>
   16c8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c90:	ldrh	r0, [r0, #56]	; 0x38
   16c94:	cmp	r0, #4
   16c98:	beq	16cb8 <__assert_fail@plt+0x5dd0>
   16c9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16ca0:	ldrh	r0, [r0, #56]	; 0x38
   16ca4:	cmp	r0, #7
   16ca8:	beq	16cb8 <__assert_fail@plt+0x5dd0>
   16cac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16cb0:	movw	r1, #6
   16cb4:	strh	r1, [r0, #56]	; 0x38
   16cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cbc:	bl	14f2c <__assert_fail@plt+0x4044>
   16cc0:	movw	r0, #0
   16cc4:	str	r0, [fp, #-4]
   16cc8:	b	16d44 <__assert_fail@plt+0x5e5c>
   16ccc:	ldrb	r0, [fp, #-70]	; 0xffffffba
   16cd0:	tst	r0, #1
   16cd4:	beq	16d08 <__assert_fail@plt+0x5e20>
   16cd8:	ldr	r0, [fp, #-8]
   16cdc:	movw	r1, #30836	; 0x7874
   16ce0:	movt	r1, #1
   16ce4:	str	r1, [r0, #44]	; 0x2c
   16ce8:	ldr	r0, [fp, #-8]
   16cec:	ldr	r1, [fp, #-20]	; 0xffffffec
   16cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16cf4:	bl	14bec <__assert_fail@plt+0x3d04>
   16cf8:	str	r0, [fp, #-20]	; 0xffffffec
   16cfc:	ldr	r0, [fp, #-8]
   16d00:	movw	r1, #0
   16d04:	str	r1, [r0, #44]	; 0x2c
   16d08:	ldr	r0, [fp, #-8]
   16d0c:	ldr	r0, [r0, #44]	; 0x2c
   16d10:	movw	r1, #0
   16d14:	cmp	r0, r1
   16d18:	beq	16d3c <__assert_fail@plt+0x5e54>
   16d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d20:	cmp	r0, #1
   16d24:	bls	16d3c <__assert_fail@plt+0x5e54>
   16d28:	ldr	r0, [fp, #-8]
   16d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16d34:	bl	14bec <__assert_fail@plt+0x3d04>
   16d38:	str	r0, [fp, #-20]	; 0xffffffec
   16d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d40:	str	r0, [fp, #-4]
   16d44:	ldr	r0, [fp, #-4]
   16d48:	mov	sp, fp
   16d4c:	pop	{fp, pc}
   16d50:	andeq	r8, r1, r0, lsr #13
   16d54:	push	{fp, lr}
   16d58:	mov	fp, sp
   16d5c:	sub	sp, sp, #32
   16d60:	str	r0, [fp, #-4]
   16d64:	ldr	r0, [fp, #-4]
   16d68:	ldr	r0, [r0, #48]	; 0x30
   16d6c:	and	r0, r0, #4
   16d70:	cmp	r0, #0
   16d74:	movw	r0, #0
   16d78:	str	r0, [fp, #-12]
   16d7c:	bne	16e40 <__assert_fail@plt+0x5f58>
   16d80:	ldr	r0, [fp, #-4]
   16d84:	ldr	r0, [r0, #48]	; 0x30
   16d88:	and	r0, r0, #512	; 0x200
   16d8c:	cmp	r0, #0
   16d90:	beq	16df4 <__assert_fail@plt+0x5f0c>
   16d94:	ldr	r0, [fp, #-4]
   16d98:	ldr	r1, [fp, #-4]
   16d9c:	ldr	r1, [r1, #48]	; 0x30
   16da0:	and	r1, r1, #512	; 0x200
   16da4:	cmp	r1, #0
   16da8:	str	r0, [sp, #16]
   16dac:	beq	16dbc <__assert_fail@plt+0x5ed4>
   16db0:	mvn	r0, #99	; 0x63
   16db4:	str	r0, [sp, #12]
   16db8:	b	16dc8 <__assert_fail@plt+0x5ee0>
   16dbc:	ldr	r0, [fp, #-4]
   16dc0:	ldr	r0, [r0, #28]
   16dc4:	str	r0, [sp, #12]
   16dc8:	ldr	r0, [sp, #12]
   16dcc:	ldr	r1, [sp, #16]
   16dd0:	str	r0, [sp, #8]
   16dd4:	mov	r0, r1
   16dd8:	ldr	r1, [sp, #8]
   16ddc:	movw	r2, #1
   16de0:	and	r2, r2, #1
   16de4:	bl	170a4 <__assert_fail@plt+0x61bc>
   16de8:	movw	r0, #0
   16dec:	str	r0, [sp, #4]
   16df0:	b	16e2c <__assert_fail@plt+0x5f44>
   16df4:	ldr	r0, [fp, #-4]
   16df8:	ldr	r0, [r0, #48]	; 0x30
   16dfc:	and	r0, r0, #512	; 0x200
   16e00:	cmp	r0, #0
   16e04:	beq	16e14 <__assert_fail@plt+0x5f2c>
   16e08:	mvn	r0, #99	; 0x63
   16e0c:	str	r0, [sp]
   16e10:	b	16e20 <__assert_fail@plt+0x5f38>
   16e14:	ldr	r0, [fp, #-4]
   16e18:	ldr	r0, [r0, #28]
   16e1c:	str	r0, [sp]
   16e20:	ldr	r0, [sp]
   16e24:	bl	10e70 <fchdir@plt>
   16e28:	str	r0, [sp, #4]
   16e2c:	ldr	r0, [sp, #4]
   16e30:	cmp	r0, #0
   16e34:	movw	r0, #0
   16e38:	movne	r0, #1
   16e3c:	str	r0, [fp, #-12]
   16e40:	ldr	r0, [fp, #-12]
   16e44:	and	r0, r0, #1
   16e48:	str	r0, [fp, #-8]
   16e4c:	ldr	r0, [fp, #-4]
   16e50:	add	r0, r0, #60	; 0x3c
   16e54:	bl	15198 <__assert_fail@plt+0x42b0>
   16e58:	ldr	r0, [fp, #-8]
   16e5c:	mov	sp, fp
   16e60:	pop	{fp, pc}
   16e64:	push	{fp, lr}
   16e68:	mov	fp, sp
   16e6c:	sub	sp, sp, #16
   16e70:	str	r0, [fp, #-4]
   16e74:	str	r1, [sp, #8]
   16e78:	ldr	r0, [sp, #8]
   16e7c:	ldr	r0, [r0, #52]	; 0x34
   16e80:	ldr	r1, [sp, #8]
   16e84:	str	r0, [r1, #40]	; 0x28
   16e88:	str	r0, [sp, #4]
   16e8c:	ldr	r0, [fp, #-4]
   16e90:	ldr	r0, [r0, #24]
   16e94:	ldr	r1, [sp, #8]
   16e98:	add	r1, r1, #168	; 0xa8
   16e9c:	ldr	r2, [sp, #4]
   16ea0:	add	r2, r2, #1
   16ea4:	bl	10cd8 <memmove@plt>
   16ea8:	ldr	r0, [sp, #8]
   16eac:	add	r0, r0, #168	; 0xa8
   16eb0:	movw	r1, #47	; 0x2f
   16eb4:	bl	10e28 <strrchr@plt>
   16eb8:	str	r0, [sp]
   16ebc:	movw	r1, #0
   16ec0:	cmp	r0, r1
   16ec4:	beq	16f24 <__assert_fail@plt+0x603c>
   16ec8:	ldr	r0, [sp]
   16ecc:	ldr	r1, [sp, #8]
   16ed0:	add	r1, r1, #168	; 0xa8
   16ed4:	cmp	r0, r1
   16ed8:	bne	16eec <__assert_fail@plt+0x6004>
   16edc:	ldr	r0, [sp]
   16ee0:	ldrb	r0, [r0, #1]
   16ee4:	cmp	r0, #0
   16ee8:	beq	16f24 <__assert_fail@plt+0x603c>
   16eec:	ldr	r0, [sp]
   16ef0:	add	r0, r0, #1
   16ef4:	str	r0, [sp]
   16ef8:	bl	10dbc <strlen@plt>
   16efc:	str	r0, [sp, #4]
   16f00:	ldr	r0, [sp, #8]
   16f04:	add	r0, r0, #168	; 0xa8
   16f08:	ldr	r1, [sp]
   16f0c:	ldr	r2, [sp, #4]
   16f10:	add	r2, r2, #1
   16f14:	bl	10cd8 <memmove@plt>
   16f18:	ldr	r0, [sp, #4]
   16f1c:	ldr	r1, [sp, #8]
   16f20:	str	r0, [r1, #52]	; 0x34
   16f24:	ldr	r0, [fp, #-4]
   16f28:	ldr	r0, [r0, #24]
   16f2c:	ldr	r1, [sp, #8]
   16f30:	str	r0, [r1, #28]
   16f34:	ldr	r1, [sp, #8]
   16f38:	str	r0, [r1, #24]
   16f3c:	mov	sp, fp
   16f40:	pop	{fp, pc}
   16f44:	push	{fp, lr}
   16f48:	mov	fp, sp
   16f4c:	sub	sp, sp, #24
   16f50:	str	r0, [fp, #-8]
   16f54:	str	r1, [sp, #12]
   16f58:	ldr	r0, [fp, #-8]
   16f5c:	ldr	r0, [r0, #48]	; 0x30
   16f60:	movw	r1, #258	; 0x102
   16f64:	and	r0, r0, r1
   16f68:	cmp	r0, #0
   16f6c:	beq	17050 <__assert_fail@plt+0x6168>
   16f70:	ldr	r0, [sp, #12]
   16f74:	add	r0, r0, #64	; 0x40
   16f78:	str	r0, [sp, #8]
   16f7c:	movw	r0, #24
   16f80:	bl	1b360 <__assert_fail@plt+0xa478>
   16f84:	str	r0, [sp, #4]
   16f88:	ldr	r0, [sp, #4]
   16f8c:	movw	r1, #0
   16f90:	cmp	r0, r1
   16f94:	bne	16fa8 <__assert_fail@plt+0x60c0>
   16f98:	movw	r0, #0
   16f9c:	and	r0, r0, #1
   16fa0:	strb	r0, [fp, #-1]
   16fa4:	b	17094 <__assert_fail@plt+0x61ac>
   16fa8:	ldr	r0, [sp, #8]
   16fac:	ldr	r1, [r0]
   16fb0:	ldr	r0, [r0, #4]
   16fb4:	ldr	r2, [sp, #4]
   16fb8:	str	r0, [r2, #4]
   16fbc:	str	r1, [r2]
   16fc0:	ldr	r0, [sp, #8]
   16fc4:	ldr	r1, [r0, #96]	; 0x60
   16fc8:	ldr	r0, [r0, #100]	; 0x64
   16fcc:	ldr	r2, [sp, #4]
   16fd0:	str	r0, [r2, #12]
   16fd4:	str	r1, [r2, #8]
   16fd8:	ldr	r0, [sp, #12]
   16fdc:	ldr	r1, [sp, #4]
   16fe0:	str	r0, [r1, #16]
   16fe4:	ldr	r0, [fp, #-8]
   16fe8:	ldr	r0, [r0, #56]	; 0x38
   16fec:	ldr	r1, [sp, #4]
   16ff0:	bl	1a950 <__assert_fail@plt+0x9a68>
   16ff4:	str	r0, [sp]
   16ff8:	ldr	r0, [sp]
   16ffc:	ldr	r1, [sp, #4]
   17000:	cmp	r0, r1
   17004:	beq	1704c <__assert_fail@plt+0x6164>
   17008:	ldr	r0, [sp, #4]
   1700c:	bl	14110 <__assert_fail@plt+0x3228>
   17010:	ldr	r0, [sp]
   17014:	movw	r1, #0
   17018:	cmp	r0, r1
   1701c:	bne	17030 <__assert_fail@plt+0x6148>
   17020:	movw	r0, #0
   17024:	and	r0, r0, #1
   17028:	strb	r0, [fp, #-1]
   1702c:	b	17094 <__assert_fail@plt+0x61ac>
   17030:	ldr	r0, [sp]
   17034:	ldr	r0, [r0, #16]
   17038:	ldr	r1, [sp, #12]
   1703c:	str	r0, [r1]
   17040:	ldr	r0, [sp, #12]
   17044:	movw	r1, #2
   17048:	strh	r1, [r0, #56]	; 0x38
   1704c:	b	17088 <__assert_fail@plt+0x61a0>
   17050:	ldr	r0, [fp, #-8]
   17054:	ldr	r0, [r0, #56]	; 0x38
   17058:	ldr	r1, [sp, #12]
   1705c:	add	r1, r1, #64	; 0x40
   17060:	bl	1b784 <__assert_fail@plt+0xa89c>
   17064:	tst	r0, #1
   17068:	beq	17084 <__assert_fail@plt+0x619c>
   1706c:	ldr	r0, [sp, #12]
   17070:	ldr	r1, [sp, #12]
   17074:	str	r0, [r1]
   17078:	ldr	r0, [sp, #12]
   1707c:	movw	r1, #2
   17080:	strh	r1, [r0, #56]	; 0x38
   17084:	b	17088 <__assert_fail@plt+0x61a0>
   17088:	movw	r0, #1
   1708c:	and	r0, r0, #1
   17090:	strb	r0, [fp, #-1]
   17094:	ldrb	r0, [fp, #-1]
   17098:	and	r0, r0, #1
   1709c:	mov	sp, fp
   170a0:	pop	{fp, pc}
   170a4:	push	{fp, lr}
   170a8:	mov	fp, sp
   170ac:	sub	sp, sp, #24
   170b0:	str	r0, [fp, #-4]
   170b4:	str	r1, [fp, #-8]
   170b8:	and	r0, r2, #1
   170bc:	strb	r0, [fp, #-9]
   170c0:	ldr	r0, [fp, #-4]
   170c4:	ldr	r0, [r0, #32]
   170c8:	str	r0, [sp, #8]
   170cc:	ldr	r0, [sp, #8]
   170d0:	ldr	r1, [fp, #-8]
   170d4:	cmp	r0, r1
   170d8:	bne	170ec <__assert_fail@plt+0x6204>
   170dc:	ldr	r0, [sp, #8]
   170e0:	cmn	r0, #100	; 0x64
   170e4:	beq	170ec <__assert_fail@plt+0x6204>
   170e8:	bl	10eac <abort@plt>
   170ec:	b	170f0 <__assert_fail@plt+0x6208>
   170f0:	ldrb	r0, [fp, #-9]
   170f4:	tst	r0, #1
   170f8:	beq	1712c <__assert_fail@plt+0x6244>
   170fc:	ldr	r0, [fp, #-4]
   17100:	add	r0, r0, #60	; 0x3c
   17104:	ldr	r1, [sp, #8]
   17108:	bl	1ae10 <__assert_fail@plt+0x9f28>
   1710c:	str	r0, [sp, #4]
   17110:	ldr	r0, [sp, #4]
   17114:	movw	r1, #0
   17118:	cmp	r1, r0
   1711c:	bgt	17128 <__assert_fail@plt+0x6240>
   17120:	ldr	r0, [sp, #4]
   17124:	bl	10eb8 <close@plt>
   17128:	b	17160 <__assert_fail@plt+0x6278>
   1712c:	ldr	r0, [fp, #-4]
   17130:	ldr	r0, [r0, #48]	; 0x30
   17134:	and	r0, r0, #4
   17138:	cmp	r0, #0
   1713c:	bne	1715c <__assert_fail@plt+0x6274>
   17140:	ldr	r0, [sp, #8]
   17144:	movw	r1, #0
   17148:	cmp	r1, r0
   1714c:	bgt	17158 <__assert_fail@plt+0x6270>
   17150:	ldr	r0, [sp, #8]
   17154:	bl	10eb8 <close@plt>
   17158:	b	1715c <__assert_fail@plt+0x6274>
   1715c:	b	17160 <__assert_fail@plt+0x6278>
   17160:	ldr	r0, [fp, #-8]
   17164:	ldr	r1, [fp, #-4]
   17168:	str	r0, [r1, #32]
   1716c:	mov	sp, fp
   17170:	pop	{fp, pc}
   17174:	push	{fp, lr}
   17178:	mov	fp, sp
   1717c:	sub	sp, sp, #16
   17180:	str	r0, [sp, #8]
   17184:	str	r1, [sp, #4]
   17188:	str	r2, [sp]
   1718c:	ldr	r0, [sp]
   17190:	cmp	r0, #0
   17194:	beq	171e0 <__assert_fail@plt+0x62f8>
   17198:	ldr	r0, [sp]
   1719c:	cmp	r0, #1
   171a0:	beq	171e0 <__assert_fail@plt+0x62f8>
   171a4:	ldr	r0, [sp]
   171a8:	cmp	r0, #2
   171ac:	beq	171e0 <__assert_fail@plt+0x62f8>
   171b0:	ldr	r0, [sp]
   171b4:	cmp	r0, #3
   171b8:	beq	171e0 <__assert_fail@plt+0x62f8>
   171bc:	ldr	r0, [sp]
   171c0:	cmp	r0, #4
   171c4:	beq	171e0 <__assert_fail@plt+0x62f8>
   171c8:	bl	10dec <__errno_location@plt>
   171cc:	movw	r1, #22
   171d0:	str	r1, [r0]
   171d4:	movw	r0, #1
   171d8:	str	r0, [fp, #-4]
   171dc:	b	171f4 <__assert_fail@plt+0x630c>
   171e0:	ldr	r0, [sp]
   171e4:	ldr	r1, [sp, #4]
   171e8:	strh	r0, [r1, #60]	; 0x3c
   171ec:	movw	r0, #0
   171f0:	str	r0, [fp, #-4]
   171f4:	ldr	r0, [fp, #-4]
   171f8:	mov	sp, fp
   171fc:	pop	{fp, pc}
   17200:	push	{fp, lr}
   17204:	mov	fp, sp
   17208:	sub	sp, sp, #32
   1720c:	str	r0, [fp, #-8]
   17210:	str	r1, [fp, #-12]
   17214:	ldr	r0, [fp, #-12]
   17218:	cmp	r0, #0
   1721c:	beq	17244 <__assert_fail@plt+0x635c>
   17220:	ldr	r0, [fp, #-12]
   17224:	cmp	r0, #4096	; 0x1000
   17228:	beq	17244 <__assert_fail@plt+0x635c>
   1722c:	bl	10dec <__errno_location@plt>
   17230:	movw	r1, #22
   17234:	str	r1, [r0]
   17238:	movw	r0, #0
   1723c:	str	r0, [fp, #-4]
   17240:	b	17428 <__assert_fail@plt+0x6540>
   17244:	ldr	r0, [fp, #-8]
   17248:	ldr	r0, [r0]
   1724c:	str	r0, [sp, #16]
   17250:	bl	10dec <__errno_location@plt>
   17254:	movw	r1, #0
   17258:	str	r1, [r0]
   1725c:	ldr	r0, [fp, #-8]
   17260:	ldr	r0, [r0, #48]	; 0x30
   17264:	and	r0, r0, #8192	; 0x2000
   17268:	cmp	r0, #0
   1726c:	beq	1727c <__assert_fail@plt+0x6394>
   17270:	movw	r0, #0
   17274:	str	r0, [fp, #-4]
   17278:	b	17428 <__assert_fail@plt+0x6540>
   1727c:	ldr	r0, [sp, #16]
   17280:	ldrh	r0, [r0, #56]	; 0x38
   17284:	cmp	r0, #9
   17288:	bne	1729c <__assert_fail@plt+0x63b4>
   1728c:	ldr	r0, [sp, #16]
   17290:	ldr	r0, [r0, #8]
   17294:	str	r0, [fp, #-4]
   17298:	b	17428 <__assert_fail@plt+0x6540>
   1729c:	ldr	r0, [sp, #16]
   172a0:	ldrh	r0, [r0, #56]	; 0x38
   172a4:	cmp	r0, #1
   172a8:	beq	172b8 <__assert_fail@plt+0x63d0>
   172ac:	movw	r0, #0
   172b0:	str	r0, [fp, #-4]
   172b4:	b	17428 <__assert_fail@plt+0x6540>
   172b8:	ldr	r0, [fp, #-8]
   172bc:	ldr	r0, [r0, #4]
   172c0:	movw	r1, #0
   172c4:	cmp	r0, r1
   172c8:	beq	172d8 <__assert_fail@plt+0x63f0>
   172cc:	ldr	r0, [fp, #-8]
   172d0:	ldr	r0, [r0, #4]
   172d4:	bl	14f2c <__assert_fail@plt+0x4044>
   172d8:	ldr	r0, [fp, #-12]
   172dc:	cmp	r0, #4096	; 0x1000
   172e0:	bne	17300 <__assert_fail@plt+0x6418>
   172e4:	ldr	r0, [fp, #-8]
   172e8:	ldr	r1, [r0, #48]	; 0x30
   172ec:	orr	r1, r1, #4096	; 0x1000
   172f0:	str	r1, [r0, #48]	; 0x30
   172f4:	movw	r0, #2
   172f8:	str	r0, [fp, #-12]
   172fc:	b	17308 <__assert_fail@plt+0x6420>
   17300:	movw	r0, #1
   17304:	str	r0, [fp, #-12]
   17308:	ldr	r0, [sp, #16]
   1730c:	ldr	r0, [r0, #48]	; 0x30
   17310:	cmp	r0, #0
   17314:	bne	17340 <__assert_fail@plt+0x6458>
   17318:	ldr	r0, [sp, #16]
   1731c:	ldr	r0, [r0, #24]
   17320:	ldrb	r0, [r0]
   17324:	cmp	r0, #47	; 0x2f
   17328:	beq	17340 <__assert_fail@plt+0x6458>
   1732c:	ldr	r0, [fp, #-8]
   17330:	ldr	r0, [r0, #48]	; 0x30
   17334:	and	r0, r0, #4
   17338:	cmp	r0, #0
   1733c:	beq	1735c <__assert_fail@plt+0x6474>
   17340:	ldr	r0, [fp, #-8]
   17344:	ldr	r1, [fp, #-12]
   17348:	bl	16090 <__assert_fail@plt+0x51a8>
   1734c:	ldr	r1, [fp, #-8]
   17350:	str	r0, [r1, #4]
   17354:	str	r0, [fp, #-4]
   17358:	b	17428 <__assert_fail@plt+0x6540>
   1735c:	ldr	r0, [fp, #-8]
   17360:	movw	r1, #49651	; 0xc1f3
   17364:	movt	r1, #1
   17368:	bl	14e90 <__assert_fail@plt+0x3fa8>
   1736c:	str	r0, [sp, #12]
   17370:	cmp	r0, #0
   17374:	bge	1738c <__assert_fail@plt+0x64a4>
   17378:	ldr	r0, [fp, #-8]
   1737c:	movw	r1, #0
   17380:	str	r1, [r0, #4]
   17384:	str	r1, [fp, #-4]
   17388:	b	17428 <__assert_fail@plt+0x6540>
   1738c:	ldr	r0, [fp, #-8]
   17390:	ldr	r1, [fp, #-12]
   17394:	bl	16090 <__assert_fail@plt+0x51a8>
   17398:	ldr	r1, [fp, #-8]
   1739c:	str	r0, [r1, #4]
   173a0:	ldr	r0, [fp, #-8]
   173a4:	ldr	r0, [r0, #48]	; 0x30
   173a8:	and	r0, r0, #512	; 0x200
   173ac:	cmp	r0, #0
   173b0:	beq	173cc <__assert_fail@plt+0x64e4>
   173b4:	ldr	r0, [fp, #-8]
   173b8:	ldr	r1, [sp, #12]
   173bc:	movw	r2, #1
   173c0:	and	r2, r2, #1
   173c4:	bl	170a4 <__assert_fail@plt+0x61bc>
   173c8:	b	1741c <__assert_fail@plt+0x6534>
   173cc:	ldr	r0, [sp, #12]
   173d0:	bl	10e70 <fchdir@plt>
   173d4:	cmp	r0, #0
   173d8:	beq	17414 <__assert_fail@plt+0x652c>
   173dc:	bl	10dec <__errno_location@plt>
   173e0:	ldr	r0, [r0]
   173e4:	str	r0, [sp, #8]
   173e8:	ldr	r0, [sp, #12]
   173ec:	bl	10eb8 <close@plt>
   173f0:	ldr	r1, [sp, #8]
   173f4:	str	r0, [sp, #4]
   173f8:	str	r1, [sp]
   173fc:	bl	10dec <__errno_location@plt>
   17400:	ldr	r1, [sp]
   17404:	str	r1, [r0]
   17408:	movw	r0, #0
   1740c:	str	r0, [fp, #-4]
   17410:	b	17428 <__assert_fail@plt+0x6540>
   17414:	ldr	r0, [sp, #12]
   17418:	bl	10eb8 <close@plt>
   1741c:	ldr	r0, [fp, #-8]
   17420:	ldr	r0, [r0, #4]
   17424:	str	r0, [fp, #-4]
   17428:	ldr	r0, [fp, #-4]
   1742c:	mov	sp, fp
   17430:	pop	{fp, pc}
   17434:	push	{fp, lr}
   17438:	mov	fp, sp
   1743c:	sub	sp, sp, #24
   17440:	str	r0, [fp, #-4]
   17444:	str	r1, [fp, #-8]
   17448:	ldr	r0, [fp, #-4]
   1744c:	str	r0, [sp, #12]
   17450:	ldr	r0, [sp, #12]
   17454:	ldr	r1, [r0, #8]
   17458:	ldr	r0, [r0, #12]
   1745c:	ldr	r2, [fp, #-8]
   17460:	mov	r3, #0
   17464:	str	r0, [sp, #8]
   17468:	mov	r0, r1
   1746c:	ldr	r1, [sp, #8]
   17470:	bl	1bea0 <__assert_fail@plt+0xafb8>
   17474:	str	r0, [sp, #4]
   17478:	mov	r0, r2
   1747c:	mov	sp, fp
   17480:	pop	{fp, pc}
   17484:	sub	sp, sp, #20
   17488:	str	r0, [sp, #16]
   1748c:	str	r1, [sp, #12]
   17490:	ldr	r0, [sp, #16]
   17494:	str	r0, [sp, #8]
   17498:	ldr	r0, [sp, #12]
   1749c:	str	r0, [sp, #4]
   174a0:	ldr	r0, [sp, #8]
   174a4:	ldr	r1, [r0, #8]
   174a8:	ldr	r0, [r0, #12]
   174ac:	ldr	r2, [sp, #4]
   174b0:	ldr	r3, [r2, #8]
   174b4:	ldr	r2, [r2, #12]
   174b8:	eor	r0, r0, r2
   174bc:	eor	r1, r1, r3
   174c0:	orr	r0, r1, r0
   174c4:	mov	r1, #0
   174c8:	cmp	r0, #0
   174cc:	str	r1, [sp]
   174d0:	bne	17508 <__assert_fail@plt+0x6620>
   174d4:	b	174d8 <__assert_fail@plt+0x65f0>
   174d8:	ldr	r0, [sp, #8]
   174dc:	ldr	r1, [r0]
   174e0:	ldr	r0, [r0, #4]
   174e4:	ldr	r2, [sp, #4]
   174e8:	ldr	r3, [r2]
   174ec:	ldr	r2, [r2, #4]
   174f0:	eor	r0, r0, r2
   174f4:	eor	r1, r1, r3
   174f8:	orr	r0, r1, r0
   174fc:	clz	r0, r0
   17500:	lsr	r0, r0, #5
   17504:	str	r0, [sp]
   17508:	ldr	r0, [sp]
   1750c:	and	r0, r0, #1
   17510:	add	sp, sp, #20
   17514:	bx	lr
   17518:	push	{fp, lr}
   1751c:	mov	fp, sp
   17520:	sub	sp, sp, #16
   17524:	str	r0, [sp, #8]
   17528:	str	r1, [sp, #4]
   1752c:	ldr	r0, [sp, #8]
   17530:	ldr	r1, [sp, #4]
   17534:	bl	178e0 <__assert_fail@plt+0x69f8>
   17538:	mov	r1, r0
   1753c:	movw	r2, #19778	; 0x4d42
   17540:	movt	r2, #65363	; 0xff53
   17544:	cmp	r0, r2
   17548:	str	r1, [sp]
   1754c:	beq	175ac <__assert_fail@plt+0x66c4>
   17550:	b	17554 <__assert_fail@plt+0x666c>
   17554:	ldr	r0, [sp]
   17558:	cmp	r0, #0
   1755c:	beq	175a4 <__assert_fail@plt+0x66bc>
   17560:	b	17564 <__assert_fail@plt+0x667c>
   17564:	movw	r0, #26985	; 0x6969
   17568:	ldr	r1, [sp]
   1756c:	cmp	r1, r0
   17570:	beq	175b0 <__assert_fail@plt+0x66c8>
   17574:	b	17578 <__assert_fail@plt+0x6690>
   17578:	movw	r0, #40864	; 0x9fa0
   1757c:	ldr	r1, [sp]
   17580:	cmp	r1, r0
   17584:	beq	175b4 <__assert_fail@plt+0x66cc>
   17588:	b	1758c <__assert_fail@plt+0x66a4>
   1758c:	movw	r0, #16719	; 0x414f
   17590:	movt	r0, #21318	; 0x5346
   17594:	ldr	r1, [sp]
   17598:	cmp	r1, r0
   1759c:	beq	175a8 <__assert_fail@plt+0x66c0>
   175a0:	b	175c0 <__assert_fail@plt+0x66d8>
   175a4:	b	175a8 <__assert_fail@plt+0x66c0>
   175a8:	b	175ac <__assert_fail@plt+0x66c4>
   175ac:	b	175b0 <__assert_fail@plt+0x66c8>
   175b0:	b	175b4 <__assert_fail@plt+0x66cc>
   175b4:	movw	r0, #0
   175b8:	str	r0, [fp, #-4]
   175bc:	b	175c8 <__assert_fail@plt+0x66e0>
   175c0:	movw	r0, #1
   175c4:	str	r0, [fp, #-4]
   175c8:	ldr	r0, [fp, #-4]
   175cc:	mov	sp, fp
   175d0:	pop	{fp, pc}
   175d4:	sub	sp, sp, #16
   175d8:	str	r0, [sp, #12]
   175dc:	str	r1, [sp, #8]
   175e0:	ldr	r0, [sp, #8]
   175e4:	sub	r0, r0, #1
   175e8:	cmp	r0, #11
   175ec:	str	r0, [sp]
   175f0:	bhi	17688 <__assert_fail@plt+0x67a0>
   175f4:	add	r0, pc, #8
   175f8:	ldr	r1, [sp]
   175fc:	ldr	r0, [r0, r1, lsl #2]
   17600:	mov	pc, r0
   17604:	andeq	r7, r1, r8, asr r6
   17608:	andeq	r7, r1, r0, asr #12
   1760c:	andeq	r7, r1, r8, lsl #13
   17610:	andeq	r7, r1, ip, asr #12
   17614:	andeq	r7, r1, r8, lsl #13
   17618:	andeq	r7, r1, r4, lsr r6
   1761c:	andeq	r7, r1, r8, lsl #13
   17620:	andeq	r7, r1, r0, ror r6
   17624:	andeq	r7, r1, r8, lsl #13
   17628:	andeq	r7, r1, r4, ror #12
   1762c:	andeq	r7, r1, r8, lsl #13
   17630:	andeq	r7, r1, ip, ror r6
   17634:	movw	r0, #24576	; 0x6000
   17638:	str	r0, [sp, #4]
   1763c:	b	17690 <__assert_fail@plt+0x67a8>
   17640:	movw	r0, #8192	; 0x2000
   17644:	str	r0, [sp, #4]
   17648:	b	17690 <__assert_fail@plt+0x67a8>
   1764c:	movw	r0, #16384	; 0x4000
   17650:	str	r0, [sp, #4]
   17654:	b	17690 <__assert_fail@plt+0x67a8>
   17658:	movw	r0, #4096	; 0x1000
   1765c:	str	r0, [sp, #4]
   17660:	b	17690 <__assert_fail@plt+0x67a8>
   17664:	movw	r0, #40960	; 0xa000
   17668:	str	r0, [sp, #4]
   1766c:	b	17690 <__assert_fail@plt+0x67a8>
   17670:	movw	r0, #32768	; 0x8000
   17674:	str	r0, [sp, #4]
   17678:	b	17690 <__assert_fail@plt+0x67a8>
   1767c:	movw	r0, #49152	; 0xc000
   17680:	str	r0, [sp, #4]
   17684:	b	17690 <__assert_fail@plt+0x67a8>
   17688:	movw	r0, #0
   1768c:	str	r0, [sp, #4]
   17690:	ldr	r0, [sp, #4]
   17694:	ldr	r1, [sp, #12]
   17698:	str	r0, [r1, #16]
   1769c:	add	sp, sp, #16
   176a0:	bx	lr
   176a4:	push	{fp, lr}
   176a8:	mov	fp, sp
   176ac:	sub	sp, sp, #16
   176b0:	str	r0, [sp, #8]
   176b4:	str	r1, [sp, #4]
   176b8:	ldr	r0, [sp, #8]
   176bc:	ldr	r1, [sp, #4]
   176c0:	bl	178e0 <__assert_fail@plt+0x69f8>
   176c4:	mov	r1, r0
   176c8:	movw	r2, #19778	; 0x4d42
   176cc:	movt	r2, #65363	; 0xff53
   176d0:	cmp	r0, r2
   176d4:	str	r1, [sp]
   176d8:	beq	1770c <__assert_fail@plt+0x6824>
   176dc:	b	176e0 <__assert_fail@plt+0x67f8>
   176e0:	movw	r0, #26985	; 0x6969
   176e4:	ldr	r1, [sp]
   176e8:	cmp	r1, r0
   176ec:	beq	1770c <__assert_fail@plt+0x6824>
   176f0:	b	176f4 <__assert_fail@plt+0x680c>
   176f4:	movw	r0, #6548	; 0x1994
   176f8:	movt	r0, #258	; 0x102
   176fc:	ldr	r1, [sp]
   17700:	cmp	r1, r0
   17704:	bne	1771c <__assert_fail@plt+0x6834>
   17708:	b	1770c <__assert_fail@plt+0x6824>
   1770c:	movw	r0, #0
   17710:	and	r0, r0, #1
   17714:	strb	r0, [fp, #-1]
   17718:	b	17728 <__assert_fail@plt+0x6840>
   1771c:	movw	r0, #1
   17720:	and	r0, r0, #1
   17724:	strb	r0, [fp, #-1]
   17728:	ldrb	r0, [fp, #-1]
   1772c:	and	r0, r0, #1
   17730:	mov	sp, fp
   17734:	pop	{fp, pc}
   17738:	sub	sp, sp, #20
   1773c:	str	r0, [sp, #16]
   17740:	str	r1, [sp, #12]
   17744:	ldr	r0, [sp, #16]
   17748:	ldr	r0, [r0, #24]
   1774c:	str	r0, [sp, #4]
   17750:	ldr	r0, [sp, #16]
   17754:	ldr	r0, [r0, #4]
   17758:	str	r0, [sp, #8]
   1775c:	ldr	r0, [sp, #8]
   17760:	movw	r1, #0
   17764:	cmp	r0, r1
   17768:	beq	177cc <__assert_fail@plt+0x68e4>
   1776c:	b	17770 <__assert_fail@plt+0x6888>
   17770:	ldr	r0, [sp, #8]
   17774:	ldr	r0, [r0, #24]
   17778:	ldr	r1, [sp, #8]
   1777c:	add	r1, r1, #168	; 0xa8
   17780:	cmp	r0, r1
   17784:	beq	177ac <__assert_fail@plt+0x68c4>
   17788:	ldr	r0, [sp, #4]
   1778c:	ldr	r1, [sp, #8]
   17790:	ldr	r1, [r1, #24]
   17794:	ldr	r2, [sp, #8]
   17798:	ldr	r2, [r2, #28]
   1779c:	sub	r1, r1, r2
   177a0:	add	r0, r0, r1
   177a4:	ldr	r1, [sp, #8]
   177a8:	str	r0, [r1, #24]
   177ac:	ldr	r0, [sp, #4]
   177b0:	ldr	r1, [sp, #8]
   177b4:	str	r0, [r1, #28]
   177b8:	b	177bc <__assert_fail@plt+0x68d4>
   177bc:	ldr	r0, [sp, #8]
   177c0:	ldr	r0, [r0, #8]
   177c4:	str	r0, [sp, #8]
   177c8:	b	1775c <__assert_fail@plt+0x6874>
   177cc:	ldr	r0, [sp, #12]
   177d0:	str	r0, [sp, #8]
   177d4:	ldr	r0, [sp, #8]
   177d8:	ldr	r0, [r0, #48]	; 0x30
   177dc:	cmp	r0, #0
   177e0:	blt	1786c <__assert_fail@plt+0x6984>
   177e4:	b	177e8 <__assert_fail@plt+0x6900>
   177e8:	ldr	r0, [sp, #8]
   177ec:	ldr	r0, [r0, #24]
   177f0:	ldr	r1, [sp, #8]
   177f4:	add	r1, r1, #168	; 0xa8
   177f8:	cmp	r0, r1
   177fc:	beq	17824 <__assert_fail@plt+0x693c>
   17800:	ldr	r0, [sp, #4]
   17804:	ldr	r1, [sp, #8]
   17808:	ldr	r1, [r1, #24]
   1780c:	ldr	r2, [sp, #8]
   17810:	ldr	r2, [r2, #28]
   17814:	sub	r1, r1, r2
   17818:	add	r0, r0, r1
   1781c:	ldr	r1, [sp, #8]
   17820:	str	r0, [r1, #24]
   17824:	ldr	r0, [sp, #4]
   17828:	ldr	r1, [sp, #8]
   1782c:	str	r0, [r1, #28]
   17830:	ldr	r0, [sp, #8]
   17834:	ldr	r0, [r0, #8]
   17838:	movw	r1, #0
   1783c:	cmp	r0, r1
   17840:	beq	17854 <__assert_fail@plt+0x696c>
   17844:	ldr	r0, [sp, #8]
   17848:	ldr	r0, [r0, #8]
   1784c:	str	r0, [sp]
   17850:	b	17860 <__assert_fail@plt+0x6978>
   17854:	ldr	r0, [sp, #8]
   17858:	ldr	r0, [r0, #4]
   1785c:	str	r0, [sp]
   17860:	ldr	r0, [sp]
   17864:	str	r0, [sp, #8]
   17868:	b	177d4 <__assert_fail@plt+0x68ec>
   1786c:	add	sp, sp, #20
   17870:	bx	lr
   17874:	push	{r4, r5, fp, lr}
   17878:	add	fp, sp, #8
   1787c:	sub	sp, sp, #12
   17880:	str	r0, [sp, #8]
   17884:	str	r1, [sp, #4]
   17888:	ldr	r0, [sp, #8]
   1788c:	ldr	r0, [r0]
   17890:	ldr	r1, [r0, #160]	; 0xa0
   17894:	ldr	r0, [r0, #164]	; 0xa4
   17898:	ldr	r2, [sp, #4]
   1789c:	ldr	r2, [r2]
   178a0:	ldr	r3, [r2, #160]	; 0xa0
   178a4:	ldr	r2, [r2, #164]	; 0xa4
   178a8:	subs	ip, r3, r1
   178ac:	sbcs	lr, r2, r0
   178b0:	mov	r4, #0
   178b4:	mov	r5, r4
   178b8:	movwcc	r5, #1
   178bc:	subs	r1, r1, r3
   178c0:	sbcs	r0, r0, r2
   178c4:	movwcc	r4, #1
   178c8:	and	r2, r4, #1
   178cc:	sub	r2, r5, r2
   178d0:	str	r0, [sp]
   178d4:	mov	r0, r2
   178d8:	sub	sp, fp, #8
   178dc:	pop	{r4, r5, fp, pc}
   178e0:	push	{fp, lr}
   178e4:	mov	fp, sp
   178e8:	sub	sp, sp, #136	; 0x88
   178ec:	str	r0, [fp, #-8]
   178f0:	str	r1, [fp, #-12]
   178f4:	ldr	r0, [fp, #-8]
   178f8:	ldr	r0, [r0, #44]	; 0x2c
   178fc:	str	r0, [fp, #-16]
   17900:	ldr	r0, [fp, #-16]
   17904:	ldr	r0, [r0, #52]	; 0x34
   17908:	str	r0, [fp, #-20]	; 0xffffffec
   1790c:	ldr	r0, [fp, #-16]
   17910:	ldr	r0, [r0, #48]	; 0x30
   17914:	and	r0, r0, #512	; 0x200
   17918:	cmp	r0, #0
   1791c:	bne	1792c <__assert_fail@plt+0x6a44>
   17920:	movw	r0, #0
   17924:	str	r0, [fp, #-4]
   17928:	b	17a9c <__assert_fail@plt+0x6bb4>
   1792c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17930:	movw	r1, #0
   17934:	cmp	r0, r1
   17938:	bne	17970 <__assert_fail@plt+0x6a88>
   1793c:	movw	r0, #13
   17940:	movw	r1, #0
   17944:	movw	r2, #31400	; 0x7aa8
   17948:	movt	r2, #1
   1794c:	movw	r3, #31484	; 0x7afc
   17950:	movt	r3, #1
   17954:	movw	ip, #16656	; 0x4110
   17958:	movt	ip, #1
   1795c:	str	ip, [sp]
   17960:	bl	1992c <__assert_fail@plt+0x8a44>
   17964:	ldr	r1, [fp, #-16]
   17968:	str	r0, [r1, #52]	; 0x34
   1796c:	str	r0, [fp, #-20]	; 0xffffffec
   17970:	ldr	r0, [fp, #-20]	; 0xffffffec
   17974:	movw	r1, #0
   17978:	cmp	r0, r1
   1797c:	beq	179c8 <__assert_fail@plt+0x6ae0>
   17980:	ldr	r0, [fp, #-8]
   17984:	ldr	r1, [r0, #64]	; 0x40
   17988:	ldr	r0, [r0, #68]	; 0x44
   1798c:	str	r0, [sp, #12]
   17990:	str	r1, [sp, #8]
   17994:	ldr	r0, [fp, #-20]	; 0xffffffec
   17998:	add	r1, sp, #8
   1799c:	bl	19410 <__assert_fail@plt+0x8528>
   179a0:	str	r0, [fp, #-24]	; 0xffffffe8
   179a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179a8:	movw	r1, #0
   179ac:	cmp	r0, r1
   179b0:	beq	179c4 <__assert_fail@plt+0x6adc>
   179b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b8:	ldr	r0, [r0, #8]
   179bc:	str	r0, [fp, #-4]
   179c0:	b	17a9c <__assert_fail@plt+0x6bb4>
   179c4:	b	179c8 <__assert_fail@plt+0x6ae0>
   179c8:	ldr	r0, [fp, #-12]
   179cc:	cmp	r0, #0
   179d0:	blt	179e8 <__assert_fail@plt+0x6b00>
   179d4:	ldr	r0, [fp, #-12]
   179d8:	add	r1, sp, #24
   179dc:	bl	10c84 <fstatfs64@plt>
   179e0:	cmp	r0, #0
   179e4:	beq	179f4 <__assert_fail@plt+0x6b0c>
   179e8:	movw	r0, #0
   179ec:	str	r0, [fp, #-4]
   179f0:	b	17a9c <__assert_fail@plt+0x6bb4>
   179f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   179f8:	movw	r1, #0
   179fc:	cmp	r0, r1
   17a00:	beq	17a94 <__assert_fail@plt+0x6bac>
   17a04:	movw	r0, #16
   17a08:	bl	1b360 <__assert_fail@plt+0xa478>
   17a0c:	str	r0, [sp, #4]
   17a10:	ldr	r0, [sp, #4]
   17a14:	movw	r1, #0
   17a18:	cmp	r0, r1
   17a1c:	beq	17a90 <__assert_fail@plt+0x6ba8>
   17a20:	ldr	r0, [fp, #-8]
   17a24:	ldr	r1, [r0, #64]	; 0x40
   17a28:	ldr	r0, [r0, #68]	; 0x44
   17a2c:	ldr	r2, [sp, #4]
   17a30:	str	r0, [r2, #4]
   17a34:	str	r1, [r2]
   17a38:	ldr	r0, [sp, #24]
   17a3c:	ldr	r1, [sp, #4]
   17a40:	str	r0, [r1, #8]
   17a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a48:	ldr	r1, [sp, #4]
   17a4c:	bl	1a950 <__assert_fail@plt+0x9a68>
   17a50:	str	r0, [fp, #-24]	; 0xffffffe8
   17a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a58:	movw	r1, #0
   17a5c:	cmp	r0, r1
   17a60:	beq	17a84 <__assert_fail@plt+0x6b9c>
   17a64:	b	17a68 <__assert_fail@plt+0x6b80>
   17a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a6c:	ldr	r1, [sp, #4]
   17a70:	cmp	r0, r1
   17a74:	beq	17a7c <__assert_fail@plt+0x6b94>
   17a78:	bl	10eac <abort@plt>
   17a7c:	b	17a80 <__assert_fail@plt+0x6b98>
   17a80:	b	17a8c <__assert_fail@plt+0x6ba4>
   17a84:	ldr	r0, [sp, #4]
   17a88:	bl	14110 <__assert_fail@plt+0x3228>
   17a8c:	b	17a90 <__assert_fail@plt+0x6ba8>
   17a90:	b	17a94 <__assert_fail@plt+0x6bac>
   17a94:	ldr	r0, [sp, #24]
   17a98:	str	r0, [fp, #-4]
   17a9c:	ldr	r0, [fp, #-4]
   17aa0:	mov	sp, fp
   17aa4:	pop	{fp, pc}
   17aa8:	push	{fp, lr}
   17aac:	mov	fp, sp
   17ab0:	sub	sp, sp, #32
   17ab4:	str	r0, [fp, #-4]
   17ab8:	str	r1, [fp, #-8]
   17abc:	ldr	r0, [fp, #-4]
   17ac0:	str	r0, [fp, #-12]
   17ac4:	ldr	r0, [fp, #-12]
   17ac8:	ldr	r1, [r0]
   17acc:	ldr	r0, [r0, #4]
   17ad0:	str	r0, [sp, #12]
   17ad4:	str	r1, [sp, #8]
   17ad8:	ldr	r0, [sp, #8]
   17adc:	ldr	r1, [sp, #12]
   17ae0:	ldr	r2, [fp, #-8]
   17ae4:	mov	r3, #0
   17ae8:	bl	1bea0 <__assert_fail@plt+0xafb8>
   17aec:	str	r0, [sp, #4]
   17af0:	mov	r0, r2
   17af4:	mov	sp, fp
   17af8:	pop	{fp, pc}
   17afc:	sub	sp, sp, #16
   17b00:	str	r0, [sp, #12]
   17b04:	str	r1, [sp, #8]
   17b08:	ldr	r0, [sp, #12]
   17b0c:	str	r0, [sp, #4]
   17b10:	ldr	r0, [sp, #8]
   17b14:	str	r0, [sp]
   17b18:	ldr	r0, [sp, #4]
   17b1c:	ldr	r1, [r0]
   17b20:	ldr	r0, [r0, #4]
   17b24:	ldr	r2, [sp]
   17b28:	ldr	r3, [r2]
   17b2c:	ldr	r2, [r2, #4]
   17b30:	eor	r0, r0, r2
   17b34:	eor	r1, r1, r3
   17b38:	orr	r0, r1, r0
   17b3c:	clz	r0, r0
   17b40:	lsr	r0, r0, #5
   17b44:	and	r0, r0, #1
   17b48:	add	sp, sp, #16
   17b4c:	bx	lr
   17b50:	push	{fp, lr}
   17b54:	mov	fp, sp
   17b58:	sub	sp, sp, #24
   17b5c:	str	r0, [fp, #-4]
   17b60:	str	r1, [fp, #-8]
   17b64:	ldr	r0, [fp, #-4]
   17b68:	str	r0, [sp, #12]
   17b6c:	ldr	r0, [fp, #-8]
   17b70:	str	r0, [sp, #8]
   17b74:	ldr	r0, [sp, #12]
   17b78:	ldr	r0, [r0]
   17b7c:	ldr	r0, [r0, #44]	; 0x2c
   17b80:	ldr	r0, [r0, #44]	; 0x2c
   17b84:	ldr	r1, [sp, #12]
   17b88:	ldr	r2, [sp, #8]
   17b8c:	str	r0, [sp, #4]
   17b90:	mov	r0, r1
   17b94:	mov	r1, r2
   17b98:	ldr	r2, [sp, #4]
   17b9c:	blx	r2
   17ba0:	mov	sp, fp
   17ba4:	pop	{fp, pc}
   17ba8:	push	{r4, r5, fp, lr}
   17bac:	add	fp, sp, #8
   17bb0:	sub	sp, sp, #72	; 0x48
   17bb4:	ldr	ip, [fp, #20]
   17bb8:	ldr	lr, [fp, #16]
   17bbc:	ldr	r4, [fp, #12]
   17bc0:	ldr	r5, [fp, #8]
   17bc4:	str	r0, [fp, #-16]
   17bc8:	str	r1, [fp, #-20]	; 0xffffffec
   17bcc:	str	r2, [fp, #-24]	; 0xffffffe8
   17bd0:	str	r3, [fp, #-28]	; 0xffffffe4
   17bd4:	ldr	r0, [fp, #16]
   17bd8:	ldr	r0, [r0, #4]
   17bdc:	str	r0, [fp, #-32]	; 0xffffffe0
   17be0:	ldr	r0, [fp, #-16]
   17be4:	cmp	r0, #1
   17be8:	bge	17bf8 <__assert_fail@plt+0x6d10>
   17bec:	mvn	r0, #0
   17bf0:	str	r0, [fp, #-12]
   17bf4:	b	184f0 <__assert_fail@plt+0x7608>
   17bf8:	ldr	r0, [fp, #16]
   17bfc:	movw	r1, #0
   17c00:	str	r1, [r0, #12]
   17c04:	ldr	r0, [fp, #16]
   17c08:	ldr	r0, [r0]
   17c0c:	cmp	r0, #0
   17c10:	beq	17c24 <__assert_fail@plt+0x6d3c>
   17c14:	ldr	r0, [fp, #16]
   17c18:	ldr	r0, [r0, #16]
   17c1c:	cmp	r0, #0
   17c20:	bne	17c48 <__assert_fail@plt+0x6d60>
   17c24:	ldr	r0, [fp, #-16]
   17c28:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17c30:	ldr	r3, [fp, #16]
   17c34:	ldr	ip, [fp, #20]
   17c38:	str	ip, [sp]
   17c3c:	bl	184fc <__assert_fail@plt+0x7614>
   17c40:	str	r0, [fp, #-24]	; 0xffffffe8
   17c44:	b	17c78 <__assert_fail@plt+0x6d90>
   17c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c4c:	ldrb	r0, [r0]
   17c50:	cmp	r0, #45	; 0x2d
   17c54:	beq	17c68 <__assert_fail@plt+0x6d80>
   17c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c5c:	ldrb	r0, [r0]
   17c60:	cmp	r0, #43	; 0x2b
   17c64:	bne	17c74 <__assert_fail@plt+0x6d8c>
   17c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c6c:	add	r0, r0, #1
   17c70:	str	r0, [fp, #-24]	; 0xffffffe8
   17c74:	b	17c78 <__assert_fail@plt+0x6d90>
   17c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c7c:	ldrb	r0, [r0]
   17c80:	cmp	r0, #58	; 0x3a
   17c84:	bne	17c90 <__assert_fail@plt+0x6da8>
   17c88:	movw	r0, #0
   17c8c:	str	r0, [fp, #-32]	; 0xffffffe0
   17c90:	ldr	r0, [fp, #16]
   17c94:	ldr	r0, [r0, #20]
   17c98:	movw	r1, #0
   17c9c:	cmp	r0, r1
   17ca0:	beq	17cb8 <__assert_fail@plt+0x6dd0>
   17ca4:	ldr	r0, [fp, #16]
   17ca8:	ldr	r0, [r0, #20]
   17cac:	ldrb	r0, [r0]
   17cb0:	cmp	r0, #0
   17cb4:	bne	18164 <__assert_fail@plt+0x727c>
   17cb8:	ldr	r0, [fp, #16]
   17cbc:	ldr	r0, [r0, #32]
   17cc0:	ldr	r1, [fp, #16]
   17cc4:	ldr	r1, [r1]
   17cc8:	cmp	r0, r1
   17ccc:	ble	17ce0 <__assert_fail@plt+0x6df8>
   17cd0:	ldr	r0, [fp, #16]
   17cd4:	ldr	r0, [r0]
   17cd8:	ldr	r1, [fp, #16]
   17cdc:	str	r0, [r1, #32]
   17ce0:	ldr	r0, [fp, #16]
   17ce4:	ldr	r0, [r0, #28]
   17ce8:	ldr	r1, [fp, #16]
   17cec:	ldr	r1, [r1]
   17cf0:	cmp	r0, r1
   17cf4:	ble	17d08 <__assert_fail@plt+0x6e20>
   17cf8:	ldr	r0, [fp, #16]
   17cfc:	ldr	r0, [r0]
   17d00:	ldr	r1, [fp, #16]
   17d04:	str	r0, [r1, #28]
   17d08:	ldr	r0, [fp, #16]
   17d0c:	ldr	r0, [r0, #24]
   17d10:	cmp	r0, #1
   17d14:	bne	17e2c <__assert_fail@plt+0x6f44>
   17d18:	ldr	r0, [fp, #16]
   17d1c:	ldr	r0, [r0, #28]
   17d20:	ldr	r1, [fp, #16]
   17d24:	ldr	r1, [r1, #32]
   17d28:	cmp	r0, r1
   17d2c:	beq	17d58 <__assert_fail@plt+0x6e70>
   17d30:	ldr	r0, [fp, #16]
   17d34:	ldr	r0, [r0, #32]
   17d38:	ldr	r1, [fp, #16]
   17d3c:	ldr	r1, [r1]
   17d40:	cmp	r0, r1
   17d44:	beq	17d58 <__assert_fail@plt+0x6e70>
   17d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d4c:	ldr	r1, [fp, #16]
   17d50:	bl	18614 <__assert_fail@plt+0x772c>
   17d54:	b	17d84 <__assert_fail@plt+0x6e9c>
   17d58:	ldr	r0, [fp, #16]
   17d5c:	ldr	r0, [r0, #32]
   17d60:	ldr	r1, [fp, #16]
   17d64:	ldr	r1, [r1]
   17d68:	cmp	r0, r1
   17d6c:	beq	17d80 <__assert_fail@plt+0x6e98>
   17d70:	ldr	r0, [fp, #16]
   17d74:	ldr	r0, [r0]
   17d78:	ldr	r1, [fp, #16]
   17d7c:	str	r0, [r1, #28]
   17d80:	b	17d84 <__assert_fail@plt+0x6e9c>
   17d84:	b	17d88 <__assert_fail@plt+0x6ea0>
   17d88:	ldr	r0, [fp, #16]
   17d8c:	ldr	r0, [r0]
   17d90:	ldr	r1, [fp, #-16]
   17d94:	cmp	r0, r1
   17d98:	movw	r0, #0
   17d9c:	str	r0, [sp, #32]
   17da0:	bge	17dfc <__assert_fail@plt+0x6f14>
   17da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17da8:	ldr	r1, [fp, #16]
   17dac:	ldr	r1, [r1]
   17db0:	add	r0, r0, r1, lsl #2
   17db4:	ldr	r0, [r0]
   17db8:	ldrb	r0, [r0]
   17dbc:	cmp	r0, #45	; 0x2d
   17dc0:	movw	r0, #1
   17dc4:	str	r0, [sp, #28]
   17dc8:	bne	17df4 <__assert_fail@plt+0x6f0c>
   17dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17dd0:	ldr	r1, [fp, #16]
   17dd4:	ldr	r1, [r1]
   17dd8:	add	r0, r0, r1, lsl #2
   17ddc:	ldr	r0, [r0]
   17de0:	ldrb	r0, [r0, #1]
   17de4:	cmp	r0, #0
   17de8:	movw	r0, #0
   17dec:	moveq	r0, #1
   17df0:	str	r0, [sp, #28]
   17df4:	ldr	r0, [sp, #28]
   17df8:	str	r0, [sp, #32]
   17dfc:	ldr	r0, [sp, #32]
   17e00:	tst	r0, #1
   17e04:	beq	17e1c <__assert_fail@plt+0x6f34>
   17e08:	ldr	r0, [fp, #16]
   17e0c:	ldr	r1, [r0]
   17e10:	add	r1, r1, #1
   17e14:	str	r1, [r0]
   17e18:	b	17d88 <__assert_fail@plt+0x6ea0>
   17e1c:	ldr	r0, [fp, #16]
   17e20:	ldr	r0, [r0]
   17e24:	ldr	r1, [fp, #16]
   17e28:	str	r0, [r1, #32]
   17e2c:	ldr	r0, [fp, #16]
   17e30:	ldr	r0, [r0]
   17e34:	ldr	r1, [fp, #-16]
   17e38:	cmp	r0, r1
   17e3c:	beq	17efc <__assert_fail@plt+0x7014>
   17e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e44:	ldr	r1, [fp, #16]
   17e48:	ldr	r1, [r1]
   17e4c:	add	r0, r0, r1, lsl #2
   17e50:	ldr	r0, [r0]
   17e54:	movw	r1, #49653	; 0xc1f5
   17e58:	movt	r1, #1
   17e5c:	bl	10ca8 <strcmp@plt>
   17e60:	cmp	r0, #0
   17e64:	bne	17efc <__assert_fail@plt+0x7014>
   17e68:	ldr	r0, [fp, #16]
   17e6c:	ldr	r1, [r0]
   17e70:	add	r1, r1, #1
   17e74:	str	r1, [r0]
   17e78:	ldr	r0, [fp, #16]
   17e7c:	ldr	r0, [r0, #28]
   17e80:	ldr	r1, [fp, #16]
   17e84:	ldr	r1, [r1, #32]
   17e88:	cmp	r0, r1
   17e8c:	beq	17eb8 <__assert_fail@plt+0x6fd0>
   17e90:	ldr	r0, [fp, #16]
   17e94:	ldr	r0, [r0, #32]
   17e98:	ldr	r1, [fp, #16]
   17e9c:	ldr	r1, [r1]
   17ea0:	cmp	r0, r1
   17ea4:	beq	17eb8 <__assert_fail@plt+0x6fd0>
   17ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17eac:	ldr	r1, [fp, #16]
   17eb0:	bl	18614 <__assert_fail@plt+0x772c>
   17eb4:	b	17ee4 <__assert_fail@plt+0x6ffc>
   17eb8:	ldr	r0, [fp, #16]
   17ebc:	ldr	r0, [r0, #28]
   17ec0:	ldr	r1, [fp, #16]
   17ec4:	ldr	r1, [r1, #32]
   17ec8:	cmp	r0, r1
   17ecc:	bne	17ee0 <__assert_fail@plt+0x6ff8>
   17ed0:	ldr	r0, [fp, #16]
   17ed4:	ldr	r0, [r0]
   17ed8:	ldr	r1, [fp, #16]
   17edc:	str	r0, [r1, #28]
   17ee0:	b	17ee4 <__assert_fail@plt+0x6ffc>
   17ee4:	ldr	r0, [fp, #-16]
   17ee8:	ldr	r1, [fp, #16]
   17eec:	str	r0, [r1, #32]
   17ef0:	ldr	r0, [fp, #-16]
   17ef4:	ldr	r1, [fp, #16]
   17ef8:	str	r0, [r1]
   17efc:	ldr	r0, [fp, #16]
   17f00:	ldr	r0, [r0]
   17f04:	ldr	r1, [fp, #-16]
   17f08:	cmp	r0, r1
   17f0c:	bne	17f44 <__assert_fail@plt+0x705c>
   17f10:	ldr	r0, [fp, #16]
   17f14:	ldr	r0, [r0, #28]
   17f18:	ldr	r1, [fp, #16]
   17f1c:	ldr	r1, [r1, #32]
   17f20:	cmp	r0, r1
   17f24:	beq	17f38 <__assert_fail@plt+0x7050>
   17f28:	ldr	r0, [fp, #16]
   17f2c:	ldr	r0, [r0, #28]
   17f30:	ldr	r1, [fp, #16]
   17f34:	str	r0, [r1]
   17f38:	mvn	r0, #0
   17f3c:	str	r0, [fp, #-12]
   17f40:	b	184f0 <__assert_fail@plt+0x7608>
   17f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f48:	ldr	r1, [fp, #16]
   17f4c:	ldr	r1, [r1]
   17f50:	add	r0, r0, r1, lsl #2
   17f54:	ldr	r0, [r0]
   17f58:	ldrb	r0, [r0]
   17f5c:	cmp	r0, #45	; 0x2d
   17f60:	bne	17f84 <__assert_fail@plt+0x709c>
   17f64:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f68:	ldr	r1, [fp, #16]
   17f6c:	ldr	r1, [r1]
   17f70:	add	r0, r0, r1, lsl #2
   17f74:	ldr	r0, [r0]
   17f78:	ldrb	r0, [r0, #1]
   17f7c:	cmp	r0, #0
   17f80:	bne	17fd0 <__assert_fail@plt+0x70e8>
   17f84:	ldr	r0, [fp, #16]
   17f88:	ldr	r0, [r0, #24]
   17f8c:	cmp	r0, #0
   17f90:	bne	17fa0 <__assert_fail@plt+0x70b8>
   17f94:	mvn	r0, #0
   17f98:	str	r0, [fp, #-12]
   17f9c:	b	184f0 <__assert_fail@plt+0x7608>
   17fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fa4:	ldr	r1, [fp, #16]
   17fa8:	ldr	r2, [r1]
   17fac:	add	r3, r2, #1
   17fb0:	str	r3, [r1]
   17fb4:	add	r0, r0, r2, lsl #2
   17fb8:	ldr	r0, [r0]
   17fbc:	ldr	r1, [fp, #16]
   17fc0:	str	r0, [r1, #12]
   17fc4:	movw	r0, #1
   17fc8:	str	r0, [fp, #-12]
   17fcc:	b	184f0 <__assert_fail@plt+0x7608>
   17fd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17fd4:	movw	r1, #0
   17fd8:	cmp	r0, r1
   17fdc:	beq	18144 <__assert_fail@plt+0x725c>
   17fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fe4:	ldr	r1, [fp, #16]
   17fe8:	ldr	r1, [r1]
   17fec:	add	r0, r0, r1, lsl #2
   17ff0:	ldr	r0, [r0]
   17ff4:	ldrb	r0, [r0, #1]
   17ff8:	cmp	r0, #45	; 0x2d
   17ffc:	bne	18068 <__assert_fail@plt+0x7180>
   18000:	ldr	r0, [fp, #-20]	; 0xffffffec
   18004:	ldr	r1, [fp, #16]
   18008:	ldr	r1, [r1]
   1800c:	add	r0, r0, r1, lsl #2
   18010:	ldr	r0, [r0]
   18014:	add	r0, r0, #2
   18018:	ldr	r1, [fp, #16]
   1801c:	str	r0, [r1, #20]
   18020:	ldr	r0, [fp, #-16]
   18024:	ldr	r1, [fp, #-20]	; 0xffffffec
   18028:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1802c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18030:	ldr	ip, [fp, #8]
   18034:	ldr	lr, [fp, #12]
   18038:	ldr	r4, [fp, #16]
   1803c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18040:	str	ip, [sp]
   18044:	str	lr, [sp, #4]
   18048:	str	r4, [sp, #8]
   1804c:	str	r5, [sp, #12]
   18050:	movw	ip, #49653	; 0xc1f5
   18054:	movt	ip, #1
   18058:	str	ip, [sp, #16]
   1805c:	bl	18838 <__assert_fail@plt+0x7950>
   18060:	str	r0, [fp, #-12]
   18064:	b	184f0 <__assert_fail@plt+0x7608>
   18068:	ldr	r0, [fp, #12]
   1806c:	cmp	r0, #0
   18070:	beq	18140 <__assert_fail@plt+0x7258>
   18074:	ldr	r0, [fp, #-20]	; 0xffffffec
   18078:	ldr	r1, [fp, #16]
   1807c:	ldr	r1, [r1]
   18080:	add	r0, r0, r1, lsl #2
   18084:	ldr	r0, [r0]
   18088:	ldrb	r0, [r0, #2]
   1808c:	cmp	r0, #0
   18090:	bne	180c0 <__assert_fail@plt+0x71d8>
   18094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18098:	ldr	r1, [fp, #-20]	; 0xffffffec
   1809c:	ldr	r2, [fp, #16]
   180a0:	ldr	r2, [r2]
   180a4:	add	r1, r1, r2, lsl #2
   180a8:	ldr	r1, [r1]
   180ac:	ldrb	r1, [r1, #1]
   180b0:	bl	10dc8 <strchr@plt>
   180b4:	movw	r1, #0
   180b8:	cmp	r0, r1
   180bc:	bne	18140 <__assert_fail@plt+0x7258>
   180c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   180c4:	ldr	r1, [fp, #16]
   180c8:	ldr	r1, [r1]
   180cc:	add	r0, r0, r1, lsl #2
   180d0:	ldr	r0, [r0]
   180d4:	add	r0, r0, #1
   180d8:	ldr	r1, [fp, #16]
   180dc:	str	r0, [r1, #20]
   180e0:	ldr	r0, [fp, #-16]
   180e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   180e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   180ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   180f0:	ldr	ip, [fp, #8]
   180f4:	ldr	lr, [fp, #12]
   180f8:	ldr	r4, [fp, #16]
   180fc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18100:	str	ip, [sp]
   18104:	str	lr, [sp, #4]
   18108:	str	r4, [sp, #8]
   1810c:	str	r5, [sp, #12]
   18110:	movw	ip, #49654	; 0xc1f6
   18114:	movt	ip, #1
   18118:	str	ip, [sp, #16]
   1811c:	bl	18838 <__assert_fail@plt+0x7950>
   18120:	str	r0, [fp, #-36]	; 0xffffffdc
   18124:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18128:	cmn	r0, #1
   1812c:	beq	1813c <__assert_fail@plt+0x7254>
   18130:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18134:	str	r0, [fp, #-12]
   18138:	b	184f0 <__assert_fail@plt+0x7608>
   1813c:	b	18140 <__assert_fail@plt+0x7258>
   18140:	b	18144 <__assert_fail@plt+0x725c>
   18144:	ldr	r0, [fp, #-20]	; 0xffffffec
   18148:	ldr	r1, [fp, #16]
   1814c:	ldr	r1, [r1]
   18150:	add	r0, r0, r1, lsl #2
   18154:	ldr	r0, [r0]
   18158:	add	r0, r0, #1
   1815c:	ldr	r1, [fp, #16]
   18160:	str	r0, [r1, #20]
   18164:	ldr	r0, [fp, #16]
   18168:	ldr	r1, [r0, #20]
   1816c:	add	r2, r1, #1
   18170:	str	r2, [r0, #20]
   18174:	ldrb	r0, [r1]
   18178:	strb	r0, [fp, #-37]	; 0xffffffdb
   1817c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18180:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   18184:	bl	10dc8 <strchr@plt>
   18188:	str	r0, [sp, #36]	; 0x24
   1818c:	ldr	r0, [fp, #16]
   18190:	ldr	r0, [r0, #20]
   18194:	ldrb	r0, [r0]
   18198:	cmp	r0, #0
   1819c:	bne	181b0 <__assert_fail@plt+0x72c8>
   181a0:	ldr	r0, [fp, #16]
   181a4:	ldr	r1, [r0]
   181a8:	add	r1, r1, #1
   181ac:	str	r1, [r0]
   181b0:	ldr	r0, [sp, #36]	; 0x24
   181b4:	movw	r1, #0
   181b8:	cmp	r0, r1
   181bc:	beq	181d8 <__assert_fail@plt+0x72f0>
   181c0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   181c4:	cmp	r0, #58	; 0x3a
   181c8:	beq	181d8 <__assert_fail@plt+0x72f0>
   181cc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   181d0:	cmp	r0, #59	; 0x3b
   181d4:	bne	18220 <__assert_fail@plt+0x7338>
   181d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181dc:	cmp	r0, #0
   181e0:	beq	18208 <__assert_fail@plt+0x7320>
   181e4:	movw	r0, #53512	; 0xd108
   181e8:	movt	r0, #2
   181ec:	ldr	r0, [r0]
   181f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   181f4:	ldr	r2, [r1]
   181f8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   181fc:	movw	r1, #49656	; 0xc1f8
   18200:	movt	r1, #1
   18204:	bl	10de0 <fprintf@plt>
   18208:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1820c:	ldr	r1, [fp, #16]
   18210:	str	r0, [r1, #8]
   18214:	movw	r0, #63	; 0x3f
   18218:	str	r0, [fp, #-12]
   1821c:	b	184f0 <__assert_fail@plt+0x7608>
   18220:	ldr	r0, [sp, #36]	; 0x24
   18224:	ldrb	r0, [r0]
   18228:	cmp	r0, #87	; 0x57
   1822c:	bne	1838c <__assert_fail@plt+0x74a4>
   18230:	ldr	r0, [sp, #36]	; 0x24
   18234:	ldrb	r0, [r0, #1]
   18238:	cmp	r0, #59	; 0x3b
   1823c:	bne	1838c <__assert_fail@plt+0x74a4>
   18240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18244:	movw	r1, #0
   18248:	cmp	r0, r1
   1824c:	beq	1838c <__assert_fail@plt+0x74a4>
   18250:	ldr	r0, [fp, #16]
   18254:	ldr	r0, [r0, #20]
   18258:	ldrb	r0, [r0]
   1825c:	cmp	r0, #0
   18260:	beq	18278 <__assert_fail@plt+0x7390>
   18264:	ldr	r0, [fp, #16]
   18268:	ldr	r0, [r0, #20]
   1826c:	ldr	r1, [fp, #16]
   18270:	str	r0, [r1, #12]
   18274:	b	18318 <__assert_fail@plt+0x7430>
   18278:	ldr	r0, [fp, #16]
   1827c:	ldr	r0, [r0]
   18280:	ldr	r1, [fp, #-16]
   18284:	cmp	r0, r1
   18288:	bne	182f8 <__assert_fail@plt+0x7410>
   1828c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18290:	cmp	r0, #0
   18294:	beq	182bc <__assert_fail@plt+0x73d4>
   18298:	movw	r0, #53512	; 0xd108
   1829c:	movt	r0, #2
   182a0:	ldr	r0, [r0]
   182a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   182a8:	ldr	r2, [r1]
   182ac:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   182b0:	movw	r1, #49684	; 0xc214
   182b4:	movt	r1, #1
   182b8:	bl	10de0 <fprintf@plt>
   182bc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   182c0:	ldr	r1, [fp, #16]
   182c4:	str	r0, [r1, #8]
   182c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182cc:	ldrb	r0, [r0]
   182d0:	cmp	r0, #58	; 0x3a
   182d4:	bne	182e4 <__assert_fail@plt+0x73fc>
   182d8:	movw	r0, #58	; 0x3a
   182dc:	strb	r0, [fp, #-37]	; 0xffffffdb
   182e0:	b	182ec <__assert_fail@plt+0x7404>
   182e4:	movw	r0, #63	; 0x3f
   182e8:	strb	r0, [fp, #-37]	; 0xffffffdb
   182ec:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   182f0:	str	r0, [fp, #-12]
   182f4:	b	184f0 <__assert_fail@plt+0x7608>
   182f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   182fc:	ldr	r1, [fp, #16]
   18300:	ldr	r1, [r1]
   18304:	add	r0, r0, r1, lsl #2
   18308:	ldr	r0, [r0]
   1830c:	ldr	r1, [fp, #16]
   18310:	str	r0, [r1, #12]
   18314:	b	18318 <__assert_fail@plt+0x7430>
   18318:	ldr	r0, [fp, #16]
   1831c:	ldr	r0, [r0, #12]
   18320:	ldr	r1, [fp, #16]
   18324:	str	r0, [r1, #20]
   18328:	ldr	r0, [fp, #16]
   1832c:	movw	r1, #0
   18330:	str	r1, [r0, #12]
   18334:	ldr	r0, [fp, #-16]
   18338:	ldr	r2, [fp, #-20]	; 0xffffffec
   1833c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18340:	ldr	ip, [fp, #-28]	; 0xffffffe4
   18344:	ldr	lr, [fp, #8]
   18348:	ldr	r4, [fp, #16]
   1834c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18350:	str	r1, [sp, #24]
   18354:	mov	r1, r2
   18358:	mov	r2, r3
   1835c:	mov	r3, ip
   18360:	str	lr, [sp]
   18364:	ldr	ip, [sp, #24]
   18368:	str	ip, [sp, #4]
   1836c:	str	r4, [sp, #8]
   18370:	str	r5, [sp, #12]
   18374:	movw	lr, #49725	; 0xc23d
   18378:	movt	lr, #1
   1837c:	str	lr, [sp, #16]
   18380:	bl	18838 <__assert_fail@plt+0x7950>
   18384:	str	r0, [fp, #-12]
   18388:	b	184f0 <__assert_fail@plt+0x7608>
   1838c:	ldr	r0, [sp, #36]	; 0x24
   18390:	ldrb	r0, [r0, #1]
   18394:	cmp	r0, #58	; 0x3a
   18398:	bne	184e8 <__assert_fail@plt+0x7600>
   1839c:	ldr	r0, [sp, #36]	; 0x24
   183a0:	ldrb	r0, [r0, #2]
   183a4:	cmp	r0, #58	; 0x3a
   183a8:	bne	18400 <__assert_fail@plt+0x7518>
   183ac:	ldr	r0, [fp, #16]
   183b0:	ldr	r0, [r0, #20]
   183b4:	ldrb	r0, [r0]
   183b8:	cmp	r0, #0
   183bc:	beq	183e4 <__assert_fail@plt+0x74fc>
   183c0:	ldr	r0, [fp, #16]
   183c4:	ldr	r0, [r0, #20]
   183c8:	ldr	r1, [fp, #16]
   183cc:	str	r0, [r1, #12]
   183d0:	ldr	r0, [fp, #16]
   183d4:	ldr	r1, [r0]
   183d8:	add	r1, r1, #1
   183dc:	str	r1, [r0]
   183e0:	b	183f0 <__assert_fail@plt+0x7508>
   183e4:	ldr	r0, [fp, #16]
   183e8:	movw	r1, #0
   183ec:	str	r1, [r0, #12]
   183f0:	ldr	r0, [fp, #16]
   183f4:	movw	r1, #0
   183f8:	str	r1, [r0, #20]
   183fc:	b	184e4 <__assert_fail@plt+0x75fc>
   18400:	ldr	r0, [fp, #16]
   18404:	ldr	r0, [r0, #20]
   18408:	ldrb	r0, [r0]
   1840c:	cmp	r0, #0
   18410:	beq	18438 <__assert_fail@plt+0x7550>
   18414:	ldr	r0, [fp, #16]
   18418:	ldr	r0, [r0, #20]
   1841c:	ldr	r1, [fp, #16]
   18420:	str	r0, [r1, #12]
   18424:	ldr	r0, [fp, #16]
   18428:	ldr	r1, [r0]
   1842c:	add	r1, r1, #1
   18430:	str	r1, [r0]
   18434:	b	184d8 <__assert_fail@plt+0x75f0>
   18438:	ldr	r0, [fp, #16]
   1843c:	ldr	r0, [r0]
   18440:	ldr	r1, [fp, #-16]
   18444:	cmp	r0, r1
   18448:	bne	184b0 <__assert_fail@plt+0x75c8>
   1844c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18450:	cmp	r0, #0
   18454:	beq	1847c <__assert_fail@plt+0x7594>
   18458:	movw	r0, #53512	; 0xd108
   1845c:	movt	r0, #2
   18460:	ldr	r0, [r0]
   18464:	ldr	r1, [fp, #-20]	; 0xffffffec
   18468:	ldr	r2, [r1]
   1846c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18470:	movw	r1, #49684	; 0xc214
   18474:	movt	r1, #1
   18478:	bl	10de0 <fprintf@plt>
   1847c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   18480:	ldr	r1, [fp, #16]
   18484:	str	r0, [r1, #8]
   18488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1848c:	ldrb	r0, [r0]
   18490:	cmp	r0, #58	; 0x3a
   18494:	bne	184a4 <__assert_fail@plt+0x75bc>
   18498:	movw	r0, #58	; 0x3a
   1849c:	strb	r0, [fp, #-37]	; 0xffffffdb
   184a0:	b	184ac <__assert_fail@plt+0x75c4>
   184a4:	movw	r0, #63	; 0x3f
   184a8:	strb	r0, [fp, #-37]	; 0xffffffdb
   184ac:	b	184d4 <__assert_fail@plt+0x75ec>
   184b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   184b4:	ldr	r1, [fp, #16]
   184b8:	ldr	r2, [r1]
   184bc:	add	r3, r2, #1
   184c0:	str	r3, [r1]
   184c4:	add	r0, r0, r2, lsl #2
   184c8:	ldr	r0, [r0]
   184cc:	ldr	r1, [fp, #16]
   184d0:	str	r0, [r1, #12]
   184d4:	b	184d8 <__assert_fail@plt+0x75f0>
   184d8:	ldr	r0, [fp, #16]
   184dc:	movw	r1, #0
   184e0:	str	r1, [r0, #20]
   184e4:	b	184e8 <__assert_fail@plt+0x7600>
   184e8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   184ec:	str	r0, [fp, #-12]
   184f0:	ldr	r0, [fp, #-12]
   184f4:	sub	sp, fp, #8
   184f8:	pop	{r4, r5, fp, pc}
   184fc:	push	{fp, lr}
   18500:	mov	fp, sp
   18504:	sub	sp, sp, #16
   18508:	ldr	ip, [fp, #8]
   1850c:	str	r0, [fp, #-4]
   18510:	str	r1, [sp, #8]
   18514:	str	r2, [sp, #4]
   18518:	str	r3, [sp]
   1851c:	ldr	r0, [sp]
   18520:	ldr	r0, [r0]
   18524:	cmp	r0, #0
   18528:	bne	18538 <__assert_fail@plt+0x7650>
   1852c:	ldr	r0, [sp]
   18530:	movw	r1, #1
   18534:	str	r1, [r0]
   18538:	ldr	r0, [sp]
   1853c:	ldr	r0, [r0]
   18540:	ldr	r1, [sp]
   18544:	str	r0, [r1, #32]
   18548:	ldr	r1, [sp]
   1854c:	str	r0, [r1, #28]
   18550:	ldr	r0, [sp]
   18554:	movw	r1, #0
   18558:	str	r1, [r0, #20]
   1855c:	ldr	r0, [sp, #4]
   18560:	ldrb	r0, [r0]
   18564:	cmp	r0, #45	; 0x2d
   18568:	bne	18588 <__assert_fail@plt+0x76a0>
   1856c:	ldr	r0, [sp]
   18570:	movw	r1, #2
   18574:	str	r1, [r0, #24]
   18578:	ldr	r0, [sp, #4]
   1857c:	add	r0, r0, #1
   18580:	str	r0, [sp, #4]
   18584:	b	185fc <__assert_fail@plt+0x7714>
   18588:	ldr	r0, [sp, #4]
   1858c:	ldrb	r0, [r0]
   18590:	cmp	r0, #43	; 0x2b
   18594:	bne	185b4 <__assert_fail@plt+0x76cc>
   18598:	ldr	r0, [sp]
   1859c:	movw	r1, #0
   185a0:	str	r1, [r0, #24]
   185a4:	ldr	r0, [sp, #4]
   185a8:	add	r0, r0, #1
   185ac:	str	r0, [sp, #4]
   185b0:	b	185f8 <__assert_fail@plt+0x7710>
   185b4:	ldr	r0, [fp, #8]
   185b8:	cmp	r0, #0
   185bc:	bne	185d8 <__assert_fail@plt+0x76f0>
   185c0:	movw	r0, #49729	; 0xc241
   185c4:	movt	r0, #1
   185c8:	bl	10d74 <getenv@plt>
   185cc:	movw	r1, #0
   185d0:	cmp	r0, r1
   185d4:	beq	185e8 <__assert_fail@plt+0x7700>
   185d8:	ldr	r0, [sp]
   185dc:	movw	r1, #0
   185e0:	str	r1, [r0, #24]
   185e4:	b	185f4 <__assert_fail@plt+0x770c>
   185e8:	ldr	r0, [sp]
   185ec:	movw	r1, #1
   185f0:	str	r1, [r0, #24]
   185f4:	b	185f8 <__assert_fail@plt+0x7710>
   185f8:	b	185fc <__assert_fail@plt+0x7714>
   185fc:	ldr	r0, [sp]
   18600:	movw	r1, #1
   18604:	str	r1, [r0, #16]
   18608:	ldr	r0, [sp, #4]
   1860c:	mov	sp, fp
   18610:	pop	{fp, pc}
   18614:	sub	sp, sp, #44	; 0x2c
   18618:	str	r0, [sp, #40]	; 0x28
   1861c:	str	r1, [sp, #36]	; 0x24
   18620:	ldr	r0, [sp, #36]	; 0x24
   18624:	ldr	r0, [r0, #28]
   18628:	str	r0, [sp, #32]
   1862c:	ldr	r0, [sp, #36]	; 0x24
   18630:	ldr	r0, [r0, #32]
   18634:	str	r0, [sp, #28]
   18638:	ldr	r0, [sp, #36]	; 0x24
   1863c:	ldr	r0, [r0]
   18640:	str	r0, [sp, #24]
   18644:	ldr	r0, [sp, #24]
   18648:	ldr	r1, [sp, #28]
   1864c:	cmp	r0, r1
   18650:	movw	r0, #0
   18654:	str	r0, [sp]
   18658:	ble	18674 <__assert_fail@plt+0x778c>
   1865c:	ldr	r0, [sp, #28]
   18660:	ldr	r1, [sp, #32]
   18664:	cmp	r0, r1
   18668:	movw	r0, #0
   1866c:	movgt	r0, #1
   18670:	str	r0, [sp]
   18674:	ldr	r0, [sp]
   18678:	tst	r0, #1
   1867c:	beq	187fc <__assert_fail@plt+0x7914>
   18680:	ldr	r0, [sp, #24]
   18684:	ldr	r1, [sp, #28]
   18688:	sub	r0, r0, r1
   1868c:	ldr	r1, [sp, #28]
   18690:	ldr	r2, [sp, #32]
   18694:	sub	r1, r1, r2
   18698:	cmp	r0, r1
   1869c:	ble	1875c <__assert_fail@plt+0x7874>
   186a0:	ldr	r0, [sp, #28]
   186a4:	ldr	r1, [sp, #32]
   186a8:	sub	r0, r0, r1
   186ac:	str	r0, [sp, #16]
   186b0:	movw	r0, #0
   186b4:	str	r0, [sp, #12]
   186b8:	ldr	r0, [sp, #12]
   186bc:	ldr	r1, [sp, #16]
   186c0:	cmp	r0, r1
   186c4:	bge	18748 <__assert_fail@plt+0x7860>
   186c8:	ldr	r0, [sp, #40]	; 0x28
   186cc:	ldr	r1, [sp, #32]
   186d0:	ldr	r2, [sp, #12]
   186d4:	add	r1, r1, r2
   186d8:	ldr	r0, [r0, r1, lsl #2]
   186dc:	str	r0, [sp, #20]
   186e0:	ldr	r0, [sp, #40]	; 0x28
   186e4:	ldr	r1, [sp, #24]
   186e8:	ldr	r2, [sp, #28]
   186ec:	ldr	r3, [sp, #32]
   186f0:	sub	r2, r3, r2
   186f4:	add	r1, r1, r2
   186f8:	ldr	r2, [sp, #12]
   186fc:	add	r1, r1, r2
   18700:	ldr	r1, [r0, r1, lsl #2]
   18704:	add	r2, r3, r2
   18708:	str	r1, [r0, r2, lsl #2]
   1870c:	ldr	r0, [sp, #20]
   18710:	ldr	r1, [sp, #40]	; 0x28
   18714:	ldr	r2, [sp, #24]
   18718:	ldr	r3, [sp, #28]
   1871c:	ldr	ip, [sp, #32]
   18720:	sub	r3, ip, r3
   18724:	add	r2, r2, r3
   18728:	ldr	r3, [sp, #12]
   1872c:	add	r2, r2, r3
   18730:	add	r1, r1, r2, lsl #2
   18734:	str	r0, [r1]
   18738:	ldr	r0, [sp, #12]
   1873c:	add	r0, r0, #1
   18740:	str	r0, [sp, #12]
   18744:	b	186b8 <__assert_fail@plt+0x77d0>
   18748:	ldr	r0, [sp, #16]
   1874c:	ldr	r1, [sp, #24]
   18750:	sub	r0, r1, r0
   18754:	str	r0, [sp, #24]
   18758:	b	187f8 <__assert_fail@plt+0x7910>
   1875c:	ldr	r0, [sp, #24]
   18760:	ldr	r1, [sp, #28]
   18764:	sub	r0, r0, r1
   18768:	str	r0, [sp, #8]
   1876c:	movw	r0, #0
   18770:	str	r0, [sp, #4]
   18774:	ldr	r0, [sp, #4]
   18778:	ldr	r1, [sp, #8]
   1877c:	cmp	r0, r1
   18780:	bge	187e8 <__assert_fail@plt+0x7900>
   18784:	ldr	r0, [sp, #40]	; 0x28
   18788:	ldr	r1, [sp, #32]
   1878c:	ldr	r2, [sp, #4]
   18790:	add	r1, r1, r2
   18794:	ldr	r0, [r0, r1, lsl #2]
   18798:	str	r0, [sp, #20]
   1879c:	ldr	r0, [sp, #40]	; 0x28
   187a0:	ldr	r1, [sp, #28]
   187a4:	ldr	r2, [sp, #4]
   187a8:	add	r1, r1, r2
   187ac:	ldr	r1, [r0, r1, lsl #2]
   187b0:	ldr	r3, [sp, #32]
   187b4:	add	r2, r3, r2
   187b8:	str	r1, [r0, r2, lsl #2]
   187bc:	ldr	r0, [sp, #20]
   187c0:	ldr	r1, [sp, #40]	; 0x28
   187c4:	ldr	r2, [sp, #28]
   187c8:	ldr	r3, [sp, #4]
   187cc:	add	r2, r2, r3
   187d0:	add	r1, r1, r2, lsl #2
   187d4:	str	r0, [r1]
   187d8:	ldr	r0, [sp, #4]
   187dc:	add	r0, r0, #1
   187e0:	str	r0, [sp, #4]
   187e4:	b	18774 <__assert_fail@plt+0x788c>
   187e8:	ldr	r0, [sp, #8]
   187ec:	ldr	r1, [sp, #32]
   187f0:	add	r0, r1, r0
   187f4:	str	r0, [sp, #32]
   187f8:	b	18644 <__assert_fail@plt+0x775c>
   187fc:	ldr	r0, [sp, #36]	; 0x24
   18800:	ldr	r0, [r0]
   18804:	ldr	r1, [sp, #36]	; 0x24
   18808:	ldr	r1, [r1, #32]
   1880c:	sub	r0, r0, r1
   18810:	ldr	r1, [sp, #36]	; 0x24
   18814:	ldr	r2, [r1, #28]
   18818:	add	r0, r2, r0
   1881c:	str	r0, [r1, #28]
   18820:	ldr	r0, [sp, #36]	; 0x24
   18824:	ldr	r0, [r0]
   18828:	ldr	r1, [sp, #36]	; 0x24
   1882c:	str	r0, [r1, #32]
   18830:	add	sp, sp, #44	; 0x2c
   18834:	bx	lr
   18838:	push	{r4, r5, r6, sl, fp, lr}
   1883c:	add	fp, sp, #16
   18840:	sub	sp, sp, #96	; 0x60
   18844:	ldr	ip, [fp, #24]
   18848:	ldr	lr, [fp, #20]
   1884c:	ldr	r4, [fp, #16]
   18850:	ldr	r5, [fp, #12]
   18854:	ldr	r6, [fp, #8]
   18858:	str	r0, [fp, #-24]	; 0xffffffe8
   1885c:	str	r1, [fp, #-28]	; 0xffffffe4
   18860:	str	r2, [fp, #-32]	; 0xffffffe0
   18864:	str	r3, [fp, #-36]	; 0xffffffdc
   18868:	movw	r0, #0
   1886c:	str	r0, [fp, #-52]	; 0xffffffcc
   18870:	ldr	r0, [fp, #16]
   18874:	ldr	r0, [r0, #20]
   18878:	str	r0, [fp, #-40]	; 0xffffffd8
   1887c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18880:	ldrb	r0, [r0]
   18884:	cmp	r0, #0
   18888:	movw	r0, #0
   1888c:	str	r0, [sp, #32]
   18890:	beq	188ac <__assert_fail@plt+0x79c4>
   18894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18898:	ldrb	r0, [r0]
   1889c:	cmp	r0, #61	; 0x3d
   188a0:	movw	r0, #0
   188a4:	movne	r0, #1
   188a8:	str	r0, [sp, #32]
   188ac:	ldr	r0, [sp, #32]
   188b0:	tst	r0, #1
   188b4:	beq	188cc <__assert_fail@plt+0x79e4>
   188b8:	b	188bc <__assert_fail@plt+0x79d4>
   188bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188c0:	add	r0, r0, #1
   188c4:	str	r0, [fp, #-40]	; 0xffffffd8
   188c8:	b	1887c <__assert_fail@plt+0x7994>
   188cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188d0:	ldr	r1, [fp, #16]
   188d4:	ldr	r1, [r1, #20]
   188d8:	sub	r0, r0, r1
   188dc:	str	r0, [fp, #-44]	; 0xffffffd4
   188e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188e4:	str	r0, [fp, #-48]	; 0xffffffd0
   188e8:	movw	r0, #0
   188ec:	str	r0, [sp, #56]	; 0x38
   188f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   188f4:	ldr	r0, [r0]
   188f8:	movw	r1, #0
   188fc:	cmp	r0, r1
   18900:	beq	1897c <__assert_fail@plt+0x7a94>
   18904:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18908:	ldr	r0, [r0]
   1890c:	ldr	r1, [fp, #16]
   18910:	ldr	r1, [r1, #20]
   18914:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18918:	bl	10ea0 <strncmp@plt>
   1891c:	cmp	r0, #0
   18920:	bne	1895c <__assert_fail@plt+0x7a74>
   18924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18928:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1892c:	ldr	r1, [r1]
   18930:	str	r0, [sp, #28]
   18934:	mov	r0, r1
   18938:	bl	10dbc <strlen@plt>
   1893c:	ldr	r1, [sp, #28]
   18940:	cmp	r1, r0
   18944:	bne	1895c <__assert_fail@plt+0x7a74>
   18948:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1894c:	str	r0, [fp, #-52]	; 0xffffffcc
   18950:	ldr	r0, [sp, #56]	; 0x38
   18954:	str	r0, [sp, #52]	; 0x34
   18958:	b	1897c <__assert_fail@plt+0x7a94>
   1895c:	b	18960 <__assert_fail@plt+0x7a78>
   18960:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18964:	add	r0, r0, #16
   18968:	str	r0, [fp, #-48]	; 0xffffffd0
   1896c:	ldr	r0, [sp, #56]	; 0x38
   18970:	add	r0, r0, #1
   18974:	str	r0, [sp, #56]	; 0x38
   18978:	b	188f0 <__assert_fail@plt+0x7a08>
   1897c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18980:	movw	r1, #0
   18984:	cmp	r0, r1
   18988:	bne	18d14 <__assert_fail@plt+0x7e2c>
   1898c:	movw	r0, #0
   18990:	str	r0, [sp, #48]	; 0x30
   18994:	str	r0, [sp, #44]	; 0x2c
   18998:	str	r0, [sp, #40]	; 0x28
   1899c:	mvn	r1, #0
   189a0:	str	r1, [sp, #36]	; 0x24
   189a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   189a8:	str	r1, [fp, #-48]	; 0xffffffd0
   189ac:	str	r0, [sp, #52]	; 0x34
   189b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189b4:	ldr	r0, [r0]
   189b8:	movw	r1, #0
   189bc:	cmp	r0, r1
   189c0:	beq	18b50 <__assert_fail@plt+0x7c68>
   189c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189c8:	ldr	r0, [r0]
   189cc:	ldr	r1, [fp, #16]
   189d0:	ldr	r1, [r1, #20]
   189d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   189d8:	bl	10ea0 <strncmp@plt>
   189dc:	cmp	r0, #0
   189e0:	bne	18b30 <__assert_fail@plt+0x7c48>
   189e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   189e8:	movw	r1, #0
   189ec:	cmp	r0, r1
   189f0:	bne	18a08 <__assert_fail@plt+0x7b20>
   189f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189f8:	str	r0, [fp, #-52]	; 0xffffffcc
   189fc:	ldr	r0, [sp, #52]	; 0x34
   18a00:	str	r0, [sp, #36]	; 0x24
   18a04:	b	18b2c <__assert_fail@plt+0x7c44>
   18a08:	ldr	r0, [fp, #12]
   18a0c:	cmp	r0, #0
   18a10:	bne	18a5c <__assert_fail@plt+0x7b74>
   18a14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a18:	ldr	r0, [r0, #4]
   18a1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18a20:	ldr	r1, [r1, #4]
   18a24:	cmp	r0, r1
   18a28:	bne	18a5c <__assert_fail@plt+0x7b74>
   18a2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a30:	ldr	r0, [r0, #8]
   18a34:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18a38:	ldr	r1, [r1, #8]
   18a3c:	cmp	r0, r1
   18a40:	bne	18a5c <__assert_fail@plt+0x7b74>
   18a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a48:	ldr	r0, [r0, #12]
   18a4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18a50:	ldr	r1, [r1, #12]
   18a54:	cmp	r0, r1
   18a58:	beq	18b28 <__assert_fail@plt+0x7c40>
   18a5c:	ldr	r0, [sp, #40]	; 0x28
   18a60:	cmp	r0, #0
   18a64:	bne	18b24 <__assert_fail@plt+0x7c3c>
   18a68:	ldr	r0, [fp, #20]
   18a6c:	cmp	r0, #0
   18a70:	bne	18a80 <__assert_fail@plt+0x7b98>
   18a74:	movw	r0, #1
   18a78:	str	r0, [sp, #40]	; 0x28
   18a7c:	b	18afc <__assert_fail@plt+0x7c14>
   18a80:	ldr	r0, [sp, #48]	; 0x30
   18a84:	movw	r1, #0
   18a88:	cmp	r0, r1
   18a8c:	bne	18af8 <__assert_fail@plt+0x7c10>
   18a90:	ldr	r0, [sp, #56]	; 0x38
   18a94:	bl	1b360 <__assert_fail@plt+0xa478>
   18a98:	str	r0, [sp, #48]	; 0x30
   18a9c:	movw	r1, #0
   18aa0:	cmp	r0, r1
   18aa4:	bne	18ab4 <__assert_fail@plt+0x7bcc>
   18aa8:	movw	r0, #1
   18aac:	str	r0, [sp, #40]	; 0x28
   18ab0:	b	18abc <__assert_fail@plt+0x7bd4>
   18ab4:	movw	r0, #1
   18ab8:	str	r0, [sp, #44]	; 0x2c
   18abc:	ldr	r0, [sp, #48]	; 0x30
   18ac0:	movw	r1, #0
   18ac4:	cmp	r0, r1
   18ac8:	beq	18af4 <__assert_fail@plt+0x7c0c>
   18acc:	ldr	r0, [sp, #48]	; 0x30
   18ad0:	ldr	r2, [sp, #56]	; 0x38
   18ad4:	movw	r1, #0
   18ad8:	and	r1, r1, #255	; 0xff
   18adc:	bl	10e04 <memset@plt>
   18ae0:	ldr	r0, [sp, #48]	; 0x30
   18ae4:	ldr	r1, [sp, #36]	; 0x24
   18ae8:	add	r0, r0, r1
   18aec:	movw	r1, #1
   18af0:	strb	r1, [r0]
   18af4:	b	18af8 <__assert_fail@plt+0x7c10>
   18af8:	b	18afc <__assert_fail@plt+0x7c14>
   18afc:	ldr	r0, [sp, #48]	; 0x30
   18b00:	movw	r1, #0
   18b04:	cmp	r0, r1
   18b08:	beq	18b20 <__assert_fail@plt+0x7c38>
   18b0c:	ldr	r0, [sp, #48]	; 0x30
   18b10:	ldr	r1, [sp, #52]	; 0x34
   18b14:	add	r0, r0, r1
   18b18:	movw	r1, #1
   18b1c:	strb	r1, [r0]
   18b20:	b	18b24 <__assert_fail@plt+0x7c3c>
   18b24:	b	18b28 <__assert_fail@plt+0x7c40>
   18b28:	b	18b2c <__assert_fail@plt+0x7c44>
   18b2c:	b	18b30 <__assert_fail@plt+0x7c48>
   18b30:	b	18b34 <__assert_fail@plt+0x7c4c>
   18b34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b38:	add	r0, r0, #16
   18b3c:	str	r0, [fp, #-48]	; 0xffffffd0
   18b40:	ldr	r0, [sp, #52]	; 0x34
   18b44:	add	r0, r0, #1
   18b48:	str	r0, [sp, #52]	; 0x34
   18b4c:	b	189b0 <__assert_fail@plt+0x7ac8>
   18b50:	ldr	r0, [sp, #48]	; 0x30
   18b54:	movw	r1, #0
   18b58:	cmp	r0, r1
   18b5c:	bne	18b6c <__assert_fail@plt+0x7c84>
   18b60:	ldr	r0, [sp, #40]	; 0x28
   18b64:	cmp	r0, #0
   18b68:	beq	18d0c <__assert_fail@plt+0x7e24>
   18b6c:	ldr	r0, [fp, #20]
   18b70:	cmp	r0, #0
   18b74:	beq	18cb4 <__assert_fail@plt+0x7dcc>
   18b78:	ldr	r0, [sp, #40]	; 0x28
   18b7c:	cmp	r0, #0
   18b80:	beq	18bc4 <__assert_fail@plt+0x7cdc>
   18b84:	movw	r0, #53512	; 0xd108
   18b88:	movt	r0, #2
   18b8c:	ldr	r0, [r0]
   18b90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18b94:	ldr	r2, [r1]
   18b98:	ldr	r3, [fp, #24]
   18b9c:	ldr	r1, [fp, #16]
   18ba0:	ldr	r1, [r1, #20]
   18ba4:	movw	ip, #49745	; 0xc251
   18ba8:	movt	ip, #1
   18bac:	str	r1, [sp, #24]
   18bb0:	mov	r1, ip
   18bb4:	ldr	ip, [sp, #24]
   18bb8:	str	ip, [sp]
   18bbc:	bl	10de0 <fprintf@plt>
   18bc0:	b	18cb0 <__assert_fail@plt+0x7dc8>
   18bc4:	movw	r0, #53512	; 0xd108
   18bc8:	movt	r0, #2
   18bcc:	ldr	r0, [r0]
   18bd0:	bl	10e58 <flockfile@plt>
   18bd4:	movw	r0, #53512	; 0xd108
   18bd8:	movt	r0, #2
   18bdc:	ldr	r0, [r0]
   18be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18be4:	ldr	r2, [r1]
   18be8:	ldr	r3, [fp, #24]
   18bec:	ldr	r1, [fp, #16]
   18bf0:	ldr	r1, [r1, #20]
   18bf4:	movw	ip, #49777	; 0xc271
   18bf8:	movt	ip, #1
   18bfc:	str	r1, [sp, #20]
   18c00:	mov	r1, ip
   18c04:	ldr	ip, [sp, #20]
   18c08:	str	ip, [sp]
   18c0c:	bl	10de0 <fprintf@plt>
   18c10:	movw	r1, #0
   18c14:	str	r1, [sp, #52]	; 0x34
   18c18:	ldr	r0, [sp, #52]	; 0x34
   18c1c:	ldr	r1, [sp, #56]	; 0x38
   18c20:	cmp	r0, r1
   18c24:	bge	18c80 <__assert_fail@plt+0x7d98>
   18c28:	ldr	r0, [sp, #48]	; 0x30
   18c2c:	ldr	r1, [sp, #52]	; 0x34
   18c30:	add	r0, r0, r1
   18c34:	ldrsb	r0, [r0]
   18c38:	cmp	r0, #0
   18c3c:	beq	18c6c <__assert_fail@plt+0x7d84>
   18c40:	movw	r0, #53512	; 0xd108
   18c44:	movt	r0, #2
   18c48:	ldr	r0, [r0]
   18c4c:	ldr	r2, [fp, #24]
   18c50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c54:	ldr	r3, [sp, #52]	; 0x34
   18c58:	add	r1, r1, r3, lsl #4
   18c5c:	ldr	r3, [r1]
   18c60:	movw	r1, #49824	; 0xc2a0
   18c64:	movt	r1, #1
   18c68:	bl	10de0 <fprintf@plt>
   18c6c:	b	18c70 <__assert_fail@plt+0x7d88>
   18c70:	ldr	r0, [sp, #52]	; 0x34
   18c74:	add	r0, r0, #1
   18c78:	str	r0, [sp, #52]	; 0x34
   18c7c:	b	18c18 <__assert_fail@plt+0x7d30>
   18c80:	movw	r0, #53512	; 0xd108
   18c84:	movt	r0, #2
   18c88:	ldr	r0, [r0]
   18c8c:	movw	r1, #49560	; 0xc198
   18c90:	movt	r1, #1
   18c94:	bl	10de0 <fprintf@plt>
   18c98:	movw	r1, #53512	; 0xd108
   18c9c:	movt	r1, #2
   18ca0:	ldr	r1, [r1]
   18ca4:	str	r0, [sp, #16]
   18ca8:	mov	r0, r1
   18cac:	bl	10d20 <funlockfile@plt>
   18cb0:	b	18cb4 <__assert_fail@plt+0x7dcc>
   18cb4:	ldr	r0, [sp, #44]	; 0x2c
   18cb8:	cmp	r0, #0
   18cbc:	beq	18cc8 <__assert_fail@plt+0x7de0>
   18cc0:	ldr	r0, [sp, #48]	; 0x30
   18cc4:	bl	14110 <__assert_fail@plt+0x3228>
   18cc8:	ldr	r0, [fp, #16]
   18ccc:	ldr	r0, [r0, #20]
   18cd0:	bl	10dbc <strlen@plt>
   18cd4:	ldr	r1, [fp, #16]
   18cd8:	ldr	r2, [r1, #20]
   18cdc:	add	r0, r2, r0
   18ce0:	str	r0, [r1, #20]
   18ce4:	ldr	r0, [fp, #16]
   18ce8:	ldr	r1, [r0]
   18cec:	add	r1, r1, #1
   18cf0:	str	r1, [r0]
   18cf4:	ldr	r0, [fp, #16]
   18cf8:	movw	r1, #0
   18cfc:	str	r1, [r0, #8]
   18d00:	movw	r0, #63	; 0x3f
   18d04:	str	r0, [fp, #-20]	; 0xffffffec
   18d08:	b	18fdc <__assert_fail@plt+0x80f4>
   18d0c:	ldr	r0, [sp, #36]	; 0x24
   18d10:	str	r0, [sp, #52]	; 0x34
   18d14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18d18:	movw	r1, #0
   18d1c:	cmp	r0, r1
   18d20:	bne	18df4 <__assert_fail@plt+0x7f0c>
   18d24:	ldr	r0, [fp, #12]
   18d28:	cmp	r0, #0
   18d2c:	beq	18d70 <__assert_fail@plt+0x7e88>
   18d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d34:	ldr	r1, [fp, #16]
   18d38:	ldr	r1, [r1]
   18d3c:	add	r0, r0, r1, lsl #2
   18d40:	ldr	r0, [r0]
   18d44:	ldrb	r0, [r0, #1]
   18d48:	cmp	r0, #45	; 0x2d
   18d4c:	beq	18d70 <__assert_fail@plt+0x7e88>
   18d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d54:	ldr	r1, [fp, #16]
   18d58:	ldr	r1, [r1, #20]
   18d5c:	ldrb	r1, [r1]
   18d60:	bl	10dc8 <strchr@plt>
   18d64:	movw	r1, #0
   18d68:	cmp	r0, r1
   18d6c:	bne	18de8 <__assert_fail@plt+0x7f00>
   18d70:	ldr	r0, [fp, #20]
   18d74:	cmp	r0, #0
   18d78:	beq	18db8 <__assert_fail@plt+0x7ed0>
   18d7c:	movw	r0, #53512	; 0xd108
   18d80:	movt	r0, #2
   18d84:	ldr	r0, [r0]
   18d88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d8c:	ldr	r2, [r1]
   18d90:	ldr	r3, [fp, #24]
   18d94:	ldr	r1, [fp, #16]
   18d98:	ldr	r1, [r1, #20]
   18d9c:	movw	ip, #49832	; 0xc2a8
   18da0:	movt	ip, #1
   18da4:	str	r1, [sp, #12]
   18da8:	mov	r1, ip
   18dac:	ldr	ip, [sp, #12]
   18db0:	str	ip, [sp]
   18db4:	bl	10de0 <fprintf@plt>
   18db8:	ldr	r0, [fp, #16]
   18dbc:	movw	r1, #0
   18dc0:	str	r1, [r0, #20]
   18dc4:	ldr	r0, [fp, #16]
   18dc8:	ldr	r2, [r0]
   18dcc:	add	r2, r2, #1
   18dd0:	str	r2, [r0]
   18dd4:	ldr	r0, [fp, #16]
   18dd8:	str	r1, [r0, #8]
   18ddc:	movw	r0, #63	; 0x3f
   18de0:	str	r0, [fp, #-20]	; 0xffffffec
   18de4:	b	18fdc <__assert_fail@plt+0x80f4>
   18de8:	mvn	r0, #0
   18dec:	str	r0, [fp, #-20]	; 0xffffffec
   18df0:	b	18fdc <__assert_fail@plt+0x80f4>
   18df4:	ldr	r0, [fp, #16]
   18df8:	ldr	r1, [r0]
   18dfc:	add	r1, r1, #1
   18e00:	str	r1, [r0]
   18e04:	ldr	r0, [fp, #16]
   18e08:	movw	r1, #0
   18e0c:	str	r1, [r0, #20]
   18e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e14:	ldrsb	r0, [r0]
   18e18:	cmp	r0, #0
   18e1c:	beq	18eac <__assert_fail@plt+0x7fc4>
   18e20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18e24:	ldr	r0, [r0, #4]
   18e28:	cmp	r0, #0
   18e2c:	beq	18e44 <__assert_fail@plt+0x7f5c>
   18e30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e34:	add	r0, r0, #1
   18e38:	ldr	r1, [fp, #16]
   18e3c:	str	r0, [r1, #12]
   18e40:	b	18ea8 <__assert_fail@plt+0x7fc0>
   18e44:	ldr	r0, [fp, #20]
   18e48:	cmp	r0, #0
   18e4c:	beq	18e8c <__assert_fail@plt+0x7fa4>
   18e50:	movw	r0, #53512	; 0xd108
   18e54:	movt	r0, #2
   18e58:	ldr	r0, [r0]
   18e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e60:	ldr	r2, [r1]
   18e64:	ldr	r3, [fp, #24]
   18e68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18e6c:	ldr	r1, [r1]
   18e70:	movw	ip, #49864	; 0xc2c8
   18e74:	movt	ip, #1
   18e78:	str	r1, [sp, #8]
   18e7c:	mov	r1, ip
   18e80:	ldr	ip, [sp, #8]
   18e84:	str	ip, [sp]
   18e88:	bl	10de0 <fprintf@plt>
   18e8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18e90:	ldr	r0, [r0, #12]
   18e94:	ldr	r1, [fp, #16]
   18e98:	str	r0, [r1, #8]
   18e9c:	movw	r0, #63	; 0x3f
   18ea0:	str	r0, [fp, #-20]	; 0xffffffec
   18ea4:	b	18fdc <__assert_fail@plt+0x80f4>
   18ea8:	b	18f80 <__assert_fail@plt+0x8098>
   18eac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18eb0:	ldr	r0, [r0, #4]
   18eb4:	cmp	r0, #1
   18eb8:	bne	18f7c <__assert_fail@plt+0x8094>
   18ebc:	ldr	r0, [fp, #16]
   18ec0:	ldr	r0, [r0]
   18ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ec8:	cmp	r0, r1
   18ecc:	bge	18ef8 <__assert_fail@plt+0x8010>
   18ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18ed4:	ldr	r1, [fp, #16]
   18ed8:	ldr	r2, [r1]
   18edc:	add	r3, r2, #1
   18ee0:	str	r3, [r1]
   18ee4:	add	r0, r0, r2, lsl #2
   18ee8:	ldr	r0, [r0]
   18eec:	ldr	r1, [fp, #16]
   18ef0:	str	r0, [r1, #12]
   18ef4:	b	18f78 <__assert_fail@plt+0x8090>
   18ef8:	ldr	r0, [fp, #20]
   18efc:	cmp	r0, #0
   18f00:	beq	18f40 <__assert_fail@plt+0x8058>
   18f04:	movw	r0, #53512	; 0xd108
   18f08:	movt	r0, #2
   18f0c:	ldr	r0, [r0]
   18f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f14:	ldr	r2, [r1]
   18f18:	ldr	r3, [fp, #24]
   18f1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18f20:	ldr	r1, [r1]
   18f24:	movw	ip, #49909	; 0xc2f5
   18f28:	movt	ip, #1
   18f2c:	str	r1, [sp, #4]
   18f30:	mov	r1, ip
   18f34:	ldr	ip, [sp, #4]
   18f38:	str	ip, [sp]
   18f3c:	bl	10de0 <fprintf@plt>
   18f40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18f44:	ldr	r0, [r0, #12]
   18f48:	ldr	r1, [fp, #16]
   18f4c:	str	r0, [r1, #8]
   18f50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f54:	ldrb	r0, [r0]
   18f58:	cmp	r0, #58	; 0x3a
   18f5c:	movw	r0, #0
   18f60:	moveq	r0, #1
   18f64:	tst	r0, #1
   18f68:	movw	r0, #58	; 0x3a
   18f6c:	moveq	r0, #63	; 0x3f
   18f70:	str	r0, [fp, #-20]	; 0xffffffec
   18f74:	b	18fdc <__assert_fail@plt+0x80f4>
   18f78:	b	18f7c <__assert_fail@plt+0x8094>
   18f7c:	b	18f80 <__assert_fail@plt+0x8098>
   18f80:	ldr	r0, [fp, #8]
   18f84:	movw	r1, #0
   18f88:	cmp	r0, r1
   18f8c:	beq	18f9c <__assert_fail@plt+0x80b4>
   18f90:	ldr	r0, [sp, #52]	; 0x34
   18f94:	ldr	r1, [fp, #8]
   18f98:	str	r0, [r1]
   18f9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18fa0:	ldr	r0, [r0, #8]
   18fa4:	movw	r1, #0
   18fa8:	cmp	r0, r1
   18fac:	beq	18fd0 <__assert_fail@plt+0x80e8>
   18fb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18fb4:	ldr	r0, [r0, #12]
   18fb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18fbc:	ldr	r1, [r1, #8]
   18fc0:	str	r0, [r1]
   18fc4:	movw	r0, #0
   18fc8:	str	r0, [fp, #-20]	; 0xffffffec
   18fcc:	b	18fdc <__assert_fail@plt+0x80f4>
   18fd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18fd4:	ldr	r0, [r0, #12]
   18fd8:	str	r0, [fp, #-20]	; 0xffffffec
   18fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fe0:	sub	sp, fp, #16
   18fe4:	pop	{r4, r5, r6, sl, fp, pc}
   18fe8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18fec:	add	fp, sp, #24
   18ff0:	sub	sp, sp, #56	; 0x38
   18ff4:	ldr	ip, [fp, #16]
   18ff8:	ldr	lr, [fp, #12]
   18ffc:	ldr	r4, [fp, #8]
   19000:	str	r0, [fp, #-28]	; 0xffffffe4
   19004:	str	r1, [fp, #-32]	; 0xffffffe0
   19008:	str	r2, [fp, #-36]	; 0xffffffdc
   1900c:	str	r3, [sp, #40]	; 0x28
   19010:	movw	r0, #53500	; 0xd0fc
   19014:	movt	r0, #2
   19018:	ldr	r0, [r0]
   1901c:	movw	r1, #53540	; 0xd124
   19020:	movt	r1, #2
   19024:	str	r0, [r1]
   19028:	movw	r0, #53504	; 0xd100
   1902c:	movt	r0, #2
   19030:	ldr	r0, [r0]
   19034:	str	r0, [r1, #4]
   19038:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1903c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19044:	ldr	r5, [sp, #40]	; 0x28
   19048:	ldr	r6, [fp, #8]
   1904c:	ldr	r7, [fp, #12]
   19050:	ldr	r8, [fp, #16]
   19054:	str	r1, [sp, #32]
   19058:	mov	r1, r2
   1905c:	mov	r2, r3
   19060:	mov	r3, r5
   19064:	str	r6, [sp]
   19068:	str	r7, [sp, #4]
   1906c:	ldr	r5, [sp, #32]
   19070:	str	r5, [sp, #8]
   19074:	str	r8, [sp, #12]
   19078:	str	ip, [sp, #28]
   1907c:	str	lr, [sp, #24]
   19080:	str	r4, [sp, #20]
   19084:	bl	17ba8 <__assert_fail@plt+0x6cc0>
   19088:	str	r0, [sp, #36]	; 0x24
   1908c:	movw	r0, #53540	; 0xd124
   19090:	movt	r0, #2
   19094:	ldr	r1, [r0]
   19098:	movw	r2, #53500	; 0xd0fc
   1909c:	movt	r2, #2
   190a0:	str	r1, [r2]
   190a4:	ldr	r1, [r0, #12]
   190a8:	movw	r2, #53680	; 0xd1b0
   190ac:	movt	r2, #2
   190b0:	str	r1, [r2]
   190b4:	ldr	r0, [r0, #8]
   190b8:	movw	r1, #53508	; 0xd104
   190bc:	movt	r1, #2
   190c0:	str	r0, [r1]
   190c4:	ldr	r0, [sp, #36]	; 0x24
   190c8:	sub	sp, fp, #24
   190cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   190d0:	push	{fp, lr}
   190d4:	mov	fp, sp
   190d8:	sub	sp, sp, #32
   190dc:	str	r0, [fp, #-4]
   190e0:	str	r1, [fp, #-8]
   190e4:	str	r2, [fp, #-12]
   190e8:	ldr	r0, [fp, #-4]
   190ec:	ldr	r1, [fp, #-8]
   190f0:	ldr	r2, [fp, #-12]
   190f4:	movw	r3, #0
   190f8:	str	r3, [sp, #16]
   190fc:	ldr	ip, [sp, #16]
   19100:	str	ip, [sp]
   19104:	str	ip, [sp, #4]
   19108:	movw	lr, #1
   1910c:	str	lr, [sp, #8]
   19110:	bl	18fe8 <__assert_fail@plt+0x8100>
   19114:	mov	sp, fp
   19118:	pop	{fp, pc}
   1911c:	andeq	r0, r0, r0
   19120:	sub	sp, sp, #4
   19124:	str	r0, [sp]
   19128:	ldr	r0, [sp]
   1912c:	ldr	r0, [r0, #8]
   19130:	add	sp, sp, #4
   19134:	bx	lr
   19138:	sub	sp, sp, #4
   1913c:	str	r0, [sp]
   19140:	ldr	r0, [sp]
   19144:	ldr	r0, [r0, #12]
   19148:	add	sp, sp, #4
   1914c:	bx	lr
   19150:	sub	sp, sp, #4
   19154:	str	r0, [sp]
   19158:	ldr	r0, [sp]
   1915c:	ldr	r0, [r0, #16]
   19160:	add	sp, sp, #4
   19164:	bx	lr
   19168:	sub	sp, sp, #20
   1916c:	str	r0, [sp, #16]
   19170:	movw	r0, #0
   19174:	str	r0, [sp, #8]
   19178:	ldr	r0, [sp, #16]
   1917c:	ldr	r0, [r0]
   19180:	str	r0, [sp, #12]
   19184:	ldr	r0, [sp, #12]
   19188:	ldr	r1, [sp, #16]
   1918c:	ldr	r1, [r1, #4]
   19190:	cmp	r0, r1
   19194:	bcs	19218 <__assert_fail@plt+0x8330>
   19198:	ldr	r0, [sp, #12]
   1919c:	ldr	r0, [r0]
   191a0:	movw	r1, #0
   191a4:	cmp	r0, r1
   191a8:	beq	19204 <__assert_fail@plt+0x831c>
   191ac:	ldr	r0, [sp, #12]
   191b0:	str	r0, [sp, #4]
   191b4:	movw	r0, #1
   191b8:	str	r0, [sp]
   191bc:	ldr	r0, [sp, #4]
   191c0:	ldr	r0, [r0, #4]
   191c4:	str	r0, [sp, #4]
   191c8:	ldr	r0, [sp, #4]
   191cc:	movw	r1, #0
   191d0:	cmp	r0, r1
   191d4:	beq	191e8 <__assert_fail@plt+0x8300>
   191d8:	ldr	r0, [sp]
   191dc:	add	r0, r0, #1
   191e0:	str	r0, [sp]
   191e4:	b	191bc <__assert_fail@plt+0x82d4>
   191e8:	ldr	r0, [sp]
   191ec:	ldr	r1, [sp, #8]
   191f0:	cmp	r0, r1
   191f4:	bls	19200 <__assert_fail@plt+0x8318>
   191f8:	ldr	r0, [sp]
   191fc:	str	r0, [sp, #8]
   19200:	b	19204 <__assert_fail@plt+0x831c>
   19204:	b	19208 <__assert_fail@plt+0x8320>
   19208:	ldr	r0, [sp, #12]
   1920c:	add	r0, r0, #8
   19210:	str	r0, [sp, #12]
   19214:	b	19184 <__assert_fail@plt+0x829c>
   19218:	ldr	r0, [sp, #8]
   1921c:	add	sp, sp, #20
   19220:	bx	lr
   19224:	sub	sp, sp, #24
   19228:	str	r0, [sp, #16]
   1922c:	movw	r0, #0
   19230:	str	r0, [sp, #8]
   19234:	str	r0, [sp, #4]
   19238:	ldr	r0, [sp, #16]
   1923c:	ldr	r0, [r0]
   19240:	str	r0, [sp, #12]
   19244:	ldr	r0, [sp, #12]
   19248:	ldr	r1, [sp, #16]
   1924c:	ldr	r1, [r1, #4]
   19250:	cmp	r0, r1
   19254:	bcs	192d0 <__assert_fail@plt+0x83e8>
   19258:	ldr	r0, [sp, #12]
   1925c:	ldr	r0, [r0]
   19260:	movw	r1, #0
   19264:	cmp	r0, r1
   19268:	beq	192bc <__assert_fail@plt+0x83d4>
   1926c:	ldr	r0, [sp, #12]
   19270:	str	r0, [sp]
   19274:	ldr	r0, [sp, #8]
   19278:	add	r0, r0, #1
   1927c:	str	r0, [sp, #8]
   19280:	ldr	r0, [sp, #4]
   19284:	add	r0, r0, #1
   19288:	str	r0, [sp, #4]
   1928c:	ldr	r0, [sp]
   19290:	ldr	r0, [r0, #4]
   19294:	str	r0, [sp]
   19298:	ldr	r0, [sp]
   1929c:	movw	r1, #0
   192a0:	cmp	r0, r1
   192a4:	beq	192b8 <__assert_fail@plt+0x83d0>
   192a8:	ldr	r0, [sp, #4]
   192ac:	add	r0, r0, #1
   192b0:	str	r0, [sp, #4]
   192b4:	b	1928c <__assert_fail@plt+0x83a4>
   192b8:	b	192bc <__assert_fail@plt+0x83d4>
   192bc:	b	192c0 <__assert_fail@plt+0x83d8>
   192c0:	ldr	r0, [sp, #12]
   192c4:	add	r0, r0, #8
   192c8:	str	r0, [sp, #12]
   192cc:	b	19244 <__assert_fail@plt+0x835c>
   192d0:	ldr	r0, [sp, #8]
   192d4:	ldr	r1, [sp, #16]
   192d8:	ldr	r1, [r1, #12]
   192dc:	cmp	r0, r1
   192e0:	bne	19308 <__assert_fail@plt+0x8420>
   192e4:	ldr	r0, [sp, #4]
   192e8:	ldr	r1, [sp, #16]
   192ec:	ldr	r1, [r1, #16]
   192f0:	cmp	r0, r1
   192f4:	bne	19308 <__assert_fail@plt+0x8420>
   192f8:	movw	r0, #1
   192fc:	and	r0, r0, #1
   19300:	strb	r0, [sp, #23]
   19304:	b	19314 <__assert_fail@plt+0x842c>
   19308:	movw	r0, #0
   1930c:	and	r0, r0, #1
   19310:	strb	r0, [sp, #23]
   19314:	ldrb	r0, [sp, #23]
   19318:	and	r0, r0, #1
   1931c:	add	sp, sp, #24
   19320:	bx	lr
   19324:	nop	{0}
   19328:	push	{fp, lr}
   1932c:	mov	fp, sp
   19330:	sub	sp, sp, #48	; 0x30
   19334:	str	r0, [fp, #-4]
   19338:	str	r1, [fp, #-8]
   1933c:	ldr	r0, [fp, #-4]
   19340:	bl	19150 <__assert_fail@plt+0x8268>
   19344:	str	r0, [fp, #-12]
   19348:	ldr	r0, [fp, #-4]
   1934c:	bl	19120 <__assert_fail@plt+0x8238>
   19350:	str	r0, [fp, #-16]
   19354:	ldr	r0, [fp, #-4]
   19358:	bl	19138 <__assert_fail@plt+0x8250>
   1935c:	str	r0, [fp, #-20]	; 0xffffffec
   19360:	ldr	r0, [fp, #-4]
   19364:	bl	19168 <__assert_fail@plt+0x8280>
   19368:	str	r0, [sp, #24]
   1936c:	ldr	r0, [fp, #-8]
   19370:	ldr	r2, [fp, #-12]
   19374:	movw	r1, #49949	; 0xc31d
   19378:	movt	r1, #1
   1937c:	bl	10de0 <fprintf@plt>
   19380:	ldr	r1, [fp, #-8]
   19384:	ldr	r2, [fp, #-16]
   19388:	str	r0, [sp, #20]
   1938c:	mov	r0, r1
   19390:	movw	r1, #49973	; 0xc335
   19394:	movt	r1, #1
   19398:	bl	10de0 <fprintf@plt>
   1939c:	vldr	d16, [pc, #100]	; 19408 <__assert_fail@plt+0x8520>
   193a0:	ldr	r1, [fp, #-8]
   193a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   193a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   193ac:	vmov	s0, r3
   193b0:	vcvt.f64.u32	d17, s0
   193b4:	vmul.f64	d16, d16, d17
   193b8:	ldr	r3, [fp, #-16]
   193bc:	vmov	s0, r3
   193c0:	vcvt.f64.u32	d17, s0
   193c4:	vdiv.f64	d16, d16, d17
   193c8:	str	r0, [sp, #16]
   193cc:	mov	r0, r1
   193d0:	movw	r1, #49997	; 0xc34d
   193d4:	movt	r1, #1
   193d8:	vstr	d16, [sp]
   193dc:	bl	10de0 <fprintf@plt>
   193e0:	ldr	r1, [fp, #-8]
   193e4:	ldr	r2, [sp, #24]
   193e8:	str	r0, [sp, #12]
   193ec:	mov	r0, r1
   193f0:	movw	r1, #50030	; 0xc36e
   193f4:	movt	r1, #1
   193f8:	bl	10de0 <fprintf@plt>
   193fc:	mov	sp, fp
   19400:	pop	{fp, pc}
   19404:	nop	{0}
   19408:	andeq	r0, r0, r0
   1940c:	subsmi	r0, r9, r0
   19410:	push	{fp, lr}
   19414:	mov	fp, sp
   19418:	sub	sp, sp, #24
   1941c:	str	r0, [fp, #-8]
   19420:	str	r1, [sp, #12]
   19424:	ldr	r0, [fp, #-8]
   19428:	ldr	r1, [sp, #12]
   1942c:	bl	194e8 <__assert_fail@plt+0x8600>
   19430:	str	r0, [sp, #8]
   19434:	ldr	r0, [sp, #8]
   19438:	ldr	r0, [r0]
   1943c:	movw	r1, #0
   19440:	cmp	r0, r1
   19444:	bne	19454 <__assert_fail@plt+0x856c>
   19448:	movw	r0, #0
   1944c:	str	r0, [fp, #-4]
   19450:	b	194dc <__assert_fail@plt+0x85f4>
   19454:	ldr	r0, [sp, #8]
   19458:	str	r0, [sp, #4]
   1945c:	ldr	r0, [sp, #4]
   19460:	movw	r1, #0
   19464:	cmp	r0, r1
   19468:	beq	194d4 <__assert_fail@plt+0x85ec>
   1946c:	ldr	r0, [sp, #12]
   19470:	ldr	r1, [sp, #4]
   19474:	ldr	r1, [r1]
   19478:	cmp	r0, r1
   1947c:	beq	194b0 <__assert_fail@plt+0x85c8>
   19480:	ldr	r0, [fp, #-8]
   19484:	ldr	r0, [r0, #28]
   19488:	ldr	r1, [sp, #12]
   1948c:	ldr	r2, [sp, #4]
   19490:	ldr	r2, [r2]
   19494:	str	r0, [sp]
   19498:	mov	r0, r1
   1949c:	mov	r1, r2
   194a0:	ldr	r2, [sp]
   194a4:	blx	r2
   194a8:	tst	r0, #1
   194ac:	beq	194c0 <__assert_fail@plt+0x85d8>
   194b0:	ldr	r0, [sp, #4]
   194b4:	ldr	r0, [r0]
   194b8:	str	r0, [fp, #-4]
   194bc:	b	194dc <__assert_fail@plt+0x85f4>
   194c0:	b	194c4 <__assert_fail@plt+0x85dc>
   194c4:	ldr	r0, [sp, #4]
   194c8:	ldr	r0, [r0, #4]
   194cc:	str	r0, [sp, #4]
   194d0:	b	1945c <__assert_fail@plt+0x8574>
   194d4:	movw	r0, #0
   194d8:	str	r0, [fp, #-4]
   194dc:	ldr	r0, [fp, #-4]
   194e0:	mov	sp, fp
   194e4:	pop	{fp, pc}
   194e8:	push	{fp, lr}
   194ec:	mov	fp, sp
   194f0:	sub	sp, sp, #16
   194f4:	str	r0, [fp, #-4]
   194f8:	str	r1, [sp, #8]
   194fc:	ldr	r0, [fp, #-4]
   19500:	ldr	r0, [r0, #24]
   19504:	ldr	r1, [sp, #8]
   19508:	ldr	r2, [fp, #-4]
   1950c:	ldr	r2, [r2, #8]
   19510:	str	r0, [sp]
   19514:	mov	r0, r1
   19518:	mov	r1, r2
   1951c:	ldr	r2, [sp]
   19520:	blx	r2
   19524:	str	r0, [sp, #4]
   19528:	ldr	r0, [sp, #4]
   1952c:	ldr	r1, [fp, #-4]
   19530:	ldr	r1, [r1, #8]
   19534:	cmp	r0, r1
   19538:	bcc	19540 <__assert_fail@plt+0x8658>
   1953c:	bl	10eac <abort@plt>
   19540:	ldr	r0, [fp, #-4]
   19544:	ldr	r0, [r0]
   19548:	ldr	r1, [sp, #4]
   1954c:	add	r0, r0, r1, lsl #3
   19550:	mov	sp, fp
   19554:	pop	{fp, pc}
   19558:	push	{fp, lr}
   1955c:	mov	fp, sp
   19560:	sub	sp, sp, #16
   19564:	str	r0, [sp, #8]
   19568:	ldr	r0, [sp, #8]
   1956c:	ldr	r0, [r0, #16]
   19570:	cmp	r0, #0
   19574:	bne	19584 <__assert_fail@plt+0x869c>
   19578:	movw	r0, #0
   1957c:	str	r0, [fp, #-4]
   19580:	b	195e4 <__assert_fail@plt+0x86fc>
   19584:	ldr	r0, [sp, #8]
   19588:	ldr	r0, [r0]
   1958c:	str	r0, [sp, #4]
   19590:	ldr	r0, [sp, #4]
   19594:	ldr	r1, [sp, #8]
   19598:	ldr	r1, [r1, #4]
   1959c:	cmp	r0, r1
   195a0:	bcc	195a8 <__assert_fail@plt+0x86c0>
   195a4:	bl	10eac <abort@plt>
   195a8:	ldr	r0, [sp, #4]
   195ac:	ldr	r0, [r0]
   195b0:	movw	r1, #0
   195b4:	cmp	r0, r1
   195b8:	beq	195cc <__assert_fail@plt+0x86e4>
   195bc:	ldr	r0, [sp, #4]
   195c0:	ldr	r0, [r0]
   195c4:	str	r0, [fp, #-4]
   195c8:	b	195e4 <__assert_fail@plt+0x86fc>
   195cc:	b	195d0 <__assert_fail@plt+0x86e8>
   195d0:	b	195d4 <__assert_fail@plt+0x86ec>
   195d4:	ldr	r0, [sp, #4]
   195d8:	add	r0, r0, #8
   195dc:	str	r0, [sp, #4]
   195e0:	b	19590 <__assert_fail@plt+0x86a8>
   195e4:	ldr	r0, [fp, #-4]
   195e8:	mov	sp, fp
   195ec:	pop	{fp, pc}
   195f0:	push	{fp, lr}
   195f4:	mov	fp, sp
   195f8:	sub	sp, sp, #24
   195fc:	str	r0, [fp, #-8]
   19600:	str	r1, [sp, #12]
   19604:	ldr	r0, [fp, #-8]
   19608:	ldr	r1, [sp, #12]
   1960c:	bl	194e8 <__assert_fail@plt+0x8600>
   19610:	str	r0, [sp, #8]
   19614:	ldr	r0, [sp, #8]
   19618:	str	r0, [sp, #4]
   1961c:	ldr	r0, [sp, #4]
   19620:	ldr	r0, [r0]
   19624:	ldr	r1, [sp, #12]
   19628:	cmp	r0, r1
   1962c:	bne	19658 <__assert_fail@plt+0x8770>
   19630:	ldr	r0, [sp, #4]
   19634:	ldr	r0, [r0, #4]
   19638:	movw	r1, #0
   1963c:	cmp	r0, r1
   19640:	beq	19658 <__assert_fail@plt+0x8770>
   19644:	ldr	r0, [sp, #4]
   19648:	ldr	r0, [r0, #4]
   1964c:	ldr	r0, [r0]
   19650:	str	r0, [fp, #-4]
   19654:	b	196c4 <__assert_fail@plt+0x87dc>
   19658:	ldr	r0, [sp, #4]
   1965c:	ldr	r0, [r0, #4]
   19660:	str	r0, [sp, #4]
   19664:	ldr	r0, [sp, #4]
   19668:	movw	r1, #0
   1966c:	cmp	r0, r1
   19670:	bne	1961c <__assert_fail@plt+0x8734>
   19674:	b	19678 <__assert_fail@plt+0x8790>
   19678:	ldr	r0, [sp, #8]
   1967c:	add	r0, r0, #8
   19680:	str	r0, [sp, #8]
   19684:	ldr	r1, [fp, #-8]
   19688:	ldr	r1, [r1, #4]
   1968c:	cmp	r0, r1
   19690:	bcs	196bc <__assert_fail@plt+0x87d4>
   19694:	ldr	r0, [sp, #8]
   19698:	ldr	r0, [r0]
   1969c:	movw	r1, #0
   196a0:	cmp	r0, r1
   196a4:	beq	196b8 <__assert_fail@plt+0x87d0>
   196a8:	ldr	r0, [sp, #8]
   196ac:	ldr	r0, [r0]
   196b0:	str	r0, [fp, #-4]
   196b4:	b	196c4 <__assert_fail@plt+0x87dc>
   196b8:	b	19678 <__assert_fail@plt+0x8790>
   196bc:	movw	r0, #0
   196c0:	str	r0, [fp, #-4]
   196c4:	ldr	r0, [fp, #-4]
   196c8:	mov	sp, fp
   196cc:	pop	{fp, pc}
   196d0:	sub	sp, sp, #28
   196d4:	str	r0, [sp, #20]
   196d8:	str	r1, [sp, #16]
   196dc:	str	r2, [sp, #12]
   196e0:	movw	r0, #0
   196e4:	str	r0, [sp, #8]
   196e8:	ldr	r0, [sp, #20]
   196ec:	ldr	r0, [r0]
   196f0:	str	r0, [sp, #4]
   196f4:	ldr	r0, [sp, #4]
   196f8:	ldr	r1, [sp, #20]
   196fc:	ldr	r1, [r1, #4]
   19700:	cmp	r0, r1
   19704:	bcs	19798 <__assert_fail@plt+0x88b0>
   19708:	ldr	r0, [sp, #4]
   1970c:	ldr	r0, [r0]
   19710:	movw	r1, #0
   19714:	cmp	r0, r1
   19718:	beq	19784 <__assert_fail@plt+0x889c>
   1971c:	ldr	r0, [sp, #4]
   19720:	str	r0, [sp]
   19724:	ldr	r0, [sp]
   19728:	movw	r1, #0
   1972c:	cmp	r0, r1
   19730:	beq	19780 <__assert_fail@plt+0x8898>
   19734:	ldr	r0, [sp, #8]
   19738:	ldr	r1, [sp, #12]
   1973c:	cmp	r0, r1
   19740:	bcc	19750 <__assert_fail@plt+0x8868>
   19744:	ldr	r0, [sp, #8]
   19748:	str	r0, [sp, #24]
   1974c:	b	197a0 <__assert_fail@plt+0x88b8>
   19750:	ldr	r0, [sp]
   19754:	ldr	r0, [r0]
   19758:	ldr	r1, [sp, #16]
   1975c:	ldr	r2, [sp, #8]
   19760:	add	r3, r2, #1
   19764:	str	r3, [sp, #8]
   19768:	add	r1, r1, r2, lsl #2
   1976c:	str	r0, [r1]
   19770:	ldr	r0, [sp]
   19774:	ldr	r0, [r0, #4]
   19778:	str	r0, [sp]
   1977c:	b	19724 <__assert_fail@plt+0x883c>
   19780:	b	19784 <__assert_fail@plt+0x889c>
   19784:	b	19788 <__assert_fail@plt+0x88a0>
   19788:	ldr	r0, [sp, #4]
   1978c:	add	r0, r0, #8
   19790:	str	r0, [sp, #4]
   19794:	b	196f4 <__assert_fail@plt+0x880c>
   19798:	ldr	r0, [sp, #8]
   1979c:	str	r0, [sp, #24]
   197a0:	ldr	r0, [sp, #24]
   197a4:	add	sp, sp, #28
   197a8:	bx	lr
   197ac:	push	{fp, lr}
   197b0:	mov	fp, sp
   197b4:	sub	sp, sp, #32
   197b8:	str	r0, [fp, #-8]
   197bc:	str	r1, [fp, #-12]
   197c0:	str	r2, [sp, #16]
   197c4:	movw	r0, #0
   197c8:	str	r0, [sp, #12]
   197cc:	ldr	r0, [fp, #-8]
   197d0:	ldr	r0, [r0]
   197d4:	str	r0, [sp, #8]
   197d8:	ldr	r0, [sp, #8]
   197dc:	ldr	r1, [fp, #-8]
   197e0:	ldr	r1, [r1, #4]
   197e4:	cmp	r0, r1
   197e8:	bcs	19884 <__assert_fail@plt+0x899c>
   197ec:	ldr	r0, [sp, #8]
   197f0:	ldr	r0, [r0]
   197f4:	movw	r1, #0
   197f8:	cmp	r0, r1
   197fc:	beq	19870 <__assert_fail@plt+0x8988>
   19800:	ldr	r0, [sp, #8]
   19804:	str	r0, [sp, #4]
   19808:	ldr	r0, [sp, #4]
   1980c:	movw	r1, #0
   19810:	cmp	r0, r1
   19814:	beq	1986c <__assert_fail@plt+0x8984>
   19818:	ldr	r0, [fp, #-12]
   1981c:	ldr	r1, [sp, #4]
   19820:	ldr	r1, [r1]
   19824:	ldr	r2, [sp, #16]
   19828:	str	r0, [sp]
   1982c:	mov	r0, r1
   19830:	mov	r1, r2
   19834:	ldr	r2, [sp]
   19838:	blx	r2
   1983c:	tst	r0, #1
   19840:	bne	19850 <__assert_fail@plt+0x8968>
   19844:	ldr	r0, [sp, #12]
   19848:	str	r0, [fp, #-4]
   1984c:	b	1988c <__assert_fail@plt+0x89a4>
   19850:	ldr	r0, [sp, #12]
   19854:	add	r0, r0, #1
   19858:	str	r0, [sp, #12]
   1985c:	ldr	r0, [sp, #4]
   19860:	ldr	r0, [r0, #4]
   19864:	str	r0, [sp, #4]
   19868:	b	19808 <__assert_fail@plt+0x8920>
   1986c:	b	19870 <__assert_fail@plt+0x8988>
   19870:	b	19874 <__assert_fail@plt+0x898c>
   19874:	ldr	r0, [sp, #8]
   19878:	add	r0, r0, #8
   1987c:	str	r0, [sp, #8]
   19880:	b	197d8 <__assert_fail@plt+0x88f0>
   19884:	ldr	r0, [sp, #12]
   19888:	str	r0, [fp, #-4]
   1988c:	ldr	r0, [fp, #-4]
   19890:	mov	sp, fp
   19894:	pop	{fp, pc}
   19898:	sub	sp, sp, #16
   1989c:	str	r0, [sp, #12]
   198a0:	str	r1, [sp, #8]
   198a4:	movw	r0, #0
   198a8:	str	r0, [sp, #4]
   198ac:	ldr	r0, [sp, #12]
   198b0:	ldrb	r0, [r0]
   198b4:	strb	r0, [sp, #3]
   198b8:	sxtb	r0, r0
   198bc:	cmp	r0, #0
   198c0:	beq	198f4 <__assert_fail@plt+0x8a0c>
   198c4:	ldr	r0, [sp, #4]
   198c8:	rsb	r0, r0, r0, lsl #5
   198cc:	ldrb	r1, [sp, #3]
   198d0:	add	r0, r0, r1
   198d4:	ldr	r1, [sp, #8]
   198d8:	udiv	r2, r0, r1
   198dc:	mls	r0, r2, r1, r0
   198e0:	str	r0, [sp, #4]
   198e4:	ldr	r0, [sp, #12]
   198e8:	add	r0, r0, #1
   198ec:	str	r0, [sp, #12]
   198f0:	b	198ac <__assert_fail@plt+0x89c4>
   198f4:	ldr	r0, [sp, #4]
   198f8:	add	sp, sp, #16
   198fc:	bx	lr
   19900:	push	{fp, lr}
   19904:	mov	fp, sp
   19908:	sub	sp, sp, #8
   1990c:	movw	r1, #50056	; 0xc388
   19910:	movt	r1, #1
   19914:	str	r0, [sp, #4]
   19918:	ldr	r0, [sp, #4]
   1991c:	movw	r2, #20
   19920:	bl	10cf0 <memcpy@plt>
   19924:	mov	sp, fp
   19928:	pop	{fp, pc}
   1992c:	push	{fp, lr}
   19930:	mov	fp, sp
   19934:	sub	sp, sp, #24
   19938:	ldr	ip, [fp, #8]
   1993c:	str	r0, [fp, #-8]
   19940:	str	r1, [sp, #12]
   19944:	str	r2, [sp, #8]
   19948:	str	r3, [sp, #4]
   1994c:	ldr	r0, [sp, #8]
   19950:	movw	r1, #0
   19954:	cmp	r0, r1
   19958:	bne	19968 <__assert_fail@plt+0x8a80>
   1995c:	movw	r0, #39616	; 0x9ac0
   19960:	movt	r0, #1
   19964:	str	r0, [sp, #8]
   19968:	ldr	r0, [sp, #4]
   1996c:	movw	r1, #0
   19970:	cmp	r0, r1
   19974:	bne	19984 <__assert_fail@plt+0x8a9c>
   19978:	movw	r0, #39676	; 0x9afc
   1997c:	movt	r0, #1
   19980:	str	r0, [sp, #4]
   19984:	movw	r0, #40	; 0x28
   19988:	bl	1b360 <__assert_fail@plt+0xa478>
   1998c:	str	r0, [sp]
   19990:	ldr	r0, [sp]
   19994:	movw	r1, #0
   19998:	cmp	r0, r1
   1999c:	bne	199ac <__assert_fail@plt+0x8ac4>
   199a0:	movw	r0, #0
   199a4:	str	r0, [fp, #-4]
   199a8:	b	19ab4 <__assert_fail@plt+0x8bcc>
   199ac:	ldr	r0, [sp, #12]
   199b0:	movw	r1, #0
   199b4:	cmp	r0, r1
   199b8:	bne	199c8 <__assert_fail@plt+0x8ae0>
   199bc:	movw	r0, #50056	; 0xc388
   199c0:	movt	r0, #1
   199c4:	str	r0, [sp, #12]
   199c8:	ldr	r0, [sp, #12]
   199cc:	ldr	r1, [sp]
   199d0:	str	r0, [r1, #20]
   199d4:	ldr	r0, [sp]
   199d8:	bl	19b28 <__assert_fail@plt+0x8c40>
   199dc:	tst	r0, #1
   199e0:	bne	199e8 <__assert_fail@plt+0x8b00>
   199e4:	b	19aa4 <__assert_fail@plt+0x8bbc>
   199e8:	ldr	r0, [fp, #-8]
   199ec:	ldr	r1, [sp, #12]
   199f0:	bl	19c7c <__assert_fail@plt+0x8d94>
   199f4:	ldr	r1, [sp]
   199f8:	str	r0, [r1, #8]
   199fc:	ldr	r0, [sp]
   19a00:	ldr	r0, [r0, #8]
   19a04:	cmp	r0, #0
   19a08:	bne	19a10 <__assert_fail@plt+0x8b28>
   19a0c:	b	19aa4 <__assert_fail@plt+0x8bbc>
   19a10:	ldr	r0, [sp]
   19a14:	ldr	r0, [r0, #8]
   19a18:	movw	r1, #8
   19a1c:	bl	1b2c4 <__assert_fail@plt+0xa3dc>
   19a20:	ldr	r1, [sp]
   19a24:	str	r0, [r1]
   19a28:	ldr	r0, [sp]
   19a2c:	ldr	r0, [r0]
   19a30:	movw	r1, #0
   19a34:	cmp	r0, r1
   19a38:	bne	19a40 <__assert_fail@plt+0x8b58>
   19a3c:	b	19aa4 <__assert_fail@plt+0x8bbc>
   19a40:	ldr	r0, [sp]
   19a44:	ldr	r1, [r0]
   19a48:	ldr	r0, [r0, #8]
   19a4c:	add	r0, r1, r0, lsl #3
   19a50:	ldr	r1, [sp]
   19a54:	str	r0, [r1, #4]
   19a58:	ldr	r0, [sp]
   19a5c:	movw	r1, #0
   19a60:	str	r1, [r0, #12]
   19a64:	ldr	r0, [sp]
   19a68:	str	r1, [r0, #16]
   19a6c:	ldr	r0, [sp, #8]
   19a70:	ldr	r2, [sp]
   19a74:	str	r0, [r2, #24]
   19a78:	ldr	r0, [sp, #4]
   19a7c:	ldr	r2, [sp]
   19a80:	str	r0, [r2, #28]
   19a84:	ldr	r0, [fp, #8]
   19a88:	ldr	r2, [sp]
   19a8c:	str	r0, [r2, #32]
   19a90:	ldr	r0, [sp]
   19a94:	str	r1, [r0, #36]	; 0x24
   19a98:	ldr	r0, [sp]
   19a9c:	str	r0, [fp, #-4]
   19aa0:	b	19ab4 <__assert_fail@plt+0x8bcc>
   19aa4:	ldr	r0, [sp]
   19aa8:	bl	14110 <__assert_fail@plt+0x3228>
   19aac:	movw	r0, #0
   19ab0:	str	r0, [fp, #-4]
   19ab4:	ldr	r0, [fp, #-4]
   19ab8:	mov	sp, fp
   19abc:	pop	{fp, pc}
   19ac0:	push	{fp, lr}
   19ac4:	mov	fp, sp
   19ac8:	sub	sp, sp, #16
   19acc:	str	r0, [fp, #-4]
   19ad0:	str	r1, [sp, #8]
   19ad4:	ldr	r0, [fp, #-4]
   19ad8:	mov	r1, #3
   19adc:	bl	1b614 <__assert_fail@plt+0xa72c>
   19ae0:	str	r0, [sp, #4]
   19ae4:	ldr	r0, [sp, #4]
   19ae8:	ldr	r1, [sp, #8]
   19aec:	udiv	r2, r0, r1
   19af0:	mls	r0, r2, r1, r0
   19af4:	mov	sp, fp
   19af8:	pop	{fp, pc}
   19afc:	sub	sp, sp, #8
   19b00:	str	r0, [sp, #4]
   19b04:	str	r1, [sp]
   19b08:	ldr	r0, [sp, #4]
   19b0c:	ldr	r1, [sp]
   19b10:	cmp	r0, r1
   19b14:	movw	r0, #0
   19b18:	moveq	r0, #1
   19b1c:	and	r0, r0, #1
   19b20:	add	sp, sp, #8
   19b24:	bx	lr
   19b28:	sub	sp, sp, #16
   19b2c:	str	r0, [sp, #8]
   19b30:	ldr	r0, [sp, #8]
   19b34:	ldr	r0, [r0, #20]
   19b38:	str	r0, [sp, #4]
   19b3c:	ldr	r0, [sp, #4]
   19b40:	movw	r1, #50056	; 0xc388
   19b44:	movt	r1, #1
   19b48:	cmp	r0, r1
   19b4c:	bne	19b60 <__assert_fail@plt+0x8c78>
   19b50:	movw	r0, #1
   19b54:	and	r0, r0, #1
   19b58:	strb	r0, [sp, #15]
   19b5c:	b	19c64 <__assert_fail@plt+0x8d7c>
   19b60:	vldr	s0, [pc, #268]	; 19c74 <__assert_fail@plt+0x8d8c>
   19b64:	vstr	s0, [sp]
   19b68:	vldr	s0, [sp]
   19b6c:	ldr	r0, [sp, #4]
   19b70:	vldr	s2, [r0, #8]
   19b74:	vcmpe.f32	s0, s2
   19b78:	vmrs	APSR_nzcv, fpscr
   19b7c:	bpl	19c48 <__assert_fail@plt+0x8d60>
   19b80:	ldr	r0, [sp, #4]
   19b84:	vldr	s0, [r0, #8]
   19b88:	vldr	s2, [sp]
   19b8c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   19b90:	vsub.f32	s2, s4, s2
   19b94:	vcmpe.f32	s0, s2
   19b98:	vmrs	APSR_nzcv, fpscr
   19b9c:	bpl	19c48 <__assert_fail@plt+0x8d60>
   19ba0:	vldr	s0, [sp]
   19ba4:	vmov.f32	s2, #112	; 0x3f800000  1.0
   19ba8:	vadd.f32	s0, s2, s0
   19bac:	ldr	r0, [sp, #4]
   19bb0:	vldr	s2, [r0, #12]
   19bb4:	vcmpe.f32	s0, s2
   19bb8:	vmrs	APSR_nzcv, fpscr
   19bbc:	bpl	19c48 <__assert_fail@plt+0x8d60>
   19bc0:	vldr	s0, [pc, #176]	; 19c78 <__assert_fail@plt+0x8d90>
   19bc4:	ldr	r0, [sp, #4]
   19bc8:	vldr	s2, [r0]
   19bcc:	vcmpe.f32	s0, s2
   19bd0:	vmrs	APSR_nzcv, fpscr
   19bd4:	bhi	19c48 <__assert_fail@plt+0x8d60>
   19bd8:	ldr	r0, [sp, #4]
   19bdc:	vldr	s0, [r0]
   19be0:	vldr	s2, [sp]
   19be4:	vadd.f32	s0, s0, s2
   19be8:	ldr	r0, [sp, #4]
   19bec:	vldr	s2, [r0, #4]
   19bf0:	vcmpe.f32	s0, s2
   19bf4:	vmrs	APSR_nzcv, fpscr
   19bf8:	bpl	19c48 <__assert_fail@plt+0x8d60>
   19bfc:	ldr	r0, [sp, #4]
   19c00:	vldr	s0, [r0, #4]
   19c04:	vmov.f32	s2, #112	; 0x3f800000  1.0
   19c08:	vcmpe.f32	s0, s2
   19c0c:	vmrs	APSR_nzcv, fpscr
   19c10:	bhi	19c48 <__assert_fail@plt+0x8d60>
   19c14:	ldr	r0, [sp, #4]
   19c18:	vldr	s0, [r0]
   19c1c:	vldr	s2, [sp]
   19c20:	vadd.f32	s0, s0, s2
   19c24:	ldr	r0, [sp, #4]
   19c28:	vldr	s2, [r0, #8]
   19c2c:	vcmpe.f32	s0, s2
   19c30:	vmrs	APSR_nzcv, fpscr
   19c34:	bpl	19c48 <__assert_fail@plt+0x8d60>
   19c38:	movw	r0, #1
   19c3c:	and	r0, r0, #1
   19c40:	strb	r0, [sp, #15]
   19c44:	b	19c64 <__assert_fail@plt+0x8d7c>
   19c48:	ldr	r0, [sp, #8]
   19c4c:	movw	r1, #50056	; 0xc388
   19c50:	movt	r1, #1
   19c54:	str	r1, [r0, #20]
   19c58:	movw	r0, #0
   19c5c:	and	r0, r0, #1
   19c60:	strb	r0, [sp, #15]
   19c64:	ldrb	r0, [sp, #15]
   19c68:	and	r0, r0, #1
   19c6c:	add	sp, sp, #16
   19c70:	bx	lr
   19c74:	stclcc	12, cr12, [ip, #820]	; 0x334
   19c78:	andeq	r0, r0, r0
   19c7c:	push	{fp, lr}
   19c80:	mov	fp, sp
   19c84:	sub	sp, sp, #16
   19c88:	str	r0, [sp, #8]
   19c8c:	str	r1, [sp, #4]
   19c90:	ldr	r0, [sp, #4]
   19c94:	ldrb	r0, [r0, #16]
   19c98:	tst	r0, #1
   19c9c:	bne	19cec <__assert_fail@plt+0x8e04>
   19ca0:	vldr	s0, [pc, #128]	; 19d28 <__assert_fail@plt+0x8e40>
   19ca4:	ldr	r0, [sp, #8]
   19ca8:	vmov	s2, r0
   19cac:	vcvt.f32.u32	s2, s2
   19cb0:	ldr	r0, [sp, #4]
   19cb4:	vldr	s4, [r0, #8]
   19cb8:	vdiv.f32	s2, s2, s4
   19cbc:	vstr	s2, [sp]
   19cc0:	vldr	s2, [sp]
   19cc4:	vcmpe.f32	s0, s2
   19cc8:	vmrs	APSR_nzcv, fpscr
   19ccc:	bhi	19cdc <__assert_fail@plt+0x8df4>
   19cd0:	movw	r0, #0
   19cd4:	str	r0, [fp, #-4]
   19cd8:	b	19d1c <__assert_fail@plt+0x8e34>
   19cdc:	vldr	s0, [sp]
   19ce0:	vcvt.u32.f32	s0, s0
   19ce4:	vmov	r0, s0
   19ce8:	str	r0, [sp, #8]
   19cec:	ldr	r0, [sp, #8]
   19cf0:	bl	1abec <__assert_fail@plt+0x9d04>
   19cf4:	ldr	r1, [pc, #48]	; 19d2c <__assert_fail@plt+0x8e44>
   19cf8:	str	r0, [sp, #8]
   19cfc:	ldr	r0, [sp, #8]
   19d00:	cmp	r1, r0
   19d04:	bcs	19d14 <__assert_fail@plt+0x8e2c>
   19d08:	movw	r0, #0
   19d0c:	str	r0, [fp, #-4]
   19d10:	b	19d1c <__assert_fail@plt+0x8e34>
   19d14:	ldr	r0, [sp, #8]
   19d18:	str	r0, [fp, #-4]
   19d1c:	ldr	r0, [fp, #-4]
   19d20:	mov	sp, fp
   19d24:	pop	{fp, pc}
   19d28:	svcmi	0x00800000
   19d2c:	svcne	0x00ffffff
   19d30:	push	{fp, lr}
   19d34:	mov	fp, sp
   19d38:	sub	sp, sp, #24
   19d3c:	str	r0, [fp, #-4]
   19d40:	ldr	r0, [fp, #-4]
   19d44:	ldr	r0, [r0]
   19d48:	str	r0, [fp, #-8]
   19d4c:	ldr	r0, [fp, #-8]
   19d50:	ldr	r1, [fp, #-4]
   19d54:	ldr	r1, [r1, #4]
   19d58:	cmp	r0, r1
   19d5c:	bcs	19e60 <__assert_fail@plt+0x8f78>
   19d60:	ldr	r0, [fp, #-8]
   19d64:	ldr	r0, [r0]
   19d68:	movw	r1, #0
   19d6c:	cmp	r0, r1
   19d70:	beq	19e4c <__assert_fail@plt+0x8f64>
   19d74:	ldr	r0, [fp, #-8]
   19d78:	ldr	r0, [r0, #4]
   19d7c:	str	r0, [sp, #12]
   19d80:	ldr	r0, [sp, #12]
   19d84:	movw	r1, #0
   19d88:	cmp	r0, r1
   19d8c:	beq	19e04 <__assert_fail@plt+0x8f1c>
   19d90:	ldr	r0, [fp, #-4]
   19d94:	ldr	r0, [r0, #32]
   19d98:	movw	r1, #0
   19d9c:	cmp	r0, r1
   19da0:	beq	19dc4 <__assert_fail@plt+0x8edc>
   19da4:	ldr	r0, [fp, #-4]
   19da8:	ldr	r0, [r0, #32]
   19dac:	ldr	r1, [sp, #12]
   19db0:	ldr	r1, [r1]
   19db4:	str	r0, [sp, #4]
   19db8:	mov	r0, r1
   19dbc:	ldr	r1, [sp, #4]
   19dc0:	blx	r1
   19dc4:	ldr	r0, [sp, #12]
   19dc8:	movw	r1, #0
   19dcc:	str	r1, [r0]
   19dd0:	ldr	r0, [sp, #12]
   19dd4:	ldr	r0, [r0, #4]
   19dd8:	str	r0, [sp, #8]
   19ddc:	ldr	r0, [fp, #-4]
   19de0:	ldr	r0, [r0, #36]	; 0x24
   19de4:	ldr	r1, [sp, #12]
   19de8:	str	r0, [r1, #4]
   19dec:	ldr	r0, [sp, #12]
   19df0:	ldr	r1, [fp, #-4]
   19df4:	str	r0, [r1, #36]	; 0x24
   19df8:	ldr	r0, [sp, #8]
   19dfc:	str	r0, [sp, #12]
   19e00:	b	19d80 <__assert_fail@plt+0x8e98>
   19e04:	ldr	r0, [fp, #-4]
   19e08:	ldr	r0, [r0, #32]
   19e0c:	movw	r1, #0
   19e10:	cmp	r0, r1
   19e14:	beq	19e38 <__assert_fail@plt+0x8f50>
   19e18:	ldr	r0, [fp, #-4]
   19e1c:	ldr	r0, [r0, #32]
   19e20:	ldr	r1, [fp, #-8]
   19e24:	ldr	r1, [r1]
   19e28:	str	r0, [sp]
   19e2c:	mov	r0, r1
   19e30:	ldr	r1, [sp]
   19e34:	blx	r1
   19e38:	ldr	r0, [fp, #-8]
   19e3c:	movw	r1, #0
   19e40:	str	r1, [r0]
   19e44:	ldr	r0, [fp, #-8]
   19e48:	str	r1, [r0, #4]
   19e4c:	b	19e50 <__assert_fail@plt+0x8f68>
   19e50:	ldr	r0, [fp, #-8]
   19e54:	add	r0, r0, #8
   19e58:	str	r0, [fp, #-8]
   19e5c:	b	19d4c <__assert_fail@plt+0x8e64>
   19e60:	ldr	r0, [fp, #-4]
   19e64:	movw	r1, #0
   19e68:	str	r1, [r0, #12]
   19e6c:	ldr	r0, [fp, #-4]
   19e70:	str	r1, [r0, #16]
   19e74:	mov	sp, fp
   19e78:	pop	{fp, pc}
   19e7c:	push	{fp, lr}
   19e80:	mov	fp, sp
   19e84:	sub	sp, sp, #24
   19e88:	str	r0, [fp, #-4]
   19e8c:	ldr	r0, [fp, #-4]
   19e90:	ldr	r0, [r0, #32]
   19e94:	movw	r1, #0
   19e98:	cmp	r0, r1
   19e9c:	beq	19f48 <__assert_fail@plt+0x9060>
   19ea0:	ldr	r0, [fp, #-4]
   19ea4:	ldr	r0, [r0, #16]
   19ea8:	cmp	r0, #0
   19eac:	beq	19f48 <__assert_fail@plt+0x9060>
   19eb0:	ldr	r0, [fp, #-4]
   19eb4:	ldr	r0, [r0]
   19eb8:	str	r0, [fp, #-8]
   19ebc:	ldr	r0, [fp, #-8]
   19ec0:	ldr	r1, [fp, #-4]
   19ec4:	ldr	r1, [r1, #4]
   19ec8:	cmp	r0, r1
   19ecc:	bcs	19f44 <__assert_fail@plt+0x905c>
   19ed0:	ldr	r0, [fp, #-8]
   19ed4:	ldr	r0, [r0]
   19ed8:	movw	r1, #0
   19edc:	cmp	r0, r1
   19ee0:	beq	19f30 <__assert_fail@plt+0x9048>
   19ee4:	ldr	r0, [fp, #-8]
   19ee8:	str	r0, [sp, #12]
   19eec:	ldr	r0, [sp, #12]
   19ef0:	movw	r1, #0
   19ef4:	cmp	r0, r1
   19ef8:	beq	19f2c <__assert_fail@plt+0x9044>
   19efc:	ldr	r0, [fp, #-4]
   19f00:	ldr	r0, [r0, #32]
   19f04:	ldr	r1, [sp, #12]
   19f08:	ldr	r1, [r1]
   19f0c:	str	r0, [sp, #4]
   19f10:	mov	r0, r1
   19f14:	ldr	r1, [sp, #4]
   19f18:	blx	r1
   19f1c:	ldr	r0, [sp, #12]
   19f20:	ldr	r0, [r0, #4]
   19f24:	str	r0, [sp, #12]
   19f28:	b	19eec <__assert_fail@plt+0x9004>
   19f2c:	b	19f30 <__assert_fail@plt+0x9048>
   19f30:	b	19f34 <__assert_fail@plt+0x904c>
   19f34:	ldr	r0, [fp, #-8]
   19f38:	add	r0, r0, #8
   19f3c:	str	r0, [fp, #-8]
   19f40:	b	19ebc <__assert_fail@plt+0x8fd4>
   19f44:	b	19f48 <__assert_fail@plt+0x9060>
   19f48:	ldr	r0, [fp, #-4]
   19f4c:	ldr	r0, [r0]
   19f50:	str	r0, [fp, #-8]
   19f54:	ldr	r0, [fp, #-8]
   19f58:	ldr	r1, [fp, #-4]
   19f5c:	ldr	r1, [r1, #4]
   19f60:	cmp	r0, r1
   19f64:	bcs	19fb8 <__assert_fail@plt+0x90d0>
   19f68:	ldr	r0, [fp, #-8]
   19f6c:	ldr	r0, [r0, #4]
   19f70:	str	r0, [sp, #12]
   19f74:	ldr	r0, [sp, #12]
   19f78:	movw	r1, #0
   19f7c:	cmp	r0, r1
   19f80:	beq	19fa4 <__assert_fail@plt+0x90bc>
   19f84:	ldr	r0, [sp, #12]
   19f88:	ldr	r0, [r0, #4]
   19f8c:	str	r0, [sp, #8]
   19f90:	ldr	r0, [sp, #12]
   19f94:	bl	14110 <__assert_fail@plt+0x3228>
   19f98:	ldr	r0, [sp, #8]
   19f9c:	str	r0, [sp, #12]
   19fa0:	b	19f74 <__assert_fail@plt+0x908c>
   19fa4:	b	19fa8 <__assert_fail@plt+0x90c0>
   19fa8:	ldr	r0, [fp, #-8]
   19fac:	add	r0, r0, #8
   19fb0:	str	r0, [fp, #-8]
   19fb4:	b	19f54 <__assert_fail@plt+0x906c>
   19fb8:	ldr	r0, [fp, #-4]
   19fbc:	ldr	r0, [r0, #36]	; 0x24
   19fc0:	str	r0, [sp, #12]
   19fc4:	ldr	r0, [sp, #12]
   19fc8:	movw	r1, #0
   19fcc:	cmp	r0, r1
   19fd0:	beq	19ff4 <__assert_fail@plt+0x910c>
   19fd4:	ldr	r0, [sp, #12]
   19fd8:	ldr	r0, [r0, #4]
   19fdc:	str	r0, [sp, #8]
   19fe0:	ldr	r0, [sp, #12]
   19fe4:	bl	14110 <__assert_fail@plt+0x3228>
   19fe8:	ldr	r0, [sp, #8]
   19fec:	str	r0, [sp, #12]
   19ff0:	b	19fc4 <__assert_fail@plt+0x90dc>
   19ff4:	ldr	r0, [fp, #-4]
   19ff8:	ldr	r0, [r0]
   19ffc:	bl	14110 <__assert_fail@plt+0x3228>
   1a000:	ldr	r0, [fp, #-4]
   1a004:	bl	14110 <__assert_fail@plt+0x3228>
   1a008:	mov	sp, fp
   1a00c:	pop	{fp, pc}
   1a010:	push	{fp, lr}
   1a014:	mov	fp, sp
   1a018:	sub	sp, sp, #64	; 0x40
   1a01c:	str	r0, [fp, #-8]
   1a020:	str	r1, [fp, #-12]
   1a024:	ldr	r0, [fp, #-12]
   1a028:	ldr	r1, [fp, #-8]
   1a02c:	ldr	r1, [r1, #20]
   1a030:	bl	19c7c <__assert_fail@plt+0x8d94>
   1a034:	str	r0, [sp, #4]
   1a038:	ldr	r0, [sp, #4]
   1a03c:	cmp	r0, #0
   1a040:	bne	1a054 <__assert_fail@plt+0x916c>
   1a044:	movw	r0, #0
   1a048:	and	r0, r0, #1
   1a04c:	strb	r0, [fp, #-1]
   1a050:	b	1a22c <__assert_fail@plt+0x9344>
   1a054:	ldr	r0, [sp, #4]
   1a058:	ldr	r1, [fp, #-8]
   1a05c:	ldr	r1, [r1, #8]
   1a060:	cmp	r0, r1
   1a064:	bne	1a078 <__assert_fail@plt+0x9190>
   1a068:	movw	r0, #1
   1a06c:	and	r0, r0, #1
   1a070:	strb	r0, [fp, #-1]
   1a074:	b	1a22c <__assert_fail@plt+0x9344>
   1a078:	add	r0, sp, #12
   1a07c:	str	r0, [sp, #8]
   1a080:	ldr	r0, [sp, #4]
   1a084:	movw	r1, #8
   1a088:	bl	1b2c4 <__assert_fail@plt+0xa3dc>
   1a08c:	ldr	r1, [sp, #8]
   1a090:	str	r0, [r1]
   1a094:	ldr	r0, [sp, #8]
   1a098:	ldr	r0, [r0]
   1a09c:	movw	r1, #0
   1a0a0:	cmp	r0, r1
   1a0a4:	bne	1a0b8 <__assert_fail@plt+0x91d0>
   1a0a8:	movw	r0, #0
   1a0ac:	and	r0, r0, #1
   1a0b0:	strb	r0, [fp, #-1]
   1a0b4:	b	1a22c <__assert_fail@plt+0x9344>
   1a0b8:	ldr	r0, [sp, #4]
   1a0bc:	ldr	r1, [sp, #8]
   1a0c0:	str	r0, [r1, #8]
   1a0c4:	ldr	r0, [sp, #8]
   1a0c8:	ldr	r0, [r0]
   1a0cc:	ldr	r1, [sp, #4]
   1a0d0:	add	r0, r0, r1, lsl #3
   1a0d4:	ldr	r1, [sp, #8]
   1a0d8:	str	r0, [r1, #4]
   1a0dc:	ldr	r0, [sp, #8]
   1a0e0:	movw	r1, #0
   1a0e4:	str	r1, [r0, #12]
   1a0e8:	ldr	r0, [sp, #8]
   1a0ec:	str	r1, [r0, #16]
   1a0f0:	ldr	r0, [fp, #-8]
   1a0f4:	ldr	r0, [r0, #20]
   1a0f8:	ldr	r1, [sp, #8]
   1a0fc:	str	r0, [r1, #20]
   1a100:	ldr	r0, [fp, #-8]
   1a104:	ldr	r0, [r0, #24]
   1a108:	ldr	r1, [sp, #8]
   1a10c:	str	r0, [r1, #24]
   1a110:	ldr	r0, [fp, #-8]
   1a114:	ldr	r0, [r0, #28]
   1a118:	ldr	r1, [sp, #8]
   1a11c:	str	r0, [r1, #28]
   1a120:	ldr	r0, [fp, #-8]
   1a124:	ldr	r0, [r0, #32]
   1a128:	ldr	r1, [sp, #8]
   1a12c:	str	r0, [r1, #32]
   1a130:	ldr	r0, [fp, #-8]
   1a134:	ldr	r0, [r0, #36]	; 0x24
   1a138:	ldr	r1, [sp, #8]
   1a13c:	str	r0, [r1, #36]	; 0x24
   1a140:	ldr	r0, [sp, #8]
   1a144:	ldr	r1, [fp, #-8]
   1a148:	movw	r2, #0
   1a14c:	and	r2, r2, #1
   1a150:	bl	1a23c <__assert_fail@plt+0x9354>
   1a154:	tst	r0, #1
   1a158:	beq	1a1c8 <__assert_fail@plt+0x92e0>
   1a15c:	ldr	r0, [fp, #-8]
   1a160:	ldr	r0, [r0]
   1a164:	bl	14110 <__assert_fail@plt+0x3228>
   1a168:	ldr	r0, [sp, #8]
   1a16c:	ldr	r0, [r0]
   1a170:	ldr	r1, [fp, #-8]
   1a174:	str	r0, [r1]
   1a178:	ldr	r0, [sp, #8]
   1a17c:	ldr	r0, [r0, #4]
   1a180:	ldr	r1, [fp, #-8]
   1a184:	str	r0, [r1, #4]
   1a188:	ldr	r0, [sp, #8]
   1a18c:	ldr	r0, [r0, #8]
   1a190:	ldr	r1, [fp, #-8]
   1a194:	str	r0, [r1, #8]
   1a198:	ldr	r0, [sp, #8]
   1a19c:	ldr	r0, [r0, #12]
   1a1a0:	ldr	r1, [fp, #-8]
   1a1a4:	str	r0, [r1, #12]
   1a1a8:	ldr	r0, [sp, #8]
   1a1ac:	ldr	r0, [r0, #36]	; 0x24
   1a1b0:	ldr	r1, [fp, #-8]
   1a1b4:	str	r0, [r1, #36]	; 0x24
   1a1b8:	movw	r0, #1
   1a1bc:	and	r0, r0, #1
   1a1c0:	strb	r0, [fp, #-1]
   1a1c4:	b	1a22c <__assert_fail@plt+0x9344>
   1a1c8:	ldr	r0, [sp, #8]
   1a1cc:	ldr	r0, [r0, #36]	; 0x24
   1a1d0:	ldr	r1, [fp, #-8]
   1a1d4:	str	r0, [r1, #36]	; 0x24
   1a1d8:	ldr	r0, [fp, #-8]
   1a1dc:	ldr	r1, [sp, #8]
   1a1e0:	movw	r2, #1
   1a1e4:	and	r2, r2, #1
   1a1e8:	bl	1a23c <__assert_fail@plt+0x9354>
   1a1ec:	tst	r0, #1
   1a1f0:	beq	1a210 <__assert_fail@plt+0x9328>
   1a1f4:	ldr	r0, [fp, #-8]
   1a1f8:	ldr	r1, [sp, #8]
   1a1fc:	movw	r2, #0
   1a200:	and	r2, r2, #1
   1a204:	bl	1a23c <__assert_fail@plt+0x9354>
   1a208:	tst	r0, #1
   1a20c:	bne	1a214 <__assert_fail@plt+0x932c>
   1a210:	bl	10eac <abort@plt>
   1a214:	ldr	r0, [sp, #8]
   1a218:	ldr	r0, [r0]
   1a21c:	bl	14110 <__assert_fail@plt+0x3228>
   1a220:	movw	r0, #0
   1a224:	and	r0, r0, #1
   1a228:	strb	r0, [fp, #-1]
   1a22c:	ldrb	r0, [fp, #-1]
   1a230:	and	r0, r0, #1
   1a234:	mov	sp, fp
   1a238:	pop	{fp, pc}
   1a23c:	push	{fp, lr}
   1a240:	mov	fp, sp
   1a244:	sub	sp, sp, #40	; 0x28
   1a248:	str	r0, [fp, #-8]
   1a24c:	str	r1, [fp, #-12]
   1a250:	and	r0, r2, #1
   1a254:	strb	r0, [fp, #-13]
   1a258:	ldr	r0, [fp, #-12]
   1a25c:	ldr	r0, [r0]
   1a260:	str	r0, [sp, #20]
   1a264:	ldr	r0, [sp, #20]
   1a268:	ldr	r1, [fp, #-12]
   1a26c:	ldr	r1, [r1, #4]
   1a270:	cmp	r0, r1
   1a274:	bcs	1a430 <__assert_fail@plt+0x9548>
   1a278:	ldr	r0, [sp, #20]
   1a27c:	ldr	r0, [r0]
   1a280:	movw	r1, #0
   1a284:	cmp	r0, r1
   1a288:	beq	1a41c <__assert_fail@plt+0x9534>
   1a28c:	ldr	r0, [sp, #20]
   1a290:	ldr	r0, [r0, #4]
   1a294:	str	r0, [sp, #16]
   1a298:	ldr	r0, [sp, #16]
   1a29c:	movw	r1, #0
   1a2a0:	cmp	r0, r1
   1a2a4:	beq	1a33c <__assert_fail@plt+0x9454>
   1a2a8:	ldr	r0, [sp, #16]
   1a2ac:	ldr	r0, [r0]
   1a2b0:	str	r0, [sp, #8]
   1a2b4:	ldr	r0, [fp, #-8]
   1a2b8:	ldr	r1, [sp, #8]
   1a2bc:	bl	194e8 <__assert_fail@plt+0x8600>
   1a2c0:	str	r0, [sp, #4]
   1a2c4:	ldr	r0, [sp, #16]
   1a2c8:	ldr	r0, [r0, #4]
   1a2cc:	str	r0, [sp, #12]
   1a2d0:	ldr	r0, [sp, #4]
   1a2d4:	ldr	r0, [r0]
   1a2d8:	movw	r1, #0
   1a2dc:	cmp	r0, r1
   1a2e0:	beq	1a304 <__assert_fail@plt+0x941c>
   1a2e4:	ldr	r0, [sp, #4]
   1a2e8:	ldr	r0, [r0, #4]
   1a2ec:	ldr	r1, [sp, #16]
   1a2f0:	str	r0, [r1, #4]
   1a2f4:	ldr	r0, [sp, #16]
   1a2f8:	ldr	r1, [sp, #4]
   1a2fc:	str	r0, [r1, #4]
   1a300:	b	1a32c <__assert_fail@plt+0x9444>
   1a304:	ldr	r0, [sp, #8]
   1a308:	ldr	r1, [sp, #4]
   1a30c:	str	r0, [r1]
   1a310:	ldr	r0, [fp, #-8]
   1a314:	ldr	r1, [r0, #12]
   1a318:	add	r1, r1, #1
   1a31c:	str	r1, [r0, #12]
   1a320:	ldr	r0, [fp, #-8]
   1a324:	ldr	r1, [sp, #16]
   1a328:	bl	1ad44 <__assert_fail@plt+0x9e5c>
   1a32c:	b	1a330 <__assert_fail@plt+0x9448>
   1a330:	ldr	r0, [sp, #12]
   1a334:	str	r0, [sp, #16]
   1a338:	b	1a298 <__assert_fail@plt+0x93b0>
   1a33c:	ldr	r0, [sp, #20]
   1a340:	ldr	r0, [r0]
   1a344:	str	r0, [sp, #8]
   1a348:	ldr	r0, [sp, #20]
   1a34c:	movw	r1, #0
   1a350:	str	r1, [r0, #4]
   1a354:	ldrb	r0, [fp, #-13]
   1a358:	tst	r0, #1
   1a35c:	beq	1a364 <__assert_fail@plt+0x947c>
   1a360:	b	1a420 <__assert_fail@plt+0x9538>
   1a364:	ldr	r0, [fp, #-8]
   1a368:	ldr	r1, [sp, #8]
   1a36c:	bl	194e8 <__assert_fail@plt+0x8600>
   1a370:	str	r0, [sp, #4]
   1a374:	ldr	r0, [sp, #4]
   1a378:	ldr	r0, [r0]
   1a37c:	movw	r1, #0
   1a380:	cmp	r0, r1
   1a384:	beq	1a3e0 <__assert_fail@plt+0x94f8>
   1a388:	ldr	r0, [fp, #-8]
   1a38c:	bl	1a8f4 <__assert_fail@plt+0x9a0c>
   1a390:	str	r0, [sp]
   1a394:	ldr	r0, [sp]
   1a398:	movw	r1, #0
   1a39c:	cmp	r0, r1
   1a3a0:	bne	1a3b4 <__assert_fail@plt+0x94cc>
   1a3a4:	movw	r0, #0
   1a3a8:	and	r0, r0, #1
   1a3ac:	strb	r0, [fp, #-1]
   1a3b0:	b	1a43c <__assert_fail@plt+0x9554>
   1a3b4:	ldr	r0, [sp, #8]
   1a3b8:	ldr	r1, [sp]
   1a3bc:	str	r0, [r1]
   1a3c0:	ldr	r0, [sp, #4]
   1a3c4:	ldr	r0, [r0, #4]
   1a3c8:	ldr	r1, [sp]
   1a3cc:	str	r0, [r1, #4]
   1a3d0:	ldr	r0, [sp]
   1a3d4:	ldr	r1, [sp, #4]
   1a3d8:	str	r0, [r1, #4]
   1a3dc:	b	1a3fc <__assert_fail@plt+0x9514>
   1a3e0:	ldr	r0, [sp, #8]
   1a3e4:	ldr	r1, [sp, #4]
   1a3e8:	str	r0, [r1]
   1a3ec:	ldr	r0, [fp, #-8]
   1a3f0:	ldr	r1, [r0, #12]
   1a3f4:	add	r1, r1, #1
   1a3f8:	str	r1, [r0, #12]
   1a3fc:	ldr	r0, [sp, #20]
   1a400:	movw	r1, #0
   1a404:	str	r1, [r0]
   1a408:	ldr	r0, [fp, #-12]
   1a40c:	ldr	r1, [r0, #12]
   1a410:	mvn	r2, #0
   1a414:	add	r1, r1, r2
   1a418:	str	r1, [r0, #12]
   1a41c:	b	1a420 <__assert_fail@plt+0x9538>
   1a420:	ldr	r0, [sp, #20]
   1a424:	add	r0, r0, #8
   1a428:	str	r0, [sp, #20]
   1a42c:	b	1a264 <__assert_fail@plt+0x937c>
   1a430:	movw	r0, #1
   1a434:	and	r0, r0, #1
   1a438:	strb	r0, [fp, #-1]
   1a43c:	ldrb	r0, [fp, #-1]
   1a440:	and	r0, r0, #1
   1a444:	mov	sp, fp
   1a448:	pop	{fp, pc}
   1a44c:	push	{fp, lr}
   1a450:	mov	fp, sp
   1a454:	sub	sp, sp, #40	; 0x28
   1a458:	str	r0, [fp, #-8]
   1a45c:	str	r1, [fp, #-12]
   1a460:	str	r2, [fp, #-16]
   1a464:	ldr	r0, [fp, #-12]
   1a468:	movw	r1, #0
   1a46c:	cmp	r0, r1
   1a470:	bne	1a478 <__assert_fail@plt+0x9590>
   1a474:	bl	10eac <abort@plt>
   1a478:	ldr	r0, [fp, #-8]
   1a47c:	ldr	r1, [fp, #-12]
   1a480:	add	r2, sp, #16
   1a484:	movw	r3, #0
   1a488:	and	r3, r3, #1
   1a48c:	bl	1a6f8 <__assert_fail@plt+0x9810>
   1a490:	str	r0, [sp, #20]
   1a494:	movw	r1, #0
   1a498:	cmp	r0, r1
   1a49c:	beq	1a4c8 <__assert_fail@plt+0x95e0>
   1a4a0:	ldr	r0, [fp, #-16]
   1a4a4:	movw	r1, #0
   1a4a8:	cmp	r0, r1
   1a4ac:	beq	1a4bc <__assert_fail@plt+0x95d4>
   1a4b0:	ldr	r0, [sp, #20]
   1a4b4:	ldr	r1, [fp, #-16]
   1a4b8:	str	r0, [r1]
   1a4bc:	movw	r0, #0
   1a4c0:	str	r0, [fp, #-4]
   1a4c4:	b	1a6e8 <__assert_fail@plt+0x9800>
   1a4c8:	ldr	r0, [fp, #-8]
   1a4cc:	ldr	r0, [r0, #12]
   1a4d0:	vmov	s0, r0
   1a4d4:	vcvt.f32.u32	s0, s0
   1a4d8:	ldr	r0, [fp, #-8]
   1a4dc:	ldr	r0, [r0, #20]
   1a4e0:	vldr	s2, [r0, #8]
   1a4e4:	ldr	r0, [fp, #-8]
   1a4e8:	ldr	r0, [r0, #8]
   1a4ec:	vmov	s4, r0
   1a4f0:	vcvt.f32.u32	s4, s4
   1a4f4:	vmul.f32	s2, s2, s4
   1a4f8:	vcmpe.f32	s0, s2
   1a4fc:	vmrs	APSR_nzcv, fpscr
   1a500:	ble	1a634 <__assert_fail@plt+0x974c>
   1a504:	ldr	r0, [fp, #-8]
   1a508:	bl	19b28 <__assert_fail@plt+0x8c40>
   1a50c:	ldr	r1, [fp, #-8]
   1a510:	ldr	r1, [r1, #12]
   1a514:	vmov	s0, r1
   1a518:	vcvt.f32.u32	s0, s0
   1a51c:	ldr	r1, [fp, #-8]
   1a520:	ldr	r1, [r1, #20]
   1a524:	vldr	s2, [r1, #8]
   1a528:	ldr	r1, [fp, #-8]
   1a52c:	ldr	r1, [r1, #8]
   1a530:	vmov	s4, r1
   1a534:	vcvt.f32.u32	s4, s4
   1a538:	vmul.f32	s2, s2, s4
   1a53c:	vcmpe.f32	s0, s2
   1a540:	vmrs	APSR_nzcv, fpscr
   1a544:	ble	1a630 <__assert_fail@plt+0x9748>
   1a548:	ldr	r0, [fp, #-8]
   1a54c:	ldr	r0, [r0, #20]
   1a550:	str	r0, [sp, #12]
   1a554:	ldr	r0, [sp, #12]
   1a558:	ldrb	r0, [r0, #16]
   1a55c:	tst	r0, #1
   1a560:	beq	1a588 <__assert_fail@plt+0x96a0>
   1a564:	ldr	r0, [fp, #-8]
   1a568:	ldr	r0, [r0, #8]
   1a56c:	vmov	s0, r0
   1a570:	vcvt.f32.u32	s0, s0
   1a574:	ldr	r0, [sp, #12]
   1a578:	vldr	s2, [r0, #12]
   1a57c:	vmul.f32	s0, s0, s2
   1a580:	vstr	s0, [sp]
   1a584:	b	1a5b4 <__assert_fail@plt+0x96cc>
   1a588:	ldr	r0, [fp, #-8]
   1a58c:	ldr	r0, [r0, #8]
   1a590:	vmov	s0, r0
   1a594:	vcvt.f32.u32	s0, s0
   1a598:	ldr	r0, [sp, #12]
   1a59c:	vldr	s2, [r0, #12]
   1a5a0:	vmul.f32	s0, s0, s2
   1a5a4:	ldr	r0, [sp, #12]
   1a5a8:	vldr	s2, [r0, #8]
   1a5ac:	vmul.f32	s0, s0, s2
   1a5b0:	vstr	s0, [sp]
   1a5b4:	vldr	s0, [sp]
   1a5b8:	vldr	s2, [pc, #308]	; 1a6f4 <__assert_fail@plt+0x980c>
   1a5bc:	vstr	s0, [sp, #8]
   1a5c0:	vldr	s0, [sp, #8]
   1a5c4:	vcmpe.f32	s2, s0
   1a5c8:	vmrs	APSR_nzcv, fpscr
   1a5cc:	bhi	1a5dc <__assert_fail@plt+0x96f4>
   1a5d0:	mvn	r0, #0
   1a5d4:	str	r0, [fp, #-4]
   1a5d8:	b	1a6e8 <__assert_fail@plt+0x9800>
   1a5dc:	ldr	r0, [fp, #-8]
   1a5e0:	vldr	s0, [sp, #8]
   1a5e4:	vcvt.u32.f32	s0, s0
   1a5e8:	vmov	r1, s0
   1a5ec:	bl	1a010 <__assert_fail@plt+0x9128>
   1a5f0:	tst	r0, #1
   1a5f4:	bne	1a604 <__assert_fail@plt+0x971c>
   1a5f8:	mvn	r0, #0
   1a5fc:	str	r0, [fp, #-4]
   1a600:	b	1a6e8 <__assert_fail@plt+0x9800>
   1a604:	ldr	r0, [fp, #-8]
   1a608:	ldr	r1, [fp, #-12]
   1a60c:	add	r2, sp, #16
   1a610:	movw	r3, #0
   1a614:	and	r3, r3, #1
   1a618:	bl	1a6f8 <__assert_fail@plt+0x9810>
   1a61c:	movw	r1, #0
   1a620:	cmp	r0, r1
   1a624:	beq	1a62c <__assert_fail@plt+0x9744>
   1a628:	bl	10eac <abort@plt>
   1a62c:	b	1a630 <__assert_fail@plt+0x9748>
   1a630:	b	1a634 <__assert_fail@plt+0x974c>
   1a634:	ldr	r0, [sp, #16]
   1a638:	ldr	r0, [r0]
   1a63c:	movw	r1, #0
   1a640:	cmp	r0, r1
   1a644:	beq	1a6b4 <__assert_fail@plt+0x97cc>
   1a648:	ldr	r0, [fp, #-8]
   1a64c:	bl	1a8f4 <__assert_fail@plt+0x9a0c>
   1a650:	str	r0, [sp, #4]
   1a654:	ldr	r0, [sp, #4]
   1a658:	movw	r1, #0
   1a65c:	cmp	r0, r1
   1a660:	bne	1a670 <__assert_fail@plt+0x9788>
   1a664:	mvn	r0, #0
   1a668:	str	r0, [fp, #-4]
   1a66c:	b	1a6e8 <__assert_fail@plt+0x9800>
   1a670:	ldr	r0, [fp, #-12]
   1a674:	ldr	r1, [sp, #4]
   1a678:	str	r0, [r1]
   1a67c:	ldr	r0, [sp, #16]
   1a680:	ldr	r0, [r0, #4]
   1a684:	ldr	r1, [sp, #4]
   1a688:	str	r0, [r1, #4]
   1a68c:	ldr	r0, [sp, #4]
   1a690:	ldr	r1, [sp, #16]
   1a694:	str	r0, [r1, #4]
   1a698:	ldr	r0, [fp, #-8]
   1a69c:	ldr	r1, [r0, #16]
   1a6a0:	add	r1, r1, #1
   1a6a4:	str	r1, [r0, #16]
   1a6a8:	movw	r0, #1
   1a6ac:	str	r0, [fp, #-4]
   1a6b0:	b	1a6e8 <__assert_fail@plt+0x9800>
   1a6b4:	ldr	r0, [fp, #-12]
   1a6b8:	ldr	r1, [sp, #16]
   1a6bc:	str	r0, [r1]
   1a6c0:	ldr	r0, [fp, #-8]
   1a6c4:	ldr	r1, [r0, #16]
   1a6c8:	add	r1, r1, #1
   1a6cc:	str	r1, [r0, #16]
   1a6d0:	ldr	r0, [fp, #-8]
   1a6d4:	ldr	r1, [r0, #12]
   1a6d8:	add	r1, r1, #1
   1a6dc:	str	r1, [r0, #12]
   1a6e0:	movw	r0, #1
   1a6e4:	str	r0, [fp, #-4]
   1a6e8:	ldr	r0, [fp, #-4]
   1a6ec:	mov	sp, fp
   1a6f0:	pop	{fp, pc}
   1a6f4:	svcmi	0x00800000
   1a6f8:	push	{fp, lr}
   1a6fc:	mov	fp, sp
   1a700:	sub	sp, sp, #56	; 0x38
   1a704:	str	r0, [fp, #-8]
   1a708:	str	r1, [fp, #-12]
   1a70c:	str	r2, [fp, #-16]
   1a710:	and	r0, r3, #1
   1a714:	strb	r0, [fp, #-17]	; 0xffffffef
   1a718:	ldr	r0, [fp, #-8]
   1a71c:	ldr	r1, [fp, #-12]
   1a720:	bl	194e8 <__assert_fail@plt+0x8600>
   1a724:	str	r0, [fp, #-24]	; 0xffffffe8
   1a728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a72c:	ldr	r1, [fp, #-16]
   1a730:	str	r0, [r1]
   1a734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a738:	ldr	r0, [r0]
   1a73c:	movw	r1, #0
   1a740:	cmp	r0, r1
   1a744:	bne	1a754 <__assert_fail@plt+0x986c>
   1a748:	movw	r0, #0
   1a74c:	str	r0, [fp, #-4]
   1a750:	b	1a8e8 <__assert_fail@plt+0x9a00>
   1a754:	ldr	r0, [fp, #-12]
   1a758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a75c:	ldr	r1, [r1]
   1a760:	cmp	r0, r1
   1a764:	beq	1a798 <__assert_fail@plt+0x98b0>
   1a768:	ldr	r0, [fp, #-8]
   1a76c:	ldr	r0, [r0, #28]
   1a770:	ldr	r1, [fp, #-12]
   1a774:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a778:	ldr	r2, [r2]
   1a77c:	str	r0, [sp, #8]
   1a780:	mov	r0, r1
   1a784:	mov	r1, r2
   1a788:	ldr	r2, [sp, #8]
   1a78c:	blx	r2
   1a790:	tst	r0, #1
   1a794:	beq	1a814 <__assert_fail@plt+0x992c>
   1a798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a79c:	ldr	r0, [r0]
   1a7a0:	str	r0, [sp, #24]
   1a7a4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1a7a8:	tst	r0, #1
   1a7ac:	beq	1a808 <__assert_fail@plt+0x9920>
   1a7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7b4:	ldr	r0, [r0, #4]
   1a7b8:	movw	r1, #0
   1a7bc:	cmp	r0, r1
   1a7c0:	beq	1a7f8 <__assert_fail@plt+0x9910>
   1a7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7c8:	ldr	r0, [r0, #4]
   1a7cc:	str	r0, [sp, #20]
   1a7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7d4:	ldr	r1, [sp, #20]
   1a7d8:	ldr	r2, [r1]
   1a7dc:	str	r2, [r0]
   1a7e0:	ldr	r1, [r1, #4]
   1a7e4:	str	r1, [r0, #4]
   1a7e8:	ldr	r0, [fp, #-8]
   1a7ec:	ldr	r1, [sp, #20]
   1a7f0:	bl	1ad44 <__assert_fail@plt+0x9e5c>
   1a7f4:	b	1a804 <__assert_fail@plt+0x991c>
   1a7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7fc:	movw	r1, #0
   1a800:	str	r1, [r0]
   1a804:	b	1a808 <__assert_fail@plt+0x9920>
   1a808:	ldr	r0, [sp, #24]
   1a80c:	str	r0, [fp, #-4]
   1a810:	b	1a8e8 <__assert_fail@plt+0x9a00>
   1a814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a818:	str	r0, [sp, #28]
   1a81c:	ldr	r0, [sp, #28]
   1a820:	ldr	r0, [r0, #4]
   1a824:	movw	r1, #0
   1a828:	cmp	r0, r1
   1a82c:	beq	1a8e0 <__assert_fail@plt+0x99f8>
   1a830:	ldr	r0, [fp, #-12]
   1a834:	ldr	r1, [sp, #28]
   1a838:	ldr	r1, [r1, #4]
   1a83c:	ldr	r1, [r1]
   1a840:	cmp	r0, r1
   1a844:	beq	1a87c <__assert_fail@plt+0x9994>
   1a848:	ldr	r0, [fp, #-8]
   1a84c:	ldr	r0, [r0, #28]
   1a850:	ldr	r1, [fp, #-12]
   1a854:	ldr	r2, [sp, #28]
   1a858:	ldr	r2, [r2, #4]
   1a85c:	ldr	r2, [r2]
   1a860:	str	r0, [sp, #4]
   1a864:	mov	r0, r1
   1a868:	mov	r1, r2
   1a86c:	ldr	r2, [sp, #4]
   1a870:	blx	r2
   1a874:	tst	r0, #1
   1a878:	beq	1a8cc <__assert_fail@plt+0x99e4>
   1a87c:	ldr	r0, [sp, #28]
   1a880:	ldr	r0, [r0, #4]
   1a884:	ldr	r0, [r0]
   1a888:	str	r0, [sp, #16]
   1a88c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1a890:	tst	r0, #1
   1a894:	beq	1a8c0 <__assert_fail@plt+0x99d8>
   1a898:	ldr	r0, [sp, #28]
   1a89c:	ldr	r0, [r0, #4]
   1a8a0:	str	r0, [sp, #12]
   1a8a4:	ldr	r0, [sp, #12]
   1a8a8:	ldr	r0, [r0, #4]
   1a8ac:	ldr	r1, [sp, #28]
   1a8b0:	str	r0, [r1, #4]
   1a8b4:	ldr	r0, [fp, #-8]
   1a8b8:	ldr	r1, [sp, #12]
   1a8bc:	bl	1ad44 <__assert_fail@plt+0x9e5c>
   1a8c0:	ldr	r0, [sp, #16]
   1a8c4:	str	r0, [fp, #-4]
   1a8c8:	b	1a8e8 <__assert_fail@plt+0x9a00>
   1a8cc:	b	1a8d0 <__assert_fail@plt+0x99e8>
   1a8d0:	ldr	r0, [sp, #28]
   1a8d4:	ldr	r0, [r0, #4]
   1a8d8:	str	r0, [sp, #28]
   1a8dc:	b	1a81c <__assert_fail@plt+0x9934>
   1a8e0:	movw	r0, #0
   1a8e4:	str	r0, [fp, #-4]
   1a8e8:	ldr	r0, [fp, #-4]
   1a8ec:	mov	sp, fp
   1a8f0:	pop	{fp, pc}
   1a8f4:	push	{fp, lr}
   1a8f8:	mov	fp, sp
   1a8fc:	sub	sp, sp, #8
   1a900:	str	r0, [sp, #4]
   1a904:	ldr	r0, [sp, #4]
   1a908:	ldr	r0, [r0, #36]	; 0x24
   1a90c:	movw	r1, #0
   1a910:	cmp	r0, r1
   1a914:	beq	1a938 <__assert_fail@plt+0x9a50>
   1a918:	ldr	r0, [sp, #4]
   1a91c:	ldr	r0, [r0, #36]	; 0x24
   1a920:	str	r0, [sp]
   1a924:	ldr	r0, [sp]
   1a928:	ldr	r0, [r0, #4]
   1a92c:	ldr	r1, [sp, #4]
   1a930:	str	r0, [r1, #36]	; 0x24
   1a934:	b	1a944 <__assert_fail@plt+0x9a5c>
   1a938:	movw	r0, #8
   1a93c:	bl	1b360 <__assert_fail@plt+0xa478>
   1a940:	str	r0, [sp]
   1a944:	ldr	r0, [sp]
   1a948:	mov	sp, fp
   1a94c:	pop	{fp, pc}
   1a950:	push	{fp, lr}
   1a954:	mov	fp, sp
   1a958:	sub	sp, sp, #24
   1a95c:	str	r0, [fp, #-4]
   1a960:	str	r1, [fp, #-8]
   1a964:	ldr	r0, [fp, #-4]
   1a968:	ldr	r1, [fp, #-8]
   1a96c:	add	r2, sp, #12
   1a970:	bl	1a44c <__assert_fail@plt+0x9564>
   1a974:	str	r0, [sp, #8]
   1a978:	ldr	r0, [sp, #8]
   1a97c:	cmn	r0, #1
   1a980:	bne	1a990 <__assert_fail@plt+0x9aa8>
   1a984:	movw	r0, #0
   1a988:	str	r0, [sp, #4]
   1a98c:	b	1a9b8 <__assert_fail@plt+0x9ad0>
   1a990:	ldr	r0, [sp, #8]
   1a994:	cmp	r0, #0
   1a998:	bne	1a9a8 <__assert_fail@plt+0x9ac0>
   1a99c:	ldr	r0, [sp, #12]
   1a9a0:	str	r0, [sp]
   1a9a4:	b	1a9b0 <__assert_fail@plt+0x9ac8>
   1a9a8:	ldr	r0, [fp, #-8]
   1a9ac:	str	r0, [sp]
   1a9b0:	ldr	r0, [sp]
   1a9b4:	str	r0, [sp, #4]
   1a9b8:	ldr	r0, [sp, #4]
   1a9bc:	mov	sp, fp
   1a9c0:	pop	{fp, pc}
   1a9c4:	push	{fp, lr}
   1a9c8:	mov	fp, sp
   1a9cc:	sub	sp, sp, #40	; 0x28
   1a9d0:	str	r0, [fp, #-8]
   1a9d4:	str	r1, [fp, #-12]
   1a9d8:	ldr	r0, [fp, #-8]
   1a9dc:	ldr	r1, [fp, #-12]
   1a9e0:	add	r2, sp, #20
   1a9e4:	movw	r3, #1
   1a9e8:	and	r3, r3, #1
   1a9ec:	bl	1a6f8 <__assert_fail@plt+0x9810>
   1a9f0:	str	r0, [fp, #-16]
   1a9f4:	ldr	r0, [fp, #-16]
   1a9f8:	movw	r1, #0
   1a9fc:	cmp	r0, r1
   1aa00:	bne	1aa10 <__assert_fail@plt+0x9b28>
   1aa04:	movw	r0, #0
   1aa08:	str	r0, [fp, #-4]
   1aa0c:	b	1abb8 <__assert_fail@plt+0x9cd0>
   1aa10:	ldr	r0, [fp, #-8]
   1aa14:	ldr	r1, [r0, #16]
   1aa18:	mvn	r2, #0
   1aa1c:	add	r1, r1, r2
   1aa20:	str	r1, [r0, #16]
   1aa24:	ldr	r0, [sp, #20]
   1aa28:	ldr	r0, [r0]
   1aa2c:	movw	r1, #0
   1aa30:	cmp	r0, r1
   1aa34:	bne	1abb0 <__assert_fail@plt+0x9cc8>
   1aa38:	ldr	r0, [fp, #-8]
   1aa3c:	ldr	r1, [r0, #12]
   1aa40:	mvn	r2, #0
   1aa44:	add	r1, r1, r2
   1aa48:	str	r1, [r0, #12]
   1aa4c:	ldr	r0, [fp, #-8]
   1aa50:	ldr	r0, [r0, #12]
   1aa54:	vmov	s0, r0
   1aa58:	vcvt.f32.u32	s0, s0
   1aa5c:	ldr	r0, [fp, #-8]
   1aa60:	ldr	r0, [r0, #20]
   1aa64:	vldr	s2, [r0]
   1aa68:	ldr	r0, [fp, #-8]
   1aa6c:	ldr	r0, [r0, #8]
   1aa70:	vmov	s4, r0
   1aa74:	vcvt.f32.u32	s4, s4
   1aa78:	vmul.f32	s2, s2, s4
   1aa7c:	vcmpe.f32	s0, s2
   1aa80:	vmrs	APSR_nzcv, fpscr
   1aa84:	bpl	1abac <__assert_fail@plt+0x9cc4>
   1aa88:	ldr	r0, [fp, #-8]
   1aa8c:	bl	19b28 <__assert_fail@plt+0x8c40>
   1aa90:	ldr	r1, [fp, #-8]
   1aa94:	ldr	r1, [r1, #12]
   1aa98:	vmov	s0, r1
   1aa9c:	vcvt.f32.u32	s0, s0
   1aaa0:	ldr	r1, [fp, #-8]
   1aaa4:	ldr	r1, [r1, #20]
   1aaa8:	vldr	s2, [r1]
   1aaac:	ldr	r1, [fp, #-8]
   1aab0:	ldr	r1, [r1, #8]
   1aab4:	vmov	s4, r1
   1aab8:	vcvt.f32.u32	s4, s4
   1aabc:	vmul.f32	s2, s2, s4
   1aac0:	vcmpe.f32	s0, s2
   1aac4:	vmrs	APSR_nzcv, fpscr
   1aac8:	bpl	1aba8 <__assert_fail@plt+0x9cc0>
   1aacc:	ldr	r0, [fp, #-8]
   1aad0:	ldr	r0, [r0, #20]
   1aad4:	str	r0, [sp, #16]
   1aad8:	ldr	r0, [sp, #16]
   1aadc:	ldrb	r0, [r0, #16]
   1aae0:	tst	r0, #1
   1aae4:	beq	1ab0c <__assert_fail@plt+0x9c24>
   1aae8:	ldr	r0, [fp, #-8]
   1aaec:	ldr	r0, [r0, #8]
   1aaf0:	vmov	s0, r0
   1aaf4:	vcvt.f32.u32	s0, s0
   1aaf8:	ldr	r0, [sp, #16]
   1aafc:	vldr	s2, [r0, #4]
   1ab00:	vmul.f32	s0, s0, s2
   1ab04:	vstr	s0, [sp]
   1ab08:	b	1ab38 <__assert_fail@plt+0x9c50>
   1ab0c:	ldr	r0, [fp, #-8]
   1ab10:	ldr	r0, [r0, #8]
   1ab14:	vmov	s0, r0
   1ab18:	vcvt.f32.u32	s0, s0
   1ab1c:	ldr	r0, [sp, #16]
   1ab20:	vldr	s2, [r0, #4]
   1ab24:	vmul.f32	s0, s0, s2
   1ab28:	ldr	r0, [sp, #16]
   1ab2c:	vldr	s2, [r0, #8]
   1ab30:	vmul.f32	s0, s0, s2
   1ab34:	vstr	s0, [sp]
   1ab38:	vldr	s0, [sp]
   1ab3c:	vcvt.u32.f32	s0, s0
   1ab40:	vmov	r0, s0
   1ab44:	str	r0, [sp, #12]
   1ab48:	ldr	r0, [fp, #-8]
   1ab4c:	ldr	r1, [sp, #12]
   1ab50:	bl	1a010 <__assert_fail@plt+0x9128>
   1ab54:	tst	r0, #1
   1ab58:	bne	1aba4 <__assert_fail@plt+0x9cbc>
   1ab5c:	ldr	r0, [fp, #-8]
   1ab60:	ldr	r0, [r0, #36]	; 0x24
   1ab64:	str	r0, [sp, #8]
   1ab68:	ldr	r0, [sp, #8]
   1ab6c:	movw	r1, #0
   1ab70:	cmp	r0, r1
   1ab74:	beq	1ab98 <__assert_fail@plt+0x9cb0>
   1ab78:	ldr	r0, [sp, #8]
   1ab7c:	ldr	r0, [r0, #4]
   1ab80:	str	r0, [sp, #4]
   1ab84:	ldr	r0, [sp, #8]
   1ab88:	bl	14110 <__assert_fail@plt+0x3228>
   1ab8c:	ldr	r0, [sp, #4]
   1ab90:	str	r0, [sp, #8]
   1ab94:	b	1ab68 <__assert_fail@plt+0x9c80>
   1ab98:	ldr	r0, [fp, #-8]
   1ab9c:	movw	r1, #0
   1aba0:	str	r1, [r0, #36]	; 0x24
   1aba4:	b	1aba8 <__assert_fail@plt+0x9cc0>
   1aba8:	b	1abac <__assert_fail@plt+0x9cc4>
   1abac:	b	1abb0 <__assert_fail@plt+0x9cc8>
   1abb0:	ldr	r0, [fp, #-16]
   1abb4:	str	r0, [fp, #-4]
   1abb8:	ldr	r0, [fp, #-4]
   1abbc:	mov	sp, fp
   1abc0:	pop	{fp, pc}
   1abc4:	push	{fp, lr}
   1abc8:	mov	fp, sp
   1abcc:	sub	sp, sp, #8
   1abd0:	str	r0, [sp, #4]
   1abd4:	str	r1, [sp]
   1abd8:	ldr	r0, [sp, #4]
   1abdc:	ldr	r1, [sp]
   1abe0:	bl	1a9c4 <__assert_fail@plt+0x9adc>
   1abe4:	mov	sp, fp
   1abe8:	pop	{fp, pc}
   1abec:	push	{fp, lr}
   1abf0:	mov	fp, sp
   1abf4:	sub	sp, sp, #8
   1abf8:	str	r0, [sp, #4]
   1abfc:	ldr	r0, [sp, #4]
   1ac00:	cmp	r0, #10
   1ac04:	bcs	1ac10 <__assert_fail@plt+0x9d28>
   1ac08:	movw	r0, #10
   1ac0c:	str	r0, [sp, #4]
   1ac10:	ldr	r0, [sp, #4]
   1ac14:	orr	r0, r0, #1
   1ac18:	str	r0, [sp, #4]
   1ac1c:	ldr	r0, [sp, #4]
   1ac20:	mvn	r1, #0
   1ac24:	cmp	r1, r0
   1ac28:	movw	r0, #0
   1ac2c:	str	r0, [sp]
   1ac30:	beq	1ac48 <__assert_fail@plt+0x9d60>
   1ac34:	ldr	r0, [sp, #4]
   1ac38:	bl	1ac70 <__assert_fail@plt+0x9d88>
   1ac3c:	mvn	r1, #0
   1ac40:	eor	r0, r0, r1
   1ac44:	str	r0, [sp]
   1ac48:	ldr	r0, [sp]
   1ac4c:	tst	r0, #1
   1ac50:	beq	1ac64 <__assert_fail@plt+0x9d7c>
   1ac54:	ldr	r0, [sp, #4]
   1ac58:	add	r0, r0, #2
   1ac5c:	str	r0, [sp, #4]
   1ac60:	b	1ac1c <__assert_fail@plt+0x9d34>
   1ac64:	ldr	r0, [sp, #4]
   1ac68:	mov	sp, fp
   1ac6c:	pop	{fp, pc}
   1ac70:	sub	sp, sp, #16
   1ac74:	str	r0, [sp, #12]
   1ac78:	movw	r0, #3
   1ac7c:	str	r0, [sp, #8]
   1ac80:	ldr	r0, [sp, #8]
   1ac84:	ldr	r1, [sp, #8]
   1ac88:	mul	r0, r0, r1
   1ac8c:	str	r0, [sp, #4]
   1ac90:	ldr	r0, [sp, #4]
   1ac94:	ldr	r1, [sp, #12]
   1ac98:	cmp	r0, r1
   1ac9c:	movw	r0, #0
   1aca0:	str	r0, [sp]
   1aca4:	bcs	1acc8 <__assert_fail@plt+0x9de0>
   1aca8:	ldr	r0, [sp, #12]
   1acac:	ldr	r1, [sp, #8]
   1acb0:	udiv	r2, r0, r1
   1acb4:	mls	r0, r2, r1, r0
   1acb8:	cmp	r0, #0
   1acbc:	movw	r0, #0
   1acc0:	movne	r0, #1
   1acc4:	str	r0, [sp]
   1acc8:	ldr	r0, [sp]
   1accc:	tst	r0, #1
   1acd0:	beq	1ad04 <__assert_fail@plt+0x9e1c>
   1acd4:	ldr	r0, [sp, #8]
   1acd8:	add	r0, r0, #1
   1acdc:	str	r0, [sp, #8]
   1ace0:	ldr	r0, [sp, #8]
   1ace4:	lsl	r0, r0, #2
   1ace8:	ldr	r1, [sp, #4]
   1acec:	add	r0, r1, r0
   1acf0:	str	r0, [sp, #4]
   1acf4:	ldr	r0, [sp, #8]
   1acf8:	add	r0, r0, #1
   1acfc:	str	r0, [sp, #8]
   1ad00:	b	1ac90 <__assert_fail@plt+0x9da8>
   1ad04:	ldr	r0, [sp, #12]
   1ad08:	ldr	r1, [sp, #8]
   1ad0c:	udiv	r2, r0, r1
   1ad10:	mls	r0, r2, r1, r0
   1ad14:	cmp	r0, #0
   1ad18:	movw	r0, #0
   1ad1c:	movne	r0, #1
   1ad20:	tst	r0, #1
   1ad24:	movw	r0, #1
   1ad28:	moveq	r0, #0
   1ad2c:	cmp	r0, #0
   1ad30:	movw	r0, #0
   1ad34:	movne	r0, #1
   1ad38:	and	r0, r0, #1
   1ad3c:	add	sp, sp, #16
   1ad40:	bx	lr
   1ad44:	sub	sp, sp, #8
   1ad48:	str	r0, [sp, #4]
   1ad4c:	str	r1, [sp]
   1ad50:	ldr	r0, [sp]
   1ad54:	movw	r1, #0
   1ad58:	str	r1, [r0]
   1ad5c:	ldr	r0, [sp, #4]
   1ad60:	ldr	r0, [r0, #36]	; 0x24
   1ad64:	ldr	r1, [sp]
   1ad68:	str	r0, [r1, #4]
   1ad6c:	ldr	r0, [sp]
   1ad70:	ldr	r1, [sp, #4]
   1ad74:	str	r0, [r1, #36]	; 0x24
   1ad78:	add	sp, sp, #8
   1ad7c:	bx	lr
   1ad80:	sub	sp, sp, #12
   1ad84:	str	r0, [sp, #8]
   1ad88:	str	r1, [sp, #4]
   1ad8c:	ldr	r0, [sp, #8]
   1ad90:	movw	r1, #1
   1ad94:	strb	r1, [r0, #28]
   1ad98:	ldr	r0, [sp, #8]
   1ad9c:	movw	r1, #0
   1ada0:	str	r1, [r0, #20]
   1ada4:	ldr	r0, [sp, #8]
   1ada8:	str	r1, [r0, #24]
   1adac:	str	r1, [sp]
   1adb0:	ldr	r0, [sp]
   1adb4:	cmp	r0, #4
   1adb8:	bge	1ade0 <__assert_fail@plt+0x9ef8>
   1adbc:	ldr	r0, [sp, #4]
   1adc0:	ldr	r1, [sp, #8]
   1adc4:	ldr	r2, [sp]
   1adc8:	add	r1, r1, r2, lsl #2
   1adcc:	str	r0, [r1]
   1add0:	ldr	r0, [sp]
   1add4:	add	r0, r0, #1
   1add8:	str	r0, [sp]
   1addc:	b	1adb0 <__assert_fail@plt+0x9ec8>
   1ade0:	ldr	r0, [sp, #4]
   1ade4:	ldr	r1, [sp, #8]
   1ade8:	str	r0, [r1, #16]
   1adec:	add	sp, sp, #12
   1adf0:	bx	lr
   1adf4:	sub	sp, sp, #4
   1adf8:	str	r0, [sp]
   1adfc:	ldr	r0, [sp]
   1ae00:	ldrb	r0, [r0, #28]
   1ae04:	and	r0, r0, #1
   1ae08:	add	sp, sp, #4
   1ae0c:	bx	lr
   1ae10:	sub	sp, sp, #16
   1ae14:	str	r0, [sp, #12]
   1ae18:	str	r1, [sp, #8]
   1ae1c:	ldr	r0, [sp, #12]
   1ae20:	ldr	r1, [r0, #20]
   1ae24:	ldrb	r0, [r0, #28]
   1ae28:	mov	r2, #1
   1ae2c:	bic	r0, r2, r0
   1ae30:	add	r0, r1, r0
   1ae34:	and	r0, r0, #3
   1ae38:	str	r0, [sp, #4]
   1ae3c:	ldr	r0, [sp, #12]
   1ae40:	ldr	r1, [sp, #4]
   1ae44:	ldr	r0, [r0, r1, lsl #2]
   1ae48:	str	r0, [sp]
   1ae4c:	ldr	r0, [sp, #8]
   1ae50:	ldr	r1, [sp, #12]
   1ae54:	ldr	r2, [sp, #4]
   1ae58:	add	r1, r1, r2, lsl #2
   1ae5c:	str	r0, [r1]
   1ae60:	ldr	r0, [sp, #4]
   1ae64:	ldr	r1, [sp, #12]
   1ae68:	str	r0, [r1, #20]
   1ae6c:	ldr	r0, [sp, #4]
   1ae70:	ldr	r1, [sp, #12]
   1ae74:	ldr	r1, [r1, #24]
   1ae78:	cmp	r0, r1
   1ae7c:	bne	1aeac <__assert_fail@plt+0x9fc4>
   1ae80:	ldr	r0, [sp, #12]
   1ae84:	ldr	r0, [r0, #24]
   1ae88:	ldr	r1, [sp, #12]
   1ae8c:	ldrb	r1, [r1, #28]
   1ae90:	mvn	r2, #0
   1ae94:	eor	r1, r1, r2
   1ae98:	and	r1, r1, #1
   1ae9c:	add	r0, r0, r1
   1aea0:	and	r0, r0, #3
   1aea4:	ldr	r1, [sp, #12]
   1aea8:	str	r0, [r1, #24]
   1aeac:	ldr	r0, [sp, #12]
   1aeb0:	movw	r1, #0
   1aeb4:	strb	r1, [r0, #28]
   1aeb8:	ldr	r0, [sp]
   1aebc:	add	sp, sp, #16
   1aec0:	bx	lr
   1aec4:	push	{fp, lr}
   1aec8:	mov	fp, sp
   1aecc:	sub	sp, sp, #8
   1aed0:	str	r0, [sp, #4]
   1aed4:	ldr	r0, [sp, #4]
   1aed8:	bl	1adf4 <__assert_fail@plt+0x9f0c>
   1aedc:	tst	r0, #1
   1aee0:	beq	1aee8 <__assert_fail@plt+0xa000>
   1aee4:	bl	10eac <abort@plt>
   1aee8:	ldr	r0, [sp, #4]
   1aeec:	ldr	r1, [r0, #20]
   1aef0:	ldr	r0, [r0, r1, lsl #2]
   1aef4:	str	r0, [sp]
   1aef8:	ldr	r0, [sp, #4]
   1aefc:	ldr	r1, [r0, #16]
   1af00:	ldr	r2, [r0, #20]
   1af04:	add	r0, r0, r2, lsl #2
   1af08:	str	r1, [r0]
   1af0c:	ldr	r0, [sp, #4]
   1af10:	ldr	r0, [r0, #20]
   1af14:	ldr	r1, [sp, #4]
   1af18:	ldr	r1, [r1, #24]
   1af1c:	cmp	r0, r1
   1af20:	bne	1af34 <__assert_fail@plt+0xa04c>
   1af24:	ldr	r0, [sp, #4]
   1af28:	movw	r1, #1
   1af2c:	strb	r1, [r0, #28]
   1af30:	b	1af50 <__assert_fail@plt+0xa068>
   1af34:	ldr	r0, [sp, #4]
   1af38:	ldr	r0, [r0, #20]
   1af3c:	add	r0, r0, #4
   1af40:	sub	r0, r0, #1
   1af44:	and	r0, r0, #3
   1af48:	ldr	r1, [sp, #4]
   1af4c:	str	r0, [r1, #20]
   1af50:	ldr	r0, [sp]
   1af54:	mov	sp, fp
   1af58:	pop	{fp, pc}
   1af5c:	push	{fp, lr}
   1af60:	mov	fp, sp
   1af64:	sub	sp, sp, #16
   1af68:	str	r0, [sp, #8]
   1af6c:	str	r1, [sp, #12]
   1af70:	str	r2, [sp, #4]
   1af74:	ldr	r0, [sp, #4]
   1af78:	add	r0, r0, #20
   1af7c:	str	r0, [sp]
   1af80:	ldr	r0, [sp]
   1af84:	mov	r1, #0
   1af88:	strb	r1, [r0]
   1af8c:	mov	r0, #1
   1af90:	cmp	r0, #0
   1af94:	bne	1b01c <__assert_fail@plt+0xa134>
   1af98:	b	1af9c <__assert_fail@plt+0xa0b4>
   1af9c:	b	1afa0 <__assert_fail@plt+0xa0b8>
   1afa0:	ldr	r0, [sp, #8]
   1afa4:	ldr	r1, [sp, #12]
   1afa8:	mov	r2, #10
   1afac:	mov	r3, #0
   1afb0:	bl	1bea0 <__assert_fail@plt+0xafb8>
   1afb4:	rsb	r2, r2, #48	; 0x30
   1afb8:	ldr	r3, [sp]
   1afbc:	mvn	ip, #0
   1afc0:	add	lr, r3, ip
   1afc4:	str	lr, [sp]
   1afc8:	add	r3, r3, ip
   1afcc:	strb	r2, [r3]
   1afd0:	ldr	r0, [sp, #8]
   1afd4:	ldr	r1, [sp, #12]
   1afd8:	mov	r2, #10
   1afdc:	mov	r3, #0
   1afe0:	bl	1bea0 <__assert_fail@plt+0xafb8>
   1afe4:	str	r1, [sp, #12]
   1afe8:	str	r0, [sp, #8]
   1afec:	orr	r0, r0, r1
   1aff0:	cmp	r0, #0
   1aff4:	bne	1afa0 <__assert_fail@plt+0xa0b8>
   1aff8:	b	1affc <__assert_fail@plt+0xa114>
   1affc:	ldr	r0, [sp]
   1b000:	mvn	r1, #0
   1b004:	add	r2, r0, r1
   1b008:	str	r2, [sp]
   1b00c:	add	r0, r0, r1
   1b010:	movw	r1, #45	; 0x2d
   1b014:	strb	r1, [r0]
   1b018:	b	1b080 <__assert_fail@plt+0xa198>
   1b01c:	b	1b020 <__assert_fail@plt+0xa138>
   1b020:	ldr	r0, [sp, #8]
   1b024:	ldr	r1, [sp, #12]
   1b028:	mov	r2, #10
   1b02c:	mov	r3, #0
   1b030:	bl	1bea0 <__assert_fail@plt+0xafb8>
   1b034:	orr	r2, r2, #48	; 0x30
   1b038:	ldr	r3, [sp]
   1b03c:	mvn	ip, #0
   1b040:	add	lr, r3, ip
   1b044:	str	lr, [sp]
   1b048:	add	r3, r3, ip
   1b04c:	strb	r2, [r3]
   1b050:	ldr	r0, [sp, #8]
   1b054:	ldr	r1, [sp, #12]
   1b058:	mov	r2, #10
   1b05c:	mov	r3, #0
   1b060:	bl	1bea0 <__assert_fail@plt+0xafb8>
   1b064:	str	r1, [sp, #12]
   1b068:	str	r0, [sp, #8]
   1b06c:	orr	r0, r0, r1
   1b070:	cmp	r0, #0
   1b074:	bne	1b020 <__assert_fail@plt+0xa138>
   1b078:	b	1b07c <__assert_fail@plt+0xa194>
   1b07c:	b	1b080 <__assert_fail@plt+0xa198>
   1b080:	ldr	r0, [sp]
   1b084:	mov	sp, fp
   1b088:	pop	{fp, pc}
   1b08c:	sub	sp, sp, #8
   1b090:	push	{fp, lr}
   1b094:	mov	fp, sp
   1b098:	sub	sp, sp, #24
   1b09c:	str	r3, [fp, #12]
   1b0a0:	str	r2, [fp, #8]
   1b0a4:	str	r0, [fp, #-4]
   1b0a8:	str	r1, [fp, #-8]
   1b0ac:	add	r0, sp, #8
   1b0b0:	mov	r1, r0
   1b0b4:	add	r2, fp, #8
   1b0b8:	str	r2, [r1]
   1b0bc:	ldr	r1, [sp, #8]
   1b0c0:	add	r2, r1, #4
   1b0c4:	str	r2, [sp, #8]
   1b0c8:	ldr	r1, [r1]
   1b0cc:	str	r1, [sp, #12]
   1b0d0:	ldr	r1, [fp, #-4]
   1b0d4:	ldr	r2, [fp, #-8]
   1b0d8:	ldr	r3, [sp, #12]
   1b0dc:	str	r0, [sp, #4]
   1b0e0:	mov	r0, r1
   1b0e4:	mov	r1, r2
   1b0e8:	mov	r2, r3
   1b0ec:	bl	10d50 <ioctl@plt>
   1b0f0:	mov	sp, fp
   1b0f4:	pop	{fp, lr}
   1b0f8:	add	sp, sp, #8
   1b0fc:	bx	lr
   1b100:	sub	sp, sp, #4
   1b104:	push	{fp, lr}
   1b108:	mov	fp, sp
   1b10c:	sub	sp, sp, #20
   1b110:	str	r3, [fp, #8]
   1b114:	str	r0, [fp, #-4]
   1b118:	str	r1, [fp, #-8]
   1b11c:	str	r2, [sp, #8]
   1b120:	movw	r0, #0
   1b124:	str	r0, [sp, #4]
   1b128:	ldr	r0, [sp, #8]
   1b12c:	and	r0, r0, #64	; 0x40
   1b130:	cmp	r0, #0
   1b134:	beq	1b15c <__assert_fail@plt+0xa274>
   1b138:	mov	r0, sp
   1b13c:	mov	r1, r0
   1b140:	add	r2, fp, #8
   1b144:	str	r2, [r1]
   1b148:	ldr	r1, [sp]
   1b14c:	add	r2, r1, #4
   1b150:	str	r2, [sp]
   1b154:	ldr	r1, [r1]
   1b158:	str	r1, [sp, #4]
   1b15c:	ldr	r0, [fp, #-4]
   1b160:	ldr	r1, [fp, #-8]
   1b164:	ldr	r2, [sp, #8]
   1b168:	ldr	r3, [sp, #4]
   1b16c:	bl	10dd4 <openat64@plt>
   1b170:	bl	1b24c <__assert_fail@plt+0xa364>
   1b174:	mov	sp, fp
   1b178:	pop	{fp, lr}
   1b17c:	add	sp, sp, #4
   1b180:	bx	lr
   1b184:	push	{fp, lr}
   1b188:	mov	fp, sp
   1b18c:	sub	sp, sp, #48	; 0x30
   1b190:	ldr	ip, [pc, #176]	; 1b248 <__assert_fail@plt+0xa360>
   1b194:	str	r0, [fp, #-8]
   1b198:	str	r1, [fp, #-12]
   1b19c:	str	r2, [fp, #-16]
   1b1a0:	str	r3, [fp, #-20]	; 0xffffffec
   1b1a4:	ldr	r0, [fp, #-16]
   1b1a8:	orr	r0, r0, ip
   1b1ac:	str	r0, [sp, #24]
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r1, [fp, #-12]
   1b1b8:	ldr	r2, [sp, #24]
   1b1bc:	bl	1b100 <__assert_fail@plt+0xa218>
   1b1c0:	str	r0, [sp, #20]
   1b1c4:	ldr	r0, [sp, #20]
   1b1c8:	cmp	r0, #0
   1b1cc:	bge	1b1dc <__assert_fail@plt+0xa2f4>
   1b1d0:	movw	r0, #0
   1b1d4:	str	r0, [fp, #-4]
   1b1d8:	b	1b23c <__assert_fail@plt+0xa354>
   1b1dc:	ldr	r0, [sp, #20]
   1b1e0:	bl	10e40 <fdopendir@plt>
   1b1e4:	str	r0, [sp, #16]
   1b1e8:	ldr	r0, [sp, #16]
   1b1ec:	movw	r1, #0
   1b1f0:	cmp	r0, r1
   1b1f4:	beq	1b208 <__assert_fail@plt+0xa320>
   1b1f8:	ldr	r0, [sp, #20]
   1b1fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b200:	str	r0, [r1]
   1b204:	b	1b234 <__assert_fail@plt+0xa34c>
   1b208:	bl	10dec <__errno_location@plt>
   1b20c:	ldr	r0, [r0]
   1b210:	str	r0, [sp, #12]
   1b214:	ldr	r0, [sp, #20]
   1b218:	bl	10eb8 <close@plt>
   1b21c:	ldr	r1, [sp, #12]
   1b220:	str	r0, [sp, #8]
   1b224:	str	r1, [sp, #4]
   1b228:	bl	10dec <__errno_location@plt>
   1b22c:	ldr	r1, [sp, #4]
   1b230:	str	r1, [r0]
   1b234:	ldr	r0, [sp, #16]
   1b238:	str	r0, [fp, #-4]
   1b23c:	ldr	r0, [fp, #-4]
   1b240:	mov	sp, fp
   1b244:	pop	{fp, pc}
   1b248:	andeq	r4, r8, r0, lsl #18
   1b24c:	push	{fp, lr}
   1b250:	mov	fp, sp
   1b254:	sub	sp, sp, #24
   1b258:	str	r0, [fp, #-4]
   1b25c:	ldr	r0, [fp, #-4]
   1b260:	movw	r1, #0
   1b264:	cmp	r1, r0
   1b268:	bgt	1b2b8 <__assert_fail@plt+0xa3d0>
   1b26c:	ldr	r0, [fp, #-4]
   1b270:	cmp	r0, #2
   1b274:	bgt	1b2b8 <__assert_fail@plt+0xa3d0>
   1b278:	ldr	r0, [fp, #-4]
   1b27c:	bl	1bda4 <__assert_fail@plt+0xaebc>
   1b280:	str	r0, [fp, #-8]
   1b284:	bl	10dec <__errno_location@plt>
   1b288:	ldr	r0, [r0]
   1b28c:	str	r0, [sp, #12]
   1b290:	ldr	r0, [fp, #-4]
   1b294:	bl	10eb8 <close@plt>
   1b298:	ldr	r1, [sp, #12]
   1b29c:	str	r0, [sp, #8]
   1b2a0:	str	r1, [sp, #4]
   1b2a4:	bl	10dec <__errno_location@plt>
   1b2a8:	ldr	r1, [sp, #4]
   1b2ac:	str	r1, [r0]
   1b2b0:	ldr	r0, [fp, #-8]
   1b2b4:	str	r0, [fp, #-4]
   1b2b8:	ldr	r0, [fp, #-4]
   1b2bc:	mov	sp, fp
   1b2c0:	pop	{fp, pc}
   1b2c4:	push	{fp, lr}
   1b2c8:	mov	fp, sp
   1b2cc:	sub	sp, sp, #16
   1b2d0:	str	r0, [sp, #8]
   1b2d4:	str	r1, [sp, #4]
   1b2d8:	ldr	r0, [sp, #8]
   1b2dc:	cmp	r0, #0
   1b2e0:	beq	1b2f0 <__assert_fail@plt+0xa408>
   1b2e4:	ldr	r0, [sp, #4]
   1b2e8:	cmp	r0, #0
   1b2ec:	bne	1b2fc <__assert_fail@plt+0xa414>
   1b2f0:	movw	r0, #1
   1b2f4:	str	r0, [sp, #4]
   1b2f8:	str	r0, [sp, #8]
   1b2fc:	ldr	r0, [sp, #4]
   1b300:	cmp	r0, #0
   1b304:	beq	1b338 <__assert_fail@plt+0xa450>
   1b308:	ldr	r0, [pc, #76]	; 1b35c <__assert_fail@plt+0xa474>
   1b30c:	ldr	r1, [sp, #4]
   1b310:	udiv	r0, r0, r1
   1b314:	ldr	r1, [sp, #8]
   1b318:	cmp	r0, r1
   1b31c:	bcs	1b338 <__assert_fail@plt+0xa450>
   1b320:	bl	10dec <__errno_location@plt>
   1b324:	movw	r1, #12
   1b328:	str	r1, [r0]
   1b32c:	movw	r0, #0
   1b330:	str	r0, [fp, #-4]
   1b334:	b	1b350 <__assert_fail@plt+0xa468>
   1b338:	ldr	r0, [sp, #8]
   1b33c:	ldr	r1, [sp, #4]
   1b340:	bl	10c90 <calloc@plt>
   1b344:	str	r0, [sp]
   1b348:	ldr	r0, [sp]
   1b34c:	str	r0, [fp, #-4]
   1b350:	ldr	r0, [fp, #-4]
   1b354:	mov	sp, fp
   1b358:	pop	{fp, pc}
   1b35c:	svcvc	0x00ffffff
   1b360:	push	{fp, lr}
   1b364:	mov	fp, sp
   1b368:	sub	sp, sp, #16
   1b36c:	str	r0, [sp, #8]
   1b370:	ldr	r0, [sp, #8]
   1b374:	cmp	r0, #0
   1b378:	bne	1b384 <__assert_fail@plt+0xa49c>
   1b37c:	movw	r0, #1
   1b380:	str	r0, [sp, #8]
   1b384:	ldr	r0, [pc, #64]	; 1b3cc <__assert_fail@plt+0xa4e4>
   1b388:	ldr	r1, [sp, #8]
   1b38c:	cmp	r0, r1
   1b390:	bcs	1b3ac <__assert_fail@plt+0xa4c4>
   1b394:	bl	10dec <__errno_location@plt>
   1b398:	movw	r1, #12
   1b39c:	str	r1, [r0]
   1b3a0:	movw	r0, #0
   1b3a4:	str	r0, [fp, #-4]
   1b3a8:	b	1b3c0 <__assert_fail@plt+0xa4d8>
   1b3ac:	ldr	r0, [sp, #8]
   1b3b0:	bl	10d80 <malloc@plt>
   1b3b4:	str	r0, [sp, #4]
   1b3b8:	ldr	r0, [sp, #4]
   1b3bc:	str	r0, [fp, #-4]
   1b3c0:	ldr	r0, [fp, #-4]
   1b3c4:	mov	sp, fp
   1b3c8:	pop	{fp, pc}
   1b3cc:	svcvc	0x00ffffff
   1b3d0:	push	{fp, lr}
   1b3d4:	mov	fp, sp
   1b3d8:	sub	sp, sp, #16
   1b3dc:	str	r0, [sp, #8]
   1b3e0:	str	r1, [sp, #4]
   1b3e4:	ldr	r0, [sp, #8]
   1b3e8:	movw	r1, #0
   1b3ec:	cmp	r0, r1
   1b3f0:	bne	1b404 <__assert_fail@plt+0xa51c>
   1b3f4:	ldr	r0, [sp, #4]
   1b3f8:	bl	1b360 <__assert_fail@plt+0xa478>
   1b3fc:	str	r0, [fp, #-4]
   1b400:	b	1b464 <__assert_fail@plt+0xa57c>
   1b404:	ldr	r0, [sp, #4]
   1b408:	cmp	r0, #0
   1b40c:	bne	1b424 <__assert_fail@plt+0xa53c>
   1b410:	ldr	r0, [sp, #8]
   1b414:	bl	14110 <__assert_fail@plt+0x3228>
   1b418:	movw	r0, #0
   1b41c:	str	r0, [fp, #-4]
   1b420:	b	1b464 <__assert_fail@plt+0xa57c>
   1b424:	ldr	r0, [pc, #68]	; 1b470 <__assert_fail@plt+0xa588>
   1b428:	ldr	r1, [sp, #4]
   1b42c:	cmp	r0, r1
   1b430:	bcs	1b44c <__assert_fail@plt+0xa564>
   1b434:	bl	10dec <__errno_location@plt>
   1b438:	movw	r1, #12
   1b43c:	str	r1, [r0]
   1b440:	movw	r0, #0
   1b444:	str	r0, [fp, #-4]
   1b448:	b	1b464 <__assert_fail@plt+0xa57c>
   1b44c:	ldr	r0, [sp, #8]
   1b450:	ldr	r1, [sp, #4]
   1b454:	bl	10d14 <realloc@plt>
   1b458:	str	r0, [sp]
   1b45c:	ldr	r0, [sp]
   1b460:	str	r0, [fp, #-4]
   1b464:	ldr	r0, [fp, #-4]
   1b468:	mov	sp, fp
   1b46c:	pop	{fp, pc}
   1b470:	svcvc	0x00ffffff
   1b474:	push	{r4, sl, fp, lr}
   1b478:	add	fp, sp, #8
   1b47c:	sub	sp, sp, #16
   1b480:	str	r0, [sp, #8]
   1b484:	str	r1, [sp, #12]
   1b488:	str	r2, [sp, #4]
   1b48c:	ldr	r0, [sp, #8]
   1b490:	ldr	r1, [sp, #12]
   1b494:	ldr	r2, [sp, #4]
   1b498:	rsb	r3, r2, #32
   1b49c:	lsr	ip, r0, r3
   1b4a0:	orr	ip, ip, r1, lsl r2
   1b4a4:	sub	lr, r2, #32
   1b4a8:	cmp	lr, #0
   1b4ac:	lslpl	ip, r0, lr
   1b4b0:	lsl	r4, r0, r2
   1b4b4:	cmp	lr, #0
   1b4b8:	movwpl	r4, #0
   1b4bc:	rsb	r2, r2, #64	; 0x40
   1b4c0:	lsr	lr, r1, r2
   1b4c4:	cmp	r3, #0
   1b4c8:	movwpl	lr, #0
   1b4cc:	lsr	r0, r0, r2
   1b4d0:	rsb	r2, r2, #32
   1b4d4:	orr	r0, r0, r1, lsl r2
   1b4d8:	cmp	r3, #0
   1b4dc:	lsrpl	r0, r1, r3
   1b4e0:	orr	r0, r4, r0
   1b4e4:	orr	r1, ip, lr
   1b4e8:	sub	sp, fp, #8
   1b4ec:	pop	{r4, sl, fp, pc}
   1b4f0:	push	{r4, sl, fp, lr}
   1b4f4:	add	fp, sp, #8
   1b4f8:	sub	sp, sp, #16
   1b4fc:	str	r0, [sp, #8]
   1b500:	str	r1, [sp, #12]
   1b504:	str	r2, [sp, #4]
   1b508:	ldr	r0, [sp, #8]
   1b50c:	ldr	r1, [sp, #12]
   1b510:	ldr	r2, [sp, #4]
   1b514:	lsr	r3, r1, r2
   1b518:	sub	ip, r2, #32
   1b51c:	cmp	ip, #0
   1b520:	movwpl	r3, #0
   1b524:	lsr	lr, r0, r2
   1b528:	rsb	r4, r2, #32
   1b52c:	orr	lr, lr, r1, lsl r4
   1b530:	cmp	ip, #0
   1b534:	lsrpl	lr, r1, ip
   1b538:	rsb	r2, r2, #64	; 0x40
   1b53c:	rsb	ip, r2, #32
   1b540:	lsr	ip, r0, ip
   1b544:	orr	r1, ip, r1, lsl r2
   1b548:	cmp	r4, #0
   1b54c:	lslpl	r1, r0, r4
   1b550:	lsl	r0, r0, r2
   1b554:	cmp	r4, #0
   1b558:	movwpl	r0, #0
   1b55c:	orr	r0, lr, r0
   1b560:	orr	r1, r3, r1
   1b564:	sub	sp, fp, #8
   1b568:	pop	{r4, sl, fp, pc}
   1b56c:	sub	sp, sp, #8
   1b570:	str	r0, [sp, #4]
   1b574:	str	r1, [sp]
   1b578:	ldr	r0, [sp, #4]
   1b57c:	ldr	r1, [sp]
   1b580:	lsl	r0, r0, r1
   1b584:	ldr	r1, [sp, #4]
   1b588:	ldr	r2, [sp]
   1b58c:	movw	r3, #32
   1b590:	sub	r2, r3, r2
   1b594:	lsr	r1, r1, r2
   1b598:	orr	r0, r0, r1
   1b59c:	add	sp, sp, #8
   1b5a0:	bx	lr
   1b5a4:	sub	sp, sp, #8
   1b5a8:	str	r0, [sp, #4]
   1b5ac:	str	r1, [sp]
   1b5b0:	ldr	r0, [sp, #4]
   1b5b4:	ldr	r1, [sp]
   1b5b8:	lsr	r0, r0, r1
   1b5bc:	ldr	r1, [sp, #4]
   1b5c0:	ldr	r2, [sp]
   1b5c4:	movw	r3, #32
   1b5c8:	sub	r2, r3, r2
   1b5cc:	lsl	r1, r1, r2
   1b5d0:	orr	r0, r0, r1
   1b5d4:	add	sp, sp, #8
   1b5d8:	bx	lr
   1b5dc:	sub	sp, sp, #8
   1b5e0:	str	r0, [sp, #4]
   1b5e4:	str	r1, [sp]
   1b5e8:	ldr	r0, [sp, #4]
   1b5ec:	ldr	r1, [sp]
   1b5f0:	lsl	r0, r0, r1
   1b5f4:	ldr	r1, [sp, #4]
   1b5f8:	ldr	r2, [sp]
   1b5fc:	movw	r3, #32
   1b600:	sub	r2, r3, r2
   1b604:	lsr	r1, r1, r2
   1b608:	orr	r0, r0, r1
   1b60c:	add	sp, sp, #8
   1b610:	bx	lr
   1b614:	sub	sp, sp, #8
   1b618:	str	r0, [sp, #4]
   1b61c:	str	r1, [sp]
   1b620:	ldr	r0, [sp, #4]
   1b624:	ldr	r1, [sp]
   1b628:	lsr	r0, r0, r1
   1b62c:	ldr	r1, [sp, #4]
   1b630:	ldr	r2, [sp]
   1b634:	movw	r3, #32
   1b638:	sub	r2, r3, r2
   1b63c:	lsl	r1, r1, r2
   1b640:	orr	r0, r0, r1
   1b644:	add	sp, sp, #8
   1b648:	bx	lr
   1b64c:	sub	sp, sp, #8
   1b650:	strh	r0, [sp, #6]
   1b654:	str	r1, [sp]
   1b658:	ldrh	r0, [sp, #6]
   1b65c:	ldr	r1, [sp]
   1b660:	lsl	r0, r0, r1
   1b664:	ldrh	r1, [sp, #6]
   1b668:	ldr	r2, [sp]
   1b66c:	movw	r3, #16
   1b670:	sub	r2, r3, r2
   1b674:	lsr	r1, r1, r2
   1b678:	orr	r0, r0, r1
   1b67c:	movw	r1, #65535	; 0xffff
   1b680:	and	r0, r0, r1
   1b684:	uxth	r0, r0
   1b688:	add	sp, sp, #8
   1b68c:	bx	lr
   1b690:	sub	sp, sp, #8
   1b694:	strh	r0, [sp, #6]
   1b698:	str	r1, [sp]
   1b69c:	ldrh	r0, [sp, #6]
   1b6a0:	ldr	r1, [sp]
   1b6a4:	lsr	r0, r0, r1
   1b6a8:	ldrh	r1, [sp, #6]
   1b6ac:	ldr	r2, [sp]
   1b6b0:	movw	r3, #16
   1b6b4:	sub	r2, r3, r2
   1b6b8:	lsl	r1, r1, r2
   1b6bc:	orr	r0, r0, r1
   1b6c0:	movw	r1, #65535	; 0xffff
   1b6c4:	and	r0, r0, r1
   1b6c8:	uxth	r0, r0
   1b6cc:	add	sp, sp, #8
   1b6d0:	bx	lr
   1b6d4:	sub	sp, sp, #8
   1b6d8:	strb	r0, [sp, #7]
   1b6dc:	str	r1, [sp]
   1b6e0:	ldrb	r0, [sp, #7]
   1b6e4:	ldr	r1, [sp]
   1b6e8:	lsl	r0, r0, r1
   1b6ec:	ldrb	r1, [sp, #7]
   1b6f0:	ldr	r2, [sp]
   1b6f4:	movw	r3, #8
   1b6f8:	sub	r2, r3, r2
   1b6fc:	lsr	r1, r1, r2
   1b700:	orr	r0, r0, r1
   1b704:	and	r0, r0, #255	; 0xff
   1b708:	and	r0, r0, #255	; 0xff
   1b70c:	add	sp, sp, #8
   1b710:	bx	lr
   1b714:	sub	sp, sp, #8
   1b718:	strb	r0, [sp, #7]
   1b71c:	str	r1, [sp]
   1b720:	ldrb	r0, [sp, #7]
   1b724:	ldr	r1, [sp]
   1b728:	lsr	r0, r0, r1
   1b72c:	ldrb	r1, [sp, #7]
   1b730:	ldr	r2, [sp]
   1b734:	movw	r3, #8
   1b738:	sub	r2, r3, r2
   1b73c:	lsl	r1, r1, r2
   1b740:	orr	r0, r0, r1
   1b744:	and	r0, r0, #255	; 0xff
   1b748:	and	r0, r0, #255	; 0xff
   1b74c:	add	sp, sp, #8
   1b750:	bx	lr
   1b754:	sub	sp, sp, #4
   1b758:	ldr	r1, [pc, #32]	; 1b780 <__assert_fail@plt+0xa898>
   1b75c:	str	r0, [sp]
   1b760:	ldr	r0, [sp]
   1b764:	mov	r2, #0
   1b768:	str	r2, [r0, #20]
   1b76c:	str	r2, [r0, #16]
   1b770:	ldr	r0, [sp]
   1b774:	str	r1, [r0, #24]
   1b778:	add	sp, sp, #4
   1b77c:	bx	lr
   1b780:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1b784:	push	{fp, lr}
   1b788:	mov	fp, sp
   1b78c:	sub	sp, sp, #16
   1b790:	ldr	r2, [pc, #364]	; 1b904 <__assert_fail@plt+0xaa1c>
   1b794:	str	r0, [sp, #8]
   1b798:	str	r1, [sp, #4]
   1b79c:	ldr	r0, [sp, #8]
   1b7a0:	ldr	r0, [r0, #24]
   1b7a4:	cmp	r0, r2
   1b7a8:	bne	1b7b0 <__assert_fail@plt+0xa8c8>
   1b7ac:	b	1b7d0 <__assert_fail@plt+0xa8e8>
   1b7b0:	movw	r0, #50076	; 0xc39c
   1b7b4:	movt	r0, #1
   1b7b8:	movw	r1, #50100	; 0xc3b4
   1b7bc:	movt	r1, #1
   1b7c0:	movw	r2, #60	; 0x3c
   1b7c4:	movw	r3, #50114	; 0xc3c2
   1b7c8:	movt	r3, #1
   1b7cc:	bl	10ee8 <__assert_fail@plt>
   1b7d0:	ldr	r0, [sp, #8]
   1b7d4:	ldr	r1, [r0, #16]
   1b7d8:	ldr	r0, [r0, #20]
   1b7dc:	orr	r0, r1, r0
   1b7e0:	cmp	r0, #0
   1b7e4:	beq	1b85c <__assert_fail@plt+0xa974>
   1b7e8:	b	1b7ec <__assert_fail@plt+0xa904>
   1b7ec:	ldr	r0, [sp, #4]
   1b7f0:	ldr	r1, [r0, #96]	; 0x60
   1b7f4:	ldr	r0, [r0, #100]	; 0x64
   1b7f8:	ldr	r2, [sp, #8]
   1b7fc:	ldr	r3, [r2]
   1b800:	ldr	r2, [r2, #4]
   1b804:	eor	r0, r0, r2
   1b808:	eor	r1, r1, r3
   1b80c:	orr	r0, r1, r0
   1b810:	cmp	r0, #0
   1b814:	bne	1b85c <__assert_fail@plt+0xa974>
   1b818:	b	1b81c <__assert_fail@plt+0xa934>
   1b81c:	ldr	r0, [sp, #4]
   1b820:	ldr	r1, [r0]
   1b824:	ldr	r0, [r0, #4]
   1b828:	ldr	r2, [sp, #8]
   1b82c:	ldr	r3, [r2, #8]
   1b830:	ldr	r2, [r2, #12]
   1b834:	eor	r0, r0, r2
   1b838:	eor	r1, r1, r3
   1b83c:	orr	r0, r1, r0
   1b840:	cmp	r0, #0
   1b844:	bne	1b85c <__assert_fail@plt+0xa974>
   1b848:	b	1b84c <__assert_fail@plt+0xa964>
   1b84c:	movw	r0, #1
   1b850:	and	r0, r0, #1
   1b854:	strb	r0, [fp, #-1]
   1b858:	b	1b8f4 <__assert_fail@plt+0xaa0c>
   1b85c:	ldr	r0, [sp, #8]
   1b860:	ldr	r1, [r0, #16]
   1b864:	ldr	r2, [r0, #20]
   1b868:	adds	r1, r1, #1
   1b86c:	adc	r2, r2, #0
   1b870:	str	r1, [r0, #16]
   1b874:	str	r2, [r0, #20]
   1b878:	mov	r0, r1
   1b87c:	mov	r1, r2
   1b880:	bl	1b908 <__assert_fail@plt+0xaa20>
   1b884:	tst	r0, #1
   1b888:	beq	1b8e8 <__assert_fail@plt+0xaa00>
   1b88c:	ldr	r0, [sp, #8]
   1b890:	ldr	r1, [r0, #16]
   1b894:	ldr	r0, [r0, #20]
   1b898:	orr	r0, r1, r0
   1b89c:	cmp	r0, #0
   1b8a0:	bne	1b8b8 <__assert_fail@plt+0xa9d0>
   1b8a4:	b	1b8a8 <__assert_fail@plt+0xa9c0>
   1b8a8:	movw	r0, #1
   1b8ac:	and	r0, r0, #1
   1b8b0:	strb	r0, [fp, #-1]
   1b8b4:	b	1b8f4 <__assert_fail@plt+0xaa0c>
   1b8b8:	ldr	r0, [sp, #4]
   1b8bc:	ldr	r1, [r0]
   1b8c0:	ldr	r0, [r0, #4]
   1b8c4:	ldr	r2, [sp, #8]
   1b8c8:	str	r0, [r2, #12]
   1b8cc:	str	r1, [r2, #8]
   1b8d0:	ldr	r0, [sp, #4]
   1b8d4:	ldr	r1, [r0, #96]	; 0x60
   1b8d8:	ldr	r0, [r0, #100]	; 0x64
   1b8dc:	ldr	r2, [sp, #8]
   1b8e0:	str	r0, [r2, #4]
   1b8e4:	str	r1, [r2]
   1b8e8:	movw	r0, #0
   1b8ec:	and	r0, r0, #1
   1b8f0:	strb	r0, [fp, #-1]
   1b8f4:	ldrb	r0, [fp, #-1]
   1b8f8:	and	r0, r0, #1
   1b8fc:	mov	sp, fp
   1b900:	pop	{fp, pc}
   1b904:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1b908:	sub	sp, sp, #8
   1b90c:	str	r0, [sp]
   1b910:	str	r1, [sp, #4]
   1b914:	ldr	r0, [sp]
   1b918:	ldr	r1, [sp, #4]
   1b91c:	subs	r2, r0, #1
   1b920:	sbc	r3, r1, #0
   1b924:	and	r0, r0, r2
   1b928:	and	r1, r1, r3
   1b92c:	orr	r0, r0, r1
   1b930:	clz	r0, r0
   1b934:	lsr	r0, r0, #5
   1b938:	and	r0, r0, #1
   1b93c:	add	sp, sp, #8
   1b940:	bx	lr
   1b944:	sub	sp, sp, #8
   1b948:	push	{fp, lr}
   1b94c:	mov	fp, sp
   1b950:	sub	sp, sp, #48	; 0x30
   1b954:	str	r3, [fp, #12]
   1b958:	str	r2, [fp, #8]
   1b95c:	str	r0, [fp, #-4]
   1b960:	str	r1, [fp, #-8]
   1b964:	mvn	r0, #0
   1b968:	str	r0, [fp, #-16]
   1b96c:	add	r0, fp, #8
   1b970:	str	r0, [fp, #-12]
   1b974:	ldr	r0, [fp, #-8]
   1b978:	cmp	r0, #0
   1b97c:	str	r0, [sp, #12]
   1b980:	beq	1b99c <__assert_fail@plt+0xaab4>
   1b984:	b	1b988 <__assert_fail@plt+0xaaa0>
   1b988:	movw	r0, #1030	; 0x406
   1b98c:	ldr	r1, [sp, #12]
   1b990:	cmp	r1, r0
   1b994:	beq	1b9c4 <__assert_fail@plt+0xaadc>
   1b998:	b	1b9ec <__assert_fail@plt+0xab04>
   1b99c:	ldr	r0, [fp, #-12]
   1b9a0:	add	r1, r0, #4
   1b9a4:	str	r1, [fp, #-12]
   1b9a8:	ldr	r0, [r0]
   1b9ac:	str	r0, [fp, #-20]	; 0xffffffec
   1b9b0:	ldr	r0, [fp, #-4]
   1b9b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9b8:	bl	1bb98 <__assert_fail@plt+0xacb0>
   1b9bc:	str	r0, [fp, #-16]
   1b9c0:	b	1bb78 <__assert_fail@plt+0xac90>
   1b9c4:	ldr	r0, [fp, #-12]
   1b9c8:	add	r1, r0, #4
   1b9cc:	str	r1, [fp, #-12]
   1b9d0:	ldr	r0, [r0]
   1b9d4:	str	r0, [sp, #24]
   1b9d8:	ldr	r0, [fp, #-4]
   1b9dc:	ldr	r1, [sp, #24]
   1b9e0:	bl	1bbcc <__assert_fail@plt+0xace4>
   1b9e4:	str	r0, [fp, #-16]
   1b9e8:	b	1bb78 <__assert_fail@plt+0xac90>
   1b9ec:	ldr	r0, [fp, #-8]
   1b9f0:	cmp	r0, #0
   1b9f4:	str	r0, [sp, #8]
   1b9f8:	beq	1bb20 <__assert_fail@plt+0xac38>
   1b9fc:	b	1ba00 <__assert_fail@plt+0xab18>
   1ba00:	ldr	r0, [sp, #8]
   1ba04:	cmp	r0, #1
   1ba08:	beq	1bb0c <__assert_fail@plt+0xac24>
   1ba0c:	b	1ba10 <__assert_fail@plt+0xab28>
   1ba10:	ldr	r0, [sp, #8]
   1ba14:	cmp	r0, #2
   1ba18:	beq	1bb20 <__assert_fail@plt+0xac38>
   1ba1c:	b	1ba20 <__assert_fail@plt+0xab38>
   1ba20:	ldr	r0, [sp, #8]
   1ba24:	cmp	r0, #3
   1ba28:	beq	1bb0c <__assert_fail@plt+0xac24>
   1ba2c:	b	1ba30 <__assert_fail@plt+0xab48>
   1ba30:	ldr	r0, [sp, #8]
   1ba34:	cmp	r0, #4
   1ba38:	beq	1bb20 <__assert_fail@plt+0xac38>
   1ba3c:	b	1ba40 <__assert_fail@plt+0xab58>
   1ba40:	ldr	r0, [sp, #8]
   1ba44:	cmp	r0, #8
   1ba48:	beq	1bb20 <__assert_fail@plt+0xac38>
   1ba4c:	b	1ba50 <__assert_fail@plt+0xab68>
   1ba50:	ldr	r0, [sp, #8]
   1ba54:	cmp	r0, #9
   1ba58:	beq	1bb0c <__assert_fail@plt+0xac24>
   1ba5c:	b	1ba60 <__assert_fail@plt+0xab78>
   1ba60:	ldr	r0, [sp, #8]
   1ba64:	cmp	r0, #10
   1ba68:	beq	1bb20 <__assert_fail@plt+0xac38>
   1ba6c:	b	1ba70 <__assert_fail@plt+0xab88>
   1ba70:	ldr	r0, [sp, #8]
   1ba74:	cmp	r0, #11
   1ba78:	beq	1bb0c <__assert_fail@plt+0xac24>
   1ba7c:	b	1ba80 <__assert_fail@plt+0xab98>
   1ba80:	ldr	r0, [sp, #8]
   1ba84:	cmp	r0, #1024	; 0x400
   1ba88:	beq	1bb20 <__assert_fail@plt+0xac38>
   1ba8c:	b	1ba90 <__assert_fail@plt+0xaba8>
   1ba90:	movw	r0, #1025	; 0x401
   1ba94:	ldr	r1, [sp, #8]
   1ba98:	cmp	r1, r0
   1ba9c:	beq	1bb0c <__assert_fail@plt+0xac24>
   1baa0:	b	1baa4 <__assert_fail@plt+0xabbc>
   1baa4:	movw	r0, #1026	; 0x402
   1baa8:	ldr	r1, [sp, #8]
   1baac:	cmp	r1, r0
   1bab0:	beq	1bb20 <__assert_fail@plt+0xac38>
   1bab4:	b	1bab8 <__assert_fail@plt+0xabd0>
   1bab8:	movw	r0, #1030	; 0x406
   1babc:	ldr	r1, [sp, #8]
   1bac0:	sub	r0, r1, r0
   1bac4:	cmp	r0, #2
   1bac8:	bcc	1bb20 <__assert_fail@plt+0xac38>
   1bacc:	b	1bad0 <__assert_fail@plt+0xabe8>
   1bad0:	movw	r0, #1032	; 0x408
   1bad4:	ldr	r1, [sp, #8]
   1bad8:	cmp	r1, r0
   1badc:	beq	1bb0c <__assert_fail@plt+0xac24>
   1bae0:	b	1bae4 <__assert_fail@plt+0xabfc>
   1bae4:	movw	r0, #1033	; 0x409
   1bae8:	ldr	r1, [sp, #8]
   1baec:	cmp	r1, r0
   1baf0:	beq	1bb20 <__assert_fail@plt+0xac38>
   1baf4:	b	1baf8 <__assert_fail@plt+0xac10>
   1baf8:	movw	r0, #1034	; 0x40a
   1bafc:	ldr	r1, [sp, #8]
   1bb00:	cmp	r1, r0
   1bb04:	bne	1bb4c <__assert_fail@plt+0xac64>
   1bb08:	b	1bb0c <__assert_fail@plt+0xac24>
   1bb0c:	ldr	r0, [fp, #-4]
   1bb10:	ldr	r1, [fp, #-8]
   1bb14:	bl	10e1c <fcntl64@plt>
   1bb18:	str	r0, [fp, #-16]
   1bb1c:	b	1bb74 <__assert_fail@plt+0xac8c>
   1bb20:	ldr	r0, [fp, #-12]
   1bb24:	add	r1, r0, #4
   1bb28:	str	r1, [fp, #-12]
   1bb2c:	ldr	r0, [r0]
   1bb30:	str	r0, [sp, #20]
   1bb34:	ldr	r0, [fp, #-4]
   1bb38:	ldr	r1, [fp, #-8]
   1bb3c:	ldr	r2, [sp, #20]
   1bb40:	bl	10e1c <fcntl64@plt>
   1bb44:	str	r0, [fp, #-16]
   1bb48:	b	1bb74 <__assert_fail@plt+0xac8c>
   1bb4c:	ldr	r0, [fp, #-12]
   1bb50:	add	r1, r0, #4
   1bb54:	str	r1, [fp, #-12]
   1bb58:	ldr	r0, [r0]
   1bb5c:	str	r0, [sp, #16]
   1bb60:	ldr	r0, [fp, #-4]
   1bb64:	ldr	r1, [fp, #-8]
   1bb68:	ldr	r2, [sp, #16]
   1bb6c:	bl	10e1c <fcntl64@plt>
   1bb70:	str	r0, [fp, #-16]
   1bb74:	b	1bb78 <__assert_fail@plt+0xac90>
   1bb78:	sub	r0, fp, #12
   1bb7c:	ldr	r1, [fp, #-16]
   1bb80:	str	r0, [sp, #4]
   1bb84:	mov	r0, r1
   1bb88:	mov	sp, fp
   1bb8c:	pop	{fp, lr}
   1bb90:	add	sp, sp, #8
   1bb94:	bx	lr
   1bb98:	push	{fp, lr}
   1bb9c:	mov	fp, sp
   1bba0:	sub	sp, sp, #16
   1bba4:	str	r0, [fp, #-4]
   1bba8:	str	r1, [sp, #8]
   1bbac:	ldr	r0, [fp, #-4]
   1bbb0:	ldr	r2, [sp, #8]
   1bbb4:	movw	r1, #0
   1bbb8:	bl	10e1c <fcntl64@plt>
   1bbbc:	str	r0, [sp, #4]
   1bbc0:	ldr	r0, [sp, #4]
   1bbc4:	mov	sp, fp
   1bbc8:	pop	{fp, pc}
   1bbcc:	push	{fp, lr}
   1bbd0:	mov	fp, sp
   1bbd4:	sub	sp, sp, #32
   1bbd8:	str	r0, [fp, #-4]
   1bbdc:	str	r1, [fp, #-8]
   1bbe0:	movw	r0, #53576	; 0xd148
   1bbe4:	movt	r0, #2
   1bbe8:	ldr	r0, [r0]
   1bbec:	movw	r1, #0
   1bbf0:	cmp	r1, r0
   1bbf4:	bgt	1bc74 <__assert_fail@plt+0xad8c>
   1bbf8:	ldr	r0, [fp, #-4]
   1bbfc:	ldr	r2, [fp, #-8]
   1bc00:	movw	r1, #1030	; 0x406
   1bc04:	bl	10e1c <fcntl64@plt>
   1bc08:	str	r0, [fp, #-12]
   1bc0c:	ldr	r0, [fp, #-12]
   1bc10:	movw	r1, #0
   1bc14:	cmp	r1, r0
   1bc18:	ble	1bc2c <__assert_fail@plt+0xad44>
   1bc1c:	bl	10dec <__errno_location@plt>
   1bc20:	ldr	r0, [r0]
   1bc24:	cmp	r0, #22
   1bc28:	beq	1bc40 <__assert_fail@plt+0xad58>
   1bc2c:	movw	r0, #53576	; 0xd148
   1bc30:	movt	r0, #2
   1bc34:	movw	r1, #1
   1bc38:	str	r1, [r0]
   1bc3c:	b	1bc70 <__assert_fail@plt+0xad88>
   1bc40:	ldr	r0, [fp, #-4]
   1bc44:	ldr	r1, [fp, #-8]
   1bc48:	bl	1bb98 <__assert_fail@plt+0xacb0>
   1bc4c:	str	r0, [fp, #-12]
   1bc50:	ldr	r0, [fp, #-12]
   1bc54:	cmp	r0, #0
   1bc58:	blt	1bc6c <__assert_fail@plt+0xad84>
   1bc5c:	movw	r0, #53576	; 0xd148
   1bc60:	movt	r0, #2
   1bc64:	mvn	r1, #0
   1bc68:	str	r1, [r0]
   1bc6c:	b	1bc70 <__assert_fail@plt+0xad88>
   1bc70:	b	1bc84 <__assert_fail@plt+0xad9c>
   1bc74:	ldr	r0, [fp, #-4]
   1bc78:	ldr	r1, [fp, #-8]
   1bc7c:	bl	1bb98 <__assert_fail@plt+0xacb0>
   1bc80:	str	r0, [fp, #-12]
   1bc84:	ldr	r0, [fp, #-12]
   1bc88:	movw	r1, #0
   1bc8c:	cmp	r1, r0
   1bc90:	bgt	1bd18 <__assert_fail@plt+0xae30>
   1bc94:	movw	r0, #53576	; 0xd148
   1bc98:	movt	r0, #2
   1bc9c:	ldr	r0, [r0]
   1bca0:	cmn	r0, #1
   1bca4:	bne	1bd18 <__assert_fail@plt+0xae30>
   1bca8:	ldr	r0, [fp, #-12]
   1bcac:	movw	r1, #1
   1bcb0:	bl	10e1c <fcntl64@plt>
   1bcb4:	str	r0, [sp, #16]
   1bcb8:	ldr	r0, [sp, #16]
   1bcbc:	cmp	r0, #0
   1bcc0:	blt	1bce0 <__assert_fail@plt+0xadf8>
   1bcc4:	ldr	r0, [fp, #-12]
   1bcc8:	ldr	r1, [sp, #16]
   1bccc:	orr	r2, r1, #1
   1bcd0:	movw	r1, #2
   1bcd4:	bl	10e1c <fcntl64@plt>
   1bcd8:	cmn	r0, #1
   1bcdc:	bne	1bd14 <__assert_fail@plt+0xae2c>
   1bce0:	bl	10dec <__errno_location@plt>
   1bce4:	ldr	r0, [r0]
   1bce8:	str	r0, [sp, #12]
   1bcec:	ldr	r0, [fp, #-12]
   1bcf0:	bl	10eb8 <close@plt>
   1bcf4:	ldr	r1, [sp, #12]
   1bcf8:	str	r0, [sp, #8]
   1bcfc:	str	r1, [sp, #4]
   1bd00:	bl	10dec <__errno_location@plt>
   1bd04:	ldr	r1, [sp, #4]
   1bd08:	str	r1, [r0]
   1bd0c:	mvn	r0, #0
   1bd10:	str	r0, [fp, #-12]
   1bd14:	b	1bd18 <__assert_fail@plt+0xae30>
   1bd18:	ldr	r0, [fp, #-12]
   1bd1c:	mov	sp, fp
   1bd20:	pop	{fp, pc}
   1bd24:	sub	sp, sp, #8
   1bd28:	push	{fp, lr}
   1bd2c:	mov	fp, sp
   1bd30:	sub	sp, sp, #16
   1bd34:	str	r3, [fp, #12]
   1bd38:	str	r2, [fp, #8]
   1bd3c:	str	r0, [fp, #-4]
   1bd40:	str	r1, [sp, #8]
   1bd44:	movw	r0, #0
   1bd48:	str	r0, [sp, #4]
   1bd4c:	ldr	r0, [sp, #8]
   1bd50:	and	r0, r0, #64	; 0x40
   1bd54:	cmp	r0, #0
   1bd58:	beq	1bd80 <__assert_fail@plt+0xae98>
   1bd5c:	mov	r0, sp
   1bd60:	mov	r1, r0
   1bd64:	add	r2, fp, #8
   1bd68:	str	r2, [r1]
   1bd6c:	ldr	r1, [sp]
   1bd70:	add	r2, r1, #4
   1bd74:	str	r2, [sp]
   1bd78:	ldr	r1, [r1]
   1bd7c:	str	r1, [sp, #4]
   1bd80:	ldr	r0, [fp, #-4]
   1bd84:	ldr	r1, [sp, #8]
   1bd88:	ldr	r2, [sp, #4]
   1bd8c:	bl	10d68 <open64@plt>
   1bd90:	bl	1b24c <__assert_fail@plt+0xa364>
   1bd94:	mov	sp, fp
   1bd98:	pop	{fp, lr}
   1bd9c:	add	sp, sp, #8
   1bda0:	bx	lr
   1bda4:	push	{fp, lr}
   1bda8:	mov	fp, sp
   1bdac:	sub	sp, sp, #8
   1bdb0:	str	r0, [sp, #4]
   1bdb4:	ldr	r0, [sp, #4]
   1bdb8:	movw	r1, #0
   1bdbc:	movw	r2, #3
   1bdc0:	bl	1b944 <__assert_fail@plt+0xaa5c>
   1bdc4:	mov	sp, fp
   1bdc8:	pop	{fp, pc}
   1bdcc:	cmp	r3, #0
   1bdd0:	cmpeq	r2, #0
   1bdd4:	bne	1bdf8 <__assert_fail@plt+0xaf10>
   1bdd8:	cmp	r1, #0
   1bddc:	movlt	r1, #-2147483648	; 0x80000000
   1bde0:	movlt	r0, #0
   1bde4:	blt	1bdf4 <__assert_fail@plt+0xaf0c>
   1bde8:	cmpeq	r0, #0
   1bdec:	mvnne	r1, #-2147483648	; 0x80000000
   1bdf0:	mvnne	r0, #0
   1bdf4:	b	1bedc <__assert_fail@plt+0xaff4>
   1bdf8:	sub	sp, sp, #8
   1bdfc:	push	{sp, lr}
   1be00:	cmp	r1, #0
   1be04:	blt	1be24 <__assert_fail@plt+0xaf3c>
   1be08:	cmp	r3, #0
   1be0c:	blt	1be58 <__assert_fail@plt+0xaf70>
   1be10:	bl	1beec <__assert_fail@plt+0xb004>
   1be14:	ldr	lr, [sp, #4]
   1be18:	add	sp, sp, #8
   1be1c:	pop	{r2, r3}
   1be20:	bx	lr
   1be24:	rsbs	r0, r0, #0
   1be28:	sbc	r1, r1, r1, lsl #1
   1be2c:	cmp	r3, #0
   1be30:	blt	1be7c <__assert_fail@plt+0xaf94>
   1be34:	bl	1beec <__assert_fail@plt+0xb004>
   1be38:	ldr	lr, [sp, #4]
   1be3c:	add	sp, sp, #8
   1be40:	pop	{r2, r3}
   1be44:	rsbs	r0, r0, #0
   1be48:	sbc	r1, r1, r1, lsl #1
   1be4c:	rsbs	r2, r2, #0
   1be50:	sbc	r3, r3, r3, lsl #1
   1be54:	bx	lr
   1be58:	rsbs	r2, r2, #0
   1be5c:	sbc	r3, r3, r3, lsl #1
   1be60:	bl	1beec <__assert_fail@plt+0xb004>
   1be64:	ldr	lr, [sp, #4]
   1be68:	add	sp, sp, #8
   1be6c:	pop	{r2, r3}
   1be70:	rsbs	r0, r0, #0
   1be74:	sbc	r1, r1, r1, lsl #1
   1be78:	bx	lr
   1be7c:	rsbs	r2, r2, #0
   1be80:	sbc	r3, r3, r3, lsl #1
   1be84:	bl	1beec <__assert_fail@plt+0xb004>
   1be88:	ldr	lr, [sp, #4]
   1be8c:	add	sp, sp, #8
   1be90:	pop	{r2, r3}
   1be94:	rsbs	r2, r2, #0
   1be98:	sbc	r3, r3, r3, lsl #1
   1be9c:	bx	lr
   1bea0:	cmp	r3, #0
   1bea4:	cmpeq	r2, #0
   1bea8:	bne	1bec0 <__assert_fail@plt+0xafd8>
   1beac:	cmp	r1, #0
   1beb0:	cmpeq	r0, #0
   1beb4:	mvnne	r1, #0
   1beb8:	mvnne	r0, #0
   1bebc:	b	1bedc <__assert_fail@plt+0xaff4>
   1bec0:	sub	sp, sp, #8
   1bec4:	push	{sp, lr}
   1bec8:	bl	1beec <__assert_fail@plt+0xb004>
   1becc:	ldr	lr, [sp, #4]
   1bed0:	add	sp, sp, #8
   1bed4:	pop	{r2, r3}
   1bed8:	bx	lr
   1bedc:	push	{r1, lr}
   1bee0:	mov	r0, #8
   1bee4:	bl	10c9c <raise@plt>
   1bee8:	pop	{r1, pc}
   1beec:	cmp	r1, r3
   1bef0:	cmpeq	r0, r2
   1bef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bef8:	mov	r4, r0
   1befc:	movcc	r0, #0
   1bf00:	mov	r5, r1
   1bf04:	ldr	lr, [sp, #36]	; 0x24
   1bf08:	movcc	r1, r0
   1bf0c:	bcc	1c008 <__assert_fail@plt+0xb120>
   1bf10:	cmp	r3, #0
   1bf14:	clzeq	ip, r2
   1bf18:	clzne	ip, r3
   1bf1c:	addeq	ip, ip, #32
   1bf20:	cmp	r5, #0
   1bf24:	clzeq	r1, r4
   1bf28:	addeq	r1, r1, #32
   1bf2c:	clzne	r1, r5
   1bf30:	sub	ip, ip, r1
   1bf34:	sub	sl, ip, #32
   1bf38:	lsl	r9, r3, ip
   1bf3c:	rsb	fp, ip, #32
   1bf40:	orr	r9, r9, r2, lsl sl
   1bf44:	orr	r9, r9, r2, lsr fp
   1bf48:	lsl	r8, r2, ip
   1bf4c:	cmp	r5, r9
   1bf50:	cmpeq	r4, r8
   1bf54:	movcc	r0, #0
   1bf58:	movcc	r1, r0
   1bf5c:	bcc	1bf78 <__assert_fail@plt+0xb090>
   1bf60:	mov	r0, #1
   1bf64:	subs	r4, r4, r8
   1bf68:	lsl	r1, r0, sl
   1bf6c:	orr	r1, r1, r0, lsr fp
   1bf70:	lsl	r0, r0, ip
   1bf74:	sbc	r5, r5, r9
   1bf78:	cmp	ip, #0
   1bf7c:	beq	1c008 <__assert_fail@plt+0xb120>
   1bf80:	lsr	r6, r8, #1
   1bf84:	orr	r6, r6, r9, lsl #31
   1bf88:	lsr	r7, r9, #1
   1bf8c:	mov	r2, ip
   1bf90:	b	1bfb4 <__assert_fail@plt+0xb0cc>
   1bf94:	subs	r3, r4, r6
   1bf98:	sbc	r8, r5, r7
   1bf9c:	adds	r3, r3, r3
   1bfa0:	adc	r8, r8, r8
   1bfa4:	adds	r4, r3, #1
   1bfa8:	adc	r5, r8, #0
   1bfac:	subs	r2, r2, #1
   1bfb0:	beq	1bfd0 <__assert_fail@plt+0xb0e8>
   1bfb4:	cmp	r5, r7
   1bfb8:	cmpeq	r4, r6
   1bfbc:	bcs	1bf94 <__assert_fail@plt+0xb0ac>
   1bfc0:	adds	r4, r4, r4
   1bfc4:	adc	r5, r5, r5
   1bfc8:	subs	r2, r2, #1
   1bfcc:	bne	1bfb4 <__assert_fail@plt+0xb0cc>
   1bfd0:	lsr	r3, r4, ip
   1bfd4:	orr	r3, r3, r5, lsl fp
   1bfd8:	lsr	r2, r5, ip
   1bfdc:	orr	r3, r3, r5, lsr sl
   1bfe0:	adds	r0, r0, r4
   1bfe4:	mov	r4, r3
   1bfe8:	lsl	r3, r2, ip
   1bfec:	orr	r3, r3, r4, lsl sl
   1bff0:	lsl	ip, r4, ip
   1bff4:	orr	r3, r3, r4, lsr fp
   1bff8:	adc	r1, r1, r5
   1bffc:	subs	r0, r0, ip
   1c000:	mov	r5, r2
   1c004:	sbc	r1, r1, r3
   1c008:	cmp	lr, #0
   1c00c:	strdne	r4, [lr]
   1c010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c014:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c018:	mov	r7, r0
   1c01c:	ldr	r6, [pc, #72]	; 1c06c <__assert_fail@plt+0xb184>
   1c020:	ldr	r5, [pc, #72]	; 1c070 <__assert_fail@plt+0xb188>
   1c024:	add	r6, pc, r6
   1c028:	add	r5, pc, r5
   1c02c:	sub	r6, r6, r5
   1c030:	mov	r8, r1
   1c034:	mov	r9, r2
   1c038:	bl	10c64 <fstatfs64@plt-0x20>
   1c03c:	asrs	r6, r6, #2
   1c040:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c044:	mov	r4, #0
   1c048:	add	r4, r4, #1
   1c04c:	ldr	r3, [r5], #4
   1c050:	mov	r2, r9
   1c054:	mov	r1, r8
   1c058:	mov	r0, r7
   1c05c:	blx	r3
   1c060:	cmp	r6, r4
   1c064:	bne	1c048 <__assert_fail@plt+0xb160>
   1c068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c06c:	andeq	r0, r1, r0, ror #29
   1c070:	ldrdeq	r0, [r1], -r8
   1c074:	bx	lr
   1c078:	mov	r2, r1
   1c07c:	mov	r1, r0
   1c080:	mov	r0, #3
   1c084:	b	10e88 <__xstat64@plt>
   1c088:	mov	r2, r1
   1c08c:	mov	r1, r0
   1c090:	mov	r0, #3
   1c094:	b	10d38 <__fxstat64@plt>
   1c098:	mov	r2, r1
   1c09c:	mov	r1, r0
   1c0a0:	mov	r0, #3
   1c0a4:	b	10ec4 <__lxstat64@plt>
   1c0a8:	push	{lr}		; (str lr, [sp, #-4]!)
   1c0ac:	sub	sp, sp, #12
   1c0b0:	str	r3, [sp]
   1c0b4:	mov	r3, r2
   1c0b8:	mov	r2, r1
   1c0bc:	mov	r1, r0
   1c0c0:	mov	r0, #3
   1c0c4:	bl	10d2c <__fxstatat64@plt>
   1c0c8:	add	sp, sp, #12
   1c0cc:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001c0d0 <.fini>:
   1c0d0:	push	{r3, lr}
   1c0d4:	pop	{r3, pc}
