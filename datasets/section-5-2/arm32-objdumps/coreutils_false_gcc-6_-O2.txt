
../repos/coreutils/src/false:     file format elf32-littlearm


Disassembly of section .init:

00010a40 <.init>:
   10a40:	push	{r3, lr}
   10a44:	bl	10d74 <abort@plt+0x128>
   10a48:	pop	{r3, pc}

Disassembly of section .plt:

00010a4c <calloc@plt-0x14>:
   10a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a50:	ldr	lr, [pc, #4]	; 10a5c <calloc@plt-0x4>
   10a54:	add	lr, pc, lr
   10a58:	ldr	pc, [lr, #8]!
   10a5c:	andeq	r4, r1, r4, lsr #11

00010a60 <calloc@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #20, 20	; 0x14000
   10a68:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a6c <fputs_unlocked@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #20, 20	; 0x14000
   10a74:	ldr	pc, [ip, #1436]!	; 0x59c

00010a78 <raise@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #20, 20	; 0x14000
   10a80:	ldr	pc, [ip, #1428]!	; 0x594

00010a84 <strcmp@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #20, 20	; 0x14000
   10a8c:	ldr	pc, [ip, #1420]!	; 0x58c

00010a90 <fflush@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #20, 20	; 0x14000
   10a98:	ldr	pc, [ip, #1412]!	; 0x584

00010a9c <free@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #20, 20	; 0x14000
   10aa4:	ldr	pc, [ip, #1404]!	; 0x57c

00010aa8 <_exit@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #20, 20	; 0x14000
   10ab0:	ldr	pc, [ip, #1396]!	; 0x574

00010ab4 <memcpy@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #20, 20	; 0x14000
   10abc:	ldr	pc, [ip, #1388]!	; 0x56c

00010ac0 <mbsinit@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #20, 20	; 0x14000
   10ac8:	ldr	pc, [ip, #1380]!	; 0x564

00010acc <memcmp@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #20, 20	; 0x14000
   10ad4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ad8 <fputc_unlocked@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #20, 20	; 0x14000
   10ae0:	ldr	pc, [ip, #1364]!	; 0x554

00010ae4 <dcgettext@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #20, 20	; 0x14000
   10aec:	ldr	pc, [ip, #1356]!	; 0x54c

00010af0 <realloc@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #20, 20	; 0x14000
   10af8:	ldr	pc, [ip, #1348]!	; 0x544

00010afc <textdomain@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #20, 20	; 0x14000
   10b04:	ldr	pc, [ip, #1340]!	; 0x53c

00010b08 <iswprint@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #20, 20	; 0x14000
   10b10:	ldr	pc, [ip, #1332]!	; 0x534

00010b14 <fwrite@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #20, 20	; 0x14000
   10b1c:	ldr	pc, [ip, #1324]!	; 0x52c

00010b20 <lseek64@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #20, 20	; 0x14000
   10b28:	ldr	pc, [ip, #1316]!	; 0x524

00010b2c <__ctype_get_mb_cur_max@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #20, 20	; 0x14000
   10b34:	ldr	pc, [ip, #1308]!	; 0x51c

00010b38 <__fpending@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #20, 20	; 0x14000
   10b40:	ldr	pc, [ip, #1300]!	; 0x514

00010b44 <mbrtowc@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #20, 20	; 0x14000
   10b4c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b50 <error@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1284]!	; 0x504

00010b5c <malloc@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b68 <__libc_start_main@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b74 <__freading@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b80 <__gmon_start__@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b8c <__ctype_b_loc@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b98 <exit@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1236]!	; 0x4d4

00010ba4 <strlen@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1228]!	; 0x4cc

00010bb0 <__errno_location@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1220]!	; 0x4c4

00010bbc <__cxa_atexit@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1212]!	; 0x4bc

00010bc8 <memset@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1204]!	; 0x4b4

00010bd4 <__printf_chk@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1196]!	; 0x4ac

00010be0 <fileno@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bec <__fprintf_chk@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1180]!	; 0x49c

00010bf8 <fclose@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1172]!	; 0x494

00010c04 <fseeko64@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1164]!	; 0x48c

00010c10 <setlocale@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1156]!	; 0x484

00010c1c <strrchr@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1148]!	; 0x47c

00010c28 <nl_langinfo@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1140]!	; 0x474

00010c34 <bindtextdomain@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1132]!	; 0x46c

00010c40 <strncmp@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1124]!	; 0x464

00010c4c <abort@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1116]!	; 0x45c

Disassembly of section .text:

00010c58 <.text>:
   10c58:	cmp	r0, #2
   10c5c:	beq	10c68 <abort@plt+0x1c>
   10c60:	mov	r0, #1
   10c64:	bx	lr
   10c68:	push	{r4, lr}
   10c6c:	sub	sp, sp, #8
   10c70:	ldr	r0, [r1]
   10c74:	mov	r4, r1
   10c78:	bl	11224 <abort@plt+0x5d8>
   10c7c:	ldr	r1, [pc, #136]	; 10d0c <abort@plt+0xc0>
   10c80:	mov	r0, #6
   10c84:	bl	10c10 <setlocale@plt>
   10c88:	ldr	r1, [pc, #128]	; 10d10 <abort@plt+0xc4>
   10c8c:	ldr	r0, [pc, #128]	; 10d14 <abort@plt+0xc8>
   10c90:	bl	10c34 <bindtextdomain@plt>
   10c94:	ldr	r0, [pc, #120]	; 10d14 <abort@plt+0xc8>
   10c98:	bl	10afc <textdomain@plt>
   10c9c:	ldr	r0, [pc, #116]	; 10d18 <abort@plt+0xcc>
   10ca0:	bl	14570 <abort@plt+0x3924>
   10ca4:	ldr	r4, [r4, #4]
   10ca8:	ldr	r1, [pc, #108]	; 10d1c <abort@plt+0xd0>
   10cac:	mov	r0, r4
   10cb0:	bl	10a84 <strcmp@plt>
   10cb4:	cmp	r0, #0
   10cb8:	beq	10d04 <abort@plt+0xb8>
   10cbc:	mov	r0, r4
   10cc0:	ldr	r1, [pc, #88]	; 10d20 <abort@plt+0xd4>
   10cc4:	bl	10a84 <strcmp@plt>
   10cc8:	cmp	r0, #0
   10ccc:	bne	10cf8 <abort@plt+0xac>
   10cd0:	ldr	r1, [pc, #76]	; 10d24 <abort@plt+0xd8>
   10cd4:	ldr	r3, [pc, #76]	; 10d28 <abort@plt+0xdc>
   10cd8:	ldr	r2, [pc, #76]	; 10d2c <abort@plt+0xe0>
   10cdc:	str	r0, [sp, #4]
   10ce0:	ldr	r0, [r1]
   10ce4:	ldr	r3, [r3]
   10ce8:	ldr	r1, [pc, #64]	; 10d30 <abort@plt+0xe4>
   10cec:	str	r2, [sp]
   10cf0:	ldr	r2, [pc, #60]	; 10d34 <abort@plt+0xe8>
   10cf4:	bl	13520 <abort@plt+0x28d4>
   10cf8:	mov	r0, #1
   10cfc:	add	sp, sp, #8
   10d00:	pop	{r4, pc}
   10d04:	mov	r0, #1
   10d08:	bl	10e60 <abort@plt+0x214>
   10d0c:	andeq	r4, r1, r4, asr #12
   10d10:	andeq	r4, r1, ip, asr r8
   10d14:			; <UNDEFINED> instruction: 0x000147b4
   10d18:	andeq	r1, r1, r0, asr #2
   10d1c:	andeq	r4, r1, r4, ror r8
   10d20:	andeq	r4, r1, ip, ror r8
   10d24:	andeq	r5, r2, r4, lsl r1
   10d28:	andeq	r5, r2, r0, asr #1
   10d2c:	andeq	r4, r1, r8, lsl #17
   10d30:	andeq	r4, r1, ip, asr #11
   10d34:			; <UNDEFINED> instruction: 0x000147b0
   10d38:	mov	fp, #0
   10d3c:	mov	lr, #0
   10d40:	pop	{r1}		; (ldr r1, [sp], #4)
   10d44:	mov	r2, sp
   10d48:	push	{r2}		; (str r2, [sp, #-4]!)
   10d4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d50:	ldr	ip, [pc, #16]	; 10d68 <abort@plt+0x11c>
   10d54:	push	{ip}		; (str ip, [sp, #-4]!)
   10d58:	ldr	r0, [pc, #12]	; 10d6c <abort@plt+0x120>
   10d5c:	ldr	r3, [pc, #12]	; 10d70 <abort@plt+0x124>
   10d60:	bl	10b68 <__libc_start_main@plt>
   10d64:	bl	10c4c <abort@plt>
   10d68:	andeq	r4, r1, ip, ror #10
   10d6c:	andeq	r0, r1, r8, asr ip
   10d70:	andeq	r4, r1, ip, lsl #10
   10d74:	ldr	r3, [pc, #20]	; 10d90 <abort@plt+0x144>
   10d78:	ldr	r2, [pc, #20]	; 10d94 <abort@plt+0x148>
   10d7c:	add	r3, pc, r3
   10d80:	ldr	r2, [r3, r2]
   10d84:	cmp	r2, #0
   10d88:	bxeq	lr
   10d8c:	b	10b80 <__gmon_start__@plt>
   10d90:	andeq	r4, r1, ip, ror r2
   10d94:	strheq	r0, [r0], -r4
   10d98:	ldr	r3, [pc, #28]	; 10dbc <abort@plt+0x170>
   10d9c:	ldr	r0, [pc, #28]	; 10dc0 <abort@plt+0x174>
   10da0:	sub	r3, r3, r0
   10da4:	cmp	r3, #6
   10da8:	bxls	lr
   10dac:	ldr	r3, [pc, #16]	; 10dc4 <abort@plt+0x178>
   10db0:	cmp	r3, #0
   10db4:	bxeq	lr
   10db8:	bx	r3
   10dbc:	andeq	r5, r2, fp, lsl #2
   10dc0:	andeq	r5, r2, r8, lsl #2
   10dc4:	andeq	r0, r0, r0
   10dc8:	ldr	r1, [pc, #36]	; 10df4 <abort@plt+0x1a8>
   10dcc:	ldr	r0, [pc, #36]	; 10df8 <abort@plt+0x1ac>
   10dd0:	sub	r1, r1, r0
   10dd4:	asr	r1, r1, #2
   10dd8:	add	r1, r1, r1, lsr #31
   10ddc:	asrs	r1, r1, #1
   10de0:	bxeq	lr
   10de4:	ldr	r3, [pc, #16]	; 10dfc <abort@plt+0x1b0>
   10de8:	cmp	r3, #0
   10dec:	bxeq	lr
   10df0:	bx	r3
   10df4:	andeq	r5, r2, r8, lsl #2
   10df8:	andeq	r5, r2, r8, lsl #2
   10dfc:	andeq	r0, r0, r0
   10e00:	push	{r4, lr}
   10e04:	ldr	r4, [pc, #24]	; 10e24 <abort@plt+0x1d8>
   10e08:	ldrb	r3, [r4]
   10e0c:	cmp	r3, #0
   10e10:	popne	{r4, pc}
   10e14:	bl	10d98 <abort@plt+0x14c>
   10e18:	mov	r3, #1
   10e1c:	strb	r3, [r4]
   10e20:	pop	{r4, pc}
   10e24:	andeq	r5, r2, r8, lsl r1
   10e28:	ldr	r0, [pc, #40]	; 10e58 <abort@plt+0x20c>
   10e2c:	ldr	r3, [r0]
   10e30:	cmp	r3, #0
   10e34:	bne	10e3c <abort@plt+0x1f0>
   10e38:	b	10dc8 <abort@plt+0x17c>
   10e3c:	ldr	r3, [pc, #24]	; 10e5c <abort@plt+0x210>
   10e40:	cmp	r3, #0
   10e44:	beq	10e38 <abort@plt+0x1ec>
   10e48:	push	{r4, lr}
   10e4c:	blx	r3
   10e50:	pop	{r4, lr}
   10e54:	b	10dc8 <abort@plt+0x17c>
   10e58:	andeq	r4, r2, r4, lsl pc
   10e5c:	andeq	r0, r0, r0
   10e60:	push	{r7, lr}
   10e64:	mov	r2, #5
   10e68:	sub	sp, sp, #56	; 0x38
   10e6c:	ldr	r1, [pc, #608]	; 110d4 <abort@plt+0x488>
   10e70:	mov	r6, r0
   10e74:	mov	r0, #0
   10e78:	bl	10ae4 <dcgettext@plt>
   10e7c:	ldr	r3, [pc, #596]	; 110d8 <abort@plt+0x48c>
   10e80:	ldr	r7, [pc, #596]	; 110dc <abort@plt+0x490>
   10e84:	ldr	r4, [pc, #596]	; 110e0 <abort@plt+0x494>
   10e88:	ldr	r3, [r3]
   10e8c:	mov	r2, r3
   10e90:	mov	r1, r0
   10e94:	mov	r0, #1
   10e98:	bl	10bd4 <__printf_chk@plt>
   10e9c:	mov	r2, #5
   10ea0:	ldr	r1, [pc, #572]	; 110e4 <abort@plt+0x498>
   10ea4:	mov	r0, #0
   10ea8:	bl	10ae4 <dcgettext@plt>
   10eac:	ldr	r1, [pc, #564]	; 110e8 <abort@plt+0x49c>
   10eb0:	mov	r2, r0
   10eb4:	mov	r0, #1
   10eb8:	bl	10bd4 <__printf_chk@plt>
   10ebc:	mov	r2, #5
   10ec0:	ldr	r1, [pc, #548]	; 110ec <abort@plt+0x4a0>
   10ec4:	mov	r0, #0
   10ec8:	bl	10ae4 <dcgettext@plt>
   10ecc:	ldr	r1, [r7]
   10ed0:	bl	10a6c <fputs_unlocked@plt>
   10ed4:	mov	r2, #5
   10ed8:	ldr	r1, [pc, #528]	; 110f0 <abort@plt+0x4a4>
   10edc:	mov	r0, #0
   10ee0:	bl	10ae4 <dcgettext@plt>
   10ee4:	ldr	r1, [r7]
   10ee8:	bl	10a6c <fputs_unlocked@plt>
   10eec:	mov	r2, #5
   10ef0:	ldr	r1, [pc, #508]	; 110f4 <abort@plt+0x4a8>
   10ef4:	mov	r0, #0
   10ef8:	bl	10ae4 <dcgettext@plt>
   10efc:	ldr	r2, [pc, #500]	; 110f8 <abort@plt+0x4ac>
   10f00:	mov	r1, r0
   10f04:	mov	r0, #1
   10f08:	bl	10bd4 <__printf_chk@plt>
   10f0c:	ldm	r4!, {r0, r1, r2, r3}
   10f10:	mov	lr, sp
   10f14:	stmia	lr!, {r0, r1, r2, r3}
   10f18:	ldm	r4!, {r0, r1, r2, r3}
   10f1c:	ldr	ip, [sp]
   10f20:	stmia	lr!, {r0, r1, r2, r3}
   10f24:	cmp	ip, #0
   10f28:	ldm	r4!, {r0, r1, r2, r3}
   10f2c:	stmia	lr!, {r0, r1, r2, r3}
   10f30:	ldm	r4, {r0, r1}
   10f34:	moveq	r4, sp
   10f38:	stm	lr, {r0, r1}
   10f3c:	beq	10f6c <abort@plt+0x320>
   10f40:	ldr	r5, [pc, #432]	; 110f8 <abort@plt+0x4ac>
   10f44:	mov	r4, sp
   10f48:	b	10f58 <abort@plt+0x30c>
   10f4c:	ldr	ip, [r4, #8]!
   10f50:	cmp	ip, #0
   10f54:	beq	10f6c <abort@plt+0x320>
   10f58:	mov	r1, ip
   10f5c:	mov	r0, r5
   10f60:	bl	10a84 <strcmp@plt>
   10f64:	cmp	r0, #0
   10f68:	bne	10f4c <abort@plt+0x300>
   10f6c:	ldr	r4, [r4, #4]
   10f70:	mov	r2, #5
   10f74:	cmp	r4, #0
   10f78:	ldr	r1, [pc, #380]	; 110fc <abort@plt+0x4b0>
   10f7c:	beq	1104c <abort@plt+0x400>
   10f80:	mov	r0, #0
   10f84:	bl	10ae4 <dcgettext@plt>
   10f88:	ldr	r3, [pc, #368]	; 11100 <abort@plt+0x4b4>
   10f8c:	ldr	r2, [pc, #368]	; 11104 <abort@plt+0x4b8>
   10f90:	mov	r1, r0
   10f94:	mov	r0, #1
   10f98:	bl	10bd4 <__printf_chk@plt>
   10f9c:	mov	r1, #0
   10fa0:	mov	r0, #5
   10fa4:	bl	10c10 <setlocale@plt>
   10fa8:	cmp	r0, #0
   10fac:	ldreq	r5, [pc, #324]	; 110f8 <abort@plt+0x4ac>
   10fb0:	beq	10fcc <abort@plt+0x380>
   10fb4:	mov	r2, #3
   10fb8:	ldr	r1, [pc, #328]	; 11108 <abort@plt+0x4bc>
   10fbc:	bl	10c40 <strncmp@plt>
   10fc0:	ldr	r5, [pc, #304]	; 110f8 <abort@plt+0x4ac>
   10fc4:	cmp	r0, #0
   10fc8:	bne	11030 <abort@plt+0x3e4>
   10fcc:	mov	r2, #5
   10fd0:	ldr	r1, [pc, #308]	; 1110c <abort@plt+0x4c0>
   10fd4:	mov	r0, #0
   10fd8:	bl	10ae4 <dcgettext@plt>
   10fdc:	ldr	r3, [pc, #276]	; 110f8 <abort@plt+0x4ac>
   10fe0:	ldr	r2, [pc, #280]	; 11100 <abort@plt+0x4b4>
   10fe4:	mov	r1, r0
   10fe8:	mov	r0, #1
   10fec:	bl	10bd4 <__printf_chk@plt>
   10ff0:	mov	r2, #5
   10ff4:	ldr	r1, [pc, #276]	; 11110 <abort@plt+0x4c4>
   10ff8:	mov	r0, #0
   10ffc:	bl	10ae4 <dcgettext@plt>
   11000:	ldr	r2, [pc, #268]	; 11114 <abort@plt+0x4c8>
   11004:	cmp	r4, r5
   11008:	ldr	r3, [pc, #264]	; 11118 <abort@plt+0x4cc>
   1100c:	movne	r3, r2
   11010:	mov	r1, r0
   11014:	mov	r2, r4
   11018:	mov	r0, #1
   1101c:	bl	10bd4 <__printf_chk@plt>
   11020:	mov	r0, r6
   11024:	bl	10b98 <exit@plt>
   11028:	ldr	r5, [pc, #200]	; 110f8 <abort@plt+0x4ac>
   1102c:	mov	r4, r5
   11030:	mov	r2, #5
   11034:	ldr	r1, [pc, #224]	; 1111c <abort@plt+0x4d0>
   11038:	mov	r0, #0
   1103c:	bl	10ae4 <dcgettext@plt>
   11040:	ldr	r1, [r7]
   11044:	bl	10a6c <fputs_unlocked@plt>
   11048:	b	10fcc <abort@plt+0x380>
   1104c:	mov	r0, r4
   11050:	bl	10ae4 <dcgettext@plt>
   11054:	ldr	r3, [pc, #164]	; 11100 <abort@plt+0x4b4>
   11058:	ldr	r2, [pc, #164]	; 11104 <abort@plt+0x4b8>
   1105c:	mov	r1, r0
   11060:	mov	r0, #1
   11064:	bl	10bd4 <__printf_chk@plt>
   11068:	mov	r1, r4
   1106c:	mov	r0, #5
   11070:	bl	10c10 <setlocale@plt>
   11074:	cmp	r0, #0
   11078:	beq	11090 <abort@plt+0x444>
   1107c:	mov	r2, #3
   11080:	ldr	r1, [pc, #128]	; 11108 <abort@plt+0x4bc>
   11084:	bl	10c40 <strncmp@plt>
   11088:	cmp	r0, #0
   1108c:	bne	11028 <abort@plt+0x3dc>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #112]	; 1110c <abort@plt+0x4c0>
   11098:	mov	r0, #0
   1109c:	bl	10ae4 <dcgettext@plt>
   110a0:	ldr	r3, [pc, #80]	; 110f8 <abort@plt+0x4ac>
   110a4:	ldr	r2, [pc, #84]	; 11100 <abort@plt+0x4b4>
   110a8:	mov	r4, r3
   110ac:	mov	r1, r0
   110b0:	mov	r0, #1
   110b4:	bl	10bd4 <__printf_chk@plt>
   110b8:	ldr	r1, [pc, #80]	; 11110 <abort@plt+0x4c4>
   110bc:	mov	r2, #5
   110c0:	mov	r0, #0
   110c4:	bl	10ae4 <dcgettext@plt>
   110c8:	ldr	r3, [pc, #72]	; 11118 <abort@plt+0x4cc>
   110cc:	mov	r1, r0
   110d0:	b	11014 <abort@plt+0x3c8>
   110d4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   110d8:	andeq	r5, r2, r4, lsr #2
   110dc:	andeq	r5, r2, r4, lsl r1
   110e0:	muleq	r1, r4, r5
   110e4:	andeq	r4, r1, r4, lsl r6
   110e8:	andeq	r4, r1, r0, asr #12
   110ec:	andeq	r4, r1, r8, asr #12
   110f0:	andeq	r4, r1, r8, ror r6
   110f4:			; <UNDEFINED> instruction: 0x000146b0
   110f8:	andeq	r4, r1, ip, asr #11
   110fc:	andeq	r4, r1, r0, ror r7
   11100:	andeq	r4, r1, r8, lsl #15
   11104:			; <UNDEFINED> instruction: 0x000147b0
   11108:	andeq	r4, r1, r0, asr #15
   1110c:	andeq	r4, r1, ip, lsl #16
   11110:	andeq	r4, r1, r8, lsr #16
   11114:	andeq	r4, r1, r4, asr #12
   11118:	andeq	r4, r1, r0, lsr #17
   1111c:	andeq	r4, r1, r4, asr #15
   11120:	ldr	r3, [pc, #4]	; 1112c <abort@plt+0x4e0>
   11124:	str	r0, [r3]
   11128:	bx	lr
   1112c:	andeq	r5, r2, ip, lsl r1
   11130:	ldr	r3, [pc, #4]	; 1113c <abort@plt+0x4f0>
   11134:	strb	r0, [r3, #4]
   11138:	bx	lr
   1113c:	andeq	r5, r2, ip, lsl r1
   11140:	ldr	r3, [pc, #192]	; 11208 <abort@plt+0x5bc>
   11144:	push	{r4, r5, r6, lr}
   11148:	sub	sp, sp, #8
   1114c:	ldr	r0, [r3]
   11150:	bl	13c74 <abort@plt+0x3028>
   11154:	cmp	r0, #0
   11158:	beq	1117c <abort@plt+0x530>
   1115c:	ldr	r4, [pc, #168]	; 1120c <abort@plt+0x5c0>
   11160:	ldrb	r3, [r4, #4]
   11164:	cmp	r3, #0
   11168:	beq	11198 <abort@plt+0x54c>
   1116c:	bl	10bb0 <__errno_location@plt>
   11170:	ldr	r3, [r0]
   11174:	cmp	r3, #32
   11178:	bne	11198 <abort@plt+0x54c>
   1117c:	ldr	r3, [pc, #140]	; 11210 <abort@plt+0x5c4>
   11180:	ldr	r0, [r3]
   11184:	bl	13c74 <abort@plt+0x3028>
   11188:	cmp	r0, #0
   1118c:	bne	111e0 <abort@plt+0x594>
   11190:	add	sp, sp, #8
   11194:	pop	{r4, r5, r6, pc}
   11198:	mov	r2, #5
   1119c:	ldr	r1, [pc, #112]	; 11214 <abort@plt+0x5c8>
   111a0:	mov	r0, #0
   111a4:	bl	10ae4 <dcgettext@plt>
   111a8:	ldr	r4, [r4]
   111ac:	cmp	r4, #0
   111b0:	mov	r5, r0
   111b4:	beq	111ec <abort@plt+0x5a0>
   111b8:	bl	10bb0 <__errno_location@plt>
   111bc:	ldr	r6, [r0]
   111c0:	mov	r0, r4
   111c4:	bl	12f4c <abort@plt+0x2300>
   111c8:	mov	r1, r6
   111cc:	str	r5, [sp]
   111d0:	ldr	r2, [pc, #64]	; 11218 <abort@plt+0x5cc>
   111d4:	mov	r3, r0
   111d8:	mov	r0, #0
   111dc:	bl	10b50 <error@plt>
   111e0:	ldr	r3, [pc, #52]	; 1121c <abort@plt+0x5d0>
   111e4:	ldr	r0, [r3]
   111e8:	bl	10aa8 <_exit@plt>
   111ec:	bl	10bb0 <__errno_location@plt>
   111f0:	mov	r3, r5
   111f4:	ldr	r2, [pc, #36]	; 11220 <abort@plt+0x5d4>
   111f8:	ldr	r1, [r0]
   111fc:	mov	r0, r4
   11200:	bl	10b50 <error@plt>
   11204:	b	111e0 <abort@plt+0x594>
   11208:	andeq	r5, r2, r4, lsl r1
   1120c:	andeq	r5, r2, ip, lsl r1
   11210:	andeq	r5, r2, r0, lsl r1
   11214:	andeq	r4, r1, r4, lsl r9
   11218:	andeq	r4, r1, r0, lsr #18
   1121c:	andeq	r5, r2, r4, asr #1
   11220:	andeq	r4, r1, r4, lsr #18
   11224:	push	{r4, r5, r6, lr}
   11228:	subs	r4, r0, #0
   1122c:	beq	112a0 <abort@plt+0x654>
   11230:	mov	r1, #47	; 0x2f
   11234:	bl	10c1c <strrchr@plt>
   11238:	subs	r5, r0, #0
   1123c:	beq	1128c <abort@plt+0x640>
   11240:	add	r6, r5, #1
   11244:	sub	r3, r6, r4
   11248:	cmp	r3, #6
   1124c:	ble	1128c <abort@plt+0x640>
   11250:	mov	r2, #7
   11254:	ldr	r1, [pc, #96]	; 112bc <abort@plt+0x670>
   11258:	sub	r0, r5, #6
   1125c:	bl	10c40 <strncmp@plt>
   11260:	cmp	r0, #0
   11264:	bne	1128c <abort@plt+0x640>
   11268:	mov	r2, #3
   1126c:	ldr	r1, [pc, #76]	; 112c0 <abort@plt+0x674>
   11270:	mov	r0, r6
   11274:	bl	10c40 <strncmp@plt>
   11278:	cmp	r0, #0
   1127c:	movne	r4, r6
   11280:	ldreq	r3, [pc, #60]	; 112c4 <abort@plt+0x678>
   11284:	addeq	r4, r5, #4
   11288:	streq	r4, [r3]
   1128c:	ldr	r2, [pc, #52]	; 112c8 <abort@plt+0x67c>
   11290:	ldr	r3, [pc, #52]	; 112cc <abort@plt+0x680>
   11294:	str	r4, [r2]
   11298:	str	r4, [r3]
   1129c:	pop	{r4, r5, r6, pc}
   112a0:	ldr	r3, [pc, #40]	; 112d0 <abort@plt+0x684>
   112a4:	mov	r2, #55	; 0x37
   112a8:	mov	r1, #1
   112ac:	ldr	r3, [r3]
   112b0:	ldr	r0, [pc, #28]	; 112d4 <abort@plt+0x688>
   112b4:	bl	10b14 <fwrite@plt>
   112b8:	bl	10c4c <abort@plt>
   112bc:	andeq	r4, r1, r0, ror #18
   112c0:	andeq	r4, r1, r8, ror #18
   112c4:	andeq	r5, r2, r8, lsl #2
   112c8:	andeq	r5, r2, r4, lsr #2
   112cc:	andeq	r5, r2, ip, lsl #2
   112d0:	andeq	r5, r2, r0, lsl r1
   112d4:	andeq	r4, r1, r8, lsr #18
   112d8:	push	{r4, r5, r6, lr}
   112dc:	mov	r2, #48	; 0x30
   112e0:	mov	r4, r1
   112e4:	mov	r1, #0
   112e8:	mov	r5, r0
   112ec:	bl	10bc8 <memset@plt>
   112f0:	cmp	r4, #10
   112f4:	beq	11304 <abort@plt+0x6b8>
   112f8:	str	r4, [r5]
   112fc:	mov	r0, r5
   11300:	pop	{r4, r5, r6, pc}
   11304:	bl	10c4c <abort@plt>
   11308:	push	{r4, r5, r6, lr}
   1130c:	mov	r4, r0
   11310:	mov	r5, r1
   11314:	bl	13ee8 <abort@plt+0x329c>
   11318:	ldrb	r3, [r0]
   1131c:	bic	r3, r3, #32
   11320:	cmp	r3, #85	; 0x55
   11324:	bne	11384 <abort@plt+0x738>
   11328:	ldrb	r3, [r0, #1]
   1132c:	bic	r3, r3, #32
   11330:	cmp	r3, #84	; 0x54
   11334:	bne	113c0 <abort@plt+0x774>
   11338:	ldrb	r3, [r0, #2]
   1133c:	bic	r3, r3, #32
   11340:	cmp	r3, #70	; 0x46
   11344:	bne	113c0 <abort@plt+0x774>
   11348:	ldrb	r3, [r0, #3]
   1134c:	cmp	r3, #45	; 0x2d
   11350:	bne	113c0 <abort@plt+0x774>
   11354:	ldrb	r3, [r0, #4]
   11358:	cmp	r3, #56	; 0x38
   1135c:	bne	113c0 <abort@plt+0x774>
   11360:	ldrb	r3, [r0, #5]
   11364:	cmp	r3, #0
   11368:	bne	113c0 <abort@plt+0x774>
   1136c:	ldrb	r2, [r4]
   11370:	ldr	r3, [pc, #152]	; 11410 <abort@plt+0x7c4>
   11374:	ldr	r0, [pc, #152]	; 11414 <abort@plt+0x7c8>
   11378:	cmp	r2, #96	; 0x60
   1137c:	movne	r0, r3
   11380:	pop	{r4, r5, r6, pc}
   11384:	cmp	r3, #71	; 0x47
   11388:	bne	113c0 <abort@plt+0x774>
   1138c:	ldrb	r3, [r0, #1]
   11390:	bic	r3, r3, #32
   11394:	cmp	r3, #66	; 0x42
   11398:	bne	113c0 <abort@plt+0x774>
   1139c:	ldrb	r3, [r0, #2]
   113a0:	cmp	r3, #49	; 0x31
   113a4:	bne	113c0 <abort@plt+0x774>
   113a8:	ldrb	r3, [r0, #3]
   113ac:	cmp	r3, #56	; 0x38
   113b0:	bne	113c0 <abort@plt+0x774>
   113b4:	ldrb	r3, [r0, #4]
   113b8:	cmp	r3, #48	; 0x30
   113bc:	beq	113d4 <abort@plt+0x788>
   113c0:	ldr	r3, [pc, #80]	; 11418 <abort@plt+0x7cc>
   113c4:	cmp	r5, #9
   113c8:	ldr	r0, [pc, #76]	; 1141c <abort@plt+0x7d0>
   113cc:	movne	r0, r3
   113d0:	pop	{r4, r5, r6, pc}
   113d4:	ldrb	r3, [r0, #5]
   113d8:	cmp	r3, #51	; 0x33
   113dc:	bne	113c0 <abort@plt+0x774>
   113e0:	ldrb	r3, [r0, #6]
   113e4:	cmp	r3, #48	; 0x30
   113e8:	bne	113c0 <abort@plt+0x774>
   113ec:	ldrb	r3, [r0, #7]
   113f0:	cmp	r3, #0
   113f4:	bne	113c0 <abort@plt+0x774>
   113f8:	ldrb	r2, [r4]
   113fc:	ldr	r3, [pc, #28]	; 11420 <abort@plt+0x7d4>
   11400:	ldr	r0, [pc, #28]	; 11424 <abort@plt+0x7d8>
   11404:	cmp	r2, #96	; 0x60
   11408:	movne	r0, r3
   1140c:	pop	{r4, r5, r6, pc}
   11410:	andeq	r4, r1, r4, asr #19
   11414:	andeq	r4, r1, r0, asr #19
   11418:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1141c:	ldrdeq	r4, [r1], -r0
   11420:	andeq	r4, r1, ip, asr #19
   11424:	andeq	r4, r1, r8, asr #19
   11428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1142c:	sub	sp, sp, #116	; 0x74
   11430:	mov	sl, r0
   11434:	str	r3, [sp, #24]
   11438:	mov	r3, #1
   1143c:	mov	r8, r1
   11440:	str	r2, [sp, #56]	; 0x38
   11444:	str	r3, [sp, #36]	; 0x24
   11448:	bl	10b2c <__ctype_get_mb_cur_max@plt>
   1144c:	ldr	r3, [sp, #156]	; 0x9c
   11450:	mov	fp, r8
   11454:	mov	r2, #0
   11458:	lsr	r3, r3, #1
   1145c:	and	r3, r3, #1
   11460:	str	r2, [sp, #68]	; 0x44
   11464:	str	r3, [sp, #28]
   11468:	str	r2, [sp, #40]	; 0x28
   1146c:	str	r2, [sp, #44]	; 0x2c
   11470:	str	r2, [sp, #52]	; 0x34
   11474:	str	r2, [sp, #64]	; 0x40
   11478:	str	r2, [sp, #72]	; 0x48
   1147c:	str	sl, [sp, #32]
   11480:	str	r0, [sp, #76]	; 0x4c
   11484:	ldr	r3, [sp, #152]	; 0x98
   11488:	cmp	r3, #10
   1148c:	ldrls	pc, [pc, r3, lsl #2]
   11490:	b	12650 <abort@plt+0x1a04>
   11494:	andeq	r1, r1, r0, asr #9
   11498:	andeq	r1, r1, r8, lsr #15
   1149c:	andeq	r1, r1, ip, asr #15
   114a0:	strdeq	r1, [r1], -r0
   114a4:	andeq	r1, r1, ip, lsl r9
   114a8:	strdeq	r1, [r1], -r0
   114ac:	andeq	r1, r1, r8, asr #17
   114b0:	andeq	r1, r1, r4, lsl #16
   114b4:	andeq	r1, r1, ip, lsl r8
   114b8:	andeq	r1, r1, ip, lsl r8
   114bc:	andeq	r1, r1, ip, lsl r8
   114c0:	mov	r3, #0
   114c4:	mov	r7, r3
   114c8:	str	r3, [sp, #28]
   114cc:	ldr	r3, [sp, #44]	; 0x2c
   114d0:	mov	sl, #0
   114d4:	eor	r3, r3, #1
   114d8:	str	r3, [sp, #60]	; 0x3c
   114dc:	ldr	r3, [sp, #24]
   114e0:	cmn	r3, #1
   114e4:	beq	11a48 <abort@plt+0xdfc>
   114e8:	ldr	r3, [sp, #24]
   114ec:	subs	r5, r3, sl
   114f0:	movne	r5, #1
   114f4:	cmp	r5, #0
   114f8:	beq	11a60 <abort@plt+0xe14>
   114fc:	ldr	r3, [sp, #152]	; 0x98
   11500:	ldr	r8, [sp, #44]	; 0x2c
   11504:	cmp	r3, #2
   11508:	moveq	r8, #0
   1150c:	andne	r8, r8, #1
   11510:	ldr	r3, [sp, #52]	; 0x34
   11514:	adds	r9, r3, #0
   11518:	movne	r9, #1
   1151c:	ands	r6, r9, r8
   11520:	beq	11ec8 <abort@plt+0x127c>
   11524:	ldr	r2, [sp, #52]	; 0x34
   11528:	ldr	r1, [sp, #24]
   1152c:	cmp	r2, #1
   11530:	mov	r3, r2
   11534:	movls	r3, #0
   11538:	movhi	r3, #1
   1153c:	cmn	r1, #1
   11540:	movne	r3, #0
   11544:	cmp	r3, #0
   11548:	add	r4, sl, r2
   1154c:	beq	1155c <abort@plt+0x910>
   11550:	ldr	r0, [sp, #56]	; 0x38
   11554:	bl	10ba4 <strlen@plt>
   11558:	str	r0, [sp, #24]
   1155c:	ldr	r3, [sp, #24]
   11560:	cmp	r3, r4
   11564:	ldr	r3, [sp, #56]	; 0x38
   11568:	add	r3, r3, sl
   1156c:	str	r3, [sp, #48]	; 0x30
   11570:	bcc	11ed4 <abort@plt+0x1288>
   11574:	mov	r0, r3
   11578:	ldr	r2, [sp, #52]	; 0x34
   1157c:	ldr	r1, [sp, #64]	; 0x40
   11580:	bl	10acc <memcmp@plt>
   11584:	cmp	r0, #0
   11588:	bne	11ed4 <abort@plt+0x1288>
   1158c:	ldr	r3, [sp, #28]
   11590:	cmp	r3, #0
   11594:	bne	12750 <abort@plt+0x1b04>
   11598:	ldr	r3, [sp, #48]	; 0x30
   1159c:	ldrb	r4, [r3]
   115a0:	cmp	r4, #126	; 0x7e
   115a4:	ldrls	pc, [pc, r4, lsl #2]
   115a8:	b	11e68 <abort@plt+0x121c>
   115ac:	andeq	r1, r1, ip, lsl #25
   115b0:	andeq	r1, r1, r8, ror #28
   115b4:	andeq	r1, r1, r8, ror #28
   115b8:	andeq	r1, r1, r8, ror #28
   115bc:	andeq	r1, r1, r8, ror #28
   115c0:	andeq	r1, r1, r8, ror #28
   115c4:	andeq	r1, r1, r8, ror #28
   115c8:	andeq	r1, r1, r0, ror ip
   115cc:	andeq	r1, r1, r4, asr ip
   115d0:	andeq	r1, r1, r0, asr lr
   115d4:			; <UNDEFINED> instruction: 0x00011bb4
   115d8:	muleq	r1, r8, fp
   115dc:	andeq	r1, r1, ip, lsr #28
   115e0:	andeq	r1, r1, r8, lsl #28
   115e4:	andeq	r1, r1, r8, ror #28
   115e8:	andeq	r1, r1, r8, ror #28
   115ec:	andeq	r1, r1, r8, ror #28
   115f0:	andeq	r1, r1, r8, ror #28
   115f4:	andeq	r1, r1, r8, ror #28
   115f8:	andeq	r1, r1, r8, ror #28
   115fc:	andeq	r1, r1, r8, ror #28
   11600:	andeq	r1, r1, r8, ror #28
   11604:	andeq	r1, r1, r8, ror #28
   11608:	andeq	r1, r1, r8, ror #28
   1160c:	andeq	r1, r1, r8, ror #28
   11610:	andeq	r1, r1, r8, ror #28
   11614:	andeq	r1, r1, r8, ror #28
   11618:	andeq	r1, r1, r8, ror #28
   1161c:	andeq	r1, r1, r8, ror #28
   11620:	andeq	r1, r1, r8, ror #28
   11624:	andeq	r1, r1, r8, ror #28
   11628:	andeq	r1, r1, r8, ror #28
   1162c:	andeq	r1, r1, r8, asr #28
   11630:	andeq	r1, r1, ip, ror sp
   11634:	andeq	r1, r1, ip, ror sp
   11638:	andeq	r1, r1, ip, lsl #19
   1163c:	andeq	r1, r1, ip, ror sp
   11640:	andeq	r1, r1, r4, lsl lr
   11644:	andeq	r1, r1, ip, ror sp
   11648:	andeq	r1, r1, r8, ror #27
   1164c:	andeq	r1, r1, ip, ror sp
   11650:	andeq	r1, r1, ip, ror sp
   11654:	andeq	r1, r1, ip, ror sp
   11658:	andeq	r1, r1, r4, lsl lr
   1165c:	andeq	r1, r1, r4, lsl lr
   11660:	andeq	r1, r1, r4, lsl lr
   11664:	andeq	r1, r1, r4, lsl lr
   11668:	andeq	r1, r1, r4, lsl lr
   1166c:	andeq	r1, r1, r4, lsl lr
   11670:	andeq	r1, r1, r4, lsl lr
   11674:	andeq	r1, r1, r4, lsl lr
   11678:	andeq	r1, r1, r4, lsl lr
   1167c:	andeq	r1, r1, r4, lsl lr
   11680:	andeq	r1, r1, r4, lsl lr
   11684:	andeq	r1, r1, r4, lsl lr
   11688:	andeq	r1, r1, r4, lsl lr
   1168c:	andeq	r1, r1, r4, lsl lr
   11690:	andeq	r1, r1, r4, lsl lr
   11694:	andeq	r1, r1, r4, lsl lr
   11698:	andeq	r1, r1, ip, ror sp
   1169c:	andeq	r1, r1, ip, ror sp
   116a0:	andeq	r1, r1, ip, ror sp
   116a4:	andeq	r1, r1, ip, ror sp
   116a8:			; <UNDEFINED> instruction: 0x00011db8
   116ac:	andeq	r1, r1, r8, ror #28
   116b0:	andeq	r1, r1, r4, lsl lr
   116b4:	andeq	r1, r1, r4, lsl lr
   116b8:	andeq	r1, r1, r4, lsl lr
   116bc:	andeq	r1, r1, r4, lsl lr
   116c0:	andeq	r1, r1, r4, lsl lr
   116c4:	andeq	r1, r1, r4, lsl lr
   116c8:	andeq	r1, r1, r4, lsl lr
   116cc:	andeq	r1, r1, r4, lsl lr
   116d0:	andeq	r1, r1, r4, lsl lr
   116d4:	andeq	r1, r1, r4, lsl lr
   116d8:	andeq	r1, r1, r4, lsl lr
   116dc:	andeq	r1, r1, r4, lsl lr
   116e0:	andeq	r1, r1, r4, lsl lr
   116e4:	andeq	r1, r1, r4, lsl lr
   116e8:	andeq	r1, r1, r4, lsl lr
   116ec:	andeq	r1, r1, r4, lsl lr
   116f0:	andeq	r1, r1, r4, lsl lr
   116f4:	andeq	r1, r1, r4, lsl lr
   116f8:	andeq	r1, r1, r4, lsl lr
   116fc:	andeq	r1, r1, r4, lsl lr
   11700:	andeq	r1, r1, r4, lsl lr
   11704:	andeq	r1, r1, r4, lsl lr
   11708:	andeq	r1, r1, r4, lsl lr
   1170c:	andeq	r1, r1, r4, lsl lr
   11710:	andeq	r1, r1, r4, lsl lr
   11714:	andeq	r1, r1, r4, lsl lr
   11718:	andeq	r1, r1, ip, ror sp
   1171c:	ldrdeq	r1, [r1], -r8
   11720:	andeq	r1, r1, r4, lsl lr
   11724:	andeq	r1, r1, ip, ror sp
   11728:	andeq	r1, r1, r4, lsl lr
   1172c:	andeq	r1, r1, ip, ror sp
   11730:	andeq	r1, r1, r4, lsl lr
   11734:	andeq	r1, r1, r4, lsl lr
   11738:	andeq	r1, r1, r4, lsl lr
   1173c:	andeq	r1, r1, r4, lsl lr
   11740:	andeq	r1, r1, r4, lsl lr
   11744:	andeq	r1, r1, r4, lsl lr
   11748:	andeq	r1, r1, r4, lsl lr
   1174c:	andeq	r1, r1, r4, lsl lr
   11750:	andeq	r1, r1, r4, lsl lr
   11754:	andeq	r1, r1, r4, lsl lr
   11758:	andeq	r1, r1, r4, lsl lr
   1175c:	andeq	r1, r1, r4, lsl lr
   11760:	andeq	r1, r1, r4, lsl lr
   11764:	andeq	r1, r1, r4, lsl lr
   11768:	andeq	r1, r1, r4, lsl lr
   1176c:	andeq	r1, r1, r4, lsl lr
   11770:	andeq	r1, r1, r4, lsl lr
   11774:	andeq	r1, r1, r4, lsl lr
   11778:	andeq	r1, r1, r4, lsl lr
   1177c:	andeq	r1, r1, r4, lsl lr
   11780:	andeq	r1, r1, r4, lsl lr
   11784:	andeq	r1, r1, r4, lsl lr
   11788:	andeq	r1, r1, r4, lsl lr
   1178c:	andeq	r1, r1, r4, lsl lr
   11790:	andeq	r1, r1, r4, lsl lr
   11794:	andeq	r1, r1, r4, lsl lr
   11798:	andeq	r1, r1, ip, ror #18
   1179c:	andeq	r1, r1, ip, ror sp
   117a0:	andeq	r1, r1, ip, ror #18
   117a4:	andeq	r1, r1, ip, lsl #19
   117a8:	mov	r3, #1
   117ac:	str	r3, [sp, #28]
   117b0:	str	r3, [sp, #52]	; 0x34
   117b4:	ldr	r3, [pc, #4000]	; 1275c <abort@plt+0x1b10>
   117b8:	mov	r7, #0
   117bc:	str	r3, [sp, #64]	; 0x40
   117c0:	mov	r3, #2
   117c4:	str	r3, [sp, #152]	; 0x98
   117c8:	b	114cc <abort@plt+0x880>
   117cc:	ldr	r3, [sp, #28]
   117d0:	cmp	r3, #0
   117d4:	beq	11930 <abort@plt+0xce4>
   117d8:	mov	r3, #1
   117dc:	str	r3, [sp, #52]	; 0x34
   117e0:	ldr	r3, [pc, #3956]	; 1275c <abort@plt+0x1b10>
   117e4:	mov	r7, #0
   117e8:	str	r3, [sp, #64]	; 0x40
   117ec:	b	114cc <abort@plt+0x880>
   117f0:	mov	r3, #1
   117f4:	str	r3, [sp, #44]	; 0x2c
   117f8:	str	r3, [sp, #52]	; 0x34
   117fc:	str	r3, [sp, #28]
   11800:	b	117b4 <abort@plt+0xb68>
   11804:	mov	r3, #0
   11808:	str	r3, [sp, #28]
   1180c:	mov	r3, #1
   11810:	str	r3, [sp, #44]	; 0x2c
   11814:	mov	r7, #0
   11818:	b	114cc <abort@plt+0x880>
   1181c:	ldr	r3, [sp, #152]	; 0x98
   11820:	cmp	r3, #10
   11824:	beq	11868 <abort@plt+0xc1c>
   11828:	mov	r2, #5
   1182c:	ldr	r1, [pc, #3884]	; 12760 <abort@plt+0x1b14>
   11830:	mov	r0, #0
   11834:	bl	10ae4 <dcgettext@plt>
   11838:	ldr	r2, [pc, #3872]	; 12760 <abort@plt+0x1b14>
   1183c:	cmp	r0, r2
   11840:	str	r0, [sp, #164]	; 0xa4
   11844:	beq	1284c <abort@plt+0x1c00>
   11848:	mov	r2, #5
   1184c:	ldr	r1, [pc, #3848]	; 1275c <abort@plt+0x1b10>
   11850:	mov	r0, #0
   11854:	bl	10ae4 <dcgettext@plt>
   11858:	ldr	r2, [pc, #3836]	; 1275c <abort@plt+0x1b10>
   1185c:	cmp	r0, r2
   11860:	str	r0, [sp, #168]	; 0xa8
   11864:	beq	1283c <abort@plt+0x1bf0>
   11868:	ldr	r7, [sp, #28]
   1186c:	cmp	r7, #0
   11870:	movne	r7, #0
   11874:	bne	118a8 <abort@plt+0xc5c>
   11878:	ldr	r3, [sp, #164]	; 0xa4
   1187c:	ldrb	r3, [r3]
   11880:	cmp	r3, #0
   11884:	beq	1285c <abort@plt+0x1c10>
   11888:	ldr	r2, [sp, #164]	; 0xa4
   1188c:	ldr	r1, [sp, #32]
   11890:	cmp	fp, r7
   11894:	strbhi	r3, [r1, r7]
   11898:	ldrb	r3, [r2, #1]!
   1189c:	add	r7, r7, #1
   118a0:	cmp	r3, #0
   118a4:	bne	11890 <abort@plt+0xc44>
   118a8:	ldr	r0, [sp, #168]	; 0xa8
   118ac:	bl	10ba4 <strlen@plt>
   118b0:	ldr	r3, [sp, #168]	; 0xa8
   118b4:	str	r3, [sp, #64]	; 0x40
   118b8:	mov	r3, #1
   118bc:	str	r3, [sp, #44]	; 0x2c
   118c0:	str	r0, [sp, #52]	; 0x34
   118c4:	b	114cc <abort@plt+0x880>
   118c8:	mov	r3, #1
   118cc:	str	r3, [sp, #44]	; 0x2c
   118d0:	str	r3, [sp, #52]	; 0x34
   118d4:	str	r3, [sp, #28]
   118d8:	ldr	r3, [pc, #3716]	; 12764 <abort@plt+0x1b18>
   118dc:	mov	r7, #0
   118e0:	str	r3, [sp, #64]	; 0x40
   118e4:	mov	r3, #5
   118e8:	str	r3, [sp, #152]	; 0x98
   118ec:	b	114cc <abort@plt+0x880>
   118f0:	ldr	r3, [sp, #28]
   118f4:	cmp	r3, #0
   118f8:	beq	125f8 <abort@plt+0x19ac>
   118fc:	ldr	r3, [sp, #28]
   11900:	mov	r7, #0
   11904:	str	r3, [sp, #44]	; 0x2c
   11908:	mov	r3, #1
   1190c:	str	r3, [sp, #52]	; 0x34
   11910:	ldr	r3, [pc, #3660]	; 12764 <abort@plt+0x1b18>
   11914:	str	r3, [sp, #64]	; 0x40
   11918:	b	114cc <abort@plt+0x880>
   1191c:	ldr	r3, [sp, #28]
   11920:	cmp	r3, #0
   11924:	mov	r3, #1
   11928:	streq	r3, [sp, #44]	; 0x2c
   1192c:	bne	117b0 <abort@plt+0xb64>
   11930:	cmp	fp, #0
   11934:	beq	12628 <abort@plt+0x19dc>
   11938:	ldr	r3, [sp, #32]
   1193c:	mov	r2, #39	; 0x27
   11940:	mov	r7, #1
   11944:	strb	r2, [r3]
   11948:	mov	r3, #0
   1194c:	str	r3, [sp, #28]
   11950:	mov	r3, #1
   11954:	str	r3, [sp, #52]	; 0x34
   11958:	ldr	r3, [pc, #3580]	; 1275c <abort@plt+0x1b10>
   1195c:	str	r3, [sp, #64]	; 0x40
   11960:	mov	r3, #2
   11964:	str	r3, [sp, #152]	; 0x98
   11968:	b	114cc <abort@plt+0x880>
   1196c:	ldr	r3, [sp, #24]
   11970:	cmn	r3, #1
   11974:	beq	1258c <abort@plt+0x1940>
   11978:	ldr	r3, [sp, #24]
   1197c:	subs	r3, r3, #1
   11980:	movne	r3, #1
   11984:	cmp	r3, #0
   11988:	bne	11994 <abort@plt+0xd48>
   1198c:	cmp	sl, #0
   11990:	beq	11d80 <abort@plt+0x1134>
   11994:	ldr	r3, [sp, #152]	; 0x98
   11998:	mov	r5, #0
   1199c:	sub	r2, r3, #2
   119a0:	mov	r8, r5
   119a4:	clz	r2, r2
   119a8:	lsr	r2, r2, #5
   119ac:	ldr	r3, [sp, #60]	; 0x3c
   119b0:	ldr	r1, [sp, #28]
   119b4:	orr	r3, r2, r3
   119b8:	eor	r3, r3, #1
   119bc:	orr	r3, r1, r3
   119c0:	tst	r3, #255	; 0xff
   119c4:	bne	120f0 <abort@plt+0x14a4>
   119c8:	cmp	r6, #0
   119cc:	bne	11b1c <abort@plt+0xed0>
   119d0:	ldr	r3, [sp, #40]	; 0x28
   119d4:	eor	r8, r8, #1
   119d8:	and	r8, r8, r3
   119dc:	add	sl, sl, #1
   119e0:	uxtb	r6, r8
   119e4:	cmp	r6, #0
   119e8:	beq	11a1c <abort@plt+0xdd0>
   119ec:	cmp	fp, r7
   119f0:	movhi	r2, #39	; 0x27
   119f4:	ldrhi	r3, [sp, #32]
   119f8:	strbhi	r2, [r3, r7]
   119fc:	add	r3, r7, #1
   11a00:	cmp	fp, r3
   11a04:	movhi	r1, #39	; 0x27
   11a08:	ldrhi	r2, [sp, #32]
   11a0c:	add	r7, r7, #2
   11a10:	strbhi	r1, [r2, r3]
   11a14:	mov	r3, #0
   11a18:	str	r3, [sp, #40]	; 0x28
   11a1c:	cmp	r7, fp
   11a20:	ldrcc	r3, [sp, #32]
   11a24:	strbcc	r4, [r3, r7]
   11a28:	ldr	r3, [sp, #36]	; 0x24
   11a2c:	cmp	r5, #0
   11a30:	moveq	r3, #0
   11a34:	str	r3, [sp, #36]	; 0x24
   11a38:	ldr	r3, [sp, #24]
   11a3c:	add	r7, r7, #1
   11a40:	cmn	r3, #1
   11a44:	bne	114e8 <abort@plt+0x89c>
   11a48:	ldr	r3, [sp, #56]	; 0x38
   11a4c:	ldrb	r5, [r3, sl]
   11a50:	adds	r5, r5, #0
   11a54:	movne	r5, #1
   11a58:	cmp	r5, #0
   11a5c:	bne	114fc <abort@plt+0x8b0>
   11a60:	ldr	r3, [sp, #152]	; 0x98
   11a64:	ldr	r1, [sp, #28]
   11a68:	sub	r3, r3, #2
   11a6c:	clz	r3, r3
   11a70:	lsr	r3, r3, #5
   11a74:	and	r9, r1, r3
   11a78:	cmp	r7, #0
   11a7c:	movne	r2, #0
   11a80:	andeq	r2, r9, #1
   11a84:	cmp	r2, #0
   11a88:	bne	12464 <abort@plt+0x1818>
   11a8c:	eor	r2, r1, #1
   11a90:	ands	r3, r3, r2
   11a94:	beq	12920 <abort@plt+0x1cd4>
   11a98:	ldr	r2, [sp, #68]	; 0x44
   11a9c:	cmp	r2, #0
   11aa0:	beq	1290c <abort@plt+0x1cc0>
   11aa4:	ldr	r3, [sp, #36]	; 0x24
   11aa8:	cmp	r3, #0
   11aac:	bne	128c4 <abort@plt+0x1c78>
   11ab0:	ldr	r2, [sp, #72]	; 0x48
   11ab4:	clz	r3, fp
   11ab8:	cmp	r2, #0
   11abc:	lsr	r3, r3, #5
   11ac0:	moveq	r3, #0
   11ac4:	cmp	r3, #0
   11ac8:	beq	12864 <abort@plt+0x1c18>
   11acc:	str	r3, [sp, #68]	; 0x44
   11ad0:	ldr	fp, [sp, #72]	; 0x48
   11ad4:	b	11484 <abort@plt+0x838>
   11ad8:	ldr	r3, [sp, #152]	; 0x98
   11adc:	cmp	r3, #2
   11ae0:	beq	12134 <abort@plt+0x14e8>
   11ae4:	ldr	r3, [sp, #44]	; 0x2c
   11ae8:	ldr	r2, [sp, #28]
   11aec:	and	r2, r3, r2
   11af0:	ands	r2, r9, r2
   11af4:	bne	12140 <abort@plt+0x14f4>
   11af8:	mov	r4, #92	; 0x5c
   11afc:	mov	r3, r4
   11b00:	ldr	r1, [sp, #44]	; 0x2c
   11b04:	cmp	r1, #0
   11b08:	moveq	r5, #0
   11b0c:	moveq	r8, r1
   11b10:	beq	119ac <abort@plt+0xd60>
   11b14:	mov	r4, r3
   11b18:	mov	r5, #0
   11b1c:	ldr	r3, [sp, #28]
   11b20:	cmp	r3, #0
   11b24:	bne	12128 <abort@plt+0x14dc>
   11b28:	ldr	r3, [sp, #40]	; 0x28
   11b2c:	eor	r9, r3, #1
   11b30:	and	r9, r9, r2
   11b34:	ands	r9, r9, #255	; 0xff
   11b38:	beq	11b7c <abort@plt+0xf30>
   11b3c:	cmp	fp, r7
   11b40:	movhi	r2, #39	; 0x27
   11b44:	ldrhi	r3, [sp, #32]
   11b48:	str	r9, [sp, #40]	; 0x28
   11b4c:	strbhi	r2, [r3, r7]
   11b50:	add	r3, r7, #1
   11b54:	cmp	fp, r3
   11b58:	movhi	r1, #36	; 0x24
   11b5c:	ldrhi	r2, [sp, #32]
   11b60:	strbhi	r1, [r2, r3]
   11b64:	add	r3, r7, #2
   11b68:	cmp	fp, r3
   11b6c:	add	r7, r7, #3
   11b70:	ldrhi	r2, [sp, #32]
   11b74:	movhi	r1, #39	; 0x27
   11b78:	strbhi	r1, [r2, r3]
   11b7c:	cmp	fp, r7
   11b80:	movhi	r2, #92	; 0x5c
   11b84:	ldrhi	r3, [sp, #32]
   11b88:	add	sl, sl, #1
   11b8c:	strbhi	r2, [r3, r7]
   11b90:	add	r7, r7, #1
   11b94:	b	11a1c <abort@plt+0xdd0>
   11b98:	ldr	r3, [sp, #152]	; 0x98
   11b9c:	mov	r4, #11
   11ba0:	sub	r2, r3, #2
   11ba4:	mov	r3, #118	; 0x76
   11ba8:	clz	r2, r2
   11bac:	lsr	r2, r2, #5
   11bb0:	b	11b00 <abort@plt+0xeb4>
   11bb4:	mov	r4, #10
   11bb8:	mov	r3, #110	; 0x6e
   11bbc:	ldr	r2, [sp, #152]	; 0x98
   11bc0:	ldr	r1, [sp, #28]
   11bc4:	sub	r2, r2, #2
   11bc8:	clz	r2, r2
   11bcc:	lsr	r2, r2, #5
   11bd0:	ands	r1, r1, r2
   11bd4:	beq	11b00 <abort@plt+0xeb4>
   11bd8:	ldr	sl, [sp, #32]
   11bdc:	mov	r8, fp
   11be0:	mov	r2, r1
   11be4:	mov	r3, #2
   11be8:	str	r3, [sp, #152]	; 0x98
   11bec:	ldr	r9, [sp, #44]	; 0x2c
   11bf0:	ldr	r3, [sp, #152]	; 0x98
   11bf4:	and	r9, r9, r2
   11bf8:	tst	r9, #255	; 0xff
   11bfc:	movne	r3, #4
   11c00:	str	r3, [sp, #152]	; 0x98
   11c04:	ldr	r3, [sp, #156]	; 0x9c
   11c08:	mov	ip, #0
   11c0c:	bic	r3, r3, #2
   11c10:	str	r3, [sp, #4]
   11c14:	ldr	r3, [sp, #168]	; 0xa8
   11c18:	ldr	r2, [sp, #56]	; 0x38
   11c1c:	str	r3, [sp, #16]
   11c20:	ldr	r3, [sp, #164]	; 0xa4
   11c24:	mov	r1, r8
   11c28:	str	r3, [sp, #12]
   11c2c:	ldr	r3, [sp, #152]	; 0x98
   11c30:	mov	r0, sl
   11c34:	str	r3, [sp]
   11c38:	str	ip, [sp, #8]
   11c3c:	ldr	r3, [sp, #24]
   11c40:	bl	11428 <abort@plt+0x7dc>
   11c44:	mov	fp, r0
   11c48:	mov	r0, fp
   11c4c:	add	sp, sp, #116	; 0x74
   11c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c54:	ldr	r3, [sp, #152]	; 0x98
   11c58:	mov	r4, #8
   11c5c:	sub	r2, r3, #2
   11c60:	mov	r3, #98	; 0x62
   11c64:	clz	r2, r2
   11c68:	lsr	r2, r2, #5
   11c6c:	b	11b00 <abort@plt+0xeb4>
   11c70:	ldr	r3, [sp, #152]	; 0x98
   11c74:	mov	r4, #7
   11c78:	sub	r2, r3, #2
   11c7c:	mov	r3, #97	; 0x61
   11c80:	clz	r2, r2
   11c84:	lsr	r2, r2, #5
   11c88:	b	11b00 <abort@plt+0xeb4>
   11c8c:	ldr	r3, [sp, #44]	; 0x2c
   11c90:	cmp	r3, #0
   11c94:	beq	12478 <abort@plt+0x182c>
   11c98:	ldr	r3, [sp, #28]
   11c9c:	cmp	r3, #0
   11ca0:	bne	12750 <abort@plt+0x1b04>
   11ca4:	ldr	r3, [sp, #152]	; 0x98
   11ca8:	sub	r2, r3, #2
   11cac:	ldr	r3, [sp, #40]	; 0x28
   11cb0:	clz	r2, r2
   11cb4:	eor	r3, r3, #1
   11cb8:	lsr	r2, r2, #5
   11cbc:	ands	r3, r2, r3
   11cc0:	moveq	r1, r7
   11cc4:	beq	11d08 <abort@plt+0x10bc>
   11cc8:	cmp	fp, r7
   11ccc:	movhi	r0, #39	; 0x27
   11cd0:	ldrhi	r1, [sp, #32]
   11cd4:	str	r3, [sp, #40]	; 0x28
   11cd8:	strbhi	r0, [r1, r7]
   11cdc:	add	r1, r7, #1
   11ce0:	cmp	fp, r1
   11ce4:	movhi	ip, #36	; 0x24
   11ce8:	ldrhi	r0, [sp, #32]
   11cec:	strbhi	ip, [r0, r1]
   11cf0:	add	r1, r7, #2
   11cf4:	cmp	fp, r1
   11cf8:	movhi	ip, #39	; 0x27
   11cfc:	ldrhi	r0, [sp, #32]
   11d00:	strbhi	ip, [r0, r1]
   11d04:	add	r1, r7, #3
   11d08:	cmp	fp, r1
   11d0c:	movhi	r0, #92	; 0x5c
   11d10:	ldrhi	r3, [sp, #32]
   11d14:	add	r7, r1, #1
   11d18:	strbhi	r0, [r3, r1]
   11d1c:	cmp	r8, #0
   11d20:	beq	12664 <abort@plt+0x1a18>
   11d24:	ldr	r0, [sp, #24]
   11d28:	add	r3, sl, #1
   11d2c:	cmp	r3, r0
   11d30:	bcs	125a0 <abort@plt+0x1954>
   11d34:	ldr	r0, [sp, #56]	; 0x38
   11d38:	ldrb	r3, [r0, r3]
   11d3c:	sub	r3, r3, #48	; 0x30
   11d40:	cmp	r3, #9
   11d44:	bhi	125a0 <abort@plt+0x1954>
   11d48:	cmp	fp, r7
   11d4c:	movhi	r3, #48	; 0x30
   11d50:	ldrhi	r0, [sp, #32]
   11d54:	ldr	r5, [sp, #28]
   11d58:	mov	r4, #48	; 0x30
   11d5c:	strbhi	r3, [r0, r7]
   11d60:	add	r3, r1, #2
   11d64:	cmp	fp, r3
   11d68:	movhi	r0, #48	; 0x30
   11d6c:	ldrhi	ip, [sp, #32]
   11d70:	add	r7, r1, #3
   11d74:	strbhi	r0, [ip, r3]
   11d78:	b	119ac <abort@plt+0xd60>
   11d7c:	mov	r5, #0
   11d80:	ldr	r3, [sp, #152]	; 0x98
   11d84:	sub	r2, r3, #2
   11d88:	ldr	r3, [sp, #28]
   11d8c:	clz	r2, r2
   11d90:	lsr	r2, r2, #5
   11d94:	ands	r8, r3, r2
   11d98:	beq	119ac <abort@plt+0xd60>
   11d9c:	mov	r3, r8
   11da0:	mov	r2, r3
   11da4:	mov	r3, #2
   11da8:	ldr	sl, [sp, #32]
   11dac:	mov	r8, fp
   11db0:	str	r3, [sp, #152]	; 0x98
   11db4:	b	11bec <abort@plt+0xfa0>
   11db8:	ldr	r3, [sp, #152]	; 0x98
   11dbc:	cmp	r3, #2
   11dc0:	beq	124e4 <abort@plt+0x1898>
   11dc4:	cmp	r3, #5
   11dc8:	beq	124a4 <abort@plt+0x1858>
   11dcc:	mov	r5, #0
   11dd0:	sub	r2, r3, #2
   11dd4:	mov	r8, r5
   11dd8:	clz	r2, r2
   11ddc:	mov	r4, #63	; 0x3f
   11de0:	lsr	r2, r2, #5
   11de4:	b	119ac <abort@plt+0xd60>
   11de8:	ldr	r3, [sp, #152]	; 0x98
   11dec:	cmp	r3, #2
   11df0:	beq	12504 <abort@plt+0x18b8>
   11df4:	mov	r2, #0
   11df8:	str	r5, [sp, #68]	; 0x44
   11dfc:	mov	r8, r2
   11e00:	mov	r4, #39	; 0x27
   11e04:	b	119ac <abort@plt+0xd60>
   11e08:	mov	r4, #13
   11e0c:	mov	r3, #114	; 0x72
   11e10:	b	11bbc <abort@plt+0xf70>
   11e14:	ldr	r3, [sp, #152]	; 0x98
   11e18:	mov	r8, #0
   11e1c:	sub	r2, r3, #2
   11e20:	clz	r2, r2
   11e24:	lsr	r2, r2, #5
   11e28:	b	119ac <abort@plt+0xd60>
   11e2c:	ldr	r3, [sp, #152]	; 0x98
   11e30:	mov	r4, #12
   11e34:	sub	r2, r3, #2
   11e38:	mov	r3, #102	; 0x66
   11e3c:	clz	r2, r2
   11e40:	lsr	r2, r2, #5
   11e44:	b	11b00 <abort@plt+0xeb4>
   11e48:	mov	r5, r6
   11e4c:	b	11d80 <abort@plt+0x1134>
   11e50:	ldr	r3, [sp, #152]	; 0x98
   11e54:	sub	r2, r3, #2
   11e58:	mov	r3, #116	; 0x74
   11e5c:	clz	r2, r2
   11e60:	lsr	r2, r2, #5
   11e64:	b	11b00 <abort@plt+0xeb4>
   11e68:	ldr	r8, [sp, #76]	; 0x4c
   11e6c:	cmp	r8, #1
   11e70:	bne	12320 <abort@plt+0x16d4>
   11e74:	bl	10b8c <__ctype_b_loc@plt>
   11e78:	sxth	r3, r4
   11e7c:	mov	ip, r8
   11e80:	lsl	r3, r3, #1
   11e84:	ldr	r2, [r0]
   11e88:	ldrh	r3, [r2, r3]
   11e8c:	and	r3, r3, #16384	; 0x4000
   11e90:	cmp	r3, #0
   11e94:	movne	r5, #1
   11e98:	moveq	r5, #0
   11e9c:	moveq	r3, #1
   11ea0:	movne	r3, #0
   11ea4:	ldr	r2, [sp, #44]	; 0x2c
   11ea8:	and	r3, r3, r2
   11eac:	ands	r8, r3, #255	; 0xff
   11eb0:	bne	121b4 <abort@plt+0x1568>
   11eb4:	ldr	r3, [sp, #152]	; 0x98
   11eb8:	sub	r2, r3, #2
   11ebc:	clz	r2, r2
   11ec0:	lsr	r2, r2, #5
   11ec4:	b	119ac <abort@plt+0xd60>
   11ec8:	ldr	r3, [sp, #56]	; 0x38
   11ecc:	add	r3, r3, sl
   11ed0:	str	r3, [sp, #48]	; 0x30
   11ed4:	ldr	r3, [sp, #48]	; 0x30
   11ed8:	mov	r6, #0
   11edc:	ldrb	r4, [r3]
   11ee0:	cmp	r4, #126	; 0x7e
   11ee4:	ldrls	pc, [pc, r4, lsl #2]
   11ee8:	b	11e68 <abort@plt+0x121c>
   11eec:	andeq	r1, r1, ip, lsl #25
   11ef0:	andeq	r1, r1, r8, ror #28
   11ef4:	andeq	r1, r1, r8, ror #28
   11ef8:	andeq	r1, r1, r8, ror #28
   11efc:	andeq	r1, r1, r8, ror #28
   11f00:	andeq	r1, r1, r8, ror #28
   11f04:	andeq	r1, r1, r8, ror #28
   11f08:	andeq	r1, r1, r0, ror ip
   11f0c:	andeq	r1, r1, r4, asr ip
   11f10:	andeq	r2, r1, r8, ror #1
   11f14:			; <UNDEFINED> instruction: 0x00011bb4
   11f18:	muleq	r1, r8, fp
   11f1c:	andeq	r1, r1, ip, lsr #28
   11f20:	andeq	r1, r1, r8, lsl #28
   11f24:	andeq	r1, r1, r8, ror #28
   11f28:	andeq	r1, r1, r8, ror #28
   11f2c:	andeq	r1, r1, r8, ror #28
   11f30:	andeq	r1, r1, r8, ror #28
   11f34:	andeq	r1, r1, r8, ror #28
   11f38:	andeq	r1, r1, r8, ror #28
   11f3c:	andeq	r1, r1, r8, ror #28
   11f40:	andeq	r1, r1, r8, ror #28
   11f44:	andeq	r1, r1, r8, ror #28
   11f48:	andeq	r1, r1, r8, ror #28
   11f4c:	andeq	r1, r1, r8, ror #28
   11f50:	andeq	r1, r1, r8, ror #28
   11f54:	andeq	r1, r1, r8, ror #28
   11f58:	andeq	r1, r1, r8, ror #28
   11f5c:	andeq	r1, r1, r8, ror #28
   11f60:	andeq	r1, r1, r8, ror #28
   11f64:	andeq	r1, r1, r8, ror #28
   11f68:	andeq	r1, r1, r8, ror #28
   11f6c:	andeq	r1, r1, r0, lsl #27
   11f70:	andeq	r1, r1, ip, ror sp
   11f74:	andeq	r1, r1, ip, ror sp
   11f78:	andeq	r1, r1, ip, lsl #19
   11f7c:	andeq	r1, r1, ip, ror sp
   11f80:	andeq	r1, r1, r4, lsl lr
   11f84:	andeq	r1, r1, ip, ror sp
   11f88:	andeq	r1, r1, r8, ror #27
   11f8c:	andeq	r1, r1, ip, ror sp
   11f90:	andeq	r1, r1, ip, ror sp
   11f94:	andeq	r1, r1, ip, ror sp
   11f98:	andeq	r1, r1, r4, lsl lr
   11f9c:	andeq	r1, r1, r4, lsl lr
   11fa0:	andeq	r1, r1, r4, lsl lr
   11fa4:	andeq	r1, r1, r4, lsl lr
   11fa8:	andeq	r1, r1, r4, lsl lr
   11fac:	andeq	r1, r1, r4, lsl lr
   11fb0:	andeq	r1, r1, r4, lsl lr
   11fb4:	andeq	r1, r1, r4, lsl lr
   11fb8:	andeq	r1, r1, r4, lsl lr
   11fbc:	andeq	r1, r1, r4, lsl lr
   11fc0:	andeq	r1, r1, r4, lsl lr
   11fc4:	andeq	r1, r1, r4, lsl lr
   11fc8:	andeq	r1, r1, r4, lsl lr
   11fcc:	andeq	r1, r1, r4, lsl lr
   11fd0:	andeq	r1, r1, r4, lsl lr
   11fd4:	andeq	r1, r1, r4, lsl lr
   11fd8:	andeq	r1, r1, ip, ror sp
   11fdc:	andeq	r1, r1, ip, ror sp
   11fe0:	andeq	r1, r1, ip, ror sp
   11fe4:	andeq	r1, r1, ip, ror sp
   11fe8:			; <UNDEFINED> instruction: 0x00011db8
   11fec:	andeq	r1, r1, r8, ror #28
   11ff0:	andeq	r1, r1, r4, lsl lr
   11ff4:	andeq	r1, r1, r4, lsl lr
   11ff8:	andeq	r1, r1, r4, lsl lr
   11ffc:	andeq	r1, r1, r4, lsl lr
   12000:	andeq	r1, r1, r4, lsl lr
   12004:	andeq	r1, r1, r4, lsl lr
   12008:	andeq	r1, r1, r4, lsl lr
   1200c:	andeq	r1, r1, r4, lsl lr
   12010:	andeq	r1, r1, r4, lsl lr
   12014:	andeq	r1, r1, r4, lsl lr
   12018:	andeq	r1, r1, r4, lsl lr
   1201c:	andeq	r1, r1, r4, lsl lr
   12020:	andeq	r1, r1, r4, lsl lr
   12024:	andeq	r1, r1, r4, lsl lr
   12028:	andeq	r1, r1, r4, lsl lr
   1202c:	andeq	r1, r1, r4, lsl lr
   12030:	andeq	r1, r1, r4, lsl lr
   12034:	andeq	r1, r1, r4, lsl lr
   12038:	andeq	r1, r1, r4, lsl lr
   1203c:	andeq	r1, r1, r4, lsl lr
   12040:	andeq	r1, r1, r4, lsl lr
   12044:	andeq	r1, r1, r4, lsl lr
   12048:	andeq	r1, r1, r4, lsl lr
   1204c:	andeq	r1, r1, r4, lsl lr
   12050:	andeq	r1, r1, r4, lsl lr
   12054:	andeq	r1, r1, r4, lsl lr
   12058:	andeq	r1, r1, ip, ror sp
   1205c:	ldrdeq	r1, [r1], -r8
   12060:	andeq	r1, r1, r4, lsl lr
   12064:	andeq	r1, r1, ip, ror sp
   12068:	andeq	r1, r1, r4, lsl lr
   1206c:	andeq	r1, r1, ip, ror sp
   12070:	andeq	r1, r1, r4, lsl lr
   12074:	andeq	r1, r1, r4, lsl lr
   12078:	andeq	r1, r1, r4, lsl lr
   1207c:	andeq	r1, r1, r4, lsl lr
   12080:	andeq	r1, r1, r4, lsl lr
   12084:	andeq	r1, r1, r4, lsl lr
   12088:	andeq	r1, r1, r4, lsl lr
   1208c:	andeq	r1, r1, r4, lsl lr
   12090:	andeq	r1, r1, r4, lsl lr
   12094:	andeq	r1, r1, r4, lsl lr
   12098:	andeq	r1, r1, r4, lsl lr
   1209c:	andeq	r1, r1, r4, lsl lr
   120a0:	andeq	r1, r1, r4, lsl lr
   120a4:	andeq	r1, r1, r4, lsl lr
   120a8:	andeq	r1, r1, r4, lsl lr
   120ac:	andeq	r1, r1, r4, lsl lr
   120b0:	andeq	r1, r1, r4, lsl lr
   120b4:	andeq	r1, r1, r4, lsl lr
   120b8:	andeq	r1, r1, r4, lsl lr
   120bc:	andeq	r1, r1, r4, lsl lr
   120c0:	andeq	r1, r1, r4, lsl lr
   120c4:	andeq	r1, r1, r4, lsl lr
   120c8:	andeq	r1, r1, r4, lsl lr
   120cc:	andeq	r1, r1, r4, lsl lr
   120d0:	andeq	r1, r1, r4, lsl lr
   120d4:	andeq	r1, r1, r4, lsl lr
   120d8:	andeq	r1, r1, ip, ror #18
   120dc:	andeq	r1, r1, ip, ror sp
   120e0:	andeq	r1, r1, ip, ror #18
   120e4:	andeq	r1, r1, ip, lsl #19
   120e8:	mov	r3, #116	; 0x74
   120ec:	b	11bbc <abort@plt+0xf70>
   120f0:	ldr	r3, [sp, #160]	; 0xa0
   120f4:	cmp	r3, #0
   120f8:	beq	119c8 <abort@plt+0xd7c>
   120fc:	lsr	r3, r4, #5
   12100:	ldr	r0, [sp, #160]	; 0xa0
   12104:	uxtb	r3, r3
   12108:	and	r1, r4, #31
   1210c:	ldr	r0, [r0, r3, lsl #2]
   12110:	lsr	r3, r0, r1
   12114:	tst	r3, #1
   12118:	beq	119c8 <abort@plt+0xd7c>
   1211c:	ldr	r3, [sp, #28]
   12120:	cmp	r3, #0
   12124:	beq	11b28 <abort@plt+0xedc>
   12128:	ldr	sl, [sp, #32]
   1212c:	mov	r8, fp
   12130:	b	11bec <abort@plt+0xfa0>
   12134:	ldr	r3, [sp, #28]
   12138:	cmp	r3, #0
   1213c:	bne	12690 <abort@plt+0x1a44>
   12140:	add	sl, sl, #1
   12144:	ldr	r6, [sp, #40]	; 0x28
   12148:	mov	r5, #0
   1214c:	mov	r4, #92	; 0x5c
   12150:	b	119e4 <abort@plt+0xd98>
   12154:	cmp	r9, r8
   12158:	bne	123c8 <abort@plt+0x177c>
   1215c:	ldr	r0, [sp, #100]	; 0x64
   12160:	bl	10b08 <iswprint@plt>
   12164:	add	r5, r5, r4
   12168:	cmp	r0, #0
   1216c:	add	r0, sp, #104	; 0x68
   12170:	moveq	r6, #0
   12174:	bl	10ac0 <mbsinit@plt>
   12178:	cmp	r0, #0
   1217c:	beq	1235c <abort@plt+0x1710>
   12180:	mov	r2, r6
   12184:	mov	ip, r5
   12188:	eor	r5, r2, #1
   1218c:	ldr	r4, [sp, #80]	; 0x50
   12190:	ldr	r6, [sp, #84]	; 0x54
   12194:	ldr	r7, [sp, #88]	; 0x58
   12198:	uxtb	r5, r5
   1219c:	cmp	ip, #1
   121a0:	bls	126a0 <abort@plt+0x1a54>
   121a4:	ldr	r3, [sp, #44]	; 0x2c
   121a8:	and	r8, r3, r5
   121ac:	mov	r5, r2
   121b0:	uxtb	r8, r8
   121b4:	add	r2, sl, ip
   121b8:	ldr	r0, [sp, #48]	; 0x30
   121bc:	mov	r1, #0
   121c0:	str	r5, [sp, #48]	; 0x30
   121c4:	ldr	r9, [sp, #28]
   121c8:	ldr	ip, [sp, #40]	; 0x28
   121cc:	ldr	r3, [sp, #32]
   121d0:	ldr	r5, [sp, #152]	; 0x98
   121d4:	b	12290 <abort@plt+0x1644>
   121d8:	cmp	r9, #0
   121dc:	bne	125b4 <abort@plt+0x1968>
   121e0:	eor	r1, ip, #1
   121e4:	cmp	r5, #2
   121e8:	movne	r1, #0
   121ec:	andeq	r1, r1, #1
   121f0:	cmp	r1, #0
   121f4:	beq	1222c <abort@plt+0x15e0>
   121f8:	cmp	fp, r7
   121fc:	movhi	ip, #39	; 0x27
   12200:	strbhi	ip, [r3, r7]
   12204:	add	ip, r7, #1
   12208:	cmp	fp, ip
   1220c:	movhi	lr, #36	; 0x24
   12210:	strbhi	lr, [r3, ip]
   12214:	add	ip, r7, #2
   12218:	cmp	fp, ip
   1221c:	movhi	lr, #39	; 0x27
   12220:	strbhi	lr, [r3, ip]
   12224:	add	r7, r7, #3
   12228:	mov	ip, r1
   1222c:	cmp	fp, r7
   12230:	movhi	r1, #92	; 0x5c
   12234:	strbhi	r1, [r3, r7]
   12238:	add	r1, r7, #1
   1223c:	cmp	fp, r1
   12240:	lsrhi	lr, r4, #6
   12244:	addhi	lr, lr, #48	; 0x30
   12248:	strbhi	lr, [r3, r1]
   1224c:	add	lr, r7, #2
   12250:	cmp	fp, lr
   12254:	lsrhi	r1, r4, #3
   12258:	andhi	r1, r1, #7
   1225c:	addhi	r1, r1, #48	; 0x30
   12260:	add	sl, sl, #1
   12264:	strbhi	r1, [r3, lr]
   12268:	and	r4, r4, #7
   1226c:	cmp	r2, sl
   12270:	add	r4, r4, #48	; 0x30
   12274:	add	r7, r7, #3
   12278:	bls	125d8 <abort@plt+0x198c>
   1227c:	mov	r1, r8
   12280:	cmp	fp, r7
   12284:	strbhi	r4, [r3, r7]
   12288:	ldrb	r4, [r0, #1]!
   1228c:	add	r7, r7, #1
   12290:	cmp	r8, #0
   12294:	bne	121d8 <abort@plt+0x158c>
   12298:	cmp	r6, #0
   1229c:	bne	122ec <abort@plt+0x16a0>
   122a0:	eor	r6, r1, #1
   122a4:	and	r6, r6, ip
   122a8:	add	sl, sl, #1
   122ac:	cmp	r2, sl
   122b0:	uxtb	r6, r6
   122b4:	bls	12314 <abort@plt+0x16c8>
   122b8:	cmp	r6, #0
   122bc:	beq	12280 <abort@plt+0x1634>
   122c0:	cmp	fp, r7
   122c4:	movhi	ip, #39	; 0x27
   122c8:	strbhi	ip, [r3, r7]
   122cc:	add	ip, r7, #1
   122d0:	cmp	fp, ip
   122d4:	movhi	lr, #39	; 0x27
   122d8:	strbhi	lr, [r3, ip]
   122dc:	add	r7, r7, #2
   122e0:	mov	r6, r8
   122e4:	mov	ip, r8
   122e8:	b	12280 <abort@plt+0x1634>
   122ec:	cmp	fp, r7
   122f0:	eor	r6, r1, #1
   122f4:	movhi	lr, #92	; 0x5c
   122f8:	and	r6, r6, ip
   122fc:	add	sl, sl, #1
   12300:	strbhi	lr, [r3, r7]
   12304:	cmp	r2, sl
   12308:	add	r7, r7, #1
   1230c:	uxtb	r6, r6
   12310:	bhi	122b8 <abort@plt+0x166c>
   12314:	str	ip, [sp, #40]	; 0x28
   12318:	ldr	r5, [sp, #48]	; 0x30
   1231c:	b	119e4 <abort@plt+0xd98>
   12320:	ldr	r3, [sp, #24]
   12324:	cmn	r3, #1
   12328:	mov	r3, #0
   1232c:	str	r3, [sp, #104]	; 0x68
   12330:	str	r3, [sp, #108]	; 0x6c
   12334:	beq	12654 <abort@plt+0x1a08>
   12338:	mov	r2, r5
   1233c:	mov	r3, #0
   12340:	str	r7, [sp, #88]	; 0x58
   12344:	ldr	r7, [sp, #152]	; 0x98
   12348:	str	r5, [sp, #92]	; 0x5c
   1234c:	str	r6, [sp, #84]	; 0x54
   12350:	mov	r5, r3
   12354:	mov	r6, r2
   12358:	str	r4, [sp, #80]	; 0x50
   1235c:	ldr	r3, [sp, #56]	; 0x38
   12360:	add	r9, sl, r5
   12364:	add	r8, r3, r9
   12368:	ldr	r3, [sp, #24]
   1236c:	mov	r1, r8
   12370:	sub	r2, r3, r9
   12374:	add	r0, sp, #100	; 0x64
   12378:	add	r3, sp, #104	; 0x68
   1237c:	bl	13f1c <abort@plt+0x32d0>
   12380:	subs	r4, r0, #0
   12384:	beq	1272c <abort@plt+0x1ae0>
   12388:	cmn	r4, #1
   1238c:	beq	1270c <abort@plt+0x1ac0>
   12390:	cmn	r4, #2
   12394:	beq	126ac <abort@plt+0x1a60>
   12398:	ldr	r2, [sp, #28]
   1239c:	cmp	r7, #2
   123a0:	movne	r2, #0
   123a4:	andeq	r2, r2, #1
   123a8:	cmp	r2, #0
   123ac:	beq	1215c <abort@plt+0x1510>
   123b0:	cmp	r4, #1
   123b4:	beq	1215c <abort@plt+0x1510>
   123b8:	sub	r3, r4, #1
   123bc:	add	r9, r3, r9
   123c0:	ldr	r3, [sp, #56]	; 0x38
   123c4:	add	r9, r3, r9
   123c8:	ldrb	r3, [r8, #1]!
   123cc:	sub	r3, r3, #91	; 0x5b
   123d0:	cmp	r3, #33	; 0x21
   123d4:	ldrls	pc, [pc, r3, lsl #2]
   123d8:	b	12154 <abort@plt+0x1508>
   123dc:	andeq	r2, r1, r4, ror #8
   123e0:	andeq	r2, r1, r4, ror #8
   123e4:	andeq	r2, r1, r4, asr r1
   123e8:	andeq	r2, r1, r4, ror #8
   123ec:	andeq	r2, r1, r4, asr r1
   123f0:	andeq	r2, r1, r4, ror #8
   123f4:	andeq	r2, r1, r4, asr r1
   123f8:	andeq	r2, r1, r4, asr r1
   123fc:	andeq	r2, r1, r4, asr r1
   12400:	andeq	r2, r1, r4, asr r1
   12404:	andeq	r2, r1, r4, asr r1
   12408:	andeq	r2, r1, r4, asr r1
   1240c:	andeq	r2, r1, r4, asr r1
   12410:	andeq	r2, r1, r4, asr r1
   12414:	andeq	r2, r1, r4, asr r1
   12418:	andeq	r2, r1, r4, asr r1
   1241c:	andeq	r2, r1, r4, asr r1
   12420:	andeq	r2, r1, r4, asr r1
   12424:	andeq	r2, r1, r4, asr r1
   12428:	andeq	r2, r1, r4, asr r1
   1242c:	andeq	r2, r1, r4, asr r1
   12430:	andeq	r2, r1, r4, asr r1
   12434:	andeq	r2, r1, r4, asr r1
   12438:	andeq	r2, r1, r4, asr r1
   1243c:	andeq	r2, r1, r4, asr r1
   12440:	andeq	r2, r1, r4, asr r1
   12444:	andeq	r2, r1, r4, asr r1
   12448:	andeq	r2, r1, r4, asr r1
   1244c:	andeq	r2, r1, r4, asr r1
   12450:	andeq	r2, r1, r4, asr r1
   12454:	andeq	r2, r1, r4, asr r1
   12458:	andeq	r2, r1, r4, asr r1
   1245c:	andeq	r2, r1, r4, asr r1
   12460:	andeq	r2, r1, r4, ror #8
   12464:	mov	r3, #2
   12468:	ldr	sl, [sp, #32]
   1246c:	mov	r8, fp
   12470:	str	r3, [sp, #152]	; 0x98
   12474:	b	11bec <abort@plt+0xfa0>
   12478:	ldr	r3, [sp, #156]	; 0x9c
   1247c:	tst	r3, #1
   12480:	bne	125ac <abort@plt+0x1960>
   12484:	ldr	r3, [sp, #152]	; 0x98
   12488:	ldr	r4, [sp, #44]	; 0x2c
   1248c:	sub	r2, r3, #2
   12490:	mov	r5, #0
   12494:	clz	r2, r2
   12498:	mov	r8, r4
   1249c:	lsr	r2, r2, #5
   124a0:	b	119ac <abort@plt+0xd60>
   124a4:	ldr	r3, [sp, #156]	; 0x9c
   124a8:	ands	r9, r3, #4
   124ac:	beq	125e4 <abort@plt+0x1998>
   124b0:	ldr	r2, [sp, #24]
   124b4:	add	r3, sl, #2
   124b8:	cmp	r3, r2
   124bc:	bcs	124d0 <abort@plt+0x1884>
   124c0:	ldr	r2, [sp, #48]	; 0x30
   124c4:	ldrb	r4, [r2, #1]
   124c8:	cmp	r4, #63	; 0x3f
   124cc:	beq	1276c <abort@plt+0x1b20>
   124d0:	mov	r2, #0
   124d4:	mov	r8, r2
   124d8:	mov	r5, r2
   124dc:	mov	r4, #63	; 0x3f
   124e0:	b	119ac <abort@plt+0xd60>
   124e4:	ldr	r3, [sp, #28]
   124e8:	cmp	r3, #0
   124ec:	bne	12810 <abort@plt+0x1bc4>
   124f0:	mov	r2, r5
   124f4:	mov	r8, r3
   124f8:	mov	r5, #0
   124fc:	mov	r4, #63	; 0x3f
   12500:	b	119ac <abort@plt+0xd60>
   12504:	ldr	r3, [sp, #28]
   12508:	cmp	r3, #0
   1250c:	bne	12810 <abort@plt+0x1bc4>
   12510:	ldr	r2, [sp, #72]	; 0x48
   12514:	adds	r3, fp, #0
   12518:	movne	r3, #1
   1251c:	cmp	r2, #0
   12520:	movne	r3, #0
   12524:	cmp	r3, #0
   12528:	strne	fp, [sp, #72]	; 0x48
   1252c:	movne	fp, #0
   12530:	bne	1256c <abort@plt+0x1920>
   12534:	cmp	fp, r7
   12538:	movhi	r2, #39	; 0x27
   1253c:	ldrhi	r3, [sp, #32]
   12540:	strbhi	r2, [r3, r7]
   12544:	add	r3, r7, #1
   12548:	cmp	fp, r3
   1254c:	movhi	r1, #92	; 0x5c
   12550:	ldrhi	r2, [sp, #32]
   12554:	strbhi	r1, [r2, r3]
   12558:	add	r3, r7, #2
   1255c:	cmp	fp, r3
   12560:	movhi	r1, #39	; 0x27
   12564:	ldrhi	r2, [sp, #32]
   12568:	strbhi	r1, [r2, r3]
   1256c:	ldr	r3, [sp, #28]
   12570:	add	r7, r7, #3
   12574:	mov	r2, r5
   12578:	mov	r8, r3
   1257c:	str	r5, [sp, #68]	; 0x44
   12580:	str	r3, [sp, #40]	; 0x28
   12584:	mov	r4, #39	; 0x27
   12588:	b	119ac <abort@plt+0xd60>
   1258c:	ldr	r3, [sp, #56]	; 0x38
   12590:	ldrb	r3, [r3, #1]
   12594:	adds	r3, r3, #0
   12598:	movne	r3, #1
   1259c:	b	11984 <abort@plt+0xd38>
   125a0:	ldr	r5, [sp, #28]
   125a4:	mov	r4, #48	; 0x30
   125a8:	b	119ac <abort@plt+0xd60>
   125ac:	add	sl, sl, #1
   125b0:	b	114dc <abort@plt+0x890>
   125b4:	mov	sl, r3
   125b8:	ldr	r3, [sp, #28]
   125bc:	mov	r8, fp
   125c0:	str	r3, [sp, #44]	; 0x2c
   125c4:	ldr	r3, [sp, #152]	; 0x98
   125c8:	sub	r2, r3, #2
   125cc:	clz	r2, r2
   125d0:	lsr	r2, r2, #5
   125d4:	b	11bec <abort@plt+0xfa0>
   125d8:	str	ip, [sp, #40]	; 0x28
   125dc:	ldr	r5, [sp, #48]	; 0x30
   125e0:	b	11a1c <abort@plt+0xdd0>
   125e4:	mov	r2, r9
   125e8:	mov	r8, r9
   125ec:	mov	r5, #0
   125f0:	mov	r4, #63	; 0x3f
   125f4:	b	119ac <abort@plt+0xd60>
   125f8:	cmp	fp, #0
   125fc:	beq	12674 <abort@plt+0x1a28>
   12600:	ldr	r1, [sp, #32]
   12604:	mov	r3, #34	; 0x22
   12608:	mov	r2, #1
   1260c:	strb	r3, [r1]
   12610:	ldr	r3, [pc, #332]	; 12764 <abort@plt+0x1b18>
   12614:	str	r2, [sp, #52]	; 0x34
   12618:	mov	r7, r2
   1261c:	str	r2, [sp, #44]	; 0x2c
   12620:	str	r3, [sp, #64]	; 0x40
   12624:	b	114cc <abort@plt+0x880>
   12628:	ldr	r3, [pc, #300]	; 1275c <abort@plt+0x1b10>
   1262c:	str	r3, [sp, #64]	; 0x40
   12630:	mov	r3, #0
   12634:	str	r3, [sp, #28]
   12638:	mov	r3, #1
   1263c:	str	r3, [sp, #52]	; 0x34
   12640:	mov	r7, r3
   12644:	mov	r3, #2
   12648:	str	r3, [sp, #152]	; 0x98
   1264c:	b	114cc <abort@plt+0x880>
   12650:	bl	10c4c <abort@plt>
   12654:	ldr	r0, [sp, #56]	; 0x38
   12658:	bl	10ba4 <strlen@plt>
   1265c:	str	r0, [sp, #24]
   12660:	b	12338 <abort@plt+0x16ec>
   12664:	mov	r5, r8
   12668:	mov	r4, #48	; 0x30
   1266c:	ldr	r8, [sp, #44]	; 0x2c
   12670:	b	119ac <abort@plt+0xd60>
   12674:	mov	r3, #1
   12678:	str	r3, [sp, #52]	; 0x34
   1267c:	mov	r7, r3
   12680:	str	r3, [sp, #44]	; 0x2c
   12684:	ldr	r3, [pc, #216]	; 12764 <abort@plt+0x1b18>
   12688:	str	r3, [sp, #64]	; 0x40
   1268c:	b	114cc <abort@plt+0x880>
   12690:	ldr	sl, [sp, #32]
   12694:	mov	r8, fp
   12698:	mov	r2, r3
   1269c:	b	11bec <abort@plt+0xfa0>
   126a0:	mov	r3, r5
   126a4:	mov	r5, r2
   126a8:	b	11ea4 <abort@plt+0x1258>
   126ac:	ldr	r1, [sp, #24]
   126b0:	mov	r2, r5
   126b4:	cmp	r1, r9
   126b8:	mov	ip, r5
   126bc:	ldr	r4, [sp, #80]	; 0x50
   126c0:	ldr	r5, [sp, #92]	; 0x5c
   126c4:	ldr	r6, [sp, #84]	; 0x54
   126c8:	ldr	r7, [sp, #88]	; 0x58
   126cc:	bls	12700 <abort@plt+0x1ab4>
   126d0:	ldrb	r3, [r8]
   126d4:	cmp	r3, #0
   126d8:	bne	126ec <abort@plt+0x1aa0>
   126dc:	b	12704 <abort@plt+0x1ab8>
   126e0:	ldrb	r3, [r8, #1]!
   126e4:	cmp	r3, #0
   126e8:	beq	12804 <abort@plt+0x1bb8>
   126ec:	add	r2, r2, #1
   126f0:	add	r3, sl, r2
   126f4:	cmp	r1, r3
   126f8:	bhi	126e0 <abort@plt+0x1a94>
   126fc:	mov	ip, r2
   12700:	mov	r3, #0
   12704:	mov	r2, r3
   12708:	b	1219c <abort@plt+0x1550>
   1270c:	mov	r3, #0
   12710:	mov	ip, r5
   12714:	ldr	r4, [sp, #80]	; 0x50
   12718:	ldr	r5, [sp, #92]	; 0x5c
   1271c:	ldr	r6, [sp, #84]	; 0x54
   12720:	ldr	r7, [sp, #88]	; 0x58
   12724:	mov	r2, r3
   12728:	b	1219c <abort@plt+0x1550>
   1272c:	mov	r3, r6
   12730:	mov	ip, r5
   12734:	eor	r5, r3, #1
   12738:	mov	r2, r6
   1273c:	ldr	r4, [sp, #80]	; 0x50
   12740:	ldr	r6, [sp, #84]	; 0x54
   12744:	ldr	r7, [sp, #88]	; 0x58
   12748:	uxtb	r5, r5
   1274c:	b	1219c <abort@plt+0x1550>
   12750:	ldr	sl, [sp, #32]
   12754:	mov	r8, fp
   12758:	b	125c0 <abort@plt+0x1974>
   1275c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12760:	ldrdeq	r4, [r1], -r8
   12764:	ldrdeq	r4, [r1], -r0
   12768:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1276c:	ldr	r2, [sp, #56]	; 0x38
   12770:	ldrb	r1, [r2, r3]
   12774:	sub	r2, r1, #33	; 0x21
   12778:	uxtb	r2, r2
   1277c:	cmp	r2, #29
   12780:	bhi	12820 <abort@plt+0x1bd4>
   12784:	ldr	r0, [pc, #-36]	; 12768 <abort@plt+0x1b1c>
   12788:	mov	ip, #1
   1278c:	ands	r2, r0, ip, lsl r2
   12790:	beq	12830 <abort@plt+0x1be4>
   12794:	ldr	r2, [sp, #28]
   12798:	cmp	r2, #0
   1279c:	bne	12930 <abort@plt+0x1ce4>
   127a0:	cmp	fp, r7
   127a4:	ldr	r8, [sp, #28]
   127a8:	ldrhi	r2, [sp, #32]
   127ac:	mov	sl, r3
   127b0:	mov	r5, r8
   127b4:	strbhi	r4, [r2, r7]
   127b8:	add	r2, r7, #1
   127bc:	cmp	fp, r2
   127c0:	movhi	r0, #34	; 0x22
   127c4:	ldrhi	ip, [sp, #32]
   127c8:	mov	r4, r1
   127cc:	strbhi	r0, [ip, r2]
   127d0:	add	r2, r7, #2
   127d4:	cmp	fp, r2
   127d8:	movhi	r0, #34	; 0x22
   127dc:	ldrhi	ip, [sp, #32]
   127e0:	strbhi	r0, [ip, r2]
   127e4:	add	r2, r7, #3
   127e8:	cmp	fp, r2
   127ec:	movhi	r0, #63	; 0x3f
   127f0:	ldrhi	ip, [sp, #32]
   127f4:	add	r7, r7, #4
   127f8:	strbhi	r0, [ip, r2]
   127fc:	mov	r2, r8
   12800:	b	119ac <abort@plt+0xd60>
   12804:	mov	ip, r2
   12808:	mov	r2, r3
   1280c:	b	1219c <abort@plt+0x1550>
   12810:	ldr	sl, [sp, #32]
   12814:	mov	r8, fp
   12818:	ldr	r2, [sp, #28]
   1281c:	b	11bec <abort@plt+0xfa0>
   12820:	mov	r2, #0
   12824:	mov	r8, r2
   12828:	mov	r5, r2
   1282c:	b	119ac <abort@plt+0xd60>
   12830:	mov	r8, r2
   12834:	mov	r5, #0
   12838:	b	119ac <abort@plt+0xd60>
   1283c:	ldr	r1, [sp, #152]	; 0x98
   12840:	bl	11308 <abort@plt+0x6bc>
   12844:	str	r0, [sp, #168]	; 0xa8
   12848:	b	11868 <abort@plt+0xc1c>
   1284c:	ldr	r1, [sp, #152]	; 0x98
   12850:	bl	11308 <abort@plt+0x6bc>
   12854:	str	r0, [sp, #164]	; 0xa4
   12858:	b	11848 <abort@plt+0xbfc>
   1285c:	ldr	r7, [sp, #28]
   12860:	b	118a8 <abort@plt+0xc5c>
   12864:	ldr	sl, [sp, #32]
   12868:	ldr	r2, [sp, #68]	; 0x44
   1286c:	mov	r8, fp
   12870:	mov	fp, r7
   12874:	ldr	r3, [sp, #64]	; 0x40
   12878:	cmp	r3, #0
   1287c:	moveq	r2, #0
   12880:	andne	r2, r2, #1
   12884:	cmp	r2, #0
   12888:	beq	128b4 <abort@plt+0x1c68>
   1288c:	mov	r2, r3
   12890:	ldrb	r3, [r3]
   12894:	cmp	r3, #0
   12898:	beq	128b4 <abort@plt+0x1c68>
   1289c:	cmp	r8, fp
   128a0:	strbhi	r3, [sl, fp]
   128a4:	ldrb	r3, [r2, #1]!
   128a8:	add	fp, fp, #1
   128ac:	cmp	r3, #0
   128b0:	bne	1289c <abort@plt+0x1c50>
   128b4:	cmp	r8, fp
   128b8:	movhi	r3, #0
   128bc:	strbhi	r3, [sl, fp]
   128c0:	b	11c48 <abort@plt+0xffc>
   128c4:	ldr	r3, [sp, #168]	; 0xa8
   128c8:	ldr	sl, [sp, #32]
   128cc:	str	r3, [sp, #16]
   128d0:	ldr	r3, [sp, #164]	; 0xa4
   128d4:	mov	ip, #5
   128d8:	str	r3, [sp, #12]
   128dc:	ldr	r3, [sp, #160]	; 0xa0
   128e0:	ldr	r2, [sp, #56]	; 0x38
   128e4:	str	r3, [sp, #8]
   128e8:	ldr	r3, [sp, #156]	; 0x9c
   128ec:	ldr	r1, [sp, #72]	; 0x48
   128f0:	str	r3, [sp, #4]
   128f4:	mov	r0, sl
   128f8:	ldr	r3, [sp, #24]
   128fc:	str	ip, [sp]
   12900:	bl	11428 <abort@plt+0x7dc>
   12904:	mov	fp, r0
   12908:	b	11c48 <abort@plt+0xffc>
   1290c:	mov	r8, fp
   12910:	ldr	sl, [sp, #32]
   12914:	mov	fp, r7
   12918:	mov	r2, r3
   1291c:	b	12874 <abort@plt+0x1c28>
   12920:	mov	r8, fp
   12924:	ldr	sl, [sp, #32]
   12928:	mov	fp, r7
   1292c:	b	12874 <abort@plt+0x1c28>
   12930:	ldr	sl, [sp, #32]
   12934:	mov	r8, fp
   12938:	b	11c04 <abort@plt+0xfb8>
   1293c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12940:	sub	sp, sp, #52	; 0x34
   12944:	mov	r4, r0
   12948:	mov	r5, r3
   1294c:	mov	sl, r1
   12950:	mov	fp, r2
   12954:	bl	10bb0 <__errno_location@plt>
   12958:	ldr	r7, [pc, #412]	; 12afc <abort@plt+0x1eb0>
   1295c:	cmn	r4, #-2147483647	; 0x80000001
   12960:	ldr	r6, [r7]
   12964:	mov	r8, r0
   12968:	movne	r0, #0
   1296c:	moveq	r0, #1
   12970:	ldr	r3, [r8]
   12974:	orrs	r0, r0, r4, lsr #31
   12978:	str	r3, [sp, #24]
   1297c:	bne	12af8 <abort@plt+0x1eac>
   12980:	ldr	r2, [r7, #4]
   12984:	cmp	r4, r2
   12988:	blt	129e8 <abort@plt+0x1d9c>
   1298c:	add	r9, r7, #8
   12990:	cmp	r6, r9
   12994:	str	r2, [sp, #44]	; 0x2c
   12998:	beq	12ac8 <abort@plt+0x1e7c>
   1299c:	mov	r3, #8
   129a0:	sub	r2, r4, r2
   129a4:	mov	r0, r6
   129a8:	str	r3, [sp]
   129ac:	add	r2, r2, #1
   129b0:	mvn	r3, #-2147483648	; 0x80000000
   129b4:	add	r1, sp, #44	; 0x2c
   129b8:	bl	137a8 <abort@plt+0x2b5c>
   129bc:	mov	r6, r0
   129c0:	str	r0, [r7]
   129c4:	ldr	r0, [r7, #4]
   129c8:	ldr	r2, [sp, #44]	; 0x2c
   129cc:	mov	r1, #0
   129d0:	sub	r2, r2, r0
   129d4:	add	r0, r6, r0, lsl #3
   129d8:	lsl	r2, r2, #3
   129dc:	bl	10bc8 <memset@plt>
   129e0:	ldr	r3, [sp, #44]	; 0x2c
   129e4:	str	r3, [r7, #4]
   129e8:	add	r3, r6, r4, lsl #3
   129ec:	ldr	r1, [r5, #4]
   129f0:	ldr	r7, [r3, #4]
   129f4:	ldr	r9, [r6, r4, lsl #3]
   129f8:	ldr	r2, [r5, #40]	; 0x28
   129fc:	ldr	ip, [r5, #44]	; 0x2c
   12a00:	add	r0, r5, #8
   12a04:	str	r3, [sp, #28]
   12a08:	ldr	r3, [r5]
   12a0c:	orr	r1, r1, #1
   12a10:	mov	lr, r0
   12a14:	str	r1, [sp, #32]
   12a18:	str	r0, [sp, #36]	; 0x24
   12a1c:	str	r1, [sp, #4]
   12a20:	str	r2, [sp, #12]
   12a24:	str	r3, [sp]
   12a28:	mov	r0, r7
   12a2c:	mov	r1, r9
   12a30:	str	ip, [sp, #16]
   12a34:	str	lr, [sp, #8]
   12a38:	mov	r3, fp
   12a3c:	mov	r2, sl
   12a40:	bl	11428 <abort@plt+0x7dc>
   12a44:	cmp	r9, r0
   12a48:	bhi	12ab4 <abort@plt+0x1e68>
   12a4c:	ldr	r3, [pc, #172]	; 12b00 <abort@plt+0x1eb4>
   12a50:	add	r9, r0, #1
   12a54:	cmp	r7, r3
   12a58:	str	r9, [r6, r4, lsl #3]
   12a5c:	beq	12a68 <abort@plt+0x1e1c>
   12a60:	mov	r0, r7
   12a64:	bl	13df0 <abort@plt+0x31a4>
   12a68:	mov	r0, r9
   12a6c:	bl	13644 <abort@plt+0x29f8>
   12a70:	ldr	lr, [sp, #28]
   12a74:	ldr	ip, [r5, #44]	; 0x2c
   12a78:	ldr	r4, [r5, #40]	; 0x28
   12a7c:	mov	r3, fp
   12a80:	mov	r2, sl
   12a84:	mov	r1, r9
   12a88:	str	r0, [lr, #4]
   12a8c:	ldr	lr, [r5]
   12a90:	ldr	r5, [sp, #36]	; 0x24
   12a94:	str	ip, [sp, #16]
   12a98:	str	r5, [sp, #8]
   12a9c:	ldr	r5, [sp, #32]
   12aa0:	str	r4, [sp, #12]
   12aa4:	str	r5, [sp, #4]
   12aa8:	str	lr, [sp]
   12aac:	mov	r7, r0
   12ab0:	bl	11428 <abort@plt+0x7dc>
   12ab4:	ldr	r3, [sp, #24]
   12ab8:	mov	r0, r7
   12abc:	str	r3, [r8]
   12ac0:	add	sp, sp, #52	; 0x34
   12ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ac8:	mov	r3, #8
   12acc:	sub	r2, r4, r2
   12ad0:	str	r3, [sp]
   12ad4:	add	r1, sp, #44	; 0x2c
   12ad8:	add	r2, r2, #1
   12adc:	mvn	r3, #-2147483648	; 0x80000000
   12ae0:	bl	137a8 <abort@plt+0x2b5c>
   12ae4:	mov	r6, r0
   12ae8:	ldm	r9, {r0, r1}
   12aec:	str	r6, [r7]
   12af0:	stm	r6, {r0, r1}
   12af4:	b	129c4 <abort@plt+0x1d78>
   12af8:	bl	10c4c <abort@plt>
   12afc:	andeq	r5, r2, r8, asr #1
   12b00:	andeq	r5, r2, r8, lsr #2
   12b04:	push	{r4, r5, r6, lr}
   12b08:	mov	r5, r0
   12b0c:	bl	10bb0 <__errno_location@plt>
   12b10:	cmp	r5, #0
   12b14:	mov	r1, #48	; 0x30
   12b18:	mov	r4, r0
   12b1c:	ldr	r0, [pc, #16]	; 12b34 <abort@plt+0x1ee8>
   12b20:	ldr	r6, [r4]
   12b24:	movne	r0, r5
   12b28:	bl	13aa4 <abort@plt+0x2e58>
   12b2c:	str	r6, [r4]
   12b30:	pop	{r4, r5, r6, pc}
   12b34:	andeq	r5, r2, r8, lsr #4
   12b38:	ldr	r3, [pc, #12]	; 12b4c <abort@plt+0x1f00>
   12b3c:	cmp	r0, #0
   12b40:	moveq	r0, r3
   12b44:	ldr	r0, [r0]
   12b48:	bx	lr
   12b4c:	andeq	r5, r2, r8, lsr #4
   12b50:	ldr	r3, [pc, #12]	; 12b64 <abort@plt+0x1f18>
   12b54:	cmp	r0, #0
   12b58:	moveq	r0, r3
   12b5c:	str	r1, [r0]
   12b60:	bx	lr
   12b64:	andeq	r5, r2, r8, lsr #4
   12b68:	ldr	r3, [pc, #52]	; 12ba4 <abort@plt+0x1f58>
   12b6c:	cmp	r0, #0
   12b70:	moveq	r0, r3
   12b74:	add	r3, r0, #8
   12b78:	push	{lr}		; (str lr, [sp, #-4]!)
   12b7c:	lsr	lr, r1, #5
   12b80:	and	r1, r1, #31
   12b84:	ldr	ip, [r3, lr, lsl #2]
   12b88:	lsr	r0, ip, r1
   12b8c:	eor	r2, r2, r0
   12b90:	and	r2, r2, #1
   12b94:	and	r0, r0, #1
   12b98:	eor	r1, ip, r2, lsl r1
   12b9c:	str	r1, [r3, lr, lsl #2]
   12ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba4:	andeq	r5, r2, r8, lsr #4
   12ba8:	ldr	r3, [pc, #16]	; 12bc0 <abort@plt+0x1f74>
   12bac:	cmp	r0, #0
   12bb0:	movne	r3, r0
   12bb4:	ldr	r0, [r3, #4]
   12bb8:	str	r1, [r3, #4]
   12bbc:	bx	lr
   12bc0:	andeq	r5, r2, r8, lsr #4
   12bc4:	ldr	r3, [pc, #44]	; 12bf8 <abort@plt+0x1fac>
   12bc8:	cmp	r0, #0
   12bcc:	moveq	r0, r3
   12bd0:	mov	ip, #10
   12bd4:	cmp	r2, #0
   12bd8:	cmpne	r1, #0
   12bdc:	str	ip, [r0]
   12be0:	beq	12bf0 <abort@plt+0x1fa4>
   12be4:	str	r1, [r0, #40]	; 0x28
   12be8:	str	r2, [r0, #44]	; 0x2c
   12bec:	bx	lr
   12bf0:	push	{r4, lr}
   12bf4:	bl	10c4c <abort@plt>
   12bf8:	andeq	r5, r2, r8, lsr #4
   12bfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c00:	sub	sp, sp, #24
   12c04:	ldr	ip, [pc, #108]	; 12c78 <abort@plt+0x202c>
   12c08:	ldr	r4, [sp, #56]	; 0x38
   12c0c:	mov	r9, r2
   12c10:	cmp	r4, #0
   12c14:	moveq	r4, ip
   12c18:	mov	sl, r3
   12c1c:	mov	r7, r0
   12c20:	mov	r8, r1
   12c24:	bl	10bb0 <__errno_location@plt>
   12c28:	ldr	r3, [r4, #44]	; 0x2c
   12c2c:	mov	r1, r8
   12c30:	ldr	r6, [r0]
   12c34:	str	r3, [sp, #16]
   12c38:	ldr	r2, [r4, #40]	; 0x28
   12c3c:	add	r3, r4, #8
   12c40:	str	r3, [sp, #8]
   12c44:	str	r2, [sp, #12]
   12c48:	ldr	r2, [r4, #4]
   12c4c:	mov	r5, r0
   12c50:	str	r2, [sp, #4]
   12c54:	ldr	ip, [r4]
   12c58:	mov	r3, sl
   12c5c:	mov	r2, r9
   12c60:	mov	r0, r7
   12c64:	str	ip, [sp]
   12c68:	bl	11428 <abort@plt+0x7dc>
   12c6c:	str	r6, [r5]
   12c70:	add	sp, sp, #24
   12c74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c78:	andeq	r5, r2, r8, lsr #4
   12c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c80:	cmp	r3, #0
   12c84:	sub	sp, sp, #44	; 0x2c
   12c88:	ldr	r4, [pc, #192]	; 12d50 <abort@plt+0x2104>
   12c8c:	mov	r6, r2
   12c90:	movne	r4, r3
   12c94:	mov	r9, r1
   12c98:	mov	r8, r0
   12c9c:	bl	10bb0 <__errno_location@plt>
   12ca0:	ldr	r3, [r4, #44]	; 0x2c
   12ca4:	ldr	r5, [r4, #4]
   12ca8:	add	sl, r4, #8
   12cac:	cmp	r6, #0
   12cb0:	orreq	r5, r5, #1
   12cb4:	mov	r1, #0
   12cb8:	ldr	r2, [r0]
   12cbc:	str	r3, [sp, #16]
   12cc0:	ldr	r3, [r4, #40]	; 0x28
   12cc4:	stmib	sp, {r5, sl}
   12cc8:	str	r3, [sp, #12]
   12ccc:	ldr	r3, [r4]
   12cd0:	mov	r7, r0
   12cd4:	str	r2, [sp, #28]
   12cd8:	str	r3, [sp]
   12cdc:	mov	r2, r8
   12ce0:	mov	r3, r9
   12ce4:	mov	r0, r1
   12ce8:	bl	11428 <abort@plt+0x7dc>
   12cec:	add	r1, r0, #1
   12cf0:	mov	fp, r0
   12cf4:	mov	r0, r1
   12cf8:	str	r1, [sp, #36]	; 0x24
   12cfc:	bl	13644 <abort@plt+0x29f8>
   12d00:	ldr	r3, [r4, #44]	; 0x2c
   12d04:	mov	r2, r8
   12d08:	str	r3, [sp, #16]
   12d0c:	ldr	r3, [r4, #40]	; 0x28
   12d10:	str	r5, [sp, #4]
   12d14:	str	r3, [sp, #12]
   12d18:	str	sl, [sp, #8]
   12d1c:	ldr	ip, [r4]
   12d20:	ldr	r1, [sp, #36]	; 0x24
   12d24:	mov	r3, r9
   12d28:	str	ip, [sp]
   12d2c:	str	r0, [sp, #32]
   12d30:	bl	11428 <abort@plt+0x7dc>
   12d34:	ldr	r2, [sp, #28]
   12d38:	cmp	r6, #0
   12d3c:	str	r2, [r7]
   12d40:	ldr	r0, [sp, #32]
   12d44:	strne	fp, [r6]
   12d48:	add	sp, sp, #44	; 0x2c
   12d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d50:	andeq	r5, r2, r8, lsr #4
   12d54:	mov	r3, r2
   12d58:	mov	r2, #0
   12d5c:	b	12c7c <abort@plt+0x2030>
   12d60:	push	{r4, r5, r6, r7, r8, lr}
   12d64:	ldr	r6, [pc, #116]	; 12de0 <abort@plt+0x2194>
   12d68:	ldr	r3, [r6, #4]
   12d6c:	ldr	r7, [r6]
   12d70:	cmp	r3, #1
   12d74:	movgt	r5, r7
   12d78:	movgt	r4, #1
   12d7c:	ble	12d9c <abort@plt+0x2150>
   12d80:	ldr	r0, [r5, #12]
   12d84:	bl	13df0 <abort@plt+0x31a4>
   12d88:	ldr	r3, [r6, #4]
   12d8c:	add	r4, r4, #1
   12d90:	cmp	r3, r4
   12d94:	add	r5, r5, #8
   12d98:	bgt	12d80 <abort@plt+0x2134>
   12d9c:	ldr	r0, [r7, #4]
   12da0:	ldr	r4, [pc, #60]	; 12de4 <abort@plt+0x2198>
   12da4:	cmp	r0, r4
   12da8:	beq	12dbc <abort@plt+0x2170>
   12dac:	bl	13df0 <abort@plt+0x31a4>
   12db0:	mov	r3, #256	; 0x100
   12db4:	str	r4, [r6, #12]
   12db8:	str	r3, [r6, #8]
   12dbc:	ldr	r4, [pc, #36]	; 12de8 <abort@plt+0x219c>
   12dc0:	cmp	r7, r4
   12dc4:	beq	12dd4 <abort@plt+0x2188>
   12dc8:	mov	r0, r7
   12dcc:	bl	13df0 <abort@plt+0x31a4>
   12dd0:	str	r4, [r6]
   12dd4:	mov	r3, #1
   12dd8:	str	r3, [r6, #4]
   12ddc:	pop	{r4, r5, r6, r7, r8, pc}
   12de0:	andeq	r5, r2, r8, asr #1
   12de4:	andeq	r5, r2, r8, lsr #2
   12de8:	ldrdeq	r5, [r2], -r0
   12dec:	ldr	r3, [pc, #4]	; 12df8 <abort@plt+0x21ac>
   12df0:	mvn	r2, #0
   12df4:	b	1293c <abort@plt+0x1cf0>
   12df8:	andeq	r5, r2, r8, lsr #4
   12dfc:	ldr	r3, [pc]	; 12e04 <abort@plt+0x21b8>
   12e00:	b	1293c <abort@plt+0x1cf0>
   12e04:	andeq	r5, r2, r8, lsr #4
   12e08:	mov	r1, r0
   12e0c:	ldr	r3, [pc, #8]	; 12e1c <abort@plt+0x21d0>
   12e10:	mvn	r2, #0
   12e14:	mov	r0, #0
   12e18:	b	1293c <abort@plt+0x1cf0>
   12e1c:	andeq	r5, r2, r8, lsr #4
   12e20:	mov	r2, r1
   12e24:	ldr	r3, [pc, #8]	; 12e34 <abort@plt+0x21e8>
   12e28:	mov	r1, r0
   12e2c:	mov	r0, #0
   12e30:	b	1293c <abort@plt+0x1cf0>
   12e34:	andeq	r5, r2, r8, lsr #4
   12e38:	push	{r4, r5, lr}
   12e3c:	sub	sp, sp, #52	; 0x34
   12e40:	mov	r5, r2
   12e44:	mov	r4, r0
   12e48:	mov	r0, sp
   12e4c:	bl	112d8 <abort@plt+0x68c>
   12e50:	mov	r3, sp
   12e54:	mov	r1, r5
   12e58:	mov	r0, r4
   12e5c:	mvn	r2, #0
   12e60:	bl	1293c <abort@plt+0x1cf0>
   12e64:	add	sp, sp, #52	; 0x34
   12e68:	pop	{r4, r5, pc}
   12e6c:	push	{r4, r5, r6, lr}
   12e70:	sub	sp, sp, #48	; 0x30
   12e74:	mov	r5, r2
   12e78:	mov	r6, r3
   12e7c:	mov	r4, r0
   12e80:	mov	r0, sp
   12e84:	bl	112d8 <abort@plt+0x68c>
   12e88:	mov	r3, sp
   12e8c:	mov	r2, r6
   12e90:	mov	r1, r5
   12e94:	mov	r0, r4
   12e98:	bl	1293c <abort@plt+0x1cf0>
   12e9c:	add	sp, sp, #48	; 0x30
   12ea0:	pop	{r4, r5, r6, pc}
   12ea4:	mov	r2, r1
   12ea8:	mov	r1, r0
   12eac:	mov	r0, #0
   12eb0:	b	12e38 <abort@plt+0x21ec>
   12eb4:	mov	r3, r2
   12eb8:	mov	r2, r1
   12ebc:	mov	r1, r0
   12ec0:	mov	r0, #0
   12ec4:	b	12e6c <abort@plt+0x2220>
   12ec8:	push	{r4, r5, r6, r7, r8, lr}
   12ecc:	mov	r7, r0
   12ed0:	ldr	lr, [pc, #100]	; 12f3c <abort@plt+0x22f0>
   12ed4:	mov	r8, r1
   12ed8:	mov	r4, r2
   12edc:	ldm	lr!, {r0, r1, r2, r3}
   12ee0:	sub	sp, sp, #48	; 0x30
   12ee4:	mov	ip, sp
   12ee8:	lsr	r5, r4, #5
   12eec:	stmia	ip!, {r0, r1, r2, r3}
   12ef0:	add	r6, sp, #8
   12ef4:	ldm	lr!, {r0, r1, r2, r3}
   12ef8:	and	r4, r4, #31
   12efc:	stmia	ip!, {r0, r1, r2, r3}
   12f00:	ldm	lr, {r0, r1, r2, r3}
   12f04:	stm	ip, {r0, r1, r2, r3}
   12f08:	mov	r2, r8
   12f0c:	ldr	lr, [r6, r5, lsl #2]
   12f10:	mov	r1, r7
   12f14:	mov	r3, sp
   12f18:	lsr	ip, lr, r4
   12f1c:	eor	ip, ip, #1
   12f20:	and	ip, ip, #1
   12f24:	mov	r0, #0
   12f28:	eor	r4, lr, ip, lsl r4
   12f2c:	str	r4, [r6, r5, lsl #2]
   12f30:	bl	1293c <abort@plt+0x1cf0>
   12f34:	add	sp, sp, #48	; 0x30
   12f38:	pop	{r4, r5, r6, r7, r8, pc}
   12f3c:	andeq	r5, r2, r8, lsr #4
   12f40:	mov	r2, r1
   12f44:	mvn	r1, #0
   12f48:	b	12ec8 <abort@plt+0x227c>
   12f4c:	mov	r2, #58	; 0x3a
   12f50:	mvn	r1, #0
   12f54:	b	12ec8 <abort@plt+0x227c>
   12f58:	mov	r2, #58	; 0x3a
   12f5c:	b	12ec8 <abort@plt+0x227c>
   12f60:	push	{r4, r5, r6, r7, lr}
   12f64:	sub	sp, sp, #100	; 0x64
   12f68:	mov	r6, r0
   12f6c:	mov	r0, sp
   12f70:	mov	r7, r2
   12f74:	bl	112d8 <abort@plt+0x68c>
   12f78:	mov	ip, sp
   12f7c:	add	lr, sp, #48	; 0x30
   12f80:	ldm	ip!, {r0, r1, r2, r3}
   12f84:	stmia	lr!, {r0, r1, r2, r3}
   12f88:	ldm	ip!, {r0, r1, r2, r3}
   12f8c:	ldr	r5, [sp, #60]	; 0x3c
   12f90:	stmia	lr!, {r0, r1, r2, r3}
   12f94:	mvn	r4, r5
   12f98:	ldm	ip, {r0, r1, r2, r3}
   12f9c:	and	ip, r4, #67108864	; 0x4000000
   12fa0:	eor	ip, ip, r5
   12fa4:	str	ip, [sp, #60]	; 0x3c
   12fa8:	stm	lr, {r0, r1, r2, r3}
   12fac:	mov	r1, r7
   12fb0:	mov	r0, r6
   12fb4:	add	r3, sp, #48	; 0x30
   12fb8:	mvn	r2, #0
   12fbc:	bl	1293c <abort@plt+0x1cf0>
   12fc0:	add	sp, sp, #100	; 0x64
   12fc4:	pop	{r4, r5, r6, r7, pc}
   12fc8:	push	{r4, r5, r6, r7, r8, lr}
   12fcc:	mov	r5, r1
   12fd0:	ldr	lr, [pc, #100]	; 1303c <abort@plt+0x23f0>
   12fd4:	mov	r4, r2
   12fd8:	mov	r7, r0
   12fdc:	mov	r8, r3
   12fe0:	ldm	lr!, {r0, r1, r2, r3}
   12fe4:	sub	sp, sp, #48	; 0x30
   12fe8:	mov	ip, sp
   12fec:	mov	r6, #10
   12ff0:	stmia	ip!, {r0, r1, r2, r3}
   12ff4:	cmp	r4, #0
   12ff8:	cmpne	r5, #0
   12ffc:	ldm	lr!, {r0, r1, r2, r3}
   13000:	str	r6, [sp]
   13004:	stmia	ip!, {r0, r1, r2, r3}
   13008:	ldm	lr, {r0, r1, r2, r3}
   1300c:	stm	ip, {r0, r1, r2, r3}
   13010:	beq	13038 <abort@plt+0x23ec>
   13014:	mov	r3, sp
   13018:	mov	r1, r8
   1301c:	mov	r0, r7
   13020:	ldr	r2, [sp, #72]	; 0x48
   13024:	str	r5, [sp, #40]	; 0x28
   13028:	str	r4, [sp, #44]	; 0x2c
   1302c:	bl	1293c <abort@plt+0x1cf0>
   13030:	add	sp, sp, #48	; 0x30
   13034:	pop	{r4, r5, r6, r7, r8, pc}
   13038:	bl	10c4c <abort@plt>
   1303c:	andeq	r5, r2, r8, lsr #4
   13040:	push	{lr}		; (str lr, [sp, #-4]!)
   13044:	sub	sp, sp, #12
   13048:	mvn	ip, #0
   1304c:	str	ip, [sp]
   13050:	bl	12fc8 <abort@plt+0x237c>
   13054:	add	sp, sp, #12
   13058:	pop	{pc}		; (ldr pc, [sp], #4)
   1305c:	push	{lr}		; (str lr, [sp, #-4]!)
   13060:	sub	sp, sp, #12
   13064:	mvn	ip, #0
   13068:	mov	r3, r2
   1306c:	str	ip, [sp]
   13070:	mov	r2, r1
   13074:	mov	r1, r0
   13078:	mov	r0, #0
   1307c:	bl	12fc8 <abort@plt+0x237c>
   13080:	add	sp, sp, #12
   13084:	pop	{pc}		; (ldr pc, [sp], #4)
   13088:	push	{lr}		; (str lr, [sp, #-4]!)
   1308c:	sub	sp, sp, #12
   13090:	str	r3, [sp]
   13094:	mov	r3, r2
   13098:	mov	r2, r1
   1309c:	mov	r1, r0
   130a0:	mov	r0, #0
   130a4:	bl	12fc8 <abort@plt+0x237c>
   130a8:	add	sp, sp, #12
   130ac:	pop	{pc}		; (ldr pc, [sp], #4)
   130b0:	ldr	r3, [pc]	; 130b8 <abort@plt+0x246c>
   130b4:	b	1293c <abort@plt+0x1cf0>
   130b8:	ldrdeq	r5, [r2], -r8
   130bc:	mov	r2, r1
   130c0:	ldr	r3, [pc, #8]	; 130d0 <abort@plt+0x2484>
   130c4:	mov	r1, r0
   130c8:	mov	r0, #0
   130cc:	b	1293c <abort@plt+0x1cf0>
   130d0:	ldrdeq	r5, [r2], -r8
   130d4:	ldr	r3, [pc, #4]	; 130e0 <abort@plt+0x2494>
   130d8:	mvn	r2, #0
   130dc:	b	1293c <abort@plt+0x1cf0>
   130e0:	ldrdeq	r5, [r2], -r8
   130e4:	mov	r1, r0
   130e8:	ldr	r3, [pc, #8]	; 130f8 <abort@plt+0x24ac>
   130ec:	mvn	r2, #0
   130f0:	mov	r0, #0
   130f4:	b	1293c <abort@plt+0x1cf0>
   130f8:	ldrdeq	r5, [r2], -r8
   130fc:	push	{r4, r5, r6, lr}
   13100:	sub	sp, sp, #32
   13104:	cmp	r1, #0
   13108:	mov	r4, r0
   1310c:	ldr	r5, [sp, #48]	; 0x30
   13110:	ldr	r6, [sp, #52]	; 0x34
   13114:	beq	1342c <abort@plt+0x27e0>
   13118:	stm	sp, {r2, r3}
   1311c:	mov	r3, r1
   13120:	ldr	r2, [pc, #808]	; 13450 <abort@plt+0x2804>
   13124:	mov	r1, #1
   13128:	bl	10bec <__fprintf_chk@plt>
   1312c:	mov	r2, #5
   13130:	ldr	r1, [pc, #796]	; 13454 <abort@plt+0x2808>
   13134:	mov	r0, #0
   13138:	bl	10ae4 <dcgettext@plt>
   1313c:	ldr	r3, [pc, #788]	; 13458 <abort@plt+0x280c>
   13140:	ldr	r2, [pc, #788]	; 1345c <abort@plt+0x2810>
   13144:	str	r3, [sp]
   13148:	mov	r1, #1
   1314c:	mov	r3, r0
   13150:	mov	r0, r4
   13154:	bl	10bec <__fprintf_chk@plt>
   13158:	mov	r1, r4
   1315c:	mov	r0, #10
   13160:	bl	10ad8 <fputc_unlocked@plt>
   13164:	mov	r2, #5
   13168:	ldr	r1, [pc, #752]	; 13460 <abort@plt+0x2814>
   1316c:	mov	r0, #0
   13170:	bl	10ae4 <dcgettext@plt>
   13174:	mov	r1, #1
   13178:	ldr	r3, [pc, #740]	; 13464 <abort@plt+0x2818>
   1317c:	mov	r2, r0
   13180:	mov	r0, r4
   13184:	bl	10bec <__fprintf_chk@plt>
   13188:	mov	r1, r4
   1318c:	mov	r0, #10
   13190:	bl	10ad8 <fputc_unlocked@plt>
   13194:	cmp	r6, #9
   13198:	ldrls	pc, [pc, r6, lsl #2]
   1319c:	b	13444 <abort@plt+0x27f8>
   131a0:	andeq	r3, r1, r4, lsr #4
   131a4:	andeq	r3, r1, ip, lsr #4
   131a8:	andeq	r3, r1, r8, asr r2
   131ac:	andeq	r3, r1, ip, lsl #5
   131b0:	andeq	r3, r1, r8, asr #5
   131b4:	andeq	r3, r1, r4, lsl #6
   131b8:	andeq	r3, r1, r0, asr #6
   131bc:	andeq	r3, r1, r4, lsl #7
   131c0:	ldrdeq	r3, [r1], -r4
   131c4:	andeq	r3, r1, r8, asr #3
   131c8:	ldr	r1, [pc, #664]	; 13468 <abort@plt+0x281c>
   131cc:	mov	r2, #5
   131d0:	mov	r0, #0
   131d4:	bl	10ae4 <dcgettext@plt>
   131d8:	ldr	ip, [r5, #32]
   131dc:	ldr	r1, [r5, #28]
   131e0:	ldr	r2, [r5, #24]
   131e4:	ldr	r3, [r5]
   131e8:	ldr	r6, [r5, #20]
   131ec:	str	ip, [sp, #28]
   131f0:	ldr	lr, [r5, #16]
   131f4:	str	r1, [sp, #24]
   131f8:	ldr	ip, [r5, #12]
   131fc:	str	r2, [sp, #20]
   13200:	ldr	r1, [r5, #8]
   13204:	ldr	r2, [r5, #4]
   13208:	str	r6, [sp, #16]
   1320c:	stmib	sp, {r1, ip, lr}
   13210:	mov	r1, #1
   13214:	str	r2, [sp]
   13218:	mov	r2, r0
   1321c:	mov	r0, r4
   13220:	bl	10bec <__fprintf_chk@plt>
   13224:	add	sp, sp, #32
   13228:	pop	{r4, r5, r6, pc}
   1322c:	mov	r2, #5
   13230:	ldr	r1, [pc, #564]	; 1346c <abort@plt+0x2820>
   13234:	mov	r0, #0
   13238:	bl	10ae4 <dcgettext@plt>
   1323c:	ldr	r3, [r5]
   13240:	mov	r1, #1
   13244:	mov	r2, r0
   13248:	mov	r0, r4
   1324c:	add	sp, sp, #32
   13250:	pop	{r4, r5, r6, lr}
   13254:	b	10bec <__fprintf_chk@plt>
   13258:	mov	r2, #5
   1325c:	ldr	r1, [pc, #524]	; 13470 <abort@plt+0x2824>
   13260:	mov	r0, #0
   13264:	bl	10ae4 <dcgettext@plt>
   13268:	ldr	r2, [r5, #4]
   1326c:	ldr	r3, [r5]
   13270:	mov	r1, #1
   13274:	str	r2, [sp, #48]	; 0x30
   13278:	mov	r2, r0
   1327c:	mov	r0, r4
   13280:	add	sp, sp, #32
   13284:	pop	{r4, r5, r6, lr}
   13288:	b	10bec <__fprintf_chk@plt>
   1328c:	mov	r2, #5
   13290:	ldr	r1, [pc, #476]	; 13474 <abort@plt+0x2828>
   13294:	mov	r0, #0
   13298:	bl	10ae4 <dcgettext@plt>
   1329c:	ldr	r1, [r5, #8]
   132a0:	ldr	r2, [r5, #4]
   132a4:	ldr	r3, [r5]
   132a8:	str	r1, [sp, #52]	; 0x34
   132ac:	str	r2, [sp, #48]	; 0x30
   132b0:	mov	r1, #1
   132b4:	mov	r2, r0
   132b8:	mov	r0, r4
   132bc:	add	sp, sp, #32
   132c0:	pop	{r4, r5, r6, lr}
   132c4:	b	10bec <__fprintf_chk@plt>
   132c8:	mov	r2, #5
   132cc:	ldr	r1, [pc, #420]	; 13478 <abort@plt+0x282c>
   132d0:	mov	r0, #0
   132d4:	bl	10ae4 <dcgettext@plt>
   132d8:	ldr	r1, [r5, #8]
   132dc:	ldr	ip, [r5, #12]
   132e0:	ldr	r2, [r5, #4]
   132e4:	ldr	r3, [r5]
   132e8:	stmib	sp, {r1, ip}
   132ec:	str	r2, [sp]
   132f0:	mov	r1, #1
   132f4:	mov	r2, r0
   132f8:	mov	r0, r4
   132fc:	bl	10bec <__fprintf_chk@plt>
   13300:	b	13224 <abort@plt+0x25d8>
   13304:	mov	r2, #5
   13308:	ldr	r1, [pc, #364]	; 1347c <abort@plt+0x2830>
   1330c:	mov	r0, #0
   13310:	bl	10ae4 <dcgettext@plt>
   13314:	add	r1, r5, #8
   13318:	ldr	r2, [r5, #4]
   1331c:	ldm	r1, {r1, ip, lr}
   13320:	ldr	r3, [r5]
   13324:	str	r2, [sp]
   13328:	stmib	sp, {r1, ip, lr}
   1332c:	mov	r1, #1
   13330:	mov	r2, r0
   13334:	mov	r0, r4
   13338:	bl	10bec <__fprintf_chk@plt>
   1333c:	b	13224 <abort@plt+0x25d8>
   13340:	mov	r2, #5
   13344:	ldr	r1, [pc, #308]	; 13480 <abort@plt+0x2834>
   13348:	mov	r0, #0
   1334c:	bl	10ae4 <dcgettext@plt>
   13350:	add	r1, r5, #8
   13354:	ldr	r2, [r5, #4]
   13358:	ldm	r1, {r1, ip, lr}
   1335c:	ldr	r6, [r5, #20]
   13360:	ldr	r3, [r5]
   13364:	stmib	sp, {r1, ip, lr}
   13368:	mov	r1, #1
   1336c:	str	r2, [sp]
   13370:	str	r6, [sp, #16]
   13374:	mov	r2, r0
   13378:	mov	r0, r4
   1337c:	bl	10bec <__fprintf_chk@plt>
   13380:	b	13224 <abort@plt+0x25d8>
   13384:	mov	r2, #5
   13388:	ldr	r1, [pc, #244]	; 13484 <abort@plt+0x2838>
   1338c:	mov	r0, #0
   13390:	bl	10ae4 <dcgettext@plt>
   13394:	ldr	r2, [r5, #24]
   13398:	ldr	r3, [r5]
   1339c:	ldr	r6, [r5, #20]
   133a0:	ldr	lr, [r5, #16]
   133a4:	ldr	ip, [r5, #12]
   133a8:	str	r2, [sp, #20]
   133ac:	ldr	r1, [r5, #8]
   133b0:	ldr	r2, [r5, #4]
   133b4:	str	r6, [sp, #16]
   133b8:	stmib	sp, {r1, ip, lr}
   133bc:	mov	r1, #1
   133c0:	str	r2, [sp]
   133c4:	mov	r2, r0
   133c8:	mov	r0, r4
   133cc:	bl	10bec <__fprintf_chk@plt>
   133d0:	b	13224 <abort@plt+0x25d8>
   133d4:	mov	r2, #5
   133d8:	ldr	r1, [pc, #168]	; 13488 <abort@plt+0x283c>
   133dc:	mov	r0, #0
   133e0:	bl	10ae4 <dcgettext@plt>
   133e4:	ldr	r1, [r5, #28]
   133e8:	ldr	r2, [r5, #24]
   133ec:	ldr	r3, [r5]
   133f0:	ldr	r6, [r5, #20]
   133f4:	ldr	lr, [r5, #16]
   133f8:	str	r1, [sp, #24]
   133fc:	ldr	ip, [r5, #12]
   13400:	str	r2, [sp, #20]
   13404:	ldr	r1, [r5, #8]
   13408:	ldr	r2, [r5, #4]
   1340c:	str	r6, [sp, #16]
   13410:	stmib	sp, {r1, ip, lr}
   13414:	mov	r1, #1
   13418:	str	r2, [sp]
   1341c:	mov	r2, r0
   13420:	mov	r0, r4
   13424:	bl	10bec <__fprintf_chk@plt>
   13428:	b	13224 <abort@plt+0x25d8>
   1342c:	str	r3, [sp]
   13430:	mov	r1, #1
   13434:	mov	r3, r2
   13438:	ldr	r2, [pc, #76]	; 1348c <abort@plt+0x2840>
   1343c:	bl	10bec <__fprintf_chk@plt>
   13440:	b	1312c <abort@plt+0x24e0>
   13444:	mov	r2, #5
   13448:	ldr	r1, [pc, #64]	; 13490 <abort@plt+0x2844>
   1344c:	b	131d0 <abort@plt+0x2584>
   13450:	andeq	r4, r1, r4, asr #20
   13454:	andeq	r4, r1, r8, asr sl
   13458:	andeq	r0, r0, r6, ror #15
   1345c:	andeq	r4, r1, r0, lsr sp
   13460:	andeq	r4, r1, ip, asr sl
   13464:	andeq	r4, r1, r8, lsl #22
   13468:	andeq	r4, r1, r8, lsr ip
   1346c:	andeq	r4, r1, ip, lsr #22
   13470:	andeq	r4, r1, ip, lsr fp
   13474:	andeq	r4, r1, r4, asr fp
   13478:	andeq	r4, r1, r0, ror fp
   1347c:	muleq	r1, r0, fp
   13480:			; <UNDEFINED> instruction: 0x00014bb4
   13484:	ldrdeq	r4, [r1], -ip
   13488:	andeq	r4, r1, r8, lsl #24
   1348c:	andeq	r4, r1, r0, asr sl
   13490:	andeq	r4, r1, ip, ror #24
   13494:	push	{r4, r5, lr}
   13498:	sub	sp, sp, #12
   1349c:	ldr	r5, [sp, #24]
   134a0:	ldr	ip, [r5]
   134a4:	cmp	ip, #0
   134a8:	beq	134c4 <abort@plt+0x2878>
   134ac:	mov	lr, r5
   134b0:	mov	ip, #0
   134b4:	ldr	r4, [lr, #4]!
   134b8:	add	ip, ip, #1
   134bc:	cmp	r4, #0
   134c0:	bne	134b4 <abort@plt+0x2868>
   134c4:	stm	sp, {r5, ip}
   134c8:	bl	130fc <abort@plt+0x24b0>
   134cc:	add	sp, sp, #12
   134d0:	pop	{r4, r5, pc}
   134d4:	push	{r4, r5, lr}
   134d8:	sub	sp, sp, #52	; 0x34
   134dc:	add	r5, sp, #4
   134e0:	ldr	r4, [sp, #64]	; 0x40
   134e4:	mov	ip, #0
   134e8:	sub	r4, r4, #4
   134ec:	ldr	lr, [r4, #4]!
   134f0:	cmp	lr, #0
   134f4:	str	lr, [r5, #4]!
   134f8:	beq	13508 <abort@plt+0x28bc>
   134fc:	add	ip, ip, #1
   13500:	cmp	ip, #10
   13504:	bne	134ec <abort@plt+0x28a0>
   13508:	add	lr, sp, #8
   1350c:	str	ip, [sp, #4]
   13510:	str	lr, [sp]
   13514:	bl	130fc <abort@plt+0x24b0>
   13518:	add	sp, sp, #52	; 0x34
   1351c:	pop	{r4, r5, pc}
   13520:	push	{r3}		; (str r3, [sp, #-4]!)
   13524:	push	{r4, lr}
   13528:	sub	sp, sp, #60	; 0x3c
   1352c:	add	lr, sp, #56	; 0x38
   13530:	add	r3, sp, #72	; 0x48
   13534:	str	r3, [lr, #-44]!	; 0xffffffd4
   13538:	add	r4, sp, #68	; 0x44
   1353c:	mov	r3, #0
   13540:	ldr	ip, [r4, #4]!
   13544:	cmp	ip, #0
   13548:	str	ip, [lr, #4]!
   1354c:	beq	1355c <abort@plt+0x2910>
   13550:	add	r3, r3, #1
   13554:	cmp	r3, #10
   13558:	bne	13540 <abort@plt+0x28f4>
   1355c:	add	ip, sp, #16
   13560:	str	r3, [sp, #4]
   13564:	str	ip, [sp]
   13568:	ldr	r3, [sp, #68]	; 0x44
   1356c:	bl	130fc <abort@plt+0x24b0>
   13570:	add	sp, sp, #60	; 0x3c
   13574:	pop	{r4, lr}
   13578:	add	sp, sp, #4
   1357c:	bx	lr
   13580:	ldr	r3, [pc, #116]	; 135fc <abort@plt+0x29b0>
   13584:	push	{r4, lr}
   13588:	mov	r0, #10
   1358c:	ldr	r1, [r3]
   13590:	bl	10ad8 <fputc_unlocked@plt>
   13594:	mov	r2, #5
   13598:	ldr	r1, [pc, #96]	; 13600 <abort@plt+0x29b4>
   1359c:	mov	r0, #0
   135a0:	bl	10ae4 <dcgettext@plt>
   135a4:	ldr	r2, [pc, #88]	; 13604 <abort@plt+0x29b8>
   135a8:	mov	r1, r0
   135ac:	mov	r0, #1
   135b0:	bl	10bd4 <__printf_chk@plt>
   135b4:	mov	r2, #5
   135b8:	ldr	r1, [pc, #72]	; 13608 <abort@plt+0x29bc>
   135bc:	mov	r0, #0
   135c0:	bl	10ae4 <dcgettext@plt>
   135c4:	ldr	r3, [pc, #64]	; 1360c <abort@plt+0x29c0>
   135c8:	ldr	r2, [pc, #64]	; 13610 <abort@plt+0x29c4>
   135cc:	mov	r1, r0
   135d0:	mov	r0, #1
   135d4:	bl	10bd4 <__printf_chk@plt>
   135d8:	mov	r2, #5
   135dc:	ldr	r1, [pc, #48]	; 13614 <abort@plt+0x29c8>
   135e0:	mov	r0, #0
   135e4:	bl	10ae4 <dcgettext@plt>
   135e8:	ldr	r2, [pc, #40]	; 13618 <abort@plt+0x29cc>
   135ec:	pop	{r4, lr}
   135f0:	mov	r1, r0
   135f4:	mov	r0, #1
   135f8:	b	10bd4 <__printf_chk@plt>
   135fc:	andeq	r5, r2, r4, lsl r1
   13600:	andeq	r4, r1, r8, lsr #25
   13604:			; <UNDEFINED> instruction: 0x00014cbc
   13608:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1360c:	andeq	r4, r1, r8, lsl #15
   13610:			; <UNDEFINED> instruction: 0x000147b0
   13614:	andeq	r4, r1, r8, ror #25
   13618:	andeq	r4, r1, r0, lsl sp
   1361c:	push	{r4, lr}
   13620:	bl	13bec <abort@plt+0x2fa0>
   13624:	cmp	r0, #0
   13628:	popne	{r4, pc}
   1362c:	bl	13b64 <abort@plt+0x2f18>
   13630:	push	{r4, lr}
   13634:	bl	13bec <abort@plt+0x2fa0>
   13638:	cmp	r0, #0
   1363c:	popne	{r4, pc}
   13640:	bl	13b64 <abort@plt+0x2f18>
   13644:	push	{r4, lr}
   13648:	bl	13bec <abort@plt+0x2fa0>
   1364c:	cmp	r0, #0
   13650:	popne	{r4, pc}
   13654:	bl	13b64 <abort@plt+0x2f18>
   13658:	push	{r4, r5, r6, lr}
   1365c:	mov	r5, r0
   13660:	mov	r4, r1
   13664:	bl	13c18 <abort@plt+0x2fcc>
   13668:	cmp	r0, #0
   1366c:	popne	{r4, r5, r6, pc}
   13670:	adds	r4, r4, #0
   13674:	movne	r4, #1
   13678:	cmp	r5, #0
   1367c:	orreq	r4, r4, #1
   13680:	cmp	r4, #0
   13684:	popeq	{r4, r5, r6, pc}
   13688:	bl	13b64 <abort@plt+0x2f18>
   1368c:	push	{r4, lr}
   13690:	cmp	r1, #0
   13694:	orreq	r1, r1, #1
   13698:	bl	13c18 <abort@plt+0x2fcc>
   1369c:	cmp	r0, #0
   136a0:	popne	{r4, pc}
   136a4:	bl	13b64 <abort@plt+0x2f18>
   136a8:	push	{r4, r5, r6, lr}
   136ac:	mov	r6, r0
   136b0:	mov	r5, r1
   136b4:	mov	r4, r2
   136b8:	bl	13f70 <abort@plt+0x3324>
   136bc:	cmp	r0, #0
   136c0:	popne	{r4, r5, r6, pc}
   136c4:	cmp	r6, #0
   136c8:	beq	136d8 <abort@plt+0x2a8c>
   136cc:	cmp	r5, #0
   136d0:	cmpne	r4, #0
   136d4:	popeq	{r4, r5, r6, pc}
   136d8:	bl	13b64 <abort@plt+0x2f18>
   136dc:	b	136a8 <abort@plt+0x2a5c>
   136e0:	cmp	r2, #0
   136e4:	cmpne	r1, #0
   136e8:	moveq	r2, #1
   136ec:	moveq	r1, r2
   136f0:	push	{r4, lr}
   136f4:	bl	13f70 <abort@plt+0x3324>
   136f8:	cmp	r0, #0
   136fc:	popne	{r4, pc}
   13700:	bl	13b64 <abort@plt+0x2f18>
   13704:	mov	r2, r1
   13708:	mov	r1, r0
   1370c:	mov	r0, #0
   13710:	b	136a8 <abort@plt+0x2a5c>
   13714:	mov	r2, r1
   13718:	mov	r1, r0
   1371c:	mov	r0, #0
   13720:	b	136e0 <abort@plt+0x2a94>
   13724:	push	{r4, r5, r6, lr}
   13728:	subs	r6, r0, #0
   1372c:	sub	sp, sp, #8
   13730:	mov	r5, r1
   13734:	ldr	r4, [r1]
   13738:	beq	13774 <abort@plt+0x2b28>
   1373c:	lsr	r1, r4, #1
   13740:	add	r3, r1, #1
   13744:	mvn	r3, r3
   13748:	cmp	r4, r3
   1374c:	bhi	13770 <abort@plt+0x2b24>
   13750:	add	r4, r4, #1
   13754:	add	r4, r4, r1
   13758:	mov	r0, r6
   1375c:	mov	r1, r4
   13760:	bl	136a8 <abort@plt+0x2a5c>
   13764:	str	r4, [r5]
   13768:	add	sp, sp, #8
   1376c:	pop	{r4, r5, r6, pc}
   13770:	bl	13b64 <abort@plt+0x2f18>
   13774:	cmp	r4, #0
   13778:	bne	13758 <abort@plt+0x2b0c>
   1377c:	mov	r1, r2
   13780:	mov	r0, #64	; 0x40
   13784:	str	r2, [sp, #4]
   13788:	bl	140b0 <abort@plt+0x3464>
   1378c:	ldr	r2, [sp, #4]
   13790:	cmp	r0, #0
   13794:	movne	r4, r0
   13798:	addeq	r4, r0, #1
   1379c:	b	13758 <abort@plt+0x2b0c>
   137a0:	mov	r2, #1
   137a4:	b	13724 <abort@plt+0x2ad8>
   137a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137ac:	sub	sp, sp, #12
   137b0:	ldr	r6, [r1]
   137b4:	mov	sl, r1
   137b8:	mov	r9, r0
   137bc:	asrs	r4, r6, #1
   137c0:	mov	r5, r2
   137c4:	mov	fp, r3
   137c8:	ldr	r7, [sp, #48]	; 0x30
   137cc:	bmi	13938 <abort@plt+0x2cec>
   137d0:	mvn	r3, #-2147483648	; 0x80000000
   137d4:	sub	r3, r3, r4
   137d8:	cmp	r6, r3
   137dc:	movle	r3, #0
   137e0:	movgt	r3, #1
   137e4:	mvn	r8, fp
   137e8:	cmp	r3, #0
   137ec:	addeq	r4, r4, r6
   137f0:	mvnne	r4, #-2147483648	; 0x80000000
   137f4:	lsr	r8, r8, #31
   137f8:	cmp	fp, r4
   137fc:	movge	r3, #0
   13800:	andlt	r3, r8, #1
   13804:	cmp	r3, #0
   13808:	beq	138f0 <abort@plt+0x2ca4>
   1380c:	cmp	r7, #0
   13810:	blt	139c0 <abort@plt+0x2d74>
   13814:	bne	139b8 <abort@plt+0x2d6c>
   13818:	mov	r2, #64	; 0x40
   1381c:	mov	r1, r7
   13820:	mov	r0, r2
   13824:	str	r2, [sp, #4]
   13828:	bl	142bc <abort@plt+0x3670>
   1382c:	ldr	r2, [sp, #4]
   13830:	mov	r1, r7
   13834:	mov	r4, r0
   13838:	mov	r0, r2
   1383c:	bl	144dc <abort@plt+0x3890>
   13840:	ldr	r2, [sp, #4]
   13844:	sub	r1, r2, r1
   13848:	cmp	r9, #0
   1384c:	sub	r3, r4, r6
   13850:	streq	r9, [sl]
   13854:	cmp	r3, r5
   13858:	bge	138dc <abort@plt+0x2c90>
   1385c:	cmp	r5, #0
   13860:	blt	1394c <abort@plt+0x2d00>
   13864:	cmp	r6, #0
   13868:	blt	13888 <abort@plt+0x2c3c>
   1386c:	mvn	r3, #-2147483648	; 0x80000000
   13870:	sub	r3, r3, r5
   13874:	cmp	r6, r3
   13878:	movle	r3, #0
   1387c:	movgt	r3, #1
   13880:	cmp	r3, #0
   13884:	bne	13a48 <abort@plt+0x2dfc>
   13888:	add	r5, r6, r5
   1388c:	cmp	fp, r5
   13890:	movge	r8, #0
   13894:	andlt	r8, r8, #1
   13898:	cmp	r8, #0
   1389c:	mov	r4, r5
   138a0:	bne	13a48 <abort@plt+0x2dfc>
   138a4:	cmp	r7, #0
   138a8:	blt	13960 <abort@plt+0x2d14>
   138ac:	beq	138d8 <abort@plt+0x2c8c>
   138b0:	cmp	r5, #0
   138b4:	blt	13a08 <abort@plt+0x2dbc>
   138b8:	mov	r1, r7
   138bc:	mvn	r0, #-2147483648	; 0x80000000
   138c0:	bl	142bc <abort@plt+0x3670>
   138c4:	cmp	r5, r0
   138c8:	movle	r0, #0
   138cc:	movgt	r0, #1
   138d0:	cmp	r0, #0
   138d4:	bne	13a48 <abort@plt+0x2dfc>
   138d8:	mul	r1, r5, r7
   138dc:	mov	r0, r9
   138e0:	bl	13658 <abort@plt+0x2a0c>
   138e4:	str	r4, [sl]
   138e8:	add	sp, sp, #12
   138ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138f0:	cmp	r7, #0
   138f4:	blt	1398c <abort@plt+0x2d40>
   138f8:	beq	13818 <abort@plt+0x2bcc>
   138fc:	cmp	r4, #0
   13900:	blt	139c8 <abort@plt+0x2d7c>
   13904:	mov	r1, r7
   13908:	mvn	r0, #-2147483648	; 0x80000000
   1390c:	bl	142bc <abort@plt+0x3670>
   13910:	cmp	r0, r4
   13914:	movge	r0, #0
   13918:	movlt	r0, #1
   1391c:	cmp	r0, #0
   13920:	mvnne	r2, #-2147483648	; 0x80000000
   13924:	bne	1381c <abort@plt+0x2bd0>
   13928:	mul	r1, r7, r4
   1392c:	cmp	r1, #63	; 0x3f
   13930:	bgt	13848 <abort@plt+0x2bfc>
   13934:	b	13818 <abort@plt+0x2bcc>
   13938:	rsb	r3, r4, #-2147483648	; 0x80000000
   1393c:	cmp	r6, r3
   13940:	movge	r3, #0
   13944:	movlt	r3, #1
   13948:	b	137e4 <abort@plt+0x2b98>
   1394c:	rsb	r3, r5, #-2147483648	; 0x80000000
   13950:	cmp	r6, r3
   13954:	movge	r3, #0
   13958:	movlt	r3, #1
   1395c:	b	13880 <abort@plt+0x2c34>
   13960:	cmp	r5, #0
   13964:	blt	139ec <abort@plt+0x2da0>
   13968:	cmn	r7, #1
   1396c:	beq	138d8 <abort@plt+0x2c8c>
   13970:	mov	r1, r7
   13974:	mov	r0, #-2147483648	; 0x80000000
   13978:	bl	142bc <abort@plt+0x3670>
   1397c:	cmp	r5, r0
   13980:	movle	r0, #0
   13984:	movgt	r0, #1
   13988:	b	138d0 <abort@plt+0x2c84>
   1398c:	cmp	r4, #0
   13990:	blt	13a2c <abort@plt+0x2de0>
   13994:	cmn	r7, #1
   13998:	beq	13928 <abort@plt+0x2cdc>
   1399c:	mov	r1, r7
   139a0:	mov	r0, #-2147483648	; 0x80000000
   139a4:	bl	142bc <abort@plt+0x3670>
   139a8:	cmp	r0, r4
   139ac:	movge	r0, #0
   139b0:	movlt	r0, #1
   139b4:	b	1391c <abort@plt+0x2cd0>
   139b8:	mov	r4, fp
   139bc:	b	13904 <abort@plt+0x2cb8>
   139c0:	mov	r4, fp
   139c4:	b	13994 <abort@plt+0x2d48>
   139c8:	cmn	r4, #1
   139cc:	beq	13928 <abort@plt+0x2cdc>
   139d0:	mov	r1, r4
   139d4:	mov	r0, #-2147483648	; 0x80000000
   139d8:	bl	142bc <abort@plt+0x3670>
   139dc:	cmp	r7, r0
   139e0:	movle	r0, #0
   139e4:	movgt	r0, #1
   139e8:	b	1391c <abort@plt+0x2cd0>
   139ec:	mov	r1, r7
   139f0:	mvn	r0, #-2147483648	; 0x80000000
   139f4:	bl	142bc <abort@plt+0x3670>
   139f8:	cmp	r5, r0
   139fc:	movge	r0, #0
   13a00:	movlt	r0, #1
   13a04:	b	138d0 <abort@plt+0x2c84>
   13a08:	cmn	r5, #1
   13a0c:	beq	138d8 <abort@plt+0x2c8c>
   13a10:	mov	r1, r5
   13a14:	mov	r0, #-2147483648	; 0x80000000
   13a18:	bl	142bc <abort@plt+0x3670>
   13a1c:	cmp	r7, r0
   13a20:	movle	r0, #0
   13a24:	movgt	r0, #1
   13a28:	b	138d0 <abort@plt+0x2c84>
   13a2c:	mov	r1, r7
   13a30:	mvn	r0, #-2147483648	; 0x80000000
   13a34:	bl	142bc <abort@plt+0x3670>
   13a38:	cmp	r0, r4
   13a3c:	movle	r0, #0
   13a40:	movgt	r0, #1
   13a44:	b	1391c <abort@plt+0x2cd0>
   13a48:	bl	13b64 <abort@plt+0x2f18>
   13a4c:	push	{r4, lr}
   13a50:	mov	r1, #1
   13a54:	bl	13ba4 <abort@plt+0x2f58>
   13a58:	cmp	r0, #0
   13a5c:	popne	{r4, pc}
   13a60:	bl	13b64 <abort@plt+0x2f18>
   13a64:	push	{r4, lr}
   13a68:	mov	r1, #1
   13a6c:	bl	13ba4 <abort@plt+0x2f58>
   13a70:	cmp	r0, #0
   13a74:	popne	{r4, pc}
   13a78:	bl	13b64 <abort@plt+0x2f18>
   13a7c:	push	{r4, lr}
   13a80:	bl	13ba4 <abort@plt+0x2f58>
   13a84:	cmp	r0, #0
   13a88:	popne	{r4, pc}
   13a8c:	bl	13b64 <abort@plt+0x2f18>
   13a90:	push	{r4, lr}
   13a94:	bl	13ba4 <abort@plt+0x2f58>
   13a98:	cmp	r0, #0
   13a9c:	popne	{r4, pc}
   13aa0:	bl	13b64 <abort@plt+0x2f18>
   13aa4:	push	{r4, r5, r6, lr}
   13aa8:	mov	r6, r0
   13aac:	mov	r0, r1
   13ab0:	mov	r4, r1
   13ab4:	bl	13bec <abort@plt+0x2fa0>
   13ab8:	subs	r5, r0, #0
   13abc:	beq	13ad4 <abort@plt+0x2e88>
   13ac0:	mov	r2, r4
   13ac4:	mov	r1, r6
   13ac8:	bl	10ab4 <memcpy@plt>
   13acc:	mov	r0, r5
   13ad0:	pop	{r4, r5, r6, pc}
   13ad4:	bl	13b64 <abort@plt+0x2f18>
   13ad8:	push	{r4, r5, r6, lr}
   13adc:	mov	r6, r0
   13ae0:	mov	r0, r1
   13ae4:	mov	r4, r1
   13ae8:	bl	13bec <abort@plt+0x2fa0>
   13aec:	subs	r5, r0, #0
   13af0:	beq	13b08 <abort@plt+0x2ebc>
   13af4:	mov	r2, r4
   13af8:	mov	r1, r6
   13afc:	bl	10ab4 <memcpy@plt>
   13b00:	mov	r0, r5
   13b04:	pop	{r4, r5, r6, pc}
   13b08:	bl	13b64 <abort@plt+0x2f18>
   13b0c:	push	{r4, r5, r6, lr}
   13b10:	mov	r6, r0
   13b14:	add	r0, r1, #1
   13b18:	mov	r4, r1
   13b1c:	bl	13bec <abort@plt+0x2fa0>
   13b20:	subs	r5, r0, #0
   13b24:	beq	13b44 <abort@plt+0x2ef8>
   13b28:	mov	r3, #0
   13b2c:	mov	r1, r6
   13b30:	strb	r3, [r5, r4]
   13b34:	mov	r2, r4
   13b38:	bl	10ab4 <memcpy@plt>
   13b3c:	mov	r0, r5
   13b40:	pop	{r4, r5, r6, pc}
   13b44:	bl	13b64 <abort@plt+0x2f18>
   13b48:	push	{r4, lr}
   13b4c:	mov	r4, r0
   13b50:	bl	10ba4 <strlen@plt>
   13b54:	add	r1, r0, #1
   13b58:	mov	r0, r4
   13b5c:	pop	{r4, lr}
   13b60:	b	13aa4 <abort@plt+0x2e58>
   13b64:	ldr	r3, [pc, #44]	; 13b98 <abort@plt+0x2f4c>
   13b68:	push	{r4, lr}
   13b6c:	mov	r2, #5
   13b70:	ldr	r1, [pc, #36]	; 13b9c <abort@plt+0x2f50>
   13b74:	mov	r0, #0
   13b78:	ldr	r4, [r3]
   13b7c:	bl	10ae4 <dcgettext@plt>
   13b80:	ldr	r2, [pc, #24]	; 13ba0 <abort@plt+0x2f54>
   13b84:	mov	r1, #0
   13b88:	mov	r3, r0
   13b8c:	mov	r0, r4
   13b90:	bl	10b50 <error@plt>
   13b94:	bl	10c4c <abort@plt>
   13b98:	andeq	r5, r2, r4, asr #1
   13b9c:	andeq	r4, r1, r0, ror #26
   13ba0:	andeq	r4, r1, r4, lsr #18
   13ba4:	cmp	r1, #0
   13ba8:	cmpne	r0, #0
   13bac:	moveq	r1, #1
   13bb0:	moveq	r0, r1
   13bb4:	umull	r2, r3, r0, r1
   13bb8:	adds	r3, r3, #0
   13bbc:	movne	r3, #1
   13bc0:	cmp	r2, #0
   13bc4:	blt	13bd4 <abort@plt+0x2f88>
   13bc8:	cmp	r3, #0
   13bcc:	bne	13bd4 <abort@plt+0x2f88>
   13bd0:	b	10a60 <calloc@plt>
   13bd4:	push	{r4, lr}
   13bd8:	bl	10bb0 <__errno_location@plt>
   13bdc:	mov	r3, #12
   13be0:	str	r3, [r0]
   13be4:	mov	r0, #0
   13be8:	pop	{r4, pc}
   13bec:	cmp	r0, #0
   13bf0:	moveq	r0, #1
   13bf4:	cmp	r0, #0
   13bf8:	blt	13c00 <abort@plt+0x2fb4>
   13bfc:	b	10b5c <malloc@plt>
   13c00:	push	{r4, lr}
   13c04:	bl	10bb0 <__errno_location@plt>
   13c08:	mov	r3, #12
   13c0c:	str	r3, [r0]
   13c10:	mov	r0, #0
   13c14:	pop	{r4, pc}
   13c18:	cmp	r0, #0
   13c1c:	beq	13c40 <abort@plt+0x2ff4>
   13c20:	cmp	r1, #0
   13c24:	push	{lr}		; (str lr, [sp, #-4]!)
   13c28:	sub	sp, sp, #12
   13c2c:	beq	13c48 <abort@plt+0x2ffc>
   13c30:	blt	13c60 <abort@plt+0x3014>
   13c34:	add	sp, sp, #12
   13c38:	pop	{lr}		; (ldr lr, [sp], #4)
   13c3c:	b	10af0 <realloc@plt>
   13c40:	mov	r0, r1
   13c44:	b	13bec <abort@plt+0x2fa0>
   13c48:	str	r1, [sp, #4]
   13c4c:	bl	13df0 <abort@plt+0x31a4>
   13c50:	ldr	r3, [sp, #4]
   13c54:	mov	r0, r3
   13c58:	add	sp, sp, #12
   13c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c60:	bl	10bb0 <__errno_location@plt>
   13c64:	mov	r2, #12
   13c68:	mov	r3, #0
   13c6c:	str	r2, [r0]
   13c70:	b	13c54 <abort@plt+0x3008>
   13c74:	push	{r4, r5, r6, lr}
   13c78:	mov	r4, r0
   13c7c:	bl	10b38 <__fpending@plt>
   13c80:	ldr	r5, [r4]
   13c84:	and	r5, r5, #32
   13c88:	mov	r6, r0
   13c8c:	mov	r0, r4
   13c90:	bl	13cf0 <abort@plt+0x30a4>
   13c94:	cmp	r5, #0
   13c98:	mov	r4, r0
   13c9c:	bne	13cbc <abort@plt+0x3070>
   13ca0:	cmp	r0, #0
   13ca4:	beq	13cb4 <abort@plt+0x3068>
   13ca8:	cmp	r6, #0
   13cac:	beq	13cd8 <abort@plt+0x308c>
   13cb0:	mvn	r4, #0
   13cb4:	mov	r0, r4
   13cb8:	pop	{r4, r5, r6, pc}
   13cbc:	cmp	r0, #0
   13cc0:	bne	13cb0 <abort@plt+0x3064>
   13cc4:	bl	10bb0 <__errno_location@plt>
   13cc8:	str	r4, [r0]
   13ccc:	mvn	r4, #0
   13cd0:	mov	r0, r4
   13cd4:	pop	{r4, r5, r6, pc}
   13cd8:	bl	10bb0 <__errno_location@plt>
   13cdc:	ldr	r4, [r0]
   13ce0:	subs	r4, r4, #9
   13ce4:	mvnne	r4, #0
   13ce8:	mov	r0, r4
   13cec:	pop	{r4, r5, r6, pc}
   13cf0:	push	{r4, r5, lr}
   13cf4:	sub	sp, sp, #12
   13cf8:	mov	r4, r0
   13cfc:	bl	10be0 <fileno@plt>
   13d00:	cmp	r0, #0
   13d04:	mov	r0, r4
   13d08:	blt	13d84 <abort@plt+0x3138>
   13d0c:	bl	10b74 <__freading@plt>
   13d10:	cmp	r0, #0
   13d14:	bne	13d50 <abort@plt+0x3104>
   13d18:	mov	r0, r4
   13d1c:	bl	13d90 <abort@plt+0x3144>
   13d20:	cmp	r0, #0
   13d24:	beq	13d80 <abort@plt+0x3134>
   13d28:	bl	10bb0 <__errno_location@plt>
   13d2c:	mov	r5, r0
   13d30:	mov	r0, r4
   13d34:	ldr	r4, [r5]
   13d38:	bl	10bf8 <fclose@plt>
   13d3c:	cmp	r4, #0
   13d40:	mvnne	r0, #0
   13d44:	strne	r4, [r5]
   13d48:	add	sp, sp, #12
   13d4c:	pop	{r4, r5, pc}
   13d50:	mov	r0, r4
   13d54:	bl	10be0 <fileno@plt>
   13d58:	mov	r3, #1
   13d5c:	str	r3, [sp]
   13d60:	mov	r2, #0
   13d64:	mov	r3, #0
   13d68:	bl	10b20 <lseek64@plt>
   13d6c:	mvn	r3, #0
   13d70:	mvn	r2, #0
   13d74:	cmp	r1, r3
   13d78:	cmpeq	r0, r2
   13d7c:	bne	13d18 <abort@plt+0x30cc>
   13d80:	mov	r0, r4
   13d84:	add	sp, sp, #12
   13d88:	pop	{r4, r5, lr}
   13d8c:	b	10bf8 <fclose@plt>
   13d90:	push	{r4, lr}
   13d94:	subs	r4, r0, #0
   13d98:	sub	sp, sp, #8
   13d9c:	beq	13db8 <abort@plt+0x316c>
   13da0:	bl	10b74 <__freading@plt>
   13da4:	cmp	r0, #0
   13da8:	beq	13db8 <abort@plt+0x316c>
   13dac:	ldr	r3, [r4]
   13db0:	tst	r3, #256	; 0x100
   13db4:	bne	13dc8 <abort@plt+0x317c>
   13db8:	mov	r0, r4
   13dbc:	add	sp, sp, #8
   13dc0:	pop	{r4, lr}
   13dc4:	b	10a90 <fflush@plt>
   13dc8:	mov	r3, #1
   13dcc:	str	r3, [sp]
   13dd0:	mov	r2, #0
   13dd4:	mov	r3, #0
   13dd8:	mov	r0, r4
   13ddc:	bl	13e48 <abort@plt+0x31fc>
   13de0:	mov	r0, r4
   13de4:	add	sp, sp, #8
   13de8:	pop	{r4, lr}
   13dec:	b	10a90 <fflush@plt>
   13df0:	push	{r4, r5, lr}
   13df4:	sub	sp, sp, #12
   13df8:	mov	r5, r0
   13dfc:	bl	10bb0 <__errno_location@plt>
   13e00:	mov	r2, #0
   13e04:	mov	r4, r0
   13e08:	ldr	r3, [r0]
   13e0c:	str	r2, [r4]
   13e10:	mov	r0, r5
   13e14:	str	r3, [sp]
   13e18:	str	r3, [sp, #4]
   13e1c:	bl	10a9c <free@plt>
   13e20:	ldr	r3, [r4]
   13e24:	add	r2, sp, #8
   13e28:	cmp	r3, #0
   13e2c:	moveq	r3, #4
   13e30:	movne	r3, #0
   13e34:	add	r3, r2, r3
   13e38:	ldr	r3, [r3, #-8]
   13e3c:	str	r3, [r4]
   13e40:	add	sp, sp, #12
   13e44:	pop	{r4, r5, pc}
   13e48:	push	{r4, r5, r6, r7, r8, lr}
   13e4c:	sub	sp, sp, #8
   13e50:	ldmib	r0, {ip, lr}
   13e54:	mov	r4, r0
   13e58:	ldr	r5, [sp, #32]
   13e5c:	cmp	lr, ip
   13e60:	beq	13e78 <abort@plt+0x322c>
   13e64:	str	r5, [sp, #32]
   13e68:	mov	r0, r4
   13e6c:	add	sp, sp, #8
   13e70:	pop	{r4, r5, r6, r7, r8, lr}
   13e74:	b	10c04 <fseeko64@plt>
   13e78:	ldr	lr, [r0, #20]
   13e7c:	ldr	ip, [r0, #16]
   13e80:	cmp	lr, ip
   13e84:	bne	13e64 <abort@plt+0x3218>
   13e88:	ldr	r8, [r0, #36]	; 0x24
   13e8c:	cmp	r8, #0
   13e90:	bne	13e64 <abort@plt+0x3218>
   13e94:	mov	r6, r2
   13e98:	mov	r7, r3
   13e9c:	bl	10be0 <fileno@plt>
   13ea0:	mov	r2, r6
   13ea4:	mov	r3, r7
   13ea8:	str	r5, [sp]
   13eac:	bl	10b20 <lseek64@plt>
   13eb0:	mvn	r3, #0
   13eb4:	mvn	r2, #0
   13eb8:	cmp	r1, r3
   13ebc:	cmpeq	r0, r2
   13ec0:	beq	13ee0 <abort@plt+0x3294>
   13ec4:	ldr	r3, [r4]
   13ec8:	strd	r0, [r4, #80]	; 0x50
   13ecc:	mov	r0, r8
   13ed0:	bic	r3, r3, #16
   13ed4:	str	r3, [r4]
   13ed8:	add	sp, sp, #8
   13edc:	pop	{r4, r5, r6, r7, r8, pc}
   13ee0:	mvn	r0, #0
   13ee4:	b	13ed8 <abort@plt+0x328c>
   13ee8:	push	{r4, lr}
   13eec:	mov	r0, #14
   13ef0:	bl	10c28 <nl_langinfo@plt>
   13ef4:	cmp	r0, #0
   13ef8:	beq	13f10 <abort@plt+0x32c4>
   13efc:	ldrb	r2, [r0]
   13f00:	ldr	r3, [pc, #16]	; 13f18 <abort@plt+0x32cc>
   13f04:	cmp	r2, #0
   13f08:	moveq	r0, r3
   13f0c:	pop	{r4, pc}
   13f10:	ldr	r0, [pc]	; 13f18 <abort@plt+0x32cc>
   13f14:	pop	{r4, pc}
   13f18:	andeq	r4, r1, r4, ror sp
   13f1c:	push	{r4, r5, r6, r7, lr}
   13f20:	subs	r6, r0, #0
   13f24:	sub	sp, sp, #12
   13f28:	addeq	r6, sp, #4
   13f2c:	mov	r0, r6
   13f30:	mov	r5, r2
   13f34:	mov	r7, r1
   13f38:	bl	10b44 <mbrtowc@plt>
   13f3c:	cmp	r5, #0
   13f40:	cmnne	r0, #3
   13f44:	mov	r4, r0
   13f48:	bls	13f64 <abort@plt+0x3318>
   13f4c:	mov	r0, #0
   13f50:	bl	13fbc <abort@plt+0x3370>
   13f54:	cmp	r0, #0
   13f58:	moveq	r4, #1
   13f5c:	ldrbeq	r3, [r7]
   13f60:	streq	r3, [r6]
   13f64:	mov	r0, r4
   13f68:	add	sp, sp, #12
   13f6c:	pop	{r4, r5, r6, r7, pc}
   13f70:	push	{r4, r5, r6, lr}
   13f74:	subs	r4, r2, #0
   13f78:	mov	r6, r0
   13f7c:	mov	r5, r1
   13f80:	beq	13fac <abort@plt+0x3360>
   13f84:	mov	r1, r4
   13f88:	mvn	r0, #0
   13f8c:	bl	140b0 <abort@plt+0x3464>
   13f90:	cmp	r0, r5
   13f94:	bcs	13fac <abort@plt+0x3360>
   13f98:	bl	10bb0 <__errno_location@plt>
   13f9c:	mov	r3, #12
   13fa0:	str	r3, [r0]
   13fa4:	mov	r0, #0
   13fa8:	pop	{r4, r5, r6, pc}
   13fac:	mul	r1, r5, r4
   13fb0:	mov	r0, r6
   13fb4:	pop	{r4, r5, r6, lr}
   13fb8:	b	13c18 <abort@plt+0x2fcc>
   13fbc:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc0:	sub	sp, sp, #268	; 0x10c
   13fc4:	add	r1, sp, #4
   13fc8:	ldr	r2, [pc, #60]	; 1400c <abort@plt+0x33c0>
   13fcc:	bl	14018 <abort@plt+0x33cc>
   13fd0:	cmp	r0, #0
   13fd4:	movne	r0, #0
   13fd8:	bne	14004 <abort@plt+0x33b8>
   13fdc:	ldr	r1, [pc, #44]	; 14010 <abort@plt+0x33c4>
   13fe0:	add	r0, sp, #4
   13fe4:	bl	10a84 <strcmp@plt>
   13fe8:	cmp	r0, #0
   13fec:	beq	14004 <abort@plt+0x33b8>
   13ff0:	add	r0, sp, #4
   13ff4:	ldr	r1, [pc, #24]	; 14014 <abort@plt+0x33c8>
   13ff8:	bl	10a84 <strcmp@plt>
   13ffc:	adds	r0, r0, #0
   14000:	movne	r0, #1
   14004:	add	sp, sp, #268	; 0x10c
   14008:	pop	{pc}		; (ldr pc, [sp], #4)
   1400c:	andeq	r0, r0, r1, lsl #2
   14010:	andeq	r4, r1, ip, ror sp
   14014:	andeq	r4, r1, r0, lsl #27
   14018:	push	{r4, r5, r6, lr}
   1401c:	mov	r5, r1
   14020:	mov	r1, #0
   14024:	mov	r4, r2
   14028:	bl	10c10 <setlocale@plt>
   1402c:	subs	r6, r0, #0
   14030:	beq	1408c <abort@plt+0x3440>
   14034:	bl	10ba4 <strlen@plt>
   14038:	cmp	r4, r0
   1403c:	bhi	14074 <abort@plt+0x3428>
   14040:	cmp	r4, #0
   14044:	bne	14050 <abort@plt+0x3404>
   14048:	mov	r0, #34	; 0x22
   1404c:	pop	{r4, r5, r6, pc}
   14050:	sub	r4, r4, #1
   14054:	mov	r1, r6
   14058:	mov	r2, r4
   1405c:	mov	r0, r5
   14060:	bl	10ab4 <memcpy@plt>
   14064:	mov	r3, #0
   14068:	strb	r3, [r5, r4]
   1406c:	mov	r0, #34	; 0x22
   14070:	pop	{r4, r5, r6, pc}
   14074:	add	r2, r0, #1
   14078:	mov	r1, r6
   1407c:	mov	r0, r5
   14080:	bl	10ab4 <memcpy@plt>
   14084:	mov	r0, #0
   14088:	pop	{r4, r5, r6, pc}
   1408c:	cmp	r4, #0
   14090:	beq	140a0 <abort@plt+0x3454>
   14094:	strb	r6, [r5]
   14098:	mov	r0, #22
   1409c:	pop	{r4, r5, r6, pc}
   140a0:	mov	r0, #22
   140a4:	pop	{r4, r5, r6, pc}
   140a8:	mov	r1, #0
   140ac:	b	10c10 <setlocale@plt>
   140b0:	subs	r2, r1, #1
   140b4:	bxeq	lr
   140b8:	bcc	14290 <abort@plt+0x3644>
   140bc:	cmp	r0, r1
   140c0:	bls	14274 <abort@plt+0x3628>
   140c4:	tst	r1, r2
   140c8:	beq	14280 <abort@plt+0x3634>
   140cc:	clz	r3, r0
   140d0:	clz	r2, r1
   140d4:	sub	r3, r2, r3
   140d8:	rsbs	r3, r3, #31
   140dc:	addne	r3, r3, r3, lsl #1
   140e0:	mov	r2, #0
   140e4:	addne	pc, pc, r3, lsl #2
   140e8:	nop			; (mov r0, r0)
   140ec:	cmp	r0, r1, lsl #31
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #31
   140f8:	cmp	r0, r1, lsl #30
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #30
   14104:	cmp	r0, r1, lsl #29
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #29
   14110:	cmp	r0, r1, lsl #28
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #28
   1411c:	cmp	r0, r1, lsl #27
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #27
   14128:	cmp	r0, r1, lsl #26
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1, lsl #26
   14134:	cmp	r0, r1, lsl #25
   14138:	adc	r2, r2, r2
   1413c:	subcs	r0, r0, r1, lsl #25
   14140:	cmp	r0, r1, lsl #24
   14144:	adc	r2, r2, r2
   14148:	subcs	r0, r0, r1, lsl #24
   1414c:	cmp	r0, r1, lsl #23
   14150:	adc	r2, r2, r2
   14154:	subcs	r0, r0, r1, lsl #23
   14158:	cmp	r0, r1, lsl #22
   1415c:	adc	r2, r2, r2
   14160:	subcs	r0, r0, r1, lsl #22
   14164:	cmp	r0, r1, lsl #21
   14168:	adc	r2, r2, r2
   1416c:	subcs	r0, r0, r1, lsl #21
   14170:	cmp	r0, r1, lsl #20
   14174:	adc	r2, r2, r2
   14178:	subcs	r0, r0, r1, lsl #20
   1417c:	cmp	r0, r1, lsl #19
   14180:	adc	r2, r2, r2
   14184:	subcs	r0, r0, r1, lsl #19
   14188:	cmp	r0, r1, lsl #18
   1418c:	adc	r2, r2, r2
   14190:	subcs	r0, r0, r1, lsl #18
   14194:	cmp	r0, r1, lsl #17
   14198:	adc	r2, r2, r2
   1419c:	subcs	r0, r0, r1, lsl #17
   141a0:	cmp	r0, r1, lsl #16
   141a4:	adc	r2, r2, r2
   141a8:	subcs	r0, r0, r1, lsl #16
   141ac:	cmp	r0, r1, lsl #15
   141b0:	adc	r2, r2, r2
   141b4:	subcs	r0, r0, r1, lsl #15
   141b8:	cmp	r0, r1, lsl #14
   141bc:	adc	r2, r2, r2
   141c0:	subcs	r0, r0, r1, lsl #14
   141c4:	cmp	r0, r1, lsl #13
   141c8:	adc	r2, r2, r2
   141cc:	subcs	r0, r0, r1, lsl #13
   141d0:	cmp	r0, r1, lsl #12
   141d4:	adc	r2, r2, r2
   141d8:	subcs	r0, r0, r1, lsl #12
   141dc:	cmp	r0, r1, lsl #11
   141e0:	adc	r2, r2, r2
   141e4:	subcs	r0, r0, r1, lsl #11
   141e8:	cmp	r0, r1, lsl #10
   141ec:	adc	r2, r2, r2
   141f0:	subcs	r0, r0, r1, lsl #10
   141f4:	cmp	r0, r1, lsl #9
   141f8:	adc	r2, r2, r2
   141fc:	subcs	r0, r0, r1, lsl #9
   14200:	cmp	r0, r1, lsl #8
   14204:	adc	r2, r2, r2
   14208:	subcs	r0, r0, r1, lsl #8
   1420c:	cmp	r0, r1, lsl #7
   14210:	adc	r2, r2, r2
   14214:	subcs	r0, r0, r1, lsl #7
   14218:	cmp	r0, r1, lsl #6
   1421c:	adc	r2, r2, r2
   14220:	subcs	r0, r0, r1, lsl #6
   14224:	cmp	r0, r1, lsl #5
   14228:	adc	r2, r2, r2
   1422c:	subcs	r0, r0, r1, lsl #5
   14230:	cmp	r0, r1, lsl #4
   14234:	adc	r2, r2, r2
   14238:	subcs	r0, r0, r1, lsl #4
   1423c:	cmp	r0, r1, lsl #3
   14240:	adc	r2, r2, r2
   14244:	subcs	r0, r0, r1, lsl #3
   14248:	cmp	r0, r1, lsl #2
   1424c:	adc	r2, r2, r2
   14250:	subcs	r0, r0, r1, lsl #2
   14254:	cmp	r0, r1, lsl #1
   14258:	adc	r2, r2, r2
   1425c:	subcs	r0, r0, r1, lsl #1
   14260:	cmp	r0, r1
   14264:	adc	r2, r2, r2
   14268:	subcs	r0, r0, r1
   1426c:	mov	r0, r2
   14270:	bx	lr
   14274:	moveq	r0, #1
   14278:	movne	r0, #0
   1427c:	bx	lr
   14280:	clz	r2, r1
   14284:	rsb	r2, r2, #31
   14288:	lsr	r0, r0, r2
   1428c:	bx	lr
   14290:	cmp	r0, #0
   14294:	mvnne	r0, #0
   14298:	b	144fc <abort@plt+0x38b0>
   1429c:	cmp	r1, #0
   142a0:	beq	14290 <abort@plt+0x3644>
   142a4:	push	{r0, r1, lr}
   142a8:	bl	140b0 <abort@plt+0x3464>
   142ac:	pop	{r1, r2, lr}
   142b0:	mul	r3, r2, r0
   142b4:	sub	r1, r1, r3
   142b8:	bx	lr
   142bc:	cmp	r1, #0
   142c0:	beq	144cc <abort@plt+0x3880>
   142c4:	eor	ip, r0, r1
   142c8:	rsbmi	r1, r1, #0
   142cc:	subs	r2, r1, #1
   142d0:	beq	14498 <abort@plt+0x384c>
   142d4:	movs	r3, r0
   142d8:	rsbmi	r3, r0, #0
   142dc:	cmp	r3, r1
   142e0:	bls	144a4 <abort@plt+0x3858>
   142e4:	tst	r1, r2
   142e8:	beq	144b4 <abort@plt+0x3868>
   142ec:	clz	r2, r3
   142f0:	clz	r0, r1
   142f4:	sub	r2, r0, r2
   142f8:	rsbs	r2, r2, #31
   142fc:	addne	r2, r2, r2, lsl #1
   14300:	mov	r0, #0
   14304:	addne	pc, pc, r2, lsl #2
   14308:	nop			; (mov r0, r0)
   1430c:	cmp	r3, r1, lsl #31
   14310:	adc	r0, r0, r0
   14314:	subcs	r3, r3, r1, lsl #31
   14318:	cmp	r3, r1, lsl #30
   1431c:	adc	r0, r0, r0
   14320:	subcs	r3, r3, r1, lsl #30
   14324:	cmp	r3, r1, lsl #29
   14328:	adc	r0, r0, r0
   1432c:	subcs	r3, r3, r1, lsl #29
   14330:	cmp	r3, r1, lsl #28
   14334:	adc	r0, r0, r0
   14338:	subcs	r3, r3, r1, lsl #28
   1433c:	cmp	r3, r1, lsl #27
   14340:	adc	r0, r0, r0
   14344:	subcs	r3, r3, r1, lsl #27
   14348:	cmp	r3, r1, lsl #26
   1434c:	adc	r0, r0, r0
   14350:	subcs	r3, r3, r1, lsl #26
   14354:	cmp	r3, r1, lsl #25
   14358:	adc	r0, r0, r0
   1435c:	subcs	r3, r3, r1, lsl #25
   14360:	cmp	r3, r1, lsl #24
   14364:	adc	r0, r0, r0
   14368:	subcs	r3, r3, r1, lsl #24
   1436c:	cmp	r3, r1, lsl #23
   14370:	adc	r0, r0, r0
   14374:	subcs	r3, r3, r1, lsl #23
   14378:	cmp	r3, r1, lsl #22
   1437c:	adc	r0, r0, r0
   14380:	subcs	r3, r3, r1, lsl #22
   14384:	cmp	r3, r1, lsl #21
   14388:	adc	r0, r0, r0
   1438c:	subcs	r3, r3, r1, lsl #21
   14390:	cmp	r3, r1, lsl #20
   14394:	adc	r0, r0, r0
   14398:	subcs	r3, r3, r1, lsl #20
   1439c:	cmp	r3, r1, lsl #19
   143a0:	adc	r0, r0, r0
   143a4:	subcs	r3, r3, r1, lsl #19
   143a8:	cmp	r3, r1, lsl #18
   143ac:	adc	r0, r0, r0
   143b0:	subcs	r3, r3, r1, lsl #18
   143b4:	cmp	r3, r1, lsl #17
   143b8:	adc	r0, r0, r0
   143bc:	subcs	r3, r3, r1, lsl #17
   143c0:	cmp	r3, r1, lsl #16
   143c4:	adc	r0, r0, r0
   143c8:	subcs	r3, r3, r1, lsl #16
   143cc:	cmp	r3, r1, lsl #15
   143d0:	adc	r0, r0, r0
   143d4:	subcs	r3, r3, r1, lsl #15
   143d8:	cmp	r3, r1, lsl #14
   143dc:	adc	r0, r0, r0
   143e0:	subcs	r3, r3, r1, lsl #14
   143e4:	cmp	r3, r1, lsl #13
   143e8:	adc	r0, r0, r0
   143ec:	subcs	r3, r3, r1, lsl #13
   143f0:	cmp	r3, r1, lsl #12
   143f4:	adc	r0, r0, r0
   143f8:	subcs	r3, r3, r1, lsl #12
   143fc:	cmp	r3, r1, lsl #11
   14400:	adc	r0, r0, r0
   14404:	subcs	r3, r3, r1, lsl #11
   14408:	cmp	r3, r1, lsl #10
   1440c:	adc	r0, r0, r0
   14410:	subcs	r3, r3, r1, lsl #10
   14414:	cmp	r3, r1, lsl #9
   14418:	adc	r0, r0, r0
   1441c:	subcs	r3, r3, r1, lsl #9
   14420:	cmp	r3, r1, lsl #8
   14424:	adc	r0, r0, r0
   14428:	subcs	r3, r3, r1, lsl #8
   1442c:	cmp	r3, r1, lsl #7
   14430:	adc	r0, r0, r0
   14434:	subcs	r3, r3, r1, lsl #7
   14438:	cmp	r3, r1, lsl #6
   1443c:	adc	r0, r0, r0
   14440:	subcs	r3, r3, r1, lsl #6
   14444:	cmp	r3, r1, lsl #5
   14448:	adc	r0, r0, r0
   1444c:	subcs	r3, r3, r1, lsl #5
   14450:	cmp	r3, r1, lsl #4
   14454:	adc	r0, r0, r0
   14458:	subcs	r3, r3, r1, lsl #4
   1445c:	cmp	r3, r1, lsl #3
   14460:	adc	r0, r0, r0
   14464:	subcs	r3, r3, r1, lsl #3
   14468:	cmp	r3, r1, lsl #2
   1446c:	adc	r0, r0, r0
   14470:	subcs	r3, r3, r1, lsl #2
   14474:	cmp	r3, r1, lsl #1
   14478:	adc	r0, r0, r0
   1447c:	subcs	r3, r3, r1, lsl #1
   14480:	cmp	r3, r1
   14484:	adc	r0, r0, r0
   14488:	subcs	r3, r3, r1
   1448c:	cmp	ip, #0
   14490:	rsbmi	r0, r0, #0
   14494:	bx	lr
   14498:	teq	ip, r0
   1449c:	rsbmi	r0, r0, #0
   144a0:	bx	lr
   144a4:	movcc	r0, #0
   144a8:	asreq	r0, ip, #31
   144ac:	orreq	r0, r0, #1
   144b0:	bx	lr
   144b4:	clz	r2, r1
   144b8:	rsb	r2, r2, #31
   144bc:	cmp	ip, #0
   144c0:	lsr	r0, r3, r2
   144c4:	rsbmi	r0, r0, #0
   144c8:	bx	lr
   144cc:	cmp	r0, #0
   144d0:	mvngt	r0, #-2147483648	; 0x80000000
   144d4:	movlt	r0, #-2147483648	; 0x80000000
   144d8:	b	144fc <abort@plt+0x38b0>
   144dc:	cmp	r1, #0
   144e0:	beq	144cc <abort@plt+0x3880>
   144e4:	push	{r0, r1, lr}
   144e8:	bl	142c4 <abort@plt+0x3678>
   144ec:	pop	{r1, r2, lr}
   144f0:	mul	r3, r2, r0
   144f4:	sub	r1, r1, r3
   144f8:	bx	lr
   144fc:	push	{r1, lr}
   14500:	mov	r0, #8
   14504:	bl	10a78 <raise@plt>
   14508:	pop	{r1, pc}
   1450c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14510:	mov	r7, r0
   14514:	ldr	r6, [pc, #72]	; 14564 <abort@plt+0x3918>
   14518:	ldr	r5, [pc, #72]	; 14568 <abort@plt+0x391c>
   1451c:	add	r6, pc, r6
   14520:	add	r5, pc, r5
   14524:	sub	r6, r6, r5
   14528:	mov	r8, r1
   1452c:	mov	r9, r2
   14530:	bl	10a40 <calloc@plt-0x20>
   14534:	asrs	r6, r6, #2
   14538:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1453c:	mov	r4, #0
   14540:	add	r4, r4, #1
   14544:	ldr	r3, [r5], #4
   14548:	mov	r2, r9
   1454c:	mov	r1, r8
   14550:	mov	r0, r7
   14554:	blx	r3
   14558:	cmp	r6, r4
   1455c:	bne	14540 <abort@plt+0x38f4>
   14560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14564:	andeq	r0, r1, ip, ror #19
   14568:	andeq	r0, r1, r4, ror #19
   1456c:	bx	lr
   14570:	ldr	r3, [pc, #12]	; 14584 <abort@plt+0x3938>
   14574:	mov	r1, #0
   14578:	add	r3, pc, r3
   1457c:	ldr	r2, [r3]
   14580:	b	10bbc <__cxa_atexit@plt>
   14584:	andeq	r0, r1, ip, lsr fp

Disassembly of section .fini:

00014588 <.fini>:
   14588:	push	{r3, lr}
   1458c:	pop	{r3, pc}
