
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d8c <_init>:
 d8c:	push	{r3, lr}
 d90:	bl	f8c <call_weak_fn>
 d94:	pop	{r3, pc}

Disassembly of section .plt:

00000d98 <.plt>:
 d98:	push	{lr}		; (str lr, [sp, #-4]!)
 d9c:	ldr	lr, [pc, #4]	; da8 <.plt+0x10>
 da0:	add	lr, pc, lr
 da4:	ldr	pc, [lr, #8]!
 da8:	.word	0x0002f258

00000dac <calloc@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #192512	; 0x2f000
 db4:	ldr	pc, [ip, #600]!	; 0x258

00000db8 <strcmp@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #192512	; 0x2f000
 dc0:	ldr	pc, [ip, #592]!	; 0x250

00000dc4 <__cxa_finalize@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #192512	; 0x2f000
 dcc:	ldr	pc, [ip, #584]!	; 0x248

00000dd0 <printf@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #192512	; 0x2f000
 dd8:	ldr	pc, [ip, #576]!	; 0x240

00000ddc <fopen@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #192512	; 0x2f000
 de4:	ldr	pc, [ip, #568]!	; 0x238

00000de8 <getprotobyname@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #192512	; 0x2f000
 df0:	ldr	pc, [ip, #560]!	; 0x230

00000df4 <longjmp@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #192512	; 0x2f000
 dfc:	ldr	pc, [ip, #552]!	; 0x228

00000e00 <_setjmp@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #192512	; 0x2f000
 e08:	ldr	pc, [ip, #544]!	; 0x220

00000e0c <free@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #192512	; 0x2f000
 e14:	ldr	pc, [ip, #536]!	; 0x218

00000e18 <getnetbyname@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #192512	; 0x2f000
 e20:	ldr	pc, [ip, #528]!	; 0x210

00000e24 <ferror@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #192512	; 0x2f000
 e2c:	ldr	pc, [ip, #520]!	; 0x208

00000e30 <memcpy@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #192512	; 0x2f000
 e38:	ldr	pc, [ip, #512]!	; 0x200

00000e3c <strdup@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #192512	; 0x2f000
 e44:	ldr	pc, [ip, #504]!	; 0x1f8

00000e48 <rewind@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #192512	; 0x2f000
 e50:	ldr	pc, [ip, #496]!	; 0x1f0

00000e54 <realloc@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #192512	; 0x2f000
 e5c:	ldr	pc, [ip, #488]!	; 0x1e8

00000e60 <fwrite@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #192512	; 0x2f000
 e68:	ldr	pc, [ip, #480]!	; 0x1e0

00000e6c <fread@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #192512	; 0x2f000
 e74:	ldr	pc, [ip, #472]!	; 0x1d8

00000e78 <puts@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #192512	; 0x2f000
 e80:	ldr	pc, [ip, #464]!	; 0x1d0

00000e84 <malloc@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #192512	; 0x2f000
 e8c:	ldr	pc, [ip, #456]!	; 0x1c8

00000e90 <__gmon_start__@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #192512	; 0x2f000
 e98:	ldr	pc, [ip, #448]!	; 0x1c0

00000e9c <__ctype_b_loc@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #192512	; 0x2f000
 ea4:	ldr	pc, [ip, #440]!	; 0x1b8

00000ea8 <exit@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #192512	; 0x2f000
 eb0:	ldr	pc, [ip, #432]!	; 0x1b0

00000eb4 <strlen@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #192512	; 0x2f000
 ebc:	ldr	pc, [ip, #424]!	; 0x1a8

00000ec0 <strchr@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #192512	; 0x2f000
 ec8:	ldr	pc, [ip, #416]!	; 0x1a0

00000ecc <fprintf@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #192512	; 0x2f000
 ed4:	ldr	pc, [ip, #408]!	; 0x198

00000ed8 <__errno_location@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #192512	; 0x2f000
 ee0:	ldr	pc, [ip, #400]!	; 0x190

00000ee4 <getservbyname@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #192512	; 0x2f000
 eec:	ldr	pc, [ip, #392]!	; 0x188

00000ef0 <memset@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #192512	; 0x2f000
 ef8:	ldr	pc, [ip, #384]!	; 0x180

00000efc <putchar@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #192512	; 0x2f000
 f04:	ldr	pc, [ip, #376]!	; 0x178

00000f08 <strncpy@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #192512	; 0x2f000
 f10:	ldr	pc, [ip, #368]!	; 0x170

00000f14 <fileno@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #192512	; 0x2f000
 f1c:	ldr	pc, [ip, #360]!	; 0x168

00000f20 <sscanf@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #192512	; 0x2f000
 f28:	ldr	pc, [ip, #352]!	; 0x160

00000f2c <clearerr@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #192512	; 0x2f000
 f34:	ldr	pc, [ip, #344]!	; 0x158

00000f38 <vsnprintf@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #192512	; 0x2f000
 f40:	ldr	pc, [ip, #336]!	; 0x150

00000f44 <freeaddrinfo@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #192512	; 0x2f000
 f4c:	ldr	pc, [ip, #328]!	; 0x148

00000f50 <getaddrinfo@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #192512	; 0x2f000
 f58:	ldr	pc, [ip, #320]!	; 0x140

00000f5c <gethostbyname@plt>:
 f5c:	add	ip, pc, #0, 12
 f60:	add	ip, ip, #192512	; 0x2f000
 f64:	ldr	pc, [ip, #312]!	; 0x138

00000f68 <isatty@plt>:
 f68:	add	ip, pc, #0, 12
 f6c:	add	ip, ip, #192512	; 0x2f000
 f70:	ldr	pc, [ip, #304]!	; 0x130

00000f74 <abort@plt>:
 f74:	add	ip, pc, #0, 12
 f78:	add	ip, ip, #192512	; 0x2f000
 f7c:	ldr	pc, [ip, #296]!	; 0x128

00000f80 <getc@plt>:
 f80:	add	ip, pc, #0, 12
 f84:	add	ip, ip, #192512	; 0x2f000
 f88:	ldr	pc, [ip, #288]!	; 0x120

Disassembly of section .text:

00000f8c <call_weak_fn>:
     f8c:	ldr	r3, [pc, #20]	; fa8 <call_weak_fn+0x1c>
     f90:	ldr	r2, [pc, #20]	; fac <call_weak_fn+0x20>
     f94:	add	r3, pc, r3
     f98:	ldr	r2, [r3, r2]
     f9c:	cmp	r2, #0
     fa0:	bxeq	lr
     fa4:	b	e90 <__gmon_start__@plt>
     fa8:	.word	0x0002f064
     fac:	.word	0x000000bc

00000fb0 <deregister_tm_clones>:
     fb0:	ldr	r0, [pc, #44]	; fe4 <deregister_tm_clones+0x34>
     fb4:	ldr	r3, [pc, #44]	; fe8 <deregister_tm_clones+0x38>
     fb8:	add	r0, pc, r0
     fbc:	add	r3, pc, r3
     fc0:	cmp	r3, r0
     fc4:	ldr	r3, [pc, #32]	; fec <deregister_tm_clones+0x3c>
     fc8:	add	r3, pc, r3
     fcc:	bxeq	lr
     fd0:	ldr	r2, [pc, #24]	; ff0 <deregister_tm_clones+0x40>
     fd4:	ldr	r3, [r3, r2]
     fd8:	cmp	r3, #0
     fdc:	bxeq	lr
     fe0:	bx	r3
     fe4:	.word	0x0002f1d0
     fe8:	.word	0x0002f1cc
     fec:	.word	0x0002f030
     ff0:	.word	0x000000b0

00000ff4 <register_tm_clones>:
     ff4:	ldr	r0, [pc, #56]	; 1034 <register_tm_clones+0x40>
     ff8:	ldr	r3, [pc, #56]	; 1038 <register_tm_clones+0x44>
     ffc:	add	r0, pc, r0
    1000:	add	r3, pc, r3
    1004:	sub	r1, r3, r0
    1008:	ldr	r3, [pc, #44]	; 103c <register_tm_clones+0x48>
    100c:	asr	r1, r1, #2
    1010:	add	r3, pc, r3
    1014:	add	r1, r1, r1, lsr #31
    1018:	asrs	r1, r1, #1
    101c:	bxeq	lr
    1020:	ldr	r2, [pc, #24]	; 1040 <register_tm_clones+0x4c>
    1024:	ldr	r3, [r3, r2]
    1028:	cmp	r3, #0
    102c:	bxeq	lr
    1030:	bx	r3
    1034:	.word	0x0002f18c
    1038:	.word	0x0002f188
    103c:	.word	0x0002efe8
    1040:	.word	0x000000cc

00001044 <__do_global_dtors_aux>:
    1044:	ldr	r3, [pc, #76]	; 1098 <__do_global_dtors_aux+0x54>
    1048:	ldr	r2, [pc, #76]	; 109c <__do_global_dtors_aux+0x58>
    104c:	add	r3, pc, r3
    1050:	add	r2, pc, r2
    1054:	ldrb	r3, [r3]
    1058:	cmp	r3, #0
    105c:	bxne	lr
    1060:	ldr	r3, [pc, #56]	; 10a0 <__do_global_dtors_aux+0x5c>
    1064:	push	{r4, lr}
    1068:	ldr	r3, [r2, r3]
    106c:	cmp	r3, #0
    1070:	beq	1080 <__do_global_dtors_aux+0x3c>
    1074:	ldr	r3, [pc, #40]	; 10a4 <__do_global_dtors_aux+0x60>
    1078:	ldr	r0, [pc, r3]
    107c:	bl	dc4 <__cxa_finalize@plt>
    1080:	bl	fb0 <deregister_tm_clones>
    1084:	ldr	r3, [pc, #28]	; 10a8 <__do_global_dtors_aux+0x64>
    1088:	mov	r2, #1
    108c:	add	r3, pc, r3
    1090:	strb	r2, [r3]
    1094:	pop	{r4, pc}
    1098:	.word	0x0002f13c
    109c:	.word	0x0002efa8
    10a0:	.word	0x000000ac
    10a4:	.word	0x0002f050
    10a8:	.word	0x0002f0fc

000010ac <frame_dummy>:
    10ac:	b	ff4 <register_tm_clones>

000010b0 <sfbpf_filter>:
    10b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    10b4:	add	fp, sp, #24
    10b8:	sub	sp, sp, #64	; 0x40
    10bc:	cmp	r0, #0
    10c0:	beq	15c0 <sfbpf_filter+0x510>
    10c4:	sub	r9, r0, #8
    10c8:	mov	r7, #0
    10cc:	mov	ip, sp
    10d0:	mov	lr, #60	; 0x3c
    10d4:	mov	r8, #0
    10d8:	mov	r6, r9
    10dc:	mov	r0, r7
    10e0:	ldrh	r7, [r6, #8]!
    10e4:	cmp	r7, #67	; 0x43
    10e8:	bgt	1210 <sfbpf_filter+0x160>
    10ec:	cmp	r7, #64	; 0x40
    10f0:	bhi	15dc <sfbpf_filter+0x52c>
    10f4:	add	r4, pc, #4
    10f8:	ldr	r7, [r4, r7, lsl #2]
    10fc:	add	pc, r4, r7
    1100:	.word	0x00000104
    1104:	.word	0x00000304
    1108:	.word	0x0000030c
    110c:	.word	0x00000244
    1110:	.word	0x00000250
    1114:	.word	0x00000260
    1118:	.word	0x000004c8
    111c:	.word	0x00000268
    1120:	.word	0x000004dc
    1124:	.word	0x000004dc
    1128:	.word	0x000004dc
    112c:	.word	0x000004dc
    1130:	.word	0x00000278
    1134:	.word	0x000004dc
    1138:	.word	0x000004dc
    113c:	.word	0x000004dc
    1140:	.word	0x000004dc
    1144:	.word	0x000004dc
    1148:	.word	0x000004dc
    114c:	.word	0x000004dc
    1150:	.word	0x00000284
    1154:	.word	0x00000318
    1158:	.word	0x000004cc
    115c:	.word	0x000004dc
    1160:	.word	0x000004dc
    1164:	.word	0x000004dc
    1168:	.word	0x000004dc
    116c:	.word	0x000004dc
    1170:	.word	0x00000294
    1174:	.word	0x000002a0
    1178:	.word	0x000004dc
    117c:	.word	0x000004dc
    1180:	.word	0x0000032c
    1184:	.word	0x000004dc
    1188:	.word	0x000004dc
    118c:	.word	0x000004dc
    1190:	.word	0x000002b0
    1194:	.word	0x0000034c
    1198:	.word	0x000004dc
    119c:	.word	0x000004dc
    11a0:	.word	0x00000360
    11a4:	.word	0x000004dc
    11a8:	.word	0x000004dc
    11ac:	.word	0x000004dc
    11b0:	.word	0x00000368
    11b4:	.word	0x00000374
    11b8:	.word	0x000004dc
    11bc:	.word	0x000004dc
    11c0:	.word	0x00000384
    11c4:	.word	0x000004dc
    11c8:	.word	0x000004dc
    11cc:	.word	0x000004dc
    11d0:	.word	0x0000038c
    11d4:	.word	0x0000039c
    11d8:	.word	0x000004dc
    11dc:	.word	0x000004dc
    11e0:	.word	0x000004dc
    11e4:	.word	0x000004dc
    11e8:	.word	0x000004dc
    11ec:	.word	0x000004dc
    11f0:	.word	0x000003b4
    11f4:	.word	0x000002c0
    11f8:	.word	0x000004dc
    11fc:	.word	0x000004dc
    1200:	.word	0x000002d0
    1204:	ldr	r7, [r9, #12]
    1208:	mov	r9, r6
    120c:	b	10d8 <sfbpf_filter+0x28>
    1210:	cmp	r7, #107	; 0x6b
    1214:	bgt	1284 <sfbpf_filter+0x1d4>
    1218:	sub	r4, r7, #68	; 0x44
    121c:	cmp	r4, #16
    1220:	bhi	12e8 <sfbpf_filter+0x238>
    1224:	add	r7, pc, #4
    1228:	ldr	r4, [r7, r4, lsl #2]
    122c:	add	pc, r7, r4
    1230:	.word	0x00000044
    1234:	.word	0x00000298
    1238:	.word	0x000003ac
    123c:	.word	0x000003ac
    1240:	.word	0x000002a4
    1244:	.word	0x000003ac
    1248:	.word	0x000003ac
    124c:	.word	0x000003ac
    1250:	.word	0x000001ac
    1254:	.word	0x000002d0
    1258:	.word	0x000003ac
    125c:	.word	0x000003ac
    1260:	.word	0x000002ec
    1264:	.word	0x000003ac
    1268:	.word	0x000003ac
    126c:	.word	0x000003ac
    1270:	.word	0x00000308
    1274:	ldr	r4, [r9, #12]
    1278:	mov	r9, r6
    127c:	orr	r7, r4, r0
    1280:	b	10d8 <sfbpf_filter+0x28>
    1284:	cmp	r7, #123	; 0x7b
    1288:	ble	1330 <sfbpf_filter+0x280>
    128c:	sub	r4, r7, #124	; 0x7c
    1290:	cmp	r4, #11
    1294:	bhi	1548 <sfbpf_filter+0x498>
    1298:	add	r5, pc, #12
    129c:	mov	r9, r6
    12a0:	mov	r7, r2
    12a4:	ldr	r4, [r5, r4, lsl #2]
    12a8:	add	pc, r5, r4
    12ac:	.word	0x00000030
    12b0:	.word	0x00000330
    12b4:	.word	0x00000330
    12b8:	.word	0x00000330
    12bc:	.word	0xfffffe2c
    12c0:	.word	0x000002bc
    12c4:	.word	0x00000330
    12c8:	.word	0x00000330
    12cc:	.word	0x000002cc
    12d0:	.word	0x00000330
    12d4:	.word	0x00000330
    12d8:	.word	0x0000013c
    12dc:	lsr	r7, r0, r8
    12e0:	mov	r9, r6
    12e4:	b	10d8 <sfbpf_filter+0x28>
    12e8:	sub	r4, r7, #92	; 0x5c
    12ec:	cmp	r4, #8
    12f0:	bhi	15dc <sfbpf_filter+0x52c>
    12f4:	add	r7, pc, #4
    12f8:	ldr	r4, [r7, r4, lsl #2]
    12fc:	add	pc, r7, r4
    1300:	.word	0x00000024
    1304:	.word	0x000002dc
    1308:	.word	0x000002dc
    130c:	.word	0x000002dc
    1310:	.word	0x00000284
    1314:	.word	0x00000294
    1318:	.word	0x000002dc
    131c:	.word	0x000002dc
    1320:	.word	0x000000f4
    1324:	and	r7, r8, r0
    1328:	mov	r9, r6
    132c:	b	10d8 <sfbpf_filter+0x28>
    1330:	cmp	r7, #108	; 0x6c
    1334:	bne	15a8 <sfbpf_filter+0x4f8>
    1338:	lsl	r7, r0, r8
    133c:	mov	r9, r6
    1340:	b	10d8 <sfbpf_filter+0x28>
    1344:	ldr	r4, [r9, #12]
    1348:	str	r8, [ip, r4, lsl #2]
    134c:	b	159c <sfbpf_filter+0x4ec>
    1350:	ldr	r4, [r9, #12]
    1354:	mov	r9, r6
    1358:	add	r7, r4, r0
    135c:	b	10d8 <sfbpf_filter+0x28>
    1360:	ldr	r4, [r9, #12]
    1364:	b	1510 <sfbpf_filter+0x460>
    1368:	mov	r9, r6
    136c:	mov	r7, r0
    1370:	mov	r8, r0
    1374:	b	10d8 <sfbpf_filter+0x28>
    1378:	add	r7, r8, r0
    137c:	mov	r9, r6
    1380:	b	10d8 <sfbpf_filter+0x28>
    1384:	ldr	r4, [r9, #12]
    1388:	mov	r9, r6
    138c:	sub	r7, r0, r4
    1390:	b	10d8 <sfbpf_filter+0x28>
    1394:	sub	r7, r0, r8
    1398:	mov	r9, r6
    139c:	b	10d8 <sfbpf_filter+0x28>
    13a0:	cmp	r0, r8
    13a4:	mov	r4, #11
    13a8:	movweq	r4, #10
    13ac:	b	150c <sfbpf_filter+0x45c>
    13b0:	ldr	r4, [r9, #12]
    13b4:	mov	r9, r6
    13b8:	mul	r7, r4, r0
    13bc:	b	10d8 <sfbpf_filter+0x28>
    13c0:	cmp	r0, r8
    13c4:	mov	r4, #10
    13c8:	movwcc	r4, #11
    13cc:	b	150c <sfbpf_filter+0x45c>
    13d0:	ldr	r0, [r9, #12]
    13d4:	add	r0, r0, r8
    13d8:	b	1430 <sfbpf_filter+0x380>
    13dc:	orr	r7, r8, r0
    13e0:	mov	r9, r6
    13e4:	b	10d8 <sfbpf_filter+0x28>
    13e8:	mov	r9, r6
    13ec:	mov	r7, r8
    13f0:	b	10d8 <sfbpf_filter+0x28>
    13f4:	ldr	r4, [r9, #12]
    13f8:	mov	r9, r6
    13fc:	lsl	r7, r0, r4
    1400:	b	10d8 <sfbpf_filter+0x28>
    1404:	ldr	r8, [r9, #12]
    1408:	b	159c <sfbpf_filter+0x4ec>
    140c:	ldr	r4, [r9, #12]
    1410:	str	r0, [ip, r4, lsl #2]
    1414:	b	159c <sfbpf_filter+0x4ec>
    1418:	ldr	r4, [r9, #12]
    141c:	mov	r5, #11
    1420:	cmp	r0, r4
    1424:	movweq	r5, #10
    1428:	b	14ac <sfbpf_filter+0x3fc>
    142c:	ldr	r0, [r9, #12]
    1430:	add	r4, r0, #4
    1434:	cmp	r4, r3
    1438:	bhi	15d4 <sfbpf_filter+0x524>
    143c:	ldr	r0, [r1, r0]
    1440:	mov	r9, r6
    1444:	rev	r7, r0
    1448:	b	10d8 <sfbpf_filter+0x28>
    144c:	ldr	r4, [r9, #12]
    1450:	mov	r5, #11
    1454:	cmp	r0, r4
    1458:	movwhi	r5, #10
    145c:	b	14ac <sfbpf_filter+0x3fc>
    1460:	ldr	r0, [r9, #12]
    1464:	b	14dc <sfbpf_filter+0x42c>
    1468:	mul	r7, r8, r0
    146c:	mov	r9, r6
    1470:	b	10d8 <sfbpf_filter+0x28>
    1474:	cmp	r0, r8
    1478:	mov	r4, #11
    147c:	movwhi	r4, #10
    1480:	b	150c <sfbpf_filter+0x45c>
    1484:	ldr	r0, [r9, #12]
    1488:	b	1524 <sfbpf_filter+0x474>
    148c:	ldr	r4, [r9, #12]
    1490:	mov	r9, r6
    1494:	udiv	r7, r0, r4
    1498:	b	10d8 <sfbpf_filter+0x28>
    149c:	ldr	r4, [r9, #12]
    14a0:	mov	r5, #10
    14a4:	cmp	r0, r4
    14a8:	movwcc	r5, #11
    14ac:	ldrb	r4, [r9, r5]
    14b0:	b	1510 <sfbpf_filter+0x460>
    14b4:	cmp	r8, #0
    14b8:	beq	15d4 <sfbpf_filter+0x524>
    14bc:	udiv	r7, r0, r8
    14c0:	mov	r9, r6
    14c4:	b	10d8 <sfbpf_filter+0x28>
    14c8:	ldr	r4, [r9, #12]
    14cc:	tst	r4, r0
    14d0:	b	1504 <sfbpf_filter+0x454>
    14d4:	ldr	r0, [r9, #12]
    14d8:	add	r0, r0, r8
    14dc:	add	r4, r0, #2
    14e0:	cmp	r4, r3
    14e4:	bhi	15d4 <sfbpf_filter+0x524>
    14e8:	mov	r4, r1
    14ec:	mov	r9, r6
    14f0:	ldrb	r0, [r4, r0]!
    14f4:	ldrb	r4, [r4, #1]
    14f8:	orr	r7, r4, r0, lsl #8
    14fc:	b	10d8 <sfbpf_filter+0x28>
    1500:	tst	r8, r0
    1504:	mov	r4, #10
    1508:	movweq	r4, #11
    150c:	ldrb	r4, [r9, r4]
    1510:	add	r9, r6, r4, lsl #3
    1514:	mov	r7, r0
    1518:	b	10d8 <sfbpf_filter+0x28>
    151c:	ldr	r0, [r9, #12]
    1520:	add	r0, r0, r8
    1524:	cmp	r0, r3
    1528:	bcs	15d4 <sfbpf_filter+0x524>
    152c:	ldrb	r7, [r1, r0]
    1530:	mov	r9, r6
    1534:	b	10d8 <sfbpf_filter+0x28>
    1538:	ldr	r4, [r9, #12]
    153c:	mov	r9, r6
    1540:	and	r7, r4, r0
    1544:	b	10d8 <sfbpf_filter+0x28>
    1548:	cmp	r7, #177	; 0xb1
    154c:	bne	15dc <sfbpf_filter+0x52c>
    1550:	ldr	r4, [r9, #12]
    1554:	cmp	r4, r3
    1558:	bcs	15d4 <sfbpf_filter+0x524>
    155c:	ldrb	r4, [r1, r4]
    1560:	and	r8, lr, r4, lsl #2
    1564:	b	159c <sfbpf_filter+0x4ec>
    1568:	mov	r9, r6
    156c:	mov	r7, r0
    1570:	mov	r8, r2
    1574:	b	10d8 <sfbpf_filter+0x28>
    1578:	rsb	r7, r0, #0
    157c:	mov	r9, r6
    1580:	b	10d8 <sfbpf_filter+0x28>
    1584:	ldr	r0, [r9, #12]
    1588:	mov	r9, r6
    158c:	ldr	r7, [ip, r0, lsl #2]
    1590:	b	10d8 <sfbpf_filter+0x28>
    1594:	ldr	r4, [r9, #12]
    1598:	ldr	r8, [ip, r4, lsl #2]
    159c:	mov	r9, r6
    15a0:	mov	r7, r0
    15a4:	b	10d8 <sfbpf_filter+0x28>
    15a8:	cmp	r7, #116	; 0x74
    15ac:	bne	15dc <sfbpf_filter+0x52c>
    15b0:	ldr	r4, [r9, #12]
    15b4:	mov	r9, r6
    15b8:	lsr	r7, r0, r4
    15bc:	b	10d8 <sfbpf_filter+0x28>
    15c0:	mvn	r0, #0
    15c4:	b	15cc <sfbpf_filter+0x51c>
    15c8:	ldr	r0, [r9, #12]
    15cc:	sub	sp, fp, #24
    15d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    15d4:	mov	r0, #0
    15d8:	b	15cc <sfbpf_filter+0x51c>
    15dc:	bl	f74 <abort@plt>

000015e0 <sfbpf_validate>:
    15e0:	push	{r4, r5, fp, lr}
    15e4:	add	fp, sp, #8
    15e8:	cmp	r1, #1
    15ec:	blt	1720 <sfbpf_validate+0x140>
    15f0:	mov	lr, #0
    15f4:	mov	r2, #0
    15f8:	add	r3, r0, lr
    15fc:	ldrh	r5, [r3]
    1600:	add	r3, pc, #8
    1604:	and	r4, r5, #7
    1608:	ldr	r4, [r3, r4, lsl #2]
    160c:	add	pc, r3, r4
    1610:	.word	0x00000020
    1614:	.word	0x00000020
    1618:	.word	0x0000004c
    161c:	.word	0x0000004c
    1620:	.word	0x00000060
    1624:	.word	0x00000090
    1628:	.word	0x000000e4
    162c:	.word	0x000000e4
    1630:	ubfx	r3, r5, #5, #3
    1634:	mov	ip, #0
    1638:	cmp	r3, #5
    163c:	bhi	1724 <sfbpf_validate+0x144>
    1640:	cmp	r3, #3
    1644:	bne	16f4 <sfbpf_validate+0x114>
    1648:	add	r3, r0, r2, lsl #3
    164c:	ldr	r3, [r3, #4]
    1650:	cmp	r3, #15
    1654:	bls	16f4 <sfbpf_validate+0x114>
    1658:	b	1724 <sfbpf_validate+0x144>
    165c:	add	r3, r0, r2, lsl #3
    1660:	ldr	r3, [r3, #4]
    1664:	cmp	r3, #15
    1668:	bls	16f4 <sfbpf_validate+0x114>
    166c:	b	1720 <sfbpf_validate+0x140>
    1670:	ubfx	r4, r5, #4, #4
    1674:	mov	ip, #0
    1678:	cmp	r4, #8
    167c:	bhi	1724 <sfbpf_validate+0x144>
    1680:	cmp	r4, #3
    1684:	tsteq	r5, #24
    1688:	bne	16f4 <sfbpf_validate+0x114>
    168c:	add	r3, r0, r2, lsl #3
    1690:	ldr	r3, [r3, #4]
    1694:	cmp	r3, #0
    1698:	bne	16f4 <sfbpf_validate+0x114>
    169c:	b	1724 <sfbpf_validate+0x144>
    16a0:	ubfx	r3, r5, #4, #4
    16a4:	mov	ip, #0
    16a8:	sub	r4, r3, #1
    16ac:	cmp	r4, #4
    16b0:	bcs	16d4 <sfbpf_validate+0xf4>
    16b4:	add	r3, r0, r2, lsl #3
    16b8:	ldrb	r4, [r3, #2]
    16bc:	add	r4, r2, r4
    16c0:	add	r4, r4, #1
    16c4:	cmp	r4, r1
    16c8:	bcs	1724 <sfbpf_validate+0x144>
    16cc:	ldrb	r3, [r3, #3]
    16d0:	b	16e4 <sfbpf_validate+0x104>
    16d4:	cmp	r3, #0
    16d8:	bne	1724 <sfbpf_validate+0x144>
    16dc:	add	r3, r0, r2, lsl #3
    16e0:	ldr	r3, [r3, #4]
    16e4:	add	r3, r2, r3
    16e8:	add	r3, r3, #1
    16ec:	cmp	r3, r1
    16f0:	bcs	1724 <sfbpf_validate+0x144>
    16f4:	add	r2, r2, #1
    16f8:	add	lr, lr, #8
    16fc:	cmp	r1, r2
    1700:	bne	15f8 <sfbpf_validate+0x18>
    1704:	add	r0, r0, r1, lsl #3
    1708:	ldrh	r0, [r0, #-8]
    170c:	and	r0, r0, #7
    1710:	sub	r0, r0, #6
    1714:	clz	r0, r0
    1718:	lsr	ip, r0, #5
    171c:	b	1724 <sfbpf_validate+0x144>
    1720:	mov	ip, #0
    1724:	mov	r0, ip
    1728:	pop	{r4, r5, fp, pc}

0000172c <sfbpf_print>:
    172c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1730:	add	fp, sp, #28
    1734:	sub	sp, sp, #4
    1738:	mov	r5, r0
    173c:	ldr	r0, [pc, #1756]	; 1e20 <sfbpf_print+0x6f4>
    1740:	mov	r9, r1
    1744:	add	r0, pc, r0
    1748:	bl	e78 <puts@plt>
    174c:	ldr	r0, [r5]
    1750:	cmp	r0, #0
    1754:	beq	1e18 <sfbpf_print+0x6ec>
    1758:	ldr	r8, [pc, #1732]	; 1e24 <sfbpf_print+0x6f8>
    175c:	mov	r6, #0
    1760:	add	r8, pc, r8
    1764:	ldr	r7, [r5, #4]
    1768:	ldr	r0, [pc, #1720]	; 1e28 <sfbpf_print+0x6fc>
    176c:	mov	r1, r6
    1770:	add	r0, pc, r0
    1774:	bl	dd0 <printf@plt>
    1778:	lsl	r0, r6, #3
    177c:	mov	sl, r7
    1780:	cmp	r9, #0
    1784:	ldrh	r1, [sl, r0]!
    1788:	and	r0, r1, #7
    178c:	beq	1848 <sfbpf_print+0x11c>
    1790:	ldr	r1, [pc, #1684]	; 1e2c <sfbpf_print+0x700>
    1794:	cmp	r0, #0
    1798:	add	r1, pc, r1
    179c:	beq	17cc <sfbpf_print+0xa0>
    17a0:	mov	r1, #0
    17a4:	mov	r2, #0
    17a8:	cmp	r2, #7
    17ac:	beq	17cc <sfbpf_print+0xa0>
    17b0:	add	r3, r8, r2, lsl #3
    17b4:	add	r2, r2, #1
    17b8:	ldr	r3, [r3, #8]
    17bc:	cmp	r3, r0
    17c0:	bne	17a8 <sfbpf_print+0x7c>
    17c4:	add	r0, r8, r2, lsl #3
    17c8:	ldr	r1, [r0, #4]
    17cc:	ldr	r0, [pc, #1628]	; 1e30 <sfbpf_print+0x704>
    17d0:	add	r0, pc, r0
    17d4:	bl	dd0 <printf@plt>
    17d8:	ldrh	r0, [sl]
    17dc:	and	r1, r0, #7
    17e0:	cmp	r1, #7
    17e4:	bhi	1c04 <sfbpf_print+0x4d8>
    17e8:	add	r2, pc, #4
    17ec:	ldr	r1, [r2, r1, lsl #2]
    17f0:	add	pc, r2, r1
    17f4:	.word	0x00000020
    17f8:	.word	0x00000020
    17fc:	.word	0x00000410
    1800:	.word	0x00000410
    1804:	.word	0x000000e4
    1808:	.word	0x0000012c
    180c:	.word	0x0000019c
    1810:	.word	0x000001d0
    1814:	ldr	r1, [pc, #1560]	; 1e34 <sfbpf_print+0x708>
    1818:	ands	r2, r0, #24
    181c:	add	r1, pc, r1
    1820:	beq	1b98 <sfbpf_print+0x46c>
    1824:	ldr	r1, [pc, #1548]	; 1e38 <sfbpf_print+0x70c>
    1828:	cmp	r2, #8
    182c:	add	r1, pc, r1
    1830:	beq	1b98 <sfbpf_print+0x46c>
    1834:	cmp	r2, #16
    1838:	bne	1b94 <sfbpf_print+0x468>
    183c:	ldr	r1, [pc, #1528]	; 1e3c <sfbpf_print+0x710>
    1840:	add	r1, pc, r1
    1844:	b	1b98 <sfbpf_print+0x46c>
    1848:	add	r2, pc, #4
    184c:	ldr	r0, [r2, r0, lsl #2]
    1850:	add	pc, r2, r0
    1854:	.word	0x00000020
    1858:	.word	0x0000019c
    185c:	.word	0x000001f0
    1860:	.word	0x00000204
    1864:	.word	0x0000021c
    1868:	.word	0x000002ac
    186c:	.word	0x000002fc
    1870:	.word	0x0000026c
    1874:	ldr	r0, [pc, #1560]	; 1e94 <sfbpf_print+0x768>
    1878:	add	r0, pc, r0
    187c:	bl	dd0 <printf@plt>
    1880:	ldrh	r0, [sl]
    1884:	ubfx	r1, r0, #5, #3
    1888:	cmp	r1, #4
    188c:	bhi	1cb4 <sfbpf_print+0x588>
    1890:	add	r2, pc, #4
    1894:	ldr	r1, [r2, r1, lsl #2]
    1898:	add	pc, r2, r1
    189c:	.word	0x00000504
    18a0:	.word	0x00000014
    18a4:	.word	0x000003d8
    18a8:	.word	0x00000194
    18ac:	.word	0x00000388
    18b0:	add	r1, r7, r6, lsl #3
    18b4:	ands	r0, r0, #24
    18b8:	ldr	r1, [r1, #4]
    18bc:	beq	1dd0 <sfbpf_print+0x6a4>
    18c0:	cmp	r0, #16
    18c4:	beq	1dd8 <sfbpf_print+0x6ac>
    18c8:	cmp	r0, #8
    18cc:	movne	r2, #0
    18d0:	moveq	r2, #2
    18d4:	b	1ddc <sfbpf_print+0x6b0>
    18d8:	ldr	r1, [pc, #1392]	; 1e50 <sfbpf_print+0x724>
    18dc:	ands	r2, r0, #240	; 0xf0
    18e0:	add	r1, pc, r1
    18e4:	beq	196c <sfbpf_print+0x240>
    18e8:	mov	r1, #0
    18ec:	mov	r3, #0
    18f0:	cmp	r3, #8
    18f4:	beq	196c <sfbpf_print+0x240>
    18f8:	ldr	r4, [pc, #1364]	; 1e54 <sfbpf_print+0x728>
    18fc:	add	r4, pc, r4
    1900:	add	r4, r4, r3, lsl #3
    1904:	add	r3, r3, #1
    1908:	ldr	r4, [r4, #8]
    190c:	cmp	r4, r2
    1910:	bne	18f0 <sfbpf_print+0x1c4>
    1914:	ldr	r1, [pc, #1340]	; 1e58 <sfbpf_print+0x72c>
    1918:	add	r1, pc, r1
    191c:	b	1964 <sfbpf_print+0x238>
    1920:	ldr	r1, [pc, #1344]	; 1e68 <sfbpf_print+0x73c>
    1924:	ands	r2, r0, #240	; 0xf0
    1928:	add	r1, pc, r1
    192c:	beq	196c <sfbpf_print+0x240>
    1930:	mov	r1, #0
    1934:	mov	r3, #0
    1938:	cmp	r3, #4
    193c:	beq	196c <sfbpf_print+0x240>
    1940:	ldr	r4, [pc, #1316]	; 1e6c <sfbpf_print+0x740>
    1944:	add	r4, pc, r4
    1948:	add	r4, r4, r3, lsl #3
    194c:	add	r3, r3, #1
    1950:	ldr	r4, [r4, #8]
    1954:	cmp	r4, r2
    1958:	bne	1938 <sfbpf_print+0x20c>
    195c:	ldr	r1, [pc, #1292]	; 1e70 <sfbpf_print+0x744>
    1960:	add	r1, pc, r1
    1964:	add	r1, r1, r3, lsl #3
    1968:	ldr	r1, [r1, #4]
    196c:	ldr	r2, [pc, #1256]	; 1e5c <sfbpf_print+0x730>
    1970:	tst	r0, #8
    1974:	ldr	r0, [pc, #1252]	; 1e60 <sfbpf_print+0x734>
    1978:	add	r0, pc, r0
    197c:	add	r2, pc, r2
    1980:	moveq	r2, r0
    1984:	ldr	r0, [pc, #1240]	; 1e64 <sfbpf_print+0x738>
    1988:	add	r0, pc, r0
    198c:	b	1bec <sfbpf_print+0x4c0>
    1990:	ldr	r1, [pc, #1244]	; 1e74 <sfbpf_print+0x748>
    1994:	ands	r0, r0, #24
    1998:	add	r1, pc, r1
    199c:	beq	1bf8 <sfbpf_print+0x4cc>
    19a0:	ldr	r1, [pc, #1232]	; 1e78 <sfbpf_print+0x74c>
    19a4:	cmp	r0, #8
    19a8:	add	r1, pc, r1
    19ac:	beq	1bf8 <sfbpf_print+0x4cc>
    19b0:	cmp	r0, #16
    19b4:	bne	1bf4 <sfbpf_print+0x4c8>
    19b8:	ldr	r1, [pc, #1212]	; 1e7c <sfbpf_print+0x750>
    19bc:	add	r1, pc, r1
    19c0:	b	1bf8 <sfbpf_print+0x4cc>
    19c4:	ldr	r1, [pc, #1208]	; 1e84 <sfbpf_print+0x758>
    19c8:	ands	r0, r0, #248	; 0xf8
    19cc:	add	r1, pc, r1
    19d0:	beq	19e4 <sfbpf_print+0x2b8>
    19d4:	ldr	r1, [pc, #1196]	; 1e88 <sfbpf_print+0x75c>
    19d8:	cmp	r0, #128	; 0x80
    19dc:	add	r1, pc, r1
    19e0:	movne	r1, #0
    19e4:	ldr	r0, [pc, #1184]	; 1e8c <sfbpf_print+0x760>
    19e8:	add	r0, pc, r0
    19ec:	b	1c00 <sfbpf_print+0x4d4>
    19f0:	ldr	r0, [pc, #1196]	; 1ea4 <sfbpf_print+0x778>
    19f4:	add	r0, pc, r0
    19f8:	bl	dd0 <printf@plt>
    19fc:	ldrh	r0, [sl]
    1a00:	ubfx	r0, r0, #5, #3
    1a04:	cmp	r0, #5
    1a08:	bhi	1e00 <sfbpf_print+0x6d4>
    1a0c:	add	r1, pc, #4
    1a10:	ldr	r0, [r1, r0, lsl #2]
    1a14:	add	pc, r1, r0
    1a18:	.word	0x00000388
    1a1c:	.word	0x000003e8
    1a20:	.word	0x000003e8
    1a24:	.word	0x00000018
    1a28:	.word	0x0000020c
    1a2c:	.word	0x00000248
    1a30:	add	r0, r7, r6, lsl #3
    1a34:	ldr	r1, [r0, #4]
    1a38:	ldr	r0, [pc, #1132]	; 1eac <sfbpf_print+0x780>
    1a3c:	add	r0, pc, r0
    1a40:	b	1db0 <sfbpf_print+0x684>
    1a44:	add	r0, r7, r6, lsl #3
    1a48:	ldr	r1, [r0, #4]
    1a4c:	ldr	r0, [pc, #1120]	; 1eb4 <sfbpf_print+0x788>
    1a50:	add	r0, pc, r0
    1a54:	b	1a68 <sfbpf_print+0x33c>
    1a58:	add	r0, r7, r6, lsl #3
    1a5c:	ldr	r1, [r0, #4]
    1a60:	ldr	r0, [pc, #1104]	; 1eb8 <sfbpf_print+0x78c>
    1a64:	add	r0, pc, r0
    1a68:	bl	dd0 <printf@plt>
    1a6c:	b	1e08 <sfbpf_print+0x6dc>
    1a70:	ubfx	r0, r1, #4, #4
    1a74:	cmp	r0, #8
    1a78:	bhi	1d38 <sfbpf_print+0x60c>
    1a7c:	add	r2, pc, #12
    1a80:	ldr	r1, [pc, #1076]	; 1ebc <sfbpf_print+0x790>
    1a84:	ldr	r0, [r2, r0, lsl #2]
    1a88:	add	r1, pc, r1
    1a8c:	add	pc, r2, r0
    1a90:	.word	0x000002f8
    1a94:	.word	0x00000024
    1a98:	.word	0x000002b4
    1a9c:	.word	0x000002c0
    1aa0:	.word	0x000002cc
    1aa4:	.word	0x000002d8
    1aa8:	.word	0x000002e4
    1aac:	.word	0x000002f0
    1ab0:	.word	0x00000334
    1ab4:	ldr	r1, [pc, #1028]	; 1ec0 <sfbpf_print+0x794>
    1ab8:	add	r1, pc, r1
    1abc:	b	1d88 <sfbpf_print+0x65c>
    1ac0:	ldr	r0, [pc, #1112]	; 1f20 <sfbpf_print+0x7f4>
    1ac4:	add	r0, pc, r0
    1ac8:	bl	dd0 <printf@plt>
    1acc:	ldrb	r0, [sl]
    1ad0:	and	r1, r0, #248	; 0xf8
    1ad4:	ldr	r0, [pc, #1096]	; 1f24 <sfbpf_print+0x7f8>
    1ad8:	ldr	r2, [pc, #1096]	; 1f28 <sfbpf_print+0x7fc>
    1adc:	cmp	r1, #128	; 0x80
    1ae0:	add	r2, pc, r2
    1ae4:	add	r0, pc, r0
    1ae8:	moveq	r0, r2
    1aec:	cmp	r1, #0
    1af0:	ldr	r1, [pc, #1076]	; 1f2c <sfbpf_print+0x800>
    1af4:	add	r1, pc, r1
    1af8:	moveq	r0, r1
    1afc:	b	1cbc <sfbpf_print+0x590>
    1b00:	ubfx	r0, r1, #4, #4
    1b04:	cmp	r0, #4
    1b08:	bhi	1cc4 <sfbpf_print+0x598>
    1b0c:	add	r2, pc, #12
    1b10:	ldr	r1, [pc, #980]	; 1eec <sfbpf_print+0x7c0>
    1b14:	ldr	r0, [r2, r0, lsl #2]
    1b18:	add	r1, pc, r1
    1b1c:	add	pc, r2, r0
    1b20:	.word	0x00000014
    1b24:	.word	0x000001b8
    1b28:	.word	0x0000017c
    1b2c:	.word	0x000001b0
    1b30:	.word	0x00000188
    1b34:	add	r0, r7, r6, lsl #3
    1b38:	ldr	r0, [r0, #4]
    1b3c:	add	r0, r6, r0
    1b40:	add	r1, r0, #1
    1b44:	ldr	r0, [pc, #932]	; 1ef0 <sfbpf_print+0x7c4>
    1b48:	add	r0, pc, r0
    1b4c:	b	1a68 <sfbpf_print+0x33c>
    1b50:	ldr	r0, [pc, #952]	; 1f10 <sfbpf_print+0x7e4>
    1b54:	add	r0, pc, r0
    1b58:	bl	dd0 <printf@plt>
    1b5c:	ldrh	r0, [sl]
    1b60:	and	r0, r0, #24
    1b64:	cmp	r0, #16
    1b68:	beq	1c30 <sfbpf_print+0x504>
    1b6c:	cmp	r0, #8
    1b70:	beq	1c38 <sfbpf_print+0x50c>
    1b74:	cmp	r0, #0
    1b78:	bne	1c44 <sfbpf_print+0x518>
    1b7c:	add	r0, r7, r6, lsl #3
    1b80:	ldr	r1, [r0, #4]
    1b84:	ldr	r0, [pc, #904]	; 1f14 <sfbpf_print+0x7e8>
    1b88:	add	r0, pc, r0
    1b8c:	bl	dd0 <printf@plt>
    1b90:	b	1c50 <sfbpf_print+0x524>
    1b94:	mov	r1, #0
    1b98:	ldr	r2, [pc, #672]	; 1e40 <sfbpf_print+0x714>
    1b9c:	ands	r0, r0, #224	; 0xe0
    1ba0:	add	r2, pc, r2
    1ba4:	beq	1be4 <sfbpf_print+0x4b8>
    1ba8:	mov	r2, #0
    1bac:	mov	r3, #0
    1bb0:	cmp	r3, #5
    1bb4:	beq	1be4 <sfbpf_print+0x4b8>
    1bb8:	ldr	r4, [pc, #644]	; 1e44 <sfbpf_print+0x718>
    1bbc:	add	r4, pc, r4
    1bc0:	add	r4, r4, r3, lsl #3
    1bc4:	add	r3, r3, #1
    1bc8:	ldr	r4, [r4, #8]
    1bcc:	cmp	r4, r0
    1bd0:	bne	1bb0 <sfbpf_print+0x484>
    1bd4:	ldr	r0, [pc, #620]	; 1e48 <sfbpf_print+0x71c>
    1bd8:	add	r0, pc, r0
    1bdc:	add	r0, r0, r3, lsl #3
    1be0:	ldr	r2, [r0, #4]
    1be4:	ldr	r0, [pc, #608]	; 1e4c <sfbpf_print+0x720>
    1be8:	add	r0, pc, r0
    1bec:	bl	dd0 <printf@plt>
    1bf0:	b	1c04 <sfbpf_print+0x4d8>
    1bf4:	mov	r1, #0
    1bf8:	ldr	r0, [pc, #640]	; 1e80 <sfbpf_print+0x754>
    1bfc:	add	r0, pc, r0
    1c00:	bl	dd0 <printf@plt>
    1c04:	add	r0, r7, r6, lsl #3
    1c08:	ldr	r3, [r0, #4]
    1c0c:	ldrb	r1, [r0, #2]
    1c10:	ldrb	r2, [r0, #3]
    1c14:	ldr	r0, [pc, #628]	; 1e90 <sfbpf_print+0x764>
    1c18:	add	r0, pc, r0
    1c1c:	bl	dd0 <printf@plt>
    1c20:	b	1e08 <sfbpf_print+0x6dc>
    1c24:	ldr	r0, [pc, #636]	; 1ea8 <sfbpf_print+0x77c>
    1c28:	add	r0, pc, r0
    1c2c:	b	1cbc <sfbpf_print+0x590>
    1c30:	mov	r0, #65	; 0x41
    1c34:	b	1c3c <sfbpf_print+0x510>
    1c38:	mov	r0, #88	; 0x58
    1c3c:	bl	efc <putchar@plt>
    1c40:	b	1c50 <sfbpf_print+0x524>
    1c44:	ldr	r0, [pc, #716]	; 1f18 <sfbpf_print+0x7ec>
    1c48:	add	r0, pc, r0
    1c4c:	bl	dd0 <printf@plt>
    1c50:	ldr	r0, [pc, #708]	; 1f1c <sfbpf_print+0x7f0>
    1c54:	add	r0, pc, r0
    1c58:	bl	e78 <puts@plt>
    1c5c:	b	1e08 <sfbpf_print+0x6dc>
    1c60:	add	r0, r7, r6, lsl #3
    1c64:	ldr	r1, [r0, #4]
    1c68:	ldr	r0, [pc, #576]	; 1eb0 <sfbpf_print+0x784>
    1c6c:	add	r0, pc, r0
    1c70:	b	1db0 <sfbpf_print+0x684>
    1c74:	add	r1, r7, r6, lsl #3
    1c78:	ands	r0, r0, #24
    1c7c:	ldr	r1, [r1, #4]
    1c80:	beq	1de8 <sfbpf_print+0x6bc>
    1c84:	cmp	r0, #16
    1c88:	beq	1df0 <sfbpf_print+0x6c4>
    1c8c:	cmp	r0, #8
    1c90:	movne	r2, #0
    1c94:	moveq	r2, #2
    1c98:	b	1df4 <sfbpf_print+0x6c8>
    1c9c:	ldr	r1, [pc, #592]	; 1ef4 <sfbpf_print+0x7c8>
    1ca0:	add	r1, pc, r1
    1ca4:	b	1cd8 <sfbpf_print+0x5ac>
    1ca8:	ldr	r1, [pc, #588]	; 1efc <sfbpf_print+0x7d0>
    1cac:	add	r1, pc, r1
    1cb0:	b	1cd8 <sfbpf_print+0x5ac>
    1cb4:	ldr	r0, [pc, #484]	; 1ea0 <sfbpf_print+0x774>
    1cb8:	add	r0, pc, r0
    1cbc:	bl	dd0 <printf@plt>
    1cc0:	b	1e00 <sfbpf_print+0x6d4>
    1cc4:	ldr	r1, [pc, #564]	; 1f00 <sfbpf_print+0x7d4>
    1cc8:	add	r1, pc, r1
    1ccc:	b	1cd8 <sfbpf_print+0x5ac>
    1cd0:	ldr	r1, [pc, #544]	; 1ef8 <sfbpf_print+0x7cc>
    1cd4:	add	r1, pc, r1
    1cd8:	ldr	r0, [pc, #548]	; 1f04 <sfbpf_print+0x7d8>
    1cdc:	add	r0, pc, r0
    1ce0:	bl	dd0 <printf@plt>
    1ce4:	ldrb	r0, [sl]
    1ce8:	tst	r0, #8
    1cec:	bne	1d08 <sfbpf_print+0x5dc>
    1cf0:	add	r0, r7, r6, lsl #3
    1cf4:	ldr	r1, [r0, #4]
    1cf8:	ldr	r0, [pc, #520]	; 1f08 <sfbpf_print+0x7dc>
    1cfc:	add	r0, pc, r0
    1d00:	bl	dd0 <printf@plt>
    1d04:	b	1d10 <sfbpf_print+0x5e4>
    1d08:	mov	r0, #88	; 0x58
    1d0c:	bl	efc <putchar@plt>
    1d10:	add	r0, r7, r6, lsl #3
    1d14:	add	r2, r6, #1
    1d18:	ldrb	r1, [r0, #2]
    1d1c:	ldrb	r0, [r0, #3]
    1d20:	add	r1, r2, r1
    1d24:	add	r2, r2, r0
    1d28:	ldr	r0, [pc, #476]	; 1f0c <sfbpf_print+0x7e0>
    1d2c:	add	r0, pc, r0
    1d30:	bl	dd0 <printf@plt>
    1d34:	b	1e08 <sfbpf_print+0x6dc>
    1d38:	ldr	r1, [pc, #416]	; 1ee0 <sfbpf_print+0x7b4>
    1d3c:	add	r1, pc, r1
    1d40:	b	1d88 <sfbpf_print+0x65c>
    1d44:	ldr	r1, [pc, #376]	; 1ec4 <sfbpf_print+0x798>
    1d48:	add	r1, pc, r1
    1d4c:	b	1d88 <sfbpf_print+0x65c>
    1d50:	ldr	r1, [pc, #368]	; 1ec8 <sfbpf_print+0x79c>
    1d54:	add	r1, pc, r1
    1d58:	b	1d88 <sfbpf_print+0x65c>
    1d5c:	ldr	r1, [pc, #360]	; 1ecc <sfbpf_print+0x7a0>
    1d60:	add	r1, pc, r1
    1d64:	b	1d88 <sfbpf_print+0x65c>
    1d68:	ldr	r1, [pc, #352]	; 1ed0 <sfbpf_print+0x7a4>
    1d6c:	add	r1, pc, r1
    1d70:	b	1d88 <sfbpf_print+0x65c>
    1d74:	ldr	r1, [pc, #344]	; 1ed4 <sfbpf_print+0x7a8>
    1d78:	add	r1, pc, r1
    1d7c:	b	1d88 <sfbpf_print+0x65c>
    1d80:	ldr	r1, [pc, #336]	; 1ed8 <sfbpf_print+0x7ac>
    1d84:	add	r1, pc, r1
    1d88:	ldr	r0, [pc, #340]	; 1ee4 <sfbpf_print+0x7b8>
    1d8c:	add	r0, pc, r0
    1d90:	bl	dd0 <printf@plt>
    1d94:	ldrb	r0, [sl]
    1d98:	tst	r0, #8
    1d9c:	bne	1db8 <sfbpf_print+0x68c>
    1da0:	add	r0, r7, r6, lsl #3
    1da4:	ldr	r1, [r0, #4]
    1da8:	ldr	r0, [pc, #312]	; 1ee8 <sfbpf_print+0x7bc>
    1dac:	add	r0, pc, r0
    1db0:	bl	dd0 <printf@plt>
    1db4:	b	1e00 <sfbpf_print+0x6d4>
    1db8:	mov	r0, #88	; 0x58
    1dbc:	bl	efc <putchar@plt>
    1dc0:	b	1e00 <sfbpf_print+0x6d4>
    1dc4:	ldr	r0, [pc, #272]	; 1edc <sfbpf_print+0x7b0>
    1dc8:	add	r0, pc, r0
    1dcc:	b	1c58 <sfbpf_print+0x52c>
    1dd0:	mov	r2, #4
    1dd4:	b	1ddc <sfbpf_print+0x6b0>
    1dd8:	mov	r2, #1
    1ddc:	ldr	r0, [pc, #180]	; 1e98 <sfbpf_print+0x76c>
    1de0:	add	r0, pc, r0
    1de4:	b	1dfc <sfbpf_print+0x6d0>
    1de8:	mov	r2, #4
    1dec:	b	1df4 <sfbpf_print+0x6c8>
    1df0:	mov	r2, #1
    1df4:	ldr	r0, [pc, #160]	; 1e9c <sfbpf_print+0x770>
    1df8:	add	r0, pc, r0
    1dfc:	bl	dd0 <printf@plt>
    1e00:	mov	r0, #10
    1e04:	bl	efc <putchar@plt>
    1e08:	ldr	r0, [r5]
    1e0c:	add	r6, r6, #1
    1e10:	cmp	r6, r0
    1e14:	bcc	1764 <sfbpf_print+0x38>
    1e18:	sub	sp, fp, #28
    1e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e20:	.word	0x00010f61
    1e24:	.word	0x0002e4d0
    1e28:	.word	0x00010d88
    1e2c:	.word	0x00010dab
    1e30:	.word	0x00010ea1
    1e34:	.word	0x00010d4f
    1e38:	.word	0x00010d73
    1e3c:	.word	0x00010d4b
    1e40:	.word	0x000109cd
    1e44:	.word	0x0002e0bc
    1e48:	.word	0x0002e0a0
    1e4c:	.word	0x00010916
    1e50:	.word	0x00010ca5
    1e54:	.word	0x0002e3b4
    1e58:	.word	0x0002e398
    1e5c:	.word	0x00010d27
    1e60:	.word	0x00010c31
    1e64:	.word	0x00010b87
    1e68:	.word	0x00010c83
    1e6c:	.word	0x0002e3bc
    1e70:	.word	0x0002e3a0
    1e74:	.word	0x00010c11
    1e78:	.word	0x00010cfb
    1e7c:	.word	0x00010ce0
    1e80:	.word	0x00010921
    1e84:	.word	0x00010bf8
    1e88:	.word	0x00010bec
    1e8c:	.word	0x00010b3e
    1e90:	.word	0x00010915
    1e94:	.word	0x00010d76
    1e98:	.word	0x00010819
    1e9c:	.word	0x0001080a
    1ea0:	.word	0x0001095f
    1ea4:	.word	0x00010c27
    1ea8:	.word	0x000109e5
    1eac:	.word	0x00010bd5
    1eb0:	.word	0x000109ba
    1eb4:	.word	0x00010b7c
    1eb8:	.word	0x00010b79
    1ebc:	.word	0x00010bae
    1ec0:	.word	0x00010b80
    1ec4:	.word	0x000108f2
    1ec8:	.word	0x000108e8
    1ecc:	.word	0x000108de
    1ed0:	.word	0x000108d4
    1ed4:	.word	0x000108ca
    1ed8:	.word	0x000108c1
    1edc:	.word	0x000108eb
    1ee0:	.word	0x000108db
    1ee4:	.word	0x000108bc
    1ee8:	.word	0x0001149f
    1eec:	.word	0x00010b4b
    1ef0:	.word	0x00010b11
    1ef4:	.word	0x000109a6
    1ef8:	.word	0x00010992
    1efc:	.word	0x00010994
    1f00:	.word	0x0001094f
    1f04:	.word	0x0001098d
    1f08:	.word	0x0001154f
    1f0c:	.word	0x00010949
    1f10:	.word	0x00010b30
    1f14:	.word	0x000116c3
    1f18:	.word	0x000109cf
    1f1c:	.word	0x00010a67
    1f20:	.word	0x00010bcd
    1f24:	.word	0x00010b33
    1f28:	.word	0x00010bbe
    1f2c:	.word	0x00010ba3

00001f30 <sf_bpf_error>:
    1f30:	sub	sp, sp, #12
    1f34:	push	{fp, lr}
    1f38:	mov	fp, sp
    1f3c:	sub	sp, sp, #4
    1f40:	mov	ip, r0
    1f44:	add	r0, fp, #8
    1f48:	stm	r0, {r1, r2, r3}
    1f4c:	add	r3, fp, #8
    1f50:	mov	r1, #256	; 0x100
    1f54:	mov	r2, ip
    1f58:	str	r3, [sp]
    1f5c:	ldr	r0, [pc, #20]	; 1f78 <sf_bpf_error+0x48>
    1f60:	add	r0, pc, r0
    1f64:	bl	f38 <vsnprintf@plt>
    1f68:	ldr	r0, [pc, #12]	; 1f7c <sf_bpf_error+0x4c>
    1f6c:	mov	r1, #1
    1f70:	add	r0, pc, r0
    1f74:	bl	df4 <longjmp@plt>
    1f78:	.word	0x0002e230
    1f7c:	.word	0x0002e328

00001f80 <sf_sdup>:
    1f80:	push	{r4, r5, r6, sl, fp, lr}
    1f84:	add	fp, sp, #16
    1f88:	mov	r5, r0
    1f8c:	bl	eb4 <strlen@plt>
    1f90:	add	r6, r0, #1
    1f94:	mov	r4, r0
    1f98:	mov	r0, r6
    1f9c:	bl	1fbc <newchunk>
    1fa0:	mov	r1, r5
    1fa4:	mov	r2, r6
    1fa8:	bl	f08 <strncpy@plt>
    1fac:	cmp	r6, #1
    1fb0:	movge	r1, #0
    1fb4:	strbge	r1, [r0, r4]
    1fb8:	pop	{r4, r5, r6, sl, fp, pc}

00001fbc <newchunk>:
    1fbc:	push	{r4, r5, r6, sl, fp, lr}
    1fc0:	add	fp, sp, #16
    1fc4:	ldr	r1, [pc, #140]	; 2058 <newchunk+0x9c>
    1fc8:	add	r0, r0, #3
    1fcc:	bic	r6, r0, #3
    1fd0:	ldr	r1, [pc, r1]
    1fd4:	ldr	r5, [pc, #128]	; 205c <newchunk+0xa0>
    1fd8:	add	r5, pc, r5
    1fdc:	ldr	r4, [r5, r1, lsl #3]!
    1fe0:	cmp	r6, r4
    1fe4:	bls	2038 <newchunk+0x7c>
    1fe8:	ldr	r2, [pc, #112]	; 2060 <newchunk+0xa4>
    1fec:	add	r0, r1, #1
    1ff0:	cmp	r1, #15
    1ff4:	add	r2, pc, r2
    1ff8:	str	r0, [r2]
    1ffc:	bge	204c <newchunk+0x90>
    2000:	mov	r1, #1024	; 0x400
    2004:	lsl	r4, r1, r0
    2008:	mov	r0, r4
    200c:	bl	e84 <malloc@plt>
    2010:	cmp	r0, #0
    2014:	str	r0, [r5, #12]
    2018:	beq	204c <newchunk+0x90>
    201c:	mov	r1, #0
    2020:	mov	r2, r4
    2024:	add	r5, r5, #8
    2028:	bl	ef0 <memset@plt>
    202c:	cmp	r6, r4
    2030:	str	r4, [r5]
    2034:	bhi	204c <newchunk+0x90>
    2038:	sub	r0, r4, r6
    203c:	str	r0, [r5]
    2040:	ldr	r1, [r5, #4]
    2044:	add	r0, r1, r0
    2048:	pop	{r4, r5, r6, sl, fp, pc}
    204c:	ldr	r0, [pc, #16]	; 2064 <newchunk+0xa8>
    2050:	add	r0, pc, r0
    2054:	bl	1f30 <sf_bpf_error>
    2058:	.word	0x0002e52c
    205c:	.word	0x0002e4a4
    2060:	.word	0x0002e508
    2064:	.word	0x000111b4

00002068 <sfbpf_compile>:
    2068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    206c:	add	fp, sp, #28
    2070:	sub	sp, sp, #12
    2074:	mov	r6, r0
    2078:	ldr	r0, [pc, #2820]	; 2b84 <sfbpf_compile+0xb1c>
    207c:	mov	r5, r1
    2080:	mov	r1, #0
    2084:	vmov.i32	q8, #0	; 0x00000000
    2088:	mov	r4, r2
    208c:	add	r0, pc, r0
    2090:	str	r1, [r0]
    2094:	ldr	r0, [pc, #2796]	; 2b88 <sfbpf_compile+0xb20>
    2098:	add	r0, pc, r0
    209c:	str	r1, [r0]
    20a0:	ldr	r0, [pc, #2788]	; 2b8c <sfbpf_compile+0xb24>
    20a4:	add	r0, pc, r0
    20a8:	str	r1, [r0]
    20ac:	ldr	r0, [pc, #2780]	; 2b90 <sfbpf_compile+0xb28>
    20b0:	add	r0, pc, r0
    20b4:	add	r2, r0, #16
    20b8:	vst1.64	{d16-d17}, [r2]
    20bc:	add	r2, r0, #32
    20c0:	vst1.64	{d16-d17}, [r2]
    20c4:	mov	r2, #48	; 0x30
    20c8:	vst1.64	{d16-d17}, [r0], r2
    20cc:	vst1.64	{d16-d17}, [r0]
    20d0:	ldr	r0, [pc, #2748]	; 2b94 <sfbpf_compile+0xb2c>
    20d4:	ldr	r0, [pc, r0]
    20d8:	str	r1, [r0]
    20dc:	str	r3, [sp, #8]
    20e0:	ldr	r0, [pc, #2736]	; 2b98 <sfbpf_compile+0xb30>
    20e4:	add	r0, pc, r0
    20e8:	bl	e00 <_setjmp@plt>
    20ec:	cmp	r0, #0
    20f0:	beq	2128 <sfbpf_compile+0xc0>
    20f4:	ldr	r0, [pc, #2720]	; 2b9c <sfbpf_compile+0xb34>
    20f8:	ldr	r0, [pc, r0]
    20fc:	cmp	r0, #0
    2100:	beq	2118 <sfbpf_compile+0xb0>
    2104:	bl	f44 <freeaddrinfo@plt>
    2108:	ldr	r0, [pc, #2704]	; 2ba0 <sfbpf_compile+0xb38>
    210c:	mov	r1, #0
    2110:	add	r0, pc, r0
    2114:	str	r1, [r0]
    2118:	bl	124c4 <sf_lex_cleanup>
    211c:	bl	2d58 <freechunks>
    2120:	mvn	r0, #0
    2124:	b	2b5c <sfbpf_compile+0xaf4>
    2128:	ldr	r1, [pc, #2676]	; 2ba4 <sfbpf_compile+0xb3c>
    212c:	ldr	r0, [fp, #12]
    2130:	cmp	r6, #0
    2134:	add	r1, pc, r1
    2138:	str	r6, [r1]
    213c:	ldr	r1, [pc, #2660]	; 2ba8 <sfbpf_compile+0xb40>
    2140:	add	r1, pc, r1
    2144:	str	r0, [r1]
    2148:	beq	2164 <sfbpf_compile+0xfc>
    214c:	ldr	r0, [sp, #8]
    2150:	str	r4, [sp]
    2154:	cmp	r0, #0
    2158:	beq	2190 <sfbpf_compile+0x128>
    215c:	ldr	r0, [sp, #8]
    2160:	b	2198 <sfbpf_compile+0x130>
    2164:	ldr	r0, [pc, #2624]	; 2bac <sfbpf_compile+0xb44>
    2168:	ldr	r1, [pc, #2624]	; 2bb0 <sfbpf_compile+0xb48>
    216c:	add	r0, pc, r0
    2170:	add	r1, pc, r1
    2174:	ldm	r0!, {r2, r3, r6, r7}
    2178:	stmia	r1!, {r2, r3, r6, r7}
    217c:	ldm	r0!, {r2, r3, r6, r7}
    2180:	ldrb	r0, [r0]
    2184:	stmia	r1!, {r2, r3, r6, r7}
    2188:	strb	r0, [r1]
    218c:	b	2120 <sfbpf_compile+0xb8>
    2190:	ldr	r0, [pc, #2588]	; 2bb4 <sfbpf_compile+0xb4c>
    2194:	add	r0, pc, r0
    2198:	bl	12494 <sf_lex_init>
    219c:	ldr	r0, [pc, #2580]	; 2bb8 <sfbpf_compile+0xb50>
    21a0:	mov	sl, #0
    21a4:	mvn	r3, #0
    21a8:	cmp	r5, #98	; 0x62
    21ac:	add	r0, pc, r0
    21b0:	str	sl, [r0]
    21b4:	ldr	r0, [pc, #2560]	; 2bbc <sfbpf_compile+0xb54>
    21b8:	add	r0, pc, r0
    21bc:	str	r5, [r0]
    21c0:	ldr	r0, [pc, #2552]	; 2bc0 <sfbpf_compile+0xb58>
    21c4:	add	r0, pc, r0
    21c8:	strb	sl, [r0]
    21cc:	ldr	r0, [pc, #2544]	; 2bc4 <sfbpf_compile+0xb5c>
    21d0:	add	r0, pc, r0
    21d4:	strb	sl, [r0]
    21d8:	mov	r0, #1
    21dc:	ldr	r4, [pc, #2532]	; 2bc8 <sfbpf_compile+0xb60>
    21e0:	add	r4, pc, r4
    21e4:	str	r3, [r4]
    21e8:	ldr	r1, [pc, #2524]	; 2bcc <sfbpf_compile+0xb64>
    21ec:	add	r1, pc, r1
    21f0:	str	r3, [r1]
    21f4:	ldr	r8, [pc, #2516]	; 2bd0 <sfbpf_compile+0xb68>
    21f8:	add	r8, pc, r8
    21fc:	strb	r0, [r8]
    2200:	ldr	r7, [pc, #2508]	; 2bd4 <sfbpf_compile+0xb6c>
    2204:	add	r7, pc, r7
    2208:	str	r3, [r7]
    220c:	ldr	r0, [pc, #2500]	; 2bd8 <sfbpf_compile+0xb70>
    2210:	add	r0, pc, r0
    2214:	strb	sl, [r0]
    2218:	ldr	r9, [pc, #2492]	; 2bdc <sfbpf_compile+0xb74>
    221c:	add	r9, pc, r9
    2220:	str	r3, [r9]
    2224:	ldr	ip, [pc, #2484]	; 2be0 <sfbpf_compile+0xb78>
    2228:	add	ip, pc, ip
    222c:	str	r3, [ip]
    2230:	ldr	r0, [pc, #2476]	; 2be4 <sfbpf_compile+0xb7c>
    2234:	add	r0, pc, r0
    2238:	str	r3, [r0]
    223c:	ldr	r6, [pc, #2468]	; 2be8 <sfbpf_compile+0xb80>
    2240:	add	r6, pc, r6
    2244:	str	r3, [r6]
    2248:	ldr	r2, [pc, #2460]	; 2bec <sfbpf_compile+0xb84>
    224c:	add	r2, pc, r2
    2250:	str	r3, [r2]
    2254:	ldr	r2, [pc, #2452]	; 2bf0 <sfbpf_compile+0xb88>
    2258:	add	r2, pc, r2
    225c:	str	sl, [r2]
    2260:	ldr	lr, [pc, #2444]	; 2bf4 <sfbpf_compile+0xb8c>
    2264:	add	lr, pc, lr
    2268:	strb	sl, [lr]
    226c:	ldr	r2, [pc, #2436]	; 2bf8 <sfbpf_compile+0xb90>
    2270:	add	r2, pc, r2
    2274:	str	r3, [r2]
    2278:	ldr	r2, [pc, #2428]	; 2bfc <sfbpf_compile+0xb94>
    227c:	add	r2, pc, r2
    2280:	str	sl, [r2]
    2284:	ldr	r2, [pc, #2420]	; 2c00 <sfbpf_compile+0xb98>
    2288:	add	r2, pc, r2
    228c:	str	r3, [r2]
    2290:	ldr	r2, [pc, #2412]	; 2c04 <sfbpf_compile+0xb9c>
    2294:	add	r2, pc, r2
    2298:	str	r3, [r2]
    229c:	ble	24e4 <sfbpf_compile+0x47c>
    22a0:	sub	r3, r5, #99	; 0x63
    22a4:	cmp	r3, #130	; 0x82
    22a8:	bhi	2b64 <sfbpf_compile+0xafc>
    22ac:	add	r2, pc, #4
    22b0:	ldr	r3, [r2, r3, lsl #2]
    22b4:	add	pc, r2, r3
    22b8:	.word	0x00000498
    22bc:	.word	0x000008ac
    22c0:	.word	0x000008ac
    22c4:	.word	0x000008ac
    22c8:	.word	0x000008ac
    22cc:	.word	0x00000334
    22d0:	.word	0x000002d8
    22d4:	.word	0x000008ac
    22d8:	.word	0x000002b8
    22dc:	.word	0x00000324
    22e0:	.word	0x000004a0
    22e4:	.word	0x000008ac
    22e8:	.word	0x000008ac
    22ec:	.word	0x000008ac
    22f0:	.word	0x000004c0
    22f4:	.word	0x000002b8
    22f8:	.word	0x000008ac
    22fc:	.word	0x000008ac
    2300:	.word	0x000008ac
    2304:	.word	0x000008ac
    2308:	.word	0x000002d8
    230c:	.word	0x000008ac
    2310:	.word	0x000008ac
    2314:	.word	0x000003b8
    2318:	.word	0x000004e0
    231c:	.word	0x000008ac
    2320:	.word	0x000008ac
    2324:	.word	0x000008ac
    2328:	.word	0x000002d8
    232c:	.word	0x000008ac
    2330:	.word	0x00000690
    2334:	.word	0x00000298
    2338:	.word	0x00000298
    233c:	.word	0x00000534
    2340:	.word	0x00000554
    2344:	.word	0x00000298
    2348:	.word	0x00000594
    234c:	.word	0x0000059c
    2350:	.word	0x000006c0
    2354:	.word	0x000003c0
    2358:	.word	0x000003e0
    235c:	.word	0x000006fc
    2360:	.word	0x000008ac
    2364:	.word	0x000008ac
    2368:	.word	0x0000020c
    236c:	.word	0x0000020c
    2370:	.word	0x000008ac
    2374:	.word	0x000008ac
    2378:	.word	0x000008ac
    237c:	.word	0x000008ac
    2380:	.word	0x000008ac
    2384:	.word	0x000008ac
    2388:	.word	0x000008ac
    238c:	.word	0x000008ac
    2390:	.word	0x000008ac
    2394:	.word	0x000008ac
    2398:	.word	0x000008ac
    239c:	.word	0x000008ac
    23a0:	.word	0x000008ac
    23a4:	.word	0x000008ac
    23a8:	.word	0x000008ac
    23ac:	.word	0x000008ac
    23b0:	.word	0x000008ac
    23b4:	.word	0x000008ac
    23b8:	.word	0x000002d8
    23bc:	.word	0x000005bc
    23c0:	.word	0x000008ac
    23c4:	.word	0x00000334
    23c8:	.word	0x00000354
    23cc:	.word	0x00000404
    23d0:	.word	0x000008ac
    23d4:	.word	0x000008ac
    23d8:	.word	0x000008ac
    23dc:	.word	0x000008ac
    23e0:	.word	0x000008ac
    23e4:	.word	0x000008ac
    23e8:	.word	0x000008ac
    23ec:	.word	0x000008ac
    23f0:	.word	0x0000020c
    23f4:	.word	0x00000354
    23f8:	.word	0x00000298
    23fc:	.word	0x00000298
    2400:	.word	0x00000298
    2404:	.word	0x00000424
    2408:	.word	0x00000304
    240c:	.word	0x000008ac
    2410:	.word	0x000008ac
    2414:	.word	0x0000020c
    2418:	.word	0x0000020c
    241c:	.word	0x000008ac
    2420:	.word	0x0000020c
    2424:	.word	0x0000020c
    2428:	.word	0x0000020c
    242c:	.word	0x000002d8
    2430:	.word	0x0000020c
    2434:	.word	0x000007a4
    2438:	.word	0x0000020c
    243c:	.word	0x0000020c
    2440:	.word	0x00000394
    2444:	.word	0x0000020c
    2448:	.word	0x0000020c
    244c:	.word	0x00000304
    2450:	.word	0x0000020c
    2454:	.word	0x00000760
    2458:	.word	0x000008ac
    245c:	.word	0x000008ac
    2460:	.word	0x000008ac
    2464:	.word	0x000008ac
    2468:	.word	0x000008ac
    246c:	.word	0x000008ac
    2470:	.word	0x000008ac
    2474:	.word	0x000008ac
    2478:	.word	0x000008ac
    247c:	.word	0x000008ac
    2480:	.word	0x000008ac
    2484:	.word	0x000008ac
    2488:	.word	0x0000020c
    248c:	.word	0x000008ac
    2490:	.word	0x000008ac
    2494:	.word	0x000008ac
    2498:	.word	0x0000020c
    249c:	.word	0x0000020c
    24a0:	.word	0x000008ac
    24a4:	.word	0x000008ac
    24a8:	.word	0x000008ac
    24ac:	.word	0x000008ac
    24b0:	.word	0x000008ac
    24b4:	.word	0x00000458
    24b8:	.word	0x0000020c
    24bc:	.word	0x000002b8
    24c0:	.word	0x000002b8
    24c4:	ldr	r1, [pc, #2164]	; 2d40 <sfbpf_compile+0xcd8>
    24c8:	mvn	r0, #0
    24cc:	add	r1, pc, r1
    24d0:	str	r0, [r1]
    24d4:	ldr	r1, [pc, #2152]	; 2d44 <sfbpf_compile+0xcdc>
    24d8:	add	r1, pc, r1
    24dc:	str	r0, [r1]
    24e0:	b	2a7c <sfbpf_compile+0xa14>
    24e4:	cmp	r5, #19
    24e8:	bhi	25e4 <sfbpf_compile+0x57c>
    24ec:	add	r0, pc, #4
    24f0:	ldr	r1, [r0, r5, lsl #2]
    24f4:	add	pc, r0, r1
    24f8:	.word	0x000000e4
    24fc:	.word	0x00000384
    2500:	.word	0x0000066c
    2504:	.word	0x0000066c
    2508:	.word	0x0000066c
    250c:	.word	0x0000066c
    2510:	.word	0x000003b4
    2514:	.word	0x000003bc
    2518:	.word	0x000003c4
    251c:	.word	0x000000f4
    2520:	.word	0x000003cc
    2524:	.word	0x00000050
    2528:	.word	0x00000078
    252c:	.word	0x0000066c
    2530:	.word	0x0000066c
    2534:	.word	0x00000408
    2538:	.word	0x00000238
    253c:	.word	0x0000066c
    2540:	.word	0x0000066c
    2544:	.word	0x00000050
    2548:	mov	r0, #0
    254c:	b	28c8 <sfbpf_compile+0x860>
    2550:	mov	r0, #4
    2554:	ldr	r1, [pc, #1892]	; 2cc0 <sfbpf_compile+0xc58>
    2558:	add	r1, pc, r1
    255c:	str	r0, [r1]
    2560:	ldr	r1, [pc, #1884]	; 2cc4 <sfbpf_compile+0xc5c>
    2564:	add	r1, pc, r1
    2568:	str	r0, [r1]
    256c:	b	282c <sfbpf_compile+0x7c4>
    2570:	ldr	r1, [pc, #1820]	; 2c94 <sfbpf_compile+0xc2c>
    2574:	mov	r0, #0
    2578:	mvn	r2, #0
    257c:	add	r1, pc, r1
    2580:	str	r0, [r1]
    2584:	ldr	r1, [pc, #1804]	; 2c98 <sfbpf_compile+0xc30>
    2588:	add	r1, pc, r1
    258c:	b	2a78 <sfbpf_compile+0xa10>
    2590:	ldr	r1, [pc, #1764]	; 2c7c <sfbpf_compile+0xc14>
    2594:	mov	r0, #0
    2598:	add	r1, pc, r1
    259c:	str	r0, [r1]
    25a0:	mov	r1, #24
    25a4:	ldr	r0, [pc, #1748]	; 2c80 <sfbpf_compile+0xc18>
    25a8:	add	r0, pc, r0
    25ac:	str	r1, [r0]
    25b0:	mov	r0, #1
    25b4:	strb	r0, [lr]
    25b8:	b	28e0 <sfbpf_compile+0x878>
    25bc:	ldr	r1, [pc, #1868]	; 2d10 <sfbpf_compile+0xca8>
    25c0:	mvn	r0, #0
    25c4:	mov	r2, #18
    25c8:	add	r1, pc, r1
    25cc:	str	r0, [r1]
    25d0:	ldr	r1, [pc, #1852]	; 2d14 <sfbpf_compile+0xcac>
    25d4:	add	r1, pc, r1
    25d8:	b	2a78 <sfbpf_compile+0xa10>
    25dc:	mov	r0, #4
    25e0:	b	275c <sfbpf_compile+0x6f4>
    25e4:	cmp	r5, #50	; 0x32
    25e8:	bne	2920 <sfbpf_compile+0x8b8>
    25ec:	mov	r0, #4
    25f0:	ldr	r1, [pc, #1560]	; 2c10 <sfbpf_compile+0xba8>
    25f4:	add	r1, pc, r1
    25f8:	str	r0, [r1]
    25fc:	mov	r1, #2
    2600:	ldr	r0, [pc, #1548]	; 2c14 <sfbpf_compile+0xbac>
    2604:	add	r0, pc, r0
    2608:	b	2964 <sfbpf_compile+0x8fc>
    260c:	ldr	r0, [pc, #1732]	; 2cd8 <sfbpf_compile+0xc70>
    2610:	mov	r1, #16
    2614:	add	r0, pc, r0
    2618:	str	r1, [r0]
    261c:	mov	r0, #14
    2620:	ldr	r1, [pc, #1716]	; 2cdc <sfbpf_compile+0xc74>
    2624:	add	r1, pc, r1
    2628:	str	r0, [r1]
    262c:	mov	r1, #18
    2630:	ldr	r0, [pc, #1704]	; 2ce0 <sfbpf_compile+0xc78>
    2634:	add	r0, pc, r0
    2638:	str	r1, [r0]
    263c:	mov	r1, #21
    2640:	ldr	r0, [pc, #1692]	; 2ce4 <sfbpf_compile+0xc7c>
    2644:	add	r0, pc, r0
    2648:	b	2a10 <sfbpf_compile+0x9a8>
    264c:	mov	r1, #23
    2650:	str	r1, [ip]
    2654:	mov	r1, #22
    2658:	str	r1, [r9]
    265c:	mov	r1, #24
    2660:	str	r1, [r0]
    2664:	str	r1, [r6]
    2668:	mov	r0, #27
    266c:	b	29d4 <sfbpf_compile+0x96c>
    2670:	mov	r0, #16
    2674:	b	28c8 <sfbpf_compile+0x860>
    2678:	ldr	r1, [pc, #1592]	; 2cb8 <sfbpf_compile+0xc50>
    267c:	mov	r0, #18
    2680:	add	r1, pc, r1
    2684:	str	r0, [r1]
    2688:	mov	r1, #16
    268c:	ldr	r0, [pc, #1576]	; 2cbc <sfbpf_compile+0xc54>
    2690:	add	r0, pc, r0
    2694:	b	2964 <sfbpf_compile+0x8fc>
    2698:	mov	r1, #7
    269c:	str	r1, [ip]
    26a0:	mov	r1, #6
    26a4:	str	r1, [r9]
    26a8:	mov	r1, #8
    26ac:	str	r1, [r0]
    26b0:	str	r1, [r6]
    26b4:	mov	r0, #11
    26b8:	b	29d4 <sfbpf_compile+0x96c>
    26bc:	ldr	r1, [pc, #1572]	; 2ce8 <sfbpf_compile+0xc80>
    26c0:	mov	r0, #6
    26c4:	add	r1, pc, r1
    26c8:	str	r0, [r1]
    26cc:	mov	r1, #4
    26d0:	ldr	r0, [pc, #1556]	; 2cec <sfbpf_compile+0xc84>
    26d4:	add	r0, pc, r0
    26d8:	b	2828 <sfbpf_compile+0x7c0>
    26dc:	ldr	r1, [pc, #1480]	; 2cac <sfbpf_compile+0xc44>
    26e0:	mov	r0, #0
    26e4:	mvn	r2, #0
    26e8:	add	r1, pc, r1
    26ec:	str	r0, [r1]
    26f0:	ldr	r1, [pc, #1464]	; 2cb0 <sfbpf_compile+0xc48>
    26f4:	add	r1, pc, r1
    26f8:	str	r2, [r1]
    26fc:	mov	r2, #4
    2700:	ldr	r1, [pc, #1452]	; 2cb4 <sfbpf_compile+0xc4c>
    2704:	add	r1, pc, r1
    2708:	str	r2, [r1]
    270c:	b	2a88 <sfbpf_compile+0xa20>
    2710:	ldr	r1, [pc, #1584]	; 2d48 <sfbpf_compile+0xce0>
    2714:	mov	r0, #24
    2718:	add	r1, pc, r1
    271c:	str	r0, [r1]
    2720:	mov	r1, #1
    2724:	ldr	r0, [pc, #1568]	; 2d4c <sfbpf_compile+0xce4>
    2728:	add	r0, pc, r0
    272c:	b	2828 <sfbpf_compile+0x7c0>
    2730:	ldr	r1, [pc, #1324]	; 2c64 <sfbpf_compile+0xbfc>
    2734:	mov	r0, #24
    2738:	add	r1, pc, r1
    273c:	str	r0, [r1]
    2740:	mov	r1, #5
    2744:	ldr	r0, [pc, #1308]	; 2c68 <sfbpf_compile+0xc00>
    2748:	add	r0, pc, r0
    274c:	b	2964 <sfbpf_compile+0x8fc>
    2750:	mov	r0, #44	; 0x2c
    2754:	b	292c <sfbpf_compile+0x8c4>
    2758:	mov	r0, #12
    275c:	ldr	r1, [pc, #1236]	; 2c38 <sfbpf_compile+0xbd0>
    2760:	add	r1, pc, r1
    2764:	str	r0, [r1]
    2768:	mov	r1, #0
    276c:	ldr	r0, [pc, #1224]	; 2c3c <sfbpf_compile+0xbd4>
    2770:	add	r0, pc, r0
    2774:	b	29f8 <sfbpf_compile+0x990>
    2778:	ldr	r1, [pc, #1316]	; 2ca4 <sfbpf_compile+0xc3c>
    277c:	mov	r0, #16
    2780:	add	r1, pc, r1
    2784:	str	r0, [r1]
    2788:	mov	r1, #14
    278c:	ldr	r0, [pc, #1300]	; 2ca8 <sfbpf_compile+0xc40>
    2790:	add	r0, pc, r0
    2794:	b	2964 <sfbpf_compile+0x8fc>
    2798:	mov	r0, #1
    279c:	str	r0, [r4]
    27a0:	ldr	r2, [pc, #1244]	; 2c84 <sfbpf_compile+0xc1c>
    27a4:	add	r2, pc, r2
    27a8:	strb	r0, [r2]
    27ac:	mov	r0, #2
    27b0:	str	r0, [r1]
    27b4:	mov	r0, #0
    27b8:	strb	r0, [r8]
    27bc:	mvn	r0, #0
    27c0:	ldr	r1, [pc, #1216]	; 2c88 <sfbpf_compile+0xc20>
    27c4:	add	r1, pc, r1
    27c8:	str	r0, [r1]
    27cc:	mov	r0, #4
    27d0:	str	r0, [r7]
    27d4:	ldr	r1, [pc, #1200]	; 2c8c <sfbpf_compile+0xc24>
    27d8:	add	r1, pc, r1
    27dc:	str	r0, [r1]
    27e0:	ldr	r1, [pc, #1192]	; 2c90 <sfbpf_compile+0xc28>
    27e4:	add	r1, pc, r1
    27e8:	b	28dc <sfbpf_compile+0x874>
    27ec:	ldr	r1, [pc, #1292]	; 2d00 <sfbpf_compile+0xc98>
    27f0:	mvn	r0, #0
    27f4:	mov	r2, #6
    27f8:	add	r1, pc, r1
    27fc:	str	r0, [r1]
    2800:	ldr	r1, [pc, #1276]	; 2d04 <sfbpf_compile+0xc9c>
    2804:	add	r1, pc, r1
    2808:	b	2a78 <sfbpf_compile+0xa10>
    280c:	ldr	r1, [pc, #1252]	; 2cf8 <sfbpf_compile+0xc90>
    2810:	mov	r0, #12
    2814:	add	r1, pc, r1
    2818:	str	r0, [r1]
    281c:	mov	r1, #6
    2820:	ldr	r0, [pc, #1236]	; 2cfc <sfbpf_compile+0xc94>
    2824:	add	r0, pc, r0
    2828:	str	r1, [r0]
    282c:	ldr	r0, [pc, #1212]	; 2cf0 <sfbpf_compile+0xc88>
    2830:	mov	r1, #0
    2834:	add	r0, pc, r0
    2838:	str	r1, [r0]
    283c:	mvn	r1, #0
    2840:	ldr	r0, [pc, #1196]	; 2cf4 <sfbpf_compile+0xc8c>
    2844:	add	r0, pc, r0
    2848:	b	2a10 <sfbpf_compile+0x9a8>
    284c:	mov	r0, #8
    2850:	b	297c <sfbpf_compile+0x914>
    2854:	ldr	r1, [pc, #1196]	; 2d08 <sfbpf_compile+0xca0>
    2858:	mvn	r0, #0
    285c:	mov	r2, #12
    2860:	add	r1, pc, r1
    2864:	str	r0, [r1]
    2868:	ldr	r1, [pc, #1180]	; 2d0c <sfbpf_compile+0xca4>
    286c:	add	r1, pc, r1
    2870:	b	2a78 <sfbpf_compile+0xa10>
    2874:	mov	r0, #12
    2878:	b	2554 <sfbpf_compile+0x4ec>
    287c:	ldr	r1, [pc, #928]	; 2c24 <sfbpf_compile+0xbbc>
    2880:	mov	r0, #14
    2884:	add	r1, pc, r1
    2888:	str	r0, [r1]
    288c:	mov	r1, #12
    2890:	ldr	r0, [pc, #912]	; 2c28 <sfbpf_compile+0xbc0>
    2894:	add	r0, pc, r0
    2898:	str	r1, [r0]
    289c:	mov	r1, #0
    28a0:	ldr	r0, [pc, #900]	; 2c2c <sfbpf_compile+0xbc4>
    28a4:	add	r0, pc, r0
    28a8:	b	28ec <sfbpf_compile+0x884>
    28ac:	mov	r0, #14
    28b0:	b	28c8 <sfbpf_compile+0x860>
    28b4:	mov	r0, #6
    28b8:	b	25f0 <sfbpf_compile+0x588>
    28bc:	mov	r0, #16
    28c0:	b	2904 <sfbpf_compile+0x89c>
    28c4:	mov	r0, #13
    28c8:	ldr	r1, [pc, #924]	; 2c6c <sfbpf_compile+0xc04>
    28cc:	add	r1, pc, r1
    28d0:	str	r0, [r1]
    28d4:	ldr	r1, [pc, #916]	; 2c70 <sfbpf_compile+0xc08>
    28d8:	add	r1, pc, r1
    28dc:	str	r0, [r1]
    28e0:	ldr	r0, [pc, #908]	; 2c74 <sfbpf_compile+0xc0c>
    28e4:	mov	r1, #8
    28e8:	add	r0, pc, r0
    28ec:	str	r1, [r0]
    28f0:	mov	r1, #3
    28f4:	ldr	r0, [pc, #892]	; 2c78 <sfbpf_compile+0xc10>
    28f8:	add	r0, pc, r0
    28fc:	b	2a10 <sfbpf_compile+0x9a8>
    2900:	mov	r0, #24
    2904:	ldr	r1, [pc, #804]	; 2c30 <sfbpf_compile+0xbc8>
    2908:	add	r1, pc, r1
    290c:	str	r0, [r1]
    2910:	mvn	r1, #0
    2914:	ldr	r0, [pc, #792]	; 2c34 <sfbpf_compile+0xbcc>
    2918:	add	r0, pc, r0
    291c:	b	2964 <sfbpf_compile+0x8fc>
    2920:	cmp	r5, #51	; 0x33
    2924:	bne	2b64 <sfbpf_compile+0xafc>
    2928:	mov	r0, #8
    292c:	ldr	r1, [pc, #724]	; 2c08 <sfbpf_compile+0xba0>
    2930:	add	r1, pc, r1
    2934:	str	r0, [r1]
    2938:	mov	r1, #6
    293c:	ldr	r0, [pc, #712]	; 2c0c <sfbpf_compile+0xba4>
    2940:	add	r0, pc, r0
    2944:	b	2964 <sfbpf_compile+0x8fc>
    2948:	ldr	r1, [pc, #716]	; 2c1c <sfbpf_compile+0xbb4>
    294c:	mov	r0, #8
    2950:	add	r1, pc, r1
    2954:	str	r0, [r1]
    2958:	mov	r1, #4
    295c:	ldr	r0, [pc, #700]	; 2c20 <sfbpf_compile+0xbb8>
    2960:	add	r0, pc, r0
    2964:	str	r1, [r0]
    2968:	mov	r1, #0
    296c:	ldr	r0, [pc, #676]	; 2c18 <sfbpf_compile+0xbb0>
    2970:	add	r0, pc, r0
    2974:	b	2a04 <sfbpf_compile+0x99c>
    2978:	mov	r0, #4
    297c:	ldr	r1, [pc, #836]	; 2cc8 <sfbpf_compile+0xc60>
    2980:	add	r1, pc, r1
    2984:	str	r0, [r1]
    2988:	ldr	r1, [pc, #828]	; 2ccc <sfbpf_compile+0xc64>
    298c:	add	r1, pc, r1
    2990:	str	r0, [r1]
    2994:	mov	r1, #0
    2998:	ldr	r0, [pc, #816]	; 2cd0 <sfbpf_compile+0xc68>
    299c:	add	r0, pc, r0
    29a0:	str	r1, [r0]
    29a4:	mov	r1, #10
    29a8:	ldr	r0, [pc, #804]	; 2cd4 <sfbpf_compile+0xc6c>
    29ac:	add	r0, pc, r0
    29b0:	b	2a10 <sfbpf_compile+0x9a8>
    29b4:	mov	r1, #3
    29b8:	str	r1, [ip]
    29bc:	mov	r1, #2
    29c0:	str	r1, [r9]
    29c4:	mov	r1, #4
    29c8:	str	r1, [r0]
    29cc:	mov	r0, #7
    29d0:	str	r1, [r6]
    29d4:	ldr	r1, [pc, #836]	; 2d20 <sfbpf_compile+0xcb8>
    29d8:	add	r1, pc, r1
    29dc:	str	r0, [r1]
    29e0:	mvn	r1, #0
    29e4:	ldr	r0, [pc, #824]	; 2d24 <sfbpf_compile+0xcbc>
    29e8:	add	r0, pc, r0
    29ec:	str	r1, [r0]
    29f0:	ldr	r0, [pc, #816]	; 2d28 <sfbpf_compile+0xcc0>
    29f4:	add	r0, pc, r0
    29f8:	str	r1, [r0]
    29fc:	ldr	r0, [pc, #572]	; 2c40 <sfbpf_compile+0xbd8>
    2a00:	add	r0, pc, r0
    2a04:	str	r1, [r0]
    2a08:	ldr	r0, [pc, #564]	; 2c44 <sfbpf_compile+0xbdc>
    2a0c:	add	r0, pc, r0
    2a10:	str	r1, [r0]
    2a14:	b	2a94 <sfbpf_compile+0xa2c>
    2a18:	ldr	r1, [pc, #780]	; 2d2c <sfbpf_compile+0xcc4>
    2a1c:	mvn	r0, #0
    2a20:	add	r1, pc, r1
    2a24:	str	r0, [r1]
    2a28:	ldr	r1, [pc, #768]	; 2d30 <sfbpf_compile+0xcc8>
    2a2c:	add	r1, pc, r1
    2a30:	str	r0, [r1]
    2a34:	ldr	r1, [pc, #760]	; 2d34 <sfbpf_compile+0xccc>
    2a38:	add	r1, pc, r1
    2a3c:	str	r0, [r1]
    2a40:	ldr	r1, [pc, #752]	; 2d38 <sfbpf_compile+0xcd0>
    2a44:	add	r1, pc, r1
    2a48:	str	r0, [r1]
    2a4c:	mov	r0, #1
    2a50:	ldr	r1, [pc, #740]	; 2d3c <sfbpf_compile+0xcd4>
    2a54:	add	r1, pc, r1
    2a58:	b	2a90 <sfbpf_compile+0xa28>
    2a5c:	ldr	r1, [pc, #692]	; 2d18 <sfbpf_compile+0xcb0>
    2a60:	mvn	r0, #0
    2a64:	mov	r2, #8
    2a68:	add	r1, pc, r1
    2a6c:	str	r0, [r1]
    2a70:	ldr	r1, [pc, #676]	; 2d1c <sfbpf_compile+0xcb4>
    2a74:	add	r1, pc, r1
    2a78:	str	r2, [r1]
    2a7c:	ldr	r1, [pc, #536]	; 2c9c <sfbpf_compile+0xc34>
    2a80:	add	r1, pc, r1
    2a84:	str	r0, [r1]
    2a88:	ldr	r1, [pc, #528]	; 2ca0 <sfbpf_compile+0xc38>
    2a8c:	add	r1, pc, r1
    2a90:	str	r0, [r1]
    2a94:	ldr	r6, [sp]
    2a98:	ldr	r7, [pc, #424]	; 2c48 <sfbpf_compile+0xbe0>
    2a9c:	add	r7, pc, r7
    2aa0:	bl	ed8c <sfbpf_parse>
    2aa4:	ldr	r0, [pc, #416]	; 2c4c <sfbpf_compile+0xbe4>
    2aa8:	ldr	r0, [pc, r0]
    2aac:	ldr	r0, [r0]
    2ab0:	cmp	r0, #0
    2ab4:	bne	2b74 <sfbpf_compile+0xb0c>
    2ab8:	ldr	r0, [pc, #400]	; 2c50 <sfbpf_compile+0xbe8>
    2abc:	ldr	r4, [fp, #8]
    2ac0:	ldr	r0, [pc, r0]
    2ac4:	cmp	r0, #0
    2ac8:	bne	2af0 <sfbpf_compile+0xa88>
    2acc:	ldr	r5, [pc, #384]	; 2c54 <sfbpf_compile+0xbec>
    2ad0:	mov	r0, #208	; 0xd0
    2ad4:	ldr	r5, [pc, r5]
    2ad8:	bl	1fbc <newchunk>
    2adc:	mov	r1, #6
    2ae0:	str	r1, [r0, #8]
    2ae4:	str	r5, [r0, #20]
    2ae8:	str	r0, [r0, #96]	; 0x60
    2aec:	str	r0, [r7]
    2af0:	cmp	r4, #0
    2af4:	beq	2b3c <sfbpf_compile+0xad4>
    2af8:	ldr	r1, [pc, #344]	; 2c58 <sfbpf_compile+0xbf0>
    2afc:	ldr	r1, [pc, r1]
    2b00:	cmp	r1, #0
    2b04:	bne	2b3c <sfbpf_compile+0xad4>
    2b08:	ldr	r0, [pc, #332]	; 2c5c <sfbpf_compile+0xbf4>
    2b0c:	add	r0, pc, r0
    2b10:	bl	c12c <sf_bpf_optimize>
    2b14:	ldr	r0, [pc, #324]	; 2c60 <sfbpf_compile+0xbf8>
    2b18:	ldr	r0, [pc, r0]
    2b1c:	cmp	r0, #0
    2b20:	beq	2b78 <sfbpf_compile+0xb10>
    2b24:	ldr	r1, [r0, #8]
    2b28:	cmp	r1, #6
    2b2c:	bne	2b3c <sfbpf_compile+0xad4>
    2b30:	ldr	r1, [r0, #20]
    2b34:	cmp	r1, #0
    2b38:	beq	2b78 <sfbpf_compile+0xb10>
    2b3c:	add	r1, sp, #4
    2b40:	bl	dd5c <sf_icode_to_fcode>
    2b44:	ldr	r1, [sp, #4]
    2b48:	str	r1, [r6]
    2b4c:	str	r0, [r6, #4]
    2b50:	bl	124c4 <sf_lex_cleanup>
    2b54:	bl	2d58 <freechunks>
    2b58:	mov	r0, #0
    2b5c:	sub	sp, fp, #28
    2b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b64:	ldr	r0, [pc, #484]	; 2d50 <sfbpf_compile+0xce8>
    2b68:	mov	r1, r5
    2b6c:	add	r0, pc, r0
    2b70:	bl	1f30 <sf_bpf_error>
    2b74:	bl	2db4 <syntax>
    2b78:	ldr	r0, [pc, #468]	; 2d54 <sfbpf_compile+0xcec>
    2b7c:	add	r0, pc, r0
    2b80:	bl	1f30 <sf_bpf_error>
    2b84:	.word	0x0002e918
    2b88:	.word	0x0002e388
    2b8c:	.word	0x0002e468
    2b90:	.word	0x0002e460
    2b94:	.word	0x0002dfdc
    2b98:	.word	0x0002e1b4
    2b9c:	.word	0x0002e32c
    2ba0:	.word	0x0002e314
    2ba4:	.word	0x0002e2f8
    2ba8:	.word	0x0002e2e8
    2bac:	.word	0x0001055c
    2bb0:	.word	0x0002e020
    2bb4:	.word	0x000104c4
    2bb8:	.word	0x0002e29c
    2bbc:	.word	0x0002e278
    2bc0:	.word	0x0002e290
    2bc4:	.word	0x0002e264
    2bc8:	.word	0x0002e278
    2bcc:	.word	0x0002e270
    2bd0:	.word	0x0002e268
    2bd4:	.word	0x0002e260
    2bd8:	.word	0x0002e240
    2bdc:	.word	0x0002e24c
    2be0:	.word	0x0002e244
    2be4:	.word	0x0002e23c
    2be8:	.word	0x0002e234
    2bec:	.word	0x0002e22c
    2bf0:	.word	0x0002e1e4
    2bf4:	.word	0x0002e29c
    2bf8:	.word	0x0002de68
    2bfc:	.word	0x0002de58
    2c00:	.word	0x0002e27c
    2c04:	.word	0x0002e274
    2c08:	.word	0x0002db0c
    2c0c:	.word	0x0002daf8
    2c10:	.word	0x0002de48
    2c14:	.word	0x0002de34
    2c18:	.word	0x0002dad0
    2c1c:	.word	0x0002daec
    2c20:	.word	0x0002dad8
    2c24:	.word	0x0002dbb8
    2c28:	.word	0x0002dba4
    2c2c:	.word	0x0002db9c
    2c30:	.word	0x0002db34
    2c34:	.word	0x0002db20
    2c38:	.word	0x0002dcdc
    2c3c:	.word	0x0002dcc8
    2c40:	.word	0x0002da40
    2c44:	.word	0x0002da40
    2c48:	.word	0x0002d984
    2c4c:	.word	0x0002d608
    2c50:	.word	0x0002d960
    2c54:	.word	0x0002d958
    2c58:	.word	0x0002dea8
    2c5c:	.word	0x0002d914
    2c60:	.word	0x0002d908
    2c64:	.word	0x0002dd04
    2c68:	.word	0x0002dcf0
    2c6c:	.word	0x0002db70
    2c70:	.word	0x0002db60
    2c74:	.word	0x0002db58
    2c78:	.word	0x0002db54
    2c7c:	.word	0x0002dea4
    2c80:	.word	0x0002de90
    2c84:	.word	0x0002dcb0
    2c88:	.word	0x0002dc84
    2c8c:	.word	0x0002dc60
    2c90:	.word	0x0002dc58
    2c94:	.word	0x0002dec0
    2c98:	.word	0x0002deb0
    2c9c:	.word	0x0002d9c0
    2ca0:	.word	0x0002d9c0
    2ca4:	.word	0x0002dcbc
    2ca8:	.word	0x0002dca8
    2cac:	.word	0x0002dd54
    2cb0:	.word	0x0002dd44
    2cb4:	.word	0x0002dd3c
    2cb8:	.word	0x0002ddbc
    2cbc:	.word	0x0002dda8
    2cc0:	.word	0x0002dee4
    2cc4:	.word	0x0002ded4
    2cc8:	.word	0x0002dabc
    2ccc:	.word	0x0002daac
    2cd0:	.word	0x0002daa4
    2cd4:	.word	0x0002daa0
    2cd8:	.word	0x0002de24
    2cdc:	.word	0x0002de18
    2ce0:	.word	0x0002de0c
    2ce4:	.word	0x0002de08
    2ce8:	.word	0x0002dd78
    2cec:	.word	0x0002dd64
    2cf0:	.word	0x0002dc0c
    2cf4:	.word	0x0002dc08
    2cf8:	.word	0x0002dc28
    2cfc:	.word	0x0002dc14
    2d00:	.word	0x0002dc44
    2d04:	.word	0x0002dc34
    2d08:	.word	0x0002dbdc
    2d0c:	.word	0x0002dbcc
    2d10:	.word	0x0002de74
    2d14:	.word	0x0002de64
    2d18:	.word	0x0002d9d4
    2d1c:	.word	0x0002d9c4
    2d20:	.word	0x0002daa0
    2d24:	.word	0x0002da50
    2d28:	.word	0x0002da48
    2d2c:	.word	0x0002da1c
    2d30:	.word	0x0002da0c
    2d34:	.word	0x0002da08
    2d38:	.word	0x0002da08
    2d3c:	.word	0x0002d9f4
    2d40:	.word	0x0002df70
    2d44:	.word	0x0002df60
    2d48:	.word	0x0002dd24
    2d4c:	.word	0x0002dd10
    2d50:	.word	0x000106c8
    2d54:	.word	0x0000fb74

00002d58 <freechunks>:
    2d58:	push	{r4, r5, r6, r7, fp, lr}
    2d5c:	add	fp, sp, #16
    2d60:	ldr	r0, [pc, #68]	; 2dac <freechunks+0x54>
    2d64:	mov	r4, #0
    2d68:	mov	r6, #0
    2d6c:	add	r0, pc, r0
    2d70:	str	r4, [r0]
    2d74:	ldr	r5, [pc, #52]	; 2db0 <freechunks+0x58>
    2d78:	add	r5, pc, r5
    2d7c:	add	r0, r5, r6, lsl #3
    2d80:	ldr	r0, [r0, #4]
    2d84:	cmp	r0, #0
    2d88:	beq	2d9c <freechunks+0x44>
    2d8c:	lsl	r7, r6, #1
    2d90:	bl	e0c <free@plt>
    2d94:	add	r0, r5, r7, lsl #2
    2d98:	str	r4, [r0, #4]
    2d9c:	add	r6, r6, #1
    2da0:	cmp	r6, #16
    2da4:	bne	2d7c <freechunks+0x24>
    2da8:	pop	{r4, r5, r6, r7, fp, pc}
    2dac:	.word	0x0002d790
    2db0:	.word	0x0002d704

00002db4 <syntax>:
    2db4:	push	{fp, lr}
    2db8:	mov	fp, sp
    2dbc:	ldr	r0, [pc, #4]	; 2dc8 <syntax+0x14>
    2dc0:	add	r0, pc, r0
    2dc4:	bl	1f30 <sf_bpf_error>
    2dc8:	.word	0x00010452

00002dcc <sfbpf_freecode>:
    2dcc:	push	{r4, r5, fp, lr}
    2dd0:	add	fp, sp, #8
    2dd4:	mov	r5, #0
    2dd8:	mov	r4, r0
    2ddc:	str	r5, [r0]
    2de0:	ldr	r0, [r0, #4]
    2de4:	cmp	r0, #0
    2de8:	popeq	{r4, r5, fp, pc}
    2dec:	bl	e0c <free@plt>
    2df0:	str	r5, [r4, #4]
    2df4:	pop	{r4, r5, fp, pc}

00002df8 <sf_finish_parse>:
    2df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2dfc:	add	fp, sp, #28
    2e00:	sub	sp, sp, #4
    2e04:	mov	r8, r0
    2e08:	ldr	r9, [r0, #96]	; 0x60
    2e0c:	ldr	r0, [pc, #2808]	; 390c <sf_finish_parse+0xb14>
    2e10:	mov	r5, #0
    2e14:	ldr	r0, [pc, r0]
    2e18:	cmp	r0, #162	; 0xa2
    2e1c:	bgt	2f68 <sf_finish_parse+0x170>
    2e20:	cmp	r0, #119	; 0x77
    2e24:	beq	30b0 <sf_finish_parse+0x2b8>
    2e28:	cmp	r0, #127	; 0x7f
    2e2c:	bne	32e4 <sf_finish_parse+0x4ec>
    2e30:	ldr	r0, [pc, #2776]	; 3910 <sf_finish_parse+0xb18>
    2e34:	ldr	r0, [pc, r0]
    2e38:	cmn	r0, #1
    2e3c:	beq	3318 <sf_finish_parse+0x520>
    2e40:	mov	r0, #20
    2e44:	bl	1fbc <newchunk>
    2e48:	mov	r5, r0
    2e4c:	mov	r0, #3
    2e50:	str	r0, [r5, #12]
    2e54:	mov	r0, #48	; 0x30
    2e58:	str	r0, [r5]
    2e5c:	mov	r0, #20
    2e60:	bl	1fbc <newchunk>
    2e64:	mov	r1, #100	; 0x64
    2e68:	mov	r2, r5
    2e6c:	str	r1, [r0]
    2e70:	mov	r1, r2
    2e74:	ldr	r2, [r2, #16]
    2e78:	cmp	r2, #0
    2e7c:	bne	2e70 <sf_finish_parse+0x78>
    2e80:	str	r0, [r1, #16]
    2e84:	mov	r1, #8
    2e88:	str	r1, [r0, #12]
    2e8c:	mov	r0, #20
    2e90:	bl	1fbc <newchunk>
    2e94:	mov	r1, #7
    2e98:	mov	r2, r5
    2e9c:	str	r1, [r0]
    2ea0:	mov	r1, r2
    2ea4:	ldr	r2, [r2, #16]
    2ea8:	cmp	r2, #0
    2eac:	bne	2ea0 <sf_finish_parse+0xa8>
    2eb0:	str	r0, [r1, #16]
    2eb4:	mov	r0, #20
    2eb8:	bl	1fbc <newchunk>
    2ebc:	mov	r1, #48	; 0x30
    2ec0:	mov	r2, r5
    2ec4:	str	r1, [r0]
    2ec8:	mov	r1, r2
    2ecc:	ldr	r2, [r2, #16]
    2ed0:	cmp	r2, #0
    2ed4:	bne	2ec8 <sf_finish_parse+0xd0>
    2ed8:	str	r0, [r1, #16]
    2edc:	mov	r1, #2
    2ee0:	str	r1, [r0, #12]
    2ee4:	mov	r0, #20
    2ee8:	bl	1fbc <newchunk>
    2eec:	mov	r1, #76	; 0x4c
    2ef0:	mov	r2, r5
    2ef4:	str	r1, [r0]
    2ef8:	mov	r1, r2
    2efc:	ldr	r2, [r2, #16]
    2f00:	cmp	r2, #0
    2f04:	bne	2ef8 <sf_finish_parse+0x100>
    2f08:	str	r0, [r1, #16]
    2f0c:	mov	r0, #20
    2f10:	bl	1fbc <newchunk>
    2f14:	mov	r1, #2
    2f18:	mov	r2, r5
    2f1c:	str	r1, [r0]
    2f20:	ldr	r1, [pc, #2540]	; 3914 <sf_finish_parse+0xb1c>
    2f24:	ldr	r1, [pc, r1]
    2f28:	str	r1, [r0, #12]
    2f2c:	mov	r1, r2
    2f30:	ldr	r2, [r2, #16]
    2f34:	cmp	r2, #0
    2f38:	bne	2f2c <sf_finish_parse+0x134>
    2f3c:	str	r0, [r1, #16]
    2f40:	mov	r0, #20
    2f44:	bl	1fbc <newchunk>
    2f48:	mov	r1, #7
    2f4c:	mov	r2, r5
    2f50:	str	r1, [r0]
    2f54:	mov	r1, r2
    2f58:	ldr	r2, [r2, #16]
    2f5c:	cmp	r2, #0
    2f60:	bne	2f54 <sf_finish_parse+0x15c>
    2f64:	b	32d8 <sf_finish_parse+0x4e0>
    2f68:	cmp	r0, #163	; 0xa3
    2f6c:	beq	3254 <sf_finish_parse+0x45c>
    2f70:	cmp	r0, #192	; 0xc0
    2f74:	bne	32e4 <sf_finish_parse+0x4ec>
    2f78:	ldr	r0, [pc, #2456]	; 3918 <sf_finish_parse+0xb20>
    2f7c:	ldr	r0, [pc, r0]
    2f80:	cmn	r0, #1
    2f84:	beq	3318 <sf_finish_parse+0x520>
    2f88:	mov	r0, #20
    2f8c:	bl	1fbc <newchunk>
    2f90:	mov	r5, r0
    2f94:	mov	r0, #3
    2f98:	str	r0, [r5, #12]
    2f9c:	mov	r0, #48	; 0x30
    2fa0:	str	r0, [r5]
    2fa4:	mov	r0, #20
    2fa8:	bl	1fbc <newchunk>
    2fac:	mov	r1, #100	; 0x64
    2fb0:	mov	r2, r5
    2fb4:	str	r1, [r0]
    2fb8:	mov	r1, r2
    2fbc:	ldr	r2, [r2, #16]
    2fc0:	cmp	r2, #0
    2fc4:	bne	2fb8 <sf_finish_parse+0x1c0>
    2fc8:	str	r0, [r1, #16]
    2fcc:	mov	r1, #8
    2fd0:	str	r1, [r0, #12]
    2fd4:	mov	r0, #20
    2fd8:	bl	1fbc <newchunk>
    2fdc:	mov	r1, #7
    2fe0:	mov	r2, r5
    2fe4:	str	r1, [r0]
    2fe8:	mov	r1, r2
    2fec:	ldr	r2, [r2, #16]
    2ff0:	cmp	r2, #0
    2ff4:	bne	2fe8 <sf_finish_parse+0x1f0>
    2ff8:	str	r0, [r1, #16]
    2ffc:	mov	r0, #20
    3000:	bl	1fbc <newchunk>
    3004:	mov	r1, #48	; 0x30
    3008:	mov	r2, r5
    300c:	str	r1, [r0]
    3010:	mov	r1, r2
    3014:	ldr	r2, [r2, #16]
    3018:	cmp	r2, #0
    301c:	bne	3010 <sf_finish_parse+0x218>
    3020:	str	r0, [r1, #16]
    3024:	mov	r1, #2
    3028:	str	r1, [r0, #12]
    302c:	mov	r0, #20
    3030:	bl	1fbc <newchunk>
    3034:	mov	r1, #76	; 0x4c
    3038:	mov	r2, r5
    303c:	str	r1, [r0]
    3040:	mov	r1, r2
    3044:	ldr	r2, [r2, #16]
    3048:	cmp	r2, #0
    304c:	bne	3040 <sf_finish_parse+0x248>
    3050:	str	r0, [r1, #16]
    3054:	mov	r0, #20
    3058:	bl	1fbc <newchunk>
    305c:	mov	r1, #2
    3060:	mov	r2, r5
    3064:	str	r1, [r0]
    3068:	ldr	r1, [pc, #2220]	; 391c <sf_finish_parse+0xb24>
    306c:	ldr	r1, [pc, r1]
    3070:	str	r1, [r0, #12]
    3074:	mov	r1, r2
    3078:	ldr	r2, [r2, #16]
    307c:	cmp	r2, #0
    3080:	bne	3074 <sf_finish_parse+0x27c>
    3084:	str	r0, [r1, #16]
    3088:	mov	r0, #20
    308c:	bl	1fbc <newchunk>
    3090:	mov	r1, #7
    3094:	mov	r2, r5
    3098:	str	r1, [r0]
    309c:	mov	r1, r2
    30a0:	ldr	r2, [r2, #16]
    30a4:	cmp	r2, #0
    30a8:	bne	309c <sf_finish_parse+0x2a4>
    30ac:	b	32d8 <sf_finish_parse+0x4e0>
    30b0:	ldr	r0, [pc, #2152]	; 3920 <sf_finish_parse+0xb28>
    30b4:	mov	r1, #1
    30b8:	add	r0, pc, r0
    30bc:	str	r1, [r0]
    30c0:	ldr	r0, [pc, #2140]	; 3924 <sf_finish_parse+0xb2c>
    30c4:	ldr	r0, [pc, r0]
    30c8:	cmn	r0, #1
    30cc:	beq	3318 <sf_finish_parse+0x520>
    30d0:	mov	r0, #20
    30d4:	bl	1fbc <newchunk>
    30d8:	mov	r5, r0
    30dc:	mov	r0, #0
    30e0:	str	r0, [r5, #12]
    30e4:	mov	r0, #32
    30e8:	str	r0, [r5]
    30ec:	mov	r0, #20
    30f0:	bl	1fbc <newchunk>
    30f4:	movw	r1, #61440	; 0xf000
    30f8:	mov	r2, r5
    30fc:	movt	r1, #65535	; 0xffff
    3100:	str	r1, [r0, #12]
    3104:	mov	r1, #84	; 0x54
    3108:	str	r1, [r0]
    310c:	mov	r1, r2
    3110:	ldr	r2, [r2, #16]
    3114:	cmp	r2, #0
    3118:	bne	310c <sf_finish_parse+0x314>
    311c:	str	r0, [r1, #16]
    3120:	mov	r0, #20
    3124:	bl	1fbc <newchunk>
    3128:	mov	r6, r0
    312c:	movw	r0, #4096	; 0x1000
    3130:	mov	r1, r5
    3134:	movt	r0, #32801	; 0x8021
    3138:	str	r0, [r6, #12]
    313c:	mov	r0, #21
    3140:	str	r0, [r6]
    3144:	mov	r0, r1
    3148:	ldr	r1, [r1, #16]
    314c:	cmp	r1, #0
    3150:	bne	3144 <sf_finish_parse+0x34c>
    3154:	str	r6, [r0, #16]
    3158:	mov	r0, #20
    315c:	bl	1fbc <newchunk>
    3160:	mov	r1, #4
    3164:	mov	r2, r5
    3168:	str	r1, [r0, #12]
    316c:	mov	r1, #32
    3170:	str	r1, [r0]
    3174:	mov	r1, r2
    3178:	ldr	r2, [r2, #16]
    317c:	cmp	r2, #0
    3180:	bne	3174 <sf_finish_parse+0x37c>
    3184:	str	r0, [r1, #16]
    3188:	str	r0, [r6, #4]
    318c:	mov	r0, #20
    3190:	bl	1fbc <newchunk>
    3194:	mov	r4, r0
    3198:	mov	r0, #1
    319c:	mov	r1, r5
    31a0:	str	r0, [r4, #12]
    31a4:	mov	r0, #5
    31a8:	str	r0, [r4]
    31ac:	mov	r0, r1
    31b0:	ldr	r1, [r1, #16]
    31b4:	cmp	r1, #0
    31b8:	bne	31ac <sf_finish_parse+0x3b4>
    31bc:	str	r4, [r0, #16]
    31c0:	mov	r0, #20
    31c4:	bl	1fbc <newchunk>
    31c8:	mov	r1, #144	; 0x90
    31cc:	mov	r2, r5
    31d0:	str	r1, [r0, #12]
    31d4:	mov	r1, #0
    31d8:	str	r1, [r0]
    31dc:	mov	r1, r2
    31e0:	ldr	r2, [r2, #16]
    31e4:	cmp	r2, #0
    31e8:	bne	31dc <sf_finish_parse+0x3e4>
    31ec:	str	r0, [r1, #16]
    31f0:	str	r0, [r6, #8]
    31f4:	mov	r0, #20
    31f8:	bl	1fbc <newchunk>
    31fc:	mov	r1, #2
    3200:	mov	r2, r5
    3204:	str	r1, [r0]
    3208:	ldr	r1, [pc, #1816]	; 3928 <sf_finish_parse+0xb30>
    320c:	ldr	r1, [pc, r1]
    3210:	str	r1, [r0, #12]
    3214:	mov	r1, r2
    3218:	ldr	r2, [r2, #16]
    321c:	cmp	r2, #0
    3220:	bne	3214 <sf_finish_parse+0x41c>
    3224:	str	r0, [r1, #16]
    3228:	str	r0, [r4, #8]
    322c:	mov	r0, #20
    3230:	bl	1fbc <newchunk>
    3234:	mov	r1, #7
    3238:	mov	r2, r5
    323c:	str	r1, [r0]
    3240:	mov	r1, r2
    3244:	ldr	r2, [r2, #16]
    3248:	cmp	r2, #0
    324c:	bne	3240 <sf_finish_parse+0x448>
    3250:	b	32d8 <sf_finish_parse+0x4e0>
    3254:	ldr	r0, [pc, #1744]	; 392c <sf_finish_parse+0xb34>
    3258:	ldr	r0, [pc, r0]
    325c:	cmn	r0, #1
    3260:	beq	3318 <sf_finish_parse+0x520>
    3264:	mov	r0, #20
    3268:	bl	1fbc <newchunk>
    326c:	mov	r5, r0
    3270:	mov	r0, #4
    3274:	str	r0, [r5, #12]
    3278:	mov	r0, #32
    327c:	str	r0, [r5]
    3280:	mov	r0, #20
    3284:	bl	1fbc <newchunk>
    3288:	mov	r1, #2
    328c:	mov	r2, r5
    3290:	str	r1, [r0]
    3294:	ldr	r1, [pc, #1684]	; 3930 <sf_finish_parse+0xb38>
    3298:	ldr	r1, [pc, r1]
    329c:	str	r1, [r0, #12]
    32a0:	mov	r1, r2
    32a4:	ldr	r2, [r2, #16]
    32a8:	cmp	r2, #0
    32ac:	bne	32a0 <sf_finish_parse+0x4a8>
    32b0:	str	r0, [r1, #16]
    32b4:	mov	r0, #20
    32b8:	bl	1fbc <newchunk>
    32bc:	mov	r1, #7
    32c0:	mov	r2, r5
    32c4:	str	r1, [r0]
    32c8:	mov	r1, r2
    32cc:	ldr	r2, [r2, #16]
    32d0:	cmp	r2, #0
    32d4:	bne	32c8 <sf_finish_parse+0x4d0>
    32d8:	str	r0, [r1, #16]
    32dc:	ldr	r0, [pc, #1616]	; 3934 <sf_finish_parse+0xb3c>
    32e0:	ldr	r0, [pc, r0]
    32e4:	sub	r1, r0, #105	; 0x69
    32e8:	cmp	r1, #22
    32ec:	bhi	3304 <sf_finish_parse+0x50c>
    32f0:	movw	r3, #16385	; 0x4001
    32f4:	mov	r2, #1
    32f8:	movt	r3, #64	; 0x40
    32fc:	tst	r3, r2, lsl r1
    3300:	bne	331c <sf_finish_parse+0x524>
    3304:	cmp	r0, #192	; 0xc0
    3308:	beq	331c <sf_finish_parse+0x524>
    330c:	cmp	r0, #163	; 0xa3
    3310:	beq	331c <sf_finish_parse+0x524>
    3314:	b	37c4 <sf_finish_parse+0x9cc>
    3318:	mov	r5, #0
    331c:	ldr	r0, [pc, #1556]	; 3938 <sf_finish_parse+0xb40>
    3320:	ldr	r0, [pc, r0]
    3324:	cmn	r0, #1
    3328:	beq	37c4 <sf_finish_parse+0x9cc>
    332c:	ldr	sl, [r9, #4]
    3330:	ldr	r0, [pc, #1540]	; 393c <sf_finish_parse+0xb44>
    3334:	mov	r4, #1
    3338:	cmp	r5, #0
    333c:	add	r0, pc, r0
    3340:	str	r4, [r0]
    3344:	bne	3360 <sf_finish_parse+0x568>
    3348:	mov	r0, #20
    334c:	bl	1fbc <newchunk>
    3350:	mov	r5, r0
    3354:	mov	r0, #0
    3358:	str	r0, [r5, #12]
    335c:	str	r4, [r5]
    3360:	mov	r0, #20
    3364:	bl	1fbc <newchunk>
    3368:	mov	r1, #135	; 0x87
    336c:	mov	r2, r5
    3370:	str	r1, [r0]
    3374:	mov	r1, r2
    3378:	ldr	r2, [r2, #16]
    337c:	cmp	r2, #0
    3380:	bne	3374 <sf_finish_parse+0x57c>
    3384:	str	r0, [r1, #16]
    3388:	mov	r0, #20
    338c:	bl	1fbc <newchunk>
    3390:	mov	r1, #24
    3394:	mov	r2, r5
    3398:	str	r1, [r0, #12]
    339c:	mov	r1, #4
    33a0:	str	r1, [r0]
    33a4:	mov	r1, r2
    33a8:	ldr	r2, [r2, #16]
    33ac:	cmp	r2, #0
    33b0:	bne	33a4 <sf_finish_parse+0x5ac>
    33b4:	str	r0, [r1, #16]
    33b8:	mov	r0, #20
    33bc:	bl	1fbc <newchunk>
    33c0:	mov	r1, #2
    33c4:	mov	r2, r5
    33c8:	str	r1, [r0]
    33cc:	ldr	r1, [pc, #1388]	; 3940 <sf_finish_parse+0xb48>
    33d0:	ldr	r1, [pc, r1]
    33d4:	str	r1, [r0, #12]
    33d8:	mov	r1, r2
    33dc:	ldr	r2, [r2, #16]
    33e0:	cmp	r2, #0
    33e4:	bne	33d8 <sf_finish_parse+0x5e0>
    33e8:	str	r0, [r1, #16]
    33ec:	mov	r0, #20
    33f0:	bl	1fbc <newchunk>
    33f4:	mov	r1, #0
    33f8:	mov	r2, r5
    33fc:	str	r1, [r0, #12]
    3400:	mov	r1, #80	; 0x50
    3404:	str	r1, [r0]
    3408:	mov	r1, r2
    340c:	ldr	r2, [r2, #16]
    3410:	cmp	r2, #0
    3414:	bne	3408 <sf_finish_parse+0x610>
    3418:	str	r0, [r1, #16]
    341c:	mov	r0, #20
    3420:	bl	1fbc <newchunk>
    3424:	mov	r4, r0
    3428:	mov	r0, #8
    342c:	mov	r1, r5
    3430:	str	r0, [r4, #12]
    3434:	mov	r0, #69	; 0x45
    3438:	str	r0, [r4]
    343c:	mov	r0, r1
    3440:	ldr	r1, [r1, #16]
    3444:	cmp	r1, #0
    3448:	bne	343c <sf_finish_parse+0x644>
    344c:	str	r4, [r0, #16]
    3450:	mov	r0, #20
    3454:	bl	1fbc <newchunk>
    3458:	mov	r7, r0
    345c:	mov	r0, #69	; 0x45
    3460:	mov	r1, r5
    3464:	str	r0, [r7]
    3468:	mov	r0, #4
    346c:	str	r7, [r4, #4]
    3470:	str	r0, [r7, #12]
    3474:	mov	r0, r1
    3478:	ldr	r1, [r1, #16]
    347c:	cmp	r1, #0
    3480:	bne	3474 <sf_finish_parse+0x67c>
    3484:	str	r7, [r0, #16]
    3488:	mov	r0, #20
    348c:	str	sl, [r4, #8]
    3490:	str	sl, [r7, #4]
    3494:	bl	1fbc <newchunk>
    3498:	mov	r6, r0
    349c:	mov	r0, #69	; 0x45
    34a0:	mov	r1, r5
    34a4:	str	r0, [r6]
    34a8:	mov	r0, #128	; 0x80
    34ac:	str	r6, [r7, #8]
    34b0:	str	r0, [r6, #12]
    34b4:	mov	r0, r1
    34b8:	ldr	r1, [r1, #16]
    34bc:	cmp	r1, #0
    34c0:	bne	34b4 <sf_finish_parse+0x6bc>
    34c4:	str	r6, [r0, #16]
    34c8:	mov	r0, #20
    34cc:	bl	1fbc <newchunk>
    34d0:	mov	r1, #96	; 0x60
    34d4:	mov	r2, r5
    34d8:	str	r1, [r0]
    34dc:	str	r0, [r6, #4]
    34e0:	ldr	r1, [pc, #1116]	; 3944 <sf_finish_parse+0xb4c>
    34e4:	ldr	r1, [pc, r1]
    34e8:	str	r1, [r0, #12]
    34ec:	mov	r1, r2
    34f0:	ldr	r2, [r2, #16]
    34f4:	cmp	r2, #0
    34f8:	bne	34ec <sf_finish_parse+0x6f4>
    34fc:	str	r0, [r1, #16]
    3500:	mov	r0, #20
    3504:	bl	1fbc <newchunk>
    3508:	mov	r1, #2
    350c:	mov	r2, r5
    3510:	str	r1, [r0, #12]
    3514:	mov	r1, #4
    3518:	str	r1, [r0]
    351c:	mov	r1, r2
    3520:	ldr	r2, [r2, #16]
    3524:	cmp	r2, #0
    3528:	bne	351c <sf_finish_parse+0x724>
    352c:	str	r0, [r1, #16]
    3530:	mov	r0, #20
    3534:	bl	1fbc <newchunk>
    3538:	mov	r1, #2
    353c:	mov	r2, r5
    3540:	str	r1, [r0]
    3544:	ldr	r1, [pc, #1020]	; 3948 <sf_finish_parse+0xb50>
    3548:	ldr	r1, [pc, r1]
    354c:	str	r1, [r0, #12]
    3550:	mov	r1, r2
    3554:	ldr	r2, [r2, #16]
    3558:	cmp	r2, #0
    355c:	bne	3550 <sf_finish_parse+0x758>
    3560:	str	r0, [r1, #16]
    3564:	ldr	r0, [pc, #992]	; 394c <sf_finish_parse+0xb54>
    3568:	ldr	r0, [pc, r0]
    356c:	cmp	r0, #127	; 0x7f
    3570:	bne	37c0 <sf_finish_parse+0x9c8>
    3574:	mov	r0, #20
    3578:	bl	1fbc <newchunk>
    357c:	mov	r1, #32
    3580:	mov	r2, r5
    3584:	str	r1, [r0]
    3588:	mov	r1, #4
    358c:	str	r0, [r6, #8]
    3590:	str	r1, [r0, #12]
    3594:	mov	r1, r2
    3598:	ldr	r2, [r2, #16]
    359c:	cmp	r2, #0
    35a0:	bne	3594 <sf_finish_parse+0x79c>
    35a4:	str	r0, [r1, #16]
    35a8:	mov	r0, #20
    35ac:	bl	1fbc <newchunk>
    35b0:	mov	r6, r0
    35b4:	mov	r0, #33554432	; 0x2000000
    35b8:	mov	r1, r5
    35bc:	str	r0, [r6, #12]
    35c0:	mov	r0, #69	; 0x45
    35c4:	str	r0, [r6]
    35c8:	mov	r0, r1
    35cc:	ldr	r1, [r1, #16]
    35d0:	cmp	r1, #0
    35d4:	bne	35c8 <sf_finish_parse+0x7d0>
    35d8:	str	r6, [r0, #16]
    35dc:	mov	r0, #20
    35e0:	str	sl, [r6, #8]
    35e4:	bl	1fbc <newchunk>
    35e8:	mov	r4, r0
    35ec:	mov	r0, #69	; 0x45
    35f0:	mov	r1, r5
    35f4:	str	r0, [r4]
    35f8:	mov	r0, #16777216	; 0x1000000
    35fc:	str	r4, [r6, #4]
    3600:	str	r0, [r4, #12]
    3604:	mov	r0, r1
    3608:	ldr	r1, [r1, #16]
    360c:	cmp	r1, #0
    3610:	bne	3604 <sf_finish_parse+0x80c>
    3614:	str	r4, [r0, #16]
    3618:	mov	r0, #20
    361c:	bl	1fbc <newchunk>
    3620:	mov	r1, #48	; 0x30
    3624:	mov	r2, r5
    3628:	str	r1, [r0]
    362c:	mov	r1, #16
    3630:	str	r0, [r4, #4]
    3634:	str	r1, [r0, #12]
    3638:	mov	r1, r2
    363c:	ldr	r2, [r2, #16]
    3640:	cmp	r2, #0
    3644:	bne	3638 <sf_finish_parse+0x840>
    3648:	str	r0, [r1, #16]
    364c:	mov	r0, #20
    3650:	bl	1fbc <newchunk>
    3654:	mov	r6, r0
    3658:	mov	r0, #32
    365c:	mov	r1, r5
    3660:	str	r0, [r6, #12]
    3664:	mov	r0, #69	; 0x45
    3668:	str	r0, [r6]
    366c:	mov	r0, r1
    3670:	ldr	r1, [r1, #16]
    3674:	cmp	r1, #0
    3678:	bne	366c <sf_finish_parse+0x874>
    367c:	str	r6, [r0, #16]
    3680:	mov	r0, #20
    3684:	bl	1fbc <newchunk>
    3688:	mov	r1, #48	; 0x30
    368c:	mov	r2, r5
    3690:	str	r1, [r0]
    3694:	mov	r1, #8
    3698:	str	r0, [r4, #8]
    369c:	str	r1, [r0, #12]
    36a0:	mov	r1, r2
    36a4:	ldr	r2, [r2, #16]
    36a8:	cmp	r2, #0
    36ac:	bne	36a0 <sf_finish_parse+0x8a8>
    36b0:	str	r0, [r1, #16]
    36b4:	mov	r0, #20
    36b8:	bl	1fbc <newchunk>
    36bc:	mov	r7, r0
    36c0:	mov	r0, #32
    36c4:	mov	r1, r5
    36c8:	str	r0, [r7, #12]
    36cc:	mov	r0, #69	; 0x45
    36d0:	str	r0, [r7]
    36d4:	mov	r0, r1
    36d8:	ldr	r1, [r1, #16]
    36dc:	cmp	r1, #0
    36e0:	bne	36d4 <sf_finish_parse+0x8dc>
    36e4:	str	r7, [r0, #16]
    36e8:	mov	r0, #20
    36ec:	bl	1fbc <newchunk>
    36f0:	mov	r4, r0
    36f4:	mov	r0, #96	; 0x60
    36f8:	mov	r1, r5
    36fc:	str	r0, [r4]
    3700:	ldr	r0, [pc, #584]	; 3950 <sf_finish_parse+0xb58>
    3704:	ldr	r0, [pc, r0]
    3708:	str	r0, [r4, #12]
    370c:	mov	r0, r1
    3710:	ldr	r1, [r1, #16]
    3714:	cmp	r1, #0
    3718:	bne	370c <sf_finish_parse+0x914>
    371c:	str	r4, [r0, #16]
    3720:	mov	r0, #20
    3724:	bl	1fbc <newchunk>
    3728:	mov	r1, #3
    372c:	mov	r2, r5
    3730:	str	r1, [r0, #12]
    3734:	mov	r1, #4
    3738:	str	r1, [r0]
    373c:	mov	r1, r2
    3740:	ldr	r2, [r2, #16]
    3744:	cmp	r2, #0
    3748:	bne	373c <sf_finish_parse+0x944>
    374c:	str	r0, [r1, #16]
    3750:	mov	r0, #20
    3754:	bl	1fbc <newchunk>
    3758:	mvn	r1, #3
    375c:	mov	r2, r5
    3760:	str	r1, [r0, #12]
    3764:	mov	r1, #84	; 0x54
    3768:	str	r1, [r0]
    376c:	mov	r1, r2
    3770:	ldr	r2, [r2, #16]
    3774:	cmp	r2, #0
    3778:	bne	376c <sf_finish_parse+0x974>
    377c:	str	r0, [r1, #16]
    3780:	mov	r0, #20
    3784:	bl	1fbc <newchunk>
    3788:	mov	r1, #2
    378c:	mov	r2, r5
    3790:	str	r1, [r0]
    3794:	ldr	r1, [pc, #440]	; 3954 <sf_finish_parse+0xb5c>
    3798:	ldr	r1, [pc, r1]
    379c:	str	r1, [r0, #12]
    37a0:	mov	r1, r2
    37a4:	ldr	r2, [r2, #16]
    37a8:	cmp	r2, #0
    37ac:	bne	37a0 <sf_finish_parse+0x9a8>
    37b0:	str	r0, [r1, #16]
    37b4:	stmib	r6, {r4, sl}
    37b8:	stmib	r7, {r4, sl}
    37bc:	b	37c4 <sf_finish_parse+0x9cc>
    37c0:	str	sl, [r6, #8]
    37c4:	cmp	r5, #0
    37c8:	beq	37ec <sf_finish_parse+0x9f4>
    37cc:	ldr	r0, [r9, #4]
    37d0:	mov	r2, r5
    37d4:	mov	r1, r2
    37d8:	ldr	r2, [r2, #16]
    37dc:	cmp	r2, #0
    37e0:	bne	37d4 <sf_finish_parse+0x9dc>
    37e4:	str	r0, [r1, #16]
    37e8:	str	r5, [r9, #4]
    37ec:	ldr	r0, [pc, #356]	; 3958 <sf_finish_parse+0xb60>
    37f0:	ldr	r0, [pc, r0]
    37f4:	cmp	r0, #192	; 0xc0
    37f8:	bne	3844 <sf_finish_parse+0xa4c>
    37fc:	mov	r0, #20
    3800:	bl	1fbc <newchunk>
    3804:	mov	r4, r0
    3808:	mov	r0, #4
    380c:	str	r0, [r4, #12]
    3810:	mov	r0, #32
    3814:	str	r0, [r4]
    3818:	mov	r0, #208	; 0xd0
    381c:	bl	1fbc <newchunk>
    3820:	mov	r2, #1761607680	; 0x69000000
    3824:	mov	r1, #21
    3828:	cmp	r0, #0
    382c:	str	r2, [r0, #20]
    3830:	str	r4, [r0, #4]
    3834:	str	r1, [r0, #8]
    3838:	movne	r1, r8
    383c:	str	r0, [r0, #96]	; 0x60
    3840:	blne	3964 <sf_gen_and>
    3844:	ldr	r5, [pc, #272]	; 395c <sf_finish_parse+0xb64>
    3848:	mov	r0, #208	; 0xd0
    384c:	ldr	r5, [pc, r5]
    3850:	bl	1fbc <newchunk>
    3854:	mov	r4, #6
    3858:	cmp	r8, #0
    385c:	str	r4, [r0, #8]
    3860:	str	r5, [r0, #20]
    3864:	str	r0, [r0, #96]	; 0x60
    3868:	beq	3898 <sf_finish_parse+0xaa0>
    386c:	mov	r1, r8
    3870:	ldr	r2, [r1, #44]	; 0x2c
    3874:	add	r3, r1, #84	; 0x54
    3878:	cmp	r2, #0
    387c:	mov	r2, #84	; 0x54
    3880:	movweq	r2, #60	; 0x3c
    3884:	addeq	r3, r1, #60	; 0x3c
    3888:	ldr	r1, [r1, r2]
    388c:	str	r0, [r3]
    3890:	cmp	r1, #0
    3894:	bne	3870 <sf_finish_parse+0xa78>
    3898:	ldr	r0, [r8, #44]	; 0x2c
    389c:	clz	r0, r0
    38a0:	lsr	r0, r0, #5
    38a4:	str	r0, [r8, #44]	; 0x2c
    38a8:	mov	r0, #208	; 0xd0
    38ac:	bl	1fbc <newchunk>
    38b0:	cmp	r8, #0
    38b4:	mov	r1, #0
    38b8:	str	r4, [r0, #8]
    38bc:	str	r1, [r0, #20]
    38c0:	str	r0, [r0, #96]	; 0x60
    38c4:	beq	38f4 <sf_finish_parse+0xafc>
    38c8:	mov	r1, r8
    38cc:	ldr	r2, [r1, #44]	; 0x2c
    38d0:	add	r3, r1, #84	; 0x54
    38d4:	cmp	r2, #0
    38d8:	mov	r2, #84	; 0x54
    38dc:	movweq	r2, #60	; 0x3c
    38e0:	addeq	r3, r1, #60	; 0x3c
    38e4:	ldr	r1, [r1, r2]
    38e8:	str	r0, [r3]
    38ec:	cmp	r1, #0
    38f0:	bne	38cc <sf_finish_parse+0xad4>
    38f4:	ldr	r0, [r8, #96]	; 0x60
    38f8:	ldr	r1, [pc, #96]	; 3960 <sf_finish_parse+0xb68>
    38fc:	add	r1, pc, r1
    3900:	str	r0, [r1]
    3904:	sub	sp, fp, #28
    3908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    390c:	.word	0x0002d61c
    3910:	.word	0x0002d6d0
    3914:	.word	0x0002d5e0
    3918:	.word	0x0002d588
    391c:	.word	0x0002d498
    3920:	.word	0x0002d8ec
    3924:	.word	0x0002d440
    3928:	.word	0x0002d2f8
    392c:	.word	0x0002d2ac
    3930:	.word	0x0002d26c
    3934:	.word	0x0002d150
    3938:	.word	0x0002d1e8
    393c:	.word	0x0002d668
    3940:	.word	0x0002d138
    3944:	.word	0x0002d024
    3948:	.word	0x0002cfc0
    394c:	.word	0x0002cec8
    3950:	.word	0x0002ce04
    3954:	.word	0x0002cd70
    3958:	.word	0x0002cc40
    395c:	.word	0x0002cbe0
    3960:	.word	0x0002cb24

00003964 <sf_gen_and>:
    3964:	push	{r4, sl, fp, lr}
    3968:	add	fp, sp, #8
    396c:	sub	sp, sp, #4
    3970:	cmp	r0, #0
    3974:	beq	39a8 <sf_gen_and+0x44>
    3978:	ldr	ip, [r1, #96]	; 0x60
    397c:	mov	r3, r0
    3980:	ldr	lr, [r3, #44]	; 0x2c
    3984:	mov	r2, #84	; 0x54
    3988:	add	r4, r3, #84	; 0x54
    398c:	cmp	lr, #0
    3990:	movweq	r2, #60	; 0x3c
    3994:	addeq	r4, r3, #60	; 0x3c
    3998:	ldr	r3, [r3, r2]
    399c:	str	ip, [r4]
    39a0:	cmp	r3, #0
    39a4:	bne	3980 <sf_gen_and+0x1c>
    39a8:	ldr	r2, [r0, #44]	; 0x2c
    39ac:	cmp	r1, #0
    39b0:	clz	r2, r2
    39b4:	lsr	r2, r2, #5
    39b8:	str	r2, [r0, #44]	; 0x2c
    39bc:	ldr	r3, [r1, #44]	; 0x2c
    39c0:	clz	r2, r3
    39c4:	lsr	r2, r2, #5
    39c8:	str	r2, [r1, #44]	; 0x2c
    39cc:	str	r1, [sp]
    39d0:	beq	3a14 <sf_gen_and+0xb0>
    39d4:	cmp	r3, #0
    39d8:	mov	r3, #60	; 0x3c
    39dc:	add	r2, r1, #60	; 0x3c
    39e0:	movweq	r3, #84	; 0x54
    39e4:	addeq	r2, r1, #84	; 0x54
    39e8:	ldr	r3, [r1, r3]
    39ec:	cmp	r3, #0
    39f0:	beq	3a18 <sf_gen_and+0xb4>
    39f4:	ldr	r4, [r3, #44]	; 0x2c
    39f8:	add	r2, r3, #84	; 0x54
    39fc:	cmp	r4, #0
    3a00:	mov	r4, #84	; 0x54
    3a04:	movweq	r4, #60	; 0x3c
    3a08:	addeq	r2, r3, #60	; 0x3c
    3a0c:	ldr	r3, [r3, r4]
    3a10:	b	39ec <sf_gen_and+0x88>
    3a14:	mov	r2, sp
    3a18:	str	r0, [r2]
    3a1c:	ldr	r2, [r1, #44]	; 0x2c
    3a20:	clz	r2, r2
    3a24:	lsr	r2, r2, #5
    3a28:	str	r2, [r1, #44]	; 0x2c
    3a2c:	ldr	r0, [r0, #96]	; 0x60
    3a30:	str	r0, [r1, #96]	; 0x60
    3a34:	sub	sp, fp, #8
    3a38:	pop	{r4, sl, fp, pc}

00003a3c <sf_gen_or>:
    3a3c:	push	{r4, sl, fp, lr}
    3a40:	add	fp, sp, #8
    3a44:	sub	sp, sp, #4
    3a48:	ldr	r2, [r0, #44]	; 0x2c
    3a4c:	cmp	r0, #0
    3a50:	clz	r2, r2
    3a54:	lsr	lr, r2, #5
    3a58:	str	lr, [r0, #44]	; 0x2c
    3a5c:	beq	3a98 <sf_gen_or+0x5c>
    3a60:	ldr	ip, [r1, #96]	; 0x60
    3a64:	mov	r3, r0
    3a68:	cmp	lr, #0
    3a6c:	mov	r2, #84	; 0x54
    3a70:	add	r4, r3, #84	; 0x54
    3a74:	movweq	r2, #60	; 0x3c
    3a78:	addeq	r4, r3, #60	; 0x3c
    3a7c:	ldr	r3, [r3, r2]
    3a80:	str	ip, [r4]
    3a84:	cmp	r3, #0
    3a88:	beq	3a94 <sf_gen_or+0x58>
    3a8c:	ldr	lr, [r3, #44]	; 0x2c
    3a90:	b	3a68 <sf_gen_or+0x2c>
    3a94:	ldr	lr, [r0, #44]	; 0x2c
    3a98:	clz	r2, lr
    3a9c:	cmp	r1, #0
    3aa0:	lsr	r2, r2, #5
    3aa4:	str	r2, [r0, #44]	; 0x2c
    3aa8:	str	r1, [sp]
    3aac:	beq	3adc <sf_gen_or+0xa0>
    3ab0:	mov	r3, r1
    3ab4:	ldr	r4, [r3, #44]	; 0x2c
    3ab8:	add	r2, r3, #84	; 0x54
    3abc:	cmp	r4, #0
    3ac0:	mov	r4, #84	; 0x54
    3ac4:	movweq	r4, #60	; 0x3c
    3ac8:	addeq	r2, r3, #60	; 0x3c
    3acc:	ldr	r3, [r3, r4]
    3ad0:	cmp	r3, #0
    3ad4:	bne	3ab4 <sf_gen_or+0x78>
    3ad8:	b	3ae0 <sf_gen_or+0xa4>
    3adc:	mov	r2, sp
    3ae0:	str	r0, [r2]
    3ae4:	ldr	r0, [r0, #96]	; 0x60
    3ae8:	str	r0, [r1, #96]	; 0x60
    3aec:	sub	sp, fp, #8
    3af0:	pop	{r4, sl, fp, pc}

00003af4 <sf_gen_not>:
    3af4:	ldr	r1, [r0, #44]	; 0x2c
    3af8:	clz	r1, r1
    3afc:	lsr	r1, r1, #5
    3b00:	str	r1, [r0, #44]	; 0x2c
    3b04:	bx	lr

00003b08 <sf_gen_proto_abbrev>:
    3b08:	push	{r4, r5, fp, lr}
    3b0c:	add	fp, sp, #8
    3b10:	sub	r0, r0, #1
    3b14:	cmp	r0, #39	; 0x27
    3b18:	bhi	3f14 <sf_gen_proto_abbrev+0x40c>
    3b1c:	add	r1, pc, #4
    3b20:	ldr	r0, [r1, r0, lsl #2]
    3b24:	add	pc, r1, r0
    3b28:	.word	0x000003f0
    3b2c:	.word	0x000000a0
    3b30:	.word	0x00000100
    3b34:	.word	0x00000108
    3b38:	.word	0x000001c8
    3b3c:	.word	0x00000110
    3b40:	.word	0x000001e4
    3b44:	.word	0x0000012c
    3b48:	.word	0x00000134
    3b4c:	.word	0x00000200
    3b50:	.word	0x0000020c
    3b54:	.word	0x000000e0
    3b58:	.word	0x00000214
    3b5c:	.word	0x000002d4
    3b60:	.word	0x0000013c
    3b64:	.word	0x0000021c
    3b68:	.word	0x000000e8
    3b6c:	.word	0x000002dc
    3b70:	.word	0x00000144
    3b74:	.word	0x00000160
    3b78:	.word	0x000002e8
    3b7c:	.word	0x0000017c
    3b80:	.word	0x00000184
    3b84:	.word	0x00000224
    3b88:	.word	0x00000308
    3b8c:	.word	0x000000f0
    3b90:	.word	0x000000f8
    3b94:	.word	0x0000031c
    3b98:	.word	0x000003a4
    3b9c:	.word	0x00000324
    3ba0:	.word	0x0000032c
    3ba4:	.word	0x0000022c
    3ba8:	.word	0x0000018c
    3bac:	.word	0x000003ec
    3bb0:	.word	0x000003ec
    3bb4:	.word	0x00000280
    3bb8:	.word	0x000000c4
    3bbc:	.word	0x000000a8
    3bc0:	.word	0x000003b0
    3bc4:	.word	0x000003fc
    3bc8:	mov	r0, #2048	; 0x800
    3bcc:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3bd0:	mov	r0, #26
    3bd4:	mov	r1, #26
    3bd8:	mov	r2, #0
    3bdc:	bl	3f38 <gen_proto>
    3be0:	mov	r5, r0
    3be4:	mov	r0, #27
    3be8:	b	3ef0 <sf_gen_proto_abbrev+0x3e8>
    3bec:	mov	r0, #24
    3bf0:	mov	r1, #26
    3bf4:	mov	r2, #0
    3bf8:	bl	3f38 <gen_proto>
    3bfc:	mov	r5, r0
    3c00:	mov	r0, #25
    3c04:	b	3ef0 <sf_gen_proto_abbrev+0x3e8>
    3c08:	movw	r0, #24579	; 0x6003
    3c0c:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3c10:	movw	r0, #34525	; 0x86dd
    3c14:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3c18:	mov	r0, #131	; 0x83
    3c1c:	b	3e34 <sf_gen_proto_abbrev+0x32c>
    3c20:	mov	r0, #129	; 0x81
    3c24:	b	3e34 <sf_gen_proto_abbrev+0x32c>
    3c28:	movw	r0, #2054	; 0x806
    3c2c:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3c30:	movw	r0, #32821	; 0x8035
    3c34:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3c38:	mov	r0, #6
    3c3c:	mov	r1, #2
    3c40:	mov	r2, #0
    3c44:	bl	3f38 <gen_proto>
    3c48:	mov	r4, r0
    3c4c:	mov	r0, #6
    3c50:	b	3e28 <sf_gen_proto_abbrev+0x320>
    3c54:	mov	r0, #1
    3c58:	b	3d2c <sf_gen_proto_abbrev+0x224>
    3c5c:	mov	r0, #2
    3c60:	b	3d2c <sf_gen_proto_abbrev+0x224>
    3c64:	movw	r0, #24578	; 0x6002
    3c68:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3c6c:	mov	r0, #51	; 0x33
    3c70:	mov	r1, #2
    3c74:	mov	r2, #0
    3c78:	bl	3f38 <gen_proto>
    3c7c:	mov	r4, r0
    3c80:	mov	r0, #51	; 0x33
    3c84:	b	3e28 <sf_gen_proto_abbrev+0x320>
    3c88:	mov	r0, #50	; 0x32
    3c8c:	mov	r1, #2
    3c90:	mov	r2, #0
    3c94:	bl	3f38 <gen_proto>
    3c98:	mov	r4, r0
    3c9c:	mov	r0, #50	; 0x32
    3ca0:	b	3e28 <sf_gen_proto_abbrev+0x320>
    3ca4:	mov	r0, #112	; 0x70
    3ca8:	b	3d2c <sf_gen_proto_abbrev+0x224>
    3cac:	movw	r0, #33011	; 0x80f3
    3cb0:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3cb4:	mov	r0, #15
    3cb8:	mov	r1, #26
    3cbc:	mov	r2, #0
    3cc0:	bl	3f38 <gen_proto>
    3cc4:	mov	r5, r0
    3cc8:	mov	r0, #16
    3ccc:	mov	r1, #26
    3cd0:	mov	r2, #0
    3cd4:	bl	3f38 <gen_proto>
    3cd8:	mov	r4, r0
    3cdc:	mov	r0, r5
    3ce0:	mov	r1, r4
    3ce4:	bl	3a3c <sf_gen_or>
    3ce8:	mov	r0, #17
    3cec:	b	3ebc <sf_gen_proto_abbrev+0x3b4>
    3cf0:	mov	r0, #132	; 0x84
    3cf4:	mov	r1, #2
    3cf8:	mov	r2, #0
    3cfc:	bl	3f38 <gen_proto>
    3d00:	mov	r4, r0
    3d04:	mov	r0, #132	; 0x84
    3d08:	b	3e28 <sf_gen_proto_abbrev+0x320>
    3d0c:	mov	r0, #17
    3d10:	mov	r1, #2
    3d14:	mov	r2, #0
    3d18:	bl	3f38 <gen_proto>
    3d1c:	mov	r4, r0
    3d20:	mov	r0, #17
    3d24:	b	3e28 <sf_gen_proto_abbrev+0x320>
    3d28:	mov	r0, #9
    3d2c:	mov	r1, #2
    3d30:	b	3e38 <sf_gen_proto_abbrev+0x330>
    3d34:	movw	r0, #32923	; 0x809b
    3d38:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3d3c:	movw	r0, #24580	; 0x6004
    3d40:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3d44:	movw	r0, #24577	; 0x6001
    3d48:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3d4c:	mov	r0, #254	; 0xfe
    3d50:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3d54:	mov	r0, #16
    3d58:	mov	r1, #26
    3d5c:	mov	r2, #0
    3d60:	bl	3f38 <gen_proto>
    3d64:	mov	r5, r0
    3d68:	mov	r0, #17
    3d6c:	mov	r1, #26
    3d70:	mov	r2, #0
    3d74:	bl	3f38 <gen_proto>
    3d78:	mov	r4, r0
    3d7c:	mov	r0, r5
    3d80:	mov	r1, r4
    3d84:	bl	3a3c <sf_gen_or>
    3d88:	mov	r0, #20
    3d8c:	mov	r1, #26
    3d90:	mov	r2, #0
    3d94:	bl	3f38 <gen_proto>
    3d98:	mov	r1, r4
    3d9c:	bl	3a3c <sf_gen_or>
    3da0:	mov	r0, #25
    3da4:	b	3de0 <sf_gen_proto_abbrev+0x2d8>
    3da8:	mov	r0, #24
    3dac:	mov	r1, #26
    3db0:	mov	r2, #0
    3db4:	bl	3f38 <gen_proto>
    3db8:	mov	r5, r0
    3dbc:	mov	r0, #25
    3dc0:	mov	r1, #26
    3dc4:	mov	r2, #0
    3dc8:	bl	3f38 <gen_proto>
    3dcc:	mov	r4, r0
    3dd0:	mov	r0, r5
    3dd4:	mov	r1, r4
    3dd8:	bl	3a3c <sf_gen_or>
    3ddc:	mov	r0, #26
    3de0:	mov	r1, #26
    3de4:	mov	r2, #0
    3de8:	bl	3f38 <gen_proto>
    3dec:	mov	r1, r4
    3df0:	bl	3a3c <sf_gen_or>
    3df4:	mov	r0, #27
    3df8:	b	3ebc <sf_gen_proto_abbrev+0x3b4>
    3dfc:	movw	r0, #24583	; 0x6007
    3e00:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3e04:	mov	r0, #58	; 0x3a
    3e08:	mov	r1, #17
    3e0c:	b	3e38 <sf_gen_proto_abbrev+0x330>
    3e10:	mov	r0, #103	; 0x67
    3e14:	mov	r1, #2
    3e18:	mov	r2, #0
    3e1c:	bl	3f38 <gen_proto>
    3e20:	mov	r4, r0
    3e24:	mov	r0, #103	; 0x67
    3e28:	mov	r1, #17
    3e2c:	b	3ec0 <sf_gen_proto_abbrev+0x3b8>
    3e30:	mov	r0, #130	; 0x82
    3e34:	mov	r1, #24
    3e38:	mov	r2, #0
    3e3c:	pop	{r4, r5, fp, lr}
    3e40:	b	3f38 <gen_proto>
    3e44:	mov	r0, #66	; 0x42
    3e48:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3e4c:	mov	r0, #240	; 0xf0
    3e50:	b	3ed0 <sf_gen_proto_abbrev+0x3c8>
    3e54:	mov	r0, #15
    3e58:	mov	r1, #26
    3e5c:	mov	r2, #0
    3e60:	bl	3f38 <gen_proto>
    3e64:	mov	r5, r0
    3e68:	mov	r0, #17
    3e6c:	mov	r1, #26
    3e70:	mov	r2, #0
    3e74:	bl	3f38 <gen_proto>
    3e78:	mov	r4, r0
    3e7c:	mov	r0, r5
    3e80:	mov	r1, r4
    3e84:	bl	3a3c <sf_gen_or>
    3e88:	mov	r0, #18
    3e8c:	mov	r1, #26
    3e90:	mov	r2, #0
    3e94:	bl	3f38 <gen_proto>
    3e98:	mov	r1, r4
    3e9c:	bl	3a3c <sf_gen_or>
    3ea0:	mov	r0, #24
    3ea4:	mov	r1, #26
    3ea8:	mov	r2, #0
    3eac:	bl	3f38 <gen_proto>
    3eb0:	mov	r1, r4
    3eb4:	bl	3a3c <sf_gen_or>
    3eb8:	mov	r0, #26
    3ebc:	mov	r1, #26
    3ec0:	mov	r2, #0
    3ec4:	bl	3f38 <gen_proto>
    3ec8:	b	3f04 <sf_gen_proto_abbrev+0x3fc>
    3ecc:	mov	r0, #224	; 0xe0
    3ed0:	pop	{r4, r5, fp, lr}
    3ed4:	b	4334 <gen_linktype>
    3ed8:	mov	r0, #18
    3edc:	mov	r1, #26
    3ee0:	mov	r2, #0
    3ee4:	bl	3f38 <gen_proto>
    3ee8:	mov	r5, r0
    3eec:	mov	r0, #20
    3ef0:	mov	r1, #26
    3ef4:	mov	r2, #0
    3ef8:	bl	3f38 <gen_proto>
    3efc:	mov	r4, r0
    3f00:	mov	r0, r5
    3f04:	mov	r1, r4
    3f08:	bl	3a3c <sf_gen_or>
    3f0c:	mov	r0, r4
    3f10:	pop	{r4, r5, fp, pc}
    3f14:	bl	f74 <abort@plt>
    3f18:	ldr	r0, [pc, #16]	; 3f30 <sf_gen_proto_abbrev+0x428>
    3f1c:	add	r0, pc, r0
    3f20:	bl	1f30 <sf_bpf_error>
    3f24:	ldr	r0, [pc, #8]	; 3f34 <sf_gen_proto_abbrev+0x42c>
    3f28:	add	r0, pc, r0
    3f2c:	bl	1f30 <sf_bpf_error>
    3f30:	.word	0x0000e7f3
    3f34:	.word	0x0000e80b

00003f38 <gen_proto>:
    3f38:	push	{r4, r5, r6, r7, fp, lr}
    3f3c:	add	fp, sp, #16
    3f40:	cmp	r2, #0
    3f44:	bne	41d0 <gen_proto+0x298>
    3f48:	cmp	r1, #40	; 0x28
    3f4c:	bhi	41b4 <gen_proto+0x27c>
    3f50:	mov	r4, r0
    3f54:	add	r0, pc, #4
    3f58:	ldr	r1, [r0, r1, lsl #2]
    3f5c:	add	pc, r0, r1
    3f60:	.word	0x000000a4
    3f64:	.word	0x000001b0
    3f68:	.word	0x00000134
    3f6c:	.word	0x0000027c
    3f70:	.word	0x00000288
    3f74:	.word	0x00000294
    3f78:	.word	0x000002a0
    3f7c:	.word	0x000002ac
    3f80:	.word	0x000002b8
    3f84:	.word	0x000002c4
    3f88:	.word	0x000002d0
    3f8c:	.word	0x000002dc
    3f90:	.word	0x000002e8
    3f94:	.word	0x000002f4
    3f98:	.word	0x00000300
    3f9c:	.word	0x0000030c
    3fa0:	.word	0x00000264
    3fa4:	.word	0x000001bc
    3fa8:	.word	0x00000258
    3fac:	.word	0x00000248
    3fb0:	.word	0x00000248
    3fb4:	.word	0x00000348
    3fb8:	.word	0x00000354
    3fbc:	.word	0x00000254
    3fc0:	.word	0x000000e0
    3fc4:	.word	0x00000254
    3fc8:	.word	0x00000150
    3fcc:	.word	0x00000254
    3fd0:	.word	0x00000318
    3fd4:	.word	0x00000324
    3fd8:	.word	0x00000330
    3fdc:	.word	0x00000254
    3fe0:	.word	0x00000254
    3fe4:	.word	0x00000254
    3fe8:	.word	0x00000254
    3fec:	.word	0x00000254
    3ff0:	.word	0x00000254
    3ff4:	.word	0x00000254
    3ff8:	.word	0x00000254
    3ffc:	.word	0x00000254
    4000:	.word	0x0000033c
    4004:	mov	r0, r4
    4008:	mov	r1, #2
    400c:	mov	r2, #0
    4010:	bl	3f38 <gen_proto>
    4014:	mov	r5, r0
    4018:	mov	r0, r4
    401c:	mov	r1, #17
    4020:	mov	r2, #0
    4024:	bl	3f38 <gen_proto>
    4028:	mov	r4, r0
    402c:	mov	r0, r5
    4030:	mov	r1, r4
    4034:	bl	3a3c <sf_gen_or>
    4038:	mov	r0, r4
    403c:	pop	{r4, r5, r6, r7, fp, pc}
    4040:	ldr	r0, [pc, #636]	; 42c4 <gen_proto+0x38c>
    4044:	ldr	r0, [pc, r0]
    4048:	cmp	r0, #104	; 0x68
    404c:	beq	4138 <gen_proto+0x200>
    4050:	cmp	r0, #107	; 0x6b
    4054:	bne	4154 <gen_proto+0x21c>
    4058:	mov	r0, #1
    405c:	mov	r1, #2
    4060:	mov	r2, #8
    4064:	bl	98e8 <gen_load_a>
    4068:	mov	r6, r0
    406c:	mov	r0, #208	; 0xd0
    4070:	bl	1fbc <newchunk>
    4074:	mov	r5, r0
    4078:	orr	r1, r4, #768	; 0x300
    407c:	mov	r0, #21
    4080:	str	r1, [r5, #20]
    4084:	str	r6, [r5, #4]
    4088:	str	r0, [r5, #8]
    408c:	str	r5, [r5, #96]	; 0x60
    4090:	b	41a0 <gen_proto+0x268>
    4094:	mov	r0, #2048	; 0x800
    4098:	bl	4334 <gen_linktype>
    409c:	mov	r6, r0
    40a0:	ldr	r0, [pc, #536]	; 42c0 <gen_proto+0x388>
    40a4:	ldr	r0, [pc, r0]
    40a8:	add	r0, r0, #9
    40ac:	b	4168 <gen_proto+0x230>
    40b0:	mov	r0, #131	; 0x83
    40b4:	mov	r1, #24
    40b8:	mov	r2, #0
    40bc:	bl	3f38 <gen_proto>
    40c0:	mov	r5, r0
    40c4:	ldr	r0, [pc, #516]	; 42d0 <gen_proto+0x398>
    40c8:	mov	r1, #16
    40cc:	ldr	r0, [pc, r0]
    40d0:	add	r0, r0, #4
    40d4:	bl	ba9c <gen_load_macplrel>
    40d8:	mov	r6, r0
    40dc:	mov	r0, #208	; 0xd0
    40e0:	bl	1fbc <newchunk>
    40e4:	mov	r7, r0
    40e8:	mov	r0, #21
    40ec:	str	r4, [r7, #20]
    40f0:	str	r6, [r7, #4]
    40f4:	str	r0, [r7, #8]
    40f8:	mov	r0, r5
    40fc:	mov	r1, r7
    4100:	str	r7, [r7, #96]	; 0x60
    4104:	bl	3964 <sf_gen_and>
    4108:	mov	r0, r7
    410c:	pop	{r4, r5, r6, r7, fp, pc}
    4110:	mov	r0, r4
    4114:	pop	{r4, r5, r6, r7, fp, lr}
    4118:	b	4334 <gen_linktype>
    411c:	movw	r0, #34525	; 0x86dd
    4120:	bl	4334 <gen_linktype>
    4124:	mov	r6, r0
    4128:	ldr	r0, [pc, #484]	; 4314 <gen_proto+0x3dc>
    412c:	ldr	r0, [pc, r0]
    4130:	add	r0, r0, #6
    4134:	b	4168 <gen_proto+0x230>
    4138:	movw	r0, #65278	; 0xfefe
    413c:	bl	4334 <gen_linktype>
    4140:	mov	r6, r0
    4144:	ldr	r0, [pc, #380]	; 42c8 <gen_proto+0x390>
    4148:	ldr	r0, [pc, r0]
    414c:	add	r0, r0, #1
    4150:	b	4168 <gen_proto+0x230>
    4154:	mov	r0, #254	; 0xfe
    4158:	bl	4334 <gen_linktype>
    415c:	mov	r6, r0
    4160:	ldr	r0, [pc, #356]	; 42cc <gen_proto+0x394>
    4164:	ldr	r0, [pc, r0]
    4168:	mov	r1, #16
    416c:	bl	ba9c <gen_load_macplrel>
    4170:	mov	r7, r0
    4174:	mov	r0, #208	; 0xd0
    4178:	bl	1fbc <newchunk>
    417c:	mov	r5, r0
    4180:	mov	r0, #21
    4184:	str	r4, [r5, #20]
    4188:	str	r7, [r5, #4]
    418c:	str	r0, [r5, #8]
    4190:	mov	r0, r6
    4194:	mov	r1, r5
    4198:	str	r5, [r5, #96]	; 0x60
    419c:	bl	3964 <sf_gen_and>
    41a0:	mov	r0, r5
    41a4:	pop	{r4, r5, r6, r7, fp, pc}
    41a8:	ldr	r0, [pc, #364]	; 431c <gen_proto+0x3e4>
    41ac:	add	r0, pc, r0
    41b0:	bl	1f30 <sf_bpf_error>
    41b4:	bl	f74 <abort@plt>
    41b8:	ldr	r0, [pc, #344]	; 4318 <gen_proto+0x3e0>
    41bc:	add	r0, pc, r0
    41c0:	bl	1f30 <sf_bpf_error>
    41c4:	ldr	r0, [pc, #292]	; 42f0 <gen_proto+0x3b8>
    41c8:	add	r0, pc, r0
    41cc:	bl	1f30 <sf_bpf_error>
    41d0:	ldr	r0, [pc, #344]	; 4330 <gen_proto+0x3f8>
    41d4:	add	r0, pc, r0
    41d8:	bl	1f30 <sf_bpf_error>
    41dc:	ldr	r0, [pc, #240]	; 42d4 <gen_proto+0x39c>
    41e0:	add	r0, pc, r0
    41e4:	bl	1f30 <sf_bpf_error>
    41e8:	ldr	r0, [pc, #232]	; 42d8 <gen_proto+0x3a0>
    41ec:	add	r0, pc, r0
    41f0:	bl	1f30 <sf_bpf_error>
    41f4:	ldr	r0, [pc, #256]	; 42fc <gen_proto+0x3c4>
    41f8:	add	r0, pc, r0
    41fc:	bl	1f30 <sf_bpf_error>
    4200:	ldr	r0, [pc, #240]	; 42f8 <gen_proto+0x3c0>
    4204:	add	r0, pc, r0
    4208:	bl	1f30 <sf_bpf_error>
    420c:	ldr	r0, [pc, #224]	; 42f4 <gen_proto+0x3bc>
    4210:	add	r0, pc, r0
    4214:	bl	1f30 <sf_bpf_error>
    4218:	ldr	r0, [pc, #224]	; 4300 <gen_proto+0x3c8>
    421c:	add	r0, pc, r0
    4220:	bl	1f30 <sf_bpf_error>
    4224:	ldr	r0, [pc, #216]	; 4304 <gen_proto+0x3cc>
    4228:	add	r0, pc, r0
    422c:	bl	1f30 <sf_bpf_error>
    4230:	ldr	r0, [pc, #208]	; 4308 <gen_proto+0x3d0>
    4234:	add	r0, pc, r0
    4238:	bl	1f30 <sf_bpf_error>
    423c:	ldr	r0, [pc, #152]	; 42dc <gen_proto+0x3a4>
    4240:	add	r0, pc, r0
    4244:	bl	1f30 <sf_bpf_error>
    4248:	ldr	r0, [pc, #144]	; 42e0 <gen_proto+0x3a8>
    424c:	add	r0, pc, r0
    4250:	bl	1f30 <sf_bpf_error>
    4254:	ldr	r0, [pc, #140]	; 42e8 <gen_proto+0x3b0>
    4258:	add	r0, pc, r0
    425c:	bl	1f30 <sf_bpf_error>
    4260:	ldr	r0, [pc, #124]	; 42e4 <gen_proto+0x3ac>
    4264:	add	r0, pc, r0
    4268:	bl	1f30 <sf_bpf_error>
    426c:	ldr	r0, [pc, #120]	; 42ec <gen_proto+0x3b4>
    4270:	add	r0, pc, r0
    4274:	bl	1f30 <sf_bpf_error>
    4278:	ldr	r0, [pc, #160]	; 4320 <gen_proto+0x3e8>
    427c:	add	r0, pc, r0
    4280:	bl	1f30 <sf_bpf_error>
    4284:	ldr	r0, [pc, #152]	; 4324 <gen_proto+0x3ec>
    4288:	add	r0, pc, r0
    428c:	bl	1f30 <sf_bpf_error>
    4290:	ldr	r0, [pc, #144]	; 4328 <gen_proto+0x3f0>
    4294:	add	r0, pc, r0
    4298:	bl	1f30 <sf_bpf_error>
    429c:	ldr	r0, [pc, #136]	; 432c <gen_proto+0x3f4>
    42a0:	add	r0, pc, r0
    42a4:	bl	1f30 <sf_bpf_error>
    42a8:	ldr	r0, [pc, #92]	; 430c <gen_proto+0x3d4>
    42ac:	add	r0, pc, r0
    42b0:	bl	1f30 <sf_bpf_error>
    42b4:	ldr	r0, [pc, #84]	; 4310 <gen_proto+0x3d8>
    42b8:	add	r0, pc, r0
    42bc:	bl	1f30 <sf_bpf_error>
    42c0:	.word	0x0002c39c
    42c4:	.word	0x0002c3ec
    42c8:	.word	0x0002c304
    42cc:	.word	0x0002c2e8
    42d0:	.word	0x0002c380
    42d4:	.word	0x0000f394
    42d8:	.word	0x0000f387
    42dc:	.word	0x0000f35e
    42e0:	.word	0x0000f379
    42e4:	.word	0x0000f389
    42e8:	.word	0x0000f3bf
    42ec:	.word	0x0000f3d1
    42f0:	.word	0x0000f4a5
    42f4:	.word	0x0000f489
    42f8:	.word	0x0000f4aa
    42fc:	.word	0x0000f4cb
    4300:	.word	0x0000f4bd
    4304:	.word	0x0000f4c7
    4308:	.word	0x0000f4d1
    430c:	.word	0x0000f46f
    4310:	.word	0x0000f478
    4314:	.word	0x0002c314
    4318:	.word	0x0000f58a
    431c:	.word	0x0000f5b1
    4320:	.word	0x0000f4f5
    4324:	.word	0x0000f4fe
    4328:	.word	0x0000f507
    432c:	.word	0x0000f514
    4330:	.word	0x0000f382

00004334 <gen_linktype>:
    4334:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    4338:	add	fp, sp, #24
    433c:	sub	sp, sp, #24
    4340:	mov	r4, r0
    4344:	ldr	r0, [pc, #3628]	; 5178 <gen_linktype+0xe44>
    4348:	ldr	r0, [pc, r0]
    434c:	cmp	r0, #0
    4350:	beq	4370 <gen_linktype+0x3c>
    4354:	cmp	r4, #2048	; 0x800
    4358:	bge	43cc <gen_linktype+0x98>
    435c:	cmp	r4, #33	; 0x21
    4360:	beq	4638 <gen_linktype+0x304>
    4364:	cmp	r4, #87	; 0x57
    4368:	beq	43d8 <gen_linktype+0xa4>
    436c:	b	50f4 <gen_linktype+0xdc0>
    4370:	ldr	r0, [pc, #3592]	; 5180 <gen_linktype+0xe4c>
    4374:	add	r0, pc, r0
    4378:	ldrb	r0, [r0]
    437c:	cmp	r0, #1
    4380:	bne	43e0 <gen_linktype+0xac>
    4384:	mov	r0, r4
    4388:	bl	adc8 <ethertype_to_ppptype>
    438c:	mov	r4, r0
    4390:	ldr	r0, [pc, #3564]	; 5184 <gen_linktype+0xe50>
    4394:	mov	r1, #8
    4398:	ldr	r0, [pc, r0]
    439c:	bl	ba9c <gen_load_macplrel>
    43a0:	mov	r6, r0
    43a4:	mov	r0, #208	; 0xd0
    43a8:	bl	1fbc <newchunk>
    43ac:	mov	r5, r0
    43b0:	mov	r0, #21
    43b4:	str	r4, [r5, #20]
    43b8:	str	r6, [r5, #4]
    43bc:	str	r0, [r5, #8]
    43c0:	str	r5, [r5, #96]	; 0x60
    43c4:	mov	r0, r5
    43c8:	b	4628 <gen_linktype+0x2f4>
    43cc:	movw	r0, #34525	; 0x86dd
    43d0:	cmp	r4, r0
    43d4:	bne	4630 <gen_linktype+0x2fc>
    43d8:	mov	r0, #17
    43dc:	b	463c <gen_linktype+0x308>
    43e0:	ldr	r0, [pc, #3488]	; 5188 <gen_linktype+0xe54>
    43e4:	ldr	r0, [pc, r0]
    43e8:	sub	r1, r0, #104	; 0x68
    43ec:	cmp	r1, #125	; 0x7d
    43f0:	bhi	4648 <gen_linktype+0x314>
    43f4:	add	r2, pc, #4
    43f8:	ldr	r1, [r2, r1, lsl #2]
    43fc:	add	pc, r2, r1
    4400:	.word	0x00000420
    4404:	.word	0x000002bc
    4408:	.word	0x00000394
    440c:	.word	0x00000454
    4410:	.word	0x00000350
    4414:	.word	0x00000350
    4418:	.word	0x00000394
    441c:	.word	0x00000394
    4420:	.word	0x00000394
    4424:	.word	0x0000049c
    4428:	.word	0x00000408
    442c:	.word	0x00000394
    4430:	.word	0x00000394
    4434:	.word	0x00000394
    4438:	.word	0x00000394
    443c:	.word	0x000002bc
    4440:	.word	0x00000394
    4444:	.word	0x00000394
    4448:	.word	0x000002ac
    444c:	.word	0x00000524
    4450:	.word	0x00000394
    4454:	.word	0x00000394
    4458:	.word	0x00000394
    445c:	.word	0x000002bc
    4460:	.word	0x00000394
    4464:	.word	0x000003a8
    4468:	.word	0x000001f8
    446c:	.word	0x000001f8
    4470:	.word	0x000001f8
    4474:	.word	0x000001f8
    4478:	.word	0x000001f8
    447c:	.word	0x000001f8
    4480:	.word	0x000001f8
    4484:	.word	0x000001f8
    4488:	.word	0x00000394
    448c:	.word	0x00000cd0
    4490:	.word	0x00000cd0
    4494:	.word	0x00000394
    4498:	.word	0x00000394
    449c:	.word	0x00000d00
    44a0:	.word	0x00000d0c
    44a4:	.word	0x00000394
    44a8:	.word	0x00000394
    44ac:	.word	0x00000394
    44b0:	.word	0x00000394
    44b4:	.word	0x00000394
    44b8:	.word	0x00000394
    44bc:	.word	0x00000394
    44c0:	.word	0x00000394
    44c4:	.word	0x00000394
    44c8:	.word	0x00000394
    44cc:	.word	0x00000394
    44d0:	.word	0x00000394
    44d4:	.word	0x00000394
    44d8:	.word	0x00000394
    44dc:	.word	0x00000394
    44e0:	.word	0x00000394
    44e4:	.word	0x00000394
    44e8:	.word	0x00000394
    44ec:	.word	0x000002bc
    44f0:	.word	0x000001f8
    44f4:	.word	0x00000394
    44f8:	.word	0x00000714
    44fc:	.word	0x000001f8
    4500:	.word	0x000001f8
    4504:	.word	0x00000394
    4508:	.word	0x00000394
    450c:	.word	0x00000394
    4510:	.word	0x00000394
    4514:	.word	0x00000394
    4518:	.word	0x00000394
    451c:	.word	0x00000394
    4520:	.word	0x00000394
    4524:	.word	0x00000d18
    4528:	.word	0x000001f8
    452c:	.word	0x000001f8
    4530:	.word	0x000001f8
    4534:	.word	0x000001f8
    4538:	.word	0x00000d24
    453c:	.word	0x000001f8
    4540:	.word	0x00000394
    4544:	.word	0x00000394
    4548:	.word	0x00000cb8
    454c:	.word	0x00000cdc
    4550:	.word	0x00000394
    4554:	.word	0x00000cb8
    4558:	.word	0x00000ce8
    455c:	.word	0x00000cc4
    4560:	.word	0x000002bc
    4564:	.word	0x00000d30
    4568:	.word	0x000001f8
    456c:	.word	0x00000cc4
    4570:	.word	0x00000d3c
    4574:	.word	0x00000d48
    4578:	.word	0x00000d54
    457c:	.word	0x00000d60
    4580:	.word	0x000001f8
    4584:	.word	0x00000cdc
    4588:	.word	0x00000d6c
    458c:	.word	0x00000394
    4590:	.word	0x00000394
    4594:	.word	0x00000394
    4598:	.word	0x00000394
    459c:	.word	0x00000394
    45a0:	.word	0x00000394
    45a4:	.word	0x00000394
    45a8:	.word	0x00000394
    45ac:	.word	0x00000394
    45b0:	.word	0x00000394
    45b4:	.word	0x00000394
    45b8:	.word	0x00000394
    45bc:	.word	0x00000cc4
    45c0:	.word	0x00000394
    45c4:	.word	0x00000394
    45c8:	.word	0x00000394
    45cc:	.word	0x00000394
    45d0:	.word	0x00000cb8
    45d4:	.word	0x00000394
    45d8:	.word	0x00000394
    45dc:	.word	0x00000394
    45e0:	.word	0x00000394
    45e4:	.word	0x00000394
    45e8:	.word	0x000005e8
    45ec:	.word	0x00000ce8
    45f0:	.word	0x000005b4
    45f4:	.word	0x0000058c
    45f8:	movw	r0, #17152	; 0x4300
    45fc:	mov	r1, #0
    4600:	mov	r2, #16
    4604:	mvn	r3, #255	; 0xff
    4608:	movt	r0, #19783	; 0x4d47
    460c:	str	r2, [sp]
    4610:	str	r1, [sp, #4]
    4614:	mov	r1, #0
    4618:	mov	r2, #0
    461c:	str	r0, [sp, #8]
    4620:	mov	r0, #1
    4624:	bl	a38c <gen_ncmp>
    4628:	sub	sp, fp, #24
    462c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    4630:	cmp	r4, #2048	; 0x800
    4634:	bne	50f4 <gen_linktype+0xdc0>
    4638:	mov	r0, #2
    463c:	sub	sp, fp, #24
    4640:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    4644:	b	ad00 <gen_mpls_linktype>
    4648:	cmp	r0, #19
    464c:	bhi	4788 <gen_linktype+0x454>
    4650:	add	r1, pc, #4
    4654:	ldr	r2, [r1, r0, lsl #2]
    4658:	add	pc, r1, r2
    465c:	.word	0x000000f4
    4660:	.word	0x000004dc
    4664:	.word	0x00000138
    4668:	.word	0x00000138
    466c:	.word	0x00000138
    4670:	.word	0x00000138
    4674:	.word	0x00000050
    4678:	.word	0x0000014c
    467c:	.word	0x00000110
    4680:	.word	0x000004b8
    4684:	.word	0x00000050
    4688:	.word	0x00000050
    468c:	.word	0x00000110
    4690:	.word	0x00000138
    4694:	.word	0x00000138
    4698:	.word	0x00000110
    469c:	.word	0x0000040c
    46a0:	.word	0x00000138
    46a4:	.word	0x00000138
    46a8:	.word	0x00000050
    46ac:	mov	r0, r4
    46b0:	sub	sp, fp, #24
    46b4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    46b8:	b	b220 <gen_llc_linktype>
    46bc:	mov	r0, #1
    46c0:	mov	r1, #0
    46c4:	mov	r2, #16
    46c8:	bl	98e8 <gen_load_a>
    46cc:	mov	r5, r0
    46d0:	mov	r0, #208	; 0xd0
    46d4:	bl	1fbc <newchunk>
    46d8:	mov	r6, r0
    46dc:	mov	r0, #8
    46e0:	mov	r1, #0
    46e4:	mov	r2, #16
    46e8:	mov	r7, #69	; 0x45
    46ec:	str	r0, [r6, #20]
    46f0:	mov	r0, #1
    46f4:	stmib	r6, {r5, r7}
    46f8:	str	r6, [r6, #96]	; 0x60
    46fc:	bl	98e8 <gen_load_a>
    4700:	mov	r5, r0
    4704:	mov	r0, #208	; 0xd0
    4708:	bl	1fbc <newchunk>
    470c:	mov	r1, #4
    4710:	str	r1, [r0, #20]
    4714:	stmib	r0, {r5, r7}
    4718:	ldr	r1, [r0, #44]	; 0x2c
    471c:	clz	r1, r1
    4720:	lsr	r1, r1, #5
    4724:	str	r1, [r0, #44]	; 0x2c
    4728:	mov	r1, r6
    472c:	str	r0, [r0, #96]	; 0x60
    4730:	bl	3964 <sf_gen_and>
    4734:	mov	r0, r4
    4738:	bl	b220 <gen_llc_linktype>
    473c:	mov	r5, r0
    4740:	mov	r0, r6
    4744:	mov	r1, r5
    4748:	bl	3964 <sf_gen_and>
    474c:	b	43c4 <gen_linktype+0x90>
    4750:	cmp	r4, #2048	; 0x800
    4754:	beq	4a2c <gen_linktype+0x6f8>
    4758:	movw	r1, #34525	; 0x86dd
    475c:	cmp	r4, r1
    4760:	bne	4bec <gen_linktype+0x8b8>
    4764:	mov	r6, #10
    4768:	b	4a30 <gen_linktype+0x6fc>
    476c:	movw	r0, #34525	; 0x86dd
    4770:	cmp	r4, r0
    4774:	beq	4b48 <gen_linktype+0x814>
    4778:	cmp	r4, #2048	; 0x800
    477c:	bne	4bec <gen_linktype+0x8b8>
    4780:	mov	r0, #64	; 0x40
    4784:	b	4b4c <gen_linktype+0x818>
    4788:	sub	r0, r0, #50	; 0x32
    478c:	cmp	r0, #2
    4790:	bcc	4b14 <gen_linktype+0x7e0>
    4794:	ldr	r1, [pc, #2696]	; 5224 <gen_linktype+0xef0>
    4798:	ldr	r1, [pc, r1]
    479c:	cmn	r1, #1
    47a0:	bne	4b28 <gen_linktype+0x7f4>
    47a4:	bl	f74 <abort@plt>
    47a8:	movw	r0, #32820	; 0x8034
    47ac:	cmp	r4, r0
    47b0:	ble	4b74 <gen_linktype+0x840>
    47b4:	movw	r0, #32821	; 0x8035
    47b8:	cmp	r4, r0
    47bc:	beq	4d5c <gen_linktype+0xa28>
    47c0:	movw	r0, #32923	; 0x809b
    47c4:	cmp	r4, r0
    47c8:	beq	4d8c <gen_linktype+0xa58>
    47cc:	movw	r0, #34525	; 0x86dd
    47d0:	cmp	r4, r0
    47d4:	bne	4bec <gen_linktype+0x8b8>
    47d8:	ldr	r1, [pc, #2540]	; 51cc <gen_linktype+0xe98>
    47dc:	mov	r0, #1
    47e0:	mov	r2, #16
    47e4:	ldr	r1, [pc, r1]
    47e8:	bl	98e8 <gen_load_a>
    47ec:	mov	r4, r0
    47f0:	mov	r0, #208	; 0xd0
    47f4:	bl	1fbc <newchunk>
    47f8:	mov	r5, r0
    47fc:	mov	r0, #21
    4800:	mov	r1, #196	; 0xc4
    4804:	b	4e5c <gen_linktype+0xb28>
    4808:	mov	r0, #20
    480c:	bl	1fbc <newchunk>
    4810:	mov	r6, r0
    4814:	mov	r0, #0
    4818:	movw	r1, #32923	; 0x809b
    481c:	b	49a0 <gen_linktype+0x66c>
    4820:	ldr	r1, [pc, #2408]	; 5190 <gen_linktype+0xe5c>
    4824:	mov	r0, #1
    4828:	mov	r2, #8
    482c:	ldr	r1, [pc, r1]
    4830:	bl	98e8 <gen_load_a>
    4834:	mov	r6, r0
    4838:	mov	r0, #208	; 0xd0
    483c:	bl	1fbc <newchunk>
    4840:	cmp	r4, #254	; 0xfe
    4844:	mov	r5, r0
    4848:	mov	r0, #21
    484c:	movweq	r4, #65278	; 0xfefe
    4850:	b	43b4 <gen_linktype+0x80>
    4854:	cmp	r4, #254	; 0xfe
    4858:	beq	4e68 <gen_linktype+0xb34>
    485c:	movw	r0, #34525	; 0x86dd
    4860:	cmp	r4, r0
    4864:	beq	4e34 <gen_linktype+0xb00>
    4868:	cmp	r4, #2048	; 0x800
    486c:	bne	4bec <gen_linktype+0x8b8>
    4870:	mov	r0, #1
    4874:	mov	r1, #2
    4878:	mov	r2, #8
    487c:	bl	98e8 <gen_load_a>
    4880:	mov	r4, r0
    4884:	mov	r0, #208	; 0xd0
    4888:	bl	1fbc <newchunk>
    488c:	mov	r5, r0
    4890:	mov	r0, #21
    4894:	mov	r1, #972	; 0x3cc
    4898:	b	4e5c <gen_linktype+0xb28>
    489c:	cmp	r4, #253	; 0xfd
    48a0:	bgt	4c1c <gen_linktype+0x8e8>
    48a4:	cmp	r4, #6
    48a8:	beq	48bc <gen_linktype+0x588>
    48ac:	cmp	r4, #224	; 0xe0
    48b0:	beq	4f90 <gen_linktype+0xc5c>
    48b4:	cmp	r4, #240	; 0xf0
    48b8:	bne	4f18 <gen_linktype+0xbe4>
    48bc:	ldr	r1, [pc, #2268]	; 51a0 <gen_linktype+0xe6c>
    48c0:	mov	r0, #1
    48c4:	mov	r2, #8
    48c8:	ldr	r1, [pc, r1]
    48cc:	bl	98e8 <gen_load_a>
    48d0:	mov	r5, r0
    48d4:	mov	r0, #208	; 0xd0
    48d8:	bl	1fbc <newchunk>
    48dc:	mov	r6, r0
    48e0:	mov	r0, #4
    48e4:	mov	r1, #8
    48e8:	mov	r8, #21
    48ec:	str	r0, [r6, #20]
    48f0:	mov	r0, #0
    48f4:	stmib	r6, {r5, r8}
    48f8:	str	r6, [r6, #96]	; 0x60
    48fc:	bl	ba9c <gen_load_macplrel>
    4900:	mov	r7, r0
    4904:	mov	r0, #208	; 0xd0
    4908:	bl	1fbc <newchunk>
    490c:	mov	r5, r0
    4910:	orr	r0, r4, r4, lsl #8
    4914:	str	r0, [r5, #20]
    4918:	stmib	r5, {r7, r8}
    491c:	str	r5, [r5, #96]	; 0x60
    4920:	b	4740 <gen_linktype+0x40c>
    4924:	ldr	r0, [pc, #2152]	; 5194 <gen_linktype+0xe60>
    4928:	add	r0, pc, r0
    492c:	ldrb	r0, [r0]
    4930:	cmp	r0, #1
    4934:	bne	4d10 <gen_linktype+0x9dc>
    4938:	mov	r0, #1
    493c:	mov	r1, #4
    4940:	mov	r2, #8
    4944:	bl	98e8 <gen_load_a>
    4948:	mov	r5, r0
    494c:	mov	r0, #208	; 0xd0
    4950:	bl	1fbc <newchunk>
    4954:	mov	r6, r0
    4958:	mov	r1, #65280	; 0xff00
    495c:	mov	r0, #21
    4960:	str	r1, [r6, #20]
    4964:	str	r5, [r6, #4]
    4968:	str	r0, [r6, #8]
    496c:	ldr	r0, [r6, #44]	; 0x2c
    4970:	clz	r0, r0
    4974:	lsr	r0, r0, #5
    4978:	str	r0, [r6, #44]	; 0x2c
    497c:	mov	r0, r4
    4980:	str	r6, [r6, #96]	; 0x60
    4984:	bl	ae58 <gen_ether_linktype>
    4988:	b	473c <gen_linktype+0x408>
    498c:	mov	r0, #20
    4990:	bl	1fbc <newchunk>
    4994:	mov	r6, r0
    4998:	mov	r0, #0
    499c:	movw	r1, #34525	; 0x86dd
    49a0:	str	r0, [r6]
    49a4:	cmp	r4, r1
    49a8:	beq	49d0 <gen_linktype+0x69c>
    49ac:	mov	r0, #1
    49b0:	b	49d0 <gen_linktype+0x69c>
    49b4:	mov	r0, #20
    49b8:	bl	1fbc <newchunk>
    49bc:	mov	r6, r0
    49c0:	mov	r0, #0
    49c4:	cmp	r4, #2048	; 0x800
    49c8:	str	r0, [r6]
    49cc:	movne	r0, #1
    49d0:	str	r0, [r6, #12]
    49d4:	mov	r0, #208	; 0xd0
    49d8:	bl	1fbc <newchunk>
    49dc:	mov	r5, r0
    49e0:	mov	r0, #21
    49e4:	b	43b8 <gen_linktype+0x84>
    49e8:	movw	r0, #34525	; 0x86dd
    49ec:	cmp	r4, r0
    49f0:	beq	4d2c <gen_linktype+0x9f8>
    49f4:	cmp	r4, #2048	; 0x800
    49f8:	bne	4bec <gen_linktype+0x8b8>
    49fc:	ldr	r1, [pc, #2016]	; 51e4 <gen_linktype+0xeb0>
    4a00:	mov	r0, #1
    4a04:	mov	r2, #16
    4a08:	ldr	r1, [pc, r1]
    4a0c:	bl	98e8 <gen_load_a>
    4a10:	mov	r4, r0
    4a14:	mov	r0, #208	; 0xd0
    4a18:	bl	1fbc <newchunk>
    4a1c:	mov	r5, r0
    4a20:	mov	r0, #21
    4a24:	mov	r1, #2
    4a28:	b	4e5c <gen_linktype+0xb28>
    4a2c:	mov	r6, #2
    4a30:	cmp	r0, #109	; 0x6d
    4a34:	mov	r1, #0
    4a38:	mov	r2, #0
    4a3c:	cmpne	r0, #0
    4a40:	mov	r0, #1
    4a44:	reveq	r6, r6
    4a48:	bl	98e8 <gen_load_a>
    4a4c:	mov	r4, r0
    4a50:	mov	r0, #208	; 0xd0
    4a54:	bl	1fbc <newchunk>
    4a58:	mov	r5, r0
    4a5c:	mov	r0, #21
    4a60:	str	r6, [r5, #20]
    4a64:	b	4e60 <gen_linktype+0xb2c>
    4a68:	cmp	r4, #2048	; 0x800
    4a6c:	bne	4b14 <gen_linktype+0x7e0>
    4a70:	ldr	r1, [pc, #1856]	; 51b8 <gen_linktype+0xe84>
    4a74:	mov	r0, #1
    4a78:	mov	r2, #8
    4a7c:	ldr	r1, [pc, r1]
    4a80:	bl	98e8 <gen_load_a>
    4a84:	mov	r4, r0
    4a88:	mov	r0, #208	; 0xd0
    4a8c:	bl	1fbc <newchunk>
    4a90:	mov	r5, r0
    4a94:	mov	r0, #33	; 0x21
    4a98:	mov	r7, #21
    4a9c:	mov	r2, #8
    4aa0:	str	r0, [r5, #20]
    4aa4:	stmib	r5, {r4, r7}
    4aa8:	str	r5, [r5, #96]	; 0x60
    4aac:	mov	r0, #1
    4ab0:	ldr	r1, [pc, #1796]	; 51bc <gen_linktype+0xe88>
    4ab4:	ldr	r1, [pc, r1]
    4ab8:	bl	98e8 <gen_load_a>
    4abc:	mov	r4, r0
    4ac0:	mov	r0, #208	; 0xd0
    4ac4:	bl	1fbc <newchunk>
    4ac8:	mov	r6, r0
    4acc:	mov	r0, #45	; 0x2d
    4ad0:	str	r0, [r6, #20]
    4ad4:	mov	r0, r5
    4ad8:	mov	r1, r6
    4adc:	stmib	r6, {r4, r7}
    4ae0:	str	r6, [r6, #96]	; 0x60
    4ae4:	bl	3a3c <sf_gen_or>
    4ae8:	ldr	r1, [pc, #1744]	; 51c0 <gen_linktype+0xe8c>
    4aec:	mov	r0, #1
    4af0:	mov	r2, #8
    4af4:	ldr	r1, [pc, r1]
    4af8:	bl	98e8 <gen_load_a>
    4afc:	mov	r4, r0
    4b00:	mov	r0, #208	; 0xd0
    4b04:	bl	1fbc <newchunk>
    4b08:	mov	r5, r0
    4b0c:	mov	r0, #47	; 0x2f
    4b10:	b	4e1c <gen_linktype+0xae8>
    4b14:	mov	r0, r4
    4b18:	bl	adc8 <ethertype_to_ppptype>
    4b1c:	ldr	r1, [pc, #1640]	; 518c <gen_linktype+0xe58>
    4b20:	mov	r4, r0
    4b24:	ldr	r1, [pc, r1]
    4b28:	mov	r0, #1
    4b2c:	mov	r2, #8
    4b30:	bl	98e8 <gen_load_a>
    4b34:	b	43a0 <gen_linktype+0x6c>
    4b38:	mov	r0, r4
    4b3c:	sub	sp, fp, #24
    4b40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    4b44:	b	ae58 <gen_ether_linktype>
    4b48:	mov	r0, #96	; 0x60
    4b4c:	mov	r1, #0
    4b50:	mov	r2, #16
    4b54:	str	r0, [sp, #8]
    4b58:	mov	r0, #1
    4b5c:	mov	r3, #240	; 0xf0
    4b60:	str	r2, [sp]
    4b64:	str	r1, [sp, #4]
    4b68:	mov	r1, #0
    4b6c:	mov	r2, #16
    4b70:	b	4624 <gen_linktype+0x2f0>
    4b74:	cmp	r4, #2048	; 0x800
    4b78:	beq	4dbc <gen_linktype+0xa88>
    4b7c:	movw	r0, #2054	; 0x806
    4b80:	cmp	r4, r0
    4b84:	bne	4bec <gen_linktype+0x8b8>
    4b88:	ldr	r1, [pc, #1588]	; 51c4 <gen_linktype+0xe90>
    4b8c:	mov	r0, #1
    4b90:	mov	r2, #16
    4b94:	ldr	r1, [pc, r1]
    4b98:	bl	98e8 <gen_load_a>
    4b9c:	mov	r4, r0
    4ba0:	mov	r0, #208	; 0xd0
    4ba4:	bl	1fbc <newchunk>
    4ba8:	mov	r6, r0
    4bac:	mov	r0, #213	; 0xd5
    4bb0:	mov	r7, #21
    4bb4:	mov	r2, #16
    4bb8:	str	r0, [r6, #20]
    4bbc:	stmib	r6, {r4, r7}
    4bc0:	str	r6, [r6, #96]	; 0x60
    4bc4:	mov	r0, #1
    4bc8:	ldr	r1, [pc, #1528]	; 51c8 <gen_linktype+0xe94>
    4bcc:	ldr	r1, [pc, r1]
    4bd0:	bl	98e8 <gen_load_a>
    4bd4:	mov	r4, r0
    4bd8:	mov	r0, #208	; 0xd0
    4bdc:	bl	1fbc <newchunk>
    4be0:	mov	r5, r0
    4be4:	mov	r0, #241	; 0xf1
    4be8:	b	4e1c <gen_linktype+0xae8>
    4bec:	mov	r0, #20
    4bf0:	bl	1fbc <newchunk>
    4bf4:	mov	r4, r0
    4bf8:	mov	r0, #1
    4bfc:	str	r0, [r4, #12]
    4c00:	mov	r0, #0
    4c04:	str	r0, [r4]
    4c08:	mov	r0, #208	; 0xd0
    4c0c:	bl	1fbc <newchunk>
    4c10:	mov	r5, r0
    4c14:	mov	r0, #21
    4c18:	b	4e60 <gen_linktype+0xb2c>
    4c1c:	movw	r0, #33011	; 0x80f3
    4c20:	cmp	r4, r0
    4c24:	movwne	r0, #32923	; 0x809b
    4c28:	cmpne	r4, r0
    4c2c:	bne	4f10 <gen_linktype+0xbdc>
    4c30:	ldr	r1, [pc, #1400]	; 51b0 <gen_linktype+0xe7c>
    4c34:	mov	r0, #1
    4c38:	mov	r2, #8
    4c3c:	ldr	r1, [pc, r1]
    4c40:	bl	98e8 <gen_load_a>
    4c44:	mov	r5, r0
    4c48:	mov	r0, #208	; 0xd0
    4c4c:	bl	1fbc <newchunk>
    4c50:	mov	r6, r0
    4c54:	mov	r0, #4
    4c58:	mvn	r1, #12
    4c5c:	mov	r7, #21
    4c60:	mov	r2, #0
    4c64:	add	r3, sp, #16
    4c68:	str	r0, [r6, #20]
    4c6c:	movw	r0, #32923	; 0x809b
    4c70:	stmib	r6, {r5, r7}
    4c74:	str	r6, [r6, #96]	; 0x60
    4c78:	cmp	r4, r0
    4c7c:	mvneq	r1, #100	; 0x64
    4c80:	cmp	r4, r0
    4c84:	sub	r0, r4, r0
    4c88:	clz	r0, r0
    4c8c:	strb	r1, [sp, #23]
    4c90:	mov	r1, #128	; 0x80
    4c94:	movweq	r2, #7
    4c98:	lsr	r0, r0, #5
    4c9c:	strb	r1, [sp, #22]
    4ca0:	mov	r1, #0
    4ca4:	strb	r2, [sp, #21]
    4ca8:	mov	r2, #8
    4cac:	lsl	r0, r0, #3
    4cb0:	strb	r1, [sp, #20]
    4cb4:	mov	r1, #0
    4cb8:	strb	r0, [sp, #19]
    4cbc:	mov	r0, #3
    4cc0:	strb	r0, [sp, #18]
    4cc4:	movw	r0, #43690	; 0xaaaa
    4cc8:	strh	r0, [sp, #16]
    4ccc:	mov	r0, #2
    4cd0:	bl	b330 <gen_bcmp>
    4cd4:	mov	r5, r0
    4cd8:	mov	r0, r6
    4cdc:	mov	r1, r5
    4ce0:	bl	3964 <sf_gen_and>
    4ce4:	ldr	r1, [pc, #1224]	; 51b4 <gen_linktype+0xe80>
    4ce8:	mov	r0, #1
    4cec:	mov	r2, #8
    4cf0:	ldr	r1, [pc, r1]
    4cf4:	bl	98e8 <gen_load_a>
    4cf8:	mov	r6, r0
    4cfc:	mov	r0, #208	; 0xd0
    4d00:	bl	1fbc <newchunk>
    4d04:	str	r4, [r0, #20]
    4d08:	str	r6, [r0, #4]
    4d0c:	b	5098 <gen_linktype+0xd64>
    4d10:	mov	r0, #53	; 0x35
    4d14:	mov	r1, #2
    4d18:	mov	r2, #16
    4d1c:	mov	r3, #0
    4d20:	bl	a1ec <sf_gen_atmfield_code>
    4d24:	mov	r6, r0
    4d28:	b	4734 <gen_linktype+0x400>
    4d2c:	ldr	r1, [pc, #1204]	; 51e8 <gen_linktype+0xeb4>
    4d30:	mov	r0, #1
    4d34:	mov	r2, #16
    4d38:	ldr	r1, [pc, r1]
    4d3c:	bl	98e8 <gen_load_a>
    4d40:	mov	r4, r0
    4d44:	mov	r0, #208	; 0xd0
    4d48:	bl	1fbc <newchunk>
    4d4c:	mov	r5, r0
    4d50:	mov	r0, #21
    4d54:	mov	r1, #26
    4d58:	b	4e5c <gen_linktype+0xb28>
    4d5c:	ldr	r1, [pc, #1140]	; 51d8 <gen_linktype+0xea4>
    4d60:	mov	r0, #1
    4d64:	mov	r2, #16
    4d68:	ldr	r1, [pc, r1]
    4d6c:	bl	98e8 <gen_load_a>
    4d70:	mov	r4, r0
    4d74:	mov	r0, #208	; 0xd0
    4d78:	bl	1fbc <newchunk>
    4d7c:	mov	r5, r0
    4d80:	mov	r0, #21
    4d84:	mov	r1, #214	; 0xd6
    4d88:	b	4e5c <gen_linktype+0xb28>
    4d8c:	ldr	r1, [pc, #1096]	; 51dc <gen_linktype+0xea8>
    4d90:	mov	r0, #1
    4d94:	mov	r2, #16
    4d98:	ldr	r1, [pc, r1]
    4d9c:	bl	98e8 <gen_load_a>
    4da0:	mov	r4, r0
    4da4:	mov	r0, #208	; 0xd0
    4da8:	bl	1fbc <newchunk>
    4dac:	mov	r5, r0
    4db0:	mov	r0, #21
    4db4:	mov	r1, #221	; 0xdd
    4db8:	b	4e5c <gen_linktype+0xb28>
    4dbc:	ldr	r1, [pc, #1036]	; 51d0 <gen_linktype+0xe9c>
    4dc0:	mov	r0, #1
    4dc4:	mov	r2, #16
    4dc8:	ldr	r1, [pc, r1]
    4dcc:	bl	98e8 <gen_load_a>
    4dd0:	mov	r4, r0
    4dd4:	mov	r0, #208	; 0xd0
    4dd8:	bl	1fbc <newchunk>
    4ddc:	mov	r6, r0
    4de0:	mov	r0, #212	; 0xd4
    4de4:	mov	r7, #21
    4de8:	mov	r2, #16
    4dec:	str	r0, [r6, #20]
    4df0:	stmib	r6, {r4, r7}
    4df4:	str	r6, [r6, #96]	; 0x60
    4df8:	mov	r0, #1
    4dfc:	ldr	r1, [pc, #976]	; 51d4 <gen_linktype+0xea0>
    4e00:	ldr	r1, [pc, r1]
    4e04:	bl	98e8 <gen_load_a>
    4e08:	mov	r4, r0
    4e0c:	mov	r0, #208	; 0xd0
    4e10:	bl	1fbc <newchunk>
    4e14:	mov	r5, r0
    4e18:	mov	r0, #240	; 0xf0
    4e1c:	str	r0, [r5, #20]
    4e20:	str	r4, [r5, #4]
    4e24:	str	r7, [r5, #8]
    4e28:	str	r5, [r5, #96]	; 0x60
    4e2c:	mov	r0, r6
    4e30:	b	50a0 <gen_linktype+0xd6c>
    4e34:	mov	r0, #1
    4e38:	mov	r1, #2
    4e3c:	mov	r2, #8
    4e40:	bl	98e8 <gen_load_a>
    4e44:	mov	r4, r0
    4e48:	mov	r0, #208	; 0xd0
    4e4c:	bl	1fbc <newchunk>
    4e50:	mov	r5, r0
    4e54:	mov	r0, #21
    4e58:	movw	r1, #910	; 0x38e
    4e5c:	str	r1, [r5, #20]
    4e60:	str	r4, [r5, #4]
    4e64:	b	43bc <gen_linktype+0x88>
    4e68:	mov	r0, #1
    4e6c:	mov	r1, #2
    4e70:	mov	r2, #8
    4e74:	bl	98e8 <gen_load_a>
    4e78:	mov	r5, r0
    4e7c:	mov	r0, #208	; 0xd0
    4e80:	bl	1fbc <newchunk>
    4e84:	mov	r4, r0
    4e88:	movw	r0, #897	; 0x381
    4e8c:	mov	r1, #2
    4e90:	mov	r2, #8
    4e94:	mov	r8, #21
    4e98:	str	r0, [r4, #20]
    4e9c:	mov	r0, #1
    4ea0:	stmib	r4, {r5, r8}
    4ea4:	str	r4, [r4, #96]	; 0x60
    4ea8:	bl	98e8 <gen_load_a>
    4eac:	mov	r5, r0
    4eb0:	mov	r0, #208	; 0xd0
    4eb4:	bl	1fbc <newchunk>
    4eb8:	mov	r6, r0
    4ebc:	movw	r0, #898	; 0x382
    4ec0:	mov	r1, #2
    4ec4:	mov	r2, #8
    4ec8:	str	r0, [r6, #20]
    4ecc:	mov	r0, #1
    4ed0:	stmib	r6, {r5, r8}
    4ed4:	str	r6, [r6, #96]	; 0x60
    4ed8:	bl	98e8 <gen_load_a>
    4edc:	mov	r7, r0
    4ee0:	mov	r0, #208	; 0xd0
    4ee4:	bl	1fbc <newchunk>
    4ee8:	mov	r5, r0
    4eec:	movw	r0, #899	; 0x383
    4ef0:	str	r0, [r5, #20]
    4ef4:	mov	r0, r6
    4ef8:	mov	r1, r5
    4efc:	stmib	r5, {r7, r8}
    4f00:	str	r5, [r5, #96]	; 0x60
    4f04:	bl	3a3c <sf_gen_or>
    4f08:	mov	r0, r4
    4f0c:	b	50a0 <gen_linktype+0xd6c>
    4f10:	cmp	r4, #254	; 0xfe
    4f14:	beq	48bc <gen_linktype+0x588>
    4f18:	ldr	r1, [pc, #632]	; 5198 <gen_linktype+0xe64>
    4f1c:	mov	r0, #1
    4f20:	mov	r2, #8
    4f24:	ldr	r1, [pc, r1]
    4f28:	bl	98e8 <gen_load_a>
    4f2c:	mov	r5, r0
    4f30:	mov	r0, #208	; 0xd0
    4f34:	bl	1fbc <newchunk>
    4f38:	mov	r8, #21
    4f3c:	stmib	r0, {r5, r8}
    4f40:	mov	r6, r0
    4f44:	str	r0, [r0, #96]	; 0x60
    4f48:	movw	r0, #1500	; 0x5dc
    4f4c:	cmp	r4, r0
    4f50:	bgt	50ac <gen_linktype+0xd78>
    4f54:	mov	r0, #4
    4f58:	mov	r2, #16
    4f5c:	str	r0, [r6, #20]
    4f60:	mov	r0, #1
    4f64:	ldr	r1, [pc, #560]	; 519c <gen_linktype+0xe68>
    4f68:	ldr	r1, [pc, r1]
    4f6c:	bl	98e8 <gen_load_a>
    4f70:	mov	r7, r0
    4f74:	mov	r0, #208	; 0xd0
    4f78:	bl	1fbc <newchunk>
    4f7c:	str	r4, [r0, #20]
    4f80:	stmib	r0, {r7, r8}
    4f84:	mov	r5, r0
    4f88:	str	r0, [r0, #96]	; 0x60
    4f8c:	b	4740 <gen_linktype+0x40c>
    4f90:	mov	r0, #0
    4f94:	mov	r1, #16
    4f98:	bl	ba9c <gen_load_macplrel>
    4f9c:	mov	r4, r0
    4fa0:	mov	r0, #208	; 0xd0
    4fa4:	bl	1fbc <newchunk>
    4fa8:	mov	r6, r0
    4fac:	mov	r0, #224	; 0xe0
    4fb0:	mov	r7, #21
    4fb4:	add	r3, sp, #16
    4fb8:	mov	r1, #0
    4fbc:	mov	r2, #8
    4fc0:	str	r0, [r6, #20]
    4fc4:	movw	r0, #0
    4fc8:	stmib	r6, {r4, r7}
    4fcc:	str	r6, [r6, #96]	; 0x60
    4fd0:	movt	r0, #14209	; 0x3781
    4fd4:	str	r0, [sp, #20]
    4fd8:	movw	r0, #43690	; 0xaaaa
    4fdc:	movt	r0, #3
    4fe0:	str	r0, [sp, #16]
    4fe4:	mov	r0, #2
    4fe8:	bl	b330 <gen_bcmp>
    4fec:	mov	r5, r0
    4ff0:	mov	r0, r6
    4ff4:	mov	r1, r5
    4ff8:	bl	3a3c <sf_gen_or>
    4ffc:	ldr	r1, [pc, #416]	; 51a4 <gen_linktype+0xe70>
    5000:	mov	r0, #1
    5004:	mov	r2, #8
    5008:	mov	r6, #1
    500c:	ldr	r1, [pc, r1]
    5010:	bl	98e8 <gen_load_a>
    5014:	mov	r4, r0
    5018:	mov	r0, #208	; 0xd0
    501c:	bl	1fbc <newchunk>
    5020:	mov	r1, #4
    5024:	str	r1, [r0, #20]
    5028:	mov	r1, r5
    502c:	stmib	r0, {r4, r7}
    5030:	str	r0, [r0, #96]	; 0x60
    5034:	bl	3964 <sf_gen_and>
    5038:	ldr	r1, [pc, #360]	; 51a8 <gen_linktype+0xe74>
    503c:	mov	r0, #1
    5040:	mov	r2, #8
    5044:	ldr	r1, [pc, r1]
    5048:	bl	98e8 <gen_load_a>
    504c:	mov	r4, r0
    5050:	mov	r0, #208	; 0xd0
    5054:	bl	1fbc <newchunk>
    5058:	mov	r1, r5
    505c:	str	r6, [r0, #20]
    5060:	stmib	r0, {r4, r7}
    5064:	str	r0, [r0, #96]	; 0x60
    5068:	bl	3a3c <sf_gen_or>
    506c:	ldr	r1, [pc, #312]	; 51ac <gen_linktype+0xe78>
    5070:	mov	r0, #1
    5074:	mov	r2, #8
    5078:	ldr	r1, [pc, r1]
    507c:	bl	98e8 <gen_load_a>
    5080:	mov	r4, r0
    5084:	mov	r0, #208	; 0xd0
    5088:	bl	1fbc <newchunk>
    508c:	movw	r1, #33079	; 0x8137
    5090:	str	r1, [r0, #20]
    5094:	str	r4, [r0, #4]
    5098:	str	r7, [r0, #8]
    509c:	str	r0, [r0, #96]	; 0x60
    50a0:	mov	r1, r5
    50a4:	bl	3a3c <sf_gen_or>
    50a8:	b	43c4 <gen_linktype+0x90>
    50ac:	str	r4, [r6, #20]
    50b0:	mov	r5, r6
    50b4:	b	43c4 <gen_linktype+0x90>
    50b8:	ldr	r0, [pc, #320]	; 5200 <gen_linktype+0xecc>
    50bc:	add	r0, pc, r0
    50c0:	bl	1f30 <sf_bpf_error>
    50c4:	ldr	r0, [pc, #320]	; 520c <gen_linktype+0xed8>
    50c8:	add	r0, pc, r0
    50cc:	bl	1f30 <sf_bpf_error>
    50d0:	ldr	r0, [pc, #284]	; 51f4 <gen_linktype+0xec0>
    50d4:	add	r0, pc, r0
    50d8:	bl	1f30 <sf_bpf_error>
    50dc:	ldr	r0, [pc, #288]	; 5204 <gen_linktype+0xed0>
    50e0:	add	r0, pc, r0
    50e4:	bl	1f30 <sf_bpf_error>
    50e8:	ldr	r0, [pc, #280]	; 5208 <gen_linktype+0xed4>
    50ec:	add	r0, pc, r0
    50f0:	bl	1f30 <sf_bpf_error>
    50f4:	ldr	r0, [pc, #128]	; 517c <gen_linktype+0xe48>
    50f8:	add	r0, pc, r0
    50fc:	bl	1f30 <sf_bpf_error>
    5100:	ldr	r0, [pc, #232]	; 51f0 <gen_linktype+0xebc>
    5104:	add	r0, pc, r0
    5108:	bl	1f30 <sf_bpf_error>
    510c:	ldr	r0, [pc, #216]	; 51ec <gen_linktype+0xeb8>
    5110:	add	r0, pc, r0
    5114:	bl	1f30 <sf_bpf_error>
    5118:	ldr	r0, [pc, #220]	; 51fc <gen_linktype+0xec8>
    511c:	add	r0, pc, r0
    5120:	bl	1f30 <sf_bpf_error>
    5124:	ldr	r0, [pc, #180]	; 51e0 <gen_linktype+0xeac>
    5128:	add	r0, pc, r0
    512c:	bl	1f30 <sf_bpf_error>
    5130:	ldr	r0, [pc, #216]	; 5210 <gen_linktype+0xedc>
    5134:	add	r0, pc, r0
    5138:	bl	1f30 <sf_bpf_error>
    513c:	ldr	r0, [pc, #208]	; 5214 <gen_linktype+0xee0>
    5140:	add	r0, pc, r0
    5144:	bl	1f30 <sf_bpf_error>
    5148:	ldr	r0, [pc, #168]	; 51f8 <gen_linktype+0xec4>
    514c:	add	r0, pc, r0
    5150:	bl	1f30 <sf_bpf_error>
    5154:	ldr	r0, [pc, #188]	; 5218 <gen_linktype+0xee4>
    5158:	add	r0, pc, r0
    515c:	bl	1f30 <sf_bpf_error>
    5160:	ldr	r0, [pc, #180]	; 521c <gen_linktype+0xee8>
    5164:	add	r0, pc, r0
    5168:	bl	1f30 <sf_bpf_error>
    516c:	ldr	r0, [pc, #172]	; 5220 <gen_linktype+0xeec>
    5170:	add	r0, pc, r0
    5174:	bl	1f30 <sf_bpf_error>
    5178:	.word	0x0002bd8c
    517c:	.word	0x0000e156
    5180:	.word	0x0002c0dc
    5184:	.word	0x0002c0a0
    5188:	.word	0x0002c04c
    518c:	.word	0x0002b914
    5190:	.word	0x0002bc0c
    5194:	.word	0x0002bb0c
    5198:	.word	0x0002b514
    519c:	.word	0x0002b4d4
    51a0:	.word	0x0002bb70
    51a4:	.word	0x0002b42c
    51a8:	.word	0x0002b3f4
    51ac:	.word	0x0002b3c0
    51b0:	.word	0x0002b7fc
    51b4:	.word	0x0002b748
    51b8:	.word	0x0002b9bc
    51bc:	.word	0x0002b984
    51c0:	.word	0x0002b944
    51c4:	.word	0x0002b8a4
    51c8:	.word	0x0002b86c
    51cc:	.word	0x0002bc54
    51d0:	.word	0x0002b670
    51d4:	.word	0x0002b638
    51d8:	.word	0x0002b6d0
    51dc:	.word	0x0002b6a0
    51e0:	.word	0x0000e145
    51e4:	.word	0x0002ba30
    51e8:	.word	0x0002b700
    51ec:	.word	0x0000e19e
    51f0:	.word	0x0000e1d9
    51f4:	.word	0x0000e23a
    51f8:	.word	0x0000e1f1
    51fc:	.word	0x0000e24f
    5200:	.word	0x0000e2de
    5204:	.word	0x0000e2e8
    5208:	.word	0x0000e310
    520c:	.word	0x0000e362
    5210:	.word	0x0000e32e
    5214:	.word	0x0000e358
    5218:	.word	0x0000e36f
    521c:	.word	0x0000e393
    5220:	.word	0x0000e3b6
    5224:	.word	0x0002bca0

00005228 <sf_gen_portop>:
    5228:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    522c:	add	fp, sp, #24
    5230:	mov	r8, r0
    5234:	ldr	r0, [pc, #420]	; 53e0 <sf_gen_portop+0x1b8>
    5238:	mov	r4, r1
    523c:	mov	r1, #16
    5240:	mov	r6, r2
    5244:	ldr	r0, [pc, r0]
    5248:	add	r0, r0, #9
    524c:	bl	ba9c <gen_load_macplrel>
    5250:	mov	r7, r0
    5254:	mov	r0, #208	; 0xd0
    5258:	bl	1fbc <newchunk>
    525c:	mov	r5, r0
    5260:	mov	r0, #21
    5264:	str	r4, [r5, #20]
    5268:	str	r7, [r5, #4]
    526c:	str	r0, [r5, #8]
    5270:	str	r5, [r5, #96]	; 0x60
    5274:	bl	53e4 <gen_ipfrag>
    5278:	mov	r4, r0
    527c:	mov	r0, r5
    5280:	mov	r1, r4
    5284:	bl	3964 <sf_gen_and>
    5288:	cmp	r6, #4
    528c:	bhi	53dc <sf_gen_portop+0x1b4>
    5290:	add	r0, pc, #4
    5294:	ldr	r1, [r0, r6, lsl #2]
    5298:	add	pc, r0, r1
    529c:	.word	0x00000014
    52a0:	.word	0x000000ec
    52a4:	.word	0x000000f8
    52a8:	.word	0x00000014
    52ac:	.word	0x00000080
    52b0:	mov	r0, #5
    52b4:	mov	r1, #0
    52b8:	mov	r2, #8
    52bc:	bl	98e8 <gen_load_a>
    52c0:	mov	r5, r0
    52c4:	mov	r0, #208	; 0xd0
    52c8:	bl	1fbc <newchunk>
    52cc:	mov	r7, r0
    52d0:	mov	r9, #21
    52d4:	str	r8, [r0, #20]
    52d8:	stmib	r0, {r5, r9}
    52dc:	str	r0, [r0, #96]	; 0x60
    52e0:	mov	r0, #5
    52e4:	mov	r1, #2
    52e8:	mov	r2, #8
    52ec:	bl	98e8 <gen_load_a>
    52f0:	mov	r5, r0
    52f4:	mov	r0, #208	; 0xd0
    52f8:	bl	1fbc <newchunk>
    52fc:	mov	r6, r0
    5300:	str	r8, [r0, #20]
    5304:	stmib	r0, {r5, r9}
    5308:	str	r0, [r0, #96]	; 0x60
    530c:	mov	r0, r7
    5310:	mov	r1, r6
    5314:	bl	3a3c <sf_gen_or>
    5318:	b	53c8 <sf_gen_portop+0x1a0>
    531c:	mov	r0, #5
    5320:	mov	r1, #0
    5324:	mov	r2, #8
    5328:	bl	98e8 <gen_load_a>
    532c:	mov	r5, r0
    5330:	mov	r0, #208	; 0xd0
    5334:	bl	1fbc <newchunk>
    5338:	mov	r7, r0
    533c:	mov	r9, #21
    5340:	str	r8, [r0, #20]
    5344:	stmib	r0, {r5, r9}
    5348:	str	r0, [r0, #96]	; 0x60
    534c:	mov	r0, #5
    5350:	mov	r1, #2
    5354:	mov	r2, #8
    5358:	bl	98e8 <gen_load_a>
    535c:	mov	r5, r0
    5360:	mov	r0, #208	; 0xd0
    5364:	bl	1fbc <newchunk>
    5368:	mov	r6, r0
    536c:	str	r8, [r0, #20]
    5370:	stmib	r0, {r5, r9}
    5374:	str	r0, [r0, #96]	; 0x60
    5378:	mov	r0, r7
    537c:	mov	r1, r6
    5380:	bl	3964 <sf_gen_and>
    5384:	b	53c8 <sf_gen_portop+0x1a0>
    5388:	mov	r0, #5
    538c:	mov	r1, #0
    5390:	b	539c <sf_gen_portop+0x174>
    5394:	mov	r0, #5
    5398:	mov	r1, #2
    539c:	mov	r2, #8
    53a0:	bl	98e8 <gen_load_a>
    53a4:	mov	r5, r0
    53a8:	mov	r0, #208	; 0xd0
    53ac:	bl	1fbc <newchunk>
    53b0:	mov	r6, r0
    53b4:	mov	r0, #21
    53b8:	str	r8, [r6, #20]
    53bc:	str	r5, [r6, #4]
    53c0:	str	r0, [r6, #8]
    53c4:	str	r6, [r6, #96]	; 0x60
    53c8:	mov	r0, r4
    53cc:	mov	r1, r6
    53d0:	bl	3964 <sf_gen_and>
    53d4:	mov	r0, r6
    53d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    53dc:	bl	f74 <abort@plt>
    53e0:	.word	0x0002b1fc

000053e4 <gen_ipfrag>:
    53e4:	push	{r4, sl, fp, lr}
    53e8:	add	fp, sp, #8
    53ec:	ldr	r0, [pc, #68]	; 5438 <gen_ipfrag+0x54>
    53f0:	mov	r1, #8
    53f4:	ldr	r0, [pc, r0]
    53f8:	add	r0, r0, #6
    53fc:	bl	ba9c <gen_load_macplrel>
    5400:	mov	r4, r0
    5404:	mov	r0, #208	; 0xd0
    5408:	bl	1fbc <newchunk>
    540c:	movw	r2, #8191	; 0x1fff
    5410:	mov	r1, #69	; 0x45
    5414:	str	r2, [r0, #20]
    5418:	str	r4, [r0, #4]
    541c:	str	r1, [r0, #8]
    5420:	ldr	r1, [r0, #44]	; 0x2c
    5424:	clz	r1, r1
    5428:	lsr	r1, r1, #5
    542c:	str	r1, [r0, #44]	; 0x2c
    5430:	str	r0, [r0, #96]	; 0x60
    5434:	pop	{r4, sl, fp, pc}
    5438:	.word	0x0002b04c

0000543c <sf_gen_portop6>:
    543c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5440:	add	fp, sp, #24
    5444:	mov	r8, r0
    5448:	ldr	r0, [pc, #424]	; 55f8 <sf_gen_portop6+0x1bc>
    544c:	mov	r7, r1
    5450:	mov	r1, #16
    5454:	mov	r6, r2
    5458:	ldr	r0, [pc, r0]
    545c:	add	r0, r0, #6
    5460:	bl	ba9c <gen_load_macplrel>
    5464:	mov	r5, r0
    5468:	mov	r0, #208	; 0xd0
    546c:	bl	1fbc <newchunk>
    5470:	mov	r4, r0
    5474:	cmp	r6, #4
    5478:	mov	r0, #21
    547c:	str	r7, [r4, #20]
    5480:	str	r5, [r4, #4]
    5484:	str	r0, [r4, #8]
    5488:	str	r4, [r4, #96]	; 0x60
    548c:	bhi	55f4 <sf_gen_portop6+0x1b8>
    5490:	add	r0, pc, #4
    5494:	ldr	r1, [r0, r6, lsl #2]
    5498:	add	pc, r0, r1
    549c:	.word	0x00000014
    54a0:	.word	0x000000fc
    54a4:	.word	0x0000010c
    54a8:	.word	0x00000014
    54ac:	.word	0x00000088
    54b0:	ldr	r0, [pc, #340]	; 560c <sf_gen_portop6+0x1d0>
    54b4:	mov	r1, #8
    54b8:	ldr	r0, [pc, r0]
    54bc:	add	r0, r0, #40	; 0x28
    54c0:	bl	ba9c <gen_load_macplrel>
    54c4:	mov	r5, r0
    54c8:	mov	r0, #208	; 0xd0
    54cc:	bl	1fbc <newchunk>
    54d0:	mov	r9, #21
    54d4:	str	r8, [r0, #20]
    54d8:	stmib	r0, {r5, r9}
    54dc:	str	r0, [r0, #96]	; 0x60
    54e0:	mov	r7, r0
    54e4:	mov	r1, #8
    54e8:	ldr	r0, [pc, #288]	; 5610 <sf_gen_portop6+0x1d4>
    54ec:	ldr	r0, [pc, r0]
    54f0:	add	r0, r0, #42	; 0x2a
    54f4:	bl	ba9c <gen_load_macplrel>
    54f8:	mov	r5, r0
    54fc:	mov	r0, #208	; 0xd0
    5500:	bl	1fbc <newchunk>
    5504:	mov	r6, r0
    5508:	str	r8, [r0, #20]
    550c:	stmib	r0, {r5, r9}
    5510:	str	r0, [r0, #96]	; 0x60
    5514:	mov	r0, r7
    5518:	mov	r1, r6
    551c:	bl	3a3c <sf_gen_or>
    5520:	b	55e0 <sf_gen_portop6+0x1a4>
    5524:	ldr	r0, [pc, #216]	; 5604 <sf_gen_portop6+0x1c8>
    5528:	mov	r1, #8
    552c:	ldr	r0, [pc, r0]
    5530:	add	r0, r0, #40	; 0x28
    5534:	bl	ba9c <gen_load_macplrel>
    5538:	mov	r5, r0
    553c:	mov	r0, #208	; 0xd0
    5540:	bl	1fbc <newchunk>
    5544:	mov	r9, #21
    5548:	str	r8, [r0, #20]
    554c:	stmib	r0, {r5, r9}
    5550:	str	r0, [r0, #96]	; 0x60
    5554:	mov	r7, r0
    5558:	mov	r1, #8
    555c:	ldr	r0, [pc, #164]	; 5608 <sf_gen_portop6+0x1cc>
    5560:	ldr	r0, [pc, r0]
    5564:	add	r0, r0, #42	; 0x2a
    5568:	bl	ba9c <gen_load_macplrel>
    556c:	mov	r5, r0
    5570:	mov	r0, #208	; 0xd0
    5574:	bl	1fbc <newchunk>
    5578:	mov	r6, r0
    557c:	str	r8, [r0, #20]
    5580:	stmib	r0, {r5, r9}
    5584:	str	r0, [r0, #96]	; 0x60
    5588:	mov	r0, r7
    558c:	mov	r1, r6
    5590:	bl	3964 <sf_gen_and>
    5594:	b	55e0 <sf_gen_portop6+0x1a4>
    5598:	ldr	r0, [pc, #92]	; 55fc <sf_gen_portop6+0x1c0>
    559c:	ldr	r0, [pc, r0]
    55a0:	add	r0, r0, #40	; 0x28
    55a4:	b	55b4 <sf_gen_portop6+0x178>
    55a8:	ldr	r0, [pc, #80]	; 5600 <sf_gen_portop6+0x1c4>
    55ac:	ldr	r0, [pc, r0]
    55b0:	add	r0, r0, #42	; 0x2a
    55b4:	mov	r1, #8
    55b8:	bl	ba9c <gen_load_macplrel>
    55bc:	mov	r5, r0
    55c0:	mov	r0, #208	; 0xd0
    55c4:	bl	1fbc <newchunk>
    55c8:	mov	r6, r0
    55cc:	mov	r0, #21
    55d0:	str	r8, [r6, #20]
    55d4:	str	r5, [r6, #4]
    55d8:	str	r0, [r6, #8]
    55dc:	str	r6, [r6, #96]	; 0x60
    55e0:	mov	r0, r4
    55e4:	mov	r1, r6
    55e8:	bl	3964 <sf_gen_and>
    55ec:	mov	r0, r6
    55f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    55f4:	bl	f74 <abort@plt>
    55f8:	.word	0x0002afe8
    55fc:	.word	0x0002aea4
    5600:	.word	0x0002ae94
    5604:	.word	0x0002af14
    5608:	.word	0x0002aee0
    560c:	.word	0x0002af88
    5610:	.word	0x0002af54

00005614 <sf_gen_portrangeop>:
    5614:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5618:	add	fp, sp, #24
    561c:	mov	r9, r0
    5620:	ldr	r0, [pc, #284]	; 5744 <sf_gen_portrangeop+0x130>
    5624:	mov	r8, r1
    5628:	mov	r1, #16
    562c:	mov	r7, r3
    5630:	mov	r4, r2
    5634:	ldr	r0, [pc, r0]
    5638:	add	r0, r0, #9
    563c:	bl	ba9c <gen_load_macplrel>
    5640:	mov	r5, r0
    5644:	mov	r0, #208	; 0xd0
    5648:	bl	1fbc <newchunk>
    564c:	mov	r6, r0
    5650:	mov	r0, #21
    5654:	str	r4, [r6, #20]
    5658:	str	r5, [r6, #4]
    565c:	str	r0, [r6, #8]
    5660:	str	r6, [r6, #96]	; 0x60
    5664:	bl	53e4 <gen_ipfrag>
    5668:	mov	r4, r0
    566c:	mov	r0, r6
    5670:	mov	r1, r4
    5674:	bl	3964 <sf_gen_and>
    5678:	cmp	r7, #4
    567c:	bhi	5740 <sf_gen_portrangeop+0x12c>
    5680:	add	r0, pc, #4
    5684:	ldr	r1, [r0, r7, lsl #2]
    5688:	add	pc, r0, r1
    568c:	.word	0x00000014
    5690:	.word	0x00000084
    5694:	.word	0x0000008c
    5698:	.word	0x00000014
    569c:	.word	0x0000004c
    56a0:	mov	r0, #0
    56a4:	mov	r1, r9
    56a8:	mov	r2, r8
    56ac:	bl	5748 <gen_portrangeatom>
    56b0:	mov	r6, r0
    56b4:	mov	r0, #2
    56b8:	mov	r1, r9
    56bc:	mov	r2, r8
    56c0:	bl	5748 <gen_portrangeatom>
    56c4:	mov	r5, r0
    56c8:	mov	r0, r6
    56cc:	mov	r1, r5
    56d0:	bl	3a3c <sf_gen_or>
    56d4:	b	572c <sf_gen_portrangeop+0x118>
    56d8:	mov	r0, #0
    56dc:	mov	r1, r9
    56e0:	mov	r2, r8
    56e4:	bl	5748 <gen_portrangeatom>
    56e8:	mov	r6, r0
    56ec:	mov	r0, #2
    56f0:	mov	r1, r9
    56f4:	mov	r2, r8
    56f8:	bl	5748 <gen_portrangeatom>
    56fc:	mov	r5, r0
    5700:	mov	r0, r6
    5704:	mov	r1, r5
    5708:	bl	3964 <sf_gen_and>
    570c:	b	572c <sf_gen_portrangeop+0x118>
    5710:	mov	r0, #0
    5714:	b	571c <sf_gen_portrangeop+0x108>
    5718:	mov	r0, #2
    571c:	mov	r1, r9
    5720:	mov	r2, r8
    5724:	bl	5748 <gen_portrangeatom>
    5728:	mov	r5, r0
    572c:	mov	r0, r4
    5730:	mov	r1, r5
    5734:	bl	3964 <sf_gen_and>
    5738:	mov	r0, r5
    573c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5740:	bl	f74 <abort@plt>
    5744:	.word	0x0002ae0c

00005748 <gen_portrangeatom>:
    5748:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    574c:	add	fp, sp, #24
    5750:	mov	r7, r0
    5754:	mov	r4, r2
    5758:	mov	r5, r1
    575c:	mov	r0, #5
    5760:	mov	r2, #8
    5764:	mov	r1, r7
    5768:	bl	98e8 <gen_load_a>
    576c:	mov	r8, r0
    5770:	mov	r0, #208	; 0xd0
    5774:	bl	1fbc <newchunk>
    5778:	cmp	r5, r4
    577c:	mov	r1, r5
    5780:	mov	r6, r0
    5784:	mov	r0, #53	; 0x35
    5788:	mov	r2, #8
    578c:	movgt	r1, r4
    5790:	str	r1, [r6, #20]
    5794:	str	r8, [r6, #4]
    5798:	str	r0, [r6, #8]
    579c:	mov	r0, #5
    57a0:	mov	r1, r7
    57a4:	str	r6, [r6, #96]	; 0x60
    57a8:	bl	98e8 <gen_load_a>
    57ac:	mov	r8, r0
    57b0:	mov	r0, #208	; 0xd0
    57b4:	bl	1fbc <newchunk>
    57b8:	cmp	r5, r4
    57bc:	mov	r7, r0
    57c0:	mov	r0, #37	; 0x25
    57c4:	movgt	r4, r5
    57c8:	mov	r1, r7
    57cc:	str	r4, [r7, #20]
    57d0:	str	r8, [r7, #4]
    57d4:	str	r0, [r7, #8]
    57d8:	ldr	r0, [r7, #44]	; 0x2c
    57dc:	clz	r0, r0
    57e0:	lsr	r0, r0, #5
    57e4:	str	r0, [r7, #44]	; 0x2c
    57e8:	mov	r0, r6
    57ec:	str	r7, [r7, #96]	; 0x60
    57f0:	bl	3964 <sf_gen_and>
    57f4:	mov	r0, r7
    57f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000057fc <sf_gen_portrangeop6>:
    57fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5800:	add	fp, sp, #24
    5804:	mov	r9, r0
    5808:	ldr	r0, [pc, #264]	; 5918 <sf_gen_portrangeop6+0x11c>
    580c:	mov	r8, r1
    5810:	mov	r1, #16
    5814:	mov	r7, r3
    5818:	mov	r5, r2
    581c:	ldr	r0, [pc, r0]
    5820:	add	r0, r0, #6
    5824:	bl	ba9c <gen_load_macplrel>
    5828:	mov	r6, r0
    582c:	mov	r0, #208	; 0xd0
    5830:	bl	1fbc <newchunk>
    5834:	mov	r4, r0
    5838:	cmp	r7, #4
    583c:	mov	r0, #21
    5840:	str	r5, [r4, #20]
    5844:	str	r6, [r4, #4]
    5848:	str	r0, [r4, #8]
    584c:	str	r4, [r4, #96]	; 0x60
    5850:	bhi	5914 <sf_gen_portrangeop6+0x118>
    5854:	add	r0, pc, #4
    5858:	ldr	r1, [r0, r7, lsl #2]
    585c:	add	pc, r0, r1
    5860:	.word	0x00000014
    5864:	.word	0x00000084
    5868:	.word	0x0000008c
    586c:	.word	0x00000014
    5870:	.word	0x0000004c
    5874:	mov	r0, #0
    5878:	mov	r1, r9
    587c:	mov	r2, r8
    5880:	bl	591c <gen_portrangeatom6>
    5884:	mov	r6, r0
    5888:	mov	r0, #2
    588c:	mov	r1, r9
    5890:	mov	r2, r8
    5894:	bl	591c <gen_portrangeatom6>
    5898:	mov	r5, r0
    589c:	mov	r0, r6
    58a0:	mov	r1, r5
    58a4:	bl	3a3c <sf_gen_or>
    58a8:	b	5900 <sf_gen_portrangeop6+0x104>
    58ac:	mov	r0, #0
    58b0:	mov	r1, r9
    58b4:	mov	r2, r8
    58b8:	bl	591c <gen_portrangeatom6>
    58bc:	mov	r6, r0
    58c0:	mov	r0, #2
    58c4:	mov	r1, r9
    58c8:	mov	r2, r8
    58cc:	bl	591c <gen_portrangeatom6>
    58d0:	mov	r5, r0
    58d4:	mov	r0, r6
    58d8:	mov	r1, r5
    58dc:	bl	3964 <sf_gen_and>
    58e0:	b	5900 <sf_gen_portrangeop6+0x104>
    58e4:	mov	r0, #0
    58e8:	b	58f0 <sf_gen_portrangeop6+0xf4>
    58ec:	mov	r0, #2
    58f0:	mov	r1, r9
    58f4:	mov	r2, r8
    58f8:	bl	591c <gen_portrangeatom6>
    58fc:	mov	r5, r0
    5900:	mov	r0, r4
    5904:	mov	r1, r5
    5908:	bl	3964 <sf_gen_and>
    590c:	mov	r0, r5
    5910:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5914:	bl	f74 <abort@plt>
    5918:	.word	0x0002ac24

0000591c <gen_portrangeatom6>:
    591c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    5920:	add	fp, sp, #24
    5924:	add	r7, r0, #40	; 0x28
    5928:	ldr	r0, [pc, #168]	; 59d8 <gen_portrangeatom6+0xbc>
    592c:	mov	r5, r1
    5930:	mov	r1, #8
    5934:	mov	r4, r2
    5938:	ldr	r0, [pc, r0]
    593c:	add	r0, r0, r7
    5940:	bl	ba9c <gen_load_macplrel>
    5944:	mov	r8, r0
    5948:	mov	r0, #208	; 0xd0
    594c:	bl	1fbc <newchunk>
    5950:	cmp	r5, r4
    5954:	mov	r1, r5
    5958:	mov	r6, r0
    595c:	mov	r0, #53	; 0x35
    5960:	movgt	r1, r4
    5964:	str	r1, [r6, #20]
    5968:	str	r8, [r6, #4]
    596c:	str	r0, [r6, #8]
    5970:	str	r6, [r6, #96]	; 0x60
    5974:	mov	r1, #8
    5978:	ldr	r0, [pc, #92]	; 59dc <gen_portrangeatom6+0xc0>
    597c:	ldr	r0, [pc, r0]
    5980:	add	r0, r0, r7
    5984:	bl	ba9c <gen_load_macplrel>
    5988:	mov	r8, r0
    598c:	mov	r0, #208	; 0xd0
    5990:	bl	1fbc <newchunk>
    5994:	cmp	r5, r4
    5998:	mov	r7, r0
    599c:	mov	r0, #37	; 0x25
    59a0:	movgt	r4, r5
    59a4:	mov	r1, r7
    59a8:	str	r4, [r7, #20]
    59ac:	str	r8, [r7, #4]
    59b0:	str	r0, [r7, #8]
    59b4:	ldr	r0, [r7, #44]	; 0x2c
    59b8:	clz	r0, r0
    59bc:	lsr	r0, r0, #5
    59c0:	str	r0, [r7, #44]	; 0x2c
    59c4:	mov	r0, r6
    59c8:	str	r7, [r7, #96]	; 0x60
    59cc:	bl	3964 <sf_gen_and>
    59d0:	mov	r0, r7
    59d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    59d8:	.word	0x0002ab08
    59dc:	.word	0x0002aac4

000059e0 <sf_gen_scode>:
    59e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59e4:	add	fp, sp, #28
    59e8:	sub	sp, sp, #44	; 0x2c
    59ec:	uxtb	r9, r1
    59f0:	ubfx	r6, r1, #16, #8
    59f4:	ubfx	r5, r1, #8, #8
    59f8:	cmp	r9, #7
    59fc:	bhi	5fb4 <sf_gen_scode+0x5d4>
    5a00:	mov	r7, r0
    5a04:	lsr	r0, r1, #8
    5a08:	add	r1, pc, #4
    5a0c:	ldr	r2, [r1, r9, lsl #2]
    5a10:	add	pc, r1, r2
    5a14:	.word	0x00000020
    5a18:	.word	0x00000020
    5a1c:	.word	0x000000a0
    5a20:	.word	0x000000fc
    5a24:	.word	0x000005ac
    5a28:	.word	0x000001f4
    5a2c:	.word	0x00000164
    5a30:	.word	0x00000188
    5a34:	uxtb	r0, r0
    5a38:	cmp	r0, #12
    5a3c:	beq	5c30 <sf_gen_scode+0x250>
    5a40:	cmp	r0, #1
    5a44:	bne	5c48 <sf_gen_scode+0x268>
    5a48:	ldr	r0, [pc, #1700]	; 60f4 <sf_gen_scode+0x714>
    5a4c:	ldr	r0, [pc, r0]
    5a50:	cmp	r0, #118	; 0x76
    5a54:	ble	5d80 <sf_gen_scode+0x3a0>
    5a58:	sub	r1, r0, #119	; 0x77
    5a5c:	cmp	r1, #8
    5a60:	bhi	5e88 <sf_gen_scode+0x4a8>
    5a64:	add	r0, pc, #4
    5a68:	ldr	r1, [r0, r1, lsl #2]
    5a6c:	add	pc, r0, r1
    5a70:	.word	0x00000510
    5a74:	.word	0x000005c8
    5a78:	.word	0x000005c8
    5a7c:	.word	0x00000024
    5a80:	.word	0x00000450
    5a84:	.word	0x000005c8
    5a88:	.word	0x000005c8
    5a8c:	.word	0x000005c8
    5a90:	.word	0x00000510
    5a94:	mov	r0, r7
    5a98:	bl	c018 <pcap_ether_hostton>
    5a9c:	cmp	r0, #0
    5aa0:	beq	60c4 <sf_gen_scode+0x6e4>
    5aa4:	mov	r1, r6
    5aa8:	mov	r4, r0
    5aac:	bl	6e08 <gen_ipfchostop>
    5ab0:	b	5f9c <sf_gen_scode+0x5bc>
    5ab4:	mov	r0, r7
    5ab8:	bl	bbd0 <pcap_nametonetaddr>
    5abc:	cmp	r0, #0
    5ac0:	beq	5fe0 <sf_gen_scode+0x600>
    5ac4:	movw	r3, #65534	; 0xfffe
    5ac8:	sub	r2, r0, #1
    5acc:	mvn	r1, #0
    5ad0:	movt	r3, #255	; 0xff
    5ad4:	cmp	r2, r3
    5ad8:	bhi	5afc <sf_gen_scode+0x11c>
    5adc:	mvn	r2, #0
    5ae0:	mvn	r3, #-16777216	; 0xff000000
    5ae4:	mvn	r1, #0
    5ae8:	add	r7, r2, r0, lsl #8
    5aec:	lsl	r1, r1, #8
    5af0:	lsl	r0, r0, #8
    5af4:	cmp	r7, r3
    5af8:	bcc	5ae8 <sf_gen_scode+0x108>
    5afc:	mov	r2, r5
    5b00:	mov	r3, r6
    5b04:	str	r9, [sp]
    5b08:	bl	6164 <gen_host>
    5b0c:	b	5c40 <sf_gen_scode+0x260>
    5b10:	mvn	r1, #4
    5b14:	uxtb	r4, r0
    5b18:	uxtab	r1, r1, r0
    5b1c:	cmp	r1, #3
    5b20:	bcc	5b2c <sf_gen_scode+0x14c>
    5b24:	cmp	r4, #0
    5b28:	bne	5ff0 <sf_gen_scode+0x610>
    5b2c:	add	r1, sp, #24
    5b30:	add	r2, sp, #20
    5b34:	mov	r0, r7
    5b38:	bl	bbec <pcap_nametoport>
    5b3c:	cmp	r0, #0
    5b40:	beq	5ffc <sf_gen_scode+0x61c>
    5b44:	cmp	r4, #5
    5b48:	beq	5dcc <sf_gen_scode+0x3ec>
    5b4c:	cmp	r4, #6
    5b50:	beq	5db0 <sf_gen_scode+0x3d0>
    5b54:	cmp	r4, #7
    5b58:	bne	5e08 <sf_gen_scode+0x428>
    5b5c:	ldr	r0, [sp, #20]
    5b60:	cmp	r0, #132	; 0x84
    5b64:	beq	6044 <sf_gen_scode+0x664>
    5b68:	cmp	r0, #6
    5b6c:	beq	6054 <sf_gen_scode+0x674>
    5b70:	mov	r1, #17
    5b74:	b	5de4 <sf_gen_scode+0x404>
    5b78:	mov	r0, r7
    5b7c:	mov	r1, r5
    5b80:	bl	74fc <lookup_proto>
    5b84:	cmp	r0, #0
    5b88:	str	r0, [sp, #20]
    5b8c:	bmi	5fd0 <sf_gen_scode+0x5f0>
    5b90:	mov	r1, r5
    5b94:	bl	761c <gen_protochain>
    5b98:	b	5c40 <sf_gen_scode+0x260>
    5b9c:	mvn	r1, #4
    5ba0:	uxtb	r4, r0
    5ba4:	uxtab	r1, r1, r0
    5ba8:	cmp	r1, #3
    5bac:	bcc	5bb8 <sf_gen_scode+0x1d8>
    5bb0:	cmp	r4, #0
    5bb4:	bne	600c <sf_gen_scode+0x62c>
    5bb8:	add	r1, sp, #24
    5bbc:	add	r2, sp, #16
    5bc0:	add	r3, sp, #20
    5bc4:	mov	r0, r7
    5bc8:	bl	bc90 <pcap_nametoportrange>
    5bcc:	cmp	r0, #0
    5bd0:	beq	6018 <sf_gen_scode+0x638>
    5bd4:	cmp	r4, #5
    5bd8:	beq	5e30 <sf_gen_scode+0x450>
    5bdc:	cmp	r4, #6
    5be0:	beq	5dec <sf_gen_scode+0x40c>
    5be4:	cmp	r4, #7
    5be8:	bne	5e50 <sf_gen_scode+0x470>
    5bec:	ldr	r0, [sp, #20]
    5bf0:	cmp	r0, #132	; 0x84
    5bf4:	beq	6074 <sf_gen_scode+0x694>
    5bf8:	cmp	r0, #6
    5bfc:	beq	6084 <sf_gen_scode+0x6a4>
    5c00:	mov	r2, #17
    5c04:	b	5e48 <sf_gen_scode+0x468>
    5c08:	mov	r0, r7
    5c0c:	mov	r1, r5
    5c10:	bl	74fc <lookup_proto>
    5c14:	cmp	r0, #0
    5c18:	str	r0, [sp, #20]
    5c1c:	bmi	5fd0 <sf_gen_scode+0x5f0>
    5c20:	mov	r1, r5
    5c24:	mov	r2, r6
    5c28:	bl	3f38 <gen_proto>
    5c2c:	b	5c40 <sf_gen_scode+0x260>
    5c30:	mov	r0, r7
    5c34:	bl	c110 <__pcap_nametodnaddr>
    5c38:	mov	r1, r6
    5c3c:	bl	b5d4 <gen_dnhostop>
    5c40:	mov	r8, r0
    5c44:	b	5fa8 <sf_gen_scode+0x5c8>
    5c48:	mvn	r0, #0
    5c4c:	mov	r4, r6
    5c50:	str	r7, [sp, #8]
    5c54:	str	r0, [sp, #36]	; 0x24
    5c58:	str	r0, [sp, #32]
    5c5c:	str	r0, [sp, #28]
    5c60:	str	r0, [sp, #24]
    5c64:	mov	r0, r7
    5c68:	bl	bb70 <pcap_nametoaddrinfo>
    5c6c:	cmp	r0, #0
    5c70:	beq	6028 <sf_gen_scode+0x648>
    5c74:	ldr	r1, [pc, #1156]	; 6100 <sf_gen_scode+0x720>
    5c78:	mov	r6, r5
    5c7c:	mov	r8, #0
    5c80:	mov	sl, r0
    5c84:	add	r1, pc, r1
    5c88:	str	r0, [r1]
    5c8c:	ldr	r1, [pc, #1136]	; 6104 <sf_gen_scode+0x724>
    5c90:	ldr	r1, [pc, r1]
    5c94:	str	r5, [sp, #4]
    5c98:	str	r0, [sp, #12]
    5c9c:	mvn	r1, r1
    5ca0:	orrs	r1, r5, r1
    5ca4:	movweq	r6, #2
    5ca8:	movweq	r5, #17
    5cac:	ldr	r0, [sl, #4]
    5cb0:	cmp	r0, #10
    5cb4:	beq	5cec <sf_gen_scode+0x30c>
    5cb8:	cmp	r0, #2
    5cbc:	bne	5d28 <sf_gen_scode+0x348>
    5cc0:	cmp	r6, #17
    5cc4:	beq	5d28 <sf_gen_scode+0x348>
    5cc8:	ldr	r0, [sl, #20]
    5ccc:	mvn	r1, #0
    5cd0:	mov	r2, r6
    5cd4:	mov	r3, r4
    5cd8:	ldr	r0, [r0, #4]
    5cdc:	str	r9, [sp]
    5ce0:	rev	r0, r0
    5ce4:	bl	6164 <gen_host>
    5ce8:	b	5d10 <sf_gen_scode+0x330>
    5cec:	cmp	r5, #2
    5cf0:	beq	5d28 <sf_gen_scode+0x348>
    5cf4:	ldr	r0, [sl, #20]
    5cf8:	add	r1, sp, #24
    5cfc:	mov	r2, r5
    5d00:	mov	r3, r4
    5d04:	str	r9, [sp]
    5d08:	add	r0, r0, #8
    5d0c:	bl	6ee8 <gen_host6>
    5d10:	mov	r7, r0
    5d14:	cmp	r8, #0
    5d18:	movne	r0, r8
    5d1c:	movne	r1, r7
    5d20:	blne	3a3c <sf_gen_or>
    5d24:	mov	r8, r7
    5d28:	ldr	sl, [sl, #28]
    5d2c:	cmp	sl, #0
    5d30:	bne	5cac <sf_gen_scode+0x2cc>
    5d34:	ldr	r1, [pc, #972]	; 6108 <sf_gen_scode+0x728>
    5d38:	mov	r0, #0
    5d3c:	add	r1, pc, r1
    5d40:	str	r0, [r1]
    5d44:	ldr	r0, [sp, #12]
    5d48:	bl	f44 <freeaddrinfo@plt>
    5d4c:	cmp	r8, #0
    5d50:	bne	5fa8 <sf_gen_scode+0x5c8>
    5d54:	ldr	r0, [pc, #944]	; 610c <sf_gen_scode+0x72c>
    5d58:	ldr	r2, [pc, #944]	; 6110 <sf_gen_scode+0x730>
    5d5c:	ldr	r1, [sp, #4]
    5d60:	add	r0, pc, r0
    5d64:	cmp	r1, #0
    5d68:	add	r2, pc, r2
    5d6c:	moveq	r2, r0
    5d70:	ldr	r0, [pc, #924]	; 6114 <sf_gen_scode+0x734>
    5d74:	ldr	r1, [sp, #8]
    5d78:	add	r0, pc, r0
    5d7c:	bl	1f30 <sf_bpf_error>
    5d80:	cmp	r0, #9
    5d84:	bgt	5e98 <sf_gen_scode+0x4b8>
    5d88:	cmp	r0, #1
    5d8c:	bne	5f50 <sf_gen_scode+0x570>
    5d90:	mov	r0, r7
    5d94:	bl	c018 <pcap_ether_hostton>
    5d98:	cmp	r0, #0
    5d9c:	beq	60b4 <sf_gen_scode+0x6d4>
    5da0:	mov	r1, r6
    5da4:	mov	r4, r0
    5da8:	bl	6508 <gen_ehostop>
    5dac:	b	5f9c <sf_gen_scode+0x5bc>
    5db0:	ldr	r0, [sp, #20]
    5db4:	cmp	r0, #132	; 0x84
    5db8:	beq	6044 <sf_gen_scode+0x664>
    5dbc:	cmp	r0, #17
    5dc0:	beq	6064 <sf_gen_scode+0x684>
    5dc4:	mov	r1, #6
    5dc8:	b	5de4 <sf_gen_scode+0x404>
    5dcc:	ldr	r0, [sp, #20]
    5dd0:	cmp	r0, #6
    5dd4:	beq	6054 <sf_gen_scode+0x674>
    5dd8:	cmp	r0, #17
    5ddc:	beq	6064 <sf_gen_scode+0x684>
    5de0:	mov	r1, #132	; 0x84
    5de4:	str	r1, [sp, #20]
    5de8:	b	5e0c <sf_gen_scode+0x42c>
    5dec:	ldr	r0, [sp, #20]
    5df0:	cmp	r0, #132	; 0x84
    5df4:	beq	6074 <sf_gen_scode+0x694>
    5df8:	cmp	r0, #17
    5dfc:	beq	6094 <sf_gen_scode+0x6b4>
    5e00:	mov	r2, #6
    5e04:	b	5e48 <sf_gen_scode+0x468>
    5e08:	ldr	r1, [sp, #20]
    5e0c:	ldr	r0, [sp, #24]
    5e10:	mov	r2, r6
    5e14:	bl	71d4 <gen_port>
    5e18:	mov	r8, r0
    5e1c:	ldr	r0, [sp, #24]
    5e20:	ldr	r1, [sp, #20]
    5e24:	mov	r2, r6
    5e28:	bl	7294 <gen_port6>
    5e2c:	b	5e7c <sf_gen_scode+0x49c>
    5e30:	ldr	r0, [sp, #20]
    5e34:	cmp	r0, #6
    5e38:	beq	6084 <sf_gen_scode+0x6a4>
    5e3c:	cmp	r0, #17
    5e40:	beq	6094 <sf_gen_scode+0x6b4>
    5e44:	mov	r2, #132	; 0x84
    5e48:	str	r2, [sp, #20]
    5e4c:	b	5e54 <sf_gen_scode+0x474>
    5e50:	ldr	r2, [sp, #20]
    5e54:	ldr	r1, [sp, #16]
    5e58:	ldr	r0, [sp, #24]
    5e5c:	mov	r3, r6
    5e60:	bl	7354 <gen_portrange>
    5e64:	mov	r8, r0
    5e68:	ldr	r0, [sp, #24]
    5e6c:	ldr	r1, [sp, #16]
    5e70:	ldr	r2, [sp, #20]
    5e74:	mov	r3, r6
    5e78:	bl	7428 <gen_portrange6>
    5e7c:	mov	r1, r8
    5e80:	bl	3a3c <sf_gen_or>
    5e84:	b	5fa8 <sf_gen_scode+0x5c8>
    5e88:	cmp	r0, #163	; 0xa3
    5e8c:	cmpne	r0, #192	; 0xc0
    5e90:	beq	5f80 <sf_gen_scode+0x5a0>
    5e94:	b	6038 <sf_gen_scode+0x658>
    5e98:	cmp	r0, #10
    5e9c:	bne	5f78 <sf_gen_scode+0x598>
    5ea0:	mov	r0, r7
    5ea4:	bl	c018 <pcap_ether_hostton>
    5ea8:	cmp	r0, #0
    5eac:	beq	60d4 <sf_gen_scode+0x6f4>
    5eb0:	mov	r1, r6
    5eb4:	mov	r4, r0
    5eb8:	bl	6620 <gen_fhostop>
    5ebc:	b	5f9c <sf_gen_scode+0x5bc>
    5ec0:	ldr	r0, [pc, #564]	; 60fc <sf_gen_scode+0x71c>
    5ec4:	add	r0, pc, r0
    5ec8:	ldrb	r0, [r0]
    5ecc:	cmp	r0, #1
    5ed0:	bne	6038 <sf_gen_scode+0x658>
    5ed4:	mov	r0, #1
    5ed8:	mov	r1, #4
    5edc:	mov	r2, #8
    5ee0:	bl	98e8 <gen_load_a>
    5ee4:	mov	r5, r0
    5ee8:	mov	r0, #208	; 0xd0
    5eec:	bl	1fbc <newchunk>
    5ef0:	mov	r4, r0
    5ef4:	mov	r1, #65280	; 0xff00
    5ef8:	mov	r0, #21
    5efc:	str	r1, [r4, #20]
    5f00:	str	r5, [r4, #4]
    5f04:	str	r0, [r4, #8]
    5f08:	ldr	r0, [r4, #44]	; 0x2c
    5f0c:	clz	r0, r0
    5f10:	lsr	r0, r0, #5
    5f14:	str	r0, [r4, #44]	; 0x2c
    5f18:	mov	r0, r7
    5f1c:	str	r4, [r4, #96]	; 0x60
    5f20:	bl	c018 <pcap_ether_hostton>
    5f24:	cmp	r0, #0
    5f28:	beq	60b4 <sf_gen_scode+0x6d4>
    5f2c:	mov	r1, r6
    5f30:	mov	r5, r0
    5f34:	bl	6508 <gen_ehostop>
    5f38:	mov	r8, r0
    5f3c:	mov	r0, r4
    5f40:	mov	r1, r8
    5f44:	bl	3964 <sf_gen_and>
    5f48:	mov	r0, r5
    5f4c:	b	5fa4 <sf_gen_scode+0x5c4>
    5f50:	cmp	r0, #6
    5f54:	bne	6038 <sf_gen_scode+0x658>
    5f58:	mov	r0, r7
    5f5c:	bl	c018 <pcap_ether_hostton>
    5f60:	cmp	r0, #0
    5f64:	beq	60e4 <sf_gen_scode+0x704>
    5f68:	mov	r1, r6
    5f6c:	mov	r4, r0
    5f70:	bl	6700 <gen_thostop>
    5f74:	b	5f9c <sf_gen_scode+0x5bc>
    5f78:	cmp	r0, #105	; 0x69
    5f7c:	bne	6038 <sf_gen_scode+0x658>
    5f80:	mov	r0, r7
    5f84:	bl	c018 <pcap_ether_hostton>
    5f88:	cmp	r0, #0
    5f8c:	beq	60a4 <sf_gen_scode+0x6c4>
    5f90:	mov	r1, r6
    5f94:	mov	r4, r0
    5f98:	bl	67e0 <gen_wlanhostop>
    5f9c:	mov	r8, r0
    5fa0:	mov	r0, r4
    5fa4:	bl	e0c <free@plt>
    5fa8:	mov	r0, r8
    5fac:	sub	sp, fp, #28
    5fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5fb4:	cmp	r9, #255	; 0xff
    5fb8:	bne	5fcc <sf_gen_scode+0x5ec>
    5fbc:	bl	2db4 <syntax>
    5fc0:	ldr	r0, [pc, #352]	; 6128 <sf_gen_scode+0x748>
    5fc4:	add	r0, pc, r0
    5fc8:	bl	1f30 <sf_bpf_error>
    5fcc:	bl	f74 <abort@plt>
    5fd0:	ldr	r0, [pc, #340]	; 612c <sf_gen_scode+0x74c>
    5fd4:	mov	r1, r7
    5fd8:	add	r0, pc, r0
    5fdc:	bl	1f30 <sf_bpf_error>
    5fe0:	ldr	r0, [pc, #328]	; 6130 <sf_gen_scode+0x750>
    5fe4:	mov	r1, r7
    5fe8:	add	r0, pc, r0
    5fec:	bl	1f30 <sf_bpf_error>
    5ff0:	ldr	r0, [pc, #340]	; 614c <sf_gen_scode+0x76c>
    5ff4:	add	r0, pc, r0
    5ff8:	bl	1f30 <sf_bpf_error>
    5ffc:	ldr	r0, [pc, #332]	; 6150 <sf_gen_scode+0x770>
    6000:	mov	r1, r7
    6004:	add	r0, pc, r0
    6008:	bl	1f30 <sf_bpf_error>
    600c:	ldr	r0, [pc, #320]	; 6154 <sf_gen_scode+0x774>
    6010:	add	r0, pc, r0
    6014:	bl	1f30 <sf_bpf_error>
    6018:	ldr	r0, [pc, #312]	; 6158 <sf_gen_scode+0x778>
    601c:	mov	r1, r7
    6020:	add	r0, pc, r0
    6024:	bl	1f30 <sf_bpf_error>
    6028:	ldr	r0, [pc, #280]	; 6148 <sf_gen_scode+0x768>
    602c:	ldr	r1, [sp, #8]
    6030:	add	r0, pc, r0
    6034:	bl	1f30 <sf_bpf_error>
    6038:	ldr	r0, [pc, #184]	; 60f8 <sf_gen_scode+0x718>
    603c:	add	r0, pc, r0
    6040:	bl	1f30 <sf_bpf_error>
    6044:	ldr	r0, [pc, #208]	; 611c <sf_gen_scode+0x73c>
    6048:	mov	r1, r7
    604c:	add	r0, pc, r0
    6050:	bl	1f30 <sf_bpf_error>
    6054:	ldr	r0, [pc, #256]	; 615c <sf_gen_scode+0x77c>
    6058:	mov	r1, r7
    605c:	add	r0, pc, r0
    6060:	bl	1f30 <sf_bpf_error>
    6064:	ldr	r0, [pc, #172]	; 6118 <sf_gen_scode+0x738>
    6068:	mov	r1, r7
    606c:	add	r0, pc, r0
    6070:	bl	1f30 <sf_bpf_error>
    6074:	ldr	r0, [pc, #168]	; 6124 <sf_gen_scode+0x744>
    6078:	mov	r1, r7
    607c:	add	r0, pc, r0
    6080:	bl	1f30 <sf_bpf_error>
    6084:	ldr	r0, [pc, #212]	; 6160 <sf_gen_scode+0x780>
    6088:	mov	r1, r7
    608c:	add	r0, pc, r0
    6090:	bl	1f30 <sf_bpf_error>
    6094:	ldr	r0, [pc, #132]	; 6120 <sf_gen_scode+0x740>
    6098:	mov	r1, r7
    609c:	add	r0, pc, r0
    60a0:	bl	1f30 <sf_bpf_error>
    60a4:	ldr	r0, [pc, #148]	; 6140 <sf_gen_scode+0x760>
    60a8:	mov	r1, r7
    60ac:	add	r0, pc, r0
    60b0:	bl	1f30 <sf_bpf_error>
    60b4:	ldr	r0, [pc, #120]	; 6134 <sf_gen_scode+0x754>
    60b8:	mov	r1, r7
    60bc:	add	r0, pc, r0
    60c0:	bl	1f30 <sf_bpf_error>
    60c4:	ldr	r0, [pc, #120]	; 6144 <sf_gen_scode+0x764>
    60c8:	mov	r1, r7
    60cc:	add	r0, pc, r0
    60d0:	bl	1f30 <sf_bpf_error>
    60d4:	ldr	r0, [pc, #92]	; 6138 <sf_gen_scode+0x758>
    60d8:	mov	r1, r7
    60dc:	add	r0, pc, r0
    60e0:	bl	1f30 <sf_bpf_error>
    60e4:	ldr	r0, [pc, #80]	; 613c <sf_gen_scode+0x75c>
    60e8:	mov	r1, r7
    60ec:	add	r0, pc, r0
    60f0:	bl	1f30 <sf_bpf_error>
    60f4:	.word	0x0002a9e4
    60f8:	.word	0x0000c7b6
    60fc:	.word	0x0002a570
    6100:	.word	0x0002a7a0
    6104:	.word	0x0002a7a8
    6108:	.word	0x0002a6e8
    610c:	.word	0x0000c8f8
    6110:	.word	0x0000cb0a
    6114:	.word	0x0000cae6
    6118:	.word	0x0000c875
    611c:	.word	0x0000c883
    6120:	.word	0x0000c8c7
    6124:	.word	0x0000c8cc
    6128:	.word	0x0000c9b9
    612c:	.word	0x0000c9d3
    6130:	.word	0x0000c770
    6134:	.word	0x0000c6b1
    6138:	.word	0x0000c6a9
    613c:	.word	0x0000c6b0
    6140:	.word	0x0000c70d
    6144:	.word	0x0000c706
    6148:	.word	0x0000c81c
    614c:	.word	0x0000c89c
    6150:	.word	0x0000c8a8
    6154:	.word	0x0000c8e2
    6158:	.word	0x0000c8f3
    615c:	.word	0x0000c862
    6160:	.word	0x0000c8a2

00006164 <gen_host>:
    6164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6168:	add	fp, sp, #28
    616c:	sub	sp, sp, #12
    6170:	mov	r6, r0
    6174:	ldr	r0, [fp, #8]
    6178:	mov	r4, r3
    617c:	ldr	r3, [pc, #784]	; 6494 <gen_host+0x330>
    6180:	mov	r5, r1
    6184:	ldr	r1, [pc, #780]	; 6498 <gen_host+0x334>
    6188:	add	r3, pc, r3
    618c:	cmp	r0, #2
    6190:	add	r1, pc, r1
    6194:	moveq	r1, r3
    6198:	cmp	r2, #40	; 0x28
    619c:	bhi	6358 <gen_host+0x1f4>
    61a0:	add	r0, pc, #4
    61a4:	ldr	r2, [r0, r2, lsl #2]
    61a8:	add	pc, r0, r2
    61ac:	.word	0x000000a4
    61b0:	.word	0x000001ac
    61b4:	.word	0x00000158
    61b8:	.word	0x0000016c
    61bc:	.word	0x00000144
    61c0:	.word	0x00000294
    61c4:	.word	0x000002a0
    61c8:	.word	0x000002ac
    61cc:	.word	0x000002b8
    61d0:	.word	0x000002c4
    61d4:	.word	0x000002d0
    61d8:	.word	0x000002dc
    61dc:	.word	0x00000198
    61e0:	.word	0x000001b0
    61e4:	.word	0x000001bc
    61e8:	.word	0x000001c8
    61ec:	.word	0x000001d4
    61f0:	.word	0x000001e0
    61f4:	.word	0x000001ec
    61f8:	.word	0x000001f8
    61fc:	.word	0x00000204
    6200:	.word	0x00000210
    6204:	.word	0x0000021c
    6208:	.word	0x00000228
    620c:	.word	0x00000234
    6210:	.word	0x00000240
    6214:	.word	0x0000024c
    6218:	.word	0x00000258
    621c:	.word	0x00000264
    6220:	.word	0x00000270
    6224:	.word	0x0000027c
    6228:	.word	0x000001ac
    622c:	.word	0x000001ac
    6230:	.word	0x000001ac
    6234:	.word	0x000001ac
    6238:	.word	0x000001ac
    623c:	.word	0x000001ac
    6240:	.word	0x000001ac
    6244:	.word	0x000001ac
    6248:	.word	0x000001ac
    624c:	.word	0x00000288
    6250:	mov	r0, #16
    6254:	mov	r1, #12
    6258:	mov	r2, r4
    625c:	mov	r3, #2048	; 0x800
    6260:	str	r1, [sp]
    6264:	str	r0, [sp, #4]
    6268:	mov	r0, r6
    626c:	mov	r1, r5
    6270:	bl	b4b0 <gen_hostop>
    6274:	mov	r7, r0
    6278:	ldr	r0, [pc, #540]	; 649c <gen_host+0x338>
    627c:	ldr	r0, [pc, r0]
    6280:	cmp	r0, #0
    6284:	bne	62e8 <gen_host+0x184>
    6288:	mov	r9, #24
    628c:	mov	sl, #14
    6290:	mov	r0, r6
    6294:	mov	r1, r5
    6298:	mov	r2, r4
    629c:	movw	r3, #2054	; 0x806
    62a0:	str	sl, [sp]
    62a4:	str	r9, [sp, #4]
    62a8:	bl	b4b0 <gen_hostop>
    62ac:	mov	r8, r0
    62b0:	mov	r0, r7
    62b4:	mov	r1, r8
    62b8:	bl	3a3c <sf_gen_or>
    62bc:	mov	r0, r6
    62c0:	mov	r1, r5
    62c4:	mov	r2, r4
    62c8:	movw	r3, #32821	; 0x8035
    62cc:	str	sl, [sp]
    62d0:	str	r9, [sp, #4]
    62d4:	bl	b4b0 <gen_hostop>
    62d8:	mov	r7, r0
    62dc:	mov	r0, r8
    62e0:	mov	r1, r7
    62e4:	bl	3a3c <sf_gen_or>
    62e8:	mov	r0, r7
    62ec:	b	633c <gen_host+0x1d8>
    62f0:	mov	r0, #24
    62f4:	mov	r1, #14
    62f8:	mov	r2, r4
    62fc:	movw	r3, #32821	; 0x8035
    6300:	b	6328 <gen_host+0x1c4>
    6304:	mov	r0, #16
    6308:	mov	r1, #12
    630c:	mov	r2, r4
    6310:	mov	r3, #2048	; 0x800
    6314:	b	6328 <gen_host+0x1c4>
    6318:	mov	r0, #24
    631c:	mov	r1, #14
    6320:	mov	r2, r4
    6324:	movw	r3, #2054	; 0x806
    6328:	str	r1, [sp]
    632c:	str	r0, [sp, #4]
    6330:	mov	r0, r6
    6334:	mov	r1, r5
    6338:	bl	b4b0 <gen_hostop>
    633c:	sub	sp, fp, #28
    6340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6344:	mov	r0, r6
    6348:	mov	r1, r4
    634c:	sub	sp, fp, #28
    6350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6354:	b	b5d4 <gen_dnhostop>
    6358:	bl	f74 <abort@plt>
    635c:	ldr	r0, [pc, #360]	; 64cc <gen_host+0x368>
    6360:	add	r0, pc, r0
    6364:	bl	1f30 <sf_bpf_error>
    6368:	ldr	r0, [pc, #344]	; 64c8 <gen_host+0x364>
    636c:	add	r0, pc, r0
    6370:	bl	1f30 <sf_bpf_error>
    6374:	ldr	r0, [pc, #344]	; 64d4 <gen_host+0x370>
    6378:	add	r0, pc, r0
    637c:	bl	1f30 <sf_bpf_error>
    6380:	ldr	r0, [pc, #328]	; 64d0 <gen_host+0x36c>
    6384:	add	r0, pc, r0
    6388:	bl	1f30 <sf_bpf_error>
    638c:	ldr	r0, [pc, #324]	; 64d8 <gen_host+0x374>
    6390:	add	r0, pc, r0
    6394:	bl	1f30 <sf_bpf_error>
    6398:	ldr	r0, [pc, #316]	; 64dc <gen_host+0x378>
    639c:	add	r0, pc, r0
    63a0:	bl	1f30 <sf_bpf_error>
    63a4:	ldr	r0, [pc, #308]	; 64e0 <gen_host+0x37c>
    63a8:	add	r0, pc, r0
    63ac:	bl	1f30 <sf_bpf_error>
    63b0:	ldr	r0, [pc, #300]	; 64e4 <gen_host+0x380>
    63b4:	add	r0, pc, r0
    63b8:	bl	1f30 <sf_bpf_error>
    63bc:	ldr	r0, [pc, #244]	; 64b8 <gen_host+0x354>
    63c0:	add	r0, pc, r0
    63c4:	bl	1f30 <sf_bpf_error>
    63c8:	ldr	r0, [pc, #236]	; 64bc <gen_host+0x358>
    63cc:	add	r0, pc, r0
    63d0:	bl	1f30 <sf_bpf_error>
    63d4:	ldr	r0, [pc, #232]	; 64c4 <gen_host+0x360>
    63d8:	add	r0, pc, r0
    63dc:	bl	1f30 <sf_bpf_error>
    63e0:	ldr	r0, [pc, #256]	; 64e8 <gen_host+0x384>
    63e4:	add	r0, pc, r0
    63e8:	bl	1f30 <sf_bpf_error>
    63ec:	ldr	r0, [pc, #248]	; 64ec <gen_host+0x388>
    63f0:	add	r0, pc, r0
    63f4:	bl	1f30 <sf_bpf_error>
    63f8:	ldr	r0, [pc, #240]	; 64f0 <gen_host+0x38c>
    63fc:	add	r0, pc, r0
    6400:	bl	1f30 <sf_bpf_error>
    6404:	ldr	r0, [pc, #232]	; 64f4 <gen_host+0x390>
    6408:	add	r0, pc, r0
    640c:	bl	1f30 <sf_bpf_error>
    6410:	ldr	r0, [pc, #224]	; 64f8 <gen_host+0x394>
    6414:	add	r0, pc, r0
    6418:	bl	1f30 <sf_bpf_error>
    641c:	ldr	r0, [pc, #216]	; 64fc <gen_host+0x398>
    6420:	add	r0, pc, r0
    6424:	bl	1f30 <sf_bpf_error>
    6428:	ldr	r0, [pc, #208]	; 6500 <gen_host+0x39c>
    642c:	add	r0, pc, r0
    6430:	bl	1f30 <sf_bpf_error>
    6434:	ldr	r0, [pc, #200]	; 6504 <gen_host+0x3a0>
    6438:	add	r0, pc, r0
    643c:	bl	1f30 <sf_bpf_error>
    6440:	ldr	r0, [pc, #92]	; 64a4 <gen_host+0x340>
    6444:	add	r0, pc, r0
    6448:	bl	1f30 <sf_bpf_error>
    644c:	ldr	r0, [pc, #76]	; 64a0 <gen_host+0x33c>
    6450:	add	r0, pc, r0
    6454:	bl	1f30 <sf_bpf_error>
    6458:	ldr	r0, [pc, #72]	; 64a8 <gen_host+0x344>
    645c:	add	r0, pc, r0
    6460:	bl	1f30 <sf_bpf_error>
    6464:	ldr	r0, [pc, #64]	; 64ac <gen_host+0x348>
    6468:	add	r0, pc, r0
    646c:	bl	1f30 <sf_bpf_error>
    6470:	ldr	r0, [pc, #56]	; 64b0 <gen_host+0x34c>
    6474:	add	r0, pc, r0
    6478:	bl	1f30 <sf_bpf_error>
    647c:	ldr	r0, [pc, #48]	; 64b4 <gen_host+0x350>
    6480:	add	r0, pc, r0
    6484:	bl	1f30 <sf_bpf_error>
    6488:	ldr	r0, [pc, #48]	; 64c0 <gen_host+0x35c>
    648c:	add	r0, pc, r0
    6490:	bl	1f30 <sf_bpf_error>
    6494:	.word	0x0000ccb0
    6498:	.word	0x0000d81e
    649c:	.word	0x00029e58
    64a0:	.word	0x0000d37b
    64a4:	.word	0x0000d3a4
    64a8:	.word	0x0000d3aa
    64ac:	.word	0x0000d3bb
    64b0:	.word	0x0000d3cd
    64b4:	.word	0x0000d3df
    64b8:	.word	0x0000d4bd
    64bc:	.word	0x0000d4ce
    64c0:	.word	0x0000d42c
    64c4:	.word	0x0000d505
    64c8:	.word	0x0000d595
    64cc:	.word	0x0000d5c4
    64d0:	.word	0x0000d5c3
    64d4:	.word	0x0000d5f4
    64d8:	.word	0x0000d601
    64dc:	.word	0x0000d617
    64e0:	.word	0x0000d62a
    64e4:	.word	0x0000d63a
    64e8:	.word	0x0000d627
    64ec:	.word	0x0000d63e
    64f0:	.word	0x0000d650
    64f4:	.word	0x0000d662
    64f8:	.word	0x0000d674
    64fc:	.word	0x0000d685
    6500:	.word	0x0000d69c
    6504:	.word	0x0000d6b1

00006508 <gen_ehostop>:
    6508:	push	{r4, r5, fp, lr}
    650c:	add	fp, sp, #8
    6510:	cmp	r1, #4
    6514:	bhi	6604 <gen_ehostop+0xfc>
    6518:	mov	r4, r0
    651c:	add	r0, pc, #4
    6520:	ldr	r1, [r0, r1, lsl #2]
    6524:	add	pc, r0, r1
    6528:	.word	0x00000014
    652c:	.word	0x000000b0
    6530:	.word	0x000000c0
    6534:	.word	0x00000014
    6538:	.word	0x00000060
    653c:	ldr	r0, [pc, #204]	; 6610 <gen_ehostop+0x108>
    6540:	mov	r2, #6
    6544:	mov	r3, r4
    6548:	ldr	r0, [pc, r0]
    654c:	add	r1, r0, #6
    6550:	mov	r0, #1
    6554:	bl	b330 <gen_bcmp>
    6558:	ldr	r1, [pc, #180]	; 6614 <gen_ehostop+0x10c>
    655c:	mov	r5, r0
    6560:	mov	r0, #1
    6564:	mov	r2, #6
    6568:	mov	r3, r4
    656c:	ldr	r1, [pc, r1]
    6570:	bl	b330 <gen_bcmp>
    6574:	mov	r4, r0
    6578:	mov	r0, r5
    657c:	mov	r1, r4
    6580:	bl	3a3c <sf_gen_or>
    6584:	b	65d0 <gen_ehostop+0xc8>
    6588:	ldr	r0, [pc, #136]	; 6618 <gen_ehostop+0x110>
    658c:	mov	r2, #6
    6590:	mov	r3, r4
    6594:	ldr	r0, [pc, r0]
    6598:	add	r1, r0, #6
    659c:	mov	r0, #1
    65a0:	bl	b330 <gen_bcmp>
    65a4:	ldr	r1, [pc, #112]	; 661c <gen_ehostop+0x114>
    65a8:	mov	r5, r0
    65ac:	mov	r0, #1
    65b0:	mov	r2, #6
    65b4:	mov	r3, r4
    65b8:	ldr	r1, [pc, r1]
    65bc:	bl	b330 <gen_bcmp>
    65c0:	mov	r4, r0
    65c4:	mov	r0, r5
    65c8:	mov	r1, r4
    65cc:	bl	3964 <sf_gen_and>
    65d0:	mov	r0, r4
    65d4:	pop	{r4, r5, fp, pc}
    65d8:	ldr	r0, [pc, #40]	; 6608 <gen_ehostop+0x100>
    65dc:	ldr	r0, [pc, r0]
    65e0:	add	r1, r0, #6
    65e4:	b	65f0 <gen_ehostop+0xe8>
    65e8:	ldr	r1, [pc, #28]	; 660c <gen_ehostop+0x104>
    65ec:	ldr	r1, [pc, r1]
    65f0:	mov	r0, #1
    65f4:	mov	r2, #6
    65f8:	mov	r3, r4
    65fc:	pop	{r4, r5, fp, lr}
    6600:	b	b330 <gen_bcmp>
    6604:	bl	f74 <abort@plt>
    6608:	.word	0x00029e6c
    660c:	.word	0x00029e5c
    6610:	.word	0x00029f00
    6614:	.word	0x00029edc
    6618:	.word	0x00029eb4
    661c:	.word	0x00029e90

00006620 <gen_fhostop>:
    6620:	push	{r4, r5, fp, lr}
    6624:	add	fp, sp, #8
    6628:	cmp	r1, #4
    662c:	bhi	66fc <gen_fhostop+0xdc>
    6630:	mov	r4, r0
    6634:	add	r0, pc, #4
    6638:	ldr	r1, [r0, r1, lsl #2]
    663c:	add	pc, r0, r1
    6640:	.word	0x00000014
    6644:	.word	0x00000098
    6648:	.word	0x000000a4
    664c:	.word	0x00000014
    6650:	.word	0x00000054
    6654:	mov	r0, #1
    6658:	mov	r1, #7
    665c:	mov	r2, #6
    6660:	mov	r3, r4
    6664:	bl	b330 <gen_bcmp>
    6668:	mov	r5, r0
    666c:	mov	r0, #1
    6670:	mov	r1, #1
    6674:	mov	r2, #6
    6678:	mov	r3, r4
    667c:	bl	b330 <gen_bcmp>
    6680:	mov	r4, r0
    6684:	mov	r0, r5
    6688:	mov	r1, r4
    668c:	bl	3a3c <sf_gen_or>
    6690:	b	66d0 <gen_fhostop+0xb0>
    6694:	mov	r0, #1
    6698:	mov	r1, #7
    669c:	mov	r2, #6
    66a0:	mov	r3, r4
    66a4:	bl	b330 <gen_bcmp>
    66a8:	mov	r5, r0
    66ac:	mov	r0, #1
    66b0:	mov	r1, #1
    66b4:	mov	r2, #6
    66b8:	mov	r3, r4
    66bc:	bl	b330 <gen_bcmp>
    66c0:	mov	r4, r0
    66c4:	mov	r0, r5
    66c8:	mov	r1, r4
    66cc:	bl	3964 <sf_gen_and>
    66d0:	mov	r0, r4
    66d4:	pop	{r4, r5, fp, pc}
    66d8:	mov	r0, #1
    66dc:	mov	r1, #7
    66e0:	b	66ec <gen_fhostop+0xcc>
    66e4:	mov	r0, #1
    66e8:	mov	r1, #1
    66ec:	mov	r2, #6
    66f0:	mov	r3, r4
    66f4:	pop	{r4, r5, fp, lr}
    66f8:	b	b330 <gen_bcmp>
    66fc:	bl	f74 <abort@plt>

00006700 <gen_thostop>:
    6700:	push	{r4, r5, fp, lr}
    6704:	add	fp, sp, #8
    6708:	cmp	r1, #4
    670c:	bhi	67dc <gen_thostop+0xdc>
    6710:	mov	r4, r0
    6714:	add	r0, pc, #4
    6718:	ldr	r1, [r0, r1, lsl #2]
    671c:	add	pc, r0, r1
    6720:	.word	0x00000014
    6724:	.word	0x00000098
    6728:	.word	0x000000a4
    672c:	.word	0x00000014
    6730:	.word	0x00000054
    6734:	mov	r0, #1
    6738:	mov	r1, #8
    673c:	mov	r2, #6
    6740:	mov	r3, r4
    6744:	bl	b330 <gen_bcmp>
    6748:	mov	r5, r0
    674c:	mov	r0, #1
    6750:	mov	r1, #2
    6754:	mov	r2, #6
    6758:	mov	r3, r4
    675c:	bl	b330 <gen_bcmp>
    6760:	mov	r4, r0
    6764:	mov	r0, r5
    6768:	mov	r1, r4
    676c:	bl	3a3c <sf_gen_or>
    6770:	b	67b0 <gen_thostop+0xb0>
    6774:	mov	r0, #1
    6778:	mov	r1, #8
    677c:	mov	r2, #6
    6780:	mov	r3, r4
    6784:	bl	b330 <gen_bcmp>
    6788:	mov	r5, r0
    678c:	mov	r0, #1
    6790:	mov	r1, #2
    6794:	mov	r2, #6
    6798:	mov	r3, r4
    679c:	bl	b330 <gen_bcmp>
    67a0:	mov	r4, r0
    67a4:	mov	r0, r5
    67a8:	mov	r1, r4
    67ac:	bl	3964 <sf_gen_and>
    67b0:	mov	r0, r4
    67b4:	pop	{r4, r5, fp, pc}
    67b8:	mov	r0, #1
    67bc:	mov	r1, #8
    67c0:	b	67cc <gen_thostop+0xcc>
    67c4:	mov	r0, #1
    67c8:	mov	r1, #2
    67cc:	mov	r2, #6
    67d0:	mov	r3, r4
    67d4:	pop	{r4, r5, fp, lr}
    67d8:	b	b330 <gen_bcmp>
    67dc:	bl	f74 <abort@plt>

000067e0 <gen_wlanhostop>:
    67e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67e4:	add	fp, sp, #28
    67e8:	sub	sp, sp, #12
    67ec:	cmp	r1, #8
    67f0:	bhi	6e04 <gen_wlanhostop+0x624>
    67f4:	mov	r4, r0
    67f8:	add	r0, pc, #4
    67fc:	ldr	r1, [r0, r1, lsl #2]
    6800:	add	pc, r0, r1
    6804:	.word	0x00000024
    6808:	.word	0x00000088
    680c:	.word	0x000002b4
    6810:	.word	0x00000024
    6814:	.word	0x00000054
    6818:	.word	0x000004a8
    681c:	.word	0x000004c4
    6820:	.word	0x0000045c
    6824:	.word	0x000005a0
    6828:	mov	r0, r4
    682c:	mov	r1, #1
    6830:	bl	67e0 <gen_wlanhostop>
    6834:	mov	r5, r0
    6838:	mov	r0, r4
    683c:	mov	r1, #2
    6840:	bl	67e0 <gen_wlanhostop>
    6844:	mov	r4, r0
    6848:	mov	r0, r5
    684c:	mov	r1, r4
    6850:	bl	3a3c <sf_gen_or>
    6854:	b	6884 <gen_wlanhostop+0xa4>
    6858:	mov	r0, r4
    685c:	mov	r1, #1
    6860:	bl	67e0 <gen_wlanhostop>
    6864:	mov	r5, r0
    6868:	mov	r0, r4
    686c:	mov	r1, #2
    6870:	bl	67e0 <gen_wlanhostop>
    6874:	mov	r4, r0
    6878:	mov	r0, r5
    687c:	mov	r1, r4
    6880:	bl	3964 <sf_gen_and>
    6884:	mov	r0, r4
    6888:	b	6dfc <gen_wlanhostop+0x61c>
    688c:	mov	r0, #1
    6890:	mov	r1, #1
    6894:	mov	r2, #16
    6898:	mov	r9, #1
    689c:	bl	98e8 <gen_load_a>
    68a0:	mov	r5, r0
    68a4:	mov	r0, #208	; 0xd0
    68a8:	bl	1fbc <newchunk>
    68ac:	mov	r6, r0
    68b0:	mov	r8, #69	; 0x45
    68b4:	str	r9, [r0, #20]
    68b8:	stmib	r0, {r5, r8}
    68bc:	str	r0, [r0, #96]	; 0x60
    68c0:	mov	r0, #1
    68c4:	mov	r1, #24
    68c8:	mov	r2, #6
    68cc:	mov	r3, r4
    68d0:	bl	b330 <gen_bcmp>
    68d4:	mov	r5, r0
    68d8:	mov	r0, r6
    68dc:	mov	r1, r5
    68e0:	bl	3964 <sf_gen_and>
    68e4:	mov	r0, #1
    68e8:	mov	r1, #1
    68ec:	mov	r2, #16
    68f0:	bl	98e8 <gen_load_a>
    68f4:	mov	r6, r0
    68f8:	mov	r0, #208	; 0xd0
    68fc:	bl	1fbc <newchunk>
    6900:	mov	r7, r0
    6904:	ldr	r0, [r0, #44]	; 0x2c
    6908:	mov	r1, #16
    690c:	mov	r2, #6
    6910:	mov	r3, r4
    6914:	clz	r0, r0
    6918:	lsr	r0, r0, #5
    691c:	str	r0, [r7, #44]	; 0x2c
    6920:	mov	r0, #1
    6924:	stmib	r7, {r6, r8}
    6928:	str	r9, [r7, #20]
    692c:	str	r7, [r7, #96]	; 0x60
    6930:	bl	b330 <gen_bcmp>
    6934:	mov	r6, r0
    6938:	mov	r0, r7
    693c:	mov	r1, r6
    6940:	bl	3964 <sf_gen_and>
    6944:	mov	r0, r6
    6948:	mov	r1, r5
    694c:	bl	3a3c <sf_gen_or>
    6950:	mov	r0, #1
    6954:	mov	r1, #1
    6958:	mov	r2, #16
    695c:	bl	98e8 <gen_load_a>
    6960:	mov	r6, r0
    6964:	mov	r0, #208	; 0xd0
    6968:	bl	1fbc <newchunk>
    696c:	mov	r1, r5
    6970:	mov	r9, #2
    6974:	stmib	r0, {r6, r8}
    6978:	str	r9, [r0, #20]
    697c:	str	r0, [r0, #96]	; 0x60
    6980:	bl	3964 <sf_gen_and>
    6984:	mov	r0, #1
    6988:	mov	r1, #1
    698c:	mov	r2, #16
    6990:	bl	98e8 <gen_load_a>
    6994:	mov	r6, r0
    6998:	mov	r0, #208	; 0xd0
    699c:	bl	1fbc <newchunk>
    69a0:	str	r9, [r0, #20]
    69a4:	mov	r7, r0
    69a8:	mov	r1, #10
    69ac:	mov	r2, #6
    69b0:	mov	r3, r4
    69b4:	ldr	r0, [r0, #44]	; 0x2c
    69b8:	clz	r0, r0
    69bc:	lsr	r0, r0, #5
    69c0:	str	r0, [r7, #44]	; 0x2c
    69c4:	mov	r0, #1
    69c8:	stmib	r7, {r6, r8}
    69cc:	str	r7, [r7, #96]	; 0x60
    69d0:	bl	b330 <gen_bcmp>
    69d4:	mov	r6, r0
    69d8:	mov	r0, r7
    69dc:	mov	r1, r6
    69e0:	bl	3964 <sf_gen_and>
    69e4:	mov	r0, r6
    69e8:	mov	r1, r5
    69ec:	bl	3a3c <sf_gen_or>
    69f0:	mov	r0, #1
    69f4:	mov	r1, #0
    69f8:	mov	r2, #16
    69fc:	bl	98e8 <gen_load_a>
    6a00:	mov	r6, r0
    6a04:	mov	r0, #208	; 0xd0
    6a08:	bl	1fbc <newchunk>
    6a0c:	mov	r1, r5
    6a10:	mov	r9, #8
    6a14:	stmib	r0, {r6, r8}
    6a18:	str	r9, [r0, #20]
    6a1c:	str	r0, [r0, #96]	; 0x60
    6a20:	bl	3964 <sf_gen_and>
    6a24:	mov	r0, #1
    6a28:	mov	r1, #0
    6a2c:	mov	r2, #16
    6a30:	bl	98e8 <gen_load_a>
    6a34:	mov	r6, r0
    6a38:	mov	r0, #208	; 0xd0
    6a3c:	bl	1fbc <newchunk>
    6a40:	str	r9, [r0, #20]
    6a44:	mov	r7, r0
    6a48:	mov	r1, #10
    6a4c:	mov	r2, #6
    6a50:	mov	r3, r4
    6a54:	ldr	r0, [r0, #44]	; 0x2c
    6a58:	clz	r0, r0
    6a5c:	lsr	r0, r0, #5
    6a60:	str	r0, [r7, #44]	; 0x2c
    6a64:	mov	r0, #1
    6a68:	stmib	r7, {r6, r8}
    6a6c:	str	r7, [r7, #96]	; 0x60
    6a70:	bl	b330 <gen_bcmp>
    6a74:	mov	r4, r0
    6a78:	mov	r0, r7
    6a7c:	mov	r1, r4
    6a80:	bl	3964 <sf_gen_and>
    6a84:	mov	r0, r4
    6a88:	mov	r1, r5
    6a8c:	bl	3a3c <sf_gen_or>
    6a90:	mov	r0, #1
    6a94:	mov	r1, #0
    6a98:	mov	r2, #16
    6a9c:	bl	98e8 <gen_load_a>
    6aa0:	mov	r4, r0
    6aa4:	mov	r0, #208	; 0xd0
    6aa8:	bl	1fbc <newchunk>
    6aac:	mov	r1, #4
    6ab0:	str	r1, [r0, #20]
    6ab4:	b	6c40 <gen_wlanhostop+0x460>
    6ab8:	mov	r0, #1
    6abc:	mov	r1, #1
    6ac0:	mov	r2, #16
    6ac4:	mov	r9, #1
    6ac8:	bl	98e8 <gen_load_a>
    6acc:	mov	r5, r0
    6ad0:	mov	r0, #208	; 0xd0
    6ad4:	bl	1fbc <newchunk>
    6ad8:	mov	r6, r0
    6adc:	mov	r8, #69	; 0x45
    6ae0:	str	r9, [r0, #20]
    6ae4:	stmib	r0, {r5, r8}
    6ae8:	str	r0, [r0, #96]	; 0x60
    6aec:	mov	r0, #1
    6af0:	mov	r1, #16
    6af4:	mov	r2, #6
    6af8:	mov	r3, r4
    6afc:	bl	b330 <gen_bcmp>
    6b00:	mov	r5, r0
    6b04:	mov	r0, r6
    6b08:	mov	r1, r5
    6b0c:	bl	3964 <sf_gen_and>
    6b10:	mov	r0, #1
    6b14:	mov	r1, #1
    6b18:	mov	r2, #16
    6b1c:	bl	98e8 <gen_load_a>
    6b20:	mov	r6, r0
    6b24:	mov	r0, #208	; 0xd0
    6b28:	bl	1fbc <newchunk>
    6b2c:	mov	r7, r0
    6b30:	ldr	r0, [r0, #44]	; 0x2c
    6b34:	mov	r1, #4
    6b38:	mov	r2, #6
    6b3c:	mov	r3, r4
    6b40:	clz	r0, r0
    6b44:	lsr	r0, r0, #5
    6b48:	str	r0, [r7, #44]	; 0x2c
    6b4c:	mov	r0, #1
    6b50:	stmib	r7, {r6, r8}
    6b54:	str	r9, [r7, #20]
    6b58:	str	r7, [r7, #96]	; 0x60
    6b5c:	mov	r9, #4
    6b60:	bl	b330 <gen_bcmp>
    6b64:	mov	r6, r0
    6b68:	mov	r0, r7
    6b6c:	mov	r1, r6
    6b70:	bl	3964 <sf_gen_and>
    6b74:	mov	r0, r6
    6b78:	mov	r1, r5
    6b7c:	bl	3a3c <sf_gen_or>
    6b80:	mov	r0, #1
    6b84:	mov	r1, #0
    6b88:	mov	r2, #16
    6b8c:	bl	98e8 <gen_load_a>
    6b90:	mov	r6, r0
    6b94:	mov	r0, #208	; 0xd0
    6b98:	bl	1fbc <newchunk>
    6b9c:	mov	r1, r5
    6ba0:	mov	sl, #8
    6ba4:	stmib	r0, {r6, r8}
    6ba8:	str	sl, [r0, #20]
    6bac:	str	r0, [r0, #96]	; 0x60
    6bb0:	bl	3964 <sf_gen_and>
    6bb4:	mov	r0, #1
    6bb8:	mov	r1, #0
    6bbc:	mov	r2, #16
    6bc0:	bl	98e8 <gen_load_a>
    6bc4:	mov	r6, r0
    6bc8:	mov	r0, #208	; 0xd0
    6bcc:	bl	1fbc <newchunk>
    6bd0:	str	sl, [r0, #20]
    6bd4:	mov	r7, r0
    6bd8:	mov	r1, #4
    6bdc:	mov	r2, #6
    6be0:	mov	r3, r4
    6be4:	ldr	r0, [r0, #44]	; 0x2c
    6be8:	clz	r0, r0
    6bec:	lsr	r0, r0, #5
    6bf0:	str	r0, [r7, #44]	; 0x2c
    6bf4:	mov	r0, #1
    6bf8:	stmib	r7, {r6, r8}
    6bfc:	str	r7, [r7, #96]	; 0x60
    6c00:	bl	b330 <gen_bcmp>
    6c04:	mov	r4, r0
    6c08:	mov	r0, r7
    6c0c:	mov	r1, r4
    6c10:	bl	3964 <sf_gen_and>
    6c14:	mov	r0, r4
    6c18:	mov	r1, r5
    6c1c:	bl	3a3c <sf_gen_or>
    6c20:	mov	r0, #1
    6c24:	mov	r1, #0
    6c28:	mov	r2, #16
    6c2c:	bl	98e8 <gen_load_a>
    6c30:	mov	r4, r0
    6c34:	mov	r0, #208	; 0xd0
    6c38:	bl	1fbc <newchunk>
    6c3c:	str	r9, [r0, #20]
    6c40:	str	r4, [r0, #4]
    6c44:	str	r8, [r0, #8]
    6c48:	ldr	r1, [r0, #44]	; 0x2c
    6c4c:	clz	r1, r1
    6c50:	lsr	r1, r1, #5
    6c54:	str	r1, [r0, #44]	; 0x2c
    6c58:	str	r0, [r0, #96]	; 0x60
    6c5c:	b	6df0 <gen_wlanhostop+0x610>
    6c60:	mov	r0, #4
    6c64:	mov	r1, #0
    6c68:	mov	r2, #16
    6c6c:	mov	r3, #12
    6c70:	str	r2, [sp]
    6c74:	str	r1, [sp, #4]
    6c78:	str	r0, [sp, #8]
    6c7c:	mov	r0, #1
    6c80:	mov	r1, #0
    6c84:	mov	r2, #16
    6c88:	bl	a38c <gen_ncmp>
    6c8c:	mov	r6, r0
    6c90:	ldr	r0, [r0, #44]	; 0x2c
    6c94:	mov	r1, #16
    6c98:	clz	r0, r0
    6c9c:	lsr	r0, r0, #5
    6ca0:	str	r0, [r6, #44]	; 0x2c
    6ca4:	mov	r0, #1
    6ca8:	b	6ddc <gen_wlanhostop+0x5fc>
    6cac:	mov	r0, #1
    6cb0:	mov	r1, #4
    6cb4:	mov	r2, #6
    6cb8:	mov	r3, r4
    6cbc:	sub	sp, fp, #28
    6cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6cc4:	b	b330 <gen_bcmp>
    6cc8:	mov	r0, #4
    6ccc:	mov	r7, #16
    6cd0:	mov	r8, #0
    6cd4:	mov	r1, #0
    6cd8:	mov	r2, #16
    6cdc:	mov	r3, #12
    6ce0:	stm	sp, {r7, r8}
    6ce4:	str	r0, [sp, #8]
    6ce8:	mov	r0, #1
    6cec:	bl	a38c <gen_ncmp>
    6cf0:	mov	r5, r0
    6cf4:	ldr	r0, [r0, #44]	; 0x2c
    6cf8:	mov	r1, #0
    6cfc:	mov	r2, #16
    6d00:	mov	r3, #240	; 0xf0
    6d04:	clz	r0, r0
    6d08:	lsr	r0, r0, #5
    6d0c:	str	r0, [r5, #44]	; 0x2c
    6d10:	mov	r0, #192	; 0xc0
    6d14:	stm	sp, {r7, r8}
    6d18:	str	r0, [sp, #8]
    6d1c:	mov	r0, #1
    6d20:	bl	a38c <gen_ncmp>
    6d24:	mov	r6, r0
    6d28:	ldr	r0, [r0, #44]	; 0x2c
    6d2c:	mov	r1, #0
    6d30:	mov	r2, #16
    6d34:	mov	r3, #240	; 0xf0
    6d38:	clz	r0, r0
    6d3c:	lsr	r0, r0, #5
    6d40:	str	r0, [r6, #44]	; 0x2c
    6d44:	mov	r0, #208	; 0xd0
    6d48:	stm	sp, {r7, r8}
    6d4c:	str	r0, [sp, #8]
    6d50:	mov	r0, #1
    6d54:	bl	a38c <gen_ncmp>
    6d58:	mov	r7, r0
    6d5c:	ldr	r0, [r0, #44]	; 0x2c
    6d60:	mov	r1, r7
    6d64:	clz	r0, r0
    6d68:	lsr	r0, r0, #5
    6d6c:	str	r0, [r7, #44]	; 0x2c
    6d70:	mov	r0, r6
    6d74:	bl	3964 <sf_gen_and>
    6d78:	mov	r0, r5
    6d7c:	mov	r1, r7
    6d80:	bl	3a3c <sf_gen_or>
    6d84:	mov	r0, #1
    6d88:	mov	r1, #10
    6d8c:	mov	r2, #6
    6d90:	mov	r3, r4
    6d94:	bl	b330 <gen_bcmp>
    6d98:	mov	r5, r0
    6d9c:	mov	r0, r7
    6da0:	b	6df0 <gen_wlanhostop+0x610>
    6da4:	mov	r0, #3
    6da8:	mov	r1, #0
    6dac:	mov	r2, #16
    6db0:	mov	r3, #3
    6db4:	str	r2, [sp]
    6db8:	str	r1, [sp, #4]
    6dbc:	str	r0, [sp, #8]
    6dc0:	mov	r0, #1
    6dc4:	mov	r1, #1
    6dc8:	mov	r2, #16
    6dcc:	bl	a38c <gen_ncmp>
    6dd0:	mov	r6, r0
    6dd4:	mov	r0, #1
    6dd8:	mov	r1, #24
    6ddc:	mov	r2, #6
    6de0:	mov	r3, r4
    6de4:	bl	b330 <gen_bcmp>
    6de8:	mov	r5, r0
    6dec:	mov	r0, r6
    6df0:	mov	r1, r5
    6df4:	bl	3964 <sf_gen_and>
    6df8:	mov	r0, r5
    6dfc:	sub	sp, fp, #28
    6e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6e04:	bl	f74 <abort@plt>

00006e08 <gen_ipfchostop>:
    6e08:	push	{r4, r5, fp, lr}
    6e0c:	add	fp, sp, #8
    6e10:	cmp	r1, #4
    6e14:	bhi	6ee4 <gen_ipfchostop+0xdc>
    6e18:	mov	r4, r0
    6e1c:	add	r0, pc, #4
    6e20:	ldr	r1, [r0, r1, lsl #2]
    6e24:	add	pc, r0, r1
    6e28:	.word	0x00000014
    6e2c:	.word	0x00000098
    6e30:	.word	0x000000a4
    6e34:	.word	0x00000014
    6e38:	.word	0x00000054
    6e3c:	mov	r0, #1
    6e40:	mov	r1, #10
    6e44:	mov	r2, #6
    6e48:	mov	r3, r4
    6e4c:	bl	b330 <gen_bcmp>
    6e50:	mov	r5, r0
    6e54:	mov	r0, #1
    6e58:	mov	r1, #2
    6e5c:	mov	r2, #6
    6e60:	mov	r3, r4
    6e64:	bl	b330 <gen_bcmp>
    6e68:	mov	r4, r0
    6e6c:	mov	r0, r5
    6e70:	mov	r1, r4
    6e74:	bl	3a3c <sf_gen_or>
    6e78:	b	6eb8 <gen_ipfchostop+0xb0>
    6e7c:	mov	r0, #1
    6e80:	mov	r1, #10
    6e84:	mov	r2, #6
    6e88:	mov	r3, r4
    6e8c:	bl	b330 <gen_bcmp>
    6e90:	mov	r5, r0
    6e94:	mov	r0, #1
    6e98:	mov	r1, #2
    6e9c:	mov	r2, #6
    6ea0:	mov	r3, r4
    6ea4:	bl	b330 <gen_bcmp>
    6ea8:	mov	r4, r0
    6eac:	mov	r0, r5
    6eb0:	mov	r1, r4
    6eb4:	bl	3964 <sf_gen_and>
    6eb8:	mov	r0, r4
    6ebc:	pop	{r4, r5, fp, pc}
    6ec0:	mov	r0, #1
    6ec4:	mov	r1, #10
    6ec8:	b	6ed4 <gen_ipfchostop+0xcc>
    6ecc:	mov	r0, #1
    6ed0:	mov	r1, #2
    6ed4:	mov	r2, #6
    6ed8:	mov	r3, r4
    6edc:	pop	{r4, r5, fp, lr}
    6ee0:	b	b330 <gen_bcmp>
    6ee4:	bl	f74 <abort@plt>

00006ee8 <gen_host6>:
    6ee8:	push	{r4, sl, fp, lr}
    6eec:	add	fp, sp, #8
    6ef0:	sub	sp, sp, #8
    6ef4:	ldr	r4, [pc, #604]	; 7158 <gen_host6+0x270>
    6ef8:	mov	ip, r3
    6efc:	ldr	r3, [fp, #8]
    6f00:	mov	lr, r1
    6f04:	ldr	r1, [pc, #592]	; 715c <gen_host6+0x274>
    6f08:	add	r4, pc, r4
    6f0c:	cmp	r3, #2
    6f10:	add	r1, pc, r1
    6f14:	moveq	r1, r4
    6f18:	cmp	r2, #40	; 0x28
    6f1c:	bhi	6ff8 <gen_host6+0x110>
    6f20:	add	r3, pc, #4
    6f24:	ldr	r2, [r3, r2, lsl #2]
    6f28:	add	pc, r3, r2
    6f2c:	.word	0x000000a4
    6f30:	.word	0x000000cc
    6f34:	.word	0x000000d0
    6f38:	.word	0x000000dc
    6f3c:	.word	0x000000e8
    6f40:	.word	0x000000f4
    6f44:	.word	0x00000100
    6f48:	.word	0x0000010c
    6f4c:	.word	0x00000118
    6f50:	.word	0x00000124
    6f54:	.word	0x00000130
    6f58:	.word	0x0000013c
    6f5c:	.word	0x00000148
    6f60:	.word	0x00000154
    6f64:	.word	0x00000160
    6f68:	.word	0x0000016c
    6f6c:	.word	0x00000178
    6f70:	.word	0x000000a4
    6f74:	.word	0x00000184
    6f78:	.word	0x00000190
    6f7c:	.word	0x0000019c
    6f80:	.word	0x000001a8
    6f84:	.word	0x000001b4
    6f88:	.word	0x000001c0
    6f8c:	.word	0x000001cc
    6f90:	.word	0x000001d8
    6f94:	.word	0x000001e4
    6f98:	.word	0x000001f0
    6f9c:	.word	0x000001fc
    6fa0:	.word	0x00000208
    6fa4:	.word	0x00000214
    6fa8:	.word	0x000000cc
    6fac:	.word	0x000000cc
    6fb0:	.word	0x000000cc
    6fb4:	.word	0x000000cc
    6fb8:	.word	0x000000cc
    6fbc:	.word	0x000000cc
    6fc0:	.word	0x000000cc
    6fc4:	.word	0x000000cc
    6fc8:	.word	0x000000cc
    6fcc:	.word	0x00000220
    6fd0:	mov	r1, #24
    6fd4:	mov	r2, #8
    6fd8:	movw	r3, #34525	; 0x86dd
    6fdc:	str	r2, [sp]
    6fe0:	str	r1, [sp, #4]
    6fe4:	mov	r1, lr
    6fe8:	mov	r2, ip
    6fec:	bl	b8c8 <gen_hostop6>
    6ff0:	sub	sp, fp, #8
    6ff4:	pop	{r4, sl, fp, pc}
    6ff8:	bl	f74 <abort@plt>
    6ffc:	ldr	r0, [pc, #348]	; 7160 <gen_host6+0x278>
    7000:	add	r0, pc, r0
    7004:	bl	1f30 <sf_bpf_error>
    7008:	ldr	r0, [pc, #344]	; 7168 <gen_host6+0x280>
    700c:	add	r0, pc, r0
    7010:	bl	1f30 <sf_bpf_error>
    7014:	ldr	r0, [pc, #328]	; 7164 <gen_host6+0x27c>
    7018:	add	r0, pc, r0
    701c:	bl	1f30 <sf_bpf_error>
    7020:	ldr	r0, [pc, #324]	; 716c <gen_host6+0x284>
    7024:	add	r0, pc, r0
    7028:	bl	1f30 <sf_bpf_error>
    702c:	ldr	r0, [pc, #316]	; 7170 <gen_host6+0x288>
    7030:	add	r0, pc, r0
    7034:	bl	1f30 <sf_bpf_error>
    7038:	ldr	r0, [pc, #308]	; 7174 <gen_host6+0x28c>
    703c:	add	r0, pc, r0
    7040:	bl	1f30 <sf_bpf_error>
    7044:	ldr	r0, [pc, #300]	; 7178 <gen_host6+0x290>
    7048:	add	r0, pc, r0
    704c:	bl	1f30 <sf_bpf_error>
    7050:	ldr	r0, [pc, #292]	; 717c <gen_host6+0x294>
    7054:	add	r0, pc, r0
    7058:	bl	1f30 <sf_bpf_error>
    705c:	ldr	r0, [pc, #284]	; 7180 <gen_host6+0x298>
    7060:	add	r0, pc, r0
    7064:	bl	1f30 <sf_bpf_error>
    7068:	ldr	r0, [pc, #284]	; 718c <gen_host6+0x2a4>
    706c:	add	r0, pc, r0
    7070:	bl	1f30 <sf_bpf_error>
    7074:	ldr	r0, [pc, #280]	; 7194 <gen_host6+0x2ac>
    7078:	add	r0, pc, r0
    707c:	bl	1f30 <sf_bpf_error>
    7080:	ldr	r0, [pc, #276]	; 719c <gen_host6+0x2b4>
    7084:	add	r0, pc, r0
    7088:	bl	1f30 <sf_bpf_error>
    708c:	ldr	r0, [pc, #260]	; 7198 <gen_host6+0x2b0>
    7090:	add	r0, pc, r0
    7094:	bl	1f30 <sf_bpf_error>
    7098:	ldr	r0, [pc, #260]	; 71a4 <gen_host6+0x2bc>
    709c:	add	r0, pc, r0
    70a0:	bl	1f30 <sf_bpf_error>
    70a4:	ldr	r0, [pc, #244]	; 71a0 <gen_host6+0x2b8>
    70a8:	add	r0, pc, r0
    70ac:	bl	1f30 <sf_bpf_error>
    70b0:	ldr	r0, [pc, #240]	; 71a8 <gen_host6+0x2c0>
    70b4:	add	r0, pc, r0
    70b8:	bl	1f30 <sf_bpf_error>
    70bc:	ldr	r0, [pc, #232]	; 71ac <gen_host6+0x2c4>
    70c0:	add	r0, pc, r0
    70c4:	bl	1f30 <sf_bpf_error>
    70c8:	ldr	r0, [pc, #224]	; 71b0 <gen_host6+0x2c8>
    70cc:	add	r0, pc, r0
    70d0:	bl	1f30 <sf_bpf_error>
    70d4:	ldr	r0, [pc, #168]	; 7184 <gen_host6+0x29c>
    70d8:	add	r0, pc, r0
    70dc:	bl	1f30 <sf_bpf_error>
    70e0:	ldr	r0, [pc, #160]	; 7188 <gen_host6+0x2a0>
    70e4:	add	r0, pc, r0
    70e8:	bl	1f30 <sf_bpf_error>
    70ec:	ldr	r0, [pc, #156]	; 7190 <gen_host6+0x2a8>
    70f0:	add	r0, pc, r0
    70f4:	bl	1f30 <sf_bpf_error>
    70f8:	ldr	r0, [pc, #180]	; 71b4 <gen_host6+0x2cc>
    70fc:	add	r0, pc, r0
    7100:	bl	1f30 <sf_bpf_error>
    7104:	ldr	r0, [pc, #172]	; 71b8 <gen_host6+0x2d0>
    7108:	add	r0, pc, r0
    710c:	bl	1f30 <sf_bpf_error>
    7110:	ldr	r0, [pc, #164]	; 71bc <gen_host6+0x2d4>
    7114:	add	r0, pc, r0
    7118:	bl	1f30 <sf_bpf_error>
    711c:	ldr	r0, [pc, #156]	; 71c0 <gen_host6+0x2d8>
    7120:	add	r0, pc, r0
    7124:	bl	1f30 <sf_bpf_error>
    7128:	ldr	r0, [pc, #148]	; 71c4 <gen_host6+0x2dc>
    712c:	add	r0, pc, r0
    7130:	bl	1f30 <sf_bpf_error>
    7134:	ldr	r0, [pc, #140]	; 71c8 <gen_host6+0x2e0>
    7138:	add	r0, pc, r0
    713c:	bl	1f30 <sf_bpf_error>
    7140:	ldr	r0, [pc, #132]	; 71cc <gen_host6+0x2e4>
    7144:	add	r0, pc, r0
    7148:	bl	1f30 <sf_bpf_error>
    714c:	ldr	r0, [pc, #124]	; 71d0 <gen_host6+0x2e8>
    7150:	add	r0, pc, r0
    7154:	bl	1f30 <sf_bpf_error>
    7158:	.word	0x0000bf30
    715c:	.word	0x0000ca9e
    7160:	.word	0x0000cb08
    7164:	.word	0x0000cb10
    7168:	.word	0x0000cb3e
    716c:	.word	0x0000c7c4
    7170:	.word	0x0000c79b
    7174:	.word	0x0000c7ca
    7178:	.word	0x0000c7db
    717c:	.word	0x0000c7ed
    7180:	.word	0x0000c7ff
    7184:	.word	0x0000c7a5
    7188:	.word	0x0000c7b6
    718c:	.word	0x0000c84c
    7190:	.word	0x0000c7ed
    7194:	.word	0x0000caf3
    7198:	.word	0x0000c871
    719c:	.word	0x0000c8a0
    71a0:	.word	0x0000c89f
    71a4:	.word	0x0000c8d0
    71a8:	.word	0x0000c8ff
    71ac:	.word	0x0000c912
    71b0:	.word	0x0000c922
    71b4:	.word	0x0000c90f
    71b8:	.word	0x0000c926
    71bc:	.word	0x0000c938
    71c0:	.word	0x0000c94a
    71c4:	.word	0x0000c95c
    71c8:	.word	0x0000c96d
    71cc:	.word	0x0000c984
    71d0:	.word	0x0000c999

000071d4 <gen_port>:
    71d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    71d8:	add	fp, sp, #24
    71dc:	mov	r6, r0
    71e0:	mov	r0, #2048	; 0x800
    71e4:	mov	r5, r2
    71e8:	mov	r7, r1
    71ec:	bl	4334 <gen_linktype>
    71f0:	mov	r4, r0
    71f4:	cmp	r7, #16
    71f8:	bgt	7254 <gen_port+0x80>
    71fc:	cmn	r7, #1
    7200:	bne	7288 <gen_port+0xb4>
    7204:	mov	r0, r6
    7208:	mov	r1, #6
    720c:	mov	r2, r5
    7210:	bl	5228 <sf_gen_portop>
    7214:	mov	r8, r0
    7218:	mov	r0, r6
    721c:	mov	r1, #17
    7220:	mov	r2, r5
    7224:	bl	5228 <sf_gen_portop>
    7228:	mov	r7, r0
    722c:	mov	r0, r8
    7230:	mov	r1, r7
    7234:	bl	3a3c <sf_gen_or>
    7238:	mov	r0, r6
    723c:	mov	r1, #132	; 0x84
    7240:	mov	r2, r5
    7244:	bl	5228 <sf_gen_portop>
    7248:	mov	r1, r7
    724c:	bl	3a3c <sf_gen_or>
    7250:	b	7274 <gen_port+0xa0>
    7254:	cmp	r7, #132	; 0x84
    7258:	cmpne	r7, #17
    725c:	bne	7290 <gen_port+0xbc>
    7260:	mov	r0, r6
    7264:	mov	r1, r7
    7268:	mov	r2, r5
    726c:	bl	5228 <sf_gen_portop>
    7270:	mov	r7, r0
    7274:	mov	r0, r4
    7278:	mov	r1, r7
    727c:	bl	3964 <sf_gen_and>
    7280:	mov	r0, r7
    7284:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7288:	cmp	r7, #6
    728c:	beq	7260 <gen_port+0x8c>
    7290:	bl	f74 <abort@plt>

00007294 <gen_port6>:
    7294:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7298:	add	fp, sp, #24
    729c:	mov	r6, r0
    72a0:	movw	r0, #34525	; 0x86dd
    72a4:	mov	r5, r2
    72a8:	mov	r7, r1
    72ac:	bl	4334 <gen_linktype>
    72b0:	mov	r4, r0
    72b4:	cmp	r7, #16
    72b8:	bgt	7314 <gen_port6+0x80>
    72bc:	cmn	r7, #1
    72c0:	bne	7348 <gen_port6+0xb4>
    72c4:	mov	r0, r6
    72c8:	mov	r1, #6
    72cc:	mov	r2, r5
    72d0:	bl	543c <sf_gen_portop6>
    72d4:	mov	r8, r0
    72d8:	mov	r0, r6
    72dc:	mov	r1, #17
    72e0:	mov	r2, r5
    72e4:	bl	543c <sf_gen_portop6>
    72e8:	mov	r7, r0
    72ec:	mov	r0, r8
    72f0:	mov	r1, r7
    72f4:	bl	3a3c <sf_gen_or>
    72f8:	mov	r0, r6
    72fc:	mov	r1, #132	; 0x84
    7300:	mov	r2, r5
    7304:	bl	543c <sf_gen_portop6>
    7308:	mov	r1, r7
    730c:	bl	3a3c <sf_gen_or>
    7310:	b	7334 <gen_port6+0xa0>
    7314:	cmp	r7, #132	; 0x84
    7318:	cmpne	r7, #17
    731c:	bne	7350 <gen_port6+0xbc>
    7320:	mov	r0, r6
    7324:	mov	r1, r7
    7328:	mov	r2, r5
    732c:	bl	543c <sf_gen_portop6>
    7330:	mov	r7, r0
    7334:	mov	r0, r4
    7338:	mov	r1, r7
    733c:	bl	3964 <sf_gen_and>
    7340:	mov	r0, r7
    7344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7348:	cmp	r7, #6
    734c:	beq	7320 <gen_port6+0x8c>
    7350:	bl	f74 <abort@plt>

00007354 <gen_portrange>:
    7354:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    7358:	add	fp, sp, #24
    735c:	mov	r7, r0
    7360:	mov	r0, #2048	; 0x800
    7364:	mov	r5, r3
    7368:	mov	r4, r2
    736c:	mov	r6, r1
    7370:	bl	4334 <gen_linktype>
    7374:	mov	r8, r0
    7378:	cmp	r4, #16
    737c:	bgt	73e4 <gen_portrange+0x90>
    7380:	cmn	r4, #1
    7384:	bne	741c <gen_portrange+0xc8>
    7388:	mov	r0, r7
    738c:	mov	r1, r6
    7390:	mov	r2, #6
    7394:	mov	r3, r5
    7398:	bl	5614 <sf_gen_portrangeop>
    739c:	mov	r9, r0
    73a0:	mov	r0, r7
    73a4:	mov	r1, r6
    73a8:	mov	r2, #17
    73ac:	mov	r3, r5
    73b0:	bl	5614 <sf_gen_portrangeop>
    73b4:	mov	r4, r0
    73b8:	mov	r0, r9
    73bc:	mov	r1, r4
    73c0:	bl	3a3c <sf_gen_or>
    73c4:	mov	r0, r7
    73c8:	mov	r1, r6
    73cc:	mov	r2, #132	; 0x84
    73d0:	mov	r3, r5
    73d4:	bl	5614 <sf_gen_portrangeop>
    73d8:	mov	r1, r4
    73dc:	bl	3a3c <sf_gen_or>
    73e0:	b	7408 <gen_portrange+0xb4>
    73e4:	cmp	r4, #132	; 0x84
    73e8:	cmpne	r4, #17
    73ec:	bne	7424 <gen_portrange+0xd0>
    73f0:	mov	r0, r7
    73f4:	mov	r1, r6
    73f8:	mov	r2, r4
    73fc:	mov	r3, r5
    7400:	bl	5614 <sf_gen_portrangeop>
    7404:	mov	r4, r0
    7408:	mov	r0, r8
    740c:	mov	r1, r4
    7410:	bl	3964 <sf_gen_and>
    7414:	mov	r0, r4
    7418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    741c:	cmp	r4, #6
    7420:	beq	73f0 <gen_portrange+0x9c>
    7424:	bl	f74 <abort@plt>

00007428 <gen_portrange6>:
    7428:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    742c:	add	fp, sp, #24
    7430:	mov	r7, r0
    7434:	movw	r0, #34525	; 0x86dd
    7438:	mov	r5, r3
    743c:	mov	r4, r2
    7440:	mov	r6, r1
    7444:	bl	4334 <gen_linktype>
    7448:	mov	r8, r0
    744c:	cmp	r4, #16
    7450:	bgt	74b8 <gen_portrange6+0x90>
    7454:	cmn	r4, #1
    7458:	bne	74f0 <gen_portrange6+0xc8>
    745c:	mov	r0, r7
    7460:	mov	r1, r6
    7464:	mov	r2, #6
    7468:	mov	r3, r5
    746c:	bl	57fc <sf_gen_portrangeop6>
    7470:	mov	r9, r0
    7474:	mov	r0, r7
    7478:	mov	r1, r6
    747c:	mov	r2, #17
    7480:	mov	r3, r5
    7484:	bl	57fc <sf_gen_portrangeop6>
    7488:	mov	r4, r0
    748c:	mov	r0, r9
    7490:	mov	r1, r4
    7494:	bl	3a3c <sf_gen_or>
    7498:	mov	r0, r7
    749c:	mov	r1, r6
    74a0:	mov	r2, #132	; 0x84
    74a4:	mov	r3, r5
    74a8:	bl	57fc <sf_gen_portrangeop6>
    74ac:	mov	r1, r4
    74b0:	bl	3a3c <sf_gen_or>
    74b4:	b	74dc <gen_portrange6+0xb4>
    74b8:	cmp	r4, #132	; 0x84
    74bc:	cmpne	r4, #17
    74c0:	bne	74f8 <gen_portrange6+0xd0>
    74c4:	mov	r0, r7
    74c8:	mov	r1, r6
    74cc:	mov	r2, r4
    74d0:	mov	r3, r5
    74d4:	bl	57fc <sf_gen_portrangeop6>
    74d8:	mov	r4, r0
    74dc:	mov	r0, r8
    74e0:	mov	r1, r4
    74e4:	bl	3964 <sf_gen_and>
    74e8:	mov	r0, r4
    74ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    74f0:	cmp	r4, #6
    74f4:	beq	74c4 <gen_portrange6+0x9c>
    74f8:	bl	f74 <abort@plt>

000074fc <lookup_proto>:
    74fc:	push	{r4, sl, fp, lr}
    7500:	add	fp, sp, #8
    7504:	mov	r4, r0
    7508:	mvn	r0, #0
    750c:	cmp	r1, #1
    7510:	ble	7530 <lookup_proto+0x34>
    7514:	cmp	r1, #2
    7518:	beq	7570 <lookup_proto+0x74>
    751c:	cmp	r1, #24
    7520:	beq	7584 <lookup_proto+0x88>
    7524:	cmp	r1, #17
    7528:	beq	7570 <lookup_proto+0x74>
    752c:	b	7580 <lookup_proto+0x84>
    7530:	cmp	r1, #0
    7534:	beq	7570 <lookup_proto+0x74>
    7538:	cmp	r1, #1
    753c:	bne	7580 <lookup_proto+0x84>
    7540:	mov	r0, r4
    7544:	bl	bdac <pcap_nametoeproto>
    7548:	cmn	r0, #1
    754c:	bne	7580 <lookup_proto+0x84>
    7550:	mov	r0, r4
    7554:	bl	be14 <pcap_nametollc>
    7558:	cmn	r0, #1
    755c:	bne	7580 <lookup_proto+0x84>
    7560:	ldr	r0, [pc, #156]	; 7604 <lookup_proto+0x108>
    7564:	mov	r1, r4
    7568:	add	r0, pc, r0
    756c:	bl	1f30 <sf_bpf_error>
    7570:	mov	r0, r4
    7574:	bl	bd90 <pcap_nametoproto>
    7578:	cmn	r0, #1
    757c:	beq	75f4 <lookup_proto+0xf8>
    7580:	pop	{r4, sl, fp, pc}
    7584:	ldr	r1, [pc, #128]	; 760c <lookup_proto+0x110>
    7588:	mov	r0, r4
    758c:	add	r1, pc, r1
    7590:	bl	db8 <strcmp@plt>
    7594:	cmp	r0, #0
    7598:	beq	75e4 <lookup_proto+0xe8>
    759c:	ldr	r1, [pc, #108]	; 7610 <lookup_proto+0x114>
    75a0:	mov	r0, r4
    75a4:	add	r1, pc, r1
    75a8:	bl	db8 <strcmp@plt>
    75ac:	cmp	r0, #0
    75b0:	beq	75ec <lookup_proto+0xf0>
    75b4:	ldr	r1, [pc, #88]	; 7614 <lookup_proto+0x118>
    75b8:	mov	r0, r4
    75bc:	add	r1, pc, r1
    75c0:	bl	db8 <strcmp@plt>
    75c4:	mov	r1, r0
    75c8:	mov	r0, #129	; 0x81
    75cc:	cmp	r1, #0
    75d0:	popeq	{r4, sl, fp, pc}
    75d4:	ldr	r0, [pc, #60]	; 7618 <lookup_proto+0x11c>
    75d8:	mov	r1, r4
    75dc:	add	r0, pc, r0
    75e0:	bl	1f30 <sf_bpf_error>
    75e4:	mov	r0, #130	; 0x82
    75e8:	pop	{r4, sl, fp, pc}
    75ec:	mov	r0, #131	; 0x83
    75f0:	pop	{r4, sl, fp, pc}
    75f4:	ldr	r0, [pc, #12]	; 7608 <lookup_proto+0x10c>
    75f8:	mov	r1, r4
    75fc:	add	r0, pc, r0
    7600:	bl	1f30 <sf_bpf_error>
    7604:	.word	0x0000c63d
    7608:	.word	0x0000c593
    760c:	.word	0x0000c632
    7610:	.word	0x0000c61f
    7614:	.word	0x0000c60c
    7618:	.word	0x0000c5f1

0000761c <gen_protochain>:
    761c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7620:	add	fp, sp, #28
    7624:	sub	sp, sp, #412	; 0x19c
    7628:	mov	r7, r1
    762c:	mov	r6, r0
    7630:	bl	8974 <alloc_reg>
    7634:	add	sl, sp, #8
    7638:	mov	r9, r0
    763c:	mov	r1, #0
    7640:	mov	r2, #400	; 0x190
    7644:	mov	r0, sl
    7648:	bl	ef0 <memset@plt>
    764c:	cmp	r7, #17
    7650:	cmpne	r7, #2
    7654:	bne	7734 <gen_protochain+0x118>
    7658:	ldr	r0, [pc, #1688]	; 7cf8 <gen_protochain+0x6dc>
    765c:	ldr	r0, [pc, r0]
    7660:	sub	r1, r0, #105	; 0x69
    7664:	cmp	r1, #22
    7668:	bhi	7680 <gen_protochain+0x64>
    766c:	movw	r3, #16385	; 0x4001
    7670:	mov	r2, #1
    7674:	movt	r3, #64	; 0x40
    7678:	tst	r3, r2, lsl r1
    767c:	bne	768c <gen_protochain+0x70>
    7680:	cmp	r0, #192	; 0xc0
    7684:	cmpne	r0, #163	; 0xa3
    7688:	bne	7698 <gen_protochain+0x7c>
    768c:	ldr	r0, [pc, #1708]	; 7d40 <gen_protochain+0x724>
    7690:	add	r0, pc, r0
    7694:	bl	1f30 <sf_bpf_error>
    7698:	ldr	r0, [pc, #1628]	; 7cfc <gen_protochain+0x6e0>
    769c:	mov	r4, #1
    76a0:	add	r0, pc, r0
    76a4:	str	r4, [r0]
    76a8:	mov	r0, #20
    76ac:	bl	1fbc <newchunk>
    76b0:	mov	r1, #0
    76b4:	cmp	r7, #17
    76b8:	str	r1, [r0]
    76bc:	str	r0, [sp, #8]
    76c0:	beq	776c <gen_protochain+0x150>
    76c4:	cmp	r7, #2
    76c8:	bne	7ce8 <gen_protochain+0x6cc>
    76cc:	mov	r0, #2048	; 0x800
    76d0:	bl	4334 <gen_linktype>
    76d4:	str	r0, [sp]
    76d8:	mov	r0, #20
    76dc:	bl	1fbc <newchunk>
    76e0:	mov	r1, #48	; 0x30
    76e4:	str	r1, [r0]
    76e8:	str	r0, [sp, #12]
    76ec:	ldr	r1, [pc, #1548]	; 7d00 <gen_protochain+0x6e4>
    76f0:	ldr	r1, [pc, r1]
    76f4:	ldr	r2, [pc, #1544]	; 7d04 <gen_protochain+0x6e8>
    76f8:	ldr	r2, [pc, r2]
    76fc:	add	r1, r2, r1
    7700:	add	r1, r1, #9
    7704:	str	r1, [r0, #12]
    7708:	mov	r0, #20
    770c:	bl	1fbc <newchunk>
    7710:	mov	r1, #177	; 0xb1
    7714:	str	r1, [r0]
    7718:	str	r0, [sp, #16]
    771c:	ldr	r1, [pc, #1508]	; 7d08 <gen_protochain+0x6ec>
    7720:	ldr	r1, [pc, r1]
    7724:	ldr	r2, [pc, #1504]	; 7d0c <gen_protochain+0x6f0>
    7728:	ldr	r2, [pc, r2]
    772c:	add	r1, r2, r1
    7730:	b	77bc <gen_protochain+0x1a0>
    7734:	cmp	r7, #0
    7738:	bne	7cdc <gen_protochain+0x6c0>
    773c:	mov	r0, r6
    7740:	mov	r1, #2
    7744:	bl	761c <gen_protochain>
    7748:	mov	r5, r0
    774c:	mov	r0, r6
    7750:	mov	r1, #17
    7754:	bl	761c <gen_protochain>
    7758:	mov	r6, r0
    775c:	mov	r0, r5
    7760:	mov	r1, r6
    7764:	bl	3a3c <sf_gen_or>
    7768:	b	7cd0 <gen_protochain+0x6b4>
    776c:	movw	r0, #34525	; 0x86dd
    7770:	bl	4334 <gen_linktype>
    7774:	str	r0, [sp]
    7778:	mov	r0, #20
    777c:	bl	1fbc <newchunk>
    7780:	mov	r1, #48	; 0x30
    7784:	str	r1, [r0]
    7788:	str	r0, [sp, #12]
    778c:	ldr	r1, [pc, #1408]	; 7d14 <gen_protochain+0x6f8>
    7790:	ldr	r1, [pc, r1]
    7794:	ldr	r2, [pc, #1404]	; 7d18 <gen_protochain+0x6fc>
    7798:	ldr	r2, [pc, r2]
    779c:	add	r1, r2, r1
    77a0:	add	r1, r1, #6
    77a4:	str	r1, [r0, #12]
    77a8:	mov	r0, #20
    77ac:	bl	1fbc <newchunk>
    77b0:	mov	r1, #40	; 0x28
    77b4:	str	r4, [r0]
    77b8:	str	r0, [sp, #16]
    77bc:	str	r1, [r0, #12]
    77c0:	mov	r0, #20
    77c4:	bl	1fbc <newchunk>
    77c8:	mov	r4, #21
    77cc:	mov	r5, #0
    77d0:	str	r4, [r0]
    77d4:	str	r0, [sp, #20]
    77d8:	str	r6, [r0, #12]
    77dc:	ldr	r0, [sp, #20]
    77e0:	str	r5, [r0, #4]
    77e4:	ldr	r0, [sp, #20]
    77e8:	str	r5, [r0, #8]
    77ec:	mov	r0, #20
    77f0:	bl	1fbc <newchunk>
    77f4:	str	r4, [r0]
    77f8:	str	r0, [sp, #24]
    77fc:	str	r5, [r0, #4]
    7800:	mov	r1, #59	; 0x3b
    7804:	ldr	r0, [sp, #24]
    7808:	str	r5, [r0, #8]
    780c:	ldr	r0, [sp, #24]
    7810:	str	r1, [r0, #12]
    7814:	ldr	r0, [sp, #20]
    7818:	ldr	r1, [sp, #24]
    781c:	str	r1, [r0, #8]
    7820:	mov	r0, #20
    7824:	bl	1fbc <newchunk>
    7828:	cmp	r7, #17
    782c:	str	r6, [sp, #4]
    7830:	bne	7a60 <gen_protochain+0x444>
    7834:	mov	r7, #0
    7838:	str	r4, [r0]
    783c:	str	r0, [sp, #28]
    7840:	str	r7, [r0, #4]
    7844:	ldr	r0, [sp, #28]
    7848:	str	r7, [r0, #8]
    784c:	ldr	r0, [sp, #28]
    7850:	str	r7, [r0, #12]
    7854:	ldr	r0, [sp, #24]
    7858:	ldr	r1, [sp, #28]
    785c:	str	r1, [r0, #8]
    7860:	mov	r0, #20
    7864:	bl	1fbc <newchunk>
    7868:	str	r4, [r0]
    786c:	str	r0, [sp, #32]
    7870:	ldr	r1, [sp, #28]
    7874:	str	r0, [r1, #8]
    7878:	mov	r1, #60	; 0x3c
    787c:	ldr	r0, [sp, #32]
    7880:	str	r7, [r0, #4]
    7884:	ldr	r0, [sp, #32]
    7888:	str	r7, [r0, #8]
    788c:	ldr	r0, [sp, #32]
    7890:	str	r1, [r0, #12]
    7894:	mov	r0, #20
    7898:	bl	1fbc <newchunk>
    789c:	str	r4, [r0]
    78a0:	str	r0, [sp, #36]	; 0x24
    78a4:	ldr	r1, [sp, #32]
    78a8:	str	r0, [r1, #8]
    78ac:	mov	r1, #43	; 0x2b
    78b0:	ldr	r0, [sp, #36]	; 0x24
    78b4:	str	r7, [r0, #4]
    78b8:	ldr	r0, [sp, #36]	; 0x24
    78bc:	str	r7, [r0, #8]
    78c0:	ldr	r0, [sp, #36]	; 0x24
    78c4:	str	r1, [r0, #12]
    78c8:	mov	r0, #20
    78cc:	bl	1fbc <newchunk>
    78d0:	str	r4, [r0]
    78d4:	str	r0, [sp, #40]	; 0x28
    78d8:	ldr	r1, [sp, #36]	; 0x24
    78dc:	str	r0, [r1, #8]
    78e0:	mov	r1, #44	; 0x2c
    78e4:	ldr	r0, [sp, #40]	; 0x28
    78e8:	str	r7, [r0, #4]
    78ec:	ldr	r0, [sp, #40]	; 0x28
    78f0:	str	r7, [r0, #8]
    78f4:	ldr	r0, [sp, #40]	; 0x28
    78f8:	str	r1, [r0, #12]
    78fc:	mov	r0, #20
    7900:	bl	1fbc <newchunk>
    7904:	mov	r5, #135	; 0x87
    7908:	str	r5, [r0]
    790c:	str	r0, [sp, #44]	; 0x2c
    7910:	mov	r0, #20
    7914:	bl	1fbc <newchunk>
    7918:	mov	r8, #80	; 0x50
    791c:	str	r8, [r0]
    7920:	str	r0, [sp, #48]	; 0x30
    7924:	ldr	r1, [pc, #1008]	; 7d1c <gen_protochain+0x700>
    7928:	ldr	r1, [pc, r1]
    792c:	ldr	r2, [pc, #1004]	; 7d20 <gen_protochain+0x704>
    7930:	ldr	r2, [pc, r2]
    7934:	add	r1, r2, r1
    7938:	str	r1, [r0, #12]
    793c:	mov	r0, #20
    7940:	bl	1fbc <newchunk>
    7944:	mov	r1, #2
    7948:	str	r1, [r0]
    794c:	str	r0, [sp, #52]	; 0x34
    7950:	str	r9, [r0, #12]
    7954:	mov	r0, #20
    7958:	bl	1fbc <newchunk>
    795c:	str	r5, [r0]
    7960:	str	r0, [sp, #56]	; 0x38
    7964:	mov	r0, #20
    7968:	bl	1fbc <newchunk>
    796c:	mov	r5, #4
    7970:	mov	r4, #1
    7974:	str	r5, [r0]
    7978:	str	r0, [sp, #60]	; 0x3c
    797c:	str	r4, [r0, #12]
    7980:	mov	r0, #20
    7984:	bl	1fbc <newchunk>
    7988:	mov	r6, #7
    798c:	str	r6, [r0]
    7990:	str	r0, [sp, #64]	; 0x40
    7994:	mov	r0, #20
    7998:	bl	1fbc <newchunk>
    799c:	str	r8, [r0]
    79a0:	str	r0, [sp, #68]	; 0x44
    79a4:	ldr	r1, [pc, #888]	; 7d24 <gen_protochain+0x708>
    79a8:	ldr	r1, [pc, r1]
    79ac:	ldr	r2, [pc, #884]	; 7d28 <gen_protochain+0x70c>
    79b0:	ldr	r2, [pc, r2]
    79b4:	add	r1, r2, r1
    79b8:	str	r1, [r0, #12]
    79bc:	mov	r0, #20
    79c0:	bl	1fbc <newchunk>
    79c4:	str	r5, [r0]
    79c8:	str	r0, [sp, #72]	; 0x48
    79cc:	str	r4, [r0, #12]
    79d0:	mov	r0, #20
    79d4:	bl	1fbc <newchunk>
    79d8:	mov	r1, #36	; 0x24
    79dc:	mov	r5, #8
    79e0:	str	r1, [r0]
    79e4:	str	r0, [sp, #76]	; 0x4c
    79e8:	str	r5, [r0, #12]
    79ec:	mov	r0, #20
    79f0:	bl	1fbc <newchunk>
    79f4:	str	r6, [r0]
    79f8:	str	r0, [sp, #80]	; 0x50
    79fc:	mov	r0, #20
    7a00:	bl	1fbc <newchunk>
    7a04:	mov	r1, #96	; 0x60
    7a08:	str	r1, [r0]
    7a0c:	str	r0, [sp, #84]	; 0x54
    7a10:	str	r9, [r0, #12]
    7a14:	mov	r0, #20
    7a18:	bl	1fbc <newchunk>
    7a1c:	mov	r1, #5
    7a20:	str	r1, [r0]
    7a24:	mvn	r1, #17
    7a28:	str	r0, [sp, #88]	; 0x58
    7a2c:	str	r1, [r0, #12]
    7a30:	ldr	r0, [sp, #84]	; 0x54
    7a34:	ldr	r1, [sp, #88]	; 0x58
    7a38:	str	r1, [r0, #8]
    7a3c:	add	r0, sl, #20
    7a40:	ldr	r1, [r0, r7, lsl #2]
    7a44:	ldr	r2, [sp, #44]	; 0x2c
    7a48:	add	r7, r7, #1
    7a4c:	cmp	r7, #4
    7a50:	str	r2, [r1, #4]
    7a54:	bne	7a40 <gen_protochain+0x424>
    7a58:	mov	r7, #21
    7a5c:	b	7a80 <gen_protochain+0x464>
    7a60:	mov	r1, #4
    7a64:	mov	r7, #6
    7a68:	str	r1, [r0]
    7a6c:	str	r0, [sp, #28]
    7a70:	str	r5, [r0, #12]
    7a74:	ldr	r0, [sp, #24]
    7a78:	ldr	r1, [sp, #28]
    7a7c:	str	r1, [r0, #8]
    7a80:	mov	r0, #20
    7a84:	bl	1fbc <newchunk>
    7a88:	mov	r1, #21
    7a8c:	cmp	r5, #0
    7a90:	str	r1, [r0]
    7a94:	mov	r1, #0
    7a98:	str	r0, [sl, r7, lsl #2]
    7a9c:	str	r1, [r0, #4]
    7aa0:	ldr	r0, [sl, r7, lsl #2]
    7aa4:	str	r1, [r0, #8]
    7aa8:	mov	r1, #51	; 0x33
    7aac:	ldr	r0, [sl, r7, lsl #2]
    7ab0:	str	r1, [r0, #12]
    7ab4:	beq	7ac4 <gen_protochain+0x4a8>
    7ab8:	ldr	r0, [sl, r5, lsl #2]
    7abc:	ldr	r1, [sl, r7, lsl #2]
    7ac0:	str	r1, [r0, #8]
    7ac4:	mov	r0, #20
    7ac8:	bl	1fbc <newchunk>
    7acc:	add	r8, sl, r7, lsl #2
    7ad0:	mov	r4, #135	; 0x87
    7ad4:	str	r4, [r0]
    7ad8:	str	r0, [r8, #4]
    7adc:	ldr	r1, [sl, r7, lsl #2]
    7ae0:	str	r0, [r1, #4]
    7ae4:	mov	r0, #20
    7ae8:	bl	1fbc <newchunk>
    7aec:	mov	r6, #80	; 0x50
    7af0:	str	r6, [r0]
    7af4:	ldr	r1, [pc, #560]	; 7d2c <gen_protochain+0x710>
    7af8:	ldr	r1, [pc, r1]
    7afc:	ldr	r2, [pc, #556]	; 7d30 <gen_protochain+0x714>
    7b00:	ldr	r2, [pc, r2]
    7b04:	str	r0, [r8, #8]
    7b08:	add	r1, r2, r1
    7b0c:	str	r1, [r0, #12]
    7b10:	mov	r0, #20
    7b14:	bl	1fbc <newchunk>
    7b18:	mov	r1, #2
    7b1c:	str	r1, [r0]
    7b20:	str	r0, [r8, #12]
    7b24:	str	r9, [r0, #12]
    7b28:	mov	r0, #20
    7b2c:	bl	1fbc <newchunk>
    7b30:	str	r4, [r0]
    7b34:	str	r0, [r8, #16]
    7b38:	ldr	r1, [r8, #12]
    7b3c:	str	r0, [r1, #4]
    7b40:	mov	r0, #20
    7b44:	bl	1fbc <newchunk>
    7b48:	mov	sl, #4
    7b4c:	mov	r1, #1
    7b50:	str	sl, [r0]
    7b54:	str	r0, [r8, #20]
    7b58:	str	r1, [r0, #12]
    7b5c:	mov	r0, #20
    7b60:	bl	1fbc <newchunk>
    7b64:	mov	r5, #7
    7b68:	str	r5, [r0]
    7b6c:	str	r0, [r8, #24]
    7b70:	mov	r0, #20
    7b74:	bl	1fbc <newchunk>
    7b78:	str	r6, [r0]
    7b7c:	str	r0, [r8, #28]
    7b80:	ldr	r1, [pc, #428]	; 7d34 <gen_protochain+0x718>
    7b84:	ldr	r1, [pc, r1]
    7b88:	ldr	r2, [pc, #424]	; 7d38 <gen_protochain+0x71c>
    7b8c:	ldr	r2, [pc, r2]
    7b90:	add	r1, r2, r1
    7b94:	str	r1, [r0, #12]
    7b98:	mov	r0, #20
    7b9c:	bl	1fbc <newchunk>
    7ba0:	orr	r4, r7, #8
    7ba4:	add	r1, sp, #8
    7ba8:	str	sl, [r0]
    7bac:	str	r0, [r1, r4, lsl #2]
    7bb0:	mov	r1, #2
    7bb4:	str	r1, [r0, #12]
    7bb8:	mov	r0, #20
    7bbc:	bl	1fbc <newchunk>
    7bc0:	mov	r1, #36	; 0x24
    7bc4:	str	r1, [r0]
    7bc8:	add	r1, sp, #8
    7bcc:	add	r6, r1, r4, lsl #2
    7bd0:	str	r0, [r6, #4]
    7bd4:	str	sl, [r0, #12]
    7bd8:	mov	r0, #20
    7bdc:	bl	1fbc <newchunk>
    7be0:	str	r5, [r0]
    7be4:	str	r0, [r6, #8]
    7be8:	mov	r0, #20
    7bec:	bl	1fbc <newchunk>
    7bf0:	mov	r1, #96	; 0x60
    7bf4:	str	r1, [r0]
    7bf8:	str	r0, [r6, #12]
    7bfc:	str	r9, [r0, #12]
    7c00:	mov	r0, #20
    7c04:	bl	1fbc <newchunk>
    7c08:	mov	r1, #5
    7c0c:	str	r1, [r0]
    7c10:	mvn	r1, #8
    7c14:	str	r0, [r6, #16]
    7c18:	eor	r1, r7, r1
    7c1c:	sub	r1, r1, #1
    7c20:	str	r1, [r0, #12]
    7c24:	mov	r0, #20
    7c28:	bl	1fbc <newchunk>
    7c2c:	add	r6, sp, #8
    7c30:	add	r1, r4, #5
    7c34:	mov	r2, #0
    7c38:	str	sl, [r0]
    7c3c:	str	r0, [r6, r1, lsl #2]
    7c40:	str	r2, [r0, #12]
    7c44:	ldr	r0, [r6, r1, lsl #2]
    7c48:	ldr	r2, [sp, #24]
    7c4c:	str	r0, [r2, #4]
    7c50:	ldr	r0, [r6, r7, lsl #2]
    7c54:	ldr	r2, [r6, r1, lsl #2]
    7c58:	str	r2, [r0, #8]
    7c5c:	ldr	r0, [r6, r1, lsl #2]
    7c60:	ldr	r2, [sp, #20]
    7c64:	str	r0, [r2, #4]
    7c68:	orr	r0, r6, #4
    7c6c:	mov	r2, r1
    7c70:	ldmda	r0, {r3, r7}
    7c74:	subs	r2, r2, #1
    7c78:	add	r0, r0, #4
    7c7c:	str	r7, [r3, #16]
    7c80:	bne	7c70 <gen_protochain+0x654>
    7c84:	ldr	r0, [r6, r1, lsl #2]
    7c88:	mov	r4, #0
    7c8c:	str	r4, [r0, #16]
    7c90:	mov	r0, #208	; 0xd0
    7c94:	bl	1fbc <newchunk>
    7c98:	mov	r6, r0
    7c9c:	mov	r0, #21
    7ca0:	ldr	r1, [sp, #4]
    7ca4:	str	r0, [r6, #8]
    7ca8:	str	r6, [r6, #96]	; 0x60
    7cac:	ldr	r0, [sp, #12]
    7cb0:	str	r1, [r6, #20]
    7cb4:	mov	r1, r6
    7cb8:	str	r0, [r6, #4]
    7cbc:	ldr	r0, [pc, #120]	; 7d3c <gen_protochain+0x720>
    7cc0:	add	r0, pc, r0
    7cc4:	str	r4, [r0, r9, lsl #2]
    7cc8:	ldr	r0, [sp]
    7ccc:	bl	3964 <sf_gen_and>
    7cd0:	mov	r0, r6
    7cd4:	sub	sp, fp, #28
    7cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7cdc:	ldr	r0, [pc, #16]	; 7cf4 <gen_protochain+0x6d8>
    7ce0:	add	r0, pc, r0
    7ce4:	bl	1f30 <sf_bpf_error>
    7ce8:	ldr	r0, [pc, #32]	; 7d10 <gen_protochain+0x6f4>
    7cec:	add	r0, pc, r0
    7cf0:	bl	1f30 <sf_bpf_error>
    7cf4:	.word	0x0000bf04
    7cf8:	.word	0x00028dd4
    7cfc:	.word	0x00029304
    7d00:	.word	0x00028d50
    7d04:	.word	0x00028d44
    7d08:	.word	0x00028d1c
    7d0c:	.word	0x00028d18
    7d10:	.word	0x0000bf45
    7d14:	.word	0x00028cb0
    7d18:	.word	0x00028ca4
    7d1c:	.word	0x00028b14
    7d20:	.word	0x00028b10
    7d24:	.word	0x00028a94
    7d28:	.word	0x00028a90
    7d2c:	.word	0x00028944
    7d30:	.word	0x00028940
    7d34:	.word	0x000288b8
    7d38:	.word	0x000288b4
    7d3c:	.word	0x00028850
    7d40:	.word	0x0000c57a

00007d44 <sf_gen_mcode>:
    7d44:	push	{r4, r5, r6, r7, fp, lr}
    7d48:	add	fp, sp, #16
    7d4c:	sub	sp, sp, #16
    7d50:	mov	r6, r1
    7d54:	add	r1, sp, #12
    7d58:	mov	r4, r3
    7d5c:	mov	r7, r2
    7d60:	mov	r5, r0
    7d64:	bl	be70 <__pcap_atoin>
    7d68:	ldr	r1, [sp, #12]
    7d6c:	rsb	r0, r0, #32
    7d70:	cmp	r6, #0
    7d74:	lsl	r0, r1, r0
    7d78:	str	r0, [sp, #12]
    7d7c:	beq	7dc0 <sf_gen_mcode+0x7c>
    7d80:	add	r1, sp, #8
    7d84:	mov	r0, r6
    7d88:	bl	be70 <__pcap_atoin>
    7d8c:	ldr	r2, [sp, #8]
    7d90:	rsb	r0, r0, #32
    7d94:	lsl	r1, r2, r0
    7d98:	mvn	r2, r2, lsl r0
    7d9c:	ldr	r0, [sp, #12]
    7da0:	str	r1, [sp, #8]
    7da4:	tst	r0, r2
    7da8:	beq	7dec <sf_gen_mcode+0xa8>
    7dac:	ldr	r0, [pc, #148]	; 7e48 <sf_gen_mcode+0x104>
    7db0:	mov	r1, r5
    7db4:	mov	r2, r6
    7db8:	add	r0, pc, r0
    7dbc:	bl	1f30 <sf_bpf_error>
    7dc0:	cmp	r7, #33	; 0x21
    7dc4:	bge	7e28 <sf_gen_mcode+0xe4>
    7dc8:	rsb	r2, r7, #32
    7dcc:	mvn	r3, #0
    7dd0:	cmp	r7, #0
    7dd4:	mov	r1, r7
    7dd8:	lslne	r1, r3, r2
    7ddc:	mvn	r2, r1
    7de0:	str	r1, [sp, #8]
    7de4:	tst	r0, r2
    7de8:	bne	7e34 <sf_gen_mcode+0xf0>
    7dec:	uxtb	r2, r4
    7df0:	cmp	r2, #2
    7df4:	bne	7e1c <sf_gen_mcode+0xd8>
    7df8:	lsr	r3, r4, #16
    7dfc:	lsr	r2, r4, #8
    7e00:	mov	r7, #2
    7e04:	uxtb	r2, r2
    7e08:	uxtb	r3, r3
    7e0c:	str	r7, [sp]
    7e10:	bl	6164 <gen_host>
    7e14:	sub	sp, fp, #16
    7e18:	pop	{r4, r5, r6, r7, fp, pc}
    7e1c:	ldr	r0, [pc, #40]	; 7e4c <sf_gen_mcode+0x108>
    7e20:	add	r0, pc, r0
    7e24:	bl	1f30 <sf_bpf_error>
    7e28:	ldr	r0, [pc, #32]	; 7e50 <sf_gen_mcode+0x10c>
    7e2c:	add	r0, pc, r0
    7e30:	bl	1f30 <sf_bpf_error>
    7e34:	ldr	r0, [pc, #24]	; 7e54 <sf_gen_mcode+0x110>
    7e38:	mov	r1, r5
    7e3c:	mov	r2, r7
    7e40:	add	r0, pc, r0
    7e44:	bl	1f30 <sf_bpf_error>
    7e48:	.word	0x0000ac08
    7e4c:	.word	0x0000abff
    7e50:	.word	0x0000abb9
    7e54:	.word	0x0000abbf

00007e58 <sf_gen_ncode>:
    7e58:	push	{r4, r5, r6, r7, fp, lr}
    7e5c:	add	fp, sp, #16
    7e60:	sub	sp, sp, #8
    7e64:	str	r1, [sp, #4]
    7e68:	ubfx	r4, r2, #16, #8
    7e6c:	mov	r7, r2
    7e70:	mov	r6, r0
    7e74:	ubfx	r5, r2, #8, #8
    7e78:	cmp	r0, #0
    7e7c:	beq	7e98 <sf_gen_ncode+0x40>
    7e80:	add	r1, sp, #4
    7e84:	mov	r0, r6
    7e88:	cmp	r5, #12
    7e8c:	bne	7ea0 <sf_gen_ncode+0x48>
    7e90:	bl	bed4 <__pcap_atodn>
    7e94:	b	7ea4 <sf_gen_ncode+0x4c>
    7e98:	mov	r0, #32
    7e9c:	b	7ea4 <sf_gen_ncode+0x4c>
    7ea0:	bl	be70 <__pcap_atoin>
    7ea4:	uxtb	r2, r7
    7ea8:	cmp	r2, #7
    7eac:	bhi	8064 <sf_gen_ncode+0x20c>
    7eb0:	add	r3, pc, #8
    7eb4:	lsr	r1, r7, #8
    7eb8:	ldr	r7, [r3, r2, lsl #2]
    7ebc:	add	pc, r3, r7
    7ec0:	.word	0x00000020
    7ec4:	.word	0x00000020
    7ec8:	.word	0x00000020
    7ecc:	.word	0x0000007c
    7ed0:	.word	0x000001b0
    7ed4:	.word	0x00000144
    7ed8:	.word	0x000000d0
    7edc:	.word	0x000000e0
    7ee0:	uxtb	r1, r1
    7ee4:	cmp	r1, #12
    7ee8:	beq	7f2c <sf_gen_ncode+0xd4>
    7eec:	cmp	r1, #1
    7ef0:	beq	8080 <sf_gen_ncode+0x228>
    7ef4:	cmp	r6, #0
    7ef8:	cmpeq	r2, #2
    7efc:	beq	8024 <sf_gen_ncode+0x1cc>
    7f00:	rsb	r1, r0, #32
    7f04:	ldr	r0, [sp, #4]
    7f08:	mvn	r3, #0
    7f0c:	lsl	r0, r0, r1
    7f10:	lsl	r1, r3, r1
    7f14:	str	r0, [sp, #4]
    7f18:	str	r2, [sp]
    7f1c:	mov	r2, r5
    7f20:	mov	r3, r4
    7f24:	bl	6164 <gen_host>
    7f28:	b	8014 <sf_gen_ncode+0x1bc>
    7f2c:	ldr	r0, [sp, #4]
    7f30:	mov	r1, r4
    7f34:	bl	b5d4 <gen_dnhostop>
    7f38:	b	8014 <sf_gen_ncode+0x1bc>
    7f3c:	uxtb	r0, r1
    7f40:	cmp	r0, #8
    7f44:	bcs	808c <sf_gen_ncode+0x234>
    7f48:	mov	r2, #225	; 0xe1
    7f4c:	mov	r3, #1
    7f50:	tst	r3, r2, lsr r0
    7f54:	beq	808c <sf_gen_ncode+0x234>
    7f58:	lsl	r0, r1, #24
    7f5c:	ldr	r1, [pc, #320]	; 80a4 <sf_gen_ncode+0x24c>
    7f60:	mov	r2, r4
    7f64:	add	r1, pc, r1
    7f68:	ldr	r6, [r1, r0, asr #22]
    7f6c:	ldr	r0, [sp, #4]
    7f70:	mov	r1, r6
    7f74:	bl	71d4 <gen_port>
    7f78:	mov	r5, r0
    7f7c:	ldr	r0, [sp, #4]
    7f80:	mov	r1, r6
    7f84:	mov	r2, r4
    7f88:	bl	7294 <gen_port6>
    7f8c:	b	7ff8 <sf_gen_ncode+0x1a0>
    7f90:	ldr	r0, [sp, #4]
    7f94:	mov	r1, r5
    7f98:	bl	761c <gen_protochain>
    7f9c:	b	8014 <sf_gen_ncode+0x1bc>
    7fa0:	uxtb	r0, r1
    7fa4:	cmp	r0, #8
    7fa8:	bcs	8098 <sf_gen_ncode+0x240>
    7fac:	mov	r2, #225	; 0xe1
    7fb0:	mov	r3, #1
    7fb4:	tst	r3, r2, lsr r0
    7fb8:	beq	8098 <sf_gen_ncode+0x240>
    7fbc:	lsl	r0, r1, #24
    7fc0:	ldr	r1, [pc, #224]	; 80a8 <sf_gen_ncode+0x250>
    7fc4:	mov	r3, r4
    7fc8:	add	r1, pc, r1
    7fcc:	ldr	r6, [r1, r0, asr #22]
    7fd0:	ldr	r0, [sp, #4]
    7fd4:	mov	r1, r0
    7fd8:	mov	r2, r6
    7fdc:	bl	7354 <gen_portrange>
    7fe0:	mov	r5, r0
    7fe4:	ldr	r0, [sp, #4]
    7fe8:	mov	r2, r6
    7fec:	mov	r3, r4
    7ff0:	mov	r1, r0
    7ff4:	bl	7428 <gen_portrange6>
    7ff8:	mov	r1, r5
    7ffc:	bl	3a3c <sf_gen_or>
    8000:	b	8018 <sf_gen_ncode+0x1c0>
    8004:	ldr	r0, [sp, #4]
    8008:	mov	r1, r5
    800c:	mov	r2, r4
    8010:	bl	3f38 <gen_proto>
    8014:	mov	r5, r0
    8018:	mov	r0, r5
    801c:	sub	sp, fp, #16
    8020:	pop	{r4, r5, r6, r7, fp, pc}
    8024:	ldr	r0, [sp, #4]
    8028:	movw	r7, #65534	; 0xfffe
    802c:	mvn	r1, #0
    8030:	movt	r7, #255	; 0xff
    8034:	sub	r3, r0, #1
    8038:	cmp	r3, r7
    803c:	bhi	7f18 <sf_gen_ncode+0xc0>
    8040:	mvn	r3, #0
    8044:	mvn	r7, #-16777216	; 0xff000000
    8048:	mvn	r1, #0
    804c:	add	r6, r3, r0, lsl #8
    8050:	lsl	r1, r1, #8
    8054:	lsl	r0, r0, #8
    8058:	cmp	r6, r7
    805c:	bcc	804c <sf_gen_ncode+0x1f4>
    8060:	b	7f14 <sf_gen_ncode+0xbc>
    8064:	cmp	r2, #255	; 0xff
    8068:	bne	807c <sf_gen_ncode+0x224>
    806c:	bl	2db4 <syntax>
    8070:	ldr	r0, [pc, #52]	; 80ac <sf_gen_ncode+0x254>
    8074:	add	r0, pc, r0
    8078:	bl	1f30 <sf_bpf_error>
    807c:	bl	f74 <abort@plt>
    8080:	ldr	r0, [pc, #40]	; 80b0 <sf_gen_ncode+0x258>
    8084:	add	r0, pc, r0
    8088:	bl	1f30 <sf_bpf_error>
    808c:	ldr	r0, [pc, #32]	; 80b4 <sf_gen_ncode+0x25c>
    8090:	add	r0, pc, r0
    8094:	bl	1f30 <sf_bpf_error>
    8098:	ldr	r0, [pc, #24]	; 80b8 <sf_gen_ncode+0x260>
    809c:	add	r0, pc, r0
    80a0:	bl	1f30 <sf_bpf_error>
    80a4:	.word	0x0000bd24
    80a8:	.word	0x0000bcc0
    80ac:	.word	0x0000a9e4
    80b0:	.word	0x0000a9b9
    80b4:	.word	0x0000a800
    80b8:	.word	0x0000a856

000080bc <sf_gen_mcode6>:
    80bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    80c0:	add	fp, sp, #28
    80c4:	sub	sp, sp, #28
    80c8:	cmp	r1, #0
    80cc:	bne	8214 <sf_gen_mcode6+0x158>
    80d0:	mov	sl, r3
    80d4:	mov	r6, r2
    80d8:	mov	r5, r0
    80dc:	bl	bb70 <pcap_nametoaddrinfo>
    80e0:	cmp	r0, #0
    80e4:	beq	8220 <sf_gen_mcode6+0x164>
    80e8:	mov	r4, r0
    80ec:	ldr	r0, [pc, #360]	; 825c <sf_gen_mcode6+0x1a0>
    80f0:	add	r0, pc, r0
    80f4:	str	r4, [r0]
    80f8:	ldr	r0, [r4, #28]
    80fc:	cmp	r0, #0
    8100:	bne	8230 <sf_gen_mcode6+0x174>
    8104:	cmp	r6, #129	; 0x81
    8108:	str	r5, [sp, #4]
    810c:	bcs	8240 <sf_gen_mcode6+0x184>
    8110:	vmov.i32	q8, #0	; 0x00000000
    8114:	ldr	r8, [r4, #20]
    8118:	add	r7, sp, #8
    811c:	mov	r1, #255	; 0xff
    8120:	mov	r0, r7
    8124:	vst1.64	{d16-d17}, [r7]
    8128:	ubfx	r5, r6, #3, #5
    812c:	mov	r2, r5
    8130:	add	r9, r8, #8
    8134:	bl	ef0 <memset@plt>
    8138:	ands	r0, r6, #7
    813c:	rsbne	r0, r0, #8
    8140:	movne	r1, #255	; 0xff
    8144:	lslne	r0, r1, r0
    8148:	strbne	r0, [r7, r5]
    814c:	ldr	r1, [sp, #8]
    8150:	ldr	r0, [r9]
    8154:	mvn	r1, r1
    8158:	tst	r0, r1
    815c:	ldreq	r1, [sp, #12]
    8160:	ldreq	r0, [r8, #12]
    8164:	mvneq	r1, r1
    8168:	tsteq	r0, r1
    816c:	bne	8194 <sf_gen_mcode6+0xd8>
    8170:	ldr	r1, [sp, #16]
    8174:	ldr	r0, [r8, #16]
    8178:	mvn	r1, r1
    817c:	tst	r0, r1
    8180:	ldreq	r1, [sp, #20]
    8184:	ldreq	r0, [r8, #20]
    8188:	mvneq	r1, r1
    818c:	tsteq	r0, r1
    8190:	beq	81a8 <sf_gen_mcode6+0xec>
    8194:	ldr	r0, [pc, #220]	; 8278 <sf_gen_mcode6+0x1bc>
    8198:	ldr	r1, [sp, #4]
    819c:	mov	r2, r6
    81a0:	add	r0, pc, r0
    81a4:	bl	1f30 <sf_bpf_error>
    81a8:	uxtb	r0, sl
    81ac:	cmp	r0, #2
    81b0:	bcs	81c8 <sf_gen_mcode6+0x10c>
    81b4:	cmp	r6, #128	; 0x80
    81b8:	beq	81cc <sf_gen_mcode6+0x110>
    81bc:	ldr	r0, [pc, #184]	; 827c <sf_gen_mcode6+0x1c0>
    81c0:	add	r0, pc, r0
    81c4:	bl	1f30 <sf_bpf_error>
    81c8:	bne	8250 <sf_gen_mcode6+0x194>
    81cc:	lsr	r2, sl, #8
    81d0:	lsr	r1, sl, #16
    81d4:	str	r0, [sp]
    81d8:	mov	r0, r9
    81dc:	uxtb	r3, r1
    81e0:	uxtb	r2, r2
    81e4:	add	r1, sp, #8
    81e8:	bl	6ee8 <gen_host6>
    81ec:	ldr	r1, [pc, #112]	; 8264 <sf_gen_mcode6+0x1a8>
    81f0:	mov	r5, r0
    81f4:	mov	r0, #0
    81f8:	add	r1, pc, r1
    81fc:	str	r0, [r1]
    8200:	mov	r0, r4
    8204:	bl	f44 <freeaddrinfo@plt>
    8208:	mov	r0, r5
    820c:	sub	sp, fp, #28
    8210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8214:	ldr	r0, [pc, #76]	; 8268 <sf_gen_mcode6+0x1ac>
    8218:	add	r0, pc, r0
    821c:	bl	1f30 <sf_bpf_error>
    8220:	ldr	r0, [pc, #68]	; 826c <sf_gen_mcode6+0x1b0>
    8224:	mov	r1, r5
    8228:	add	r0, pc, r0
    822c:	bl	1f30 <sf_bpf_error>
    8230:	ldr	r0, [pc, #56]	; 8270 <sf_gen_mcode6+0x1b4>
    8234:	mov	r1, r5
    8238:	add	r0, pc, r0
    823c:	bl	1f30 <sf_bpf_error>
    8240:	ldr	r0, [pc, #44]	; 8274 <sf_gen_mcode6+0x1b8>
    8244:	mov	r1, #128	; 0x80
    8248:	add	r0, pc, r0
    824c:	bl	1f30 <sf_bpf_error>
    8250:	ldr	r0, [pc, #8]	; 8260 <sf_gen_mcode6+0x1a4>
    8254:	add	r0, pc, r0
    8258:	bl	1f30 <sf_bpf_error>
    825c:	.word	0x00028334
    8260:	.word	0x0000a884
    8264:	.word	0x0002822c
    8268:	.word	0x0000a85a
    826c:	.word	0x0000a85f
    8270:	.word	0x0000a866
    8274:	.word	0x0000a876
    8278:	.word	0x0000a85f
    827c:	.word	0x0000a85f

00008280 <sf_gen_ecode>:
    8280:	push	{r4, r5, r6, r7, fp, lr}
    8284:	add	fp, sp, #16
    8288:	mov	r4, r0
    828c:	movw	r0, #65534	; 0xfffe
    8290:	and	r0, r1, r0
    8294:	cmp	r0, #256	; 0x100
    8298:	bne	83f4 <sf_gen_ecode+0x174>
    829c:	ldr	r0, [pc, #360]	; 840c <sf_gen_ecode+0x18c>
    82a0:	lsr	r7, r1, #16
    82a4:	ldr	r0, [pc, r0]
    82a8:	cmp	r0, #118	; 0x76
    82ac:	ble	82fc <sf_gen_ecode+0x7c>
    82b0:	sub	r1, r0, #119	; 0x77
    82b4:	cmp	r1, #8
    82b8:	bhi	831c <sf_gen_ecode+0x9c>
    82bc:	add	r0, pc, #4
    82c0:	ldr	r1, [r0, r1, lsl #2]
    82c4:	add	pc, r0, r1
    82c8:	.word	0x0000011c
    82cc:	.word	0x00000138
    82d0:	.word	0x00000138
    82d4:	.word	0x00000024
    82d8:	.word	0x0000007c
    82dc:	.word	0x00000138
    82e0:	.word	0x00000138
    82e4:	.word	0x00000138
    82e8:	.word	0x0000011c
    82ec:	uxtb	r1, r7
    82f0:	mov	r0, r4
    82f4:	pop	{r4, r5, r6, r7, fp, lr}
    82f8:	b	6e08 <gen_ipfchostop>
    82fc:	cmp	r0, #9
    8300:	bgt	832c <sf_gen_ecode+0xac>
    8304:	cmp	r0, #1
    8308:	bne	83c4 <sf_gen_ecode+0x144>
    830c:	uxtb	r1, r7
    8310:	mov	r0, r4
    8314:	pop	{r4, r5, r6, r7, fp, lr}
    8318:	b	6508 <gen_ehostop>
    831c:	cmp	r0, #163	; 0xa3
    8320:	cmpne	r0, #192	; 0xc0
    8324:	beq	83e4 <sf_gen_ecode+0x164>
    8328:	b	8400 <sf_gen_ecode+0x180>
    832c:	cmp	r0, #10
    8330:	bne	83dc <sf_gen_ecode+0x15c>
    8334:	uxtb	r1, r7
    8338:	mov	r0, r4
    833c:	pop	{r4, r5, r6, r7, fp, lr}
    8340:	b	6620 <gen_fhostop>
    8344:	ldr	r0, [pc, #200]	; 8414 <sf_gen_ecode+0x194>
    8348:	add	r0, pc, r0
    834c:	ldrb	r0, [r0]
    8350:	cmp	r0, #1
    8354:	bne	83f4 <sf_gen_ecode+0x174>
    8358:	mov	r0, #1
    835c:	mov	r1, #4
    8360:	mov	r2, #8
    8364:	bl	98e8 <gen_load_a>
    8368:	mov	r5, r0
    836c:	mov	r0, #208	; 0xd0
    8370:	bl	1fbc <newchunk>
    8374:	mov	r6, r0
    8378:	mov	r1, #65280	; 0xff00
    837c:	mov	r0, #21
    8380:	str	r1, [r6, #20]
    8384:	str	r5, [r6, #4]
    8388:	str	r0, [r6, #8]
    838c:	uxtb	r1, r7
    8390:	ldr	r0, [r6, #44]	; 0x2c
    8394:	clz	r0, r0
    8398:	lsr	r0, r0, #5
    839c:	str	r0, [r6, #44]	; 0x2c
    83a0:	mov	r0, r4
    83a4:	str	r6, [r6, #96]	; 0x60
    83a8:	bl	6508 <gen_ehostop>
    83ac:	mov	r4, r0
    83b0:	mov	r0, r6
    83b4:	mov	r1, r4
    83b8:	bl	3964 <sf_gen_and>
    83bc:	mov	r0, r4
    83c0:	pop	{r4, r5, r6, r7, fp, pc}
    83c4:	cmp	r0, #6
    83c8:	bne	8400 <sf_gen_ecode+0x180>
    83cc:	uxtb	r1, r7
    83d0:	mov	r0, r4
    83d4:	pop	{r4, r5, r6, r7, fp, lr}
    83d8:	b	6700 <gen_thostop>
    83dc:	cmp	r0, #105	; 0x69
    83e0:	bne	8400 <sf_gen_ecode+0x180>
    83e4:	uxtb	r1, r7
    83e8:	mov	r0, r4
    83ec:	pop	{r4, r5, r6, r7, fp, lr}
    83f0:	b	67e0 <gen_wlanhostop>
    83f4:	ldr	r0, [pc, #28]	; 8418 <sf_gen_ecode+0x198>
    83f8:	add	r0, pc, r0
    83fc:	bl	1f30 <sf_bpf_error>
    8400:	ldr	r0, [pc, #8]	; 8410 <sf_gen_ecode+0x190>
    8404:	add	r0, pc, r0
    8408:	bl	1f30 <sf_bpf_error>
    840c:	.word	0x0002818c
    8410:	.word	0x0000a6fb
    8414:	.word	0x000280ec
    8418:	.word	0x0000a763

0000841c <sf_append>:
    841c:	mov	r2, r0
    8420:	ldr	r0, [r0, #16]
    8424:	cmp	r0, #0
    8428:	bne	841c <sf_append>
    842c:	str	r1, [r2, #16]
    8430:	bx	lr

00008434 <sf_gen_load>:
    8434:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    8438:	add	fp, sp, #24
    843c:	mov	r7, r2
    8440:	mov	r4, r1
    8444:	mov	r6, r0
    8448:	bl	8974 <alloc_reg>
    844c:	mov	r8, r0
    8450:	ldr	r0, [r4, #8]
    8454:	ldr	r1, [pc, #1264]	; 894c <sf_gen_load+0x518>
    8458:	cmp	r7, #1
    845c:	mov	r2, #0
    8460:	add	r1, pc, r1
    8464:	str	r2, [r1, r0, lsl #2]
    8468:	beq	848c <sf_gen_load+0x58>
    846c:	cmp	r7, #2
    8470:	beq	8484 <sf_gen_load+0x50>
    8474:	cmp	r7, #4
    8478:	bne	8934 <sf_gen_load+0x500>
    847c:	mov	r5, #64	; 0x40
    8480:	b	8490 <sf_gen_load+0x5c>
    8484:	mov	r5, #72	; 0x48
    8488:	b	8490 <sf_gen_load+0x5c>
    848c:	mov	r5, #80	; 0x50
    8490:	sub	r0, r6, #1
    8494:	cmp	r0, #39	; 0x27
    8498:	bhi	8928 <sf_gen_load+0x4f4>
    849c:	add	r1, pc, #4
    84a0:	ldr	r0, [r1, r0, lsl #2]
    84a4:	add	pc, r1, r0
    84a8:	.word	0x0000037c
    84ac:	.word	0x000000a0
    84b0:	.word	0x000000a0
    84b4:	.word	0x000000a0
    84b8:	.word	0x00000134
    84bc:	.word	0x00000134
    84c0:	.word	0x00000134
    84c4:	.word	0x00000134
    84c8:	.word	0x00000134
    84cc:	.word	0x00000134
    84d0:	.word	0x000000a0
    84d4:	.word	0x000000a0
    84d8:	.word	0x000000a0
    84dc:	.word	0x000000a0
    84e0:	.word	0x000000a0
    84e4:	.word	0x000000a0
    84e8:	.word	0x000000a0
    84ec:	.word	0x00000498
    84f0:	.word	0x00000480
    84f4:	.word	0x00000480
    84f8:	.word	0x00000134
    84fc:	.word	0x00000134
    8500:	.word	0x00000480
    8504:	.word	0x00000480
    8508:	.word	0x00000480
    850c:	.word	0x00000480
    8510:	.word	0x00000480
    8514:	.word	0x00000480
    8518:	.word	0x00000480
    851c:	.word	0x00000480
    8520:	.word	0x00000480
    8524:	.word	0x00000480
    8528:	.word	0x00000480
    852c:	.word	0x00000480
    8530:	.word	0x00000480
    8534:	.word	0x00000480
    8538:	.word	0x00000480
    853c:	.word	0x00000480
    8540:	.word	0x00000480
    8544:	.word	0x00000310
    8548:	bl	8a78 <gen_off_macpl>
    854c:	mov	r7, r0
    8550:	mov	r0, #20
    8554:	bl	1fbc <newchunk>
    8558:	cmp	r7, #0
    855c:	beq	86f4 <sf_gen_load+0x2c0>
    8560:	mov	r1, #96	; 0x60
    8564:	mov	r2, r7
    8568:	str	r1, [r0]
    856c:	ldr	r1, [r4, #8]
    8570:	str	r1, [r0, #12]
    8574:	mov	r1, r2
    8578:	ldr	r2, [r2, #16]
    857c:	cmp	r2, #0
    8580:	bne	8574 <sf_gen_load+0x140>
    8584:	str	r0, [r1, #16]
    8588:	mov	r0, #20
    858c:	bl	1fbc <newchunk>
    8590:	mov	r1, #12
    8594:	mov	r2, r7
    8598:	str	r1, [r0]
    859c:	mov	r1, r2
    85a0:	ldr	r2, [r2, #16]
    85a4:	cmp	r2, #0
    85a8:	bne	859c <sf_gen_load+0x168>
    85ac:	str	r0, [r1, #16]
    85b0:	mov	r0, #20
    85b4:	bl	1fbc <newchunk>
    85b8:	mov	r1, #7
    85bc:	mov	r2, r7
    85c0:	str	r1, [r0]
    85c4:	mov	r1, r2
    85c8:	ldr	r2, [r2, #16]
    85cc:	cmp	r2, #0
    85d0:	bne	85c4 <sf_gen_load+0x190>
    85d4:	str	r0, [r1, #16]
    85d8:	b	8708 <sf_gen_load+0x2d4>
    85dc:	bl	8ae8 <gen_loadx_iphdrlen>
    85e0:	mov	r7, r0
    85e4:	mov	r0, #20
    85e8:	bl	1fbc <newchunk>
    85ec:	mov	r1, #96	; 0x60
    85f0:	mov	r2, r7
    85f4:	str	r1, [r0]
    85f8:	ldr	r1, [r4, #8]
    85fc:	str	r1, [r0, #12]
    8600:	mov	r1, r2
    8604:	ldr	r2, [r2, #16]
    8608:	cmp	r2, #0
    860c:	bne	8600 <sf_gen_load+0x1cc>
    8610:	str	r0, [r1, #16]
    8614:	mov	r0, #20
    8618:	bl	1fbc <newchunk>
    861c:	mov	r1, #12
    8620:	mov	r2, r7
    8624:	str	r1, [r0]
    8628:	mov	r1, r2
    862c:	ldr	r2, [r2, #16]
    8630:	cmp	r2, #0
    8634:	bne	8628 <sf_gen_load+0x1f4>
    8638:	str	r0, [r1, #16]
    863c:	mov	r0, #20
    8640:	bl	1fbc <newchunk>
    8644:	mov	r1, #7
    8648:	mov	r2, r7
    864c:	str	r1, [r0]
    8650:	mov	r1, r2
    8654:	ldr	r2, [r2, #16]
    8658:	cmp	r2, #0
    865c:	bne	8650 <sf_gen_load+0x21c>
    8660:	str	r0, [r1, #16]
    8664:	mov	r0, #20
    8668:	bl	1fbc <newchunk>
    866c:	mov	r2, r7
    8670:	str	r5, [r0]
    8674:	mov	r1, r2
    8678:	ldr	r2, [r2, #16]
    867c:	cmp	r2, #0
    8680:	bne	8674 <sf_gen_load+0x240>
    8684:	str	r0, [r1, #16]
    8688:	ldr	r1, [pc, #724]	; 8964 <sf_gen_load+0x530>
    868c:	ldr	r1, [pc, r1]
    8690:	ldr	r2, [pc, #720]	; 8968 <sf_gen_load+0x534>
    8694:	ldr	r2, [pc, r2]
    8698:	add	r1, r2, r1
    869c:	str	r1, [r0, #12]
    86a0:	ldr	r0, [r4, #4]
    86a4:	mov	r1, r0
    86a8:	ldr	r0, [r0, #16]
    86ac:	cmp	r0, #0
    86b0:	bne	86a4 <sf_gen_load+0x270>
    86b4:	mov	r0, r6
    86b8:	str	r7, [r1, #16]
    86bc:	bl	3b08 <sf_gen_proto_abbrev>
    86c0:	mov	r7, r0
    86c4:	bl	53e4 <gen_ipfrag>
    86c8:	mov	r6, r0
    86cc:	mov	r0, r7
    86d0:	mov	r1, r6
    86d4:	bl	3964 <sf_gen_and>
    86d8:	ldr	r0, [r4]
    86dc:	cmp	r0, #0
    86e0:	movne	r1, r6
    86e4:	blne	3964 <sf_gen_and>
    86e8:	mov	r0, #2048	; 0x800
    86ec:	bl	4334 <gen_linktype>
    86f0:	b	8774 <sf_gen_load+0x340>
    86f4:	mov	r1, #97	; 0x61
    86f8:	mov	r7, r0
    86fc:	str	r1, [r0]
    8700:	ldr	r1, [r4, #8]
    8704:	str	r1, [r0, #12]
    8708:	mov	r0, #20
    870c:	bl	1fbc <newchunk>
    8710:	str	r5, [r0]
    8714:	ldr	r1, [pc, #576]	; 895c <sf_gen_load+0x528>
    8718:	ldr	r1, [pc, r1]
    871c:	ldr	r2, [pc, #572]	; 8960 <sf_gen_load+0x52c>
    8720:	ldr	r2, [pc, r2]
    8724:	add	r1, r2, r1
    8728:	mov	r2, r7
    872c:	str	r1, [r0, #12]
    8730:	mov	r1, r2
    8734:	ldr	r2, [r2, #16]
    8738:	cmp	r2, #0
    873c:	bne	8730 <sf_gen_load+0x2fc>
    8740:	str	r0, [r1, #16]
    8744:	ldr	r0, [r4, #4]
    8748:	mov	r1, r0
    874c:	ldr	r0, [r0, #16]
    8750:	cmp	r0, #0
    8754:	bne	8748 <sf_gen_load+0x314>
    8758:	mov	r0, r6
    875c:	str	r7, [r1, #16]
    8760:	bl	3b08 <sf_gen_proto_abbrev>
    8764:	mov	r6, r0
    8768:	ldr	r0, [r4]
    876c:	cmp	r0, #0
    8770:	beq	877c <sf_gen_load+0x348>
    8774:	mov	r1, r6
    8778:	bl	3964 <sf_gen_and>
    877c:	str	r6, [r4]
    8780:	mov	r0, #20
    8784:	str	r8, [r4, #8]
    8788:	bl	1fbc <newchunk>
    878c:	mov	r1, #2
    8790:	str	r8, [r0, #12]
    8794:	str	r1, [r0]
    8798:	ldr	r1, [r4, #4]
    879c:	mov	r2, r1
    87a0:	ldr	r1, [r1, #16]
    87a4:	cmp	r1, #0
    87a8:	bne	879c <sf_gen_load+0x368>
    87ac:	str	r0, [r2, #16]
    87b0:	mov	r0, r4
    87b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    87b8:	ldr	r0, [pc, #408]	; 8958 <sf_gen_load+0x524>
    87bc:	ldr	r0, [pc, r0]
    87c0:	cmp	r0, #119	; 0x77
    87c4:	cmpne	r0, #127	; 0x7f
    87c8:	bne	8914 <sf_gen_load+0x4e0>
    87cc:	mov	r0, #20
    87d0:	bl	1fbc <newchunk>
    87d4:	mov	r6, r0
    87d8:	mov	r0, #97	; 0x61
    87dc:	str	r0, [r6]
    87e0:	ldr	r0, [r4, #8]
    87e4:	str	r0, [r6, #12]
    87e8:	mov	r0, #20
    87ec:	bl	1fbc <newchunk>
    87f0:	mov	r2, r6
    87f4:	str	r5, [r0]
    87f8:	mov	r1, r2
    87fc:	ldr	r2, [r2, #16]
    8800:	cmp	r2, #0
    8804:	bne	87f8 <sf_gen_load+0x3c4>
    8808:	str	r0, [r1, #16]
    880c:	ldr	r0, [r4, #4]
    8810:	mov	r1, r0
    8814:	ldr	r0, [r0, #16]
    8818:	cmp	r0, #0
    881c:	bne	8810 <sf_gen_load+0x3dc>
    8820:	b	890c <sf_gen_load+0x4d8>
    8824:	bl	89ec <gen_llprefixlen>
    8828:	mov	r6, r0
    882c:	mov	r0, #20
    8830:	bl	1fbc <newchunk>
    8834:	cmp	r6, #0
    8838:	beq	88b8 <sf_gen_load+0x484>
    883c:	mov	r1, #96	; 0x60
    8840:	mov	r2, r6
    8844:	str	r1, [r0]
    8848:	ldr	r1, [r4, #8]
    884c:	str	r1, [r0, #12]
    8850:	mov	r1, r2
    8854:	ldr	r2, [r2, #16]
    8858:	cmp	r2, #0
    885c:	bne	8850 <sf_gen_load+0x41c>
    8860:	str	r0, [r1, #16]
    8864:	mov	r0, #20
    8868:	bl	1fbc <newchunk>
    886c:	mov	r1, #12
    8870:	mov	r2, r6
    8874:	str	r1, [r0]
    8878:	mov	r1, r2
    887c:	ldr	r2, [r2, #16]
    8880:	cmp	r2, #0
    8884:	bne	8878 <sf_gen_load+0x444>
    8888:	str	r0, [r1, #16]
    888c:	mov	r0, #20
    8890:	bl	1fbc <newchunk>
    8894:	mov	r1, #7
    8898:	mov	r2, r6
    889c:	str	r1, [r0]
    88a0:	mov	r1, r2
    88a4:	ldr	r2, [r2, #16]
    88a8:	cmp	r2, #0
    88ac:	bne	88a0 <sf_gen_load+0x46c>
    88b0:	str	r0, [r1, #16]
    88b4:	b	88cc <sf_gen_load+0x498>
    88b8:	mov	r1, #97	; 0x61
    88bc:	mov	r6, r0
    88c0:	str	r1, [r0]
    88c4:	ldr	r1, [r4, #8]
    88c8:	str	r1, [r0, #12]
    88cc:	mov	r0, #20
    88d0:	bl	1fbc <newchunk>
    88d4:	mov	r1, #0
    88d8:	mov	r2, r6
    88dc:	str	r1, [r0, #12]
    88e0:	str	r5, [r0]
    88e4:	mov	r1, r2
    88e8:	ldr	r2, [r2, #16]
    88ec:	cmp	r2, #0
    88f0:	bne	88e4 <sf_gen_load+0x4b0>
    88f4:	str	r0, [r1, #16]
    88f8:	ldr	r0, [r4, #4]
    88fc:	mov	r1, r0
    8900:	ldr	r0, [r0, #16]
    8904:	cmp	r0, #0
    8908:	bne	88fc <sf_gen_load+0x4c8>
    890c:	str	r6, [r1, #16]
    8910:	b	8780 <sf_gen_load+0x34c>
    8914:	cmp	r0, #163	; 0xa3
    8918:	beq	87cc <sf_gen_load+0x398>
    891c:	ldr	r0, [pc, #76]	; 8970 <sf_gen_load+0x53c>
    8920:	add	r0, pc, r0
    8924:	bl	1f30 <sf_bpf_error>
    8928:	ldr	r0, [pc, #36]	; 8954 <sf_gen_load+0x520>
    892c:	add	r0, pc, r0
    8930:	bl	1f30 <sf_bpf_error>
    8934:	ldr	r0, [pc, #20]	; 8950 <sf_gen_load+0x51c>
    8938:	add	r0, pc, r0
    893c:	bl	1f30 <sf_bpf_error>
    8940:	ldr	r0, [pc, #36]	; 896c <sf_gen_load+0x538>
    8944:	add	r0, pc, r0
    8948:	bl	1f30 <sf_bpf_error>
    894c:	.word	0x000280b0
    8950:	.word	0x0000a251
    8954:	.word	0x0000a27a
    8958:	.word	0x00027c74
    895c:	.word	0x00027d24
    8960:	.word	0x00027d20
    8964:	.word	0x00027db0
    8968:	.word	0x00027dac
    896c:	.word	0x0000a2a7
    8970:	.word	0x0000a2a2

00008974 <alloc_reg>:
    8974:	push	{fp, lr}
    8978:	mov	fp, sp
    897c:	ldr	r0, [pc, #88]	; 89dc <alloc_reg+0x68>
    8980:	mvn	r2, #15
    8984:	ldr	r0, [pc, r0]
    8988:	ldr	ip, [pc, #80]	; 89e0 <alloc_reg+0x6c>
    898c:	ldr	r3, [pc, #80]	; 89e4 <alloc_reg+0x70>
    8990:	add	ip, pc, ip
    8994:	add	r3, pc, r3
    8998:	ldr	r1, [ip, r0, lsl #2]
    899c:	cmp	r1, #0
    89a0:	beq	89d0 <alloc_reg+0x5c>
    89a4:	add	r0, r0, #1
    89a8:	adds	r2, r2, #1
    89ac:	asr	r1, r0, #31
    89b0:	add	r1, r0, r1, lsr #28
    89b4:	bic	r1, r1, #15
    89b8:	sub	r0, r0, r1
    89bc:	str	r0, [r3]
    89c0:	bcc	8998 <alloc_reg+0x24>
    89c4:	ldr	r0, [pc, #28]	; 89e8 <alloc_reg+0x74>
    89c8:	add	r0, pc, r0
    89cc:	bl	1f30 <sf_bpf_error>
    89d0:	mov	r1, #1
    89d4:	str	r1, [ip, r0, lsl #2]
    89d8:	pop	{fp, pc}
    89dc:	.word	0x00027b88
    89e0:	.word	0x00027b80
    89e4:	.word	0x00027b78
    89e8:	.word	0x0000b28d

000089ec <gen_llprefixlen>:
    89ec:	push	{fp, lr}
    89f0:	mov	fp, sp
    89f4:	ldr	r1, [pc, #108]	; 8a68 <gen_llprefixlen+0x7c>
    89f8:	mov	r0, #0
    89fc:	ldr	r1, [pc, r1]
    8a00:	cmp	r1, #162	; 0xa2
    8a04:	bgt	8a1c <gen_llprefixlen+0x30>
    8a08:	cmp	r1, #119	; 0x77
    8a0c:	beq	8a28 <gen_llprefixlen+0x3c>
    8a10:	cmp	r1, #127	; 0x7f
    8a14:	beq	8a28 <gen_llprefixlen+0x3c>
    8a18:	pop	{fp, pc}
    8a1c:	cmp	r1, #163	; 0xa3
    8a20:	cmpne	r1, #192	; 0xc0
    8a24:	bne	8a18 <gen_llprefixlen+0x2c>
    8a28:	ldr	r0, [pc, #60]	; 8a6c <gen_llprefixlen+0x80>
    8a2c:	ldr	r0, [pc, r0]
    8a30:	cmn	r0, #1
    8a34:	bne	8a48 <gen_llprefixlen+0x5c>
    8a38:	bl	8974 <alloc_reg>
    8a3c:	ldr	r1, [pc, #44]	; 8a70 <gen_llprefixlen+0x84>
    8a40:	add	r1, pc, r1
    8a44:	str	r0, [r1]
    8a48:	mov	r0, #20
    8a4c:	bl	1fbc <newchunk>
    8a50:	mov	r1, #97	; 0x61
    8a54:	str	r1, [r0]
    8a58:	ldr	r1, [pc, #20]	; 8a74 <gen_llprefixlen+0x88>
    8a5c:	ldr	r1, [pc, r1]
    8a60:	str	r1, [r0, #12]
    8a64:	pop	{fp, pc}
    8a68:	.word	0x00027a34
    8a6c:	.word	0x00027ad8
    8a70:	.word	0x00027ac4
    8a74:	.word	0x00027aa8

00008a78 <gen_off_macpl>:
    8a78:	push	{fp, lr}
    8a7c:	mov	fp, sp
    8a80:	ldr	r0, [pc, #80]	; 8ad8 <gen_off_macpl+0x60>
    8a84:	add	r0, pc, r0
    8a88:	ldrb	r1, [r0]
    8a8c:	mov	r0, #0
    8a90:	cmp	r1, #1
    8a94:	popne	{fp, pc}
    8a98:	ldr	r0, [pc, #60]	; 8adc <gen_off_macpl+0x64>
    8a9c:	ldr	r0, [pc, r0]
    8aa0:	cmn	r0, #1
    8aa4:	bne	8ab8 <gen_off_macpl+0x40>
    8aa8:	bl	8974 <alloc_reg>
    8aac:	ldr	r1, [pc, #44]	; 8ae0 <gen_off_macpl+0x68>
    8ab0:	add	r1, pc, r1
    8ab4:	str	r0, [r1]
    8ab8:	mov	r0, #20
    8abc:	bl	1fbc <newchunk>
    8ac0:	mov	r1, #97	; 0x61
    8ac4:	str	r1, [r0]
    8ac8:	ldr	r1, [pc, #20]	; 8ae4 <gen_off_macpl+0x6c>
    8acc:	ldr	r1, [pc, r1]
    8ad0:	str	r1, [r0, #12]
    8ad4:	pop	{fp, pc}
    8ad8:	.word	0x00027a7c
    8adc:	.word	0x00027a6c
    8ae0:	.word	0x00027a58
    8ae4:	.word	0x00027a3c

00008ae8 <gen_loadx_iphdrlen>:
    8ae8:	push	{r4, sl, fp, lr}
    8aec:	add	fp, sp, #8
    8af0:	bl	8a78 <gen_off_macpl>
    8af4:	mov	r4, r0
    8af8:	mov	r0, #20
    8afc:	bl	1fbc <newchunk>
    8b00:	cmp	r4, #0
    8b04:	beq	8be8 <gen_loadx_iphdrlen+0x100>
    8b08:	mov	r1, #80	; 0x50
    8b0c:	mov	r2, r4
    8b10:	str	r1, [r0]
    8b14:	ldr	r1, [pc, #248]	; 8c14 <gen_loadx_iphdrlen+0x12c>
    8b18:	ldr	r1, [pc, r1]
    8b1c:	str	r1, [r0, #12]
    8b20:	mov	r1, r2
    8b24:	ldr	r2, [r2, #16]
    8b28:	cmp	r2, #0
    8b2c:	bne	8b20 <gen_loadx_iphdrlen+0x38>
    8b30:	str	r0, [r1, #16]
    8b34:	mov	r0, #20
    8b38:	bl	1fbc <newchunk>
    8b3c:	mov	r1, #15
    8b40:	mov	r2, r4
    8b44:	str	r1, [r0, #12]
    8b48:	mov	r1, #84	; 0x54
    8b4c:	str	r1, [r0]
    8b50:	mov	r1, r2
    8b54:	ldr	r2, [r2, #16]
    8b58:	cmp	r2, #0
    8b5c:	bne	8b50 <gen_loadx_iphdrlen+0x68>
    8b60:	str	r0, [r1, #16]
    8b64:	mov	r0, #20
    8b68:	bl	1fbc <newchunk>
    8b6c:	mov	r1, #2
    8b70:	mov	r2, r4
    8b74:	str	r1, [r0, #12]
    8b78:	mov	r1, #100	; 0x64
    8b7c:	str	r1, [r0]
    8b80:	mov	r1, r2
    8b84:	ldr	r2, [r2, #16]
    8b88:	cmp	r2, #0
    8b8c:	bne	8b80 <gen_loadx_iphdrlen+0x98>
    8b90:	str	r0, [r1, #16]
    8b94:	mov	r0, #20
    8b98:	bl	1fbc <newchunk>
    8b9c:	mov	r1, #12
    8ba0:	mov	r2, r4
    8ba4:	str	r1, [r0]
    8ba8:	mov	r1, r2
    8bac:	ldr	r2, [r2, #16]
    8bb0:	cmp	r2, #0
    8bb4:	bne	8ba8 <gen_loadx_iphdrlen+0xc0>
    8bb8:	str	r0, [r1, #16]
    8bbc:	mov	r0, #20
    8bc0:	bl	1fbc <newchunk>
    8bc4:	mov	r1, #7
    8bc8:	mov	r2, r4
    8bcc:	str	r1, [r0]
    8bd0:	mov	r1, r2
    8bd4:	ldr	r2, [r2, #16]
    8bd8:	cmp	r2, #0
    8bdc:	bne	8bd0 <gen_loadx_iphdrlen+0xe8>
    8be0:	str	r0, [r1, #16]
    8be4:	b	8c0c <gen_loadx_iphdrlen+0x124>
    8be8:	mov	r1, #177	; 0xb1
    8bec:	mov	r4, r0
    8bf0:	str	r1, [r0]
    8bf4:	ldr	r1, [pc, #28]	; 8c18 <gen_loadx_iphdrlen+0x130>
    8bf8:	ldr	r1, [pc, r1]
    8bfc:	ldr	r2, [pc, #24]	; 8c1c <gen_loadx_iphdrlen+0x134>
    8c00:	ldr	r2, [pc, r2]
    8c04:	add	r1, r2, r1
    8c08:	str	r1, [r0, #12]
    8c0c:	mov	r0, r4
    8c10:	pop	{r4, sl, fp, pc}
    8c14:	.word	0x00027928
    8c18:	.word	0x00027844
    8c1c:	.word	0x00027840

00008c20 <sf_gen_relation>:
    8c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c24:	add	fp, sp, #28
    8c28:	sub	sp, sp, #4
    8c2c:	mov	r6, r0
    8c30:	mov	r0, #20
    8c34:	mov	r9, r3
    8c38:	mov	r5, r2
    8c3c:	mov	r8, r1
    8c40:	bl	1fbc <newchunk>
    8c44:	mov	r7, r0
    8c48:	mov	r0, #97	; 0x61
    8c4c:	str	r0, [r7]
    8c50:	ldr	r0, [r5, #8]
    8c54:	str	r0, [r7, #12]
    8c58:	mov	r0, #20
    8c5c:	bl	1fbc <newchunk>
    8c60:	mov	r4, r0
    8c64:	mov	r0, #96	; 0x60
    8c68:	cmp	r6, #16
    8c6c:	str	r0, [r4]
    8c70:	ldr	r0, [r8, #8]
    8c74:	str	r0, [r4, #12]
    8c78:	bne	8cc4 <sf_gen_relation+0xa4>
    8c7c:	mov	r0, #20
    8c80:	bl	1fbc <newchunk>
    8c84:	mov	sl, r0
    8c88:	mov	r0, #28
    8c8c:	str	r0, [sl]
    8c90:	mov	r0, #208	; 0xd0
    8c94:	bl	1fbc <newchunk>
    8c98:	mov	r6, r0
    8c9c:	mov	r0, #21
    8ca0:	mov	r1, r4
    8ca4:	str	r0, [r6, #8]
    8ca8:	str	r6, [r6, #96]	; 0x60
    8cac:	mov	r0, r1
    8cb0:	ldr	r1, [r1, #16]
    8cb4:	cmp	r1, #0
    8cb8:	bne	8cac <sf_gen_relation+0x8c>
    8cbc:	str	sl, [r0, #16]
    8cc0:	b	8cdc <sf_gen_relation+0xbc>
    8cc4:	mov	r0, #208	; 0xd0
    8cc8:	orr	sl, r6, #13
    8ccc:	bl	1fbc <newchunk>
    8cd0:	mov	r6, r0
    8cd4:	str	sl, [r0, #8]
    8cd8:	str	r0, [r0, #96]	; 0x60
    8cdc:	cmp	r9, #0
    8ce0:	beq	8cf4 <sf_gen_relation+0xd4>
    8ce4:	ldr	r0, [r6, #44]	; 0x2c
    8ce8:	clz	r0, r0
    8cec:	lsr	r0, r0, #5
    8cf0:	str	r0, [r6, #44]	; 0x2c
    8cf4:	mov	r1, r7
    8cf8:	mov	r0, r1
    8cfc:	ldr	r1, [r1, #16]
    8d00:	cmp	r1, #0
    8d04:	bne	8cf8 <sf_gen_relation+0xd8>
    8d08:	str	r4, [r0, #16]
    8d0c:	ldr	r0, [r5, #4]
    8d10:	mov	r1, r0
    8d14:	ldr	r0, [r0, #16]
    8d18:	cmp	r0, #0
    8d1c:	bne	8d10 <sf_gen_relation+0xf0>
    8d20:	str	r7, [r1, #16]
    8d24:	ldr	r0, [r5, #4]
    8d28:	ldr	r1, [r8, #4]
    8d2c:	mov	r2, r1
    8d30:	ldr	r1, [r1, #16]
    8d34:	cmp	r1, #0
    8d38:	bne	8d2c <sf_gen_relation+0x10c>
    8d3c:	str	r0, [r2, #16]
    8d40:	mov	r2, #0
    8d44:	ldr	r0, [r8, #4]
    8d48:	str	r0, [r6, #4]
    8d4c:	ldr	r0, [r8, #8]
    8d50:	ldr	r1, [pc, #88]	; 8db0 <sf_gen_relation+0x190>
    8d54:	add	r1, pc, r1
    8d58:	str	r2, [r1, r0, lsl #2]
    8d5c:	ldr	r0, [r5, #8]
    8d60:	str	r2, [r1, r0, lsl #2]
    8d64:	ldr	r0, [r8]
    8d68:	ldr	r4, [r5]
    8d6c:	cmp	r0, #0
    8d70:	beq	8d88 <sf_gen_relation+0x168>
    8d74:	cmp	r4, #0
    8d78:	beq	8d94 <sf_gen_relation+0x174>
    8d7c:	mov	r1, r4
    8d80:	bl	3964 <sf_gen_and>
    8d84:	b	8d98 <sf_gen_relation+0x178>
    8d88:	cmp	r4, #0
    8d8c:	bne	8d98 <sf_gen_relation+0x178>
    8d90:	b	8da4 <sf_gen_relation+0x184>
    8d94:	mov	r4, r0
    8d98:	mov	r0, r4
    8d9c:	mov	r1, r6
    8da0:	bl	3964 <sf_gen_and>
    8da4:	mov	r0, r6
    8da8:	sub	sp, fp, #28
    8dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8db0:	.word	0x000277bc

00008db4 <sf_gen_loadlen>:
    8db4:	push	{r4, r5, r6, sl, fp, lr}
    8db8:	add	fp, sp, #16
    8dbc:	bl	8974 <alloc_reg>
    8dc0:	mov	r4, r0
    8dc4:	mov	r0, #12
    8dc8:	bl	1fbc <newchunk>
    8dcc:	mov	r5, r0
    8dd0:	mov	r0, #20
    8dd4:	bl	1fbc <newchunk>
    8dd8:	mov	r6, r0
    8ddc:	mov	r0, #128	; 0x80
    8de0:	str	r0, [r6]
    8de4:	mov	r0, #20
    8de8:	bl	1fbc <newchunk>
    8dec:	mov	r1, #2
    8df0:	str	r1, [r0]
    8df4:	str	r0, [r6, #16]
    8df8:	str	r4, [r0, #12]
    8dfc:	mov	r0, r5
    8e00:	str	r6, [r5, #4]
    8e04:	str	r4, [r5, #8]
    8e08:	pop	{r4, r5, r6, sl, fp, pc}

00008e0c <sf_gen_loadi>:
    8e0c:	push	{r4, r5, r6, r7, fp, lr}
    8e10:	add	fp, sp, #16
    8e14:	mov	r4, r0
    8e18:	mov	r0, #12
    8e1c:	bl	1fbc <newchunk>
    8e20:	mov	r5, r0
    8e24:	bl	8974 <alloc_reg>
    8e28:	mov	r6, r0
    8e2c:	mov	r0, #20
    8e30:	bl	1fbc <newchunk>
    8e34:	mov	r7, r0
    8e38:	str	r4, [r0, #12]
    8e3c:	mov	r0, #0
    8e40:	str	r0, [r7]
    8e44:	mov	r0, #20
    8e48:	bl	1fbc <newchunk>
    8e4c:	mov	r1, #2
    8e50:	str	r1, [r0]
    8e54:	str	r0, [r7, #16]
    8e58:	str	r6, [r0, #12]
    8e5c:	mov	r0, r5
    8e60:	str	r7, [r5, #4]
    8e64:	str	r6, [r5, #8]
    8e68:	pop	{r4, r5, r6, r7, fp, pc}

00008e6c <sf_gen_neg>:
    8e6c:	push	{r4, sl, fp, lr}
    8e70:	add	fp, sp, #8
    8e74:	mov	r4, r0
    8e78:	mov	r0, #20
    8e7c:	bl	1fbc <newchunk>
    8e80:	mov	r1, #96	; 0x60
    8e84:	str	r1, [r0]
    8e88:	ldr	r1, [r4, #8]
    8e8c:	str	r1, [r0, #12]
    8e90:	ldr	r1, [r4, #4]
    8e94:	mov	r2, r1
    8e98:	ldr	r1, [r1, #16]
    8e9c:	cmp	r1, #0
    8ea0:	bne	8e94 <sf_gen_neg+0x28>
    8ea4:	str	r0, [r2, #16]
    8ea8:	mov	r0, #20
    8eac:	bl	1fbc <newchunk>
    8eb0:	mov	r1, #0
    8eb4:	str	r1, [r0, #12]
    8eb8:	mov	r1, #132	; 0x84
    8ebc:	str	r1, [r0]
    8ec0:	ldr	r1, [r4, #4]
    8ec4:	mov	r2, r1
    8ec8:	ldr	r1, [r1, #16]
    8ecc:	cmp	r1, #0
    8ed0:	bne	8ec4 <sf_gen_neg+0x58>
    8ed4:	str	r0, [r2, #16]
    8ed8:	mov	r0, #20
    8edc:	bl	1fbc <newchunk>
    8ee0:	mov	r1, #2
    8ee4:	str	r1, [r0]
    8ee8:	ldr	r1, [r4, #8]
    8eec:	str	r1, [r0, #12]
    8ef0:	ldr	r1, [r4, #4]
    8ef4:	mov	r2, r1
    8ef8:	ldr	r1, [r1, #16]
    8efc:	cmp	r1, #0
    8f00:	bne	8ef4 <sf_gen_neg+0x88>
    8f04:	str	r0, [r2, #16]
    8f08:	mov	r0, r4
    8f0c:	pop	{r4, sl, fp, pc}

00008f10 <sf_gen_arth>:
    8f10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    8f14:	add	fp, sp, #24
    8f18:	mov	r8, r0
    8f1c:	mov	r0, #20
    8f20:	mov	r9, r2
    8f24:	mov	r4, r1
    8f28:	bl	1fbc <newchunk>
    8f2c:	mov	r6, r0
    8f30:	mov	r0, #97	; 0x61
    8f34:	str	r0, [r6]
    8f38:	ldr	r0, [r9, #8]
    8f3c:	str	r0, [r6, #12]
    8f40:	mov	r0, #20
    8f44:	bl	1fbc <newchunk>
    8f48:	mov	r7, r0
    8f4c:	mov	r0, #96	; 0x60
    8f50:	orr	r5, r8, #12
    8f54:	str	r0, [r7]
    8f58:	ldr	r0, [r4, #8]
    8f5c:	str	r0, [r7, #12]
    8f60:	mov	r0, #20
    8f64:	bl	1fbc <newchunk>
    8f68:	mov	r2, r7
    8f6c:	str	r5, [r0]
    8f70:	mov	r1, r2
    8f74:	ldr	r2, [r2, #16]
    8f78:	cmp	r2, #0
    8f7c:	bne	8f70 <sf_gen_arth+0x60>
    8f80:	str	r0, [r1, #16]
    8f84:	mov	r1, r6
    8f88:	mov	r0, r1
    8f8c:	ldr	r1, [r1, #16]
    8f90:	cmp	r1, #0
    8f94:	bne	8f88 <sf_gen_arth+0x78>
    8f98:	str	r7, [r0, #16]
    8f9c:	ldr	r0, [r9, #4]
    8fa0:	mov	r1, r0
    8fa4:	ldr	r0, [r0, #16]
    8fa8:	cmp	r0, #0
    8fac:	bne	8fa0 <sf_gen_arth+0x90>
    8fb0:	str	r6, [r1, #16]
    8fb4:	ldr	r0, [r9, #4]
    8fb8:	ldr	r1, [r4, #4]
    8fbc:	mov	r2, r1
    8fc0:	ldr	r1, [r1, #16]
    8fc4:	cmp	r1, #0
    8fc8:	bne	8fbc <sf_gen_arth+0xac>
    8fcc:	str	r0, [r2, #16]
    8fd0:	mov	r2, #0
    8fd4:	ldr	r0, [r4, #8]
    8fd8:	ldr	r1, [pc, #76]	; 902c <sf_gen_arth+0x11c>
    8fdc:	add	r1, pc, r1
    8fe0:	str	r2, [r1, r0, lsl #2]
    8fe4:	ldr	r0, [r9, #8]
    8fe8:	str	r2, [r1, r0, lsl #2]
    8fec:	mov	r0, #20
    8ff0:	bl	1fbc <newchunk>
    8ff4:	mov	r5, r0
    8ff8:	mov	r0, #2
    8ffc:	str	r0, [r5]
    9000:	bl	8974 <alloc_reg>
    9004:	str	r0, [r5, #12]
    9008:	str	r0, [r4, #8]
    900c:	ldr	r0, [r4, #4]
    9010:	mov	r1, r0
    9014:	ldr	r0, [r0, #16]
    9018:	cmp	r0, #0
    901c:	bne	9010 <sf_gen_arth+0x100>
    9020:	mov	r0, r4
    9024:	str	r5, [r1, #16]
    9028:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    902c:	.word	0x00027534

00009030 <sf_gen_greater>:
    9030:	push	{r4, r5, fp, lr}
    9034:	add	fp, sp, #8
    9038:	mov	r4, r0
    903c:	mov	r0, #20
    9040:	bl	1fbc <newchunk>
    9044:	mov	r5, r0
    9048:	mov	r0, #128	; 0x80
    904c:	str	r0, [r5]
    9050:	mov	r0, #208	; 0xd0
    9054:	bl	1fbc <newchunk>
    9058:	mov	r1, #53	; 0x35
    905c:	str	r4, [r0, #20]
    9060:	str	r5, [r0, #4]
    9064:	str	r1, [r0, #8]
    9068:	str	r0, [r0, #96]	; 0x60
    906c:	pop	{r4, r5, fp, pc}

00009070 <sf_gen_less>:
    9070:	push	{r4, r5, fp, lr}
    9074:	add	fp, sp, #8
    9078:	mov	r4, r0
    907c:	mov	r0, #20
    9080:	bl	1fbc <newchunk>
    9084:	mov	r5, r0
    9088:	mov	r0, #128	; 0x80
    908c:	str	r0, [r5]
    9090:	mov	r0, #208	; 0xd0
    9094:	bl	1fbc <newchunk>
    9098:	mov	r1, #37	; 0x25
    909c:	str	r4, [r0, #20]
    90a0:	str	r5, [r0, #4]
    90a4:	str	r1, [r0, #8]
    90a8:	ldr	r1, [r0, #44]	; 0x2c
    90ac:	clz	r1, r1
    90b0:	lsr	r1, r1, #5
    90b4:	str	r1, [r0, #44]	; 0x2c
    90b8:	str	r0, [r0, #96]	; 0x60
    90bc:	pop	{r4, r5, fp, pc}

000090c0 <sf_gen_byteop>:
    90c0:	push	{r4, r5, r6, sl, fp, lr}
    90c4:	add	fp, sp, #16
    90c8:	mov	r4, r2
    90cc:	cmp	r0, #60	; 0x3c
    90d0:	ble	9104 <sf_gen_byteop+0x44>
    90d4:	cmp	r0, #61	; 0x3d
    90d8:	beq	9114 <sf_gen_byteop+0x54>
    90dc:	cmp	r0, #62	; 0x3e
    90e0:	bne	9140 <sf_gen_byteop+0x80>
    90e4:	mov	r0, #1
    90e8:	mov	r2, #16
    90ec:	bl	98e8 <gen_load_a>
    90f0:	mov	r5, r0
    90f4:	mov	r0, #208	; 0xd0
    90f8:	bl	1fbc <newchunk>
    90fc:	mov	r1, #37	; 0x25
    9100:	b	9130 <sf_gen_byteop+0x70>
    9104:	cmp	r0, #38	; 0x26
    9108:	bne	9170 <sf_gen_byteop+0xb0>
    910c:	mov	r6, #84	; 0x54
    9110:	b	914c <sf_gen_byteop+0x8c>
    9114:	mov	r0, #1
    9118:	mov	r2, #16
    911c:	bl	98e8 <gen_load_a>
    9120:	mov	r5, r0
    9124:	mov	r0, #208	; 0xd0
    9128:	bl	1fbc <newchunk>
    912c:	mov	r1, #21
    9130:	str	r4, [r0, #20]
    9134:	str	r5, [r0, #4]
    9138:	str	r1, [r0, #8]
    913c:	b	91b0 <sf_gen_byteop+0xf0>
    9140:	mov	r6, #68	; 0x44
    9144:	cmp	r0, #124	; 0x7c
    9148:	bne	91b8 <sf_gen_byteop+0xf8>
    914c:	mov	r0, #20
    9150:	bl	1fbc <newchunk>
    9154:	str	r4, [r0, #12]
    9158:	mov	r5, r0
    915c:	str	r6, [r0]
    9160:	mov	r0, #208	; 0xd0
    9164:	bl	1fbc <newchunk>
    9168:	mov	r1, #21
    916c:	b	9198 <sf_gen_byteop+0xd8>
    9170:	cmp	r0, #60	; 0x3c
    9174:	bne	91b8 <sf_gen_byteop+0xf8>
    9178:	mov	r0, #1
    917c:	mov	r2, #16
    9180:	bl	98e8 <gen_load_a>
    9184:	mov	r5, r0
    9188:	mov	r0, #208	; 0xd0
    918c:	bl	1fbc <newchunk>
    9190:	mov	r1, #53	; 0x35
    9194:	str	r4, [r0, #20]
    9198:	str	r5, [r0, #4]
    919c:	str	r1, [r0, #8]
    91a0:	ldr	r1, [r0, #44]	; 0x2c
    91a4:	clz	r1, r1
    91a8:	lsr	r1, r1, #5
    91ac:	str	r1, [r0, #44]	; 0x2c
    91b0:	str	r0, [r0, #96]	; 0x60
    91b4:	pop	{r4, r5, r6, sl, fp, pc}
    91b8:	bl	f74 <abort@plt>

000091bc <sf_gen_broadcast>:
    91bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    91c0:	add	fp, sp, #24
    91c4:	sub	sp, sp, #16
    91c8:	cmp	r0, #2
    91cc:	bcs	92a8 <sf_gen_broadcast+0xec>
    91d0:	ldr	r0, [pc, #608]	; 9438 <sf_gen_broadcast+0x27c>
    91d4:	ldr	r0, [pc, r0]
    91d8:	cmp	r0, #118	; 0x76
    91dc:	ble	9340 <sf_gen_broadcast+0x184>
    91e0:	sub	r1, r0, #119	; 0x77
    91e4:	cmp	r1, #10
    91e8:	bhi	9398 <sf_gen_broadcast+0x1dc>
    91ec:	add	r0, pc, #4
    91f0:	ldr	r1, [r0, r1, lsl #2]
    91f4:	add	pc, r0, r1
    91f8:	.word	0x000001ac
    91fc:	.word	0x000001f8
    9200:	.word	0x000001f8
    9204:	.word	0x000001c4
    9208:	.word	0x0000002c
    920c:	.word	0x000001f8
    9210:	.word	0x000001f8
    9214:	.word	0x000001f8
    9218:	.word	0x000001ac
    921c:	.word	0x000001f8
    9220:	.word	0x000001d8
    9224:	ldr	r0, [pc, #556]	; 9458 <sf_gen_broadcast+0x29c>
    9228:	add	r0, pc, r0
    922c:	ldrb	r0, [r0]
    9230:	cmp	r0, #1
    9234:	bne	941c <sf_gen_broadcast+0x260>
    9238:	mov	r0, #1
    923c:	mov	r1, #4
    9240:	mov	r2, #8
    9244:	bl	98e8 <gen_load_a>
    9248:	mov	r4, r0
    924c:	mov	r0, #208	; 0xd0
    9250:	bl	1fbc <newchunk>
    9254:	mov	r6, r0
    9258:	mov	r1, #65280	; 0xff00
    925c:	mov	r0, #21
    9260:	mov	r2, #6
    9264:	str	r1, [r6, #20]
    9268:	str	r4, [r6, #4]
    926c:	str	r0, [r6, #8]
    9270:	ldr	r0, [r6, #44]	; 0x2c
    9274:	clz	r0, r0
    9278:	lsr	r0, r0, #5
    927c:	str	r0, [r6, #44]	; 0x2c
    9280:	str	r6, [r6, #96]	; 0x60
    9284:	mov	r0, #1
    9288:	ldr	r1, [pc, #460]	; 945c <sf_gen_broadcast+0x2a0>
    928c:	ldr	r1, [pc, r1]
    9290:	ldr	r3, [pc, #456]	; 9460 <sf_gen_broadcast+0x2a4>
    9294:	add	r3, pc, r3
    9298:	bl	b330 <gen_bcmp>
    929c:	mov	r5, r0
    92a0:	mov	r0, r6
    92a4:	b	932c <sf_gen_broadcast+0x170>
    92a8:	bne	941c <sf_gen_broadcast+0x260>
    92ac:	ldr	r0, [pc, #432]	; 9464 <sf_gen_broadcast+0x2a8>
    92b0:	ldr	r0, [pc, r0]
    92b4:	cmn	r0, #1
    92b8:	beq	9428 <sf_gen_broadcast+0x26c>
    92bc:	mov	r0, #2048	; 0x800
    92c0:	bl	4334 <gen_linktype>
    92c4:	mov	r8, r0
    92c8:	ldr	r0, [pc, #408]	; 9468 <sf_gen_broadcast+0x2ac>
    92cc:	mov	r7, #0
    92d0:	mov	r4, #16
    92d4:	mov	r1, #16
    92d8:	mov	r2, #0
    92dc:	ldr	r0, [pc, r0]
    92e0:	stm	sp, {r4, r7}
    92e4:	str	r7, [sp, #8]
    92e8:	mvn	r5, r0
    92ec:	mov	r0, #3
    92f0:	mov	r3, r5
    92f4:	bl	a38c <gen_ncmp>
    92f8:	mov	r6, r0
    92fc:	mov	r0, #3
    9300:	mov	r1, #16
    9304:	mov	r2, #0
    9308:	mov	r3, r5
    930c:	stm	sp, {r4, r7}
    9310:	str	r5, [sp, #8]
    9314:	bl	a38c <gen_ncmp>
    9318:	mov	r5, r0
    931c:	mov	r0, r6
    9320:	mov	r1, r5
    9324:	bl	3a3c <sf_gen_or>
    9328:	mov	r0, r8
    932c:	mov	r1, r5
    9330:	bl	3964 <sf_gen_and>
    9334:	mov	r0, r5
    9338:	sub	sp, fp, #24
    933c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    9340:	sub	r1, r0, #1
    9344:	cmp	r1, #9
    9348:	bhi	93e8 <sf_gen_broadcast+0x22c>
    934c:	add	r0, pc, #4
    9350:	ldr	r1, [r0, r1, lsl #2]
    9354:	add	pc, r0, r1
    9358:	.word	0x00000028
    935c:	.word	0x00000098
    9360:	.word	0x00000098
    9364:	.word	0x00000098
    9368:	.word	0x00000098
    936c:	.word	0x00000064
    9370:	.word	0x00000078
    9374:	.word	0x00000098
    9378:	.word	0x00000098
    937c:	.word	0x000000a4
    9380:	ldr	r1, [pc, #192]	; 9448 <sf_gen_broadcast+0x28c>
    9384:	mov	r0, #1
    9388:	ldr	r1, [pc, r1]
    938c:	ldr	r3, [pc, #184]	; 944c <sf_gen_broadcast+0x290>
    9390:	add	r3, pc, r3
    9394:	b	940c <sf_gen_broadcast+0x250>
    9398:	cmp	r0, #163	; 0xa3
    939c:	cmpne	r0, #192	; 0xc0
    93a0:	bne	93f0 <sf_gen_broadcast+0x234>
    93a4:	ldr	r0, [pc, #148]	; 9440 <sf_gen_broadcast+0x284>
    93a8:	mov	r1, #2
    93ac:	add	r0, pc, r0
    93b0:	sub	sp, fp, #24
    93b4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    93b8:	b	67e0 <gen_wlanhostop>
    93bc:	ldr	r3, [pc, #144]	; 9454 <sf_gen_broadcast+0x298>
    93c0:	mov	r0, #1
    93c4:	mov	r1, #2
    93c8:	add	r3, pc, r3
    93cc:	b	940c <sf_gen_broadcast+0x250>
    93d0:	ldr	r3, [pc, #108]	; 9444 <sf_gen_broadcast+0x288>
    93d4:	mov	r0, #1
    93d8:	mov	r1, #1
    93dc:	mov	r2, #1
    93e0:	add	r3, pc, r3
    93e4:	b	9410 <sf_gen_broadcast+0x254>
    93e8:	cmp	r0, #105	; 0x69
    93ec:	beq	93a4 <sf_gen_broadcast+0x1e8>
    93f0:	ldr	r0, [pc, #68]	; 943c <sf_gen_broadcast+0x280>
    93f4:	add	r0, pc, r0
    93f8:	bl	1f30 <sf_bpf_error>
    93fc:	ldr	r3, [pc, #76]	; 9450 <sf_gen_broadcast+0x294>
    9400:	mov	r0, #1
    9404:	mov	r1, #1
    9408:	add	r3, pc, r3
    940c:	mov	r2, #6
    9410:	sub	sp, fp, #24
    9414:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    9418:	b	b330 <gen_bcmp>
    941c:	ldr	r0, [pc, #16]	; 9434 <sf_gen_broadcast+0x278>
    9420:	add	r0, pc, r0
    9424:	bl	1f30 <sf_bpf_error>
    9428:	ldr	r0, [pc, #60]	; 946c <sf_gen_broadcast+0x2b0>
    942c:	add	r0, pc, r0
    9430:	bl	1f30 <sf_bpf_error>
    9434:	.word	0x0000984a
    9438:	.word	0x0002725c
    943c:	.word	0x0000982e
    9440:	.word	0x00026d20
    9444:	.word	0x00027064
    9448:	.word	0x000270c0
    944c:	.word	0x00026d3c
    9450:	.word	0x00026cc4
    9454:	.word	0x00026d04
    9458:	.word	0x0002720c
    945c:	.word	0x000271bc
    9460:	.word	0x00026e38
    9464:	.word	0x00027178
    9468:	.word	0x0002714c
    946c:	.word	0x0000980b

00009470 <sf_gen_multicast>:
    9470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9474:	add	fp, sp, #28
    9478:	sub	sp, sp, #4
    947c:	cmp	r0, #2
    9480:	bcc	94cc <sf_gen_multicast+0x5c>
    9484:	beq	95b0 <sf_gen_multicast+0x140>
    9488:	cmp	r0, #17
    948c:	bne	9884 <sf_gen_multicast+0x414>
    9490:	movw	r0, #34525	; 0x86dd
    9494:	bl	4334 <gen_linktype>
    9498:	mov	r5, r0
    949c:	ldr	r0, [pc, #1064]	; 98cc <sf_gen_multicast+0x45c>
    94a0:	mov	r1, #16
    94a4:	ldr	r0, [pc, r0]
    94a8:	add	r0, r0, #24
    94ac:	bl	ba9c <gen_load_macplrel>
    94b0:	mov	r6, r0
    94b4:	mov	r0, #208	; 0xd0
    94b8:	bl	1fbc <newchunk>
    94bc:	mov	r4, r0
    94c0:	mov	r0, #21
    94c4:	mov	r1, #255	; 0xff
    94c8:	b	95e8 <sf_gen_multicast+0x178>
    94cc:	ldr	r0, [pc, #1020]	; 98d0 <sf_gen_multicast+0x460>
    94d0:	ldr	r0, [pc, r0]
    94d4:	cmp	r0, #118	; 0x76
    94d8:	ble	9600 <sf_gen_multicast+0x190>
    94dc:	sub	r1, r0, #119	; 0x77
    94e0:	cmp	r1, #10
    94e4:	bhi	9650 <sf_gen_multicast+0x1e0>
    94e8:	add	r0, pc, #4
    94ec:	ldr	r1, [r0, r1, lsl #2]
    94f0:	add	pc, r0, r1
    94f4:	.word	0x00000168
    94f8:	.word	0x00000390
    94fc:	.word	0x00000390
    9500:	.word	0x00000358
    9504:	.word	0x0000002c
    9508:	.word	0x00000390
    950c:	.word	0x00000390
    9510:	.word	0x00000390
    9514:	.word	0x00000168
    9518:	.word	0x00000390
    951c:	.word	0x00000368
    9520:	ldr	r0, [pc, #948]	; 98dc <sf_gen_multicast+0x46c>
    9524:	add	r0, pc, r0
    9528:	ldrb	r0, [r0]
    952c:	cmp	r0, #1
    9530:	bne	9884 <sf_gen_multicast+0x414>
    9534:	mov	r0, #1
    9538:	mov	r1, #4
    953c:	mov	r2, #8
    9540:	mov	r7, #1
    9544:	bl	98e8 <gen_load_a>
    9548:	mov	r4, r0
    954c:	mov	r0, #208	; 0xd0
    9550:	bl	1fbc <newchunk>
    9554:	mov	r5, r0
    9558:	mov	r1, #65280	; 0xff00
    955c:	mov	r0, #21
    9560:	mov	r2, #16
    9564:	str	r1, [r5, #20]
    9568:	str	r4, [r5, #4]
    956c:	str	r0, [r5, #8]
    9570:	ldr	r0, [r5, #44]	; 0x2c
    9574:	clz	r0, r0
    9578:	lsr	r0, r0, #5
    957c:	str	r0, [r5, #44]	; 0x2c
    9580:	str	r5, [r5, #96]	; 0x60
    9584:	mov	r0, #1
    9588:	ldr	r1, [pc, #848]	; 98e0 <sf_gen_multicast+0x470>
    958c:	ldr	r1, [pc, r1]
    9590:	bl	98e8 <gen_load_a>
    9594:	mov	r6, r0
    9598:	mov	r0, #208	; 0xd0
    959c:	bl	1fbc <newchunk>
    95a0:	mov	r4, r0
    95a4:	mov	r0, #69	; 0x45
    95a8:	str	r7, [r4, #20]
    95ac:	b	95ec <sf_gen_multicast+0x17c>
    95b0:	mov	r0, #2048	; 0x800
    95b4:	bl	4334 <gen_linktype>
    95b8:	mov	r5, r0
    95bc:	ldr	r0, [pc, #800]	; 98e4 <sf_gen_multicast+0x474>
    95c0:	mov	r1, #16
    95c4:	ldr	r0, [pc, r0]
    95c8:	add	r0, r0, #16
    95cc:	bl	ba9c <gen_load_macplrel>
    95d0:	mov	r6, r0
    95d4:	mov	r0, #208	; 0xd0
    95d8:	bl	1fbc <newchunk>
    95dc:	mov	r4, r0
    95e0:	mov	r0, #53	; 0x35
    95e4:	mov	r1, #224	; 0xe0
    95e8:	str	r1, [r4, #20]
    95ec:	str	r6, [r4, #4]
    95f0:	str	r0, [r4, #8]
    95f4:	mov	r0, r5
    95f8:	str	r4, [r4, #96]	; 0x60
    95fc:	b	9838 <sf_gen_multicast+0x3c8>
    9600:	sub	r1, r0, #1
    9604:	cmp	r1, #9
    9608:	bhi	987c <sf_gen_multicast+0x40c>
    960c:	add	r0, pc, #4
    9610:	ldr	r1, [r0, r1, lsl #2]
    9614:	add	pc, r0, r1
    9618:	.word	0x00000028
    961c:	.word	0x0000026c
    9620:	.word	0x0000026c
    9624:	.word	0x0000026c
    9628:	.word	0x0000026c
    962c:	.word	0x00000234
    9630:	.word	0x00000244
    9634:	.word	0x0000026c
    9638:	.word	0x0000026c
    963c:	.word	0x00000278
    9640:	mov	r6, #1
    9644:	mov	r0, #1
    9648:	mov	r1, #0
    964c:	b	989c <sf_gen_multicast+0x42c>
    9650:	cmp	r0, #163	; 0xa3
    9654:	cmpne	r0, #192	; 0xc0
    9658:	bne	9884 <sf_gen_multicast+0x414>
    965c:	mov	r0, #1
    9660:	mov	r1, #1
    9664:	mov	r2, #16
    9668:	mov	r9, #1
    966c:	bl	98e8 <gen_load_a>
    9670:	mov	r4, r0
    9674:	mov	r0, #208	; 0xd0
    9678:	bl	1fbc <newchunk>
    967c:	mov	r5, r0
    9680:	mov	r8, #69	; 0x45
    9684:	str	r9, [r0, #20]
    9688:	stmib	r0, {r4, r8}
    968c:	str	r0, [r0, #96]	; 0x60
    9690:	mov	r0, #1
    9694:	mov	r1, #16
    9698:	mov	r2, #16
    969c:	bl	98e8 <gen_load_a>
    96a0:	mov	r6, r0
    96a4:	mov	r0, #208	; 0xd0
    96a8:	bl	1fbc <newchunk>
    96ac:	mov	r4, r0
    96b0:	str	r9, [r0, #20]
    96b4:	stmib	r0, {r6, r8}
    96b8:	str	r0, [r0, #96]	; 0x60
    96bc:	mov	r0, r5
    96c0:	mov	r1, r4
    96c4:	bl	3964 <sf_gen_and>
    96c8:	mov	r0, #1
    96cc:	mov	r1, #1
    96d0:	mov	r2, #16
    96d4:	bl	98e8 <gen_load_a>
    96d8:	mov	r5, r0
    96dc:	mov	r0, #208	; 0xd0
    96e0:	bl	1fbc <newchunk>
    96e4:	str	r9, [r0, #20]
    96e8:	stmib	r0, {r5, r8}
    96ec:	mov	r6, r0
    96f0:	mov	r1, #4
    96f4:	mov	r2, #16
    96f8:	mov	sl, #4
    96fc:	ldr	r0, [r0, #44]	; 0x2c
    9700:	clz	r0, r0
    9704:	lsr	r0, r0, #5
    9708:	str	r0, [r6, #44]	; 0x2c
    970c:	mov	r0, #1
    9710:	str	r6, [r6, #96]	; 0x60
    9714:	bl	98e8 <gen_load_a>
    9718:	mov	r5, r0
    971c:	mov	r0, #208	; 0xd0
    9720:	bl	1fbc <newchunk>
    9724:	mov	r7, r0
    9728:	stmib	r0, {r5, r8}
    972c:	str	r9, [r0, #20]
    9730:	str	r0, [r0, #96]	; 0x60
    9734:	mov	r0, r6
    9738:	mov	r1, r7
    973c:	bl	3964 <sf_gen_and>
    9740:	mov	r0, r7
    9744:	mov	r1, r4
    9748:	bl	3a3c <sf_gen_or>
    974c:	mov	r0, #1
    9750:	mov	r1, #0
    9754:	mov	r2, #16
    9758:	bl	98e8 <gen_load_a>
    975c:	mov	r5, r0
    9760:	mov	r0, #208	; 0xd0
    9764:	bl	1fbc <newchunk>
    9768:	mov	r1, r4
    976c:	mov	r7, #8
    9770:	stmib	r0, {r5, r8}
    9774:	str	r7, [r0, #20]
    9778:	str	r0, [r0, #96]	; 0x60
    977c:	bl	3964 <sf_gen_and>
    9780:	mov	r0, #1
    9784:	mov	r1, #0
    9788:	mov	r2, #16
    978c:	bl	98e8 <gen_load_a>
    9790:	mov	r5, r0
    9794:	mov	r0, #208	; 0xd0
    9798:	bl	1fbc <newchunk>
    979c:	str	r7, [r0, #20]
    97a0:	mov	r6, r0
    97a4:	mov	r1, #4
    97a8:	mov	r2, #16
    97ac:	ldr	r0, [r0, #44]	; 0x2c
    97b0:	clz	r0, r0
    97b4:	lsr	r0, r0, #5
    97b8:	str	r0, [r6, #44]	; 0x2c
    97bc:	mov	r0, #1
    97c0:	stmib	r6, {r5, r8}
    97c4:	str	r6, [r6, #96]	; 0x60
    97c8:	bl	98e8 <gen_load_a>
    97cc:	mov	r5, r0
    97d0:	mov	r0, #208	; 0xd0
    97d4:	bl	1fbc <newchunk>
    97d8:	mov	r7, r0
    97dc:	stmib	r0, {r5, r8}
    97e0:	str	r9, [r0, #20]
    97e4:	str	r0, [r0, #96]	; 0x60
    97e8:	mov	r0, r6
    97ec:	mov	r1, r7
    97f0:	bl	3964 <sf_gen_and>
    97f4:	mov	r0, r7
    97f8:	mov	r1, r4
    97fc:	bl	3a3c <sf_gen_or>
    9800:	mov	r0, #1
    9804:	mov	r1, #0
    9808:	mov	r2, #16
    980c:	bl	98e8 <gen_load_a>
    9810:	mov	r5, r0
    9814:	mov	r0, #208	; 0xd0
    9818:	bl	1fbc <newchunk>
    981c:	str	sl, [r0, #20]
    9820:	stmib	r0, {r5, r8}
    9824:	ldr	r1, [r0, #44]	; 0x2c
    9828:	clz	r1, r1
    982c:	lsr	r1, r1, #5
    9830:	str	r1, [r0, #44]	; 0x2c
    9834:	str	r0, [r0, #96]	; 0x60
    9838:	mov	r1, r4
    983c:	bl	3964 <sf_gen_and>
    9840:	mov	r0, r4
    9844:	sub	sp, fp, #28
    9848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    984c:	mov	r6, #1
    9850:	mov	r0, #1
    9854:	mov	r1, #2
    9858:	b	989c <sf_gen_multicast+0x42c>
    985c:	ldr	r3, [pc, #116]	; 98d8 <sf_gen_multicast+0x468>
    9860:	mov	r0, #1
    9864:	mov	r1, #1
    9868:	mov	r2, #1
    986c:	add	r3, pc, r3
    9870:	sub	sp, fp, #28
    9874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9878:	b	b330 <gen_bcmp>
    987c:	cmp	r0, #105	; 0x69
    9880:	beq	965c <sf_gen_multicast+0x1ec>
    9884:	ldr	r0, [pc, #72]	; 98d4 <sf_gen_multicast+0x464>
    9888:	add	r0, pc, r0
    988c:	bl	1f30 <sf_bpf_error>
    9890:	mov	r6, #1
    9894:	mov	r0, #1
    9898:	mov	r1, #1
    989c:	mov	r2, #16
    98a0:	bl	98e8 <gen_load_a>
    98a4:	mov	r5, r0
    98a8:	mov	r0, #208	; 0xd0
    98ac:	bl	1fbc <newchunk>
    98b0:	mov	r4, r0
    98b4:	mov	r0, #69	; 0x45
    98b8:	str	r6, [r4, #20]
    98bc:	str	r5, [r4, #4]
    98c0:	str	r0, [r4, #8]
    98c4:	str	r4, [r4, #96]	; 0x60
    98c8:	b	9840 <sf_gen_multicast+0x3d0>
    98cc:	.word	0x00026f9c
    98d0:	.word	0x00026f60
    98d4:	.word	0x00009411
    98d8:	.word	0x00026bd8
    98dc:	.word	0x00026f10
    98e0:	.word	0x00026ebc
    98e4:	.word	0x00026e7c

000098e8 <gen_load_a>:
    98e8:	push	{r4, r5, r6, sl, fp, lr}
    98ec:	add	fp, sp, #16
    98f0:	cmp	r0, #6
    98f4:	bhi	9a14 <gen_load_a+0x12c>
    98f8:	mov	r6, r1
    98fc:	add	r1, pc, #8
    9900:	mov	r5, r2
    9904:	ldr	r0, [r1, r0, lsl #2]
    9908:	add	pc, r1, r0
    990c:	.word	0x00000058
    9910:	.word	0x0000001c
    9914:	.word	0x00000080
    9918:	.word	0x00000088
    991c:	.word	0x00000074
    9920:	.word	0x00000098
    9924:	.word	0x000000ec
    9928:	bl	89ec <gen_llprefixlen>
    992c:	cmp	r0, #0
    9930:	beq	9964 <gen_load_a+0x7c>
    9934:	mov	r4, r0
    9938:	mov	r0, #20
    993c:	bl	1fbc <newchunk>
    9940:	mov	r2, r4
    9944:	orr	r1, r5, #64	; 0x40
    9948:	str	r6, [r0, #12]
    994c:	str	r1, [r0]
    9950:	mov	r1, r2
    9954:	ldr	r2, [r2, #16]
    9958:	cmp	r2, #0
    995c:	bne	9950 <gen_load_a+0x68>
    9960:	b	99ec <gen_load_a+0x104>
    9964:	mov	r0, #20
    9968:	bl	1fbc <newchunk>
    996c:	mov	r4, r0
    9970:	str	r6, [r0, #12]
    9974:	orr	r0, r5, #32
    9978:	str	r0, [r4]
    997c:	b	99f0 <gen_load_a+0x108>
    9980:	ldr	r0, [pc, #148]	; 9a1c <gen_load_a+0x134>
    9984:	ldr	r0, [pc, r0]
    9988:	b	999c <gen_load_a+0xb4>
    998c:	mov	r0, r6
    9990:	b	9a08 <gen_load_a+0x120>
    9994:	ldr	r0, [pc, #124]	; 9a18 <gen_load_a+0x130>
    9998:	ldr	r0, [pc, r0]
    999c:	add	r0, r0, r6
    99a0:	b	9a08 <gen_load_a+0x120>
    99a4:	bl	8ae8 <gen_loadx_iphdrlen>
    99a8:	mov	r4, r0
    99ac:	mov	r0, #20
    99b0:	orr	r5, r5, #64	; 0x40
    99b4:	bl	1fbc <newchunk>
    99b8:	str	r5, [r0]
    99bc:	ldr	r1, [pc, #92]	; 9a20 <gen_load_a+0x138>
    99c0:	ldr	r1, [pc, r1]
    99c4:	ldr	r2, [pc, #88]	; 9a24 <gen_load_a+0x13c>
    99c8:	ldr	r2, [pc, r2]
    99cc:	add	r1, r1, r6
    99d0:	add	r1, r1, r2
    99d4:	mov	r2, r4
    99d8:	str	r1, [r0, #12]
    99dc:	mov	r1, r2
    99e0:	ldr	r2, [r2, #16]
    99e4:	cmp	r2, #0
    99e8:	bne	99dc <gen_load_a+0xf4>
    99ec:	str	r0, [r1, #16]
    99f0:	mov	r0, r4
    99f4:	pop	{r4, r5, r6, sl, fp, pc}
    99f8:	ldr	r0, [pc, #40]	; 9a28 <gen_load_a+0x140>
    99fc:	ldr	r0, [pc, r0]
    9a00:	add	r0, r6, r0
    9a04:	add	r0, r0, #40	; 0x28
    9a08:	mov	r1, r5
    9a0c:	pop	{r4, r5, r6, sl, fp, lr}
    9a10:	b	ba9c <gen_load_macplrel>
    9a14:	bl	f74 <abort@plt>
    9a18:	.word	0x00026aa8
    9a1c:	.word	0x00026ac8
    9a20:	.word	0x00026a7c
    9a24:	.word	0x00026a78
    9a28:	.word	0x00026a44

00009a2c <sf_gen_inbound>:
    9a2c:	push	{r4, r5, r6, r7, fp, lr}
    9a30:	add	fp, sp, #16
    9a34:	sub	sp, sp, #16
    9a38:	ldr	r1, [pc, #420]	; 9be4 <sf_gen_inbound+0x1b8>
    9a3c:	mov	r4, r0
    9a40:	ldr	r1, [pc, r1]
    9a44:	cmp	r1, #163	; 0xa3
    9a48:	ble	9a8c <sf_gen_inbound+0x60>
    9a4c:	sub	r0, r1, #164	; 0xa4
    9a50:	cmp	r0, #30
    9a54:	bhi	9b30 <sf_gen_inbound+0x104>
    9a58:	movw	r3, #49177	; 0xc019
    9a5c:	mov	r2, #1
    9a60:	movt	r3, #16395	; 0x400b
    9a64:	tst	r3, r2, lsl r0
    9a68:	bne	9a98 <sf_gen_inbound+0x6c>
    9a6c:	cmp	r0, #2
    9a70:	bne	9b30 <sf_gen_inbound+0x104>
    9a74:	mov	r6, #1
    9a78:	mov	r7, #0
    9a7c:	mov	r0, #1
    9a80:	mov	r1, #0
    9a84:	mov	r2, #16
    9a88:	b	9b54 <sf_gen_inbound+0x128>
    9a8c:	sub	r0, r1, #130	; 0x82
    9a90:	cmp	r0, #8
    9a94:	bcs	9ae8 <sf_gen_inbound+0xbc>
    9a98:	cmp	r4, #0
    9a9c:	beq	9ab4 <sf_gen_inbound+0x88>
    9aa0:	mov	r0, #0
    9aa4:	mov	r1, #16
    9aa8:	str	r1, [sp]
    9aac:	str	r0, [sp, #4]
    9ab0:	b	9ac8 <sf_gen_inbound+0x9c>
    9ab4:	mov	r1, #0
    9ab8:	mov	r2, #16
    9abc:	mov	r0, #1
    9ac0:	str	r2, [sp]
    9ac4:	str	r1, [sp, #4]
    9ac8:	str	r0, [sp, #8]
    9acc:	mov	r0, #1
    9ad0:	mov	r1, #3
    9ad4:	mov	r2, #16
    9ad8:	mov	r3, #1
    9adc:	bl	a38c <gen_ncmp>
    9ae0:	sub	sp, fp, #16
    9ae4:	pop	{r4, r5, r6, r7, fp, pc}
    9ae8:	cmp	r1, #8
    9aec:	bne	9b84 <sf_gen_inbound+0x158>
    9af0:	mov	r0, #0
    9af4:	bl	8e0c <sf_gen_loadi>
    9af8:	mov	r1, r0
    9afc:	mov	r0, #1
    9b00:	mov	r2, #1
    9b04:	bl	8434 <sf_gen_load>
    9b08:	mov	r5, r0
    9b0c:	mov	r0, #0
    9b10:	bl	8e0c <sf_gen_loadi>
    9b14:	mov	r2, r0
    9b18:	mov	r0, #16
    9b1c:	mov	r1, r5
    9b20:	mov	r3, r4
    9b24:	sub	sp, fp, #16
    9b28:	pop	{r4, r5, r6, r7, fp, lr}
    9b2c:	b	8c20 <sf_gen_relation>
    9b30:	cmp	r1, #200	; 0xc8
    9b34:	beq	9a98 <sf_gen_inbound+0x6c>
    9b38:	cmp	r1, #226	; 0xe2
    9b3c:	bne	9bd8 <sf_gen_inbound+0x1ac>
    9b40:	mov	r6, #1
    9b44:	mov	r7, #2
    9b48:	mov	r0, #1
    9b4c:	mov	r1, #2
    9b50:	mov	r2, #8
    9b54:	bl	98e8 <gen_load_a>
    9b58:	mov	r5, r0
    9b5c:	mov	r0, #208	; 0xd0
    9b60:	bl	1fbc <newchunk>
    9b64:	cmp	r4, #0
    9b68:	mov	r1, #21
    9b6c:	str	r5, [r0, #4]
    9b70:	str	r1, [r0, #8]
    9b74:	str	r0, [r0, #96]	; 0x60
    9b78:	bne	9bd0 <sf_gen_inbound+0x1a4>
    9b7c:	str	r7, [r0, #20]
    9b80:	b	9ae0 <sf_gen_inbound+0xb4>
    9b84:	cmp	r1, #113	; 0x71
    9b88:	bne	9bd8 <sf_gen_inbound+0x1ac>
    9b8c:	mov	r0, #1
    9b90:	mov	r1, #0
    9b94:	mov	r2, #8
    9b98:	mov	r6, #0
    9b9c:	bl	98e8 <gen_load_a>
    9ba0:	mov	r5, r0
    9ba4:	mov	r0, #208	; 0xd0
    9ba8:	bl	1fbc <newchunk>
    9bac:	cmp	r4, #0
    9bb0:	mov	r1, #21
    9bb4:	str	r5, [r0, #4]
    9bb8:	str	r1, [r0, #8]
    9bbc:	str	r0, [r0, #96]	; 0x60
    9bc0:	beq	9bd0 <sf_gen_inbound+0x1a4>
    9bc4:	mov	r1, #4
    9bc8:	str	r1, [r0, #20]
    9bcc:	b	9ae0 <sf_gen_inbound+0xb4>
    9bd0:	str	r6, [r0, #20]
    9bd4:	b	9ae0 <sf_gen_inbound+0xb4>
    9bd8:	ldr	r0, [pc, #8]	; 9be8 <sf_gen_inbound+0x1bc>
    9bdc:	add	r0, pc, r0
    9be0:	bl	1f30 <sf_bpf_error>
    9be4:	.word	0x000269f0
    9be8:	.word	0x0000912a

00009bec <sf_gen_pf_ifname>:
    9bec:	push	{fp, lr}
    9bf0:	mov	fp, sp
    9bf4:	ldr	r0, [pc, #4]	; 9c00 <sf_gen_pf_ifname+0x14>
    9bf8:	add	r0, pc, r0
    9bfc:	bl	1f30 <sf_bpf_error>
    9c00:	.word	0x0000913c

00009c04 <sf_gen_pf_ruleset>:
    9c04:	push	{fp, lr}
    9c08:	mov	fp, sp
    9c0c:	ldr	r0, [pc, #4]	; 9c18 <sf_gen_pf_ruleset+0x14>
    9c10:	add	r0, pc, r0
    9c14:	bl	1f30 <sf_bpf_error>
    9c18:	.word	0x0000914c

00009c1c <sf_gen_pf_rnr>:
    9c1c:	push	{fp, lr}
    9c20:	mov	fp, sp
    9c24:	ldr	r0, [pc, #4]	; 9c30 <sf_gen_pf_rnr+0x14>
    9c28:	add	r0, pc, r0
    9c2c:	bl	1f30 <sf_bpf_error>
    9c30:	.word	0x00009134

00009c34 <sf_gen_pf_srnr>:
    9c34:	push	{fp, lr}
    9c38:	mov	fp, sp
    9c3c:	ldr	r0, [pc, #4]	; 9c48 <sf_gen_pf_srnr+0x14>
    9c40:	add	r0, pc, r0
    9c44:	bl	1f30 <sf_bpf_error>
    9c48:	.word	0x0000911c

00009c4c <sf_gen_pf_reason>:
    9c4c:	push	{fp, lr}
    9c50:	mov	fp, sp
    9c54:	ldr	r0, [pc, #4]	; 9c60 <sf_gen_pf_reason+0x14>
    9c58:	add	r0, pc, r0
    9c5c:	bl	1f30 <sf_bpf_error>
    9c60:	.word	0x00009104

00009c64 <sf_gen_pf_action>:
    9c64:	push	{fp, lr}
    9c68:	mov	fp, sp
    9c6c:	ldr	r0, [pc, #4]	; 9c78 <sf_gen_pf_action+0x14>
    9c70:	add	r0, pc, r0
    9c74:	bl	1f30 <sf_bpf_error>
    9c78:	.word	0x000090ec

00009c7c <sf_gen_p80211_type>:
    9c7c:	push	{fp, lr}
    9c80:	mov	fp, sp
    9c84:	sub	sp, sp, #16
    9c88:	mov	lr, r1
    9c8c:	ldr	r1, [pc, #100]	; 9cf8 <sf_gen_p80211_type+0x7c>
    9c90:	ldr	r1, [pc, r1]
    9c94:	sub	r2, r1, #105	; 0x69
    9c98:	cmp	r2, #22
    9c9c:	bhi	9cb4 <sf_gen_p80211_type+0x38>
    9ca0:	movw	r3, #16385	; 0x4001
    9ca4:	mov	ip, #1
    9ca8:	movt	r3, #64	; 0x40
    9cac:	tst	r3, ip, lsl r2
    9cb0:	bne	9cbc <sf_gen_p80211_type+0x40>
    9cb4:	cmp	r1, #163	; 0xa3
    9cb8:	bne	9cec <sf_gen_p80211_type+0x70>
    9cbc:	mov	r1, #0
    9cc0:	mov	r2, #16
    9cc4:	str	r0, [sp, #8]
    9cc8:	mov	r0, #1
    9ccc:	mov	r3, lr
    9cd0:	str	r2, [sp]
    9cd4:	str	r1, [sp, #4]
    9cd8:	mov	r1, #0
    9cdc:	mov	r2, #16
    9ce0:	bl	a38c <gen_ncmp>
    9ce4:	mov	sp, fp
    9ce8:	pop	{fp, pc}
    9cec:	ldr	r0, [pc, #8]	; 9cfc <sf_gen_p80211_type+0x80>
    9cf0:	add	r0, pc, r0
    9cf4:	bl	1f30 <sf_bpf_error>
    9cf8:	.word	0x000267a0
    9cfc:	.word	0x000090a1

00009d00 <sf_gen_p80211_fcdir>:
    9d00:	push	{fp, lr}
    9d04:	mov	fp, sp
    9d08:	sub	sp, sp, #16
    9d0c:	ldr	r1, [pc, #100]	; 9d78 <sf_gen_p80211_fcdir+0x78>
    9d10:	ldr	r1, [pc, r1]
    9d14:	sub	r2, r1, #105	; 0x69
    9d18:	cmp	r2, #22
    9d1c:	bhi	9d34 <sf_gen_p80211_fcdir+0x34>
    9d20:	movw	r3, #16385	; 0x4001
    9d24:	mov	ip, #1
    9d28:	movt	r3, #64	; 0x40
    9d2c:	tst	r3, ip, lsl r2
    9d30:	bne	9d3c <sf_gen_p80211_fcdir+0x3c>
    9d34:	cmp	r1, #163	; 0xa3
    9d38:	bne	9d6c <sf_gen_p80211_fcdir+0x6c>
    9d3c:	mov	r1, #0
    9d40:	mov	r2, #16
    9d44:	str	r0, [sp, #8]
    9d48:	mov	r0, #1
    9d4c:	mov	r3, #3
    9d50:	str	r2, [sp]
    9d54:	str	r1, [sp, #4]
    9d58:	mov	r1, #1
    9d5c:	mov	r2, #16
    9d60:	bl	a38c <gen_ncmp>
    9d64:	mov	sp, fp
    9d68:	pop	{fp, pc}
    9d6c:	ldr	r0, [pc, #8]	; 9d7c <sf_gen_p80211_fcdir+0x7c>
    9d70:	add	r0, pc, r0
    9d74:	bl	1f30 <sf_bpf_error>
    9d78:	.word	0x00026720
    9d7c:	.word	0x00009052

00009d80 <sf_gen_acode>:
    9d80:	push	{r4, r5, fp, lr}
    9d84:	add	fp, sp, #8
    9d88:	mov	r4, r0
    9d8c:	ldr	r0, [pc, #272]	; 9ea4 <sf_gen_acode+0x124>
    9d90:	ldr	r0, [pc, r0]
    9d94:	cmp	r0, #129	; 0x81
    9d98:	cmpne	r0, #7
    9d9c:	bne	9e88 <sf_gen_acode+0x108>
    9da0:	movw	r0, #65534	; 0xfffe
    9da4:	and	r0, r1, r0
    9da8:	cmp	r0, #256	; 0x100
    9dac:	bne	9e94 <sf_gen_acode+0x114>
    9db0:	lsr	r0, r1, #16
    9db4:	uxtb	r0, r0
    9db8:	cmp	r0, #4
    9dbc:	bhi	9ea0 <sf_gen_acode+0x120>
    9dc0:	add	r1, pc, #4
    9dc4:	ldr	r0, [r1, r0, lsl #2]
    9dc8:	add	pc, r1, r0
    9dcc:	.word	0x00000014
    9dd0:	.word	0x00000098
    9dd4:	.word	0x000000a4
    9dd8:	.word	0x00000014
    9ddc:	.word	0x00000054
    9de0:	mov	r0, #1
    9de4:	mov	r1, #0
    9de8:	mov	r2, #1
    9dec:	mov	r3, r4
    9df0:	bl	b330 <gen_bcmp>
    9df4:	mov	r5, r0
    9df8:	mov	r0, #1
    9dfc:	mov	r1, #1
    9e00:	mov	r2, #1
    9e04:	mov	r3, r4
    9e08:	bl	b330 <gen_bcmp>
    9e0c:	mov	r4, r0
    9e10:	mov	r0, r5
    9e14:	mov	r1, r4
    9e18:	bl	3a3c <sf_gen_or>
    9e1c:	b	9e5c <sf_gen_acode+0xdc>
    9e20:	mov	r0, #1
    9e24:	mov	r1, #0
    9e28:	mov	r2, #1
    9e2c:	mov	r3, r4
    9e30:	bl	b330 <gen_bcmp>
    9e34:	mov	r5, r0
    9e38:	mov	r0, #1
    9e3c:	mov	r1, #1
    9e40:	mov	r2, #1
    9e44:	mov	r3, r4
    9e48:	bl	b330 <gen_bcmp>
    9e4c:	mov	r4, r0
    9e50:	mov	r0, r5
    9e54:	mov	r1, r4
    9e58:	bl	3964 <sf_gen_and>
    9e5c:	mov	r0, r4
    9e60:	pop	{r4, r5, fp, pc}
    9e64:	mov	r0, #1
    9e68:	mov	r1, #0
    9e6c:	b	9e78 <sf_gen_acode+0xf8>
    9e70:	mov	r0, #1
    9e74:	mov	r1, #1
    9e78:	mov	r2, #1
    9e7c:	mov	r3, r4
    9e80:	pop	{r4, r5, fp, lr}
    9e84:	b	b330 <gen_bcmp>
    9e88:	ldr	r0, [pc, #28]	; 9eac <sf_gen_acode+0x12c>
    9e8c:	add	r0, pc, r0
    9e90:	bl	1f30 <sf_bpf_error>
    9e94:	ldr	r0, [pc, #12]	; 9ea8 <sf_gen_acode+0x128>
    9e98:	add	r0, pc, r0
    9e9c:	bl	1f30 <sf_bpf_error>
    9ea0:	bl	f74 <abort@plt>
    9ea4:	.word	0x000266a0
    9ea8:	.word	0x00008f5d
    9eac:	.word	0x00008f93

00009eb0 <sf_gen_vlan>:
    9eb0:	push	{r4, r5, r6, sl, fp, lr}
    9eb4:	add	fp, sp, #16
    9eb8:	sub	sp, sp, #16
    9ebc:	mov	r4, r0
    9ec0:	ldr	r0, [pc, #252]	; 9fc4 <sf_gen_vlan+0x114>
    9ec4:	ldr	r0, [pc, r0]
    9ec8:	cmp	r0, #0
    9ecc:	bne	9fac <sf_gen_vlan+0xfc>
    9ed0:	ldr	r0, [pc, #240]	; 9fc8 <sf_gen_vlan+0x118>
    9ed4:	ldr	r0, [pc, r0]
    9ed8:	ldr	r1, [pc, #236]	; 9fcc <sf_gen_vlan+0x11c>
    9edc:	add	r1, pc, r1
    9ee0:	str	r0, [r1]
    9ee4:	ldr	r1, [pc, #228]	; 9fd0 <sf_gen_vlan+0x120>
    9ee8:	ldr	r1, [pc, r1]
    9eec:	cmp	r1, #1
    9ef0:	bne	9fb8 <sf_gen_vlan+0x108>
    9ef4:	ldr	r1, [pc, #216]	; 9fd4 <sf_gen_vlan+0x124>
    9ef8:	mov	r0, #1
    9efc:	mov	r2, #8
    9f00:	ldr	r1, [pc, r1]
    9f04:	bl	98e8 <gen_load_a>
    9f08:	mov	r6, r0
    9f0c:	mov	r0, #208	; 0xd0
    9f10:	bl	1fbc <newchunk>
    9f14:	mov	r5, r0
    9f18:	mov	r1, #33024	; 0x8100
    9f1c:	cmp	r4, #0
    9f20:	mov	r0, #21
    9f24:	str	r1, [r5, #20]
    9f28:	str	r6, [r5, #4]
    9f2c:	str	r0, [r5, #8]
    9f30:	str	r5, [r5, #96]	; 0x60
    9f34:	bmi	9f70 <sf_gen_vlan+0xc0>
    9f38:	mov	r1, #16
    9f3c:	mov	r0, #0
    9f40:	mov	r2, #8
    9f44:	movw	r3, #4095	; 0xfff
    9f48:	str	r1, [sp]
    9f4c:	stmib	sp, {r0, r4}
    9f50:	mov	r0, #2
    9f54:	mov	r1, #0
    9f58:	bl	a38c <gen_ncmp>
    9f5c:	mov	r4, r0
    9f60:	mov	r0, r5
    9f64:	mov	r1, r4
    9f68:	bl	3964 <sf_gen_and>
    9f6c:	mov	r5, r4
    9f70:	ldr	r0, [pc, #96]	; 9fd8 <sf_gen_vlan+0x128>
    9f74:	ldr	r0, [pc, r0]
    9f78:	ldr	r1, [pc, #92]	; 9fdc <sf_gen_vlan+0x12c>
    9f7c:	add	r0, r0, #4
    9f80:	add	r1, pc, r1
    9f84:	str	r0, [r1]
    9f88:	ldr	r0, [pc, #80]	; 9fe0 <sf_gen_vlan+0x130>
    9f8c:	ldr	r0, [pc, r0]
    9f90:	ldr	r1, [pc, #76]	; 9fe4 <sf_gen_vlan+0x134>
    9f94:	add	r0, r0, #4
    9f98:	add	r1, pc, r1
    9f9c:	str	r0, [r1]
    9fa0:	mov	r0, r5
    9fa4:	sub	sp, fp, #16
    9fa8:	pop	{r4, r5, r6, sl, fp, pc}
    9fac:	ldr	r0, [pc, #56]	; 9fec <sf_gen_vlan+0x13c>
    9fb0:	add	r0, pc, r0
    9fb4:	bl	1f30 <sf_bpf_error>
    9fb8:	ldr	r0, [pc, #40]	; 9fe8 <sf_gen_vlan+0x138>
    9fbc:	add	r0, pc, r0
    9fc0:	bl	1f30 <sf_bpf_error>
    9fc4:	.word	0x00026210
    9fc8:	.word	0x0002656c
    9fcc:	.word	0x000261fc
    9fd0:	.word	0x00026548
    9fd4:	.word	0x00026538
    9fd8:	.word	0x000264c8
    9fdc:	.word	0x000264bc
    9fe0:	.word	0x000264ac
    9fe4:	.word	0x000264a0
    9fe8:	.word	0x00008e99
    9fec:	.word	0x00008e8c

00009ff0 <sf_gen_mpls>:
    9ff0:	push	{r4, r5, fp, lr}
    9ff4:	add	fp, sp, #8
    9ff8:	sub	sp, sp, #16
    9ffc:	mov	r4, r0
    a000:	ldr	r0, [pc, #304]	; a138 <sf_gen_mpls+0x148>
    a004:	ldr	r0, [pc, r0]
    a008:	ldr	r1, [pc, #300]	; a13c <sf_gen_mpls+0x14c>
    a00c:	add	r1, pc, r1
    a010:	str	r0, [r1]
    a014:	ldr	r1, [pc, #292]	; a140 <sf_gen_mpls+0x150>
    a018:	ldr	r1, [pc, r1]
    a01c:	cmp	r1, #0
    a020:	beq	a050 <sf_gen_mpls+0x60>
    a024:	mov	r1, #0
    a028:	mov	r2, #16
    a02c:	mov	r3, #1
    a030:	str	r2, [sp]
    a034:	str	r1, [sp, #4]
    a038:	str	r1, [sp, #8]
    a03c:	sub	r1, r0, #2
    a040:	mov	r0, #2
    a044:	mov	r2, #16
    a048:	bl	a38c <gen_ncmp>
    a04c:	b	a080 <sf_gen_mpls+0x90>
    a050:	ldr	r1, [pc, #236]	; a144 <sf_gen_mpls+0x154>
    a054:	ldr	r1, [pc, r1]
    a058:	cmp	r1, #104	; 0x68
    a05c:	beq	a070 <sf_gen_mpls+0x80>
    a060:	cmp	r1, #9
    a064:	beq	a078 <sf_gen_mpls+0x88>
    a068:	cmp	r1, #1
    a06c:	bne	a12c <sf_gen_mpls+0x13c>
    a070:	movw	r0, #34887	; 0x8847
    a074:	b	a07c <sf_gen_mpls+0x8c>
    a078:	movw	r0, #641	; 0x281
    a07c:	bl	4334 <gen_linktype>
    a080:	mov	r5, r0
    a084:	cmp	r4, #0
    a088:	bmi	a0d4 <sf_gen_mpls+0xe4>
    a08c:	ldr	r1, [pc, #184]	; a14c <sf_gen_mpls+0x15c>
    a090:	mov	r3, #16
    a094:	lsl	r0, r4, #12
    a098:	mov	r2, #0
    a09c:	ldr	r1, [pc, r1]
    a0a0:	str	r3, [sp]
    a0a4:	movw	r3, #61440	; 0xf000
    a0a8:	str	r2, [sp, #4]
    a0ac:	str	r0, [sp, #8]
    a0b0:	mov	r0, #2
    a0b4:	mov	r2, #0
    a0b8:	movt	r3, #65535	; 0xffff
    a0bc:	bl	a38c <gen_ncmp>
    a0c0:	mov	r4, r0
    a0c4:	mov	r0, r5
    a0c8:	mov	r1, r4
    a0cc:	bl	3964 <sf_gen_and>
    a0d0:	b	a0d8 <sf_gen_mpls+0xe8>
    a0d4:	mov	r4, r5
    a0d8:	ldr	r0, [pc, #112]	; a150 <sf_gen_mpls+0x160>
    a0dc:	ldr	r0, [pc, r0]
    a0e0:	ldr	r1, [pc, #108]	; a154 <sf_gen_mpls+0x164>
    a0e4:	add	r0, r0, #4
    a0e8:	add	r1, pc, r1
    a0ec:	str	r0, [r1]
    a0f0:	ldr	r0, [pc, #96]	; a158 <sf_gen_mpls+0x168>
    a0f4:	ldr	r0, [pc, r0]
    a0f8:	ldr	r1, [pc, #92]	; a15c <sf_gen_mpls+0x16c>
    a0fc:	add	r0, r0, #4
    a100:	add	r1, pc, r1
    a104:	str	r0, [r1]
    a108:	ldr	r0, [pc, #80]	; a160 <sf_gen_mpls+0x170>
    a10c:	ldr	r0, [pc, r0]
    a110:	ldr	r1, [pc, #76]	; a164 <sf_gen_mpls+0x174>
    a114:	add	r0, r0, #1
    a118:	add	r1, pc, r1
    a11c:	str	r0, [r1]
    a120:	mov	r0, r4
    a124:	sub	sp, fp, #8
    a128:	pop	{r4, r5, fp, pc}
    a12c:	ldr	r0, [pc, #20]	; a148 <sf_gen_mpls+0x158>
    a130:	add	r0, pc, r0
    a134:	bl	1f30 <sf_bpf_error>
    a138:	.word	0x0002643c
    a13c:	.word	0x000260cc
    a140:	.word	0x000260bc
    a144:	.word	0x000263dc
    a148:	.word	0x00008d4b
    a14c:	.word	0x0002603c
    a150:	.word	0x00026370
    a154:	.word	0x00026364
    a158:	.word	0x0002634c
    a15c:	.word	0x00026340
    a160:	.word	0x00025fc8
    a164:	.word	0x00025fbc

0000a168 <sf_gen_pppoed>:
    a168:	movw	r0, #34915	; 0x8863
    a16c:	b	4334 <gen_linktype>

0000a170 <sf_gen_pppoes>:
    a170:	push	{fp, lr}
    a174:	mov	fp, sp
    a178:	movw	r0, #34916	; 0x8864
    a17c:	bl	4334 <gen_linktype>
    a180:	ldr	r1, [pc, #76]	; a1d4 <sf_gen_pppoes+0x64>
    a184:	mov	r2, #1
    a188:	add	r1, pc, r1
    a18c:	strb	r2, [r1]
    a190:	mov	r2, #8
    a194:	ldr	r1, [pc, #60]	; a1d8 <sf_gen_pppoes+0x68>
    a198:	add	r1, pc, r1
    a19c:	str	r2, [r1]
    a1a0:	ldr	r1, [pc, #52]	; a1dc <sf_gen_pppoes+0x6c>
    a1a4:	ldr	r1, [pc, r1]
    a1a8:	ldr	r3, [pc, #48]	; a1e0 <sf_gen_pppoes+0x70>
    a1ac:	add	r3, pc, r3
    a1b0:	str	r2, [r3]
    a1b4:	ldr	r2, [pc, #40]	; a1e4 <sf_gen_pppoes+0x74>
    a1b8:	add	r2, pc, r2
    a1bc:	str	r1, [r2]
    a1c0:	add	r1, r1, #6
    a1c4:	ldr	r2, [pc, #28]	; a1e8 <sf_gen_pppoes+0x78>
    a1c8:	add	r2, pc, r2
    a1cc:	str	r1, [r2]
    a1d0:	pop	{fp, pc}
    a1d4:	.word	0x000262c8
    a1d8:	.word	0x000262b4
    a1dc:	.word	0x0002629c
    a1e0:	.word	0x00026294
    a1e4:	.word	0x00025f20
    a1e8:	.word	0x00026270

0000a1ec <sf_gen_atmfield_code>:
    a1ec:	push	{fp, lr}
    a1f0:	mov	fp, sp
    a1f4:	sub	sp, sp, #16
    a1f8:	sub	ip, r0, #51	; 0x33
    a1fc:	cmp	ip, #4
    a200:	bhi	a338 <sf_gen_atmfield_code+0x14c>
    a204:	add	lr, pc, #4
    a208:	ldr	r0, [lr, ip, lsl #2]
    a20c:	add	pc, lr, r0
    a210:	.word	0x00000014
    a214:	.word	0x000000e0
    a218:	.word	0x00000088
    a21c:	.word	0x000000b8
    a220:	.word	0x0000004c
    a224:	ldr	r0, [pc, #308]	; a360 <sf_gen_atmfield_code+0x174>
    a228:	add	r0, pc, r0
    a22c:	ldrb	r0, [r0]
    a230:	cmp	r0, #0
    a234:	beq	a33c <sf_gen_atmfield_code+0x150>
    a238:	ldr	ip, [pc, #292]	; a364 <sf_gen_atmfield_code+0x178>
    a23c:	ldr	ip, [pc, ip]
    a240:	cmn	ip, #1
    a244:	beq	a338 <sf_gen_atmfield_code+0x14c>
    a248:	stm	sp, {r2, r3}
    a24c:	str	r1, [sp, #8]
    a250:	mov	r0, #1
    a254:	mov	r1, ip
    a258:	b	a2e8 <sf_gen_atmfield_code+0xfc>
    a25c:	ldr	r0, [pc, #276]	; a378 <sf_gen_atmfield_code+0x18c>
    a260:	add	r0, pc, r0
    a264:	ldrb	r0, [r0]
    a268:	cmp	r0, #0
    a26c:	beq	a348 <sf_gen_atmfield_code+0x15c>
    a270:	ldr	r0, [pc, #260]	; a37c <sf_gen_atmfield_code+0x190>
    a274:	add	r0, pc, r0
    a278:	ldrb	r0, [r0]
    a27c:	cmp	r0, #1
    a280:	beq	a338 <sf_gen_atmfield_code+0x14c>
    a284:	stm	sp, {r2, r3}
    a288:	str	r1, [sp, #8]
    a28c:	mov	r0, #1
    a290:	mov	r1, #0
    a294:	b	a2e8 <sf_gen_atmfield_code+0xfc>
    a298:	ldr	r0, [pc, #208]	; a370 <sf_gen_atmfield_code+0x184>
    a29c:	add	r0, pc, r0
    a2a0:	ldrb	r0, [r0]
    a2a4:	cmp	r0, #1
    a2a8:	beq	a338 <sf_gen_atmfield_code+0x14c>
    a2ac:	stm	sp, {r2, r3}
    a2b0:	str	r1, [sp, #8]
    a2b4:	mov	r0, #1
    a2b8:	mov	r1, #0
    a2bc:	mov	r2, #16
    a2c0:	mov	r3, #15
    a2c4:	b	a32c <sf_gen_atmfield_code+0x140>
    a2c8:	ldr	r0, [pc, #164]	; a374 <sf_gen_atmfield_code+0x188>
    a2cc:	ldr	r0, [pc, r0]
    a2d0:	cmn	r0, #1
    a2d4:	beq	a338 <sf_gen_atmfield_code+0x14c>
    a2d8:	stm	sp, {r2, r3}
    a2dc:	str	r1, [sp, #8]
    a2e0:	add	r1, r0, #5
    a2e4:	mov	r0, #1
    a2e8:	mov	r2, #16
    a2ec:	b	a328 <sf_gen_atmfield_code+0x13c>
    a2f0:	ldr	r0, [pc, #112]	; a368 <sf_gen_atmfield_code+0x17c>
    a2f4:	add	r0, pc, r0
    a2f8:	ldrb	r0, [r0]
    a2fc:	cmp	r0, #0
    a300:	beq	a354 <sf_gen_atmfield_code+0x168>
    a304:	ldr	ip, [pc, #96]	; a36c <sf_gen_atmfield_code+0x180>
    a308:	ldr	ip, [pc, ip]
    a30c:	cmn	ip, #1
    a310:	beq	a338 <sf_gen_atmfield_code+0x14c>
    a314:	stm	sp, {r2, r3}
    a318:	str	r1, [sp, #8]
    a31c:	mov	r0, #1
    a320:	mov	r1, ip
    a324:	mov	r2, #8
    a328:	mvn	r3, #0
    a32c:	bl	a38c <gen_ncmp>
    a330:	mov	sp, fp
    a334:	pop	{fp, pc}
    a338:	bl	f74 <abort@plt>
    a33c:	ldr	r0, [pc, #60]	; a380 <sf_gen_atmfield_code+0x194>
    a340:	add	r0, pc, r0
    a344:	bl	1f30 <sf_bpf_error>
    a348:	ldr	r0, [pc, #56]	; a388 <sf_gen_atmfield_code+0x19c>
    a34c:	add	r0, pc, r0
    a350:	bl	1f30 <sf_bpf_error>
    a354:	ldr	r0, [pc, #40]	; a384 <sf_gen_atmfield_code+0x198>
    a358:	add	r0, pc, r0
    a35c:	bl	1f30 <sf_bpf_error>
    a360:	.word	0x0002622c
    a364:	.word	0x0002621c
    a368:	.word	0x00026160
    a36c:	.word	0x00026154
    a370:	.word	0x000261c4
    a374:	.word	0x00026198
    a378:	.word	0x000261f4
    a37c:	.word	0x000261ec
    a380:	.word	0x00008b61
    a384:	.word	0x00008b69
    a388:	.word	0x00008b95

0000a38c <gen_ncmp>:
    a38c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    a390:	add	fp, sp, #24
    a394:	mov	r5, r3
    a398:	bl	98e8 <gen_load_a>
    a39c:	ldr	r7, [fp, #16]
    a3a0:	ldr	r8, [fp, #12]
    a3a4:	ldr	r6, [fp, #8]
    a3a8:	mov	r4, r0
    a3ac:	cmn	r5, #1
    a3b0:	beq	a3e0 <gen_ncmp+0x54>
    a3b4:	mov	r0, #20
    a3b8:	bl	1fbc <newchunk>
    a3bc:	mov	r2, r4
    a3c0:	mov	r1, #84	; 0x54
    a3c4:	str	r5, [r0, #12]
    a3c8:	str	r1, [r0]
    a3cc:	mov	r1, r2
    a3d0:	ldr	r2, [r2, #16]
    a3d4:	cmp	r2, #0
    a3d8:	bne	a3cc <gen_ncmp+0x40>
    a3dc:	str	r0, [r1, #16]
    a3e0:	mov	r0, #208	; 0xd0
    a3e4:	orr	r5, r6, #5
    a3e8:	bl	1fbc <newchunk>
    a3ec:	cmp	r8, #0
    a3f0:	str	r7, [r0, #20]
    a3f4:	stmib	r0, {r4, r5}
    a3f8:	str	r0, [r0, #96]	; 0x60
    a3fc:	beq	a418 <gen_ncmp+0x8c>
    a400:	orr	r1, r6, #16
    a404:	cmp	r1, #48	; 0x30
    a408:	ldreq	r1, [r0, #44]	; 0x2c
    a40c:	clzeq	r1, r1
    a410:	lsreq	r1, r1, #5
    a414:	streq	r1, [r0, #44]	; 0x2c
    a418:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000a41c <sf_gen_atmtype_abbrev>:
    a41c:	push	{r4, r5, fp, lr}
    a420:	add	fp, sp, #8
    a424:	sub	r0, r0, #22
    a428:	cmp	r0, #9
    a42c:	bhi	a6a4 <sf_gen_atmtype_abbrev+0x288>
    a430:	add	r1, pc, #4
    a434:	ldr	r0, [r1, r0, lsl #2]
    a438:	add	pc, r1, r0
    a43c:	.word	0x00000028
    a440:	.word	0x0000010c
    a444:	.word	0x000000d4
    a448:	.word	0x00000060
    a44c:	.word	0x00000210
    a450:	.word	0x00000144
    a454:	.word	0x00000268
    a458:	.word	0x00000268
    a45c:	.word	0x0000017c
    a460:	.word	0x00000098
    a464:	ldr	r0, [pc, #668]	; a708 <sf_gen_atmtype_abbrev+0x2ec>
    a468:	add	r0, pc, r0
    a46c:	ldrb	r0, [r0]
    a470:	cmp	r0, #0
    a474:	beq	a6a8 <sf_gen_atmtype_abbrev+0x28c>
    a478:	mov	r0, #51	; 0x33
    a47c:	mov	r1, #0
    a480:	mov	r2, #16
    a484:	mov	r3, #0
    a488:	bl	a1ec <sf_gen_atmfield_code>
    a48c:	mov	r5, r0
    a490:	mov	r0, #52	; 0x34
    a494:	mov	r1, #1
    a498:	b	a680 <sf_gen_atmtype_abbrev+0x264>
    a49c:	ldr	r0, [pc, #624]	; a714 <sf_gen_atmtype_abbrev+0x2f8>
    a4a0:	add	r0, pc, r0
    a4a4:	ldrb	r0, [r0]
    a4a8:	cmp	r0, #0
    a4ac:	beq	a6b4 <sf_gen_atmtype_abbrev+0x298>
    a4b0:	mov	r0, #51	; 0x33
    a4b4:	mov	r1, #0
    a4b8:	mov	r2, #16
    a4bc:	mov	r3, #0
    a4c0:	bl	a1ec <sf_gen_atmfield_code>
    a4c4:	mov	r5, r0
    a4c8:	mov	r0, #52	; 0x34
    a4cc:	mov	r1, #4
    a4d0:	b	a680 <sf_gen_atmtype_abbrev+0x264>
    a4d4:	ldr	r0, [pc, #612]	; a740 <sf_gen_atmtype_abbrev+0x324>
    a4d8:	add	r0, pc, r0
    a4dc:	ldrb	r0, [r0]
    a4e0:	cmp	r0, #0
    a4e4:	beq	a6c0 <sf_gen_atmtype_abbrev+0x2a4>
    a4e8:	mov	r0, #53	; 0x35
    a4ec:	mov	r1, #2
    a4f0:	mov	r2, #16
    a4f4:	mov	r3, #0
    a4f8:	mov	r4, #0
    a4fc:	bl	a1ec <sf_gen_atmfield_code>
    a500:	ldr	r1, [pc, #572]	; a744 <sf_gen_atmtype_abbrev+0x328>
    a504:	add	r1, pc, r1
    a508:	strb	r4, [r1]
    a50c:	pop	{r4, r5, fp, pc}
    a510:	ldr	r0, [pc, #504]	; a710 <sf_gen_atmtype_abbrev+0x2f4>
    a514:	add	r0, pc, r0
    a518:	ldrb	r0, [r0]
    a51c:	cmp	r0, #0
    a520:	beq	a6cc <sf_gen_atmtype_abbrev+0x2b0>
    a524:	mov	r0, #51	; 0x33
    a528:	mov	r1, #0
    a52c:	mov	r2, #16
    a530:	mov	r3, #0
    a534:	bl	a1ec <sf_gen_atmfield_code>
    a538:	mov	r5, r0
    a53c:	mov	r0, #52	; 0x34
    a540:	mov	r1, #3
    a544:	b	a680 <sf_gen_atmtype_abbrev+0x264>
    a548:	ldr	r0, [pc, #444]	; a70c <sf_gen_atmtype_abbrev+0x2f0>
    a54c:	add	r0, pc, r0
    a550:	ldrb	r0, [r0]
    a554:	cmp	r0, #0
    a558:	beq	a6d8 <sf_gen_atmtype_abbrev+0x2bc>
    a55c:	mov	r0, #51	; 0x33
    a560:	mov	r1, #0
    a564:	mov	r2, #16
    a568:	mov	r3, #0
    a56c:	bl	a1ec <sf_gen_atmfield_code>
    a570:	mov	r5, r0
    a574:	mov	r0, #52	; 0x34
    a578:	mov	r1, #2
    a57c:	b	a680 <sf_gen_atmtype_abbrev+0x264>
    a580:	ldr	r0, [pc, #404]	; a71c <sf_gen_atmtype_abbrev+0x300>
    a584:	add	r0, pc, r0
    a588:	ldrb	r0, [r0]
    a58c:	cmp	r0, #0
    a590:	beq	a6e4 <sf_gen_atmtype_abbrev+0x2c8>
    a594:	mov	r0, #51	; 0x33
    a598:	mov	r1, #0
    a59c:	mov	r2, #16
    a5a0:	mov	r3, #0
    a5a4:	bl	a1ec <sf_gen_atmfield_code>
    a5a8:	mov	r5, r0
    a5ac:	mov	r0, #52	; 0x34
    a5b0:	mov	r1, #16
    a5b4:	b	a680 <sf_gen_atmtype_abbrev+0x264>
    a5b8:	ldr	r0, [pc, #352]	; a720 <sf_gen_atmtype_abbrev+0x304>
    a5bc:	add	r0, pc, r0
    a5c0:	ldrb	r0, [r0]
    a5c4:	cmp	r0, #0
    a5c8:	beq	a6f0 <sf_gen_atmtype_abbrev+0x2d4>
    a5cc:	mov	r0, #53	; 0x35
    a5d0:	mov	r1, #1
    a5d4:	mov	r2, #16
    a5d8:	mov	r3, #0
    a5dc:	mov	r4, #1
    a5e0:	mov	r5, #0
    a5e4:	bl	a1ec <sf_gen_atmfield_code>
    a5e8:	ldr	r1, [pc, #308]	; a724 <sf_gen_atmtype_abbrev+0x308>
    a5ec:	mov	r2, #3
    a5f0:	add	r1, pc, r1
    a5f4:	strb	r4, [r1]
    a5f8:	ldr	r1, [pc, #296]	; a728 <sf_gen_atmtype_abbrev+0x30c>
    a5fc:	add	r1, pc, r1
    a600:	str	r5, [r1]
    a604:	ldr	r1, [pc, #288]	; a72c <sf_gen_atmtype_abbrev+0x310>
    a608:	add	r1, pc, r1
    a60c:	str	r2, [r1]
    a610:	ldr	r1, [pc, #280]	; a730 <sf_gen_atmtype_abbrev+0x314>
    a614:	ldr	r1, [pc, r1]
    a618:	ldr	r3, [pc, #276]	; a734 <sf_gen_atmtype_abbrev+0x318>
    a61c:	add	r2, r1, #2
    a620:	add	r3, pc, r3
    a624:	str	r2, [r3]
    a628:	add	r2, r1, #14
    a62c:	add	r1, r1, #16
    a630:	ldr	r3, [pc, #256]	; a738 <sf_gen_atmtype_abbrev+0x31c>
    a634:	add	r3, pc, r3
    a638:	str	r2, [r3]
    a63c:	ldr	r2, [pc, #248]	; a73c <sf_gen_atmtype_abbrev+0x320>
    a640:	add	r2, pc, r2
    a644:	str	r1, [r2]
    a648:	pop	{r4, r5, fp, pc}
    a64c:	ldr	r0, [pc, #196]	; a718 <sf_gen_atmtype_abbrev+0x2fc>
    a650:	add	r0, pc, r0
    a654:	ldrb	r0, [r0]
    a658:	cmp	r0, #0
    a65c:	beq	a6fc <sf_gen_atmtype_abbrev+0x2e0>
    a660:	mov	r0, #51	; 0x33
    a664:	mov	r1, #0
    a668:	mov	r2, #16
    a66c:	mov	r3, #0
    a670:	bl	a1ec <sf_gen_atmfield_code>
    a674:	mov	r5, r0
    a678:	mov	r0, #52	; 0x34
    a67c:	mov	r1, #5
    a680:	mov	r2, #16
    a684:	mov	r3, #0
    a688:	bl	a1ec <sf_gen_atmfield_code>
    a68c:	mov	r4, r0
    a690:	mov	r0, r5
    a694:	mov	r1, r4
    a698:	bl	3964 <sf_gen_and>
    a69c:	mov	r0, r4
    a6a0:	pop	{r4, r5, fp, pc}
    a6a4:	bl	f74 <abort@plt>
    a6a8:	ldr	r0, [pc, #152]	; a748 <sf_gen_atmtype_abbrev+0x32c>
    a6ac:	add	r0, pc, r0
    a6b0:	bl	1f30 <sf_bpf_error>
    a6b4:	ldr	r0, [pc, #152]	; a754 <sf_gen_atmtype_abbrev+0x338>
    a6b8:	add	r0, pc, r0
    a6bc:	bl	1f30 <sf_bpf_error>
    a6c0:	ldr	r0, [pc, #156]	; a764 <sf_gen_atmtype_abbrev+0x348>
    a6c4:	add	r0, pc, r0
    a6c8:	bl	1f30 <sf_bpf_error>
    a6cc:	ldr	r0, [pc, #124]	; a750 <sf_gen_atmtype_abbrev+0x334>
    a6d0:	add	r0, pc, r0
    a6d4:	bl	1f30 <sf_bpf_error>
    a6d8:	ldr	r0, [pc, #108]	; a74c <sf_gen_atmtype_abbrev+0x330>
    a6dc:	add	r0, pc, r0
    a6e0:	bl	1f30 <sf_bpf_error>
    a6e4:	ldr	r0, [pc, #112]	; a75c <sf_gen_atmtype_abbrev+0x340>
    a6e8:	add	r0, pc, r0
    a6ec:	bl	1f30 <sf_bpf_error>
    a6f0:	ldr	r0, [pc, #104]	; a760 <sf_gen_atmtype_abbrev+0x344>
    a6f4:	add	r0, pc, r0
    a6f8:	bl	1f30 <sf_bpf_error>
    a6fc:	ldr	r0, [pc, #84]	; a758 <sf_gen_atmtype_abbrev+0x33c>
    a700:	add	r0, pc, r0
    a704:	bl	1f30 <sf_bpf_error>
    a708:	.word	0x00025fec
    a70c:	.word	0x00025f08
    a710:	.word	0x00025f40
    a714:	.word	0x00025fb4
    a718:	.word	0x00025e04
    a71c:	.word	0x00025ed0
    a720:	.word	0x00025e98
    a724:	.word	0x00025e44
    a728:	.word	0x00025e44
    a72c:	.word	0x00025e44
    a730:	.word	0x00025e50
    a734:	.word	0x00025e28
    a738:	.word	0x00025e04
    a73c:	.word	0x00025dfc
    a740:	.word	0x00025f7c
    a744:	.word	0x00025f30
    a748:	.word	0x00008859
    a74c:	.word	0x0000884b
    a750:	.word	0x00008877
    a754:	.word	0x000088b2
    a758:	.word	0x0000888d
    a75c:	.word	0x000088c4
    a760:	.word	0x000088da
    a764:	.word	0x0000892b

0000a768 <sf_gen_mtp2type_abbrev>:
    a768:	push	{r4, r5, r6, sl, fp, lr}
    a76c:	add	fp, sp, #16
    a770:	sub	sp, sp, #16
    a774:	cmp	r0, #24
    a778:	beq	a848 <sf_gen_mtp2type_abbrev+0xe0>
    a77c:	cmp	r0, #23
    a780:	beq	a7c4 <sf_gen_mtp2type_abbrev+0x5c>
    a784:	cmp	r0, #22
    a788:	bne	a89c <sf_gen_mtp2type_abbrev+0x134>
    a78c:	ldr	r0, [pc, #304]	; a8c4 <sf_gen_mtp2type_abbrev+0x15c>
    a790:	ldr	r0, [pc, r0]
    a794:	sub	r1, r0, #139	; 0x8b
    a798:	cmp	r1, #2
    a79c:	bcc	a7a8 <sf_gen_mtp2type_abbrev+0x40>
    a7a0:	cmp	r0, #197	; 0xc5
    a7a4:	bne	a8a0 <sf_gen_mtp2type_abbrev+0x138>
    a7a8:	ldr	r1, [pc, #280]	; a8c8 <sf_gen_mtp2type_abbrev+0x160>
    a7ac:	mov	r0, #0
    a7b0:	mov	r2, #16
    a7b4:	ldr	r1, [pc, r1]
    a7b8:	str	r2, [sp]
    a7bc:	str	r0, [sp, #4]
    a7c0:	b	a880 <sf_gen_mtp2type_abbrev+0x118>
    a7c4:	ldr	r0, [pc, #256]	; a8cc <sf_gen_mtp2type_abbrev+0x164>
    a7c8:	ldr	r0, [pc, r0]
    a7cc:	sub	r1, r0, #139	; 0x8b
    a7d0:	cmp	r1, #2
    a7d4:	bcc	a7e0 <sf_gen_mtp2type_abbrev+0x78>
    a7d8:	cmp	r0, #197	; 0xc5
    a7dc:	bne	a8ac <sf_gen_mtp2type_abbrev+0x144>
    a7e0:	ldr	r1, [pc, #232]	; a8d0 <sf_gen_mtp2type_abbrev+0x168>
    a7e4:	mov	r0, #2
    a7e8:	mov	r2, #1
    a7ec:	mov	r5, #32
    a7f0:	mov	r3, #63	; 0x3f
    a7f4:	mov	r6, #0
    a7f8:	ldr	r1, [pc, r1]
    a7fc:	str	r2, [sp, #4]
    a800:	str	r0, [sp, #8]
    a804:	mov	r0, #0
    a808:	mov	r2, #16
    a80c:	str	r5, [sp]
    a810:	bl	a38c <gen_ncmp>
    a814:	ldr	r1, [pc, #184]	; a8d4 <sf_gen_mtp2type_abbrev+0x16c>
    a818:	mov	r4, r0
    a81c:	mov	r0, #0
    a820:	mov	r2, #16
    a824:	mov	r3, #63	; 0x3f
    a828:	ldr	r1, [pc, r1]
    a82c:	stm	sp, {r5, r6}
    a830:	str	r6, [sp, #8]
    a834:	bl	a38c <gen_ncmp>
    a838:	mov	r1, r4
    a83c:	bl	3964 <sf_gen_and>
    a840:	mov	r0, r4
    a844:	b	a894 <sf_gen_mtp2type_abbrev+0x12c>
    a848:	ldr	r0, [pc, #136]	; a8d8 <sf_gen_mtp2type_abbrev+0x170>
    a84c:	ldr	r0, [pc, r0]
    a850:	sub	r1, r0, #139	; 0x8b
    a854:	cmp	r1, #2
    a858:	bcc	a864 <sf_gen_mtp2type_abbrev+0xfc>
    a85c:	cmp	r0, #197	; 0xc5
    a860:	bne	a8b8 <sf_gen_mtp2type_abbrev+0x150>
    a864:	ldr	r1, [pc, #112]	; a8dc <sf_gen_mtp2type_abbrev+0x174>
    a868:	mov	r2, #0
    a86c:	mov	r3, #32
    a870:	mov	r0, #2
    a874:	ldr	r1, [pc, r1]
    a878:	str	r3, [sp]
    a87c:	str	r2, [sp, #4]
    a880:	str	r0, [sp, #8]
    a884:	mov	r0, #0
    a888:	mov	r2, #16
    a88c:	mov	r3, #63	; 0x3f
    a890:	bl	a38c <gen_ncmp>
    a894:	sub	sp, fp, #16
    a898:	pop	{r4, r5, r6, sl, fp, pc}
    a89c:	bl	f74 <abort@plt>
    a8a0:	ldr	r0, [pc, #56]	; a8e0 <sf_gen_mtp2type_abbrev+0x178>
    a8a4:	add	r0, pc, r0
    a8a8:	bl	1f30 <sf_bpf_error>
    a8ac:	ldr	r0, [pc, #48]	; a8e4 <sf_gen_mtp2type_abbrev+0x17c>
    a8b0:	add	r0, pc, r0
    a8b4:	bl	1f30 <sf_bpf_error>
    a8b8:	ldr	r0, [pc, #40]	; a8e8 <sf_gen_mtp2type_abbrev+0x180>
    a8bc:	add	r0, pc, r0
    a8c0:	bl	1f30 <sf_bpf_error>
    a8c4:	.word	0x00025ca0
    a8c8:	.word	0x00025cb4
    a8cc:	.word	0x00025c68
    a8d0:	.word	0x00025c70
    a8d4:	.word	0x00025c40
    a8d8:	.word	0x00025be4
    a8dc:	.word	0x00025bf4
    a8e0:	.word	0x0000876b
    a8e4:	.word	0x0000877d
    a8e8:	.word	0x0000878f

0000a8ec <sf_gen_mtp3field_code>:
    a8ec:	push	{fp, lr}
    a8f0:	mov	fp, sp
    a8f4:	sub	sp, sp, #16
    a8f8:	sub	ip, r0, #1
    a8fc:	cmp	ip, #3
    a900:	bhi	aa14 <sf_gen_mtp3field_code+0x128>
    a904:	add	lr, pc, #4
    a908:	ldr	r0, [lr, ip, lsl #2]
    a90c:	add	pc, lr, r0
    a910:	.word	0x00000010
    a914:	.word	0x000000b0
    a918:	.word	0x00000044
    a91c:	.word	0x00000078
    a920:	ldr	ip, [pc, #336]	; aa78 <sf_gen_mtp3field_code+0x18c>
    a924:	ldr	ip, [pc, ip]
    a928:	cmn	ip, #1
    a92c:	beq	aa18 <sf_gen_mtp3field_code+0x12c>
    a930:	cmp	r1, #256	; 0x100
    a934:	bcs	aa24 <sf_gen_mtp3field_code+0x138>
    a938:	stm	sp, {r2, r3}
    a93c:	str	r1, [sp, #8]
    a940:	mov	r0, #0
    a944:	mov	r1, ip
    a948:	mov	r2, #16
    a94c:	mvn	r3, #0
    a950:	b	aa08 <sf_gen_mtp3field_code+0x11c>
    a954:	ldr	ip, [pc, #292]	; aa80 <sf_gen_mtp3field_code+0x194>
    a958:	ldr	ip, [pc, ip]
    a95c:	cmn	ip, #1
    a960:	beq	aa30 <sf_gen_mtp3field_code+0x144>
    a964:	cmp	r1, #16384	; 0x4000
    a968:	bcs	aa3c <sf_gen_mtp3field_code+0x150>
    a96c:	mov	r0, #4128768	; 0x3f0000
    a970:	stm	sp, {r2, r3}
    a974:	movw	r3, #0
    a978:	and	r0, r0, r1, lsl #8
    a97c:	movt	r3, #65343	; 0xff3f
    a980:	orr	r0, r0, r1, lsl #24
    a984:	b	a9f8 <sf_gen_mtp3field_code+0x10c>
    a988:	ldr	ip, [pc, #244]	; aa84 <sf_gen_mtp3field_code+0x198>
    a98c:	ldr	ip, [pc, ip]
    a990:	cmn	ip, #1
    a994:	beq	aa48 <sf_gen_mtp3field_code+0x15c>
    a998:	cmp	r1, #16
    a99c:	bcs	aa54 <sf_gen_mtp3field_code+0x168>
    a9a0:	lsl	r0, r1, #4
    a9a4:	stm	sp, {r2, r3}
    a9a8:	mov	r1, ip
    a9ac:	mov	r2, #16
    a9b0:	mov	r3, #240	; 0xf0
    a9b4:	str	r0, [sp, #8]
    a9b8:	mov	r0, #0
    a9bc:	b	aa08 <sf_gen_mtp3field_code+0x11c>
    a9c0:	ldr	ip, [pc, #180]	; aa7c <sf_gen_mtp3field_code+0x190>
    a9c4:	ldr	ip, [pc, ip]
    a9c8:	cmn	ip, #1
    a9cc:	beq	aa60 <sf_gen_mtp3field_code+0x174>
    a9d0:	cmp	r1, #16384	; 0x4000
    a9d4:	bcs	aa6c <sf_gen_mtp3field_code+0x180>
    a9d8:	stm	sp, {r2, r3}
    a9dc:	and	r0, r1, #1020	; 0x3fc
    a9e0:	ubfx	r2, r1, #10, #4
    a9e4:	and	r1, r1, #3
    a9e8:	movw	r3, #65295	; 0xff0f
    a9ec:	orr	r0, r2, r0, lsl #6
    a9f0:	movt	r3, #192	; 0xc0
    a9f4:	orr	r0, r0, r1, lsl #22
    a9f8:	str	r0, [sp, #8]
    a9fc:	mov	r0, #0
    aa00:	mov	r1, ip
    aa04:	mov	r2, #0
    aa08:	bl	a38c <gen_ncmp>
    aa0c:	mov	sp, fp
    aa10:	pop	{fp, pc}
    aa14:	bl	f74 <abort@plt>
    aa18:	ldr	r0, [pc, #104]	; aa88 <sf_gen_mtp3field_code+0x19c>
    aa1c:	add	r0, pc, r0
    aa20:	bl	1f30 <sf_bpf_error>
    aa24:	ldr	r0, [pc, #96]	; aa8c <sf_gen_mtp3field_code+0x1a0>
    aa28:	add	r0, pc, r0
    aa2c:	bl	1f30 <sf_bpf_error>
    aa30:	ldr	r0, [pc, #96]	; aa98 <sf_gen_mtp3field_code+0x1ac>
    aa34:	add	r0, pc, r0
    aa38:	bl	1f30 <sf_bpf_error>
    aa3c:	ldr	r0, [pc, #88]	; aa9c <sf_gen_mtp3field_code+0x1b0>
    aa40:	add	r0, pc, r0
    aa44:	bl	1f30 <sf_bpf_error>
    aa48:	ldr	r0, [pc, #80]	; aaa0 <sf_gen_mtp3field_code+0x1b4>
    aa4c:	add	r0, pc, r0
    aa50:	bl	1f30 <sf_bpf_error>
    aa54:	ldr	r0, [pc, #72]	; aaa4 <sf_gen_mtp3field_code+0x1b8>
    aa58:	add	r0, pc, r0
    aa5c:	bl	1f30 <sf_bpf_error>
    aa60:	ldr	r0, [pc, #40]	; aa90 <sf_gen_mtp3field_code+0x1a4>
    aa64:	add	r0, pc, r0
    aa68:	bl	1f30 <sf_bpf_error>
    aa6c:	ldr	r0, [pc, #32]	; aa94 <sf_gen_mtp3field_code+0x1a8>
    aa70:	add	r0, pc, r0
    aa74:	bl	1f30 <sf_bpf_error>
    aa78:	.word	0x00025b48
    aa7c:	.word	0x00025aac
    aa80:	.word	0x00025b1c
    aa84:	.word	0x00025aec
    aa88:	.word	0x0000864c
    aa8c:	.word	0x0000865c
    aa90:	.word	0x00008646
    aa94:	.word	0x00008656
    aa98:	.word	0x000086ba
    aa9c:	.word	0x000086ca
    aaa0:	.word	0x000086e6
    aaa4:	.word	0x000086f6

0000aaa8 <sf_gen_atmmulti_abbrev>:
    aaa8:	push	{r4, r5, fp, lr}
    aaac:	add	fp, sp, #8
    aab0:	ldr	r1, [pc, #564]	; acec <sf_gen_atmmulti_abbrev+0x244>
    aab4:	add	r1, pc, r1
    aab8:	ldrb	r1, [r1]
    aabc:	cmp	r0, #69	; 0x45
    aac0:	bgt	aae4 <sf_gen_atmmulti_abbrev+0x3c>
    aac4:	cmp	r0, #28
    aac8:	bne	aba8 <sf_gen_atmmulti_abbrev+0x100>
    aacc:	mov	r0, #29
    aad0:	cmp	r1, #0
    aad4:	bne	aabc <sf_gen_atmmulti_abbrev+0x14>
    aad8:	ldr	r0, [pc, #528]	; acf0 <sf_gen_atmmulti_abbrev+0x248>
    aadc:	add	r0, pc, r0
    aae0:	bl	1f30 <sf_bpf_error>
    aae4:	cmp	r0, #70	; 0x46
    aae8:	bne	ac0c <sf_gen_atmmulti_abbrev+0x164>
    aaec:	cmp	r1, #0
    aaf0:	beq	acc8 <sf_gen_atmmulti_abbrev+0x220>
    aaf4:	mov	r0, #54	; 0x36
    aaf8:	mov	r1, #5
    aafc:	mov	r2, #16
    ab00:	mov	r3, #0
    ab04:	bl	a1ec <sf_gen_atmfield_code>
    ab08:	mov	r5, r0
    ab0c:	mov	r0, #54	; 0x36
    ab10:	mov	r1, #2
    ab14:	mov	r2, #16
    ab18:	mov	r3, #0
    ab1c:	bl	a1ec <sf_gen_atmfield_code>
    ab20:	mov	r4, r0
    ab24:	mov	r0, r5
    ab28:	mov	r1, r4
    ab2c:	bl	3a3c <sf_gen_or>
    ab30:	mov	r0, #54	; 0x36
    ab34:	mov	r1, #7
    ab38:	mov	r2, #16
    ab3c:	mov	r3, #0
    ab40:	bl	a1ec <sf_gen_atmfield_code>
    ab44:	mov	r1, r4
    ab48:	bl	3a3c <sf_gen_or>
    ab4c:	mov	r0, #54	; 0x36
    ab50:	mov	r1, #15
    ab54:	mov	r2, #16
    ab58:	mov	r3, #0
    ab5c:	bl	a1ec <sf_gen_atmfield_code>
    ab60:	mov	r1, r4
    ab64:	bl	3a3c <sf_gen_or>
    ab68:	mov	r0, #54	; 0x36
    ab6c:	mov	r1, #77	; 0x4d
    ab70:	mov	r2, #16
    ab74:	mov	r3, #0
    ab78:	bl	a1ec <sf_gen_atmfield_code>
    ab7c:	mov	r1, r4
    ab80:	bl	3a3c <sf_gen_or>
    ab84:	mov	r0, #54	; 0x36
    ab88:	mov	r1, #90	; 0x5a
    ab8c:	mov	r2, #16
    ab90:	mov	r3, #0
    ab94:	bl	a1ec <sf_gen_atmfield_code>
    ab98:	mov	r1, r4
    ab9c:	bl	3a3c <sf_gen_or>
    aba0:	mov	r0, #26
    aba4:	b	acb0 <sf_gen_atmmulti_abbrev+0x208>
    aba8:	cmp	r0, #29
    abac:	bne	acc4 <sf_gen_atmmulti_abbrev+0x21c>
    abb0:	cmp	r1, #0
    abb4:	beq	acd4 <sf_gen_atmmulti_abbrev+0x22c>
    abb8:	mov	r0, #52	; 0x34
    abbc:	mov	r1, #3
    abc0:	mov	r2, #16
    abc4:	mov	r3, #0
    abc8:	bl	a1ec <sf_gen_atmfield_code>
    abcc:	mov	r5, r0
    abd0:	mov	r0, #52	; 0x34
    abd4:	mov	r1, #4
    abd8:	mov	r2, #16
    abdc:	mov	r3, #0
    abe0:	bl	a1ec <sf_gen_atmfield_code>
    abe4:	mov	r4, r0
    abe8:	mov	r0, r5
    abec:	mov	r1, r4
    abf0:	bl	3a3c <sf_gen_or>
    abf4:	mov	r0, #51	; 0x33
    abf8:	mov	r1, #0
    abfc:	mov	r2, #16
    ac00:	mov	r3, #0
    ac04:	bl	a1ec <sf_gen_atmfield_code>
    ac08:	b	acb4 <sf_gen_atmmulti_abbrev+0x20c>
    ac0c:	cmp	r0, #71	; 0x47
    ac10:	bne	acc4 <sf_gen_atmmulti_abbrev+0x21c>
    ac14:	cmp	r1, #0
    ac18:	beq	ace0 <sf_gen_atmmulti_abbrev+0x238>
    ac1c:	mov	r0, #54	; 0x36
    ac20:	mov	r1, #5
    ac24:	mov	r2, #16
    ac28:	mov	r3, #0
    ac2c:	bl	a1ec <sf_gen_atmfield_code>
    ac30:	mov	r5, r0
    ac34:	mov	r0, #54	; 0x36
    ac38:	mov	r1, #2
    ac3c:	mov	r2, #16
    ac40:	mov	r3, #0
    ac44:	bl	a1ec <sf_gen_atmfield_code>
    ac48:	mov	r4, r0
    ac4c:	mov	r0, r5
    ac50:	mov	r1, r4
    ac54:	bl	3a3c <sf_gen_or>
    ac58:	mov	r0, #54	; 0x36
    ac5c:	mov	r1, #7
    ac60:	mov	r2, #16
    ac64:	mov	r3, #0
    ac68:	bl	a1ec <sf_gen_atmfield_code>
    ac6c:	mov	r1, r4
    ac70:	bl	3a3c <sf_gen_or>
    ac74:	mov	r0, #54	; 0x36
    ac78:	mov	r1, #77	; 0x4d
    ac7c:	mov	r2, #16
    ac80:	mov	r3, #0
    ac84:	bl	a1ec <sf_gen_atmfield_code>
    ac88:	mov	r1, r4
    ac8c:	bl	3a3c <sf_gen_or>
    ac90:	mov	r0, #54	; 0x36
    ac94:	mov	r1, #90	; 0x5a
    ac98:	mov	r2, #16
    ac9c:	mov	r3, #0
    aca0:	bl	a1ec <sf_gen_atmfield_code>
    aca4:	mov	r1, r4
    aca8:	bl	3a3c <sf_gen_or>
    acac:	mov	r0, #22
    acb0:	bl	a41c <sf_gen_atmtype_abbrev>
    acb4:	mov	r1, r4
    acb8:	bl	3964 <sf_gen_and>
    acbc:	mov	r0, r4
    acc0:	pop	{r4, r5, fp, pc}
    acc4:	bl	f74 <abort@plt>
    acc8:	ldr	r0, [pc, #40]	; acf8 <sf_gen_atmmulti_abbrev+0x250>
    accc:	add	r0, pc, r0
    acd0:	bl	1f30 <sf_bpf_error>
    acd4:	ldr	r0, [pc, #24]	; acf4 <sf_gen_atmmulti_abbrev+0x24c>
    acd8:	add	r0, pc, r0
    acdc:	bl	1f30 <sf_bpf_error>
    ace0:	ldr	r0, [pc, #20]	; acfc <sf_gen_atmmulti_abbrev+0x254>
    ace4:	add	r0, pc, r0
    ace8:	bl	1f30 <sf_bpf_error>
    acec:	.word	0x000259a0
    acf0:	.word	0x00008697
    acf4:	.word	0x000084bb
    acf8:	.word	0x000084e9
    acfc:	.word	0x000084f8

0000ad00 <gen_mpls_linktype>:
    ad00:	push	{r4, r5, r6, sl, fp, lr}
    ad04:	add	fp, sp, #16
    ad08:	sub	sp, sp, #16
    ad0c:	cmp	r0, #17
    ad10:	beq	ad54 <gen_mpls_linktype+0x54>
    ad14:	cmp	r0, #2
    ad18:	bne	adc4 <gen_mpls_linktype+0xc4>
    ad1c:	mov	r0, #1
    ad20:	mov	r4, #0
    ad24:	mov	r6, #16
    ad28:	mvn	r1, #1
    ad2c:	mov	r2, #16
    ad30:	mov	r3, #1
    ad34:	str	r0, [sp, #8]
    ad38:	mov	r0, #3
    ad3c:	str	r6, [sp]
    ad40:	str	r4, [sp, #4]
    ad44:	bl	a38c <gen_ncmp>
    ad48:	mov	r5, r0
    ad4c:	mov	r0, #64	; 0x40
    ad50:	b	ad88 <gen_mpls_linktype+0x88>
    ad54:	mov	r0, #1
    ad58:	mov	r4, #0
    ad5c:	mov	r6, #16
    ad60:	mvn	r1, #1
    ad64:	mov	r2, #16
    ad68:	mov	r3, #1
    ad6c:	str	r0, [sp, #8]
    ad70:	mov	r0, #3
    ad74:	str	r6, [sp]
    ad78:	str	r4, [sp, #4]
    ad7c:	bl	a38c <gen_ncmp>
    ad80:	mov	r5, r0
    ad84:	mov	r0, #96	; 0x60
    ad88:	str	r0, [sp, #8]
    ad8c:	mov	r0, #3
    ad90:	mov	r1, #0
    ad94:	mov	r2, #16
    ad98:	mov	r3, #240	; 0xf0
    ad9c:	str	r6, [sp]
    ada0:	str	r4, [sp, #4]
    ada4:	bl	a38c <gen_ncmp>
    ada8:	mov	r4, r0
    adac:	mov	r0, r5
    adb0:	mov	r1, r4
    adb4:	bl	3964 <sf_gen_and>
    adb8:	mov	r0, r4
    adbc:	sub	sp, fp, #16
    adc0:	pop	{r4, r5, r6, sl, fp, pc}
    adc4:	bl	f74 <abort@plt>

0000adc8 <ethertype_to_ppptype>:
    adc8:	cmp	r0, #2048	; 0x800
    adcc:	bge	adec <ethertype_to_ppptype+0x24>
    add0:	cmp	r0, #253	; 0xfd
    add4:	bgt	ae14 <ethertype_to_ppptype+0x4c>
    add8:	cmp	r0, #66	; 0x42
    addc:	beq	ae50 <ethertype_to_ppptype+0x88>
    ade0:	cmp	r0, #224	; 0xe0
    ade4:	moveq	r0, #43	; 0x2b
    ade8:	b	ae48 <ethertype_to_ppptype+0x80>
    adec:	movw	r1, #32922	; 0x809a
    adf0:	cmp	r0, r1
    adf4:	bgt	ae2c <ethertype_to_ppptype+0x64>
    adf8:	cmp	r0, #2048	; 0x800
    adfc:	moveq	r0, #33	; 0x21
    ae00:	bxeq	lr
    ae04:	movw	r1, #24579	; 0x6003
    ae08:	cmp	r0, r1
    ae0c:	moveq	r0, #39	; 0x27
    ae10:	b	ae48 <ethertype_to_ppptype+0x80>
    ae14:	cmp	r0, #254	; 0xfe
    ae18:	moveq	r0, #35	; 0x23
    ae1c:	bxeq	lr
    ae20:	cmp	r0, #1536	; 0x600
    ae24:	moveq	r0, #37	; 0x25
    ae28:	b	ae48 <ethertype_to_ppptype+0x80>
    ae2c:	movw	r1, #32923	; 0x809b
    ae30:	cmp	r0, r1
    ae34:	moveq	r0, #41	; 0x29
    ae38:	bxeq	lr
    ae3c:	movw	r1, #34525	; 0x86dd
    ae40:	cmp	r0, r1
    ae44:	moveq	r0, #87	; 0x57
    ae48:	bxeq	lr
    ae4c:	bx	lr
    ae50:	mov	r0, #49	; 0x31
    ae54:	bx	lr

0000ae58 <gen_ether_linktype>:
    ae58:	push	{r4, r5, r6, r7, fp, lr}
    ae5c:	add	fp, sp, #16
    ae60:	sub	sp, sp, #8
    ae64:	mov	r4, r0
    ae68:	cmp	r0, #253	; 0xfd
    ae6c:	bgt	af18 <gen_ether_linktype+0xc0>
    ae70:	cmp	r4, #6
    ae74:	beq	ae88 <gen_ether_linktype+0x30>
    ae78:	cmp	r4, #224	; 0xe0
    ae7c:	beq	b0b8 <gen_ether_linktype+0x260>
    ae80:	cmp	r4, #240	; 0xf0
    ae84:	bne	b030 <gen_ether_linktype+0x1d8>
    ae88:	ldr	r1, [pc, #892]	; b20c <gen_ether_linktype+0x3b4>
    ae8c:	mov	r0, #1
    ae90:	mov	r2, #8
    ae94:	ldr	r1, [pc, r1]
    ae98:	bl	98e8 <gen_load_a>
    ae9c:	mov	r5, r0
    aea0:	mov	r0, #208	; 0xd0
    aea4:	bl	1fbc <newchunk>
    aea8:	mov	r6, r0
    aeac:	movw	r1, #1500	; 0x5dc
    aeb0:	mov	r0, #37	; 0x25
    aeb4:	str	r1, [r6, #20]
    aeb8:	str	r5, [r6, #4]
    aebc:	str	r0, [r6, #8]
    aec0:	mov	r1, #8
    aec4:	ldr	r0, [r6, #44]	; 0x2c
    aec8:	clz	r0, r0
    aecc:	lsr	r0, r0, #5
    aed0:	str	r0, [r6, #44]	; 0x2c
    aed4:	mov	r0, #0
    aed8:	str	r6, [r6, #96]	; 0x60
    aedc:	bl	ba9c <gen_load_macplrel>
    aee0:	mov	r7, r0
    aee4:	mov	r0, #208	; 0xd0
    aee8:	bl	1fbc <newchunk>
    aeec:	orr	r1, r4, r4, lsl #8
    aef0:	mov	r5, r0
    aef4:	mov	r0, #21
    aef8:	str	r1, [r5, #20]
    aefc:	str	r7, [r5, #4]
    af00:	str	r0, [r5, #8]
    af04:	mov	r0, r6
    af08:	mov	r1, r5
    af0c:	str	r5, [r5, #96]	; 0x60
    af10:	bl	3964 <sf_gen_and>
    af14:	b	b1dc <gen_ether_linktype+0x384>
    af18:	movw	r0, #33011	; 0x80f3
    af1c:	cmp	r4, r0
    af20:	movwne	r0, #32923	; 0x809b
    af24:	cmpne	r4, r0
    af28:	bne	b028 <gen_ether_linktype+0x1d0>
    af2c:	ldr	r1, [pc, #740]	; b218 <gen_ether_linktype+0x3c0>
    af30:	mov	r0, #1
    af34:	mov	r2, #8
    af38:	ldr	r1, [pc, r1]
    af3c:	bl	98e8 <gen_load_a>
    af40:	mov	r5, r0
    af44:	mov	r0, #208	; 0xd0
    af48:	bl	1fbc <newchunk>
    af4c:	mov	r6, r0
    af50:	movw	r1, #1500	; 0x5dc
    af54:	mov	r0, #37	; 0x25
    af58:	mov	r2, #0
    af5c:	mov	r3, sp
    af60:	str	r1, [r6, #20]
    af64:	str	r5, [r6, #4]
    af68:	str	r0, [r6, #8]
    af6c:	mvn	r1, #12
    af70:	ldr	r0, [r6, #44]	; 0x2c
    af74:	clz	r0, r0
    af78:	lsr	r0, r0, #5
    af7c:	str	r0, [r6, #44]	; 0x2c
    af80:	movw	r0, #32923	; 0x809b
    af84:	str	r6, [r6, #96]	; 0x60
    af88:	cmp	r4, r0
    af8c:	mvneq	r1, #100	; 0x64
    af90:	cmp	r4, r0
    af94:	sub	r0, r4, r0
    af98:	clz	r0, r0
    af9c:	strb	r1, [sp, #7]
    afa0:	mov	r1, #128	; 0x80
    afa4:	movweq	r2, #7
    afa8:	lsr	r0, r0, #5
    afac:	strb	r1, [sp, #6]
    afb0:	mov	r1, #0
    afb4:	strb	r2, [sp, #5]
    afb8:	mov	r2, #8
    afbc:	lsl	r0, r0, #3
    afc0:	strb	r1, [sp, #4]
    afc4:	mov	r1, #0
    afc8:	strb	r0, [sp, #3]
    afcc:	mov	r0, #3
    afd0:	strb	r0, [sp, #2]
    afd4:	movw	r0, #43690	; 0xaaaa
    afd8:	strh	r0, [sp]
    afdc:	mov	r0, #2
    afe0:	bl	b330 <gen_bcmp>
    afe4:	mov	r5, r0
    afe8:	mov	r0, r6
    afec:	mov	r1, r5
    aff0:	bl	3964 <sf_gen_and>
    aff4:	ldr	r1, [pc, #544]	; b21c <gen_ether_linktype+0x3c4>
    aff8:	mov	r0, #1
    affc:	mov	r2, #8
    b000:	ldr	r1, [pc, r1]
    b004:	bl	98e8 <gen_load_a>
    b008:	mov	r6, r0
    b00c:	mov	r0, #208	; 0xd0
    b010:	bl	1fbc <newchunk>
    b014:	mov	r1, #21
    b018:	str	r4, [r0, #20]
    b01c:	str	r6, [r0, #4]
    b020:	str	r1, [r0, #8]
    b024:	b	b1d0 <gen_ether_linktype+0x378>
    b028:	cmp	r4, #254	; 0xfe
    b02c:	beq	ae88 <gen_ether_linktype+0x30>
    b030:	ldr	r1, [pc, #460]	; b204 <gen_ether_linktype+0x3ac>
    b034:	mov	r0, #1
    b038:	mov	r2, #8
    b03c:	ldr	r1, [pc, r1]
    b040:	bl	98e8 <gen_load_a>
    b044:	mov	r5, r0
    b048:	mov	r0, #208	; 0xd0
    b04c:	bl	1fbc <newchunk>
    b050:	mov	r6, r0
    b054:	movw	r0, #1500	; 0x5dc
    b058:	cmp	r4, r0
    b05c:	bgt	b1e8 <gen_ether_linktype+0x390>
    b060:	mov	r1, #37	; 0x25
    b064:	str	r0, [r6, #20]
    b068:	str	r5, [r6, #4]
    b06c:	mov	r2, #16
    b070:	str	r1, [r6, #8]
    b074:	ldr	r0, [r6, #44]	; 0x2c
    b078:	clz	r0, r0
    b07c:	lsr	r0, r0, #5
    b080:	str	r0, [r6, #44]	; 0x2c
    b084:	str	r6, [r6, #96]	; 0x60
    b088:	ldr	r0, [pc, #376]	; b208 <gen_ether_linktype+0x3b0>
    b08c:	ldr	r0, [pc, r0]
    b090:	add	r1, r0, #2
    b094:	mov	r0, #1
    b098:	bl	98e8 <gen_load_a>
    b09c:	mov	r7, r0
    b0a0:	mov	r0, #208	; 0xd0
    b0a4:	bl	1fbc <newchunk>
    b0a8:	mov	r5, r0
    b0ac:	mov	r0, #21
    b0b0:	str	r4, [r5, #20]
    b0b4:	b	aefc <gen_ether_linktype+0xa4>
    b0b8:	mov	r0, #0
    b0bc:	mov	r1, #16
    b0c0:	bl	ba9c <gen_load_macplrel>
    b0c4:	mov	r4, r0
    b0c8:	mov	r0, #208	; 0xd0
    b0cc:	bl	1fbc <newchunk>
    b0d0:	mov	r6, r0
    b0d4:	mov	r0, #224	; 0xe0
    b0d8:	mov	r1, #8
    b0dc:	mov	r7, #21
    b0e0:	str	r0, [r6, #20]
    b0e4:	mov	r0, #0
    b0e8:	stmib	r6, {r4, r7}
    b0ec:	str	r6, [r6, #96]	; 0x60
    b0f0:	bl	ba9c <gen_load_macplrel>
    b0f4:	mov	r4, r0
    b0f8:	mov	r0, #208	; 0xd0
    b0fc:	bl	1fbc <newchunk>
    b100:	mov	r5, r0
    b104:	movw	r0, #65535	; 0xffff
    b108:	str	r0, [r5, #20]
    b10c:	mov	r0, r6
    b110:	mov	r1, r5
    b114:	stmib	r5, {r4, r7}
    b118:	str	r5, [r5, #96]	; 0x60
    b11c:	bl	3a3c <sf_gen_or>
    b120:	movw	r0, #0
    b124:	mov	r3, sp
    b128:	mov	r1, #0
    b12c:	mov	r2, #8
    b130:	movt	r0, #14209	; 0x3781
    b134:	str	r0, [sp, #4]
    b138:	movw	r0, #43690	; 0xaaaa
    b13c:	movt	r0, #3
    b140:	str	r0, [sp]
    b144:	mov	r0, #2
    b148:	bl	b330 <gen_bcmp>
    b14c:	mov	r1, r5
    b150:	bl	3a3c <sf_gen_or>
    b154:	ldr	r1, [pc, #180]	; b210 <gen_ether_linktype+0x3b8>
    b158:	mov	r0, #1
    b15c:	mov	r2, #8
    b160:	ldr	r1, [pc, r1]
    b164:	bl	98e8 <gen_load_a>
    b168:	mov	r4, r0
    b16c:	mov	r0, #208	; 0xd0
    b170:	bl	1fbc <newchunk>
    b174:	movw	r2, #1500	; 0x5dc
    b178:	mov	r1, #37	; 0x25
    b17c:	str	r2, [r0, #20]
    b180:	str	r4, [r0, #4]
    b184:	str	r1, [r0, #8]
    b188:	ldr	r1, [r0, #44]	; 0x2c
    b18c:	clz	r1, r1
    b190:	lsr	r1, r1, #5
    b194:	str	r1, [r0, #44]	; 0x2c
    b198:	mov	r1, r5
    b19c:	str	r0, [r0, #96]	; 0x60
    b1a0:	bl	3964 <sf_gen_and>
    b1a4:	ldr	r1, [pc, #104]	; b214 <gen_ether_linktype+0x3bc>
    b1a8:	mov	r0, #1
    b1ac:	mov	r2, #8
    b1b0:	ldr	r1, [pc, r1]
    b1b4:	bl	98e8 <gen_load_a>
    b1b8:	mov	r4, r0
    b1bc:	mov	r0, #208	; 0xd0
    b1c0:	bl	1fbc <newchunk>
    b1c4:	movw	r1, #33079	; 0x8137
    b1c8:	str	r1, [r0, #20]
    b1cc:	stmib	r0, {r4, r7}
    b1d0:	mov	r1, r5
    b1d4:	str	r0, [r0, #96]	; 0x60
    b1d8:	bl	3a3c <sf_gen_or>
    b1dc:	mov	r0, r5
    b1e0:	sub	sp, fp, #16
    b1e4:	pop	{r4, r5, r6, r7, fp, pc}
    b1e8:	str	r4, [r6, #20]
    b1ec:	str	r5, [r6, #4]
    b1f0:	mov	r0, #21
    b1f4:	mov	r5, r6
    b1f8:	str	r0, [r6, #8]
    b1fc:	str	r6, [r6, #96]	; 0x60
    b200:	b	b1dc <gen_ether_linktype+0x384>
    b204:	.word	0x000253fc
    b208:	.word	0x000253ac
    b20c:	.word	0x000255a4
    b210:	.word	0x000252d8
    b214:	.word	0x00025288
    b218:	.word	0x00025500
    b21c:	.word	0x00025438

0000b220 <gen_llc_linktype>:
    b220:	push	{r4, r5, fp, lr}
    b224:	add	fp, sp, #8
    b228:	sub	sp, sp, #8
    b22c:	mov	r4, r0
    b230:	cmp	r0, #239	; 0xef
    b234:	ble	b258 <gen_llc_linktype+0x38>
    b238:	cmp	r4, #240	; 0xf0
    b23c:	beq	b294 <gen_llc_linktype+0x74>
    b240:	movw	r0, #32923	; 0x809b
    b244:	cmp	r4, r0
    b248:	beq	b2bc <gen_llc_linktype+0x9c>
    b24c:	cmp	r4, #254	; 0xfe
    b250:	beq	b294 <gen_llc_linktype+0x74>
    b254:	b	b2ec <gen_llc_linktype+0xcc>
    b258:	cmp	r4, #6
    b25c:	beq	b294 <gen_llc_linktype+0x74>
    b260:	cmp	r4, #224	; 0xe0
    b264:	bne	b2ec <gen_llc_linktype+0xcc>
    b268:	mov	r0, #0
    b26c:	mov	r1, #16
    b270:	bl	ba9c <gen_load_macplrel>
    b274:	mov	r4, r0
    b278:	mov	r0, #208	; 0xd0
    b27c:	bl	1fbc <newchunk>
    b280:	mov	r2, #224	; 0xe0
    b284:	mov	r1, #21
    b288:	str	r2, [r0, #20]
    b28c:	str	r4, [r0, #4]
    b290:	b	b320 <gen_llc_linktype+0x100>
    b294:	mov	r0, #0
    b298:	mov	r1, #8
    b29c:	bl	ba9c <gen_load_macplrel>
    b2a0:	mov	r5, r0
    b2a4:	mov	r0, #208	; 0xd0
    b2a8:	bl	1fbc <newchunk>
    b2ac:	orr	r2, r4, r4, lsl #8
    b2b0:	mov	r1, #21
    b2b4:	str	r2, [r0, #20]
    b2b8:	b	b31c <gen_llc_linktype+0xfc>
    b2bc:	movw	r0, #1792	; 0x700
    b2c0:	mov	r3, sp
    b2c4:	mov	r1, #0
    b2c8:	mov	r2, #8
    b2cc:	movt	r0, #39808	; 0x9b80
    b2d0:	str	r0, [sp, #4]
    b2d4:	movw	r0, #43690	; 0xaaaa
    b2d8:	movt	r0, #2051	; 0x803
    b2dc:	str	r0, [sp]
    b2e0:	mov	r0, #2
    b2e4:	bl	b330 <gen_bcmp>
    b2e8:	b	b328 <gen_llc_linktype+0x108>
    b2ec:	movw	r0, #1500	; 0x5dc
    b2f0:	cmp	r4, r0
    b2f4:	movgt	r0, #6
    b2f8:	movgt	r1, #8
    b2fc:	movle	r0, #0
    b300:	movle	r1, #16
    b304:	bl	ba9c <gen_load_macplrel>
    b308:	mov	r5, r0
    b30c:	mov	r0, #208	; 0xd0
    b310:	bl	1fbc <newchunk>
    b314:	mov	r1, #21
    b318:	str	r4, [r0, #20]
    b31c:	str	r5, [r0, #4]
    b320:	str	r1, [r0, #8]
    b324:	str	r0, [r0, #96]	; 0x60
    b328:	sub	sp, fp, #8
    b32c:	pop	{r4, r5, fp, pc}

0000b330 <gen_bcmp>:
    b330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b334:	add	fp, sp, #28
    b338:	sub	sp, sp, #12
    b33c:	mov	r4, r2
    b340:	mov	r7, #0
    b344:	cmp	r2, #4
    b348:	str	r0, [sp, #8]
    b34c:	str	r1, [sp, #4]
    b350:	str	r3, [sp]
    b354:	bcc	b3cc <gen_bcmp+0x9c>
    b358:	sub	r8, r3, #2
    b35c:	sub	r9, r1, #4
    b360:	mov	r6, #0
    b364:	add	r0, r8, r4
    b368:	add	r1, r9, r4
    b36c:	mov	r2, #0
    b370:	ldr	sl, [r0, #-2]
    b374:	ldr	r0, [sp, #8]
    b378:	bl	98e8 <gen_load_a>
    b37c:	mov	r5, r0
    b380:	mov	r0, #208	; 0xd0
    b384:	bl	1fbc <newchunk>
    b388:	mov	r7, r0
    b38c:	rev	r0, sl
    b390:	cmp	r6, #0
    b394:	sub	r4, r4, #4
    b398:	str	r0, [r7, #20]
    b39c:	mov	r0, #21
    b3a0:	str	r5, [r7, #4]
    b3a4:	movne	r1, r7
    b3a8:	str	r0, [r7, #8]
    b3ac:	movne	r0, r6
    b3b0:	str	r7, [r7, #96]	; 0x60
    b3b4:	blne	3964 <sf_gen_and>
    b3b8:	cmp	r4, #3
    b3bc:	mov	r6, r7
    b3c0:	bhi	b364 <gen_bcmp+0x34>
    b3c4:	ldr	r1, [sp, #4]
    b3c8:	ldr	r3, [sp]
    b3cc:	cmp	r4, #2
    b3d0:	bcc	b44c <gen_bcmp+0x11c>
    b3d4:	sub	r5, r4, #2
    b3d8:	mov	r8, #21
    b3dc:	mov	r0, r3
    b3e0:	add	r1, r1, r5
    b3e4:	mov	r2, #8
    b3e8:	ldrb	r9, [r0, r5]!
    b3ec:	ldrb	sl, [r0, #1]
    b3f0:	ldr	r0, [sp, #8]
    b3f4:	bl	98e8 <gen_load_a>
    b3f8:	mov	r4, r0
    b3fc:	mov	r0, #208	; 0xd0
    b400:	bl	1fbc <newchunk>
    b404:	mov	r6, r0
    b408:	orr	r0, sl, r9, lsl #8
    b40c:	cmp	r7, #0
    b410:	movne	r1, r6
    b414:	str	r0, [r6, #20]
    b418:	movne	r0, r7
    b41c:	stmib	r6, {r4, r8}
    b420:	str	r6, [r6, #96]	; 0x60
    b424:	blne	3964 <sf_gen_and>
    b428:	ldr	r1, [sp, #4]
    b42c:	ldr	r3, [sp]
    b430:	sub	r0, r5, #2
    b434:	cmp	r5, #1
    b438:	mov	r7, r6
    b43c:	mov	r5, r0
    b440:	bhi	b3dc <gen_bcmp+0xac>
    b444:	add	r4, r0, #2
    b448:	b	b450 <gen_bcmp+0x120>
    b44c:	mov	r6, r7
    b450:	cmp	r4, #1
    b454:	bne	b4a0 <gen_bcmp+0x170>
    b458:	ldr	r0, [sp, #8]
    b45c:	ldrb	r7, [r3]
    b460:	mov	r2, #16
    b464:	bl	98e8 <gen_load_a>
    b468:	mov	r5, r0
    b46c:	mov	r0, #208	; 0xd0
    b470:	bl	1fbc <newchunk>
    b474:	mov	r4, r0
    b478:	cmp	r6, #0
    b47c:	mov	r0, #21
    b480:	str	r7, [r4, #20]
    b484:	str	r5, [r4, #4]
    b488:	str	r0, [r4, #8]
    b48c:	movne	r0, r6
    b490:	movne	r1, r4
    b494:	str	r4, [r4, #96]	; 0x60
    b498:	blne	3964 <sf_gen_and>
    b49c:	b	b4a4 <gen_bcmp+0x174>
    b4a0:	mov	r4, r6
    b4a4:	mov	r0, r4
    b4a8:	sub	sp, fp, #28
    b4ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b4b0 <gen_hostop>:
    b4b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b4b4:	add	fp, sp, #24
    b4b8:	sub	sp, sp, #16
    b4bc:	cmp	r2, #4
    b4c0:	bhi	b5d0 <gen_hostop+0x120>
    b4c4:	mov	r5, r0
    b4c8:	add	r0, pc, #20
    b4cc:	mov	r4, r1
    b4d0:	ldr	r9, [fp, #12]
    b4d4:	ldr	r7, [fp, #8]
    b4d8:	mov	r6, r3
    b4dc:	ldr	r1, [r0, r2, lsl #2]
    b4e0:	add	pc, r0, r1
    b4e4:	.word	0x00000014
    b4e8:	.word	0x000000a0
    b4ec:	.word	0x0000009c
    b4f0:	.word	0x00000014
    b4f4:	.word	0x0000005c
    b4f8:	mov	r0, r5
    b4fc:	mov	r1, r4
    b500:	mov	r2, #1
    b504:	mov	r3, r6
    b508:	stm	sp, {r7, r9}
    b50c:	bl	b4b0 <gen_hostop>
    b510:	mov	r8, r0
    b514:	mov	r0, r5
    b518:	mov	r1, r4
    b51c:	mov	r2, #2
    b520:	mov	r3, r6
    b524:	stm	sp, {r7, r9}
    b528:	bl	b4b0 <gen_hostop>
    b52c:	mov	r4, r0
    b530:	mov	r0, r8
    b534:	mov	r1, r4
    b538:	bl	3a3c <sf_gen_or>
    b53c:	b	b5c4 <gen_hostop+0x114>
    b540:	mov	r0, r5
    b544:	mov	r1, r4
    b548:	mov	r2, #1
    b54c:	mov	r3, r6
    b550:	stm	sp, {r7, r9}
    b554:	bl	b4b0 <gen_hostop>
    b558:	mov	r8, r0
    b55c:	mov	r0, r5
    b560:	mov	r1, r4
    b564:	mov	r2, #2
    b568:	mov	r3, r6
    b56c:	stm	sp, {r7, r9}
    b570:	bl	b4b0 <gen_hostop>
    b574:	mov	r4, r0
    b578:	mov	r0, r8
    b57c:	b	b5bc <gen_hostop+0x10c>
    b580:	mov	r7, r9
    b584:	mov	r0, r6
    b588:	bl	4334 <gen_linktype>
    b58c:	mov	r6, r0
    b590:	mov	r1, #16
    b594:	mov	r0, #0
    b598:	mov	r2, #0
    b59c:	mov	r3, r4
    b5a0:	str	r1, [sp]
    b5a4:	stmib	sp, {r0, r5}
    b5a8:	mov	r0, #3
    b5ac:	mov	r1, r7
    b5b0:	bl	a38c <gen_ncmp>
    b5b4:	mov	r4, r0
    b5b8:	mov	r0, r6
    b5bc:	mov	r1, r4
    b5c0:	bl	3964 <sf_gen_and>
    b5c4:	mov	r0, r4
    b5c8:	sub	sp, fp, #24
    b5cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b5d0:	bl	f74 <abort@plt>

0000b5d4 <gen_dnhostop>:
    b5d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b5d8:	add	fp, sp, #28
    b5dc:	sub	sp, sp, #20
    b5e0:	cmp	r1, #4
    b5e4:	bhi	b89c <gen_dnhostop+0x2c8>
    b5e8:	mov	r6, r0
    b5ec:	add	r0, pc, #12
    b5f0:	mov	r9, #1
    b5f4:	mov	sl, #7
    b5f8:	ldr	r1, [r0, r1, lsl #2]
    b5fc:	add	pc, r0, r1
    b600:	.word	0x00000014
    b604:	.word	0x0000006c
    b608:	.word	0x00000074
    b60c:	.word	0x00000014
    b610:	.word	0x00000044
    b614:	mov	r0, r6
    b618:	mov	r1, #1
    b61c:	bl	b5d4 <gen_dnhostop>
    b620:	mov	r4, r0
    b624:	mov	r0, r6
    b628:	mov	r1, #2
    b62c:	bl	b5d4 <gen_dnhostop>
    b630:	mov	r5, r0
    b634:	mov	r0, r4
    b638:	mov	r1, r5
    b63c:	bl	3a3c <sf_gen_or>
    b640:	b	b890 <gen_dnhostop+0x2bc>
    b644:	mov	r0, r6
    b648:	mov	r1, #1
    b64c:	bl	b5d4 <gen_dnhostop>
    b650:	mov	r4, r0
    b654:	mov	r0, r6
    b658:	mov	r1, #2
    b65c:	bl	b5d4 <gen_dnhostop>
    b660:	mov	r5, r0
    b664:	mov	r0, r4
    b668:	b	b888 <gen_dnhostop+0x2b4>
    b66c:	mov	r9, #3
    b670:	mov	sl, #15
    b674:	movw	r0, #24579	; 0x6003
    b678:	bl	4334 <gen_linktype>
    b67c:	str	r0, [sp, #16]
    b680:	movw	r0, #33030	; 0x8106
    b684:	mov	r1, #0
    b688:	mov	r2, #16
    b68c:	movw	r3, #65287	; 0xff07
    b690:	str	r2, [sp]
    b694:	str	r1, [sp, #4]
    b698:	str	r0, [sp, #8]
    b69c:	mov	r0, #3
    b6a0:	mov	r1, #2
    b6a4:	mov	r2, #8
    b6a8:	bl	a38c <gen_ncmp>
    b6ac:	mov	r7, r0
    b6b0:	ldr	r0, [pc, #512]	; b8b8 <gen_dnhostop+0x2e4>
    b6b4:	mov	r1, #8
    b6b8:	ldr	r0, [pc, r0]
    b6bc:	add	r0, sl, r0
    b6c0:	add	r0, r0, #3
    b6c4:	bl	ba9c <gen_load_macplrel>
    b6c8:	mov	r4, r0
    b6cc:	mov	r0, #208	; 0xd0
    b6d0:	bl	1fbc <newchunk>
    b6d4:	mov	r5, r0
    b6d8:	rev	r0, r6
    b6dc:	lsr	r8, r0, #16
    b6e0:	mov	r0, #21
    b6e4:	str	r4, [r5, #4]
    b6e8:	mov	r1, r5
    b6ec:	str	r0, [r5, #8]
    b6f0:	mov	r0, r7
    b6f4:	str	r8, [r5, #20]
    b6f8:	str	r5, [r5, #96]	; 0x60
    b6fc:	bl	3964 <sf_gen_and>
    b700:	mov	r1, #16
    b704:	mov	r0, #6
    b708:	mov	r2, #16
    b70c:	mov	r3, #7
    b710:	str	r1, [sp]
    b714:	mov	r1, #0
    b718:	str	r0, [sp, #8]
    b71c:	mov	r0, #3
    b720:	str	r1, [sp, #4]
    b724:	mov	r1, #2
    b728:	bl	a38c <gen_ncmp>
    b72c:	mov	r4, r0
    b730:	ldr	r0, [pc, #388]	; b8bc <gen_dnhostop+0x2e8>
    b734:	mov	r1, #8
    b738:	ldr	r0, [pc, r0]
    b73c:	add	r0, sl, r0
    b740:	add	r0, r0, #2
    b744:	bl	ba9c <gen_load_macplrel>
    b748:	mov	r6, r0
    b74c:	mov	r0, #208	; 0xd0
    b750:	bl	1fbc <newchunk>
    b754:	mov	r7, r0
    b758:	str	r6, [r0, #4]
    b75c:	mov	r0, #21
    b760:	str	r0, [r7, #8]
    b764:	mov	r0, r4
    b768:	mov	r1, r7
    b76c:	str	r8, [r7, #20]
    b770:	str	r7, [r7, #96]	; 0x60
    b774:	bl	3964 <sf_gen_and>
    b778:	mov	r0, r7
    b77c:	mov	r1, r5
    b780:	bl	3a3c <sf_gen_or>
    b784:	movw	r0, #33026	; 0x8102
    b788:	mov	r1, #16
    b78c:	mov	sl, #0
    b790:	mov	r2, #8
    b794:	movw	r3, #65287	; 0xff07
    b798:	str	r1, [sp]
    b79c:	str	r0, [sp, #8]
    b7a0:	mov	r0, #3
    b7a4:	mov	r1, #2
    b7a8:	str	sl, [sp, #4]
    b7ac:	bl	a38c <gen_ncmp>
    b7b0:	mov	r4, r0
    b7b4:	ldr	r0, [pc, #260]	; b8c0 <gen_dnhostop+0x2ec>
    b7b8:	mov	r1, #8
    b7bc:	ldr	r0, [pc, r0]
    b7c0:	add	r0, r9, r0
    b7c4:	add	r0, r0, #3
    b7c8:	bl	ba9c <gen_load_macplrel>
    b7cc:	mov	r6, r0
    b7d0:	mov	r0, #208	; 0xd0
    b7d4:	bl	1fbc <newchunk>
    b7d8:	mov	r7, r0
    b7dc:	str	r6, [r0, #4]
    b7e0:	mov	r0, #21
    b7e4:	str	r0, [r7, #8]
    b7e8:	mov	r0, r4
    b7ec:	mov	r1, r7
    b7f0:	str	r8, [r7, #20]
    b7f4:	str	r7, [r7, #96]	; 0x60
    b7f8:	bl	3964 <sf_gen_and>
    b7fc:	mov	r0, r7
    b800:	mov	r1, r5
    b804:	bl	3a3c <sf_gen_or>
    b808:	mov	r0, #16
    b80c:	mov	r1, #2
    b810:	mov	r2, #16
    b814:	mov	r3, #7
    b818:	stm	sp, {r0, sl}
    b81c:	mov	r0, #2
    b820:	str	r0, [sp, #8]
    b824:	mov	r0, #3
    b828:	bl	a38c <gen_ncmp>
    b82c:	mov	r4, r0
    b830:	ldr	r0, [pc, #140]	; b8c4 <gen_dnhostop+0x2f0>
    b834:	mov	r1, #8
    b838:	ldr	r0, [pc, r0]
    b83c:	add	r0, r9, r0
    b840:	add	r0, r0, #2
    b844:	bl	ba9c <gen_load_macplrel>
    b848:	mov	r6, r0
    b84c:	mov	r0, #208	; 0xd0
    b850:	bl	1fbc <newchunk>
    b854:	mov	r7, r0
    b858:	str	r8, [r0, #20]
    b85c:	str	r6, [r0, #4]
    b860:	mov	r0, #21
    b864:	str	r0, [r7, #8]
    b868:	mov	r0, r4
    b86c:	mov	r1, r7
    b870:	str	r7, [r7, #96]	; 0x60
    b874:	bl	3964 <sf_gen_and>
    b878:	mov	r0, r7
    b87c:	mov	r1, r5
    b880:	bl	3a3c <sf_gen_or>
    b884:	ldr	r0, [sp, #16]
    b888:	mov	r1, r5
    b88c:	bl	3964 <sf_gen_and>
    b890:	mov	r0, r5
    b894:	sub	sp, fp, #28
    b898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b89c:	cmp	r1, #24
    b8a0:	bne	b8b0 <gen_dnhostop+0x2dc>
    b8a4:	ldr	r0, [pc, #8]	; b8b4 <gen_dnhostop+0x2e0>
    b8a8:	add	r0, pc, r0
    b8ac:	bl	1f30 <sf_bpf_error>
    b8b0:	bl	f74 <abort@plt>
    b8b4:	.word	0x00008163
    b8b8:	.word	0x00024d88
    b8bc:	.word	0x00024d08
    b8c0:	.word	0x00024c84
    b8c4:	.word	0x00024c08

0000b8c8 <gen_hostop6>:
    b8c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b8cc:	add	fp, sp, #28
    b8d0:	sub	sp, sp, #12
    b8d4:	cmp	r2, #4
    b8d8:	bhi	ba98 <gen_hostop6+0x1d0>
    b8dc:	mov	r6, r0
    b8e0:	add	r0, pc, #20
    b8e4:	mov	r5, r1
    b8e8:	ldr	r9, [fp, #12]
    b8ec:	ldr	r7, [fp, #8]
    b8f0:	mov	r8, r3
    b8f4:	ldr	r1, [r0, r2, lsl #2]
    b8f8:	add	pc, r0, r1
    b8fc:	.word	0x00000014
    b900:	.word	0x000000ac
    b904:	.word	0x000000a8
    b908:	.word	0x00000014
    b90c:	.word	0x0000005c
    b910:	mov	r0, r6
    b914:	mov	r1, r5
    b918:	mov	r2, #1
    b91c:	mov	r3, r8
    b920:	stm	sp, {r7, r9}
    b924:	bl	b8c8 <gen_hostop6>
    b928:	mov	r4, r0
    b92c:	mov	r0, r6
    b930:	mov	r1, r5
    b934:	mov	r2, #2
    b938:	mov	r3, r8
    b93c:	stm	sp, {r7, r9}
    b940:	bl	b8c8 <gen_hostop6>
    b944:	mov	r5, r0
    b948:	mov	r0, r4
    b94c:	mov	r1, r5
    b950:	bl	3a3c <sf_gen_or>
    b954:	b	b99c <gen_hostop6+0xd4>
    b958:	mov	r0, r6
    b95c:	mov	r1, r5
    b960:	mov	r2, #1
    b964:	mov	r3, r8
    b968:	stm	sp, {r7, r9}
    b96c:	bl	b8c8 <gen_hostop6>
    b970:	mov	r4, r0
    b974:	mov	r0, r6
    b978:	mov	r1, r5
    b97c:	mov	r2, #2
    b980:	mov	r3, r8
    b984:	stm	sp, {r7, r9}
    b988:	bl	b8c8 <gen_hostop6>
    b98c:	mov	r5, r0
    b990:	mov	r0, r4
    b994:	mov	r1, r5
    b998:	bl	3964 <sf_gen_and>
    b99c:	mov	r0, r5
    b9a0:	b	ba90 <gen_hostop6+0x1c8>
    b9a4:	mov	r7, r9
    b9a8:	ldr	r1, [r6, #12]
    b9ac:	ldr	r0, [r5, #12]
    b9b0:	mov	r9, #0
    b9b4:	mov	sl, #16
    b9b8:	mov	r2, #0
    b9bc:	str	sl, [sp]
    b9c0:	str	r9, [sp, #4]
    b9c4:	rev	r1, r1
    b9c8:	rev	r3, r0
    b9cc:	mov	r0, #3
    b9d0:	str	r1, [sp, #8]
    b9d4:	add	r1, r7, #12
    b9d8:	bl	a38c <gen_ncmp>
    b9dc:	mov	r4, r0
    b9e0:	ldr	r0, [r6, #8]
    b9e4:	ldr	r1, [r5, #8]
    b9e8:	mov	r2, #0
    b9ec:	str	sl, [sp]
    b9f0:	str	r9, [sp, #4]
    b9f4:	rev	r0, r0
    b9f8:	rev	r3, r1
    b9fc:	add	r1, r7, #8
    ba00:	str	r0, [sp, #8]
    ba04:	mov	r0, #3
    ba08:	bl	a38c <gen_ncmp>
    ba0c:	mov	r1, r4
    ba10:	bl	3964 <sf_gen_and>
    ba14:	ldr	r0, [r6, #4]
    ba18:	ldr	r1, [r5, #4]
    ba1c:	mov	r2, #0
    ba20:	str	sl, [sp]
    ba24:	str	r9, [sp, #4]
    ba28:	rev	r0, r0
    ba2c:	rev	r3, r1
    ba30:	add	r1, r7, #4
    ba34:	str	r0, [sp, #8]
    ba38:	mov	r0, #3
    ba3c:	bl	a38c <gen_ncmp>
    ba40:	mov	r1, r4
    ba44:	bl	3964 <sf_gen_and>
    ba48:	ldr	r1, [r6]
    ba4c:	ldr	r0, [r5]
    ba50:	mov	r2, #0
    ba54:	str	sl, [sp]
    ba58:	str	r9, [sp, #4]
    ba5c:	rev	r1, r1
    ba60:	rev	r3, r0
    ba64:	mov	r0, #3
    ba68:	str	r1, [sp, #8]
    ba6c:	mov	r1, r7
    ba70:	bl	a38c <gen_ncmp>
    ba74:	mov	r1, r4
    ba78:	bl	3964 <sf_gen_and>
    ba7c:	mov	r0, r8
    ba80:	bl	4334 <gen_linktype>
    ba84:	mov	r1, r4
    ba88:	bl	3964 <sf_gen_and>
    ba8c:	mov	r0, r4
    ba90:	sub	sp, fp, #28
    ba94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba98:	bl	f74 <abort@plt>

0000ba9c <gen_load_macplrel>:
    ba9c:	push	{r4, r5, r6, sl, fp, lr}
    baa0:	add	fp, sp, #16
    baa4:	mov	r6, r1
    baa8:	mov	r5, r0
    baac:	bl	8a78 <gen_off_macpl>
    bab0:	cmp	r0, #0
    bab4:	beq	baec <gen_load_macplrel+0x50>
    bab8:	mov	r4, r0
    babc:	mov	r0, #20
    bac0:	bl	1fbc <newchunk>
    bac4:	mov	r2, r4
    bac8:	orr	r1, r6, #64	; 0x40
    bacc:	str	r5, [r0, #12]
    bad0:	str	r1, [r0]
    bad4:	mov	r1, r2
    bad8:	ldr	r2, [r2, #16]
    badc:	cmp	r2, #0
    bae0:	bne	bad4 <gen_load_macplrel+0x38>
    bae4:	str	r0, [r1, #16]
    bae8:	b	bb10 <gen_load_macplrel+0x74>
    baec:	mov	r0, #20
    baf0:	orr	r6, r6, #32
    baf4:	bl	1fbc <newchunk>
    baf8:	str	r6, [r0]
    bafc:	mov	r4, r0
    bb00:	ldr	r0, [pc, #16]	; bb18 <gen_load_macplrel+0x7c>
    bb04:	ldr	r0, [pc, r0]
    bb08:	add	r0, r0, r5
    bb0c:	str	r0, [r4, #12]
    bb10:	mov	r0, r4
    bb14:	pop	{r4, r5, r6, sl, fp, pc}
    bb18:	.word	0x00024938

0000bb1c <pcap_nametoaddr>:
    bb1c:	push	{fp, lr}
    bb20:	mov	fp, sp
    bb24:	bl	f5c <gethostbyname@plt>
    bb28:	cmp	r0, #0
    bb2c:	beq	bb64 <pcap_nametoaddr+0x48>
    bb30:	ldr	r1, [r0, #16]
    bb34:	ldr	r2, [r1]
    bb38:	cmp	r2, #0
    bb3c:	beq	bb68 <pcap_nametoaddr+0x4c>
    bb40:	add	r1, r1, #4
    bb44:	ldr	r3, [r2]
    bb48:	rev	r3, r3
    bb4c:	str	r3, [r2]
    bb50:	ldr	r2, [r1], #4
    bb54:	cmp	r2, #0
    bb58:	bne	bb44 <pcap_nametoaddr+0x28>
    bb5c:	ldr	r1, [r0, #16]
    bb60:	b	bb68 <pcap_nametoaddr+0x4c>
    bb64:	mov	r1, #0
    bb68:	mov	r0, r1
    bb6c:	pop	{fp, pc}

0000bb70 <pcap_nametoaddrinfo>:
    bb70:	push	{r4, sl, fp, lr}
    bb74:	add	fp, sp, #8
    bb78:	sub	sp, sp, #40	; 0x28
    bb7c:	vmov.i32	q8, #0	; 0x00000000
    bb80:	add	r2, sp, #8
    bb84:	mov	r4, #0
    bb88:	add	r1, r2, #16
    bb8c:	mov	r3, r2
    bb90:	vst1.64	{d16-d17}, [r1]
    bb94:	mov	r1, #12
    bb98:	vst1.64	{d16-d17}, [r3], r1
    bb9c:	mov	r1, #6
    bba0:	str	r1, [r3]
    bba4:	mov	r1, #1
    bba8:	add	r3, sp, #4
    bbac:	str	r1, [sp, #16]
    bbb0:	mov	r1, #0
    bbb4:	bl	f50 <getaddrinfo@plt>
    bbb8:	cmp	r0, #0
    bbbc:	ldr	r1, [sp, #4]
    bbc0:	movne	r1, r4
    bbc4:	mov	r0, r1
    bbc8:	sub	sp, fp, #8
    bbcc:	pop	{r4, sl, fp, pc}

0000bbd0 <pcap_nametonetaddr>:
    bbd0:	push	{fp, lr}
    bbd4:	mov	fp, sp
    bbd8:	bl	e18 <getnetbyname@plt>
    bbdc:	cmp	r0, #0
    bbe0:	ldrne	r0, [r0, #12]
    bbe4:	moveq	r0, #0
    bbe8:	pop	{fp, pc}

0000bbec <pcap_nametoport>:
    bbec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bbf0:	add	fp, sp, #24
    bbf4:	mov	r5, r1
    bbf8:	ldr	r1, [pc, #136]	; bc88 <pcap_nametoport+0x9c>
    bbfc:	mov	r8, r2
    bc00:	mov	r6, r0
    bc04:	add	r1, pc, r1
    bc08:	bl	ee4 <getservbyname@plt>
    bc0c:	cmp	r0, #0
    bc10:	mvn	r4, #0
    bc14:	mvn	r7, #0
    bc18:	ldrhne	r0, [r0, #8]
    bc1c:	ldr	r1, [pc, #104]	; bc8c <pcap_nametoport+0xa0>
    bc20:	rev16ne	r4, r0
    bc24:	add	r1, pc, r1
    bc28:	mov	r0, r6
    bc2c:	bl	ee4 <getservbyname@plt>
    bc30:	cmp	r0, #0
    bc34:	ldrhne	r0, [r0, #8]
    bc38:	rev16ne	r7, r0
    bc3c:	cmp	r4, #0
    bc40:	bmi	bc6c <pcap_nametoport+0x80>
    bc44:	cmp	r7, r4
    bc48:	mov	r1, #6
    bc4c:	mov	r0, #6
    bc50:	str	r4, [r5]
    bc54:	mvneq	r1, #0
    bc58:	cmn	r7, #1
    bc5c:	movle	r1, r0
    bc60:	mov	r0, #1
    bc64:	str	r1, [r8]
    bc68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc6c:	cmp	r7, #0
    bc70:	movmi	r0, #0
    bc74:	movpl	r0, #17
    bc78:	strpl	r7, [r5]
    bc7c:	strpl	r0, [r8]
    bc80:	movpl	r0, #1
    bc84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc88:	.word	0x00006d40
    bc8c:	.word	0x00006d55

0000bc90 <pcap_nametoportrange>:
    bc90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    bc94:	add	fp, sp, #24
    bc98:	sub	sp, sp, #8
    bc9c:	mov	r6, r1
    bca0:	ldr	r1, [pc, #228]	; bd8c <pcap_nametoportrange+0xfc>
    bca4:	mov	r9, r3
    bca8:	mov	r8, r2
    bcac:	add	r2, sp, #4
    bcb0:	mov	r3, sp
    bcb4:	mov	r4, r0
    bcb8:	add	r1, pc, r1
    bcbc:	bl	f20 <sscanf@plt>
    bcc0:	cmp	r0, #2
    bcc4:	bne	bce8 <pcap_nametoportrange+0x58>
    bcc8:	ldr	r0, [sp, #4]
    bccc:	mov	r5, #1
    bcd0:	str	r0, [r6]
    bcd4:	ldr	r0, [sp]
    bcd8:	str	r0, [r8]
    bcdc:	mvn	r0, #0
    bce0:	str	r0, [r9]
    bce4:	b	bd80 <pcap_nametoportrange+0xf0>
    bce8:	mov	r0, r4
    bcec:	bl	e3c <strdup@plt>
    bcf0:	mov	r5, #0
    bcf4:	cmp	r0, #0
    bcf8:	beq	bd80 <pcap_nametoportrange+0xf0>
    bcfc:	mov	r1, #45	; 0x2d
    bd00:	mov	r7, r0
    bd04:	bl	ec0 <strchr@plt>
    bd08:	cmp	r0, #0
    bd0c:	beq	bd68 <pcap_nametoportrange+0xd8>
    bd10:	mov	r5, #0
    bd14:	mov	r4, r0
    bd18:	mov	r1, r6
    bd1c:	mov	r2, r9
    bd20:	strb	r5, [r0]
    bd24:	mov	r0, r7
    bd28:	bl	bbec <pcap_nametoport>
    bd2c:	cmp	r0, #0
    bd30:	beq	bd68 <pcap_nametoportrange+0xd8>
    bd34:	ldr	r6, [r9]
    bd38:	add	r0, r4, #1
    bd3c:	mov	r1, r8
    bd40:	mov	r2, r9
    bd44:	bl	bbec <pcap_nametoport>
    bd48:	cmp	r0, #0
    bd4c:	beq	bd74 <pcap_nametoportrange+0xe4>
    bd50:	ldr	r0, [r9]
    bd54:	mov	r5, #1
    bd58:	cmp	r0, r6
    bd5c:	mvnne	r0, #0
    bd60:	strne	r0, [r9]
    bd64:	b	bd80 <pcap_nametoportrange+0xf0>
    bd68:	mov	r0, r7
    bd6c:	bl	e0c <free@plt>
    bd70:	b	bd80 <pcap_nametoportrange+0xf0>
    bd74:	mov	r0, r7
    bd78:	bl	e0c <free@plt>
    bd7c:	mov	r5, #0
    bd80:	mov	r0, r5
    bd84:	sub	sp, fp, #24
    bd88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bd8c:	.word	0x00007ff0

0000bd90 <pcap_nametoproto>:
    bd90:	push	{fp, lr}
    bd94:	mov	fp, sp
    bd98:	bl	de8 <getprotobyname@plt>
    bd9c:	cmp	r0, #0
    bda0:	ldrne	r0, [r0, #8]
    bda4:	mvneq	r0, #0
    bda8:	pop	{fp, pc}

0000bdac <pcap_nametoeproto>:
    bdac:	push	{r4, r5, r6, sl, fp, lr}
    bdb0:	add	fp, sp, #16
    bdb4:	mov	r5, r0
    bdb8:	ldr	r0, [pc, #76]	; be0c <pcap_nametoeproto+0x60>
    bdbc:	mvn	r4, #0
    bdc0:	ldr	r0, [pc, r0]
    bdc4:	cmp	r0, #0
    bdc8:	beq	be04 <pcap_nametoeproto+0x58>
    bdcc:	ldr	r1, [pc, #60]	; be10 <pcap_nametoeproto+0x64>
    bdd0:	add	r1, pc, r1
    bdd4:	add	r6, r1, #4
    bdd8:	mov	r1, r5
    bddc:	bl	db8 <strcmp@plt>
    bde0:	cmp	r0, #0
    bde4:	beq	be00 <pcap_nametoeproto+0x54>
    bde8:	ldr	r0, [r6, #4]
    bdec:	add	r1, r6, #8
    bdf0:	mov	r6, r1
    bdf4:	cmp	r0, #0
    bdf8:	bne	bdd8 <pcap_nametoeproto+0x2c>
    bdfc:	b	be04 <pcap_nametoeproto+0x58>
    be00:	ldrh	r4, [r6]
    be04:	mov	r0, r4
    be08:	pop	{r4, r5, r6, sl, fp, pc}
    be0c:	.word	0x0002431c
    be10:	.word	0x0002430c

0000be14 <pcap_nametollc>:
    be14:	push	{r4, r5, fp, lr}
    be18:	add	fp, sp, #8
    be1c:	mov	r4, r0
    be20:	ldr	r0, [pc, #64]	; be68 <pcap_nametollc+0x54>
    be24:	add	r0, pc, r0
    be28:	add	r5, r0, #4
    be2c:	ldr	r0, [pc, #56]	; be6c <pcap_nametollc+0x58>
    be30:	add	r0, pc, r0
    be34:	mov	r1, r4
    be38:	bl	db8 <strcmp@plt>
    be3c:	cmp	r0, #0
    be40:	beq	be60 <pcap_nametollc+0x4c>
    be44:	ldr	r0, [r5, #4]
    be48:	add	r1, r5, #8
    be4c:	mov	r5, r1
    be50:	cmp	r0, #0
    be54:	bne	be34 <pcap_nametollc+0x20>
    be58:	mvn	r0, #0
    be5c:	pop	{r4, r5, fp, pc}
    be60:	ldrh	r0, [r5]
    be64:	pop	{r4, r5, fp, pc}
    be68:	.word	0x00023f0c
    be6c:	.word	0x00007f5c

0000be70 <__pcap_atoin>:
    be70:	push	{fp, lr}
    be74:	mov	fp, sp
    be78:	mov	lr, #0
    be7c:	mov	ip, #0
    be80:	str	lr, [r1]
    be84:	add	r0, r0, #1
    be88:	mov	r2, #0
    be8c:	b	bea0 <__pcap_atoin+0x30>
    be90:	add	r2, r2, r2, lsl #2
    be94:	add	r0, r0, #1
    be98:	add	r2, r3, r2, lsl #1
    be9c:	sub	r2, r2, #48	; 0x30
    bea0:	ldrb	r3, [r0, #-1]
    bea4:	cmp	r3, #0
    bea8:	cmpne	r3, #46	; 0x2e
    beac:	bne	be90 <__pcap_atoin+0x20>
    beb0:	uxtb	r2, r2
    beb4:	add	ip, ip, #8
    beb8:	orr	lr, r2, lr, lsl #8
    bebc:	str	lr, [r1]
    bec0:	ldrb	r2, [r0, #-1]
    bec4:	cmp	r2, #0
    bec8:	bne	be84 <__pcap_atoin+0x14>
    becc:	mov	r0, ip
    bed0:	pop	{fp, pc}

0000bed4 <__pcap_atodn>:
    bed4:	push	{r4, r5, fp, lr}
    bed8:	add	fp, sp, #8
    bedc:	sub	sp, sp, #8
    bee0:	mov	r4, r1
    bee4:	ldr	r1, [pc, #76]	; bf38 <__pcap_atodn+0x64>
    bee8:	mov	r2, sp
    beec:	add	r3, sp, #4
    bef0:	mov	r5, r0
    bef4:	add	r1, pc, r1
    bef8:	bl	f20 <sscanf@plt>
    befc:	cmp	r0, #2
    bf00:	ldreq	r1, [sp]
    bf04:	ldreq	r0, [sp, #4]
    bf08:	lsleq	r1, r1, #10
    bf0c:	bfceq	r0, #10, #22
    bf10:	uxtheq	r1, r1
    bf14:	orreq	r0, r0, r1
    bf18:	streq	r0, [r4]
    bf1c:	moveq	r0, #32
    bf20:	subeq	sp, fp, #8
    bf24:	popeq	{r4, r5, fp, pc}
    bf28:	ldr	r0, [pc, #12]	; bf3c <__pcap_atodn+0x68>
    bf2c:	mov	r1, r5
    bf30:	add	r0, pc, r0
    bf34:	bl	1f30 <sf_bpf_error>
    bf38:	.word	0x00007e2b
    bf3c:	.word	0x00007df5

0000bf40 <pcap_ether_aton>:
    bf40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    bf44:	add	fp, sp, #24
    bf48:	mov	r4, r0
    bf4c:	mov	r0, #6
    bf50:	bl	e84 <malloc@plt>
    bf54:	mov	r8, r0
    bf58:	cmp	r0, #0
    bf5c:	beq	c010 <pcap_ether_aton+0xd0>
    bf60:	mov	r9, #1
    bf64:	movw	r7, #8195	; 0x2003
    bf68:	mov	r5, r8
    bf6c:	ldrb	r6, [r4]
    bf70:	sub	r0, r6, #45	; 0x2d
    bf74:	cmp	r0, #13
    bf78:	bhi	bf8c <pcap_ether_aton+0x4c>
    bf7c:	tst	r7, r9, lsl r0
    bf80:	beq	bf8c <pcap_ether_aton+0x4c>
    bf84:	ldrb	r6, [r4, #1]!
    bf88:	b	bf94 <pcap_ether_aton+0x54>
    bf8c:	cmp	r6, #0
    bf90:	beq	c010 <pcap_ether_aton+0xd0>
    bf94:	bl	e9c <__ctype_b_loc@plt>
    bf98:	ldr	r2, [r0]
    bf9c:	mvn	r1, #47	; 0x2f
    bfa0:	add	r0, r2, r6, lsl #1
    bfa4:	ldrh	r3, [r0]
    bfa8:	add	r0, r4, #1
    bfac:	tst	r3, #2048	; 0x800
    bfb0:	bne	bfc0 <pcap_ether_aton+0x80>
    bfb4:	tst	r3, #512	; 0x200
    bfb8:	mvn	r1, #86	; 0x56
    bfbc:	mvneq	r1, #54	; 0x36
    bfc0:	add	r3, r1, r6
    bfc4:	ldrb	r1, [r0]
    bfc8:	add	r2, r2, r1, lsl #1
    bfcc:	ldrh	r2, [r2]
    bfd0:	tst	r2, #4096	; 0x1000
    bfd4:	bne	bfe0 <pcap_ether_aton+0xa0>
    bfd8:	mov	r4, r0
    bfdc:	b	c008 <pcap_ether_aton+0xc8>
    bfe0:	lsl	r0, r3, #4
    bfe4:	mvn	r3, #47	; 0x2f
    bfe8:	tst	r2, #2048	; 0x800
    bfec:	bne	bffc <pcap_ether_aton+0xbc>
    bff0:	tst	r2, #512	; 0x200
    bff4:	mvn	r3, #86	; 0x56
    bff8:	mvneq	r3, #54	; 0x36
    bffc:	add	r1, r3, r1
    c000:	add	r4, r4, #2
    c004:	orr	r3, r1, r0
    c008:	strb	r3, [r5], #1
    c00c:	b	bf6c <pcap_ether_aton+0x2c>
    c010:	mov	r0, r8
    c014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000c018 <pcap_ether_hostton>:
    c018:	push	{r4, r5, r6, sl, fp, lr}
    c01c:	add	fp, sp, #16
    c020:	mov	r4, r0
    c024:	ldr	r0, [pc, #196]	; c0f0 <pcap_ether_hostton+0xd8>
    c028:	ldr	r0, [pc, r0]
    c02c:	cmp	r0, #0
    c030:	beq	c04c <pcap_ether_hostton+0x34>
    c034:	ldr	r0, [pc, #204]	; c108 <pcap_ether_hostton+0xf0>
    c038:	ldr	r0, [pc, r0]
    c03c:	cmp	r0, #0
    c040:	beq	c0e4 <pcap_ether_hostton+0xcc>
    c044:	bl	e48 <rewind@plt>
    c048:	b	c08c <pcap_ether_hostton+0x74>
    c04c:	ldr	r0, [pc, #160]	; c0f4 <pcap_ether_hostton+0xdc>
    c050:	ldr	r1, [pc, #160]	; c0f8 <pcap_ether_hostton+0xe0>
    c054:	add	r0, pc, r0
    c058:	add	r1, pc, r1
    c05c:	bl	ddc <fopen@plt>
    c060:	ldr	r1, [pc, #148]	; c0fc <pcap_ether_hostton+0xe4>
    c064:	cmp	r0, #0
    c068:	add	r1, pc, r1
    c06c:	str	r0, [r1]
    c070:	ldr	r1, [pc, #136]	; c100 <pcap_ether_hostton+0xe8>
    c074:	ldr	r1, [pc, r1]
    c078:	ldr	r2, [pc, #132]	; c104 <pcap_ether_hostton+0xec>
    c07c:	add	r1, r1, #1
    c080:	add	r2, pc, r2
    c084:	str	r1, [r2]
    c088:	beq	c0e4 <pcap_ether_hostton+0xcc>
    c08c:	mov	r5, #0
    c090:	ldr	r0, [pc, #116]	; c10c <pcap_ether_hostton+0xf4>
    c094:	ldr	r0, [pc, r0]
    c098:	bl	eb70 <pcap_next_etherent>
    c09c:	cmp	r0, #0
    c0a0:	beq	c0e8 <pcap_ether_hostton+0xd0>
    c0a4:	mov	r6, r0
    c0a8:	add	r0, r0, #6
    c0ac:	mov	r1, r4
    c0b0:	bl	db8 <strcmp@plt>
    c0b4:	cmp	r0, #0
    c0b8:	bne	c090 <pcap_ether_hostton+0x78>
    c0bc:	mov	r0, #6
    c0c0:	bl	e84 <malloc@plt>
    c0c4:	cmp	r0, #0
    c0c8:	beq	c0e8 <pcap_ether_hostton+0xd0>
    c0cc:	ldrh	r1, [r6, #4]
    c0d0:	mov	r5, r0
    c0d4:	strh	r1, [r0, #4]
    c0d8:	ldr	r1, [r6]
    c0dc:	str	r1, [r0]
    c0e0:	b	c0e8 <pcap_ether_hostton+0xd0>
    c0e4:	mov	r5, #0
    c0e8:	mov	r0, r5
    c0ec:	pop	{r4, r5, r6, sl, fp, pc}
    c0f0:	.word	0x0002452c
    c0f4:	.word	0x00007cef
    c0f8:	.word	0x00009154
    c0fc:	.word	0x000244e8
    c100:	.word	0x000244e0
    c104:	.word	0x000244d4
    c108:	.word	0x00024518
    c10c:	.word	0x000244bc

0000c110 <__pcap_nametodnaddr>:
    c110:	push	{fp, lr}
    c114:	mov	fp, sp
    c118:	mov	r1, r0
    c11c:	ldr	r0, [pc, #4]	; c128 <__pcap_nametodnaddr+0x18>
    c120:	add	r0, pc, r0
    c124:	bl	1f30 <sf_bpf_error>
    c128:	.word	0x00007c2f

0000c12c <sf_bpf_optimize>:
    c12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c130:	add	fp, sp, #28
    c134:	sub	sp, sp, #20
    c138:	str	r0, [sp]
    c13c:	ldr	r5, [r0]
    c140:	ldr	r4, [pc, #1624]	; c7a0 <sf_bpf_optimize+0x674>
    c144:	ldr	r4, [pc, r4]
    c148:	ldr	r7, [pc, #1620]	; c7a4 <sf_bpf_optimize+0x678>
    c14c:	add	r0, r4, #1
    c150:	add	r7, pc, r7
    c154:	str	r0, [r7]
    c158:	mov	r0, r5
    c15c:	bl	ea50 <count_blocks>
    c160:	mov	r1, #4
    c164:	mov	r6, r0
    c168:	bl	dac <calloc@plt>
    c16c:	ldr	r1, [pc, #1588]	; c7a8 <sf_bpf_optimize+0x67c>
    c170:	cmp	r0, #0
    c174:	add	r1, pc, r1
    c178:	str	r0, [r1]
    c17c:	beq	c468 <sf_bpf_optimize+0x33c>
    c180:	ldr	r0, [pc, #1572]	; c7ac <sf_bpf_optimize+0x680>
    c184:	mov	r1, #0
    c188:	add	r0, pc, r0
    c18c:	str	r1, [r0]
    c190:	add	r0, r4, #2
    c194:	str	r0, [r7]
    c198:	mov	r0, r5
    c19c:	bl	eaa8 <number_blks_r>
    c1a0:	ldr	r8, [pc, #1544]	; c7b0 <sf_bpf_optimize+0x684>
    c1a4:	ldr	r8, [pc, r8]
    c1a8:	ldr	r1, [pc, #1540]	; c7b4 <sf_bpf_optimize+0x688>
    c1ac:	lsl	r0, r8, #1
    c1b0:	add	r1, pc, r1
    c1b4:	str	r0, [r1]
    c1b8:	mov	r1, #4
    c1bc:	bl	dac <calloc@plt>
    c1c0:	mov	sl, r0
    c1c4:	ldr	r0, [pc, #1516]	; c7b8 <sf_bpf_optimize+0x68c>
    c1c8:	cmp	sl, #0
    c1cc:	add	r0, pc, r0
    c1d0:	str	sl, [r0]
    c1d4:	beq	c468 <sf_bpf_optimize+0x33c>
    c1d8:	mov	r0, r8
    c1dc:	mov	r1, #4
    c1e0:	bl	dac <calloc@plt>
    c1e4:	ldr	r1, [pc, #1488]	; c7bc <sf_bpf_optimize+0x690>
    c1e8:	cmp	r0, #0
    c1ec:	add	r1, pc, r1
    c1f0:	str	r0, [r1]
    c1f4:	beq	c468 <sf_bpf_optimize+0x33c>
    c1f8:	ldr	r1, [pc, #1472]	; c7c0 <sf_bpf_optimize+0x694>
    c1fc:	mov	r0, #1
    c200:	add	r0, r0, r8, lsr #5
    c204:	add	r1, pc, r1
    c208:	str	r0, [r1]
    c20c:	ubfx	r9, r8, #4, #27
    c210:	ldr	r2, [pc, #1452]	; c7c4 <sf_bpf_optimize+0x698>
    c214:	add	r1, r9, #1
    c218:	add	r0, r1, r0
    c21c:	mul	r0, r8, r0
    c220:	add	r2, pc, r2
    c224:	str	r1, [r2]
    c228:	lsl	r0, r0, #3
    c22c:	bl	e84 <malloc@plt>
    c230:	ldr	r1, [pc, #1424]	; c7c8 <sf_bpf_optimize+0x69c>
    c234:	cmp	r0, #0
    c238:	add	r1, pc, r1
    c23c:	str	r0, [r1]
    c240:	beq	c468 <sf_bpf_optimize+0x33c>
    c244:	ldr	r1, [pc, #1408]	; c7cc <sf_bpf_optimize+0x6a0>
    c248:	cmp	r6, #1
    c24c:	str	r5, [sp, #8]
    c250:	add	r1, pc, r1
    c254:	str	r0, [r1]
    c258:	blt	c400 <sf_bpf_optimize+0x2d4>
    c25c:	ldr	r2, [pc, #1388]	; c7d0 <sf_bpf_optimize+0x6a4>
    c260:	lsr	ip, r8, #5
    c264:	mov	r1, #4
    c268:	mov	r5, #0
    c26c:	add	r7, r1, ip, lsl #2
    c270:	mov	r1, #0
    c274:	ldr	r2, [pc, r2]
    c278:	ldr	r4, [r2, r5, lsl #2]
    c27c:	add	r5, r5, #1
    c280:	add	r3, r0, r1
    c284:	add	r1, r1, r7
    c288:	cmp	r6, r5
    c28c:	str	r3, [r4, #104]	; 0x68
    c290:	bne	c278 <sf_bpf_optimize+0x14c>
    c294:	ldr	r7, [pc, #1336]	; c7d4 <sf_bpf_optimize+0x6a8>
    c298:	add	r3, r0, r1
    c29c:	add	r7, pc, r7
    c2a0:	str	r3, [r7]
    c2a4:	mov	r3, #4
    c2a8:	mov	r7, #0
    c2ac:	add	r3, r3, ip, lsl #2
    c2b0:	ldr	r5, [r2, r7, lsl #2]
    c2b4:	add	r7, r7, #1
    c2b8:	add	r4, r0, r1
    c2bc:	add	r1, r1, r3
    c2c0:	cmp	r6, r7
    c2c4:	str	r4, [r5, #108]	; 0x6c
    c2c8:	bne	c2b0 <sf_bpf_optimize+0x184>
    c2cc:	ldr	r7, [pc, #1284]	; c7d8 <sf_bpf_optimize+0x6ac>
    c2d0:	add	r3, r0, r1
    c2d4:	cmp	r6, #1
    c2d8:	add	r7, pc, r7
    c2dc:	str	r3, [r7]
    c2e0:	add	r7, r0, r9, lsl #2
    c2e4:	ldr	r5, [r2]
    c2e8:	mov	r2, #0
    c2ec:	add	r7, r7, r1
    c2f0:	add	r7, r7, #4
    c2f4:	str	r7, [r5, #80]	; 0x50
    c2f8:	str	r3, [r5, #56]	; 0x38
    c2fc:	mov	r3, r5
    c300:	str	r2, [r3, #48]!	; 0x30
    c304:	str	r3, [sl]
    c308:	mov	r3, r5
    c30c:	str	r8, [r3, #72]!	; 0x48
    c310:	ldr	r7, [pc, #1220]	; c7dc <sf_bpf_optimize+0x6b0>
    c314:	ldr	r7, [pc, r7]
    c318:	str	r3, [r7, r8, lsl #2]
    c31c:	str	r5, [r5, #88]	; 0x58
    c320:	str	r5, [r5, #64]	; 0x40
    c324:	beq	c3ac <sf_bpf_optimize+0x280>
    c328:	mov	r3, #8
    c32c:	add	r7, r9, r9, lsl #1
    c330:	lsl	r5, r8, #2
    c334:	add	lr, r3, r9, lsl #3
    c338:	add	ip, r0, lr
    c33c:	add	r0, r0, r7, lsl #2
    c340:	mov	r7, #1
    c344:	add	r9, r0, #12
    c348:	ldr	r4, [pc, #1168]	; c7e0 <sf_bpf_optimize+0x6b4>
    c34c:	add	r3, r9, r1
    c350:	ldr	r4, [pc, r4]
    c354:	ldr	r4, [r4, r7, lsl #2]
    c358:	ldr	r0, [pc, #1156]	; c7e4 <sf_bpf_optimize+0x6b8>
    c35c:	ldr	r0, [pc, r0]
    c360:	str	r3, [r4, #80]	; 0x50
    c364:	add	r3, ip, r1
    c368:	add	r1, r1, lr
    c36c:	str	r3, [r4, #56]	; 0x38
    c370:	mov	r3, r4
    c374:	str	r7, [r3, #48]!	; 0x30
    c378:	str	r3, [r0, r7, lsl #2]
    c37c:	add	r0, r8, r7
    c380:	mov	r3, r4
    c384:	str	r0, [r3, #72]!	; 0x48
    c388:	ldr	r0, [pc, #1112]	; c7e8 <sf_bpf_optimize+0x6bc>
    c38c:	ldr	r0, [pc, r0]
    c390:	add	r0, r0, r5
    c394:	str	r3, [r0, r7, lsl #2]
    c398:	add	r7, r7, #1
    c39c:	str	r4, [r4, #88]	; 0x58
    c3a0:	str	r4, [r4, #64]	; 0x40
    c3a4:	cmp	r6, r7
    c3a8:	bne	c348 <sf_bpf_optimize+0x21c>
    c3ac:	ldr	r0, [pc, #1080]	; c7ec <sf_bpf_optimize+0x6c0>
    c3b0:	mov	r1, #0
    c3b4:	ldr	r0, [pc, r0]
    c3b8:	ldr	r3, [r0, r1, lsl #2]
    c3bc:	ldr	r7, [r3, #4]
    c3c0:	mov	r3, #0
    c3c4:	cmp	r7, #0
    c3c8:	beq	c3e0 <sf_bpf_optimize+0x2b4>
    c3cc:	ldr	r5, [r7]
    c3d0:	ldr	r7, [r7, #16]
    c3d4:	cmn	r5, #1
    c3d8:	addne	r3, r3, #1
    c3dc:	b	c3c4 <sf_bpf_optimize+0x298>
    c3e0:	add	r2, r2, r3
    c3e4:	add	r1, r1, #1
    c3e8:	add	r2, r2, #1
    c3ec:	cmp	r1, r6
    c3f0:	bne	c3b8 <sf_bpf_optimize+0x28c>
    c3f4:	ldr	r5, [sp, #8]
    c3f8:	add	r4, r2, r2, lsl #1
    c3fc:	b	c41c <sf_bpf_optimize+0x2f0>
    c400:	ldr	r1, [pc, #1064]	; c830 <sf_bpf_optimize+0x704>
    c404:	mov	r4, #0
    c408:	add	r1, pc, r1
    c40c:	str	r0, [r1]
    c410:	ldr	r1, [pc, #1052]	; c834 <sf_bpf_optimize+0x708>
    c414:	add	r1, pc, r1
    c418:	str	r0, [r1]
    c41c:	ldr	r0, [pc, #972]	; c7f0 <sf_bpf_optimize+0x6c4>
    c420:	mov	r1, #8
    c424:	add	r0, pc, r0
    c428:	str	r4, [r0]
    c42c:	mov	r0, r4
    c430:	bl	dac <calloc@plt>
    c434:	mov	r6, r0
    c438:	ldr	r0, [pc, #948]	; c7f4 <sf_bpf_optimize+0x6c8>
    c43c:	mov	r1, #20
    c440:	add	r0, pc, r0
    c444:	str	r6, [r0]
    c448:	mov	r0, r4
    c44c:	bl	dac <calloc@plt>
    c450:	ldr	r1, [pc, #928]	; c7f8 <sf_bpf_optimize+0x6cc>
    c454:	cmp	r6, #0
    c458:	cmpne	r0, #0
    c45c:	add	r1, pc, r1
    c460:	str	r0, [r1]
    c464:	bne	c474 <sf_bpf_optimize+0x348>
    c468:	ldr	r0, [pc, #956]	; c82c <sf_bpf_optimize+0x700>
    c46c:	add	r0, pc, r0
    c470:	bl	1f30 <sf_bpf_error>
    c474:	mov	r0, r5
    c478:	mov	r1, #0
    c47c:	mov	r4, #0
    c480:	bl	c838 <opt_loop>
    c484:	mov	r0, r5
    c488:	mov	r1, #1
    c48c:	bl	c838 <opt_loop>
    c490:	ldr	r6, [pc, #868]	; c7fc <sf_bpf_optimize+0x6d0>
    c494:	ldr	r6, [pc, r6]
    c498:	sub	r0, r6, #2
    c49c:	str	r0, [sp, #4]
    c4a0:	sub	r0, r6, #1
    c4a4:	str	r0, [sp, #12]
    c4a8:	cmp	r6, #1
    c4ac:	blt	c4cc <sf_bpf_optimize+0x3a0>
    c4b0:	ldr	r0, [pc, #840]	; c800 <sf_bpf_optimize+0x6d4>
    c4b4:	mov	r1, r6
    c4b8:	ldr	r0, [pc, r0]
    c4bc:	ldr	r2, [r0], #4
    c4c0:	subs	r1, r1, #1
    c4c4:	str	r4, [r2, #100]	; 0x64
    c4c8:	bne	c4bc <sf_bpf_optimize+0x390>
    c4cc:	ldr	r0, [pc, #816]	; c804 <sf_bpf_optimize+0x6d8>
    c4d0:	ldr	r0, [pc, r0]
    c4d4:	add	r9, r0, #1
    c4d8:	ldr	r0, [pc, #808]	; c808 <sf_bpf_optimize+0x6dc>
    c4dc:	add	r0, pc, r0
    c4e0:	str	r9, [r0]
    c4e4:	mov	r0, r5
    c4e8:	bl	ea04 <make_marks>
    c4ec:	ldr	r0, [sp, #12]
    c4f0:	cmp	r0, #1
    c4f4:	blt	c664 <sf_bpf_optimize+0x538>
    c4f8:	ldr	r0, [pc, #780]	; c80c <sf_bpf_optimize+0x6e0>
    c4fc:	ldr	r0, [pc, r0]
    c500:	ldr	r1, [sp, #4]
    c504:	ldr	lr, [sp, #12]
    c508:	mov	r2, lr
    c50c:	mov	lr, r1
    c510:	cmp	r2, r6
    c514:	bge	c658 <sf_bpf_optimize+0x52c>
    c518:	ldr	r3, [r0, lr, lsl #2]
    c51c:	ldr	r1, [r3, #24]
    c520:	cmp	r1, r9
    c524:	bne	c658 <sf_bpf_optimize+0x52c>
    c528:	add	r1, r3, #4
    c52c:	str	r1, [sp, #16]
    c530:	ldr	r5, [r0, r2, lsl #2]
    c534:	ldr	r1, [r5, #24]
    c538:	cmp	r1, r9
    c53c:	bne	c630 <sf_bpf_optimize+0x504>
    c540:	ldr	r1, [r5, #8]
    c544:	ldr	r4, [r3, #8]
    c548:	cmp	r4, r1
    c54c:	bne	c630 <sf_bpf_optimize+0x504>
    c550:	ldr	r1, [r5, #20]
    c554:	ldr	r4, [r3, #20]
    c558:	cmp	r4, r1
    c55c:	bne	c630 <sf_bpf_optimize+0x504>
    c560:	ldr	r1, [r5, #60]	; 0x3c
    c564:	ldr	r4, [r3, #60]	; 0x3c
    c568:	cmp	r4, r1
    c56c:	bne	c630 <sf_bpf_optimize+0x504>
    c570:	ldr	r1, [r5, #84]	; 0x54
    c574:	ldr	r4, [r3, #84]	; 0x54
    c578:	cmp	r4, r1
    c57c:	bne	c630 <sf_bpf_optimize+0x504>
    c580:	ldr	r1, [sp, #16]
    c584:	add	r4, r5, #4
    c588:	b	c594 <sf_bpf_optimize+0x468>
    c58c:	add	r4, r4, #16
    c590:	add	r1, r8, #16
    c594:	ldr	r1, [r1]
    c598:	ldr	r4, [r4]
    c59c:	mov	ip, #1
    c5a0:	mov	r8, #0
    c5a4:	mov	sl, #1
    c5a8:	cmp	r1, #0
    c5ac:	beq	c5dc <sf_bpf_optimize+0x4b0>
    c5b0:	ldr	r7, [r1]
    c5b4:	cmn	r7, #1
    c5b8:	bne	c5d4 <sf_bpf_optimize+0x4a8>
    c5bc:	ldr	r1, [r1, #16]
    c5c0:	cmp	r1, #0
    c5c4:	bne	c5b0 <sf_bpf_optimize+0x484>
    c5c8:	mov	r8, #0
    c5cc:	mov	sl, #1
    c5d0:	b	c5dc <sf_bpf_optimize+0x4b0>
    c5d4:	mov	sl, #0
    c5d8:	mov	r8, r1
    c5dc:	cmp	r4, #0
    c5e0:	beq	c5f8 <sf_bpf_optimize+0x4cc>
    c5e4:	ldr	r1, [r4]
    c5e8:	cmn	r1, #1
    c5ec:	bne	c600 <sf_bpf_optimize+0x4d4>
    c5f0:	ldr	r4, [r4, #16]
    c5f4:	b	c5dc <sf_bpf_optimize+0x4b0>
    c5f8:	mov	r4, #0
    c5fc:	b	c604 <sf_bpf_optimize+0x4d8>
    c600:	mov	ip, #0
    c604:	cmp	sl, #0
    c608:	bne	c640 <sf_bpf_optimize+0x514>
    c60c:	cmp	ip, #0
    c610:	bne	c630 <sf_bpf_optimize+0x504>
    c614:	ldr	r1, [r4]
    c618:	ldr	r7, [r8]
    c61c:	cmp	r7, r1
    c620:	ldreq	r1, [r4, #12]
    c624:	ldreq	r7, [r8, #12]
    c628:	cmpeq	r7, r1
    c62c:	beq	c58c <sf_bpf_optimize+0x460>
    c630:	add	r2, r2, #1
    c634:	cmp	r2, r6
    c638:	bne	c530 <sf_bpf_optimize+0x404>
    c63c:	b	c658 <sf_bpf_optimize+0x52c>
    c640:	cmp	ip, #0
    c644:	beq	c630 <sf_bpf_optimize+0x504>
    c648:	ldr	r1, [r5, #100]	; 0x64
    c64c:	cmp	r1, #0
    c650:	moveq	r1, r5
    c654:	str	r1, [r3, #100]	; 0x64
    c658:	sub	r1, lr, #1
    c65c:	cmp	lr, #0
    c660:	bgt	c508 <sf_bpf_optimize+0x3dc>
    c664:	ldr	r5, [sp, #8]
    c668:	cmp	r6, #1
    c66c:	mov	r4, #0
    c670:	blt	c6cc <sf_bpf_optimize+0x5a0>
    c674:	ldr	r0, [pc, #404]	; c810 <sf_bpf_optimize+0x6e4>
    c678:	mov	r2, #1
    c67c:	mov	r1, r6
    c680:	ldr	r0, [pc, r0]
    c684:	ldr	r3, [r0]
    c688:	ldr	r7, [r3, #60]	; 0x3c
    c68c:	cmp	r7, #0
    c690:	beq	c6b8 <sf_bpf_optimize+0x58c>
    c694:	ldr	r7, [r7, #100]	; 0x64
    c698:	cmp	r7, #0
    c69c:	strne	r7, [r3, #60]	; 0x3c
    c6a0:	movne	r2, #0
    c6a4:	ldr	r7, [r3, #84]	; 0x54
    c6a8:	ldr	r7, [r7, #100]	; 0x64
    c6ac:	cmp	r7, #0
    c6b0:	movne	r2, #0
    c6b4:	strne	r7, [r3, #84]	; 0x54
    c6b8:	add	r0, r0, #4
    c6bc:	subs	r1, r1, #1
    c6c0:	bne	c684 <sf_bpf_optimize+0x558>
    c6c4:	cmp	r2, #0
    c6c8:	beq	c4a8 <sf_bpf_optimize+0x37c>
    c6cc:	ldr	r5, [sp]
    c6d0:	mov	r1, #0
    c6d4:	ldr	r0, [r5]
    c6d8:	ldr	r4, [r0, #4]
    c6dc:	str	r1, [r0, #4]
    c6e0:	ldr	r0, [r5]
    c6e4:	ldr	r1, [r0, #8]
    c6e8:	and	r1, r1, #7
    c6ec:	cmp	r1, #5
    c6f0:	bne	c71c <sf_bpf_optimize+0x5f0>
    c6f4:	ldr	r1, [r0, #60]	; 0x3c
    c6f8:	ldr	r2, [r0, #84]	; 0x54
    c6fc:	cmp	r1, r2
    c700:	bne	c71c <sf_bpf_optimize+0x5f0>
    c704:	str	r1, [r5]
    c708:	ldr	r0, [r1, #8]
    c70c:	and	r0, r0, #7
    c710:	cmp	r0, #5
    c714:	mov	r0, r1
    c718:	beq	c6f4 <sf_bpf_optimize+0x5c8>
    c71c:	ldr	r1, [r0, #4]
    c720:	cmp	r1, #0
    c724:	beq	c734 <sf_bpf_optimize+0x608>
    c728:	mov	r0, r4
    c72c:	bl	841c <sf_append>
    c730:	ldr	r0, [r5]
    c734:	str	r4, [r0, #4]
    c738:	ldr	r0, [r5]
    c73c:	ldr	r1, [r0, #8]
    c740:	and	r1, r1, #7
    c744:	cmp	r1, #6
    c748:	moveq	r1, #0
    c74c:	streq	r1, [r0, #4]
    c750:	ldr	r0, [pc, #188]	; c814 <sf_bpf_optimize+0x6e8>
    c754:	ldr	r0, [pc, r0]
    c758:	bl	e0c <free@plt>
    c75c:	ldr	r0, [pc, #180]	; c818 <sf_bpf_optimize+0x6ec>
    c760:	ldr	r0, [pc, r0]
    c764:	bl	e0c <free@plt>
    c768:	ldr	r0, [pc, #172]	; c81c <sf_bpf_optimize+0x6f0>
    c76c:	ldr	r0, [pc, r0]
    c770:	bl	e0c <free@plt>
    c774:	ldr	r0, [pc, #164]	; c820 <sf_bpf_optimize+0x6f4>
    c778:	ldr	r0, [pc, r0]
    c77c:	bl	e0c <free@plt>
    c780:	ldr	r0, [pc, #156]	; c824 <sf_bpf_optimize+0x6f8>
    c784:	ldr	r0, [pc, r0]
    c788:	bl	e0c <free@plt>
    c78c:	ldr	r0, [pc, #148]	; c828 <sf_bpf_optimize+0x6fc>
    c790:	ldr	r0, [pc, r0]
    c794:	sub	sp, fp, #28
    c798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c79c:	b	e0c <free@plt>
    c7a0:	.word	0x00024414
    c7a4:	.word	0x00024408
    c7a8:	.word	0x0002483c
    c7ac:	.word	0x000243e0
    c7b0:	.word	0x000243c4
    c7b4:	.word	0x000243cc
    c7b8:	.word	0x000247e8
    c7bc:	.word	0x000247c0
    c7c0:	.word	0x0002436c
    c7c4:	.word	0x00024360
    c7c8:	.word	0x00024770
    c7cc:	.word	0x0002431c
    c7d0:	.word	0x0002473c
    c7d4:	.word	0x000242d8
    c7d8:	.word	0x000242a0
    c7dc:	.word	0x000246a0
    c7e0:	.word	0x00024660
    c7e4:	.word	0x00024658
    c7e8:	.word	0x00024628
    c7ec:	.word	0x000245fc
    c7f0:	.word	0x00024164
    c7f4:	.word	0x00024580
    c7f8:	.word	0x00024560
    c7fc:	.word	0x000240d4
    c800:	.word	0x000244f8
    c804:	.word	0x00024088
    c808:	.word	0x0002407c
    c80c:	.word	0x000244b4
    c810:	.word	0x00024330
    c814:	.word	0x00024268
    c818:	.word	0x00024260
    c81c:	.word	0x00024248
    c820:	.word	0x00024230
    c824:	.word	0x00024228
    c828:	.word	0x00024220
    c82c:	.word	0x00007934
    c830:	.word	0x00024170
    c834:	.word	0x00024160

0000c838 <opt_loop>:
    c838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c83c:	add	fp, sp, #28
    c840:	sub	sp, sp, #100	; 0x64
    c844:	str	r1, [sp, #20]
    c848:	mov	r9, r0
    c84c:	mov	r1, #1
    c850:	mov	r8, #0
    c854:	ldr	r0, [pc, #4008]	; d804 <opt_loop+0xfcc>
    c858:	str	r9, [sp]
    c85c:	add	r0, pc, r0
    c860:	strb	r1, [r0]
    c864:	mov	r1, #0
    c868:	ldr	r0, [pc, #3992]	; d808 <opt_loop+0xfd0>
    c86c:	ldr	r0, [pc, r0]
    c870:	ldr	r6, [pc, #3988]	; d80c <opt_loop+0xfd4>
    c874:	ldr	r6, [pc, r6]
    c878:	lsl	r5, r6, #2
    c87c:	mov	r2, r5
    c880:	bl	ef0 <memset@plt>
    c884:	ldr	r0, [pc, #4084]	; d880 <opt_loop+0x1048>
    c888:	ldr	r0, [pc, r0]
    c88c:	ldr	r1, [pc, #4080]	; d884 <opt_loop+0x104c>
    c890:	add	r0, r0, #1
    c894:	add	r1, pc, r1
    c898:	str	r0, [r1]
    c89c:	mov	r0, r9
    c8a0:	bl	e284 <find_levels_r>
    c8a4:	ldr	r7, [pc, #4060]	; d888 <opt_loop+0x1050>
    c8a8:	ldr	r7, [pc, r7]
    c8ac:	mul	r0, r7, r6
    c8b0:	cmp	r0, #1
    c8b4:	blt	c8cc <opt_loop+0x94>
    c8b8:	lsl	r2, r0, #2
    c8bc:	ldr	r0, [pc, #4040]	; d88c <opt_loop+0x1054>
    c8c0:	mov	r1, #255	; 0xff
    c8c4:	ldr	r0, [pc, r0]
    c8c8:	bl	ef0 <memset@plt>
    c8cc:	mov	r4, #1
    c8d0:	cmp	r7, #1
    c8d4:	blt	c8f4 <opt_loop+0xbc>
    c8d8:	sub	r0, r7, #1
    c8dc:	ldr	r1, [r9, #104]	; 0x68
    c8e0:	cmp	r0, #0
    c8e4:	str	r8, [r1, r0, lsl #2]
    c8e8:	sub	r1, r0, #1
    c8ec:	mov	r0, r1
    c8f0:	bgt	c8dc <opt_loop+0xa4>
    c8f4:	ldr	r0, [r9, #36]	; 0x24
    c8f8:	cmp	r0, #0
    c8fc:	bmi	c9d4 <opt_loop+0x19c>
    c900:	ldr	r1, [pc, #4080]	; d8f8 <opt_loop+0x10c0>
    c904:	ldr	r1, [pc, r1]
    c908:	ldr	r1, [r1, r0, lsl #2]
    c90c:	cmp	r1, #0
    c910:	beq	c9b0 <opt_loop+0x178>
    c914:	ldr	r2, [r1]
    c918:	ldr	r3, [r1, #104]	; 0x68
    c91c:	lsr	r7, r2, #5
    c920:	and	r2, r2, #31
    c924:	ldr	r6, [r3, r7, lsl #2]
    c928:	orr	r2, r6, r4, lsl r2
    c92c:	str	r2, [r3, r7, lsl #2]
    c930:	ldr	r3, [r1, #60]	; 0x3c
    c934:	cmp	r3, #0
    c938:	beq	c9a8 <opt_loop+0x170>
    c93c:	ldr	r2, [pc, #4084]	; d938 <opt_loop+0x1100>
    c940:	ldr	r2, [pc, r2]
    c944:	cmp	r2, #1
    c948:	blt	c9a8 <opt_loop+0x170>
    c94c:	ldr	r3, [r3, #104]	; 0x68
    c950:	ldr	r7, [r1, #104]	; 0x68
    c954:	ldr	r6, [r7], #4
    c958:	ldr	r5, [r3]
    c95c:	sub	r2, r2, #1
    c960:	cmp	r2, #0
    c964:	and	r6, r5, r6
    c968:	str	r6, [r3], #4
    c96c:	bgt	c954 <opt_loop+0x11c>
    c970:	ldr	r2, [pc, #4036]	; d93c <opt_loop+0x1104>
    c974:	ldr	r2, [pc, r2]
    c978:	cmp	r2, #1
    c97c:	blt	c9a8 <opt_loop+0x170>
    c980:	ldr	r7, [r1, #84]	; 0x54
    c984:	ldr	r3, [r1, #104]	; 0x68
    c988:	ldr	r7, [r7, #104]	; 0x68
    c98c:	ldr	r6, [r3], #4
    c990:	ldr	r5, [r7]
    c994:	sub	r2, r2, #1
    c998:	cmp	r2, #0
    c99c:	and	r6, r5, r6
    c9a0:	str	r6, [r7], #4
    c9a4:	bgt	c98c <opt_loop+0x154>
    c9a8:	ldr	r1, [r1, #100]	; 0x64
    c9ac:	b	c90c <opt_loop+0xd4>
    c9b0:	sub	r1, r0, #1
    c9b4:	cmp	r0, #0
    c9b8:	mov	r0, r1
    c9bc:	bgt	c900 <opt_loop+0xc8>
    c9c0:	ldr	r0, [pc, #4052]	; d99c <opt_loop+0x1164>
    c9c4:	ldr	r0, [pc, r0]
    c9c8:	ldr	r7, [pc, #4048]	; d9a0 <opt_loop+0x1168>
    c9cc:	ldr	r7, [pc, r7]
    c9d0:	lsl	r5, r0, #2
    c9d4:	ldr	r0, [pc, #4040]	; d9a4 <opt_loop+0x116c>
    c9d8:	mul	r2, r5, r7
    c9dc:	mov	r1, #0
    c9e0:	ldr	r0, [pc, r0]
    c9e4:	bl	ef0 <memset@plt>
    c9e8:	ldr	r0, [r9, #36]	; 0x24
    c9ec:	cmp	r0, #0
    c9f0:	bmi	cc88 <opt_loop+0x450>
    c9f4:	ldr	r1, [pc, #4012]	; d9a8 <opt_loop+0x1170>
    c9f8:	ldr	r1, [pc, r1]
    c9fc:	ldr	r1, [r1, r0, lsl #2]
    ca00:	cmp	r1, #0
    ca04:	beq	caa4 <opt_loop+0x26c>
    ca08:	ldr	r2, [r1]
    ca0c:	ldr	r3, [r1, #108]	; 0x6c
    ca10:	lsr	r7, r2, #5
    ca14:	and	r2, r2, #31
    ca18:	ldr	r6, [r3, r7, lsl #2]
    ca1c:	orr	r2, r6, r4, lsl r2
    ca20:	str	r2, [r3, r7, lsl #2]
    ca24:	ldr	r3, [r1, #60]	; 0x3c
    ca28:	cmp	r3, #0
    ca2c:	beq	ca9c <opt_loop+0x264>
    ca30:	ldr	r2, [pc, #4076]	; da24 <opt_loop+0x11ec>
    ca34:	ldr	r2, [pc, r2]
    ca38:	cmp	r2, #1
    ca3c:	blt	ca9c <opt_loop+0x264>
    ca40:	ldr	r3, [r3, #108]	; 0x6c
    ca44:	ldr	r7, [r1, #108]	; 0x6c
    ca48:	ldr	r6, [r7], #4
    ca4c:	ldr	r5, [r3]
    ca50:	sub	r2, r2, #1
    ca54:	cmp	r2, #0
    ca58:	orr	r6, r5, r6
    ca5c:	str	r6, [r3], #4
    ca60:	bgt	ca48 <opt_loop+0x210>
    ca64:	ldr	r2, [pc, #4028]	; da28 <opt_loop+0x11f0>
    ca68:	ldr	r2, [pc, r2]
    ca6c:	cmp	r2, #1
    ca70:	blt	ca9c <opt_loop+0x264>
    ca74:	ldr	r7, [r1, #84]	; 0x54
    ca78:	ldr	r3, [r1, #108]	; 0x6c
    ca7c:	ldr	r7, [r7, #108]	; 0x6c
    ca80:	ldr	r6, [r3], #4
    ca84:	ldr	r5, [r7]
    ca88:	sub	r2, r2, #1
    ca8c:	cmp	r2, #0
    ca90:	orr	r6, r5, r6
    ca94:	str	r6, [r7], #4
    ca98:	bgt	ca80 <opt_loop+0x248>
    ca9c:	ldr	r1, [r1, #100]	; 0x64
    caa0:	b	ca00 <opt_loop+0x1c8>
    caa4:	sub	r1, r0, #1
    caa8:	cmp	r0, #0
    caac:	mov	r0, r1
    cab0:	bgt	c9f4 <opt_loop+0x1bc>
    cab4:	ldr	r0, [r9, #36]	; 0x24
    cab8:	cmp	r0, #0
    cabc:	bmi	cc88 <opt_loop+0x450>
    cac0:	ldr	r1, [pc, #3940]	; da2c <opt_loop+0x11f4>
    cac4:	mov	r9, #65536	; 0x10000
    cac8:	ldr	r1, [pc, r1]
    cacc:	str	r0, [sp, #8]
    cad0:	str	r1, [sp, #12]
    cad4:	mov	r1, r0
    cad8:	ldr	r0, [sp, #12]
    cadc:	str	r1, [sp, #16]
    cae0:	ldr	r4, [r0, r1, lsl #2]
    cae4:	cmp	r4, #0
    cae8:	beq	cbfc <opt_loop+0x3c4>
    caec:	ldr	r5, [r4, #4]
    caf0:	cmp	r5, #0
    caf4:	beq	cb84 <opt_loop+0x34c>
    caf8:	mov	sl, #0
    cafc:	mov	r7, #0
    cb00:	mov	r6, #0
    cb04:	ldr	r0, [r5]
    cb08:	cmn	r0, #1
    cb0c:	beq	cb74 <opt_loop+0x33c>
    cb10:	mov	r0, r5
    cb14:	bl	e308 <atomuse>
    cb18:	cmp	r0, #0
    cb1c:	bmi	cb54 <opt_loop+0x31c>
    cb20:	cmp	r0, #18
    cb24:	bne	cb40 <opt_loop+0x308>
    cb28:	mov	r1, #131072	; 0x20000
    cb2c:	bic	r0, r9, r6
    cb30:	bic	r1, r1, r6
    cb34:	orr	r1, r1, r7
    cb38:	orr	r7, r1, r0
    cb3c:	b	cb54 <opt_loop+0x31c>
    cb40:	cmp	r0, #17
    cb44:	bgt	dcc0 <opt_loop+0x1488>
    cb48:	mov	r1, #1
    cb4c:	tst	r6, r1, lsl r0
    cb50:	orreq	r7, r7, r1, lsl r0
    cb54:	mov	r0, r5
    cb58:	bl	e3bc <atomdef>
    cb5c:	cmp	r0, #0
    cb60:	bmi	cb74 <opt_loop+0x33c>
    cb64:	mov	r1, #1
    cb68:	tst	r7, r1, lsl r0
    cb6c:	orr	r6, r6, r1, lsl r0
    cb70:	orreq	sl, sl, r1, lsl r0
    cb74:	ldr	r5, [r5, #16]
    cb78:	cmp	r5, #0
    cb7c:	bne	cb04 <opt_loop+0x2cc>
    cb80:	b	cb90 <opt_loop+0x358>
    cb84:	mov	r6, #0
    cb88:	mov	r7, #0
    cb8c:	mov	sl, #0
    cb90:	mov	r0, r4
    cb94:	ldr	r1, [r0, #8]!
    cb98:	and	r1, r1, #7
    cb9c:	cmp	r1, #5
    cba0:	bne	cbe4 <opt_loop+0x3ac>
    cba4:	bl	e308 <atomuse>
    cba8:	cmp	r0, #0
    cbac:	bmi	cbe4 <opt_loop+0x3ac>
    cbb0:	cmp	r0, #18
    cbb4:	bne	cbd0 <opt_loop+0x398>
    cbb8:	mov	r1, #131072	; 0x20000
    cbbc:	bic	r0, r9, r6
    cbc0:	bic	r1, r1, r6
    cbc4:	orr	r1, r1, r7
    cbc8:	orr	r7, r1, r0
    cbcc:	b	cbe4 <opt_loop+0x3ac>
    cbd0:	cmp	r0, #17
    cbd4:	bgt	dcc0 <opt_loop+0x1488>
    cbd8:	mov	r1, #1
    cbdc:	tst	r6, r1, lsl r0
    cbe0:	orreq	r7, r7, r1, lsl r0
    cbe4:	str	r6, [r4, #116]	; 0x74
    cbe8:	str	sl, [r4, #120]	; 0x78
    cbec:	str	r7, [r4, #124]	; 0x7c
    cbf0:	str	r8, [r4, #128]	; 0x80
    cbf4:	ldr	r4, [r4, #100]	; 0x64
    cbf8:	b	cae4 <opt_loop+0x2ac>
    cbfc:	ldr	r1, [sp, #16]
    cc00:	sub	r0, r1, #1
    cc04:	cmp	r1, #0
    cc08:	mov	r1, r0
    cc0c:	bgt	cad8 <opt_loop+0x2a0>
    cc10:	ldr	r5, [sp, #8]
    cc14:	ldr	r9, [sp]
    cc18:	cmp	r5, #1
    cc1c:	blt	cc88 <opt_loop+0x450>
    cc20:	mov	r0, #1
    cc24:	ldr	r1, [sp, #12]
    cc28:	ldr	r1, [r1, r0, lsl #2]
    cc2c:	cmp	r1, #0
    cc30:	beq	cc78 <opt_loop+0x440>
    cc34:	ldr	r2, [r1, #60]	; 0x3c
    cc38:	ldr	r3, [r1, #84]	; 0x54
    cc3c:	ldr	r7, [r1, #100]	; 0x64
    cc40:	ldr	r6, [r1, #120]	; 0x78
    cc44:	ldr	r2, [r2, #124]	; 0x7c
    cc48:	ldr	r3, [r3, #124]	; 0x7c
    cc4c:	cmp	r7, #0
    cc50:	orr	r2, r3, r2
    cc54:	ldr	r3, [r1, #128]	; 0x80
    cc58:	orr	r2, r2, r3
    cc5c:	str	r2, [r1, #128]	; 0x80
    cc60:	bic	r2, r2, r6
    cc64:	ldr	r3, [r1, #124]	; 0x7c
    cc68:	orr	r2, r3, r2
    cc6c:	str	r2, [r1, #124]	; 0x7c
    cc70:	mov	r1, r7
    cc74:	bne	cc34 <opt_loop+0x3fc>
    cc78:	add	r1, r0, #1
    cc7c:	cmp	r0, r5
    cc80:	mov	r0, r1
    cc84:	bne	cc24 <opt_loop+0x3ec>
    cc88:	ldr	r0, [pc, #4092]	; dc8c <opt_loop+0x1454>
    cc8c:	ldr	r0, [pc, r0]
    cc90:	ldr	r4, [pc, #4088]	; dc90 <opt_loop+0x1458>
    cc94:	ldr	r4, [pc, r4]
    cc98:	mul	r0, r4, r0
    cc9c:	cmp	r0, #1
    cca0:	blt	ccb8 <opt_loop+0x480>
    cca4:	lsl	r2, r0, #2
    cca8:	ldr	r0, [pc, #4068]	; dc94 <opt_loop+0x145c>
    ccac:	mov	r1, #255	; 0xff
    ccb0:	ldr	r0, [pc, r0]
    ccb4:	bl	ef0 <memset@plt>
    ccb8:	ldr	r0, [r9, #56]	; 0x38
    ccbc:	lsl	r5, r4, #2
    ccc0:	mov	r1, #0
    ccc4:	mov	r2, r5
    ccc8:	bl	ef0 <memset@plt>
    cccc:	ldr	r0, [r9, #80]	; 0x50
    ccd0:	mov	r1, #0
    ccd4:	mov	r2, r5
    ccd8:	bl	ef0 <memset@plt>
    ccdc:	ldr	r4, [r9, #36]	; 0x24
    cce0:	mov	r7, #1
    cce4:	cmp	r4, #0
    cce8:	bmi	cd28 <opt_loop+0x4f0>
    ccec:	ldr	r0, [pc, #4048]	; dcc4 <opt_loop+0x148c>
    ccf0:	ldr	r0, [pc, r0]
    ccf4:	ldr	r5, [r0, r4, lsl #2]
    ccf8:	cmp	r5, #0
    ccfc:	beq	cd18 <opt_loop+0x4e0>
    cd00:	add	r0, r5, #48	; 0x30
    cd04:	bl	e434 <propedom>
    cd08:	add	r0, r5, #72	; 0x48
    cd0c:	bl	e434 <propedom>
    cd10:	ldr	r5, [r5, #100]	; 0x64
    cd14:	b	ccf8 <opt_loop+0x4c0>
    cd18:	sub	r0, r4, #1
    cd1c:	cmp	r4, #0
    cd20:	mov	r4, r0
    cd24:	bgt	ccec <opt_loop+0x4b4>
    cd28:	ldr	r0, [pc, #3992]	; dcc8 <opt_loop+0x1490>
    cd2c:	add	r0, pc, r0
    cd30:	str	r8, [r0]
    cd34:	ldr	r0, [pc, #3984]	; dccc <opt_loop+0x1494>
    cd38:	ldr	r0, [pc, r0]
    cd3c:	ldr	r1, [pc, #3980]	; dcd0 <opt_loop+0x1498>
    cd40:	add	r1, pc, r1
    cd44:	str	r0, [r1]
    cd48:	ldr	r0, [pc, #3972]	; dcd4 <opt_loop+0x149c>
    cd4c:	ldr	r0, [pc, r0]
    cd50:	ldr	r1, [pc, #3968]	; dcd8 <opt_loop+0x14a0>
    cd54:	ldr	r1, [pc, r1]
    cd58:	lsl	r2, r1, #3
    cd5c:	mov	r1, #0
    cd60:	bl	ef0 <memset@plt>
    cd64:	ldr	r0, [pc, #3952]	; dcdc <opt_loop+0x14a4>
    cd68:	mov	r1, #0
    cd6c:	mov	r2, #852	; 0x354
    cd70:	add	r0, pc, r0
    cd74:	bl	ef0 <memset@plt>
    cd78:	ldr	r4, [r9, #36]	; 0x24
    cd7c:	mov	r0, r9
    cd80:	bl	e4d8 <find_inedges>
    cd84:	str	r4, [sp, #4]
    cd88:	cmp	r4, #0
    cd8c:	ldr	r4, [sp, #20]
    cd90:	ldr	r9, [pc, #3912]	; dce0 <opt_loop+0x14a8>
    cd94:	add	r9, pc, r9
    cd98:	bmi	d954 <opt_loop+0x111c>
    cd9c:	ldr	r1, [sp, #4]
    cda0:	ldr	r0, [pc, #3900]	; dce4 <opt_loop+0x14ac>
    cda4:	ldr	r0, [pc, r0]
    cda8:	str	r1, [sp, #8]
    cdac:	ldr	sl, [r0, r1, lsl #2]
    cdb0:	cmp	sl, #0
    cdb4:	beq	d940 <opt_loop+0x1108>
    cdb8:	ldr	r4, [sl, #112]	; 0x70
    cdbc:	add	r0, sl, #136	; 0x88
    cdc0:	cmp	r4, #0
    cdc4:	beq	ce1c <opt_loop+0x5e4>
    cdc8:	ldr	r1, [r4, #16]
    cdcc:	mov	r2, #72	; 0x48
    cdd0:	add	r1, r1, #136	; 0x88
    cdd4:	bl	e30 <memcpy@plt>
    cdd8:	ldr	r0, [r4, #20]
    cddc:	ldr	r4, [sp, #20]
    cde0:	cmp	r0, #0
    cde4:	beq	ce2c <opt_loop+0x5f4>
    cde8:	mov	r1, #34	; 0x22
    cdec:	ldr	r3, [r0, #16]
    cdf0:	ldr	r2, [sl, r1, lsl #2]
    cdf4:	ldr	r3, [r3, r1, lsl #2]
    cdf8:	cmp	r2, r3
    cdfc:	strne	r8, [sl, r1, lsl #2]
    ce00:	add	r1, r1, #1
    ce04:	cmp	r1, #52	; 0x34
    ce08:	bne	cdec <opt_loop+0x5b4>
    ce0c:	ldr	r0, [r0, #20]
    ce10:	cmp	r0, #0
    ce14:	bne	cde8 <opt_loop+0x5b0>
    ce18:	b	ce2c <opt_loop+0x5f4>
    ce1c:	mov	r1, #0
    ce20:	mov	r2, #72	; 0x48
    ce24:	bl	ef0 <memset@plt>
    ce28:	ldr	r4, [sp, #20]
    ce2c:	mov	r9, sl
    ce30:	ldr	r0, [r9, #200]!	; 0xc8
    ce34:	ldr	r6, [r9, #-196]	; 0xffffff3c
    ce38:	str	r0, [sp, #16]
    ce3c:	ldr	r0, [r9, #4]
    ce40:	str	r0, [sp, #12]
    ce44:	cmp	r6, #0
    ce48:	beq	d3ec <opt_loop+0xbb4>
    ce4c:	ldr	r5, [r6]
    ce50:	cmp	r5, #59	; 0x3b
    ce54:	ble	cee8 <opt_loop+0x6b0>
    ce58:	cmp	r5, #91	; 0x5b
    ce5c:	ble	cf38 <opt_loop+0x700>
    ce60:	cmp	r5, #123	; 0x7b
    ce64:	bgt	cfc4 <opt_loop+0x78c>
    ce68:	sub	r0, r5, #92	; 0x5c
    ce6c:	cmp	r0, #8
    ce70:	bhi	d094 <opt_loop+0x85c>
    ce74:	add	r1, pc, #4
    ce78:	ldr	r0, [r1, r0, lsl #2]
    ce7c:	add	pc, r1, r0
    ce80:	.word	0x0000027c
    ce84:	.word	0x00000544
    ce88:	.word	0x00000544
    ce8c:	.word	0x00000544
    ce90:	.word	0x00000024
    ce94:	.word	0x00000468
    ce98:	.word	0x00000544
    ce9c:	.word	0x00000544
    cea0:	.word	0x00000224
    cea4:	ldr	r0, [r6, #12]
    cea8:	cmp	r4, #0
    ceac:	add	r0, sl, r0, lsl #2
    ceb0:	ldr	r0, [r0, #136]	; 0x88
    ceb4:	beq	d3c0 <opt_loop+0xb88>
    ceb8:	ldr	r1, [pc, #3656]	; dd08 <opt_loop+0x14d0>
    cebc:	ldr	r1, [pc, r1]
    cec0:	ldr	r1, [r1, r0, lsl #3]
    cec4:	cmp	r1, #0
    cec8:	beq	d084 <opt_loop+0x84c>
    cecc:	str	r8, [r6]
    ced0:	ldr	r1, [pc, #3636]	; dd0c <opt_loop+0x14d4>
    ced4:	ldr	r1, [pc, r1]
    ced8:	add	r1, r1, r0, lsl #3
    cedc:	ldr	r1, [r1, #4]
    cee0:	str	r1, [r6, #12]
    cee4:	b	d040 <opt_loop+0x808>
    cee8:	cmp	r5, #12
    ceec:	bls	cf78 <opt_loop+0x740>
    cef0:	sub	r0, r5, #28
    cef4:	cmp	r0, #24
    cef8:	bhi	cf2c <opt_loop+0x6f4>
    cefc:	movw	r1, #4112	; 0x1010
    cf00:	movt	r1, #16
    cf04:	tst	r1, r7, lsl r0
    cf08:	bne	d050 <opt_loop+0x818>
    cf0c:	movw	r1, #1
    cf10:	movt	r1, #1
    cf14:	tst	r1, r7, lsl r0
    cf18:	bne	d0fc <opt_loop+0x8c4>
    cf1c:	movw	r1, #256	; 0x100
    cf20:	movt	r1, #256	; 0x100
    cf24:	tst	r1, r7, lsl r0
    cf28:	bne	d0a4 <opt_loop+0x86c>
    cf2c:	cmp	r5, #20
    cf30:	beq	d0a4 <opt_loop+0x86c>
    cf34:	b	d3c4 <opt_loop+0xb8c>
    cf38:	sub	r0, r5, #60	; 0x3c
    cf3c:	cmp	r0, #24
    cf40:	bhi	d3c4 <opt_loop+0xb8c>
    cf44:	movw	r1, #4112	; 0x1010
    cf48:	movt	r1, #16
    cf4c:	tst	r1, r7, lsl r0
    cf50:	bne	cff0 <opt_loop+0x7b8>
    cf54:	movw	r1, #1
    cf58:	movt	r1, #1
    cf5c:	tst	r1, r7, lsl r0
    cf60:	bne	d0fc <opt_loop+0x8c4>
    cf64:	movw	r1, #256	; 0x100
    cf68:	movt	r1, #256	; 0x100
    cf6c:	tst	r1, r7, lsl r0
    cf70:	bne	d0a4 <opt_loop+0x86c>
    cf74:	b	d3c4 <opt_loop+0xb8c>
    cf78:	add	r0, pc, #4
    cf7c:	ldr	r1, [r0, r5, lsl #2]
    cf80:	add	pc, r0, r1
    cf84:	.word	0x00000034
    cf88:	.word	0x00000334
    cf8c:	.word	0x000002f4
    cf90:	.word	0x00000300
    cf94:	.word	0x00000120
    cf98:	.word	0x00000440
    cf9c:	.word	0x00000440
    cfa0:	.word	0x0000032c
    cfa4:	.word	0x00000440
    cfa8:	.word	0x00000440
    cfac:	.word	0x00000440
    cfb0:	.word	0x00000440
    cfb4:	.word	0x00000178
    cfb8:	ldr	r1, [r6, #12]
    cfbc:	mov	r0, #0
    cfc0:	b	d074 <opt_loop+0x83c>
    cfc4:	cmp	r5, #131	; 0x83
    cfc8:	ble	d05c <opt_loop+0x824>
    cfcc:	cmp	r5, #132	; 0x84
    cfd0:	beq	d348 <opt_loop+0xb10>
    cfd4:	cmp	r5, #135	; 0x87
    cfd8:	beq	d340 <opt_loop+0xb08>
    cfdc:	cmp	r5, #177	; 0xb1
    cfe0:	bne	d3c4 <opt_loop+0xb8c>
    cfe4:	ldr	r1, [r6, #12]
    cfe8:	mov	r0, #177	; 0xb1
    cfec:	b	d2c0 <opt_loop+0xa88>
    cff0:	ldr	r2, [sl, #204]	; 0xcc
    cff4:	cmp	r4, #0
    cff8:	beq	d270 <opt_loop+0xa38>
    cffc:	ldr	r0, [pc, #3300]	; dce8 <opt_loop+0x14b0>
    d000:	ldr	r0, [pc, r0]
    d004:	ldr	r0, [r0, r2, lsl #3]
    d008:	cmp	r0, #0
    d00c:	beq	d390 <opt_loop+0xb58>
    d010:	and	r0, r5, #24
    d014:	orr	r0, r0, #32
    d018:	str	r0, [r6]
    d01c:	ldr	r1, [pc, #3272]	; dcec <opt_loop+0x14b4>
    d020:	ldr	r1, [pc, r1]
    d024:	add	r1, r1, r2, lsl #3
    d028:	ldr	r2, [r6, #12]
    d02c:	ldr	r1, [r1, #4]
    d030:	add	r1, r2, r1
    d034:	mov	r2, #0
    d038:	str	r1, [r6, #12]
    d03c:	bl	e7b0 <F>
    d040:	ldr	r1, [pc, #3272]	; dd10 <opt_loop+0x14d8>
    d044:	add	r1, pc, r1
    d048:	strb	r8, [r1]
    d04c:	b	d084 <opt_loop+0x84c>
    d050:	ldr	r1, [r6, #12]
    d054:	mov	r0, r5
    d058:	b	d074 <opt_loop+0x83c>
    d05c:	cmp	r5, #124	; 0x7c
    d060:	beq	d0fc <opt_loop+0x8c4>
    d064:	cmp	r5, #128	; 0x80
    d068:	bne	d3c4 <opt_loop+0xb8c>
    d06c:	mov	r0, #128	; 0x80
    d070:	mov	r1, #0
    d074:	mov	r2, #0
    d078:	bl	e7b0 <F>
    d07c:	cmp	r4, #0
    d080:	beq	d3c0 <opt_loop+0xb88>
    d084:	ldr	r1, [r9]
    d088:	cmp	r1, r0
    d08c:	beq	d2dc <opt_loop+0xaa4>
    d090:	b	d3c0 <opt_loop+0xb88>
    d094:	cmp	r5, #108	; 0x6c
    d098:	beq	d0fc <opt_loop+0x8c4>
    d09c:	cmp	r5, #116	; 0x74
    d0a0:	bne	d3c4 <opt_loop+0xb8c>
    d0a4:	cmp	r4, #0
    d0a8:	beq	d15c <opt_loop+0x924>
    d0ac:	ldr	r1, [r6, #12]
    d0b0:	cmp	r1, #0
    d0b4:	beq	d1e4 <opt_loop+0x9ac>
    d0b8:	ldr	r7, [r9]
    d0bc:	ldr	r0, [pc, #3124]	; dcf8 <opt_loop+0x14c0>
    d0c0:	ldr	r0, [pc, r0]
    d0c4:	ldr	r0, [r0, r7, lsl #3]
    d0c8:	cmp	r0, #0
    d0cc:	beq	d164 <opt_loop+0x92c>
    d0d0:	mov	r0, #0
    d0d4:	mov	r2, #0
    d0d8:	bl	e7b0 <F>
    d0dc:	mov	r2, r0
    d0e0:	mov	r0, r6
    d0e4:	mov	r1, r7
    d0e8:	bl	e8ac <fold_op>
    d0ec:	ldr	r1, [r6, #12]
    d0f0:	mov	r0, #0
    d0f4:	mov	r2, #0
    d0f8:	b	d17c <opt_loop+0x944>
    d0fc:	cmp	r4, #0
    d100:	beq	d150 <opt_loop+0x918>
    d104:	ldr	r1, [sl, #200]	; 0xc8
    d108:	ldr	r2, [sl, #204]	; 0xcc
    d10c:	ldr	r3, [pc, #3048]	; dcfc <opt_loop+0x14c4>
    d110:	and	r0, r5, #240	; 0xf0
    d114:	ldr	r3, [pc, r3]
    d118:	ldr	r4, [r3, r2, lsl #3]
    d11c:	ldr	r7, [r3, r1, lsl #3]
    d120:	cmp	r4, #0
    d124:	beq	d188 <opt_loop+0x950>
    d128:	cmp	r7, #0
    d12c:	beq	d214 <opt_loop+0x9dc>
    d130:	mov	r0, r6
    d134:	bl	e8ac <fold_op>
    d138:	ldr	r1, [r6, #12]
    d13c:	mov	r0, #0
    d140:	mov	r2, #0
    d144:	bl	e7b0 <F>
    d148:	str	r0, [r9]
    d14c:	b	d264 <opt_loop+0xa2c>
    d150:	ldr	r1, [sl, #200]	; 0xc8
    d154:	ldr	r2, [sl, #204]	; 0xcc
    d158:	b	d3a8 <opt_loop+0xb70>
    d15c:	ldr	r1, [r6, #12]
    d160:	ldr	r7, [r9]
    d164:	mov	r0, #0
    d168:	mov	r2, #0
    d16c:	bl	e7b0 <F>
    d170:	mov	r2, r0
    d174:	mov	r0, r5
    d178:	mov	r1, r7
    d17c:	bl	e7b0 <F>
    d180:	str	r0, [r9]
    d184:	b	d268 <opt_loop+0xa30>
    d188:	cmp	r7, #0
    d18c:	beq	d3a0 <opt_loop+0xb68>
    d190:	add	r3, r3, r1, lsl #3
    d194:	ldr	r4, [sp, #20]
    d198:	mov	r7, #1
    d19c:	ldr	r3, [r3, #4]
    d1a0:	cmp	r3, #0
    d1a4:	bne	d3a8 <opt_loop+0xb70>
    d1a8:	tst	r5, #176	; 0xb0
    d1ac:	beq	d3cc <opt_loop+0xb94>
    d1b0:	sub	r0, r0, #32
    d1b4:	lsr	r0, r0, #4
    d1b8:	cmp	r0, #6
    d1bc:	bhi	d3a8 <opt_loop+0xb70>
    d1c0:	mov	r3, #59	; 0x3b
    d1c4:	tst	r3, r7, lsl r0
    d1c8:	beq	d3e0 <opt_loop+0xba8>
    d1cc:	mov	r0, #0
    d1d0:	mov	r1, #0
    d1d4:	mov	r2, #0
    d1d8:	str	r8, [r6, #12]
    d1dc:	str	r8, [r6]
    d1e0:	b	d398 <opt_loop+0xb60>
    d1e4:	tst	r5, #176	; 0xb0
    d1e8:	andne	r0, r5, #240	; 0xf0
    d1ec:	orrne	r2, r0, #16
    d1f0:	cmpne	r2, #112	; 0x70
    d1f4:	beq	d2dc <opt_loop+0xaa4>
    d1f8:	cmp	r0, #80	; 0x50
    d1fc:	cmpne	r0, #32
    d200:	bne	d0b8 <opt_loop+0x880>
    d204:	str	r8, [r6]
    d208:	mov	r0, #0
    d20c:	mov	r1, #0
    d210:	b	d3b8 <opt_loop+0xb80>
    d214:	orr	r5, r0, #4
    d218:	mov	r2, #0
    d21c:	str	r5, [r6]
    d220:	ldr	r0, [sl, #204]	; 0xcc
    d224:	ldr	r1, [pc, #2772]	; dd00 <opt_loop+0x14c8>
    d228:	ldr	r1, [pc, r1]
    d22c:	add	r0, r1, r0, lsl #3
    d230:	ldr	r1, [r0, #4]
    d234:	str	r1, [r6, #12]
    d238:	ldr	r0, [pc, #2756]	; dd04 <opt_loop+0x14cc>
    d23c:	add	r0, pc, r0
    d240:	strb	r8, [r0]
    d244:	mov	r0, #0
    d248:	ldr	r7, [sl, #200]	; 0xc8
    d24c:	bl	e7b0 <F>
    d250:	mov	r2, r0
    d254:	mov	r0, r5
    d258:	mov	r1, r7
    d25c:	bl	e7b0 <F>
    d260:	str	r0, [sl, #200]	; 0xc8
    d264:	ldr	r4, [sp, #20]
    d268:	mov	r7, #1
    d26c:	b	d3c4 <opt_loop+0xb8c>
    d270:	ldr	r1, [r6, #12]
    d274:	b	d3a8 <opt_loop+0xb70>
    d278:	ldr	r0, [r6, #12]
    d27c:	ldr	r1, [sl, #200]	; 0xc8
    d280:	b	d28c <opt_loop+0xa54>
    d284:	ldr	r0, [r6, #12]
    d288:	ldr	r1, [sl, #204]	; 0xcc
    d28c:	add	r0, sl, r0, lsl #2
    d290:	add	r0, r0, #136	; 0x88
    d294:	cmp	r4, #0
    d298:	beq	d2a8 <opt_loop+0xa70>
    d29c:	ldr	r2, [r0]
    d2a0:	cmp	r2, r1
    d2a4:	beq	d2dc <opt_loop+0xaa4>
    d2a8:	str	r1, [r0]
    d2ac:	b	d3c4 <opt_loop+0xb8c>
    d2b0:	ldr	r0, [r9]
    d2b4:	b	d2c8 <opt_loop+0xa90>
    d2b8:	ldr	r1, [r6, #12]
    d2bc:	mov	r0, #0
    d2c0:	mov	r2, #0
    d2c4:	bl	e7b0 <F>
    d2c8:	cmp	r4, #0
    d2cc:	beq	d338 <opt_loop+0xb00>
    d2d0:	ldr	r1, [sl, #204]	; 0xcc
    d2d4:	cmp	r1, r0
    d2d8:	bne	d338 <opt_loop+0xb00>
    d2dc:	mvn	r0, #0
    d2e0:	str	r0, [r6]
    d2e4:	b	d3c4 <opt_loop+0xb8c>
    d2e8:	ldr	r0, [r6, #12]
    d2ec:	cmp	r4, #0
    d2f0:	add	r0, sl, r0, lsl #2
    d2f4:	ldr	r0, [r0, #136]	; 0x88
    d2f8:	beq	d338 <opt_loop+0xb00>
    d2fc:	ldr	r1, [pc, #2576]	; dd14 <opt_loop+0x14dc>
    d300:	ldr	r1, [pc, r1]
    d304:	ldr	r1, [r1, r0, lsl #3]
    d308:	cmp	r1, #0
    d30c:	beq	d2d0 <opt_loop+0xa98>
    d310:	str	r7, [r6]
    d314:	ldr	r1, [pc, #2556]	; dd18 <opt_loop+0x14e0>
    d318:	ldr	r1, [pc, r1]
    d31c:	add	r1, r1, r0, lsl #3
    d320:	ldr	r1, [r1, #4]
    d324:	str	r1, [r6, #12]
    d328:	ldr	r1, [pc, #2540]	; dd1c <opt_loop+0x14e4>
    d32c:	add	r1, pc, r1
    d330:	strb	r8, [r1]
    d334:	b	d2d0 <opt_loop+0xa98>
    d338:	str	r0, [sl, #204]	; 0xcc
    d33c:	b	d3c4 <opt_loop+0xb8c>
    d340:	ldr	r0, [sl, #204]	; 0xcc
    d344:	b	d07c <opt_loop+0x844>
    d348:	cmp	r4, #0
    d34c:	beq	d3b0 <opt_loop+0xb78>
    d350:	ldr	r1, [r9]
    d354:	ldr	r0, [pc, #2452]	; dcf0 <opt_loop+0x14b8>
    d358:	ldr	r0, [pc, r0]
    d35c:	ldr	r0, [r0, r1, lsl #3]
    d360:	cmp	r0, #0
    d364:	beq	d3b4 <opt_loop+0xb7c>
    d368:	str	r8, [r6]
    d36c:	ldr	r0, [r9]
    d370:	ldr	r1, [pc, #2428]	; dcf4 <opt_loop+0x14bc>
    d374:	ldr	r1, [pc, r1]
    d378:	add	r0, r1, r0, lsl #3
    d37c:	ldr	r0, [r0, #4]
    d380:	rsb	r1, r0, #0
    d384:	mov	r0, #0
    d388:	str	r1, [r6, #12]
    d38c:	b	d3b8 <opt_loop+0xb80>
    d390:	ldr	r1, [r6, #12]
    d394:	mov	r0, r5
    d398:	bl	e7b0 <F>
    d39c:	b	d084 <opt_loop+0x84c>
    d3a0:	ldr	r4, [sp, #20]
    d3a4:	mov	r7, #1
    d3a8:	mov	r0, r5
    d3ac:	b	d3bc <opt_loop+0xb84>
    d3b0:	ldr	r1, [r9]
    d3b4:	mov	r0, #132	; 0x84
    d3b8:	mov	r2, #0
    d3bc:	bl	e7b0 <F>
    d3c0:	str	r0, [r9]
    d3c4:	ldr	r6, [r6, #16]
    d3c8:	b	ce44 <opt_loop+0x60c>
    d3cc:	mov	r0, #135	; 0x87
    d3d0:	str	r0, [r6]
    d3d4:	ldr	r1, [sl, #200]	; 0xc8
    d3d8:	ldr	r0, [sl, #204]	; 0xcc
    d3dc:	b	d088 <opt_loop+0x850>
    d3e0:	cmp	r0, #6
    d3e4:	beq	d2dc <opt_loop+0xaa4>
    d3e8:	b	d3a8 <opt_loop+0xb70>
    d3ec:	cmp	r4, #0
    d3f0:	beq	d464 <opt_loop+0xc2c>
    d3f4:	ldr	r0, [sp, #16]
    d3f8:	cmp	r0, #0
    d3fc:	beq	d438 <opt_loop+0xc00>
    d400:	ldr	r0, [sl, #128]	; 0x80
    d404:	cmp	r0, #0
    d408:	bne	d438 <opt_loop+0xc00>
    d40c:	ldr	r0, [sp, #12]
    d410:	cmp	r0, #0
    d414:	beq	d438 <opt_loop+0xc00>
    d418:	ldr	r0, [r9]
    d41c:	ldr	r1, [sp, #16]
    d420:	cmp	r0, r1
    d424:	bne	d438 <opt_loop+0xc00>
    d428:	ldr	r0, [sl, #204]	; 0xcc
    d42c:	ldr	r1, [sp, #12]
    d430:	cmp	r0, r1
    d434:	beq	d448 <opt_loop+0xc10>
    d438:	ldr	r0, [sl, #8]
    d43c:	and	r0, r0, #7
    d440:	cmp	r0, #6
    d444:	bne	d464 <opt_loop+0xc2c>
    d448:	ldr	r0, [sl, #4]
    d44c:	ldr	r9, [pc, #2252]	; dd20 <opt_loop+0x14e8>
    d450:	cmp	r0, #0
    d454:	add	r9, pc, r9
    d458:	strne	r8, [sl, #4]
    d45c:	strbne	r8, [r9]
    d460:	b	d8d4 <opt_loop+0x109c>
    d464:	ldr	r0, [sl, #4]
    d468:	add	r6, sp, #24
    d46c:	cmp	r0, #0
    d470:	beq	d60c <opt_loop+0xdd4>
    d474:	mov	ip, #1
    d478:	mov	r2, r0
    d47c:	mov	r1, r0
    d480:	ldr	r3, [r1]
    d484:	ldr	r0, [r1, #16]
    d488:	cmn	r3, #1
    d48c:	bne	d4a4 <opt_loop+0xc6c>
    d490:	cmp	r0, #0
    d494:	mov	r1, r0
    d498:	bne	d480 <opt_loop+0xc48>
    d49c:	b	d624 <opt_loop+0xdec>
    d4a0:	ldr	r0, [r0, #16]
    d4a4:	cmp	r0, #0
    d4a8:	beq	d624 <opt_loop+0xdec>
    d4ac:	ldr	r7, [r0]
    d4b0:	cmn	r7, #1
    d4b4:	beq	d4a0 <opt_loop+0xc68>
    d4b8:	cmp	r3, #2
    d4bc:	bne	d4f0 <opt_loop+0xcb8>
    d4c0:	cmp	r7, #97	; 0x61
    d4c4:	bne	d4f8 <opt_loop+0xcc0>
    d4c8:	ldr	r2, [r0, #12]
    d4cc:	ldr	r3, [r1, #12]
    d4d0:	cmp	r3, r2
    d4d4:	bne	d4f8 <opt_loop+0xcc0>
    d4d8:	ldr	r2, [pc, #2116]	; dd24 <opt_loop+0x14ec>
    d4dc:	mov	r7, #7
    d4e0:	add	r2, pc, r2
    d4e4:	strb	r8, [r2]
    d4e8:	str	r7, [r0]
    d4ec:	ldr	r3, [r1]
    d4f0:	cmp	r3, #0
    d4f4:	beq	d504 <opt_loop+0xccc>
    d4f8:	cmp	r0, #0
    d4fc:	bne	d478 <opt_loop+0xc40>
    d500:	b	d620 <opt_loop+0xde8>
    d504:	cmp	r7, #7
    d508:	bne	d530 <opt_loop+0xcf8>
    d50c:	mov	r2, #135	; 0x87
    d510:	str	ip, [r1]
    d514:	str	r2, [r0]
    d518:	ldr	r2, [pc, #2056]	; dd28 <opt_loop+0x14f0>
    d51c:	add	r2, pc, r2
    d520:	strb	r8, [r2]
    d524:	ldr	r2, [r1]
    d528:	cmp	r2, #0
    d52c:	bne	d4f8 <opt_loop+0xcc0>
    d530:	ldrb	r2, [sl, #130]	; 0x82
    d534:	tst	r2, #2
    d538:	bne	d4f8 <opt_loop+0xcc0>
    d53c:	ldr	r3, [r0]
    d540:	mov	r2, r0
    d544:	cmp	r3, #177	; 0xb1
    d548:	bne	d56c <opt_loop+0xd34>
    d54c:	ldr	r2, [r0, #16]
    d550:	cmp	r2, #0
    d554:	beq	d4f8 <opt_loop+0xcc0>
    d558:	ldr	r3, [r2]
    d55c:	cmn	r3, #1
    d560:	bne	d56c <opt_loop+0xd34>
    d564:	ldr	r2, [r2, #16]
    d568:	b	d550 <opt_loop+0xd18>
    d56c:	cmp	r3, #12
    d570:	bne	d4f8 <opt_loop+0xcc0>
    d574:	ldr	r3, [r2, #16]
    d578:	cmp	r3, #0
    d57c:	beq	d4f8 <opt_loop+0xcc0>
    d580:	ldr	r7, [r3]
    d584:	cmn	r7, #1
    d588:	bne	d594 <opt_loop+0xd5c>
    d58c:	ldr	r3, [r3, #16]
    d590:	b	d578 <opt_loop+0xd40>
    d594:	cmp	r7, #7
    d598:	bne	d4f8 <opt_loop+0xcc0>
    d59c:	ldr	r7, [r3, #16]
    d5a0:	cmp	r7, #0
    d5a4:	beq	d4f8 <opt_loop+0xcc0>
    d5a8:	ldr	r6, [r7]
    d5ac:	cmn	r6, #1
    d5b0:	bne	d5c8 <opt_loop+0xd90>
    d5b4:	ldr	r7, [r7, #16]
    d5b8:	add	r6, sp, #24
    d5bc:	cmp	r7, #0
    d5c0:	bne	d5a8 <opt_loop+0xd70>
    d5c4:	b	d4f8 <opt_loop+0xcc0>
    d5c8:	and	r6, r6, #231	; 0xe7
    d5cc:	cmp	r6, #64	; 0x40
    d5d0:	add	r6, sp, #24
    d5d4:	bne	d4f8 <opt_loop+0xcc0>
    d5d8:	ldr	r6, [r1, #12]
    d5dc:	ldr	r5, [r7, #12]
    d5e0:	add	r6, r5, r6
    d5e4:	str	r6, [r7, #12]
    d5e8:	mvn	r7, #0
    d5ec:	add	r6, sp, #24
    d5f0:	str	r7, [r1]
    d5f4:	str	r7, [r2]
    d5f8:	str	r7, [r3]
    d5fc:	ldr	r1, [pc, #1832]	; dd2c <opt_loop+0x14f4>
    d600:	add	r1, pc, r1
    d604:	strb	r8, [r1]
    d608:	b	d4f8 <opt_loop+0xcc0>
    d60c:	mov	r0, r6
    d610:	mov	r1, #0
    d614:	mov	r2, #72	; 0x48
    d618:	bl	ef0 <memset@plt>
    d61c:	b	d890 <opt_loop+0x1058>
    d620:	mov	r2, #0
    d624:	ldr	r0, [sl, #8]
    d628:	mov	r7, #1
    d62c:	cmp	r0, #21
    d630:	bne	d710 <opt_loop+0xed8>
    d634:	ldrb	r0, [sl, #130]	; 0x82
    d638:	tst	r0, #1
    d63c:	bne	d70c <opt_loop+0xed4>
    d640:	ldr	r0, [r2]
    d644:	cmp	r0, #20
    d648:	beq	d694 <opt_loop+0xe5c>
    d64c:	cmp	r0, #84	; 0x54
    d650:	beq	d6bc <opt_loop+0xe84>
    d654:	cmp	r0, #28
    d658:	bne	d70c <opt_loop+0xed4>
    d65c:	ldr	r0, [sl, #204]	; 0xcc
    d660:	ldr	r1, [pc, #1736]	; dd30 <opt_loop+0x14f8>
    d664:	ldr	r1, [pc, r1]
    d668:	ldr	r3, [r1, r0, lsl #3]
    d66c:	cmp	r3, #0
    d670:	beq	d700 <opt_loop+0xec8>
    d674:	add	r0, r1, r0, lsl #3
    d678:	ldr	r1, [sl, #20]
    d67c:	ldr	r0, [r0, #4]
    d680:	add	r0, r1, r0
    d684:	str	r0, [sl, #20]
    d688:	mvn	r0, #0
    d68c:	str	r0, [r2]
    d690:	b	d6ac <opt_loop+0xe74>
    d694:	mvn	r0, #0
    d698:	str	r0, [r2]
    d69c:	ldr	r0, [r2, #12]
    d6a0:	ldr	r1, [sl, #20]
    d6a4:	add	r0, r1, r0
    d6a8:	str	r0, [sl, #20]
    d6ac:	ldr	r0, [pc, #1668]	; dd38 <opt_loop+0x1500>
    d6b0:	add	r0, pc, r0
    d6b4:	strb	r8, [r0]
    d6b8:	b	d70c <opt_loop+0xed4>
    d6bc:	ldr	r0, [sl, #20]
    d6c0:	cmp	r0, #0
    d6c4:	bne	d70c <opt_loop+0xed4>
    d6c8:	ldr	r0, [r2, #12]
    d6cc:	mov	r1, #69	; 0x45
    d6d0:	str	r1, [sl, #8]
    d6d4:	str	r0, [sl, #20]
    d6d8:	mvn	r0, #0
    d6dc:	str	r0, [r2]
    d6e0:	ldr	r0, [pc, #1620]	; dd3c <opt_loop+0x1504>
    d6e4:	add	r0, pc, r0
    d6e8:	strb	r8, [r0]
    d6ec:	ldr	r0, [sl, #60]	; 0x3c
    d6f0:	ldr	r1, [sl, #84]	; 0x54
    d6f4:	str	r0, [sl, #84]	; 0x54
    d6f8:	str	r1, [sl, #60]	; 0x3c
    d6fc:	b	d70c <opt_loop+0xed4>
    d700:	ldr	r0, [sl, #20]
    d704:	cmp	r0, #0
    d708:	beq	d918 <opt_loop+0x10e0>
    d70c:	ldr	r0, [sl, #8]
    d710:	cmp	r0, #69	; 0x45
    d714:	bne	d744 <opt_loop+0xf0c>
    d718:	ldr	r1, [sl, #20]
    d71c:	mov	r0, #69	; 0x45
    d720:	cmn	r1, #1
    d724:	beq	d73c <opt_loop+0xf04>
    d728:	cmp	r1, #0
    d72c:	bne	d744 <opt_loop+0xf0c>
    d730:	ldr	r1, [sl, #84]	; 0x54
    d734:	str	r1, [sl, #60]	; 0x3c
    d738:	b	d744 <opt_loop+0xf0c>
    d73c:	ldr	r1, [sl, #60]	; 0x3c
    d740:	str	r1, [sl, #84]	; 0x54
    d744:	ldr	r1, [pc, #1524]	; dd40 <opt_loop+0x1508>
    d748:	tst	r0, #8
    d74c:	ldr	r1, [pc, r1]
    d750:	beq	d778 <opt_loop+0xf40>
    d754:	ldr	r2, [sl, #204]	; 0xcc
    d758:	ldr	r3, [r1, r2, lsl #3]
    d75c:	cmp	r3, #0
    d760:	beq	d778 <opt_loop+0xf40>
    d764:	add	r2, r1, r2, lsl #3
    d768:	bic	r0, r0, #8
    d76c:	ldr	r2, [r2, #4]
    d770:	str	r0, [sl, #8]
    d774:	str	r2, [sl, #20]
    d778:	tst	r0, #8
    d77c:	bne	d850 <opt_loop+0x1018>
    d780:	ldr	r2, [r9]
    d784:	ldr	r3, [r1, r2, lsl #3]
    d788:	cmp	r3, #0
    d78c:	beq	d850 <opt_loop+0x1018>
    d790:	and	r0, r0, #240	; 0xf0
    d794:	sub	r0, r0, #16
    d798:	lsr	r3, r0, #4
    d79c:	cmp	r3, #3
    d7a0:	bhi	dcc0 <opt_loop+0x1488>
    d7a4:	add	r0, r1, r2, lsl #3
    d7a8:	ldr	r0, [r0, #4]
    d7ac:	add	r1, pc, #4
    d7b0:	ldr	r2, [r1, r3, lsl #2]
    d7b4:	add	pc, r1, r2
    d7b8:	.word	0x00000010
    d7bc:	.word	0x00000024
    d7c0:	.word	0x00000038
    d7c4:	.word	0x00000058
    d7c8:	ldr	r1, [sl, #20]
    d7cc:	sub	r0, r0, r1
    d7d0:	clz	r0, r0
    d7d4:	lsr	r0, r0, #5
    d7d8:	b	d818 <opt_loop+0xfe0>
    d7dc:	ldr	r1, [sl, #20]
    d7e0:	cmp	r0, r1
    d7e4:	mov	r0, #0
    d7e8:	movwhi	r0, #1
    d7ec:	b	d818 <opt_loop+0xfe0>
    d7f0:	ldr	r1, [sl, #20]
    d7f4:	cmp	r0, r1
    d7f8:	mov	r0, #0
    d7fc:	movwcs	r0, #1
    d800:	b	d818 <opt_loop+0xfe0>
    d804:	.word	0x00023d08
    d808:	.word	0x00024140
    d80c:	.word	0x00023cf4
    d810:	ldr	r1, [sl, #20]
    d814:	and	r0, r1, r0
    d818:	mov	r3, sl
    d81c:	ldr	r6, [pc, #1312]	; dd44 <opt_loop+0x150c>
    d820:	ldr	r1, [r3, #60]!	; 0x3c
    d824:	mov	r2, r3
    d828:	ldr	r7, [r2, #24]!
    d82c:	add	r6, pc, r6
    d830:	cmp	r7, r1
    d834:	strbne	r8, [r6]
    d838:	cmp	r0, #0
    d83c:	add	r6, sp, #24
    d840:	moveq	r1, r7
    d844:	moveq	r2, r3
    d848:	mov	r7, #1
    d84c:	str	r1, [r2]
    d850:	ldr	r5, [sl, #4]
    d854:	mov	r0, r6
    d858:	mov	r1, #0
    d85c:	mov	r2, #72	; 0x48
    d860:	bl	ef0 <memset@plt>
    d864:	cmp	r5, #0
    d868:	beq	d890 <opt_loop+0x1058>
    d86c:	mov	r0, r5
    d870:	mov	r1, r6
    d874:	bl	e990 <deadstmt>
    d878:	ldr	r5, [r5, #16]
    d87c:	b	d864 <opt_loop+0x102c>
    d880:	.word	0x00023cd0
    d884:	.word	0x00023cc4
    d888:	.word	0x00023cc8
    d88c:	.word	0x00023ca8
    d890:	add	r0, sl, #8
    d894:	mov	r1, r6
    d898:	bl	e990 <deadstmt>
    d89c:	ldr	r9, [pc, #1188]	; dd48 <opt_loop+0x1510>
    d8a0:	mov	r0, #0
    d8a4:	add	r9, pc, r9
    d8a8:	ldr	r1, [r6, r0, lsl #2]
    d8ac:	cmp	r1, #0
    d8b0:	beq	d8c8 <opt_loop+0x1090>
    d8b4:	ldr	r2, [sl, #128]	; 0x80
    d8b8:	tst	r2, r7, lsl r0
    d8bc:	mvneq	r2, #0
    d8c0:	streq	r2, [r1]
    d8c4:	strbeq	r8, [r9]
    d8c8:	add	r0, r0, #1
    d8cc:	cmp	r0, #18
    d8d0:	bne	d8a8 <opt_loop+0x1070>
    d8d4:	ldr	r1, [sl, #8]
    d8d8:	tst	r1, #8
    d8dc:	bne	d8fc <opt_loop+0x10c4>
    d8e0:	ldr	r1, [sl, #20]
    d8e4:	mov	r0, #0
    d8e8:	mov	r2, #0
    d8ec:	bl	e7b0 <F>
    d8f0:	ldr	r1, [sl, #8]
    d8f4:	b	d900 <opt_loop+0x10c8>
    d8f8:	.word	0x000240a8
    d8fc:	ldr	r0, [sl, #204]	; 0xcc
    d900:	str	r1, [sl, #52]	; 0x34
    d904:	str	r0, [sl, #132]	; 0x84
    d908:	rsb	r0, r1, #0
    d90c:	str	r0, [sl, #76]	; 0x4c
    d910:	ldr	sl, [sl, #100]	; 0x64
    d914:	b	cdb0 <opt_loop+0x578>
    d918:	mvn	r0, #0
    d91c:	str	r0, [r2]
    d920:	mov	r0, #29
    d924:	str	r0, [sl, #8]
    d928:	ldr	r1, [pc, #1028]	; dd34 <opt_loop+0x14fc>
    d92c:	add	r1, pc, r1
    d930:	strb	r8, [r1]
    d934:	b	d744 <opt_loop+0xf0c>
    d938:	.word	0x00023c30
    d93c:	.word	0x00023bfc
    d940:	ldr	r1, [sp, #8]
    d944:	sub	r0, r1, #1
    d948:	cmp	r1, #0
    d94c:	mov	r1, r0
    d950:	bgt	cda0 <opt_loop+0x568>
    d954:	cmp	r4, #0
    d958:	bne	dca0 <opt_loop+0x1468>
    d95c:	ldr	r0, [sp, #4]
    d960:	cmp	r0, #1
    d964:	blt	dc98 <opt_loop+0x1460>
    d968:	ldr	r6, [sp]
    d96c:	mov	r4, #1
    d970:	ldr	r0, [pc, #980]	; dd4c <opt_loop+0x1514>
    d974:	ldr	r0, [pc, r0]
    d978:	ldr	r5, [r0, r4, lsl #2]
    d97c:	cmp	r5, #0
    d980:	beq	d9ac <opt_loop+0x1174>
    d984:	add	r0, r5, #48	; 0x30
    d988:	bl	e580 <opt_j>
    d98c:	add	r0, r5, #72	; 0x48
    d990:	bl	e580 <opt_j>
    d994:	ldr	r5, [r5, #100]	; 0x64
    d998:	b	d97c <opt_loop+0x1144>
    d99c:	.word	0x00023ba4
    d9a0:	.word	0x00023ba4
    d9a4:	.word	0x00023b94
    d9a8:	.word	0x00023fb4
    d9ac:	ldr	r1, [sp, #4]
    d9b0:	add	r0, r4, #1
    d9b4:	cmp	r4, r1
    d9b8:	mov	r4, r0
    d9bc:	bne	d970 <opt_loop+0x1138>
    d9c0:	mov	r0, r6
    d9c4:	bl	e4d8 <find_inedges>
    d9c8:	ldr	r0, [pc, #896]	; dd50 <opt_loop+0x1518>
    d9cc:	mov	r1, #1
    d9d0:	ldr	r0, [pc, r0]
    d9d4:	str	r0, [sp, #12]
    d9d8:	ldr	r0, [sp, #12]
    d9dc:	str	r1, [sp, #16]
    d9e0:	ldr	sl, [r0, r1, lsl #2]
    d9e4:	cmp	sl, #0
    d9e8:	beq	dc70 <opt_loop+0x1438>
    d9ec:	ldr	r3, [sl, #112]	; 0x70
    d9f0:	cmp	r3, #0
    d9f4:	beq	dc68 <opt_loop+0x1430>
    d9f8:	ldr	r0, [r3, #16]
    d9fc:	mov	r1, r3
    da00:	ldr	r7, [r0, #200]	; 0xc8
    da04:	ldr	r1, [r1, #20]
    da08:	cmp	r1, #0
    da0c:	beq	da30 <opt_loop+0x11f8>
    da10:	ldr	r2, [r1, #16]
    da14:	ldr	r2, [r2, #200]	; 0xc8
    da18:	cmp	r7, r2
    da1c:	beq	da04 <opt_loop+0x11cc>
    da20:	b	db28 <opt_loop+0x12f0>
    da24:	.word	0x00023b3c
    da28:	.word	0x00023b08
    da2c:	.word	0x00023ee4
    da30:	ldr	r1, [r0, #60]!	; 0x3c
    da34:	mov	r4, #1
    da38:	cmp	r1, sl
    da3c:	addne	r0, r0, #24
    da40:	mov	ip, r4
    da44:	ldr	r4, [r0]
    da48:	cmp	r4, #0
    da4c:	beq	db20 <opt_loop+0x12e8>
    da50:	mov	r9, r0
    da54:	ldr	r1, [r4, #60]	; 0x3c
    da58:	ldr	r0, [sl, #60]	; 0x3c
    da5c:	cmp	r1, r0
    da60:	bne	db20 <opt_loop+0x12e8>
    da64:	ldr	r0, [sl]
    da68:	ldr	r6, [r4, #104]	; 0x68
    da6c:	lsr	r2, r0, #5
    da70:	and	r5, r0, #31
    da74:	ldr	r0, [r6, r2, lsl #2]
    da78:	mov	r6, #1
    da7c:	tst	r0, r6, lsl r5
    da80:	beq	db20 <opt_loop+0x12e8>
    da84:	ldr	r6, [r4, #200]	; 0xc8
    da88:	add	r0, r4, #84	; 0x54
    da8c:	mov	r4, #0
    da90:	cmp	r6, r7
    da94:	beq	da40 <opt_loop+0x1208>
    da98:	mov	r6, #1
    da9c:	lsl	r5, r6, r5
    daa0:	ldr	r4, [r0]
    daa4:	cmp	r4, #0
    daa8:	beq	db20 <opt_loop+0x12e8>
    daac:	mov	lr, r0
    dab0:	ldr	r0, [r4, #60]	; 0x3c
    dab4:	cmp	r0, r1
    dab8:	bne	db20 <opt_loop+0x12e8>
    dabc:	ldr	r0, [r4, #104]	; 0x68
    dac0:	ldr	r0, [r0, r2, lsl #2]
    dac4:	tst	r0, r5
    dac8:	beq	db20 <opt_loop+0x12e8>
    dacc:	ldr	r6, [r4, #200]	; 0xc8
    dad0:	add	r0, r4, #84	; 0x54
    dad4:	cmp	r6, r7
    dad8:	bne	daa0 <opt_loop+0x1268>
    dadc:	ldr	r1, [r0]
    dae0:	cmp	ip, #0
    dae4:	str	r1, [lr]
    dae8:	ldr	r1, [r9]
    daec:	str	r1, [r0]
    daf0:	beq	dc48 <opt_loop+0x1410>
    daf4:	ldr	r0, [sl, #112]	; 0x70
    daf8:	cmp	r0, #0
    dafc:	beq	dc4c <opt_loop+0x1414>
    db00:	ldr	r1, [r0, #16]
    db04:	ldr	r2, [r1, #60]	; 0x3c
    db08:	cmp	r2, sl
    db0c:	mov	r2, #84	; 0x54
    db10:	movweq	r2, #60	; 0x3c
    db14:	str	r4, [r1, r2]
    db18:	ldr	r0, [r0, #20]
    db1c:	b	daf8 <opt_loop+0x12c0>
    db20:	ldr	r9, [pc, #556]	; dd54 <opt_loop+0x151c>
    db24:	add	r9, pc, r9
    db28:	cmp	r3, #0
    db2c:	beq	dc68 <opt_loop+0x1430>
    db30:	ldr	r0, [r3, #16]
    db34:	ldr	r7, [r0, #200]	; 0xc8
    db38:	ldr	r3, [r3, #20]
    db3c:	cmp	r3, #0
    db40:	beq	db58 <opt_loop+0x1320>
    db44:	ldr	r1, [r3, #16]
    db48:	ldr	r1, [r1, #200]	; 0xc8
    db4c:	cmp	r7, r1
    db50:	beq	db38 <opt_loop+0x1300>
    db54:	b	dc68 <opt_loop+0x1430>
    db58:	ldr	r1, [r0, #60]!	; 0x3c
    db5c:	mov	r2, #1
    db60:	cmp	r1, sl
    db64:	addne	r0, r0, #24
    db68:	mov	lr, r2
    db6c:	ldr	r2, [r0]
    db70:	cmp	r2, #0
    db74:	beq	dc68 <opt_loop+0x1430>
    db78:	mov	r3, r0
    db7c:	ldr	r4, [r2, #84]	; 0x54
    db80:	ldr	r0, [sl, #84]	; 0x54
    db84:	cmp	r4, r0
    db88:	bne	dc68 <opt_loop+0x1430>
    db8c:	ldr	r0, [sl]
    db90:	ldr	r6, [r2, #104]	; 0x68
    db94:	lsr	r1, r0, #5
    db98:	and	r5, r0, #31
    db9c:	ldr	r0, [r6, r1, lsl #2]
    dba0:	mov	r6, #1
    dba4:	tst	r0, r6, lsl r5
    dba8:	beq	dc68 <opt_loop+0x1430>
    dbac:	ldr	r6, [r2, #200]	; 0xc8
    dbb0:	add	r0, r2, #60	; 0x3c
    dbb4:	mov	r2, #0
    dbb8:	cmp	r6, r7
    dbbc:	beq	db68 <opt_loop+0x1330>
    dbc0:	mov	r2, #1
    dbc4:	lsl	r2, r2, r5
    dbc8:	ldr	r5, [r0]
    dbcc:	cmp	r5, #0
    dbd0:	beq	dc68 <opt_loop+0x1430>
    dbd4:	mov	ip, r0
    dbd8:	ldr	r0, [r5, #84]	; 0x54
    dbdc:	cmp	r0, r4
    dbe0:	bne	dc68 <opt_loop+0x1430>
    dbe4:	ldr	r0, [r5, #104]	; 0x68
    dbe8:	ldr	r0, [r0, r1, lsl #2]
    dbec:	tst	r0, r2
    dbf0:	beq	dc68 <opt_loop+0x1430>
    dbf4:	ldr	r6, [r5, #200]	; 0xc8
    dbf8:	add	r0, r5, #60	; 0x3c
    dbfc:	cmp	r6, r7
    dc00:	bne	dbc8 <opt_loop+0x1390>
    dc04:	ldr	r1, [r0]
    dc08:	cmp	lr, #0
    dc0c:	str	r1, [ip]
    dc10:	ldr	r1, [r3]
    dc14:	str	r1, [r0]
    dc18:	beq	dc60 <opt_loop+0x1428>
    dc1c:	ldr	r0, [sl, #112]	; 0x70
    dc20:	cmp	r0, #0
    dc24:	beq	dc64 <opt_loop+0x142c>
    dc28:	ldr	r1, [r0, #16]
    dc2c:	ldr	r2, [r1, #60]	; 0x3c
    dc30:	cmp	r2, sl
    dc34:	mov	r2, #84	; 0x54
    dc38:	movweq	r2, #60	; 0x3c
    dc3c:	str	r5, [r1, r2]
    dc40:	ldr	r0, [r0, #20]
    dc44:	b	dc20 <opt_loop+0x13e8>
    dc48:	str	r4, [r9]
    dc4c:	ldr	r9, [pc, #260]	; dd58 <opt_loop+0x1520>
    dc50:	add	r9, pc, r9
    dc54:	strb	r8, [r9]
    dc58:	ldr	r3, [sl, #112]	; 0x70
    dc5c:	b	db28 <opt_loop+0x12f0>
    dc60:	str	r5, [r3]
    dc64:	strb	r8, [r9]
    dc68:	ldr	sl, [sl, #100]	; 0x64
    dc6c:	b	d9e4 <opt_loop+0x11ac>
    dc70:	ldr	r2, [sp, #16]
    dc74:	ldr	r1, [sp, #4]
    dc78:	add	r0, r2, #1
    dc7c:	cmp	r2, r1
    dc80:	mov	r1, r0
    dc84:	bne	d9d8 <opt_loop+0x11a0>
    dc88:	b	dca0 <opt_loop+0x1468>
    dc8c:	.word	0x000238f0
    dc90:	.word	0x000238ec
    dc94:	.word	0x000238c8
    dc98:	ldr	r0, [sp]
    dc9c:	bl	e4d8 <find_inedges>
    dca0:	ldrb	r0, [r9]
    dca4:	mov	r1, #1
    dca8:	cmp	r0, #1
    dcac:	mov	r0, r9
    dcb0:	ldr	r9, [sp]
    dcb4:	bne	c860 <opt_loop+0x28>
    dcb8:	sub	sp, fp, #28
    dcbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dcc0:	bl	f74 <abort@plt>
    dcc4:	.word	0x00023cbc
    dcc8:	.word	0x00023858
    dccc:	.word	0x00023c84
    dcd0:	.word	0x00023c78
    dcd4:	.word	0x00023c74
    dcd8:	.word	0x00023834
    dcdc:	.word	0x00023820
    dce0:	.word	0x000237d0
    dce4:	.word	0x00023c08
    dce8:	.word	0x000239c0
    dcec:	.word	0x000239a0
    dcf0:	.word	0x00023668
    dcf4:	.word	0x0002364c
    dcf8:	.word	0x00023900
    dcfc:	.word	0x000238ac
    dd00:	.word	0x00023798
    dd04:	.word	0x00023328
    dd08:	.word	0x00023b04
    dd0c:	.word	0x00023aec
    dd10:	.word	0x00023520
    dd14:	.word	0x000236c0
    dd18:	.word	0x000236a8
    dd1c:	.word	0x00023238
    dd20:	.word	0x00023110
    dd24:	.word	0x00023084
    dd28:	.word	0x00023048
    dd2c:	.word	0x00022f64
    dd30:	.word	0x0002335c
    dd34:	.word	0x00022c38
    dd38:	.word	0x00022eb4
    dd3c:	.word	0x00022e80
    dd40:	.word	0x00023274
    dd44:	.word	0x00022d38
    dd48:	.word	0x00022cc0
    dd4c:	.word	0x00023038
    dd50:	.word	0x00022fdc
    dd54:	.word	0x00022a40
    dd58:	.word	0x00022914

0000dd5c <sf_icode_to_fcode>:
    dd5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd60:	add	fp, sp, #28
    dd64:	sub	sp, sp, #4
    dd68:	ldr	r5, [pc, #220]	; de4c <sf_icode_to_fcode+0xf0>
    dd6c:	mov	sl, r0
    dd70:	mov	r8, r1
    dd74:	ldr	r5, [pc, r5]
    dd78:	ldr	r9, [pc, #208]	; de50 <sf_icode_to_fcode+0xf4>
    dd7c:	add	r0, r5, #1
    dd80:	add	r9, pc, r9
    dd84:	str	r0, [r9]
    dd88:	mov	r0, sl
    dd8c:	bl	de64 <count_stmts>
    dd90:	lsl	r4, r0, #3
    dd94:	mov	r7, r0
    dd98:	str	r0, [r8]
    dd9c:	mov	r0, r4
    dda0:	bl	e84 <malloc@plt>
    dda4:	cmp	r0, #0
    dda8:	beq	de34 <sf_icode_to_fcode+0xd8>
    ddac:	mov	r6, r0
    ddb0:	mov	r0, r6
    ddb4:	mov	r1, #0
    ddb8:	mov	r2, r4
    ddbc:	bl	ef0 <memset@plt>
    ddc0:	ldr	r0, [pc, #140]	; de54 <sf_icode_to_fcode+0xf8>
    ddc4:	add	r0, pc, r0
    ddc8:	str	r6, [r0]
    ddcc:	add	r0, r6, r7, lsl #3
    ddd0:	ldr	r1, [pc, #128]	; de58 <sf_icode_to_fcode+0xfc>
    ddd4:	add	r1, pc, r1
    ddd8:	str	r0, [r1]
    dddc:	add	r0, r5, #2
    dde0:	str	r0, [r9]
    dde4:	mov	r0, sl
    dde8:	bl	def0 <convert_code_r>
    ddec:	cmp	r0, #0
    ddf0:	bne	de40 <sf_icode_to_fcode+0xe4>
    ddf4:	mov	r0, r6
    ddf8:	bl	e0c <free@plt>
    ddfc:	ldr	r5, [pc, #88]	; de5c <sf_icode_to_fcode+0x100>
    de00:	ldr	r5, [pc, r5]
    de04:	add	r0, r5, #1
    de08:	str	r0, [r9]
    de0c:	mov	r0, sl
    de10:	bl	de64 <count_stmts>
    de14:	lsl	r4, r0, #3
    de18:	mov	r7, r0
    de1c:	str	r0, [r8]
    de20:	mov	r0, r4
    de24:	bl	e84 <malloc@plt>
    de28:	mov	r6, r0
    de2c:	cmp	r0, #0
    de30:	bne	ddb0 <sf_icode_to_fcode+0x54>
    de34:	ldr	r0, [pc, #36]	; de60 <sf_icode_to_fcode+0x104>
    de38:	add	r0, pc, r0
    de3c:	bl	1f30 <sf_bpf_error>
    de40:	mov	r0, r6
    de44:	sub	sp, fp, #28
    de48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de4c:	.word	0x000227e4
    de50:	.word	0x000227d8
    de54:	.word	0x00022798
    de58:	.word	0x0002278c
    de5c:	.word	0x00022758
    de60:	.word	0x00005f68

0000de64 <count_stmts>:
    de64:	push	{r4, r5, fp, lr}
    de68:	add	fp, sp, #8
    de6c:	mov	r4, r0
    de70:	mov	r0, #0
    de74:	cmp	r4, #0
    de78:	beq	dee8 <count_stmts+0x84>
    de7c:	ldr	r2, [r4, #24]
    de80:	ldr	r1, [pc, #100]	; deec <count_stmts+0x88>
    de84:	ldr	r1, [pc, r1]
    de88:	cmp	r2, r1
    de8c:	popeq	{r4, r5, fp, pc}
    de90:	str	r1, [r4, #24]
    de94:	ldr	r0, [r4, #60]	; 0x3c
    de98:	bl	de64 <count_stmts>
    de9c:	mov	r5, r0
    dea0:	ldr	r0, [r4, #84]	; 0x54
    dea4:	bl	de64 <count_stmts>
    dea8:	ldr	r2, [r4, #4]
    deac:	mov	r1, #0
    deb0:	cmp	r2, #0
    deb4:	beq	decc <count_stmts+0x68>
    deb8:	ldr	r3, [r2]
    debc:	ldr	r2, [r2, #16]
    dec0:	cmn	r3, #1
    dec4:	addne	r1, r1, #1
    dec8:	b	deb0 <count_stmts+0x4c>
    decc:	add	r0, r5, r0
    ded0:	ldr	r2, [r4, #32]
    ded4:	add	r0, r0, r1
    ded8:	ldr	r1, [r4, #28]
    dedc:	add	r0, r0, r1
    dee0:	add	r0, r0, r2
    dee4:	add	r0, r0, #1
    dee8:	pop	{r4, r5, fp, pc}
    deec:	.word	0x000226d4

0000def0 <convert_code_r>:
    def0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    def4:	add	fp, sp, #28
    def8:	sub	sp, sp, #20
    defc:	cmp	r0, #0
    df00:	beq	df1c <convert_code_r+0x2c>
    df04:	mov	r4, r0
    df08:	ldr	r1, [r0, #24]
    df0c:	ldr	r0, [pc, #836]	; e258 <convert_code_r+0x368>
    df10:	ldr	r0, [pc, r0]
    df14:	cmp	r1, r0
    df18:	bne	df2c <convert_code_r+0x3c>
    df1c:	mov	r5, #1
    df20:	mov	r0, r5
    df24:	sub	sp, fp, #28
    df28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df2c:	str	r0, [r4, #24]
    df30:	ldr	r0, [r4, #84]	; 0x54
    df34:	bl	def0 <convert_code_r>
    df38:	mov	r5, #0
    df3c:	cmp	r0, #0
    df40:	beq	df20 <convert_code_r+0x30>
    df44:	ldr	r0, [r4, #60]	; 0x3c
    df48:	bl	def0 <convert_code_r>
    df4c:	cmp	r0, #0
    df50:	beq	df20 <convert_code_r+0x30>
    df54:	ldr	r7, [r4, #4]
    df58:	mov	r0, #0
    df5c:	mov	r9, #0
    df60:	str	r4, [sp, #4]
    df64:	cmp	r7, #0
    df68:	beq	df8c <convert_code_r+0x9c>
    df6c:	mov	r9, #0
    df70:	mov	r1, r7
    df74:	ldr	r2, [r1]
    df78:	ldr	r1, [r1, #16]
    df7c:	cmn	r2, #1
    df80:	addne	r9, r9, #1
    df84:	cmp	r1, #0
    df88:	bne	df74 <convert_code_r+0x84>
    df8c:	ldr	r3, [sp, #4]
    df90:	cmp	r9, #0
    df94:	ldr	r1, [r3, #28]
    df98:	ldr	r2, [r3, #32]
    df9c:	add	r1, r9, r1
    dfa0:	add	r1, r1, r2
    dfa4:	ldr	r2, [pc, #688]	; e25c <convert_code_r+0x36c>
    dfa8:	ldr	r2, [pc, r2]
    dfac:	sub	r1, r2, r1, lsl #3
    dfb0:	sub	sl, r1, #8
    dfb4:	ldr	r1, [pc, #676]	; e260 <convert_code_r+0x370>
    dfb8:	add	r1, pc, r1
    dfbc:	str	sl, [r1]
    dfc0:	ldr	r1, [pc, #668]	; e264 <convert_code_r+0x374>
    dfc4:	ldr	r1, [pc, r1]
    dfc8:	sub	r1, sl, r1
    dfcc:	asr	r1, r1, #3
    dfd0:	str	r1, [r3, #40]	; 0x28
    dfd4:	beq	e018 <convert_code_r+0x128>
    dfd8:	mov	r0, r9
    dfdc:	mov	r1, #4
    dfe0:	bl	dac <calloc@plt>
    dfe4:	cmp	r0, #0
    dfe8:	beq	e24c <convert_code_r+0x35c>
    dfec:	cmp	r7, #0
    dff0:	beq	e018 <convert_code_r+0x128>
    dff4:	mov	r1, #0
    dff8:	mov	r2, r7
    dffc:	str	r2, [r0, r1, lsl #2]
    e000:	add	r1, r1, #1
    e004:	cmp	r1, r9
    e008:	bcs	e018 <convert_code_r+0x128>
    e00c:	ldr	r2, [r2, #16]
    e010:	cmp	r2, #0
    e014:	bne	dffc <convert_code_r+0x10c>
    e018:	cmp	r7, #0
    e01c:	beq	e134 <convert_code_r+0x244>
    e020:	sub	r1, r9, #1
    e024:	sub	r3, r9, #2
    e028:	mov	r2, #0
    e02c:	str	r0, [sp, #8]
    e030:	str	r1, [sp, #16]
    e034:	str	r3, [sp, #12]
    e038:	ldr	r1, [r7]
    e03c:	cmn	r1, #1
    e040:	beq	e068 <convert_code_r+0x178>
    e044:	strh	r1, [sl]
    e048:	cmp	r2, r3
    e04c:	ldr	r1, [r7, #12]
    e050:	str	r1, [sl, #4]
    e054:	ldrne	r1, [r7]
    e058:	cmpne	r1, #5
    e05c:	bne	e078 <convert_code_r+0x188>
    e060:	add	r2, r2, #1
    e064:	add	sl, sl, #8
    e068:	ldr	r7, [r7, #16]
    e06c:	cmp	r7, #0
    e070:	bne	e038 <convert_code_r+0x148>
    e074:	b	e134 <convert_code_r+0x244>
    e078:	and	r1, r1, #7
    e07c:	cmp	r1, #5
    e080:	bne	e060 <convert_code_r+0x170>
    e084:	ldr	ip, [r7, #4]
    e088:	cmp	ip, #0
    e08c:	ldrne	r1, [r7, #8]
    e090:	cmpne	r1, #0
    e094:	beq	e1a8 <convert_code_r+0x2b8>
    e098:	cmp	r9, #1
    e09c:	blt	e120 <convert_code_r+0x230>
    e0a0:	ldr	r5, [sp, #16]
    e0a4:	eor	r1, r2, #255	; 0xff
    e0a8:	mov	r8, #0
    e0ac:	mov	r4, r0
    e0b0:	mov	r6, #0
    e0b4:	ldr	lr, [r4]
    e0b8:	cmp	lr, ip
    e0bc:	bne	e0d4 <convert_code_r+0x1e4>
    e0c0:	cmp	r6, #0
    e0c4:	bne	e238 <convert_code_r+0x348>
    e0c8:	strb	r1, [sl, #2]
    e0cc:	mov	r6, #1
    e0d0:	ldr	lr, [r4]
    e0d4:	ldr	r3, [r7, #8]
    e0d8:	cmp	lr, r3
    e0dc:	bne	e0f0 <convert_code_r+0x200>
    e0e0:	cmp	r8, #0
    e0e4:	bne	e238 <convert_code_r+0x348>
    e0e8:	mov	r8, #1
    e0ec:	strb	r1, [sl, #3]
    e0f0:	cmp	r5, #0
    e0f4:	beq	e10c <convert_code_r+0x21c>
    e0f8:	ldr	ip, [r7, #4]
    e0fc:	add	r1, r1, #1
    e100:	add	r4, r4, #4
    e104:	sub	r5, r5, #1
    e108:	b	e0b4 <convert_code_r+0x1c4>
    e10c:	ldr	r3, [sp, #12]
    e110:	ldr	r0, [sp, #8]
    e114:	cmp	r6, #0
    e118:	cmpne	r8, #0
    e11c:	bne	e060 <convert_code_r+0x170>
    e120:	ldr	r0, [pc, #340]	; e27c <convert_code_r+0x38c>
    e124:	ldr	r1, [pc, #340]	; e280 <convert_code_r+0x390>
    e128:	add	r0, pc, r0
    e12c:	add	r1, pc, r1
    e130:	bl	1f30 <sf_bpf_error>
    e134:	cmp	r0, #0
    e138:	beq	e140 <convert_code_r+0x250>
    e13c:	bl	e0c <free@plt>
    e140:	ldr	r3, [sp, #4]
    e144:	ldr	r0, [r3, #8]
    e148:	strh	r0, [sl]
    e14c:	ldr	r0, [r3, #20]
    e150:	str	r0, [sl, #4]
    e154:	ldr	r0, [r3, #60]	; 0x3c
    e158:	cmp	r0, #0
    e15c:	beq	df1c <convert_code_r+0x2c>
    e160:	ldr	r1, [r3, #40]	; 0x28
    e164:	ldr	r0, [r0, #40]	; 0x28
    e168:	add	r1, r1, r9
    e16c:	mvn	r1, r1
    e170:	add	r0, r0, r1
    e174:	cmp	r0, #256	; 0x100
    e178:	bcc	e1bc <convert_code_r+0x2cc>
    e17c:	ldr	r1, [r3, #28]
    e180:	cmp	r1, #0
    e184:	beq	e218 <convert_code_r+0x328>
    e188:	mov	r1, #5
    e18c:	sub	r0, r0, #1
    e190:	strh	r1, [sl, #8]
    e194:	mov	r1, #0
    e198:	strb	r1, [sl, #2]
    e19c:	str	r0, [sl, #12]
    e1a0:	mov	r0, #1
    e1a4:	b	e1c4 <convert_code_r+0x2d4>
    e1a8:	ldr	r0, [pc, #192]	; e270 <convert_code_r+0x380>
    e1ac:	ldr	r1, [pc, #192]	; e274 <convert_code_r+0x384>
    e1b0:	add	r0, pc, r0
    e1b4:	add	r1, pc, r1
    e1b8:	bl	1f30 <sf_bpf_error>
    e1bc:	strb	r0, [sl, #2]
    e1c0:	mov	r0, #0
    e1c4:	ldr	r2, [r3, #84]	; 0x54
    e1c8:	ldr	r1, [r3, #40]	; 0x28
    e1cc:	ldr	r2, [r2, #40]	; 0x28
    e1d0:	add	r1, r1, r9
    e1d4:	mvn	r1, r1
    e1d8:	add	r1, r2, r1
    e1dc:	cmp	r1, #256	; 0x100
    e1e0:	bcc	e210 <convert_code_r+0x320>
    e1e4:	ldr	r2, [r3, #32]
    e1e8:	cmp	r2, #0
    e1ec:	beq	e228 <convert_code_r+0x338>
    e1f0:	strb	r0, [sl, #3]
    e1f4:	add	r0, r0, #1
    e1f8:	mov	r3, #5
    e1fc:	lsl	r2, r0, #3
    e200:	sub	r0, r1, r0
    e204:	strh	r3, [sl, r2]!
    e208:	str	r0, [sl, #4]
    e20c:	b	df1c <convert_code_r+0x2c>
    e210:	strb	r1, [sl, #3]
    e214:	b	df1c <convert_code_r+0x2c>
    e218:	mov	r0, #1
    e21c:	mov	r5, #0
    e220:	str	r0, [r3, #28]
    e224:	b	df20 <convert_code_r+0x30>
    e228:	mov	r0, #1
    e22c:	mov	r5, #0
    e230:	str	r0, [r3, #32]
    e234:	b	df20 <convert_code_r+0x30>
    e238:	ldr	r0, [pc, #40]	; e268 <convert_code_r+0x378>
    e23c:	ldr	r1, [pc, #40]	; e26c <convert_code_r+0x37c>
    e240:	add	r0, pc, r0
    e244:	add	r1, pc, r1
    e248:	bl	1f30 <sf_bpf_error>
    e24c:	ldr	r0, [pc, #36]	; e278 <convert_code_r+0x388>
    e250:	add	r0, pc, r0
    e254:	bl	1f30 <sf_bpf_error>
    e258:	.word	0x00022648
    e25c:	.word	0x000225b8
    e260:	.word	0x000225a8
    e264:	.word	0x00022598
    e268:	.word	0x00005b88
    e26c:	.word	0x00005bc0
    e270:	.word	0x00005c18
    e274:	.word	0x00005c3d
    e278:	.word	0x00005b68
    e27c:	.word	0x00005ca0
    e280:	.word	0x00005ce9

0000e284 <find_levels_r>:
    e284:	push	{r4, sl, fp, lr}
    e288:	add	fp, sp, #8
    e28c:	mov	r4, r0
    e290:	ldr	r1, [r0, #24]
    e294:	ldr	r0, [pc, #100]	; e300 <find_levels_r+0x7c>
    e298:	ldr	r0, [pc, r0]
    e29c:	cmp	r1, r0
    e2a0:	popeq	{r4, sl, fp, pc}
    e2a4:	mov	r1, #0
    e2a8:	str	r1, [r4, #100]	; 0x64
    e2ac:	str	r0, [r4, #24]
    e2b0:	ldr	r0, [r4, #60]	; 0x3c
    e2b4:	cmp	r0, #0
    e2b8:	beq	e2e4 <find_levels_r+0x60>
    e2bc:	bl	e284 <find_levels_r>
    e2c0:	ldr	r0, [r4, #84]	; 0x54
    e2c4:	bl	e284 <find_levels_r>
    e2c8:	ldr	r0, [r4, #60]	; 0x3c
    e2cc:	ldr	r1, [r4, #84]	; 0x54
    e2d0:	ldr	r0, [r0, #36]	; 0x24
    e2d4:	ldr	r1, [r1, #36]	; 0x24
    e2d8:	cmp	r0, r1
    e2dc:	movgt	r1, r0
    e2e0:	add	r1, r1, #1
    e2e4:	str	r1, [r4, #36]	; 0x24
    e2e8:	ldr	r0, [pc, #20]	; e304 <find_levels_r+0x80>
    e2ec:	ldr	r0, [pc, r0]
    e2f0:	ldr	r2, [r0, r1, lsl #2]
    e2f4:	str	r2, [r4, #100]	; 0x64
    e2f8:	str	r4, [r0, r1, lsl #2]
    e2fc:	pop	{r4, sl, fp, pc}
    e300:	.word	0x000222c0
    e304:	.word	0x000226c0

0000e308 <atomuse>:
    e308:	push	{fp, lr}
    e30c:	mov	fp, sp
    e310:	ldr	r2, [r0]
    e314:	mov	lr, r0
    e318:	mvn	r0, #0
    e31c:	cmn	r2, #1
    e320:	popeq	{fp, pc}
    e324:	and	ip, r2, #7
    e328:	add	r3, pc, #8
    e32c:	mov	r0, #16
    e330:	ldr	r1, [r3, ip, lsl #2]
    e334:	add	pc, r3, r1
    e338:	.word	0x00000020
    e33c:	.word	0x00000020
    e340:	.word	0x00000080
    e344:	.word	0x0000004c
    e348:	.word	0x0000003c
    e34c:	.word	0x0000003c
    e350:	.word	0x00000054
    e354:	.word	0x00000070
    e358:	and	r0, r2, #224	; 0xe0
    e35c:	cmp	r0, #64	; 0x40
    e360:	beq	e384 <atomuse+0x7c>
    e364:	cmp	r0, #96	; 0x60
    e368:	ldreq	r0, [lr, #12]
    e36c:	mvnne	r0, #0
    e370:	pop	{fp, pc}
    e374:	tst	r2, #8
    e378:	mov	r0, #18
    e37c:	movweq	r0, #16
    e380:	pop	{fp, pc}
    e384:	mov	r0, #17
    e388:	pop	{fp, pc}
    e38c:	and	r1, r2, #24
    e390:	mvn	r0, #0
    e394:	cmp	r1, #8
    e398:	movweq	r0, #17
    e39c:	cmp	r1, #16
    e3a0:	moveq	r0, r1
    e3a4:	pop	{fp, pc}
    e3a8:	and	r1, r2, #248	; 0xf8
    e3ac:	mov	r0, #16
    e3b0:	cmp	r1, #128	; 0x80
    e3b4:	movweq	r0, #17
    e3b8:	pop	{fp, pc}

0000e3bc <atomdef>:
    e3bc:	ldr	r2, [r0]
    e3c0:	mov	ip, r0
    e3c4:	mvn	r0, #0
    e3c8:	cmn	r2, #1
    e3cc:	bxeq	lr
    e3d0:	and	r3, r2, #7
    e3d4:	cmp	r3, #7
    e3d8:	bhi	e41c <atomdef+0x60>
    e3dc:	add	r1, pc, #8
    e3e0:	mov	r0, #16
    e3e4:	ldr	r3, [r1, r3, lsl #2]
    e3e8:	add	pc, r1, r3
    e3ec:	.word	0x00000034
    e3f0:	.word	0x00000028
    e3f4:	.word	0x00000020
    e3f8:	.word	0x00000020
    e3fc:	.word	0x00000034
    e400:	.word	0x00000030
    e404:	.word	0x00000030
    e408:	.word	0x00000038
    e40c:	ldr	r0, [ip, #12]
    e410:	bx	lr
    e414:	mov	r0, #17
    e418:	bx	lr
    e41c:	mvn	r0, #0
    e420:	bx	lr
    e424:	tst	r2, #248	; 0xf8
    e428:	mov	r0, #16
    e42c:	movweq	r0, #17
    e430:	bx	lr

0000e434 <propedom>:
    e434:	push	{r4, sl, fp, lr}
    e438:	add	fp, sp, #8
    e43c:	ldr	r1, [r0]
    e440:	ldr	r2, [r0, #8]
    e444:	lsr	r3, r1, #5
    e448:	and	lr, r1, #31
    e44c:	mov	r1, #1
    e450:	ldr	ip, [r2, r3, lsl #2]
    e454:	orr	r1, ip, r1, lsl lr
    e458:	str	r1, [r2, r3, lsl #2]
    e45c:	ldr	r1, [r0, #12]
    e460:	cmp	r1, #0
    e464:	beq	e4d0 <propedom+0x9c>
    e468:	ldr	ip, [pc, #100]	; e4d4 <propedom+0xa0>
    e46c:	ldr	ip, [pc, ip]
    e470:	cmp	ip, #1
    e474:	blt	e4d0 <propedom+0x9c>
    e478:	ldr	r2, [r1, #56]	; 0x38
    e47c:	ldr	r3, [r0, #8]
    e480:	mov	r1, ip
    e484:	ldr	lr, [r3], #4
    e488:	ldr	r4, [r2]
    e48c:	sub	r1, r1, #1
    e490:	cmp	r1, #0
    e494:	and	r4, r4, lr
    e498:	str	r4, [r2], #4
    e49c:	bgt	e484 <propedom+0x50>
    e4a0:	cmp	ip, #1
    e4a4:	poplt	{r4, sl, fp, pc}
    e4a8:	ldr	r2, [r0, #8]
    e4ac:	ldr	r0, [r0, #12]
    e4b0:	ldr	r0, [r0, #80]	; 0x50
    e4b4:	ldr	r1, [r2], #4
    e4b8:	ldr	r3, [r0]
    e4bc:	sub	ip, ip, #1
    e4c0:	cmp	ip, #0
    e4c4:	and	r1, r3, r1
    e4c8:	str	r1, [r0], #4
    e4cc:	bgt	e4b4 <propedom+0x80>
    e4d0:	pop	{r4, sl, fp, pc}
    e4d4:	.word	0x00022114

0000e4d8 <find_inedges>:
    e4d8:	push	{fp, lr}
    e4dc:	mov	fp, sp
    e4e0:	ldr	lr, [pc, #140]	; e574 <find_inedges+0x9c>
    e4e4:	ldr	lr, [pc, lr]
    e4e8:	cmp	lr, #1
    e4ec:	blt	e514 <find_inedges+0x3c>
    e4f0:	ldr	r3, [pc, #128]	; e578 <find_inedges+0xa0>
    e4f4:	mov	ip, #0
    e4f8:	mov	r2, #0
    e4fc:	ldr	r3, [pc, r3]
    e500:	ldr	r1, [r3, r2, lsl #2]
    e504:	add	r2, r2, #1
    e508:	cmp	r2, lr
    e50c:	str	ip, [r1, #112]	; 0x70
    e510:	blt	e500 <find_inedges+0x28>
    e514:	ldr	r0, [r0, #36]	; 0x24
    e518:	cmp	r0, #1
    e51c:	poplt	{fp, pc}
    e520:	ldr	ip, [pc, #84]	; e57c <find_inedges+0xa4>
    e524:	ldr	ip, [pc, ip]
    e528:	ldr	r2, [ip, r0, lsl #2]
    e52c:	cmp	r2, #0
    e530:	beq	e564 <find_inedges+0x8c>
    e534:	ldr	r3, [r2, #60]	; 0x3c
    e538:	ldr	r1, [r3, #112]	; 0x70
    e53c:	str	r1, [r2, #68]	; 0x44
    e540:	add	r1, r2, #48	; 0x30
    e544:	str	r1, [r3, #112]	; 0x70
    e548:	ldr	r1, [r2, #84]	; 0x54
    e54c:	ldr	r3, [r1, #112]	; 0x70
    e550:	str	r3, [r2, #92]	; 0x5c
    e554:	add	r3, r2, #72	; 0x48
    e558:	str	r3, [r1, #112]	; 0x70
    e55c:	ldr	r2, [r2, #100]	; 0x64
    e560:	b	e52c <find_inedges+0x54>
    e564:	sub	r0, r0, #1
    e568:	cmp	r0, #0
    e56c:	bgt	e528 <find_inedges+0x50>
    e570:	pop	{fp, pc}
    e574:	.word	0x00022084
    e578:	.word	0x000224b4
    e57c:	.word	0x00022488

0000e580 <opt_j>:
    e580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e584:	add	fp, sp, #28
    e588:	sub	sp, sp, #24
    e58c:	ldr	r1, [r0, #12]
    e590:	str	r0, [sp, #8]
    e594:	ldr	r5, [r1, #60]	; 0x3c
    e598:	cmp	r5, #0
    e59c:	beq	e798 <opt_j+0x218>
    e5a0:	ldr	r0, [r1, #84]	; 0x54
    e5a4:	cmp	r5, r0
    e5a8:	beq	e5b4 <opt_j+0x34>
    e5ac:	mov	r5, r1
    e5b0:	b	e614 <opt_j+0x94>
    e5b4:	ldr	r2, [r5, #128]	; 0x80
    e5b8:	cmp	r2, #0
    e5bc:	beq	e5fc <opt_j+0x7c>
    e5c0:	ldr	r0, [sp, #8]
    e5c4:	add	r3, r5, #136	; 0x88
    e5c8:	mov	r7, #0
    e5cc:	mov	ip, #1
    e5d0:	ldr	r0, [r0, #16]
    e5d4:	add	r0, r0, #136	; 0x88
    e5d8:	tst	r2, ip, lsl r7
    e5dc:	beq	e5f0 <opt_j+0x70>
    e5e0:	ldr	r6, [r3, r7, lsl #2]
    e5e4:	ldr	r4, [r0, r7, lsl #2]
    e5e8:	cmp	r4, r6
    e5ec:	bne	e5ac <opt_j+0x2c>
    e5f0:	add	r7, r7, #1
    e5f4:	cmp	r7, #18
    e5f8:	bne	e5d8 <opt_j+0x58>
    e5fc:	ldr	r0, [pc, #412]	; e7a0 <opt_j+0x220>
    e600:	mov	r1, #0
    e604:	add	r0, pc, r0
    e608:	strb	r1, [r0]
    e60c:	ldr	r0, [sp, #8]
    e610:	str	r5, [r0, #12]
    e614:	ldr	r0, [pc, #392]	; e7a4 <opt_j+0x224>
    e618:	ldr	r0, [pc, r0]
    e61c:	cmp	r0, #1
    e620:	str	r0, [sp]
    e624:	blt	e798 <opt_j+0x218>
    e628:	ldr	r0, [sp, #8]
    e62c:	mov	r1, #1
    e630:	ldr	r0, [r0, #8]
    e634:	str	r0, [sp, #4]
    e638:	ldr	r0, [pc, #360]	; e7a8 <opt_j+0x228>
    e63c:	ldr	r0, [pc, r0]
    e640:	str	r0, [sp, #20]
    e644:	add	r0, r5, #84	; 0x54
    e648:	mov	r2, #0
    e64c:	str	r0, [sp, #12]
    e650:	ldr	r0, [sp, #4]
    e654:	str	r2, [sp, #16]
    e658:	ldr	r2, [r0, r2, lsl #2]
    e65c:	cmp	r2, #0
    e660:	beq	e758 <opt_j+0x1d8>
    e664:	ldr	r0, [sp, #16]
    e668:	ldr	lr, [r5, #8]
    e66c:	lsl	r6, r0, #5
    e670:	ldr	r3, [sp, #20]
    e674:	rbit	r0, r2
    e678:	mov	r4, #0
    e67c:	clz	r8, r0
    e680:	orr	r0, r8, r6
    e684:	ldr	r0, [r3, r0, lsl #2]
    e688:	ldr	ip, [r0, #4]
    e68c:	cmn	ip, #1
    e690:	mov	r3, ip
    e694:	movwgt	r4, #1
    e698:	cmp	ip, #0
    e69c:	rsbmi	r3, ip, #0
    e6a0:	cmp	lr, r3
    e6a4:	bne	e74c <opt_j+0x1cc>
    e6a8:	ldr	r0, [r0, #16]
    e6ac:	ldr	r3, [r5, #200]	; 0xc8
    e6b0:	ldr	r7, [r0, #200]	; 0xc8
    e6b4:	cmp	r3, r7
    e6b8:	bne	e74c <opt_j+0x1cc>
    e6bc:	ldr	r0, [r0, #132]	; 0x84
    e6c0:	ldr	r3, [r5, #132]	; 0x84
    e6c4:	cmp	r3, r0
    e6c8:	bne	e6dc <opt_j+0x15c>
    e6cc:	cmp	ip, #0
    e6d0:	ldr	r0, [sp, #12]
    e6d4:	addpl	r0, r5, #60	; 0x3c
    e6d8:	b	e6f4 <opt_j+0x174>
    e6dc:	subs	r0, lr, #21
    e6e0:	eor	r3, r4, #1
    e6e4:	movwne	r0, #1
    e6e8:	orrs	r0, r0, r3
    e6ec:	ldr	r0, [sp, #12]
    e6f0:	bne	e74c <opt_j+0x1cc>
    e6f4:	ldr	r0, [r0]
    e6f8:	cmp	r0, #0
    e6fc:	beq	e74c <opt_j+0x1cc>
    e700:	ldr	r3, [r0, #128]	; 0x80
    e704:	mov	r9, r0
    e708:	cmp	r3, #0
    e70c:	beq	e770 <opt_j+0x1f0>
    e710:	ldr	r0, [sp, #8]
    e714:	add	r4, r9, #136	; 0x88
    e718:	mov	sl, #0
    e71c:	ldr	r0, [r0, #16]
    e720:	add	r0, r0, #136	; 0x88
    e724:	tst	r3, r1, lsl sl
    e728:	beq	e73c <opt_j+0x1bc>
    e72c:	ldr	r7, [r4, sl, lsl #2]
    e730:	ldr	ip, [r0, sl, lsl #2]
    e734:	cmp	ip, r7
    e738:	bne	e74c <opt_j+0x1cc>
    e73c:	add	sl, sl, #1
    e740:	cmp	sl, #18
    e744:	bne	e724 <opt_j+0x1a4>
    e748:	b	e770 <opt_j+0x1f0>
    e74c:	bic	r2, r2, r1, lsl r8
    e750:	cmp	r2, #0
    e754:	bne	e670 <opt_j+0xf0>
    e758:	ldr	r2, [sp, #16]
    e75c:	ldr	r0, [sp]
    e760:	add	r2, r2, #1
    e764:	cmp	r2, r0
    e768:	bne	e650 <opt_j+0xd0>
    e76c:	b	e798 <opt_j+0x218>
    e770:	ldr	r2, [pc, #52]	; e7ac <opt_j+0x22c>
    e774:	mov	r0, #0
    e778:	mov	r5, r9
    e77c:	add	r2, pc, r2
    e780:	strb	r0, [r2]
    e784:	ldr	r0, [sp, #8]
    e788:	str	r9, [r0, #12]
    e78c:	ldr	r0, [r9, #60]	; 0x3c
    e790:	cmp	r0, #0
    e794:	bne	e644 <opt_j+0xc4>
    e798:	sub	sp, fp, #28
    e79c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7a0:	.word	0x00021f60
    e7a4:	.word	0x00021f68
    e7a8:	.word	0x00022378
    e7ac:	.word	0x00021de8

0000e7b0 <F>:
    e7b0:	push	{r4, r5, r6, sl, fp, lr}
    e7b4:	add	fp, sp, #16
    e7b8:	eor	r3, r0, r1, lsl #4
    e7bc:	eor	ip, r3, r2, lsl #8
    e7c0:	movw	r3, #8923	; 0x22db
    e7c4:	movt	r3, #39383	; 0x99d7
    e7c8:	umull	r3, lr, ip, r3
    e7cc:	mov	r3, #213	; 0xd5
    e7d0:	lsr	lr, lr, #7
    e7d4:	mls	ip, lr, r3, ip
    e7d8:	ldr	lr, [pc, #176]	; e890 <F+0xe0>
    e7dc:	add	lr, pc, lr
    e7e0:	ldr	r3, [lr, ip, lsl #2]
    e7e4:	cmp	r3, #0
    e7e8:	beq	e818 <F+0x68>
    e7ec:	ldr	r4, [r3]
    e7f0:	cmp	r4, r0
    e7f4:	bne	e810 <F+0x60>
    e7f8:	ldr	r4, [r3, #4]
    e7fc:	cmp	r4, r1
    e800:	bne	e810 <F+0x60>
    e804:	ldr	r4, [r3, #8]
    e808:	cmp	r4, r2
    e80c:	beq	e888 <F+0xd8>
    e810:	ldr	r3, [r3, #16]
    e814:	b	e7e4 <F+0x34>
    e818:	ldr	r3, [pc, #116]	; e894 <F+0xe4>
    e81c:	tst	r0, #230	; 0xe6
    e820:	ldr	r3, [pc, r3]
    e824:	ldr	r4, [pc, #108]	; e898 <F+0xe8>
    e828:	add	r3, r3, #1
    e82c:	add	r4, pc, r4
    e830:	str	r3, [r4]
    e834:	bne	e858 <F+0xa8>
    e838:	ldr	r4, [pc, #92]	; e89c <F+0xec>
    e83c:	mov	r5, #1
    e840:	ldr	r4, [pc, r4]
    e844:	add	r4, r4, r3, lsl #3
    e848:	str	r1, [r4, #4]
    e84c:	ldr	r4, [pc, #76]	; e8a0 <F+0xf0>
    e850:	ldr	r4, [pc, r4]
    e854:	str	r5, [r4, r3, lsl #3]
    e858:	ldr	r4, [pc, #68]	; e8a4 <F+0xf4>
    e85c:	ldr	r4, [pc, r4]
    e860:	ldr	r6, [pc, #64]	; e8a8 <F+0xf8>
    e864:	add	r5, r4, #20
    e868:	add	r6, pc, r6
    e86c:	str	r5, [r6]
    e870:	stm	r4, {r0, r1, r2, r3}
    e874:	ldr	r0, [lr, ip, lsl #2]
    e878:	str	r0, [r4, #16]
    e87c:	str	r4, [lr, ip, lsl #2]
    e880:	mov	r0, r3
    e884:	pop	{r4, r5, r6, sl, fp, pc}
    e888:	ldr	r3, [r3, #12]
    e88c:	b	e880 <F+0xd0>
    e890:	.word	0x00021db4
    e894:	.word	0x00021d64
    e898:	.word	0x00021d58
    e89c:	.word	0x00022180
    e8a0:	.word	0x00022170
    e8a4:	.word	0x0002215c
    e8a8:	.word	0x00022150

0000e8ac <fold_op>:
    e8ac:	push	{fp, lr}
    e8b0:	mov	fp, sp
    e8b4:	ldr	r3, [r0]
    e8b8:	ubfx	ip, r3, #4, #4
    e8bc:	cmp	ip, #8
    e8c0:	bhi	e974 <fold_op+0xc8>
    e8c4:	ldr	r3, [pc, #184]	; e984 <fold_op+0xd8>
    e8c8:	ldr	r3, [pc, r3]
    e8cc:	add	r1, r3, r1, lsl #3
    e8d0:	add	r2, r3, r2, lsl #3
    e8d4:	ldr	lr, [r2, #4]
    e8d8:	ldr	r1, [r1, #4]
    e8dc:	add	r3, pc, #4
    e8e0:	ldr	r2, [r3, ip, lsl #2]
    e8e4:	add	pc, r3, r2
    e8e8:	.word	0x00000024
    e8ec:	.word	0x00000054
    e8f0:	.word	0x00000034
    e8f4:	.word	0x0000003c
    e8f8:	.word	0x0000002c
    e8fc:	.word	0x0000005c
    e900:	.word	0x00000064
    e904:	.word	0x0000004c
    e908:	.word	0x0000006c
    e90c:	add	r1, lr, r1
    e910:	b	e958 <fold_op+0xac>
    e914:	orr	r1, lr, r1
    e918:	b	e958 <fold_op+0xac>
    e91c:	mul	r1, lr, r1
    e920:	b	e958 <fold_op+0xac>
    e924:	cmp	lr, #0
    e928:	beq	e978 <fold_op+0xcc>
    e92c:	udiv	r1, r1, lr
    e930:	b	e958 <fold_op+0xac>
    e934:	lsr	r1, r1, lr
    e938:	b	e958 <fold_op+0xac>
    e93c:	sub	r1, r1, lr
    e940:	b	e958 <fold_op+0xac>
    e944:	and	r1, lr, r1
    e948:	b	e958 <fold_op+0xac>
    e94c:	lsl	r1, r1, lr
    e950:	b	e958 <fold_op+0xac>
    e954:	rsb	r1, r1, #0
    e958:	mov	r2, #0
    e95c:	str	r2, [r0]
    e960:	str	r1, [r0, #12]
    e964:	ldr	r0, [pc, #28]	; e988 <fold_op+0xdc>
    e968:	add	r0, pc, r0
    e96c:	strb	r2, [r0]
    e970:	pop	{fp, pc}
    e974:	bl	f74 <abort@plt>
    e978:	ldr	r0, [pc, #12]	; e98c <fold_op+0xe0>
    e97c:	add	r0, pc, r0
    e980:	bl	1f30 <sf_bpf_error>
    e984:	.word	0x000220f8
    e988:	.word	0x00021bfc
    e98c:	.word	0x0000542b

0000e990 <deadstmt>:
    e990:	push	{r4, r5, fp, lr}
    e994:	add	fp, sp, #8
    e998:	mov	r4, r1
    e99c:	mov	r5, r0
    e9a0:	bl	e308 <atomuse>
    e9a4:	cmp	r0, #0
    e9a8:	bmi	e9c4 <deadstmt+0x34>
    e9ac:	cmp	r0, #18
    e9b0:	mov	r1, #0
    e9b4:	moveq	r0, #0
    e9b8:	streq	r0, [r4, #68]	; 0x44
    e9bc:	moveq	r0, #16
    e9c0:	str	r1, [r4, r0, lsl #2]
    e9c4:	mov	r0, r5
    e9c8:	bl	e3bc <atomdef>
    e9cc:	cmp	r0, #0
    e9d0:	popmi	{r4, r5, fp, pc}
    e9d4:	ldr	r1, [r4, r0, lsl #2]
    e9d8:	cmp	r1, #0
    e9dc:	beq	e9f8 <deadstmt+0x68>
    e9e0:	ldr	r2, [pc, #24]	; ea00 <deadstmt+0x70>
    e9e4:	mov	r3, #0
    e9e8:	add	r2, pc, r2
    e9ec:	strb	r3, [r2]
    e9f0:	mvn	r2, #0
    e9f4:	str	r2, [r1]
    e9f8:	str	r5, [r4, r0, lsl #2]
    e9fc:	pop	{r4, r5, fp, pc}
    ea00:	.word	0x00021b7c

0000ea04 <make_marks>:
    ea04:	push	{r4, r5, fp, lr}
    ea08:	add	fp, sp, #8
    ea0c:	mov	r4, r0
    ea10:	ldr	r0, [r0, #24]
    ea14:	ldr	r5, [pc, #48]	; ea4c <make_marks+0x48>
    ea18:	ldr	r5, [pc, r5]
    ea1c:	b	ea30 <make_marks+0x2c>
    ea20:	ldr	r0, [r4, #60]	; 0x3c
    ea24:	bl	ea04 <make_marks>
    ea28:	ldr	r4, [r4, #84]	; 0x54
    ea2c:	ldr	r0, [r4, #24]
    ea30:	cmp	r0, r5
    ea34:	strne	r5, [r4, #24]
    ea38:	ldrne	r0, [r4, #8]
    ea3c:	andne	r0, r0, #7
    ea40:	cmpne	r0, #6
    ea44:	bne	ea20 <make_marks+0x1c>
    ea48:	pop	{r4, r5, fp, pc}
    ea4c:	.word	0x00021b40

0000ea50 <count_blocks>:
    ea50:	push	{r4, r5, fp, lr}
    ea54:	add	fp, sp, #8
    ea58:	cmp	r0, #0
    ea5c:	beq	ea78 <count_blocks+0x28>
    ea60:	mov	r4, r0
    ea64:	ldr	r1, [r0, #24]
    ea68:	ldr	r0, [pc, #52]	; eaa4 <count_blocks+0x54>
    ea6c:	ldr	r0, [pc, r0]
    ea70:	cmp	r1, r0
    ea74:	bne	ea80 <count_blocks+0x30>
    ea78:	mov	r0, #0
    ea7c:	pop	{r4, r5, fp, pc}
    ea80:	str	r0, [r4, #24]
    ea84:	ldr	r0, [r4, #60]	; 0x3c
    ea88:	bl	ea50 <count_blocks>
    ea8c:	mov	r5, r0
    ea90:	ldr	r0, [r4, #84]	; 0x54
    ea94:	bl	ea50 <count_blocks>
    ea98:	add	r0, r5, r0
    ea9c:	add	r0, r0, #1
    eaa0:	pop	{r4, r5, fp, pc}
    eaa4:	.word	0x00021aec

0000eaa8 <number_blks_r>:
    eaa8:	push	{r4, r5, r6, sl, fp, lr}
    eaac:	add	fp, sp, #16
    eab0:	cmp	r0, #0
    eab4:	beq	eb10 <number_blks_r+0x68>
    eab8:	ldr	r5, [pc, #84]	; eb14 <number_blks_r+0x6c>
    eabc:	mov	r4, r0
    eac0:	ldr	r5, [pc, r5]
    eac4:	ldr	r6, [pc, #76]	; eb18 <number_blks_r+0x70>
    eac8:	add	r6, pc, r6
    eacc:	ldr	r0, [r4, #24]
    ead0:	cmp	r0, r5
    ead4:	beq	eb10 <number_blks_r+0x68>
    ead8:	str	r5, [r4, #24]
    eadc:	ldr	r0, [pc, #56]	; eb1c <number_blks_r+0x74>
    eae0:	ldr	r0, [pc, r0]
    eae4:	add	r1, r0, #1
    eae8:	str	r1, [r6]
    eaec:	str	r0, [r4]
    eaf0:	ldr	r1, [pc, #40]	; eb20 <number_blks_r+0x78>
    eaf4:	ldr	r1, [pc, r1]
    eaf8:	str	r4, [r1, r0, lsl #2]
    eafc:	ldr	r0, [r4, #60]	; 0x3c
    eb00:	bl	eaa8 <number_blks_r>
    eb04:	ldr	r4, [r4, #84]	; 0x54
    eb08:	cmp	r4, #0
    eb0c:	bne	eacc <number_blks_r+0x24>
    eb10:	pop	{r4, r5, r6, sl, fp, pc}
    eb14:	.word	0x00021a98
    eb18:	.word	0x00021aa0
    eb1c:	.word	0x00021a88
    eb20:	.word	0x00021ebc

0000eb24 <sfbpf_strcasecmp>:
    eb24:	push	{fp, lr}
    eb28:	mov	fp, sp
    eb2c:	ldr	ip, [pc, #56]	; eb6c <sfbpf_strcasecmp+0x48>
    eb30:	add	ip, pc, ip
    eb34:	ldrb	r2, [r1]
    eb38:	ldrb	r3, [r0]
    eb3c:	ldrb	lr, [ip, r2]
    eb40:	ldrb	r2, [ip, r3]
    eb44:	cmp	r2, lr
    eb48:	bne	eb64 <sfbpf_strcasecmp+0x40>
    eb4c:	add	r0, r0, #1
    eb50:	add	r1, r1, #1
    eb54:	cmp	r3, #0
    eb58:	bne	eb34 <sfbpf_strcasecmp+0x10>
    eb5c:	mov	r0, #0
    eb60:	pop	{fp, pc}
    eb64:	sub	r0, r2, lr
    eb68:	pop	{fp, pc}
    eb6c:	.word	0x000052fa

0000eb70 <pcap_next_etherent>:
    eb70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    eb74:	add	fp, sp, #24
    eb78:	ldr	r8, [pc, #520]	; ed88 <pcap_next_etherent+0x218>
    eb7c:	mov	r5, r0
    eb80:	mov	r1, #0
    eb84:	mov	r2, #128	; 0x80
    eb88:	add	r8, pc, r8
    eb8c:	mov	r0, r8
    eb90:	bl	ef0 <memset@plt>
    eb94:	mov	r0, r5
    eb98:	bl	f80 <getc@plt>
    eb9c:	mov	r7, r0
    eba0:	bl	e9c <__ctype_b_loc@plt>
    eba4:	mov	r9, r0
    eba8:	ldr	r0, [r0]
    ebac:	cmp	r7, #10
    ebb0:	add	r0, r0, r7, lsl #1
    ebb4:	ldrh	r1, [r0]
    ebb8:	andsne	r0, r1, #8192	; 0x2000
    ebbc:	bne	eb94 <pcap_next_etherent+0x24>
    ebc0:	mov	r0, #10
    ebc4:	cmp	r7, #10
    ebc8:	beq	ed14 <pcap_next_etherent+0x1a4>
    ebcc:	tst	r1, #4096	; 0x1000
    ebd0:	bne	ebf0 <pcap_next_etherent+0x80>
    ebd4:	mov	r0, r5
    ebd8:	bl	f80 <getc@plt>
    ebdc:	cmn	r0, #1
    ebe0:	beq	ed14 <pcap_next_etherent+0x1a4>
    ebe4:	cmp	r0, #10
    ebe8:	bne	ebd4 <pcap_next_etherent+0x64>
    ebec:	b	ed14 <pcap_next_etherent+0x1a4>
    ebf0:	mov	r4, #0
    ebf4:	mvn	r0, #47	; 0x2f
    ebf8:	tst	r1, #2048	; 0x800
    ebfc:	bne	ec10 <pcap_next_etherent+0xa0>
    ec00:	uxth	r0, r1
    ec04:	tst	r0, #512	; 0x200
    ec08:	mvn	r0, #86	; 0x56
    ec0c:	mvneq	r0, #54	; 0x36
    ec10:	add	r6, r7, r0
    ec14:	mov	r0, r5
    ec18:	bl	f80 <getc@plt>
    ec1c:	mov	r7, r0
    ec20:	ldr	r0, [r9]
    ec24:	add	r0, r0, r7, lsl #1
    ec28:	ldrh	r1, [r0]
    ec2c:	tst	r1, #4096	; 0x1000
    ec30:	beq	ec64 <pcap_next_etherent+0xf4>
    ec34:	lsl	r0, r6, #4
    ec38:	mvn	r2, #47	; 0x2f
    ec3c:	tst	r1, #2048	; 0x800
    ec40:	bne	ec50 <pcap_next_etherent+0xe0>
    ec44:	tst	r1, #512	; 0x200
    ec48:	mvn	r2, #86	; 0x56
    ec4c:	mvneq	r2, #54	; 0x36
    ec50:	add	r1, r7, r2
    ec54:	orr	r6, r1, r0
    ec58:	mov	r0, r5
    ec5c:	bl	f80 <getc@plt>
    ec60:	mov	r7, r0
    ec64:	cmp	r7, #58	; 0x3a
    ec68:	strb	r6, [r8, -r4]
    ec6c:	bne	ec98 <pcap_next_etherent+0x128>
    ec70:	mov	r0, r5
    ec74:	bl	f80 <getc@plt>
    ec78:	mov	r7, r0
    ec7c:	cmn	r4, #5
    ec80:	beq	ec98 <pcap_next_etherent+0x128>
    ec84:	ldr	r0, [r9]
    ec88:	sub	r4, r4, #1
    ec8c:	add	r0, r0, r7, lsl #1
    ec90:	ldrh	r1, [r0]
    ec94:	b	ebf4 <pcap_next_etherent+0x84>
    ec98:	cmn	r7, #1
    ec9c:	beq	ed1c <pcap_next_etherent+0x1ac>
    eca0:	ldr	r0, [r9]
    eca4:	add	r0, r0, r7, lsl #1
    eca8:	ldrb	r0, [r0, #1]
    ecac:	tst	r0, #32
    ecb0:	bne	ecd0 <pcap_next_etherent+0x160>
    ecb4:	mov	r0, r5
    ecb8:	bl	f80 <getc@plt>
    ecbc:	cmn	r0, #1
    ecc0:	beq	ed14 <pcap_next_etherent+0x1a4>
    ecc4:	cmp	r0, #10
    ecc8:	bne	ecb4 <pcap_next_etherent+0x144>
    eccc:	b	ed14 <pcap_next_etherent+0x1a4>
    ecd0:	mov	r0, r5
    ecd4:	bl	f80 <getc@plt>
    ecd8:	cmp	r0, #10
    ecdc:	ldrne	r1, [r9]
    ece0:	addne	r1, r1, r0, lsl #1
    ece4:	ldrhne	r1, [r1]
    ece8:	andsne	r1, r1, #8192	; 0x2000
    ecec:	bne	ecd0 <pcap_next_etherent+0x160>
    ecf0:	cmp	r0, #10
    ecf4:	beq	ed14 <pcap_next_etherent+0x1a4>
    ecf8:	cmp	r0, #35	; 0x23
    ecfc:	bne	ed28 <pcap_next_etherent+0x1b8>
    ed00:	mov	r0, r5
    ed04:	bl	f80 <getc@plt>
    ed08:	cmn	r0, #1
    ed0c:	cmpne	r0, #10
    ed10:	bne	ed00 <pcap_next_etherent+0x190>
    ed14:	cmn	r0, #1
    ed18:	bne	eb94 <pcap_next_etherent+0x24>
    ed1c:	mov	r8, #0
    ed20:	mov	r0, r8
    ed24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ed28:	mvn	r4, #5
    ed2c:	strb	r0, [r8, -r4]
    ed30:	mov	r0, r5
    ed34:	bl	f80 <getc@plt>
    ed38:	ldr	r1, [r9]
    ed3c:	add	r1, r1, r0, lsl #1
    ed40:	ldrb	r2, [r1, #1]
    ed44:	sub	r1, r4, #1
    ed48:	tst	r2, #32
    ed4c:	bne	ed64 <pcap_next_etherent+0x1f4>
    ed50:	cmn	r0, #1
    ed54:	beq	ed64 <pcap_next_etherent+0x1f4>
    ed58:	cmn	r4, #126	; 0x7e
    ed5c:	mov	r4, r1
    ed60:	bne	ed2c <pcap_next_etherent+0x1bc>
    ed64:	mov	r2, #0
    ed68:	strb	r2, [r8, -r1]
    ed6c:	cmp	r0, #10
    ed70:	beq	ed20 <pcap_next_etherent+0x1b0>
    ed74:	mov	r0, r5
    ed78:	bl	f80 <getc@plt>
    ed7c:	cmn	r0, #1
    ed80:	bne	ed6c <pcap_next_etherent+0x1fc>
    ed84:	b	ed20 <pcap_next_etherent+0x1b0>
    ed88:	.word	0x00021d60

0000ed8c <sfbpf_parse>:
    ed8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed90:	add	fp, sp, #28
    ed94:	sub	sp, sp, #564	; 0x234
    ed98:	sub	sp, sp, #3072	; 0xc00
    ed9c:	ldr	r0, [pc, #4084]	; fd98 <sfbpf_parse+0x100c>
    eda0:	mov	sl, #0
    eda4:	sub	r4, fp, #432	; 0x1b0
    eda8:	mvn	r1, #1
    edac:	add	r9, sp, #32
    edb0:	mov	ip, #200	; 0xc8
    edb4:	mov	r6, #15
    edb8:	mov	r8, r4
    edbc:	add	r0, pc, r0
    edc0:	str	sl, [r0]
    edc4:	ldr	r0, [pc, #4092]	; fdc8 <sfbpf_parse+0x103c>
    edc8:	str	r9, [sp, #20]
    edcc:	add	r0, pc, r0
    edd0:	str	r1, [r0]
    edd4:	add	r0, r4, ip, lsl #1
    edd8:	strh	sl, [r8]
    eddc:	sub	r0, r0, #2
    ede0:	cmp	r0, r8
    ede4:	bhi	ee9c <sfbpf_parse+0x110>
    ede8:	movw	r0, #9999	; 0x270f
    edec:	cmp	ip, r0
    edf0:	bhi	100f8 <sfbpf_parse+0x136c>
    edf4:	lsl	r0, ip, #1
    edf8:	movw	r1, #10000	; 0x2710
    edfc:	movw	r7, #10000	; 0x2710
    ee00:	cmp	r0, r1
    ee04:	lslcc	r7, ip, #1
    ee08:	add	r0, r7, r7, lsl #3
    ee0c:	add	r0, r6, r0, lsl #1
    ee10:	bl	e84 <malloc@plt>
    ee14:	cmp	r0, #0
    ee18:	beq	100f8 <sfbpf_parse+0x136c>
    ee1c:	mov	r5, r0
    ee20:	sub	r0, r8, r4
    ee24:	mov	r1, #1
    ee28:	mov	r8, r4
    ee2c:	add	r4, r1, r0, asr #1
    ee30:	asr	r9, r0, #1
    ee34:	mov	r0, r5
    ee38:	mov	r1, r8
    ee3c:	lsl	r2, r4, #1
    ee40:	bl	e30 <memcpy@plt>
    ee44:	add	r0, r6, r7, lsl #1
    ee48:	ldr	r1, [sp, #20]
    ee4c:	lsl	r2, r4, #4
    ee50:	bic	r0, r0, #15
    ee54:	add	r6, r5, r0
    ee58:	mov	r0, r6
    ee5c:	bl	e30 <memcpy@plt>
    ee60:	sub	r0, fp, #432	; 0x1b0
    ee64:	cmp	r8, r0
    ee68:	beq	ee74 <sfbpf_parse+0xe8>
    ee6c:	mov	r0, r8
    ee70:	bl	e0c <free@plt>
    ee74:	add	r0, r5, r7, lsl #1
    ee78:	add	r8, r5, r9, lsl #1
    ee7c:	sub	r0, r0, #2
    ee80:	cmp	r0, r8
    ee84:	bls	100dc <sfbpf_parse+0x1350>
    ee88:	add	r9, r6, r9, lsl #4
    ee8c:	str	r6, [sp, #20]
    ee90:	mov	ip, r7
    ee94:	mov	r4, r5
    ee98:	mov	r6, #15
    ee9c:	cmp	sl, #3
    eea0:	beq	100c8 <sfbpf_parse+0x133c>
    eea4:	ldr	r0, [pc, #4048]	; fe7c <sfbpf_parse+0x10f0>
    eea8:	str	r4, [sp, #24]
    eeac:	add	r0, pc, r0
    eeb0:	add	r0, r0, sl, lsl #1
    eeb4:	ldrsh	r5, [r0]
    eeb8:	cmn	r5, #198	; 0xc6
    eebc:	beq	ef88 <sfbpf_parse+0x1fc>
    eec0:	ldr	r0, [pc, #4084]	; febc <sfbpf_parse+0x1130>
    eec4:	ldr	r0, [pc, r0]
    eec8:	cmn	r0, #2
    eecc:	bne	eee8 <sfbpf_parse+0x15c>
    eed0:	mov	r7, ip
    eed4:	bl	102ac <sfbpf_lex>
    eed8:	ldr	r1, [pc, #4076]	; fecc <sfbpf_parse+0x1140>
    eedc:	mov	ip, r7
    eee0:	add	r1, pc, r1
    eee4:	str	r0, [r1]
    eee8:	cmp	r0, #0
    eeec:	ble	ef10 <sfbpf_parse+0x184>
    eef0:	lsr	r2, r0, #1
    eef4:	mov	r1, #2
    eef8:	cmp	r2, #182	; 0xb6
    eefc:	bhi	ef20 <sfbpf_parse+0x194>
    ef00:	ldr	r1, [pc, #4080]	; fef8 <sfbpf_parse+0x116c>
    ef04:	add	r1, pc, r1
    ef08:	ldrb	r1, [r1, r0]
    ef0c:	b	ef20 <sfbpf_parse+0x194>
    ef10:	ldr	r0, [pc, #4068]	; fefc <sfbpf_parse+0x1170>
    ef14:	mov	r1, #0
    ef18:	add	r0, pc, r0
    ef1c:	str	r1, [r0]
    ef20:	add	r0, r1, r5
    ef24:	movw	r2, #669	; 0x29d
    ef28:	cmp	r0, r2
    ef2c:	bhi	ef88 <sfbpf_parse+0x1fc>
    ef30:	ldr	r2, [pc, #4076]	; ff24 <sfbpf_parse+0x1198>
    ef34:	add	r2, pc, r2
    ef38:	add	r2, r2, r0, lsl #1
    ef3c:	ldrsh	r2, [r2]
    ef40:	cmp	r1, r2
    ef44:	bne	ef88 <sfbpf_parse+0x1fc>
    ef48:	ldr	r1, [pc, #4056]	; ff28 <sfbpf_parse+0x119c>
    ef4c:	add	r1, pc, r1
    ef50:	add	r0, r1, r0, lsl #1
    ef54:	ldrsh	sl, [r0]
    ef58:	cmp	sl, #0
    ef5c:	ble	f31c <sfbpf_parse+0x590>
    ef60:	ldr	r0, [pc, #4036]	; ff2c <sfbpf_parse+0x11a0>
    ef64:	add	r9, r9, #16
    ef68:	mvn	r1, #1
    ef6c:	add	r0, pc, r0
    ef70:	vld1.32	{d16-d17}, [r0]
    ef74:	ldr	r0, [pc, #4020]	; ff30 <sfbpf_parse+0x11a4>
    ef78:	add	r0, pc, r0
    ef7c:	str	r1, [r0]
    ef80:	vst1.32	{d16-d17}, [r9]
    ef84:	b	10028 <sfbpf_parse+0x129c>
    ef88:	ldr	r0, [pc, #4004]	; ff34 <sfbpf_parse+0x11a8>
    ef8c:	add	r0, pc, r0
    ef90:	ldrb	r7, [r0, sl]
    ef94:	cmp	r7, #0
    ef98:	beq	1010c <sfbpf_parse+0x1380>
    ef9c:	ldr	r0, [pc, #3988]	; ff38 <sfbpf_parse+0x11ac>
    efa0:	mov	r1, r9
    efa4:	add	r0, pc, r0
    efa8:	ldrb	lr, [r0, r7]
    efac:	rsb	r0, lr, #1
    efb0:	ldr	r6, [r1, r0, lsl #4]!
    efb4:	sub	r0, r7, #2
    efb8:	cmp	r0, #200	; 0xc8
    efbc:	ldmib	r1, {r2, r3}
    efc0:	ldr	r1, [r1, #12]
    efc4:	lsr	r5, r6, #24
    efc8:	lsr	r4, r6, #16
    efcc:	lsr	sl, r6, #8
    efd0:	str	r1, [sp, #28]
    efd4:	bhi	ff84 <sfbpf_parse+0x11f8>
    efd8:	add	r1, pc, #4
    efdc:	ldr	r0, [r1, r0, lsl #2]
    efe0:	add	pc, r1, r0
    efe4:	.word	0x00000db8
    efe8:	.word	0x00000fa0
    efec:	.word	0x00000b70
    eff0:	.word	0x00000fa0
    eff4:	.word	0x00000364
    eff8:	.word	0x00000364
    effc:	.word	0x00000340
    f000:	.word	0x00000340
    f004:	.word	0x00000324
    f008:	.word	0x00000324
    f00c:	.word	0x00000fa0
    f010:	.word	0x000003a8
    f014:	.word	0x00000324
    f018:	.word	0x00000670
    f01c:	.word	0x000004a4
    f020:	.word	0x000005ac
    f024:	.word	0x000004c8
    f028:	.word	0x0000045c
    f02c:	.word	0x00000f58
    f030:	.word	0x00000f1c
    f034:	.word	0x0000104c
    f038:	.word	0x000003d0
    f03c:	.word	0x00000324
    f040:	.word	0x00000324
    f044:	.word	0x00000fa0
    f048:	.word	0x00000364
    f04c:	.word	0x00000340
    f050:	.word	0x000003a8
    f054:	.word	0x00000fa0
    f058:	.word	0x00000fa0
    f05c:	.word	0x000003d0
    f060:	.word	0x0000052c
    f064:	.word	0x00000560
    f068:	.word	0x0000040c
    f06c:	.word	0x00000570
    f070:	.word	0x000005d8
    f074:	.word	0x0000040c
    f078:	.word	0x000003e8
    f07c:	.word	0x000009f8
    f080:	.word	0x0000060c
    f084:	.word	0x0000069c
    f088:	.word	0x00000a00
    f08c:	.word	0x00000474
    f090:	.word	0x00000790
    f094:	.word	0x0000047c
    f098:	.word	0x000003fc
    f09c:	.word	0x00000b44
    f0a0:	.word	0x000003fc
    f0a4:	.word	0x00000fa0
    f0a8:	.word	0x000006fc
    f0ac:	.word	0x0000039c
    f0b0:	.word	0x0000037c
    f0b4:	.word	0x00000358
    f0b8:	.word	0x00000358
    f0bc:	.word	0x00000388
    f0c0:	.word	0x00000388
    f0c4:	.word	0x000008f0
    f0c8:	.word	0x00000b84
    f0cc:	.word	0x00000420
    f0d0:	.word	0x00000a38
    f0d4:	.word	0x0000039c
    f0d8:	.word	0x0000037c
    f0dc:	.word	0x00000358
    f0e0:	.word	0x00000420
    f0e4:	.word	0x00000388
    f0e8:	.word	0x0000039c
    f0ec:	.word	0x0000037c
    f0f0:	.word	0x00000358
    f0f4:	.word	0x00000d14
    f0f8:	.word	0x00000f00
    f0fc:	.word	0x000004bc
    f100:	.word	0x00000898
    f104:	.word	0x00000588
    f108:	.word	0x00000b90
    f10c:	.word	0x00000b9c
    f110:	.word	0x000007dc
    f114:	.word	0x00000c68
    f118:	.word	0x00000ba8
    f11c:	.word	0x000006b8
    f120:	.word	0x00000704
    f124:	.word	0x00000bb4
    f128:	.word	0x00000cec
    f12c:	.word	0x00000498
    f130:	.word	0x0000053c
    f134:	.word	0x00000710
    f138:	.word	0x0000071c
    f13c:	.word	0x00000554
    f140:	.word	0x000005a0
    f144:	.word	0x00000d20
    f148:	.word	0x00000d60
    f14c:	.word	0x00000658
    f150:	.word	0x00000dd8
    f154:	.word	0x00000e40
    f158:	.word	0x00000eec
    f15c:	.word	0x00000a44
    f160:	.word	0x00000edc
    f164:	.word	0x00000594
    f168:	.word	0x00000e28
    f16c:	.word	0x00000a78
    f170:	.word	0x00000600
    f174:	.word	0x00000a50
    f178:	.word	0x00000548
    f17c:	.word	0x00000e4c
    f180:	.word	0x00000e58
    f184:	.word	0x00000628
    f188:	.word	0x00000d2c
    f18c:	.word	0x00000ae8
    f190:	.word	0x00000b04
    f194:	.word	0x00000e90
    f198:	.word	0x00000e9c
    f19c:	.word	0x000007e8
    f1a0:	.word	0x000008a4
    f1a4:	.word	0x000006c4
    f1a8:	.word	0x00000580
    f1ac:	.word	0x00000d48
    f1b0:	.word	0x000005e8
    f1b4:	.word	0x00000394
    f1b8:	.word	0x00000394
    f1bc:	.word	0x00000cf8
    f1c0:	.word	0x00000cb8
    f1c4:	.word	0x000006e0
    f1c8:	.word	0x00000e74
    f1cc:	.word	0x0000073c
    f1d0:	.word	0x00000de8
    f1d4:	.word	0x000007ac
    f1d8:	.word	0x00000664
    f1dc:	.word	0x00000948
    f1e0:	.word	0x000007f0
    f1e4:	.word	0x00000fa0
    f1e8:	.word	0x000008fc
    f1ec:	.word	0x00000fa0
    f1f0:	.word	0x00000968
    f1f4:	.word	0x000009b8
    f1f8:	.word	0x00000fa0
    f1fc:	.word	0x0000080c
    f200:	.word	0x00000394
    f204:	.word	0x00001120
    f208:	.word	0x00001124
    f20c:	.word	0x0000044c
    f210:	.word	0x00000454
    f214:	.word	0x00000404
    f218:	.word	0x0000044c
    f21c:	.word	0x00000454
    f220:	.word	0x00000404
    f224:	.word	0x00000758
    f228:	.word	0x00000fa0
    f22c:	.word	0x00000d6c
    f230:	.word	0x00000e04
    f234:	.word	0x00000644
    f238:	.word	0x00000a5c
    f23c:	.word	0x00000934
    f240:	.word	0x00000774
    f244:	.word	0x00000d80
    f248:	.word	0x00000c54
    f24c:	.word	0x000008c0
    f250:	.word	0x00000728
    f254:	.word	0x00000c8c
    f258:	.word	0x0000043c
    f25c:	.word	0x00000c74
    f260:	.word	0x00000cd4
    f264:	.word	0x00000788
    f268:	.word	0x000007bc
    f26c:	.word	0x000007c4
    f270:	.word	0x000007cc
    f274:	.word	0x00000fa0
    f278:	.word	0x0000043c
    f27c:	.word	0x000008d4
    f280:	.word	0x00000bc0
    f284:	.word	0x00000434
    f288:	.word	0x00000418
    f28c:	.word	0x000007d4
    f290:	.word	0x0000042c
    f294:	.word	0x00000ab8
    f298:	.word	0x00000cdc
    f29c:	.word	0x00000ca8
    f2a0:	.word	0x00000bc8
    f2a4:	.word	0x00000bd0
    f2a8:	.word	0x00000cb0
    f2ac:	.word	0x00000bd8
    f2b0:	.word	0x00000b28
    f2b4:	.word	0x00000fa0
    f2b8:	.word	0x000008dc
    f2bc:	.word	0x00000ac0
    f2c0:	.word	0x00000444
    f2c4:	.word	0x00000a84
    f2c8:	.word	0x00000fa0
    f2cc:	.word	0x00000340
    f2d0:	.word	0x00000434
    f2d4:	.word	0x00000418
    f2d8:	.word	0x0000042c
    f2dc:	.word	0x00000a70
    f2e0:	.word	0x00000be0
    f2e4:	.word	0x00000ab0
    f2e8:	.word	0x00000be8
    f2ec:	.word	0x00000fa0
    f2f0:	.word	0x00000b30
    f2f4:	.word	0x00000bf0
    f2f8:	.word	0x00000444
    f2fc:	.word	0x00000c0c
    f300:	.word	0x00000fa0
    f304:	.word	0x00000340
    f308:	ldr	r6, [r9, #-16]
    f30c:	ldr	r2, [r9, #-12]
    f310:	ldr	r3, [r9, #-8]
    f314:	ldr	r0, [r9, #-4]
    f318:	b	ff74 <sfbpf_parse+0x11e8>
    f31c:	rsb	r7, sl, #0
    f320:	b	ef9c <sfbpf_parse+0x210>
    f324:	ldr	r0, [r9, #-20]	; 0xffffffec
    f328:	ldr	r1, [r9, #12]
    f32c:	mov	r4, ip
    f330:	mov	r5, lr
    f334:	bl	3a3c <sf_gen_or>
    f338:	b	f3c4 <sfbpf_parse+0x638>
    f33c:	mov	sl, #0
    f340:	mov	r6, #3
    f344:	b	fcc8 <sfbpf_parse+0xf3c>
    f348:	ldr	r0, [r9, #-20]	; 0xffffffec
    f34c:	ldr	r1, [r9, #12]
    f350:	mov	r4, ip
    f354:	mov	r5, lr
    f358:	bl	3964 <sf_gen_and>
    f35c:	b	f3c4 <sfbpf_parse+0x638>
    f360:	mov	sl, #0
    f364:	mov	r6, #2
    f368:	b	fcc8 <sfbpf_parse+0xf3c>
    f36c:	mov	sl, #0
    f370:	mov	r6, #4
    f374:	b	fcc8 <sfbpf_parse+0xf3c>
    f378:	ldr	r6, [r9]
    f37c:	b	ff78 <sfbpf_parse+0x11ec>
    f380:	mov	sl, #0
    f384:	mov	r6, #1
    f388:	b	fcc8 <sfbpf_parse+0xf3c>
    f38c:	ldr	r6, [r9, #-16]
    f390:	ldr	r1, [r9]
    f394:	str	r2, [sp, #16]
    f398:	mov	r0, #0
    f39c:	mov	r4, ip
    f3a0:	mov	r5, lr
    f3a4:	mov	sl, r3
    f3a8:	mov	r2, r6
    f3ac:	bl	7e58 <sf_gen_ncode>
    f3b0:	b	ff64 <sfbpf_parse+0x11d8>
    f3b4:	ldr	r0, [r9, #12]
    f3b8:	mov	r4, ip
    f3bc:	mov	r5, lr
    f3c0:	bl	3af4 <sf_gen_not>
    f3c4:	mov	lr, r5
    f3c8:	mov	ip, r4
    f3cc:	ldr	r6, [r9]
    f3d0:	ldr	r2, [r9, #4]
    f3d4:	ldr	r3, [r9, #8]
    f3d8:	ldr	r0, [r9, #12]
    f3dc:	b	ff74 <sfbpf_parse+0x11e8>
    f3e0:	ldr	r0, [r9, #12]
    f3e4:	b	fb50 <sfbpf_parse+0xdc4>
    f3e8:	mov	r6, #16
    f3ec:	b	fcc4 <sfbpf_parse+0xf38>
    f3f0:	ldrb	r6, [r9]
    f3f4:	ldr	sl, [r9, #-16]
    f3f8:	b	fedc <sfbpf_parse+0x1150>
    f3fc:	mov	r6, #23
    f400:	b	fcc4 <sfbpf_parse+0xf38>
    f404:	mov	sl, #0
    f408:	mov	r6, #7
    f40c:	b	fcc8 <sfbpf_parse+0xf3c>
    f410:	mov	r6, #24
    f414:	b	fcc4 <sfbpf_parse+0xf38>
    f418:	mov	r6, #22
    f41c:	b	fcc4 <sfbpf_parse+0xf38>
    f420:	ldr	r6, [r9, #-16]
    f424:	b	ff78 <sfbpf_parse+0x11ec>
    f428:	ldr	r0, [r9, #-4]
    f42c:	b	fb50 <sfbpf_parse+0xdc4>
    f430:	mov	r6, #32
    f434:	b	fcc4 <sfbpf_parse+0xf38>
    f438:	mov	r6, #48	; 0x30
    f43c:	b	fcc4 <sfbpf_parse+0xf38>
    f440:	str	r2, [sp, #16]
    f444:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f448:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f44c:	ldr	r2, [r9]
    f450:	mov	r1, #0
    f454:	b	ff50 <sfbpf_parse+0x11c4>
    f458:	ldr	r0, [r9]
    f45c:	b	fb50 <sfbpf_parse+0xdc4>
    f460:	ldr	r0, [r9]
    f464:	mov	sl, ip
    f468:	mov	r5, lr
    f46c:	mov	r6, r2
    f470:	mov	r4, r3
    f474:	bl	aaa8 <sf_gen_atmmulti_abbrev>
    f478:	b	fb40 <sfbpf_parse+0xdb4>
    f47c:	mov	r4, #0
    f480:	mov	r6, #16
    f484:	b	feec <sfbpf_parse+0x1160>
    f488:	str	r2, [sp, #16]
    f48c:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f490:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f494:	ldr	r2, [r9]
    f498:	mov	r1, #0
    f49c:	b	f5a4 <sfbpf_parse+0x818>
    f4a0:	mov	r4, #0
    f4a4:	mov	r6, #6
    f4a8:	b	feec <sfbpf_parse+0x1160>
    f4ac:	ldr	r6, [r9, #-16]
    f4b0:	mvn	r0, #2
    f4b4:	str	r2, [sp, #16]
    f4b8:	stmib	sp, {r3, lr}
    f4bc:	str	ip, [sp, #12]
    f4c0:	uxtab	r0, r0, r6
    f4c4:	cmp	r0, #4
    f4c8:	bhi	f4ec <sfbpf_parse+0x760>
    f4cc:	add	r1, pc, #4
    f4d0:	ldr	r0, [r1, r0, lsl #2]
    f4d4:	add	pc, r1, r0
    f4d8:	.word	0x00000cac
    f4dc:	.word	0x00000014
    f4e0:	.word	0x00000c70
    f4e4:	.word	0x00000c7c
    f4e8:	.word	0x00000c88
    f4ec:	ldr	r0, [r9]
    f4f0:	mov	r1, #0
    f4f4:	mov	r2, r6
    f4f8:	bl	7e58 <sf_gen_ncode>
    f4fc:	str	r0, [sp, #28]
    f500:	lsr	sl, r6, #8
    f504:	lsr	r4, r6, #16
    f508:	lsr	r5, r6, #24
    f50c:	b	100b8 <sfbpf_parse+0x132c>
    f510:	ldrb	r6, [r9]
    f514:	ldr	sl, [r9, #-32]	; 0xffffffe0
    f518:	ldr	r4, [r9, #-16]
    f51c:	b	ff84 <sfbpf_parse+0x11f8>
    f520:	mov	r4, #0
    f524:	mov	r6, #15
    f528:	b	feec <sfbpf_parse+0x1160>
    f52c:	mov	r5, #0
    f530:	mov	r6, #30
    f534:	b	fed8 <sfbpf_parse+0x114c>
    f538:	mov	r4, #0
    f53c:	mov	r6, #19
    f540:	b	feec <sfbpf_parse+0x1160>
    f544:	ldr	sl, [r9, #-16]
    f548:	ldr	r4, [r9]
    f54c:	mov	r6, #0
    f550:	b	ff84 <sfbpf_parse+0x11f8>
    f554:	ldr	sl, [r9, #-16]
    f558:	mov	r4, #0
    f55c:	mov	r6, #5
    f560:	b	ff84 <sfbpf_parse+0x11f8>
    f564:	mvn	r0, #0
    f568:	b	f6ac <sfbpf_parse+0x920>
    f56c:	mov	r4, #0
    f570:	mov	r6, #8
    f574:	b	feec <sfbpf_parse+0x1160>
    f578:	mov	r5, #0
    f57c:	mov	r6, #38	; 0x26
    f580:	b	fed8 <sfbpf_parse+0x114c>
    f584:	mov	r5, #0
    f588:	mov	r6, #20
    f58c:	b	fed8 <sfbpf_parse+0x114c>
    f590:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f594:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f598:	ldr	r1, [r9]
    f59c:	str	r2, [sp, #16]
    f5a0:	mov	r2, #0
    f5a4:	mov	sl, r3
    f5a8:	mov	r3, r6
    f5ac:	mov	r4, ip
    f5b0:	mov	r5, lr
    f5b4:	bl	7d44 <sf_gen_mcode>
    f5b8:	b	ff64 <sfbpf_parse+0x11d8>
    f5bc:	ldr	sl, [r9, #-16]
    f5c0:	mov	r4, #0
    f5c4:	mov	r6, #6
    f5c8:	b	ff84 <sfbpf_parse+0x11f8>
    f5cc:	mov	sl, ip
    f5d0:	mov	r5, lr
    f5d4:	mov	r6, r2
    f5d8:	mov	r4, r3
    f5dc:	bl	a170 <sf_gen_pppoes>
    f5e0:	b	fe98 <sfbpf_parse+0x110c>
    f5e4:	mov	r5, #0
    f5e8:	mov	r6, #28
    f5ec:	b	fed8 <sfbpf_parse+0x114c>
    f5f0:	ldr	r0, [r9]
    f5f4:	mov	sl, ip
    f5f8:	mov	r5, lr
    f5fc:	mov	r6, r2
    f600:	mov	r4, r3
    f604:	bl	3b08 <sf_gen_proto_abbrev>
    f608:	b	fb40 <sfbpf_parse+0xdb4>
    f60c:	ldr	r0, [r9, #-16]
    f610:	mov	sl, ip
    f614:	mov	r5, lr
    f618:	mov	r6, r2
    f61c:	mov	r4, r3
    f620:	bl	9470 <sf_gen_multicast>
    f624:	b	fe98 <sfbpf_parse+0x110c>
    f628:	mov	sl, r2
    f62c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f630:	ldr	r2, [r9]
    f634:	mov	r0, #0
    f638:	b	fd74 <sfbpf_parse+0xfe8>
    f63c:	mov	r5, #0
    f640:	mov	r6, #26
    f644:	b	fed8 <sfbpf_parse+0x114c>
    f648:	ldr	r0, [r9]
    f64c:	mov	r1, #12
    f650:	b	f934 <sfbpf_parse+0xba8>
    f654:	ldr	r6, [r9, #-16]
    f658:	ldr	r0, [r9]
    f65c:	str	ip, [sp, #12]
    f660:	str	r2, [sp, #16]
    f664:	stmib	sp, {r3, lr}
    f668:	mov	r1, r6
    f66c:	lsr	r5, r6, #24
    f670:	lsr	r4, r6, #16
    f674:	lsr	sl, r6, #8
    f678:	bl	59e0 <sf_gen_scode>
    f67c:	b	fc24 <sfbpf_parse+0xe98>
    f680:	mov	sl, r2
    f684:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f688:	ldr	r0, [r9, #-16]
    f68c:	ldr	r2, [r9]
    f690:	mov	r6, r3
    f694:	mov	r3, #0
    f698:	b	f9fc <sfbpf_parse+0xc70>
    f69c:	mov	r4, #0
    f6a0:	mov	r6, #23
    f6a4:	b	feec <sfbpf_parse+0x1160>
    f6a8:	ldr	r0, [r9]
    f6ac:	mov	sl, ip
    f6b0:	mov	r5, lr
    f6b4:	mov	r6, r2
    f6b8:	mov	r4, r3
    f6bc:	bl	9ff0 <sf_gen_mpls>
    f6c0:	b	fe98 <sfbpf_parse+0x110c>
    f6c4:	ldr	r0, [r9]
    f6c8:	mov	sl, ip
    f6cc:	mov	r5, lr
    f6d0:	mov	r6, r2
    f6d4:	mov	r4, r3
    f6d8:	bl	9c1c <sf_gen_pf_rnr>
    f6dc:	b	fe98 <sfbpf_parse+0x110c>
    f6e0:	mov	r6, #0
    f6e4:	b	fcc4 <sfbpf_parse+0xf38>
    f6e8:	mov	r4, #0
    f6ec:	mov	r6, #12
    f6f0:	b	feec <sfbpf_parse+0x1160>
    f6f4:	mov	r4, #0
    f6f8:	mov	r6, #17
    f6fc:	b	feec <sfbpf_parse+0x1160>
    f700:	mov	r4, #0
    f704:	mov	r6, #18
    f708:	b	feec <sfbpf_parse+0x1160>
    f70c:	mov	sl, r2
    f710:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f714:	ldr	r2, [r9]
    f718:	mov	r0, #112	; 0x70
    f71c:	b	fd74 <sfbpf_parse+0xfe8>
    f720:	ldr	r0, [r9]
    f724:	mov	sl, ip
    f728:	mov	r5, lr
    f72c:	mov	r6, r2
    f730:	mov	r4, r3
    f734:	bl	9c4c <sf_gen_pf_reason>
    f738:	b	fe98 <sfbpf_parse+0x110c>
    f73c:	ldr	r0, [r9]
    f740:	mov	sl, ip
    f744:	mov	r5, lr
    f748:	mov	r6, r2
    f74c:	mov	r4, r3
    f750:	bl	8e0c <sf_gen_loadi>
    f754:	b	fe98 <sfbpf_parse+0x110c>
    f758:	mov	sl, r2
    f75c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f760:	ldr	r2, [r9]
    f764:	mov	r0, #48	; 0x30
    f768:	b	fd74 <sfbpf_parse+0xfe8>
    f76c:	mov	r6, #124	; 0x7c
    f770:	b	fcc4 <sfbpf_parse+0xf38>
    f774:	ldr	r0, [r9]
    f778:	mov	sl, ip
    f77c:	mov	r5, lr
    f780:	mov	r6, r2
    f784:	mov	r4, r3
    f788:	bl	a41c <sf_gen_atmtype_abbrev>
    f78c:	b	fb40 <sfbpf_parse+0xdb4>
    f790:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f794:	ldr	r1, [r9]
    f798:	orr	r0, r1, r0
    f79c:	b	f930 <sfbpf_parse+0xba4>
    f7a0:	mov	r6, #60	; 0x3c
    f7a4:	b	fcc4 <sfbpf_parse+0xf38>
    f7a8:	mov	r6, #62	; 0x3e
    f7ac:	b	fcc4 <sfbpf_parse+0xf38>
    f7b0:	mov	r6, #61	; 0x3d
    f7b4:	b	fcc4 <sfbpf_parse+0xf38>
    f7b8:	mov	r6, #25
    f7bc:	b	fcc4 <sfbpf_parse+0xf38>
    f7c0:	mov	r4, #0
    f7c4:	mov	r6, #21
    f7c8:	b	feec <sfbpf_parse+0x1160>
    f7cc:	ldr	r0, [r9]
    f7d0:	b	f88c <sfbpf_parse+0xb00>
    f7d4:	ldr	r0, [r9]
    f7d8:	mov	sl, ip
    f7dc:	mov	r5, lr
    f7e0:	mov	r6, r2
    f7e4:	mov	r4, r3
    f7e8:	bl	9d00 <sf_gen_p80211_fcdir>
    f7ec:	b	fe98 <sfbpf_parse+0x110c>
    f7f0:	str	r2, [sp, #16]
    f7f4:	stmib	sp, {r3, lr}
    f7f8:	str	ip, [sp, #12]
    f7fc:	ldr	r0, [r9]
    f800:	ldr	r1, [pc, #2476]	; 101b4 <sfbpf_parse+0x1428>
    f804:	add	r1, pc, r1
    f808:	bl	eb24 <sfbpf_strcasecmp>
    f80c:	mov	sl, #0
    f810:	cmp	r0, #0
    f814:	beq	10070 <sfbpf_parse+0x12e4>
    f818:	ldr	r0, [r9]
    f81c:	ldr	r1, [pc, #2452]	; 101b8 <sfbpf_parse+0x142c>
    f820:	add	r1, pc, r1
    f824:	bl	eb24 <sfbpf_strcasecmp>
    f828:	cmp	r0, #0
    f82c:	beq	100a4 <sfbpf_parse+0x1318>
    f830:	ldr	r0, [r9]
    f834:	ldr	r1, [pc, #2432]	; 101bc <sfbpf_parse+0x1430>
    f838:	add	r1, pc, r1
    f83c:	bl	eb24 <sfbpf_strcasecmp>
    f840:	cmp	r0, #0
    f844:	beq	100ac <sfbpf_parse+0x1320>
    f848:	ldr	r0, [r9]
    f84c:	ldr	r1, [pc, #2412]	; 101c0 <sfbpf_parse+0x1434>
    f850:	add	r1, pc, r1
    f854:	bl	eb24 <sfbpf_strcasecmp>
    f858:	ldr	ip, [sp, #12]
    f85c:	ldr	r2, [sp, #16]
    f860:	ldmib	sp, {r3, lr}
    f864:	mov	r6, #3
    f868:	cmp	r0, #0
    f86c:	mov	r4, #0
    f870:	mov	r5, #0
    f874:	beq	ff84 <sfbpf_parse+0x11f8>
    f878:	b	1016c <sfbpf_parse+0x13e0>
    f87c:	mov	r4, #0
    f880:	mov	r6, #7
    f884:	b	feec <sfbpf_parse+0x1160>
    f888:	mvn	r0, #0
    f88c:	mov	sl, ip
    f890:	mov	r5, lr
    f894:	mov	r6, r2
    f898:	mov	r4, r3
    f89c:	bl	9eb0 <sf_gen_vlan>
    f8a0:	b	fe98 <sfbpf_parse+0x110c>
    f8a4:	mov	sl, r2
    f8a8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f8ac:	ldr	r2, [r9]
    f8b0:	mov	r0, #96	; 0x60
    f8b4:	b	fd74 <sfbpf_parse+0xfe8>
    f8b8:	mov	r6, #30
    f8bc:	b	fcc4 <sfbpf_parse+0xf38>
    f8c0:	str	r2, [sp, #16]
    f8c4:	ldr	r0, [r9, #-28]	; 0xffffffe4
    f8c8:	ldr	r2, [r9, #-16]
    f8cc:	ldr	r1, [r9]
    f8d0:	b	fa88 <sfbpf_parse+0xcfc>
    f8d4:	mov	sl, #0
    f8d8:	mov	r6, #5
    f8dc:	b	fcc8 <sfbpf_parse+0xf3c>
    f8e0:	str	r2, [sp, #16]
    f8e4:	stmib	sp, {r3, lr}
    f8e8:	str	ip, [sp, #12]
    f8ec:	ldr	r0, [r9]
    f8f0:	ldr	r1, [pc, #2220]	; 101a4 <sfbpf_parse+0x1418>
    f8f4:	add	r1, pc, r1
    f8f8:	bl	101f4 <str2tok>
    f8fc:	cmn	r0, #1
    f900:	beq	10130 <sfbpf_parse+0x13a4>
    f904:	lsr	r5, r0, #24
    f908:	lsr	r4, r0, #16
    f90c:	lsr	sl, r0, #8
    f910:	mov	r6, r0
    f914:	b	100b8 <sfbpf_parse+0x132c>
    f918:	mov	sl, r2
    f91c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f920:	ldr	r2, [r9]
    f924:	mov	r0, #32
    f928:	b	fd74 <sfbpf_parse+0xfe8>
    f92c:	ldr	r0, [r9]
    f930:	mov	r1, #252	; 0xfc
    f934:	mov	sl, ip
    f938:	mov	r5, lr
    f93c:	mov	r6, r2
    f940:	mov	r4, r3
    f944:	bl	9c7c <sf_gen_p80211_type>
    f948:	b	fe98 <sfbpf_parse+0x110c>
    f94c:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f950:	str	r3, [sp, #4]
    f954:	str	r2, [sp, #16]
    f958:	str	ip, [sp, #12]
    f95c:	str	lr, [sp, #8]
    f960:	cmp	r0, #0
    f964:	beq	10078 <sfbpf_parse+0x12ec>
    f968:	mov	r1, #0
    f96c:	cmp	r1, #2
    f970:	beq	1013c <sfbpf_parse+0x13b0>
    f974:	ldr	r2, [pc, #2092]	; 101a8 <sfbpf_parse+0x141c>
    f978:	add	r2, pc, r2
    f97c:	add	r3, r2, r1, lsl #3
    f980:	add	r1, r1, #1
    f984:	ldr	r3, [r3, #8]
    f988:	cmp	r0, r3
    f98c:	bne	f96c <sfbpf_parse+0xbe0>
    f990:	add	r0, r2, r1, lsl #3
    f994:	ldr	r1, [r0, #4]
    f998:	b	10080 <sfbpf_parse+0x12f4>
    f99c:	mov	r4, #0
    f9a0:	str	r2, [sp, #16]
    f9a4:	stmib	sp, {r3, lr}
    f9a8:	str	ip, [sp, #12]
    f9ac:	ldr	r5, [pc, #2040]	; 101ac <sfbpf_parse+0x1420>
    f9b0:	add	r5, pc, r5
    f9b4:	add	r0, r5, r4, lsl #3
    f9b8:	ldr	r1, [r0, #4]
    f9bc:	ldr	r0, [r9]
    f9c0:	bl	101f4 <str2tok>
    f9c4:	cmn	r0, #1
    f9c8:	bne	fe18 <sfbpf_parse+0x108c>
    f9cc:	add	r4, r4, #1
    f9d0:	cmp	r4, #3
    f9d4:	bne	f9ac <sfbpf_parse+0xc20>
    f9d8:	b	10130 <sfbpf_parse+0x13a4>
    f9dc:	ldr	r6, [r9, #-32]	; 0xffffffe0
    f9e0:	b	f314 <sfbpf_parse+0x588>
    f9e4:	mov	sl, r2
    f9e8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f9ec:	ldr	r0, [r9, #-16]
    f9f0:	ldr	r2, [r9]
    f9f4:	mov	r6, r3
    f9f8:	mov	r3, #1
    f9fc:	mov	r4, ip
    fa00:	mov	r5, lr
    fa04:	bl	8c20 <sf_gen_relation>
    fa08:	mov	r3, r6
    fa0c:	mov	r2, sl
    fa10:	mov	lr, r5
    fa14:	mov	ip, r4
    fa18:	b	fb50 <sfbpf_parse+0xdc4>
    fa1c:	mov	sl, #0
    fa20:	mov	r6, #8
    fa24:	b	fcc8 <sfbpf_parse+0xf3c>
    fa28:	mov	r5, #0
    fa2c:	mov	r6, #39	; 0x27
    fa30:	b	fed8 <sfbpf_parse+0x114c>
    fa34:	mov	r5, #0
    fa38:	mov	r6, #29
    fa3c:	b	fed8 <sfbpf_parse+0x114c>
    fa40:	mov	sl, r2
    fa44:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fa48:	ldr	r2, [r9]
    fa4c:	mov	r0, #16
    fa50:	b	fd74 <sfbpf_parse+0xfe8>
    fa54:	mov	r3, #1
    fa58:	b	ff84 <sfbpf_parse+0x11f8>
    fa5c:	mov	r5, #0
    fa60:	mov	r6, #27
    fa64:	b	fed8 <sfbpf_parse+0x114c>
    fa68:	ldr	r2, [r9, #-12]
    fa6c:	sub	r0, r2, #51	; 0x33
    fa70:	cmp	r0, #1
    fa74:	bhi	ff84 <sfbpf_parse+0x11f8>
    fa78:	ldr	r1, [r9]
    fa7c:	mov	r0, r2
    fa80:	str	r2, [sp, #16]
    fa84:	mov	r2, #16
    fa88:	str	r3, [sp, #4]
    fa8c:	mov	r3, #0
    fa90:	b	fabc <sfbpf_parse+0xd30>
    fa94:	mov	r3, #3
    fa98:	b	ff84 <sfbpf_parse+0x11f8>
    fa9c:	mov	r6, #26
    faa0:	b	fcc4 <sfbpf_parse+0xf38>
    faa4:	str	r2, [sp, #16]
    faa8:	ldr	r0, [r9, #-28]	; 0xffffffe4
    faac:	ldr	r2, [r9, #-16]
    fab0:	ldr	r1, [r9]
    fab4:	str	r3, [sp, #4]
    fab8:	mov	r3, #1
    fabc:	str	ip, [sp, #12]
    fac0:	str	lr, [sp, #8]
    fac4:	bl	a1ec <sf_gen_atmfield_code>
    fac8:	b	fc24 <sfbpf_parse+0xe98>
    facc:	ldr	r0, [r9]
    fad0:	mov	sl, ip
    fad4:	mov	r5, lr
    fad8:	mov	r6, r2
    fadc:	mov	r4, r3
    fae0:	bl	9030 <sf_gen_greater>
    fae4:	b	fe98 <sfbpf_parse+0x110c>
    fae8:	mov	sl, r2
    faec:	ldr	r1, [r9, #-32]	; 0xffffffe0
    faf0:	ldr	r0, [r9, #-16]
    faf4:	ldr	r2, [r9]
    faf8:	mov	r4, ip
    fafc:	mov	r5, lr
    fb00:	mov	r6, r3
    fb04:	bl	90c0 <sf_gen_byteop>
    fb08:	b	fd84 <sfbpf_parse+0xff8>
    fb0c:	mov	r2, #52	; 0x34
    fb10:	b	ff84 <sfbpf_parse+0x11f8>
    fb14:	str	r2, [sp, #16]
    fb18:	ldr	r0, [r9, #-24]	; 0xffffffe8
    fb1c:	ldr	r2, [r9, #-16]
    fb20:	ldr	r1, [r9]
    fb24:	b	fc10 <sfbpf_parse+0xe84>
    fb28:	ldr	r0, [r9]
    fb2c:	mov	sl, ip
    fb30:	mov	r5, lr
    fb34:	mov	r6, r2
    fb38:	mov	r4, r3
    fb3c:	bl	a768 <sf_gen_mtp2type_abbrev>
    fb40:	mov	r3, r4
    fb44:	mov	r2, r6
    fb48:	mov	lr, r5
    fb4c:	mov	ip, sl
    fb50:	str	r0, [sp, #28]
    fb54:	mov	r6, #255	; 0xff
    fb58:	mov	sl, #255	; 0xff
    fb5c:	mov	r4, #255	; 0xff
    fb60:	mov	r5, #255	; 0xff
    fb64:	b	ff84 <sfbpf_parse+0x11f8>
    fb68:	mov	sl, #0
    fb6c:	mov	r6, #6
    fb70:	b	fcc8 <sfbpf_parse+0xf3c>
    fb74:	mov	r4, #0
    fb78:	mov	r6, #9
    fb7c:	b	feec <sfbpf_parse+0x1160>
    fb80:	mov	r4, #0
    fb84:	mov	r6, #10
    fb88:	b	feec <sfbpf_parse+0x1160>
    fb8c:	mov	r4, #0
    fb90:	mov	r6, #11
    fb94:	b	feec <sfbpf_parse+0x1160>
    fb98:	mov	r4, #0
    fb9c:	mov	r6, #13
    fba0:	b	feec <sfbpf_parse+0x1160>
    fba4:	mov	r6, #31
    fba8:	b	fcc4 <sfbpf_parse+0xf38>
    fbac:	mov	r6, #29
    fbb0:	b	fcc4 <sfbpf_parse+0xf38>
    fbb4:	mov	r6, #70	; 0x46
    fbb8:	b	fcc4 <sfbpf_parse+0xf38>
    fbbc:	mov	r2, #51	; 0x33
    fbc0:	b	ff84 <sfbpf_parse+0x11f8>
    fbc4:	mov	r3, #2
    fbc8:	b	ff84 <sfbpf_parse+0x11f8>
    fbcc:	mov	r3, #4
    fbd0:	b	ff84 <sfbpf_parse+0x11f8>
    fbd4:	str	r2, [sp, #16]
    fbd8:	ldr	r0, [r9, #-24]	; 0xffffffe8
    fbdc:	ldr	r2, [r9, #-16]
    fbe0:	ldr	r1, [r9]
    fbe4:	str	r3, [sp, #4]
    fbe8:	mov	r3, #1
    fbec:	b	fc18 <sfbpf_parse+0xe8c>
    fbf0:	ldr	r3, [r9, #-8]
    fbf4:	sub	r0, r3, #1
    fbf8:	cmp	r0, #3
    fbfc:	bhi	ff84 <sfbpf_parse+0x11f8>
    fc00:	ldr	r1, [r9]
    fc04:	str	r2, [sp, #16]
    fc08:	mov	r0, r3
    fc0c:	mov	r2, #16
    fc10:	str	r3, [sp, #4]
    fc14:	mov	r3, #0
    fc18:	str	ip, [sp, #12]
    fc1c:	str	lr, [sp, #8]
    fc20:	bl	a8ec <sf_gen_mtp3field_code>
    fc24:	ldr	r2, [sp, #16]
    fc28:	ldr	ip, [sp, #12]
    fc2c:	ldmib	sp, {r3, lr}
    fc30:	str	r0, [sp, #28]
    fc34:	b	ff84 <sfbpf_parse+0x11f8>
    fc38:	mov	sl, r2
    fc3c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fc40:	ldr	r2, [r9]
    fc44:	mov	r0, #64	; 0x40
    fc48:	b	fd74 <sfbpf_parse+0xfe8>
    fc4c:	mov	r4, #0
    fc50:	mov	r6, #22
    fc54:	b	feec <sfbpf_parse+0x1160>
    fc58:	mov	sl, ip
    fc5c:	mov	r5, lr
    fc60:	mov	r6, r2
    fc64:	mov	r4, r3
    fc68:	bl	8db4 <sf_gen_loadlen>
    fc6c:	b	fe98 <sfbpf_parse+0x110c>
    fc70:	ldr	r0, [r9]
    fc74:	mov	sl, ip
    fc78:	mov	r5, lr
    fc7c:	mov	r6, r2
    fc80:	mov	r4, r3
    fc84:	bl	8e6c <sf_gen_neg>
    fc88:	b	fe98 <sfbpf_parse+0x110c>
    fc8c:	mov	r6, #28
    fc90:	b	fcc4 <sfbpf_parse+0xf38>
    fc94:	mov	r6, #71	; 0x47
    fc98:	b	fcc4 <sfbpf_parse+0xf38>
    fc9c:	ldr	r0, [r9]
    fca0:	mov	sl, ip
    fca4:	mov	r5, lr
    fca8:	mov	r6, r2
    fcac:	mov	r4, r3
    fcb0:	bl	9c04 <sf_gen_pf_ruleset>
    fcb4:	b	fe98 <sfbpf_parse+0x110c>
    fcb8:	mov	r6, #38	; 0x26
    fcbc:	b	fcc4 <sfbpf_parse+0xf38>
    fcc0:	mov	r6, #27
    fcc4:	mov	sl, #0
    fcc8:	mov	r4, #0
    fccc:	b	fef0 <sfbpf_parse+0x1164>
    fcd0:	mov	r4, #0
    fcd4:	mov	r6, #14
    fcd8:	b	feec <sfbpf_parse+0x1160>
    fcdc:	ldr	r0, [r9]
    fce0:	mov	sl, ip
    fce4:	mov	r5, lr
    fce8:	mov	r6, r2
    fcec:	mov	r4, r3
    fcf0:	bl	9bec <sf_gen_pf_ifname>
    fcf4:	b	fe98 <sfbpf_parse+0x110c>
    fcf8:	mov	r4, #0
    fcfc:	mov	r6, #4
    fd00:	b	feec <sfbpf_parse+0x1160>
    fd04:	mov	r5, #0
    fd08:	mov	r6, #24
    fd0c:	b	fed8 <sfbpf_parse+0x114c>
    fd10:	ldr	r0, [r9]
    fd14:	mov	sl, ip
    fd18:	mov	r5, lr
    fd1c:	mov	r6, r2
    fd20:	mov	r4, r3
    fd24:	bl	9070 <sf_gen_less>
    fd28:	b	fe98 <sfbpf_parse+0x110c>
    fd2c:	mov	sl, ip
    fd30:	mov	r5, lr
    fd34:	mov	r6, r2
    fd38:	mov	r4, r3
    fd3c:	bl	a168 <sf_gen_pppoed>
    fd40:	b	fe98 <sfbpf_parse+0x110c>
    fd44:	mov	r5, #0
    fd48:	mov	r6, #25
    fd4c:	b	fed8 <sfbpf_parse+0x114c>
    fd50:	ldr	r0, [r9, #-48]	; 0xffffffd0
    fd54:	ldr	r1, [r9, #-16]
    fd58:	mov	sl, r2
    fd5c:	mov	r2, #1
    fd60:	b	fdf8 <sfbpf_parse+0x106c>
    fd64:	mov	sl, r2
    fd68:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fd6c:	ldr	r2, [r9]
    fd70:	mov	r0, #80	; 0x50
    fd74:	mov	r4, ip
    fd78:	mov	r5, lr
    fd7c:	mov	r6, r3
    fd80:	bl	8f10 <sf_gen_arth>
    fd84:	mov	r3, r6
    fd88:	mov	r2, sl
    fd8c:	mov	lr, r5
    fd90:	mov	ip, r4
    fd94:	b	fea8 <sfbpf_parse+0x111c>
    fd98:	.word	0x00021c0c
    fd9c:	ldr	r0, [r9, #12]
    fda0:	str	ip, [sp, #12]
    fda4:	str	r2, [sp, #16]
    fda8:	stmib	sp, {r3, lr}
    fdac:	bl	2df8 <sf_finish_parse>
    fdb0:	ldr	r2, [sp, #16]
    fdb4:	ldr	ip, [sp, #12]
    fdb8:	b	100c0 <sfbpf_parse+0x1334>
    fdbc:	mov	r5, #0
    fdc0:	mov	r6, #31
    fdc4:	b	fed8 <sfbpf_parse+0x114c>
    fdc8:	.word	0x00021bf8
    fdcc:	ldr	r0, [r9]
    fdd0:	mov	sl, ip
    fdd4:	mov	r5, lr
    fdd8:	mov	r6, r2
    fddc:	mov	r4, r3
    fde0:	bl	9c64 <sf_gen_pf_action>
    fde4:	b	fe98 <sfbpf_parse+0x110c>
    fde8:	mov	sl, r2
    fdec:	ldr	r0, [r9, #-80]	; 0xffffffb0
    fdf0:	ldr	r1, [r9, #-48]	; 0xffffffd0
    fdf4:	ldr	r2, [r9, #-16]
    fdf8:	mov	r4, ip
    fdfc:	mov	r5, lr
    fe00:	mov	r6, r3
    fe04:	bl	8434 <sf_gen_load>
    fe08:	b	fd84 <sfbpf_parse+0xff8>
    fe0c:	mov	r5, #0
    fe10:	mov	r6, #37	; 0x25
    fe14:	b	fed8 <sfbpf_parse+0x114c>
    fe18:	ldr	r1, [r5, r4, lsl #3]
    fe1c:	orr	r6, r1, r0
    fe20:	b	10094 <sfbpf_parse+0x1308>
    fe24:	mov	r5, #0
    fe28:	mov	r6, #32
    fe2c:	b	fed8 <sfbpf_parse+0x114c>
    fe30:	mov	r5, #0
    fe34:	mov	r6, #40	; 0x28
    fe38:	b	fed8 <sfbpf_parse+0x114c>
    fe3c:	ldr	r0, [r9, #-16]
    fe40:	mov	sl, ip
    fe44:	mov	r5, lr
    fe48:	mov	r6, r2
    fe4c:	mov	r4, r3
    fe50:	bl	91bc <sf_gen_broadcast>
    fe54:	b	fe98 <sfbpf_parse+0x110c>
    fe58:	ldr	r0, [r9]
    fe5c:	mov	sl, ip
    fe60:	mov	r5, lr
    fe64:	mov	r6, r2
    fe68:	mov	r4, r3
    fe6c:	bl	9c34 <sf_gen_pf_srnr>
    fe70:	b	fe98 <sfbpf_parse+0x110c>
    fe74:	mov	r0, #0
    fe78:	b	fe84 <sfbpf_parse+0x10f8>
    fe7c:	.word	0x0000507e
    fe80:	mov	r0, #1
    fe84:	mov	sl, ip
    fe88:	mov	r5, lr
    fe8c:	mov	r6, r2
    fe90:	mov	r4, r3
    fe94:	bl	9a2c <sf_gen_inbound>
    fe98:	mov	r3, r4
    fe9c:	mov	r2, r6
    fea0:	mov	lr, r5
    fea4:	mov	ip, sl
    fea8:	mov	r6, r0
    feac:	lsr	r5, r0, #24
    feb0:	lsr	r4, r0, #16
    feb4:	lsr	sl, r0, #8
    feb8:	b	ff84 <sfbpf_parse+0x11f8>
    febc:	.word	0x00021b00
    fec0:	mov	r5, #0
    fec4:	mov	r6, #36	; 0x24
    fec8:	b	fed8 <sfbpf_parse+0x114c>
    fecc:	.word	0x00021ae4
    fed0:	mov	r5, #0
    fed4:	mov	r6, #33	; 0x21
    fed8:	mov	sl, #0
    fedc:	mov	r4, #0
    fee0:	b	ff84 <sfbpf_parse+0x11f8>
    fee4:	mov	r4, #0
    fee8:	mov	r6, #5
    feec:	mov	sl, #0
    fef0:	mov	r5, #0
    fef4:	b	ff84 <sfbpf_parse+0x11f8>
    fef8:	.word	0x0000524a
    fefc:	.word	0x00021aac
    ff00:	ldr	r6, [r9, #-16]
    ff04:	ldr	r0, [r9]
    ff08:	str	ip, [sp, #12]
    ff0c:	mov	r5, lr
    ff10:	mov	r4, r2
    ff14:	mov	sl, r3
    ff18:	mov	r1, r6
    ff1c:	bl	8280 <sf_gen_ecode>
    ff20:	b	10050 <sfbpf_parse+0x12c4>
    ff24:	.word	0x00005388
    ff28:	.word	0x000058ac
    ff2c:	.word	0x00021a60
    ff30:	.word	0x00021a4c
    ff34:	.word	0x00005da8
    ff38:	.word	0x00005ea2
    ff3c:	ldr	r6, [r9, #-16]
    ff40:	ldr	r0, [r9]
    ff44:	str	r2, [sp, #16]
    ff48:	mov	r1, #0
    ff4c:	mov	r2, #128	; 0x80
    ff50:	mov	sl, r3
    ff54:	mov	r3, r6
    ff58:	mov	r4, ip
    ff5c:	mov	r5, lr
    ff60:	bl	80bc <sf_gen_mcode6>
    ff64:	ldr	r2, [sp, #16]
    ff68:	mov	r3, sl
    ff6c:	mov	lr, r5
    ff70:	mov	ip, r4
    ff74:	str	r0, [sp, #28]
    ff78:	lsr	r5, r6, #24
    ff7c:	lsr	r4, r6, #16
    ff80:	lsr	sl, r6, #8
    ff84:	uxtb	r0, r6
    ff88:	uxtb	r1, r4
    ff8c:	sub	r9, r9, lr, lsl #4
    ff90:	bfi	r0, sl, #8, #8
    ff94:	orr	r0, r0, r1, lsl #16
    ff98:	orr	r0, r0, r5, lsl #24
    ff9c:	str	r0, [r9, #16]!
    ffa0:	ldr	r0, [sp, #28]
    ffa4:	stmib	r9, {r2, r3}
    ffa8:	movw	r3, #669	; 0x29d
    ffac:	str	r0, [r9, #12]
    ffb0:	lsl	r0, lr, #1
    ffb4:	ldrsh	r2, [r8, -r0]!
    ffb8:	ldr	r0, [pc, #520]	; 101c8 <sfbpf_parse+0x143c>
    ffbc:	ldr	r1, [pc, #520]	; 101cc <sfbpf_parse+0x1440>
    ffc0:	add	r0, pc, r0
    ffc4:	add	r1, pc, r1
    ffc8:	ldrb	r0, [r0, r7]
    ffcc:	sub	r0, r0, #126	; 0x7e
    ffd0:	add	r1, r1, r0, lsl #1
    ffd4:	ldrsh	r1, [r1]
    ffd8:	add	r1, r2, r1
    ffdc:	cmp	r1, r3
    ffe0:	bhi	10010 <sfbpf_parse+0x1284>
    ffe4:	ldr	r3, [pc, #484]	; 101d0 <sfbpf_parse+0x1444>
    ffe8:	uxth	r2, r2
    ffec:	add	r3, pc, r3
    fff0:	add	r3, r3, r1, lsl #1
    fff4:	ldrh	r3, [r3]
    fff8:	cmp	r3, r2
    fffc:	bne	10010 <sfbpf_parse+0x1284>
   10000:	ldr	r0, [pc, #460]	; 101d4 <sfbpf_parse+0x1448>
   10004:	add	r0, pc, r0
   10008:	add	r0, r0, r1, lsl #1
   1000c:	b	1001c <sfbpf_parse+0x1290>
   10010:	ldr	r1, [pc, #448]	; 101d8 <sfbpf_parse+0x144c>
   10014:	add	r1, pc, r1
   10018:	add	r0, r1, r0, lsl #1
   1001c:	ldr	r4, [sp, #24]
   10020:	ldrsh	sl, [r0]
   10024:	mov	r6, #15
   10028:	add	r8, r8, #2
   1002c:	b	edd4 <sfbpf_parse+0x48>
   10030:	ldr	r6, [r9, #-16]
   10034:	ldr	r0, [r9]
   10038:	str	ip, [sp, #12]
   1003c:	mov	r5, lr
   10040:	mov	r4, r2
   10044:	mov	sl, r3
   10048:	mov	r1, r6
   1004c:	bl	9d80 <sf_gen_acode>
   10050:	str	r0, [sp, #28]
   10054:	ldr	r0, [r9]
   10058:	bl	e0c <free@plt>
   1005c:	ldr	ip, [sp, #12]
   10060:	mov	r3, sl
   10064:	mov	r2, r4
   10068:	mov	lr, r5
   1006c:	b	ff78 <sfbpf_parse+0x11ec>
   10070:	mov	r6, #0
   10074:	b	100b0 <sfbpf_parse+0x1324>
   10078:	ldr	r1, [pc, #272]	; 10190 <sfbpf_parse+0x1404>
   1007c:	add	r1, pc, r1
   10080:	ldr	r0, [r9]
   10084:	bl	101f4 <str2tok>
   10088:	cmn	r0, #1
   1008c:	beq	10178 <sfbpf_parse+0x13ec>
   10090:	mov	r6, r0
   10094:	lsr	r5, r6, #24
   10098:	lsr	r4, r6, #16
   1009c:	lsr	sl, r6, #8
   100a0:	b	100b8 <sfbpf_parse+0x132c>
   100a4:	mov	r6, #1
   100a8:	b	100b0 <sfbpf_parse+0x1324>
   100ac:	mov	r6, #2
   100b0:	mov	r4, #0
   100b4:	mov	r5, #0
   100b8:	ldr	ip, [sp, #12]
   100bc:	ldr	r2, [sp, #16]
   100c0:	ldmib	sp, {r3, lr}
   100c4:	b	ff84 <sfbpf_parse+0x11f8>
   100c8:	sub	r0, fp, #432	; 0x1b0
   100cc:	mov	r6, #0
   100d0:	cmp	r4, r0
   100d4:	bne	100e4 <sfbpf_parse+0x1358>
   100d8:	b	100ec <sfbpf_parse+0x1360>
   100dc:	mov	r6, #1
   100e0:	mov	r4, r5
   100e4:	mov	r0, r4
   100e8:	bl	e0c <free@plt>
   100ec:	mov	r0, r6
   100f0:	sub	sp, fp, #28
   100f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   100f8:	ldr	r0, [pc, #232]	; 101e8 <sfbpf_parse+0x145c>
   100fc:	add	r0, pc, r0
   10100:	bl	10270 <sfbpf_error>
   10104:	bl	10240 <pfreason_to_num>
   10108:	bl	10258 <pfaction_to_num>
   1010c:	ldr	r0, [pc, #200]	; 101dc <sfbpf_parse+0x1450>
   10110:	ldr	r0, [pc, r0]
   10114:	ldr	r1, [pc, #196]	; 101e0 <sfbpf_parse+0x1454>
   10118:	add	r0, r0, #1
   1011c:	add	r1, pc, r1
   10120:	str	r0, [r1]
   10124:	ldr	r0, [pc, #184]	; 101e4 <sfbpf_parse+0x1458>
   10128:	add	r0, pc, r0
   1012c:	bl	10270 <sfbpf_error>
   10130:	ldr	r0, [pc, #120]	; 101b0 <sfbpf_parse+0x1424>
   10134:	add	r0, pc, r0
   10138:	bl	1f30 <sf_bpf_error>
   1013c:	ldr	r0, [pc, #168]	; 101ec <sfbpf_parse+0x1460>
   10140:	add	r0, pc, r0
   10144:	bl	1f30 <sf_bpf_error>
   10148:	ldr	r0, [pc, #76]	; 1019c <sfbpf_parse+0x1410>
   1014c:	add	r0, pc, r0
   10150:	bl	1f30 <sf_bpf_error>
   10154:	ldr	r0, [pc, #68]	; 101a0 <sfbpf_parse+0x1414>
   10158:	add	r0, pc, r0
   1015c:	bl	1f30 <sf_bpf_error>
   10160:	ldr	r0, [pc, #48]	; 10198 <sfbpf_parse+0x140c>
   10164:	add	r0, pc, r0
   10168:	bl	1f30 <sf_bpf_error>
   1016c:	ldr	r0, [pc, #80]	; 101c4 <sfbpf_parse+0x1438>
   10170:	add	r0, pc, r0
   10174:	bl	1f30 <sf_bpf_error>
   10178:	ldr	r0, [pc, #112]	; 101f0 <sfbpf_parse+0x1464>
   1017c:	add	r0, pc, r0
   10180:	bl	1f30 <sf_bpf_error>
   10184:	ldr	r0, [pc, #8]	; 10194 <sfbpf_parse+0x1408>
   10188:	add	r0, pc, r0
   1018c:	bl	1f30 <sf_bpf_error>
   10190:	.word	0x0001fd2c
   10194:	.word	0x00004f0c
   10198:	.word	0x00004f53
   1019c:	.word	0x00004f93
   101a0:	.word	0x00004fab
   101a4:	.word	0x00020464
   101a8:	.word	0x00020410
   101ac:	.word	0x000203d8
   101b0:	.word	0x00004ff8
   101b4:	.word	0x00005971
   101b8:	.word	0x00005963
   101bc:	.word	0x00005942
   101c0:	.word	0x00005931
   101c4:	.word	0x00005018
   101c8:	.word	0x00004f51
   101cc:	.word	0x00005018
   101d0:	.word	0x000042d0
   101d4:	.word	0x000047f4
   101d8:	.word	0x00005024
   101dc:	.word	0x000208b8
   101e0:	.word	0x000208ac
   101e4:	.word	0x00005079
   101e8:	.word	0x000050b2
   101ec:	.word	0x00005005
   101f0:	.word	0x00004fdd

000101f4 <str2tok>:
   101f4:	push	{r4, r5, r6, sl, fp, lr}
   101f8:	add	fp, sp, #16
   101fc:	mov	r5, r0
   10200:	ldr	r0, [r1, #4]
   10204:	mvn	r4, #0
   10208:	cmp	r0, #0
   1020c:	beq	10238 <str2tok+0x44>
   10210:	add	r6, r1, #12
   10214:	mov	r1, r5
   10218:	bl	eb24 <sfbpf_strcasecmp>
   1021c:	cmp	r0, #0
   10220:	beq	10234 <str2tok+0x40>
   10224:	ldr	r0, [r6], #8
   10228:	cmp	r0, #0
   1022c:	bne	10214 <str2tok+0x20>
   10230:	b	10238 <str2tok+0x44>
   10234:	ldr	r4, [r6, #-12]
   10238:	mov	r0, r4
   1023c:	pop	{r4, r5, r6, sl, fp, pc}

00010240 <pfreason_to_num>:
   10240:	push	{fp, lr}
   10244:	mov	fp, sp
   10248:	ldr	r0, [pc, #4]	; 10254 <pfreason_to_num+0x14>
   1024c:	add	r0, pc, r0
   10250:	bl	1f30 <sf_bpf_error>
   10254:	.word	0x00002b10

00010258 <pfaction_to_num>:
   10258:	push	{fp, lr}
   1025c:	mov	fp, sp
   10260:	ldr	r0, [pc, #4]	; 1026c <pfaction_to_num+0x14>
   10264:	add	r0, pc, r0
   10268:	bl	1f30 <sf_bpf_error>
   1026c:	.word	0x00002af8

00010270 <sfbpf_error>:
   10270:	push	{fp, lr}
   10274:	mov	fp, sp
   10278:	mov	r1, r0
   1027c:	ldr	r0, [pc, #28]	; 102a0 <sfbpf_error+0x30>
   10280:	ldr	r0, [pc, r0]
   10284:	ldr	r2, [pc, #24]	; 102a4 <sfbpf_error+0x34>
   10288:	add	r0, r0, #1
   1028c:	add	r2, pc, r2
   10290:	str	r0, [r2]
   10294:	ldr	r0, [pc, #12]	; 102a8 <sfbpf_error+0x38>
   10298:	add	r0, pc, r0
   1029c:	bl	1f30 <sf_bpf_error>
   102a0:	.word	0x000206e8
   102a4:	.word	0x000206dc
   102a8:	.word	0x0000388d

000102ac <sfbpf_lex>:
   102ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   102b0:	add	fp, sp, #28
   102b4:	sub	sp, sp, #76	; 0x4c
   102b8:	ldr	r0, [pc, #4080]	; 112b0 <sfbpf_lex+0x1004>
   102bc:	add	r0, pc, r0
   102c0:	ldrb	r1, [r0]
   102c4:	ldr	ip, [pc, #4088]	; 112c4 <sfbpf_lex+0x1018>
   102c8:	ldr	lr, [pc, #4088]	; 112c8 <sfbpf_lex+0x101c>
   102cc:	cmp	r1, #0
   102d0:	add	ip, pc, ip
   102d4:	add	lr, pc, lr
   102d8:	bne	103dc <sfbpf_lex+0x130>
   102dc:	mov	r1, #1
   102e0:	strb	r1, [r0]
   102e4:	ldrb	r0, [lr]
   102e8:	cmp	r0, #0
   102ec:	strbeq	r1, [lr]
   102f0:	ldr	r0, [pc, #4092]	; 112f4 <sfbpf_lex+0x1048>
   102f4:	ldr	r0, [pc, r0]
   102f8:	ldr	r4, [pc, #4088]	; 112f8 <sfbpf_lex+0x104c>
   102fc:	cmp	r0, #0
   10300:	add	r4, pc, r4
   10304:	bne	10318 <sfbpf_lex+0x6c>
   10308:	ldr	r0, [pc, #4092]	; 1130c <sfbpf_lex+0x1060>
   1030c:	ldr	r0, [pc, r0]
   10310:	ldr	r0, [r0]
   10314:	str	r0, [r4]
   10318:	ldr	r0, [pc, #4080]	; 11310 <sfbpf_lex+0x1064>
   1031c:	ldr	r0, [pc, r0]
   10320:	cmp	r0, #0
   10324:	bne	10340 <sfbpf_lex+0x94>
   10328:	ldr	r0, [pc, #4068]	; 11314 <sfbpf_lex+0x1068>
   1032c:	ldr	r0, [pc, r0]
   10330:	ldr	r0, [r0]
   10334:	ldr	r1, [pc, #4060]	; 11318 <sfbpf_lex+0x106c>
   10338:	add	r1, pc, r1
   1033c:	str	r0, [r1]
   10340:	ldr	r1, [pc, #4052]	; 1131c <sfbpf_lex+0x1070>
   10344:	ldr	r1, [pc, r1]
   10348:	cmp	r1, #0
   1034c:	beq	10364 <sfbpf_lex+0xb8>
   10350:	ldr	r2, [pc, #4092]	; 11354 <sfbpf_lex+0x10a8>
   10354:	ldr	r2, [pc, r2]
   10358:	ldr	r0, [r1, r2, lsl #2]
   1035c:	cmp	r0, #0
   10360:	bne	1039c <sfbpf_lex+0xf0>
   10364:	mov	r5, ip
   10368:	mov	r6, lr
   1036c:	bl	11928 <sfbpf_ensure_buffer_stack>
   10370:	ldr	r0, [pc, #4088]	; 11370 <sfbpf_lex+0x10c4>
   10374:	mov	r1, #16384	; 0x4000
   10378:	ldr	r0, [pc, r0]
   1037c:	bl	11a18 <sfbpf__create_buffer>
   10380:	ldr	r1, [pc, #4092]	; 11384 <sfbpf_lex+0x10d8>
   10384:	mov	lr, r6
   10388:	mov	ip, r5
   1038c:	ldr	r1, [pc, r1]
   10390:	ldr	r2, [pc, #4080]	; 11388 <sfbpf_lex+0x10dc>
   10394:	ldr	r2, [pc, r2]
   10398:	str	r0, [r1, r2, lsl #2]
   1039c:	ldr	r3, [r0, #16]
   103a0:	ldr	r7, [pc, #4068]	; 1138c <sfbpf_lex+0x10e0>
   103a4:	add	r7, pc, r7
   103a8:	str	r3, [r7]
   103ac:	ldr	r0, [r0, #8]
   103b0:	ldr	r3, [pc, #4056]	; 11390 <sfbpf_lex+0x10e4>
   103b4:	add	r3, pc, r3
   103b8:	str	r0, [r3]
   103bc:	ldr	r3, [pc, #4048]	; 11394 <sfbpf_lex+0x10e8>
   103c0:	add	r3, pc, r3
   103c4:	str	r0, [r3]
   103c8:	ldr	r1, [r1, r2, lsl #2]
   103cc:	ldr	r1, [r1]
   103d0:	str	r1, [r4]
   103d4:	ldrb	r0, [r0]
   103d8:	strb	r0, [ip]
   103dc:	ldr	r7, [pc, #4020]	; 11398 <sfbpf_lex+0x10ec>
   103e0:	ldr	r5, [pc, #4020]	; 1139c <sfbpf_lex+0x10f0>
   103e4:	ldr	sl, [pc, #4020]	; 113a0 <sfbpf_lex+0x10f4>
   103e8:	ldr	r4, [pc, #4020]	; 113a4 <sfbpf_lex+0x10f8>
   103ec:	ldr	r9, [pc, #4020]	; 113a8 <sfbpf_lex+0x10fc>
   103f0:	movw	r8, #1434	; 0x59a
   103f4:	add	r7, pc, r7
   103f8:	add	r5, pc, r5
   103fc:	add	sl, pc, sl
   10400:	add	r4, pc, r4
   10404:	add	r9, pc, r9
   10408:	ldrb	r0, [ip]
   1040c:	ldr	r6, [pc, #3992]	; 113ac <sfbpf_lex+0x1100>
   10410:	ldr	r6, [pc, r6]
   10414:	strb	r0, [r6]
   10418:	str	r6, [sp, #32]
   1041c:	ldrb	r0, [lr]
   10420:	ldrb	r1, [r6]
   10424:	add	r2, r5, r0, lsl #1
   10428:	ldrh	r2, [r2]
   1042c:	ldrb	r1, [r7, r1]
   10430:	cmp	r2, #0
   10434:	beq	10450 <sfbpf_lex+0x1a4>
   10438:	ldr	r2, [pc, #4088]	; 11438 <sfbpf_lex+0x118c>
   1043c:	add	r2, pc, r2
   10440:	str	r6, [r2]
   10444:	ldr	r2, [pc, #4088]	; 11444 <sfbpf_lex+0x1198>
   10448:	add	r2, pc, r2
   1044c:	str	r0, [r2]
   10450:	add	r2, sl, r0, lsl #1
   10454:	ldrsh	r2, [r2]
   10458:	add	r3, r2, r1
   1045c:	add	r2, r4, r3, lsl #1
   10460:	ldrsh	r2, [r2]
   10464:	cmp	r0, r2
   10468:	beq	104c0 <sfbpf_lex+0x214>
   1046c:	mov	r2, r1
   10470:	add	r0, r9, r0, lsl #1
   10474:	ldrsh	r0, [r0]
   10478:	cmp	r0, r8
   1047c:	blt	1048c <sfbpf_lex+0x1e0>
   10480:	ldr	r2, [pc, #4088]	; 11480 <sfbpf_lex+0x11d4>
   10484:	add	r2, pc, r2
   10488:	ldrb	r2, [r2, r1]
   1048c:	add	r1, sl, r0, lsl #1
   10490:	uxth	r7, r0
   10494:	ldrsh	r1, [r1]
   10498:	uxtab	r3, r1, r2
   1049c:	add	r1, r4, r3, lsl #1
   104a0:	ldrh	r5, [r1]
   104a4:	uxtb	r1, r2
   104a8:	cmp	r7, r5
   104ac:	bne	10470 <sfbpf_lex+0x1c4>
   104b0:	ldr	r7, [pc, #4092]	; 114b4 <sfbpf_lex+0x1208>
   104b4:	ldr	r5, [pc, #4092]	; 114b8 <sfbpf_lex+0x120c>
   104b8:	add	r7, pc, r7
   104bc:	add	r5, pc, r5
   104c0:	ldr	r0, [pc, #4092]	; 114c4 <sfbpf_lex+0x1218>
   104c4:	movw	r2, #7401	; 0x1ce9
   104c8:	add	r6, r6, #1
   104cc:	add	r0, pc, r0
   104d0:	add	r0, r0, r3, lsl #1
   104d4:	ldrsh	r0, [r0]
   104d8:	add	r1, sl, r0, lsl #1
   104dc:	ldrh	r1, [r1]
   104e0:	cmp	r1, r2
   104e4:	bne	10420 <sfbpf_lex+0x174>
   104e8:	b	10554 <sfbpf_lex+0x2a8>
   104ec:	ldr	r0, [pc, #4092]	; 114f0 <sfbpf_lex+0x1244>
   104f0:	ldr	r0, [pc, r0]
   104f4:	ldr	r1, [pc, #4088]	; 114f4 <sfbpf_lex+0x1248>
   104f8:	ldr	r1, [pc, r1]
   104fc:	ldr	r0, [r1, r0, lsl #2]
   10500:	ldr	r0, [r0, #4]
   10504:	ldr	r1, [pc, #4084]	; 11500 <sfbpf_lex+0x1254>
   10508:	ldr	r1, [pc, r1]
   1050c:	str	r1, [sp, #12]
   10510:	ldr	r1, [sp, #12]
   10514:	mov	r5, ip
   10518:	mov	r7, lr
   1051c:	add	r6, r0, r1
   10520:	ldr	r0, [pc, #4092]	; 11524 <sfbpf_lex+0x1278>
   10524:	add	r0, pc, r0
   10528:	str	r6, [r0]
   1052c:	bl	11a80 <yy_get_previous_state>
   10530:	mov	lr, r7
   10534:	ldr	r7, [pc, #4092]	; 11538 <sfbpf_lex+0x128c>
   10538:	mov	ip, r5
   1053c:	ldr	r5, [pc, #4088]	; 1153c <sfbpf_lex+0x1290>
   10540:	ldr	r1, [pc, #4088]	; 11540 <sfbpf_lex+0x1294>
   10544:	ldr	r1, [pc, r1]
   10548:	add	r7, pc, r7
   1054c:	add	r5, pc, r5
   10550:	str	r1, [sp, #32]
   10554:	add	r0, r5, r0, lsl #1
   10558:	ldrh	r0, [r0]
   1055c:	cmp	r0, #0
   10560:	bne	1057c <sfbpf_lex+0x2d0>
   10564:	ldr	r0, [pc, #4080]	; 1155c <sfbpf_lex+0x12b0>
   10568:	ldr	r0, [pc, r0]
   1056c:	ldr	r6, [pc, #4076]	; 11560 <sfbpf_lex+0x12b4>
   10570:	add	r0, r5, r0, lsl #1
   10574:	ldr	r6, [pc, r6]
   10578:	ldrh	r0, [r0]
   1057c:	ldr	r1, [pc, #4064]	; 11564 <sfbpf_lex+0x12b8>
   10580:	ldr	r2, [sp, #32]
   10584:	sxth	r0, r0
   10588:	add	r1, pc, r1
   1058c:	str	r2, [r1]
   10590:	sub	r1, r6, r2
   10594:	ldr	r2, [pc, #4092]	; 11598 <sfbpf_lex+0x12ec>
   10598:	add	r2, pc, r2
   1059c:	str	r1, [r2]
   105a0:	ldrb	r1, [r6]
   105a4:	strb	r1, [ip]
   105a8:	mov	r1, #0
   105ac:	strb	r1, [r6]
   105b0:	ldr	r1, [pc, #4092]	; 115b4 <sfbpf_lex+0x1308>
   105b4:	add	r1, pc, r1
   105b8:	str	r6, [r1]
   105bc:	cmp	r0, #146	; 0x92
   105c0:	bhi	116f0 <sfbpf_lex+0x1444>
   105c4:	add	r1, pc, #4
   105c8:	ldr	r0, [r1, r0, lsl #2]
   105cc:	add	pc, r1, r0
   105d0:	.word	0x0000085c
   105d4:	.word	0x00000d04
   105d8:	.word	0x00000ae8
   105dc:	.word	0x00000a58
   105e0:	.word	0x00000a58
   105e4:	.word	0x00000f00
   105e8:	.word	0x00000c78
   105ec:	.word	0x00000d14
   105f0:	.word	0x00000f74
   105f4:	.word	0x0000104c
   105f8:	.word	0x00001044
   105fc:	.word	0x00000c90
   10600:	.word	0x00000e6c
   10604:	.word	0x00000e60
   10608:	.word	0x00000fd4
   1060c:	.word	0x00000d90
   10610:	.word	0x0000102c
   10614:	.word	0x00000e88
   10618:	.word	0x00000e50
   1061c:	.word	0x00000bc8
   10620:	.word	0x00000f60
   10624:	.word	0x00000b60
   10628:	.word	0x00000bf0
   1062c:	.word	0x00000b78
   10630:	.word	0x00000fcc
   10634:	.word	0x00000b48
   10638:	.word	0x00000eb4
   1063c:	.word	0x00000ef8
   10640:	.word	0x00000fc0
   10644:	.word	0x00000a50
   10648:	.word	0x00000a50
   1064c:	.word	0x00000a60
   10650:	.word	0x00000a60
   10654:	.word	0x00000ff8
   10658:	.word	0x00000cfc
   1065c:	.word	0x00000f18
   10660:	.word	0x00000f58
   10664:	.word	0x00000ba0
   10668:	.word	0x00000c88
   1066c:	.word	0x00000e80
   10670:	.word	0x00000b20
   10674:	.word	0x00000ff0
   10678:	.word	0x00000ecc
   1067c:	.word	0x00000d88
   10680:	.word	0x00000da4
   10684:	.word	0x00000e90
   10688:	.word	0x00000dac
   1068c:	.word	0x00000a98
   10690:	.word	0x00000d0c
   10694:	.word	0x00000bb0
   10698:	.word	0x00000b80
   1069c:	.word	0x00000b40
   106a0:	.word	0x00000f28
   106a4:	.word	0x00000c30
   106a8:	.word	0x00000bc0
   106ac:	.word	0x00000b18
   106b0:	.word	0x00000b68
   106b4:	.word	0x00000b10
   106b8:	.word	0x00000b28
   106bc:	.word	0x00000fe8
   106c0:	.word	0x00000af0
   106c4:	.word	0x00000ae0
   106c8:	.word	0x00000cb8
   106cc:	.word	0x00000cd8
   106d0:	.word	0x00000cd0
   106d4:	.word	0x00000ac0
   106d8:	.word	0x00000b08
   106dc:	.word	0x00000d34
   106e0:	.word	0x00000aa0
   106e4:	.word	0x00000aa8
   106e8:	.word	0x00000eec
   106ec:	.word	0x00000cc8
   106f0:	.word	0x00000fb8
   106f4:	.word	0x00000b00
   106f8:	.word	0x00001034
   106fc:	.word	0x00000e58
   10700:	.word	0x00000be0
   10704:	.word	0x00000c10
   10708:	.word	0x00000b90
   1070c:	.word	0x00000bb8
   10710:	.word	0x00000c44
   10714:	.word	0x00000c70
   10718:	.word	0x00000f10
   1071c:	.word	0x00000cb0
   10720:	.word	0x00000b88
   10724:	.word	0x00000f08
   10728:	.word	0x00000c80
   1072c:	.word	0x00001024
   10730:	.word	0x00000af8
   10734:	.word	0x00000ca8
   10738:	.word	0x00000ea8
   1073c:	.word	0x00000ac8
   10740:	.word	0x00000d2c
   10744:	.word	0x00000ab0
   10748:	.word	0x00000fdc
   1074c:	.word	0x00000a38
   10750:	.word	0x00000a38
   10754:	.word	0x00000ab8
   10758:	.word	0x00000c08
   1075c:	.word	0x00000e78
   10760:	.word	0x00000cc0
   10764:	.word	0x00000d98
   10768:	.word	0xfffffe38
   1076c:	.word	0x00001054
   10770:	.word	0x00000d1c
   10774:	.word	0x0000103c
   10778:	.word	0x00000be8
   1077c:	.word	0x00000c18
   10780:	.word	0x00000b70
   10784:	.word	0x00000ba8
   10788:	.word	0x00000c4c
   1078c:	.word	0x00000f98
   10790:	.word	0x00000d50
   10794:	.word	0x00000f34
   10798:	.word	0x00000de0
   1079c:	.word	0x0000114c
   107a0:	.word	0x00000a88
   107a4:	.word	0x00000a28
   107a8:	.word	0x00000a88
   107ac:	.word	0x00000e98
   107b0:	.word	0x00000a18
   107b4:	.word	0x00000bd0
   107b8:	.word	0x00000a68
   107bc:	.word	0x00000bf8
   107c0:	.word	0x00000f7c
   107c4:	.word	0x00000b50
   107c8:	.word	0x00000ed4
   107cc:	.word	0x00000a78
   107d0:	.word	0x00000ebc
   107d4:	.word	0x00000c98
   107d8:	.word	0x00000a40
   107dc:	.word	0x00000ce4
   107e0:	.word	0x00000b30
   107e4:	.word	0x00000a78
   107e8:	.word	0x00000a28
   107ec:	.word	0x00000ad0
   107f0:	.word	0x00000a18
   107f4:	.word	0x00000a68
   107f8:	.word	0x00000a40
   107fc:	.word	0x00000c20
   10800:	.word	0x00000c38
   10804:	.word	0x00001000
   10808:	.word	0x00001100
   1080c:	.word	0x000010e8
   10810:	.word	0x000009dc
   10814:	.word	0x0000024c
   10818:	.word	0x00000b98
   1081c:	ldrb	r0, [ip]
   10820:	ldr	r1, [pc, #4060]	; 11804 <sfbpf_lex+0x1558>
   10824:	ldr	r1, [pc, r1]
   10828:	strb	r0, [r6]
   1082c:	str	r1, [sp]
   10830:	ldr	r2, [pc, #4048]	; 11808 <sfbpf_lex+0x155c>
   10834:	ldr	r2, [pc, r2]
   10838:	ldr	r3, [pc, #4044]	; 1180c <sfbpf_lex+0x1560>
   1083c:	ldr	r3, [pc, r3]
   10840:	str	r2, [sp, #16]
   10844:	ldr	r1, [r3, r2, lsl #2]
   10848:	str	r3, [sp, #28]
   1084c:	ldr	r0, [r1, #44]	; 0x2c
   10850:	cmp	r0, #0
   10854:	beq	10864 <sfbpf_lex+0x5b8>
   10858:	ldr	r2, [pc, #4016]	; 11810 <sfbpf_lex+0x1564>
   1085c:	ldr	r2, [pc, r2]
   10860:	b	108a4 <sfbpf_lex+0x5f8>
   10864:	ldr	r0, [r1, #16]
   10868:	str	r0, [sp, #12]
   1086c:	ldr	r0, [pc, #4000]	; 11814 <sfbpf_lex+0x1568>
   10870:	ldr	r3, [sp, #12]
   10874:	add	r0, pc, r0
   10878:	str	r3, [r0]
   1087c:	mov	r3, r2
   10880:	ldr	r0, [pc, #3984]	; 11818 <sfbpf_lex+0x156c>
   10884:	ldr	r0, [pc, r0]
   10888:	str	r0, [r1]
   1088c:	ldr	r0, [sp, #28]
   10890:	ldr	r1, [r0, r2, lsl #2]
   10894:	mov	r2, #1
   10898:	str	r2, [r1, #44]	; 0x2c
   1089c:	ldr	r2, [sp, #12]
   108a0:	ldr	r1, [r0, r3, lsl #2]
   108a4:	str	r1, [sp, #8]
   108a8:	str	r2, [sp, #12]
   108ac:	ldr	r0, [r1, #4]
   108b0:	ldr	r1, [pc, #3940]	; 1181c <sfbpf_lex+0x1570>
   108b4:	add	r2, r0, r2
   108b8:	ldr	r1, [pc, r1]
   108bc:	str	r1, [sp, #20]
   108c0:	ldr	r1, [pc, #3928]	; 11820 <sfbpf_lex+0x1574>
   108c4:	ldr	r1, [pc, r1]
   108c8:	cmp	r1, r2
   108cc:	bls	10e48 <sfbpf_lex+0xb9c>
   108d0:	add	r2, r2, #1
   108d4:	cmp	r1, r2
   108d8:	bhi	11730 <sfbpf_lex+0x1484>
   108dc:	mov	r3, r1
   108e0:	ldr	r1, [sp, #20]
   108e4:	sub	r1, r3, r1
   108e8:	str	r1, [sp, #24]
   108ec:	ldr	r1, [sp, #8]
   108f0:	ldr	r2, [r1, #40]	; 0x28
   108f4:	cmp	r2, #0
   108f8:	beq	1096c <sfbpf_lex+0x6c0>
   108fc:	ldr	r2, [sp, #24]
   10900:	str	r3, [sp, #4]
   10904:	sub	r1, r2, #1
   10908:	str	r1, [sp, #12]
   1090c:	cmp	r1, #1
   10910:	ldr	r1, [sp, #8]
   10914:	blt	10944 <sfbpf_lex+0x698>
   10918:	ldr	r2, [sp, #20]
   1091c:	ldr	r3, [sp, #4]
   10920:	mvn	r1, r2
   10924:	add	r1, r1, r3
   10928:	ldrb	r3, [r2], #1
   1092c:	subs	r1, r1, #1
   10930:	strb	r3, [r0], #1
   10934:	bne	10928 <sfbpf_lex+0x67c>
   10938:	ldr	r0, [sp, #16]
   1093c:	ldr	r1, [sp, #28]
   10940:	ldr	r1, [r1, r0, lsl #2]
   10944:	ldr	r0, [r1, #44]	; 0x2c
   10948:	cmp	r0, #2
   1094c:	mov	r0, r1
   10950:	bne	1097c <sfbpf_lex+0x6d0>
   10954:	ldr	r2, [pc, #3824]	; 1184c <sfbpf_lex+0x15a0>
   10958:	mov	r1, #0
   1095c:	add	r2, pc, r2
   10960:	str	r1, [r2]
   10964:	str	r1, [r0, #16]
   10968:	b	10c5c <sfbpf_lex+0x9b0>
   1096c:	ldr	r1, [sp, #24]
   10970:	cmp	r1, #1
   10974:	beq	10dfc <sfbpf_lex+0xb50>
   10978:	b	10510 <sfbpf_lex+0x264>
   1097c:	ldr	r3, [r0, #12]
   10980:	ldr	r1, [sp, #24]
   10984:	mov	r7, r0
   10988:	sub	r1, r3, r1
   1098c:	cmp	r1, #0
   10990:	ble	109a0 <sfbpf_lex+0x6f4>
   10994:	ldr	r2, [sp, #28]
   10998:	ldr	ip, [sp, #16]
   1099c:	b	10a30 <sfbpf_lex+0x784>
   109a0:	ldr	r5, [sp, #4]
   109a4:	ldr	r1, [r7, #20]
   109a8:	cmp	r1, #0
   109ac:	beq	11708 <sfbpf_lex+0x145c>
   109b0:	ldr	r0, [r7, #4]
   109b4:	cmp	r3, #0
   109b8:	str	r5, [sp, #28]
   109bc:	ble	109c8 <sfbpf_lex+0x71c>
   109c0:	lsl	r1, r3, #1
   109c4:	b	109d4 <sfbpf_lex+0x728>
   109c8:	asr	r1, r3, #31
   109cc:	add	r1, r3, r1, lsr #29
   109d0:	add	r1, r3, r1, asr #3
   109d4:	str	r1, [r7, #12]
   109d8:	add	r1, r1, #2
   109dc:	mov	r5, r0
   109e0:	bl	e54 <realloc@plt>
   109e4:	cmp	r0, #0
   109e8:	str	r0, [r7, #4]
   109ec:	beq	11710 <sfbpf_lex+0x1464>
   109f0:	ldr	r1, [sp, #28]
   109f4:	sub	r1, r1, r5
   109f8:	add	r5, r0, r1
   109fc:	ldr	r0, [pc, #3664]	; 11854 <sfbpf_lex+0x15a8>
   10a00:	add	r0, pc, r0
   10a04:	str	r5, [r0]
   10a08:	ldr	ip, [pc, #3656]	; 11858 <sfbpf_lex+0x15ac>
   10a0c:	ldr	ip, [pc, ip]
   10a10:	ldr	r2, [pc, #3652]	; 1185c <sfbpf_lex+0x15b0>
   10a14:	ldr	r2, [pc, r2]
   10a18:	ldr	r1, [sp, #24]
   10a1c:	ldr	r7, [r2, ip, lsl #2]
   10a20:	ldr	r3, [r7, #12]
   10a24:	sub	r1, r3, r1
   10a28:	cmp	r1, #1
   10a2c:	blt	109a4 <sfbpf_lex+0x6f8>
   10a30:	ldr	r0, [r7, #24]
   10a34:	cmp	r1, #8192	; 0x2000
   10a38:	movge	r1, #8192	; 0x2000
   10a3c:	mov	r7, r1
   10a40:	cmp	r0, #0
   10a44:	beq	10af8 <sfbpf_lex+0x84c>
   10a48:	ldr	r0, [sp, #20]
   10a4c:	ldr	r1, [sp, #4]
   10a50:	mov	r5, #0
   10a54:	mvn	r0, r0
   10a58:	add	r0, r0, r1
   10a5c:	str	r0, [sp, #28]
   10a60:	ldr	r0, [pc, #3576]	; 11860 <sfbpf_lex+0x15b4>
   10a64:	ldr	r0, [pc, r0]
   10a68:	bl	f80 <getc@plt>
   10a6c:	cmn	r0, #1
   10a70:	cmpne	r0, #10
   10a74:	beq	10aa8 <sfbpf_lex+0x7fc>
   10a78:	ldr	r1, [pc, #3556]	; 11864 <sfbpf_lex+0x15b8>
   10a7c:	ldr	r1, [pc, r1]
   10a80:	ldr	r2, [pc, #3552]	; 11868 <sfbpf_lex+0x15bc>
   10a84:	ldr	r2, [pc, r2]
   10a88:	ldr	r1, [r2, r1, lsl #2]
   10a8c:	ldr	r2, [sp, #28]
   10a90:	ldr	r1, [r1, #4]
   10a94:	add	r1, r1, r2
   10a98:	strb	r0, [r1, r5]
   10a9c:	add	r5, r5, #1
   10aa0:	cmp	r5, r7
   10aa4:	blt	10a60 <sfbpf_lex+0x7b4>
   10aa8:	cmn	r0, #1
   10aac:	beq	10bec <sfbpf_lex+0x940>
   10ab0:	cmp	r0, #10
   10ab4:	bne	10ae4 <sfbpf_lex+0x838>
   10ab8:	ldr	r0, [pc, #3508]	; 11874 <sfbpf_lex+0x15c8>
   10abc:	ldr	r0, [pc, r0]
   10ac0:	ldr	r1, [pc, #3504]	; 11878 <sfbpf_lex+0x15cc>
   10ac4:	ldr	r1, [pc, r1]
   10ac8:	ldr	r0, [r1, r0, lsl #2]
   10acc:	ldr	r1, [sp, #12]
   10ad0:	ldr	r0, [r0, #4]
   10ad4:	add	r0, r0, r1
   10ad8:	mov	r1, #10
   10adc:	strb	r1, [r0, r5]
   10ae0:	add	r5, r5, #1
   10ae4:	ldr	ip, [pc, #3456]	; 1186c <sfbpf_lex+0x15c0>
   10ae8:	ldr	lr, [pc, #3456]	; 11870 <sfbpf_lex+0x15c4>
   10aec:	add	ip, pc, ip
   10af0:	add	lr, pc, lr
   10af4:	b	10c10 <sfbpf_lex+0x964>
   10af8:	str	r7, [sp, #16]
   10afc:	mov	r7, ip
   10b00:	mov	r5, r2
   10b04:	bl	ed8 <__errno_location@plt>
   10b08:	mov	r1, #0
   10b0c:	str	r0, [sp, #28]
   10b10:	str	r1, [r0]
   10b14:	ldr	r1, [sp, #12]
   10b18:	ldr	r0, [r5, r7, lsl #2]
   10b1c:	ldr	r7, [sp, #16]
   10b20:	ldr	r0, [r0, #4]
   10b24:	ldr	r3, [pc, #3424]	; 1188c <sfbpf_lex+0x15e0>
   10b28:	mov	r2, r7
   10b2c:	ldr	r3, [pc, r3]
   10b30:	add	r0, r0, r1
   10b34:	mov	r1, #1
   10b38:	bl	e6c <fread@plt>
   10b3c:	mov	r5, r0
   10b40:	ldr	r0, [pc, #3400]	; 11890 <sfbpf_lex+0x15e4>
   10b44:	cmp	r5, #0
   10b48:	add	r0, pc, r0
   10b4c:	str	r5, [r0]
   10b50:	ldr	ip, [pc, #3388]	; 11894 <sfbpf_lex+0x15e8>
   10b54:	ldr	lr, [pc, #3388]	; 11898 <sfbpf_lex+0x15ec>
   10b58:	add	ip, pc, ip
   10b5c:	add	lr, pc, lr
   10b60:	bne	10c1c <sfbpf_lex+0x970>
   10b64:	mov	r7, r0
   10b68:	ldr	r0, [pc, #3372]	; 1189c <sfbpf_lex+0x15f0>
   10b6c:	ldr	r0, [pc, r0]
   10b70:	bl	e24 <ferror@plt>
   10b74:	cmp	r0, #0
   10b78:	beq	10e14 <sfbpf_lex+0xb68>
   10b7c:	ldr	r1, [sp, #28]
   10b80:	ldr	r0, [r1]
   10b84:	cmp	r0, #4
   10b88:	bne	116e4 <sfbpf_lex+0x1438>
   10b8c:	mov	r0, #0
   10b90:	str	r0, [r1]
   10b94:	ldr	r0, [pc, #3332]	; 118a0 <sfbpf_lex+0x15f4>
   10b98:	ldr	r0, [pc, r0]
   10b9c:	bl	f2c <clearerr@plt>
   10ba0:	ldr	r0, [pc, #3324]	; 118a4 <sfbpf_lex+0x15f8>
   10ba4:	ldr	r0, [pc, r0]
   10ba8:	ldr	r1, [pc, #3320]	; 118a8 <sfbpf_lex+0x15fc>
   10bac:	ldr	r1, [pc, r1]
   10bb0:	ldr	r0, [r1, r0, lsl #2]
   10bb4:	ldr	r1, [sp, #12]
   10bb8:	ldr	r0, [r0, #4]
   10bbc:	ldr	r3, [pc, #3304]	; 118ac <sfbpf_lex+0x1600>
   10bc0:	ldr	r3, [pc, r3]
   10bc4:	ldr	r2, [sp, #16]
   10bc8:	add	r0, r0, r1
   10bcc:	mov	r1, #1
   10bd0:	bl	e6c <fread@plt>
   10bd4:	mov	r5, r0
   10bd8:	mov	r0, r7
   10bdc:	cmp	r5, #0
   10be0:	str	r5, [r7]
   10be4:	beq	10b64 <sfbpf_lex+0x8b8>
   10be8:	b	10e18 <sfbpf_lex+0xb6c>
   10bec:	ldr	r0, [pc, #3208]	; 1187c <sfbpf_lex+0x15d0>
   10bf0:	ldr	r0, [pc, r0]
   10bf4:	bl	e24 <ferror@plt>
   10bf8:	ldr	ip, [pc, #3200]	; 11880 <sfbpf_lex+0x15d4>
   10bfc:	ldr	lr, [pc, #3200]	; 11884 <sfbpf_lex+0x15d8>
   10c00:	cmp	r0, #0
   10c04:	add	ip, pc, ip
   10c08:	add	lr, pc, lr
   10c0c:	bne	116e4 <sfbpf_lex+0x1438>
   10c10:	ldr	r0, [pc, #3184]	; 11888 <sfbpf_lex+0x15dc>
   10c14:	add	r0, pc, r0
   10c18:	str	r5, [r0]
   10c1c:	ldr	r1, [pc, #3220]	; 118b8 <sfbpf_lex+0x160c>
   10c20:	cmp	r5, #0
   10c24:	ldr	r1, [pc, r1]
   10c28:	ldr	r0, [pc, #3212]	; 118bc <sfbpf_lex+0x1610>
   10c2c:	ldr	r0, [pc, r0]
   10c30:	str	r1, [sp, #16]
   10c34:	str	r0, [sp, #28]
   10c38:	ldr	r0, [r0, r1, lsl #2]
   10c3c:	mov	r1, #0
   10c40:	str	r5, [r0, #16]
   10c44:	mov	r0, r5
   10c48:	ldr	r7, [pc, #3184]	; 118c0 <sfbpf_lex+0x1614>
   10c4c:	ldr	r5, [pc, #3184]	; 118c4 <sfbpf_lex+0x1618>
   10c50:	add	r7, pc, r7
   10c54:	add	r5, pc, r5
   10c58:	bne	10cd4 <sfbpf_lex+0xa28>
   10c5c:	ldr	r0, [sp, #12]
   10c60:	cmp	r0, #0
   10c64:	beq	10c84 <sfbpf_lex+0x9d8>
   10c68:	ldr	r0, [sp, #28]
   10c6c:	ldr	r1, [sp, #16]
   10c70:	ldr	r0, [r0, r1, lsl #2]
   10c74:	mov	r1, #2
   10c78:	str	r1, [r0, #44]	; 0x2c
   10c7c:	mov	r0, #0
   10c80:	b	10cd4 <sfbpf_lex+0xa28>
   10c84:	ldr	r0, [pc, #3132]	; 118c8 <sfbpf_lex+0x161c>
   10c88:	mov	r5, ip
   10c8c:	mov	r7, lr
   10c90:	ldr	r0, [pc, r0]
   10c94:	bl	11bf8 <sfbpf_restart>
   10c98:	mov	lr, r7
   10c9c:	ldr	r7, [pc, #3112]	; 118cc <sfbpf_lex+0x1620>
   10ca0:	mov	ip, r5
   10ca4:	ldr	r5, [pc, #3108]	; 118d0 <sfbpf_lex+0x1624>
   10ca8:	ldr	r0, [pc, #3108]	; 118d4 <sfbpf_lex+0x1628>
   10cac:	mov	r1, #1
   10cb0:	ldr	r0, [pc, r0]
   10cb4:	add	r7, pc, r7
   10cb8:	add	r5, pc, r5
   10cbc:	str	r0, [sp, #16]
   10cc0:	ldr	r0, [pc, #3088]	; 118d8 <sfbpf_lex+0x162c>
   10cc4:	ldr	r0, [pc, r0]
   10cc8:	str	r0, [sp, #28]
   10ccc:	ldr	r0, [pc, #3080]	; 118dc <sfbpf_lex+0x1630>
   10cd0:	ldr	r0, [pc, r0]
   10cd4:	str	r1, [sp, #8]
   10cd8:	mov	r1, r0
   10cdc:	ldr	r0, [sp, #12]
   10ce0:	ldr	r2, [sp, #16]
   10ce4:	str	r1, [sp, #20]
   10ce8:	add	r0, r1, r0
   10cec:	ldr	r1, [sp, #28]
   10cf0:	mov	r3, r2
   10cf4:	ldr	r1, [r1, r2, lsl #2]
   10cf8:	ldr	r2, [r1, #12]
   10cfc:	cmp	r0, r2
   10d00:	ble	10d8c <sfbpf_lex+0xae0>
   10d04:	ldr	r2, [sp, #20]
   10d08:	mov	r5, ip
   10d0c:	add	r7, r0, r2, asr #1
   10d10:	ldr	r0, [r1, #4]
   10d14:	mov	r1, r7
   10d18:	bl	e54 <realloc@plt>
   10d1c:	ldr	r2, [pc, #3004]	; 118e0 <sfbpf_lex+0x1634>
   10d20:	ldr	r2, [pc, r2]
   10d24:	ldr	r3, [pc, #3000]	; 118e4 <sfbpf_lex+0x1638>
   10d28:	ldr	r3, [pc, r3]
   10d2c:	ldr	r1, [r3, r2, lsl #2]
   10d30:	str	r0, [r1, #4]
   10d34:	ldr	r0, [r3, r2, lsl #2]
   10d38:	ldr	r1, [r0, #4]
   10d3c:	cmp	r1, #0
   10d40:	beq	116fc <sfbpf_lex+0x1450>
   10d44:	sub	r1, r7, #2
   10d48:	mov	ip, r5
   10d4c:	str	r1, [r0, #12]
   10d50:	ldr	r1, [r3, r2, lsl #2]
   10d54:	ldr	r7, [pc, #2956]	; 118e8 <sfbpf_lex+0x163c>
   10d58:	ldr	r7, [pc, r7]
   10d5c:	ldr	r0, [sp, #12]
   10d60:	str	r7, [sp, #20]
   10d64:	add	r0, r7, r0
   10d68:	ldr	lr, [pc, #2940]	; 118ec <sfbpf_lex+0x1640>
   10d6c:	ldr	r7, [pc, #2940]	; 118f0 <sfbpf_lex+0x1644>
   10d70:	ldr	r5, [pc, #2940]	; 118f4 <sfbpf_lex+0x1648>
   10d74:	str	r3, [sp, #28]
   10d78:	str	r2, [sp, #16]
   10d7c:	add	lr, pc, lr
   10d80:	add	r7, pc, r7
   10d84:	add	r5, pc, r5
   10d88:	b	10d90 <sfbpf_lex+0xae4>
   10d8c:	str	r3, [sp, #16]
   10d90:	ldr	r2, [pc, #2912]	; 118f8 <sfbpf_lex+0x164c>
   10d94:	ldr	r3, [sp, #16]
   10d98:	add	r2, pc, r2
   10d9c:	str	r0, [r2]
   10da0:	mov	r2, #0
   10da4:	ldr	r1, [r1, #4]
   10da8:	strb	r2, [r1, r0]
   10dac:	ldr	r0, [sp, #20]
   10db0:	ldr	r1, [sp, #24]
   10db4:	mov	r2, #0
   10db8:	add	r0, r0, r1
   10dbc:	str	r0, [sp, #24]
   10dc0:	ldr	r0, [sp, #28]
   10dc4:	ldr	r1, [r0, r3, lsl #2]
   10dc8:	ldr	r0, [sp, #24]
   10dcc:	ldr	r1, [r1, #4]
   10dd0:	strb	r2, [r1, r0]
   10dd4:	ldr	r0, [sp, #28]
   10dd8:	ldr	r0, [r0, r3, lsl #2]
   10ddc:	ldr	r1, [r0, #4]
   10de0:	ldr	r0, [pc, #2836]	; 118fc <sfbpf_lex+0x1650>
   10de4:	add	r0, pc, r0
   10de8:	str	r1, [sp, #20]
   10dec:	str	r1, [r0]
   10df0:	ldr	r0, [sp, #8]
   10df4:	cmp	r0, #1
   10df8:	bne	10f2c <sfbpf_lex+0xc80>
   10dfc:	ldr	r0, [pc, #2628]	; 11848 <sfbpf_lex+0x159c>
   10e00:	ldr	r1, [sp, #20]
   10e04:	add	r0, pc, r0
   10e08:	str	r1, [r0]
   10e0c:	mov	r0, #146	; 0x92
   10e10:	b	105bc <sfbpf_lex+0x310>
   10e14:	mov	r5, #0
   10e18:	ldr	ip, [pc, #2704]	; 118b0 <sfbpf_lex+0x1604>
   10e1c:	ldr	lr, [pc, #2704]	; 118b4 <sfbpf_lex+0x1608>
   10e20:	add	ip, pc, ip
   10e24:	add	lr, pc, lr
   10e28:	b	10c1c <sfbpf_lex+0x970>
   10e2c:	ldrb	r0, [ip]
   10e30:	strb	r0, [r6]
   10e34:	ldr	r0, [pc, #2324]	; 11750 <sfbpf_lex+0x14a4>
   10e38:	ldr	r0, [pc, r0]
   10e3c:	ldr	r6, [pc, #2320]	; 11754 <sfbpf_lex+0x14a8>
   10e40:	ldr	r6, [pc, r6]
   10e44:	b	10554 <sfbpf_lex+0x2a8>
   10e48:	ldr	r0, [sp]
   10e4c:	ldr	r1, [sp, #20]
   10e50:	mov	r7, ip
   10e54:	mvn	r0, r0
   10e58:	add	r0, r0, r6
   10e5c:	add	r6, r1, r0
   10e60:	ldr	r0, [pc, #2492]	; 11824 <sfbpf_lex+0x1578>
   10e64:	add	r0, pc, r0
   10e68:	str	r6, [r0]
   10e6c:	bl	11a80 <yy_get_previous_state>
   10e70:	add	r1, r5, r0, lsl #1
   10e74:	ldrh	r1, [r1]
   10e78:	cmp	r1, #0
   10e7c:	beq	10e98 <sfbpf_lex+0xbec>
   10e80:	ldr	r1, [pc, #2464]	; 11828 <sfbpf_lex+0x157c>
   10e84:	add	r1, pc, r1
   10e88:	str	r6, [r1]
   10e8c:	ldr	r1, [pc, #2456]	; 1182c <sfbpf_lex+0x1580>
   10e90:	add	r1, pc, r1
   10e94:	str	r0, [r1]
   10e98:	add	r1, sl, r0, lsl #1
   10e9c:	ldr	lr, [pc, #2444]	; 11830 <sfbpf_lex+0x1584>
   10ea0:	mov	ip, r7
   10ea4:	ldrsh	r1, [r1]
   10ea8:	add	lr, pc, lr
   10eac:	add	r1, r1, #1
   10eb0:	add	r2, r4, r1, lsl #1
   10eb4:	ldrsh	r2, [r2]
   10eb8:	cmp	r0, r2
   10ebc:	beq	10eec <sfbpf_lex+0xc40>
   10ec0:	mov	r2, r0
   10ec4:	add	r1, r9, r2, lsl #1
   10ec8:	ldrh	r3, [r1]
   10ecc:	sxth	r2, r3
   10ed0:	add	r1, sl, r2, lsl #1
   10ed4:	ldrsh	r1, [r1]
   10ed8:	add	r1, r1, #1
   10edc:	add	r7, r4, r1, lsl #1
   10ee0:	ldrh	r7, [r7]
   10ee4:	cmp	r3, r7
   10ee8:	bne	10ec4 <sfbpf_lex+0xc18>
   10eec:	ldr	r2, [pc, #2368]	; 11834 <sfbpf_lex+0x1588>
   10ef0:	add	r2, pc, r2
   10ef4:	add	r1, r2, r1, lsl #1
   10ef8:	ldr	r2, [pc, #2360]	; 11838 <sfbpf_lex+0x158c>
   10efc:	ldrh	r1, [r1]
   10f00:	ldr	r2, [pc, r2]
   10f04:	cmp	r1, #0
   10f08:	str	r2, [sp, #32]
   10f0c:	movwne	r2, #1433	; 0x599
   10f10:	ldr	r7, [pc, #2340]	; 1183c <sfbpf_lex+0x1590>
   10f14:	ldr	r5, [pc, #2340]	; 11840 <sfbpf_lex+0x1594>
   10f18:	cmpne	r1, r2
   10f1c:	add	r7, pc, r7
   10f20:	add	r5, pc, r5
   10f24:	beq	10554 <sfbpf_lex+0x2a8>
   10f28:	b	10f94 <sfbpf_lex+0xce8>
   10f2c:	cmp	r0, #0
   10f30:	beq	10f40 <sfbpf_lex+0xc94>
   10f34:	cmp	r0, #2
   10f38:	bne	10408 <sfbpf_lex+0x15c>
   10f3c:	b	104ec <sfbpf_lex+0x240>
   10f40:	ldr	r0, [sp]
   10f44:	ldr	r1, [sp, #20]
   10f48:	mov	r5, ip
   10f4c:	mov	r7, lr
   10f50:	mvn	r0, r0
   10f54:	add	r0, r0, r6
   10f58:	add	r6, r1, r0
   10f5c:	ldr	r0, [pc, #2484]	; 11918 <sfbpf_lex+0x166c>
   10f60:	add	r0, pc, r0
   10f64:	str	r6, [r0]
   10f68:	bl	11a80 <yy_get_previous_state>
   10f6c:	mov	lr, r7
   10f70:	ldr	r7, [pc, #2468]	; 1191c <sfbpf_lex+0x1670>
   10f74:	mov	ip, r5
   10f78:	ldr	r5, [pc, #2464]	; 11920 <sfbpf_lex+0x1674>
   10f7c:	ldr	r1, [pc, #2464]	; 11924 <sfbpf_lex+0x1678>
   10f80:	ldr	r1, [pc, r1]
   10f84:	add	r7, pc, r7
   10f88:	add	r5, pc, r5
   10f8c:	str	r1, [sp, #32]
   10f90:	b	10420 <sfbpf_lex+0x174>
   10f94:	sxth	r0, r1
   10f98:	ldr	r1, [pc, #2212]	; 11844 <sfbpf_lex+0x1598>
   10f9c:	add	r6, r6, #1
   10fa0:	add	r1, pc, r1
   10fa4:	str	r6, [r1]
   10fa8:	b	10420 <sfbpf_lex+0x174>
   10fac:	ldr	r3, [pc, #2112]	; 117f4 <sfbpf_lex+0x1548>
   10fb0:	mov	r2, #1
   10fb4:	mov	r5, ip
   10fb8:	mov	r6, lr
   10fbc:	ldr	r3, [pc, r3]
   10fc0:	ldr	r1, [pc, #2096]	; 117f8 <sfbpf_lex+0x154c>
   10fc4:	ldr	r1, [pc, r1]
   10fc8:	ldr	r0, [pc, #2092]	; 117fc <sfbpf_lex+0x1550>
   10fcc:	ldr	r0, [pc, r0]
   10fd0:	bl	e60 <fwrite@plt>
   10fd4:	mov	ip, r5
   10fd8:	ldr	r5, [pc, #2080]	; 11800 <sfbpf_lex+0x1554>
   10fdc:	mov	lr, r6
   10fe0:	add	r5, pc, r5
   10fe4:	b	10408 <sfbpf_lex+0x15c>
   10fe8:	ldr	r0, [pc, #2008]	; 117c8 <sfbpf_lex+0x151c>
   10fec:	mov	r1, #4
   10ff0:	ldr	r0, [pc, r0]
   10ff4:	b	116a8 <sfbpf_lex+0x13fc>
   10ff8:	ldr	r0, [pc, #1984]	; 117c0 <sfbpf_lex+0x1514>
   10ffc:	mov	r1, #1
   11000:	ldr	r0, [pc, r0]
   11004:	b	116a8 <sfbpf_lex+0x13fc>
   11008:	movw	r0, #357	; 0x165
   1100c:	b	116b0 <sfbpf_lex+0x1404>
   11010:	ldr	r0, [pc, #1976]	; 117d0 <sfbpf_lex+0x1524>
   11014:	mov	r1, #16
   11018:	ldr	r0, [pc, r0]
   1101c:	b	116a8 <sfbpf_lex+0x13fc>
   11020:	mov	r0, #328	; 0x148
   11024:	b	116b0 <sfbpf_lex+0x1404>
   11028:	movw	r0, #307	; 0x133
   1102c:	b	116b0 <sfbpf_lex+0x1404>
   11030:	movw	r0, #330	; 0x14a
   11034:	b	116b0 <sfbpf_lex+0x1404>
   11038:	ldr	r0, [pc, #1932]	; 117cc <sfbpf_lex+0x1520>
   1103c:	mov	r1, #8
   11040:	ldr	r0, [pc, r0]
   11044:	b	116a8 <sfbpf_lex+0x13fc>
   11048:	ldr	r0, [pc, #1900]	; 117bc <sfbpf_lex+0x1510>
   1104c:	mov	r1, #13
   11050:	ldr	r0, [pc, r0]
   11054:	b	116a8 <sfbpf_lex+0x13fc>
   11058:	ldr	r0, [pc, #1840]	; 11790 <sfbpf_lex+0x14e4>
   1105c:	mov	r1, #0
   11060:	ldr	r0, [pc, r0]
   11064:	b	116a8 <sfbpf_lex+0x13fc>
   11068:	mov	r0, #264	; 0x108
   1106c:	b	116b0 <sfbpf_lex+0x1404>
   11070:	mov	r0, #292	; 0x124
   11074:	b	116b0 <sfbpf_lex+0x1404>
   11078:	movw	r0, #293	; 0x125
   1107c:	b	116b0 <sfbpf_lex+0x1404>
   11080:	movw	r0, #299	; 0x12b
   11084:	b	116b0 <sfbpf_lex+0x1404>
   11088:	movw	r0, #358	; 0x166
   1108c:	b	116b0 <sfbpf_lex+0x1404>
   11090:	movw	r0, #363	; 0x16b
   11094:	b	116b0 <sfbpf_lex+0x1404>
   11098:	movw	r0, #297	; 0x129
   1109c:	b	116b0 <sfbpf_lex+0x1404>
   110a0:	ldr	r0, [pc, #1820]	; 117c4 <sfbpf_lex+0x1518>
   110a4:	mov	r1, #2
   110a8:	ldr	r0, [pc, r0]
   110ac:	b	116a8 <sfbpf_lex+0x13fc>
   110b0:	movw	r0, #270	; 0x10e
   110b4:	b	116b0 <sfbpf_lex+0x1404>
   110b8:	movw	r0, #259	; 0x103
   110bc:	b	116b0 <sfbpf_lex+0x1404>
   110c0:	movw	r0, #267	; 0x10b
   110c4:	b	116b0 <sfbpf_lex+0x1404>
   110c8:	movw	r0, #294	; 0x126
   110cc:	b	116b0 <sfbpf_lex+0x1404>
   110d0:	movw	r0, #326	; 0x146
   110d4:	b	116b0 <sfbpf_lex+0x1404>
   110d8:	mov	r0, #33	; 0x21
   110dc:	b	116b0 <sfbpf_lex+0x1404>
   110e0:	movw	r0, #305	; 0x131
   110e4:	b	116b0 <sfbpf_lex+0x1404>
   110e8:	movw	r0, #303	; 0x12f
   110ec:	b	116b0 <sfbpf_lex+0x1404>
   110f0:	movw	r0, #329	; 0x149
   110f4:	b	116b0 <sfbpf_lex+0x1404>
   110f8:	movw	r0, #306	; 0x132
   110fc:	b	116b0 <sfbpf_lex+0x1404>
   11100:	ldr	r0, [pc, #1712]	; 117b8 <sfbpf_lex+0x150c>
   11104:	mov	r1, #18
   11108:	ldr	r0, [pc, r0]
   1110c:	b	116a8 <sfbpf_lex+0x13fc>
   11110:	movw	r0, #261	; 0x105
   11114:	b	116b0 <sfbpf_lex+0x1404>
   11118:	movw	r0, #286	; 0x11e
   1111c:	b	116b0 <sfbpf_lex+0x1404>
   11120:	ldr	r0, [pc, #1660]	; 117a4 <sfbpf_lex+0x14f8>
   11124:	mov	r1, #11
   11128:	ldr	r0, [pc, r0]
   1112c:	b	116a8 <sfbpf_lex+0x13fc>
   11130:	movw	r0, #282	; 0x11a
   11134:	b	116b0 <sfbpf_lex+0x1404>
   11138:	mov	r0, #304	; 0x130
   1113c:	b	116b0 <sfbpf_lex+0x1404>
   11140:	mov	r0, #316	; 0x13c
   11144:	b	116b0 <sfbpf_lex+0x1404>
   11148:	mov	r0, #284	; 0x11c
   1114c:	b	116b0 <sfbpf_lex+0x1404>
   11150:	movw	r0, #269	; 0x10d
   11154:	b	116b0 <sfbpf_lex+0x1404>
   11158:	movw	r0, #353	; 0x161
   1115c:	b	116b0 <sfbpf_lex+0x1404>
   11160:	movw	r0, #349	; 0x15d
   11164:	b	116b0 <sfbpf_lex+0x1404>
   11168:	mov	r0, #0
   1116c:	b	116b0 <sfbpf_lex+0x1404>
   11170:	movw	r0, #335	; 0x14f
   11174:	b	116b0 <sfbpf_lex+0x1404>
   11178:	movw	r0, #317	; 0x13d
   1117c:	b	116b0 <sfbpf_lex+0x1404>
   11180:	mov	r0, #268	; 0x10c
   11184:	b	116b0 <sfbpf_lex+0x1404>
   11188:	movw	r0, #350	; 0x15e
   1118c:	b	116b0 <sfbpf_lex+0x1404>
   11190:	movw	r0, #302	; 0x12e
   11194:	b	116b0 <sfbpf_lex+0x1404>
   11198:	movw	r0, #321	; 0x141
   1119c:	b	116b0 <sfbpf_lex+0x1404>
   111a0:	ldr	r0, [pc, #1520]	; 11798 <sfbpf_lex+0x14ec>
   111a4:	mov	r1, #5
   111a8:	ldr	r0, [pc, r0]
   111ac:	b	116a8 <sfbpf_lex+0x13fc>
   111b0:	movw	r0, #343	; 0x157
   111b4:	b	116b0 <sfbpf_lex+0x1404>
   111b8:	movw	r0, #310	; 0x136
   111bc:	b	116b0 <sfbpf_lex+0x1404>
   111c0:	movw	r0, #283	; 0x11b
   111c4:	b	116b0 <sfbpf_lex+0x1404>
   111c8:	ldr	r0, [pc, #1484]	; 1179c <sfbpf_lex+0x14f0>
   111cc:	mov	r1, #9
   111d0:	ldr	r0, [pc, r0]
   111d4:	b	116a8 <sfbpf_lex+0x13fc>
   111d8:	movw	r0, #359	; 0x167
   111dc:	b	116b0 <sfbpf_lex+0x1404>
   111e0:	mov	r0, #344	; 0x158
   111e4:	b	116b0 <sfbpf_lex+0x1404>
   111e8:	mov	r0, #61	; 0x3d
   111ec:	b	116b0 <sfbpf_lex+0x1404>
   111f0:	ldr	r0, [pc, #1500]	; 117d4 <sfbpf_lex+0x1528>
   111f4:	mov	r1, #32
   111f8:	ldr	r0, [pc, r0]
   111fc:	b	116a8 <sfbpf_lex+0x13fc>
   11200:	movw	r0, #301	; 0x12d
   11204:	b	116b0 <sfbpf_lex+0x1404>
   11208:	ldr	r0, [pc, #1480]	; 117d8 <sfbpf_lex+0x152c>
   1120c:	ldr	r0, [pc, r0]
   11210:	b	115dc <sfbpf_lex+0x1330>
   11214:	movw	r0, #347	; 0x15b
   11218:	b	116b0 <sfbpf_lex+0x1404>
   1121c:	ldr	r0, [pc, #1336]	; 1175c <sfbpf_lex+0x14b0>
   11220:	ldr	r0, [pc, r0]
   11224:	add	r0, r0, #1
   11228:	bl	bf40 <pcap_ether_aton>
   1122c:	ldr	r1, [pc, #1324]	; 11760 <sfbpf_lex+0x14b4>
   11230:	ldr	r1, [pc, r1]
   11234:	str	r0, [r1]
   11238:	movw	r0, #315	; 0x13b
   1123c:	b	116b0 <sfbpf_lex+0x1404>
   11240:	mov	r0, #348	; 0x15c
   11244:	b	116b0 <sfbpf_lex+0x1404>
   11248:	mov	r0, #272	; 0x110
   1124c:	b	116b0 <sfbpf_lex+0x1404>
   11250:	movw	r0, #351	; 0x15f
   11254:	b	116b0 <sfbpf_lex+0x1404>
   11258:	mov	r0, #336	; 0x150
   1125c:	b	116b0 <sfbpf_lex+0x1404>
   11260:	movw	r0, #277	; 0x115
   11264:	b	116b0 <sfbpf_lex+0x1404>
   11268:	ldr	r0, [pc, #1344]	; 117b0 <sfbpf_lex+0x1504>
   1126c:	mov	r1, #15
   11270:	ldr	r0, [pc, r0]
   11274:	b	116a8 <sfbpf_lex+0x13fc>
   11278:	movw	r0, #295	; 0x127
   1127c:	b	116b0 <sfbpf_lex+0x1404>
   11280:	movw	r0, #346	; 0x15a
   11284:	b	116b0 <sfbpf_lex+0x1404>
   11288:	movw	r0, #289	; 0x121
   1128c:	b	116b0 <sfbpf_lex+0x1404>
   11290:	movw	r0, #361	; 0x169
   11294:	b	116b0 <sfbpf_lex+0x1404>
   11298:	mov	r0, #324	; 0x144
   1129c:	b	116b0 <sfbpf_lex+0x1404>
   112a0:	mov	r0, #364	; 0x16c
   112a4:	b	116b0 <sfbpf_lex+0x1404>
   112a8:	movw	r0, #290	; 0x122
   112ac:	b	116b0 <sfbpf_lex+0x1404>
   112b0:	.word	0x000206bc
   112b4:	ldr	r0, [pc, #1272]	; 117b4 <sfbpf_lex+0x1508>
   112b8:	mov	r1, #17
   112bc:	ldr	r0, [pc, r0]
   112c0:	b	116a8 <sfbpf_lex+0x13fc>
   112c4:	.word	0x000206bc
   112c8:	.word	0x000206a8
   112cc:	mov	r0, #332	; 0x14c
   112d0:	b	116b0 <sfbpf_lex+0x1404>
   112d4:	movw	r0, #258	; 0x102
   112d8:	b	116b0 <sfbpf_lex+0x1404>
   112dc:	movw	r0, #265	; 0x109
   112e0:	b	116b0 <sfbpf_lex+0x1404>
   112e4:	movw	r0, #273	; 0x111
   112e8:	b	116b0 <sfbpf_lex+0x1404>
   112ec:	mov	r0, #308	; 0x134
   112f0:	b	116b0 <sfbpf_lex+0x1404>
   112f4:	.word	0x00020678
   112f8:	.word	0x0002066c
   112fc:	movw	r0, #298	; 0x12a
   11300:	b	116b0 <sfbpf_lex+0x1404>
   11304:	movw	r0, #318	; 0x13e
   11308:	b	116b0 <sfbpf_lex+0x1404>
   1130c:	.word	0x0001fdac
   11310:	.word	0x00020654
   11314:	.word	0x0001fd90
   11318:	.word	0x00020638
   1131c:	.word	0x0002063c
   11320:	ldr	r0, [pc, #1092]	; 1176c <sfbpf_lex+0x14c0>
   11324:	ldr	r0, [pc, r0]
   11328:	ldrb	r5, [r0]
   1132c:	cmp	r5, #48	; 0x30
   11330:	bne	11634 <sfbpf_lex+0x1388>
   11334:	mov	r1, r0
   11338:	ldrb	r5, [r1, #1]!
   1133c:	orr	r2, r5, #32
   11340:	cmp	r2, #120	; 0x78
   11344:	bne	1163c <sfbpf_lex+0x1390>
   11348:	ldrb	r5, [r0, #2]!
   1134c:	mov	r4, #16
   11350:	b	11644 <sfbpf_lex+0x1398>
   11354:	.word	0x00020630
   11358:	mov	r0, #340	; 0x154
   1135c:	b	116b0 <sfbpf_lex+0x1404>
   11360:	movw	r0, #281	; 0x119
   11364:	b	116b0 <sfbpf_lex+0x1404>
   11368:	movw	r0, #362	; 0x16a
   1136c:	b	116b0 <sfbpf_lex+0x1404>
   11370:	.word	0x000205f4
   11374:	mov	r0, #260	; 0x104
   11378:	b	116b0 <sfbpf_lex+0x1404>
   1137c:	movw	r0, #263	; 0x107
   11380:	b	116b0 <sfbpf_lex+0x1404>
   11384:	.word	0x000205f4
   11388:	.word	0x000205f0
   1138c:	.word	0x000205f4
   11390:	.word	0x0002062c
   11394:	.word	0x000205c8
   11398:	.word	0x00004f00
   1139c:	.word	0x00004ffc
   113a0:	.word	0x0000956a
   113a4:	.word	0x00005b28
   113a8:	.word	0x0000a42e
   113ac:	.word	0x00020578
   113b0:	vmov.i32	q8, #0	; 0x00000000
   113b4:	add	r2, sp, #40	; 0x28
   113b8:	add	r3, sp, #36	; 0x24
   113bc:	mov	r1, #0
   113c0:	add	r0, r2, #8
   113c4:	vst1.64	{d16-d17}, [r0]
   113c8:	mov	r0, #0
   113cc:	str	r0, [sp, #68]	; 0x44
   113d0:	str	r0, [sp, #64]	; 0x40
   113d4:	mov	r0, #10
   113d8:	str	r0, [sp, #44]	; 0x2c
   113dc:	mov	r0, #4
   113e0:	str	r0, [sp, #40]	; 0x28
   113e4:	ldr	r0, [pc, #912]	; 1177c <sfbpf_lex+0x14d0>
   113e8:	ldr	r0, [pc, r0]
   113ec:	bl	f50 <getaddrinfo@plt>
   113f0:	cmp	r0, #0
   113f4:	bne	1173c <sfbpf_lex+0x1490>
   113f8:	ldr	r0, [sp, #36]	; 0x24
   113fc:	bl	f44 <freeaddrinfo@plt>
   11400:	ldr	r0, [pc, #888]	; 11780 <sfbpf_lex+0x14d4>
   11404:	ldr	r0, [pc, r0]
   11408:	bl	1f80 <sf_sdup>
   1140c:	ldr	r1, [pc, #880]	; 11784 <sfbpf_lex+0x14d8>
   11410:	ldr	r1, [pc, r1]
   11414:	str	r0, [r1]
   11418:	movw	r0, #314	; 0x13a
   1141c:	b	116b0 <sfbpf_lex+0x1404>
   11420:	mov	r0, #320	; 0x140
   11424:	b	116b0 <sfbpf_lex+0x1404>
   11428:	movw	r0, #342	; 0x156
   1142c:	b	116b0 <sfbpf_lex+0x1404>
   11430:	movw	r0, #279	; 0x117
   11434:	b	116b0 <sfbpf_lex+0x1404>
   11438:	.word	0x00020558
   1143c:	movw	r0, #278	; 0x116
   11440:	b	116b0 <sfbpf_lex+0x1404>
   11444:	.word	0x00020548
   11448:	mov	r0, #360	; 0x168
   1144c:	b	116b0 <sfbpf_lex+0x1404>
   11450:	movw	r0, #337	; 0x151
   11454:	b	116b0 <sfbpf_lex+0x1404>
   11458:	movw	r0, #319	; 0x13f
   1145c:	b	116b0 <sfbpf_lex+0x1404>
   11460:	movw	r0, #262	; 0x106
   11464:	b	116b0 <sfbpf_lex+0x1404>
   11468:	ldr	r0, [pc, #804]	; 11794 <sfbpf_lex+0x14e8>
   1146c:	mov	r1, #3
   11470:	ldr	r0, [pc, r0]
   11474:	b	116a8 <sfbpf_lex+0x13fc>
   11478:	mov	r0, #296	; 0x128
   1147c:	b	116b0 <sfbpf_lex+0x1404>
   11480:	.word	0x0000b27a
   11484:	movw	r0, #287	; 0x11f
   11488:	b	116b0 <sfbpf_lex+0x1404>
   1148c:	ldr	r0, [pc, #792]	; 117ac <sfbpf_lex+0x1500>
   11490:	mov	r1, #14
   11494:	ldr	r0, [pc, r0]
   11498:	b	116a8 <sfbpf_lex+0x13fc>
   1149c:	movw	r0, #339	; 0x153
   114a0:	b	116b0 <sfbpf_lex+0x1404>
   114a4:	ldr	r0, [pc, #764]	; 117a8 <sfbpf_lex+0x14fc>
   114a8:	mov	r1, #12
   114ac:	ldr	r0, [pc, r0]
   114b0:	b	116a8 <sfbpf_lex+0x13fc>
   114b4:	.word	0x00004e3c
   114b8:	.word	0x00004f38
   114bc:	movw	r0, #323	; 0x143
   114c0:	b	116b0 <sfbpf_lex+0x1404>
   114c4:	.word	0x0000b268
   114c8:	mov	r0, #288	; 0x120
   114cc:	b	116b0 <sfbpf_lex+0x1404>
   114d0:	movw	r0, #271	; 0x10f
   114d4:	b	116b0 <sfbpf_lex+0x1404>
   114d8:	movw	r0, #354	; 0x162
   114dc:	b	116b0 <sfbpf_lex+0x1404>
   114e0:	movw	r0, #345	; 0x159
   114e4:	b	116b0 <sfbpf_lex+0x1404>
   114e8:	movw	r0, #333	; 0x14d
   114ec:	b	116b0 <sfbpf_lex+0x1404>
   114f0:	.word	0x00020494
   114f4:	.word	0x00020488
   114f8:	mov	r0, #300	; 0x12c
   114fc:	b	116b0 <sfbpf_lex+0x1404>
   11500:	.word	0x00020490
   11504:	ldr	r0, [pc, #616]	; 11774 <sfbpf_lex+0x14c8>
   11508:	ldr	r0, [pc, r0]
   1150c:	bl	1f80 <sf_sdup>
   11510:	ldr	r1, [pc, #608]	; 11778 <sfbpf_lex+0x14cc>
   11514:	ldr	r1, [pc, r1]
   11518:	str	r0, [r1]
   1151c:	movw	r0, #313	; 0x139
   11520:	b	116b0 <sfbpf_lex+0x1404>
   11524:	.word	0x00020464
   11528:	movw	r0, #334	; 0x14e
   1152c:	b	116b0 <sfbpf_lex+0x1404>
   11530:	movw	r0, #322	; 0x142
   11534:	b	116b0 <sfbpf_lex+0x1404>
   11538:	.word	0x00004dac
   1153c:	.word	0x00004ea8
   11540:	.word	0x0002049c
   11544:	movw	r0, #274	; 0x112
   11548:	b	116b0 <sfbpf_lex+0x1404>
   1154c:	ldr	r0, [pc, #588]	; 117a0 <sfbpf_lex+0x14f4>
   11550:	mov	r1, #10
   11554:	ldr	r0, [pc, r0]
   11558:	b	116a8 <sfbpf_lex+0x13fc>
   1155c:	.word	0x00020428
   11560:	.word	0x00020420
   11564:	.word	0x00020458
   11568:	ldr	r0, [pc, #500]	; 11764 <sfbpf_lex+0x14b8>
   1156c:	ldr	r0, [pc, r0]
   11570:	bl	bf40 <pcap_ether_aton>
   11574:	ldr	r1, [pc, #492]	; 11768 <sfbpf_lex+0x14bc>
   11578:	ldr	r1, [pc, r1]
   1157c:	str	r0, [r1]
   11580:	mov	r0, #312	; 0x138
   11584:	b	116b0 <sfbpf_lex+0x1404>
   11588:	movw	r0, #325	; 0x145
   1158c:	b	116b0 <sfbpf_lex+0x1404>
   11590:	movw	r0, #327	; 0x147
   11594:	b	116b0 <sfbpf_lex+0x1404>
   11598:	.word	0x00020444
   1159c:	movw	r0, #285	; 0x11d
   115a0:	b	116b0 <sfbpf_lex+0x1404>
   115a4:	mov	r0, #280	; 0x118
   115a8:	b	116b0 <sfbpf_lex+0x1404>
   115ac:	mov	r0, #356	; 0x164
   115b0:	b	116b0 <sfbpf_lex+0x1404>
   115b4:	.word	0x000203d4
   115b8:	movw	r0, #266	; 0x10a
   115bc:	b	116b0 <sfbpf_lex+0x1404>
   115c0:	movw	r0, #338	; 0x152
   115c4:	b	116b0 <sfbpf_lex+0x1404>
   115c8:	movw	r0, #331	; 0x14b
   115cc:	b	116b0 <sfbpf_lex+0x1404>
   115d0:	ldr	r0, [pc, #520]	; 117e0 <sfbpf_lex+0x1534>
   115d4:	ldr	r0, [pc, r0]
   115d8:	add	r0, r0, #1
   115dc:	bl	1f80 <sf_sdup>
   115e0:	ldr	r1, [pc, #500]	; 117dc <sfbpf_lex+0x1530>
   115e4:	ldr	r1, [pc, r1]
   115e8:	str	r0, [r1]
   115ec:	movw	r0, #311	; 0x137
   115f0:	b	116b0 <sfbpf_lex+0x1404>
   115f4:	mov	r0, #352	; 0x160
   115f8:	b	116b0 <sfbpf_lex+0x1404>
   115fc:	movw	r0, #355	; 0x163
   11600:	b	116b0 <sfbpf_lex+0x1404>
   11604:	movw	r0, #341	; 0x155
   11608:	b	116b0 <sfbpf_lex+0x1404>
   1160c:	movw	r0, #309	; 0x135
   11610:	b	116b0 <sfbpf_lex+0x1404>
   11614:	mov	r0, #276	; 0x114
   11618:	b	116b0 <sfbpf_lex+0x1404>
   1161c:	movw	r0, #275	; 0x113
   11620:	b	116b0 <sfbpf_lex+0x1404>
   11624:	ldr	r0, [pc, #300]	; 11758 <sfbpf_lex+0x14ac>
   11628:	ldr	r0, [pc, r0]
   1162c:	ldrb	r0, [r0]
   11630:	b	116b0 <sfbpf_lex+0x1404>
   11634:	mov	r4, #10
   11638:	b	11644 <sfbpf_lex+0x1398>
   1163c:	mov	r4, #8
   11640:	mov	r0, r1
   11644:	cmp	r5, #0
   11648:	beq	1169c <sfbpf_lex+0x13f0>
   1164c:	add	r6, r0, #1
   11650:	bl	e9c <__ctype_b_loc@plt>
   11654:	ldr	r0, [r0]
   11658:	mov	r1, #0
   1165c:	uxtb	r2, r5
   11660:	mul	r1, r1, r4
   11664:	add	r3, r0, r2, lsl #1
   11668:	ldrh	r7, [r3]
   1166c:	mvn	r3, #47	; 0x2f
   11670:	tst	r7, #2048	; 0x800
   11674:	bne	11684 <sfbpf_lex+0x13d8>
   11678:	tst	r7, #512	; 0x200
   1167c:	mvn	r3, #86	; 0x56
   11680:	mvneq	r3, #54	; 0x36
   11684:	ldrb	r5, [r6], #1
   11688:	add	r2, r3, r2
   1168c:	add	r1, r2, r1
   11690:	cmp	r5, #0
   11694:	bne	1165c <sfbpf_lex+0x13b0>
   11698:	b	116a0 <sfbpf_lex+0x13f4>
   1169c:	mov	r1, #0
   116a0:	ldr	r0, [pc, #200]	; 11770 <sfbpf_lex+0x14c4>
   116a4:	ldr	r0, [pc, r0]
   116a8:	str	r1, [r0]
   116ac:	movw	r0, #291	; 0x123
   116b0:	sub	sp, fp, #28
   116b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116b8:	ldr	r0, [pc, #300]	; 117ec <sfbpf_lex+0x1540>
   116bc:	ldr	r0, [pc, r0]
   116c0:	ldrb	r1, [r0]
   116c4:	ldr	r0, [pc, #292]	; 117f0 <sfbpf_lex+0x1544>
   116c8:	add	r0, pc, r0
   116cc:	bl	1f30 <sf_bpf_error>
   116d0:	ldr	r1, [pc, #268]	; 117e4 <sfbpf_lex+0x1538>
   116d4:	ldr	r1, [pc, r1]
   116d8:	ldr	r0, [pc, #264]	; 117e8 <sfbpf_lex+0x153c>
   116dc:	add	r0, pc, r0
   116e0:	bl	1f30 <sf_bpf_error>
   116e4:	ldr	r0, [pc, #548]	; 11910 <sfbpf_lex+0x1664>
   116e8:	add	r0, pc, r0
   116ec:	bl	11cf8 <yy_fatal_error>
   116f0:	ldr	r0, [pc, #520]	; 11900 <sfbpf_lex+0x1654>
   116f4:	add	r0, pc, r0
   116f8:	bl	11cf8 <yy_fatal_error>
   116fc:	ldr	r0, [pc, #528]	; 11914 <sfbpf_lex+0x1668>
   11700:	add	r0, pc, r0
   11704:	bl	11cf8 <yy_fatal_error>
   11708:	mov	r0, #0
   1170c:	str	r0, [r7, #4]
   11710:	ldr	r0, [pc, #312]	; 11850 <sfbpf_lex+0x15a4>
   11714:	add	r0, pc, r0
   11718:	bl	11cf8 <yy_fatal_error>
   1171c:	ldr	r1, [pc, #100]	; 11788 <sfbpf_lex+0x14dc>
   11720:	ldr	r1, [pc, r1]
   11724:	ldr	r0, [pc, #96]	; 1178c <sfbpf_lex+0x14e0>
   11728:	add	r0, pc, r0
   1172c:	bl	1f30 <sf_bpf_error>
   11730:	ldr	r0, [pc, #468]	; 1190c <sfbpf_lex+0x1660>
   11734:	add	r0, pc, r0
   11738:	bl	11cf8 <yy_fatal_error>
   1173c:	ldr	r1, [pc, #448]	; 11904 <sfbpf_lex+0x1658>
   11740:	ldr	r1, [pc, r1]
   11744:	ldr	r0, [pc, #444]	; 11908 <sfbpf_lex+0x165c>
   11748:	add	r0, pc, r0
   1174c:	bl	1f30 <sf_bpf_error>
   11750:	.word	0x0001fb58
   11754:	.word	0x0001fb54
   11758:	.word	0x0001f3b8
   1175c:	.word	0x0001f7c0
   11760:	.word	0x0001ee90
   11764:	.word	0x0001f474
   11768:	.word	0x0001eb48
   1176c:	.word	0x0001f6bc
   11770:	.word	0x0001ea1c
   11774:	.word	0x0001f4d8
   11778:	.word	0x0001ebac
   1177c:	.word	0x0001f5f8
   11780:	.word	0x0001f5dc
   11784:	.word	0x0001ecb0
   11788:	.word	0x0001f2c0
   1178c:	.word	0x0000da60
   11790:	.word	0x0001f060
   11794:	.word	0x0001ec50
   11798:	.word	0x0001ef18
   1179c:	.word	0x0001eef0
   117a0:	.word	0x0001eb6c
   117a4:	.word	0x0001ef98
   117a8:	.word	0x0001ec14
   117ac:	.word	0x0001ec2c
   117b0:	.word	0x0001ee50
   117b4:	.word	0x0001ee04
   117b8:	.word	0x0001efb8
   117bc:	.word	0x0001f070
   117c0:	.word	0x0001f0c0
   117c4:	.word	0x0001f018
   117c8:	.word	0x0001f0d0
   117cc:	.word	0x0001f080
   117d0:	.word	0x0001f0a8
   117d4:	.word	0x0001eec8
   117d8:	.word	0x0001f7d4
   117dc:	.word	0x0001eadc
   117e0:	.word	0x0001f40c
   117e4:	.word	0x0001f30c
   117e8:	.word	0x0000dac6
   117ec:	.word	0x0001f324
   117f0:	.word	0x0000daec
   117f4:	.word	0x0001f9b4
   117f8:	.word	0x0001fa18
   117fc:	.word	0x0001fa14
   11800:	.word	0x00004414
   11804:	.word	0x000201bc
   11808:	.word	0x00020150
   1180c:	.word	0x00020144
   11810:	.word	0x0002013c
   11814:	.word	0x00020124
   11818:	.word	0x000200e8
   1181c:	.word	0x00020128
   11820:	.word	0x000200c4
   11824:	.word	0x0001fb24
   11828:	.word	0x0001fb10
   1182c:	.word	0x0001fb00
   11830:	.word	0x0001fad4
   11834:	.word	0x0000a844
   11838:	.word	0x0001fae0
   1183c:	.word	0x000043d8
   11840:	.word	0x000044d4
   11844:	.word	0x0001f9e8
   11848:	.word	0x0001fb84
   1184c:	.word	0x0002003c
   11850:	.word	0x0000dbba
   11854:	.word	0x0001ff88
   11858:	.word	0x0001ff78
   1185c:	.word	0x0001ff6c
   11860:	.word	0x0001ff08
   11864:	.word	0x0001ff08
   11868:	.word	0x0001fefc
   1186c:	.word	0x0001fea0
   11870:	.word	0x0001fe8c
   11874:	.word	0x0001fec8
   11878:	.word	0x0001febc
   1187c:	.word	0x0001fd7c
   11880:	.word	0x0001fd88
   11884:	.word	0x0001fd74
   11888:	.word	0x0001fd84
   1188c:	.word	0x0001fe40
   11890:	.word	0x0001fe50
   11894:	.word	0x0001fe34
   11898:	.word	0x0001fe20
   1189c:	.word	0x0001fe00
   118a0:	.word	0x0001fdd4
   118a4:	.word	0x0001fde0
   118a8:	.word	0x0001fdd4
   118ac:	.word	0x0001fdac
   118b0:	.word	0x0001fb6c
   118b4:	.word	0x0001fb58
   118b8:	.word	0x0001fd60
   118bc:	.word	0x0001fd54
   118c0:	.word	0x000046a4
   118c4:	.word	0x000047a0
   118c8:	.word	0x0001fcdc
   118cc:	.word	0x00004640
   118d0:	.word	0x0000473c
   118d4:	.word	0x0001fcd4
   118d8:	.word	0x0001fcbc
   118dc:	.word	0x0001fcc8
   118e0:	.word	0x0001fc64
   118e4:	.word	0x0001fc58
   118e8:	.word	0x0001fc40
   118ec:	.word	0x0001fc00
   118f0:	.word	0x00004574
   118f4:	.word	0x00004670
   118f8:	.word	0x0001fc00
   118fc:	.word	0x0001fbfc
   11900:	.word	0x0000dad2
   11904:	.word	0x0001f2a0
   11908:	.word	0x0000da2a
   1190c:	.word	0x0000db62
   11910:	.word	0x0000dc12
   11914:	.word	0x0000dc17
   11918:	.word	0x0001fa28
   1191c:	.word	0x00004370
   11920:	.word	0x0000446c
   11924:	.word	0x0001fa60

00011928 <sfbpf_ensure_buffer_stack>:
   11928:	push	{r4, sl, fp, lr}
   1192c:	add	fp, sp, #8
   11930:	ldr	r0, [pc, #184]	; 119f0 <sfbpf_ensure_buffer_stack+0xc8>
   11934:	ldr	r0, [pc, r0]
   11938:	cmp	r0, #0
   1193c:	beq	119a4 <sfbpf_ensure_buffer_stack+0x7c>
   11940:	ldr	r1, [pc, #184]	; 11a00 <sfbpf_ensure_buffer_stack+0xd8>
   11944:	ldr	r1, [pc, r1]
   11948:	ldr	r3, [pc, #180]	; 11a04 <sfbpf_ensure_buffer_stack+0xdc>
   1194c:	ldr	r3, [pc, r3]
   11950:	sub	r2, r1, #1
   11954:	cmp	r3, r2
   11958:	popcc	{r4, sl, fp, pc}
   1195c:	add	r4, r1, #8
   11960:	lsl	r1, r4, #2
   11964:	bl	e54 <realloc@plt>
   11968:	ldr	r1, [pc, #152]	; 11a08 <sfbpf_ensure_buffer_stack+0xe0>
   1196c:	cmp	r0, #0
   11970:	add	r1, pc, r1
   11974:	str	r0, [r1]
   11978:	beq	119e4 <sfbpf_ensure_buffer_stack+0xbc>
   1197c:	ldr	r1, [pc, #136]	; 11a0c <sfbpf_ensure_buffer_stack+0xe4>
   11980:	vmov.i32	q8, #0	; 0x00000000
   11984:	ldr	r1, [pc, r1]
   11988:	add	r0, r0, r1, lsl #2
   1198c:	vst1.32	{d16-d17}, [r0]!
   11990:	vst1.32	{d16-d17}, [r0]
   11994:	ldr	r0, [pc, #116]	; 11a10 <sfbpf_ensure_buffer_stack+0xe8>
   11998:	add	r0, pc, r0
   1199c:	str	r4, [r0]
   119a0:	pop	{r4, sl, fp, pc}
   119a4:	mov	r0, #4
   119a8:	bl	e84 <malloc@plt>
   119ac:	ldr	r1, [pc, #64]	; 119f4 <sfbpf_ensure_buffer_stack+0xcc>
   119b0:	cmp	r0, #0
   119b4:	add	r1, pc, r1
   119b8:	str	r0, [r1]
   119bc:	movne	r1, #0
   119c0:	strne	r1, [r0]
   119c4:	ldrne	r0, [pc, #44]	; 119f8 <sfbpf_ensure_buffer_stack+0xd0>
   119c8:	addne	r0, pc, r0
   119cc:	strne	r1, [r0]
   119d0:	movne	r1, #1
   119d4:	ldrne	r0, [pc, #32]	; 119fc <sfbpf_ensure_buffer_stack+0xd4>
   119d8:	addne	r0, pc, r0
   119dc:	strne	r1, [r0]
   119e0:	popne	{r4, sl, fp, pc}
   119e4:	ldr	r0, [pc, #40]	; 11a14 <sfbpf_ensure_buffer_stack+0xec>
   119e8:	add	r0, pc, r0
   119ec:	bl	11cf8 <yy_fatal_error>
   119f0:	.word	0x0001f04c
   119f4:	.word	0x0001efcc
   119f8:	.word	0x0001efbc
   119fc:	.word	0x0001efc8
   11a00:	.word	0x0001f05c
   11a04:	.word	0x0001f038
   11a08:	.word	0x0001f010
   11a0c:	.word	0x0001f01c
   11a10:	.word	0x0001f008
   11a14:	.word	0x0000d95d

00011a18 <sfbpf__create_buffer>:
   11a18:	push	{r4, r5, r6, sl, fp, lr}
   11a1c:	add	fp, sp, #16
   11a20:	mov	r4, r0
   11a24:	mov	r0, #48	; 0x30
   11a28:	mov	r6, r1
   11a2c:	bl	e84 <malloc@plt>
   11a30:	cmp	r0, #0
   11a34:	beq	11a70 <sfbpf__create_buffer+0x58>
   11a38:	mov	r5, r0
   11a3c:	str	r6, [r0, #12]
   11a40:	add	r0, r6, #2
   11a44:	bl	e84 <malloc@plt>
   11a48:	cmp	r0, #0
   11a4c:	str	r0, [r5, #4]
   11a50:	beq	11a70 <sfbpf__create_buffer+0x58>
   11a54:	mov	r0, #1
   11a58:	mov	r1, r4
   11a5c:	str	r0, [r5, #20]
   11a60:	mov	r0, r5
   11a64:	bl	11d2c <sfbpf__init_buffer>
   11a68:	mov	r0, r5
   11a6c:	pop	{r4, r5, r6, sl, fp, pc}
   11a70:	ldr	r0, [pc, #4]	; 11a7c <sfbpf__create_buffer+0x64>
   11a74:	add	r0, pc, r0
   11a78:	bl	11cf8 <yy_fatal_error>
   11a7c:	.word	0x0000d785

00011a80 <yy_get_previous_state>:
   11a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a84:	add	fp, sp, #28
   11a88:	sub	sp, sp, #4
   11a8c:	ldr	r0, [pc, #296]	; 11bbc <yy_get_previous_state+0x13c>
   11a90:	add	r0, pc, r0
   11a94:	ldrb	r0, [r0]
   11a98:	ldr	r7, [pc, #288]	; 11bc0 <yy_get_previous_state+0x140>
   11a9c:	ldr	r7, [pc, r7]
   11aa0:	ldr	r2, [pc, #284]	; 11bc4 <yy_get_previous_state+0x144>
   11aa4:	ldr	r2, [pc, r2]
   11aa8:	cmp	r2, r7
   11aac:	bcs	11bb4 <yy_get_previous_state+0x134>
   11ab0:	ldr	ip, [pc, #272]	; 11bc8 <yy_get_previous_state+0x148>
   11ab4:	ldr	r3, [pc, #272]	; 11bcc <yy_get_previous_state+0x14c>
   11ab8:	ldr	r1, [pc, #272]	; 11bd0 <yy_get_previous_state+0x150>
   11abc:	ldr	r9, [pc, #272]	; 11bd4 <yy_get_previous_state+0x154>
   11ac0:	ldr	r5, [pc, #272]	; 11bd8 <yy_get_previous_state+0x158>
   11ac4:	ldr	lr, [pc, #272]	; 11bdc <yy_get_previous_state+0x15c>
   11ac8:	movw	r6, #1434	; 0x59a
   11acc:	str	r7, [sp]
   11ad0:	add	ip, pc, ip
   11ad4:	add	r3, pc, r3
   11ad8:	add	r1, pc, r1
   11adc:	add	r9, pc, r9
   11ae0:	add	r5, pc, r5
   11ae4:	add	lr, pc, lr
   11ae8:	ldrb	r4, [r2]
   11aec:	cmp	r4, #0
   11af0:	beq	11b0c <yy_get_previous_state+0x8c>
   11af4:	mov	sl, r7
   11af8:	ldr	r7, [pc, #224]	; 11be0 <yy_get_previous_state+0x160>
   11afc:	add	r7, pc, r7
   11b00:	ldrb	r8, [r7, r4]
   11b04:	mov	r7, sl
   11b08:	b	11b10 <yy_get_previous_state+0x90>
   11b0c:	mov	r8, #1
   11b10:	add	r4, ip, r0, lsl #1
   11b14:	ldrh	r4, [r4]
   11b18:	cmp	r4, #0
   11b1c:	beq	11b38 <yy_get_previous_state+0xb8>
   11b20:	ldr	r4, [pc, #188]	; 11be4 <yy_get_previous_state+0x164>
   11b24:	add	r4, pc, r4
   11b28:	str	r2, [r4]
   11b2c:	ldr	r4, [pc, #180]	; 11be8 <yy_get_previous_state+0x168>
   11b30:	add	r4, pc, r4
   11b34:	str	r0, [r4]
   11b38:	add	r4, r3, r0, lsl #1
   11b3c:	ldrsh	r4, [r4]
   11b40:	add	sl, r4, r8
   11b44:	add	r4, r1, sl, lsl #1
   11b48:	ldrsh	r4, [r4]
   11b4c:	cmp	r0, r4
   11b50:	beq	11ba0 <yy_get_previous_state+0x120>
   11b54:	mov	r7, ip
   11b58:	mov	r9, r8
   11b5c:	add	r0, r5, r0, lsl #1
   11b60:	ldrsh	r0, [r0]
   11b64:	add	r4, r3, r0, lsl #1
   11b68:	cmp	r0, r6
   11b6c:	uxth	ip, r0
   11b70:	ldrbge	r9, [lr, r8]
   11b74:	ldrsh	r4, [r4]
   11b78:	uxtb	r8, r9
   11b7c:	uxtab	sl, r4, r9
   11b80:	add	r4, r1, sl, lsl #1
   11b84:	ldrh	r4, [r4]
   11b88:	cmp	ip, r4
   11b8c:	bne	11b5c <yy_get_previous_state+0xdc>
   11b90:	mov	ip, r7
   11b94:	ldr	r7, [sp]
   11b98:	ldr	r9, [pc, #76]	; 11bec <yy_get_previous_state+0x16c>
   11b9c:	add	r9, pc, r9
   11ba0:	add	r0, r9, sl, lsl #1
   11ba4:	add	r2, r2, #1
   11ba8:	cmp	r2, r7
   11bac:	ldrsh	r0, [r0]
   11bb0:	bcc	11ae8 <yy_get_previous_state+0x68>
   11bb4:	sub	sp, fp, #28
   11bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bbc:	.word	0x0001eeec
   11bc0:	.word	0x0001eeec
   11bc4:	.word	0x0001ef3c
   11bc8:	.word	0x00003924
   11bcc:	.word	0x00007e92
   11bd0:	.word	0x00004450
   11bd4:	.word	0x00009c58
   11bd8:	.word	0x00008d52
   11bdc:	.word	0x00009c1a
   11be0:	.word	0x000037f8
   11be4:	.word	0x0001ee70
   11be8:	.word	0x0001ee60
   11bec:	.word	0x00009b98

00011bf0 <sfbpf_wrap>:
   11bf0:	mov	r0, #1
   11bf4:	bx	lr

00011bf8 <sfbpf_restart>:
   11bf8:	push	{r4, sl, fp, lr}
   11bfc:	add	fp, sp, #8
   11c00:	mov	r4, r0
   11c04:	ldr	r0, [pc, #188]	; 11cc8 <sfbpf_restart+0xd0>
   11c08:	ldr	r0, [pc, r0]
   11c0c:	cmp	r0, #0
   11c10:	beq	11c28 <sfbpf_restart+0x30>
   11c14:	ldr	r1, [pc, #176]	; 11ccc <sfbpf_restart+0xd4>
   11c18:	ldr	r1, [pc, r1]
   11c1c:	ldr	r0, [r0, r1, lsl #2]
   11c20:	cmp	r0, #0
   11c24:	bne	11c58 <sfbpf_restart+0x60>
   11c28:	bl	11928 <sfbpf_ensure_buffer_stack>
   11c2c:	ldr	r0, [pc, #156]	; 11cd0 <sfbpf_restart+0xd8>
   11c30:	mov	r1, #16384	; 0x4000
   11c34:	ldr	r0, [pc, r0]
   11c38:	bl	11a18 <sfbpf__create_buffer>
   11c3c:	ldr	r1, [pc, #144]	; 11cd4 <sfbpf_restart+0xdc>
   11c40:	ldr	r1, [pc, r1]
   11c44:	ldr	r2, [pc, #140]	; 11cd8 <sfbpf_restart+0xe0>
   11c48:	ldr	r2, [pc, r2]
   11c4c:	cmp	r1, #0
   11c50:	str	r0, [r1, r2, lsl #2]
   11c54:	moveq	r0, #0
   11c58:	mov	r1, r4
   11c5c:	bl	11d2c <sfbpf__init_buffer>
   11c60:	ldr	r0, [pc, #116]	; 11cdc <sfbpf_restart+0xe4>
   11c64:	ldr	r0, [pc, r0]
   11c68:	ldr	r1, [pc, #112]	; 11ce0 <sfbpf_restart+0xe8>
   11c6c:	ldr	r1, [pc, r1]
   11c70:	ldr	r2, [r1, r0, lsl #2]
   11c74:	ldr	r3, [r2, #16]
   11c78:	ldr	r4, [pc, #100]	; 11ce4 <sfbpf_restart+0xec>
   11c7c:	add	r4, pc, r4
   11c80:	str	r3, [r4]
   11c84:	ldr	r2, [r2, #8]
   11c88:	ldr	r3, [pc, #88]	; 11ce8 <sfbpf_restart+0xf0>
   11c8c:	add	r3, pc, r3
   11c90:	str	r2, [r3]
   11c94:	ldr	r3, [pc, #80]	; 11cec <sfbpf_restart+0xf4>
   11c98:	add	r3, pc, r3
   11c9c:	str	r2, [r3]
   11ca0:	ldr	r0, [r1, r0, lsl #2]
   11ca4:	ldr	r0, [r0]
   11ca8:	ldr	r1, [pc, #64]	; 11cf0 <sfbpf_restart+0xf8>
   11cac:	add	r1, pc, r1
   11cb0:	str	r0, [r1]
   11cb4:	ldrb	r0, [r2]
   11cb8:	ldr	r1, [pc, #52]	; 11cf4 <sfbpf_restart+0xfc>
   11cbc:	add	r1, pc, r1
   11cc0:	strb	r0, [r1]
   11cc4:	pop	{r4, sl, fp, pc}
   11cc8:	.word	0x0001ed78
   11ccc:	.word	0x0001ed6c
   11cd0:	.word	0x0001ed38
   11cd4:	.word	0x0001ed40
   11cd8:	.word	0x0001ed3c
   11cdc:	.word	0x0001ed20
   11ce0:	.word	0x0001ed14
   11ce4:	.word	0x0001ed1c
   11ce8:	.word	0x0001ecfc
   11cec:	.word	0x0001ed48
   11cf0:	.word	0x0001ecc0
   11cf4:	.word	0x0001ecd0

00011cf8 <yy_fatal_error>:
   11cf8:	push	{fp, lr}
   11cfc:	mov	fp, sp
   11d00:	mov	r2, r0
   11d04:	ldr	r0, [pc, #24]	; 11d24 <yy_fatal_error+0x2c>
   11d08:	ldr	r0, [pc, r0]
   11d0c:	ldr	r0, [r0]
   11d10:	ldr	r1, [pc, #16]	; 11d28 <yy_fatal_error+0x30>
   11d14:	add	r1, pc, r1
   11d18:	bl	ecc <fprintf@plt>
   11d1c:	mov	r0, #2
   11d20:	bl	ea8 <exit@plt>
   11d24:	.word	0x0001e3a4
   11d28:	.word	0x00000805

00011d2c <sfbpf__init_buffer>:
   11d2c:	push	{r4, r5, r6, r7, fp, lr}
   11d30:	add	fp, sp, #16
   11d34:	mov	r6, r1
   11d38:	mov	r4, r0
   11d3c:	bl	ed8 <__errno_location@plt>
   11d40:	ldr	r7, [r0]
   11d44:	mov	r5, r0
   11d48:	mov	r0, r4
   11d4c:	bl	11f54 <sfbpf__flush_buffer>
   11d50:	mov	r0, #1
   11d54:	str	r0, [r4, #40]	; 0x28
   11d58:	str	r6, [r4]
   11d5c:	ldr	r0, [pc, #100]	; 11dc8 <sfbpf__init_buffer+0x9c>
   11d60:	ldr	r0, [pc, r0]
   11d64:	cmp	r0, #0
   11d68:	beq	11d7c <sfbpf__init_buffer+0x50>
   11d6c:	ldr	r1, [pc, #88]	; 11dcc <sfbpf__init_buffer+0xa0>
   11d70:	ldr	r1, [pc, r1]
   11d74:	ldr	r0, [r0, r1, lsl #2]
   11d78:	b	11d80 <sfbpf__init_buffer+0x54>
   11d7c:	mov	r0, #0
   11d80:	cmp	r0, r4
   11d84:	movne	r1, #1
   11d88:	movne	r0, #0
   11d8c:	strne	r1, [r4, #32]
   11d90:	strne	r0, [r4, #36]	; 0x24
   11d94:	cmp	r6, #0
   11d98:	beq	11db8 <sfbpf__init_buffer+0x8c>
   11d9c:	mov	r0, r6
   11da0:	bl	f14 <fileno@plt>
   11da4:	bl	f68 <isatty@plt>
   11da8:	cmp	r0, #0
   11dac:	mov	r1, #0
   11db0:	movwgt	r1, #1
   11db4:	b	11dbc <sfbpf__init_buffer+0x90>
   11db8:	mov	r1, #0
   11dbc:	str	r1, [r4, #24]
   11dc0:	str	r7, [r5]
   11dc4:	pop	{r4, r5, r6, r7, fp, pc}
   11dc8:	.word	0x0001ec20
   11dcc:	.word	0x0001ec14

00011dd0 <sfbpf__switch_to_buffer>:
   11dd0:	push	{r4, sl, fp, lr}
   11dd4:	add	fp, sp, #8
   11dd8:	mov	r4, r0
   11ddc:	bl	11928 <sfbpf_ensure_buffer_stack>
   11de0:	ldr	r0, [pc, #192]	; 11ea8 <sfbpf__switch_to_buffer+0xd8>
   11de4:	ldr	r0, [pc, r0]
   11de8:	cmp	r0, #0
   11dec:	beq	11e00 <sfbpf__switch_to_buffer+0x30>
   11df0:	ldr	r1, [pc, #180]	; 11eac <sfbpf__switch_to_buffer+0xdc>
   11df4:	ldr	r1, [pc, r1]
   11df8:	ldr	r1, [r0, r1, lsl #2]
   11dfc:	b	11e04 <sfbpf__switch_to_buffer+0x34>
   11e00:	mov	r1, #0
   11e04:	cmp	r1, r4
   11e08:	popeq	{r4, sl, fp, pc}
   11e0c:	ldr	r2, [pc, #156]	; 11eb0 <sfbpf__switch_to_buffer+0xe0>
   11e10:	cmp	r0, #0
   11e14:	ldr	r2, [pc, r2]
   11e18:	ldr	ip, [pc, #148]	; 11eb4 <sfbpf__switch_to_buffer+0xe4>
   11e1c:	add	ip, pc, ip
   11e20:	beq	11e58 <sfbpf__switch_to_buffer+0x88>
   11e24:	ldr	r3, [r0, r2, lsl #2]
   11e28:	cmp	r3, #0
   11e2c:	beq	11e58 <sfbpf__switch_to_buffer+0x88>
   11e30:	ldrb	r3, [ip]
   11e34:	ldr	r1, [pc, #124]	; 11eb8 <sfbpf__switch_to_buffer+0xe8>
   11e38:	ldr	r1, [pc, r1]
   11e3c:	strb	r3, [r1]
   11e40:	ldr	r3, [r0, r2, lsl #2]
   11e44:	str	r1, [r3, #8]
   11e48:	ldr	r1, [r0, r2, lsl #2]
   11e4c:	ldr	r3, [pc, #104]	; 11ebc <sfbpf__switch_to_buffer+0xec>
   11e50:	ldr	r3, [pc, r3]
   11e54:	str	r3, [r1, #16]
   11e58:	str	r4, [r0, r2, lsl #2]
   11e5c:	ldr	r1, [r4, #16]
   11e60:	ldr	r3, [pc, #88]	; 11ec0 <sfbpf__switch_to_buffer+0xf0>
   11e64:	add	r3, pc, r3
   11e68:	str	r1, [r3]
   11e6c:	ldr	r1, [r4, #8]
   11e70:	ldr	r3, [pc, #76]	; 11ec4 <sfbpf__switch_to_buffer+0xf4>
   11e74:	add	r3, pc, r3
   11e78:	str	r1, [r3]
   11e7c:	ldr	r3, [pc, #68]	; 11ec8 <sfbpf__switch_to_buffer+0xf8>
   11e80:	add	r3, pc, r3
   11e84:	str	r1, [r3]
   11e88:	ldr	r0, [r0, r2, lsl #2]
   11e8c:	ldr	r0, [r0]
   11e90:	ldr	r2, [pc, #52]	; 11ecc <sfbpf__switch_to_buffer+0xfc>
   11e94:	add	r2, pc, r2
   11e98:	str	r0, [r2]
   11e9c:	ldrb	r0, [r1]
   11ea0:	strb	r0, [ip]
   11ea4:	pop	{r4, sl, fp, pc}
   11ea8:	.word	0x0001eb9c
   11eac:	.word	0x0001eb90
   11eb0:	.word	0x0001eb70
   11eb4:	.word	0x0001eb70
   11eb8:	.word	0x0001eb50
   11ebc:	.word	0x0001eb48
   11ec0:	.word	0x0001eb34
   11ec4:	.word	0x0001eb6c
   11ec8:	.word	0x0001eb08
   11ecc:	.word	0x0001ead8

00011ed0 <sfbpf_alloc>:
   11ed0:	b	e84 <malloc@plt>

00011ed4 <sfbpf__delete_buffer>:
   11ed4:	cmp	r0, #0
   11ed8:	bxeq	lr
   11edc:	push	{r4, sl, fp, lr}
   11ee0:	add	fp, sp, #8
   11ee4:	mov	r4, r0
   11ee8:	ldr	r0, [pc, #84]	; 11f44 <sfbpf__delete_buffer+0x70>
   11eec:	ldr	r0, [pc, r0]
   11ef0:	cmp	r0, #0
   11ef4:	beq	11f08 <sfbpf__delete_buffer+0x34>
   11ef8:	ldr	r1, [pc, #72]	; 11f48 <sfbpf__delete_buffer+0x74>
   11efc:	ldr	r1, [pc, r1]
   11f00:	ldr	r1, [r0, r1, lsl #2]
   11f04:	b	11f0c <sfbpf__delete_buffer+0x38>
   11f08:	mov	r1, #0
   11f0c:	cmp	r1, r4
   11f10:	bne	11f24 <sfbpf__delete_buffer+0x50>
   11f14:	ldr	r1, [pc, #48]	; 11f4c <sfbpf__delete_buffer+0x78>
   11f18:	mov	r2, #0
   11f1c:	ldr	r1, [pc, r1]
   11f20:	str	r2, [r0, r1, lsl #2]
   11f24:	ldr	r0, [r4, #20]
   11f28:	cmp	r0, #0
   11f2c:	beq	11f38 <sfbpf__delete_buffer+0x64>
   11f30:	ldr	r0, [r4, #4]
   11f34:	bl	e0c <free@plt>
   11f38:	mov	r0, r4
   11f3c:	pop	{r4, sl, fp, lr}
   11f40:	b	e0c <free@plt>
   11f44:	.word	0x0001ea94
   11f48:	.word	0x0001ea88
   11f4c:	.word	0x0001ea68

00011f50 <sfbpf_free>:
   11f50:	b	e0c <free@plt>

00011f54 <sfbpf__flush_buffer>:
   11f54:	cmp	r0, #0
   11f58:	beq	12008 <sfbpf__flush_buffer+0xb4>
   11f5c:	mov	r2, #0
   11f60:	str	r2, [r0, #16]
   11f64:	ldr	r1, [r0, #4]
   11f68:	strb	r2, [r1]
   11f6c:	ldr	r1, [r0, #4]
   11f70:	strb	r2, [r1, #1]
   11f74:	mov	r1, #1
   11f78:	str	r2, [r0, #44]	; 0x2c
   11f7c:	str	r1, [r0, #28]
   11f80:	ldr	r1, [r0, #4]
   11f84:	str	r1, [r0, #8]
   11f88:	ldr	r1, [pc, #124]	; 1200c <sfbpf__flush_buffer+0xb8>
   11f8c:	ldr	r1, [pc, r1]
   11f90:	cmp	r1, #0
   11f94:	beq	11fa4 <sfbpf__flush_buffer+0x50>
   11f98:	ldr	r2, [pc, #112]	; 12010 <sfbpf__flush_buffer+0xbc>
   11f9c:	ldr	r2, [pc, r2]
   11fa0:	ldr	r2, [r1, r2, lsl #2]
   11fa4:	cmp	r2, r0
   11fa8:	bxne	lr
   11fac:	ldr	r0, [pc, #96]	; 12014 <sfbpf__flush_buffer+0xc0>
   11fb0:	ldr	r0, [pc, r0]
   11fb4:	ldr	r2, [r1, r0, lsl #2]
   11fb8:	ldr	ip, [r2, #16]
   11fbc:	ldr	r3, [pc, #84]	; 12018 <sfbpf__flush_buffer+0xc4>
   11fc0:	add	r3, pc, r3
   11fc4:	str	ip, [r3]
   11fc8:	ldr	r2, [r2, #8]
   11fcc:	ldr	r3, [pc, #72]	; 1201c <sfbpf__flush_buffer+0xc8>
   11fd0:	add	r3, pc, r3
   11fd4:	str	r2, [r3]
   11fd8:	ldr	r3, [pc, #64]	; 12020 <sfbpf__flush_buffer+0xcc>
   11fdc:	add	r3, pc, r3
   11fe0:	str	r2, [r3]
   11fe4:	ldr	r0, [r1, r0, lsl #2]
   11fe8:	ldr	r0, [r0]
   11fec:	ldr	r1, [pc, #48]	; 12024 <sfbpf__flush_buffer+0xd0>
   11ff0:	add	r1, pc, r1
   11ff4:	str	r0, [r1]
   11ff8:	ldrb	r0, [r2]
   11ffc:	ldr	r1, [pc, #36]	; 12028 <sfbpf__flush_buffer+0xd4>
   12000:	add	r1, pc, r1
   12004:	strb	r0, [r1]
   12008:	bx	lr
   1200c:	.word	0x0001e9f4
   12010:	.word	0x0001e9e8
   12014:	.word	0x0001e9d4
   12018:	.word	0x0001e9d8
   1201c:	.word	0x0001e9b8
   12020:	.word	0x0001ea04
   12024:	.word	0x0001e97c
   12028:	.word	0x0001e98c

0001202c <sfbpf_push_buffer_state>:
   1202c:	cmp	r0, #0
   12030:	bxeq	lr
   12034:	push	{r4, sl, fp, lr}
   12038:	add	fp, sp, #8
   1203c:	mov	r4, r0
   12040:	bl	11928 <sfbpf_ensure_buffer_stack>
   12044:	ldr	r1, [pc, #188]	; 12108 <sfbpf_push_buffer_state+0xdc>
   12048:	ldr	r1, [pc, r1]
   1204c:	ldr	r2, [pc, #184]	; 1210c <sfbpf_push_buffer_state+0xe0>
   12050:	ldr	r2, [pc, r2]
   12054:	ldr	ip, [pc, #180]	; 12110 <sfbpf_push_buffer_state+0xe4>
   12058:	cmp	r2, #0
   1205c:	add	ip, pc, ip
   12060:	beq	120b4 <sfbpf_push_buffer_state+0x88>
   12064:	ldr	r3, [r2, r1, lsl #2]
   12068:	cmp	r3, #0
   1206c:	beq	120b4 <sfbpf_push_buffer_state+0x88>
   12070:	ldrb	r3, [ip]
   12074:	ldr	r0, [pc, #152]	; 12114 <sfbpf_push_buffer_state+0xe8>
   12078:	ldr	r0, [pc, r0]
   1207c:	strb	r3, [r0]
   12080:	ldr	r3, [r2, r1, lsl #2]
   12084:	str	r0, [r3, #8]
   12088:	ldr	r0, [r2, r1, lsl #2]
   1208c:	ldr	r3, [pc, #132]	; 12118 <sfbpf_push_buffer_state+0xec>
   12090:	ldr	r3, [pc, r3]
   12094:	str	r3, [r0, #16]
   12098:	ldr	r0, [r2, r1, lsl #2]
   1209c:	cmp	r0, #0
   120a0:	beq	120b4 <sfbpf_push_buffer_state+0x88>
   120a4:	ldr	r0, [pc, #112]	; 1211c <sfbpf_push_buffer_state+0xf0>
   120a8:	add	r1, r1, #1
   120ac:	add	r0, pc, r0
   120b0:	str	r1, [r0]
   120b4:	str	r4, [r2, r1, lsl #2]
   120b8:	ldr	r0, [r4, #16]
   120bc:	ldr	r3, [pc, #92]	; 12120 <sfbpf_push_buffer_state+0xf4>
   120c0:	add	r3, pc, r3
   120c4:	str	r0, [r3]
   120c8:	ldr	r0, [r4, #8]
   120cc:	ldr	r3, [pc, #80]	; 12124 <sfbpf_push_buffer_state+0xf8>
   120d0:	add	r3, pc, r3
   120d4:	str	r0, [r3]
   120d8:	ldr	r3, [pc, #72]	; 12128 <sfbpf_push_buffer_state+0xfc>
   120dc:	add	r3, pc, r3
   120e0:	str	r0, [r3]
   120e4:	ldr	r1, [r2, r1, lsl #2]
   120e8:	ldr	r1, [r1]
   120ec:	ldr	r2, [pc, #56]	; 1212c <sfbpf_push_buffer_state+0x100>
   120f0:	add	r2, pc, r2
   120f4:	str	r1, [r2]
   120f8:	ldrb	r0, [r0]
   120fc:	strb	r0, [ip]
   12100:	pop	{r4, sl, fp, lr}
   12104:	bx	lr
   12108:	.word	0x0001e93c
   1210c:	.word	0x0001e930
   12110:	.word	0x0001e930
   12114:	.word	0x0001e910
   12118:	.word	0x0001e908
   1211c:	.word	0x0001e8d8
   12120:	.word	0x0001e8d8
   12124:	.word	0x0001e910
   12128:	.word	0x0001e8ac
   1212c:	.word	0x0001e87c

00012130 <sfbpf_pop_buffer_state>:
   12130:	push	{fp, lr}
   12134:	mov	fp, sp
   12138:	ldr	r0, [pc, #184]	; 121f8 <sfbpf_pop_buffer_state+0xc8>
   1213c:	ldr	r0, [pc, r0]
   12140:	cmp	r0, #0
   12144:	beq	121f4 <sfbpf_pop_buffer_state+0xc4>
   12148:	ldr	r1, [pc, #172]	; 121fc <sfbpf_pop_buffer_state+0xcc>
   1214c:	ldr	r1, [pc, r1]
   12150:	ldr	r0, [r0, r1, lsl #2]
   12154:	cmp	r0, #0
   12158:	beq	121f4 <sfbpf_pop_buffer_state+0xc4>
   1215c:	bl	11ed4 <sfbpf__delete_buffer>
   12160:	ldr	r2, [pc, #152]	; 12200 <sfbpf_pop_buffer_state+0xd0>
   12164:	mov	r1, #0
   12168:	ldr	r2, [pc, r2]
   1216c:	ldr	r0, [pc, #144]	; 12204 <sfbpf_pop_buffer_state+0xd4>
   12170:	ldr	r0, [pc, r0]
   12174:	cmp	r2, #0
   12178:	str	r1, [r0, r2, lsl #2]
   1217c:	beq	12190 <sfbpf_pop_buffer_state+0x60>
   12180:	sub	r1, r2, #1
   12184:	ldr	r2, [pc, #124]	; 12208 <sfbpf_pop_buffer_state+0xd8>
   12188:	add	r2, pc, r2
   1218c:	str	r1, [r2]
   12190:	cmp	r0, #0
   12194:	beq	121f4 <sfbpf_pop_buffer_state+0xc4>
   12198:	ldr	r2, [r0, r1, lsl #2]
   1219c:	cmp	r2, #0
   121a0:	popeq	{fp, pc}
   121a4:	ldr	ip, [r2, #16]
   121a8:	ldr	r3, [pc, #92]	; 1220c <sfbpf_pop_buffer_state+0xdc>
   121ac:	add	r3, pc, r3
   121b0:	str	ip, [r3]
   121b4:	ldr	r2, [r2, #8]
   121b8:	ldr	r3, [pc, #80]	; 12210 <sfbpf_pop_buffer_state+0xe0>
   121bc:	add	r3, pc, r3
   121c0:	str	r2, [r3]
   121c4:	ldr	r3, [pc, #72]	; 12214 <sfbpf_pop_buffer_state+0xe4>
   121c8:	add	r3, pc, r3
   121cc:	str	r2, [r3]
   121d0:	ldr	r0, [r0, r1, lsl #2]
   121d4:	ldr	r0, [r0]
   121d8:	ldr	r1, [pc, #56]	; 12218 <sfbpf_pop_buffer_state+0xe8>
   121dc:	add	r1, pc, r1
   121e0:	str	r0, [r1]
   121e4:	ldrb	r0, [r2]
   121e8:	ldr	r1, [pc, #44]	; 1221c <sfbpf_pop_buffer_state+0xec>
   121ec:	add	r1, pc, r1
   121f0:	strb	r0, [r1]
   121f4:	pop	{fp, pc}
   121f8:	.word	0x0001e844
   121fc:	.word	0x0001e838
   12200:	.word	0x0001e81c
   12204:	.word	0x0001e810
   12208:	.word	0x0001e7fc
   1220c:	.word	0x0001e7ec
   12210:	.word	0x0001e824
   12214:	.word	0x0001e7c0
   12218:	.word	0x0001e790
   1221c:	.word	0x0001e7a0

00012220 <sfbpf__scan_buffer>:
   12220:	push	{r4, r5, r6, sl, fp, lr}
   12224:	add	fp, sp, #16
   12228:	mov	r4, #0
   1222c:	cmp	r1, #2
   12230:	bcc	122a0 <sfbpf__scan_buffer+0x80>
   12234:	sub	r6, r1, #2
   12238:	mov	r5, r0
   1223c:	ldrb	r0, [r0, r6]
   12240:	cmp	r0, #0
   12244:	bne	122a0 <sfbpf__scan_buffer+0x80>
   12248:	add	r0, r1, r5
   1224c:	ldrb	r0, [r0, #-1]
   12250:	cmp	r0, #0
   12254:	bne	122a0 <sfbpf__scan_buffer+0x80>
   12258:	mov	r0, #48	; 0x30
   1225c:	bl	e84 <malloc@plt>
   12260:	cmp	r0, #0
   12264:	beq	122a8 <sfbpf__scan_buffer+0x88>
   12268:	mov	r4, r0
   1226c:	mov	r0, #0
   12270:	mov	r1, #1
   12274:	str	r0, [r4, #40]	; 0x28
   12278:	str	r0, [r4, #44]	; 0x2c
   1227c:	stm	r4, {r0, r5}
   12280:	str	r5, [r4, #8]
   12284:	str	r6, [r4, #12]
   12288:	str	r6, [r4, #16]
   1228c:	str	r0, [r4, #20]
   12290:	str	r0, [r4, #24]
   12294:	mov	r0, r4
   12298:	str	r1, [r4, #28]
   1229c:	bl	11dd0 <sfbpf__switch_to_buffer>
   122a0:	mov	r0, r4
   122a4:	pop	{r4, r5, r6, sl, fp, pc}
   122a8:	ldr	r0, [pc, #4]	; 122b4 <sfbpf__scan_buffer+0x94>
   122ac:	add	r0, pc, r0
   122b0:	bl	11cf8 <yy_fatal_error>
   122b4:	.word	0x0000cf79

000122b8 <sfbpf__scan_string>:
   122b8:	push	{r4, sl, fp, lr}
   122bc:	add	fp, sp, #8
   122c0:	mov	r4, r0
   122c4:	bl	eb4 <strlen@plt>
   122c8:	mov	r1, r0
   122cc:	mov	r0, r4
   122d0:	pop	{r4, sl, fp, lr}
   122d4:	b	122d8 <sfbpf__scan_bytes>

000122d8 <sfbpf__scan_bytes>:
   122d8:	push	{r4, r5, r6, r7, fp, lr}
   122dc:	add	fp, sp, #16
   122e0:	add	r4, r1, #2
   122e4:	mov	r7, r0
   122e8:	mov	r5, r1
   122ec:	mov	r0, r4
   122f0:	bl	e84 <malloc@plt>
   122f4:	cmp	r0, #0
   122f8:	beq	1234c <sfbpf__scan_bytes+0x74>
   122fc:	mov	r6, r0
   12300:	cmp	r5, #1
   12304:	blt	12318 <sfbpf__scan_bytes+0x40>
   12308:	mov	r0, r6
   1230c:	mov	r1, r7
   12310:	mov	r2, r5
   12314:	bl	e30 <memcpy@plt>
   12318:	add	r0, r6, r5
   1231c:	mov	r1, #0
   12320:	strh	r1, [r0]
   12324:	mov	r0, r6
   12328:	mov	r1, r4
   1232c:	bl	12220 <sfbpf__scan_buffer>
   12330:	cmp	r0, #0
   12334:	movne	r1, #1
   12338:	strne	r1, [r0, #20]
   1233c:	popne	{r4, r5, r6, r7, fp, pc}
   12340:	ldr	r0, [pc, #20]	; 1235c <sfbpf__scan_bytes+0x84>
   12344:	add	r0, pc, r0
   12348:	bl	11cf8 <yy_fatal_error>
   1234c:	ldr	r0, [pc, #4]	; 12358 <sfbpf__scan_bytes+0x80>
   12350:	add	r0, pc, r0
   12354:	bl	11cf8 <yy_fatal_error>
   12358:	.word	0x0000ceff
   1235c:	.word	0x0000cf34

00012360 <sfbpf_get_debug>:
   12360:	ldr	r0, [pc, #4]	; 1236c <sfbpf_get_debug+0xc>
   12364:	ldr	r0, [pc, r0]
   12368:	bx	lr
   1236c:	.word	0x0001e610

00012370 <sfbpf_set_debug>:
   12370:	ldr	r1, [pc, #8]	; 12380 <sfbpf_set_debug+0x10>
   12374:	add	r1, pc, r1
   12378:	str	r0, [r1]
   1237c:	bx	lr
   12380:	.word	0x0001e600

00012384 <sfbpf_lex_destroy>:
   12384:	push	{r4, r5, fp, lr}
   12388:	add	fp, sp, #8
   1238c:	ldr	r1, [pc, #200]	; 1245c <sfbpf_lex_destroy+0xd8>
   12390:	mov	r5, #0
   12394:	mov	r4, #0
   12398:	ldr	r1, [pc, r1]
   1239c:	cmp	r1, #0
   123a0:	beq	123ec <sfbpf_lex_destroy+0x68>
   123a4:	ldr	r0, [pc, #180]	; 12460 <sfbpf_lex_destroy+0xdc>
   123a8:	mov	r4, r1
   123ac:	ldr	r0, [pc, r0]
   123b0:	ldr	r0, [r1, r0, lsl #2]
   123b4:	cmp	r0, #0
   123b8:	beq	123ec <sfbpf_lex_destroy+0x68>
   123bc:	bl	11ed4 <sfbpf__delete_buffer>
   123c0:	ldr	r0, [pc, #156]	; 12464 <sfbpf_lex_destroy+0xe0>
   123c4:	mov	r4, #0
   123c8:	ldr	r0, [pc, r0]
   123cc:	ldr	r1, [pc, #148]	; 12468 <sfbpf_lex_destroy+0xe4>
   123d0:	ldr	r1, [pc, r1]
   123d4:	str	r4, [r1, r0, lsl #2]
   123d8:	bl	12130 <sfbpf_pop_buffer_state>
   123dc:	ldr	r1, [pc, #136]	; 1246c <sfbpf_lex_destroy+0xe8>
   123e0:	ldr	r1, [pc, r1]
   123e4:	cmp	r1, #0
   123e8:	bne	123a4 <sfbpf_lex_destroy+0x20>
   123ec:	mov	r0, r4
   123f0:	bl	e0c <free@plt>
   123f4:	ldr	r0, [pc, #116]	; 12470 <sfbpf_lex_destroy+0xec>
   123f8:	add	r0, pc, r0
   123fc:	str	r5, [r0]
   12400:	ldr	r0, [pc, #108]	; 12474 <sfbpf_lex_destroy+0xf0>
   12404:	add	r0, pc, r0
   12408:	str	r5, [r0]
   1240c:	ldr	r0, [pc, #100]	; 12478 <sfbpf_lex_destroy+0xf4>
   12410:	add	r0, pc, r0
   12414:	str	r5, [r0]
   12418:	ldr	r0, [pc, #92]	; 1247c <sfbpf_lex_destroy+0xf8>
   1241c:	add	r0, pc, r0
   12420:	str	r5, [r0]
   12424:	ldr	r0, [pc, #84]	; 12480 <sfbpf_lex_destroy+0xfc>
   12428:	add	r0, pc, r0
   1242c:	strb	r5, [r0]
   12430:	ldr	r0, [pc, #76]	; 12484 <sfbpf_lex_destroy+0x100>
   12434:	add	r0, pc, r0
   12438:	strb	r5, [r0]
   1243c:	ldr	r0, [pc, #68]	; 12488 <sfbpf_lex_destroy+0x104>
   12440:	add	r0, pc, r0
   12444:	str	r5, [r0]
   12448:	ldr	r0, [pc, #60]	; 1248c <sfbpf_lex_destroy+0x108>
   1244c:	add	r0, pc, r0
   12450:	str	r5, [r0]
   12454:	mov	r0, #0
   12458:	pop	{r4, r5, fp, pc}
   1245c:	.word	0x0001e5e8
   12460:	.word	0x0001e5d8
   12464:	.word	0x0001e5bc
   12468:	.word	0x0001e5b0
   1246c:	.word	0x0001e5a0
   12470:	.word	0x0001e58c
   12474:	.word	0x0001e57c
   12478:	.word	0x0001e590
   1247c:	.word	0x0001e56c
   12480:	.word	0x0001e550
   12484:	.word	0x0001e548
   12488:	.word	0x0001e52c
   1248c:	.word	0x0001e524

00012490 <sfbpf_realloc>:
   12490:	b	e54 <realloc@plt>

00012494 <sf_lex_init>:
   12494:	push	{r4, sl, fp, lr}
   12498:	add	fp, sp, #8
   1249c:	mov	r4, r0
   124a0:	bl	eb4 <strlen@plt>
   124a4:	mov	r1, r0
   124a8:	mov	r0, r4
   124ac:	bl	122d8 <sfbpf__scan_bytes>
   124b0:	ldr	r1, [pc, #8]	; 124c0 <sf_lex_init+0x2c>
   124b4:	add	r1, pc, r1
   124b8:	str	r0, [r1]
   124bc:	pop	{r4, sl, fp, pc}
   124c0:	.word	0x0001e4e8

000124c4 <sf_lex_cleanup>:
   124c4:	push	{fp, lr}
   124c8:	mov	fp, sp
   124cc:	ldr	r0, [pc, #28]	; 124f0 <sf_lex_cleanup+0x2c>
   124d0:	ldr	r0, [pc, r0]
   124d4:	cmp	r0, #0
   124d8:	blne	11ed4 <sfbpf__delete_buffer>
   124dc:	ldr	r0, [pc, #16]	; 124f4 <sf_lex_cleanup+0x30>
   124e0:	mov	r1, #0
   124e4:	add	r0, pc, r0
   124e8:	str	r1, [r0]
   124ec:	pop	{fp, pc}
   124f0:	.word	0x0001e4cc
   124f4:	.word	0x0001e4b8

Disassembly of section .fini:

000124f8 <_fini>:
   124f8:	push	{r3, lr}
   124fc:	pop	{r3, pc}
