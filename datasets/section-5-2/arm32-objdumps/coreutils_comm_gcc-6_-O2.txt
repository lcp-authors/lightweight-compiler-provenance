
../repos/coreutils/src/comm:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	11750 <close@plt+0x88c>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <fdopen@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <fdopen@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <fdopen@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #90112	; 0x16000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <calloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #90112	; 0x16000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fputs_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #90112	; 0x16000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <raise@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #90112	; 0x16000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #90112	; 0x16000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <posix_fadvise64@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #90112	; 0x16000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <fflush@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #90112	; 0x16000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <free@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #90112	; 0x16000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <_exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #90112	; 0x16000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <memcpy@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #90112	; 0x16000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <mbsinit@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #90112	; 0x16000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <fwrite_unlocked@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #90112	; 0x16000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <memcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fputc_unlocked@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <dcgettext@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <textdomain@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <iswprint@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <fwrite@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <lseek64@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <__ctype_get_mb_cur_max@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__fpending@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <mbrtowc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <error@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <strcoll@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <malloc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <__libc_start_main@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <__freading@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__gmon_start__@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <getopt_long@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__ctype_b_loc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <strlen@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <__cxa_atexit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <memset@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <__printf_chk@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <fileno@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <fclose@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <fseeko64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <fcntl64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <__uflow@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <setlocale@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

00010e7c <strrchr@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #568]!	; 0x238

00010e88 <nl_langinfo@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #560]!	; 0x230

00010e94 <fopen64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #552]!	; 0x228

00010ea0 <bindtextdomain@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #544]!	; 0x220

00010eac <strncmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #536]!	; 0x218

00010eb8 <abort@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #528]!	; 0x210

00010ec4 <close@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #520]!	; 0x208

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ed4:	mov	r6, r0
   10ed8:	sub	sp, sp, #316	; 0x13c
   10edc:	ldr	r0, [r1]
   10ee0:	mov	r5, r1
   10ee4:	bl	12364 <close@plt+0x14a0>
   10ee8:	ldr	r1, [pc, #1968]	; 116a0 <close@plt+0x7dc>
   10eec:	mov	r0, #6
   10ef0:	bl	10e70 <setlocale@plt>
   10ef4:	ldr	r1, [pc, #1960]	; 116a4 <close@plt+0x7e0>
   10ef8:	ldr	r0, [pc, #1960]	; 116a8 <close@plt+0x7e4>
   10efc:	bl	10ea0 <bindtextdomain@plt>
   10f00:	ldr	r0, [pc, #1952]	; 116a8 <close@plt+0x7e4>
   10f04:	bl	10d2c <textdomain@plt>
   10f08:	mov	r0, #3
   10f0c:	bl	1212c <close@plt+0x1268>
   10f10:	ldr	sl, [pc, #1940]	; 116ac <close@plt+0x7e8>
   10f14:	ldr	r8, [pc, #1940]	; 116b0 <close@plt+0x7ec>
   10f18:	ldr	r7, [pc, #1940]	; 116b4 <close@plt+0x7f0>
   10f1c:	ldr	r9, [pc, #1940]	; 116b8 <close@plt+0x7f4>
   10f20:	ldr	fp, [pc, #1940]	; 116bc <close@plt+0x7f8>
   10f24:	strb	r0, [sl, #14]
   10f28:	ldr	r0, [pc, #1936]	; 116c0 <close@plt+0x7fc>
   10f2c:	bl	15ad0 <close@plt+0x4c0c>
   10f30:	mov	r3, #1
   10f34:	strb	r3, [sl]
   10f38:	strb	r3, [sl, #1]
   10f3c:	strb	r3, [sl, #8]
   10f40:	mov	r3, #0
   10f44:	strb	r3, [sl, #20]
   10f48:	strb	r3, [sl, #13]
   10f4c:	strb	r3, [sl, #12]
   10f50:	str	r3, [sl, #16]
   10f54:	strb	r3, [sl, #21]
   10f58:	mov	r4, #0
   10f5c:	str	r4, [sp]
   10f60:	mov	r3, r8
   10f64:	mov	r2, r7
   10f68:	mov	r1, r5
   10f6c:	mov	r0, r6
   10f70:	bl	10dc8 <getopt_long@plt>
   10f74:	cmn	r0, #1
   10f78:	beq	11094 <close@plt+0x1d0>
   10f7c:	cmp	r0, #51	; 0x33
   10f80:	beq	11114 <close@plt+0x250>
   10f84:	ble	10fb0 <close@plt+0xec>
   10f88:	cmp	r0, r9
   10f8c:	beq	11100 <close@plt+0x23c>
   10f90:	bgt	10fd4 <close@plt+0x110>
   10f94:	cmp	r0, #122	; 0x7a
   10f98:	beq	1104c <close@plt+0x188>
   10f9c:	cmp	r0, #256	; 0x100
   10fa0:	bne	110f8 <close@plt+0x234>
   10fa4:	mov	r3, #1
   10fa8:	str	r3, [sl, #16]
   10fac:	b	10f58 <close@plt+0x94>
   10fb0:	cmn	r0, #2
   10fb4:	beq	1110c <close@plt+0x248>
   10fb8:	ble	11054 <close@plt+0x190>
   10fbc:	cmp	r0, #49	; 0x31
   10fc0:	beq	11044 <close@plt+0x180>
   10fc4:	cmp	r0, #50	; 0x32
   10fc8:	bne	110f8 <close@plt+0x234>
   10fcc:	strb	r4, [sl, #1]
   10fd0:	b	10f58 <close@plt+0x94>
   10fd4:	ldr	r3, [pc, #1768]	; 116c4 <close@plt+0x800>
   10fd8:	cmp	r0, r3
   10fdc:	beq	10ff8 <close@plt+0x134>
   10fe0:	add	r3, r3, #1
   10fe4:	cmp	r0, r3
   10fe8:	bne	110f8 <close@plt+0x234>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [sl, #21]
   10ff4:	b	10f58 <close@plt+0x94>
   10ff8:	ldr	r3, [sl, #4]
   10ffc:	cmp	r3, #0
   11000:	beq	1101c <close@plt+0x158>
   11004:	ldr	r3, [pc, #1724]	; 116c8 <close@plt+0x804>
   11008:	ldr	r0, [fp]
   1100c:	ldr	r1, [r3]
   11010:	bl	10c9c <strcmp@plt>
   11014:	cmp	r0, #0
   11018:	bne	113cc <close@plt+0x508>
   1101c:	ldr	r3, [pc, #1700]	; 116c8 <close@plt+0x804>
   11020:	ldr	r0, [r3]
   11024:	str	r0, [fp]
   11028:	ldrb	r3, [r0]
   1102c:	cmp	r3, #0
   11030:	moveq	r0, #1
   11034:	beq	1103c <close@plt+0x178>
   11038:	bl	10dec <strlen@plt>
   1103c:	str	r0, [sl, #4]
   11040:	b	10f58 <close@plt+0x94>
   11044:	strb	r4, [sl]
   11048:	b	10f58 <close@plt+0x94>
   1104c:	strb	r4, [fp, #4]
   11050:	b	10f58 <close@plt+0x94>
   11054:	cmn	r0, #3
   11058:	bne	110f8 <close@plt+0x234>
   1105c:	ldr	r3, [pc, #1640]	; 116cc <close@plt+0x808>
   11060:	ldr	r0, [pc, #1640]	; 116d0 <close@plt+0x80c>
   11064:	ldr	r1, [pc, #1640]	; 116d4 <close@plt+0x810>
   11068:	ldr	r2, [pc, #1640]	; 116d8 <close@plt+0x814>
   1106c:	str	r4, [sp, #8]
   11070:	ldr	r0, [r0]
   11074:	ldr	r3, [r3]
   11078:	str	r1, [sp, #4]
   1107c:	str	r2, [sp]
   11080:	ldr	r1, [pc, #1620]	; 116dc <close@plt+0x818>
   11084:	ldr	r2, [pc, #1620]	; 116e0 <close@plt+0x81c>
   11088:	bl	14704 <close@plt+0x3840>
   1108c:	mov	r0, r4
   11090:	bl	10de0 <exit@plt>
   11094:	ldr	r3, [sl, #4]
   11098:	cmp	r3, r4
   1109c:	ldr	r4, [pc, #1600]	; 116e4 <close@plt+0x820>
   110a0:	moveq	r3, #1
   110a4:	streq	r3, [sl, #4]
   110a8:	ldr	r2, [r4]
   110ac:	sub	r3, r6, r2
   110b0:	cmp	r3, #1
   110b4:	ble	114f8 <close@plt+0x634>
   110b8:	cmp	r3, #2
   110bc:	beq	1111c <close@plt+0x258>
   110c0:	mov	r2, #5
   110c4:	ldr	r1, [pc, #1564]	; 116e8 <close@plt+0x824>
   110c8:	mov	r0, #0
   110cc:	bl	10d14 <dcgettext@plt>
   110d0:	ldr	r3, [r4]
   110d4:	add	r3, r3, #2
   110d8:	mov	r6, r0
   110dc:	ldr	r0, [r5, r3, lsl #2]
   110e0:	bl	14224 <close@plt+0x3360>
   110e4:	mov	r2, r6
   110e8:	mov	r3, r0
   110ec:	mov	r1, #0
   110f0:	mov	r0, r1
   110f4:	bl	10d80 <error@plt>
   110f8:	mov	r0, #1
   110fc:	bl	119e0 <close@plt+0xb1c>
   11100:	mov	r3, #2
   11104:	str	r3, [sl, #16]
   11108:	b	10f58 <close@plt+0x94>
   1110c:	mov	r0, r4
   11110:	bl	119e0 <close@plt+0xb1c>
   11114:	strb	r4, [sl, #8]
   11118:	b	10f58 <close@plt+0x94>
   1111c:	mov	r7, #0
   11120:	mov	r4, r7
   11124:	add	r3, r5, r2, lsl #2
   11128:	str	r3, [sp, #68]	; 0x44
   1112c:	str	r3, [sp, #28]
   11130:	mov	r6, #48	; 0x30
   11134:	add	r3, sp, #184	; 0xb8
   11138:	mul	r6, r6, r4
   1113c:	add	r9, r3, r4, lsl #4
   11140:	mov	r5, #0
   11144:	mov	r8, #12
   11148:	mla	fp, r8, r5, r6
   1114c:	add	r3, sp, #216	; 0xd8
   11150:	add	fp, r3, fp
   11154:	mov	r0, fp
   11158:	bl	121f0 <close@plt+0x132c>
   1115c:	str	fp, [r9, r5, lsl #2]
   11160:	add	r5, r5, #1
   11164:	cmp	r5, #4
   11168:	bne	11148 <close@plt+0x284>
   1116c:	ldr	r3, [sp, #28]
   11170:	mov	r2, #0
   11174:	mov	r5, r3
   11178:	ldr	r6, [r3], #4
   1117c:	ldr	r1, [pc, #1384]	; 116ec <close@plt+0x828>
   11180:	str	r3, [sp, #28]
   11184:	add	r3, sp, #160	; 0xa0
   11188:	mov	r0, r6
   1118c:	str	r2, [r3, r7]!
   11190:	str	r2, [r3, #4]
   11194:	str	r2, [r3, #8]
   11198:	bl	10c9c <strcmp@plt>
   1119c:	cmp	r0, #0
   111a0:	ldreq	r3, [pc, #1352]	; 116f0 <close@plt+0x82c>
   111a4:	ldreq	r6, [r3]
   111a8:	bne	11554 <close@plt+0x690>
   111ac:	add	r3, sp, #80	; 0x50
   111b0:	cmp	r6, #0
   111b4:	str	r6, [r3, r4, lsl #2]
   111b8:	beq	115e0 <close@plt+0x71c>
   111bc:	mov	r1, #2
   111c0:	mov	r0, r6
   111c4:	bl	11ec0 <close@plt+0xffc>
   111c8:	add	r3, sp, #160	; 0xa0
   111cc:	add	r0, sp, #312	; 0x138
   111d0:	ldr	r3, [r3, r7]
   111d4:	ldr	r2, [pc, #1248]	; 116bc <close@plt+0x7f8>
   111d8:	add	r3, r3, r4, lsl #2
   111dc:	mov	r1, r6
   111e0:	add	r3, r0, r3, lsl #2
   111e4:	ldrb	r2, [r2, #4]
   111e8:	ldr	r0, [r3, #-128]	; 0xffffff80
   111ec:	bl	12204 <close@plt+0x1340>
   111f0:	ldr	r3, [r6]
   111f4:	add	r2, sp, #72	; 0x48
   111f8:	ands	r3, r3, #32
   111fc:	str	r0, [r2, r4, lsl #2]
   11200:	bne	115e0 <close@plt+0x71c>
   11204:	add	r4, r4, #1
   11208:	cmp	r4, #2
   1120c:	add	r7, r7, #12
   11210:	bne	11130 <close@plt+0x26c>
   11214:	mov	r2, #0
   11218:	str	r3, [sp, #44]	; 0x2c
   1121c:	mov	r3, #0
   11220:	str	r4, [sp, #64]	; 0x40
   11224:	strd	r2, [sp, #48]	; 0x30
   11228:	strd	r2, [sp, #32]
   1122c:	strd	r2, [sp, #56]	; 0x38
   11230:	mov	r8, #1
   11234:	add	r9, sp, #136	; 0x88
   11238:	b	11250 <close@plt+0x38c>
   1123c:	add	r4, r4, #1
   11240:	cmp	r4, #2
   11244:	add	r7, r7, #1
   11248:	add	r5, r5, #12
   1124c:	bne	11300 <close@plt+0x43c>
   11250:	ldr	r5, [sp, #72]	; 0x48
   11254:	ldr	r4, [sp, #76]	; 0x4c
   11258:	cmp	r5, #0
   1125c:	beq	114e4 <close@plt+0x620>
   11260:	mov	r3, #0
   11264:	cmp	r4, #0
   11268:	strb	r3, [sp, #136]	; 0x88
   1126c:	strb	r3, [sp, #137]	; 0x89
   11270:	beq	1142c <close@plt+0x568>
   11274:	ldrb	r3, [sl, #14]
   11278:	cmp	r3, #0
   1127c:	bne	1145c <close@plt+0x598>
   11280:	ldr	r7, [r4, #4]
   11284:	ldr	r6, [r5, #4]
   11288:	ldr	r1, [r4, #8]
   1128c:	cmp	r7, r6
   11290:	movlt	r2, r7
   11294:	movge	r2, r6
   11298:	sub	r2, r2, #1
   1129c:	ldr	r0, [r5, #8]
   112a0:	bl	10cfc <memcmp@plt>
   112a4:	cmp	r0, #0
   112a8:	bne	113ec <close@plt+0x528>
   112ac:	cmp	r7, r6
   112b0:	bgt	1142c <close@plt+0x568>
   112b4:	movne	r0, #1
   112b8:	moveq	r0, #0
   112bc:	cmp	r0, #0
   112c0:	bne	113ec <close@plt+0x528>
   112c4:	add	r1, r4, #8
   112c8:	add	r0, r4, #4
   112cc:	ldrd	r4, [sp, #48]	; 0x30
   112d0:	ldr	r2, [pc, #1016]	; 116d0 <close@plt+0x80c>
   112d4:	mov	r3, #3
   112d8:	adds	r4, r4, #1
   112dc:	adc	r5, r5, #0
   112e0:	ldr	r2, [r2]
   112e4:	strd	r4, [sp, #48]	; 0x30
   112e8:	bl	1183c <close@plt+0x978>
   112ec:	strb	r8, [sp, #137]	; 0x89
   112f0:	strb	r8, [sp, #136]	; 0x88
   112f4:	ldr	r4, [sp, #44]	; 0x2c
   112f8:	add	r5, sp, #160	; 0xa0
   112fc:	mov	r7, #1
   11300:	ldrb	r3, [r9, r4]
   11304:	cmp	r3, #0
   11308:	beq	1123c <close@plt+0x378>
   1130c:	ldr	r6, [r5]
   11310:	lsl	r3, r4, #2
   11314:	add	ip, r6, #1
   11318:	and	ip, ip, #3
   1131c:	add	r2, r3, ip
   11320:	str	r3, [sp, #40]	; 0x28
   11324:	add	r3, sp, #80	; 0x50
   11328:	add	r1, sp, #312	; 0x138
   1132c:	ldr	r3, [r3, r4, lsl #2]
   11330:	add	r2, r1, r2, lsl #2
   11334:	str	r3, [sp, #28]
   11338:	ldr	fp, [r5, #4]
   1133c:	mov	r1, r3
   11340:	ldr	r3, [pc, #884]	; 116bc <close@plt+0x7f8>
   11344:	ldr	r0, [r2, #-128]	; 0xffffff80
   11348:	str	ip, [r5]
   1134c:	ldrb	r2, [r3, #4]
   11350:	stmib	r5, {r6, fp}
   11354:	bl	12204 <close@plt+0x1340>
   11358:	add	r3, sp, #72	; 0x48
   1135c:	cmp	r0, #0
   11360:	str	r0, [r3, r4, lsl #2]
   11364:	ldr	r3, [sp, #40]	; 0x28
   11368:	beq	1147c <close@plt+0x5b8>
   1136c:	ldr	r2, [sl, #16]
   11370:	cmp	r2, #2
   11374:	beq	113b4 <close@plt+0x4f0>
   11378:	cmp	r2, #1
   1137c:	beq	1138c <close@plt+0x4c8>
   11380:	ldrb	r2, [sl, #20]
   11384:	cmp	r2, #0
   11388:	beq	113b4 <close@plt+0x4f0>
   1138c:	add	r6, r3, r6
   11390:	add	r3, sp, #312	; 0x138
   11394:	add	r6, r3, r6, lsl #2
   11398:	str	r7, [sp]
   1139c:	ldr	ip, [r6, #-128]	; 0xffffff80
   113a0:	add	r3, r0, #8
   113a4:	add	r2, r0, #4
   113a8:	add	r1, ip, #8
   113ac:	add	r0, ip, #4
   113b0:	bl	1192c <close@plt+0xa68>
   113b4:	ldr	r3, [sp, #28]
   113b8:	ldr	r3, [r3]
   113bc:	ands	r3, r3, #32
   113c0:	bne	11524 <close@plt+0x660>
   113c4:	strb	r3, [r9, r4]
   113c8:	b	1123c <close@plt+0x378>
   113cc:	ldr	r1, [pc, #800]	; 116f4 <close@plt+0x830>
   113d0:	mov	r2, #5
   113d4:	mov	r0, #0
   113d8:	bl	10d14 <dcgettext@plt>
   113dc:	mov	r1, #0
   113e0:	mov	r2, r0
   113e4:	mov	r0, #1
   113e8:	bl	10d80 <error@plt>
   113ec:	cmp	r0, #0
   113f0:	strb	r8, [sl, #20]
   113f4:	ldrgt	r4, [sp, #76]	; 0x4c
   113f8:	ble	11688 <close@plt+0x7c4>
   113fc:	add	r1, r4, #8
   11400:	add	r0, r4, #4
   11404:	ldrd	r4, [sp, #32]
   11408:	ldr	r2, [pc, #704]	; 116d0 <close@plt+0x80c>
   1140c:	ldr	r3, [sp, #64]	; 0x40
   11410:	adds	r4, r4, #1
   11414:	adc	r5, r5, #0
   11418:	ldr	r2, [r2]
   1141c:	strd	r4, [sp, #32]
   11420:	bl	1183c <close@plt+0x978>
   11424:	strb	r8, [sp, #137]	; 0x89
   11428:	b	112f4 <close@plt+0x430>
   1142c:	ldr	r2, [pc, #668]	; 116d0 <close@plt+0x80c>
   11430:	mov	r3, #1
   11434:	add	r1, r5, #8
   11438:	ldr	r2, [r2]
   1143c:	add	r0, r5, #4
   11440:	strb	r8, [sl, #20]
   11444:	ldrd	r4, [sp, #56]	; 0x38
   11448:	adds	r4, r4, #1
   1144c:	adc	r5, r5, #0
   11450:	strd	r4, [sp, #56]	; 0x38
   11454:	bl	1183c <close@plt+0x978>
   11458:	b	112f0 <close@plt+0x42c>
   1145c:	ldr	r3, [r4, #4]
   11460:	ldr	r1, [r5, #4]
   11464:	sub	r3, r3, #1
   11468:	sub	r1, r1, #1
   1146c:	ldr	r2, [r4, #8]
   11470:	ldr	r0, [r5, #8]
   11474:	bl	14e54 <close@plt+0x3f90>
   11478:	b	112bc <close@plt+0x3f8>
   1147c:	add	fp, r3, fp
   11480:	add	r2, sp, #312	; 0x138
   11484:	add	fp, r2, fp, lsl #2
   11488:	ldr	r0, [fp, #-128]	; 0xffffff80
   1148c:	ldr	r2, [r0, #8]
   11490:	cmp	r2, #0
   11494:	beq	113b4 <close@plt+0x4f0>
   11498:	ldr	r2, [sl, #16]
   1149c:	cmp	r2, #2
   114a0:	beq	113b4 <close@plt+0x4f0>
   114a4:	cmp	r2, #1
   114a8:	beq	114b8 <close@plt+0x5f4>
   114ac:	ldrb	r2, [sl, #20]
   114b0:	cmp	r2, #0
   114b4:	beq	113b4 <close@plt+0x4f0>
   114b8:	add	r3, r3, r6
   114bc:	add	r2, sp, #312	; 0x138
   114c0:	add	r3, r2, r3, lsl #2
   114c4:	str	r7, [sp]
   114c8:	ldr	r2, [r3, #-128]	; 0xffffff80
   114cc:	add	r1, r0, #8
   114d0:	add	r3, r2, #8
   114d4:	add	r0, r0, #4
   114d8:	add	r2, r2, #4
   114dc:	bl	1192c <close@plt+0xa68>
   114e0:	b	113b4 <close@plt+0x4f0>
   114e4:	cmp	r4, #0
   114e8:	beq	11590 <close@plt+0x6cc>
   114ec:	strb	r5, [sp, #136]	; 0x88
   114f0:	strb	r8, [sl, #20]
   114f4:	b	113fc <close@plt+0x538>
   114f8:	cmp	r6, r2
   114fc:	mov	r2, #5
   11500:	bgt	11568 <close@plt+0x6a4>
   11504:	ldr	r1, [pc, #492]	; 116f8 <close@plt+0x834>
   11508:	mov	r0, #0
   1150c:	bl	10d14 <dcgettext@plt>
   11510:	mov	r1, #0
   11514:	mov	r2, r0
   11518:	mov	r0, r1
   1151c:	bl	10d80 <error@plt>
   11520:	b	110f8 <close@plt+0x234>
   11524:	bl	10df8 <__errno_location@plt>
   11528:	ldr	r3, [sp, #68]	; 0x44
   1152c:	ldr	r2, [r3, r4, lsl #2]
   11530:	ldr	r4, [r0]
   11534:	mov	r1, #3
   11538:	mov	r0, #0
   1153c:	bl	140a0 <close@plt+0x31dc>
   11540:	mov	r1, r4
   11544:	ldr	r2, [pc, #432]	; 116fc <close@plt+0x838>
   11548:	mov	r3, r0
   1154c:	mov	r0, #1
   11550:	bl	10d80 <error@plt>
   11554:	mov	r0, r6
   11558:	ldr	r1, [pc, #416]	; 11700 <close@plt+0x83c>
   1155c:	bl	11ff4 <close@plt+0x1130>
   11560:	mov	r6, r0
   11564:	b	111ac <close@plt+0x2e8>
   11568:	ldr	r1, [pc, #404]	; 11704 <close@plt+0x840>
   1156c:	mov	r0, #0
   11570:	bl	10d14 <dcgettext@plt>
   11574:	sub	r6, r6, #-1073741823	; 0xc0000001
   11578:	mov	r4, r0
   1157c:	ldr	r0, [r5, r6, lsl #2]
   11580:	bl	14224 <close@plt+0x3360>
   11584:	mov	r2, r4
   11588:	mov	r3, r0
   1158c:	b	110ec <close@plt+0x228>
   11590:	ldr	r0, [sp, #80]	; 0x50
   11594:	bl	11ef4 <close@plt+0x1030>
   11598:	cmp	r0, #0
   1159c:	bne	11674 <close@plt+0x7b0>
   115a0:	ldr	r0, [sp, #84]	; 0x54
   115a4:	bl	11ef4 <close@plt+0x1030>
   115a8:	subs	r4, r0, #0
   115ac:	bne	1166c <close@plt+0x7a8>
   115b0:	ldrb	r3, [sl, #21]
   115b4:	cmp	r3, #0
   115b8:	bne	115ec <close@plt+0x728>
   115bc:	ldrb	r3, [sl, #12]
   115c0:	cmp	r3, #0
   115c4:	bne	115d4 <close@plt+0x710>
   115c8:	ldrb	r0, [sl, #13]
   115cc:	cmp	r0, #0
   115d0:	beq	11668 <close@plt+0x7a4>
   115d4:	mov	r2, #5
   115d8:	ldr	r1, [pc, #296]	; 11708 <close@plt+0x844>
   115dc:	b	113d4 <close@plt+0x510>
   115e0:	bl	10df8 <__errno_location@plt>
   115e4:	ldr	r2, [r5]
   115e8:	b	11530 <close@plt+0x66c>
   115ec:	ldrd	r0, [sp, #56]	; 0x38
   115f0:	add	r2, sp, #88	; 0x58
   115f4:	bl	12188 <close@plt+0x12c4>
   115f8:	add	r2, sp, #112	; 0x70
   115fc:	mov	r5, r0
   11600:	ldrd	r0, [sp, #32]
   11604:	bl	12188 <close@plt+0x12c4>
   11608:	add	r2, sp, #136	; 0x88
   1160c:	mov	r6, r0
   11610:	ldrd	r0, [sp, #48]	; 0x30
   11614:	bl	12188 <close@plt+0x12c4>
   11618:	ldr	r3, [pc, #156]	; 116bc <close@plt+0x7f8>
   1161c:	mov	r2, #5
   11620:	ldr	r1, [pc, #228]	; 1170c <close@plt+0x848>
   11624:	mov	r7, r0
   11628:	mov	r0, r4
   1162c:	ldr	r4, [r3]
   11630:	bl	10d14 <dcgettext@plt>
   11634:	ldr	r3, [pc, #128]	; 116bc <close@plt+0x7f8>
   11638:	mov	r2, r5
   1163c:	ldrb	r1, [r3, #4]
   11640:	str	r4, [sp, #12]
   11644:	stmib	sp, {r4, r7}
   11648:	str	r1, [sp, #20]
   1164c:	str	r6, [sp]
   11650:	mov	r3, r4
   11654:	ldr	r1, [pc, #180]	; 11710 <close@plt+0x84c>
   11658:	str	r0, [sp, #16]
   1165c:	mov	r0, #1
   11660:	bl	10e1c <__printf_chk@plt>
   11664:	b	115bc <close@plt+0x6f8>
   11668:	bl	10de0 <exit@plt>
   1166c:	mov	r3, #1
   11670:	str	r3, [sp, #44]	; 0x2c
   11674:	bl	10df8 <__errno_location@plt>
   11678:	ldr	r3, [sp, #68]	; 0x44
   1167c:	ldr	r2, [sp, #44]	; 0x2c
   11680:	ldr	r2, [r3, r2, lsl #2]
   11684:	b	11530 <close@plt+0x66c>
   11688:	ldr	r2, [pc, #64]	; 116d0 <close@plt+0x80c>
   1168c:	mov	r3, r8
   11690:	add	r1, r5, #8
   11694:	ldr	r2, [r2]
   11698:	add	r0, r5, #4
   1169c:	b	11444 <close@plt+0x580>
   116a0:	andeq	r5, r1, ip, asr #26
   116a4:	ldrdeq	r6, [r1], -r4
   116a8:	andeq	r6, r1, ip, lsr #2
   116ac:	andeq	r7, r2, r0, ror #2
   116b0:	andeq	r5, r1, ip, lsr #22
   116b4:	andeq	r6, r1, r8, lsr r2
   116b8:	andeq	r0, r0, r1, lsl #2
   116bc:	andeq	r7, r2, r4, ror #1
   116c0:	ldrdeq	r1, [r1], -r0
   116c4:	andeq	r0, r0, r2, lsl #2
   116c8:	andeq	r7, r2, r8, asr r1
   116cc:	andeq	r7, r2, ip, ror #1
   116d0:	andeq	r7, r2, r4, asr r1
   116d4:	andeq	r6, r1, r4, lsl r2
   116d8:	andeq	r6, r1, r4, lsr #4
   116dc:	andeq	r5, r1, ip, asr #23
   116e0:	andeq	r6, r1, r8, lsr #2
   116e4:	andeq	r7, r2, r0, asr #2
   116e8:	andeq	r6, r1, ip, ror #4
   116ec:	andeq	r6, r1, r0, lsl #5
   116f0:	andeq	r7, r2, r0, asr r1
   116f4:	andeq	r6, r1, ip, ror #3
   116f8:	andeq	r6, r1, r0, asr #4
   116fc:	andeq	r6, r1, r0, lsr #7
   11700:	andeq	r6, r1, r4, asr #6
   11704:	andeq	r6, r1, r0, asr r2
   11708:	andeq	r6, r1, r0, lsr #5
   1170c:	andeq	r6, r1, r4, lsl #5
   11710:	andeq	r6, r1, ip, lsl #5
   11714:	mov	fp, #0
   11718:	mov	lr, #0
   1171c:	pop	{r1}		; (ldr r1, [sp], #4)
   11720:	mov	r2, sp
   11724:	push	{r2}		; (str r2, [sp, #-4]!)
   11728:	push	{r0}		; (str r0, [sp, #-4]!)
   1172c:	ldr	ip, [pc, #16]	; 11744 <close@plt+0x880>
   11730:	push	{ip}		; (str ip, [sp, #-4]!)
   11734:	ldr	r0, [pc, #12]	; 11748 <close@plt+0x884>
   11738:	ldr	r3, [pc, #12]	; 1174c <close@plt+0x888>
   1173c:	bl	10da4 <__libc_start_main@plt>
   11740:	bl	10eb8 <abort@plt>
   11744:	andeq	r5, r1, ip, asr #21
   11748:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1174c:	andeq	r5, r1, ip, ror #20
   11750:	ldr	r3, [pc, #20]	; 1176c <close@plt+0x8a8>
   11754:	ldr	r2, [pc, #20]	; 11770 <close@plt+0x8ac>
   11758:	add	r3, pc, r3
   1175c:	ldr	r2, [r3, r2]
   11760:	cmp	r2, #0
   11764:	bxeq	lr
   11768:	b	10dbc <__gmon_start__@plt>
   1176c:	andeq	r5, r1, r0, lsr #17
   11770:	ldrdeq	r0, [r0], -r8
   11774:	ldr	r3, [pc, #28]	; 11798 <close@plt+0x8d4>
   11778:	ldr	r0, [pc, #28]	; 1179c <close@plt+0x8d8>
   1177c:	sub	r3, r3, r0
   11780:	cmp	r3, #6
   11784:	bxls	lr
   11788:	ldr	r3, [pc, #16]	; 117a0 <close@plt+0x8dc>
   1178c:	cmp	r3, #0
   11790:	bxeq	lr
   11794:	bx	r3
   11798:	andeq	r7, r2, r7, lsr r1
   1179c:	andeq	r7, r2, r4, lsr r1
   117a0:	andeq	r0, r0, r0
   117a4:	ldr	r1, [pc, #36]	; 117d0 <close@plt+0x90c>
   117a8:	ldr	r0, [pc, #36]	; 117d4 <close@plt+0x910>
   117ac:	sub	r1, r1, r0
   117b0:	asr	r1, r1, #2
   117b4:	add	r1, r1, r1, lsr #31
   117b8:	asrs	r1, r1, #1
   117bc:	bxeq	lr
   117c0:	ldr	r3, [pc, #16]	; 117d8 <close@plt+0x914>
   117c4:	cmp	r3, #0
   117c8:	bxeq	lr
   117cc:	bx	r3
   117d0:	andeq	r7, r2, r4, lsr r1
   117d4:	andeq	r7, r2, r4, lsr r1
   117d8:	andeq	r0, r0, r0
   117dc:	push	{r4, lr}
   117e0:	ldr	r4, [pc, #24]	; 11800 <close@plt+0x93c>
   117e4:	ldrb	r3, [r4]
   117e8:	cmp	r3, #0
   117ec:	popne	{r4, pc}
   117f0:	bl	11774 <close@plt+0x8b0>
   117f4:	mov	r3, #1
   117f8:	strb	r3, [r4]
   117fc:	pop	{r4, pc}
   11800:	andeq	r7, r2, ip, asr r1
   11804:	ldr	r0, [pc, #40]	; 11834 <close@plt+0x970>
   11808:	ldr	r3, [r0]
   1180c:	cmp	r3, #0
   11810:	bne	11818 <close@plt+0x954>
   11814:	b	117a4 <close@plt+0x8e0>
   11818:	ldr	r3, [pc, #24]	; 11838 <close@plt+0x974>
   1181c:	cmp	r3, #0
   11820:	beq	11814 <close@plt+0x950>
   11824:	push	{r4, lr}
   11828:	blx	r3
   1182c:	pop	{r4, lr}
   11830:	b	117a4 <close@plt+0x8e0>
   11834:	andeq	r6, r2, r4, lsl pc
   11838:	andeq	r0, r0, r0
   1183c:	cmp	r3, #2
   11840:	push	{r4, r5, r6, r7, r8, lr}
   11844:	mov	r6, r0
   11848:	mov	r5, r1
   1184c:	mov	r4, r2
   11850:	beq	118ec <close@plt+0xa28>
   11854:	cmp	r3, #3
   11858:	beq	11890 <close@plt+0x9cc>
   1185c:	cmp	r3, #1
   11860:	beq	1187c <close@plt+0x9b8>
   11864:	mov	r3, r4
   11868:	ldr	r2, [r6]
   1186c:	ldr	r0, [r5]
   11870:	mov	r1, #1
   11874:	pop	{r4, r5, r6, r7, r8, lr}
   11878:	b	10cf0 <fwrite_unlocked@plt>
   1187c:	ldr	r3, [pc, #160]	; 11924 <close@plt+0xa60>
   11880:	ldrb	r3, [r3]
   11884:	cmp	r3, #0
   11888:	bne	11864 <close@plt+0x9a0>
   1188c:	pop	{r4, r5, r6, r7, r8, pc}
   11890:	ldr	r7, [pc, #140]	; 11924 <close@plt+0xa60>
   11894:	ldrb	r3, [r7, #8]
   11898:	cmp	r3, #0
   1189c:	popeq	{r4, r5, r6, r7, r8, pc}
   118a0:	ldrb	r3, [r7]
   118a4:	cmp	r3, #0
   118a8:	beq	118c4 <close@plt+0xa00>
   118ac:	ldr	r1, [pc, #116]	; 11928 <close@plt+0xa64>
   118b0:	mov	r3, r2
   118b4:	ldr	r2, [r7, #4]
   118b8:	ldr	r0, [r1]
   118bc:	mov	r1, #1
   118c0:	bl	10cf0 <fwrite_unlocked@plt>
   118c4:	ldrb	r3, [r7, #1]
   118c8:	cmp	r3, #0
   118cc:	beq	11864 <close@plt+0x9a0>
   118d0:	ldr	r1, [pc, #80]	; 11928 <close@plt+0xa64>
   118d4:	ldr	r2, [r7, #4]
   118d8:	mov	r3, r4
   118dc:	ldr	r0, [r1]
   118e0:	mov	r1, #1
   118e4:	bl	10cf0 <fwrite_unlocked@plt>
   118e8:	b	11864 <close@plt+0x9a0>
   118ec:	ldr	r3, [pc, #48]	; 11924 <close@plt+0xa60>
   118f0:	ldrb	r2, [r3, #1]
   118f4:	cmp	r2, #0
   118f8:	popeq	{r4, r5, r6, r7, r8, pc}
   118fc:	ldrb	r2, [r3]
   11900:	cmp	r2, #0
   11904:	beq	11864 <close@plt+0x9a0>
   11908:	ldr	r1, [pc, #24]	; 11928 <close@plt+0xa64>
   1190c:	ldr	r2, [r3, #4]
   11910:	mov	r3, r4
   11914:	ldr	r0, [r1]
   11918:	mov	r1, #1
   1191c:	bl	10cf0 <fwrite_unlocked@plt>
   11920:	b	11864 <close@plt+0x9a0>
   11924:	andeq	r7, r2, r0, ror #2
   11928:	andeq	r7, r2, r4, ror #1
   1192c:	push	{r4, r5, r6, r7, r8, lr}
   11930:	ldr	r6, [sp, #24]
   11934:	ldr	r4, [pc, #156]	; 119d8 <close@plt+0xb14>
   11938:	sub	r5, r6, #1
   1193c:	add	ip, r4, r5
   11940:	ldrb	ip, [ip, #12]
   11944:	cmp	ip, #0
   11948:	popne	{r4, r5, r6, r7, r8, pc}
   1194c:	mov	lr, r3
   11950:	ldrb	r3, [r4, #14]
   11954:	mov	ip, r1
   11958:	ldr	r1, [r0]
   1195c:	cmp	r3, #0
   11960:	ldr	r3, [r2]
   11964:	sub	r1, r1, #1
   11968:	sub	r3, r3, #1
   1196c:	ldr	r2, [lr]
   11970:	ldr	r0, [ip]
   11974:	bne	119c8 <close@plt+0xb04>
   11978:	bl	12320 <close@plt+0x145c>
   1197c:	cmp	r0, #0
   11980:	pople	{r4, r5, r6, r7, r8, pc}
   11984:	mov	r2, #5
   11988:	ldr	r1, [pc, #76]	; 119dc <close@plt+0xb18>
   1198c:	mov	r0, #0
   11990:	ldr	r7, [r4, #16]
   11994:	bl	10d14 <dcgettext@plt>
   11998:	sub	r7, r7, #1
   1199c:	clz	r7, r7
   119a0:	lsr	r7, r7, #5
   119a4:	mov	r3, r6
   119a8:	mov	r1, #0
   119ac:	add	r4, r4, r5
   119b0:	mov	r2, r0
   119b4:	mov	r0, r7
   119b8:	bl	10d80 <error@plt>
   119bc:	mov	r3, #1
   119c0:	strb	r3, [r4, #12]
   119c4:	pop	{r4, r5, r6, r7, r8, pc}
   119c8:	bl	14e54 <close@plt+0x3f90>
   119cc:	cmp	r0, #0
   119d0:	bgt	11984 <close@plt+0xac0>
   119d4:	pop	{r4, r5, r6, r7, r8, pc}
   119d8:	andeq	r7, r2, r0, ror #2
   119dc:	andeq	r5, r1, ip, lsr #23
   119e0:	subs	r5, r0, #0
   119e4:	push	{r7, lr}
   119e8:	sub	sp, sp, #56	; 0x38
   119ec:	beq	11a28 <close@plt+0xb64>
   119f0:	ldr	r3, [pc, #840]	; 11d40 <close@plt+0xe7c>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #836]	; 11d44 <close@plt+0xe80>
   119fc:	mov	r0, #0
   11a00:	ldr	r4, [r3]
   11a04:	bl	10d14 <dcgettext@plt>
   11a08:	ldr	r3, [pc, #824]	; 11d48 <close@plt+0xe84>
   11a0c:	mov	r1, #1
   11a10:	ldr	r3, [r3]
   11a14:	mov	r2, r0
   11a18:	mov	r0, r4
   11a1c:	bl	10e34 <__fprintf_chk@plt>
   11a20:	mov	r0, r5
   11a24:	bl	10de0 <exit@plt>
   11a28:	mov	r2, #5
   11a2c:	ldr	r1, [pc, #792]	; 11d4c <close@plt+0xe88>
   11a30:	bl	10d14 <dcgettext@plt>
   11a34:	ldr	r4, [pc, #780]	; 11d48 <close@plt+0xe84>
   11a38:	ldr	r6, [pc, #784]	; 11d50 <close@plt+0xe8c>
   11a3c:	ldr	r2, [r4]
   11a40:	mov	r1, r0
   11a44:	mov	r0, #1
   11a48:	bl	10e1c <__printf_chk@plt>
   11a4c:	mov	r2, #5
   11a50:	ldr	r1, [pc, #764]	; 11d54 <close@plt+0xe90>
   11a54:	mov	r0, r5
   11a58:	bl	10d14 <dcgettext@plt>
   11a5c:	ldr	r1, [r6]
   11a60:	bl	10c84 <fputs_unlocked@plt>
   11a64:	mov	r2, #5
   11a68:	ldr	r1, [pc, #744]	; 11d58 <close@plt+0xe94>
   11a6c:	mov	r0, r5
   11a70:	bl	10d14 <dcgettext@plt>
   11a74:	ldr	r1, [r6]
   11a78:	bl	10c84 <fputs_unlocked@plt>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #724]	; 11d5c <close@plt+0xe98>
   11a84:	mov	r0, r5
   11a88:	bl	10d14 <dcgettext@plt>
   11a8c:	ldr	r1, [r6]
   11a90:	bl	10c84 <fputs_unlocked@plt>
   11a94:	mov	r2, #5
   11a98:	ldr	r1, [pc, #704]	; 11d60 <close@plt+0xe9c>
   11a9c:	mov	r0, r5
   11aa0:	bl	10d14 <dcgettext@plt>
   11aa4:	ldr	r1, [r6]
   11aa8:	bl	10c84 <fputs_unlocked@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #684]	; 11d64 <close@plt+0xea0>
   11ab4:	mov	r0, r5
   11ab8:	bl	10d14 <dcgettext@plt>
   11abc:	ldr	r1, [r6]
   11ac0:	bl	10c84 <fputs_unlocked@plt>
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #664]	; 11d68 <close@plt+0xea4>
   11acc:	mov	r0, r5
   11ad0:	bl	10d14 <dcgettext@plt>
   11ad4:	ldr	r1, [r6]
   11ad8:	bl	10c84 <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #644]	; 11d6c <close@plt+0xea8>
   11ae4:	mov	r0, r5
   11ae8:	bl	10d14 <dcgettext@plt>
   11aec:	ldr	r1, [r6]
   11af0:	bl	10c84 <fputs_unlocked@plt>
   11af4:	mov	r2, #5
   11af8:	ldr	r1, [pc, #624]	; 11d70 <close@plt+0xeac>
   11afc:	mov	r0, r5
   11b00:	bl	10d14 <dcgettext@plt>
   11b04:	ldr	r1, [r6]
   11b08:	bl	10c84 <fputs_unlocked@plt>
   11b0c:	mov	r2, #5
   11b10:	ldr	r1, [pc, #604]	; 11d74 <close@plt+0xeb0>
   11b14:	mov	r0, r5
   11b18:	bl	10d14 <dcgettext@plt>
   11b1c:	ldr	r1, [r6]
   11b20:	bl	10c84 <fputs_unlocked@plt>
   11b24:	mov	r2, #5
   11b28:	ldr	r1, [pc, #584]	; 11d78 <close@plt+0xeb4>
   11b2c:	mov	r0, r5
   11b30:	bl	10d14 <dcgettext@plt>
   11b34:	ldr	r1, [r6]
   11b38:	bl	10c84 <fputs_unlocked@plt>
   11b3c:	mov	r2, #5
   11b40:	ldr	r1, [pc, #564]	; 11d7c <close@plt+0xeb8>
   11b44:	mov	r0, r5
   11b48:	bl	10d14 <dcgettext@plt>
   11b4c:	ldr	r1, [r6]
   11b50:	bl	10c84 <fputs_unlocked@plt>
   11b54:	mov	r2, #5
   11b58:	ldr	r1, [pc, #544]	; 11d80 <close@plt+0xebc>
   11b5c:	mov	r0, r5
   11b60:	bl	10d14 <dcgettext@plt>
   11b64:	ldr	r3, [r4]
   11b68:	ldr	r4, [pc, #532]	; 11d84 <close@plt+0xec0>
   11b6c:	mov	r2, r3
   11b70:	mov	r1, r0
   11b74:	mov	r0, #1
   11b78:	bl	10e1c <__printf_chk@plt>
   11b7c:	ldm	r4!, {r0, r1, r2, r3}
   11b80:	mov	lr, sp
   11b84:	stmia	lr!, {r0, r1, r2, r3}
   11b88:	ldm	r4!, {r0, r1, r2, r3}
   11b8c:	ldr	ip, [sp]
   11b90:	stmia	lr!, {r0, r1, r2, r3}
   11b94:	cmp	ip, #0
   11b98:	ldm	r4!, {r0, r1, r2, r3}
   11b9c:	stmia	lr!, {r0, r1, r2, r3}
   11ba0:	ldm	r4, {r0, r1}
   11ba4:	moveq	r4, sp
   11ba8:	stm	lr, {r0, r1}
   11bac:	beq	11bdc <close@plt+0xd18>
   11bb0:	ldr	r7, [pc, #464]	; 11d88 <close@plt+0xec4>
   11bb4:	mov	r4, sp
   11bb8:	b	11bc8 <close@plt+0xd04>
   11bbc:	ldr	ip, [r4, #8]!
   11bc0:	cmp	ip, #0
   11bc4:	beq	11bdc <close@plt+0xd18>
   11bc8:	mov	r1, ip
   11bcc:	mov	r0, r7
   11bd0:	bl	10c9c <strcmp@plt>
   11bd4:	cmp	r0, #0
   11bd8:	bne	11bbc <close@plt+0xcf8>
   11bdc:	ldr	r4, [r4, #4]
   11be0:	mov	r2, #5
   11be4:	cmp	r4, #0
   11be8:	ldr	r1, [pc, #412]	; 11d8c <close@plt+0xec8>
   11bec:	beq	11c94 <close@plt+0xdd0>
   11bf0:	mov	r0, #0
   11bf4:	bl	10d14 <dcgettext@plt>
   11bf8:	ldr	r3, [pc, #400]	; 11d90 <close@plt+0xecc>
   11bfc:	ldr	r2, [pc, #400]	; 11d94 <close@plt+0xed0>
   11c00:	mov	r1, r0
   11c04:	mov	r0, #1
   11c08:	bl	10e1c <__printf_chk@plt>
   11c0c:	mov	r1, #0
   11c10:	mov	r0, #5
   11c14:	bl	10e70 <setlocale@plt>
   11c18:	cmp	r0, #0
   11c1c:	ldreq	r7, [pc, #356]	; 11d88 <close@plt+0xec4>
   11c20:	beq	11c3c <close@plt+0xd78>
   11c24:	mov	r2, #3
   11c28:	ldr	r1, [pc, #360]	; 11d98 <close@plt+0xed4>
   11c2c:	bl	10eac <strncmp@plt>
   11c30:	ldr	r7, [pc, #336]	; 11d88 <close@plt+0xec4>
   11c34:	cmp	r0, #0
   11c38:	bne	11d24 <close@plt+0xe60>
   11c3c:	mov	r2, #5
   11c40:	ldr	r1, [pc, #340]	; 11d9c <close@plt+0xed8>
   11c44:	mov	r0, #0
   11c48:	bl	10d14 <dcgettext@plt>
   11c4c:	ldr	r3, [pc, #308]	; 11d88 <close@plt+0xec4>
   11c50:	ldr	r2, [pc, #312]	; 11d90 <close@plt+0xecc>
   11c54:	mov	r1, r0
   11c58:	mov	r0, #1
   11c5c:	bl	10e1c <__printf_chk@plt>
   11c60:	mov	r2, #5
   11c64:	ldr	r1, [pc, #308]	; 11da0 <close@plt+0xedc>
   11c68:	mov	r0, #0
   11c6c:	bl	10d14 <dcgettext@plt>
   11c70:	ldr	r2, [pc, #300]	; 11da4 <close@plt+0xee0>
   11c74:	cmp	r4, r7
   11c78:	ldr	r3, [pc, #296]	; 11da8 <close@plt+0xee4>
   11c7c:	movne	r3, r2
   11c80:	mov	r1, r0
   11c84:	mov	r2, r4
   11c88:	mov	r0, #1
   11c8c:	bl	10e1c <__printf_chk@plt>
   11c90:	b	11a20 <close@plt+0xb5c>
   11c94:	mov	r0, r4
   11c98:	bl	10d14 <dcgettext@plt>
   11c9c:	ldr	r3, [pc, #236]	; 11d90 <close@plt+0xecc>
   11ca0:	ldr	r2, [pc, #236]	; 11d94 <close@plt+0xed0>
   11ca4:	mov	r1, r0
   11ca8:	mov	r0, #1
   11cac:	bl	10e1c <__printf_chk@plt>
   11cb0:	mov	r1, r4
   11cb4:	mov	r0, #5
   11cb8:	bl	10e70 <setlocale@plt>
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cd8 <close@plt+0xe14>
   11cc4:	mov	r2, #3
   11cc8:	ldr	r1, [pc, #200]	; 11d98 <close@plt+0xed4>
   11ccc:	bl	10eac <strncmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11d1c <close@plt+0xe58>
   11cd8:	mov	r2, #5
   11cdc:	ldr	r1, [pc, #184]	; 11d9c <close@plt+0xed8>
   11ce0:	mov	r0, #0
   11ce4:	bl	10d14 <dcgettext@plt>
   11ce8:	ldr	r3, [pc, #152]	; 11d88 <close@plt+0xec4>
   11cec:	ldr	r2, [pc, #156]	; 11d90 <close@plt+0xecc>
   11cf0:	mov	r4, r3
   11cf4:	mov	r1, r0
   11cf8:	mov	r0, #1
   11cfc:	bl	10e1c <__printf_chk@plt>
   11d00:	ldr	r1, [pc, #152]	; 11da0 <close@plt+0xedc>
   11d04:	mov	r2, #5
   11d08:	mov	r0, #0
   11d0c:	bl	10d14 <dcgettext@plt>
   11d10:	ldr	r3, [pc, #144]	; 11da8 <close@plt+0xee4>
   11d14:	mov	r1, r0
   11d18:	b	11c84 <close@plt+0xdc0>
   11d1c:	ldr	r7, [pc, #100]	; 11d88 <close@plt+0xec4>
   11d20:	mov	r4, r7
   11d24:	mov	r2, #5
   11d28:	ldr	r1, [pc, #124]	; 11dac <close@plt+0xee8>
   11d2c:	mov	r0, #0
   11d30:	bl	10d14 <dcgettext@plt>
   11d34:	ldr	r1, [r6]
   11d38:	bl	10c84 <fputs_unlocked@plt>
   11d3c:	b	11c3c <close@plt+0xd78>
   11d40:	andeq	r7, r2, r8, asr #2
   11d44:	ldrdeq	r5, [r1], -r4
   11d48:	andeq	r7, r2, r0, lsl #3
   11d4c:	strdeq	r5, [r1], -ip
   11d50:	andeq	r7, r2, r4, asr r1
   11d54:	andeq	r5, r1, r0, lsr #24
   11d58:	andeq	r5, r1, r4, asr ip
   11d5c:	muleq	r1, r0, ip
   11d60:	andeq	r5, r1, r0, asr sp
   11d64:	andeq	r5, r1, r8, lsr #28
   11d68:	strdeq	r5, [r1], -ip
   11d6c:	andeq	r5, r1, r8, lsr pc
   11d70:	andeq	r5, r1, r4, ror #30
   11d74:	andeq	r5, r1, r4, lsr #31
   11d78:	ldrdeq	r5, [r1], -r4
   11d7c:	andeq	r6, r1, ip
   11d80:	andeq	r6, r1, ip, asr #32
   11d84:	strdeq	r5, [r1], -r4
   11d88:	andeq	r5, r1, ip, asr #23
   11d8c:	andeq	r6, r1, r8, ror #1
   11d90:	andeq	r6, r1, r0, lsl #2
   11d94:	andeq	r6, r1, r8, lsr #2
   11d98:	andeq	r6, r1, r8, lsr r1
   11d9c:	andeq	r6, r1, r4, lsl #3
   11da0:	andeq	r6, r1, r0, lsr #3
   11da4:	andeq	r5, r1, ip, asr #26
   11da8:	andeq	r6, r1, r8, asr #5
   11dac:	andeq	r6, r1, ip, lsr r1
   11db0:	ldr	r3, [pc, #4]	; 11dbc <close@plt+0xef8>
   11db4:	str	r0, [r3]
   11db8:	bx	lr
   11dbc:	andeq	r7, r2, r8, ror r1
   11dc0:	ldr	r3, [pc, #4]	; 11dcc <close@plt+0xf08>
   11dc4:	strb	r0, [r3, #4]
   11dc8:	bx	lr
   11dcc:	andeq	r7, r2, r8, ror r1
   11dd0:	ldr	r3, [pc, #192]	; 11e98 <close@plt+0xfd4>
   11dd4:	push	{r4, r5, r6, lr}
   11dd8:	sub	sp, sp, #8
   11ddc:	ldr	r0, [r3]
   11de0:	bl	14fc8 <close@plt+0x4104>
   11de4:	cmp	r0, #0
   11de8:	beq	11e0c <close@plt+0xf48>
   11dec:	ldr	r4, [pc, #168]	; 11e9c <close@plt+0xfd8>
   11df0:	ldrb	r3, [r4, #4]
   11df4:	cmp	r3, #0
   11df8:	beq	11e28 <close@plt+0xf64>
   11dfc:	bl	10df8 <__errno_location@plt>
   11e00:	ldr	r3, [r0]
   11e04:	cmp	r3, #32
   11e08:	bne	11e28 <close@plt+0xf64>
   11e0c:	ldr	r3, [pc, #140]	; 11ea0 <close@plt+0xfdc>
   11e10:	ldr	r0, [r3]
   11e14:	bl	14fc8 <close@plt+0x4104>
   11e18:	cmp	r0, #0
   11e1c:	bne	11e70 <close@plt+0xfac>
   11e20:	add	sp, sp, #8
   11e24:	pop	{r4, r5, r6, pc}
   11e28:	mov	r2, #5
   11e2c:	ldr	r1, [pc, #112]	; 11ea4 <close@plt+0xfe0>
   11e30:	mov	r0, #0
   11e34:	bl	10d14 <dcgettext@plt>
   11e38:	ldr	r4, [r4]
   11e3c:	cmp	r4, #0
   11e40:	mov	r5, r0
   11e44:	beq	11e7c <close@plt+0xfb8>
   11e48:	bl	10df8 <__errno_location@plt>
   11e4c:	ldr	r6, [r0]
   11e50:	mov	r0, r4
   11e54:	bl	1408c <close@plt+0x31c8>
   11e58:	mov	r1, r6
   11e5c:	str	r5, [sp]
   11e60:	ldr	r2, [pc, #64]	; 11ea8 <close@plt+0xfe4>
   11e64:	mov	r3, r0
   11e68:	mov	r0, #0
   11e6c:	bl	10d80 <error@plt>
   11e70:	ldr	r3, [pc, #52]	; 11eac <close@plt+0xfe8>
   11e74:	ldr	r0, [r3]
   11e78:	bl	10ccc <_exit@plt>
   11e7c:	bl	10df8 <__errno_location@plt>
   11e80:	mov	r3, r5
   11e84:	ldr	r2, [pc, #36]	; 11eb0 <close@plt+0xfec>
   11e88:	ldr	r1, [r0]
   11e8c:	mov	r0, r4
   11e90:	bl	10d80 <error@plt>
   11e94:	b	11e70 <close@plt+0xfac>
   11e98:	andeq	r7, r2, r4, asr r1
   11e9c:	andeq	r7, r2, r8, ror r1
   11ea0:	andeq	r7, r2, r8, asr #2
   11ea4:	muleq	r1, r0, r3
   11ea8:	muleq	r1, ip, r3
   11eac:	strdeq	r7, [r2], -r0
   11eb0:	andeq	r6, r1, r0, lsr #7
   11eb4:	push	{r4, r5}
   11eb8:	pop	{r4, r5}
   11ebc:	b	10ca8 <posix_fadvise64@plt>
   11ec0:	cmp	r0, #0
   11ec4:	bxeq	lr
   11ec8:	push	{r4, lr}
   11ecc:	sub	sp, sp, #16
   11ed0:	mov	r4, r1
   11ed4:	bl	10e28 <fileno@plt>
   11ed8:	mov	r2, #0
   11edc:	mov	r3, #0
   11ee0:	str	r4, [sp, #8]
   11ee4:	strd	r2, [sp]
   11ee8:	bl	10ca8 <posix_fadvise64@plt>
   11eec:	add	sp, sp, #16
   11ef0:	pop	{r4, pc}
   11ef4:	push	{r4, r5, lr}
   11ef8:	sub	sp, sp, #12
   11efc:	mov	r4, r0
   11f00:	bl	10e28 <fileno@plt>
   11f04:	cmp	r0, #0
   11f08:	mov	r0, r4
   11f0c:	blt	11f88 <close@plt+0x10c4>
   11f10:	bl	10db0 <__freading@plt>
   11f14:	cmp	r0, #0
   11f18:	bne	11f54 <close@plt+0x1090>
   11f1c:	mov	r0, r4
   11f20:	bl	11f94 <close@plt+0x10d0>
   11f24:	cmp	r0, #0
   11f28:	beq	11f84 <close@plt+0x10c0>
   11f2c:	bl	10df8 <__errno_location@plt>
   11f30:	mov	r5, r0
   11f34:	mov	r0, r4
   11f38:	ldr	r4, [r5]
   11f3c:	bl	10e40 <fclose@plt>
   11f40:	cmp	r4, #0
   11f44:	mvnne	r0, #0
   11f48:	strne	r4, [r5]
   11f4c:	add	sp, sp, #12
   11f50:	pop	{r4, r5, pc}
   11f54:	mov	r0, r4
   11f58:	bl	10e28 <fileno@plt>
   11f5c:	mov	r3, #1
   11f60:	str	r3, [sp]
   11f64:	mov	r2, #0
   11f68:	mov	r3, #0
   11f6c:	bl	10d50 <lseek64@plt>
   11f70:	mvn	r3, #0
   11f74:	mvn	r2, #0
   11f78:	cmp	r1, r3
   11f7c:	cmpeq	r0, r2
   11f80:	bne	11f1c <close@plt+0x1058>
   11f84:	mov	r0, r4
   11f88:	add	sp, sp, #12
   11f8c:	pop	{r4, r5, lr}
   11f90:	b	10e40 <fclose@plt>
   11f94:	push	{r4, lr}
   11f98:	subs	r4, r0, #0
   11f9c:	sub	sp, sp, #8
   11fa0:	beq	11fbc <close@plt+0x10f8>
   11fa4:	bl	10db0 <__freading@plt>
   11fa8:	cmp	r0, #0
   11fac:	beq	11fbc <close@plt+0x10f8>
   11fb0:	ldr	r3, [r4]
   11fb4:	tst	r3, #256	; 0x100
   11fb8:	bne	11fcc <close@plt+0x1108>
   11fbc:	mov	r0, r4
   11fc0:	add	sp, sp, #8
   11fc4:	pop	{r4, lr}
   11fc8:	b	10cb4 <fflush@plt>
   11fcc:	mov	r3, #1
   11fd0:	str	r3, [sp]
   11fd4:	mov	r2, #0
   11fd8:	mov	r3, #0
   11fdc:	mov	r0, r4
   11fe0:	bl	1208c <close@plt+0x11c8>
   11fe4:	mov	r0, r4
   11fe8:	add	sp, sp, #8
   11fec:	pop	{r4, lr}
   11ff0:	b	10cb4 <fflush@plt>
   11ff4:	push	{r4, r5, r6, lr}
   11ff8:	mov	r5, r1
   11ffc:	bl	10e94 <fopen64@plt>
   12000:	subs	r4, r0, #0
   12004:	beq	12014 <close@plt+0x1150>
   12008:	bl	10e28 <fileno@plt>
   1200c:	cmp	r0, #2
   12010:	bls	1201c <close@plt+0x1158>
   12014:	mov	r0, r4
   12018:	pop	{r4, r5, r6, pc}
   1201c:	bl	142d4 <close@plt+0x3410>
   12020:	subs	r6, r0, #0
   12024:	blt	1206c <close@plt+0x11a8>
   12028:	mov	r0, r4
   1202c:	bl	11ef4 <close@plt+0x1030>
   12030:	cmp	r0, #0
   12034:	bne	1204c <close@plt+0x1188>
   12038:	mov	r1, r5
   1203c:	mov	r0, r6
   12040:	bl	10c6c <fdopen@plt>
   12044:	subs	r4, r0, #0
   12048:	bne	12014 <close@plt+0x1150>
   1204c:	bl	10df8 <__errno_location@plt>
   12050:	mov	r4, #0
   12054:	mov	r5, r0
   12058:	mov	r0, r6
   1205c:	ldr	r6, [r5]
   12060:	bl	10ec4 <close@plt>
   12064:	str	r6, [r5]
   12068:	b	12014 <close@plt+0x1150>
   1206c:	bl	10df8 <__errno_location@plt>
   12070:	mov	r5, r0
   12074:	mov	r0, r4
   12078:	ldr	r6, [r5]
   1207c:	mov	r4, #0
   12080:	bl	11ef4 <close@plt+0x1030>
   12084:	str	r6, [r5]
   12088:	b	12014 <close@plt+0x1150>
   1208c:	push	{r4, r5, r6, r7, r8, lr}
   12090:	sub	sp, sp, #8
   12094:	ldmib	r0, {ip, lr}
   12098:	mov	r4, r0
   1209c:	ldr	r5, [sp, #32]
   120a0:	cmp	lr, ip
   120a4:	beq	120bc <close@plt+0x11f8>
   120a8:	str	r5, [sp, #32]
   120ac:	mov	r0, r4
   120b0:	add	sp, sp, #8
   120b4:	pop	{r4, r5, r6, r7, r8, lr}
   120b8:	b	10e4c <fseeko64@plt>
   120bc:	ldr	lr, [r0, #20]
   120c0:	ldr	ip, [r0, #16]
   120c4:	cmp	lr, ip
   120c8:	bne	120a8 <close@plt+0x11e4>
   120cc:	ldr	r8, [r0, #36]	; 0x24
   120d0:	cmp	r8, #0
   120d4:	bne	120a8 <close@plt+0x11e4>
   120d8:	mov	r6, r2
   120dc:	mov	r7, r3
   120e0:	bl	10e28 <fileno@plt>
   120e4:	mov	r2, r6
   120e8:	mov	r3, r7
   120ec:	str	r5, [sp]
   120f0:	bl	10d50 <lseek64@plt>
   120f4:	mvn	r3, #0
   120f8:	mvn	r2, #0
   120fc:	cmp	r1, r3
   12100:	cmpeq	r0, r2
   12104:	beq	12124 <close@plt+0x1260>
   12108:	ldr	r3, [r4]
   1210c:	strd	r0, [r4, #80]	; 0x50
   12110:	mov	r0, r8
   12114:	bic	r3, r3, #16
   12118:	str	r3, [r4]
   1211c:	add	sp, sp, #8
   12120:	pop	{r4, r5, r6, r7, r8, pc}
   12124:	mvn	r0, #0
   12128:	b	1211c <close@plt+0x1258>
   1212c:	push	{lr}		; (str lr, [sp, #-4]!)
   12130:	sub	sp, sp, #268	; 0x10c
   12134:	add	r1, sp, #4
   12138:	ldr	r2, [pc, #60]	; 1217c <close@plt+0x12b8>
   1213c:	bl	1423c <close@plt+0x3378>
   12140:	cmp	r0, #0
   12144:	movne	r0, #0
   12148:	bne	12174 <close@plt+0x12b0>
   1214c:	ldr	r1, [pc, #44]	; 12180 <close@plt+0x12bc>
   12150:	add	r0, sp, #4
   12154:	bl	10c9c <strcmp@plt>
   12158:	cmp	r0, #0
   1215c:	beq	12174 <close@plt+0x12b0>
   12160:	add	r0, sp, #4
   12164:	ldr	r1, [pc, #24]	; 12184 <close@plt+0x12c0>
   12168:	bl	10c9c <strcmp@plt>
   1216c:	adds	r0, r0, #0
   12170:	movne	r0, #1
   12174:	add	sp, sp, #268	; 0x10c
   12178:	pop	{pc}		; (ldr pc, [sp], #4)
   1217c:	andeq	r0, r0, r1, lsl #2
   12180:	andeq	r6, r1, r4, lsr #7
   12184:	andeq	r6, r1, r8, lsr #7
   12188:	push	{r4, r5, r6, r8, r9, lr}
   1218c:	mov	r4, r0
   12190:	mov	r5, r1
   12194:	add	r6, r2, #20
   12198:	mov	r8, #10
   1219c:	mov	r9, #0
   121a0:	mov	r3, #0
   121a4:	strb	r3, [r2, #20]
   121a8:	mov	r0, r4
   121ac:	mov	r1, r5
   121b0:	mov	r2, r8
   121b4:	mov	r3, r9
   121b8:	bl	158f8 <close@plt+0x4a34>
   121bc:	mov	r0, r4
   121c0:	mov	r1, r5
   121c4:	mov	r3, r9
   121c8:	add	r2, r2, #48	; 0x30
   121cc:	strb	r2, [r6, #-1]!
   121d0:	mov	r2, r8
   121d4:	bl	158f8 <close@plt+0x4a34>
   121d8:	mov	r4, r0
   121dc:	mov	r5, r1
   121e0:	orrs	r3, r4, r5
   121e4:	bne	121a8 <close@plt+0x12e4>
   121e8:	mov	r0, r6
   121ec:	pop	{r4, r5, r6, r8, r9, pc}
   121f0:	mov	r3, #0
   121f4:	str	r3, [r0]
   121f8:	str	r3, [r0, #4]
   121fc:	str	r3, [r0, #8]
   12200:	bx	lr
   12204:	ldr	ip, [r1]
   12208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1220c:	tst	ip, #16
   12210:	ldr	fp, [r0, #8]
   12214:	ldr	r3, [r0]
   12218:	sub	sp, sp, #12
   1221c:	add	r8, fp, r3
   12220:	bne	12304 <close@plt+0x1440>
   12224:	mov	r6, r2
   12228:	mov	r7, r0
   1222c:	mov	r5, r1
   12230:	mov	r4, fp
   12234:	mov	r9, #1
   12238:	b	12260 <close@plt+0x139c>
   1223c:	add	r1, r3, #1
   12240:	str	r1, [r5, #4]
   12244:	ldrb	sl, [r3]
   12248:	cmp	r4, r8
   1224c:	beq	122b0 <close@plt+0x13ec>
   12250:	cmp	sl, r6
   12254:	strb	sl, [r4]
   12258:	add	r4, r4, #1
   1225c:	beq	122f0 <close@plt+0x142c>
   12260:	ldr	r3, [r5, #4]
   12264:	ldr	r1, [r5, #8]
   12268:	cmp	r3, r1
   1226c:	bcc	1223c <close@plt+0x1378>
   12270:	mov	r0, r5
   12274:	bl	10e64 <__uflow@plt>
   12278:	cmn	r0, #1
   1227c:	mov	sl, r0
   12280:	bne	12248 <close@plt+0x1384>
   12284:	cmp	fp, r4
   12288:	beq	12304 <close@plt+0x1440>
   1228c:	ldr	r3, [r5]
   12290:	tst	r3, #32
   12294:	bne	12304 <close@plt+0x1440>
   12298:	ldrb	r3, [r4, #-1]
   1229c:	cmp	r3, r6
   122a0:	beq	122f0 <close@plt+0x142c>
   122a4:	cmp	r4, r8
   122a8:	mov	sl, r6
   122ac:	bne	12250 <close@plt+0x138c>
   122b0:	str	r9, [sp]
   122b4:	mov	r0, fp
   122b8:	mov	r2, #1
   122bc:	mvn	r3, #0
   122c0:	mov	r1, r7
   122c4:	ldr	r4, [r7]
   122c8:	bl	1498c <close@plt+0x3ac8>
   122cc:	ldr	r2, [r7]
   122d0:	cmp	sl, r6
   122d4:	add	r4, r0, r4
   122d8:	str	r0, [r7, #8]
   122dc:	mov	fp, r0
   122e0:	strb	sl, [r4]
   122e4:	add	r8, r0, r2
   122e8:	add	r4, r4, #1
   122ec:	bne	12260 <close@plt+0x139c>
   122f0:	sub	r4, r4, fp
   122f4:	mov	r0, r7
   122f8:	str	r4, [r7, #4]
   122fc:	add	sp, sp, #12
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12304:	mov	r0, #0
   12308:	add	sp, sp, #12
   1230c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12310:	mov	r2, #10
   12314:	b	12204 <close@plt+0x1340>
   12318:	ldr	r0, [r0, #8]
   1231c:	b	15218 <close@plt+0x4354>
   12320:	cmp	r1, r3
   12324:	push	{r4, r5, r6, lr}
   12328:	mov	r5, r1
   1232c:	mov	r1, r2
   12330:	movcc	r2, r5
   12334:	movcs	r2, r3
   12338:	mov	r4, r3
   1233c:	bl	10cfc <memcmp@plt>
   12340:	cmp	r0, #0
   12344:	popne	{r4, r5, r6, pc}
   12348:	cmp	r5, r4
   1234c:	movcs	r0, #0
   12350:	movcc	r0, #1
   12354:	cmp	r5, r4
   12358:	rsbls	r0, r0, #0
   1235c:	rsbhi	r0, r0, #1
   12360:	pop	{r4, r5, r6, pc}
   12364:	push	{r4, r5, r6, lr}
   12368:	subs	r4, r0, #0
   1236c:	beq	123e0 <close@plt+0x151c>
   12370:	mov	r1, #47	; 0x2f
   12374:	bl	10e7c <strrchr@plt>
   12378:	subs	r5, r0, #0
   1237c:	beq	123cc <close@plt+0x1508>
   12380:	add	r6, r5, #1
   12384:	sub	r3, r6, r4
   12388:	cmp	r3, #6
   1238c:	ble	123cc <close@plt+0x1508>
   12390:	mov	r2, #7
   12394:	ldr	r1, [pc, #96]	; 123fc <close@plt+0x1538>
   12398:	sub	r0, r5, #6
   1239c:	bl	10eac <strncmp@plt>
   123a0:	cmp	r0, #0
   123a4:	bne	123cc <close@plt+0x1508>
   123a8:	mov	r2, #3
   123ac:	ldr	r1, [pc, #76]	; 12400 <close@plt+0x153c>
   123b0:	mov	r0, r6
   123b4:	bl	10eac <strncmp@plt>
   123b8:	cmp	r0, #0
   123bc:	movne	r4, r6
   123c0:	ldreq	r3, [pc, #60]	; 12404 <close@plt+0x1540>
   123c4:	addeq	r4, r5, #4
   123c8:	streq	r4, [r3]
   123cc:	ldr	r2, [pc, #52]	; 12408 <close@plt+0x1544>
   123d0:	ldr	r3, [pc, #52]	; 1240c <close@plt+0x1548>
   123d4:	str	r4, [r2]
   123d8:	str	r4, [r3]
   123dc:	pop	{r4, r5, r6, pc}
   123e0:	ldr	r3, [pc, #40]	; 12410 <close@plt+0x154c>
   123e4:	mov	r2, #55	; 0x37
   123e8:	mov	r1, #1
   123ec:	ldr	r3, [r3]
   123f0:	ldr	r0, [pc, #28]	; 12414 <close@plt+0x1550>
   123f4:	bl	10d44 <fwrite@plt>
   123f8:	bl	10eb8 <abort@plt>
   123fc:	andeq	r6, r1, r8, ror #7
   12400:	strdeq	r6, [r1], -r0
   12404:	andeq	r7, r2, r8, lsr r1
   12408:	andeq	r7, r2, r0, lsl #3
   1240c:	andeq	r7, r2, ip, lsr r1
   12410:	andeq	r7, r2, r8, asr #2
   12414:			; <UNDEFINED> instruction: 0x000163b0
   12418:	push	{r4, r5, r6, lr}
   1241c:	mov	r2, #48	; 0x30
   12420:	mov	r4, r1
   12424:	mov	r1, #0
   12428:	mov	r5, r0
   1242c:	bl	10e10 <memset@plt>
   12430:	cmp	r4, #10
   12434:	beq	12444 <close@plt+0x1580>
   12438:	str	r4, [r5]
   1243c:	mov	r0, r5
   12440:	pop	{r4, r5, r6, pc}
   12444:	bl	10eb8 <abort@plt>
   12448:	push	{r4, r5, r6, lr}
   1244c:	mov	r4, r0
   12450:	mov	r5, r1
   12454:	bl	15270 <close@plt+0x43ac>
   12458:	ldrb	r3, [r0]
   1245c:	bic	r3, r3, #32
   12460:	cmp	r3, #85	; 0x55
   12464:	bne	124c4 <close@plt+0x1600>
   12468:	ldrb	r3, [r0, #1]
   1246c:	bic	r3, r3, #32
   12470:	cmp	r3, #84	; 0x54
   12474:	bne	12500 <close@plt+0x163c>
   12478:	ldrb	r3, [r0, #2]
   1247c:	bic	r3, r3, #32
   12480:	cmp	r3, #70	; 0x46
   12484:	bne	12500 <close@plt+0x163c>
   12488:	ldrb	r3, [r0, #3]
   1248c:	cmp	r3, #45	; 0x2d
   12490:	bne	12500 <close@plt+0x163c>
   12494:	ldrb	r3, [r0, #4]
   12498:	cmp	r3, #56	; 0x38
   1249c:	bne	12500 <close@plt+0x163c>
   124a0:	ldrb	r3, [r0, #5]
   124a4:	cmp	r3, #0
   124a8:	bne	12500 <close@plt+0x163c>
   124ac:	ldrb	r2, [r4]
   124b0:	ldr	r3, [pc, #152]	; 12550 <close@plt+0x168c>
   124b4:	ldr	r0, [pc, #152]	; 12554 <close@plt+0x1690>
   124b8:	cmp	r2, #96	; 0x60
   124bc:	movne	r0, r3
   124c0:	pop	{r4, r5, r6, pc}
   124c4:	cmp	r3, #71	; 0x47
   124c8:	bne	12500 <close@plt+0x163c>
   124cc:	ldrb	r3, [r0, #1]
   124d0:	bic	r3, r3, #32
   124d4:	cmp	r3, #66	; 0x42
   124d8:	bne	12500 <close@plt+0x163c>
   124dc:	ldrb	r3, [r0, #2]
   124e0:	cmp	r3, #49	; 0x31
   124e4:	bne	12500 <close@plt+0x163c>
   124e8:	ldrb	r3, [r0, #3]
   124ec:	cmp	r3, #56	; 0x38
   124f0:	bne	12500 <close@plt+0x163c>
   124f4:	ldrb	r3, [r0, #4]
   124f8:	cmp	r3, #48	; 0x30
   124fc:	beq	12514 <close@plt+0x1650>
   12500:	ldr	r3, [pc, #80]	; 12558 <close@plt+0x1694>
   12504:	cmp	r5, #9
   12508:	ldr	r0, [pc, #76]	; 1255c <close@plt+0x1698>
   1250c:	movne	r0, r3
   12510:	pop	{r4, r5, r6, pc}
   12514:	ldrb	r3, [r0, #5]
   12518:	cmp	r3, #51	; 0x33
   1251c:	bne	12500 <close@plt+0x163c>
   12520:	ldrb	r3, [r0, #6]
   12524:	cmp	r3, #48	; 0x30
   12528:	bne	12500 <close@plt+0x163c>
   1252c:	ldrb	r3, [r0, #7]
   12530:	cmp	r3, #0
   12534:	bne	12500 <close@plt+0x163c>
   12538:	ldrb	r2, [r4]
   1253c:	ldr	r3, [pc, #28]	; 12560 <close@plt+0x169c>
   12540:	ldr	r0, [pc, #28]	; 12564 <close@plt+0x16a0>
   12544:	cmp	r2, #96	; 0x60
   12548:	movne	r0, r3
   1254c:	pop	{r4, r5, r6, pc}
   12550:	andeq	r6, r1, ip, asr #8
   12554:	andeq	r6, r1, r8, asr #8
   12558:	andeq	r6, r1, ip, asr r4
   1255c:	andeq	r6, r1, r8, asr r4
   12560:	andeq	r6, r1, r4, asr r4
   12564:	andeq	r6, r1, r0, asr r4
   12568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1256c:	sub	sp, sp, #116	; 0x74
   12570:	mov	sl, r0
   12574:	str	r3, [sp, #24]
   12578:	mov	r3, #1
   1257c:	mov	r8, r1
   12580:	str	r2, [sp, #56]	; 0x38
   12584:	str	r3, [sp, #36]	; 0x24
   12588:	bl	10d5c <__ctype_get_mb_cur_max@plt>
   1258c:	ldr	r3, [sp, #156]	; 0x9c
   12590:	mov	fp, r8
   12594:	mov	r2, #0
   12598:	lsr	r3, r3, #1
   1259c:	and	r3, r3, #1
   125a0:	str	r2, [sp, #68]	; 0x44
   125a4:	str	r3, [sp, #28]
   125a8:	str	r2, [sp, #40]	; 0x28
   125ac:	str	r2, [sp, #44]	; 0x2c
   125b0:	str	r2, [sp, #52]	; 0x34
   125b4:	str	r2, [sp, #64]	; 0x40
   125b8:	str	r2, [sp, #72]	; 0x48
   125bc:	str	sl, [sp, #32]
   125c0:	str	r0, [sp, #76]	; 0x4c
   125c4:	ldr	r3, [sp, #152]	; 0x98
   125c8:	cmp	r3, #10
   125cc:	ldrls	pc, [pc, r3, lsl #2]
   125d0:	b	13790 <close@plt+0x28cc>
   125d4:	andeq	r2, r1, r0, lsl #12
   125d8:	andeq	r2, r1, r8, ror #17
   125dc:	andeq	r2, r1, ip, lsl #18
   125e0:	andeq	r2, r1, r0, lsr r9
   125e4:	andeq	r2, r1, ip, asr sl
   125e8:	andeq	r2, r1, r0, lsr sl
   125ec:	andeq	r2, r1, r8, lsl #20
   125f0:	andeq	r2, r1, r4, asr #18
   125f4:	andeq	r2, r1, ip, asr r9
   125f8:	andeq	r2, r1, ip, asr r9
   125fc:	andeq	r2, r1, ip, asr r9
   12600:	mov	r3, #0
   12604:	mov	r7, r3
   12608:	str	r3, [sp, #28]
   1260c:	ldr	r3, [sp, #44]	; 0x2c
   12610:	mov	sl, #0
   12614:	eor	r3, r3, #1
   12618:	str	r3, [sp, #60]	; 0x3c
   1261c:	ldr	r3, [sp, #24]
   12620:	cmn	r3, #1
   12624:	beq	12b88 <close@plt+0x1cc4>
   12628:	ldr	r3, [sp, #24]
   1262c:	subs	r5, r3, sl
   12630:	movne	r5, #1
   12634:	cmp	r5, #0
   12638:	beq	12ba0 <close@plt+0x1cdc>
   1263c:	ldr	r3, [sp, #152]	; 0x98
   12640:	ldr	r8, [sp, #44]	; 0x2c
   12644:	cmp	r3, #2
   12648:	moveq	r8, #0
   1264c:	andne	r8, r8, #1
   12650:	ldr	r3, [sp, #52]	; 0x34
   12654:	adds	r9, r3, #0
   12658:	movne	r9, #1
   1265c:	ands	r6, r9, r8
   12660:	beq	13008 <close@plt+0x2144>
   12664:	ldr	r2, [sp, #52]	; 0x34
   12668:	ldr	r1, [sp, #24]
   1266c:	cmp	r2, #1
   12670:	mov	r3, r2
   12674:	movls	r3, #0
   12678:	movhi	r3, #1
   1267c:	cmn	r1, #1
   12680:	movne	r3, #0
   12684:	cmp	r3, #0
   12688:	add	r4, sl, r2
   1268c:	beq	1269c <close@plt+0x17d8>
   12690:	ldr	r0, [sp, #56]	; 0x38
   12694:	bl	10dec <strlen@plt>
   12698:	str	r0, [sp, #24]
   1269c:	ldr	r3, [sp, #24]
   126a0:	cmp	r3, r4
   126a4:	ldr	r3, [sp, #56]	; 0x38
   126a8:	add	r3, r3, sl
   126ac:	str	r3, [sp, #48]	; 0x30
   126b0:	bcc	13014 <close@plt+0x2150>
   126b4:	mov	r0, r3
   126b8:	ldr	r2, [sp, #52]	; 0x34
   126bc:	ldr	r1, [sp, #64]	; 0x40
   126c0:	bl	10cfc <memcmp@plt>
   126c4:	cmp	r0, #0
   126c8:	bne	13014 <close@plt+0x2150>
   126cc:	ldr	r3, [sp, #28]
   126d0:	cmp	r3, #0
   126d4:	bne	13890 <close@plt+0x29cc>
   126d8:	ldr	r3, [sp, #48]	; 0x30
   126dc:	ldrb	r4, [r3]
   126e0:	cmp	r4, #126	; 0x7e
   126e4:	ldrls	pc, [pc, r4, lsl #2]
   126e8:	b	12fa8 <close@plt+0x20e4>
   126ec:	andeq	r2, r1, ip, asr #27
   126f0:	andeq	r2, r1, r8, lsr #31
   126f4:	andeq	r2, r1, r8, lsr #31
   126f8:	andeq	r2, r1, r8, lsr #31
   126fc:	andeq	r2, r1, r8, lsr #31
   12700:	andeq	r2, r1, r8, lsr #31
   12704:	andeq	r2, r1, r8, lsr #31
   12708:			; <UNDEFINED> instruction: 0x00012db0
   1270c:	muleq	r1, r4, sp
   12710:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12714:	strdeq	r2, [r1], -r4
   12718:	ldrdeq	r2, [r1], -r8
   1271c:	andeq	r2, r1, ip, ror #30
   12720:	andeq	r2, r1, r8, asr #30
   12724:	andeq	r2, r1, r8, lsr #31
   12728:	andeq	r2, r1, r8, lsr #31
   1272c:	andeq	r2, r1, r8, lsr #31
   12730:	andeq	r2, r1, r8, lsr #31
   12734:	andeq	r2, r1, r8, lsr #31
   12738:	andeq	r2, r1, r8, lsr #31
   1273c:	andeq	r2, r1, r8, lsr #31
   12740:	andeq	r2, r1, r8, lsr #31
   12744:	andeq	r2, r1, r8, lsr #31
   12748:	andeq	r2, r1, r8, lsr #31
   1274c:	andeq	r2, r1, r8, lsr #31
   12750:	andeq	r2, r1, r8, lsr #31
   12754:	andeq	r2, r1, r8, lsr #31
   12758:	andeq	r2, r1, r8, lsr #31
   1275c:	andeq	r2, r1, r8, lsr #31
   12760:	andeq	r2, r1, r8, lsr #31
   12764:	andeq	r2, r1, r8, lsr #31
   12768:	andeq	r2, r1, r8, lsr #31
   1276c:	andeq	r2, r1, r8, lsl #31
   12770:			; <UNDEFINED> instruction: 0x00012ebc
   12774:			; <UNDEFINED> instruction: 0x00012ebc
   12778:	andeq	r2, r1, ip, asr #21
   1277c:			; <UNDEFINED> instruction: 0x00012ebc
   12780:	andeq	r2, r1, r4, asr pc
   12784:			; <UNDEFINED> instruction: 0x00012ebc
   12788:	andeq	r2, r1, r8, lsr #30
   1278c:			; <UNDEFINED> instruction: 0x00012ebc
   12790:			; <UNDEFINED> instruction: 0x00012ebc
   12794:			; <UNDEFINED> instruction: 0x00012ebc
   12798:	andeq	r2, r1, r4, asr pc
   1279c:	andeq	r2, r1, r4, asr pc
   127a0:	andeq	r2, r1, r4, asr pc
   127a4:	andeq	r2, r1, r4, asr pc
   127a8:	andeq	r2, r1, r4, asr pc
   127ac:	andeq	r2, r1, r4, asr pc
   127b0:	andeq	r2, r1, r4, asr pc
   127b4:	andeq	r2, r1, r4, asr pc
   127b8:	andeq	r2, r1, r4, asr pc
   127bc:	andeq	r2, r1, r4, asr pc
   127c0:	andeq	r2, r1, r4, asr pc
   127c4:	andeq	r2, r1, r4, asr pc
   127c8:	andeq	r2, r1, r4, asr pc
   127cc:	andeq	r2, r1, r4, asr pc
   127d0:	andeq	r2, r1, r4, asr pc
   127d4:	andeq	r2, r1, r4, asr pc
   127d8:			; <UNDEFINED> instruction: 0x00012ebc
   127dc:			; <UNDEFINED> instruction: 0x00012ebc
   127e0:			; <UNDEFINED> instruction: 0x00012ebc
   127e4:			; <UNDEFINED> instruction: 0x00012ebc
   127e8:	strdeq	r2, [r1], -r8
   127ec:	andeq	r2, r1, r8, lsr #31
   127f0:	andeq	r2, r1, r4, asr pc
   127f4:	andeq	r2, r1, r4, asr pc
   127f8:	andeq	r2, r1, r4, asr pc
   127fc:	andeq	r2, r1, r4, asr pc
   12800:	andeq	r2, r1, r4, asr pc
   12804:	andeq	r2, r1, r4, asr pc
   12808:	andeq	r2, r1, r4, asr pc
   1280c:	andeq	r2, r1, r4, asr pc
   12810:	andeq	r2, r1, r4, asr pc
   12814:	andeq	r2, r1, r4, asr pc
   12818:	andeq	r2, r1, r4, asr pc
   1281c:	andeq	r2, r1, r4, asr pc
   12820:	andeq	r2, r1, r4, asr pc
   12824:	andeq	r2, r1, r4, asr pc
   12828:	andeq	r2, r1, r4, asr pc
   1282c:	andeq	r2, r1, r4, asr pc
   12830:	andeq	r2, r1, r4, asr pc
   12834:	andeq	r2, r1, r4, asr pc
   12838:	andeq	r2, r1, r4, asr pc
   1283c:	andeq	r2, r1, r4, asr pc
   12840:	andeq	r2, r1, r4, asr pc
   12844:	andeq	r2, r1, r4, asr pc
   12848:	andeq	r2, r1, r4, asr pc
   1284c:	andeq	r2, r1, r4, asr pc
   12850:	andeq	r2, r1, r4, asr pc
   12854:	andeq	r2, r1, r4, asr pc
   12858:			; <UNDEFINED> instruction: 0x00012ebc
   1285c:	andeq	r2, r1, r8, lsl ip
   12860:	andeq	r2, r1, r4, asr pc
   12864:			; <UNDEFINED> instruction: 0x00012ebc
   12868:	andeq	r2, r1, r4, asr pc
   1286c:			; <UNDEFINED> instruction: 0x00012ebc
   12870:	andeq	r2, r1, r4, asr pc
   12874:	andeq	r2, r1, r4, asr pc
   12878:	andeq	r2, r1, r4, asr pc
   1287c:	andeq	r2, r1, r4, asr pc
   12880:	andeq	r2, r1, r4, asr pc
   12884:	andeq	r2, r1, r4, asr pc
   12888:	andeq	r2, r1, r4, asr pc
   1288c:	andeq	r2, r1, r4, asr pc
   12890:	andeq	r2, r1, r4, asr pc
   12894:	andeq	r2, r1, r4, asr pc
   12898:	andeq	r2, r1, r4, asr pc
   1289c:	andeq	r2, r1, r4, asr pc
   128a0:	andeq	r2, r1, r4, asr pc
   128a4:	andeq	r2, r1, r4, asr pc
   128a8:	andeq	r2, r1, r4, asr pc
   128ac:	andeq	r2, r1, r4, asr pc
   128b0:	andeq	r2, r1, r4, asr pc
   128b4:	andeq	r2, r1, r4, asr pc
   128b8:	andeq	r2, r1, r4, asr pc
   128bc:	andeq	r2, r1, r4, asr pc
   128c0:	andeq	r2, r1, r4, asr pc
   128c4:	andeq	r2, r1, r4, asr pc
   128c8:	andeq	r2, r1, r4, asr pc
   128cc:	andeq	r2, r1, r4, asr pc
   128d0:	andeq	r2, r1, r4, asr pc
   128d4:	andeq	r2, r1, r4, asr pc
   128d8:	andeq	r2, r1, ip, lsr #21
   128dc:			; <UNDEFINED> instruction: 0x00012ebc
   128e0:	andeq	r2, r1, ip, lsr #21
   128e4:	andeq	r2, r1, ip, asr #21
   128e8:	mov	r3, #1
   128ec:	str	r3, [sp, #28]
   128f0:	str	r3, [sp, #52]	; 0x34
   128f4:	ldr	r3, [pc, #4000]	; 1389c <close@plt+0x29d8>
   128f8:	mov	r7, #0
   128fc:	str	r3, [sp, #64]	; 0x40
   12900:	mov	r3, #2
   12904:	str	r3, [sp, #152]	; 0x98
   12908:	b	1260c <close@plt+0x1748>
   1290c:	ldr	r3, [sp, #28]
   12910:	cmp	r3, #0
   12914:	beq	12a70 <close@plt+0x1bac>
   12918:	mov	r3, #1
   1291c:	str	r3, [sp, #52]	; 0x34
   12920:	ldr	r3, [pc, #3956]	; 1389c <close@plt+0x29d8>
   12924:	mov	r7, #0
   12928:	str	r3, [sp, #64]	; 0x40
   1292c:	b	1260c <close@plt+0x1748>
   12930:	mov	r3, #1
   12934:	str	r3, [sp, #44]	; 0x2c
   12938:	str	r3, [sp, #52]	; 0x34
   1293c:	str	r3, [sp, #28]
   12940:	b	128f4 <close@plt+0x1a30>
   12944:	mov	r3, #0
   12948:	str	r3, [sp, #28]
   1294c:	mov	r3, #1
   12950:	str	r3, [sp, #44]	; 0x2c
   12954:	mov	r7, #0
   12958:	b	1260c <close@plt+0x1748>
   1295c:	ldr	r3, [sp, #152]	; 0x98
   12960:	cmp	r3, #10
   12964:	beq	129a8 <close@plt+0x1ae4>
   12968:	mov	r2, #5
   1296c:	ldr	r1, [pc, #3884]	; 138a0 <close@plt+0x29dc>
   12970:	mov	r0, #0
   12974:	bl	10d14 <dcgettext@plt>
   12978:	ldr	r2, [pc, #3872]	; 138a0 <close@plt+0x29dc>
   1297c:	cmp	r0, r2
   12980:	str	r0, [sp, #164]	; 0xa4
   12984:	beq	1398c <close@plt+0x2ac8>
   12988:	mov	r2, #5
   1298c:	ldr	r1, [pc, #3848]	; 1389c <close@plt+0x29d8>
   12990:	mov	r0, #0
   12994:	bl	10d14 <dcgettext@plt>
   12998:	ldr	r2, [pc, #3836]	; 1389c <close@plt+0x29d8>
   1299c:	cmp	r0, r2
   129a0:	str	r0, [sp, #168]	; 0xa8
   129a4:	beq	1397c <close@plt+0x2ab8>
   129a8:	ldr	r7, [sp, #28]
   129ac:	cmp	r7, #0
   129b0:	movne	r7, #0
   129b4:	bne	129e8 <close@plt+0x1b24>
   129b8:	ldr	r3, [sp, #164]	; 0xa4
   129bc:	ldrb	r3, [r3]
   129c0:	cmp	r3, #0
   129c4:	beq	1399c <close@plt+0x2ad8>
   129c8:	ldr	r2, [sp, #164]	; 0xa4
   129cc:	ldr	r1, [sp, #32]
   129d0:	cmp	fp, r7
   129d4:	strbhi	r3, [r1, r7]
   129d8:	ldrb	r3, [r2, #1]!
   129dc:	add	r7, r7, #1
   129e0:	cmp	r3, #0
   129e4:	bne	129d0 <close@plt+0x1b0c>
   129e8:	ldr	r0, [sp, #168]	; 0xa8
   129ec:	bl	10dec <strlen@plt>
   129f0:	ldr	r3, [sp, #168]	; 0xa8
   129f4:	str	r3, [sp, #64]	; 0x40
   129f8:	mov	r3, #1
   129fc:	str	r3, [sp, #44]	; 0x2c
   12a00:	str	r0, [sp, #52]	; 0x34
   12a04:	b	1260c <close@plt+0x1748>
   12a08:	mov	r3, #1
   12a0c:	str	r3, [sp, #44]	; 0x2c
   12a10:	str	r3, [sp, #52]	; 0x34
   12a14:	str	r3, [sp, #28]
   12a18:	ldr	r3, [pc, #3716]	; 138a4 <close@plt+0x29e0>
   12a1c:	mov	r7, #0
   12a20:	str	r3, [sp, #64]	; 0x40
   12a24:	mov	r3, #5
   12a28:	str	r3, [sp, #152]	; 0x98
   12a2c:	b	1260c <close@plt+0x1748>
   12a30:	ldr	r3, [sp, #28]
   12a34:	cmp	r3, #0
   12a38:	beq	13738 <close@plt+0x2874>
   12a3c:	ldr	r3, [sp, #28]
   12a40:	mov	r7, #0
   12a44:	str	r3, [sp, #44]	; 0x2c
   12a48:	mov	r3, #1
   12a4c:	str	r3, [sp, #52]	; 0x34
   12a50:	ldr	r3, [pc, #3660]	; 138a4 <close@plt+0x29e0>
   12a54:	str	r3, [sp, #64]	; 0x40
   12a58:	b	1260c <close@plt+0x1748>
   12a5c:	ldr	r3, [sp, #28]
   12a60:	cmp	r3, #0
   12a64:	mov	r3, #1
   12a68:	streq	r3, [sp, #44]	; 0x2c
   12a6c:	bne	128f0 <close@plt+0x1a2c>
   12a70:	cmp	fp, #0
   12a74:	beq	13768 <close@plt+0x28a4>
   12a78:	ldr	r3, [sp, #32]
   12a7c:	mov	r2, #39	; 0x27
   12a80:	mov	r7, #1
   12a84:	strb	r2, [r3]
   12a88:	mov	r3, #0
   12a8c:	str	r3, [sp, #28]
   12a90:	mov	r3, #1
   12a94:	str	r3, [sp, #52]	; 0x34
   12a98:	ldr	r3, [pc, #3580]	; 1389c <close@plt+0x29d8>
   12a9c:	str	r3, [sp, #64]	; 0x40
   12aa0:	mov	r3, #2
   12aa4:	str	r3, [sp, #152]	; 0x98
   12aa8:	b	1260c <close@plt+0x1748>
   12aac:	ldr	r3, [sp, #24]
   12ab0:	cmn	r3, #1
   12ab4:	beq	136cc <close@plt+0x2808>
   12ab8:	ldr	r3, [sp, #24]
   12abc:	subs	r3, r3, #1
   12ac0:	movne	r3, #1
   12ac4:	cmp	r3, #0
   12ac8:	bne	12ad4 <close@plt+0x1c10>
   12acc:	cmp	sl, #0
   12ad0:	beq	12ec0 <close@plt+0x1ffc>
   12ad4:	ldr	r3, [sp, #152]	; 0x98
   12ad8:	mov	r5, #0
   12adc:	sub	r2, r3, #2
   12ae0:	mov	r8, r5
   12ae4:	clz	r2, r2
   12ae8:	lsr	r2, r2, #5
   12aec:	ldr	r3, [sp, #60]	; 0x3c
   12af0:	ldr	r1, [sp, #28]
   12af4:	orr	r3, r2, r3
   12af8:	eor	r3, r3, #1
   12afc:	orr	r3, r1, r3
   12b00:	tst	r3, #255	; 0xff
   12b04:	bne	13230 <close@plt+0x236c>
   12b08:	cmp	r6, #0
   12b0c:	bne	12c5c <close@plt+0x1d98>
   12b10:	ldr	r3, [sp, #40]	; 0x28
   12b14:	eor	r8, r8, #1
   12b18:	and	r8, r8, r3
   12b1c:	add	sl, sl, #1
   12b20:	uxtb	r6, r8
   12b24:	cmp	r6, #0
   12b28:	beq	12b5c <close@plt+0x1c98>
   12b2c:	cmp	fp, r7
   12b30:	movhi	r2, #39	; 0x27
   12b34:	ldrhi	r3, [sp, #32]
   12b38:	strbhi	r2, [r3, r7]
   12b3c:	add	r3, r7, #1
   12b40:	cmp	fp, r3
   12b44:	movhi	r1, #39	; 0x27
   12b48:	ldrhi	r2, [sp, #32]
   12b4c:	add	r7, r7, #2
   12b50:	strbhi	r1, [r2, r3]
   12b54:	mov	r3, #0
   12b58:	str	r3, [sp, #40]	; 0x28
   12b5c:	cmp	r7, fp
   12b60:	ldrcc	r3, [sp, #32]
   12b64:	strbcc	r4, [r3, r7]
   12b68:	ldr	r3, [sp, #36]	; 0x24
   12b6c:	cmp	r5, #0
   12b70:	moveq	r3, #0
   12b74:	str	r3, [sp, #36]	; 0x24
   12b78:	ldr	r3, [sp, #24]
   12b7c:	add	r7, r7, #1
   12b80:	cmn	r3, #1
   12b84:	bne	12628 <close@plt+0x1764>
   12b88:	ldr	r3, [sp, #56]	; 0x38
   12b8c:	ldrb	r5, [r3, sl]
   12b90:	adds	r5, r5, #0
   12b94:	movne	r5, #1
   12b98:	cmp	r5, #0
   12b9c:	bne	1263c <close@plt+0x1778>
   12ba0:	ldr	r3, [sp, #152]	; 0x98
   12ba4:	ldr	r1, [sp, #28]
   12ba8:	sub	r3, r3, #2
   12bac:	clz	r3, r3
   12bb0:	lsr	r3, r3, #5
   12bb4:	and	r9, r1, r3
   12bb8:	cmp	r7, #0
   12bbc:	movne	r2, #0
   12bc0:	andeq	r2, r9, #1
   12bc4:	cmp	r2, #0
   12bc8:	bne	135a4 <close@plt+0x26e0>
   12bcc:	eor	r2, r1, #1
   12bd0:	ands	r3, r3, r2
   12bd4:	beq	13a60 <close@plt+0x2b9c>
   12bd8:	ldr	r2, [sp, #68]	; 0x44
   12bdc:	cmp	r2, #0
   12be0:	beq	13a4c <close@plt+0x2b88>
   12be4:	ldr	r3, [sp, #36]	; 0x24
   12be8:	cmp	r3, #0
   12bec:	bne	13a04 <close@plt+0x2b40>
   12bf0:	ldr	r2, [sp, #72]	; 0x48
   12bf4:	clz	r3, fp
   12bf8:	cmp	r2, #0
   12bfc:	lsr	r3, r3, #5
   12c00:	moveq	r3, #0
   12c04:	cmp	r3, #0
   12c08:	beq	139a4 <close@plt+0x2ae0>
   12c0c:	str	r3, [sp, #68]	; 0x44
   12c10:	ldr	fp, [sp, #72]	; 0x48
   12c14:	b	125c4 <close@plt+0x1700>
   12c18:	ldr	r3, [sp, #152]	; 0x98
   12c1c:	cmp	r3, #2
   12c20:	beq	13274 <close@plt+0x23b0>
   12c24:	ldr	r3, [sp, #44]	; 0x2c
   12c28:	ldr	r2, [sp, #28]
   12c2c:	and	r2, r3, r2
   12c30:	ands	r2, r9, r2
   12c34:	bne	13280 <close@plt+0x23bc>
   12c38:	mov	r4, #92	; 0x5c
   12c3c:	mov	r3, r4
   12c40:	ldr	r1, [sp, #44]	; 0x2c
   12c44:	cmp	r1, #0
   12c48:	moveq	r5, #0
   12c4c:	moveq	r8, r1
   12c50:	beq	12aec <close@plt+0x1c28>
   12c54:	mov	r4, r3
   12c58:	mov	r5, #0
   12c5c:	ldr	r3, [sp, #28]
   12c60:	cmp	r3, #0
   12c64:	bne	13268 <close@plt+0x23a4>
   12c68:	ldr	r3, [sp, #40]	; 0x28
   12c6c:	eor	r9, r3, #1
   12c70:	and	r9, r9, r2
   12c74:	ands	r9, r9, #255	; 0xff
   12c78:	beq	12cbc <close@plt+0x1df8>
   12c7c:	cmp	fp, r7
   12c80:	movhi	r2, #39	; 0x27
   12c84:	ldrhi	r3, [sp, #32]
   12c88:	str	r9, [sp, #40]	; 0x28
   12c8c:	strbhi	r2, [r3, r7]
   12c90:	add	r3, r7, #1
   12c94:	cmp	fp, r3
   12c98:	movhi	r1, #36	; 0x24
   12c9c:	ldrhi	r2, [sp, #32]
   12ca0:	strbhi	r1, [r2, r3]
   12ca4:	add	r3, r7, #2
   12ca8:	cmp	fp, r3
   12cac:	add	r7, r7, #3
   12cb0:	ldrhi	r2, [sp, #32]
   12cb4:	movhi	r1, #39	; 0x27
   12cb8:	strbhi	r1, [r2, r3]
   12cbc:	cmp	fp, r7
   12cc0:	movhi	r2, #92	; 0x5c
   12cc4:	ldrhi	r3, [sp, #32]
   12cc8:	add	sl, sl, #1
   12ccc:	strbhi	r2, [r3, r7]
   12cd0:	add	r7, r7, #1
   12cd4:	b	12b5c <close@plt+0x1c98>
   12cd8:	ldr	r3, [sp, #152]	; 0x98
   12cdc:	mov	r4, #11
   12ce0:	sub	r2, r3, #2
   12ce4:	mov	r3, #118	; 0x76
   12ce8:	clz	r2, r2
   12cec:	lsr	r2, r2, #5
   12cf0:	b	12c40 <close@plt+0x1d7c>
   12cf4:	mov	r4, #10
   12cf8:	mov	r3, #110	; 0x6e
   12cfc:	ldr	r2, [sp, #152]	; 0x98
   12d00:	ldr	r1, [sp, #28]
   12d04:	sub	r2, r2, #2
   12d08:	clz	r2, r2
   12d0c:	lsr	r2, r2, #5
   12d10:	ands	r1, r1, r2
   12d14:	beq	12c40 <close@plt+0x1d7c>
   12d18:	ldr	sl, [sp, #32]
   12d1c:	mov	r8, fp
   12d20:	mov	r2, r1
   12d24:	mov	r3, #2
   12d28:	str	r3, [sp, #152]	; 0x98
   12d2c:	ldr	r9, [sp, #44]	; 0x2c
   12d30:	ldr	r3, [sp, #152]	; 0x98
   12d34:	and	r9, r9, r2
   12d38:	tst	r9, #255	; 0xff
   12d3c:	movne	r3, #4
   12d40:	str	r3, [sp, #152]	; 0x98
   12d44:	ldr	r3, [sp, #156]	; 0x9c
   12d48:	mov	ip, #0
   12d4c:	bic	r3, r3, #2
   12d50:	str	r3, [sp, #4]
   12d54:	ldr	r3, [sp, #168]	; 0xa8
   12d58:	ldr	r2, [sp, #56]	; 0x38
   12d5c:	str	r3, [sp, #16]
   12d60:	ldr	r3, [sp, #164]	; 0xa4
   12d64:	mov	r1, r8
   12d68:	str	r3, [sp, #12]
   12d6c:	ldr	r3, [sp, #152]	; 0x98
   12d70:	mov	r0, sl
   12d74:	str	r3, [sp]
   12d78:	str	ip, [sp, #8]
   12d7c:	ldr	r3, [sp, #24]
   12d80:	bl	12568 <close@plt+0x16a4>
   12d84:	mov	fp, r0
   12d88:	mov	r0, fp
   12d8c:	add	sp, sp, #116	; 0x74
   12d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d94:	ldr	r3, [sp, #152]	; 0x98
   12d98:	mov	r4, #8
   12d9c:	sub	r2, r3, #2
   12da0:	mov	r3, #98	; 0x62
   12da4:	clz	r2, r2
   12da8:	lsr	r2, r2, #5
   12dac:	b	12c40 <close@plt+0x1d7c>
   12db0:	ldr	r3, [sp, #152]	; 0x98
   12db4:	mov	r4, #7
   12db8:	sub	r2, r3, #2
   12dbc:	mov	r3, #97	; 0x61
   12dc0:	clz	r2, r2
   12dc4:	lsr	r2, r2, #5
   12dc8:	b	12c40 <close@plt+0x1d7c>
   12dcc:	ldr	r3, [sp, #44]	; 0x2c
   12dd0:	cmp	r3, #0
   12dd4:	beq	135b8 <close@plt+0x26f4>
   12dd8:	ldr	r3, [sp, #28]
   12ddc:	cmp	r3, #0
   12de0:	bne	13890 <close@plt+0x29cc>
   12de4:	ldr	r3, [sp, #152]	; 0x98
   12de8:	sub	r2, r3, #2
   12dec:	ldr	r3, [sp, #40]	; 0x28
   12df0:	clz	r2, r2
   12df4:	eor	r3, r3, #1
   12df8:	lsr	r2, r2, #5
   12dfc:	ands	r3, r2, r3
   12e00:	moveq	r1, r7
   12e04:	beq	12e48 <close@plt+0x1f84>
   12e08:	cmp	fp, r7
   12e0c:	movhi	r0, #39	; 0x27
   12e10:	ldrhi	r1, [sp, #32]
   12e14:	str	r3, [sp, #40]	; 0x28
   12e18:	strbhi	r0, [r1, r7]
   12e1c:	add	r1, r7, #1
   12e20:	cmp	fp, r1
   12e24:	movhi	ip, #36	; 0x24
   12e28:	ldrhi	r0, [sp, #32]
   12e2c:	strbhi	ip, [r0, r1]
   12e30:	add	r1, r7, #2
   12e34:	cmp	fp, r1
   12e38:	movhi	ip, #39	; 0x27
   12e3c:	ldrhi	r0, [sp, #32]
   12e40:	strbhi	ip, [r0, r1]
   12e44:	add	r1, r7, #3
   12e48:	cmp	fp, r1
   12e4c:	movhi	r0, #92	; 0x5c
   12e50:	ldrhi	r3, [sp, #32]
   12e54:	add	r7, r1, #1
   12e58:	strbhi	r0, [r3, r1]
   12e5c:	cmp	r8, #0
   12e60:	beq	137a4 <close@plt+0x28e0>
   12e64:	ldr	r0, [sp, #24]
   12e68:	add	r3, sl, #1
   12e6c:	cmp	r3, r0
   12e70:	bcs	136e0 <close@plt+0x281c>
   12e74:	ldr	r0, [sp, #56]	; 0x38
   12e78:	ldrb	r3, [r0, r3]
   12e7c:	sub	r3, r3, #48	; 0x30
   12e80:	cmp	r3, #9
   12e84:	bhi	136e0 <close@plt+0x281c>
   12e88:	cmp	fp, r7
   12e8c:	movhi	r3, #48	; 0x30
   12e90:	ldrhi	r0, [sp, #32]
   12e94:	ldr	r5, [sp, #28]
   12e98:	mov	r4, #48	; 0x30
   12e9c:	strbhi	r3, [r0, r7]
   12ea0:	add	r3, r1, #2
   12ea4:	cmp	fp, r3
   12ea8:	movhi	r0, #48	; 0x30
   12eac:	ldrhi	ip, [sp, #32]
   12eb0:	add	r7, r1, #3
   12eb4:	strbhi	r0, [ip, r3]
   12eb8:	b	12aec <close@plt+0x1c28>
   12ebc:	mov	r5, #0
   12ec0:	ldr	r3, [sp, #152]	; 0x98
   12ec4:	sub	r2, r3, #2
   12ec8:	ldr	r3, [sp, #28]
   12ecc:	clz	r2, r2
   12ed0:	lsr	r2, r2, #5
   12ed4:	ands	r8, r3, r2
   12ed8:	beq	12aec <close@plt+0x1c28>
   12edc:	mov	r3, r8
   12ee0:	mov	r2, r3
   12ee4:	mov	r3, #2
   12ee8:	ldr	sl, [sp, #32]
   12eec:	mov	r8, fp
   12ef0:	str	r3, [sp, #152]	; 0x98
   12ef4:	b	12d2c <close@plt+0x1e68>
   12ef8:	ldr	r3, [sp, #152]	; 0x98
   12efc:	cmp	r3, #2
   12f00:	beq	13624 <close@plt+0x2760>
   12f04:	cmp	r3, #5
   12f08:	beq	135e4 <close@plt+0x2720>
   12f0c:	mov	r5, #0
   12f10:	sub	r2, r3, #2
   12f14:	mov	r8, r5
   12f18:	clz	r2, r2
   12f1c:	mov	r4, #63	; 0x3f
   12f20:	lsr	r2, r2, #5
   12f24:	b	12aec <close@plt+0x1c28>
   12f28:	ldr	r3, [sp, #152]	; 0x98
   12f2c:	cmp	r3, #2
   12f30:	beq	13644 <close@plt+0x2780>
   12f34:	mov	r2, #0
   12f38:	str	r5, [sp, #68]	; 0x44
   12f3c:	mov	r8, r2
   12f40:	mov	r4, #39	; 0x27
   12f44:	b	12aec <close@plt+0x1c28>
   12f48:	mov	r4, #13
   12f4c:	mov	r3, #114	; 0x72
   12f50:	b	12cfc <close@plt+0x1e38>
   12f54:	ldr	r3, [sp, #152]	; 0x98
   12f58:	mov	r8, #0
   12f5c:	sub	r2, r3, #2
   12f60:	clz	r2, r2
   12f64:	lsr	r2, r2, #5
   12f68:	b	12aec <close@plt+0x1c28>
   12f6c:	ldr	r3, [sp, #152]	; 0x98
   12f70:	mov	r4, #12
   12f74:	sub	r2, r3, #2
   12f78:	mov	r3, #102	; 0x66
   12f7c:	clz	r2, r2
   12f80:	lsr	r2, r2, #5
   12f84:	b	12c40 <close@plt+0x1d7c>
   12f88:	mov	r5, r6
   12f8c:	b	12ec0 <close@plt+0x1ffc>
   12f90:	ldr	r3, [sp, #152]	; 0x98
   12f94:	sub	r2, r3, #2
   12f98:	mov	r3, #116	; 0x74
   12f9c:	clz	r2, r2
   12fa0:	lsr	r2, r2, #5
   12fa4:	b	12c40 <close@plt+0x1d7c>
   12fa8:	ldr	r8, [sp, #76]	; 0x4c
   12fac:	cmp	r8, #1
   12fb0:	bne	13460 <close@plt+0x259c>
   12fb4:	bl	10dd4 <__ctype_b_loc@plt>
   12fb8:	sxth	r3, r4
   12fbc:	mov	ip, r8
   12fc0:	lsl	r3, r3, #1
   12fc4:	ldr	r2, [r0]
   12fc8:	ldrh	r3, [r2, r3]
   12fcc:	and	r3, r3, #16384	; 0x4000
   12fd0:	cmp	r3, #0
   12fd4:	movne	r5, #1
   12fd8:	moveq	r5, #0
   12fdc:	moveq	r3, #1
   12fe0:	movne	r3, #0
   12fe4:	ldr	r2, [sp, #44]	; 0x2c
   12fe8:	and	r3, r3, r2
   12fec:	ands	r8, r3, #255	; 0xff
   12ff0:	bne	132f4 <close@plt+0x2430>
   12ff4:	ldr	r3, [sp, #152]	; 0x98
   12ff8:	sub	r2, r3, #2
   12ffc:	clz	r2, r2
   13000:	lsr	r2, r2, #5
   13004:	b	12aec <close@plt+0x1c28>
   13008:	ldr	r3, [sp, #56]	; 0x38
   1300c:	add	r3, r3, sl
   13010:	str	r3, [sp, #48]	; 0x30
   13014:	ldr	r3, [sp, #48]	; 0x30
   13018:	mov	r6, #0
   1301c:	ldrb	r4, [r3]
   13020:	cmp	r4, #126	; 0x7e
   13024:	ldrls	pc, [pc, r4, lsl #2]
   13028:	b	12fa8 <close@plt+0x20e4>
   1302c:	andeq	r2, r1, ip, asr #27
   13030:	andeq	r2, r1, r8, lsr #31
   13034:	andeq	r2, r1, r8, lsr #31
   13038:	andeq	r2, r1, r8, lsr #31
   1303c:	andeq	r2, r1, r8, lsr #31
   13040:	andeq	r2, r1, r8, lsr #31
   13044:	andeq	r2, r1, r8, lsr #31
   13048:			; <UNDEFINED> instruction: 0x00012db0
   1304c:	muleq	r1, r4, sp
   13050:	andeq	r3, r1, r8, lsr #4
   13054:	strdeq	r2, [r1], -r4
   13058:	ldrdeq	r2, [r1], -r8
   1305c:	andeq	r2, r1, ip, ror #30
   13060:	andeq	r2, r1, r8, asr #30
   13064:	andeq	r2, r1, r8, lsr #31
   13068:	andeq	r2, r1, r8, lsr #31
   1306c:	andeq	r2, r1, r8, lsr #31
   13070:	andeq	r2, r1, r8, lsr #31
   13074:	andeq	r2, r1, r8, lsr #31
   13078:	andeq	r2, r1, r8, lsr #31
   1307c:	andeq	r2, r1, r8, lsr #31
   13080:	andeq	r2, r1, r8, lsr #31
   13084:	andeq	r2, r1, r8, lsr #31
   13088:	andeq	r2, r1, r8, lsr #31
   1308c:	andeq	r2, r1, r8, lsr #31
   13090:	andeq	r2, r1, r8, lsr #31
   13094:	andeq	r2, r1, r8, lsr #31
   13098:	andeq	r2, r1, r8, lsr #31
   1309c:	andeq	r2, r1, r8, lsr #31
   130a0:	andeq	r2, r1, r8, lsr #31
   130a4:	andeq	r2, r1, r8, lsr #31
   130a8:	andeq	r2, r1, r8, lsr #31
   130ac:	andeq	r2, r1, r0, asr #29
   130b0:			; <UNDEFINED> instruction: 0x00012ebc
   130b4:			; <UNDEFINED> instruction: 0x00012ebc
   130b8:	andeq	r2, r1, ip, asr #21
   130bc:			; <UNDEFINED> instruction: 0x00012ebc
   130c0:	andeq	r2, r1, r4, asr pc
   130c4:			; <UNDEFINED> instruction: 0x00012ebc
   130c8:	andeq	r2, r1, r8, lsr #30
   130cc:			; <UNDEFINED> instruction: 0x00012ebc
   130d0:			; <UNDEFINED> instruction: 0x00012ebc
   130d4:			; <UNDEFINED> instruction: 0x00012ebc
   130d8:	andeq	r2, r1, r4, asr pc
   130dc:	andeq	r2, r1, r4, asr pc
   130e0:	andeq	r2, r1, r4, asr pc
   130e4:	andeq	r2, r1, r4, asr pc
   130e8:	andeq	r2, r1, r4, asr pc
   130ec:	andeq	r2, r1, r4, asr pc
   130f0:	andeq	r2, r1, r4, asr pc
   130f4:	andeq	r2, r1, r4, asr pc
   130f8:	andeq	r2, r1, r4, asr pc
   130fc:	andeq	r2, r1, r4, asr pc
   13100:	andeq	r2, r1, r4, asr pc
   13104:	andeq	r2, r1, r4, asr pc
   13108:	andeq	r2, r1, r4, asr pc
   1310c:	andeq	r2, r1, r4, asr pc
   13110:	andeq	r2, r1, r4, asr pc
   13114:	andeq	r2, r1, r4, asr pc
   13118:			; <UNDEFINED> instruction: 0x00012ebc
   1311c:			; <UNDEFINED> instruction: 0x00012ebc
   13120:			; <UNDEFINED> instruction: 0x00012ebc
   13124:			; <UNDEFINED> instruction: 0x00012ebc
   13128:	strdeq	r2, [r1], -r8
   1312c:	andeq	r2, r1, r8, lsr #31
   13130:	andeq	r2, r1, r4, asr pc
   13134:	andeq	r2, r1, r4, asr pc
   13138:	andeq	r2, r1, r4, asr pc
   1313c:	andeq	r2, r1, r4, asr pc
   13140:	andeq	r2, r1, r4, asr pc
   13144:	andeq	r2, r1, r4, asr pc
   13148:	andeq	r2, r1, r4, asr pc
   1314c:	andeq	r2, r1, r4, asr pc
   13150:	andeq	r2, r1, r4, asr pc
   13154:	andeq	r2, r1, r4, asr pc
   13158:	andeq	r2, r1, r4, asr pc
   1315c:	andeq	r2, r1, r4, asr pc
   13160:	andeq	r2, r1, r4, asr pc
   13164:	andeq	r2, r1, r4, asr pc
   13168:	andeq	r2, r1, r4, asr pc
   1316c:	andeq	r2, r1, r4, asr pc
   13170:	andeq	r2, r1, r4, asr pc
   13174:	andeq	r2, r1, r4, asr pc
   13178:	andeq	r2, r1, r4, asr pc
   1317c:	andeq	r2, r1, r4, asr pc
   13180:	andeq	r2, r1, r4, asr pc
   13184:	andeq	r2, r1, r4, asr pc
   13188:	andeq	r2, r1, r4, asr pc
   1318c:	andeq	r2, r1, r4, asr pc
   13190:	andeq	r2, r1, r4, asr pc
   13194:	andeq	r2, r1, r4, asr pc
   13198:			; <UNDEFINED> instruction: 0x00012ebc
   1319c:	andeq	r2, r1, r8, lsl ip
   131a0:	andeq	r2, r1, r4, asr pc
   131a4:			; <UNDEFINED> instruction: 0x00012ebc
   131a8:	andeq	r2, r1, r4, asr pc
   131ac:			; <UNDEFINED> instruction: 0x00012ebc
   131b0:	andeq	r2, r1, r4, asr pc
   131b4:	andeq	r2, r1, r4, asr pc
   131b8:	andeq	r2, r1, r4, asr pc
   131bc:	andeq	r2, r1, r4, asr pc
   131c0:	andeq	r2, r1, r4, asr pc
   131c4:	andeq	r2, r1, r4, asr pc
   131c8:	andeq	r2, r1, r4, asr pc
   131cc:	andeq	r2, r1, r4, asr pc
   131d0:	andeq	r2, r1, r4, asr pc
   131d4:	andeq	r2, r1, r4, asr pc
   131d8:	andeq	r2, r1, r4, asr pc
   131dc:	andeq	r2, r1, r4, asr pc
   131e0:	andeq	r2, r1, r4, asr pc
   131e4:	andeq	r2, r1, r4, asr pc
   131e8:	andeq	r2, r1, r4, asr pc
   131ec:	andeq	r2, r1, r4, asr pc
   131f0:	andeq	r2, r1, r4, asr pc
   131f4:	andeq	r2, r1, r4, asr pc
   131f8:	andeq	r2, r1, r4, asr pc
   131fc:	andeq	r2, r1, r4, asr pc
   13200:	andeq	r2, r1, r4, asr pc
   13204:	andeq	r2, r1, r4, asr pc
   13208:	andeq	r2, r1, r4, asr pc
   1320c:	andeq	r2, r1, r4, asr pc
   13210:	andeq	r2, r1, r4, asr pc
   13214:	andeq	r2, r1, r4, asr pc
   13218:	andeq	r2, r1, ip, lsr #21
   1321c:			; <UNDEFINED> instruction: 0x00012ebc
   13220:	andeq	r2, r1, ip, lsr #21
   13224:	andeq	r2, r1, ip, asr #21
   13228:	mov	r3, #116	; 0x74
   1322c:	b	12cfc <close@plt+0x1e38>
   13230:	ldr	r3, [sp, #160]	; 0xa0
   13234:	cmp	r3, #0
   13238:	beq	12b08 <close@plt+0x1c44>
   1323c:	lsr	r3, r4, #5
   13240:	ldr	r0, [sp, #160]	; 0xa0
   13244:	uxtb	r3, r3
   13248:	and	r1, r4, #31
   1324c:	ldr	r0, [r0, r3, lsl #2]
   13250:	lsr	r3, r0, r1
   13254:	tst	r3, #1
   13258:	beq	12b08 <close@plt+0x1c44>
   1325c:	ldr	r3, [sp, #28]
   13260:	cmp	r3, #0
   13264:	beq	12c68 <close@plt+0x1da4>
   13268:	ldr	sl, [sp, #32]
   1326c:	mov	r8, fp
   13270:	b	12d2c <close@plt+0x1e68>
   13274:	ldr	r3, [sp, #28]
   13278:	cmp	r3, #0
   1327c:	bne	137d0 <close@plt+0x290c>
   13280:	add	sl, sl, #1
   13284:	ldr	r6, [sp, #40]	; 0x28
   13288:	mov	r5, #0
   1328c:	mov	r4, #92	; 0x5c
   13290:	b	12b24 <close@plt+0x1c60>
   13294:	cmp	r9, r8
   13298:	bne	13508 <close@plt+0x2644>
   1329c:	ldr	r0, [sp, #100]	; 0x64
   132a0:	bl	10d38 <iswprint@plt>
   132a4:	add	r5, r5, r4
   132a8:	cmp	r0, #0
   132ac:	add	r0, sp, #104	; 0x68
   132b0:	moveq	r6, #0
   132b4:	bl	10ce4 <mbsinit@plt>
   132b8:	cmp	r0, #0
   132bc:	beq	1349c <close@plt+0x25d8>
   132c0:	mov	r2, r6
   132c4:	mov	ip, r5
   132c8:	eor	r5, r2, #1
   132cc:	ldr	r4, [sp, #80]	; 0x50
   132d0:	ldr	r6, [sp, #84]	; 0x54
   132d4:	ldr	r7, [sp, #88]	; 0x58
   132d8:	uxtb	r5, r5
   132dc:	cmp	ip, #1
   132e0:	bls	137e0 <close@plt+0x291c>
   132e4:	ldr	r3, [sp, #44]	; 0x2c
   132e8:	and	r8, r3, r5
   132ec:	mov	r5, r2
   132f0:	uxtb	r8, r8
   132f4:	add	r2, sl, ip
   132f8:	ldr	r0, [sp, #48]	; 0x30
   132fc:	mov	r1, #0
   13300:	str	r5, [sp, #48]	; 0x30
   13304:	ldr	r9, [sp, #28]
   13308:	ldr	ip, [sp, #40]	; 0x28
   1330c:	ldr	r3, [sp, #32]
   13310:	ldr	r5, [sp, #152]	; 0x98
   13314:	b	133d0 <close@plt+0x250c>
   13318:	cmp	r9, #0
   1331c:	bne	136f4 <close@plt+0x2830>
   13320:	eor	r1, ip, #1
   13324:	cmp	r5, #2
   13328:	movne	r1, #0
   1332c:	andeq	r1, r1, #1
   13330:	cmp	r1, #0
   13334:	beq	1336c <close@plt+0x24a8>
   13338:	cmp	fp, r7
   1333c:	movhi	ip, #39	; 0x27
   13340:	strbhi	ip, [r3, r7]
   13344:	add	ip, r7, #1
   13348:	cmp	fp, ip
   1334c:	movhi	lr, #36	; 0x24
   13350:	strbhi	lr, [r3, ip]
   13354:	add	ip, r7, #2
   13358:	cmp	fp, ip
   1335c:	movhi	lr, #39	; 0x27
   13360:	strbhi	lr, [r3, ip]
   13364:	add	r7, r7, #3
   13368:	mov	ip, r1
   1336c:	cmp	fp, r7
   13370:	movhi	r1, #92	; 0x5c
   13374:	strbhi	r1, [r3, r7]
   13378:	add	r1, r7, #1
   1337c:	cmp	fp, r1
   13380:	lsrhi	lr, r4, #6
   13384:	addhi	lr, lr, #48	; 0x30
   13388:	strbhi	lr, [r3, r1]
   1338c:	add	lr, r7, #2
   13390:	cmp	fp, lr
   13394:	lsrhi	r1, r4, #3
   13398:	andhi	r1, r1, #7
   1339c:	addhi	r1, r1, #48	; 0x30
   133a0:	add	sl, sl, #1
   133a4:	strbhi	r1, [r3, lr]
   133a8:	and	r4, r4, #7
   133ac:	cmp	r2, sl
   133b0:	add	r4, r4, #48	; 0x30
   133b4:	add	r7, r7, #3
   133b8:	bls	13718 <close@plt+0x2854>
   133bc:	mov	r1, r8
   133c0:	cmp	fp, r7
   133c4:	strbhi	r4, [r3, r7]
   133c8:	ldrb	r4, [r0, #1]!
   133cc:	add	r7, r7, #1
   133d0:	cmp	r8, #0
   133d4:	bne	13318 <close@plt+0x2454>
   133d8:	cmp	r6, #0
   133dc:	bne	1342c <close@plt+0x2568>
   133e0:	eor	r6, r1, #1
   133e4:	and	r6, r6, ip
   133e8:	add	sl, sl, #1
   133ec:	cmp	r2, sl
   133f0:	uxtb	r6, r6
   133f4:	bls	13454 <close@plt+0x2590>
   133f8:	cmp	r6, #0
   133fc:	beq	133c0 <close@plt+0x24fc>
   13400:	cmp	fp, r7
   13404:	movhi	ip, #39	; 0x27
   13408:	strbhi	ip, [r3, r7]
   1340c:	add	ip, r7, #1
   13410:	cmp	fp, ip
   13414:	movhi	lr, #39	; 0x27
   13418:	strbhi	lr, [r3, ip]
   1341c:	add	r7, r7, #2
   13420:	mov	r6, r8
   13424:	mov	ip, r8
   13428:	b	133c0 <close@plt+0x24fc>
   1342c:	cmp	fp, r7
   13430:	eor	r6, r1, #1
   13434:	movhi	lr, #92	; 0x5c
   13438:	and	r6, r6, ip
   1343c:	add	sl, sl, #1
   13440:	strbhi	lr, [r3, r7]
   13444:	cmp	r2, sl
   13448:	add	r7, r7, #1
   1344c:	uxtb	r6, r6
   13450:	bhi	133f8 <close@plt+0x2534>
   13454:	str	ip, [sp, #40]	; 0x28
   13458:	ldr	r5, [sp, #48]	; 0x30
   1345c:	b	12b24 <close@plt+0x1c60>
   13460:	ldr	r3, [sp, #24]
   13464:	cmn	r3, #1
   13468:	mov	r3, #0
   1346c:	str	r3, [sp, #104]	; 0x68
   13470:	str	r3, [sp, #108]	; 0x6c
   13474:	beq	13794 <close@plt+0x28d0>
   13478:	mov	r2, r5
   1347c:	mov	r3, #0
   13480:	str	r7, [sp, #88]	; 0x58
   13484:	ldr	r7, [sp, #152]	; 0x98
   13488:	str	r5, [sp, #92]	; 0x5c
   1348c:	str	r6, [sp, #84]	; 0x54
   13490:	mov	r5, r3
   13494:	mov	r6, r2
   13498:	str	r4, [sp, #80]	; 0x50
   1349c:	ldr	r3, [sp, #56]	; 0x38
   134a0:	add	r9, sl, r5
   134a4:	add	r8, r3, r9
   134a8:	ldr	r3, [sp, #24]
   134ac:	mov	r1, r8
   134b0:	sub	r2, r3, r9
   134b4:	add	r0, sp, #100	; 0x64
   134b8:	add	r3, sp, #104	; 0x68
   134bc:	bl	152a4 <close@plt+0x43e0>
   134c0:	subs	r4, r0, #0
   134c4:	beq	1386c <close@plt+0x29a8>
   134c8:	cmn	r4, #1
   134cc:	beq	1384c <close@plt+0x2988>
   134d0:	cmn	r4, #2
   134d4:	beq	137ec <close@plt+0x2928>
   134d8:	ldr	r2, [sp, #28]
   134dc:	cmp	r7, #2
   134e0:	movne	r2, #0
   134e4:	andeq	r2, r2, #1
   134e8:	cmp	r2, #0
   134ec:	beq	1329c <close@plt+0x23d8>
   134f0:	cmp	r4, #1
   134f4:	beq	1329c <close@plt+0x23d8>
   134f8:	sub	r3, r4, #1
   134fc:	add	r9, r3, r9
   13500:	ldr	r3, [sp, #56]	; 0x38
   13504:	add	r9, r3, r9
   13508:	ldrb	r3, [r8, #1]!
   1350c:	sub	r3, r3, #91	; 0x5b
   13510:	cmp	r3, #33	; 0x21
   13514:	ldrls	pc, [pc, r3, lsl #2]
   13518:	b	13294 <close@plt+0x23d0>
   1351c:	andeq	r3, r1, r4, lsr #11
   13520:	andeq	r3, r1, r4, lsr #11
   13524:	muleq	r1, r4, r2
   13528:	andeq	r3, r1, r4, lsr #11
   1352c:	muleq	r1, r4, r2
   13530:	andeq	r3, r1, r4, lsr #11
   13534:	muleq	r1, r4, r2
   13538:	muleq	r1, r4, r2
   1353c:	muleq	r1, r4, r2
   13540:	muleq	r1, r4, r2
   13544:	muleq	r1, r4, r2
   13548:	muleq	r1, r4, r2
   1354c:	muleq	r1, r4, r2
   13550:	muleq	r1, r4, r2
   13554:	muleq	r1, r4, r2
   13558:	muleq	r1, r4, r2
   1355c:	muleq	r1, r4, r2
   13560:	muleq	r1, r4, r2
   13564:	muleq	r1, r4, r2
   13568:	muleq	r1, r4, r2
   1356c:	muleq	r1, r4, r2
   13570:	muleq	r1, r4, r2
   13574:	muleq	r1, r4, r2
   13578:	muleq	r1, r4, r2
   1357c:	muleq	r1, r4, r2
   13580:	muleq	r1, r4, r2
   13584:	muleq	r1, r4, r2
   13588:	muleq	r1, r4, r2
   1358c:	muleq	r1, r4, r2
   13590:	muleq	r1, r4, r2
   13594:	muleq	r1, r4, r2
   13598:	muleq	r1, r4, r2
   1359c:	muleq	r1, r4, r2
   135a0:	andeq	r3, r1, r4, lsr #11
   135a4:	mov	r3, #2
   135a8:	ldr	sl, [sp, #32]
   135ac:	mov	r8, fp
   135b0:	str	r3, [sp, #152]	; 0x98
   135b4:	b	12d2c <close@plt+0x1e68>
   135b8:	ldr	r3, [sp, #156]	; 0x9c
   135bc:	tst	r3, #1
   135c0:	bne	136ec <close@plt+0x2828>
   135c4:	ldr	r3, [sp, #152]	; 0x98
   135c8:	ldr	r4, [sp, #44]	; 0x2c
   135cc:	sub	r2, r3, #2
   135d0:	mov	r5, #0
   135d4:	clz	r2, r2
   135d8:	mov	r8, r4
   135dc:	lsr	r2, r2, #5
   135e0:	b	12aec <close@plt+0x1c28>
   135e4:	ldr	r3, [sp, #156]	; 0x9c
   135e8:	ands	r9, r3, #4
   135ec:	beq	13724 <close@plt+0x2860>
   135f0:	ldr	r2, [sp, #24]
   135f4:	add	r3, sl, #2
   135f8:	cmp	r3, r2
   135fc:	bcs	13610 <close@plt+0x274c>
   13600:	ldr	r2, [sp, #48]	; 0x30
   13604:	ldrb	r4, [r2, #1]
   13608:	cmp	r4, #63	; 0x3f
   1360c:	beq	138ac <close@plt+0x29e8>
   13610:	mov	r2, #0
   13614:	mov	r8, r2
   13618:	mov	r5, r2
   1361c:	mov	r4, #63	; 0x3f
   13620:	b	12aec <close@plt+0x1c28>
   13624:	ldr	r3, [sp, #28]
   13628:	cmp	r3, #0
   1362c:	bne	13950 <close@plt+0x2a8c>
   13630:	mov	r2, r5
   13634:	mov	r8, r3
   13638:	mov	r5, #0
   1363c:	mov	r4, #63	; 0x3f
   13640:	b	12aec <close@plt+0x1c28>
   13644:	ldr	r3, [sp, #28]
   13648:	cmp	r3, #0
   1364c:	bne	13950 <close@plt+0x2a8c>
   13650:	ldr	r2, [sp, #72]	; 0x48
   13654:	adds	r3, fp, #0
   13658:	movne	r3, #1
   1365c:	cmp	r2, #0
   13660:	movne	r3, #0
   13664:	cmp	r3, #0
   13668:	strne	fp, [sp, #72]	; 0x48
   1366c:	movne	fp, #0
   13670:	bne	136ac <close@plt+0x27e8>
   13674:	cmp	fp, r7
   13678:	movhi	r2, #39	; 0x27
   1367c:	ldrhi	r3, [sp, #32]
   13680:	strbhi	r2, [r3, r7]
   13684:	add	r3, r7, #1
   13688:	cmp	fp, r3
   1368c:	movhi	r1, #92	; 0x5c
   13690:	ldrhi	r2, [sp, #32]
   13694:	strbhi	r1, [r2, r3]
   13698:	add	r3, r7, #2
   1369c:	cmp	fp, r3
   136a0:	movhi	r1, #39	; 0x27
   136a4:	ldrhi	r2, [sp, #32]
   136a8:	strbhi	r1, [r2, r3]
   136ac:	ldr	r3, [sp, #28]
   136b0:	add	r7, r7, #3
   136b4:	mov	r2, r5
   136b8:	mov	r8, r3
   136bc:	str	r5, [sp, #68]	; 0x44
   136c0:	str	r3, [sp, #40]	; 0x28
   136c4:	mov	r4, #39	; 0x27
   136c8:	b	12aec <close@plt+0x1c28>
   136cc:	ldr	r3, [sp, #56]	; 0x38
   136d0:	ldrb	r3, [r3, #1]
   136d4:	adds	r3, r3, #0
   136d8:	movne	r3, #1
   136dc:	b	12ac4 <close@plt+0x1c00>
   136e0:	ldr	r5, [sp, #28]
   136e4:	mov	r4, #48	; 0x30
   136e8:	b	12aec <close@plt+0x1c28>
   136ec:	add	sl, sl, #1
   136f0:	b	1261c <close@plt+0x1758>
   136f4:	mov	sl, r3
   136f8:	ldr	r3, [sp, #28]
   136fc:	mov	r8, fp
   13700:	str	r3, [sp, #44]	; 0x2c
   13704:	ldr	r3, [sp, #152]	; 0x98
   13708:	sub	r2, r3, #2
   1370c:	clz	r2, r2
   13710:	lsr	r2, r2, #5
   13714:	b	12d2c <close@plt+0x1e68>
   13718:	str	ip, [sp, #40]	; 0x28
   1371c:	ldr	r5, [sp, #48]	; 0x30
   13720:	b	12b5c <close@plt+0x1c98>
   13724:	mov	r2, r9
   13728:	mov	r8, r9
   1372c:	mov	r5, #0
   13730:	mov	r4, #63	; 0x3f
   13734:	b	12aec <close@plt+0x1c28>
   13738:	cmp	fp, #0
   1373c:	beq	137b4 <close@plt+0x28f0>
   13740:	ldr	r1, [sp, #32]
   13744:	mov	r3, #34	; 0x22
   13748:	mov	r2, #1
   1374c:	strb	r3, [r1]
   13750:	ldr	r3, [pc, #332]	; 138a4 <close@plt+0x29e0>
   13754:	str	r2, [sp, #52]	; 0x34
   13758:	mov	r7, r2
   1375c:	str	r2, [sp, #44]	; 0x2c
   13760:	str	r3, [sp, #64]	; 0x40
   13764:	b	1260c <close@plt+0x1748>
   13768:	ldr	r3, [pc, #300]	; 1389c <close@plt+0x29d8>
   1376c:	str	r3, [sp, #64]	; 0x40
   13770:	mov	r3, #0
   13774:	str	r3, [sp, #28]
   13778:	mov	r3, #1
   1377c:	str	r3, [sp, #52]	; 0x34
   13780:	mov	r7, r3
   13784:	mov	r3, #2
   13788:	str	r3, [sp, #152]	; 0x98
   1378c:	b	1260c <close@plt+0x1748>
   13790:	bl	10eb8 <abort@plt>
   13794:	ldr	r0, [sp, #56]	; 0x38
   13798:	bl	10dec <strlen@plt>
   1379c:	str	r0, [sp, #24]
   137a0:	b	13478 <close@plt+0x25b4>
   137a4:	mov	r5, r8
   137a8:	mov	r4, #48	; 0x30
   137ac:	ldr	r8, [sp, #44]	; 0x2c
   137b0:	b	12aec <close@plt+0x1c28>
   137b4:	mov	r3, #1
   137b8:	str	r3, [sp, #52]	; 0x34
   137bc:	mov	r7, r3
   137c0:	str	r3, [sp, #44]	; 0x2c
   137c4:	ldr	r3, [pc, #216]	; 138a4 <close@plt+0x29e0>
   137c8:	str	r3, [sp, #64]	; 0x40
   137cc:	b	1260c <close@plt+0x1748>
   137d0:	ldr	sl, [sp, #32]
   137d4:	mov	r8, fp
   137d8:	mov	r2, r3
   137dc:	b	12d2c <close@plt+0x1e68>
   137e0:	mov	r3, r5
   137e4:	mov	r5, r2
   137e8:	b	12fe4 <close@plt+0x2120>
   137ec:	ldr	r1, [sp, #24]
   137f0:	mov	r2, r5
   137f4:	cmp	r1, r9
   137f8:	mov	ip, r5
   137fc:	ldr	r4, [sp, #80]	; 0x50
   13800:	ldr	r5, [sp, #92]	; 0x5c
   13804:	ldr	r6, [sp, #84]	; 0x54
   13808:	ldr	r7, [sp, #88]	; 0x58
   1380c:	bls	13840 <close@plt+0x297c>
   13810:	ldrb	r3, [r8]
   13814:	cmp	r3, #0
   13818:	bne	1382c <close@plt+0x2968>
   1381c:	b	13844 <close@plt+0x2980>
   13820:	ldrb	r3, [r8, #1]!
   13824:	cmp	r3, #0
   13828:	beq	13944 <close@plt+0x2a80>
   1382c:	add	r2, r2, #1
   13830:	add	r3, sl, r2
   13834:	cmp	r1, r3
   13838:	bhi	13820 <close@plt+0x295c>
   1383c:	mov	ip, r2
   13840:	mov	r3, #0
   13844:	mov	r2, r3
   13848:	b	132dc <close@plt+0x2418>
   1384c:	mov	r3, #0
   13850:	mov	ip, r5
   13854:	ldr	r4, [sp, #80]	; 0x50
   13858:	ldr	r5, [sp, #92]	; 0x5c
   1385c:	ldr	r6, [sp, #84]	; 0x54
   13860:	ldr	r7, [sp, #88]	; 0x58
   13864:	mov	r2, r3
   13868:	b	132dc <close@plt+0x2418>
   1386c:	mov	r3, r6
   13870:	mov	ip, r5
   13874:	eor	r5, r3, #1
   13878:	mov	r2, r6
   1387c:	ldr	r4, [sp, #80]	; 0x50
   13880:	ldr	r6, [sp, #84]	; 0x54
   13884:	ldr	r7, [sp, #88]	; 0x58
   13888:	uxtb	r5, r5
   1388c:	b	132dc <close@plt+0x2418>
   13890:	ldr	sl, [sp, #32]
   13894:	mov	r8, fp
   13898:	b	13700 <close@plt+0x283c>
   1389c:	andeq	r6, r1, ip, asr r4
   138a0:	andeq	r6, r1, r0, ror #8
   138a4:	andeq	r6, r1, r8, asr r4
   138a8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   138ac:	ldr	r2, [sp, #56]	; 0x38
   138b0:	ldrb	r1, [r2, r3]
   138b4:	sub	r2, r1, #33	; 0x21
   138b8:	uxtb	r2, r2
   138bc:	cmp	r2, #29
   138c0:	bhi	13960 <close@plt+0x2a9c>
   138c4:	ldr	r0, [pc, #-36]	; 138a8 <close@plt+0x29e4>
   138c8:	mov	ip, #1
   138cc:	ands	r2, r0, ip, lsl r2
   138d0:	beq	13970 <close@plt+0x2aac>
   138d4:	ldr	r2, [sp, #28]
   138d8:	cmp	r2, #0
   138dc:	bne	13a70 <close@plt+0x2bac>
   138e0:	cmp	fp, r7
   138e4:	ldr	r8, [sp, #28]
   138e8:	ldrhi	r2, [sp, #32]
   138ec:	mov	sl, r3
   138f0:	mov	r5, r8
   138f4:	strbhi	r4, [r2, r7]
   138f8:	add	r2, r7, #1
   138fc:	cmp	fp, r2
   13900:	movhi	r0, #34	; 0x22
   13904:	ldrhi	ip, [sp, #32]
   13908:	mov	r4, r1
   1390c:	strbhi	r0, [ip, r2]
   13910:	add	r2, r7, #2
   13914:	cmp	fp, r2
   13918:	movhi	r0, #34	; 0x22
   1391c:	ldrhi	ip, [sp, #32]
   13920:	strbhi	r0, [ip, r2]
   13924:	add	r2, r7, #3
   13928:	cmp	fp, r2
   1392c:	movhi	r0, #63	; 0x3f
   13930:	ldrhi	ip, [sp, #32]
   13934:	add	r7, r7, #4
   13938:	strbhi	r0, [ip, r2]
   1393c:	mov	r2, r8
   13940:	b	12aec <close@plt+0x1c28>
   13944:	mov	ip, r2
   13948:	mov	r2, r3
   1394c:	b	132dc <close@plt+0x2418>
   13950:	ldr	sl, [sp, #32]
   13954:	mov	r8, fp
   13958:	ldr	r2, [sp, #28]
   1395c:	b	12d2c <close@plt+0x1e68>
   13960:	mov	r2, #0
   13964:	mov	r8, r2
   13968:	mov	r5, r2
   1396c:	b	12aec <close@plt+0x1c28>
   13970:	mov	r8, r2
   13974:	mov	r5, #0
   13978:	b	12aec <close@plt+0x1c28>
   1397c:	ldr	r1, [sp, #152]	; 0x98
   13980:	bl	12448 <close@plt+0x1584>
   13984:	str	r0, [sp, #168]	; 0xa8
   13988:	b	129a8 <close@plt+0x1ae4>
   1398c:	ldr	r1, [sp, #152]	; 0x98
   13990:	bl	12448 <close@plt+0x1584>
   13994:	str	r0, [sp, #164]	; 0xa4
   13998:	b	12988 <close@plt+0x1ac4>
   1399c:	ldr	r7, [sp, #28]
   139a0:	b	129e8 <close@plt+0x1b24>
   139a4:	ldr	sl, [sp, #32]
   139a8:	ldr	r2, [sp, #68]	; 0x44
   139ac:	mov	r8, fp
   139b0:	mov	fp, r7
   139b4:	ldr	r3, [sp, #64]	; 0x40
   139b8:	cmp	r3, #0
   139bc:	moveq	r2, #0
   139c0:	andne	r2, r2, #1
   139c4:	cmp	r2, #0
   139c8:	beq	139f4 <close@plt+0x2b30>
   139cc:	mov	r2, r3
   139d0:	ldrb	r3, [r3]
   139d4:	cmp	r3, #0
   139d8:	beq	139f4 <close@plt+0x2b30>
   139dc:	cmp	r8, fp
   139e0:	strbhi	r3, [sl, fp]
   139e4:	ldrb	r3, [r2, #1]!
   139e8:	add	fp, fp, #1
   139ec:	cmp	r3, #0
   139f0:	bne	139dc <close@plt+0x2b18>
   139f4:	cmp	r8, fp
   139f8:	movhi	r3, #0
   139fc:	strbhi	r3, [sl, fp]
   13a00:	b	12d88 <close@plt+0x1ec4>
   13a04:	ldr	r3, [sp, #168]	; 0xa8
   13a08:	ldr	sl, [sp, #32]
   13a0c:	str	r3, [sp, #16]
   13a10:	ldr	r3, [sp, #164]	; 0xa4
   13a14:	mov	ip, #5
   13a18:	str	r3, [sp, #12]
   13a1c:	ldr	r3, [sp, #160]	; 0xa0
   13a20:	ldr	r2, [sp, #56]	; 0x38
   13a24:	str	r3, [sp, #8]
   13a28:	ldr	r3, [sp, #156]	; 0x9c
   13a2c:	ldr	r1, [sp, #72]	; 0x48
   13a30:	str	r3, [sp, #4]
   13a34:	mov	r0, sl
   13a38:	ldr	r3, [sp, #24]
   13a3c:	str	ip, [sp]
   13a40:	bl	12568 <close@plt+0x16a4>
   13a44:	mov	fp, r0
   13a48:	b	12d88 <close@plt+0x1ec4>
   13a4c:	mov	r8, fp
   13a50:	ldr	sl, [sp, #32]
   13a54:	mov	fp, r7
   13a58:	mov	r2, r3
   13a5c:	b	139b4 <close@plt+0x2af0>
   13a60:	mov	r8, fp
   13a64:	ldr	sl, [sp, #32]
   13a68:	mov	fp, r7
   13a6c:	b	139b4 <close@plt+0x2af0>
   13a70:	ldr	sl, [sp, #32]
   13a74:	mov	r8, fp
   13a78:	b	12d44 <close@plt+0x1e80>
   13a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a80:	sub	sp, sp, #52	; 0x34
   13a84:	mov	r4, r0
   13a88:	mov	r5, r3
   13a8c:	mov	sl, r1
   13a90:	mov	fp, r2
   13a94:	bl	10df8 <__errno_location@plt>
   13a98:	ldr	r7, [pc, #412]	; 13c3c <close@plt+0x2d78>
   13a9c:	cmn	r4, #-2147483647	; 0x80000001
   13aa0:	ldr	r6, [r7]
   13aa4:	mov	r8, r0
   13aa8:	movne	r0, #0
   13aac:	moveq	r0, #1
   13ab0:	ldr	r3, [r8]
   13ab4:	orrs	r0, r0, r4, lsr #31
   13ab8:	str	r3, [sp, #24]
   13abc:	bne	13c38 <close@plt+0x2d74>
   13ac0:	ldr	r2, [r7, #4]
   13ac4:	cmp	r4, r2
   13ac8:	blt	13b28 <close@plt+0x2c64>
   13acc:	add	r9, r7, #8
   13ad0:	cmp	r6, r9
   13ad4:	str	r2, [sp, #44]	; 0x2c
   13ad8:	beq	13c08 <close@plt+0x2d44>
   13adc:	mov	r3, #8
   13ae0:	sub	r2, r4, r2
   13ae4:	mov	r0, r6
   13ae8:	str	r3, [sp]
   13aec:	add	r2, r2, #1
   13af0:	mvn	r3, #-2147483648	; 0x80000000
   13af4:	add	r1, sp, #44	; 0x2c
   13af8:	bl	1498c <close@plt+0x3ac8>
   13afc:	mov	r6, r0
   13b00:	str	r0, [r7]
   13b04:	ldr	r0, [r7, #4]
   13b08:	ldr	r2, [sp, #44]	; 0x2c
   13b0c:	mov	r1, #0
   13b10:	sub	r2, r2, r0
   13b14:	add	r0, r6, r0, lsl #3
   13b18:	lsl	r2, r2, #3
   13b1c:	bl	10e10 <memset@plt>
   13b20:	ldr	r3, [sp, #44]	; 0x2c
   13b24:	str	r3, [r7, #4]
   13b28:	add	r3, r6, r4, lsl #3
   13b2c:	ldr	r1, [r5, #4]
   13b30:	ldr	r7, [r3, #4]
   13b34:	ldr	r9, [r6, r4, lsl #3]
   13b38:	ldr	r2, [r5, #40]	; 0x28
   13b3c:	ldr	ip, [r5, #44]	; 0x2c
   13b40:	add	r0, r5, #8
   13b44:	str	r3, [sp, #28]
   13b48:	ldr	r3, [r5]
   13b4c:	orr	r1, r1, #1
   13b50:	mov	lr, r0
   13b54:	str	r1, [sp, #32]
   13b58:	str	r0, [sp, #36]	; 0x24
   13b5c:	str	r1, [sp, #4]
   13b60:	str	r2, [sp, #12]
   13b64:	str	r3, [sp]
   13b68:	mov	r0, r7
   13b6c:	mov	r1, r9
   13b70:	str	ip, [sp, #16]
   13b74:	str	lr, [sp, #8]
   13b78:	mov	r3, fp
   13b7c:	mov	r2, sl
   13b80:	bl	12568 <close@plt+0x16a4>
   13b84:	cmp	r9, r0
   13b88:	bhi	13bf4 <close@plt+0x2d30>
   13b8c:	ldr	r3, [pc, #172]	; 13c40 <close@plt+0x2d7c>
   13b90:	add	r9, r0, #1
   13b94:	cmp	r7, r3
   13b98:	str	r9, [r6, r4, lsl #3]
   13b9c:	beq	13ba8 <close@plt+0x2ce4>
   13ba0:	mov	r0, r7
   13ba4:	bl	15218 <close@plt+0x4354>
   13ba8:	mov	r0, r9
   13bac:	bl	14828 <close@plt+0x3964>
   13bb0:	ldr	lr, [sp, #28]
   13bb4:	ldr	ip, [r5, #44]	; 0x2c
   13bb8:	ldr	r4, [r5, #40]	; 0x28
   13bbc:	mov	r3, fp
   13bc0:	mov	r2, sl
   13bc4:	mov	r1, r9
   13bc8:	str	r0, [lr, #4]
   13bcc:	ldr	lr, [r5]
   13bd0:	ldr	r5, [sp, #36]	; 0x24
   13bd4:	str	ip, [sp, #16]
   13bd8:	str	r5, [sp, #8]
   13bdc:	ldr	r5, [sp, #32]
   13be0:	str	r4, [sp, #12]
   13be4:	str	r5, [sp, #4]
   13be8:	str	lr, [sp]
   13bec:	mov	r7, r0
   13bf0:	bl	12568 <close@plt+0x16a4>
   13bf4:	ldr	r3, [sp, #24]
   13bf8:	mov	r0, r7
   13bfc:	str	r3, [r8]
   13c00:	add	sp, sp, #52	; 0x34
   13c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c08:	mov	r3, #8
   13c0c:	sub	r2, r4, r2
   13c10:	str	r3, [sp]
   13c14:	add	r1, sp, #44	; 0x2c
   13c18:	add	r2, r2, #1
   13c1c:	mvn	r3, #-2147483648	; 0x80000000
   13c20:	bl	1498c <close@plt+0x3ac8>
   13c24:	mov	r6, r0
   13c28:	ldm	r9, {r0, r1}
   13c2c:	str	r6, [r7]
   13c30:	stm	r6, {r0, r1}
   13c34:	b	13b04 <close@plt+0x2c40>
   13c38:	bl	10eb8 <abort@plt>
   13c3c:	strdeq	r7, [r2], -r4
   13c40:	andeq	r7, r2, r4, lsl #3
   13c44:	push	{r4, r5, r6, lr}
   13c48:	mov	r5, r0
   13c4c:	bl	10df8 <__errno_location@plt>
   13c50:	cmp	r5, #0
   13c54:	mov	r1, #48	; 0x30
   13c58:	mov	r4, r0
   13c5c:	ldr	r0, [pc, #16]	; 13c74 <close@plt+0x2db0>
   13c60:	ldr	r6, [r4]
   13c64:	movne	r0, r5
   13c68:	bl	14c88 <close@plt+0x3dc4>
   13c6c:	str	r6, [r4]
   13c70:	pop	{r4, r5, r6, pc}
   13c74:	andeq	r7, r2, r4, lsl #5
   13c78:	ldr	r3, [pc, #12]	; 13c8c <close@plt+0x2dc8>
   13c7c:	cmp	r0, #0
   13c80:	moveq	r0, r3
   13c84:	ldr	r0, [r0]
   13c88:	bx	lr
   13c8c:	andeq	r7, r2, r4, lsl #5
   13c90:	ldr	r3, [pc, #12]	; 13ca4 <close@plt+0x2de0>
   13c94:	cmp	r0, #0
   13c98:	moveq	r0, r3
   13c9c:	str	r1, [r0]
   13ca0:	bx	lr
   13ca4:	andeq	r7, r2, r4, lsl #5
   13ca8:	ldr	r3, [pc, #52]	; 13ce4 <close@plt+0x2e20>
   13cac:	cmp	r0, #0
   13cb0:	moveq	r0, r3
   13cb4:	add	r3, r0, #8
   13cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   13cbc:	lsr	lr, r1, #5
   13cc0:	and	r1, r1, #31
   13cc4:	ldr	ip, [r3, lr, lsl #2]
   13cc8:	lsr	r0, ip, r1
   13ccc:	eor	r2, r2, r0
   13cd0:	and	r2, r2, #1
   13cd4:	and	r0, r0, #1
   13cd8:	eor	r1, ip, r2, lsl r1
   13cdc:	str	r1, [r3, lr, lsl #2]
   13ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ce4:	andeq	r7, r2, r4, lsl #5
   13ce8:	ldr	r3, [pc, #16]	; 13d00 <close@plt+0x2e3c>
   13cec:	cmp	r0, #0
   13cf0:	movne	r3, r0
   13cf4:	ldr	r0, [r3, #4]
   13cf8:	str	r1, [r3, #4]
   13cfc:	bx	lr
   13d00:	andeq	r7, r2, r4, lsl #5
   13d04:	ldr	r3, [pc, #44]	; 13d38 <close@plt+0x2e74>
   13d08:	cmp	r0, #0
   13d0c:	moveq	r0, r3
   13d10:	mov	ip, #10
   13d14:	cmp	r2, #0
   13d18:	cmpne	r1, #0
   13d1c:	str	ip, [r0]
   13d20:	beq	13d30 <close@plt+0x2e6c>
   13d24:	str	r1, [r0, #40]	; 0x28
   13d28:	str	r2, [r0, #44]	; 0x2c
   13d2c:	bx	lr
   13d30:	push	{r4, lr}
   13d34:	bl	10eb8 <abort@plt>
   13d38:	andeq	r7, r2, r4, lsl #5
   13d3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d40:	sub	sp, sp, #24
   13d44:	ldr	ip, [pc, #108]	; 13db8 <close@plt+0x2ef4>
   13d48:	ldr	r4, [sp, #56]	; 0x38
   13d4c:	mov	r9, r2
   13d50:	cmp	r4, #0
   13d54:	moveq	r4, ip
   13d58:	mov	sl, r3
   13d5c:	mov	r7, r0
   13d60:	mov	r8, r1
   13d64:	bl	10df8 <__errno_location@plt>
   13d68:	ldr	r3, [r4, #44]	; 0x2c
   13d6c:	mov	r1, r8
   13d70:	ldr	r6, [r0]
   13d74:	str	r3, [sp, #16]
   13d78:	ldr	r2, [r4, #40]	; 0x28
   13d7c:	add	r3, r4, #8
   13d80:	str	r3, [sp, #8]
   13d84:	str	r2, [sp, #12]
   13d88:	ldr	r2, [r4, #4]
   13d8c:	mov	r5, r0
   13d90:	str	r2, [sp, #4]
   13d94:	ldr	ip, [r4]
   13d98:	mov	r3, sl
   13d9c:	mov	r2, r9
   13da0:	mov	r0, r7
   13da4:	str	ip, [sp]
   13da8:	bl	12568 <close@plt+0x16a4>
   13dac:	str	r6, [r5]
   13db0:	add	sp, sp, #24
   13db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13db8:	andeq	r7, r2, r4, lsl #5
   13dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc0:	cmp	r3, #0
   13dc4:	sub	sp, sp, #44	; 0x2c
   13dc8:	ldr	r4, [pc, #192]	; 13e90 <close@plt+0x2fcc>
   13dcc:	mov	r6, r2
   13dd0:	movne	r4, r3
   13dd4:	mov	r9, r1
   13dd8:	mov	r8, r0
   13ddc:	bl	10df8 <__errno_location@plt>
   13de0:	ldr	r3, [r4, #44]	; 0x2c
   13de4:	ldr	r5, [r4, #4]
   13de8:	add	sl, r4, #8
   13dec:	cmp	r6, #0
   13df0:	orreq	r5, r5, #1
   13df4:	mov	r1, #0
   13df8:	ldr	r2, [r0]
   13dfc:	str	r3, [sp, #16]
   13e00:	ldr	r3, [r4, #40]	; 0x28
   13e04:	stmib	sp, {r5, sl}
   13e08:	str	r3, [sp, #12]
   13e0c:	ldr	r3, [r4]
   13e10:	mov	r7, r0
   13e14:	str	r2, [sp, #28]
   13e18:	str	r3, [sp]
   13e1c:	mov	r2, r8
   13e20:	mov	r3, r9
   13e24:	mov	r0, r1
   13e28:	bl	12568 <close@plt+0x16a4>
   13e2c:	add	r1, r0, #1
   13e30:	mov	fp, r0
   13e34:	mov	r0, r1
   13e38:	str	r1, [sp, #36]	; 0x24
   13e3c:	bl	14828 <close@plt+0x3964>
   13e40:	ldr	r3, [r4, #44]	; 0x2c
   13e44:	mov	r2, r8
   13e48:	str	r3, [sp, #16]
   13e4c:	ldr	r3, [r4, #40]	; 0x28
   13e50:	str	r5, [sp, #4]
   13e54:	str	r3, [sp, #12]
   13e58:	str	sl, [sp, #8]
   13e5c:	ldr	ip, [r4]
   13e60:	ldr	r1, [sp, #36]	; 0x24
   13e64:	mov	r3, r9
   13e68:	str	ip, [sp]
   13e6c:	str	r0, [sp, #32]
   13e70:	bl	12568 <close@plt+0x16a4>
   13e74:	ldr	r2, [sp, #28]
   13e78:	cmp	r6, #0
   13e7c:	str	r2, [r7]
   13e80:	ldr	r0, [sp, #32]
   13e84:	strne	fp, [r6]
   13e88:	add	sp, sp, #44	; 0x2c
   13e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e90:	andeq	r7, r2, r4, lsl #5
   13e94:	mov	r3, r2
   13e98:	mov	r2, #0
   13e9c:	b	13dbc <close@plt+0x2ef8>
   13ea0:	push	{r4, r5, r6, r7, r8, lr}
   13ea4:	ldr	r6, [pc, #116]	; 13f20 <close@plt+0x305c>
   13ea8:	ldr	r3, [r6, #4]
   13eac:	ldr	r7, [r6]
   13eb0:	cmp	r3, #1
   13eb4:	movgt	r5, r7
   13eb8:	movgt	r4, #1
   13ebc:	ble	13edc <close@plt+0x3018>
   13ec0:	ldr	r0, [r5, #12]
   13ec4:	bl	15218 <close@plt+0x4354>
   13ec8:	ldr	r3, [r6, #4]
   13ecc:	add	r4, r4, #1
   13ed0:	cmp	r3, r4
   13ed4:	add	r5, r5, #8
   13ed8:	bgt	13ec0 <close@plt+0x2ffc>
   13edc:	ldr	r0, [r7, #4]
   13ee0:	ldr	r4, [pc, #60]	; 13f24 <close@plt+0x3060>
   13ee4:	cmp	r0, r4
   13ee8:	beq	13efc <close@plt+0x3038>
   13eec:	bl	15218 <close@plt+0x4354>
   13ef0:	mov	r3, #256	; 0x100
   13ef4:	str	r4, [r6, #12]
   13ef8:	str	r3, [r6, #8]
   13efc:	ldr	r4, [pc, #36]	; 13f28 <close@plt+0x3064>
   13f00:	cmp	r7, r4
   13f04:	beq	13f14 <close@plt+0x3050>
   13f08:	mov	r0, r7
   13f0c:	bl	15218 <close@plt+0x4354>
   13f10:	str	r4, [r6]
   13f14:	mov	r3, #1
   13f18:	str	r3, [r6, #4]
   13f1c:	pop	{r4, r5, r6, r7, r8, pc}
   13f20:	strdeq	r7, [r2], -r4
   13f24:	andeq	r7, r2, r4, lsl #3
   13f28:	strdeq	r7, [r2], -ip
   13f2c:	ldr	r3, [pc, #4]	; 13f38 <close@plt+0x3074>
   13f30:	mvn	r2, #0
   13f34:	b	13a7c <close@plt+0x2bb8>
   13f38:	andeq	r7, r2, r4, lsl #5
   13f3c:	ldr	r3, [pc]	; 13f44 <close@plt+0x3080>
   13f40:	b	13a7c <close@plt+0x2bb8>
   13f44:	andeq	r7, r2, r4, lsl #5
   13f48:	mov	r1, r0
   13f4c:	ldr	r3, [pc, #8]	; 13f5c <close@plt+0x3098>
   13f50:	mvn	r2, #0
   13f54:	mov	r0, #0
   13f58:	b	13a7c <close@plt+0x2bb8>
   13f5c:	andeq	r7, r2, r4, lsl #5
   13f60:	mov	r2, r1
   13f64:	ldr	r3, [pc, #8]	; 13f74 <close@plt+0x30b0>
   13f68:	mov	r1, r0
   13f6c:	mov	r0, #0
   13f70:	b	13a7c <close@plt+0x2bb8>
   13f74:	andeq	r7, r2, r4, lsl #5
   13f78:	push	{r4, r5, lr}
   13f7c:	sub	sp, sp, #52	; 0x34
   13f80:	mov	r5, r2
   13f84:	mov	r4, r0
   13f88:	mov	r0, sp
   13f8c:	bl	12418 <close@plt+0x1554>
   13f90:	mov	r3, sp
   13f94:	mov	r1, r5
   13f98:	mov	r0, r4
   13f9c:	mvn	r2, #0
   13fa0:	bl	13a7c <close@plt+0x2bb8>
   13fa4:	add	sp, sp, #52	; 0x34
   13fa8:	pop	{r4, r5, pc}
   13fac:	push	{r4, r5, r6, lr}
   13fb0:	sub	sp, sp, #48	; 0x30
   13fb4:	mov	r5, r2
   13fb8:	mov	r6, r3
   13fbc:	mov	r4, r0
   13fc0:	mov	r0, sp
   13fc4:	bl	12418 <close@plt+0x1554>
   13fc8:	mov	r3, sp
   13fcc:	mov	r2, r6
   13fd0:	mov	r1, r5
   13fd4:	mov	r0, r4
   13fd8:	bl	13a7c <close@plt+0x2bb8>
   13fdc:	add	sp, sp, #48	; 0x30
   13fe0:	pop	{r4, r5, r6, pc}
   13fe4:	mov	r2, r1
   13fe8:	mov	r1, r0
   13fec:	mov	r0, #0
   13ff0:	b	13f78 <close@plt+0x30b4>
   13ff4:	mov	r3, r2
   13ff8:	mov	r2, r1
   13ffc:	mov	r1, r0
   14000:	mov	r0, #0
   14004:	b	13fac <close@plt+0x30e8>
   14008:	push	{r4, r5, r6, r7, r8, lr}
   1400c:	mov	r7, r0
   14010:	ldr	lr, [pc, #100]	; 1407c <close@plt+0x31b8>
   14014:	mov	r8, r1
   14018:	mov	r4, r2
   1401c:	ldm	lr!, {r0, r1, r2, r3}
   14020:	sub	sp, sp, #48	; 0x30
   14024:	mov	ip, sp
   14028:	lsr	r5, r4, #5
   1402c:	stmia	ip!, {r0, r1, r2, r3}
   14030:	add	r6, sp, #8
   14034:	ldm	lr!, {r0, r1, r2, r3}
   14038:	and	r4, r4, #31
   1403c:	stmia	ip!, {r0, r1, r2, r3}
   14040:	ldm	lr, {r0, r1, r2, r3}
   14044:	stm	ip, {r0, r1, r2, r3}
   14048:	mov	r2, r8
   1404c:	ldr	lr, [r6, r5, lsl #2]
   14050:	mov	r1, r7
   14054:	mov	r3, sp
   14058:	lsr	ip, lr, r4
   1405c:	eor	ip, ip, #1
   14060:	and	ip, ip, #1
   14064:	mov	r0, #0
   14068:	eor	r4, lr, ip, lsl r4
   1406c:	str	r4, [r6, r5, lsl #2]
   14070:	bl	13a7c <close@plt+0x2bb8>
   14074:	add	sp, sp, #48	; 0x30
   14078:	pop	{r4, r5, r6, r7, r8, pc}
   1407c:	andeq	r7, r2, r4, lsl #5
   14080:	mov	r2, r1
   14084:	mvn	r1, #0
   14088:	b	14008 <close@plt+0x3144>
   1408c:	mov	r2, #58	; 0x3a
   14090:	mvn	r1, #0
   14094:	b	14008 <close@plt+0x3144>
   14098:	mov	r2, #58	; 0x3a
   1409c:	b	14008 <close@plt+0x3144>
   140a0:	push	{r4, r5, r6, r7, lr}
   140a4:	sub	sp, sp, #100	; 0x64
   140a8:	mov	r6, r0
   140ac:	mov	r0, sp
   140b0:	mov	r7, r2
   140b4:	bl	12418 <close@plt+0x1554>
   140b8:	mov	ip, sp
   140bc:	add	lr, sp, #48	; 0x30
   140c0:	ldm	ip!, {r0, r1, r2, r3}
   140c4:	stmia	lr!, {r0, r1, r2, r3}
   140c8:	ldm	ip!, {r0, r1, r2, r3}
   140cc:	ldr	r5, [sp, #60]	; 0x3c
   140d0:	stmia	lr!, {r0, r1, r2, r3}
   140d4:	mvn	r4, r5
   140d8:	ldm	ip, {r0, r1, r2, r3}
   140dc:	and	ip, r4, #67108864	; 0x4000000
   140e0:	eor	ip, ip, r5
   140e4:	str	ip, [sp, #60]	; 0x3c
   140e8:	stm	lr, {r0, r1, r2, r3}
   140ec:	mov	r1, r7
   140f0:	mov	r0, r6
   140f4:	add	r3, sp, #48	; 0x30
   140f8:	mvn	r2, #0
   140fc:	bl	13a7c <close@plt+0x2bb8>
   14100:	add	sp, sp, #100	; 0x64
   14104:	pop	{r4, r5, r6, r7, pc}
   14108:	push	{r4, r5, r6, r7, r8, lr}
   1410c:	mov	r5, r1
   14110:	ldr	lr, [pc, #100]	; 1417c <close@plt+0x32b8>
   14114:	mov	r4, r2
   14118:	mov	r7, r0
   1411c:	mov	r8, r3
   14120:	ldm	lr!, {r0, r1, r2, r3}
   14124:	sub	sp, sp, #48	; 0x30
   14128:	mov	ip, sp
   1412c:	mov	r6, #10
   14130:	stmia	ip!, {r0, r1, r2, r3}
   14134:	cmp	r4, #0
   14138:	cmpne	r5, #0
   1413c:	ldm	lr!, {r0, r1, r2, r3}
   14140:	str	r6, [sp]
   14144:	stmia	ip!, {r0, r1, r2, r3}
   14148:	ldm	lr, {r0, r1, r2, r3}
   1414c:	stm	ip, {r0, r1, r2, r3}
   14150:	beq	14178 <close@plt+0x32b4>
   14154:	mov	r3, sp
   14158:	mov	r1, r8
   1415c:	mov	r0, r7
   14160:	ldr	r2, [sp, #72]	; 0x48
   14164:	str	r5, [sp, #40]	; 0x28
   14168:	str	r4, [sp, #44]	; 0x2c
   1416c:	bl	13a7c <close@plt+0x2bb8>
   14170:	add	sp, sp, #48	; 0x30
   14174:	pop	{r4, r5, r6, r7, r8, pc}
   14178:	bl	10eb8 <abort@plt>
   1417c:	andeq	r7, r2, r4, lsl #5
   14180:	push	{lr}		; (str lr, [sp, #-4]!)
   14184:	sub	sp, sp, #12
   14188:	mvn	ip, #0
   1418c:	str	ip, [sp]
   14190:	bl	14108 <close@plt+0x3244>
   14194:	add	sp, sp, #12
   14198:	pop	{pc}		; (ldr pc, [sp], #4)
   1419c:	push	{lr}		; (str lr, [sp, #-4]!)
   141a0:	sub	sp, sp, #12
   141a4:	mvn	ip, #0
   141a8:	mov	r3, r2
   141ac:	str	ip, [sp]
   141b0:	mov	r2, r1
   141b4:	mov	r1, r0
   141b8:	mov	r0, #0
   141bc:	bl	14108 <close@plt+0x3244>
   141c0:	add	sp, sp, #12
   141c4:	pop	{pc}		; (ldr pc, [sp], #4)
   141c8:	push	{lr}		; (str lr, [sp, #-4]!)
   141cc:	sub	sp, sp, #12
   141d0:	str	r3, [sp]
   141d4:	mov	r3, r2
   141d8:	mov	r2, r1
   141dc:	mov	r1, r0
   141e0:	mov	r0, #0
   141e4:	bl	14108 <close@plt+0x3244>
   141e8:	add	sp, sp, #12
   141ec:	pop	{pc}		; (ldr pc, [sp], #4)
   141f0:	ldr	r3, [pc]	; 141f8 <close@plt+0x3334>
   141f4:	b	13a7c <close@plt+0x2bb8>
   141f8:	andeq	r7, r2, r4, lsl #2
   141fc:	mov	r2, r1
   14200:	ldr	r3, [pc, #8]	; 14210 <close@plt+0x334c>
   14204:	mov	r1, r0
   14208:	mov	r0, #0
   1420c:	b	13a7c <close@plt+0x2bb8>
   14210:	andeq	r7, r2, r4, lsl #2
   14214:	ldr	r3, [pc, #4]	; 14220 <close@plt+0x335c>
   14218:	mvn	r2, #0
   1421c:	b	13a7c <close@plt+0x2bb8>
   14220:	andeq	r7, r2, r4, lsl #2
   14224:	mov	r1, r0
   14228:	ldr	r3, [pc, #8]	; 14238 <close@plt+0x3374>
   1422c:	mvn	r2, #0
   14230:	mov	r0, #0
   14234:	b	13a7c <close@plt+0x2bb8>
   14238:	andeq	r7, r2, r4, lsl #2
   1423c:	push	{r4, r5, r6, lr}
   14240:	mov	r5, r1
   14244:	mov	r1, #0
   14248:	mov	r4, r2
   1424c:	bl	10e70 <setlocale@plt>
   14250:	subs	r6, r0, #0
   14254:	beq	142b0 <close@plt+0x33ec>
   14258:	bl	10dec <strlen@plt>
   1425c:	cmp	r4, r0
   14260:	bhi	14298 <close@plt+0x33d4>
   14264:	cmp	r4, #0
   14268:	bne	14274 <close@plt+0x33b0>
   1426c:	mov	r0, #34	; 0x22
   14270:	pop	{r4, r5, r6, pc}
   14274:	sub	r4, r4, #1
   14278:	mov	r1, r6
   1427c:	mov	r2, r4
   14280:	mov	r0, r5
   14284:	bl	10cd8 <memcpy@plt>
   14288:	mov	r3, #0
   1428c:	strb	r3, [r5, r4]
   14290:	mov	r0, #34	; 0x22
   14294:	pop	{r4, r5, r6, pc}
   14298:	add	r2, r0, #1
   1429c:	mov	r1, r6
   142a0:	mov	r0, r5
   142a4:	bl	10cd8 <memcpy@plt>
   142a8:	mov	r0, #0
   142ac:	pop	{r4, r5, r6, pc}
   142b0:	cmp	r4, #0
   142b4:	beq	142c4 <close@plt+0x3400>
   142b8:	strb	r6, [r5]
   142bc:	mov	r0, #22
   142c0:	pop	{r4, r5, r6, pc}
   142c4:	mov	r0, #22
   142c8:	pop	{r4, r5, r6, pc}
   142cc:	mov	r1, #0
   142d0:	b	10e70 <setlocale@plt>
   142d4:	mov	r2, #3
   142d8:	mov	r1, #0
   142dc:	b	15044 <close@plt+0x4180>
   142e0:	push	{r4, r5, r6, lr}
   142e4:	sub	sp, sp, #32
   142e8:	cmp	r1, #0
   142ec:	mov	r4, r0
   142f0:	ldr	r5, [sp, #48]	; 0x30
   142f4:	ldr	r6, [sp, #52]	; 0x34
   142f8:	beq	14610 <close@plt+0x374c>
   142fc:	stm	sp, {r2, r3}
   14300:	mov	r3, r1
   14304:	ldr	r2, [pc, #808]	; 14634 <close@plt+0x3770>
   14308:	mov	r1, #1
   1430c:	bl	10e34 <__fprintf_chk@plt>
   14310:	mov	r2, #5
   14314:	ldr	r1, [pc, #796]	; 14638 <close@plt+0x3774>
   14318:	mov	r0, #0
   1431c:	bl	10d14 <dcgettext@plt>
   14320:	ldr	r3, [pc, #788]	; 1463c <close@plt+0x3778>
   14324:	ldr	r2, [pc, #788]	; 14640 <close@plt+0x377c>
   14328:	str	r3, [sp]
   1432c:	mov	r1, #1
   14330:	mov	r3, r0
   14334:	mov	r0, r4
   14338:	bl	10e34 <__fprintf_chk@plt>
   1433c:	mov	r1, r4
   14340:	mov	r0, #10
   14344:	bl	10d08 <fputc_unlocked@plt>
   14348:	mov	r2, #5
   1434c:	ldr	r1, [pc, #752]	; 14644 <close@plt+0x3780>
   14350:	mov	r0, #0
   14354:	bl	10d14 <dcgettext@plt>
   14358:	mov	r1, #1
   1435c:	ldr	r3, [pc, #740]	; 14648 <close@plt+0x3784>
   14360:	mov	r2, r0
   14364:	mov	r0, r4
   14368:	bl	10e34 <__fprintf_chk@plt>
   1436c:	mov	r1, r4
   14370:	mov	r0, #10
   14374:	bl	10d08 <fputc_unlocked@plt>
   14378:	cmp	r6, #9
   1437c:	ldrls	pc, [pc, r6, lsl #2]
   14380:	b	14628 <close@plt+0x3764>
   14384:	andeq	r4, r1, r8, lsl #8
   14388:	andeq	r4, r1, r0, lsl r4
   1438c:	andeq	r4, r1, ip, lsr r4
   14390:	andeq	r4, r1, r0, ror r4
   14394:	andeq	r4, r1, ip, lsr #9
   14398:	andeq	r4, r1, r8, ror #9
   1439c:	andeq	r4, r1, r4, lsr #10
   143a0:	andeq	r4, r1, r8, ror #10
   143a4:			; <UNDEFINED> instruction: 0x000145b8
   143a8:	andeq	r4, r1, ip, lsr #7
   143ac:	ldr	r1, [pc, #664]	; 1464c <close@plt+0x3788>
   143b0:	mov	r2, #5
   143b4:	mov	r0, #0
   143b8:	bl	10d14 <dcgettext@plt>
   143bc:	ldr	ip, [r5, #32]
   143c0:	ldr	r1, [r5, #28]
   143c4:	ldr	r2, [r5, #24]
   143c8:	ldr	r3, [r5]
   143cc:	ldr	r6, [r5, #20]
   143d0:	str	ip, [sp, #28]
   143d4:	ldr	lr, [r5, #16]
   143d8:	str	r1, [sp, #24]
   143dc:	ldr	ip, [r5, #12]
   143e0:	str	r2, [sp, #20]
   143e4:	ldr	r1, [r5, #8]
   143e8:	ldr	r2, [r5, #4]
   143ec:	str	r6, [sp, #16]
   143f0:	stmib	sp, {r1, ip, lr}
   143f4:	mov	r1, #1
   143f8:	str	r2, [sp]
   143fc:	mov	r2, r0
   14400:	mov	r0, r4
   14404:	bl	10e34 <__fprintf_chk@plt>
   14408:	add	sp, sp, #32
   1440c:	pop	{r4, r5, r6, pc}
   14410:	mov	r2, #5
   14414:	ldr	r1, [pc, #564]	; 14650 <close@plt+0x378c>
   14418:	mov	r0, #0
   1441c:	bl	10d14 <dcgettext@plt>
   14420:	ldr	r3, [r5]
   14424:	mov	r1, #1
   14428:	mov	r2, r0
   1442c:	mov	r0, r4
   14430:	add	sp, sp, #32
   14434:	pop	{r4, r5, r6, lr}
   14438:	b	10e34 <__fprintf_chk@plt>
   1443c:	mov	r2, #5
   14440:	ldr	r1, [pc, #524]	; 14654 <close@plt+0x3790>
   14444:	mov	r0, #0
   14448:	bl	10d14 <dcgettext@plt>
   1444c:	ldr	r2, [r5, #4]
   14450:	ldr	r3, [r5]
   14454:	mov	r1, #1
   14458:	str	r2, [sp, #48]	; 0x30
   1445c:	mov	r2, r0
   14460:	mov	r0, r4
   14464:	add	sp, sp, #32
   14468:	pop	{r4, r5, r6, lr}
   1446c:	b	10e34 <__fprintf_chk@plt>
   14470:	mov	r2, #5
   14474:	ldr	r1, [pc, #476]	; 14658 <close@plt+0x3794>
   14478:	mov	r0, #0
   1447c:	bl	10d14 <dcgettext@plt>
   14480:	ldr	r1, [r5, #8]
   14484:	ldr	r2, [r5, #4]
   14488:	ldr	r3, [r5]
   1448c:	str	r1, [sp, #52]	; 0x34
   14490:	str	r2, [sp, #48]	; 0x30
   14494:	mov	r1, #1
   14498:	mov	r2, r0
   1449c:	mov	r0, r4
   144a0:	add	sp, sp, #32
   144a4:	pop	{r4, r5, r6, lr}
   144a8:	b	10e34 <__fprintf_chk@plt>
   144ac:	mov	r2, #5
   144b0:	ldr	r1, [pc, #420]	; 1465c <close@plt+0x3798>
   144b4:	mov	r0, #0
   144b8:	bl	10d14 <dcgettext@plt>
   144bc:	ldr	r1, [r5, #8]
   144c0:	ldr	ip, [r5, #12]
   144c4:	ldr	r2, [r5, #4]
   144c8:	ldr	r3, [r5]
   144cc:	stmib	sp, {r1, ip}
   144d0:	str	r2, [sp]
   144d4:	mov	r1, #1
   144d8:	mov	r2, r0
   144dc:	mov	r0, r4
   144e0:	bl	10e34 <__fprintf_chk@plt>
   144e4:	b	14408 <close@plt+0x3544>
   144e8:	mov	r2, #5
   144ec:	ldr	r1, [pc, #364]	; 14660 <close@plt+0x379c>
   144f0:	mov	r0, #0
   144f4:	bl	10d14 <dcgettext@plt>
   144f8:	add	r1, r5, #8
   144fc:	ldr	r2, [r5, #4]
   14500:	ldm	r1, {r1, ip, lr}
   14504:	ldr	r3, [r5]
   14508:	str	r2, [sp]
   1450c:	stmib	sp, {r1, ip, lr}
   14510:	mov	r1, #1
   14514:	mov	r2, r0
   14518:	mov	r0, r4
   1451c:	bl	10e34 <__fprintf_chk@plt>
   14520:	b	14408 <close@plt+0x3544>
   14524:	mov	r2, #5
   14528:	ldr	r1, [pc, #308]	; 14664 <close@plt+0x37a0>
   1452c:	mov	r0, #0
   14530:	bl	10d14 <dcgettext@plt>
   14534:	add	r1, r5, #8
   14538:	ldr	r2, [r5, #4]
   1453c:	ldm	r1, {r1, ip, lr}
   14540:	ldr	r6, [r5, #20]
   14544:	ldr	r3, [r5]
   14548:	stmib	sp, {r1, ip, lr}
   1454c:	mov	r1, #1
   14550:	str	r2, [sp]
   14554:	str	r6, [sp, #16]
   14558:	mov	r2, r0
   1455c:	mov	r0, r4
   14560:	bl	10e34 <__fprintf_chk@plt>
   14564:	b	14408 <close@plt+0x3544>
   14568:	mov	r2, #5
   1456c:	ldr	r1, [pc, #244]	; 14668 <close@plt+0x37a4>
   14570:	mov	r0, #0
   14574:	bl	10d14 <dcgettext@plt>
   14578:	ldr	r2, [r5, #24]
   1457c:	ldr	r3, [r5]
   14580:	ldr	r6, [r5, #20]
   14584:	ldr	lr, [r5, #16]
   14588:	ldr	ip, [r5, #12]
   1458c:	str	r2, [sp, #20]
   14590:	ldr	r1, [r5, #8]
   14594:	ldr	r2, [r5, #4]
   14598:	str	r6, [sp, #16]
   1459c:	stmib	sp, {r1, ip, lr}
   145a0:	mov	r1, #1
   145a4:	str	r2, [sp]
   145a8:	mov	r2, r0
   145ac:	mov	r0, r4
   145b0:	bl	10e34 <__fprintf_chk@plt>
   145b4:	b	14408 <close@plt+0x3544>
   145b8:	mov	r2, #5
   145bc:	ldr	r1, [pc, #168]	; 1466c <close@plt+0x37a8>
   145c0:	mov	r0, #0
   145c4:	bl	10d14 <dcgettext@plt>
   145c8:	ldr	r1, [r5, #28]
   145cc:	ldr	r2, [r5, #24]
   145d0:	ldr	r3, [r5]
   145d4:	ldr	r6, [r5, #20]
   145d8:	ldr	lr, [r5, #16]
   145dc:	str	r1, [sp, #24]
   145e0:	ldr	ip, [r5, #12]
   145e4:	str	r2, [sp, #20]
   145e8:	ldr	r1, [r5, #8]
   145ec:	ldr	r2, [r5, #4]
   145f0:	str	r6, [sp, #16]
   145f4:	stmib	sp, {r1, ip, lr}
   145f8:	mov	r1, #1
   145fc:	str	r2, [sp]
   14600:	mov	r2, r0
   14604:	mov	r0, r4
   14608:	bl	10e34 <__fprintf_chk@plt>
   1460c:	b	14408 <close@plt+0x3544>
   14610:	str	r3, [sp]
   14614:	mov	r1, #1
   14618:	mov	r3, r2
   1461c:	ldr	r2, [pc, #76]	; 14670 <close@plt+0x37ac>
   14620:	bl	10e34 <__fprintf_chk@plt>
   14624:	b	14310 <close@plt+0x344c>
   14628:	mov	r2, #5
   1462c:	ldr	r1, [pc, #64]	; 14674 <close@plt+0x37b0>
   14630:	b	143b4 <close@plt+0x34f0>
   14634:	andeq	r6, r1, ip, asr #9
   14638:	andeq	r6, r1, r0, ror #9
   1463c:	andeq	r0, r0, r6, ror #15
   14640:			; <UNDEFINED> instruction: 0x000167b8
   14644:	andeq	r6, r1, r4, ror #9
   14648:	muleq	r1, r0, r5
   1464c:	andeq	r6, r1, r0, asr #13
   14650:			; <UNDEFINED> instruction: 0x000165b4
   14654:	andeq	r6, r1, r4, asr #11
   14658:	ldrdeq	r6, [r1], -ip
   1465c:	strdeq	r6, [r1], -r8
   14660:	andeq	r6, r1, r8, lsl r6
   14664:	andeq	r6, r1, ip, lsr r6
   14668:	andeq	r6, r1, r4, ror #12
   1466c:	muleq	r1, r0, r6
   14670:	ldrdeq	r6, [r1], -r8
   14674:	strdeq	r6, [r1], -r4
   14678:	push	{r4, r5, lr}
   1467c:	sub	sp, sp, #12
   14680:	ldr	r5, [sp, #24]
   14684:	ldr	ip, [r5]
   14688:	cmp	ip, #0
   1468c:	beq	146a8 <close@plt+0x37e4>
   14690:	mov	lr, r5
   14694:	mov	ip, #0
   14698:	ldr	r4, [lr, #4]!
   1469c:	add	ip, ip, #1
   146a0:	cmp	r4, #0
   146a4:	bne	14698 <close@plt+0x37d4>
   146a8:	stm	sp, {r5, ip}
   146ac:	bl	142e0 <close@plt+0x341c>
   146b0:	add	sp, sp, #12
   146b4:	pop	{r4, r5, pc}
   146b8:	push	{r4, r5, lr}
   146bc:	sub	sp, sp, #52	; 0x34
   146c0:	add	r5, sp, #4
   146c4:	ldr	r4, [sp, #64]	; 0x40
   146c8:	mov	ip, #0
   146cc:	sub	r4, r4, #4
   146d0:	ldr	lr, [r4, #4]!
   146d4:	cmp	lr, #0
   146d8:	str	lr, [r5, #4]!
   146dc:	beq	146ec <close@plt+0x3828>
   146e0:	add	ip, ip, #1
   146e4:	cmp	ip, #10
   146e8:	bne	146d0 <close@plt+0x380c>
   146ec:	add	lr, sp, #8
   146f0:	str	ip, [sp, #4]
   146f4:	str	lr, [sp]
   146f8:	bl	142e0 <close@plt+0x341c>
   146fc:	add	sp, sp, #52	; 0x34
   14700:	pop	{r4, r5, pc}
   14704:	push	{r3}		; (str r3, [sp, #-4]!)
   14708:	push	{r4, lr}
   1470c:	sub	sp, sp, #60	; 0x3c
   14710:	add	lr, sp, #56	; 0x38
   14714:	add	r3, sp, #72	; 0x48
   14718:	str	r3, [lr, #-44]!	; 0xffffffd4
   1471c:	add	r4, sp, #68	; 0x44
   14720:	mov	r3, #0
   14724:	ldr	ip, [r4, #4]!
   14728:	cmp	ip, #0
   1472c:	str	ip, [lr, #4]!
   14730:	beq	14740 <close@plt+0x387c>
   14734:	add	r3, r3, #1
   14738:	cmp	r3, #10
   1473c:	bne	14724 <close@plt+0x3860>
   14740:	add	ip, sp, #16
   14744:	str	r3, [sp, #4]
   14748:	str	ip, [sp]
   1474c:	ldr	r3, [sp, #68]	; 0x44
   14750:	bl	142e0 <close@plt+0x341c>
   14754:	add	sp, sp, #60	; 0x3c
   14758:	pop	{r4, lr}
   1475c:	add	sp, sp, #4
   14760:	bx	lr
   14764:	ldr	r3, [pc, #116]	; 147e0 <close@plt+0x391c>
   14768:	push	{r4, lr}
   1476c:	mov	r0, #10
   14770:	ldr	r1, [r3]
   14774:	bl	10d08 <fputc_unlocked@plt>
   14778:	mov	r2, #5
   1477c:	ldr	r1, [pc, #96]	; 147e4 <close@plt+0x3920>
   14780:	mov	r0, #0
   14784:	bl	10d14 <dcgettext@plt>
   14788:	ldr	r2, [pc, #88]	; 147e8 <close@plt+0x3924>
   1478c:	mov	r1, r0
   14790:	mov	r0, #1
   14794:	bl	10e1c <__printf_chk@plt>
   14798:	mov	r2, #5
   1479c:	ldr	r1, [pc, #72]	; 147ec <close@plt+0x3928>
   147a0:	mov	r0, #0
   147a4:	bl	10d14 <dcgettext@plt>
   147a8:	ldr	r3, [pc, #64]	; 147f0 <close@plt+0x392c>
   147ac:	ldr	r2, [pc, #64]	; 147f4 <close@plt+0x3930>
   147b0:	mov	r1, r0
   147b4:	mov	r0, #1
   147b8:	bl	10e1c <__printf_chk@plt>
   147bc:	mov	r2, #5
   147c0:	ldr	r1, [pc, #48]	; 147f8 <close@plt+0x3934>
   147c4:	mov	r0, #0
   147c8:	bl	10d14 <dcgettext@plt>
   147cc:	ldr	r2, [pc, #40]	; 147fc <close@plt+0x3938>
   147d0:	pop	{r4, lr}
   147d4:	mov	r1, r0
   147d8:	mov	r0, #1
   147dc:	b	10e1c <__printf_chk@plt>
   147e0:	andeq	r7, r2, r4, asr r1
   147e4:	andeq	r6, r1, r0, lsr r7
   147e8:	andeq	r6, r1, r4, asr #14
   147ec:	andeq	r6, r1, ip, asr r7
   147f0:	andeq	r6, r1, r0, lsl #2
   147f4:	andeq	r6, r1, r8, lsr #2
   147f8:	andeq	r6, r1, r0, ror r7
   147fc:	muleq	r1, r8, r7
   14800:	push	{r4, lr}
   14804:	bl	14f40 <close@plt+0x407c>
   14808:	cmp	r0, #0
   1480c:	popne	{r4, pc}
   14810:	bl	14d48 <close@plt+0x3e84>
   14814:	push	{r4, lr}
   14818:	bl	14f40 <close@plt+0x407c>
   1481c:	cmp	r0, #0
   14820:	popne	{r4, pc}
   14824:	bl	14d48 <close@plt+0x3e84>
   14828:	push	{r4, lr}
   1482c:	bl	14f40 <close@plt+0x407c>
   14830:	cmp	r0, #0
   14834:	popne	{r4, pc}
   14838:	bl	14d48 <close@plt+0x3e84>
   1483c:	push	{r4, r5, r6, lr}
   14840:	mov	r5, r0
   14844:	mov	r4, r1
   14848:	bl	14f6c <close@plt+0x40a8>
   1484c:	cmp	r0, #0
   14850:	popne	{r4, r5, r6, pc}
   14854:	adds	r4, r4, #0
   14858:	movne	r4, #1
   1485c:	cmp	r5, #0
   14860:	orreq	r4, r4, #1
   14864:	cmp	r4, #0
   14868:	popeq	{r4, r5, r6, pc}
   1486c:	bl	14d48 <close@plt+0x3e84>
   14870:	push	{r4, lr}
   14874:	cmp	r1, #0
   14878:	orreq	r1, r1, #1
   1487c:	bl	14f6c <close@plt+0x40a8>
   14880:	cmp	r0, #0
   14884:	popne	{r4, pc}
   14888:	bl	14d48 <close@plt+0x3e84>
   1488c:	push	{r4, r5, r6, lr}
   14890:	mov	r6, r0
   14894:	mov	r5, r1
   14898:	mov	r4, r2
   1489c:	bl	15460 <close@plt+0x459c>
   148a0:	cmp	r0, #0
   148a4:	popne	{r4, r5, r6, pc}
   148a8:	cmp	r6, #0
   148ac:	beq	148bc <close@plt+0x39f8>
   148b0:	cmp	r5, #0
   148b4:	cmpne	r4, #0
   148b8:	popeq	{r4, r5, r6, pc}
   148bc:	bl	14d48 <close@plt+0x3e84>
   148c0:	b	1488c <close@plt+0x39c8>
   148c4:	cmp	r2, #0
   148c8:	cmpne	r1, #0
   148cc:	moveq	r2, #1
   148d0:	moveq	r1, r2
   148d4:	push	{r4, lr}
   148d8:	bl	15460 <close@plt+0x459c>
   148dc:	cmp	r0, #0
   148e0:	popne	{r4, pc}
   148e4:	bl	14d48 <close@plt+0x3e84>
   148e8:	mov	r2, r1
   148ec:	mov	r1, r0
   148f0:	mov	r0, #0
   148f4:	b	1488c <close@plt+0x39c8>
   148f8:	mov	r2, r1
   148fc:	mov	r1, r0
   14900:	mov	r0, #0
   14904:	b	148c4 <close@plt+0x3a00>
   14908:	push	{r4, r5, r6, lr}
   1490c:	subs	r6, r0, #0
   14910:	sub	sp, sp, #8
   14914:	mov	r5, r1
   14918:	ldr	r4, [r1]
   1491c:	beq	14958 <close@plt+0x3a94>
   14920:	lsr	r1, r4, #1
   14924:	add	r3, r1, #1
   14928:	mvn	r3, r3
   1492c:	cmp	r4, r3
   14930:	bhi	14954 <close@plt+0x3a90>
   14934:	add	r4, r4, #1
   14938:	add	r4, r4, r1
   1493c:	mov	r0, r6
   14940:	mov	r1, r4
   14944:	bl	1488c <close@plt+0x39c8>
   14948:	str	r4, [r5]
   1494c:	add	sp, sp, #8
   14950:	pop	{r4, r5, r6, pc}
   14954:	bl	14d48 <close@plt+0x3e84>
   14958:	cmp	r4, #0
   1495c:	bne	1493c <close@plt+0x3a78>
   14960:	mov	r1, r2
   14964:	mov	r0, #64	; 0x40
   14968:	str	r2, [sp, #4]
   1496c:	bl	154ac <close@plt+0x45e8>
   14970:	ldr	r2, [sp, #4]
   14974:	cmp	r0, #0
   14978:	movne	r4, r0
   1497c:	addeq	r4, r0, #1
   14980:	b	1493c <close@plt+0x3a78>
   14984:	mov	r2, #1
   14988:	b	14908 <close@plt+0x3a44>
   1498c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14990:	sub	sp, sp, #12
   14994:	ldr	r6, [r1]
   14998:	mov	sl, r1
   1499c:	mov	r9, r0
   149a0:	asrs	r4, r6, #1
   149a4:	mov	r5, r2
   149a8:	mov	fp, r3
   149ac:	ldr	r7, [sp, #48]	; 0x30
   149b0:	bmi	14b1c <close@plt+0x3c58>
   149b4:	mvn	r3, #-2147483648	; 0x80000000
   149b8:	sub	r3, r3, r4
   149bc:	cmp	r6, r3
   149c0:	movle	r3, #0
   149c4:	movgt	r3, #1
   149c8:	mvn	r8, fp
   149cc:	cmp	r3, #0
   149d0:	addeq	r4, r4, r6
   149d4:	mvnne	r4, #-2147483648	; 0x80000000
   149d8:	lsr	r8, r8, #31
   149dc:	cmp	fp, r4
   149e0:	movge	r3, #0
   149e4:	andlt	r3, r8, #1
   149e8:	cmp	r3, #0
   149ec:	beq	14ad4 <close@plt+0x3c10>
   149f0:	cmp	r7, #0
   149f4:	blt	14ba4 <close@plt+0x3ce0>
   149f8:	bne	14b9c <close@plt+0x3cd8>
   149fc:	mov	r2, #64	; 0x40
   14a00:	mov	r1, r7
   14a04:	mov	r0, r2
   14a08:	str	r2, [sp, #4]
   14a0c:	bl	156b8 <close@plt+0x47f4>
   14a10:	ldr	r2, [sp, #4]
   14a14:	mov	r1, r7
   14a18:	mov	r4, r0
   14a1c:	mov	r0, r2
   14a20:	bl	158d8 <close@plt+0x4a14>
   14a24:	ldr	r2, [sp, #4]
   14a28:	sub	r1, r2, r1
   14a2c:	cmp	r9, #0
   14a30:	sub	r3, r4, r6
   14a34:	streq	r9, [sl]
   14a38:	cmp	r3, r5
   14a3c:	bge	14ac0 <close@plt+0x3bfc>
   14a40:	cmp	r5, #0
   14a44:	blt	14b30 <close@plt+0x3c6c>
   14a48:	cmp	r6, #0
   14a4c:	blt	14a6c <close@plt+0x3ba8>
   14a50:	mvn	r3, #-2147483648	; 0x80000000
   14a54:	sub	r3, r3, r5
   14a58:	cmp	r6, r3
   14a5c:	movle	r3, #0
   14a60:	movgt	r3, #1
   14a64:	cmp	r3, #0
   14a68:	bne	14c2c <close@plt+0x3d68>
   14a6c:	add	r5, r6, r5
   14a70:	cmp	fp, r5
   14a74:	movge	r8, #0
   14a78:	andlt	r8, r8, #1
   14a7c:	cmp	r8, #0
   14a80:	mov	r4, r5
   14a84:	bne	14c2c <close@plt+0x3d68>
   14a88:	cmp	r7, #0
   14a8c:	blt	14b44 <close@plt+0x3c80>
   14a90:	beq	14abc <close@plt+0x3bf8>
   14a94:	cmp	r5, #0
   14a98:	blt	14bec <close@plt+0x3d28>
   14a9c:	mov	r1, r7
   14aa0:	mvn	r0, #-2147483648	; 0x80000000
   14aa4:	bl	156b8 <close@plt+0x47f4>
   14aa8:	cmp	r5, r0
   14aac:	movle	r0, #0
   14ab0:	movgt	r0, #1
   14ab4:	cmp	r0, #0
   14ab8:	bne	14c2c <close@plt+0x3d68>
   14abc:	mul	r1, r5, r7
   14ac0:	mov	r0, r9
   14ac4:	bl	1483c <close@plt+0x3978>
   14ac8:	str	r4, [sl]
   14acc:	add	sp, sp, #12
   14ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ad4:	cmp	r7, #0
   14ad8:	blt	14b70 <close@plt+0x3cac>
   14adc:	beq	149fc <close@plt+0x3b38>
   14ae0:	cmp	r4, #0
   14ae4:	blt	14bac <close@plt+0x3ce8>
   14ae8:	mov	r1, r7
   14aec:	mvn	r0, #-2147483648	; 0x80000000
   14af0:	bl	156b8 <close@plt+0x47f4>
   14af4:	cmp	r0, r4
   14af8:	movge	r0, #0
   14afc:	movlt	r0, #1
   14b00:	cmp	r0, #0
   14b04:	mvnne	r2, #-2147483648	; 0x80000000
   14b08:	bne	14a00 <close@plt+0x3b3c>
   14b0c:	mul	r1, r7, r4
   14b10:	cmp	r1, #63	; 0x3f
   14b14:	bgt	14a2c <close@plt+0x3b68>
   14b18:	b	149fc <close@plt+0x3b38>
   14b1c:	rsb	r3, r4, #-2147483648	; 0x80000000
   14b20:	cmp	r6, r3
   14b24:	movge	r3, #0
   14b28:	movlt	r3, #1
   14b2c:	b	149c8 <close@plt+0x3b04>
   14b30:	rsb	r3, r5, #-2147483648	; 0x80000000
   14b34:	cmp	r6, r3
   14b38:	movge	r3, #0
   14b3c:	movlt	r3, #1
   14b40:	b	14a64 <close@plt+0x3ba0>
   14b44:	cmp	r5, #0
   14b48:	blt	14bd0 <close@plt+0x3d0c>
   14b4c:	cmn	r7, #1
   14b50:	beq	14abc <close@plt+0x3bf8>
   14b54:	mov	r1, r7
   14b58:	mov	r0, #-2147483648	; 0x80000000
   14b5c:	bl	156b8 <close@plt+0x47f4>
   14b60:	cmp	r5, r0
   14b64:	movle	r0, #0
   14b68:	movgt	r0, #1
   14b6c:	b	14ab4 <close@plt+0x3bf0>
   14b70:	cmp	r4, #0
   14b74:	blt	14c10 <close@plt+0x3d4c>
   14b78:	cmn	r7, #1
   14b7c:	beq	14b0c <close@plt+0x3c48>
   14b80:	mov	r1, r7
   14b84:	mov	r0, #-2147483648	; 0x80000000
   14b88:	bl	156b8 <close@plt+0x47f4>
   14b8c:	cmp	r0, r4
   14b90:	movge	r0, #0
   14b94:	movlt	r0, #1
   14b98:	b	14b00 <close@plt+0x3c3c>
   14b9c:	mov	r4, fp
   14ba0:	b	14ae8 <close@plt+0x3c24>
   14ba4:	mov	r4, fp
   14ba8:	b	14b78 <close@plt+0x3cb4>
   14bac:	cmn	r4, #1
   14bb0:	beq	14b0c <close@plt+0x3c48>
   14bb4:	mov	r1, r4
   14bb8:	mov	r0, #-2147483648	; 0x80000000
   14bbc:	bl	156b8 <close@plt+0x47f4>
   14bc0:	cmp	r7, r0
   14bc4:	movle	r0, #0
   14bc8:	movgt	r0, #1
   14bcc:	b	14b00 <close@plt+0x3c3c>
   14bd0:	mov	r1, r7
   14bd4:	mvn	r0, #-2147483648	; 0x80000000
   14bd8:	bl	156b8 <close@plt+0x47f4>
   14bdc:	cmp	r5, r0
   14be0:	movge	r0, #0
   14be4:	movlt	r0, #1
   14be8:	b	14ab4 <close@plt+0x3bf0>
   14bec:	cmn	r5, #1
   14bf0:	beq	14abc <close@plt+0x3bf8>
   14bf4:	mov	r1, r5
   14bf8:	mov	r0, #-2147483648	; 0x80000000
   14bfc:	bl	156b8 <close@plt+0x47f4>
   14c00:	cmp	r7, r0
   14c04:	movle	r0, #0
   14c08:	movgt	r0, #1
   14c0c:	b	14ab4 <close@plt+0x3bf0>
   14c10:	mov	r1, r7
   14c14:	mvn	r0, #-2147483648	; 0x80000000
   14c18:	bl	156b8 <close@plt+0x47f4>
   14c1c:	cmp	r0, r4
   14c20:	movle	r0, #0
   14c24:	movgt	r0, #1
   14c28:	b	14b00 <close@plt+0x3c3c>
   14c2c:	bl	14d48 <close@plt+0x3e84>
   14c30:	push	{r4, lr}
   14c34:	mov	r1, #1
   14c38:	bl	14ef8 <close@plt+0x4034>
   14c3c:	cmp	r0, #0
   14c40:	popne	{r4, pc}
   14c44:	bl	14d48 <close@plt+0x3e84>
   14c48:	push	{r4, lr}
   14c4c:	mov	r1, #1
   14c50:	bl	14ef8 <close@plt+0x4034>
   14c54:	cmp	r0, #0
   14c58:	popne	{r4, pc}
   14c5c:	bl	14d48 <close@plt+0x3e84>
   14c60:	push	{r4, lr}
   14c64:	bl	14ef8 <close@plt+0x4034>
   14c68:	cmp	r0, #0
   14c6c:	popne	{r4, pc}
   14c70:	bl	14d48 <close@plt+0x3e84>
   14c74:	push	{r4, lr}
   14c78:	bl	14ef8 <close@plt+0x4034>
   14c7c:	cmp	r0, #0
   14c80:	popne	{r4, pc}
   14c84:	bl	14d48 <close@plt+0x3e84>
   14c88:	push	{r4, r5, r6, lr}
   14c8c:	mov	r6, r0
   14c90:	mov	r0, r1
   14c94:	mov	r4, r1
   14c98:	bl	14f40 <close@plt+0x407c>
   14c9c:	subs	r5, r0, #0
   14ca0:	beq	14cb8 <close@plt+0x3df4>
   14ca4:	mov	r2, r4
   14ca8:	mov	r1, r6
   14cac:	bl	10cd8 <memcpy@plt>
   14cb0:	mov	r0, r5
   14cb4:	pop	{r4, r5, r6, pc}
   14cb8:	bl	14d48 <close@plt+0x3e84>
   14cbc:	push	{r4, r5, r6, lr}
   14cc0:	mov	r6, r0
   14cc4:	mov	r0, r1
   14cc8:	mov	r4, r1
   14ccc:	bl	14f40 <close@plt+0x407c>
   14cd0:	subs	r5, r0, #0
   14cd4:	beq	14cec <close@plt+0x3e28>
   14cd8:	mov	r2, r4
   14cdc:	mov	r1, r6
   14ce0:	bl	10cd8 <memcpy@plt>
   14ce4:	mov	r0, r5
   14ce8:	pop	{r4, r5, r6, pc}
   14cec:	bl	14d48 <close@plt+0x3e84>
   14cf0:	push	{r4, r5, r6, lr}
   14cf4:	mov	r6, r0
   14cf8:	add	r0, r1, #1
   14cfc:	mov	r4, r1
   14d00:	bl	14f40 <close@plt+0x407c>
   14d04:	subs	r5, r0, #0
   14d08:	beq	14d28 <close@plt+0x3e64>
   14d0c:	mov	r3, #0
   14d10:	mov	r1, r6
   14d14:	strb	r3, [r5, r4]
   14d18:	mov	r2, r4
   14d1c:	bl	10cd8 <memcpy@plt>
   14d20:	mov	r0, r5
   14d24:	pop	{r4, r5, r6, pc}
   14d28:	bl	14d48 <close@plt+0x3e84>
   14d2c:	push	{r4, lr}
   14d30:	mov	r4, r0
   14d34:	bl	10dec <strlen@plt>
   14d38:	add	r1, r0, #1
   14d3c:	mov	r0, r4
   14d40:	pop	{r4, lr}
   14d44:	b	14c88 <close@plt+0x3dc4>
   14d48:	ldr	r3, [pc, #44]	; 14d7c <close@plt+0x3eb8>
   14d4c:	push	{r4, lr}
   14d50:	mov	r2, #5
   14d54:	ldr	r1, [pc, #36]	; 14d80 <close@plt+0x3ebc>
   14d58:	mov	r0, #0
   14d5c:	ldr	r4, [r3]
   14d60:	bl	10d14 <dcgettext@plt>
   14d64:	ldr	r2, [pc, #24]	; 14d84 <close@plt+0x3ec0>
   14d68:	mov	r1, #0
   14d6c:	mov	r3, r0
   14d70:	mov	r0, r4
   14d74:	bl	10d80 <error@plt>
   14d78:	bl	10eb8 <abort@plt>
   14d7c:	strdeq	r7, [r2], -r0
   14d80:	andeq	r6, r1, r8, ror #15
   14d84:	andeq	r6, r1, r0, lsr #7
   14d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d8c:	mov	r4, r0
   14d90:	mov	r6, r1
   14d94:	mov	r9, r2
   14d98:	ldr	r1, [pc, #164]	; 14e44 <close@plt+0x3f80>
   14d9c:	mov	r2, #5
   14da0:	mov	r0, #0
   14da4:	mov	r7, r3
   14da8:	ldr	r8, [sp, #32]
   14dac:	bl	10d14 <dcgettext@plt>
   14db0:	mov	r1, r4
   14db4:	mov	r2, r0
   14db8:	mov	r0, #0
   14dbc:	bl	10d80 <error@plt>
   14dc0:	mov	r2, #5
   14dc4:	ldr	r1, [pc, #124]	; 14e48 <close@plt+0x3f84>
   14dc8:	mov	r0, #0
   14dcc:	bl	10d14 <dcgettext@plt>
   14dd0:	mov	r1, #0
   14dd4:	mov	r2, r0
   14dd8:	mov	r0, r1
   14ddc:	bl	10d80 <error@plt>
   14de0:	ldr	r3, [pc, #100]	; 14e4c <close@plt+0x3f88>
   14de4:	mov	r2, #5
   14de8:	ldr	r1, [pc, #96]	; 14e50 <close@plt+0x3f8c>
   14dec:	mov	r0, #0
   14df0:	ldr	r4, [r3]
   14df4:	bl	10d14 <dcgettext@plt>
   14df8:	mov	r3, r9
   14dfc:	mov	r2, r6
   14e00:	mov	r1, #8
   14e04:	mov	r5, r0
   14e08:	mov	r0, #0
   14e0c:	bl	13fac <close@plt+0x30e8>
   14e10:	mov	r3, r8
   14e14:	mov	r2, r7
   14e18:	mov	r1, #8
   14e1c:	mov	r6, r0
   14e20:	mov	r0, #1
   14e24:	bl	13fac <close@plt+0x30e8>
   14e28:	mov	r3, r6
   14e2c:	mov	r2, r5
   14e30:	mov	r1, #0
   14e34:	str	r0, [sp, #32]
   14e38:	mov	r0, r4
   14e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e40:	b	10d80 <error@plt>
   14e44:	strdeq	r6, [r1], -ip
   14e48:	andeq	r6, r1, r8, lsl r8
   14e4c:	strdeq	r7, [r2], -r0
   14e50:	andeq	r6, r1, r4, asr #16
   14e54:	push	{r4, r5, r6, r7, r8, lr}
   14e58:	sub	sp, sp, #8
   14e5c:	mov	r6, r1
   14e60:	mov	r7, r2
   14e64:	mov	r8, r3
   14e68:	mov	r5, r0
   14e6c:	bl	1538c <close@plt+0x44c8>
   14e70:	mov	r4, r0
   14e74:	bl	10df8 <__errno_location@plt>
   14e78:	ldr	r0, [r0]
   14e7c:	cmp	r0, #0
   14e80:	beq	14e98 <close@plt+0x3fd4>
   14e84:	str	r8, [sp]
   14e88:	mov	r3, r7
   14e8c:	mov	r2, r6
   14e90:	mov	r1, r5
   14e94:	bl	14d88 <close@plt+0x3ec4>
   14e98:	mov	r0, r4
   14e9c:	add	sp, sp, #8
   14ea0:	pop	{r4, r5, r6, r7, r8, pc}
   14ea4:	push	{r4, r5, r6, r7, r8, lr}
   14ea8:	sub	sp, sp, #8
   14eac:	mov	r7, r1
   14eb0:	mov	r8, r2
   14eb4:	mov	r4, r3
   14eb8:	mov	r6, r0
   14ebc:	bl	15408 <close@plt+0x4544>
   14ec0:	mov	r5, r0
   14ec4:	bl	10df8 <__errno_location@plt>
   14ec8:	ldr	r0, [r0]
   14ecc:	cmp	r0, #0
   14ed0:	beq	14eec <close@plt+0x4028>
   14ed4:	sub	r4, r4, #1
   14ed8:	str	r4, [sp]
   14edc:	mov	r3, r8
   14ee0:	sub	r2, r7, #1
   14ee4:	mov	r1, r6
   14ee8:	bl	14d88 <close@plt+0x3ec4>
   14eec:	mov	r0, r5
   14ef0:	add	sp, sp, #8
   14ef4:	pop	{r4, r5, r6, r7, r8, pc}
   14ef8:	cmp	r1, #0
   14efc:	cmpne	r0, #0
   14f00:	moveq	r1, #1
   14f04:	moveq	r0, r1
   14f08:	umull	r2, r3, r0, r1
   14f0c:	adds	r3, r3, #0
   14f10:	movne	r3, #1
   14f14:	cmp	r2, #0
   14f18:	blt	14f28 <close@plt+0x4064>
   14f1c:	cmp	r3, #0
   14f20:	bne	14f28 <close@plt+0x4064>
   14f24:	b	10c78 <calloc@plt>
   14f28:	push	{r4, lr}
   14f2c:	bl	10df8 <__errno_location@plt>
   14f30:	mov	r3, #12
   14f34:	str	r3, [r0]
   14f38:	mov	r0, #0
   14f3c:	pop	{r4, pc}
   14f40:	cmp	r0, #0
   14f44:	moveq	r0, #1
   14f48:	cmp	r0, #0
   14f4c:	blt	14f54 <close@plt+0x4090>
   14f50:	b	10d98 <malloc@plt>
   14f54:	push	{r4, lr}
   14f58:	bl	10df8 <__errno_location@plt>
   14f5c:	mov	r3, #12
   14f60:	str	r3, [r0]
   14f64:	mov	r0, #0
   14f68:	pop	{r4, pc}
   14f6c:	cmp	r0, #0
   14f70:	beq	14f94 <close@plt+0x40d0>
   14f74:	cmp	r1, #0
   14f78:	push	{lr}		; (str lr, [sp, #-4]!)
   14f7c:	sub	sp, sp, #12
   14f80:	beq	14f9c <close@plt+0x40d8>
   14f84:	blt	14fb4 <close@plt+0x40f0>
   14f88:	add	sp, sp, #12
   14f8c:	pop	{lr}		; (ldr lr, [sp], #4)
   14f90:	b	10d20 <realloc@plt>
   14f94:	mov	r0, r1
   14f98:	b	14f40 <close@plt+0x407c>
   14f9c:	str	r1, [sp, #4]
   14fa0:	bl	15218 <close@plt+0x4354>
   14fa4:	ldr	r3, [sp, #4]
   14fa8:	mov	r0, r3
   14fac:	add	sp, sp, #12
   14fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fb4:	bl	10df8 <__errno_location@plt>
   14fb8:	mov	r2, #12
   14fbc:	mov	r3, #0
   14fc0:	str	r2, [r0]
   14fc4:	b	14fa8 <close@plt+0x40e4>
   14fc8:	push	{r4, r5, r6, lr}
   14fcc:	mov	r4, r0
   14fd0:	bl	10d68 <__fpending@plt>
   14fd4:	ldr	r5, [r4]
   14fd8:	and	r5, r5, #32
   14fdc:	mov	r6, r0
   14fe0:	mov	r0, r4
   14fe4:	bl	11ef4 <close@plt+0x1030>
   14fe8:	cmp	r5, #0
   14fec:	mov	r4, r0
   14ff0:	bne	15010 <close@plt+0x414c>
   14ff4:	cmp	r0, #0
   14ff8:	beq	15008 <close@plt+0x4144>
   14ffc:	cmp	r6, #0
   15000:	beq	1502c <close@plt+0x4168>
   15004:	mvn	r4, #0
   15008:	mov	r0, r4
   1500c:	pop	{r4, r5, r6, pc}
   15010:	cmp	r0, #0
   15014:	bne	15004 <close@plt+0x4140>
   15018:	bl	10df8 <__errno_location@plt>
   1501c:	str	r4, [r0]
   15020:	mvn	r4, #0
   15024:	mov	r0, r4
   15028:	pop	{r4, r5, r6, pc}
   1502c:	bl	10df8 <__errno_location@plt>
   15030:	ldr	r4, [r0]
   15034:	subs	r4, r4, #9
   15038:	mvnne	r4, #0
   1503c:	mov	r0, r4
   15040:	pop	{r4, r5, r6, pc}
   15044:	push	{r1, r2, r3}
   15048:	push	{r4, r5, r6, r7, lr}
   1504c:	sub	sp, sp, #8
   15050:	add	r3, sp, #32
   15054:	ldr	r1, [sp, #28]
   15058:	str	r3, [sp, #4]
   1505c:	cmp	r1, #0
   15060:	beq	150f8 <close@plt+0x4234>
   15064:	ldr	r2, [pc, #412]	; 15208 <close@plt+0x4344>
   15068:	mov	r5, r0
   1506c:	cmp	r1, r2
   15070:	bne	150bc <close@plt+0x41f8>
   15074:	ldr	r6, [pc, #400]	; 1520c <close@plt+0x4348>
   15078:	ldr	r7, [r3]
   1507c:	add	r2, sp, #36	; 0x24
   15080:	ldr	r3, [r6]
   15084:	str	r2, [sp, #4]
   15088:	cmp	r3, #0
   1508c:	mov	r2, r7
   15090:	blt	151bc <close@plt+0x42f8>
   15094:	bl	10e58 <fcntl64@plt>
   15098:	subs	r4, r0, #0
   1509c:	blt	15140 <close@plt+0x427c>
   150a0:	mov	r3, #1
   150a4:	str	r3, [r6]
   150a8:	mov	r0, r4
   150ac:	add	sp, sp, #8
   150b0:	pop	{r4, r5, r6, r7, lr}
   150b4:	add	sp, sp, #12
   150b8:	bx	lr
   150bc:	cmp	r1, #11
   150c0:	beq	150e8 <close@plt+0x4224>
   150c4:	bgt	15108 <close@plt+0x4244>
   150c8:	cmp	r1, #3
   150cc:	beq	150e8 <close@plt+0x4224>
   150d0:	ble	151fc <close@plt+0x4338>
   150d4:	cmp	r1, #8
   150d8:	beq	15128 <close@plt+0x4264>
   150dc:	ble	15128 <close@plt+0x4264>
   150e0:	cmp	r1, #9
   150e4:	bne	15128 <close@plt+0x4264>
   150e8:	mov	r0, r5
   150ec:	bl	10e58 <fcntl64@plt>
   150f0:	mov	r4, r0
   150f4:	b	150a8 <close@plt+0x41e4>
   150f8:	ldr	r2, [sp, #32]
   150fc:	bl	10e58 <fcntl64@plt>
   15100:	mov	r4, r0
   15104:	b	150a8 <close@plt+0x41e4>
   15108:	ldr	r3, [pc, #256]	; 15210 <close@plt+0x434c>
   1510c:	cmp	r1, r3
   15110:	bgt	151dc <close@plt+0x4318>
   15114:	cmp	r1, r2
   15118:	bge	15128 <close@plt+0x4264>
   1511c:	sub	r3, r3, #6
   15120:	cmp	r1, r3
   15124:	beq	150e8 <close@plt+0x4224>
   15128:	ldr	r3, [sp, #4]
   1512c:	mov	r0, r5
   15130:	ldr	r2, [r3]
   15134:	bl	10e58 <fcntl64@plt>
   15138:	mov	r4, r0
   1513c:	b	150a8 <close@plt+0x41e4>
   15140:	bl	10df8 <__errno_location@plt>
   15144:	ldr	r3, [r0]
   15148:	cmp	r3, #22
   1514c:	bne	150a0 <close@plt+0x41dc>
   15150:	mov	r2, r7
   15154:	mov	r0, r5
   15158:	mov	r1, #0
   1515c:	bl	10e58 <fcntl64@plt>
   15160:	subs	r4, r0, #0
   15164:	blt	150a8 <close@plt+0x41e4>
   15168:	mvn	r3, #0
   1516c:	str	r3, [r6]
   15170:	mov	r1, #1
   15174:	mov	r0, r4
   15178:	bl	10e58 <fcntl64@plt>
   1517c:	subs	r2, r0, #0
   15180:	blt	1519c <close@plt+0x42d8>
   15184:	orr	r2, r2, #1
   15188:	mov	r1, #2
   1518c:	mov	r0, r4
   15190:	bl	10e58 <fcntl64@plt>
   15194:	cmn	r0, #1
   15198:	bne	150a8 <close@plt+0x41e4>
   1519c:	bl	10df8 <__errno_location@plt>
   151a0:	mov	r5, r0
   151a4:	mov	r0, r4
   151a8:	ldr	r6, [r5]
   151ac:	mvn	r4, #0
   151b0:	bl	10ec4 <close@plt>
   151b4:	str	r6, [r5]
   151b8:	b	150a8 <close@plt+0x41e4>
   151bc:	mov	r1, #0
   151c0:	bl	10e58 <fcntl64@plt>
   151c4:	subs	r4, r0, #0
   151c8:	blt	150a8 <close@plt+0x41e4>
   151cc:	ldr	r3, [r6]
   151d0:	cmn	r3, #1
   151d4:	beq	15170 <close@plt+0x42ac>
   151d8:	b	150a8 <close@plt+0x41e4>
   151dc:	ldr	r3, [pc, #48]	; 15214 <close@plt+0x4350>
   151e0:	cmp	r1, r3
   151e4:	beq	15128 <close@plt+0x4264>
   151e8:	blt	150e8 <close@plt+0x4224>
   151ec:	add	r3, r3, #1
   151f0:	cmp	r1, r3
   151f4:	bne	15128 <close@plt+0x4264>
   151f8:	b	150e8 <close@plt+0x4224>
   151fc:	cmp	r1, #1
   15200:	bne	15128 <close@plt+0x4264>
   15204:	b	150e8 <close@plt+0x4224>
   15208:	andeq	r0, r0, r6, lsl #8
   1520c:			; <UNDEFINED> instruction: 0x000272b4
   15210:	andeq	r0, r0, r7, lsl #8
   15214:	andeq	r0, r0, r9, lsl #8
   15218:	push	{r4, r5, lr}
   1521c:	sub	sp, sp, #12
   15220:	mov	r5, r0
   15224:	bl	10df8 <__errno_location@plt>
   15228:	mov	r2, #0
   1522c:	mov	r4, r0
   15230:	ldr	r3, [r0]
   15234:	str	r2, [r4]
   15238:	mov	r0, r5
   1523c:	str	r3, [sp]
   15240:	str	r3, [sp, #4]
   15244:	bl	10cc0 <free@plt>
   15248:	ldr	r3, [r4]
   1524c:	add	r2, sp, #8
   15250:	cmp	r3, #0
   15254:	moveq	r3, #4
   15258:	movne	r3, #0
   1525c:	add	r3, r2, r3
   15260:	ldr	r3, [r3, #-8]
   15264:	str	r3, [r4]
   15268:	add	sp, sp, #12
   1526c:	pop	{r4, r5, pc}
   15270:	push	{r4, lr}
   15274:	mov	r0, #14
   15278:	bl	10e88 <nl_langinfo@plt>
   1527c:	cmp	r0, #0
   15280:	beq	15298 <close@plt+0x43d4>
   15284:	ldrb	r2, [r0]
   15288:	ldr	r3, [pc, #16]	; 152a0 <close@plt+0x43dc>
   1528c:	cmp	r2, #0
   15290:	moveq	r0, r3
   15294:	pop	{r4, pc}
   15298:	ldr	r0, [pc]	; 152a0 <close@plt+0x43dc>
   1529c:	pop	{r4, pc}
   152a0:	andeq	r6, r1, ip, ror #16
   152a4:	push	{r4, r5, r6, r7, lr}
   152a8:	subs	r6, r0, #0
   152ac:	sub	sp, sp, #12
   152b0:	addeq	r6, sp, #4
   152b4:	mov	r0, r6
   152b8:	mov	r5, r2
   152bc:	mov	r7, r1
   152c0:	bl	10d74 <mbrtowc@plt>
   152c4:	cmp	r5, #0
   152c8:	cmnne	r0, #3
   152cc:	mov	r4, r0
   152d0:	bls	152ec <close@plt+0x4428>
   152d4:	mov	r0, #0
   152d8:	bl	1212c <close@plt+0x1268>
   152dc:	cmp	r0, #0
   152e0:	moveq	r4, #1
   152e4:	ldrbeq	r3, [r7]
   152e8:	streq	r3, [r6]
   152ec:	mov	r0, r4
   152f0:	add	sp, sp, #12
   152f4:	pop	{r4, r5, r6, r7, pc}
   152f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152fc:	mov	r4, r0
   15300:	mov	r7, r1
   15304:	mov	r5, r2
   15308:	mov	r8, r3
   1530c:	bl	10df8 <__errno_location@plt>
   15310:	mov	sl, #0
   15314:	mov	r9, r0
   15318:	b	1534c <close@plt+0x4488>
   1531c:	bl	10dec <strlen@plt>
   15320:	add	r6, r0, #1
   15324:	mov	r0, r5
   15328:	bl	10dec <strlen@plt>
   1532c:	subs	r7, r7, r6
   15330:	add	r4, r4, r6
   15334:	add	r0, r0, #1
   15338:	add	r5, r5, r0
   1533c:	sub	r8, r8, r0
   15340:	beq	15370 <close@plt+0x44ac>
   15344:	cmp	r8, #0
   15348:	beq	15380 <close@plt+0x44bc>
   1534c:	str	sl, [r9]
   15350:	mov	r1, r5
   15354:	mov	r0, r4
   15358:	bl	10d8c <strcoll@plt>
   1535c:	subs	r3, r0, #0
   15360:	mov	r0, r4
   15364:	beq	1531c <close@plt+0x4458>
   15368:	mov	r0, r3
   1536c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15370:	adds	r3, r8, #0
   15374:	mvnne	r3, #0
   15378:	mov	r0, r3
   1537c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15380:	mov	r3, #1
   15384:	mov	r0, r3
   15388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1538c:	cmp	r1, r3
   15390:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15394:	mov	r4, r1
   15398:	mov	r5, r3
   1539c:	mov	r6, r2
   153a0:	mov	r7, r0
   153a4:	beq	153e4 <close@plt+0x4520>
   153a8:	mov	r1, #0
   153ac:	ldrb	sl, [r7, r4]
   153b0:	ldrb	r9, [r6, r5]
   153b4:	add	r3, r5, #1
   153b8:	strb	r1, [r7, r4]
   153bc:	mov	r2, r6
   153c0:	strb	r1, [r6, r5]
   153c4:	mov	r0, r7
   153c8:	add	r1, r4, #1
   153cc:	bl	152f8 <close@plt+0x4434>
   153d0:	strb	sl, [r7, r4]
   153d4:	strb	r9, [r6, r5]
   153d8:	mov	r8, r0
   153dc:	mov	r0, r8
   153e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153e4:	mov	r2, r1
   153e8:	mov	r1, r6
   153ec:	bl	10cfc <memcmp@plt>
   153f0:	subs	r8, r0, #0
   153f4:	bne	153a8 <close@plt+0x44e4>
   153f8:	bl	10df8 <__errno_location@plt>
   153fc:	str	r8, [r0]
   15400:	mov	r0, r8
   15404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15408:	cmp	r1, r3
   1540c:	push	{r4, r5, r6, r7, r8, lr}
   15410:	mov	r4, r1
   15414:	mov	r5, r3
   15418:	mov	r6, r2
   1541c:	mov	r7, r0
   15420:	beq	1543c <close@plt+0x4578>
   15424:	mov	r3, r5
   15428:	mov	r2, r6
   1542c:	mov	r1, r4
   15430:	mov	r0, r7
   15434:	pop	{r4, r5, r6, r7, r8, lr}
   15438:	b	152f8 <close@plt+0x4434>
   1543c:	mov	r2, r1
   15440:	mov	r1, r6
   15444:	bl	10cfc <memcmp@plt>
   15448:	subs	r8, r0, #0
   1544c:	bne	15424 <close@plt+0x4560>
   15450:	bl	10df8 <__errno_location@plt>
   15454:	str	r8, [r0]
   15458:	mov	r0, r8
   1545c:	pop	{r4, r5, r6, r7, r8, pc}
   15460:	push	{r4, r5, r6, lr}
   15464:	subs	r4, r2, #0
   15468:	mov	r6, r0
   1546c:	mov	r5, r1
   15470:	beq	1549c <close@plt+0x45d8>
   15474:	mov	r1, r4
   15478:	mvn	r0, #0
   1547c:	bl	154ac <close@plt+0x45e8>
   15480:	cmp	r0, r5
   15484:	bcs	1549c <close@plt+0x45d8>
   15488:	bl	10df8 <__errno_location@plt>
   1548c:	mov	r3, #12
   15490:	str	r3, [r0]
   15494:	mov	r0, #0
   15498:	pop	{r4, r5, r6, pc}
   1549c:	mul	r1, r5, r4
   154a0:	mov	r0, r6
   154a4:	pop	{r4, r5, r6, lr}
   154a8:	b	14f6c <close@plt+0x40a8>
   154ac:	subs	r2, r1, #1
   154b0:	bxeq	lr
   154b4:	bcc	1568c <close@plt+0x47c8>
   154b8:	cmp	r0, r1
   154bc:	bls	15670 <close@plt+0x47ac>
   154c0:	tst	r1, r2
   154c4:	beq	1567c <close@plt+0x47b8>
   154c8:	clz	r3, r0
   154cc:	clz	r2, r1
   154d0:	sub	r3, r2, r3
   154d4:	rsbs	r3, r3, #31
   154d8:	addne	r3, r3, r3, lsl #1
   154dc:	mov	r2, #0
   154e0:	addne	pc, pc, r3, lsl #2
   154e4:	nop			; (mov r0, r0)
   154e8:	cmp	r0, r1, lsl #31
   154ec:	adc	r2, r2, r2
   154f0:	subcs	r0, r0, r1, lsl #31
   154f4:	cmp	r0, r1, lsl #30
   154f8:	adc	r2, r2, r2
   154fc:	subcs	r0, r0, r1, lsl #30
   15500:	cmp	r0, r1, lsl #29
   15504:	adc	r2, r2, r2
   15508:	subcs	r0, r0, r1, lsl #29
   1550c:	cmp	r0, r1, lsl #28
   15510:	adc	r2, r2, r2
   15514:	subcs	r0, r0, r1, lsl #28
   15518:	cmp	r0, r1, lsl #27
   1551c:	adc	r2, r2, r2
   15520:	subcs	r0, r0, r1, lsl #27
   15524:	cmp	r0, r1, lsl #26
   15528:	adc	r2, r2, r2
   1552c:	subcs	r0, r0, r1, lsl #26
   15530:	cmp	r0, r1, lsl #25
   15534:	adc	r2, r2, r2
   15538:	subcs	r0, r0, r1, lsl #25
   1553c:	cmp	r0, r1, lsl #24
   15540:	adc	r2, r2, r2
   15544:	subcs	r0, r0, r1, lsl #24
   15548:	cmp	r0, r1, lsl #23
   1554c:	adc	r2, r2, r2
   15550:	subcs	r0, r0, r1, lsl #23
   15554:	cmp	r0, r1, lsl #22
   15558:	adc	r2, r2, r2
   1555c:	subcs	r0, r0, r1, lsl #22
   15560:	cmp	r0, r1, lsl #21
   15564:	adc	r2, r2, r2
   15568:	subcs	r0, r0, r1, lsl #21
   1556c:	cmp	r0, r1, lsl #20
   15570:	adc	r2, r2, r2
   15574:	subcs	r0, r0, r1, lsl #20
   15578:	cmp	r0, r1, lsl #19
   1557c:	adc	r2, r2, r2
   15580:	subcs	r0, r0, r1, lsl #19
   15584:	cmp	r0, r1, lsl #18
   15588:	adc	r2, r2, r2
   1558c:	subcs	r0, r0, r1, lsl #18
   15590:	cmp	r0, r1, lsl #17
   15594:	adc	r2, r2, r2
   15598:	subcs	r0, r0, r1, lsl #17
   1559c:	cmp	r0, r1, lsl #16
   155a0:	adc	r2, r2, r2
   155a4:	subcs	r0, r0, r1, lsl #16
   155a8:	cmp	r0, r1, lsl #15
   155ac:	adc	r2, r2, r2
   155b0:	subcs	r0, r0, r1, lsl #15
   155b4:	cmp	r0, r1, lsl #14
   155b8:	adc	r2, r2, r2
   155bc:	subcs	r0, r0, r1, lsl #14
   155c0:	cmp	r0, r1, lsl #13
   155c4:	adc	r2, r2, r2
   155c8:	subcs	r0, r0, r1, lsl #13
   155cc:	cmp	r0, r1, lsl #12
   155d0:	adc	r2, r2, r2
   155d4:	subcs	r0, r0, r1, lsl #12
   155d8:	cmp	r0, r1, lsl #11
   155dc:	adc	r2, r2, r2
   155e0:	subcs	r0, r0, r1, lsl #11
   155e4:	cmp	r0, r1, lsl #10
   155e8:	adc	r2, r2, r2
   155ec:	subcs	r0, r0, r1, lsl #10
   155f0:	cmp	r0, r1, lsl #9
   155f4:	adc	r2, r2, r2
   155f8:	subcs	r0, r0, r1, lsl #9
   155fc:	cmp	r0, r1, lsl #8
   15600:	adc	r2, r2, r2
   15604:	subcs	r0, r0, r1, lsl #8
   15608:	cmp	r0, r1, lsl #7
   1560c:	adc	r2, r2, r2
   15610:	subcs	r0, r0, r1, lsl #7
   15614:	cmp	r0, r1, lsl #6
   15618:	adc	r2, r2, r2
   1561c:	subcs	r0, r0, r1, lsl #6
   15620:	cmp	r0, r1, lsl #5
   15624:	adc	r2, r2, r2
   15628:	subcs	r0, r0, r1, lsl #5
   1562c:	cmp	r0, r1, lsl #4
   15630:	adc	r2, r2, r2
   15634:	subcs	r0, r0, r1, lsl #4
   15638:	cmp	r0, r1, lsl #3
   1563c:	adc	r2, r2, r2
   15640:	subcs	r0, r0, r1, lsl #3
   15644:	cmp	r0, r1, lsl #2
   15648:	adc	r2, r2, r2
   1564c:	subcs	r0, r0, r1, lsl #2
   15650:	cmp	r0, r1, lsl #1
   15654:	adc	r2, r2, r2
   15658:	subcs	r0, r0, r1, lsl #1
   1565c:	cmp	r0, r1
   15660:	adc	r2, r2, r2
   15664:	subcs	r0, r0, r1
   15668:	mov	r0, r2
   1566c:	bx	lr
   15670:	moveq	r0, #1
   15674:	movne	r0, #0
   15678:	bx	lr
   1567c:	clz	r2, r1
   15680:	rsb	r2, r2, #31
   15684:	lsr	r0, r0, r2
   15688:	bx	lr
   1568c:	cmp	r0, #0
   15690:	mvnne	r0, #0
   15694:	b	15934 <close@plt+0x4a70>
   15698:	cmp	r1, #0
   1569c:	beq	1568c <close@plt+0x47c8>
   156a0:	push	{r0, r1, lr}
   156a4:	bl	154ac <close@plt+0x45e8>
   156a8:	pop	{r1, r2, lr}
   156ac:	mul	r3, r2, r0
   156b0:	sub	r1, r1, r3
   156b4:	bx	lr
   156b8:	cmp	r1, #0
   156bc:	beq	158c8 <close@plt+0x4a04>
   156c0:	eor	ip, r0, r1
   156c4:	rsbmi	r1, r1, #0
   156c8:	subs	r2, r1, #1
   156cc:	beq	15894 <close@plt+0x49d0>
   156d0:	movs	r3, r0
   156d4:	rsbmi	r3, r0, #0
   156d8:	cmp	r3, r1
   156dc:	bls	158a0 <close@plt+0x49dc>
   156e0:	tst	r1, r2
   156e4:	beq	158b0 <close@plt+0x49ec>
   156e8:	clz	r2, r3
   156ec:	clz	r0, r1
   156f0:	sub	r2, r0, r2
   156f4:	rsbs	r2, r2, #31
   156f8:	addne	r2, r2, r2, lsl #1
   156fc:	mov	r0, #0
   15700:	addne	pc, pc, r2, lsl #2
   15704:	nop			; (mov r0, r0)
   15708:	cmp	r3, r1, lsl #31
   1570c:	adc	r0, r0, r0
   15710:	subcs	r3, r3, r1, lsl #31
   15714:	cmp	r3, r1, lsl #30
   15718:	adc	r0, r0, r0
   1571c:	subcs	r3, r3, r1, lsl #30
   15720:	cmp	r3, r1, lsl #29
   15724:	adc	r0, r0, r0
   15728:	subcs	r3, r3, r1, lsl #29
   1572c:	cmp	r3, r1, lsl #28
   15730:	adc	r0, r0, r0
   15734:	subcs	r3, r3, r1, lsl #28
   15738:	cmp	r3, r1, lsl #27
   1573c:	adc	r0, r0, r0
   15740:	subcs	r3, r3, r1, lsl #27
   15744:	cmp	r3, r1, lsl #26
   15748:	adc	r0, r0, r0
   1574c:	subcs	r3, r3, r1, lsl #26
   15750:	cmp	r3, r1, lsl #25
   15754:	adc	r0, r0, r0
   15758:	subcs	r3, r3, r1, lsl #25
   1575c:	cmp	r3, r1, lsl #24
   15760:	adc	r0, r0, r0
   15764:	subcs	r3, r3, r1, lsl #24
   15768:	cmp	r3, r1, lsl #23
   1576c:	adc	r0, r0, r0
   15770:	subcs	r3, r3, r1, lsl #23
   15774:	cmp	r3, r1, lsl #22
   15778:	adc	r0, r0, r0
   1577c:	subcs	r3, r3, r1, lsl #22
   15780:	cmp	r3, r1, lsl #21
   15784:	adc	r0, r0, r0
   15788:	subcs	r3, r3, r1, lsl #21
   1578c:	cmp	r3, r1, lsl #20
   15790:	adc	r0, r0, r0
   15794:	subcs	r3, r3, r1, lsl #20
   15798:	cmp	r3, r1, lsl #19
   1579c:	adc	r0, r0, r0
   157a0:	subcs	r3, r3, r1, lsl #19
   157a4:	cmp	r3, r1, lsl #18
   157a8:	adc	r0, r0, r0
   157ac:	subcs	r3, r3, r1, lsl #18
   157b0:	cmp	r3, r1, lsl #17
   157b4:	adc	r0, r0, r0
   157b8:	subcs	r3, r3, r1, lsl #17
   157bc:	cmp	r3, r1, lsl #16
   157c0:	adc	r0, r0, r0
   157c4:	subcs	r3, r3, r1, lsl #16
   157c8:	cmp	r3, r1, lsl #15
   157cc:	adc	r0, r0, r0
   157d0:	subcs	r3, r3, r1, lsl #15
   157d4:	cmp	r3, r1, lsl #14
   157d8:	adc	r0, r0, r0
   157dc:	subcs	r3, r3, r1, lsl #14
   157e0:	cmp	r3, r1, lsl #13
   157e4:	adc	r0, r0, r0
   157e8:	subcs	r3, r3, r1, lsl #13
   157ec:	cmp	r3, r1, lsl #12
   157f0:	adc	r0, r0, r0
   157f4:	subcs	r3, r3, r1, lsl #12
   157f8:	cmp	r3, r1, lsl #11
   157fc:	adc	r0, r0, r0
   15800:	subcs	r3, r3, r1, lsl #11
   15804:	cmp	r3, r1, lsl #10
   15808:	adc	r0, r0, r0
   1580c:	subcs	r3, r3, r1, lsl #10
   15810:	cmp	r3, r1, lsl #9
   15814:	adc	r0, r0, r0
   15818:	subcs	r3, r3, r1, lsl #9
   1581c:	cmp	r3, r1, lsl #8
   15820:	adc	r0, r0, r0
   15824:	subcs	r3, r3, r1, lsl #8
   15828:	cmp	r3, r1, lsl #7
   1582c:	adc	r0, r0, r0
   15830:	subcs	r3, r3, r1, lsl #7
   15834:	cmp	r3, r1, lsl #6
   15838:	adc	r0, r0, r0
   1583c:	subcs	r3, r3, r1, lsl #6
   15840:	cmp	r3, r1, lsl #5
   15844:	adc	r0, r0, r0
   15848:	subcs	r3, r3, r1, lsl #5
   1584c:	cmp	r3, r1, lsl #4
   15850:	adc	r0, r0, r0
   15854:	subcs	r3, r3, r1, lsl #4
   15858:	cmp	r3, r1, lsl #3
   1585c:	adc	r0, r0, r0
   15860:	subcs	r3, r3, r1, lsl #3
   15864:	cmp	r3, r1, lsl #2
   15868:	adc	r0, r0, r0
   1586c:	subcs	r3, r3, r1, lsl #2
   15870:	cmp	r3, r1, lsl #1
   15874:	adc	r0, r0, r0
   15878:	subcs	r3, r3, r1, lsl #1
   1587c:	cmp	r3, r1
   15880:	adc	r0, r0, r0
   15884:	subcs	r3, r3, r1
   15888:	cmp	ip, #0
   1588c:	rsbmi	r0, r0, #0
   15890:	bx	lr
   15894:	teq	ip, r0
   15898:	rsbmi	r0, r0, #0
   1589c:	bx	lr
   158a0:	movcc	r0, #0
   158a4:	asreq	r0, ip, #31
   158a8:	orreq	r0, r0, #1
   158ac:	bx	lr
   158b0:	clz	r2, r1
   158b4:	rsb	r2, r2, #31
   158b8:	cmp	ip, #0
   158bc:	lsr	r0, r3, r2
   158c0:	rsbmi	r0, r0, #0
   158c4:	bx	lr
   158c8:	cmp	r0, #0
   158cc:	mvngt	r0, #-2147483648	; 0x80000000
   158d0:	movlt	r0, #-2147483648	; 0x80000000
   158d4:	b	15934 <close@plt+0x4a70>
   158d8:	cmp	r1, #0
   158dc:	beq	158c8 <close@plt+0x4a04>
   158e0:	push	{r0, r1, lr}
   158e4:	bl	156c0 <close@plt+0x47fc>
   158e8:	pop	{r1, r2, lr}
   158ec:	mul	r3, r2, r0
   158f0:	sub	r1, r1, r3
   158f4:	bx	lr
   158f8:	cmp	r3, #0
   158fc:	cmpeq	r2, #0
   15900:	bne	15918 <close@plt+0x4a54>
   15904:	cmp	r1, #0
   15908:	cmpeq	r0, #0
   1590c:	mvnne	r1, #0
   15910:	mvnne	r0, #0
   15914:	b	15934 <close@plt+0x4a70>
   15918:	sub	sp, sp, #8
   1591c:	push	{sp, lr}
   15920:	bl	15944 <close@plt+0x4a80>
   15924:	ldr	lr, [sp, #4]
   15928:	add	sp, sp, #8
   1592c:	pop	{r2, r3}
   15930:	bx	lr
   15934:	push	{r1, lr}
   15938:	mov	r0, #8
   1593c:	bl	10c90 <raise@plt>
   15940:	pop	{r1, pc}
   15944:	cmp	r1, r3
   15948:	push	{r4, r5, r6, r7, r8, r9, lr}
   1594c:	cmpeq	r0, r2
   15950:	mov	r4, r0
   15954:	mov	r5, r1
   15958:	ldr	r9, [sp, #28]
   1595c:	movcc	r0, #0
   15960:	movcc	r1, #0
   15964:	bcc	15a5c <close@plt+0x4b98>
   15968:	cmp	r3, #0
   1596c:	clzeq	ip, r2
   15970:	clzne	ip, r3
   15974:	addeq	ip, ip, #32
   15978:	cmp	r5, #0
   1597c:	clzeq	r1, r4
   15980:	addeq	r1, r1, #32
   15984:	clzne	r1, r5
   15988:	sub	ip, ip, r1
   1598c:	sub	lr, ip, #32
   15990:	lsl	r7, r3, ip
   15994:	rsb	r8, ip, #32
   15998:	orr	r7, r7, r2, lsl lr
   1599c:	orr	r7, r7, r2, lsr r8
   159a0:	lsl	r6, r2, ip
   159a4:	cmp	r5, r7
   159a8:	cmpeq	r4, r6
   159ac:	movcc	r0, #0
   159b0:	movcc	r1, #0
   159b4:	bcc	159d0 <close@plt+0x4b0c>
   159b8:	mov	r3, #1
   159bc:	subs	r4, r4, r6
   159c0:	lsl	r1, r3, lr
   159c4:	lsl	r0, r3, ip
   159c8:	orr	r1, r1, r3, lsr r8
   159cc:	sbc	r5, r5, r7
   159d0:	cmp	ip, #0
   159d4:	beq	15a5c <close@plt+0x4b98>
   159d8:	lsrs	r3, r7, #1
   159dc:	rrx	r2, r6
   159e0:	mov	r6, ip
   159e4:	b	15a08 <close@plt+0x4b44>
   159e8:	subs	r4, r4, r2
   159ec:	sbc	r5, r5, r3
   159f0:	adds	r4, r4, r4
   159f4:	adc	r5, r5, r5
   159f8:	adds	r4, r4, #1
   159fc:	adc	r5, r5, #0
   15a00:	subs	r6, r6, #1
   15a04:	beq	15a24 <close@plt+0x4b60>
   15a08:	cmp	r5, r3
   15a0c:	cmpeq	r4, r2
   15a10:	bcs	159e8 <close@plt+0x4b24>
   15a14:	adds	r4, r4, r4
   15a18:	adc	r5, r5, r5
   15a1c:	subs	r6, r6, #1
   15a20:	bne	15a08 <close@plt+0x4b44>
   15a24:	lsr	r6, r4, ip
   15a28:	lsr	r7, r5, ip
   15a2c:	orr	r6, r6, r5, lsl r8
   15a30:	adds	r2, r0, r4
   15a34:	orr	r6, r6, r5, lsr lr
   15a38:	adc	r3, r1, r5
   15a3c:	lsl	r1, r7, ip
   15a40:	orr	r1, r1, r6, lsl lr
   15a44:	lsl	r0, r6, ip
   15a48:	orr	r1, r1, r6, lsr r8
   15a4c:	subs	r0, r2, r0
   15a50:	mov	r4, r6
   15a54:	mov	r5, r7
   15a58:	sbc	r1, r3, r1
   15a5c:	cmp	r9, #0
   15a60:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   15a64:	strd	r4, [r9]
   15a68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15a6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a70:	mov	r7, r0
   15a74:	ldr	r6, [pc, #72]	; 15ac4 <close@plt+0x4c00>
   15a78:	ldr	r5, [pc, #72]	; 15ac8 <close@plt+0x4c04>
   15a7c:	add	r6, pc, r6
   15a80:	add	r5, pc, r5
   15a84:	sub	r6, r6, r5
   15a88:	mov	r8, r1
   15a8c:	mov	r9, r2
   15a90:	bl	10c4c <fdopen@plt-0x20>
   15a94:	asrs	r6, r6, #2
   15a98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a9c:	mov	r4, #0
   15aa0:	add	r4, r4, #1
   15aa4:	ldr	r3, [r5], #4
   15aa8:	mov	r2, r9
   15aac:	mov	r1, r8
   15ab0:	mov	r0, r7
   15ab4:	blx	r3
   15ab8:	cmp	r6, r4
   15abc:	bne	15aa0 <close@plt+0x4bdc>
   15ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ac4:	andeq	r1, r1, ip, lsl #9
   15ac8:	andeq	r1, r1, r4, lsl #9
   15acc:	bx	lr
   15ad0:	ldr	r3, [pc, #12]	; 15ae4 <close@plt+0x4c20>
   15ad4:	mov	r1, #0
   15ad8:	add	r3, pc, r3
   15adc:	ldr	r2, [r3]
   15ae0:	b	10e04 <__cxa_atexit@plt>
   15ae4:	andeq	r1, r1, r0, lsl #12

Disassembly of section .fini:

00015ae8 <.fini>:
   15ae8:	push	{r3, lr}
   15aec:	pop	{r3, pc}
