
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	11050 <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r1, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <memcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <main@@Base>:
   10a88:	mov	r1, #3
   10a8c:	mov	r0, #4
   10a90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10a94:	strd	r6, [sp, #8]
   10a98:	strd	r8, [sp, #16]
   10a9c:	strd	sl, [sp, #24]
   10aa0:	str	lr, [sp, #32]
   10aa4:	sub	sp, sp, #28
   10aa8:	bl	1127c <armazem_novo@@Base>
   10aac:	mov	r7, r0
   10ab0:	ldr	r0, [pc, #1064]	; 10ee0 <main@@Base+0x458>
   10ab4:	add	r0, pc, r0
   10ab8:	bl	10a34 <puts@plt>
   10abc:	ldr	r0, [pc, #1056]	; 10ee4 <main@@Base+0x45c>
   10ac0:	vldr	s0, [pc, #1000]	; 10eb0 <main@@Base+0x428>
   10ac4:	add	r0, pc, r0
   10ac8:	bl	114ac <contentor_novo@@Base>
   10acc:	mov	fp, r0
   10ad0:	ldr	r0, [pc, #1040]	; 10ee8 <main@@Base+0x460>
   10ad4:	vldr	s0, [pc, #984]	; 10eb4 <main@@Base+0x42c>
   10ad8:	add	r0, pc, r0
   10adc:	bl	114ac <contentor_novo@@Base>
   10ae0:	mov	sl, r0
   10ae4:	ldr	r0, [pc, #1024]	; 10eec <main@@Base+0x464>
   10ae8:	vldr	s0, [pc, #968]	; 10eb8 <main@@Base+0x430>
   10aec:	add	r0, pc, r0
   10af0:	bl	114ac <contentor_novo@@Base>
   10af4:	mov	r4, r0
   10af8:	ldr	r0, [pc, #1008]	; 10ef0 <main@@Base+0x468>
   10afc:	vldr	s0, [pc, #952]	; 10ebc <main@@Base+0x434>
   10b00:	add	r0, pc, r0
   10b04:	bl	114ac <contentor_novo@@Base>
   10b08:	mov	r9, r0
   10b0c:	ldr	r0, [pc, #992]	; 10ef4 <main@@Base+0x46c>
   10b10:	vldr	s0, [pc, #936]	; 10ec0 <main@@Base+0x438>
   10b14:	add	r0, pc, r0
   10b18:	bl	114ac <contentor_novo@@Base>
   10b1c:	mov	r8, r0
   10b20:	ldr	r0, [pc, #976]	; 10ef8 <main@@Base+0x470>
   10b24:	vldr	s0, [pc, #920]	; 10ec4 <main@@Base+0x43c>
   10b28:	add	r0, pc, r0
   10b2c:	bl	114ac <contentor_novo@@Base>
   10b30:	str	r0, [sp]
   10b34:	ldr	r0, [pc, #960]	; 10efc <main@@Base+0x474>
   10b38:	vldr	s0, [pc, #904]	; 10ec8 <main@@Base+0x440>
   10b3c:	add	r0, pc, r0
   10b40:	bl	114ac <contentor_novo@@Base>
   10b44:	mov	r6, r0
   10b48:	ldr	r0, [pc, #944]	; 10f00 <main@@Base+0x478>
   10b4c:	vldr	s0, [pc, #888]	; 10ecc <main@@Base+0x444>
   10b50:	add	r0, pc, r0
   10b54:	bl	114ac <contentor_novo@@Base>
   10b58:	str	r0, [sp, #4]
   10b5c:	ldr	r0, [pc, #928]	; 10f04 <main@@Base+0x47c>
   10b60:	vldr	s0, [pc, #856]	; 10ec0 <main@@Base+0x438>
   10b64:	add	r0, pc, r0
   10b68:	bl	114ac <contentor_novo@@Base>
   10b6c:	str	r0, [sp, #8]
   10b70:	ldr	r0, [pc, #912]	; 10f08 <main@@Base+0x480>
   10b74:	vldr	s0, [pc, #852]	; 10ed0 <main@@Base+0x448>
   10b78:	add	r0, pc, r0
   10b7c:	bl	114ac <contentor_novo@@Base>
   10b80:	str	r0, [sp, #12]
   10b84:	ldr	r0, [pc, #896]	; 10f0c <main@@Base+0x484>
   10b88:	vldr	s0, [pc, #836]	; 10ed4 <main@@Base+0x44c>
   10b8c:	add	r0, pc, r0
   10b90:	bl	114ac <contentor_novo@@Base>
   10b94:	str	r0, [sp, #16]
   10b98:	ldr	r0, [pc, #880]	; 10f10 <main@@Base+0x488>
   10b9c:	vldr	s0, [pc, #820]	; 10ed8 <main@@Base+0x450>
   10ba0:	add	r0, pc, r0
   10ba4:	bl	114ac <contentor_novo@@Base>
   10ba8:	mov	r5, r0
   10bac:	ldr	r0, [pc, #864]	; 10f14 <main@@Base+0x48c>
   10bb0:	vldr	s0, [pc, #804]	; 10edc <main@@Base+0x454>
   10bb4:	add	r0, pc, r0
   10bb8:	bl	114ac <contentor_novo@@Base>
   10bbc:	str	r0, [sp, #20]
   10bc0:	ldr	r0, [pc, #848]	; 10f18 <main@@Base+0x490>
   10bc4:	add	r0, pc, r0
   10bc8:	bl	10a34 <puts@plt>
   10bcc:	mov	r0, r7
   10bd0:	bl	11104 <imprimeArmazem@@Base>
   10bd4:	ldr	r0, [pc, #832]	; 10f1c <main@@Base+0x494>
   10bd8:	add	r0, pc, r0
   10bdc:	bl	10a34 <puts@plt>
   10be0:	mov	r1, fp
   10be4:	mov	r0, r7
   10be8:	bl	11350 <armazenar_contentor@@Base>
   10bec:	cmp	r0, #0
   10bf0:	bne	11000 <main@@Base+0x578>
   10bf4:	mov	r1, sl
   10bf8:	mov	r0, r7
   10bfc:	bl	11350 <armazenar_contentor@@Base>
   10c00:	cmp	r0, #0
   10c04:	bne	10fec <main@@Base+0x564>
   10c08:	mov	r1, r4
   10c0c:	mov	r0, r7
   10c10:	bl	11350 <armazenar_contentor@@Base>
   10c14:	cmp	r0, #0
   10c18:	bne	10fd8 <main@@Base+0x550>
   10c1c:	mov	r1, r9
   10c20:	mov	r0, r7
   10c24:	bl	11350 <armazenar_contentor@@Base>
   10c28:	cmp	r0, #0
   10c2c:	bne	10fc4 <main@@Base+0x53c>
   10c30:	ldr	r0, [pc, #744]	; 10f20 <main@@Base+0x498>
   10c34:	add	r0, pc, r0
   10c38:	bl	10a34 <puts@plt>
   10c3c:	mov	r0, r7
   10c40:	bl	11104 <imprimeArmazem@@Base>
   10c44:	ldr	r0, [pc, #728]	; 10f24 <main@@Base+0x49c>
   10c48:	add	r0, pc, r0
   10c4c:	bl	10a34 <puts@plt>
   10c50:	mov	r1, r8
   10c54:	mov	r0, r7
   10c58:	bl	11350 <armazenar_contentor@@Base>
   10c5c:	cmp	r0, #0
   10c60:	bne	10fb0 <main@@Base+0x528>
   10c64:	mov	r0, r7
   10c68:	ldr	r1, [sp]
   10c6c:	bl	11350 <armazenar_contentor@@Base>
   10c70:	cmp	r0, #0
   10c74:	bne	10f98 <main@@Base+0x510>
   10c78:	mov	r1, r6
   10c7c:	mov	r0, r7
   10c80:	bl	11350 <armazenar_contentor@@Base>
   10c84:	cmp	r0, #0
   10c88:	bne	10f84 <main@@Base+0x4fc>
   10c8c:	mov	r0, r7
   10c90:	ldr	r1, [sp, #4]
   10c94:	bl	11350 <armazenar_contentor@@Base>
   10c98:	cmp	r0, #0
   10c9c:	bne	10e98 <main@@Base+0x410>
   10ca0:	mov	r0, r7
   10ca4:	ldr	r1, [sp, #8]
   10ca8:	bl	11350 <armazenar_contentor@@Base>
   10cac:	cmp	r0, #0
   10cb0:	bne	10e80 <main@@Base+0x3f8>
   10cb4:	mov	r0, r7
   10cb8:	ldr	r1, [sp, #12]
   10cbc:	bl	11350 <armazenar_contentor@@Base>
   10cc0:	cmp	r0, #0
   10cc4:	bne	10e68 <main@@Base+0x3e0>
   10cc8:	mov	r0, r7
   10ccc:	ldr	r1, [sp, #16]
   10cd0:	bl	11350 <armazenar_contentor@@Base>
   10cd4:	cmp	r0, #0
   10cd8:	bne	10e50 <main@@Base+0x3c8>
   10cdc:	mov	r1, r5
   10ce0:	mov	r0, r7
   10ce4:	bl	11350 <armazenar_contentor@@Base>
   10ce8:	cmp	r0, #0
   10cec:	bne	10e3c <main@@Base+0x3b4>
   10cf0:	ldr	r0, [pc, #560]	; 10f28 <main@@Base+0x4a0>
   10cf4:	add	r0, pc, r0
   10cf8:	bl	10a34 <puts@plt>
   10cfc:	mov	r0, r7
   10d00:	bl	11104 <imprimeArmazem@@Base>
   10d04:	mov	r0, r7
   10d08:	bl	112f4 <armazem_cheio@@Base>
   10d0c:	cmp	r0, #0
   10d10:	beq	10e08 <main@@Base+0x380>
   10d14:	ldr	r0, [pc, #528]	; 10f2c <main@@Base+0x4a4>
   10d18:	add	r0, pc, r0
   10d1c:	bl	10a34 <puts@plt>
   10d20:	mov	r0, r7
   10d24:	ldr	r1, [sp, #20]
   10d28:	bl	11350 <armazenar_contentor@@Base>
   10d2c:	cmp	r0, #0
   10d30:	bne	10e28 <main@@Base+0x3a0>
   10d34:	ldr	r0, [pc, #500]	; 10f30 <main@@Base+0x4a8>
   10d38:	mov	r4, #8
   10d3c:	ldr	r6, [pc, #496]	; 10f34 <main@@Base+0x4ac>
   10d40:	add	r0, pc, r0
   10d44:	add	r6, pc, r6
   10d48:	bl	10a34 <puts@plt>
   10d4c:	mov	r0, r7
   10d50:	bl	1140c <expedir_contentor@@Base>
   10d54:	mov	r5, r0
   10d58:	mov	r0, r6
   10d5c:	bl	10a34 <puts@plt>
   10d60:	mov	r0, r5
   10d64:	bl	11538 <contentor_imprime@@Base>
   10d68:	subs	r4, r4, #1
   10d6c:	bne	10d4c <main@@Base+0x2c4>
   10d70:	ldr	r0, [pc, #448]	; 10f38 <main@@Base+0x4b0>
   10d74:	mov	r4, #4
   10d78:	add	r0, pc, r0
   10d7c:	bl	10a34 <puts@plt>
   10d80:	mov	r0, r7
   10d84:	bl	11104 <imprimeArmazem@@Base>
   10d88:	ldr	r0, [pc, #428]	; 10f3c <main@@Base+0x4b4>
   10d8c:	add	r0, pc, r0
   10d90:	bl	10a34 <puts@plt>
   10d94:	mov	r0, r7
   10d98:	bl	1140c <expedir_contentor@@Base>
   10d9c:	mov	r5, r0
   10da0:	mov	r0, r6
   10da4:	bl	10a34 <puts@plt>
   10da8:	mov	r0, r5
   10dac:	bl	11538 <contentor_imprime@@Base>
   10db0:	subs	r4, r4, #1
   10db4:	bne	10d94 <main@@Base+0x30c>
   10db8:	ldr	r0, [pc, #384]	; 10f40 <main@@Base+0x4b8>
   10dbc:	add	r0, pc, r0
   10dc0:	bl	10a34 <puts@plt>
   10dc4:	mov	r0, r7
   10dc8:	bl	11104 <imprimeArmazem@@Base>
   10dcc:	mov	r0, r7
   10dd0:	bl	112c0 <armazem_vazio@@Base>
   10dd4:	cmp	r0, #0
   10dd8:	bne	10e18 <main@@Base+0x390>
   10ddc:	ldr	r0, [pc, #352]	; 10f44 <main@@Base+0x4bc>
   10de0:	add	r0, pc, r0
   10de4:	bl	10a34 <puts@plt>
   10de8:	mov	r0, #0
   10dec:	add	sp, sp, #28
   10df0:	ldrd	r4, [sp]
   10df4:	ldrd	r6, [sp, #8]
   10df8:	ldrd	r8, [sp, #16]
   10dfc:	ldrd	sl, [sp, #24]
   10e00:	add	sp, sp, #32
   10e04:	pop	{pc}		; (ldr pc, [sp], #4)
   10e08:	ldr	r0, [pc, #312]	; 10f48 <main@@Base+0x4c0>
   10e0c:	add	r0, pc, r0
   10e10:	bl	10a34 <puts@plt>
   10e14:	b	10d20 <main@@Base+0x298>
   10e18:	ldr	r0, [pc, #300]	; 10f4c <main@@Base+0x4c4>
   10e1c:	add	r0, pc, r0
   10e20:	bl	10a34 <puts@plt>
   10e24:	b	10de8 <main@@Base+0x360>
   10e28:	ldr	r0, [pc, #288]	; 10f50 <main@@Base+0x4c8>
   10e2c:	ldr	r1, [r4]
   10e30:	add	r0, pc, r0
   10e34:	bl	10a10 <printf@plt>
   10e38:	b	10d34 <main@@Base+0x2ac>
   10e3c:	ldr	r0, [pc, #272]	; 10f54 <main@@Base+0x4cc>
   10e40:	ldr	r1, [r5]
   10e44:	add	r0, pc, r0
   10e48:	bl	10a10 <printf@plt>
   10e4c:	b	10cf0 <main@@Base+0x268>
   10e50:	ldr	r0, [pc, #256]	; 10f58 <main@@Base+0x4d0>
   10e54:	ldr	r3, [sp, #16]
   10e58:	add	r0, pc, r0
   10e5c:	ldr	r1, [r3]
   10e60:	bl	10a10 <printf@plt>
   10e64:	b	10cdc <main@@Base+0x254>
   10e68:	ldr	r0, [pc, #236]	; 10f5c <main@@Base+0x4d4>
   10e6c:	ldr	r3, [sp, #12]
   10e70:	add	r0, pc, r0
   10e74:	ldr	r1, [r3]
   10e78:	bl	10a10 <printf@plt>
   10e7c:	b	10cc8 <main@@Base+0x240>
   10e80:	ldr	r0, [pc, #216]	; 10f60 <main@@Base+0x4d8>
   10e84:	ldr	r3, [sp, #8]
   10e88:	add	r0, pc, r0
   10e8c:	ldr	r1, [r3]
   10e90:	bl	10a10 <printf@plt>
   10e94:	b	10cb4 <main@@Base+0x22c>
   10e98:	ldr	r0, [pc, #196]	; 10f64 <main@@Base+0x4dc>
   10e9c:	ldr	r3, [sp, #4]
   10ea0:	add	r0, pc, r0
   10ea4:	ldr	r1, [r3]
   10ea8:	bl	10a10 <printf@plt>
   10eac:	b	10ca0 <main@@Base+0x218>
   10eb0:	cmnmi	r6, #0
   10eb4:	cmnmi	sl, #0
   10eb8:	strmi	r8, [r4], #-0
   10ebc:	ldrtmi	r8, [r1], #-0
   10ec0:			; <UNDEFINED> instruction: 0x43be0000
   10ec4:	bicmi	r0, r3, #0
   10ec8:	sbcmi	r0, r8, #0
   10ecc:	adcmi	r0, r0, #0
   10ed0:	tstmi	r6, #0
   10ed4:	orrmi	r0, r7, #0
   10ed8:	bicsmi	r0, r7, #0
   10edc:	movtmi	r0, #32768	; 0x8000
   10ee0:	andeq	r0, r0, ip, lsl #30
   10ee4:	andeq	r0, r0, r0, lsl pc
   10ee8:	andeq	r0, r0, r4, lsl #30
   10eec:	strdeq	r0, [r0], -r4
   10ef0:	andeq	r0, r0, r8, ror #29
   10ef4:	ldrdeq	r0, [r0], -ip
   10ef8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10efc:	andeq	r0, r0, r4, asr #29
   10f00:			; <UNDEFINED> instruction: 0x00000ebc
   10f04:			; <UNDEFINED> instruction: 0x00000eb0
   10f08:	andeq	r0, r0, r8, lsr #29
   10f0c:	muleq	r0, ip, lr
   10f10:	muleq	r0, r4, lr
   10f14:	andeq	r0, r0, r8, lsl #29
   10f18:	andeq	r0, r0, r0, lsl #29
   10f1c:	andeq	r0, r0, r8, lsl #29
   10f20:	andeq	r0, r0, r8, ror lr
   10f24:	andeq	r0, r0, r0, lsl #29
   10f28:	strdeq	r0, [r0], -r8
   10f2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f30:	andeq	r0, r0, ip, asr #28
   10f34:	andeq	r0, r0, ip, ror #28
   10f38:	andeq	r0, r0, r8, asr lr
   10f3c:	andeq	r0, r0, r0, ror #28
   10f40:	andeq	r0, r0, r4, asr lr
   10f44:	andeq	r0, r0, ip, asr lr
   10f48:	andeq	r0, r0, ip, lsl #26
   10f4c:	andeq	r0, r0, r0, lsl lr
   10f50:	andeq	r0, r0, r0, lsl sp
   10f54:	andeq	r0, r0, r0, asr #24
   10f58:	andeq	r0, r0, ip, lsr #24
   10f5c:	andeq	r0, r0, r4, lsl ip
   10f60:	strdeq	r0, [r0], -ip
   10f64:	andeq	r0, r0, r4, ror #23
   10f68:	strdeq	r0, [r0], -r8
   10f6c:	andeq	r0, r0, r4, ror #21
   10f70:	andeq	r0, r0, ip, asr #21
   10f74:			; <UNDEFINED> instruction: 0x00000ab8
   10f78:	andeq	r0, r0, r4, lsr #21
   10f7c:	muleq	r0, r0, sl
   10f80:	andeq	r0, r0, ip, ror sl
   10f84:	ldr	r0, [pc, #-36]	; 10f68 <main@@Base+0x4e0>
   10f88:	ldr	r1, [r6]
   10f8c:	add	r0, pc, r0
   10f90:	bl	10a10 <printf@plt>
   10f94:	b	10c8c <main@@Base+0x204>
   10f98:	ldr	r0, [pc, #-52]	; 10f6c <main@@Base+0x4e4>
   10f9c:	ldr	r3, [sp]
   10fa0:	add	r0, pc, r0
   10fa4:	ldr	r1, [r3]
   10fa8:	bl	10a10 <printf@plt>
   10fac:	b	10c78 <main@@Base+0x1f0>
   10fb0:	ldr	r0, [pc, #-72]	; 10f70 <main@@Base+0x4e8>
   10fb4:	ldr	r1, [r8]
   10fb8:	add	r0, pc, r0
   10fbc:	bl	10a10 <printf@plt>
   10fc0:	b	10c64 <main@@Base+0x1dc>
   10fc4:	ldr	r0, [pc, #-88]	; 10f74 <main@@Base+0x4ec>
   10fc8:	ldr	r1, [r9]
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10a10 <printf@plt>
   10fd4:	b	10c30 <main@@Base+0x1a8>
   10fd8:	ldr	r0, [pc, #-104]	; 10f78 <main@@Base+0x4f0>
   10fdc:	ldr	r1, [r4]
   10fe0:	add	r0, pc, r0
   10fe4:	bl	10a10 <printf@plt>
   10fe8:	b	10c1c <main@@Base+0x194>
   10fec:	ldr	r0, [pc, #-120]	; 10f7c <main@@Base+0x4f4>
   10ff0:	ldr	r1, [sl]
   10ff4:	add	r0, pc, r0
   10ff8:	bl	10a10 <printf@plt>
   10ffc:	b	10c08 <main@@Base+0x180>
   11000:	ldr	r0, [pc, #-136]	; 10f80 <main@@Base+0x4f8>
   11004:	ldr	r1, [fp]
   11008:	add	r0, pc, r0
   1100c:	bl	10a10 <printf@plt>
   11010:	b	10bf4 <main@@Base+0x16c>

00011014 <_start@@Base>:
   11014:	mov	fp, #0
   11018:	mov	lr, #0
   1101c:	pop	{r1}		; (ldr r1, [sp], #4)
   11020:	mov	r2, sp
   11024:	push	{r2}		; (str r2, [sp, #-4]!)
   11028:	push	{r0}		; (str r0, [sp, #-4]!)
   1102c:	ldr	ip, [pc, #16]	; 11044 <_start@@Base+0x30>
   11030:	push	{ip}		; (str ip, [sp, #-4]!)
   11034:	ldr	r0, [pc, #12]	; 11048 <_start@@Base+0x34>
   11038:	ldr	r3, [pc, #12]	; 1104c <_start@@Base+0x38>
   1103c:	bl	10a4c <__libc_start_main@plt>
   11040:	bl	10a7c <abort@plt>
   11044:	muleq	r1, r8, r9
   11048:	andeq	r0, r1, r8, lsl #21
   1104c:	andeq	r1, r1, r8, lsr r9
   11050:	ldr	r3, [pc, #20]	; 1106c <_start@@Base+0x58>
   11054:	ldr	r2, [pc, #20]	; 11070 <_start@@Base+0x5c>
   11058:	add	r3, pc, r3
   1105c:	ldr	r2, [r3, r2]
   11060:	cmp	r2, #0
   11064:	bxeq	lr
   11068:	b	10a58 <__gmon_start__@plt>
   1106c:	andeq	r0, r1, r0, lsr #31
   11070:	andeq	r0, r0, r8, lsr r0
   11074:	ldr	r0, [pc, #24]	; 11094 <_start@@Base+0x80>
   11078:	ldr	r3, [pc, #24]	; 11098 <_start@@Base+0x84>
   1107c:	cmp	r3, r0
   11080:	bxeq	lr
   11084:	ldr	r3, [pc, #16]	; 1109c <_start@@Base+0x88>
   11088:	cmp	r3, #0
   1108c:	bxeq	lr
   11090:	bx	r3
   11094:	andeq	r2, r2, r4, asr #32
   11098:	andeq	r2, r2, r4, asr #32
   1109c:	andeq	r0, r0, r0
   110a0:	ldr	r0, [pc, #36]	; 110cc <_start@@Base+0xb8>
   110a4:	ldr	r1, [pc, #36]	; 110d0 <_start@@Base+0xbc>
   110a8:	sub	r1, r1, r0
   110ac:	asr	r1, r1, #2
   110b0:	add	r1, r1, r1, lsr #31
   110b4:	asrs	r1, r1, #1
   110b8:	bxeq	lr
   110bc:	ldr	r3, [pc, #16]	; 110d4 <_start@@Base+0xc0>
   110c0:	cmp	r3, #0
   110c4:	bxeq	lr
   110c8:	bx	r3
   110cc:	andeq	r2, r2, r4, asr #32
   110d0:	andeq	r2, r2, r4, asr #32
   110d4:	andeq	r0, r0, r0
   110d8:	push	{r4, lr}
   110dc:	ldr	r4, [pc, #24]	; 110fc <_start@@Base+0xe8>
   110e0:	ldrb	r3, [r4]
   110e4:	cmp	r3, #0
   110e8:	popne	{r4, pc}
   110ec:	bl	11074 <_start@@Base+0x60>
   110f0:	mov	r3, #1
   110f4:	strb	r3, [r4]
   110f8:	pop	{r4, pc}
   110fc:	andeq	r2, r2, r4, asr #32
   11100:	b	110a0 <_start@@Base+0x8c>

00011104 <imprimeArmazem@@Base>:
   11104:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11108:	strd	r6, [sp, #8]
   1110c:	strd	r8, [sp, #16]
   11110:	subs	r8, r0, #0
   11114:	strd	sl, [sp, #24]
   11118:	str	lr, [sp, #32]
   1111c:	sub	sp, sp, #12
   11120:	beq	11248 <imprimeArmazem@@Base+0x144>
   11124:	ldr	r4, [r8, #8]
   11128:	cmp	r4, #0
   1112c:	beq	11248 <imprimeArmazem@@Base+0x144>
   11130:	ldr	r9, [r4, #4]
   11134:	mov	r1, #4
   11138:	mov	r0, r9
   1113c:	bl	10a04 <calloc@plt>
   11140:	ldr	r3, [r4]
   11144:	mov	sl, r0
   11148:	cmp	r3, #0
   1114c:	beq	11168 <imprimeArmazem@@Base+0x64>
   11150:	sub	r2, r0, #4
   11154:	ldm	r3, {r1, r3}
   11158:	ldr	r1, [r1, #4]
   1115c:	cmp	r3, #0
   11160:	str	r1, [r2, #4]!
   11164:	bne	11154 <imprimeArmazem@@Base+0x50>
   11168:	mov	r0, #10
   1116c:	bl	10a70 <putchar@plt>
   11170:	ldr	r4, [r8, #4]
   11174:	cmp	r4, #0
   11178:	ble	111dc <imprimeArmazem@@Base+0xd8>
   1117c:	ldr	r3, [pc, #224]	; 11264 <imprimeArmazem@@Base+0x160>
   11180:	add	r6, sl, r9, lsl #2
   11184:	ldr	r5, [pc, #220]	; 11268 <imprimeArmazem@@Base+0x164>
   11188:	ldr	r7, [pc, #220]	; 1126c <imprimeArmazem@@Base+0x168>
   1118c:	add	r3, pc, r3
   11190:	add	r5, pc, r5
   11194:	str	r3, [sp, #4]
   11198:	add	r7, pc, r7
   1119c:	ldr	r0, [sp, #4]
   111a0:	bl	10a10 <printf@plt>
   111a4:	cmp	r9, #0
   111a8:	ble	111cc <imprimeArmazem@@Base+0xc8>
   111ac:	mov	fp, sl
   111b0:	ldr	r2, [fp], #4
   111b4:	mov	r0, r5
   111b8:	cmp	r2, r4
   111bc:	movge	r0, r7
   111c0:	bl	10a10 <printf@plt>
   111c4:	cmp	r6, fp
   111c8:	bne	111b0 <imprimeArmazem@@Base+0xac>
   111cc:	mov	r0, #10
   111d0:	bl	10a70 <putchar@plt>
   111d4:	subs	r4, r4, #1
   111d8:	bne	1119c <imprimeArmazem@@Base+0x98>
   111dc:	ldr	r0, [pc, #140]	; 11270 <imprimeArmazem@@Base+0x16c>
   111e0:	add	r0, pc, r0
   111e4:	bl	10a10 <printf@plt>
   111e8:	ldr	r3, [r8]
   111ec:	cmp	r3, #0
   111f0:	ble	11218 <imprimeArmazem@@Base+0x114>
   111f4:	ldr	r5, [pc, #120]	; 11274 <imprimeArmazem@@Base+0x170>
   111f8:	mov	r4, #0
   111fc:	add	r5, pc, r5
   11200:	mov	r0, r5
   11204:	add	r4, r4, #1
   11208:	bl	10a10 <printf@plt>
   1120c:	ldr	r3, [r8]
   11210:	cmp	r3, r4
   11214:	bgt	11200 <imprimeArmazem@@Base+0xfc>
   11218:	ldr	r0, [pc, #88]	; 11278 <imprimeArmazem@@Base+0x174>
   1121c:	add	r0, pc, r0
   11220:	bl	10a34 <puts@plt>
   11224:	mov	r0, sl
   11228:	add	sp, sp, #12
   1122c:	ldrd	r4, [sp]
   11230:	ldrd	r6, [sp, #8]
   11234:	ldrd	r8, [sp, #16]
   11238:	ldrd	sl, [sp, #24]
   1123c:	ldr	lr, [sp, #32]
   11240:	add	sp, sp, #36	; 0x24
   11244:	b	10a1c <free@plt>
   11248:	add	sp, sp, #12
   1124c:	ldrd	r4, [sp]
   11250:	ldrd	r6, [sp, #8]
   11254:	ldrd	r8, [sp, #16]
   11258:	ldrd	sl, [sp, #24]
   1125c:	add	sp, sp, #32
   11260:	pop	{pc}		; (ldr pc, [sp], #4)
   11264:	andeq	r0, r0, r4, lsl r8
   11268:	andeq	r0, r0, ip, lsl r8
   1126c:	andeq	r0, r0, ip, lsl #16
   11270:	ldrdeq	r0, [r0], -r4
   11274:			; <UNDEFINED> instruction: 0x000007bc
   11278:	andeq	r0, r0, ip, lsl #17

0001127c <armazem_novo@@Base>:
   1127c:	strd	r4, [sp, #-16]!
   11280:	mov	r5, r1
   11284:	str	r6, [sp, #8]
   11288:	mov	r6, r0
   1128c:	mov	r0, #12
   11290:	str	lr, [sp, #12]
   11294:	bl	10a40 <malloc@plt>
   11298:	mov	r4, r0
   1129c:	str	r6, [r0]
   112a0:	str	r5, [r0, #4]
   112a4:	bl	115bc <fila_nova@@Base>
   112a8:	str	r0, [r4, #8]
   112ac:	mov	r0, r4
   112b0:	ldrd	r4, [sp]
   112b4:	ldr	r6, [sp, #8]
   112b8:	add	sp, sp, #12
   112bc:	pop	{pc}		; (ldr pc, [sp], #4)

000112c0 <armazem_vazio@@Base>:
   112c0:	cmp	r0, #0
   112c4:	beq	112ec <armazem_vazio@@Base+0x2c>
   112c8:	str	r4, [sp, #-8]!
   112cc:	ldr	r0, [r0, #8]
   112d0:	str	lr, [sp, #4]
   112d4:	bl	1164c <fila_tamanho@@Base>
   112d8:	clz	r0, r0
   112dc:	ldr	r4, [sp]
   112e0:	add	sp, sp, #4
   112e4:	lsr	r0, r0, #5
   112e8:	pop	{pc}		; (ldr pc, [sp], #4)
   112ec:	mov	r0, #1
   112f0:	bx	lr

000112f4 <armazem_cheio@@Base>:
   112f4:	str	r4, [sp, #-8]!
   112f8:	mov	r4, r0
   112fc:	str	lr, [sp, #4]
   11300:	bl	112c0 <armazem_vazio@@Base>
   11304:	cmp	r0, #0
   11308:	beq	1131c <armazem_cheio@@Base+0x28>
   1130c:	mov	r0, #0
   11310:	ldr	r4, [sp]
   11314:	add	sp, sp, #4
   11318:	pop	{pc}		; (ldr pc, [sp], #4)
   1131c:	ldr	r0, [r4, #8]
   11320:	bl	1164c <fila_tamanho@@Base>
   11324:	ldr	r3, [r4]
   11328:	cmp	r0, r3
   1132c:	bne	1130c <armazem_cheio@@Base+0x18>
   11330:	ldr	r0, [r4, #8]
   11334:	bl	11684 <fila_back@@Base>
   11338:	ldr	r0, [r0, #4]
   1133c:	ldr	r3, [r4, #4]
   11340:	sub	r0, r0, r3
   11344:	clz	r0, r0
   11348:	lsr	r0, r0, #5
   1134c:	b	11310 <armazem_cheio@@Base+0x1c>

00011350 <armazenar_contentor@@Base>:
   11350:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11354:	mov	r4, r0
   11358:	mov	r5, r1
   1135c:	strd	r6, [sp, #8]
   11360:	str	r8, [sp, #16]
   11364:	str	lr, [sp, #20]
   11368:	bl	117e8 <pilha_nova@@Base>
   1136c:	cmp	r5, #0
   11370:	cmpne	r4, #0
   11374:	bne	11390 <armazenar_contentor@@Base+0x40>
   11378:	mov	r0, #0
   1137c:	ldrd	r4, [sp]
   11380:	ldrd	r6, [sp, #8]
   11384:	ldr	r8, [sp, #16]
   11388:	add	sp, sp, #20
   1138c:	pop	{pc}		; (ldr pc, [sp], #4)
   11390:	mov	r6, r0
   11394:	mov	r0, r4
   11398:	bl	112f4 <armazem_cheio@@Base>
   1139c:	cmp	r0, #0
   113a0:	bne	11378 <armazenar_contentor@@Base+0x28>
   113a4:	mov	r0, r4
   113a8:	bl	112c0 <armazem_vazio@@Base>
   113ac:	cmp	r0, #0
   113b0:	bne	113e4 <armazenar_contentor@@Base+0x94>
   113b4:	ldr	r0, [r4, #8]
   113b8:	bl	11684 <fila_back@@Base>
   113bc:	ldr	r2, [r0, #4]
   113c0:	ldr	r3, [r4, #4]
   113c4:	cmp	r2, r3
   113c8:	beq	113fc <armazenar_contentor@@Base+0xac>
   113cc:	ldr	r0, [r4, #8]
   113d0:	bl	11684 <fila_back@@Base>
   113d4:	mov	r1, r5
   113d8:	bl	118b0 <pilha_push@@Base>
   113dc:	mov	r0, #1
   113e0:	b	1137c <armazenar_contentor@@Base+0x2c>
   113e4:	ldr	r7, [r4, #8]
   113e8:	bl	117e8 <pilha_nova@@Base>
   113ec:	mov	r1, r0
   113f0:	mov	r0, r7
   113f4:	bl	116c0 <fila_push@@Base>
   113f8:	b	113b4 <armazenar_contentor@@Base+0x64>
   113fc:	mov	r1, r6
   11400:	ldr	r0, [r4, #8]
   11404:	bl	116c0 <fila_push@@Base>
   11408:	b	113cc <armazenar_contentor@@Base+0x7c>

0001140c <expedir_contentor@@Base>:
   1140c:	strd	r4, [sp, #-16]!
   11410:	mov	r4, r0
   11414:	str	r6, [sp, #8]
   11418:	str	lr, [sp, #12]
   1141c:	bl	112c0 <armazem_vazio@@Base>
   11420:	cmp	r0, #0
   11424:	bne	114a4 <expedir_contentor@@Base+0x98>
   11428:	ldr	r0, [r4, #8]
   1142c:	bl	1165c <fila_front@@Base>
   11430:	bl	11888 <pilha_top@@Base>
   11434:	cmp	r0, #0
   11438:	beq	114a4 <expedir_contentor@@Base+0x98>
   1143c:	ldr	r0, [r4, #8]
   11440:	bl	1165c <fila_front@@Base>
   11444:	bl	11888 <pilha_top@@Base>
   11448:	ldr	r5, [r0]
   1144c:	ldr	r0, [r4, #8]
   11450:	bl	1165c <fila_front@@Base>
   11454:	bl	11888 <pilha_top@@Base>
   11458:	vldr	s0, [r0, #4]
   1145c:	mov	r0, r5
   11460:	bl	114ac <contentor_novo@@Base>
   11464:	mov	r5, r0
   11468:	ldr	r0, [r4, #8]
   1146c:	bl	1165c <fila_front@@Base>
   11470:	ldr	r3, [r0, #4]
   11474:	ldr	r0, [r4, #8]
   11478:	cmp	r3, #1
   1147c:	ble	1149c <expedir_contentor@@Base+0x90>
   11480:	bl	1165c <fila_front@@Base>
   11484:	bl	118f4 <pilha_pop@@Base>
   11488:	mov	r0, r5
   1148c:	ldrd	r4, [sp]
   11490:	ldr	r6, [sp, #8]
   11494:	add	sp, sp, #12
   11498:	pop	{pc}		; (ldr pc, [sp], #4)
   1149c:	bl	11734 <fila_pop@@Base>
   114a0:	b	11488 <expedir_contentor@@Base+0x7c>
   114a4:	mov	r5, #0
   114a8:	b	11488 <expedir_contentor@@Base+0x7c>

000114ac <contentor_novo@@Base>:
   114ac:	strd	r4, [sp, #-16]!
   114b0:	mov	r5, r0
   114b4:	mov	r0, #8
   114b8:	str	r6, [sp, #8]
   114bc:	str	lr, [sp, #12]
   114c0:	vpush	{d8}
   114c4:	vmov.f32	s16, s0
   114c8:	bl	10a40 <malloc@plt>
   114cc:	mov	r4, r0
   114d0:	mov	r0, r5
   114d4:	bl	10a64 <strlen@plt>
   114d8:	add	r6, r0, #1
   114dc:	mov	r0, r6
   114e0:	bl	10a40 <malloc@plt>
   114e4:	mov	r2, r6
   114e8:	mov	r1, r5
   114ec:	str	r0, [r4]
   114f0:	bl	10a28 <memcpy@plt>
   114f4:	vstr	s16, [r4, #4]
   114f8:	mov	r0, r4
   114fc:	vpop	{d8}
   11500:	ldrd	r4, [sp]
   11504:	ldr	r6, [sp, #8]
   11508:	add	sp, sp, #12
   1150c:	pop	{pc}		; (ldr pc, [sp], #4)

00011510 <contentor_apaga@@Base>:
   11510:	str	r4, [sp, #-8]!
   11514:	mov	r4, r0
   11518:	ldr	r0, [r0]
   1151c:	str	lr, [sp, #4]
   11520:	bl	10a1c <free@plt>
   11524:	mov	r0, r4
   11528:	ldr	r4, [sp]
   1152c:	ldr	lr, [sp, #4]
   11530:	add	sp, sp, #8
   11534:	b	10a1c <free@plt>

00011538 <contentor_imprime@@Base>:
   11538:	subs	r3, r0, #0
   1153c:	beq	1155c <contentor_imprime@@Base+0x24>
   11540:	ldr	r0, [pc, #32]	; 11568 <contentor_imprime@@Base+0x30>
   11544:	vldr	s15, [r3, #4]
   11548:	ldr	r1, [r3]
   1154c:	add	r0, pc, r0
   11550:	vcvt.f64.f32	d7, s15
   11554:	vmov	r2, r3, d7
   11558:	b	10a10 <printf@plt>
   1155c:	ldr	r0, [pc, #8]	; 1156c <contentor_imprime@@Base+0x34>
   11560:	add	r0, pc, r0
   11564:	b	10a34 <puts@plt>
   11568:	andeq	r0, r0, r8, lsr #14
   1156c:	andeq	r0, r0, r4, lsl #14

00011570 <fila_novo_elemento@@Base>:
   11570:	str	r4, [sp, #-8]!
   11574:	mov	r4, r0
   11578:	mov	r0, #8
   1157c:	str	lr, [sp, #4]
   11580:	bl	10a40 <malloc@plt>
   11584:	subs	r3, r0, #0
   11588:	beq	115a0 <fila_novo_elemento@@Base+0x30>
   1158c:	cmp	r4, #0
   11590:	str	r4, [r3]
   11594:	movne	r2, #0
   11598:	strne	r2, [r3, #4]
   1159c:	beq	115b0 <fila_novo_elemento@@Base+0x40>
   115a0:	ldr	r4, [sp]
   115a4:	add	sp, sp, #4
   115a8:	mov	r0, r3
   115ac:	pop	{pc}		; (ldr pc, [sp], #4)
   115b0:	bl	10a1c <free@plt>
   115b4:	mov	r3, r4
   115b8:	b	115a0 <fila_novo_elemento@@Base+0x30>

000115bc <fila_nova@@Base>:
   115bc:	mov	r0, #8
   115c0:	str	r4, [sp, #-8]!
   115c4:	str	lr, [sp, #4]
   115c8:	bl	10a40 <malloc@plt>
   115cc:	cmp	r0, #0
   115d0:	beq	115e0 <fila_nova@@Base+0x24>
   115d4:	mov	r3, #0
   115d8:	str	r3, [r0]
   115dc:	str	r3, [r0, #4]
   115e0:	ldr	r4, [sp]
   115e4:	add	sp, sp, #4
   115e8:	pop	{pc}		; (ldr pc, [sp], #4)

000115ec <fila_apaga@@Base>:
   115ec:	strd	r4, [sp, #-16]!
   115f0:	subs	r5, r0, #0
   115f4:	str	r6, [sp, #8]
   115f8:	str	lr, [sp, #12]
   115fc:	bne	11618 <fila_apaga@@Base+0x2c>
   11600:	b	1163c <fila_apaga@@Base+0x50>
   11604:	ldm	r4, {r0, r3}
   11608:	str	r3, [r5]
   1160c:	bl	11818 <pilha_apaga@@Base>
   11610:	mov	r0, r4
   11614:	bl	10a1c <free@plt>
   11618:	ldr	r4, [r5]
   1161c:	cmp	r4, #0
   11620:	bne	11604 <fila_apaga@@Base+0x18>
   11624:	mov	r0, r5
   11628:	ldrd	r4, [sp]
   1162c:	ldr	r6, [sp, #8]
   11630:	ldr	lr, [sp, #12]
   11634:	add	sp, sp, #16
   11638:	b	10a1c <free@plt>
   1163c:	ldrd	r4, [sp]
   11640:	ldr	r6, [sp, #8]
   11644:	add	sp, sp, #12
   11648:	pop	{pc}		; (ldr pc, [sp], #4)

0001164c <fila_tamanho@@Base>:
   1164c:	cmp	r0, #0
   11650:	ldrne	r0, [r0, #4]
   11654:	mvneq	r0, #0
   11658:	bx	lr

0001165c <fila_front@@Base>:
   1165c:	subs	r3, r0, #0
   11660:	beq	1167c <fila_front@@Base+0x20>
   11664:	ldr	r0, [r3, #4]
   11668:	cmp	r0, #0
   1166c:	beq	11680 <fila_front@@Base+0x24>
   11670:	ldr	r3, [r3]
   11674:	ldr	r0, [r3]
   11678:	bx	lr
   1167c:	mov	r0, r3
   11680:	bx	lr

00011684 <fila_back@@Base>:
   11684:	subs	r3, r0, #0
   11688:	beq	116b8 <fila_back@@Base+0x34>
   1168c:	ldr	r0, [r3, #4]
   11690:	cmp	r0, #0
   11694:	beq	116bc <fila_back@@Base+0x38>
   11698:	ldr	r2, [r3]
   1169c:	b	116a4 <fila_back@@Base+0x20>
   116a0:	mov	r2, r3
   116a4:	ldr	r3, [r2, #4]
   116a8:	cmp	r3, #0
   116ac:	bne	116a0 <fila_back@@Base+0x1c>
   116b0:	ldr	r0, [r2]
   116b4:	bx	lr
   116b8:	mov	r0, r3
   116bc:	bx	lr

000116c0 <fila_push@@Base>:
   116c0:	strd	r4, [sp, #-16]!
   116c4:	subs	r5, r0, #0
   116c8:	str	r6, [sp, #8]
   116cc:	str	lr, [sp, #12]
   116d0:	beq	11700 <fila_push@@Base+0x40>
   116d4:	mov	r0, r1
   116d8:	ldr	r4, [r5]
   116dc:	bl	11570 <fila_novo_elemento@@Base>
   116e0:	cmp	r0, #0
   116e4:	beq	11700 <fila_push@@Base+0x40>
   116e8:	ldr	r3, [r5, #4]
   116ec:	cmp	r4, #0
   116f0:	streq	r0, [r5]
   116f4:	add	r3, r3, #1
   116f8:	str	r3, [r5, #4]
   116fc:	bne	11714 <fila_push@@Base+0x54>
   11700:	ldrd	r4, [sp]
   11704:	ldr	r6, [sp, #8]
   11708:	add	sp, sp, #12
   1170c:	pop	{pc}		; (ldr pc, [sp], #4)
   11710:	mov	r4, r3
   11714:	ldr	r3, [r4, #4]
   11718:	cmp	r3, #0
   1171c:	bne	11710 <fila_push@@Base+0x50>
   11720:	str	r0, [r4, #4]
   11724:	ldrd	r4, [sp]
   11728:	ldr	r6, [sp, #8]
   1172c:	add	sp, sp, #12
   11730:	pop	{pc}		; (ldr pc, [sp], #4)

00011734 <fila_pop@@Base>:
   11734:	subs	r3, r0, #0
   11738:	bxeq	lr
   1173c:	ldr	r2, [r3, #4]
   11740:	cmp	r2, #0
   11744:	bxeq	lr
   11748:	str	r4, [sp, #-8]!
   1174c:	sub	r2, r2, #1
   11750:	ldr	r4, [r3]
   11754:	ldr	r0, [r4]
   11758:	str	lr, [sp, #4]
   1175c:	str	r2, [r3, #4]
   11760:	ldr	r2, [r4, #4]
   11764:	str	r2, [r3]
   11768:	bl	11818 <pilha_apaga@@Base>
   1176c:	mov	r0, r4
   11770:	ldr	r4, [sp]
   11774:	ldr	lr, [sp, #4]
   11778:	add	sp, sp, #8
   1177c:	b	10a1c <free@plt>

00011780 <pilha_novo_elemento@@Base>:
   11780:	strd	r4, [sp, #-16]!
   11784:	mov	r5, r0
   11788:	mov	r0, #8
   1178c:	str	r6, [sp, #8]
   11790:	str	lr, [sp, #12]
   11794:	bl	10a40 <malloc@plt>
   11798:	subs	r4, r0, #0
   1179c:	beq	117c4 <pilha_novo_elemento@@Base+0x44>
   117a0:	ldr	r0, [r5]
   117a4:	vldr	s0, [r5, #4]
   117a8:	bl	114ac <contentor_novo@@Base>
   117ac:	cmp	r0, #0
   117b0:	mov	r3, r0
   117b4:	str	r0, [r4]
   117b8:	movne	r3, #0
   117bc:	strne	r3, [r4, #4]
   117c0:	beq	117d8 <pilha_novo_elemento@@Base+0x58>
   117c4:	mov	r0, r4
   117c8:	ldrd	r4, [sp]
   117cc:	ldr	r6, [sp, #8]
   117d0:	add	sp, sp, #12
   117d4:	pop	{pc}		; (ldr pc, [sp], #4)
   117d8:	mov	r0, r4
   117dc:	mov	r4, r3
   117e0:	bl	10a1c <free@plt>
   117e4:	b	117c4 <pilha_novo_elemento@@Base+0x44>

000117e8 <pilha_nova@@Base>:
   117e8:	mov	r0, #8
   117ec:	str	r4, [sp, #-8]!
   117f0:	str	lr, [sp, #4]
   117f4:	bl	10a40 <malloc@plt>
   117f8:	cmp	r0, #0
   117fc:	beq	1180c <pilha_nova@@Base+0x24>
   11800:	mov	r3, #0
   11804:	str	r3, [r0]
   11808:	str	r3, [r0, #4]
   1180c:	ldr	r4, [sp]
   11810:	add	sp, sp, #4
   11814:	pop	{pc}		; (ldr pc, [sp], #4)

00011818 <pilha_apaga@@Base>:
   11818:	strd	r4, [sp, #-16]!
   1181c:	subs	r5, r0, #0
   11820:	str	r6, [sp, #8]
   11824:	str	lr, [sp, #12]
   11828:	bne	11844 <pilha_apaga@@Base+0x2c>
   1182c:	b	11868 <pilha_apaga@@Base+0x50>
   11830:	ldm	r4, {r0, r3}
   11834:	str	r3, [r5]
   11838:	bl	11510 <contentor_apaga@@Base>
   1183c:	mov	r0, r4
   11840:	bl	10a1c <free@plt>
   11844:	ldr	r4, [r5]
   11848:	cmp	r4, #0
   1184c:	bne	11830 <pilha_apaga@@Base+0x18>
   11850:	mov	r0, r5
   11854:	ldrd	r4, [sp]
   11858:	ldr	r6, [sp, #8]
   1185c:	ldr	lr, [sp, #12]
   11860:	add	sp, sp, #16
   11864:	b	10a1c <free@plt>
   11868:	ldrd	r4, [sp]
   1186c:	ldr	r6, [sp, #8]
   11870:	add	sp, sp, #12
   11874:	pop	{pc}		; (ldr pc, [sp], #4)

00011878 <pilha_tamanho@@Base>:
   11878:	cmp	r0, #0
   1187c:	ldrne	r0, [r0, #4]
   11880:	mvneq	r0, #0
   11884:	bx	lr

00011888 <pilha_top@@Base>:
   11888:	subs	r3, r0, #0
   1188c:	beq	118a8 <pilha_top@@Base+0x20>
   11890:	ldr	r0, [r3, #4]
   11894:	cmp	r0, #0
   11898:	beq	118ac <pilha_top@@Base+0x24>
   1189c:	ldr	r3, [r3]
   118a0:	ldr	r0, [r3]
   118a4:	bx	lr
   118a8:	mov	r0, r3
   118ac:	bx	lr

000118b0 <pilha_push@@Base>:
   118b0:	str	r4, [sp, #-8]!
   118b4:	subs	r4, r0, #0
   118b8:	str	lr, [sp, #4]
   118bc:	beq	118e8 <pilha_push@@Base+0x38>
   118c0:	mov	r0, r1
   118c4:	bl	11780 <pilha_novo_elemento@@Base>
   118c8:	cmp	r0, #0
   118cc:	beq	118e8 <pilha_push@@Base+0x38>
   118d0:	ldrd	r2, [r4]
   118d4:	add	r3, r3, #1
   118d8:	cmp	r2, #0
   118dc:	str	r3, [r4, #4]
   118e0:	strne	r2, [r0, #4]
   118e4:	str	r0, [r4]
   118e8:	ldr	r4, [sp]
   118ec:	add	sp, sp, #4
   118f0:	pop	{pc}		; (ldr pc, [sp], #4)

000118f4 <pilha_pop@@Base>:
   118f4:	subs	r3, r0, #0
   118f8:	bxeq	lr
   118fc:	ldr	r2, [r3, #4]
   11900:	cmp	r2, #0
   11904:	bxeq	lr
   11908:	str	r4, [sp, #-8]!
   1190c:	sub	r2, r2, #1
   11910:	ldr	r4, [r3]
   11914:	ldrd	r0, [r4]
   11918:	str	lr, [sp, #4]
   1191c:	stm	r3, {r1, r2}
   11920:	bl	11510 <contentor_apaga@@Base>
   11924:	mov	r0, r4
   11928:	ldr	r4, [sp]
   1192c:	ldr	lr, [sp, #4]
   11930:	add	sp, sp, #8
   11934:	b	10a1c <free@plt>

00011938 <__libc_csu_init@@Base>:
   11938:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1193c:	mov	r7, r0
   11940:	ldr	r6, [pc, #72]	; 11990 <__libc_csu_init@@Base+0x58>
   11944:	ldr	r5, [pc, #72]	; 11994 <__libc_csu_init@@Base+0x5c>
   11948:	add	r6, pc, r6
   1194c:	add	r5, pc, r5
   11950:	sub	r6, r6, r5
   11954:	mov	r8, r1
   11958:	mov	r9, r2
   1195c:	bl	109e4 <calloc@plt-0x20>
   11960:	asrs	r6, r6, #2
   11964:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11968:	mov	r4, #0
   1196c:	add	r4, r4, #1
   11970:	ldr	r3, [r5], #4
   11974:	mov	r2, r9
   11978:	mov	r1, r8
   1197c:	mov	r0, r7
   11980:	blx	r3
   11984:	cmp	r6, r4
   11988:	bne	1196c <__libc_csu_init@@Base+0x34>
   1198c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11990:	andeq	r0, r1, r4, asr #11
   11994:			; <UNDEFINED> instruction: 0x000105bc

00011998 <__libc_csu_fini@@Base>:
   11998:	bx	lr

Disassembly of section .fini:

0001199c <.fini>:
   1199c:	push	{r3, lr}
   119a0:	pop	{r3, pc}
