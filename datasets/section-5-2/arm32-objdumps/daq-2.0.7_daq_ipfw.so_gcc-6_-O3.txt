
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000660 <_init>:
 660:	push	{r3, lr}
 664:	bl	788 <call_weak_fn>
 668:	pop	{r3, pc}

Disassembly of section .plt:

0000066c <.plt>:
 66c:	push	{lr}		; (str lr, [sp, #-4]!)
 670:	ldr	lr, [pc, #4]	; 67c <.plt+0x10>
 674:	add	lr, pc, lr
 678:	ldr	pc, [lr, #8]!
 67c:	.word	0x00011984

00000680 <calloc@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2436]!	; 0x984

0000068c <strcmp@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2428]!	; 0x97c

00000698 <__cxa_finalize@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2420]!	; 0x974

000006a4 <strtol@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2412]!	; 0x96c

000006b0 <free@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2404]!	; 0x964

000006bc <memcpy@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2396]!	; 0x95c

000006c8 <select@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2388]!	; 0x954

000006d4 <recvfrom@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2380]!	; 0x94c

000006e0 <strdup@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2372]!	; 0x944

000006ec <gettimeofday@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2364]!	; 0x93c

000006f8 <malloc@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2356]!	; 0x934

00000704 <sfbpf_compile@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2348]!	; 0x92c

00000710 <strerror@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2340]!	; 0x924

0000071c <__gmon_start__@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2332]!	; 0x91c

00000728 <__errno_location@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2324]!	; 0x914

00000734 <snprintf@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2316]!	; 0x90c

00000740 <bind@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2308]!	; 0x904

0000074c <memset@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2300]!	; 0x8fc

00000758 <sendto@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2292]!	; 0x8f4

00000764 <sfbpf_filter@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2284]!	; 0x8ec

00000770 <socket@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2276]!	; 0x8e4

0000077c <close@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2268]!	; 0x8dc

Disassembly of section .text:

00000788 <call_weak_fn>:
     788:	ldr	r3, [pc, #20]	; 7a4 <call_weak_fn+0x1c>
     78c:	ldr	r2, [pc, #20]	; 7a8 <call_weak_fn+0x20>
     790:	add	r3, pc, r3
     794:	ldr	r2, [r3, r2]
     798:	cmp	r2, #0
     79c:	bxeq	lr
     7a0:	b	71c <__gmon_start__@plt>
     7a4:	.word	0x00011868
     7a8:	.word	0x0000006c

000007ac <deregister_tm_clones>:
     7ac:	ldr	r3, [pc, #52]	; 7e8 <deregister_tm_clones+0x3c>
     7b0:	ldr	r0, [pc, #52]	; 7ec <deregister_tm_clones+0x40>
     7b4:	add	r3, pc, r3
     7b8:	add	r0, pc, r0
     7bc:	add	r3, r3, #3
     7c0:	sub	r3, r3, r0
     7c4:	cmp	r3, #6
     7c8:	ldr	r3, [pc, #32]	; 7f0 <deregister_tm_clones+0x44>
     7cc:	add	r3, pc, r3
     7d0:	bxls	lr
     7d4:	ldr	r2, [pc, #24]	; 7f4 <deregister_tm_clones+0x48>
     7d8:	ldr	r3, [r3, r2]
     7dc:	cmp	r3, #0
     7e0:	bxeq	lr
     7e4:	bx	r3
     7e8:	.word	0x00011928
     7ec:	.word	0x00011924
     7f0:	.word	0x0001182c
     7f4:	.word	0x00000068

000007f8 <register_tm_clones>:
     7f8:	ldr	r1, [pc, #56]	; 838 <register_tm_clones+0x40>
     7fc:	ldr	r0, [pc, #56]	; 83c <register_tm_clones+0x44>
     800:	add	r1, pc, r1
     804:	add	r0, pc, r0
     808:	sub	r1, r1, r0
     80c:	ldr	r3, [pc, #44]	; 840 <register_tm_clones+0x48>
     810:	asr	r1, r1, #2
     814:	add	r3, pc, r3
     818:	add	r1, r1, r1, lsr #31
     81c:	asrs	r1, r1, #1
     820:	bxeq	lr
     824:	ldr	r2, [pc, #24]	; 844 <register_tm_clones+0x4c>
     828:	ldr	r3, [r3, r2]
     82c:	cmp	r3, #0
     830:	bxeq	lr
     834:	bx	r3
     838:	.word	0x000118dc
     83c:	.word	0x000118d8
     840:	.word	0x000117e4
     844:	.word	0x00000074

00000848 <__do_global_dtors_aux>:
     848:	ldr	r3, [pc, #76]	; 89c <__do_global_dtors_aux+0x54>
     84c:	ldr	r2, [pc, #76]	; 8a0 <__do_global_dtors_aux+0x58>
     850:	add	r3, pc, r3
     854:	add	r2, pc, r2
     858:	ldrb	r3, [r3]
     85c:	cmp	r3, #0
     860:	bxne	lr
     864:	ldr	r3, [pc, #56]	; 8a4 <__do_global_dtors_aux+0x5c>
     868:	push	{r4, lr}
     86c:	ldr	r3, [r2, r3]
     870:	cmp	r3, #0
     874:	beq	884 <__do_global_dtors_aux+0x3c>
     878:	ldr	r3, [pc, #40]	; 8a8 <__do_global_dtors_aux+0x60>
     87c:	ldr	r0, [pc, r3]
     880:	bl	698 <__cxa_finalize@plt>
     884:	bl	7ac <deregister_tm_clones>
     888:	ldr	r3, [pc, #28]	; 8ac <__do_global_dtors_aux+0x64>
     88c:	mov	r2, #1
     890:	add	r3, pc, r3
     894:	strb	r2, [r3]
     898:	pop	{r4, pc}
     89c:	.word	0x0001188c
     8a0:	.word	0x000117a4
     8a4:	.word	0x00000064
     8a8:	.word	0x000117f4
     8ac:	.word	0x0001184c

000008b0 <frame_dummy>:
     8b0:	ldr	r0, [pc, #56]	; 8f0 <frame_dummy+0x40>
     8b4:	ldr	r3, [pc, #56]	; 8f4 <frame_dummy+0x44>
     8b8:	add	r0, pc, r0
     8bc:	ldr	r2, [r0]
     8c0:	add	r3, pc, r3
     8c4:	cmp	r2, #0
     8c8:	bne	8d0 <frame_dummy+0x20>
     8cc:	b	7f8 <register_tm_clones>
     8d0:	ldr	r2, [pc, #32]	; 8f8 <frame_dummy+0x48>
     8d4:	ldr	r3, [r3, r2]
     8d8:	cmp	r3, #0
     8dc:	beq	8cc <frame_dummy+0x1c>
     8e0:	push	{r4, lr}
     8e4:	blx	r3
     8e8:	pop	{r4, lr}
     8ec:	b	7f8 <register_tm_clones>
     8f0:	.word	0x00011644
     8f4:	.word	0x00011738
     8f8:	.word	0x00000070

000008fc <ipfw_daq_breakloop>:
     8fc:	mov	r3, #0
     900:	str	r3, [r0, #12]
     904:	mov	r0, r3
     908:	bx	lr

0000090c <ipfw_daq_check_status>:
     90c:	ldr	r0, [r0, #316]	; 0x13c
     910:	bx	lr

00000914 <ipfw_daq_get_stats>:
     914:	mov	r3, r1
     918:	push	{r4, lr}
     91c:	add	r1, r0, #320	; 0x140
     920:	mov	r2, #96	; 0x60
     924:	mov	r0, r3
     928:	bl	6bc <memcpy@plt>
     92c:	mov	r0, #0
     930:	pop	{r4, pc}

00000934 <ipfw_daq_get_snaplen>:
     934:	ldr	r0, [r0, #24]
     938:	bx	lr

0000093c <ipfw_daq_get_capabilities>:
     93c:	ldr	r0, [pc]	; 944 <ipfw_daq_get_capabilities+0x8>
     940:	bx	lr
     944:	.word	0x000002e7

00000948 <ipfw_daq_get_datalink_type>:
     948:	mov	r0, #228	; 0xe4
     94c:	bx	lr

00000950 <ipfw_daq_get_errbuf>:
     950:	add	r0, r0, #36	; 0x24
     954:	bx	lr

00000958 <ipfw_daq_get_device_index>:
     958:	mvn	r0, #3
     95c:	bx	lr

00000960 <ipfw_daq_set_errbuf>:
     960:	subs	r3, r1, #0
     964:	add	r0, r0, #36	; 0x24
     968:	beq	97c <ipfw_daq_set_errbuf+0x1c>
     96c:	ldr	r2, [pc, #20]	; 988 <ipfw_daq_set_errbuf+0x28>
     970:	mov	r1, #256	; 0x100
     974:	add	r2, pc, r2
     978:	b	734 <snprintf@plt>
     97c:	ldr	r3, [pc, #8]	; 98c <ipfw_daq_set_errbuf+0x2c>
     980:	add	r3, pc, r3
     984:	b	96c <ipfw_daq_set_errbuf+0xc>
     988:	.word	0x0000090c
     98c:	.word	0x000009a0

00000990 <ipfw_daq_reset_stats>:
     990:	add	r0, r0, #320	; 0x140
     994:	mov	r2, #96	; 0x60
     998:	mov	r1, #0
     99c:	b	74c <memset@plt>

000009a0 <ipfw_daq_shutdown>:
     9a0:	push	{r4, lr}
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #32]
     9ac:	cmp	r0, #0
     9b0:	beq	9b8 <ipfw_daq_shutdown+0x18>
     9b4:	bl	6b0 <free@plt>
     9b8:	ldr	r0, [r4, #28]
     9bc:	cmp	r0, #0
     9c0:	beq	9c8 <ipfw_daq_shutdown+0x28>
     9c4:	bl	6b0 <free@plt>
     9c8:	mov	r0, r4
     9cc:	pop	{r4, lr}
     9d0:	b	6b0 <free@plt>

000009d4 <ipfw_daq_stop>:
     9d4:	push	{r4, lr}
     9d8:	mov	r4, r0
     9dc:	ldr	r0, [r0]
     9e0:	bl	77c <close@plt>
     9e4:	mvn	r2, #0
     9e8:	mov	r3, #3
     9ec:	str	r2, [r4]
     9f0:	str	r3, [r4, #316]	; 0x13c
     9f4:	mov	r0, #0
     9f8:	pop	{r4, pc}

000009fc <ipfw_daq_set_filter>:
     9fc:	push	{r4, r5, r6, lr}
     a00:	mov	ip, #0
     a04:	sub	sp, sp, #16
     a08:	mov	r6, r1
     a0c:	mov	r1, #1
     a10:	add	r5, sp, #8
     a14:	mov	r4, r0
     a18:	mov	r3, r6
     a1c:	ldr	r0, [r0, #24]
     a20:	mov	r2, r5
     a24:	stm	sp, {r1, ip}
     a28:	mov	r1, #228	; 0xe4
     a2c:	bl	704 <sfbpf_compile@plt>
     a30:	cmp	r0, #0
     a34:	blt	a80 <ipfw_daq_set_filter+0x84>
     a38:	ldr	r0, [r4, #32]
     a3c:	cmp	r0, #0
     a40:	beq	a48 <ipfw_daq_set_filter+0x4c>
     a44:	bl	6b0 <free@plt>
     a48:	ldr	r0, [r4, #296]	; 0x128
     a4c:	cmp	r0, #0
     a50:	beq	a58 <ipfw_daq_set_filter+0x5c>
     a54:	bl	6b0 <free@plt>
     a58:	mov	r0, r6
     a5c:	bl	6e0 <strdup@plt>
     a60:	add	r3, r4, #292	; 0x124
     a64:	mov	r2, #0
     a68:	str	r0, [r4, #32]
     a6c:	ldm	r5, {r0, r1}
     a70:	stm	r3, {r0, r1}
     a74:	mov	r0, r2
     a78:	add	sp, sp, #16
     a7c:	pop	{r4, r5, r6, pc}
     a80:	mvn	r2, #0
     a84:	b	a74 <ipfw_daq_set_filter+0x78>

00000a88 <ipfw_daq_acquire>:
     a88:	subs	r3, r1, #0
     a8c:	ldr	r1, [pc, #808]	; dbc <ipfw_daq_acquire+0x334>
     a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a94:	sub	sp, sp, #220	; 0xdc
     a98:	add	r1, pc, r1
     a9c:	str	r2, [sp, #8]
     aa0:	add	r2, r1, #48	; 0x30
     aa4:	str	r2, [sp, #12]
     aa8:	ldr	r2, [pc, #784]	; dc0 <ipfw_daq_acquire+0x338>
     aac:	ldr	r8, [pc, #784]	; dc4 <ipfw_daq_acquire+0x33c>
     ab0:	add	r2, pc, r2
     ab4:	str	r2, [sp, #16]
     ab8:	ldr	r2, [pc, #776]	; dc8 <ipfw_daq_acquire+0x340>
     abc:	mov	r4, r0
     ac0:	add	r5, sp, #88	; 0x58
     ac4:	add	r8, pc, r8
     ac8:	mvneq	r3, #0
     acc:	mov	r6, #0
     ad0:	add	r2, pc, r2
     ad4:	str	r3, [r0, #12]
     ad8:	str	r6, [sp, #32]
     adc:	str	r2, [sp, #20]
     ae0:	mov	sl, #128	; 0x80
     ae4:	mov	r7, #0
     ae8:	mov	r9, #1
     aec:	add	fp, sp, #28
     af0:	b	b9c <ipfw_daq_acquire+0x114>
     af4:	bl	74c <memset@plt>
     af8:	ldr	r0, [r4]
     afc:	str	fp, [sp]
     b00:	cmp	r0, #0
     b04:	add	r1, r0, #31
     b08:	movge	r1, r0
     b0c:	asr	r3, r0, #31
     b10:	asr	r1, r1, #5
     b14:	lsr	r2, r3, #27
     b18:	add	r3, sp, #216	; 0xd8
     b1c:	add	r1, r3, r1, lsl #2
     b20:	add	r3, r0, r2
     b24:	and	r3, r3, #31
     b28:	ldr	lr, [r1, #-128]	; 0xffffff80
     b2c:	sub	r3, r3, r2
     b30:	ldr	ip, [r4, #20]
     b34:	orr	lr, lr, r9, lsl r3
     b38:	add	r0, r0, #1
     b3c:	str	lr, [r1, #-128]	; 0xffffff80
     b40:	mov	r3, r7
     b44:	mov	r2, #0
     b48:	mov	r1, r5
     b4c:	str	ip, [sp, #28]
     b50:	bl	6c8 <select@plt>
     b54:	cmp	r0, #0
     b58:	blt	cf4 <ipfw_daq_acquire+0x26c>
     b5c:	ldr	r0, [r4]
     b60:	add	r2, sp, #216	; 0xd8
     b64:	cmp	r0, #0
     b68:	add	r3, r0, #31
     b6c:	movge	r3, r0
     b70:	asr	r1, r0, #31
     b74:	asr	r3, r3, #5
     b78:	lsr	r1, r1, #27
     b7c:	add	r3, r2, r3, lsl #2
     b80:	add	r2, r0, r1
     b84:	and	r2, r2, #31
     b88:	ldr	ip, [r3, #-128]	; 0xffffff80
     b8c:	sub	r3, r2, r1
     b90:	ands	r3, ip, r9, lsl r3
     b94:	bne	bc8 <ipfw_daq_acquire+0x140>
     b98:	ldr	r3, [r4, #12]
     b9c:	cmp	r6, r3
     ba0:	movge	ip, #0
     ba4:	movlt	ip, #1
     ba8:	orrs	r3, ip, r3, lsr #31
     bac:	mov	r2, sl
     bb0:	mov	r1, r7
     bb4:	mov	r0, r5
     bb8:	bne	af4 <ipfw_daq_acquire+0x6c>
     bbc:	mov	r0, #0
     bc0:	add	sp, sp, #220	; 0xdc
     bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     bc8:	add	r3, sp, #216	; 0xd8
     bcc:	mov	ip, #16
     bd0:	add	r7, r4, #300	; 0x12c
     bd4:	str	ip, [r3, #-192]!	; 0xffffff40
     bd8:	ldr	r1, [r4, #28]
     bdc:	ldr	r2, [r4, #24]
     be0:	str	r3, [sp, #4]
     be4:	str	r7, [sp]
     be8:	mov	r3, #0
     bec:	bl	6d4 <recvfrom@plt>
     bf0:	cmn	r0, #1
     bf4:	mov	r9, r0
     bf8:	beq	d1c <ipfw_daq_acquire+0x294>
     bfc:	mov	sl, #0
     c00:	mov	r1, sl
     c04:	str	sl, [r8]
     c08:	str	sl, [r8, #4]
     c0c:	mov	r0, r8
     c10:	bl	6ec <gettimeofday@plt>
     c14:	add	r0, r4, #320	; 0x140
     c18:	ldr	r1, [r8]
     c1c:	ldrd	r2, [r0]
     c20:	str	sl, [sp, #68]	; 0x44
     c24:	strh	sl, [sp, #84]	; 0x54
     c28:	adds	r2, r2, #1
     c2c:	adc	r3, r3, #0
     c30:	str	r9, [sp, #44]	; 0x2c
     c34:	strd	r2, [r0]
     c38:	ldr	r0, [r4, #296]	; 0x128
     c3c:	ldr	r2, [r8, #4]
     c40:	mvn	r3, #0
     c44:	cmp	r0, sl
     c48:	str	r9, [sp, #48]	; 0x30
     c4c:	str	r1, [sp, #36]	; 0x24
     c50:	str	r2, [sp, #40]	; 0x28
     c54:	str	r3, [sp, #52]	; 0x34
     c58:	str	r3, [sp, #56]	; 0x38
     c5c:	str	r3, [sp, #60]	; 0x3c
     c60:	str	r3, [sp, #64]	; 0x40
     c64:	beq	c80 <ipfw_daq_acquire+0x1f8>
     c68:	mov	r3, r9
     c6c:	mov	r2, r9
     c70:	ldr	r1, [r4, #28]
     c74:	bl	764 <sfbpf_filter@plt>
     c78:	cmp	r0, sl
     c7c:	beq	d58 <ipfw_daq_acquire+0x2d0>
     c80:	ldr	r2, [r4, #28]
     c84:	add	r1, sp, #36	; 0x24
     c88:	ldr	r3, [sp, #8]
     c8c:	mov	r0, #0
     c90:	blx	r3
     c94:	add	r1, r4, #336	; 0x150
     c98:	cmp	r0, #6
     c9c:	movhi	r0, #1
     ca0:	add	ip, r4, r0, lsl #3
     ca4:	add	ip, ip, #368	; 0x170
     ca8:	ldrd	r2, [ip, #-8]
     cac:	adds	r2, r2, #1
     cb0:	adc	r3, r3, #0
     cb4:	strd	r2, [ip, #-8]
     cb8:	ldrd	r2, [r1]
     cbc:	adds	r2, r2, #1
     cc0:	adc	r3, r3, #0
     cc4:	strd	r2, [r1]
     cc8:	ldr	r3, [r4, #16]
     ccc:	cmp	r3, #0
     cd0:	bne	d6c <ipfw_daq_acquire+0x2e4>
     cd4:	ldr	r3, [sp, #20]
     cd8:	add	r0, r3, r0, lsl #2
     cdc:	ldr	r3, [r0, #20]
     ce0:	cmp	r3, #0
     ce4:	bne	d6c <ipfw_daq_acquire+0x2e4>
     ce8:	ldr	r3, [r4, #12]
     cec:	add	r6, r6, #1
     cf0:	b	ae0 <ipfw_daq_acquire+0x58>
     cf4:	bl	728 <__errno_location@plt>
     cf8:	ldr	r0, [r0]
     cfc:	cmp	r0, #4
     d00:	beq	bbc <ipfw_daq_acquire+0x134>
     d04:	bl	710 <strerror@plt>
     d08:	ldr	r3, [pc, #188]	; dcc <ipfw_daq_acquire+0x344>
     d0c:	ldr	r2, [pc, #188]	; dd0 <ipfw_daq_acquire+0x348>
     d10:	add	r3, pc, r3
     d14:	add	r2, pc, r2
     d18:	b	d40 <ipfw_daq_acquire+0x2b8>
     d1c:	bl	728 <__errno_location@plt>
     d20:	ldr	r0, [r0]
     d24:	cmp	r0, #4
     d28:	beq	bfc <ipfw_daq_acquire+0x174>
     d2c:	bl	710 <strerror@plt>
     d30:	ldr	r3, [pc, #156]	; dd4 <ipfw_daq_acquire+0x34c>
     d34:	ldr	r2, [pc, #156]	; dd8 <ipfw_daq_acquire+0x350>
     d38:	add	r3, pc, r3
     d3c:	add	r2, pc, r2
     d40:	str	r0, [sp]
     d44:	mov	r1, #256	; 0x100
     d48:	add	r0, r4, #36	; 0x24
     d4c:	bl	734 <snprintf@plt>
     d50:	mvn	r0, #0
     d54:	b	bc0 <ipfw_daq_acquire+0x138>
     d58:	add	r1, r4, #352	; 0x160
     d5c:	ldrd	r2, [r1, #-8]
     d60:	adds	r2, r2, #1
     d64:	adc	r3, r3, #0
     d68:	strd	r2, [r1, #-8]
     d6c:	mov	r3, #16
     d70:	ldr	r1, [r4, #28]
     d74:	ldr	r0, [r4]
     d78:	ldr	r2, [sp, #48]	; 0x30
     d7c:	str	r3, [sp, #4]
     d80:	str	r7, [sp]
     d84:	mov	r3, #0
     d88:	bl	758 <sendto@plt>
     d8c:	cmn	r0, #1
     d90:	bne	ce8 <ipfw_daq_acquire+0x260>
     d94:	bl	728 <__errno_location@plt>
     d98:	ldr	r0, [r0]
     d9c:	bl	710 <strerror@plt>
     da0:	ldr	r3, [sp, #12]
     da4:	ldr	r2, [sp, #16]
     da8:	mov	r1, #256	; 0x100
     dac:	str	r0, [sp]
     db0:	add	r0, r4, #36	; 0x24
     db4:	bl	734 <snprintf@plt>
     db8:	b	ce8 <ipfw_daq_acquire+0x260>
     dbc:	.word	0x0000076c
     dc0:	.word	0x00000824
     dc4:	.word	0x0001161c
     dc8:	.word	0x00000734
     dcc:	.word	0x000004f4
     dd0:	.word	0x00000570
     dd4:	.word	0x000004cc
     dd8:	.word	0x00000570

00000ddc <ipfw_daq_start>:
     ddc:	push	{r4, r5, lr}
     de0:	mov	r2, #254	; 0xfe
     de4:	mov	r5, r0
     de8:	sub	sp, sp, #12
     dec:	ldr	r0, [r0, #8]
     df0:	mov	r1, #3
     df4:	bl	770 <socket@plt>
     df8:	cmn	r0, #1
     dfc:	str	r0, [r5]
     e00:	beq	e34 <ipfw_daq_start+0x58>
     e04:	mov	r2, #16
     e08:	add	r1, r5, #300	; 0x12c
     e0c:	bl	740 <bind@plt>
     e10:	cmn	r0, #1
     e14:	movne	r3, #2
     e18:	mov	r4, r0
     e1c:	strne	r3, [r5, #316]	; 0x13c
     e20:	movne	r4, #0
     e24:	beq	e6c <ipfw_daq_start+0x90>
     e28:	mov	r0, r4
     e2c:	add	sp, sp, #12
     e30:	pop	{r4, r5, pc}
     e34:	mov	r4, r0
     e38:	bl	728 <__errno_location@plt>
     e3c:	ldr	r0, [r0]
     e40:	bl	710 <strerror@plt>
     e44:	ldr	r3, [pc, #64]	; e8c <ipfw_daq_start+0xb0>
     e48:	ldr	r2, [pc, #64]	; e90 <ipfw_daq_start+0xb4>
     e4c:	add	r3, pc, r3
     e50:	add	r2, pc, r2
     e54:	str	r0, [sp]
     e58:	add	r3, r3, #68	; 0x44
     e5c:	mov	r1, #256	; 0x100
     e60:	add	r0, r5, #36	; 0x24
     e64:	bl	734 <snprintf@plt>
     e68:	b	e28 <ipfw_daq_start+0x4c>
     e6c:	bl	728 <__errno_location@plt>
     e70:	ldr	r0, [r0]
     e74:	bl	710 <strerror@plt>
     e78:	ldr	r3, [pc, #20]	; e94 <ipfw_daq_start+0xb8>
     e7c:	ldr	r2, [pc, #20]	; e98 <ipfw_daq_start+0xbc>
     e80:	add	r3, pc, r3
     e84:	add	r2, pc, r2
     e88:	b	e54 <ipfw_daq_start+0x78>
     e8c:	.word	0x000003b8
     e90:	.word	0x000004ac
     e94:	.word	0x00000384
     e98:	.word	0x000004a0

00000e9c <ipfw_daq_inject>:
     e9c:	mov	ip, r0
     ea0:	push	{r4, r5, lr}
     ea4:	mov	r4, r0
     ea8:	ldr	r0, [ip], #300	; 0x12c
     eac:	sub	sp, sp, #12
     eb0:	mov	lr, #16
     eb4:	mov	r1, r2
     eb8:	stm	sp, {ip, lr}
     ebc:	mov	r2, r3
     ec0:	mov	r3, #0
     ec4:	bl	758 <sendto@plt>
     ec8:	cmn	r0, #1
     ecc:	beq	ef4 <ipfw_daq_inject+0x58>
     ed0:	add	r4, r4, #352	; 0x160
     ed4:	mov	r5, #0
     ed8:	ldrd	r2, [r4]
     edc:	adds	r2, r2, #1
     ee0:	adc	r3, r3, #0
     ee4:	strd	r2, [r4]
     ee8:	mov	r0, r5
     eec:	add	sp, sp, #12
     ef0:	pop	{r4, r5, pc}
     ef4:	mov	r5, r0
     ef8:	bl	728 <__errno_location@plt>
     efc:	ldr	r0, [r0]
     f00:	bl	710 <strerror@plt>
     f04:	ldr	r3, [pc, #32]	; f2c <ipfw_daq_inject+0x90>
     f08:	ldr	r2, [pc, #32]	; f30 <ipfw_daq_inject+0x94>
     f0c:	add	r3, pc, r3
     f10:	add	r2, pc, r2
     f14:	add	r3, r3, #48	; 0x30
     f18:	mov	r1, #256	; 0x100
     f1c:	str	r0, [sp]
     f20:	add	r0, r4, #36	; 0x24
     f24:	bl	734 <snprintf@plt>
     f28:	b	ee8 <ipfw_daq_inject+0x4c>
     f2c:	.word	0x000002f8
     f30:	.word	0x000003c4

00000f34 <ipfw_daq_initialize>:
     f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f38:	sub	sp, sp, #36	; 0x24
     f3c:	str	r0, [sp, #8]
     f40:	str	r1, [sp, #12]
     f44:	mov	r0, #1
     f48:	mov	r1, #416	; 0x1a0
     f4c:	str	r2, [sp, #16]
     f50:	str	r3, [sp, #20]
     f54:	bl	680 <calloc@plt>
     f58:	subs	r6, r0, #0
     f5c:	beq	1154 <ipfw_daq_initialize+0x220>
     f60:	ldr	r3, [sp, #8]
     f64:	mov	r2, #8000	; 0x1f40
     f68:	ldr	r4, [r3, #20]
     f6c:	mov	r3, #2
     f70:	cmp	r4, #0
     f74:	stmib	r6, {r2, r3}
     f78:	moveq	r2, r3
     f7c:	ldreq	r3, [pc, #584]	; 11cc <ipfw_daq_initialize+0x298>
     f80:	beq	10dc <ipfw_daq_initialize+0x1a8>
     f84:	ldr	r5, [r4, #4]
     f88:	cmp	r5, #0
     f8c:	beq	10a4 <ipfw_daq_initialize+0x170>
     f90:	ldrb	r3, [r5]
     f94:	cmp	r3, #0
     f98:	beq	10a4 <ipfw_daq_initialize+0x170>
     f9c:	ldr	r9, [pc, #556]	; 11d0 <ipfw_daq_initialize+0x29c>
     fa0:	ldr	sl, [pc, #556]	; 11d4 <ipfw_daq_initialize+0x2a0>
     fa4:	add	r9, pc, r9
     fa8:	add	r8, sp, #28
     fac:	mov	r7, #0
     fb0:	b	ffc <ipfw_daq_initialize+0xc8>
     fb4:	str	r5, [sp, #28]
     fb8:	bl	6a4 <strtol@plt>
     fbc:	ldr	r2, [sp, #28]
     fc0:	str	r0, [r6, #4]
     fc4:	ldrb	r2, [r2]
     fc8:	sub	r3, r0, #1
     fcc:	cmp	r3, sl
     fd0:	cmpls	r2, #0
     fd4:	bne	104c <ipfw_daq_initialize+0x118>
     fd8:	ldr	r4, [r4, #8]
     fdc:	cmp	r4, #0
     fe0:	beq	10d0 <ipfw_daq_initialize+0x19c>
     fe4:	ldr	r5, [r4, #4]
     fe8:	cmp	r5, #0
     fec:	beq	10a4 <ipfw_daq_initialize+0x170>
     ff0:	ldrb	r3, [r5]
     ff4:	cmp	r3, #0
     ff8:	beq	10a4 <ipfw_daq_initialize+0x170>
     ffc:	ldr	fp, [r4]
    1000:	mov	r1, r9
    1004:	mov	r0, fp
    1008:	bl	68c <strcmp@plt>
    100c:	mov	r2, r7
    1010:	mov	r1, r8
    1014:	cmp	r0, #0
    1018:	mov	r0, r5
    101c:	beq	fb4 <ipfw_daq_initialize+0x80>
    1020:	ldr	r2, [pc, #432]	; 11d8 <ipfw_daq_initialize+0x2a4>
    1024:	str	r5, [sp, #4]
    1028:	add	r2, pc, r2
    102c:	add	r3, r2, #104	; 0x68
    1030:	ldr	r2, [pc, #420]	; 11dc <ipfw_daq_initialize+0x2a8>
    1034:	str	fp, [sp]
    1038:	ldr	r1, [sp, #20]
    103c:	ldr	r0, [sp, #16]
    1040:	add	r2, pc, r2
    1044:	bl	734 <snprintf@plt>
    1048:	b	1074 <ipfw_daq_initialize+0x140>
    104c:	ldr	r2, [r4, #4]
    1050:	ldr	r3, [pc, #392]	; 11e0 <ipfw_daq_initialize+0x2ac>
    1054:	str	r2, [sp]
    1058:	ldr	r2, [pc, #388]	; 11e4 <ipfw_daq_initialize+0x2b0>
    105c:	add	r3, pc, r3
    1060:	ldr	r1, [sp, #20]
    1064:	ldr	r0, [sp, #16]
    1068:	add	r3, r3, #104	; 0x68
    106c:	add	r2, pc, r2
    1070:	bl	734 <snprintf@plt>
    1074:	ldr	r0, [r6, #32]
    1078:	cmp	r0, #0
    107c:	beq	1084 <ipfw_daq_initialize+0x150>
    1080:	bl	6b0 <free@plt>
    1084:	ldr	r0, [r6, #28]
    1088:	cmp	r0, #0
    108c:	beq	1094 <ipfw_daq_initialize+0x160>
    1090:	bl	6b0 <free@plt>
    1094:	mov	r0, r6
    1098:	bl	6b0 <free@plt>
    109c:	mvn	r0, #0
    10a0:	b	114c <ipfw_daq_initialize+0x218>
    10a4:	ldr	r2, [r4]
    10a8:	ldr	r3, [pc, #312]	; 11e8 <ipfw_daq_initialize+0x2b4>
    10ac:	str	r2, [sp]
    10b0:	ldr	r2, [pc, #308]	; 11ec <ipfw_daq_initialize+0x2b8>
    10b4:	add	r3, pc, r3
    10b8:	ldr	r1, [sp, #20]
    10bc:	ldr	r0, [sp, #16]
    10c0:	add	r3, r3, #104	; 0x68
    10c4:	add	r2, pc, r2
    10c8:	bl	734 <snprintf@plt>
    10cc:	b	1074 <ipfw_daq_initialize+0x140>
    10d0:	rev16	r0, r0
    10d4:	ldrh	r2, [r6, #8]
    10d8:	uxth	r3, r0
    10dc:	ldr	ip, [sp, #8]
    10e0:	ldr	lr, [pc, #264]	; 11f0 <ipfw_daq_initialize+0x2bc>
    10e4:	mov	r4, #0
    10e8:	ldr	r0, [ip, #4]
    10ec:	ldr	r1, [ip, #12]
    10f0:	clz	r1, r1
    10f4:	lsr	r1, r1, #5
    10f8:	str	r1, [r6, #16]
    10fc:	cmp	r0, #0
    1100:	add	r1, r6, #300	; 0x12c
    1104:	ldr	ip, [ip, #8]
    1108:	moveq	r0, lr
    110c:	str	ip, [r6, #20]
    1110:	str	r0, [r6, #24]
    1114:	strh	r2, [r1]
    1118:	str	r4, [r6, #304]	; 0x130
    111c:	strh	r3, [r1, #2]
    1120:	bl	6f8 <malloc@plt>
    1124:	cmp	r0, r4
    1128:	str	r0, [r6, #28]
    112c:	beq	117c <ipfw_daq_initialize+0x248>
    1130:	ldr	r1, [sp, #12]
    1134:	mov	r0, r4
    1138:	mvn	r2, #0
    113c:	mov	r3, #1
    1140:	str	r6, [r1]
    1144:	str	r2, [r6]
    1148:	str	r3, [r6, #316]	; 0x13c
    114c:	add	sp, sp, #36	; 0x24
    1150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1154:	ldr	r3, [pc, #152]	; 11f4 <ipfw_daq_initialize+0x2c0>
    1158:	ldr	r2, [pc, #152]	; 11f8 <ipfw_daq_initialize+0x2c4>
    115c:	add	r3, pc, r3
    1160:	ldr	r1, [sp, #20]
    1164:	ldr	r0, [sp, #16]
    1168:	add	r3, r3, #84	; 0x54
    116c:	add	r2, pc, r2
    1170:	bl	734 <snprintf@plt>
    1174:	mvn	r0, #1
    1178:	b	114c <ipfw_daq_initialize+0x218>
    117c:	ldr	r3, [pc, #120]	; 11fc <ipfw_daq_initialize+0x2c8>
    1180:	ldr	r2, [pc, #120]	; 1200 <ipfw_daq_initialize+0x2cc>
    1184:	add	r3, pc, r3
    1188:	ldr	r1, [sp, #20]
    118c:	ldr	r0, [sp, #16]
    1190:	add	r3, r3, #84	; 0x54
    1194:	add	r2, pc, r2
    1198:	bl	734 <snprintf@plt>
    119c:	ldr	r0, [r6, #32]
    11a0:	cmp	r0, #0
    11a4:	beq	11ac <ipfw_daq_initialize+0x278>
    11a8:	bl	6b0 <free@plt>
    11ac:	ldr	r0, [r6, #28]
    11b0:	cmp	r0, #0
    11b4:	beq	11bc <ipfw_daq_initialize+0x288>
    11b8:	bl	6b0 <free@plt>
    11bc:	mov	r0, r6
    11c0:	bl	6b0 <free@plt>
    11c4:	mvn	r0, #1
    11c8:	b	114c <ipfw_daq_initialize+0x218>
    11cc:	.word	0x0000401f
    11d0:	.word	0x000003f0
    11d4:	.word	0x0000fffe
    11d8:	.word	0x000001dc
    11dc:	.word	0x00000370
    11e0:	.word	0x000001a8
    11e4:	.word	0x00000330
    11e8:	.word	0x00000150
    11ec:	.word	0x000002b0
    11f0:	.word	0x0000ffff
    11f4:	.word	0x000000a8
    11f8:	.word	0x000001dc
    11fc:	.word	0x00000080
    1200:	.word	0x00000240

Disassembly of section .fini:

00001204 <_fini>:
    1204:	push	{r3, lr}
    1208:	pop	{r3, pc}
