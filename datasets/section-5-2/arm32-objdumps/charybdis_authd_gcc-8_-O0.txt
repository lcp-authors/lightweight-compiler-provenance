
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

00011274 <.init>:
   11274:	push	{r3, lr}
   11278:	bl	116e4 <sprintf@plt+0x48>
   1127c:	pop	{r3, pc}

Disassembly of section .plt:

00011280 <sigemptyset@plt-0x14>:
   11280:	push	{lr}		; (str lr, [sp, #-4]!)
   11284:	ldr	lr, [pc, #4]	; 11290 <sigemptyset@plt-0x4>
   11288:	add	lr, pc, lr
   1128c:	ldr	pc, [lr, #8]!
   11290:	andeq	pc, r1, r0, ror sp	; <UNPREDICTABLE>

00011294 <sigemptyset@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #126976	; 0x1f000
   1129c:	ldr	pc, [ip, #3440]!	; 0xd70

000112a0 <strerror@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #126976	; 0x1f000
   112a8:	ldr	pc, [ip, #3432]!	; 0xd68

000112ac <rb_helper_loop@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #126976	; 0x1f000
   112b4:	ldr	pc, [ip, #3424]!	; 0xd60

000112b8 <abort@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #126976	; 0x1f000
   112c0:	ldr	pc, [ip, #3416]!	; 0xd58

000112c4 <rb_event_addish@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #126976	; 0x1f000
   112cc:	ldr	pc, [ip, #3408]!	; 0xd50

000112d0 <getsockname@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #126976	; 0x1f000
   112d8:	ldr	pc, [ip, #3400]!	; 0xd48

000112dc <rb_ignore_errno@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #126976	; 0x1f000
   112e4:	ldr	pc, [ip, #3392]!	; 0xd40

000112e8 <rb_connect_tcp_ssl@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #126976	; 0x1f000
   112f0:	ldr	pc, [ip, #3384]!	; 0xd38

000112f4 <rb_connect_tcp@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #126976	; 0x1f000
   112fc:	ldr	pc, [ip, #3376]!	; 0xd30

00011300 <memcmp@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #126976	; 0x1f000
   11308:	ldr	pc, [ip, #3368]!	; 0xd28

0001130c <__libc_start_main@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #126976	; 0x1f000
   11314:	ldr	pc, [ip, #3360]!	; 0xd20

00011318 <rb_event_delete@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #126976	; 0x1f000
   11320:	ldr	pc, [ip, #3352]!	; 0xd18

00011324 <rb_setselect@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #126976	; 0x1f000
   1132c:	ldr	pc, [ip, #3344]!	; 0xd10

00011330 <rb_get_fd@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #126976	; 0x1f000
   11338:	ldr	pc, [ip, #3336]!	; 0xd08

0001133c <__gmon_start__@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #126976	; 0x1f000
   11344:	ldr	pc, [ip, #3328]!	; 0xd00

00011348 <vsnprintf@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #126976	; 0x1f000
   11350:	ldr	pc, [ip, #3320]!	; 0xcf8

00011354 <rb_socket@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #126976	; 0x1f000
   1135c:	ldr	pc, [ip, #3312]!	; 0xcf0

00011360 <fclose@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #126976	; 0x1f000
   11368:	ldr	pc, [ip, #3304]!	; 0xce8

0001136c <fgets@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #126976	; 0x1f000
   11374:	ldr	pc, [ip, #3296]!	; 0xce0

00011378 <rb_strtok_r@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #126976	; 0x1f000
   11380:	ldr	pc, [ip, #3288]!	; 0xcd8

00011384 <strchr@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #126976	; 0x1f000
   1138c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011390 <rb_dictionary_foreach_cur@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #126976	; 0x1f000
   11398:	ldr	pc, [ip, #3272]!	; 0xcc8

0001139c <strcasecmp@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #126976	; 0x1f000
   113a4:	ldr	pc, [ip, #3264]!	; 0xcc0

000113a8 <calloc@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #126976	; 0x1f000
   113b0:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b4 <rb_helper_child@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #126976	; 0x1f000
   113bc:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c0 <sendto@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #126976	; 0x1f000
   113c8:	ldr	pc, [ip, #3240]!	; 0xca8

000113cc <htons@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #126976	; 0x1f000
   113d4:	ldr	pc, [ip, #3232]!	; 0xca0

000113d8 <fopen@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #126976	; 0x1f000
   113e0:	ldr	pc, [ip, #3224]!	; 0xc98

000113e4 <memset@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #126976	; 0x1f000
   113ec:	ldr	pc, [ip, #3216]!	; 0xc90

000113f0 <freeaddrinfo@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #126976	; 0x1f000
   113f8:	ldr	pc, [ip, #3208]!	; 0xc88

000113fc <strrchr@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #126976	; 0x1f000
   11404:	ldr	pc, [ip, #3200]!	; 0xc80

00011408 <rb_write@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #126976	; 0x1f000
   11410:	ldr	pc, [ip, #3192]!	; 0xc78

00011414 <__assert_fail@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #126976	; 0x1f000
   1141c:	ldr	pc, [ip, #3184]!	; 0xc70

00011420 <rb_strlcpy@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #126976	; 0x1f000
   11428:	ldr	pc, [ip, #3176]!	; 0xc68

0001142c <strtoull@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #126976	; 0x1f000
   11434:	ldr	pc, [ip, #3168]!	; 0xc60

00011438 <rb_dictionary_foreach_next@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #126976	; 0x1f000
   11440:	ldr	pc, [ip, #3160]!	; 0xc58

00011444 <free@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #126976	; 0x1f000
   1144c:	ldr	pc, [ip, #3152]!	; 0xc50

00011450 <rb_string_to_array@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #126976	; 0x1f000
   11458:	ldr	pc, [ip, #3144]!	; 0xc48

0001145c <rb_read@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #126976	; 0x1f000
   11464:	ldr	pc, [ip, #3136]!	; 0xc40

00011468 <rb_strcasecmp@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #126976	; 0x1f000
   11470:	ldr	pc, [ip, #3128]!	; 0xc38

00011474 <getaddrinfo@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #126976	; 0x1f000
   1147c:	ldr	pc, [ip, #3120]!	; 0xc30

00011480 <rb_dictionary_foreach_start@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #126976	; 0x1f000
   11488:	ldr	pc, [ip, #3112]!	; 0xc28

0001148c <ntohs@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #126976	; 0x1f000
   11494:	ldr	pc, [ip, #3104]!	; 0xc20

00011498 <rb_inet_pton_sock@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #126976	; 0x1f000
   114a0:	ldr	pc, [ip, #3096]!	; 0xc18

000114a4 <strlen@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #126976	; 0x1f000
   114ac:	ldr	pc, [ip, #3088]!	; 0xc10

000114b0 <rb_current_time@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #126976	; 0x1f000
   114b8:	ldr	pc, [ip, #3080]!	; 0xc08

000114bc <rb_dictionary_delete@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #126976	; 0x1f000
   114c4:	ldr	pc, [ip, #3072]!	; 0xc00

000114c8 <memcpy@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #126976	; 0x1f000
   114d0:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d4 <rb_free_rb_dlink_node@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #126976	; 0x1f000
   114dc:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e0 <rb_close@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #126976	; 0x1f000
   114e8:	ldr	pc, [ip, #3048]!	; 0xbe8

000114ec <strtol@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #126976	; 0x1f000
   114f4:	ldr	pc, [ip, #3040]!	; 0xbe0

000114f8 <sigaddset@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #126976	; 0x1f000
   11500:	ldr	pc, [ip, #3032]!	; 0xbd8

00011504 <strcpy@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #126976	; 0x1f000
   1150c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011510 <atoi@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #126976	; 0x1f000
   11518:	ldr	pc, [ip, #3016]!	; 0xbc8

0001151c <rb_dictionary_destroy@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #126976	; 0x1f000
   11524:	ldr	pc, [ip, #3008]!	; 0xbc0

00011528 <bind@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #126976	; 0x1f000
   11530:	ldr	pc, [ip, #3000]!	; 0xbb8

00011534 <rb_lib_log@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #126976	; 0x1f000
   1153c:	ldr	pc, [ip, #2992]!	; 0xbb0

00011540 <strstr@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #126976	; 0x1f000
   11548:	ldr	pc, [ip, #2984]!	; 0xba8

0001154c <fwrite@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #126976	; 0x1f000
   11554:	ldr	pc, [ip, #2976]!	; 0xba0

00011558 <rb_init_prng@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #126976	; 0x1f000
   11560:	ldr	pc, [ip, #2968]!	; 0xb98

00011564 <rb_dictionary_retrieve@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #126976	; 0x1f000
   1156c:	ldr	pc, [ip, #2960]!	; 0xb90

00011570 <rb_outofmemory@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #126976	; 0x1f000
   11578:	ldr	pc, [ip, #2952]!	; 0xb88

0001157c <__ctype_b_loc@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #126976	; 0x1f000
   11584:	ldr	pc, [ip, #2944]!	; 0xb80

00011588 <rb_dictionary_add@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #126976	; 0x1f000
   11590:	ldr	pc, [ip, #2936]!	; 0xb78

00011594 <rb_set_time@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #126976	; 0x1f000
   1159c:	ldr	pc, [ip, #2928]!	; 0xb70

000115a0 <malloc@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #126976	; 0x1f000
   115a8:	ldr	pc, [ip, #2920]!	; 0xb68

000115ac <sigaction@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #126976	; 0x1f000
   115b4:	ldr	pc, [ip, #2912]!	; 0xb60

000115b8 <rb_helper_read@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #126976	; 0x1f000
   115c0:	ldr	pc, [ip, #2904]!	; 0xb58

000115c4 <rb_inet_ntop_sock@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #126976	; 0x1f000
   115cc:	ldr	pc, [ip, #2896]!	; 0xb50

000115d0 <rb_dictionary_find@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #126976	; 0x1f000
   115d8:	ldr	pc, [ip, #2888]!	; 0xb48

000115dc <rb_dictionary_create@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #126976	; 0x1f000
   115e4:	ldr	pc, [ip, #2880]!	; 0xb40

000115e8 <memmove@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #126976	; 0x1f000
   115f0:	ldr	pc, [ip, #2872]!	; 0xb38

000115f4 <rb_accept_tcp@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #126976	; 0x1f000
   115fc:	ldr	pc, [ip, #2864]!	; 0xb30

00011600 <rb_helper_write@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #126976	; 0x1f000
   11608:	ldr	pc, [ip, #2856]!	; 0xb28

0001160c <rb_event_add@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #126976	; 0x1f000
   11614:	ldr	pc, [ip, #2848]!	; 0xb20

00011618 <rb_get_random@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #126976	; 0x1f000
   11620:	ldr	pc, [ip, #2840]!	; 0xb18

00011624 <rb_make_rb_dlink_node@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #126976	; 0x1f000
   1162c:	ldr	pc, [ip, #2832]!	; 0xb10

00011630 <snprintf@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #126976	; 0x1f000
   11638:	ldr	pc, [ip, #2824]!	; 0xb08

0001163c <rb_listen@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #126976	; 0x1f000
   11644:	ldr	pc, [ip, #2816]!	; 0xb00

00011648 <strncmp@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #126976	; 0x1f000
   11650:	ldr	pc, [ip, #2808]!	; 0xaf8

00011654 <recvfrom@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #126976	; 0x1f000
   1165c:	ldr	pc, [ip, #2800]!	; 0xaf0

00011660 <setsockopt@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #126976	; 0x1f000
   11668:	ldr	pc, [ip, #2792]!	; 0xae8

0001166c <strpbrk@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #126976	; 0x1f000
   11674:	ldr	pc, [ip, #2784]!	; 0xae0

00011678 <strcmp@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #126976	; 0x1f000
   11680:	ldr	pc, [ip, #2776]!	; 0xad8

00011684 <exit@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #126976	; 0x1f000
   1168c:	ldr	pc, [ip, #2768]!	; 0xad0

00011690 <__errno_location@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #126976	; 0x1f000
   11698:	ldr	pc, [ip, #2760]!	; 0xac8

0001169c <sprintf@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #126976	; 0x1f000
   116a4:	ldr	pc, [ip, #2752]!	; 0xac0

Disassembly of section .text:

000116a8 <.text>:
   116a8:	mov	fp, #0
   116ac:	mov	lr, #0
   116b0:	pop	{r1}		; (ldr r1, [sp], #4)
   116b4:	mov	r2, sp
   116b8:	push	{r2}		; (str r2, [sp, #-4]!)
   116bc:	push	{r0}		; (str r0, [sp, #-4]!)
   116c0:	ldr	ip, [pc, #16]	; 116d8 <sprintf@plt+0x3c>
   116c4:	push	{ip}		; (str ip, [sp, #-4]!)
   116c8:	ldr	r0, [pc, #12]	; 116dc <sprintf@plt+0x40>
   116cc:	ldr	r3, [pc, #12]	; 116e0 <sprintf@plt+0x44>
   116d0:	bl	1130c <__libc_start_main@plt>
   116d4:	bl	112b8 <abort@plt>
   116d8:	muleq	r1, r4, lr
   116dc:	andeq	r1, r1, r0, lsl sp
   116e0:	andeq	lr, r1, r4, lsr lr
   116e4:	ldr	r3, [pc, #20]	; 11700 <sprintf@plt+0x64>
   116e8:	ldr	r2, [pc, #20]	; 11704 <sprintf@plt+0x68>
   116ec:	add	r3, pc, r3
   116f0:	ldr	r2, [r3, r2]
   116f4:	cmp	r2, #0
   116f8:	bxeq	lr
   116fc:	b	1133c <__gmon_start__@plt>
   11700:	andeq	pc, r1, ip, lsl #18
   11704:	andeq	r0, r0, ip, ror #2
   11708:	ldr	r0, [pc, #24]	; 11728 <sprintf@plt+0x8c>
   1170c:	ldr	r3, [pc, #24]	; 1172c <sprintf@plt+0x90>
   11710:	cmp	r3, r0
   11714:	bxeq	lr
   11718:	ldr	r3, [pc, #16]	; 11730 <sprintf@plt+0x94>
   1171c:	cmp	r3, #0
   11720:	bxeq	lr
   11724:	bx	r3
   11728:			; <UNDEFINED> instruction: 0x00031fb8
   1172c:			; <UNDEFINED> instruction: 0x00031fb8
   11730:	andeq	r0, r0, r0
   11734:	ldr	r0, [pc, #36]	; 11760 <sprintf@plt+0xc4>
   11738:	ldr	r1, [pc, #36]	; 11764 <sprintf@plt+0xc8>
   1173c:	sub	r1, r1, r0
   11740:	asr	r1, r1, #2
   11744:	add	r1, r1, r1, lsr #31
   11748:	asrs	r1, r1, #1
   1174c:	bxeq	lr
   11750:	ldr	r3, [pc, #16]	; 11768 <sprintf@plt+0xcc>
   11754:	cmp	r3, #0
   11758:	bxeq	lr
   1175c:	bx	r3
   11760:			; <UNDEFINED> instruction: 0x00031fb8
   11764:			; <UNDEFINED> instruction: 0x00031fb8
   11768:	andeq	r0, r0, r0
   1176c:	push	{r4, lr}
   11770:	ldr	r4, [pc, #24]	; 11790 <sprintf@plt+0xf4>
   11774:	ldrb	r3, [r4]
   11778:	cmp	r3, #0
   1177c:	popne	{r4, pc}
   11780:	bl	11708 <sprintf@plt+0x6c>
   11784:	mov	r3, #1
   11788:	strb	r3, [r4]
   1178c:	pop	{r4, pc}
   11790:			; <UNDEFINED> instruction: 0x00031fb8
   11794:	b	11734 <sprintf@plt+0x98>
   11798:	str	r4, [sp, #-12]!
   1179c:	str	fp, [sp, #4]
   117a0:	str	lr, [sp, #8]
   117a4:	add	fp, sp, #8
   117a8:	sub	sp, sp, #28
   117ac:	str	r0, [fp, #-32]	; 0xffffffe0
   117b0:	str	r1, [fp, #-36]	; 0xffffffdc
   117b4:	ldr	r4, [pc, #244]	; 118b0 <sprintf@plt+0x214>
   117b8:	add	r4, pc, r4
   117bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   117c0:	cmp	r3, #2
   117c4:	bgt	117e4 <sprintf@plt+0x148>
   117c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   117cc:	ldr	r3, [pc, #224]	; 118b4 <sprintf@plt+0x218>
   117d0:	add	r3, pc, r3
   117d4:	mov	r1, r3
   117d8:	mov	r0, #67	; 0x43
   117dc:	bl	12b00 <sprintf@plt+0x1464>
   117e0:	b	1189c <sprintf@plt+0x200>
   117e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117e8:	add	r3, r3, #4
   117ec:	ldr	r3, [r3]
   117f0:	mov	r2, #16
   117f4:	mov	r1, #0
   117f8:	mov	r0, r3
   117fc:	bl	1142c <strtoull@plt>
   11800:	strd	r0, [fp, #-20]	; 0xffffffec
   11804:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11808:	mvn	r0, #0
   1180c:	mov	r1, #0
   11810:	cmp	r3, r1
   11814:	cmpeq	r2, r0
   11818:	bls	11844 <sprintf@plt+0x1a8>
   1181c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11820:	add	r3, r3, #4
   11824:	ldr	r3, [r3]
   11828:	mov	r2, r3
   1182c:	ldr	r3, [pc, #132]	; 118b8 <sprintf@plt+0x21c>
   11830:	add	r3, pc, r3
   11834:	mov	r1, r3
   11838:	mov	r0, #67	; 0x43
   1183c:	bl	12b00 <sprintf@plt+0x1464>
   11840:	b	1189c <sprintf@plt+0x200>
   11844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11848:	add	r3, r3, #8
   1184c:	ldr	r3, [r3]
   11850:	ldrb	r3, [r3]
   11854:	mov	r2, r3
   11858:	ldr	r3, [pc, #92]	; 118bc <sprintf@plt+0x220>
   1185c:	ldr	r3, [r4, r3]
   11860:	ldr	r3, [r3, r2, lsl #2]
   11864:	str	r3, [fp, #-24]	; 0xffffffe8
   11868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1186c:	cmp	r3, #0
   11870:	beq	11898 <sprintf@plt+0x1fc>
   11874:	ldr	r2, [fp, #-20]	; 0xffffffec
   11878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1187c:	add	r3, r3, #8
   11880:	ldr	r3, [r3]
   11884:	ldrb	r1, [r3]
   11888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1188c:	mov	r0, r2
   11890:	blx	r3
   11894:	b	1189c <sprintf@plt+0x200>
   11898:	nop	{0}
   1189c:	sub	sp, fp, #8
   118a0:	ldr	r4, [sp]
   118a4:	ldr	fp, [sp, #4]
   118a8:	add	sp, sp, #8
   118ac:	pop	{pc}		; (ldr pc, [sp], #4)
   118b0:	andeq	pc, r1, r0, asr #16
   118b4:	andeq	sp, r0, ip, asr #13
   118b8:			; <UNDEFINED> instruction: 0x0000d6b8
   118bc:	andeq	r0, r0, r8, lsr #3
   118c0:	str	fp, [sp, #-8]!
   118c4:	str	lr, [sp, #4]
   118c8:	add	fp, sp, #4
   118cc:	sub	sp, sp, #16
   118d0:	str	r0, [fp, #-16]
   118d4:	str	r1, [fp, #-20]	; 0xffffffec
   118d8:	ldr	r2, [pc, #244]	; 119d4 <sprintf@plt+0x338>
   118dc:	add	r2, pc, r2
   118e0:	ldr	r3, [fp, #-16]
   118e4:	cmp	r3, #1
   118e8:	bgt	11908 <sprintf@plt+0x26c>
   118ec:	ldr	r2, [fp, #-16]
   118f0:	ldr	r3, [pc, #224]	; 119d8 <sprintf@plt+0x33c>
   118f4:	add	r3, pc, r3
   118f8:	mov	r1, r3
   118fc:	mov	r0, #67	; 0x43
   11900:	bl	12b00 <sprintf@plt+0x1464>
   11904:	b	119c4 <sprintf@plt+0x328>
   11908:	ldr	r3, [pc, #204]	; 119dc <sprintf@plt+0x340>
   1190c:	ldr	r3, [r2, r3]
   11910:	ldr	r2, [r3]
   11914:	ldr	r3, [fp, #-20]	; 0xffffffec
   11918:	add	r3, r3, #4
   1191c:	ldr	r3, [r3]
   11920:	mov	r1, r3
   11924:	mov	r0, r2
   11928:	bl	11564 <rb_dictionary_retrieve@plt>
   1192c:	str	r0, [fp, #-8]
   11930:	ldr	r3, [fp, #-8]
   11934:	cmp	r3, #0
   11938:	bne	11964 <sprintf@plt+0x2c8>
   1193c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11940:	add	r3, r3, #4
   11944:	ldr	r3, [r3]
   11948:	mov	r2, r3
   1194c:	ldr	r3, [pc, #140]	; 119e0 <sprintf@plt+0x344>
   11950:	add	r3, pc, r3
   11954:	mov	r1, r3
   11958:	mov	r0, #67	; 0x43
   1195c:	bl	12b00 <sprintf@plt+0x1464>
   11960:	b	119c4 <sprintf@plt+0x328>
   11964:	ldr	r3, [fp, #-16]
   11968:	sub	r2, r3, #1
   1196c:	ldr	r3, [fp, #-8]
   11970:	ldr	r3, [r3, #4]
   11974:	cmp	r2, r3
   11978:	bgt	1199c <sprintf@plt+0x300>
   1197c:	ldr	r3, [fp, #-8]
   11980:	ldr	r2, [r3, #4]
   11984:	ldr	r3, [fp, #-16]
   11988:	ldr	r1, [pc, #84]	; 119e4 <sprintf@plt+0x348>
   1198c:	add	r1, pc, r1
   11990:	mov	r0, #67	; 0x43
   11994:	bl	12b00 <sprintf@plt+0x1464>
   11998:	b	119c4 <sprintf@plt+0x328>
   1199c:	ldr	r3, [fp, #-8]
   119a0:	ldr	r3, [r3, #8]
   119a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   119a8:	add	r2, r2, #4
   119ac:	ldr	r0, [r2]
   119b0:	ldr	r2, [fp, #-16]
   119b4:	sub	r1, r2, #2
   119b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   119bc:	add	r2, r2, #8
   119c0:	blx	r3
   119c4:	sub	sp, fp, #4
   119c8:	ldr	fp, [sp]
   119cc:	add	sp, sp, #4
   119d0:	pop	{pc}		; (ldr pc, [sp], #4)
   119d4:	andeq	pc, r1, ip, lsl r7	; <UNPREDICTABLE>
   119d8:	andeq	sp, r0, r8, lsr #12
   119dc:	muleq	r0, r0, r1
   119e0:	andeq	sp, r0, ip, lsl r6
   119e4:	andeq	sp, r0, r0, lsl r6
   119e8:	str	r4, [sp, #-12]!
   119ec:	str	fp, [sp, #4]
   119f0:	str	lr, [sp, #8]
   119f4:	add	fp, sp, #8
   119f8:	sub	sp, sp, #20
   119fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11a00:	str	r1, [fp, #-28]	; 0xffffffe4
   11a04:	ldr	r4, [pc, #208]	; 11adc <sprintf@plt+0x440>
   11a08:	add	r4, pc, r4
   11a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a10:	cmp	r3, #2
   11a14:	bgt	11a74 <sprintf@plt+0x3d8>
   11a18:	mov	r3, #0
   11a1c:	str	r3, [fp, #-16]
   11a20:	b	11a64 <sprintf@plt+0x3c8>
   11a24:	ldr	r3, [fp, #-16]
   11a28:	uxtb	r3, r3
   11a2c:	mov	r2, r3
   11a30:	ldr	r3, [pc, #168]	; 11ae0 <sprintf@plt+0x444>
   11a34:	ldr	r3, [r4, r3]
   11a38:	ldr	r3, [r3, r2, lsl #2]
   11a3c:	str	r3, [fp, #-20]	; 0xffffffec
   11a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a44:	cmp	r3, #0
   11a48:	beq	11a58 <sprintf@plt+0x3bc>
   11a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a50:	mov	r0, #0
   11a54:	blx	r3
   11a58:	ldr	r3, [fp, #-16]
   11a5c:	add	r3, r3, #1
   11a60:	str	r3, [fp, #-16]
   11a64:	ldr	r3, [fp, #-16]
   11a68:	cmp	r3, #255	; 0xff
   11a6c:	bls	11a24 <sprintf@plt+0x388>
   11a70:	b	11ac8 <sprintf@plt+0x42c>
   11a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a78:	add	r3, r3, #4
   11a7c:	ldr	r3, [r3]
   11a80:	ldrb	r3, [r3]
   11a84:	mov	r2, r3
   11a88:	ldr	r3, [pc, #80]	; 11ae0 <sprintf@plt+0x444>
   11a8c:	ldr	r3, [r4, r3]
   11a90:	ldr	r3, [r3, r2, lsl #2]
   11a94:	str	r3, [fp, #-20]	; 0xffffffec
   11a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a9c:	cmp	r3, #0
   11aa0:	beq	11ac4 <sprintf@plt+0x428>
   11aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11aa8:	add	r3, r3, #4
   11aac:	ldr	r3, [r3]
   11ab0:	ldrb	r2, [r3]
   11ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ab8:	mov	r0, r2
   11abc:	blx	r3
   11ac0:	b	11ac8 <sprintf@plt+0x42c>
   11ac4:	nop	{0}
   11ac8:	sub	sp, fp, #8
   11acc:	ldr	r4, [sp]
   11ad0:	ldr	fp, [sp, #4]
   11ad4:	add	sp, sp, #8
   11ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   11adc:	strdeq	pc, [r1], -r0
   11ae0:	muleq	r0, ip, r1
   11ae4:	str	r4, [sp, #-12]!
   11ae8:	str	fp, [sp, #4]
   11aec:	str	lr, [sp, #8]
   11af0:	add	fp, sp, #8
   11af4:	sub	sp, sp, #28
   11af8:	str	r0, [fp, #-32]	; 0xffffffe0
   11afc:	ldr	r4, [pc, #192]	; 11bc4 <sprintf@plt+0x528>
   11b00:	add	r4, pc, r4
   11b04:	b	11b84 <sprintf@plt+0x4e8>
   11b08:	mov	r2, #10
   11b0c:	ldr	r3, [pc, #180]	; 11bc8 <sprintf@plt+0x52c>
   11b10:	add	r3, pc, r3
   11b14:	mov	r1, r3
   11b18:	ldr	r3, [pc, #172]	; 11bcc <sprintf@plt+0x530>
   11b1c:	add	r3, pc, r3
   11b20:	mov	r0, r3
   11b24:	bl	11450 <rb_string_to_array@plt>
   11b28:	str	r0, [fp, #-20]	; 0xffffffec
   11b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b30:	cmp	r3, #0
   11b34:	bgt	11b3c <sprintf@plt+0x4a0>
   11b38:	b	11b84 <sprintf@plt+0x4e8>
   11b3c:	ldr	r3, [pc, #140]	; 11bd0 <sprintf@plt+0x534>
   11b40:	add	r3, pc, r3
   11b44:	ldr	r3, [r3]
   11b48:	ldrb	r3, [r3]
   11b4c:	mov	r2, r3
   11b50:	ldr	r3, [pc, #124]	; 11bd4 <sprintf@plt+0x538>
   11b54:	ldr	r3, [r4, r3]
   11b58:	ldr	r3, [r3, r2, lsl #2]
   11b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   11b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b64:	cmp	r3, #0
   11b68:	beq	11b84 <sprintf@plt+0x4e8>
   11b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b70:	ldr	r2, [pc, #96]	; 11bd8 <sprintf@plt+0x53c>
   11b74:	add	r2, pc, r2
   11b78:	mov	r1, r2
   11b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b80:	blx	r3
   11b84:	mov	r2, #16384	; 0x4000
   11b88:	ldr	r3, [pc, #76]	; 11bdc <sprintf@plt+0x540>
   11b8c:	add	r3, pc, r3
   11b90:	mov	r1, r3
   11b94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b98:	bl	115b8 <rb_helper_read@plt>
   11b9c:	str	r0, [fp, #-16]
   11ba0:	ldr	r3, [fp, #-16]
   11ba4:	cmp	r3, #0
   11ba8:	bgt	11b08 <sprintf@plt+0x46c>
   11bac:	nop	{0}
   11bb0:	sub	sp, fp, #8
   11bb4:	ldr	r4, [sp]
   11bb8:	ldr	fp, [sp, #4]
   11bbc:	add	sp, sp, #8
   11bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11bc4:	strdeq	pc, [r1], -r8
   11bc8:	andeq	r4, r2, r8, lsr #9
   11bcc:	muleq	r2, ip, r4
   11bd0:	andeq	r4, r2, r8, ror r4
   11bd4:	andeq	r0, r0, r0, ror r1
   11bd8:	andeq	r4, r2, r4, asr #8
   11bdc:	andeq	r0, r2, ip, lsr #8
   11be0:	str	fp, [sp, #-8]!
   11be4:	str	lr, [sp, #4]
   11be8:	add	fp, sp, #4
   11bec:	sub	sp, sp, #8
   11bf0:	str	r0, [fp, #-8]
   11bf4:	mov	r0, #1
   11bf8:	bl	11684 <exit@plt>
   11bfc:	push	{fp}		; (str fp, [sp, #-4]!)
   11c00:	add	fp, sp, #0
   11c04:	sub	sp, sp, #12
   11c08:	str	r0, [fp, #-8]
   11c0c:	nop	{0}
   11c10:	add	sp, fp, #0
   11c14:	pop	{fp}		; (ldr fp, [sp], #4)
   11c18:	bx	lr
   11c1c:	str	fp, [sp, #-8]!
   11c20:	str	lr, [sp, #4]
   11c24:	add	fp, sp, #4
   11c28:	sub	sp, sp, #144	; 0x90
   11c2c:	mov	r3, #0
   11c30:	str	r3, [fp, #-12]
   11c34:	mov	r3, #1
   11c38:	str	r3, [fp, #-144]	; 0xffffff70
   11c3c:	sub	r3, fp, #144	; 0x90
   11c40:	add	r3, r3, #4
   11c44:	mov	r0, r3
   11c48:	bl	11294 <sigemptyset@plt>
   11c4c:	sub	r3, fp, #144	; 0x90
   11c50:	add	r3, r3, #4
   11c54:	mov	r1, #13
   11c58:	mov	r0, r3
   11c5c:	bl	114f8 <sigaddset@plt>
   11c60:	sub	r3, fp, #144	; 0x90
   11c64:	add	r3, r3, #4
   11c68:	mov	r1, #14
   11c6c:	mov	r0, r3
   11c70:	bl	114f8 <sigaddset@plt>
   11c74:	sub	r3, fp, #144	; 0x90
   11c78:	add	r3, r3, #4
   11c7c:	mov	r1, #5
   11c80:	mov	r0, r3
   11c84:	bl	114f8 <sigaddset@plt>
   11c88:	sub	r3, fp, #144	; 0x90
   11c8c:	add	r3, r3, #4
   11c90:	mov	r1, #28
   11c94:	mov	r0, r3
   11c98:	bl	114f8 <sigaddset@plt>
   11c9c:	sub	r3, fp, #144	; 0x90
   11ca0:	mov	r2, #0
   11ca4:	mov	r1, r3
   11ca8:	mov	r0, #28
   11cac:	bl	115ac <sigaction@plt>
   11cb0:	sub	r3, fp, #144	; 0x90
   11cb4:	mov	r2, #0
   11cb8:	mov	r1, r3
   11cbc:	mov	r0, #13
   11cc0:	bl	115ac <sigaction@plt>
   11cc4:	sub	r3, fp, #144	; 0x90
   11cc8:	mov	r2, #0
   11ccc:	mov	r1, r3
   11cd0:	mov	r0, #5
   11cd4:	bl	115ac <sigaction@plt>
   11cd8:	ldr	r3, [pc, #44]	; 11d0c <sprintf@plt+0x670>
   11cdc:	add	r3, pc, r3
   11ce0:	str	r3, [fp, #-144]	; 0xffffff70
   11ce4:	sub	r3, fp, #144	; 0x90
   11ce8:	mov	r2, #0
   11cec:	mov	r1, r3
   11cf0:	mov	r0, #14
   11cf4:	bl	115ac <sigaction@plt>
   11cf8:	nop	{0}
   11cfc:	sub	sp, fp, #4
   11d00:	ldr	fp, [sp]
   11d04:	add	sp, sp, #4
   11d08:	pop	{pc}		; (ldr pc, [sp], #4)
   11d0c:			; <UNDEFINED> instruction: 0xffffff18
   11d10:	str	r4, [sp, #-12]!
   11d14:	str	fp, [sp, #4]
   11d18:	str	lr, [sp, #8]
   11d1c:	add	fp, sp, #8
   11d20:	sub	sp, sp, #28
   11d24:	str	r0, [fp, #-16]
   11d28:	str	r1, [fp, #-20]	; 0xffffffec
   11d2c:	ldr	r4, [pc, #236]	; 11e20 <sprintf@plt+0x784>
   11d30:	add	r4, pc, r4
   11d34:	bl	11c1c <sprintf@plt+0x580>
   11d38:	mov	r3, #256	; 0x100
   11d3c:	str	r3, [sp, #12]
   11d40:	mov	r3, #256	; 0x100
   11d44:	str	r3, [sp, #8]
   11d48:	mov	r3, #256	; 0x100
   11d4c:	str	r3, [sp, #4]
   11d50:	mov	r3, #0
   11d54:	str	r3, [sp]
   11d58:	mov	r3, #0
   11d5c:	mov	r2, #0
   11d60:	ldr	r1, [pc, #188]	; 11e24 <sprintf@plt+0x788>
   11d64:	add	r1, pc, r1
   11d68:	ldr	r0, [pc, #184]	; 11e28 <sprintf@plt+0x78c>
   11d6c:	add	r0, pc, r0
   11d70:	bl	113b4 <rb_helper_child@plt>
   11d74:	mov	r2, r0
   11d78:	ldr	r3, [pc, #172]	; 11e2c <sprintf@plt+0x790>
   11d7c:	ldr	r3, [r4, r3]
   11d80:	str	r2, [r3]
   11d84:	ldr	r3, [pc, #160]	; 11e2c <sprintf@plt+0x790>
   11d88:	ldr	r3, [r4, r3]
   11d8c:	ldr	r3, [r3]
   11d90:	cmp	r3, #0
   11d94:	bne	11dc0 <sprintf@plt+0x724>
   11d98:	ldr	r3, [pc, #144]	; 11e30 <sprintf@plt+0x794>
   11d9c:	ldr	r3, [r4, r3]
   11da0:	ldr	r3, [r3]
   11da4:	mov	r2, #46	; 0x2e
   11da8:	mov	r1, #1
   11dac:	ldr	r0, [pc, #128]	; 11e34 <sprintf@plt+0x798>
   11db0:	add	r0, pc, r0
   11db4:	bl	1154c <fwrite@plt>
   11db8:	mov	r0, #1
   11dbc:	bl	11684 <exit@plt>
   11dc0:	bl	11594 <rb_set_time@plt>
   11dc4:	bl	11c1c <sprintf@plt+0x580>
   11dc8:	ldr	r3, [pc, #104]	; 11e38 <sprintf@plt+0x79c>
   11dcc:	ldr	r3, [r4, r3]
   11dd0:	mov	r1, r3
   11dd4:	ldr	r3, [pc, #96]	; 11e3c <sprintf@plt+0x7a0>
   11dd8:	add	r3, pc, r3
   11ddc:	mov	r0, r3
   11de0:	bl	115dc <rb_dictionary_create@plt>
   11de4:	mov	r2, r0
   11de8:	ldr	r3, [pc, #80]	; 11e40 <sprintf@plt+0x7a4>
   11dec:	ldr	r3, [r4, r3]
   11df0:	str	r2, [r3]
   11df4:	bl	14c74 <sprintf@plt+0x35d8>
   11df8:	bl	132d8 <sprintf@plt+0x1c3c>
   11dfc:	mov	r1, #1
   11e00:	mov	r0, #0
   11e04:	bl	11558 <rb_init_prng@plt>
   11e08:	ldr	r3, [pc, #28]	; 11e2c <sprintf@plt+0x790>
   11e0c:	ldr	r3, [r4, r3]
   11e10:	ldr	r3, [r3]
   11e14:	mov	r1, #0
   11e18:	mov	r0, r3
   11e1c:	bl	112ac <rb_helper_loop@plt>
   11e20:	andeq	pc, r1, r8, asr #5
   11e24:			; <UNDEFINED> instruction: 0xfffffe74
   11e28:			; <UNDEFINED> instruction: 0xfffffd70
   11e2c:	andeq	r0, r0, r4, lsr #3
   11e30:	andeq	r0, r0, r0, lsr #3
   11e34:	andeq	sp, r0, ip, lsr r2
   11e38:	andeq	r0, r0, ip, lsl #3
   11e3c:	andeq	sp, r0, r4, asr #4
   11e40:	muleq	r0, r0, r1
   11e44:	str	fp, [sp, #-8]!
   11e48:	str	lr, [sp, #4]
   11e4c:	add	fp, sp, #4
   11e50:	sub	sp, sp, #16
   11e54:	str	r0, [fp, #-16]
   11e58:	ldr	r1, [fp, #-16]
   11e5c:	mov	r0, #1
   11e60:	bl	113a8 <calloc@plt>
   11e64:	mov	r3, r0
   11e68:	str	r3, [fp, #-8]
   11e6c:	ldr	r3, [fp, #-8]
   11e70:	cmp	r3, #0
   11e74:	moveq	r3, #1
   11e78:	movne	r3, #0
   11e7c:	uxtb	r3, r3
   11e80:	cmp	r3, #0
   11e84:	beq	11e8c <sprintf@plt+0x7f0>
   11e88:	bl	11570 <rb_outofmemory@plt>
   11e8c:	ldr	r3, [fp, #-8]
   11e90:	mov	r0, r3
   11e94:	sub	sp, fp, #4
   11e98:	ldr	fp, [sp]
   11e9c:	add	sp, sp, #4
   11ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ea4:	str	fp, [sp, #-8]!
   11ea8:	str	lr, [sp, #4]
   11eac:	add	fp, sp, #4
   11eb0:	sub	sp, sp, #16
   11eb4:	str	r0, [fp, #-16]
   11eb8:	ldr	r0, [fp, #-16]
   11ebc:	bl	114a4 <strlen@plt>
   11ec0:	mov	r3, r0
   11ec4:	add	r3, r3, #1
   11ec8:	mov	r0, r3
   11ecc:	bl	115a0 <malloc@plt>
   11ed0:	mov	r3, r0
   11ed4:	str	r3, [fp, #-8]
   11ed8:	ldr	r3, [fp, #-8]
   11edc:	cmp	r3, #0
   11ee0:	moveq	r3, #1
   11ee4:	movne	r3, #0
   11ee8:	uxtb	r3, r3
   11eec:	cmp	r3, #0
   11ef0:	beq	11ef8 <sprintf@plt+0x85c>
   11ef4:	bl	11570 <rb_outofmemory@plt>
   11ef8:	ldr	r1, [fp, #-16]
   11efc:	ldr	r0, [fp, #-8]
   11f00:	bl	11504 <strcpy@plt>
   11f04:	ldr	r3, [fp, #-8]
   11f08:	mov	r0, r3
   11f0c:	sub	sp, fp, #4
   11f10:	ldr	fp, [sp]
   11f14:	add	sp, sp, #4
   11f18:	pop	{pc}		; (ldr pc, [sp], #4)
   11f1c:	str	fp, [sp, #-8]!
   11f20:	str	lr, [sp, #4]
   11f24:	add	fp, sp, #4
   11f28:	sub	sp, sp, #8
   11f2c:	str	r0, [fp, #-8]
   11f30:	ldr	r3, [fp, #-8]
   11f34:	cmp	r3, #0
   11f38:	movne	r3, #1
   11f3c:	moveq	r3, #0
   11f40:	uxtb	r3, r3
   11f44:	cmp	r3, #0
   11f48:	beq	11f54 <sprintf@plt+0x8b8>
   11f4c:	ldr	r0, [fp, #-8]
   11f50:	bl	11444 <free@plt>
   11f54:	nop	{0}
   11f58:	sub	sp, fp, #4
   11f5c:	ldr	fp, [sp]
   11f60:	add	sp, sp, #4
   11f64:	pop	{pc}		; (ldr pc, [sp], #4)
   11f68:	strd	r4, [sp, #-20]!	; 0xffffffec
   11f6c:	str	r6, [sp, #8]
   11f70:	str	fp, [sp, #12]
   11f74:	str	lr, [sp, #16]
   11f78:	add	fp, sp, #16
   11f7c:	sub	sp, sp, #28
   11f80:	str	r0, [fp, #-32]	; 0xffffffe0
   11f84:	str	r1, [fp, #-36]	; 0xffffffdc
   11f88:	str	r2, [fp, #-40]	; 0xffffffd8
   11f8c:	str	r3, [fp, #-44]	; 0xffffffd4
   11f90:	ldr	r6, [pc, #244]	; 1208c <sprintf@plt+0x9f0>
   11f94:	add	r6, pc, r6
   11f98:	mov	r0, #160	; 0xa0
   11f9c:	bl	11e44 <sprintf@plt+0x7a8>
   11fa0:	str	r0, [fp, #-28]	; 0xffffffe4
   11fa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11fa8:	cmp	r3, #2
   11fac:	bne	11fc8 <sprintf@plt+0x92c>
   11fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fb4:	mov	r2, #52	; 0x34
   11fb8:	str	r2, [r3, #8]
   11fbc:	mov	r3, #1
   11fc0:	str	r3, [fp, #-24]	; 0xffffffe8
   11fc4:	b	11ffc <sprintf@plt+0x960>
   11fc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11fcc:	cmp	r3, #10
   11fd0:	bne	11fec <sprintf@plt+0x950>
   11fd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fd8:	mov	r2, #54	; 0x36
   11fdc:	str	r2, [r3, #8]
   11fe0:	mov	r3, #28
   11fe4:	str	r3, [fp, #-24]	; 0xffffffe8
   11fe8:	b	11ffc <sprintf@plt+0x960>
   11fec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ff0:	bl	11f1c <sprintf@plt+0x880>
   11ff4:	mov	r3, #0
   11ff8:	b	12070 <sprintf@plt+0x9d4>
   11ffc:	ldr	r3, [pc, #140]	; 12090 <sprintf@plt+0x9f4>
   12000:	ldr	r3, [r6, r3]
   12004:	ldrd	r2, [r3]
   12008:	adds	r4, r2, #1
   1200c:	adc	r5, r3, #0
   12010:	ldr	r1, [pc, #120]	; 12090 <sprintf@plt+0x9f4>
   12014:	ldr	r1, [r6, r1]
   12018:	strd	r4, [r1]
   1201c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12020:	strd	r2, [r1, #144]	; 0x90
   12024:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12028:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1202c:	str	r2, [r3, #152]	; 0x98
   12030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12034:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12038:	str	r2, [r3, #156]	; 0x9c
   1203c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12040:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12044:	str	r2, [r3]
   12048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1204c:	ldr	r2, [pc, #64]	; 12094 <sprintf@plt+0x9f8>
   12050:	add	r2, pc, r2
   12054:	str	r2, [r3, #4]
   12058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1205c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12060:	mov	r1, r3
   12064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12068:	bl	152f4 <sprintf@plt+0x3c58>
   1206c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12070:	mov	r0, r3
   12074:	sub	sp, fp, #16
   12078:	ldrd	r4, [sp]
   1207c:	ldr	r6, [sp, #8]
   12080:	ldr	fp, [sp, #12]
   12084:	add	sp, sp, #16
   12088:	pop	{pc}		; (ldr pc, [sp], #4)
   1208c:	andeq	pc, r1, r4, rrx
   12090:	andeq	r0, r0, ip, lsr #3
   12094:	ldrdeq	r0, [r0], -r8
   12098:	strd	r4, [sp, #-20]!	; 0xffffffec
   1209c:	str	r6, [sp, #8]
   120a0:	str	fp, [sp, #12]
   120a4:	str	lr, [sp, #16]
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #28
   120b0:	str	r0, [fp, #-32]	; 0xffffffe0
   120b4:	str	r1, [fp, #-36]	; 0xffffffdc
   120b8:	str	r2, [fp, #-40]	; 0xffffffd8
   120bc:	ldr	r6, [pc, #296]	; 121ec <sprintf@plt+0xb50>
   120c0:	add	r6, pc, r6
   120c4:	mov	r0, #160	; 0xa0
   120c8:	bl	11e44 <sprintf@plt+0x7a8>
   120cc:	str	r0, [fp, #-24]	; 0xffffffe8
   120d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120d4:	add	r3, r3, #12
   120d8:	mov	r1, r3
   120dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120e0:	bl	11498 <rb_inet_pton_sock@plt>
   120e4:	mov	r3, r0
   120e8:	cmp	r3, #0
   120ec:	bne	12100 <sprintf@plt+0xa64>
   120f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120f4:	bl	11f1c <sprintf@plt+0x880>
   120f8:	mov	r3, #0
   120fc:	b	121d0 <sprintf@plt+0xb34>
   12100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12104:	add	r3, r3, #12
   12108:	ldrh	r3, [r3]
   1210c:	str	r3, [fp, #-28]	; 0xffffffe4
   12110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12114:	cmp	r3, #2
   12118:	bne	1212c <sprintf@plt+0xa90>
   1211c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12120:	mov	r2, #82	; 0x52
   12124:	str	r2, [r3, #8]
   12128:	b	12158 <sprintf@plt+0xabc>
   1212c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12130:	cmp	r3, #10
   12134:	bne	12148 <sprintf@plt+0xaac>
   12138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1213c:	mov	r2, #83	; 0x53
   12140:	str	r2, [r3, #8]
   12144:	b	12158 <sprintf@plt+0xabc>
   12148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1214c:	bl	11f1c <sprintf@plt+0x880>
   12150:	mov	r3, #0
   12154:	b	121d0 <sprintf@plt+0xb34>
   12158:	ldr	r3, [pc, #144]	; 121f0 <sprintf@plt+0xb54>
   1215c:	ldr	r3, [r6, r3]
   12160:	ldrd	r2, [r3]
   12164:	adds	r4, r2, #1
   12168:	adc	r5, r3, #0
   1216c:	ldr	r1, [pc, #124]	; 121f0 <sprintf@plt+0xb54>
   12170:	ldr	r1, [r6, r1]
   12174:	strd	r4, [r1]
   12178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1217c:	strd	r2, [r1, #144]	; 0x90
   12180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12184:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12188:	str	r2, [r3, #152]	; 0x98
   1218c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12190:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12194:	str	r2, [r3, #156]	; 0x9c
   12198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1219c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121a0:	str	r2, [r3]
   121a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121a8:	ldr	r2, [pc, #68]	; 121f4 <sprintf@plt+0xb58>
   121ac:	add	r2, pc, r2
   121b0:	str	r2, [r3, #4]
   121b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121b8:	add	r3, r3, #12
   121bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121c0:	mov	r1, r2
   121c4:	mov	r0, r3
   121c8:	bl	15410 <sprintf@plt+0x3d74>
   121cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121d0:	mov	r0, r3
   121d4:	sub	sp, fp, #16
   121d8:	ldrd	r4, [sp]
   121dc:	ldr	r6, [sp, #8]
   121e0:	ldr	fp, [sp, #12]
   121e4:	add	sp, sp, #16
   121e8:	pop	{pc}		; (ldr pc, [sp], #4)
   121ec:	andeq	lr, r1, r8, lsr pc
   121f0:	andeq	r0, r0, ip, lsr #3
   121f4:	andeq	r0, r0, ip, asr #4
   121f8:	push	{fp}		; (str fp, [sp, #-4]!)
   121fc:	add	fp, sp, #0
   12200:	sub	sp, sp, #12
   12204:	str	r0, [fp, #-8]
   12208:	ldr	r3, [fp, #-8]
   1220c:	mov	r2, #0
   12210:	str	r2, [r3, #156]	; 0x9c
   12214:	ldr	r3, [fp, #-8]
   12218:	mov	r2, #0
   1221c:	str	r2, [r3, #152]	; 0x98
   12220:	nop	{0}
   12224:	add	sp, fp, #0
   12228:	pop	{fp}		; (ldr fp, [sp], #4)
   1222c:	bx	lr
   12230:	str	r4, [sp, #-12]!
   12234:	str	fp, [sp, #4]
   12238:	str	lr, [sp, #8]
   1223c:	add	fp, sp, #8
   12240:	sub	sp, sp, #76	; 0x4c
   12244:	str	r0, [fp, #-80]	; 0xffffffb0
   12248:	str	r1, [fp, #-84]	; 0xffffffac
   1224c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12250:	str	r3, [fp, #-16]
   12254:	mov	r3, #42	; 0x2a
   12258:	str	r3, [fp, #-72]	; 0xffffffb8
   1225c:	sub	r3, fp, #68	; 0x44
   12260:	mov	r2, #49	; 0x31
   12264:	mov	r1, #0
   12268:	mov	r0, r3
   1226c:	bl	113e4 <memset@plt>
   12270:	ldr	r3, [fp, #-16]
   12274:	cmp	r3, #0
   12278:	bne	12298 <sprintf@plt+0xbfc>
   1227c:	ldr	r3, [pc, #372]	; 123f8 <sprintf@plt+0xd5c>
   12280:	add	r3, pc, r3
   12284:	mov	r1, r3
   12288:	mov	r0, #67	; 0x43
   1228c:	bl	12b00 <sprintf@plt+0x1464>
   12290:	mov	r0, #2
   12294:	bl	11684 <exit@plt>
   12298:	ldr	r3, [fp, #-84]	; 0xffffffac
   1229c:	cmp	r3, #0
   122a0:	beq	12380 <sprintf@plt+0xce4>
   122a4:	ldr	r3, [fp, #-16]
   122a8:	ldr	r3, [r3, #8]
   122ac:	cmp	r3, #52	; 0x34
   122b0:	beq	122c0 <sprintf@plt+0xc24>
   122b4:	cmp	r3, #54	; 0x36
   122b8:	beq	122f0 <sprintf@plt+0xc54>
   122bc:	b	12358 <sprintf@plt+0xcbc>
   122c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   122c4:	add	r3, r3, #4
   122c8:	ldrh	r3, [r3]
   122cc:	cmp	r3, #2
   122d0:	bne	12388 <sprintf@plt+0xcec>
   122d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   122d8:	add	r3, r3, #4
   122dc:	sub	r1, fp, #72	; 0x48
   122e0:	mov	r2, #53	; 0x35
   122e4:	mov	r0, r3
   122e8:	bl	115c4 <rb_inet_ntop_sock@plt>
   122ec:	b	12388 <sprintf@plt+0xcec>
   122f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   122f4:	add	r3, r3, #4
   122f8:	ldrh	r3, [r3]
   122fc:	cmp	r3, #10
   12300:	bne	12390 <sprintf@plt+0xcf4>
   12304:	ldr	r3, [fp, #-84]	; 0xffffffac
   12308:	add	r3, r3, #4
   1230c:	sub	r1, fp, #72	; 0x48
   12310:	mov	r2, #53	; 0x35
   12314:	mov	r0, r3
   12318:	bl	115c4 <rb_inet_ntop_sock@plt>
   1231c:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   12320:	cmp	r3, #58	; 0x3a
   12324:	bne	12390 <sprintf@plt+0xcf4>
   12328:	sub	r3, fp, #72	; 0x48
   1232c:	mov	r0, r3
   12330:	bl	114a4 <strlen@plt>
   12334:	mov	r2, r0
   12338:	sub	r1, fp, #72	; 0x48
   1233c:	sub	r3, fp, #72	; 0x48
   12340:	add	r3, r3, #1
   12344:	mov	r0, r3
   12348:	bl	115e8 <memmove@plt>
   1234c:	mov	r3, #48	; 0x30
   12350:	strb	r3, [fp, #-72]	; 0xffffffb8
   12354:	b	12390 <sprintf@plt+0xcf4>
   12358:	ldr	r3, [fp, #-16]
   1235c:	ldr	r3, [r3, #8]
   12360:	mov	r2, r3
   12364:	ldr	r3, [pc, #144]	; 123fc <sprintf@plt+0xd60>
   12368:	add	r3, pc, r3
   1236c:	mov	r1, r3
   12370:	mov	r0, #67	; 0x43
   12374:	bl	12b00 <sprintf@plt+0x1464>
   12378:	mov	r0, #2
   1237c:	bl	11684 <exit@plt>
   12380:	nop	{0}
   12384:	b	12394 <sprintf@plt+0xcf8>
   12388:	nop	{0}
   1238c:	b	12394 <sprintf@plt+0xcf8>
   12390:	nop	{0}
   12394:	ldr	r3, [fp, #-16]
   12398:	ldr	r3, [r3, #152]	; 0x98
   1239c:	cmp	r3, #0
   123a0:	beq	123d8 <sprintf@plt+0xd3c>
   123a4:	ldr	r3, [fp, #-16]
   123a8:	ldr	r4, [r3, #152]	; 0x98
   123ac:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   123b0:	cmp	r3, #42	; 0x2a
   123b4:	movne	r3, #1
   123b8:	moveq	r3, #0
   123bc:	uxtb	r1, r3
   123c0:	ldr	r3, [fp, #-16]
   123c4:	ldr	r2, [r3, #8]
   123c8:	ldr	r3, [fp, #-16]
   123cc:	ldr	r3, [r3, #156]	; 0x9c
   123d0:	sub	r0, fp, #72	; 0x48
   123d4:	blx	r4
   123d8:	ldr	r0, [fp, #-16]
   123dc:	bl	11f1c <sprintf@plt+0x880>
   123e0:	nop	{0}
   123e4:	sub	sp, fp, #8
   123e8:	ldr	r4, [sp]
   123ec:	ldr	fp, [sp, #4]
   123f0:	add	sp, sp, #8
   123f4:	pop	{pc}		; (ldr pc, [sp], #4)
   123f8:			; <UNDEFINED> instruction: 0x0000cdb4
   123fc:	strdeq	ip, [r0], -r8
   12400:	str	r4, [sp, #-12]!
   12404:	str	fp, [sp, #4]
   12408:	str	lr, [sp, #8]
   1240c:	add	fp, sp, #8
   12410:	sub	sp, sp, #36	; 0x24
   12414:	str	r0, [fp, #-40]	; 0xffffffd8
   12418:	str	r1, [fp, #-44]	; 0xffffffd4
   1241c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12420:	str	r3, [fp, #-20]	; 0xffffffec
   12424:	mov	r3, #0
   12428:	str	r3, [fp, #-16]
   1242c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12430:	cmp	r3, #0
   12434:	bne	12454 <sprintf@plt+0xdb8>
   12438:	ldr	r3, [pc, #352]	; 125a0 <sprintf@plt+0xf04>
   1243c:	add	r3, pc, r3
   12440:	mov	r1, r3
   12444:	mov	r0, #67	; 0x43
   12448:	bl	12b00 <sprintf@plt+0x1464>
   1244c:	mov	r0, #2
   12450:	bl	11684 <exit@plt>
   12454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12458:	cmp	r3, #0
   1245c:	beq	12538 <sprintf@plt+0xe9c>
   12460:	ldr	r3, [fp, #-20]	; 0xffffffec
   12464:	ldr	r3, [r3, #8]
   12468:	cmp	r3, #82	; 0x52
   1246c:	bne	124b0 <sprintf@plt+0xe14>
   12470:	ldr	r3, [fp, #-20]	; 0xffffffec
   12474:	add	r3, r3, #12
   12478:	str	r3, [fp, #-24]	; 0xffffffe8
   1247c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12480:	add	r3, r3, #4
   12484:	str	r3, [fp, #-28]	; 0xffffffe4
   12488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1248c:	ldr	r2, [r3, #4]
   12490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12494:	ldr	r3, [r3, #4]
   12498:	cmp	r2, r3
   1249c:	bne	1253c <sprintf@plt+0xea0>
   124a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124a4:	ldr	r3, [r3]
   124a8:	str	r3, [fp, #-16]
   124ac:	b	1253c <sprintf@plt+0xea0>
   124b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   124b4:	ldr	r3, [r3, #8]
   124b8:	cmp	r3, #83	; 0x53
   124bc:	bne	12510 <sprintf@plt+0xe74>
   124c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   124c4:	add	r3, r3, #12
   124c8:	str	r3, [fp, #-32]	; 0xffffffe0
   124cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124d0:	add	r3, r3, #4
   124d4:	str	r3, [fp, #-36]	; 0xffffffdc
   124d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   124dc:	add	r0, r3, #8
   124e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   124e4:	add	r3, r3, #8
   124e8:	mov	r2, #16
   124ec:	mov	r1, r3
   124f0:	bl	11300 <memcmp@plt>
   124f4:	mov	r3, r0
   124f8:	cmp	r3, #0
   124fc:	bne	1253c <sprintf@plt+0xea0>
   12500:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12504:	ldr	r3, [r3]
   12508:	str	r3, [fp, #-16]
   1250c:	b	1253c <sprintf@plt+0xea0>
   12510:	ldr	r3, [fp, #-20]	; 0xffffffec
   12514:	ldr	r3, [r3, #8]
   12518:	mov	r2, r3
   1251c:	ldr	r3, [pc, #128]	; 125a4 <sprintf@plt+0xf08>
   12520:	add	r3, pc, r3
   12524:	mov	r1, r3
   12528:	mov	r0, #67	; 0x43
   1252c:	bl	12b00 <sprintf@plt+0x1464>
   12530:	mov	r0, #2
   12534:	bl	11684 <exit@plt>
   12538:	nop	{0}
   1253c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12540:	ldr	r3, [r3, #152]	; 0x98
   12544:	cmp	r3, #0
   12548:	beq	12580 <sprintf@plt+0xee4>
   1254c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12550:	ldr	r4, [r3, #152]	; 0x98
   12554:	ldr	r3, [fp, #-16]
   12558:	cmp	r3, #0
   1255c:	movne	r3, #1
   12560:	moveq	r3, #0
   12564:	uxtb	r1, r3
   12568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1256c:	ldr	r2, [r3, #8]
   12570:	ldr	r3, [fp, #-20]	; 0xffffffec
   12574:	ldr	r3, [r3, #156]	; 0x9c
   12578:	ldr	r0, [fp, #-16]
   1257c:	blx	r4
   12580:	ldr	r0, [fp, #-20]	; 0xffffffec
   12584:	bl	11f1c <sprintf@plt+0x880>
   12588:	nop	{0}
   1258c:	sub	sp, fp, #8
   12590:	ldr	r4, [sp]
   12594:	ldr	fp, [sp, #4]
   12598:	add	sp, sp, #8
   1259c:	pop	{pc}		; (ldr pc, [sp], #4)
   125a0:	andeq	ip, r0, r8, asr ip
   125a4:	andeq	ip, r0, r8, lsr #23
   125a8:	str	fp, [sp, #-8]!
   125ac:	str	lr, [sp, #4]
   125b0:	add	fp, sp, #4
   125b4:	sub	sp, sp, #32
   125b8:	str	r0, [fp, #-16]
   125bc:	str	r2, [fp, #-24]	; 0xffffffe8
   125c0:	str	r3, [fp, #-28]	; 0xffffffe4
   125c4:	mov	r3, r1
   125c8:	strb	r3, [fp, #-17]	; 0xffffffef
   125cc:	ldr	r3, [pc, #200]	; 1269c <sprintf@plt+0x1000>
   125d0:	add	r3, pc, r3
   125d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   125d8:	str	r2, [fp, #-8]
   125dc:	ldr	r2, [fp, #-8]
   125e0:	cmp	r2, #0
   125e4:	beq	125f4 <sprintf@plt+0xf58>
   125e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   125ec:	cmp	r2, #0
   125f0:	bne	12610 <sprintf@plt+0xf74>
   125f4:	ldr	r3, [pc, #164]	; 126a0 <sprintf@plt+0x1004>
   125f8:	add	r3, pc, r3
   125fc:	mov	r1, r3
   12600:	mov	r0, #67	; 0x43
   12604:	bl	12b00 <sprintf@plt+0x1464>
   12608:	mov	r0, #2
   1260c:	bl	11684 <exit@plt>
   12610:	ldr	r2, [fp, #-16]
   12614:	cmp	r2, #0
   12618:	beq	12630 <sprintf@plt+0xf94>
   1261c:	ldrb	r2, [fp, #-17]	; 0xffffffef
   12620:	eor	r2, r2, #1
   12624:	uxtb	r2, r2
   12628:	cmp	r2, #0
   1262c:	beq	1265c <sprintf@plt+0xfc0>
   12630:	ldr	r2, [pc, #108]	; 126a4 <sprintf@plt+0x1008>
   12634:	ldr	r3, [r3, r2]
   12638:	ldr	r0, [r3]
   1263c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12640:	ldr	r2, [fp, #-8]
   12644:	ldr	r1, [pc, #92]	; 126a8 <sprintf@plt+0x100c>
   12648:	add	r1, pc, r1
   1264c:	bl	11600 <rb_helper_write@plt>
   12650:	ldr	r0, [fp, #-8]
   12654:	bl	11f1c <sprintf@plt+0x880>
   12658:	b	1268c <sprintf@plt+0xff0>
   1265c:	ldr	r2, [pc, #64]	; 126a4 <sprintf@plt+0x1008>
   12660:	ldr	r3, [r3, r2]
   12664:	ldr	r0, [r3]
   12668:	ldr	r3, [fp, #-16]
   1266c:	str	r3, [sp]
   12670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12674:	ldr	r2, [fp, #-8]
   12678:	ldr	r1, [pc, #44]	; 126ac <sprintf@plt+0x1010>
   1267c:	add	r1, pc, r1
   12680:	bl	11600 <rb_helper_write@plt>
   12684:	ldr	r0, [fp, #-8]
   12688:	bl	11f1c <sprintf@plt+0x880>
   1268c:	sub	sp, fp, #4
   12690:	ldr	fp, [sp]
   12694:	add	sp, sp, #4
   12698:	pop	{pc}		; (ldr pc, [sp], #4)
   1269c:	andeq	lr, r1, r8, lsr #20
   126a0:	andeq	ip, r0, ip, lsl #22
   126a4:	andeq	r0, r0, r4, lsr #3
   126a8:	andeq	ip, r0, r8, ror #21
   126ac:	andeq	ip, r0, r0, asr #21
   126b0:	str	fp, [sp, #-8]!
   126b4:	str	lr, [sp, #4]
   126b8:	add	fp, sp, #4
   126bc:	sub	sp, sp, #24
   126c0:	str	r0, [fp, #-24]	; 0xffffffe8
   126c4:	str	r1, [fp, #-28]	; 0xffffffe4
   126c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126cc:	add	r3, r3, #4
   126d0:	ldr	r3, [r3]
   126d4:	mov	r0, r3
   126d8:	bl	11ea4 <sprintf@plt+0x808>
   126dc:	str	r0, [fp, #-12]
   126e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126e4:	add	r3, r3, #8
   126e8:	ldr	r3, [r3]
   126ec:	ldrb	r3, [r3]
   126f0:	strb	r3, [fp, #-13]
   126f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126f8:	ldr	r3, [r3, #12]
   126fc:	str	r3, [fp, #-20]	; 0xffffffec
   12700:	mov	r3, #2
   12704:	str	r3, [fp, #-8]
   12708:	ldrb	r3, [fp, #-13]
   1270c:	sub	r3, r3, #52	; 0x34
   12710:	cmp	r3, #31
   12714:	addls	pc, pc, r3, lsl #2
   12718:	b	1281c <sprintf@plt+0x1180>
   1271c:	b	127a4 <sprintf@plt+0x1108>
   12720:	b	1281c <sprintf@plt+0x1180>
   12724:	b	1279c <sprintf@plt+0x1100>
   12728:	b	1281c <sprintf@plt+0x1180>
   1272c:	b	1281c <sprintf@plt+0x1180>
   12730:	b	1281c <sprintf@plt+0x1180>
   12734:	b	1281c <sprintf@plt+0x1180>
   12738:	b	1281c <sprintf@plt+0x1180>
   1273c:	b	1281c <sprintf@plt+0x1180>
   12740:	b	1281c <sprintf@plt+0x1180>
   12744:	b	1281c <sprintf@plt+0x1180>
   12748:	b	1281c <sprintf@plt+0x1180>
   1274c:	b	1281c <sprintf@plt+0x1180>
   12750:	b	1281c <sprintf@plt+0x1180>
   12754:	b	1281c <sprintf@plt+0x1180>
   12758:	b	1281c <sprintf@plt+0x1180>
   1275c:	b	1281c <sprintf@plt+0x1180>
   12760:	b	1281c <sprintf@plt+0x1180>
   12764:	b	1281c <sprintf@plt+0x1180>
   12768:	b	1281c <sprintf@plt+0x1180>
   1276c:	b	1281c <sprintf@plt+0x1180>
   12770:	b	1281c <sprintf@plt+0x1180>
   12774:	b	1281c <sprintf@plt+0x1180>
   12778:	b	1281c <sprintf@plt+0x1180>
   1277c:	b	1281c <sprintf@plt+0x1180>
   12780:	b	1281c <sprintf@plt+0x1180>
   12784:	b	1281c <sprintf@plt+0x1180>
   12788:	b	1281c <sprintf@plt+0x1180>
   1278c:	b	1281c <sprintf@plt+0x1180>
   12790:	b	1281c <sprintf@plt+0x1180>
   12794:	b	127e0 <sprintf@plt+0x1144>
   12798:	b	127e0 <sprintf@plt+0x1144>
   1279c:	mov	r3, #10
   127a0:	str	r3, [fp, #-8]
   127a4:	ldr	r3, [fp, #-12]
   127a8:	ldr	r2, [pc, #176]	; 12860 <sprintf@plt+0x11c4>
   127ac:	add	r2, pc, r2
   127b0:	ldr	r1, [fp, #-8]
   127b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   127b8:	bl	11f68 <sprintf@plt+0x8cc>
   127bc:	mov	r3, r0
   127c0:	cmp	r3, #0
   127c4:	bne	12840 <sprintf@plt+0x11a4>
   127c8:	ldrb	r2, [fp, #-13]
   127cc:	mov	r3, #0
   127d0:	mov	r1, #0
   127d4:	mov	r0, #0
   127d8:	bl	125a8 <sprintf@plt+0xf0c>
   127dc:	b	12840 <sprintf@plt+0x11a4>
   127e0:	ldr	r2, [fp, #-12]
   127e4:	ldr	r3, [pc, #120]	; 12864 <sprintf@plt+0x11c8>
   127e8:	add	r3, pc, r3
   127ec:	mov	r1, r3
   127f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127f4:	bl	12098 <sprintf@plt+0x9fc>
   127f8:	mov	r3, r0
   127fc:	cmp	r3, #0
   12800:	bne	12848 <sprintf@plt+0x11ac>
   12804:	ldrb	r2, [fp, #-13]
   12808:	mov	r3, #0
   1280c:	mov	r1, #0
   12810:	mov	r0, #0
   12814:	bl	125a8 <sprintf@plt+0xf0c>
   12818:	b	12848 <sprintf@plt+0x11ac>
   1281c:	ldrb	r3, [fp, #-13]
   12820:	mov	r2, r3
   12824:	ldr	r3, [pc, #60]	; 12868 <sprintf@plt+0x11cc>
   12828:	add	r3, pc, r3
   1282c:	mov	r1, r3
   12830:	mov	r0, #67	; 0x43
   12834:	bl	12b00 <sprintf@plt+0x1464>
   12838:	mov	r0, #2
   1283c:	bl	11684 <exit@plt>
   12840:	nop	{0}
   12844:	b	1284c <sprintf@plt+0x11b0>
   12848:	nop	{0}
   1284c:	nop	{0}
   12850:	sub	sp, fp, #4
   12854:	ldr	fp, [sp]
   12858:	add	sp, sp, #4
   1285c:	pop	{pc}		; (ldr pc, [sp], #4)
   12860:			; <UNDEFINED> instruction: 0xfffffdf4
   12864:			; <UNDEFINED> instruction: 0xfffffdb8
   12868:	andeq	ip, r0, r4, lsr #18
   1286c:	str	r4, [sp, #-12]!
   12870:	str	fp, [sp, #4]
   12874:	str	lr, [sp, #8]
   12878:	add	fp, sp, #8
   1287c:	sub	sp, sp, #620	; 0x26c
   12880:	str	r0, [fp, #-624]	; 0xfffffd90
   12884:	mov	r3, r1
   12888:	strb	r3, [fp, #-625]	; 0xfffffd8f
   1288c:	ldr	r4, [pc, #396]	; 12a20 <sprintf@plt+0x1384>
   12890:	add	r4, pc, r4
   12894:	mov	r3, #0
   12898:	str	r3, [fp, #-16]
   1289c:	ldr	r3, [pc, #384]	; 12a24 <sprintf@plt+0x1388>
   128a0:	ldr	r3, [r4, r3]
   128a4:	ldr	r3, [r3]
   128a8:	cmp	r3, #0
   128ac:	bne	128e4 <sprintf@plt+0x1248>
   128b0:	ldr	r3, [pc, #368]	; 12a28 <sprintf@plt+0x138c>
   128b4:	add	r3, pc, r3
   128b8:	mov	r1, r3
   128bc:	mov	r0, #67	; 0x43
   128c0:	bl	12b00 <sprintf@plt+0x1464>
   128c4:	ldrb	r3, [fp, #-625]	; 0xfffffd8f
   128c8:	ldr	r2, [pc, #348]	; 12a2c <sprintf@plt+0x1390>
   128cc:	add	r2, pc, r2
   128d0:	mov	r1, r3
   128d4:	ldr	r0, [fp, #-624]	; 0xfffffd90
   128d8:	bl	12c2c <sprintf@plt+0x1590>
   128dc:	mov	r0, #2
   128e0:	bl	11684 <exit@plt>
   128e4:	mov	r3, #0
   128e8:	str	r3, [fp, #-20]	; 0xffffffec
   128ec:	b	129ac <sprintf@plt+0x1310>
   128f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128f4:	lsl	r3, r3, #7
   128f8:	ldr	r2, [pc, #304]	; 12a30 <sprintf@plt+0x1394>
   128fc:	ldr	r2, [r4, r2]
   12900:	add	r3, r3, r2
   12904:	sub	r1, fp, #620	; 0x26c
   12908:	mov	r2, #53	; 0x35
   1290c:	mov	r0, r3
   12910:	bl	115c4 <rb_inet_ntop_sock@plt>
   12914:	ldrb	r3, [fp, #-620]	; 0xfffffd94
   12918:	cmp	r3, #0
   1291c:	bne	12954 <sprintf@plt+0x12b8>
   12920:	ldr	r3, [pc, #268]	; 12a34 <sprintf@plt+0x1398>
   12924:	add	r3, pc, r3
   12928:	mov	r1, r3
   1292c:	mov	r0, #67	; 0x43
   12930:	bl	12b00 <sprintf@plt+0x1464>
   12934:	ldrb	r3, [fp, #-625]	; 0xfffffd8f
   12938:	ldr	r2, [pc, #248]	; 12a38 <sprintf@plt+0x139c>
   1293c:	add	r2, pc, r2
   12940:	mov	r1, r3
   12944:	ldr	r0, [fp, #-624]	; 0xfffffd90
   12948:	bl	12c2c <sprintf@plt+0x1590>
   1294c:	mov	r0, #2
   12950:	bl	11684 <exit@plt>
   12954:	sub	r3, fp, #620	; 0x26c
   12958:	mov	r0, r3
   1295c:	bl	114a4 <strlen@plt>
   12960:	mov	r3, r0
   12964:	add	r3, r3, #1
   12968:	str	r3, [fp, #-24]	; 0xffffffe8
   1296c:	sub	r2, fp, #564	; 0x234
   12970:	ldr	r3, [fp, #-16]
   12974:	add	r0, r2, r3
   12978:	ldr	r3, [fp, #-16]
   1297c:	rsb	r1, r3, #540	; 0x21c
   12980:	sub	r3, fp, #620	; 0x26c
   12984:	ldr	r2, [pc, #176]	; 12a3c <sprintf@plt+0x13a0>
   12988:	add	r2, pc, r2
   1298c:	bl	11630 <snprintf@plt>
   12990:	ldr	r2, [fp, #-16]
   12994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12998:	add	r3, r2, r3
   1299c:	str	r3, [fp, #-16]
   129a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   129a4:	add	r3, r3, #1
   129a8:	str	r3, [fp, #-20]	; 0xffffffec
   129ac:	ldr	r3, [pc, #112]	; 12a24 <sprintf@plt+0x1388>
   129b0:	ldr	r3, [r4, r3]
   129b4:	ldr	r3, [r3]
   129b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   129bc:	cmp	r2, r3
   129c0:	blt	128f0 <sprintf@plt+0x1254>
   129c4:	ldr	r3, [fp, #-16]
   129c8:	cmp	r3, #0
   129cc:	beq	129f0 <sprintf@plt+0x1354>
   129d0:	ldr	r3, [fp, #-16]
   129d4:	sub	r3, r3, #1
   129d8:	str	r3, [fp, #-16]
   129dc:	sub	r2, fp, #564	; 0x234
   129e0:	ldr	r3, [fp, #-16]
   129e4:	add	r3, r2, r3
   129e8:	mov	r2, #0
   129ec:	strb	r2, [r3]
   129f0:	sub	r3, fp, #564	; 0x234
   129f4:	ldrb	r1, [fp, #-625]	; 0xfffffd8f
   129f8:	ldr	r2, [pc, #64]	; 12a40 <sprintf@plt+0x13a4>
   129fc:	add	r2, pc, r2
   12a00:	ldr	r0, [fp, #-624]	; 0xfffffd90
   12a04:	bl	12b8c <sprintf@plt+0x14f0>
   12a08:	nop	{0}
   12a0c:	sub	sp, fp, #8
   12a10:	ldr	r4, [sp]
   12a14:	ldr	fp, [sp, #4]
   12a18:	add	sp, sp, #8
   12a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a20:	andeq	lr, r1, r8, ror #14
   12a24:	andeq	r0, r0, ip, ror r1
   12a28:	andeq	ip, r0, ip, asr #17
   12a2c:	andeq	ip, r0, ip, asr #17
   12a30:	andeq	r0, r0, r8, lsl #3
   12a34:	andeq	ip, r0, r4, lsl #17
   12a38:	andeq	ip, r0, r4, lsl #17
   12a3c:	andeq	ip, r0, ip, asr #16
   12a40:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   12a44:	str	fp, [sp, #-8]!
   12a48:	str	lr, [sp, #4]
   12a4c:	add	fp, sp, #4
   12a50:	sub	sp, sp, #8
   12a54:	mov	r3, r0
   12a58:	strb	r3, [fp, #-5]
   12a5c:	bl	14c98 <sprintf@plt+0x35fc>
   12a60:	nop	{0}
   12a64:	sub	sp, fp, #4
   12a68:	ldr	fp, [sp]
   12a6c:	add	sp, sp, #4
   12a70:	pop	{pc}		; (ldr pc, [sp], #4)
   12a74:	push	{r1, r2, r3}
   12a78:	str	r4, [sp, #-12]!
   12a7c:	str	fp, [sp, #4]
   12a80:	str	lr, [sp, #8]
   12a84:	add	fp, sp, #8
   12a88:	sub	sp, sp, #528	; 0x210
   12a8c:	str	r0, [fp, #-532]	; 0xfffffdec
   12a90:	ldr	r4, [pc, #92]	; 12af4 <sprintf@plt+0x1458>
   12a94:	add	r4, pc, r4
   12a98:	add	r3, fp, #8
   12a9c:	str	r3, [fp, #-524]	; 0xfffffdf4
   12aa0:	sub	r0, fp, #520	; 0x208
   12aa4:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   12aa8:	ldr	r2, [fp, #4]
   12aac:	mov	r1, #512	; 0x200
   12ab0:	bl	11348 <vsnprintf@plt>
   12ab4:	ldr	r3, [pc, #60]	; 12af8 <sprintf@plt+0x145c>
   12ab8:	ldr	r3, [r4, r3]
   12abc:	ldr	r0, [r3]
   12ac0:	sub	r3, fp, #520	; 0x208
   12ac4:	ldr	r2, [fp, #-532]	; 0xfffffdec
   12ac8:	ldr	r1, [pc, #44]	; 12afc <sprintf@plt+0x1460>
   12acc:	add	r1, pc, r1
   12ad0:	bl	11600 <rb_helper_write@plt>
   12ad4:	nop	{0}
   12ad8:	sub	sp, fp, #8
   12adc:	ldr	r4, [sp]
   12ae0:	ldr	fp, [sp, #4]
   12ae4:	ldr	lr, [sp, #8]
   12ae8:	add	sp, sp, #12
   12aec:	add	sp, sp, #12
   12af0:	bx	lr
   12af4:	andeq	lr, r1, r4, ror #10
   12af8:	andeq	r0, r0, r4, lsr #3
   12afc:	andeq	ip, r0, r0, lsl r7
   12b00:	push	{r1, r2, r3}
   12b04:	str	r4, [sp, #-12]!
   12b08:	str	fp, [sp, #4]
   12b0c:	str	lr, [sp, #8]
   12b10:	add	fp, sp, #8
   12b14:	sub	sp, sp, #528	; 0x210
   12b18:	str	r0, [fp, #-532]	; 0xfffffdec
   12b1c:	ldr	r4, [pc, #92]	; 12b80 <sprintf@plt+0x14e4>
   12b20:	add	r4, pc, r4
   12b24:	add	r3, fp, #8
   12b28:	str	r3, [fp, #-524]	; 0xfffffdf4
   12b2c:	sub	r0, fp, #520	; 0x208
   12b30:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   12b34:	ldr	r2, [fp, #4]
   12b38:	mov	r1, #512	; 0x200
   12b3c:	bl	11348 <vsnprintf@plt>
   12b40:	ldr	r3, [pc, #60]	; 12b84 <sprintf@plt+0x14e8>
   12b44:	ldr	r3, [r4, r3]
   12b48:	ldr	r0, [r3]
   12b4c:	sub	r3, fp, #520	; 0x208
   12b50:	ldr	r2, [fp, #-532]	; 0xfffffdec
   12b54:	ldr	r1, [pc, #44]	; 12b88 <sprintf@plt+0x14ec>
   12b58:	add	r1, pc, r1
   12b5c:	bl	11600 <rb_helper_write@plt>
   12b60:	nop	{0}
   12b64:	sub	sp, fp, #8
   12b68:	ldr	r4, [sp]
   12b6c:	ldr	fp, [sp, #4]
   12b70:	ldr	lr, [sp, #8]
   12b74:	add	sp, sp, #12
   12b78:	add	sp, sp, #12
   12b7c:	bx	lr
   12b80:	ldrdeq	lr, [r1], -r8
   12b84:	andeq	r0, r0, r4, lsr #3
   12b88:	muleq	r0, r0, r6
   12b8c:	push	{r2, r3}
   12b90:	str	r4, [sp, #-12]!
   12b94:	str	fp, [sp, #4]
   12b98:	str	lr, [sp, #8]
   12b9c:	add	fp, sp, #8
   12ba0:	sub	sp, sp, #540	; 0x21c
   12ba4:	str	r0, [fp, #-536]	; 0xfffffde8
   12ba8:	mov	r3, r1
   12bac:	strb	r3, [fp, #-537]	; 0xfffffde7
   12bb0:	ldr	r4, [pc, #104]	; 12c20 <sprintf@plt+0x1584>
   12bb4:	add	r4, pc, r4
   12bb8:	add	r3, fp, #8
   12bbc:	str	r3, [fp, #-528]	; 0xfffffdf0
   12bc0:	sub	r0, fp, #524	; 0x20c
   12bc4:	ldr	r3, [fp, #-528]	; 0xfffffdf0
   12bc8:	ldr	r2, [fp, #4]
   12bcc:	mov	r1, #512	; 0x200
   12bd0:	bl	11348 <vsnprintf@plt>
   12bd4:	ldr	r3, [pc, #72]	; 12c24 <sprintf@plt+0x1588>
   12bd8:	ldr	r3, [r4, r3]
   12bdc:	ldr	r0, [r3]
   12be0:	ldrb	r2, [fp, #-537]	; 0xfffffde7
   12be4:	sub	r3, fp, #524	; 0x20c
   12be8:	str	r3, [sp]
   12bec:	mov	r3, r2
   12bf0:	ldr	r2, [fp, #-536]	; 0xfffffde8
   12bf4:	ldr	r1, [pc, #44]	; 12c28 <sprintf@plt+0x158c>
   12bf8:	add	r1, pc, r1
   12bfc:	bl	11600 <rb_helper_write@plt>
   12c00:	nop	{0}
   12c04:	sub	sp, fp, #8
   12c08:	ldr	r4, [sp]
   12c0c:	ldr	fp, [sp, #4]
   12c10:	ldr	lr, [sp, #8]
   12c14:	add	sp, sp, #12
   12c18:	add	sp, sp, #8
   12c1c:	bx	lr
   12c20:	andeq	lr, r1, r4, asr #8
   12c24:	andeq	r0, r0, r4, lsr #3
   12c28:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   12c2c:	push	{r2, r3}
   12c30:	str	r4, [sp, #-12]!
   12c34:	str	fp, [sp, #4]
   12c38:	str	lr, [sp, #8]
   12c3c:	add	fp, sp, #8
   12c40:	sub	sp, sp, #540	; 0x21c
   12c44:	str	r0, [fp, #-536]	; 0xfffffde8
   12c48:	mov	r3, r1
   12c4c:	strb	r3, [fp, #-537]	; 0xfffffde7
   12c50:	ldr	r4, [pc, #104]	; 12cc0 <sprintf@plt+0x1624>
   12c54:	add	r4, pc, r4
   12c58:	add	r3, fp, #8
   12c5c:	str	r3, [fp, #-528]	; 0xfffffdf0
   12c60:	sub	r0, fp, #524	; 0x20c
   12c64:	ldr	r3, [fp, #-528]	; 0xfffffdf0
   12c68:	ldr	r2, [fp, #4]
   12c6c:	mov	r1, #512	; 0x200
   12c70:	bl	11348 <vsnprintf@plt>
   12c74:	ldr	r3, [pc, #72]	; 12cc4 <sprintf@plt+0x1628>
   12c78:	ldr	r3, [r4, r3]
   12c7c:	ldr	r0, [r3]
   12c80:	ldrb	r2, [fp, #-537]	; 0xfffffde7
   12c84:	sub	r3, fp, #524	; 0x20c
   12c88:	str	r3, [sp]
   12c8c:	mov	r3, r2
   12c90:	ldr	r2, [fp, #-536]	; 0xfffffde8
   12c94:	ldr	r1, [pc, #44]	; 12cc8 <sprintf@plt+0x162c>
   12c98:	add	r1, pc, r1
   12c9c:	bl	11600 <rb_helper_write@plt>
   12ca0:	nop	{0}
   12ca4:	sub	sp, fp, #8
   12ca8:	ldr	r4, [sp]
   12cac:	ldr	fp, [sp, #4]
   12cb0:	ldr	lr, [sp, #8]
   12cb4:	add	sp, sp, #12
   12cb8:	add	sp, sp, #8
   12cbc:	bx	lr
   12cc0:	andeq	lr, r1, r4, lsr #7
   12cc4:	andeq	r0, r0, r4, lsr #3
   12cc8:	andeq	ip, r0, r8, ror #10
   12ccc:	str	fp, [sp, #-8]!
   12cd0:	str	lr, [sp, #4]
   12cd4:	add	fp, sp, #4
   12cd8:	sub	sp, sp, #8
   12cdc:	str	r0, [fp, #-8]
   12ce0:	mov	r3, r1
   12ce4:	strb	r3, [fp, #-9]
   12ce8:	ldr	r2, [pc, #52]	; 12d24 <sprintf@plt+0x1688>
   12cec:	add	r2, pc, r2
   12cf0:	ldr	r3, [pc, #48]	; 12d28 <sprintf@plt+0x168c>
   12cf4:	ldr	r3, [r2, r3]
   12cf8:	ldr	r0, [r3]
   12cfc:	ldrb	r3, [fp, #-9]
   12d00:	ldr	r2, [fp, #-8]
   12d04:	ldr	r1, [pc, #32]	; 12d2c <sprintf@plt+0x1690>
   12d08:	add	r1, pc, r1
   12d0c:	bl	11600 <rb_helper_write@plt>
   12d10:	nop	{0}
   12d14:	sub	sp, fp, #4
   12d18:	ldr	fp, [sp]
   12d1c:	add	sp, sp, #4
   12d20:	pop	{pc}		; (ldr pc, [sp], #4)
   12d24:	andeq	lr, r1, ip, lsl #6
   12d28:	andeq	r0, r0, r4, lsr #3
   12d2c:	andeq	ip, r0, r4, lsl #10
   12d30:	str	fp, [sp, #-8]!
   12d34:	str	lr, [sp, #4]
   12d38:	add	fp, sp, #4
   12d3c:	sub	sp, sp, #16
   12d40:	str	r0, [fp, #-8]
   12d44:	str	r1, [fp, #-12]
   12d48:	str	r2, [fp, #-16]
   12d4c:	ldr	r3, [fp, #-8]
   12d50:	cmp	r3, #0
   12d54:	bne	12d78 <sprintf@plt+0x16dc>
   12d58:	ldr	r3, [pc, #268]	; 12e6c <sprintf@plt+0x17d0>
   12d5c:	add	r3, pc, r3
   12d60:	mov	r2, #143	; 0x8f
   12d64:	ldr	r1, [pc, #260]	; 12e70 <sprintf@plt+0x17d4>
   12d68:	add	r1, pc, r1
   12d6c:	ldr	r0, [pc, #256]	; 12e74 <sprintf@plt+0x17d8>
   12d70:	add	r0, pc, r0
   12d74:	bl	11414 <__assert_fail@plt>
   12d78:	ldr	r3, [fp, #-12]
   12d7c:	cmp	r3, #0
   12d80:	bne	12da4 <sprintf@plt+0x1708>
   12d84:	ldr	r3, [pc, #236]	; 12e78 <sprintf@plt+0x17dc>
   12d88:	add	r3, pc, r3
   12d8c:	mov	r2, #144	; 0x90
   12d90:	ldr	r1, [pc, #228]	; 12e7c <sprintf@plt+0x17e0>
   12d94:	add	r1, pc, r1
   12d98:	ldr	r0, [pc, #224]	; 12e80 <sprintf@plt+0x17e4>
   12d9c:	add	r0, pc, r0
   12da0:	bl	11414 <__assert_fail@plt>
   12da4:	ldr	r3, [fp, #-16]
   12da8:	cmp	r3, #0
   12dac:	bne	12dd0 <sprintf@plt+0x1734>
   12db0:	ldr	r3, [pc, #204]	; 12e84 <sprintf@plt+0x17e8>
   12db4:	add	r3, pc, r3
   12db8:	mov	r2, #145	; 0x91
   12dbc:	ldr	r1, [pc, #196]	; 12e88 <sprintf@plt+0x17ec>
   12dc0:	add	r1, pc, r1
   12dc4:	ldr	r0, [pc, #192]	; 12e8c <sprintf@plt+0x17f0>
   12dc8:	add	r0, pc, r0
   12dcc:	bl	11414 <__assert_fail@plt>
   12dd0:	ldr	r3, [fp, #-12]
   12dd4:	ldr	r2, [fp, #-8]
   12dd8:	str	r2, [r3]
   12ddc:	ldr	r3, [fp, #-12]
   12de0:	mov	r2, #0
   12de4:	str	r2, [r3, #4]
   12de8:	ldr	r3, [fp, #-16]
   12dec:	ldr	r2, [r3]
   12df0:	ldr	r3, [fp, #-12]
   12df4:	str	r2, [r3, #8]
   12df8:	ldr	r3, [fp, #-16]
   12dfc:	ldr	r3, [r3]
   12e00:	cmp	r3, #0
   12e04:	beq	12e1c <sprintf@plt+0x1780>
   12e08:	ldr	r3, [fp, #-16]
   12e0c:	ldr	r3, [r3]
   12e10:	ldr	r2, [fp, #-12]
   12e14:	str	r2, [r3, #4]
   12e18:	b	12e38 <sprintf@plt+0x179c>
   12e1c:	ldr	r3, [fp, #-16]
   12e20:	ldr	r3, [r3, #4]
   12e24:	cmp	r3, #0
   12e28:	bne	12e38 <sprintf@plt+0x179c>
   12e2c:	ldr	r3, [fp, #-16]
   12e30:	ldr	r2, [fp, #-12]
   12e34:	str	r2, [r3, #4]
   12e38:	ldr	r3, [fp, #-16]
   12e3c:	ldr	r2, [fp, #-12]
   12e40:	str	r2, [r3]
   12e44:	ldr	r3, [fp, #-16]
   12e48:	ldr	r3, [r3, #8]
   12e4c:	add	r2, r3, #1
   12e50:	ldr	r3, [fp, #-16]
   12e54:	str	r2, [r3, #8]
   12e58:	nop	{0}
   12e5c:	sub	sp, fp, #4
   12e60:	ldr	fp, [sp]
   12e64:	add	sp, sp, #4
   12e68:	pop	{pc}		; (ldr pc, [sp], #4)
   12e6c:	strdeq	ip, [r0], -r8
   12e70:	andeq	ip, r0, ip, lsr #9
   12e74:	andeq	ip, r0, r0, asr #9
   12e78:	andeq	ip, r0, ip, asr #13
   12e7c:	andeq	ip, r0, r0, lsl #9
   12e80:	andeq	ip, r0, r4, lsr #9
   12e84:	andeq	ip, r0, r0, lsr #13
   12e88:	andeq	ip, r0, r4, asr r4
   12e8c:	andeq	ip, r0, r4, lsl #9
   12e90:	str	fp, [sp, #-8]!
   12e94:	str	lr, [sp, #4]
   12e98:	add	fp, sp, #4
   12e9c:	sub	sp, sp, #8
   12ea0:	str	r0, [fp, #-8]
   12ea4:	str	r1, [fp, #-12]
   12ea8:	ldr	r3, [fp, #-8]
   12eac:	cmp	r3, #0
   12eb0:	bne	12ed4 <sprintf@plt+0x1838>
   12eb4:	ldr	r3, [pc, #248]	; 12fb4 <sprintf@plt+0x1918>
   12eb8:	add	r3, pc, r3
   12ebc:	mov	r2, #235	; 0xeb
   12ec0:	ldr	r1, [pc, #240]	; 12fb8 <sprintf@plt+0x191c>
   12ec4:	add	r1, pc, r1
   12ec8:	ldr	r0, [pc, #236]	; 12fbc <sprintf@plt+0x1920>
   12ecc:	add	r0, pc, r0
   12ed0:	bl	11414 <__assert_fail@plt>
   12ed4:	ldr	r3, [fp, #-12]
   12ed8:	cmp	r3, #0
   12edc:	bne	12f00 <sprintf@plt+0x1864>
   12ee0:	ldr	r3, [pc, #216]	; 12fc0 <sprintf@plt+0x1924>
   12ee4:	add	r3, pc, r3
   12ee8:	mov	r2, #236	; 0xec
   12eec:	ldr	r1, [pc, #208]	; 12fc4 <sprintf@plt+0x1928>
   12ef0:	add	r1, pc, r1
   12ef4:	ldr	r0, [pc, #204]	; 12fc8 <sprintf@plt+0x192c>
   12ef8:	add	r0, pc, r0
   12efc:	bl	11414 <__assert_fail@plt>
   12f00:	ldr	r3, [fp, #-8]
   12f04:	ldr	r3, [r3, #8]
   12f08:	cmp	r3, #0
   12f0c:	beq	12f28 <sprintf@plt+0x188c>
   12f10:	ldr	r3, [fp, #-8]
   12f14:	ldr	r3, [r3, #8]
   12f18:	ldr	r2, [fp, #-8]
   12f1c:	ldr	r2, [r2, #4]
   12f20:	str	r2, [r3, #4]
   12f24:	b	12f38 <sprintf@plt+0x189c>
   12f28:	ldr	r3, [fp, #-8]
   12f2c:	ldr	r2, [r3, #4]
   12f30:	ldr	r3, [fp, #-12]
   12f34:	str	r2, [r3, #4]
   12f38:	ldr	r3, [fp, #-8]
   12f3c:	ldr	r3, [r3, #4]
   12f40:	cmp	r3, #0
   12f44:	beq	12f60 <sprintf@plt+0x18c4>
   12f48:	ldr	r3, [fp, #-8]
   12f4c:	ldr	r3, [r3, #4]
   12f50:	ldr	r2, [fp, #-8]
   12f54:	ldr	r2, [r2, #8]
   12f58:	str	r2, [r3, #8]
   12f5c:	b	12f70 <sprintf@plt+0x18d4>
   12f60:	ldr	r3, [fp, #-8]
   12f64:	ldr	r2, [r3, #8]
   12f68:	ldr	r3, [fp, #-12]
   12f6c:	str	r2, [r3]
   12f70:	ldr	r3, [fp, #-8]
   12f74:	mov	r2, #0
   12f78:	str	r2, [r3, #4]
   12f7c:	ldr	r3, [fp, #-8]
   12f80:	ldr	r2, [r3, #4]
   12f84:	ldr	r3, [fp, #-8]
   12f88:	str	r2, [r3, #8]
   12f8c:	ldr	r3, [fp, #-12]
   12f90:	ldr	r3, [r3, #8]
   12f94:	sub	r2, r3, #1
   12f98:	ldr	r3, [fp, #-12]
   12f9c:	str	r2, [r3, #8]
   12fa0:	nop	{0}
   12fa4:	sub	sp, fp, #4
   12fa8:	ldr	fp, [sp]
   12fac:	add	sp, sp, #4
   12fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12fb4:	andeq	ip, r0, ip, lsl #11
   12fb8:	andeq	ip, r0, r0, asr r3
   12fbc:	andeq	ip, r0, r4, ror r3
   12fc0:	andeq	ip, r0, r0, ror #10
   12fc4:	andeq	ip, r0, r4, lsr #6
   12fc8:	andeq	ip, r0, r4, asr r3
   12fcc:	str	fp, [sp, #-8]!
   12fd0:	str	lr, [sp, #4]
   12fd4:	add	fp, sp, #4
   12fd8:	sub	sp, sp, #16
   12fdc:	str	r0, [fp, #-16]
   12fe0:	ldr	r1, [fp, #-16]
   12fe4:	mov	r0, #1
   12fe8:	bl	113a8 <calloc@plt>
   12fec:	mov	r3, r0
   12ff0:	str	r3, [fp, #-8]
   12ff4:	ldr	r3, [fp, #-8]
   12ff8:	cmp	r3, #0
   12ffc:	moveq	r3, #1
   13000:	movne	r3, #0
   13004:	uxtb	r3, r3
   13008:	cmp	r3, #0
   1300c:	beq	13014 <sprintf@plt+0x1978>
   13010:	bl	11570 <rb_outofmemory@plt>
   13014:	ldr	r3, [fp, #-8]
   13018:	mov	r0, r3
   1301c:	sub	sp, fp, #4
   13020:	ldr	fp, [sp]
   13024:	add	sp, sp, #4
   13028:	pop	{pc}		; (ldr pc, [sp], #4)
   1302c:	str	fp, [sp, #-8]!
   13030:	str	lr, [sp, #4]
   13034:	add	fp, sp, #4
   13038:	sub	sp, sp, #8
   1303c:	str	r0, [fp, #-8]
   13040:	ldr	r3, [fp, #-8]
   13044:	cmp	r3, #0
   13048:	movne	r3, #1
   1304c:	moveq	r3, #0
   13050:	uxtb	r3, r3
   13054:	cmp	r3, #0
   13058:	beq	13064 <sprintf@plt+0x19c8>
   1305c:	ldr	r0, [fp, #-8]
   13060:	bl	11444 <free@plt>
   13064:	nop	{0}
   13068:	sub	sp, fp, #4
   1306c:	ldr	fp, [sp]
   13070:	add	sp, sp, #4
   13074:	pop	{pc}		; (ldr pc, [sp], #4)
   13078:	push	{fp}		; (str fp, [sp, #-4]!)
   1307c:	add	fp, sp, #0
   13080:	sub	sp, sp, #12
   13084:	str	r0, [fp, #-8]
   13088:	str	r1, [fp, #-12]
   1308c:	ldr	r2, [fp, #-12]
   13090:	ldr	r3, [fp, #-8]
   13094:	sub	r3, r2, r3
   13098:	mov	r0, r3
   1309c:	add	sp, fp, #0
   130a0:	pop	{fp}		; (ldr fp, [sp], #4)
   130a4:	bx	lr
   130a8:	push	{fp}		; (str fp, [sp, #-4]!)
   130ac:	add	fp, sp, #0
   130b0:	sub	sp, sp, #12
   130b4:	str	r0, [fp, #-8]
   130b8:	ldr	r3, [fp, #-8]
   130bc:	ldr	r3, [r3, #460]	; 0x1cc
   130c0:	add	r2, r3, #1
   130c4:	ldr	r3, [fp, #-8]
   130c8:	str	r2, [r3, #460]	; 0x1cc
   130cc:	nop	{0}
   130d0:	add	sp, fp, #0
   130d4:	pop	{fp}		; (ldr fp, [sp], #4)
   130d8:	bx	lr
   130dc:	str	fp, [sp, #-8]!
   130e0:	str	lr, [sp, #4]
   130e4:	add	fp, sp, #4
   130e8:	sub	sp, sp, #8
   130ec:	str	r0, [fp, #-8]
   130f0:	ldr	r3, [fp, #-8]
   130f4:	ldr	r3, [r3, #460]	; 0x1cc
   130f8:	sub	r2, r3, #1
   130fc:	ldr	r3, [fp, #-8]
   13100:	str	r2, [r3, #460]	; 0x1cc
   13104:	ldr	r3, [fp, #-8]
   13108:	ldr	r3, [r3, #460]	; 0x1cc
   1310c:	cmp	r3, #0
   13110:	bne	1311c <sprintf@plt+0x1a80>
   13114:	ldr	r0, [fp, #-8]
   13118:	bl	138a8 <sprintf@plt+0x220c>
   1311c:	nop	{0}
   13120:	sub	sp, fp, #4
   13124:	ldr	fp, [sp]
   13128:	add	sp, sp, #4
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	push	{fp}		; (str fp, [sp, #-4]!)
   13134:	add	fp, sp, #0
   13138:	sub	sp, sp, #12
   1313c:	str	r0, [fp, #-8]
   13140:	str	r1, [fp, #-12]
   13144:	ldr	r3, [fp, #-8]
   13148:	ldr	r2, [r3, #464]	; 0x1d0
   1314c:	ldr	r3, [fp, #-12]
   13150:	lsl	r3, r3, #4
   13154:	add	r3, r2, r3
   13158:	ldr	r3, [r3, #12]
   1315c:	mov	r0, r3
   13160:	add	sp, fp, #0
   13164:	pop	{fp}		; (ldr fp, [sp], #4)
   13168:	bx	lr
   1316c:	str	fp, [sp, #-8]!
   13170:	str	lr, [sp, #4]
   13174:	add	fp, sp, #4
   13178:	sub	sp, sp, #8
   1317c:	str	r0, [fp, #-8]
   13180:	str	r1, [fp, #-12]
   13184:	ldr	r1, [fp, #-12]
   13188:	ldr	r0, [fp, #-8]
   1318c:	bl	13130 <sprintf@plt+0x1a94>
   13190:	mov	r3, r0
   13194:	cmp	r3, #1
   13198:	moveq	r3, #1
   1319c:	movne	r3, #0
   131a0:	uxtb	r3, r3
   131a4:	mov	r0, r3
   131a8:	sub	sp, fp, #4
   131ac:	ldr	fp, [sp]
   131b0:	add	sp, sp, #4
   131b4:	pop	{pc}		; (ldr pc, [sp], #4)
   131b8:	push	{fp}		; (str fp, [sp, #-4]!)
   131bc:	add	fp, sp, #0
   131c0:	sub	sp, sp, #12
   131c4:	str	r0, [fp, #-8]
   131c8:	str	r1, [fp, #-12]
   131cc:	ldr	r3, [fp, #-8]
   131d0:	ldr	r2, [r3, #464]	; 0x1d0
   131d4:	ldr	r3, [fp, #-12]
   131d8:	lsl	r3, r3, #4
   131dc:	add	r3, r2, r3
   131e0:	ldr	r3, [r3, #4]
   131e4:	mov	r0, r3
   131e8:	add	sp, fp, #0
   131ec:	pop	{fp}		; (ldr fp, [sp], #4)
   131f0:	bx	lr
   131f4:	push	{fp}		; (str fp, [sp, #-4]!)
   131f8:	add	fp, sp, #0
   131fc:	sub	sp, sp, #20
   13200:	str	r0, [fp, #-8]
   13204:	str	r1, [fp, #-12]
   13208:	str	r2, [fp, #-16]
   1320c:	ldr	r3, [fp, #-8]
   13210:	ldr	r2, [r3, #464]	; 0x1d0
   13214:	ldr	r3, [fp, #-12]
   13218:	lsl	r3, r3, #4
   1321c:	add	r3, r2, r3
   13220:	ldr	r2, [fp, #-16]
   13224:	str	r2, [r3, #12]
   13228:	nop	{0}
   1322c:	add	sp, fp, #0
   13230:	pop	{fp}		; (ldr fp, [sp], #4)
   13234:	bx	lr
   13238:	str	fp, [sp, #-8]!
   1323c:	str	lr, [sp, #4]
   13240:	add	fp, sp, #4
   13244:	sub	sp, sp, #8
   13248:	str	r0, [fp, #-8]
   1324c:	str	r1, [fp, #-12]
   13250:	ldr	r3, [fp, #-8]
   13254:	ldr	r3, [r3, #456]	; 0x1c8
   13258:	add	r2, r3, #1
   1325c:	ldr	r3, [fp, #-8]
   13260:	str	r2, [r3, #456]	; 0x1c8
   13264:	mov	r2, #1
   13268:	ldr	r1, [fp, #-12]
   1326c:	ldr	r0, [fp, #-8]
   13270:	bl	131f4 <sprintf@plt+0x1b58>
   13274:	nop	{0}
   13278:	sub	sp, fp, #4
   1327c:	ldr	fp, [sp]
   13280:	add	sp, sp, #4
   13284:	pop	{pc}		; (ldr pc, [sp], #4)
   13288:	str	fp, [sp, #-8]!
   1328c:	str	lr, [sp, #4]
   13290:	add	fp, sp, #4
   13294:	sub	sp, sp, #8
   13298:	str	r0, [fp, #-8]
   1329c:	str	r1, [fp, #-12]
   132a0:	mov	r2, #2
   132a4:	ldr	r1, [fp, #-12]
   132a8:	ldr	r0, [fp, #-8]
   132ac:	bl	131f4 <sprintf@plt+0x1b58>
   132b0:	ldr	r3, [fp, #-8]
   132b4:	ldr	r3, [r3, #456]	; 0x1c8
   132b8:	sub	r2, r3, #1
   132bc:	ldr	r3, [fp, #-8]
   132c0:	str	r2, [r3, #456]	; 0x1c8
   132c4:	nop	{0}
   132c8:	sub	sp, fp, #4
   132cc:	ldr	fp, [sp]
   132d0:	add	sp, sp, #4
   132d4:	pop	{pc}		; (ldr pc, [sp], #4)
   132d8:	strd	r4, [sp, #-16]!
   132dc:	str	fp, [sp, #8]
   132e0:	str	lr, [sp, #12]
   132e4:	add	fp, sp, #12
   132e8:	ldr	r4, [pc, #176]	; 133a0 <sprintf@plt+0x1d04>
   132ec:	add	r4, pc, r4
   132f0:	ldr	r3, [pc, #172]	; 133a4 <sprintf@plt+0x1d08>
   132f4:	add	r3, pc, r3
   132f8:	mov	r1, r3
   132fc:	ldr	r3, [pc, #164]	; 133a8 <sprintf@plt+0x1d0c>
   13300:	add	r3, pc, r3
   13304:	mov	r0, r3
   13308:	bl	115dc <rb_dictionary_create@plt>
   1330c:	mov	r2, r0
   13310:	ldr	r3, [pc, #148]	; 133ac <sprintf@plt+0x1d10>
   13314:	ldr	r3, [r4, r3]
   13318:	str	r2, [r3]
   1331c:	mov	r3, #1
   13320:	mov	r2, #0
   13324:	ldr	r1, [pc, #132]	; 133b0 <sprintf@plt+0x1d14>
   13328:	add	r1, pc, r1
   1332c:	ldr	r0, [pc, #128]	; 133b4 <sprintf@plt+0x1d18>
   13330:	add	r0, pc, r0
   13334:	bl	112c4 <rb_event_addish@plt>
   13338:	mov	r2, r0
   1333c:	ldr	r3, [pc, #116]	; 133b8 <sprintf@plt+0x1d1c>
   13340:	add	r3, pc, r3
   13344:	str	r2, [r3]
   13348:	ldr	r3, [pc, #108]	; 133bc <sprintf@plt+0x1d20>
   1334c:	ldr	r3, [r4, r3]
   13350:	mov	r0, r3
   13354:	bl	13580 <sprintf@plt+0x1ee4>
   13358:	ldr	r3, [pc, #96]	; 133c0 <sprintf@plt+0x1d24>
   1335c:	ldr	r3, [r4, r3]
   13360:	mov	r0, r3
   13364:	bl	13580 <sprintf@plt+0x1ee4>
   13368:	ldr	r3, [pc, #84]	; 133c4 <sprintf@plt+0x1d28>
   1336c:	ldr	r3, [r4, r3]
   13370:	mov	r0, r3
   13374:	bl	13580 <sprintf@plt+0x1ee4>
   13378:	ldr	r3, [pc, #72]	; 133c8 <sprintf@plt+0x1d2c>
   1337c:	ldr	r3, [r4, r3]
   13380:	mov	r0, r3
   13384:	bl	13580 <sprintf@plt+0x1ee4>
   13388:	nop	{0}
   1338c:	sub	sp, fp, #12
   13390:	ldrd	r4, [sp]
   13394:	ldr	fp, [sp, #8]
   13398:	add	sp, sp, #12
   1339c:	pop	{pc}		; (ldr pc, [sp], #4)
   133a0:	andeq	sp, r1, ip, lsl #26
   133a4:			; <UNDEFINED> instruction: 0xfffffd7c
   133a8:	andeq	fp, r0, ip, asr pc
   133ac:	andeq	r0, r0, r8, ror #2
   133b0:	andeq	r0, r0, r8, asr #30
   133b4:	andeq	fp, r0, r4, asr #30
   133b8:	andeq	r2, r2, r0, asr #25
   133bc:	muleq	r0, r8, r1
   133c0:	muleq	r0, r4, r1
   133c4:	andeq	r0, r0, r8, ror r1
   133c8:	andeq	r0, r0, r4, ror r1
   133cc:	str	r4, [sp, #-12]!
   133d0:	str	fp, [sp, #4]
   133d4:	str	lr, [sp, #8]
   133d8:	add	fp, sp, #8
   133dc:	sub	sp, sp, #28
   133e0:	ldr	r4, [pc, #384]	; 13568 <sprintf@plt+0x1ecc>
   133e4:	add	r4, pc, r4
   133e8:	ldr	r3, [pc, #380]	; 1356c <sprintf@plt+0x1ed0>
   133ec:	ldr	r3, [r4, r3]
   133f0:	ldr	r3, [r3]
   133f4:	sub	r2, fp, #36	; 0x24
   133f8:	mov	r1, r2
   133fc:	mov	r0, r3
   13400:	bl	11480 <rb_dictionary_foreach_start@plt>
   13404:	b	13450 <sprintf@plt+0x1db4>
   13408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1340c:	bl	130a8 <sprintf@plt+0x1a0c>
   13410:	ldr	r3, [pc, #344]	; 13570 <sprintf@plt+0x1ed4>
   13414:	add	r3, pc, r3
   13418:	ldr	r2, [pc, #340]	; 13574 <sprintf@plt+0x1ed8>
   1341c:	add	r2, pc, r2
   13420:	mvn	r1, #0
   13424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13428:	bl	13af4 <sprintf@plt+0x2458>
   1342c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13430:	bl	130dc <sprintf@plt+0x1a40>
   13434:	ldr	r3, [pc, #304]	; 1356c <sprintf@plt+0x1ed0>
   13438:	ldr	r3, [r4, r3]
   1343c:	ldr	r3, [r3]
   13440:	sub	r2, fp, #36	; 0x24
   13444:	mov	r1, r2
   13448:	mov	r0, r3
   1344c:	bl	11438 <rb_dictionary_foreach_next@plt>
   13450:	ldr	r3, [pc, #276]	; 1356c <sprintf@plt+0x1ed0>
   13454:	ldr	r3, [r4, r3]
   13458:	ldr	r3, [r3]
   1345c:	sub	r2, fp, #36	; 0x24
   13460:	mov	r1, r2
   13464:	mov	r0, r3
   13468:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1346c:	str	r0, [fp, #-24]	; 0xffffffe8
   13470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13474:	cmp	r3, #0
   13478:	bne	13408 <sprintf@plt+0x1d6c>
   1347c:	ldr	r3, [pc, #244]	; 13578 <sprintf@plt+0x1edc>
   13480:	ldr	r3, [r4, r3]
   13484:	ldr	r3, [r3]
   13488:	str	r3, [fp, #-16]
   1348c:	ldr	r3, [fp, #-16]
   13490:	cmp	r3, #0
   13494:	beq	134a4 <sprintf@plt+0x1e08>
   13498:	ldr	r3, [fp, #-16]
   1349c:	ldr	r3, [r3, #8]
   134a0:	b	134a8 <sprintf@plt+0x1e0c>
   134a4:	mov	r3, #0
   134a8:	str	r3, [fp, #-20]	; 0xffffffec
   134ac:	b	13514 <sprintf@plt+0x1e78>
   134b0:	ldr	r3, [fp, #-16]
   134b4:	ldr	r3, [r3]
   134b8:	str	r3, [fp, #-28]	; 0xffffffe4
   134bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134c0:	ldr	r3, [r3, #28]
   134c4:	cmp	r3, #0
   134c8:	beq	134d8 <sprintf@plt+0x1e3c>
   134cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134d0:	ldr	r3, [r3, #28]
   134d4:	blx	r3
   134d8:	ldr	r3, [pc, #152]	; 13578 <sprintf@plt+0x1edc>
   134dc:	ldr	r3, [r4, r3]
   134e0:	mov	r1, r3
   134e4:	ldr	r0, [fp, #-16]
   134e8:	bl	12e90 <sprintf@plt+0x17f4>
   134ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   134f0:	str	r3, [fp, #-16]
   134f4:	ldr	r3, [fp, #-16]
   134f8:	cmp	r3, #0
   134fc:	beq	1350c <sprintf@plt+0x1e70>
   13500:	ldr	r3, [fp, #-16]
   13504:	ldr	r3, [r3, #8]
   13508:	b	13510 <sprintf@plt+0x1e74>
   1350c:	mov	r3, #0
   13510:	str	r3, [fp, #-20]	; 0xffffffec
   13514:	ldr	r3, [fp, #-16]
   13518:	cmp	r3, #0
   1351c:	bne	134b0 <sprintf@plt+0x1e14>
   13520:	ldr	r3, [pc, #68]	; 1356c <sprintf@plt+0x1ed0>
   13524:	ldr	r3, [r4, r3]
   13528:	ldr	r3, [r3]
   1352c:	mov	r2, #0
   13530:	mov	r1, #0
   13534:	mov	r0, r3
   13538:	bl	1151c <rb_dictionary_destroy@plt>
   1353c:	ldr	r3, [pc, #56]	; 1357c <sprintf@plt+0x1ee0>
   13540:	add	r3, pc, r3
   13544:	ldr	r3, [r3]
   13548:	mov	r0, r3
   1354c:	bl	11318 <rb_event_delete@plt>
   13550:	nop	{0}
   13554:	sub	sp, fp, #8
   13558:	ldr	r4, [sp]
   1355c:	ldr	fp, [sp, #4]
   13560:	add	sp, sp, #8
   13564:	pop	{pc}		; (ldr pc, [sp], #4)
   13568:	andeq	sp, r1, r4, lsl ip
   1356c:	andeq	r0, r0, r8, ror #2
   13570:	andeq	fp, r0, r8, ror lr
   13574:			; <UNDEFINED> instruction: 0x0000beb4
   13578:			; <UNDEFINED> instruction: 0x000001b0
   1357c:	andeq	r2, r2, r0, asr #21
   13580:	str	r4, [sp, #-12]!
   13584:	str	fp, [sp, #4]
   13588:	str	lr, [sp, #8]
   1358c:	add	fp, sp, #8
   13590:	sub	sp, sp, #20
   13594:	str	r0, [fp, #-24]	; 0xffffffe8
   13598:	ldr	r4, [pc, #416]	; 13740 <sprintf@plt+0x20a4>
   1359c:	add	r4, pc, r4
   135a0:	ldr	r3, [pc, #412]	; 13744 <sprintf@plt+0x20a8>
   135a4:	add	r3, pc, r3
   135a8:	ldr	r3, [r3, #8]
   135ac:	cmp	r3, #0
   135b0:	beq	13608 <sprintf@plt+0x1f6c>
   135b4:	ldr	r3, [pc, #396]	; 13748 <sprintf@plt+0x20ac>
   135b8:	add	r3, pc, r3
   135bc:	ldr	r3, [r3]
   135c0:	ldr	r3, [r3]
   135c4:	mov	r2, r3
   135c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135cc:	str	r2, [r3, #12]
   135d0:	ldr	r3, [pc, #372]	; 1374c <sprintf@plt+0x20b0>
   135d4:	add	r3, pc, r3
   135d8:	ldr	r3, [r3]
   135dc:	ldr	r2, [pc, #364]	; 13750 <sprintf@plt+0x20b4>
   135e0:	add	r2, pc, r2
   135e4:	mov	r1, r2
   135e8:	mov	r0, r3
   135ec:	bl	12e90 <sprintf@plt+0x17f4>
   135f0:	ldr	r3, [pc, #348]	; 13754 <sprintf@plt+0x20b8>
   135f4:	add	r3, pc, r3
   135f8:	ldr	r3, [r3]
   135fc:	mov	r0, r3
   13600:	bl	114d4 <rb_free_rb_dlink_node@plt>
   13604:	b	1366c <sprintf@plt+0x1fd0>
   13608:	ldr	r3, [pc, #328]	; 13758 <sprintf@plt+0x20bc>
   1360c:	add	r3, pc, r3
   13610:	ldr	r3, [r3]
   13614:	cmp	r3, #32
   13618:	beq	13630 <sprintf@plt+0x1f94>
   1361c:	ldr	r3, [pc, #312]	; 1375c <sprintf@plt+0x20c0>
   13620:	add	r3, pc, r3
   13624:	ldr	r3, [r3]
   13628:	cmn	r3, #1
   1362c:	bne	13648 <sprintf@plt+0x1fac>
   13630:	ldr	r3, [pc, #296]	; 13760 <sprintf@plt+0x20c4>
   13634:	add	r3, pc, r3
   13638:	mov	r1, r3
   1363c:	mov	r0, #87	; 0x57
   13640:	bl	12b00 <sprintf@plt+0x1464>
   13644:	b	1372c <sprintf@plt+0x2090>
   13648:	ldr	r3, [pc, #276]	; 13764 <sprintf@plt+0x20c8>
   1364c:	add	r3, pc, r3
   13650:	ldr	r3, [r3]
   13654:	add	r1, r3, #1
   13658:	ldr	r2, [pc, #264]	; 13768 <sprintf@plt+0x20cc>
   1365c:	add	r2, pc, r2
   13660:	str	r1, [r2]
   13664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13668:	str	r3, [r2, #12]
   1366c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13670:	ldr	r3, [r3, #56]	; 0x38
   13674:	cmp	r3, #0
   13678:	beq	136c8 <sprintf@plt+0x202c>
   1367c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13680:	ldr	r3, [r3, #56]	; 0x38
   13684:	str	r3, [fp, #-16]
   13688:	b	136b8 <sprintf@plt+0x201c>
   1368c:	ldr	r3, [pc, #216]	; 1376c <sprintf@plt+0x20d0>
   13690:	ldr	r3, [r4, r3]
   13694:	ldr	r0, [r3]
   13698:	ldr	r3, [fp, #-16]
   1369c:	ldr	r3, [r3]
   136a0:	ldr	r2, [fp, #-16]
   136a4:	mov	r1, r3
   136a8:	bl	11588 <rb_dictionary_add@plt>
   136ac:	ldr	r3, [fp, #-16]
   136b0:	add	r3, r3, #12
   136b4:	str	r3, [fp, #-16]
   136b8:	ldr	r3, [fp, #-16]
   136bc:	ldr	r3, [r3]
   136c0:	cmp	r3, #0
   136c4:	bne	1368c <sprintf@plt+0x1ff0>
   136c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136cc:	ldrb	r3, [r3, #48]	; 0x30
   136d0:	cmp	r3, #0
   136d4:	beq	136f8 <sprintf@plt+0x205c>
   136d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136dc:	ldrb	r3, [r3, #48]	; 0x30
   136e0:	mov	r1, r3
   136e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136e8:	ldr	r2, [r3, #52]	; 0x34
   136ec:	ldr	r3, [pc, #124]	; 13770 <sprintf@plt+0x20d4>
   136f0:	ldr	r3, [r4, r3]
   136f4:	str	r2, [r3, r1, lsl #2]
   136f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136fc:	ldr	r3, [r3, #24]
   13700:	cmp	r3, #0
   13704:	beq	13714 <sprintf@plt+0x2078>
   13708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1370c:	ldr	r3, [r3, #24]
   13710:	blx	r3
   13714:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13718:	ldr	r3, [pc, #84]	; 13774 <sprintf@plt+0x20d8>
   1371c:	ldr	r3, [r4, r3]
   13720:	mov	r2, r3
   13724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13728:	bl	12d30 <sprintf@plt+0x1694>
   1372c:	sub	sp, fp, #8
   13730:	ldr	r4, [sp]
   13734:	ldr	fp, [sp, #4]
   13738:	add	sp, sp, #8
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)
   13740:	andeq	sp, r1, ip, asr sl
   13744:	andeq	r2, r2, ip, asr #20
   13748:	andeq	r2, r2, r8, lsr sl
   1374c:	andeq	r2, r2, ip, lsl sl
   13750:	andeq	r2, r2, r0, lsl sl
   13754:	strdeq	r2, [r2], -ip
   13758:	strdeq	r2, [r2], -r0
   1375c:	ldrdeq	r2, [r2], -ip
   13760:	andeq	fp, r0, r4, lsr #25
   13764:			; <UNDEFINED> instruction: 0x000229b0
   13768:	andeq	r2, r2, r0, lsr #19
   1376c:	muleq	r0, r0, r1
   13770:	andeq	r0, r0, r8, lsr #3
   13774:			; <UNDEFINED> instruction: 0x000001b0
   13778:	str	r4, [sp, #-12]!
   1377c:	str	fp, [sp, #4]
   13780:	str	lr, [sp, #8]
   13784:	add	fp, sp, #8
   13788:	sub	sp, sp, #20
   1378c:	str	r0, [fp, #-24]	; 0xffffffe8
   13790:	ldr	r4, [pc, #252]	; 13894 <sprintf@plt+0x21f8>
   13794:	add	r4, pc, r4
   13798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1379c:	ldr	r3, [r3, #56]	; 0x38
   137a0:	cmp	r3, #0
   137a4:	beq	137f4 <sprintf@plt+0x2158>
   137a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137ac:	ldr	r3, [r3, #56]	; 0x38
   137b0:	str	r3, [fp, #-16]
   137b4:	b	137e4 <sprintf@plt+0x2148>
   137b8:	ldr	r3, [pc, #216]	; 13898 <sprintf@plt+0x21fc>
   137bc:	ldr	r3, [r4, r3]
   137c0:	ldr	r2, [r3]
   137c4:	ldr	r3, [fp, #-16]
   137c8:	ldr	r3, [r3]
   137cc:	mov	r1, r3
   137d0:	mov	r0, r2
   137d4:	bl	114bc <rb_dictionary_delete@plt>
   137d8:	ldr	r3, [fp, #-16]
   137dc:	add	r3, r3, #12
   137e0:	str	r3, [fp, #-16]
   137e4:	ldr	r3, [fp, #-16]
   137e8:	ldr	r3, [r3]
   137ec:	cmp	r3, #0
   137f0:	bne	137b8 <sprintf@plt+0x211c>
   137f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137f8:	ldrb	r3, [r3, #48]	; 0x30
   137fc:	cmp	r3, #0
   13800:	beq	13820 <sprintf@plt+0x2184>
   13804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13808:	ldrb	r3, [r3, #48]	; 0x30
   1380c:	mov	r1, r3
   13810:	ldr	r3, [pc, #132]	; 1389c <sprintf@plt+0x2200>
   13814:	ldr	r3, [r4, r3]
   13818:	mov	r2, #0
   1381c:	str	r2, [r3, r1, lsl #2]
   13820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13824:	ldr	r3, [r3, #28]
   13828:	cmp	r3, #0
   1382c:	beq	1383c <sprintf@plt+0x21a0>
   13830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13834:	ldr	r3, [r3, #28]
   13838:	blx	r3
   1383c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13840:	ldr	r3, [pc, #88]	; 138a0 <sprintf@plt+0x2204>
   13844:	ldr	r3, [r4, r3]
   13848:	mov	r1, r3
   1384c:	mov	r0, r2
   13850:	bl	12e90 <sprintf@plt+0x17f4>
   13854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13858:	ldr	r3, [r3, #12]
   1385c:	mov	r4, r3
   13860:	bl	11624 <rb_make_rb_dlink_node@plt>
   13864:	mov	r1, r0
   13868:	ldr	r3, [pc, #52]	; 138a4 <sprintf@plt+0x2208>
   1386c:	add	r3, pc, r3
   13870:	mov	r2, r3
   13874:	mov	r0, r4
   13878:	bl	12d30 <sprintf@plt+0x1694>
   1387c:	nop	{0}
   13880:	sub	sp, fp, #8
   13884:	ldr	r4, [sp]
   13888:	ldr	fp, [sp, #4]
   1388c:	add	sp, sp, #8
   13890:	pop	{pc}		; (ldr pc, [sp], #4)
   13894:	andeq	sp, r1, r4, ror #16
   13898:	muleq	r0, r0, r1
   1389c:	andeq	r0, r0, r8, lsr #3
   138a0:			; <UNDEFINED> instruction: 0x000001b0
   138a4:	andeq	r2, r2, r4, lsl #15
   138a8:	str	fp, [sp, #-8]!
   138ac:	str	lr, [sp, #4]
   138b0:	add	fp, sp, #4
   138b4:	sub	sp, sp, #8
   138b8:	str	r0, [fp, #-8]
   138bc:	ldr	r2, [pc, #76]	; 13910 <sprintf@plt+0x2274>
   138c0:	add	r2, pc, r2
   138c4:	ldr	r3, [pc, #72]	; 13914 <sprintf@plt+0x2278>
   138c8:	ldr	r3, [r2, r3]
   138cc:	ldr	r2, [r3]
   138d0:	ldr	r3, [fp, #-8]
   138d4:	ldr	r3, [r3]
   138d8:	mov	r1, r3
   138dc:	mov	r0, r2
   138e0:	bl	114bc <rb_dictionary_delete@plt>
   138e4:	ldr	r3, [fp, #-8]
   138e8:	ldr	r3, [r3, #464]	; 0x1d0
   138ec:	mov	r0, r3
   138f0:	bl	1302c <sprintf@plt+0x1990>
   138f4:	ldr	r0, [fp, #-8]
   138f8:	bl	1302c <sprintf@plt+0x1990>
   138fc:	nop	{0}
   13900:	sub	sp, fp, #4
   13904:	ldr	fp, [sp]
   13908:	add	sp, sp, #4
   1390c:	pop	{pc}		; (ldr pc, [sp], #4)
   13910:	andeq	sp, r1, r8, lsr r7
   13914:	andeq	r0, r0, r8, ror #2
   13918:	str	fp, [sp, #-8]!
   1391c:	str	lr, [sp, #4]
   13920:	add	fp, sp, #4
   13924:	sub	sp, sp, #16
   13928:	str	r0, [fp, #-16]
   1392c:	ldr	r2, [pc, #188]	; 139f0 <sprintf@plt+0x2354>
   13930:	add	r2, pc, r2
   13934:	ldr	r3, [fp, #-16]
   13938:	ldrb	r3, [r3, #452]	; 0x1c4
   1393c:	cmp	r3, #0
   13940:	bne	139dc <sprintf@plt+0x2340>
   13944:	ldr	r3, [fp, #-16]
   13948:	mov	r1, #1
   1394c:	strb	r1, [r3, #452]	; 0x1c4
   13950:	ldr	r3, [fp, #-16]
   13954:	ldr	r3, [r3, #456]	; 0x1c8
   13958:	cmp	r3, #0
   1395c:	beq	139e0 <sprintf@plt+0x2344>
   13960:	ldr	r3, [pc, #140]	; 139f4 <sprintf@plt+0x2358>
   13964:	ldr	r3, [r2, r3]
   13968:	ldr	r3, [r3]
   1396c:	str	r3, [fp, #-8]
   13970:	b	139cc <sprintf@plt+0x2330>
   13974:	ldr	r3, [fp, #-8]
   13978:	ldr	r3, [r3]
   1397c:	str	r3, [fp, #-12]
   13980:	ldr	r3, [fp, #-12]
   13984:	ldr	r3, [r3, #36]	; 0x24
   13988:	cmp	r3, #0
   1398c:	beq	139c0 <sprintf@plt+0x2324>
   13990:	ldr	r3, [fp, #-12]
   13994:	ldr	r3, [r3, #12]
   13998:	mov	r1, r3
   1399c:	ldr	r0, [fp, #-16]
   139a0:	bl	1316c <sprintf@plt+0x1ad0>
   139a4:	mov	r3, r0
   139a8:	cmp	r3, #0
   139ac:	beq	139c0 <sprintf@plt+0x2324>
   139b0:	ldr	r3, [fp, #-12]
   139b4:	ldr	r3, [r3, #36]	; 0x24
   139b8:	ldr	r0, [fp, #-16]
   139bc:	blx	r3
   139c0:	ldr	r3, [fp, #-8]
   139c4:	ldr	r3, [r3, #8]
   139c8:	str	r3, [fp, #-8]
   139cc:	ldr	r3, [fp, #-8]
   139d0:	cmp	r3, #0
   139d4:	bne	13974 <sprintf@plt+0x22d8>
   139d8:	b	139e0 <sprintf@plt+0x2344>
   139dc:	nop	{0}
   139e0:	sub	sp, fp, #4
   139e4:	ldr	fp, [sp]
   139e8:	add	sp, sp, #4
   139ec:	pop	{pc}		; (ldr pc, [sp], #4)
   139f0:	andeq	sp, r1, r8, asr #13
   139f4:			; <UNDEFINED> instruction: 0x000001b0
   139f8:	str	r4, [sp, #-12]!
   139fc:	str	fp, [sp, #4]
   13a00:	str	lr, [sp, #8]
   13a04:	add	fp, sp, #8
   13a08:	sub	sp, sp, #20
   13a0c:	str	r0, [fp, #-24]	; 0xffffffe8
   13a10:	str	r1, [fp, #-28]	; 0xffffffe4
   13a14:	ldr	r4, [pc, #208]	; 13aec <sprintf@plt+0x2450>
   13a18:	add	r4, pc, r4
   13a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a24:	bl	13288 <sprintf@plt+0x1bec>
   13a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a2c:	ldr	r3, [r3, #456]	; 0x1c8
   13a30:	cmp	r3, #0
   13a34:	bne	13a5c <sprintf@plt+0x23c0>
   13a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a3c:	ldrb	r3, [r3, #451]	; 0x1c3
   13a40:	eor	r3, r3, #1
   13a44:	uxtb	r3, r3
   13a48:	cmp	r3, #0
   13a4c:	beq	13a5c <sprintf@plt+0x23c0>
   13a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a54:	bl	13c2c <sprintf@plt+0x2590>
   13a58:	b	13ad8 <sprintf@plt+0x243c>
   13a5c:	ldr	r3, [pc, #140]	; 13af0 <sprintf@plt+0x2454>
   13a60:	ldr	r3, [r4, r3]
   13a64:	ldr	r3, [r3]
   13a68:	str	r3, [fp, #-16]
   13a6c:	b	13acc <sprintf@plt+0x2430>
   13a70:	ldr	r3, [fp, #-16]
   13a74:	ldr	r3, [r3]
   13a78:	str	r3, [fp, #-20]	; 0xffffffec
   13a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a80:	ldr	r3, [r3, #44]	; 0x2c
   13a84:	cmp	r3, #0
   13a88:	beq	13ac0 <sprintf@plt+0x2424>
   13a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a90:	ldr	r3, [r3, #12]
   13a94:	mov	r1, r3
   13a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a9c:	bl	1316c <sprintf@plt+0x1ad0>
   13aa0:	mov	r3, r0
   13aa4:	cmp	r3, #0
   13aa8:	beq	13ac0 <sprintf@plt+0x2424>
   13aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ab0:	ldr	r3, [r3, #44]	; 0x2c
   13ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13abc:	blx	r3
   13ac0:	ldr	r3, [fp, #-16]
   13ac4:	ldr	r3, [r3, #8]
   13ac8:	str	r3, [fp, #-16]
   13acc:	ldr	r3, [fp, #-16]
   13ad0:	cmp	r3, #0
   13ad4:	bne	13a70 <sprintf@plt+0x23d4>
   13ad8:	sub	sp, fp, #8
   13adc:	ldr	r4, [sp]
   13ae0:	ldr	fp, [sp, #4]
   13ae4:	add	sp, sp, #8
   13ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   13aec:	andeq	sp, r1, r0, ror #11
   13af0:			; <UNDEFINED> instruction: 0x000001b0
   13af4:	push	{r3}		; (str r3, [sp, #-4]!)
   13af8:	str	r4, [sp, #-12]!
   13afc:	str	fp, [sp, #4]
   13b00:	str	lr, [sp, #8]
   13b04:	add	fp, sp, #8
   13b08:	sub	sp, sp, #552	; 0x228
   13b0c:	str	r0, [fp, #-532]	; 0xfffffdec
   13b10:	str	r1, [fp, #-536]	; 0xfffffde8
   13b14:	str	r2, [fp, #-540]	; 0xfffffde4
   13b18:	ldr	r4, [pc, #252]	; 13c1c <sprintf@plt+0x2580>
   13b1c:	add	r4, pc, r4
   13b20:	add	r3, fp, #8
   13b24:	str	r3, [fp, #-524]	; 0xfffffdf4
   13b28:	sub	r0, fp, #520	; 0x208
   13b2c:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   13b30:	ldr	r2, [fp, #4]
   13b34:	mov	r1, #512	; 0x200
   13b38:	bl	11348 <vsnprintf@plt>
   13b3c:	ldr	r3, [pc, #220]	; 13c20 <sprintf@plt+0x2584>
   13b40:	ldr	r3, [r4, r3]
   13b44:	ldr	ip, [r3]
   13b48:	ldr	r3, [fp, #-532]	; 0xfffffdec
   13b4c:	ldr	lr, [r3]
   13b50:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13b54:	cmn	r3, #1
   13b58:	beq	13b80 <sprintf@plt+0x24e4>
   13b5c:	ldr	r3, [fp, #-532]	; 0xfffffdec
   13b60:	ldr	r2, [r3, #464]	; 0x1d0
   13b64:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13b68:	lsl	r3, r3, #4
   13b6c:	add	r3, r2, r3
   13b70:	ldr	r3, [r3]
   13b74:	ldrb	r3, [r3, #20]
   13b78:	mov	r4, r3
   13b7c:	b	13b84 <sprintf@plt+0x24e8>
   13b80:	mov	r4, #42	; 0x2a
   13b84:	ldr	r3, [fp, #-532]	; 0xfffffdec
   13b88:	add	r2, r3, #440	; 0x1b8
   13b8c:	ldr	r3, [fp, #-532]	; 0xfffffdec
   13b90:	add	r1, r3, #376	; 0x178
   13b94:	ldr	r3, [fp, #-540]	; 0xfffffde4
   13b98:	cmp	r3, #0
   13b9c:	beq	13ba8 <sprintf@plt+0x250c>
   13ba0:	ldr	r3, [fp, #-540]	; 0xfffffde4
   13ba4:	b	13bb0 <sprintf@plt+0x2514>
   13ba8:	ldr	r3, [pc, #116]	; 13c24 <sprintf@plt+0x2588>
   13bac:	add	r3, pc, r3
   13bb0:	sub	r0, fp, #520	; 0x208
   13bb4:	str	r0, [sp, #12]
   13bb8:	str	r3, [sp, #8]
   13bbc:	str	r1, [sp, #4]
   13bc0:	str	r2, [sp]
   13bc4:	mov	r3, r4
   13bc8:	mov	r2, lr
   13bcc:	ldr	r1, [pc, #84]	; 13c28 <sprintf@plt+0x258c>
   13bd0:	add	r1, pc, r1
   13bd4:	mov	r0, ip
   13bd8:	bl	11600 <rb_helper_write@plt>
   13bdc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13be0:	cmn	r3, #1
   13be4:	beq	13bf4 <sprintf@plt+0x2558>
   13be8:	ldr	r1, [fp, #-536]	; 0xfffffde8
   13bec:	ldr	r0, [fp, #-532]	; 0xfffffdec
   13bf0:	bl	13288 <sprintf@plt+0x1bec>
   13bf4:	ldr	r0, [fp, #-532]	; 0xfffffdec
   13bf8:	bl	13918 <sprintf@plt+0x227c>
   13bfc:	nop	{0}
   13c00:	sub	sp, fp, #8
   13c04:	ldr	r4, [sp]
   13c08:	ldr	fp, [sp, #4]
   13c0c:	ldr	lr, [sp, #8]
   13c10:	add	sp, sp, #12
   13c14:	add	sp, sp, #4
   13c18:	bx	lr
   13c1c:	ldrdeq	sp, [r1], -ip
   13c20:	andeq	r0, r0, r4, lsr #3
   13c24:	andeq	fp, r0, ip, asr r7
   13c28:	andeq	fp, r0, ip, lsr r7
   13c2c:	str	fp, [sp, #-8]!
   13c30:	str	lr, [sp, #4]
   13c34:	add	fp, sp, #4
   13c38:	sub	sp, sp, #16
   13c3c:	str	r0, [fp, #-8]
   13c40:	ldr	r2, [pc, #84]	; 13c9c <sprintf@plt+0x2600>
   13c44:	add	r2, pc, r2
   13c48:	ldr	r3, [pc, #80]	; 13ca0 <sprintf@plt+0x2604>
   13c4c:	ldr	r3, [r2, r3]
   13c50:	ldr	r0, [r3]
   13c54:	ldr	r3, [fp, #-8]
   13c58:	ldr	r2, [r3]
   13c5c:	ldr	r3, [fp, #-8]
   13c60:	add	r1, r3, #440	; 0x1b8
   13c64:	ldr	r3, [fp, #-8]
   13c68:	add	r3, r3, #376	; 0x178
   13c6c:	str	r3, [sp]
   13c70:	mov	r3, r1
   13c74:	ldr	r1, [pc, #40]	; 13ca4 <sprintf@plt+0x2608>
   13c78:	add	r1, pc, r1
   13c7c:	bl	11600 <rb_helper_write@plt>
   13c80:	ldr	r0, [fp, #-8]
   13c84:	bl	13918 <sprintf@plt+0x227c>
   13c88:	nop	{0}
   13c8c:	sub	sp, fp, #4
   13c90:	ldr	fp, [sp]
   13c94:	add	sp, sp, #4
   13c98:	pop	{pc}		; (ldr pc, [sp], #4)
   13c9c:			; <UNDEFINED> instruction: 0x0001d3b4
   13ca0:	andeq	r0, r0, r4, lsr #3
   13ca4:	andeq	fp, r0, ip, lsr #13
   13ca8:	strd	r4, [sp, #-16]!
   13cac:	str	fp, [sp, #8]
   13cb0:	str	lr, [sp, #12]
   13cb4:	add	fp, sp, #12
   13cb8:	sub	sp, sp, #40	; 0x28
   13cbc:	str	r0, [fp, #-40]	; 0xffffffd8
   13cc0:	str	r1, [fp, #-44]	; 0xffffffd4
   13cc4:	str	r2, [fp, #-48]	; 0xffffffd0
   13cc8:	str	r3, [fp, #-52]	; 0xffffffcc
   13ccc:	ldr	r4, [pc, #904]	; 1405c <sprintf@plt+0x29c0>
   13cd0:	add	r4, pc, r4
   13cd4:	mov	r2, #16
   13cd8:	mov	r1, #0
   13cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ce0:	bl	1142c <strtoull@plt>
   13ce4:	strd	r0, [fp, #-28]	; 0xffffffe4
   13ce8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13cec:	orrs	r3, r2, r3
   13cf0:	beq	14044 <sprintf@plt+0x29a8>
   13cf4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13cf8:	mvn	r0, #0
   13cfc:	mov	r1, #0
   13d00:	cmp	r3, r1
   13d04:	cmpeq	r2, r0
   13d08:	bhi	14044 <sprintf@plt+0x29a8>
   13d0c:	mov	r0, #468	; 0x1d4
   13d10:	bl	12fcc <sprintf@plt+0x1930>
   13d14:	str	r0, [fp, #-32]	; 0xffffffe0
   13d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d1c:	bl	130a8 <sprintf@plt+0x1a0c>
   13d20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d28:	str	r2, [r3]
   13d2c:	ldr	r3, [pc, #812]	; 14060 <sprintf@plt+0x29c4>
   13d30:	ldr	r3, [r4, r3]
   13d34:	ldr	r2, [r3]
   13d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d3c:	ldr	r3, [r3]
   13d40:	mov	r1, r3
   13d44:	mov	r0, r2
   13d48:	bl	115d0 <rb_dictionary_find@plt>
   13d4c:	mov	r3, r0
   13d50:	cmp	r3, #0
   13d54:	bne	13df4 <sprintf@plt+0x2758>
   13d58:	ldr	r3, [pc, #768]	; 14060 <sprintf@plt+0x29c4>
   13d5c:	ldr	r3, [r4, r3]
   13d60:	ldr	r0, [r3]
   13d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d68:	ldr	r3, [r3]
   13d6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d70:	mov	r1, r3
   13d74:	bl	11588 <rb_dictionary_add@plt>
   13d78:	mov	r2, #16
   13d7c:	mov	r1, #0
   13d80:	ldr	r0, [fp, #8]
   13d84:	bl	1142c <strtoull@plt>
   13d88:	mov	r2, r0
   13d8c:	mov	r3, r1
   13d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d94:	str	r2, [r3, #4]
   13d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d9c:	add	r3, r3, #8
   13da0:	mov	r2, #54	; 0x36
   13da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13da8:	mov	r0, r3
   13dac:	bl	11420 <rb_strlcpy@plt>
   13db0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13db4:	bl	11510 <atoi@plt>
   13db8:	mov	r3, r0
   13dbc:	uxth	r2, r3
   13dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13dc4:	strh	r2, [r3, #62]	; 0x3e
   13dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13dcc:	add	r3, r3, #64	; 0x40
   13dd0:	mov	r1, r3
   13dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dd8:	bl	11498 <rb_inet_pton_sock@plt>
   13ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13de0:	add	r3, r3, #64	; 0x40
   13de4:	ldrh	r3, [r3]
   13de8:	cmp	r3, #2
   13dec:	bne	13e38 <sprintf@plt+0x279c>
   13df0:	b	13e14 <sprintf@plt+0x2778>
   13df4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13df8:	ldr	r3, [pc, #612]	; 14064 <sprintf@plt+0x29c8>
   13dfc:	add	r3, pc, r3
   13e00:	mov	r1, r3
   13e04:	mov	r0, #67	; 0x43
   13e08:	bl	12b00 <sprintf@plt+0x1464>
   13e0c:	mov	r0, #3
   13e10:	bl	11684 <exit@plt>
   13e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e18:	ldrh	r2, [r3, #62]	; 0x3e
   13e1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e20:	add	r5, r3, #64	; 0x40
   13e24:	mov	r0, r2
   13e28:	bl	113cc <htons@plt>
   13e2c:	mov	r3, r0
   13e30:	strh	r3, [r5, #2]
   13e34:	b	13e58 <sprintf@plt+0x27bc>
   13e38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e3c:	ldrh	r2, [r3, #62]	; 0x3e
   13e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e44:	add	r5, r3, #64	; 0x40
   13e48:	mov	r0, r2
   13e4c:	bl	113cc <htons@plt>
   13e50:	mov	r3, r0
   13e54:	strh	r3, [r5, #2]
   13e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e5c:	add	r3, r3, #192	; 0xc0
   13e60:	mov	r2, #54	; 0x36
   13e64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13e68:	mov	r0, r3
   13e6c:	bl	11420 <rb_strlcpy@plt>
   13e70:	ldr	r0, [fp, #4]
   13e74:	bl	11510 <atoi@plt>
   13e78:	mov	r3, r0
   13e7c:	uxth	r2, r3
   13e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e84:	strh	r2, [r3, #246]	; 0xf6
   13e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e8c:	add	r3, r3, #248	; 0xf8
   13e90:	mov	r1, r3
   13e94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13e98:	bl	11498 <rb_inet_pton_sock@plt>
   13e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ea0:	add	r3, r3, #248	; 0xf8
   13ea4:	ldrh	r3, [r3]
   13ea8:	cmp	r3, #2
   13eac:	bne	13ed4 <sprintf@plt+0x2838>
   13eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13eb4:	ldrh	r2, [r3, #246]	; 0xf6
   13eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ebc:	add	r5, r3, #248	; 0xf8
   13ec0:	mov	r0, r2
   13ec4:	bl	113cc <htons@plt>
   13ec8:	mov	r3, r0
   13ecc:	strh	r3, [r5, #2]
   13ed0:	b	13ef4 <sprintf@plt+0x2858>
   13ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ed8:	ldrh	r2, [r3, #246]	; 0xf6
   13edc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ee0:	add	r5, r3, #248	; 0xf8
   13ee4:	mov	r0, r2
   13ee8:	bl	113cc <htons@plt>
   13eec:	mov	r3, r0
   13ef0:	strh	r3, [r5, #2]
   13ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ef8:	add	r3, r3, #376	; 0x178
   13efc:	mov	r2, #64	; 0x40
   13f00:	ldr	r1, [pc, #352]	; 14068 <sprintf@plt+0x29cc>
   13f04:	add	r1, pc, r1
   13f08:	mov	r0, r3
   13f0c:	bl	11420 <rb_strlcpy@plt>
   13f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f14:	add	r3, r3, #440	; 0x1b8
   13f18:	mov	r2, #11
   13f1c:	ldr	r1, [pc, #328]	; 1406c <sprintf@plt+0x29d0>
   13f20:	add	r1, pc, r1
   13f24:	mov	r0, r3
   13f28:	bl	11420 <rb_strlcpy@plt>
   13f2c:	ldr	r3, [pc, #316]	; 14070 <sprintf@plt+0x29d4>
   13f30:	add	r3, pc, r3
   13f34:	ldr	r3, [r3]
   13f38:	lsl	r3, r3, #4
   13f3c:	mov	r0, r3
   13f40:	bl	12fcc <sprintf@plt+0x1930>
   13f44:	mov	r2, r0
   13f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f4c:	str	r2, [r3, #464]	; 0x1d0
   13f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f54:	mov	r2, #1
   13f58:	strb	r2, [r3, #451]	; 0x1c3
   13f5c:	ldr	r3, [pc, #272]	; 14074 <sprintf@plt+0x29d8>
   13f60:	ldr	r3, [r4, r3]
   13f64:	ldr	r3, [r3]
   13f68:	str	r3, [fp, #-16]
   13f6c:	b	13ff0 <sprintf@plt+0x2954>
   13f70:	ldr	r3, [fp, #-16]
   13f74:	ldr	r3, [r3]
   13f78:	str	r3, [fp, #-36]	; 0xffffffdc
   13f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f80:	ldr	r2, [r3, #464]	; 0x1d0
   13f84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13f88:	ldr	r3, [r3, #12]
   13f8c:	lsl	r3, r3, #4
   13f90:	add	r3, r2, r3
   13f94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f98:	str	r2, [r3]
   13f9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fa0:	ldr	r3, [r3, #12]
   13fa4:	mov	r1, r3
   13fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fac:	bl	13238 <sprintf@plt+0x1b9c>
   13fb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fb4:	ldr	r3, [r3, #32]
   13fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fbc:	blx	r3
   13fc0:	mov	r3, r0
   13fc4:	eor	r3, r3, #1
   13fc8:	uxtb	r3, r3
   13fcc:	cmp	r3, #0
   13fd0:	bne	1402c <sprintf@plt+0x2990>
   13fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13fd8:	ldrb	r3, [r3, #452]	; 0x1c4
   13fdc:	cmp	r3, #0
   13fe0:	bne	14000 <sprintf@plt+0x2964>
   13fe4:	ldr	r3, [fp, #-16]
   13fe8:	ldr	r3, [r3, #8]
   13fec:	str	r3, [fp, #-16]
   13ff0:	ldr	r3, [fp, #-16]
   13ff4:	cmp	r3, #0
   13ff8:	bne	13f70 <sprintf@plt+0x28d4>
   13ffc:	b	14004 <sprintf@plt+0x2968>
   14000:	nop	{0}
   14004:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14008:	mov	r2, #0
   1400c:	strb	r2, [r3, #451]	; 0x1c3
   14010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14014:	ldr	r3, [r3, #456]	; 0x1c8
   14018:	cmp	r3, #0
   1401c:	bne	14034 <sprintf@plt+0x2998>
   14020:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14024:	bl	13c2c <sprintf@plt+0x2590>
   14028:	b	14038 <sprintf@plt+0x299c>
   1402c:	nop	{0}
   14030:	b	14038 <sprintf@plt+0x299c>
   14034:	nop	{0}
   14038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1403c:	bl	130dc <sprintf@plt+0x1a40>
   14040:	b	14048 <sprintf@plt+0x29ac>
   14044:	nop	{0}
   14048:	sub	sp, fp, #12
   1404c:	ldrd	r4, [sp]
   14050:	ldr	fp, [sp, #8]
   14054:	add	sp, sp, #12
   14058:	pop	{pc}		; (ldr pc, [sp], #4)
   1405c:	andeq	sp, r1, r8, lsr #6
   14060:	andeq	r0, r0, r8, ror #2
   14064:	andeq	fp, r0, r4, lsr r5
   14068:	andeq	fp, r0, r4, lsl #8
   1406c:	andeq	fp, r0, r8, ror #7
   14070:	andeq	r2, r2, ip, asr #1
   14074:			; <UNDEFINED> instruction: 0x000001b0
   14078:	str	fp, [sp, #-8]!
   1407c:	str	lr, [sp, #4]
   14080:	add	fp, sp, #4
   14084:	sub	sp, sp, #16
   14088:	str	r0, [fp, #-8]
   1408c:	str	r1, [fp, #-12]
   14090:	ldr	r3, [fp, #-8]
   14094:	cmp	r3, #5
   14098:	bgt	140bc <sprintf@plt+0x2a20>
   1409c:	ldr	r2, [fp, #-8]
   140a0:	ldr	r3, [pc, #152]	; 14140 <sprintf@plt+0x2aa4>
   140a4:	add	r3, pc, r3
   140a8:	mov	r1, r3
   140ac:	mov	r0, #67	; 0x43
   140b0:	bl	12b00 <sprintf@plt+0x1464>
   140b4:	mov	r0, #3
   140b8:	bl	11684 <exit@plt>
   140bc:	ldr	r3, [fp, #-12]
   140c0:	add	r3, r3, #4
   140c4:	ldr	r0, [r3]
   140c8:	ldr	r3, [fp, #-12]
   140cc:	add	r3, r3, #8
   140d0:	ldr	r1, [r3]
   140d4:	ldr	r3, [fp, #-12]
   140d8:	add	r3, r3, #12
   140dc:	ldr	ip, [r3]
   140e0:	ldr	r3, [fp, #-12]
   140e4:	add	r3, r3, #16
   140e8:	ldr	lr, [r3]
   140ec:	ldr	r3, [fp, #-12]
   140f0:	add	r3, r3, #20
   140f4:	ldr	r2, [r3]
   140f8:	ldr	r3, [fp, #-8]
   140fc:	cmp	r3, #6
   14100:	ble	14110 <sprintf@plt+0x2a74>
   14104:	ldr	r3, [fp, #-12]
   14108:	ldr	r3, [r3, #24]
   1410c:	b	14118 <sprintf@plt+0x2a7c>
   14110:	ldr	r3, [pc, #44]	; 14144 <sprintf@plt+0x2aa8>
   14114:	add	r3, pc, r3
   14118:	str	r3, [sp, #4]
   1411c:	str	r2, [sp]
   14120:	mov	r3, lr
   14124:	mov	r2, ip
   14128:	bl	13ca8 <sprintf@plt+0x260c>
   1412c:	nop	{0}
   14130:	sub	sp, fp, #4
   14134:	ldr	fp, [sp]
   14138:	add	sp, sp, #4
   1413c:	pop	{pc}		; (ldr pc, [sp], #4)
   14140:	andeq	fp, r0, r0, asr #5
   14144:	muleq	r0, ip, r2
   14148:	str	r4, [sp, #-12]!
   1414c:	str	fp, [sp, #4]
   14150:	str	lr, [sp, #8]
   14154:	add	fp, sp, #8
   14158:	sub	sp, sp, #28
   1415c:	str	r0, [fp, #-32]	; 0xffffffe0
   14160:	str	r1, [fp, #-36]	; 0xffffffdc
   14164:	ldr	r4, [pc, #252]	; 14268 <sprintf@plt+0x2bcc>
   14168:	add	r4, pc, r4
   1416c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14170:	cmp	r3, #1
   14174:	bgt	14198 <sprintf@plt+0x2afc>
   14178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1417c:	ldr	r3, [pc, #232]	; 1426c <sprintf@plt+0x2bd0>
   14180:	add	r3, pc, r3
   14184:	mov	r1, r3
   14188:	mov	r0, #67	; 0x43
   1418c:	bl	12b00 <sprintf@plt+0x1464>
   14190:	mov	r0, #3
   14194:	bl	11684 <exit@plt>
   14198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1419c:	add	r3, r3, #4
   141a0:	ldr	r3, [r3]
   141a4:	mov	r2, #16
   141a8:	mov	r1, #0
   141ac:	mov	r0, r3
   141b0:	bl	1142c <strtoull@plt>
   141b4:	strd	r0, [fp, #-20]	; 0xffffffec
   141b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   141bc:	orrs	r3, r2, r3
   141c0:	beq	141dc <sprintf@plt+0x2b40>
   141c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   141c8:	mvn	r0, #0
   141cc:	mov	r1, #0
   141d0:	cmp	r3, r1
   141d4:	cmpeq	r2, r0
   141d8:	bls	14208 <sprintf@plt+0x2b6c>
   141dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141e0:	add	r3, r3, #4
   141e4:	ldr	r3, [r3]
   141e8:	mov	r2, r3
   141ec:	ldr	r3, [pc, #124]	; 14270 <sprintf@plt+0x2bd4>
   141f0:	add	r3, pc, r3
   141f4:	mov	r1, r3
   141f8:	mov	r0, #67	; 0x43
   141fc:	bl	12b00 <sprintf@plt+0x1464>
   14200:	mov	r0, #3
   14204:	bl	11684 <exit@plt>
   14208:	ldr	r3, [pc, #100]	; 14274 <sprintf@plt+0x2bd8>
   1420c:	ldr	r3, [r4, r3]
   14210:	ldr	r3, [r3]
   14214:	ldr	r2, [fp, #-20]	; 0xffffffec
   14218:	mov	r1, r2
   1421c:	mov	r0, r3
   14220:	bl	11564 <rb_dictionary_retrieve@plt>
   14224:	str	r0, [fp, #-24]	; 0xffffffe8
   14228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1422c:	cmp	r3, #0
   14230:	beq	14250 <sprintf@plt+0x2bb4>
   14234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14238:	bl	130a8 <sprintf@plt+0x1a0c>
   1423c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14240:	bl	13918 <sprintf@plt+0x227c>
   14244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14248:	bl	130dc <sprintf@plt+0x1a40>
   1424c:	b	14254 <sprintf@plt+0x2bb8>
   14250:	nop	{0}
   14254:	sub	sp, fp, #8
   14258:	ldr	r4, [sp]
   1425c:	ldr	fp, [sp, #4]
   14260:	add	sp, sp, #8
   14264:	pop	{pc}		; (ldr pc, [sp], #4)
   14268:	muleq	r1, r0, lr
   1426c:	andeq	fp, r0, r4, lsr r2
   14270:	andeq	fp, r0, r0, lsl r2
   14274:	andeq	r0, r0, r8, ror #2
   14278:	str	r4, [sp, #-12]!
   1427c:	str	fp, [sp, #4]
   14280:	str	lr, [sp, #8]
   14284:	add	fp, sp, #8
   14288:	sub	sp, sp, #44	; 0x2c
   1428c:	str	r0, [fp, #-48]	; 0xffffffd0
   14290:	ldr	r4, [pc, #324]	; 143dc <sprintf@plt+0x2d40>
   14294:	add	r4, pc, r4
   14298:	bl	114b0 <rb_current_time@plt>
   1429c:	str	r0, [fp, #-20]	; 0xffffffec
   142a0:	ldr	r3, [pc, #312]	; 143e0 <sprintf@plt+0x2d44>
   142a4:	ldr	r3, [r4, r3]
   142a8:	ldr	r3, [r3]
   142ac:	sub	r2, fp, #40	; 0x28
   142b0:	mov	r1, r2
   142b4:	mov	r0, r3
   142b8:	bl	11480 <rb_dictionary_foreach_start@plt>
   142bc:	b	14398 <sprintf@plt+0x2cfc>
   142c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142c4:	bl	130a8 <sprintf@plt+0x1a0c>
   142c8:	ldr	r3, [pc, #276]	; 143e4 <sprintf@plt+0x2d48>
   142cc:	ldr	r3, [r4, r3]
   142d0:	ldr	r3, [r3]
   142d4:	str	r3, [fp, #-16]
   142d8:	b	14368 <sprintf@plt+0x2ccc>
   142dc:	ldr	r3, [fp, #-16]
   142e0:	ldr	r3, [r3]
   142e4:	str	r3, [fp, #-28]	; 0xffffffe4
   142e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142ec:	ldr	r3, [r3, #12]
   142f0:	mov	r1, r3
   142f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142f8:	bl	131b8 <sprintf@plt+0x1b1c>
   142fc:	str	r0, [fp, #-32]	; 0xffffffe0
   14300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14304:	ldr	r3, [r3, #12]
   14308:	mov	r1, r3
   1430c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14310:	bl	1316c <sprintf@plt+0x1ad0>
   14314:	mov	r3, r0
   14318:	cmp	r3, #0
   1431c:	beq	1435c <sprintf@plt+0x2cc0>
   14320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14324:	ldr	r3, [r3, #40]	; 0x28
   14328:	cmp	r3, #0
   1432c:	beq	1435c <sprintf@plt+0x2cc0>
   14330:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14334:	cmp	r3, #0
   14338:	ble	1435c <sprintf@plt+0x2cc0>
   1433c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14340:	ldr	r3, [fp, #-20]	; 0xffffffec
   14344:	cmp	r2, r3
   14348:	bge	1435c <sprintf@plt+0x2cc0>
   1434c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14350:	ldr	r3, [r3, #40]	; 0x28
   14354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14358:	blx	r3
   1435c:	ldr	r3, [fp, #-16]
   14360:	ldr	r3, [r3, #8]
   14364:	str	r3, [fp, #-16]
   14368:	ldr	r3, [fp, #-16]
   1436c:	cmp	r3, #0
   14370:	bne	142dc <sprintf@plt+0x2c40>
   14374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14378:	bl	130dc <sprintf@plt+0x1a40>
   1437c:	ldr	r3, [pc, #92]	; 143e0 <sprintf@plt+0x2d44>
   14380:	ldr	r3, [r4, r3]
   14384:	ldr	r3, [r3]
   14388:	sub	r2, fp, #40	; 0x28
   1438c:	mov	r1, r2
   14390:	mov	r0, r3
   14394:	bl	11438 <rb_dictionary_foreach_next@plt>
   14398:	ldr	r3, [pc, #64]	; 143e0 <sprintf@plt+0x2d44>
   1439c:	ldr	r3, [r4, r3]
   143a0:	ldr	r3, [r3]
   143a4:	sub	r2, fp, #40	; 0x28
   143a8:	mov	r1, r2
   143ac:	mov	r0, r3
   143b0:	bl	11390 <rb_dictionary_foreach_cur@plt>
   143b4:	str	r0, [fp, #-24]	; 0xffffffe8
   143b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143bc:	cmp	r3, #0
   143c0:	bne	142c0 <sprintf@plt+0x2c24>
   143c4:	nop	{0}
   143c8:	sub	sp, fp, #8
   143cc:	ldr	r4, [sp]
   143d0:	ldr	fp, [sp, #4]
   143d4:	add	sp, sp, #8
   143d8:	pop	{pc}		; (ldr pc, [sp], #4)
   143dc:	andeq	ip, r1, r4, ror #26
   143e0:	andeq	r0, r0, r8, ror #2
   143e4:			; <UNDEFINED> instruction: 0x000001b0
   143e8:	str	fp, [sp, #-8]!
   143ec:	str	lr, [sp, #4]
   143f0:	add	fp, sp, #4
   143f4:	sub	sp, sp, #16
   143f8:	str	r0, [fp, #-8]
   143fc:	str	r1, [fp, #-12]
   14400:	str	r2, [fp, #-16]
   14404:	ldr	r3, [fp, #-8]
   14408:	cmp	r3, #0
   1440c:	bne	14430 <sprintf@plt+0x2d94>
   14410:	ldr	r3, [pc, #268]	; 14524 <sprintf@plt+0x2e88>
   14414:	add	r3, pc, r3
   14418:	mov	r2, #143	; 0x8f
   1441c:	ldr	r1, [pc, #260]	; 14528 <sprintf@plt+0x2e8c>
   14420:	add	r1, pc, r1
   14424:	ldr	r0, [pc, #256]	; 1452c <sprintf@plt+0x2e90>
   14428:	add	r0, pc, r0
   1442c:	bl	11414 <__assert_fail@plt>
   14430:	ldr	r3, [fp, #-12]
   14434:	cmp	r3, #0
   14438:	bne	1445c <sprintf@plt+0x2dc0>
   1443c:	ldr	r3, [pc, #236]	; 14530 <sprintf@plt+0x2e94>
   14440:	add	r3, pc, r3
   14444:	mov	r2, #144	; 0x90
   14448:	ldr	r1, [pc, #228]	; 14534 <sprintf@plt+0x2e98>
   1444c:	add	r1, pc, r1
   14450:	ldr	r0, [pc, #224]	; 14538 <sprintf@plt+0x2e9c>
   14454:	add	r0, pc, r0
   14458:	bl	11414 <__assert_fail@plt>
   1445c:	ldr	r3, [fp, #-16]
   14460:	cmp	r3, #0
   14464:	bne	14488 <sprintf@plt+0x2dec>
   14468:	ldr	r3, [pc, #204]	; 1453c <sprintf@plt+0x2ea0>
   1446c:	add	r3, pc, r3
   14470:	mov	r2, #145	; 0x91
   14474:	ldr	r1, [pc, #196]	; 14540 <sprintf@plt+0x2ea4>
   14478:	add	r1, pc, r1
   1447c:	ldr	r0, [pc, #192]	; 14544 <sprintf@plt+0x2ea8>
   14480:	add	r0, pc, r0
   14484:	bl	11414 <__assert_fail@plt>
   14488:	ldr	r3, [fp, #-12]
   1448c:	ldr	r2, [fp, #-8]
   14490:	str	r2, [r3]
   14494:	ldr	r3, [fp, #-12]
   14498:	mov	r2, #0
   1449c:	str	r2, [r3, #4]
   144a0:	ldr	r3, [fp, #-16]
   144a4:	ldr	r2, [r3]
   144a8:	ldr	r3, [fp, #-12]
   144ac:	str	r2, [r3, #8]
   144b0:	ldr	r3, [fp, #-16]
   144b4:	ldr	r3, [r3]
   144b8:	cmp	r3, #0
   144bc:	beq	144d4 <sprintf@plt+0x2e38>
   144c0:	ldr	r3, [fp, #-16]
   144c4:	ldr	r3, [r3]
   144c8:	ldr	r2, [fp, #-12]
   144cc:	str	r2, [r3, #4]
   144d0:	b	144f0 <sprintf@plt+0x2e54>
   144d4:	ldr	r3, [fp, #-16]
   144d8:	ldr	r3, [r3, #4]
   144dc:	cmp	r3, #0
   144e0:	bne	144f0 <sprintf@plt+0x2e54>
   144e4:	ldr	r3, [fp, #-16]
   144e8:	ldr	r2, [fp, #-12]
   144ec:	str	r2, [r3, #4]
   144f0:	ldr	r3, [fp, #-16]
   144f4:	ldr	r2, [fp, #-12]
   144f8:	str	r2, [r3]
   144fc:	ldr	r3, [fp, #-16]
   14500:	ldr	r3, [r3, #8]
   14504:	add	r2, r3, #1
   14508:	ldr	r3, [fp, #-16]
   1450c:	str	r2, [r3, #8]
   14510:	nop	{0}
   14514:	sub	sp, fp, #4
   14518:	ldr	fp, [sp]
   1451c:	add	sp, sp, #4
   14520:	pop	{pc}		; (ldr pc, [sp], #4)
   14524:	andeq	fp, r0, ip, asr #3
   14528:	andeq	fp, r0, r0, asr #32
   1452c:	andeq	fp, r0, r4, asr r0
   14530:	andeq	fp, r0, r0, lsr #3
   14534:	andeq	fp, r0, r4, lsl r0
   14538:	andeq	fp, r0, r8, lsr r0
   1453c:	andeq	fp, r0, r4, ror r1
   14540:	andeq	sl, r0, r8, ror #31
   14544:	andeq	fp, r0, r8, lsl r0
   14548:	str	fp, [sp, #-8]!
   1454c:	str	lr, [sp, #4]
   14550:	add	fp, sp, #4
   14554:	sub	sp, sp, #8
   14558:	str	r0, [fp, #-8]
   1455c:	str	r1, [fp, #-12]
   14560:	ldr	r3, [fp, #-8]
   14564:	cmp	r3, #0
   14568:	bne	1458c <sprintf@plt+0x2ef0>
   1456c:	ldr	r3, [pc, #248]	; 1466c <sprintf@plt+0x2fd0>
   14570:	add	r3, pc, r3
   14574:	mov	r2, #235	; 0xeb
   14578:	ldr	r1, [pc, #240]	; 14670 <sprintf@plt+0x2fd4>
   1457c:	add	r1, pc, r1
   14580:	ldr	r0, [pc, #236]	; 14674 <sprintf@plt+0x2fd8>
   14584:	add	r0, pc, r0
   14588:	bl	11414 <__assert_fail@plt>
   1458c:	ldr	r3, [fp, #-12]
   14590:	cmp	r3, #0
   14594:	bne	145b8 <sprintf@plt+0x2f1c>
   14598:	ldr	r3, [pc, #216]	; 14678 <sprintf@plt+0x2fdc>
   1459c:	add	r3, pc, r3
   145a0:	mov	r2, #236	; 0xec
   145a4:	ldr	r1, [pc, #208]	; 1467c <sprintf@plt+0x2fe0>
   145a8:	add	r1, pc, r1
   145ac:	ldr	r0, [pc, #204]	; 14680 <sprintf@plt+0x2fe4>
   145b0:	add	r0, pc, r0
   145b4:	bl	11414 <__assert_fail@plt>
   145b8:	ldr	r3, [fp, #-8]
   145bc:	ldr	r3, [r3, #8]
   145c0:	cmp	r3, #0
   145c4:	beq	145e0 <sprintf@plt+0x2f44>
   145c8:	ldr	r3, [fp, #-8]
   145cc:	ldr	r3, [r3, #8]
   145d0:	ldr	r2, [fp, #-8]
   145d4:	ldr	r2, [r2, #4]
   145d8:	str	r2, [r3, #4]
   145dc:	b	145f0 <sprintf@plt+0x2f54>
   145e0:	ldr	r3, [fp, #-8]
   145e4:	ldr	r2, [r3, #4]
   145e8:	ldr	r3, [fp, #-12]
   145ec:	str	r2, [r3, #4]
   145f0:	ldr	r3, [fp, #-8]
   145f4:	ldr	r3, [r3, #4]
   145f8:	cmp	r3, #0
   145fc:	beq	14618 <sprintf@plt+0x2f7c>
   14600:	ldr	r3, [fp, #-8]
   14604:	ldr	r3, [r3, #4]
   14608:	ldr	r2, [fp, #-8]
   1460c:	ldr	r2, [r2, #8]
   14610:	str	r2, [r3, #8]
   14614:	b	14628 <sprintf@plt+0x2f8c>
   14618:	ldr	r3, [fp, #-8]
   1461c:	ldr	r2, [r3, #8]
   14620:	ldr	r3, [fp, #-12]
   14624:	str	r2, [r3]
   14628:	ldr	r3, [fp, #-8]
   1462c:	mov	r2, #0
   14630:	str	r2, [r3, #4]
   14634:	ldr	r3, [fp, #-8]
   14638:	ldr	r2, [r3, #4]
   1463c:	ldr	r3, [fp, #-8]
   14640:	str	r2, [r3, #8]
   14644:	ldr	r3, [fp, #-12]
   14648:	ldr	r3, [r3, #8]
   1464c:	sub	r2, r3, #1
   14650:	ldr	r3, [fp, #-12]
   14654:	str	r2, [r3, #8]
   14658:	nop	{0}
   1465c:	sub	sp, fp, #4
   14660:	ldr	fp, [sp]
   14664:	add	sp, sp, #4
   14668:	pop	{pc}		; (ldr pc, [sp], #4)
   1466c:	andeq	fp, r0, r0, rrx
   14670:	andeq	sl, r0, r4, ror #29
   14674:	andeq	sl, r0, r8, lsl #30
   14678:	andeq	fp, r0, r4, lsr r0
   1467c:			; <UNDEFINED> instruction: 0x0000aeb8
   14680:	andeq	sl, r0, r8, ror #29
   14684:	str	fp, [sp, #-8]!
   14688:	str	lr, [sp, #4]
   1468c:	add	fp, sp, #4
   14690:	sub	sp, sp, #16
   14694:	str	r0, [fp, #-16]
   14698:	ldr	r1, [fp, #-16]
   1469c:	mov	r0, #1
   146a0:	bl	113a8 <calloc@plt>
   146a4:	mov	r3, r0
   146a8:	str	r3, [fp, #-8]
   146ac:	ldr	r3, [fp, #-8]
   146b0:	cmp	r3, #0
   146b4:	moveq	r3, #1
   146b8:	movne	r3, #0
   146bc:	uxtb	r3, r3
   146c0:	cmp	r3, #0
   146c4:	beq	146cc <sprintf@plt+0x3030>
   146c8:	bl	11570 <rb_outofmemory@plt>
   146cc:	ldr	r3, [fp, #-8]
   146d0:	mov	r0, r3
   146d4:	sub	sp, fp, #4
   146d8:	ldr	fp, [sp]
   146dc:	add	sp, sp, #4
   146e0:	pop	{pc}		; (ldr pc, [sp], #4)
   146e4:	str	fp, [sp, #-8]!
   146e8:	str	lr, [sp, #4]
   146ec:	add	fp, sp, #4
   146f0:	sub	sp, sp, #16
   146f4:	str	r0, [fp, #-16]
   146f8:	ldr	r0, [fp, #-16]
   146fc:	bl	114a4 <strlen@plt>
   14700:	mov	r3, r0
   14704:	add	r3, r3, #1
   14708:	mov	r0, r3
   1470c:	bl	115a0 <malloc@plt>
   14710:	mov	r3, r0
   14714:	str	r3, [fp, #-8]
   14718:	ldr	r3, [fp, #-8]
   1471c:	cmp	r3, #0
   14720:	moveq	r3, #1
   14724:	movne	r3, #0
   14728:	uxtb	r3, r3
   1472c:	cmp	r3, #0
   14730:	beq	14738 <sprintf@plt+0x309c>
   14734:	bl	11570 <rb_outofmemory@plt>
   14738:	ldr	r1, [fp, #-16]
   1473c:	ldr	r0, [fp, #-8]
   14740:	bl	11504 <strcpy@plt>
   14744:	ldr	r3, [fp, #-8]
   14748:	mov	r0, r3
   1474c:	sub	sp, fp, #4
   14750:	ldr	fp, [sp]
   14754:	add	sp, sp, #4
   14758:	pop	{pc}		; (ldr pc, [sp], #4)
   1475c:	str	fp, [sp, #-8]!
   14760:	str	lr, [sp, #4]
   14764:	add	fp, sp, #4
   14768:	sub	sp, sp, #8
   1476c:	str	r0, [fp, #-8]
   14770:	ldr	r3, [fp, #-8]
   14774:	cmp	r3, #0
   14778:	movne	r3, #1
   1477c:	moveq	r3, #0
   14780:	uxtb	r3, r3
   14784:	cmp	r3, #0
   14788:	beq	14794 <sprintf@plt+0x30f8>
   1478c:	ldr	r0, [fp, #-8]
   14790:	bl	11444 <free@plt>
   14794:	nop	{0}
   14798:	sub	sp, fp, #4
   1479c:	ldr	fp, [sp]
   147a0:	add	sp, sp, #4
   147a4:	pop	{pc}		; (ldr pc, [sp], #4)
   147a8:	str	r4, [sp, #-12]!
   147ac:	str	fp, [sp, #4]
   147b0:	str	lr, [sp, #8]
   147b4:	add	fp, sp, #8
   147b8:	sub	sp, sp, #36	; 0x24
   147bc:	str	r0, [fp, #-40]	; 0xffffffd8
   147c0:	ldr	r4, [pc, #408]	; 14960 <sprintf@plt+0x32c4>
   147c4:	add	r4, pc, r4
   147c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147cc:	str	r3, [fp, #-20]	; 0xffffffec
   147d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147d4:	str	r3, [fp, #-24]	; 0xffffffe8
   147d8:	mov	r3, #0
   147dc:	str	r3, [fp, #-16]
   147e0:	b	1492c <sprintf@plt+0x3290>
   147e4:	ldr	r3, [fp, #-16]
   147e8:	lsl	r3, r3, #7
   147ec:	ldr	r2, [pc, #368]	; 14964 <sprintf@plt+0x32c8>
   147f0:	ldr	r2, [r4, r2]
   147f4:	add	r3, r3, r2
   147f8:	str	r3, [fp, #-28]	; 0xffffffe4
   147fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14800:	str	r3, [fp, #-32]	; 0xffffffe0
   14804:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14808:	str	r3, [fp, #-36]	; 0xffffffdc
   1480c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14810:	ldrh	r3, [r3]
   14814:	cmp	r3, #2
   14818:	beq	148ac <sprintf@plt+0x3210>
   1481c:	cmp	r3, #10
   14820:	bne	1490c <sprintf@plt+0x3270>
   14824:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14828:	ldrh	r2, [r3]
   1482c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14830:	ldrh	r3, [r3]
   14834:	cmp	r2, r3
   14838:	bne	14914 <sprintf@plt+0x3278>
   1483c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14840:	ldrh	r2, [r3, #2]
   14844:	ldr	r3, [fp, #-20]	; 0xffffffec
   14848:	ldrh	r3, [r3, #2]
   1484c:	cmp	r2, r3
   14850:	bne	14914 <sprintf@plt+0x3278>
   14854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14858:	add	r0, r3, #8
   1485c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14860:	add	r3, r3, #8
   14864:	mov	r2, #16
   14868:	mov	r1, r3
   1486c:	bl	11300 <memcmp@plt>
   14870:	mov	r3, r0
   14874:	cmp	r3, #0
   14878:	beq	148a4 <sprintf@plt+0x3208>
   1487c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14880:	add	r0, r3, #8
   14884:	mov	r2, #16
   14888:	ldr	r3, [pc, #216]	; 14968 <sprintf@plt+0x32cc>
   1488c:	ldr	r3, [r4, r3]
   14890:	mov	r1, r3
   14894:	bl	11300 <memcmp@plt>
   14898:	mov	r3, r0
   1489c:	cmp	r3, #0
   148a0:	bne	14914 <sprintf@plt+0x3278>
   148a4:	mov	r3, #1
   148a8:	b	14948 <sprintf@plt+0x32ac>
   148ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148b0:	ldrh	r2, [r3]
   148b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   148b8:	ldrh	r3, [r3]
   148bc:	cmp	r2, r3
   148c0:	bne	1491c <sprintf@plt+0x3280>
   148c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148c8:	ldrh	r2, [r3, #2]
   148cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148d0:	ldrh	r3, [r3, #2]
   148d4:	cmp	r2, r3
   148d8:	bne	1491c <sprintf@plt+0x3280>
   148dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148e0:	ldr	r3, [r3, #4]
   148e4:	cmp	r3, #0
   148e8:	beq	14904 <sprintf@plt+0x3268>
   148ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148f0:	ldr	r2, [r3, #4]
   148f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148f8:	ldr	r3, [r3, #4]
   148fc:	cmp	r2, r3
   14900:	bne	1491c <sprintf@plt+0x3280>
   14904:	mov	r3, #1
   14908:	b	14948 <sprintf@plt+0x32ac>
   1490c:	nop	{0}
   14910:	b	14920 <sprintf@plt+0x3284>
   14914:	nop	{0}
   14918:	b	14920 <sprintf@plt+0x3284>
   1491c:	nop	{0}
   14920:	ldr	r3, [fp, #-16]
   14924:	add	r3, r3, #1
   14928:	str	r3, [fp, #-16]
   1492c:	ldr	r3, [pc, #56]	; 1496c <sprintf@plt+0x32d0>
   14930:	ldr	r3, [r4, r3]
   14934:	ldr	r3, [r3]
   14938:	ldr	r2, [fp, #-16]
   1493c:	cmp	r2, r3
   14940:	blt	147e4 <sprintf@plt+0x3148>
   14944:	mov	r3, #0
   14948:	mov	r0, r3
   1494c:	sub	sp, fp, #8
   14950:	ldr	r4, [sp]
   14954:	ldr	fp, [sp, #4]
   14958:	add	sp, sp, #8
   1495c:	pop	{pc}		; (ldr pc, [sp], #4)
   14960:	andeq	ip, r1, r4, lsr r8
   14964:	andeq	r0, r0, r8, lsl #3
   14968:	andeq	r0, r0, r4, lsl #3
   1496c:	andeq	r0, r0, ip, ror r1
   14970:	str	fp, [sp, #-8]!
   14974:	str	lr, [sp, #4]
   14978:	add	fp, sp, #4
   1497c:	sub	sp, sp, #32
   14980:	str	r0, [fp, #-32]	; 0xffffffe0
   14984:	mov	r3, #0
   14988:	str	r3, [fp, #-16]
   1498c:	mov	r3, #0
   14990:	str	r3, [fp, #-20]	; 0xffffffec
   14994:	ldr	r3, [pc, #312]	; 14ad4 <sprintf@plt+0x3438>
   14998:	add	r3, pc, r3
   1499c:	ldr	r3, [r3]
   149a0:	str	r3, [fp, #-8]
   149a4:	ldr	r3, [fp, #-8]
   149a8:	cmp	r3, #0
   149ac:	beq	149bc <sprintf@plt+0x3320>
   149b0:	ldr	r3, [fp, #-8]
   149b4:	ldr	r3, [r3, #8]
   149b8:	b	149c0 <sprintf@plt+0x3324>
   149bc:	mov	r3, #0
   149c0:	str	r3, [fp, #-12]
   149c4:	b	14a94 <sprintf@plt+0x33f8>
   149c8:	ldr	r3, [fp, #-8]
   149cc:	ldr	r3, [r3]
   149d0:	str	r3, [fp, #-24]	; 0xffffffe8
   149d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149d8:	ldr	r2, [r3, #280]	; 0x118
   149dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149e0:	ldr	r3, [r3, #284]	; 0x11c
   149e4:	add	r3, r2, r3
   149e8:	str	r3, [fp, #-20]	; 0xffffffec
   149ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   149f4:	cmp	r2, r3
   149f8:	blt	14a48 <sprintf@plt+0x33ac>
   149fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a00:	ldr	r3, [r3, #288]	; 0x120
   14a04:	ldr	r2, [pc, #204]	; 14ad8 <sprintf@plt+0x343c>
   14a08:	add	r2, pc, r2
   14a0c:	ldr	r2, [r2, r3, lsl #2]
   14a10:	add	r1, r2, #1
   14a14:	ldr	r2, [pc, #192]	; 14adc <sprintf@plt+0x3440>
   14a18:	add	r2, pc, r2
   14a1c:	str	r1, [r2, r3, lsl #2]
   14a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a28:	str	r2, [r3, #280]	; 0x118
   14a2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a30:	ldr	r3, [r3, #284]	; 0x11c
   14a34:	lsl	r2, r3, #1
   14a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a3c:	str	r2, [r3, #284]	; 0x11c
   14a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a44:	bl	15b48 <sprintf@plt+0x44ac>
   14a48:	ldr	r3, [fp, #-16]
   14a4c:	cmp	r3, #0
   14a50:	beq	14a64 <sprintf@plt+0x33c8>
   14a54:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a58:	ldr	r3, [fp, #-16]
   14a5c:	cmp	r2, r3
   14a60:	bge	14a6c <sprintf@plt+0x33d0>
   14a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a68:	str	r3, [fp, #-16]
   14a6c:	ldr	r3, [fp, #-12]
   14a70:	str	r3, [fp, #-8]
   14a74:	ldr	r3, [fp, #-8]
   14a78:	cmp	r3, #0
   14a7c:	beq	14a8c <sprintf@plt+0x33f0>
   14a80:	ldr	r3, [fp, #-8]
   14a84:	ldr	r3, [r3, #8]
   14a88:	b	14a90 <sprintf@plt+0x33f4>
   14a8c:	mov	r3, #0
   14a90:	str	r3, [fp, #-12]
   14a94:	ldr	r3, [fp, #-8]
   14a98:	cmp	r3, #0
   14a9c:	bne	149c8 <sprintf@plt+0x332c>
   14aa0:	ldr	r2, [fp, #-16]
   14aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14aa8:	cmp	r2, r3
   14aac:	bgt	14abc <sprintf@plt+0x3420>
   14ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ab4:	add	r3, r3, #600	; 0x258
   14ab8:	b	14ac0 <sprintf@plt+0x3424>
   14abc:	ldr	r3, [fp, #-16]
   14ac0:	mov	r0, r3
   14ac4:	sub	sp, fp, #4
   14ac8:	ldr	fp, [sp]
   14acc:	add	sp, sp, #4
   14ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad4:	andeq	r1, r2, r0, ror r6
   14ad8:	andeq	r1, r2, ip, lsl #12
   14adc:	strdeq	r1, [r2], -ip
   14ae0:	str	fp, [sp, #-8]!
   14ae4:	str	lr, [sp, #4]
   14ae8:	add	fp, sp, #4
   14aec:	sub	sp, sp, #8
   14af0:	str	r0, [fp, #-8]
   14af4:	bl	114b0 <rb_current_time@plt>
   14af8:	mov	r3, r0
   14afc:	mov	r0, r3
   14b00:	bl	14970 <sprintf@plt+0x32d4>
   14b04:	nop	{0}
   14b08:	sub	sp, fp, #4
   14b0c:	ldr	fp, [sp]
   14b10:	add	sp, sp, #4
   14b14:	pop	{pc}		; (ldr pc, [sp], #4)
   14b18:	str	r4, [sp, #-12]!
   14b1c:	str	fp, [sp, #4]
   14b20:	str	lr, [sp, #8]
   14b24:	add	fp, sp, #8
   14b28:	sub	sp, sp, #12
   14b2c:	ldr	r4, [pc, #268]	; 14c40 <sprintf@plt+0x35a4>
   14b30:	add	r4, pc, r4
   14b34:	bl	166b8 <sprintf@plt+0x501c>
   14b38:	mov	r3, #0
   14b3c:	str	r3, [fp, #-16]
   14b40:	b	14b64 <sprintf@plt+0x34c8>
   14b44:	ldr	r3, [pc, #248]	; 14c44 <sprintf@plt+0x35a8>
   14b48:	add	r3, pc, r3
   14b4c:	ldr	r2, [fp, #-16]
   14b50:	mov	r1, #0
   14b54:	str	r1, [r3, r2, lsl #2]
   14b58:	ldr	r3, [fp, #-16]
   14b5c:	add	r3, r3, #1
   14b60:	str	r3, [fp, #-16]
   14b64:	ldr	r3, [pc, #220]	; 14c48 <sprintf@plt+0x35ac>
   14b68:	ldr	r3, [r4, r3]
   14b6c:	ldr	r3, [r3]
   14b70:	ldr	r2, [fp, #-16]
   14b74:	cmp	r2, r3
   14b78:	blt	14b44 <sprintf@plt+0x34a8>
   14b7c:	ldr	r3, [pc, #200]	; 14c4c <sprintf@plt+0x35b0>
   14b80:	add	r3, pc, r3
   14b84:	ldr	r3, [r3]
   14b88:	cmp	r3, #0
   14b8c:	bne	14c2c <sprintf@plt+0x3590>
   14b90:	ldr	r3, [pc, #184]	; 14c50 <sprintf@plt+0x35b4>
   14b94:	ldr	r3, [r4, r3]
   14b98:	ldrh	r3, [r3]
   14b9c:	mov	r0, r3
   14ba0:	ldr	r3, [pc, #172]	; 14c54 <sprintf@plt+0x35b8>
   14ba4:	add	r3, pc, r3
   14ba8:	mov	r2, #0
   14bac:	mov	r1, #2
   14bb0:	bl	11354 <rb_socket@plt>
   14bb4:	mov	r2, r0
   14bb8:	ldr	r3, [pc, #152]	; 14c58 <sprintf@plt+0x35bc>
   14bbc:	add	r3, pc, r3
   14bc0:	str	r2, [r3]
   14bc4:	ldr	r3, [pc, #144]	; 14c5c <sprintf@plt+0x35c0>
   14bc8:	add	r3, pc, r3
   14bcc:	ldr	r3, [r3]
   14bd0:	cmp	r3, #0
   14bd4:	beq	14c28 <sprintf@plt+0x358c>
   14bd8:	ldr	r3, [pc, #128]	; 14c60 <sprintf@plt+0x35c4>
   14bdc:	add	r3, pc, r3
   14be0:	ldr	r0, [r3]
   14be4:	mov	r3, #0
   14be8:	ldr	r2, [pc, #116]	; 14c64 <sprintf@plt+0x35c8>
   14bec:	add	r2, pc, r2
   14bf0:	mov	r1, #1
   14bf4:	bl	11324 <rb_setselect@plt>
   14bf8:	mov	r3, #1
   14bfc:	mov	r2, #0
   14c00:	ldr	r1, [pc, #96]	; 14c68 <sprintf@plt+0x35cc>
   14c04:	add	r1, pc, r1
   14c08:	ldr	r0, [pc, #92]	; 14c6c <sprintf@plt+0x35d0>
   14c0c:	add	r0, pc, r0
   14c10:	bl	1160c <rb_event_add@plt>
   14c14:	mov	r2, r0
   14c18:	ldr	r3, [pc, #80]	; 14c70 <sprintf@plt+0x35d4>
   14c1c:	add	r3, pc, r3
   14c20:	str	r2, [r3]
   14c24:	b	14c2c <sprintf@plt+0x3590>
   14c28:	nop	{0}
   14c2c:	sub	sp, fp, #8
   14c30:	ldr	r4, [sp]
   14c34:	ldr	fp, [sp, #4]
   14c38:	add	sp, sp, #8
   14c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c40:	andeq	ip, r1, r8, asr #9
   14c44:	andeq	r1, r2, ip, asr #9
   14c48:	andeq	r0, r0, ip, ror r1
   14c4c:	andeq	r1, r2, r4, lsl #9
   14c50:	andeq	r0, r0, r8, lsl #3
   14c54:	andeq	sl, r0, r4, lsl #18
   14c58:	andeq	r1, r2, r8, asr #8
   14c5c:	andeq	r1, r2, ip, lsr r4
   14c60:	andeq	r1, r2, r8, lsr #8
   14c64:	andeq	r1, r0, r8, ror r9
   14c68:			; <UNDEFINED> instruction: 0xfffffed4
   14c6c:			; <UNDEFINED> instruction: 0x0000a8b0
   14c70:	andeq	r1, r2, r0, lsr #8
   14c74:	str	fp, [sp, #-8]!
   14c78:	str	lr, [sp, #4]
   14c7c:	add	fp, sp, #4
   14c80:	bl	14b18 <sprintf@plt+0x347c>
   14c84:	nop	{0}
   14c88:	sub	sp, fp, #4
   14c8c:	ldr	fp, [sp]
   14c90:	add	sp, sp, #4
   14c94:	pop	{pc}		; (ldr pc, [sp], #4)
   14c98:	str	fp, [sp, #-8]!
   14c9c:	str	lr, [sp, #4]
   14ca0:	add	fp, sp, #4
   14ca4:	ldr	r3, [pc, #72]	; 14cf4 <sprintf@plt+0x3658>
   14ca8:	add	r3, pc, r3
   14cac:	ldr	r3, [r3]
   14cb0:	mov	r0, r3
   14cb4:	bl	114e0 <rb_close@plt>
   14cb8:	ldr	r3, [pc, #56]	; 14cf8 <sprintf@plt+0x365c>
   14cbc:	add	r3, pc, r3
   14cc0:	mov	r2, #0
   14cc4:	str	r2, [r3]
   14cc8:	ldr	r3, [pc, #44]	; 14cfc <sprintf@plt+0x3660>
   14ccc:	add	r3, pc, r3
   14cd0:	ldr	r3, [r3]
   14cd4:	mov	r0, r3
   14cd8:	bl	11318 <rb_event_delete@plt>
   14cdc:	bl	14b18 <sprintf@plt+0x347c>
   14ce0:	nop	{0}
   14ce4:	sub	sp, fp, #4
   14ce8:	ldr	fp, [sp]
   14cec:	add	sp, sp, #4
   14cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf4:	andeq	r1, r2, ip, asr r3
   14cf8:	andeq	r1, r2, r8, asr #6
   14cfc:	andeq	r1, r2, r0, ror r3
   14d00:	str	r4, [sp, #-12]!
   14d04:	str	fp, [sp, #4]
   14d08:	str	lr, [sp, #8]
   14d0c:	add	fp, sp, #8
   14d10:	sub	sp, sp, #20
   14d14:	str	r0, [fp, #-24]	; 0xffffffe8
   14d18:	str	r1, [fp, #-28]	; 0xffffffe4
   14d1c:	ldr	r4, [pc, #184]	; 14ddc <sprintf@plt+0x3740>
   14d20:	add	r4, pc, r4
   14d24:	mov	r1, #46	; 0x2e
   14d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d2c:	bl	11384 <strchr@plt>
   14d30:	mov	r3, r0
   14d34:	cmp	r3, #0
   14d38:	bne	14dc4 <sprintf@plt+0x3728>
   14d3c:	ldr	r3, [pc, #156]	; 14de0 <sprintf@plt+0x3744>
   14d40:	ldr	r3, [r4, r3]
   14d44:	ldrb	r3, [r3]
   14d48:	cmp	r3, #0
   14d4c:	beq	14dc4 <sprintf@plt+0x3728>
   14d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d54:	bl	114a4 <strlen@plt>
   14d58:	str	r0, [fp, #-16]
   14d5c:	ldr	r3, [pc, #124]	; 14de0 <sprintf@plt+0x3744>
   14d60:	ldr	r3, [r4, r3]
   14d64:	mov	r0, r3
   14d68:	bl	114a4 <strlen@plt>
   14d6c:	mov	r2, r0
   14d70:	ldr	r3, [fp, #-16]
   14d74:	add	r3, r2, r3
   14d78:	add	r3, r3, #2
   14d7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14d80:	cmp	r2, r3
   14d84:	bls	14dc4 <sprintf@plt+0x3728>
   14d88:	ldr	r3, [fp, #-16]
   14d8c:	add	r2, r3, #1
   14d90:	str	r2, [fp, #-16]
   14d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d98:	add	r3, r2, r3
   14d9c:	mov	r2, #46	; 0x2e
   14da0:	strb	r2, [r3]
   14da4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14da8:	ldr	r3, [fp, #-16]
   14dac:	add	r2, r2, r3
   14db0:	ldr	r3, [pc, #40]	; 14de0 <sprintf@plt+0x3744>
   14db4:	ldr	r3, [r4, r3]
   14db8:	mov	r1, r3
   14dbc:	mov	r0, r2
   14dc0:	bl	11504 <strcpy@plt>
   14dc4:	nop	{0}
   14dc8:	sub	sp, fp, #8
   14dcc:	ldr	r4, [sp]
   14dd0:	ldr	fp, [sp, #4]
   14dd4:	add	sp, sp, #8
   14dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ddc:	ldrdeq	ip, [r1], -r8
   14de0:	andeq	r0, r0, r0, lsl #3
   14de4:	str	fp, [sp, #-8]!
   14de8:	str	lr, [sp, #4]
   14dec:	add	fp, sp, #4
   14df0:	sub	sp, sp, #8
   14df4:	str	r0, [fp, #-8]
   14df8:	ldr	r3, [fp, #-8]
   14dfc:	ldr	r2, [pc, #56]	; 14e3c <sprintf@plt+0x37a0>
   14e00:	add	r2, pc, r2
   14e04:	mov	r1, r2
   14e08:	mov	r0, r3
   14e0c:	bl	14548 <sprintf@plt+0x2eac>
   14e10:	ldr	r3, [fp, #-8]
   14e14:	ldr	r3, [r3, #420]	; 0x1a4
   14e18:	mov	r0, r3
   14e1c:	bl	1475c <sprintf@plt+0x30c0>
   14e20:	ldr	r0, [fp, #-8]
   14e24:	bl	1475c <sprintf@plt+0x30c0>
   14e28:	nop	{0}
   14e2c:	sub	sp, fp, #4
   14e30:	ldr	fp, [sp]
   14e34:	add	sp, sp, #4
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)
   14e3c:	andeq	r1, r2, r8, lsl #4
   14e40:	str	fp, [sp, #-8]!
   14e44:	str	lr, [sp, #4]
   14e48:	add	fp, sp, #4
   14e4c:	sub	sp, sp, #16
   14e50:	str	r0, [fp, #-16]
   14e54:	mov	r0, #428	; 0x1ac
   14e58:	bl	14684 <sprintf@plt+0x2fe8>
   14e5c:	str	r0, [fp, #-8]
   14e60:	bl	114b0 <rb_current_time@plt>
   14e64:	mov	r2, r0
   14e68:	ldr	r3, [fp, #-8]
   14e6c:	str	r2, [r3, #280]	; 0x118
   14e70:	ldr	r3, [fp, #-8]
   14e74:	mov	r2, #3
   14e78:	strb	r2, [r3, #277]	; 0x115
   14e7c:	ldr	r3, [fp, #-8]
   14e80:	mov	r2, #4
   14e84:	str	r2, [r3, #284]	; 0x11c
   14e88:	ldr	r3, [fp, #-8]
   14e8c:	ldr	r2, [fp, #-16]
   14e90:	str	r2, [r3, #424]	; 0x1a8
   14e94:	bl	15298 <sprintf@plt+0x3bfc>
   14e98:	mov	r3, r0
   14e9c:	mov	r2, r3
   14ea0:	ldr	r3, [fp, #-8]
   14ea4:	str	r2, [r3, #12]
   14ea8:	ldr	r3, [fp, #-8]
   14eac:	ldr	r2, [pc, #36]	; 14ed8 <sprintf@plt+0x383c>
   14eb0:	add	r2, pc, r2
   14eb4:	mov	r1, r3
   14eb8:	ldr	r0, [fp, #-8]
   14ebc:	bl	143e8 <sprintf@plt+0x2d4c>
   14ec0:	ldr	r3, [fp, #-8]
   14ec4:	mov	r0, r3
   14ec8:	sub	sp, fp, #4
   14ecc:	ldr	fp, [sp]
   14ed0:	add	sp, sp, #4
   14ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ed8:	andeq	r1, r2, r8, asr r1
   14edc:	push	{fp}		; (str fp, [sp, #-4]!)
   14ee0:	add	fp, sp, #0
   14ee4:	sub	sp, sp, #12
   14ee8:	str	r0, [fp, #-8]
   14eec:	ldr	r3, [fp, #-8]
   14ef0:	sub	r3, r3, #1
   14ef4:	cmp	r3, #3
   14ef8:	addls	pc, pc, r3, lsl #2
   14efc:	b	14f30 <sprintf@plt+0x3894>
   14f00:	b	14f10 <sprintf@plt+0x3874>
   14f04:	b	14f18 <sprintf@plt+0x387c>
   14f08:	b	14f20 <sprintf@plt+0x3884>
   14f0c:	b	14f28 <sprintf@plt+0x388c>
   14f10:	mov	r3, #3
   14f14:	b	14f34 <sprintf@plt+0x3898>
   14f18:	mov	r3, #9
   14f1c:	b	14f34 <sprintf@plt+0x3898>
   14f20:	mov	r3, #27
   14f24:	b	14f34 <sprintf@plt+0x3898>
   14f28:	mov	r3, #81	; 0x51
   14f2c:	b	14f34 <sprintf@plt+0x3898>
   14f30:	mov	r3, #243	; 0xf3
   14f34:	mov	r0, r3
   14f38:	add	sp, fp, #0
   14f3c:	pop	{fp}		; (ldr fp, [sp], #4)
   14f40:	bx	lr
   14f44:	strd	r4, [sp, #-16]!
   14f48:	str	fp, [sp, #8]
   14f4c:	str	lr, [sp, #12]
   14f50:	add	fp, sp, #12
   14f54:	sub	sp, sp, #32
   14f58:	str	r0, [fp, #-24]	; 0xffffffe8
   14f5c:	str	r1, [fp, #-28]	; 0xffffffe4
   14f60:	str	r2, [fp, #-32]	; 0xffffffe0
   14f64:	ldr	r4, [pc, #644]	; 151f0 <sprintf@plt+0x3b54>
   14f68:	add	r4, pc, r4
   14f6c:	ldr	r3, [pc, #640]	; 151f4 <sprintf@plt+0x3b58>
   14f70:	add	r3, pc, r3
   14f74:	ldr	r3, [r3]
   14f78:	add	r2, r3, #1
   14f7c:	ldr	r3, [pc, #628]	; 151f8 <sprintf@plt+0x3b5c>
   14f80:	add	r3, pc, r3
   14f84:	str	r2, [r3]
   14f88:	mov	r3, #0
   14f8c:	str	r3, [fp, #-16]
   14f90:	b	150b4 <sprintf@plt+0x3a18>
   14f94:	ldr	r2, [fp, #-16]
   14f98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f9c:	add	r3, r2, r3
   14fa0:	sub	r3, r3, #1
   14fa4:	ldr	r2, [pc, #592]	; 151fc <sprintf@plt+0x3b60>
   14fa8:	ldr	r2, [r4, r2]
   14fac:	ldr	r2, [r2]
   14fb0:	sdiv	r1, r3, r2
   14fb4:	mul	r2, r2, r1
   14fb8:	sub	r3, r3, r2
   14fbc:	str	r3, [fp, #-20]	; 0xffffffec
   14fc0:	ldr	r3, [pc, #568]	; 15200 <sprintf@plt+0x3b64>
   14fc4:	add	r3, pc, r3
   14fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fcc:	ldr	r3, [r3, r2, lsl #2]
   14fd0:	cmp	r3, #0
   14fd4:	beq	15014 <sprintf@plt+0x3978>
   14fd8:	ldr	r3, [pc, #548]	; 15204 <sprintf@plt+0x3b68>
   14fdc:	add	r3, pc, r3
   14fe0:	ldr	r5, [r3]
   14fe4:	ldr	r3, [pc, #540]	; 15208 <sprintf@plt+0x3b6c>
   14fe8:	add	r3, pc, r3
   14fec:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ff0:	ldr	r3, [r3, r2, lsl #2]
   14ff4:	mov	r0, r3
   14ff8:	bl	14edc <sprintf@plt+0x3840>
   14ffc:	mov	r3, r0
   15000:	sdiv	r2, r5, r3
   15004:	mul	r3, r3, r2
   15008:	sub	r3, r5, r3
   1500c:	cmp	r3, #0
   15010:	bne	150a4 <sprintf@plt+0x3a08>
   15014:	ldr	r3, [pc, #496]	; 1520c <sprintf@plt+0x3b70>
   15018:	add	r3, pc, r3
   1501c:	ldr	r3, [r3]
   15020:	mov	r0, r3
   15024:	bl	11330 <rb_get_fd@plt>
   15028:	mov	ip, r0
   1502c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15030:	ldr	r3, [fp, #-20]	; 0xffffffec
   15034:	lsl	r3, r3, #7
   15038:	ldr	r2, [pc, #464]	; 15210 <sprintf@plt+0x3b74>
   1503c:	ldr	r2, [r4, r2]
   15040:	add	r3, r3, r2
   15044:	ldr	r2, [fp, #-20]	; 0xffffffec
   15048:	lsl	r2, r2, #7
   1504c:	ldr	r1, [pc, #444]	; 15210 <sprintf@plt+0x3b74>
   15050:	ldr	r1, [r4, r1]
   15054:	add	r2, r2, r1
   15058:	ldrh	r2, [r2]
   1505c:	cmp	r2, #2
   15060:	bne	1506c <sprintf@plt+0x39d0>
   15064:	mov	r2, #16
   15068:	b	15070 <sprintf@plt+0x39d4>
   1506c:	mov	r2, #28
   15070:	str	r2, [sp, #4]
   15074:	str	r3, [sp]
   15078:	mov	r3, #0
   1507c:	mov	r2, r0
   15080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15084:	mov	r0, ip
   15088:	bl	113c0 <sendto@plt>
   1508c:	mov	r2, r0
   15090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15094:	cmp	r3, r2
   15098:	bne	150a8 <sprintf@plt+0x3a0c>
   1509c:	ldr	r3, [fp, #-20]	; 0xffffffec
   150a0:	b	151d8 <sprintf@plt+0x3b3c>
   150a4:	nop	{0}
   150a8:	ldr	r3, [fp, #-16]
   150ac:	add	r3, r3, #1
   150b0:	str	r3, [fp, #-16]
   150b4:	ldr	r3, [pc, #320]	; 151fc <sprintf@plt+0x3b60>
   150b8:	ldr	r3, [r4, r3]
   150bc:	ldr	r3, [r3]
   150c0:	ldr	r2, [fp, #-16]
   150c4:	cmp	r2, r3
   150c8:	blt	14f94 <sprintf@plt+0x38f8>
   150cc:	mov	r3, #0
   150d0:	str	r3, [fp, #-16]
   150d4:	b	151bc <sprintf@plt+0x3b20>
   150d8:	ldr	r2, [fp, #-16]
   150dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   150e0:	add	r3, r2, r3
   150e4:	sub	r3, r3, #1
   150e8:	ldr	r2, [pc, #268]	; 151fc <sprintf@plt+0x3b60>
   150ec:	ldr	r2, [r4, r2]
   150f0:	ldr	r2, [r2]
   150f4:	sdiv	r1, r3, r2
   150f8:	mul	r2, r2, r1
   150fc:	sub	r3, r3, r2
   15100:	str	r3, [fp, #-20]	; 0xffffffec
   15104:	ldr	r3, [pc, #264]	; 15214 <sprintf@plt+0x3b78>
   15108:	add	r3, pc, r3
   1510c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15110:	ldr	r3, [r3, r2, lsl #2]
   15114:	cmp	r3, #0
   15118:	beq	151ac <sprintf@plt+0x3b10>
   1511c:	ldr	r3, [pc, #244]	; 15218 <sprintf@plt+0x3b7c>
   15120:	add	r3, pc, r3
   15124:	ldr	r3, [r3]
   15128:	mov	r0, r3
   1512c:	bl	11330 <rb_get_fd@plt>
   15130:	mov	ip, r0
   15134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1513c:	lsl	r3, r3, #7
   15140:	ldr	r2, [pc, #200]	; 15210 <sprintf@plt+0x3b74>
   15144:	ldr	r2, [r4, r2]
   15148:	add	r3, r3, r2
   1514c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15150:	lsl	r2, r2, #7
   15154:	ldr	r1, [pc, #180]	; 15210 <sprintf@plt+0x3b74>
   15158:	ldr	r1, [r4, r1]
   1515c:	add	r2, r2, r1
   15160:	ldrh	r2, [r2]
   15164:	cmp	r2, #2
   15168:	bne	15174 <sprintf@plt+0x3ad8>
   1516c:	mov	r2, #16
   15170:	b	15178 <sprintf@plt+0x3adc>
   15174:	mov	r2, #28
   15178:	str	r2, [sp, #4]
   1517c:	str	r3, [sp]
   15180:	mov	r3, #0
   15184:	mov	r2, r0
   15188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1518c:	mov	r0, ip
   15190:	bl	113c0 <sendto@plt>
   15194:	mov	r2, r0
   15198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1519c:	cmp	r3, r2
   151a0:	bne	151b0 <sprintf@plt+0x3b14>
   151a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151a8:	b	151d8 <sprintf@plt+0x3b3c>
   151ac:	nop	{0}
   151b0:	ldr	r3, [fp, #-16]
   151b4:	add	r3, r3, #1
   151b8:	str	r3, [fp, #-16]
   151bc:	ldr	r3, [pc, #56]	; 151fc <sprintf@plt+0x3b60>
   151c0:	ldr	r3, [r4, r3]
   151c4:	ldr	r3, [r3]
   151c8:	ldr	r2, [fp, #-16]
   151cc:	cmp	r2, r3
   151d0:	blt	150d8 <sprintf@plt+0x3a3c>
   151d4:	mvn	r3, #0
   151d8:	mov	r0, r3
   151dc:	sub	sp, fp, #12
   151e0:	ldrd	r4, [sp]
   151e4:	ldr	fp, [sp, #8]
   151e8:	add	sp, sp, #12
   151ec:	pop	{pc}		; (ldr pc, [sp], #4)
   151f0:	muleq	r1, r0, r0
   151f4:	ldrdeq	r1, [r2], -r0
   151f8:	andeq	r1, r2, r0, asr #1
   151fc:	andeq	r0, r0, ip, ror r1
   15200:	andeq	r1, r2, r0, asr r0
   15204:	andeq	r1, r2, r4, rrx
   15208:	andeq	r1, r2, ip, lsr #32
   1520c:	andeq	r0, r2, ip, ror #31
   15210:	andeq	r0, r0, r8, lsl #3
   15214:	andeq	r0, r2, ip, lsl #30
   15218:	andeq	r0, r2, r4, ror #29
   1521c:	push	{fp}		; (str fp, [sp, #-4]!)
   15220:	add	fp, sp, #0
   15224:	sub	sp, sp, #20
   15228:	str	r0, [fp, #-16]
   1522c:	ldr	r3, [pc, #96]	; 15294 <sprintf@plt+0x3bf8>
   15230:	add	r3, pc, r3
   15234:	ldr	r3, [r3]
   15238:	str	r3, [fp, #-8]
   1523c:	b	15274 <sprintf@plt+0x3bd8>
   15240:	ldr	r3, [fp, #-8]
   15244:	ldr	r3, [r3]
   15248:	str	r3, [fp, #-12]
   1524c:	ldr	r3, [fp, #-12]
   15250:	ldr	r3, [r3, #12]
   15254:	ldr	r2, [fp, #-16]
   15258:	cmp	r2, r3
   1525c:	bne	15268 <sprintf@plt+0x3bcc>
   15260:	ldr	r3, [fp, #-12]
   15264:	b	15284 <sprintf@plt+0x3be8>
   15268:	ldr	r3, [fp, #-8]
   1526c:	ldr	r3, [r3, #8]
   15270:	str	r3, [fp, #-8]
   15274:	ldr	r3, [fp, #-8]
   15278:	cmp	r3, #0
   1527c:	bne	15240 <sprintf@plt+0x3ba4>
   15280:	mov	r3, #0
   15284:	mov	r0, r3
   15288:	add	sp, fp, #0
   1528c:	pop	{fp}		; (ldr fp, [sp], #4)
   15290:	bx	lr
   15294:	ldrdeq	r0, [r2], -r8
   15298:	str	fp, [sp, #-8]!
   1529c:	str	lr, [sp, #4]
   152a0:	add	fp, sp, #4
   152a4:	sub	sp, sp, #8
   152a8:	sub	r3, fp, #6
   152ac:	mov	r1, #2
   152b0:	mov	r0, r3
   152b4:	bl	11618 <rb_get_random@plt>
   152b8:	ldrh	r3, [fp, #-6]
   152bc:	movw	r2, #65535	; 0xffff
   152c0:	cmp	r3, r2
   152c4:	ldrh	r3, [fp, #-6]
   152c8:	mov	r0, r3
   152cc:	bl	1521c <sprintf@plt+0x3b80>
   152d0:	mov	r3, r0
   152d4:	cmp	r3, #0
   152d8:	bne	152a8 <sprintf@plt+0x3c0c>
   152dc:	ldrh	r3, [fp, #-6]
   152e0:	mov	r0, r3
   152e4:	sub	sp, fp, #4
   152e8:	ldr	fp, [sp]
   152ec:	add	sp, sp, #4
   152f0:	pop	{pc}		; (ldr pc, [sp], #4)
   152f4:	str	fp, [sp, #-8]!
   152f8:	str	lr, [sp, #4]
   152fc:	add	fp, sp, #4
   15300:	sub	sp, sp, #272	; 0x110
   15304:	str	r0, [fp, #-264]	; 0xfffffef8
   15308:	str	r1, [fp, #-268]	; 0xfffffef4
   1530c:	str	r2, [fp, #-272]	; 0xfffffef0
   15310:	ldr	r3, [fp, #-264]	; 0xfffffef8
   15314:	cmp	r3, #0
   15318:	bne	1533c <sprintf@plt+0x3ca0>
   1531c:	ldr	r3, [pc, #100]	; 15388 <sprintf@plt+0x3cec>
   15320:	add	r3, pc, r3
   15324:	mov	r2, #412	; 0x19c
   15328:	ldr	r1, [pc, #92]	; 1538c <sprintf@plt+0x3cf0>
   1532c:	add	r1, pc, r1
   15330:	ldr	r0, [pc, #88]	; 15390 <sprintf@plt+0x3cf4>
   15334:	add	r0, pc, r0
   15338:	bl	11414 <__assert_fail@plt>
   1533c:	sub	r3, fp, #260	; 0x104
   15340:	mov	r2, #256	; 0x100
   15344:	ldr	r1, [fp, #-264]	; 0xfffffef8
   15348:	mov	r0, r3
   1534c:	bl	11420 <rb_strlcpy@plt>
   15350:	sub	r3, fp, #260	; 0x104
   15354:	mov	r1, #255	; 0xff
   15358:	mov	r0, r3
   1535c:	bl	14d00 <sprintf@plt+0x3664>
   15360:	sub	r3, fp, #260	; 0x104
   15364:	ldr	r2, [fp, #-272]	; 0xfffffef0
   15368:	ldr	r1, [fp, #-268]	; 0xfffffef4
   1536c:	mov	r0, r3
   15370:	bl	15394 <sprintf@plt+0x3cf8>
   15374:	nop	{0}
   15378:	sub	sp, fp, #4
   1537c:	ldr	fp, [sp]
   15380:	add	sp, sp, #4
   15384:	pop	{pc}		; (ldr pc, [sp], #4)
   15388:	andeq	sl, r0, ip, asr #5
   1538c:	andeq	sl, r0, r4, lsr #3
   15390:	andeq	sl, r0, r4, lsr #3
   15394:	str	fp, [sp, #-8]!
   15398:	str	lr, [sp, #4]
   1539c:	add	fp, sp, #4
   153a0:	sub	sp, sp, #16
   153a4:	str	r0, [fp, #-8]
   153a8:	str	r1, [fp, #-12]
   153ac:	str	r2, [fp, #-16]
   153b0:	ldr	r3, [fp, #-8]
   153b4:	cmp	r3, #0
   153b8:	bne	153dc <sprintf@plt+0x3d40>
   153bc:	ldr	r3, [pc, #64]	; 15404 <sprintf@plt+0x3d68>
   153c0:	add	r3, pc, r3
   153c4:	movw	r2, #425	; 0x1a9
   153c8:	ldr	r1, [pc, #56]	; 15408 <sprintf@plt+0x3d6c>
   153cc:	add	r1, pc, r1
   153d0:	ldr	r0, [pc, #52]	; 1540c <sprintf@plt+0x3d70>
   153d4:	add	r0, pc, r0
   153d8:	bl	11414 <__assert_fail@plt>
   153dc:	ldr	r3, [fp, #-16]
   153e0:	mov	r2, #0
   153e4:	ldr	r1, [fp, #-8]
   153e8:	ldr	r0, [fp, #-12]
   153ec:	bl	1544c <sprintf@plt+0x3db0>
   153f0:	nop	{0}
   153f4:	sub	sp, fp, #4
   153f8:	ldr	fp, [sp]
   153fc:	add	sp, sp, #4
   15400:	pop	{pc}		; (ldr pc, [sp], #4)
   15404:	andeq	sl, r0, r0, asr #4
   15408:	andeq	sl, r0, r4, lsl #2
   1540c:	andeq	sl, r0, r4, lsl #2
   15410:	str	fp, [sp, #-8]!
   15414:	str	lr, [sp, #4]
   15418:	add	fp, sp, #4
   1541c:	sub	sp, sp, #8
   15420:	str	r0, [fp, #-8]
   15424:	str	r1, [fp, #-12]
   15428:	mov	r2, #0
   1542c:	ldr	r1, [fp, #-8]
   15430:	ldr	r0, [fp, #-12]
   15434:	bl	1599c <sprintf@plt+0x4300>
   15438:	nop	{0}
   1543c:	sub	sp, fp, #4
   15440:	ldr	fp, [sp]
   15444:	add	sp, sp, #4
   15448:	pop	{pc}		; (ldr pc, [sp], #4)
   1544c:	str	fp, [sp, #-8]!
   15450:	str	lr, [sp, #4]
   15454:	add	fp, sp, #4
   15458:	sub	sp, sp, #16
   1545c:	str	r0, [fp, #-8]
   15460:	str	r1, [fp, #-12]
   15464:	str	r2, [fp, #-16]
   15468:	str	r3, [fp, #-20]	; 0xffffffec
   1546c:	ldr	r3, [fp, #-16]
   15470:	cmp	r3, #0
   15474:	bne	15498 <sprintf@plt+0x3dfc>
   15478:	ldr	r0, [fp, #-8]
   1547c:	bl	14e40 <sprintf@plt+0x37a4>
   15480:	str	r0, [fp, #-16]
   15484:	ldr	r0, [fp, #-12]
   15488:	bl	146e4 <sprintf@plt+0x3048>
   1548c:	mov	r2, r0
   15490:	ldr	r3, [fp, #-16]
   15494:	str	r2, [r3, #420]	; 0x1a4
   15498:	ldr	r3, [fp, #-16]
   1549c:	add	r3, r3, #21
   154a0:	mov	r2, #256	; 0x100
   154a4:	ldr	r1, [fp, #-12]
   154a8:	mov	r0, r3
   154ac:	bl	11420 <rb_strlcpy@plt>
   154b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154b4:	uxtb	r2, r3
   154b8:	ldr	r3, [fp, #-16]
   154bc:	strb	r2, [r3, #20]
   154c0:	ldr	r0, [fp, #-16]
   154c4:	bl	15a3c <sprintf@plt+0x43a0>
   154c8:	nop	{0}
   154cc:	sub	sp, fp, #4
   154d0:	ldr	fp, [sp]
   154d4:	add	sp, sp, #4
   154d8:	pop	{pc}		; (ldr pc, [sp], #4)
   154dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   154e0:	strd	r6, [sp, #8]
   154e4:	strd	r8, [sp, #16]
   154e8:	strd	sl, [sp, #24]
   154ec:	str	lr, [sp, #32]
   154f0:	add	fp, sp, #32
   154f4:	sub	sp, sp, #244	; 0xf4
   154f8:	str	r0, [fp, #-56]	; 0xffffffc8
   154fc:	str	r1, [fp, #-60]	; 0xffffffc4
   15500:	str	r2, [fp, #-64]	; 0xffffffc0
   15504:	str	r3, [fp, #-68]	; 0xffffffbc
   15508:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1550c:	ldrh	r3, [r3]
   15510:	cmp	r3, #2
   15514:	bne	155b0 <sprintf@plt+0x3f14>
   15518:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1551c:	str	r3, [fp, #-40]	; 0xffffffd8
   15520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15524:	add	r3, r3, #4
   15528:	str	r3, [fp, #-44]	; 0xffffffd4
   1552c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15530:	add	r3, r3, #3
   15534:	ldrb	r3, [r3]
   15538:	mov	ip, r3
   1553c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15540:	add	r3, r3, #2
   15544:	ldrb	r3, [r3]
   15548:	mov	r2, r3
   1554c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15550:	add	r3, r3, #1
   15554:	ldrb	r3, [r3]
   15558:	mov	r1, r3
   1555c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15560:	ldrb	r3, [r3]
   15564:	mov	r0, r3
   15568:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1556c:	cmp	r3, #0
   15570:	beq	1557c <sprintf@plt+0x3ee0>
   15574:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15578:	b	15584 <sprintf@plt+0x3ee8>
   1557c:	ldr	r3, [pc, #1032]	; 1598c <sprintf@plt+0x42f0>
   15580:	add	r3, pc, r3
   15584:	str	r3, [sp, #12]
   15588:	str	r0, [sp, #8]
   1558c:	str	r1, [sp, #4]
   15590:	str	r2, [sp]
   15594:	mov	r3, ip
   15598:	ldr	r2, [pc, #1008]	; 15990 <sprintf@plt+0x42f4>
   1559c:	add	r2, pc, r2
   155a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   155a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155a8:	bl	11630 <snprintf@plt>
   155ac:	b	1596c <sprintf@plt+0x42d0>
   155b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   155b4:	ldrh	r3, [r3]
   155b8:	cmp	r3, #10
   155bc:	bne	1596c <sprintf@plt+0x42d0>
   155c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   155c4:	str	r3, [fp, #-48]	; 0xffffffd0
   155c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   155cc:	add	r3, r3, #8
   155d0:	str	r3, [fp, #-44]	; 0xffffffd4
   155d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155d8:	add	r3, r3, #15
   155dc:	ldrb	r3, [r3]
   155e0:	and	r3, r3, #15
   155e4:	str	r3, [fp, #-72]	; 0xffffffb8
   155e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155ec:	add	r3, r3, #15
   155f0:	ldrb	r3, [r3]
   155f4:	lsr	r3, r3, #4
   155f8:	uxtb	r3, r3
   155fc:	str	r3, [fp, #-76]	; 0xffffffb4
   15600:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15604:	add	r3, r3, #14
   15608:	ldrb	r3, [r3]
   1560c:	and	r3, r3, #15
   15610:	str	r3, [fp, #-80]	; 0xffffffb0
   15614:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15618:	add	r3, r3, #14
   1561c:	ldrb	r3, [r3]
   15620:	lsr	r3, r3, #4
   15624:	uxtb	r3, r3
   15628:	str	r3, [fp, #-84]	; 0xffffffac
   1562c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15630:	add	r3, r3, #13
   15634:	ldrb	r3, [r3]
   15638:	and	r3, r3, #15
   1563c:	str	r3, [fp, #-88]	; 0xffffffa8
   15640:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15644:	add	r3, r3, #13
   15648:	ldrb	r3, [r3]
   1564c:	lsr	r3, r3, #4
   15650:	uxtb	r3, r3
   15654:	str	r3, [fp, #-92]	; 0xffffffa4
   15658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1565c:	add	r3, r3, #12
   15660:	ldrb	r3, [r3]
   15664:	and	r3, r3, #15
   15668:	str	r3, [fp, #-96]	; 0xffffffa0
   1566c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15670:	add	r3, r3, #12
   15674:	ldrb	r3, [r3]
   15678:	lsr	r3, r3, #4
   1567c:	uxtb	r3, r3
   15680:	str	r3, [fp, #-100]	; 0xffffff9c
   15684:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15688:	add	r3, r3, #11
   1568c:	ldrb	r3, [r3]
   15690:	and	r3, r3, #15
   15694:	str	r3, [fp, #-104]	; 0xffffff98
   15698:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1569c:	add	r3, r3, #11
   156a0:	ldrb	r3, [r3]
   156a4:	lsr	r3, r3, #4
   156a8:	uxtb	r3, r3
   156ac:	str	r3, [fp, #-108]	; 0xffffff94
   156b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156b4:	add	r3, r3, #10
   156b8:	ldrb	r3, [r3]
   156bc:	and	r3, r3, #15
   156c0:	str	r3, [fp, #-112]	; 0xffffff90
   156c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156c8:	add	r3, r3, #10
   156cc:	ldrb	r3, [r3]
   156d0:	lsr	r3, r3, #4
   156d4:	uxtb	r3, r3
   156d8:	str	r3, [fp, #-116]	; 0xffffff8c
   156dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156e0:	add	r3, r3, #9
   156e4:	ldrb	r3, [r3]
   156e8:	and	r3, r3, #15
   156ec:	str	r3, [fp, #-120]	; 0xffffff88
   156f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156f4:	add	r3, r3, #9
   156f8:	ldrb	r3, [r3]
   156fc:	lsr	r3, r3, #4
   15700:	uxtb	r3, r3
   15704:	str	r3, [fp, #-124]	; 0xffffff84
   15708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1570c:	add	r3, r3, #8
   15710:	ldrb	r3, [r3]
   15714:	and	r3, r3, #15
   15718:	str	r3, [fp, #-128]	; 0xffffff80
   1571c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15720:	add	r3, r3, #8
   15724:	ldrb	r3, [r3]
   15728:	lsr	r3, r3, #4
   1572c:	uxtb	r3, r3
   15730:	str	r3, [fp, #-132]	; 0xffffff7c
   15734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15738:	add	r3, r3, #7
   1573c:	ldrb	r3, [r3]
   15740:	and	sl, r3, #15
   15744:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15748:	add	r3, r3, #7
   1574c:	ldrb	r3, [r3]
   15750:	lsr	r3, r3, #4
   15754:	uxtb	r3, r3
   15758:	str	r3, [fp, #-136]	; 0xffffff78
   1575c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15760:	add	r3, r3, #6
   15764:	ldrb	r3, [r3]
   15768:	and	r9, r3, #15
   1576c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15770:	add	r3, r3, #6
   15774:	ldrb	r3, [r3]
   15778:	lsr	r3, r3, #4
   1577c:	uxtb	r3, r3
   15780:	str	r3, [fp, #-140]	; 0xffffff74
   15784:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15788:	add	r3, r3, #5
   1578c:	ldrb	r3, [r3]
   15790:	and	r7, r3, #15
   15794:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15798:	add	r3, r3, #5
   1579c:	ldrb	r3, [r3]
   157a0:	lsr	r3, r3, #4
   157a4:	uxtb	r3, r3
   157a8:	str	r3, [fp, #-144]	; 0xffffff70
   157ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157b0:	add	r3, r3, #4
   157b4:	ldrb	r3, [r3]
   157b8:	and	r6, r3, #15
   157bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157c0:	add	r3, r3, #4
   157c4:	ldrb	r3, [r3]
   157c8:	lsr	r3, r3, #4
   157cc:	uxtb	r3, r3
   157d0:	str	r3, [fp, #-148]	; 0xffffff6c
   157d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157d8:	add	r3, r3, #3
   157dc:	ldrb	r3, [r3]
   157e0:	and	r4, r3, #15
   157e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157e8:	add	r3, r3, #3
   157ec:	ldrb	r3, [r3]
   157f0:	lsr	r3, r3, #4
   157f4:	uxtb	r3, r3
   157f8:	mov	r8, r3
   157fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15800:	add	r3, r3, #2
   15804:	ldrb	r3, [r3]
   15808:	and	lr, r3, #15
   1580c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15810:	add	r3, r3, #2
   15814:	ldrb	r3, [r3]
   15818:	lsr	r3, r3, #4
   1581c:	uxtb	r3, r3
   15820:	mov	r5, r3
   15824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15828:	add	r3, r3, #1
   1582c:	ldrb	r3, [r3]
   15830:	and	r0, r3, #15
   15834:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15838:	add	r3, r3, #1
   1583c:	ldrb	r3, [r3]
   15840:	lsr	r3, r3, #4
   15844:	uxtb	r3, r3
   15848:	mov	ip, r3
   1584c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15850:	ldrb	r3, [r3]
   15854:	and	r2, r3, #15
   15858:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1585c:	ldrb	r3, [r3]
   15860:	lsr	r3, r3, #4
   15864:	uxtb	r3, r3
   15868:	mov	r1, r3
   1586c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15870:	cmp	r3, #0
   15874:	beq	15880 <sprintf@plt+0x41e4>
   15878:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1587c:	b	15888 <sprintf@plt+0x41ec>
   15880:	ldr	r3, [pc, #268]	; 15994 <sprintf@plt+0x42f8>
   15884:	add	r3, pc, r3
   15888:	str	r3, [sp, #124]	; 0x7c
   1588c:	str	r1, [sp, #120]	; 0x78
   15890:	str	r2, [sp, #116]	; 0x74
   15894:	str	ip, [sp, #112]	; 0x70
   15898:	str	r0, [sp, #108]	; 0x6c
   1589c:	str	r5, [sp, #104]	; 0x68
   158a0:	str	lr, [sp, #100]	; 0x64
   158a4:	str	r8, [sp, #96]	; 0x60
   158a8:	str	r4, [sp, #92]	; 0x5c
   158ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   158b0:	str	r3, [sp, #88]	; 0x58
   158b4:	str	r6, [sp, #84]	; 0x54
   158b8:	ldr	r3, [fp, #-144]	; 0xffffff70
   158bc:	str	r3, [sp, #80]	; 0x50
   158c0:	str	r7, [sp, #76]	; 0x4c
   158c4:	ldr	r3, [fp, #-140]	; 0xffffff74
   158c8:	str	r3, [sp, #72]	; 0x48
   158cc:	str	r9, [sp, #68]	; 0x44
   158d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   158d4:	str	r3, [sp, #64]	; 0x40
   158d8:	str	sl, [sp, #60]	; 0x3c
   158dc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   158e0:	str	r3, [sp, #56]	; 0x38
   158e4:	ldr	r3, [fp, #-128]	; 0xffffff80
   158e8:	str	r3, [sp, #52]	; 0x34
   158ec:	ldr	r3, [fp, #-124]	; 0xffffff84
   158f0:	str	r3, [sp, #48]	; 0x30
   158f4:	ldr	r3, [fp, #-120]	; 0xffffff88
   158f8:	str	r3, [sp, #44]	; 0x2c
   158fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15900:	str	r3, [sp, #40]	; 0x28
   15904:	ldr	r3, [fp, #-112]	; 0xffffff90
   15908:	str	r3, [sp, #36]	; 0x24
   1590c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15910:	str	r3, [sp, #32]
   15914:	ldr	r3, [fp, #-104]	; 0xffffff98
   15918:	str	r3, [sp, #28]
   1591c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15920:	str	r3, [sp, #24]
   15924:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15928:	str	r3, [sp, #20]
   1592c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15930:	str	r3, [sp, #16]
   15934:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15938:	str	r3, [sp, #12]
   1593c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15940:	str	r3, [sp, #8]
   15944:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15948:	str	r3, [sp, #4]
   1594c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15950:	str	r3, [sp]
   15954:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15958:	ldr	r2, [pc, #56]	; 15998 <sprintf@plt+0x42fc>
   1595c:	add	r2, pc, r2
   15960:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15964:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15968:	bl	11630 <snprintf@plt>
   1596c:	nop	{0}
   15970:	sub	sp, fp, #32
   15974:	ldrd	r4, [sp]
   15978:	ldrd	r6, [sp, #8]
   1597c:	ldrd	r8, [sp, #16]
   15980:	ldrd	sl, [sp, #24]
   15984:	add	sp, sp, #32
   15988:	pop	{pc}		; (ldr pc, [sp], #4)
   1598c:	andeq	r9, r0, r4, ror #30
   15990:	andeq	r9, r0, r8, asr pc
   15994:	andeq	r9, r0, r0, lsl #25
   15998:			; <UNDEFINED> instruction: 0x00009bb4
   1599c:	str	fp, [sp, #-8]!
   159a0:	str	lr, [sp, #4]
   159a4:	add	fp, sp, #4
   159a8:	sub	sp, sp, #16
   159ac:	str	r0, [fp, #-8]
   159b0:	str	r1, [fp, #-12]
   159b4:	str	r2, [fp, #-16]
   159b8:	ldr	r3, [fp, #-16]
   159bc:	cmp	r3, #0
   159c0:	bne	159fc <sprintf@plt+0x4360>
   159c4:	ldr	r0, [fp, #-8]
   159c8:	bl	14e40 <sprintf@plt+0x37a4>
   159cc:	str	r0, [fp, #-16]
   159d0:	ldr	r3, [fp, #-16]
   159d4:	add	r3, r3, #292	; 0x124
   159d8:	mov	r2, #128	; 0x80
   159dc:	ldr	r1, [fp, #-12]
   159e0:	mov	r0, r3
   159e4:	bl	114c8 <memcpy@plt>
   159e8:	mov	r0, #256	; 0x100
   159ec:	bl	14684 <sprintf@plt+0x2fe8>
   159f0:	mov	r2, r0
   159f4:	ldr	r3, [fp, #-16]
   159f8:	str	r2, [r3, #420]	; 0x1a4
   159fc:	ldr	r3, [fp, #-16]
   15a00:	add	r0, r3, #21
   15a04:	mov	r3, #0
   15a08:	ldr	r2, [fp, #-12]
   15a0c:	mov	r1, #256	; 0x100
   15a10:	bl	154dc <sprintf@plt+0x3e40>
   15a14:	ldr	r3, [fp, #-16]
   15a18:	mov	r2, #12
   15a1c:	strb	r2, [r3, #20]
   15a20:	ldr	r0, [fp, #-16]
   15a24:	bl	15a3c <sprintf@plt+0x43a0>
   15a28:	nop	{0}
   15a2c:	sub	sp, fp, #4
   15a30:	ldr	fp, [sp]
   15a34:	add	sp, sp, #4
   15a38:	pop	{pc}		; (ldr pc, [sp], #4)
   15a3c:	str	fp, [sp, #-8]!
   15a40:	str	lr, [sp, #4]
   15a44:	add	fp, sp, #4
   15a48:	sub	sp, sp, #1056	; 0x420
   15a4c:	str	r0, [fp, #-1048]	; 0xfffffbe8
   15a50:	mov	r3, #0
   15a54:	str	r3, [fp, #-8]
   15a58:	sub	r3, fp, #1024	; 0x400
   15a5c:	sub	r3, r3, #4
   15a60:	sub	r3, r3, #12
   15a64:	mov	r2, #1024	; 0x400
   15a68:	mov	r1, #0
   15a6c:	mov	r0, r3
   15a70:	bl	113e4 <memset@plt>
   15a74:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15a78:	add	r0, r3, #21
   15a7c:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15a80:	ldrb	r3, [r3, #20]
   15a84:	mov	r1, r3
   15a88:	sub	r3, fp, #1024	; 0x400
   15a8c:	sub	r3, r3, #4
   15a90:	sub	r3, r3, #12
   15a94:	mov	r2, #1024	; 0x400
   15a98:	str	r2, [sp]
   15a9c:	mov	r2, r1
   15aa0:	mov	r1, #1
   15aa4:	bl	18d08 <sprintf@plt+0x766c>
   15aa8:	str	r0, [fp, #-8]
   15aac:	ldr	r3, [fp, #-8]
   15ab0:	cmp	r3, #0
   15ab4:	ble	15b34 <sprintf@plt+0x4498>
   15ab8:	sub	r3, fp, #1024	; 0x400
   15abc:	sub	r3, r3, #4
   15ac0:	sub	r3, r3, #12
   15ac4:	str	r3, [fp, #-12]
   15ac8:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15acc:	ldr	r3, [r3, #12]
   15ad0:	uxth	r2, r3
   15ad4:	ldr	r3, [fp, #-12]
   15ad8:	strh	r2, [r3]
   15adc:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15ae0:	ldrb	r3, [r3, #278]	; 0x116
   15ae4:	add	r3, r3, #1
   15ae8:	uxtb	r2, r3
   15aec:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15af0:	strb	r2, [r3, #278]	; 0x116
   15af4:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15af8:	ldrb	r3, [r3, #278]	; 0x116
   15afc:	mov	r2, r3
   15b00:	sub	r3, fp, #1024	; 0x400
   15b04:	sub	r3, r3, #4
   15b08:	sub	r3, r3, #12
   15b0c:	ldr	r1, [fp, #-8]
   15b10:	mov	r0, r3
   15b14:	bl	14f44 <sprintf@plt+0x38a8>
   15b18:	str	r0, [fp, #-16]
   15b1c:	ldr	r3, [fp, #-16]
   15b20:	cmn	r3, #1
   15b24:	beq	15b34 <sprintf@plt+0x4498>
   15b28:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15b2c:	ldr	r2, [fp, #-16]
   15b30:	str	r2, [r3, #288]	; 0x120
   15b34:	nop	{0}
   15b38:	sub	sp, fp, #4
   15b3c:	ldr	fp, [sp]
   15b40:	add	sp, sp, #4
   15b44:	pop	{pc}		; (ldr pc, [sp], #4)
   15b48:	str	fp, [sp, #-8]!
   15b4c:	str	lr, [sp, #4]
   15b50:	add	fp, sp, #4
   15b54:	sub	sp, sp, #8
   15b58:	str	r0, [fp, #-8]
   15b5c:	ldr	r3, [fp, #-8]
   15b60:	ldrb	r3, [r3, #277]	; 0x115
   15b64:	sub	r3, r3, #1
   15b68:	uxtb	r2, r3
   15b6c:	ldr	r3, [fp, #-8]
   15b70:	strb	r2, [r3, #277]	; 0x115
   15b74:	ldr	r3, [fp, #-8]
   15b78:	ldrb	r3, [r3, #277]	; 0x115
   15b7c:	cmp	r3, #0
   15b80:	bne	15bb4 <sprintf@plt+0x4518>
   15b84:	ldr	r3, [fp, #-8]
   15b88:	ldr	r3, [r3, #424]	; 0x1a8
   15b8c:	ldr	r3, [r3, #4]
   15b90:	ldr	r2, [fp, #-8]
   15b94:	ldr	r2, [r2, #424]	; 0x1a8
   15b98:	ldr	r2, [r2]
   15b9c:	mov	r1, #0
   15ba0:	mov	r0, r2
   15ba4:	blx	r3
   15ba8:	ldr	r0, [fp, #-8]
   15bac:	bl	14de4 <sprintf@plt+0x3748>
   15bb0:	b	15c14 <sprintf@plt+0x4578>
   15bb4:	ldr	r3, [fp, #-8]
   15bb8:	ldrb	r3, [r3, #20]
   15bbc:	cmp	r3, #12
   15bc0:	beq	15bd8 <sprintf@plt+0x453c>
   15bc4:	cmp	r3, #28
   15bc8:	beq	15bf4 <sprintf@plt+0x4558>
   15bcc:	cmp	r3, #1
   15bd0:	beq	15bf4 <sprintf@plt+0x4558>
   15bd4:	b	15c14 <sprintf@plt+0x4578>
   15bd8:	ldr	r3, [fp, #-8]
   15bdc:	add	r3, r3, #292	; 0x124
   15be0:	ldr	r2, [fp, #-8]
   15be4:	mov	r1, r3
   15be8:	mov	r0, #0
   15bec:	bl	1599c <sprintf@plt+0x4300>
   15bf0:	b	15c14 <sprintf@plt+0x4578>
   15bf4:	ldr	r3, [fp, #-8]
   15bf8:	ldr	r1, [r3, #420]	; 0x1a4
   15bfc:	ldr	r3, [fp, #-8]
   15c00:	ldrb	r3, [r3, #20]
   15c04:	ldr	r2, [fp, #-8]
   15c08:	mov	r0, #0
   15c0c:	bl	1544c <sprintf@plt+0x3db0>
   15c10:	nop	{0}
   15c14:	sub	sp, fp, #4
   15c18:	ldr	fp, [sp]
   15c1c:	add	sp, sp, #4
   15c20:	pop	{pc}		; (ldr pc, [sp], #4)
   15c24:	str	fp, [sp, #-8]!
   15c28:	str	lr, [sp, #4]
   15c2c:	add	fp, sp, #4
   15c30:	sub	sp, sp, #288	; 0x120
   15c34:	str	r0, [fp, #-272]	; 0xfffffef0
   15c38:	str	r1, [fp, #-276]	; 0xfffffeec
   15c3c:	str	r2, [fp, #-280]	; 0xfffffee8
   15c40:	str	r3, [fp, #-284]	; 0xfffffee4
   15c44:	ldr	r3, [fp, #-280]	; 0xfffffee8
   15c48:	add	r3, r3, #12
   15c4c:	str	r3, [fp, #-8]
   15c50:	ldr	r3, [fp, #-276]	; 0xfffffeec
   15c54:	ldrh	r3, [r3, #4]
   15c58:	cmp	r3, #1
   15c5c:	beq	15c68 <sprintf@plt+0x45cc>
   15c60:	mov	r3, #0
   15c64:	b	15cd0 <sprintf@plt+0x4634>
   15c68:	sub	r2, fp, #268	; 0x10c
   15c6c:	mov	r3, #256	; 0x100
   15c70:	str	r3, [sp]
   15c74:	mov	r3, r2
   15c78:	ldr	r2, [fp, #-8]
   15c7c:	ldr	r1, [fp, #-284]	; 0xfffffee4
   15c80:	ldr	r0, [fp, #-280]	; 0xfffffee8
   15c84:	bl	16b50 <sprintf@plt+0x54b4>
   15c88:	str	r0, [fp, #-12]
   15c8c:	ldr	r3, [fp, #-12]
   15c90:	cmp	r3, #0
   15c94:	bgt	15ca0 <sprintf@plt+0x4604>
   15c98:	mov	r3, #0
   15c9c:	b	15cd0 <sprintf@plt+0x4634>
   15ca0:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15ca4:	add	r2, r3, #21
   15ca8:	sub	r3, fp, #268	; 0x10c
   15cac:	mov	r1, r2
   15cb0:	mov	r0, r3
   15cb4:	bl	11468 <rb_strcasecmp@plt>
   15cb8:	mov	r3, r0
   15cbc:	cmp	r3, #0
   15cc0:	beq	15ccc <sprintf@plt+0x4630>
   15cc4:	mov	r3, #0
   15cc8:	b	15cd0 <sprintf@plt+0x4634>
   15ccc:	mov	r3, #1
   15cd0:	mov	r0, r3
   15cd4:	sub	sp, fp, #4
   15cd8:	ldr	fp, [sp]
   15cdc:	add	sp, sp, #4
   15ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ce4:	str	fp, [sp, #-8]!
   15ce8:	str	lr, [sp, #4]
   15cec:	add	fp, sp, #4
   15cf0:	sub	sp, sp, #408	; 0x198
   15cf4:	str	r0, [fp, #-392]	; 0xfffffe78
   15cf8:	str	r1, [fp, #-396]	; 0xfffffe74
   15cfc:	str	r2, [fp, #-400]	; 0xfffffe70
   15d00:	str	r3, [fp, #-404]	; 0xfffffe6c
   15d04:	ldr	r3, [fp, #-400]	; 0xfffffe70
   15d08:	add	r3, r3, #12
   15d0c:	str	r3, [fp, #-8]
   15d10:	b	15d64 <sprintf@plt+0x46c8>
   15d14:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15d18:	ldr	r0, [fp, #-8]
   15d1c:	bl	1742c <sprintf@plt+0x5d90>
   15d20:	str	r0, [fp, #-12]
   15d24:	ldr	r3, [fp, #-12]
   15d28:	cmp	r3, #0
   15d2c:	bge	15d38 <sprintf@plt+0x469c>
   15d30:	mov	r3, #0
   15d34:	b	16050 <sprintf@plt+0x49b4>
   15d38:	ldr	r3, [fp, #-12]
   15d3c:	add	r3, r3, #4
   15d40:	ldr	r2, [fp, #-8]
   15d44:	add	r3, r2, r3
   15d48:	str	r3, [fp, #-8]
   15d4c:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15d50:	ldrh	r3, [r3, #4]
   15d54:	sub	r3, r3, #1
   15d58:	uxth	r2, r3
   15d5c:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15d60:	strh	r2, [r3, #4]
   15d64:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15d68:	ldrh	r3, [r3, #4]
   15d6c:	cmp	r3, #0
   15d70:	bne	15d14 <sprintf@plt+0x4678>
   15d74:	b	16024 <sprintf@plt+0x4988>
   15d78:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15d7c:	ldrh	r3, [r3, #6]
   15d80:	sub	r3, r3, #1
   15d84:	uxth	r2, r3
   15d88:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15d8c:	strh	r2, [r3, #6]
   15d90:	sub	r2, fp, #384	; 0x180
   15d94:	movw	r3, #355	; 0x163
   15d98:	str	r3, [sp]
   15d9c:	mov	r3, r2
   15da0:	ldr	r2, [fp, #-8]
   15da4:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15da8:	ldr	r0, [fp, #-400]	; 0xfffffe70
   15dac:	bl	16b50 <sprintf@plt+0x54b4>
   15db0:	str	r0, [fp, #-12]
   15db4:	ldr	r3, [fp, #-12]
   15db8:	cmp	r3, #0
   15dbc:	bge	15dc8 <sprintf@plt+0x472c>
   15dc0:	mov	r3, #0
   15dc4:	b	16050 <sprintf@plt+0x49b4>
   15dc8:	ldr	r3, [fp, #-12]
   15dcc:	cmp	r3, #0
   15dd0:	bne	15ddc <sprintf@plt+0x4740>
   15dd4:	mov	r3, #0
   15dd8:	b	16050 <sprintf@plt+0x49b4>
   15ddc:	mov	r3, #0
   15de0:	strb	r3, [fp, #-129]	; 0xffffff7f
   15de4:	ldr	r3, [fp, #-12]
   15de8:	ldr	r2, [fp, #-8]
   15dec:	add	r3, r2, r3
   15df0:	str	r3, [fp, #-8]
   15df4:	ldr	r3, [fp, #-8]
   15df8:	add	r3, r3, #10
   15dfc:	ldr	r2, [fp, #-404]	; 0xfffffe6c
   15e00:	cmp	r2, r3
   15e04:	bls	16048 <sprintf@plt+0x49ac>
   15e08:	ldr	r0, [fp, #-8]
   15e0c:	bl	175e0 <sprintf@plt+0x5f44>
   15e10:	mov	r3, r0
   15e14:	str	r3, [fp, #-16]
   15e18:	ldr	r3, [fp, #-8]
   15e1c:	add	r3, r3, #2
   15e20:	str	r3, [fp, #-8]
   15e24:	ldr	r0, [fp, #-8]
   15e28:	bl	175e0 <sprintf@plt+0x5f44>
   15e2c:	ldr	r3, [fp, #-8]
   15e30:	add	r3, r3, #2
   15e34:	str	r3, [fp, #-8]
   15e38:	ldr	r0, [fp, #-8]
   15e3c:	bl	17638 <sprintf@plt+0x5f9c>
   15e40:	mov	r3, r0
   15e44:	mov	r2, r3
   15e48:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15e4c:	str	r2, [r3, #16]
   15e50:	ldr	r3, [fp, #-8]
   15e54:	add	r3, r3, #4
   15e58:	str	r3, [fp, #-8]
   15e5c:	ldr	r0, [fp, #-8]
   15e60:	bl	175e0 <sprintf@plt+0x5f44>
   15e64:	mov	r3, r0
   15e68:	str	r3, [fp, #-20]	; 0xffffffec
   15e6c:	ldr	r3, [fp, #-8]
   15e70:	add	r3, r3, #2
   15e74:	str	r3, [fp, #-8]
   15e78:	ldr	r3, [fp, #-16]
   15e7c:	cmp	r3, #12
   15e80:	beq	15f90 <sprintf@plt+0x48f4>
   15e84:	ldr	r3, [fp, #-16]
   15e88:	cmp	r3, #28
   15e8c:	beq	15f14 <sprintf@plt+0x4878>
   15e90:	ldr	r3, [fp, #-16]
   15e94:	cmp	r3, #1
   15e98:	bne	16014 <sprintf@plt+0x4978>
   15e9c:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15ea0:	ldrb	r3, [r3, #20]
   15ea4:	cmp	r3, #1
   15ea8:	beq	15eb4 <sprintf@plt+0x4818>
   15eac:	mov	r3, #0
   15eb0:	b	16050 <sprintf@plt+0x49b4>
   15eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15eb8:	cmp	r3, #4
   15ebc:	beq	15ec8 <sprintf@plt+0x482c>
   15ec0:	mov	r3, #0
   15ec4:	b	16050 <sprintf@plt+0x49b4>
   15ec8:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15ecc:	add	r3, r3, #292	; 0x124
   15ed0:	str	r3, [fp, #-24]	; 0xffffffe8
   15ed4:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15ed8:	add	r2, r3, #292	; 0x124
   15edc:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15ee0:	add	r3, r3, #292	; 0x124
   15ee4:	ldrh	r2, [r2]
   15ee8:	strh	r2, [r3]
   15eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ef0:	mov	r2, #2
   15ef4:	strh	r2, [r3]
   15ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15efc:	add	r3, r3, #4
   15f00:	ldr	r2, [fp, #-8]
   15f04:	ldr	r2, [r2]
   15f08:	str	r2, [r3]
   15f0c:	mov	r3, #1
   15f10:	b	16050 <sprintf@plt+0x49b4>
   15f14:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15f18:	ldrb	r3, [r3, #20]
   15f1c:	cmp	r3, #28
   15f20:	beq	15f2c <sprintf@plt+0x4890>
   15f24:	mov	r3, #0
   15f28:	b	16050 <sprintf@plt+0x49b4>
   15f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f30:	cmp	r3, #16
   15f34:	beq	15f40 <sprintf@plt+0x48a4>
   15f38:	mov	r3, #0
   15f3c:	b	16050 <sprintf@plt+0x49b4>
   15f40:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15f44:	add	r2, r3, #292	; 0x124
   15f48:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15f4c:	add	r3, r3, #292	; 0x124
   15f50:	ldrh	r2, [r2]
   15f54:	strh	r2, [r3]
   15f58:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15f5c:	add	r3, r3, #292	; 0x124
   15f60:	str	r3, [fp, #-28]	; 0xffffffe4
   15f64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f68:	mov	r2, #10
   15f6c:	strh	r2, [r3]
   15f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f74:	add	r3, r3, #8
   15f78:	mov	r2, #16
   15f7c:	ldr	r1, [fp, #-8]
   15f80:	mov	r0, r3
   15f84:	bl	114c8 <memcpy@plt>
   15f88:	mov	r3, #1
   15f8c:	b	16050 <sprintf@plt+0x49b4>
   15f90:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15f94:	ldrb	r3, [r3, #20]
   15f98:	cmp	r3, #12
   15f9c:	beq	15fa8 <sprintf@plt+0x490c>
   15fa0:	mov	r3, #0
   15fa4:	b	16050 <sprintf@plt+0x49b4>
   15fa8:	sub	r2, fp, #384	; 0x180
   15fac:	movw	r3, #355	; 0x163
   15fb0:	str	r3, [sp]
   15fb4:	mov	r3, r2
   15fb8:	ldr	r2, [fp, #-8]
   15fbc:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15fc0:	ldr	r0, [fp, #-400]	; 0xfffffe70
   15fc4:	bl	16b50 <sprintf@plt+0x54b4>
   15fc8:	str	r0, [fp, #-12]
   15fcc:	ldr	r3, [fp, #-12]
   15fd0:	cmp	r3, #0
   15fd4:	bge	15fe0 <sprintf@plt+0x4944>
   15fd8:	mov	r3, #0
   15fdc:	b	16050 <sprintf@plt+0x49b4>
   15fe0:	ldr	r3, [fp, #-12]
   15fe4:	cmp	r3, #0
   15fe8:	bne	15ff4 <sprintf@plt+0x4958>
   15fec:	mov	r3, #0
   15ff0:	b	16050 <sprintf@plt+0x49b4>
   15ff4:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15ff8:	ldr	r3, [r3, #420]	; 0x1a4
   15ffc:	sub	r1, fp, #384	; 0x180
   16000:	mov	r2, #256	; 0x100
   16004:	mov	r0, r3
   16008:	bl	11420 <rb_strlcpy@plt>
   1600c:	mov	r3, #1
   16010:	b	16050 <sprintf@plt+0x49b4>
   16014:	ldr	r3, [fp, #-20]	; 0xffffffec
   16018:	ldr	r2, [fp, #-8]
   1601c:	add	r3, r2, r3
   16020:	str	r3, [fp, #-8]
   16024:	ldr	r3, [fp, #-396]	; 0xfffffe74
   16028:	ldrh	r3, [r3, #6]
   1602c:	cmp	r3, #0
   16030:	beq	1604c <sprintf@plt+0x49b0>
   16034:	ldr	r2, [fp, #-8]
   16038:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   1603c:	cmp	r2, r3
   16040:	bcc	15d78 <sprintf@plt+0x46dc>
   16044:	b	1604c <sprintf@plt+0x49b0>
   16048:	nop	{0}
   1604c:	mov	r3, #1
   16050:	mov	r0, r3
   16054:	sub	sp, fp, #4
   16058:	ldr	fp, [sp]
   1605c:	add	sp, sp, #4
   16060:	pop	{pc}		; (ldr pc, [sp], #4)
   16064:	str	fp, [sp, #-8]!
   16068:	str	lr, [sp, #4]
   1606c:	add	fp, sp, #4
   16070:	sub	sp, sp, #1200	; 0x4b0
   16074:	sub	sp, sp, #8
   16078:	str	r0, [fp, #-1200]	; 0xfffffb50
   1607c:	str	r1, [fp, #-1204]	; 0xfffffb4c
   16080:	mov	r3, #0
   16084:	str	r3, [fp, #-8]
   16088:	mov	r3, #0
   1608c:	str	r3, [fp, #-12]
   16090:	mov	r3, #128	; 0x80
   16094:	str	r3, [fp, #-1068]	; 0xfffffbd4
   16098:	ldr	r0, [fp, #-1200]	; 0xfffffb50
   1609c:	bl	11330 <rb_get_fd@plt>
   160a0:	sub	r1, fp, #1056	; 0x420
   160a4:	sub	r1, r1, #4
   160a8:	sub	r1, r1, #4
   160ac:	sub	r3, fp, #1056	; 0x420
   160b0:	sub	r3, r3, #4
   160b4:	sub	r3, r3, #8
   160b8:	str	r3, [sp, #4]
   160bc:	sub	r3, fp, #1184	; 0x4a0
   160c0:	sub	r3, r3, #4
   160c4:	sub	r3, r3, #8
   160c8:	str	r3, [sp]
   160cc:	mov	r3, #0
   160d0:	movw	r2, #1036	; 0x40c
   160d4:	bl	11654 <recvfrom@plt>
   160d8:	str	r0, [fp, #-16]
   160dc:	ldr	r3, [fp, #-16]
   160e0:	cmp	r3, #0
   160e4:	beq	160f4 <sprintf@plt+0x4a58>
   160e8:	ldr	r3, [fp, #-16]
   160ec:	cmn	r3, #1
   160f0:	bne	160fc <sprintf@plt+0x4a60>
   160f4:	mov	r3, #0
   160f8:	b	16528 <sprintf@plt+0x4e8c>
   160fc:	ldr	r3, [fp, #-16]
   16100:	cmp	r3, #12
   16104:	bgt	16110 <sprintf@plt+0x4a74>
   16108:	mov	r3, #1
   1610c:	b	16528 <sprintf@plt+0x4e8c>
   16110:	sub	r3, fp, #1056	; 0x420
   16114:	sub	r3, r3, #4
   16118:	sub	r3, r3, #4
   1611c:	str	r3, [fp, #-20]	; 0xffffffec
   16120:	ldr	r3, [fp, #-20]	; 0xffffffec
   16124:	ldrh	r3, [r3, #6]
   16128:	mov	r0, r3
   1612c:	bl	1148c <ntohs@plt>
   16130:	mov	r3, r0
   16134:	mov	r2, r3
   16138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1613c:	strh	r2, [r3, #6]
   16140:	ldr	r3, [fp, #-20]	; 0xffffffec
   16144:	ldrh	r3, [r3, #4]
   16148:	mov	r0, r3
   1614c:	bl	1148c <ntohs@plt>
   16150:	mov	r3, r0
   16154:	mov	r2, r3
   16158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1615c:	strh	r2, [r3, #4]
   16160:	ldr	r3, [fp, #-20]	; 0xffffffec
   16164:	ldrh	r3, [r3, #8]
   16168:	mov	r0, r3
   1616c:	bl	1148c <ntohs@plt>
   16170:	mov	r3, r0
   16174:	mov	r2, r3
   16178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1617c:	strh	r2, [r3, #8]
   16180:	ldr	r3, [fp, #-20]	; 0xffffffec
   16184:	ldrh	r3, [r3, #10]
   16188:	mov	r0, r3
   1618c:	bl	1148c <ntohs@plt>
   16190:	mov	r3, r0
   16194:	mov	r2, r3
   16198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1619c:	strh	r2, [r3, #10]
   161a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   161a4:	ldrh	r3, [r3]
   161a8:	mov	r0, r3
   161ac:	bl	1521c <sprintf@plt+0x3b80>
   161b0:	str	r0, [fp, #-8]
   161b4:	ldr	r3, [fp, #-8]
   161b8:	cmp	r3, #0
   161bc:	bne	161c8 <sprintf@plt+0x4b2c>
   161c0:	mov	r3, #1
   161c4:	b	16528 <sprintf@plt+0x4e8c>
   161c8:	sub	r3, fp, #1184	; 0x4a0
   161cc:	sub	r3, r3, #4
   161d0:	sub	r3, r3, #8
   161d4:	mov	r0, r3
   161d8:	bl	147a8 <sprintf@plt+0x310c>
   161dc:	str	r0, [fp, #-24]	; 0xffffffe8
   161e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161e4:	cmn	r3, #1
   161e8:	bne	161f4 <sprintf@plt+0x4b58>
   161ec:	mov	r3, #1
   161f0:	b	16528 <sprintf@plt+0x4e8c>
   161f4:	ldr	r3, [fp, #-8]
   161f8:	ldr	r3, [r3, #288]	; 0x120
   161fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16200:	cmp	r2, r3
   16204:	beq	1622c <sprintf@plt+0x4b90>
   16208:	ldr	r3, [pc, #812]	; 1653c <sprintf@plt+0x4ea0>
   1620c:	add	r3, pc, r3
   16210:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16214:	ldr	r3, [r3, r2, lsl #2]
   16218:	add	r1, r3, #3
   1621c:	ldr	r3, [pc, #796]	; 16540 <sprintf@plt+0x4ea4>
   16220:	add	r3, pc, r3
   16224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16228:	str	r1, [r3, r2, lsl #2]
   1622c:	ldr	r2, [fp, #-16]
   16230:	sub	r3, fp, #1056	; 0x420
   16234:	sub	r3, r3, #4
   16238:	sub	r3, r3, #4
   1623c:	add	r3, r3, r2
   16240:	sub	r2, fp, #1056	; 0x420
   16244:	sub	r2, r2, #4
   16248:	sub	r2, r2, #4
   1624c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16250:	ldr	r0, [fp, #-8]
   16254:	bl	15c24 <sprintf@plt+0x4588>
   16258:	mov	r3, r0
   1625c:	cmp	r3, #0
   16260:	bne	1626c <sprintf@plt+0x4bd0>
   16264:	mov	r3, #1
   16268:	b	16528 <sprintf@plt+0x4e8c>
   1626c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16270:	ldrb	r3, [r3, #3]
   16274:	and	r3, r3, #15
   16278:	uxtb	r3, r3
   1627c:	cmp	r3, #0
   16280:	bne	16294 <sprintf@plt+0x4bf8>
   16284:	ldr	r3, [fp, #-20]	; 0xffffffec
   16288:	ldrh	r3, [r3, #6]
   1628c:	cmp	r3, #0
   16290:	bne	16390 <sprintf@plt+0x4cf4>
   16294:	ldr	r3, [fp, #-20]	; 0xffffffec
   16298:	ldrb	r3, [r3, #3]
   1629c:	and	r3, r3, #15
   162a0:	uxtb	r3, r3
   162a4:	cmp	r3, #2
   162a8:	beq	162dc <sprintf@plt+0x4c40>
   162ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b0:	ldrb	r3, [r3, #3]
   162b4:	and	r3, r3, #15
   162b8:	uxtb	r3, r3
   162bc:	cmp	r3, #4
   162c0:	beq	162dc <sprintf@plt+0x4c40>
   162c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   162c8:	ldrb	r3, [r3, #3]
   162cc:	and	r3, r3, #15
   162d0:	uxtb	r3, r3
   162d4:	cmp	r3, #5
   162d8:	bne	1630c <sprintf@plt+0x4c70>
   162dc:	ldr	r3, [pc, #608]	; 16544 <sprintf@plt+0x4ea8>
   162e0:	add	r3, pc, r3
   162e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162e8:	ldr	r3, [r3, r2, lsl #2]
   162ec:	add	r1, r3, #1
   162f0:	ldr	r3, [pc, #592]	; 16548 <sprintf@plt+0x4eac>
   162f4:	add	r3, pc, r3
   162f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162fc:	str	r1, [r3, r2, lsl #2]
   16300:	ldr	r0, [fp, #-8]
   16304:	bl	15b48 <sprintf@plt+0x44ac>
   16308:	b	16388 <sprintf@plt+0x4cec>
   1630c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16310:	ldrb	r3, [r3, #3]
   16314:	and	r3, r3, #15
   16318:	uxtb	r3, r3
   1631c:	cmp	r3, #3
   16320:	bne	1635c <sprintf@plt+0x4cc0>
   16324:	ldr	r3, [pc, #544]	; 1654c <sprintf@plt+0x4eb0>
   16328:	add	r3, pc, r3
   1632c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16330:	ldr	r3, [r3, r2, lsl #2]
   16334:	add	r2, r3, #3
   16338:	cmp	r3, #0
   1633c:	movlt	r3, r2
   16340:	movge	r3, r3
   16344:	asr	r3, r3, #2
   16348:	mov	r1, r3
   1634c:	ldr	r3, [pc, #508]	; 16550 <sprintf@plt+0x4eb4>
   16350:	add	r3, pc, r3
   16354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16358:	str	r1, [r3, r2, lsl #2]
   1635c:	ldr	r3, [fp, #-8]
   16360:	ldr	r3, [r3, #424]	; 0x1a8
   16364:	ldr	r3, [r3, #4]
   16368:	ldr	r2, [fp, #-8]
   1636c:	ldr	r2, [r2, #424]	; 0x1a8
   16370:	ldr	r2, [r2]
   16374:	mov	r1, #0
   16378:	mov	r0, r2
   1637c:	blx	r3
   16380:	ldr	r0, [fp, #-8]
   16384:	bl	14de4 <sprintf@plt+0x3748>
   16388:	mov	r3, #1
   1638c:	b	16528 <sprintf@plt+0x4e8c>
   16390:	ldr	r2, [fp, #-16]
   16394:	sub	r3, fp, #1056	; 0x420
   16398:	sub	r3, r3, #4
   1639c:	sub	r3, r3, #4
   163a0:	add	r3, r3, r2
   163a4:	sub	r2, fp, #1056	; 0x420
   163a8:	sub	r2, r2, #4
   163ac:	sub	r2, r2, #4
   163b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   163b4:	ldr	r0, [fp, #-8]
   163b8:	bl	15ce4 <sprintf@plt+0x4648>
   163bc:	str	r0, [fp, #-28]	; 0xffffffe4
   163c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   163c4:	cmp	r3, #0
   163c8:	beq	164f8 <sprintf@plt+0x4e5c>
   163cc:	ldr	r3, [fp, #-8]
   163d0:	ldrb	r3, [r3, #20]
   163d4:	cmp	r3, #12
   163d8:	bne	1647c <sprintf@plt+0x4de0>
   163dc:	ldr	r3, [fp, #-8]
   163e0:	ldr	r3, [r3, #420]	; 0x1a4
   163e4:	cmp	r3, #0
   163e8:	bne	16420 <sprintf@plt+0x4d84>
   163ec:	ldr	r3, [pc, #352]	; 16554 <sprintf@plt+0x4eb8>
   163f0:	add	r3, pc, r3
   163f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163f8:	ldr	r3, [r3, r2, lsl #2]
   163fc:	add	r1, r3, #1
   16400:	ldr	r3, [pc, #336]	; 16558 <sprintf@plt+0x4ebc>
   16404:	add	r3, pc, r3
   16408:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1640c:	str	r1, [r3, r2, lsl #2]
   16410:	ldr	r0, [fp, #-8]
   16414:	bl	15b48 <sprintf@plt+0x44ac>
   16418:	mov	r3, #1
   1641c:	b	16528 <sprintf@plt+0x4e8c>
   16420:	ldr	r3, [fp, #-8]
   16424:	add	r3, r3, #292	; 0x124
   16428:	ldrh	r3, [r3]
   1642c:	cmp	r3, #10
   16430:	bne	16454 <sprintf@plt+0x4db8>
   16434:	ldr	r3, [fp, #-8]
   16438:	ldr	r0, [r3, #420]	; 0x1a4
   1643c:	ldr	r3, [fp, #-8]
   16440:	ldr	r3, [r3, #424]	; 0x1a8
   16444:	mov	r2, #28
   16448:	mov	r1, r3
   1644c:	bl	15394 <sprintf@plt+0x3cf8>
   16450:	b	16470 <sprintf@plt+0x4dd4>
   16454:	ldr	r3, [fp, #-8]
   16458:	ldr	r0, [r3, #420]	; 0x1a4
   1645c:	ldr	r3, [fp, #-8]
   16460:	ldr	r3, [r3, #424]	; 0x1a8
   16464:	mov	r2, #1
   16468:	mov	r1, r3
   1646c:	bl	15394 <sprintf@plt+0x3cf8>
   16470:	ldr	r0, [fp, #-8]
   16474:	bl	14de4 <sprintf@plt+0x3748>
   16478:	b	164bc <sprintf@plt+0x4e20>
   1647c:	ldr	r0, [fp, #-8]
   16480:	bl	165d0 <sprintf@plt+0x4f34>
   16484:	str	r0, [fp, #-12]
   16488:	ldr	r3, [fp, #-8]
   1648c:	ldr	r3, [r3, #424]	; 0x1a8
   16490:	ldr	r3, [r3, #4]
   16494:	ldr	r2, [fp, #-8]
   16498:	ldr	r2, [r2, #424]	; 0x1a8
   1649c:	ldr	r2, [r2]
   164a0:	ldr	r1, [fp, #-12]
   164a4:	mov	r0, r2
   164a8:	blx	r3
   164ac:	ldr	r0, [fp, #-12]
   164b0:	bl	1475c <sprintf@plt+0x30c0>
   164b4:	ldr	r0, [fp, #-8]
   164b8:	bl	14de4 <sprintf@plt+0x3748>
   164bc:	ldr	r3, [pc, #152]	; 1655c <sprintf@plt+0x4ec0>
   164c0:	add	r3, pc, r3
   164c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164c8:	ldr	r3, [r3, r2, lsl #2]
   164cc:	add	r2, r3, #3
   164d0:	cmp	r3, #0
   164d4:	movlt	r3, r2
   164d8:	movge	r3, r3
   164dc:	asr	r3, r3, #2
   164e0:	mov	r1, r3
   164e4:	ldr	r3, [pc, #116]	; 16560 <sprintf@plt+0x4ec4>
   164e8:	add	r3, pc, r3
   164ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164f0:	str	r1, [r3, r2, lsl #2]
   164f4:	b	16524 <sprintf@plt+0x4e88>
   164f8:	ldr	r3, [pc, #100]	; 16564 <sprintf@plt+0x4ec8>
   164fc:	add	r3, pc, r3
   16500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16504:	ldr	r3, [r3, r2, lsl #2]
   16508:	add	r1, r3, #1
   1650c:	ldr	r3, [pc, #84]	; 16568 <sprintf@plt+0x4ecc>
   16510:	add	r3, pc, r3
   16514:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16518:	str	r1, [r3, r2, lsl #2]
   1651c:	ldr	r0, [fp, #-8]
   16520:	bl	15b48 <sprintf@plt+0x44ac>
   16524:	mov	r3, #1
   16528:	mov	r0, r3
   1652c:	sub	sp, fp, #4
   16530:	ldr	fp, [sp]
   16534:	add	sp, sp, #4
   16538:	pop	{pc}		; (ldr pc, [sp], #4)
   1653c:	andeq	pc, r1, r8, lsl #28
   16540:	strdeq	pc, [r1], -r4
   16544:	andeq	pc, r1, r4, lsr sp	; <UNPREDICTABLE>
   16548:	andeq	pc, r1, r0, lsr #26
   1654c:	andeq	pc, r1, ip, ror #25
   16550:	andeq	pc, r1, r4, asr #25
   16554:	andeq	pc, r1, r4, lsr #24
   16558:	andeq	pc, r1, r0, lsl ip	; <UNPREDICTABLE>
   1655c:	andeq	pc, r1, r4, asr fp	; <UNPREDICTABLE>
   16560:	andeq	pc, r1, ip, lsr #22
   16564:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   16568:	andeq	pc, r1, r4, lsl #22
   1656c:	str	fp, [sp, #-8]!
   16570:	str	lr, [sp, #4]
   16574:	add	fp, sp, #4
   16578:	sub	sp, sp, #8
   1657c:	str	r0, [fp, #-8]
   16580:	str	r1, [fp, #-12]
   16584:	nop	{0}
   16588:	ldr	r1, [fp, #-12]
   1658c:	ldr	r0, [fp, #-8]
   16590:	bl	16064 <sprintf@plt+0x49c8>
   16594:	mov	r3, r0
   16598:	cmp	r3, #0
   1659c:	bne	16588 <sprintf@plt+0x4eec>
   165a0:	mov	r3, #0
   165a4:	ldr	r2, [pc, #32]	; 165cc <sprintf@plt+0x4f30>
   165a8:	add	r2, pc, r2
   165ac:	mov	r1, #1
   165b0:	ldr	r0, [fp, #-8]
   165b4:	bl	11324 <rb_setselect@plt>
   165b8:	nop	{0}
   165bc:	sub	sp, fp, #4
   165c0:	ldr	fp, [sp]
   165c4:	add	sp, sp, #4
   165c8:	pop	{pc}		; (ldr pc, [sp], #4)
   165cc:			; <UNDEFINED> instruction: 0xffffffbc
   165d0:	str	fp, [sp, #-8]!
   165d4:	str	lr, [sp, #4]
   165d8:	add	fp, sp, #4
   165dc:	sub	sp, sp, #24
   165e0:	str	r0, [fp, #-16]
   165e4:	ldr	r3, [fp, #-16]
   165e8:	cmp	r3, #0
   165ec:	movne	r3, #1
   165f0:	moveq	r3, #0
   165f4:	uxtb	r3, r3
   165f8:	cmp	r3, #0
   165fc:	bne	1664c <sprintf@plt+0x4fb0>
   16600:	ldr	r3, [pc, #148]	; 1669c <sprintf@plt+0x5000>
   16604:	add	r3, pc, r3
   16608:	str	r3, [sp]
   1660c:	ldr	r3, [pc, #140]	; 166a0 <sprintf@plt+0x5004>
   16610:	add	r3, pc, r3
   16614:	movw	r2, #878	; 0x36e
   16618:	ldr	r1, [pc, #132]	; 166a4 <sprintf@plt+0x5008>
   1661c:	add	r1, pc, r1
   16620:	ldr	r0, [pc, #128]	; 166a8 <sprintf@plt+0x500c>
   16624:	add	r0, pc, r0
   16628:	bl	11534 <rb_lib_log@plt>
   1662c:	ldr	r3, [pc, #120]	; 166ac <sprintf@plt+0x5010>
   16630:	add	r3, pc, r3
   16634:	movw	r2, #878	; 0x36e
   16638:	ldr	r1, [pc, #112]	; 166b0 <sprintf@plt+0x5014>
   1663c:	add	r1, pc, r1
   16640:	ldr	r0, [pc, #108]	; 166b4 <sprintf@plt+0x5018>
   16644:	add	r0, pc, r0
   16648:	bl	11414 <__assert_fail@plt>
   1664c:	mov	r0, #132	; 0x84
   16650:	bl	14684 <sprintf@plt+0x2fe8>
   16654:	str	r0, [fp, #-8]
   16658:	ldr	r3, [fp, #-16]
   1665c:	ldr	r2, [r3, #420]	; 0x1a4
   16660:	ldr	r3, [fp, #-8]
   16664:	str	r2, [r3]
   16668:	ldr	r3, [fp, #-8]
   1666c:	add	r0, r3, #4
   16670:	ldr	r3, [fp, #-16]
   16674:	add	r3, r3, #292	; 0x124
   16678:	mov	r2, #128	; 0x80
   1667c:	mov	r1, r3
   16680:	bl	114c8 <memcpy@plt>
   16684:	ldr	r3, [fp, #-8]
   16688:	mov	r0, r3
   1668c:	sub	sp, fp, #4
   16690:	ldr	fp, [sp]
   16694:	add	sp, sp, #4
   16698:	pop	{pc}		; (ldr pc, [sp], #4)
   1669c:	andeq	r8, r0, r0, lsr #31
   166a0:	andeq	r9, r0, ip
   166a4:			; <UNDEFINED> instruction: 0x00008eb4
   166a8:	andeq	r8, r0, r0, asr pc
   166ac:	andeq	r8, r0, ip, ror #31
   166b0:	muleq	r0, r4, lr
   166b4:	andeq	r8, r0, r0, ror pc
   166b8:	strd	r4, [sp, #-16]!
   166bc:	str	fp, [sp, #8]
   166c0:	str	lr, [sp, #12]
   166c4:	add	fp, sp, #12
   166c8:	ldr	r4, [pc, #84]	; 16724 <sprintf@plt+0x5088>
   166cc:	add	r4, pc, r4
   166d0:	ldr	r3, [pc, #80]	; 16728 <sprintf@plt+0x508c>
   166d4:	ldr	r3, [r4, r3]
   166d8:	mov	r2, #0
   166dc:	str	r2, [r3]
   166e0:	bl	16730 <sprintf@plt+0x5094>
   166e4:	ldr	r3, [pc, #60]	; 16728 <sprintf@plt+0x508c>
   166e8:	ldr	r3, [r4, r3]
   166ec:	ldr	r3, [r3]
   166f0:	cmp	r3, #0
   166f4:	bne	16708 <sprintf@plt+0x506c>
   166f8:	ldr	r3, [pc, #44]	; 1672c <sprintf@plt+0x5090>
   166fc:	add	r3, pc, r3
   16700:	mov	r0, r3
   16704:	bl	169e8 <sprintf@plt+0x534c>
   16708:	mov	r3, #0
   1670c:	mov	r0, r3
   16710:	sub	sp, fp, #12
   16714:	ldrd	r4, [sp]
   16718:	ldr	fp, [sp, #8]
   1671c:	add	sp, sp, #12
   16720:	pop	{pc}		; (ldr pc, [sp], #4)
   16724:	andeq	sl, r1, ip, lsr #18
   16728:	andeq	r0, r0, ip, ror r1
   1672c:	andeq	r9, r0, ip, lsr r0
   16730:	str	r4, [sp, #-12]!
   16734:	str	fp, [sp, #4]
   16738:	str	lr, [sp, #8]
   1673c:	add	fp, sp, #8
   16740:	sub	sp, sp, #148	; 0x94
   16744:	ldr	r4, [pc, #636]	; 169c8 <sprintf@plt+0x532c>
   16748:	add	r4, pc, r4
   1674c:	ldr	r3, [pc, #632]	; 169cc <sprintf@plt+0x5330>
   16750:	add	r3, pc, r3
   16754:	mov	r1, r3
   16758:	ldr	r3, [pc, #624]	; 169d0 <sprintf@plt+0x5334>
   1675c:	add	r3, pc, r3
   16760:	mov	r0, r3
   16764:	bl	113d8 <fopen@plt>
   16768:	str	r0, [fp, #-20]	; 0xffffffec
   1676c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16770:	cmp	r3, #0
   16774:	bne	16984 <sprintf@plt+0x52e8>
   16778:	mvn	r3, #0
   1677c:	b	169b0 <sprintf@plt+0x5314>
   16780:	sub	r3, fp, #156	; 0x9c
   16784:	ldr	r2, [pc, #584]	; 169d4 <sprintf@plt+0x5338>
   16788:	add	r2, pc, r2
   1678c:	mov	r1, r2
   16790:	mov	r0, r3
   16794:	bl	1166c <strpbrk@plt>
   16798:	str	r0, [fp, #-16]
   1679c:	ldr	r3, [fp, #-16]
   167a0:	cmp	r3, #0
   167a4:	beq	167b4 <sprintf@plt+0x5118>
   167a8:	ldr	r3, [fp, #-16]
   167ac:	mov	r2, #0
   167b0:	strb	r2, [r3]
   167b4:	sub	r3, fp, #156	; 0x9c
   167b8:	str	r3, [fp, #-16]
   167bc:	b	167cc <sprintf@plt+0x5130>
   167c0:	ldr	r3, [fp, #-16]
   167c4:	add	r3, r3, #1
   167c8:	str	r3, [fp, #-16]
   167cc:	bl	1157c <__ctype_b_loc@plt>
   167d0:	mov	r3, r0
   167d4:	ldr	r2, [r3]
   167d8:	ldr	r3, [fp, #-16]
   167dc:	ldrb	r3, [r3]
   167e0:	lsl	r3, r3, #1
   167e4:	add	r3, r2, r3
   167e8:	ldrh	r3, [r3]
   167ec:	and	r3, r3, #8192	; 0x2000
   167f0:	cmp	r3, #0
   167f4:	bne	167c0 <sprintf@plt+0x5124>
   167f8:	ldr	r3, [fp, #-16]
   167fc:	ldrb	r3, [r3]
   16800:	cmp	r3, #0
   16804:	bne	1680c <sprintf@plt+0x5170>
   16808:	b	16984 <sprintf@plt+0x52e8>
   1680c:	ldr	r3, [fp, #-16]
   16810:	ldrb	r3, [r3]
   16814:	cmp	r3, #35	; 0x23
   16818:	beq	16984 <sprintf@plt+0x52e8>
   1681c:	ldr	r3, [fp, #-16]
   16820:	ldrb	r3, [r3]
   16824:	cmp	r3, #59	; 0x3b
   16828:	bne	16830 <sprintf@plt+0x5194>
   1682c:	b	16984 <sprintf@plt+0x52e8>
   16830:	ldr	r3, [fp, #-16]
   16834:	str	r3, [fp, #-24]	; 0xffffffe8
   16838:	b	16848 <sprintf@plt+0x51ac>
   1683c:	ldr	r3, [fp, #-16]
   16840:	add	r3, r3, #1
   16844:	str	r3, [fp, #-16]
   16848:	bl	1157c <__ctype_b_loc@plt>
   1684c:	mov	r3, r0
   16850:	ldr	r2, [r3]
   16854:	ldr	r3, [fp, #-16]
   16858:	ldrb	r3, [r3]
   1685c:	lsl	r3, r3, #1
   16860:	add	r3, r2, r3
   16864:	ldrh	r3, [r3]
   16868:	and	r3, r3, #8192	; 0x2000
   1686c:	cmp	r3, #0
   16870:	bne	16884 <sprintf@plt+0x51e8>
   16874:	ldr	r3, [fp, #-16]
   16878:	ldrb	r3, [r3]
   1687c:	cmp	r3, #0
   16880:	bne	1683c <sprintf@plt+0x51a0>
   16884:	ldr	r3, [fp, #-16]
   16888:	ldrb	r3, [r3]
   1688c:	cmp	r3, #0
   16890:	bne	16898 <sprintf@plt+0x51fc>
   16894:	b	16984 <sprintf@plt+0x52e8>
   16898:	ldr	r3, [fp, #-16]
   1689c:	add	r2, r3, #1
   168a0:	str	r2, [fp, #-16]
   168a4:	mov	r2, #0
   168a8:	strb	r2, [r3]
   168ac:	b	168bc <sprintf@plt+0x5220>
   168b0:	ldr	r3, [fp, #-16]
   168b4:	add	r3, r3, #1
   168b8:	str	r3, [fp, #-16]
   168bc:	bl	1157c <__ctype_b_loc@plt>
   168c0:	mov	r3, r0
   168c4:	ldr	r2, [r3]
   168c8:	ldr	r3, [fp, #-16]
   168cc:	ldrb	r3, [r3]
   168d0:	lsl	r3, r3, #1
   168d4:	add	r3, r2, r3
   168d8:	ldrh	r3, [r3]
   168dc:	and	r3, r3, #8192	; 0x2000
   168e0:	cmp	r3, #0
   168e4:	bne	168b0 <sprintf@plt+0x5214>
   168e8:	ldr	r3, [fp, #-16]
   168ec:	str	r3, [fp, #-28]	; 0xffffffe4
   168f0:	ldr	r3, [pc, #224]	; 169d8 <sprintf@plt+0x533c>
   168f4:	add	r3, pc, r3
   168f8:	mov	r1, r3
   168fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16900:	bl	1166c <strpbrk@plt>
   16904:	str	r0, [fp, #-16]
   16908:	ldr	r3, [fp, #-16]
   1690c:	cmp	r3, #0
   16910:	beq	16920 <sprintf@plt+0x5284>
   16914:	ldr	r3, [fp, #-16]
   16918:	mov	r2, #0
   1691c:	strb	r2, [r3]
   16920:	ldr	r3, [pc, #180]	; 169dc <sprintf@plt+0x5340>
   16924:	add	r3, pc, r3
   16928:	mov	r1, r3
   1692c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16930:	bl	11468 <rb_strcasecmp@plt>
   16934:	mov	r3, r0
   16938:	cmp	r3, #0
   1693c:	bne	1695c <sprintf@plt+0x52c0>
   16940:	mov	r2, #256	; 0x100
   16944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16948:	ldr	r3, [pc, #144]	; 169e0 <sprintf@plt+0x5344>
   1694c:	ldr	r3, [r4, r3]
   16950:	mov	r0, r3
   16954:	bl	11420 <rb_strlcpy@plt>
   16958:	b	16984 <sprintf@plt+0x52e8>
   1695c:	ldr	r3, [pc, #128]	; 169e4 <sprintf@plt+0x5348>
   16960:	add	r3, pc, r3
   16964:	mov	r1, r3
   16968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1696c:	bl	11468 <rb_strcasecmp@plt>
   16970:	mov	r3, r0
   16974:	cmp	r3, #0
   16978:	bne	16984 <sprintf@plt+0x52e8>
   1697c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16980:	bl	169e8 <sprintf@plt+0x534c>
   16984:	sub	r3, fp, #156	; 0x9c
   16988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1698c:	mov	r1, #128	; 0x80
   16990:	mov	r0, r3
   16994:	bl	1136c <fgets@plt>
   16998:	mov	r3, r0
   1699c:	cmp	r3, #0
   169a0:	bne	16780 <sprintf@plt+0x50e4>
   169a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   169a8:	bl	11360 <fclose@plt>
   169ac:	mov	r3, #0
   169b0:	mov	r0, r3
   169b4:	sub	sp, fp, #8
   169b8:	ldr	r4, [sp]
   169bc:	ldr	fp, [sp, #4]
   169c0:	add	sp, sp, #8
   169c4:	pop	{pc}		; (ldr pc, [sp], #4)
   169c8:			; <UNDEFINED> instruction: 0x0001a8b0
   169cc:	strdeq	r8, [r0], -r4
   169d0:	andeq	r8, r0, ip, ror #31
   169d4:	ldrdeq	r8, [r0], -r4
   169d8:	andeq	r8, r0, ip, ror #28
   169dc:	andeq	r8, r0, r0, asr #28
   169e0:	andeq	r0, r0, r0, lsl #3
   169e4:	andeq	r8, r0, ip, lsl #28
   169e8:	str	r4, [sp, #-12]!
   169ec:	str	fp, [sp, #4]
   169f0:	str	lr, [sp, #8]
   169f4:	add	fp, sp, #8
   169f8:	sub	sp, sp, #52	; 0x34
   169fc:	str	r0, [fp, #-56]	; 0xffffffc8
   16a00:	ldr	r4, [pc, #312]	; 16b40 <sprintf@plt+0x54a4>
   16a04:	add	r4, pc, r4
   16a08:	ldr	r3, [pc, #308]	; 16b44 <sprintf@plt+0x54a8>
   16a0c:	ldr	r3, [r4, r3]
   16a10:	ldr	r3, [r3]
   16a14:	cmp	r3, #9
   16a18:	bgt	16b18 <sprintf@plt+0x547c>
   16a1c:	sub	r3, fp, #44	; 0x2c
   16a20:	mov	r2, #32
   16a24:	mov	r1, #0
   16a28:	mov	r0, r3
   16a2c:	bl	113e4 <memset@plt>
   16a30:	mov	r3, #0
   16a34:	str	r3, [fp, #-40]	; 0xffffffd8
   16a38:	mov	r3, #2
   16a3c:	str	r3, [fp, #-36]	; 0xffffffdc
   16a40:	mov	r3, #5
   16a44:	str	r3, [fp, #-44]	; 0xffffffd4
   16a48:	sub	r3, fp, #48	; 0x30
   16a4c:	sub	r2, fp, #44	; 0x2c
   16a50:	ldr	r1, [pc, #240]	; 16b48 <sprintf@plt+0x54ac>
   16a54:	add	r1, pc, r1
   16a58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16a5c:	bl	11474 <getaddrinfo@plt>
   16a60:	mov	r3, r0
   16a64:	cmp	r3, #0
   16a68:	bne	16b20 <sprintf@plt+0x5484>
   16a6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a70:	cmp	r3, #0
   16a74:	beq	16b28 <sprintf@plt+0x548c>
   16a78:	ldr	r3, [pc, #196]	; 16b44 <sprintf@plt+0x54a8>
   16a7c:	ldr	r3, [r4, r3]
   16a80:	ldr	r3, [r3]
   16a84:	lsl	r3, r3, #7
   16a88:	ldr	r2, [pc, #188]	; 16b4c <sprintf@plt+0x54b0>
   16a8c:	ldr	r2, [r4, r2]
   16a90:	add	r0, r3, r2
   16a94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a98:	ldr	r1, [r3, #20]
   16a9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16aa0:	ldr	r3, [r3, #16]
   16aa4:	mov	r2, r3
   16aa8:	bl	114c8 <memcpy@plt>
   16aac:	ldr	r3, [pc, #144]	; 16b44 <sprintf@plt+0x54a8>
   16ab0:	ldr	r3, [r4, r3]
   16ab4:	ldr	r3, [r3]
   16ab8:	lsl	r3, r3, #7
   16abc:	ldr	r2, [pc, #136]	; 16b4c <sprintf@plt+0x54b0>
   16ac0:	ldr	r2, [r4, r2]
   16ac4:	add	r2, r3, r2
   16ac8:	ldr	r3, [pc, #116]	; 16b44 <sprintf@plt+0x54a8>
   16acc:	ldr	r3, [r4, r3]
   16ad0:	ldr	r3, [r3]
   16ad4:	lsl	r3, r3, #7
   16ad8:	ldr	r1, [pc, #108]	; 16b4c <sprintf@plt+0x54b0>
   16adc:	ldr	r1, [r4, r1]
   16ae0:	add	r3, r3, r1
   16ae4:	ldrh	r2, [r2]
   16ae8:	strh	r2, [r3]
   16aec:	ldr	r3, [pc, #80]	; 16b44 <sprintf@plt+0x54a8>
   16af0:	ldr	r3, [r4, r3]
   16af4:	ldr	r3, [r3]
   16af8:	add	r2, r3, #1
   16afc:	ldr	r3, [pc, #64]	; 16b44 <sprintf@plt+0x54a8>
   16b00:	ldr	r3, [r4, r3]
   16b04:	str	r2, [r3]
   16b08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b0c:	mov	r0, r3
   16b10:	bl	113f0 <freeaddrinfo@plt>
   16b14:	b	16b2c <sprintf@plt+0x5490>
   16b18:	nop	{0}
   16b1c:	b	16b2c <sprintf@plt+0x5490>
   16b20:	nop	{0}
   16b24:	b	16b2c <sprintf@plt+0x5490>
   16b28:	nop	{0}
   16b2c:	sub	sp, fp, #8
   16b30:	ldr	r4, [sp]
   16b34:	ldr	fp, [sp, #4]
   16b38:	add	sp, sp, #8
   16b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b40:	strdeq	sl, [r1], -r4
   16b44:	andeq	r0, r0, ip, ror r1
   16b48:	andeq	r8, r0, r0, lsl sp
   16b4c:	andeq	r0, r0, r8, lsl #3
   16b50:	str	fp, [sp, #-8]!
   16b54:	str	lr, [sp, #4]
   16b58:	add	fp, sp, #4
   16b5c:	sub	sp, sp, #32
   16b60:	str	r0, [fp, #-16]
   16b64:	str	r1, [fp, #-20]	; 0xffffffec
   16b68:	str	r2, [fp, #-24]	; 0xffffffe8
   16b6c:	str	r3, [fp, #-28]	; 0xffffffe4
   16b70:	ldr	r3, [fp, #4]
   16b74:	str	r3, [sp]
   16b78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b84:	ldr	r0, [fp, #-16]
   16b88:	bl	16bd0 <sprintf@plt+0x5534>
   16b8c:	str	r0, [fp, #-8]
   16b90:	ldr	r3, [fp, #-8]
   16b94:	cmp	r3, #0
   16b98:	ble	16bb8 <sprintf@plt+0x551c>
   16b9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ba0:	ldrb	r3, [r3]
   16ba4:	cmp	r3, #46	; 0x2e
   16ba8:	bne	16bb8 <sprintf@plt+0x551c>
   16bac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bb0:	mov	r2, #0
   16bb4:	strb	r2, [r3]
   16bb8:	ldr	r3, [fp, #-8]
   16bbc:	mov	r0, r3
   16bc0:	sub	sp, fp, #4
   16bc4:	ldr	fp, [sp]
   16bc8:	add	sp, sp, #4
   16bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16bd0:	str	fp, [sp, #-8]!
   16bd4:	str	lr, [sp, #4]
   16bd8:	add	fp, sp, #4
   16bdc:	sub	sp, sp, #288	; 0x120
   16be0:	str	r0, [fp, #-272]	; 0xfffffef0
   16be4:	str	r1, [fp, #-276]	; 0xfffffeec
   16be8:	str	r2, [fp, #-280]	; 0xfffffee8
   16bec:	str	r3, [fp, #-284]	; 0xfffffee4
   16bf0:	sub	r2, fp, #264	; 0x108
   16bf4:	mov	r3, #255	; 0xff
   16bf8:	str	r3, [sp]
   16bfc:	mov	r3, r2
   16c00:	ldr	r2, [fp, #-280]	; 0xfffffee8
   16c04:	ldr	r1, [fp, #-276]	; 0xfffffeec
   16c08:	ldr	r0, [fp, #-272]	; 0xfffffef0
   16c0c:	bl	16c68 <sprintf@plt+0x55cc>
   16c10:	str	r0, [fp, #-8]
   16c14:	ldr	r3, [fp, #-8]
   16c18:	cmn	r3, #1
   16c1c:	bne	16c28 <sprintf@plt+0x558c>
   16c20:	mvn	r3, #0
   16c24:	b	16c54 <sprintf@plt+0x55b8>
   16c28:	sub	r3, fp, #264	; 0x108
   16c2c:	ldr	r2, [fp, #4]
   16c30:	ldr	r1, [fp, #-284]	; 0xfffffee4
   16c34:	mov	r0, r3
   16c38:	bl	16f54 <sprintf@plt+0x58b8>
   16c3c:	mov	r3, r0
   16c40:	cmn	r3, #1
   16c44:	bne	16c50 <sprintf@plt+0x55b4>
   16c48:	mvn	r3, #0
   16c4c:	b	16c54 <sprintf@plt+0x55b8>
   16c50:	ldr	r3, [fp, #-8]
   16c54:	mov	r0, r3
   16c58:	sub	sp, fp, #4
   16c5c:	ldr	fp, [sp]
   16c60:	add	sp, sp, #4
   16c64:	pop	{pc}		; (ldr pc, [sp], #4)
   16c68:	str	fp, [sp, #-8]!
   16c6c:	str	lr, [sp, #4]
   16c70:	add	fp, sp, #4
   16c74:	sub	sp, sp, #48	; 0x30
   16c78:	str	r0, [fp, #-40]	; 0xffffffd8
   16c7c:	str	r1, [fp, #-44]	; 0xffffffd4
   16c80:	str	r2, [fp, #-48]	; 0xffffffd0
   16c84:	str	r3, [fp, #-52]	; 0xffffffcc
   16c88:	mvn	r3, #0
   16c8c:	str	r3, [fp, #-16]
   16c90:	mov	r3, #0
   16c94:	str	r3, [fp, #-20]	; 0xffffffec
   16c98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c9c:	str	r3, [fp, #-12]
   16ca0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ca4:	str	r3, [fp, #-8]
   16ca8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16cac:	ldr	r3, [fp, #4]
   16cb0:	add	r3, r2, r3
   16cb4:	str	r3, [fp, #-24]	; 0xffffffe8
   16cb8:	ldr	r2, [fp, #-8]
   16cbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16cc0:	cmp	r2, r3
   16cc4:	bcc	16cd8 <sprintf@plt+0x563c>
   16cc8:	ldr	r2, [fp, #-8]
   16ccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cd0:	cmp	r2, r3
   16cd4:	bcc	16ef4 <sprintf@plt+0x5858>
   16cd8:	bl	11690 <__errno_location@plt>
   16cdc:	mov	r2, r0
   16ce0:	mov	r3, #90	; 0x5a
   16ce4:	str	r3, [r2]
   16ce8:	mvn	r3, #0
   16cec:	b	16f40 <sprintf@plt+0x58a4>
   16cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cf4:	and	r3, r3, #192	; 0xc0
   16cf8:	cmp	r3, #64	; 0x40
   16cfc:	beq	16d10 <sprintf@plt+0x5674>
   16d00:	cmp	r3, #192	; 0xc0
   16d04:	beq	16df8 <sprintf@plt+0x575c>
   16d08:	cmp	r3, #0
   16d0c:	bne	16edc <sprintf@plt+0x5840>
   16d10:	ldr	r3, [fp, #-8]
   16d14:	sub	r3, r3, #1
   16d18:	mov	r0, r3
   16d1c:	bl	178f8 <sprintf@plt+0x625c>
   16d20:	str	r0, [fp, #-32]	; 0xffffffe0
   16d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d28:	cmp	r3, #0
   16d2c:	bge	16d48 <sprintf@plt+0x56ac>
   16d30:	bl	11690 <__errno_location@plt>
   16d34:	mov	r2, r0
   16d38:	mov	r3, #90	; 0x5a
   16d3c:	str	r3, [r2]
   16d40:	mvn	r3, #0
   16d44:	b	16f40 <sprintf@plt+0x58a4>
   16d48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d4c:	add	r3, r3, #1
   16d50:	ldr	r2, [fp, #-12]
   16d54:	add	r3, r2, r3
   16d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16d5c:	cmp	r2, r3
   16d60:	bls	16d7c <sprintf@plt+0x56e0>
   16d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d68:	ldr	r2, [fp, #-8]
   16d6c:	add	r3, r2, r3
   16d70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16d74:	cmp	r2, r3
   16d78:	bhi	16d94 <sprintf@plt+0x56f8>
   16d7c:	bl	11690 <__errno_location@plt>
   16d80:	mov	r2, r0
   16d84:	mov	r3, #90	; 0x5a
   16d88:	str	r3, [r2]
   16d8c:	mvn	r3, #0
   16d90:	b	16f40 <sprintf@plt+0x58a4>
   16d94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d98:	add	r3, r3, #1
   16d9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16da0:	add	r3, r2, r3
   16da4:	str	r3, [fp, #-20]	; 0xffffffec
   16da8:	ldr	r3, [fp, #-12]
   16dac:	add	r2, r3, #1
   16db0:	str	r2, [fp, #-12]
   16db4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16db8:	uxtb	r2, r2
   16dbc:	strb	r2, [r3]
   16dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16dc4:	mov	r2, r3
   16dc8:	ldr	r1, [fp, #-8]
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	bl	114c8 <memcpy@plt>
   16dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16dd8:	ldr	r2, [fp, #-12]
   16ddc:	add	r3, r2, r3
   16de0:	str	r3, [fp, #-12]
   16de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16de8:	ldr	r2, [fp, #-8]
   16dec:	add	r3, r2, r3
   16df0:	str	r3, [fp, #-8]
   16df4:	b	16ef4 <sprintf@plt+0x5858>
   16df8:	ldr	r2, [fp, #-8]
   16dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16e00:	cmp	r2, r3
   16e04:	bcc	16e20 <sprintf@plt+0x5784>
   16e08:	bl	11690 <__errno_location@plt>
   16e0c:	mov	r2, r0
   16e10:	mov	r3, #90	; 0x5a
   16e14:	str	r3, [r2]
   16e18:	mvn	r3, #0
   16e1c:	b	16f40 <sprintf@plt+0x58a4>
   16e20:	ldr	r3, [fp, #-16]
   16e24:	cmp	r3, #0
   16e28:	bge	16e40 <sprintf@plt+0x57a4>
   16e2c:	ldr	r2, [fp, #-8]
   16e30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e34:	sub	r3, r2, r3
   16e38:	add	r3, r3, #1
   16e3c:	str	r3, [fp, #-16]
   16e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e44:	lsl	r3, r3, #8
   16e48:	and	r3, r3, #16128	; 0x3f00
   16e4c:	ldr	r2, [fp, #-8]
   16e50:	ldrb	r2, [r2]
   16e54:	orr	r3, r3, r2
   16e58:	mov	r2, r3
   16e5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16e60:	add	r3, r3, r2
   16e64:	str	r3, [fp, #-8]
   16e68:	ldr	r2, [fp, #-8]
   16e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16e70:	cmp	r2, r3
   16e74:	bcc	16e88 <sprintf@plt+0x57ec>
   16e78:	ldr	r2, [fp, #-8]
   16e7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16e80:	cmp	r2, r3
   16e84:	bcc	16ea0 <sprintf@plt+0x5804>
   16e88:	bl	11690 <__errno_location@plt>
   16e8c:	mov	r2, r0
   16e90:	mov	r3, #90	; 0x5a
   16e94:	str	r3, [r2]
   16e98:	mvn	r3, #0
   16e9c:	b	16f40 <sprintf@plt+0x58a4>
   16ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ea4:	add	r3, r3, #2
   16ea8:	str	r3, [fp, #-20]	; 0xffffffec
   16eac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16eb4:	sub	r3, r2, r3
   16eb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ebc:	cmp	r2, r3
   16ec0:	blt	16ef4 <sprintf@plt+0x5858>
   16ec4:	bl	11690 <__errno_location@plt>
   16ec8:	mov	r2, r0
   16ecc:	mov	r3, #90	; 0x5a
   16ed0:	str	r3, [r2]
   16ed4:	mvn	r3, #0
   16ed8:	b	16f40 <sprintf@plt+0x58a4>
   16edc:	bl	11690 <__errno_location@plt>
   16ee0:	mov	r2, r0
   16ee4:	mov	r3, #90	; 0x5a
   16ee8:	str	r3, [r2]
   16eec:	mvn	r3, #0
   16ef0:	b	16f40 <sprintf@plt+0x58a4>
   16ef4:	ldr	r3, [fp, #-8]
   16ef8:	add	r2, r3, #1
   16efc:	str	r2, [fp, #-8]
   16f00:	ldrb	r3, [r3]
   16f04:	str	r3, [fp, #-28]	; 0xffffffe4
   16f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f0c:	cmp	r3, #0
   16f10:	bne	16cf0 <sprintf@plt+0x5654>
   16f14:	ldr	r3, [fp, #-12]
   16f18:	mov	r2, #0
   16f1c:	strb	r2, [r3]
   16f20:	ldr	r3, [fp, #-16]
   16f24:	cmp	r3, #0
   16f28:	bge	16f3c <sprintf@plt+0x58a0>
   16f2c:	ldr	r2, [fp, #-8]
   16f30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f34:	sub	r3, r2, r3
   16f38:	str	r3, [fp, #-16]
   16f3c:	ldr	r3, [fp, #-16]
   16f40:	mov	r0, r3
   16f44:	sub	sp, fp, #4
   16f48:	ldr	fp, [sp]
   16f4c:	add	sp, sp, #4
   16f50:	pop	{pc}		; (ldr pc, [sp], #4)
   16f54:	str	fp, [sp, #-8]!
   16f58:	str	lr, [sp, #4]
   16f5c:	add	fp, sp, #4
   16f60:	sub	sp, sp, #48	; 0x30
   16f64:	str	r0, [fp, #-40]	; 0xffffffd8
   16f68:	str	r1, [fp, #-44]	; 0xffffffd4
   16f6c:	str	r2, [fp, #-48]	; 0xffffffd0
   16f70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16f74:	str	r3, [fp, #-32]	; 0xffffffe0
   16f78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f7c:	str	r3, [fp, #-8]
   16f80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16f84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f88:	add	r3, r2, r3
   16f8c:	str	r3, [fp, #-16]
   16f90:	b	17304 <sprintf@plt+0x5c68>
   16f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f98:	and	r3, r3, #192	; 0xc0
   16f9c:	cmp	r3, #192	; 0xc0
   16fa0:	bne	16fbc <sprintf@plt+0x5920>
   16fa4:	bl	11690 <__errno_location@plt>
   16fa8:	mov	r2, r0
   16fac:	mov	r3, #90	; 0x5a
   16fb0:	str	r3, [r2]
   16fb4:	mvn	r3, #0
   16fb8:	b	173b8 <sprintf@plt+0x5d1c>
   16fbc:	ldr	r2, [fp, #-8]
   16fc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16fc4:	cmp	r2, r3
   16fc8:	beq	17008 <sprintf@plt+0x596c>
   16fcc:	ldr	r2, [fp, #-8]
   16fd0:	ldr	r3, [fp, #-16]
   16fd4:	cmp	r2, r3
   16fd8:	bcc	16ff4 <sprintf@plt+0x5958>
   16fdc:	bl	11690 <__errno_location@plt>
   16fe0:	mov	r2, r0
   16fe4:	mov	r3, #90	; 0x5a
   16fe8:	str	r3, [r2]
   16fec:	mvn	r3, #0
   16ff0:	b	173b8 <sprintf@plt+0x5d1c>
   16ff4:	ldr	r3, [fp, #-8]
   16ff8:	add	r2, r3, #1
   16ffc:	str	r2, [fp, #-8]
   17000:	mov	r2, #46	; 0x2e
   17004:	strb	r2, [r3]
   17008:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1700c:	sub	r3, r3, #1
   17010:	mov	r0, r3
   17014:	bl	178f8 <sprintf@plt+0x625c>
   17018:	str	r0, [fp, #-12]
   1701c:	ldr	r3, [fp, #-12]
   17020:	cmp	r3, #0
   17024:	bge	17040 <sprintf@plt+0x59a4>
   17028:	bl	11690 <__errno_location@plt>
   1702c:	mov	r2, r0
   17030:	mov	r3, #90	; 0x5a
   17034:	str	r3, [r2]
   17038:	mvn	r3, #0
   1703c:	b	173b8 <sprintf@plt+0x5d1c>
   17040:	ldr	r3, [fp, #-12]
   17044:	ldr	r2, [fp, #-8]
   17048:	add	r3, r2, r3
   1704c:	ldr	r2, [fp, #-16]
   17050:	cmp	r2, r3
   17054:	bhi	17070 <sprintf@plt+0x59d4>
   17058:	bl	11690 <__errno_location@plt>
   1705c:	mov	r2, r0
   17060:	mov	r3, #90	; 0x5a
   17064:	str	r3, [r2]
   17068:	mvn	r3, #0
   1706c:	b	173b8 <sprintf@plt+0x5d1c>
   17070:	ldr	r3, [fp, #-20]	; 0xffffffec
   17074:	and	r3, r3, #192	; 0xc0
   17078:	cmp	r3, #64	; 0x40
   1707c:	bne	172f8 <sprintf@plt+0x5c5c>
   17080:	ldr	r3, [fp, #-20]	; 0xffffffec
   17084:	cmp	r3, #65	; 0x41
   17088:	beq	170a4 <sprintf@plt+0x5a08>
   1708c:	bl	11690 <__errno_location@plt>
   17090:	mov	r2, r0
   17094:	mov	r3, #22
   17098:	str	r3, [r2]
   1709c:	mvn	r3, #0
   170a0:	b	173b8 <sprintf@plt+0x5d1c>
   170a4:	sub	r3, fp, #32
   170a8:	ldr	r2, [fp, #-16]
   170ac:	ldr	r1, [fp, #-8]
   170b0:	mov	r0, r3
   170b4:	bl	179f0 <sprintf@plt+0x6354>
   170b8:	str	r0, [fp, #-24]	; 0xffffffe8
   170bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170c0:	cmp	r3, #0
   170c4:	bge	170e0 <sprintf@plt+0x5a44>
   170c8:	bl	11690 <__errno_location@plt>
   170cc:	mov	r2, r0
   170d0:	mov	r3, #90	; 0x5a
   170d4:	str	r3, [r2]
   170d8:	mvn	r3, #0
   170dc:	b	173b8 <sprintf@plt+0x5d1c>
   170e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170e4:	ldr	r2, [fp, #-8]
   170e8:	add	r3, r2, r3
   170ec:	str	r3, [fp, #-8]
   170f0:	b	17304 <sprintf@plt+0x5c68>
   170f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   170f8:	add	r2, r3, #1
   170fc:	str	r2, [fp, #-32]	; 0xffffffe0
   17100:	ldrb	r3, [r3]
   17104:	strb	r3, [fp, #-25]	; 0xffffffe7
   17108:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1710c:	mov	r0, r3
   17110:	bl	177cc <sprintf@plt+0x6130>
   17114:	mov	r3, r0
   17118:	cmp	r3, #0
   1711c:	beq	17178 <sprintf@plt+0x5adc>
   17120:	ldr	r3, [fp, #-8]
   17124:	add	r3, r3, #1
   17128:	ldr	r2, [fp, #-16]
   1712c:	cmp	r2, r3
   17130:	bhi	1714c <sprintf@plt+0x5ab0>
   17134:	bl	11690 <__errno_location@plt>
   17138:	mov	r2, r0
   1713c:	mov	r3, #90	; 0x5a
   17140:	str	r3, [r2]
   17144:	mvn	r3, #0
   17148:	b	173b8 <sprintf@plt+0x5d1c>
   1714c:	ldr	r3, [fp, #-8]
   17150:	add	r2, r3, #1
   17154:	str	r2, [fp, #-8]
   17158:	mov	r2, #92	; 0x5c
   1715c:	strb	r2, [r3]
   17160:	ldr	r3, [fp, #-8]
   17164:	add	r2, r3, #1
   17168:	str	r2, [fp, #-8]
   1716c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   17170:	strb	r2, [r3]
   17174:	b	172ec <sprintf@plt+0x5c50>
   17178:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1717c:	mov	r0, r3
   17180:	bl	179ac <sprintf@plt+0x6310>
   17184:	mov	r3, r0
   17188:	cmp	r3, #0
   1718c:	bne	172b0 <sprintf@plt+0x5c14>
   17190:	ldr	r3, [fp, #-8]
   17194:	add	r3, r3, #3
   17198:	ldr	r2, [fp, #-16]
   1719c:	cmp	r2, r3
   171a0:	bhi	171bc <sprintf@plt+0x5b20>
   171a4:	bl	11690 <__errno_location@plt>
   171a8:	mov	r2, r0
   171ac:	mov	r3, #90	; 0x5a
   171b0:	str	r3, [r2]
   171b4:	mvn	r3, #0
   171b8:	b	173b8 <sprintf@plt+0x5d1c>
   171bc:	ldr	r3, [fp, #-8]
   171c0:	add	r2, r3, #1
   171c4:	str	r2, [fp, #-8]
   171c8:	mov	r2, #92	; 0x5c
   171cc:	strb	r2, [r3]
   171d0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   171d4:	movw	r3, #34079	; 0x851f
   171d8:	movt	r3, #20971	; 0x51eb
   171dc:	umull	r2, r3, r3, r2
   171e0:	lsr	r3, r3, #5
   171e4:	uxtb	r3, r3
   171e8:	mov	r1, r3
   171ec:	ldr	r3, [fp, #-8]
   171f0:	add	r2, r3, #1
   171f4:	str	r2, [fp, #-8]
   171f8:	ldr	r2, [pc, #460]	; 173cc <sprintf@plt+0x5d30>
   171fc:	add	r2, pc, r2
   17200:	ldrb	r2, [r2, r1]
   17204:	strb	r2, [r3]
   17208:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   1720c:	movw	r3, #34079	; 0x851f
   17210:	movt	r3, #20971	; 0x51eb
   17214:	umull	r1, r3, r3, r2
   17218:	lsr	r3, r3, #5
   1721c:	mov	r1, #100	; 0x64
   17220:	mul	r3, r1, r3
   17224:	sub	r3, r2, r3
   17228:	uxtb	r2, r3
   1722c:	movw	r3, #52429	; 0xcccd
   17230:	movt	r3, #52428	; 0xcccc
   17234:	umull	r2, r3, r3, r2
   17238:	lsr	r3, r3, #3
   1723c:	uxtb	r3, r3
   17240:	mov	r1, r3
   17244:	ldr	r3, [fp, #-8]
   17248:	add	r2, r3, #1
   1724c:	str	r2, [fp, #-8]
   17250:	ldr	r2, [pc, #376]	; 173d0 <sprintf@plt+0x5d34>
   17254:	add	r2, pc, r2
   17258:	ldrb	r2, [r2, r1]
   1725c:	strb	r2, [r3]
   17260:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   17264:	movw	r3, #52429	; 0xcccd
   17268:	movt	r3, #52428	; 0xcccc
   1726c:	umull	r1, r3, r3, r2
   17270:	lsr	r1, r3, #3
   17274:	mov	r3, r1
   17278:	lsl	r3, r3, #2
   1727c:	add	r3, r3, r1
   17280:	lsl	r3, r3, #1
   17284:	sub	r3, r2, r3
   17288:	uxtb	r3, r3
   1728c:	mov	r1, r3
   17290:	ldr	r3, [fp, #-8]
   17294:	add	r2, r3, #1
   17298:	str	r2, [fp, #-8]
   1729c:	ldr	r2, [pc, #304]	; 173d4 <sprintf@plt+0x5d38>
   172a0:	add	r2, pc, r2
   172a4:	ldrb	r2, [r2, r1]
   172a8:	strb	r2, [r3]
   172ac:	b	172ec <sprintf@plt+0x5c50>
   172b0:	ldr	r2, [fp, #-8]
   172b4:	ldr	r3, [fp, #-16]
   172b8:	cmp	r2, r3
   172bc:	bcc	172d8 <sprintf@plt+0x5c3c>
   172c0:	bl	11690 <__errno_location@plt>
   172c4:	mov	r2, r0
   172c8:	mov	r3, #90	; 0x5a
   172cc:	str	r3, [r2]
   172d0:	mvn	r3, #0
   172d4:	b	173b8 <sprintf@plt+0x5d1c>
   172d8:	ldr	r3, [fp, #-8]
   172dc:	add	r2, r3, #1
   172e0:	str	r2, [fp, #-8]
   172e4:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   172e8:	strb	r2, [r3]
   172ec:	ldr	r3, [fp, #-12]
   172f0:	sub	r3, r3, #1
   172f4:	str	r3, [fp, #-12]
   172f8:	ldr	r3, [fp, #-12]
   172fc:	cmp	r3, #0
   17300:	bgt	170f4 <sprintf@plt+0x5a58>
   17304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17308:	add	r2, r3, #1
   1730c:	str	r2, [fp, #-32]	; 0xffffffe0
   17310:	ldrb	r3, [r3]
   17314:	str	r3, [fp, #-20]	; 0xffffffec
   17318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1731c:	cmp	r3, #0
   17320:	bne	16f94 <sprintf@plt+0x58f8>
   17324:	ldr	r2, [fp, #-8]
   17328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1732c:	cmp	r2, r3
   17330:	bne	17370 <sprintf@plt+0x5cd4>
   17334:	ldr	r2, [fp, #-8]
   17338:	ldr	r3, [fp, #-16]
   1733c:	cmp	r2, r3
   17340:	bcc	1735c <sprintf@plt+0x5cc0>
   17344:	bl	11690 <__errno_location@plt>
   17348:	mov	r2, r0
   1734c:	mov	r3, #90	; 0x5a
   17350:	str	r3, [r2]
   17354:	mvn	r3, #0
   17358:	b	173b8 <sprintf@plt+0x5d1c>
   1735c:	ldr	r3, [fp, #-8]
   17360:	add	r2, r3, #1
   17364:	str	r2, [fp, #-8]
   17368:	mov	r2, #46	; 0x2e
   1736c:	strb	r2, [r3]
   17370:	ldr	r2, [fp, #-8]
   17374:	ldr	r3, [fp, #-16]
   17378:	cmp	r2, r3
   1737c:	bcc	17398 <sprintf@plt+0x5cfc>
   17380:	bl	11690 <__errno_location@plt>
   17384:	mov	r2, r0
   17388:	mov	r3, #90	; 0x5a
   1738c:	str	r3, [r2]
   17390:	mvn	r3, #0
   17394:	b	173b8 <sprintf@plt+0x5d1c>
   17398:	ldr	r3, [fp, #-8]
   1739c:	add	r2, r3, #1
   173a0:	str	r2, [fp, #-8]
   173a4:	mov	r2, #0
   173a8:	strb	r2, [r3]
   173ac:	ldr	r2, [fp, #-8]
   173b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   173b4:	sub	r3, r2, r3
   173b8:	mov	r0, r3
   173bc:	sub	sp, fp, #4
   173c0:	ldr	fp, [sp]
   173c4:	add	sp, sp, #4
   173c8:	pop	{pc}		; (ldr pc, [sp], #4)
   173cc:	andeq	r8, r0, r0, lsr r5
   173d0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   173d4:	andeq	r8, r0, ip, lsl #9
   173d8:	str	fp, [sp, #-8]!
   173dc:	str	lr, [sp, #4]
   173e0:	add	fp, sp, #4
   173e4:	sub	sp, sp, #24
   173e8:	str	r0, [fp, #-8]
   173ec:	str	r1, [fp, #-12]
   173f0:	str	r2, [fp, #-16]
   173f4:	str	r3, [fp, #-20]	; 0xffffffec
   173f8:	ldr	r2, [fp, #-16]
   173fc:	ldr	r3, [fp, #4]
   17400:	str	r3, [sp]
   17404:	ldr	r3, [fp, #-20]	; 0xffffffec
   17408:	ldr	r1, [fp, #-12]
   1740c:	ldr	r0, [fp, #-8]
   17410:	bl	18600 <sprintf@plt+0x6f64>
   17414:	mov	r3, r0
   17418:	mov	r0, r3
   1741c:	sub	sp, fp, #4
   17420:	ldr	fp, [sp]
   17424:	add	sp, sp, #4
   17428:	pop	{pc}		; (ldr pc, [sp], #4)
   1742c:	str	fp, [sp, #-8]!
   17430:	str	lr, [sp, #4]
   17434:	add	fp, sp, #4
   17438:	sub	sp, sp, #16
   1743c:	str	r0, [fp, #-16]
   17440:	str	r1, [fp, #-20]	; 0xffffffec
   17444:	ldr	r3, [fp, #-16]
   17448:	str	r3, [fp, #-8]
   1744c:	sub	r3, fp, #16
   17450:	ldr	r1, [fp, #-20]	; 0xffffffec
   17454:	mov	r0, r3
   17458:	bl	17490 <sprintf@plt+0x5df4>
   1745c:	mov	r3, r0
   17460:	cmn	r3, #1
   17464:	bne	17470 <sprintf@plt+0x5dd4>
   17468:	mvn	r3, #0
   1746c:	b	1747c <sprintf@plt+0x5de0>
   17470:	ldr	r2, [fp, #-16]
   17474:	ldr	r3, [fp, #-8]
   17478:	sub	r3, r2, r3
   1747c:	mov	r0, r3
   17480:	sub	sp, fp, #4
   17484:	ldr	fp, [sp]
   17488:	add	sp, sp, #4
   1748c:	pop	{pc}		; (ldr pc, [sp], #4)
   17490:	str	fp, [sp, #-8]!
   17494:	str	lr, [sp, #4]
   17498:	add	fp, sp, #4
   1749c:	sub	sp, sp, #24
   174a0:	str	r0, [fp, #-24]	; 0xffffffe8
   174a4:	str	r1, [fp, #-28]	; 0xffffffe4
   174a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r3, [r3]
   174b0:	str	r3, [fp, #-8]
   174b4:	b	17564 <sprintf@plt+0x5ec8>
   174b8:	ldr	r3, [fp, #-12]
   174bc:	and	r3, r3, #192	; 0xc0
   174c0:	cmp	r3, #64	; 0x40
   174c4:	beq	174ec <sprintf@plt+0x5e50>
   174c8:	cmp	r3, #192	; 0xc0
   174cc:	beq	17538 <sprintf@plt+0x5e9c>
   174d0:	cmp	r3, #0
   174d4:	bne	1754c <sprintf@plt+0x5eb0>
   174d8:	ldr	r2, [fp, #-8]
   174dc:	ldr	r3, [fp, #-12]
   174e0:	add	r3, r2, r3
   174e4:	str	r3, [fp, #-8]
   174e8:	b	17564 <sprintf@plt+0x5ec8>
   174ec:	ldr	r3, [fp, #-8]
   174f0:	sub	r3, r3, #1
   174f4:	mov	r0, r3
   174f8:	bl	178f8 <sprintf@plt+0x625c>
   174fc:	str	r0, [fp, #-16]
   17500:	ldr	r3, [fp, #-16]
   17504:	cmp	r3, #0
   17508:	bge	17524 <sprintf@plt+0x5e88>
   1750c:	bl	11690 <__errno_location@plt>
   17510:	mov	r2, r0
   17514:	mov	r3, #90	; 0x5a
   17518:	str	r3, [r2]
   1751c:	mvn	r3, #0
   17520:	b	175cc <sprintf@plt+0x5f30>
   17524:	ldr	r3, [fp, #-16]
   17528:	ldr	r2, [fp, #-8]
   1752c:	add	r3, r2, r3
   17530:	str	r3, [fp, #-8]
   17534:	b	17564 <sprintf@plt+0x5ec8>
   17538:	ldr	r3, [fp, #-8]
   1753c:	add	r3, r3, #1
   17540:	str	r3, [fp, #-8]
   17544:	nop	{0}
   17548:	b	17594 <sprintf@plt+0x5ef8>
   1754c:	bl	11690 <__errno_location@plt>
   17550:	mov	r2, r0
   17554:	mov	r3, #90	; 0x5a
   17558:	str	r3, [r2]
   1755c:	mvn	r3, #0
   17560:	b	175cc <sprintf@plt+0x5f30>
   17564:	ldr	r2, [fp, #-8]
   17568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1756c:	cmp	r2, r3
   17570:	bcs	17594 <sprintf@plt+0x5ef8>
   17574:	ldr	r3, [fp, #-8]
   17578:	add	r2, r3, #1
   1757c:	str	r2, [fp, #-8]
   17580:	ldrb	r3, [r3]
   17584:	str	r3, [fp, #-12]
   17588:	ldr	r3, [fp, #-12]
   1758c:	cmp	r3, #0
   17590:	bne	174b8 <sprintf@plt+0x5e1c>
   17594:	ldr	r2, [fp, #-8]
   17598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1759c:	cmp	r2, r3
   175a0:	bls	175bc <sprintf@plt+0x5f20>
   175a4:	bl	11690 <__errno_location@plt>
   175a8:	mov	r2, r0
   175ac:	mov	r3, #90	; 0x5a
   175b0:	str	r3, [r2]
   175b4:	mvn	r3, #0
   175b8:	b	175cc <sprintf@plt+0x5f30>
   175bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175c0:	ldr	r2, [fp, #-8]
   175c4:	str	r2, [r3]
   175c8:	mov	r3, #0
   175cc:	mov	r0, r3
   175d0:	sub	sp, fp, #4
   175d4:	ldr	fp, [sp]
   175d8:	add	sp, sp, #4
   175dc:	pop	{pc}		; (ldr pc, [sp], #4)
   175e0:	push	{fp}		; (str fp, [sp, #-4]!)
   175e4:	add	fp, sp, #0
   175e8:	sub	sp, sp, #20
   175ec:	str	r0, [fp, #-16]
   175f0:	ldr	r3, [fp, #-16]
   175f4:	str	r3, [fp, #-8]
   175f8:	ldr	r3, [fp, #-8]
   175fc:	ldrb	r3, [r3]
   17600:	lsl	r3, r3, #8
   17604:	ldr	r2, [fp, #-8]
   17608:	add	r2, r2, #1
   1760c:	ldrb	r2, [r2]
   17610:	orr	r3, r3, r2
   17614:	str	r3, [fp, #-12]
   17618:	ldr	r3, [fp, #-16]
   1761c:	add	r3, r3, #2
   17620:	str	r3, [fp, #-16]
   17624:	ldr	r3, [fp, #-12]
   17628:	mov	r0, r3
   1762c:	add	sp, fp, #0
   17630:	pop	{fp}		; (ldr fp, [sp], #4)
   17634:	bx	lr
   17638:	push	{fp}		; (str fp, [sp, #-4]!)
   1763c:	add	fp, sp, #0
   17640:	sub	sp, sp, #20
   17644:	str	r0, [fp, #-16]
   17648:	ldr	r3, [fp, #-16]
   1764c:	str	r3, [fp, #-8]
   17650:	ldr	r3, [fp, #-8]
   17654:	ldrb	r3, [r3]
   17658:	lsl	r2, r3, #24
   1765c:	ldr	r3, [fp, #-8]
   17660:	add	r3, r3, #1
   17664:	ldrb	r3, [r3]
   17668:	lsl	r3, r3, #16
   1766c:	orr	r2, r2, r3
   17670:	ldr	r3, [fp, #-8]
   17674:	add	r3, r3, #2
   17678:	ldrb	r3, [r3]
   1767c:	lsl	r3, r3, #8
   17680:	orr	r3, r2, r3
   17684:	ldr	r2, [fp, #-8]
   17688:	add	r2, r2, #3
   1768c:	ldrb	r2, [r2]
   17690:	orr	r3, r3, r2
   17694:	str	r3, [fp, #-12]
   17698:	ldr	r3, [fp, #-16]
   1769c:	add	r3, r3, #4
   176a0:	str	r3, [fp, #-16]
   176a4:	ldr	r3, [fp, #-12]
   176a8:	mov	r0, r3
   176ac:	add	sp, fp, #0
   176b0:	pop	{fp}		; (ldr fp, [sp], #4)
   176b4:	bx	lr
   176b8:	push	{fp}		; (str fp, [sp, #-4]!)
   176bc:	add	fp, sp, #0
   176c0:	sub	sp, sp, #20
   176c4:	str	r0, [fp, #-16]
   176c8:	str	r1, [fp, #-20]	; 0xffffffec
   176cc:	ldr	r3, [fp, #-16]
   176d0:	strh	r3, [fp, #-6]
   176d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   176d8:	str	r3, [fp, #-12]
   176dc:	ldrh	r3, [fp, #-6]
   176e0:	lsr	r3, r3, #8
   176e4:	uxth	r1, r3
   176e8:	ldr	r3, [fp, #-12]
   176ec:	add	r2, r3, #1
   176f0:	str	r2, [fp, #-12]
   176f4:	uxtb	r2, r1
   176f8:	strb	r2, [r3]
   176fc:	ldrh	r3, [fp, #-6]
   17700:	uxtb	r2, r3
   17704:	ldr	r3, [fp, #-12]
   17708:	strb	r2, [r3]
   1770c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17710:	add	r3, r3, #2
   17714:	str	r3, [fp, #-20]	; 0xffffffec
   17718:	nop	{0}
   1771c:	add	sp, fp, #0
   17720:	pop	{fp}		; (ldr fp, [sp], #4)
   17724:	bx	lr
   17728:	push	{fp}		; (str fp, [sp, #-4]!)
   1772c:	add	fp, sp, #0
   17730:	sub	sp, sp, #20
   17734:	str	r0, [fp, #-16]
   17738:	str	r1, [fp, #-20]	; 0xffffffec
   1773c:	ldr	r3, [fp, #-16]
   17740:	str	r3, [fp, #-8]
   17744:	ldr	r3, [fp, #-20]	; 0xffffffec
   17748:	str	r3, [fp, #-12]
   1774c:	ldr	r3, [fp, #-8]
   17750:	lsr	r1, r3, #24
   17754:	ldr	r3, [fp, #-12]
   17758:	add	r2, r3, #1
   1775c:	str	r2, [fp, #-12]
   17760:	uxtb	r2, r1
   17764:	strb	r2, [r3]
   17768:	ldr	r3, [fp, #-8]
   1776c:	lsr	r1, r3, #16
   17770:	ldr	r3, [fp, #-12]
   17774:	add	r2, r3, #1
   17778:	str	r2, [fp, #-12]
   1777c:	uxtb	r2, r1
   17780:	strb	r2, [r3]
   17784:	ldr	r3, [fp, #-8]
   17788:	lsr	r1, r3, #8
   1778c:	ldr	r3, [fp, #-12]
   17790:	add	r2, r3, #1
   17794:	str	r2, [fp, #-12]
   17798:	uxtb	r2, r1
   1779c:	strb	r2, [r3]
   177a0:	ldr	r3, [fp, #-8]
   177a4:	uxtb	r2, r3
   177a8:	ldr	r3, [fp, #-12]
   177ac:	strb	r2, [r3]
   177b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177b4:	add	r3, r3, #4
   177b8:	str	r3, [fp, #-20]	; 0xffffffec
   177bc:	nop	{0}
   177c0:	add	sp, fp, #0
   177c4:	pop	{fp}		; (ldr fp, [sp], #4)
   177c8:	bx	lr
   177cc:	push	{fp}		; (str fp, [sp, #-4]!)
   177d0:	add	fp, sp, #0
   177d4:	sub	sp, sp, #12
   177d8:	str	r0, [fp, #-8]
   177dc:	ldr	r3, [fp, #-8]
   177e0:	sub	r3, r3, #34	; 0x22
   177e4:	cmp	r3, #58	; 0x3a
   177e8:	addls	pc, pc, r3, lsl #2
   177ec:	b	178e4 <sprintf@plt+0x6248>
   177f0:	b	178dc <sprintf@plt+0x6240>
   177f4:	b	178e4 <sprintf@plt+0x6248>
   177f8:	b	178dc <sprintf@plt+0x6240>
   177fc:	b	178e4 <sprintf@plt+0x6248>
   17800:	b	178e4 <sprintf@plt+0x6248>
   17804:	b	178e4 <sprintf@plt+0x6248>
   17808:	b	178dc <sprintf@plt+0x6240>
   1780c:	b	178dc <sprintf@plt+0x6240>
   17810:	b	178e4 <sprintf@plt+0x6248>
   17814:	b	178e4 <sprintf@plt+0x6248>
   17818:	b	178e4 <sprintf@plt+0x6248>
   1781c:	b	178e4 <sprintf@plt+0x6248>
   17820:	b	178dc <sprintf@plt+0x6240>
   17824:	b	178e4 <sprintf@plt+0x6248>
   17828:	b	178e4 <sprintf@plt+0x6248>
   1782c:	b	178e4 <sprintf@plt+0x6248>
   17830:	b	178e4 <sprintf@plt+0x6248>
   17834:	b	178e4 <sprintf@plt+0x6248>
   17838:	b	178e4 <sprintf@plt+0x6248>
   1783c:	b	178e4 <sprintf@plt+0x6248>
   17840:	b	178e4 <sprintf@plt+0x6248>
   17844:	b	178e4 <sprintf@plt+0x6248>
   17848:	b	178e4 <sprintf@plt+0x6248>
   1784c:	b	178e4 <sprintf@plt+0x6248>
   17850:	b	178e4 <sprintf@plt+0x6248>
   17854:	b	178dc <sprintf@plt+0x6240>
   17858:	b	178e4 <sprintf@plt+0x6248>
   1785c:	b	178e4 <sprintf@plt+0x6248>
   17860:	b	178e4 <sprintf@plt+0x6248>
   17864:	b	178e4 <sprintf@plt+0x6248>
   17868:	b	178dc <sprintf@plt+0x6240>
   1786c:	b	178e4 <sprintf@plt+0x6248>
   17870:	b	178e4 <sprintf@plt+0x6248>
   17874:	b	178e4 <sprintf@plt+0x6248>
   17878:	b	178e4 <sprintf@plt+0x6248>
   1787c:	b	178e4 <sprintf@plt+0x6248>
   17880:	b	178e4 <sprintf@plt+0x6248>
   17884:	b	178e4 <sprintf@plt+0x6248>
   17888:	b	178e4 <sprintf@plt+0x6248>
   1788c:	b	178e4 <sprintf@plt+0x6248>
   17890:	b	178e4 <sprintf@plt+0x6248>
   17894:	b	178e4 <sprintf@plt+0x6248>
   17898:	b	178e4 <sprintf@plt+0x6248>
   1789c:	b	178e4 <sprintf@plt+0x6248>
   178a0:	b	178e4 <sprintf@plt+0x6248>
   178a4:	b	178e4 <sprintf@plt+0x6248>
   178a8:	b	178e4 <sprintf@plt+0x6248>
   178ac:	b	178e4 <sprintf@plt+0x6248>
   178b0:	b	178e4 <sprintf@plt+0x6248>
   178b4:	b	178e4 <sprintf@plt+0x6248>
   178b8:	b	178e4 <sprintf@plt+0x6248>
   178bc:	b	178e4 <sprintf@plt+0x6248>
   178c0:	b	178e4 <sprintf@plt+0x6248>
   178c4:	b	178e4 <sprintf@plt+0x6248>
   178c8:	b	178e4 <sprintf@plt+0x6248>
   178cc:	b	178e4 <sprintf@plt+0x6248>
   178d0:	b	178e4 <sprintf@plt+0x6248>
   178d4:	b	178e4 <sprintf@plt+0x6248>
   178d8:	b	178dc <sprintf@plt+0x6240>
   178dc:	mov	r3, #1
   178e0:	b	178e8 <sprintf@plt+0x624c>
   178e4:	mov	r3, #0
   178e8:	mov	r0, r3
   178ec:	add	sp, fp, #0
   178f0:	pop	{fp}		; (ldr fp, [sp], #4)
   178f4:	bx	lr
   178f8:	push	{fp}		; (str fp, [sp, #-4]!)
   178fc:	add	fp, sp, #0
   17900:	sub	sp, sp, #20
   17904:	str	r0, [fp, #-16]
   17908:	ldr	r3, [fp, #-16]
   1790c:	ldrb	r3, [r3]
   17910:	strb	r3, [fp, #-9]
   17914:	ldrb	r3, [fp, #-9]
   17918:	and	r3, r3, #192	; 0xc0
   1791c:	cmp	r3, #192	; 0xc0
   17920:	bne	1792c <sprintf@plt+0x6290>
   17924:	mvn	r3, #0
   17928:	b	1799c <sprintf@plt+0x6300>
   1792c:	ldrb	r3, [fp, #-9]
   17930:	and	r3, r3, #192	; 0xc0
   17934:	cmp	r3, #64	; 0x40
   17938:	bne	17998 <sprintf@plt+0x62fc>
   1793c:	ldrb	r3, [fp, #-9]
   17940:	cmp	r3, #65	; 0x41
   17944:	bne	17990 <sprintf@plt+0x62f4>
   17948:	ldr	r3, [fp, #-16]
   1794c:	add	r3, r3, #1
   17950:	ldrb	r3, [r3]
   17954:	str	r3, [fp, #-8]
   17958:	ldr	r3, [fp, #-8]
   1795c:	cmp	r3, #0
   17960:	bne	1796c <sprintf@plt+0x62d0>
   17964:	mov	r3, #256	; 0x100
   17968:	str	r3, [fp, #-8]
   1796c:	ldr	r3, [fp, #-8]
   17970:	add	r3, r3, #7
   17974:	add	r2, r3, #7
   17978:	cmp	r3, #0
   1797c:	movlt	r3, r2
   17980:	movge	r3, r3
   17984:	asr	r3, r3, #3
   17988:	add	r3, r3, #1
   1798c:	b	1799c <sprintf@plt+0x6300>
   17990:	mvn	r3, #0
   17994:	b	1799c <sprintf@plt+0x6300>
   17998:	ldrb	r3, [fp, #-9]
   1799c:	mov	r0, r3
   179a0:	add	sp, fp, #0
   179a4:	pop	{fp}		; (ldr fp, [sp], #4)
   179a8:	bx	lr
   179ac:	push	{fp}		; (str fp, [sp, #-4]!)
   179b0:	add	fp, sp, #0
   179b4:	sub	sp, sp, #12
   179b8:	str	r0, [fp, #-8]
   179bc:	ldr	r3, [fp, #-8]
   179c0:	cmp	r3, #32
   179c4:	ble	179dc <sprintf@plt+0x6340>
   179c8:	ldr	r3, [fp, #-8]
   179cc:	cmp	r3, #126	; 0x7e
   179d0:	bgt	179dc <sprintf@plt+0x6340>
   179d4:	mov	r3, #1
   179d8:	b	179e0 <sprintf@plt+0x6344>
   179dc:	mov	r3, #0
   179e0:	mov	r0, r3
   179e4:	add	sp, fp, #0
   179e8:	pop	{fp}		; (ldr fp, [sp], #4)
   179ec:	bx	lr
   179f0:	str	fp, [sp, #-8]!
   179f4:	str	lr, [sp, #4]
   179f8:	add	fp, sp, #4
   179fc:	sub	sp, sp, #40	; 0x28
   17a00:	str	r0, [fp, #-32]	; 0xffffffe0
   17a04:	str	r1, [fp, #-36]	; 0xffffffdc
   17a08:	str	r2, [fp, #-40]	; 0xffffffd8
   17a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a10:	ldr	r3, [r3]
   17a14:	str	r3, [fp, #-8]
   17a18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a1c:	str	r3, [fp, #-20]	; 0xffffffec
   17a20:	ldr	r3, [fp, #-8]
   17a24:	ldrb	r3, [r3]
   17a28:	str	r3, [fp, #-16]
   17a2c:	ldr	r3, [fp, #-16]
   17a30:	cmp	r3, #0
   17a34:	bne	17a40 <sprintf@plt+0x63a4>
   17a38:	mov	r3, #256	; 0x100
   17a3c:	str	r3, [fp, #-16]
   17a40:	ldr	r3, [fp, #-16]
   17a44:	add	r3, r3, #3
   17a48:	add	r2, r3, #3
   17a4c:	cmp	r3, #0
   17a50:	movlt	r3, r2
   17a54:	movge	r3, r3
   17a58:	asr	r3, r3, #2
   17a5c:	str	r3, [fp, #-24]	; 0xffffffe8
   17a60:	ldr	r3, [fp, #-16]
   17a64:	cmp	r3, #99	; 0x63
   17a68:	bgt	17a88 <sprintf@plt+0x63ec>
   17a6c:	ldr	r3, [fp, #-16]
   17a70:	cmp	r3, #9
   17a74:	ble	17a80 <sprintf@plt+0x63e4>
   17a78:	mov	r3, #8
   17a7c:	b	17a8c <sprintf@plt+0x63f0>
   17a80:	mov	r3, #7
   17a84:	b	17a8c <sprintf@plt+0x63f0>
   17a88:	mov	r3, #9
   17a8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a90:	add	r3, r3, r2
   17a94:	str	r3, [fp, #-24]	; 0xffffffe8
   17a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17aa0:	add	r3, r2, r3
   17aa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17aa8:	cmp	r2, r3
   17aac:	bhi	17ab8 <sprintf@plt+0x641c>
   17ab0:	mvn	r3, #0
   17ab4:	b	17c6c <sprintf@plt+0x65d0>
   17ab8:	ldr	r3, [fp, #-8]
   17abc:	add	r3, r3, #1
   17ac0:	str	r3, [fp, #-8]
   17ac4:	ldr	r3, [pc, #436]	; 17c80 <sprintf@plt+0x65e4>
   17ac8:	add	r3, pc, r3
   17acc:	mov	r1, r3
   17ad0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ad4:	bl	1169c <sprintf@plt>
   17ad8:	mov	r3, r0
   17adc:	mov	r2, r3
   17ae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ae4:	add	r3, r3, r2
   17ae8:	str	r3, [fp, #-36]	; 0xffffffdc
   17aec:	ldr	r3, [fp, #-16]
   17af0:	str	r3, [fp, #-12]
   17af4:	b	17b44 <sprintf@plt+0x64a8>
   17af8:	ldr	r3, [fp, #-8]
   17afc:	ldrb	r3, [r3]
   17b00:	mov	r2, r3
   17b04:	ldr	r3, [pc, #376]	; 17c84 <sprintf@plt+0x65e8>
   17b08:	add	r3, pc, r3
   17b0c:	mov	r1, r3
   17b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b14:	bl	1169c <sprintf@plt>
   17b18:	mov	r3, r0
   17b1c:	mov	r2, r3
   17b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b24:	add	r3, r3, r2
   17b28:	str	r3, [fp, #-36]	; 0xffffffdc
   17b2c:	ldr	r3, [fp, #-12]
   17b30:	sub	r3, r3, #8
   17b34:	str	r3, [fp, #-12]
   17b38:	ldr	r3, [fp, #-8]
   17b3c:	add	r3, r3, #1
   17b40:	str	r3, [fp, #-8]
   17b44:	ldr	r3, [fp, #-12]
   17b48:	cmp	r3, #7
   17b4c:	bgt	17af8 <sprintf@plt+0x645c>
   17b50:	ldr	r3, [fp, #-12]
   17b54:	cmp	r3, #4
   17b58:	ble	17bb8 <sprintf@plt+0x651c>
   17b5c:	ldr	r3, [fp, #-8]
   17b60:	add	r2, r3, #1
   17b64:	str	r2, [fp, #-8]
   17b68:	ldrb	r3, [r3]
   17b6c:	strb	r3, [fp, #-25]	; 0xffffffe7
   17b70:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   17b74:	ldr	r3, [fp, #-12]
   17b78:	rsb	r3, r3, #8
   17b7c:	mov	r1, #255	; 0xff
   17b80:	lsl	r3, r1, r3
   17b84:	and	r3, r3, r2
   17b88:	mov	r2, r3
   17b8c:	ldr	r3, [pc, #244]	; 17c88 <sprintf@plt+0x65ec>
   17b90:	add	r3, pc, r3
   17b94:	mov	r1, r3
   17b98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b9c:	bl	1169c <sprintf@plt>
   17ba0:	mov	r3, r0
   17ba4:	mov	r2, r3
   17ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bac:	add	r3, r3, r2
   17bb0:	str	r3, [fp, #-36]	; 0xffffffdc
   17bb4:	b	17c28 <sprintf@plt+0x658c>
   17bb8:	ldr	r3, [fp, #-12]
   17bbc:	cmp	r3, #0
   17bc0:	ble	17c28 <sprintf@plt+0x658c>
   17bc4:	ldr	r3, [fp, #-8]
   17bc8:	add	r2, r3, #1
   17bcc:	str	r2, [fp, #-8]
   17bd0:	ldrb	r3, [r3]
   17bd4:	strb	r3, [fp, #-25]	; 0xffffffe7
   17bd8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   17bdc:	lsr	r3, r3, #4
   17be0:	uxtb	r3, r3
   17be4:	and	r2, r3, #15
   17be8:	ldr	r3, [fp, #-12]
   17bec:	rsb	r3, r3, #4
   17bf0:	mov	r1, #15
   17bf4:	lsl	r3, r1, r3
   17bf8:	and	r3, r3, r2
   17bfc:	mov	r2, r3
   17c00:	ldr	r3, [pc, #132]	; 17c8c <sprintf@plt+0x65f0>
   17c04:	add	r3, pc, r3
   17c08:	mov	r1, r3
   17c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c10:	bl	1169c <sprintf@plt>
   17c14:	mov	r3, r0
   17c18:	mov	r2, r3
   17c1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c20:	add	r3, r3, r2
   17c24:	str	r3, [fp, #-36]	; 0xffffffdc
   17c28:	ldr	r2, [fp, #-16]
   17c2c:	ldr	r3, [pc, #92]	; 17c90 <sprintf@plt+0x65f4>
   17c30:	add	r3, pc, r3
   17c34:	mov	r1, r3
   17c38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c3c:	bl	1169c <sprintf@plt>
   17c40:	mov	r3, r0
   17c44:	mov	r2, r3
   17c48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c4c:	add	r3, r3, r2
   17c50:	str	r3, [fp, #-36]	; 0xffffffdc
   17c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c58:	ldr	r2, [fp, #-8]
   17c5c:	str	r2, [r3]
   17c60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c68:	sub	r3, r2, r3
   17c6c:	mov	r0, r3
   17c70:	sub	sp, fp, #4
   17c74:	ldr	fp, [sp]
   17c78:	add	sp, sp, #4
   17c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c80:			; <UNDEFINED> instruction: 0x00007cb0
   17c84:	andeq	r7, r0, r4, ror ip
   17c88:	andeq	r7, r0, ip, ror #23
   17c8c:	andeq	r7, r0, r0, lsl #23
   17c90:	andeq	r7, r0, r8, asr fp
   17c94:	str	fp, [sp, #-8]!
   17c98:	str	lr, [sp, #4]
   17c9c:	add	fp, sp, #4
   17ca0:	sub	sp, sp, #56	; 0x38
   17ca4:	str	r0, [fp, #-40]	; 0xffffffd8
   17ca8:	str	r1, [fp, #-44]	; 0xffffffd4
   17cac:	str	r2, [fp, #-48]	; 0xffffffd0
   17cb0:	mov	r3, #0
   17cb4:	str	r3, [fp, #-16]
   17cb8:	mov	r3, #0
   17cbc:	str	r3, [fp, #-12]
   17cc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17cc4:	str	r3, [fp, #-36]	; 0xffffffdc
   17cc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ccc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17cd0:	add	r3, r2, r3
   17cd4:	str	r3, [fp, #-20]	; 0xffffffec
   17cd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cdc:	add	r2, r3, #1
   17ce0:	str	r2, [fp, #-36]	; 0xffffffdc
   17ce4:	str	r3, [fp, #-32]	; 0xffffffe0
   17ce8:	b	1810c <sprintf@plt+0x6a70>
   17cec:	ldr	r3, [fp, #-12]
   17cf0:	cmp	r3, #0
   17cf4:	beq	17f60 <sprintf@plt+0x68c4>
   17cf8:	ldr	r3, [fp, #-8]
   17cfc:	cmp	r3, #91	; 0x5b
   17d00:	bne	17de4 <sprintf@plt+0x6748>
   17d04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d08:	mov	r1, #93	; 0x5d
   17d0c:	mov	r0, r3
   17d10:	bl	11384 <strchr@plt>
   17d14:	str	r0, [fp, #-24]	; 0xffffffe8
   17d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d1c:	cmp	r3, #0
   17d20:	bne	17d3c <sprintf@plt+0x66a0>
   17d24:	bl	11690 <__errno_location@plt>
   17d28:	mov	r2, r0
   17d2c:	mov	r3, #22
   17d30:	str	r3, [r2]
   17d34:	mvn	r3, #0
   17d38:	b	18224 <sprintf@plt+0x6b88>
   17d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d40:	add	r1, r3, #2
   17d44:	sub	ip, fp, #36	; 0x24
   17d48:	sub	r2, fp, #32
   17d4c:	sub	r0, fp, #40	; 0x28
   17d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d54:	str	r3, [sp]
   17d58:	mov	r3, ip
   17d5c:	bl	1867c <sprintf@plt+0x6fe0>
   17d60:	str	r0, [fp, #-16]
   17d64:	ldr	r3, [fp, #-16]
   17d68:	cmp	r3, #0
   17d6c:	beq	17d88 <sprintf@plt+0x66ec>
   17d70:	bl	11690 <__errno_location@plt>
   17d74:	mov	r2, r0
   17d78:	ldr	r3, [fp, #-16]
   17d7c:	str	r3, [r2]
   17d80:	mvn	r3, #0
   17d84:	b	18224 <sprintf@plt+0x6b88>
   17d88:	mov	r3, #0
   17d8c:	str	r3, [fp, #-12]
   17d90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d94:	add	r2, r3, #1
   17d98:	str	r2, [fp, #-36]	; 0xffffffdc
   17d9c:	str	r3, [fp, #-32]	; 0xffffffe0
   17da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17da4:	add	r2, r3, #1
   17da8:	str	r2, [fp, #-40]	; 0xffffffd8
   17dac:	ldrb	r3, [r3]
   17db0:	str	r3, [fp, #-8]
   17db4:	ldr	r3, [fp, #-8]
   17db8:	cmp	r3, #0
   17dbc:	beq	18168 <sprintf@plt+0x6acc>
   17dc0:	ldr	r3, [fp, #-8]
   17dc4:	cmp	r3, #46	; 0x2e
   17dc8:	beq	1810c <sprintf@plt+0x6a70>
   17dcc:	bl	11690 <__errno_location@plt>
   17dd0:	mov	r2, r0
   17dd4:	mov	r3, #22
   17dd8:	str	r3, [r2]
   17ddc:	mvn	r3, #0
   17de0:	b	18224 <sprintf@plt+0x6b88>
   17de4:	ldr	r1, [fp, #-8]
   17de8:	ldr	r3, [pc, #1096]	; 18238 <sprintf@plt+0x6b9c>
   17dec:	add	r3, pc, r3
   17df0:	mov	r0, r3
   17df4:	bl	11384 <strchr@plt>
   17df8:	str	r0, [fp, #-24]	; 0xffffffe8
   17dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e00:	cmp	r3, #0
   17e04:	beq	17f54 <sprintf@plt+0x68b8>
   17e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e0c:	ldr	r2, [pc, #1064]	; 1823c <sprintf@plt+0x6ba0>
   17e10:	add	r2, pc, r2
   17e14:	sub	r3, r3, r2
   17e18:	mov	r2, #100	; 0x64
   17e1c:	mul	r3, r2, r3
   17e20:	str	r3, [fp, #-28]	; 0xffffffe4
   17e24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e28:	add	r2, r3, #1
   17e2c:	str	r2, [fp, #-40]	; 0xffffffd8
   17e30:	ldrb	r3, [r3]
   17e34:	str	r3, [fp, #-8]
   17e38:	ldr	r3, [fp, #-8]
   17e3c:	cmp	r3, #0
   17e40:	beq	17e68 <sprintf@plt+0x67cc>
   17e44:	ldr	r1, [fp, #-8]
   17e48:	ldr	r3, [pc, #1008]	; 18240 <sprintf@plt+0x6ba4>
   17e4c:	add	r3, pc, r3
   17e50:	mov	r0, r3
   17e54:	bl	11384 <strchr@plt>
   17e58:	str	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e60:	cmp	r3, #0
   17e64:	bne	17e80 <sprintf@plt+0x67e4>
   17e68:	bl	11690 <__errno_location@plt>
   17e6c:	mov	r2, r0
   17e70:	mov	r3, #90	; 0x5a
   17e74:	str	r3, [r2]
   17e78:	mvn	r3, #0
   17e7c:	b	18224 <sprintf@plt+0x6b88>
   17e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e84:	ldr	r2, [pc, #952]	; 18244 <sprintf@plt+0x6ba8>
   17e88:	add	r2, pc, r2
   17e8c:	sub	r2, r3, r2
   17e90:	mov	r3, r2
   17e94:	lsl	r3, r3, #2
   17e98:	add	r3, r3, r2
   17e9c:	lsl	r3, r3, #1
   17ea0:	mov	r2, r3
   17ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ea8:	add	r3, r3, r2
   17eac:	str	r3, [fp, #-28]	; 0xffffffe4
   17eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17eb4:	add	r2, r3, #1
   17eb8:	str	r2, [fp, #-40]	; 0xffffffd8
   17ebc:	ldrb	r3, [r3]
   17ec0:	str	r3, [fp, #-8]
   17ec4:	ldr	r3, [fp, #-8]
   17ec8:	cmp	r3, #0
   17ecc:	beq	17ef4 <sprintf@plt+0x6858>
   17ed0:	ldr	r1, [fp, #-8]
   17ed4:	ldr	r3, [pc, #876]	; 18248 <sprintf@plt+0x6bac>
   17ed8:	add	r3, pc, r3
   17edc:	mov	r0, r3
   17ee0:	bl	11384 <strchr@plt>
   17ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   17ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17eec:	cmp	r3, #0
   17ef0:	bne	17f0c <sprintf@plt+0x6870>
   17ef4:	bl	11690 <__errno_location@plt>
   17ef8:	mov	r2, r0
   17efc:	mov	r3, #90	; 0x5a
   17f00:	str	r3, [r2]
   17f04:	mvn	r3, #0
   17f08:	b	18224 <sprintf@plt+0x6b88>
   17f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f10:	ldr	r2, [pc, #820]	; 1824c <sprintf@plt+0x6bb0>
   17f14:	add	r2, pc, r2
   17f18:	sub	r3, r3, r2
   17f1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f20:	add	r3, r2, r3
   17f24:	str	r3, [fp, #-28]	; 0xffffffe4
   17f28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17f2c:	cmp	r3, #255	; 0xff
   17f30:	ble	17f4c <sprintf@plt+0x68b0>
   17f34:	bl	11690 <__errno_location@plt>
   17f38:	mov	r2, r0
   17f3c:	mov	r3, #90	; 0x5a
   17f40:	str	r3, [r2]
   17f44:	mvn	r3, #0
   17f48:	b	18224 <sprintf@plt+0x6b88>
   17f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17f50:	str	r3, [fp, #-8]
   17f54:	mov	r3, #0
   17f58:	str	r3, [fp, #-12]
   17f5c:	b	180cc <sprintf@plt+0x6a30>
   17f60:	ldr	r3, [fp, #-8]
   17f64:	cmp	r3, #92	; 0x5c
   17f68:	bne	17f78 <sprintf@plt+0x68dc>
   17f6c:	mov	r3, #1
   17f70:	str	r3, [fp, #-12]
   17f74:	b	1810c <sprintf@plt+0x6a70>
   17f78:	ldr	r3, [fp, #-8]
   17f7c:	cmp	r3, #46	; 0x2e
   17f80:	bne	180cc <sprintf@plt+0x6a30>
   17f84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f8c:	sub	r3, r2, r3
   17f90:	sub	r3, r3, #1
   17f94:	str	r3, [fp, #-8]
   17f98:	ldr	r3, [fp, #-8]
   17f9c:	and	r3, r3, #192	; 0xc0
   17fa0:	cmp	r3, #0
   17fa4:	beq	17fc0 <sprintf@plt+0x6924>
   17fa8:	bl	11690 <__errno_location@plt>
   17fac:	mov	r2, r0
   17fb0:	mov	r3, #90	; 0x5a
   17fb4:	str	r3, [r2]
   17fb8:	mvn	r3, #0
   17fbc:	b	18224 <sprintf@plt+0x6b88>
   17fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fc8:	cmp	r2, r3
   17fcc:	bhi	17fe8 <sprintf@plt+0x694c>
   17fd0:	bl	11690 <__errno_location@plt>
   17fd4:	mov	r2, r0
   17fd8:	mov	r3, #90	; 0x5a
   17fdc:	str	r3, [r2]
   17fe0:	mvn	r3, #0
   17fe4:	b	18224 <sprintf@plt+0x6b88>
   17fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fec:	ldr	r2, [fp, #-8]
   17ff0:	uxtb	r2, r2
   17ff4:	strb	r2, [r3]
   17ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17ffc:	ldrb	r3, [r3]
   18000:	cmp	r3, #0
   18004:	bne	18084 <sprintf@plt+0x69e8>
   18008:	ldr	r3, [fp, #-8]
   1800c:	cmp	r3, #0
   18010:	beq	18050 <sprintf@plt+0x69b4>
   18014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18018:	ldr	r2, [fp, #-20]	; 0xffffffec
   1801c:	cmp	r2, r3
   18020:	bhi	1803c <sprintf@plt+0x69a0>
   18024:	bl	11690 <__errno_location@plt>
   18028:	mov	r2, r0
   1802c:	mov	r3, #90	; 0x5a
   18030:	str	r3, [r2]
   18034:	mvn	r3, #0
   18038:	b	18224 <sprintf@plt+0x6b88>
   1803c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18040:	add	r2, r3, #1
   18044:	str	r2, [fp, #-36]	; 0xffffffdc
   18048:	mov	r2, #0
   1804c:	strb	r2, [r3]
   18050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18054:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18058:	sub	r3, r2, r3
   1805c:	cmp	r3, #255	; 0xff
   18060:	ble	1807c <sprintf@plt+0x69e0>
   18064:	bl	11690 <__errno_location@plt>
   18068:	mov	r2, r0
   1806c:	mov	r3, #90	; 0x5a
   18070:	str	r3, [r2]
   18074:	mvn	r3, #0
   18078:	b	18224 <sprintf@plt+0x6b88>
   1807c:	mov	r3, #1
   18080:	b	18224 <sprintf@plt+0x6b88>
   18084:	ldr	r3, [fp, #-8]
   18088:	cmp	r3, #0
   1808c:	beq	180a0 <sprintf@plt+0x6a04>
   18090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18094:	ldrb	r3, [r3]
   18098:	cmp	r3, #46	; 0x2e
   1809c:	bne	180b8 <sprintf@plt+0x6a1c>
   180a0:	bl	11690 <__errno_location@plt>
   180a4:	mov	r2, r0
   180a8:	mov	r3, #90	; 0x5a
   180ac:	str	r3, [r2]
   180b0:	mvn	r3, #0
   180b4:	b	18224 <sprintf@plt+0x6b88>
   180b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180bc:	add	r2, r3, #1
   180c0:	str	r2, [fp, #-36]	; 0xffffffdc
   180c4:	str	r3, [fp, #-32]	; 0xffffffe0
   180c8:	b	1810c <sprintf@plt+0x6a70>
   180cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   180d4:	cmp	r2, r3
   180d8:	bhi	180f4 <sprintf@plt+0x6a58>
   180dc:	bl	11690 <__errno_location@plt>
   180e0:	mov	r2, r0
   180e4:	mov	r3, #90	; 0x5a
   180e8:	str	r3, [r2]
   180ec:	mvn	r3, #0
   180f0:	b	18224 <sprintf@plt+0x6b88>
   180f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180f8:	add	r2, r3, #1
   180fc:	str	r2, [fp, #-36]	; 0xffffffdc
   18100:	ldr	r2, [fp, #-8]
   18104:	uxtb	r2, r2
   18108:	strb	r2, [r3]
   1810c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18110:	add	r2, r3, #1
   18114:	str	r2, [fp, #-40]	; 0xffffffd8
   18118:	ldrb	r3, [r3]
   1811c:	str	r3, [fp, #-8]
   18120:	ldr	r3, [fp, #-8]
   18124:	cmp	r3, #0
   18128:	bne	17cec <sprintf@plt+0x6650>
   1812c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18134:	sub	r3, r2, r3
   18138:	sub	r3, r3, #1
   1813c:	str	r3, [fp, #-8]
   18140:	ldr	r3, [fp, #-8]
   18144:	and	r3, r3, #192	; 0xc0
   18148:	cmp	r3, #0
   1814c:	beq	18170 <sprintf@plt+0x6ad4>
   18150:	bl	11690 <__errno_location@plt>
   18154:	mov	r2, r0
   18158:	mov	r3, #90	; 0x5a
   1815c:	str	r3, [r2]
   18160:	mvn	r3, #0
   18164:	b	18224 <sprintf@plt+0x6b88>
   18168:	nop	{0}
   1816c:	b	18174 <sprintf@plt+0x6ad8>
   18170:	nop	{0}
   18174:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18178:	ldr	r2, [fp, #-20]	; 0xffffffec
   1817c:	cmp	r2, r3
   18180:	bhi	1819c <sprintf@plt+0x6b00>
   18184:	bl	11690 <__errno_location@plt>
   18188:	mov	r2, r0
   1818c:	mov	r3, #90	; 0x5a
   18190:	str	r3, [r2]
   18194:	mvn	r3, #0
   18198:	b	18224 <sprintf@plt+0x6b88>
   1819c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   181a0:	ldr	r2, [fp, #-8]
   181a4:	uxtb	r2, r2
   181a8:	strb	r2, [r3]
   181ac:	ldr	r3, [fp, #-8]
   181b0:	cmp	r3, #0
   181b4:	beq	181f4 <sprintf@plt+0x6b58>
   181b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   181c0:	cmp	r2, r3
   181c4:	bhi	181e0 <sprintf@plt+0x6b44>
   181c8:	bl	11690 <__errno_location@plt>
   181cc:	mov	r2, r0
   181d0:	mov	r3, #90	; 0x5a
   181d4:	str	r3, [r2]
   181d8:	mvn	r3, #0
   181dc:	b	18224 <sprintf@plt+0x6b88>
   181e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181e4:	add	r2, r3, #1
   181e8:	str	r2, [fp, #-36]	; 0xffffffdc
   181ec:	mov	r2, #0
   181f0:	strb	r2, [r3]
   181f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   181f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   181fc:	sub	r3, r2, r3
   18200:	cmp	r3, #255	; 0xff
   18204:	ble	18220 <sprintf@plt+0x6b84>
   18208:	bl	11690 <__errno_location@plt>
   1820c:	mov	r2, r0
   18210:	mov	r3, #90	; 0x5a
   18214:	str	r3, [r2]
   18218:	mvn	r3, #0
   1821c:	b	18224 <sprintf@plt+0x6b88>
   18220:	mov	r3, #0
   18224:	mov	r0, r3
   18228:	sub	sp, fp, #4
   1822c:	ldr	fp, [sp]
   18230:	add	sp, sp, #4
   18234:	pop	{pc}		; (ldr pc, [sp], #4)
   18238:	andeq	r7, r0, r0, asr #18
   1823c:	andeq	r7, r0, ip, lsl r9
   18240:	andeq	r7, r0, r0, ror #17
   18244:	andeq	r7, r0, r4, lsr #17
   18248:	andeq	r7, r0, r4, asr r8
   1824c:	andeq	r7, r0, r8, lsl r8
   18250:	str	fp, [sp, #-8]!
   18254:	str	lr, [sp, #4]
   18258:	add	fp, sp, #4
   1825c:	sub	sp, sp, #56	; 0x38
   18260:	str	r0, [fp, #-48]	; 0xffffffd0
   18264:	str	r1, [fp, #-52]	; 0xffffffcc
   18268:	str	r2, [fp, #-56]	; 0xffffffc8
   1826c:	str	r3, [fp, #-60]	; 0xffffffc4
   18270:	mov	r3, #1
   18274:	str	r3, [fp, #-32]	; 0xffffffe0
   18278:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1827c:	str	r3, [fp, #-24]	; 0xffffffe8
   18280:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18284:	str	r3, [fp, #-8]
   18288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1828c:	ldr	r2, [fp, #-8]
   18290:	add	r3, r2, r3
   18294:	str	r3, [fp, #-36]	; 0xffffffdc
   18298:	mov	r3, #0
   1829c:	str	r3, [fp, #-12]
   182a0:	ldr	r3, [fp, #-12]
   182a4:	str	r3, [fp, #-16]
   182a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182ac:	cmp	r3, #0
   182b0:	beq	18308 <sprintf@plt+0x6c6c>
   182b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182b8:	add	r2, r3, #4
   182bc:	str	r2, [fp, #-60]	; 0xffffffc4
   182c0:	ldr	r3, [r3]
   182c4:	str	r3, [fp, #-20]	; 0xffffffec
   182c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   182cc:	cmp	r3, #0
   182d0:	beq	18310 <sprintf@plt+0x6c74>
   182d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182d8:	str	r3, [fp, #-12]
   182dc:	b	182ec <sprintf@plt+0x6c50>
   182e0:	ldr	r3, [fp, #-12]
   182e4:	add	r3, r3, #4
   182e8:	str	r3, [fp, #-12]
   182ec:	ldr	r3, [fp, #-12]
   182f0:	ldr	r3, [r3]
   182f4:	cmp	r3, #0
   182f8:	bne	182e0 <sprintf@plt+0x6c44>
   182fc:	ldr	r3, [fp, #-12]
   18300:	str	r3, [fp, #-16]
   18304:	b	18310 <sprintf@plt+0x6c74>
   18308:	mov	r3, #0
   1830c:	str	r3, [fp, #-20]	; 0xffffffec
   18310:	mov	r3, #0
   18314:	str	r3, [fp, #-28]	; 0xffffffe4
   18318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1831c:	ldrb	r3, [r3]
   18320:	str	r3, [fp, #-40]	; 0xffffffd8
   18324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18328:	and	r3, r3, #192	; 0xc0
   1832c:	cmp	r3, #192	; 0xc0
   18330:	bne	1834c <sprintf@plt+0x6cb0>
   18334:	bl	11690 <__errno_location@plt>
   18338:	mov	r2, r0
   1833c:	mov	r3, #90	; 0x5a
   18340:	str	r3, [r2]
   18344:	mvn	r3, #0
   18348:	b	185ec <sprintf@plt+0x6f50>
   1834c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18350:	bl	178f8 <sprintf@plt+0x625c>
   18354:	str	r0, [fp, #-44]	; 0xffffffd4
   18358:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1835c:	cmp	r3, #0
   18360:	bge	1837c <sprintf@plt+0x6ce0>
   18364:	bl	11690 <__errno_location@plt>
   18368:	mov	r2, r0
   1836c:	mov	r3, #22
   18370:	str	r3, [r2]
   18374:	mvn	r3, #0
   18378:	b	185ec <sprintf@plt+0x6f50>
   1837c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18380:	add	r3, r3, #1
   18384:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18388:	add	r3, r2, r3
   1838c:	str	r3, [fp, #-28]	; 0xffffffe4
   18390:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18394:	cmp	r3, #255	; 0xff
   18398:	ble	183b4 <sprintf@plt+0x6d18>
   1839c:	bl	11690 <__errno_location@plt>
   183a0:	mov	r2, r0
   183a4:	mov	r3, #90	; 0x5a
   183a8:	str	r3, [r2]
   183ac:	mvn	r3, #0
   183b0:	b	185ec <sprintf@plt+0x6f50>
   183b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   183b8:	add	r3, r3, #1
   183bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183c0:	add	r3, r2, r3
   183c4:	str	r3, [fp, #-24]	; 0xffffffe8
   183c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   183cc:	cmp	r3, #0
   183d0:	bne	18318 <sprintf@plt+0x6c7c>
   183d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   183d8:	str	r3, [fp, #-24]	; 0xffffffe8
   183dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183e0:	ldrb	r3, [r3]
   183e4:	str	r3, [fp, #-40]	; 0xffffffd8
   183e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   183ec:	cmp	r3, #0
   183f0:	beq	18504 <sprintf@plt+0x6e68>
   183f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   183f8:	cmp	r3, #0
   183fc:	beq	18504 <sprintf@plt+0x6e68>
   18400:	ldr	r3, [fp, #-16]
   18404:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18410:	bl	18a68 <sprintf@plt+0x73cc>
   18414:	str	r0, [fp, #-28]	; 0xffffffe4
   18418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1841c:	cmp	r3, #0
   18420:	blt	1849c <sprintf@plt+0x6e00>
   18424:	ldr	r3, [fp, #-8]
   18428:	add	r3, r3, #1
   1842c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18430:	cmp	r2, r3
   18434:	bls	1859c <sprintf@plt+0x6f00>
   18438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1843c:	asr	r3, r3, #8
   18440:	sxtb	r3, r3
   18444:	mvn	r3, r3, lsl #26
   18448:	mvn	r3, r3, lsr #26
   1844c:	sxtb	r1, r3
   18450:	ldr	r3, [fp, #-8]
   18454:	add	r2, r3, #1
   18458:	str	r2, [fp, #-8]
   1845c:	uxtb	r2, r1
   18460:	strb	r2, [r3]
   18464:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18468:	rsbs	r2, r3, #0
   1846c:	uxtb	r3, r3
   18470:	uxtb	r2, r2
   18474:	rsbpl	r3, r2, #0
   18478:	ldr	r2, [fp, #-8]
   1847c:	add	r1, r2, #1
   18480:	str	r1, [fp, #-8]
   18484:	uxtb	r3, r3
   18488:	strb	r3, [r2]
   1848c:	ldr	r2, [fp, #-8]
   18490:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18494:	sub	r3, r2, r3
   18498:	b	185ec <sprintf@plt+0x6f50>
   1849c:	ldr	r3, [fp, #4]
   184a0:	cmp	r3, #0
   184a4:	beq	18504 <sprintf@plt+0x6e68>
   184a8:	ldr	r3, [fp, #4]
   184ac:	sub	r3, r3, #4
   184b0:	ldr	r2, [fp, #-12]
   184b4:	cmp	r2, r3
   184b8:	bcs	18504 <sprintf@plt+0x6e68>
   184bc:	ldr	r2, [fp, #-8]
   184c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184c4:	sub	r3, r2, r3
   184c8:	cmp	r3, #16384	; 0x4000
   184cc:	bge	18504 <sprintf@plt+0x6e68>
   184d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   184d4:	cmp	r3, #0
   184d8:	beq	18504 <sprintf@plt+0x6e68>
   184dc:	ldr	r3, [fp, #-12]
   184e0:	add	r2, r3, #4
   184e4:	str	r2, [fp, #-12]
   184e8:	ldr	r2, [fp, #-8]
   184ec:	str	r2, [r3]
   184f0:	ldr	r3, [fp, #-12]
   184f4:	mov	r2, #0
   184f8:	str	r2, [r3]
   184fc:	mov	r3, #0
   18500:	str	r3, [fp, #-32]	; 0xffffffe0
   18504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18508:	and	r3, r3, #192	; 0xc0
   1850c:	cmp	r3, #192	; 0xc0
   18510:	beq	185a4 <sprintf@plt+0x6f08>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	bl	178f8 <sprintf@plt+0x625c>
   1851c:	str	r0, [fp, #-40]	; 0xffffffd8
   18520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18524:	add	r3, r3, #1
   18528:	ldr	r2, [fp, #-8]
   1852c:	add	r3, r2, r3
   18530:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18534:	cmp	r2, r3
   18538:	bls	185ac <sprintf@plt+0x6f10>
   1853c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18540:	add	r3, r3, #1
   18544:	mov	r2, r3
   18548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1854c:	ldr	r0, [fp, #-8]
   18550:	bl	114c8 <memcpy@plt>
   18554:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18558:	add	r3, r3, #1
   1855c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18560:	add	r3, r2, r3
   18564:	str	r3, [fp, #-24]	; 0xffffffe8
   18568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1856c:	add	r3, r3, #1
   18570:	ldr	r2, [fp, #-8]
   18574:	add	r3, r2, r3
   18578:	str	r3, [fp, #-8]
   1857c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18580:	cmp	r3, #0
   18584:	bne	183dc <sprintf@plt+0x6d40>
   18588:	ldr	r2, [fp, #-8]
   1858c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18590:	cmp	r2, r3
   18594:	bls	185e0 <sprintf@plt+0x6f44>
   18598:	b	185b0 <sprintf@plt+0x6f14>
   1859c:	nop	{0}
   185a0:	b	185b0 <sprintf@plt+0x6f14>
   185a4:	nop	{0}
   185a8:	b	185b0 <sprintf@plt+0x6f14>
   185ac:	nop	{0}
   185b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   185b4:	cmp	r3, #0
   185b8:	beq	185c8 <sprintf@plt+0x6f2c>
   185bc:	ldr	r3, [fp, #-16]
   185c0:	mov	r2, #0
   185c4:	str	r2, [r3]
   185c8:	bl	11690 <__errno_location@plt>
   185cc:	mov	r2, r0
   185d0:	mov	r3, #90	; 0x5a
   185d4:	str	r3, [r2]
   185d8:	mvn	r3, #0
   185dc:	b	185ec <sprintf@plt+0x6f50>
   185e0:	ldr	r2, [fp, #-8]
   185e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   185e8:	sub	r3, r2, r3
   185ec:	mov	r0, r3
   185f0:	sub	sp, fp, #4
   185f4:	ldr	fp, [sp]
   185f8:	add	sp, sp, #4
   185fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18600:	str	fp, [sp, #-8]!
   18604:	str	lr, [sp, #4]
   18608:	add	fp, sp, #4
   1860c:	sub	sp, sp, #280	; 0x118
   18610:	str	r0, [fp, #-264]	; 0xfffffef8
   18614:	str	r1, [fp, #-268]	; 0xfffffef4
   18618:	str	r2, [fp, #-272]	; 0xfffffef0
   1861c:	str	r3, [fp, #-276]	; 0xfffffeec
   18620:	sub	r3, fp, #260	; 0x104
   18624:	mov	r2, #255	; 0xff
   18628:	mov	r1, r3
   1862c:	ldr	r0, [fp, #-264]	; 0xfffffef8
   18630:	bl	17c94 <sprintf@plt+0x65f8>
   18634:	mov	r3, r0
   18638:	cmn	r3, #1
   1863c:	bne	18648 <sprintf@plt+0x6fac>
   18640:	mvn	r3, #0
   18644:	b	18668 <sprintf@plt+0x6fcc>
   18648:	ldr	r2, [fp, #-272]	; 0xfffffef0
   1864c:	sub	r0, fp, #260	; 0x104
   18650:	ldr	r3, [fp, #4]
   18654:	str	r3, [sp]
   18658:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1865c:	ldr	r1, [fp, #-268]	; 0xfffffef4
   18660:	bl	18250 <sprintf@plt+0x6bb4>
   18664:	mov	r3, r0
   18668:	mov	r0, r3
   1866c:	sub	sp, fp, #4
   18670:	ldr	fp, [sp]
   18674:	add	sp, sp, #4
   18678:	pop	{pc}		; (ldr pc, [sp], #4)
   1867c:	str	fp, [sp, #-8]!
   18680:	str	lr, [sp, #4]
   18684:	add	fp, sp, #4
   18688:	sub	sp, sp, #64	; 0x40
   1868c:	str	r0, [fp, #-56]	; 0xffffffc8
   18690:	str	r1, [fp, #-60]	; 0xffffffc4
   18694:	str	r2, [fp, #-64]	; 0xffffffc0
   18698:	str	r3, [fp, #-68]	; 0xffffffbc
   1869c:	mov	r3, #0
   186a0:	str	r3, [fp, #-8]
   186a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   186a8:	ldr	r3, [r3]
   186ac:	str	r3, [fp, #-12]
   186b0:	mov	r3, #0
   186b4:	str	r3, [fp, #-48]	; 0xffffffd0
   186b8:	mov	r3, #0
   186bc:	str	r3, [fp, #-24]	; 0xffffffe8
   186c0:	mov	r3, #0
   186c4:	str	r3, [fp, #-28]	; 0xffffffe4
   186c8:	mov	r3, #0
   186cc:	str	r3, [fp, #-32]	; 0xffffffe0
   186d0:	mov	r3, #0
   186d4:	str	r3, [fp, #-36]	; 0xffffffdc
   186d8:	mov	r3, #0
   186dc:	str	r3, [fp, #-48]	; 0xffffffd0
   186e0:	mov	r3, #0
   186e4:	str	r3, [fp, #-20]	; 0xffffffec
   186e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   186ec:	ldr	r3, [fp, #-12]
   186f0:	sub	r3, r2, r3
   186f4:	cmp	r3, #1
   186f8:	bgt	18704 <sprintf@plt+0x7068>
   186fc:	mov	r3, #22
   18700:	b	18a50 <sprintf@plt+0x73b4>
   18704:	ldr	r3, [fp, #-12]
   18708:	add	r2, r3, #1
   1870c:	str	r2, [fp, #-12]
   18710:	ldrb	r3, [r3]
   18714:	cmp	r3, #120	; 0x78
   18718:	beq	18724 <sprintf@plt+0x7088>
   1871c:	mov	r3, #22
   18720:	b	18a50 <sprintf@plt+0x73b4>
   18724:	bl	1157c <__ctype_b_loc@plt>
   18728:	mov	r3, r0
   1872c:	ldr	r2, [r3]
   18730:	ldr	r3, [fp, #-12]
   18734:	ldrb	r3, [r3]
   18738:	lsl	r3, r3, #1
   1873c:	add	r3, r2, r3
   18740:	ldrh	r3, [r3]
   18744:	and	r3, r3, #4096	; 0x1000
   18748:	cmp	r3, #0
   1874c:	bne	18758 <sprintf@plt+0x70bc>
   18750:	mov	r3, #22
   18754:	b	18a50 <sprintf@plt+0x73b4>
   18758:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1875c:	add	r3, r3, #4
   18760:	str	r3, [fp, #-16]
   18764:	b	18948 <sprintf@plt+0x72ac>
   18768:	ldr	r3, [fp, #-12]
   1876c:	ldrb	r3, [r3]
   18770:	strb	r3, [fp, #-37]	; 0xffffffdb
   18774:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18778:	cmp	r3, #47	; 0x2f
   1877c:	beq	18810 <sprintf@plt+0x7174>
   18780:	cmp	r3, #93	; 0x5d
   18784:	bne	1881c <sprintf@plt+0x7180>
   18788:	ldr	r3, [fp, #-8]
   1878c:	cmp	r3, #0
   18790:	beq	187d8 <sprintf@plt+0x713c>
   18794:	ldr	r3, [fp, #-20]	; 0xffffffec
   18798:	cmp	r3, #0
   1879c:	bne	187a8 <sprintf@plt+0x710c>
   187a0:	mov	r3, #22
   187a4:	b	18a50 <sprintf@plt+0x73b4>
   187a8:	sub	r3, fp, #48	; 0x30
   187ac:	mov	r2, #10
   187b0:	mov	r1, r3
   187b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   187b8:	bl	114ec <strtol@plt>
   187bc:	str	r0, [fp, #-36]	; 0xffffffdc
   187c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   187c4:	ldrb	r3, [r3]
   187c8:	cmp	r3, #93	; 0x5d
   187cc:	beq	187d8 <sprintf@plt+0x713c>
   187d0:	mov	r3, #22
   187d4:	b	18a50 <sprintf@plt+0x73b4>
   187d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   187dc:	cmp	r3, #0
   187e0:	beq	18800 <sprintf@plt+0x7164>
   187e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187e8:	lsl	r1, r3, #4
   187ec:	ldr	r3, [fp, #-16]
   187f0:	add	r2, r3, #1
   187f4:	str	r2, [fp, #-16]
   187f8:	uxtb	r2, r1
   187fc:	strb	r2, [r3]
   18800:	ldr	r3, [fp, #-12]
   18804:	add	r3, r3, #1
   18808:	str	r3, [fp, #-12]
   1880c:	b	1896c <sprintf@plt+0x72d0>
   18810:	mov	r3, #1
   18814:	str	r3, [fp, #-8]
   18818:	b	1893c <sprintf@plt+0x72a0>
   1881c:	ldr	r3, [fp, #-8]
   18820:	cmp	r3, #0
   18824:	beq	18884 <sprintf@plt+0x71e8>
   18828:	bl	1157c <__ctype_b_loc@plt>
   1882c:	mov	r3, r0
   18830:	ldr	r2, [r3]
   18834:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18838:	lsl	r3, r3, #1
   1883c:	add	r3, r2, r3
   18840:	ldrh	r3, [r3]
   18844:	and	r3, r3, #2048	; 0x800
   18848:	cmp	r3, #0
   1884c:	bne	18858 <sprintf@plt+0x71bc>
   18850:	mov	r3, #22
   18854:	b	18a50 <sprintf@plt+0x73b4>
   18858:	ldr	r3, [fp, #-20]	; 0xffffffec
   1885c:	cmp	r3, #0
   18860:	bne	18938 <sprintf@plt+0x729c>
   18864:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18868:	cmp	r3, #48	; 0x30
   1886c:	bne	18878 <sprintf@plt+0x71dc>
   18870:	mov	r3, #22
   18874:	b	18a50 <sprintf@plt+0x73b4>
   18878:	ldr	r3, [fp, #-12]
   1887c:	str	r3, [fp, #-20]	; 0xffffffec
   18880:	b	18938 <sprintf@plt+0x729c>
   18884:	bl	1157c <__ctype_b_loc@plt>
   18888:	mov	r3, r0
   1888c:	ldr	r2, [r3]
   18890:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18894:	lsl	r3, r3, #1
   18898:	add	r3, r2, r3
   1889c:	ldrh	r3, [r3]
   188a0:	and	r3, r3, #4096	; 0x1000
   188a4:	cmp	r3, #0
   188a8:	bne	188b4 <sprintf@plt+0x7218>
   188ac:	mov	r3, #22
   188b0:	b	18a50 <sprintf@plt+0x73b4>
   188b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188b8:	lsl	r3, r3, #4
   188bc:	str	r3, [fp, #-24]	; 0xffffffe8
   188c0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   188c4:	ldr	r2, [pc, #408]	; 18a64 <sprintf@plt+0x73c8>
   188c8:	add	r2, pc, r2
   188cc:	ldrb	r3, [r2, r3]
   188d0:	mov	r2, r3
   188d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188d8:	add	r3, r3, r2
   188dc:	str	r3, [fp, #-24]	; 0xffffffe8
   188e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   188e4:	add	r3, r3, #4
   188e8:	str	r3, [fp, #-28]	; 0xffffffe4
   188ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188f0:	add	r3, r3, #4
   188f4:	str	r3, [fp, #-32]	; 0xffffffe0
   188f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188fc:	cmp	r3, #256	; 0x100
   18900:	ble	1890c <sprintf@plt+0x7270>
   18904:	mov	r3, #22
   18908:	b	18a50 <sprintf@plt+0x73b4>
   1890c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18910:	cmp	r3, #8
   18914:	bne	18938 <sprintf@plt+0x729c>
   18918:	ldr	r3, [fp, #-16]
   1891c:	add	r2, r3, #1
   18920:	str	r2, [fp, #-16]
   18924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18928:	uxtb	r2, r2
   1892c:	strb	r2, [r3]
   18930:	mov	r3, #0
   18934:	str	r3, [fp, #-28]	; 0xffffffe4
   18938:	nop	{0}
   1893c:	ldr	r3, [fp, #-12]
   18940:	add	r3, r3, #1
   18944:	str	r3, [fp, #-12]
   18948:	ldr	r2, [fp, #-12]
   1894c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18950:	cmp	r2, r3
   18954:	bcs	18968 <sprintf@plt+0x72cc>
   18958:	ldr	r2, [fp, #-16]
   1895c:	ldr	r3, [fp, #4]
   18960:	cmp	r2, r3
   18964:	bcc	18768 <sprintf@plt+0x70cc>
   18968:	nop	{0}
   1896c:	ldr	r2, [fp, #-12]
   18970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18974:	cmp	r2, r3
   18978:	bcs	1898c <sprintf@plt+0x72f0>
   1897c:	ldr	r2, [fp, #-16]
   18980:	ldr	r3, [fp, #4]
   18984:	cmp	r2, r3
   18988:	bcc	18994 <sprintf@plt+0x72f8>
   1898c:	mov	r3, #90	; 0x5a
   18990:	b	18a50 <sprintf@plt+0x73b4>
   18994:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18998:	cmp	r3, #0
   1899c:	ble	189f4 <sprintf@plt+0x7358>
   189a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189a4:	add	r3, r3, #3
   189a8:	bic	r3, r3, #3
   189ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   189b0:	cmp	r2, r3
   189b4:	beq	189c0 <sprintf@plt+0x7324>
   189b8:	mov	r3, #22
   189bc:	b	18a50 <sprintf@plt+0x73b4>
   189c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   189c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189c8:	sub	r3, r2, r3
   189cc:	str	r3, [fp, #-44]	; 0xffffffd4
   189d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   189d4:	rsb	r3, r3, #8
   189d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189dc:	lsl	r3, r2, r3
   189e0:	uxtb	r3, r3
   189e4:	cmp	r3, #0
   189e8:	beq	189fc <sprintf@plt+0x7360>
   189ec:	mov	r3, #22
   189f0:	b	18a50 <sprintf@plt+0x73b4>
   189f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189f8:	str	r3, [fp, #-36]	; 0xffffffdc
   189fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18a00:	cmp	r3, #256	; 0x100
   18a04:	bne	18a10 <sprintf@plt+0x7374>
   18a08:	mov	r3, #0
   18a0c:	str	r3, [fp, #-36]	; 0xffffffdc
   18a10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18a14:	ldr	r3, [r3]
   18a18:	mov	r2, #65	; 0x41
   18a1c:	strb	r2, [r3]
   18a20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18a24:	ldr	r3, [r3]
   18a28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a2c:	uxtb	r2, r2
   18a30:	strb	r2, [r3]
   18a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18a38:	ldr	r2, [fp, #-12]
   18a3c:	str	r2, [r3]
   18a40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18a44:	ldr	r2, [fp, #-16]
   18a48:	str	r2, [r3]
   18a4c:	mov	r3, #0
   18a50:	mov	r0, r3
   18a54:	sub	sp, fp, #4
   18a58:	ldr	fp, [sp]
   18a5c:	add	sp, sp, #4
   18a60:	pop	{pc}		; (ldr pc, [sp], #4)
   18a64:	andeq	r6, r0, r4, ror #26
   18a68:	str	r4, [sp, #-12]!
   18a6c:	str	fp, [sp, #4]
   18a70:	str	lr, [sp, #8]
   18a74:	add	fp, sp, #8
   18a78:	sub	sp, sp, #44	; 0x2c
   18a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   18a80:	str	r1, [fp, #-44]	; 0xffffffd4
   18a84:	str	r2, [fp, #-48]	; 0xffffffd0
   18a88:	str	r3, [fp, #-52]	; 0xffffffcc
   18a8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18a90:	str	r3, [fp, #-28]	; 0xffffffe4
   18a94:	b	18c84 <sprintf@plt+0x75e8>
   18a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a9c:	ldr	r3, [r3]
   18aa0:	str	r3, [fp, #-24]	; 0xffffffe8
   18aa4:	b	18c40 <sprintf@plt+0x75a4>
   18aa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18aac:	str	r3, [fp, #-16]
   18ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ab4:	str	r3, [fp, #-20]	; 0xffffffec
   18ab8:	b	18bf0 <sprintf@plt+0x7554>
   18abc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ac0:	and	r3, r3, #192	; 0xc0
   18ac4:	cmp	r3, #0
   18ac8:	beq	18ad8 <sprintf@plt+0x743c>
   18acc:	cmp	r3, #192	; 0xc0
   18ad0:	beq	18bb0 <sprintf@plt+0x7514>
   18ad4:	b	18bd8 <sprintf@plt+0x753c>
   18ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18adc:	sub	r3, r3, #1
   18ae0:	mov	r0, r3
   18ae4:	bl	178f8 <sprintf@plt+0x625c>
   18ae8:	mov	r3, r0
   18aec:	str	r3, [fp, #-32]	; 0xffffffe0
   18af0:	ldr	r3, [fp, #-16]
   18af4:	add	r2, r3, #1
   18af8:	str	r2, [fp, #-16]
   18afc:	ldrb	r3, [r3]
   18b00:	mov	r2, r3
   18b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b08:	cmp	r3, r2
   18b0c:	bne	18c14 <sprintf@plt+0x7578>
   18b10:	b	18b60 <sprintf@plt+0x74c4>
   18b14:	ldr	r3, [fp, #-16]
   18b18:	add	r2, r3, #1
   18b1c:	str	r2, [fp, #-16]
   18b20:	ldrb	r3, [r3]
   18b24:	mov	r0, r3
   18b28:	bl	18cc0 <sprintf@plt+0x7624>
   18b2c:	mov	r4, r0
   18b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b34:	add	r2, r3, #1
   18b38:	str	r2, [fp, #-20]	; 0xffffffec
   18b3c:	ldrb	r3, [r3]
   18b40:	mov	r0, r3
   18b44:	bl	18cc0 <sprintf@plt+0x7624>
   18b48:	mov	r3, r0
   18b4c:	cmp	r4, r3
   18b50:	bne	18c1c <sprintf@plt+0x7580>
   18b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b58:	sub	r3, r3, #1
   18b5c:	str	r3, [fp, #-32]	; 0xffffffe0
   18b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b64:	cmp	r3, #0
   18b68:	bne	18b14 <sprintf@plt+0x7478>
   18b6c:	ldr	r3, [fp, #-16]
   18b70:	ldrb	r3, [r3]
   18b74:	cmp	r3, #0
   18b78:	bne	18b9c <sprintf@plt+0x7500>
   18b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b80:	ldrb	r3, [r3]
   18b84:	cmp	r3, #0
   18b88:	bne	18b9c <sprintf@plt+0x7500>
   18b8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b94:	sub	r3, r2, r3
   18b98:	b	18ca8 <sprintf@plt+0x760c>
   18b9c:	ldr	r3, [fp, #-16]
   18ba0:	ldrb	r3, [r3]
   18ba4:	cmp	r3, #0
   18ba8:	beq	18c24 <sprintf@plt+0x7588>
   18bac:	b	18bf0 <sprintf@plt+0x7554>
   18bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18bb4:	lsl	r3, r3, #8
   18bb8:	and	r3, r3, #16128	; 0x3f00
   18bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18bc0:	ldrb	r2, [r2]
   18bc4:	orr	r3, r3, r2
   18bc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18bcc:	add	r3, r2, r3
   18bd0:	str	r3, [fp, #-20]	; 0xffffffec
   18bd4:	b	18bf0 <sprintf@plt+0x7554>
   18bd8:	bl	11690 <__errno_location@plt>
   18bdc:	mov	r2, r0
   18be0:	mov	r3, #90	; 0x5a
   18be4:	str	r3, [r2]
   18be8:	mvn	r3, #0
   18bec:	b	18ca8 <sprintf@plt+0x760c>
   18bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18bf4:	add	r2, r3, #1
   18bf8:	str	r2, [fp, #-20]	; 0xffffffec
   18bfc:	ldrb	r3, [r3]
   18c00:	str	r3, [fp, #-32]	; 0xffffffe0
   18c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18c08:	cmp	r3, #0
   18c0c:	bne	18abc <sprintf@plt+0x7420>
   18c10:	b	18c28 <sprintf@plt+0x758c>
   18c14:	nop	{0}
   18c18:	b	18c28 <sprintf@plt+0x758c>
   18c1c:	nop	{0}
   18c20:	b	18c28 <sprintf@plt+0x758c>
   18c24:	nop	{0}
   18c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c2c:	ldrb	r3, [r3]
   18c30:	add	r3, r3, #1
   18c34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c38:	add	r3, r2, r3
   18c3c:	str	r3, [fp, #-24]	; 0xffffffe8
   18c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c44:	ldrb	r3, [r3]
   18c48:	cmp	r3, #0
   18c4c:	beq	18c78 <sprintf@plt+0x75dc>
   18c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c54:	ldrb	r3, [r3]
   18c58:	and	r3, r3, #192	; 0xc0
   18c5c:	cmp	r3, #0
   18c60:	bne	18c78 <sprintf@plt+0x75dc>
   18c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18c6c:	sub	r3, r2, r3
   18c70:	cmp	r3, #16384	; 0x4000
   18c74:	blt	18aa8 <sprintf@plt+0x740c>
   18c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c7c:	add	r3, r3, #4
   18c80:	str	r3, [fp, #-28]	; 0xffffffe4
   18c84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18c88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18c8c:	cmp	r2, r3
   18c90:	bcc	18a98 <sprintf@plt+0x73fc>
   18c94:	bl	11690 <__errno_location@plt>
   18c98:	mov	r2, r0
   18c9c:	mov	r3, #2
   18ca0:	str	r3, [r2]
   18ca4:	mvn	r3, #0
   18ca8:	mov	r0, r3
   18cac:	sub	sp, fp, #8
   18cb0:	ldr	r4, [sp]
   18cb4:	ldr	fp, [sp, #4]
   18cb8:	add	sp, sp, #8
   18cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   18cc0:	push	{fp}		; (str fp, [sp, #-4]!)
   18cc4:	add	fp, sp, #0
   18cc8:	sub	sp, sp, #12
   18ccc:	str	r0, [fp, #-8]
   18cd0:	ldr	r3, [fp, #-8]
   18cd4:	cmp	r3, #64	; 0x40
   18cd8:	ble	18cf4 <sprintf@plt+0x7658>
   18cdc:	ldr	r3, [fp, #-8]
   18ce0:	cmp	r3, #90	; 0x5a
   18ce4:	bgt	18cf4 <sprintf@plt+0x7658>
   18ce8:	ldr	r3, [fp, #-8]
   18cec:	add	r3, r3, #32
   18cf0:	b	18cf8 <sprintf@plt+0x765c>
   18cf4:	ldr	r3, [fp, #-8]
   18cf8:	mov	r0, r3
   18cfc:	add	sp, fp, #0
   18d00:	pop	{fp}		; (ldr fp, [sp], #4)
   18d04:	bx	lr
   18d08:	str	fp, [sp, #-8]!
   18d0c:	str	lr, [sp, #4]
   18d10:	add	fp, sp, #4
   18d14:	sub	sp, sp, #144	; 0x90
   18d18:	str	r0, [fp, #-128]	; 0xffffff80
   18d1c:	str	r1, [fp, #-132]	; 0xffffff7c
   18d20:	str	r2, [fp, #-136]	; 0xffffff78
   18d24:	str	r3, [fp, #-140]	; 0xffffff74
   18d28:	ldr	r3, [fp, #-140]	; 0xffffff74
   18d2c:	cmp	r3, #0
   18d30:	beq	18d40 <sprintf@plt+0x76a4>
   18d34:	ldr	r3, [fp, #4]
   18d38:	cmp	r3, #11
   18d3c:	bgt	18d48 <sprintf@plt+0x76ac>
   18d40:	mvn	r3, #0
   18d44:	b	18f24 <sprintf@plt+0x7888>
   18d48:	mov	r2, #12
   18d4c:	mov	r1, #0
   18d50:	ldr	r0, [fp, #-140]	; 0xffffff74
   18d54:	bl	113e4 <memset@plt>
   18d58:	ldr	r3, [fp, #-140]	; 0xffffff74
   18d5c:	str	r3, [fp, #-8]
   18d60:	ldr	r3, [fp, #-8]
   18d64:	mov	r2, #0
   18d68:	strh	r2, [r3]
   18d6c:	ldr	r2, [fp, #-8]
   18d70:	ldrb	r3, [r2, #2]
   18d74:	bfc	r3, #3, #4
   18d78:	strb	r3, [r2, #2]
   18d7c:	ldr	r2, [fp, #-8]
   18d80:	ldrb	r3, [r2, #2]
   18d84:	orr	r3, r3, #1
   18d88:	strb	r3, [r2, #2]
   18d8c:	ldr	r2, [fp, #-8]
   18d90:	ldrb	r3, [r2, #3]
   18d94:	bfc	r3, #0, #4
   18d98:	strb	r3, [r2, #3]
   18d9c:	ldr	r3, [fp, #-140]	; 0xffffff74
   18da0:	add	r3, r3, #12
   18da4:	str	r3, [fp, #-12]
   18da8:	ldr	r3, [fp, #4]
   18dac:	sub	r3, r3, #12
   18db0:	str	r3, [fp, #4]
   18db4:	sub	r3, fp, #120	; 0x78
   18db8:	str	r3, [fp, #-16]
   18dbc:	ldr	r3, [fp, #-16]
   18dc0:	add	r2, r3, #4
   18dc4:	str	r2, [fp, #-16]
   18dc8:	ldr	r2, [fp, #-140]	; 0xffffff74
   18dcc:	str	r2, [r3]
   18dd0:	ldr	r3, [fp, #-16]
   18dd4:	add	r2, r3, #4
   18dd8:	str	r2, [fp, #-16]
   18ddc:	mov	r2, #0
   18de0:	str	r2, [r3]
   18de4:	sub	r3, fp, #120	; 0x78
   18de8:	add	r3, r3, #80	; 0x50
   18dec:	str	r3, [fp, #-20]	; 0xffffffec
   18df0:	ldr	r3, [fp, #4]
   18df4:	sub	r3, r3, #4
   18df8:	str	r3, [fp, #4]
   18dfc:	ldr	r3, [fp, #4]
   18e00:	cmp	r3, #0
   18e04:	bge	18e10 <sprintf@plt+0x7774>
   18e08:	mvn	r3, #0
   18e0c:	b	18f24 <sprintf@plt+0x7888>
   18e10:	sub	r2, fp, #120	; 0x78
   18e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e18:	str	r3, [sp]
   18e1c:	mov	r3, r2
   18e20:	ldr	r2, [fp, #4]
   18e24:	ldr	r1, [fp, #-12]
   18e28:	ldr	r0, [fp, #-128]	; 0xffffff80
   18e2c:	bl	173d8 <sprintf@plt+0x5d3c>
   18e30:	str	r0, [fp, #-24]	; 0xffffffe8
   18e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e38:	cmp	r3, #0
   18e3c:	bge	18e48 <sprintf@plt+0x77ac>
   18e40:	mvn	r3, #0
   18e44:	b	18f24 <sprintf@plt+0x7888>
   18e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e4c:	ldr	r2, [fp, #-12]
   18e50:	add	r3, r2, r3
   18e54:	str	r3, [fp, #-12]
   18e58:	ldr	r2, [fp, #4]
   18e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e60:	sub	r3, r2, r3
   18e64:	str	r3, [fp, #4]
   18e68:	ldr	r3, [fp, #-136]	; 0xffffff78
   18e6c:	strh	r3, [fp, #-26]	; 0xffffffe6
   18e70:	ldr	r3, [fp, #-12]
   18e74:	str	r3, [fp, #-32]	; 0xffffffe0
   18e78:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   18e7c:	lsr	r3, r3, #8
   18e80:	uxth	r1, r3
   18e84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e88:	add	r2, r3, #1
   18e8c:	str	r2, [fp, #-32]	; 0xffffffe0
   18e90:	uxtb	r2, r1
   18e94:	strb	r2, [r3]
   18e98:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   18e9c:	uxtb	r2, r3
   18ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ea4:	strb	r2, [r3]
   18ea8:	ldr	r3, [fp, #-12]
   18eac:	add	r3, r3, #2
   18eb0:	str	r3, [fp, #-12]
   18eb4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18eb8:	strh	r3, [fp, #-34]	; 0xffffffde
   18ebc:	ldr	r3, [fp, #-12]
   18ec0:	str	r3, [fp, #-40]	; 0xffffffd8
   18ec4:	ldrh	r3, [fp, #-34]	; 0xffffffde
   18ec8:	lsr	r3, r3, #8
   18ecc:	uxth	r1, r3
   18ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ed4:	add	r2, r3, #1
   18ed8:	str	r2, [fp, #-40]	; 0xffffffd8
   18edc:	uxtb	r2, r1
   18ee0:	strb	r2, [r3]
   18ee4:	ldrh	r3, [fp, #-34]	; 0xffffffde
   18ee8:	uxtb	r2, r3
   18eec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ef0:	strb	r2, [r3]
   18ef4:	ldr	r3, [fp, #-12]
   18ef8:	add	r3, r3, #2
   18efc:	str	r3, [fp, #-12]
   18f00:	mov	r0, #1
   18f04:	bl	113cc <htons@plt>
   18f08:	mov	r3, r0
   18f0c:	mov	r2, r3
   18f10:	ldr	r3, [fp, #-8]
   18f14:	strh	r2, [r3, #4]
   18f18:	ldr	r2, [fp, #-12]
   18f1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   18f20:	sub	r3, r2, r3
   18f24:	mov	r0, r3
   18f28:	sub	sp, fp, #4
   18f2c:	ldr	fp, [sp]
   18f30:	add	sp, sp, #4
   18f34:	pop	{pc}		; (ldr pc, [sp], #4)
   18f38:	str	fp, [sp, #-8]!
   18f3c:	str	lr, [sp, #4]
   18f40:	add	fp, sp, #4
   18f44:	sub	sp, sp, #16
   18f48:	str	r0, [fp, #-8]
   18f4c:	str	r1, [fp, #-12]
   18f50:	str	r2, [fp, #-16]
   18f54:	ldr	r3, [fp, #-8]
   18f58:	cmp	r3, #0
   18f5c:	bne	18f80 <sprintf@plt+0x78e4>
   18f60:	ldr	r3, [pc, #268]	; 19074 <sprintf@plt+0x79d8>
   18f64:	add	r3, pc, r3
   18f68:	mov	r2, #143	; 0x8f
   18f6c:	ldr	r1, [pc, #260]	; 19078 <sprintf@plt+0x79dc>
   18f70:	add	r1, pc, r1
   18f74:	ldr	r0, [pc, #256]	; 1907c <sprintf@plt+0x79e0>
   18f78:	add	r0, pc, r0
   18f7c:	bl	11414 <__assert_fail@plt>
   18f80:	ldr	r3, [fp, #-12]
   18f84:	cmp	r3, #0
   18f88:	bne	18fac <sprintf@plt+0x7910>
   18f8c:	ldr	r3, [pc, #236]	; 19080 <sprintf@plt+0x79e4>
   18f90:	add	r3, pc, r3
   18f94:	mov	r2, #144	; 0x90
   18f98:	ldr	r1, [pc, #228]	; 19084 <sprintf@plt+0x79e8>
   18f9c:	add	r1, pc, r1
   18fa0:	ldr	r0, [pc, #224]	; 19088 <sprintf@plt+0x79ec>
   18fa4:	add	r0, pc, r0
   18fa8:	bl	11414 <__assert_fail@plt>
   18fac:	ldr	r3, [fp, #-16]
   18fb0:	cmp	r3, #0
   18fb4:	bne	18fd8 <sprintf@plt+0x793c>
   18fb8:	ldr	r3, [pc, #204]	; 1908c <sprintf@plt+0x79f0>
   18fbc:	add	r3, pc, r3
   18fc0:	mov	r2, #145	; 0x91
   18fc4:	ldr	r1, [pc, #196]	; 19090 <sprintf@plt+0x79f4>
   18fc8:	add	r1, pc, r1
   18fcc:	ldr	r0, [pc, #192]	; 19094 <sprintf@plt+0x79f8>
   18fd0:	add	r0, pc, r0
   18fd4:	bl	11414 <__assert_fail@plt>
   18fd8:	ldr	r3, [fp, #-12]
   18fdc:	ldr	r2, [fp, #-8]
   18fe0:	str	r2, [r3]
   18fe4:	ldr	r3, [fp, #-12]
   18fe8:	mov	r2, #0
   18fec:	str	r2, [r3, #4]
   18ff0:	ldr	r3, [fp, #-16]
   18ff4:	ldr	r2, [r3]
   18ff8:	ldr	r3, [fp, #-12]
   18ffc:	str	r2, [r3, #8]
   19000:	ldr	r3, [fp, #-16]
   19004:	ldr	r3, [r3]
   19008:	cmp	r3, #0
   1900c:	beq	19024 <sprintf@plt+0x7988>
   19010:	ldr	r3, [fp, #-16]
   19014:	ldr	r3, [r3]
   19018:	ldr	r2, [fp, #-12]
   1901c:	str	r2, [r3, #4]
   19020:	b	19040 <sprintf@plt+0x79a4>
   19024:	ldr	r3, [fp, #-16]
   19028:	ldr	r3, [r3, #4]
   1902c:	cmp	r3, #0
   19030:	bne	19040 <sprintf@plt+0x79a4>
   19034:	ldr	r3, [fp, #-16]
   19038:	ldr	r2, [fp, #-12]
   1903c:	str	r2, [r3, #4]
   19040:	ldr	r3, [fp, #-16]
   19044:	ldr	r2, [fp, #-12]
   19048:	str	r2, [r3]
   1904c:	ldr	r3, [fp, #-16]
   19050:	ldr	r3, [r3, #8]
   19054:	add	r2, r3, #1
   19058:	ldr	r3, [fp, #-16]
   1905c:	str	r2, [r3, #8]
   19060:	nop	{0}
   19064:	sub	sp, fp, #4
   19068:	ldr	fp, [sp]
   1906c:	add	sp, sp, #4
   19070:	pop	{pc}		; (ldr pc, [sp], #4)
   19074:	andeq	r6, r0, r8, ror #22
   19078:	andeq	r6, r0, r0, lsr #16
   1907c:	andeq	r6, r0, r4, lsr r8
   19080:	andeq	r6, r0, ip, lsr fp
   19084:	strdeq	r6, [r0], -r4
   19088:	andeq	r6, r0, r8, lsl r8
   1908c:	andeq	r6, r0, r0, lsl fp
   19090:	andeq	r6, r0, r8, asr #15
   19094:	strdeq	r6, [r0], -r8
   19098:	str	fp, [sp, #-8]!
   1909c:	str	lr, [sp, #4]
   190a0:	add	fp, sp, #4
   190a4:	sub	sp, sp, #8
   190a8:	str	r0, [fp, #-8]
   190ac:	str	r1, [fp, #-12]
   190b0:	ldr	r3, [fp, #-8]
   190b4:	cmp	r3, #0
   190b8:	bne	190dc <sprintf@plt+0x7a40>
   190bc:	ldr	r3, [pc, #248]	; 191bc <sprintf@plt+0x7b20>
   190c0:	add	r3, pc, r3
   190c4:	mov	r2, #235	; 0xeb
   190c8:	ldr	r1, [pc, #240]	; 191c0 <sprintf@plt+0x7b24>
   190cc:	add	r1, pc, r1
   190d0:	ldr	r0, [pc, #236]	; 191c4 <sprintf@plt+0x7b28>
   190d4:	add	r0, pc, r0
   190d8:	bl	11414 <__assert_fail@plt>
   190dc:	ldr	r3, [fp, #-12]
   190e0:	cmp	r3, #0
   190e4:	bne	19108 <sprintf@plt+0x7a6c>
   190e8:	ldr	r3, [pc, #216]	; 191c8 <sprintf@plt+0x7b2c>
   190ec:	add	r3, pc, r3
   190f0:	mov	r2, #236	; 0xec
   190f4:	ldr	r1, [pc, #208]	; 191cc <sprintf@plt+0x7b30>
   190f8:	add	r1, pc, r1
   190fc:	ldr	r0, [pc, #204]	; 191d0 <sprintf@plt+0x7b34>
   19100:	add	r0, pc, r0
   19104:	bl	11414 <__assert_fail@plt>
   19108:	ldr	r3, [fp, #-8]
   1910c:	ldr	r3, [r3, #8]
   19110:	cmp	r3, #0
   19114:	beq	19130 <sprintf@plt+0x7a94>
   19118:	ldr	r3, [fp, #-8]
   1911c:	ldr	r3, [r3, #8]
   19120:	ldr	r2, [fp, #-8]
   19124:	ldr	r2, [r2, #4]
   19128:	str	r2, [r3, #4]
   1912c:	b	19140 <sprintf@plt+0x7aa4>
   19130:	ldr	r3, [fp, #-8]
   19134:	ldr	r2, [r3, #4]
   19138:	ldr	r3, [fp, #-12]
   1913c:	str	r2, [r3, #4]
   19140:	ldr	r3, [fp, #-8]
   19144:	ldr	r3, [r3, #4]
   19148:	cmp	r3, #0
   1914c:	beq	19168 <sprintf@plt+0x7acc>
   19150:	ldr	r3, [fp, #-8]
   19154:	ldr	r3, [r3, #4]
   19158:	ldr	r2, [fp, #-8]
   1915c:	ldr	r2, [r2, #8]
   19160:	str	r2, [r3, #8]
   19164:	b	19178 <sprintf@plt+0x7adc>
   19168:	ldr	r3, [fp, #-8]
   1916c:	ldr	r2, [r3, #8]
   19170:	ldr	r3, [fp, #-12]
   19174:	str	r2, [r3]
   19178:	ldr	r3, [fp, #-8]
   1917c:	mov	r2, #0
   19180:	str	r2, [r3, #4]
   19184:	ldr	r3, [fp, #-8]
   19188:	ldr	r2, [r3, #4]
   1918c:	ldr	r3, [fp, #-8]
   19190:	str	r2, [r3, #8]
   19194:	ldr	r3, [fp, #-12]
   19198:	ldr	r3, [r3, #8]
   1919c:	sub	r2, r3, #1
   191a0:	ldr	r3, [fp, #-12]
   191a4:	str	r2, [r3, #8]
   191a8:	nop	{0}
   191ac:	sub	sp, fp, #4
   191b0:	ldr	fp, [sp]
   191b4:	add	sp, sp, #4
   191b8:	pop	{pc}		; (ldr pc, [sp], #4)
   191bc:	ldrdeq	r6, [r0], -r4
   191c0:	andeq	r6, r0, r4, asr #13
   191c4:	andeq	r6, r0, r8, ror #13
   191c8:	andeq	r6, r0, r8, lsr #19
   191cc:	muleq	r0, r8, r6
   191d0:	andeq	r6, r0, r8, asr #13
   191d4:	str	fp, [sp, #-8]!
   191d8:	str	lr, [sp, #4]
   191dc:	add	fp, sp, #4
   191e0:	sub	sp, sp, #16
   191e4:	str	r0, [fp, #-16]
   191e8:	str	r1, [fp, #-20]	; 0xffffffec
   191ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   191f0:	cmp	r3, #0
   191f4:	bne	19218 <sprintf@plt+0x7b7c>
   191f8:	ldr	r3, [pc, #324]	; 19344 <sprintf@plt+0x7ca8>
   191fc:	add	r3, pc, r3
   19200:	movw	r2, #258	; 0x102
   19204:	ldr	r1, [pc, #316]	; 19348 <sprintf@plt+0x7cac>
   19208:	add	r1, pc, r1
   1920c:	ldr	r0, [pc, #312]	; 1934c <sprintf@plt+0x7cb0>
   19210:	add	r0, pc, r0
   19214:	bl	11414 <__assert_fail@plt>
   19218:	ldr	r3, [fp, #-16]
   1921c:	cmp	r3, #0
   19220:	bne	19244 <sprintf@plt+0x7ba8>
   19224:	ldr	r3, [pc, #292]	; 19350 <sprintf@plt+0x7cb4>
   19228:	add	r3, pc, r3
   1922c:	movw	r2, #259	; 0x103
   19230:	ldr	r1, [pc, #284]	; 19354 <sprintf@plt+0x7cb8>
   19234:	add	r1, pc, r1
   19238:	ldr	r0, [pc, #280]	; 19358 <sprintf@plt+0x7cbc>
   1923c:	add	r0, pc, r0
   19240:	bl	11414 <__assert_fail@plt>
   19244:	ldr	r3, [fp, #-20]	; 0xffffffec
   19248:	ldr	r3, [r3]
   1924c:	str	r3, [fp, #-8]
   19250:	b	19320 <sprintf@plt+0x7c84>
   19254:	ldr	r3, [fp, #-8]
   19258:	ldr	r3, [r3]
   1925c:	ldr	r2, [fp, #-16]
   19260:	cmp	r2, r3
   19264:	beq	19278 <sprintf@plt+0x7bdc>
   19268:	ldr	r3, [fp, #-8]
   1926c:	ldr	r3, [r3, #8]
   19270:	str	r3, [fp, #-8]
   19274:	b	19320 <sprintf@plt+0x7c84>
   19278:	ldr	r3, [fp, #-8]
   1927c:	ldr	r3, [r3, #8]
   19280:	cmp	r3, #0
   19284:	beq	192a0 <sprintf@plt+0x7c04>
   19288:	ldr	r3, [fp, #-8]
   1928c:	ldr	r3, [r3, #8]
   19290:	ldr	r2, [fp, #-8]
   19294:	ldr	r2, [r2, #4]
   19298:	str	r2, [r3, #4]
   1929c:	b	192b0 <sprintf@plt+0x7c14>
   192a0:	ldr	r3, [fp, #-8]
   192a4:	ldr	r2, [r3, #4]
   192a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   192ac:	str	r2, [r3, #4]
   192b0:	ldr	r3, [fp, #-8]
   192b4:	ldr	r3, [r3, #4]
   192b8:	cmp	r3, #0
   192bc:	beq	192d8 <sprintf@plt+0x7c3c>
   192c0:	ldr	r3, [fp, #-8]
   192c4:	ldr	r3, [r3, #4]
   192c8:	ldr	r2, [fp, #-8]
   192cc:	ldr	r2, [r2, #8]
   192d0:	str	r2, [r3, #8]
   192d4:	b	192e8 <sprintf@plt+0x7c4c>
   192d8:	ldr	r3, [fp, #-8]
   192dc:	ldr	r2, [r3, #8]
   192e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   192e4:	str	r2, [r3]
   192e8:	ldr	r3, [fp, #-8]
   192ec:	mov	r2, #0
   192f0:	str	r2, [r3, #4]
   192f4:	ldr	r3, [fp, #-8]
   192f8:	ldr	r2, [r3, #4]
   192fc:	ldr	r3, [fp, #-8]
   19300:	str	r2, [r3, #8]
   19304:	ldr	r3, [fp, #-20]	; 0xffffffec
   19308:	ldr	r3, [r3, #8]
   1930c:	sub	r2, r3, #1
   19310:	ldr	r3, [fp, #-20]	; 0xffffffec
   19314:	str	r2, [r3, #8]
   19318:	ldr	r3, [fp, #-8]
   1931c:	b	19330 <sprintf@plt+0x7c94>
   19320:	ldr	r3, [fp, #-8]
   19324:	cmp	r3, #0
   19328:	bne	19254 <sprintf@plt+0x7bb8>
   1932c:	mov	r3, #0
   19330:	mov	r0, r3
   19334:	sub	sp, fp, #4
   19338:	ldr	fp, [sp]
   1933c:	add	sp, sp, #4
   19340:	pop	{pc}		; (ldr pc, [sp], #4)
   19344:			; <UNDEFINED> instruction: 0x000068bc
   19348:	andeq	r6, r0, r8, lsl #11
   1934c:			; <UNDEFINED> instruction: 0x000065b8
   19350:	muleq	r0, r0, r8
   19354:	andeq	r6, r0, ip, asr r5
   19358:	andeq	r6, r0, r0, ror r5
   1935c:	str	fp, [sp, #-8]!
   19360:	str	lr, [sp, #4]
   19364:	add	fp, sp, #4
   19368:	sub	sp, sp, #16
   1936c:	str	r0, [fp, #-16]
   19370:	str	r1, [fp, #-20]	; 0xffffffec
   19374:	ldr	r3, [fp, #-20]	; 0xffffffec
   19378:	cmp	r3, #0
   1937c:	bne	193a0 <sprintf@plt+0x7d04>
   19380:	ldr	r3, [pc, #136]	; 19410 <sprintf@plt+0x7d74>
   19384:	add	r3, pc, r3
   19388:	movw	r2, #287	; 0x11f
   1938c:	ldr	r1, [pc, #128]	; 19414 <sprintf@plt+0x7d78>
   19390:	add	r1, pc, r1
   19394:	ldr	r0, [pc, #124]	; 19418 <sprintf@plt+0x7d7c>
   19398:	add	r0, pc, r0
   1939c:	bl	11414 <__assert_fail@plt>
   193a0:	ldr	r3, [fp, #-16]
   193a4:	cmp	r3, #0
   193a8:	bne	193cc <sprintf@plt+0x7d30>
   193ac:	ldr	r3, [pc, #104]	; 1941c <sprintf@plt+0x7d80>
   193b0:	add	r3, pc, r3
   193b4:	mov	r2, #288	; 0x120
   193b8:	ldr	r1, [pc, #96]	; 19420 <sprintf@plt+0x7d84>
   193bc:	add	r1, pc, r1
   193c0:	ldr	r0, [pc, #92]	; 19424 <sprintf@plt+0x7d88>
   193c4:	add	r0, pc, r0
   193c8:	bl	11414 <__assert_fail@plt>
   193cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   193d0:	ldr	r0, [fp, #-16]
   193d4:	bl	191d4 <sprintf@plt+0x7b38>
   193d8:	str	r0, [fp, #-8]
   193dc:	ldr	r3, [fp, #-8]
   193e0:	cmp	r3, #0
   193e4:	beq	193f8 <sprintf@plt+0x7d5c>
   193e8:	ldr	r0, [fp, #-8]
   193ec:	bl	114d4 <rb_free_rb_dlink_node@plt>
   193f0:	mov	r3, #1
   193f4:	b	193fc <sprintf@plt+0x7d60>
   193f8:	mov	r3, #0
   193fc:	mov	r0, r3
   19400:	sub	sp, fp, #4
   19404:	ldr	fp, [sp]
   19408:	add	sp, sp, #4
   1940c:	pop	{pc}		; (ldr pc, [sp], #4)
   19410:	andeq	r6, r0, r0, lsr #14
   19414:	andeq	r6, r0, r0, lsl #8
   19418:	andeq	r6, r0, r0, lsr r4
   1941c:	strdeq	r6, [r0], -r4
   19420:	ldrdeq	r6, [r0], -r4
   19424:	andeq	r6, r0, r8, ror #7
   19428:	str	fp, [sp, #-8]!
   1942c:	str	lr, [sp, #4]
   19430:	add	fp, sp, #4
   19434:	sub	sp, sp, #8
   19438:	str	r0, [fp, #-8]
   1943c:	str	r1, [fp, #-12]
   19440:	ldr	r3, [fp, #-8]
   19444:	cmp	r3, #0
   19448:	bne	1946c <sprintf@plt+0x7dd0>
   1944c:	ldr	r3, [pc, #340]	; 195a8 <sprintf@plt+0x7f0c>
   19450:	add	r3, pc, r3
   19454:	mov	r2, #324	; 0x144
   19458:	ldr	r1, [pc, #332]	; 195ac <sprintf@plt+0x7f10>
   1945c:	add	r1, pc, r1
   19460:	ldr	r0, [pc, #328]	; 195b0 <sprintf@plt+0x7f14>
   19464:	add	r0, pc, r0
   19468:	bl	11414 <__assert_fail@plt>
   1946c:	ldr	r3, [fp, #-12]
   19470:	cmp	r3, #0
   19474:	bne	19498 <sprintf@plt+0x7dfc>
   19478:	ldr	r3, [pc, #308]	; 195b4 <sprintf@plt+0x7f18>
   1947c:	add	r3, pc, r3
   19480:	movw	r2, #325	; 0x145
   19484:	ldr	r1, [pc, #300]	; 195b8 <sprintf@plt+0x7f1c>
   19488:	add	r1, pc, r1
   1948c:	ldr	r0, [pc, #296]	; 195bc <sprintf@plt+0x7f20>
   19490:	add	r0, pc, r0
   19494:	bl	11414 <__assert_fail@plt>
   19498:	ldr	r3, [fp, #-8]
   1949c:	ldr	r3, [r3]
   194a0:	cmp	r3, #0
   194a4:	beq	19594 <sprintf@plt+0x7ef8>
   194a8:	ldr	r3, [fp, #-12]
   194ac:	ldr	r3, [r3]
   194b0:	cmp	r3, #0
   194b4:	bne	19514 <sprintf@plt+0x7e78>
   194b8:	ldr	r3, [fp, #-8]
   194bc:	ldr	r2, [r3]
   194c0:	ldr	r3, [fp, #-12]
   194c4:	str	r2, [r3]
   194c8:	ldr	r3, [fp, #-8]
   194cc:	ldr	r2, [r3, #4]
   194d0:	ldr	r3, [fp, #-12]
   194d4:	str	r2, [r3, #4]
   194d8:	ldr	r3, [fp, #-8]
   194dc:	mov	r2, #0
   194e0:	str	r2, [r3, #4]
   194e4:	ldr	r3, [fp, #-8]
   194e8:	ldr	r2, [r3, #4]
   194ec:	ldr	r3, [fp, #-8]
   194f0:	str	r2, [r3]
   194f4:	ldr	r3, [fp, #-8]
   194f8:	ldr	r2, [r3, #8]
   194fc:	ldr	r3, [fp, #-12]
   19500:	str	r2, [r3, #8]
   19504:	ldr	r3, [fp, #-8]
   19508:	mov	r2, #0
   1950c:	str	r2, [r3, #8]
   19510:	b	19598 <sprintf@plt+0x7efc>
   19514:	ldr	r3, [fp, #-8]
   19518:	ldr	r3, [r3, #4]
   1951c:	ldr	r2, [fp, #-12]
   19520:	ldr	r2, [r2]
   19524:	str	r2, [r3, #8]
   19528:	ldr	r3, [fp, #-12]
   1952c:	ldr	r3, [r3]
   19530:	ldr	r2, [fp, #-8]
   19534:	ldr	r2, [r2, #4]
   19538:	str	r2, [r3, #4]
   1953c:	ldr	r3, [fp, #-8]
   19540:	ldr	r2, [r3]
   19544:	ldr	r3, [fp, #-12]
   19548:	str	r2, [r3]
   1954c:	ldr	r3, [fp, #-8]
   19550:	mov	r2, #0
   19554:	str	r2, [r3, #4]
   19558:	ldr	r3, [fp, #-8]
   1955c:	ldr	r2, [r3, #4]
   19560:	ldr	r3, [fp, #-8]
   19564:	str	r2, [r3]
   19568:	ldr	r3, [fp, #-12]
   1956c:	ldr	r2, [r3, #8]
   19570:	ldr	r3, [fp, #-8]
   19574:	ldr	r3, [r3, #8]
   19578:	add	r2, r2, r3
   1957c:	ldr	r3, [fp, #-12]
   19580:	str	r2, [r3, #8]
   19584:	ldr	r3, [fp, #-8]
   19588:	mov	r2, #0
   1958c:	str	r2, [r3, #8]
   19590:	b	19598 <sprintf@plt+0x7efc>
   19594:	nop	{0}
   19598:	sub	sp, fp, #4
   1959c:	ldr	fp, [sp]
   195a0:	add	sp, sp, #4
   195a4:	pop	{pc}		; (ldr pc, [sp], #4)
   195a8:	andeq	r6, r0, r8, lsl #13
   195ac:	andeq	r6, r0, r4, lsr r3
   195b0:	andeq	r6, r0, r4, ror r3
   195b4:	andeq	r6, r0, ip, asr r6
   195b8:	andeq	r6, r0, r8, lsl #6
   195bc:	andeq	r6, r0, r8, asr r3
   195c0:	str	fp, [sp, #-8]!
   195c4:	str	lr, [sp, #4]
   195c8:	add	fp, sp, #4
   195cc:	sub	sp, sp, #16
   195d0:	str	r0, [fp, #-16]
   195d4:	ldr	r1, [fp, #-16]
   195d8:	mov	r0, #1
   195dc:	bl	113a8 <calloc@plt>
   195e0:	mov	r3, r0
   195e4:	str	r3, [fp, #-8]
   195e8:	ldr	r3, [fp, #-8]
   195ec:	cmp	r3, #0
   195f0:	moveq	r3, #1
   195f4:	movne	r3, #0
   195f8:	uxtb	r3, r3
   195fc:	cmp	r3, #0
   19600:	beq	19608 <sprintf@plt+0x7f6c>
   19604:	bl	11570 <rb_outofmemory@plt>
   19608:	ldr	r3, [fp, #-8]
   1960c:	mov	r0, r3
   19610:	sub	sp, fp, #4
   19614:	ldr	fp, [sp]
   19618:	add	sp, sp, #4
   1961c:	pop	{pc}		; (ldr pc, [sp], #4)
   19620:	str	fp, [sp, #-8]!
   19624:	str	lr, [sp, #4]
   19628:	add	fp, sp, #4
   1962c:	sub	sp, sp, #16
   19630:	str	r0, [fp, #-16]
   19634:	ldr	r0, [fp, #-16]
   19638:	bl	114a4 <strlen@plt>
   1963c:	mov	r3, r0
   19640:	add	r3, r3, #1
   19644:	mov	r0, r3
   19648:	bl	115a0 <malloc@plt>
   1964c:	mov	r3, r0
   19650:	str	r3, [fp, #-8]
   19654:	ldr	r3, [fp, #-8]
   19658:	cmp	r3, #0
   1965c:	moveq	r3, #1
   19660:	movne	r3, #0
   19664:	uxtb	r3, r3
   19668:	cmp	r3, #0
   1966c:	beq	19674 <sprintf@plt+0x7fd8>
   19670:	bl	11570 <rb_outofmemory@plt>
   19674:	ldr	r1, [fp, #-16]
   19678:	ldr	r0, [fp, #-8]
   1967c:	bl	11504 <strcpy@plt>
   19680:	ldr	r3, [fp, #-8]
   19684:	mov	r0, r3
   19688:	sub	sp, fp, #4
   1968c:	ldr	fp, [sp]
   19690:	add	sp, sp, #4
   19694:	pop	{pc}		; (ldr pc, [sp], #4)
   19698:	str	fp, [sp, #-8]!
   1969c:	str	lr, [sp, #4]
   196a0:	add	fp, sp, #4
   196a4:	sub	sp, sp, #8
   196a8:	str	r0, [fp, #-8]
   196ac:	ldr	r3, [fp, #-8]
   196b0:	cmp	r3, #0
   196b4:	movne	r3, #1
   196b8:	moveq	r3, #0
   196bc:	uxtb	r3, r3
   196c0:	cmp	r3, #0
   196c4:	beq	196d0 <sprintf@plt+0x8034>
   196c8:	ldr	r0, [fp, #-8]
   196cc:	bl	11444 <free@plt>
   196d0:	nop	{0}
   196d4:	sub	sp, fp, #4
   196d8:	ldr	fp, [sp]
   196dc:	add	sp, sp, #4
   196e0:	pop	{pc}		; (ldr pc, [sp], #4)
   196e4:	push	{fp}		; (str fp, [sp, #-4]!)
   196e8:	add	fp, sp, #0
   196ec:	sub	sp, sp, #12
   196f0:	str	r0, [fp, #-8]
   196f4:	ldr	r3, [fp, #-8]
   196f8:	ldr	r3, [r3, #460]	; 0x1cc
   196fc:	add	r2, r3, #1
   19700:	ldr	r3, [fp, #-8]
   19704:	str	r2, [r3, #460]	; 0x1cc
   19708:	nop	{0}
   1970c:	add	sp, fp, #0
   19710:	pop	{fp}		; (ldr fp, [sp], #4)
   19714:	bx	lr
   19718:	str	fp, [sp, #-8]!
   1971c:	str	lr, [sp, #4]
   19720:	add	fp, sp, #4
   19724:	sub	sp, sp, #8
   19728:	str	r0, [fp, #-8]
   1972c:	ldr	r3, [fp, #-8]
   19730:	ldr	r3, [r3, #460]	; 0x1cc
   19734:	sub	r2, r3, #1
   19738:	ldr	r3, [fp, #-8]
   1973c:	str	r2, [r3, #460]	; 0x1cc
   19740:	ldr	r3, [fp, #-8]
   19744:	ldr	r3, [r3, #460]	; 0x1cc
   19748:	cmp	r3, #0
   1974c:	bne	19758 <sprintf@plt+0x80bc>
   19750:	ldr	r0, [fp, #-8]
   19754:	bl	138a8 <sprintf@plt+0x220c>
   19758:	nop	{0}
   1975c:	sub	sp, fp, #4
   19760:	ldr	fp, [sp]
   19764:	add	sp, sp, #4
   19768:	pop	{pc}		; (ldr pc, [sp], #4)
   1976c:	str	fp, [sp, #-8]!
   19770:	str	lr, [sp, #4]
   19774:	add	fp, sp, #4
   19778:	sub	sp, sp, #16
   1977c:	str	r0, [fp, #-16]
   19780:	ldr	r2, [pc, #120]	; 19800 <sprintf@plt+0x8164>
   19784:	add	r2, pc, r2
   19788:	ldr	r3, [pc, #116]	; 19804 <sprintf@plt+0x8168>
   1978c:	ldr	r3, [r2, r3]
   19790:	ldr	r3, [r3]
   19794:	str	r3, [fp, #-8]
   19798:	b	197dc <sprintf@plt+0x8140>
   1979c:	ldr	r3, [fp, #-8]
   197a0:	ldr	r3, [r3]
   197a4:	str	r3, [fp, #-12]
   197a8:	ldr	r3, [fp, #-12]
   197ac:	ldr	r3, [r3, #16]
   197b0:	ldr	r1, [fp, #-16]
   197b4:	mov	r0, r3
   197b8:	bl	1139c <strcasecmp@plt>
   197bc:	mov	r3, r0
   197c0:	cmp	r3, #0
   197c4:	bne	197d0 <sprintf@plt+0x8134>
   197c8:	ldr	r3, [fp, #-12]
   197cc:	b	197ec <sprintf@plt+0x8150>
   197d0:	ldr	r3, [fp, #-8]
   197d4:	ldr	r3, [r3, #8]
   197d8:	str	r3, [fp, #-8]
   197dc:	ldr	r3, [fp, #-8]
   197e0:	cmp	r3, #0
   197e4:	bne	1979c <sprintf@plt+0x8100>
   197e8:	mov	r3, #0
   197ec:	mov	r0, r3
   197f0:	sub	sp, fp, #4
   197f4:	ldr	fp, [sp]
   197f8:	add	sp, sp, #4
   197fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19800:	andeq	r7, r1, r4, ror r8
   19804:			; <UNDEFINED> instruction: 0x000001b0
   19808:	str	fp, [sp, #-8]!
   1980c:	str	lr, [sp, #4]
   19810:	add	fp, sp, #4
   19814:	sub	sp, sp, #16
   19818:	str	r0, [fp, #-16]
   1981c:	str	r1, [fp, #-20]	; 0xffffffec
   19820:	ldr	r0, [fp, #-16]
   19824:	bl	1976c <sprintf@plt+0x80d0>
   19828:	str	r0, [fp, #-8]
   1982c:	ldr	r3, [fp, #-8]
   19830:	cmp	r3, #0
   19834:	beq	19850 <sprintf@plt+0x81b4>
   19838:	ldr	r3, [fp, #-8]
   1983c:	ldr	r2, [r3, #12]
   19840:	ldr	r3, [fp, #-20]	; 0xffffffec
   19844:	str	r2, [r3]
   19848:	mov	r3, #1
   1984c:	b	19854 <sprintf@plt+0x81b8>
   19850:	mov	r3, #0
   19854:	mov	r0, r3
   19858:	sub	sp, fp, #4
   1985c:	ldr	fp, [sp]
   19860:	add	sp, sp, #4
   19864:	pop	{pc}		; (ldr pc, [sp], #4)
   19868:	push	{fp}		; (str fp, [sp, #-4]!)
   1986c:	add	fp, sp, #0
   19870:	sub	sp, sp, #12
   19874:	str	r0, [fp, #-8]
   19878:	str	r1, [fp, #-12]
   1987c:	ldr	r3, [fp, #-8]
   19880:	ldr	r2, [r3, #464]	; 0x1d0
   19884:	ldr	r3, [fp, #-12]
   19888:	lsl	r3, r3, #4
   1988c:	add	r3, r2, r3
   19890:	ldr	r3, [r3, #12]
   19894:	mov	r0, r3
   19898:	add	sp, fp, #0
   1989c:	pop	{fp}		; (ldr fp, [sp], #4)
   198a0:	bx	lr
   198a4:	str	fp, [sp, #-8]!
   198a8:	str	lr, [sp, #4]
   198ac:	add	fp, sp, #4
   198b0:	sub	sp, sp, #16
   198b4:	str	r0, [fp, #-16]
   198b8:	str	r1, [fp, #-20]	; 0xffffffec
   198bc:	sub	r3, fp, #8
   198c0:	mov	r1, r3
   198c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   198c8:	bl	19808 <sprintf@plt+0x816c>
   198cc:	mov	r3, r0
   198d0:	cmp	r3, #0
   198d4:	beq	19900 <sprintf@plt+0x8264>
   198d8:	ldr	r3, [fp, #-8]
   198dc:	mov	r1, r3
   198e0:	ldr	r0, [fp, #-16]
   198e4:	bl	19868 <sprintf@plt+0x81cc>
   198e8:	mov	r3, r0
   198ec:	cmp	r3, #2
   198f0:	moveq	r3, #1
   198f4:	movne	r3, #0
   198f8:	uxtb	r3, r3
   198fc:	b	19904 <sprintf@plt+0x8268>
   19900:	mov	r3, #1
   19904:	mov	r0, r3
   19908:	sub	sp, fp, #4
   1990c:	ldr	fp, [sp]
   19910:	add	sp, sp, #4
   19914:	pop	{pc}		; (ldr pc, [sp], #4)
   19918:	push	{fp}		; (str fp, [sp, #-4]!)
   1991c:	add	fp, sp, #0
   19920:	sub	sp, sp, #12
   19924:	str	r0, [fp, #-8]
   19928:	str	r1, [fp, #-12]
   1992c:	ldr	r3, [fp, #-8]
   19930:	ldr	r2, [r3, #464]	; 0x1d0
   19934:	ldr	r3, [fp, #-12]
   19938:	lsl	r3, r3, #4
   1993c:	add	r3, r2, r3
   19940:	ldr	r3, [r3, #8]
   19944:	mov	r0, r3
   19948:	add	sp, fp, #0
   1994c:	pop	{fp}		; (ldr fp, [sp], #4)
   19950:	bx	lr
   19954:	push	{fp}		; (str fp, [sp, #-4]!)
   19958:	add	fp, sp, #0
   1995c:	sub	sp, sp, #20
   19960:	str	r0, [fp, #-8]
   19964:	str	r1, [fp, #-12]
   19968:	str	r2, [fp, #-16]
   1996c:	ldr	r3, [fp, #-8]
   19970:	ldr	r2, [r3, #464]	; 0x1d0
   19974:	ldr	r3, [fp, #-12]
   19978:	lsl	r3, r3, #4
   1997c:	add	r3, r2, r3
   19980:	ldr	r2, [fp, #-16]
   19984:	str	r2, [r3, #8]
   19988:	nop	{0}
   1998c:	add	sp, fp, #0
   19990:	pop	{fp}		; (ldr fp, [sp], #4)
   19994:	bx	lr
   19998:	str	fp, [sp, #-8]!
   1999c:	str	lr, [sp, #4]
   199a0:	add	fp, sp, #4
   199a4:	sub	sp, sp, #16
   199a8:	str	r0, [fp, #-8]
   199ac:	str	r1, [fp, #-12]
   199b0:	str	r2, [fp, #-16]
   199b4:	bl	114b0 <rb_current_time@plt>
   199b8:	mov	r1, r0
   199bc:	ldr	r3, [fp, #-8]
   199c0:	ldr	r2, [r3, #464]	; 0x1d0
   199c4:	ldr	r3, [fp, #-12]
   199c8:	lsl	r3, r3, #4
   199cc:	add	r3, r2, r3
   199d0:	ldr	r2, [fp, #-16]
   199d4:	add	r2, r1, r2
   199d8:	str	r2, [r3, #4]
   199dc:	nop	{0}
   199e0:	sub	sp, fp, #4
   199e4:	ldr	fp, [sp]
   199e8:	add	sp, sp, #4
   199ec:	pop	{pc}		; (ldr pc, [sp], #4)
   199f0:	push	{fp}		; (str fp, [sp, #-4]!)
   199f4:	add	fp, sp, #0
   199f8:	sub	sp, sp, #20
   199fc:	str	r0, [fp, #-8]
   19a00:	str	r1, [fp, #-12]
   19a04:	str	r2, [fp, #-16]
   19a08:	ldr	r3, [fp, #-8]
   19a0c:	ldr	r2, [r3, #464]	; 0x1d0
   19a10:	ldr	r3, [fp, #-12]
   19a14:	lsl	r3, r3, #4
   19a18:	add	r3, r2, r3
   19a1c:	ldr	r2, [fp, #-16]
   19a20:	str	r2, [r3, #4]
   19a24:	nop	{0}
   19a28:	add	sp, fp, #0
   19a2c:	pop	{fp}		; (ldr fp, [sp], #4)
   19a30:	bx	lr
   19a34:	str	fp, [sp, #-8]!
   19a38:	str	lr, [sp, #4]
   19a3c:	add	fp, sp, #4
   19a40:	sub	sp, sp, #16
   19a44:	str	r0, [fp, #-16]
   19a48:	ldr	r3, [fp, #-16]
   19a4c:	ldr	r3, [r3, #788]	; 0x314
   19a50:	sub	r2, r3, #1
   19a54:	ldr	r3, [fp, #-16]
   19a58:	str	r2, [r3, #788]	; 0x314
   19a5c:	ldr	r3, [fp, #-16]
   19a60:	ldrb	r3, [r3, #784]	; 0x310
   19a64:	cmp	r3, #0
   19a68:	beq	19b18 <sprintf@plt+0x847c>
   19a6c:	ldr	r3, [fp, #-16]
   19a70:	ldr	r3, [r3, #788]	; 0x314
   19a74:	cmp	r3, #0
   19a78:	bgt	19b18 <sprintf@plt+0x847c>
   19a7c:	ldr	r3, [fp, #-16]
   19a80:	ldr	r3, [r3, #772]	; 0x304
   19a84:	str	r3, [fp, #-8]
   19a88:	ldr	r3, [fp, #-8]
   19a8c:	cmp	r3, #0
   19a90:	beq	19aa0 <sprintf@plt+0x8404>
   19a94:	ldr	r3, [fp, #-8]
   19a98:	ldr	r3, [r3, #8]
   19a9c:	b	19aa4 <sprintf@plt+0x8408>
   19aa0:	mov	r3, #0
   19aa4:	str	r3, [fp, #-12]
   19aa8:	b	19af0 <sprintf@plt+0x8454>
   19aac:	ldr	r3, [fp, #-16]
   19ab0:	add	r3, r3, #772	; 0x304
   19ab4:	mov	r1, r3
   19ab8:	ldr	r0, [fp, #-8]
   19abc:	bl	19098 <sprintf@plt+0x79fc>
   19ac0:	ldr	r0, [fp, #-8]
   19ac4:	bl	19698 <sprintf@plt+0x7ffc>
   19ac8:	ldr	r3, [fp, #-12]
   19acc:	str	r3, [fp, #-8]
   19ad0:	ldr	r3, [fp, #-8]
   19ad4:	cmp	r3, #0
   19ad8:	beq	19ae8 <sprintf@plt+0x844c>
   19adc:	ldr	r3, [fp, #-8]
   19ae0:	ldr	r3, [r3, #8]
   19ae4:	b	19aec <sprintf@plt+0x8450>
   19ae8:	mov	r3, #0
   19aec:	str	r3, [fp, #-12]
   19af0:	ldr	r3, [fp, #-8]
   19af4:	cmp	r3, #0
   19af8:	bne	19aac <sprintf@plt+0x8410>
   19afc:	ldr	r3, [pc, #40]	; 19b2c <sprintf@plt+0x8490>
   19b00:	add	r3, pc, r3
   19b04:	mov	r1, r3
   19b08:	ldr	r0, [fp, #-16]
   19b0c:	bl	1935c <sprintf@plt+0x7cc0>
   19b10:	ldr	r0, [fp, #-16]
   19b14:	bl	19698 <sprintf@plt+0x7ffc>
   19b18:	nop	{0}
   19b1c:	sub	sp, fp, #4
   19b20:	ldr	fp, [sp]
   19b24:	add	sp, sp, #4
   19b28:	pop	{pc}		; (ldr pc, [sp], #4)
   19b2c:	andeq	ip, r1, r8, asr #10
   19b30:	str	fp, [sp, #-8]!
   19b34:	str	lr, [sp, #4]
   19b38:	add	fp, sp, #4
   19b3c:	sub	sp, sp, #24
   19b40:	str	r0, [fp, #-16]
   19b44:	str	r1, [fp, #-20]	; 0xffffffec
   19b48:	str	r3, [fp, #-28]	; 0xffffffe4
   19b4c:	mov	r3, r2
   19b50:	strb	r3, [fp, #-21]	; 0xffffffeb
   19b54:	ldr	r3, [fp, #-16]
   19b58:	cmp	r3, #0
   19b5c:	beq	19b78 <sprintf@plt+0x84dc>
   19b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b64:	cmp	r3, #0
   19b68:	beq	19b78 <sprintf@plt+0x84dc>
   19b6c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   19b70:	cmp	r3, #0
   19b74:	bne	19b80 <sprintf@plt+0x84e4>
   19b78:	mov	r3, #0
   19b7c:	b	19c2c <sprintf@plt+0x8590>
   19b80:	ldr	r0, [fp, #-16]
   19b84:	bl	19c44 <sprintf@plt+0x85a8>
   19b88:	str	r0, [fp, #-8]
   19b8c:	ldr	r3, [fp, #-8]
   19b90:	cmp	r3, #0
   19b94:	bne	19bc4 <sprintf@plt+0x8528>
   19b98:	mov	r0, #800	; 0x320
   19b9c:	bl	195c0 <sprintf@plt+0x7f24>
   19ba0:	str	r0, [fp, #-8]
   19ba4:	bl	11624 <rb_make_rb_dlink_node@plt>
   19ba8:	mov	r1, r0
   19bac:	ldr	r3, [pc, #140]	; 19c40 <sprintf@plt+0x85a4>
   19bb0:	add	r3, pc, r3
   19bb4:	mov	r2, r3
   19bb8:	ldr	r0, [fp, #-8]
   19bbc:	bl	18f38 <sprintf@plt+0x789c>
   19bc0:	b	19bd0 <sprintf@plt+0x8534>
   19bc4:	ldr	r3, [fp, #-8]
   19bc8:	mov	r2, #0
   19bcc:	strb	r2, [r3, #784]	; 0x310
   19bd0:	ldr	r3, [fp, #-8]
   19bd4:	mov	r2, #256	; 0x100
   19bd8:	ldr	r1, [fp, #-16]
   19bdc:	mov	r0, r3
   19be0:	bl	11420 <rb_strlcpy@plt>
   19be4:	ldr	r3, [fp, #-8]
   19be8:	add	r3, r3, #256	; 0x100
   19bec:	mov	r2, #512	; 0x200
   19bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bf4:	mov	r0, r3
   19bf8:	bl	11420 <rb_strlcpy@plt>
   19bfc:	ldr	r3, [fp, #-8]
   19c00:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   19c04:	strb	r2, [r3, #768]	; 0x300
   19c08:	ldr	r3, [fp, #-8]
   19c0c:	add	r3, r3, #772	; 0x304
   19c10:	mov	r1, r3
   19c14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c18:	bl	19428 <sprintf@plt+0x7d8c>
   19c1c:	ldr	r3, [fp, #-8]
   19c20:	mov	r2, #0
   19c24:	str	r2, [r3, #796]	; 0x31c
   19c28:	ldr	r3, [fp, #-8]
   19c2c:	mov	r0, r3
   19c30:	sub	sp, fp, #4
   19c34:	ldr	fp, [sp]
   19c38:	add	sp, sp, #4
   19c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   19c40:	muleq	r1, r8, r4
   19c44:	str	fp, [sp, #-8]!
   19c48:	str	lr, [sp, #4]
   19c4c:	add	fp, sp, #4
   19c50:	sub	sp, sp, #16
   19c54:	str	r0, [fp, #-16]
   19c58:	ldr	r3, [pc, #108]	; 19ccc <sprintf@plt+0x8630>
   19c5c:	add	r3, pc, r3
   19c60:	ldr	r3, [r3]
   19c64:	str	r3, [fp, #-8]
   19c68:	b	19ca8 <sprintf@plt+0x860c>
   19c6c:	ldr	r3, [fp, #-8]
   19c70:	ldr	r3, [r3]
   19c74:	str	r3, [fp, #-12]
   19c78:	ldr	r3, [fp, #-12]
   19c7c:	ldr	r1, [fp, #-16]
   19c80:	mov	r0, r3
   19c84:	bl	1139c <strcasecmp@plt>
   19c88:	mov	r3, r0
   19c8c:	cmp	r3, #0
   19c90:	bne	19c9c <sprintf@plt+0x8600>
   19c94:	ldr	r3, [fp, #-12]
   19c98:	b	19cb8 <sprintf@plt+0x861c>
   19c9c:	ldr	r3, [fp, #-8]
   19ca0:	ldr	r3, [r3, #8]
   19ca4:	str	r3, [fp, #-8]
   19ca8:	ldr	r3, [fp, #-8]
   19cac:	cmp	r3, #0
   19cb0:	bne	19c6c <sprintf@plt+0x85d0>
   19cb4:	mov	r3, #0
   19cb8:	mov	r0, r3
   19cbc:	sub	sp, fp, #4
   19cc0:	ldr	fp, [sp]
   19cc4:	add	sp, sp, #4
   19cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   19ccc:	andeq	ip, r1, ip, ror #7
   19cd0:	str	r4, [sp, #-12]!
   19cd4:	str	fp, [sp, #4]
   19cd8:	str	lr, [sp, #8]
   19cdc:	add	fp, sp, #8
   19ce0:	sub	sp, sp, #36	; 0x24
   19ce4:	str	r0, [fp, #-40]	; 0xffffffd8
   19ce8:	str	r1, [fp, #-44]	; 0xffffffd4
   19cec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cf0:	ldr	r3, [r3]
   19cf4:	str	r3, [fp, #-24]	; 0xffffffe8
   19cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19cfc:	ldr	r3, [r3, #780]	; 0x30c
   19d00:	cmp	r3, #0
   19d04:	bne	19d10 <sprintf@plt+0x8674>
   19d08:	mov	r3, #1
   19d0c:	b	19e54 <sprintf@plt+0x87b8>
   19d10:	mov	r1, #46	; 0x2e
   19d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d18:	bl	113fc <strrchr@plt>
   19d1c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d24:	cmp	r3, #0
   19d28:	beq	19e08 <sprintf@plt+0x876c>
   19d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d30:	add	r3, r3, #1
   19d34:	str	r3, [fp, #-28]	; 0xffffffe4
   19d38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d3c:	ldrb	r3, [r3]
   19d40:	cmp	r3, #0
   19d44:	beq	19e08 <sprintf@plt+0x876c>
   19d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d4c:	ldr	r3, [r3, #772]	; 0x304
   19d50:	str	r3, [fp, #-16]
   19d54:	b	19df4 <sprintf@plt+0x8758>
   19d58:	ldr	r3, [fp, #-16]
   19d5c:	ldr	r3, [r3]
   19d60:	str	r3, [fp, #-32]	; 0xffffffe0
   19d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d68:	ldr	r3, [r3]
   19d6c:	cmp	r3, #1
   19d70:	bne	19d80 <sprintf@plt+0x86e4>
   19d74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19d78:	str	r3, [fp, #-20]	; 0xffffffec
   19d7c:	b	19dc0 <sprintf@plt+0x8724>
   19d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d84:	ldr	r3, [r3]
   19d88:	cmp	r3, #2
   19d8c:	bne	19d9c <sprintf@plt+0x8700>
   19d90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d94:	str	r3, [fp, #-20]	; 0xffffffec
   19d98:	b	19dc0 <sprintf@plt+0x8724>
   19d9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19da4:	ldr	r3, [r3]
   19da8:	ldr	r1, [pc, #188]	; 19e6c <sprintf@plt+0x87d0>
   19dac:	add	r1, pc, r1
   19db0:	mov	r0, #67	; 0x43
   19db4:	bl	12b00 <sprintf@plt+0x1464>
   19db8:	mov	r0, #3
   19dbc:	bl	11684 <exit@plt>
   19dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dc4:	add	r3, r3, #4
   19dc8:	mov	r1, r3
   19dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19dd0:	bl	11678 <strcmp@plt>
   19dd4:	mov	r3, r0
   19dd8:	cmp	r3, #0
   19ddc:	bne	19de8 <sprintf@plt+0x874c>
   19de0:	mov	r3, #1
   19de4:	b	19e54 <sprintf@plt+0x87b8>
   19de8:	ldr	r3, [fp, #-16]
   19dec:	ldr	r3, [r3, #8]
   19df0:	str	r3, [fp, #-16]
   19df4:	ldr	r3, [fp, #-16]
   19df8:	cmp	r3, #0
   19dfc:	bne	19d58 <sprintf@plt+0x86bc>
   19e00:	mov	r3, #0
   19e04:	b	19e54 <sprintf@plt+0x87b8>
   19e08:	nop	{0}
   19e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e10:	ldr	r3, [r3, #796]	; 0x31c
   19e14:	add	r4, r3, #3600	; 0xe10
   19e18:	bl	114b0 <rb_current_time@plt>
   19e1c:	mov	r3, r0
   19e20:	cmp	r4, r3
   19e24:	bge	19e50 <sprintf@plt+0x87b4>
   19e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19e30:	ldr	r1, [pc, #56]	; 19e70 <sprintf@plt+0x87d4>
   19e34:	add	r1, pc, r1
   19e38:	mov	r0, #87	; 0x57
   19e3c:	bl	12b00 <sprintf@plt+0x1464>
   19e40:	bl	114b0 <rb_current_time@plt>
   19e44:	mov	r2, r0
   19e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e4c:	str	r2, [r3, #796]	; 0x31c
   19e50:	mov	r3, #0
   19e54:	mov	r0, r3
   19e58:	sub	sp, fp, #8
   19e5c:	ldr	r4, [sp]
   19e60:	ldr	fp, [sp, #4]
   19e64:	add	sp, sp, #8
   19e68:	pop	{pc}		; (ldr pc, [sp], #4)
   19e6c:	andeq	r5, r0, r8, asr #20
   19e70:	strdeq	r5, [r0], -r0
   19e74:	str	r4, [sp, #-12]!
   19e78:	str	fp, [sp, #4]
   19e7c:	str	lr, [sp, #8]
   19e80:	add	fp, sp, #8
   19e84:	sub	sp, sp, #36	; 0x24
   19e88:	str	r0, [fp, #-32]	; 0xffffffe0
   19e8c:	str	r2, [fp, #-40]	; 0xffffffd8
   19e90:	str	r3, [fp, #-44]	; 0xffffffd4
   19e94:	mov	r3, r1
   19e98:	strb	r3, [fp, #-33]	; 0xffffffdf
   19e9c:	ldr	r4, [pc, #412]	; 1a040 <sprintf@plt+0x89a4>
   19ea0:	add	r4, pc, r4
   19ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19ea8:	str	r3, [fp, #-16]
   19eac:	ldr	r3, [fp, #-16]
   19eb0:	ldr	r3, [r3]
   19eb4:	str	r3, [fp, #-20]	; 0xffffffec
   19eb8:	ldr	r3, [fp, #-16]
   19ebc:	ldr	r3, [r3, #4]
   19ec0:	str	r3, [fp, #-24]	; 0xffffffe8
   19ec4:	ldr	r3, [pc, #376]	; 1a044 <sprintf@plt+0x89a8>
   19ec8:	ldr	r3, [r4, r3]
   19ecc:	ldr	r3, [r3, #12]
   19ed0:	mov	r1, r3
   19ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed8:	bl	19918 <sprintf@plt+0x827c>
   19edc:	str	r0, [fp, #-28]	; 0xffffffe4
   19ee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ee4:	cmp	r3, #0
   19ee8:	beq	1a028 <sprintf@plt+0x898c>
   19eec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ef0:	cmp	r3, #0
   19ef4:	beq	19f5c <sprintf@plt+0x88c0>
   19ef8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19efc:	cmp	r3, #0
   19f00:	beq	19f5c <sprintf@plt+0x88c0>
   19f04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19f08:	ldr	r0, [fp, #-16]
   19f0c:	bl	19cd0 <sprintf@plt+0x8634>
   19f10:	mov	r3, r0
   19f14:	cmp	r3, #0
   19f18:	beq	19f5c <sprintf@plt+0x88c0>
   19f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f20:	ldr	r3, [r3, #792]	; 0x318
   19f24:	add	r2, r3, #1
   19f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f2c:	str	r2, [r3, #792]	; 0x318
   19f30:	ldr	r3, [pc, #268]	; 1a044 <sprintf@plt+0x89a8>
   19f34:	ldr	r3, [r4, r3]
   19f38:	ldr	r1, [r3, #12]
   19f3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f44:	add	r3, r3, #256	; 0x100
   19f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f4c:	bl	13af4 <sprintf@plt+0x2458>
   19f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f54:	bl	1a81c <sprintf@plt+0x9180>
   19f58:	b	1a02c <sprintf@plt+0x8990>
   19f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f60:	bl	19a34 <sprintf@plt+0x8398>
   19f64:	ldr	r3, [fp, #-16]
   19f68:	ldr	r3, [r3, #8]
   19f6c:	mov	r0, r3
   19f70:	bl	121f8 <sprintf@plt+0xb5c>
   19f74:	ldr	r3, [fp, #-16]
   19f78:	add	r2, r3, #12
   19f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f80:	add	r3, r3, #4
   19f84:	mov	r1, r3
   19f88:	mov	r0, r2
   19f8c:	bl	19098 <sprintf@plt+0x79fc>
   19f90:	ldr	r0, [fp, #-16]
   19f94:	bl	19698 <sprintf@plt+0x7ffc>
   19f98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f9c:	ldr	r3, [r3, #12]
   19fa0:	cmp	r3, #0
   19fa4:	bne	1a02c <sprintf@plt+0x8990>
   19fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fac:	ldr	r3, [r3]
   19fb0:	ldr	r2, [pc, #144]	; 1a048 <sprintf@plt+0x89ac>
   19fb4:	add	r2, pc, r2
   19fb8:	mov	r1, r2
   19fbc:	mov	r0, r3
   19fc0:	bl	12a74 <sprintf@plt+0x13d8>
   19fc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19fc8:	bl	19698 <sprintf@plt+0x7ffc>
   19fcc:	ldr	r3, [pc, #112]	; 1a044 <sprintf@plt+0x89a8>
   19fd0:	ldr	r3, [r4, r3]
   19fd4:	ldr	r3, [r3, #12]
   19fd8:	mov	r2, #0
   19fdc:	mov	r1, r3
   19fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fe4:	bl	19954 <sprintf@plt+0x82b8>
   19fe8:	ldr	r3, [pc, #84]	; 1a044 <sprintf@plt+0x89a8>
   19fec:	ldr	r3, [r4, r3]
   19ff0:	ldr	r3, [r3, #12]
   19ff4:	mov	r2, #0
   19ff8:	mov	r1, r3
   19ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a000:	bl	199f0 <sprintf@plt+0x8354>
   1a004:	ldr	r3, [pc, #56]	; 1a044 <sprintf@plt+0x89a8>
   1a008:	ldr	r3, [r4, r3]
   1a00c:	ldr	r3, [r3, #12]
   1a010:	mov	r1, r3
   1a014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a018:	bl	139f8 <sprintf@plt+0x235c>
   1a01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a020:	bl	19718 <sprintf@plt+0x807c>
   1a024:	b	1a02c <sprintf@plt+0x8990>
   1a028:	nop	{0}
   1a02c:	sub	sp, fp, #8
   1a030:	ldr	r4, [sp]
   1a034:	ldr	fp, [sp, #4]
   1a038:	add	sp, sp, #8
   1a03c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a040:	andeq	r7, r1, r8, asr r1
   1a044:	muleq	r0, r8, r1
   1a048:			; <UNDEFINED> instruction: 0x000058b0
   1a04c:	str	r4, [sp, #-12]!
   1a050:	str	fp, [sp, #4]
   1a054:	str	lr, [sp, #8]
   1a058:	add	fp, sp, #8
   1a05c:	sub	sp, sp, #284	; 0x11c
   1a060:	str	r0, [fp, #-288]	; 0xfffffee0
   1a064:	str	r1, [fp, #-292]	; 0xfffffedc
   1a068:	ldr	r4, [pc, #284]	; 1a18c <sprintf@plt+0x8af0>
   1a06c:	add	r4, pc, r4
   1a070:	mov	r0, #24
   1a074:	bl	195c0 <sprintf@plt+0x7f24>
   1a078:	str	r0, [fp, #-16]
   1a07c:	ldr	r3, [pc, #268]	; 1a190 <sprintf@plt+0x8af4>
   1a080:	ldr	r3, [r4, r3]
   1a084:	ldr	r3, [r3, #12]
   1a088:	mov	r1, r3
   1a08c:	ldr	r0, [fp, #-292]	; 0xfffffedc
   1a090:	bl	19918 <sprintf@plt+0x827c>
   1a094:	str	r0, [fp, #-20]	; 0xffffffec
   1a098:	ldr	r3, [fp, #-16]
   1a09c:	ldr	r2, [fp, #-288]	; 0xfffffee0
   1a0a0:	str	r2, [r3]
   1a0a4:	ldr	r3, [fp, #-16]
   1a0a8:	ldr	r2, [fp, #-292]	; 0xfffffedc
   1a0ac:	str	r2, [r3, #4]
   1a0b0:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a0b4:	add	r3, r3, #248	; 0xf8
   1a0b8:	ldrh	r3, [r3]
   1a0bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1a0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0c4:	cmp	r3, #2
   1a0c8:	bne	1a0e0 <sprintf@plt+0x8a44>
   1a0cc:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1a0d0:	ldrb	r3, [r3, #768]	; 0x300
   1a0d4:	and	r3, r3, #1
   1a0d8:	cmp	r3, #0
   1a0dc:	beq	1a100 <sprintf@plt+0x8a64>
   1a0e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0e4:	cmp	r3, #10
   1a0e8:	bne	1a10c <sprintf@plt+0x8a70>
   1a0ec:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1a0f0:	ldrb	r3, [r3, #768]	; 0x300
   1a0f4:	and	r3, r3, #2
   1a0f8:	cmp	r3, #0
   1a0fc:	bne	1a10c <sprintf@plt+0x8a70>
   1a100:	ldr	r0, [fp, #-16]
   1a104:	bl	19698 <sprintf@plt+0x7ffc>
   1a108:	b	1a178 <sprintf@plt+0x8adc>
   1a10c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a110:	add	r2, r3, #248	; 0xf8
   1a114:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1a118:	sub	r0, fp, #280	; 0x118
   1a11c:	mov	r1, #256	; 0x100
   1a120:	bl	154dc <sprintf@plt+0x3e40>
   1a124:	sub	r0, fp, #280	; 0x118
   1a128:	ldr	r3, [fp, #-16]
   1a12c:	ldr	r2, [pc, #96]	; 1a194 <sprintf@plt+0x8af8>
   1a130:	add	r2, pc, r2
   1a134:	mov	r1, #2
   1a138:	bl	11f68 <sprintf@plt+0x8cc>
   1a13c:	mov	r2, r0
   1a140:	ldr	r3, [fp, #-16]
   1a144:	str	r2, [r3, #8]
   1a148:	ldr	r3, [fp, #-16]
   1a14c:	add	r1, r3, #12
   1a150:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a154:	add	r3, r3, #4
   1a158:	mov	r2, r3
   1a15c:	ldr	r0, [fp, #-16]
   1a160:	bl	18f38 <sprintf@plt+0x789c>
   1a164:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1a168:	ldr	r3, [r3, #788]	; 0x314
   1a16c:	add	r2, r3, #1
   1a170:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1a174:	str	r2, [r3, #788]	; 0x314
   1a178:	sub	sp, fp, #8
   1a17c:	ldr	r4, [sp]
   1a180:	ldr	fp, [sp, #4]
   1a184:	add	sp, sp, #8
   1a188:	pop	{pc}		; (ldr pc, [sp], #4)
   1a18c:	andeq	r6, r1, ip, lsl #31
   1a190:	muleq	r0, r8, r1
   1a194:			; <UNDEFINED> instruction: 0xfffffd3c
   1a198:	str	r4, [sp, #-12]!
   1a19c:	str	fp, [sp, #4]
   1a1a0:	str	lr, [sp, #8]
   1a1a4:	add	fp, sp, #8
   1a1a8:	sub	sp, sp, #28
   1a1ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1a1b0:	ldr	r4, [pc, #348]	; 1a314 <sprintf@plt+0x8c78>
   1a1b4:	add	r4, pc, r4
   1a1b8:	ldr	r3, [pc, #344]	; 1a318 <sprintf@plt+0x8c7c>
   1a1bc:	ldr	r3, [r4, r3]
   1a1c0:	ldr	r3, [r3, #12]
   1a1c4:	mov	r1, r3
   1a1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1cc:	bl	19918 <sprintf@plt+0x827c>
   1a1d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a1d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1d8:	add	r3, r3, #248	; 0xf8
   1a1dc:	ldrh	r3, [r3]
   1a1e0:	cmp	r3, #2
   1a1e4:	bne	1a1f4 <sprintf@plt+0x8b58>
   1a1e8:	mov	r3, #1
   1a1ec:	str	r3, [fp, #-20]	; 0xffffffec
   1a1f0:	b	1a21c <sprintf@plt+0x8b80>
   1a1f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1f8:	add	r3, r3, #248	; 0xf8
   1a1fc:	ldrh	r3, [r3]
   1a200:	cmp	r3, #10
   1a204:	bne	1a214 <sprintf@plt+0x8b78>
   1a208:	mov	r3, #2
   1a20c:	str	r3, [fp, #-20]	; 0xffffffec
   1a210:	b	1a21c <sprintf@plt+0x8b80>
   1a214:	mov	r3, #0
   1a218:	b	1a2fc <sprintf@plt+0x8c60>
   1a21c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a220:	mov	r2, #1
   1a224:	strb	r2, [r3]
   1a228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a22c:	ldr	r3, [r3]
   1a230:	ldr	r2, [pc, #228]	; 1a31c <sprintf@plt+0x8c80>
   1a234:	add	r2, pc, r2
   1a238:	mov	r1, r2
   1a23c:	mov	r0, r3
   1a240:	bl	12a74 <sprintf@plt+0x13d8>
   1a244:	ldr	r3, [pc, #212]	; 1a320 <sprintf@plt+0x8c84>
   1a248:	add	r3, pc, r3
   1a24c:	ldr	r3, [r3]
   1a250:	str	r3, [fp, #-16]
   1a254:	b	1a2b0 <sprintf@plt+0x8c14>
   1a258:	ldr	r3, [fp, #-16]
   1a25c:	ldr	r3, [r3]
   1a260:	str	r3, [fp, #-28]	; 0xffffffe4
   1a264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a268:	ldrb	r3, [r3, #784]	; 0x310
   1a26c:	eor	r3, r3, #1
   1a270:	uxtb	r3, r3
   1a274:	cmp	r3, #0
   1a278:	beq	1a2a4 <sprintf@plt+0x8c08>
   1a27c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a280:	ldrb	r3, [r3, #768]	; 0x300
   1a284:	mov	r2, r3
   1a288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a28c:	and	r3, r3, r2
   1a290:	cmp	r3, #0
   1a294:	beq	1a2a4 <sprintf@plt+0x8c08>
   1a298:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a29c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a2a0:	bl	1a04c <sprintf@plt+0x89b0>
   1a2a4:	ldr	r3, [fp, #-16]
   1a2a8:	ldr	r3, [r3, #8]
   1a2ac:	str	r3, [fp, #-16]
   1a2b0:	ldr	r3, [fp, #-16]
   1a2b4:	cmp	r3, #0
   1a2b8:	bne	1a258 <sprintf@plt+0x8bbc>
   1a2bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a2c0:	ldr	r3, [r3, #12]
   1a2c4:	cmp	r3, #0
   1a2c8:	bne	1a2d4 <sprintf@plt+0x8c38>
   1a2cc:	mov	r3, #0
   1a2d0:	b	1a2fc <sprintf@plt+0x8c60>
   1a2d4:	ldr	r3, [pc, #60]	; 1a318 <sprintf@plt+0x8c7c>
   1a2d8:	ldr	r3, [r4, r3]
   1a2dc:	ldr	r1, [r3, #12]
   1a2e0:	ldr	r3, [pc, #60]	; 1a324 <sprintf@plt+0x8c88>
   1a2e4:	add	r3, pc, r3
   1a2e8:	ldr	r3, [r3]
   1a2ec:	mov	r2, r3
   1a2f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2f4:	bl	19998 <sprintf@plt+0x82fc>
   1a2f8:	mov	r3, #1
   1a2fc:	mov	r0, r3
   1a300:	sub	sp, fp, #8
   1a304:	ldr	r4, [sp]
   1a308:	ldr	fp, [sp, #4]
   1a30c:	add	sp, sp, #8
   1a310:	pop	{pc}		; (ldr pc, [sp], #4)
   1a314:	andeq	r6, r1, r4, asr #28
   1a318:	muleq	r0, r8, r1
   1a31c:	andeq	r5, r0, r8, asr r6
   1a320:	andeq	fp, r1, r0, lsl #28
   1a324:	ldrdeq	r7, [r1], -r0
   1a328:	str	fp, [sp, #-8]!
   1a32c:	str	lr, [sp, #4]
   1a330:	add	fp, sp, #4
   1a334:	sub	sp, sp, #8
   1a338:	str	r0, [fp, #-8]
   1a33c:	ldr	r3, [fp, #-8]
   1a340:	ldr	r3, [r3, #788]	; 0x314
   1a344:	cmp	r3, #0
   1a348:	ble	1a35c <sprintf@plt+0x8cc0>
   1a34c:	ldr	r3, [fp, #-8]
   1a350:	mov	r2, #1
   1a354:	strb	r2, [r3, #784]	; 0x310
   1a358:	b	1a378 <sprintf@plt+0x8cdc>
   1a35c:	ldr	r3, [pc, #40]	; 1a38c <sprintf@plt+0x8cf0>
   1a360:	add	r3, pc, r3
   1a364:	mov	r1, r3
   1a368:	ldr	r0, [fp, #-8]
   1a36c:	bl	1935c <sprintf@plt+0x7cc0>
   1a370:	ldr	r0, [fp, #-8]
   1a374:	bl	19698 <sprintf@plt+0x7ffc>
   1a378:	nop	{0}
   1a37c:	sub	sp, fp, #4
   1a380:	ldr	fp, [sp]
   1a384:	add	sp, sp, #4
   1a388:	pop	{pc}		; (ldr pc, [sp], #4)
   1a38c:	andeq	fp, r1, r8, ror #25
   1a390:	str	fp, [sp, #-8]!
   1a394:	str	lr, [sp, #4]
   1a398:	add	fp, sp, #4
   1a39c:	sub	sp, sp, #8
   1a3a0:	ldr	r3, [pc, #132]	; 1a42c <sprintf@plt+0x8d90>
   1a3a4:	add	r3, pc, r3
   1a3a8:	ldr	r3, [r3]
   1a3ac:	str	r3, [fp, #-8]
   1a3b0:	ldr	r3, [fp, #-8]
   1a3b4:	cmp	r3, #0
   1a3b8:	beq	1a3c8 <sprintf@plt+0x8d2c>
   1a3bc:	ldr	r3, [fp, #-8]
   1a3c0:	ldr	r3, [r3, #8]
   1a3c4:	b	1a3cc <sprintf@plt+0x8d30>
   1a3c8:	mov	r3, #0
   1a3cc:	str	r3, [fp, #-12]
   1a3d0:	b	1a40c <sprintf@plt+0x8d70>
   1a3d4:	ldr	r3, [fp, #-8]
   1a3d8:	ldr	r3, [r3]
   1a3dc:	mov	r0, r3
   1a3e0:	bl	1a328 <sprintf@plt+0x8c8c>
   1a3e4:	ldr	r3, [fp, #-12]
   1a3e8:	str	r3, [fp, #-8]
   1a3ec:	ldr	r3, [fp, #-8]
   1a3f0:	cmp	r3, #0
   1a3f4:	beq	1a404 <sprintf@plt+0x8d68>
   1a3f8:	ldr	r3, [fp, #-8]
   1a3fc:	ldr	r3, [r3, #8]
   1a400:	b	1a408 <sprintf@plt+0x8d6c>
   1a404:	mov	r3, #0
   1a408:	str	r3, [fp, #-12]
   1a40c:	ldr	r3, [fp, #-8]
   1a410:	cmp	r3, #0
   1a414:	bne	1a3d4 <sprintf@plt+0x8d38>
   1a418:	nop	{0}
   1a41c:	sub	sp, fp, #4
   1a420:	ldr	fp, [sp]
   1a424:	add	sp, sp, #4
   1a428:	pop	{pc}		; (ldr pc, [sp], #4)
   1a42c:	andeq	fp, r1, r4, lsr #25
   1a430:	str	r4, [sp, #-12]!
   1a434:	str	fp, [sp, #4]
   1a438:	str	lr, [sp, #8]
   1a43c:	add	fp, sp, #8
   1a440:	sub	sp, sp, #12
   1a444:	str	r0, [fp, #-16]
   1a448:	ldr	r4, [pc, #236]	; 1a53c <sprintf@plt+0x8ea0>
   1a44c:	add	r4, pc, r4
   1a450:	ldr	r3, [pc, #232]	; 1a540 <sprintf@plt+0x8ea4>
   1a454:	add	r3, pc, r3
   1a458:	ldr	r3, [r3, #8]
   1a45c:	cmp	r3, #0
   1a460:	bne	1a484 <sprintf@plt+0x8de8>
   1a464:	ldr	r3, [pc, #216]	; 1a544 <sprintf@plt+0x8ea8>
   1a468:	ldr	r3, [r4, r3]
   1a46c:	ldr	r3, [r3, #12]
   1a470:	mov	r1, r3
   1a474:	ldr	r0, [fp, #-16]
   1a478:	bl	139f8 <sprintf@plt+0x235c>
   1a47c:	mov	r3, #1
   1a480:	b	1a524 <sprintf@plt+0x8e88>
   1a484:	ldr	r0, [fp, #-16]
   1a488:	bl	196e4 <sprintf@plt+0x8048>
   1a48c:	ldr	r3, [pc, #176]	; 1a544 <sprintf@plt+0x8ea8>
   1a490:	ldr	r3, [r4, r3]
   1a494:	ldr	r4, [r3, #12]
   1a498:	mov	r0, #16
   1a49c:	bl	195c0 <sprintf@plt+0x7f24>
   1a4a0:	mov	r3, r0
   1a4a4:	mov	r2, r3
   1a4a8:	mov	r1, r4
   1a4ac:	ldr	r0, [fp, #-16]
   1a4b0:	bl	19954 <sprintf@plt+0x82b8>
   1a4b4:	ldr	r3, [pc, #140]	; 1a548 <sprintf@plt+0x8eac>
   1a4b8:	add	r3, pc, r3
   1a4bc:	mov	r1, r3
   1a4c0:	ldr	r0, [fp, #-16]
   1a4c4:	bl	198a4 <sprintf@plt+0x8208>
   1a4c8:	mov	r3, r0
   1a4cc:	cmp	r3, #0
   1a4d0:	beq	1a520 <sprintf@plt+0x8e84>
   1a4d4:	ldr	r3, [pc, #112]	; 1a54c <sprintf@plt+0x8eb0>
   1a4d8:	add	r3, pc, r3
   1a4dc:	mov	r1, r3
   1a4e0:	ldr	r0, [fp, #-16]
   1a4e4:	bl	198a4 <sprintf@plt+0x8208>
   1a4e8:	mov	r3, r0
   1a4ec:	cmp	r3, #0
   1a4f0:	beq	1a520 <sprintf@plt+0x8e84>
   1a4f4:	ldr	r0, [fp, #-16]
   1a4f8:	bl	1a198 <sprintf@plt+0x8afc>
   1a4fc:	mov	r3, r0
   1a500:	eor	r3, r3, #1
   1a504:	uxtb	r3, r3
   1a508:	cmp	r3, #0
   1a50c:	beq	1a520 <sprintf@plt+0x8e84>
   1a510:	ldr	r0, [fp, #-16]
   1a514:	bl	1a85c <sprintf@plt+0x91c0>
   1a518:	mov	r3, #1
   1a51c:	b	1a524 <sprintf@plt+0x8e88>
   1a520:	mov	r3, #1
   1a524:	mov	r0, r3
   1a528:	sub	sp, fp, #8
   1a52c:	ldr	r4, [sp]
   1a530:	ldr	fp, [sp, #4]
   1a534:	add	sp, sp, #8
   1a538:	pop	{pc}		; (ldr pc, [sp], #4)
   1a53c:	andeq	r6, r1, ip, lsr #23
   1a540:	strdeq	fp, [r1], -r4
   1a544:	muleq	r0, r8, r1
   1a548:	strdeq	r5, [r0], -r8
   1a54c:	andeq	r5, r0, r0, ror #7
   1a550:	str	fp, [sp, #-8]!
   1a554:	str	lr, [sp, #4]
   1a558:	add	fp, sp, #4
   1a55c:	sub	sp, sp, #16
   1a560:	str	r0, [fp, #-16]
   1a564:	str	r1, [fp, #-20]	; 0xffffffec
   1a568:	ldr	r2, [pc, #180]	; 1a624 <sprintf@plt+0x8f88>
   1a56c:	add	r2, pc, r2
   1a570:	ldr	r3, [pc, #176]	; 1a628 <sprintf@plt+0x8f8c>
   1a574:	ldr	r3, [r2, r3]
   1a578:	ldr	r3, [r3, #12]
   1a57c:	mov	r1, r3
   1a580:	ldr	r0, [fp, #-16]
   1a584:	bl	19918 <sprintf@plt+0x827c>
   1a588:	str	r0, [fp, #-8]
   1a58c:	ldr	r3, [fp, #-8]
   1a590:	cmp	r3, #0
   1a594:	beq	1a610 <sprintf@plt+0x8f74>
   1a598:	ldr	r3, [fp, #-8]
   1a59c:	ldrb	r3, [r3]
   1a5a0:	cmp	r3, #0
   1a5a4:	bne	1a610 <sprintf@plt+0x8f74>
   1a5a8:	ldr	r3, [pc, #124]	; 1a62c <sprintf@plt+0x8f90>
   1a5ac:	add	r3, pc, r3
   1a5b0:	mov	r1, r3
   1a5b4:	ldr	r0, [fp, #-16]
   1a5b8:	bl	198a4 <sprintf@plt+0x8208>
   1a5bc:	mov	r3, r0
   1a5c0:	cmp	r3, #0
   1a5c4:	beq	1a614 <sprintf@plt+0x8f78>
   1a5c8:	ldr	r3, [pc, #96]	; 1a630 <sprintf@plt+0x8f94>
   1a5cc:	add	r3, pc, r3
   1a5d0:	mov	r1, r3
   1a5d4:	ldr	r0, [fp, #-16]
   1a5d8:	bl	198a4 <sprintf@plt+0x8208>
   1a5dc:	mov	r3, r0
   1a5e0:	cmp	r3, #0
   1a5e4:	beq	1a614 <sprintf@plt+0x8f78>
   1a5e8:	ldr	r0, [fp, #-16]
   1a5ec:	bl	1a198 <sprintf@plt+0x8afc>
   1a5f0:	mov	r3, r0
   1a5f4:	eor	r3, r3, #1
   1a5f8:	uxtb	r3, r3
   1a5fc:	cmp	r3, #0
   1a600:	beq	1a614 <sprintf@plt+0x8f78>
   1a604:	ldr	r0, [fp, #-16]
   1a608:	bl	1a85c <sprintf@plt+0x91c0>
   1a60c:	b	1a614 <sprintf@plt+0x8f78>
   1a610:	nop	{0}
   1a614:	sub	sp, fp, #4
   1a618:	ldr	fp, [sp]
   1a61c:	add	sp, sp, #4
   1a620:	pop	{pc}		; (ldr pc, [sp], #4)
   1a624:	andeq	r6, r1, ip, lsl #21
   1a628:	muleq	r0, r8, r1
   1a62c:	andeq	r5, r0, r4, lsl #6
   1a630:	andeq	r5, r0, ip, ror #5
   1a634:	str	r4, [sp, #-12]!
   1a638:	str	fp, [sp, #4]
   1a63c:	str	lr, [sp, #8]
   1a640:	add	fp, sp, #8
   1a644:	sub	sp, sp, #28
   1a648:	str	r0, [fp, #-32]	; 0xffffffe0
   1a64c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a650:	ldr	r4, [pc, #380]	; 1a7d4 <sprintf@plt+0x9138>
   1a654:	add	r4, pc, r4
   1a658:	ldr	r3, [pc, #376]	; 1a7d8 <sprintf@plt+0x913c>
   1a65c:	ldr	r3, [r4, r3]
   1a660:	ldr	r3, [r3, #12]
   1a664:	mov	r1, r3
   1a668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a66c:	bl	19918 <sprintf@plt+0x827c>
   1a670:	str	r0, [fp, #-24]	; 0xffffffe8
   1a674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a678:	cmp	r3, #0
   1a67c:	beq	1a7bc <sprintf@plt+0x9120>
   1a680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a684:	ldr	r3, [r3, #12]
   1a688:	cmp	r3, #0
   1a68c:	beq	1a758 <sprintf@plt+0x90bc>
   1a690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a694:	ldr	r3, [r3]
   1a698:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a69c:	mov	r0, r3
   1a6a0:	bl	12a74 <sprintf@plt+0x13d8>
   1a6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6a8:	ldr	r3, [r3, #4]
   1a6ac:	str	r3, [fp, #-16]
   1a6b0:	ldr	r3, [fp, #-16]
   1a6b4:	cmp	r3, #0
   1a6b8:	beq	1a6c8 <sprintf@plt+0x902c>
   1a6bc:	ldr	r3, [fp, #-16]
   1a6c0:	ldr	r3, [r3, #8]
   1a6c4:	b	1a6cc <sprintf@plt+0x9030>
   1a6c8:	mov	r3, #0
   1a6cc:	str	r3, [fp, #-20]	; 0xffffffec
   1a6d0:	b	1a74c <sprintf@plt+0x90b0>
   1a6d4:	ldr	r3, [fp, #-16]
   1a6d8:	ldr	r3, [r3]
   1a6dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1a6e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6e4:	ldr	r3, [r3, #8]
   1a6e8:	mov	r0, r3
   1a6ec:	bl	121f8 <sprintf@plt+0xb5c>
   1a6f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6f4:	ldr	r3, [r3]
   1a6f8:	mov	r0, r3
   1a6fc:	bl	19a34 <sprintf@plt+0x8398>
   1a700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a704:	add	r2, r3, #12
   1a708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a70c:	add	r3, r3, #4
   1a710:	mov	r1, r3
   1a714:	mov	r0, r2
   1a718:	bl	19098 <sprintf@plt+0x79fc>
   1a71c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a720:	bl	19698 <sprintf@plt+0x7ffc>
   1a724:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a728:	str	r3, [fp, #-16]
   1a72c:	ldr	r3, [fp, #-16]
   1a730:	cmp	r3, #0
   1a734:	beq	1a744 <sprintf@plt+0x90a8>
   1a738:	ldr	r3, [fp, #-16]
   1a73c:	ldr	r3, [r3, #8]
   1a740:	b	1a748 <sprintf@plt+0x90ac>
   1a744:	mov	r3, #0
   1a748:	str	r3, [fp, #-20]	; 0xffffffec
   1a74c:	ldr	r3, [fp, #-16]
   1a750:	cmp	r3, #0
   1a754:	bne	1a6d4 <sprintf@plt+0x9038>
   1a758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a75c:	bl	19698 <sprintf@plt+0x7ffc>
   1a760:	ldr	r3, [pc, #112]	; 1a7d8 <sprintf@plt+0x913c>
   1a764:	ldr	r3, [r4, r3]
   1a768:	ldr	r3, [r3, #12]
   1a76c:	mov	r2, #0
   1a770:	mov	r1, r3
   1a774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a778:	bl	19954 <sprintf@plt+0x82b8>
   1a77c:	ldr	r3, [pc, #84]	; 1a7d8 <sprintf@plt+0x913c>
   1a780:	ldr	r3, [r4, r3]
   1a784:	ldr	r3, [r3, #12]
   1a788:	mov	r2, #0
   1a78c:	mov	r1, r3
   1a790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a794:	bl	199f0 <sprintf@plt+0x8354>
   1a798:	ldr	r3, [pc, #56]	; 1a7d8 <sprintf@plt+0x913c>
   1a79c:	ldr	r3, [r4, r3]
   1a7a0:	ldr	r3, [r3, #12]
   1a7a4:	mov	r1, r3
   1a7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7ac:	bl	139f8 <sprintf@plt+0x235c>
   1a7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7b4:	bl	19718 <sprintf@plt+0x807c>
   1a7b8:	b	1a7c0 <sprintf@plt+0x9124>
   1a7bc:	nop	{0}
   1a7c0:	sub	sp, fp, #8
   1a7c4:	ldr	r4, [sp]
   1a7c8:	ldr	fp, [sp, #4]
   1a7cc:	add	sp, sp, #8
   1a7d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7d4:	andeq	r6, r1, r4, lsr #19
   1a7d8:	muleq	r0, r8, r1
   1a7dc:	str	fp, [sp, #-8]!
   1a7e0:	str	lr, [sp, #4]
   1a7e4:	add	fp, sp, #4
   1a7e8:	sub	sp, sp, #8
   1a7ec:	str	r0, [fp, #-8]
   1a7f0:	ldr	r3, [pc, #32]	; 1a818 <sprintf@plt+0x917c>
   1a7f4:	add	r3, pc, r3
   1a7f8:	mov	r1, r3
   1a7fc:	ldr	r0, [fp, #-8]
   1a800:	bl	1a634 <sprintf@plt+0x8f98>
   1a804:	nop	{0}
   1a808:	sub	sp, fp, #4
   1a80c:	ldr	fp, [sp]
   1a810:	add	sp, sp, #4
   1a814:	pop	{pc}		; (ldr pc, [sp], #4)
   1a818:	andeq	r5, r0, ip, asr #1
   1a81c:	str	fp, [sp, #-8]!
   1a820:	str	lr, [sp, #4]
   1a824:	add	fp, sp, #4
   1a828:	sub	sp, sp, #8
   1a82c:	str	r0, [fp, #-8]
   1a830:	ldr	r3, [pc, #32]	; 1a858 <sprintf@plt+0x91bc>
   1a834:	add	r3, pc, r3
   1a838:	mov	r1, r3
   1a83c:	ldr	r0, [fp, #-8]
   1a840:	bl	1a634 <sprintf@plt+0x8f98>
   1a844:	nop	{0}
   1a848:	sub	sp, fp, #4
   1a84c:	ldr	fp, [sp]
   1a850:	add	sp, sp, #4
   1a854:	pop	{pc}		; (ldr pc, [sp], #4)
   1a858:	andeq	r5, r0, r8, lsr #1
   1a85c:	str	fp, [sp, #-8]!
   1a860:	str	lr, [sp, #4]
   1a864:	add	fp, sp, #4
   1a868:	sub	sp, sp, #8
   1a86c:	str	r0, [fp, #-8]
   1a870:	ldr	r3, [pc, #32]	; 1a898 <sprintf@plt+0x91fc>
   1a874:	add	r3, pc, r3
   1a878:	mov	r1, r3
   1a87c:	ldr	r0, [fp, #-8]
   1a880:	bl	1a634 <sprintf@plt+0x8f98>
   1a884:	nop	{0}
   1a888:	sub	sp, fp, #4
   1a88c:	ldr	fp, [sp]
   1a890:	add	sp, sp, #4
   1a894:	pop	{pc}		; (ldr pc, [sp], #4)
   1a898:	andeq	r5, r0, r4, lsl #1
   1a89c:	str	r4, [sp, #-12]!
   1a8a0:	str	fp, [sp, #4]
   1a8a4:	str	lr, [sp, #8]
   1a8a8:	add	fp, sp, #8
   1a8ac:	sub	sp, sp, #20
   1a8b0:	ldr	r4, [pc, #140]	; 1a944 <sprintf@plt+0x92a8>
   1a8b4:	add	r4, pc, r4
   1a8b8:	ldr	r3, [pc, #136]	; 1a948 <sprintf@plt+0x92ac>
   1a8bc:	ldr	r3, [r4, r3]
   1a8c0:	ldr	r3, [r3]
   1a8c4:	sub	r2, fp, #24
   1a8c8:	mov	r1, r2
   1a8cc:	mov	r0, r3
   1a8d0:	bl	11480 <rb_dictionary_foreach_start@plt>
   1a8d4:	b	1a8fc <sprintf@plt+0x9260>
   1a8d8:	ldr	r0, [fp, #-16]
   1a8dc:	bl	1a81c <sprintf@plt+0x9180>
   1a8e0:	ldr	r3, [pc, #96]	; 1a948 <sprintf@plt+0x92ac>
   1a8e4:	ldr	r3, [r4, r3]
   1a8e8:	ldr	r3, [r3]
   1a8ec:	sub	r2, fp, #24
   1a8f0:	mov	r1, r2
   1a8f4:	mov	r0, r3
   1a8f8:	bl	11438 <rb_dictionary_foreach_next@plt>
   1a8fc:	ldr	r3, [pc, #68]	; 1a948 <sprintf@plt+0x92ac>
   1a900:	ldr	r3, [r4, r3]
   1a904:	ldr	r3, [r3]
   1a908:	sub	r2, fp, #24
   1a90c:	mov	r1, r2
   1a910:	mov	r0, r3
   1a914:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1a918:	str	r0, [fp, #-16]
   1a91c:	ldr	r3, [fp, #-16]
   1a920:	cmp	r3, #0
   1a924:	bne	1a8d8 <sprintf@plt+0x923c>
   1a928:	bl	1a390 <sprintf@plt+0x8cf4>
   1a92c:	nop	{0}
   1a930:	sub	sp, fp, #8
   1a934:	ldr	r4, [sp]
   1a938:	ldr	fp, [sp, #4]
   1a93c:	add	sp, sp, #8
   1a940:	pop	{pc}		; (ldr pc, [sp], #4)
   1a944:	andeq	r6, r1, r4, asr #14
   1a948:	andeq	r0, r0, r8, ror #2
   1a94c:	str	fp, [sp, #-8]!
   1a950:	str	lr, [sp, #4]
   1a954:	add	fp, sp, #4
   1a958:	sub	sp, sp, #64	; 0x40
   1a95c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a960:	str	r1, [fp, #-60]	; 0xffffffc4
   1a964:	str	r2, [fp, #-64]	; 0xffffffc0
   1a968:	mov	r3, #0
   1a96c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a970:	mov	r3, #0
   1a974:	str	r3, [fp, #-40]	; 0xffffffd8
   1a978:	mov	r3, #0
   1a97c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a980:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a984:	add	r3, r3, #8
   1a988:	ldr	r3, [r3]
   1a98c:	mov	r0, r3
   1a990:	bl	19620 <sprintf@plt+0x7f84>
   1a994:	str	r0, [fp, #-24]	; 0xffffffe8
   1a998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a99c:	ldrb	r3, [r3]
   1a9a0:	cmp	r3, #42	; 0x2a
   1a9a4:	beq	1ab54 <sprintf@plt+0x94b8>
   1a9a8:	sub	r3, fp, #48	; 0x30
   1a9ac:	mov	r2, r3
   1a9b0:	ldr	r3, [pc, #552]	; 1abe0 <sprintf@plt+0x9544>
   1a9b4:	add	r3, pc, r3
   1a9b8:	mov	r1, r3
   1a9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9c0:	bl	11378 <rb_strtok_r@plt>
   1a9c4:	str	r0, [fp, #-8]
   1a9c8:	b	1ab44 <sprintf@plt+0x94a8>
   1a9cc:	mov	r0, #72	; 0x48
   1a9d0:	bl	195c0 <sprintf@plt+0x7f24>
   1a9d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a9d8:	mov	r3, #0
   1a9dc:	str	r3, [fp, #-12]
   1a9e0:	mov	r3, #2
   1a9e4:	str	r3, [fp, #-16]
   1a9e8:	ldr	r3, [fp, #-8]
   1a9ec:	str	r3, [fp, #-20]	; 0xffffffec
   1a9f0:	b	1aaa4 <sprintf@plt+0x9408>
   1a9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a9f8:	ldrb	r3, [r3]
   1a9fc:	cmp	r3, #46	; 0x2e
   1aa00:	bne	1aa44 <sprintf@plt+0x93a8>
   1aa04:	ldr	r3, [fp, #-12]
   1aa08:	add	r3, r3, #1
   1aa0c:	str	r3, [fp, #-12]
   1aa10:	ldr	r3, [fp, #-12]
   1aa14:	cmp	r3, #3
   1aa18:	ble	1aa38 <sprintf@plt+0x939c>
   1aa1c:	ldr	r3, [pc, #448]	; 1abe4 <sprintf@plt+0x9548>
   1aa20:	add	r3, pc, r3
   1aa24:	mov	r1, r3
   1aa28:	mov	r0, #67	; 0x43
   1aa2c:	bl	12b00 <sprintf@plt+0x1464>
   1aa30:	mov	r0, #3
   1aa34:	bl	11684 <exit@plt>
   1aa38:	mov	r3, #1
   1aa3c:	str	r3, [fp, #-16]
   1aa40:	b	1aa98 <sprintf@plt+0x93fc>
   1aa44:	bl	1157c <__ctype_b_loc@plt>
   1aa48:	mov	r3, r0
   1aa4c:	ldr	r2, [r3]
   1aa50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa54:	ldrb	r3, [r3]
   1aa58:	lsl	r3, r3, #1
   1aa5c:	add	r3, r2, r3
   1aa60:	ldrh	r3, [r3]
   1aa64:	and	r3, r3, #2048	; 0x800
   1aa68:	cmp	r3, #0
   1aa6c:	bne	1aa98 <sprintf@plt+0x93fc>
   1aa70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa74:	ldrb	r3, [r3]
   1aa78:	mov	r2, r3
   1aa7c:	ldr	r3, [pc, #356]	; 1abe8 <sprintf@plt+0x954c>
   1aa80:	add	r3, pc, r3
   1aa84:	mov	r1, r3
   1aa88:	mov	r0, #67	; 0x43
   1aa8c:	bl	12b00 <sprintf@plt+0x1464>
   1aa90:	mov	r0, #3
   1aa94:	bl	11684 <exit@plt>
   1aa98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa9c:	add	r3, r3, #1
   1aaa0:	str	r3, [fp, #-20]	; 0xffffffec
   1aaa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aaa8:	ldrb	r3, [r3]
   1aaac:	cmp	r3, #0
   1aab0:	bne	1a9f4 <sprintf@plt+0x9358>
   1aab4:	ldr	r3, [fp, #-12]
   1aab8:	cmp	r3, #0
   1aabc:	ble	1aae8 <sprintf@plt+0x944c>
   1aac0:	ldr	r3, [fp, #-12]
   1aac4:	cmp	r3, #2
   1aac8:	bgt	1aae8 <sprintf@plt+0x944c>
   1aacc:	ldr	r3, [pc, #280]	; 1abec <sprintf@plt+0x9550>
   1aad0:	add	r3, pc, r3
   1aad4:	mov	r1, r3
   1aad8:	mov	r0, #67	; 0x43
   1aadc:	bl	12b00 <sprintf@plt+0x1464>
   1aae0:	mov	r0, #3
   1aae4:	bl	11684 <exit@plt>
   1aae8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aaec:	ldr	r2, [fp, #-16]
   1aaf0:	str	r2, [r3]
   1aaf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aaf8:	add	r3, r3, #4
   1aafc:	mov	r2, #53	; 0x35
   1ab00:	ldr	r1, [fp, #-8]
   1ab04:	mov	r0, r3
   1ab08:	bl	11420 <rb_strlcpy@plt>
   1ab0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab10:	add	r3, r3, #60	; 0x3c
   1ab14:	sub	r2, fp, #44	; 0x2c
   1ab18:	mov	r1, r3
   1ab1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab20:	bl	18f38 <sprintf@plt+0x789c>
   1ab24:	sub	r3, fp, #48	; 0x30
   1ab28:	mov	r2, r3
   1ab2c:	ldr	r3, [pc, #188]	; 1abf0 <sprintf@plt+0x9554>
   1ab30:	add	r3, pc, r3
   1ab34:	mov	r1, r3
   1ab38:	mov	r0, #0
   1ab3c:	bl	11378 <rb_strtok_r@plt>
   1ab40:	str	r0, [fp, #-8]
   1ab44:	ldr	r3, [fp, #-8]
   1ab48:	cmp	r3, #0
   1ab4c:	bne	1a9cc <sprintf@plt+0x9330>
   1ab50:	b	1ab58 <sprintf@plt+0x94bc>
   1ab54:	nop	{0}
   1ab58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab5c:	bl	19698 <sprintf@plt+0x7ffc>
   1ab60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab64:	add	r3, r3, #4
   1ab68:	ldr	r3, [r3]
   1ab6c:	mov	r0, r3
   1ab70:	bl	11510 <atoi@plt>
   1ab74:	mov	r3, r0
   1ab78:	uxtb	r3, r3
   1ab7c:	and	r3, r3, #3
   1ab80:	strb	r3, [fp, #-29]	; 0xffffffe3
   1ab84:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab88:	ldr	r0, [r3]
   1ab8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab90:	add	r3, r3, #12
   1ab94:	ldr	r1, [r3]
   1ab98:	sub	r3, fp, #44	; 0x2c
   1ab9c:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   1aba0:	bl	19b30 <sprintf@plt+0x8494>
   1aba4:	mov	r3, r0
   1aba8:	cmp	r3, #0
   1abac:	bne	1abcc <sprintf@plt+0x9530>
   1abb0:	ldr	r3, [pc, #60]	; 1abf4 <sprintf@plt+0x9558>
   1abb4:	add	r3, pc, r3
   1abb8:	mov	r1, r3
   1abbc:	mov	r0, #67	; 0x43
   1abc0:	bl	12b00 <sprintf@plt+0x1464>
   1abc4:	mov	r0, #3
   1abc8:	bl	11684 <exit@plt>
   1abcc:	nop	{0}
   1abd0:	sub	sp, fp, #4
   1abd4:	ldr	fp, [sp]
   1abd8:	add	sp, sp, #4
   1abdc:	pop	{pc}		; (ldr pc, [sp], #4)
   1abe0:	andeq	r4, r0, r0, ror #30
   1abe4:	strdeq	r4, [r0], -r8
   1abe8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1abec:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1abf0:	andeq	r4, r0, r4, ror #27
   1abf4:	andeq	r4, r0, r0, lsr lr
   1abf8:	str	fp, [sp, #-8]!
   1abfc:	str	lr, [sp, #4]
   1ac00:	add	fp, sp, #4
   1ac04:	sub	sp, sp, #24
   1ac08:	str	r0, [fp, #-16]
   1ac0c:	str	r1, [fp, #-20]	; 0xffffffec
   1ac10:	str	r2, [fp, #-24]	; 0xffffffe8
   1ac14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac18:	ldr	r3, [r3]
   1ac1c:	mov	r0, r3
   1ac20:	bl	19c44 <sprintf@plt+0x85a8>
   1ac24:	str	r0, [fp, #-8]
   1ac28:	ldr	r3, [fp, #-8]
   1ac2c:	cmp	r3, #0
   1ac30:	bne	1ac58 <sprintf@plt+0x95bc>
   1ac34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac38:	ldr	r3, [r3]
   1ac3c:	mov	r2, r3
   1ac40:	ldr	r3, [pc, #40]	; 1ac70 <sprintf@plt+0x95d4>
   1ac44:	add	r3, pc, r3
   1ac48:	mov	r1, r3
   1ac4c:	mov	r0, #87	; 0x57
   1ac50:	bl	12b00 <sprintf@plt+0x1464>
   1ac54:	b	1ac60 <sprintf@plt+0x95c4>
   1ac58:	ldr	r0, [fp, #-8]
   1ac5c:	bl	1a328 <sprintf@plt+0x8c8c>
   1ac60:	sub	sp, fp, #4
   1ac64:	ldr	fp, [sp]
   1ac68:	add	sp, sp, #4
   1ac6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac70:	ldrdeq	r4, [r0], -r0
   1ac74:	str	fp, [sp, #-8]!
   1ac78:	str	lr, [sp, #4]
   1ac7c:	add	fp, sp, #4
   1ac80:	sub	sp, sp, #16
   1ac84:	str	r0, [fp, #-8]
   1ac88:	str	r1, [fp, #-12]
   1ac8c:	str	r2, [fp, #-16]
   1ac90:	bl	1a390 <sprintf@plt+0x8cf4>
   1ac94:	nop	{0}
   1ac98:	sub	sp, fp, #4
   1ac9c:	ldr	fp, [sp]
   1aca0:	add	sp, sp, #4
   1aca4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aca8:	str	fp, [sp, #-8]!
   1acac:	str	lr, [sp, #4]
   1acb0:	add	fp, sp, #4
   1acb4:	sub	sp, sp, #24
   1acb8:	str	r0, [fp, #-16]
   1acbc:	str	r1, [fp, #-20]	; 0xffffffec
   1acc0:	str	r2, [fp, #-24]	; 0xffffffe8
   1acc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1acc8:	ldr	r3, [r3]
   1accc:	mov	r0, r3
   1acd0:	bl	11510 <atoi@plt>
   1acd4:	str	r0, [fp, #-8]
   1acd8:	ldr	r3, [fp, #-8]
   1acdc:	cmp	r3, #0
   1ace0:	bge	1ad04 <sprintf@plt+0x9668>
   1ace4:	ldr	r2, [fp, #-8]
   1ace8:	ldr	r3, [pc, #56]	; 1ad28 <sprintf@plt+0x968c>
   1acec:	add	r3, pc, r3
   1acf0:	mov	r1, r3
   1acf4:	mov	r0, #67	; 0x43
   1acf8:	bl	12b00 <sprintf@plt+0x1464>
   1acfc:	mov	r0, #3
   1ad00:	bl	11684 <exit@plt>
   1ad04:	ldr	r3, [pc, #32]	; 1ad2c <sprintf@plt+0x9690>
   1ad08:	add	r3, pc, r3
   1ad0c:	ldr	r2, [fp, #-8]
   1ad10:	str	r2, [r3]
   1ad14:	nop	{0}
   1ad18:	sub	sp, fp, #4
   1ad1c:	ldr	fp, [sp]
   1ad20:	add	sp, sp, #4
   1ad24:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad28:	andeq	r4, r0, r4, asr sp
   1ad2c:	andeq	r7, r1, ip, lsr #1
   1ad30:	str	fp, [sp, #-8]!
   1ad34:	str	lr, [sp, #4]
   1ad38:	add	fp, sp, #4
   1ad3c:	sub	sp, sp, #16
   1ad40:	str	r0, [fp, #-16]
   1ad44:	ldr	r1, [fp, #-16]
   1ad48:	mov	r0, #1
   1ad4c:	bl	113a8 <calloc@plt>
   1ad50:	mov	r3, r0
   1ad54:	str	r3, [fp, #-8]
   1ad58:	ldr	r3, [fp, #-8]
   1ad5c:	cmp	r3, #0
   1ad60:	moveq	r3, #1
   1ad64:	movne	r3, #0
   1ad68:	uxtb	r3, r3
   1ad6c:	cmp	r3, #0
   1ad70:	beq	1ad78 <sprintf@plt+0x96dc>
   1ad74:	bl	11570 <rb_outofmemory@plt>
   1ad78:	ldr	r3, [fp, #-8]
   1ad7c:	mov	r0, r3
   1ad80:	sub	sp, fp, #4
   1ad84:	ldr	fp, [sp]
   1ad88:	add	sp, sp, #4
   1ad8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad90:	str	fp, [sp, #-8]!
   1ad94:	str	lr, [sp, #4]
   1ad98:	add	fp, sp, #4
   1ad9c:	sub	sp, sp, #8
   1ada0:	str	r0, [fp, #-8]
   1ada4:	ldr	r3, [fp, #-8]
   1ada8:	cmp	r3, #0
   1adac:	movne	r3, #1
   1adb0:	moveq	r3, #0
   1adb4:	uxtb	r3, r3
   1adb8:	cmp	r3, #0
   1adbc:	beq	1adc8 <sprintf@plt+0x972c>
   1adc0:	ldr	r0, [fp, #-8]
   1adc4:	bl	11444 <free@plt>
   1adc8:	nop	{0}
   1adcc:	sub	sp, fp, #4
   1add0:	ldr	fp, [sp]
   1add4:	add	sp, sp, #4
   1add8:	pop	{pc}		; (ldr pc, [sp], #4)
   1addc:	push	{fp}		; (str fp, [sp, #-4]!)
   1ade0:	add	fp, sp, #0
   1ade4:	sub	sp, sp, #12
   1ade8:	str	r0, [fp, #-8]
   1adec:	ldr	r3, [fp, #-8]
   1adf0:	ldr	r3, [r3, #460]	; 0x1cc
   1adf4:	add	r2, r3, #1
   1adf8:	ldr	r3, [fp, #-8]
   1adfc:	str	r2, [r3, #460]	; 0x1cc
   1ae00:	nop	{0}
   1ae04:	add	sp, fp, #0
   1ae08:	pop	{fp}		; (ldr fp, [sp], #4)
   1ae0c:	bx	lr
   1ae10:	str	fp, [sp, #-8]!
   1ae14:	str	lr, [sp, #4]
   1ae18:	add	fp, sp, #4
   1ae1c:	sub	sp, sp, #8
   1ae20:	str	r0, [fp, #-8]
   1ae24:	ldr	r3, [fp, #-8]
   1ae28:	ldr	r3, [r3, #460]	; 0x1cc
   1ae2c:	sub	r2, r3, #1
   1ae30:	ldr	r3, [fp, #-8]
   1ae34:	str	r2, [r3, #460]	; 0x1cc
   1ae38:	ldr	r3, [fp, #-8]
   1ae3c:	ldr	r3, [r3, #460]	; 0x1cc
   1ae40:	cmp	r3, #0
   1ae44:	bne	1ae50 <sprintf@plt+0x97b4>
   1ae48:	ldr	r0, [fp, #-8]
   1ae4c:	bl	138a8 <sprintf@plt+0x220c>
   1ae50:	nop	{0}
   1ae54:	sub	sp, fp, #4
   1ae58:	ldr	fp, [sp]
   1ae5c:	add	sp, sp, #4
   1ae60:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae64:	push	{fp}		; (str fp, [sp, #-4]!)
   1ae68:	add	fp, sp, #0
   1ae6c:	sub	sp, sp, #12
   1ae70:	str	r0, [fp, #-8]
   1ae74:	str	r1, [fp, #-12]
   1ae78:	ldr	r3, [fp, #-8]
   1ae7c:	ldr	r2, [r3, #464]	; 0x1d0
   1ae80:	ldr	r3, [fp, #-12]
   1ae84:	lsl	r3, r3, #4
   1ae88:	add	r3, r2, r3
   1ae8c:	ldr	r3, [r3, #8]
   1ae90:	mov	r0, r3
   1ae94:	add	sp, fp, #0
   1ae98:	pop	{fp}		; (ldr fp, [sp], #4)
   1ae9c:	bx	lr
   1aea0:	push	{fp}		; (str fp, [sp, #-4]!)
   1aea4:	add	fp, sp, #0
   1aea8:	sub	sp, sp, #20
   1aeac:	str	r0, [fp, #-8]
   1aeb0:	str	r1, [fp, #-12]
   1aeb4:	str	r2, [fp, #-16]
   1aeb8:	ldr	r3, [fp, #-8]
   1aebc:	ldr	r2, [r3, #464]	; 0x1d0
   1aec0:	ldr	r3, [fp, #-12]
   1aec4:	lsl	r3, r3, #4
   1aec8:	add	r3, r2, r3
   1aecc:	ldr	r2, [fp, #-16]
   1aed0:	str	r2, [r3, #8]
   1aed4:	nop	{0}
   1aed8:	add	sp, fp, #0
   1aedc:	pop	{fp}		; (ldr fp, [sp], #4)
   1aee0:	bx	lr
   1aee4:	str	fp, [sp, #-8]!
   1aee8:	str	lr, [sp, #4]
   1aeec:	add	fp, sp, #4
   1aef0:	sub	sp, sp, #16
   1aef4:	str	r0, [fp, #-8]
   1aef8:	str	r1, [fp, #-12]
   1aefc:	str	r2, [fp, #-16]
   1af00:	bl	114b0 <rb_current_time@plt>
   1af04:	mov	r1, r0
   1af08:	ldr	r3, [fp, #-8]
   1af0c:	ldr	r2, [r3, #464]	; 0x1d0
   1af10:	ldr	r3, [fp, #-12]
   1af14:	lsl	r3, r3, #4
   1af18:	add	r3, r2, r3
   1af1c:	ldr	r2, [fp, #-16]
   1af20:	add	r2, r1, r2
   1af24:	str	r2, [r3, #4]
   1af28:	nop	{0}
   1af2c:	sub	sp, fp, #4
   1af30:	ldr	fp, [sp]
   1af34:	add	sp, sp, #4
   1af38:	pop	{pc}		; (ldr pc, [sp], #4)
   1af3c:	push	{fp}		; (str fp, [sp, #-4]!)
   1af40:	add	fp, sp, #0
   1af44:	sub	sp, sp, #20
   1af48:	str	r0, [fp, #-8]
   1af4c:	str	r1, [fp, #-12]
   1af50:	str	r2, [fp, #-16]
   1af54:	ldr	r3, [fp, #-8]
   1af58:	ldr	r2, [r3, #464]	; 0x1d0
   1af5c:	ldr	r3, [fp, #-12]
   1af60:	lsl	r3, r3, #4
   1af64:	add	r3, r2, r3
   1af68:	ldr	r2, [fp, #-16]
   1af6c:	str	r2, [r3, #4]
   1af70:	nop	{0}
   1af74:	add	sp, fp, #0
   1af78:	pop	{fp}		; (ldr fp, [sp], #4)
   1af7c:	bx	lr
   1af80:	str	fp, [sp, #-8]!
   1af84:	str	lr, [sp, #4]
   1af88:	add	fp, sp, #4
   1af8c:	sub	sp, sp, #72	; 0x48
   1af90:	str	r0, [fp, #-56]	; 0xffffffc8
   1af94:	str	r1, [fp, #-60]	; 0xffffffc4
   1af98:	str	r2, [fp, #-64]	; 0xffffffc0
   1af9c:	ldr	r2, [pc, #224]	; 1b084 <sprintf@plt+0x99e8>
   1afa0:	add	r2, pc, r2
   1afa4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1afa8:	str	r3, [fp, #-8]
   1afac:	ldr	r3, [pc, #212]	; 1b088 <sprintf@plt+0x99ec>
   1afb0:	ldr	r3, [r2, r3]
   1afb4:	ldr	r3, [r3, #12]
   1afb8:	mov	r1, r3
   1afbc:	ldr	r0, [fp, #-8]
   1afc0:	bl	1ae64 <sprintf@plt+0x97c8>
   1afc4:	str	r0, [fp, #-12]
   1afc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1afcc:	cmp	r3, #0
   1afd0:	beq	1afe4 <sprintf@plt+0x9948>
   1afd4:	mov	r1, #2
   1afd8:	ldr	r0, [fp, #-8]
   1afdc:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1afe0:	b	1b074 <sprintf@plt+0x99d8>
   1afe4:	ldr	r3, [fp, #-8]
   1afe8:	ldrh	r3, [r3, #246]	; 0xf6
   1afec:	mov	r2, r3
   1aff0:	ldr	r3, [fp, #-8]
   1aff4:	ldrh	r3, [r3, #62]	; 0x3e
   1aff8:	sub	r0, fp, #48	; 0x30
   1affc:	str	r3, [sp]
   1b000:	mov	r3, r2
   1b004:	ldr	r2, [pc, #128]	; 1b08c <sprintf@plt+0x99f0>
   1b008:	add	r2, pc, r2
   1b00c:	mov	r1, #32
   1b010:	bl	11630 <snprintf@plt>
   1b014:	sub	r3, fp, #48	; 0x30
   1b018:	mov	r0, r3
   1b01c:	bl	114a4 <strlen@plt>
   1b020:	mov	r3, r0
   1b024:	str	r3, [fp, #-16]
   1b028:	ldr	r3, [fp, #-12]
   1b02c:	ldr	r3, [r3]
   1b030:	sub	r1, fp, #48	; 0x30
   1b034:	ldr	r2, [fp, #-16]
   1b038:	mov	r0, r3
   1b03c:	bl	11408 <rb_write@plt>
   1b040:	mov	r2, r0
   1b044:	ldr	r3, [fp, #-16]
   1b048:	cmp	r3, r2
   1b04c:	beq	1b060 <sprintf@plt+0x99c4>
   1b050:	mov	r1, #2
   1b054:	ldr	r0, [fp, #-8]
   1b058:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1b05c:	b	1b074 <sprintf@plt+0x99d8>
   1b060:	ldr	r3, [fp, #-12]
   1b064:	ldr	r3, [r3]
   1b068:	ldr	r1, [fp, #-8]
   1b06c:	mov	r0, r3
   1b070:	bl	1b090 <sprintf@plt+0x99f4>
   1b074:	sub	sp, fp, #4
   1b078:	ldr	fp, [sp]
   1b07c:	add	sp, sp, #4
   1b080:	pop	{pc}		; (ldr pc, [sp], #4)
   1b084:	andeq	r6, r1, r8, asr r0
   1b088:	andeq	r0, r0, r4, ror r1
   1b08c:	andeq	r4, r0, r4, lsl #23
   1b090:	str	fp, [sp, #-8]!
   1b094:	str	lr, [sp, #4]
   1b098:	add	fp, sp, #4
   1b09c:	sub	sp, sp, #168	; 0xa8
   1b0a0:	str	r0, [fp, #-168]	; 0xffffff58
   1b0a4:	str	r1, [fp, #-172]	; 0xffffff54
   1b0a8:	ldr	r3, [fp, #-172]	; 0xffffff54
   1b0ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1b0b0:	sub	r3, fp, #160	; 0xa0
   1b0b4:	mov	r2, #129	; 0x81
   1b0b8:	mov	r1, #0
   1b0bc:	mov	r0, r3
   1b0c0:	bl	113e4 <memset@plt>
   1b0c4:	mov	r3, #2
   1b0c8:	str	r3, [fp, #-8]
   1b0cc:	mov	r3, #0
   1b0d0:	str	r3, [fp, #-12]
   1b0d4:	mov	r3, #0
   1b0d8:	str	r3, [fp, #-16]
   1b0dc:	sub	r3, fp, #160	; 0xa0
   1b0e0:	mov	r2, #128	; 0x80
   1b0e4:	mov	r1, r3
   1b0e8:	ldr	r0, [fp, #-168]	; 0xffffff58
   1b0ec:	bl	1145c <rb_read@plt>
   1b0f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b0f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b0f8:	cmp	r3, #0
   1b0fc:	bge	1b13c <sprintf@plt+0x9aa0>
   1b100:	bl	11690 <__errno_location@plt>
   1b104:	mov	r3, r0
   1b108:	ldr	r3, [r3]
   1b10c:	mov	r0, r3
   1b110:	bl	112dc <rb_ignore_errno@plt>
   1b114:	mov	r3, r0
   1b118:	cmp	r3, #0
   1b11c:	beq	1b13c <sprintf@plt+0x9aa0>
   1b120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b124:	ldr	r2, [pc, #376]	; 1b2a4 <sprintf@plt+0x9c08>
   1b128:	add	r2, pc, r2
   1b12c:	mov	r1, #1
   1b130:	ldr	r0, [fp, #-168]	; 0xffffff58
   1b134:	bl	11324 <rb_setselect@plt>
   1b138:	b	1b294 <sprintf@plt+0x9bf8>
   1b13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b140:	cmp	r3, #0
   1b144:	ble	1b270 <sprintf@plt+0x9bd4>
   1b148:	sub	r3, fp, #160	; 0xa0
   1b14c:	mov	r0, r3
   1b150:	bl	1b4cc <sprintf@plt+0x9e30>
   1b154:	str	r0, [fp, #-12]
   1b158:	ldr	r3, [fp, #-12]
   1b15c:	cmp	r3, #0
   1b160:	beq	1b268 <sprintf@plt+0x9bcc>
   1b164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b168:	add	r3, r3, #440	; 0x1b8
   1b16c:	str	r3, [fp, #-16]
   1b170:	b	1b180 <sprintf@plt+0x9ae4>
   1b174:	ldr	r3, [fp, #-12]
   1b178:	add	r3, r3, #1
   1b17c:	str	r3, [fp, #-12]
   1b180:	ldr	r3, [fp, #-12]
   1b184:	ldrb	r3, [r3]
   1b188:	cmp	r3, #126	; 0x7e
   1b18c:	beq	1b174 <sprintf@plt+0x9ad8>
   1b190:	ldr	r3, [fp, #-12]
   1b194:	ldrb	r3, [r3]
   1b198:	cmp	r3, #94	; 0x5e
   1b19c:	beq	1b174 <sprintf@plt+0x9ad8>
   1b1a0:	mov	r3, #10
   1b1a4:	str	r3, [fp, #-20]	; 0xffffffec
   1b1a8:	b	1b23c <sprintf@plt+0x9ba0>
   1b1ac:	ldr	r3, [fp, #-12]
   1b1b0:	ldrb	r3, [r3]
   1b1b4:	cmp	r3, #64	; 0x40
   1b1b8:	beq	1b258 <sprintf@plt+0x9bbc>
   1b1bc:	ldr	r3, [fp, #-12]
   1b1c0:	ldrb	r3, [r3]
   1b1c4:	cmp	r3, #13
   1b1c8:	beq	1b258 <sprintf@plt+0x9bbc>
   1b1cc:	ldr	r3, [fp, #-12]
   1b1d0:	ldrb	r3, [r3]
   1b1d4:	cmp	r3, #10
   1b1d8:	beq	1b258 <sprintf@plt+0x9bbc>
   1b1dc:	ldr	r3, [fp, #-12]
   1b1e0:	ldrb	r3, [r3]
   1b1e4:	cmp	r3, #32
   1b1e8:	beq	1b230 <sprintf@plt+0x9b94>
   1b1ec:	ldr	r3, [fp, #-12]
   1b1f0:	ldrb	r3, [r3]
   1b1f4:	cmp	r3, #58	; 0x3a
   1b1f8:	beq	1b230 <sprintf@plt+0x9b94>
   1b1fc:	ldr	r3, [fp, #-12]
   1b200:	ldrb	r3, [r3]
   1b204:	cmp	r3, #91	; 0x5b
   1b208:	beq	1b230 <sprintf@plt+0x9b94>
   1b20c:	ldr	r3, [fp, #-16]
   1b210:	add	r2, r3, #1
   1b214:	str	r2, [fp, #-16]
   1b218:	ldr	r2, [fp, #-12]
   1b21c:	ldrb	r2, [r2]
   1b220:	strb	r2, [r3]
   1b224:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b228:	sub	r3, r3, #1
   1b22c:	str	r3, [fp, #-20]	; 0xffffffec
   1b230:	ldr	r3, [fp, #-12]
   1b234:	add	r3, r3, #1
   1b238:	str	r3, [fp, #-12]
   1b23c:	ldr	r3, [fp, #-12]
   1b240:	ldrb	r3, [r3]
   1b244:	cmp	r3, #0
   1b248:	beq	1b258 <sprintf@plt+0x9bbc>
   1b24c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b250:	cmp	r3, #0
   1b254:	bne	1b1ac <sprintf@plt+0x9b10>
   1b258:	ldr	r3, [fp, #-16]
   1b25c:	mov	r2, #0
   1b260:	strb	r2, [r3]
   1b264:	b	1b270 <sprintf@plt+0x9bd4>
   1b268:	mov	r3, #3
   1b26c:	str	r3, [fp, #-8]
   1b270:	ldr	r3, [fp, #-12]
   1b274:	cmp	r3, #0
   1b278:	bne	1b28c <sprintf@plt+0x9bf0>
   1b27c:	ldr	r1, [fp, #-8]
   1b280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b284:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1b288:	b	1b294 <sprintf@plt+0x9bf8>
   1b28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b290:	bl	1b3cc <sprintf@plt+0x9d30>
   1b294:	sub	sp, fp, #4
   1b298:	ldr	fp, [sp]
   1b29c:	add	sp, sp, #4
   1b2a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2a4:			; <UNDEFINED> instruction: 0xffffff60
   1b2a8:	str	r4, [sp, #-12]!
   1b2ac:	str	fp, [sp, #4]
   1b2b0:	str	lr, [sp, #8]
   1b2b4:	add	fp, sp, #8
   1b2b8:	sub	sp, sp, #20
   1b2bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2c0:	str	r1, [fp, #-28]	; 0xffffffe4
   1b2c4:	ldr	r4, [pc, #240]	; 1b3bc <sprintf@plt+0x9d20>
   1b2c8:	add	r4, pc, r4
   1b2cc:	ldr	r3, [pc, #236]	; 1b3c0 <sprintf@plt+0x9d24>
   1b2d0:	ldr	r3, [r4, r3]
   1b2d4:	ldr	r3, [r3, #12]
   1b2d8:	mov	r1, r3
   1b2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2e0:	bl	1ae64 <sprintf@plt+0x97c8>
   1b2e4:	str	r0, [fp, #-16]
   1b2e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2ec:	add	r3, r3, #440	; 0x1b8
   1b2f0:	mov	r2, #11
   1b2f4:	ldr	r1, [pc, #200]	; 1b3c4 <sprintf@plt+0x9d28>
   1b2f8:	add	r1, pc, r1
   1b2fc:	mov	r0, r3
   1b300:	bl	11420 <rb_strlcpy@plt>
   1b304:	ldr	r3, [fp, #-16]
   1b308:	ldr	r3, [r3]
   1b30c:	cmp	r3, #0
   1b310:	beq	1b324 <sprintf@plt+0x9c88>
   1b314:	ldr	r3, [fp, #-16]
   1b318:	ldr	r3, [r3]
   1b31c:	mov	r0, r3
   1b320:	bl	114e0 <rb_close@plt>
   1b324:	ldr	r0, [fp, #-16]
   1b328:	bl	1ad90 <sprintf@plt+0x96f4>
   1b32c:	ldr	r3, [pc, #140]	; 1b3c0 <sprintf@plt+0x9d24>
   1b330:	ldr	r3, [r4, r3]
   1b334:	ldr	r3, [r3, #12]
   1b338:	mov	r2, #0
   1b33c:	mov	r1, r3
   1b340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b344:	bl	1aea0 <sprintf@plt+0x9804>
   1b348:	ldr	r3, [pc, #112]	; 1b3c0 <sprintf@plt+0x9d24>
   1b34c:	ldr	r3, [r4, r3]
   1b350:	ldr	r3, [r3, #12]
   1b354:	mov	r2, #0
   1b358:	mov	r1, r3
   1b35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b360:	bl	1af3c <sprintf@plt+0x98a0>
   1b364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b368:	ldr	r0, [r3]
   1b36c:	ldr	r3, [pc, #84]	; 1b3c8 <sprintf@plt+0x9d2c>
   1b370:	add	r3, pc, r3
   1b374:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b378:	ldr	r3, [r3, r2, lsl #2]
   1b37c:	mov	r1, r3
   1b380:	bl	12a74 <sprintf@plt+0x13d8>
   1b384:	ldr	r3, [pc, #52]	; 1b3c0 <sprintf@plt+0x9d24>
   1b388:	ldr	r3, [r4, r3]
   1b38c:	ldr	r3, [r3, #12]
   1b390:	mov	r1, r3
   1b394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b398:	bl	139f8 <sprintf@plt+0x235c>
   1b39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3a0:	bl	1ae10 <sprintf@plt+0x9774>
   1b3a4:	nop	{0}
   1b3a8:	sub	sp, fp, #8
   1b3ac:	ldr	r4, [sp]
   1b3b0:	ldr	fp, [sp, #4]
   1b3b4:	add	sp, sp, #8
   1b3b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3bc:	andeq	r5, r1, r0, lsr sp
   1b3c0:	andeq	r0, r0, r4, ror r1
   1b3c4:	andeq	r4, r0, r0, lsr #17
   1b3c8:	andeq	r6, r1, r8, asr #21
   1b3cc:	str	r4, [sp, #-12]!
   1b3d0:	str	fp, [sp, #4]
   1b3d4:	str	lr, [sp, #8]
   1b3d8:	add	fp, sp, #8
   1b3dc:	sub	sp, sp, #20
   1b3e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3e4:	ldr	r4, [pc, #212]	; 1b4c0 <sprintf@plt+0x9e24>
   1b3e8:	add	r4, pc, r4
   1b3ec:	ldr	r3, [pc, #208]	; 1b4c4 <sprintf@plt+0x9e28>
   1b3f0:	ldr	r3, [r4, r3]
   1b3f4:	ldr	r3, [r3, #12]
   1b3f8:	mov	r1, r3
   1b3fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b400:	bl	1ae64 <sprintf@plt+0x97c8>
   1b404:	str	r0, [fp, #-16]
   1b408:	ldr	r3, [fp, #-16]
   1b40c:	ldr	r3, [r3]
   1b410:	cmp	r3, #0
   1b414:	beq	1b428 <sprintf@plt+0x9d8c>
   1b418:	ldr	r3, [fp, #-16]
   1b41c:	ldr	r3, [r3]
   1b420:	mov	r0, r3
   1b424:	bl	114e0 <rb_close@plt>
   1b428:	ldr	r0, [fp, #-16]
   1b42c:	bl	1ad90 <sprintf@plt+0x96f4>
   1b430:	ldr	r3, [pc, #140]	; 1b4c4 <sprintf@plt+0x9e28>
   1b434:	ldr	r3, [r4, r3]
   1b438:	ldr	r3, [r3, #12]
   1b43c:	mov	r2, #0
   1b440:	mov	r1, r3
   1b444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b448:	bl	1aea0 <sprintf@plt+0x9804>
   1b44c:	ldr	r3, [pc, #112]	; 1b4c4 <sprintf@plt+0x9e28>
   1b450:	ldr	r3, [r4, r3]
   1b454:	ldr	r3, [r3, #12]
   1b458:	mov	r2, #0
   1b45c:	mov	r1, r3
   1b460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b464:	bl	1af3c <sprintf@plt+0x98a0>
   1b468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b46c:	ldr	r2, [r3]
   1b470:	ldr	r3, [pc, #80]	; 1b4c8 <sprintf@plt+0x9e2c>
   1b474:	add	r3, pc, r3
   1b478:	ldr	r3, [r3, #4]
   1b47c:	mov	r1, r3
   1b480:	mov	r0, r2
   1b484:	bl	12a74 <sprintf@plt+0x13d8>
   1b488:	ldr	r3, [pc, #52]	; 1b4c4 <sprintf@plt+0x9e28>
   1b48c:	ldr	r3, [r4, r3]
   1b490:	ldr	r3, [r3, #12]
   1b494:	mov	r1, r3
   1b498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b49c:	bl	139f8 <sprintf@plt+0x235c>
   1b4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4a4:	bl	1ae10 <sprintf@plt+0x9774>
   1b4a8:	nop	{0}
   1b4ac:	sub	sp, fp, #8
   1b4b0:	ldr	r4, [sp]
   1b4b4:	ldr	fp, [sp, #4]
   1b4b8:	add	sp, sp, #8
   1b4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4c0:	andeq	r5, r1, r0, lsl ip
   1b4c4:	andeq	r0, r0, r4, ror r1
   1b4c8:	andeq	r6, r1, r4, asr #19
   1b4cc:	str	fp, [sp, #-8]!
   1b4d0:	str	lr, [sp, #4]
   1b4d4:	add	fp, sp, #4
   1b4d8:	sub	sp, sp, #40	; 0x28
   1b4dc:	str	r0, [fp, #-40]	; 0xffffffd8
   1b4e0:	mov	r3, #0
   1b4e4:	str	r3, [fp, #-8]
   1b4e8:	mov	r3, #0
   1b4ec:	str	r3, [fp, #-12]
   1b4f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4f4:	str	r3, [fp, #-16]
   1b4f8:	mov	r1, #58	; 0x3a
   1b4fc:	ldr	r0, [fp, #-16]
   1b500:	bl	11384 <strchr@plt>
   1b504:	str	r0, [fp, #-20]	; 0xffffffec
   1b508:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b50c:	cmp	r3, #0
   1b510:	bne	1b51c <sprintf@plt+0x9e80>
   1b514:	mov	r3, #0
   1b518:	b	1b654 <sprintf@plt+0x9fb8>
   1b51c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b520:	mov	r2, #0
   1b524:	strb	r2, [r3]
   1b528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b52c:	add	r3, r3, #1
   1b530:	str	r3, [fp, #-20]	; 0xffffffec
   1b534:	mov	r1, #58	; 0x3a
   1b538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b53c:	bl	11384 <strchr@plt>
   1b540:	str	r0, [fp, #-24]	; 0xffffffe8
   1b544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b548:	cmp	r3, #0
   1b54c:	bne	1b558 <sprintf@plt+0x9ebc>
   1b550:	mov	r3, #0
   1b554:	b	1b654 <sprintf@plt+0x9fb8>
   1b558:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b55c:	mov	r2, #0
   1b560:	strb	r2, [r3]
   1b564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b568:	add	r3, r3, #1
   1b56c:	str	r3, [fp, #-24]	; 0xffffffe8
   1b570:	mov	r1, #44	; 0x2c
   1b574:	ldr	r0, [fp, #-16]
   1b578:	bl	11384 <strchr@plt>
   1b57c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b580:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b584:	cmp	r3, #0
   1b588:	bne	1b594 <sprintf@plt+0x9ef8>
   1b58c:	mov	r3, #0
   1b590:	b	1b654 <sprintf@plt+0x9fb8>
   1b594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b598:	mov	r2, #0
   1b59c:	strb	r2, [r3]
   1b5a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5a4:	add	r3, r3, #1
   1b5a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b5ac:	ldr	r0, [fp, #-16]
   1b5b0:	bl	11510 <atoi@plt>
   1b5b4:	str	r0, [fp, #-8]
   1b5b8:	ldr	r3, [fp, #-8]
   1b5bc:	cmp	r3, #0
   1b5c0:	bne	1b5cc <sprintf@plt+0x9f30>
   1b5c4:	mov	r3, #0
   1b5c8:	b	1b654 <sprintf@plt+0x9fb8>
   1b5cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b5d0:	bl	11510 <atoi@plt>
   1b5d4:	str	r0, [fp, #-12]
   1b5d8:	ldr	r3, [fp, #-12]
   1b5dc:	cmp	r3, #0
   1b5e0:	bne	1b5ec <sprintf@plt+0x9f50>
   1b5e4:	mov	r3, #0
   1b5e8:	b	1b654 <sprintf@plt+0x9fb8>
   1b5ec:	ldr	r3, [pc, #116]	; 1b668 <sprintf@plt+0x9fcc>
   1b5f0:	add	r3, pc, r3
   1b5f4:	mov	r1, r3
   1b5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5fc:	bl	11540 <strstr@plt>
   1b600:	mov	r3, r0
   1b604:	cmp	r3, #0
   1b608:	bne	1b614 <sprintf@plt+0x9f78>
   1b60c:	mov	r3, #0
   1b610:	b	1b654 <sprintf@plt+0x9fb8>
   1b614:	mov	r1, #58	; 0x3a
   1b618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b61c:	bl	11384 <strchr@plt>
   1b620:	str	r0, [fp, #-32]	; 0xffffffe0
   1b624:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b628:	cmp	r3, #0
   1b62c:	bne	1b638 <sprintf@plt+0x9f9c>
   1b630:	mov	r3, #0
   1b634:	b	1b654 <sprintf@plt+0x9fb8>
   1b638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b63c:	mov	r2, #0
   1b640:	strb	r2, [r3]
   1b644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b648:	add	r3, r3, #1
   1b64c:	str	r3, [fp, #-32]	; 0xffffffe0
   1b650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b654:	mov	r0, r3
   1b658:	sub	sp, fp, #4
   1b65c:	ldr	fp, [sp]
   1b660:	add	sp, sp, #4
   1b664:	pop	{pc}		; (ldr pc, [sp], #4)
   1b668:	andeq	r4, r0, ip, lsr #11
   1b66c:	str	r4, [sp, #-12]!
   1b670:	str	fp, [sp, #4]
   1b674:	str	lr, [sp, #8]
   1b678:	add	fp, sp, #8
   1b67c:	sub	sp, sp, #20
   1b680:	ldr	r4, [pc, #176]	; 1b738 <sprintf@plt+0xa09c>
   1b684:	add	r4, pc, r4
   1b688:	ldr	r3, [pc, #172]	; 1b73c <sprintf@plt+0xa0a0>
   1b68c:	ldr	r3, [r4, r3]
   1b690:	ldr	r3, [r3]
   1b694:	sub	r2, fp, #24
   1b698:	mov	r1, r2
   1b69c:	mov	r0, r3
   1b6a0:	bl	11480 <rb_dictionary_foreach_start@plt>
   1b6a4:	b	1b6f4 <sprintf@plt+0xa058>
   1b6a8:	ldr	r3, [pc, #144]	; 1b740 <sprintf@plt+0xa0a4>
   1b6ac:	ldr	r3, [r4, r3]
   1b6b0:	ldr	r3, [r3, #12]
   1b6b4:	mov	r1, r3
   1b6b8:	ldr	r0, [fp, #-16]
   1b6bc:	bl	1ae64 <sprintf@plt+0x97c8>
   1b6c0:	mov	r3, r0
   1b6c4:	cmp	r3, #0
   1b6c8:	beq	1b6d8 <sprintf@plt+0xa03c>
   1b6cc:	mov	r1, #2
   1b6d0:	ldr	r0, [fp, #-16]
   1b6d4:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1b6d8:	ldr	r3, [pc, #92]	; 1b73c <sprintf@plt+0xa0a0>
   1b6dc:	ldr	r3, [r4, r3]
   1b6e0:	ldr	r3, [r3]
   1b6e4:	sub	r2, fp, #24
   1b6e8:	mov	r1, r2
   1b6ec:	mov	r0, r3
   1b6f0:	bl	11438 <rb_dictionary_foreach_next@plt>
   1b6f4:	ldr	r3, [pc, #64]	; 1b73c <sprintf@plt+0xa0a0>
   1b6f8:	ldr	r3, [r4, r3]
   1b6fc:	ldr	r3, [r3]
   1b700:	sub	r2, fp, #24
   1b704:	mov	r1, r2
   1b708:	mov	r0, r3
   1b70c:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1b710:	str	r0, [fp, #-16]
   1b714:	ldr	r3, [fp, #-16]
   1b718:	cmp	r3, #0
   1b71c:	bne	1b6a8 <sprintf@plt+0xa00c>
   1b720:	nop	{0}
   1b724:	sub	sp, fp, #8
   1b728:	ldr	r4, [sp]
   1b72c:	ldr	fp, [sp, #4]
   1b730:	add	sp, sp, #8
   1b734:	pop	{pc}		; (ldr pc, [sp], #4)
   1b738:	andeq	r5, r1, r4, ror r9
   1b73c:	andeq	r0, r0, r8, ror #2
   1b740:	andeq	r0, r0, r4, ror r1
   1b744:	str	r4, [sp, #-12]!
   1b748:	str	fp, [sp, #4]
   1b74c:	str	lr, [sp, #8]
   1b750:	add	fp, sp, #8
   1b754:	sub	sp, sp, #284	; 0x11c
   1b758:	str	r0, [fp, #-280]	; 0xfffffee8
   1b75c:	ldr	r4, [pc, #588]	; 1b9b0 <sprintf@plt+0xa314>
   1b760:	add	r4, pc, r4
   1b764:	mov	r0, #4
   1b768:	bl	1ad30 <sprintf@plt+0x9694>
   1b76c:	str	r0, [fp, #-16]
   1b770:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b774:	add	r3, r3, #248	; 0xf8
   1b778:	ldrh	r3, [r3]
   1b77c:	str	r3, [fp, #-20]	; 0xffffffec
   1b780:	ldr	r3, [pc, #556]	; 1b9b4 <sprintf@plt+0xa318>
   1b784:	add	r3, pc, r3
   1b788:	ldrb	r3, [r3]
   1b78c:	eor	r3, r3, #1
   1b790:	uxtb	r3, r3
   1b794:	cmp	r3, #0
   1b798:	beq	1b7e4 <sprintf@plt+0xa148>
   1b79c:	ldr	r0, [fp, #-16]
   1b7a0:	bl	1ad90 <sprintf@plt+0x96f4>
   1b7a4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b7a8:	ldr	r2, [r3]
   1b7ac:	ldr	r3, [pc, #516]	; 1b9b8 <sprintf@plt+0xa31c>
   1b7b0:	add	r3, pc, r3
   1b7b4:	ldr	r3, [r3, #16]
   1b7b8:	mov	r1, r3
   1b7bc:	mov	r0, r2
   1b7c0:	bl	12a74 <sprintf@plt+0x13d8>
   1b7c4:	ldr	r3, [pc, #496]	; 1b9bc <sprintf@plt+0xa320>
   1b7c8:	ldr	r3, [r4, r3]
   1b7cc:	ldr	r3, [r3, #12]
   1b7d0:	mov	r1, r3
   1b7d4:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b7d8:	bl	139f8 <sprintf@plt+0x235c>
   1b7dc:	mov	r3, #1
   1b7e0:	b	1b998 <sprintf@plt+0xa2fc>
   1b7e4:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b7e8:	bl	1addc <sprintf@plt+0x9740>
   1b7ec:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b7f0:	ldr	r2, [r3]
   1b7f4:	ldr	r3, [pc, #452]	; 1b9c0 <sprintf@plt+0xa324>
   1b7f8:	add	r3, pc, r3
   1b7fc:	ldr	r3, [r3]
   1b800:	mov	r1, r3
   1b804:	mov	r0, r2
   1b808:	bl	12a74 <sprintf@plt+0x13d8>
   1b80c:	ldr	r3, [pc, #424]	; 1b9bc <sprintf@plt+0xa320>
   1b810:	ldr	r3, [r4, r3]
   1b814:	ldr	r3, [r3, #12]
   1b818:	ldr	r2, [fp, #-16]
   1b81c:	mov	r1, r3
   1b820:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b824:	bl	1aea0 <sprintf@plt+0x9804>
   1b828:	ldr	r3, [pc, #396]	; 1b9bc <sprintf@plt+0xa320>
   1b82c:	ldr	r3, [r4, r3]
   1b830:	ldr	r1, [r3, #12]
   1b834:	ldr	r3, [pc, #392]	; 1b9c4 <sprintf@plt+0xa328>
   1b838:	add	r3, pc, r3
   1b83c:	ldr	r3, [r3]
   1b840:	mov	r2, r3
   1b844:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b848:	bl	1aee4 <sprintf@plt+0x9848>
   1b84c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b850:	ldr	r2, [r3, #4]
   1b854:	ldr	r3, [pc, #364]	; 1b9c8 <sprintf@plt+0xa32c>
   1b858:	add	r3, pc, r3
   1b85c:	mov	r1, #1
   1b860:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b864:	bl	11354 <rb_socket@plt>
   1b868:	mov	r2, r0
   1b86c:	ldr	r3, [fp, #-16]
   1b870:	str	r2, [r3]
   1b874:	ldr	r3, [fp, #-16]
   1b878:	ldr	r3, [r3]
   1b87c:	cmp	r3, #0
   1b880:	bne	1b8c8 <sprintf@plt+0xa22c>
   1b884:	bl	11690 <__errno_location@plt>
   1b888:	mov	r3, r0
   1b88c:	ldr	r3, [r3]
   1b890:	mov	r0, r3
   1b894:	bl	112a0 <strerror@plt>
   1b898:	mov	r3, r0
   1b89c:	mov	r2, r3
   1b8a0:	ldr	r3, [pc, #292]	; 1b9cc <sprintf@plt+0xa330>
   1b8a4:	add	r3, pc, r3
   1b8a8:	mov	r1, r3
   1b8ac:	mov	r0, #68	; 0x44
   1b8b0:	bl	12b00 <sprintf@plt+0x1464>
   1b8b4:	mov	r1, #2
   1b8b8:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b8bc:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1b8c0:	mov	r3, #1
   1b8c4:	b	1b998 <sprintf@plt+0xa2fc>
   1b8c8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b8cc:	sub	r0, fp, #148	; 0x94
   1b8d0:	add	r3, r3, #64	; 0x40
   1b8d4:	mov	r2, #128	; 0x80
   1b8d8:	mov	r1, r3
   1b8dc:	bl	114c8 <memcpy@plt>
   1b8e0:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b8e4:	sub	r0, fp, #276	; 0x114
   1b8e8:	add	r3, r3, #248	; 0xf8
   1b8ec:	mov	r2, #128	; 0x80
   1b8f0:	mov	r1, r3
   1b8f4:	bl	114c8 <memcpy@plt>
   1b8f8:	sub	r3, fp, #148	; 0x94
   1b8fc:	ldrh	r3, [r3]
   1b900:	cmp	r3, #2
   1b904:	bne	1b918 <sprintf@plt+0xa27c>
   1b908:	sub	r3, fp, #148	; 0x94
   1b90c:	mov	r2, #0
   1b910:	strh	r2, [r3, #2]
   1b914:	b	1b924 <sprintf@plt+0xa288>
   1b918:	sub	r3, fp, #148	; 0x94
   1b91c:	mov	r2, #0
   1b920:	strh	r2, [r3, #2]
   1b924:	sub	r3, fp, #276	; 0x114
   1b928:	ldrh	r3, [r3]
   1b92c:	cmp	r3, #2
   1b930:	bne	1b94c <sprintf@plt+0xa2b0>
   1b934:	sub	r4, fp, #276	; 0x114
   1b938:	mov	r0, #113	; 0x71
   1b93c:	bl	113cc <htons@plt>
   1b940:	mov	r3, r0
   1b944:	strh	r3, [r4, #2]
   1b948:	b	1b960 <sprintf@plt+0xa2c4>
   1b94c:	sub	r4, fp, #276	; 0x114
   1b950:	mov	r0, #113	; 0x71
   1b954:	bl	113cc <htons@plt>
   1b958:	mov	r3, r0
   1b95c:	strh	r3, [r4, #2]
   1b960:	ldr	r3, [fp, #-16]
   1b964:	ldr	r0, [r3]
   1b968:	ldr	r3, [pc, #96]	; 1b9d0 <sprintf@plt+0xa334>
   1b96c:	add	r3, pc, r3
   1b970:	ldr	r3, [r3]
   1b974:	sub	r2, fp, #148	; 0x94
   1b978:	sub	r1, fp, #276	; 0x114
   1b97c:	str	r3, [sp, #4]
   1b980:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b984:	str	r3, [sp]
   1b988:	ldr	r3, [pc, #68]	; 1b9d4 <sprintf@plt+0xa338>
   1b98c:	add	r3, pc, r3
   1b990:	bl	112f4 <rb_connect_tcp@plt>
   1b994:	mov	r3, #1
   1b998:	mov	r0, r3
   1b99c:	sub	sp, fp, #8
   1b9a0:	ldr	r4, [sp]
   1b9a4:	ldr	fp, [sp, #4]
   1b9a8:	add	sp, sp, #8
   1b9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9b0:	muleq	r1, r8, r8
   1b9b4:			; <UNDEFINED> instruction: 0x000166b0
   1b9b8:	andeq	r6, r1, r8, lsl #13
   1b9bc:	andeq	r0, r0, r4, ror r1
   1b9c0:	andeq	r6, r1, r0, asr #12
   1b9c4:	strdeq	r6, [r1], -r8
   1b9c8:	andeq	r4, r0, ip, asr #6
   1b9cc:	andeq	r4, r0, r8, lsl #6
   1b9d0:	andeq	r6, r1, r4, asr #9
   1b9d4:			; <UNDEFINED> instruction: 0xfffff5ec
   1b9d8:	str	fp, [sp, #-8]!
   1b9dc:	str	lr, [sp, #4]
   1b9e0:	add	fp, sp, #4
   1b9e4:	sub	sp, sp, #16
   1b9e8:	str	r0, [fp, #-16]
   1b9ec:	ldr	r2, [pc, #72]	; 1ba3c <sprintf@plt+0xa3a0>
   1b9f0:	add	r2, pc, r2
   1b9f4:	ldr	r3, [pc, #68]	; 1ba40 <sprintf@plt+0xa3a4>
   1b9f8:	ldr	r3, [r2, r3]
   1b9fc:	ldr	r3, [r3, #12]
   1ba00:	mov	r1, r3
   1ba04:	ldr	r0, [fp, #-16]
   1ba08:	bl	1ae64 <sprintf@plt+0x97c8>
   1ba0c:	str	r0, [fp, #-8]
   1ba10:	ldr	r3, [fp, #-8]
   1ba14:	cmp	r3, #0
   1ba18:	beq	1ba28 <sprintf@plt+0xa38c>
   1ba1c:	mov	r1, #2
   1ba20:	ldr	r0, [fp, #-16]
   1ba24:	bl	1b2a8 <sprintf@plt+0x9c0c>
   1ba28:	nop	{0}
   1ba2c:	sub	sp, fp, #4
   1ba30:	ldr	fp, [sp]
   1ba34:	add	sp, sp, #4
   1ba38:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba3c:	andeq	r5, r1, r8, lsl #12
   1ba40:	andeq	r0, r0, r4, ror r1
   1ba44:	str	fp, [sp, #-8]!
   1ba48:	str	lr, [sp, #4]
   1ba4c:	add	fp, sp, #4
   1ba50:	sub	sp, sp, #24
   1ba54:	str	r0, [fp, #-16]
   1ba58:	str	r1, [fp, #-20]	; 0xffffffec
   1ba5c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ba60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba64:	ldr	r3, [r3]
   1ba68:	mov	r0, r3
   1ba6c:	bl	11510 <atoi@plt>
   1ba70:	str	r0, [fp, #-8]
   1ba74:	ldr	r3, [fp, #-8]
   1ba78:	cmp	r3, #0
   1ba7c:	bge	1baa0 <sprintf@plt+0xa404>
   1ba80:	ldr	r2, [fp, #-8]
   1ba84:	ldr	r3, [pc, #56]	; 1bac4 <sprintf@plt+0xa428>
   1ba88:	add	r3, pc, r3
   1ba8c:	mov	r1, r3
   1ba90:	mov	r0, #67	; 0x43
   1ba94:	bl	12b00 <sprintf@plt+0x1464>
   1ba98:	mov	r0, #3
   1ba9c:	bl	11684 <exit@plt>
   1baa0:	ldr	r3, [pc, #32]	; 1bac8 <sprintf@plt+0xa42c>
   1baa4:	add	r3, pc, r3
   1baa8:	ldr	r2, [fp, #-8]
   1baac:	str	r2, [r3]
   1bab0:	nop	{0}
   1bab4:	sub	sp, fp, #4
   1bab8:	ldr	fp, [sp]
   1babc:	add	sp, sp, #4
   1bac0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bac4:	andeq	r4, r0, r8, asr #2
   1bac8:	andeq	r6, r1, ip, lsl #7
   1bacc:	push	{fp}		; (str fp, [sp, #-4]!)
   1bad0:	add	fp, sp, #0
   1bad4:	sub	sp, sp, #20
   1bad8:	str	r0, [fp, #-8]
   1badc:	str	r1, [fp, #-12]
   1bae0:	str	r2, [fp, #-16]
   1bae4:	ldr	r3, [fp, #-16]
   1bae8:	ldr	r3, [r3]
   1baec:	ldrb	r3, [r3]
   1baf0:	cmp	r3, #49	; 0x31
   1baf4:	moveq	r3, #1
   1baf8:	movne	r3, #0
   1bafc:	uxtb	r2, r3
   1bb00:	ldr	r3, [pc, #20]	; 1bb1c <sprintf@plt+0xa480>
   1bb04:	add	r3, pc, r3
   1bb08:	strb	r2, [r3]
   1bb0c:	nop	{0}
   1bb10:	add	sp, fp, #0
   1bb14:	pop	{fp}		; (ldr fp, [sp], #4)
   1bb18:	bx	lr
   1bb1c:	andeq	r6, r1, r0, lsr r3
   1bb20:	str	fp, [sp, #-8]!
   1bb24:	str	lr, [sp, #4]
   1bb28:	add	fp, sp, #4
   1bb2c:	sub	sp, sp, #16
   1bb30:	str	r0, [fp, #-16]
   1bb34:	ldr	r1, [fp, #-16]
   1bb38:	mov	r0, #1
   1bb3c:	bl	113a8 <calloc@plt>
   1bb40:	mov	r3, r0
   1bb44:	str	r3, [fp, #-8]
   1bb48:	ldr	r3, [fp, #-8]
   1bb4c:	cmp	r3, #0
   1bb50:	moveq	r3, #1
   1bb54:	movne	r3, #0
   1bb58:	uxtb	r3, r3
   1bb5c:	cmp	r3, #0
   1bb60:	beq	1bb68 <sprintf@plt+0xa4cc>
   1bb64:	bl	11570 <rb_outofmemory@plt>
   1bb68:	ldr	r3, [fp, #-8]
   1bb6c:	mov	r0, r3
   1bb70:	sub	sp, fp, #4
   1bb74:	ldr	fp, [sp]
   1bb78:	add	sp, sp, #4
   1bb7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb80:	str	fp, [sp, #-8]!
   1bb84:	str	lr, [sp, #4]
   1bb88:	add	fp, sp, #4
   1bb8c:	sub	sp, sp, #8
   1bb90:	str	r0, [fp, #-8]
   1bb94:	ldr	r3, [fp, #-8]
   1bb98:	cmp	r3, #0
   1bb9c:	movne	r3, #1
   1bba0:	moveq	r3, #0
   1bba4:	uxtb	r3, r3
   1bba8:	cmp	r3, #0
   1bbac:	beq	1bbb8 <sprintf@plt+0xa51c>
   1bbb0:	ldr	r0, [fp, #-8]
   1bbb4:	bl	11444 <free@plt>
   1bbb8:	nop	{0}
   1bbbc:	sub	sp, fp, #4
   1bbc0:	ldr	fp, [sp]
   1bbc4:	add	sp, sp, #4
   1bbc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbcc:	push	{fp}		; (str fp, [sp, #-4]!)
   1bbd0:	add	fp, sp, #0
   1bbd4:	sub	sp, sp, #12
   1bbd8:	str	r0, [fp, #-8]
   1bbdc:	ldr	r3, [fp, #-8]
   1bbe0:	ldr	r3, [r3, #460]	; 0x1cc
   1bbe4:	add	r2, r3, #1
   1bbe8:	ldr	r3, [fp, #-8]
   1bbec:	str	r2, [r3, #460]	; 0x1cc
   1bbf0:	nop	{0}
   1bbf4:	add	sp, fp, #0
   1bbf8:	pop	{fp}		; (ldr fp, [sp], #4)
   1bbfc:	bx	lr
   1bc00:	str	fp, [sp, #-8]!
   1bc04:	str	lr, [sp, #4]
   1bc08:	add	fp, sp, #4
   1bc0c:	sub	sp, sp, #8
   1bc10:	str	r0, [fp, #-8]
   1bc14:	ldr	r3, [fp, #-8]
   1bc18:	ldr	r3, [r3, #460]	; 0x1cc
   1bc1c:	sub	r2, r3, #1
   1bc20:	ldr	r3, [fp, #-8]
   1bc24:	str	r2, [r3, #460]	; 0x1cc
   1bc28:	ldr	r3, [fp, #-8]
   1bc2c:	ldr	r3, [r3, #460]	; 0x1cc
   1bc30:	cmp	r3, #0
   1bc34:	bne	1bc40 <sprintf@plt+0xa5a4>
   1bc38:	ldr	r0, [fp, #-8]
   1bc3c:	bl	138a8 <sprintf@plt+0x220c>
   1bc40:	nop	{0}
   1bc44:	sub	sp, fp, #4
   1bc48:	ldr	fp, [sp]
   1bc4c:	add	sp, sp, #4
   1bc50:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc54:	push	{fp}		; (str fp, [sp, #-4]!)
   1bc58:	add	fp, sp, #0
   1bc5c:	sub	sp, sp, #12
   1bc60:	str	r0, [fp, #-8]
   1bc64:	str	r1, [fp, #-12]
   1bc68:	ldr	r3, [fp, #-8]
   1bc6c:	ldr	r2, [r3, #464]	; 0x1d0
   1bc70:	ldr	r3, [fp, #-12]
   1bc74:	lsl	r3, r3, #4
   1bc78:	add	r3, r2, r3
   1bc7c:	ldr	r3, [r3, #8]
   1bc80:	mov	r0, r3
   1bc84:	add	sp, fp, #0
   1bc88:	pop	{fp}		; (ldr fp, [sp], #4)
   1bc8c:	bx	lr
   1bc90:	push	{fp}		; (str fp, [sp, #-4]!)
   1bc94:	add	fp, sp, #0
   1bc98:	sub	sp, sp, #20
   1bc9c:	str	r0, [fp, #-8]
   1bca0:	str	r1, [fp, #-12]
   1bca4:	str	r2, [fp, #-16]
   1bca8:	ldr	r3, [fp, #-8]
   1bcac:	ldr	r2, [r3, #464]	; 0x1d0
   1bcb0:	ldr	r3, [fp, #-12]
   1bcb4:	lsl	r3, r3, #4
   1bcb8:	add	r3, r2, r3
   1bcbc:	ldr	r2, [fp, #-16]
   1bcc0:	str	r2, [r3, #8]
   1bcc4:	nop	{0}
   1bcc8:	add	sp, fp, #0
   1bccc:	pop	{fp}		; (ldr fp, [sp], #4)
   1bcd0:	bx	lr
   1bcd4:	str	fp, [sp, #-8]!
   1bcd8:	str	lr, [sp, #4]
   1bcdc:	add	fp, sp, #4
   1bce0:	sub	sp, sp, #16
   1bce4:	str	r0, [fp, #-8]
   1bce8:	str	r1, [fp, #-12]
   1bcec:	str	r2, [fp, #-16]
   1bcf0:	bl	114b0 <rb_current_time@plt>
   1bcf4:	mov	r1, r0
   1bcf8:	ldr	r3, [fp, #-8]
   1bcfc:	ldr	r2, [r3, #464]	; 0x1d0
   1bd00:	ldr	r3, [fp, #-12]
   1bd04:	lsl	r3, r3, #4
   1bd08:	add	r3, r2, r3
   1bd0c:	ldr	r2, [fp, #-16]
   1bd10:	add	r2, r1, r2
   1bd14:	str	r2, [r3, #4]
   1bd18:	nop	{0}
   1bd1c:	sub	sp, fp, #4
   1bd20:	ldr	fp, [sp]
   1bd24:	add	sp, sp, #4
   1bd28:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd2c:	push	{fp}		; (str fp, [sp, #-4]!)
   1bd30:	add	fp, sp, #0
   1bd34:	sub	sp, sp, #20
   1bd38:	str	r0, [fp, #-8]
   1bd3c:	str	r1, [fp, #-12]
   1bd40:	str	r2, [fp, #-16]
   1bd44:	ldr	r3, [fp, #-8]
   1bd48:	ldr	r2, [r3, #464]	; 0x1d0
   1bd4c:	ldr	r3, [fp, #-12]
   1bd50:	lsl	r3, r3, #4
   1bd54:	add	r3, r2, r3
   1bd58:	ldr	r2, [fp, #-16]
   1bd5c:	str	r2, [r3, #4]
   1bd60:	nop	{0}
   1bd64:	add	sp, fp, #0
   1bd68:	pop	{fp}		; (ldr fp, [sp], #4)
   1bd6c:	bx	lr
   1bd70:	str	fp, [sp, #-8]!
   1bd74:	str	lr, [sp, #4]
   1bd78:	add	fp, sp, #4
   1bd7c:	sub	sp, sp, #24
   1bd80:	str	r0, [fp, #-16]
   1bd84:	str	r2, [fp, #-24]	; 0xffffffe8
   1bd88:	str	r3, [fp, #-28]	; 0xffffffe4
   1bd8c:	mov	r3, r1
   1bd90:	strb	r3, [fp, #-17]	; 0xffffffef
   1bd94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd98:	str	r3, [fp, #-8]
   1bd9c:	ldr	r3, [fp, #-16]
   1bda0:	cmp	r3, #0
   1bda4:	beq	1bdbc <sprintf@plt+0xa720>
   1bda8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1bdac:	eor	r3, r3, #1
   1bdb0:	uxtb	r3, r3
   1bdb4:	cmp	r3, #0
   1bdb8:	beq	1bdcc <sprintf@plt+0xa730>
   1bdbc:	mov	r1, #1
   1bdc0:	ldr	r0, [fp, #-8]
   1bdc4:	bl	1be24 <sprintf@plt+0xa788>
   1bdc8:	b	1be10 <sprintf@plt+0xa774>
   1bdcc:	ldr	r0, [fp, #-16]
   1bdd0:	bl	114a4 <strlen@plt>
   1bdd4:	mov	r3, r0
   1bdd8:	cmp	r3, #63	; 0x3f
   1bddc:	bls	1bdf0 <sprintf@plt+0xa754>
   1bde0:	mov	r1, #2
   1bde4:	ldr	r0, [fp, #-8]
   1bde8:	bl	1be24 <sprintf@plt+0xa788>
   1bdec:	b	1be10 <sprintf@plt+0xa774>
   1bdf0:	ldr	r3, [fp, #-8]
   1bdf4:	add	r3, r3, #376	; 0x178
   1bdf8:	mov	r2, #64	; 0x40
   1bdfc:	ldr	r1, [fp, #-16]
   1be00:	mov	r0, r3
   1be04:	bl	11420 <rb_strlcpy@plt>
   1be08:	ldr	r0, [fp, #-8]
   1be0c:	bl	1bf38 <sprintf@plt+0xa89c>
   1be10:	nop	{0}
   1be14:	sub	sp, fp, #4
   1be18:	ldr	fp, [sp]
   1be1c:	add	sp, sp, #4
   1be20:	pop	{pc}		; (ldr pc, [sp], #4)
   1be24:	str	r4, [sp, #-12]!
   1be28:	str	fp, [sp, #4]
   1be2c:	str	lr, [sp, #8]
   1be30:	add	fp, sp, #8
   1be34:	sub	sp, sp, #20
   1be38:	str	r0, [fp, #-24]	; 0xffffffe8
   1be3c:	str	r1, [fp, #-28]	; 0xffffffe4
   1be40:	ldr	r4, [pc, #224]	; 1bf28 <sprintf@plt+0xa88c>
   1be44:	add	r4, pc, r4
   1be48:	ldr	r3, [pc, #220]	; 1bf2c <sprintf@plt+0xa890>
   1be4c:	ldr	r3, [r4, r3]
   1be50:	ldr	r3, [r3, #12]
   1be54:	mov	r1, r3
   1be58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be5c:	bl	1bc54 <sprintf@plt+0xa5b8>
   1be60:	str	r0, [fp, #-16]
   1be64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be68:	add	r3, r3, #376	; 0x178
   1be6c:	mov	r2, #64	; 0x40
   1be70:	ldr	r1, [pc, #184]	; 1bf30 <sprintf@plt+0xa894>
   1be74:	add	r1, pc, r1
   1be78:	mov	r0, r3
   1be7c:	bl	11420 <rb_strlcpy@plt>
   1be80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be84:	ldr	r0, [r3]
   1be88:	ldr	r3, [pc, #164]	; 1bf34 <sprintf@plt+0xa898>
   1be8c:	add	r3, pc, r3
   1be90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1be94:	ldr	r3, [r3, r2, lsl #2]
   1be98:	mov	r1, r3
   1be9c:	bl	12a74 <sprintf@plt+0x13d8>
   1bea0:	ldr	r3, [fp, #-16]
   1bea4:	ldr	r3, [r3]
   1bea8:	mov	r0, r3
   1beac:	bl	121f8 <sprintf@plt+0xb5c>
   1beb0:	ldr	r0, [fp, #-16]
   1beb4:	bl	1bb80 <sprintf@plt+0xa4e4>
   1beb8:	ldr	r3, [pc, #108]	; 1bf2c <sprintf@plt+0xa890>
   1bebc:	ldr	r3, [r4, r3]
   1bec0:	ldr	r3, [r3, #12]
   1bec4:	mov	r2, #0
   1bec8:	mov	r1, r3
   1becc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bed0:	bl	1bc90 <sprintf@plt+0xa5f4>
   1bed4:	ldr	r3, [pc, #80]	; 1bf2c <sprintf@plt+0xa890>
   1bed8:	ldr	r3, [r4, r3]
   1bedc:	ldr	r3, [r3, #12]
   1bee0:	mov	r2, #0
   1bee4:	mov	r1, r3
   1bee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1beec:	bl	1bd2c <sprintf@plt+0xa690>
   1bef0:	ldr	r3, [pc, #52]	; 1bf2c <sprintf@plt+0xa890>
   1bef4:	ldr	r3, [r4, r3]
   1bef8:	ldr	r3, [r3, #12]
   1befc:	mov	r1, r3
   1bf00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf04:	bl	139f8 <sprintf@plt+0x235c>
   1bf08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf0c:	bl	1bc00 <sprintf@plt+0xa564>
   1bf10:	nop	{0}
   1bf14:	sub	sp, fp, #8
   1bf18:	ldr	r4, [sp]
   1bf1c:	ldr	fp, [sp, #4]
   1bf20:	add	sp, sp, #8
   1bf24:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf28:			; <UNDEFINED> instruction: 0x000151b4
   1bf2c:	andeq	r0, r0, r8, ror r1
   1bf30:	andeq	r3, r0, ip, lsl lr
   1bf34:	andeq	r6, r1, r4, lsr #32
   1bf38:	str	r4, [sp, #-12]!
   1bf3c:	str	fp, [sp, #4]
   1bf40:	str	lr, [sp, #8]
   1bf44:	add	fp, sp, #8
   1bf48:	sub	sp, sp, #20
   1bf4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf50:	ldr	r4, [pc, #200]	; 1c020 <sprintf@plt+0xa984>
   1bf54:	add	r4, pc, r4
   1bf58:	ldr	r3, [pc, #196]	; 1c024 <sprintf@plt+0xa988>
   1bf5c:	ldr	r3, [r4, r3]
   1bf60:	ldr	r3, [r3, #12]
   1bf64:	mov	r1, r3
   1bf68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf6c:	bl	1bc54 <sprintf@plt+0xa5b8>
   1bf70:	str	r0, [fp, #-16]
   1bf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf78:	ldr	r0, [r3]
   1bf7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf80:	add	r3, r3, #376	; 0x178
   1bf84:	mov	r2, r3
   1bf88:	ldr	r3, [pc, #152]	; 1c028 <sprintf@plt+0xa98c>
   1bf8c:	add	r3, pc, r3
   1bf90:	mov	r1, r3
   1bf94:	bl	12a74 <sprintf@plt+0x13d8>
   1bf98:	ldr	r3, [fp, #-16]
   1bf9c:	ldr	r3, [r3]
   1bfa0:	mov	r0, r3
   1bfa4:	bl	121f8 <sprintf@plt+0xb5c>
   1bfa8:	ldr	r0, [fp, #-16]
   1bfac:	bl	1bb80 <sprintf@plt+0xa4e4>
   1bfb0:	ldr	r3, [pc, #108]	; 1c024 <sprintf@plt+0xa988>
   1bfb4:	ldr	r3, [r4, r3]
   1bfb8:	ldr	r3, [r3, #12]
   1bfbc:	mov	r2, #0
   1bfc0:	mov	r1, r3
   1bfc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfc8:	bl	1bc90 <sprintf@plt+0xa5f4>
   1bfcc:	ldr	r3, [pc, #80]	; 1c024 <sprintf@plt+0xa988>
   1bfd0:	ldr	r3, [r4, r3]
   1bfd4:	ldr	r3, [r3, #12]
   1bfd8:	mov	r2, #0
   1bfdc:	mov	r1, r3
   1bfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfe4:	bl	1bd2c <sprintf@plt+0xa690>
   1bfe8:	ldr	r3, [pc, #52]	; 1c024 <sprintf@plt+0xa988>
   1bfec:	ldr	r3, [r4, r3]
   1bff0:	ldr	r3, [r3, #12]
   1bff4:	mov	r1, r3
   1bff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bffc:	bl	139f8 <sprintf@plt+0x235c>
   1c000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c004:	bl	1bc00 <sprintf@plt+0xa564>
   1c008:	nop	{0}
   1c00c:	sub	sp, fp, #8
   1c010:	ldr	r4, [sp]
   1c014:	ldr	fp, [sp, #4]
   1c018:	add	sp, sp, #8
   1c01c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c020:	andeq	r5, r1, r4, lsr #1
   1c024:	andeq	r0, r0, r8, ror r1
   1c028:	andeq	r3, r0, r8, lsl #26
   1c02c:	str	r4, [sp, #-12]!
   1c030:	str	fp, [sp, #4]
   1c034:	str	lr, [sp, #8]
   1c038:	add	fp, sp, #8
   1c03c:	sub	sp, sp, #20
   1c040:	ldr	r4, [pc, #176]	; 1c0f8 <sprintf@plt+0xaa5c>
   1c044:	add	r4, pc, r4
   1c048:	ldr	r3, [pc, #172]	; 1c0fc <sprintf@plt+0xaa60>
   1c04c:	ldr	r3, [r4, r3]
   1c050:	ldr	r3, [r3]
   1c054:	sub	r2, fp, #24
   1c058:	mov	r1, r2
   1c05c:	mov	r0, r3
   1c060:	bl	11480 <rb_dictionary_foreach_start@plt>
   1c064:	b	1c0b4 <sprintf@plt+0xaa18>
   1c068:	ldr	r3, [pc, #144]	; 1c100 <sprintf@plt+0xaa64>
   1c06c:	ldr	r3, [r4, r3]
   1c070:	ldr	r3, [r3, #12]
   1c074:	mov	r1, r3
   1c078:	ldr	r0, [fp, #-16]
   1c07c:	bl	1bc54 <sprintf@plt+0xa5b8>
   1c080:	mov	r3, r0
   1c084:	cmp	r3, #0
   1c088:	beq	1c098 <sprintf@plt+0xa9fc>
   1c08c:	mov	r1, #1
   1c090:	ldr	r0, [fp, #-16]
   1c094:	bl	1be24 <sprintf@plt+0xa788>
   1c098:	ldr	r3, [pc, #92]	; 1c0fc <sprintf@plt+0xaa60>
   1c09c:	ldr	r3, [r4, r3]
   1c0a0:	ldr	r3, [r3]
   1c0a4:	sub	r2, fp, #24
   1c0a8:	mov	r1, r2
   1c0ac:	mov	r0, r3
   1c0b0:	bl	11438 <rb_dictionary_foreach_next@plt>
   1c0b4:	ldr	r3, [pc, #64]	; 1c0fc <sprintf@plt+0xaa60>
   1c0b8:	ldr	r3, [r4, r3]
   1c0bc:	ldr	r3, [r3]
   1c0c0:	sub	r2, fp, #24
   1c0c4:	mov	r1, r2
   1c0c8:	mov	r0, r3
   1c0cc:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1c0d0:	str	r0, [fp, #-16]
   1c0d4:	ldr	r3, [fp, #-16]
   1c0d8:	cmp	r3, #0
   1c0dc:	bne	1c068 <sprintf@plt+0xa9cc>
   1c0e0:	nop	{0}
   1c0e4:	sub	sp, fp, #8
   1c0e8:	ldr	r4, [sp]
   1c0ec:	ldr	fp, [sp, #4]
   1c0f0:	add	sp, sp, #8
   1c0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0f8:			; <UNDEFINED> instruction: 0x00014fb4
   1c0fc:	andeq	r0, r0, r8, ror #2
   1c100:	andeq	r0, r0, r8, ror r1
   1c104:	str	r4, [sp, #-12]!
   1c108:	str	fp, [sp, #4]
   1c10c:	str	lr, [sp, #8]
   1c110:	add	fp, sp, #8
   1c114:	sub	sp, sp, #20
   1c118:	str	r0, [fp, #-24]	; 0xffffffe8
   1c11c:	ldr	r4, [pc, #184]	; 1c1dc <sprintf@plt+0xab40>
   1c120:	add	r4, pc, r4
   1c124:	mov	r0, #4
   1c128:	bl	1bb20 <sprintf@plt+0xa484>
   1c12c:	str	r0, [fp, #-16]
   1c130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c134:	bl	1bbcc <sprintf@plt+0xa530>
   1c138:	ldr	r3, [pc, #160]	; 1c1e0 <sprintf@plt+0xab44>
   1c13c:	ldr	r3, [r4, r3]
   1c140:	ldr	r3, [r3, #12]
   1c144:	ldr	r2, [fp, #-16]
   1c148:	mov	r1, r3
   1c14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c150:	bl	1bc90 <sprintf@plt+0xa5f4>
   1c154:	ldr	r3, [pc, #132]	; 1c1e0 <sprintf@plt+0xab44>
   1c158:	ldr	r3, [r4, r3]
   1c15c:	ldr	r1, [r3, #12]
   1c160:	ldr	r3, [pc, #124]	; 1c1e4 <sprintf@plt+0xab48>
   1c164:	add	r3, pc, r3
   1c168:	ldr	r3, [r3]
   1c16c:	mov	r2, r3
   1c170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c174:	bl	1bcd4 <sprintf@plt+0xa638>
   1c178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c17c:	add	r3, r3, #192	; 0xc0
   1c180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c184:	ldr	r1, [pc, #92]	; 1c1e8 <sprintf@plt+0xab4c>
   1c188:	add	r1, pc, r1
   1c18c:	mov	r0, r3
   1c190:	bl	12098 <sprintf@plt+0x9fc>
   1c194:	mov	r2, r0
   1c198:	ldr	r3, [fp, #-16]
   1c19c:	str	r2, [r3]
   1c1a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1a4:	ldr	r2, [r3]
   1c1a8:	ldr	r3, [pc, #60]	; 1c1ec <sprintf@plt+0xab50>
   1c1ac:	add	r3, pc, r3
   1c1b0:	ldr	r3, [r3]
   1c1b4:	mov	r1, r3
   1c1b8:	mov	r0, r2
   1c1bc:	bl	12a74 <sprintf@plt+0x13d8>
   1c1c0:	mov	r3, #1
   1c1c4:	mov	r0, r3
   1c1c8:	sub	sp, fp, #8
   1c1cc:	ldr	r4, [sp]
   1c1d0:	ldr	fp, [sp, #4]
   1c1d4:	add	sp, sp, #8
   1c1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1dc:	ldrdeq	r4, [r1], -r8
   1c1e0:	andeq	r0, r0, r8, ror r1
   1c1e4:	andeq	r5, r1, r8, asr #26
   1c1e8:			; <UNDEFINED> instruction: 0xfffffbe0
   1c1ec:	andeq	r5, r1, r4, lsl #26
   1c1f0:	str	fp, [sp, #-8]!
   1c1f4:	str	lr, [sp, #4]
   1c1f8:	add	fp, sp, #4
   1c1fc:	sub	sp, sp, #16
   1c200:	str	r0, [fp, #-16]
   1c204:	ldr	r2, [pc, #72]	; 1c254 <sprintf@plt+0xabb8>
   1c208:	add	r2, pc, r2
   1c20c:	ldr	r3, [pc, #68]	; 1c258 <sprintf@plt+0xabbc>
   1c210:	ldr	r3, [r2, r3]
   1c214:	ldr	r3, [r3, #12]
   1c218:	mov	r1, r3
   1c21c:	ldr	r0, [fp, #-16]
   1c220:	bl	1bc54 <sprintf@plt+0xa5b8>
   1c224:	str	r0, [fp, #-8]
   1c228:	ldr	r3, [fp, #-8]
   1c22c:	cmp	r3, #0
   1c230:	beq	1c240 <sprintf@plt+0xaba4>
   1c234:	mov	r1, #1
   1c238:	ldr	r0, [fp, #-16]
   1c23c:	bl	1be24 <sprintf@plt+0xa788>
   1c240:	nop	{0}
   1c244:	sub	sp, fp, #4
   1c248:	ldr	fp, [sp]
   1c24c:	add	sp, sp, #4
   1c250:	pop	{pc}		; (ldr pc, [sp], #4)
   1c254:	strdeq	r4, [r1], -r0
   1c258:	andeq	r0, r0, r8, ror r1
   1c25c:	str	fp, [sp, #-8]!
   1c260:	str	lr, [sp, #4]
   1c264:	add	fp, sp, #4
   1c268:	sub	sp, sp, #24
   1c26c:	str	r0, [fp, #-16]
   1c270:	str	r1, [fp, #-20]	; 0xffffffec
   1c274:	str	r2, [fp, #-24]	; 0xffffffe8
   1c278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c27c:	ldr	r3, [r3]
   1c280:	mov	r0, r3
   1c284:	bl	11510 <atoi@plt>
   1c288:	str	r0, [fp, #-8]
   1c28c:	ldr	r3, [fp, #-8]
   1c290:	cmp	r3, #0
   1c294:	bge	1c2b8 <sprintf@plt+0xac1c>
   1c298:	ldr	r2, [fp, #-8]
   1c29c:	ldr	r3, [pc, #56]	; 1c2dc <sprintf@plt+0xac40>
   1c2a0:	add	r3, pc, r3
   1c2a4:	mov	r1, r3
   1c2a8:	mov	r0, #67	; 0x43
   1c2ac:	bl	12b00 <sprintf@plt+0x1464>
   1c2b0:	mov	r0, #3
   1c2b4:	bl	11684 <exit@plt>
   1c2b8:	ldr	r3, [pc, #32]	; 1c2e0 <sprintf@plt+0xac44>
   1c2bc:	add	r3, pc, r3
   1c2c0:	ldr	r2, [fp, #-8]
   1c2c4:	str	r2, [r3]
   1c2c8:	nop	{0}
   1c2cc:	sub	sp, fp, #4
   1c2d0:	ldr	fp, [sp]
   1c2d4:	add	sp, sp, #4
   1c2d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2dc:	andeq	r3, r0, r0, lsl sl
   1c2e0:	strdeq	r5, [r1], -r0
   1c2e4:	str	fp, [sp, #-8]!
   1c2e8:	str	lr, [sp, #4]
   1c2ec:	add	fp, sp, #4
   1c2f0:	sub	sp, sp, #16
   1c2f4:	str	r0, [fp, #-8]
   1c2f8:	str	r1, [fp, #-12]
   1c2fc:	str	r2, [fp, #-16]
   1c300:	ldr	r3, [fp, #-8]
   1c304:	cmp	r3, #0
   1c308:	bne	1c32c <sprintf@plt+0xac90>
   1c30c:	ldr	r3, [pc, #268]	; 1c420 <sprintf@plt+0xad84>
   1c310:	add	r3, pc, r3
   1c314:	mov	r2, #143	; 0x8f
   1c318:	ldr	r1, [pc, #260]	; 1c424 <sprintf@plt+0xad88>
   1c31c:	add	r1, pc, r1
   1c320:	ldr	r0, [pc, #256]	; 1c428 <sprintf@plt+0xad8c>
   1c324:	add	r0, pc, r0
   1c328:	bl	11414 <__assert_fail@plt>
   1c32c:	ldr	r3, [fp, #-12]
   1c330:	cmp	r3, #0
   1c334:	bne	1c358 <sprintf@plt+0xacbc>
   1c338:	ldr	r3, [pc, #236]	; 1c42c <sprintf@plt+0xad90>
   1c33c:	add	r3, pc, r3
   1c340:	mov	r2, #144	; 0x90
   1c344:	ldr	r1, [pc, #228]	; 1c430 <sprintf@plt+0xad94>
   1c348:	add	r1, pc, r1
   1c34c:	ldr	r0, [pc, #224]	; 1c434 <sprintf@plt+0xad98>
   1c350:	add	r0, pc, r0
   1c354:	bl	11414 <__assert_fail@plt>
   1c358:	ldr	r3, [fp, #-16]
   1c35c:	cmp	r3, #0
   1c360:	bne	1c384 <sprintf@plt+0xace8>
   1c364:	ldr	r3, [pc, #204]	; 1c438 <sprintf@plt+0xad9c>
   1c368:	add	r3, pc, r3
   1c36c:	mov	r2, #145	; 0x91
   1c370:	ldr	r1, [pc, #196]	; 1c43c <sprintf@plt+0xada0>
   1c374:	add	r1, pc, r1
   1c378:	ldr	r0, [pc, #192]	; 1c440 <sprintf@plt+0xada4>
   1c37c:	add	r0, pc, r0
   1c380:	bl	11414 <__assert_fail@plt>
   1c384:	ldr	r3, [fp, #-12]
   1c388:	ldr	r2, [fp, #-8]
   1c38c:	str	r2, [r3]
   1c390:	ldr	r3, [fp, #-12]
   1c394:	mov	r2, #0
   1c398:	str	r2, [r3, #4]
   1c39c:	ldr	r3, [fp, #-16]
   1c3a0:	ldr	r2, [r3]
   1c3a4:	ldr	r3, [fp, #-12]
   1c3a8:	str	r2, [r3, #8]
   1c3ac:	ldr	r3, [fp, #-16]
   1c3b0:	ldr	r3, [r3]
   1c3b4:	cmp	r3, #0
   1c3b8:	beq	1c3d0 <sprintf@plt+0xad34>
   1c3bc:	ldr	r3, [fp, #-16]
   1c3c0:	ldr	r3, [r3]
   1c3c4:	ldr	r2, [fp, #-12]
   1c3c8:	str	r2, [r3, #4]
   1c3cc:	b	1c3ec <sprintf@plt+0xad50>
   1c3d0:	ldr	r3, [fp, #-16]
   1c3d4:	ldr	r3, [r3, #4]
   1c3d8:	cmp	r3, #0
   1c3dc:	bne	1c3ec <sprintf@plt+0xad50>
   1c3e0:	ldr	r3, [fp, #-16]
   1c3e4:	ldr	r2, [fp, #-12]
   1c3e8:	str	r2, [r3, #4]
   1c3ec:	ldr	r3, [fp, #-16]
   1c3f0:	ldr	r2, [fp, #-12]
   1c3f4:	str	r2, [r3]
   1c3f8:	ldr	r3, [fp, #-16]
   1c3fc:	ldr	r3, [r3, #8]
   1c400:	add	r2, r3, #1
   1c404:	ldr	r3, [fp, #-16]
   1c408:	str	r2, [r3, #8]
   1c40c:	nop	{0}
   1c410:	sub	sp, fp, #4
   1c414:	ldr	fp, [sp]
   1c418:	add	sp, sp, #4
   1c41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c420:	andeq	r3, r0, r4, lsr #28
   1c424:	ldrdeq	r3, [r0], -r0
   1c428:	andeq	r3, r0, r4, ror #19
   1c42c:	strdeq	r3, [r0], -r8
   1c430:	andeq	r3, r0, r4, lsr #19
   1c434:	andeq	r3, r0, r8, asr #19
   1c438:	andeq	r3, r0, ip, asr #27
   1c43c:	andeq	r3, r0, r8, ror r9
   1c440:	andeq	r3, r0, r8, lsr #19
   1c444:	str	fp, [sp, #-8]!
   1c448:	str	lr, [sp, #4]
   1c44c:	add	fp, sp, #4
   1c450:	sub	sp, sp, #8
   1c454:	str	r0, [fp, #-8]
   1c458:	str	r1, [fp, #-12]
   1c45c:	ldr	r3, [fp, #-8]
   1c460:	cmp	r3, #0
   1c464:	bne	1c488 <sprintf@plt+0xadec>
   1c468:	ldr	r3, [pc, #248]	; 1c568 <sprintf@plt+0xaecc>
   1c46c:	add	r3, pc, r3
   1c470:	mov	r2, #235	; 0xeb
   1c474:	ldr	r1, [pc, #240]	; 1c56c <sprintf@plt+0xaed0>
   1c478:	add	r1, pc, r1
   1c47c:	ldr	r0, [pc, #236]	; 1c570 <sprintf@plt+0xaed4>
   1c480:	add	r0, pc, r0
   1c484:	bl	11414 <__assert_fail@plt>
   1c488:	ldr	r3, [fp, #-12]
   1c48c:	cmp	r3, #0
   1c490:	bne	1c4b4 <sprintf@plt+0xae18>
   1c494:	ldr	r3, [pc, #216]	; 1c574 <sprintf@plt+0xaed8>
   1c498:	add	r3, pc, r3
   1c49c:	mov	r2, #236	; 0xec
   1c4a0:	ldr	r1, [pc, #208]	; 1c578 <sprintf@plt+0xaedc>
   1c4a4:	add	r1, pc, r1
   1c4a8:	ldr	r0, [pc, #204]	; 1c57c <sprintf@plt+0xaee0>
   1c4ac:	add	r0, pc, r0
   1c4b0:	bl	11414 <__assert_fail@plt>
   1c4b4:	ldr	r3, [fp, #-8]
   1c4b8:	ldr	r3, [r3, #8]
   1c4bc:	cmp	r3, #0
   1c4c0:	beq	1c4dc <sprintf@plt+0xae40>
   1c4c4:	ldr	r3, [fp, #-8]
   1c4c8:	ldr	r3, [r3, #8]
   1c4cc:	ldr	r2, [fp, #-8]
   1c4d0:	ldr	r2, [r2, #4]
   1c4d4:	str	r2, [r3, #4]
   1c4d8:	b	1c4ec <sprintf@plt+0xae50>
   1c4dc:	ldr	r3, [fp, #-8]
   1c4e0:	ldr	r2, [r3, #4]
   1c4e4:	ldr	r3, [fp, #-12]
   1c4e8:	str	r2, [r3, #4]
   1c4ec:	ldr	r3, [fp, #-8]
   1c4f0:	ldr	r3, [r3, #4]
   1c4f4:	cmp	r3, #0
   1c4f8:	beq	1c514 <sprintf@plt+0xae78>
   1c4fc:	ldr	r3, [fp, #-8]
   1c500:	ldr	r3, [r3, #4]
   1c504:	ldr	r2, [fp, #-8]
   1c508:	ldr	r2, [r2, #8]
   1c50c:	str	r2, [r3, #8]
   1c510:	b	1c524 <sprintf@plt+0xae88>
   1c514:	ldr	r3, [fp, #-8]
   1c518:	ldr	r2, [r3, #8]
   1c51c:	ldr	r3, [fp, #-12]
   1c520:	str	r2, [r3]
   1c524:	ldr	r3, [fp, #-8]
   1c528:	mov	r2, #0
   1c52c:	str	r2, [r3, #4]
   1c530:	ldr	r3, [fp, #-8]
   1c534:	ldr	r2, [r3, #4]
   1c538:	ldr	r3, [fp, #-8]
   1c53c:	str	r2, [r3, #8]
   1c540:	ldr	r3, [fp, #-12]
   1c544:	ldr	r3, [r3, #8]
   1c548:	sub	r2, r3, #1
   1c54c:	ldr	r3, [fp, #-12]
   1c550:	str	r2, [r3, #8]
   1c554:	nop	{0}
   1c558:	sub	sp, fp, #4
   1c55c:	ldr	fp, [sp]
   1c560:	add	sp, sp, #4
   1c564:	pop	{pc}		; (ldr pc, [sp], #4)
   1c568:			; <UNDEFINED> instruction: 0x00003cb8
   1c56c:	andeq	r3, r0, r4, ror r8
   1c570:	muleq	r0, r8, r8
   1c574:	andeq	r3, r0, ip, lsl #25
   1c578:	andeq	r3, r0, r8, asr #16
   1c57c:	andeq	r3, r0, r8, ror r8
   1c580:	str	fp, [sp, #-8]!
   1c584:	str	lr, [sp, #4]
   1c588:	add	fp, sp, #4
   1c58c:	sub	sp, sp, #16
   1c590:	str	r0, [fp, #-16]
   1c594:	ldr	r1, [fp, #-16]
   1c598:	mov	r0, #1
   1c59c:	bl	113a8 <calloc@plt>
   1c5a0:	mov	r3, r0
   1c5a4:	str	r3, [fp, #-8]
   1c5a8:	ldr	r3, [fp, #-8]
   1c5ac:	cmp	r3, #0
   1c5b0:	moveq	r3, #1
   1c5b4:	movne	r3, #0
   1c5b8:	uxtb	r3, r3
   1c5bc:	cmp	r3, #0
   1c5c0:	beq	1c5c8 <sprintf@plt+0xaf2c>
   1c5c4:	bl	11570 <rb_outofmemory@plt>
   1c5c8:	ldr	r3, [fp, #-8]
   1c5cc:	mov	r0, r3
   1c5d0:	sub	sp, fp, #4
   1c5d4:	ldr	fp, [sp]
   1c5d8:	add	sp, sp, #4
   1c5dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5e0:	str	fp, [sp, #-8]!
   1c5e4:	str	lr, [sp, #4]
   1c5e8:	add	fp, sp, #4
   1c5ec:	sub	sp, sp, #8
   1c5f0:	str	r0, [fp, #-8]
   1c5f4:	ldr	r3, [fp, #-8]
   1c5f8:	cmp	r3, #0
   1c5fc:	movne	r3, #1
   1c600:	moveq	r3, #0
   1c604:	uxtb	r3, r3
   1c608:	cmp	r3, #0
   1c60c:	beq	1c618 <sprintf@plt+0xaf7c>
   1c610:	ldr	r0, [fp, #-8]
   1c614:	bl	11444 <free@plt>
   1c618:	nop	{0}
   1c61c:	sub	sp, fp, #4
   1c620:	ldr	fp, [sp]
   1c624:	add	sp, sp, #4
   1c628:	pop	{pc}		; (ldr pc, [sp], #4)
   1c62c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c630:	add	fp, sp, #0
   1c634:	sub	sp, sp, #12
   1c638:	str	r0, [fp, #-8]
   1c63c:	ldr	r3, [fp, #-8]
   1c640:	ldr	r3, [r3, #460]	; 0x1cc
   1c644:	add	r2, r3, #1
   1c648:	ldr	r3, [fp, #-8]
   1c64c:	str	r2, [r3, #460]	; 0x1cc
   1c650:	nop	{0}
   1c654:	add	sp, fp, #0
   1c658:	pop	{fp}		; (ldr fp, [sp], #4)
   1c65c:	bx	lr
   1c660:	str	fp, [sp, #-8]!
   1c664:	str	lr, [sp, #4]
   1c668:	add	fp, sp, #4
   1c66c:	sub	sp, sp, #8
   1c670:	str	r0, [fp, #-8]
   1c674:	ldr	r3, [fp, #-8]
   1c678:	ldr	r3, [r3, #460]	; 0x1cc
   1c67c:	sub	r2, r3, #1
   1c680:	ldr	r3, [fp, #-8]
   1c684:	str	r2, [r3, #460]	; 0x1cc
   1c688:	ldr	r3, [fp, #-8]
   1c68c:	ldr	r3, [r3, #460]	; 0x1cc
   1c690:	cmp	r3, #0
   1c694:	bne	1c6a0 <sprintf@plt+0xb004>
   1c698:	ldr	r0, [fp, #-8]
   1c69c:	bl	138a8 <sprintf@plt+0x220c>
   1c6a0:	nop	{0}
   1c6a4:	sub	sp, fp, #4
   1c6a8:	ldr	fp, [sp]
   1c6ac:	add	sp, sp, #4
   1c6b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6b4:	str	fp, [sp, #-8]!
   1c6b8:	str	lr, [sp, #4]
   1c6bc:	add	fp, sp, #4
   1c6c0:	sub	sp, sp, #16
   1c6c4:	str	r0, [fp, #-16]
   1c6c8:	ldr	r2, [pc, #120]	; 1c748 <sprintf@plt+0xb0ac>
   1c6cc:	add	r2, pc, r2
   1c6d0:	ldr	r3, [pc, #116]	; 1c74c <sprintf@plt+0xb0b0>
   1c6d4:	ldr	r3, [r2, r3]
   1c6d8:	ldr	r3, [r3]
   1c6dc:	str	r3, [fp, #-8]
   1c6e0:	b	1c724 <sprintf@plt+0xb088>
   1c6e4:	ldr	r3, [fp, #-8]
   1c6e8:	ldr	r3, [r3]
   1c6ec:	str	r3, [fp, #-12]
   1c6f0:	ldr	r3, [fp, #-12]
   1c6f4:	ldr	r3, [r3, #16]
   1c6f8:	ldr	r1, [fp, #-16]
   1c6fc:	mov	r0, r3
   1c700:	bl	1139c <strcasecmp@plt>
   1c704:	mov	r3, r0
   1c708:	cmp	r3, #0
   1c70c:	bne	1c718 <sprintf@plt+0xb07c>
   1c710:	ldr	r3, [fp, #-12]
   1c714:	b	1c734 <sprintf@plt+0xb098>
   1c718:	ldr	r3, [fp, #-8]
   1c71c:	ldr	r3, [r3, #8]
   1c720:	str	r3, [fp, #-8]
   1c724:	ldr	r3, [fp, #-8]
   1c728:	cmp	r3, #0
   1c72c:	bne	1c6e4 <sprintf@plt+0xb048>
   1c730:	mov	r3, #0
   1c734:	mov	r0, r3
   1c738:	sub	sp, fp, #4
   1c73c:	ldr	fp, [sp]
   1c740:	add	sp, sp, #4
   1c744:	pop	{pc}		; (ldr pc, [sp], #4)
   1c748:	andeq	r4, r1, ip, lsr #18
   1c74c:			; <UNDEFINED> instruction: 0x000001b0
   1c750:	str	fp, [sp, #-8]!
   1c754:	str	lr, [sp, #4]
   1c758:	add	fp, sp, #4
   1c75c:	sub	sp, sp, #16
   1c760:	str	r0, [fp, #-16]
   1c764:	str	r1, [fp, #-20]	; 0xffffffec
   1c768:	ldr	r0, [fp, #-16]
   1c76c:	bl	1c6b4 <sprintf@plt+0xb018>
   1c770:	str	r0, [fp, #-8]
   1c774:	ldr	r3, [fp, #-8]
   1c778:	cmp	r3, #0
   1c77c:	beq	1c798 <sprintf@plt+0xb0fc>
   1c780:	ldr	r3, [fp, #-8]
   1c784:	ldr	r2, [r3, #12]
   1c788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c78c:	str	r2, [r3]
   1c790:	mov	r3, #1
   1c794:	b	1c79c <sprintf@plt+0xb100>
   1c798:	mov	r3, #0
   1c79c:	mov	r0, r3
   1c7a0:	sub	sp, fp, #4
   1c7a4:	ldr	fp, [sp]
   1c7a8:	add	sp, sp, #4
   1c7ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c7b4:	add	fp, sp, #0
   1c7b8:	sub	sp, sp, #12
   1c7bc:	str	r0, [fp, #-8]
   1c7c0:	str	r1, [fp, #-12]
   1c7c4:	ldr	r3, [fp, #-8]
   1c7c8:	ldr	r2, [r3, #464]	; 0x1d0
   1c7cc:	ldr	r3, [fp, #-12]
   1c7d0:	lsl	r3, r3, #4
   1c7d4:	add	r3, r2, r3
   1c7d8:	ldr	r3, [r3, #12]
   1c7dc:	mov	r0, r3
   1c7e0:	add	sp, fp, #0
   1c7e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1c7e8:	bx	lr
   1c7ec:	str	fp, [sp, #-8]!
   1c7f0:	str	lr, [sp, #4]
   1c7f4:	add	fp, sp, #4
   1c7f8:	sub	sp, sp, #16
   1c7fc:	str	r0, [fp, #-16]
   1c800:	str	r1, [fp, #-20]	; 0xffffffec
   1c804:	sub	r3, fp, #8
   1c808:	mov	r1, r3
   1c80c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c810:	bl	1c750 <sprintf@plt+0xb0b4>
   1c814:	mov	r3, r0
   1c818:	cmp	r3, #0
   1c81c:	beq	1c848 <sprintf@plt+0xb1ac>
   1c820:	ldr	r3, [fp, #-8]
   1c824:	mov	r1, r3
   1c828:	ldr	r0, [fp, #-16]
   1c82c:	bl	1c7b0 <sprintf@plt+0xb114>
   1c830:	mov	r3, r0
   1c834:	cmp	r3, #2
   1c838:	moveq	r3, #1
   1c83c:	movne	r3, #0
   1c840:	uxtb	r3, r3
   1c844:	b	1c84c <sprintf@plt+0xb1b0>
   1c848:	mov	r3, #1
   1c84c:	mov	r0, r3
   1c850:	sub	sp, fp, #4
   1c854:	ldr	fp, [sp]
   1c858:	add	sp, sp, #4
   1c85c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c860:	push	{fp}		; (str fp, [sp, #-4]!)
   1c864:	add	fp, sp, #0
   1c868:	sub	sp, sp, #12
   1c86c:	str	r0, [fp, #-8]
   1c870:	str	r1, [fp, #-12]
   1c874:	ldr	r3, [fp, #-8]
   1c878:	ldr	r2, [r3, #464]	; 0x1d0
   1c87c:	ldr	r3, [fp, #-12]
   1c880:	lsl	r3, r3, #4
   1c884:	add	r3, r2, r3
   1c888:	ldr	r3, [r3, #8]
   1c88c:	mov	r0, r3
   1c890:	add	sp, fp, #0
   1c894:	pop	{fp}		; (ldr fp, [sp], #4)
   1c898:	bx	lr
   1c89c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c8a0:	add	fp, sp, #0
   1c8a4:	sub	sp, sp, #20
   1c8a8:	str	r0, [fp, #-8]
   1c8ac:	str	r1, [fp, #-12]
   1c8b0:	str	r2, [fp, #-16]
   1c8b4:	ldr	r3, [fp, #-8]
   1c8b8:	ldr	r2, [r3, #464]	; 0x1d0
   1c8bc:	ldr	r3, [fp, #-12]
   1c8c0:	lsl	r3, r3, #4
   1c8c4:	add	r3, r2, r3
   1c8c8:	ldr	r2, [fp, #-16]
   1c8cc:	str	r2, [r3, #8]
   1c8d0:	nop	{0}
   1c8d4:	add	sp, fp, #0
   1c8d8:	pop	{fp}		; (ldr fp, [sp], #4)
   1c8dc:	bx	lr
   1c8e0:	str	fp, [sp, #-8]!
   1c8e4:	str	lr, [sp, #4]
   1c8e8:	add	fp, sp, #4
   1c8ec:	sub	sp, sp, #16
   1c8f0:	str	r0, [fp, #-8]
   1c8f4:	str	r1, [fp, #-12]
   1c8f8:	str	r2, [fp, #-16]
   1c8fc:	bl	114b0 <rb_current_time@plt>
   1c900:	mov	r1, r0
   1c904:	ldr	r3, [fp, #-8]
   1c908:	ldr	r2, [r3, #464]	; 0x1d0
   1c90c:	ldr	r3, [fp, #-12]
   1c910:	lsl	r3, r3, #4
   1c914:	add	r3, r2, r3
   1c918:	ldr	r2, [fp, #-16]
   1c91c:	add	r2, r1, r2
   1c920:	str	r2, [r3, #4]
   1c924:	nop	{0}
   1c928:	sub	sp, fp, #4
   1c92c:	ldr	fp, [sp]
   1c930:	add	sp, sp, #4
   1c934:	pop	{pc}		; (ldr pc, [sp], #4)
   1c938:	push	{fp}		; (str fp, [sp, #-4]!)
   1c93c:	add	fp, sp, #0
   1c940:	sub	sp, sp, #20
   1c944:	str	r0, [fp, #-8]
   1c948:	str	r1, [fp, #-12]
   1c94c:	str	r2, [fp, #-16]
   1c950:	ldr	r3, [fp, #-8]
   1c954:	ldr	r2, [r3, #464]	; 0x1d0
   1c958:	ldr	r3, [fp, #-12]
   1c95c:	lsl	r3, r3, #4
   1c960:	add	r3, r2, r3
   1c964:	ldr	r2, [fp, #-16]
   1c968:	str	r2, [r3, #4]
   1c96c:	nop	{0}
   1c970:	add	sp, fp, #0
   1c974:	pop	{fp}		; (ldr fp, [sp], #4)
   1c978:	bx	lr
   1c97c:	str	fp, [sp, #-8]!
   1c980:	str	lr, [sp, #4]
   1c984:	add	fp, sp, #4
   1c988:	sub	sp, sp, #8
   1c98c:	str	r0, [fp, #-8]
   1c990:	ldr	r3, [pc, #176]	; 1ca48 <sprintf@plt+0xb3ac>
   1c994:	add	r3, pc, r3
   1c998:	mov	r1, r3
   1c99c:	ldr	r0, [fp, #-8]
   1c9a0:	bl	1139c <strcasecmp@plt>
   1c9a4:	mov	r3, r0
   1c9a8:	cmp	r3, #0
   1c9ac:	bne	1c9b8 <sprintf@plt+0xb31c>
   1c9b0:	mov	r3, #1
   1c9b4:	b	1ca34 <sprintf@plt+0xb398>
   1c9b8:	ldr	r3, [pc, #140]	; 1ca4c <sprintf@plt+0xb3b0>
   1c9bc:	add	r3, pc, r3
   1c9c0:	mov	r1, r3
   1c9c4:	ldr	r0, [fp, #-8]
   1c9c8:	bl	1139c <strcasecmp@plt>
   1c9cc:	mov	r3, r0
   1c9d0:	cmp	r3, #0
   1c9d4:	bne	1c9e0 <sprintf@plt+0xb344>
   1c9d8:	mov	r3, #2
   1c9dc:	b	1ca34 <sprintf@plt+0xb398>
   1c9e0:	ldr	r3, [pc, #104]	; 1ca50 <sprintf@plt+0xb3b4>
   1c9e4:	add	r3, pc, r3
   1c9e8:	mov	r1, r3
   1c9ec:	ldr	r0, [fp, #-8]
   1c9f0:	bl	1139c <strcasecmp@plt>
   1c9f4:	mov	r3, r0
   1c9f8:	cmp	r3, #0
   1c9fc:	bne	1ca08 <sprintf@plt+0xb36c>
   1ca00:	mov	r3, #3
   1ca04:	b	1ca34 <sprintf@plt+0xb398>
   1ca08:	ldr	r3, [pc, #68]	; 1ca54 <sprintf@plt+0xb3b8>
   1ca0c:	add	r3, pc, r3
   1ca10:	mov	r1, r3
   1ca14:	ldr	r0, [fp, #-8]
   1ca18:	bl	1139c <strcasecmp@plt>
   1ca1c:	mov	r3, r0
   1ca20:	cmp	r3, #0
   1ca24:	bne	1ca30 <sprintf@plt+0xb394>
   1ca28:	mov	r3, #4
   1ca2c:	b	1ca34 <sprintf@plt+0xb398>
   1ca30:	mov	r3, #0
   1ca34:	mov	r0, r3
   1ca38:	sub	sp, fp, #4
   1ca3c:	ldr	fp, [sp]
   1ca40:	add	sp, sp, #4
   1ca44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca48:	andeq	r3, r0, r0, lsr #7
   1ca4c:	andeq	r3, r0, r0, lsl #7
   1ca50:	andeq	r3, r0, r0, ror #6
   1ca54:	andeq	r3, r0, r4, asr #6
   1ca58:	push	{fp}		; (str fp, [sp, #-4]!)
   1ca5c:	add	fp, sp, #0
   1ca60:	sub	sp, sp, #20
   1ca64:	str	r0, [fp, #-16]
   1ca68:	mov	r3, r1
   1ca6c:	strh	r3, [fp, #-18]	; 0xffffffee
   1ca70:	ldr	r3, [pc, #116]	; 1caec <sprintf@plt+0xb450>
   1ca74:	add	r3, pc, r3
   1ca78:	ldr	r3, [r3]
   1ca7c:	str	r3, [fp, #-8]
   1ca80:	b	1cacc <sprintf@plt+0xb430>
   1ca84:	ldr	r3, [fp, #-8]
   1ca88:	ldr	r3, [r3]
   1ca8c:	str	r3, [fp, #-12]
   1ca90:	ldr	r3, [fp, #-12]
   1ca94:	ldr	r3, [r3, #16]
   1ca98:	ldr	r2, [fp, #-16]
   1ca9c:	cmp	r2, r3
   1caa0:	bne	1cac0 <sprintf@plt+0xb424>
   1caa4:	ldr	r3, [fp, #-12]
   1caa8:	ldrh	r3, [r3, #20]
   1caac:	ldrh	r2, [fp, #-18]	; 0xffffffee
   1cab0:	cmp	r2, r3
   1cab4:	bne	1cac0 <sprintf@plt+0xb424>
   1cab8:	ldr	r3, [fp, #-12]
   1cabc:	b	1cadc <sprintf@plt+0xb440>
   1cac0:	ldr	r3, [fp, #-8]
   1cac4:	ldr	r3, [r3, #8]
   1cac8:	str	r3, [fp, #-8]
   1cacc:	ldr	r3, [fp, #-8]
   1cad0:	cmp	r3, #0
   1cad4:	bne	1ca84 <sprintf@plt+0xb3e8>
   1cad8:	mov	r3, #0
   1cadc:	mov	r0, r3
   1cae0:	add	sp, fp, #0
   1cae4:	pop	{fp}		; (ldr fp, [sp], #4)
   1cae8:	bx	lr
   1caec:	andeq	r9, r1, r0, ror #11
   1caf0:	strd	r4, [sp, #-16]!
   1caf4:	str	fp, [sp, #8]
   1caf8:	str	lr, [sp, #12]
   1cafc:	add	fp, sp, #12
   1cb00:	sub	sp, sp, #168	; 0xa8
   1cb04:	str	r0, [fp, #-176]	; 0xffffff50
   1cb08:	str	r1, [fp, #-180]	; 0xffffff4c
   1cb0c:	ldr	r4, [pc, #468]	; 1cce8 <sprintf@plt+0xb64c>
   1cb10:	add	r4, pc, r4
   1cb14:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1cb18:	str	r3, [fp, #-28]	; 0xffffffe4
   1cb1c:	ldr	r3, [pc, #456]	; 1ccec <sprintf@plt+0xb650>
   1cb20:	ldr	r3, [r4, r3]
   1cb24:	ldr	r3, [r3, #12]
   1cb28:	mov	r1, r3
   1cb2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cb30:	bl	1c860 <sprintf@plt+0xb1c4>
   1cb34:	str	r0, [fp, #-32]	; 0xffffffe0
   1cb38:	sub	r3, fp, #172	; 0xac
   1cb3c:	mov	r2, #128	; 0x80
   1cb40:	mov	r1, r3
   1cb44:	ldr	r0, [fp, #-176]	; 0xffffff50
   1cb48:	bl	1145c <rb_read@plt>
   1cb4c:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb54:	cmp	r3, #0
   1cb58:	bge	1cb98 <sprintf@plt+0xb4fc>
   1cb5c:	bl	11690 <__errno_location@plt>
   1cb60:	mov	r3, r0
   1cb64:	ldr	r3, [r3]
   1cb68:	mov	r0, r3
   1cb6c:	bl	112dc <rb_ignore_errno@plt>
   1cb70:	mov	r3, r0
   1cb74:	cmp	r3, #0
   1cb78:	beq	1cb98 <sprintf@plt+0xb4fc>
   1cb7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cb80:	ldr	r2, [pc, #360]	; 1ccf0 <sprintf@plt+0xb654>
   1cb84:	add	r2, pc, r2
   1cb88:	mov	r1, #1
   1cb8c:	ldr	r0, [fp, #-176]	; 0xffffff50
   1cb90:	bl	11324 <rb_setselect@plt>
   1cb94:	b	1ccd4 <sprintf@plt+0xb638>
   1cb98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb9c:	cmp	r3, #0
   1cba0:	bgt	1cbb0 <sprintf@plt+0xb514>
   1cba4:	ldr	r0, [fp, #-176]	; 0xffffff50
   1cba8:	bl	114e0 <rb_close@plt>
   1cbac:	b	1ccd4 <sprintf@plt+0xb638>
   1cbb0:	ldr	r3, [pc, #316]	; 1ccf4 <sprintf@plt+0xb658>
   1cbb4:	add	r3, pc, r3
   1cbb8:	ldr	r3, [r3]
   1cbbc:	str	r3, [fp, #-16]
   1cbc0:	b	1ccc0 <sprintf@plt+0xb624>
   1cbc4:	ldr	r3, [fp, #-16]
   1cbc8:	ldr	r3, [r3]
   1cbcc:	str	r3, [fp, #-40]	; 0xffffffd8
   1cbd0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1cbd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cbd8:	mov	r0, r3
   1cbdc:	bl	114a4 <strlen@plt>
   1cbe0:	mov	r2, r0
   1cbe4:	sub	r3, fp, #172	; 0xac
   1cbe8:	mov	r1, r3
   1cbec:	mov	r0, r5
   1cbf0:	bl	11648 <strncmp@plt>
   1cbf4:	mov	r3, r0
   1cbf8:	cmp	r3, #0
   1cbfc:	bne	1ccb4 <sprintf@plt+0xb618>
   1cc00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc04:	ldr	r3, [r3]
   1cc08:	str	r3, [fp, #-20]	; 0xffffffec
   1cc0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc10:	cmp	r3, #0
   1cc14:	beq	1cc24 <sprintf@plt+0xb588>
   1cc18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc1c:	ldr	r3, [r3, #8]
   1cc20:	b	1cc28 <sprintf@plt+0xb58c>
   1cc24:	mov	r3, #0
   1cc28:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc2c:	b	1cc7c <sprintf@plt+0xb5e0>
   1cc30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc34:	ldr	r3, [r3]
   1cc38:	str	r3, [fp, #-44]	; 0xffffffd4
   1cc3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc40:	ldr	r3, [r3, #4]
   1cc44:	mov	r0, r3
   1cc48:	bl	114e0 <rb_close@plt>
   1cc4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc50:	bl	1c5e0 <sprintf@plt+0xaf44>
   1cc54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc58:	str	r3, [fp, #-20]	; 0xffffffec
   1cc5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc60:	cmp	r3, #0
   1cc64:	beq	1cc74 <sprintf@plt+0xb5d8>
   1cc68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc6c:	ldr	r3, [r3, #8]
   1cc70:	b	1cc78 <sprintf@plt+0xb5dc>
   1cc74:	mov	r3, #0
   1cc78:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc80:	cmp	r3, #0
   1cc84:	bne	1cc30 <sprintf@plt+0xb594>
   1cc88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc8c:	bl	1c5e0 <sprintf@plt+0xaf44>
   1cc90:	ldr	r3, [pc, #84]	; 1ccec <sprintf@plt+0xb650>
   1cc94:	ldr	r3, [r4, r3]
   1cc98:	ldr	r1, [r3, #12]
   1cc9c:	sub	r2, fp, #172	; 0xac
   1cca0:	ldr	r3, [pc, #80]	; 1ccf8 <sprintf@plt+0xb65c>
   1cca4:	add	r3, pc, r3
   1cca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccac:	bl	13af4 <sprintf@plt+0x2458>
   1ccb0:	b	1cccc <sprintf@plt+0xb630>
   1ccb4:	ldr	r3, [fp, #-16]
   1ccb8:	ldr	r3, [r3, #8]
   1ccbc:	str	r3, [fp, #-16]
   1ccc0:	ldr	r3, [fp, #-16]
   1ccc4:	cmp	r3, #0
   1ccc8:	bne	1cbc4 <sprintf@plt+0xb528>
   1cccc:	ldr	r0, [fp, #-176]	; 0xffffff50
   1ccd0:	bl	114e0 <rb_close@plt>
   1ccd4:	sub	sp, fp, #12
   1ccd8:	ldrd	r4, [sp]
   1ccdc:	ldr	fp, [sp, #8]
   1cce0:	add	sp, sp, #12
   1cce4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cce8:	andeq	r4, r1, r8, ror #9
   1ccec:	muleq	r0, r4, r1
   1ccf0:			; <UNDEFINED> instruction: 0xffffff64
   1ccf4:	andeq	r9, r1, r0, lsr #9
   1ccf8:	strheq	r3, [r0], -ip
   1ccfc:	str	r4, [sp, #-12]!
   1cd00:	str	fp, [sp, #4]
   1cd04:	str	lr, [sp, #8]
   1cd08:	add	fp, sp, #8
   1cd0c:	sub	sp, sp, #196	; 0xc4
   1cd10:	str	r0, [fp, #-192]	; 0xffffff40
   1cd14:	str	r1, [fp, #-196]	; 0xffffff3c
   1cd18:	str	r2, [fp, #-200]	; 0xffffff38
   1cd1c:	str	r3, [fp, #-204]	; 0xffffff34
   1cd20:	ldr	r4, [pc, #604]	; 1cf84 <sprintf@plt+0xb8e8>
   1cd24:	add	r4, pc, r4
   1cd28:	mov	r3, #0
   1cd2c:	str	r3, [fp, #-16]
   1cd30:	ldr	r3, [fp, #4]
   1cd34:	str	r3, [fp, #-20]	; 0xffffffec
   1cd38:	mov	r3, #128	; 0x80
   1cd3c:	str	r3, [fp, #-176]	; 0xffffff50
   1cd40:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1cd44:	cmp	r3, #0
   1cd48:	bne	1cd58 <sprintf@plt+0xb6bc>
   1cd4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd50:	cmp	r3, #0
   1cd54:	bne	1cd64 <sprintf@plt+0xb6c8>
   1cd58:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cd5c:	bl	114e0 <rb_close@plt>
   1cd60:	b	1cf70 <sprintf@plt+0xb8d4>
   1cd64:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cd68:	bl	11330 <rb_get_fd@plt>
   1cd6c:	sub	r2, fp, #176	; 0xb0
   1cd70:	sub	r3, fp, #172	; 0xac
   1cd74:	mov	r1, r3
   1cd78:	bl	112d0 <getsockname@plt>
   1cd7c:	mov	r3, r0
   1cd80:	cmp	r3, #0
   1cd84:	beq	1cd94 <sprintf@plt+0xb6f8>
   1cd88:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cd8c:	bl	114e0 <rb_close@plt>
   1cd90:	b	1cf70 <sprintf@plt+0xb8d4>
   1cd94:	ldr	r3, [pc, #492]	; 1cf88 <sprintf@plt+0xb8ec>
   1cd98:	ldr	r3, [r4, r3]
   1cd9c:	ldr	r3, [r3]
   1cda0:	sub	r2, fp, #184	; 0xb8
   1cda4:	mov	r1, r2
   1cda8:	mov	r0, r3
   1cdac:	bl	11480 <rb_dictionary_foreach_start@plt>
   1cdb0:	b	1cf3c <sprintf@plt+0xb8a0>
   1cdb4:	ldr	r3, [fp, #-16]
   1cdb8:	add	r3, r3, #248	; 0xf8
   1cdbc:	ldrh	r2, [r3]
   1cdc0:	sub	r3, fp, #172	; 0xac
   1cdc4:	ldrh	r3, [r3]
   1cdc8:	cmp	r2, r3
   1cdcc:	bne	1cf0c <sprintf@plt+0xb870>
   1cdd0:	sub	r3, fp, #172	; 0xac
   1cdd4:	ldrh	r3, [r3]
   1cdd8:	cmp	r3, #2
   1cddc:	beq	1cdec <sprintf@plt+0xb750>
   1cde0:	cmp	r3, #10
   1cde4:	beq	1ce34 <sprintf@plt+0xb798>
   1cde8:	b	1cef0 <sprintf@plt+0xb854>
   1cdec:	sub	r3, fp, #172	; 0xac
   1cdf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cdf4:	ldr	r3, [fp, #-16]
   1cdf8:	add	r3, r3, #248	; 0xf8
   1cdfc:	str	r3, [fp, #-28]	; 0xffffffe4
   1ce00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce04:	ldr	r2, [r3, #4]
   1ce08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce0c:	ldr	r3, [r3, #4]
   1ce10:	cmp	r2, r3
   1ce14:	bne	1cf14 <sprintf@plt+0xb878>
   1ce18:	ldr	r3, [fp, #-16]
   1ce1c:	ldr	r2, [pc, #360]	; 1cf8c <sprintf@plt+0xb8f0>
   1ce20:	add	r2, pc, r2
   1ce24:	mov	r1, #1
   1ce28:	ldr	r0, [fp, #-192]	; 0xffffff40
   1ce2c:	bl	11324 <rb_setselect@plt>
   1ce30:	b	1cf70 <sprintf@plt+0xb8d4>
   1ce34:	sub	r3, fp, #172	; 0xac
   1ce38:	str	r3, [fp, #-32]	; 0xffffffe0
   1ce3c:	ldr	r3, [fp, #-16]
   1ce40:	add	r3, r3, #248	; 0xf8
   1ce44:	str	r3, [fp, #-36]	; 0xffffffdc
   1ce48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce4c:	add	r3, r3, #8
   1ce50:	str	r3, [fp, #-40]	; 0xffffffd8
   1ce54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ce58:	add	r3, r3, #8
   1ce5c:	str	r3, [fp, #-44]	; 0xffffffd4
   1ce60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce64:	ldr	r2, [r3]
   1ce68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ce6c:	ldr	r3, [r3]
   1ce70:	cmp	r2, r3
   1ce74:	bne	1cec8 <sprintf@plt+0xb82c>
   1ce78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce7c:	ldr	r2, [r3, #4]
   1ce80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ce84:	ldr	r3, [r3, #4]
   1ce88:	cmp	r2, r3
   1ce8c:	bne	1cec8 <sprintf@plt+0xb82c>
   1ce90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce94:	ldr	r2, [r3, #8]
   1ce98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ce9c:	ldr	r3, [r3, #8]
   1cea0:	cmp	r2, r3
   1cea4:	bne	1cec8 <sprintf@plt+0xb82c>
   1cea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ceac:	ldr	r2, [r3, #12]
   1ceb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ceb4:	ldr	r3, [r3, #12]
   1ceb8:	cmp	r2, r3
   1cebc:	bne	1cec8 <sprintf@plt+0xb82c>
   1cec0:	mov	r3, #1
   1cec4:	b	1cecc <sprintf@plt+0xb830>
   1cec8:	mov	r3, #0
   1cecc:	cmp	r3, #0
   1ced0:	beq	1cf1c <sprintf@plt+0xb880>
   1ced4:	ldr	r3, [fp, #-16]
   1ced8:	ldr	r2, [pc, #176]	; 1cf90 <sprintf@plt+0xb8f4>
   1cedc:	add	r2, pc, r2
   1cee0:	mov	r1, #1
   1cee4:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cee8:	bl	11324 <rb_setselect@plt>
   1ceec:	b	1cf70 <sprintf@plt+0xb8d4>
   1cef0:	ldr	r3, [pc, #156]	; 1cf94 <sprintf@plt+0xb8f8>
   1cef4:	add	r3, pc, r3
   1cef8:	mov	r1, r3
   1cefc:	mov	r0, #67	; 0x43
   1cf00:	bl	12b00 <sprintf@plt+0x1464>
   1cf04:	mov	r0, #3
   1cf08:	bl	11684 <exit@plt>
   1cf0c:	nop	{0}
   1cf10:	b	1cf20 <sprintf@plt+0xb884>
   1cf14:	nop	{0}
   1cf18:	b	1cf20 <sprintf@plt+0xb884>
   1cf1c:	nop	{0}
   1cf20:	ldr	r3, [pc, #96]	; 1cf88 <sprintf@plt+0xb8ec>
   1cf24:	ldr	r3, [r4, r3]
   1cf28:	ldr	r3, [r3]
   1cf2c:	sub	r2, fp, #184	; 0xb8
   1cf30:	mov	r1, r2
   1cf34:	mov	r0, r3
   1cf38:	bl	11438 <rb_dictionary_foreach_next@plt>
   1cf3c:	ldr	r3, [pc, #68]	; 1cf88 <sprintf@plt+0xb8ec>
   1cf40:	ldr	r3, [r4, r3]
   1cf44:	ldr	r3, [r3]
   1cf48:	sub	r2, fp, #184	; 0xb8
   1cf4c:	mov	r1, r2
   1cf50:	mov	r0, r3
   1cf54:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1cf58:	str	r0, [fp, #-16]
   1cf5c:	ldr	r3, [fp, #-16]
   1cf60:	cmp	r3, #0
   1cf64:	bne	1cdb4 <sprintf@plt+0xb718>
   1cf68:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cf6c:	bl	114e0 <rb_close@plt>
   1cf70:	sub	sp, fp, #8
   1cf74:	ldr	r4, [sp]
   1cf78:	ldr	fp, [sp, #4]
   1cf7c:	add	sp, sp, #8
   1cf80:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf84:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1cf88:	andeq	r0, r0, r8, ror #2
   1cf8c:			; <UNDEFINED> instruction: 0xfffffcc8
   1cf90:			; <UNDEFINED> instruction: 0xfffffc0c
   1cf94:	andeq	r2, r0, r0, lsl #29
   1cf98:	str	fp, [sp, #-8]!
   1cf9c:	str	lr, [sp, #4]
   1cfa0:	add	fp, sp, #4
   1cfa4:	sub	sp, sp, #32
   1cfa8:	str	r0, [fp, #-24]	; 0xffffffe8
   1cfac:	str	r1, [fp, #-28]	; 0xffffffe4
   1cfb0:	str	r2, [fp, #-32]	; 0xffffffe0
   1cfb4:	ldr	r2, [pc, #316]	; 1d0f8 <sprintf@plt+0xba5c>
   1cfb8:	add	r2, pc, r2
   1cfbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cfc0:	str	r3, [fp, #-8]
   1cfc4:	ldr	r3, [fp, #-8]
   1cfc8:	ldr	r3, [r3, #8]
   1cfcc:	str	r3, [fp, #-12]
   1cfd0:	ldr	r3, [fp, #-8]
   1cfd4:	ldr	r3, [r3]
   1cfd8:	str	r3, [fp, #-16]
   1cfdc:	ldr	r3, [pc, #280]	; 1d0fc <sprintf@plt+0xba60>
   1cfe0:	ldr	r3, [r2, r3]
   1cfe4:	ldr	r3, [r3, #12]
   1cfe8:	mov	r1, r3
   1cfec:	ldr	r0, [fp, #-16]
   1cff0:	bl	1c860 <sprintf@plt+0xb1c4>
   1cff4:	str	r0, [fp, #-20]	; 0xffffffec
   1cff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cffc:	cmp	r3, #0
   1d000:	bne	1d0a0 <sprintf@plt+0xba04>
   1d004:	ldr	r3, [pc, #244]	; 1d100 <sprintf@plt+0xba64>
   1d008:	add	r3, pc, r3
   1d00c:	ldrb	r3, [r3]
   1d010:	eor	r3, r3, #1
   1d014:	uxtb	r3, r3
   1d018:	cmp	r3, #0
   1d01c:	bne	1d0a0 <sprintf@plt+0xba04>
   1d020:	ldr	r3, [fp, #-16]
   1d024:	add	r3, r3, #248	; 0xf8
   1d028:	ldrh	r3, [r3]
   1d02c:	cmp	r3, #2
   1d030:	beq	1d040 <sprintf@plt+0xb9a4>
   1d034:	cmp	r3, #10
   1d038:	beq	1d058 <sprintf@plt+0xb9bc>
   1d03c:	b	1d0b4 <sprintf@plt+0xba18>
   1d040:	ldr	r3, [pc, #188]	; 1d104 <sprintf@plt+0xba68>
   1d044:	add	r3, pc, r3
   1d048:	ldr	r3, [r3, #184]	; 0xb8
   1d04c:	cmp	r3, #0
   1d050:	bne	1d088 <sprintf@plt+0xb9ec>
   1d054:	b	1d0b4 <sprintf@plt+0xba18>
   1d058:	ldr	r3, [fp, #-12]
   1d05c:	ldrb	r3, [r3, #23]
   1d060:	eor	r3, r3, #1
   1d064:	uxtb	r3, r3
   1d068:	cmp	r3, #0
   1d06c:	bne	1d0a8 <sprintf@plt+0xba0c>
   1d070:	ldr	r3, [pc, #144]	; 1d108 <sprintf@plt+0xba6c>
   1d074:	add	r3, pc, r3
   1d078:	ldr	r3, [r3, #372]	; 0x174
   1d07c:	cmp	r3, #0
   1d080:	beq	1d0b0 <sprintf@plt+0xba14>
   1d084:	b	1d08c <sprintf@plt+0xb9f0>
   1d088:	nop	{0}
   1d08c:	ldr	r3, [fp, #-12]
   1d090:	ldr	r3, [r3, #24]
   1d094:	ldr	r0, [fp, #-8]
   1d098:	blx	r3
   1d09c:	b	1d0b4 <sprintf@plt+0xba18>
   1d0a0:	nop	{0}
   1d0a4:	b	1d0b4 <sprintf@plt+0xba18>
   1d0a8:	nop	{0}
   1d0ac:	b	1d0b4 <sprintf@plt+0xba18>
   1d0b0:	nop	{0}
   1d0b4:	ldr	r3, [fp, #-8]
   1d0b8:	ldr	r3, [r3, #4]
   1d0bc:	mov	r0, r3
   1d0c0:	bl	114e0 <rb_close@plt>
   1d0c4:	ldr	r3, [fp, #-8]
   1d0c8:	add	r3, r3, #16
   1d0cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d0d0:	mov	r1, r2
   1d0d4:	mov	r0, r3
   1d0d8:	bl	1c444 <sprintf@plt+0xada8>
   1d0dc:	ldr	r0, [fp, #-8]
   1d0e0:	bl	1c5e0 <sprintf@plt+0xaf44>
   1d0e4:	nop	{0}
   1d0e8:	sub	sp, fp, #4
   1d0ec:	ldr	fp, [sp]
   1d0f0:	add	sp, sp, #4
   1d0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0f8:	andeq	r4, r1, r0, asr #32
   1d0fc:	muleq	r0, r4, r1
   1d100:	andeq	r9, r1, r8, asr r0
   1d104:	andeq	r9, r1, r0, lsr #32
   1d108:	strdeq	r8, [r1], -r0
   1d10c:	strd	r4, [sp, #-16]!
   1d110:	str	fp, [sp, #8]
   1d114:	str	lr, [sp, #12]
   1d118:	add	fp, sp, #12
   1d11c:	sub	sp, sp, #24
   1d120:	str	r0, [fp, #-32]	; 0xffffffe0
   1d124:	sub	r3, fp, #28
   1d128:	str	r3, [fp, #-16]
   1d12c:	mov	r2, #2
   1d130:	ldr	r3, [pc, #256]	; 1d238 <sprintf@plt+0xbb9c>
   1d134:	add	r3, pc, r3
   1d138:	mov	r1, r3
   1d13c:	ldr	r0, [fp, #-16]
   1d140:	bl	114c8 <memcpy@plt>
   1d144:	ldr	r3, [fp, #-16]
   1d148:	add	r3, r3, #2
   1d14c:	str	r3, [fp, #-16]
   1d150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d154:	ldr	r3, [r3, #12]
   1d158:	add	r3, r3, #56	; 0x38
   1d15c:	add	r3, r3, #2
   1d160:	ldrh	r3, [r3]
   1d164:	uxth	r2, r3
   1d168:	ldr	r3, [fp, #-16]
   1d16c:	strh	r2, [r3]
   1d170:	ldr	r3, [fp, #-16]
   1d174:	add	r3, r3, #2
   1d178:	str	r3, [fp, #-16]
   1d17c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d180:	ldr	r3, [r3, #12]
   1d184:	add	r3, r3, #56	; 0x38
   1d188:	add	r3, r3, #4
   1d18c:	ldr	r3, [r3]
   1d190:	mov	r2, r3
   1d194:	ldr	r3, [fp, #-16]
   1d198:	str	r2, [r3]
   1d19c:	ldr	r3, [fp, #-16]
   1d1a0:	add	r3, r3, #4
   1d1a4:	str	r3, [fp, #-16]
   1d1a8:	ldr	r3, [fp, #-16]
   1d1ac:	mov	r2, #0
   1d1b0:	strb	r2, [r3]
   1d1b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1b8:	ldr	r3, [r3, #4]
   1d1bc:	sub	r1, fp, #28
   1d1c0:	mov	r2, #9
   1d1c4:	mov	r0, r3
   1d1c8:	bl	11408 <rb_write@plt>
   1d1cc:	mov	r3, r0
   1d1d0:	cmp	r3, #0
   1d1d4:	blt	1d220 <sprintf@plt+0xbb84>
   1d1d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1dc:	ldr	r4, [r3, #4]
   1d1e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1e4:	ldr	r3, [r3, #8]
   1d1e8:	mov	r5, r3
   1d1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1f0:	ldr	r3, [r3, #8]
   1d1f4:	mov	r0, r3
   1d1f8:	bl	114a4 <strlen@plt>
   1d1fc:	mov	r3, r0
   1d200:	add	r3, r3, #1
   1d204:	mov	r2, r3
   1d208:	mov	r1, r5
   1d20c:	mov	r0, r4
   1d210:	bl	11408 <rb_write@plt>
   1d214:	mov	r3, r0
   1d218:	cmp	r3, #0
   1d21c:	b	1d224 <sprintf@plt+0xbb88>
   1d220:	nop	{0}
   1d224:	sub	sp, fp, #12
   1d228:	ldrd	r4, [sp]
   1d22c:	ldr	fp, [sp, #8]
   1d230:	add	sp, sp, #12
   1d234:	pop	{pc}		; (ldr pc, [sp], #4)
   1d238:	andeq	r2, r0, r0, ror ip
   1d23c:	strd	r4, [sp, #-16]!
   1d240:	str	fp, [sp, #8]
   1d244:	str	lr, [sp, #12]
   1d248:	add	fp, sp, #12
   1d24c:	sub	sp, sp, #48	; 0x30
   1d250:	str	r0, [fp, #-56]	; 0xffffffc8
   1d254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d258:	ldr	r3, [r3]
   1d25c:	str	r3, [fp, #-20]	; 0xffffffec
   1d260:	sub	r3, fp, #48	; 0x30
   1d264:	str	r3, [fp, #-16]
   1d268:	mov	r2, #6
   1d26c:	ldr	r3, [pc, #420]	; 1d418 <sprintf@plt+0xbd7c>
   1d270:	add	r3, pc, r3
   1d274:	mov	r1, r3
   1d278:	ldr	r0, [fp, #-16]
   1d27c:	bl	114c8 <memcpy@plt>
   1d280:	ldr	r3, [fp, #-16]
   1d284:	add	r3, r3, #6
   1d288:	str	r3, [fp, #-16]
   1d28c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d290:	add	r3, r3, #248	; 0xf8
   1d294:	ldrh	r3, [r3]
   1d298:	cmp	r3, #2
   1d29c:	beq	1d2ac <sprintf@plt+0xbc10>
   1d2a0:	cmp	r3, #10
   1d2a4:	beq	1d31c <sprintf@plt+0xbc80>
   1d2a8:	b	1d404 <sprintf@plt+0xbd68>
   1d2ac:	ldr	r3, [fp, #-16]
   1d2b0:	add	r2, r3, #1
   1d2b4:	str	r2, [fp, #-16]
   1d2b8:	mov	r2, #1
   1d2bc:	strb	r2, [r3]
   1d2c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2c4:	ldr	r3, [r3, #12]
   1d2c8:	add	r3, r3, #56	; 0x38
   1d2cc:	add	r3, r3, #4
   1d2d0:	ldr	r3, [r3]
   1d2d4:	mov	r2, r3
   1d2d8:	ldr	r3, [fp, #-16]
   1d2dc:	str	r2, [r3]
   1d2e0:	ldr	r3, [fp, #-16]
   1d2e4:	add	r3, r3, #4
   1d2e8:	str	r3, [fp, #-16]
   1d2ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2f0:	ldr	r3, [r3, #12]
   1d2f4:	add	r3, r3, #56	; 0x38
   1d2f8:	add	r3, r3, #2
   1d2fc:	ldrh	r3, [r3]
   1d300:	uxth	r2, r3
   1d304:	ldr	r3, [fp, #-16]
   1d308:	strh	r2, [r3]
   1d30c:	ldr	r3, [fp, #-16]
   1d310:	add	r3, r3, #2
   1d314:	str	r3, [fp, #-16]
   1d318:	b	1d38c <sprintf@plt+0xbcf0>
   1d31c:	ldr	r3, [fp, #-16]
   1d320:	add	r2, r3, #1
   1d324:	str	r2, [fp, #-16]
   1d328:	mov	r2, #4
   1d32c:	strb	r2, [r3]
   1d330:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d334:	ldr	r3, [r3, #12]
   1d338:	add	r3, r3, #56	; 0x38
   1d33c:	add	r3, r3, #8
   1d340:	mov	r2, #16
   1d344:	mov	r1, r3
   1d348:	ldr	r0, [fp, #-16]
   1d34c:	bl	114c8 <memcpy@plt>
   1d350:	ldr	r3, [fp, #-16]
   1d354:	add	r3, r3, #16
   1d358:	str	r3, [fp, #-16]
   1d35c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d360:	ldr	r3, [r3, #12]
   1d364:	add	r3, r3, #56	; 0x38
   1d368:	add	r3, r3, #2
   1d36c:	ldrh	r3, [r3]
   1d370:	uxth	r2, r3
   1d374:	ldr	r3, [fp, #-16]
   1d378:	strh	r2, [r3]
   1d37c:	ldr	r3, [fp, #-16]
   1d380:	add	r3, r3, #2
   1d384:	str	r3, [fp, #-16]
   1d388:	nop	{0}
   1d38c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d390:	ldr	r0, [r3, #4]
   1d394:	sub	r2, fp, #48	; 0x30
   1d398:	ldr	r3, [fp, #-16]
   1d39c:	sub	r2, r2, r3
   1d3a0:	sub	r3, fp, #48	; 0x30
   1d3a4:	mov	r1, r3
   1d3a8:	bl	11408 <rb_write@plt>
   1d3ac:	mov	r3, r0
   1d3b0:	cmp	r3, #0
   1d3b4:	ble	1d400 <sprintf@plt+0xbd64>
   1d3b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3bc:	ldr	r4, [r3, #4]
   1d3c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3c4:	ldr	r3, [r3, #8]
   1d3c8:	mov	r5, r3
   1d3cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3d0:	ldr	r3, [r3, #8]
   1d3d4:	mov	r0, r3
   1d3d8:	bl	114a4 <strlen@plt>
   1d3dc:	mov	r3, r0
   1d3e0:	add	r3, r3, #1
   1d3e4:	mov	r2, r3
   1d3e8:	mov	r1, r5
   1d3ec:	mov	r0, r4
   1d3f0:	bl	11408 <rb_write@plt>
   1d3f4:	mov	r3, r0
   1d3f8:	cmp	r3, #0
   1d3fc:	b	1d404 <sprintf@plt+0xbd68>
   1d400:	nop	{0}
   1d404:	sub	sp, fp, #12
   1d408:	ldrd	r4, [sp]
   1d40c:	ldr	fp, [sp, #8]
   1d410:	add	sp, sp, #12
   1d414:	pop	{pc}		; (ldr pc, [sp], #4)
   1d418:	andeq	r2, r0, r8, lsr fp
   1d41c:	strd	r4, [sp, #-16]!
   1d420:	str	fp, [sp, #8]
   1d424:	str	lr, [sp, #12]
   1d428:	add	fp, sp, #12
   1d42c:	sub	sp, sp, #144	; 0x90
   1d430:	str	r0, [fp, #-144]	; 0xffffff70
   1d434:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d438:	ldr	r3, [r3, #12]
   1d43c:	mov	r2, r3
   1d440:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d444:	ldr	r3, [r3, #12]
   1d448:	ldrh	r3, [r3, #54]	; 0x36
   1d44c:	sub	r0, fp, #140	; 0x8c
   1d450:	str	r3, [sp]
   1d454:	mov	r3, r2
   1d458:	ldr	r2, [pc, #208]	; 1d530 <sprintf@plt+0xbe94>
   1d45c:	add	r2, pc, r2
   1d460:	mov	r1, #128	; 0x80
   1d464:	bl	11630 <snprintf@plt>
   1d468:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d46c:	ldr	r4, [r3, #4]
   1d470:	sub	r3, fp, #140	; 0x8c
   1d474:	mov	r0, r3
   1d478:	bl	114a4 <strlen@plt>
   1d47c:	mov	r3, r0
   1d480:	mov	r2, r3
   1d484:	sub	r3, fp, #140	; 0x8c
   1d488:	mov	r1, r3
   1d48c:	mov	r0, r4
   1d490:	bl	11408 <rb_write@plt>
   1d494:	mov	r3, r0
   1d498:	cmp	r3, #0
   1d49c:	ble	1d510 <sprintf@plt+0xbe74>
   1d4a0:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d4a4:	ldr	r4, [r3, #4]
   1d4a8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d4ac:	ldr	r3, [r3, #8]
   1d4b0:	mov	r5, r3
   1d4b4:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d4b8:	ldr	r3, [r3, #8]
   1d4bc:	mov	r0, r3
   1d4c0:	bl	114a4 <strlen@plt>
   1d4c4:	mov	r3, r0
   1d4c8:	add	r3, r3, #1
   1d4cc:	mov	r2, r3
   1d4d0:	mov	r1, r5
   1d4d4:	mov	r0, r4
   1d4d8:	bl	11408 <rb_write@plt>
   1d4dc:	mov	r3, r0
   1d4e0:	cmp	r3, #0
   1d4e4:	ble	1d518 <sprintf@plt+0xbe7c>
   1d4e8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d4ec:	ldr	r3, [r3, #4]
   1d4f0:	mov	r2, #2
   1d4f4:	ldr	r1, [pc, #56]	; 1d534 <sprintf@plt+0xbe98>
   1d4f8:	add	r1, pc, r1
   1d4fc:	mov	r0, r3
   1d500:	bl	11408 <rb_write@plt>
   1d504:	mov	r3, r0
   1d508:	cmp	r3, #0
   1d50c:	b	1d51c <sprintf@plt+0xbe80>
   1d510:	nop	{0}
   1d514:	b	1d51c <sprintf@plt+0xbe80>
   1d518:	nop	{0}
   1d51c:	sub	sp, fp, #12
   1d520:	ldrd	r4, [sp]
   1d524:	ldr	fp, [sp, #8]
   1d528:	add	sp, sp, #12
   1d52c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d530:	andeq	r2, r0, r4, asr r9
   1d534:	ldrdeq	r2, [r0], -r4
   1d538:	str	r4, [sp, #-12]!
   1d53c:	str	fp, [sp, #4]
   1d540:	str	lr, [sp, #8]
   1d544:	add	fp, sp, #8
   1d548:	sub	sp, sp, #292	; 0x124
   1d54c:	str	r0, [fp, #-288]	; 0xfffffee0
   1d550:	str	r1, [fp, #-292]	; 0xfffffedc
   1d554:	ldr	r2, [pc, #700]	; 1d818 <sprintf@plt+0xc17c>
   1d558:	add	r2, pc, r2
   1d55c:	ldr	r3, [pc, #696]	; 1d81c <sprintf@plt+0xc180>
   1d560:	ldr	r3, [r2, r3]
   1d564:	ldr	r3, [r3, #12]
   1d568:	mov	r1, r3
   1d56c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1d570:	bl	1c860 <sprintf@plt+0xb1c4>
   1d574:	str	r0, [fp, #-20]	; 0xffffffec
   1d578:	mov	r0, #28
   1d57c:	bl	1c580 <sprintf@plt+0xaee4>
   1d580:	str	r0, [fp, #-24]	; 0xffffffe8
   1d584:	mov	r3, #1
   1d588:	str	r3, [fp, #-284]	; 0xfffffee4
   1d58c:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1d590:	add	r3, r3, #248	; 0xf8
   1d594:	ldrh	r3, [r3]
   1d598:	cmp	r3, #10
   1d59c:	bne	1d5d0 <sprintf@plt+0xbf34>
   1d5a0:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1d5a4:	ldr	r3, [r3, #16]
   1d5a8:	cmp	r3, #1
   1d5ac:	bne	1d5bc <sprintf@plt+0xbf20>
   1d5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5b4:	bl	1c5e0 <sprintf@plt+0xaf44>
   1d5b8:	b	1d804 <sprintf@plt+0xc168>
   1d5bc:	ldr	r3, [pc, #604]	; 1d820 <sprintf@plt+0xc184>
   1d5c0:	add	r3, pc, r3
   1d5c4:	add	r3, r3, #188	; 0xbc
   1d5c8:	str	r3, [fp, #-16]
   1d5cc:	b	1d5dc <sprintf@plt+0xbf40>
   1d5d0:	ldr	r3, [pc, #588]	; 1d824 <sprintf@plt+0xc188>
   1d5d4:	add	r3, pc, r3
   1d5d8:	str	r3, [fp, #-16]
   1d5dc:	ldr	r3, [fp, #-16]
   1d5e0:	ldr	r3, [r3, #184]	; 0xb8
   1d5e4:	cmp	r3, #0
   1d5e8:	bne	1d5f8 <sprintf@plt+0xbf5c>
   1d5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f0:	bl	1c5e0 <sprintf@plt+0xaf44>
   1d5f4:	b	1d804 <sprintf@plt+0xc168>
   1d5f8:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1d5fc:	sub	r0, fp, #152	; 0x98
   1d600:	add	r3, r3, #248	; 0xf8
   1d604:	mov	r2, #128	; 0x80
   1d608:	mov	r1, r3
   1d60c:	bl	114c8 <memcpy@plt>
   1d610:	ldr	r3, [fp, #-16]
   1d614:	sub	r0, fp, #280	; 0x118
   1d618:	add	r3, r3, #56	; 0x38
   1d61c:	mov	r2, #128	; 0x80
   1d620:	mov	r1, r3
   1d624:	bl	114c8 <memcpy@plt>
   1d628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d62c:	ldr	r2, [fp, #-288]	; 0xfffffee0
   1d630:	str	r2, [r3]
   1d634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d638:	ldr	r2, [fp, #-292]	; 0xfffffedc
   1d63c:	str	r2, [r3, #8]
   1d640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d644:	ldr	r2, [fp, #-16]
   1d648:	str	r2, [r3, #12]
   1d64c:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1d650:	add	r3, r3, #248	; 0xf8
   1d654:	ldrh	r3, [r3]
   1d658:	mov	r0, r3
   1d65c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1d660:	mov	r2, #0
   1d664:	mov	r1, #1
   1d668:	bl	11354 <rb_socket@plt>
   1d66c:	mov	r2, r0
   1d670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d674:	str	r2, [r3, #4]
   1d678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d67c:	ldr	r3, [r3, #4]
   1d680:	cmp	r3, #0
   1d684:	bne	1d6c4 <sprintf@plt+0xc028>
   1d688:	ldr	r4, [fp, #-292]	; 0xfffffedc
   1d68c:	bl	11690 <__errno_location@plt>
   1d690:	mov	r3, r0
   1d694:	ldr	r3, [r3]
   1d698:	mov	r0, r3
   1d69c:	bl	112a0 <strerror@plt>
   1d6a0:	mov	r3, r0
   1d6a4:	mov	r2, r4
   1d6a8:	ldr	r1, [pc, #376]	; 1d828 <sprintf@plt+0xc18c>
   1d6ac:	add	r1, pc, r1
   1d6b0:	mov	r0, #87	; 0x57
   1d6b4:	bl	12b00 <sprintf@plt+0x1464>
   1d6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6bc:	bl	1c5e0 <sprintf@plt+0xaf44>
   1d6c0:	b	1d804 <sprintf@plt+0xc168>
   1d6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6c8:	ldr	r3, [r3, #4]
   1d6cc:	mov	r0, r3
   1d6d0:	bl	11330 <rb_get_fd@plt>
   1d6d4:	sub	r2, fp, #284	; 0x11c
   1d6d8:	mov	r3, #4
   1d6dc:	str	r3, [sp]
   1d6e0:	mov	r3, r2
   1d6e4:	mov	r2, #1
   1d6e8:	mov	r1, #6
   1d6ec:	bl	11660 <setsockopt@plt>
   1d6f0:	sub	r3, fp, #280	; 0x118
   1d6f4:	ldrh	r3, [r3]
   1d6f8:	cmp	r3, #2
   1d6fc:	bne	1d710 <sprintf@plt+0xc074>
   1d700:	sub	r3, fp, #280	; 0x118
   1d704:	mov	r2, #0
   1d708:	strh	r2, [r3, #2]
   1d70c:	b	1d71c <sprintf@plt+0xc080>
   1d710:	sub	r3, fp, #280	; 0x118
   1d714:	mov	r2, #0
   1d718:	strh	r2, [r3, #2]
   1d71c:	sub	r3, fp, #152	; 0x98
   1d720:	ldrh	r3, [r3]
   1d724:	cmp	r3, #2
   1d728:	bne	1d74c <sprintf@plt+0xc0b0>
   1d72c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1d730:	ldrh	r3, [r3, #20]
   1d734:	sub	r4, fp, #152	; 0x98
   1d738:	mov	r0, r3
   1d73c:	bl	113cc <htons@plt>
   1d740:	mov	r3, r0
   1d744:	strh	r3, [r4, #2]
   1d748:	b	1d768 <sprintf@plt+0xc0cc>
   1d74c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1d750:	ldrh	r3, [r3, #20]
   1d754:	sub	r4, fp, #152	; 0x98
   1d758:	mov	r0, r3
   1d75c:	bl	113cc <htons@plt>
   1d760:	mov	r3, r0
   1d764:	strh	r3, [r4, #2]
   1d768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d76c:	add	r3, r3, #16
   1d770:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d774:	mov	r1, r3
   1d778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d77c:	bl	1c2e4 <sprintf@plt+0xac48>
   1d780:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1d784:	ldrb	r3, [r3, #22]
   1d788:	eor	r3, r3, #1
   1d78c:	uxtb	r3, r3
   1d790:	cmp	r3, #0
   1d794:	beq	1d7d0 <sprintf@plt+0xc134>
   1d798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d79c:	ldr	r0, [r3, #4]
   1d7a0:	ldr	r3, [pc, #132]	; 1d82c <sprintf@plt+0xc190>
   1d7a4:	add	r3, pc, r3
   1d7a8:	ldr	r3, [r3]
   1d7ac:	sub	r2, fp, #280	; 0x118
   1d7b0:	sub	r1, fp, #152	; 0x98
   1d7b4:	str	r3, [sp, #4]
   1d7b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7bc:	str	r3, [sp]
   1d7c0:	ldr	r3, [pc, #104]	; 1d830 <sprintf@plt+0xc194>
   1d7c4:	add	r3, pc, r3
   1d7c8:	bl	112f4 <rb_connect_tcp@plt>
   1d7cc:	b	1d804 <sprintf@plt+0xc168>
   1d7d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7d4:	ldr	r0, [r3, #4]
   1d7d8:	ldr	r3, [pc, #84]	; 1d834 <sprintf@plt+0xc198>
   1d7dc:	add	r3, pc, r3
   1d7e0:	ldr	r3, [r3]
   1d7e4:	sub	r2, fp, #280	; 0x118
   1d7e8:	sub	r1, fp, #152	; 0x98
   1d7ec:	str	r3, [sp, #4]
   1d7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7f4:	str	r3, [sp]
   1d7f8:	ldr	r3, [pc, #56]	; 1d838 <sprintf@plt+0xc19c>
   1d7fc:	add	r3, pc, r3
   1d800:	bl	112e8 <rb_connect_tcp_ssl@plt>
   1d804:	sub	sp, fp, #8
   1d808:	ldr	r4, [sp]
   1d80c:	ldr	fp, [sp, #4]
   1d810:	add	sp, sp, #8
   1d814:	pop	{pc}		; (ldr pc, [sp], #4)
   1d818:	andeq	r3, r1, r0, lsr #21
   1d81c:	muleq	r0, r4, r1
   1d820:	andeq	r8, r1, r4, lsr #21
   1d824:	muleq	r1, r0, sl
   1d828:	andeq	r2, r0, r4, lsr #14
   1d82c:	andeq	r4, r1, ip, ror #14
   1d830:			; <UNDEFINED> instruction: 0xfffff7cc
   1d834:	andeq	r4, r1, r4, lsr r7
   1d838:			; <UNDEFINED> instruction: 0xfffff794
   1d83c:	strd	r4, [sp, #-16]!
   1d840:	str	fp, [sp, #8]
   1d844:	str	lr, [sp, #12]
   1d848:	add	fp, sp, #12
   1d84c:	sub	sp, sp, #192	; 0xc0
   1d850:	str	r0, [fp, #-192]	; 0xffffff40
   1d854:	mov	r3, r1
   1d858:	strh	r3, [fp, #-194]	; 0xffffff3e
   1d85c:	ldr	r4, [pc, #1340]	; 1dda0 <sprintf@plt+0xc704>
   1d860:	add	r4, pc, r4
   1d864:	mov	r3, #1
   1d868:	str	r3, [fp, #-188]	; 0xffffff44
   1d86c:	sub	r3, fp, #176	; 0xb0
   1d870:	mov	r1, r3
   1d874:	ldr	r0, [fp, #-192]	; 0xffffff40
   1d878:	bl	11498 <rb_inet_pton_sock@plt>
   1d87c:	mov	r3, r0
   1d880:	cmp	r3, #0
   1d884:	bne	1d8a8 <sprintf@plt+0xc20c>
   1d888:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1d88c:	ldr	r2, [fp, #-192]	; 0xffffff40
   1d890:	ldr	r1, [pc, #1292]	; 1dda4 <sprintf@plt+0xc708>
   1d894:	add	r1, pc, r1
   1d898:	mov	r0, #67	; 0x43
   1d89c:	bl	12b00 <sprintf@plt+0x1464>
   1d8a0:	mov	r0, #3
   1d8a4:	bl	11684 <exit@plt>
   1d8a8:	sub	r3, fp, #176	; 0xb0
   1d8ac:	ldrh	r3, [r3]
   1d8b0:	cmp	r3, #2
   1d8b4:	bne	1d8d4 <sprintf@plt+0xc238>
   1d8b8:	sub	r5, fp, #176	; 0xb0
   1d8bc:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1d8c0:	mov	r0, r3
   1d8c4:	bl	113cc <htons@plt>
   1d8c8:	mov	r3, r0
   1d8cc:	strh	r3, [r5, #2]
   1d8d0:	b	1d8ec <sprintf@plt+0xc250>
   1d8d4:	sub	r5, fp, #176	; 0xb0
   1d8d8:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1d8dc:	mov	r0, r3
   1d8e0:	bl	113cc <htons@plt>
   1d8e4:	mov	r3, r0
   1d8e8:	strh	r3, [r5, #2]
   1d8ec:	sub	r3, fp, #176	; 0xb0
   1d8f0:	ldrh	r3, [r3]
   1d8f4:	cmp	r3, #10
   1d8f8:	bne	1da28 <sprintf@plt+0xc38c>
   1d8fc:	ldr	r3, [pc, #1188]	; 1dda8 <sprintf@plt+0xc70c>
   1d900:	add	r3, pc, r3
   1d904:	add	r3, r3, #188	; 0xbc
   1d908:	str	r3, [fp, #-16]
   1d90c:	sub	r3, fp, #176	; 0xb0
   1d910:	str	r3, [fp, #-20]	; 0xffffffec
   1d914:	ldr	r3, [fp, #-16]
   1d918:	add	r3, r3, #56	; 0x38
   1d91c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d920:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d924:	add	r3, r3, #8
   1d928:	str	r3, [fp, #-28]	; 0xffffffe4
   1d92c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d930:	add	r3, r3, #8
   1d934:	str	r3, [fp, #-32]	; 0xffffffe0
   1d938:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d93c:	ldr	r2, [r3]
   1d940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d944:	ldr	r3, [r3]
   1d948:	cmp	r2, r3
   1d94c:	bne	1d9a0 <sprintf@plt+0xc304>
   1d950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d954:	ldr	r2, [r3, #4]
   1d958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d95c:	ldr	r3, [r3, #4]
   1d960:	cmp	r2, r3
   1d964:	bne	1d9a0 <sprintf@plt+0xc304>
   1d968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d96c:	ldr	r2, [r3, #8]
   1d970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d974:	ldr	r3, [r3, #8]
   1d978:	cmp	r2, r3
   1d97c:	bne	1d9a0 <sprintf@plt+0xc304>
   1d980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d984:	ldr	r2, [r3, #12]
   1d988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d98c:	ldr	r3, [r3, #12]
   1d990:	cmp	r2, r3
   1d994:	bne	1d9a0 <sprintf@plt+0xc304>
   1d998:	mov	r3, #1
   1d99c:	b	1d9a4 <sprintf@plt+0xc308>
   1d9a0:	mov	r3, #0
   1d9a4:	cmp	r3, #0
   1d9a8:	beq	1dadc <sprintf@plt+0xc440>
   1d9ac:	sub	r3, fp, #176	; 0xb0
   1d9b0:	ldrh	r3, [r3]
   1d9b4:	cmp	r3, #2
   1d9b8:	bne	1d9cc <sprintf@plt+0xc330>
   1d9bc:	sub	r3, fp, #176	; 0xb0
   1d9c0:	ldrh	r3, [r3, #2]
   1d9c4:	mov	r2, r3
   1d9c8:	b	1d9d8 <sprintf@plt+0xc33c>
   1d9cc:	sub	r3, fp, #176	; 0xb0
   1d9d0:	ldrh	r3, [r3, #2]
   1d9d4:	mov	r2, r3
   1d9d8:	ldr	r3, [fp, #-16]
   1d9dc:	add	r3, r3, #56	; 0x38
   1d9e0:	ldrh	r3, [r3]
   1d9e4:	cmp	r3, #2
   1d9e8:	bne	1d9fc <sprintf@plt+0xc360>
   1d9ec:	ldr	r3, [fp, #-16]
   1d9f0:	add	r3, r3, #56	; 0x38
   1d9f4:	ldrh	r3, [r3, #2]
   1d9f8:	b	1da08 <sprintf@plt+0xc36c>
   1d9fc:	ldr	r3, [fp, #-16]
   1da00:	add	r3, r3, #56	; 0x38
   1da04:	ldrh	r3, [r3, #2]
   1da08:	cmp	r2, r3
   1da0c:	bne	1dadc <sprintf@plt+0xc440>
   1da10:	ldr	r3, [fp, #-16]
   1da14:	ldr	r3, [r3, #184]	; 0xb8
   1da18:	cmp	r3, #0
   1da1c:	beq	1dadc <sprintf@plt+0xc440>
   1da20:	mov	r3, #0
   1da24:	b	1dd88 <sprintf@plt+0xc6ec>
   1da28:	ldr	r3, [pc, #892]	; 1ddac <sprintf@plt+0xc710>
   1da2c:	add	r3, pc, r3
   1da30:	str	r3, [fp, #-16]
   1da34:	sub	r3, fp, #176	; 0xb0
   1da38:	str	r3, [fp, #-36]	; 0xffffffdc
   1da3c:	ldr	r3, [fp, #-16]
   1da40:	add	r3, r3, #56	; 0x38
   1da44:	str	r3, [fp, #-40]	; 0xffffffd8
   1da48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1da4c:	ldr	r2, [r3, #4]
   1da50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da54:	ldr	r3, [r3, #4]
   1da58:	cmp	r2, r3
   1da5c:	bne	1dadc <sprintf@plt+0xc440>
   1da60:	sub	r3, fp, #176	; 0xb0
   1da64:	ldrh	r3, [r3]
   1da68:	cmp	r3, #2
   1da6c:	bne	1da80 <sprintf@plt+0xc3e4>
   1da70:	sub	r3, fp, #176	; 0xb0
   1da74:	ldrh	r3, [r3, #2]
   1da78:	mov	r2, r3
   1da7c:	b	1da8c <sprintf@plt+0xc3f0>
   1da80:	sub	r3, fp, #176	; 0xb0
   1da84:	ldrh	r3, [r3, #2]
   1da88:	mov	r2, r3
   1da8c:	ldr	r3, [fp, #-16]
   1da90:	add	r3, r3, #56	; 0x38
   1da94:	ldrh	r3, [r3]
   1da98:	cmp	r3, #2
   1da9c:	bne	1dab0 <sprintf@plt+0xc414>
   1daa0:	ldr	r3, [fp, #-16]
   1daa4:	add	r3, r3, #56	; 0x38
   1daa8:	ldrh	r3, [r3, #2]
   1daac:	b	1dabc <sprintf@plt+0xc420>
   1dab0:	ldr	r3, [fp, #-16]
   1dab4:	add	r3, r3, #56	; 0x38
   1dab8:	ldrh	r3, [r3, #2]
   1dabc:	cmp	r2, r3
   1dac0:	bne	1dadc <sprintf@plt+0xc440>
   1dac4:	ldr	r3, [fp, #-16]
   1dac8:	ldr	r3, [r3, #184]	; 0xb8
   1dacc:	cmp	r3, #0
   1dad0:	beq	1dadc <sprintf@plt+0xc440>
   1dad4:	mov	r3, #0
   1dad8:	b	1dd88 <sprintf@plt+0xc6ec>
   1dadc:	sub	r3, fp, #176	; 0xb0
   1dae0:	ldrh	r3, [r3]
   1dae4:	mov	r0, r3
   1dae8:	ldr	r3, [pc, #704]	; 1ddb0 <sprintf@plt+0xc714>
   1daec:	add	r3, pc, r3
   1daf0:	mov	r2, #0
   1daf4:	mov	r1, #1
   1daf8:	bl	11354 <rb_socket@plt>
   1dafc:	str	r0, [fp, #-44]	; 0xffffffd4
   1db00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1db04:	cmp	r3, #0
   1db08:	bne	1db44 <sprintf@plt+0xc4a8>
   1db0c:	bl	11690 <__errno_location@plt>
   1db10:	mov	r3, r0
   1db14:	ldr	r3, [r3]
   1db18:	mov	r0, r3
   1db1c:	bl	112a0 <strerror@plt>
   1db20:	mov	r3, r0
   1db24:	mov	r2, r3
   1db28:	ldr	r3, [pc, #644]	; 1ddb4 <sprintf@plt+0xc718>
   1db2c:	add	r3, pc, r3
   1db30:	mov	r1, r3
   1db34:	mov	r0, #67	; 0x43
   1db38:	bl	12b00 <sprintf@plt+0x1464>
   1db3c:	mov	r0, #3
   1db40:	bl	11684 <exit@plt>
   1db44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db48:	bl	11330 <rb_get_fd@plt>
   1db4c:	sub	r2, fp, #188	; 0xbc
   1db50:	mov	r3, #4
   1db54:	str	r3, [sp]
   1db58:	mov	r3, r2
   1db5c:	mov	r2, #2
   1db60:	mov	r1, #1
   1db64:	bl	11660 <setsockopt@plt>
   1db68:	mov	r3, r0
   1db6c:	cmp	r3, #0
   1db70:	beq	1dbac <sprintf@plt+0xc510>
   1db74:	bl	11690 <__errno_location@plt>
   1db78:	mov	r3, r0
   1db7c:	ldr	r3, [r3]
   1db80:	mov	r0, r3
   1db84:	bl	112a0 <strerror@plt>
   1db88:	mov	r3, r0
   1db8c:	mov	r2, r3
   1db90:	ldr	r3, [pc, #544]	; 1ddb8 <sprintf@plt+0xc71c>
   1db94:	add	r3, pc, r3
   1db98:	mov	r1, r3
   1db9c:	mov	r0, #67	; 0x43
   1dba0:	bl	12b00 <sprintf@plt+0x1464>
   1dba4:	mov	r0, #3
   1dba8:	bl	11684 <exit@plt>
   1dbac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dbb0:	bl	11330 <rb_get_fd@plt>
   1dbb4:	sub	r3, fp, #176	; 0xb0
   1dbb8:	ldrh	r3, [r3]
   1dbbc:	cmp	r3, #2
   1dbc0:	bne	1dbcc <sprintf@plt+0xc530>
   1dbc4:	mov	r2, #16
   1dbc8:	b	1dbd0 <sprintf@plt+0xc534>
   1dbcc:	mov	r2, #28
   1dbd0:	sub	r3, fp, #176	; 0xb0
   1dbd4:	mov	r1, r3
   1dbd8:	bl	11528 <bind@plt>
   1dbdc:	mov	r3, r0
   1dbe0:	cmp	r3, #0
   1dbe4:	beq	1dc28 <sprintf@plt+0xc58c>
   1dbe8:	bl	11690 <__errno_location@plt>
   1dbec:	mov	r3, r0
   1dbf0:	ldr	r3, [r3]
   1dbf4:	mov	r0, r3
   1dbf8:	bl	112a0 <strerror@plt>
   1dbfc:	mov	r3, r0
   1dc00:	mov	r2, r3
   1dc04:	ldr	r3, [pc, #432]	; 1ddbc <sprintf@plt+0xc720>
   1dc08:	add	r3, pc, r3
   1dc0c:	mov	r1, r3
   1dc10:	mov	r0, #87	; 0x57
   1dc14:	bl	12b00 <sprintf@plt+0x1464>
   1dc18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc1c:	bl	114e0 <rb_close@plt>
   1dc20:	mov	r3, #0
   1dc24:	b	1dd88 <sprintf@plt+0xc6ec>
   1dc28:	mov	r2, #0
   1dc2c:	mov	r1, #128	; 0x80
   1dc30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc34:	bl	1163c <rb_listen@plt>
   1dc38:	mov	r3, r0
   1dc3c:	cmp	r3, #0
   1dc40:	beq	1dc84 <sprintf@plt+0xc5e8>
   1dc44:	bl	11690 <__errno_location@plt>
   1dc48:	mov	r3, r0
   1dc4c:	ldr	r3, [r3]
   1dc50:	mov	r0, r3
   1dc54:	bl	112a0 <strerror@plt>
   1dc58:	mov	r3, r0
   1dc5c:	mov	r2, r3
   1dc60:	ldr	r3, [pc, #344]	; 1ddc0 <sprintf@plt+0xc724>
   1dc64:	add	r3, pc, r3
   1dc68:	mov	r1, r3
   1dc6c:	mov	r0, #87	; 0x57
   1dc70:	bl	12b00 <sprintf@plt+0x1464>
   1dc74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc78:	bl	114e0 <rb_close@plt>
   1dc7c:	mov	r3, #0
   1dc80:	b	1dd88 <sprintf@plt+0xc6ec>
   1dc84:	ldr	r3, [fp, #-16]
   1dc88:	ldr	r3, [r3, #184]	; 0xb8
   1dc8c:	cmp	r3, #0
   1dc90:	beq	1dca4 <sprintf@plt+0xc608>
   1dc94:	ldr	r3, [fp, #-16]
   1dc98:	ldr	r3, [r3, #184]	; 0xb8
   1dc9c:	mov	r0, r3
   1dca0:	bl	114e0 <rb_close@plt>
   1dca4:	ldr	r3, [fp, #-16]
   1dca8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dcac:	str	r2, [r3, #184]	; 0xb8
   1dcb0:	ldr	r3, [pc, #268]	; 1ddc4 <sprintf@plt+0xc728>
   1dcb4:	ldr	r3, [r4, r3]
   1dcb8:	ldr	r3, [r3]
   1dcbc:	sub	r2, fp, #184	; 0xb8
   1dcc0:	mov	r1, r2
   1dcc4:	mov	r0, r3
   1dcc8:	bl	11480 <rb_dictionary_foreach_start@plt>
   1dccc:	b	1dcf4 <sprintf@plt+0xc658>
   1dcd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dcd4:	bl	1e0ac <sprintf@plt+0xca10>
   1dcd8:	ldr	r3, [pc, #228]	; 1ddc4 <sprintf@plt+0xc728>
   1dcdc:	ldr	r3, [r4, r3]
   1dce0:	ldr	r3, [r3]
   1dce4:	sub	r2, fp, #184	; 0xb8
   1dce8:	mov	r1, r2
   1dcec:	mov	r0, r3
   1dcf0:	bl	11438 <rb_dictionary_foreach_next@plt>
   1dcf4:	ldr	r3, [pc, #200]	; 1ddc4 <sprintf@plt+0xc728>
   1dcf8:	ldr	r3, [r4, r3]
   1dcfc:	ldr	r3, [r3]
   1dd00:	sub	r2, fp, #184	; 0xb8
   1dd04:	mov	r1, r2
   1dd08:	mov	r0, r3
   1dd0c:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1dd10:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dd18:	cmp	r3, #0
   1dd1c:	bne	1dcd0 <sprintf@plt+0xc634>
   1dd20:	ldr	r3, [fp, #-16]
   1dd24:	mov	r2, #53	; 0x35
   1dd28:	ldr	r1, [fp, #-192]	; 0xffffff40
   1dd2c:	mov	r0, r3
   1dd30:	bl	11420 <rb_strlcpy@plt>
   1dd34:	ldr	r3, [fp, #-16]
   1dd38:	ldrh	r2, [fp, #-194]	; 0xffffff3e
   1dd3c:	strh	r2, [r3, #54]	; 0x36
   1dd40:	ldr	r3, [fp, #-16]
   1dd44:	add	r3, r3, #56	; 0x38
   1dd48:	sub	r1, fp, #176	; 0xb0
   1dd4c:	mov	r2, #128	; 0x80
   1dd50:	mov	r0, r3
   1dd54:	bl	114c8 <memcpy@plt>
   1dd58:	ldr	r3, [pc, #104]	; 1ddc8 <sprintf@plt+0xc72c>
   1dd5c:	add	r3, pc, r3
   1dd60:	mov	r2, #1
   1dd64:	strb	r2, [r3]
   1dd68:	ldr	r3, [fp, #-16]
   1dd6c:	ldr	r0, [r3, #184]	; 0xb8
   1dd70:	ldr	r3, [fp, #-16]
   1dd74:	ldr	r2, [pc, #80]	; 1ddcc <sprintf@plt+0xc730>
   1dd78:	add	r2, pc, r2
   1dd7c:	mov	r1, #0
   1dd80:	bl	115f4 <rb_accept_tcp@plt>
   1dd84:	mov	r3, #1
   1dd88:	mov	r0, r3
   1dd8c:	sub	sp, fp, #12
   1dd90:	ldrd	r4, [sp]
   1dd94:	ldr	fp, [sp, #8]
   1dd98:	add	sp, sp, #12
   1dd9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dda0:	muleq	r1, r8, r7
   1dda4:	andeq	r2, r0, ip, ror #10
   1dda8:	andeq	r8, r1, r4, ror #14
   1ddac:	andeq	r8, r1, r8, lsr r6
   1ddb0:	andeq	r2, r0, r4, lsr r3
   1ddb4:	andeq	r2, r0, r8, lsl #6
   1ddb8:	andeq	r2, r0, r0, asr #5
   1ddbc:	andeq	r2, r0, r4, ror r2
   1ddc0:	andeq	r2, r0, r8, lsr r2
   1ddc4:	andeq	r0, r0, r8, ror #2
   1ddc8:	andeq	r8, r1, r4, lsl #6
   1ddcc:			; <UNDEFINED> instruction: 0xffffef7c
   1ddd0:	str	r4, [sp, #-12]!
   1ddd4:	str	fp, [sp, #4]
   1ddd8:	str	lr, [sp, #8]
   1dddc:	add	fp, sp, #8
   1dde0:	sub	sp, sp, #28
   1dde4:	str	r0, [fp, #-32]	; 0xffffffe0
   1dde8:	ldr	r4, [pc, #196]	; 1deb4 <sprintf@plt+0xc818>
   1ddec:	add	r4, pc, r4
   1ddf0:	ldr	r3, [pc, #192]	; 1deb8 <sprintf@plt+0xc81c>
   1ddf4:	ldr	r3, [r4, r3]
   1ddf8:	ldr	r3, [r3, #12]
   1ddfc:	mov	r1, r3
   1de00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de04:	bl	1c860 <sprintf@plt+0xb1c4>
   1de08:	str	r0, [fp, #-20]	; 0xffffffec
   1de0c:	ldr	r3, [pc, #164]	; 1deb8 <sprintf@plt+0xc81c>
   1de10:	ldr	r3, [r4, r3]
   1de14:	ldr	r1, [r3, #12]
   1de18:	ldr	r3, [pc, #156]	; 1debc <sprintf@plt+0xc820>
   1de1c:	add	r3, pc, r3
   1de20:	ldr	r3, [r3]
   1de24:	mov	r2, r3
   1de28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de2c:	bl	1c8e0 <sprintf@plt+0xb244>
   1de30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de34:	mov	r2, #1
   1de38:	strb	r2, [r3, #12]
   1de3c:	ldr	r3, [pc, #124]	; 1dec0 <sprintf@plt+0xc824>
   1de40:	add	r3, pc, r3
   1de44:	ldr	r3, [r3]
   1de48:	str	r3, [fp, #-16]
   1de4c:	b	1de74 <sprintf@plt+0xc7d8>
   1de50:	ldr	r3, [fp, #-16]
   1de54:	ldr	r3, [r3]
   1de58:	str	r3, [fp, #-24]	; 0xffffffe8
   1de5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de64:	bl	1d538 <sprintf@plt+0xbe9c>
   1de68:	ldr	r3, [fp, #-16]
   1de6c:	ldr	r3, [r3, #8]
   1de70:	str	r3, [fp, #-16]
   1de74:	ldr	r3, [fp, #-16]
   1de78:	cmp	r3, #0
   1de7c:	bne	1de50 <sprintf@plt+0xc7b4>
   1de80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de84:	ldr	r3, [r3]
   1de88:	ldr	r2, [pc, #52]	; 1dec4 <sprintf@plt+0xc828>
   1de8c:	add	r2, pc, r2
   1de90:	mov	r1, r2
   1de94:	mov	r0, r3
   1de98:	bl	12a74 <sprintf@plt+0x13d8>
   1de9c:	nop	{0}
   1dea0:	sub	sp, fp, #8
   1dea4:	ldr	r4, [sp]
   1dea8:	ldr	fp, [sp, #4]
   1deac:	add	sp, sp, #8
   1deb0:	pop	{pc}		; (ldr pc, [sp], #4)
   1deb4:	andeq	r3, r1, ip, lsl #4
   1deb8:	muleq	r0, r4, r1
   1debc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1dec0:	andeq	r8, r1, r4, lsl r2
   1dec4:	andeq	r2, r0, r4, lsr r0
   1dec8:	str	fp, [sp, #-8]!
   1decc:	str	lr, [sp, #4]
   1ded0:	add	fp, sp, #4
   1ded4:	sub	sp, sp, #16
   1ded8:	str	r0, [fp, #-16]
   1dedc:	str	r1, [fp, #-20]	; 0xffffffec
   1dee0:	ldr	r2, [pc, #152]	; 1df80 <sprintf@plt+0xc8e4>
   1dee4:	add	r2, pc, r2
   1dee8:	ldr	r3, [pc, #148]	; 1df84 <sprintf@plt+0xc8e8>
   1deec:	ldr	r3, [r2, r3]
   1def0:	ldr	r3, [r3, #12]
   1def4:	mov	r1, r3
   1def8:	ldr	r0, [fp, #-16]
   1defc:	bl	1c860 <sprintf@plt+0xb1c4>
   1df00:	str	r0, [fp, #-8]
   1df04:	ldr	r3, [fp, #-8]
   1df08:	cmp	r3, #0
   1df0c:	beq	1df6c <sprintf@plt+0xc8d0>
   1df10:	ldr	r3, [fp, #-8]
   1df14:	ldrb	r3, [r3, #12]
   1df18:	cmp	r3, #0
   1df1c:	bne	1df6c <sprintf@plt+0xc8d0>
   1df20:	ldr	r3, [pc, #96]	; 1df88 <sprintf@plt+0xc8ec>
   1df24:	add	r3, pc, r3
   1df28:	mov	r1, r3
   1df2c:	ldr	r0, [fp, #-16]
   1df30:	bl	1c7ec <sprintf@plt+0xb150>
   1df34:	mov	r3, r0
   1df38:	cmp	r3, #0
   1df3c:	beq	1df70 <sprintf@plt+0xc8d4>
   1df40:	ldr	r3, [pc, #68]	; 1df8c <sprintf@plt+0xc8f0>
   1df44:	add	r3, pc, r3
   1df48:	mov	r1, r3
   1df4c:	ldr	r0, [fp, #-16]
   1df50:	bl	1c7ec <sprintf@plt+0xb150>
   1df54:	mov	r3, r0
   1df58:	cmp	r3, #0
   1df5c:	beq	1df70 <sprintf@plt+0xc8d4>
   1df60:	ldr	r0, [fp, #-16]
   1df64:	bl	1ddd0 <sprintf@plt+0xc734>
   1df68:	b	1df70 <sprintf@plt+0xc8d4>
   1df6c:	nop	{0}
   1df70:	sub	sp, fp, #4
   1df74:	ldr	fp, [sp]
   1df78:	add	sp, sp, #4
   1df7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df80:	andeq	r3, r1, r4, lsl r1
   1df84:	muleq	r0, r4, r1
   1df88:	andeq	r1, r0, r0, asr #31
   1df8c:	andeq	r1, r0, r8, lsr #31
   1df90:	str	r4, [sp, #-12]!
   1df94:	str	fp, [sp, #4]
   1df98:	str	lr, [sp, #8]
   1df9c:	add	fp, sp, #8
   1dfa0:	sub	sp, sp, #12
   1dfa4:	str	r0, [fp, #-16]
   1dfa8:	ldr	r4, [pc, #228]	; 1e094 <sprintf@plt+0xc9f8>
   1dfac:	add	r4, pc, r4
   1dfb0:	ldr	r3, [pc, #224]	; 1e098 <sprintf@plt+0xc9fc>
   1dfb4:	add	r3, pc, r3
   1dfb8:	ldrb	r3, [r3]
   1dfbc:	eor	r3, r3, #1
   1dfc0:	uxtb	r3, r3
   1dfc4:	cmp	r3, #0
   1dfc8:	bne	1dfe0 <sprintf@plt+0xc944>
   1dfcc:	ldr	r3, [pc, #200]	; 1e09c <sprintf@plt+0xca00>
   1dfd0:	add	r3, pc, r3
   1dfd4:	ldr	r3, [r3, #8]
   1dfd8:	cmp	r3, #0
   1dfdc:	bne	1e000 <sprintf@plt+0xc964>
   1dfe0:	ldr	r3, [pc, #184]	; 1e0a0 <sprintf@plt+0xca04>
   1dfe4:	ldr	r3, [r4, r3]
   1dfe8:	ldr	r3, [r3, #12]
   1dfec:	mov	r1, r3
   1dff0:	ldr	r0, [fp, #-16]
   1dff4:	bl	139f8 <sprintf@plt+0x235c>
   1dff8:	mov	r3, #1
   1dffc:	b	1e07c <sprintf@plt+0xc9e0>
   1e000:	ldr	r0, [fp, #-16]
   1e004:	bl	1c62c <sprintf@plt+0xaf90>
   1e008:	ldr	r3, [pc, #144]	; 1e0a0 <sprintf@plt+0xca04>
   1e00c:	ldr	r3, [r4, r3]
   1e010:	ldr	r4, [r3, #12]
   1e014:	mov	r0, #16
   1e018:	bl	1c580 <sprintf@plt+0xaee4>
   1e01c:	mov	r3, r0
   1e020:	mov	r2, r3
   1e024:	mov	r1, r4
   1e028:	ldr	r0, [fp, #-16]
   1e02c:	bl	1c89c <sprintf@plt+0xb200>
   1e030:	ldr	r3, [pc, #108]	; 1e0a4 <sprintf@plt+0xca08>
   1e034:	add	r3, pc, r3
   1e038:	mov	r1, r3
   1e03c:	ldr	r0, [fp, #-16]
   1e040:	bl	1c7ec <sprintf@plt+0xb150>
   1e044:	mov	r3, r0
   1e048:	cmp	r3, #0
   1e04c:	beq	1e078 <sprintf@plt+0xc9dc>
   1e050:	ldr	r3, [pc, #80]	; 1e0a8 <sprintf@plt+0xca0c>
   1e054:	add	r3, pc, r3
   1e058:	mov	r1, r3
   1e05c:	ldr	r0, [fp, #-16]
   1e060:	bl	1c7ec <sprintf@plt+0xb150>
   1e064:	mov	r3, r0
   1e068:	cmp	r3, #0
   1e06c:	beq	1e078 <sprintf@plt+0xc9dc>
   1e070:	ldr	r0, [fp, #-16]
   1e074:	bl	1ddd0 <sprintf@plt+0xc734>
   1e078:	mov	r3, #1
   1e07c:	mov	r0, r3
   1e080:	sub	sp, fp, #8
   1e084:	ldr	r4, [sp]
   1e088:	ldr	fp, [sp, #4]
   1e08c:	add	sp, sp, #8
   1e090:	pop	{pc}		; (ldr pc, [sp], #4)
   1e094:	andeq	r3, r1, ip, asr #32
   1e098:	andeq	r8, r1, ip, lsr #1
   1e09c:	andeq	r8, r1, r4, lsl #1
   1e0a0:	muleq	r0, r4, r1
   1e0a4:			; <UNDEFINED> instruction: 0x00001eb0
   1e0a8:	muleq	r0, r8, lr
   1e0ac:	str	r4, [sp, #-12]!
   1e0b0:	str	fp, [sp, #4]
   1e0b4:	str	lr, [sp, #8]
   1e0b8:	add	fp, sp, #8
   1e0bc:	sub	sp, sp, #28
   1e0c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0c4:	ldr	r4, [pc, #324]	; 1e210 <sprintf@plt+0xcb74>
   1e0c8:	add	r4, pc, r4
   1e0cc:	ldr	r3, [pc, #320]	; 1e214 <sprintf@plt+0xcb78>
   1e0d0:	ldr	r3, [r4, r3]
   1e0d4:	ldr	r3, [r3, #12]
   1e0d8:	mov	r1, r3
   1e0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0e0:	bl	1c860 <sprintf@plt+0xb1c4>
   1e0e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e0e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0ec:	cmp	r3, #0
   1e0f0:	beq	1e1f8 <sprintf@plt+0xcb5c>
   1e0f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0f8:	ldr	r3, [r3]
   1e0fc:	ldr	r2, [pc, #276]	; 1e218 <sprintf@plt+0xcb7c>
   1e100:	add	r2, pc, r2
   1e104:	mov	r1, r2
   1e108:	mov	r0, r3
   1e10c:	bl	12a74 <sprintf@plt+0x13d8>
   1e110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e114:	ldr	r3, [r3]
   1e118:	str	r3, [fp, #-16]
   1e11c:	ldr	r3, [fp, #-16]
   1e120:	cmp	r3, #0
   1e124:	beq	1e134 <sprintf@plt+0xca98>
   1e128:	ldr	r3, [fp, #-16]
   1e12c:	ldr	r3, [r3, #8]
   1e130:	b	1e138 <sprintf@plt+0xca9c>
   1e134:	mov	r3, #0
   1e138:	str	r3, [fp, #-20]	; 0xffffffec
   1e13c:	b	1e18c <sprintf@plt+0xcaf0>
   1e140:	ldr	r3, [fp, #-16]
   1e144:	ldr	r3, [r3]
   1e148:	str	r3, [fp, #-28]	; 0xffffffe4
   1e14c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e150:	ldr	r3, [r3, #4]
   1e154:	mov	r0, r3
   1e158:	bl	114e0 <rb_close@plt>
   1e15c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e160:	bl	1c5e0 <sprintf@plt+0xaf44>
   1e164:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e168:	str	r3, [fp, #-16]
   1e16c:	ldr	r3, [fp, #-16]
   1e170:	cmp	r3, #0
   1e174:	beq	1e184 <sprintf@plt+0xcae8>
   1e178:	ldr	r3, [fp, #-16]
   1e17c:	ldr	r3, [r3, #8]
   1e180:	b	1e188 <sprintf@plt+0xcaec>
   1e184:	mov	r3, #0
   1e188:	str	r3, [fp, #-20]	; 0xffffffec
   1e18c:	ldr	r3, [fp, #-16]
   1e190:	cmp	r3, #0
   1e194:	bne	1e140 <sprintf@plt+0xcaa4>
   1e198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e19c:	bl	1c5e0 <sprintf@plt+0xaf44>
   1e1a0:	ldr	r3, [pc, #108]	; 1e214 <sprintf@plt+0xcb78>
   1e1a4:	ldr	r3, [r4, r3]
   1e1a8:	ldr	r3, [r3, #12]
   1e1ac:	mov	r2, #0
   1e1b0:	mov	r1, r3
   1e1b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1b8:	bl	1c89c <sprintf@plt+0xb200>
   1e1bc:	ldr	r3, [pc, #80]	; 1e214 <sprintf@plt+0xcb78>
   1e1c0:	ldr	r3, [r4, r3]
   1e1c4:	ldr	r3, [r3, #12]
   1e1c8:	mov	r2, #0
   1e1cc:	mov	r1, r3
   1e1d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1d4:	bl	1c938 <sprintf@plt+0xb29c>
   1e1d8:	ldr	r3, [pc, #52]	; 1e214 <sprintf@plt+0xcb78>
   1e1dc:	ldr	r3, [r4, r3]
   1e1e0:	ldr	r3, [r3, #12]
   1e1e4:	mov	r1, r3
   1e1e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1ec:	bl	139f8 <sprintf@plt+0x235c>
   1e1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1f4:	bl	1c660 <sprintf@plt+0xafc4>
   1e1f8:	nop	{0}
   1e1fc:	sub	sp, fp, #8
   1e200:	ldr	r4, [sp]
   1e204:	ldr	fp, [sp, #4]
   1e208:	add	sp, sp, #8
   1e20c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e210:	andeq	r2, r1, r0, lsr pc
   1e214:	muleq	r0, r4, r1
   1e218:	strdeq	r1, [r0], -r4
   1e21c:	str	r4, [sp, #-12]!
   1e220:	str	fp, [sp, #4]
   1e224:	str	lr, [sp, #8]
   1e228:	add	fp, sp, #8
   1e22c:	sub	sp, sp, #20
   1e230:	ldr	r4, [pc, #136]	; 1e2c0 <sprintf@plt+0xcc24>
   1e234:	add	r4, pc, r4
   1e238:	ldr	r3, [pc, #132]	; 1e2c4 <sprintf@plt+0xcc28>
   1e23c:	ldr	r3, [r4, r3]
   1e240:	ldr	r3, [r3]
   1e244:	sub	r2, fp, #24
   1e248:	mov	r1, r2
   1e24c:	mov	r0, r3
   1e250:	bl	11480 <rb_dictionary_foreach_start@plt>
   1e254:	b	1e27c <sprintf@plt+0xcbe0>
   1e258:	ldr	r0, [fp, #-16]
   1e25c:	bl	1e0ac <sprintf@plt+0xca10>
   1e260:	ldr	r3, [pc, #92]	; 1e2c4 <sprintf@plt+0xcc28>
   1e264:	ldr	r3, [r4, r3]
   1e268:	ldr	r3, [r3]
   1e26c:	sub	r2, fp, #24
   1e270:	mov	r1, r2
   1e274:	mov	r0, r3
   1e278:	bl	11438 <rb_dictionary_foreach_next@plt>
   1e27c:	ldr	r3, [pc, #64]	; 1e2c4 <sprintf@plt+0xcc28>
   1e280:	ldr	r3, [r4, r3]
   1e284:	ldr	r3, [r3]
   1e288:	sub	r2, fp, #24
   1e28c:	mov	r1, r2
   1e290:	mov	r0, r3
   1e294:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1e298:	str	r0, [fp, #-16]
   1e29c:	ldr	r3, [fp, #-16]
   1e2a0:	cmp	r3, #0
   1e2a4:	bne	1e258 <sprintf@plt+0xcbbc>
   1e2a8:	nop	{0}
   1e2ac:	sub	sp, fp, #8
   1e2b0:	ldr	r4, [sp]
   1e2b4:	ldr	fp, [sp, #4]
   1e2b8:	add	sp, sp, #8
   1e2bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2c0:	andeq	r2, r1, r4, asr #27
   1e2c4:	andeq	r0, r0, r8, ror #2
   1e2c8:	str	fp, [sp, #-8]!
   1e2cc:	str	lr, [sp, #4]
   1e2d0:	add	fp, sp, #4
   1e2d4:	sub	sp, sp, #24
   1e2d8:	str	r0, [fp, #-16]
   1e2dc:	str	r1, [fp, #-20]	; 0xffffffec
   1e2e0:	str	r2, [fp, #-24]	; 0xffffffe8
   1e2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2e8:	ldr	r3, [r3]
   1e2ec:	mov	r0, r3
   1e2f0:	bl	11510 <atoi@plt>
   1e2f4:	str	r0, [fp, #-8]
   1e2f8:	ldr	r3, [fp, #-8]
   1e2fc:	cmp	r3, #0
   1e300:	bge	1e320 <sprintf@plt+0xcc84>
   1e304:	ldr	r2, [fp, #-8]
   1e308:	ldr	r3, [pc, #48]	; 1e340 <sprintf@plt+0xcca4>
   1e30c:	add	r3, pc, r3
   1e310:	mov	r1, r3
   1e314:	mov	r0, #67	; 0x43
   1e318:	bl	12b00 <sprintf@plt+0x1464>
   1e31c:	b	1e330 <sprintf@plt+0xcc94>
   1e320:	ldr	r3, [pc, #28]	; 1e344 <sprintf@plt+0xcca8>
   1e324:	add	r3, pc, r3
   1e328:	ldr	r2, [fp, #-8]
   1e32c:	str	r2, [r3]
   1e330:	sub	sp, fp, #4
   1e334:	ldr	fp, [sp]
   1e338:	add	sp, sp, #4
   1e33c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e340:	andeq	r1, r0, r8, lsl #24
   1e344:	andeq	r3, r1, ip, ror #23
   1e348:	str	r4, [sp, #-12]!
   1e34c:	str	fp, [sp, #4]
   1e350:	str	lr, [sp, #8]
   1e354:	add	fp, sp, #8
   1e358:	sub	sp, sp, #36	; 0x24
   1e35c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e360:	str	r1, [fp, #-36]	; 0xffffffdc
   1e364:	str	r2, [fp, #-40]	; 0xffffffd8
   1e368:	ldr	r4, [pc, #548]	; 1e594 <sprintf@plt+0xcef8>
   1e36c:	add	r4, pc, r4
   1e370:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e374:	ldr	r3, [r3]
   1e378:	ldrb	r3, [r3]
   1e37c:	cmp	r3, #49	; 0x31
   1e380:	moveq	r3, #1
   1e384:	movne	r3, #0
   1e388:	strb	r3, [fp, #-13]
   1e38c:	ldrb	r3, [fp, #-13]
   1e390:	eor	r3, r3, #1
   1e394:	uxtb	r3, r3
   1e398:	cmp	r3, #0
   1e39c:	beq	1e4b4 <sprintf@plt+0xce18>
   1e3a0:	ldr	r3, [pc, #496]	; 1e598 <sprintf@plt+0xcefc>
   1e3a4:	add	r3, pc, r3
   1e3a8:	ldr	r3, [r3, #184]	; 0xb8
   1e3ac:	cmp	r3, #0
   1e3b0:	bne	1e3c8 <sprintf@plt+0xcd2c>
   1e3b4:	ldr	r3, [pc, #480]	; 1e59c <sprintf@plt+0xcf00>
   1e3b8:	add	r3, pc, r3
   1e3bc:	ldr	r3, [r3, #372]	; 0x174
   1e3c0:	cmp	r3, #0
   1e3c4:	beq	1e56c <sprintf@plt+0xced0>
   1e3c8:	ldr	r3, [pc, #464]	; 1e5a0 <sprintf@plt+0xcf04>
   1e3cc:	add	r3, pc, r3
   1e3d0:	ldr	r3, [r3, #184]	; 0xb8
   1e3d4:	cmp	r3, #0
   1e3d8:	beq	1e3f0 <sprintf@plt+0xcd54>
   1e3dc:	ldr	r3, [pc, #448]	; 1e5a4 <sprintf@plt+0xcf08>
   1e3e0:	add	r3, pc, r3
   1e3e4:	ldr	r3, [r3, #184]	; 0xb8
   1e3e8:	mov	r0, r3
   1e3ec:	bl	114e0 <rb_close@plt>
   1e3f0:	ldr	r3, [pc, #432]	; 1e5a8 <sprintf@plt+0xcf0c>
   1e3f4:	add	r3, pc, r3
   1e3f8:	ldr	r3, [r3, #372]	; 0x174
   1e3fc:	cmp	r3, #0
   1e400:	beq	1e418 <sprintf@plt+0xcd7c>
   1e404:	ldr	r3, [pc, #416]	; 1e5ac <sprintf@plt+0xcf10>
   1e408:	add	r3, pc, r3
   1e40c:	ldr	r3, [r3, #372]	; 0x174
   1e410:	mov	r0, r3
   1e414:	bl	114e0 <rb_close@plt>
   1e418:	ldr	r3, [pc, #400]	; 1e5b0 <sprintf@plt+0xcf14>
   1e41c:	add	r3, pc, r3
   1e420:	mov	r2, #0
   1e424:	str	r2, [r3, #372]	; 0x174
   1e428:	ldr	r3, [pc, #388]	; 1e5b4 <sprintf@plt+0xcf18>
   1e42c:	add	r3, pc, r3
   1e430:	ldr	r2, [r3, #372]	; 0x174
   1e434:	ldr	r3, [pc, #380]	; 1e5b8 <sprintf@plt+0xcf1c>
   1e438:	add	r3, pc, r3
   1e43c:	str	r2, [r3, #184]	; 0xb8
   1e440:	ldr	r3, [pc, #372]	; 1e5bc <sprintf@plt+0xcf20>
   1e444:	ldr	r3, [r4, r3]
   1e448:	ldr	r3, [r3]
   1e44c:	sub	r2, fp, #28
   1e450:	mov	r1, r2
   1e454:	mov	r0, r3
   1e458:	bl	11480 <rb_dictionary_foreach_start@plt>
   1e45c:	b	1e484 <sprintf@plt+0xcde8>
   1e460:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e464:	bl	1e0ac <sprintf@plt+0xca10>
   1e468:	ldr	r3, [pc, #332]	; 1e5bc <sprintf@plt+0xcf20>
   1e46c:	ldr	r3, [r4, r3]
   1e470:	ldr	r3, [r3]
   1e474:	sub	r2, fp, #28
   1e478:	mov	r1, r2
   1e47c:	mov	r0, r3
   1e480:	bl	11438 <rb_dictionary_foreach_next@plt>
   1e484:	ldr	r3, [pc, #304]	; 1e5bc <sprintf@plt+0xcf20>
   1e488:	ldr	r3, [r4, r3]
   1e48c:	ldr	r3, [r3]
   1e490:	sub	r2, fp, #28
   1e494:	mov	r1, r2
   1e498:	mov	r0, r3
   1e49c:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1e4a0:	str	r0, [fp, #-20]	; 0xffffffec
   1e4a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e4a8:	cmp	r3, #0
   1e4ac:	bne	1e460 <sprintf@plt+0xcdc4>
   1e4b0:	b	1e56c <sprintf@plt+0xced0>
   1e4b4:	ldr	r3, [pc, #260]	; 1e5c0 <sprintf@plt+0xcf24>
   1e4b8:	add	r3, pc, r3
   1e4bc:	ldrb	r3, [r3]
   1e4c0:	cmp	r3, #0
   1e4c4:	beq	1e510 <sprintf@plt+0xce74>
   1e4c8:	ldr	r3, [pc, #244]	; 1e5c4 <sprintf@plt+0xcf28>
   1e4cc:	add	r3, pc, r3
   1e4d0:	ldrh	r3, [r3, #54]	; 0x36
   1e4d4:	cmp	r3, #0
   1e4d8:	beq	1e510 <sprintf@plt+0xce74>
   1e4dc:	ldr	r3, [pc, #228]	; 1e5c8 <sprintf@plt+0xcf2c>
   1e4e0:	add	r3, pc, r3
   1e4e4:	ldr	r3, [r3, #184]	; 0xb8
   1e4e8:	cmp	r3, #0
   1e4ec:	bne	1e510 <sprintf@plt+0xce74>
   1e4f0:	ldr	r3, [pc, #212]	; 1e5cc <sprintf@plt+0xcf30>
   1e4f4:	add	r3, pc, r3
   1e4f8:	ldrh	r3, [r3, #54]	; 0x36
   1e4fc:	mov	r1, r3
   1e500:	ldr	r3, [pc, #200]	; 1e5d0 <sprintf@plt+0xcf34>
   1e504:	add	r3, pc, r3
   1e508:	mov	r0, r3
   1e50c:	bl	1d83c <sprintf@plt+0xc1a0>
   1e510:	ldr	r3, [pc, #188]	; 1e5d4 <sprintf@plt+0xcf38>
   1e514:	add	r3, pc, r3
   1e518:	ldrb	r3, [r3, #188]	; 0xbc
   1e51c:	cmp	r3, #0
   1e520:	beq	1e56c <sprintf@plt+0xced0>
   1e524:	ldr	r3, [pc, #172]	; 1e5d8 <sprintf@plt+0xcf3c>
   1e528:	add	r3, pc, r3
   1e52c:	ldrh	r3, [r3, #242]	; 0xf2
   1e530:	cmp	r3, #0
   1e534:	beq	1e56c <sprintf@plt+0xced0>
   1e538:	ldr	r3, [pc, #156]	; 1e5dc <sprintf@plt+0xcf40>
   1e53c:	add	r3, pc, r3
   1e540:	ldr	r3, [r3, #372]	; 0x174
   1e544:	cmp	r3, #0
   1e548:	bne	1e56c <sprintf@plt+0xced0>
   1e54c:	ldr	r3, [pc, #140]	; 1e5e0 <sprintf@plt+0xcf44>
   1e550:	add	r3, pc, r3
   1e554:	ldrh	r3, [r3, #242]	; 0xf2
   1e558:	mov	r1, r3
   1e55c:	ldr	r3, [pc, #128]	; 1e5e4 <sprintf@plt+0xcf48>
   1e560:	add	r3, pc, r3
   1e564:	add	r0, r3, #188	; 0xbc
   1e568:	bl	1d83c <sprintf@plt+0xc1a0>
   1e56c:	ldr	r3, [pc, #116]	; 1e5e8 <sprintf@plt+0xcf4c>
   1e570:	add	r3, pc, r3
   1e574:	ldrb	r2, [fp, #-13]
   1e578:	strb	r2, [r3]
   1e57c:	nop	{0}
   1e580:	sub	sp, fp, #8
   1e584:	ldr	r4, [sp]
   1e588:	ldr	fp, [sp, #4]
   1e58c:	add	sp, sp, #8
   1e590:	pop	{pc}		; (ldr pc, [sp], #4)
   1e594:	andeq	r2, r1, ip, lsl #25
   1e598:	andeq	r7, r1, r0, asr #25
   1e59c:	andeq	r7, r1, ip, lsr #25
   1e5a0:	muleq	r1, r8, ip
   1e5a4:	andeq	r7, r1, r4, lsl #25
   1e5a8:	andeq	r7, r1, r0, ror ip
   1e5ac:	andeq	r7, r1, ip, asr ip
   1e5b0:	andeq	r7, r1, r8, asr #24
   1e5b4:	andeq	r7, r1, r8, lsr ip
   1e5b8:	andeq	r7, r1, ip, lsr #24
   1e5bc:	andeq	r0, r0, r8, ror #2
   1e5c0:	andeq	r7, r1, ip, lsr #23
   1e5c4:	muleq	r1, r8, fp
   1e5c8:	andeq	r7, r1, r4, lsl #23
   1e5cc:	andeq	r7, r1, r0, ror fp
   1e5d0:	andeq	r7, r1, r0, ror #22
   1e5d4:	andeq	r7, r1, r0, asr fp
   1e5d8:	andeq	r7, r1, ip, lsr fp
   1e5dc:	andeq	r7, r1, r8, lsr #22
   1e5e0:	andeq	r7, r1, r4, lsl fp
   1e5e4:	andeq	r7, r1, r4, lsl #22
   1e5e8:	strdeq	r7, [r1], -r0
   1e5ec:	str	fp, [sp, #-8]!
   1e5f0:	str	lr, [sp, #4]
   1e5f4:	add	fp, sp, #4
   1e5f8:	sub	sp, sp, #24
   1e5fc:	str	r0, [fp, #-16]
   1e600:	str	r1, [fp, #-20]	; 0xffffffec
   1e604:	str	r2, [fp, #-24]	; 0xffffffe8
   1e608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e60c:	ldr	r3, [r3]
   1e610:	str	r3, [fp, #-8]
   1e614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e618:	add	r3, r3, #4
   1e61c:	ldr	r3, [r3]
   1e620:	mov	r0, r3
   1e624:	bl	11510 <atoi@plt>
   1e628:	str	r0, [fp, #-12]
   1e62c:	ldr	r3, [fp, #-12]
   1e630:	cmp	r3, #65536	; 0x10000
   1e634:	bge	1e644 <sprintf@plt+0xcfa8>
   1e638:	ldr	r3, [fp, #-12]
   1e63c:	cmp	r3, #0
   1e640:	bgt	1e670 <sprintf@plt+0xcfd4>
   1e644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e648:	ldr	r2, [r3]
   1e64c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e650:	add	r3, r3, #4
   1e654:	ldr	r3, [r3]
   1e658:	ldr	r1, [pc, #56]	; 1e698 <sprintf@plt+0xcffc>
   1e65c:	add	r1, pc, r1
   1e660:	mov	r0, #67	; 0x43
   1e664:	bl	12b00 <sprintf@plt+0x1464>
   1e668:	mov	r0, #3
   1e66c:	bl	11684 <exit@plt>
   1e670:	ldr	r3, [fp, #-12]
   1e674:	uxth	r3, r3
   1e678:	mov	r1, r3
   1e67c:	ldr	r0, [fp, #-8]
   1e680:	bl	1d83c <sprintf@plt+0xc1a0>
   1e684:	nop	{0}
   1e688:	sub	sp, fp, #4
   1e68c:	ldr	fp, [sp]
   1e690:	add	sp, sp, #4
   1e694:	pop	{pc}		; (ldr pc, [sp], #4)
   1e698:	ldrdeq	r1, [r0], -ip
   1e69c:	str	fp, [sp, #-8]!
   1e6a0:	str	lr, [sp, #4]
   1e6a4:	add	fp, sp, #4
   1e6a8:	sub	sp, sp, #24
   1e6ac:	str	r0, [fp, #-16]
   1e6b0:	str	r1, [fp, #-20]	; 0xffffffec
   1e6b4:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6bc:	add	r3, r3, #4
   1e6c0:	ldr	r3, [r3]
   1e6c4:	mov	r0, r3
   1e6c8:	bl	11510 <atoi@plt>
   1e6cc:	str	r0, [fp, #-8]
   1e6d0:	mov	r0, #40	; 0x28
   1e6d4:	bl	1c580 <sprintf@plt+0xaee4>
   1e6d8:	str	r0, [fp, #-12]
   1e6dc:	ldr	r3, [fp, #-8]
   1e6e0:	cmp	r3, #0
   1e6e4:	ble	1e6f4 <sprintf@plt+0xd058>
   1e6e8:	ldr	r3, [fp, #-8]
   1e6ec:	cmp	r3, #65536	; 0x10000
   1e6f0:	blt	1e720 <sprintf@plt+0xd084>
   1e6f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6f8:	ldr	r2, [r3]
   1e6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e700:	add	r3, r3, #4
   1e704:	ldr	r3, [r3]
   1e708:	ldr	r1, [pc, #508]	; 1e90c <sprintf@plt+0xd270>
   1e70c:	add	r1, pc, r1
   1e710:	mov	r0, #67	; 0x43
   1e714:	bl	12b00 <sprintf@plt+0x1464>
   1e718:	mov	r0, #3
   1e71c:	bl	11684 <exit@plt>
   1e720:	ldr	r3, [fp, #-8]
   1e724:	uxth	r2, r3
   1e728:	ldr	r3, [fp, #-12]
   1e72c:	strh	r2, [r3, #20]
   1e730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e734:	ldr	r3, [r3]
   1e738:	mov	r0, r3
   1e73c:	bl	1c97c <sprintf@plt+0xb2e0>
   1e740:	mov	r2, r0
   1e744:	ldr	r3, [fp, #-12]
   1e748:	str	r2, [r3, #16]
   1e74c:	ldr	r3, [fp, #-12]
   1e750:	ldr	r3, [r3, #16]
   1e754:	sub	r3, r3, #1
   1e758:	cmp	r3, #3
   1e75c:	addls	pc, pc, r3, lsl #2
   1e760:	b	1e864 <sprintf@plt+0xd1c8>
   1e764:	b	1e774 <sprintf@plt+0xd0d8>
   1e768:	b	1e7b0 <sprintf@plt+0xd114>
   1e76c:	b	1e7ec <sprintf@plt+0xd150>
   1e770:	b	1e828 <sprintf@plt+0xd18c>
   1e774:	ldr	r0, [fp, #-12]
   1e778:	ldr	r3, [fp, #-12]
   1e77c:	ldrh	r3, [r3, #20]
   1e780:	ldr	r2, [pc, #392]	; 1e910 <sprintf@plt+0xd274>
   1e784:	add	r2, pc, r2
   1e788:	mov	r1, #16
   1e78c:	bl	11630 <snprintf@plt>
   1e790:	ldr	r3, [fp, #-12]
   1e794:	mov	r2, #0
   1e798:	strb	r2, [r3, #22]
   1e79c:	ldr	r3, [fp, #-12]
   1e7a0:	ldr	r2, [pc, #364]	; 1e914 <sprintf@plt+0xd278>
   1e7a4:	add	r2, pc, r2
   1e7a8:	str	r2, [r3, #24]
   1e7ac:	b	1e88c <sprintf@plt+0xd1f0>
   1e7b0:	ldr	r0, [fp, #-12]
   1e7b4:	ldr	r3, [fp, #-12]
   1e7b8:	ldrh	r3, [r3, #20]
   1e7bc:	ldr	r2, [pc, #340]	; 1e918 <sprintf@plt+0xd27c>
   1e7c0:	add	r2, pc, r2
   1e7c4:	mov	r1, #16
   1e7c8:	bl	11630 <snprintf@plt>
   1e7cc:	ldr	r3, [fp, #-12]
   1e7d0:	mov	r2, #0
   1e7d4:	strb	r2, [r3, #22]
   1e7d8:	ldr	r3, [fp, #-12]
   1e7dc:	ldr	r2, [pc, #312]	; 1e91c <sprintf@plt+0xd280>
   1e7e0:	add	r2, pc, r2
   1e7e4:	str	r2, [r3, #24]
   1e7e8:	b	1e88c <sprintf@plt+0xd1f0>
   1e7ec:	ldr	r0, [fp, #-12]
   1e7f0:	ldr	r3, [fp, #-12]
   1e7f4:	ldrh	r3, [r3, #20]
   1e7f8:	ldr	r2, [pc, #288]	; 1e920 <sprintf@plt+0xd284>
   1e7fc:	add	r2, pc, r2
   1e800:	mov	r1, #16
   1e804:	bl	11630 <snprintf@plt>
   1e808:	ldr	r3, [fp, #-12]
   1e80c:	mov	r2, #0
   1e810:	strb	r2, [r3, #22]
   1e814:	ldr	r3, [fp, #-12]
   1e818:	ldr	r2, [pc, #260]	; 1e924 <sprintf@plt+0xd288>
   1e81c:	add	r2, pc, r2
   1e820:	str	r2, [r3, #24]
   1e824:	b	1e88c <sprintf@plt+0xd1f0>
   1e828:	ldr	r0, [fp, #-12]
   1e82c:	ldr	r3, [fp, #-12]
   1e830:	ldrh	r3, [r3, #20]
   1e834:	ldr	r2, [pc, #236]	; 1e928 <sprintf@plt+0xd28c>
   1e838:	add	r2, pc, r2
   1e83c:	mov	r1, #16
   1e840:	bl	11630 <snprintf@plt>
   1e844:	ldr	r3, [fp, #-12]
   1e848:	ldr	r2, [pc, #220]	; 1e92c <sprintf@plt+0xd290>
   1e84c:	add	r2, pc, r2
   1e850:	str	r2, [r3, #24]
   1e854:	ldr	r3, [fp, #-12]
   1e858:	mov	r2, #1
   1e85c:	strb	r2, [r3, #22]
   1e860:	b	1e88c <sprintf@plt+0xd1f0>
   1e864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e868:	ldr	r2, [r3]
   1e86c:	ldr	r3, [fp, #-12]
   1e870:	ldrh	r3, [r3, #20]
   1e874:	ldr	r1, [pc, #180]	; 1e930 <sprintf@plt+0xd294>
   1e878:	add	r1, pc, r1
   1e87c:	mov	r0, #67	; 0x43
   1e880:	bl	12b00 <sprintf@plt+0x1464>
   1e884:	mov	r0, #3
   1e888:	bl	11684 <exit@plt>
   1e88c:	ldr	r3, [fp, #-12]
   1e890:	ldr	r2, [r3, #16]
   1e894:	ldr	r3, [fp, #-12]
   1e898:	ldrh	r3, [r3, #20]
   1e89c:	mov	r1, r3
   1e8a0:	mov	r0, r2
   1e8a4:	bl	1ca58 <sprintf@plt+0xb3bc>
   1e8a8:	mov	r3, r0
   1e8ac:	cmp	r3, #0
   1e8b0:	beq	1e8e0 <sprintf@plt+0xd244>
   1e8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8b8:	ldr	r2, [r3]
   1e8bc:	ldr	r3, [fp, #-12]
   1e8c0:	ldrh	r3, [r3, #20]
   1e8c4:	ldr	r1, [pc, #104]	; 1e934 <sprintf@plt+0xd298>
   1e8c8:	add	r1, pc, r1
   1e8cc:	mov	r0, #67	; 0x43
   1e8d0:	bl	12b00 <sprintf@plt+0x1464>
   1e8d4:	ldr	r0, [fp, #-12]
   1e8d8:	bl	1c5e0 <sprintf@plt+0xaf44>
   1e8dc:	b	1e8fc <sprintf@plt+0xd260>
   1e8e0:	ldr	r3, [fp, #-12]
   1e8e4:	add	r3, r3, #28
   1e8e8:	ldr	r2, [pc, #72]	; 1e938 <sprintf@plt+0xd29c>
   1e8ec:	add	r2, pc, r2
   1e8f0:	mov	r1, r3
   1e8f4:	ldr	r0, [fp, #-12]
   1e8f8:	bl	1c2e4 <sprintf@plt+0xac48>
   1e8fc:	sub	sp, fp, #4
   1e900:	ldr	fp, [sp]
   1e904:	add	sp, sp, #4
   1e908:	pop	{pc}		; (ldr pc, [sp], #4)
   1e90c:	andeq	r1, r0, ip, asr #16
   1e910:	strdeq	r1, [r0], -ip
   1e914:			; <UNDEFINED> instruction: 0xffffe960
   1e918:	andeq	r1, r0, ip, asr #15
   1e91c:			; <UNDEFINED> instruction: 0xffffea54
   1e920:	muleq	r0, ip, r7
   1e924:			; <UNDEFINED> instruction: 0xffffebf8
   1e928:	andeq	r1, r0, r0, ror r7
   1e92c:			; <UNDEFINED> instruction: 0xffffebc8
   1e930:	andeq	r1, r0, r4, asr #14
   1e934:	andeq	r1, r0, r4, lsr #14
   1e938:	andeq	r7, r1, r8, ror #14
   1e93c:	str	r4, [sp, #-12]!
   1e940:	str	fp, [sp, #4]
   1e944:	str	lr, [sp, #8]
   1e948:	add	fp, sp, #8
   1e94c:	sub	sp, sp, #60	; 0x3c
   1e950:	str	r0, [fp, #-56]	; 0xffffffc8
   1e954:	str	r1, [fp, #-60]	; 0xffffffc4
   1e958:	str	r2, [fp, #-64]	; 0xffffffc0
   1e95c:	ldr	r4, [pc, #672]	; 1ec04 <sprintf@plt+0xd568>
   1e960:	add	r4, pc, r4
   1e964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e968:	ldr	r3, [r3]
   1e96c:	mov	r0, r3
   1e970:	bl	1c97c <sprintf@plt+0xb2e0>
   1e974:	str	r0, [fp, #-20]	; 0xffffffec
   1e978:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e97c:	add	r3, r3, #4
   1e980:	ldr	r3, [r3]
   1e984:	mov	r0, r3
   1e988:	bl	11510 <atoi@plt>
   1e98c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e994:	cmp	r3, #0
   1e998:	ble	1e9a8 <sprintf@plt+0xd30c>
   1e99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9a0:	cmp	r3, #65536	; 0x10000
   1e9a4:	blt	1e9d4 <sprintf@plt+0xd338>
   1e9a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e9ac:	ldr	r2, [r3]
   1e9b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e9b4:	add	r3, r3, #4
   1e9b8:	ldr	r3, [r3]
   1e9bc:	ldr	r1, [pc, #580]	; 1ec08 <sprintf@plt+0xd56c>
   1e9c0:	add	r1, pc, r1
   1e9c4:	mov	r0, #67	; 0x43
   1e9c8:	bl	12b00 <sprintf@plt+0x1464>
   1e9cc:	mov	r0, #3
   1e9d0:	bl	11684 <exit@plt>
   1e9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e9d8:	cmp	r3, #0
   1e9dc:	bne	1ea04 <sprintf@plt+0xd368>
   1e9e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e9e4:	ldr	r2, [r3]
   1e9e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9ec:	ldr	r1, [pc, #536]	; 1ec0c <sprintf@plt+0xd570>
   1e9f0:	add	r1, pc, r1
   1e9f4:	mov	r0, #67	; 0x43
   1e9f8:	bl	12b00 <sprintf@plt+0x1464>
   1e9fc:	mov	r0, #3
   1ea00:	bl	11684 <exit@plt>
   1ea04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea08:	uxth	r3, r3
   1ea0c:	mov	r1, r3
   1ea10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ea14:	bl	1ca58 <sprintf@plt+0xb3bc>
   1ea18:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea20:	cmp	r3, #0
   1ea24:	bne	1ea4c <sprintf@plt+0xd3b0>
   1ea28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ea2c:	ldr	r2, [r3]
   1ea30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea34:	ldr	r1, [pc, #468]	; 1ec10 <sprintf@plt+0xd574>
   1ea38:	add	r1, pc, r1
   1ea3c:	mov	r0, #67	; 0x43
   1ea40:	bl	12b00 <sprintf@plt+0x1464>
   1ea44:	mov	r0, #3
   1ea48:	bl	11684 <exit@plt>
   1ea4c:	ldr	r3, [pc, #448]	; 1ec14 <sprintf@plt+0xd578>
   1ea50:	ldr	r3, [r4, r3]
   1ea54:	ldr	r3, [r3]
   1ea58:	sub	r2, fp, #48	; 0x30
   1ea5c:	mov	r1, r2
   1ea60:	mov	r0, r3
   1ea64:	bl	11480 <rb_dictionary_foreach_start@plt>
   1ea68:	b	1eb78 <sprintf@plt+0xd4dc>
   1ea6c:	ldr	r3, [pc, #420]	; 1ec18 <sprintf@plt+0xd57c>
   1ea70:	ldr	r3, [r4, r3]
   1ea74:	ldr	r3, [r3, #12]
   1ea78:	mov	r1, r3
   1ea7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea80:	bl	1c860 <sprintf@plt+0xb1c4>
   1ea84:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ea8c:	cmp	r3, #0
   1ea90:	beq	1eb58 <sprintf@plt+0xd4bc>
   1ea94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea98:	bl	1c62c <sprintf@plt+0xaf90>
   1ea9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eaa0:	ldr	r3, [r3]
   1eaa4:	str	r3, [fp, #-16]
   1eaa8:	b	1eb38 <sprintf@plt+0xd49c>
   1eaac:	ldr	r3, [fp, #-16]
   1eab0:	ldr	r3, [r3]
   1eab4:	str	r3, [fp, #-40]	; 0xffffffd8
   1eab8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eabc:	ldr	r3, [r3, #8]
   1eac0:	ldrh	r2, [r3, #20]
   1eac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eac8:	ldrh	r3, [r3, #20]
   1eacc:	cmp	r2, r3
   1ead0:	bne	1eb2c <sprintf@plt+0xd490>
   1ead4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ead8:	ldr	r3, [r3, #8]
   1eadc:	ldr	r2, [r3, #16]
   1eae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eae4:	ldr	r3, [r3, #16]
   1eae8:	cmp	r2, r3
   1eaec:	bne	1eb2c <sprintf@plt+0xd490>
   1eaf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eaf4:	add	r3, r3, #16
   1eaf8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1eafc:	mov	r1, r2
   1eb00:	mov	r0, r3
   1eb04:	bl	1c444 <sprintf@plt+0xada8>
   1eb08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eb0c:	bl	1c5e0 <sprintf@plt+0xaf44>
   1eb10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eb14:	ldr	r3, [r3, #8]
   1eb18:	cmp	r3, #0
   1eb1c:	bne	1eb48 <sprintf@plt+0xd4ac>
   1eb20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb24:	bl	1e0ac <sprintf@plt+0xca10>
   1eb28:	b	1eb48 <sprintf@plt+0xd4ac>
   1eb2c:	ldr	r3, [fp, #-16]
   1eb30:	ldr	r3, [r3, #8]
   1eb34:	str	r3, [fp, #-16]
   1eb38:	ldr	r3, [fp, #-16]
   1eb3c:	cmp	r3, #0
   1eb40:	bne	1eaac <sprintf@plt+0xd410>
   1eb44:	b	1eb4c <sprintf@plt+0xd4b0>
   1eb48:	nop	{0}
   1eb4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb50:	bl	1c660 <sprintf@plt+0xafc4>
   1eb54:	b	1eb5c <sprintf@plt+0xd4c0>
   1eb58:	nop	{0}
   1eb5c:	ldr	r3, [pc, #176]	; 1ec14 <sprintf@plt+0xd578>
   1eb60:	ldr	r3, [r4, r3]
   1eb64:	ldr	r3, [r3]
   1eb68:	sub	r2, fp, #48	; 0x30
   1eb6c:	mov	r1, r2
   1eb70:	mov	r0, r3
   1eb74:	bl	11438 <rb_dictionary_foreach_next@plt>
   1eb78:	ldr	r3, [pc, #148]	; 1ec14 <sprintf@plt+0xd578>
   1eb7c:	ldr	r3, [r4, r3]
   1eb80:	ldr	r3, [r3]
   1eb84:	sub	r2, fp, #48	; 0x30
   1eb88:	mov	r1, r2
   1eb8c:	mov	r0, r3
   1eb90:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1eb94:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb9c:	cmp	r3, #0
   1eba0:	bne	1ea6c <sprintf@plt+0xd3d0>
   1eba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eba8:	add	r3, r3, #28
   1ebac:	ldr	r2, [pc, #104]	; 1ec1c <sprintf@plt+0xd580>
   1ebb0:	add	r2, pc, r2
   1ebb4:	mov	r1, r2
   1ebb8:	mov	r0, r3
   1ebbc:	bl	1c444 <sprintf@plt+0xada8>
   1ebc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ebc4:	bl	1c5e0 <sprintf@plt+0xaf44>
   1ebc8:	ldr	r3, [pc, #80]	; 1ec20 <sprintf@plt+0xd584>
   1ebcc:	add	r3, pc, r3
   1ebd0:	ldr	r3, [r3, #8]
   1ebd4:	cmp	r3, #0
   1ebd8:	bne	1ebec <sprintf@plt+0xd550>
   1ebdc:	ldr	r3, [pc, #64]	; 1ec24 <sprintf@plt+0xd588>
   1ebe0:	add	r3, pc, r3
   1ebe4:	mov	r2, #0
   1ebe8:	strb	r2, [r3]
   1ebec:	nop	{0}
   1ebf0:	sub	sp, fp, #8
   1ebf4:	ldr	r4, [sp]
   1ebf8:	ldr	fp, [sp, #4]
   1ebfc:	add	sp, sp, #8
   1ec00:	pop	{pc}		; (ldr pc, [sp], #4)
   1ec04:	muleq	r1, r8, r6
   1ec08:	andeq	r1, r0, r8, asr r6
   1ec0c:	andeq	r1, r0, r8, asr r6
   1ec10:	andeq	r1, r0, r8, asr #12
   1ec14:	andeq	r0, r0, r8, ror #2
   1ec18:	muleq	r0, r4, r1
   1ec1c:	andeq	r7, r1, r4, lsr #9
   1ec20:	andeq	r7, r1, r8, lsl #9
   1ec24:	andeq	r7, r1, r0, lsl #9
   1ec28:	str	r4, [sp, #-12]!
   1ec2c:	str	fp, [sp, #4]
   1ec30:	str	lr, [sp, #8]
   1ec34:	add	fp, sp, #8
   1ec38:	sub	sp, sp, #44	; 0x2c
   1ec3c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ec40:	str	r1, [fp, #-44]	; 0xffffffd4
   1ec44:	str	r2, [fp, #-48]	; 0xffffffd0
   1ec48:	ldr	r4, [pc, #292]	; 1ed74 <sprintf@plt+0xd6d8>
   1ec4c:	add	r4, pc, r4
   1ec50:	ldr	r3, [pc, #288]	; 1ed78 <sprintf@plt+0xd6dc>
   1ec54:	add	r3, pc, r3
   1ec58:	ldr	r3, [r3]
   1ec5c:	str	r3, [fp, #-16]
   1ec60:	ldr	r3, [fp, #-16]
   1ec64:	cmp	r3, #0
   1ec68:	beq	1ec78 <sprintf@plt+0xd5dc>
   1ec6c:	ldr	r3, [fp, #-16]
   1ec70:	ldr	r3, [r3, #8]
   1ec74:	b	1ec7c <sprintf@plt+0xd5e0>
   1ec78:	mov	r3, #0
   1ec7c:	str	r3, [fp, #-20]	; 0xffffffec
   1ec80:	b	1ecd0 <sprintf@plt+0xd634>
   1ec84:	ldr	r3, [fp, #-16]
   1ec88:	ldr	r3, [r3]
   1ec8c:	mov	r0, r3
   1ec90:	bl	1c5e0 <sprintf@plt+0xaf44>
   1ec94:	ldr	r3, [pc, #224]	; 1ed7c <sprintf@plt+0xd6e0>
   1ec98:	add	r3, pc, r3
   1ec9c:	mov	r1, r3
   1eca0:	ldr	r0, [fp, #-16]
   1eca4:	bl	1c444 <sprintf@plt+0xada8>
   1eca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ecac:	str	r3, [fp, #-16]
   1ecb0:	ldr	r3, [fp, #-16]
   1ecb4:	cmp	r3, #0
   1ecb8:	beq	1ecc8 <sprintf@plt+0xd62c>
   1ecbc:	ldr	r3, [fp, #-16]
   1ecc0:	ldr	r3, [r3, #8]
   1ecc4:	b	1eccc <sprintf@plt+0xd630>
   1ecc8:	mov	r3, #0
   1eccc:	str	r3, [fp, #-20]	; 0xffffffec
   1ecd0:	ldr	r3, [fp, #-16]
   1ecd4:	cmp	r3, #0
   1ecd8:	bne	1ec84 <sprintf@plt+0xd5e8>
   1ecdc:	ldr	r3, [pc, #156]	; 1ed80 <sprintf@plt+0xd6e4>
   1ece0:	ldr	r3, [r4, r3]
   1ece4:	ldr	r3, [r3]
   1ece8:	sub	r2, fp, #32
   1ecec:	mov	r1, r2
   1ecf0:	mov	r0, r3
   1ecf4:	bl	11480 <rb_dictionary_foreach_start@plt>
   1ecf8:	b	1ed20 <sprintf@plt+0xd684>
   1ecfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed00:	bl	1e0ac <sprintf@plt+0xca10>
   1ed04:	ldr	r3, [pc, #116]	; 1ed80 <sprintf@plt+0xd6e4>
   1ed08:	ldr	r3, [r4, r3]
   1ed0c:	ldr	r3, [r3]
   1ed10:	sub	r2, fp, #32
   1ed14:	mov	r1, r2
   1ed18:	mov	r0, r3
   1ed1c:	bl	11438 <rb_dictionary_foreach_next@plt>
   1ed20:	ldr	r3, [pc, #88]	; 1ed80 <sprintf@plt+0xd6e4>
   1ed24:	ldr	r3, [r4, r3]
   1ed28:	ldr	r3, [r3]
   1ed2c:	sub	r2, fp, #32
   1ed30:	mov	r1, r2
   1ed34:	mov	r0, r3
   1ed38:	bl	11390 <rb_dictionary_foreach_cur@plt>
   1ed3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed44:	cmp	r3, #0
   1ed48:	bne	1ecfc <sprintf@plt+0xd660>
   1ed4c:	ldr	r3, [pc, #48]	; 1ed84 <sprintf@plt+0xd6e8>
   1ed50:	add	r3, pc, r3
   1ed54:	mov	r2, #0
   1ed58:	strb	r2, [r3]
   1ed5c:	nop	{0}
   1ed60:	sub	sp, fp, #8
   1ed64:	ldr	r4, [sp]
   1ed68:	ldr	fp, [sp, #4]
   1ed6c:	add	sp, sp, #8
   1ed70:	pop	{pc}		; (ldr pc, [sp], #4)
   1ed74:	andeq	r2, r1, ip, lsr #7
   1ed78:	andeq	r7, r1, r0, lsl #8
   1ed7c:			; <UNDEFINED> instruction: 0x000173bc
   1ed80:	andeq	r0, r0, r8, ror #2
   1ed84:	andeq	r7, r1, r0, lsl r3
   1ed88:	str	fp, [sp, #-8]!
   1ed8c:	str	lr, [sp, #4]
   1ed90:	add	fp, sp, #4
   1ed94:	sub	sp, sp, #16
   1ed98:	str	r0, [fp, #-8]
   1ed9c:	str	r1, [fp, #-12]
   1eda0:	str	r2, [fp, #-16]
   1eda4:	ldr	r3, [pc, #116]	; 1ee20 <sprintf@plt+0xd784>
   1eda8:	add	r3, pc, r3
   1edac:	ldr	r3, [r3, #184]	; 0xb8
   1edb0:	cmp	r3, #0
   1edb4:	beq	1edcc <sprintf@plt+0xd730>
   1edb8:	ldr	r3, [pc, #100]	; 1ee24 <sprintf@plt+0xd788>
   1edbc:	add	r3, pc, r3
   1edc0:	ldr	r3, [r3, #184]	; 0xb8
   1edc4:	mov	r0, r3
   1edc8:	bl	114e0 <rb_close@plt>
   1edcc:	ldr	r3, [pc, #84]	; 1ee28 <sprintf@plt+0xd78c>
   1edd0:	add	r3, pc, r3
   1edd4:	ldr	r3, [r3, #372]	; 0x174
   1edd8:	cmp	r3, #0
   1eddc:	beq	1edf4 <sprintf@plt+0xd758>
   1ede0:	ldr	r3, [pc, #68]	; 1ee2c <sprintf@plt+0xd790>
   1ede4:	add	r3, pc, r3
   1ede8:	ldr	r3, [r3, #372]	; 0x174
   1edec:	mov	r0, r3
   1edf0:	bl	114e0 <rb_close@plt>
   1edf4:	mov	r2, #376	; 0x178
   1edf8:	mov	r1, #0
   1edfc:	ldr	r3, [pc, #44]	; 1ee30 <sprintf@plt+0xd794>
   1ee00:	add	r3, pc, r3
   1ee04:	mov	r0, r3
   1ee08:	bl	113e4 <memset@plt>
   1ee0c:	nop	{0}
   1ee10:	sub	sp, fp, #4
   1ee14:	ldr	fp, [sp]
   1ee18:	add	sp, sp, #4
   1ee1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee20:			; <UNDEFINED> instruction: 0x000172bc
   1ee24:	andeq	r7, r1, r8, lsr #5
   1ee28:	muleq	r1, r4, r2
   1ee2c:	andeq	r7, r1, r0, lsl #5
   1ee30:	andeq	r7, r1, r4, ror #4
   1ee34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ee38:	mov	r7, r0
   1ee3c:	ldr	r6, [pc, #72]	; 1ee8c <sprintf@plt+0xd7f0>
   1ee40:	ldr	r5, [pc, #72]	; 1ee90 <sprintf@plt+0xd7f4>
   1ee44:	add	r6, pc, r6
   1ee48:	add	r5, pc, r5
   1ee4c:	sub	r6, r6, r5
   1ee50:	mov	r8, r1
   1ee54:	mov	r9, r2
   1ee58:	bl	11274 <sigemptyset@plt-0x20>
   1ee5c:	asrs	r6, r6, #2
   1ee60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee64:	mov	r4, #0
   1ee68:	add	r4, r4, #1
   1ee6c:	ldr	r3, [r5], #4
   1ee70:	mov	r2, r9
   1ee74:	mov	r1, r8
   1ee78:	mov	r0, r7
   1ee7c:	blx	r3
   1ee80:	cmp	r6, r4
   1ee84:	bne	1ee68 <sprintf@plt+0xd7cc>
   1ee88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee8c:	strheq	r2, [r1], -r0
   1ee90:	andeq	r2, r1, r8, lsr #1
   1ee94:	bx	lr

Disassembly of section .fini:

0001ee98 <.fini>:
   1ee98:	push	{r3, lr}
   1ee9c:	pop	{r3, pc}
