
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010ecc <.init>:
   10ecc:	push	{r3, lr}
   10ed0:	bl	111d4 <__mempcpy_chk@plt+0x48>
   10ed4:	pop	{r3, pc}

Disassembly of section .plt:

00010ed8 <calloc@plt-0x14>:
   10ed8:	push	{lr}		; (str lr, [sp, #-4]!)
   10edc:	ldr	lr, [pc, #4]	; 10ee8 <calloc@plt-0x4>
   10ee0:	add	lr, pc, lr
   10ee4:	ldr	pc, [lr, #8]!
   10ee8:	andeq	r6, r1, r8, lsl r1

00010eec <calloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #280]!	; 0x118

00010ef8 <fputs_unlocked@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #272]!	; 0x110

00010f04 <uselocale@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #264]!	; 0x108

00010f10 <strcmp@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #256]!	; 0x100

00010f1c <strtol@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #248]!	; 0xf8

00010f28 <strcspn@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #240]!	; 0xf0

00010f34 <fflush@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #232]!	; 0xe8

00010f40 <memmove@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #224]!	; 0xe0

00010f4c <free@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #216]!	; 0xd8

00010f58 <_exit@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #208]!	; 0xd0

00010f64 <memcpy@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #200]!	; 0xc8

00010f70 <mbsinit@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #192]!	; 0xc0

00010f7c <strtold@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #184]!	; 0xb8

00010f88 <fwrite_unlocked@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #176]!	; 0xb0

00010f94 <memcmp@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #168]!	; 0xa8

00010fa0 <dcgettext@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #160]!	; 0xa0

00010fac <realloc@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #152]!	; 0x98

00010fb8 <textdomain@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #144]!	; 0x90

00010fc4 <iswprint@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #136]!	; 0x88

00010fd0 <lseek64@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #128]!	; 0x80

00010fdc <__ctype_get_mb_cur_max@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #120]!	; 0x78

00010fe8 <strcpy@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #112]!	; 0x70

00010ff4 <__fpending@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #104]!	; 0x68

00011000 <ferror_unlocked@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #96]!	; 0x60

0001100c <mbrtowc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #88]!	; 0x58

00011018 <error@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #80]!	; 0x50

00011024 <__asprintf_chk@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #72]!	; 0x48

00011030 <malloc@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #64]!	; 0x40

0001103c <__libc_start_main@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #56]!	; 0x38

00011048 <__freading@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #48]!	; 0x30

00011054 <__gmon_start__@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #40]!	; 0x28

00011060 <getopt_long@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #32]!

0001106c <__ctype_b_loc@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #24]!

00011078 <exit@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #16]!

00011084 <strlen@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #8]!

00011090 <strchr@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #0]!

0001109c <__errno_location@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #4088]!	; 0xff8

000110a8 <__sprintf_chk@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #4080]!	; 0xff0

000110b4 <__cxa_atexit@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110c0 <memset@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110cc <__printf_chk@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110d8 <fileno@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e4 <__fprintf_chk@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #4040]!	; 0xfc8

000110f0 <memchr@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110fc <fclose@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #4024]!	; 0xfb8

00011108 <fseeko64@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #4016]!	; 0xfb0

00011114 <setlocale@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #4008]!	; 0xfa8

00011120 <strrchr@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #4000]!	; 0xfa0

0001112c <nl_langinfo@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3992]!	; 0xf98

00011138 <newlocale@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3984]!	; 0xf90

00011144 <clearerr_unlocked@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3976]!	; 0xf88

00011150 <bindtextdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3968]!	; 0xf80

0001115c <fputs@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3960]!	; 0xf78

00011168 <strncmp@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3952]!	; 0xf70

00011174 <abort@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3944]!	; 0xf68

00011180 <strspn@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3936]!	; 0xf60

0001118c <__mempcpy_chk@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3928]!	; 0xf58

Disassembly of section .text:

00011198 <.text>:
   11198:	mov	fp, #0
   1119c:	mov	lr, #0
   111a0:	pop	{r1}		; (ldr r1, [sp], #4)
   111a4:	mov	r2, sp
   111a8:	push	{r2}		; (str r2, [sp, #-4]!)
   111ac:	push	{r0}		; (str r0, [sp, #-4]!)
   111b0:	ldr	ip, [pc, #16]	; 111c8 <__mempcpy_chk@plt+0x3c>
   111b4:	push	{ip}		; (str ip, [sp, #-4]!)
   111b8:	ldr	r0, [pc, #12]	; 111cc <__mempcpy_chk@plt+0x40>
   111bc:	ldr	r3, [pc, #12]	; 111d0 <__mempcpy_chk@plt+0x44>
   111c0:	bl	1103c <__libc_start_main@plt>
   111c4:	bl	11174 <abort@plt>
   111c8:	andeq	r5, r1, r8, ror r5
   111cc:	andeq	r1, r1, r8, lsr #10
   111d0:	andeq	r5, r1, r8, lsl r5
   111d4:	ldr	r3, [pc, #20]	; 111f0 <__mempcpy_chk@plt+0x64>
   111d8:	ldr	r2, [pc, #20]	; 111f4 <__mempcpy_chk@plt+0x68>
   111dc:	add	r3, pc, r3
   111e0:	ldr	r2, [r3, r2]
   111e4:	cmp	r2, #0
   111e8:	bxeq	lr
   111ec:	b	11054 <__gmon_start__@plt>
   111f0:	andeq	r5, r1, ip, lsl lr
   111f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   111f8:	ldr	r0, [pc, #24]	; 11218 <__mempcpy_chk@plt+0x8c>
   111fc:	ldr	r3, [pc, #24]	; 1121c <__mempcpy_chk@plt+0x90>
   11200:	cmp	r3, r0
   11204:	bxeq	lr
   11208:	ldr	r3, [pc, #16]	; 11220 <__mempcpy_chk@plt+0x94>
   1120c:	cmp	r3, #0
   11210:	bxeq	lr
   11214:	bx	r3
   11218:	andeq	r7, r2, r8, asr #2
   1121c:	andeq	r7, r2, r8, asr #2
   11220:	andeq	r0, r0, r0
   11224:	ldr	r0, [pc, #36]	; 11250 <__mempcpy_chk@plt+0xc4>
   11228:	ldr	r1, [pc, #36]	; 11254 <__mempcpy_chk@plt+0xc8>
   1122c:	sub	r1, r1, r0
   11230:	asr	r1, r1, #2
   11234:	add	r1, r1, r1, lsr #31
   11238:	asrs	r1, r1, #1
   1123c:	bxeq	lr
   11240:	ldr	r3, [pc, #16]	; 11258 <__mempcpy_chk@plt+0xcc>
   11244:	cmp	r3, #0
   11248:	bxeq	lr
   1124c:	bx	r3
   11250:	andeq	r7, r2, r8, asr #2
   11254:	andeq	r7, r2, r8, asr #2
   11258:	andeq	r0, r0, r0
   1125c:	push	{r4, lr}
   11260:	ldr	r4, [pc, #24]	; 11280 <__mempcpy_chk@plt+0xf4>
   11264:	ldrb	r3, [r4]
   11268:	cmp	r3, #0
   1126c:	popne	{r4, pc}
   11270:	bl	111f8 <__mempcpy_chk@plt+0x6c>
   11274:	mov	r3, #1
   11278:	strb	r3, [r4]
   1127c:	pop	{r4, pc}
   11280:	andeq	r7, r2, r4, ror #2
   11284:	b	11224 <__mempcpy_chk@plt+0x98>
   11288:	push	{fp, lr}
   1128c:	mov	fp, sp
   11290:	sub	sp, sp, #64	; 0x40
   11294:	mov	r8, r0
   11298:	cmp	r0, #0
   1129c:	bne	114e4 <__mempcpy_chk@plt+0x358>
   112a0:	movw	r1, #21963	; 0x55cb
   112a4:	mov	r0, #0
   112a8:	mov	r2, #5
   112ac:	movt	r1, #1
   112b0:	bl	10fa0 <dcgettext@plt>
   112b4:	mov	r1, r0
   112b8:	movw	r0, #29076	; 0x7194
   112bc:	movt	r0, #2
   112c0:	ldr	r2, [r0]
   112c4:	mov	r0, #1
   112c8:	mov	r3, r2
   112cc:	str	r2, [sp]
   112d0:	bl	110cc <__printf_chk@plt>
   112d4:	movw	r1, #22067	; 0x5633
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10fa0 <dcgettext@plt>
   112e8:	movw	r9, #29020	; 0x715c
   112ec:	movt	r9, #2
   112f0:	ldr	r1, [r9]
   112f4:	bl	10ef8 <fputs_unlocked@plt>
   112f8:	movw	r1, #23368	; 0x5b48
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	movt	r1, #1
   11308:	bl	10fa0 <dcgettext@plt>
   1130c:	ldr	r1, [r9]
   11310:	bl	10ef8 <fputs_unlocked@plt>
   11314:	movw	r1, #22125	; 0x566d
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	movt	r1, #1
   11324:	bl	10fa0 <dcgettext@plt>
   11328:	ldr	r1, [r9]
   1132c:	bl	10ef8 <fputs_unlocked@plt>
   11330:	movw	r1, #22337	; 0x5741
   11334:	mov	r0, #0
   11338:	mov	r2, #5
   1133c:	movt	r1, #1
   11340:	bl	10fa0 <dcgettext@plt>
   11344:	ldr	r1, [r9]
   11348:	bl	10ef8 <fputs_unlocked@plt>
   1134c:	movw	r1, #22382	; 0x576e
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10fa0 <dcgettext@plt>
   11360:	ldr	r1, [r9]
   11364:	bl	10ef8 <fputs_unlocked@plt>
   11368:	movw	r1, #22436	; 0x57a4
   1136c:	mov	r0, #0
   11370:	mov	r2, #5
   11374:	movt	r1, #1
   11378:	bl	10fa0 <dcgettext@plt>
   1137c:	ldr	r1, [r9]
   11380:	bl	10ef8 <fputs_unlocked@plt>
   11384:	movw	r1, #22949	; 0x59a5
   11388:	mov	r0, #0
   1138c:	mov	r2, #5
   11390:	movt	r1, #1
   11394:	bl	10fa0 <dcgettext@plt>
   11398:	ldr	r1, [r9]
   1139c:	bl	10ef8 <fputs_unlocked@plt>
   113a0:	movw	r0, #24184	; 0x5e78
   113a4:	add	r6, sp, #8
   113a8:	movt	r0, #1
   113ac:	mov	r1, r6
   113b0:	ldm	r0!, {r2, r3, r4, r5}
   113b4:	stmia	r1!, {r2, r3, r4, r5}
   113b8:	ldm	r0!, {r2, r3, r4, r5, r7}
   113bc:	stmia	r1!, {r2, r3, r4, r5, r7}
   113c0:	ldm	r0, {r2, r3, r4, r5, r7}
   113c4:	stm	r1, {r2, r3, r4, r5, r7}
   113c8:	movw	r1, #23443	; 0x5b93
   113cc:	movw	r5, #23157	; 0x5a75
   113d0:	movt	r1, #1
   113d4:	movt	r5, #1
   113d8:	mov	r0, r5
   113dc:	bl	10f10 <strcmp@plt>
   113e0:	cmp	r0, #0
   113e4:	ldrne	r1, [r6, #8]!
   113e8:	cmpne	r1, #0
   113ec:	bne	113d8 <__mempcpy_chk@plt+0x24c>
   113f0:	ldr	r6, [r6, #4]
   113f4:	movw	r1, #23538	; 0x5bf2
   113f8:	mov	r0, #0
   113fc:	mov	r2, #5
   11400:	movt	r1, #1
   11404:	bl	10fa0 <dcgettext@plt>
   11408:	movw	r2, #23192	; 0x5a98
   1140c:	movw	r3, #23561	; 0x5c09
   11410:	mov	r1, r0
   11414:	mov	r0, #1
   11418:	movt	r2, #1
   1141c:	movt	r3, #1
   11420:	bl	110cc <__printf_chk@plt>
   11424:	cmp	r6, #0
   11428:	mov	r0, #5
   1142c:	mov	r1, #0
   11430:	moveq	r6, r5
   11434:	bl	11114 <setlocale@plt>
   11438:	cmp	r0, #0
   1143c:	beq	11474 <__mempcpy_chk@plt+0x2e8>
   11440:	movw	r1, #23601	; 0x5c31
   11444:	mov	r2, #3
   11448:	movt	r1, #1
   1144c:	bl	11168 <strncmp@plt>
   11450:	cmp	r0, #0
   11454:	beq	11474 <__mempcpy_chk@plt+0x2e8>
   11458:	movw	r1, #23605	; 0x5c35
   1145c:	mov	r0, #0
   11460:	mov	r2, #5
   11464:	movt	r1, #1
   11468:	bl	10fa0 <dcgettext@plt>
   1146c:	ldr	r1, [r9]
   11470:	bl	10ef8 <fputs_unlocked@plt>
   11474:	movw	r1, #23676	; 0x5c7c
   11478:	mov	r0, #0
   1147c:	mov	r2, #5
   11480:	movt	r1, #1
   11484:	bl	10fa0 <dcgettext@plt>
   11488:	movw	r2, #23561	; 0x5c09
   1148c:	mov	r1, r0
   11490:	mov	r0, #1
   11494:	mov	r3, r5
   11498:	movt	r2, #1
   1149c:	bl	110cc <__printf_chk@plt>
   114a0:	movw	r1, #23703	; 0x5c97
   114a4:	mov	r0, #0
   114a8:	mov	r2, #5
   114ac:	movt	r1, #1
   114b0:	bl	10fa0 <dcgettext@plt>
   114b4:	movw	r3, #23753	; 0x5cc9
   114b8:	mov	r1, r0
   114bc:	movw	r0, #23471	; 0x5baf
   114c0:	cmp	r6, r5
   114c4:	mov	r2, r6
   114c8:	movt	r0, #1
   114cc:	movt	r3, #1
   114d0:	moveq	r3, r0
   114d4:	mov	r0, #1
   114d8:	bl	110cc <__printf_chk@plt>
   114dc:	mov	r0, r8
   114e0:	bl	11078 <exit@plt>
   114e4:	movw	r0, #29016	; 0x7158
   114e8:	movw	r1, #21924	; 0x55a4
   114ec:	mov	r2, #5
   114f0:	movt	r0, #2
   114f4:	movt	r1, #1
   114f8:	ldr	r5, [r0]
   114fc:	mov	r0, #0
   11500:	bl	10fa0 <dcgettext@plt>
   11504:	mov	r2, r0
   11508:	movw	r0, #29076	; 0x7194
   1150c:	mov	r1, #1
   11510:	movt	r0, #2
   11514:	ldr	r3, [r0]
   11518:	mov	r0, r5
   1151c:	bl	110e4 <__fprintf_chk@plt>
   11520:	b	114dc <__mempcpy_chk@plt+0x350>
   11524:	nop	{0}
   11528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1152c:	add	fp, sp, #28
   11530:	sub	sp, sp, #4
   11534:	vpush	{d8-d14}
   11538:	sub	sp, sp, #72	; 0x48
   1153c:	mov	r6, r0
   11540:	movw	r0, #24064	; 0x5e00
   11544:	mov	r5, r1
   11548:	movt	r0, #1
   1154c:	vld1.64	{d16-d17}, [r0]
   11550:	add	r0, sp, #48	; 0x30
   11554:	vst1.64	{d16-d17}, [r0]
   11558:	ldr	r0, [r1]
   1155c:	bl	12a48 <__mempcpy_chk@plt+0x18bc>
   11560:	movw	r1, #23753	; 0x5cc9
   11564:	mov	r0, #6
   11568:	movt	r1, #1
   1156c:	bl	11114 <setlocale@plt>
   11570:	cmp	r0, #0
   11574:	movw	r1, #29032	; 0x7168
   11578:	movw	r4, #23196	; 0x5a9c
   1157c:	movwne	r0, #1
   11580:	movt	r1, #2
   11584:	movt	r4, #1
   11588:	strb	r0, [r1]
   1158c:	movw	r1, #23161	; 0x5a79
   11590:	mov	r0, r4
   11594:	movt	r1, #1
   11598:	bl	11150 <bindtextdomain@plt>
   1159c:	mov	r0, r4
   115a0:	bl	10fb8 <textdomain@plt>
   115a4:	movw	r0, #10552	; 0x2938
   115a8:	movt	r0, #1
   115ac:	bl	1557c <__mempcpy_chk@plt+0x43f0>
   115b0:	movw	r0, #29033	; 0x7169
   115b4:	mov	r7, #0
   115b8:	movw	r1, #29036	; 0x716c
   115bc:	str	r6, [sp, #28]
   115c0:	movt	r0, #2
   115c4:	movt	r1, #2
   115c8:	strb	r7, [r0]
   115cc:	movw	r0, #24080	; 0x5e10
   115d0:	movt	r0, #1
   115d4:	str	r0, [r1]
   115d8:	movw	r0, #29008	; 0x7150
   115dc:	movt	r0, #2
   115e0:	ldr	r0, [r0]
   115e4:	cmp	r0, r6
   115e8:	bge	116c8 <__mempcpy_chk@plt+0x53c>
   115ec:	movw	r4, #23185	; 0x5a91
   115f0:	movw	r6, #24084	; 0x5e14
   115f4:	movw	r9, #29024	; 0x7160
   115f8:	mov	r8, #0
   115fc:	mov	sl, #1
   11600:	mov	r7, #0
   11604:	movt	r4, #1
   11608:	movt	r6, #1
   1160c:	movt	r9, #2
   11610:	ldr	r1, [r5, r0, lsl #2]
   11614:	ldrb	r2, [r1]
   11618:	cmp	r2, #45	; 0x2d
   1161c:	bne	11638 <__mempcpy_chk@plt+0x4ac>
   11620:	ldrb	r1, [r1, #1]
   11624:	cmp	r1, #46	; 0x2e
   11628:	beq	116c8 <__mempcpy_chk@plt+0x53c>
   1162c:	sub	r1, r1, #48	; 0x30
   11630:	cmp	r1, #10
   11634:	bcc	116c8 <__mempcpy_chk@plt+0x53c>
   11638:	ldr	r0, [sp, #28]
   1163c:	mov	r1, r5
   11640:	mov	r2, r4
   11644:	mov	r3, r6
   11648:	str	r8, [sp]
   1164c:	bl	11060 <getopt_long@plt>
   11650:	cmp	r0, #101	; 0x65
   11654:	ble	116b4 <__mempcpy_chk@plt+0x528>
   11658:	cmp	r0, #102	; 0x66
   1165c:	beq	1167c <__mempcpy_chk@plt+0x4f0>
   11660:	cmp	r0, #115	; 0x73
   11664:	bne	11684 <__mempcpy_chk@plt+0x4f8>
   11668:	ldr	r0, [r9]
   1166c:	movw	r1, #29036	; 0x716c
   11670:	movt	r1, #2
   11674:	str	r0, [r1]
   11678:	b	11698 <__mempcpy_chk@plt+0x50c>
   1167c:	ldr	r7, [r9]
   11680:	b	11698 <__mempcpy_chk@plt+0x50c>
   11684:	cmp	r0, #119	; 0x77
   11688:	bne	12154 <__mempcpy_chk@plt+0xfc8>
   1168c:	movw	r0, #29033	; 0x7169
   11690:	movt	r0, #2
   11694:	strb	sl, [r0]
   11698:	movw	r0, #29008	; 0x7150
   1169c:	ldr	r1, [sp, #28]
   116a0:	movt	r0, #2
   116a4:	ldr	r0, [r0]
   116a8:	cmp	r0, r1
   116ac:	blt	11610 <__mempcpy_chk@plt+0x484>
   116b0:	b	116c8 <__mempcpy_chk@plt+0x53c>
   116b4:	cmn	r0, #1
   116b8:	bne	12018 <__mempcpy_chk@plt+0xe8c>
   116bc:	movw	r0, #29008	; 0x7150
   116c0:	movt	r0, #2
   116c4:	ldr	r0, [r0]
   116c8:	ldr	r9, [sp, #28]
   116cc:	subs	r1, r9, r0
   116d0:	beq	12078 <__mempcpy_chk@plt+0xeec>
   116d4:	movw	r4, #29008	; 0x7150
   116d8:	cmp	r1, #4
   116dc:	movt	r4, #2
   116e0:	bcs	12084 <__mempcpy_chk@plt+0xef8>
   116e4:	cmp	r7, #0
   116e8:	str	r1, [sp, #24]
   116ec:	beq	11868 <__mempcpy_chk@plt+0x6dc>
   116f0:	mov	sl, #0
   116f4:	mov	r0, #0
   116f8:	b	11718 <__mempcpy_chk@plt+0x58c>
   116fc:	cmp	r1, #0
   11700:	beq	11fd4 <__mempcpy_chk@plt+0xe48>
   11704:	cmp	r1, #37	; 0x25
   11708:	mov	r1, #1
   1170c:	add	sl, sl, #1
   11710:	movweq	r1, #2
   11714:	add	r0, r1, r0
   11718:	ldrb	r1, [r7, r0]
   1171c:	cmp	r1, #37	; 0x25
   11720:	bne	116fc <__mempcpy_chk@plt+0x570>
   11724:	add	r4, r0, #1
   11728:	ldrb	r2, [r7, r4]
   1172c:	cmp	r2, #37	; 0x25
   11730:	beq	11704 <__mempcpy_chk@plt+0x578>
   11734:	movw	r1, #23826	; 0x5d12
   11738:	add	r0, r7, r4
   1173c:	movt	r1, #1
   11740:	bl	11180 <strspn@plt>
   11744:	add	r4, r0, r4
   11748:	movw	r1, #23833	; 0x5d19
   1174c:	add	r0, r7, r4
   11750:	movt	r1, #1
   11754:	bl	11180 <strspn@plt>
   11758:	add	r6, r4, r0
   1175c:	str	r5, [sp, #12]
   11760:	ldrb	r0, [r7, r6]
   11764:	cmp	r0, #46	; 0x2e
   11768:	bne	11788 <__mempcpy_chk@plt+0x5fc>
   1176c:	movw	r1, #23833	; 0x5d19
   11770:	add	r4, r6, #1
   11774:	add	r0, r7, r4
   11778:	movt	r1, #1
   1177c:	bl	11180 <strspn@plt>
   11780:	add	r6, r0, r4
   11784:	ldrb	r0, [r7, r6]
   11788:	sub	r0, r0, #76	; 0x4c
   1178c:	clz	r0, r0
   11790:	lsr	r4, r0, #5
   11794:	add	r5, r6, r4
   11798:	ldrb	r1, [r7, r5]
   1179c:	cmp	r1, #0
   117a0:	beq	120b0 <__mempcpy_chk@plt+0xf24>
   117a4:	movw	r0, #23865	; 0x5d39
   117a8:	mov	r2, #9
   117ac:	movt	r0, #1
   117b0:	bl	110f0 <memchr@plt>
   117b4:	cmp	r0, #0
   117b8:	beq	120bc <__mempcpy_chk@plt+0xf30>
   117bc:	add	r0, r5, #1
   117c0:	mov	r8, #0
   117c4:	b	117dc <__mempcpy_chk@plt+0x650>
   117c8:	cmp	r1, #37	; 0x25
   117cc:	mov	r1, #1
   117d0:	add	r8, r8, #1
   117d4:	movweq	r1, #2
   117d8:	add	r0, r1, r0
   117dc:	ldrb	r1, [r7, r0]
   117e0:	cmp	r1, #37	; 0x25
   117e4:	bne	117fc <__mempcpy_chk@plt+0x670>
   117e8:	add	r2, r7, r0
   117ec:	ldrb	r2, [r2, #1]
   117f0:	cmp	r2, #37	; 0x25
   117f4:	beq	117c8 <__mempcpy_chk@plt+0x63c>
   117f8:	b	11fe0 <__mempcpy_chk@plt+0xe54>
   117fc:	cmp	r1, #0
   11800:	bne	117c8 <__mempcpy_chk@plt+0x63c>
   11804:	add	r0, r0, #2
   11808:	bl	14a40 <__mempcpy_chk@plt+0x38b4>
   1180c:	mov	r1, r7
   11810:	mov	r2, r6
   11814:	mov	r5, r0
   11818:	bl	10f64 <memcpy@plt>
   1181c:	mov	r0, #76	; 0x4c
   11820:	str	r5, [sp, #20]
   11824:	add	r1, r7, r6
   11828:	strb	r0, [r5, r6]!
   1182c:	add	r1, r1, r4
   11830:	add	r0, r5, #1
   11834:	bl	10fe8 <strcpy@plt>
   11838:	movw	r0, #29033	; 0x7169
   1183c:	movt	r0, #2
   11840:	ldrb	r0, [r0]
   11844:	cmp	r0, #1
   11848:	beq	120ec <__mempcpy_chk@plt+0xf60>
   1184c:	ldr	r5, [sp, #12]
   11850:	ldr	r1, [sp, #24]
   11854:	movw	r4, #29008	; 0x7150
   11858:	mov	r0, #1
   1185c:	movt	r4, #2
   11860:	str	r0, [sp, #16]
   11864:	b	11880 <__mempcpy_chk@plt+0x6f4>
   11868:	mov	r0, #0
   1186c:	mov	sl, #0
   11870:	mov	r8, #0
   11874:	str	r0, [sp, #16]
   11878:	mov	r0, #0
   1187c:	str	r0, [sp, #20]
   11880:	cmp	r1, #3
   11884:	bne	118f0 <__mempcpy_chk@plt+0x764>
   11888:	ldr	r0, [r4]
   1188c:	add	r0, r5, r0, lsl #2
   11890:	ldr	r6, [r0, #4]
   11894:	mov	r0, r6
   11898:	bl	1215c <__mempcpy_chk@plt+0xfd0>
   1189c:	mov	r7, #0
   118a0:	cmp	r0, #0
   118a4:	beq	118f4 <__mempcpy_chk@plt+0x768>
   118a8:	movw	r3, #10388	; 0x2894
   118ac:	add	r2, sp, #48	; 0x30
   118b0:	mov	r0, r6
   118b4:	mov	r1, #0
   118b8:	mov	r7, #0
   118bc:	movt	r3, #1
   118c0:	bl	14ed4 <__mempcpy_chk@plt+0x3d48>
   118c4:	cmp	r0, #0
   118c8:	beq	118f4 <__mempcpy_chk@plt+0x768>
   118cc:	vldr	d16, [sp, #48]	; 0x30
   118d0:	vcmpe.f64	d16, #0.0
   118d4:	vmrs	APSR_nzcv, fpscr
   118d8:	ble	118f4 <__mempcpy_chk@plt+0x768>
   118dc:	vldr	d17, [pc, #788]	; 11bf8 <__mempcpy_chk@plt+0xa6c>
   118e0:	vcmpe.f64	d16, d17
   118e4:	vmrs	APSR_nzcv, fpscr
   118e8:	movls	r7, #1
   118ec:	b	118f4 <__mempcpy_chk@plt+0x768>
   118f0:	mov	r7, #1
   118f4:	ldr	r4, [r4]
   118f8:	ldr	r6, [r5, r4, lsl #2]
   118fc:	mov	r0, r6
   11900:	bl	1215c <__mempcpy_chk@plt+0xfd0>
   11904:	cmp	r0, #0
   11908:	beq	11a00 <__mempcpy_chk@plt+0x874>
   1190c:	ldr	r0, [sp, #24]
   11910:	cmp	r0, #1
   11914:	bne	119a0 <__mempcpy_chk@plt+0x814>
   11918:	movw	r0, #29033	; 0x7169
   1191c:	ldr	r1, [sp, #16]
   11920:	ldr	r9, [sp, #28]
   11924:	movt	r0, #2
   11928:	ldrb	r0, [r0]
   1192c:	orr	r0, r1, r0
   11930:	tst	r0, #1
   11934:	bne	11a00 <__mempcpy_chk@plt+0x874>
   11938:	movw	r0, #29036	; 0x716c
   1193c:	movt	r0, #2
   11940:	ldr	r0, [r0]
   11944:	bl	11084 <strlen@plt>
   11948:	cmp	r0, #1
   1194c:	bne	11a00 <__mempcpy_chk@plt+0x874>
   11950:	ldr	r1, [sp, #24]
   11954:	vldr	d16, [sp, #48]	; 0x30
   11958:	movw	r0, #23323	; 0x5b1b
   1195c:	movt	r0, #1
   11960:	cmp	r1, #1
   11964:	moveq	r6, r0
   11968:	add	r0, r1, r4
   1196c:	add	r4, r5, r0, lsl #2
   11970:	vmov	r0, r1, d16
   11974:	bl	154d8 <__mempcpy_chk@plt+0x434c>
   11978:	mov	r3, r1
   1197c:	ldr	r1, [r4, #-4]
   11980:	mov	r2, r0
   11984:	mov	r0, r6
   11988:	bl	121a8 <__mempcpy_chk@plt+0x101c>
   1198c:	movw	r0, #29008	; 0x7150
   11990:	movt	r0, #2
   11994:	ldr	r4, [r0]
   11998:	ldr	r6, [r5, r4, lsl #2]
   1199c:	b	11a00 <__mempcpy_chk@plt+0x874>
   119a0:	add	r9, r5, r4, lsl #2
   119a4:	ldr	r0, [r9, #4]
   119a8:	bl	1215c <__mempcpy_chk@plt+0xfd0>
   119ac:	cmp	r0, #0
   119b0:	beq	119fc <__mempcpy_chk@plt+0x870>
   119b4:	ldr	r0, [sp, #24]
   119b8:	cmp	r0, #3
   119bc:	bcc	11918 <__mempcpy_chk@plt+0x78c>
   119c0:	cmp	r7, #0
   119c4:	beq	119fc <__mempcpy_chk@plt+0x870>
   119c8:	ldr	r0, [r9, #8]
   119cc:	bl	1215c <__mempcpy_chk@plt+0xfd0>
   119d0:	movw	r1, #29033	; 0x7169
   119d4:	ldr	r2, [sp, #16]
   119d8:	movt	r1, #2
   119dc:	ldrb	r1, [r1]
   119e0:	orr	r1, r2, r1
   119e4:	tst	r1, #1
   119e8:	bne	119fc <__mempcpy_chk@plt+0x870>
   119ec:	ldr	r9, [sp, #28]
   119f0:	cmp	r0, #0
   119f4:	bne	11938 <__mempcpy_chk@plt+0x7ac>
   119f8:	b	11a00 <__mempcpy_chk@plt+0x874>
   119fc:	ldr	r9, [sp, #28]
   11a00:	add	r0, r4, #1
   11a04:	movw	r4, #29008	; 0x7150
   11a08:	mov	r1, r6
   11a0c:	movt	r4, #2
   11a10:	str	r0, [r4]
   11a14:	add	r0, sp, #32
   11a18:	bl	12524 <__mempcpy_chk@plt+0x1398>
   11a1c:	ldr	r0, [r4]
   11a20:	ldr	r7, [sp, #32]
   11a24:	ldr	r6, [sp, #36]	; 0x24
   11a28:	ldr	r2, [sp, #40]	; 0x28
   11a2c:	ldr	r1, [sp, #44]	; 0x2c
   11a30:	cmp	r0, r9
   11a34:	bge	11ab8 <__mempcpy_chk@plt+0x92c>
   11a38:	str	r1, [sp, #28]
   11a3c:	add	r1, r0, #1
   11a40:	str	r2, [sp, #24]
   11a44:	str	r1, [r4]
   11a48:	ldr	r1, [r5, r0, lsl #2]
   11a4c:	add	r0, sp, #32
   11a50:	bl	12524 <__mempcpy_chk@plt+0x1398>
   11a54:	ldr	r0, [r4]
   11a58:	ldr	r2, [sp, #32]
   11a5c:	ldr	lr, [sp, #36]	; 0x24
   11a60:	ldr	ip, [sp, #40]	; 0x28
   11a64:	ldr	r1, [sp, #44]	; 0x2c
   11a68:	cmp	r0, r9
   11a6c:	bge	11adc <__mempcpy_chk@plt+0x950>
   11a70:	vmov	d16, r2, lr
   11a74:	str	ip, [sp, #56]	; 0x38
   11a78:	str	r2, [sp, #48]	; 0x30
   11a7c:	str	r1, [sp, #60]	; 0x3c
   11a80:	str	lr, [sp, #52]	; 0x34
   11a84:	vcmp.f64	d16, #0.0
   11a88:	vmrs	APSR_nzcv, fpscr
   11a8c:	beq	12114 <__mempcpy_chk@plt+0xf88>
   11a90:	add	r1, r0, #1
   11a94:	str	r1, [r4]
   11a98:	ldr	r1, [r5, r0, lsl #2]
   11a9c:	add	r0, sp, #32
   11aa0:	bl	12524 <__mempcpy_chk@plt+0x1398>
   11aa4:	ldr	r4, [sp, #32]
   11aa8:	ldr	lr, [sp, #36]	; 0x24
   11aac:	ldr	ip, [sp, #40]	; 0x28
   11ab0:	ldr	r1, [sp, #44]	; 0x2c
   11ab4:	b	11ae0 <__mempcpy_chk@plt+0x954>
   11ab8:	movw	r9, #0
   11abc:	mov	ip, r2
   11ac0:	mov	r5, #0
   11ac4:	mov	r2, #1
   11ac8:	mov	r3, #0
   11acc:	mov	r4, r7
   11ad0:	mov	lr, r6
   11ad4:	movt	r9, #16368	; 0x3ff0
   11ad8:	b	11af8 <__mempcpy_chk@plt+0x96c>
   11adc:	mov	r4, r2
   11ae0:	ldr	r3, [sp, #28]
   11ae4:	ldr	r2, [sp, #24]
   11ae8:	mov	r5, r7
   11aec:	mov	r9, r6
   11af0:	cmp	r3, #0
   11af4:	bne	11b10 <__mempcpy_chk@plt+0x984>
   11af8:	cmp	r1, #0
   11afc:	ldreq	r0, [sp, #60]	; 0x3c
   11b00:	cmpeq	r0, #0
   11b04:	beq	11c00 <__mempcpy_chk@plt+0xa74>
   11b08:	mov	r7, r5
   11b0c:	mov	r6, r9
   11b10:	ldr	r9, [sp, #20]
   11b14:	cmp	r9, #0
   11b18:	bne	11d24 <__mempcpy_chk@plt+0xb98>
   11b1c:	ldr	r0, [sp, #60]	; 0x3c
   11b20:	movw	r9, #24058	; 0x5dfa
   11b24:	movt	r9, #1
   11b28:	cmp	r3, r0
   11b2c:	movgt	r0, r3
   11b30:	cmn	r1, #-2147483647	; 0x80000001
   11b34:	cmnne	r0, #-2147483647	; 0x80000001
   11b38:	beq	11d24 <__mempcpy_chk@plt+0xb98>
   11b3c:	str	r4, [sp, #28]
   11b40:	mov	r4, r1
   11b44:	movw	r1, #29033	; 0x7169
   11b48:	movt	r1, #2
   11b4c:	ldrb	r1, [r1]
   11b50:	cmp	r1, #1
   11b54:	bne	11cf4 <__mempcpy_chk@plt+0xb68>
   11b58:	sub	r1, r2, r3
   11b5c:	clz	r3, r3
   11b60:	cmp	r0, #0
   11b64:	mov	r2, r0
   11b68:	clz	r5, r4
   11b6c:	movwne	r2, #1
   11b70:	lsr	r3, r3, #5
   11b74:	add	r1, r1, r0
   11b78:	cmp	r4, #0
   11b7c:	lsr	r5, r5, #5
   11b80:	and	r3, r3, r2
   11b84:	and	r2, r5, r2
   11b88:	add	r3, r1, r3
   11b8c:	mov	r1, ip
   11b90:	mov	ip, r4
   11b94:	sub	r1, r1, r4
   11b98:	clz	r4, r0
   11b9c:	movwne	ip, #1
   11ba0:	lsr	r4, r4, #5
   11ba4:	add	r1, r1, r0
   11ba8:	and	r4, ip, r4
   11bac:	sub	r1, r1, r4
   11bb0:	ldr	r4, [sp, #28]
   11bb4:	add	r1, r1, r2
   11bb8:	cmp	r3, r1
   11bbc:	movhi	r1, r3
   11bc0:	cmp	r1, #0
   11bc4:	blt	11d24 <__mempcpy_chk@plt+0xb98>
   11bc8:	movw	r9, #29040	; 0x7170
   11bcc:	movw	r3, #24039	; 0x5de7
   11bd0:	str	r1, [sp]
   11bd4:	str	r0, [sp, #4]
   11bd8:	mov	r1, #1
   11bdc:	mov	r2, #28
   11be0:	mov	r5, lr
   11be4:	movt	r9, #2
   11be8:	movt	r3, #1
   11bec:	mov	r0, r9
   11bf0:	bl	110a8 <__sprintf_chk@plt>
   11bf4:	b	11d20 <__mempcpy_chk@plt+0xb94>
   11bf8:	andeq	r0, r0, r0
   11bfc:	rsbmi	r0, r9, r0
   11c00:	vmov	d9, r5, r9
   11c04:	vcmpe.f64	d9, #0.0
   11c08:	vmrs	APSR_nzcv, fpscr
   11c0c:	blt	11b08 <__mempcpy_chk@plt+0x97c>
   11c10:	vmov.i32	d16, #0	; 0x00000000
   11c14:	vmul.f64	d16, d9, d16
   11c18:	vcmp.f64	d16, #0.0
   11c1c:	vmrs	APSR_nzcv, fpscr
   11c20:	bne	11b08 <__mempcpy_chk@plt+0x97c>
   11c24:	vmov	d8, r4, lr
   11c28:	vcmpe.f64	d8, #0.0
   11c2c:	vmrs	APSR_nzcv, fpscr
   11c30:	blt	11b08 <__mempcpy_chk@plt+0x97c>
   11c34:	vldr	d16, [sp, #48]	; 0x30
   11c38:	vcmpe.f64	d16, #0.0
   11c3c:	vmrs	APSR_nzcv, fpscr
   11c40:	ble	11b08 <__mempcpy_chk@plt+0x97c>
   11c44:	vldr	d17, [pc, #-84]	; 11bf8 <__mempcpy_chk@plt+0xa6c>
   11c48:	vcmpe.f64	d16, d17
   11c4c:	vmrs	APSR_nzcv, fpscr
   11c50:	bhi	11b08 <__mempcpy_chk@plt+0x97c>
   11c54:	movw	r0, #29033	; 0x7169
   11c58:	ldr	r7, [sp, #16]
   11c5c:	movt	r0, #2
   11c60:	ldrb	r0, [r0]
   11c64:	orr	r0, r7, r0
   11c68:	tst	r0, #1
   11c6c:	bne	11b08 <__mempcpy_chk@plt+0x97c>
   11c70:	movw	r0, #29036	; 0x716c
   11c74:	str	ip, [sp, #8]
   11c78:	str	r1, [sp, #12]
   11c7c:	str	r2, [sp, #24]
   11c80:	str	r3, [sp, #28]
   11c84:	str	lr, [sp, #16]
   11c88:	movt	r0, #2
   11c8c:	ldr	r0, [r0]
   11c90:	bl	11084 <strlen@plt>
   11c94:	cmp	r0, #1
   11c98:	bne	11fbc <__mempcpy_chk@plt+0xe30>
   11c9c:	movw	r2, #23358	; 0x5b3e
   11ca0:	add	r0, sp, #32
   11ca4:	mov	r1, #1
   11ca8:	vstr	d9, [sp]
   11cac:	movt	r2, #1
   11cb0:	bl	11024 <__asprintf_chk@plt>
   11cb4:	cmn	r0, #1
   11cb8:	ble	12014 <__mempcpy_chk@plt+0xe88>
   11cbc:	vmov.i32	d16, #0	; 0x00000000
   11cc0:	vmul.f64	d16, d8, d16
   11cc4:	vcmp.f64	d16, #0.0
   11cc8:	vmrs	APSR_nzcv, fpscr
   11ccc:	bne	11f58 <__mempcpy_chk@plt+0xdcc>
   11cd0:	movw	r2, #23358	; 0x5b3e
   11cd4:	add	r0, sp, #68	; 0x44
   11cd8:	mov	r1, #1
   11cdc:	vstr	d8, [sp]
   11ce0:	movt	r2, #1
   11ce4:	bl	11024 <__asprintf_chk@plt>
   11ce8:	cmn	r0, #1
   11cec:	bgt	11f68 <__mempcpy_chk@plt+0xddc>
   11cf0:	b	12014 <__mempcpy_chk@plt+0xe88>
   11cf4:	movw	r9, #29040	; 0x7170
   11cf8:	movw	r3, #24050	; 0x5df2
   11cfc:	str	r0, [sp]
   11d00:	mov	r1, #1
   11d04:	mov	r2, #28
   11d08:	mov	r5, lr
   11d0c:	movt	r9, #2
   11d10:	movt	r3, #1
   11d14:	mov	r0, r9
   11d18:	bl	110a8 <__sprintf_chk@plt>
   11d1c:	ldr	r4, [sp, #28]
   11d20:	mov	lr, r5
   11d24:	vldr	d8, [sp, #48]	; 0x30
   11d28:	vmov	d9, r4, lr
   11d2c:	vmov	d10, r7, r6
   11d30:	mov	r1, #0
   11d34:	mov	r0, #0
   11d38:	vcmpe.f64	d10, d9
   11d3c:	vmrs	APSR_nzcv, fpscr
   11d40:	vcmpe.f64	d9, d10
   11d44:	movwmi	r1, #1
   11d48:	vmrs	APSR_nzcv, fpscr
   11d4c:	vcmpe.f64	d8, #0.0
   11d50:	movwmi	r0, #1
   11d54:	vmrs	APSR_nzcv, fpscr
   11d58:	movmi	r0, r1
   11d5c:	cmp	r0, #0
   11d60:	bne	11f44 <__mempcpy_chk@plt+0xdb8>
   11d64:	mov	r0, #1
   11d68:	mov	r1, r9
   11d6c:	mov	r2, r7
   11d70:	mov	r3, r6
   11d74:	bl	110cc <__printf_chk@plt>
   11d78:	cmp	r0, #0
   11d7c:	blt	11f20 <__mempcpy_chk@plt+0xd94>
   11d80:	movw	r6, #29020	; 0x715c
   11d84:	vmov.f64	d11, #112	; 0x3f800000  1.0
   11d88:	mov	r4, #0
   11d8c:	mov	r7, #0
   11d90:	vorr	d14, d10, d10
   11d94:	movt	r6, #2
   11d98:	vmov.f64	d12, d11
   11d9c:	tst	r7, #1
   11da0:	bne	11f2c <__mempcpy_chk@plt+0xda0>
   11da4:	vmov.f64	d13, d10
   11da8:	mov	r0, #0
   11dac:	mov	r7, #0
   11db0:	vmla.f64	d13, d8, d12
   11db4:	vcmpe.f64	d13, d9
   11db8:	vmrs	APSR_nzcv, fpscr
   11dbc:	vcmpe.f64	d8, #0.0
   11dc0:	movwmi	r0, #1
   11dc4:	movwgt	r7, #1
   11dc8:	vmrs	APSR_nzcv, fpscr
   11dcc:	movmi	r7, r0
   11dd0:	cmp	r7, #1
   11dd4:	bne	11ee4 <__mempcpy_chk@plt+0xd58>
   11dd8:	movw	r0, #29032	; 0x7168
   11ddc:	movt	r0, #2
   11de0:	ldrb	r0, [r0]
   11de4:	cmp	r0, #0
   11de8:	beq	11dfc <__mempcpy_chk@plt+0xc70>
   11dec:	movw	r1, #24062	; 0x5dfe
   11df0:	mov	r0, #1
   11df4:	movt	r1, #1
   11df8:	bl	11114 <setlocale@plt>
   11dfc:	add	r0, sp, #68	; 0x44
   11e00:	mov	r1, #1
   11e04:	mov	r2, r9
   11e08:	vstr	d13, [sp]
   11e0c:	mov	r5, r9
   11e10:	bl	11024 <__asprintf_chk@plt>
   11e14:	mov	r9, r0
   11e18:	movw	r0, #29032	; 0x7168
   11e1c:	movt	r0, #2
   11e20:	ldrb	r0, [r0]
   11e24:	cmp	r0, #0
   11e28:	beq	11e3c <__mempcpy_chk@plt+0xcb0>
   11e2c:	movw	r1, #23753	; 0x5cc9
   11e30:	mov	r0, #1
   11e34:	movt	r1, #1
   11e38:	bl	11114 <setlocale@plt>
   11e3c:	cmn	r9, #1
   11e40:	ble	12014 <__mempcpy_chk@plt+0xe88>
   11e44:	ldr	r1, [sp, #68]	; 0x44
   11e48:	sub	r0, r9, r8
   11e4c:	movw	r3, #10388	; 0x2894
   11e50:	add	r2, sp, #32
   11e54:	movt	r3, #1
   11e58:	strb	r4, [r1, r0]
   11e5c:	mov	r1, #0
   11e60:	ldr	r0, [sp, #68]	; 0x44
   11e64:	add	r0, r0, sl
   11e68:	bl	14ed4 <__mempcpy_chk@plt+0x3d48>
   11e6c:	cmp	r0, #0
   11e70:	beq	11f24 <__mempcpy_chk@plt+0xd98>
   11e74:	vldr	d16, [sp, #32]
   11e78:	vcmp.f64	d16, d9
   11e7c:	vmrs	APSR_nzcv, fpscr
   11e80:	bne	11f24 <__mempcpy_chk@plt+0xd98>
   11e84:	add	r0, sp, #64	; 0x40
   11e88:	mov	r1, #1
   11e8c:	mov	r2, r5
   11e90:	str	r4, [sp, #64]	; 0x40
   11e94:	vstr	d14, [sp]
   11e98:	mov	r9, r5
   11e9c:	bl	11024 <__asprintf_chk@plt>
   11ea0:	cmn	r0, #1
   11ea4:	ble	12014 <__mempcpy_chk@plt+0xe88>
   11ea8:	ldr	r1, [sp, #64]	; 0x40
   11eac:	sub	r0, r0, r8
   11eb0:	strb	r4, [r1, r0]
   11eb4:	ldr	r5, [sp, #64]	; 0x40
   11eb8:	ldr	r1, [sp, #68]	; 0x44
   11ebc:	mov	r0, r5
   11ec0:	bl	10f10 <strcmp@plt>
   11ec4:	mov	r4, r0
   11ec8:	mov	r0, r5
   11ecc:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   11ed0:	ldr	r0, [sp, #68]	; 0x44
   11ed4:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   11ed8:	cmp	r4, #0
   11edc:	beq	11f2c <__mempcpy_chk@plt+0xda0>
   11ee0:	mov	r4, #0
   11ee4:	movw	r0, #29036	; 0x716c
   11ee8:	ldr	r1, [r6]
   11eec:	movt	r0, #2
   11ef0:	ldr	r0, [r0]
   11ef4:	bl	10ef8 <fputs_unlocked@plt>
   11ef8:	cmn	r0, #1
   11efc:	beq	11f20 <__mempcpy_chk@plt+0xd94>
   11f00:	vmov	r2, r3, d13
   11f04:	mov	r0, #1
   11f08:	mov	r1, r9
   11f0c:	bl	110cc <__printf_chk@plt>
   11f10:	vadd.f64	d12, d12, d11
   11f14:	cmp	r0, #0
   11f18:	vorr	d14, d13, d13
   11f1c:	bge	11d9c <__mempcpy_chk@plt+0xc10>
   11f20:	bl	12850 <__mempcpy_chk@plt+0x16c4>
   11f24:	ldr	r0, [sp, #68]	; 0x44
   11f28:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   11f2c:	ldr	r1, [r6]
   11f30:	movw	r0, #24080	; 0x5e10
   11f34:	movt	r0, #1
   11f38:	bl	10ef8 <fputs_unlocked@plt>
   11f3c:	cmn	r0, #1
   11f40:	beq	11f20 <__mempcpy_chk@plt+0xd94>
   11f44:	mov	r0, #0
   11f48:	sub	sp, fp, #88	; 0x58
   11f4c:	vpop	{d8-d14}
   11f50:	add	sp, sp, #4
   11f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f58:	movw	r0, #23364	; 0x5b44
   11f5c:	movt	r0, #1
   11f60:	bl	14e50 <__mempcpy_chk@plt+0x3cc4>
   11f64:	str	r0, [sp, #68]	; 0x44
   11f68:	ldr	r7, [sp, #32]
   11f6c:	ldrb	r0, [r7]
   11f70:	cmp	r0, #45	; 0x2d
   11f74:	beq	11fac <__mempcpy_chk@plt+0xe20>
   11f78:	ldr	r6, [sp, #68]	; 0x44
   11f7c:	ldrb	r0, [r6]
   11f80:	cmp	r0, #45	; 0x2d
   11f84:	beq	11fac <__mempcpy_chk@plt+0xe20>
   11f88:	vldr	d16, [sp, #48]	; 0x30
   11f8c:	vmov	r0, r1, d16
   11f90:	bl	154d8 <__mempcpy_chk@plt+0x434c>
   11f94:	mov	r2, r0
   11f98:	mov	r3, r1
   11f9c:	mov	r0, r7
   11fa0:	mov	r1, r6
   11fa4:	bl	121a8 <__mempcpy_chk@plt+0x101c>
   11fa8:	ldr	r7, [sp, #32]
   11fac:	mov	r0, r7
   11fb0:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   11fb4:	ldr	r0, [sp, #68]	; 0x44
   11fb8:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   11fbc:	ldr	lr, [sp, #16]
   11fc0:	ldr	r3, [sp, #28]
   11fc4:	ldr	r2, [sp, #24]
   11fc8:	ldr	r1, [sp, #12]
   11fcc:	ldr	ip, [sp, #8]
   11fd0:	b	11b08 <__mempcpy_chk@plt+0x97c>
   11fd4:	movw	r1, #23796	; 0x5cf4
   11fd8:	movt	r1, #1
   11fdc:	b	11fe8 <__mempcpy_chk@plt+0xe5c>
   11fe0:	movw	r1, #23911	; 0x5d67
   11fe4:	movt	r1, #1
   11fe8:	mov	r0, #0
   11fec:	mov	r2, #5
   11ff0:	bl	10fa0 <dcgettext@plt>
   11ff4:	mov	r4, r0
   11ff8:	mov	r0, r7
   11ffc:	bl	1444c <__mempcpy_chk@plt+0x32c0>
   12000:	mov	r3, r0
   12004:	mov	r0, #1
   12008:	mov	r1, #0
   1200c:	mov	r2, r4
   12010:	bl	11018 <error@plt>
   12014:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   12018:	cmn	r0, #3
   1201c:	bne	12068 <__mempcpy_chk@plt+0xedc>
   12020:	movw	r0, #28928	; 0x7100
   12024:	movw	r2, #23206	; 0x5aa6
   12028:	mov	r1, #0
   1202c:	movt	r0, #2
   12030:	movt	r2, #1
   12034:	str	r1, [sp, #4]
   12038:	movw	r1, #23157	; 0x5a75
   1203c:	ldr	r3, [r0]
   12040:	movw	r0, #29020	; 0x715c
   12044:	str	r2, [sp]
   12048:	movw	r2, #23192	; 0x5a98
   1204c:	movt	r1, #1
   12050:	movt	r0, #2
   12054:	movt	r2, #1
   12058:	ldr	r0, [r0]
   1205c:	bl	14938 <__mempcpy_chk@plt+0x37ac>
   12060:	mov	r0, #0
   12064:	bl	11078 <exit@plt>
   12068:	cmn	r0, #2
   1206c:	bne	12154 <__mempcpy_chk@plt+0xfc8>
   12070:	mov	r0, #0
   12074:	bl	11288 <__mempcpy_chk@plt+0xfc>
   12078:	movw	r1, #23221	; 0x5ab5
   1207c:	movt	r1, #1
   12080:	b	120f4 <__mempcpy_chk@plt+0xf68>
   12084:	movw	r1, #23237	; 0x5ac5
   12088:	mov	r0, #0
   1208c:	mov	r2, #5
   12090:	movt	r1, #1
   12094:	bl	10fa0 <dcgettext@plt>
   12098:	mov	r1, r4
   1209c:	mov	r4, r0
   120a0:	ldr	r0, [r1]
   120a4:	add	r0, r5, r0, lsl #2
   120a8:	ldr	r0, [r0, #12]
   120ac:	b	1213c <__mempcpy_chk@plt+0xfb0>
   120b0:	movw	r1, #23844	; 0x5d24
   120b4:	movt	r1, #1
   120b8:	b	11fe8 <__mempcpy_chk@plt+0xe5c>
   120bc:	movw	r1, #23874	; 0x5d42
   120c0:	mov	r0, #0
   120c4:	mov	r2, #5
   120c8:	movt	r1, #1
   120cc:	bl	10fa0 <dcgettext@plt>
   120d0:	mov	r4, r0
   120d4:	mov	r0, r7
   120d8:	bl	1444c <__mempcpy_chk@plt+0x32c0>
   120dc:	mov	r3, r0
   120e0:	ldrb	r0, [r7, r5]
   120e4:	str	r0, [sp]
   120e8:	b	12004 <__mempcpy_chk@plt+0xe78>
   120ec:	movw	r1, #23254	; 0x5ad6
   120f0:	movt	r1, #1
   120f4:	mov	r0, #0
   120f8:	mov	r2, #5
   120fc:	bl	10fa0 <dcgettext@plt>
   12100:	mov	r2, r0
   12104:	mov	r0, #0
   12108:	mov	r1, #0
   1210c:	bl	11018 <error@plt>
   12110:	b	12154 <__mempcpy_chk@plt+0xfc8>
   12114:	movw	r1, #23325	; 0x5b1d
   12118:	mov	r0, #0
   1211c:	mov	r2, #5
   12120:	movt	r1, #1
   12124:	bl	10fa0 <dcgettext@plt>
   12128:	mov	r1, r4
   1212c:	mov	r4, r0
   12130:	ldr	r0, [r1]
   12134:	add	r0, r5, r0, lsl #2
   12138:	ldr	r0, [r0, #-4]
   1213c:	bl	1444c <__mempcpy_chk@plt+0x32c0>
   12140:	mov	r3, r0
   12144:	mov	r0, #0
   12148:	mov	r1, #0
   1214c:	mov	r2, r4
   12150:	bl	11018 <error@plt>
   12154:	mov	r0, #1
   12158:	bl	11288 <__mempcpy_chk@plt+0xfc>
   1215c:	push	{r4, r5, fp, lr}
   12160:	add	fp, sp, #8
   12164:	mov	r4, r0
   12168:	ldrb	r0, [r0]
   1216c:	sub	r1, r0, #48	; 0x30
   12170:	mov	r0, #0
   12174:	cmp	r1, #9
   12178:	pophi	{r4, r5, fp, pc}
   1217c:	mov	r0, r4
   12180:	bl	11084 <strlen@plt>
   12184:	movw	r1, #23833	; 0x5d19
   12188:	mov	r5, r0
   1218c:	mov	r0, r4
   12190:	movt	r1, #1
   12194:	bl	11180 <strspn@plt>
   12198:	sub	r0, r5, r0
   1219c:	clz	r0, r0
   121a0:	lsr	r0, r0, #5
   121a4:	pop	{r4, r5, fp, pc}
   121a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121ac:	add	fp, sp, #28
   121b0:	sub	sp, sp, #44	; 0x2c
   121b4:	mov	sl, r1
   121b8:	movw	r1, #23364	; 0x5b44
   121bc:	mov	r6, r0
   121c0:	str	r3, [sp, #28]
   121c4:	str	r2, [sp, #24]
   121c8:	movt	r1, #1
   121cc:	mov	r0, sl
   121d0:	bl	10f10 <strcmp@plt>
   121d4:	str	r0, [sp, #20]
   121d8:	mov	r0, #0
   121dc:	b	121e8 <__mempcpy_chk@plt+0x105c>
   121e0:	sub	r0, r0, #1
   121e4:	add	r6, r6, #1
   121e8:	ldrb	r1, [r6]
   121ec:	cmp	r1, #48	; 0x30
   121f0:	beq	121e0 <__mempcpy_chk@plt+0x1054>
   121f4:	cmp	r1, #0
   121f8:	bne	12204 <__mempcpy_chk@plt+0x1078>
   121fc:	cmp	r0, #0
   12200:	subne	r6, r6, #1
   12204:	mov	r0, #0
   12208:	b	12214 <__mempcpy_chk@plt+0x1088>
   1220c:	sub	r0, r0, #1
   12210:	add	sl, sl, #1
   12214:	ldrb	r1, [sl]
   12218:	cmp	r1, #48	; 0x30
   1221c:	beq	1220c <__mempcpy_chk@plt+0x1080>
   12220:	cmp	r1, #0
   12224:	bne	12230 <__mempcpy_chk@plt+0x10a4>
   12228:	cmp	r0, #0
   1222c:	subne	sl, sl, #1
   12230:	mov	r0, r6
   12234:	bl	11084 <strlen@plt>
   12238:	mov	r7, r0
   1223c:	mov	r0, #0
   12240:	str	r0, [sp]
   12244:	ldr	r0, [sp, #20]
   12248:	cmp	r0, #0
   1224c:	mov	r0, #0
   12250:	beq	1225c <__mempcpy_chk@plt+0x10d0>
   12254:	mov	r0, sl
   12258:	bl	11084 <strlen@plt>
   1225c:	add	r4, r7, #1
   12260:	mov	r5, r0
   12264:	str	r0, [sp, #36]	; 0x24
   12268:	cmp	r4, r0
   1226c:	movhi	r5, r4
   12270:	cmp	r5, #31
   12274:	movls	r5, #31
   12278:	add	r8, r5, #1
   1227c:	mov	r0, r8
   12280:	bl	14a40 <__mempcpy_chk@plt+0x38b4>
   12284:	str	r0, [sp, #16]
   12288:	add	r0, r0, r5
   1228c:	mov	r1, r6
   12290:	mov	r2, r4
   12294:	mov	r4, r8
   12298:	ldr	r6, [sp, #36]	; 0x24
   1229c:	sub	r9, r0, r7
   122a0:	mov	r0, r9
   122a4:	bl	10f64 <memcpy@plt>
   122a8:	ldr	r0, [sp, #20]
   122ac:	cmp	r0, #0
   122b0:	beq	12300 <__mempcpy_chk@plt+0x1174>
   122b4:	mov	r0, r4
   122b8:	bl	14a40 <__mempcpy_chk@plt+0x38b4>
   122bc:	mov	r8, r0
   122c0:	add	r0, r0, r5
   122c4:	add	r2, r6, #1
   122c8:	mov	r1, sl
   122cc:	sub	r0, r0, r6
   122d0:	str	r0, [sp]
   122d4:	bl	10f64 <memcpy@plt>
   122d8:	cmp	r7, r6
   122dc:	bcc	12300 <__mempcpy_chk@plt+0x1174>
   122e0:	cmp	r6, r7
   122e4:	bcc	1250c <__mempcpy_chk@plt+0x1380>
   122e8:	ldr	r1, [sp]
   122ec:	mov	r0, r9
   122f0:	mov	r2, r7
   122f4:	bl	10f94 <memcmp@plt>
   122f8:	cmp	r0, #0
   122fc:	bgt	1250c <__mempcpy_chk@plt+0x1380>
   12300:	lsl	r0, r4, #1
   12304:	mov	r1, r4
   12308:	mov	r4, #8192	; 0x2000
   1230c:	str	r5, [fp, #-32]	; 0xffffffe0
   12310:	cmp	r0, #8192	; 0x2000
   12314:	lslhi	r4, r1, #1
   12318:	mov	r0, r4
   1231c:	bl	14a40 <__mempcpy_chk@plt+0x38b4>
   12320:	add	r1, r0, r4
   12324:	str	r4, [sp, #4]
   12328:	mov	r2, r7
   1232c:	mvn	r3, #0
   12330:	str	r1, [sp, #32]
   12334:	mov	r1, r9
   12338:	str	r0, [sp, #12]
   1233c:	bl	1118c <__mempcpy_chk@plt>
   12340:	mov	sl, r0
   12344:	ldr	r0, [sp, #28]
   12348:	ldr	r1, [sp, #24]
   1234c:	mov	r5, #48	; 0x30
   12350:	mov	r8, #49	; 0x31
   12354:	orr	r0, r1, r0
   12358:	str	r0, [sp, #8]
   1235c:	ldr	r0, [sp, #8]
   12360:	ldr	r1, [sp, #28]
   12364:	cmp	r0, #0
   12368:	ldr	r0, [sp, #24]
   1236c:	beq	123b4 <__mempcpy_chk@plt+0x1228>
   12370:	sub	r2, r9, #1
   12374:	add	r3, r2, r7
   12378:	ldrb	r4, [r3]
   1237c:	add	r6, r4, #1
   12380:	cmp	r4, #57	; 0x39
   12384:	strb	r6, [r3]
   12388:	bcc	123a4 <__mempcpy_chk@plt+0x1218>
   1238c:	strb	r5, [r3], #-1
   12390:	cmp	r3, r9
   12394:	bcs	12378 <__mempcpy_chk@plt+0x11ec>
   12398:	add	r7, r7, #1
   1239c:	mov	r9, r2
   123a0:	strb	r8, [r2]
   123a4:	subs	r0, r0, #1
   123a8:	sbc	r1, r1, #0
   123ac:	orrs	r2, r0, r1
   123b0:	bne	12370 <__mempcpy_chk@plt+0x11e4>
   123b4:	ldr	r0, [sp, #20]
   123b8:	cmp	r0, #0
   123bc:	beq	123f0 <__mempcpy_chk@plt+0x1264>
   123c0:	ldr	r0, [sp, #36]	; 0x24
   123c4:	cmp	r7, r0
   123c8:	bcc	123f0 <__mempcpy_chk@plt+0x1264>
   123cc:	ldr	r0, [sp, #36]	; 0x24
   123d0:	cmp	r0, r7
   123d4:	bcc	124d4 <__mempcpy_chk@plt+0x1348>
   123d8:	ldr	r1, [sp]
   123dc:	mov	r0, r9
   123e0:	mov	r2, r7
   123e4:	bl	10f94 <memcmp@plt>
   123e8:	cmp	r0, #0
   123ec:	bgt	124d4 <__mempcpy_chk@plt+0x1348>
   123f0:	movw	r0, #29036	; 0x716c
   123f4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   123f8:	movt	r0, #2
   123fc:	ldr	r0, [r0]
   12400:	cmp	r7, r6
   12404:	ldrb	r0, [r0]
   12408:	strb	r0, [sl], #1
   1240c:	bne	12478 <__mempcpy_chk@plt+0x12ec>
   12410:	mov	r0, #1
   12414:	orr	r4, r0, r6, lsl #1
   12418:	ldr	r0, [sp, #16]
   1241c:	mov	r1, r4
   12420:	bl	14a88 <__mempcpy_chk@plt+0x38fc>
   12424:	add	r9, r0, r6
   12428:	mov	r1, r0
   1242c:	add	r2, r6, #1
   12430:	mov	r0, r9
   12434:	str	r1, [sp, #16]
   12438:	bl	10f40 <memmove@plt>
   1243c:	lsl	r6, r6, #1
   12440:	str	r6, [fp, #-32]	; 0xffffffe0
   12444:	ldr	r0, [sp, #4]
   12448:	cmp	r0, r4, lsl #1
   1244c:	bcs	12478 <__mempcpy_chk@plt+0x12ec>
   12450:	ldr	r0, [sp, #12]
   12454:	lsl	r6, r4, #1
   12458:	mov	r1, r6
   1245c:	sub	r4, sl, r0
   12460:	bl	14a88 <__mempcpy_chk@plt+0x38fc>
   12464:	add	sl, r0, r4
   12468:	str	r6, [sp, #4]
   1246c:	str	r0, [sp, #12]
   12470:	add	r0, r0, r6
   12474:	str	r0, [sp, #32]
   12478:	mov	r0, sl
   1247c:	mov	r1, r9
   12480:	mov	r2, r7
   12484:	mvn	r3, #0
   12488:	bl	1118c <__mempcpy_chk@plt>
   1248c:	ldr	r1, [sp, #32]
   12490:	mov	sl, r0
   12494:	mvn	r0, r7
   12498:	add	r0, r1, r0
   1249c:	cmp	r0, sl
   124a0:	bcs	1235c <__mempcpy_chk@plt+0x11d0>
   124a4:	movw	r0, #29020	; 0x715c
   124a8:	ldr	r4, [sp, #12]
   124ac:	mov	r2, #1
   124b0:	movt	r0, #2
   124b4:	ldr	r3, [r0]
   124b8:	sub	r1, sl, r4
   124bc:	mov	r0, r4
   124c0:	bl	10f88 <fwrite_unlocked@plt>
   124c4:	cmp	r0, #1
   124c8:	mov	sl, r4
   124cc:	beq	1235c <__mempcpy_chk@plt+0x11d0>
   124d0:	b	12508 <__mempcpy_chk@plt+0x137c>
   124d4:	movw	r2, #29020	; 0x715c
   124d8:	mov	r0, #10
   124dc:	strb	r0, [sl], #1
   124e0:	ldr	r0, [sp, #12]
   124e4:	movt	r2, #2
   124e8:	ldr	r3, [r2]
   124ec:	mov	r2, #1
   124f0:	sub	r1, sl, r0
   124f4:	bl	10f88 <fwrite_unlocked@plt>
   124f8:	cmp	r0, #1
   124fc:	bne	12508 <__mempcpy_chk@plt+0x137c>
   12500:	mov	r0, #0
   12504:	bl	11078 <exit@plt>
   12508:	bl	12850 <__mempcpy_chk@plt+0x16c4>
   1250c:	ldr	r0, [sp, #16]
   12510:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   12514:	mov	r0, r8
   12518:	sub	sp, fp, #28
   1251c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12520:	b	12a20 <__mempcpy_chk@plt+0x1894>
   12524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12528:	add	fp, sp, #28
   1252c:	sub	sp, sp, #4
   12530:	vpush	{d8}
   12534:	sub	sp, sp, #16
   12538:	mov	r4, r0
   1253c:	movw	r3, #10388	; 0x2894
   12540:	mov	r5, r1
   12544:	mov	r0, r1
   12548:	mov	r1, #0
   1254c:	movt	r3, #1
   12550:	mov	r2, r4
   12554:	bl	14ed4 <__mempcpy_chk@plt+0x3d48>
   12558:	cmp	r0, #0
   1255c:	beq	127c4 <__mempcpy_chk@plt+0x1638>
   12560:	vldr	d8, [r4]
   12564:	vcmpe.f64	d8, d8
   12568:	vmrs	APSR_nzcv, fpscr
   1256c:	bvs	127f8 <__mempcpy_chk@plt+0x166c>
   12570:	sub	r5, r5, #1
   12574:	bl	1106c <__ctype_b_loc@plt>
   12578:	ldr	r0, [r0]
   1257c:	ldrb	r2, [r5, #1]!
   12580:	add	r1, r0, r2, lsl #1
   12584:	cmp	r2, #43	; 0x2b
   12588:	ldrh	r1, [r1]
   1258c:	and	r1, r1, #8192	; 0x2000
   12590:	beq	1257c <__mempcpy_chk@plt+0x13f0>
   12594:	cmp	r1, #0
   12598:	bne	1257c <__mempcpy_chk@plt+0x13f0>
   1259c:	mvn	r1, #-2147483648	; 0x80000000
   125a0:	mov	r0, #0
   125a4:	strd	r0, [r4, #8]
   125a8:	mov	r0, r5
   125ac:	mov	r1, #46	; 0x2e
   125b0:	bl	11090 <strchr@plt>
   125b4:	mov	r9, r0
   125b8:	cmp	r0, #0
   125bc:	bne	125d8 <__mempcpy_chk@plt+0x144c>
   125c0:	mov	r0, r5
   125c4:	mov	r1, #112	; 0x70
   125c8:	bl	11090 <strchr@plt>
   125cc:	cmp	r0, #0
   125d0:	moveq	r0, #0
   125d4:	streq	r0, [r4, #12]
   125d8:	movw	r1, #24033	; 0x5de1
   125dc:	mov	r0, r5
   125e0:	movt	r1, #1
   125e4:	bl	10f28 <strcspn@plt>
   125e8:	vmov.i32	d16, #0	; 0x00000000
   125ec:	vmul.f64	d16, d8, d16
   125f0:	vcmp.f64	d16, #0.0
   125f4:	vmrs	APSR_nzcv, fpscr
   125f8:	ldrbeq	r0, [r5, r0]
   125fc:	cmpeq	r0, #0
   12600:	bne	127b4 <__mempcpy_chk@plt+0x1628>
   12604:	mov	r0, r5
   12608:	bl	11084 <strlen@plt>
   1260c:	cmp	r9, #0
   12610:	str	r0, [r4, #8]
   12614:	beq	12660 <__mempcpy_chk@plt+0x14d4>
   12618:	movw	r1, #24036	; 0x5de4
   1261c:	mov	r6, r0
   12620:	add	r0, r9, #1
   12624:	movt	r1, #1
   12628:	bl	10f28 <strcspn@plt>
   1262c:	mov	r8, r0
   12630:	cmp	r0, #0
   12634:	blt	12640 <__mempcpy_chk@plt+0x14b4>
   12638:	str	r8, [r4, #12]
   1263c:	beq	12670 <__mempcpy_chk@plt+0x14e4>
   12640:	cmp	r9, r5
   12644:	beq	12668 <__mempcpy_chk@plt+0x14dc>
   12648:	ldrb	r0, [r9, #-1]
   1264c:	sub	r1, r0, #48	; 0x30
   12650:	mov	r0, #0
   12654:	cmp	r1, #9
   12658:	movwhi	r0, #1
   1265c:	b	12674 <__mempcpy_chk@plt+0x14e8>
   12660:	mov	r8, #0
   12664:	b	1267c <__mempcpy_chk@plt+0x14f0>
   12668:	mov	r0, #1
   1266c:	b	12674 <__mempcpy_chk@plt+0x14e8>
   12670:	mvn	r0, #0
   12674:	add	r0, r0, r6
   12678:	str	r0, [r4, #8]
   1267c:	mov	r0, r5
   12680:	mov	r1, #101	; 0x65
   12684:	bl	11090 <strchr@plt>
   12688:	mov	r6, r0
   1268c:	cmp	r0, #0
   12690:	bne	126ac <__mempcpy_chk@plt+0x1520>
   12694:	mov	r0, r5
   12698:	mov	r1, #69	; 0x45
   1269c:	bl	11090 <strchr@plt>
   126a0:	mov	r6, r0
   126a4:	cmp	r0, #0
   126a8:	beq	127b4 <__mempcpy_chk@plt+0x1628>
   126ac:	add	r7, r6, #1
   126b0:	mov	r1, #0
   126b4:	mov	r2, #10
   126b8:	mov	r0, r7
   126bc:	bl	10f1c <strtol@plt>
   126c0:	mov	sl, #-2147483647	; 0x80000001
   126c4:	cmp	r0, #-2147483646	; 0x80000002
   126c8:	str	r8, [sp, #8]
   126cc:	blt	12708 <__mempcpy_chk@plt+0x157c>
   126d0:	mov	r0, r7
   126d4:	mov	r1, #0
   126d8:	mov	r2, #10
   126dc:	bl	10f1c <strtol@plt>
   126e0:	mov	sl, r0
   126e4:	cmp	r0, #0
   126e8:	blt	12718 <__mempcpy_chk@plt+0x158c>
   126ec:	ldr	r1, [r4, #12]
   126f0:	mov	r0, sl
   126f4:	cmp	r1, sl
   126f8:	movlt	r0, r1
   126fc:	mov	r1, #0
   12700:	str	r1, [sp, #12]
   12704:	b	12724 <__mempcpy_chk@plt+0x1598>
   12708:	mov	r0, #1
   1270c:	str	r0, [sp, #12]
   12710:	mov	r0, #-2147483647	; 0x80000001
   12714:	b	12724 <__mempcpy_chk@plt+0x1598>
   12718:	mov	r0, #1
   1271c:	str	r0, [sp, #12]
   12720:	mov	r0, sl
   12724:	ldr	r1, [r4, #12]
   12728:	sub	r8, r6, r5
   1272c:	sub	r7, r1, r0
   12730:	mov	r0, r5
   12734:	str	r7, [r4, #12]
   12738:	bl	11084 <strlen@plt>
   1273c:	ldr	r1, [r4, #8]
   12740:	sub	r0, r8, r0
   12744:	add	r0, r0, r1
   12748:	ldr	r1, [sp, #12]
   1274c:	str	r0, [r4, #8]
   12750:	cmp	r1, #0
   12754:	beq	12778 <__mempcpy_chk@plt+0x15ec>
   12758:	cmp	r9, #0
   1275c:	addne	r1, r9, #1
   12760:	cmpne	r6, r1
   12764:	bne	12770 <__mempcpy_chk@plt+0x15e4>
   12768:	add	r0, r0, #1
   1276c:	str	r0, [r4, #8]
   12770:	rsb	r1, sl, #0
   12774:	b	127ac <__mempcpy_chk@plt+0x1620>
   12778:	cmp	r9, #0
   1277c:	beq	1279c <__mempcpy_chk@plt+0x1610>
   12780:	ldr	r1, [sp, #8]
   12784:	cmp	r1, #0
   12788:	beq	127a0 <__mempcpy_chk@plt+0x1614>
   1278c:	cmp	r7, #0
   12790:	subeq	r0, r0, #1
   12794:	streq	r0, [r4, #8]
   12798:	b	127a0 <__mempcpy_chk@plt+0x1614>
   1279c:	ldr	r1, [sp, #8]
   127a0:	cmp	r1, sl
   127a4:	movcs	r1, sl
   127a8:	sub	r1, sl, r1
   127ac:	add	r0, r0, r1
   127b0:	str	r0, [r4, #8]
   127b4:	sub	sp, fp, #40	; 0x28
   127b8:	vpop	{d8}
   127bc:	add	sp, sp, #4
   127c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127c4:	movw	r1, #23960	; 0x5d98
   127c8:	mov	r0, #0
   127cc:	mov	r2, #5
   127d0:	movt	r1, #1
   127d4:	bl	10fa0 <dcgettext@plt>
   127d8:	mov	r4, r0
   127dc:	mov	r0, r5
   127e0:	bl	1444c <__mempcpy_chk@plt+0x32c0>
   127e4:	mov	r3, r0
   127e8:	mov	r0, #0
   127ec:	mov	r1, #0
   127f0:	mov	r2, r4
   127f4:	b	12844 <__mempcpy_chk@plt+0x16b8>
   127f8:	movw	r1, #23996	; 0x5dbc
   127fc:	mov	r0, #0
   12800:	mov	r2, #5
   12804:	movt	r1, #1
   12808:	bl	10fa0 <dcgettext@plt>
   1280c:	movw	r1, #24020	; 0x5dd4
   12810:	mov	r4, r0
   12814:	mov	r0, #0
   12818:	movt	r1, #1
   1281c:	bl	1443c <__mempcpy_chk@plt+0x32b0>
   12820:	mov	r6, r0
   12824:	mov	r0, #1
   12828:	mov	r1, r5
   1282c:	bl	1443c <__mempcpy_chk@plt+0x32b0>
   12830:	str	r0, [sp]
   12834:	mov	r0, #0
   12838:	mov	r1, #0
   1283c:	mov	r2, r4
   12840:	mov	r3, r6
   12844:	bl	11018 <error@plt>
   12848:	mov	r0, #1
   1284c:	bl	11288 <__mempcpy_chk@plt+0xfc>
   12850:	push	{fp, lr}
   12854:	mov	fp, sp
   12858:	movw	r0, #29020	; 0x715c
   1285c:	movt	r0, #2
   12860:	ldr	r0, [r0]
   12864:	bl	11144 <clearerr_unlocked@plt>
   12868:	bl	1109c <__errno_location@plt>
   1286c:	ldr	r4, [r0]
   12870:	movw	r1, #23948	; 0x5d8c
   12874:	mov	r0, #0
   12878:	mov	r2, #5
   1287c:	movt	r1, #1
   12880:	bl	10fa0 <dcgettext@plt>
   12884:	mov	r2, r0
   12888:	mov	r0, #1
   1288c:	mov	r1, r4
   12890:	bl	11018 <error@plt>
   12894:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12898:	add	fp, sp, #24
   1289c:	vpush	{d8}
   128a0:	sub	sp, sp, #8
   128a4:	mov	r4, r1
   128a8:	add	r1, sp, #4
   128ac:	mov	r5, r0
   128b0:	bl	10f7c <strtold@plt>
   128b4:	ldr	r7, [sp, #4]
   128b8:	vmov.f64	d8, d0
   128bc:	ldrb	r0, [r7]
   128c0:	cmp	r0, #0
   128c4:	beq	12900 <__mempcpy_chk@plt+0x1774>
   128c8:	bl	1109c <__errno_location@plt>
   128cc:	ldr	r8, [r0]
   128d0:	mov	r6, r0
   128d4:	mov	r1, sp
   128d8:	mov	r0, r5
   128dc:	bl	15040 <__mempcpy_chk@plt+0x3eb4>
   128e0:	ldr	r0, [sp]
   128e4:	cmp	r7, r0
   128e8:	bcs	128fc <__mempcpy_chk@plt+0x1770>
   128ec:	str	r0, [sp, #4]
   128f0:	mov	r7, r0
   128f4:	vmov.f64	d8, d0
   128f8:	b	12900 <__mempcpy_chk@plt+0x1774>
   128fc:	str	r8, [r6]
   12900:	cmp	r4, #0
   12904:	vmov.f64	d0, d8
   12908:	strne	r7, [r4]
   1290c:	sub	sp, fp, #32
   12910:	vpop	{d8}
   12914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12918:	movw	r1, #29068	; 0x718c
   1291c:	movt	r1, #2
   12920:	str	r0, [r1]
   12924:	bx	lr
   12928:	movw	r1, #29072	; 0x7190
   1292c:	movt	r1, #2
   12930:	strb	r0, [r1]
   12934:	bx	lr
   12938:	push	{r4, r5, r6, sl, fp, lr}
   1293c:	add	fp, sp, #16
   12940:	sub	sp, sp, #8
   12944:	movw	r0, #29020	; 0x715c
   12948:	movt	r0, #2
   1294c:	ldr	r0, [r0]
   12950:	bl	150ec <__mempcpy_chk@plt+0x3f60>
   12954:	cmp	r0, #0
   12958:	beq	12980 <__mempcpy_chk@plt+0x17f4>
   1295c:	movw	r0, #29072	; 0x7190
   12960:	movt	r0, #2
   12964:	ldrb	r0, [r0]
   12968:	cmp	r0, #0
   1296c:	beq	129a0 <__mempcpy_chk@plt+0x1814>
   12970:	bl	1109c <__errno_location@plt>
   12974:	ldr	r0, [r0]
   12978:	cmp	r0, #32
   1297c:	bne	129a0 <__mempcpy_chk@plt+0x1814>
   12980:	movw	r0, #29016	; 0x7158
   12984:	movt	r0, #2
   12988:	ldr	r0, [r0]
   1298c:	bl	150ec <__mempcpy_chk@plt+0x3f60>
   12990:	cmp	r0, #0
   12994:	subeq	sp, fp, #16
   12998:	popeq	{r4, r5, r6, sl, fp, pc}
   1299c:	b	12a10 <__mempcpy_chk@plt+0x1884>
   129a0:	movw	r1, #23948	; 0x5d8c
   129a4:	mov	r0, #0
   129a8:	mov	r2, #5
   129ac:	movt	r1, #1
   129b0:	bl	10fa0 <dcgettext@plt>
   129b4:	mov	r4, r0
   129b8:	movw	r0, #29068	; 0x718c
   129bc:	movt	r0, #2
   129c0:	ldr	r6, [r0]
   129c4:	bl	1109c <__errno_location@plt>
   129c8:	ldr	r5, [r0]
   129cc:	cmp	r6, #0
   129d0:	bne	129ec <__mempcpy_chk@plt+0x1860>
   129d4:	movw	r2, #23355	; 0x5b3b
   129d8:	mov	r0, #0
   129dc:	mov	r1, r5
   129e0:	mov	r3, r4
   129e4:	movt	r2, #1
   129e8:	b	12a0c <__mempcpy_chk@plt+0x1880>
   129ec:	mov	r0, r6
   129f0:	bl	1420c <__mempcpy_chk@plt+0x3080>
   129f4:	movw	r2, #24255	; 0x5ebf
   129f8:	mov	r3, r0
   129fc:	str	r4, [sp]
   12a00:	mov	r0, #0
   12a04:	mov	r1, r5
   12a08:	movt	r2, #1
   12a0c:	bl	11018 <error@plt>
   12a10:	movw	r0, #28932	; 0x7104
   12a14:	movt	r0, #2
   12a18:	ldr	r0, [r0]
   12a1c:	bl	10f58 <_exit@plt>
   12a20:	push	{r4, r5, r6, sl, fp, lr}
   12a24:	add	fp, sp, #16
   12a28:	mov	r4, r0
   12a2c:	bl	1109c <__errno_location@plt>
   12a30:	ldr	r6, [r0]
   12a34:	mov	r5, r0
   12a38:	mov	r0, r4
   12a3c:	bl	10f4c <free@plt>
   12a40:	str	r6, [r5]
   12a44:	pop	{r4, r5, r6, sl, fp, pc}
   12a48:	push	{r4, r5, fp, lr}
   12a4c:	add	fp, sp, #8
   12a50:	cmp	r0, #0
   12a54:	beq	12ae8 <__mempcpy_chk@plt+0x195c>
   12a58:	mov	r1, #47	; 0x2f
   12a5c:	mov	r4, r0
   12a60:	bl	11120 <strrchr@plt>
   12a64:	cmp	r0, #0
   12a68:	mov	r5, r4
   12a6c:	addne	r5, r0, #1
   12a70:	sub	r0, r5, r4
   12a74:	cmp	r0, #7
   12a78:	blt	12acc <__mempcpy_chk@plt+0x1940>
   12a7c:	movw	r1, #24318	; 0x5efe
   12a80:	sub	r0, r5, #7
   12a84:	mov	r2, #7
   12a88:	movt	r1, #1
   12a8c:	bl	11168 <strncmp@plt>
   12a90:	cmp	r0, #0
   12a94:	bne	12acc <__mempcpy_chk@plt+0x1940>
   12a98:	movw	r1, #24326	; 0x5f06
   12a9c:	mov	r0, r5
   12aa0:	mov	r2, #3
   12aa4:	movt	r1, #1
   12aa8:	bl	11168 <strncmp@plt>
   12aac:	cmp	r0, #0
   12ab0:	beq	12abc <__mempcpy_chk@plt+0x1930>
   12ab4:	mov	r4, r5
   12ab8:	b	12acc <__mempcpy_chk@plt+0x1940>
   12abc:	movw	r0, #29000	; 0x7148
   12ac0:	add	r4, r5, #3
   12ac4:	movt	r0, #2
   12ac8:	str	r4, [r0]
   12acc:	movw	r0, #29004	; 0x714c
   12ad0:	movt	r0, #2
   12ad4:	str	r4, [r0]
   12ad8:	movw	r0, #29076	; 0x7194
   12adc:	movt	r0, #2
   12ae0:	str	r4, [r0]
   12ae4:	pop	{r4, r5, fp, pc}
   12ae8:	movw	r0, #29016	; 0x7158
   12aec:	movt	r0, #2
   12af0:	ldr	r1, [r0]
   12af4:	movw	r0, #24262	; 0x5ec6
   12af8:	movt	r0, #1
   12afc:	bl	1115c <fputs@plt>
   12b00:	bl	11174 <abort@plt>
   12b04:	push	{r4, r5, r6, sl, fp, lr}
   12b08:	add	fp, sp, #16
   12b0c:	mov	r4, r0
   12b10:	movw	r0, #29080	; 0x7198
   12b14:	movt	r0, #2
   12b18:	cmp	r4, #0
   12b1c:	moveq	r4, r0
   12b20:	bl	1109c <__errno_location@plt>
   12b24:	ldr	r6, [r0]
   12b28:	mov	r5, r0
   12b2c:	mov	r0, r4
   12b30:	mov	r1, #48	; 0x30
   12b34:	bl	14d90 <__mempcpy_chk@plt+0x3c04>
   12b38:	str	r6, [r5]
   12b3c:	pop	{r4, r5, r6, sl, fp, pc}
   12b40:	movw	r1, #29080	; 0x7198
   12b44:	cmp	r0, #0
   12b48:	movt	r1, #2
   12b4c:	movne	r1, r0
   12b50:	ldr	r0, [r1]
   12b54:	bx	lr
   12b58:	movw	r2, #29080	; 0x7198
   12b5c:	cmp	r0, #0
   12b60:	movt	r2, #2
   12b64:	movne	r2, r0
   12b68:	str	r1, [r2]
   12b6c:	bx	lr
   12b70:	movw	r3, #29080	; 0x7198
   12b74:	cmp	r0, #0
   12b78:	movt	r3, #2
   12b7c:	movne	r3, r0
   12b80:	ubfx	r0, r1, #5, #3
   12b84:	and	r1, r1, #31
   12b88:	add	r0, r3, r0, lsl #2
   12b8c:	ldr	r3, [r0, #8]
   12b90:	eor	r2, r2, r3, lsr r1
   12b94:	and	r2, r2, #1
   12b98:	eor	r2, r3, r2, lsl r1
   12b9c:	str	r2, [r0, #8]
   12ba0:	mov	r0, #1
   12ba4:	and	r0, r0, r3, lsr r1
   12ba8:	bx	lr
   12bac:	movw	r2, #29080	; 0x7198
   12bb0:	cmp	r0, #0
   12bb4:	movt	r2, #2
   12bb8:	movne	r2, r0
   12bbc:	ldr	r0, [r2, #4]
   12bc0:	str	r1, [r2, #4]
   12bc4:	bx	lr
   12bc8:	movw	r3, #29080	; 0x7198
   12bcc:	cmp	r0, #0
   12bd0:	movt	r3, #2
   12bd4:	movne	r3, r0
   12bd8:	cmp	r1, #0
   12bdc:	mov	r0, #10
   12be0:	cmpne	r2, #0
   12be4:	str	r0, [r3]
   12be8:	bne	12bf8 <__mempcpy_chk@plt+0x1a6c>
   12bec:	push	{fp, lr}
   12bf0:	mov	fp, sp
   12bf4:	bl	11174 <abort@plt>
   12bf8:	str	r1, [r3, #40]	; 0x28
   12bfc:	str	r2, [r3, #44]	; 0x2c
   12c00:	bx	lr
   12c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c08:	add	fp, sp, #28
   12c0c:	sub	sp, sp, #20
   12c10:	mov	r7, r0
   12c14:	ldr	r0, [fp, #8]
   12c18:	movw	r5, #29080	; 0x7198
   12c1c:	mov	r8, r3
   12c20:	mov	r9, r2
   12c24:	mov	sl, r1
   12c28:	movt	r5, #2
   12c2c:	cmp	r0, #0
   12c30:	movne	r5, r0
   12c34:	bl	1109c <__errno_location@plt>
   12c38:	mov	r4, r0
   12c3c:	ldm	r5, {r0, r1}
   12c40:	ldr	r2, [r5, #40]	; 0x28
   12c44:	ldr	r3, [r5, #44]	; 0x2c
   12c48:	add	r5, r5, #8
   12c4c:	ldr	r6, [r4]
   12c50:	stm	sp, {r0, r1, r5}
   12c54:	str	r2, [sp, #12]
   12c58:	str	r3, [sp, #16]
   12c5c:	mov	r0, r7
   12c60:	mov	r1, sl
   12c64:	mov	r2, r9
   12c68:	mov	r3, r8
   12c6c:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   12c70:	str	r6, [r4]
   12c74:	sub	sp, fp, #28
   12c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c80:	add	fp, sp, #28
   12c84:	sub	sp, sp, #156	; 0x9c
   12c88:	str	r0, [fp, #-56]	; 0xffffffc8
   12c8c:	ldr	r0, [fp, #12]
   12c90:	mov	r4, r1
   12c94:	str	r3, [sp, #80]	; 0x50
   12c98:	str	r2, [fp, #-84]	; 0xffffffac
   12c9c:	and	r1, r0, #4
   12ca0:	str	r1, [sp, #24]
   12ca4:	and	r1, r0, #1
   12ca8:	str	r1, [sp, #28]
   12cac:	ubfx	r7, r0, #1, #1
   12cb0:	bl	10fdc <__ctype_get_mb_cur_max@plt>
   12cb4:	str	r0, [sp, #32]
   12cb8:	ldr	r0, [fp, #24]
   12cbc:	ldr	r9, [fp, #8]
   12cc0:	mov	r2, #0
   12cc4:	mov	r1, #0
   12cc8:	mov	r5, #0
   12ccc:	str	r2, [sp, #52]	; 0x34
   12cd0:	mov	r2, #1
   12cd4:	str	r0, [sp, #72]	; 0x48
   12cd8:	ldr	r0, [fp, #20]
   12cdc:	str	r0, [sp, #64]	; 0x40
   12ce0:	mov	r0, #0
   12ce4:	str	r0, [sp, #92]	; 0x5c
   12ce8:	mov	r0, #0
   12cec:	str	r0, [fp, #-76]	; 0xffffffb4
   12cf0:	mov	r0, #0
   12cf4:	cmp	r9, #10
   12cf8:	str	r1, [sp, #68]	; 0x44
   12cfc:	bhi	13cfc <__mempcpy_chk@plt+0x2b70>
   12d00:	add	r1, pc, #28
   12d04:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d08:	ldr	lr, [sp, #80]	; 0x50
   12d0c:	mov	r6, r4
   12d10:	mov	r8, #0
   12d14:	mov	r3, #1
   12d18:	mov	sl, #0
   12d1c:	mov	r4, r2
   12d20:	ldr	pc, [r1, r9, lsl #2]
   12d24:	strdeq	r2, [r1], -r4
   12d28:	andeq	r2, r1, r0, lsr lr
   12d2c:	andeq	r2, r1, r4, lsl #28
   12d30:	andeq	r2, r1, ip, ror #27
   12d34:	andeq	r2, r1, r4, lsr #28
   12d38:	andeq	r2, r1, ip, ror lr
   12d3c:	andeq	r2, r1, r4, lsl lr
   12d40:	ldrdeq	r2, [r1], -ip
   12d44:	andeq	r2, r1, r0, asr sp
   12d48:	andeq	r2, r1, r0, asr sp
   12d4c:	andeq	r2, r1, r8, ror sp
   12d50:	movw	r0, #24410	; 0x5f5a
   12d54:	mov	r1, r9
   12d58:	movt	r0, #1
   12d5c:	bl	14464 <__mempcpy_chk@plt+0x32d8>
   12d60:	str	r0, [sp, #64]	; 0x40
   12d64:	movw	r0, #23831	; 0x5d17
   12d68:	mov	r1, r9
   12d6c:	movt	r0, #1
   12d70:	bl	14464 <__mempcpy_chk@plt+0x32d8>
   12d74:	str	r0, [sp, #72]	; 0x48
   12d78:	mov	r8, #0
   12d7c:	mov	sl, r7
   12d80:	tst	r7, #1
   12d84:	str	r5, [fp, #-48]	; 0xffffffd0
   12d88:	bne	12dc4 <__mempcpy_chk@plt+0x1c38>
   12d8c:	ldr	r0, [sp, #64]	; 0x40
   12d90:	ldrb	r0, [r0]
   12d94:	cmp	r0, #0
   12d98:	beq	12dc4 <__mempcpy_chk@plt+0x1c38>
   12d9c:	ldr	r1, [sp, #64]	; 0x40
   12da0:	mov	r8, #0
   12da4:	add	r1, r1, #1
   12da8:	cmp	r8, r6
   12dac:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12db0:	strbcc	r0, [r2, r8]
   12db4:	ldrb	r0, [r1, r8]
   12db8:	add	r8, r8, #1
   12dbc:	cmp	r0, #0
   12dc0:	bne	12da8 <__mempcpy_chk@plt+0x1c1c>
   12dc4:	ldr	r7, [sp, #72]	; 0x48
   12dc8:	mov	r0, r7
   12dcc:	bl	11084 <strlen@plt>
   12dd0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12dd4:	ldr	lr, [sp, #80]	; 0x50
   12dd8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ddc:	str	r0, [fp, #-76]	; 0xffffffb4
   12de0:	str	r7, [sp, #92]	; 0x5c
   12de4:	mov	r3, #1
   12de8:	b	12edc <__mempcpy_chk@plt+0x1d50>
   12dec:	mov	r0, #1
   12df0:	b	12e30 <__mempcpy_chk@plt+0x1ca4>
   12df4:	mov	r9, #0
   12df8:	mov	r8, #0
   12dfc:	mov	r3, r0
   12e00:	b	12ed8 <__mempcpy_chk@plt+0x1d4c>
   12e04:	tst	r7, #1
   12e08:	bne	12e30 <__mempcpy_chk@plt+0x1ca4>
   12e0c:	mov	r3, r0
   12e10:	b	12e58 <__mempcpy_chk@plt+0x1ccc>
   12e14:	mov	r0, #1
   12e18:	mov	r8, #0
   12e1c:	mov	r9, #5
   12e20:	b	12e90 <__mempcpy_chk@plt+0x1d04>
   12e24:	mov	r3, #1
   12e28:	tst	r7, #1
   12e2c:	beq	12e58 <__mempcpy_chk@plt+0x1ccc>
   12e30:	mov	r1, #1
   12e34:	mov	r8, #0
   12e38:	mov	r9, #2
   12e3c:	mov	r3, r0
   12e40:	mov	sl, #1
   12e44:	str	r1, [fp, #-76]	; 0xffffffb4
   12e48:	movw	r1, #23831	; 0x5d17
   12e4c:	movt	r1, #1
   12e50:	str	r1, [sp, #92]	; 0x5c
   12e54:	b	12edc <__mempcpy_chk@plt+0x1d50>
   12e58:	cmp	r6, #0
   12e5c:	mov	r8, #1
   12e60:	mov	r9, #2
   12e64:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12e68:	movne	r0, #39	; 0x27
   12e6c:	strbne	r0, [r1]
   12e70:	movw	r0, #23831	; 0x5d17
   12e74:	movt	r0, #1
   12e78:	b	12ecc <__mempcpy_chk@plt+0x1d40>
   12e7c:	mov	r9, #5
   12e80:	tst	r7, #1
   12e84:	beq	12eac <__mempcpy_chk@plt+0x1d20>
   12e88:	mov	r0, #1
   12e8c:	mov	r8, #0
   12e90:	str	r0, [fp, #-76]	; 0xffffffb4
   12e94:	movw	r0, #24408	; 0x5f58
   12e98:	mov	r3, #1
   12e9c:	mov	sl, #1
   12ea0:	movt	r0, #1
   12ea4:	str	r0, [sp, #92]	; 0x5c
   12ea8:	b	12edc <__mempcpy_chk@plt+0x1d50>
   12eac:	cmp	r6, #0
   12eb0:	mov	r8, #1
   12eb4:	mov	r3, #1
   12eb8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12ebc:	movne	r0, #34	; 0x22
   12ec0:	strbne	r0, [r1]
   12ec4:	movw	r0, #24408	; 0x5f58
   12ec8:	movt	r0, #1
   12ecc:	str	r0, [sp, #92]	; 0x5c
   12ed0:	mov	r0, #1
   12ed4:	str	r0, [fp, #-76]	; 0xffffffb4
   12ed8:	mov	sl, #0
   12edc:	ldr	r0, [fp, #16]
   12ee0:	mov	r7, #0
   12ee4:	str	r9, [fp, #-64]	; 0xffffffc0
   12ee8:	str	sl, [fp, #-72]	; 0xffffffb8
   12eec:	str	r3, [sp, #84]	; 0x54
   12ef0:	cmp	r0, #0
   12ef4:	movwne	r0, #1
   12ef8:	and	r0, r0, sl
   12efc:	str	r0, [fp, #-88]	; 0xffffffa8
   12f00:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f04:	cmp	r0, #0
   12f08:	movwne	r0, #1
   12f0c:	subs	r2, r9, #2
   12f10:	and	r1, r0, sl
   12f14:	str	r2, [fp, #-80]	; 0xffffffb0
   12f18:	and	r1, r3, r1
   12f1c:	str	r1, [sp, #44]	; 0x2c
   12f20:	clz	r1, r2
   12f24:	lsr	r1, r1, #5
   12f28:	and	r1, r1, sl
   12f2c:	str	r1, [sp, #56]	; 0x38
   12f30:	mov	r1, r2
   12f34:	eor	r2, sl, #1
   12f38:	movwne	r1, #1
   12f3c:	str	r2, [sp, #88]	; 0x58
   12f40:	orr	r2, r1, r2
   12f44:	and	r1, r1, r3
   12f48:	and	r0, r0, r1
   12f4c:	str	r2, [sp, #60]	; 0x3c
   12f50:	str	r1, [fp, #-68]	; 0xffffffbc
   12f54:	str	r0, [fp, #-60]	; 0xffffffc4
   12f58:	eor	r0, r3, #1
   12f5c:	str	r0, [sp, #48]	; 0x30
   12f60:	cmn	lr, #1
   12f64:	beq	12f74 <__mempcpy_chk@plt+0x1de8>
   12f68:	cmp	r7, lr
   12f6c:	bne	12f80 <__mempcpy_chk@plt+0x1df4>
   12f70:	b	13b2c <__mempcpy_chk@plt+0x29a0>
   12f74:	ldrb	r0, [ip, r7]
   12f78:	cmp	r0, #0
   12f7c:	beq	13b34 <__mempcpy_chk@plt+0x29a8>
   12f80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f84:	mov	r9, #0
   12f88:	str	r5, [fp, #-48]	; 0xffffffd0
   12f8c:	str	r6, [fp, #-52]	; 0xffffffcc
   12f90:	cmp	r0, #0
   12f94:	beq	12fd4 <__mempcpy_chk@plt+0x1e48>
   12f98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f9c:	mov	r5, r4
   12fa0:	add	r4, r7, r0
   12fa4:	cmp	r0, #2
   12fa8:	bcc	12fc4 <__mempcpy_chk@plt+0x1e38>
   12fac:	cmn	lr, #1
   12fb0:	bne	12fc4 <__mempcpy_chk@plt+0x1e38>
   12fb4:	mov	r0, ip
   12fb8:	bl	11084 <strlen@plt>
   12fbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fc0:	mov	lr, r0
   12fc4:	cmp	r4, lr
   12fc8:	bls	12fdc <__mempcpy_chk@plt+0x1e50>
   12fcc:	mov	r6, #0
   12fd0:	b	1301c <__mempcpy_chk@plt+0x1e90>
   12fd4:	mov	r6, #0
   12fd8:	b	13020 <__mempcpy_chk@plt+0x1e94>
   12fdc:	ldr	r1, [sp, #92]	; 0x5c
   12fe0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12fe4:	add	r0, ip, r7
   12fe8:	mov	r4, lr
   12fec:	bl	10f94 <memcmp@plt>
   12ff0:	ldr	r2, [sp, #88]	; 0x58
   12ff4:	cmp	r0, #0
   12ff8:	mov	r1, r0
   12ffc:	movwne	r1, #1
   13000:	orr	r1, r1, r2
   13004:	tst	r1, #1
   13008:	beq	13bc8 <__mempcpy_chk@plt+0x2a3c>
   1300c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13010:	clz	r0, r0
   13014:	mov	lr, r4
   13018:	lsr	r6, r0, #5
   1301c:	mov	r4, r5
   13020:	ldrb	r5, [ip, r7]
   13024:	cmp	r5, #126	; 0x7e
   13028:	bhi	133f0 <__mempcpy_chk@plt+0x2264>
   1302c:	add	r3, pc, #16
   13030:	mov	sl, #1
   13034:	mov	r2, #110	; 0x6e
   13038:	mov	r0, #97	; 0x61
   1303c:	mov	r1, #0
   13040:	ldr	pc, [r3, r5, lsl #2]
   13044:	ldrdeq	r3, [r1], -r4
   13048:	strdeq	r3, [r1], -r0
   1304c:	strdeq	r3, [r1], -r0
   13050:	strdeq	r3, [r1], -r0
   13054:	strdeq	r3, [r1], -r0
   13058:	strdeq	r3, [r1], -r0
   1305c:	strdeq	r3, [r1], -r0
   13060:	muleq	r1, r4, r4
   13064:			; <UNDEFINED> instruction: 0x000132b4
   13068:	andeq	r3, r1, ip, lsr #5
   1306c:	andeq	r3, r1, r0, asr #5
   13070:	andeq	r3, r1, r4, asr #6
   13074:	andeq	r3, r1, r4, lsr #5
   13078:			; <UNDEFINED> instruction: 0x000132bc
   1307c:	strdeq	r3, [r1], -r0
   13080:	strdeq	r3, [r1], -r0
   13084:	strdeq	r3, [r1], -r0
   13088:	strdeq	r3, [r1], -r0
   1308c:	strdeq	r3, [r1], -r0
   13090:	strdeq	r3, [r1], -r0
   13094:	strdeq	r3, [r1], -r0
   13098:	strdeq	r3, [r1], -r0
   1309c:	strdeq	r3, [r1], -r0
   130a0:	strdeq	r3, [r1], -r0
   130a4:	strdeq	r3, [r1], -r0
   130a8:	strdeq	r3, [r1], -r0
   130ac:	strdeq	r3, [r1], -r0
   130b0:	strdeq	r3, [r1], -r0
   130b4:	strdeq	r3, [r1], -r0
   130b8:	strdeq	r3, [r1], -r0
   130bc:	strdeq	r3, [r1], -r0
   130c0:	strdeq	r3, [r1], -r0
   130c4:	andeq	r3, r1, r4, asr r4
   130c8:	andeq	r3, r1, r8, asr r4
   130cc:	andeq	r3, r1, r8, asr r4
   130d0:	andeq	r3, r1, r4, asr r2
   130d4:	andeq	r3, r1, r8, asr r4
   130d8:	andeq	r3, r1, r0, asr #4
   130dc:	andeq	r3, r1, r8, asr r4
   130e0:	andeq	r3, r1, ip, asr #6
   130e4:	andeq	r3, r1, r8, asr r4
   130e8:	andeq	r3, r1, r8, asr r4
   130ec:	andeq	r3, r1, r8, asr r4
   130f0:	andeq	r3, r1, r0, asr #4
   130f4:	andeq	r3, r1, r0, asr #4
   130f8:	andeq	r3, r1, r0, asr #4
   130fc:	andeq	r3, r1, r0, asr #4
   13100:	andeq	r3, r1, r0, asr #4
   13104:	andeq	r3, r1, r0, asr #4
   13108:	andeq	r3, r1, r0, asr #4
   1310c:	andeq	r3, r1, r0, asr #4
   13110:	andeq	r3, r1, r0, asr #4
   13114:	andeq	r3, r1, r0, asr #4
   13118:	andeq	r3, r1, r0, asr #4
   1311c:	andeq	r3, r1, r0, asr #4
   13120:	andeq	r3, r1, r0, asr #4
   13124:	andeq	r3, r1, r0, asr #4
   13128:	andeq	r3, r1, r0, asr #4
   1312c:	andeq	r3, r1, r0, asr #4
   13130:	andeq	r3, r1, r8, asr r4
   13134:	andeq	r3, r1, r8, asr r4
   13138:	andeq	r3, r1, r8, asr r4
   1313c:	andeq	r3, r1, r8, asr r4
   13140:	andeq	r3, r1, r8, lsl r3
   13144:	strdeq	r3, [r1], -r0
   13148:	andeq	r3, r1, r0, asr #4
   1314c:	andeq	r3, r1, r0, asr #4
   13150:	andeq	r3, r1, r0, asr #4
   13154:	andeq	r3, r1, r0, asr #4
   13158:	andeq	r3, r1, r0, asr #4
   1315c:	andeq	r3, r1, r0, asr #4
   13160:	andeq	r3, r1, r0, asr #4
   13164:	andeq	r3, r1, r0, asr #4
   13168:	andeq	r3, r1, r0, asr #4
   1316c:	andeq	r3, r1, r0, asr #4
   13170:	andeq	r3, r1, r0, asr #4
   13174:	andeq	r3, r1, r0, asr #4
   13178:	andeq	r3, r1, r0, asr #4
   1317c:	andeq	r3, r1, r0, asr #4
   13180:	andeq	r3, r1, r0, asr #4
   13184:	andeq	r3, r1, r0, asr #4
   13188:	andeq	r3, r1, r0, asr #4
   1318c:	andeq	r3, r1, r0, asr #4
   13190:	andeq	r3, r1, r0, asr #4
   13194:	andeq	r3, r1, r0, asr #4
   13198:	andeq	r3, r1, r0, asr #4
   1319c:	andeq	r3, r1, r0, asr #4
   131a0:	andeq	r3, r1, r0, asr #4
   131a4:	andeq	r3, r1, r0, asr #4
   131a8:	andeq	r3, r1, r0, asr #4
   131ac:	andeq	r3, r1, r0, asr #4
   131b0:	andeq	r3, r1, r8, asr r4
   131b4:	andeq	r3, r1, r0, lsl #5
   131b8:	andeq	r3, r1, r0, asr #4
   131bc:	andeq	r3, r1, r8, asr r4
   131c0:	andeq	r3, r1, r0, asr #4
   131c4:	andeq	r3, r1, r8, asr r4
   131c8:	andeq	r3, r1, r0, asr #4
   131cc:	andeq	r3, r1, r0, asr #4
   131d0:	andeq	r3, r1, r0, asr #4
   131d4:	andeq	r3, r1, r0, asr #4
   131d8:	andeq	r3, r1, r0, asr #4
   131dc:	andeq	r3, r1, r0, asr #4
   131e0:	andeq	r3, r1, r0, asr #4
   131e4:	andeq	r3, r1, r0, asr #4
   131e8:	andeq	r3, r1, r0, asr #4
   131ec:	andeq	r3, r1, r0, asr #4
   131f0:	andeq	r3, r1, r0, asr #4
   131f4:	andeq	r3, r1, r0, asr #4
   131f8:	andeq	r3, r1, r0, asr #4
   131fc:	andeq	r3, r1, r0, asr #4
   13200:	andeq	r3, r1, r0, asr #4
   13204:	andeq	r3, r1, r0, asr #4
   13208:	andeq	r3, r1, r0, asr #4
   1320c:	andeq	r3, r1, r0, asr #4
   13210:	andeq	r3, r1, r0, asr #4
   13214:	andeq	r3, r1, r0, asr #4
   13218:	andeq	r3, r1, r0, asr #4
   1321c:	andeq	r3, r1, r0, asr #4
   13220:	andeq	r3, r1, r0, asr #4
   13224:	andeq	r3, r1, r0, asr #4
   13228:	andeq	r3, r1, r0, asr #4
   1322c:	andeq	r3, r1, r0, asr #4
   13230:	andeq	r3, r1, r4, ror #4
   13234:	andeq	r3, r1, r8, asr r4
   13238:	andeq	r3, r1, r4, ror #4
   1323c:	andeq	r3, r1, r4, asr r2
   13240:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13244:	cmp	r0, #0
   13248:	beq	134a8 <__mempcpy_chk@plt+0x231c>
   1324c:	ldr	r0, [fp, #16]
   13250:	b	134ac <__mempcpy_chk@plt+0x2320>
   13254:	mov	sl, #0
   13258:	cmp	r7, #0
   1325c:	bne	136c4 <__mempcpy_chk@plt+0x2538>
   13260:	b	13454 <__mempcpy_chk@plt+0x22c8>
   13264:	mov	sl, #0
   13268:	cmn	lr, #1
   1326c:	beq	13440 <__mempcpy_chk@plt+0x22b4>
   13270:	cmp	r7, #0
   13274:	cmpeq	lr, #1
   13278:	bne	136c4 <__mempcpy_chk@plt+0x2538>
   1327c:	b	13454 <__mempcpy_chk@plt+0x22c8>
   13280:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13284:	cmp	r0, #2
   13288:	bne	13478 <__mempcpy_chk@plt+0x22ec>
   1328c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13290:	tst	r0, #1
   13294:	bne	13be4 <__mempcpy_chk@plt+0x2a58>
   13298:	mov	r9, #0
   1329c:	mov	r0, #92	; 0x5c
   132a0:	b	1348c <__mempcpy_chk@plt+0x2300>
   132a4:	mov	r0, #102	; 0x66
   132a8:	b	13494 <__mempcpy_chk@plt+0x2308>
   132ac:	mov	r2, #116	; 0x74
   132b0:	b	132c0 <__mempcpy_chk@plt+0x2134>
   132b4:	mov	r0, #98	; 0x62
   132b8:	b	13494 <__mempcpy_chk@plt+0x2308>
   132bc:	mov	r2, #114	; 0x72
   132c0:	ldr	r0, [sp, #60]	; 0x3c
   132c4:	tst	r0, #1
   132c8:	mov	r0, r2
   132cc:	bne	13494 <__mempcpy_chk@plt+0x2308>
   132d0:	b	13be4 <__mempcpy_chk@plt+0x2a58>
   132d4:	ldr	r0, [sp, #84]	; 0x54
   132d8:	tst	r0, #1
   132dc:	beq	13580 <__mempcpy_chk@plt+0x23f4>
   132e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132e4:	tst	r0, #1
   132e8:	bne	13cec <__mempcpy_chk@plt+0x2b60>
   132ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   132f8:	cmp	r0, #2
   132fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13300:	movwne	r0, #1
   13304:	orr	r0, r0, r3
   13308:	tst	r0, #1
   1330c:	beq	13a00 <__mempcpy_chk@plt+0x2874>
   13310:	mov	r0, r8
   13314:	b	13a40 <__mempcpy_chk@plt+0x28b4>
   13318:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1331c:	mov	r9, #0
   13320:	mov	r5, #63	; 0x3f
   13324:	cmp	r0, #5
   13328:	beq	136cc <__mempcpy_chk@plt+0x2540>
   1332c:	cmp	r0, #2
   13330:	bne	1378c <__mempcpy_chk@plt+0x2600>
   13334:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13338:	tst	r0, #1
   1333c:	beq	13790 <__mempcpy_chk@plt+0x2604>
   13340:	b	13be4 <__mempcpy_chk@plt+0x2a58>
   13344:	mov	r0, #118	; 0x76
   13348:	b	13494 <__mempcpy_chk@plt+0x2308>
   1334c:	mov	r0, #1
   13350:	mov	r5, #39	; 0x27
   13354:	str	r0, [sp, #52]	; 0x34
   13358:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1335c:	cmp	r0, #2
   13360:	bne	133e8 <__mempcpy_chk@plt+0x225c>
   13364:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13368:	tst	r0, #1
   1336c:	bne	13be4 <__mempcpy_chk@plt+0x2a58>
   13370:	ldr	r3, [sp, #68]	; 0x44
   13374:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13378:	mov	r9, #0
   1337c:	clz	r1, r2
   13380:	cmp	r3, #0
   13384:	mov	r0, r3
   13388:	movwne	r0, #1
   1338c:	lsr	r1, r1, #5
   13390:	orrs	r0, r0, r1
   13394:	moveq	r3, r2
   13398:	moveq	r2, r0
   1339c:	cmp	r8, r2
   133a0:	str	r3, [sp, #68]	; 0x44
   133a4:	str	r2, [fp, #-52]	; 0xffffffcc
   133a8:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   133ac:	movcc	r0, #39	; 0x27
   133b0:	strbcc	r0, [r1, r8]
   133b4:	add	r0, r8, #1
   133b8:	cmp	r0, r2
   133bc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   133c0:	movcc	r1, #92	; 0x5c
   133c4:	strbcc	r1, [r3, r0]
   133c8:	add	r0, r8, #2
   133cc:	add	r8, r8, #3
   133d0:	cmp	r0, r2
   133d4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   133d8:	movcc	r1, #39	; 0x27
   133dc:	strbcc	r1, [r2, r0]
   133e0:	mov	r0, #0
   133e4:	str	r0, [fp, #-48]	; 0xffffffd0
   133e8:	mov	sl, #1
   133ec:	b	13240 <__mempcpy_chk@plt+0x20b4>
   133f0:	ldr	r0, [sp, #32]
   133f4:	cmp	r0, #1
   133f8:	bne	135a4 <__mempcpy_chk@plt+0x2418>
   133fc:	str	lr, [sp, #80]	; 0x50
   13400:	bl	1106c <__ctype_b_loc@plt>
   13404:	ldr	r0, [r0]
   13408:	ldr	ip, [fp, #-84]	; 0xffffffac
   1340c:	mov	r1, #1
   13410:	add	r0, r0, r5, lsl #1
   13414:	ldrb	r0, [r0, #1]
   13418:	ubfx	sl, r0, #6, #1
   1341c:	ldr	r0, [sp, #48]	; 0x30
   13420:	mov	r2, r1
   13424:	cmp	r1, #1
   13428:	orr	r0, sl, r0
   1342c:	bhi	13798 <__mempcpy_chk@plt+0x260c>
   13430:	tst	r0, #1
   13434:	beq	13798 <__mempcpy_chk@plt+0x260c>
   13438:	ldr	lr, [sp, #80]	; 0x50
   1343c:	b	13240 <__mempcpy_chk@plt+0x20b4>
   13440:	cmp	r7, #0
   13444:	bne	136c0 <__mempcpy_chk@plt+0x2534>
   13448:	ldrb	r0, [ip, #1]
   1344c:	cmp	r0, #0
   13450:	bne	136c0 <__mempcpy_chk@plt+0x2534>
   13454:	mov	r1, #1
   13458:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1345c:	cmp	r0, #2
   13460:	bne	13470 <__mempcpy_chk@plt+0x22e4>
   13464:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13468:	tst	r0, #1
   1346c:	bne	13be4 <__mempcpy_chk@plt+0x2a58>
   13470:	mov	sl, r1
   13474:	b	13240 <__mempcpy_chk@plt+0x20b4>
   13478:	ldr	r1, [sp, #44]	; 0x2c
   1347c:	mov	r9, #0
   13480:	mov	r0, #92	; 0x5c
   13484:	cmp	r1, #0
   13488:	beq	13494 <__mempcpy_chk@plt+0x2308>
   1348c:	mov	sl, #0
   13490:	b	139ac <__mempcpy_chk@plt+0x2820>
   13494:	ldr	r1, [sp, #84]	; 0x54
   13498:	mov	sl, #0
   1349c:	mov	r9, #0
   134a0:	tst	r1, #1
   134a4:	bne	134e0 <__mempcpy_chk@plt+0x2354>
   134a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   134ac:	cmp	r0, #0
   134b0:	mov	r0, r5
   134b4:	beq	134d8 <__mempcpy_chk@plt+0x234c>
   134b8:	ldr	r1, [fp, #16]
   134bc:	ubfx	r0, r5, #5, #3
   134c0:	mov	r2, #1
   134c4:	ldr	r0, [r1, r0, lsl #2]
   134c8:	and	r1, r5, #31
   134cc:	tst	r0, r2, lsl r1
   134d0:	mov	r0, r5
   134d4:	bne	134e0 <__mempcpy_chk@plt+0x2354>
   134d8:	cmp	r6, #0
   134dc:	beq	139ac <__mempcpy_chk@plt+0x2820>
   134e0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   134e4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   134e8:	tst	r1, #1
   134ec:	bne	13bc0 <__mempcpy_chk@plt+0x2a34>
   134f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   134f4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   134f8:	cmp	r1, #2
   134fc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13500:	movwne	r1, #1
   13504:	orr	r1, r1, r5
   13508:	tst	r1, #1
   1350c:	bne	13550 <__mempcpy_chk@plt+0x23c4>
   13510:	cmp	r8, r6
   13514:	mov	r5, #1
   13518:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1351c:	movcc	r1, #39	; 0x27
   13520:	strbcc	r1, [r2, r8]
   13524:	add	r1, r8, #1
   13528:	cmp	r1, r6
   1352c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13530:	movcc	r2, #36	; 0x24
   13534:	strbcc	r2, [r3, r1]
   13538:	add	r1, r8, #2
   1353c:	add	r8, r8, #3
   13540:	cmp	r1, r6
   13544:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13548:	movcc	r2, #39	; 0x27
   1354c:	strbcc	r2, [r3, r1]
   13550:	cmp	r8, r6
   13554:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13558:	movcc	r1, #92	; 0x5c
   1355c:	strbcc	r1, [r2, r8]
   13560:	add	r8, r8, #1
   13564:	cmp	r8, r6
   13568:	and	r4, r4, sl
   1356c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13570:	strbcc	r0, [r1, r8]
   13574:	add	r8, r8, #1
   13578:	add	r7, r7, #1
   1357c:	b	12f60 <__mempcpy_chk@plt+0x1dd4>
   13580:	ldr	r0, [sp, #28]
   13584:	mov	sl, #0
   13588:	mov	r9, #0
   1358c:	mov	r5, #0
   13590:	cmp	r0, #0
   13594:	beq	134a8 <__mempcpy_chk@plt+0x231c>
   13598:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1359c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135a0:	b	13578 <__mempcpy_chk@plt+0x23ec>
   135a4:	mov	r0, #0
   135a8:	cmn	lr, #1
   135ac:	str	r6, [sp, #76]	; 0x4c
   135b0:	str	r4, [sp, #20]
   135b4:	str	r0, [fp, #-36]	; 0xffffffdc
   135b8:	str	r0, [fp, #-40]	; 0xffffffd8
   135bc:	bne	135d0 <__mempcpy_chk@plt+0x2444>
   135c0:	mov	r0, ip
   135c4:	bl	11084 <strlen@plt>
   135c8:	ldr	ip, [fp, #-84]	; 0xffffffac
   135cc:	mov	lr, r0
   135d0:	add	r0, ip, r7
   135d4:	mov	sl, #1
   135d8:	mov	r6, #0
   135dc:	sub	r4, fp, #40	; 0x28
   135e0:	str	lr, [sp, #80]	; 0x50
   135e4:	str	r0, [sp, #36]	; 0x24
   135e8:	str	r6, [sp, #40]	; 0x28
   135ec:	add	r6, r6, r7
   135f0:	sub	r0, fp, #44	; 0x2c
   135f4:	mov	r3, r4
   135f8:	add	r1, ip, r6
   135fc:	sub	r2, lr, r6
   13600:	bl	15340 <__mempcpy_chk@plt+0x41b4>
   13604:	cmp	r0, #0
   13608:	beq	13b14 <__mempcpy_chk@plt+0x2988>
   1360c:	cmn	r0, #1
   13610:	beq	13ad4 <__mempcpy_chk@plt+0x2948>
   13614:	ldr	lr, [sp, #80]	; 0x50
   13618:	cmn	r0, #2
   1361c:	beq	13adc <__mempcpy_chk@plt+0x2950>
   13620:	ldr	r2, [sp, #56]	; 0x38
   13624:	cmp	r0, #2
   13628:	mov	r1, #0
   1362c:	movwcc	r1, #1
   13630:	eor	r2, r2, #1
   13634:	orrs	r1, r2, r1
   13638:	bne	13684 <__mempcpy_chk@plt+0x24f8>
   1363c:	ldr	r1, [sp, #40]	; 0x28
   13640:	ldr	r2, [sp, #36]	; 0x24
   13644:	add	ip, r2, r1
   13648:	mov	r2, #1
   1364c:	ldrb	r3, [ip, r2]
   13650:	sub	r6, r3, #94	; 0x5e
   13654:	cmp	r6, #30
   13658:	bhi	1366c <__mempcpy_chk@plt+0x24e0>
   1365c:	mov	r4, #1
   13660:	mov	r1, #1073741829	; 0x40000005
   13664:	tst	r1, r4, lsl r6
   13668:	bne	13be0 <__mempcpy_chk@plt+0x2a54>
   1366c:	sub	r3, r3, #91	; 0x5b
   13670:	cmp	r3, #2
   13674:	bcc	13be0 <__mempcpy_chk@plt+0x2a54>
   13678:	add	r2, r2, #1
   1367c:	cmp	r2, r0
   13680:	bcc	1364c <__mempcpy_chk@plt+0x24c0>
   13684:	ldr	r6, [sp, #40]	; 0x28
   13688:	add	r6, r0, r6
   1368c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13690:	bl	10fc4 <iswprint@plt>
   13694:	cmp	r0, #0
   13698:	sub	r4, fp, #40	; 0x28
   1369c:	movwne	r0, #1
   136a0:	and	sl, sl, r0
   136a4:	mov	r0, r4
   136a8:	bl	10f70 <mbsinit@plt>
   136ac:	ldr	lr, [sp, #80]	; 0x50
   136b0:	ldr	ip, [fp, #-84]	; 0xffffffac
   136b4:	cmp	r0, #0
   136b8:	beq	135e8 <__mempcpy_chk@plt+0x245c>
   136bc:	b	13b1c <__mempcpy_chk@plt+0x2990>
   136c0:	mvn	lr, #0
   136c4:	mov	r9, #0
   136c8:	b	13240 <__mempcpy_chk@plt+0x20b4>
   136cc:	ldr	r0, [sp, #24]
   136d0:	cmp	r0, #0
   136d4:	beq	1378c <__mempcpy_chk@plt+0x2600>
   136d8:	add	r0, r7, #2
   136dc:	cmp	r0, lr
   136e0:	bcs	1378c <__mempcpy_chk@plt+0x2600>
   136e4:	add	r1, ip, r7
   136e8:	ldrb	r1, [r1, #1]
   136ec:	cmp	r1, #63	; 0x3f
   136f0:	bne	1378c <__mempcpy_chk@plt+0x2600>
   136f4:	ldrb	r5, [ip, r0]
   136f8:	sub	r1, r5, #33	; 0x21
   136fc:	cmp	r1, #29
   13700:	bhi	1378c <__mempcpy_chk@plt+0x2600>
   13704:	movw	r3, #20929	; 0x51c1
   13708:	mov	r2, #1
   1370c:	movt	r3, #14336	; 0x3800
   13710:	tst	r3, r2, lsl r1
   13714:	beq	1378c <__mempcpy_chk@plt+0x2600>
   13718:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1371c:	tst	r1, #1
   13720:	bne	13cf4 <__mempcpy_chk@plt+0x2b68>
   13724:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13728:	mov	r7, r0
   1372c:	cmp	r8, r1
   13730:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13734:	movcc	r1, #63	; 0x3f
   13738:	strbcc	r1, [r2, r8]
   1373c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13740:	add	r1, r8, #1
   13744:	cmp	r1, r2
   13748:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1374c:	movcc	r2, #34	; 0x22
   13750:	strbcc	r2, [r3, r1]
   13754:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13758:	add	r1, r8, #2
   1375c:	cmp	r1, r2
   13760:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13764:	movcc	r2, #34	; 0x22
   13768:	strbcc	r2, [r3, r1]
   1376c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13770:	add	r1, r8, #3
   13774:	add	r8, r8, #4
   13778:	cmp	r1, r2
   1377c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13780:	movcc	r2, #63	; 0x3f
   13784:	strbcc	r2, [r3, r1]
   13788:	b	13790 <__mempcpy_chk@plt+0x2604>
   1378c:	mov	r5, #63	; 0x3f
   13790:	mov	sl, #0
   13794:	b	13240 <__mempcpy_chk@plt+0x20b4>
   13798:	str	r0, [sp, #40]	; 0x28
   1379c:	add	r0, r2, r7
   137a0:	str	r6, [sp, #76]	; 0x4c
   137a4:	add	r1, r7, #1
   137a8:	ldr	lr, [sp, #80]	; 0x50
   137ac:	ldr	r7, [fp, #-64]	; 0xffffffc0
   137b0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   137b4:	mov	r3, #0
   137b8:	str	r0, [sp, #36]	; 0x24
   137bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   137c0:	b	13854 <__mempcpy_chk@plt+0x26c8>
   137c4:	str	r0, [sp, #76]	; 0x4c
   137c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   137cc:	cmp	r9, #0
   137d0:	movwne	r9, #1
   137d4:	mvn	r7, r0
   137d8:	orr	r7, r7, r9
   137dc:	tst	r7, #1
   137e0:	bne	13830 <__mempcpy_chk@plt+0x26a4>
   137e4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   137e8:	cmp	r8, r6
   137ec:	bcs	13804 <__mempcpy_chk@plt+0x2678>
   137f0:	ldr	r7, [fp, #-56]	; 0xffffffc8
   137f4:	mov	r2, r4
   137f8:	mov	r4, #39	; 0x27
   137fc:	strb	r4, [r7, r8]
   13800:	mov	r4, r2
   13804:	add	r7, r8, #1
   13808:	cmp	r7, r6
   1380c:	bcs	13824 <__mempcpy_chk@plt+0x2698>
   13810:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13814:	mov	r2, r4
   13818:	mov	r4, #39	; 0x27
   1381c:	strb	r4, [r0, r7]
   13820:	mov	r4, r2
   13824:	add	r8, r8, #2
   13828:	mov	r0, #0
   1382c:	b	13838 <__mempcpy_chk@plt+0x26ac>
   13830:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13834:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13838:	cmp	r8, r6
   1383c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13840:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13844:	strbcc	r5, [r2, r8]
   13848:	add	r8, r8, #1
   1384c:	ldrb	r5, [ip, r1]
   13850:	add	r1, r1, #1
   13854:	ldr	r2, [sp, #40]	; 0x28
   13858:	tst	r2, #1
   1385c:	beq	13898 <__mempcpy_chk@plt+0x270c>
   13860:	ldr	r2, [sp, #76]	; 0x4c
   13864:	str	r0, [fp, #-48]	; 0xffffffd0
   13868:	tst	r2, #1
   1386c:	beq	13890 <__mempcpy_chk@plt+0x2704>
   13870:	cmp	r8, r6
   13874:	bcs	1388c <__mempcpy_chk@plt+0x2700>
   13878:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1387c:	mov	r2, r4
   13880:	mov	r4, #92	; 0x5c
   13884:	strb	r4, [r6, r8]
   13888:	mov	r4, r2
   1388c:	add	r8, r8, #1
   13890:	mov	r0, #0
   13894:	b	1398c <__mempcpy_chk@plt+0x2800>
   13898:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1389c:	tst	r2, #1
   138a0:	bne	13bec <__mempcpy_chk@plt+0x2a60>
   138a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   138a8:	cmp	r7, #2
   138ac:	movwne	r3, #1
   138b0:	orr	r3, r3, r0
   138b4:	tst	r3, #1
   138b8:	bne	13914 <__mempcpy_chk@plt+0x2788>
   138bc:	cmp	r8, r6
   138c0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   138c4:	movcc	r3, #39	; 0x27
   138c8:	strbcc	r3, [r2, r8]
   138cc:	add	r3, r8, #1
   138d0:	cmp	r3, r6
   138d4:	bcs	138ec <__mempcpy_chk@plt+0x2760>
   138d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138dc:	mov	r7, r4
   138e0:	mov	r4, #36	; 0x24
   138e4:	strb	r4, [r2, r3]
   138e8:	mov	r4, r7
   138ec:	add	r3, r8, #2
   138f0:	cmp	r3, r6
   138f4:	bcs	1390c <__mempcpy_chk@plt+0x2780>
   138f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138fc:	mov	r7, r4
   13900:	mov	r4, #39	; 0x27
   13904:	strb	r4, [r2, r3]
   13908:	mov	r4, r7
   1390c:	add	r8, r8, #3
   13910:	mov	r0, #1
   13914:	cmp	r8, r6
   13918:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1391c:	movcc	r3, #92	; 0x5c
   13920:	strbcc	r3, [r2, r8]
   13924:	add	r3, r8, #1
   13928:	cmp	r3, r6
   1392c:	bcs	1394c <__mempcpy_chk@plt+0x27c0>
   13930:	mov	r2, r4
   13934:	and	r7, r5, #192	; 0xc0
   13938:	mov	r4, #48	; 0x30
   1393c:	orr	r7, r4, r7, lsr #6
   13940:	mov	r4, r2
   13944:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13948:	strb	r7, [r2, r3]
   1394c:	add	r3, r8, #2
   13950:	cmp	r3, r6
   13954:	bcs	13974 <__mempcpy_chk@plt+0x27e8>
   13958:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1395c:	mov	r6, r4
   13960:	lsr	r7, r5, #3
   13964:	mov	r4, #6
   13968:	bfi	r7, r4, #3, #29
   1396c:	mov	r4, r6
   13970:	strb	r7, [r2, r3]
   13974:	str	r0, [fp, #-48]	; 0xffffffd0
   13978:	ldr	r0, [sp, #76]	; 0x4c
   1397c:	mov	r3, #6
   13980:	add	r8, r8, #3
   13984:	bfi	r5, r3, #3, #29
   13988:	mov	r3, #1
   1398c:	ldr	r2, [sp, #36]	; 0x24
   13990:	and	r9, r3, #1
   13994:	cmp	r2, r1
   13998:	bhi	137c4 <__mempcpy_chk@plt+0x2638>
   1399c:	cmp	r9, #0
   139a0:	sub	r7, r1, #1
   139a4:	mov	r0, r5
   139a8:	movwne	r9, #1
   139ac:	cmp	r9, #0
   139b0:	bne	139f4 <__mempcpy_chk@plt+0x2868>
   139b4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   139b8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   139bc:	tst	r5, #1
   139c0:	beq	13564 <__mempcpy_chk@plt+0x23d8>
   139c4:	cmp	r8, r6
   139c8:	mov	r5, #0
   139cc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   139d0:	movcc	r1, #39	; 0x27
   139d4:	strbcc	r1, [r2, r8]
   139d8:	add	r1, r8, #1
   139dc:	add	r8, r8, #2
   139e0:	cmp	r1, r6
   139e4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   139e8:	movcc	r2, #39	; 0x27
   139ec:	strbcc	r2, [r3, r1]
   139f0:	b	13564 <__mempcpy_chk@plt+0x23d8>
   139f4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   139f8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   139fc:	b	13564 <__mempcpy_chk@plt+0x23d8>
   13a00:	cmp	r8, r1
   13a04:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a08:	movcc	r0, #39	; 0x27
   13a0c:	strbcc	r0, [r2, r8]
   13a10:	add	r0, r8, #1
   13a14:	cmp	r0, r1
   13a18:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13a1c:	movcc	r2, #36	; 0x24
   13a20:	strbcc	r2, [r3, r0]
   13a24:	add	r0, r8, #2
   13a28:	cmp	r0, r1
   13a2c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13a30:	movcc	r2, #39	; 0x27
   13a34:	strbcc	r2, [r3, r0]
   13a38:	add	r0, r8, #3
   13a3c:	mov	r3, #1
   13a40:	cmp	r0, r1
   13a44:	add	r8, r0, #1
   13a48:	str	r3, [fp, #-48]	; 0xffffffd0
   13a4c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a50:	movcc	r1, #92	; 0x5c
   13a54:	strbcc	r1, [r2, r0]
   13a58:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13a5c:	cmp	r1, #2
   13a60:	beq	13ac4 <__mempcpy_chk@plt+0x2938>
   13a64:	add	r1, r7, #1
   13a68:	mov	sl, #0
   13a6c:	mov	r9, #1
   13a70:	mov	r5, #48	; 0x30
   13a74:	cmp	r1, lr
   13a78:	bcs	13240 <__mempcpy_chk@plt+0x20b4>
   13a7c:	ldrb	r1, [ip, r1]
   13a80:	sub	r1, r1, #48	; 0x30
   13a84:	uxtb	r1, r1
   13a88:	cmp	r1, #9
   13a8c:	bhi	13240 <__mempcpy_chk@plt+0x20b4>
   13a90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a94:	cmp	r8, r1
   13a98:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a9c:	movcc	r1, #48	; 0x30
   13aa0:	strbcc	r1, [r2, r8]
   13aa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13aa8:	add	r1, r0, #2
   13aac:	add	r8, r0, #3
   13ab0:	cmp	r1, r2
   13ab4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13ab8:	movcc	r2, #48	; 0x30
   13abc:	strbcc	r2, [r3, r1]
   13ac0:	b	13240 <__mempcpy_chk@plt+0x20b4>
   13ac4:	mov	r0, #48	; 0x30
   13ac8:	mov	r9, #1
   13acc:	mov	sl, #0
   13ad0:	b	134d8 <__mempcpy_chk@plt+0x234c>
   13ad4:	mov	sl, #0
   13ad8:	b	13b14 <__mempcpy_chk@plt+0x2988>
   13adc:	mov	sl, #0
   13ae0:	cmp	lr, r6
   13ae4:	bls	13b14 <__mempcpy_chk@plt+0x2988>
   13ae8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13aec:	ldr	r6, [sp, #40]	; 0x28
   13af0:	ldr	r0, [sp, #36]	; 0x24
   13af4:	ldrb	r0, [r0, r6]
   13af8:	cmp	r0, #0
   13afc:	beq	13b1c <__mempcpy_chk@plt+0x2990>
   13b00:	add	r6, r6, #1
   13b04:	add	r0, r7, r6
   13b08:	cmp	r0, lr
   13b0c:	bcc	13af0 <__mempcpy_chk@plt+0x2964>
   13b10:	b	13b1c <__mempcpy_chk@plt+0x2990>
   13b14:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b18:	ldr	r6, [sp, #40]	; 0x28
   13b1c:	mov	r1, r6
   13b20:	ldr	r4, [sp, #20]
   13b24:	ldr	r6, [sp, #76]	; 0x4c
   13b28:	b	1341c <__mempcpy_chk@plt+0x2290>
   13b2c:	mov	lr, r7
   13b30:	b	13b38 <__mempcpy_chk@plt+0x29ac>
   13b34:	mvn	lr, #0
   13b38:	ldr	r9, [fp, #-64]	; 0xffffffc0
   13b3c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b40:	eor	r0, r9, #2
   13b44:	orr	r0, r0, r8
   13b48:	clz	r0, r0
   13b4c:	lsr	r0, r0, #5
   13b50:	tst	r1, r0
   13b54:	bne	13c50 <__mempcpy_chk@plt+0x2ac4>
   13b58:	mov	r0, r1
   13b5c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b60:	cmp	r9, #2
   13b64:	movwne	r1, #1
   13b68:	orr	r0, r0, r1
   13b6c:	tst	r0, #1
   13b70:	bne	13c90 <__mempcpy_chk@plt+0x2b04>
   13b74:	ldr	r0, [sp, #52]	; 0x34
   13b78:	ldr	r1, [sp, #68]	; 0x44
   13b7c:	str	lr, [sp, #80]	; 0x50
   13b80:	eor	r0, r0, #1
   13b84:	tst	r0, #1
   13b88:	bne	13c90 <__mempcpy_chk@plt+0x2b04>
   13b8c:	tst	r4, #1
   13b90:	bne	13c58 <__mempcpy_chk@plt+0x2acc>
   13b94:	mov	r7, #0
   13b98:	cmp	r1, #0
   13b9c:	beq	13c88 <__mempcpy_chk@plt+0x2afc>
   13ba0:	ldr	r0, [sp, #84]	; 0x54
   13ba4:	mov	r3, #0
   13ba8:	cmp	r6, #0
   13bac:	mov	r2, #0
   13bb0:	mov	r4, r1
   13bb4:	str	r3, [fp, #-72]	; 0xffffffb8
   13bb8:	beq	12cf4 <__mempcpy_chk@plt+0x1b68>
   13bbc:	b	13c90 <__mempcpy_chk@plt+0x2b04>
   13bc0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13bc4:	b	13bec <__mempcpy_chk@plt+0x2a60>
   13bc8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13bcc:	mov	r2, #1
   13bd0:	mov	lr, r4
   13bd4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13bd8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13bdc:	b	13bf0 <__mempcpy_chk@plt+0x2a64>
   13be0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13be4:	mov	r7, #2
   13be8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13bec:	ldr	r2, [sp, #84]	; 0x54
   13bf0:	mov	r0, #0
   13bf4:	ldr	r1, [fp, #12]
   13bf8:	tst	r2, #1
   13bfc:	mov	r2, r7
   13c00:	mov	r3, lr
   13c04:	str	r0, [sp, #8]
   13c08:	ldr	r0, [sp, #64]	; 0x40
   13c0c:	movwne	r2, #4
   13c10:	cmp	r7, #2
   13c14:	movne	r2, r7
   13c18:	str	r2, [sp]
   13c1c:	mov	r2, ip
   13c20:	bic	r1, r1, #2
   13c24:	str	r0, [sp, #12]
   13c28:	ldr	r0, [sp, #72]	; 0x48
   13c2c:	str	r1, [sp, #4]
   13c30:	mov	r1, r6
   13c34:	str	r0, [sp, #16]
   13c38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c3c:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   13c40:	mov	r8, r0
   13c44:	mov	r0, r8
   13c48:	sub	sp, fp, #28
   13c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c50:	mov	r7, #2
   13c54:	b	13bec <__mempcpy_chk@plt+0x2a60>
   13c58:	mov	r0, #5
   13c5c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13c60:	ldr	r3, [sp, #80]	; 0x50
   13c64:	str	r0, [sp]
   13c68:	ldr	r0, [fp, #12]
   13c6c:	str	r0, [sp, #4]
   13c70:	ldr	r0, [fp, #16]
   13c74:	str	r0, [sp, #8]
   13c78:	ldr	r0, [sp, #64]	; 0x40
   13c7c:	str	r0, [sp, #12]
   13c80:	ldr	r0, [sp, #72]	; 0x48
   13c84:	b	13c34 <__mempcpy_chk@plt+0x2aa8>
   13c88:	mov	r0, #0
   13c8c:	str	r0, [fp, #-72]	; 0xffffffb8
   13c90:	ldr	r1, [sp, #92]	; 0x5c
   13c94:	cmp	r1, #0
   13c98:	beq	13cd8 <__mempcpy_chk@plt+0x2b4c>
   13c9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ca0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13ca4:	tst	r0, #1
   13ca8:	bne	13cdc <__mempcpy_chk@plt+0x2b50>
   13cac:	ldrb	r0, [r1]
   13cb0:	cmp	r0, #0
   13cb4:	beq	13cdc <__mempcpy_chk@plt+0x2b50>
   13cb8:	add	r1, r1, #1
   13cbc:	cmp	r8, r6
   13cc0:	strbcc	r0, [r2, r8]
   13cc4:	add	r8, r8, #1
   13cc8:	ldrb	r0, [r1], #1
   13ccc:	cmp	r0, #0
   13cd0:	bne	13cbc <__mempcpy_chk@plt+0x2b30>
   13cd4:	b	13cdc <__mempcpy_chk@plt+0x2b50>
   13cd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13cdc:	cmp	r8, r6
   13ce0:	movcc	r0, #0
   13ce4:	strbcc	r0, [r2, r8]
   13ce8:	b	13c44 <__mempcpy_chk@plt+0x2ab8>
   13cec:	mov	r2, #1
   13cf0:	b	13bd4 <__mempcpy_chk@plt+0x2a48>
   13cf4:	mov	r7, #5
   13cf8:	b	13be8 <__mempcpy_chk@plt+0x2a5c>
   13cfc:	bl	11174 <abort@plt>
   13d00:	mov	r3, r2
   13d04:	mov	r2, #0
   13d08:	b	13d0c <__mempcpy_chk@plt+0x2b80>
   13d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d10:	add	fp, sp, #28
   13d14:	sub	sp, sp, #36	; 0x24
   13d18:	movw	r8, #29080	; 0x7198
   13d1c:	cmp	r3, #0
   13d20:	mov	r4, r2
   13d24:	str	r2, [sp, #24]
   13d28:	mov	r5, r1
   13d2c:	mov	r6, r0
   13d30:	str	r0, [sp, #20]
   13d34:	movt	r8, #2
   13d38:	movne	r8, r3
   13d3c:	bl	1109c <__errno_location@plt>
   13d40:	str	r0, [sp, #28]
   13d44:	cmp	r4, #0
   13d48:	add	sl, r8, #8
   13d4c:	ldm	r8, {r3, r9}
   13d50:	ldr	r7, [r0]
   13d54:	ldr	r1, [r8, #40]	; 0x28
   13d58:	ldr	r2, [r8, #44]	; 0x2c
   13d5c:	mov	r0, #0
   13d60:	orreq	r9, r9, #1
   13d64:	str	r7, [sp, #32]
   13d68:	mov	r7, r5
   13d6c:	stm	sp, {r3, r9, sl}
   13d70:	str	r1, [sp, #12]
   13d74:	str	r2, [sp, #16]
   13d78:	mov	r1, #0
   13d7c:	mov	r2, r6
   13d80:	mov	r3, r5
   13d84:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   13d88:	add	r4, r0, #1
   13d8c:	mov	r5, r0
   13d90:	mov	r0, r4
   13d94:	bl	14a70 <__mempcpy_chk@plt+0x38e4>
   13d98:	mov	r6, r0
   13d9c:	ldr	r0, [r8]
   13da0:	ldr	r2, [r8, #44]	; 0x2c
   13da4:	ldr	r1, [r8, #40]	; 0x28
   13da8:	mov	r3, r7
   13dac:	stm	sp, {r0, r9, sl}
   13db0:	str	r2, [sp, #16]
   13db4:	str	r1, [sp, #12]
   13db8:	mov	r0, r6
   13dbc:	mov	r1, r4
   13dc0:	ldr	r2, [sp, #20]
   13dc4:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   13dc8:	ldr	r0, [sp, #24]
   13dcc:	ldr	r1, [sp, #32]
   13dd0:	ldr	r2, [sp, #28]
   13dd4:	cmp	r0, #0
   13dd8:	str	r1, [r2]
   13ddc:	strne	r5, [r0]
   13de0:	mov	r0, r6
   13de4:	sub	sp, fp, #28
   13de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13df0:	add	fp, sp, #24
   13df4:	movw	r5, #28940	; 0x710c
   13df8:	movw	r8, #28936	; 0x7108
   13dfc:	movt	r5, #2
   13e00:	movt	r8, #2
   13e04:	ldr	r0, [r5]
   13e08:	ldr	r4, [r8]
   13e0c:	cmp	r0, #2
   13e10:	blt	13e3c <__mempcpy_chk@plt+0x2cb0>
   13e14:	add	r7, r4, #12
   13e18:	mov	r6, #0
   13e1c:	ldr	r0, [r7, r6, lsl #3]
   13e20:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   13e24:	ldr	r1, [r5]
   13e28:	add	r2, r6, #2
   13e2c:	add	r0, r6, #1
   13e30:	mov	r6, r0
   13e34:	cmp	r2, r1
   13e38:	blt	13e1c <__mempcpy_chk@plt+0x2c90>
   13e3c:	ldr	r0, [r4, #4]
   13e40:	movw	r7, #29128	; 0x71c8
   13e44:	movt	r7, #2
   13e48:	cmp	r0, r7
   13e4c:	beq	13e64 <__mempcpy_chk@plt+0x2cd8>
   13e50:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   13e54:	movw	r0, #28944	; 0x7110
   13e58:	mov	r6, #256	; 0x100
   13e5c:	movt	r0, #2
   13e60:	strd	r6, [r0]
   13e64:	movw	r6, #28944	; 0x7110
   13e68:	movt	r6, #2
   13e6c:	cmp	r4, r6
   13e70:	beq	13e80 <__mempcpy_chk@plt+0x2cf4>
   13e74:	mov	r0, r4
   13e78:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   13e7c:	str	r6, [r8]
   13e80:	mov	r0, #1
   13e84:	str	r0, [r5]
   13e88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e8c:	movw	r3, #29080	; 0x7198
   13e90:	mvn	r2, #0
   13e94:	movt	r3, #2
   13e98:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   13e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ea0:	add	fp, sp, #28
   13ea4:	sub	sp, sp, #44	; 0x2c
   13ea8:	mov	r7, r3
   13eac:	str	r2, [sp, #36]	; 0x24
   13eb0:	str	r1, [sp, #32]
   13eb4:	mov	r5, r0
   13eb8:	bl	1109c <__errno_location@plt>
   13ebc:	cmp	r5, #0
   13ec0:	blt	1402c <__mempcpy_chk@plt+0x2ea0>
   13ec4:	cmn	r5, #-2147483647	; 0x80000001
   13ec8:	beq	1402c <__mempcpy_chk@plt+0x2ea0>
   13ecc:	movw	r8, #28940	; 0x710c
   13ed0:	movw	r4, #28936	; 0x7108
   13ed4:	str	r0, [sp, #28]
   13ed8:	ldr	r0, [r0]
   13edc:	movt	r8, #2
   13ee0:	movt	r4, #2
   13ee4:	ldr	r1, [r8]
   13ee8:	ldr	r6, [r4]
   13eec:	str	r0, [sp, #24]
   13ef0:	cmp	r1, r5
   13ef4:	ble	13f00 <__mempcpy_chk@plt+0x2d74>
   13ef8:	mov	sl, r6
   13efc:	b	13f68 <__mempcpy_chk@plt+0x2ddc>
   13f00:	movw	r9, #28944	; 0x7110
   13f04:	mov	r0, #8
   13f08:	add	r2, r5, #1
   13f0c:	str	r1, [fp, #-32]	; 0xffffffe0
   13f10:	mvn	r3, #-2147483648	; 0x80000000
   13f14:	movt	r9, #2
   13f18:	str	r0, [sp]
   13f1c:	sub	r2, r2, r1
   13f20:	sub	r1, fp, #32
   13f24:	subs	r0, r6, r9
   13f28:	movne	r0, r6
   13f2c:	bl	14ba0 <__mempcpy_chk@plt+0x3a14>
   13f30:	cmp	r6, r9
   13f34:	mov	sl, r0
   13f38:	str	r0, [r4]
   13f3c:	ldrdeq	r0, [r9]
   13f40:	stmeq	sl, {r0, r1}
   13f44:	ldr	r1, [r8]
   13f48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f4c:	add	r0, sl, r1, lsl #3
   13f50:	sub	r1, r2, r1
   13f54:	lsl	r2, r1, #3
   13f58:	mov	r1, #0
   13f5c:	bl	110c0 <memset@plt>
   13f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f64:	str	r0, [r8]
   13f68:	mov	r9, sl
   13f6c:	ldr	r6, [r9, r5, lsl #3]!
   13f70:	ldr	r4, [r9, #4]!
   13f74:	ldm	r7, {r0, r1}
   13f78:	ldr	r2, [r7, #40]	; 0x28
   13f7c:	ldr	r3, [r7, #44]	; 0x2c
   13f80:	orr	r8, r1, #1
   13f84:	add	r1, r7, #8
   13f88:	stm	sp, {r0, r8}
   13f8c:	add	r0, sp, #8
   13f90:	str	r1, [sp, #20]
   13f94:	stm	r0, {r1, r2, r3}
   13f98:	mov	r0, r4
   13f9c:	mov	r1, r6
   13fa0:	ldr	r2, [sp, #32]
   13fa4:	ldr	r3, [sp, #36]	; 0x24
   13fa8:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   13fac:	cmp	r6, r0
   13fb0:	bhi	14014 <__mempcpy_chk@plt+0x2e88>
   13fb4:	add	r6, r0, #1
   13fb8:	movw	r0, #29128	; 0x71c8
   13fbc:	movt	r0, #2
   13fc0:	str	r6, [sl, r5, lsl #3]
   13fc4:	cmp	r4, r0
   13fc8:	beq	13fd4 <__mempcpy_chk@plt+0x2e48>
   13fcc:	mov	r0, r4
   13fd0:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   13fd4:	mov	r0, r6
   13fd8:	bl	14a70 <__mempcpy_chk@plt+0x38e4>
   13fdc:	str	r0, [r9]
   13fe0:	mov	r4, r0
   13fe4:	add	r3, sp, #8
   13fe8:	ldr	r0, [r7]
   13fec:	ldr	r1, [r7, #40]	; 0x28
   13ff0:	ldr	r2, [r7, #44]	; 0x2c
   13ff4:	stm	sp, {r0, r8}
   13ff8:	ldr	r0, [sp, #20]
   13ffc:	stm	r3, {r0, r1, r2}
   14000:	mov	r0, r4
   14004:	mov	r1, r6
   14008:	ldr	r2, [sp, #32]
   1400c:	ldr	r3, [sp, #36]	; 0x24
   14010:	bl	12c7c <__mempcpy_chk@plt+0x1af0>
   14014:	ldr	r0, [sp, #28]
   14018:	ldr	r1, [sp, #24]
   1401c:	str	r1, [r0]
   14020:	mov	r0, r4
   14024:	sub	sp, fp, #28
   14028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1402c:	bl	11174 <abort@plt>
   14030:	movw	r3, #29080	; 0x7198
   14034:	movt	r3, #2
   14038:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   1403c:	movw	r3, #29080	; 0x7198
   14040:	mov	r1, r0
   14044:	mov	r0, #0
   14048:	mvn	r2, #0
   1404c:	movt	r3, #2
   14050:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   14054:	movw	r3, #29080	; 0x7198
   14058:	mov	r2, r1
   1405c:	mov	r1, r0
   14060:	mov	r0, #0
   14064:	movt	r3, #2
   14068:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   1406c:	push	{fp, lr}
   14070:	mov	fp, sp
   14074:	sub	sp, sp, #48	; 0x30
   14078:	vmov.i32	q8, #0	; 0x00000000
   1407c:	mov	ip, #32
   14080:	mov	r3, sp
   14084:	mov	lr, r2
   14088:	cmp	r1, #10
   1408c:	add	r2, r3, #16
   14090:	vst1.64	{d16-d17}, [r3], ip
   14094:	vst1.64	{d16-d17}, [r3]
   14098:	vst1.64	{d16-d17}, [r2]
   1409c:	beq	140bc <__mempcpy_chk@plt+0x2f30>
   140a0:	str	r1, [sp]
   140a4:	mov	r3, sp
   140a8:	mov	r1, lr
   140ac:	mvn	r2, #0
   140b0:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   140b4:	mov	sp, fp
   140b8:	pop	{fp, pc}
   140bc:	bl	11174 <abort@plt>
   140c0:	push	{r4, sl, fp, lr}
   140c4:	add	fp, sp, #8
   140c8:	sub	sp, sp, #48	; 0x30
   140cc:	mov	ip, r3
   140d0:	mov	r3, sp
   140d4:	vmov.i32	q8, #0	; 0x00000000
   140d8:	mov	lr, #32
   140dc:	cmp	r1, #10
   140e0:	add	r4, r3, #16
   140e4:	vst1.64	{d16-d17}, [r3], lr
   140e8:	vst1.64	{d16-d17}, [r3]
   140ec:	vst1.64	{d16-d17}, [r4]
   140f0:	beq	14110 <__mempcpy_chk@plt+0x2f84>
   140f4:	str	r1, [sp]
   140f8:	mov	r1, r2
   140fc:	mov	r3, sp
   14100:	mov	r2, ip
   14104:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   14108:	sub	sp, fp, #8
   1410c:	pop	{r4, sl, fp, pc}
   14110:	bl	11174 <abort@plt>
   14114:	mov	r2, r1
   14118:	mov	r1, r0
   1411c:	mov	r0, #0
   14120:	b	1406c <__mempcpy_chk@plt+0x2ee0>
   14124:	mov	r3, r2
   14128:	mov	r2, r1
   1412c:	mov	r1, r0
   14130:	mov	r0, #0
   14134:	b	140c0 <__mempcpy_chk@plt+0x2f34>
   14138:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1413c:	add	fp, sp, #24
   14140:	sub	sp, sp, #48	; 0x30
   14144:	movw	r8, #29080	; 0x7198
   14148:	mov	lr, r0
   1414c:	mov	r3, sp
   14150:	mov	ip, r1
   14154:	movt	r8, #2
   14158:	mov	r1, r3
   1415c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14160:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14164:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14168:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1416c:	ubfx	r0, r2, #5, #3
   14170:	and	r2, r2, #31
   14174:	mov	r4, #1
   14178:	add	r0, r3, r0, lsl #2
   1417c:	ldr	r1, [r0, #8]
   14180:	bic	r4, r4, r1, lsr r2
   14184:	eor	r1, r1, r4, lsl r2
   14188:	mov	r2, ip
   1418c:	str	r1, [r0, #8]
   14190:	mov	r0, #0
   14194:	mov	r1, lr
   14198:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   1419c:	sub	sp, fp, #24
   141a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   141a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141a8:	add	fp, sp, #24
   141ac:	sub	sp, sp, #48	; 0x30
   141b0:	movw	lr, #29080	; 0x7198
   141b4:	mov	ip, r0
   141b8:	mov	r3, sp
   141bc:	movt	lr, #2
   141c0:	mov	r2, r3
   141c4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   141c8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   141cc:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   141d0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   141d4:	ubfx	r0, r1, #5, #3
   141d8:	and	r1, r1, #31
   141dc:	mov	r7, #1
   141e0:	add	r0, r3, r0, lsl #2
   141e4:	ldr	r2, [r0, #8]
   141e8:	bic	r7, r7, r2, lsr r1
   141ec:	eor	r1, r2, r7, lsl r1
   141f0:	mvn	r2, #0
   141f4:	str	r1, [r0, #8]
   141f8:	mov	r0, #0
   141fc:	mov	r1, ip
   14200:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   14204:	sub	sp, fp, #24
   14208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1420c:	push	{r4, r5, r6, r7, fp, lr}
   14210:	add	fp, sp, #16
   14214:	sub	sp, sp, #48	; 0x30
   14218:	movw	lr, #29080	; 0x7198
   1421c:	mov	ip, r0
   14220:	mov	r3, sp
   14224:	movt	lr, #2
   14228:	mov	r2, r3
   1422c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14230:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14234:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   14238:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1423c:	mov	r1, ip
   14240:	mvn	r2, #0
   14244:	ldr	r0, [sp, #12]
   14248:	orr	r0, r0, #67108864	; 0x4000000
   1424c:	str	r0, [sp, #12]
   14250:	mov	r0, #0
   14254:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   14258:	sub	sp, fp, #16
   1425c:	pop	{r4, r5, r6, r7, fp, pc}
   14260:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14264:	add	fp, sp, #24
   14268:	sub	sp, sp, #48	; 0x30
   1426c:	movw	r8, #29080	; 0x7198
   14270:	mov	ip, r1
   14274:	mov	lr, r0
   14278:	mov	r3, sp
   1427c:	movt	r8, #2
   14280:	mov	r2, r3
   14284:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14288:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1428c:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14290:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14294:	mov	r1, lr
   14298:	mov	r2, ip
   1429c:	ldr	r0, [sp, #12]
   142a0:	orr	r0, r0, #67108864	; 0x4000000
   142a4:	str	r0, [sp, #12]
   142a8:	mov	r0, #0
   142ac:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   142b0:	sub	sp, fp, #24
   142b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142bc:	add	fp, sp, #24
   142c0:	sub	sp, sp, #96	; 0x60
   142c4:	mov	lr, sp
   142c8:	vmov.i32	q8, #0	; 0x00000000
   142cc:	mov	ip, r2
   142d0:	cmp	r1, #10
   142d4:	add	r3, lr, #16
   142d8:	mov	r2, lr
   142dc:	vst1.64	{d16-d17}, [r3]
   142e0:	mov	r3, #28
   142e4:	vst1.64	{d16-d17}, [r2], r3
   142e8:	vst1.32	{d16-d17}, [r2]
   142ec:	beq	1432c <__mempcpy_chk@plt+0x31a0>
   142f0:	str	r1, [sp, #48]	; 0x30
   142f4:	add	r3, sp, #48	; 0x30
   142f8:	ldm	lr!, {r2, r4, r5, r6, r7}
   142fc:	add	r1, r3, #4
   14300:	stmia	r1!, {r2, r4, r5, r6, r7}
   14304:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14308:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1430c:	mvn	r2, #0
   14310:	ldr	r1, [sp, #60]	; 0x3c
   14314:	orr	r1, r1, #67108864	; 0x4000000
   14318:	str	r1, [sp, #60]	; 0x3c
   1431c:	mov	r1, ip
   14320:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   14324:	sub	sp, fp, #24
   14328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1432c:	bl	11174 <abort@plt>
   14330:	push	{fp, lr}
   14334:	mov	fp, sp
   14338:	sub	sp, sp, #8
   1433c:	mvn	ip, #0
   14340:	str	ip, [sp]
   14344:	bl	14350 <__mempcpy_chk@plt+0x31c4>
   14348:	mov	sp, fp
   1434c:	pop	{fp, pc}
   14350:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14354:	add	fp, sp, #24
   14358:	sub	sp, sp, #48	; 0x30
   1435c:	movw	ip, #29080	; 0x7198
   14360:	mov	lr, r3
   14364:	mov	r3, sp
   14368:	cmp	r1, #0
   1436c:	movt	ip, #2
   14370:	cmpne	r2, #0
   14374:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14378:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1437c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14380:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14384:	mov	r3, #10
   14388:	str	r3, [sp]
   1438c:	bne	14394 <__mempcpy_chk@plt+0x3208>
   14390:	bl	11174 <abort@plt>
   14394:	ldr	ip, [fp, #8]
   14398:	str	r2, [sp, #44]	; 0x2c
   1439c:	str	r1, [sp, #40]	; 0x28
   143a0:	mov	r3, sp
   143a4:	mov	r1, lr
   143a8:	mov	r2, ip
   143ac:	bl	13e9c <__mempcpy_chk@plt+0x2d10>
   143b0:	sub	sp, fp, #24
   143b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   143b8:	push	{fp, lr}
   143bc:	mov	fp, sp
   143c0:	sub	sp, sp, #8
   143c4:	mov	r3, r2
   143c8:	mov	r2, r1
   143cc:	mov	r1, r0
   143d0:	mvn	r0, #0
   143d4:	str	r0, [sp]
   143d8:	mov	r0, #0
   143dc:	bl	14350 <__mempcpy_chk@plt+0x31c4>
   143e0:	mov	sp, fp
   143e4:	pop	{fp, pc}
   143e8:	push	{fp, lr}
   143ec:	mov	fp, sp
   143f0:	sub	sp, sp, #8
   143f4:	mov	ip, r2
   143f8:	mov	r2, r1
   143fc:	mov	r1, r0
   14400:	str	r3, [sp]
   14404:	mov	r0, #0
   14408:	mov	r3, ip
   1440c:	bl	14350 <__mempcpy_chk@plt+0x31c4>
   14410:	mov	sp, fp
   14414:	pop	{fp, pc}
   14418:	movw	r3, #28952	; 0x7118
   1441c:	movt	r3, #2
   14420:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   14424:	movw	r3, #28952	; 0x7118
   14428:	mov	r2, r1
   1442c:	mov	r1, r0
   14430:	mov	r0, #0
   14434:	movt	r3, #2
   14438:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   1443c:	movw	r3, #28952	; 0x7118
   14440:	mvn	r2, #0
   14444:	movt	r3, #2
   14448:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   1444c:	movw	r3, #28952	; 0x7118
   14450:	mov	r1, r0
   14454:	mov	r0, #0
   14458:	mvn	r2, #0
   1445c:	movt	r3, #2
   14460:	b	13e9c <__mempcpy_chk@plt+0x2d10>
   14464:	push	{r4, r5, fp, lr}
   14468:	add	fp, sp, #8
   1446c:	mov	r5, r0
   14470:	mov	r4, r1
   14474:	mov	r0, #0
   14478:	mov	r2, #5
   1447c:	mov	r1, r5
   14480:	bl	10fa0 <dcgettext@plt>
   14484:	cmp	r0, r5
   14488:	popne	{r4, r5, fp, pc}
   1448c:	bl	15308 <__mempcpy_chk@plt+0x417c>
   14490:	ldrb	r1, [r0]
   14494:	and	r1, r1, #223	; 0xdf
   14498:	cmp	r1, #71	; 0x47
   1449c:	beq	14504 <__mempcpy_chk@plt+0x3378>
   144a0:	cmp	r1, #85	; 0x55
   144a4:	bne	14528 <__mempcpy_chk@plt+0x339c>
   144a8:	ldrb	r1, [r0, #1]
   144ac:	and	r1, r1, #223	; 0xdf
   144b0:	cmp	r1, #84	; 0x54
   144b4:	bne	14528 <__mempcpy_chk@plt+0x339c>
   144b8:	ldrb	r1, [r0, #2]
   144bc:	and	r1, r1, #223	; 0xdf
   144c0:	cmp	r1, #70	; 0x46
   144c4:	ldrbeq	r1, [r0, #3]
   144c8:	cmpeq	r1, #45	; 0x2d
   144cc:	bne	14528 <__mempcpy_chk@plt+0x339c>
   144d0:	ldrb	r1, [r0, #4]
   144d4:	cmp	r1, #56	; 0x38
   144d8:	ldrbeq	r0, [r0, #5]
   144dc:	cmpeq	r0, #0
   144e0:	bne	14528 <__mempcpy_chk@plt+0x339c>
   144e4:	ldrb	r1, [r5]
   144e8:	movw	r2, #24412	; 0x5f5c
   144ec:	movw	r0, #24416	; 0x5f60
   144f0:	movt	r2, #1
   144f4:	movt	r0, #1
   144f8:	cmp	r1, #96	; 0x60
   144fc:	moveq	r0, r2
   14500:	pop	{r4, r5, fp, pc}
   14504:	ldrb	r1, [r0, #1]
   14508:	and	r1, r1, #223	; 0xdf
   1450c:	cmp	r1, #66	; 0x42
   14510:	bne	14528 <__mempcpy_chk@plt+0x339c>
   14514:	ldrb	r1, [r0, #2]
   14518:	cmp	r1, #49	; 0x31
   1451c:	ldrbeq	r1, [r0, #3]
   14520:	cmpeq	r1, #56	; 0x38
   14524:	beq	14544 <__mempcpy_chk@plt+0x33b8>
   14528:	movw	r1, #24408	; 0x5f58
   1452c:	movw	r0, #23831	; 0x5d17
   14530:	cmp	r4, #9
   14534:	movt	r1, #1
   14538:	movt	r0, #1
   1453c:	moveq	r0, r1
   14540:	pop	{r4, r5, fp, pc}
   14544:	ldrb	r1, [r0, #4]
   14548:	cmp	r1, #48	; 0x30
   1454c:	ldrbeq	r1, [r0, #5]
   14550:	cmpeq	r1, #51	; 0x33
   14554:	bne	14528 <__mempcpy_chk@plt+0x339c>
   14558:	ldrb	r1, [r0, #6]
   1455c:	cmp	r1, #48	; 0x30
   14560:	ldrbeq	r0, [r0, #7]
   14564:	cmpeq	r0, #0
   14568:	bne	14528 <__mempcpy_chk@plt+0x339c>
   1456c:	ldrb	r1, [r5]
   14570:	movw	r2, #24420	; 0x5f64
   14574:	movw	r0, #24424	; 0x5f68
   14578:	movt	r2, #1
   1457c:	movt	r0, #1
   14580:	b	144f8 <__mempcpy_chk@plt+0x336c>
   14584:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14588:	add	fp, sp, #24
   1458c:	sub	sp, sp, #32
   14590:	ldr	r6, [fp, #12]
   14594:	ldr	r7, [fp, #8]
   14598:	mov	r4, r2
   1459c:	mov	r8, r0
   145a0:	cmp	r1, #0
   145a4:	beq	145cc <__mempcpy_chk@plt+0x3440>
   145a8:	movw	r2, #24512	; 0x5fc0
   145ac:	mov	r5, r1
   145b0:	str	r3, [sp, #4]
   145b4:	str	r4, [sp]
   145b8:	mov	r0, r8
   145bc:	mov	r1, #1
   145c0:	movt	r2, #1
   145c4:	mov	r3, r5
   145c8:	b	145e4 <__mempcpy_chk@plt+0x3458>
   145cc:	movw	r2, #24524	; 0x5fcc
   145d0:	str	r3, [sp]
   145d4:	mov	r0, r8
   145d8:	mov	r1, #1
   145dc:	mov	r3, r4
   145e0:	movt	r2, #1
   145e4:	bl	110e4 <__fprintf_chk@plt>
   145e8:	movw	r1, #24531	; 0x5fd3
   145ec:	mov	r0, #0
   145f0:	mov	r2, #5
   145f4:	movt	r1, #1
   145f8:	bl	10fa0 <dcgettext@plt>
   145fc:	movw	r2, #25249	; 0x62a1
   14600:	mov	r3, r0
   14604:	movw	r0, #2022	; 0x7e6
   14608:	mov	r1, #1
   1460c:	str	r0, [sp]
   14610:	movt	r2, #1
   14614:	mov	r0, r8
   14618:	bl	110e4 <__fprintf_chk@plt>
   1461c:	movw	r4, #23752	; 0x5cc8
   14620:	mov	r1, r8
   14624:	movt	r4, #1
   14628:	mov	r0, r4
   1462c:	bl	10ef8 <fputs_unlocked@plt>
   14630:	movw	r1, #24535	; 0x5fd7
   14634:	mov	r0, #0
   14638:	mov	r2, #5
   1463c:	movt	r1, #1
   14640:	bl	10fa0 <dcgettext@plt>
   14644:	movw	r3, #24706	; 0x6082
   14648:	mov	r2, r0
   1464c:	mov	r0, r8
   14650:	mov	r1, #1
   14654:	movt	r3, #1
   14658:	bl	110e4 <__fprintf_chk@plt>
   1465c:	mov	r0, r4
   14660:	mov	r1, r8
   14664:	bl	10ef8 <fputs_unlocked@plt>
   14668:	cmp	r6, #9
   1466c:	bhi	146d0 <__mempcpy_chk@plt+0x3544>
   14670:	add	r0, pc, #0
   14674:	ldr	pc, [r0, r6, lsl #2]
   14678:	andeq	r4, r1, r8, lsr #17
   1467c:	andeq	r4, r1, r0, lsr #13
   14680:	ldrdeq	r4, [r1], -ip
   14684:	andeq	r4, r1, r4, lsl #14
   14688:	andeq	r4, r1, ip, lsr #14
   1468c:	andeq	r4, r1, r4, asr r7
   14690:	andeq	r4, r1, ip, ror r7
   14694:			; <UNDEFINED> instruction: 0x000147b4
   14698:	andeq	r4, r1, r4, asr r8
   1469c:	strdeq	r4, [r1], -ip
   146a0:	movw	r1, #24740	; 0x60a4
   146a4:	mov	r0, #0
   146a8:	mov	r2, #5
   146ac:	movt	r1, #1
   146b0:	bl	10fa0 <dcgettext@plt>
   146b4:	ldr	r3, [r7]
   146b8:	mov	r2, r0
   146bc:	mov	r0, r8
   146c0:	mov	r1, #1
   146c4:	sub	sp, fp, #24
   146c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   146cc:	b	110e4 <__fprintf_chk@plt>
   146d0:	movw	r1, #25059	; 0x61e3
   146d4:	movt	r1, #1
   146d8:	b	14804 <__mempcpy_chk@plt+0x3678>
   146dc:	movw	r1, #24756	; 0x60b4
   146e0:	mov	r0, #0
   146e4:	mov	r2, #5
   146e8:	movt	r1, #1
   146ec:	bl	10fa0 <dcgettext@plt>
   146f0:	mov	r2, r0
   146f4:	ldr	r3, [r7]
   146f8:	ldr	r0, [r7, #4]
   146fc:	str	r0, [sp]
   14700:	b	147f0 <__mempcpy_chk@plt+0x3664>
   14704:	movw	r1, #24779	; 0x60cb
   14708:	mov	r0, #0
   1470c:	mov	r2, #5
   14710:	movt	r1, #1
   14714:	bl	10fa0 <dcgettext@plt>
   14718:	ldr	r3, [r7]
   1471c:	mov	r2, r0
   14720:	ldmib	r7, {r0, r1}
   14724:	stm	sp, {r0, r1}
   14728:	b	147f0 <__mempcpy_chk@plt+0x3664>
   1472c:	movw	r1, #24807	; 0x60e7
   14730:	mov	r0, #0
   14734:	mov	r2, #5
   14738:	movt	r1, #1
   1473c:	bl	10fa0 <dcgettext@plt>
   14740:	ldr	r3, [r7]
   14744:	mov	r2, r0
   14748:	ldmib	r7, {r0, r1, r7}
   1474c:	stm	sp, {r0, r1, r7}
   14750:	b	147f0 <__mempcpy_chk@plt+0x3664>
   14754:	movw	r1, #24839	; 0x6107
   14758:	mov	r0, #0
   1475c:	mov	r2, #5
   14760:	movt	r1, #1
   14764:	bl	10fa0 <dcgettext@plt>
   14768:	ldr	r3, [r7]
   1476c:	mov	r2, r0
   14770:	ldmib	r7, {r0, r1, r6, r7}
   14774:	stm	sp, {r0, r1, r6, r7}
   14778:	b	147f0 <__mempcpy_chk@plt+0x3664>
   1477c:	movw	r1, #24875	; 0x612b
   14780:	mov	r0, #0
   14784:	mov	r2, #5
   14788:	movt	r1, #1
   1478c:	bl	10fa0 <dcgettext@plt>
   14790:	ldr	r3, [r7]
   14794:	mov	r2, r0
   14798:	ldmib	r7, {r0, r1, r6}
   1479c:	ldr	r5, [r7, #16]
   147a0:	ldr	r7, [r7, #20]
   147a4:	stm	sp, {r0, r1, r6}
   147a8:	str	r5, [sp, #12]
   147ac:	str	r7, [sp, #16]
   147b0:	b	147f0 <__mempcpy_chk@plt+0x3664>
   147b4:	movw	r1, #24915	; 0x6153
   147b8:	mov	r0, #0
   147bc:	mov	r2, #5
   147c0:	movt	r1, #1
   147c4:	bl	10fa0 <dcgettext@plt>
   147c8:	ldr	r3, [r7]
   147cc:	mov	r2, r0
   147d0:	ldmib	r7, {r0, r1, r6}
   147d4:	ldr	r5, [r7, #16]
   147d8:	ldr	r4, [r7, #20]
   147dc:	ldr	r7, [r7, #24]
   147e0:	stm	sp, {r0, r1, r6}
   147e4:	str	r5, [sp, #12]
   147e8:	str	r4, [sp, #16]
   147ec:	str	r7, [sp, #20]
   147f0:	mov	r0, r8
   147f4:	mov	r1, #1
   147f8:	b	148a4 <__mempcpy_chk@plt+0x3718>
   147fc:	movw	r1, #25007	; 0x61af
   14800:	movt	r1, #1
   14804:	mov	r0, #0
   14808:	mov	r2, #5
   1480c:	bl	10fa0 <dcgettext@plt>
   14810:	mov	ip, r0
   14814:	ldr	r3, [r7]
   14818:	ldr	r0, [r7, #4]
   1481c:	ldr	r1, [r7, #8]
   14820:	ldr	r6, [r7, #12]
   14824:	ldr	r5, [r7, #16]
   14828:	ldr	r4, [r7, #20]
   1482c:	ldr	r2, [r7, #24]
   14830:	ldr	lr, [r7, #28]
   14834:	ldr	r7, [r7, #32]
   14838:	stm	sp, {r0, r1, r6}
   1483c:	str	r5, [sp, #12]
   14840:	str	r4, [sp, #16]
   14844:	str	r2, [sp, #20]
   14848:	str	lr, [sp, #24]
   1484c:	str	r7, [sp, #28]
   14850:	b	14898 <__mempcpy_chk@plt+0x370c>
   14854:	movw	r1, #24959	; 0x617f
   14858:	mov	r0, #0
   1485c:	mov	r2, #5
   14860:	movt	r1, #1
   14864:	bl	10fa0 <dcgettext@plt>
   14868:	mov	ip, r0
   1486c:	ldr	r3, [r7]
   14870:	ldmib	r7, {r0, r1, r6}
   14874:	ldr	r5, [r7, #16]
   14878:	ldr	r4, [r7, #20]
   1487c:	ldr	r2, [r7, #24]
   14880:	ldr	r7, [r7, #28]
   14884:	stm	sp, {r0, r1, r6}
   14888:	str	r5, [sp, #12]
   1488c:	str	r4, [sp, #16]
   14890:	str	r2, [sp, #20]
   14894:	str	r7, [sp, #24]
   14898:	mov	r0, r8
   1489c:	mov	r1, #1
   148a0:	mov	r2, ip
   148a4:	bl	110e4 <__fprintf_chk@plt>
   148a8:	sub	sp, fp, #24
   148ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148b0:	push	{r4, sl, fp, lr}
   148b4:	add	fp, sp, #8
   148b8:	sub	sp, sp, #8
   148bc:	ldr	ip, [fp, #8]
   148c0:	mov	lr, #0
   148c4:	ldr	r4, [ip, lr, lsl #2]
   148c8:	add	lr, lr, #1
   148cc:	cmp	r4, #0
   148d0:	bne	148c4 <__mempcpy_chk@plt+0x3738>
   148d4:	sub	r4, lr, #1
   148d8:	str	ip, [sp]
   148dc:	str	r4, [sp, #4]
   148e0:	bl	14584 <__mempcpy_chk@plt+0x33f8>
   148e4:	sub	sp, fp, #8
   148e8:	pop	{r4, sl, fp, pc}
   148ec:	push	{r4, r5, fp, lr}
   148f0:	add	fp, sp, #8
   148f4:	sub	sp, sp, #48	; 0x30
   148f8:	ldr	r4, [fp, #8]
   148fc:	mov	ip, #0
   14900:	add	lr, sp, #8
   14904:	ldr	r5, [r4]
   14908:	cmp	r5, #0
   1490c:	str	r5, [lr, ip, lsl #2]
   14910:	beq	14924 <__mempcpy_chk@plt+0x3798>
   14914:	add	ip, ip, #1
   14918:	add	r4, r4, #4
   1491c:	cmp	ip, #10
   14920:	bcc	14904 <__mempcpy_chk@plt+0x3778>
   14924:	str	lr, [sp]
   14928:	str	ip, [sp, #4]
   1492c:	bl	14584 <__mempcpy_chk@plt+0x33f8>
   14930:	sub	sp, fp, #8
   14934:	pop	{r4, r5, fp, pc}
   14938:	push	{fp, lr}
   1493c:	mov	fp, sp
   14940:	sub	sp, sp, #8
   14944:	add	ip, fp, #8
   14948:	str	ip, [sp, #4]
   1494c:	str	ip, [sp]
   14950:	bl	148ec <__mempcpy_chk@plt+0x3760>
   14954:	mov	sp, fp
   14958:	pop	{fp, pc}
   1495c:	push	{fp, lr}
   14960:	mov	fp, sp
   14964:	movw	r0, #29020	; 0x715c
   14968:	movt	r0, #2
   1496c:	ldr	r1, [r0]
   14970:	movw	r0, #23752	; 0x5cc8
   14974:	movt	r0, #1
   14978:	bl	10ef8 <fputs_unlocked@plt>
   1497c:	movw	r1, #25119	; 0x621f
   14980:	mov	r0, #0
   14984:	mov	r2, #5
   14988:	movt	r1, #1
   1498c:	bl	10fa0 <dcgettext@plt>
   14990:	movw	r2, #25139	; 0x6233
   14994:	mov	r1, r0
   14998:	mov	r0, #1
   1499c:	movt	r2, #1
   149a0:	bl	110cc <__printf_chk@plt>
   149a4:	movw	r1, #25161	; 0x6249
   149a8:	mov	r0, #0
   149ac:	mov	r2, #5
   149b0:	movt	r1, #1
   149b4:	bl	10fa0 <dcgettext@plt>
   149b8:	movw	r2, #23192	; 0x5a98
   149bc:	movw	r3, #23561	; 0x5c09
   149c0:	mov	r1, r0
   149c4:	mov	r0, #1
   149c8:	movt	r2, #1
   149cc:	movt	r3, #1
   149d0:	bl	110cc <__printf_chk@plt>
   149d4:	movw	r1, #25181	; 0x625d
   149d8:	mov	r0, #0
   149dc:	mov	r2, #5
   149e0:	movt	r1, #1
   149e4:	bl	10fa0 <dcgettext@plt>
   149e8:	movw	r2, #25220	; 0x6284
   149ec:	mov	r1, r0
   149f0:	mov	r0, #1
   149f4:	movt	r2, #1
   149f8:	pop	{fp, lr}
   149fc:	b	110cc <__printf_chk@plt>
   14a00:	b	14a04 <__mempcpy_chk@plt+0x3878>
   14a04:	push	{r4, r5, r6, sl, fp, lr}
   14a08:	add	fp, sp, #16
   14a0c:	mov	r4, r2
   14a10:	mov	r5, r1
   14a14:	mov	r6, r0
   14a18:	bl	153a0 <__mempcpy_chk@plt+0x4214>
   14a1c:	cmp	r0, #0
   14a20:	popne	{r4, r5, r6, sl, fp, pc}
   14a24:	cmp	r6, #0
   14a28:	beq	14a3c <__mempcpy_chk@plt+0x38b0>
   14a2c:	cmp	r5, #0
   14a30:	cmpne	r4, #0
   14a34:	bne	14a3c <__mempcpy_chk@plt+0x38b0>
   14a38:	pop	{r4, r5, r6, sl, fp, pc}
   14a3c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14a40:	push	{fp, lr}
   14a44:	mov	fp, sp
   14a48:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14a4c:	cmp	r0, #0
   14a50:	popne	{fp, pc}
   14a54:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14a58:	push	{fp, lr}
   14a5c:	mov	fp, sp
   14a60:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14a64:	cmp	r0, #0
   14a68:	popne	{fp, pc}
   14a6c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14a70:	push	{fp, lr}
   14a74:	mov	fp, sp
   14a78:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14a7c:	cmp	r0, #0
   14a80:	popne	{fp, pc}
   14a84:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14a88:	push	{r4, r5, fp, lr}
   14a8c:	add	fp, sp, #8
   14a90:	mov	r4, r1
   14a94:	mov	r5, r0
   14a98:	bl	14ff0 <__mempcpy_chk@plt+0x3e64>
   14a9c:	cmp	r0, #0
   14aa0:	popne	{r4, r5, fp, pc}
   14aa4:	cmp	r5, #0
   14aa8:	beq	14ab8 <__mempcpy_chk@plt+0x392c>
   14aac:	cmp	r4, #0
   14ab0:	bne	14ab8 <__mempcpy_chk@plt+0x392c>
   14ab4:	pop	{r4, r5, fp, pc}
   14ab8:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14abc:	push	{fp, lr}
   14ac0:	mov	fp, sp
   14ac4:	cmp	r1, #0
   14ac8:	orreq	r1, r1, #1
   14acc:	bl	14ff0 <__mempcpy_chk@plt+0x3e64>
   14ad0:	cmp	r0, #0
   14ad4:	popne	{fp, pc}
   14ad8:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14adc:	push	{fp, lr}
   14ae0:	mov	fp, sp
   14ae4:	clz	r3, r2
   14ae8:	lsr	ip, r3, #5
   14aec:	clz	r3, r1
   14af0:	lsr	r3, r3, #5
   14af4:	orrs	r3, r3, ip
   14af8:	movwne	r1, #1
   14afc:	movwne	r2, #1
   14b00:	bl	153a0 <__mempcpy_chk@plt+0x4214>
   14b04:	cmp	r0, #0
   14b08:	popne	{fp, pc}
   14b0c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14b10:	push	{fp, lr}
   14b14:	mov	fp, sp
   14b18:	mov	r2, r1
   14b1c:	mov	r1, r0
   14b20:	mov	r0, #0
   14b24:	bl	153a0 <__mempcpy_chk@plt+0x4214>
   14b28:	cmp	r0, #0
   14b2c:	popne	{fp, pc}
   14b30:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14b34:	mov	r2, r1
   14b38:	mov	r1, r0
   14b3c:	mov	r0, #0
   14b40:	b	14adc <__mempcpy_chk@plt+0x3950>
   14b44:	mov	r2, #1
   14b48:	b	14b4c <__mempcpy_chk@plt+0x39c0>
   14b4c:	push	{r4, r5, fp, lr}
   14b50:	add	fp, sp, #8
   14b54:	ldr	r5, [r1]
   14b58:	mov	r4, r1
   14b5c:	cmp	r0, #0
   14b60:	beq	14b78 <__mempcpy_chk@plt+0x39ec>
   14b64:	mov	r1, #1
   14b68:	add	r1, r1, r5, lsr #1
   14b6c:	adds	r5, r5, r1
   14b70:	bcc	14b90 <__mempcpy_chk@plt+0x3a04>
   14b74:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14b78:	cmp	r5, #0
   14b7c:	bne	14b90 <__mempcpy_chk@plt+0x3a04>
   14b80:	mov	r1, #64	; 0x40
   14b84:	cmp	r2, #64	; 0x40
   14b88:	udiv	r5, r1, r2
   14b8c:	addhi	r5, r5, #1
   14b90:	mov	r1, r5
   14b94:	bl	14a04 <__mempcpy_chk@plt+0x3878>
   14b98:	str	r5, [r4]
   14b9c:	pop	{r4, r5, fp, pc}
   14ba0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ba4:	add	fp, sp, #24
   14ba8:	ldr	r6, [r1]
   14bac:	mov	r8, r1
   14bb0:	ldr	r4, [fp, #8]
   14bb4:	add	r1, r6, r6, asr #1
   14bb8:	cmp	r1, r6
   14bbc:	mvnvs	r1, #-2147483648	; 0x80000000
   14bc0:	cmp	r1, r3
   14bc4:	mov	r5, r1
   14bc8:	movgt	r5, r3
   14bcc:	cmn	r3, #1
   14bd0:	movle	r5, r1
   14bd4:	cmn	r4, #1
   14bd8:	ble	14bf8 <__mempcpy_chk@plt+0x3a6c>
   14bdc:	cmp	r4, #0
   14be0:	beq	14c4c <__mempcpy_chk@plt+0x3ac0>
   14be4:	cmn	r5, #1
   14be8:	ble	14c20 <__mempcpy_chk@plt+0x3a94>
   14bec:	mvn	r7, #-2147483648	; 0x80000000
   14bf0:	udiv	r1, r7, r4
   14bf4:	b	14c14 <__mempcpy_chk@plt+0x3a88>
   14bf8:	cmn	r5, #1
   14bfc:	ble	14c3c <__mempcpy_chk@plt+0x3ab0>
   14c00:	cmn	r4, #1
   14c04:	beq	14c4c <__mempcpy_chk@plt+0x3ac0>
   14c08:	mov	r1, #-2147483648	; 0x80000000
   14c0c:	mvn	r7, #-2147483648	; 0x80000000
   14c10:	sdiv	r1, r1, r4
   14c14:	cmp	r1, r5
   14c18:	bge	14c4c <__mempcpy_chk@plt+0x3ac0>
   14c1c:	b	14c5c <__mempcpy_chk@plt+0x3ad0>
   14c20:	beq	14c4c <__mempcpy_chk@plt+0x3ac0>
   14c24:	mov	r1, #-2147483648	; 0x80000000
   14c28:	mvn	r7, #-2147483648	; 0x80000000
   14c2c:	sdiv	r1, r1, r5
   14c30:	cmp	r1, r4
   14c34:	bge	14c4c <__mempcpy_chk@plt+0x3ac0>
   14c38:	b	14c5c <__mempcpy_chk@plt+0x3ad0>
   14c3c:	mvn	r7, #-2147483648	; 0x80000000
   14c40:	sdiv	r1, r7, r4
   14c44:	cmp	r5, r1
   14c48:	blt	14c5c <__mempcpy_chk@plt+0x3ad0>
   14c4c:	mul	r1, r5, r4
   14c50:	mov	r7, #64	; 0x40
   14c54:	cmp	r1, #63	; 0x3f
   14c58:	bgt	14c64 <__mempcpy_chk@plt+0x3ad8>
   14c5c:	sdiv	r5, r7, r4
   14c60:	mul	r1, r5, r4
   14c64:	cmp	r0, #0
   14c68:	moveq	r7, #0
   14c6c:	streq	r7, [r8]
   14c70:	sub	r7, r5, r6
   14c74:	cmp	r7, r2
   14c78:	bge	14d1c <__mempcpy_chk@plt+0x3b90>
   14c7c:	add	r5, r6, r2
   14c80:	mov	r2, #0
   14c84:	mov	r1, #0
   14c88:	cmp	r5, r3
   14c8c:	movwgt	r2, #1
   14c90:	cmn	r3, #1
   14c94:	movwgt	r1, #1
   14c98:	cmp	r5, r6
   14c9c:	bvs	14d04 <__mempcpy_chk@plt+0x3b78>
   14ca0:	ands	r1, r1, r2
   14ca4:	bne	14d04 <__mempcpy_chk@plt+0x3b78>
   14ca8:	cmn	r4, #1
   14cac:	ble	14ccc <__mempcpy_chk@plt+0x3b40>
   14cb0:	cmp	r4, #0
   14cb4:	beq	14d18 <__mempcpy_chk@plt+0x3b8c>
   14cb8:	cmn	r5, #1
   14cbc:	ble	14cf0 <__mempcpy_chk@plt+0x3b64>
   14cc0:	mvn	r1, #-2147483648	; 0x80000000
   14cc4:	udiv	r1, r1, r4
   14cc8:	b	14ce4 <__mempcpy_chk@plt+0x3b58>
   14ccc:	cmn	r5, #1
   14cd0:	ble	14d08 <__mempcpy_chk@plt+0x3b7c>
   14cd4:	cmn	r4, #1
   14cd8:	beq	14d18 <__mempcpy_chk@plt+0x3b8c>
   14cdc:	mov	r1, #-2147483648	; 0x80000000
   14ce0:	sdiv	r1, r1, r4
   14ce4:	cmp	r1, r5
   14ce8:	bge	14d18 <__mempcpy_chk@plt+0x3b8c>
   14cec:	b	14d04 <__mempcpy_chk@plt+0x3b78>
   14cf0:	beq	14d18 <__mempcpy_chk@plt+0x3b8c>
   14cf4:	mov	r1, #-2147483648	; 0x80000000
   14cf8:	sdiv	r1, r1, r5
   14cfc:	cmp	r1, r4
   14d00:	bge	14d18 <__mempcpy_chk@plt+0x3b8c>
   14d04:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14d08:	mvn	r1, #-2147483648	; 0x80000000
   14d0c:	sdiv	r1, r1, r4
   14d10:	cmp	r5, r1
   14d14:	blt	14d04 <__mempcpy_chk@plt+0x3b78>
   14d18:	mul	r1, r5, r4
   14d1c:	bl	14a88 <__mempcpy_chk@plt+0x38fc>
   14d20:	str	r5, [r8]
   14d24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d28:	push	{fp, lr}
   14d2c:	mov	fp, sp
   14d30:	mov	r1, #1
   14d34:	bl	14f6c <__mempcpy_chk@plt+0x3de0>
   14d38:	cmp	r0, #0
   14d3c:	popne	{fp, pc}
   14d40:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14d44:	push	{fp, lr}
   14d48:	mov	fp, sp
   14d4c:	bl	14f6c <__mempcpy_chk@plt+0x3de0>
   14d50:	cmp	r0, #0
   14d54:	popne	{fp, pc}
   14d58:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14d5c:	push	{fp, lr}
   14d60:	mov	fp, sp
   14d64:	mov	r1, #1
   14d68:	bl	14f6c <__mempcpy_chk@plt+0x3de0>
   14d6c:	cmp	r0, #0
   14d70:	popne	{fp, pc}
   14d74:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	bl	14f6c <__mempcpy_chk@plt+0x3de0>
   14d84:	cmp	r0, #0
   14d88:	popne	{fp, pc}
   14d8c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14d90:	push	{r4, r5, r6, sl, fp, lr}
   14d94:	add	fp, sp, #16
   14d98:	mov	r5, r0
   14d9c:	mov	r0, r1
   14da0:	mov	r4, r1
   14da4:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14da8:	cmp	r0, #0
   14dac:	beq	14dc8 <__mempcpy_chk@plt+0x3c3c>
   14db0:	mov	r1, r5
   14db4:	mov	r2, r4
   14db8:	mov	r6, r0
   14dbc:	bl	10f64 <memcpy@plt>
   14dc0:	mov	r0, r6
   14dc4:	pop	{r4, r5, r6, sl, fp, pc}
   14dc8:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14dcc:	push	{r4, r5, r6, sl, fp, lr}
   14dd0:	add	fp, sp, #16
   14dd4:	mov	r5, r0
   14dd8:	mov	r0, r1
   14ddc:	mov	r4, r1
   14de0:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14de4:	cmp	r0, #0
   14de8:	beq	14e04 <__mempcpy_chk@plt+0x3c78>
   14dec:	mov	r1, r5
   14df0:	mov	r2, r4
   14df4:	mov	r6, r0
   14df8:	bl	10f64 <memcpy@plt>
   14dfc:	mov	r0, r6
   14e00:	pop	{r4, r5, r6, sl, fp, pc}
   14e04:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14e08:	push	{r4, r5, r6, sl, fp, lr}
   14e0c:	add	fp, sp, #16
   14e10:	mov	r5, r0
   14e14:	add	r0, r1, #1
   14e18:	mov	r4, r1
   14e1c:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14e20:	cmp	r0, #0
   14e24:	beq	14e4c <__mempcpy_chk@plt+0x3cc0>
   14e28:	mov	r6, r0
   14e2c:	mov	r0, #0
   14e30:	mov	r1, r5
   14e34:	mov	r2, r4
   14e38:	strb	r0, [r6, r4]
   14e3c:	mov	r0, r6
   14e40:	bl	10f64 <memcpy@plt>
   14e44:	mov	r0, r6
   14e48:	pop	{r4, r5, r6, sl, fp, pc}
   14e4c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14e50:	push	{r4, r5, r6, sl, fp, lr}
   14e54:	add	fp, sp, #16
   14e58:	mov	r4, r0
   14e5c:	bl	11084 <strlen@plt>
   14e60:	add	r5, r0, #1
   14e64:	mov	r0, r5
   14e68:	bl	14fc0 <__mempcpy_chk@plt+0x3e34>
   14e6c:	cmp	r0, #0
   14e70:	beq	14e8c <__mempcpy_chk@plt+0x3d00>
   14e74:	mov	r1, r4
   14e78:	mov	r2, r5
   14e7c:	mov	r6, r0
   14e80:	bl	10f64 <memcpy@plt>
   14e84:	mov	r0, r6
   14e88:	pop	{r4, r5, r6, sl, fp, pc}
   14e8c:	bl	14e90 <__mempcpy_chk@plt+0x3d04>
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	movw	r0, #28932	; 0x7104
   14e9c:	movw	r1, #25296	; 0x62d0
   14ea0:	mov	r2, #5
   14ea4:	movt	r0, #2
   14ea8:	movt	r1, #1
   14eac:	ldr	r4, [r0]
   14eb0:	mov	r0, #0
   14eb4:	bl	10fa0 <dcgettext@plt>
   14eb8:	movw	r2, #23355	; 0x5b3b
   14ebc:	mov	r3, r0
   14ec0:	mov	r0, r4
   14ec4:	mov	r1, #0
   14ec8:	movt	r2, #1
   14ecc:	bl	11018 <error@plt>
   14ed0:	bl	11174 <abort@plt>
   14ed4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ed8:	add	fp, sp, #24
   14edc:	sub	sp, sp, #8
   14ee0:	mov	r4, r3
   14ee4:	mov	r8, r2
   14ee8:	mov	r9, r1
   14eec:	mov	r5, r0
   14ef0:	bl	1109c <__errno_location@plt>
   14ef4:	mov	r6, #0
   14ef8:	mov	r7, r0
   14efc:	add	r1, sp, #4
   14f00:	str	r6, [r0]
   14f04:	mov	r0, r5
   14f08:	blx	r4
   14f0c:	ldr	r0, [sp, #4]
   14f10:	cmp	r0, r5
   14f14:	beq	14f54 <__mempcpy_chk@plt+0x3dc8>
   14f18:	cmp	r9, #0
   14f1c:	beq	14f3c <__mempcpy_chk@plt+0x3db0>
   14f20:	vcmp.f64	d0, #0.0
   14f24:	vmrs	APSR_nzcv, fpscr
   14f28:	beq	14f50 <__mempcpy_chk@plt+0x3dc4>
   14f2c:	ldr	r1, [r7]
   14f30:	subs	r6, r1, #34	; 0x22
   14f34:	movwne	r6, #1
   14f38:	b	14f54 <__mempcpy_chk@plt+0x3dc8>
   14f3c:	ldrb	r1, [r0]
   14f40:	mov	r6, #0
   14f44:	cmp	r1, #0
   14f48:	bne	14f5c <__mempcpy_chk@plt+0x3dd0>
   14f4c:	b	14f20 <__mempcpy_chk@plt+0x3d94>
   14f50:	mov	r6, #1
   14f54:	cmp	r9, #0
   14f58:	strne	r0, [r9]
   14f5c:	vstr	d0, [r8]
   14f60:	mov	r0, r6
   14f64:	sub	sp, fp, #24
   14f68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f6c:	clz	r2, r1
   14f70:	clz	r3, r0
   14f74:	lsr	r2, r2, #5
   14f78:	lsr	r3, r3, #5
   14f7c:	orrs	r2, r3, r2
   14f80:	movwne	r1, #1
   14f84:	movwne	r0, #1
   14f88:	cmp	r1, #0
   14f8c:	beq	14fbc <__mempcpy_chk@plt+0x3e30>
   14f90:	mvn	r2, #-2147483648	; 0x80000000
   14f94:	udiv	r2, r2, r1
   14f98:	cmp	r2, r0
   14f9c:	bcs	14fbc <__mempcpy_chk@plt+0x3e30>
   14fa0:	push	{fp, lr}
   14fa4:	mov	fp, sp
   14fa8:	bl	1109c <__errno_location@plt>
   14fac:	mov	r1, #12
   14fb0:	str	r1, [r0]
   14fb4:	mov	r0, #0
   14fb8:	pop	{fp, pc}
   14fbc:	b	10eec <calloc@plt>
   14fc0:	cmp	r0, #0
   14fc4:	movweq	r0, #1
   14fc8:	cmn	r0, #1
   14fcc:	ble	14fd4 <__mempcpy_chk@plt+0x3e48>
   14fd0:	b	11030 <malloc@plt>
   14fd4:	push	{fp, lr}
   14fd8:	mov	fp, sp
   14fdc:	bl	1109c <__errno_location@plt>
   14fe0:	mov	r1, #12
   14fe4:	str	r1, [r0]
   14fe8:	mov	r0, #0
   14fec:	pop	{fp, pc}
   14ff0:	push	{fp, lr}
   14ff4:	mov	fp, sp
   14ff8:	cmp	r0, #0
   14ffc:	beq	15018 <__mempcpy_chk@plt+0x3e8c>
   15000:	cmp	r1, #0
   15004:	beq	15024 <__mempcpy_chk@plt+0x3e98>
   15008:	cmn	r1, #1
   1500c:	ble	1502c <__mempcpy_chk@plt+0x3ea0>
   15010:	pop	{fp, lr}
   15014:	b	10fac <realloc@plt>
   15018:	mov	r0, r1
   1501c:	pop	{fp, lr}
   15020:	b	14fc0 <__mempcpy_chk@plt+0x3e34>
   15024:	bl	12a20 <__mempcpy_chk@plt+0x1894>
   15028:	b	15038 <__mempcpy_chk@plt+0x3eac>
   1502c:	bl	1109c <__errno_location@plt>
   15030:	mov	r1, #12
   15034:	str	r1, [r0]
   15038:	mov	r0, #0
   1503c:	pop	{fp, pc}
   15040:	push	{r4, r5, r6, sl, fp, lr}
   15044:	add	fp, sp, #16
   15048:	vpush	{d8}
   1504c:	movw	r6, #29384	; 0x72c8
   15050:	mov	r5, r0
   15054:	mov	r4, r1
   15058:	movt	r6, #2
   1505c:	ldr	r0, [r6]
   15060:	cmp	r0, #0
   15064:	bne	15080 <__mempcpy_chk@plt+0x3ef4>
   15068:	movw	r1, #24062	; 0x5dfe
   1506c:	movw	r0, #8127	; 0x1fbf
   15070:	mov	r2, #0
   15074:	movt	r1, #1
   15078:	bl	11138 <newlocale@plt>
   1507c:	str	r0, [r6]
   15080:	ldr	r0, [r6]
   15084:	cmp	r0, #0
   15088:	beq	150d0 <__mempcpy_chk@plt+0x3f44>
   1508c:	bl	10f04 <uselocale@plt>
   15090:	cmp	r0, #0
   15094:	beq	150d0 <__mempcpy_chk@plt+0x3f44>
   15098:	mov	r6, r0
   1509c:	mov	r0, r5
   150a0:	mov	r1, r4
   150a4:	bl	10f7c <strtold@plt>
   150a8:	vorr	d8, d0, d0
   150ac:	bl	1109c <__errno_location@plt>
   150b0:	ldr	r5, [r0]
   150b4:	mov	r4, r0
   150b8:	mov	r0, r6
   150bc:	bl	10f04 <uselocale@plt>
   150c0:	cmp	r0, #0
   150c4:	beq	150e8 <__mempcpy_chk@plt+0x3f5c>
   150c8:	str	r5, [r4]
   150cc:	b	150dc <__mempcpy_chk@plt+0x3f50>
   150d0:	cmp	r4, #0
   150d4:	vmov.i32	d8, #0	; 0x00000000
   150d8:	strne	r5, [r4]
   150dc:	vorr	d0, d8, d8
   150e0:	vpop	{d8}
   150e4:	pop	{r4, r5, r6, sl, fp, pc}
   150e8:	bl	11174 <abort@plt>
   150ec:	push	{r4, r5, r6, sl, fp, lr}
   150f0:	add	fp, sp, #16
   150f4:	mov	r4, r0
   150f8:	bl	10ff4 <__fpending@plt>
   150fc:	mov	r5, r0
   15100:	mov	r0, r4
   15104:	bl	11000 <ferror_unlocked@plt>
   15108:	mov	r6, r0
   1510c:	mov	r0, r4
   15110:	bl	1516c <__mempcpy_chk@plt+0x3fe0>
   15114:	cmp	r6, #0
   15118:	beq	15138 <__mempcpy_chk@plt+0x3fac>
   1511c:	mvn	r4, #0
   15120:	cmp	r0, #0
   15124:	bne	15164 <__mempcpy_chk@plt+0x3fd8>
   15128:	bl	1109c <__errno_location@plt>
   1512c:	mov	r1, #0
   15130:	str	r1, [r0]
   15134:	b	15164 <__mempcpy_chk@plt+0x3fd8>
   15138:	cmp	r0, #0
   1513c:	mov	r4, r0
   15140:	mvnne	r4, #0
   15144:	cmp	r5, #0
   15148:	bne	15164 <__mempcpy_chk@plt+0x3fd8>
   1514c:	cmp	r0, #0
   15150:	beq	15164 <__mempcpy_chk@plt+0x3fd8>
   15154:	bl	1109c <__errno_location@plt>
   15158:	ldr	r0, [r0]
   1515c:	subs	r4, r0, #9
   15160:	mvnne	r4, #0
   15164:	mov	r0, r4
   15168:	pop	{r4, r5, r6, sl, fp, pc}
   1516c:	push	{r4, r5, r6, sl, fp, lr}
   15170:	add	fp, sp, #16
   15174:	sub	sp, sp, #8
   15178:	mov	r4, r0
   1517c:	bl	110d8 <fileno@plt>
   15180:	cmn	r0, #1
   15184:	ble	151f8 <__mempcpy_chk@plt+0x406c>
   15188:	mov	r0, r4
   1518c:	bl	11048 <__freading@plt>
   15190:	cmp	r0, #0
   15194:	beq	151c0 <__mempcpy_chk@plt+0x4034>
   15198:	mov	r0, r4
   1519c:	bl	110d8 <fileno@plt>
   151a0:	mov	r1, #1
   151a4:	mov	r2, #0
   151a8:	mov	r3, #0
   151ac:	str	r1, [sp]
   151b0:	bl	10fd0 <lseek64@plt>
   151b4:	and	r0, r0, r1
   151b8:	cmn	r0, #1
   151bc:	beq	151f8 <__mempcpy_chk@plt+0x406c>
   151c0:	mov	r0, r4
   151c4:	bl	15208 <__mempcpy_chk@plt+0x407c>
   151c8:	cmp	r0, #0
   151cc:	beq	151f8 <__mempcpy_chk@plt+0x406c>
   151d0:	bl	1109c <__errno_location@plt>
   151d4:	ldr	r6, [r0]
   151d8:	mov	r5, r0
   151dc:	mov	r0, r4
   151e0:	bl	110fc <fclose@plt>
   151e4:	cmp	r6, #0
   151e8:	strne	r6, [r5]
   151ec:	mvnne	r0, #0
   151f0:	sub	sp, fp, #16
   151f4:	pop	{r4, r5, r6, sl, fp, pc}
   151f8:	mov	r0, r4
   151fc:	sub	sp, fp, #16
   15200:	pop	{r4, r5, r6, sl, fp, lr}
   15204:	b	110fc <fclose@plt>
   15208:	push	{r4, sl, fp, lr}
   1520c:	add	fp, sp, #8
   15210:	sub	sp, sp, #8
   15214:	mov	r4, r0
   15218:	cmp	r0, #0
   1521c:	beq	15238 <__mempcpy_chk@plt+0x40ac>
   15220:	mov	r0, r4
   15224:	bl	11048 <__freading@plt>
   15228:	cmp	r0, #0
   1522c:	ldrbne	r0, [r4, #1]
   15230:	tstne	r0, #1
   15234:	bne	15248 <__mempcpy_chk@plt+0x40bc>
   15238:	mov	r0, r4
   1523c:	sub	sp, fp, #8
   15240:	pop	{r4, sl, fp, lr}
   15244:	b	10f34 <fflush@plt>
   15248:	mov	r0, #1
   1524c:	mov	r2, #0
   15250:	mov	r3, #0
   15254:	str	r0, [sp]
   15258:	mov	r0, r4
   1525c:	bl	15264 <__mempcpy_chk@plt+0x40d8>
   15260:	b	15238 <__mempcpy_chk@plt+0x40ac>
   15264:	push	{r4, r5, r6, r7, fp, lr}
   15268:	add	fp, sp, #16
   1526c:	sub	sp, sp, #8
   15270:	mov	r4, r0
   15274:	ldr	r0, [r0, #4]
   15278:	mov	r5, r3
   1527c:	mov	r6, r2
   15280:	ldr	r1, [r4, #8]
   15284:	cmp	r1, r0
   15288:	bne	152a4 <__mempcpy_chk@plt+0x4118>
   1528c:	ldrd	r0, [r4, #16]
   15290:	cmp	r1, r0
   15294:	bne	152a4 <__mempcpy_chk@plt+0x4118>
   15298:	ldr	r0, [r4, #36]	; 0x24
   1529c:	cmp	r0, #0
   152a0:	beq	152bc <__mempcpy_chk@plt+0x4130>
   152a4:	mov	r0, r4
   152a8:	mov	r2, r6
   152ac:	mov	r3, r5
   152b0:	sub	sp, fp, #16
   152b4:	pop	{r4, r5, r6, r7, fp, lr}
   152b8:	b	11108 <fseeko64@plt>
   152bc:	ldr	r7, [fp, #8]
   152c0:	mov	r0, r4
   152c4:	bl	110d8 <fileno@plt>
   152c8:	mov	r2, r6
   152cc:	mov	r3, r5
   152d0:	str	r7, [sp]
   152d4:	bl	10fd0 <lseek64@plt>
   152d8:	and	r2, r0, r1
   152dc:	cmn	r2, #1
   152e0:	beq	152fc <__mempcpy_chk@plt+0x4170>
   152e4:	strd	r0, [r4, #80]	; 0x50
   152e8:	ldr	r0, [r4]
   152ec:	bic	r0, r0, #16
   152f0:	str	r0, [r4]
   152f4:	mov	r0, #0
   152f8:	b	15300 <__mempcpy_chk@plt+0x4174>
   152fc:	mvn	r0, #0
   15300:	sub	sp, fp, #16
   15304:	pop	{r4, r5, r6, r7, fp, pc}
   15308:	push	{fp, lr}
   1530c:	mov	fp, sp
   15310:	mov	r0, #14
   15314:	bl	1112c <nl_langinfo@plt>
   15318:	movw	r1, #23753	; 0x5cc9
   1531c:	cmp	r0, #0
   15320:	movt	r1, #1
   15324:	movne	r1, r0
   15328:	movw	r0, #25313	; 0x62e1
   1532c:	ldrb	r2, [r1]
   15330:	movt	r0, #1
   15334:	cmp	r2, #0
   15338:	movne	r0, r1
   1533c:	pop	{fp, pc}
   15340:	push	{r4, r5, r6, r7, fp, lr}
   15344:	add	fp, sp, #16
   15348:	sub	sp, sp, #8
   1534c:	add	r5, sp, #4
   15350:	cmp	r0, #0
   15354:	mov	r7, r2
   15358:	mov	r4, r1
   1535c:	movne	r5, r0
   15360:	mov	r0, r5
   15364:	bl	1100c <mbrtowc@plt>
   15368:	mov	r6, r0
   1536c:	cmp	r7, #0
   15370:	beq	15394 <__mempcpy_chk@plt+0x4208>
   15374:	cmn	r6, #2
   15378:	bcc	15394 <__mempcpy_chk@plt+0x4208>
   1537c:	mov	r0, #0
   15380:	bl	153dc <__mempcpy_chk@plt+0x4250>
   15384:	cmp	r0, #0
   15388:	ldrbeq	r0, [r4]
   1538c:	moveq	r6, #1
   15390:	streq	r0, [r5]
   15394:	mov	r0, r6
   15398:	sub	sp, fp, #16
   1539c:	pop	{r4, r5, r6, r7, fp, pc}
   153a0:	cmp	r2, #0
   153a4:	beq	153d4 <__mempcpy_chk@plt+0x4248>
   153a8:	mvn	r3, #0
   153ac:	udiv	r3, r3, r2
   153b0:	cmp	r3, r1
   153b4:	bcs	153d4 <__mempcpy_chk@plt+0x4248>
   153b8:	push	{fp, lr}
   153bc:	mov	fp, sp
   153c0:	bl	1109c <__errno_location@plt>
   153c4:	mov	r1, #12
   153c8:	str	r1, [r0]
   153cc:	mov	r0, #0
   153d0:	pop	{fp, pc}
   153d4:	mul	r1, r2, r1
   153d8:	b	14ff0 <__mempcpy_chk@plt+0x3e64>
   153dc:	push	{r4, sl, fp, lr}
   153e0:	add	fp, sp, #8
   153e4:	sub	sp, sp, #264	; 0x108
   153e8:	add	r1, sp, #7
   153ec:	movw	r2, #257	; 0x101
   153f0:	bl	15440 <__mempcpy_chk@plt+0x42b4>
   153f4:	mov	r4, #0
   153f8:	cmp	r0, #0
   153fc:	bne	15434 <__mempcpy_chk@plt+0x42a8>
   15400:	movw	r1, #24062	; 0x5dfe
   15404:	add	r0, sp, #7
   15408:	movt	r1, #1
   1540c:	bl	10f10 <strcmp@plt>
   15410:	cmp	r0, #0
   15414:	beq	15434 <__mempcpy_chk@plt+0x42a8>
   15418:	movw	r1, #25319	; 0x62e7
   1541c:	add	r0, sp, #7
   15420:	movt	r1, #1
   15424:	bl	10f10 <strcmp@plt>
   15428:	mov	r4, r0
   1542c:	cmp	r0, #0
   15430:	movwne	r4, #1
   15434:	mov	r0, r4
   15438:	sub	sp, fp, #8
   1543c:	pop	{r4, sl, fp, pc}
   15440:	push	{r4, r5, r6, r7, fp, lr}
   15444:	add	fp, sp, #16
   15448:	mov	r4, r1
   1544c:	mov	r1, #0
   15450:	mov	r6, r2
   15454:	bl	11114 <setlocale@plt>
   15458:	cmp	r0, #0
   1545c:	beq	15488 <__mempcpy_chk@plt+0x42fc>
   15460:	mov	r7, r0
   15464:	bl	11084 <strlen@plt>
   15468:	cmp	r0, r6
   1546c:	bcs	1549c <__mempcpy_chk@plt+0x4310>
   15470:	add	r2, r0, #1
   15474:	mov	r0, r4
   15478:	mov	r1, r7
   1547c:	bl	10f64 <memcpy@plt>
   15480:	mov	r5, #0
   15484:	b	154c4 <__mempcpy_chk@plt+0x4338>
   15488:	cmp	r6, #0
   1548c:	mov	r5, #22
   15490:	movne	r0, #0
   15494:	strbne	r0, [r4]
   15498:	b	154c4 <__mempcpy_chk@plt+0x4338>
   1549c:	mov	r5, #34	; 0x22
   154a0:	cmp	r6, #0
   154a4:	beq	154c4 <__mempcpy_chk@plt+0x4338>
   154a8:	sub	r6, r6, #1
   154ac:	mov	r0, r4
   154b0:	mov	r1, r7
   154b4:	mov	r2, r6
   154b8:	bl	10f64 <memcpy@plt>
   154bc:	mov	r0, #0
   154c0:	strb	r0, [r4, r6]
   154c4:	mov	r0, r5
   154c8:	pop	{r4, r5, r6, r7, fp, pc}
   154cc:	mov	r1, #0
   154d0:	b	11114 <setlocale@plt>
   154d4:	andeq	r0, r0, r0
   154d8:	vmov	d6, r0, r1
   154dc:	vldr	d7, [pc, #36]	; 15508 <__mempcpy_chk@plt+0x437c>
   154e0:	vldr	d5, [pc, #40]	; 15510 <__mempcpy_chk@plt+0x4384>
   154e4:	vmul.f64	d7, d6, d7
   154e8:	vcvt.u32.f64	s14, d7
   154ec:	vcvt.f64.u32	d4, s14
   154f0:	vmov	r1, s14
   154f4:	vmls.f64	d6, d4, d5
   154f8:	vcvt.u32.f64	s15, d6
   154fc:	vmov	r0, s15
   15500:	bx	lr
   15504:	nop			; (mov r0, r0)
   15508:	andeq	r0, r0, r0
   1550c:	ldclcc	0, cr0, [r0]
   15510:	andeq	r0, r0, r0
   15514:	mvnsmi	r0, r0
   15518:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1551c:	mov	r7, r0
   15520:	ldr	r6, [pc, #72]	; 15570 <__mempcpy_chk@plt+0x43e4>
   15524:	ldr	r5, [pc, #72]	; 15574 <__mempcpy_chk@plt+0x43e8>
   15528:	add	r6, pc, r6
   1552c:	add	r5, pc, r5
   15530:	sub	r6, r6, r5
   15534:	mov	r8, r1
   15538:	mov	r9, r2
   1553c:	bl	10ecc <calloc@plt-0x20>
   15540:	asrs	r6, r6, #2
   15544:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15548:	mov	r4, #0
   1554c:	add	r4, r4, #1
   15550:	ldr	r3, [r5], #4
   15554:	mov	r2, r9
   15558:	mov	r1, r8
   1555c:	mov	r0, r7
   15560:	blx	r3
   15564:	cmp	r6, r4
   15568:	bne	1554c <__mempcpy_chk@plt+0x43c0>
   1556c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15570:	ldrdeq	r1, [r1], -ip
   15574:	ldrdeq	r1, [r1], -r4
   15578:	bx	lr
   1557c:	ldr	r3, [pc, #12]	; 15590 <__mempcpy_chk@plt+0x4404>
   15580:	mov	r1, #0
   15584:	add	r3, pc, r3
   15588:	ldr	r2, [r3]
   1558c:	b	110b4 <__cxa_atexit@plt>
   15590:	andeq	r1, r1, r0, ror fp

Disassembly of section .fini:

00015594 <.fini>:
   15594:	push	{r3, lr}
   15598:	pop	{r3, pc}
