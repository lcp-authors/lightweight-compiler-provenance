
../repos/coreutils/src/pr:     file format elf32-littlearm


Disassembly of section .init:

00011058 <.init>:
   11058:	push	{r3, lr}
   1105c:	bl	1142c <__assert_fail@plt+0x48>
   11060:	pop	{r3, pc}

Disassembly of section .plt:

00011064 <fdopen@plt-0x14>:
   11064:	push	{lr}		; (str lr, [sp, #-4]!)
   11068:	ldr	lr, [pc, #4]	; 11074 <fdopen@plt-0x4>
   1106c:	add	lr, pc, lr
   11070:	ldr	pc, [lr, #8]!
   11074:	andeq	r2, r2, ip, lsl #31

00011078 <fdopen@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #139264	; 0x22000
   11080:	ldr	pc, [ip, #3980]!	; 0xf8c

00011084 <calloc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #139264	; 0x22000
   1108c:	ldr	pc, [ip, #3972]!	; 0xf84

00011090 <fputs_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #139264	; 0x22000
   11098:	ldr	pc, [ip, #3964]!	; 0xf7c

0001109c <raise@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #139264	; 0x22000
   110a4:	ldr	pc, [ip, #3956]!	; 0xf74

000110a8 <gmtime_r@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #139264	; 0x22000
   110b0:	ldr	pc, [ip, #3948]!	; 0xf6c

000110b4 <strcmp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #139264	; 0x22000
   110bc:	ldr	pc, [ip, #3940]!	; 0xf64

000110c0 <strtol@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #139264	; 0x22000
   110c8:	ldr	pc, [ip, #3932]!	; 0xf5c

000110cc <posix_fadvise64@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #139264	; 0x22000
   110d4:	ldr	pc, [ip, #3924]!	; 0xf54

000110d8 <printf@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #139264	; 0x22000
   110e0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110e4 <mktime@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #139264	; 0x22000
   110ec:	ldr	pc, [ip, #3908]!	; 0xf44

000110f0 <fflush@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #139264	; 0x22000
   110f8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110fc <wcwidth@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #139264	; 0x22000
   11104:	ldr	pc, [ip, #3892]!	; 0xf34

00011108 <free@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #139264	; 0x22000
   11110:	ldr	pc, [ip, #3884]!	; 0xf2c

00011114 <clock_gettime@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #139264	; 0x22000
   1111c:	ldr	pc, [ip, #3876]!	; 0xf24

00011120 <_exit@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #139264	; 0x22000
   11128:	ldr	pc, [ip, #3868]!	; 0xf1c

0001112c <memcpy@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #139264	; 0x22000
   11134:	ldr	pc, [ip, #3860]!	; 0xf14

00011138 <tolower@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #139264	; 0x22000
   11140:	ldr	pc, [ip, #3852]!	; 0xf0c

00011144 <mbsinit@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #139264	; 0x22000
   1114c:	ldr	pc, [ip, #3844]!	; 0xf04

00011150 <memcmp@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #139264	; 0x22000
   11158:	ldr	pc, [ip, #3836]!	; 0xefc

0001115c <fputc_unlocked@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #139264	; 0x22000
   11164:	ldr	pc, [ip, #3828]!	; 0xef4

00011168 <getc_unlocked@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #139264	; 0x22000
   11170:	ldr	pc, [ip, #3820]!	; 0xeec

00011174 <realloc@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #139264	; 0x22000
   1117c:	ldr	pc, [ip, #3812]!	; 0xee4

00011180 <localtime_r@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #139264	; 0x22000
   11188:	ldr	pc, [ip, #3804]!	; 0xedc

0001118c <textdomain@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #139264	; 0x22000
   11194:	ldr	pc, [ip, #3796]!	; 0xed4

00011198 <iswcntrl@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #139264	; 0x22000
   111a0:	ldr	pc, [ip, #3788]!	; 0xecc

000111a4 <iswprint@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #139264	; 0x22000
   111ac:	ldr	pc, [ip, #3780]!	; 0xec4

000111b0 <tzset@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #139264	; 0x22000
   111b8:	ldr	pc, [ip, #3772]!	; 0xebc

000111bc <__fxstat64@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #139264	; 0x22000
   111c4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111c8 <fwrite@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #139264	; 0x22000
   111d0:	ldr	pc, [ip, #3756]!	; 0xeac

000111d4 <lseek64@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #139264	; 0x22000
   111dc:	ldr	pc, [ip, #3748]!	; 0xea4

000111e0 <__ctype_get_mb_cur_max@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #139264	; 0x22000
   111e8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111ec <__fpending@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #139264	; 0x22000
   111f4:	ldr	pc, [ip, #3732]!	; 0xe94

000111f8 <ferror_unlocked@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #139264	; 0x22000
   11200:	ldr	pc, [ip, #3724]!	; 0xe8c

00011204 <mbrtowc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #139264	; 0x22000
   1120c:	ldr	pc, [ip, #3716]!	; 0xe84

00011210 <error@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #139264	; 0x22000
   11218:	ldr	pc, [ip, #3708]!	; 0xe7c

0001121c <getenv@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #139264	; 0x22000
   11224:	ldr	pc, [ip, #3700]!	; 0xe74

00011228 <malloc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #139264	; 0x22000
   11230:	ldr	pc, [ip, #3692]!	; 0xe6c

00011234 <__libc_start_main@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #139264	; 0x22000
   1123c:	ldr	pc, [ip, #3684]!	; 0xe64

00011240 <strftime@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #139264	; 0x22000
   11248:	ldr	pc, [ip, #3676]!	; 0xe5c

0001124c <__freading@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #139264	; 0x22000
   11254:	ldr	pc, [ip, #3668]!	; 0xe54

00011258 <__gmon_start__@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #139264	; 0x22000
   11260:	ldr	pc, [ip, #3660]!	; 0xe4c

00011264 <getopt_long@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #139264	; 0x22000
   1126c:	ldr	pc, [ip, #3652]!	; 0xe44

00011270 <__ctype_b_loc@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #139264	; 0x22000
   11278:	ldr	pc, [ip, #3644]!	; 0xe3c

0001127c <exit@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #139264	; 0x22000
   11284:	ldr	pc, [ip, #3636]!	; 0xe34

00011288 <gettext@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #139264	; 0x22000
   11290:	ldr	pc, [ip, #3628]!	; 0xe2c

00011294 <strlen@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #139264	; 0x22000
   1129c:	ldr	pc, [ip, #3620]!	; 0xe24

000112a0 <strchr@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #139264	; 0x22000
   112a8:	ldr	pc, [ip, #3612]!	; 0xe1c

000112ac <setenv@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #139264	; 0x22000
   112b4:	ldr	pc, [ip, #3604]!	; 0xe14

000112b8 <fprintf@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #139264	; 0x22000
   112c0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112c4 <ungetc@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #139264	; 0x22000
   112cc:	ldr	pc, [ip, #3588]!	; 0xe04

000112d0 <__errno_location@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #139264	; 0x22000
   112d8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112dc <__cxa_atexit@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #139264	; 0x22000
   112e4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112e8 <memset@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #139264	; 0x22000
   112f0:	ldr	pc, [ip, #3564]!	; 0xdec

000112f4 <fileno@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #139264	; 0x22000
   112fc:	ldr	pc, [ip, #3556]!	; 0xde4

00011300 <strtoumax@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #139264	; 0x22000
   11308:	ldr	pc, [ip, #3548]!	; 0xddc

0001130c <strtoimax@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #139264	; 0x22000
   11314:	ldr	pc, [ip, #3540]!	; 0xdd4

00011318 <fclose@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #139264	; 0x22000
   11320:	ldr	pc, [ip, #3532]!	; 0xdcc

00011324 <fseeko64@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #139264	; 0x22000
   1132c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011330 <fcntl64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #139264	; 0x22000
   11338:	ldr	pc, [ip, #3516]!	; 0xdbc

0001133c <setlocale@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #139264	; 0x22000
   11344:	ldr	pc, [ip, #3508]!	; 0xdb4

00011348 <toupper@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #139264	; 0x22000
   11350:	ldr	pc, [ip, #3500]!	; 0xdac

00011354 <strrchr@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #139264	; 0x22000
   1135c:	ldr	pc, [ip, #3492]!	; 0xda4

00011360 <nl_langinfo@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #139264	; 0x22000
   11368:	ldr	pc, [ip, #3484]!	; 0xd9c

0001136c <sprintf@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #139264	; 0x22000
   11374:	ldr	pc, [ip, #3476]!	; 0xd94

00011378 <timegm@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #139264	; 0x22000
   11380:	ldr	pc, [ip, #3468]!	; 0xd8c

00011384 <clearerr_unlocked@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #139264	; 0x22000
   1138c:	ldr	pc, [ip, #3460]!	; 0xd84

00011390 <fopen64@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #139264	; 0x22000
   11398:	ldr	pc, [ip, #3452]!	; 0xd7c

0001139c <bindtextdomain@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #139264	; 0x22000
   113a4:	ldr	pc, [ip, #3444]!	; 0xd74

000113a8 <unsetenv@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #139264	; 0x22000
   113b0:	ldr	pc, [ip, #3436]!	; 0xd6c

000113b4 <strncmp@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #139264	; 0x22000
   113bc:	ldr	pc, [ip, #3428]!	; 0xd64

000113c0 <abort@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #139264	; 0x22000
   113c8:	ldr	pc, [ip, #3420]!	; 0xd5c

000113cc <close@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #139264	; 0x22000
   113d4:	ldr	pc, [ip, #3412]!	; 0xd54

000113d8 <putchar_unlocked@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #139264	; 0x22000
   113e0:	ldr	pc, [ip, #3404]!	; 0xd4c

000113e4 <__assert_fail@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #139264	; 0x22000
   113ec:	ldr	pc, [ip, #3396]!	; 0xd44

Disassembly of section .text:

000113f0 <.text>:
   113f0:	mov	fp, #0
   113f4:	mov	lr, #0
   113f8:	pop	{r1}		; (ldr r1, [sp], #4)
   113fc:	mov	r2, sp
   11400:	push	{r2}		; (str r2, [sp, #-4]!)
   11404:	push	{r0}		; (str r0, [sp, #-4]!)
   11408:	ldr	ip, [pc, #16]	; 11420 <__assert_fail@plt+0x3c>
   1140c:	push	{ip}		; (str ip, [sp, #-4]!)
   11410:	ldr	r0, [pc, #12]	; 11424 <__assert_fail@plt+0x40>
   11414:	ldr	r3, [pc, #12]	; 11428 <__assert_fail@plt+0x44>
   11418:	bl	11234 <__libc_start_main@plt>
   1141c:	bl	113c0 <abort@plt>
   11420:	andeq	r1, r2, r4, lsl #21
   11424:	andeq	r1, r1, r0, lsl #22
   11428:	andeq	r1, r2, r4, lsr #20
   1142c:	ldr	r3, [pc, #20]	; 11448 <__assert_fail@plt+0x64>
   11430:	ldr	r2, [pc, #20]	; 1144c <__assert_fail@plt+0x68>
   11434:	add	r3, pc, r3
   11438:	ldr	r2, [r3, r2]
   1143c:	cmp	r2, #0
   11440:	bxeq	lr
   11444:	b	11258 <__gmon_start__@plt>
   11448:	andeq	r2, r2, r4, asr #23
   1144c:	andeq	r0, r0, r4, lsr r1
   11450:	ldr	r0, [pc, #24]	; 11470 <__assert_fail@plt+0x8c>
   11454:	ldr	r3, [pc, #24]	; 11474 <__assert_fail@plt+0x90>
   11458:	cmp	r3, r0
   1145c:	bxeq	lr
   11460:	ldr	r3, [pc, #16]	; 11478 <__assert_fail@plt+0x94>
   11464:	cmp	r3, #0
   11468:	bxeq	lr
   1146c:	bx	r3
   11470:	ldrdeq	r4, [r3], -r0
   11474:	ldrdeq	r4, [r3], -r0
   11478:	andeq	r0, r0, r0
   1147c:	ldr	r0, [pc, #36]	; 114a8 <__assert_fail@plt+0xc4>
   11480:	ldr	r1, [pc, #36]	; 114ac <__assert_fail@plt+0xc8>
   11484:	sub	r1, r1, r0
   11488:	asr	r1, r1, #2
   1148c:	add	r1, r1, r1, lsr #31
   11490:	asrs	r1, r1, #1
   11494:	bxeq	lr
   11498:	ldr	r3, [pc, #16]	; 114b0 <__assert_fail@plt+0xcc>
   1149c:	cmp	r3, #0
   114a0:	bxeq	lr
   114a4:	bx	r3
   114a8:	ldrdeq	r4, [r3], -r0
   114ac:	ldrdeq	r4, [r3], -r0
   114b0:	andeq	r0, r0, r0
   114b4:	push	{r4, lr}
   114b8:	ldr	r4, [pc, #24]	; 114d8 <__assert_fail@plt+0xf4>
   114bc:	ldrb	r3, [r4]
   114c0:	cmp	r3, #0
   114c4:	popne	{r4, pc}
   114c8:	bl	11450 <__assert_fail@plt+0x6c>
   114cc:	mov	r3, #1
   114d0:	strb	r3, [r4]
   114d4:	pop	{r4, pc}
   114d8:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   114dc:	b	1147c <__assert_fail@plt+0x98>
   114e0:	push	{fp}		; (str fp, [sp, #-4]!)
   114e4:	add	fp, sp, #0
   114e8:	sub	sp, sp, #12
   114ec:	mov	r3, r0
   114f0:	strb	r3, [fp, #-5]
   114f4:	ldrb	r3, [fp, #-5]
   114f8:	mov	r0, r3
   114fc:	add	sp, fp, #0
   11500:	pop	{fp}		; (ldr fp, [sp], #4)
   11504:	bx	lr
   11508:	str	fp, [sp, #-8]!
   1150c:	str	lr, [sp, #4]
   11510:	add	fp, sp, #4
   11514:	movw	r0, #6844	; 0x1abc
   11518:	movt	r0, #2
   1151c:	bl	11288 <gettext@plt>
   11520:	mov	r2, r0
   11524:	movw	r3, #16876	; 0x41ec
   11528:	movt	r3, #3
   1152c:	ldr	r3, [r3]
   11530:	mov	r1, r3
   11534:	mov	r0, r2
   11538:	bl	11090 <fputs_unlocked@plt>
   1153c:	nop	{0}
   11540:	sub	sp, fp, #4
   11544:	ldr	fp, [sp]
   11548:	add	sp, sp, #4
   1154c:	pop	{pc}		; (ldr pc, [sp], #4)
   11550:	str	fp, [sp, #-8]!
   11554:	str	lr, [sp, #4]
   11558:	add	fp, sp, #4
   1155c:	movw	r0, #6900	; 0x1af4
   11560:	movt	r0, #2
   11564:	bl	11288 <gettext@plt>
   11568:	mov	r2, r0
   1156c:	movw	r3, #16876	; 0x41ec
   11570:	movt	r3, #3
   11574:	ldr	r3, [r3]
   11578:	mov	r1, r3
   1157c:	mov	r0, r2
   11580:	bl	11090 <fputs_unlocked@plt>
   11584:	nop	{0}
   11588:	sub	sp, fp, #4
   1158c:	ldr	fp, [sp]
   11590:	add	sp, sp, #4
   11594:	pop	{pc}		; (ldr pc, [sp], #4)
   11598:	str	fp, [sp, #-8]!
   1159c:	str	lr, [sp, #4]
   115a0:	add	fp, sp, #4
   115a4:	sub	sp, sp, #80	; 0x50
   115a8:	str	r0, [fp, #-80]	; 0xffffffb0
   115ac:	movw	r2, #7348	; 0x1cb4
   115b0:	movt	r2, #2
   115b4:	sub	r3, fp, #72	; 0x48
   115b8:	ldrd	r0, [r2]
   115bc:	strd	r0, [r3]
   115c0:	ldrd	r0, [r2, #8]
   115c4:	strd	r0, [r3, #8]
   115c8:	ldrd	r0, [r2, #16]
   115cc:	strd	r0, [r3, #16]
   115d0:	ldrd	r0, [r2, #24]
   115d4:	strd	r0, [r3, #24]
   115d8:	ldrd	r0, [r2, #32]
   115dc:	strd	r0, [r3, #32]
   115e0:	ldrd	r0, [r2, #40]	; 0x28
   115e4:	strd	r0, [r3, #40]	; 0x28
   115e8:	ldrd	r0, [r2, #48]	; 0x30
   115ec:	strd	r0, [r3, #48]	; 0x30
   115f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   115f4:	str	r3, [fp, #-8]
   115f8:	sub	r3, fp, #72	; 0x48
   115fc:	str	r3, [fp, #-12]
   11600:	b	11610 <__assert_fail@plt+0x22c>
   11604:	ldr	r3, [fp, #-12]
   11608:	add	r3, r3, #8
   1160c:	str	r3, [fp, #-12]
   11610:	ldr	r3, [fp, #-12]
   11614:	ldr	r3, [r3]
   11618:	cmp	r3, #0
   1161c:	beq	11640 <__assert_fail@plt+0x25c>
   11620:	ldr	r3, [fp, #-12]
   11624:	ldr	r3, [r3]
   11628:	mov	r1, r3
   1162c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11630:	bl	110b4 <strcmp@plt>
   11634:	mov	r3, r0
   11638:	cmp	r3, #0
   1163c:	bne	11604 <__assert_fail@plt+0x220>
   11640:	ldr	r3, [fp, #-12]
   11644:	ldr	r3, [r3, #4]
   11648:	cmp	r3, #0
   1164c:	beq	1165c <__assert_fail@plt+0x278>
   11650:	ldr	r3, [fp, #-12]
   11654:	ldr	r3, [r3, #4]
   11658:	str	r3, [fp, #-8]
   1165c:	movw	r0, #6976	; 0x1b40
   11660:	movt	r0, #2
   11664:	bl	11288 <gettext@plt>
   11668:	mov	r3, r0
   1166c:	movw	r2, #7000	; 0x1b58
   11670:	movt	r2, #2
   11674:	movw	r1, #7040	; 0x1b80
   11678:	movt	r1, #2
   1167c:	mov	r0, r3
   11680:	bl	110d8 <printf@plt>
   11684:	mov	r1, #0
   11688:	mov	r0, #5
   1168c:	bl	1133c <setlocale@plt>
   11690:	str	r0, [fp, #-16]
   11694:	ldr	r3, [fp, #-16]
   11698:	cmp	r3, #0
   1169c:	beq	116e8 <__assert_fail@plt+0x304>
   116a0:	mov	r2, #3
   116a4:	movw	r1, #7056	; 0x1b90
   116a8:	movt	r1, #2
   116ac:	ldr	r0, [fp, #-16]
   116b0:	bl	113b4 <strncmp@plt>
   116b4:	mov	r3, r0
   116b8:	cmp	r3, #0
   116bc:	beq	116e8 <__assert_fail@plt+0x304>
   116c0:	movw	r0, #7060	; 0x1b94
   116c4:	movt	r0, #2
   116c8:	bl	11288 <gettext@plt>
   116cc:	mov	r2, r0
   116d0:	movw	r3, #16876	; 0x41ec
   116d4:	movt	r3, #3
   116d8:	ldr	r3, [r3]
   116dc:	mov	r1, r3
   116e0:	mov	r0, r2
   116e4:	bl	11090 <fputs_unlocked@plt>
   116e8:	movw	r0, #7132	; 0x1bdc
   116ec:	movt	r0, #2
   116f0:	bl	11288 <gettext@plt>
   116f4:	mov	r3, r0
   116f8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   116fc:	movw	r1, #7000	; 0x1b58
   11700:	movt	r1, #2
   11704:	mov	r0, r3
   11708:	bl	110d8 <printf@plt>
   1170c:	movw	r0, #7160	; 0x1bf8
   11710:	movt	r0, #2
   11714:	bl	11288 <gettext@plt>
   11718:	ldr	r2, [fp, #-8]
   1171c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11720:	cmp	r2, r3
   11724:	bne	11734 <__assert_fail@plt+0x350>
   11728:	movw	r3, #7212	; 0x1c2c
   1172c:	movt	r3, #2
   11730:	b	1173c <__assert_fail@plt+0x358>
   11734:	movw	r3, #7224	; 0x1c38
   11738:	movt	r3, #2
   1173c:	mov	r2, r3
   11740:	ldr	r1, [fp, #-8]
   11744:	bl	110d8 <printf@plt>
   11748:	nop	{0}
   1174c:	sub	sp, fp, #4
   11750:	ldr	fp, [sp]
   11754:	add	sp, sp, #4
   11758:	pop	{pc}		; (ldr pc, [sp], #4)
   1175c:	str	fp, [sp, #-8]!
   11760:	str	lr, [sp, #4]
   11764:	add	fp, sp, #4
   11768:	sub	sp, sp, #8
   1176c:	str	r0, [fp, #-8]
   11770:	str	r1, [fp, #-12]
   11774:	ldr	r3, [fp, #-8]
   11778:	mov	r0, r3
   1177c:	asr	r1, r0, #31
   11780:	ldr	r2, [fp, #-12]
   11784:	bl	1752c <__assert_fail@plt+0x6148>
   11788:	mov	r3, r0
   1178c:	mov	r0, r3
   11790:	sub	sp, fp, #4
   11794:	ldr	fp, [sp]
   11798:	add	sp, sp, #4
   1179c:	pop	{pc}		; (ldr pc, [sp], #4)
   117a0:	str	fp, [sp, #-8]!
   117a4:	str	lr, [sp, #4]
   117a8:	add	fp, sp, #4
   117ac:	movw	r0, #8216	; 0x2018
   117b0:	movt	r0, #2
   117b4:	bl	11288 <gettext@plt>
   117b8:	mov	r3, r0
   117bc:	mov	r2, r3
   117c0:	mov	r1, #0
   117c4:	mov	r0, #1
   117c8:	bl	11210 <error@plt>
   117cc:	push	{fp}		; (str fp, [sp, #-4]!)
   117d0:	add	fp, sp, #0
   117d4:	sub	sp, sp, #20
   117d8:	mov	r3, #0
   117dc:	str	r3, [fp, #-16]
   117e0:	movw	r3, #16888	; 0x41f8
   117e4:	movt	r3, #3
   117e8:	ldr	r3, [r3]
   117ec:	str	r3, [fp, #-8]
   117f0:	mov	r3, #0
   117f4:	str	r3, [fp, #-12]
   117f8:	b	11874 <__assert_fail@plt+0x490>
   117fc:	ldr	r3, [fp, #-8]
   11800:	ldr	r3, [r3, #8]
   11804:	cmp	r3, #0
   11808:	beq	11850 <__assert_fail@plt+0x46c>
   1180c:	ldr	r3, [fp, #-8]
   11810:	ldr	r3, [r3, #8]
   11814:	cmp	r3, #1
   11818:	beq	11850 <__assert_fail@plt+0x46c>
   1181c:	movw	r3, #16705	; 0x4141
   11820:	movt	r3, #3
   11824:	ldrb	r3, [r3]
   11828:	cmp	r3, #0
   1182c:	beq	1185c <__assert_fail@plt+0x478>
   11830:	ldr	r3, [fp, #-8]
   11834:	ldr	r3, [r3, #24]
   11838:	cmp	r3, #0
   1183c:	ble	1185c <__assert_fail@plt+0x478>
   11840:	ldr	r3, [fp, #-8]
   11844:	ldr	r3, [r3, #28]
   11848:	cmp	r3, #0
   1184c:	ble	1185c <__assert_fail@plt+0x478>
   11850:	ldr	r3, [fp, #-16]
   11854:	add	r3, r3, #1
   11858:	str	r3, [fp, #-16]
   1185c:	ldr	r3, [fp, #-8]
   11860:	add	r3, r3, #40	; 0x28
   11864:	str	r3, [fp, #-8]
   11868:	ldr	r3, [fp, #-12]
   1186c:	add	r3, r3, #1
   11870:	str	r3, [fp, #-12]
   11874:	movw	r3, #16732	; 0x415c
   11878:	movt	r3, #3
   1187c:	ldr	r3, [r3]
   11880:	mov	r2, r3
   11884:	ldr	r3, [fp, #-12]
   11888:	cmp	r3, r2
   1188c:	bcc	117fc <__assert_fail@plt+0x418>
   11890:	ldr	r3, [fp, #-16]
   11894:	mov	r0, r3
   11898:	add	sp, fp, #0
   1189c:	pop	{fp}		; (ldr fp, [sp], #4)
   118a0:	bx	lr
   118a4:	str	fp, [sp, #-8]!
   118a8:	str	lr, [sp, #4]
   118ac:	add	fp, sp, #4
   118b0:	sub	sp, sp, #56	; 0x38
   118b4:	str	r0, [fp, #-40]	; 0xffffffd8
   118b8:	mov	r3, r1
   118bc:	str	r2, [fp, #-48]	; 0xffffffd0
   118c0:	strb	r3, [fp, #-41]	; 0xffffffd7
   118c4:	mvn	r2, #0
   118c8:	mvn	r3, #0
   118cc:	strd	r2, [fp, #-36]	; 0xffffffdc
   118d0:	sub	r2, fp, #28
   118d4:	sub	r1, fp, #16
   118d8:	movw	r3, #7224	; 0x1c38
   118dc:	movt	r3, #2
   118e0:	str	r3, [sp]
   118e4:	mov	r3, r2
   118e8:	mov	r2, #10
   118ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   118f0:	bl	201d0 <__assert_fail@plt+0xedec>
   118f4:	str	r0, [fp, #-8]
   118f8:	ldr	r3, [fp, #-8]
   118fc:	cmp	r3, #0
   11900:	beq	11930 <__assert_fail@plt+0x54c>
   11904:	ldr	r3, [fp, #-8]
   11908:	cmp	r3, #2
   1190c:	beq	11930 <__assert_fail@plt+0x54c>
   11910:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   11914:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11918:	str	r3, [sp]
   1191c:	movw	r3, #7784	; 0x1e68
   11920:	movt	r3, #2
   11924:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11928:	ldr	r0, [fp, #-8]
   1192c:	bl	1ff30 <__assert_fail@plt+0xeb4c>
   11930:	ldr	r3, [fp, #-16]
   11934:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11938:	cmp	r2, r3
   1193c:	beq	1194c <__assert_fail@plt+0x568>
   11940:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11944:	orrs	r3, r2, r3
   11948:	bne	11954 <__assert_fail@plt+0x570>
   1194c:	mov	r3, #0
   11950:	b	11a2c <__assert_fail@plt+0x648>
   11954:	ldr	r3, [fp, #-16]
   11958:	ldrb	r3, [r3]
   1195c:	cmp	r3, #58	; 0x3a
   11960:	bne	119f0 <__assert_fail@plt+0x60c>
   11964:	ldr	r3, [fp, #-16]
   11968:	add	r3, r3, #1
   1196c:	str	r3, [fp, #-12]
   11970:	sub	r2, fp, #36	; 0x24
   11974:	sub	r1, fp, #16
   11978:	movw	r3, #7224	; 0x1c38
   1197c:	movt	r3, #2
   11980:	str	r3, [sp]
   11984:	mov	r3, r2
   11988:	mov	r2, #10
   1198c:	ldr	r0, [fp, #-12]
   11990:	bl	201d0 <__assert_fail@plt+0xedec>
   11994:	str	r0, [fp, #-8]
   11998:	ldr	r3, [fp, #-8]
   1199c:	cmp	r3, #0
   119a0:	beq	119c4 <__assert_fail@plt+0x5e0>
   119a4:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   119a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   119ac:	str	r3, [sp]
   119b0:	movw	r3, #7784	; 0x1e68
   119b4:	movt	r3, #2
   119b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   119bc:	ldr	r0, [fp, #-8]
   119c0:	bl	1ff30 <__assert_fail@plt+0xeb4c>
   119c4:	ldr	r3, [fp, #-16]
   119c8:	ldr	r2, [fp, #-12]
   119cc:	cmp	r2, r3
   119d0:	beq	119e8 <__assert_fail@plt+0x604>
   119d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   119d8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   119dc:	cmp	r1, r3
   119e0:	cmpeq	r0, r2
   119e4:	bcs	119f0 <__assert_fail@plt+0x60c>
   119e8:	mov	r3, #0
   119ec:	b	11a2c <__assert_fail@plt+0x648>
   119f0:	ldr	r3, [fp, #-16]
   119f4:	ldrb	r3, [r3]
   119f8:	cmp	r3, #0
   119fc:	beq	11a08 <__assert_fail@plt+0x624>
   11a00:	mov	r3, #0
   11a04:	b	11a2c <__assert_fail@plt+0x648>
   11a08:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   11a0c:	movw	r3, #16960	; 0x4240
   11a10:	movt	r3, #3
   11a14:	strd	r0, [r3]
   11a18:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11a1c:	movw	r3, #16736	; 0x4160
   11a20:	movt	r3, #3
   11a24:	strd	r0, [r3]
   11a28:	mov	r3, #1
   11a2c:	mov	r0, r3
   11a30:	sub	sp, fp, #4
   11a34:	ldr	fp, [sp]
   11a38:	add	sp, sp, #4
   11a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a40:	str	fp, [sp, #-8]!
   11a44:	str	lr, [sp, #4]
   11a48:	add	fp, sp, #4
   11a4c:	sub	sp, sp, #8
   11a50:	str	r0, [fp, #-8]
   11a54:	movw	r0, #8236	; 0x202c
   11a58:	movt	r0, #2
   11a5c:	bl	11288 <gettext@plt>
   11a60:	mov	r3, r0
   11a64:	movw	r2, #16732	; 0x415c
   11a68:	movt	r2, #3
   11a6c:	mov	r1, #1
   11a70:	ldr	r0, [fp, #-8]
   11a74:	bl	12b08 <__assert_fail@plt+0x1724>
   11a78:	movw	r3, #16916	; 0x4214
   11a7c:	movt	r3, #3
   11a80:	mov	r2, #1
   11a84:	strb	r2, [r3]
   11a88:	nop	{0}
   11a8c:	sub	sp, fp, #4
   11a90:	ldr	fp, [sp]
   11a94:	add	sp, sp, #4
   11a98:	pop	{pc}		; (ldr pc, [sp], #4)
   11a9c:	str	fp, [sp, #-8]!
   11aa0:	str	lr, [sp, #4]
   11aa4:	add	fp, sp, #4
   11aa8:	sub	sp, sp, #16
   11aac:	str	r0, [fp, #-16]
   11ab0:	ldr	r0, [fp, #-16]
   11ab4:	bl	11294 <strlen@plt>
   11ab8:	str	r0, [fp, #-8]
   11abc:	ldr	r3, [fp, #-8]
   11ac0:	cmp	r3, #0
   11ac4:	bge	11acc <__assert_fail@plt+0x6e8>
   11ac8:	bl	117a0 <__assert_fail@plt+0x3bc>
   11acc:	ldr	r2, [fp, #-8]
   11ad0:	movw	r3, #17012	; 0x4274
   11ad4:	movt	r3, #3
   11ad8:	str	r2, [r3]
   11adc:	movw	r3, #16764	; 0x417c
   11ae0:	movt	r3, #3
   11ae4:	ldr	r2, [fp, #-16]
   11ae8:	str	r2, [r3]
   11aec:	nop	{0}
   11af0:	sub	sp, fp, #4
   11af4:	ldr	fp, [sp]
   11af8:	add	sp, sp, #4
   11afc:	pop	{pc}		; (ldr pc, [sp], #4)
   11b00:	str	r4, [sp, #-12]!
   11b04:	str	fp, [sp, #4]
   11b08:	str	lr, [sp, #8]
   11b0c:	add	fp, sp, #8
   11b10:	sub	sp, sp, #68	; 0x44
   11b14:	str	r0, [fp, #-56]	; 0xffffffc8
   11b18:	str	r1, [fp, #-60]	; 0xffffffc4
   11b1c:	mov	r3, #0
   11b20:	strb	r3, [fp, #-17]	; 0xffffffef
   11b24:	mov	r3, #0
   11b28:	strb	r3, [fp, #-18]	; 0xffffffee
   11b2c:	mov	r3, #0
   11b30:	strb	r3, [fp, #-19]	; 0xffffffed
   11b34:	mov	r3, #0
   11b38:	str	r3, [fp, #-24]	; 0xffffffe8
   11b3c:	mov	r3, #0
   11b40:	str	r3, [fp, #-28]	; 0xffffffe4
   11b44:	mov	r3, #0
   11b48:	str	r3, [fp, #-44]	; 0xffffffd4
   11b4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11b50:	ldr	r3, [r3]
   11b54:	mov	r0, r3
   11b58:	bl	1a58c <__assert_fail@plt+0x91a8>
   11b5c:	movw	r1, #7224	; 0x1c38
   11b60:	movt	r1, #2
   11b64:	mov	r0, #6
   11b68:	bl	1133c <setlocale@plt>
   11b6c:	movw	r1, #8264	; 0x2048
   11b70:	movt	r1, #2
   11b74:	movw	r0, #7248	; 0x1c50
   11b78:	movt	r0, #2
   11b7c:	bl	1139c <bindtextdomain@plt>
   11b80:	movw	r0, #7248	; 0x1c50
   11b84:	movt	r0, #2
   11b88:	bl	1118c <textdomain@plt>
   11b8c:	movw	r0, #28056	; 0x6d98
   11b90:	movt	r0, #1
   11b94:	bl	21a88 <__assert_fail@plt+0x106a4>
   11b98:	mov	r3, #0
   11b9c:	str	r3, [fp, #-16]
   11ba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11ba4:	cmp	r3, #1
   11ba8:	ble	11bc8 <__assert_fail@plt+0x7e4>
   11bac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11bb0:	sub	r3, r3, #1
   11bb4:	mov	r1, #4
   11bb8:	mov	r0, r3
   11bbc:	bl	1e5f0 <__assert_fail@plt+0xd20c>
   11bc0:	mov	r3, r0
   11bc4:	b	11bcc <__assert_fail@plt+0x7e8>
   11bc8:	mov	r3, #0
   11bcc:	str	r3, [fp, #-36]	; 0xffffffdc
   11bd0:	mvn	r3, #0
   11bd4:	str	r3, [fp, #-48]	; 0xffffffd0
   11bd8:	sub	r3, fp, #48	; 0x30
   11bdc:	str	r3, [sp]
   11be0:	movw	r3, #7784	; 0x1e68
   11be4:	movt	r3, #2
   11be8:	movw	r2, #7412	; 0x1cf4
   11bec:	movt	r2, #2
   11bf0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11bf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11bf8:	bl	11264 <getopt_long@plt>
   11bfc:	str	r0, [fp, #-40]	; 0xffffffd8
   11c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11c04:	cmn	r3, #1
   11c08:	bne	11c1c <__assert_fail@plt+0x838>
   11c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c10:	cmp	r3, #0
   11c14:	bne	12708 <__assert_fail@plt+0x1324>
   11c18:	b	12718 <__assert_fail@plt+0x1334>
   11c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11c20:	sub	r3, r3, #48	; 0x30
   11c24:	cmp	r3, #9
   11c28:	bhi	11c8c <__assert_fail@plt+0x8a8>
   11c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c30:	add	r2, r3, #1
   11c34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11c38:	cmp	r2, r3
   11c3c:	bcc	11c54 <__assert_fail@plt+0x870>
   11c40:	sub	r3, fp, #44	; 0x2c
   11c44:	mov	r1, r3
   11c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c4c:	bl	1e670 <__assert_fail@plt+0xd28c>
   11c50:	str	r0, [fp, #-24]	; 0xffffffe8
   11c54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c58:	add	r2, r3, #1
   11c5c:	str	r2, [fp, #-28]	; 0xffffffe4
   11c60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11c64:	add	r3, r2, r3
   11c68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11c6c:	uxtb	r2, r2
   11c70:	strb	r2, [r3]
   11c74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c7c:	add	r3, r2, r3
   11c80:	mov	r2, #0
   11c84:	strb	r2, [r3]
   11c88:	b	11bd0 <__assert_fail@plt+0x7ec>
   11c8c:	mov	r3, #0
   11c90:	str	r3, [fp, #-28]	; 0xffffffe4
   11c94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11c98:	add	r3, r3, #3
   11c9c:	cmp	r3, #260	; 0x104
   11ca0:	ldrls	pc, [pc, r3, lsl #2]
   11ca4:	b	126d0 <__assert_fail@plt+0x12ec>
   11ca8:	andeq	r2, r1, r8, ror r6
   11cac:	andeq	r2, r1, r0, ror r6
   11cb0:	ldrdeq	r2, [r1], -r0
   11cb4:	ldrdeq	r2, [r1], -r0
   11cb8:	strheq	r2, [r1], -ip
   11cbc:	ldrdeq	r2, [r1], -r0
   11cc0:	ldrdeq	r2, [r1], -r0
   11cc4:	ldrdeq	r2, [r1], -r0
   11cc8:	ldrdeq	r2, [r1], -r0
   11ccc:	ldrdeq	r2, [r1], -r0
   11cd0:	ldrdeq	r2, [r1], -r0
   11cd4:	ldrdeq	r2, [r1], -r0
   11cd8:	ldrdeq	r2, [r1], -r0
   11cdc:	ldrdeq	r2, [r1], -r0
   11ce0:	ldrdeq	r2, [r1], -r0
   11ce4:	ldrdeq	r2, [r1], -r0
   11ce8:	ldrdeq	r2, [r1], -r0
   11cec:	ldrdeq	r2, [r1], -r0
   11cf0:	ldrdeq	r2, [r1], -r0
   11cf4:	ldrdeq	r2, [r1], -r0
   11cf8:	ldrdeq	r2, [r1], -r0
   11cfc:	ldrdeq	r2, [r1], -r0
   11d00:	ldrdeq	r2, [r1], -r0
   11d04:	ldrdeq	r2, [r1], -r0
   11d08:	ldrdeq	r2, [r1], -r0
   11d0c:	ldrdeq	r2, [r1], -r0
   11d10:	ldrdeq	r2, [r1], -r0
   11d14:	ldrdeq	r2, [r1], -r0
   11d18:	ldrdeq	r2, [r1], -r0
   11d1c:	ldrdeq	r2, [r1], -r0
   11d20:	ldrdeq	r2, [r1], -r0
   11d24:	ldrdeq	r2, [r1], -r0
   11d28:	ldrdeq	r2, [r1], -r0
   11d2c:	ldrdeq	r2, [r1], -r0
   11d30:	ldrdeq	r2, [r1], -r0
   11d34:	ldrdeq	r2, [r1], -r0
   11d38:	ldrdeq	r2, [r1], -r0
   11d3c:	ldrdeq	r2, [r1], -r0
   11d40:	ldrdeq	r2, [r1], -r0
   11d44:	ldrdeq	r2, [r1], -r0
   11d48:	ldrdeq	r2, [r1], -r0
   11d4c:	ldrdeq	r2, [r1], -r0
   11d50:	ldrdeq	r2, [r1], -r0
   11d54:	ldrdeq	r2, [r1], -r0
   11d58:	ldrdeq	r2, [r1], -r0
   11d5c:	ldrdeq	r2, [r1], -r0
   11d60:	ldrdeq	r2, [r1], -r0
   11d64:	ldrdeq	r2, [r1], -r0
   11d68:	ldrdeq	r2, [r1], -r0
   11d6c:	ldrdeq	r2, [r1], -r0
   11d70:	ldrdeq	r2, [r1], -r0
   11d74:	ldrdeq	r2, [r1], -r0
   11d78:	ldrdeq	r2, [r1], -r0
   11d7c:	ldrdeq	r2, [r1], -r0
   11d80:	ldrdeq	r2, [r1], -r0
   11d84:	ldrdeq	r2, [r1], -r0
   11d88:	ldrdeq	r2, [r1], -r0
   11d8c:	ldrdeq	r2, [r1], -r0
   11d90:	ldrdeq	r2, [r1], -r0
   11d94:	ldrdeq	r2, [r1], -r0
   11d98:	ldrdeq	r2, [r1], -r0
   11d9c:	ldrdeq	r2, [r1], -r0
   11da0:	ldrdeq	r2, [r1], -r0
   11da4:	ldrdeq	r2, [r1], -r0
   11da8:	ldrdeq	r2, [r1], -r0
   11dac:	ldrdeq	r2, [r1], -r0
   11db0:	ldrdeq	r2, [r1], -r0
   11db4:	ldrdeq	r2, [r1], -r0
   11db8:	ldrdeq	r2, [r1], -r0
   11dbc:	ldrdeq	r2, [r1], -r0
   11dc0:	ldrdeq	r2, [r1], -r0
   11dc4:	andeq	r2, r1, r4, ror r2
   11dc8:	ldrdeq	r2, [r1], -r0
   11dcc:	ldrdeq	r2, [r1], -ip
   11dd0:	ldrdeq	r2, [r1], -r0
   11dd4:	ldrdeq	r2, [r1], -r0
   11dd8:	ldrdeq	r2, [r1], -r0
   11ddc:	andeq	r2, r1, r8, asr r3
   11de0:	ldrdeq	r2, [r1], -r0
   11de4:	ldrdeq	r2, [r1], -r0
   11de8:	ldrdeq	r2, [r1], -r0
   11dec:	andeq	r2, r1, r0, lsl r4
   11df0:	ldrdeq	r2, [r1], -r0
   11df4:	ldrdeq	r2, [r1], -r0
   11df8:	ldrdeq	r2, [r1], -r0
   11dfc:	ldrdeq	r2, [r1], -r0
   11e00:	strdeq	r2, [r1], -r4
   11e04:	andeq	r2, r1, r0, lsl #11
   11e08:	ldrdeq	r2, [r1], -r0
   11e0c:	ldrdeq	r2, [r1], -r0
   11e10:	andeq	r2, r1, r4, lsr #12
   11e14:	ldrdeq	r2, [r1], -r0
   11e18:	ldrdeq	r2, [r1], -r0
   11e1c:	ldrdeq	r2, [r1], -r0
   11e20:	ldrdeq	r2, [r1], -r0
   11e24:	ldrdeq	r2, [r1], -r0
   11e28:	ldrdeq	r2, [r1], -r0
   11e2c:	ldrdeq	r2, [r1], -r0
   11e30:	ldrdeq	r2, [r1], -r0
   11e34:	ldrdeq	r2, [r1], -r0
   11e38:	andeq	r2, r1, r4, lsl r2
   11e3c:	andeq	r2, r1, r8, lsr r2
   11e40:	andeq	r2, r1, ip, asr #4
   11e44:	andeq	r2, r1, r0, ror #4
   11e48:	muleq	r1, r0, r2
   11e4c:	ldrdeq	r2, [r1], -ip
   11e50:	ldrdeq	r2, [r1], -r0
   11e54:	strdeq	r2, [r1], -r0
   11e58:	andeq	r2, r1, ip, lsl #6
   11e5c:	ldrdeq	r2, [r1], -r0
   11e60:	ldrdeq	r2, [r1], -r0
   11e64:	andeq	r2, r1, ip, ror #6
   11e68:	andeq	r2, r1, r0, lsr #7
   11e6c:	andeq	r2, r1, r4, asr #7
   11e70:	andeq	r2, r1, r4, asr r4
   11e74:	ldrdeq	r2, [r1], -r0
   11e78:	ldrdeq	r2, [r1], -r0
   11e7c:	andeq	r2, r1, r8, lsl #9
   11e80:	muleq	r1, ip, r4
   11e84:	andeq	r2, r1, ip, asr r5
   11e88:	ldrdeq	r2, [r1], -r0
   11e8c:	andeq	r2, r1, r4, lsr #11
   11e90:			; <UNDEFINED> instruction: 0x000125b8
   11e94:	ldrdeq	r2, [r1], -r0
   11e98:	ldrdeq	r2, [r1], -r0
   11e9c:	ldrdeq	r2, [r1], -r0
   11ea0:	ldrdeq	r2, [r1], -r0
   11ea4:	ldrdeq	r2, [r1], -r0
   11ea8:	ldrdeq	r2, [r1], -r0
   11eac:	ldrdeq	r2, [r1], -r0
   11eb0:	ldrdeq	r2, [r1], -r0
   11eb4:	ldrdeq	r2, [r1], -r0
   11eb8:	ldrdeq	r2, [r1], -r0
   11ebc:	ldrdeq	r2, [r1], -r0
   11ec0:	ldrdeq	r2, [r1], -r0
   11ec4:	ldrdeq	r2, [r1], -r0
   11ec8:	ldrdeq	r2, [r1], -r0
   11ecc:	ldrdeq	r2, [r1], -r0
   11ed0:	ldrdeq	r2, [r1], -r0
   11ed4:	ldrdeq	r2, [r1], -r0
   11ed8:	ldrdeq	r2, [r1], -r0
   11edc:	ldrdeq	r2, [r1], -r0
   11ee0:	ldrdeq	r2, [r1], -r0
   11ee4:	ldrdeq	r2, [r1], -r0
   11ee8:	ldrdeq	r2, [r1], -r0
   11eec:	ldrdeq	r2, [r1], -r0
   11ef0:	ldrdeq	r2, [r1], -r0
   11ef4:	ldrdeq	r2, [r1], -r0
   11ef8:	ldrdeq	r2, [r1], -r0
   11efc:	ldrdeq	r2, [r1], -r0
   11f00:	ldrdeq	r2, [r1], -r0
   11f04:	ldrdeq	r2, [r1], -r0
   11f08:	ldrdeq	r2, [r1], -r0
   11f0c:	ldrdeq	r2, [r1], -r0
   11f10:	ldrdeq	r2, [r1], -r0
   11f14:	ldrdeq	r2, [r1], -r0
   11f18:	ldrdeq	r2, [r1], -r0
   11f1c:	ldrdeq	r2, [r1], -r0
   11f20:	ldrdeq	r2, [r1], -r0
   11f24:	ldrdeq	r2, [r1], -r0
   11f28:	ldrdeq	r2, [r1], -r0
   11f2c:	ldrdeq	r2, [r1], -r0
   11f30:	ldrdeq	r2, [r1], -r0
   11f34:	ldrdeq	r2, [r1], -r0
   11f38:	ldrdeq	r2, [r1], -r0
   11f3c:	ldrdeq	r2, [r1], -r0
   11f40:	ldrdeq	r2, [r1], -r0
   11f44:	ldrdeq	r2, [r1], -r0
   11f48:	ldrdeq	r2, [r1], -r0
   11f4c:	ldrdeq	r2, [r1], -r0
   11f50:	ldrdeq	r2, [r1], -r0
   11f54:	ldrdeq	r2, [r1], -r0
   11f58:	ldrdeq	r2, [r1], -r0
   11f5c:	ldrdeq	r2, [r1], -r0
   11f60:	ldrdeq	r2, [r1], -r0
   11f64:	ldrdeq	r2, [r1], -r0
   11f68:	ldrdeq	r2, [r1], -r0
   11f6c:	ldrdeq	r2, [r1], -r0
   11f70:	ldrdeq	r2, [r1], -r0
   11f74:	ldrdeq	r2, [r1], -r0
   11f78:	ldrdeq	r2, [r1], -r0
   11f7c:	ldrdeq	r2, [r1], -r0
   11f80:	ldrdeq	r2, [r1], -r0
   11f84:	ldrdeq	r2, [r1], -r0
   11f88:	ldrdeq	r2, [r1], -r0
   11f8c:	ldrdeq	r2, [r1], -r0
   11f90:	ldrdeq	r2, [r1], -r0
   11f94:	ldrdeq	r2, [r1], -r0
   11f98:	ldrdeq	r2, [r1], -r0
   11f9c:	ldrdeq	r2, [r1], -r0
   11fa0:	ldrdeq	r2, [r1], -r0
   11fa4:	ldrdeq	r2, [r1], -r0
   11fa8:	ldrdeq	r2, [r1], -r0
   11fac:	ldrdeq	r2, [r1], -r0
   11fb0:	ldrdeq	r2, [r1], -r0
   11fb4:	ldrdeq	r2, [r1], -r0
   11fb8:	ldrdeq	r2, [r1], -r0
   11fbc:	ldrdeq	r2, [r1], -r0
   11fc0:	ldrdeq	r2, [r1], -r0
   11fc4:	ldrdeq	r2, [r1], -r0
   11fc8:	ldrdeq	r2, [r1], -r0
   11fcc:	ldrdeq	r2, [r1], -r0
   11fd0:	ldrdeq	r2, [r1], -r0
   11fd4:	ldrdeq	r2, [r1], -r0
   11fd8:	ldrdeq	r2, [r1], -r0
   11fdc:	ldrdeq	r2, [r1], -r0
   11fe0:	ldrdeq	r2, [r1], -r0
   11fe4:	ldrdeq	r2, [r1], -r0
   11fe8:	ldrdeq	r2, [r1], -r0
   11fec:	ldrdeq	r2, [r1], -r0
   11ff0:	ldrdeq	r2, [r1], -r0
   11ff4:	ldrdeq	r2, [r1], -r0
   11ff8:	ldrdeq	r2, [r1], -r0
   11ffc:	ldrdeq	r2, [r1], -r0
   12000:	ldrdeq	r2, [r1], -r0
   12004:	ldrdeq	r2, [r1], -r0
   12008:	ldrdeq	r2, [r1], -r0
   1200c:	ldrdeq	r2, [r1], -r0
   12010:	ldrdeq	r2, [r1], -r0
   12014:	ldrdeq	r2, [r1], -r0
   12018:	ldrdeq	r2, [r1], -r0
   1201c:	ldrdeq	r2, [r1], -r0
   12020:	ldrdeq	r2, [r1], -r0
   12024:	ldrdeq	r2, [r1], -r0
   12028:	ldrdeq	r2, [r1], -r0
   1202c:	ldrdeq	r2, [r1], -r0
   12030:	ldrdeq	r2, [r1], -r0
   12034:	ldrdeq	r2, [r1], -r0
   12038:	ldrdeq	r2, [r1], -r0
   1203c:	ldrdeq	r2, [r1], -r0
   12040:	ldrdeq	r2, [r1], -r0
   12044:	ldrdeq	r2, [r1], -r0
   12048:	ldrdeq	r2, [r1], -r0
   1204c:	ldrdeq	r2, [r1], -r0
   12050:	ldrdeq	r2, [r1], -r0
   12054:	ldrdeq	r2, [r1], -r0
   12058:	ldrdeq	r2, [r1], -r0
   1205c:	ldrdeq	r2, [r1], -r0
   12060:	ldrdeq	r2, [r1], -r0
   12064:	ldrdeq	r2, [r1], -r0
   12068:	ldrdeq	r2, [r1], -r0
   1206c:	ldrdeq	r2, [r1], -r0
   12070:	ldrdeq	r2, [r1], -r0
   12074:	ldrdeq	r2, [r1], -r0
   12078:	ldrdeq	r2, [r1], -r0
   1207c:	ldrdeq	r2, [r1], -r0
   12080:	ldrdeq	r2, [r1], -r0
   12084:	ldrdeq	r2, [r1], -r0
   12088:	ldrdeq	r2, [r1], -r0
   1208c:	ldrdeq	r2, [r1], -r0
   12090:	ldrdeq	r2, [r1], -r0
   12094:	ldrdeq	r2, [r1], -r0
   12098:	ldrdeq	r2, [r1], -r0
   1209c:	ldrdeq	r2, [r1], -r0
   120a0:	ldrdeq	r2, [r1], -r0
   120a4:	ldrdeq	r2, [r1], -r0
   120a8:	ldrdeq	r2, [r1], -r0
   120ac:	ldrdeq	r2, [r1], -r0
   120b0:	ldrdeq	r2, [r1], -r0
   120b4:	andeq	r2, r1, r4, ror #3
   120b8:	andeq	r2, r1, r8, asr #2
   120bc:	movw	r3, #16960	; 0x4240
   120c0:	movt	r3, #3
   120c4:	ldrd	r2, [r3]
   120c8:	orrs	r3, r2, r3
   120cc:	bne	1211c <__assert_fail@plt+0xd38>
   120d0:	movw	r3, #16880	; 0x41f0
   120d4:	movt	r3, #3
   120d8:	ldr	r3, [r3]
   120dc:	ldrb	r3, [r3]
   120e0:	cmp	r3, #43	; 0x2b
   120e4:	bne	1211c <__assert_fail@plt+0xd38>
   120e8:	movw	r3, #16880	; 0x41f0
   120ec:	movt	r3, #3
   120f0:	ldr	r3, [r3]
   120f4:	add	r3, r3, #1
   120f8:	mov	r2, r3
   120fc:	mov	r1, #43	; 0x2b
   12100:	mvn	r0, #1
   12104:	bl	118a4 <__assert_fail@plt+0x4c0>
   12108:	mov	r3, r0
   1210c:	eor	r3, r3, #1
   12110:	uxtb	r3, r3
   12114:	cmp	r3, #0
   12118:	beq	126d8 <__assert_fail@plt+0x12f4>
   1211c:	ldr	r3, [fp, #-16]
   12120:	add	r2, r3, #1
   12124:	str	r2, [fp, #-16]
   12128:	lsl	r3, r3, #2
   1212c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12130:	add	r2, r2, r3
   12134:	movw	r3, #16880	; 0x41f0
   12138:	movt	r3, #3
   1213c:	ldr	r3, [r3]
   12140:	str	r3, [r2]
   12144:	b	126d8 <__assert_fail@plt+0x12f4>
   12148:	movw	r3, #16880	; 0x41f0
   1214c:	movt	r3, #3
   12150:	ldr	r3, [r3]
   12154:	cmp	r3, #0
   12158:	bne	1217c <__assert_fail@plt+0xd98>
   1215c:	movw	r0, #8288	; 0x2060
   12160:	movt	r0, #2
   12164:	bl	11288 <gettext@plt>
   12168:	mov	r3, r0
   1216c:	mov	r2, r3
   12170:	mov	r1, #0
   12174:	mov	r0, #1
   12178:	bl	11210 <error@plt>
   1217c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12180:	movw	r3, #16880	; 0x41f0
   12184:	movt	r3, #3
   12188:	ldr	r3, [r3]
   1218c:	mov	r2, r3
   12190:	mov	r1, #0
   12194:	bl	118a4 <__assert_fail@plt+0x4c0>
   12198:	mov	r3, r0
   1219c:	eor	r3, r3, #1
   121a0:	uxtb	r3, r3
   121a4:	cmp	r3, #0
   121a8:	beq	126e0 <__assert_fail@plt+0x12fc>
   121ac:	movw	r0, #8340	; 0x2094
   121b0:	movt	r0, #2
   121b4:	bl	11288 <gettext@plt>
   121b8:	mov	r4, r0
   121bc:	movw	r3, #16880	; 0x41f0
   121c0:	movt	r3, #3
   121c4:	ldr	r3, [r3]
   121c8:	mov	r0, r3
   121cc:	bl	1ceec <__assert_fail@plt+0xbb08>
   121d0:	mov	r3, r0
   121d4:	mov	r2, r4
   121d8:	mov	r1, #0
   121dc:	mov	r0, #1
   121e0:	bl	11210 <error@plt>
   121e4:	movw	r3, #16880	; 0x41f0
   121e8:	movt	r3, #3
   121ec:	ldr	r3, [r3]
   121f0:	mov	r0, r3
   121f4:	bl	11a40 <__assert_fail@plt+0x65c>
   121f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121fc:	bl	17278 <__assert_fail@plt+0x5e94>
   12200:	mov	r3, #0
   12204:	str	r3, [fp, #-24]	; 0xffffffe8
   12208:	mov	r3, #0
   1220c:	str	r3, [fp, #-44]	; 0xffffffd4
   12210:	b	12704 <__assert_fail@plt+0x1320>
   12214:	movw	r3, #16922	; 0x421a
   12218:	movt	r3, #3
   1221c:	mov	r2, #1
   12220:	strb	r2, [r3]
   12224:	movw	r3, #16705	; 0x4141
   12228:	movt	r3, #3
   1222c:	mov	r2, #0
   12230:	strb	r2, [r3]
   12234:	b	12704 <__assert_fail@plt+0x1320>
   12238:	movw	r3, #16923	; 0x421b
   1223c:	movt	r3, #3
   12240:	mov	r2, #1
   12244:	strb	r2, [r3]
   12248:	b	12704 <__assert_fail@plt+0x1320>
   1224c:	movw	r3, #17001	; 0x4269
   12250:	movt	r3, #3
   12254:	mov	r2, #1
   12258:	strb	r2, [r3]
   1225c:	b	12704 <__assert_fail@plt+0x1320>
   12260:	movw	r3, #17002	; 0x426a
   12264:	movt	r3, #3
   12268:	mov	r2, #1
   1226c:	strb	r2, [r3]
   12270:	b	12704 <__assert_fail@plt+0x1320>
   12274:	movw	r3, #16880	; 0x41f0
   12278:	movt	r3, #3
   1227c:	ldr	r2, [r3]
   12280:	movw	r3, #17032	; 0x4288
   12284:	movt	r3, #3
   12288:	str	r2, [r3]
   1228c:	b	12704 <__assert_fail@plt+0x1320>
   12290:	movw	r3, #16880	; 0x41f0
   12294:	movt	r3, #3
   12298:	ldr	r3, [r3]
   1229c:	cmp	r3, #0
   122a0:	beq	122c8 <__assert_fail@plt+0xee4>
   122a4:	movw	r3, #16880	; 0x41f0
   122a8:	movt	r3, #3
   122ac:	ldr	r0, [r3]
   122b0:	movw	r3, #16720	; 0x4150
   122b4:	movt	r3, #3
   122b8:	movw	r2, #16716	; 0x414c
   122bc:	movt	r2, #3
   122c0:	mov	r1, #101	; 0x65
   122c4:	bl	12b90 <__assert_fail@plt+0x17ac>
   122c8:	movw	r3, #16936	; 0x4228
   122cc:	movt	r3, #3
   122d0:	mov	r2, #1
   122d4:	strb	r2, [r3]
   122d8:	b	12704 <__assert_fail@plt+0x1320>
   122dc:	movw	r3, #16920	; 0x4218
   122e0:	movt	r3, #3
   122e4:	mov	r2, #1
   122e8:	strb	r2, [r3]
   122ec:	b	12704 <__assert_fail@plt+0x1320>
   122f0:	movw	r3, #16880	; 0x41f0
   122f4:	movt	r3, #3
   122f8:	ldr	r2, [r3]
   122fc:	movw	r3, #17028	; 0x4284
   12300:	movt	r3, #3
   12304:	str	r2, [r3]
   12308:	b	12704 <__assert_fail@plt+0x1320>
   1230c:	movw	r3, #16880	; 0x41f0
   12310:	movt	r3, #3
   12314:	ldr	r3, [r3]
   12318:	cmp	r3, #0
   1231c:	beq	12344 <__assert_fail@plt+0xf60>
   12320:	movw	r3, #16880	; 0x41f0
   12324:	movt	r3, #3
   12328:	ldr	r0, [r3]
   1232c:	movw	r3, #16728	; 0x4158
   12330:	movt	r3, #3
   12334:	movw	r2, #16724	; 0x4154
   12338:	movt	r2, #3
   1233c:	mov	r1, #105	; 0x69
   12340:	bl	12b90 <__assert_fail@plt+0x17ac>
   12344:	movw	r3, #16937	; 0x4229
   12348:	movt	r3, #3
   1234c:	mov	r2, #1
   12350:	strb	r2, [r3]
   12354:	b	12704 <__assert_fail@plt+0x1320>
   12358:	movw	r3, #16929	; 0x4221
   1235c:	movt	r3, #3
   12360:	mov	r2, #1
   12364:	strb	r2, [r3]
   12368:	b	12704 <__assert_fail@plt+0x1320>
   1236c:	movw	r3, #16880	; 0x41f0
   12370:	movt	r3, #3
   12374:	ldr	r4, [r3]
   12378:	movw	r0, #8364	; 0x20ac
   1237c:	movt	r0, #2
   12380:	bl	11288 <gettext@plt>
   12384:	mov	r3, r0
   12388:	movw	r2, #16708	; 0x4144
   1238c:	movt	r2, #3
   12390:	mov	r1, #1
   12394:	mov	r0, r4
   12398:	bl	12b08 <__assert_fail@plt+0x1724>
   1239c:	b	12704 <__assert_fail@plt+0x1320>
   123a0:	movw	r3, #16912	; 0x4210
   123a4:	movt	r3, #3
   123a8:	mov	r2, #1
   123ac:	strb	r2, [r3]
   123b0:	movw	r3, #16705	; 0x4141
   123b4:	movt	r3, #3
   123b8:	mov	r2, #0
   123bc:	strb	r2, [r3]
   123c0:	b	12704 <__assert_fail@plt+0x1320>
   123c4:	movw	r3, #16988	; 0x425c
   123c8:	movt	r3, #3
   123cc:	mov	r2, #1
   123d0:	strb	r2, [r3]
   123d4:	movw	r3, #16880	; 0x41f0
   123d8:	movt	r3, #3
   123dc:	ldr	r3, [r3]
   123e0:	cmp	r3, #0
   123e4:	beq	126e8 <__assert_fail@plt+0x1304>
   123e8:	movw	r3, #16880	; 0x41f0
   123ec:	movt	r3, #3
   123f0:	ldr	r0, [r3]
   123f4:	movw	r3, #16760	; 0x4178
   123f8:	movt	r3, #3
   123fc:	movw	r2, #16744	; 0x4168
   12400:	movt	r2, #3
   12404:	mov	r1, #110	; 0x6e
   12408:	bl	12b90 <__assert_fail@plt+0x17ac>
   1240c:	b	126e8 <__assert_fail@plt+0x1304>
   12410:	movw	r3, #16752	; 0x4170
   12414:	movt	r3, #3
   12418:	mov	r2, #0
   1241c:	strb	r2, [r3]
   12420:	movw	r3, #16880	; 0x41f0
   12424:	movt	r3, #3
   12428:	ldr	r4, [r3]
   1242c:	movw	r0, #8408	; 0x20d8
   12430:	movt	r0, #2
   12434:	bl	11288 <gettext@plt>
   12438:	mov	r3, r0
   1243c:	movw	r2, #16756	; 0x4174
   12440:	movt	r2, #3
   12444:	mov	r1, #-2147483648	; 0x80000000
   12448:	mov	r0, r4
   1244c:	bl	12b08 <__assert_fail@plt+0x1724>
   12450:	b	12704 <__assert_fail@plt+0x1320>
   12454:	movw	r3, #16880	; 0x41f0
   12458:	movt	r3, #3
   1245c:	ldr	r4, [r3]
   12460:	movw	r0, #8452	; 0x2104
   12464:	movt	r0, #2
   12468:	bl	11288 <gettext@plt>
   1246c:	mov	r3, r0
   12470:	movw	r2, #16944	; 0x4230
   12474:	movt	r2, #3
   12478:	mov	r1, #0
   1247c:	mov	r0, r4
   12480:	bl	12b08 <__assert_fail@plt+0x1724>
   12484:	b	12704 <__assert_fail@plt+0x1320>
   12488:	movw	r3, #17008	; 0x4270
   1248c:	movt	r3, #3
   12490:	mov	r2, #1
   12494:	strb	r2, [r3]
   12498:	b	12704 <__assert_fail@plt+0x1320>
   1249c:	mov	r3, #1
   124a0:	strb	r3, [fp, #-17]	; 0xffffffef
   124a4:	mov	r3, #1
   124a8:	strb	r3, [fp, #-19]	; 0xffffffed
   124ac:	movw	r3, #17009	; 0x4271
   124b0:	movt	r3, #3
   124b4:	ldrb	r3, [r3]
   124b8:	eor	r3, r3, #1
   124bc:	uxtb	r3, r3
   124c0:	cmp	r3, #0
   124c4:	beq	126f0 <__assert_fail@plt+0x130c>
   124c8:	movw	r3, #16880	; 0x41f0
   124cc:	movt	r3, #3
   124d0:	ldr	r3, [r3]
   124d4:	cmp	r3, #0
   124d8:	beq	126f0 <__assert_fail@plt+0x130c>
   124dc:	movw	r3, #16880	; 0x41f0
   124e0:	movt	r3, #3
   124e4:	ldr	r3, [r3]
   124e8:	mov	r0, r3
   124ec:	bl	11a9c <__assert_fail@plt+0x6b8>
   124f0:	b	126f0 <__assert_fail@plt+0x130c>
   124f4:	mov	r3, #0
   124f8:	strb	r3, [fp, #-19]	; 0xffffffed
   124fc:	movw	r3, #16764	; 0x417c
   12500:	movt	r3, #3
   12504:	movw	r2, #7224	; 0x1c38
   12508:	movt	r2, #2
   1250c:	str	r2, [r3]
   12510:	movw	r3, #17012	; 0x4274
   12514:	movt	r3, #3
   12518:	mov	r2, #0
   1251c:	str	r2, [r3]
   12520:	movw	r3, #17009	; 0x4271
   12524:	movt	r3, #3
   12528:	mov	r2, #1
   1252c:	strb	r2, [r3]
   12530:	movw	r3, #16880	; 0x41f0
   12534:	movt	r3, #3
   12538:	ldr	r3, [r3]
   1253c:	cmp	r3, #0
   12540:	beq	126f8 <__assert_fail@plt+0x1314>
   12544:	movw	r3, #16880	; 0x41f0
   12548:	movt	r3, #3
   1254c:	ldr	r3, [r3]
   12550:	mov	r0, r3
   12554:	bl	11a9c <__assert_fail@plt+0x6b8>
   12558:	b	126f8 <__assert_fail@plt+0x1314>
   1255c:	movw	r3, #16704	; 0x4140
   12560:	movt	r3, #3
   12564:	mov	r2, #0
   12568:	strb	r2, [r3]
   1256c:	movw	r3, #16917	; 0x4215
   12570:	movt	r3, #3
   12574:	mov	r2, #1
   12578:	strb	r2, [r3]
   1257c:	b	12704 <__assert_fail@plt+0x1320>
   12580:	movw	r3, #16704	; 0x4140
   12584:	movt	r3, #3
   12588:	mov	r2, #0
   1258c:	strb	r2, [r3]
   12590:	movw	r3, #16917	; 0x4215
   12594:	movt	r3, #3
   12598:	mov	r2, #0
   1259c:	strb	r2, [r3]
   125a0:	b	12704 <__assert_fail@plt+0x1320>
   125a4:	movw	r3, #17000	; 0x4268
   125a8:	movt	r3, #3
   125ac:	mov	r2, #1
   125b0:	strb	r2, [r3]
   125b4:	b	12704 <__assert_fail@plt+0x1320>
   125b8:	mov	r3, #1
   125bc:	strb	r3, [fp, #-17]	; 0xffffffef
   125c0:	mov	r3, #1
   125c4:	strb	r3, [fp, #-18]	; 0xffffffee
   125c8:	movw	r3, #16880	; 0x41f0
   125cc:	movt	r3, #3
   125d0:	ldr	r4, [r3]
   125d4:	movw	r0, #8484	; 0x2124
   125d8:	movt	r0, #2
   125dc:	bl	11288 <gettext@plt>
   125e0:	mov	r3, r0
   125e4:	sub	r2, fp, #52	; 0x34
   125e8:	mov	r1, #1
   125ec:	mov	r0, r4
   125f0:	bl	12b08 <__assert_fail@plt+0x1724>
   125f4:	movw	r3, #16928	; 0x4220
   125f8:	movt	r3, #3
   125fc:	ldrb	r3, [r3]
   12600:	eor	r3, r3, #1
   12604:	uxtb	r3, r3
   12608:	cmp	r3, #0
   1260c:	beq	12700 <__assert_fail@plt+0x131c>
   12610:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12614:	movw	r3, #16712	; 0x4148
   12618:	movt	r3, #3
   1261c:	str	r2, [r3]
   12620:	b	12700 <__assert_fail@plt+0x131c>
   12624:	mov	r3, #0
   12628:	strb	r3, [fp, #-18]	; 0xffffffee
   1262c:	movw	r3, #16928	; 0x4220
   12630:	movt	r3, #3
   12634:	mov	r2, #1
   12638:	strb	r2, [r3]
   1263c:	movw	r3, #16880	; 0x41f0
   12640:	movt	r3, #3
   12644:	ldr	r4, [r3]
   12648:	movw	r0, #8532	; 0x2154
   1264c:	movt	r0, #2
   12650:	bl	11288 <gettext@plt>
   12654:	mov	r3, r0
   12658:	movw	r2, #16712	; 0x4148
   1265c:	movt	r2, #3
   12660:	mov	r1, #1
   12664:	mov	r0, r4
   12668:	bl	12b08 <__assert_fail@plt+0x1724>
   1266c:	b	12704 <__assert_fail@plt+0x1320>
   12670:	mov	r0, #0
   12674:	bl	16a14 <__assert_fail@plt+0x5630>
   12678:	movw	r3, #16876	; 0x41ec
   1267c:	movt	r3, #3
   12680:	ldr	r0, [r3]
   12684:	movw	r3, #16776	; 0x4188
   12688:	movt	r3, #3
   1268c:	ldr	r2, [r3]
   12690:	mov	r3, #0
   12694:	str	r3, [sp, #8]
   12698:	movw	r3, #8584	; 0x2188
   1269c:	movt	r3, #2
   126a0:	str	r3, [sp, #4]
   126a4:	movw	r3, #8600	; 0x2198
   126a8:	movt	r3, #2
   126ac:	str	r3, [sp]
   126b0:	mov	r3, r2
   126b4:	movw	r2, #7040	; 0x1b80
   126b8:	movt	r2, #2
   126bc:	movw	r1, #8580	; 0x2184
   126c0:	movt	r1, #2
   126c4:	bl	1e240 <__assert_fail@plt+0xce5c>
   126c8:	mov	r0, #0
   126cc:	bl	1127c <exit@plt>
   126d0:	mov	r0, #1
   126d4:	bl	16a14 <__assert_fail@plt+0x5630>
   126d8:	nop	{0}
   126dc:	b	11bd0 <__assert_fail@plt+0x7ec>
   126e0:	nop	{0}
   126e4:	b	11bd0 <__assert_fail@plt+0x7ec>
   126e8:	nop	{0}
   126ec:	b	11bd0 <__assert_fail@plt+0x7ec>
   126f0:	nop	{0}
   126f4:	b	11bd0 <__assert_fail@plt+0x7ec>
   126f8:	nop	{0}
   126fc:	b	11bd0 <__assert_fail@plt+0x7ec>
   12700:	nop	{0}
   12704:	b	11bd0 <__assert_fail@plt+0x7ec>
   12708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1270c:	bl	11a40 <__assert_fail@plt+0x65c>
   12710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12714:	bl	17278 <__assert_fail@plt+0x5e94>
   12718:	movw	r3, #17032	; 0x4288
   1271c:	movt	r3, #3
   12720:	ldr	r3, [r3]
   12724:	cmp	r3, #0
   12728:	bne	12780 <__assert_fail@plt+0x139c>
   1272c:	movw	r0, #8616	; 0x21a8
   12730:	movt	r0, #2
   12734:	bl	1121c <getenv@plt>
   12738:	mov	r3, r0
   1273c:	cmp	r3, #0
   12740:	beq	1276c <__assert_fail@plt+0x1388>
   12744:	mov	r0, #2
   12748:	bl	17488 <__assert_fail@plt+0x60a4>
   1274c:	mov	r3, r0
   12750:	eor	r3, r3, #1
   12754:	uxtb	r3, r3
   12758:	cmp	r3, #0
   1275c:	beq	1276c <__assert_fail@plt+0x1388>
   12760:	movw	r3, #8632	; 0x21b8
   12764:	movt	r3, #2
   12768:	b	12774 <__assert_fail@plt+0x1390>
   1276c:	movw	r3, #8648	; 0x21c8
   12770:	movt	r3, #2
   12774:	movw	r2, #17032	; 0x4288
   12778:	movt	r2, #3
   1277c:	str	r3, [r2]
   12780:	movw	r0, #8664	; 0x21d8
   12784:	movt	r0, #2
   12788:	bl	1121c <getenv@plt>
   1278c:	mov	r3, r0
   12790:	mov	r0, r3
   12794:	bl	1d2d0 <__assert_fail@plt+0xbeec>
   12798:	mov	r2, r0
   1279c:	movw	r3, #17036	; 0x428c
   127a0:	movt	r3, #3
   127a4:	str	r2, [r3]
   127a8:	movw	r3, #16960	; 0x4240
   127ac:	movt	r3, #3
   127b0:	ldrd	r2, [r3]
   127b4:	orrs	r3, r2, r3
   127b8:	bne	127d0 <__assert_fail@plt+0x13ec>
   127bc:	movw	r3, #16960	; 0x4240
   127c0:	movt	r3, #3
   127c4:	mov	r0, #1
   127c8:	mov	r1, #0
   127cc:	strd	r0, [r3]
   127d0:	movw	r3, #16912	; 0x4210
   127d4:	movt	r3, #3
   127d8:	ldrb	r3, [r3]
   127dc:	cmp	r3, #0
   127e0:	beq	12818 <__assert_fail@plt+0x1434>
   127e4:	movw	r3, #16916	; 0x4214
   127e8:	movt	r3, #3
   127ec:	ldrb	r3, [r3]
   127f0:	cmp	r3, #0
   127f4:	beq	12818 <__assert_fail@plt+0x1434>
   127f8:	movw	r0, #8668	; 0x21dc
   127fc:	movt	r0, #2
   12800:	bl	11288 <gettext@plt>
   12804:	mov	r3, r0
   12808:	mov	r2, r3
   1280c:	mov	r1, #0
   12810:	mov	r0, #1
   12814:	bl	11210 <error@plt>
   12818:	movw	r3, #16912	; 0x4210
   1281c:	movt	r3, #3
   12820:	ldrb	r3, [r3]
   12824:	cmp	r3, #0
   12828:	beq	12860 <__assert_fail@plt+0x147c>
   1282c:	movw	r3, #16922	; 0x421a
   12830:	movt	r3, #3
   12834:	ldrb	r3, [r3]
   12838:	cmp	r3, #0
   1283c:	beq	12860 <__assert_fail@plt+0x147c>
   12840:	movw	r0, #8728	; 0x2218
   12844:	movt	r0, #2
   12848:	bl	11288 <gettext@plt>
   1284c:	mov	r3, r0
   12850:	mov	r2, r3
   12854:	mov	r1, #0
   12858:	mov	r0, #1
   1285c:	bl	11210 <error@plt>
   12860:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12864:	cmp	r3, #0
   12868:	beq	129f0 <__assert_fail@plt+0x160c>
   1286c:	ldrb	r3, [fp, #-18]	; 0xffffffee
   12870:	cmp	r3, #0
   12874:	beq	128e4 <__assert_fail@plt+0x1500>
   12878:	movw	r3, #16912	; 0x4210
   1287c:	movt	r3, #3
   12880:	ldrb	r3, [r3]
   12884:	cmp	r3, #0
   12888:	bne	128a0 <__assert_fail@plt+0x14bc>
   1288c:	movw	r3, #16916	; 0x4214
   12890:	movt	r3, #3
   12894:	ldrb	r3, [r3]
   12898:	cmp	r3, #0
   1289c:	beq	128d0 <__assert_fail@plt+0x14ec>
   128a0:	movw	r3, #16928	; 0x4220
   128a4:	movt	r3, #3
   128a8:	mov	r2, #1
   128ac:	strb	r2, [r3]
   128b0:	ldrb	r3, [fp, #-19]	; 0xffffffed
   128b4:	cmp	r3, #0
   128b8:	beq	12998 <__assert_fail@plt+0x15b4>
   128bc:	movw	r3, #17009	; 0x4271
   128c0:	movt	r3, #3
   128c4:	mov	r2, #1
   128c8:	strb	r2, [r3]
   128cc:	b	12998 <__assert_fail@plt+0x15b4>
   128d0:	movw	r3, #16929	; 0x4221
   128d4:	movt	r3, #3
   128d8:	mov	r2, #1
   128dc:	strb	r2, [r3]
   128e0:	b	129f0 <__assert_fail@plt+0x160c>
   128e4:	movw	r3, #17009	; 0x4271
   128e8:	movt	r3, #3
   128ec:	ldrb	r3, [r3]
   128f0:	eor	r3, r3, #1
   128f4:	uxtb	r3, r3
   128f8:	cmp	r3, #0
   128fc:	beq	129f0 <__assert_fail@plt+0x160c>
   12900:	ldrb	r3, [fp, #-19]	; 0xffffffed
   12904:	cmp	r3, #0
   12908:	beq	129f0 <__assert_fail@plt+0x160c>
   1290c:	movw	r3, #16912	; 0x4210
   12910:	movt	r3, #3
   12914:	ldrb	r3, [r3]
   12918:	cmp	r3, #0
   1291c:	bne	12934 <__assert_fail@plt+0x1550>
   12920:	movw	r3, #16916	; 0x4214
   12924:	movt	r3, #3
   12928:	ldrb	r3, [r3]
   1292c:	cmp	r3, #0
   12930:	beq	129f0 <__assert_fail@plt+0x160c>
   12934:	movw	r3, #16928	; 0x4220
   12938:	movt	r3, #3
   1293c:	ldrb	r3, [r3]
   12940:	eor	r3, r3, #1
   12944:	uxtb	r3, r3
   12948:	cmp	r3, #0
   1294c:	beq	12988 <__assert_fail@plt+0x15a4>
   12950:	movw	r3, #16929	; 0x4221
   12954:	movt	r3, #3
   12958:	mov	r2, #1
   1295c:	strb	r2, [r3]
   12960:	movw	r3, #17012	; 0x4274
   12964:	movt	r3, #3
   12968:	ldr	r3, [r3]
   1296c:	cmp	r3, #0
   12970:	ble	129f0 <__assert_fail@plt+0x160c>
   12974:	movw	r3, #17009	; 0x4271
   12978:	movt	r3, #3
   1297c:	mov	r2, #1
   12980:	strb	r2, [r3]
   12984:	b	129f0 <__assert_fail@plt+0x160c>
   12988:	movw	r3, #17009	; 0x4271
   1298c:	movt	r3, #3
   12990:	mov	r2, #1
   12994:	strb	r2, [r3]
   12998:	b	129f0 <__assert_fail@plt+0x160c>
   1299c:	movw	r3, #16856	; 0x41d8
   129a0:	movt	r3, #3
   129a4:	ldr	r3, [r3]
   129a8:	lsl	r3, r3, #2
   129ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   129b0:	add	r2, r2, r3
   129b4:	ldr	r3, [fp, #-16]
   129b8:	add	r1, r3, #1
   129bc:	str	r1, [fp, #-16]
   129c0:	lsl	r3, r3, #2
   129c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129c8:	add	r3, r1, r3
   129cc:	ldr	r2, [r2]
   129d0:	str	r2, [r3]
   129d4:	movw	r3, #16856	; 0x41d8
   129d8:	movt	r3, #3
   129dc:	ldr	r3, [r3]
   129e0:	add	r2, r3, #1
   129e4:	movw	r3, #16856	; 0x41d8
   129e8:	movt	r3, #3
   129ec:	str	r2, [r3]
   129f0:	movw	r3, #16856	; 0x41d8
   129f4:	movt	r3, #3
   129f8:	ldr	r3, [r3]
   129fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12a00:	cmp	r2, r3
   12a04:	bgt	1299c <__assert_fail@plt+0x15b8>
   12a08:	ldr	r3, [fp, #-16]
   12a0c:	cmp	r3, #0
   12a10:	bne	12a24 <__assert_fail@plt+0x1640>
   12a14:	mov	r1, #0
   12a18:	mov	r0, #0
   12a1c:	bl	13d6c <__assert_fail@plt+0x2988>
   12a20:	b	12a90 <__assert_fail@plt+0x16ac>
   12a24:	movw	r3, #16912	; 0x4210
   12a28:	movt	r3, #3
   12a2c:	ldrb	r3, [r3]
   12a30:	cmp	r3, #0
   12a34:	beq	12a4c <__assert_fail@plt+0x1668>
   12a38:	ldr	r3, [fp, #-16]
   12a3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12a40:	mov	r0, r3
   12a44:	bl	13d6c <__assert_fail@plt+0x2988>
   12a48:	b	12a90 <__assert_fail@plt+0x16ac>
   12a4c:	mov	r3, #0
   12a50:	str	r3, [fp, #-32]	; 0xffffffe0
   12a54:	b	12a80 <__assert_fail@plt+0x169c>
   12a58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a5c:	lsl	r3, r3, #2
   12a60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12a64:	add	r3, r2, r3
   12a68:	mov	r1, r3
   12a6c:	mov	r0, #1
   12a70:	bl	13d6c <__assert_fail@plt+0x2988>
   12a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a78:	add	r3, r3, #1
   12a7c:	str	r3, [fp, #-32]	; 0xffffffe0
   12a80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a84:	ldr	r3, [fp, #-16]
   12a88:	cmp	r2, r3
   12a8c:	bcc	12a58 <__assert_fail@plt+0x1674>
   12a90:	bl	1697c <__assert_fail@plt+0x5598>
   12a94:	movw	r3, #16921	; 0x4219
   12a98:	movt	r3, #3
   12a9c:	ldrb	r3, [r3]
   12aa0:	cmp	r3, #0
   12aa4:	beq	12af4 <__assert_fail@plt+0x1710>
   12aa8:	movw	r3, #16872	; 0x41e8
   12aac:	movt	r3, #3
   12ab0:	ldr	r3, [r3]
   12ab4:	mov	r0, r3
   12ab8:	bl	16f9c <__assert_fail@plt+0x5bb8>
   12abc:	mov	r3, r0
   12ac0:	cmn	r3, #1
   12ac4:	bne	12af4 <__assert_fail@plt+0x1710>
   12ac8:	bl	112d0 <__errno_location@plt>
   12acc:	mov	r3, r0
   12ad0:	ldr	r4, [r3]
   12ad4:	movw	r0, #8792	; 0x2258
   12ad8:	movt	r0, #2
   12adc:	bl	11288 <gettext@plt>
   12ae0:	mov	r3, r0
   12ae4:	mov	r2, r3
   12ae8:	mov	r1, r4
   12aec:	mov	r0, #1
   12af0:	bl	11210 <error@plt>
   12af4:	movw	r3, #16956	; 0x423c
   12af8:	movt	r3, #3
   12afc:	ldrb	r3, [r3]
   12b00:	mov	r0, r3
   12b04:	bl	1127c <exit@plt>
   12b08:	str	fp, [sp, #-8]!
   12b0c:	str	lr, [sp, #4]
   12b10:	add	fp, sp, #4
   12b14:	sub	sp, sp, #48	; 0x30
   12b18:	str	r0, [fp, #-16]
   12b1c:	str	r1, [fp, #-20]	; 0xffffffec
   12b20:	str	r2, [fp, #-24]	; 0xffffffe8
   12b24:	str	r3, [fp, #-28]	; 0xffffffe4
   12b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b2c:	mov	r0, r3
   12b30:	asr	r1, r0, #31
   12b34:	mov	r3, #0
   12b38:	str	r3, [sp, #16]
   12b3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b40:	str	r3, [sp, #12]
   12b44:	movw	r3, #7224	; 0x1c38
   12b48:	movt	r3, #2
   12b4c:	str	r3, [sp, #8]
   12b50:	mvn	r2, #-2147483648	; 0x80000000
   12b54:	mov	r3, #0
   12b58:	strd	r2, [sp]
   12b5c:	mov	r2, r0
   12b60:	mov	r3, r1
   12b64:	ldr	r0, [fp, #-16]
   12b68:	bl	1ee34 <__assert_fail@plt+0xda50>
   12b6c:	strd	r0, [fp, #-12]
   12b70:	ldr	r2, [fp, #-12]
   12b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b78:	str	r2, [r3]
   12b7c:	nop	{0}
   12b80:	sub	sp, fp, #4
   12b84:	ldr	fp, [sp]
   12b88:	add	sp, sp, #4
   12b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b90:	strd	r4, [sp, #-20]!	; 0xffffffec
   12b94:	str	r6, [sp, #8]
   12b98:	str	fp, [sp, #12]
   12b9c:	str	lr, [sp, #16]
   12ba0:	add	fp, sp, #16
   12ba4:	sub	sp, sp, #36	; 0x24
   12ba8:	str	r0, [fp, #-32]	; 0xffffffe0
   12bac:	str	r2, [fp, #-40]	; 0xffffffd8
   12bb0:	str	r3, [fp, #-44]	; 0xffffffd4
   12bb4:	mov	r3, r1
   12bb8:	strb	r3, [fp, #-33]	; 0xffffffdf
   12bbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12bc0:	ldrb	r3, [r3]
   12bc4:	sub	r3, r3, #48	; 0x30
   12bc8:	cmp	r3, #9
   12bcc:	bls	12be8 <__assert_fail@plt+0x1804>
   12bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12bd4:	add	r2, r3, #1
   12bd8:	str	r2, [fp, #-32]	; 0xffffffe0
   12bdc:	ldrb	r2, [r3]
   12be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12be4:	strb	r2, [r3]
   12be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12bec:	ldrb	r3, [r3]
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c8c <__assert_fail@plt+0x18a8>
   12bf8:	sub	r2, fp, #24
   12bfc:	movw	r3, #7224	; 0x1c38
   12c00:	movt	r3, #2
   12c04:	str	r3, [sp]
   12c08:	mov	r3, r2
   12c0c:	mov	r2, #10
   12c10:	mov	r1, #0
   12c14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c18:	bl	1f834 <__assert_fail@plt+0xe450>
   12c1c:	mov	r3, r0
   12c20:	cmp	r3, #0
   12c24:	bne	12c34 <__assert_fail@plt+0x1850>
   12c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c2c:	cmp	r3, #0
   12c30:	bgt	12c80 <__assert_fail@plt+0x189c>
   12c34:	bl	112d0 <__errno_location@plt>
   12c38:	mov	r3, r0
   12c3c:	ldr	r4, [r3]
   12c40:	movw	r0, #8808	; 0x2268
   12c44:	movt	r0, #2
   12c48:	bl	11288 <gettext@plt>
   12c4c:	mov	r6, r0
   12c50:	ldrb	r5, [fp, #-33]	; 0xffffffdf
   12c54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c58:	bl	1ceec <__assert_fail@plt+0xbb08>
   12c5c:	mov	r3, r0
   12c60:	str	r3, [sp]
   12c64:	mov	r3, r5
   12c68:	mov	r2, r6
   12c6c:	mov	r1, r4
   12c70:	mov	r0, #0
   12c74:	bl	11210 <error@plt>
   12c78:	mov	r0, #1
   12c7c:	bl	16a14 <__assert_fail@plt+0x5630>
   12c80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12c88:	str	r2, [r3]
   12c8c:	nop	{0}
   12c90:	sub	sp, fp, #16
   12c94:	ldrd	r4, [sp]
   12c98:	ldr	r6, [sp, #8]
   12c9c:	ldr	fp, [sp, #12]
   12ca0:	add	sp, sp, #16
   12ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ca8:	str	fp, [sp, #-8]!
   12cac:	str	lr, [sp, #4]
   12cb0:	add	fp, sp, #4
   12cb4:	sub	sp, sp, #24
   12cb8:	str	r0, [fp, #-24]	; 0xffffffe8
   12cbc:	mov	r3, #0
   12cc0:	str	r3, [fp, #-8]
   12cc4:	movw	r3, #16708	; 0x4144
   12cc8:	movt	r3, #3
   12ccc:	ldr	r3, [r3]
   12cd0:	sub	r2, r3, #10
   12cd4:	movw	r3, #16924	; 0x421c
   12cd8:	movt	r3, #3
   12cdc:	str	r2, [r3]
   12ce0:	movw	r3, #16924	; 0x421c
   12ce4:	movt	r3, #3
   12ce8:	ldr	r3, [r3]
   12cec:	cmp	r3, #0
   12cf0:	bgt	12d14 <__assert_fail@plt+0x1930>
   12cf4:	movw	r3, #16704	; 0x4140
   12cf8:	movt	r3, #3
   12cfc:	mov	r2, #0
   12d00:	strb	r2, [r3]
   12d04:	movw	r3, #16917	; 0x4215
   12d08:	movt	r3, #3
   12d0c:	mov	r2, #1
   12d10:	strb	r2, [r3]
   12d14:	movw	r3, #16704	; 0x4140
   12d18:	movt	r3, #3
   12d1c:	ldrb	r3, [r3]
   12d20:	eor	r3, r3, #1
   12d24:	uxtb	r3, r3
   12d28:	cmp	r3, #0
   12d2c:	beq	12d48 <__assert_fail@plt+0x1964>
   12d30:	movw	r3, #16708	; 0x4144
   12d34:	movt	r3, #3
   12d38:	ldr	r2, [r3]
   12d3c:	movw	r3, #16924	; 0x421c
   12d40:	movt	r3, #3
   12d44:	str	r2, [r3]
   12d48:	movw	r3, #17002	; 0x426a
   12d4c:	movt	r3, #3
   12d50:	ldrb	r3, [r3]
   12d54:	cmp	r3, #0
   12d58:	beq	12d84 <__assert_fail@plt+0x19a0>
   12d5c:	movw	r3, #16924	; 0x421c
   12d60:	movt	r3, #3
   12d64:	ldr	r3, [r3]
   12d68:	lsr	r2, r3, #31
   12d6c:	add	r3, r2, r3
   12d70:	asr	r3, r3, #1
   12d74:	mov	r2, r3
   12d78:	movw	r3, #16924	; 0x421c
   12d7c:	movt	r3, #3
   12d80:	str	r2, [r3]
   12d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d88:	cmp	r3, #0
   12d8c:	bne	12da0 <__assert_fail@plt+0x19bc>
   12d90:	movw	r3, #16912	; 0x4210
   12d94:	movt	r3, #3
   12d98:	mov	r2, #0
   12d9c:	strb	r2, [r3]
   12da0:	movw	r3, #16912	; 0x4210
   12da4:	movt	r3, #3
   12da8:	ldrb	r3, [r3]
   12dac:	cmp	r3, #0
   12db0:	beq	12dc4 <__assert_fail@plt+0x19e0>
   12db4:	movw	r3, #16732	; 0x415c
   12db8:	movt	r3, #3
   12dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dc0:	str	r2, [r3]
   12dc4:	movw	r3, #16705	; 0x4141
   12dc8:	movt	r3, #3
   12dcc:	ldrb	r3, [r3]
   12dd0:	cmp	r3, #0
   12dd4:	beq	12de8 <__assert_fail@plt+0x1a04>
   12dd8:	movw	r3, #16923	; 0x421b
   12ddc:	movt	r3, #3
   12de0:	mov	r2, #1
   12de4:	strb	r2, [r3]
   12de8:	movw	r3, #16732	; 0x415c
   12dec:	movt	r3, #3
   12df0:	ldr	r3, [r3]
   12df4:	cmp	r3, #1
   12df8:	ble	12f44 <__assert_fail@plt+0x1b60>
   12dfc:	movw	r3, #17009	; 0x4271
   12e00:	movt	r3, #3
   12e04:	ldrb	r3, [r3]
   12e08:	eor	r3, r3, #1
   12e0c:	uxtb	r3, r3
   12e10:	cmp	r3, #0
   12e14:	beq	12e84 <__assert_fail@plt+0x1aa0>
   12e18:	movw	r3, #16929	; 0x4221
   12e1c:	movt	r3, #3
   12e20:	ldrb	r3, [r3]
   12e24:	cmp	r3, #0
   12e28:	beq	12e48 <__assert_fail@plt+0x1a64>
   12e2c:	movw	r3, #16772	; 0x4184
   12e30:	movt	r3, #3
   12e34:	ldr	r2, [r3]
   12e38:	movw	r3, #16764	; 0x417c
   12e3c:	movt	r3, #3
   12e40:	str	r2, [r3]
   12e44:	b	12e60 <__assert_fail@plt+0x1a7c>
   12e48:	movw	r3, #16768	; 0x4180
   12e4c:	movt	r3, #3
   12e50:	ldr	r2, [r3]
   12e54:	movw	r3, #16764	; 0x417c
   12e58:	movt	r3, #3
   12e5c:	str	r2, [r3]
   12e60:	movw	r3, #17012	; 0x4274
   12e64:	movt	r3, #3
   12e68:	mov	r2, #1
   12e6c:	str	r2, [r3]
   12e70:	movw	r3, #17009	; 0x4271
   12e74:	movt	r3, #3
   12e78:	mov	r2, #1
   12e7c:	strb	r2, [r3]
   12e80:	b	12ee4 <__assert_fail@plt+0x1b00>
   12e84:	movw	r3, #16929	; 0x4221
   12e88:	movt	r3, #3
   12e8c:	ldrb	r3, [r3]
   12e90:	eor	r3, r3, #1
   12e94:	uxtb	r3, r3
   12e98:	cmp	r3, #0
   12e9c:	beq	12ee4 <__assert_fail@plt+0x1b00>
   12ea0:	movw	r3, #17012	; 0x4274
   12ea4:	movt	r3, #3
   12ea8:	ldr	r3, [r3]
   12eac:	cmp	r3, #1
   12eb0:	bne	12ee4 <__assert_fail@plt+0x1b00>
   12eb4:	movw	r3, #16764	; 0x417c
   12eb8:	movt	r3, #3
   12ebc:	ldr	r3, [r3]
   12ec0:	ldrb	r3, [r3]
   12ec4:	cmp	r3, #9
   12ec8:	bne	12ee4 <__assert_fail@plt+0x1b00>
   12ecc:	movw	r3, #16768	; 0x4180
   12ed0:	movt	r3, #3
   12ed4:	ldr	r2, [r3]
   12ed8:	movw	r3, #16764	; 0x417c
   12edc:	movt	r3, #3
   12ee0:	str	r2, [r3]
   12ee4:	movw	r3, #16928	; 0x4220
   12ee8:	movt	r3, #3
   12eec:	mov	r2, #1
   12ef0:	strb	r2, [r3]
   12ef4:	movw	r3, #17012	; 0x4274
   12ef8:	movt	r3, #3
   12efc:	ldr	r3, [r3]
   12f00:	cmp	r3, #1
   12f04:	bne	12f20 <__assert_fail@plt+0x1b3c>
   12f08:	movw	r3, #16764	; 0x417c
   12f0c:	movt	r3, #3
   12f10:	ldr	r3, [r3]
   12f14:	ldrb	r3, [r3]
   12f18:	cmp	r3, #9
   12f1c:	beq	12f30 <__assert_fail@plt+0x1b4c>
   12f20:	movw	r3, #16936	; 0x4228
   12f24:	movt	r3, #3
   12f28:	mov	r2, #1
   12f2c:	strb	r2, [r3]
   12f30:	movw	r3, #16937	; 0x4229
   12f34:	movt	r3, #3
   12f38:	mov	r2, #1
   12f3c:	strb	r2, [r3]
   12f40:	b	12f54 <__assert_fail@plt+0x1b70>
   12f44:	movw	r3, #16705	; 0x4141
   12f48:	movt	r3, #3
   12f4c:	mov	r2, #0
   12f50:	strb	r2, [r3]
   12f54:	movw	r3, #16929	; 0x4221
   12f58:	movt	r3, #3
   12f5c:	ldrb	r3, [r3]
   12f60:	cmp	r3, #0
   12f64:	beq	12f78 <__assert_fail@plt+0x1b94>
   12f68:	movw	r3, #16928	; 0x4220
   12f6c:	movt	r3, #3
   12f70:	mov	r2, #0
   12f74:	strb	r2, [r3]
   12f78:	movw	r3, #16988	; 0x425c
   12f7c:	movt	r3, #3
   12f80:	ldrb	r3, [r3]
   12f84:	cmp	r3, #0
   12f88:	beq	13048 <__assert_fail@plt+0x1c64>
   12f8c:	mov	r3, #8
   12f90:	str	r3, [fp, #-12]
   12f94:	movw	r3, #16756	; 0x4174
   12f98:	movt	r3, #3
   12f9c:	ldr	r2, [r3]
   12fa0:	movw	r3, #16748	; 0x416c
   12fa4:	movt	r3, #3
   12fa8:	str	r2, [r3]
   12fac:	movw	r3, #16744	; 0x4168
   12fb0:	movt	r3, #3
   12fb4:	ldrb	r3, [r3]
   12fb8:	cmp	r3, #9
   12fbc:	bne	13008 <__assert_fail@plt+0x1c24>
   12fc0:	movw	r3, #16760	; 0x4178
   12fc4:	movt	r3, #3
   12fc8:	ldr	r3, [r3]
   12fcc:	ldr	r2, [fp, #-12]
   12fd0:	sdiv	r2, r3, r2
   12fd4:	ldr	r1, [fp, #-12]
   12fd8:	mul	r2, r1, r2
   12fdc:	sub	r3, r3, r2
   12fe0:	ldr	r2, [fp, #-12]
   12fe4:	sub	r2, r2, r3
   12fe8:	movw	r3, #16760	; 0x4178
   12fec:	movt	r3, #3
   12ff0:	ldr	r3, [r3]
   12ff4:	add	r2, r2, r3
   12ff8:	movw	r3, #16992	; 0x4260
   12ffc:	movt	r3, #3
   13000:	str	r2, [r3]
   13004:	b	13024 <__assert_fail@plt+0x1c40>
   13008:	movw	r3, #16760	; 0x4178
   1300c:	movt	r3, #3
   13010:	ldr	r3, [r3]
   13014:	add	r2, r3, #1
   13018:	movw	r3, #16992	; 0x4260
   1301c:	movt	r3, #3
   13020:	str	r2, [r3]
   13024:	movw	r3, #16912	; 0x4210
   13028:	movt	r3, #3
   1302c:	ldrb	r3, [r3]
   13030:	cmp	r3, #0
   13034:	beq	13048 <__assert_fail@plt+0x1c64>
   13038:	movw	r3, #16992	; 0x4260
   1303c:	movt	r3, #3
   13040:	ldr	r3, [r3]
   13044:	str	r3, [fp, #-8]
   13048:	movw	r3, #16732	; 0x415c
   1304c:	movt	r3, #3
   13050:	ldr	r3, [r3]
   13054:	sub	r2, r3, #1
   13058:	movw	r3, #17012	; 0x4274
   1305c:	movt	r3, #3
   13060:	ldr	r3, [r3]
   13064:	mov	lr, #0
   13068:	smull	r2, r3, r2, r3
   1306c:	mov	r0, #0
   13070:	mov	r1, #0
   13074:	mov	r0, r3
   13078:	asr	r1, r3, #31
   1307c:	asr	ip, r2, #31
   13080:	cmp	ip, r0
   13084:	beq	1308c <__assert_fail@plt+0x1ca8>
   13088:	mov	lr, #1
   1308c:	mov	r3, r2
   13090:	str	r3, [fp, #-16]
   13094:	mov	r3, lr
   13098:	and	r3, r3, #1
   1309c:	uxtb	r3, r3
   130a0:	cmp	r3, #0
   130a4:	beq	130b0 <__assert_fail@plt+0x1ccc>
   130a8:	mvn	r3, #-2147483648	; 0x80000000
   130ac:	str	r3, [fp, #-16]
   130b0:	movw	r3, #16712	; 0x4148
   130b4:	movt	r3, #3
   130b8:	ldr	r2, [r3]
   130bc:	ldr	r3, [fp, #-8]
   130c0:	sub	r2, r2, r3
   130c4:	ldr	r3, [fp, #-16]
   130c8:	mov	r1, #0
   130cc:	subs	r3, r2, r3
   130d0:	bvc	130d8 <__assert_fail@plt+0x1cf4>
   130d4:	mov	r1, #1
   130d8:	str	r3, [fp, #-20]	; 0xffffffec
   130dc:	mov	r3, r1
   130e0:	and	r3, r3, #1
   130e4:	uxtb	r3, r3
   130e8:	cmp	r3, #0
   130ec:	beq	130f8 <__assert_fail@plt+0x1d14>
   130f0:	mov	r3, #0
   130f4:	str	r3, [fp, #-20]	; 0xffffffec
   130f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   130fc:	movw	r3, #16732	; 0x415c
   13100:	movt	r3, #3
   13104:	ldr	r3, [r3]
   13108:	sdiv	r2, r2, r3
   1310c:	movw	r3, #16932	; 0x4224
   13110:	movt	r3, #3
   13114:	str	r2, [r3]
   13118:	movw	r3, #16932	; 0x4224
   1311c:	movt	r3, #3
   13120:	ldr	r3, [r3]
   13124:	cmp	r3, #0
   13128:	bgt	1314c <__assert_fail@plt+0x1d68>
   1312c:	movw	r0, #8872	; 0x22a8
   13130:	movt	r0, #2
   13134:	bl	11288 <gettext@plt>
   13138:	mov	r3, r0
   1313c:	mov	r2, r3
   13140:	mov	r1, #0
   13144:	mov	r0, #1
   13148:	bl	11210 <error@plt>
   1314c:	movw	r3, #16988	; 0x425c
   13150:	movt	r3, #3
   13154:	ldrb	r3, [r3]
   13158:	cmp	r3, #0
   1315c:	beq	131ac <__assert_fail@plt+0x1dc8>
   13160:	movw	r3, #16996	; 0x4264
   13164:	movt	r3, #3
   13168:	ldr	r3, [r3]
   1316c:	mov	r0, r3
   13170:	bl	17278 <__assert_fail@plt+0x5e94>
   13174:	movw	r3, #16760	; 0x4178
   13178:	movt	r3, #3
   1317c:	ldr	r3, [r3]
   13180:	cmp	r3, #11
   13184:	movcs	r3, r3
   13188:	movcc	r3, #11
   1318c:	add	r3, r3, #1
   13190:	mov	r0, r3
   13194:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   13198:	mov	r3, r0
   1319c:	mov	r2, r3
   131a0:	movw	r3, #16996	; 0x4264
   131a4:	movt	r3, #3
   131a8:	str	r2, [r3]
   131ac:	movw	r3, #17052	; 0x429c
   131b0:	movt	r3, #3
   131b4:	ldr	r3, [r3]
   131b8:	mov	r0, r3
   131bc:	bl	17278 <__assert_fail@plt+0x5e94>
   131c0:	movw	r3, #16720	; 0x4150
   131c4:	movt	r3, #3
   131c8:	ldr	r3, [r3]
   131cc:	cmp	r3, #8
   131d0:	movge	r3, r3
   131d4:	movlt	r3, #8
   131d8:	mov	r0, r3
   131dc:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   131e0:	mov	r3, r0
   131e4:	mov	r2, r3
   131e8:	movw	r3, #17052	; 0x429c
   131ec:	movt	r3, #3
   131f0:	str	r2, [r3]
   131f4:	nop	{0}
   131f8:	sub	sp, fp, #4
   131fc:	ldr	fp, [sp]
   13200:	add	sp, sp, #4
   13204:	pop	{pc}		; (ldr pc, [sp], #4)
   13208:	str	r4, [sp, #-12]!
   1320c:	str	fp, [sp, #4]
   13210:	str	lr, [sp, #8]
   13214:	add	fp, sp, #8
   13218:	sub	sp, sp, #36	; 0x24
   1321c:	str	r0, [fp, #-40]	; 0xffffffd8
   13220:	str	r1, [fp, #-44]	; 0xffffffd4
   13224:	movw	r3, #17004	; 0x426c
   13228:	movt	r3, #3
   1322c:	mov	r2, #0
   13230:	str	r2, [r3]
   13234:	movw	r3, #16888	; 0x41f8
   13238:	movt	r3, #3
   1323c:	ldr	r3, [r3]
   13240:	mov	r0, r3
   13244:	bl	17278 <__assert_fail@plt+0x5e94>
   13248:	movw	r3, #16732	; 0x415c
   1324c:	movt	r3, #3
   13250:	ldr	r3, [r3]
   13254:	mov	r1, #40	; 0x28
   13258:	mov	r0, r3
   1325c:	bl	1e5f0 <__assert_fail@plt+0xd20c>
   13260:	mov	r3, r0
   13264:	mov	r2, r3
   13268:	movw	r3, #16888	; 0x41f8
   1326c:	movt	r3, #3
   13270:	str	r2, [r3]
   13274:	movw	r3, #16912	; 0x4210
   13278:	movt	r3, #3
   1327c:	ldrb	r3, [r3]
   13280:	cmp	r3, #0
   13284:	beq	13350 <__assert_fail@plt+0x1f6c>
   13288:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1328c:	str	r3, [fp, #-20]	; 0xffffffec
   13290:	movw	r3, #16888	; 0x41f8
   13294:	movt	r3, #3
   13298:	ldr	r3, [r3]
   1329c:	str	r3, [fp, #-16]
   132a0:	b	1330c <__assert_fail@plt+0x1f28>
   132a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   132a8:	ldr	r3, [r3]
   132ac:	ldr	r1, [fp, #-16]
   132b0:	mov	r0, r3
   132b4:	bl	13840 <__assert_fail@plt+0x245c>
   132b8:	mov	r3, r0
   132bc:	eor	r3, r3, #1
   132c0:	uxtb	r3, r3
   132c4:	cmp	r3, #0
   132c8:	beq	132f4 <__assert_fail@plt+0x1f10>
   132cc:	ldr	r3, [fp, #-16]
   132d0:	sub	r3, r3, #40	; 0x28
   132d4:	str	r3, [fp, #-16]
   132d8:	movw	r3, #16732	; 0x415c
   132dc:	movt	r3, #3
   132e0:	ldr	r3, [r3]
   132e4:	sub	r2, r3, #1
   132e8:	movw	r3, #16732	; 0x415c
   132ec:	movt	r3, #3
   132f0:	str	r2, [r3]
   132f4:	ldr	r3, [fp, #-16]
   132f8:	add	r3, r3, #40	; 0x28
   132fc:	str	r3, [fp, #-16]
   13300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13304:	add	r3, r3, #4
   13308:	str	r3, [fp, #-44]	; 0xffffffd4
   1330c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13310:	sub	r2, r3, #1
   13314:	str	r2, [fp, #-20]	; 0xffffffec
   13318:	cmp	r3, #0
   1331c:	bne	132a4 <__assert_fail@plt+0x1ec0>
   13320:	movw	r3, #16732	; 0x415c
   13324:	movt	r3, #3
   13328:	ldr	r3, [r3]
   1332c:	cmp	r3, #0
   13330:	bne	1333c <__assert_fail@plt+0x1f58>
   13334:	mov	r3, #0
   13338:	b	13518 <__assert_fail@plt+0x2134>
   1333c:	mvn	r1, #0
   13340:	movw	r0, #7224	; 0x1c38
   13344:	movt	r0, #2
   13348:	bl	13e88 <__assert_fail@plt+0x2aa4>
   1334c:	b	134fc <__assert_fail@plt+0x2118>
   13350:	movw	r3, #16888	; 0x41f8
   13354:	movt	r3, #3
   13358:	ldr	r3, [r3]
   1335c:	str	r3, [fp, #-16]
   13360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13364:	cmp	r3, #0
   13368:	ble	133d4 <__assert_fail@plt+0x1ff0>
   1336c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13370:	ldr	r3, [r3]
   13374:	ldr	r1, [fp, #-16]
   13378:	mov	r0, r3
   1337c:	bl	13840 <__assert_fail@plt+0x245c>
   13380:	mov	r3, r0
   13384:	eor	r3, r3, #1
   13388:	uxtb	r3, r3
   1338c:	cmp	r3, #0
   13390:	beq	1339c <__assert_fail@plt+0x1fb8>
   13394:	mov	r3, #0
   13398:	b	13518 <__assert_fail@plt+0x2134>
   1339c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   133a0:	ldr	r4, [r3]
   133a4:	ldr	r3, [fp, #-16]
   133a8:	ldr	r3, [r3]
   133ac:	mov	r0, r3
   133b0:	bl	112f4 <fileno@plt>
   133b4:	mov	r3, r0
   133b8:	mov	r1, r3
   133bc:	mov	r0, r4
   133c0:	bl	13e88 <__assert_fail@plt+0x2aa4>
   133c4:	ldr	r3, [fp, #-16]
   133c8:	mov	r2, #0
   133cc:	str	r2, [r3, #24]
   133d0:	b	13460 <__assert_fail@plt+0x207c>
   133d4:	movw	r0, #8792	; 0x2258
   133d8:	movt	r0, #2
   133dc:	bl	11288 <gettext@plt>
   133e0:	mov	r2, r0
   133e4:	ldr	r3, [fp, #-16]
   133e8:	str	r2, [r3, #4]
   133ec:	movw	r3, #16872	; 0x41e8
   133f0:	movt	r3, #3
   133f4:	ldr	r2, [r3]
   133f8:	ldr	r3, [fp, #-16]
   133fc:	str	r2, [r3]
   13400:	movw	r3, #16921	; 0x4219
   13404:	movt	r3, #3
   13408:	mov	r2, #1
   1340c:	strb	r2, [r3]
   13410:	ldr	r3, [fp, #-16]
   13414:	mov	r2, #0
   13418:	str	r2, [r3, #8]
   1341c:	ldr	r3, [fp, #-16]
   13420:	mov	r2, #0
   13424:	strb	r2, [r3, #37]	; 0x25
   13428:	movw	r3, #17004	; 0x426c
   1342c:	movt	r3, #3
   13430:	ldr	r3, [r3]
   13434:	add	r2, r3, #1
   13438:	movw	r3, #17004	; 0x426c
   1343c:	movt	r3, #3
   13440:	str	r2, [r3]
   13444:	mvn	r1, #0
   13448:	movw	r0, #7224	; 0x1c38
   1344c:	movt	r0, #2
   13450:	bl	13e88 <__assert_fail@plt+0x2aa4>
   13454:	ldr	r3, [fp, #-16]
   13458:	mov	r2, #0
   1345c:	str	r2, [r3, #24]
   13460:	ldr	r3, [fp, #-16]
   13464:	ldr	r3, [r3, #4]
   13468:	str	r3, [fp, #-28]	; 0xffffffe4
   1346c:	ldr	r3, [fp, #-16]
   13470:	ldr	r3, [r3]
   13474:	str	r3, [fp, #-32]	; 0xffffffe0
   13478:	movw	r3, #16732	; 0x415c
   1347c:	movt	r3, #3
   13480:	ldr	r3, [r3]
   13484:	sub	r3, r3, #1
   13488:	str	r3, [fp, #-24]	; 0xffffffe8
   1348c:	ldr	r3, [fp, #-16]
   13490:	add	r3, r3, #40	; 0x28
   13494:	str	r3, [fp, #-16]
   13498:	b	134f0 <__assert_fail@plt+0x210c>
   1349c:	ldr	r3, [fp, #-16]
   134a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   134a4:	str	r2, [r3, #4]
   134a8:	ldr	r3, [fp, #-16]
   134ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134b0:	str	r2, [r3]
   134b4:	ldr	r3, [fp, #-16]
   134b8:	mov	r2, #0
   134bc:	str	r2, [r3, #8]
   134c0:	ldr	r3, [fp, #-16]
   134c4:	mov	r2, #0
   134c8:	strb	r2, [r3, #37]	; 0x25
   134cc:	ldr	r3, [fp, #-16]
   134d0:	mov	r2, #0
   134d4:	str	r2, [r3, #24]
   134d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134dc:	sub	r3, r3, #1
   134e0:	str	r3, [fp, #-24]	; 0xffffffe8
   134e4:	ldr	r3, [fp, #-16]
   134e8:	add	r3, r3, #40	; 0x28
   134ec:	str	r3, [fp, #-16]
   134f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134f4:	cmp	r3, #0
   134f8:	bne	1349c <__assert_fail@plt+0x20b8>
   134fc:	movw	r3, #17004	; 0x426c
   13500:	movt	r3, #3
   13504:	ldr	r2, [r3]
   13508:	movw	r3, #16968	; 0x4248
   1350c:	movt	r3, #3
   13510:	str	r2, [r3]
   13514:	mov	r3, #1
   13518:	mov	r0, r3
   1351c:	sub	sp, fp, #8
   13520:	ldr	r4, [sp]
   13524:	ldr	fp, [sp, #4]
   13528:	add	sp, sp, #8
   1352c:	pop	{pc}		; (ldr pc, [sp], #4)
   13530:	push	{fp}		; (str fp, [sp, #-4]!)
   13534:	add	fp, sp, #0
   13538:	sub	sp, sp, #20
   1353c:	movw	r3, #16944	; 0x4230
   13540:	movt	r3, #3
   13544:	ldr	r3, [r3]
   13548:	str	r3, [fp, #-12]
   1354c:	movw	r3, #16928	; 0x4220
   13550:	movt	r3, #3
   13554:	ldrb	r3, [r3]
   13558:	eor	r3, r3, #1
   1355c:	uxtb	r3, r3
   13560:	cmp	r3, #0
   13564:	beq	13574 <__assert_fail@plt+0x2190>
   13568:	mov	r3, #0
   1356c:	str	r3, [fp, #-16]
   13570:	b	135e0 <__assert_fail@plt+0x21fc>
   13574:	movw	r3, #16912	; 0x4210
   13578:	movt	r3, #3
   1357c:	ldrb	r3, [r3]
   13580:	cmp	r3, #0
   13584:	beq	135c8 <__assert_fail@plt+0x21e4>
   13588:	movw	r3, #16988	; 0x425c
   1358c:	movt	r3, #3
   13590:	ldrb	r3, [r3]
   13594:	cmp	r3, #0
   13598:	beq	135c8 <__assert_fail@plt+0x21e4>
   1359c:	movw	r3, #16932	; 0x4224
   135a0:	movt	r3, #3
   135a4:	ldr	r2, [r3]
   135a8:	ldr	r3, [fp, #-12]
   135ac:	add	r2, r2, r3
   135b0:	movw	r3, #16992	; 0x4260
   135b4:	movt	r3, #3
   135b8:	ldr	r3, [r3]
   135bc:	add	r3, r2, r3
   135c0:	str	r3, [fp, #-16]
   135c4:	b	135e0 <__assert_fail@plt+0x21fc>
   135c8:	movw	r3, #16932	; 0x4224
   135cc:	movt	r3, #3
   135d0:	ldr	r3, [r3]
   135d4:	ldr	r2, [fp, #-12]
   135d8:	add	r3, r2, r3
   135dc:	str	r3, [fp, #-16]
   135e0:	movw	r3, #17012	; 0x4274
   135e4:	movt	r3, #3
   135e8:	ldr	r3, [r3]
   135ec:	ldr	r2, [fp, #-12]
   135f0:	add	r3, r2, r3
   135f4:	str	r3, [fp, #-12]
   135f8:	movw	r3, #16888	; 0x41f8
   135fc:	movt	r3, #3
   13600:	ldr	r3, [r3]
   13604:	str	r3, [fp, #-20]	; 0xffffffec
   13608:	mov	r3, #1
   1360c:	str	r3, [fp, #-8]
   13610:	b	13748 <__assert_fail@plt+0x2364>
   13614:	movw	r3, #16705	; 0x4141
   13618:	movt	r3, #3
   1361c:	ldrb	r3, [r3]
   13620:	cmp	r3, #0
   13624:	beq	1364c <__assert_fail@plt+0x2268>
   13628:	ldr	r2, [fp, #-20]	; 0xffffffec
   1362c:	movw	r3, #20080	; 0x4e70
   13630:	movt	r3, #1
   13634:	str	r3, [r2, #16]
   13638:	ldr	r2, [fp, #-20]	; 0xffffffec
   1363c:	movw	r3, #25324	; 0x62ec
   13640:	movt	r3, #1
   13644:	str	r3, [r2, #12]
   13648:	b	1366c <__assert_fail@plt+0x2288>
   1364c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13650:	movw	r3, #22624	; 0x5860
   13654:	movt	r3, #1
   13658:	str	r3, [r2, #16]
   1365c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13660:	movw	r3, #23908	; 0x5d64
   13664:	movt	r3, #1
   13668:	str	r3, [r2, #12]
   1366c:	movw	r3, #16988	; 0x425c
   13670:	movt	r3, #3
   13674:	ldrb	r3, [r3]
   13678:	cmp	r3, #0
   1367c:	beq	136b0 <__assert_fail@plt+0x22cc>
   13680:	movw	r3, #16912	; 0x4210
   13684:	movt	r3, #3
   13688:	ldrb	r3, [r3]
   1368c:	eor	r3, r3, #1
   13690:	uxtb	r3, r3
   13694:	cmp	r3, #0
   13698:	bne	136a8 <__assert_fail@plt+0x22c4>
   1369c:	ldr	r3, [fp, #-8]
   136a0:	cmp	r3, #1
   136a4:	bne	136b0 <__assert_fail@plt+0x22cc>
   136a8:	mov	r3, #1
   136ac:	b	136b4 <__assert_fail@plt+0x22d0>
   136b0:	mov	r3, #0
   136b4:	and	r3, r3, #1
   136b8:	uxtb	r2, r3
   136bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   136c0:	strb	r2, [r3, #36]	; 0x24
   136c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   136c8:	ldr	r2, [fp, #-12]
   136cc:	str	r2, [r3, #32]
   136d0:	movw	r3, #16928	; 0x4220
   136d4:	movt	r3, #3
   136d8:	ldrb	r3, [r3]
   136dc:	eor	r3, r3, #1
   136e0:	uxtb	r3, r3
   136e4:	cmp	r3, #0
   136e8:	beq	13700 <__assert_fail@plt+0x231c>
   136ec:	mov	r3, #0
   136f0:	str	r3, [fp, #-12]
   136f4:	mov	r3, #0
   136f8:	str	r3, [fp, #-16]
   136fc:	b	13730 <__assert_fail@plt+0x234c>
   13700:	movw	r3, #17012	; 0x4274
   13704:	movt	r3, #3
   13708:	ldr	r3, [r3]
   1370c:	ldr	r2, [fp, #-16]
   13710:	add	r3, r2, r3
   13714:	str	r3, [fp, #-12]
   13718:	movw	r3, #16932	; 0x4224
   1371c:	movt	r3, #3
   13720:	ldr	r3, [r3]
   13724:	ldr	r2, [fp, #-12]
   13728:	add	r3, r2, r3
   1372c:	str	r3, [fp, #-16]
   13730:	ldr	r3, [fp, #-20]	; 0xffffffec
   13734:	add	r3, r3, #40	; 0x28
   13738:	str	r3, [fp, #-20]	; 0xffffffec
   1373c:	ldr	r3, [fp, #-8]
   13740:	add	r3, r3, #1
   13744:	str	r3, [fp, #-8]
   13748:	movw	r3, #16732	; 0x415c
   1374c:	movt	r3, #3
   13750:	ldr	r3, [r3]
   13754:	ldr	r2, [fp, #-8]
   13758:	cmp	r2, r3
   1375c:	blt	13614 <__assert_fail@plt+0x2230>
   13760:	movw	r3, #16705	; 0x4141
   13764:	movt	r3, #3
   13768:	ldrb	r3, [r3]
   1376c:	cmp	r3, #0
   13770:	beq	137ac <__assert_fail@plt+0x23c8>
   13774:	movw	r3, #16923	; 0x421b
   13778:	movt	r3, #3
   1377c:	ldrb	r3, [r3]
   13780:	cmp	r3, #0
   13784:	beq	137ac <__assert_fail@plt+0x23c8>
   13788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1378c:	movw	r3, #20080	; 0x4e70
   13790:	movt	r3, #1
   13794:	str	r3, [r2, #16]
   13798:	ldr	r2, [fp, #-20]	; 0xffffffec
   1379c:	movw	r3, #25324	; 0x62ec
   137a0:	movt	r3, #1
   137a4:	str	r3, [r2, #12]
   137a8:	b	137cc <__assert_fail@plt+0x23e8>
   137ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   137b0:	movw	r3, #22624	; 0x5860
   137b4:	movt	r3, #1
   137b8:	str	r3, [r2, #16]
   137bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   137c0:	movw	r3, #23908	; 0x5d64
   137c4:	movt	r3, #1
   137c8:	str	r3, [r2, #12]
   137cc:	movw	r3, #16988	; 0x425c
   137d0:	movt	r3, #3
   137d4:	ldrb	r3, [r3]
   137d8:	cmp	r3, #0
   137dc:	beq	13810 <__assert_fail@plt+0x242c>
   137e0:	movw	r3, #16912	; 0x4210
   137e4:	movt	r3, #3
   137e8:	ldrb	r3, [r3]
   137ec:	eor	r3, r3, #1
   137f0:	uxtb	r3, r3
   137f4:	cmp	r3, #0
   137f8:	bne	13808 <__assert_fail@plt+0x2424>
   137fc:	ldr	r3, [fp, #-8]
   13800:	cmp	r3, #1
   13804:	bne	13810 <__assert_fail@plt+0x242c>
   13808:	mov	r3, #1
   1380c:	b	13814 <__assert_fail@plt+0x2430>
   13810:	mov	r3, #0
   13814:	and	r3, r3, #1
   13818:	uxtb	r2, r3
   1381c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13820:	strb	r2, [r3, #36]	; 0x24
   13824:	ldr	r3, [fp, #-20]	; 0xffffffec
   13828:	ldr	r2, [fp, #-12]
   1382c:	str	r2, [r3, #32]
   13830:	nop	{0}
   13834:	add	sp, fp, #0
   13838:	pop	{fp}		; (ldr fp, [sp], #4)
   1383c:	bx	lr
   13840:	str	r4, [sp, #-12]!
   13844:	str	fp, [sp, #4]
   13848:	str	lr, [sp, #8]
   1384c:	add	fp, sp, #8
   13850:	sub	sp, sp, #12
   13854:	str	r0, [fp, #-16]
   13858:	str	r1, [fp, #-20]	; 0xffffffec
   1385c:	movw	r1, #8896	; 0x22c0
   13860:	movt	r1, #2
   13864:	ldr	r0, [fp, #-16]
   13868:	bl	110b4 <strcmp@plt>
   1386c:	mov	r3, r0
   13870:	cmp	r3, #0
   13874:	bne	138b8 <__assert_fail@plt+0x24d4>
   13878:	movw	r0, #8792	; 0x2258
   1387c:	movt	r0, #2
   13880:	bl	11288 <gettext@plt>
   13884:	mov	r2, r0
   13888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1388c:	str	r2, [r3, #4]
   13890:	movw	r3, #16872	; 0x41e8
   13894:	movt	r3, #3
   13898:	ldr	r2, [r3]
   1389c:	ldr	r3, [fp, #-20]	; 0xffffffec
   138a0:	str	r2, [r3]
   138a4:	movw	r3, #16921	; 0x4219
   138a8:	movt	r3, #3
   138ac:	mov	r2, #1
   138b0:	strb	r2, [r3]
   138b4:	b	138e0 <__assert_fail@plt+0x24fc>
   138b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   138bc:	ldr	r2, [fp, #-16]
   138c0:	str	r2, [r3, #4]
   138c4:	movw	r1, #8900	; 0x22c4
   138c8:	movt	r1, #2
   138cc:	ldr	r0, [fp, #-16]
   138d0:	bl	17160 <__assert_fail@plt+0x5d7c>
   138d4:	mov	r2, r0
   138d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   138dc:	str	r2, [r3]
   138e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138e4:	ldr	r3, [r3]
   138e8:	cmp	r3, #0
   138ec:	bne	13958 <__assert_fail@plt+0x2574>
   138f0:	movw	r3, #16956	; 0x423c
   138f4:	movt	r3, #3
   138f8:	mov	r2, #1
   138fc:	strb	r2, [r3]
   13900:	movw	r3, #17008	; 0x4270
   13904:	movt	r3, #3
   13908:	ldrb	r3, [r3]
   1390c:	eor	r3, r3, #1
   13910:	uxtb	r3, r3
   13914:	cmp	r3, #0
   13918:	beq	13950 <__assert_fail@plt+0x256c>
   1391c:	bl	112d0 <__errno_location@plt>
   13920:	mov	r3, r0
   13924:	ldr	r4, [r3]
   13928:	ldr	r2, [fp, #-16]
   1392c:	mov	r1, #3
   13930:	mov	r0, #0
   13934:	bl	1cbf0 <__assert_fail@plt+0xb80c>
   13938:	mov	r3, r0
   1393c:	movw	r2, #8904	; 0x22c8
   13940:	movt	r2, #2
   13944:	mov	r1, r4
   13948:	mov	r0, #0
   1394c:	bl	11210 <error@plt>
   13950:	mov	r3, #0
   13954:	b	139a4 <__assert_fail@plt+0x25c0>
   13958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1395c:	ldr	r3, [r3]
   13960:	mov	r1, #2
   13964:	mov	r0, r3
   13968:	bl	16f34 <__assert_fail@plt+0x5b50>
   1396c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13970:	mov	r2, #0
   13974:	str	r2, [r3, #8]
   13978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1397c:	mov	r2, #0
   13980:	strb	r2, [r3, #37]	; 0x25
   13984:	movw	r3, #17004	; 0x426c
   13988:	movt	r3, #3
   1398c:	ldr	r3, [r3]
   13990:	add	r2, r3, #1
   13994:	movw	r3, #17004	; 0x426c
   13998:	movt	r3, #3
   1399c:	str	r2, [r3]
   139a0:	mov	r3, #1
   139a4:	mov	r0, r3
   139a8:	sub	sp, fp, #8
   139ac:	ldr	r4, [sp]
   139b0:	ldr	fp, [sp, #4]
   139b4:	add	sp, sp, #8
   139b8:	pop	{pc}		; (ldr pc, [sp], #4)
   139bc:	str	fp, [sp, #-8]!
   139c0:	str	lr, [sp, #4]
   139c4:	add	fp, sp, #4
   139c8:	sub	sp, sp, #24
   139cc:	str	r0, [fp, #-24]	; 0xffffffe8
   139d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   139d4:	ldr	r3, [r3, #8]
   139d8:	cmp	r3, #3
   139dc:	beq	13b80 <__assert_fail@plt+0x279c>
   139e0:	bl	112d0 <__errno_location@plt>
   139e4:	mov	r3, r0
   139e8:	ldr	r3, [r3]
   139ec:	str	r3, [fp, #-16]
   139f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   139f4:	ldr	r3, [r3]
   139f8:	mov	r0, r3
   139fc:	bl	111f8 <ferror_unlocked@plt>
   13a00:	mov	r3, r0
   13a04:	cmp	r3, #0
   13a08:	bne	13a14 <__assert_fail@plt+0x2630>
   13a0c:	mov	r3, #0
   13a10:	str	r3, [fp, #-16]
   13a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a18:	ldr	r3, [r3]
   13a1c:	mov	r0, r3
   13a20:	bl	112f4 <fileno@plt>
   13a24:	mov	r3, r0
   13a28:	cmp	r3, #0
   13a2c:	bne	13a44 <__assert_fail@plt+0x2660>
   13a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a34:	ldr	r3, [r3]
   13a38:	mov	r0, r3
   13a3c:	bl	11384 <clearerr_unlocked@plt>
   13a40:	b	13a7c <__assert_fail@plt+0x2698>
   13a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a48:	ldr	r3, [r3]
   13a4c:	mov	r0, r3
   13a50:	bl	16f9c <__assert_fail@plt+0x5bb8>
   13a54:	mov	r3, r0
   13a58:	cmp	r3, #0
   13a5c:	beq	13a7c <__assert_fail@plt+0x2698>
   13a60:	ldr	r3, [fp, #-16]
   13a64:	cmp	r3, #0
   13a68:	bne	13a7c <__assert_fail@plt+0x2698>
   13a6c:	bl	112d0 <__errno_location@plt>
   13a70:	mov	r3, r0
   13a74:	ldr	r3, [r3]
   13a78:	str	r3, [fp, #-16]
   13a7c:	ldr	r3, [fp, #-16]
   13a80:	cmp	r3, #0
   13a84:	beq	13ab8 <__assert_fail@plt+0x26d4>
   13a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a8c:	ldr	r3, [r3, #4]
   13a90:	mov	r2, r3
   13a94:	mov	r1, #3
   13a98:	mov	r0, #0
   13a9c:	bl	1cbf0 <__assert_fail@plt+0xb80c>
   13aa0:	mov	r3, r0
   13aa4:	movw	r2, #8904	; 0x22c8
   13aa8:	movt	r2, #2
   13aac:	ldr	r1, [fp, #-16]
   13ab0:	mov	r0, #1
   13ab4:	bl	11210 <error@plt>
   13ab8:	movw	r3, #16912	; 0x4210
   13abc:	movt	r3, #3
   13ac0:	ldrb	r3, [r3]
   13ac4:	eor	r3, r3, #1
   13ac8:	uxtb	r3, r3
   13acc:	cmp	r3, #0
   13ad0:	beq	13b48 <__assert_fail@plt+0x2764>
   13ad4:	movw	r3, #16888	; 0x41f8
   13ad8:	movt	r3, #3
   13adc:	ldr	r3, [r3]
   13ae0:	str	r3, [fp, #-8]
   13ae4:	movw	r3, #16732	; 0x415c
   13ae8:	movt	r3, #3
   13aec:	ldr	r3, [r3]
   13af0:	str	r3, [fp, #-12]
   13af4:	b	13b38 <__assert_fail@plt+0x2754>
   13af8:	ldr	r3, [fp, #-8]
   13afc:	mov	r2, #3
   13b00:	str	r2, [r3, #8]
   13b04:	ldr	r3, [fp, #-8]
   13b08:	ldr	r3, [r3, #24]
   13b0c:	cmp	r3, #0
   13b10:	bne	13b20 <__assert_fail@plt+0x273c>
   13b14:	ldr	r3, [fp, #-8]
   13b18:	mov	r2, #0
   13b1c:	str	r2, [r3, #28]
   13b20:	ldr	r3, [fp, #-8]
   13b24:	add	r3, r3, #40	; 0x28
   13b28:	str	r3, [fp, #-8]
   13b2c:	ldr	r3, [fp, #-12]
   13b30:	sub	r3, r3, #1
   13b34:	str	r3, [fp, #-12]
   13b38:	ldr	r3, [fp, #-12]
   13b3c:	cmp	r3, #0
   13b40:	bne	13af8 <__assert_fail@plt+0x2714>
   13b44:	b	13b60 <__assert_fail@plt+0x277c>
   13b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b4c:	mov	r2, #3
   13b50:	str	r2, [r3, #8]
   13b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b58:	mov	r2, #0
   13b5c:	str	r2, [r3, #28]
   13b60:	movw	r3, #16968	; 0x4248
   13b64:	movt	r3, #3
   13b68:	ldr	r3, [r3]
   13b6c:	sub	r2, r3, #1
   13b70:	movw	r3, #16968	; 0x4248
   13b74:	movt	r3, #3
   13b78:	str	r2, [r3]
   13b7c:	b	13b84 <__assert_fail@plt+0x27a0>
   13b80:	nop	{0}
   13b84:	sub	sp, fp, #4
   13b88:	ldr	fp, [sp]
   13b8c:	add	sp, sp, #4
   13b90:	pop	{pc}		; (ldr pc, [sp], #4)
   13b94:	push	{fp}		; (str fp, [sp, #-4]!)
   13b98:	add	fp, sp, #0
   13b9c:	sub	sp, sp, #20
   13ba0:	str	r0, [fp, #-16]
   13ba4:	movw	r3, #16912	; 0x4210
   13ba8:	movt	r3, #3
   13bac:	ldrb	r3, [r3]
   13bb0:	eor	r3, r3, #1
   13bb4:	uxtb	r3, r3
   13bb8:	cmp	r3, #0
   13bbc:	beq	13c3c <__assert_fail@plt+0x2858>
   13bc0:	movw	r3, #16888	; 0x41f8
   13bc4:	movt	r3, #3
   13bc8:	ldr	r3, [r3]
   13bcc:	str	r3, [fp, #-8]
   13bd0:	movw	r3, #16732	; 0x415c
   13bd4:	movt	r3, #3
   13bd8:	ldr	r3, [r3]
   13bdc:	str	r3, [fp, #-12]
   13be0:	b	13c2c <__assert_fail@plt+0x2848>
   13be4:	movw	r3, #16705	; 0x4141
   13be8:	movt	r3, #3
   13bec:	ldrb	r3, [r3]
   13bf0:	cmp	r3, #0
   13bf4:	beq	13c08 <__assert_fail@plt+0x2824>
   13bf8:	ldr	r3, [fp, #-8]
   13bfc:	mov	r2, #1
   13c00:	str	r2, [r3, #8]
   13c04:	b	13c14 <__assert_fail@plt+0x2830>
   13c08:	ldr	r3, [fp, #-8]
   13c0c:	mov	r2, #2
   13c10:	str	r2, [r3, #8]
   13c14:	ldr	r3, [fp, #-8]
   13c18:	add	r3, r3, #40	; 0x28
   13c1c:	str	r3, [fp, #-8]
   13c20:	ldr	r3, [fp, #-12]
   13c24:	sub	r3, r3, #1
   13c28:	str	r3, [fp, #-12]
   13c2c:	ldr	r3, [fp, #-12]
   13c30:	cmp	r3, #0
   13c34:	bne	13be4 <__assert_fail@plt+0x2800>
   13c38:	b	13c48 <__assert_fail@plt+0x2864>
   13c3c:	ldr	r3, [fp, #-16]
   13c40:	mov	r2, #2
   13c44:	str	r2, [r3, #8]
   13c48:	ldr	r3, [fp, #-16]
   13c4c:	mov	r2, #0
   13c50:	str	r2, [r3, #28]
   13c54:	movw	r3, #16968	; 0x4248
   13c58:	movt	r3, #3
   13c5c:	ldr	r3, [r3]
   13c60:	sub	r2, r3, #1
   13c64:	movw	r3, #16968	; 0x4248
   13c68:	movt	r3, #3
   13c6c:	str	r2, [r3]
   13c70:	nop	{0}
   13c74:	add	sp, fp, #0
   13c78:	pop	{fp}		; (ldr fp, [sp], #4)
   13c7c:	bx	lr
   13c80:	push	{fp}		; (str fp, [sp, #-4]!)
   13c84:	add	fp, sp, #0
   13c88:	sub	sp, sp, #12
   13c8c:	movw	r3, #16732	; 0x415c
   13c90:	movt	r3, #3
   13c94:	ldr	r3, [r3]
   13c98:	str	r3, [fp, #-8]
   13c9c:	movw	r3, #16888	; 0x41f8
   13ca0:	movt	r3, #3
   13ca4:	ldr	r3, [r3]
   13ca8:	str	r3, [fp, #-12]
   13cac:	b	13d00 <__assert_fail@plt+0x291c>
   13cb0:	ldr	r3, [fp, #-12]
   13cb4:	ldr	r3, [r3, #8]
   13cb8:	cmp	r3, #2
   13cbc:	bne	13ce8 <__assert_fail@plt+0x2904>
   13cc0:	ldr	r3, [fp, #-12]
   13cc4:	mov	r2, #0
   13cc8:	str	r2, [r3, #8]
   13ccc:	movw	r3, #16968	; 0x4248
   13cd0:	movt	r3, #3
   13cd4:	ldr	r3, [r3]
   13cd8:	add	r2, r3, #1
   13cdc:	movw	r3, #16968	; 0x4248
   13ce0:	movt	r3, #3
   13ce4:	str	r2, [r3]
   13ce8:	ldr	r3, [fp, #-8]
   13cec:	sub	r3, r3, #1
   13cf0:	str	r3, [fp, #-8]
   13cf4:	ldr	r3, [fp, #-12]
   13cf8:	add	r3, r3, #40	; 0x28
   13cfc:	str	r3, [fp, #-12]
   13d00:	ldr	r3, [fp, #-8]
   13d04:	cmp	r3, #0
   13d08:	bne	13cb0 <__assert_fail@plt+0x28cc>
   13d0c:	movw	r3, #16705	; 0x4141
   13d10:	movt	r3, #3
   13d14:	ldrb	r3, [r3]
   13d18:	cmp	r3, #0
   13d1c:	beq	13d5c <__assert_fail@plt+0x2978>
   13d20:	movw	r3, #16888	; 0x41f8
   13d24:	movt	r3, #3
   13d28:	ldr	r3, [r3]
   13d2c:	ldr	r3, [r3, #8]
   13d30:	cmp	r3, #3
   13d34:	bne	13d4c <__assert_fail@plt+0x2968>
   13d38:	movw	r3, #16968	; 0x4248
   13d3c:	movt	r3, #3
   13d40:	mov	r2, #0
   13d44:	str	r2, [r3]
   13d48:	b	13d5c <__assert_fail@plt+0x2978>
   13d4c:	movw	r3, #16968	; 0x4248
   13d50:	movt	r3, #3
   13d54:	mov	r2, #1
   13d58:	str	r2, [r3]
   13d5c:	nop	{0}
   13d60:	add	sp, fp, #0
   13d64:	pop	{fp}		; (ldr fp, [sp], #4)
   13d68:	bx	lr
   13d6c:	str	fp, [sp, #-8]!
   13d70:	str	lr, [sp, #4]
   13d74:	add	fp, sp, #4
   13d78:	sub	sp, sp, #8
   13d7c:	str	r0, [fp, #-8]
   13d80:	str	r1, [fp, #-12]
   13d84:	ldr	r0, [fp, #-8]
   13d88:	bl	12ca8 <__assert_fail@plt+0x18c4>
   13d8c:	ldr	r1, [fp, #-12]
   13d90:	ldr	r0, [fp, #-8]
   13d94:	bl	13208 <__assert_fail@plt+0x1e24>
   13d98:	mov	r3, r0
   13d9c:	eor	r3, r3, #1
   13da0:	uxtb	r3, r3
   13da4:	cmp	r3, #0
   13da8:	bne	13e6c <__assert_fail@plt+0x2a88>
   13dac:	movw	r3, #16705	; 0x4141
   13db0:	movt	r3, #3
   13db4:	ldrb	r3, [r3]
   13db8:	cmp	r3, #0
   13dbc:	beq	13dc4 <__assert_fail@plt+0x29e0>
   13dc0:	bl	148bc <__assert_fail@plt+0x34d8>
   13dc4:	movw	r3, #16960	; 0x4240
   13dc8:	movt	r3, #3
   13dcc:	ldrd	r2, [r3]
   13dd0:	cmp	r3, #0
   13dd4:	cmpeq	r2, #1
   13dd8:	bls	13e24 <__assert_fail@plt+0x2a40>
   13ddc:	movw	r3, #16960	; 0x4240
   13de0:	movt	r3, #3
   13de4:	ldrd	r2, [r3]
   13de8:	mov	r0, r2
   13dec:	mov	r1, r3
   13df0:	bl	15970 <__assert_fail@plt+0x458c>
   13df4:	mov	r3, r0
   13df8:	eor	r3, r3, #1
   13dfc:	uxtb	r3, r3
   13e00:	cmp	r3, #0
   13e04:	bne	13e74 <__assert_fail@plt+0x2a90>
   13e08:	movw	r3, #16960	; 0x4240
   13e0c:	movt	r3, #3
   13e10:	ldrd	r0, [r3]
   13e14:	movw	r3, #16976	; 0x4250
   13e18:	movt	r3, #3
   13e1c:	strd	r0, [r3]
   13e20:	b	13e38 <__assert_fail@plt+0x2a54>
   13e24:	movw	r3, #16976	; 0x4250
   13e28:	movt	r3, #3
   13e2c:	mov	r0, #1
   13e30:	mov	r1, #0
   13e34:	strd	r0, [r3]
   13e38:	bl	13530 <__assert_fail@plt+0x214c>
   13e3c:	movw	r3, #16748	; 0x416c
   13e40:	movt	r3, #3
   13e44:	ldr	r2, [r3]
   13e48:	movw	r3, #16984	; 0x4258
   13e4c:	movt	r3, #3
   13e50:	str	r2, [r3]
   13e54:	nop	{0}
   13e58:	bl	1436c <__assert_fail@plt+0x2f88>
   13e5c:	mov	r3, r0
   13e60:	cmp	r3, #0
   13e64:	bne	13e58 <__assert_fail@plt+0x2a74>
   13e68:	b	13e78 <__assert_fail@plt+0x2a94>
   13e6c:	nop	{0}
   13e70:	b	13e78 <__assert_fail@plt+0x2a94>
   13e74:	nop	{0}
   13e78:	sub	sp, fp, #4
   13e7c:	ldr	fp, [sp]
   13e80:	add	sp, sp, #4
   13e84:	pop	{pc}		; (ldr pc, [sp], #4)
   13e88:	str	r4, [sp, #-12]!
   13e8c:	str	fp, [sp, #4]
   13e90:	str	lr, [sp, #8]
   13e94:	add	fp, sp, #8
   13e98:	sub	sp, sp, #228	; 0xe4
   13e9c:	str	r0, [fp, #-216]	; 0xffffff28
   13ea0:	str	r1, [fp, #-220]	; 0xffffff24
   13ea4:	mov	r3, #0
   13ea8:	str	r3, [fp, #-16]
   13eac:	movw	r1, #8896	; 0x22c0
   13eb0:	movt	r1, #2
   13eb4:	ldr	r0, [fp, #-216]	; 0xffffff28
   13eb8:	bl	110b4 <strcmp@plt>
   13ebc:	mov	r3, r0
   13ec0:	cmp	r3, #0
   13ec4:	bne	13ed0 <__assert_fail@plt+0x2aec>
   13ec8:	mvn	r3, #0
   13ecc:	str	r3, [fp, #-220]	; 0xffffff24
   13ed0:	ldr	r3, [fp, #-220]	; 0xffffff24
   13ed4:	cmp	r3, #0
   13ed8:	blt	13f20 <__assert_fail@plt+0x2b3c>
   13edc:	sub	r3, fp, #132	; 0x84
   13ee0:	mov	r1, r3
   13ee4:	ldr	r0, [fp, #-220]	; 0xffffff24
   13ee8:	bl	21aa0 <__assert_fail@plt+0x106bc>
   13eec:	mov	r3, r0
   13ef0:	cmp	r3, #0
   13ef4:	bne	13f20 <__assert_fail@plt+0x2b3c>
   13ef8:	sub	r3, fp, #228	; 0xe4
   13efc:	sub	r2, fp, #132	; 0x84
   13f00:	mov	r1, r2
   13f04:	mov	r0, r3
   13f08:	bl	1d1d0 <__assert_fail@plt+0xbdec>
   13f0c:	sub	r1, fp, #140	; 0x8c
   13f10:	sub	r3, fp, #228	; 0xe4
   13f14:	ldrd	r2, [r3]
   13f18:	strd	r2, [r1]
   13f1c:	b	13f54 <__assert_fail@plt+0x2b70>
   13f20:	movw	r3, #17060	; 0x42a4
   13f24:	movt	r3, #3
   13f28:	ldr	r3, [r3]
   13f2c:	cmp	r3, #0
   13f30:	bne	13f40 <__assert_fail@plt+0x2b5c>
   13f34:	movw	r0, #17060	; 0x42a4
   13f38:	movt	r0, #3
   13f3c:	bl	1740c <__assert_fail@plt+0x6028>
   13f40:	movw	r3, #17060	; 0x42a4
   13f44:	movt	r3, #3
   13f48:	sub	r1, fp, #140	; 0x8c
   13f4c:	ldrd	r2, [r3]
   13f50:	strd	r2, [r1]
   13f54:	ldr	r3, [fp, #-136]	; 0xffffff78
   13f58:	str	r3, [fp, #-20]	; 0xffffffec
   13f5c:	movw	r3, #17036	; 0x428c
   13f60:	movt	r3, #3
   13f64:	ldr	r3, [r3]
   13f68:	sub	r2, fp, #184	; 0xb8
   13f6c:	sub	r1, fp, #140	; 0x8c
   13f70:	mov	r0, r3
   13f74:	bl	1d8cc <__assert_fail@plt+0xc4e8>
   13f78:	mov	r3, r0
   13f7c:	cmp	r3, #0
   13f80:	beq	1401c <__assert_fail@plt+0x2c38>
   13f84:	movw	r3, #17032	; 0x4288
   13f88:	movt	r3, #3
   13f8c:	ldr	r1, [r3]
   13f90:	movw	r3, #17036	; 0x428c
   13f94:	movt	r3, #3
   13f98:	ldr	r3, [r3]
   13f9c:	sub	r0, fp, #184	; 0xb8
   13fa0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fa4:	str	r2, [sp, #4]
   13fa8:	str	r3, [sp]
   13fac:	mov	r3, r0
   13fb0:	mov	r2, r1
   13fb4:	mvn	r1, #0
   13fb8:	mov	r0, #0
   13fbc:	bl	17b68 <__assert_fail@plt+0x6784>
   13fc0:	mov	r3, r0
   13fc4:	add	r3, r3, #1
   13fc8:	str	r3, [fp, #-24]	; 0xffffffe8
   13fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd0:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   13fd4:	mov	r3, r0
   13fd8:	str	r3, [fp, #-16]
   13fdc:	movw	r3, #17032	; 0x4288
   13fe0:	movt	r3, #3
   13fe4:	ldr	r1, [r3]
   13fe8:	movw	r3, #17036	; 0x428c
   13fec:	movt	r3, #3
   13ff0:	ldr	r3, [r3]
   13ff4:	sub	r0, fp, #184	; 0xb8
   13ff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ffc:	str	r2, [sp, #4]
   14000:	str	r3, [sp]
   14004:	mov	r3, r0
   14008:	mov	r2, r1
   1400c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14010:	ldr	r0, [fp, #-16]
   14014:	bl	17b68 <__assert_fail@plt+0x6784>
   14018:	b	14058 <__assert_fail@plt+0x2c74>
   1401c:	mov	r0, #33	; 0x21
   14020:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   14024:	mov	r3, r0
   14028:	str	r3, [fp, #-16]
   1402c:	ldr	r3, [fp, #-140]	; 0xffffff74
   14030:	sub	r2, fp, #208	; 0xd0
   14034:	mov	r1, r2
   14038:	mov	r0, r3
   1403c:	bl	1175c <__assert_fail@plt+0x378>
   14040:	mov	r2, r0
   14044:	ldr	r3, [fp, #-20]	; 0xffffffec
   14048:	movw	r1, #8908	; 0x22cc
   1404c:	movt	r1, #2
   14050:	ldr	r0, [fp, #-16]
   14054:	bl	1136c <sprintf@plt>
   14058:	movw	r3, #17040	; 0x4290
   1405c:	movt	r3, #3
   14060:	ldr	r3, [r3]
   14064:	mov	r0, r3
   14068:	bl	17278 <__assert_fail@plt+0x5e94>
   1406c:	movw	r3, #17040	; 0x4290
   14070:	movt	r3, #3
   14074:	ldr	r2, [fp, #-16]
   14078:	str	r2, [r3]
   1407c:	movw	r3, #17028	; 0x4284
   14080:	movt	r3, #3
   14084:	ldr	r3, [r3]
   14088:	cmp	r3, #0
   1408c:	bne	140b0 <__assert_fail@plt+0x2ccc>
   14090:	ldr	r3, [fp, #-220]	; 0xffffff24
   14094:	cmp	r3, #0
   14098:	blt	140a4 <__assert_fail@plt+0x2cc0>
   1409c:	ldr	r3, [fp, #-216]	; 0xffffff28
   140a0:	b	140bc <__assert_fail@plt+0x2cd8>
   140a4:	movw	r3, #7224	; 0x1c38
   140a8:	movt	r3, #2
   140ac:	b	140bc <__assert_fail@plt+0x2cd8>
   140b0:	movw	r3, #17028	; 0x4284
   140b4:	movt	r3, #3
   140b8:	ldr	r3, [r3]
   140bc:	movw	r2, #17044	; 0x4294
   140c0:	movt	r2, #3
   140c4:	str	r3, [r2]
   140c8:	movw	r3, #16712	; 0x4148
   140cc:	movt	r3, #3
   140d0:	ldr	r4, [r3]
   140d4:	movw	r3, #17040	; 0x4290
   140d8:	movt	r3, #3
   140dc:	ldr	r3, [r3]
   140e0:	mov	r1, #0
   140e4:	mov	r0, r3
   140e8:	bl	17650 <__assert_fail@plt+0x626c>
   140ec:	mov	r3, r0
   140f0:	sub	r4, r4, r3
   140f4:	movw	r3, #17044	; 0x4294
   140f8:	movt	r3, #3
   140fc:	ldr	r3, [r3]
   14100:	mov	r1, #0
   14104:	mov	r0, r3
   14108:	bl	17650 <__assert_fail@plt+0x626c>
   1410c:	mov	r3, r0
   14110:	sub	r2, r4, r3
   14114:	movw	r3, #17048	; 0x4298
   14118:	movt	r3, #3
   1411c:	str	r2, [r3]
   14120:	nop	{0}
   14124:	sub	sp, fp, #8
   14128:	ldr	r4, [sp]
   1412c:	ldr	fp, [sp, #4]
   14130:	add	sp, sp, #8
   14134:	pop	{pc}		; (ldr pc, [sp], #4)
   14138:	str	fp, [sp, #-8]!
   1413c:	str	lr, [sp, #4]
   14140:	add	fp, sp, #4
   14144:	sub	sp, sp, #8
   14148:	movw	r3, #16705	; 0x4141
   1414c:	movt	r3, #3
   14150:	ldrb	r3, [r3]
   14154:	cmp	r3, #0
   14158:	beq	1421c <__assert_fail@plt+0x2e38>
   1415c:	bl	14af4 <__assert_fail@plt+0x3710>
   14160:	movw	r3, #16732	; 0x415c
   14164:	movt	r3, #3
   14168:	ldr	r3, [r3]
   1416c:	sub	r3, r3, #1
   14170:	str	r3, [fp, #-8]
   14174:	movw	r3, #16888	; 0x41f8
   14178:	movt	r3, #3
   1417c:	ldr	r3, [r3]
   14180:	str	r3, [fp, #-12]
   14184:	b	141b0 <__assert_fail@plt+0x2dcc>
   14188:	ldr	r3, [fp, #-12]
   1418c:	ldr	r2, [r3, #24]
   14190:	ldr	r3, [fp, #-12]
   14194:	str	r2, [r3, #28]
   14198:	ldr	r3, [fp, #-8]
   1419c:	sub	r3, r3, #1
   141a0:	str	r3, [fp, #-8]
   141a4:	ldr	r3, [fp, #-12]
   141a8:	add	r3, r3, #40	; 0x28
   141ac:	str	r3, [fp, #-12]
   141b0:	ldr	r3, [fp, #-8]
   141b4:	cmp	r3, #0
   141b8:	bne	14188 <__assert_fail@plt+0x2da4>
   141bc:	movw	r3, #16923	; 0x421b
   141c0:	movt	r3, #3
   141c4:	ldrb	r3, [r3]
   141c8:	cmp	r3, #0
   141cc:	beq	141e4 <__assert_fail@plt+0x2e00>
   141d0:	ldr	r3, [fp, #-12]
   141d4:	ldr	r2, [r3, #24]
   141d8:	ldr	r3, [fp, #-12]
   141dc:	str	r2, [r3, #28]
   141e0:	b	14298 <__assert_fail@plt+0x2eb4>
   141e4:	ldr	r3, [fp, #-12]
   141e8:	ldr	r3, [r3, #8]
   141ec:	cmp	r3, #0
   141f0:	bne	1420c <__assert_fail@plt+0x2e28>
   141f4:	movw	r3, #16924	; 0x421c
   141f8:	movt	r3, #3
   141fc:	ldr	r2, [r3]
   14200:	ldr	r3, [fp, #-12]
   14204:	str	r2, [r3, #28]
   14208:	b	14298 <__assert_fail@plt+0x2eb4>
   1420c:	ldr	r3, [fp, #-12]
   14210:	mov	r2, #0
   14214:	str	r2, [r3, #28]
   14218:	b	14298 <__assert_fail@plt+0x2eb4>
   1421c:	movw	r3, #16732	; 0x415c
   14220:	movt	r3, #3
   14224:	ldr	r3, [r3]
   14228:	str	r3, [fp, #-8]
   1422c:	movw	r3, #16888	; 0x41f8
   14230:	movt	r3, #3
   14234:	ldr	r3, [r3]
   14238:	str	r3, [fp, #-12]
   1423c:	b	1428c <__assert_fail@plt+0x2ea8>
   14240:	ldr	r3, [fp, #-12]
   14244:	ldr	r3, [r3, #8]
   14248:	cmp	r3, #0
   1424c:	bne	14268 <__assert_fail@plt+0x2e84>
   14250:	movw	r3, #16924	; 0x421c
   14254:	movt	r3, #3
   14258:	ldr	r2, [r3]
   1425c:	ldr	r3, [fp, #-12]
   14260:	str	r2, [r3, #28]
   14264:	b	14274 <__assert_fail@plt+0x2e90>
   14268:	ldr	r3, [fp, #-12]
   1426c:	mov	r2, #0
   14270:	str	r2, [r3, #28]
   14274:	ldr	r3, [fp, #-8]
   14278:	sub	r3, r3, #1
   1427c:	str	r3, [fp, #-8]
   14280:	ldr	r3, [fp, #-12]
   14284:	add	r3, r3, #40	; 0x28
   14288:	str	r3, [fp, #-12]
   1428c:	ldr	r3, [fp, #-8]
   14290:	cmp	r3, #0
   14294:	bne	14240 <__assert_fail@plt+0x2e5c>
   14298:	nop	{0}
   1429c:	sub	sp, fp, #4
   142a0:	ldr	fp, [sp]
   142a4:	add	sp, sp, #4
   142a8:	pop	{pc}		; (ldr pc, [sp], #4)
   142ac:	str	fp, [sp, #-8]!
   142b0:	str	lr, [sp, #4]
   142b4:	add	fp, sp, #4
   142b8:	sub	sp, sp, #8
   142bc:	str	r0, [fp, #-8]
   142c0:	ldr	r3, [fp, #-8]
   142c4:	ldr	r2, [r3, #32]
   142c8:	movw	r3, #17020	; 0x427c
   142cc:	movt	r3, #3
   142d0:	str	r2, [r3]
   142d4:	movw	r3, #17012	; 0x4274
   142d8:	movt	r3, #3
   142dc:	ldr	r2, [r3]
   142e0:	movw	r3, #17020	; 0x427c
   142e4:	movt	r3, #3
   142e8:	ldr	r3, [r3]
   142ec:	cmp	r2, r3
   142f0:	bge	14328 <__assert_fail@plt+0x2f44>
   142f4:	movw	r3, #17020	; 0x427c
   142f8:	movt	r3, #3
   142fc:	ldr	r2, [r3]
   14300:	movw	r3, #17012	; 0x4274
   14304:	movt	r3, #3
   14308:	ldr	r3, [r3]
   1430c:	sub	r3, r2, r3
   14310:	mov	r0, r3
   14314:	bl	15174 <__assert_fail@plt+0x3d90>
   14318:	movw	r3, #17020	; 0x427c
   1431c:	movt	r3, #3
   14320:	mov	r2, #0
   14324:	str	r2, [r3]
   14328:	movw	r3, #17009	; 0x4271
   1432c:	movt	r3, #3
   14330:	ldrb	r3, [r3]
   14334:	cmp	r3, #0
   14338:	beq	14340 <__assert_fail@plt+0x2f5c>
   1433c:	bl	156a0 <__assert_fail@plt+0x42bc>
   14340:	ldr	r3, [fp, #-8]
   14344:	ldrb	r3, [r3, #36]	; 0x24
   14348:	cmp	r3, #0
   1434c:	beq	14358 <__assert_fail@plt+0x2f74>
   14350:	ldr	r0, [fp, #-8]
   14354:	bl	14f1c <__assert_fail@plt+0x3b38>
   14358:	nop	{0}
   1435c:	sub	sp, fp, #4
   14360:	ldr	fp, [sp]
   14364:	add	sp, sp, #4
   14368:	pop	{pc}		; (ldr pc, [sp], #4)
   1436c:	strd	r4, [sp, #-16]!
   14370:	str	fp, [sp, #8]
   14374:	str	lr, [sp, #12]
   14378:	add	fp, sp, #12
   1437c:	sub	sp, sp, #16
   14380:	bl	14138 <__assert_fail@plt+0x2d54>
   14384:	bl	117cc <__assert_fail@plt+0x3e8>
   14388:	mov	r3, r0
   1438c:	cmp	r3, #0
   14390:	bne	1439c <__assert_fail@plt+0x2fb8>
   14394:	mov	r3, #0
   14398:	b	148a4 <__assert_fail@plt+0x34c0>
   1439c:	movw	r3, #16704	; 0x4140
   143a0:	movt	r3, #3
   143a4:	ldrb	r3, [r3]
   143a8:	cmp	r3, #0
   143ac:	beq	143c0 <__assert_fail@plt+0x2fdc>
   143b0:	movw	r3, #16919	; 0x4217
   143b4:	movt	r3, #3
   143b8:	mov	r2, #1
   143bc:	strb	r2, [r3]
   143c0:	movw	r3, #17024	; 0x4280
   143c4:	movt	r3, #3
   143c8:	mov	r2, #0
   143cc:	strb	r2, [r3]
   143d0:	mov	r3, #0
   143d4:	strb	r3, [fp, #-25]	; 0xffffffe7
   143d8:	movw	r3, #16924	; 0x421c
   143dc:	movt	r3, #3
   143e0:	ldr	r3, [r3]
   143e4:	str	r3, [fp, #-20]	; 0xffffffec
   143e8:	movw	r3, #17002	; 0x426a
   143ec:	movt	r3, #3
   143f0:	ldrb	r3, [r3]
   143f4:	cmp	r3, #0
   143f8:	beq	1472c <__assert_fail@plt+0x3348>
   143fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14400:	lsl	r3, r3, #1
   14404:	str	r3, [fp, #-20]	; 0xffffffec
   14408:	b	1472c <__assert_fail@plt+0x3348>
   1440c:	movw	r3, #16948	; 0x4234
   14410:	movt	r3, #3
   14414:	mov	r2, #0
   14418:	str	r2, [r3]
   1441c:	movw	r3, #16940	; 0x422c
   14420:	movt	r3, #3
   14424:	mov	r2, #0
   14428:	str	r2, [r3]
   1442c:	movw	r3, #17016	; 0x4278
   14430:	movt	r3, #3
   14434:	mov	r2, #0
   14438:	str	r2, [r3]
   1443c:	movw	r3, #17024	; 0x4280
   14440:	movt	r3, #3
   14444:	mov	r2, #0
   14448:	strb	r2, [r3]
   1444c:	movw	r3, #16913	; 0x4211
   14450:	movt	r3, #3
   14454:	mov	r2, #0
   14458:	strb	r2, [r3]
   1445c:	movw	r3, #16914	; 0x4212
   14460:	movt	r3, #3
   14464:	mov	r2, #1
   14468:	strb	r2, [r3]
   1446c:	mov	r3, #1
   14470:	str	r3, [fp, #-16]
   14474:	movw	r3, #16888	; 0x41f8
   14478:	movt	r3, #3
   1447c:	ldr	r3, [r3]
   14480:	str	r3, [fp, #-24]	; 0xffffffe8
   14484:	b	14684 <__assert_fail@plt+0x32a0>
   14488:	movw	r3, #16952	; 0x4238
   1448c:	movt	r3, #3
   14490:	mov	r2, #0
   14494:	str	r2, [r3]
   14498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1449c:	ldr	r3, [r3, #28]
   144a0:	cmp	r3, #0
   144a4:	bgt	144b8 <__assert_fail@plt+0x30d4>
   144a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144ac:	ldr	r3, [r3, #8]
   144b0:	cmp	r3, #1
   144b4:	bne	145f0 <__assert_fail@plt+0x320c>
   144b8:	movw	r3, #16915	; 0x4213
   144bc:	movt	r3, #3
   144c0:	mov	r2, #0
   144c4:	strb	r2, [r3]
   144c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144cc:	ldr	r2, [r3, #32]
   144d0:	movw	r3, #17020	; 0x427c
   144d4:	movt	r3, #3
   144d8:	str	r2, [r3]
   144dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144e0:	ldr	r3, [r3, #12]
   144e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144e8:	blx	r3
   144ec:	mov	r3, r0
   144f0:	eor	r3, r3, #1
   144f4:	uxtb	r3, r3
   144f8:	cmp	r3, #0
   144fc:	beq	14508 <__assert_fail@plt+0x3124>
   14500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14504:	bl	1528c <__assert_fail@plt+0x3ea8>
   14508:	movw	r3, #17024	; 0x4280
   1450c:	movt	r3, #3
   14510:	ldrb	r2, [r3]
   14514:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   14518:	orr	r3, r2, r3
   1451c:	uxtb	r3, r3
   14520:	cmp	r3, #0
   14524:	movne	r3, #1
   14528:	moveq	r3, #0
   1452c:	strb	r3, [fp, #-25]	; 0xffffffe7
   14530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14534:	ldr	r3, [r3, #28]
   14538:	sub	r2, r3, #1
   1453c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14540:	str	r2, [r3, #28]
   14544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14548:	ldr	r3, [r3, #28]
   1454c:	cmp	r3, #0
   14550:	bgt	14564 <__assert_fail@plt+0x3180>
   14554:	bl	117cc <__assert_fail@plt+0x3e8>
   14558:	mov	r3, r0
   1455c:	cmp	r3, #0
   14560:	beq	146a0 <__assert_fail@plt+0x32bc>
   14564:	movw	r3, #16912	; 0x4210
   14568:	movt	r3, #3
   1456c:	ldrb	r3, [r3]
   14570:	cmp	r3, #0
   14574:	beq	14638 <__assert_fail@plt+0x3254>
   14578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1457c:	ldr	r3, [r3, #8]
   14580:	cmp	r3, #0
   14584:	beq	14638 <__assert_fail@plt+0x3254>
   14588:	movw	r3, #16914	; 0x4212
   1458c:	movt	r3, #3
   14590:	ldrb	r3, [r3]
   14594:	cmp	r3, #0
   14598:	beq	145b0 <__assert_fail@plt+0x31cc>
   1459c:	movw	r3, #16913	; 0x4211
   145a0:	movt	r3, #3
   145a4:	mov	r2, #1
   145a8:	strb	r2, [r3]
   145ac:	b	14638 <__assert_fail@plt+0x3254>
   145b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145b4:	ldr	r3, [r3, #8]
   145b8:	cmp	r3, #3
   145bc:	beq	145e4 <__assert_fail@plt+0x3200>
   145c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145c4:	ldr	r3, [r3, #8]
   145c8:	cmp	r3, #2
   145cc:	bne	14638 <__assert_fail@plt+0x3254>
   145d0:	movw	r3, #16915	; 0x4213
   145d4:	movt	r3, #3
   145d8:	ldrb	r3, [r3]
   145dc:	cmp	r3, #0
   145e0:	beq	14638 <__assert_fail@plt+0x3254>
   145e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145e8:	bl	142ac <__assert_fail@plt+0x2ec8>
   145ec:	b	14638 <__assert_fail@plt+0x3254>
   145f0:	movw	r3, #16912	; 0x4210
   145f4:	movt	r3, #3
   145f8:	ldrb	r3, [r3]
   145fc:	cmp	r3, #0
   14600:	beq	1463c <__assert_fail@plt+0x3258>
   14604:	movw	r3, #16914	; 0x4212
   14608:	movt	r3, #3
   1460c:	ldrb	r3, [r3]
   14610:	cmp	r3, #0
   14614:	beq	1462c <__assert_fail@plt+0x3248>
   14618:	movw	r3, #16913	; 0x4211
   1461c:	movt	r3, #3
   14620:	mov	r2, #1
   14624:	strb	r2, [r3]
   14628:	b	1463c <__assert_fail@plt+0x3258>
   1462c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14630:	bl	142ac <__assert_fail@plt+0x2ec8>
   14634:	b	1463c <__assert_fail@plt+0x3258>
   14638:	nop	{0}
   1463c:	movw	r3, #17009	; 0x4271
   14640:	movt	r3, #3
   14644:	ldrb	r3, [r3]
   14648:	cmp	r3, #0
   1464c:	beq	1466c <__assert_fail@plt+0x3288>
   14650:	movw	r3, #17016	; 0x4278
   14654:	movt	r3, #3
   14658:	ldr	r3, [r3]
   1465c:	add	r2, r3, #1
   14660:	movw	r3, #17016	; 0x4278
   14664:	movt	r3, #3
   14668:	str	r2, [r3]
   1466c:	ldr	r3, [fp, #-16]
   14670:	add	r3, r3, #1
   14674:	str	r3, [fp, #-16]
   14678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1467c:	add	r3, r3, #40	; 0x28
   14680:	str	r3, [fp, #-24]	; 0xffffffe8
   14684:	movw	r3, #16732	; 0x415c
   14688:	movt	r3, #3
   1468c:	ldr	r3, [r3]
   14690:	ldr	r2, [fp, #-16]
   14694:	cmp	r2, r3
   14698:	ble	14488 <__assert_fail@plt+0x30a4>
   1469c:	b	146a4 <__assert_fail@plt+0x32c0>
   146a0:	nop	{0}
   146a4:	movw	r3, #17024	; 0x4280
   146a8:	movt	r3, #3
   146ac:	ldrb	r3, [r3]
   146b0:	cmp	r3, #0
   146b4:	beq	146cc <__assert_fail@plt+0x32e8>
   146b8:	mov	r0, #10
   146bc:	bl	113d8 <putchar_unlocked@plt>
   146c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   146c4:	sub	r3, r3, #1
   146c8:	str	r3, [fp, #-20]	; 0xffffffec
   146cc:	bl	117cc <__assert_fail@plt+0x3e8>
   146d0:	mov	r3, r0
   146d4:	cmp	r3, #0
   146d8:	bne	146f8 <__assert_fail@plt+0x3314>
   146dc:	movw	r3, #16704	; 0x4140
   146e0:	movt	r3, #3
   146e4:	ldrb	r3, [r3]
   146e8:	eor	r3, r3, #1
   146ec:	uxtb	r3, r3
   146f0:	cmp	r3, #0
   146f4:	bne	1474c <__assert_fail@plt+0x3368>
   146f8:	movw	r3, #17002	; 0x426a
   146fc:	movt	r3, #3
   14700:	ldrb	r3, [r3]
   14704:	cmp	r3, #0
   14708:	beq	1472c <__assert_fail@plt+0x3348>
   1470c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   14710:	cmp	r3, #0
   14714:	beq	1472c <__assert_fail@plt+0x3348>
   14718:	mov	r0, #10
   1471c:	bl	113d8 <putchar_unlocked@plt>
   14720:	ldr	r3, [fp, #-20]	; 0xffffffec
   14724:	sub	r3, r3, #1
   14728:	str	r3, [fp, #-20]	; 0xffffffec
   1472c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14730:	cmp	r3, #0
   14734:	ble	14750 <__assert_fail@plt+0x336c>
   14738:	bl	117cc <__assert_fail@plt+0x3e8>
   1473c:	mov	r3, r0
   14740:	cmp	r3, #0
   14744:	bne	1440c <__assert_fail@plt+0x3028>
   14748:	b	14750 <__assert_fail@plt+0x336c>
   1474c:	nop	{0}
   14750:	ldr	r3, [fp, #-20]	; 0xffffffec
   14754:	cmp	r3, #0
   14758:	bne	147c4 <__assert_fail@plt+0x33e0>
   1475c:	mov	r3, #1
   14760:	str	r3, [fp, #-16]
   14764:	movw	r3, #16888	; 0x41f8
   14768:	movt	r3, #3
   1476c:	ldr	r3, [r3]
   14770:	str	r3, [fp, #-24]	; 0xffffffe8
   14774:	b	147ac <__assert_fail@plt+0x33c8>
   14778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1477c:	ldr	r3, [r3, #8]
   14780:	cmp	r3, #0
   14784:	bne	14794 <__assert_fail@plt+0x33b0>
   14788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1478c:	mov	r2, #1
   14790:	strb	r2, [r3, #37]	; 0x25
   14794:	ldr	r3, [fp, #-16]
   14798:	add	r3, r3, #1
   1479c:	str	r3, [fp, #-16]
   147a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147a4:	add	r3, r3, #40	; 0x28
   147a8:	str	r3, [fp, #-24]	; 0xffffffe8
   147ac:	movw	r3, #16732	; 0x415c
   147b0:	movt	r3, #3
   147b4:	ldr	r3, [r3]
   147b8:	ldr	r2, [fp, #-16]
   147bc:	cmp	r2, r3
   147c0:	ble	14778 <__assert_fail@plt+0x3394>
   147c4:	movw	r3, #17024	; 0x4280
   147c8:	movt	r3, #3
   147cc:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   147d0:	strb	r2, [r3]
   147d4:	movw	r3, #17024	; 0x4280
   147d8:	movt	r3, #3
   147dc:	ldrb	r3, [r3]
   147e0:	cmp	r3, #0
   147e4:	beq	14810 <__assert_fail@plt+0x342c>
   147e8:	movw	r3, #16704	; 0x4140
   147ec:	movt	r3, #3
   147f0:	ldrb	r3, [r3]
   147f4:	cmp	r3, #0
   147f8:	beq	14810 <__assert_fail@plt+0x342c>
   147fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14800:	add	r3, r3, #5
   14804:	mov	r0, r3
   14808:	bl	15218 <__assert_fail@plt+0x3e34>
   1480c:	b	14850 <__assert_fail@plt+0x346c>
   14810:	movw	r3, #16917	; 0x4215
   14814:	movt	r3, #3
   14818:	ldrb	r3, [r3]
   1481c:	cmp	r3, #0
   14820:	beq	14850 <__assert_fail@plt+0x346c>
   14824:	movw	r3, #16918	; 0x4216
   14828:	movt	r3, #3
   1482c:	ldrb	r3, [r3]
   14830:	cmp	r3, #0
   14834:	beq	14850 <__assert_fail@plt+0x346c>
   14838:	mov	r0, #12
   1483c:	bl	113d8 <putchar_unlocked@plt>
   14840:	movw	r3, #16918	; 0x4216
   14844:	movt	r3, #3
   14848:	mov	r2, #0
   1484c:	strb	r2, [r3]
   14850:	movw	r3, #16976	; 0x4250
   14854:	movt	r3, #3
   14858:	ldrd	r2, [r3]
   1485c:	adds	r4, r2, #1
   14860:	adc	r5, r3, #0
   14864:	movw	r3, #16976	; 0x4250
   14868:	movt	r3, #3
   1486c:	strd	r4, [r3]
   14870:	movw	r3, #16976	; 0x4250
   14874:	movt	r3, #3
   14878:	ldrd	r0, [r3]
   1487c:	movw	r3, #16736	; 0x4160
   14880:	movt	r3, #3
   14884:	ldrd	r2, [r3]
   14888:	cmp	r1, r3
   1488c:	cmpeq	r0, r2
   14890:	bls	1489c <__assert_fail@plt+0x34b8>
   14894:	mov	r3, #0
   14898:	b	148a4 <__assert_fail@plt+0x34c0>
   1489c:	bl	13c80 <__assert_fail@plt+0x289c>
   148a0:	mov	r3, #1
   148a4:	mov	r0, r3
   148a8:	sub	sp, fp, #12
   148ac:	ldrd	r4, [sp]
   148b0:	ldr	fp, [sp, #8]
   148b4:	add	sp, sp, #12
   148b8:	pop	{pc}		; (ldr pc, [sp], #4)
   148bc:	str	fp, [sp, #-8]!
   148c0:	str	lr, [sp, #4]
   148c4:	add	fp, sp, #4
   148c8:	sub	sp, sp, #16
   148cc:	movw	r3, #16924	; 0x421c
   148d0:	movt	r3, #3
   148d4:	ldr	r2, [r3]
   148d8:	movw	r3, #16732	; 0x415c
   148dc:	movt	r3, #3
   148e0:	ldr	r3, [r3]
   148e4:	mov	lr, #0
   148e8:	smull	r2, r3, r2, r3
   148ec:	mov	r0, #0
   148f0:	mov	r1, #0
   148f4:	mov	r0, r3
   148f8:	asr	r1, r3, #31
   148fc:	asr	ip, r2, #31
   14900:	cmp	ip, r0
   14904:	beq	1490c <__assert_fail@plt+0x3528>
   14908:	mov	lr, #1
   1490c:	mov	r3, r2
   14910:	str	r3, [fp, #-8]
   14914:	mov	r3, lr
   14918:	and	r3, r3, #1
   1491c:	uxtb	r3, r3
   14920:	cmp	r3, #0
   14924:	bne	149dc <__assert_fail@plt+0x35f8>
   14928:	ldr	r3, [fp, #-8]
   1492c:	mov	r1, #0
   14930:	mov	r2, #1
   14934:	adds	r3, r3, r2
   14938:	bvc	14940 <__assert_fail@plt+0x355c>
   1493c:	mov	r1, #1
   14940:	str	r3, [fp, #-12]
   14944:	mov	r3, r1
   14948:	and	r3, r3, #1
   1494c:	uxtb	r3, r3
   14950:	cmp	r3, #0
   14954:	bne	149dc <__assert_fail@plt+0x35f8>
   14958:	movw	r3, #16932	; 0x4224
   1495c:	movt	r3, #3
   14960:	ldr	r3, [r3]
   14964:	mov	r1, #0
   14968:	mov	r2, #1
   1496c:	adds	r3, r3, r2
   14970:	bvc	14978 <__assert_fail@plt+0x3594>
   14974:	mov	r1, #1
   14978:	str	r3, [fp, #-16]
   1497c:	mov	r3, r1
   14980:	and	r3, r3, #1
   14984:	uxtb	r3, r3
   14988:	cmp	r3, #0
   1498c:	bne	149dc <__assert_fail@plt+0x35f8>
   14990:	ldr	r2, [fp, #-8]
   14994:	ldr	r3, [fp, #-16]
   14998:	mov	lr, #0
   1499c:	smull	r2, r3, r2, r3
   149a0:	mov	r0, #0
   149a4:	mov	r1, #0
   149a8:	mov	r0, r3
   149ac:	asr	r1, r3, #31
   149b0:	asr	ip, r2, #31
   149b4:	cmp	ip, r0
   149b8:	beq	149c0 <__assert_fail@plt+0x35dc>
   149bc:	mov	lr, #1
   149c0:	mov	r3, r2
   149c4:	str	r3, [fp, #-20]	; 0xffffffec
   149c8:	mov	r3, lr
   149cc:	and	r3, r3, #1
   149d0:	uxtb	r3, r3
   149d4:	cmp	r3, #0
   149d8:	beq	149e0 <__assert_fail@plt+0x35fc>
   149dc:	bl	117a0 <__assert_fail@plt+0x3bc>
   149e0:	movw	r3, #16904	; 0x4208
   149e4:	movt	r3, #3
   149e8:	ldr	r3, [r3]
   149ec:	mov	r0, r3
   149f0:	bl	17278 <__assert_fail@plt+0x5e94>
   149f4:	ldr	r3, [fp, #-12]
   149f8:	mov	r1, #4
   149fc:	mov	r0, r3
   14a00:	bl	1e5f0 <__assert_fail@plt+0xd20c>
   14a04:	mov	r3, r0
   14a08:	mov	r2, r3
   14a0c:	movw	r3, #16904	; 0x4208
   14a10:	movt	r3, #3
   14a14:	str	r2, [r3]
   14a18:	movw	r3, #16908	; 0x420c
   14a1c:	movt	r3, #3
   14a20:	ldr	r3, [r3]
   14a24:	mov	r0, r3
   14a28:	bl	17278 <__assert_fail@plt+0x5e94>
   14a2c:	ldr	r3, [fp, #-8]
   14a30:	mov	r1, #4
   14a34:	mov	r0, r3
   14a38:	bl	1e5f0 <__assert_fail@plt+0xd20c>
   14a3c:	mov	r3, r0
   14a40:	mov	r2, r3
   14a44:	movw	r3, #16908	; 0x420c
   14a48:	movt	r3, #3
   14a4c:	str	r2, [r3]
   14a50:	movw	r3, #16892	; 0x41fc
   14a54:	movt	r3, #3
   14a58:	ldr	r3, [r3]
   14a5c:	mov	r0, r3
   14a60:	bl	17278 <__assert_fail@plt+0x5e94>
   14a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a68:	mov	r2, r3
   14a6c:	movw	r3, #17009	; 0x4271
   14a70:	movt	r3, #3
   14a74:	ldrb	r3, [r3]
   14a78:	add	r3, r3, #1
   14a7c:	mov	r1, r3
   14a80:	mov	r0, r2
   14a84:	bl	1e5f0 <__assert_fail@plt+0xd20c>
   14a88:	mov	r3, r0
   14a8c:	mov	r2, r3
   14a90:	movw	r3, #16892	; 0x41fc
   14a94:	movt	r3, #3
   14a98:	str	r2, [r3]
   14a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14aa0:	mov	r2, r3
   14aa4:	movw	r3, #16900	; 0x4204
   14aa8:	movt	r3, #3
   14aac:	str	r2, [r3]
   14ab0:	movw	r3, #17009	; 0x4271
   14ab4:	movt	r3, #3
   14ab8:	ldrb	r3, [r3]
   14abc:	add	r3, r3, #1
   14ac0:	mov	r2, r3
   14ac4:	movw	r3, #16900	; 0x4204
   14ac8:	movt	r3, #3
   14acc:	ldr	r3, [r3]
   14ad0:	mul	r2, r3, r2
   14ad4:	movw	r3, #16900	; 0x4204
   14ad8:	movt	r3, #3
   14adc:	str	r2, [r3]
   14ae0:	nop	{0}
   14ae4:	sub	sp, fp, #4
   14ae8:	ldr	fp, [sp]
   14aec:	add	sp, sp, #4
   14af0:	pop	{pc}		; (ldr pc, [sp], #4)
   14af4:	str	fp, [sp, #-8]!
   14af8:	str	lr, [sp, #4]
   14afc:	add	fp, sp, #4
   14b00:	sub	sp, sp, #24
   14b04:	mov	r3, #0
   14b08:	str	r3, [fp, #-16]
   14b0c:	movw	r3, #16896	; 0x4200
   14b10:	movt	r3, #3
   14b14:	mov	r2, #0
   14b18:	str	r2, [r3]
   14b1c:	mov	r3, #0
   14b20:	str	r3, [fp, #-20]	; 0xffffffec
   14b24:	movw	r3, #16923	; 0x421b
   14b28:	movt	r3, #3
   14b2c:	ldrb	r3, [r3]
   14b30:	cmp	r3, #0
   14b34:	beq	14b4c <__assert_fail@plt+0x3768>
   14b38:	movw	r3, #16732	; 0x415c
   14b3c:	movt	r3, #3
   14b40:	ldr	r3, [r3]
   14b44:	str	r3, [fp, #-24]	; 0xffffffe8
   14b48:	b	14b60 <__assert_fail@plt+0x377c>
   14b4c:	movw	r3, #16732	; 0x415c
   14b50:	movt	r3, #3
   14b54:	ldr	r3, [r3]
   14b58:	sub	r3, r3, #1
   14b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   14b60:	mov	r3, #1
   14b64:	str	r3, [fp, #-8]
   14b68:	movw	r3, #16888	; 0x41f8
   14b6c:	movt	r3, #3
   14b70:	ldr	r3, [r3]
   14b74:	str	r3, [fp, #-28]	; 0xffffffe4
   14b78:	b	14ba0 <__assert_fail@plt+0x37bc>
   14b7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b80:	mov	r2, #0
   14b84:	str	r2, [r3, #24]
   14b88:	ldr	r3, [fp, #-8]
   14b8c:	add	r3, r3, #1
   14b90:	str	r3, [fp, #-8]
   14b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b98:	add	r3, r3, #40	; 0x28
   14b9c:	str	r3, [fp, #-28]	; 0xffffffe4
   14ba0:	ldr	r2, [fp, #-8]
   14ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ba8:	cmp	r2, r3
   14bac:	ble	14b7c <__assert_fail@plt+0x3798>
   14bb0:	mov	r3, #1
   14bb4:	str	r3, [fp, #-8]
   14bb8:	movw	r3, #16888	; 0x41f8
   14bbc:	movt	r3, #3
   14bc0:	ldr	r3, [r3]
   14bc4:	str	r3, [fp, #-28]	; 0xffffffe4
   14bc8:	b	14d10 <__assert_fail@plt+0x392c>
   14bcc:	ldr	r2, [fp, #-16]
   14bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bd4:	str	r2, [r3, #20]
   14bd8:	movw	r3, #16924	; 0x421c
   14bdc:	movt	r3, #3
   14be0:	ldr	r3, [r3]
   14be4:	str	r3, [fp, #-12]
   14be8:	b	14cd8 <__assert_fail@plt+0x38f4>
   14bec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bf0:	ldr	r3, [r3, #8]
   14bf4:	cmp	r3, #0
   14bf8:	bne	14ccc <__assert_fail@plt+0x38e8>
   14bfc:	movw	r3, #16952	; 0x4238
   14c00:	movt	r3, #3
   14c04:	mov	r2, #0
   14c08:	str	r2, [r3]
   14c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c10:	bl	15d64 <__assert_fail@plt+0x4980>
   14c14:	mov	r3, r0
   14c18:	eor	r3, r3, #1
   14c1c:	uxtb	r3, r3
   14c20:	cmp	r3, #0
   14c24:	beq	14c30 <__assert_fail@plt+0x384c>
   14c28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c2c:	bl	1528c <__assert_fail@plt+0x3ea8>
   14c30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c34:	ldr	r3, [r3, #8]
   14c38:	cmp	r3, #0
   14c3c:	beq	14c58 <__assert_fail@plt+0x3874>
   14c40:	movw	r3, #16896	; 0x4200
   14c44:	movt	r3, #3
   14c48:	ldr	r3, [r3]
   14c4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c50:	cmp	r2, r3
   14c54:	beq	14ccc <__assert_fail@plt+0x38e8>
   14c58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c5c:	ldr	r3, [r3, #24]
   14c60:	add	r2, r3, #1
   14c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c68:	str	r2, [r3, #24]
   14c6c:	movw	r3, #16904	; 0x4208
   14c70:	movt	r3, #3
   14c74:	ldr	r2, [r3]
   14c78:	ldr	r3, [fp, #-16]
   14c7c:	lsl	r3, r3, #2
   14c80:	add	r3, r2, r3
   14c84:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c88:	str	r2, [r3]
   14c8c:	movw	r3, #16908	; 0x420c
   14c90:	movt	r3, #3
   14c94:	ldr	r2, [r3]
   14c98:	ldr	r3, [fp, #-16]
   14c9c:	add	r1, r3, #1
   14ca0:	str	r1, [fp, #-16]
   14ca4:	lsl	r3, r3, #2
   14ca8:	add	r2, r2, r3
   14cac:	movw	r3, #16952	; 0x4238
   14cb0:	movt	r3, #3
   14cb4:	ldr	r3, [r3]
   14cb8:	str	r3, [r2]
   14cbc:	movw	r3, #16896	; 0x4200
   14cc0:	movt	r3, #3
   14cc4:	ldr	r3, [r3]
   14cc8:	str	r3, [fp, #-20]	; 0xffffffec
   14ccc:	ldr	r3, [fp, #-12]
   14cd0:	sub	r3, r3, #1
   14cd4:	str	r3, [fp, #-12]
   14cd8:	ldr	r3, [fp, #-12]
   14cdc:	cmp	r3, #0
   14ce0:	beq	14cf8 <__assert_fail@plt+0x3914>
   14ce4:	movw	r3, #16968	; 0x4248
   14ce8:	movt	r3, #3
   14cec:	ldr	r3, [r3]
   14cf0:	cmp	r3, #0
   14cf4:	bne	14bec <__assert_fail@plt+0x3808>
   14cf8:	ldr	r3, [fp, #-8]
   14cfc:	add	r3, r3, #1
   14d00:	str	r3, [fp, #-8]
   14d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d08:	add	r3, r3, #40	; 0x28
   14d0c:	str	r3, [fp, #-28]	; 0xffffffe4
   14d10:	ldr	r2, [fp, #-8]
   14d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d18:	cmp	r2, r3
   14d1c:	bgt	14d34 <__assert_fail@plt+0x3950>
   14d20:	movw	r3, #16968	; 0x4248
   14d24:	movt	r3, #3
   14d28:	ldr	r3, [r3]
   14d2c:	cmp	r3, #0
   14d30:	bne	14bcc <__assert_fail@plt+0x37e8>
   14d34:	movw	r3, #16904	; 0x4208
   14d38:	movt	r3, #3
   14d3c:	ldr	r2, [r3]
   14d40:	ldr	r3, [fp, #-16]
   14d44:	lsl	r3, r3, #2
   14d48:	add	r3, r2, r3
   14d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d50:	str	r2, [r3]
   14d54:	movw	r3, #16923	; 0x421b
   14d58:	movt	r3, #3
   14d5c:	ldrb	r3, [r3]
   14d60:	cmp	r3, #0
   14d64:	beq	14d74 <__assert_fail@plt+0x3990>
   14d68:	ldr	r3, [fp, #-16]
   14d6c:	mov	r0, r3
   14d70:	bl	14d88 <__assert_fail@plt+0x39a4>
   14d74:	nop	{0}
   14d78:	sub	sp, fp, #4
   14d7c:	ldr	fp, [sp]
   14d80:	add	sp, sp, #4
   14d84:	pop	{pc}		; (ldr pc, [sp], #4)
   14d88:	push	{fp}		; (str fp, [sp, #-4]!)
   14d8c:	add	fp, sp, #0
   14d90:	sub	sp, sp, #28
   14d94:	str	r0, [fp, #-24]	; 0xffffffe8
   14d98:	mov	r3, #0
   14d9c:	str	r3, [fp, #-20]	; 0xffffffec
   14da0:	mov	r3, #1
   14da4:	str	r3, [fp, #-12]
   14da8:	movw	r3, #16888	; 0x41f8
   14dac:	movt	r3, #3
   14db0:	ldr	r3, [r3]
   14db4:	str	r3, [fp, #-8]
   14db8:	b	14e48 <__assert_fail@plt+0x3a64>
   14dbc:	movw	r3, #16732	; 0x415c
   14dc0:	movt	r3, #3
   14dc4:	ldr	r3, [r3]
   14dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dcc:	sdiv	r3, r2, r3
   14dd0:	str	r3, [fp, #-16]
   14dd4:	movw	r3, #16732	; 0x415c
   14dd8:	movt	r3, #3
   14ddc:	ldr	r2, [r3]
   14de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14de4:	sdiv	r1, r3, r2
   14de8:	mul	r2, r2, r1
   14dec:	sub	r3, r3, r2
   14df0:	ldr	r2, [fp, #-12]
   14df4:	cmp	r2, r3
   14df8:	bgt	14e08 <__assert_fail@plt+0x3a24>
   14dfc:	ldr	r3, [fp, #-16]
   14e00:	add	r3, r3, #1
   14e04:	str	r3, [fp, #-16]
   14e08:	ldr	r3, [fp, #-8]
   14e0c:	ldr	r2, [fp, #-16]
   14e10:	str	r2, [r3, #24]
   14e14:	ldr	r3, [fp, #-8]
   14e18:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e1c:	str	r2, [r3, #20]
   14e20:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e24:	ldr	r3, [fp, #-16]
   14e28:	add	r3, r2, r3
   14e2c:	str	r3, [fp, #-20]	; 0xffffffec
   14e30:	ldr	r3, [fp, #-12]
   14e34:	add	r3, r3, #1
   14e38:	str	r3, [fp, #-12]
   14e3c:	ldr	r3, [fp, #-8]
   14e40:	add	r3, r3, #40	; 0x28
   14e44:	str	r3, [fp, #-8]
   14e48:	movw	r3, #16732	; 0x415c
   14e4c:	movt	r3, #3
   14e50:	ldr	r3, [r3]
   14e54:	ldr	r2, [fp, #-12]
   14e58:	cmp	r2, r3
   14e5c:	ble	14dbc <__assert_fail@plt+0x39d8>
   14e60:	nop	{0}
   14e64:	add	sp, fp, #0
   14e68:	pop	{fp}		; (ldr fp, [sp], #4)
   14e6c:	bx	lr
   14e70:	str	fp, [sp, #-8]!
   14e74:	str	lr, [sp, #4]
   14e78:	add	fp, sp, #4
   14e7c:	sub	sp, sp, #8
   14e80:	mov	r3, r0
   14e84:	strb	r3, [fp, #-5]
   14e88:	movw	r3, #16896	; 0x4200
   14e8c:	movt	r3, #3
   14e90:	ldr	r2, [r3]
   14e94:	movw	r3, #16900	; 0x4204
   14e98:	movt	r3, #3
   14e9c:	ldr	r3, [r3]
   14ea0:	cmp	r2, r3
   14ea4:	bcc	14ed4 <__assert_fail@plt+0x3af0>
   14ea8:	movw	r3, #16892	; 0x41fc
   14eac:	movt	r3, #3
   14eb0:	ldr	r3, [r3]
   14eb4:	movw	r1, #16900	; 0x4204
   14eb8:	movt	r1, #3
   14ebc:	mov	r0, r3
   14ec0:	bl	1e670 <__assert_fail@plt+0xd28c>
   14ec4:	mov	r2, r0
   14ec8:	movw	r3, #16892	; 0x41fc
   14ecc:	movt	r3, #3
   14ed0:	str	r2, [r3]
   14ed4:	movw	r3, #16892	; 0x41fc
   14ed8:	movt	r3, #3
   14edc:	ldr	r1, [r3]
   14ee0:	movw	r3, #16896	; 0x4200
   14ee4:	movt	r3, #3
   14ee8:	ldr	r2, [r3]
   14eec:	add	r0, r2, #1
   14ef0:	movw	r3, #16896	; 0x4200
   14ef4:	movt	r3, #3
   14ef8:	str	r0, [r3]
   14efc:	add	r3, r1, r2
   14f00:	ldrb	r2, [fp, #-5]
   14f04:	strb	r2, [r3]
   14f08:	nop	{0}
   14f0c:	sub	sp, fp, #4
   14f10:	ldr	fp, [sp]
   14f14:	add	sp, sp, #4
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)
   14f1c:	str	fp, [sp, #-8]!
   14f20:	str	lr, [sp, #4]
   14f24:	add	fp, sp, #4
   14f28:	sub	sp, sp, #24
   14f2c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f30:	movw	r3, #16996	; 0x4264
   14f34:	movt	r3, #3
   14f38:	ldr	r0, [r3]
   14f3c:	movw	r3, #16760	; 0x4178
   14f40:	movt	r3, #3
   14f44:	ldr	r2, [r3]
   14f48:	movw	r3, #16984	; 0x4258
   14f4c:	movt	r3, #3
   14f50:	ldr	r3, [r3]
   14f54:	movw	r1, #8916	; 0x22d4
   14f58:	movt	r1, #2
   14f5c:	bl	1136c <sprintf@plt>
   14f60:	str	r0, [fp, #-16]
   14f64:	movw	r3, #16984	; 0x4258
   14f68:	movt	r3, #3
   14f6c:	ldr	r3, [r3]
   14f70:	add	r2, r3, #1
   14f74:	movw	r3, #16984	; 0x4258
   14f78:	movt	r3, #3
   14f7c:	str	r2, [r3]
   14f80:	movw	r3, #16996	; 0x4264
   14f84:	movt	r3, #3
   14f88:	ldr	r2, [r3]
   14f8c:	movw	r3, #16760	; 0x4178
   14f90:	movt	r3, #3
   14f94:	ldr	r3, [r3]
   14f98:	ldr	r1, [fp, #-16]
   14f9c:	sub	r3, r1, r3
   14fa0:	add	r3, r2, r3
   14fa4:	str	r3, [fp, #-12]
   14fa8:	movw	r3, #16760	; 0x4178
   14fac:	movt	r3, #3
   14fb0:	ldr	r3, [r3]
   14fb4:	str	r3, [fp, #-8]
   14fb8:	b	14fe8 <__assert_fail@plt+0x3c04>
   14fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fc0:	ldr	r2, [r3, #16]
   14fc4:	ldr	r3, [fp, #-12]
   14fc8:	add	r1, r3, #1
   14fcc:	str	r1, [fp, #-12]
   14fd0:	ldrb	r3, [r3]
   14fd4:	mov	r0, r3
   14fd8:	blx	r2
   14fdc:	ldr	r3, [fp, #-8]
   14fe0:	sub	r3, r3, #1
   14fe4:	str	r3, [fp, #-8]
   14fe8:	ldr	r3, [fp, #-8]
   14fec:	cmp	r3, #0
   14ff0:	bgt	14fbc <__assert_fail@plt+0x3bd8>
   14ff4:	movw	r3, #16732	; 0x415c
   14ff8:	movt	r3, #3
   14ffc:	ldr	r3, [r3]
   15000:	cmp	r3, #1
   15004:	ble	15088 <__assert_fail@plt+0x3ca4>
   15008:	movw	r3, #16744	; 0x4168
   1500c:	movt	r3, #3
   15010:	ldrb	r3, [r3]
   15014:	cmp	r3, #9
   15018:	bne	15068 <__assert_fail@plt+0x3c84>
   1501c:	movw	r3, #16992	; 0x4260
   15020:	movt	r3, #3
   15024:	ldr	r2, [r3]
   15028:	movw	r3, #16760	; 0x4178
   1502c:	movt	r3, #3
   15030:	ldr	r3, [r3]
   15034:	sub	r3, r2, r3
   15038:	str	r3, [fp, #-8]
   1503c:	b	15050 <__assert_fail@plt+0x3c6c>
   15040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15044:	ldr	r3, [r3, #16]
   15048:	mov	r0, #32
   1504c:	blx	r3
   15050:	ldr	r3, [fp, #-8]
   15054:	sub	r2, r3, #1
   15058:	str	r2, [fp, #-8]
   1505c:	cmp	r3, #0
   15060:	bgt	15040 <__assert_fail@plt+0x3c5c>
   15064:	b	15108 <__assert_fail@plt+0x3d24>
   15068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1506c:	ldr	r2, [r3, #16]
   15070:	movw	r3, #16744	; 0x4168
   15074:	movt	r3, #3
   15078:	ldrb	r3, [r3]
   1507c:	mov	r0, r3
   15080:	blx	r2
   15084:	b	15108 <__assert_fail@plt+0x3d24>
   15088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1508c:	ldr	r2, [r3, #16]
   15090:	movw	r3, #16744	; 0x4168
   15094:	movt	r3, #3
   15098:	ldrb	r3, [r3]
   1509c:	mov	r0, r3
   150a0:	blx	r2
   150a4:	movw	r3, #16744	; 0x4168
   150a8:	movt	r3, #3
   150ac:	ldrb	r3, [r3]
   150b0:	cmp	r3, #9
   150b4:	bne	15108 <__assert_fail@plt+0x3d24>
   150b8:	movw	r3, #16728	; 0x4158
   150bc:	movt	r3, #3
   150c0:	ldr	r1, [r3]
   150c4:	movw	r3, #16948	; 0x4234
   150c8:	movt	r3, #3
   150cc:	ldr	r2, [r3]
   150d0:	movw	r3, #16728	; 0x4158
   150d4:	movt	r3, #3
   150d8:	ldr	r3, [r3]
   150dc:	sdiv	r0, r2, r3
   150e0:	mul	r3, r3, r0
   150e4:	sub	r3, r2, r3
   150e8:	sub	r2, r1, r3
   150ec:	movw	r3, #16948	; 0x4234
   150f0:	movt	r3, #3
   150f4:	ldr	r3, [r3]
   150f8:	add	r2, r2, r3
   150fc:	movw	r3, #16948	; 0x4234
   15100:	movt	r3, #3
   15104:	str	r2, [r3]
   15108:	movw	r3, #16928	; 0x4220
   1510c:	movt	r3, #3
   15110:	ldrb	r3, [r3]
   15114:	cmp	r3, #0
   15118:	beq	15160 <__assert_fail@plt+0x3d7c>
   1511c:	movw	r3, #16912	; 0x4210
   15120:	movt	r3, #3
   15124:	ldrb	r3, [r3]
   15128:	eor	r3, r3, #1
   1512c:	uxtb	r3, r3
   15130:	cmp	r3, #0
   15134:	beq	15160 <__assert_fail@plt+0x3d7c>
   15138:	movw	r3, #16952	; 0x4238
   1513c:	movt	r3, #3
   15140:	ldr	r2, [r3]
   15144:	movw	r3, #16992	; 0x4260
   15148:	movt	r3, #3
   1514c:	ldr	r3, [r3]
   15150:	add	r2, r2, r3
   15154:	movw	r3, #16952	; 0x4238
   15158:	movt	r3, #3
   1515c:	str	r2, [r3]
   15160:	nop	{0}
   15164:	sub	sp, fp, #4
   15168:	ldr	fp, [sp]
   1516c:	add	sp, sp, #4
   15170:	pop	{pc}		; (ldr pc, [sp], #4)
   15174:	str	fp, [sp, #-8]!
   15178:	str	lr, [sp, #4]
   1517c:	add	fp, sp, #4
   15180:	sub	sp, sp, #16
   15184:	str	r0, [fp, #-16]
   15188:	movw	r3, #16948	; 0x4234
   1518c:	movt	r3, #3
   15190:	ldr	r3, [r3]
   15194:	str	r3, [fp, #-8]
   15198:	movw	r3, #16937	; 0x4229
   1519c:	movt	r3, #3
   151a0:	ldrb	r3, [r3]
   151a4:	cmp	r3, #0
   151a8:	beq	151d8 <__assert_fail@plt+0x3df4>
   151ac:	movw	r3, #16948	; 0x4234
   151b0:	movt	r3, #3
   151b4:	ldr	r3, [r3]
   151b8:	ldr	r2, [fp, #-16]
   151bc:	sub	r2, r2, r3
   151c0:	movw	r3, #16940	; 0x422c
   151c4:	movt	r3, #3
   151c8:	str	r2, [r3]
   151cc:	b	15204 <__assert_fail@plt+0x3e20>
   151d0:	mov	r0, #32
   151d4:	bl	113d8 <putchar_unlocked@plt>
   151d8:	ldr	r3, [fp, #-8]
   151dc:	add	r3, r3, #1
   151e0:	str	r3, [fp, #-8]
   151e4:	ldr	r2, [fp, #-8]
   151e8:	ldr	r3, [fp, #-16]
   151ec:	cmp	r2, r3
   151f0:	ble	151d0 <__assert_fail@plt+0x3dec>
   151f4:	movw	r3, #16948	; 0x4234
   151f8:	movt	r3, #3
   151fc:	ldr	r2, [fp, #-16]
   15200:	str	r2, [r3]
   15204:	nop	{0}
   15208:	sub	sp, fp, #4
   1520c:	ldr	fp, [sp]
   15210:	add	sp, sp, #4
   15214:	pop	{pc}		; (ldr pc, [sp], #4)
   15218:	str	fp, [sp, #-8]!
   1521c:	str	lr, [sp, #4]
   15220:	add	fp, sp, #4
   15224:	sub	sp, sp, #16
   15228:	str	r0, [fp, #-16]
   1522c:	movw	r3, #16920	; 0x4218
   15230:	movt	r3, #3
   15234:	ldrb	r3, [r3]
   15238:	cmp	r3, #0
   1523c:	beq	1524c <__assert_fail@plt+0x3e68>
   15240:	mov	r0, #12
   15244:	bl	113d8 <putchar_unlocked@plt>
   15248:	b	15278 <__assert_fail@plt+0x3e94>
   1524c:	ldr	r3, [fp, #-16]
   15250:	str	r3, [fp, #-8]
   15254:	b	1526c <__assert_fail@plt+0x3e88>
   15258:	mov	r0, #10
   1525c:	bl	113d8 <putchar_unlocked@plt>
   15260:	ldr	r3, [fp, #-8]
   15264:	sub	r3, r3, #1
   15268:	str	r3, [fp, #-8]
   1526c:	ldr	r3, [fp, #-8]
   15270:	cmp	r3, #0
   15274:	bne	15258 <__assert_fail@plt+0x3e74>
   15278:	nop	{0}
   1527c:	sub	sp, fp, #4
   15280:	ldr	fp, [sp]
   15284:	add	sp, sp, #4
   15288:	pop	{pc}		; (ldr pc, [sp], #4)
   1528c:	str	fp, [sp, #-8]!
   15290:	str	lr, [sp, #4]
   15294:	add	fp, sp, #4
   15298:	sub	sp, sp, #16
   1529c:	str	r0, [fp, #-16]
   152a0:	ldr	r3, [fp, #-16]
   152a4:	ldr	r3, [r3]
   152a8:	str	r3, [fp, #-8]
   152ac:	b	15328 <__assert_fail@plt+0x3f44>
   152b0:	ldr	r3, [fp, #-12]
   152b4:	cmp	r3, #12
   152b8:	bne	15310 <__assert_fail@plt+0x3f2c>
   152bc:	ldr	r0, [fp, #-8]
   152c0:	bl	11168 <getc_unlocked@plt>
   152c4:	str	r0, [fp, #-12]
   152c8:	ldr	r3, [fp, #-12]
   152cc:	cmp	r3, #10
   152d0:	beq	152e0 <__assert_fail@plt+0x3efc>
   152d4:	ldr	r1, [fp, #-8]
   152d8:	ldr	r0, [fp, #-12]
   152dc:	bl	112c4 <ungetc@plt>
   152e0:	movw	r3, #16917	; 0x4215
   152e4:	movt	r3, #3
   152e8:	ldrb	r3, [r3]
   152ec:	cmp	r3, #0
   152f0:	beq	15304 <__assert_fail@plt+0x3f20>
   152f4:	movw	r3, #16918	; 0x4216
   152f8:	movt	r3, #3
   152fc:	mov	r2, #1
   15300:	strb	r2, [r3]
   15304:	ldr	r0, [fp, #-16]
   15308:	bl	13b94 <__assert_fail@plt+0x27b0>
   1530c:	b	15340 <__assert_fail@plt+0x3f5c>
   15310:	ldr	r3, [fp, #-12]
   15314:	cmn	r3, #1
   15318:	bne	15328 <__assert_fail@plt+0x3f44>
   1531c:	ldr	r0, [fp, #-16]
   15320:	bl	139bc <__assert_fail@plt+0x25d8>
   15324:	b	15340 <__assert_fail@plt+0x3f5c>
   15328:	ldr	r0, [fp, #-8]
   1532c:	bl	11168 <getc_unlocked@plt>
   15330:	str	r0, [fp, #-12]
   15334:	ldr	r3, [fp, #-12]
   15338:	cmp	r3, #10
   1533c:	bne	152b0 <__assert_fail@plt+0x3ecc>
   15340:	nop	{0}
   15344:	sub	sp, fp, #4
   15348:	ldr	fp, [sp]
   1534c:	add	sp, sp, #4
   15350:	pop	{pc}		; (ldr pc, [sp], #4)
   15354:	str	fp, [sp, #-8]!
   15358:	str	lr, [sp, #4]
   1535c:	add	fp, sp, #4
   15360:	sub	sp, sp, #32
   15364:	str	r0, [fp, #-32]	; 0xffffffe0
   15368:	str	r1, [fp, #-36]	; 0xffffffdc
   1536c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15370:	ldr	r3, [r3]
   15374:	str	r3, [fp, #-24]	; 0xffffffe8
   15378:	mov	r3, #0
   1537c:	strb	r3, [fp, #-13]
   15380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15384:	bl	11168 <getc_unlocked@plt>
   15388:	str	r0, [fp, #-8]
   1538c:	ldr	r3, [fp, #-8]
   15390:	cmp	r3, #12
   15394:	bne	153cc <__assert_fail@plt+0x3fe8>
   15398:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1539c:	ldrb	r3, [r3, #37]	; 0x25
   153a0:	cmp	r3, #0
   153a4:	beq	153cc <__assert_fail@plt+0x3fe8>
   153a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153ac:	bl	11168 <getc_unlocked@plt>
   153b0:	str	r0, [fp, #-8]
   153b4:	ldr	r3, [fp, #-8]
   153b8:	cmp	r3, #10
   153bc:	bne	153cc <__assert_fail@plt+0x3fe8>
   153c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153c4:	bl	11168 <getc_unlocked@plt>
   153c8:	str	r0, [fp, #-8]
   153cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153d0:	mov	r2, #0
   153d4:	strb	r2, [r3, #37]	; 0x25
   153d8:	ldr	r3, [fp, #-8]
   153dc:	cmp	r3, #12
   153e0:	bne	153ec <__assert_fail@plt+0x4008>
   153e4:	mov	r3, #1
   153e8:	strb	r3, [fp, #-13]
   153ec:	movw	r3, #17056	; 0x42a0
   153f0:	movt	r3, #3
   153f4:	ldrb	r3, [r3]
   153f8:	cmp	r3, #0
   153fc:	beq	15504 <__assert_fail@plt+0x4120>
   15400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15404:	mov	r2, #1
   15408:	strb	r2, [r3, #37]	; 0x25
   1540c:	b	15504 <__assert_fail@plt+0x4120>
   15410:	ldr	r3, [fp, #-8]
   15414:	cmp	r3, #12
   15418:	bne	154e0 <__assert_fail@plt+0x40fc>
   1541c:	movw	r3, #17056	; 0x42a0
   15420:	movt	r3, #3
   15424:	ldrb	r3, [r3]
   15428:	cmp	r3, #0
   1542c:	beq	154b0 <__assert_fail@plt+0x40cc>
   15430:	movw	r3, #16912	; 0x4210
   15434:	movt	r3, #3
   15438:	ldrb	r3, [r3]
   1543c:	eor	r3, r3, #1
   15440:	uxtb	r3, r3
   15444:	cmp	r3, #0
   15448:	beq	154a4 <__assert_fail@plt+0x40c0>
   1544c:	movw	r3, #16888	; 0x41f8
   15450:	movt	r3, #3
   15454:	ldr	r3, [r3]
   15458:	str	r3, [fp, #-20]	; 0xffffffec
   1545c:	movw	r3, #16732	; 0x415c
   15460:	movt	r3, #3
   15464:	ldr	r3, [r3]
   15468:	str	r3, [fp, #-12]
   1546c:	b	15494 <__assert_fail@plt+0x40b0>
   15470:	ldr	r3, [fp, #-20]	; 0xffffffec
   15474:	mov	r2, #0
   15478:	strb	r2, [r3, #37]	; 0x25
   1547c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15480:	add	r3, r3, #40	; 0x28
   15484:	str	r3, [fp, #-20]	; 0xffffffec
   15488:	ldr	r3, [fp, #-12]
   1548c:	sub	r3, r3, #1
   15490:	str	r3, [fp, #-12]
   15494:	ldr	r3, [fp, #-12]
   15498:	cmp	r3, #0
   1549c:	bne	15470 <__assert_fail@plt+0x408c>
   154a0:	b	154b0 <__assert_fail@plt+0x40cc>
   154a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154a8:	mov	r2, #0
   154ac:	strb	r2, [r3, #37]	; 0x25
   154b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b4:	bl	11168 <getc_unlocked@plt>
   154b8:	str	r0, [fp, #-8]
   154bc:	ldr	r3, [fp, #-8]
   154c0:	cmp	r3, #10
   154c4:	beq	154d4 <__assert_fail@plt+0x40f0>
   154c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154cc:	ldr	r0, [fp, #-8]
   154d0:	bl	112c4 <ungetc@plt>
   154d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154d8:	bl	13b94 <__assert_fail@plt+0x27b0>
   154dc:	b	15510 <__assert_fail@plt+0x412c>
   154e0:	ldr	r3, [fp, #-8]
   154e4:	cmn	r3, #1
   154e8:	bne	154f8 <__assert_fail@plt+0x4114>
   154ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154f0:	bl	139bc <__assert_fail@plt+0x25d8>
   154f4:	b	15510 <__assert_fail@plt+0x412c>
   154f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154fc:	bl	11168 <getc_unlocked@plt>
   15500:	str	r0, [fp, #-8]
   15504:	ldr	r3, [fp, #-8]
   15508:	cmp	r3, #10
   1550c:	bne	15410 <__assert_fail@plt+0x402c>
   15510:	movw	r3, #16752	; 0x4170
   15514:	movt	r3, #3
   15518:	ldrb	r3, [r3]
   1551c:	cmp	r3, #0
   15520:	beq	1557c <__assert_fail@plt+0x4198>
   15524:	movw	r3, #16912	; 0x4210
   15528:	movt	r3, #3
   1552c:	ldrb	r3, [r3]
   15530:	eor	r3, r3, #1
   15534:	uxtb	r3, r3
   15538:	cmp	r3, #0
   1553c:	bne	1554c <__assert_fail@plt+0x4168>
   15540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15544:	cmp	r3, #1
   15548:	bne	1557c <__assert_fail@plt+0x4198>
   1554c:	ldrb	r3, [fp, #-13]
   15550:	eor	r3, r3, #1
   15554:	uxtb	r3, r3
   15558:	cmp	r3, #0
   1555c:	beq	1557c <__assert_fail@plt+0x4198>
   15560:	movw	r3, #16748	; 0x416c
   15564:	movt	r3, #3
   15568:	ldr	r3, [r3]
   1556c:	add	r2, r3, #1
   15570:	movw	r3, #16748	; 0x416c
   15574:	movt	r3, #3
   15578:	str	r2, [r3]
   1557c:	nop	{0}
   15580:	sub	sp, fp, #4
   15584:	ldr	fp, [sp]
   15588:	add	sp, sp, #4
   1558c:	pop	{pc}		; (ldr pc, [sp], #4)
   15590:	str	fp, [sp, #-8]!
   15594:	str	lr, [sp, #4]
   15598:	add	fp, sp, #4
   1559c:	sub	sp, sp, #16
   155a0:	movw	r3, #16948	; 0x4234
   155a4:	movt	r3, #3
   155a8:	ldr	r3, [r3]
   155ac:	str	r3, [fp, #-8]
   155b0:	movw	r3, #16940	; 0x422c
   155b4:	movt	r3, #3
   155b8:	ldr	r3, [r3]
   155bc:	ldr	r2, [fp, #-8]
   155c0:	add	r3, r2, r3
   155c4:	str	r3, [fp, #-12]
   155c8:	b	155e8 <__assert_fail@plt+0x4204>
   155cc:	movw	r3, #16724	; 0x4154
   155d0:	movt	r3, #3
   155d4:	ldrb	r3, [r3]
   155d8:	mov	r0, r3
   155dc:	bl	113d8 <putchar_unlocked@plt>
   155e0:	ldr	r3, [fp, #-16]
   155e4:	str	r3, [fp, #-8]
   155e8:	ldr	r2, [fp, #-12]
   155ec:	ldr	r3, [fp, #-8]
   155f0:	sub	r3, r2, r3
   155f4:	cmp	r3, #1
   155f8:	ble	15650 <__assert_fail@plt+0x426c>
   155fc:	movw	r3, #16728	; 0x4158
   15600:	movt	r3, #3
   15604:	ldr	r1, [r3]
   15608:	movw	r3, #16728	; 0x4158
   1560c:	movt	r3, #3
   15610:	ldr	r2, [r3]
   15614:	ldr	r3, [fp, #-8]
   15618:	sdiv	r0, r3, r2
   1561c:	mul	r2, r2, r0
   15620:	sub	r3, r3, r2
   15624:	sub	r3, r1, r3
   15628:	ldr	r2, [fp, #-8]
   1562c:	add	r3, r2, r3
   15630:	str	r3, [fp, #-16]
   15634:	ldr	r2, [fp, #-16]
   15638:	ldr	r3, [fp, #-12]
   1563c:	cmp	r2, r3
   15640:	ble	155cc <__assert_fail@plt+0x41e8>
   15644:	b	15650 <__assert_fail@plt+0x426c>
   15648:	mov	r0, #32
   1564c:	bl	113d8 <putchar_unlocked@plt>
   15650:	ldr	r3, [fp, #-8]
   15654:	add	r3, r3, #1
   15658:	str	r3, [fp, #-8]
   1565c:	ldr	r2, [fp, #-8]
   15660:	ldr	r3, [fp, #-12]
   15664:	cmp	r2, r3
   15668:	ble	15648 <__assert_fail@plt+0x4264>
   1566c:	movw	r3, #16948	; 0x4234
   15670:	movt	r3, #3
   15674:	ldr	r2, [fp, #-12]
   15678:	str	r2, [r3]
   1567c:	movw	r3, #16940	; 0x422c
   15680:	movt	r3, #3
   15684:	mov	r2, #0
   15688:	str	r2, [r3]
   1568c:	nop	{0}
   15690:	sub	sp, fp, #4
   15694:	ldr	fp, [sp]
   15698:	add	sp, sp, #4
   1569c:	pop	{pc}		; (ldr pc, [sp], #4)
   156a0:	str	fp, [sp, #-8]!
   156a4:	str	lr, [sp, #4]
   156a8:	add	fp, sp, #4
   156ac:	sub	sp, sp, #8
   156b0:	movw	r3, #16764	; 0x417c
   156b4:	movt	r3, #3
   156b8:	ldr	r3, [r3]
   156bc:	str	r3, [fp, #-8]
   156c0:	movw	r3, #17012	; 0x4274
   156c4:	movt	r3, #3
   156c8:	ldr	r3, [r3]
   156cc:	str	r3, [fp, #-12]
   156d0:	movw	r3, #17016	; 0x4278
   156d4:	movt	r3, #3
   156d8:	ldr	r3, [r3]
   156dc:	cmp	r3, #0
   156e0:	bgt	157d0 <__assert_fail@plt+0x43ec>
   156e4:	movw	r3, #16940	; 0x422c
   156e8:	movt	r3, #3
   156ec:	ldr	r3, [r3]
   156f0:	cmp	r3, #0
   156f4:	ble	157e4 <__assert_fail@plt+0x4400>
   156f8:	bl	15590 <__assert_fail@plt+0x41ac>
   156fc:	b	157e4 <__assert_fail@plt+0x4400>
   15700:	ldr	r3, [fp, #-8]
   15704:	ldrb	r3, [r3]
   15708:	cmp	r3, #32
   1570c:	bne	1573c <__assert_fail@plt+0x4358>
   15710:	ldr	r3, [fp, #-8]
   15714:	add	r3, r3, #1
   15718:	str	r3, [fp, #-8]
   1571c:	movw	r3, #16940	; 0x422c
   15720:	movt	r3, #3
   15724:	ldr	r3, [r3]
   15728:	add	r2, r3, #1
   1572c:	movw	r3, #16940	; 0x422c
   15730:	movt	r3, #3
   15734:	str	r2, [r3]
   15738:	b	15788 <__assert_fail@plt+0x43a4>
   1573c:	movw	r3, #16940	; 0x422c
   15740:	movt	r3, #3
   15744:	ldr	r3, [r3]
   15748:	cmp	r3, #0
   1574c:	ble	15754 <__assert_fail@plt+0x4370>
   15750:	bl	15590 <__assert_fail@plt+0x41ac>
   15754:	ldr	r3, [fp, #-8]
   15758:	add	r2, r3, #1
   1575c:	str	r2, [fp, #-8]
   15760:	ldrb	r3, [r3]
   15764:	mov	r0, r3
   15768:	bl	113d8 <putchar_unlocked@plt>
   1576c:	movw	r3, #16948	; 0x4234
   15770:	movt	r3, #3
   15774:	ldr	r3, [r3]
   15778:	add	r2, r3, #1
   1577c:	movw	r3, #16948	; 0x4234
   15780:	movt	r3, #3
   15784:	str	r2, [r3]
   15788:	ldr	r3, [fp, #-12]
   1578c:	sub	r2, r3, #1
   15790:	str	r2, [fp, #-12]
   15794:	cmp	r3, #0
   15798:	bgt	15700 <__assert_fail@plt+0x431c>
   1579c:	movw	r3, #16940	; 0x422c
   157a0:	movt	r3, #3
   157a4:	ldr	r3, [r3]
   157a8:	cmp	r3, #0
   157ac:	ble	157b4 <__assert_fail@plt+0x43d0>
   157b0:	bl	15590 <__assert_fail@plt+0x41ac>
   157b4:	movw	r3, #17016	; 0x4278
   157b8:	movt	r3, #3
   157bc:	ldr	r3, [r3]
   157c0:	sub	r2, r3, #1
   157c4:	movw	r3, #17016	; 0x4278
   157c8:	movt	r3, #3
   157cc:	str	r2, [r3]
   157d0:	movw	r3, #17016	; 0x4278
   157d4:	movt	r3, #3
   157d8:	ldr	r3, [r3]
   157dc:	cmp	r3, #0
   157e0:	bgt	15788 <__assert_fail@plt+0x43a4>
   157e4:	nop	{0}
   157e8:	sub	sp, fp, #4
   157ec:	ldr	fp, [sp]
   157f0:	add	sp, sp, #4
   157f4:	pop	{pc}		; (ldr pc, [sp], #4)
   157f8:	str	fp, [sp, #-8]!
   157fc:	str	lr, [sp, #4]
   15800:	add	fp, sp, #4
   15804:	sub	sp, sp, #16
   15808:	str	r0, [fp, #-8]
   1580c:	str	r1, [fp, #-12]
   15810:	str	r2, [fp, #-16]
   15814:	b	15838 <__assert_fail@plt+0x4454>
   15818:	ldr	r3, [fp, #-8]
   1581c:	ldr	r2, [r3, #16]
   15820:	ldr	r3, [fp, #-16]
   15824:	add	r1, r3, #1
   15828:	str	r1, [fp, #-16]
   1582c:	ldrb	r3, [r3]
   15830:	mov	r0, r3
   15834:	blx	r2
   15838:	ldr	r3, [fp, #-12]
   1583c:	sub	r2, r3, #1
   15840:	str	r2, [fp, #-12]
   15844:	cmp	r3, #0
   15848:	bne	15818 <__assert_fail@plt+0x4434>
   1584c:	nop	{0}
   15850:	sub	sp, fp, #4
   15854:	ldr	fp, [sp]
   15858:	add	sp, sp, #4
   1585c:	pop	{pc}		; (ldr pc, [sp], #4)
   15860:	str	r4, [sp, #-12]!
   15864:	str	fp, [sp, #4]
   15868:	str	lr, [sp, #8]
   1586c:	add	fp, sp, #8
   15870:	sub	sp, sp, #12
   15874:	mov	r3, r0
   15878:	strb	r3, [fp, #-13]
   1587c:	movw	r3, #16937	; 0x4229
   15880:	movt	r3, #3
   15884:	ldrb	r3, [r3]
   15888:	cmp	r3, #0
   1588c:	beq	15950 <__assert_fail@plt+0x456c>
   15890:	ldrb	r3, [fp, #-13]
   15894:	cmp	r3, #32
   15898:	bne	158bc <__assert_fail@plt+0x44d8>
   1589c:	movw	r3, #16940	; 0x422c
   158a0:	movt	r3, #3
   158a4:	ldr	r3, [r3]
   158a8:	add	r2, r3, #1
   158ac:	movw	r3, #16940	; 0x422c
   158b0:	movt	r3, #3
   158b4:	str	r2, [r3]
   158b8:	b	1595c <__assert_fail@plt+0x4578>
   158bc:	movw	r3, #16940	; 0x422c
   158c0:	movt	r3, #3
   158c4:	ldr	r3, [r3]
   158c8:	cmp	r3, #0
   158cc:	ble	158d4 <__assert_fail@plt+0x44f0>
   158d0:	bl	15590 <__assert_fail@plt+0x41ac>
   158d4:	bl	11270 <__ctype_b_loc@plt>
   158d8:	mov	r3, r0
   158dc:	ldr	r4, [r3]
   158e0:	ldrb	r3, [fp, #-13]
   158e4:	mov	r0, r3
   158e8:	bl	114e0 <__assert_fail@plt+0xfc>
   158ec:	mov	r3, r0
   158f0:	lsl	r3, r3, #1
   158f4:	add	r3, r4, r3
   158f8:	ldrh	r3, [r3]
   158fc:	and	r3, r3, #16384	; 0x4000
   15900:	cmp	r3, #0
   15904:	bne	15934 <__assert_fail@plt+0x4550>
   15908:	ldrb	r3, [fp, #-13]
   1590c:	cmp	r3, #8
   15910:	bne	15950 <__assert_fail@plt+0x456c>
   15914:	movw	r3, #16948	; 0x4234
   15918:	movt	r3, #3
   1591c:	ldr	r3, [r3]
   15920:	sub	r2, r3, #1
   15924:	movw	r3, #16948	; 0x4234
   15928:	movt	r3, #3
   1592c:	str	r2, [r3]
   15930:	b	15950 <__assert_fail@plt+0x456c>
   15934:	movw	r3, #16948	; 0x4234
   15938:	movt	r3, #3
   1593c:	ldr	r3, [r3]
   15940:	add	r2, r3, #1
   15944:	movw	r3, #16948	; 0x4234
   15948:	movt	r3, #3
   1594c:	str	r2, [r3]
   15950:	ldrb	r3, [fp, #-13]
   15954:	mov	r0, r3
   15958:	bl	113d8 <putchar_unlocked@plt>
   1595c:	sub	sp, fp, #8
   15960:	ldr	r4, [sp]
   15964:	ldr	fp, [sp, #4]
   15968:	add	sp, sp, #8
   1596c:	pop	{pc}		; (ldr pc, [sp], #4)
   15970:	strd	r4, [sp, #-16]!
   15974:	str	fp, [sp, #8]
   15978:	str	lr, [sp, #12]
   1597c:	add	fp, sp, #12
   15980:	sub	sp, sp, #48	; 0x30
   15984:	strd	r0, [fp, #-44]	; 0xffffffd4
   15988:	mov	r2, #1
   1598c:	mov	r3, #0
   15990:	strd	r2, [fp, #-20]	; 0xffffffec
   15994:	b	15b90 <__assert_fail@plt+0x47ac>
   15998:	mov	r3, #1
   1599c:	str	r3, [fp, #-32]	; 0xffffffe0
   159a0:	b	15a18 <__assert_fail@plt+0x4634>
   159a4:	mov	r3, #1
   159a8:	str	r3, [fp, #-28]	; 0xffffffe4
   159ac:	movw	r3, #16888	; 0x41f8
   159b0:	movt	r3, #3
   159b4:	ldr	r3, [r3]
   159b8:	str	r3, [fp, #-24]	; 0xffffffe8
   159bc:	b	159f4 <__assert_fail@plt+0x4610>
   159c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   159c4:	ldr	r3, [r3, #8]
   159c8:	cmp	r3, #0
   159cc:	bne	159dc <__assert_fail@plt+0x45f8>
   159d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d8:	bl	15354 <__assert_fail@plt+0x3f70>
   159dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159e0:	add	r3, r3, #1
   159e4:	str	r3, [fp, #-28]	; 0xffffffe4
   159e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   159ec:	add	r3, r3, #40	; 0x28
   159f0:	str	r3, [fp, #-24]	; 0xffffffe8
   159f4:	movw	r3, #16732	; 0x415c
   159f8:	movt	r3, #3
   159fc:	ldr	r3, [r3]
   15a00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15a04:	cmp	r2, r3
   15a08:	ble	159c0 <__assert_fail@plt+0x45dc>
   15a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15a10:	add	r3, r3, #1
   15a14:	str	r3, [fp, #-32]	; 0xffffffe0
   15a18:	movw	r3, #16924	; 0x421c
   15a1c:	movt	r3, #3
   15a20:	ldr	r3, [r3]
   15a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a28:	cmp	r2, r3
   15a2c:	blt	159a4 <__assert_fail@plt+0x45c0>
   15a30:	movw	r3, #17056	; 0x42a0
   15a34:	movt	r3, #3
   15a38:	mov	r2, #1
   15a3c:	strb	r2, [r3]
   15a40:	mov	r3, #1
   15a44:	str	r3, [fp, #-28]	; 0xffffffe4
   15a48:	movw	r3, #16888	; 0x41f8
   15a4c:	movt	r3, #3
   15a50:	ldr	r3, [r3]
   15a54:	str	r3, [fp, #-24]	; 0xffffffe8
   15a58:	b	15a90 <__assert_fail@plt+0x46ac>
   15a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a60:	ldr	r3, [r3, #8]
   15a64:	cmp	r3, #0
   15a68:	bne	15a78 <__assert_fail@plt+0x4694>
   15a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a74:	bl	15354 <__assert_fail@plt+0x3f70>
   15a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a7c:	add	r3, r3, #1
   15a80:	str	r3, [fp, #-28]	; 0xffffffe4
   15a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a88:	add	r3, r3, #40	; 0x28
   15a8c:	str	r3, [fp, #-24]	; 0xffffffe8
   15a90:	movw	r3, #16732	; 0x415c
   15a94:	movt	r3, #3
   15a98:	ldr	r3, [r3]
   15a9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15aa0:	cmp	r2, r3
   15aa4:	ble	15a5c <__assert_fail@plt+0x4678>
   15aa8:	movw	r3, #16705	; 0x4141
   15aac:	movt	r3, #3
   15ab0:	ldrb	r3, [r3]
   15ab4:	cmp	r3, #0
   15ab8:	beq	15b24 <__assert_fail@plt+0x4740>
   15abc:	mov	r3, #1
   15ac0:	str	r3, [fp, #-28]	; 0xffffffe4
   15ac4:	movw	r3, #16888	; 0x41f8
   15ac8:	movt	r3, #3
   15acc:	ldr	r3, [r3]
   15ad0:	str	r3, [fp, #-24]	; 0xffffffe8
   15ad4:	b	15b0c <__assert_fail@plt+0x4728>
   15ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15adc:	ldr	r3, [r3, #8]
   15ae0:	cmp	r3, #3
   15ae4:	beq	15af4 <__assert_fail@plt+0x4710>
   15ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15aec:	mov	r2, #2
   15af0:	str	r2, [r3, #8]
   15af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15af8:	add	r3, r3, #1
   15afc:	str	r3, [fp, #-28]	; 0xffffffe4
   15b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b04:	add	r3, r3, #40	; 0x28
   15b08:	str	r3, [fp, #-24]	; 0xffffffe8
   15b0c:	movw	r3, #16732	; 0x415c
   15b10:	movt	r3, #3
   15b14:	ldr	r3, [r3]
   15b18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15b1c:	cmp	r2, r3
   15b20:	ble	15ad8 <__assert_fail@plt+0x46f4>
   15b24:	bl	13c80 <__assert_fail@plt+0x289c>
   15b28:	movw	r3, #17056	; 0x42a0
   15b2c:	movt	r3, #3
   15b30:	mov	r2, #0
   15b34:	strb	r2, [r3]
   15b38:	movw	r3, #16968	; 0x4248
   15b3c:	movt	r3, #3
   15b40:	ldr	r3, [r3]
   15b44:	cmp	r3, #0
   15b48:	bgt	15b80 <__assert_fail@plt+0x479c>
   15b4c:	movw	r0, #8920	; 0x22d8
   15b50:	movt	r0, #2
   15b54:	bl	11288 <gettext@plt>
   15b58:	mov	r1, r0
   15b5c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15b60:	strd	r2, [sp, #8]
   15b64:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15b68:	strd	r2, [sp]
   15b6c:	mov	r2, r1
   15b70:	mov	r1, #0
   15b74:	mov	r0, #0
   15b78:	bl	11210 <error@plt>
   15b7c:	b	15ba4 <__assert_fail@plt+0x47c0>
   15b80:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15b84:	adds	r4, r2, #1
   15b88:	adc	r5, r3, #0
   15b8c:	strd	r4, [fp, #-20]	; 0xffffffec
   15b90:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15b94:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15b98:	cmp	r1, r3
   15b9c:	cmpeq	r0, r2
   15ba0:	bcc	15998 <__assert_fail@plt+0x45b4>
   15ba4:	movw	r3, #16968	; 0x4248
   15ba8:	movt	r3, #3
   15bac:	ldr	r3, [r3]
   15bb0:	cmp	r3, #0
   15bb4:	movgt	r3, #1
   15bb8:	movle	r3, #0
   15bbc:	uxtb	r3, r3
   15bc0:	mov	r0, r3
   15bc4:	sub	sp, fp, #12
   15bc8:	ldrd	r4, [sp]
   15bcc:	ldr	fp, [sp, #8]
   15bd0:	add	sp, sp, #12
   15bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   15bd8:	str	r4, [sp, #-12]!
   15bdc:	str	fp, [sp, #4]
   15be0:	str	lr, [sp, #8]
   15be4:	add	fp, sp, #8
   15be8:	sub	sp, sp, #316	; 0x13c
   15bec:	movw	r3, #16948	; 0x4234
   15bf0:	movt	r3, #3
   15bf4:	mov	r2, #0
   15bf8:	str	r2, [r3]
   15bfc:	movw	r3, #16944	; 0x4230
   15c00:	movt	r3, #3
   15c04:	ldr	r3, [r3]
   15c08:	mov	r0, r3
   15c0c:	bl	15174 <__assert_fail@plt+0x3d90>
   15c10:	bl	15590 <__assert_fail@plt+0x41ac>
   15c14:	movw	r3, #16976	; 0x4250
   15c18:	movt	r3, #3
   15c1c:	ldrd	r2, [r3]
   15c20:	orrs	r3, r2, r3
   15c24:	bne	15c48 <__assert_fail@plt+0x4864>
   15c28:	movw	r0, #8972	; 0x230c
   15c2c:	movt	r0, #2
   15c30:	bl	11288 <gettext@plt>
   15c34:	mov	r3, r0
   15c38:	mov	r2, r3
   15c3c:	mov	r1, #0
   15c40:	mov	r0, #1
   15c44:	bl	11210 <error@plt>
   15c48:	movw	r0, #8996	; 0x2324
   15c4c:	movt	r0, #2
   15c50:	bl	11288 <gettext@plt>
   15c54:	mov	r1, r0
   15c58:	movw	r3, #16976	; 0x4250
   15c5c:	movt	r3, #3
   15c60:	ldrd	r2, [r3]
   15c64:	sub	r0, fp, #300	; 0x12c
   15c68:	bl	1136c <sprintf@plt>
   15c6c:	movw	r3, #17048	; 0x4298
   15c70:	movt	r3, #3
   15c74:	ldr	r4, [r3]
   15c78:	sub	r3, fp, #300	; 0x12c
   15c7c:	mov	r1, #0
   15c80:	mov	r0, r3
   15c84:	bl	17650 <__assert_fail@plt+0x626c>
   15c88:	mov	r3, r0
   15c8c:	sub	r3, r4, r3
   15c90:	str	r3, [fp, #-16]
   15c94:	ldr	r3, [fp, #-16]
   15c98:	bic	r3, r3, r3, asr #31
   15c9c:	str	r3, [fp, #-16]
   15ca0:	ldr	r3, [fp, #-16]
   15ca4:	asr	r3, r3, #1
   15ca8:	str	r3, [fp, #-20]	; 0xffffffec
   15cac:	ldr	r2, [fp, #-16]
   15cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb4:	sub	r3, r2, r3
   15cb8:	str	r3, [fp, #-24]	; 0xffffffe8
   15cbc:	movw	r3, #16944	; 0x4230
   15cc0:	movt	r3, #3
   15cc4:	ldr	r1, [r3]
   15cc8:	movw	r3, #17040	; 0x4290
   15ccc:	movt	r3, #3
   15cd0:	ldr	r0, [r3]
   15cd4:	movw	r3, #17044	; 0x4294
   15cd8:	movt	r3, #3
   15cdc:	ldr	r2, [r3]
   15ce0:	sub	r3, fp, #300	; 0x12c
   15ce4:	str	r3, [sp, #20]
   15ce8:	movw	r3, #7404	; 0x1cec
   15cec:	movt	r3, #2
   15cf0:	str	r3, [sp, #16]
   15cf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cf8:	str	r3, [sp, #12]
   15cfc:	str	r2, [sp, #8]
   15d00:	movw	r3, #7404	; 0x1cec
   15d04:	movt	r3, #2
   15d08:	str	r3, [sp, #4]
   15d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d10:	str	r3, [sp]
   15d14:	mov	r3, r0
   15d18:	movw	r2, #7224	; 0x1c38
   15d1c:	movt	r2, #2
   15d20:	movw	r0, #9008	; 0x2330
   15d24:	movt	r0, #2
   15d28:	bl	110d8 <printf@plt>
   15d2c:	movw	r3, #16919	; 0x4217
   15d30:	movt	r3, #3
   15d34:	mov	r2, #0
   15d38:	strb	r2, [r3]
   15d3c:	movw	r3, #16948	; 0x4234
   15d40:	movt	r3, #3
   15d44:	mov	r2, #0
   15d48:	str	r2, [r3]
   15d4c:	nop	{0}
   15d50:	sub	sp, fp, #8
   15d54:	ldr	r4, [sp]
   15d58:	ldr	fp, [sp, #4]
   15d5c:	add	sp, sp, #8
   15d60:	pop	{pc}		; (ldr pc, [sp], #4)
   15d64:	str	fp, [sp, #-8]!
   15d68:	str	lr, [sp, #4]
   15d6c:	add	fp, sp, #4
   15d70:	sub	sp, sp, #32
   15d74:	str	r0, [fp, #-32]	; 0xffffffe0
   15d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d7c:	ldr	r3, [r3]
   15d80:	mov	r0, r3
   15d84:	bl	11168 <getc_unlocked@plt>
   15d88:	str	r0, [fp, #-8]
   15d8c:	movw	r3, #16952	; 0x4238
   15d90:	movt	r3, #3
   15d94:	ldr	r3, [r3]
   15d98:	str	r3, [fp, #-24]	; 0xffffffe8
   15d9c:	ldr	r3, [fp, #-8]
   15da0:	cmp	r3, #12
   15da4:	bne	15dec <__assert_fail@plt+0x4a08>
   15da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15dac:	ldrb	r3, [r3, #37]	; 0x25
   15db0:	cmp	r3, #0
   15db4:	beq	15dec <__assert_fail@plt+0x4a08>
   15db8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15dbc:	ldr	r3, [r3]
   15dc0:	mov	r0, r3
   15dc4:	bl	11168 <getc_unlocked@plt>
   15dc8:	str	r0, [fp, #-8]
   15dcc:	ldr	r3, [fp, #-8]
   15dd0:	cmp	r3, #10
   15dd4:	bne	15dec <__assert_fail@plt+0x4a08>
   15dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ddc:	ldr	r3, [r3]
   15de0:	mov	r0, r3
   15de4:	bl	11168 <getc_unlocked@plt>
   15de8:	str	r0, [fp, #-8]
   15dec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15df0:	mov	r2, #0
   15df4:	strb	r2, [r3, #37]	; 0x25
   15df8:	ldr	r3, [fp, #-8]
   15dfc:	cmp	r3, #10
   15e00:	beq	15f08 <__assert_fail@plt+0x4b24>
   15e04:	ldr	r3, [fp, #-8]
   15e08:	cmp	r3, #12
   15e0c:	beq	15e20 <__assert_fail@plt+0x4a3c>
   15e10:	ldr	r3, [fp, #-8]
   15e14:	cmn	r3, #1
   15e18:	beq	15ee0 <__assert_fail@plt+0x4afc>
   15e1c:	b	15ef0 <__assert_fail@plt+0x4b0c>
   15e20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e24:	ldr	r3, [r3]
   15e28:	mov	r0, r3
   15e2c:	bl	11168 <getc_unlocked@plt>
   15e30:	str	r0, [fp, #-8]
   15e34:	ldr	r3, [fp, #-8]
   15e38:	cmp	r3, #10
   15e3c:	beq	15e54 <__assert_fail@plt+0x4a70>
   15e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e44:	ldr	r3, [r3]
   15e48:	mov	r1, r3
   15e4c:	ldr	r0, [fp, #-8]
   15e50:	bl	112c4 <ungetc@plt>
   15e54:	movw	r3, #16915	; 0x4213
   15e58:	movt	r3, #3
   15e5c:	mov	r2, #1
   15e60:	strb	r2, [r3]
   15e64:	movw	r3, #16919	; 0x4217
   15e68:	movt	r3, #3
   15e6c:	ldrb	r3, [r3]
   15e70:	cmp	r3, #0
   15e74:	beq	15eac <__assert_fail@plt+0x4ac8>
   15e78:	movw	r3, #16705	; 0x4141
   15e7c:	movt	r3, #3
   15e80:	ldrb	r3, [r3]
   15e84:	eor	r3, r3, #1
   15e88:	uxtb	r3, r3
   15e8c:	cmp	r3, #0
   15e90:	beq	15eac <__assert_fail@plt+0x4ac8>
   15e94:	movw	r3, #17024	; 0x4280
   15e98:	movt	r3, #3
   15e9c:	mov	r2, #1
   15ea0:	strb	r2, [r3]
   15ea4:	bl	15bd8 <__assert_fail@plt+0x47f4>
   15ea8:	b	15ed0 <__assert_fail@plt+0x4aec>
   15eac:	movw	r3, #16917	; 0x4215
   15eb0:	movt	r3, #3
   15eb4:	ldrb	r3, [r3]
   15eb8:	cmp	r3, #0
   15ebc:	beq	15ed0 <__assert_fail@plt+0x4aec>
   15ec0:	movw	r3, #16918	; 0x4216
   15ec4:	movt	r3, #3
   15ec8:	mov	r2, #1
   15ecc:	strb	r2, [r3]
   15ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ed4:	bl	13b94 <__assert_fail@plt+0x27b0>
   15ed8:	mov	r3, #1
   15edc:	b	162d8 <__assert_fail@plt+0x4ef4>
   15ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ee4:	bl	139bc <__assert_fail@plt+0x25d8>
   15ee8:	mov	r3, #1
   15eec:	b	162d8 <__assert_fail@plt+0x4ef4>
   15ef0:	ldr	r3, [fp, #-8]
   15ef4:	uxtb	r3, r3
   15ef8:	mov	r0, r3
   15efc:	bl	165a4 <__assert_fail@plt+0x51c0>
   15f00:	str	r0, [fp, #-12]
   15f04:	b	15f0c <__assert_fail@plt+0x4b28>
   15f08:	nop	{0}
   15f0c:	movw	r3, #16928	; 0x4220
   15f10:	movt	r3, #3
   15f14:	ldrb	r3, [r3]
   15f18:	cmp	r3, #0
   15f1c:	beq	15f58 <__assert_fail@plt+0x4b74>
   15f20:	movw	r3, #16952	; 0x4238
   15f24:	movt	r3, #3
   15f28:	ldr	r2, [r3]
   15f2c:	movw	r3, #16932	; 0x4224
   15f30:	movt	r3, #3
   15f34:	ldr	r3, [r3]
   15f38:	cmp	r2, r3
   15f3c:	ble	15f58 <__assert_fail@plt+0x4b74>
   15f40:	movw	r3, #16952	; 0x4238
   15f44:	movt	r3, #3
   15f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f4c:	str	r2, [r3]
   15f50:	mov	r3, #0
   15f54:	b	162d8 <__assert_fail@plt+0x4ef4>
   15f58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f5c:	ldr	r2, [r3, #16]
   15f60:	movw	r3, #20080	; 0x4e70
   15f64:	movt	r3, #1
   15f68:	cmp	r2, r3
   15f6c:	beq	16134 <__assert_fail@plt+0x4d50>
   15f70:	movw	r3, #17024	; 0x4280
   15f74:	movt	r3, #3
   15f78:	mov	r2, #1
   15f7c:	strb	r2, [r3]
   15f80:	movw	r3, #16919	; 0x4217
   15f84:	movt	r3, #3
   15f88:	ldrb	r3, [r3]
   15f8c:	cmp	r3, #0
   15f90:	beq	15fb4 <__assert_fail@plt+0x4bd0>
   15f94:	movw	r3, #16705	; 0x4141
   15f98:	movt	r3, #3
   15f9c:	ldrb	r3, [r3]
   15fa0:	eor	r3, r3, #1
   15fa4:	uxtb	r3, r3
   15fa8:	cmp	r3, #0
   15fac:	beq	15fb4 <__assert_fail@plt+0x4bd0>
   15fb0:	bl	15bd8 <__assert_fail@plt+0x47f4>
   15fb4:	movw	r3, #16912	; 0x4210
   15fb8:	movt	r3, #3
   15fbc:	ldrb	r3, [r3]
   15fc0:	cmp	r3, #0
   15fc4:	beq	160c8 <__assert_fail@plt+0x4ce4>
   15fc8:	movw	r3, #16913	; 0x4211
   15fcc:	movt	r3, #3
   15fd0:	ldrb	r3, [r3]
   15fd4:	cmp	r3, #0
   15fd8:	beq	160c8 <__assert_fail@plt+0x4ce4>
   15fdc:	movw	r3, #17016	; 0x4278
   15fe0:	movt	r3, #3
   15fe4:	ldr	r3, [r3]
   15fe8:	str	r3, [fp, #-28]	; 0xffffffe4
   15fec:	movw	r3, #17016	; 0x4278
   15ff0:	movt	r3, #3
   15ff4:	mov	r2, #0
   15ff8:	str	r2, [r3]
   15ffc:	mov	r3, #1
   16000:	str	r3, [fp, #-16]
   16004:	movw	r3, #16888	; 0x41f8
   16008:	movt	r3, #3
   1600c:	ldr	r3, [r3]
   16010:	str	r3, [fp, #-20]	; 0xffffffec
   16014:	b	16054 <__assert_fail@plt+0x4c70>
   16018:	ldr	r0, [fp, #-20]	; 0xffffffec
   1601c:	bl	142ac <__assert_fail@plt+0x2ec8>
   16020:	movw	r3, #17016	; 0x4278
   16024:	movt	r3, #3
   16028:	ldr	r3, [r3]
   1602c:	add	r2, r3, #1
   16030:	movw	r3, #17016	; 0x4278
   16034:	movt	r3, #3
   16038:	str	r2, [r3]
   1603c:	ldr	r3, [fp, #-16]
   16040:	add	r3, r3, #1
   16044:	str	r3, [fp, #-16]
   16048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1604c:	add	r3, r3, #40	; 0x28
   16050:	str	r3, [fp, #-20]	; 0xffffffec
   16054:	ldr	r2, [fp, #-16]
   16058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1605c:	cmp	r2, r3
   16060:	ble	16018 <__assert_fail@plt+0x4c34>
   16064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16068:	ldr	r2, [r3, #32]
   1606c:	movw	r3, #17020	; 0x427c
   16070:	movt	r3, #3
   16074:	str	r2, [r3]
   16078:	movw	r3, #16928	; 0x4220
   1607c:	movt	r3, #3
   16080:	ldrb	r3, [r3]
   16084:	cmp	r3, #0
   16088:	beq	160a8 <__assert_fail@plt+0x4cc4>
   1608c:	movw	r3, #16932	; 0x4224
   16090:	movt	r3, #3
   16094:	ldr	r2, [r3]
   16098:	movw	r3, #16940	; 0x422c
   1609c:	movt	r3, #3
   160a0:	str	r2, [r3]
   160a4:	b	160b8 <__assert_fail@plt+0x4cd4>
   160a8:	movw	r3, #16940	; 0x422c
   160ac:	movt	r3, #3
   160b0:	mov	r2, #0
   160b4:	str	r2, [r3]
   160b8:	movw	r3, #16913	; 0x4211
   160bc:	movt	r3, #3
   160c0:	mov	r2, #0
   160c4:	strb	r2, [r3]
   160c8:	movw	r3, #17012	; 0x4274
   160cc:	movt	r3, #3
   160d0:	ldr	r2, [r3]
   160d4:	movw	r3, #17020	; 0x427c
   160d8:	movt	r3, #3
   160dc:	ldr	r3, [r3]
   160e0:	cmp	r2, r3
   160e4:	bge	1611c <__assert_fail@plt+0x4d38>
   160e8:	movw	r3, #17020	; 0x427c
   160ec:	movt	r3, #3
   160f0:	ldr	r2, [r3]
   160f4:	movw	r3, #17012	; 0x4274
   160f8:	movt	r3, #3
   160fc:	ldr	r3, [r3]
   16100:	sub	r3, r2, r3
   16104:	mov	r0, r3
   16108:	bl	15174 <__assert_fail@plt+0x3d90>
   1610c:	movw	r3, #17020	; 0x427c
   16110:	movt	r3, #3
   16114:	mov	r2, #0
   16118:	str	r2, [r3]
   1611c:	movw	r3, #17009	; 0x4271
   16120:	movt	r3, #3
   16124:	ldrb	r3, [r3]
   16128:	cmp	r3, #0
   1612c:	beq	16134 <__assert_fail@plt+0x4d50>
   16130:	bl	156a0 <__assert_fail@plt+0x42bc>
   16134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16138:	ldrb	r3, [r3, #36]	; 0x24
   1613c:	cmp	r3, #0
   16140:	beq	1614c <__assert_fail@plt+0x4d68>
   16144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16148:	bl	14f1c <__assert_fail@plt+0x3b38>
   1614c:	movw	r3, #16914	; 0x4212
   16150:	movt	r3, #3
   16154:	mov	r2, #0
   16158:	strb	r2, [r3]
   1615c:	ldr	r3, [fp, #-8]
   16160:	cmp	r3, #10
   16164:	bne	16170 <__assert_fail@plt+0x4d8c>
   16168:	mov	r3, #1
   1616c:	b	162d8 <__assert_fail@plt+0x4ef4>
   16170:	movw	r3, #17052	; 0x429c
   16174:	movt	r3, #3
   16178:	ldr	r3, [r3]
   1617c:	mov	r2, r3
   16180:	ldr	r1, [fp, #-12]
   16184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16188:	bl	157f8 <__assert_fail@plt+0x4414>
   1618c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16190:	ldr	r3, [r3]
   16194:	mov	r0, r3
   16198:	bl	11168 <getc_unlocked@plt>
   1619c:	str	r0, [fp, #-8]
   161a0:	ldr	r3, [fp, #-8]
   161a4:	cmp	r3, #10
   161a8:	beq	161c8 <__assert_fail@plt+0x4de4>
   161ac:	ldr	r3, [fp, #-8]
   161b0:	cmp	r3, #12
   161b4:	beq	161d0 <__assert_fail@plt+0x4dec>
   161b8:	ldr	r3, [fp, #-8]
   161bc:	cmn	r3, #1
   161c0:	beq	16238 <__assert_fail@plt+0x4e54>
   161c4:	b	16248 <__assert_fail@plt+0x4e64>
   161c8:	mov	r3, #1
   161cc:	b	162d8 <__assert_fail@plt+0x4ef4>
   161d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   161d4:	ldr	r3, [r3]
   161d8:	mov	r0, r3
   161dc:	bl	11168 <getc_unlocked@plt>
   161e0:	str	r0, [fp, #-8]
   161e4:	ldr	r3, [fp, #-8]
   161e8:	cmp	r3, #10
   161ec:	beq	16204 <__assert_fail@plt+0x4e20>
   161f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   161f4:	ldr	r3, [r3]
   161f8:	mov	r1, r3
   161fc:	ldr	r0, [fp, #-8]
   16200:	bl	112c4 <ungetc@plt>
   16204:	movw	r3, #16917	; 0x4215
   16208:	movt	r3, #3
   1620c:	ldrb	r3, [r3]
   16210:	cmp	r3, #0
   16214:	beq	16228 <__assert_fail@plt+0x4e44>
   16218:	movw	r3, #16918	; 0x4216
   1621c:	movt	r3, #3
   16220:	mov	r2, #1
   16224:	strb	r2, [r3]
   16228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1622c:	bl	13b94 <__assert_fail@plt+0x27b0>
   16230:	mov	r3, #1
   16234:	b	162d8 <__assert_fail@plt+0x4ef4>
   16238:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1623c:	bl	139bc <__assert_fail@plt+0x25d8>
   16240:	mov	r3, #1
   16244:	b	162d8 <__assert_fail@plt+0x4ef4>
   16248:	movw	r3, #16952	; 0x4238
   1624c:	movt	r3, #3
   16250:	ldr	r3, [r3]
   16254:	str	r3, [fp, #-24]	; 0xffffffe8
   16258:	ldr	r3, [fp, #-8]
   1625c:	uxtb	r3, r3
   16260:	mov	r0, r3
   16264:	bl	165a4 <__assert_fail@plt+0x51c0>
   16268:	str	r0, [fp, #-12]
   1626c:	movw	r3, #16928	; 0x4220
   16270:	movt	r3, #3
   16274:	ldrb	r3, [r3]
   16278:	cmp	r3, #0
   1627c:	beq	162b8 <__assert_fail@plt+0x4ed4>
   16280:	movw	r3, #16952	; 0x4238
   16284:	movt	r3, #3
   16288:	ldr	r2, [r3]
   1628c:	movw	r3, #16932	; 0x4224
   16290:	movt	r3, #3
   16294:	ldr	r3, [r3]
   16298:	cmp	r2, r3
   1629c:	ble	162b8 <__assert_fail@plt+0x4ed4>
   162a0:	movw	r3, #16952	; 0x4238
   162a4:	movt	r3, #3
   162a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162ac:	str	r2, [r3]
   162b0:	mov	r3, #0
   162b4:	b	162d8 <__assert_fail@plt+0x4ef4>
   162b8:	movw	r3, #17052	; 0x429c
   162bc:	movt	r3, #3
   162c0:	ldr	r3, [r3]
   162c4:	mov	r2, r3
   162c8:	ldr	r1, [fp, #-12]
   162cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162d0:	bl	157f8 <__assert_fail@plt+0x4414>
   162d4:	b	1618c <__assert_fail@plt+0x4da8>
   162d8:	mov	r0, r3
   162dc:	sub	sp, fp, #4
   162e0:	ldr	fp, [sp]
   162e4:	add	sp, sp, #4
   162e8:	pop	{pc}		; (ldr pc, [sp], #4)
   162ec:	str	fp, [sp, #-8]!
   162f0:	str	lr, [sp, #4]
   162f4:	add	fp, sp, #4
   162f8:	sub	sp, sp, #32
   162fc:	str	r0, [fp, #-32]	; 0xffffffe0
   16300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16304:	ldr	r3, [r3, #20]
   16308:	add	r1, r3, #1
   1630c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16310:	str	r1, [r2, #20]
   16314:	str	r3, [fp, #-20]	; 0xffffffec
   16318:	movw	r3, #16892	; 0x41fc
   1631c:	movt	r3, #3
   16320:	ldr	r2, [r3]
   16324:	movw	r3, #16904	; 0x4208
   16328:	movt	r3, #3
   1632c:	ldr	r1, [r3]
   16330:	ldr	r3, [fp, #-20]	; 0xffffffec
   16334:	lsl	r3, r3, #2
   16338:	add	r3, r1, r3
   1633c:	ldr	r3, [r3]
   16340:	add	r3, r2, r3
   16344:	str	r3, [fp, #-12]
   16348:	movw	r3, #16892	; 0x41fc
   1634c:	movt	r3, #3
   16350:	ldr	r2, [r3]
   16354:	movw	r3, #16904	; 0x4208
   16358:	movt	r3, #3
   1635c:	ldr	r1, [r3]
   16360:	ldr	r3, [fp, #-20]	; 0xffffffec
   16364:	add	r3, r3, #1
   16368:	lsl	r3, r3, #2
   1636c:	add	r3, r1, r3
   16370:	ldr	r3, [r3]
   16374:	add	r3, r2, r3
   16378:	str	r3, [fp, #-24]	; 0xffffffe8
   1637c:	movw	r3, #17024	; 0x4280
   16380:	movt	r3, #3
   16384:	mov	r2, #1
   16388:	strb	r2, [r3]
   1638c:	movw	r3, #16919	; 0x4217
   16390:	movt	r3, #3
   16394:	ldrb	r3, [r3]
   16398:	cmp	r3, #0
   1639c:	beq	163a4 <__assert_fail@plt+0x4fc0>
   163a0:	bl	15bd8 <__assert_fail@plt+0x47f4>
   163a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   163a8:	ldr	r3, [r3, #8]
   163ac:	cmp	r3, #1
   163b0:	bne	16458 <__assert_fail@plt+0x5074>
   163b4:	mov	r3, #1
   163b8:	str	r3, [fp, #-16]
   163bc:	movw	r3, #16888	; 0x41f8
   163c0:	movt	r3, #3
   163c4:	ldr	r3, [r3]
   163c8:	str	r3, [fp, #-8]
   163cc:	b	163f4 <__assert_fail@plt+0x5010>
   163d0:	ldr	r3, [fp, #-8]
   163d4:	mov	r2, #2
   163d8:	str	r2, [r3, #8]
   163dc:	ldr	r3, [fp, #-16]
   163e0:	add	r3, r3, #1
   163e4:	str	r3, [fp, #-16]
   163e8:	ldr	r3, [fp, #-8]
   163ec:	add	r3, r3, #40	; 0x28
   163f0:	str	r3, [fp, #-8]
   163f4:	movw	r3, #16732	; 0x415c
   163f8:	movt	r3, #3
   163fc:	ldr	r3, [r3]
   16400:	ldr	r2, [fp, #-16]
   16404:	cmp	r2, r3
   16408:	ble	163d0 <__assert_fail@plt+0x4fec>
   1640c:	movw	r3, #16888	; 0x41f8
   16410:	movt	r3, #3
   16414:	ldr	r3, [r3]
   16418:	ldr	r3, [r3, #28]
   1641c:	cmp	r3, #0
   16420:	bgt	16458 <__assert_fail@plt+0x5074>
   16424:	movw	r3, #16704	; 0x4140
   16428:	movt	r3, #3
   1642c:	ldrb	r3, [r3]
   16430:	eor	r3, r3, #1
   16434:	uxtb	r3, r3
   16438:	cmp	r3, #0
   1643c:	beq	16450 <__assert_fail@plt+0x506c>
   16440:	movw	r3, #17024	; 0x4280
   16444:	movt	r3, #3
   16448:	mov	r2, #0
   1644c:	strb	r2, [r3]
   16450:	mov	r3, #1
   16454:	b	16590 <__assert_fail@plt+0x51ac>
   16458:	movw	r3, #17012	; 0x4274
   1645c:	movt	r3, #3
   16460:	ldr	r2, [r3]
   16464:	movw	r3, #17020	; 0x427c
   16468:	movt	r3, #3
   1646c:	ldr	r3, [r3]
   16470:	cmp	r2, r3
   16474:	bge	164ac <__assert_fail@plt+0x50c8>
   16478:	movw	r3, #17020	; 0x427c
   1647c:	movt	r3, #3
   16480:	ldr	r2, [r3]
   16484:	movw	r3, #17012	; 0x4274
   16488:	movt	r3, #3
   1648c:	ldr	r3, [r3]
   16490:	sub	r3, r2, r3
   16494:	mov	r0, r3
   16498:	bl	15174 <__assert_fail@plt+0x3d90>
   1649c:	movw	r3, #17020	; 0x427c
   164a0:	movt	r3, #3
   164a4:	mov	r2, #0
   164a8:	str	r2, [r3]
   164ac:	movw	r3, #17009	; 0x4271
   164b0:	movt	r3, #3
   164b4:	ldrb	r3, [r3]
   164b8:	cmp	r3, #0
   164bc:	beq	164e0 <__assert_fail@plt+0x50fc>
   164c0:	bl	156a0 <__assert_fail@plt+0x42bc>
   164c4:	b	164e0 <__assert_fail@plt+0x50fc>
   164c8:	ldr	r3, [fp, #-12]
   164cc:	add	r2, r3, #1
   164d0:	str	r2, [fp, #-12]
   164d4:	ldrb	r3, [r3]
   164d8:	mov	r0, r3
   164dc:	bl	15860 <__assert_fail@plt+0x447c>
   164e0:	ldr	r2, [fp, #-12]
   164e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164e8:	cmp	r2, r3
   164ec:	bne	164c8 <__assert_fail@plt+0x50e4>
   164f0:	movw	r3, #16940	; 0x422c
   164f4:	movt	r3, #3
   164f8:	ldr	r3, [r3]
   164fc:	cmp	r3, #0
   16500:	bne	1658c <__assert_fail@plt+0x51a8>
   16504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16508:	ldr	r2, [r3, #32]
   1650c:	movw	r3, #16908	; 0x420c
   16510:	movt	r3, #3
   16514:	ldr	r1, [r3]
   16518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1651c:	lsl	r3, r3, #2
   16520:	add	r3, r1, r3
   16524:	ldr	r3, [r3]
   16528:	add	r2, r2, r3
   1652c:	movw	r3, #16948	; 0x4234
   16530:	movt	r3, #3
   16534:	str	r2, [r3]
   16538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1653c:	ldr	r2, [r3, #32]
   16540:	movw	r3, #17012	; 0x4274
   16544:	movt	r3, #3
   16548:	ldr	r3, [r3]
   1654c:	sub	r2, r2, r3
   16550:	movw	r3, #16944	; 0x4230
   16554:	movt	r3, #3
   16558:	ldr	r3, [r3]
   1655c:	cmp	r2, r3
   16560:	bne	1658c <__assert_fail@plt+0x51a8>
   16564:	movw	r3, #16948	; 0x4234
   16568:	movt	r3, #3
   1656c:	ldr	r2, [r3]
   16570:	movw	r3, #17012	; 0x4274
   16574:	movt	r3, #3
   16578:	ldr	r3, [r3]
   1657c:	sub	r2, r2, r3
   16580:	movw	r3, #16948	; 0x4234
   16584:	movt	r3, #3
   16588:	str	r2, [r3]
   1658c:	mov	r3, #1
   16590:	mov	r0, r3
   16594:	sub	sp, fp, #4
   16598:	ldr	fp, [sp]
   1659c:	add	sp, sp, #4
   165a0:	pop	{pc}		; (ldr pc, [sp], #4)
   165a4:	str	fp, [sp, #-8]!
   165a8:	str	lr, [sp, #4]
   165ac:	add	fp, sp, #4
   165b0:	sub	sp, sp, #40	; 0x28
   165b4:	mov	r3, r0
   165b8:	strb	r3, [fp, #-37]	; 0xffffffdb
   165bc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   165c0:	strb	r3, [fp, #-25]	; 0xffffffe7
   165c4:	movw	r3, #17052	; 0x429c
   165c8:	movt	r3, #3
   165cc:	ldr	r3, [r3]
   165d0:	str	r3, [fp, #-8]
   165d4:	mov	r3, #8
   165d8:	str	r3, [fp, #-24]	; 0xffffffe8
   165dc:	movw	r3, #16716	; 0x414c
   165e0:	movt	r3, #3
   165e4:	ldrb	r3, [r3]
   165e8:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   165ec:	cmp	r2, r3
   165f0:	bne	16604 <__assert_fail@plt+0x5220>
   165f4:	movw	r3, #16720	; 0x4150
   165f8:	movt	r3, #3
   165fc:	ldr	r3, [r3]
   16600:	str	r3, [fp, #-24]	; 0xffffffe8
   16604:	movw	r3, #16716	; 0x414c
   16608:	movt	r3, #3
   1660c:	ldrb	r3, [r3]
   16610:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   16614:	cmp	r2, r3
   16618:	beq	16628 <__assert_fail@plt+0x5244>
   1661c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16620:	cmp	r3, #9
   16624:	bne	166c4 <__assert_fail@plt+0x52e0>
   16628:	movw	r3, #16952	; 0x4238
   1662c:	movt	r3, #3
   16630:	ldr	r3, [r3]
   16634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16638:	sdiv	r2, r3, r2
   1663c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16640:	mul	r2, r1, r2
   16644:	sub	r3, r3, r2
   16648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1664c:	sub	r3, r2, r3
   16650:	str	r3, [fp, #-16]
   16654:	movw	r3, #16936	; 0x4228
   16658:	movt	r3, #3
   1665c:	ldrb	r3, [r3]
   16660:	cmp	r3, #0
   16664:	beq	166ac <__assert_fail@plt+0x52c8>
   16668:	ldr	r3, [fp, #-16]
   1666c:	str	r3, [fp, #-12]
   16670:	b	16694 <__assert_fail@plt+0x52b0>
   16674:	ldr	r3, [fp, #-8]
   16678:	add	r2, r3, #1
   1667c:	str	r2, [fp, #-8]
   16680:	mov	r2, #32
   16684:	strb	r2, [r3]
   16688:	ldr	r3, [fp, #-12]
   1668c:	sub	r3, r3, #1
   16690:	str	r3, [fp, #-12]
   16694:	ldr	r3, [fp, #-12]
   16698:	cmp	r3, #0
   1669c:	bne	16674 <__assert_fail@plt+0x5290>
   166a0:	ldr	r3, [fp, #-16]
   166a4:	str	r3, [fp, #-20]	; 0xffffffec
   166a8:	b	168cc <__assert_fail@plt+0x54e8>
   166ac:	ldr	r3, [fp, #-8]
   166b0:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   166b4:	strb	r2, [r3]
   166b8:	mov	r3, #1
   166bc:	str	r3, [fp, #-20]	; 0xffffffec
   166c0:	b	168cc <__assert_fail@plt+0x54e8>
   166c4:	bl	11270 <__ctype_b_loc@plt>
   166c8:	mov	r3, r0
   166cc:	ldr	r2, [r3]
   166d0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   166d4:	lsl	r3, r3, #1
   166d8:	add	r3, r2, r3
   166dc:	ldrh	r3, [r3]
   166e0:	and	r3, r3, #16384	; 0x4000
   166e4:	cmp	r3, #0
   166e8:	bne	168b0 <__assert_fail@plt+0x54cc>
   166ec:	movw	r3, #17000	; 0x4268
   166f0:	movt	r3, #3
   166f4:	ldrb	r3, [r3]
   166f8:	cmp	r3, #0
   166fc:	beq	16784 <__assert_fail@plt+0x53a0>
   16700:	mov	r3, #4
   16704:	str	r3, [fp, #-16]
   16708:	mov	r3, #4
   1670c:	str	r3, [fp, #-20]	; 0xffffffec
   16710:	ldr	r3, [fp, #-8]
   16714:	add	r2, r3, #1
   16718:	str	r2, [fp, #-8]
   1671c:	mov	r2, #92	; 0x5c
   16720:	strb	r2, [r3]
   16724:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16728:	sub	r3, fp, #32
   1672c:	movw	r1, #9032	; 0x2348
   16730:	movt	r1, #2
   16734:	mov	r0, r3
   16738:	bl	1136c <sprintf@plt>
   1673c:	mov	r3, #0
   16740:	str	r3, [fp, #-12]
   16744:	b	16774 <__assert_fail@plt+0x5390>
   16748:	ldr	r3, [fp, #-8]
   1674c:	add	r2, r3, #1
   16750:	str	r2, [fp, #-8]
   16754:	sub	r1, fp, #32
   16758:	ldr	r2, [fp, #-12]
   1675c:	add	r2, r1, r2
   16760:	ldrb	r2, [r2]
   16764:	strb	r2, [r3]
   16768:	ldr	r3, [fp, #-12]
   1676c:	add	r3, r3, #1
   16770:	str	r3, [fp, #-12]
   16774:	ldr	r3, [fp, #-12]
   16778:	cmp	r3, #2
   1677c:	ble	16748 <__assert_fail@plt+0x5364>
   16780:	b	168cc <__assert_fail@plt+0x54e8>
   16784:	movw	r3, #17001	; 0x4269
   16788:	movt	r3, #3
   1678c:	ldrb	r3, [r3]
   16790:	cmp	r3, #0
   16794:	beq	16864 <__assert_fail@plt+0x5480>
   16798:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1679c:	cmp	r3, #0
   167a0:	blt	167e0 <__assert_fail@plt+0x53fc>
   167a4:	mov	r3, #2
   167a8:	str	r3, [fp, #-16]
   167ac:	mov	r3, #2
   167b0:	str	r3, [fp, #-20]	; 0xffffffec
   167b4:	ldr	r3, [fp, #-8]
   167b8:	add	r2, r3, #1
   167bc:	str	r2, [fp, #-8]
   167c0:	mov	r2, #94	; 0x5e
   167c4:	strb	r2, [r3]
   167c8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   167cc:	eor	r3, r3, #64	; 0x40
   167d0:	uxtb	r2, r3
   167d4:	ldr	r3, [fp, #-8]
   167d8:	strb	r2, [r3]
   167dc:	b	168cc <__assert_fail@plt+0x54e8>
   167e0:	mov	r3, #4
   167e4:	str	r3, [fp, #-16]
   167e8:	mov	r3, #4
   167ec:	str	r3, [fp, #-20]	; 0xffffffec
   167f0:	ldr	r3, [fp, #-8]
   167f4:	add	r2, r3, #1
   167f8:	str	r2, [fp, #-8]
   167fc:	mov	r2, #92	; 0x5c
   16800:	strb	r2, [r3]
   16804:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16808:	sub	r3, fp, #32
   1680c:	movw	r1, #9032	; 0x2348
   16810:	movt	r1, #2
   16814:	mov	r0, r3
   16818:	bl	1136c <sprintf@plt>
   1681c:	mov	r3, #0
   16820:	str	r3, [fp, #-12]
   16824:	b	16854 <__assert_fail@plt+0x5470>
   16828:	ldr	r3, [fp, #-8]
   1682c:	add	r2, r3, #1
   16830:	str	r2, [fp, #-8]
   16834:	sub	r1, fp, #32
   16838:	ldr	r2, [fp, #-12]
   1683c:	add	r2, r1, r2
   16840:	ldrb	r2, [r2]
   16844:	strb	r2, [r3]
   16848:	ldr	r3, [fp, #-12]
   1684c:	add	r3, r3, #1
   16850:	str	r3, [fp, #-12]
   16854:	ldr	r3, [fp, #-12]
   16858:	cmp	r3, #2
   1685c:	ble	16828 <__assert_fail@plt+0x5444>
   16860:	b	168cc <__assert_fail@plt+0x54e8>
   16864:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16868:	cmp	r3, #8
   1686c:	bne	16890 <__assert_fail@plt+0x54ac>
   16870:	mvn	r3, #0
   16874:	str	r3, [fp, #-16]
   16878:	mov	r3, #1
   1687c:	str	r3, [fp, #-20]	; 0xffffffec
   16880:	ldr	r3, [fp, #-8]
   16884:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   16888:	strb	r2, [r3]
   1688c:	b	168cc <__assert_fail@plt+0x54e8>
   16890:	mov	r3, #0
   16894:	str	r3, [fp, #-16]
   16898:	mov	r3, #1
   1689c:	str	r3, [fp, #-20]	; 0xffffffec
   168a0:	ldr	r3, [fp, #-8]
   168a4:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   168a8:	strb	r2, [r3]
   168ac:	b	168cc <__assert_fail@plt+0x54e8>
   168b0:	mov	r3, #1
   168b4:	str	r3, [fp, #-16]
   168b8:	mov	r3, #1
   168bc:	str	r3, [fp, #-20]	; 0xffffffec
   168c0:	ldr	r3, [fp, #-8]
   168c4:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   168c8:	strb	r2, [r3]
   168cc:	ldr	r3, [fp, #-16]
   168d0:	cmp	r3, #0
   168d4:	bge	16908 <__assert_fail@plt+0x5524>
   168d8:	movw	r3, #16952	; 0x4238
   168dc:	movt	r3, #3
   168e0:	ldr	r3, [r3]
   168e4:	cmp	r3, #0
   168e8:	bne	16908 <__assert_fail@plt+0x5524>
   168ec:	mov	r3, #0
   168f0:	str	r3, [fp, #-20]	; 0xffffffec
   168f4:	movw	r3, #16952	; 0x4238
   168f8:	movt	r3, #3
   168fc:	mov	r2, #0
   16900:	str	r2, [r3]
   16904:	b	16964 <__assert_fail@plt+0x5580>
   16908:	ldr	r3, [fp, #-16]
   1690c:	cmp	r3, #0
   16910:	bge	16944 <__assert_fail@plt+0x5560>
   16914:	ldr	r3, [fp, #-16]
   16918:	rsb	r2, r3, #0
   1691c:	movw	r3, #16952	; 0x4238
   16920:	movt	r3, #3
   16924:	ldr	r3, [r3]
   16928:	cmp	r2, r3
   1692c:	blt	16944 <__assert_fail@plt+0x5560>
   16930:	movw	r3, #16952	; 0x4238
   16934:	movt	r3, #3
   16938:	mov	r2, #0
   1693c:	str	r2, [r3]
   16940:	b	16964 <__assert_fail@plt+0x5580>
   16944:	movw	r3, #16952	; 0x4238
   16948:	movt	r3, #3
   1694c:	ldr	r2, [r3]
   16950:	ldr	r3, [fp, #-16]
   16954:	add	r2, r2, r3
   16958:	movw	r3, #16952	; 0x4238
   1695c:	movt	r3, #3
   16960:	str	r2, [r3]
   16964:	ldr	r3, [fp, #-20]	; 0xffffffec
   16968:	mov	r0, r3
   1696c:	sub	sp, fp, #4
   16970:	ldr	fp, [sp]
   16974:	add	sp, sp, #4
   16978:	pop	{pc}		; (ldr pc, [sp], #4)
   1697c:	str	fp, [sp, #-8]!
   16980:	str	lr, [sp, #4]
   16984:	add	fp, sp, #4
   16988:	movw	r3, #16996	; 0x4264
   1698c:	movt	r3, #3
   16990:	ldr	r3, [r3]
   16994:	mov	r0, r3
   16998:	bl	17278 <__assert_fail@plt+0x5e94>
   1699c:	movw	r3, #17052	; 0x429c
   169a0:	movt	r3, #3
   169a4:	ldr	r3, [r3]
   169a8:	mov	r0, r3
   169ac:	bl	17278 <__assert_fail@plt+0x5e94>
   169b0:	movw	r3, #16888	; 0x41f8
   169b4:	movt	r3, #3
   169b8:	ldr	r3, [r3]
   169bc:	mov	r0, r3
   169c0:	bl	17278 <__assert_fail@plt+0x5e94>
   169c4:	movw	r3, #16904	; 0x4208
   169c8:	movt	r3, #3
   169cc:	ldr	r3, [r3]
   169d0:	mov	r0, r3
   169d4:	bl	17278 <__assert_fail@plt+0x5e94>
   169d8:	movw	r3, #16908	; 0x420c
   169dc:	movt	r3, #3
   169e0:	ldr	r3, [r3]
   169e4:	mov	r0, r3
   169e8:	bl	17278 <__assert_fail@plt+0x5e94>
   169ec:	movw	r3, #16892	; 0x41fc
   169f0:	movt	r3, #3
   169f4:	ldr	r3, [r3]
   169f8:	mov	r0, r3
   169fc:	bl	17278 <__assert_fail@plt+0x5e94>
   16a00:	nop	{0}
   16a04:	sub	sp, fp, #4
   16a08:	ldr	fp, [sp]
   16a0c:	add	sp, sp, #4
   16a10:	pop	{pc}		; (ldr pc, [sp], #4)
   16a14:	str	r4, [sp, #-12]!
   16a18:	str	fp, [sp, #4]
   16a1c:	str	lr, [sp, #8]
   16a20:	add	fp, sp, #8
   16a24:	sub	sp, sp, #12
   16a28:	str	r0, [fp, #-16]
   16a2c:	ldr	r3, [fp, #-16]
   16a30:	cmp	r3, #0
   16a34:	beq	16a70 <__assert_fail@plt+0x568c>
   16a38:	movw	r3, #16864	; 0x41e0
   16a3c:	movt	r3, #3
   16a40:	ldr	r4, [r3]
   16a44:	movw	r0, #9040	; 0x2350
   16a48:	movt	r0, #2
   16a4c:	bl	11288 <gettext@plt>
   16a50:	mov	r1, r0
   16a54:	movw	r3, #17076	; 0x42b4
   16a58:	movt	r3, #3
   16a5c:	ldr	r3, [r3]
   16a60:	mov	r2, r3
   16a64:	mov	r0, r4
   16a68:	bl	112b8 <fprintf@plt>
   16a6c:	b	16d2c <__assert_fail@plt+0x5948>
   16a70:	movw	r0, #9080	; 0x2378
   16a74:	movt	r0, #2
   16a78:	bl	11288 <gettext@plt>
   16a7c:	mov	r2, r0
   16a80:	movw	r3, #17076	; 0x42b4
   16a84:	movt	r3, #3
   16a88:	ldr	r3, [r3]
   16a8c:	mov	r1, r3
   16a90:	mov	r0, r2
   16a94:	bl	110d8 <printf@plt>
   16a98:	movw	r0, #9116	; 0x239c
   16a9c:	movt	r0, #2
   16aa0:	bl	11288 <gettext@plt>
   16aa4:	mov	r2, r0
   16aa8:	movw	r3, #16876	; 0x41ec
   16aac:	movt	r3, #3
   16ab0:	ldr	r3, [r3]
   16ab4:	mov	r1, r3
   16ab8:	mov	r0, r2
   16abc:	bl	11090 <fputs_unlocked@plt>
   16ac0:	bl	11508 <__assert_fail@plt+0x124>
   16ac4:	bl	11550 <__assert_fail@plt+0x16c>
   16ac8:	movw	r0, #9164	; 0x23cc
   16acc:	movt	r0, #2
   16ad0:	bl	11288 <gettext@plt>
   16ad4:	mov	r2, r0
   16ad8:	movw	r3, #16876	; 0x41ec
   16adc:	movt	r3, #3
   16ae0:	ldr	r3, [r3]
   16ae4:	mov	r1, r3
   16ae8:	mov	r0, r2
   16aec:	bl	11090 <fputs_unlocked@plt>
   16af0:	movw	r0, #9500	; 0x251c
   16af4:	movt	r0, #2
   16af8:	bl	11288 <gettext@plt>
   16afc:	mov	r2, r0
   16b00:	movw	r3, #16876	; 0x41ec
   16b04:	movt	r3, #3
   16b08:	ldr	r3, [r3]
   16b0c:	mov	r1, r3
   16b10:	mov	r0, r2
   16b14:	bl	11090 <fputs_unlocked@plt>
   16b18:	movw	r0, #9772	; 0x262c
   16b1c:	movt	r0, #2
   16b20:	bl	11288 <gettext@plt>
   16b24:	mov	r2, r0
   16b28:	movw	r3, #16876	; 0x41ec
   16b2c:	movt	r3, #3
   16b30:	ldr	r3, [r3]
   16b34:	mov	r1, r3
   16b38:	mov	r0, r2
   16b3c:	bl	11090 <fputs_unlocked@plt>
   16b40:	movw	r0, #10172	; 0x27bc
   16b44:	movt	r0, #2
   16b48:	bl	11288 <gettext@plt>
   16b4c:	mov	r2, r0
   16b50:	movw	r3, #16876	; 0x41ec
   16b54:	movt	r3, #3
   16b58:	ldr	r3, [r3]
   16b5c:	mov	r1, r3
   16b60:	mov	r0, r2
   16b64:	bl	11090 <fputs_unlocked@plt>
   16b68:	movw	r0, #10600	; 0x2968
   16b6c:	movt	r0, #2
   16b70:	bl	11288 <gettext@plt>
   16b74:	mov	r2, r0
   16b78:	movw	r3, #16876	; 0x41ec
   16b7c:	movt	r3, #3
   16b80:	ldr	r3, [r3]
   16b84:	mov	r1, r3
   16b88:	mov	r0, r2
   16b8c:	bl	11090 <fputs_unlocked@plt>
   16b90:	movw	r0, #10820	; 0x2a44
   16b94:	movt	r0, #2
   16b98:	bl	11288 <gettext@plt>
   16b9c:	mov	r2, r0
   16ba0:	movw	r3, #16876	; 0x41ec
   16ba4:	movt	r3, #3
   16ba8:	ldr	r3, [r3]
   16bac:	mov	r1, r3
   16bb0:	mov	r0, r2
   16bb4:	bl	11090 <fputs_unlocked@plt>
   16bb8:	movw	r0, #10964	; 0x2ad4
   16bbc:	movt	r0, #2
   16bc0:	bl	11288 <gettext@plt>
   16bc4:	mov	r2, r0
   16bc8:	movw	r3, #16876	; 0x41ec
   16bcc:	movt	r3, #3
   16bd0:	ldr	r3, [r3]
   16bd4:	mov	r1, r3
   16bd8:	mov	r0, r2
   16bdc:	bl	11090 <fputs_unlocked@plt>
   16be0:	movw	r0, #11312	; 0x2c30
   16be4:	movt	r0, #2
   16be8:	bl	11288 <gettext@plt>
   16bec:	mov	r2, r0
   16bf0:	movw	r3, #16876	; 0x41ec
   16bf4:	movt	r3, #3
   16bf8:	ldr	r3, [r3]
   16bfc:	mov	r1, r3
   16c00:	mov	r0, r2
   16c04:	bl	11090 <fputs_unlocked@plt>
   16c08:	movw	r0, #11568	; 0x2d30
   16c0c:	movt	r0, #2
   16c10:	bl	11288 <gettext@plt>
   16c14:	mov	r2, r0
   16c18:	movw	r3, #16876	; 0x41ec
   16c1c:	movt	r3, #3
   16c20:	ldr	r3, [r3]
   16c24:	mov	r1, r3
   16c28:	mov	r0, r2
   16c2c:	bl	11090 <fputs_unlocked@plt>
   16c30:	movw	r0, #11896	; 0x2e78
   16c34:	movt	r0, #2
   16c38:	bl	11288 <gettext@plt>
   16c3c:	mov	r2, r0
   16c40:	movw	r3, #16876	; 0x41ec
   16c44:	movt	r3, #3
   16c48:	ldr	r3, [r3]
   16c4c:	mov	r1, r3
   16c50:	mov	r0, r2
   16c54:	bl	11090 <fputs_unlocked@plt>
   16c58:	movw	r0, #12132	; 0x2f64
   16c5c:	movt	r0, #2
   16c60:	bl	11288 <gettext@plt>
   16c64:	mov	r2, r0
   16c68:	movw	r3, #16876	; 0x41ec
   16c6c:	movt	r3, #3
   16c70:	ldr	r3, [r3]
   16c74:	mov	r1, r3
   16c78:	mov	r0, r2
   16c7c:	bl	11090 <fputs_unlocked@plt>
   16c80:	movw	r0, #12236	; 0x2fcc
   16c84:	movt	r0, #2
   16c88:	bl	11288 <gettext@plt>
   16c8c:	mov	r2, r0
   16c90:	movw	r3, #16876	; 0x41ec
   16c94:	movt	r3, #3
   16c98:	ldr	r3, [r3]
   16c9c:	mov	r1, r3
   16ca0:	mov	r0, r2
   16ca4:	bl	11090 <fputs_unlocked@plt>
   16ca8:	movw	r0, #12640	; 0x3160
   16cac:	movt	r0, #2
   16cb0:	bl	11288 <gettext@plt>
   16cb4:	mov	r2, r0
   16cb8:	movw	r3, #16876	; 0x41ec
   16cbc:	movt	r3, #3
   16cc0:	ldr	r3, [r3]
   16cc4:	mov	r1, r3
   16cc8:	mov	r0, r2
   16ccc:	bl	11090 <fputs_unlocked@plt>
   16cd0:	movw	r0, #12856	; 0x3238
   16cd4:	movt	r0, #2
   16cd8:	bl	11288 <gettext@plt>
   16cdc:	mov	r2, r0
   16ce0:	movw	r3, #16876	; 0x41ec
   16ce4:	movt	r3, #3
   16ce8:	ldr	r3, [r3]
   16cec:	mov	r1, r3
   16cf0:	mov	r0, r2
   16cf4:	bl	11090 <fputs_unlocked@plt>
   16cf8:	movw	r0, #12904	; 0x3268
   16cfc:	movt	r0, #2
   16d00:	bl	11288 <gettext@plt>
   16d04:	mov	r2, r0
   16d08:	movw	r3, #16876	; 0x41ec
   16d0c:	movt	r3, #3
   16d10:	ldr	r3, [r3]
   16d14:	mov	r1, r3
   16d18:	mov	r0, r2
   16d1c:	bl	11090 <fputs_unlocked@plt>
   16d20:	movw	r0, #8580	; 0x2184
   16d24:	movt	r0, #2
   16d28:	bl	11598 <__assert_fail@plt+0x1b4>
   16d2c:	ldr	r0, [fp, #-16]
   16d30:	bl	1127c <exit@plt>
   16d34:	push	{fp}		; (str fp, [sp, #-4]!)
   16d38:	add	fp, sp, #0
   16d3c:	sub	sp, sp, #12
   16d40:	str	r0, [fp, #-8]
   16d44:	movw	r3, #17068	; 0x42ac
   16d48:	movt	r3, #3
   16d4c:	ldr	r2, [fp, #-8]
   16d50:	str	r2, [r3]
   16d54:	nop	{0}
   16d58:	add	sp, fp, #0
   16d5c:	pop	{fp}		; (ldr fp, [sp], #4)
   16d60:	bx	lr
   16d64:	push	{fp}		; (str fp, [sp, #-4]!)
   16d68:	add	fp, sp, #0
   16d6c:	sub	sp, sp, #12
   16d70:	mov	r3, r0
   16d74:	strb	r3, [fp, #-5]
   16d78:	movw	r3, #17072	; 0x42b0
   16d7c:	movt	r3, #3
   16d80:	ldrb	r2, [fp, #-5]
   16d84:	strb	r2, [r3]
   16d88:	nop	{0}
   16d8c:	add	sp, fp, #0
   16d90:	pop	{fp}		; (ldr fp, [sp], #4)
   16d94:	bx	lr
   16d98:	str	r4, [sp, #-12]!
   16d9c:	str	fp, [sp, #4]
   16da0:	str	lr, [sp, #8]
   16da4:	add	fp, sp, #8
   16da8:	sub	sp, sp, #20
   16dac:	movw	r3, #16876	; 0x41ec
   16db0:	movt	r3, #3
   16db4:	ldr	r3, [r3]
   16db8:	mov	r0, r3
   16dbc:	bl	20ae8 <__assert_fail@plt+0xf704>
   16dc0:	mov	r3, r0
   16dc4:	cmp	r3, #0
   16dc8:	beq	16e9c <__assert_fail@plt+0x5ab8>
   16dcc:	movw	r3, #17072	; 0x42b0
   16dd0:	movt	r3, #3
   16dd4:	ldrb	r3, [r3]
   16dd8:	eor	r3, r3, #1
   16ddc:	uxtb	r3, r3
   16de0:	cmp	r3, #0
   16de4:	bne	16dfc <__assert_fail@plt+0x5a18>
   16de8:	bl	112d0 <__errno_location@plt>
   16dec:	mov	r3, r0
   16df0:	ldr	r3, [r3]
   16df4:	cmp	r3, #32
   16df8:	beq	16e9c <__assert_fail@plt+0x5ab8>
   16dfc:	movw	r0, #12976	; 0x32b0
   16e00:	movt	r0, #2
   16e04:	bl	11288 <gettext@plt>
   16e08:	str	r0, [fp, #-16]
   16e0c:	movw	r3, #17068	; 0x42ac
   16e10:	movt	r3, #3
   16e14:	ldr	r3, [r3]
   16e18:	cmp	r3, #0
   16e1c:	beq	16e68 <__assert_fail@plt+0x5a84>
   16e20:	bl	112d0 <__errno_location@plt>
   16e24:	mov	r3, r0
   16e28:	ldr	r4, [r3]
   16e2c:	movw	r3, #17068	; 0x42ac
   16e30:	movt	r3, #3
   16e34:	ldr	r3, [r3]
   16e38:	mov	r0, r3
   16e3c:	bl	1cb78 <__assert_fail@plt+0xb794>
   16e40:	mov	r2, r0
   16e44:	ldr	r3, [fp, #-16]
   16e48:	str	r3, [sp]
   16e4c:	mov	r3, r2
   16e50:	movw	r2, #12988	; 0x32bc
   16e54:	movt	r2, #2
   16e58:	mov	r1, r4
   16e5c:	mov	r0, #0
   16e60:	bl	11210 <error@plt>
   16e64:	b	16e88 <__assert_fail@plt+0x5aa4>
   16e68:	bl	112d0 <__errno_location@plt>
   16e6c:	mov	r3, r0
   16e70:	ldr	r1, [r3]
   16e74:	ldr	r3, [fp, #-16]
   16e78:	movw	r2, #12996	; 0x32c4
   16e7c:	movt	r2, #2
   16e80:	mov	r0, #0
   16e84:	bl	11210 <error@plt>
   16e88:	movw	r3, #16780	; 0x418c
   16e8c:	movt	r3, #3
   16e90:	ldr	r3, [r3]
   16e94:	mov	r0, r3
   16e98:	bl	11120 <_exit@plt>
   16e9c:	movw	r3, #16864	; 0x41e0
   16ea0:	movt	r3, #3
   16ea4:	ldr	r3, [r3]
   16ea8:	mov	r0, r3
   16eac:	bl	20ae8 <__assert_fail@plt+0xf704>
   16eb0:	mov	r3, r0
   16eb4:	cmp	r3, #0
   16eb8:	beq	16ed0 <__assert_fail@plt+0x5aec>
   16ebc:	movw	r3, #16780	; 0x418c
   16ec0:	movt	r3, #3
   16ec4:	ldr	r3, [r3]
   16ec8:	mov	r0, r3
   16ecc:	bl	11120 <_exit@plt>
   16ed0:	nop	{0}
   16ed4:	sub	sp, fp, #8
   16ed8:	ldr	r4, [sp]
   16edc:	ldr	fp, [sp, #4]
   16ee0:	add	sp, sp, #8
   16ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ee8:	str	fp, [sp, #-8]!
   16eec:	str	lr, [sp, #4]
   16ef0:	add	fp, sp, #4
   16ef4:	sub	sp, sp, #40	; 0x28
   16ef8:	str	r0, [fp, #-16]
   16efc:	strd	r2, [fp, #-28]	; 0xffffffe4
   16f00:	ldr	r3, [fp, #12]
   16f04:	str	r3, [sp, #8]
   16f08:	ldrd	r2, [fp, #4]
   16f0c:	strd	r2, [sp]
   16f10:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f14:	ldr	r0, [fp, #-16]
   16f18:	bl	110cc <posix_fadvise64@plt>
   16f1c:	str	r0, [fp, #-8]
   16f20:	nop	{0}
   16f24:	sub	sp, fp, #4
   16f28:	ldr	fp, [sp]
   16f2c:	add	sp, sp, #4
   16f30:	pop	{pc}		; (ldr pc, [sp], #4)
   16f34:	str	fp, [sp, #-8]!
   16f38:	str	lr, [sp, #4]
   16f3c:	add	fp, sp, #4
   16f40:	sub	sp, sp, #24
   16f44:	str	r0, [fp, #-8]
   16f48:	str	r1, [fp, #-12]
   16f4c:	ldr	r3, [fp, #-8]
   16f50:	cmp	r3, #0
   16f54:	beq	16f88 <__assert_fail@plt+0x5ba4>
   16f58:	ldr	r0, [fp, #-8]
   16f5c:	bl	112f4 <fileno@plt>
   16f60:	mov	r1, r0
   16f64:	ldr	r3, [fp, #-12]
   16f68:	str	r3, [sp, #8]
   16f6c:	mov	r2, #0
   16f70:	mov	r3, #0
   16f74:	strd	r2, [sp]
   16f78:	mov	r2, #0
   16f7c:	mov	r3, #0
   16f80:	mov	r0, r1
   16f84:	bl	16ee8 <__assert_fail@plt+0x5b04>
   16f88:	nop	{0}
   16f8c:	sub	sp, fp, #4
   16f90:	ldr	fp, [sp]
   16f94:	add	sp, sp, #4
   16f98:	pop	{pc}		; (ldr pc, [sp], #4)
   16f9c:	str	fp, [sp, #-8]!
   16fa0:	str	lr, [sp, #4]
   16fa4:	add	fp, sp, #4
   16fa8:	sub	sp, sp, #32
   16fac:	str	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	mov	r3, #0
   16fb4:	str	r3, [fp, #-8]
   16fb8:	mov	r3, #0
   16fbc:	str	r3, [fp, #-12]
   16fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fc4:	bl	112f4 <fileno@plt>
   16fc8:	str	r0, [fp, #-16]
   16fcc:	ldr	r3, [fp, #-16]
   16fd0:	cmp	r3, #0
   16fd4:	bge	16fe8 <__assert_fail@plt+0x5c04>
   16fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fdc:	bl	11318 <fclose@plt>
   16fe0:	mov	r3, r0
   16fe4:	b	1708c <__assert_fail@plt+0x5ca8>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	bl	1124c <__freading@plt>
   16ff0:	mov	r3, r0
   16ff4:	cmp	r3, #0
   16ff8:	beq	17034 <__assert_fail@plt+0x5c50>
   16ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17000:	bl	112f4 <fileno@plt>
   17004:	mov	r1, r0
   17008:	mov	r3, #1
   1700c:	str	r3, [sp]
   17010:	mov	r2, #0
   17014:	mov	r3, #0
   17018:	mov	r0, r1
   1701c:	bl	111d4 <lseek64@plt>
   17020:	mvn	r2, #0
   17024:	mvn	r3, #0
   17028:	cmp	r1, r3
   1702c:	cmpeq	r0, r2
   17030:	beq	17058 <__assert_fail@plt+0x5c74>
   17034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17038:	bl	170f4 <__assert_fail@plt+0x5d10>
   1703c:	mov	r3, r0
   17040:	cmp	r3, #0
   17044:	beq	17058 <__assert_fail@plt+0x5c74>
   17048:	bl	112d0 <__errno_location@plt>
   1704c:	mov	r3, r0
   17050:	ldr	r3, [r3]
   17054:	str	r3, [fp, #-8]
   17058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1705c:	bl	11318 <fclose@plt>
   17060:	str	r0, [fp, #-12]
   17064:	ldr	r3, [fp, #-8]
   17068:	cmp	r3, #0
   1706c:	beq	17088 <__assert_fail@plt+0x5ca4>
   17070:	bl	112d0 <__errno_location@plt>
   17074:	mov	r2, r0
   17078:	ldr	r3, [fp, #-8]
   1707c:	str	r3, [r2]
   17080:	mvn	r3, #0
   17084:	str	r3, [fp, #-12]
   17088:	ldr	r3, [fp, #-12]
   1708c:	mov	r0, r3
   17090:	sub	sp, fp, #4
   17094:	ldr	fp, [sp]
   17098:	add	sp, sp, #4
   1709c:	pop	{pc}		; (ldr pc, [sp], #4)
   170a0:	str	fp, [sp, #-8]!
   170a4:	str	lr, [sp, #4]
   170a8:	add	fp, sp, #4
   170ac:	sub	sp, sp, #16
   170b0:	str	r0, [fp, #-8]
   170b4:	ldr	r3, [fp, #-8]
   170b8:	ldr	r3, [r3]
   170bc:	and	r3, r3, #256	; 0x100
   170c0:	cmp	r3, #0
   170c4:	beq	170e0 <__assert_fail@plt+0x5cfc>
   170c8:	mov	r3, #1
   170cc:	str	r3, [sp]
   170d0:	mov	r2, #0
   170d4:	mov	r3, #0
   170d8:	ldr	r0, [fp, #-8]
   170dc:	bl	1731c <__assert_fail@plt+0x5f38>
   170e0:	nop	{0}
   170e4:	sub	sp, fp, #4
   170e8:	ldr	fp, [sp]
   170ec:	add	sp, sp, #4
   170f0:	pop	{pc}		; (ldr pc, [sp], #4)
   170f4:	str	fp, [sp, #-8]!
   170f8:	str	lr, [sp, #4]
   170fc:	add	fp, sp, #4
   17100:	sub	sp, sp, #8
   17104:	str	r0, [fp, #-8]
   17108:	ldr	r3, [fp, #-8]
   1710c:	cmp	r3, #0
   17110:	beq	17128 <__assert_fail@plt+0x5d44>
   17114:	ldr	r0, [fp, #-8]
   17118:	bl	1124c <__freading@plt>
   1711c:	mov	r3, r0
   17120:	cmp	r3, #0
   17124:	bne	17138 <__assert_fail@plt+0x5d54>
   17128:	ldr	r0, [fp, #-8]
   1712c:	bl	110f0 <fflush@plt>
   17130:	mov	r3, r0
   17134:	b	1714c <__assert_fail@plt+0x5d68>
   17138:	ldr	r0, [fp, #-8]
   1713c:	bl	170a0 <__assert_fail@plt+0x5cbc>
   17140:	ldr	r0, [fp, #-8]
   17144:	bl	110f0 <fflush@plt>
   17148:	mov	r3, r0
   1714c:	mov	r0, r3
   17150:	sub	sp, fp, #4
   17154:	ldr	fp, [sp]
   17158:	add	sp, sp, #4
   1715c:	pop	{pc}		; (ldr pc, [sp], #4)
   17160:	str	fp, [sp, #-8]!
   17164:	str	lr, [sp, #4]
   17168:	add	fp, sp, #4
   1716c:	sub	sp, sp, #32
   17170:	str	r0, [fp, #-32]	; 0xffffffe0
   17174:	str	r1, [fp, #-36]	; 0xffffffdc
   17178:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1717c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17180:	bl	11390 <fopen64@plt>
   17184:	str	r0, [fp, #-8]
   17188:	ldr	r3, [fp, #-8]
   1718c:	cmp	r3, #0
   17190:	beq	17260 <__assert_fail@plt+0x5e7c>
   17194:	ldr	r0, [fp, #-8]
   17198:	bl	112f4 <fileno@plt>
   1719c:	str	r0, [fp, #-12]
   171a0:	ldr	r3, [fp, #-12]
   171a4:	cmp	r3, #0
   171a8:	blt	17260 <__assert_fail@plt+0x5e7c>
   171ac:	ldr	r3, [fp, #-12]
   171b0:	cmp	r3, #2
   171b4:	bgt	17260 <__assert_fail@plt+0x5e7c>
   171b8:	ldr	r0, [fp, #-12]
   171bc:	bl	1db34 <__assert_fail@plt+0xc750>
   171c0:	str	r0, [fp, #-16]
   171c4:	ldr	r3, [fp, #-16]
   171c8:	cmp	r3, #0
   171cc:	bge	17200 <__assert_fail@plt+0x5e1c>
   171d0:	bl	112d0 <__errno_location@plt>
   171d4:	mov	r3, r0
   171d8:	ldr	r3, [r3]
   171dc:	str	r3, [fp, #-20]	; 0xffffffec
   171e0:	ldr	r0, [fp, #-8]
   171e4:	bl	16f9c <__assert_fail@plt+0x5bb8>
   171e8:	bl	112d0 <__errno_location@plt>
   171ec:	mov	r2, r0
   171f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171f4:	str	r3, [r2]
   171f8:	mov	r3, #0
   171fc:	b	17264 <__assert_fail@plt+0x5e80>
   17200:	ldr	r0, [fp, #-8]
   17204:	bl	16f9c <__assert_fail@plt+0x5bb8>
   17208:	mov	r3, r0
   1720c:	cmp	r3, #0
   17210:	bne	17230 <__assert_fail@plt+0x5e4c>
   17214:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17218:	ldr	r0, [fp, #-16]
   1721c:	bl	11078 <fdopen@plt>
   17220:	str	r0, [fp, #-8]
   17224:	ldr	r3, [fp, #-8]
   17228:	cmp	r3, #0
   1722c:	bne	17260 <__assert_fail@plt+0x5e7c>
   17230:	bl	112d0 <__errno_location@plt>
   17234:	mov	r3, r0
   17238:	ldr	r3, [r3]
   1723c:	str	r3, [fp, #-24]	; 0xffffffe8
   17240:	ldr	r0, [fp, #-16]
   17244:	bl	113cc <close@plt>
   17248:	bl	112d0 <__errno_location@plt>
   1724c:	mov	r2, r0
   17250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17254:	str	r3, [r2]
   17258:	mov	r3, #0
   1725c:	b	17264 <__assert_fail@plt+0x5e80>
   17260:	ldr	r3, [fp, #-8]
   17264:	mov	r0, r3
   17268:	sub	sp, fp, #4
   1726c:	ldr	fp, [sp]
   17270:	add	sp, sp, #4
   17274:	pop	{pc}		; (ldr pc, [sp], #4)
   17278:	str	r4, [sp, #-12]!
   1727c:	str	fp, [sp, #4]
   17280:	str	lr, [sp, #8]
   17284:	add	fp, sp, #8
   17288:	sub	sp, sp, #20
   1728c:	str	r0, [fp, #-24]	; 0xffffffe8
   17290:	bl	112d0 <__errno_location@plt>
   17294:	mov	r3, r0
   17298:	ldr	r3, [r3]
   1729c:	str	r3, [fp, #-20]	; 0xffffffec
   172a0:	bl	112d0 <__errno_location@plt>
   172a4:	mov	r3, r0
   172a8:	ldr	r3, [r3]
   172ac:	str	r3, [fp, #-16]
   172b0:	bl	112d0 <__errno_location@plt>
   172b4:	mov	r2, r0
   172b8:	mov	r3, #0
   172bc:	str	r3, [r2]
   172c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c4:	bl	11108 <free@plt>
   172c8:	bl	112d0 <__errno_location@plt>
   172cc:	mov	r3, r0
   172d0:	ldr	r3, [r3]
   172d4:	cmp	r3, #0
   172d8:	moveq	r3, #1
   172dc:	movne	r3, #0
   172e0:	uxtb	r3, r3
   172e4:	mov	r4, r3
   172e8:	bl	112d0 <__errno_location@plt>
   172ec:	mov	r2, r0
   172f0:	lsl	r3, r4, #2
   172f4:	sub	r1, fp, #12
   172f8:	add	r3, r1, r3
   172fc:	ldr	r3, [r3, #-8]
   17300:	str	r3, [r2]
   17304:	nop	{0}
   17308:	sub	sp, fp, #8
   1730c:	ldr	r4, [sp]
   17310:	ldr	fp, [sp, #4]
   17314:	add	sp, sp, #8
   17318:	pop	{pc}		; (ldr pc, [sp], #4)
   1731c:	str	fp, [sp, #-8]!
   17320:	str	lr, [sp, #4]
   17324:	add	fp, sp, #4
   17328:	sub	sp, sp, #32
   1732c:	str	r0, [fp, #-16]
   17330:	strd	r2, [fp, #-28]	; 0xffffffe4
   17334:	ldr	r3, [fp, #-16]
   17338:	ldr	r2, [r3, #8]
   1733c:	ldr	r3, [fp, #-16]
   17340:	ldr	r3, [r3, #4]
   17344:	cmp	r2, r3
   17348:	bne	173e0 <__assert_fail@plt+0x5ffc>
   1734c:	ldr	r3, [fp, #-16]
   17350:	ldr	r2, [r3, #20]
   17354:	ldr	r3, [fp, #-16]
   17358:	ldr	r3, [r3, #16]
   1735c:	cmp	r2, r3
   17360:	bne	173e0 <__assert_fail@plt+0x5ffc>
   17364:	ldr	r3, [fp, #-16]
   17368:	ldr	r3, [r3, #36]	; 0x24
   1736c:	cmp	r3, #0
   17370:	bne	173e0 <__assert_fail@plt+0x5ffc>
   17374:	ldr	r0, [fp, #-16]
   17378:	bl	112f4 <fileno@plt>
   1737c:	mov	r1, r0
   17380:	ldr	r3, [fp, #4]
   17384:	str	r3, [sp]
   17388:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1738c:	mov	r0, r1
   17390:	bl	111d4 <lseek64@plt>
   17394:	strd	r0, [fp, #-12]
   17398:	ldrd	r2, [fp, #-12]
   1739c:	mvn	r0, #0
   173a0:	mvn	r1, #0
   173a4:	cmp	r3, r1
   173a8:	cmpeq	r2, r0
   173ac:	bne	173b8 <__assert_fail@plt+0x5fd4>
   173b0:	mvn	r3, #0
   173b4:	b	173f8 <__assert_fail@plt+0x6014>
   173b8:	ldr	r3, [fp, #-16]
   173bc:	ldr	r3, [r3]
   173c0:	bic	r2, r3, #16
   173c4:	ldr	r3, [fp, #-16]
   173c8:	str	r2, [r3]
   173cc:	ldr	r1, [fp, #-16]
   173d0:	ldrd	r2, [fp, #-12]
   173d4:	strd	r2, [r1, #80]	; 0x50
   173d8:	mov	r3, #0
   173dc:	b	173f8 <__assert_fail@plt+0x6014>
   173e0:	ldr	r3, [fp, #4]
   173e4:	str	r3, [sp]
   173e8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   173ec:	ldr	r0, [fp, #-16]
   173f0:	bl	11324 <fseeko64@plt>
   173f4:	mov	r3, r0
   173f8:	mov	r0, r3
   173fc:	sub	sp, fp, #4
   17400:	ldr	fp, [sp]
   17404:	add	sp, sp, #4
   17408:	pop	{pc}		; (ldr pc, [sp], #4)
   1740c:	str	fp, [sp, #-8]!
   17410:	str	lr, [sp, #4]
   17414:	add	fp, sp, #4
   17418:	sub	sp, sp, #8
   1741c:	str	r0, [fp, #-8]
   17420:	ldr	r1, [fp, #-8]
   17424:	mov	r0, #0
   17428:	bl	11114 <clock_gettime@plt>
   1742c:	nop	{0}
   17430:	sub	sp, fp, #4
   17434:	ldr	fp, [sp]
   17438:	add	sp, sp, #4
   1743c:	pop	{pc}		; (ldr pc, [sp], #4)
   17440:	str	fp, [sp, #-8]!
   17444:	str	lr, [sp, #4]
   17448:	add	fp, sp, #4
   1744c:	sub	sp, sp, #16
   17450:	str	r0, [fp, #-16]
   17454:	sub	r3, fp, #12
   17458:	mov	r0, r3
   1745c:	bl	1740c <__assert_fail@plt+0x6028>
   17460:	ldr	r3, [fp, #-16]
   17464:	mov	r1, r3
   17468:	sub	r3, fp, #12
   1746c:	ldrd	r2, [r3]
   17470:	strd	r2, [r1]
   17474:	ldr	r0, [fp, #-16]
   17478:	sub	sp, fp, #4
   1747c:	ldr	fp, [sp]
   17480:	add	sp, sp, #4
   17484:	pop	{pc}		; (ldr pc, [sp], #4)
   17488:	str	fp, [sp, #-8]!
   1748c:	str	lr, [sp, #4]
   17490:	add	fp, sp, #4
   17494:	sub	sp, sp, #272	; 0x110
   17498:	str	r0, [fp, #-272]	; 0xfffffef0
   1749c:	sub	r3, fp, #264	; 0x108
   174a0:	movw	r2, #257	; 0x101
   174a4:	mov	r1, r3
   174a8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   174ac:	bl	1d044 <__assert_fail@plt+0xbc60>
   174b0:	mov	r3, r0
   174b4:	cmp	r3, #0
   174b8:	beq	174c4 <__assert_fail@plt+0x60e0>
   174bc:	mov	r3, #0
   174c0:	b	17518 <__assert_fail@plt+0x6134>
   174c4:	sub	r3, fp, #264	; 0x108
   174c8:	movw	r1, #13000	; 0x32c8
   174cc:	movt	r1, #2
   174d0:	mov	r0, r3
   174d4:	bl	110b4 <strcmp@plt>
   174d8:	mov	r3, r0
   174dc:	cmp	r3, #0
   174e0:	beq	1750c <__assert_fail@plt+0x6128>
   174e4:	sub	r3, fp, #264	; 0x108
   174e8:	movw	r1, #13004	; 0x32cc
   174ec:	movt	r1, #2
   174f0:	mov	r0, r3
   174f4:	bl	110b4 <strcmp@plt>
   174f8:	mov	r3, r0
   174fc:	cmp	r3, #0
   17500:	beq	1750c <__assert_fail@plt+0x6128>
   17504:	mov	r3, #1
   17508:	b	17510 <__assert_fail@plt+0x612c>
   1750c:	mov	r3, #0
   17510:	and	r3, r3, #1
   17514:	uxtb	r3, r3
   17518:	mov	r0, r3
   1751c:	sub	sp, fp, #4
   17520:	ldr	fp, [sp]
   17524:	add	sp, sp, #4
   17528:	pop	{pc}		; (ldr pc, [sp], #4)
   1752c:	str	fp, [sp, #-8]!
   17530:	str	lr, [sp, #4]
   17534:	add	fp, sp, #4
   17538:	sub	sp, sp, #24
   1753c:	strd	r0, [fp, #-20]	; 0xffffffec
   17540:	str	r2, [fp, #-24]	; 0xffffffe8
   17544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17548:	add	r3, r3, #20
   1754c:	str	r3, [fp, #-8]
   17550:	ldr	r3, [fp, #-8]
   17554:	mov	r2, #0
   17558:	strb	r2, [r3]
   1755c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17560:	cmp	r2, #0
   17564:	sbcs	r3, r3, #0
   17568:	bge	175e0 <__assert_fail@plt+0x61fc>
   1756c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17570:	mov	r2, #10
   17574:	mov	r3, #0
   17578:	bl	21818 <__assert_fail@plt+0x10434>
   1757c:	uxtb	r3, r2
   17580:	ldr	r2, [fp, #-8]
   17584:	sub	r2, r2, #1
   17588:	str	r2, [fp, #-8]
   1758c:	rsb	r3, r3, #48	; 0x30
   17590:	uxtb	r2, r3
   17594:	ldr	r3, [fp, #-8]
   17598:	strb	r2, [r3]
   1759c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   175a0:	mov	r2, #10
   175a4:	mov	r3, #0
   175a8:	bl	21818 <__assert_fail@plt+0x10434>
   175ac:	mov	r2, r0
   175b0:	mov	r3, r1
   175b4:	strd	r2, [fp, #-20]	; 0xffffffec
   175b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   175bc:	orrs	r3, r2, r3
   175c0:	bne	1756c <__assert_fail@plt+0x6188>
   175c4:	ldr	r3, [fp, #-8]
   175c8:	sub	r3, r3, #1
   175cc:	str	r3, [fp, #-8]
   175d0:	ldr	r3, [fp, #-8]
   175d4:	mov	r2, #45	; 0x2d
   175d8:	strb	r2, [r3]
   175dc:	b	17638 <__assert_fail@plt+0x6254>
   175e0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   175e4:	mov	r2, #10
   175e8:	mov	r3, #0
   175ec:	bl	21818 <__assert_fail@plt+0x10434>
   175f0:	uxtb	r3, r2
   175f4:	ldr	r2, [fp, #-8]
   175f8:	sub	r2, r2, #1
   175fc:	str	r2, [fp, #-8]
   17600:	add	r3, r3, #48	; 0x30
   17604:	uxtb	r2, r3
   17608:	ldr	r3, [fp, #-8]
   1760c:	strb	r2, [r3]
   17610:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17614:	mov	r2, #10
   17618:	mov	r3, #0
   1761c:	bl	21818 <__assert_fail@plt+0x10434>
   17620:	mov	r2, r0
   17624:	mov	r3, r1
   17628:	strd	r2, [fp, #-20]	; 0xffffffec
   1762c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17630:	orrs	r3, r2, r3
   17634:	bne	175e0 <__assert_fail@plt+0x61fc>
   17638:	ldr	r3, [fp, #-8]
   1763c:	mov	r0, r3
   17640:	sub	sp, fp, #4
   17644:	ldr	fp, [sp]
   17648:	add	sp, sp, #4
   1764c:	pop	{pc}		; (ldr pc, [sp], #4)
   17650:	str	fp, [sp, #-8]!
   17654:	str	lr, [sp, #4]
   17658:	add	fp, sp, #4
   1765c:	sub	sp, sp, #8
   17660:	str	r0, [fp, #-8]
   17664:	str	r1, [fp, #-12]
   17668:	ldr	r0, [fp, #-8]
   1766c:	bl	11294 <strlen@plt>
   17670:	mov	r3, r0
   17674:	ldr	r2, [fp, #-12]
   17678:	mov	r1, r3
   1767c:	ldr	r0, [fp, #-8]
   17680:	bl	1769c <__assert_fail@plt+0x62b8>
   17684:	mov	r3, r0
   17688:	mov	r0, r3
   1768c:	sub	sp, fp, #4
   17690:	ldr	fp, [sp]
   17694:	add	sp, sp, #4
   17698:	pop	{pc}		; (ldr pc, [sp], #4)
   1769c:	str	fp, [sp, #-8]!
   176a0:	str	lr, [sp, #4]
   176a4:	add	fp, sp, #4
   176a8:	sub	sp, sp, #56	; 0x38
   176ac:	str	r0, [fp, #-48]	; 0xffffffd0
   176b0:	str	r1, [fp, #-52]	; 0xffffffcc
   176b4:	str	r2, [fp, #-56]	; 0xffffffc8
   176b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   176bc:	str	r3, [fp, #-8]
   176c0:	ldr	r2, [fp, #-8]
   176c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   176c8:	add	r3, r2, r3
   176cc:	str	r3, [fp, #-20]	; 0xffffffec
   176d0:	mov	r3, #0
   176d4:	str	r3, [fp, #-12]
   176d8:	bl	111e0 <__ctype_get_mb_cur_max@plt>
   176dc:	mov	r3, r0
   176e0:	cmp	r3, #1
   176e4:	bls	179a8 <__assert_fail@plt+0x65c4>
   176e8:	b	178dc <__assert_fail@plt+0x64f8>
   176ec:	ldr	r3, [fp, #-8]
   176f0:	ldrb	r3, [r3]
   176f4:	cmp	r3, #63	; 0x3f
   176f8:	bgt	17714 <__assert_fail@plt+0x6330>
   176fc:	cmp	r3, #37	; 0x25
   17700:	bge	17730 <__assert_fail@plt+0x634c>
   17704:	sub	r3, r3, #32
   17708:	cmp	r3, #3
   1770c:	bhi	1774c <__assert_fail@plt+0x6368>
   17710:	b	17730 <__assert_fail@plt+0x634c>
   17714:	cmp	r3, #65	; 0x41
   17718:	blt	1774c <__assert_fail@plt+0x6368>
   1771c:	cmp	r3, #95	; 0x5f
   17720:	ble	17730 <__assert_fail@plt+0x634c>
   17724:	sub	r3, r3, #97	; 0x61
   17728:	cmp	r3, #29
   1772c:	bhi	1774c <__assert_fail@plt+0x6368>
   17730:	ldr	r3, [fp, #-8]
   17734:	add	r3, r3, #1
   17738:	str	r3, [fp, #-8]
   1773c:	ldr	r3, [fp, #-12]
   17740:	add	r3, r3, #1
   17744:	str	r3, [fp, #-12]
   17748:	b	178dc <__assert_fail@plt+0x64f8>
   1774c:	sub	r3, fp, #36	; 0x24
   17750:	mov	r2, #8
   17754:	mov	r1, #0
   17758:	mov	r0, r3
   1775c:	bl	112e8 <memset@plt>
   17760:	ldr	r2, [fp, #-20]	; 0xffffffec
   17764:	ldr	r3, [fp, #-8]
   17768:	sub	r3, r2, r3
   1776c:	mov	r2, r3
   17770:	sub	r3, fp, #36	; 0x24
   17774:	sub	r0, fp, #40	; 0x28
   17778:	ldr	r1, [fp, #-8]
   1777c:	bl	21194 <__assert_fail@plt+0xfdb0>
   17780:	str	r0, [fp, #-16]
   17784:	ldr	r3, [fp, #-16]
   17788:	cmn	r3, #1
   1778c:	bne	177c4 <__assert_fail@plt+0x63e0>
   17790:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17794:	and	r3, r3, #1
   17798:	cmp	r3, #0
   1779c:	bne	177bc <__assert_fail@plt+0x63d8>
   177a0:	ldr	r3, [fp, #-8]
   177a4:	add	r3, r3, #1
   177a8:	str	r3, [fp, #-8]
   177ac:	ldr	r3, [fp, #-12]
   177b0:	add	r3, r3, #1
   177b4:	str	r3, [fp, #-12]
   177b8:	b	178d8 <__assert_fail@plt+0x64f4>
   177bc:	mvn	r3, #0
   177c0:	b	179e0 <__assert_fail@plt+0x65fc>
   177c4:	ldr	r3, [fp, #-16]
   177c8:	cmn	r3, #2
   177cc:	bne	17804 <__assert_fail@plt+0x6420>
   177d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   177d4:	and	r3, r3, #1
   177d8:	cmp	r3, #0
   177dc:	bne	177fc <__assert_fail@plt+0x6418>
   177e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177e4:	str	r3, [fp, #-8]
   177e8:	ldr	r3, [fp, #-12]
   177ec:	add	r3, r3, #1
   177f0:	str	r3, [fp, #-12]
   177f4:	nop	{0}
   177f8:	b	178d8 <__assert_fail@plt+0x64f4>
   177fc:	mvn	r3, #0
   17800:	b	179e0 <__assert_fail@plt+0x65fc>
   17804:	ldr	r3, [fp, #-16]
   17808:	cmp	r3, #0
   1780c:	bne	17818 <__assert_fail@plt+0x6434>
   17810:	mov	r3, #1
   17814:	str	r3, [fp, #-16]
   17818:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1781c:	mov	r0, r3
   17820:	bl	110fc <wcwidth@plt>
   17824:	str	r0, [fp, #-24]	; 0xffffffe8
   17828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1782c:	cmp	r3, #0
   17830:	blt	17864 <__assert_fail@plt+0x6480>
   17834:	ldr	r2, [fp, #-12]
   17838:	movw	r3, #65535	; 0xffff
   1783c:	movt	r3, #32767	; 0x7fff
   17840:	sub	r3, r3, r2
   17844:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17848:	cmp	r2, r3
   1784c:	bgt	179c0 <__assert_fail@plt+0x65dc>
   17850:	ldr	r2, [fp, #-12]
   17854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17858:	add	r3, r2, r3
   1785c:	str	r3, [fp, #-12]
   17860:	b	178b0 <__assert_fail@plt+0x64cc>
   17864:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17868:	and	r3, r3, #2
   1786c:	cmp	r3, #0
   17870:	bne	178a8 <__assert_fail@plt+0x64c4>
   17874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17878:	mov	r0, r3
   1787c:	bl	11198 <iswcntrl@plt>
   17880:	mov	r3, r0
   17884:	cmp	r3, #0
   17888:	bne	178b0 <__assert_fail@plt+0x64cc>
   1788c:	ldr	r3, [fp, #-12]
   17890:	cmn	r3, #-2147483647	; 0x80000001
   17894:	beq	179c8 <__assert_fail@plt+0x65e4>
   17898:	ldr	r3, [fp, #-12]
   1789c:	add	r3, r3, #1
   178a0:	str	r3, [fp, #-12]
   178a4:	b	178b0 <__assert_fail@plt+0x64cc>
   178a8:	mvn	r3, #0
   178ac:	b	179e0 <__assert_fail@plt+0x65fc>
   178b0:	ldr	r2, [fp, #-8]
   178b4:	ldr	r3, [fp, #-16]
   178b8:	add	r3, r2, r3
   178bc:	str	r3, [fp, #-8]
   178c0:	sub	r3, fp, #36	; 0x24
   178c4:	mov	r0, r3
   178c8:	bl	11144 <mbsinit@plt>
   178cc:	mov	r3, r0
   178d0:	cmp	r3, #0
   178d4:	beq	17760 <__assert_fail@plt+0x637c>
   178d8:	nop	{0}
   178dc:	ldr	r2, [fp, #-8]
   178e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   178e4:	cmp	r2, r3
   178e8:	bcc	176ec <__assert_fail@plt+0x6308>
   178ec:	ldr	r3, [fp, #-12]
   178f0:	b	179e0 <__assert_fail@plt+0x65fc>
   178f4:	ldr	r3, [fp, #-8]
   178f8:	add	r2, r3, #1
   178fc:	str	r2, [fp, #-8]
   17900:	ldrb	r3, [r3]
   17904:	strb	r3, [fp, #-25]	; 0xffffffe7
   17908:	bl	11270 <__ctype_b_loc@plt>
   1790c:	mov	r3, r0
   17910:	ldr	r2, [r3]
   17914:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   17918:	lsl	r3, r3, #1
   1791c:	add	r3, r2, r3
   17920:	ldrh	r3, [r3]
   17924:	and	r3, r3, #16384	; 0x4000
   17928:	cmp	r3, #0
   1792c:	beq	1794c <__assert_fail@plt+0x6568>
   17930:	ldr	r3, [fp, #-12]
   17934:	cmn	r3, #-2147483647	; 0x80000001
   17938:	beq	179d0 <__assert_fail@plt+0x65ec>
   1793c:	ldr	r3, [fp, #-12]
   17940:	add	r3, r3, #1
   17944:	str	r3, [fp, #-12]
   17948:	b	179a8 <__assert_fail@plt+0x65c4>
   1794c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17950:	and	r3, r3, #2
   17954:	cmp	r3, #0
   17958:	bne	179a0 <__assert_fail@plt+0x65bc>
   1795c:	bl	11270 <__ctype_b_loc@plt>
   17960:	mov	r3, r0
   17964:	ldr	r2, [r3]
   17968:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1796c:	lsl	r3, r3, #1
   17970:	add	r3, r2, r3
   17974:	ldrh	r3, [r3]
   17978:	and	r3, r3, #2
   1797c:	cmp	r3, #0
   17980:	bne	179a8 <__assert_fail@plt+0x65c4>
   17984:	ldr	r3, [fp, #-12]
   17988:	cmn	r3, #-2147483647	; 0x80000001
   1798c:	beq	179d8 <__assert_fail@plt+0x65f4>
   17990:	ldr	r3, [fp, #-12]
   17994:	add	r3, r3, #1
   17998:	str	r3, [fp, #-12]
   1799c:	b	179a8 <__assert_fail@plt+0x65c4>
   179a0:	mvn	r3, #0
   179a4:	b	179e0 <__assert_fail@plt+0x65fc>
   179a8:	ldr	r2, [fp, #-8]
   179ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   179b0:	cmp	r2, r3
   179b4:	bcc	178f4 <__assert_fail@plt+0x6510>
   179b8:	ldr	r3, [fp, #-12]
   179bc:	b	179e0 <__assert_fail@plt+0x65fc>
   179c0:	nop	{0}
   179c4:	b	179dc <__assert_fail@plt+0x65f8>
   179c8:	nop	{0}
   179cc:	b	179dc <__assert_fail@plt+0x65f8>
   179d0:	nop	{0}
   179d4:	b	179dc <__assert_fail@plt+0x65f8>
   179d8:	nop	{0}
   179dc:	mvn	r3, #-2147483648	; 0x80000000
   179e0:	mov	r0, r3
   179e4:	sub	sp, fp, #4
   179e8:	ldr	fp, [sp]
   179ec:	add	sp, sp, #4
   179f0:	pop	{pc}		; (ldr pc, [sp], #4)
   179f4:	str	fp, [sp, #-8]!
   179f8:	str	lr, [sp, #4]
   179fc:	add	fp, sp, #4
   17a00:	sub	sp, sp, #16
   17a04:	str	r0, [fp, #-8]
   17a08:	str	r1, [fp, #-12]
   17a0c:	str	r2, [fp, #-16]
   17a10:	b	17a44 <__assert_fail@plt+0x6660>
   17a14:	ldr	r2, [fp, #-12]
   17a18:	ldr	r3, [fp, #-16]
   17a1c:	add	r3, r2, r3
   17a20:	ldrb	r3, [r3]
   17a24:	mov	r0, r3
   17a28:	bl	11138 <tolower@plt>
   17a2c:	mov	r1, r0
   17a30:	ldr	r2, [fp, #-8]
   17a34:	ldr	r3, [fp, #-16]
   17a38:	add	r3, r2, r3
   17a3c:	uxtb	r2, r1
   17a40:	strb	r2, [r3]
   17a44:	ldr	r3, [fp, #-16]
   17a48:	sub	r2, r3, #1
   17a4c:	str	r2, [fp, #-16]
   17a50:	cmp	r3, #0
   17a54:	bne	17a14 <__assert_fail@plt+0x6630>
   17a58:	ldr	r3, [fp, #-8]
   17a5c:	mov	r0, r3
   17a60:	sub	sp, fp, #4
   17a64:	ldr	fp, [sp]
   17a68:	add	sp, sp, #4
   17a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a70:	str	fp, [sp, #-8]!
   17a74:	str	lr, [sp, #4]
   17a78:	add	fp, sp, #4
   17a7c:	sub	sp, sp, #16
   17a80:	str	r0, [fp, #-8]
   17a84:	str	r1, [fp, #-12]
   17a88:	str	r2, [fp, #-16]
   17a8c:	b	17ac0 <__assert_fail@plt+0x66dc>
   17a90:	ldr	r2, [fp, #-12]
   17a94:	ldr	r3, [fp, #-16]
   17a98:	add	r3, r2, r3
   17a9c:	ldrb	r3, [r3]
   17aa0:	mov	r0, r3
   17aa4:	bl	11348 <toupper@plt>
   17aa8:	mov	r1, r0
   17aac:	ldr	r2, [fp, #-8]
   17ab0:	ldr	r3, [fp, #-16]
   17ab4:	add	r3, r2, r3
   17ab8:	uxtb	r2, r1
   17abc:	strb	r2, [r3]
   17ac0:	ldr	r3, [fp, #-16]
   17ac4:	sub	r2, r3, #1
   17ac8:	str	r2, [fp, #-16]
   17acc:	cmp	r3, #0
   17ad0:	bne	17a90 <__assert_fail@plt+0x66ac>
   17ad4:	ldr	r3, [fp, #-8]
   17ad8:	mov	r0, r3
   17adc:	sub	sp, fp, #4
   17ae0:	ldr	fp, [sp]
   17ae4:	add	sp, sp, #4
   17ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   17aec:	push	{fp}		; (str fp, [sp, #-4]!)
   17af0:	add	fp, sp, #0
   17af4:	sub	sp, sp, #20
   17af8:	str	r0, [fp, #-16]
   17afc:	str	r1, [fp, #-20]	; 0xffffffec
   17b00:	movw	r3, #378	; 0x17a
   17b04:	str	r3, [fp, #-8]
   17b08:	ldr	r2, [fp, #-16]
   17b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b10:	sub	r3, r2, r3
   17b14:	add	r2, r3, #4
   17b18:	ldr	r3, [fp, #-8]
   17b1c:	add	r3, r2, r3
   17b20:	movw	r2, #9363	; 0x2493
   17b24:	movt	r2, #37449	; 0x9249
   17b28:	smull	r1, r2, r2, r3
   17b2c:	add	r2, r2, r3
   17b30:	asr	r1, r2, #2
   17b34:	asr	r2, r3, #31
   17b38:	sub	r1, r1, r2
   17b3c:	mov	r2, r1
   17b40:	lsl	r2, r2, #3
   17b44:	sub	r2, r2, r1
   17b48:	sub	r1, r3, r2
   17b4c:	ldr	r3, [fp, #-16]
   17b50:	sub	r3, r3, r1
   17b54:	add	r3, r3, #3
   17b58:	mov	r0, r3
   17b5c:	add	sp, fp, #0
   17b60:	pop	{fp}		; (ldr fp, [sp], #4)
   17b64:	bx	lr
   17b68:	str	fp, [sp, #-8]!
   17b6c:	str	lr, [sp, #4]
   17b70:	add	fp, sp, #4
   17b74:	sub	sp, sp, #48	; 0x30
   17b78:	str	r0, [fp, #-16]
   17b7c:	str	r1, [fp, #-20]	; 0xffffffec
   17b80:	str	r2, [fp, #-24]	; 0xffffffe8
   17b84:	str	r3, [fp, #-28]	; 0xffffffe4
   17b88:	mov	r3, #0
   17b8c:	strb	r3, [fp, #-5]
   17b90:	ldr	r3, [fp, #8]
   17b94:	str	r3, [sp, #20]
   17b98:	ldr	r3, [fp, #4]
   17b9c:	str	r3, [sp, #16]
   17ba0:	sub	r3, fp, #5
   17ba4:	str	r3, [sp, #12]
   17ba8:	mvn	r3, #0
   17bac:	str	r3, [sp, #8]
   17bb0:	mov	r3, #0
   17bb4:	str	r3, [sp, #4]
   17bb8:	mov	r3, #0
   17bbc:	str	r3, [sp]
   17bc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bcc:	ldr	r0, [fp, #-16]
   17bd0:	bl	17bec <__assert_fail@plt+0x6808>
   17bd4:	mov	r3, r0
   17bd8:	mov	r0, r3
   17bdc:	sub	sp, fp, #4
   17be0:	ldr	fp, [sp]
   17be4:	add	sp, sp, #4
   17be8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bec:	str	fp, [sp, #-8]!
   17bf0:	str	lr, [sp, #4]
   17bf4:	add	fp, sp, #4
   17bf8:	sub	sp, sp, #1456	; 0x5b0
   17bfc:	sub	sp, sp, #8
   17c00:	str	r0, [fp, #-1432]	; 0xfffffa68
   17c04:	str	r1, [fp, #-1436]	; 0xfffffa64
   17c08:	str	r2, [fp, #-1440]	; 0xfffffa60
   17c0c:	str	r3, [fp, #-1444]	; 0xfffffa5c
   17c10:	bl	112d0 <__errno_location@plt>
   17c14:	mov	r3, r0
   17c18:	ldr	r3, [r3]
   17c1c:	str	r3, [fp, #-116]	; 0xffffff8c
   17c20:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   17c24:	ldr	r3, [r3, #8]
   17c28:	str	r3, [fp, #-8]
   17c2c:	mov	r3, #0
   17c30:	str	r3, [fp, #-16]
   17c34:	ldr	r3, [fp, #-1432]	; 0xfffffa68
   17c38:	str	r3, [fp, #-20]	; 0xffffffec
   17c3c:	mov	r3, #0
   17c40:	str	r3, [fp, #-12]
   17c44:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   17c48:	ldr	r3, [r3, #40]	; 0x28
   17c4c:	str	r3, [fp, #-12]
   17c50:	ldr	r3, [fp, #-12]
   17c54:	cmp	r3, #0
   17c58:	bne	17c68 <__assert_fail@plt+0x6884>
   17c5c:	movw	r3, #13012	; 0x32d4
   17c60:	movt	r3, #2
   17c64:	str	r3, [fp, #-12]
   17c68:	ldr	r3, [fp, #-8]
   17c6c:	cmp	r3, #12
   17c70:	ble	17c84 <__assert_fail@plt+0x68a0>
   17c74:	ldr	r3, [fp, #-8]
   17c78:	sub	r3, r3, #12
   17c7c:	str	r3, [fp, #-8]
   17c80:	b	17c98 <__assert_fail@plt+0x68b4>
   17c84:	ldr	r3, [fp, #-8]
   17c88:	cmp	r3, #0
   17c8c:	bne	17c98 <__assert_fail@plt+0x68b4>
   17c90:	mov	r3, #12
   17c94:	str	r3, [fp, #-8]
   17c98:	ldr	r3, [fp, #-1440]	; 0xfffffa60
   17c9c:	str	r3, [fp, #-24]	; 0xffffffe8
   17ca0:	b	1a530 <__assert_fail@plt+0x914c>
   17ca4:	mov	r3, #0
   17ca8:	str	r3, [fp, #-28]	; 0xffffffe4
   17cac:	mov	r3, #0
   17cb0:	str	r3, [fp, #-36]	; 0xffffffdc
   17cb4:	mov	r3, #0
   17cb8:	strb	r3, [fp, #-61]	; 0xffffffc3
   17cbc:	ldrb	r3, [fp, #4]
   17cc0:	strb	r3, [fp, #-62]	; 0xffffffc2
   17cc4:	mov	r3, #0
   17cc8:	strb	r3, [fp, #-69]	; 0xffffffbb
   17ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cd0:	ldrb	r3, [r3]
   17cd4:	cmp	r3, #37	; 0x25
   17cd8:	beq	17e10 <__assert_fail@plt+0x6a2c>
   17cdc:	mov	r3, #1
   17ce0:	str	r3, [fp, #-120]	; 0xffffff88
   17ce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ce8:	cmp	r3, #45	; 0x2d
   17cec:	beq	17d04 <__assert_fail@plt+0x6920>
   17cf0:	ldr	r3, [fp, #12]
   17cf4:	cmp	r3, #0
   17cf8:	blt	17d04 <__assert_fail@plt+0x6920>
   17cfc:	ldr	r3, [fp, #12]
   17d00:	b	17d08 <__assert_fail@plt+0x6924>
   17d04:	mov	r3, #0
   17d08:	str	r3, [fp, #-124]	; 0xffffff84
   17d0c:	ldr	r2, [fp, #-120]	; 0xffffff88
   17d10:	ldr	r3, [fp, #-124]	; 0xffffff84
   17d14:	cmp	r2, r3
   17d18:	movcs	r3, r2
   17d1c:	movcc	r3, r3
   17d20:	str	r3, [fp, #-128]	; 0xffffff80
   17d24:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   17d28:	ldr	r3, [fp, #-16]
   17d2c:	sub	r3, r2, r3
   17d30:	ldr	r2, [fp, #-128]	; 0xffffff80
   17d34:	cmp	r2, r3
   17d38:	bcc	17d54 <__assert_fail@plt+0x6970>
   17d3c:	bl	112d0 <__errno_location@plt>
   17d40:	mov	r2, r0
   17d44:	mov	r3, #34	; 0x22
   17d48:	str	r3, [r2]
   17d4c:	mov	r3, #0
   17d50:	b	1a578 <__assert_fail@plt+0x9194>
   17d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d58:	cmp	r3, #0
   17d5c:	beq	17dfc <__assert_fail@plt+0x6a18>
   17d60:	ldr	r2, [fp, #-120]	; 0xffffff88
   17d64:	ldr	r3, [fp, #-124]	; 0xffffff84
   17d68:	cmp	r2, r3
   17d6c:	bcs	17ddc <__assert_fail@plt+0x69f8>
   17d70:	ldr	r2, [fp, #-124]	; 0xffffff84
   17d74:	ldr	r3, [fp, #-120]	; 0xffffff88
   17d78:	sub	r3, r2, r3
   17d7c:	str	r3, [fp, #-132]	; 0xffffff7c
   17d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d84:	cmp	r3, #48	; 0x30
   17d88:	beq	17d98 <__assert_fail@plt+0x69b4>
   17d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d90:	cmp	r3, #43	; 0x2b
   17d94:	bne	17dbc <__assert_fail@plt+0x69d8>
   17d98:	ldr	r2, [fp, #-132]	; 0xffffff7c
   17d9c:	mov	r1, #48	; 0x30
   17da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17da4:	bl	112e8 <memset@plt>
   17da8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17dac:	ldr	r3, [fp, #-132]	; 0xffffff7c
   17db0:	add	r3, r2, r3
   17db4:	str	r3, [fp, #-20]	; 0xffffffec
   17db8:	b	17ddc <__assert_fail@plt+0x69f8>
   17dbc:	ldr	r2, [fp, #-132]	; 0xffffff7c
   17dc0:	mov	r1, #32
   17dc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17dc8:	bl	112e8 <memset@plt>
   17dcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17dd0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   17dd4:	add	r3, r2, r3
   17dd8:	str	r3, [fp, #-20]	; 0xffffffec
   17ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17de0:	ldrb	r2, [r3]
   17de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17de8:	strb	r2, [r3]
   17dec:	ldr	r2, [fp, #-20]	; 0xffffffec
   17df0:	ldr	r3, [fp, #-120]	; 0xffffff88
   17df4:	add	r3, r2, r3
   17df8:	str	r3, [fp, #-20]	; 0xffffffec
   17dfc:	ldr	r2, [fp, #-16]
   17e00:	ldr	r3, [fp, #-128]	; 0xffffff80
   17e04:	add	r3, r2, r3
   17e08:	str	r3, [fp, #-16]
   17e0c:	b	1a51c <__assert_fail@plt+0x9138>
   17e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e14:	str	r3, [fp, #-136]	; 0xffffff78
   17e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e1c:	add	r3, r3, #1
   17e20:	str	r3, [fp, #-24]	; 0xffffffe8
   17e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e28:	ldrb	r3, [r3]
   17e2c:	sub	r3, r3, #35	; 0x23
   17e30:	cmp	r3, #60	; 0x3c
   17e34:	ldrls	pc, [pc, r3, lsl #2]
   17e38:	b	17f58 <__assert_fail@plt+0x6b74>
   17e3c:	andeq	r7, r1, ip, asr #30
   17e40:	andeq	r7, r1, r8, asr pc
   17e44:	andeq	r7, r1, r8, asr pc
   17e48:	andeq	r7, r1, r8, asr pc
   17e4c:	andeq	r7, r1, r8, asr pc
   17e50:	andeq	r7, r1, r8, asr pc
   17e54:	andeq	r7, r1, r8, asr pc
   17e58:	andeq	r7, r1, r8, asr pc
   17e5c:	andeq	r7, r1, r0, lsr pc
   17e60:	andeq	r7, r1, r8, asr pc
   17e64:	andeq	r7, r1, r0, lsr pc
   17e68:	andeq	r7, r1, r8, asr pc
   17e6c:	andeq	r7, r1, r8, asr pc
   17e70:	andeq	r7, r1, r0, lsr pc
   17e74:	andeq	r7, r1, r8, asr pc
   17e78:	andeq	r7, r1, r8, asr pc
   17e7c:	andeq	r7, r1, r8, asr pc
   17e80:	andeq	r7, r1, r8, asr pc
   17e84:	andeq	r7, r1, r8, asr pc
   17e88:	andeq	r7, r1, r8, asr pc
   17e8c:	andeq	r7, r1, r8, asr pc
   17e90:	andeq	r7, r1, r8, asr pc
   17e94:	andeq	r7, r1, r8, asr pc
   17e98:	andeq	r7, r1, r8, asr pc
   17e9c:	andeq	r7, r1, r8, asr pc
   17ea0:	andeq	r7, r1, r8, asr pc
   17ea4:	andeq	r7, r1, r8, asr pc
   17ea8:	andeq	r7, r1, r8, asr pc
   17eac:	andeq	r7, r1, r8, asr pc
   17eb0:	andeq	r7, r1, r8, asr pc
   17eb4:	andeq	r7, r1, r8, asr pc
   17eb8:	andeq	r7, r1, r8, asr pc
   17ebc:	andeq	r7, r1, r8, asr pc
   17ec0:	andeq	r7, r1, r8, asr pc
   17ec4:	andeq	r7, r1, r8, asr pc
   17ec8:	andeq	r7, r1, r8, asr pc
   17ecc:	andeq	r7, r1, r8, asr pc
   17ed0:	andeq	r7, r1, r8, asr pc
   17ed4:	andeq	r7, r1, r8, asr pc
   17ed8:	andeq	r7, r1, r8, asr pc
   17edc:	andeq	r7, r1, r8, asr pc
   17ee0:	andeq	r7, r1, r8, asr pc
   17ee4:	andeq	r7, r1, r8, asr pc
   17ee8:	andeq	r7, r1, r8, asr pc
   17eec:	andeq	r7, r1, r8, asr pc
   17ef0:	andeq	r7, r1, r8, asr pc
   17ef4:	andeq	r7, r1, r8, asr pc
   17ef8:	andeq	r7, r1, r8, asr pc
   17efc:	andeq	r7, r1, r8, asr pc
   17f00:	andeq	r7, r1, r8, asr pc
   17f04:	andeq	r7, r1, r8, asr pc
   17f08:	andeq	r7, r1, r8, asr pc
   17f0c:	andeq	r7, r1, r8, asr pc
   17f10:	andeq	r7, r1, r8, asr pc
   17f14:	andeq	r7, r1, r8, asr pc
   17f18:	andeq	r7, r1, r8, asr pc
   17f1c:	andeq	r7, r1, r8, asr pc
   17f20:	andeq	r7, r1, r8, asr pc
   17f24:	andeq	r7, r1, r8, asr pc
   17f28:	andeq	r7, r1, r0, asr #30
   17f2c:	andeq	r7, r1, r0, lsr pc
   17f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f34:	ldrb	r3, [r3]
   17f38:	str	r3, [fp, #-28]	; 0xffffffe4
   17f3c:	b	17f78 <__assert_fail@plt+0x6b94>
   17f40:	mov	r3, #1
   17f44:	strb	r3, [fp, #-62]	; 0xffffffc2
   17f48:	b	17f78 <__assert_fail@plt+0x6b94>
   17f4c:	mov	r3, #1
   17f50:	strb	r3, [fp, #-69]	; 0xffffffbb
   17f54:	b	17f78 <__assert_fail@plt+0x6b94>
   17f58:	nop	{0}
   17f5c:	nop	{0}
   17f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f64:	ldrb	r3, [r3]
   17f68:	sub	r3, r3, #48	; 0x30
   17f6c:	cmp	r3, #9
   17f70:	bhi	18030 <__assert_fail@plt+0x6c4c>
   17f74:	b	17f7c <__assert_fail@plt+0x6b98>
   17f78:	b	17e18 <__assert_fail@plt+0x6a34>
   17f7c:	mov	r3, #0
   17f80:	str	r3, [fp, #12]
   17f84:	ldr	r3, [fp, #12]
   17f88:	mov	lr, #0
   17f8c:	mov	r2, #10
   17f90:	smull	r2, r3, r3, r2
   17f94:	mov	r0, #0
   17f98:	mov	r1, #0
   17f9c:	mov	r0, r3
   17fa0:	asr	r1, r3, #31
   17fa4:	asr	ip, r2, #31
   17fa8:	cmp	ip, r0
   17fac:	beq	17fb4 <__assert_fail@plt+0x6bd0>
   17fb0:	mov	lr, #1
   17fb4:	mov	r3, r2
   17fb8:	str	r3, [fp, #12]
   17fbc:	mov	r3, lr
   17fc0:	and	r3, r3, #1
   17fc4:	uxtb	r3, r3
   17fc8:	cmp	r3, #0
   17fcc:	bne	18008 <__assert_fail@plt+0x6c24>
   17fd0:	ldr	r2, [fp, #12]
   17fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17fd8:	ldrb	r3, [r3]
   17fdc:	sub	r3, r3, #48	; 0x30
   17fe0:	mov	r1, #0
   17fe4:	adds	r3, r2, r3
   17fe8:	bvc	17ff0 <__assert_fail@plt+0x6c0c>
   17fec:	mov	r1, #1
   17ff0:	str	r3, [fp, #12]
   17ff4:	mov	r3, r1
   17ff8:	and	r3, r3, #1
   17ffc:	uxtb	r3, r3
   18000:	cmp	r3, #0
   18004:	beq	18010 <__assert_fail@plt+0x6c2c>
   18008:	mvn	r3, #-2147483648	; 0x80000000
   1800c:	str	r3, [fp, #12]
   18010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18014:	add	r3, r3, #1
   18018:	str	r3, [fp, #-24]	; 0xffffffe8
   1801c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18020:	ldrb	r3, [r3]
   18024:	sub	r3, r3, #48	; 0x30
   18028:	cmp	r3, #9
   1802c:	bls	17f84 <__assert_fail@plt+0x6ba0>
   18030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18034:	ldrb	r3, [r3]
   18038:	cmp	r3, #69	; 0x45
   1803c:	beq	18048 <__assert_fail@plt+0x6c64>
   18040:	cmp	r3, #79	; 0x4f
   18044:	bne	18060 <__assert_fail@plt+0x6c7c>
   18048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1804c:	add	r2, r3, #1
   18050:	str	r2, [fp, #-24]	; 0xffffffe8
   18054:	ldrb	r3, [r3]
   18058:	str	r3, [fp, #-32]	; 0xffffffe0
   1805c:	b	1806c <__assert_fail@plt+0x6c88>
   18060:	mov	r3, #0
   18064:	str	r3, [fp, #-32]	; 0xffffffe0
   18068:	nop	{0}
   1806c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18070:	ldrb	r3, [r3]
   18074:	str	r3, [fp, #-76]	; 0xffffffb4
   18078:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1807c:	cmp	r3, #122	; 0x7a
   18080:	ldrls	pc, [pc, r3, lsl #2]
   18084:	b	1a38c <__assert_fail@plt+0x8fa8>
   18088:	andeq	sl, r1, r8, asr #5
   1808c:	andeq	sl, r1, ip, lsl #7
   18090:	andeq	sl, r1, ip, lsl #7
   18094:	andeq	sl, r1, ip, lsl #7
   18098:	andeq	sl, r1, ip, lsl #7
   1809c:	andeq	sl, r1, ip, lsl #7
   180a0:	andeq	sl, r1, ip, lsl #7
   180a4:	andeq	sl, r1, ip, lsl #7
   180a8:	andeq	sl, r1, ip, lsl #7
   180ac:	andeq	sl, r1, ip, lsl #7
   180b0:	andeq	sl, r1, ip, lsl #7
   180b4:	andeq	sl, r1, ip, lsl #7
   180b8:	andeq	sl, r1, ip, lsl #7
   180bc:	andeq	sl, r1, ip, lsl #7
   180c0:	andeq	sl, r1, ip, lsl #7
   180c4:	andeq	sl, r1, ip, lsl #7
   180c8:	andeq	sl, r1, ip, lsl #7
   180cc:	andeq	sl, r1, ip, lsl #7
   180d0:	andeq	sl, r1, ip, lsl #7
   180d4:	andeq	sl, r1, ip, lsl #7
   180d8:	andeq	sl, r1, ip, lsl #7
   180dc:	andeq	sl, r1, ip, lsl #7
   180e0:	andeq	sl, r1, ip, lsl #7
   180e4:	andeq	sl, r1, ip, lsl #7
   180e8:	andeq	sl, r1, ip, lsl #7
   180ec:	andeq	sl, r1, ip, lsl #7
   180f0:	andeq	sl, r1, ip, lsl #7
   180f4:	andeq	sl, r1, ip, lsl #7
   180f8:	andeq	sl, r1, ip, lsl #7
   180fc:	andeq	sl, r1, ip, lsl #7
   18100:	andeq	sl, r1, ip, lsl #7
   18104:	andeq	sl, r1, ip, lsl #7
   18108:	andeq	sl, r1, ip, lsl #7
   1810c:	andeq	sl, r1, ip, lsl #7
   18110:	andeq	sl, r1, ip, lsl #7
   18114:	andeq	sl, r1, ip, lsl #7
   18118:	andeq	sl, r1, ip, lsl #7
   1811c:	andeq	r8, r1, r4, ror r2
   18120:	andeq	sl, r1, ip, lsl #7
   18124:	andeq	sl, r1, ip, lsl #7
   18128:	andeq	sl, r1, ip, lsl #7
   1812c:	andeq	sl, r1, ip, lsl #7
   18130:	andeq	sl, r1, ip, lsl #7
   18134:	andeq	sl, r1, ip, lsl #7
   18138:	andeq	sl, r1, ip, lsl #7
   1813c:	andeq	sl, r1, ip, lsl #7
   18140:	andeq	sl, r1, ip, lsl #7
   18144:	andeq	sl, r1, ip, lsl #7
   18148:	andeq	sl, r1, ip, lsl #7
   1814c:	andeq	sl, r1, ip, lsl #7
   18150:	andeq	sl, r1, ip, lsl #7
   18154:	andeq	sl, r1, ip, lsl #7
   18158:	andeq	sl, r1, ip, lsl #7
   1815c:	andeq	sl, r1, ip, lsl #7
   18160:	andeq	sl, r1, ip, lsl #7
   18164:	andeq	sl, r1, ip, lsl #7
   18168:	andeq	sl, r1, ip, lsl #7
   1816c:	andeq	sl, r1, ip, lsl #7
   18170:	andeq	sl, r1, r0, rrx
   18174:	andeq	sl, r1, ip, lsl #7
   18178:	andeq	sl, r1, ip, lsl #7
   1817c:	andeq	sl, r1, ip, lsl #7
   18180:	andeq	sl, r1, ip, lsl #7
   18184:	andeq	sl, r1, ip, lsl #7
   18188:	andeq	sl, r1, ip, lsl #7
   1818c:	andeq	r8, r1, r8, ror #7
   18190:	andeq	r8, r1, r0, asr #8
   18194:	ldrdeq	r8, [r1], -ip
   18198:	andeq	r8, r1, r0, lsr #19
   1819c:	andeq	sl, r1, ip, lsl #7
   181a0:	andeq	r8, r1, r8, ror #30
   181a4:	strdeq	r9, [r1], -r0
   181a8:	ldrdeq	r8, [r1], -r0
   181ac:	strdeq	r8, [r1], -r4
   181b0:	andeq	sl, r1, ip, lsl #7
   181b4:	andeq	sl, r1, ip, lsl #7
   181b8:	andeq	sl, r1, ip, lsl #7
   181bc:	muleq	r1, r8, r0
   181c0:	strdeq	r9, [r1], -ip
   181c4:	andeq	sl, r1, ip, lsl #7
   181c8:	andeq	r9, r1, r0, lsr #12
   181cc:	andeq	sl, r1, ip, lsl #7
   181d0:	andeq	r9, r1, r0, lsl #13
   181d4:	muleq	r1, r0, r6
   181d8:	andeq	r9, r1, r4, lsl r8
   181dc:	andeq	r9, r1, r0, lsr #19
   181e0:	strdeq	r9, [r1], -r0
   181e4:	andeq	r9, r1, ip, lsr sp
   181e8:	andeq	r9, r1, r4, lsl #16
   181ec:	andeq	r9, r1, r0, ror #27
   181f0:	andeq	r9, r1, ip, asr #29
   181f4:	andeq	sl, r1, ip, lsl #7
   181f8:	andeq	sl, r1, ip, lsl #7
   181fc:	andeq	sl, r1, ip, lsl #7
   18200:	andeq	sl, r1, ip, lsl #7
   18204:	andeq	sl, r1, ip, lsl #7
   18208:	andeq	sl, r1, ip, lsl #7
   1820c:			; <UNDEFINED> instruction: 0x000183bc
   18210:	andeq	r8, r1, r4, lsl r4
   18214:	andeq	r8, r1, ip, ror #8
   18218:			; <UNDEFINED> instruction: 0x000189bc
   1821c:	andeq	r8, r1, r0, ror #19
   18220:	andeq	sl, r1, ip, lsl #7
   18224:	strdeq	r9, [r1], -r0
   18228:	andeq	r8, r1, r4, lsl r4
   1822c:	andeq	sl, r1, ip, lsl #7
   18230:	andeq	r9, r1, r8, asr r0
   18234:	andeq	r9, r1, r4, lsl r0
   18238:	andeq	r9, r1, r8, lsr r0
   1823c:	strheq	r9, [r1], -ip
   18240:	strdeq	r9, [r1], -r0
   18244:	andeq	sl, r1, ip, lsl #7
   18248:	andeq	r9, r1, r0, lsr r6
   1824c:	andeq	r9, r1, r0, asr r6
   18250:	andeq	r8, r1, ip, lsr r6
   18254:			; <UNDEFINED> instruction: 0x000196b4
   18258:	andeq	r9, r1, r4, lsr #16
   1825c:	andeq	r9, r1, r4, asr r9
   18260:	andeq	sl, r1, ip, lsl #7
   18264:			; <UNDEFINED> instruction: 0x00019dbc
   18268:	muleq	r1, r0, r9
   1826c:	andeq	r9, r1, r8, lsr lr
   18270:	strheq	sl, [r1], -ip
   18274:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18278:	sub	r3, r3, #1
   1827c:	ldr	r2, [fp, #-136]	; 0xffffff78
   18280:	cmp	r2, r3
   18284:	bne	1a2c4 <__assert_fail@plt+0x8ee0>
   18288:	mov	r3, #1
   1828c:	str	r3, [fp, #-140]	; 0xffffff74
   18290:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18294:	cmp	r3, #45	; 0x2d
   18298:	beq	182b0 <__assert_fail@plt+0x6ecc>
   1829c:	ldr	r3, [fp, #12]
   182a0:	cmp	r3, #0
   182a4:	blt	182b0 <__assert_fail@plt+0x6ecc>
   182a8:	ldr	r3, [fp, #12]
   182ac:	b	182b4 <__assert_fail@plt+0x6ed0>
   182b0:	mov	r3, #0
   182b4:	str	r3, [fp, #-144]	; 0xffffff70
   182b8:	ldr	r2, [fp, #-140]	; 0xffffff74
   182bc:	ldr	r3, [fp, #-144]	; 0xffffff70
   182c0:	cmp	r2, r3
   182c4:	movcs	r3, r2
   182c8:	movcc	r3, r3
   182cc:	str	r3, [fp, #-148]	; 0xffffff6c
   182d0:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   182d4:	ldr	r3, [fp, #-16]
   182d8:	sub	r3, r2, r3
   182dc:	ldr	r2, [fp, #-148]	; 0xffffff6c
   182e0:	cmp	r2, r3
   182e4:	bcc	18300 <__assert_fail@plt+0x6f1c>
   182e8:	bl	112d0 <__errno_location@plt>
   182ec:	mov	r2, r0
   182f0:	mov	r3, #34	; 0x22
   182f4:	str	r3, [r2]
   182f8:	mov	r3, #0
   182fc:	b	1a578 <__assert_fail@plt+0x9194>
   18300:	ldr	r3, [fp, #-20]	; 0xffffffec
   18304:	cmp	r3, #0
   18308:	beq	183a8 <__assert_fail@plt+0x6fc4>
   1830c:	ldr	r2, [fp, #-140]	; 0xffffff74
   18310:	ldr	r3, [fp, #-144]	; 0xffffff70
   18314:	cmp	r2, r3
   18318:	bcs	18388 <__assert_fail@plt+0x6fa4>
   1831c:	ldr	r2, [fp, #-144]	; 0xffffff70
   18320:	ldr	r3, [fp, #-140]	; 0xffffff74
   18324:	sub	r3, r2, r3
   18328:	str	r3, [fp, #-152]	; 0xffffff68
   1832c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18330:	cmp	r3, #48	; 0x30
   18334:	beq	18344 <__assert_fail@plt+0x6f60>
   18338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1833c:	cmp	r3, #43	; 0x2b
   18340:	bne	18368 <__assert_fail@plt+0x6f84>
   18344:	ldr	r2, [fp, #-152]	; 0xffffff68
   18348:	mov	r1, #48	; 0x30
   1834c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18350:	bl	112e8 <memset@plt>
   18354:	ldr	r2, [fp, #-20]	; 0xffffffec
   18358:	ldr	r3, [fp, #-152]	; 0xffffff68
   1835c:	add	r3, r2, r3
   18360:	str	r3, [fp, #-20]	; 0xffffffec
   18364:	b	18388 <__assert_fail@plt+0x6fa4>
   18368:	ldr	r2, [fp, #-152]	; 0xffffff68
   1836c:	mov	r1, #32
   18370:	ldr	r0, [fp, #-20]	; 0xffffffec
   18374:	bl	112e8 <memset@plt>
   18378:	ldr	r2, [fp, #-20]	; 0xffffffec
   1837c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18380:	add	r3, r2, r3
   18384:	str	r3, [fp, #-20]	; 0xffffffec
   18388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1838c:	ldrb	r2, [r3]
   18390:	ldr	r3, [fp, #-20]	; 0xffffffec
   18394:	strb	r2, [r3]
   18398:	ldr	r2, [fp, #-20]	; 0xffffffec
   1839c:	ldr	r3, [fp, #-140]	; 0xffffff74
   183a0:	add	r3, r2, r3
   183a4:	str	r3, [fp, #-20]	; 0xffffffec
   183a8:	ldr	r2, [fp, #-16]
   183ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   183b0:	add	r3, r2, r3
   183b4:	str	r3, [fp, #-16]
   183b8:	b	1a51c <__assert_fail@plt+0x9138>
   183bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   183c0:	cmp	r3, #0
   183c4:	bne	1a2d8 <__assert_fail@plt+0x8ef4>
   183c8:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   183cc:	cmp	r3, #0
   183d0:	beq	18644 <__assert_fail@plt+0x7260>
   183d4:	mov	r3, #1
   183d8:	strb	r3, [fp, #-62]	; 0xffffffc2
   183dc:	mov	r3, #0
   183e0:	strb	r3, [fp, #-61]	; 0xffffffc3
   183e4:	b	18644 <__assert_fail@plt+0x7260>
   183e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   183ec:	cmp	r3, #0
   183f0:	bne	1a2e0 <__assert_fail@plt+0x8efc>
   183f4:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   183f8:	cmp	r3, #0
   183fc:	beq	1864c <__assert_fail@plt+0x7268>
   18400:	mov	r3, #1
   18404:	strb	r3, [fp, #-62]	; 0xffffffc2
   18408:	mov	r3, #0
   1840c:	strb	r3, [fp, #-61]	; 0xffffffc3
   18410:	b	1864c <__assert_fail@plt+0x7268>
   18414:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   18418:	cmp	r3, #0
   1841c:	beq	18430 <__assert_fail@plt+0x704c>
   18420:	mov	r3, #1
   18424:	strb	r3, [fp, #-62]	; 0xffffffc2
   18428:	mov	r3, #0
   1842c:	strb	r3, [fp, #-61]	; 0xffffffc3
   18430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18434:	cmp	r3, #69	; 0x45
   18438:	bne	18654 <__assert_fail@plt+0x7270>
   1843c:	b	1a38c <__assert_fail@plt+0x8fa8>
   18440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18444:	cmp	r3, #69	; 0x45
   18448:	beq	1a2e8 <__assert_fail@plt+0x8f04>
   1844c:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   18450:	cmp	r3, #0
   18454:	beq	1865c <__assert_fail@plt+0x7278>
   18458:	mov	r3, #1
   1845c:	strb	r3, [fp, #-62]	; 0xffffffc2
   18460:	mov	r3, #0
   18464:	strb	r3, [fp, #-61]	; 0xffffffc3
   18468:	b	1865c <__assert_fail@plt+0x7278>
   1846c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18470:	cmp	r3, #79	; 0x4f
   18474:	bne	18664 <__assert_fail@plt+0x7280>
   18478:	b	1a38c <__assert_fail@plt+0x8fa8>
   1847c:	mvn	r3, #0
   18480:	str	r3, [fp, #-80]	; 0xffffffb0
   18484:	ldr	r3, [fp, #24]
   18488:	str	r3, [sp, #20]
   1848c:	ldr	r3, [fp, #20]
   18490:	str	r3, [sp, #16]
   18494:	ldr	r3, [fp, #16]
   18498:	str	r3, [sp, #12]
   1849c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   184a0:	str	r3, [sp, #8]
   184a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   184a8:	str	r3, [sp, #4]
   184ac:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   184b0:	str	r3, [sp]
   184b4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   184b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   184bc:	mvn	r1, #0
   184c0:	mov	r0, #0
   184c4:	bl	17bec <__assert_fail@plt+0x6808>
   184c8:	str	r0, [fp, #-156]	; 0xffffff64
   184cc:	ldr	r3, [fp, #-156]	; 0xffffff64
   184d0:	str	r3, [fp, #-160]	; 0xffffff60
   184d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   184d8:	cmp	r3, #45	; 0x2d
   184dc:	beq	184f4 <__assert_fail@plt+0x7110>
   184e0:	ldr	r3, [fp, #12]
   184e4:	cmp	r3, #0
   184e8:	blt	184f4 <__assert_fail@plt+0x7110>
   184ec:	ldr	r3, [fp, #12]
   184f0:	b	184f8 <__assert_fail@plt+0x7114>
   184f4:	mov	r3, #0
   184f8:	str	r3, [fp, #-164]	; 0xffffff5c
   184fc:	ldr	r2, [fp, #-160]	; 0xffffff60
   18500:	ldr	r3, [fp, #-164]	; 0xffffff5c
   18504:	cmp	r2, r3
   18508:	movcs	r3, r2
   1850c:	movcc	r3, r3
   18510:	str	r3, [fp, #-168]	; 0xffffff58
   18514:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   18518:	ldr	r3, [fp, #-16]
   1851c:	sub	r3, r2, r3
   18520:	ldr	r2, [fp, #-168]	; 0xffffff58
   18524:	cmp	r2, r3
   18528:	bcc	18544 <__assert_fail@plt+0x7160>
   1852c:	bl	112d0 <__errno_location@plt>
   18530:	mov	r2, r0
   18534:	mov	r3, #34	; 0x22
   18538:	str	r3, [r2]
   1853c:	mov	r3, #0
   18540:	b	1a578 <__assert_fail@plt+0x9194>
   18544:	ldr	r3, [fp, #-20]	; 0xffffffec
   18548:	cmp	r3, #0
   1854c:	beq	18628 <__assert_fail@plt+0x7244>
   18550:	ldr	r2, [fp, #-160]	; 0xffffff60
   18554:	ldr	r3, [fp, #-164]	; 0xffffff5c
   18558:	cmp	r2, r3
   1855c:	bcs	185cc <__assert_fail@plt+0x71e8>
   18560:	ldr	r2, [fp, #-164]	; 0xffffff5c
   18564:	ldr	r3, [fp, #-160]	; 0xffffff60
   18568:	sub	r3, r2, r3
   1856c:	str	r3, [fp, #-172]	; 0xffffff54
   18570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18574:	cmp	r3, #48	; 0x30
   18578:	beq	18588 <__assert_fail@plt+0x71a4>
   1857c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18580:	cmp	r3, #43	; 0x2b
   18584:	bne	185ac <__assert_fail@plt+0x71c8>
   18588:	ldr	r2, [fp, #-172]	; 0xffffff54
   1858c:	mov	r1, #48	; 0x30
   18590:	ldr	r0, [fp, #-20]	; 0xffffffec
   18594:	bl	112e8 <memset@plt>
   18598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1859c:	ldr	r3, [fp, #-172]	; 0xffffff54
   185a0:	add	r3, r2, r3
   185a4:	str	r3, [fp, #-20]	; 0xffffffec
   185a8:	b	185cc <__assert_fail@plt+0x71e8>
   185ac:	ldr	r2, [fp, #-172]	; 0xffffff54
   185b0:	mov	r1, #32
   185b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   185b8:	bl	112e8 <memset@plt>
   185bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   185c0:	ldr	r3, [fp, #-172]	; 0xffffff54
   185c4:	add	r3, r2, r3
   185c8:	str	r3, [fp, #-20]	; 0xffffffec
   185cc:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   185d0:	ldr	r3, [fp, #-16]
   185d4:	sub	r1, r2, r3
   185d8:	ldr	r3, [fp, #24]
   185dc:	str	r3, [sp, #20]
   185e0:	ldr	r3, [fp, #20]
   185e4:	str	r3, [sp, #16]
   185e8:	ldr	r3, [fp, #16]
   185ec:	str	r3, [sp, #12]
   185f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   185f4:	str	r3, [sp, #8]
   185f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   185fc:	str	r3, [sp, #4]
   18600:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   18604:	str	r3, [sp]
   18608:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   1860c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18610:	ldr	r0, [fp, #-20]	; 0xffffffec
   18614:	bl	17bec <__assert_fail@plt+0x6808>
   18618:	ldr	r2, [fp, #-20]	; 0xffffffec
   1861c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18620:	add	r3, r2, r3
   18624:	str	r3, [fp, #-20]	; 0xffffffec
   18628:	ldr	r2, [fp, #-16]
   1862c:	ldr	r3, [fp, #-168]	; 0xffffff58
   18630:	add	r3, r2, r3
   18634:	str	r3, [fp, #-16]
   18638:	b	1a51c <__assert_fail@plt+0x9138>
   1863c:	nop	{0}
   18640:	b	186a0 <__assert_fail@plt+0x72bc>
   18644:	nop	{0}
   18648:	b	186a0 <__assert_fail@plt+0x72bc>
   1864c:	nop	{0}
   18650:	b	186a0 <__assert_fail@plt+0x72bc>
   18654:	nop	{0}
   18658:	b	186a0 <__assert_fail@plt+0x72bc>
   1865c:	nop	{0}
   18660:	b	186a0 <__assert_fail@plt+0x72bc>
   18664:	nop	{0}
   18668:	b	186a0 <__assert_fail@plt+0x72bc>
   1866c:	nop	{0}
   18670:	b	186a0 <__assert_fail@plt+0x72bc>
   18674:	nop	{0}
   18678:	b	186a0 <__assert_fail@plt+0x72bc>
   1867c:	nop	{0}
   18680:	b	186a0 <__assert_fail@plt+0x72bc>
   18684:	nop	{0}
   18688:	b	186a0 <__assert_fail@plt+0x72bc>
   1868c:	nop	{0}
   18690:	b	186a0 <__assert_fail@plt+0x72bc>
   18694:	nop	{0}
   18698:	b	186a0 <__assert_fail@plt+0x72bc>
   1869c:	nop	{0}
   186a0:	sub	r3, fp, #404	; 0x194
   186a4:	str	r3, [fp, #-84]	; 0xffffffac
   186a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   186ac:	add	r2, r3, #1
   186b0:	str	r2, [fp, #-84]	; 0xffffffac
   186b4:	mov	r2, #32
   186b8:	strb	r2, [r3]
   186bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   186c0:	add	r2, r3, #1
   186c4:	str	r2, [fp, #-84]	; 0xffffffac
   186c8:	mov	r2, #37	; 0x25
   186cc:	strb	r2, [r3]
   186d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   186d4:	cmp	r3, #0
   186d8:	beq	186f4 <__assert_fail@plt+0x7310>
   186dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   186e0:	add	r2, r3, #1
   186e4:	str	r2, [fp, #-84]	; 0xffffffac
   186e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   186ec:	uxtb	r2, r2
   186f0:	strb	r2, [r3]
   186f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   186f8:	add	r2, r3, #1
   186fc:	str	r2, [fp, #-84]	; 0xffffffac
   18700:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18704:	uxtb	r2, r2
   18708:	strb	r2, [r3]
   1870c:	ldr	r3, [fp, #-84]	; 0xffffffac
   18710:	mov	r2, #0
   18714:	strb	r2, [r3]
   18718:	sub	r2, fp, #404	; 0x194
   1871c:	sub	r0, fp, #1424	; 0x590
   18720:	sub	r0, r0, #4
   18724:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   18728:	mov	r1, #1024	; 0x400
   1872c:	bl	11240 <strftime@plt>
   18730:	str	r0, [fp, #-176]	; 0xffffff50
   18734:	ldr	r3, [fp, #-176]	; 0xffffff50
   18738:	cmp	r3, #0
   1873c:	beq	1a510 <__assert_fail@plt+0x912c>
   18740:	ldr	r3, [fp, #-176]	; 0xffffff50
   18744:	sub	r3, r3, #1
   18748:	str	r3, [fp, #-180]	; 0xffffff4c
   1874c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18750:	cmp	r3, #45	; 0x2d
   18754:	beq	1876c <__assert_fail@plt+0x7388>
   18758:	ldr	r3, [fp, #12]
   1875c:	cmp	r3, #0
   18760:	blt	1876c <__assert_fail@plt+0x7388>
   18764:	ldr	r3, [fp, #12]
   18768:	b	18770 <__assert_fail@plt+0x738c>
   1876c:	mov	r3, #0
   18770:	str	r3, [fp, #-184]	; 0xffffff48
   18774:	ldr	r2, [fp, #-180]	; 0xffffff4c
   18778:	ldr	r3, [fp, #-184]	; 0xffffff48
   1877c:	cmp	r2, r3
   18780:	movcs	r3, r2
   18784:	movcc	r3, r3
   18788:	str	r3, [fp, #-188]	; 0xffffff44
   1878c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   18790:	ldr	r3, [fp, #-16]
   18794:	sub	r3, r2, r3
   18798:	ldr	r2, [fp, #-188]	; 0xffffff44
   1879c:	cmp	r2, r3
   187a0:	bcc	187bc <__assert_fail@plt+0x73d8>
   187a4:	bl	112d0 <__errno_location@plt>
   187a8:	mov	r2, r0
   187ac:	mov	r3, #34	; 0x22
   187b0:	str	r3, [r2]
   187b4:	mov	r3, #0
   187b8:	b	1a578 <__assert_fail@plt+0x9194>
   187bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   187c0:	cmp	r3, #0
   187c4:	beq	188c8 <__assert_fail@plt+0x74e4>
   187c8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   187cc:	ldr	r3, [fp, #-184]	; 0xffffff48
   187d0:	cmp	r2, r3
   187d4:	bcs	18844 <__assert_fail@plt+0x7460>
   187d8:	ldr	r2, [fp, #-184]	; 0xffffff48
   187dc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   187e0:	sub	r3, r2, r3
   187e4:	str	r3, [fp, #-192]	; 0xffffff40
   187e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   187ec:	cmp	r3, #48	; 0x30
   187f0:	beq	18800 <__assert_fail@plt+0x741c>
   187f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   187f8:	cmp	r3, #43	; 0x2b
   187fc:	bne	18824 <__assert_fail@plt+0x7440>
   18800:	ldr	r2, [fp, #-192]	; 0xffffff40
   18804:	mov	r1, #48	; 0x30
   18808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1880c:	bl	112e8 <memset@plt>
   18810:	ldr	r2, [fp, #-20]	; 0xffffffec
   18814:	ldr	r3, [fp, #-192]	; 0xffffff40
   18818:	add	r3, r2, r3
   1881c:	str	r3, [fp, #-20]	; 0xffffffec
   18820:	b	18844 <__assert_fail@plt+0x7460>
   18824:	ldr	r2, [fp, #-192]	; 0xffffff40
   18828:	mov	r1, #32
   1882c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18830:	bl	112e8 <memset@plt>
   18834:	ldr	r2, [fp, #-20]	; 0xffffffec
   18838:	ldr	r3, [fp, #-192]	; 0xffffff40
   1883c:	add	r3, r2, r3
   18840:	str	r3, [fp, #-20]	; 0xffffffec
   18844:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   18848:	cmp	r3, #0
   1884c:	beq	18870 <__assert_fail@plt+0x748c>
   18850:	sub	r3, fp, #1424	; 0x590
   18854:	sub	r3, r3, #4
   18858:	add	r3, r3, #1
   1885c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   18860:	mov	r1, r3
   18864:	ldr	r0, [fp, #-20]	; 0xffffffec
   18868:	bl	179f4 <__assert_fail@plt+0x6610>
   1886c:	b	188b8 <__assert_fail@plt+0x74d4>
   18870:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   18874:	cmp	r3, #0
   18878:	beq	1889c <__assert_fail@plt+0x74b8>
   1887c:	sub	r3, fp, #1424	; 0x590
   18880:	sub	r3, r3, #4
   18884:	add	r3, r3, #1
   18888:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1888c:	mov	r1, r3
   18890:	ldr	r0, [fp, #-20]	; 0xffffffec
   18894:	bl	17a70 <__assert_fail@plt+0x668c>
   18898:	b	188b8 <__assert_fail@plt+0x74d4>
   1889c:	sub	r3, fp, #1424	; 0x590
   188a0:	sub	r3, r3, #4
   188a4:	add	r3, r3, #1
   188a8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   188ac:	mov	r1, r3
   188b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   188b4:	bl	1112c <memcpy@plt>
   188b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   188bc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   188c0:	add	r3, r2, r3
   188c4:	str	r3, [fp, #-20]	; 0xffffffec
   188c8:	ldr	r2, [fp, #-16]
   188cc:	ldr	r3, [fp, #-188]	; 0xffffff44
   188d0:	add	r3, r2, r3
   188d4:	str	r3, [fp, #-16]
   188d8:	b	1a510 <__assert_fail@plt+0x912c>
   188dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188e0:	cmp	r3, #69	; 0x45
   188e4:	beq	1866c <__assert_fail@plt+0x7288>
   188e8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   188ec:	ldr	r2, [r3, #20]
   188f0:	movw	r3, #63636	; 0xf894
   188f4:	movt	r3, #65535	; 0xffff
   188f8:	cmp	r2, r3
   188fc:	movlt	r3, #1
   18900:	movge	r3, #0
   18904:	strb	r3, [fp, #-193]	; 0xffffff3f
   18908:	ldrb	r3, [fp, #-193]	; 0xffffff3f
   1890c:	eor	r3, r3, #1
   18910:	uxtb	r3, r3
   18914:	mov	r2, r3
   18918:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   1891c:	ldr	r3, [r3, #20]
   18920:	lsr	r3, r3, #31
   18924:	uxtb	r3, r3
   18928:	and	r3, r3, r2
   1892c:	cmp	r3, #0
   18930:	movne	r3, #1
   18934:	moveq	r3, #0
   18938:	strb	r3, [fp, #-194]	; 0xffffff3e
   1893c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   18940:	ldr	r2, [r3, #20]
   18944:	ldrb	r3, [fp, #-194]	; 0xffffff3e
   18948:	mvn	r1, #98	; 0x62
   1894c:	mul	r3, r1, r3
   18950:	add	r2, r2, r3
   18954:	movw	r3, #34079	; 0x851f
   18958:	movt	r3, #20971	; 0x51eb
   1895c:	smull	r1, r3, r3, r2
   18960:	asr	r1, r3, #5
   18964:	asr	r3, r2, #31
   18968:	sub	r3, r1, r3
   1896c:	add	r3, r3, #19
   18970:	str	r3, [fp, #-200]	; 0xffffff38
   18974:	mov	r3, #2
   18978:	str	r3, [fp, #-36]	; 0xffffffdc
   1897c:	ldrb	r3, [fp, #-193]	; 0xffffff3f
   18980:	strb	r3, [fp, #-45]	; 0xffffffd3
   18984:	ldr	r3, [fp, #-200]	; 0xffffff38
   18988:	str	r3, [fp, #-44]	; 0xffffffd4
   1898c:	b	18a10 <__assert_fail@plt+0x762c>
   18990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18994:	cmp	r3, #79	; 0x4f
   18998:	bne	18674 <__assert_fail@plt+0x7290>
   1899c:	b	1a38c <__assert_fail@plt+0x8fa8>
   189a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189a4:	cmp	r3, #0
   189a8:	bne	1a2f0 <__assert_fail@plt+0x8f0c>
   189ac:	movw	r3, #13016	; 0x32d8
   189b0:	movt	r3, #2
   189b4:	str	r3, [fp, #-56]	; 0xffffffc8
   189b8:	b	1847c <__assert_fail@plt+0x7098>
   189bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189c0:	cmp	r3, #69	; 0x45
   189c4:	beq	1a2f8 <__assert_fail@plt+0x8f14>
   189c8:	mov	r3, #2
   189cc:	str	r3, [fp, #-36]	; 0xffffffdc
   189d0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   189d4:	ldr	r3, [r3, #12]
   189d8:	str	r3, [fp, #-40]	; 0xffffffd8
   189dc:	b	18aa0 <__assert_fail@plt+0x76bc>
   189e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189e4:	cmp	r3, #69	; 0x45
   189e8:	beq	1a300 <__assert_fail@plt+0x8f1c>
   189ec:	mov	r3, #2
   189f0:	str	r3, [fp, #-36]	; 0xffffffdc
   189f4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   189f8:	ldr	r3, [r3, #12]
   189fc:	str	r3, [fp, #-40]	; 0xffffffd8
   18a00:	b	18a84 <__assert_fail@plt+0x76a0>
   18a04:	mov	r3, #1
   18a08:	strb	r3, [fp, #-46]	; 0xffffffd2
   18a0c:	b	18ac4 <__assert_fail@plt+0x76e0>
   18a10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a14:	cmp	r3, #0
   18a18:	bne	18a24 <__assert_fail@plt+0x7640>
   18a1c:	ldr	r3, [fp, #8]
   18a20:	str	r3, [fp, #-28]	; 0xffffffe4
   18a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a28:	cmp	r3, #43	; 0x2b
   18a2c:	bne	18a6c <__assert_fail@plt+0x7688>
   18a30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18a34:	cmp	r3, #2
   18a38:	bne	18a44 <__assert_fail@plt+0x7660>
   18a3c:	mov	r2, #99	; 0x63
   18a40:	b	18a48 <__assert_fail@plt+0x7664>
   18a44:	movw	r2, #9999	; 0x270f
   18a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a4c:	cmp	r2, r3
   18a50:	bcc	18a64 <__assert_fail@plt+0x7680>
   18a54:	ldr	r3, [fp, #12]
   18a58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a5c:	cmp	r2, r3
   18a60:	bge	18a6c <__assert_fail@plt+0x7688>
   18a64:	mov	r3, #1
   18a68:	b	18a70 <__assert_fail@plt+0x768c>
   18a6c:	mov	r3, #0
   18a70:	strb	r3, [fp, #-46]	; 0xffffffd2
   18a74:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   18a78:	and	r3, r3, #1
   18a7c:	strb	r3, [fp, #-46]	; 0xffffffd2
   18a80:	b	18abc <__assert_fail@plt+0x76d8>
   18a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a88:	cmp	r3, #0
   18a8c:	bne	18a9c <__assert_fail@plt+0x76b8>
   18a90:	mov	r3, #95	; 0x5f
   18a94:	str	r3, [fp, #-28]	; 0xffffffe4
   18a98:	b	18aa0 <__assert_fail@plt+0x76bc>
   18a9c:	nop	{0}
   18aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18aa4:	lsr	r3, r3, #31
   18aa8:	strb	r3, [fp, #-45]	; 0xffffffd3
   18aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ab0:	str	r3, [fp, #-44]	; 0xffffffd4
   18ab4:	mov	r3, #0
   18ab8:	strb	r3, [fp, #-46]	; 0xffffffd2
   18abc:	mov	r3, #0
   18ac0:	str	r3, [fp, #-52]	; 0xffffffcc
   18ac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ac8:	cmp	r3, #79	; 0x4f
   18acc:	bne	18ae4 <__assert_fail@plt+0x7700>
   18ad0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   18ad4:	eor	r3, r3, #1
   18ad8:	uxtb	r3, r3
   18adc:	cmp	r3, #0
   18ae0:	bne	1867c <__assert_fail@plt+0x7298>
   18ae4:	sub	r3, fp, #396	; 0x18c
   18ae8:	add	r3, r3, #14
   18aec:	str	r3, [fp, #-60]	; 0xffffffc4
   18af0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   18af4:	cmp	r3, #0
   18af8:	beq	18b08 <__assert_fail@plt+0x7724>
   18afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b00:	rsb	r3, r3, #0
   18b04:	str	r3, [fp, #-44]	; 0xffffffd4
   18b08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b0c:	and	r3, r3, #1
   18b10:	cmp	r3, #0
   18b14:	beq	18b30 <__assert_fail@plt+0x774c>
   18b18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18b1c:	sub	r3, r3, #1
   18b20:	str	r3, [fp, #-60]	; 0xffffffc4
   18b24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18b28:	mov	r2, #58	; 0x3a
   18b2c:	strb	r2, [r3]
   18b30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b34:	asr	r3, r3, #1
   18b38:	str	r3, [fp, #-52]	; 0xffffffcc
   18b3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18b40:	movw	r3, #52429	; 0xcccd
   18b44:	movt	r3, #52428	; 0xcccc
   18b48:	umull	r2, r3, r3, r1
   18b4c:	lsr	r2, r3, #3
   18b50:	mov	r3, r2
   18b54:	lsl	r3, r3, #2
   18b58:	add	r3, r3, r2
   18b5c:	lsl	r3, r3, #1
   18b60:	sub	r2, r1, r3
   18b64:	uxtb	r3, r2
   18b68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18b6c:	sub	r2, r2, #1
   18b70:	str	r2, [fp, #-60]	; 0xffffffc4
   18b74:	add	r3, r3, #48	; 0x30
   18b78:	uxtb	r2, r3
   18b7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18b80:	strb	r2, [r3]
   18b84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18b88:	movw	r3, #52429	; 0xcccd
   18b8c:	movt	r3, #52428	; 0xcccc
   18b90:	umull	r2, r3, r3, r2
   18b94:	lsr	r3, r3, #3
   18b98:	str	r3, [fp, #-44]	; 0xffffffd4
   18b9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ba0:	cmp	r3, #0
   18ba4:	bne	18b08 <__assert_fail@plt+0x7724>
   18ba8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18bac:	cmp	r3, #0
   18bb0:	bne	18b08 <__assert_fail@plt+0x7724>
   18bb4:	nop	{0}
   18bb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bbc:	cmp	r3, #0
   18bc0:	bne	18bcc <__assert_fail@plt+0x77e8>
   18bc4:	mov	r3, #48	; 0x30
   18bc8:	str	r3, [fp, #-28]	; 0xffffffe4
   18bcc:	ldr	r3, [fp, #12]
   18bd0:	cmp	r3, #0
   18bd4:	bge	18be0 <__assert_fail@plt+0x77fc>
   18bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18bdc:	str	r3, [fp, #12]
   18be0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   18be4:	cmp	r3, #0
   18be8:	beq	18bf4 <__assert_fail@plt+0x7810>
   18bec:	mov	r3, #45	; 0x2d
   18bf0:	b	18c0c <__assert_fail@plt+0x7828>
   18bf4:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   18bf8:	cmp	r3, #0
   18bfc:	beq	18c08 <__assert_fail@plt+0x7824>
   18c00:	mov	r3, #43	; 0x2b
   18c04:	b	18c0c <__assert_fail@plt+0x7828>
   18c08:	mov	r3, #0
   18c0c:	strb	r3, [fp, #-201]	; 0xffffff37
   18c10:	sub	r3, fp, #396	; 0x18c
   18c14:	add	r3, r3, #14
   18c18:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18c1c:	sub	r3, r3, r2
   18c20:	str	r3, [fp, #-208]	; 0xffffff30
   18c24:	ldr	r3, [fp, #12]
   18c28:	ldrb	r2, [fp, #-201]	; 0xffffff37
   18c2c:	cmp	r2, #0
   18c30:	movne	r2, #1
   18c34:	moveq	r2, #0
   18c38:	uxtb	r2, r2
   18c3c:	sub	r2, r3, r2
   18c40:	ldr	r3, [fp, #-208]	; 0xffffff30
   18c44:	sub	r3, r2, r3
   18c48:	str	r3, [fp, #-212]	; 0xffffff2c
   18c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c50:	cmp	r3, #45	; 0x2d
   18c54:	beq	18c6c <__assert_fail@plt+0x7888>
   18c58:	ldr	r3, [fp, #-212]	; 0xffffff2c
   18c5c:	cmp	r3, #0
   18c60:	ble	18c6c <__assert_fail@plt+0x7888>
   18c64:	ldr	r3, [fp, #-212]	; 0xffffff2c
   18c68:	b	18c70 <__assert_fail@plt+0x788c>
   18c6c:	mov	r3, #0
   18c70:	str	r3, [fp, #-216]	; 0xffffff28
   18c74:	ldrb	r3, [fp, #-201]	; 0xffffff37
   18c78:	cmp	r3, #0
   18c7c:	beq	18df4 <__assert_fail@plt+0x7a10>
   18c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c84:	cmp	r3, #95	; 0x5f
   18c88:	bne	18cdc <__assert_fail@plt+0x78f8>
   18c8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c90:	cmp	r3, #0
   18c94:	beq	18cbc <__assert_fail@plt+0x78d8>
   18c98:	ldr	r3, [fp, #-216]	; 0xffffff28
   18c9c:	mov	r2, r3
   18ca0:	mov	r1, #32
   18ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ca8:	bl	112e8 <memset@plt>
   18cac:	ldr	r3, [fp, #-216]	; 0xffffff28
   18cb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cb4:	add	r3, r2, r3
   18cb8:	str	r3, [fp, #-20]	; 0xffffffec
   18cbc:	ldr	r3, [fp, #-216]	; 0xffffff28
   18cc0:	ldr	r2, [fp, #-16]
   18cc4:	add	r3, r2, r3
   18cc8:	str	r3, [fp, #-16]
   18ccc:	ldr	r2, [fp, #12]
   18cd0:	ldr	r3, [fp, #-216]	; 0xffffff28
   18cd4:	sub	r3, r2, r3
   18cd8:	str	r3, [fp, #12]
   18cdc:	mov	r3, #1
   18ce0:	str	r3, [fp, #-220]	; 0xffffff24
   18ce4:	mov	r3, #0
   18ce8:	str	r3, [fp, #-224]	; 0xffffff20
   18cec:	ldr	r2, [fp, #-220]	; 0xffffff24
   18cf0:	ldr	r3, [fp, #-224]	; 0xffffff20
   18cf4:	cmp	r2, r3
   18cf8:	movcs	r3, r2
   18cfc:	movcc	r3, r3
   18d00:	str	r3, [fp, #-228]	; 0xffffff1c
   18d04:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   18d08:	ldr	r3, [fp, #-16]
   18d0c:	sub	r3, r2, r3
   18d10:	ldr	r2, [fp, #-228]	; 0xffffff1c
   18d14:	cmp	r2, r3
   18d18:	bcc	18d34 <__assert_fail@plt+0x7950>
   18d1c:	bl	112d0 <__errno_location@plt>
   18d20:	mov	r2, r0
   18d24:	mov	r3, #34	; 0x22
   18d28:	str	r3, [r2]
   18d2c:	mov	r3, #0
   18d30:	b	1a578 <__assert_fail@plt+0x9194>
   18d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d38:	cmp	r3, #0
   18d3c:	beq	18dd8 <__assert_fail@plt+0x79f4>
   18d40:	ldr	r2, [fp, #-220]	; 0xffffff24
   18d44:	ldr	r3, [fp, #-224]	; 0xffffff20
   18d48:	cmp	r2, r3
   18d4c:	bcs	18dbc <__assert_fail@plt+0x79d8>
   18d50:	ldr	r2, [fp, #-224]	; 0xffffff20
   18d54:	ldr	r3, [fp, #-220]	; 0xffffff24
   18d58:	sub	r3, r2, r3
   18d5c:	str	r3, [fp, #-232]	; 0xffffff18
   18d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d64:	cmp	r3, #48	; 0x30
   18d68:	beq	18d78 <__assert_fail@plt+0x7994>
   18d6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d70:	cmp	r3, #43	; 0x2b
   18d74:	bne	18d9c <__assert_fail@plt+0x79b8>
   18d78:	ldr	r2, [fp, #-232]	; 0xffffff18
   18d7c:	mov	r1, #48	; 0x30
   18d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d84:	bl	112e8 <memset@plt>
   18d88:	ldr	r2, [fp, #-20]	; 0xffffffec
   18d8c:	ldr	r3, [fp, #-232]	; 0xffffff18
   18d90:	add	r3, r2, r3
   18d94:	str	r3, [fp, #-20]	; 0xffffffec
   18d98:	b	18dbc <__assert_fail@plt+0x79d8>
   18d9c:	ldr	r2, [fp, #-232]	; 0xffffff18
   18da0:	mov	r1, #32
   18da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18da8:	bl	112e8 <memset@plt>
   18dac:	ldr	r2, [fp, #-20]	; 0xffffffec
   18db0:	ldr	r3, [fp, #-232]	; 0xffffff18
   18db4:	add	r3, r2, r3
   18db8:	str	r3, [fp, #-20]	; 0xffffffec
   18dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dc0:	ldrb	r2, [fp, #-201]	; 0xffffff37
   18dc4:	strb	r2, [r3]
   18dc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18dcc:	ldr	r3, [fp, #-220]	; 0xffffff24
   18dd0:	add	r3, r2, r3
   18dd4:	str	r3, [fp, #-20]	; 0xffffffec
   18dd8:	ldr	r2, [fp, #-16]
   18ddc:	ldr	r3, [fp, #-228]	; 0xffffff1c
   18de0:	add	r3, r2, r3
   18de4:	str	r3, [fp, #-16]
   18de8:	ldr	r3, [fp, #12]
   18dec:	sub	r3, r3, #1
   18df0:	str	r3, [fp, #12]
   18df4:	ldr	r3, [fp, #-208]	; 0xffffff30
   18df8:	str	r3, [fp, #-236]	; 0xffffff14
   18dfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e00:	cmp	r3, #45	; 0x2d
   18e04:	beq	18e1c <__assert_fail@plt+0x7a38>
   18e08:	ldr	r3, [fp, #12]
   18e0c:	cmp	r3, #0
   18e10:	blt	18e1c <__assert_fail@plt+0x7a38>
   18e14:	ldr	r3, [fp, #12]
   18e18:	b	18e20 <__assert_fail@plt+0x7a3c>
   18e1c:	mov	r3, #0
   18e20:	str	r3, [fp, #-240]	; 0xffffff10
   18e24:	ldr	r2, [fp, #-236]	; 0xffffff14
   18e28:	ldr	r3, [fp, #-240]	; 0xffffff10
   18e2c:	cmp	r2, r3
   18e30:	movcs	r3, r2
   18e34:	movcc	r3, r3
   18e38:	str	r3, [fp, #-244]	; 0xffffff0c
   18e3c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   18e40:	ldr	r3, [fp, #-16]
   18e44:	sub	r3, r2, r3
   18e48:	ldr	r2, [fp, #-244]	; 0xffffff0c
   18e4c:	cmp	r2, r3
   18e50:	bcc	18e6c <__assert_fail@plt+0x7a88>
   18e54:	bl	112d0 <__errno_location@plt>
   18e58:	mov	r2, r0
   18e5c:	mov	r3, #34	; 0x22
   18e60:	str	r3, [r2]
   18e64:	mov	r3, #0
   18e68:	b	1a578 <__assert_fail@plt+0x9194>
   18e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e70:	cmp	r3, #0
   18e74:	beq	18f54 <__assert_fail@plt+0x7b70>
   18e78:	ldr	r2, [fp, #-236]	; 0xffffff14
   18e7c:	ldr	r3, [fp, #-240]	; 0xffffff10
   18e80:	cmp	r2, r3
   18e84:	bcs	18ef4 <__assert_fail@plt+0x7b10>
   18e88:	ldr	r2, [fp, #-240]	; 0xffffff10
   18e8c:	ldr	r3, [fp, #-236]	; 0xffffff14
   18e90:	sub	r3, r2, r3
   18e94:	str	r3, [fp, #-248]	; 0xffffff08
   18e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e9c:	cmp	r3, #48	; 0x30
   18ea0:	beq	18eb0 <__assert_fail@plt+0x7acc>
   18ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ea8:	cmp	r3, #43	; 0x2b
   18eac:	bne	18ed4 <__assert_fail@plt+0x7af0>
   18eb0:	ldr	r2, [fp, #-248]	; 0xffffff08
   18eb4:	mov	r1, #48	; 0x30
   18eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ebc:	bl	112e8 <memset@plt>
   18ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ec4:	ldr	r3, [fp, #-248]	; 0xffffff08
   18ec8:	add	r3, r2, r3
   18ecc:	str	r3, [fp, #-20]	; 0xffffffec
   18ed0:	b	18ef4 <__assert_fail@plt+0x7b10>
   18ed4:	ldr	r2, [fp, #-248]	; 0xffffff08
   18ed8:	mov	r1, #32
   18edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ee0:	bl	112e8 <memset@plt>
   18ee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ee8:	ldr	r3, [fp, #-248]	; 0xffffff08
   18eec:	add	r3, r2, r3
   18ef0:	str	r3, [fp, #-20]	; 0xffffffec
   18ef4:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   18ef8:	cmp	r3, #0
   18efc:	beq	18f14 <__assert_fail@plt+0x7b30>
   18f00:	ldr	r2, [fp, #-236]	; 0xffffff14
   18f04:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f0c:	bl	179f4 <__assert_fail@plt+0x6610>
   18f10:	b	18f44 <__assert_fail@plt+0x7b60>
   18f14:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   18f18:	cmp	r3, #0
   18f1c:	beq	18f34 <__assert_fail@plt+0x7b50>
   18f20:	ldr	r2, [fp, #-236]	; 0xffffff14
   18f24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18f28:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f2c:	bl	17a70 <__assert_fail@plt+0x668c>
   18f30:	b	18f44 <__assert_fail@plt+0x7b60>
   18f34:	ldr	r2, [fp, #-236]	; 0xffffff14
   18f38:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18f3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f40:	bl	1112c <memcpy@plt>
   18f44:	ldr	r2, [fp, #-20]	; 0xffffffec
   18f48:	ldr	r3, [fp, #-236]	; 0xffffff14
   18f4c:	add	r3, r2, r3
   18f50:	str	r3, [fp, #-20]	; 0xffffffec
   18f54:	ldr	r2, [fp, #-16]
   18f58:	ldr	r3, [fp, #-244]	; 0xffffff0c
   18f5c:	add	r3, r2, r3
   18f60:	str	r3, [fp, #-16]
   18f64:	b	1a51c <__assert_fail@plt+0x9138>
   18f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f6c:	cmp	r3, #0
   18f70:	bne	1a308 <__assert_fail@plt+0x8f24>
   18f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f78:	cmp	r3, #0
   18f7c:	bne	18fa0 <__assert_fail@plt+0x7bbc>
   18f80:	ldr	r3, [fp, #12]
   18f84:	cmp	r3, #0
   18f88:	bge	18fa0 <__assert_fail@plt+0x7bbc>
   18f8c:	mov	r3, #43	; 0x2b
   18f90:	str	r3, [fp, #-28]	; 0xffffffe4
   18f94:	mov	r3, #4
   18f98:	str	r3, [fp, #-80]	; 0xffffffb0
   18f9c:	b	18fc0 <__assert_fail@plt+0x7bdc>
   18fa0:	ldr	r3, [fp, #12]
   18fa4:	sub	r3, r3, #6
   18fa8:	str	r3, [fp, #-80]	; 0xffffffb0
   18fac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18fb0:	cmp	r3, #0
   18fb4:	bge	18fc0 <__assert_fail@plt+0x7bdc>
   18fb8:	mov	r3, #0
   18fbc:	str	r3, [fp, #-80]	; 0xffffffb0
   18fc0:	movw	r3, #13028	; 0x32e4
   18fc4:	movt	r3, #2
   18fc8:	str	r3, [fp, #-56]	; 0xffffffc8
   18fcc:	b	18484 <__assert_fail@plt+0x70a0>
   18fd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18fd4:	cmp	r3, #69	; 0x45
   18fd8:	beq	1a310 <__assert_fail@plt+0x8f2c>
   18fdc:	mov	r3, #2
   18fe0:	str	r3, [fp, #-36]	; 0xffffffdc
   18fe4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   18fe8:	ldr	r3, [r3, #8]
   18fec:	str	r3, [fp, #-40]	; 0xffffffd8
   18ff0:	b	18aa0 <__assert_fail@plt+0x76bc>
   18ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ff8:	cmp	r3, #69	; 0x45
   18ffc:	beq	1a318 <__assert_fail@plt+0x8f34>
   19000:	mov	r3, #2
   19004:	str	r3, [fp, #-36]	; 0xffffffdc
   19008:	ldr	r3, [fp, #-8]
   1900c:	str	r3, [fp, #-40]	; 0xffffffd8
   19010:	b	18aa0 <__assert_fail@plt+0x76bc>
   19014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19018:	cmp	r3, #69	; 0x45
   1901c:	beq	1a320 <__assert_fail@plt+0x8f3c>
   19020:	mov	r3, #2
   19024:	str	r3, [fp, #-36]	; 0xffffffdc
   19028:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   1902c:	ldr	r3, [r3, #8]
   19030:	str	r3, [fp, #-40]	; 0xffffffd8
   19034:	b	18a84 <__assert_fail@plt+0x76a0>
   19038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1903c:	cmp	r3, #69	; 0x45
   19040:	beq	1a328 <__assert_fail@plt+0x8f44>
   19044:	mov	r3, #2
   19048:	str	r3, [fp, #-36]	; 0xffffffdc
   1904c:	ldr	r3, [fp, #-8]
   19050:	str	r3, [fp, #-40]	; 0xffffffd8
   19054:	b	18a84 <__assert_fail@plt+0x76a0>
   19058:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1905c:	cmp	r3, #69	; 0x45
   19060:	beq	1a330 <__assert_fail@plt+0x8f4c>
   19064:	mov	r3, #3
   19068:	str	r3, [fp, #-36]	; 0xffffffdc
   1906c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19070:	ldr	r3, [r3, #28]
   19074:	cmn	r3, #1
   19078:	movlt	r3, #1
   1907c:	movge	r3, #0
   19080:	strb	r3, [fp, #-45]	; 0xffffffd3
   19084:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19088:	ldr	r3, [r3, #28]
   1908c:	add	r3, r3, #1
   19090:	str	r3, [fp, #-44]	; 0xffffffd4
   19094:	b	18ab4 <__assert_fail@plt+0x76d0>
   19098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1909c:	cmp	r3, #69	; 0x45
   190a0:	beq	1a338 <__assert_fail@plt+0x8f54>
   190a4:	mov	r3, #2
   190a8:	str	r3, [fp, #-36]	; 0xffffffdc
   190ac:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   190b0:	ldr	r3, [r3, #4]
   190b4:	str	r3, [fp, #-40]	; 0xffffffd8
   190b8:	b	18aa0 <__assert_fail@plt+0x76bc>
   190bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190c0:	cmp	r3, #69	; 0x45
   190c4:	beq	1a340 <__assert_fail@plt+0x8f5c>
   190c8:	mov	r3, #2
   190cc:	str	r3, [fp, #-36]	; 0xffffffdc
   190d0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   190d4:	ldr	r3, [r3, #16]
   190d8:	cmn	r3, #1
   190dc:	movlt	r3, #1
   190e0:	movge	r3, #0
   190e4:	strb	r3, [fp, #-45]	; 0xffffffd3
   190e8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   190ec:	ldr	r3, [r3, #16]
   190f0:	add	r3, r3, #1
   190f4:	str	r3, [fp, #-44]	; 0xffffffd4
   190f8:	b	18ab4 <__assert_fail@plt+0x76d0>
   190fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19100:	cmp	r3, #69	; 0x45
   19104:	beq	1a348 <__assert_fail@plt+0x8f64>
   19108:	ldr	r3, [fp, #24]
   1910c:	str	r3, [fp, #-88]	; 0xffffffa8
   19110:	mov	r3, #9
   19114:	str	r3, [fp, #-252]	; 0xffffff04
   19118:	ldr	r3, [fp, #12]
   1911c:	cmp	r3, #0
   19120:	bgt	1912c <__assert_fail@plt+0x7d48>
   19124:	ldr	r3, [fp, #-252]	; 0xffffff04
   19128:	str	r3, [fp, #12]
   1912c:	ldr	r3, [fp, #-252]	; 0xffffff04
   19130:	str	r3, [fp, #-92]	; 0xffffffa4
   19134:	b	19164 <__assert_fail@plt+0x7d80>
   19138:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1913c:	sub	r3, r3, #1
   19140:	str	r3, [fp, #-92]	; 0xffffffa4
   19144:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19148:	movw	r3, #26215	; 0x6667
   1914c:	movt	r3, #26214	; 0x6666
   19150:	smull	r1, r3, r3, r2
   19154:	asr	r1, r3, #2
   19158:	asr	r3, r2, #31
   1915c:	sub	r3, r1, r3
   19160:	str	r3, [fp, #-88]	; 0xffffffa8
   19164:	ldr	r3, [fp, #12]
   19168:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1916c:	cmp	r2, r3
   19170:	bgt	19138 <__assert_fail@plt+0x7d54>
   19174:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19178:	cmp	r3, #1
   1917c:	ble	191b8 <__assert_fail@plt+0x7dd4>
   19180:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19184:	movw	r3, #26215	; 0x6667
   19188:	movt	r3, #26214	; 0x6666
   1918c:	smull	r2, r3, r3, r1
   19190:	asr	r2, r3, #2
   19194:	asr	r3, r1, #31
   19198:	sub	r2, r2, r3
   1919c:	mov	r3, r2
   191a0:	lsl	r3, r3, #2
   191a4:	add	r3, r3, r2
   191a8:	lsl	r3, r3, #1
   191ac:	sub	r2, r1, r3
   191b0:	cmp	r2, #0
   191b4:	beq	19138 <__assert_fail@plt+0x7d54>
   191b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   191bc:	str	r3, [fp, #-96]	; 0xffffffa0
   191c0:	b	19240 <__assert_fail@plt+0x7e5c>
   191c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   191c8:	movw	r3, #26215	; 0x6667
   191cc:	movt	r3, #26214	; 0x6666
   191d0:	smull	r1, r3, r3, r2
   191d4:	asr	r1, r3, #2
   191d8:	asr	r3, r2, #31
   191dc:	sub	r1, r1, r3
   191e0:	mov	r3, r1
   191e4:	lsl	r3, r3, #2
   191e8:	add	r3, r3, r1
   191ec:	lsl	r3, r3, #1
   191f0:	sub	r1, r2, r3
   191f4:	uxtb	r2, r1
   191f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   191fc:	sub	r3, r3, #1
   19200:	add	r2, r2, #48	; 0x30
   19204:	uxtb	r2, r2
   19208:	sub	r1, fp, #4
   1920c:	add	r3, r1, r3
   19210:	strb	r2, [r3, #-392]	; 0xfffffe78
   19214:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19218:	movw	r3, #26215	; 0x6667
   1921c:	movt	r3, #26214	; 0x6666
   19220:	smull	r1, r3, r3, r2
   19224:	asr	r1, r3, #2
   19228:	asr	r3, r2, #31
   1922c:	sub	r3, r1, r3
   19230:	str	r3, [fp, #-88]	; 0xffffffa8
   19234:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19238:	sub	r3, r3, #1
   1923c:	str	r3, [fp, #-96]	; 0xffffffa0
   19240:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19244:	cmp	r3, #0
   19248:	bgt	191c4 <__assert_fail@plt+0x7de0>
   1924c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19250:	cmp	r3, #0
   19254:	bne	19260 <__assert_fail@plt+0x7e7c>
   19258:	mov	r3, #48	; 0x30
   1925c:	str	r3, [fp, #-28]	; 0xffffffe4
   19260:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19264:	str	r3, [fp, #-256]	; 0xffffff00
   19268:	mov	r3, #0
   1926c:	str	r3, [fp, #-260]	; 0xfffffefc
   19270:	ldr	r2, [fp, #-256]	; 0xffffff00
   19274:	ldr	r3, [fp, #-260]	; 0xfffffefc
   19278:	cmp	r2, r3
   1927c:	movcs	r3, r2
   19280:	movcc	r3, r3
   19284:	str	r3, [fp, #-264]	; 0xfffffef8
   19288:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   1928c:	ldr	r3, [fp, #-16]
   19290:	sub	r3, r2, r3
   19294:	ldr	r2, [fp, #-264]	; 0xfffffef8
   19298:	cmp	r2, r3
   1929c:	bcc	192b8 <__assert_fail@plt+0x7ed4>
   192a0:	bl	112d0 <__errno_location@plt>
   192a4:	mov	r2, r0
   192a8:	mov	r3, #34	; 0x22
   192ac:	str	r3, [r2]
   192b0:	mov	r3, #0
   192b4:	b	1a578 <__assert_fail@plt+0x9194>
   192b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   192bc:	cmp	r3, #0
   192c0:	beq	193ac <__assert_fail@plt+0x7fc8>
   192c4:	ldr	r2, [fp, #-256]	; 0xffffff00
   192c8:	ldr	r3, [fp, #-260]	; 0xfffffefc
   192cc:	cmp	r2, r3
   192d0:	bcs	19340 <__assert_fail@plt+0x7f5c>
   192d4:	ldr	r2, [fp, #-260]	; 0xfffffefc
   192d8:	ldr	r3, [fp, #-256]	; 0xffffff00
   192dc:	sub	r3, r2, r3
   192e0:	str	r3, [fp, #-268]	; 0xfffffef4
   192e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192e8:	cmp	r3, #48	; 0x30
   192ec:	beq	192fc <__assert_fail@plt+0x7f18>
   192f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192f4:	cmp	r3, #43	; 0x2b
   192f8:	bne	19320 <__assert_fail@plt+0x7f3c>
   192fc:	ldr	r2, [fp, #-268]	; 0xfffffef4
   19300:	mov	r1, #48	; 0x30
   19304:	ldr	r0, [fp, #-20]	; 0xffffffec
   19308:	bl	112e8 <memset@plt>
   1930c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19310:	ldr	r3, [fp, #-268]	; 0xfffffef4
   19314:	add	r3, r2, r3
   19318:	str	r3, [fp, #-20]	; 0xffffffec
   1931c:	b	19340 <__assert_fail@plt+0x7f5c>
   19320:	ldr	r2, [fp, #-268]	; 0xfffffef4
   19324:	mov	r1, #32
   19328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1932c:	bl	112e8 <memset@plt>
   19330:	ldr	r2, [fp, #-20]	; 0xffffffec
   19334:	ldr	r3, [fp, #-268]	; 0xfffffef4
   19338:	add	r3, r2, r3
   1933c:	str	r3, [fp, #-20]	; 0xffffffec
   19340:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   19344:	cmp	r3, #0
   19348:	beq	19364 <__assert_fail@plt+0x7f80>
   1934c:	sub	r3, fp, #396	; 0x18c
   19350:	ldr	r2, [fp, #-256]	; 0xffffff00
   19354:	mov	r1, r3
   19358:	ldr	r0, [fp, #-20]	; 0xffffffec
   1935c:	bl	179f4 <__assert_fail@plt+0x6610>
   19360:	b	1939c <__assert_fail@plt+0x7fb8>
   19364:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   19368:	cmp	r3, #0
   1936c:	beq	19388 <__assert_fail@plt+0x7fa4>
   19370:	sub	r3, fp, #396	; 0x18c
   19374:	ldr	r2, [fp, #-256]	; 0xffffff00
   19378:	mov	r1, r3
   1937c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19380:	bl	17a70 <__assert_fail@plt+0x668c>
   19384:	b	1939c <__assert_fail@plt+0x7fb8>
   19388:	sub	r3, fp, #396	; 0x18c
   1938c:	ldr	r2, [fp, #-256]	; 0xffffff00
   19390:	mov	r1, r3
   19394:	ldr	r0, [fp, #-20]	; 0xffffffec
   19398:	bl	1112c <memcpy@plt>
   1939c:	ldr	r2, [fp, #-20]	; 0xffffffec
   193a0:	ldr	r3, [fp, #-256]	; 0xffffff00
   193a4:	add	r3, r2, r3
   193a8:	str	r3, [fp, #-20]	; 0xffffffec
   193ac:	ldr	r2, [fp, #-16]
   193b0:	ldr	r3, [fp, #-264]	; 0xfffffef8
   193b4:	add	r3, r2, r3
   193b8:	str	r3, [fp, #-16]
   193bc:	mov	r3, #0
   193c0:	str	r3, [fp, #-272]	; 0xfffffef0
   193c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193c8:	cmp	r3, #45	; 0x2d
   193cc:	beq	193f4 <__assert_fail@plt+0x8010>
   193d0:	ldr	r2, [fp, #12]
   193d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   193d8:	sub	r3, r2, r3
   193dc:	cmp	r3, #0
   193e0:	blt	193f4 <__assert_fail@plt+0x8010>
   193e4:	ldr	r2, [fp, #12]
   193e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   193ec:	sub	r3, r2, r3
   193f0:	b	193f8 <__assert_fail@plt+0x8014>
   193f4:	mov	r3, #0
   193f8:	str	r3, [fp, #-276]	; 0xfffffeec
   193fc:	ldr	r2, [fp, #-272]	; 0xfffffef0
   19400:	ldr	r3, [fp, #-276]	; 0xfffffeec
   19404:	cmp	r2, r3
   19408:	movcs	r3, r2
   1940c:	movcc	r3, r3
   19410:	str	r3, [fp, #-280]	; 0xfffffee8
   19414:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   19418:	ldr	r3, [fp, #-16]
   1941c:	sub	r3, r2, r3
   19420:	ldr	r2, [fp, #-280]	; 0xfffffee8
   19424:	cmp	r2, r3
   19428:	bcc	19444 <__assert_fail@plt+0x8060>
   1942c:	bl	112d0 <__errno_location@plt>
   19430:	mov	r2, r0
   19434:	mov	r3, #34	; 0x22
   19438:	str	r3, [r2]
   1943c:	mov	r3, #0
   19440:	b	1a578 <__assert_fail@plt+0x9194>
   19444:	ldr	r3, [fp, #-20]	; 0xffffffec
   19448:	cmp	r3, #0
   1944c:	beq	194dc <__assert_fail@plt+0x80f8>
   19450:	ldr	r2, [fp, #-272]	; 0xfffffef0
   19454:	ldr	r3, [fp, #-276]	; 0xfffffeec
   19458:	cmp	r2, r3
   1945c:	bcs	194cc <__assert_fail@plt+0x80e8>
   19460:	ldr	r2, [fp, #-276]	; 0xfffffeec
   19464:	ldr	r3, [fp, #-272]	; 0xfffffef0
   19468:	sub	r3, r2, r3
   1946c:	str	r3, [fp, #-284]	; 0xfffffee4
   19470:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19474:	cmp	r3, #48	; 0x30
   19478:	beq	19488 <__assert_fail@plt+0x80a4>
   1947c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19480:	cmp	r3, #43	; 0x2b
   19484:	bne	194ac <__assert_fail@plt+0x80c8>
   19488:	ldr	r2, [fp, #-284]	; 0xfffffee4
   1948c:	mov	r1, #48	; 0x30
   19490:	ldr	r0, [fp, #-20]	; 0xffffffec
   19494:	bl	112e8 <memset@plt>
   19498:	ldr	r2, [fp, #-20]	; 0xffffffec
   1949c:	ldr	r3, [fp, #-284]	; 0xfffffee4
   194a0:	add	r3, r2, r3
   194a4:	str	r3, [fp, #-20]	; 0xffffffec
   194a8:	b	194cc <__assert_fail@plt+0x80e8>
   194ac:	ldr	r2, [fp, #-284]	; 0xfffffee4
   194b0:	mov	r1, #32
   194b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   194b8:	bl	112e8 <memset@plt>
   194bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   194c0:	ldr	r3, [fp, #-284]	; 0xfffffee4
   194c4:	add	r3, r2, r3
   194c8:	str	r3, [fp, #-20]	; 0xffffffec
   194cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   194d0:	ldr	r3, [fp, #-272]	; 0xfffffef0
   194d4:	add	r3, r2, r3
   194d8:	str	r3, [fp, #-20]	; 0xffffffec
   194dc:	ldr	r2, [fp, #-16]
   194e0:	ldr	r3, [fp, #-280]	; 0xfffffee8
   194e4:	add	r3, r2, r3
   194e8:	str	r3, [fp, #-16]
   194ec:	b	1a51c <__assert_fail@plt+0x9138>
   194f0:	mov	r3, #1
   194f4:	str	r3, [fp, #-288]	; 0xfffffee0
   194f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194fc:	cmp	r3, #45	; 0x2d
   19500:	beq	19518 <__assert_fail@plt+0x8134>
   19504:	ldr	r3, [fp, #12]
   19508:	cmp	r3, #0
   1950c:	blt	19518 <__assert_fail@plt+0x8134>
   19510:	ldr	r3, [fp, #12]
   19514:	b	1951c <__assert_fail@plt+0x8138>
   19518:	mov	r3, #0
   1951c:	str	r3, [fp, #-292]	; 0xfffffedc
   19520:	ldr	r2, [fp, #-288]	; 0xfffffee0
   19524:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19528:	cmp	r2, r3
   1952c:	movcs	r3, r2
   19530:	movcc	r3, r3
   19534:	str	r3, [fp, #-296]	; 0xfffffed8
   19538:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   1953c:	ldr	r3, [fp, #-16]
   19540:	sub	r3, r2, r3
   19544:	ldr	r2, [fp, #-296]	; 0xfffffed8
   19548:	cmp	r2, r3
   1954c:	bcc	19568 <__assert_fail@plt+0x8184>
   19550:	bl	112d0 <__errno_location@plt>
   19554:	mov	r2, r0
   19558:	mov	r3, #34	; 0x22
   1955c:	str	r3, [r2]
   19560:	mov	r3, #0
   19564:	b	1a578 <__assert_fail@plt+0x9194>
   19568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1956c:	cmp	r3, #0
   19570:	beq	1960c <__assert_fail@plt+0x8228>
   19574:	ldr	r2, [fp, #-288]	; 0xfffffee0
   19578:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1957c:	cmp	r2, r3
   19580:	bcs	195f0 <__assert_fail@plt+0x820c>
   19584:	ldr	r2, [fp, #-292]	; 0xfffffedc
   19588:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1958c:	sub	r3, r2, r3
   19590:	str	r3, [fp, #-300]	; 0xfffffed4
   19594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19598:	cmp	r3, #48	; 0x30
   1959c:	beq	195ac <__assert_fail@plt+0x81c8>
   195a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   195a4:	cmp	r3, #43	; 0x2b
   195a8:	bne	195d0 <__assert_fail@plt+0x81ec>
   195ac:	ldr	r2, [fp, #-300]	; 0xfffffed4
   195b0:	mov	r1, #48	; 0x30
   195b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   195b8:	bl	112e8 <memset@plt>
   195bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   195c0:	ldr	r3, [fp, #-300]	; 0xfffffed4
   195c4:	add	r3, r2, r3
   195c8:	str	r3, [fp, #-20]	; 0xffffffec
   195cc:	b	195f0 <__assert_fail@plt+0x820c>
   195d0:	ldr	r2, [fp, #-300]	; 0xfffffed4
   195d4:	mov	r1, #32
   195d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   195dc:	bl	112e8 <memset@plt>
   195e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   195e4:	ldr	r3, [fp, #-300]	; 0xfffffed4
   195e8:	add	r3, r2, r3
   195ec:	str	r3, [fp, #-20]	; 0xffffffec
   195f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   195f4:	mov	r2, #10
   195f8:	strb	r2, [r3]
   195fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19600:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19604:	add	r3, r2, r3
   19608:	str	r3, [fp, #-20]	; 0xffffffec
   1960c:	ldr	r2, [fp, #-16]
   19610:	ldr	r3, [fp, #-296]	; 0xfffffed8
   19614:	add	r3, r2, r3
   19618:	str	r3, [fp, #-16]
   1961c:	b	1a51c <__assert_fail@plt+0x9138>
   19620:	mov	r3, #1
   19624:	strb	r3, [fp, #-61]	; 0xffffffc3
   19628:	mov	r3, #112	; 0x70
   1962c:	str	r3, [fp, #-76]	; 0xffffffb4
   19630:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   19634:	cmp	r3, #0
   19638:	beq	18684 <__assert_fail@plt+0x72a0>
   1963c:	mov	r3, #0
   19640:	strb	r3, [fp, #-62]	; 0xffffffc2
   19644:	mov	r3, #1
   19648:	strb	r3, [fp, #-61]	; 0xffffffc3
   1964c:	b	18684 <__assert_fail@plt+0x72a0>
   19650:	mov	r3, #1
   19654:	str	r3, [fp, #-36]	; 0xffffffdc
   19658:	mov	r3, #0
   1965c:	strb	r3, [fp, #-45]	; 0xffffffd3
   19660:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19664:	ldr	r3, [r3, #16]
   19668:	mov	r2, #11
   1966c:	mul	r3, r2, r3
   19670:	asr	r3, r3, #5
   19674:	add	r3, r3, #1
   19678:	str	r3, [fp, #-44]	; 0xffffffd4
   1967c:	b	18ab4 <__assert_fail@plt+0x76d0>
   19680:	movw	r3, #13040	; 0x32f0
   19684:	movt	r3, #2
   19688:	str	r3, [fp, #-56]	; 0xffffffc8
   1968c:	b	1847c <__assert_fail@plt+0x7098>
   19690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19694:	cmp	r3, #69	; 0x45
   19698:	beq	1a350 <__assert_fail@plt+0x8f6c>
   1969c:	mov	r3, #2
   196a0:	str	r3, [fp, #-36]	; 0xffffffdc
   196a4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   196a8:	ldr	r3, [r3]
   196ac:	str	r3, [fp, #-40]	; 0xffffffd8
   196b0:	b	18aa0 <__assert_fail@plt+0x76bc>
   196b4:	ldr	r2, [fp, #-1444]	; 0xfffffa5c
   196b8:	sub	r3, fp, #1424	; 0x590
   196bc:	sub	r3, r3, #4
   196c0:	ldrd	r0, [r2]
   196c4:	strd	r0, [r3]
   196c8:	ldrd	r0, [r2, #8]
   196cc:	strd	r0, [r3, #8]
   196d0:	ldrd	r0, [r2, #16]
   196d4:	strd	r0, [r3, #16]
   196d8:	ldrd	r0, [r2, #24]
   196dc:	strd	r0, [r3, #24]
   196e0:	ldrd	r0, [r2, #32]
   196e4:	strd	r0, [r3, #32]
   196e8:	ldr	r2, [r2, #40]	; 0x28
   196ec:	str	r2, [r3, #40]	; 0x28
   196f0:	mvn	r3, #0
   196f4:	str	r3, [fp, #-1400]	; 0xfffffa88
   196f8:	sub	r3, fp, #1424	; 0x590
   196fc:	sub	r3, r3, #4
   19700:	mov	r1, r3
   19704:	ldr	r0, [fp, #20]
   19708:	bl	1d9ac <__assert_fail@plt+0xc5c8>
   1970c:	str	r0, [fp, #-100]	; 0xffffff9c
   19710:	ldr	r3, [fp, #-1400]	; 0xfffffa88
   19714:	cmp	r3, #0
   19718:	bge	19734 <__assert_fail@plt+0x8350>
   1971c:	bl	112d0 <__errno_location@plt>
   19720:	mov	r2, r0
   19724:	mov	r3, #75	; 0x4b
   19728:	str	r3, [r2]
   1972c:	mov	r3, #0
   19730:	b	1a578 <__assert_fail@plt+0x9194>
   19734:	sub	r3, fp, #396	; 0x18c
   19738:	add	r3, r3, #14
   1973c:	str	r3, [fp, #-60]	; 0xffffffc4
   19740:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19744:	lsr	r3, r3, #31
   19748:	strb	r3, [fp, #-45]	; 0xffffffd3
   1974c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19750:	movw	r3, #26215	; 0x6667
   19754:	movt	r3, #26214	; 0x6666
   19758:	smull	r1, r3, r3, r2
   1975c:	asr	r1, r3, #2
   19760:	asr	r3, r2, #31
   19764:	sub	r1, r1, r3
   19768:	mov	r3, r1
   1976c:	lsl	r3, r3, #2
   19770:	add	r3, r3, r1
   19774:	lsl	r3, r3, #1
   19778:	sub	r3, r2, r3
   1977c:	str	r3, [fp, #-304]	; 0xfffffed0
   19780:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19784:	movw	r3, #26215	; 0x6667
   19788:	movt	r3, #26214	; 0x6666
   1978c:	smull	r1, r3, r3, r2
   19790:	asr	r1, r3, #2
   19794:	asr	r3, r2, #31
   19798:	sub	r3, r1, r3
   1979c:	str	r3, [fp, #-100]	; 0xffffff9c
   197a0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   197a4:	cmp	r3, #0
   197a8:	beq	197c0 <__assert_fail@plt+0x83dc>
   197ac:	ldr	r3, [fp, #-304]	; 0xfffffed0
   197b0:	uxtb	r3, r3
   197b4:	rsb	r3, r3, #48	; 0x30
   197b8:	uxtb	r3, r3
   197bc:	b	197d0 <__assert_fail@plt+0x83ec>
   197c0:	ldr	r3, [fp, #-304]	; 0xfffffed0
   197c4:	uxtb	r3, r3
   197c8:	add	r3, r3, #48	; 0x30
   197cc:	uxtb	r3, r3
   197d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   197d4:	sub	r2, r2, #1
   197d8:	str	r2, [fp, #-60]	; 0xffffffc4
   197dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   197e0:	strb	r3, [r2]
   197e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   197e8:	cmp	r3, #0
   197ec:	bne	1974c <__assert_fail@plt+0x8368>
   197f0:	mov	r3, #1
   197f4:	str	r3, [fp, #-36]	; 0xffffffdc
   197f8:	mov	r3, #0
   197fc:	strb	r3, [fp, #-46]	; 0xffffffd2
   19800:	b	18bb8 <__assert_fail@plt+0x77d4>
   19804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19808:	cmp	r3, #79	; 0x4f
   1980c:	bne	1868c <__assert_fail@plt+0x72a8>
   19810:	b	1a38c <__assert_fail@plt+0x8fa8>
   19814:	movw	r3, #13048	; 0x32f8
   19818:	movt	r3, #2
   1981c:	str	r3, [fp, #-56]	; 0xffffffc8
   19820:	b	1847c <__assert_fail@plt+0x7098>
   19824:	mov	r3, #1
   19828:	str	r3, [fp, #-308]	; 0xfffffecc
   1982c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19830:	cmp	r3, #45	; 0x2d
   19834:	beq	1984c <__assert_fail@plt+0x8468>
   19838:	ldr	r3, [fp, #12]
   1983c:	cmp	r3, #0
   19840:	blt	1984c <__assert_fail@plt+0x8468>
   19844:	ldr	r3, [fp, #12]
   19848:	b	19850 <__assert_fail@plt+0x846c>
   1984c:	mov	r3, #0
   19850:	str	r3, [fp, #-312]	; 0xfffffec8
   19854:	ldr	r2, [fp, #-308]	; 0xfffffecc
   19858:	ldr	r3, [fp, #-312]	; 0xfffffec8
   1985c:	cmp	r2, r3
   19860:	movcs	r3, r2
   19864:	movcc	r3, r3
   19868:	str	r3, [fp, #-316]	; 0xfffffec4
   1986c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   19870:	ldr	r3, [fp, #-16]
   19874:	sub	r3, r2, r3
   19878:	ldr	r2, [fp, #-316]	; 0xfffffec4
   1987c:	cmp	r2, r3
   19880:	bcc	1989c <__assert_fail@plt+0x84b8>
   19884:	bl	112d0 <__errno_location@plt>
   19888:	mov	r2, r0
   1988c:	mov	r3, #34	; 0x22
   19890:	str	r3, [r2]
   19894:	mov	r3, #0
   19898:	b	1a578 <__assert_fail@plt+0x9194>
   1989c:	ldr	r3, [fp, #-20]	; 0xffffffec
   198a0:	cmp	r3, #0
   198a4:	beq	19940 <__assert_fail@plt+0x855c>
   198a8:	ldr	r2, [fp, #-308]	; 0xfffffecc
   198ac:	ldr	r3, [fp, #-312]	; 0xfffffec8
   198b0:	cmp	r2, r3
   198b4:	bcs	19924 <__assert_fail@plt+0x8540>
   198b8:	ldr	r2, [fp, #-312]	; 0xfffffec8
   198bc:	ldr	r3, [fp, #-308]	; 0xfffffecc
   198c0:	sub	r3, r2, r3
   198c4:	str	r3, [fp, #-320]	; 0xfffffec0
   198c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   198cc:	cmp	r3, #48	; 0x30
   198d0:	beq	198e0 <__assert_fail@plt+0x84fc>
   198d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   198d8:	cmp	r3, #43	; 0x2b
   198dc:	bne	19904 <__assert_fail@plt+0x8520>
   198e0:	ldr	r2, [fp, #-320]	; 0xfffffec0
   198e4:	mov	r1, #48	; 0x30
   198e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   198ec:	bl	112e8 <memset@plt>
   198f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   198f4:	ldr	r3, [fp, #-320]	; 0xfffffec0
   198f8:	add	r3, r2, r3
   198fc:	str	r3, [fp, #-20]	; 0xffffffec
   19900:	b	19924 <__assert_fail@plt+0x8540>
   19904:	ldr	r2, [fp, #-320]	; 0xfffffec0
   19908:	mov	r1, #32
   1990c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19910:	bl	112e8 <memset@plt>
   19914:	ldr	r2, [fp, #-20]	; 0xffffffec
   19918:	ldr	r3, [fp, #-320]	; 0xfffffec0
   1991c:	add	r3, r2, r3
   19920:	str	r3, [fp, #-20]	; 0xffffffec
   19924:	ldr	r3, [fp, #-20]	; 0xffffffec
   19928:	mov	r2, #9
   1992c:	strb	r2, [r3]
   19930:	ldr	r2, [fp, #-20]	; 0xffffffec
   19934:	ldr	r3, [fp, #-308]	; 0xfffffecc
   19938:	add	r3, r2, r3
   1993c:	str	r3, [fp, #-20]	; 0xffffffec
   19940:	ldr	r2, [fp, #-16]
   19944:	ldr	r3, [fp, #-316]	; 0xfffffec4
   19948:	add	r3, r2, r3
   1994c:	str	r3, [fp, #-16]
   19950:	b	1a51c <__assert_fail@plt+0x9138>
   19954:	mov	r3, #1
   19958:	str	r3, [fp, #-36]	; 0xffffffdc
   1995c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19960:	ldr	r3, [r3, #24]
   19964:	add	r3, r3, #6
   19968:	movw	r2, #9363	; 0x2493
   1996c:	movt	r2, #37449	; 0x9249
   19970:	smull	r1, r2, r2, r3
   19974:	add	r2, r2, r3
   19978:	asr	r1, r2, #2
   1997c:	asr	r2, r3, #31
   19980:	sub	r1, r1, r2
   19984:	mov	r2, r1
   19988:	lsl	r2, r2, #3
   1998c:	sub	r2, r2, r1
   19990:	sub	r1, r3, r2
   19994:	add	r3, r1, #1
   19998:	str	r3, [fp, #-40]	; 0xffffffd8
   1999c:	b	18aa0 <__assert_fail@plt+0x76bc>
   199a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199a4:	cmp	r3, #69	; 0x45
   199a8:	beq	1a358 <__assert_fail@plt+0x8f74>
   199ac:	mov	r3, #2
   199b0:	str	r3, [fp, #-36]	; 0xffffffdc
   199b4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   199b8:	ldr	r2, [r3, #28]
   199bc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   199c0:	ldr	r3, [r3, #24]
   199c4:	sub	r3, r2, r3
   199c8:	add	r3, r3, #7
   199cc:	movw	r2, #9363	; 0x2493
   199d0:	movt	r2, #37449	; 0x9249
   199d4:	smull	r1, r2, r2, r3
   199d8:	add	r2, r2, r3
   199dc:	asr	r2, r2, #2
   199e0:	asr	r3, r3, #31
   199e4:	sub	r3, r2, r3
   199e8:	str	r3, [fp, #-40]	; 0xffffffd8
   199ec:	b	18aa0 <__assert_fail@plt+0x76bc>
   199f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199f4:	cmp	r3, #69	; 0x45
   199f8:	beq	1a360 <__assert_fail@plt+0x8f7c>
   199fc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19a00:	ldr	r3, [r3, #20]
   19a04:	ldr	r2, [fp, #-1444]	; 0xfffffa5c
   19a08:	ldr	r2, [r2, #20]
   19a0c:	cmp	r2, #0
   19a10:	bge	19a1c <__assert_fail@plt+0x8638>
   19a14:	mov	r2, #300	; 0x12c
   19a18:	b	19a20 <__assert_fail@plt+0x863c>
   19a1c:	mvn	r2, #99	; 0x63
   19a20:	add	r3, r2, r3
   19a24:	str	r3, [fp, #-324]	; 0xfffffebc
   19a28:	mov	r3, #0
   19a2c:	str	r3, [fp, #-104]	; 0xffffff98
   19a30:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19a34:	ldr	r2, [r3, #28]
   19a38:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19a3c:	ldr	r3, [r3, #24]
   19a40:	mov	r1, r3
   19a44:	mov	r0, r2
   19a48:	bl	17aec <__assert_fail@plt+0x6708>
   19a4c:	str	r0, [fp, #-108]	; 0xffffff94
   19a50:	ldr	r3, [fp, #-108]	; 0xffffff94
   19a54:	cmp	r3, #0
   19a58:	bge	19b1c <__assert_fail@plt+0x8738>
   19a5c:	mvn	r3, #0
   19a60:	str	r3, [fp, #-104]	; 0xffffff98
   19a64:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19a68:	ldr	r1, [r3, #28]
   19a6c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   19a70:	sub	r3, r3, #1
   19a74:	and	r3, r3, #3
   19a78:	cmp	r3, #0
   19a7c:	bne	19af0 <__assert_fail@plt+0x870c>
   19a80:	ldr	r3, [fp, #-324]	; 0xfffffebc
   19a84:	sub	r2, r3, #1
   19a88:	movw	r3, #34079	; 0x851f
   19a8c:	movt	r3, #20971	; 0x51eb
   19a90:	smull	r0, r3, r3, r2
   19a94:	asr	r0, r3, #5
   19a98:	asr	r3, r2, #31
   19a9c:	sub	r3, r0, r3
   19aa0:	mov	r0, #100	; 0x64
   19aa4:	mul	r3, r0, r3
   19aa8:	sub	r3, r2, r3
   19aac:	cmp	r3, #0
   19ab0:	bne	19ae8 <__assert_fail@plt+0x8704>
   19ab4:	ldr	r3, [fp, #-324]	; 0xfffffebc
   19ab8:	sub	r2, r3, #1
   19abc:	movw	r3, #34079	; 0x851f
   19ac0:	movt	r3, #20971	; 0x51eb
   19ac4:	smull	r0, r3, r3, r2
   19ac8:	asr	r0, r3, #7
   19acc:	asr	r3, r2, #31
   19ad0:	sub	r3, r0, r3
   19ad4:	mov	r0, #400	; 0x190
   19ad8:	mul	r3, r0, r3
   19adc:	sub	r3, r2, r3
   19ae0:	cmp	r3, #0
   19ae4:	bne	19af0 <__assert_fail@plt+0x870c>
   19ae8:	mov	r3, #1
   19aec:	b	19af4 <__assert_fail@plt+0x8710>
   19af0:	mov	r3, #0
   19af4:	add	r3, r3, #364	; 0x16c
   19af8:	add	r3, r3, #1
   19afc:	add	r2, r1, r3
   19b00:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19b04:	ldr	r3, [r3, #24]
   19b08:	mov	r1, r3
   19b0c:	mov	r0, r2
   19b10:	bl	17aec <__assert_fail@plt+0x6708>
   19b14:	str	r0, [fp, #-108]	; 0xffffff94
   19b18:	b	19be0 <__assert_fail@plt+0x87fc>
   19b1c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19b20:	ldr	r1, [r3, #28]
   19b24:	ldr	r3, [fp, #-324]	; 0xfffffebc
   19b28:	and	r3, r3, #3
   19b2c:	cmp	r3, #0
   19b30:	bne	19b9c <__assert_fail@plt+0x87b8>
   19b34:	ldr	r2, [fp, #-324]	; 0xfffffebc
   19b38:	movw	r3, #34079	; 0x851f
   19b3c:	movt	r3, #20971	; 0x51eb
   19b40:	smull	r0, r3, r3, r2
   19b44:	asr	r0, r3, #5
   19b48:	asr	r3, r2, #31
   19b4c:	sub	r3, r0, r3
   19b50:	mov	r0, #100	; 0x64
   19b54:	mul	r3, r0, r3
   19b58:	sub	r3, r2, r3
   19b5c:	cmp	r3, #0
   19b60:	bne	19b94 <__assert_fail@plt+0x87b0>
   19b64:	ldr	r2, [fp, #-324]	; 0xfffffebc
   19b68:	movw	r3, #34079	; 0x851f
   19b6c:	movt	r3, #20971	; 0x51eb
   19b70:	smull	r0, r3, r3, r2
   19b74:	asr	r0, r3, #7
   19b78:	asr	r3, r2, #31
   19b7c:	sub	r3, r0, r3
   19b80:	mov	r0, #400	; 0x190
   19b84:	mul	r3, r0, r3
   19b88:	sub	r3, r2, r3
   19b8c:	cmp	r3, #0
   19b90:	bne	19b9c <__assert_fail@plt+0x87b8>
   19b94:	mov	r3, #1
   19b98:	b	19ba0 <__assert_fail@plt+0x87bc>
   19b9c:	mov	r3, #0
   19ba0:	add	r3, r3, #364	; 0x16c
   19ba4:	add	r3, r3, #1
   19ba8:	sub	r2, r1, r3
   19bac:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19bb0:	ldr	r3, [r3, #24]
   19bb4:	mov	r1, r3
   19bb8:	mov	r0, r2
   19bbc:	bl	17aec <__assert_fail@plt+0x6708>
   19bc0:	str	r0, [fp, #-328]	; 0xfffffeb8
   19bc4:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   19bc8:	cmp	r3, #0
   19bcc:	blt	19be0 <__assert_fail@plt+0x87fc>
   19bd0:	mov	r3, #1
   19bd4:	str	r3, [fp, #-104]	; 0xffffff98
   19bd8:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   19bdc:	str	r3, [fp, #-108]	; 0xffffff94
   19be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19be4:	ldrb	r3, [r3]
   19be8:	cmp	r3, #71	; 0x47
   19bec:	beq	19cb4 <__assert_fail@plt+0x88d0>
   19bf0:	cmp	r3, #103	; 0x67
   19bf4:	bne	19d08 <__assert_fail@plt+0x8924>
   19bf8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19bfc:	ldr	r2, [r3, #20]
   19c00:	movw	r3, #34079	; 0x851f
   19c04:	movt	r3, #20971	; 0x51eb
   19c08:	smull	r1, r3, r3, r2
   19c0c:	asr	r1, r3, #5
   19c10:	asr	r3, r2, #31
   19c14:	sub	r3, r1, r3
   19c18:	mov	r1, #100	; 0x64
   19c1c:	mul	r3, r1, r3
   19c20:	sub	r3, r2, r3
   19c24:	ldr	r2, [fp, #-104]	; 0xffffff98
   19c28:	add	r3, r3, r2
   19c2c:	movw	r2, #34079	; 0x851f
   19c30:	movt	r2, #20971	; 0x51eb
   19c34:	smull	r1, r2, r2, r3
   19c38:	asr	r1, r2, #5
   19c3c:	asr	r2, r3, #31
   19c40:	sub	r2, r1, r2
   19c44:	mov	r1, #100	; 0x64
   19c48:	mul	r2, r1, r2
   19c4c:	sub	r3, r3, r2
   19c50:	str	r3, [fp, #-332]	; 0xfffffeb4
   19c54:	mov	r3, #2
   19c58:	str	r3, [fp, #-36]	; 0xffffffdc
   19c5c:	mov	r3, #0
   19c60:	strb	r3, [fp, #-45]	; 0xffffffd3
   19c64:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   19c68:	cmp	r3, #0
   19c6c:	bge	19ca8 <__assert_fail@plt+0x88c4>
   19c70:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19c74:	ldr	r2, [r3, #20]
   19c78:	ldr	r1, [fp, #-104]	; 0xffffff98
   19c7c:	movw	r3, #63636	; 0xf894
   19c80:	movt	r3, #65535	; 0xffff
   19c84:	sub	r3, r3, r1
   19c88:	cmp	r2, r3
   19c8c:	bge	19c9c <__assert_fail@plt+0x88b8>
   19c90:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   19c94:	rsb	r3, r3, #0
   19c98:	b	19cac <__assert_fail@plt+0x88c8>
   19c9c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   19ca0:	add	r3, r3, #100	; 0x64
   19ca4:	b	19cac <__assert_fail@plt+0x88c8>
   19ca8:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   19cac:	str	r3, [fp, #-44]	; 0xffffffd4
   19cb0:	b	18a10 <__assert_fail@plt+0x762c>
   19cb4:	mov	r3, #4
   19cb8:	str	r3, [fp, #-36]	; 0xffffffdc
   19cbc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19cc0:	ldr	r2, [r3, #20]
   19cc4:	ldr	r1, [fp, #-104]	; 0xffffff98
   19cc8:	movw	r3, #63636	; 0xf894
   19ccc:	movt	r3, #65535	; 0xffff
   19cd0:	sub	r3, r3, r1
   19cd4:	cmp	r2, r3
   19cd8:	movlt	r3, #1
   19cdc:	movge	r3, #0
   19ce0:	strb	r3, [fp, #-45]	; 0xffffffd3
   19ce4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19ce8:	ldr	r3, [r3, #20]
   19cec:	mov	r2, r3
   19cf0:	ldr	r3, [fp, #-104]	; 0xffffff98
   19cf4:	add	r3, r2, r3
   19cf8:	add	r3, r3, #1888	; 0x760
   19cfc:	add	r3, r3, #12
   19d00:	str	r3, [fp, #-44]	; 0xffffffd4
   19d04:	b	18a10 <__assert_fail@plt+0x762c>
   19d08:	mov	r3, #2
   19d0c:	str	r3, [fp, #-36]	; 0xffffffdc
   19d10:	ldr	r3, [fp, #-108]	; 0xffffff94
   19d14:	movw	r2, #9363	; 0x2493
   19d18:	movt	r2, #37449	; 0x9249
   19d1c:	smull	r1, r2, r2, r3
   19d20:	add	r2, r2, r3
   19d24:	asr	r2, r2, #2
   19d28:	asr	r3, r3, #31
   19d2c:	sub	r3, r2, r3
   19d30:	add	r3, r3, #1
   19d34:	str	r3, [fp, #-40]	; 0xffffffd8
   19d38:	b	18aa0 <__assert_fail@plt+0x76bc>
   19d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d40:	cmp	r3, #69	; 0x45
   19d44:	beq	1a368 <__assert_fail@plt+0x8f84>
   19d48:	mov	r3, #2
   19d4c:	str	r3, [fp, #-36]	; 0xffffffdc
   19d50:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19d54:	ldr	r0, [r3, #28]
   19d58:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19d5c:	ldr	r3, [r3, #24]
   19d60:	add	r3, r3, #6
   19d64:	movw	r2, #9363	; 0x2493
   19d68:	movt	r2, #37449	; 0x9249
   19d6c:	smull	r1, r2, r2, r3
   19d70:	add	r2, r2, r3
   19d74:	asr	r1, r2, #2
   19d78:	asr	r2, r3, #31
   19d7c:	sub	r1, r1, r2
   19d80:	mov	r2, r1
   19d84:	lsl	r2, r2, #3
   19d88:	sub	r2, r2, r1
   19d8c:	sub	r1, r3, r2
   19d90:	sub	r3, r0, r1
   19d94:	add	r3, r3, #7
   19d98:	movw	r2, #9363	; 0x2493
   19d9c:	movt	r2, #37449	; 0x9249
   19da0:	smull	r1, r2, r2, r3
   19da4:	add	r2, r2, r3
   19da8:	asr	r2, r2, #2
   19dac:	asr	r3, r3, #31
   19db0:	sub	r3, r2, r3
   19db4:	str	r3, [fp, #-40]	; 0xffffffd8
   19db8:	b	18aa0 <__assert_fail@plt+0x76bc>
   19dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dc0:	cmp	r3, #69	; 0x45
   19dc4:	beq	1a370 <__assert_fail@plt+0x8f8c>
   19dc8:	mov	r3, #1
   19dcc:	str	r3, [fp, #-36]	; 0xffffffdc
   19dd0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19dd4:	ldr	r3, [r3, #24]
   19dd8:	str	r3, [fp, #-40]	; 0xffffffd8
   19ddc:	b	18aa0 <__assert_fail@plt+0x76bc>
   19de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19de4:	cmp	r3, #69	; 0x45
   19de8:	beq	18694 <__assert_fail@plt+0x72b0>
   19dec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19df0:	cmp	r3, #79	; 0x4f
   19df4:	beq	1a378 <__assert_fail@plt+0x8f94>
   19df8:	mov	r3, #4
   19dfc:	str	r3, [fp, #-36]	; 0xffffffdc
   19e00:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19e04:	ldr	r2, [r3, #20]
   19e08:	movw	r3, #63636	; 0xf894
   19e0c:	movt	r3, #65535	; 0xffff
   19e10:	cmp	r2, r3
   19e14:	movlt	r3, #1
   19e18:	movge	r3, #0
   19e1c:	strb	r3, [fp, #-45]	; 0xffffffd3
   19e20:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19e24:	ldr	r3, [r3, #20]
   19e28:	add	r3, r3, #1888	; 0x760
   19e2c:	add	r3, r3, #12
   19e30:	str	r3, [fp, #-44]	; 0xffffffd4
   19e34:	b	18a10 <__assert_fail@plt+0x762c>
   19e38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e3c:	cmp	r3, #69	; 0x45
   19e40:	beq	1869c <__assert_fail@plt+0x72b8>
   19e44:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19e48:	ldr	r3, [r3, #20]
   19e4c:	movw	r2, #34079	; 0x851f
   19e50:	movt	r2, #20971	; 0x51eb
   19e54:	smull	r1, r2, r2, r3
   19e58:	asr	r1, r2, #5
   19e5c:	asr	r2, r3, #31
   19e60:	sub	r2, r1, r2
   19e64:	mov	r1, #100	; 0x64
   19e68:	mul	r2, r1, r2
   19e6c:	sub	r3, r3, r2
   19e70:	str	r3, [fp, #-112]	; 0xffffff90
   19e74:	ldr	r3, [fp, #-112]	; 0xffffff90
   19e78:	cmp	r3, #0
   19e7c:	bge	19eb0 <__assert_fail@plt+0x8acc>
   19e80:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   19e84:	ldr	r2, [r3, #20]
   19e88:	movw	r3, #63636	; 0xf894
   19e8c:	movt	r3, #65535	; 0xffff
   19e90:	cmp	r2, r3
   19e94:	bge	19ea4 <__assert_fail@plt+0x8ac0>
   19e98:	ldr	r3, [fp, #-112]	; 0xffffff90
   19e9c:	rsb	r3, r3, #0
   19ea0:	b	19eac <__assert_fail@plt+0x8ac8>
   19ea4:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ea8:	add	r3, r3, #100	; 0x64
   19eac:	str	r3, [fp, #-112]	; 0xffffff90
   19eb0:	mov	r3, #2
   19eb4:	str	r3, [fp, #-36]	; 0xffffffdc
   19eb8:	mov	r3, #0
   19ebc:	strb	r3, [fp, #-45]	; 0xffffffd3
   19ec0:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ec4:	str	r3, [fp, #-44]	; 0xffffffd4
   19ec8:	b	18a10 <__assert_fail@plt+0x762c>
   19ecc:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   19ed0:	cmp	r3, #0
   19ed4:	beq	19ee8 <__assert_fail@plt+0x8b04>
   19ed8:	mov	r3, #0
   19edc:	strb	r3, [fp, #-62]	; 0xffffffc2
   19ee0:	mov	r3, #1
   19ee4:	strb	r3, [fp, #-61]	; 0xffffffc3
   19ee8:	ldr	r0, [fp, #-12]
   19eec:	bl	11294 <strlen@plt>
   19ef0:	str	r0, [fp, #-336]	; 0xfffffeb0
   19ef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ef8:	cmp	r3, #45	; 0x2d
   19efc:	beq	19f14 <__assert_fail@plt+0x8b30>
   19f00:	ldr	r3, [fp, #12]
   19f04:	cmp	r3, #0
   19f08:	blt	19f14 <__assert_fail@plt+0x8b30>
   19f0c:	ldr	r3, [fp, #12]
   19f10:	b	19f18 <__assert_fail@plt+0x8b34>
   19f14:	mov	r3, #0
   19f18:	str	r3, [fp, #-340]	; 0xfffffeac
   19f1c:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   19f20:	ldr	r3, [fp, #-340]	; 0xfffffeac
   19f24:	cmp	r2, r3
   19f28:	movcs	r3, r2
   19f2c:	movcc	r3, r3
   19f30:	str	r3, [fp, #-344]	; 0xfffffea8
   19f34:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   19f38:	ldr	r3, [fp, #-16]
   19f3c:	sub	r3, r2, r3
   19f40:	ldr	r2, [fp, #-344]	; 0xfffffea8
   19f44:	cmp	r2, r3
   19f48:	bcc	19f64 <__assert_fail@plt+0x8b80>
   19f4c:	bl	112d0 <__errno_location@plt>
   19f50:	mov	r2, r0
   19f54:	mov	r3, #34	; 0x22
   19f58:	str	r3, [r2]
   19f5c:	mov	r3, #0
   19f60:	b	1a578 <__assert_fail@plt+0x9194>
   19f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f68:	cmp	r3, #0
   19f6c:	beq	1a04c <__assert_fail@plt+0x8c68>
   19f70:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   19f74:	ldr	r3, [fp, #-340]	; 0xfffffeac
   19f78:	cmp	r2, r3
   19f7c:	bcs	19fec <__assert_fail@plt+0x8c08>
   19f80:	ldr	r2, [fp, #-340]	; 0xfffffeac
   19f84:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   19f88:	sub	r3, r2, r3
   19f8c:	str	r3, [fp, #-348]	; 0xfffffea4
   19f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f94:	cmp	r3, #48	; 0x30
   19f98:	beq	19fa8 <__assert_fail@plt+0x8bc4>
   19f9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19fa0:	cmp	r3, #43	; 0x2b
   19fa4:	bne	19fcc <__assert_fail@plt+0x8be8>
   19fa8:	ldr	r2, [fp, #-348]	; 0xfffffea4
   19fac:	mov	r1, #48	; 0x30
   19fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19fb4:	bl	112e8 <memset@plt>
   19fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fbc:	ldr	r3, [fp, #-348]	; 0xfffffea4
   19fc0:	add	r3, r2, r3
   19fc4:	str	r3, [fp, #-20]	; 0xffffffec
   19fc8:	b	19fec <__assert_fail@plt+0x8c08>
   19fcc:	ldr	r2, [fp, #-348]	; 0xfffffea4
   19fd0:	mov	r1, #32
   19fd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   19fd8:	bl	112e8 <memset@plt>
   19fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fe0:	ldr	r3, [fp, #-348]	; 0xfffffea4
   19fe4:	add	r3, r2, r3
   19fe8:	str	r3, [fp, #-20]	; 0xffffffec
   19fec:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   19ff0:	cmp	r3, #0
   19ff4:	beq	1a00c <__assert_fail@plt+0x8c28>
   19ff8:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   19ffc:	ldr	r1, [fp, #-12]
   1a000:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a004:	bl	179f4 <__assert_fail@plt+0x6610>
   1a008:	b	1a03c <__assert_fail@plt+0x8c58>
   1a00c:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   1a010:	cmp	r3, #0
   1a014:	beq	1a02c <__assert_fail@plt+0x8c48>
   1a018:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   1a01c:	ldr	r1, [fp, #-12]
   1a020:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a024:	bl	17a70 <__assert_fail@plt+0x668c>
   1a028:	b	1a03c <__assert_fail@plt+0x8c58>
   1a02c:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   1a030:	ldr	r1, [fp, #-12]
   1a034:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a038:	bl	1112c <memcpy@plt>
   1a03c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a040:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   1a044:	add	r3, r2, r3
   1a048:	str	r3, [fp, #-20]	; 0xffffffec
   1a04c:	ldr	r2, [fp, #-16]
   1a050:	ldr	r3, [fp, #-344]	; 0xfffffea8
   1a054:	add	r3, r2, r3
   1a058:	str	r3, [fp, #-16]
   1a05c:	b	1a51c <__assert_fail@plt+0x9138>
   1a060:	mov	r3, #1
   1a064:	str	r3, [fp, #-68]	; 0xffffffbc
   1a068:	b	1a078 <__assert_fail@plt+0x8c94>
   1a06c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a070:	add	r3, r3, #1
   1a074:	str	r3, [fp, #-68]	; 0xffffffbc
   1a078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a07c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a080:	add	r3, r2, r3
   1a084:	ldrb	r3, [r3]
   1a088:	cmp	r3, #58	; 0x3a
   1a08c:	beq	1a06c <__assert_fail@plt+0x8c88>
   1a090:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a094:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a098:	add	r3, r2, r3
   1a09c:	ldrb	r3, [r3]
   1a0a0:	cmp	r3, #122	; 0x7a
   1a0a4:	bne	1a380 <__assert_fail@plt+0x8f9c>
   1a0a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a0ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a0b0:	add	r3, r2, r3
   1a0b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1a0b8:	b	1a0c4 <__assert_fail@plt+0x8ce0>
   1a0bc:	mov	r3, #0
   1a0c0:	str	r3, [fp, #-68]	; 0xffffffbc
   1a0c4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   1a0c8:	ldr	r3, [r3, #32]
   1a0cc:	cmp	r3, #0
   1a0d0:	blt	1a518 <__assert_fail@plt+0x9134>
   1a0d4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   1a0d8:	ldr	r3, [r3, #36]	; 0x24
   1a0dc:	str	r3, [fp, #-352]	; 0xfffffea0
   1a0e0:	ldr	r3, [fp, #-352]	; 0xfffffea0
   1a0e4:	cmp	r3, #0
   1a0e8:	blt	1a108 <__assert_fail@plt+0x8d24>
   1a0ec:	ldr	r3, [fp, #-352]	; 0xfffffea0
   1a0f0:	cmp	r3, #0
   1a0f4:	bne	1a110 <__assert_fail@plt+0x8d2c>
   1a0f8:	ldr	r3, [fp, #-12]
   1a0fc:	ldrb	r3, [r3]
   1a100:	cmp	r3, #45	; 0x2d
   1a104:	bne	1a110 <__assert_fail@plt+0x8d2c>
   1a108:	mov	r3, #1
   1a10c:	b	1a114 <__assert_fail@plt+0x8d30>
   1a110:	mov	r3, #0
   1a114:	strb	r3, [fp, #-45]	; 0xffffffd3
   1a118:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1a11c:	and	r3, r3, #1
   1a120:	strb	r3, [fp, #-45]	; 0xffffffd3
   1a124:	ldr	r3, [fp, #-352]	; 0xfffffea0
   1a128:	movw	r2, #46021	; 0xb3c5
   1a12c:	movt	r2, #37282	; 0x91a2
   1a130:	smull	r1, r2, r2, r3
   1a134:	add	r2, r2, r3
   1a138:	asr	r2, r2, #11
   1a13c:	asr	r3, r3, #31
   1a140:	sub	r3, r2, r3
   1a144:	str	r3, [fp, #-356]	; 0xfffffe9c
   1a148:	ldr	r3, [fp, #-352]	; 0xfffffea0
   1a14c:	movw	r2, #34953	; 0x8889
   1a150:	movt	r2, #34952	; 0x8888
   1a154:	smull	r1, r2, r2, r3
   1a158:	add	r2, r2, r3
   1a15c:	asr	r2, r2, #5
   1a160:	asr	r3, r3, #31
   1a164:	sub	r2, r2, r3
   1a168:	movw	r3, #34953	; 0x8889
   1a16c:	movt	r3, #34952	; 0x8888
   1a170:	smull	r1, r3, r3, r2
   1a174:	add	r3, r3, r2
   1a178:	asr	r1, r3, #5
   1a17c:	asr	r3, r2, #31
   1a180:	sub	r1, r1, r3
   1a184:	mov	r3, r1
   1a188:	lsl	r3, r3, #4
   1a18c:	sub	r3, r3, r1
   1a190:	lsl	r3, r3, #2
   1a194:	sub	r3, r2, r3
   1a198:	str	r3, [fp, #-360]	; 0xfffffe98
   1a19c:	ldr	r2, [fp, #-352]	; 0xfffffea0
   1a1a0:	movw	r3, #34953	; 0x8889
   1a1a4:	movt	r3, #34952	; 0x8888
   1a1a8:	smull	r1, r3, r3, r2
   1a1ac:	add	r3, r3, r2
   1a1b0:	asr	r1, r3, #5
   1a1b4:	asr	r3, r2, #31
   1a1b8:	sub	r1, r1, r3
   1a1bc:	mov	r3, r1
   1a1c0:	lsl	r3, r3, #4
   1a1c4:	sub	r3, r3, r1
   1a1c8:	lsl	r3, r3, #2
   1a1cc:	sub	r3, r2, r3
   1a1d0:	str	r3, [fp, #-364]	; 0xfffffe94
   1a1d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a1d8:	cmp	r3, #3
   1a1dc:	ldrls	pc, [pc, r3, lsl #2]
   1a1e0:	b	1a388 <__assert_fail@plt+0x8fa4>
   1a1e4:	strdeq	sl, [r1], -r4
   1a1e8:	andeq	sl, r1, r4, lsr #4
   1a1ec:	andeq	sl, r1, r4, asr r2
   1a1f0:	muleq	r1, r0, r2
   1a1f4:	mov	r3, #5
   1a1f8:	str	r3, [fp, #-36]	; 0xffffffdc
   1a1fc:	mov	r3, #0
   1a200:	str	r3, [fp, #-52]	; 0xffffffcc
   1a204:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a208:	mov	r2, #100	; 0x64
   1a20c:	mul	r2, r2, r3
   1a210:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a214:	add	r3, r2, r3
   1a218:	str	r3, [fp, #-44]	; 0xffffffd4
   1a21c:	b	18a04 <__assert_fail@plt+0x7620>
   1a220:	nop	{0}
   1a224:	mov	r3, #6
   1a228:	str	r3, [fp, #-36]	; 0xffffffdc
   1a22c:	mov	r3, #4
   1a230:	str	r3, [fp, #-52]	; 0xffffffcc
   1a234:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a238:	mov	r2, #100	; 0x64
   1a23c:	mul	r2, r2, r3
   1a240:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a244:	add	r3, r2, r3
   1a248:	str	r3, [fp, #-44]	; 0xffffffd4
   1a24c:	b	18a04 <__assert_fail@plt+0x7620>
   1a250:	nop	{0}
   1a254:	mov	r3, #9
   1a258:	str	r3, [fp, #-36]	; 0xffffffdc
   1a25c:	mov	r3, #20
   1a260:	str	r3, [fp, #-52]	; 0xffffffcc
   1a264:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a268:	movw	r2, #10000	; 0x2710
   1a26c:	mul	r2, r2, r3
   1a270:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a274:	mov	r1, #100	; 0x64
   1a278:	mul	r3, r1, r3
   1a27c:	add	r2, r2, r3
   1a280:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1a284:	add	r3, r2, r3
   1a288:	str	r3, [fp, #-44]	; 0xffffffd4
   1a28c:	b	18a04 <__assert_fail@plt+0x7620>
   1a290:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1a294:	cmp	r3, #0
   1a298:	bne	1a250 <__assert_fail@plt+0x8e6c>
   1a29c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a2a0:	cmp	r3, #0
   1a2a4:	bne	1a220 <__assert_fail@plt+0x8e3c>
   1a2a8:	mov	r3, #3
   1a2ac:	str	r3, [fp, #-36]	; 0xffffffdc
   1a2b0:	mov	r3, #0
   1a2b4:	str	r3, [fp, #-52]	; 0xffffffcc
   1a2b8:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a2bc:	str	r3, [fp, #-44]	; 0xffffffd4
   1a2c0:	b	18a04 <__assert_fail@plt+0x7620>
   1a2c4:	nop	{0}
   1a2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a2cc:	sub	r3, r3, #1
   1a2d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a2d4:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a2d8:	nop	{0}
   1a2dc:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a2e0:	nop	{0}
   1a2e4:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a2e8:	nop	{0}
   1a2ec:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a2f0:	nop	{0}
   1a2f4:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a2f8:	nop	{0}
   1a2fc:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a300:	nop	{0}
   1a304:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a308:	nop	{0}
   1a30c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a310:	nop	{0}
   1a314:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a318:	nop	{0}
   1a31c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a320:	nop	{0}
   1a324:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a328:	nop	{0}
   1a32c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a330:	nop	{0}
   1a334:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a338:	nop	{0}
   1a33c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a340:	nop	{0}
   1a344:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a348:	nop	{0}
   1a34c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a350:	nop	{0}
   1a354:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a358:	nop	{0}
   1a35c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a360:	nop	{0}
   1a364:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a368:	nop	{0}
   1a36c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a370:	nop	{0}
   1a374:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a378:	nop	{0}
   1a37c:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a380:	nop	{0}
   1a384:	b	1a38c <__assert_fail@plt+0x8fa8>
   1a388:	nop	{0}
   1a38c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a390:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a394:	sub	r3, r2, r3
   1a398:	add	r3, r3, #1
   1a39c:	str	r3, [fp, #-368]	; 0xfffffe90
   1a3a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a3a4:	cmp	r3, #45	; 0x2d
   1a3a8:	beq	1a3c0 <__assert_fail@plt+0x8fdc>
   1a3ac:	ldr	r3, [fp, #12]
   1a3b0:	cmp	r3, #0
   1a3b4:	blt	1a3c0 <__assert_fail@plt+0x8fdc>
   1a3b8:	ldr	r3, [fp, #12]
   1a3bc:	b	1a3c4 <__assert_fail@plt+0x8fe0>
   1a3c0:	mov	r3, #0
   1a3c4:	str	r3, [fp, #-372]	; 0xfffffe8c
   1a3c8:	ldr	r2, [fp, #-368]	; 0xfffffe90
   1a3cc:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   1a3d0:	cmp	r2, r3
   1a3d4:	movcs	r3, r2
   1a3d8:	movcc	r3, r3
   1a3dc:	str	r3, [fp, #-376]	; 0xfffffe88
   1a3e0:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   1a3e4:	ldr	r3, [fp, #-16]
   1a3e8:	sub	r3, r2, r3
   1a3ec:	ldr	r2, [fp, #-376]	; 0xfffffe88
   1a3f0:	cmp	r2, r3
   1a3f4:	bcc	1a410 <__assert_fail@plt+0x902c>
   1a3f8:	bl	112d0 <__errno_location@plt>
   1a3fc:	mov	r2, r0
   1a400:	mov	r3, #34	; 0x22
   1a404:	str	r3, [r2]
   1a408:	mov	r3, #0
   1a40c:	b	1a578 <__assert_fail@plt+0x9194>
   1a410:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a414:	cmp	r3, #0
   1a418:	beq	1a4f8 <__assert_fail@plt+0x9114>
   1a41c:	ldr	r2, [fp, #-368]	; 0xfffffe90
   1a420:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   1a424:	cmp	r2, r3
   1a428:	bcs	1a498 <__assert_fail@plt+0x90b4>
   1a42c:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   1a430:	ldr	r3, [fp, #-368]	; 0xfffffe90
   1a434:	sub	r3, r2, r3
   1a438:	str	r3, [fp, #-380]	; 0xfffffe84
   1a43c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a440:	cmp	r3, #48	; 0x30
   1a444:	beq	1a454 <__assert_fail@plt+0x9070>
   1a448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a44c:	cmp	r3, #43	; 0x2b
   1a450:	bne	1a478 <__assert_fail@plt+0x9094>
   1a454:	ldr	r2, [fp, #-380]	; 0xfffffe84
   1a458:	mov	r1, #48	; 0x30
   1a45c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a460:	bl	112e8 <memset@plt>
   1a464:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a468:	ldr	r3, [fp, #-380]	; 0xfffffe84
   1a46c:	add	r3, r2, r3
   1a470:	str	r3, [fp, #-20]	; 0xffffffec
   1a474:	b	1a498 <__assert_fail@plt+0x90b4>
   1a478:	ldr	r2, [fp, #-380]	; 0xfffffe84
   1a47c:	mov	r1, #32
   1a480:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a484:	bl	112e8 <memset@plt>
   1a488:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a48c:	ldr	r3, [fp, #-380]	; 0xfffffe84
   1a490:	add	r3, r2, r3
   1a494:	str	r3, [fp, #-20]	; 0xffffffec
   1a498:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   1a49c:	cmp	r3, #0
   1a4a0:	beq	1a4b8 <__assert_fail@plt+0x90d4>
   1a4a4:	ldr	r2, [fp, #-368]	; 0xfffffe90
   1a4a8:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4b0:	bl	179f4 <__assert_fail@plt+0x6610>
   1a4b4:	b	1a4e8 <__assert_fail@plt+0x9104>
   1a4b8:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   1a4bc:	cmp	r3, #0
   1a4c0:	beq	1a4d8 <__assert_fail@plt+0x90f4>
   1a4c4:	ldr	r2, [fp, #-368]	; 0xfffffe90
   1a4c8:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a4cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4d0:	bl	17a70 <__assert_fail@plt+0x668c>
   1a4d4:	b	1a4e8 <__assert_fail@plt+0x9104>
   1a4d8:	ldr	r2, [fp, #-368]	; 0xfffffe90
   1a4dc:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4e4:	bl	1112c <memcpy@plt>
   1a4e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4ec:	ldr	r3, [fp, #-368]	; 0xfffffe90
   1a4f0:	add	r3, r2, r3
   1a4f4:	str	r3, [fp, #-20]	; 0xffffffec
   1a4f8:	ldr	r2, [fp, #-16]
   1a4fc:	ldr	r3, [fp, #-376]	; 0xfffffe88
   1a500:	add	r3, r2, r3
   1a504:	str	r3, [fp, #-16]
   1a508:	nop	{0}
   1a50c:	b	1a51c <__assert_fail@plt+0x9138>
   1a510:	nop	{0}
   1a514:	b	1a51c <__assert_fail@plt+0x9138>
   1a518:	nop	{0}
   1a51c:	mvn	r3, #0
   1a520:	str	r3, [fp, #12]
   1a524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a528:	add	r3, r3, #1
   1a52c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a534:	ldrb	r3, [r3]
   1a538:	cmp	r3, #0
   1a53c:	bne	17ca4 <__assert_fail@plt+0x68c0>
   1a540:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a544:	cmp	r3, #0
   1a548:	beq	1a564 <__assert_fail@plt+0x9180>
   1a54c:	ldr	r3, [fp, #-1436]	; 0xfffffa64
   1a550:	cmp	r3, #0
   1a554:	beq	1a564 <__assert_fail@plt+0x9180>
   1a558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a55c:	mov	r2, #0
   1a560:	strb	r2, [r3]
   1a564:	bl	112d0 <__errno_location@plt>
   1a568:	mov	r2, r0
   1a56c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a570:	str	r3, [r2]
   1a574:	ldr	r3, [fp, #-16]
   1a578:	mov	r0, r3
   1a57c:	sub	sp, fp, #4
   1a580:	ldr	fp, [sp]
   1a584:	add	sp, sp, #4
   1a588:	pop	{pc}		; (ldr pc, [sp], #4)
   1a58c:	str	fp, [sp, #-8]!
   1a590:	str	lr, [sp, #4]
   1a594:	add	fp, sp, #4
   1a598:	sub	sp, sp, #16
   1a59c:	str	r0, [fp, #-16]
   1a5a0:	ldr	r3, [fp, #-16]
   1a5a4:	cmp	r3, #0
   1a5a8:	bne	1a5d0 <__assert_fail@plt+0x91ec>
   1a5ac:	movw	r3, #16864	; 0x41e0
   1a5b0:	movt	r3, #3
   1a5b4:	ldr	r3, [r3]
   1a5b8:	mov	r2, #55	; 0x37
   1a5bc:	mov	r1, #1
   1a5c0:	movw	r0, #13060	; 0x3304
   1a5c4:	movt	r0, #2
   1a5c8:	bl	111c8 <fwrite@plt>
   1a5cc:	bl	113c0 <abort@plt>
   1a5d0:	mov	r1, #47	; 0x2f
   1a5d4:	ldr	r0, [fp, #-16]
   1a5d8:	bl	11354 <strrchr@plt>
   1a5dc:	str	r0, [fp, #-8]
   1a5e0:	ldr	r3, [fp, #-8]
   1a5e4:	cmp	r3, #0
   1a5e8:	beq	1a5f8 <__assert_fail@plt+0x9214>
   1a5ec:	ldr	r3, [fp, #-8]
   1a5f0:	add	r3, r3, #1
   1a5f4:	b	1a5fc <__assert_fail@plt+0x9218>
   1a5f8:	ldr	r3, [fp, #-16]
   1a5fc:	str	r3, [fp, #-12]
   1a600:	ldr	r2, [fp, #-12]
   1a604:	ldr	r3, [fp, #-16]
   1a608:	sub	r3, r2, r3
   1a60c:	cmp	r3, #6
   1a610:	ble	1a680 <__assert_fail@plt+0x929c>
   1a614:	ldr	r3, [fp, #-12]
   1a618:	sub	r3, r3, #7
   1a61c:	mov	r2, #7
   1a620:	movw	r1, #13116	; 0x333c
   1a624:	movt	r1, #2
   1a628:	mov	r0, r3
   1a62c:	bl	113b4 <strncmp@plt>
   1a630:	mov	r3, r0
   1a634:	cmp	r3, #0
   1a638:	bne	1a680 <__assert_fail@plt+0x929c>
   1a63c:	ldr	r3, [fp, #-12]
   1a640:	str	r3, [fp, #-16]
   1a644:	mov	r2, #3
   1a648:	movw	r1, #13124	; 0x3344
   1a64c:	movt	r1, #2
   1a650:	ldr	r0, [fp, #-12]
   1a654:	bl	113b4 <strncmp@plt>
   1a658:	mov	r3, r0
   1a65c:	cmp	r3, #0
   1a660:	bne	1a680 <__assert_fail@plt+0x929c>
   1a664:	ldr	r3, [fp, #-12]
   1a668:	add	r3, r3, #3
   1a66c:	str	r3, [fp, #-16]
   1a670:	movw	r3, #16848	; 0x41d0
   1a674:	movt	r3, #3
   1a678:	ldr	r2, [fp, #-16]
   1a67c:	str	r2, [r3]
   1a680:	movw	r3, #17076	; 0x42b4
   1a684:	movt	r3, #3
   1a688:	ldr	r2, [fp, #-16]
   1a68c:	str	r2, [r3]
   1a690:	movw	r3, #16852	; 0x41d4
   1a694:	movt	r3, #3
   1a698:	ldr	r2, [fp, #-16]
   1a69c:	str	r2, [r3]
   1a6a0:	nop	{0}
   1a6a4:	sub	sp, fp, #4
   1a6a8:	ldr	fp, [sp]
   1a6ac:	add	sp, sp, #4
   1a6b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6b4:	str	fp, [sp, #-8]!
   1a6b8:	str	lr, [sp, #4]
   1a6bc:	add	fp, sp, #4
   1a6c0:	sub	sp, sp, #16
   1a6c4:	str	r0, [fp, #-16]
   1a6c8:	bl	112d0 <__errno_location@plt>
   1a6cc:	mov	r3, r0
   1a6d0:	ldr	r3, [r3]
   1a6d4:	str	r3, [fp, #-8]
   1a6d8:	ldr	r3, [fp, #-16]
   1a6dc:	cmp	r3, #0
   1a6e0:	beq	1a6ec <__assert_fail@plt+0x9308>
   1a6e4:	ldr	r3, [fp, #-16]
   1a6e8:	b	1a6f4 <__assert_fail@plt+0x9310>
   1a6ec:	movw	r3, #17080	; 0x42b8
   1a6f0:	movt	r3, #3
   1a6f4:	mov	r1, #48	; 0x30
   1a6f8:	mov	r0, r3
   1a6fc:	bl	1eae0 <__assert_fail@plt+0xd6fc>
   1a700:	mov	r3, r0
   1a704:	str	r3, [fp, #-12]
   1a708:	bl	112d0 <__errno_location@plt>
   1a70c:	mov	r2, r0
   1a710:	ldr	r3, [fp, #-8]
   1a714:	str	r3, [r2]
   1a718:	ldr	r3, [fp, #-12]
   1a71c:	mov	r0, r3
   1a720:	sub	sp, fp, #4
   1a724:	ldr	fp, [sp]
   1a728:	add	sp, sp, #4
   1a72c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a730:	push	{fp}		; (str fp, [sp, #-4]!)
   1a734:	add	fp, sp, #0
   1a738:	sub	sp, sp, #12
   1a73c:	str	r0, [fp, #-8]
   1a740:	ldr	r3, [fp, #-8]
   1a744:	cmp	r3, #0
   1a748:	beq	1a754 <__assert_fail@plt+0x9370>
   1a74c:	ldr	r3, [fp, #-8]
   1a750:	b	1a75c <__assert_fail@plt+0x9378>
   1a754:	movw	r3, #17080	; 0x42b8
   1a758:	movt	r3, #3
   1a75c:	ldr	r3, [r3]
   1a760:	mov	r0, r3
   1a764:	add	sp, fp, #0
   1a768:	pop	{fp}		; (ldr fp, [sp], #4)
   1a76c:	bx	lr
   1a770:	push	{fp}		; (str fp, [sp, #-4]!)
   1a774:	add	fp, sp, #0
   1a778:	sub	sp, sp, #12
   1a77c:	str	r0, [fp, #-8]
   1a780:	str	r1, [fp, #-12]
   1a784:	ldr	r3, [fp, #-8]
   1a788:	cmp	r3, #0
   1a78c:	beq	1a798 <__assert_fail@plt+0x93b4>
   1a790:	ldr	r3, [fp, #-8]
   1a794:	b	1a7a0 <__assert_fail@plt+0x93bc>
   1a798:	movw	r3, #17080	; 0x42b8
   1a79c:	movt	r3, #3
   1a7a0:	ldr	r2, [fp, #-12]
   1a7a4:	str	r2, [r3]
   1a7a8:	nop	{0}
   1a7ac:	add	sp, fp, #0
   1a7b0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a7b4:	bx	lr
   1a7b8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a7bc:	add	fp, sp, #0
   1a7c0:	sub	sp, sp, #36	; 0x24
   1a7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a7c8:	mov	r3, r1
   1a7cc:	str	r2, [fp, #-32]	; 0xffffffe0
   1a7d0:	strb	r3, [fp, #-25]	; 0xffffffe7
   1a7d4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1a7d8:	strb	r3, [fp, #-5]
   1a7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7e0:	cmp	r3, #0
   1a7e4:	beq	1a7f0 <__assert_fail@plt+0x940c>
   1a7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7ec:	b	1a7f8 <__assert_fail@plt+0x9414>
   1a7f0:	movw	r3, #17080	; 0x42b8
   1a7f4:	movt	r3, #3
   1a7f8:	add	r2, r3, #8
   1a7fc:	ldrb	r3, [fp, #-5]
   1a800:	lsr	r3, r3, #5
   1a804:	uxtb	r3, r3
   1a808:	lsl	r3, r3, #2
   1a80c:	add	r3, r2, r3
   1a810:	str	r3, [fp, #-12]
   1a814:	ldrb	r3, [fp, #-5]
   1a818:	and	r3, r3, #31
   1a81c:	str	r3, [fp, #-16]
   1a820:	ldr	r3, [fp, #-12]
   1a824:	ldr	r2, [r3]
   1a828:	ldr	r3, [fp, #-16]
   1a82c:	lsr	r3, r2, r3
   1a830:	and	r3, r3, #1
   1a834:	str	r3, [fp, #-20]	; 0xffffffec
   1a838:	ldr	r3, [fp, #-12]
   1a83c:	ldr	r3, [r3]
   1a840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a844:	and	r1, r2, #1
   1a848:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a84c:	eor	r1, r1, r2
   1a850:	ldr	r2, [fp, #-16]
   1a854:	lsl	r2, r1, r2
   1a858:	eor	r2, r2, r3
   1a85c:	ldr	r3, [fp, #-12]
   1a860:	str	r2, [r3]
   1a864:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a868:	mov	r0, r3
   1a86c:	add	sp, fp, #0
   1a870:	pop	{fp}		; (ldr fp, [sp], #4)
   1a874:	bx	lr
   1a878:	push	{fp}		; (str fp, [sp, #-4]!)
   1a87c:	add	fp, sp, #0
   1a880:	sub	sp, sp, #20
   1a884:	str	r0, [fp, #-16]
   1a888:	str	r1, [fp, #-20]	; 0xffffffec
   1a88c:	ldr	r3, [fp, #-16]
   1a890:	cmp	r3, #0
   1a894:	bne	1a8a4 <__assert_fail@plt+0x94c0>
   1a898:	movw	r3, #17080	; 0x42b8
   1a89c:	movt	r3, #3
   1a8a0:	str	r3, [fp, #-16]
   1a8a4:	ldr	r3, [fp, #-16]
   1a8a8:	ldr	r3, [r3, #4]
   1a8ac:	str	r3, [fp, #-8]
   1a8b0:	ldr	r3, [fp, #-16]
   1a8b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a8b8:	str	r2, [r3, #4]
   1a8bc:	ldr	r3, [fp, #-8]
   1a8c0:	mov	r0, r3
   1a8c4:	add	sp, fp, #0
   1a8c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a8cc:	bx	lr
   1a8d0:	str	fp, [sp, #-8]!
   1a8d4:	str	lr, [sp, #4]
   1a8d8:	add	fp, sp, #4
   1a8dc:	sub	sp, sp, #16
   1a8e0:	str	r0, [fp, #-8]
   1a8e4:	str	r1, [fp, #-12]
   1a8e8:	str	r2, [fp, #-16]
   1a8ec:	ldr	r3, [fp, #-8]
   1a8f0:	cmp	r3, #0
   1a8f4:	bne	1a904 <__assert_fail@plt+0x9520>
   1a8f8:	movw	r3, #17080	; 0x42b8
   1a8fc:	movt	r3, #3
   1a900:	str	r3, [fp, #-8]
   1a904:	ldr	r3, [fp, #-8]
   1a908:	mov	r2, #10
   1a90c:	str	r2, [r3]
   1a910:	ldr	r3, [fp, #-12]
   1a914:	cmp	r3, #0
   1a918:	beq	1a928 <__assert_fail@plt+0x9544>
   1a91c:	ldr	r3, [fp, #-16]
   1a920:	cmp	r3, #0
   1a924:	bne	1a92c <__assert_fail@plt+0x9548>
   1a928:	bl	113c0 <abort@plt>
   1a92c:	ldr	r3, [fp, #-8]
   1a930:	ldr	r2, [fp, #-12]
   1a934:	str	r2, [r3, #40]	; 0x28
   1a938:	ldr	r3, [fp, #-8]
   1a93c:	ldr	r2, [fp, #-16]
   1a940:	str	r2, [r3, #44]	; 0x2c
   1a944:	nop	{0}
   1a948:	sub	sp, fp, #4
   1a94c:	ldr	fp, [sp]
   1a950:	add	sp, sp, #4
   1a954:	pop	{pc}		; (ldr pc, [sp], #4)
   1a958:	str	fp, [sp, #-8]!
   1a95c:	str	lr, [sp, #4]
   1a960:	add	fp, sp, #4
   1a964:	sub	sp, sp, #56	; 0x38
   1a968:	str	r0, [fp, #-56]	; 0xffffffc8
   1a96c:	str	r1, [fp, #-60]	; 0xffffffc4
   1a970:	sub	r1, fp, #52	; 0x34
   1a974:	mov	r2, #0
   1a978:	mov	r3, #0
   1a97c:	strd	r2, [r1]
   1a980:	strd	r2, [r1, #8]
   1a984:	strd	r2, [r1, #16]
   1a988:	strd	r2, [r1, #24]
   1a98c:	strd	r2, [r1, #32]
   1a990:	strd	r2, [r1, #40]	; 0x28
   1a994:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a998:	cmp	r3, #10
   1a99c:	bne	1a9a4 <__assert_fail@plt+0x95c0>
   1a9a0:	bl	113c0 <abort@plt>
   1a9a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a9a8:	str	r3, [fp, #-52]	; 0xffffffcc
   1a9ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a9b0:	mov	r2, r3
   1a9b4:	sub	r3, fp, #52	; 0x34
   1a9b8:	ldrd	r0, [r3]
   1a9bc:	strd	r0, [r2]
   1a9c0:	ldrd	r0, [r3, #8]
   1a9c4:	strd	r0, [r2, #8]
   1a9c8:	ldrd	r0, [r3, #16]
   1a9cc:	strd	r0, [r2, #16]
   1a9d0:	ldrd	r0, [r3, #24]
   1a9d4:	strd	r0, [r2, #24]
   1a9d8:	ldrd	r0, [r3, #32]
   1a9dc:	strd	r0, [r2, #32]
   1a9e0:	ldrd	r0, [r3, #40]	; 0x28
   1a9e4:	strd	r0, [r2, #40]	; 0x28
   1a9e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a9ec:	sub	sp, fp, #4
   1a9f0:	ldr	fp, [sp]
   1a9f4:	add	sp, sp, #4
   1a9f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9fc:	str	fp, [sp, #-8]!
   1aa00:	str	lr, [sp, #4]
   1aa04:	add	fp, sp, #4
   1aa08:	sub	sp, sp, #16
   1aa0c:	str	r0, [fp, #-16]
   1aa10:	str	r1, [fp, #-20]	; 0xffffffec
   1aa14:	ldr	r0, [fp, #-16]
   1aa18:	bl	11288 <gettext@plt>
   1aa1c:	str	r0, [fp, #-8]
   1aa20:	ldr	r2, [fp, #-8]
   1aa24:	ldr	r3, [fp, #-16]
   1aa28:	cmp	r2, r3
   1aa2c:	beq	1aa38 <__assert_fail@plt+0x9654>
   1aa30:	ldr	r3, [fp, #-8]
   1aa34:	b	1aae8 <__assert_fail@plt+0x9704>
   1aa38:	bl	2112c <__assert_fail@plt+0xfd48>
   1aa3c:	str	r0, [fp, #-12]
   1aa40:	movw	r1, #13316	; 0x3404
   1aa44:	movt	r1, #2
   1aa48:	ldr	r0, [fp, #-12]
   1aa4c:	bl	20a3c <__assert_fail@plt+0xf658>
   1aa50:	mov	r3, r0
   1aa54:	cmp	r3, #0
   1aa58:	bne	1aa84 <__assert_fail@plt+0x96a0>
   1aa5c:	ldr	r3, [fp, #-16]
   1aa60:	ldrb	r3, [r3]
   1aa64:	cmp	r3, #96	; 0x60
   1aa68:	bne	1aa78 <__assert_fail@plt+0x9694>
   1aa6c:	movw	r3, #13324	; 0x340c
   1aa70:	movt	r3, #2
   1aa74:	b	1aae8 <__assert_fail@plt+0x9704>
   1aa78:	movw	r3, #13328	; 0x3410
   1aa7c:	movt	r3, #2
   1aa80:	b	1aae8 <__assert_fail@plt+0x9704>
   1aa84:	movw	r1, #13332	; 0x3414
   1aa88:	movt	r1, #2
   1aa8c:	ldr	r0, [fp, #-12]
   1aa90:	bl	20a3c <__assert_fail@plt+0xf658>
   1aa94:	mov	r3, r0
   1aa98:	cmp	r3, #0
   1aa9c:	bne	1aac8 <__assert_fail@plt+0x96e4>
   1aaa0:	ldr	r3, [fp, #-16]
   1aaa4:	ldrb	r3, [r3]
   1aaa8:	cmp	r3, #96	; 0x60
   1aaac:	bne	1aabc <__assert_fail@plt+0x96d8>
   1aab0:	movw	r3, #13340	; 0x341c
   1aab4:	movt	r3, #2
   1aab8:	b	1aae8 <__assert_fail@plt+0x9704>
   1aabc:	movw	r3, #13344	; 0x3420
   1aac0:	movt	r3, #2
   1aac4:	b	1aae8 <__assert_fail@plt+0x9704>
   1aac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aacc:	cmp	r3, #9
   1aad0:	bne	1aae0 <__assert_fail@plt+0x96fc>
   1aad4:	movw	r3, #13348	; 0x3424
   1aad8:	movt	r3, #2
   1aadc:	b	1aae8 <__assert_fail@plt+0x9704>
   1aae0:	movw	r3, #13352	; 0x3428
   1aae4:	movt	r3, #2
   1aae8:	mov	r0, r3
   1aaec:	sub	sp, fp, #4
   1aaf0:	ldr	fp, [sp]
   1aaf4:	add	sp, sp, #4
   1aaf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1aafc:	str	r4, [sp, #-12]!
   1ab00:	str	fp, [sp, #4]
   1ab04:	str	lr, [sp, #8]
   1ab08:	add	fp, sp, #8
   1ab0c:	sub	sp, sp, #116	; 0x74
   1ab10:	str	r0, [fp, #-88]	; 0xffffffa8
   1ab14:	str	r1, [fp, #-92]	; 0xffffffa4
   1ab18:	str	r2, [fp, #-96]	; 0xffffffa0
   1ab1c:	str	r3, [fp, #-100]	; 0xffffff9c
   1ab20:	mov	r3, #0
   1ab24:	str	r3, [fp, #-20]	; 0xffffffec
   1ab28:	mov	r3, #0
   1ab2c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ab30:	mov	r3, #0
   1ab34:	str	r3, [fp, #-28]	; 0xffffffe4
   1ab38:	mov	r3, #0
   1ab3c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ab40:	mov	r3, #0
   1ab44:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ab48:	bl	111e0 <__ctype_get_mb_cur_max@plt>
   1ab4c:	mov	r3, r0
   1ab50:	cmp	r3, #1
   1ab54:	moveq	r3, #1
   1ab58:	movne	r3, #0
   1ab5c:	strb	r3, [fp, #-57]	; 0xffffffc7
   1ab60:	ldr	r3, [fp, #8]
   1ab64:	and	r3, r3, #2
   1ab68:	cmp	r3, #0
   1ab6c:	movne	r3, #1
   1ab70:	moveq	r3, #0
   1ab74:	strb	r3, [fp, #-34]	; 0xffffffde
   1ab78:	mov	r3, #0
   1ab7c:	strb	r3, [fp, #-35]	; 0xffffffdd
   1ab80:	mov	r3, #0
   1ab84:	strb	r3, [fp, #-36]	; 0xffffffdc
   1ab88:	mov	r3, #1
   1ab8c:	strb	r3, [fp, #-37]	; 0xffffffdb
   1ab90:	ldr	r3, [fp, #4]
   1ab94:	cmp	r3, #10
   1ab98:	ldrls	pc, [pc, r3, lsl #2]
   1ab9c:	b	1adb4 <__assert_fail@plt+0x99d0>
   1aba0:	andeq	sl, r1, r8, lsr #27
   1aba4:	andeq	sl, r1, r0, lsr #26
   1aba8:	andeq	sl, r1, r4, asr #26
   1abac:	andeq	sl, r1, r8, lsl sp
   1abb0:	andeq	sl, r1, r8, lsr #26
   1abb4:	ldrdeq	sl, [r1], -ip
   1abb8:	andeq	sl, r1, ip, asr #23
   1abbc:	andeq	sl, r1, r0, asr #24
   1abc0:	andeq	sl, r1, r4, asr ip
   1abc4:	andeq	sl, r1, r4, asr ip
   1abc8:	andeq	sl, r1, r4, asr ip
   1abcc:	mov	r3, #5
   1abd0:	str	r3, [fp, #4]
   1abd4:	mov	r3, #1
   1abd8:	strb	r3, [fp, #-34]	; 0xffffffde
   1abdc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1abe0:	eor	r3, r3, #1
   1abe4:	uxtb	r3, r3
   1abe8:	cmp	r3, #0
   1abec:	beq	1ac20 <__assert_fail@plt+0x983c>
   1abf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1abf4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1abf8:	cmp	r2, r3
   1abfc:	bcs	1ac14 <__assert_fail@plt+0x9830>
   1ac00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ac04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac08:	add	r3, r2, r3
   1ac0c:	mov	r2, #34	; 0x22
   1ac10:	strb	r2, [r3]
   1ac14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac18:	add	r3, r3, #1
   1ac1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ac20:	mov	r3, #1
   1ac24:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ac28:	movw	r3, #13348	; 0x3424
   1ac2c:	movt	r3, #2
   1ac30:	str	r3, [fp, #-28]	; 0xffffffe4
   1ac34:	mov	r3, #1
   1ac38:	str	r3, [fp, #-32]	; 0xffffffe0
   1ac3c:	b	1adb8 <__assert_fail@plt+0x99d4>
   1ac40:	mov	r3, #1
   1ac44:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ac48:	mov	r3, #0
   1ac4c:	strb	r3, [fp, #-34]	; 0xffffffde
   1ac50:	b	1adb8 <__assert_fail@plt+0x99d4>
   1ac54:	ldr	r3, [fp, #4]
   1ac58:	cmp	r3, #10
   1ac5c:	beq	1ac88 <__assert_fail@plt+0x98a4>
   1ac60:	ldr	r1, [fp, #4]
   1ac64:	movw	r0, #13356	; 0x342c
   1ac68:	movt	r0, #2
   1ac6c:	bl	1a9fc <__assert_fail@plt+0x9618>
   1ac70:	str	r0, [fp, #16]
   1ac74:	ldr	r1, [fp, #4]
   1ac78:	movw	r0, #13352	; 0x3428
   1ac7c:	movt	r0, #2
   1ac80:	bl	1a9fc <__assert_fail@plt+0x9618>
   1ac84:	str	r0, [fp, #20]
   1ac88:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1ac8c:	eor	r3, r3, #1
   1ac90:	uxtb	r3, r3
   1ac94:	cmp	r3, #0
   1ac98:	beq	1acf8 <__assert_fail@plt+0x9914>
   1ac9c:	ldr	r3, [fp, #16]
   1aca0:	str	r3, [fp, #-28]	; 0xffffffe4
   1aca4:	b	1ace8 <__assert_fail@plt+0x9904>
   1aca8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1acac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1acb0:	cmp	r2, r3
   1acb4:	bcs	1acd0 <__assert_fail@plt+0x98ec>
   1acb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1acbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1acc0:	add	r3, r2, r3
   1acc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1acc8:	ldrb	r2, [r2]
   1accc:	strb	r2, [r3]
   1acd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1acd4:	add	r3, r3, #1
   1acd8:	str	r3, [fp, #-20]	; 0xffffffec
   1acdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ace0:	add	r3, r3, #1
   1ace4:	str	r3, [fp, #-28]	; 0xffffffe4
   1ace8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1acec:	ldrb	r3, [r3]
   1acf0:	cmp	r3, #0
   1acf4:	bne	1aca8 <__assert_fail@plt+0x98c4>
   1acf8:	mov	r3, #1
   1acfc:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ad00:	ldr	r3, [fp, #20]
   1ad04:	str	r3, [fp, #-28]	; 0xffffffe4
   1ad08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad0c:	bl	11294 <strlen@plt>
   1ad10:	str	r0, [fp, #-32]	; 0xffffffe0
   1ad14:	b	1adb8 <__assert_fail@plt+0x99d4>
   1ad18:	mov	r3, #1
   1ad1c:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ad20:	mov	r3, #1
   1ad24:	strb	r3, [fp, #-34]	; 0xffffffde
   1ad28:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1ad2c:	eor	r3, r3, #1
   1ad30:	uxtb	r3, r3
   1ad34:	cmp	r3, #0
   1ad38:	beq	1ad44 <__assert_fail@plt+0x9960>
   1ad3c:	mov	r3, #1
   1ad40:	strb	r3, [fp, #-33]	; 0xffffffdf
   1ad44:	mov	r3, #2
   1ad48:	str	r3, [fp, #4]
   1ad4c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1ad50:	eor	r3, r3, #1
   1ad54:	uxtb	r3, r3
   1ad58:	cmp	r3, #0
   1ad5c:	beq	1ad90 <__assert_fail@plt+0x99ac>
   1ad60:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ad68:	cmp	r2, r3
   1ad6c:	bcs	1ad84 <__assert_fail@plt+0x99a0>
   1ad70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ad74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad78:	add	r3, r2, r3
   1ad7c:	mov	r2, #39	; 0x27
   1ad80:	strb	r2, [r3]
   1ad84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad88:	add	r3, r3, #1
   1ad8c:	str	r3, [fp, #-20]	; 0xffffffec
   1ad90:	movw	r3, #13352	; 0x3428
   1ad94:	movt	r3, #2
   1ad98:	str	r3, [fp, #-28]	; 0xffffffe4
   1ad9c:	mov	r3, #1
   1ada0:	str	r3, [fp, #-32]	; 0xffffffe0
   1ada4:	b	1adb8 <__assert_fail@plt+0x99d4>
   1ada8:	mov	r3, #0
   1adac:	strb	r3, [fp, #-34]	; 0xffffffde
   1adb0:	b	1adb8 <__assert_fail@plt+0x99d4>
   1adb4:	bl	113c0 <abort@plt>
   1adb8:	mov	r3, #0
   1adbc:	str	r3, [fp, #-16]
   1adc0:	b	1bf5c <__assert_fail@plt+0xab78>
   1adc4:	mov	r3, #0
   1adc8:	strb	r3, [fp, #-40]	; 0xffffffd8
   1adcc:	mov	r3, #0
   1add0:	strb	r3, [fp, #-41]	; 0xffffffd7
   1add4:	mov	r3, #0
   1add8:	strb	r3, [fp, #-42]	; 0xffffffd6
   1addc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1ade0:	cmp	r3, #0
   1ade4:	beq	1ae80 <__assert_fail@plt+0x9a9c>
   1ade8:	ldr	r3, [fp, #4]
   1adec:	cmp	r3, #2
   1adf0:	beq	1ae80 <__assert_fail@plt+0x9a9c>
   1adf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1adf8:	cmp	r3, #0
   1adfc:	beq	1ae80 <__assert_fail@plt+0x9a9c>
   1ae00:	ldr	r2, [fp, #-16]
   1ae04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ae08:	add	r4, r2, r3
   1ae0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ae10:	cmn	r3, #1
   1ae14:	bne	1ae38 <__assert_fail@plt+0x9a54>
   1ae18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ae1c:	cmp	r3, #1
   1ae20:	bls	1ae38 <__assert_fail@plt+0x9a54>
   1ae24:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ae28:	bl	11294 <strlen@plt>
   1ae2c:	str	r0, [fp, #-100]	; 0xffffff9c
   1ae30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ae34:	b	1ae3c <__assert_fail@plt+0x9a58>
   1ae38:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ae3c:	cmp	r3, r4
   1ae40:	bcc	1ae80 <__assert_fail@plt+0x9a9c>
   1ae44:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ae48:	ldr	r3, [fp, #-16]
   1ae4c:	add	r3, r2, r3
   1ae50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ae54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae58:	mov	r0, r3
   1ae5c:	bl	11150 <memcmp@plt>
   1ae60:	mov	r3, r0
   1ae64:	cmp	r3, #0
   1ae68:	bne	1ae80 <__assert_fail@plt+0x9a9c>
   1ae6c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1ae70:	cmp	r3, #0
   1ae74:	bne	1c118 <__assert_fail@plt+0xad34>
   1ae78:	mov	r3, #1
   1ae7c:	strb	r3, [fp, #-40]	; 0xffffffd8
   1ae80:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ae84:	ldr	r3, [fp, #-16]
   1ae88:	add	r3, r2, r3
   1ae8c:	ldrb	r3, [r3]
   1ae90:	strb	r3, [fp, #-38]	; 0xffffffda
   1ae94:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1ae98:	cmp	r3, #126	; 0x7e
   1ae9c:	ldrls	pc, [pc, r3, lsl #2]
   1aea0:	b	1b6d8 <__assert_fail@plt+0xa2f4>
   1aea4:	andeq	fp, r1, r0, lsr #1
   1aea8:	ldrdeq	fp, [r1], -r8
   1aeac:	ldrdeq	fp, [r1], -r8
   1aeb0:	ldrdeq	fp, [r1], -r8
   1aeb4:	ldrdeq	fp, [r1], -r8
   1aeb8:	ldrdeq	fp, [r1], -r8
   1aebc:	ldrdeq	fp, [r1], -r8
   1aec0:	muleq	r1, r4, r4
   1aec4:	andeq	fp, r1, r0, lsr #9
   1aec8:	ldrdeq	fp, [r1], -r0
   1aecc:			; <UNDEFINED> instruction: 0x0001b4b8
   1aed0:	ldrdeq	fp, [r1], -ip
   1aed4:	andeq	fp, r1, ip, lsr #9
   1aed8:	andeq	fp, r1, r4, asr #9
   1aedc:	ldrdeq	fp, [r1], -r8
   1aee0:	ldrdeq	fp, [r1], -r8
   1aee4:	ldrdeq	fp, [r1], -r8
   1aee8:	ldrdeq	fp, [r1], -r8
   1aeec:	ldrdeq	fp, [r1], -r8
   1aef0:	ldrdeq	fp, [r1], -r8
   1aef4:	ldrdeq	fp, [r1], -r8
   1aef8:	ldrdeq	fp, [r1], -r8
   1aefc:	ldrdeq	fp, [r1], -r8
   1af00:	ldrdeq	fp, [r1], -r8
   1af04:	ldrdeq	fp, [r1], -r8
   1af08:	ldrdeq	fp, [r1], -r8
   1af0c:	ldrdeq	fp, [r1], -r8
   1af10:	ldrdeq	fp, [r1], -r8
   1af14:	ldrdeq	fp, [r1], -r8
   1af18:	ldrdeq	fp, [r1], -r8
   1af1c:	ldrdeq	fp, [r1], -r8
   1af20:	ldrdeq	fp, [r1], -r8
   1af24:			; <UNDEFINED> instruction: 0x0001b5bc
   1af28:	andeq	fp, r1, r4, asr #11
   1af2c:	andeq	fp, r1, r4, asr #11
   1af30:			; <UNDEFINED> instruction: 0x0001b5b0
   1af34:	andeq	fp, r1, r4, asr #11
   1af38:	andeq	fp, r1, ip, asr #13
   1af3c:	andeq	fp, r1, r4, asr #11
   1af40:	andeq	fp, r1, r0, ror #11
   1af44:	andeq	fp, r1, r4, asr #11
   1af48:	andeq	fp, r1, r4, asr #11
   1af4c:	andeq	fp, r1, r4, asr #11
   1af50:	andeq	fp, r1, ip, asr #13
   1af54:	andeq	fp, r1, ip, asr #13
   1af58:	andeq	fp, r1, ip, asr #13
   1af5c:	andeq	fp, r1, ip, asr #13
   1af60:	andeq	fp, r1, ip, asr #13
   1af64:	andeq	fp, r1, ip, asr #13
   1af68:	andeq	fp, r1, ip, asr #13
   1af6c:	andeq	fp, r1, ip, asr #13
   1af70:	andeq	fp, r1, ip, asr #13
   1af74:	andeq	fp, r1, ip, asr #13
   1af78:	andeq	fp, r1, ip, asr #13
   1af7c:	andeq	fp, r1, ip, asr #13
   1af80:	andeq	fp, r1, ip, asr #13
   1af84:	andeq	fp, r1, ip, asr #13
   1af88:	andeq	fp, r1, ip, asr #13
   1af8c:	andeq	fp, r1, ip, asr #13
   1af90:	andeq	fp, r1, r4, asr #11
   1af94:	andeq	fp, r1, r4, asr #11
   1af98:	andeq	fp, r1, r4, asr #11
   1af9c:	andeq	fp, r1, r4, asr #11
   1afa0:	andeq	fp, r1, r0, lsl #5
   1afa4:	ldrdeq	fp, [r1], -r8
   1afa8:	andeq	fp, r1, ip, asr #13
   1afac:	andeq	fp, r1, ip, asr #13
   1afb0:	andeq	fp, r1, ip, asr #13
   1afb4:	andeq	fp, r1, ip, asr #13
   1afb8:	andeq	fp, r1, ip, asr #13
   1afbc:	andeq	fp, r1, ip, asr #13
   1afc0:	andeq	fp, r1, ip, asr #13
   1afc4:	andeq	fp, r1, ip, asr #13
   1afc8:	andeq	fp, r1, ip, asr #13
   1afcc:	andeq	fp, r1, ip, asr #13
   1afd0:	andeq	fp, r1, ip, asr #13
   1afd4:	andeq	fp, r1, ip, asr #13
   1afd8:	andeq	fp, r1, ip, asr #13
   1afdc:	andeq	fp, r1, ip, asr #13
   1afe0:	andeq	fp, r1, ip, asr #13
   1afe4:	andeq	fp, r1, ip, asr #13
   1afe8:	andeq	fp, r1, ip, asr #13
   1afec:	andeq	fp, r1, ip, asr #13
   1aff0:	andeq	fp, r1, ip, asr #13
   1aff4:	andeq	fp, r1, ip, asr #13
   1aff8:	andeq	fp, r1, ip, asr #13
   1affc:	andeq	fp, r1, ip, asr #13
   1b000:	andeq	fp, r1, ip, asr #13
   1b004:	andeq	fp, r1, ip, asr #13
   1b008:	andeq	fp, r1, ip, asr #13
   1b00c:	andeq	fp, r1, ip, asr #13
   1b010:	andeq	fp, r1, r4, asr #11
   1b014:	andeq	fp, r1, r8, ror #9
   1b018:	andeq	fp, r1, ip, asr #13
   1b01c:	andeq	fp, r1, r4, asr #11
   1b020:	andeq	fp, r1, ip, asr #13
   1b024:	andeq	fp, r1, r4, asr #11
   1b028:	andeq	fp, r1, ip, asr #13
   1b02c:	andeq	fp, r1, ip, asr #13
   1b030:	andeq	fp, r1, ip, asr #13
   1b034:	andeq	fp, r1, ip, asr #13
   1b038:	andeq	fp, r1, ip, asr #13
   1b03c:	andeq	fp, r1, ip, asr #13
   1b040:	andeq	fp, r1, ip, asr #13
   1b044:	andeq	fp, r1, ip, asr #13
   1b048:	andeq	fp, r1, ip, asr #13
   1b04c:	andeq	fp, r1, ip, asr #13
   1b050:	andeq	fp, r1, ip, asr #13
   1b054:	andeq	fp, r1, ip, asr #13
   1b058:	andeq	fp, r1, ip, asr #13
   1b05c:	andeq	fp, r1, ip, asr #13
   1b060:	andeq	fp, r1, ip, asr #13
   1b064:	andeq	fp, r1, ip, asr #13
   1b068:	andeq	fp, r1, ip, asr #13
   1b06c:	andeq	fp, r1, ip, asr #13
   1b070:	andeq	fp, r1, ip, asr #13
   1b074:	andeq	fp, r1, ip, asr #13
   1b078:	andeq	fp, r1, ip, asr #13
   1b07c:	andeq	fp, r1, ip, asr #13
   1b080:	andeq	fp, r1, ip, asr #13
   1b084:	andeq	fp, r1, ip, asr #13
   1b088:	andeq	fp, r1, ip, asr #13
   1b08c:	andeq	fp, r1, ip, asr #13
   1b090:	andeq	fp, r1, r8, ror #10
   1b094:	andeq	fp, r1, r4, asr #11
   1b098:	andeq	fp, r1, r8, ror #10
   1b09c:			; <UNDEFINED> instruction: 0x0001b5b0
   1b0a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b0a4:	cmp	r3, #0
   1b0a8:	beq	1b26c <__assert_fail@plt+0x9e88>
   1b0ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b0b0:	cmp	r3, #0
   1b0b4:	bne	1c120 <__assert_fail@plt+0xad3c>
   1b0b8:	mov	r3, #1
   1b0bc:	strb	r3, [fp, #-41]	; 0xffffffd7
   1b0c0:	ldr	r3, [fp, #4]
   1b0c4:	cmp	r3, #2
   1b0c8:	bne	1b178 <__assert_fail@plt+0x9d94>
   1b0cc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1b0d0:	eor	r3, r3, #1
   1b0d4:	uxtb	r3, r3
   1b0d8:	cmp	r3, #0
   1b0dc:	beq	1b178 <__assert_fail@plt+0x9d94>
   1b0e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b0e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b0e8:	cmp	r2, r3
   1b0ec:	bcs	1b104 <__assert_fail@plt+0x9d20>
   1b0f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b0f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b0f8:	add	r3, r2, r3
   1b0fc:	mov	r2, #39	; 0x27
   1b100:	strb	r2, [r3]
   1b104:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b108:	add	r3, r3, #1
   1b10c:	str	r3, [fp, #-20]	; 0xffffffec
   1b110:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b114:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b118:	cmp	r2, r3
   1b11c:	bcs	1b134 <__assert_fail@plt+0x9d50>
   1b120:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b124:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b128:	add	r3, r2, r3
   1b12c:	mov	r2, #36	; 0x24
   1b130:	strb	r2, [r3]
   1b134:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b138:	add	r3, r3, #1
   1b13c:	str	r3, [fp, #-20]	; 0xffffffec
   1b140:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b144:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b148:	cmp	r2, r3
   1b14c:	bcs	1b164 <__assert_fail@plt+0x9d80>
   1b150:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b154:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b158:	add	r3, r2, r3
   1b15c:	mov	r2, #39	; 0x27
   1b160:	strb	r2, [r3]
   1b164:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b168:	add	r3, r3, #1
   1b16c:	str	r3, [fp, #-20]	; 0xffffffec
   1b170:	mov	r3, #1
   1b174:	strb	r3, [fp, #-35]	; 0xffffffdd
   1b178:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b17c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b180:	cmp	r2, r3
   1b184:	bcs	1b19c <__assert_fail@plt+0x9db8>
   1b188:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b190:	add	r3, r2, r3
   1b194:	mov	r2, #92	; 0x5c
   1b198:	strb	r2, [r3]
   1b19c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1a0:	add	r3, r3, #1
   1b1a4:	str	r3, [fp, #-20]	; 0xffffffec
   1b1a8:	ldr	r3, [fp, #4]
   1b1ac:	cmp	r3, #2
   1b1b0:	beq	1b260 <__assert_fail@plt+0x9e7c>
   1b1b4:	ldr	r3, [fp, #-16]
   1b1b8:	add	r3, r3, #1
   1b1bc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b1c0:	cmp	r2, r3
   1b1c4:	bls	1b260 <__assert_fail@plt+0x9e7c>
   1b1c8:	ldr	r3, [fp, #-16]
   1b1cc:	add	r3, r3, #1
   1b1d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b1d4:	add	r3, r2, r3
   1b1d8:	ldrb	r3, [r3]
   1b1dc:	cmp	r3, #47	; 0x2f
   1b1e0:	bls	1b260 <__assert_fail@plt+0x9e7c>
   1b1e4:	ldr	r3, [fp, #-16]
   1b1e8:	add	r3, r3, #1
   1b1ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b1f0:	add	r3, r2, r3
   1b1f4:	ldrb	r3, [r3]
   1b1f8:	cmp	r3, #57	; 0x39
   1b1fc:	bhi	1b260 <__assert_fail@plt+0x9e7c>
   1b200:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b204:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b208:	cmp	r2, r3
   1b20c:	bcs	1b224 <__assert_fail@plt+0x9e40>
   1b210:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b214:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b218:	add	r3, r2, r3
   1b21c:	mov	r2, #48	; 0x30
   1b220:	strb	r2, [r3]
   1b224:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b228:	add	r3, r3, #1
   1b22c:	str	r3, [fp, #-20]	; 0xffffffec
   1b230:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b234:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b238:	cmp	r2, r3
   1b23c:	bcs	1b254 <__assert_fail@plt+0x9e70>
   1b240:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b244:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b248:	add	r3, r2, r3
   1b24c:	mov	r2, #48	; 0x30
   1b250:	strb	r2, [r3]
   1b254:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b258:	add	r3, r3, #1
   1b25c:	str	r3, [fp, #-20]	; 0xffffffec
   1b260:	mov	r3, #48	; 0x30
   1b264:	strb	r3, [fp, #-38]	; 0xffffffda
   1b268:	b	1bca8 <__assert_fail@plt+0xa8c4>
   1b26c:	ldr	r3, [fp, #8]
   1b270:	and	r3, r3, #1
   1b274:	cmp	r3, #0
   1b278:	beq	1bca8 <__assert_fail@plt+0xa8c4>
   1b27c:	b	1bf50 <__assert_fail@plt+0xab6c>
   1b280:	ldr	r3, [fp, #4]
   1b284:	cmp	r3, #2
   1b288:	beq	1b29c <__assert_fail@plt+0x9eb8>
   1b28c:	ldr	r3, [fp, #4]
   1b290:	cmp	r3, #5
   1b294:	beq	1b2ac <__assert_fail@plt+0x9ec8>
   1b298:	b	1b490 <__assert_fail@plt+0xa0ac>
   1b29c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b2a0:	cmp	r3, #0
   1b2a4:	beq	1b484 <__assert_fail@plt+0xa0a0>
   1b2a8:	b	1c154 <__assert_fail@plt+0xad70>
   1b2ac:	ldr	r3, [fp, #8]
   1b2b0:	and	r3, r3, #4
   1b2b4:	cmp	r3, #0
   1b2b8:	beq	1b48c <__assert_fail@plt+0xa0a8>
   1b2bc:	ldr	r3, [fp, #-16]
   1b2c0:	add	r3, r3, #2
   1b2c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b2c8:	cmp	r2, r3
   1b2cc:	bls	1b48c <__assert_fail@plt+0xa0a8>
   1b2d0:	ldr	r3, [fp, #-16]
   1b2d4:	add	r3, r3, #1
   1b2d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b2dc:	add	r3, r2, r3
   1b2e0:	ldrb	r3, [r3]
   1b2e4:	cmp	r3, #63	; 0x3f
   1b2e8:	bne	1b48c <__assert_fail@plt+0xa0a8>
   1b2ec:	ldr	r3, [fp, #-16]
   1b2f0:	add	r3, r3, #2
   1b2f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b2f8:	add	r3, r2, r3
   1b2fc:	ldrb	r3, [r3]
   1b300:	sub	r3, r3, #33	; 0x21
   1b304:	cmp	r3, #29
   1b308:	ldrls	pc, [pc, r3, lsl #2]
   1b30c:	b	1b47c <__assert_fail@plt+0xa098>
   1b310:	andeq	fp, r1, r8, lsl #7
   1b314:	andeq	fp, r1, ip, ror r4
   1b318:	andeq	fp, r1, ip, ror r4
   1b31c:	andeq	fp, r1, ip, ror r4
   1b320:	andeq	fp, r1, ip, ror r4
   1b324:	andeq	fp, r1, ip, ror r4
   1b328:	andeq	fp, r1, r8, lsl #7
   1b32c:	andeq	fp, r1, r8, lsl #7
   1b330:	andeq	fp, r1, r8, lsl #7
   1b334:	andeq	fp, r1, ip, ror r4
   1b338:	andeq	fp, r1, ip, ror r4
   1b33c:	andeq	fp, r1, ip, ror r4
   1b340:	andeq	fp, r1, r8, lsl #7
   1b344:	andeq	fp, r1, ip, ror r4
   1b348:	andeq	fp, r1, r8, lsl #7
   1b34c:	andeq	fp, r1, ip, ror r4
   1b350:	andeq	fp, r1, ip, ror r4
   1b354:	andeq	fp, r1, ip, ror r4
   1b358:	andeq	fp, r1, ip, ror r4
   1b35c:	andeq	fp, r1, ip, ror r4
   1b360:	andeq	fp, r1, ip, ror r4
   1b364:	andeq	fp, r1, ip, ror r4
   1b368:	andeq	fp, r1, ip, ror r4
   1b36c:	andeq	fp, r1, ip, ror r4
   1b370:	andeq	fp, r1, ip, ror r4
   1b374:	andeq	fp, r1, ip, ror r4
   1b378:	andeq	fp, r1, ip, ror r4
   1b37c:	andeq	fp, r1, r8, lsl #7
   1b380:	andeq	fp, r1, r8, lsl #7
   1b384:	andeq	fp, r1, r8, lsl #7
   1b388:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b38c:	cmp	r3, #0
   1b390:	bne	1c128 <__assert_fail@plt+0xad44>
   1b394:	ldr	r3, [fp, #-16]
   1b398:	add	r3, r3, #2
   1b39c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b3a0:	add	r3, r2, r3
   1b3a4:	ldrb	r3, [r3]
   1b3a8:	strb	r3, [fp, #-38]	; 0xffffffda
   1b3ac:	ldr	r3, [fp, #-16]
   1b3b0:	add	r3, r3, #2
   1b3b4:	str	r3, [fp, #-16]
   1b3b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b3c0:	cmp	r2, r3
   1b3c4:	bcs	1b3dc <__assert_fail@plt+0x9ff8>
   1b3c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b3cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b3d0:	add	r3, r2, r3
   1b3d4:	mov	r2, #63	; 0x3f
   1b3d8:	strb	r2, [r3]
   1b3dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b3e0:	add	r3, r3, #1
   1b3e4:	str	r3, [fp, #-20]	; 0xffffffec
   1b3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b3f0:	cmp	r2, r3
   1b3f4:	bcs	1b40c <__assert_fail@plt+0xa028>
   1b3f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b3fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b400:	add	r3, r2, r3
   1b404:	mov	r2, #34	; 0x22
   1b408:	strb	r2, [r3]
   1b40c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b410:	add	r3, r3, #1
   1b414:	str	r3, [fp, #-20]	; 0xffffffec
   1b418:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b41c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b420:	cmp	r2, r3
   1b424:	bcs	1b43c <__assert_fail@plt+0xa058>
   1b428:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b430:	add	r3, r2, r3
   1b434:	mov	r2, #34	; 0x22
   1b438:	strb	r2, [r3]
   1b43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b440:	add	r3, r3, #1
   1b444:	str	r3, [fp, #-20]	; 0xffffffec
   1b448:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b44c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b450:	cmp	r2, r3
   1b454:	bcs	1b46c <__assert_fail@plt+0xa088>
   1b458:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b45c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b460:	add	r3, r2, r3
   1b464:	mov	r2, #63	; 0x3f
   1b468:	strb	r2, [r3]
   1b46c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b470:	add	r3, r3, #1
   1b474:	str	r3, [fp, #-20]	; 0xffffffec
   1b478:	b	1b480 <__assert_fail@plt+0xa09c>
   1b47c:	nop	{0}
   1b480:	b	1b48c <__assert_fail@plt+0xa0a8>
   1b484:	nop	{0}
   1b488:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1b48c:	nop	{0}
   1b490:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1b494:	mov	r3, #97	; 0x61
   1b498:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b49c:	b	1b550 <__assert_fail@plt+0xa16c>
   1b4a0:	mov	r3, #98	; 0x62
   1b4a4:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4a8:	b	1b550 <__assert_fail@plt+0xa16c>
   1b4ac:	mov	r3, #102	; 0x66
   1b4b0:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4b4:	b	1b550 <__assert_fail@plt+0xa16c>
   1b4b8:	mov	r3, #110	; 0x6e
   1b4bc:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4c0:	b	1b534 <__assert_fail@plt+0xa150>
   1b4c4:	mov	r3, #114	; 0x72
   1b4c8:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4cc:	b	1b534 <__assert_fail@plt+0xa150>
   1b4d0:	mov	r3, #116	; 0x74
   1b4d4:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4d8:	b	1b534 <__assert_fail@plt+0xa150>
   1b4dc:	mov	r3, #118	; 0x76
   1b4e0:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4e4:	b	1b550 <__assert_fail@plt+0xa16c>
   1b4e8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1b4ec:	strb	r3, [fp, #-39]	; 0xffffffd9
   1b4f0:	ldr	r3, [fp, #4]
   1b4f4:	cmp	r3, #2
   1b4f8:	bne	1b50c <__assert_fail@plt+0xa128>
   1b4fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b500:	cmp	r3, #0
   1b504:	beq	1be68 <__assert_fail@plt+0xaa84>
   1b508:	b	1c154 <__assert_fail@plt+0xad70>
   1b50c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b510:	cmp	r3, #0
   1b514:	beq	1b530 <__assert_fail@plt+0xa14c>
   1b518:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b51c:	cmp	r3, #0
   1b520:	beq	1b530 <__assert_fail@plt+0xa14c>
   1b524:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b528:	cmp	r3, #0
   1b52c:	bne	1be70 <__assert_fail@plt+0xaa8c>
   1b530:	nop	{0}
   1b534:	ldr	r3, [fp, #4]
   1b538:	cmp	r3, #2
   1b53c:	bne	1b54c <__assert_fail@plt+0xa168>
   1b540:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b544:	cmp	r3, #0
   1b548:	bne	1c130 <__assert_fail@plt+0xad4c>
   1b54c:	nop	{0}
   1b550:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b554:	cmp	r3, #0
   1b558:	beq	1bcb0 <__assert_fail@plt+0xa8cc>
   1b55c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   1b560:	strb	r3, [fp, #-38]	; 0xffffffda
   1b564:	b	1bd68 <__assert_fail@plt+0xa984>
   1b568:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b56c:	cmn	r3, #1
   1b570:	bne	1b594 <__assert_fail@plt+0xa1b0>
   1b574:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b578:	add	r3, r3, #1
   1b57c:	ldrb	r3, [r3]
   1b580:	cmp	r3, #0
   1b584:	movne	r3, #1
   1b588:	moveq	r3, #0
   1b58c:	uxtb	r3, r3
   1b590:	b	1b5a8 <__assert_fail@plt+0xa1c4>
   1b594:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b598:	cmp	r3, #1
   1b59c:	movne	r3, #1
   1b5a0:	moveq	r3, #0
   1b5a4:	uxtb	r3, r3
   1b5a8:	cmp	r3, #0
   1b5ac:	bne	1bcb8 <__assert_fail@plt+0xa8d4>
   1b5b0:	ldr	r3, [fp, #-16]
   1b5b4:	cmp	r3, #0
   1b5b8:	bne	1bcc0 <__assert_fail@plt+0xa8dc>
   1b5bc:	mov	r3, #1
   1b5c0:	strb	r3, [fp, #-42]	; 0xffffffd6
   1b5c4:	ldr	r3, [fp, #4]
   1b5c8:	cmp	r3, #2
   1b5cc:	bne	1bcc8 <__assert_fail@plt+0xa8e4>
   1b5d0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b5d4:	cmp	r3, #0
   1b5d8:	beq	1bcc8 <__assert_fail@plt+0xa8e4>
   1b5dc:	b	1c154 <__assert_fail@plt+0xad70>
   1b5e0:	mov	r3, #1
   1b5e4:	strb	r3, [fp, #-36]	; 0xffffffdc
   1b5e8:	mov	r3, #1
   1b5ec:	strb	r3, [fp, #-42]	; 0xffffffd6
   1b5f0:	ldr	r3, [fp, #4]
   1b5f4:	cmp	r3, #2
   1b5f8:	bne	1bcd0 <__assert_fail@plt+0xa8ec>
   1b5fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b600:	cmp	r3, #0
   1b604:	bne	1c138 <__assert_fail@plt+0xad54>
   1b608:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b60c:	cmp	r3, #0
   1b610:	beq	1b630 <__assert_fail@plt+0xa24c>
   1b614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b618:	cmp	r3, #0
   1b61c:	bne	1b630 <__assert_fail@plt+0xa24c>
   1b620:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b624:	str	r3, [fp, #-24]	; 0xffffffe8
   1b628:	mov	r3, #0
   1b62c:	str	r3, [fp, #-92]	; 0xffffffa4
   1b630:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b634:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b638:	cmp	r2, r3
   1b63c:	bcs	1b654 <__assert_fail@plt+0xa270>
   1b640:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b644:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b648:	add	r3, r2, r3
   1b64c:	mov	r2, #39	; 0x27
   1b650:	strb	r2, [r3]
   1b654:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b658:	add	r3, r3, #1
   1b65c:	str	r3, [fp, #-20]	; 0xffffffec
   1b660:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b664:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b668:	cmp	r2, r3
   1b66c:	bcs	1b684 <__assert_fail@plt+0xa2a0>
   1b670:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b674:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b678:	add	r3, r2, r3
   1b67c:	mov	r2, #92	; 0x5c
   1b680:	strb	r2, [r3]
   1b684:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b688:	add	r3, r3, #1
   1b68c:	str	r3, [fp, #-20]	; 0xffffffec
   1b690:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b694:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b698:	cmp	r2, r3
   1b69c:	bcs	1b6b4 <__assert_fail@plt+0xa2d0>
   1b6a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b6a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b6a8:	add	r3, r2, r3
   1b6ac:	mov	r2, #39	; 0x27
   1b6b0:	strb	r2, [r3]
   1b6b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b6b8:	add	r3, r3, #1
   1b6bc:	str	r3, [fp, #-20]	; 0xffffffec
   1b6c0:	mov	r3, #0
   1b6c4:	strb	r3, [fp, #-35]	; 0xffffffdd
   1b6c8:	b	1bcd0 <__assert_fail@plt+0xa8ec>
   1b6cc:	mov	r3, #1
   1b6d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   1b6d4:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1b6d8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1b6dc:	cmp	r3, #0
   1b6e0:	beq	1b720 <__assert_fail@plt+0xa33c>
   1b6e4:	mov	r3, #1
   1b6e8:	str	r3, [fp, #-48]	; 0xffffffd0
   1b6ec:	bl	11270 <__ctype_b_loc@plt>
   1b6f0:	mov	r3, r0
   1b6f4:	ldr	r2, [r3]
   1b6f8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1b6fc:	lsl	r3, r3, #1
   1b700:	add	r3, r2, r3
   1b704:	ldrh	r3, [r3]
   1b708:	and	r3, r3, #16384	; 0x4000
   1b70c:	cmp	r3, #0
   1b710:	movne	r3, #1
   1b714:	moveq	r3, #0
   1b718:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b71c:	b	1b96c <__assert_fail@plt+0xa588>
   1b720:	sub	r3, fp, #76	; 0x4c
   1b724:	mov	r2, #8
   1b728:	mov	r1, #0
   1b72c:	mov	r0, r3
   1b730:	bl	112e8 <memset@plt>
   1b734:	mov	r3, #0
   1b738:	str	r3, [fp, #-48]	; 0xffffffd0
   1b73c:	mov	r3, #1
   1b740:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b744:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b748:	cmn	r3, #1
   1b74c:	bne	1b75c <__assert_fail@plt+0xa378>
   1b750:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b754:	bl	11294 <strlen@plt>
   1b758:	str	r0, [fp, #-100]	; 0xffffff9c
   1b75c:	ldr	r2, [fp, #-16]
   1b760:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b764:	add	r3, r2, r3
   1b768:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b76c:	add	r1, r2, r3
   1b770:	ldr	r2, [fp, #-16]
   1b774:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b778:	add	r3, r2, r3
   1b77c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b780:	sub	r2, r2, r3
   1b784:	sub	r3, fp, #76	; 0x4c
   1b788:	sub	r0, fp, #80	; 0x50
   1b78c:	bl	21194 <__assert_fail@plt+0xfdb0>
   1b790:	str	r0, [fp, #-64]	; 0xffffffc0
   1b794:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b798:	cmp	r3, #0
   1b79c:	beq	1b960 <__assert_fail@plt+0xa57c>
   1b7a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b7a4:	cmn	r3, #1
   1b7a8:	bne	1b7b8 <__assert_fail@plt+0xa3d4>
   1b7ac:	mov	r3, #0
   1b7b0:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b7b4:	b	1b96c <__assert_fail@plt+0xa588>
   1b7b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b7bc:	cmn	r3, #2
   1b7c0:	bne	1b818 <__assert_fail@plt+0xa434>
   1b7c4:	mov	r3, #0
   1b7c8:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b7cc:	b	1b7dc <__assert_fail@plt+0xa3f8>
   1b7d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7d4:	add	r3, r3, #1
   1b7d8:	str	r3, [fp, #-48]	; 0xffffffd0
   1b7dc:	ldr	r2, [fp, #-16]
   1b7e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7e4:	add	r3, r2, r3
   1b7e8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b7ec:	cmp	r2, r3
   1b7f0:	bls	1b968 <__assert_fail@plt+0xa584>
   1b7f4:	ldr	r2, [fp, #-16]
   1b7f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7fc:	add	r3, r2, r3
   1b800:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b804:	add	r3, r2, r3
   1b808:	ldrb	r3, [r3]
   1b80c:	cmp	r3, #0
   1b810:	bne	1b7d0 <__assert_fail@plt+0xa3ec>
   1b814:	b	1b968 <__assert_fail@plt+0xa584>
   1b818:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b81c:	cmp	r3, #0
   1b820:	beq	1b914 <__assert_fail@plt+0xa530>
   1b824:	ldr	r3, [fp, #4]
   1b828:	cmp	r3, #2
   1b82c:	bne	1b914 <__assert_fail@plt+0xa530>
   1b830:	mov	r3, #1
   1b834:	str	r3, [fp, #-56]	; 0xffffffc8
   1b838:	b	1b904 <__assert_fail@plt+0xa520>
   1b83c:	ldr	r2, [fp, #-16]
   1b840:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b844:	add	r2, r2, r3
   1b848:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b84c:	add	r3, r2, r3
   1b850:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b854:	add	r3, r2, r3
   1b858:	ldrb	r3, [r3]
   1b85c:	sub	r3, r3, #91	; 0x5b
   1b860:	cmp	r3, #33	; 0x21
   1b864:	ldrls	pc, [pc, r3, lsl #2]
   1b868:	b	1b8f4 <__assert_fail@plt+0xa510>
   1b86c:	andeq	ip, r1, r4, asr r1
   1b870:	andeq	ip, r1, r4, asr r1
   1b874:	strdeq	fp, [r1], -r4
   1b878:	andeq	ip, r1, r4, asr r1
   1b87c:	strdeq	fp, [r1], -r4
   1b880:	andeq	ip, r1, r4, asr r1
   1b884:	strdeq	fp, [r1], -r4
   1b888:	strdeq	fp, [r1], -r4
   1b88c:	strdeq	fp, [r1], -r4
   1b890:	strdeq	fp, [r1], -r4
   1b894:	strdeq	fp, [r1], -r4
   1b898:	strdeq	fp, [r1], -r4
   1b89c:	strdeq	fp, [r1], -r4
   1b8a0:	strdeq	fp, [r1], -r4
   1b8a4:	strdeq	fp, [r1], -r4
   1b8a8:	strdeq	fp, [r1], -r4
   1b8ac:	strdeq	fp, [r1], -r4
   1b8b0:	strdeq	fp, [r1], -r4
   1b8b4:	strdeq	fp, [r1], -r4
   1b8b8:	strdeq	fp, [r1], -r4
   1b8bc:	strdeq	fp, [r1], -r4
   1b8c0:	strdeq	fp, [r1], -r4
   1b8c4:	strdeq	fp, [r1], -r4
   1b8c8:	strdeq	fp, [r1], -r4
   1b8cc:	strdeq	fp, [r1], -r4
   1b8d0:	strdeq	fp, [r1], -r4
   1b8d4:	strdeq	fp, [r1], -r4
   1b8d8:	strdeq	fp, [r1], -r4
   1b8dc:	strdeq	fp, [r1], -r4
   1b8e0:	strdeq	fp, [r1], -r4
   1b8e4:	strdeq	fp, [r1], -r4
   1b8e8:	strdeq	fp, [r1], -r4
   1b8ec:	strdeq	fp, [r1], -r4
   1b8f0:	andeq	ip, r1, r4, asr r1
   1b8f4:	nop	{0}
   1b8f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b8fc:	add	r3, r3, #1
   1b900:	str	r3, [fp, #-56]	; 0xffffffc8
   1b904:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b908:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b90c:	cmp	r2, r3
   1b910:	bcc	1b83c <__assert_fail@plt+0xa458>
   1b914:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b918:	mov	r0, r3
   1b91c:	bl	111a4 <iswprint@plt>
   1b920:	mov	r3, r0
   1b924:	cmp	r3, #0
   1b928:	bne	1b934 <__assert_fail@plt+0xa550>
   1b92c:	mov	r3, #0
   1b930:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b934:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b938:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b93c:	add	r3, r2, r3
   1b940:	str	r3, [fp, #-48]	; 0xffffffd0
   1b944:	sub	r3, fp, #76	; 0x4c
   1b948:	mov	r0, r3
   1b94c:	bl	11144 <mbsinit@plt>
   1b950:	mov	r3, r0
   1b954:	cmp	r3, #0
   1b958:	beq	1b75c <__assert_fail@plt+0xa378>
   1b95c:	b	1b96c <__assert_fail@plt+0xa588>
   1b960:	nop	{0}
   1b964:	b	1b96c <__assert_fail@plt+0xa588>
   1b968:	nop	{0}
   1b96c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1b970:	strb	r3, [fp, #-42]	; 0xffffffd6
   1b974:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b978:	cmp	r3, #1
   1b97c:	bhi	1b9a0 <__assert_fail@plt+0xa5bc>
   1b980:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b984:	cmp	r3, #0
   1b988:	beq	1bcd8 <__assert_fail@plt+0xa8f4>
   1b98c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1b990:	eor	r3, r3, #1
   1b994:	uxtb	r3, r3
   1b998:	cmp	r3, #0
   1b99c:	beq	1bcd8 <__assert_fail@plt+0xa8f4>
   1b9a0:	ldr	r2, [fp, #-16]
   1b9a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b9a8:	add	r3, r2, r3
   1b9ac:	str	r3, [fp, #-68]	; 0xffffffbc
   1b9b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b9b4:	cmp	r3, #0
   1b9b8:	beq	1bb6c <__assert_fail@plt+0xa788>
   1b9bc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1b9c0:	eor	r3, r3, #1
   1b9c4:	uxtb	r3, r3
   1b9c8:	cmp	r3, #0
   1b9cc:	beq	1bb6c <__assert_fail@plt+0xa788>
   1b9d0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b9d4:	cmp	r3, #0
   1b9d8:	bne	1c140 <__assert_fail@plt+0xad5c>
   1b9dc:	mov	r3, #1
   1b9e0:	strb	r3, [fp, #-41]	; 0xffffffd7
   1b9e4:	ldr	r3, [fp, #4]
   1b9e8:	cmp	r3, #2
   1b9ec:	bne	1ba9c <__assert_fail@plt+0xa6b8>
   1b9f0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1b9f4:	eor	r3, r3, #1
   1b9f8:	uxtb	r3, r3
   1b9fc:	cmp	r3, #0
   1ba00:	beq	1ba9c <__assert_fail@plt+0xa6b8>
   1ba04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ba0c:	cmp	r2, r3
   1ba10:	bcs	1ba28 <__assert_fail@plt+0xa644>
   1ba14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba1c:	add	r3, r2, r3
   1ba20:	mov	r2, #39	; 0x27
   1ba24:	strb	r2, [r3]
   1ba28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba2c:	add	r3, r3, #1
   1ba30:	str	r3, [fp, #-20]	; 0xffffffec
   1ba34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ba3c:	cmp	r2, r3
   1ba40:	bcs	1ba58 <__assert_fail@plt+0xa674>
   1ba44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba4c:	add	r3, r2, r3
   1ba50:	mov	r2, #36	; 0x24
   1ba54:	strb	r2, [r3]
   1ba58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba5c:	add	r3, r3, #1
   1ba60:	str	r3, [fp, #-20]	; 0xffffffec
   1ba64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ba6c:	cmp	r2, r3
   1ba70:	bcs	1ba88 <__assert_fail@plt+0xa6a4>
   1ba74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba7c:	add	r3, r2, r3
   1ba80:	mov	r2, #39	; 0x27
   1ba84:	strb	r2, [r3]
   1ba88:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba8c:	add	r3, r3, #1
   1ba90:	str	r3, [fp, #-20]	; 0xffffffec
   1ba94:	mov	r3, #1
   1ba98:	strb	r3, [fp, #-35]	; 0xffffffdd
   1ba9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1baa0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1baa4:	cmp	r2, r3
   1baa8:	bcs	1bac0 <__assert_fail@plt+0xa6dc>
   1baac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bab4:	add	r3, r2, r3
   1bab8:	mov	r2, #92	; 0x5c
   1babc:	strb	r2, [r3]
   1bac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bac4:	add	r3, r3, #1
   1bac8:	str	r3, [fp, #-20]	; 0xffffffec
   1bacc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bad0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bad4:	cmp	r2, r3
   1bad8:	bcs	1bb00 <__assert_fail@plt+0xa71c>
   1badc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1bae0:	lsr	r3, r3, #6
   1bae4:	uxtb	r2, r3
   1bae8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1baec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1baf0:	add	r3, r1, r3
   1baf4:	add	r2, r2, #48	; 0x30
   1baf8:	uxtb	r2, r2
   1bafc:	strb	r2, [r3]
   1bb00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb04:	add	r3, r3, #1
   1bb08:	str	r3, [fp, #-20]	; 0xffffffec
   1bb0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bb14:	cmp	r2, r3
   1bb18:	bcs	1bb48 <__assert_fail@plt+0xa764>
   1bb1c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1bb20:	lsr	r3, r3, #3
   1bb24:	uxtb	r3, r3
   1bb28:	and	r3, r3, #7
   1bb2c:	uxtb	r2, r3
   1bb30:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1bb34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb38:	add	r3, r1, r3
   1bb3c:	add	r2, r2, #48	; 0x30
   1bb40:	uxtb	r2, r2
   1bb44:	strb	r2, [r3]
   1bb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb4c:	add	r3, r3, #1
   1bb50:	str	r3, [fp, #-20]	; 0xffffffec
   1bb54:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1bb58:	and	r3, r3, #7
   1bb5c:	uxtb	r3, r3
   1bb60:	add	r3, r3, #48	; 0x30
   1bb64:	strb	r3, [fp, #-38]	; 0xffffffda
   1bb68:	b	1bbb0 <__assert_fail@plt+0xa7cc>
   1bb6c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1bb70:	cmp	r3, #0
   1bb74:	beq	1bbb0 <__assert_fail@plt+0xa7cc>
   1bb78:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bb80:	cmp	r2, r3
   1bb84:	bcs	1bb9c <__assert_fail@plt+0xa7b8>
   1bb88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bb8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb90:	add	r3, r2, r3
   1bb94:	mov	r2, #92	; 0x5c
   1bb98:	strb	r2, [r3]
   1bb9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bba0:	add	r3, r3, #1
   1bba4:	str	r3, [fp, #-20]	; 0xffffffec
   1bba8:	mov	r3, #0
   1bbac:	strb	r3, [fp, #-40]	; 0xffffffd8
   1bbb0:	ldr	r3, [fp, #-16]
   1bbb4:	add	r3, r3, #1
   1bbb8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1bbbc:	cmp	r2, r3
   1bbc0:	bls	1bca0 <__assert_fail@plt+0xa8bc>
   1bbc4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1bbc8:	cmp	r3, #0
   1bbcc:	beq	1bc4c <__assert_fail@plt+0xa868>
   1bbd0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1bbd4:	eor	r3, r3, #1
   1bbd8:	uxtb	r3, r3
   1bbdc:	cmp	r3, #0
   1bbe0:	beq	1bc4c <__assert_fail@plt+0xa868>
   1bbe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbe8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bbec:	cmp	r2, r3
   1bbf0:	bcs	1bc08 <__assert_fail@plt+0xa824>
   1bbf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bbf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bbfc:	add	r3, r2, r3
   1bc00:	mov	r2, #39	; 0x27
   1bc04:	strb	r2, [r3]
   1bc08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc0c:	add	r3, r3, #1
   1bc10:	str	r3, [fp, #-20]	; 0xffffffec
   1bc14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bc1c:	cmp	r2, r3
   1bc20:	bcs	1bc38 <__assert_fail@plt+0xa854>
   1bc24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc2c:	add	r3, r2, r3
   1bc30:	mov	r2, #39	; 0x27
   1bc34:	strb	r2, [r3]
   1bc38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc3c:	add	r3, r3, #1
   1bc40:	str	r3, [fp, #-20]	; 0xffffffec
   1bc44:	mov	r3, #0
   1bc48:	strb	r3, [fp, #-35]	; 0xffffffdd
   1bc4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bc54:	cmp	r2, r3
   1bc58:	bcs	1bc70 <__assert_fail@plt+0xa88c>
   1bc5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc64:	add	r3, r2, r3
   1bc68:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1bc6c:	strb	r2, [r3]
   1bc70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc74:	add	r3, r3, #1
   1bc78:	str	r3, [fp, #-20]	; 0xffffffec
   1bc7c:	ldr	r3, [fp, #-16]
   1bc80:	add	r3, r3, #1
   1bc84:	str	r3, [fp, #-16]
   1bc88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1bc8c:	ldr	r3, [fp, #-16]
   1bc90:	add	r3, r2, r3
   1bc94:	ldrb	r3, [r3]
   1bc98:	strb	r3, [fp, #-38]	; 0xffffffda
   1bc9c:	b	1b9b0 <__assert_fail@plt+0xa5cc>
   1bca0:	nop	{0}
   1bca4:	b	1be7c <__assert_fail@plt+0xaa98>
   1bca8:	nop	{0}
   1bcac:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcb0:	nop	{0}
   1bcb4:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcb8:	nop	{0}
   1bcbc:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcc0:	nop	{0}
   1bcc4:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcc8:	nop	{0}
   1bccc:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcd0:	nop	{0}
   1bcd4:	b	1bcdc <__assert_fail@plt+0xa8f8>
   1bcd8:	nop	{0}
   1bcdc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1bce0:	eor	r3, r3, #1
   1bce4:	uxtb	r3, r3
   1bce8:	cmp	r3, #0
   1bcec:	bne	1bcfc <__assert_fail@plt+0xa918>
   1bcf0:	ldr	r3, [fp, #4]
   1bcf4:	cmp	r3, #2
   1bcf8:	bne	1bd10 <__assert_fail@plt+0xa92c>
   1bcfc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1bd00:	eor	r3, r3, #1
   1bd04:	uxtb	r3, r3
   1bd08:	cmp	r3, #0
   1bd0c:	bne	1bd50 <__assert_fail@plt+0xa96c>
   1bd10:	ldr	r3, [fp, #12]
   1bd14:	cmp	r3, #0
   1bd18:	beq	1bd50 <__assert_fail@plt+0xa96c>
   1bd1c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1bd20:	lsr	r3, r3, #5
   1bd24:	uxtb	r3, r3
   1bd28:	lsl	r3, r3, #2
   1bd2c:	ldr	r2, [fp, #12]
   1bd30:	add	r3, r2, r3
   1bd34:	ldr	r2, [r3]
   1bd38:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1bd3c:	and	r3, r3, #31
   1bd40:	lsr	r3, r2, r3
   1bd44:	and	r3, r3, #1
   1bd48:	cmp	r3, #0
   1bd4c:	bne	1bd64 <__assert_fail@plt+0xa980>
   1bd50:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1bd54:	eor	r3, r3, #1
   1bd58:	uxtb	r3, r3
   1bd5c:	cmp	r3, #0
   1bd60:	bne	1be78 <__assert_fail@plt+0xaa94>
   1bd64:	nop	{0}
   1bd68:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1bd6c:	cmp	r3, #0
   1bd70:	bne	1c148 <__assert_fail@plt+0xad64>
   1bd74:	mov	r3, #1
   1bd78:	strb	r3, [fp, #-41]	; 0xffffffd7
   1bd7c:	ldr	r3, [fp, #4]
   1bd80:	cmp	r3, #2
   1bd84:	bne	1be34 <__assert_fail@plt+0xaa50>
   1bd88:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1bd8c:	eor	r3, r3, #1
   1bd90:	uxtb	r3, r3
   1bd94:	cmp	r3, #0
   1bd98:	beq	1be34 <__assert_fail@plt+0xaa50>
   1bd9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bda0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bda4:	cmp	r2, r3
   1bda8:	bcs	1bdc0 <__assert_fail@plt+0xa9dc>
   1bdac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bdb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdb4:	add	r3, r2, r3
   1bdb8:	mov	r2, #39	; 0x27
   1bdbc:	strb	r2, [r3]
   1bdc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdc4:	add	r3, r3, #1
   1bdc8:	str	r3, [fp, #-20]	; 0xffffffec
   1bdcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bdd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bdd4:	cmp	r2, r3
   1bdd8:	bcs	1bdf0 <__assert_fail@plt+0xaa0c>
   1bddc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bde4:	add	r3, r2, r3
   1bde8:	mov	r2, #36	; 0x24
   1bdec:	strb	r2, [r3]
   1bdf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdf4:	add	r3, r3, #1
   1bdf8:	str	r3, [fp, #-20]	; 0xffffffec
   1bdfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1be04:	cmp	r2, r3
   1be08:	bcs	1be20 <__assert_fail@plt+0xaa3c>
   1be0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be14:	add	r3, r2, r3
   1be18:	mov	r2, #39	; 0x27
   1be1c:	strb	r2, [r3]
   1be20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be24:	add	r3, r3, #1
   1be28:	str	r3, [fp, #-20]	; 0xffffffec
   1be2c:	mov	r3, #1
   1be30:	strb	r3, [fp, #-35]	; 0xffffffdd
   1be34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1be3c:	cmp	r2, r3
   1be40:	bcs	1be58 <__assert_fail@plt+0xaa74>
   1be44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be4c:	add	r3, r2, r3
   1be50:	mov	r2, #92	; 0x5c
   1be54:	strb	r2, [r3]
   1be58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be5c:	add	r3, r3, #1
   1be60:	str	r3, [fp, #-20]	; 0xffffffec
   1be64:	b	1be7c <__assert_fail@plt+0xaa98>
   1be68:	nop	{0}
   1be6c:	b	1be7c <__assert_fail@plt+0xaa98>
   1be70:	nop	{0}
   1be74:	b	1be7c <__assert_fail@plt+0xaa98>
   1be78:	nop	{0}
   1be7c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1be80:	cmp	r3, #0
   1be84:	beq	1bf04 <__assert_fail@plt+0xab20>
   1be88:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1be8c:	eor	r3, r3, #1
   1be90:	uxtb	r3, r3
   1be94:	cmp	r3, #0
   1be98:	beq	1bf04 <__assert_fail@plt+0xab20>
   1be9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bea0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bea4:	cmp	r2, r3
   1bea8:	bcs	1bec0 <__assert_fail@plt+0xaadc>
   1beac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1beb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1beb4:	add	r3, r2, r3
   1beb8:	mov	r2, #39	; 0x27
   1bebc:	strb	r2, [r3]
   1bec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bec4:	add	r3, r3, #1
   1bec8:	str	r3, [fp, #-20]	; 0xffffffec
   1becc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bed0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bed4:	cmp	r2, r3
   1bed8:	bcs	1bef0 <__assert_fail@plt+0xab0c>
   1bedc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bee4:	add	r3, r2, r3
   1bee8:	mov	r2, #39	; 0x27
   1beec:	strb	r2, [r3]
   1bef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bef4:	add	r3, r3, #1
   1bef8:	str	r3, [fp, #-20]	; 0xffffffec
   1befc:	mov	r3, #0
   1bf00:	strb	r3, [fp, #-35]	; 0xffffffdd
   1bf04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bf08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bf0c:	cmp	r2, r3
   1bf10:	bcs	1bf28 <__assert_fail@plt+0xab44>
   1bf14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bf18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf1c:	add	r3, r2, r3
   1bf20:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1bf24:	strb	r2, [r3]
   1bf28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf2c:	add	r3, r3, #1
   1bf30:	str	r3, [fp, #-20]	; 0xffffffec
   1bf34:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   1bf38:	eor	r3, r3, #1
   1bf3c:	uxtb	r3, r3
   1bf40:	cmp	r3, #0
   1bf44:	beq	1bf50 <__assert_fail@plt+0xab6c>
   1bf48:	mov	r3, #0
   1bf4c:	strb	r3, [fp, #-37]	; 0xffffffdb
   1bf50:	ldr	r3, [fp, #-16]
   1bf54:	add	r3, r3, #1
   1bf58:	str	r3, [fp, #-16]
   1bf5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bf60:	cmn	r3, #1
   1bf64:	bne	1bf8c <__assert_fail@plt+0xaba8>
   1bf68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1bf6c:	ldr	r3, [fp, #-16]
   1bf70:	add	r3, r2, r3
   1bf74:	ldrb	r3, [r3]
   1bf78:	cmp	r3, #0
   1bf7c:	movne	r3, #1
   1bf80:	moveq	r3, #0
   1bf84:	uxtb	r3, r3
   1bf88:	b	1bfa4 <__assert_fail@plt+0xabc0>
   1bf8c:	ldr	r2, [fp, #-16]
   1bf90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bf94:	cmp	r2, r3
   1bf98:	movne	r3, #1
   1bf9c:	moveq	r3, #0
   1bfa0:	uxtb	r3, r3
   1bfa4:	cmp	r3, #0
   1bfa8:	bne	1adc4 <__assert_fail@plt+0x99e0>
   1bfac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bfb0:	cmp	r3, #0
   1bfb4:	bne	1bfd0 <__assert_fail@plt+0xabec>
   1bfb8:	ldr	r3, [fp, #4]
   1bfbc:	cmp	r3, #2
   1bfc0:	bne	1bfd0 <__assert_fail@plt+0xabec>
   1bfc4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1bfc8:	cmp	r3, #0
   1bfcc:	bne	1c150 <__assert_fail@plt+0xad6c>
   1bfd0:	ldr	r3, [fp, #4]
   1bfd4:	cmp	r3, #2
   1bfd8:	bne	1c078 <__assert_fail@plt+0xac94>
   1bfdc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1bfe0:	eor	r3, r3, #1
   1bfe4:	uxtb	r3, r3
   1bfe8:	cmp	r3, #0
   1bfec:	beq	1c078 <__assert_fail@plt+0xac94>
   1bff0:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   1bff4:	cmp	r3, #0
   1bff8:	beq	1c078 <__assert_fail@plt+0xac94>
   1bffc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1c000:	cmp	r3, #0
   1c004:	beq	1c04c <__assert_fail@plt+0xac68>
   1c008:	ldr	r3, [fp, #20]
   1c00c:	str	r3, [sp, #16]
   1c010:	ldr	r3, [fp, #16]
   1c014:	str	r3, [sp, #12]
   1c018:	ldr	r3, [fp, #12]
   1c01c:	str	r3, [sp, #8]
   1c020:	ldr	r3, [fp, #8]
   1c024:	str	r3, [sp, #4]
   1c028:	mov	r3, #5
   1c02c:	str	r3, [sp]
   1c030:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c034:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c03c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1c040:	bl	1aafc <__assert_fail@plt+0x9718>
   1c044:	mov	r3, r0
   1c048:	b	1c1b8 <__assert_fail@plt+0xadd4>
   1c04c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c050:	cmp	r3, #0
   1c054:	bne	1c078 <__assert_fail@plt+0xac94>
   1c058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c05c:	cmp	r3, #0
   1c060:	beq	1c078 <__assert_fail@plt+0xac94>
   1c064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c068:	str	r3, [fp, #-92]	; 0xffffffa4
   1c06c:	mov	r3, #0
   1c070:	str	r3, [fp, #-20]	; 0xffffffec
   1c074:	b	1ab90 <__assert_fail@plt+0x97ac>
   1c078:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c07c:	cmp	r3, #0
   1c080:	beq	1c0ec <__assert_fail@plt+0xad08>
   1c084:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1c088:	eor	r3, r3, #1
   1c08c:	uxtb	r3, r3
   1c090:	cmp	r3, #0
   1c094:	beq	1c0ec <__assert_fail@plt+0xad08>
   1c098:	b	1c0dc <__assert_fail@plt+0xacf8>
   1c09c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c0a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c0a4:	cmp	r2, r3
   1c0a8:	bcs	1c0c4 <__assert_fail@plt+0xace0>
   1c0ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0b4:	add	r3, r2, r3
   1c0b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c0bc:	ldrb	r2, [r2]
   1c0c0:	strb	r2, [r3]
   1c0c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0c8:	add	r3, r3, #1
   1c0cc:	str	r3, [fp, #-20]	; 0xffffffec
   1c0d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0d4:	add	r3, r3, #1
   1c0d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c0dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0e0:	ldrb	r3, [r3]
   1c0e4:	cmp	r3, #0
   1c0e8:	bne	1c09c <__assert_fail@plt+0xacb8>
   1c0ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c0f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c0f4:	cmp	r2, r3
   1c0f8:	bcs	1c110 <__assert_fail@plt+0xad2c>
   1c0fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c100:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c104:	add	r3, r2, r3
   1c108:	mov	r2, #0
   1c10c:	strb	r2, [r3]
   1c110:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c114:	b	1c1b8 <__assert_fail@plt+0xadd4>
   1c118:	nop	{0}
   1c11c:	b	1c154 <__assert_fail@plt+0xad70>
   1c120:	nop	{0}
   1c124:	b	1c154 <__assert_fail@plt+0xad70>
   1c128:	nop	{0}
   1c12c:	b	1c154 <__assert_fail@plt+0xad70>
   1c130:	nop	{0}
   1c134:	b	1c154 <__assert_fail@plt+0xad70>
   1c138:	nop	{0}
   1c13c:	b	1c154 <__assert_fail@plt+0xad70>
   1c140:	nop	{0}
   1c144:	b	1c154 <__assert_fail@plt+0xad70>
   1c148:	nop	{0}
   1c14c:	b	1c154 <__assert_fail@plt+0xad70>
   1c150:	nop	{0}
   1c154:	ldr	r3, [fp, #4]
   1c158:	cmp	r3, #2
   1c15c:	bne	1c174 <__assert_fail@plt+0xad90>
   1c160:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1c164:	cmp	r3, #0
   1c168:	beq	1c174 <__assert_fail@plt+0xad90>
   1c16c:	mov	r3, #4
   1c170:	str	r3, [fp, #4]
   1c174:	ldr	r3, [fp, #8]
   1c178:	bic	r3, r3, #2
   1c17c:	ldr	r2, [fp, #20]
   1c180:	str	r2, [sp, #16]
   1c184:	ldr	r2, [fp, #16]
   1c188:	str	r2, [sp, #12]
   1c18c:	mov	r2, #0
   1c190:	str	r2, [sp, #8]
   1c194:	str	r3, [sp, #4]
   1c198:	ldr	r3, [fp, #4]
   1c19c:	str	r3, [sp]
   1c1a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c1a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c1a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c1ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1c1b0:	bl	1aafc <__assert_fail@plt+0x9718>
   1c1b4:	mov	r3, r0
   1c1b8:	mov	r0, r3
   1c1bc:	sub	sp, fp, #8
   1c1c0:	ldr	r4, [sp]
   1c1c4:	ldr	fp, [sp, #4]
   1c1c8:	add	sp, sp, #8
   1c1cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1d0:	str	fp, [sp, #-8]!
   1c1d4:	str	lr, [sp, #4]
   1c1d8:	add	fp, sp, #4
   1c1dc:	sub	sp, sp, #56	; 0x38
   1c1e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1e4:	str	r1, [fp, #-28]	; 0xffffffe4
   1c1e8:	str	r2, [fp, #-32]	; 0xffffffe0
   1c1ec:	str	r3, [fp, #-36]	; 0xffffffdc
   1c1f0:	ldr	r3, [fp, #4]
   1c1f4:	cmp	r3, #0
   1c1f8:	beq	1c204 <__assert_fail@plt+0xae20>
   1c1fc:	ldr	r3, [fp, #4]
   1c200:	b	1c20c <__assert_fail@plt+0xae28>
   1c204:	movw	r3, #17080	; 0x42b8
   1c208:	movt	r3, #3
   1c20c:	str	r3, [fp, #-8]
   1c210:	bl	112d0 <__errno_location@plt>
   1c214:	mov	r3, r0
   1c218:	ldr	r3, [r3]
   1c21c:	str	r3, [fp, #-12]
   1c220:	ldr	r3, [fp, #-8]
   1c224:	ldr	r3, [r3]
   1c228:	ldr	r2, [fp, #-8]
   1c22c:	ldr	r2, [r2, #4]
   1c230:	ldr	r1, [fp, #-8]
   1c234:	add	r1, r1, #8
   1c238:	ldr	r0, [fp, #-8]
   1c23c:	ldr	r0, [r0, #40]	; 0x28
   1c240:	ldr	ip, [fp, #-8]
   1c244:	ldr	ip, [ip, #44]	; 0x2c
   1c248:	str	ip, [sp, #16]
   1c24c:	str	r0, [sp, #12]
   1c250:	str	r1, [sp, #8]
   1c254:	str	r2, [sp, #4]
   1c258:	str	r3, [sp]
   1c25c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c260:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c264:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c26c:	bl	1aafc <__assert_fail@plt+0x9718>
   1c270:	str	r0, [fp, #-16]
   1c274:	bl	112d0 <__errno_location@plt>
   1c278:	mov	r2, r0
   1c27c:	ldr	r3, [fp, #-12]
   1c280:	str	r3, [r2]
   1c284:	ldr	r3, [fp, #-16]
   1c288:	mov	r0, r3
   1c28c:	sub	sp, fp, #4
   1c290:	ldr	fp, [sp]
   1c294:	add	sp, sp, #4
   1c298:	pop	{pc}		; (ldr pc, [sp], #4)
   1c29c:	str	fp, [sp, #-8]!
   1c2a0:	str	lr, [sp, #4]
   1c2a4:	add	fp, sp, #4
   1c2a8:	sub	sp, sp, #16
   1c2ac:	str	r0, [fp, #-8]
   1c2b0:	str	r1, [fp, #-12]
   1c2b4:	str	r2, [fp, #-16]
   1c2b8:	ldr	r3, [fp, #-16]
   1c2bc:	mov	r2, #0
   1c2c0:	ldr	r1, [fp, #-12]
   1c2c4:	ldr	r0, [fp, #-8]
   1c2c8:	bl	1c2e4 <__assert_fail@plt+0xaf00>
   1c2cc:	mov	r3, r0
   1c2d0:	mov	r0, r3
   1c2d4:	sub	sp, fp, #4
   1c2d8:	ldr	fp, [sp]
   1c2dc:	add	sp, sp, #4
   1c2e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2e4:	str	fp, [sp, #-8]!
   1c2e8:	str	lr, [sp, #4]
   1c2ec:	add	fp, sp, #4
   1c2f0:	sub	sp, sp, #64	; 0x40
   1c2f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1c2f8:	str	r1, [fp, #-36]	; 0xffffffdc
   1c2fc:	str	r2, [fp, #-40]	; 0xffffffd8
   1c300:	str	r3, [fp, #-44]	; 0xffffffd4
   1c304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c308:	cmp	r3, #0
   1c30c:	beq	1c318 <__assert_fail@plt+0xaf34>
   1c310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c314:	b	1c320 <__assert_fail@plt+0xaf3c>
   1c318:	movw	r3, #17080	; 0x42b8
   1c31c:	movt	r3, #3
   1c320:	str	r3, [fp, #-8]
   1c324:	bl	112d0 <__errno_location@plt>
   1c328:	mov	r3, r0
   1c32c:	ldr	r3, [r3]
   1c330:	str	r3, [fp, #-12]
   1c334:	ldr	r3, [fp, #-8]
   1c338:	ldr	r3, [r3, #4]
   1c33c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c340:	cmp	r2, #0
   1c344:	moveq	r2, #1
   1c348:	movne	r2, #0
   1c34c:	uxtb	r2, r2
   1c350:	orr	r3, r3, r2
   1c354:	str	r3, [fp, #-16]
   1c358:	ldr	r3, [fp, #-8]
   1c35c:	ldr	r3, [r3]
   1c360:	ldr	r2, [fp, #-8]
   1c364:	add	r2, r2, #8
   1c368:	ldr	r1, [fp, #-8]
   1c36c:	ldr	r1, [r1, #40]	; 0x28
   1c370:	ldr	r0, [fp, #-8]
   1c374:	ldr	r0, [r0, #44]	; 0x2c
   1c378:	str	r0, [sp, #16]
   1c37c:	str	r1, [sp, #12]
   1c380:	str	r2, [sp, #8]
   1c384:	ldr	r2, [fp, #-16]
   1c388:	str	r2, [sp, #4]
   1c38c:	str	r3, [sp]
   1c390:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c394:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c398:	mov	r1, #0
   1c39c:	mov	r0, #0
   1c3a0:	bl	1aafc <__assert_fail@plt+0x9718>
   1c3a4:	mov	r3, r0
   1c3a8:	add	r3, r3, #1
   1c3ac:	str	r3, [fp, #-20]	; 0xffffffec
   1c3b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3b4:	bl	1e440 <__assert_fail@plt+0xd05c>
   1c3b8:	mov	r3, r0
   1c3bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1c3c0:	ldr	r3, [fp, #-8]
   1c3c4:	ldr	r3, [r3]
   1c3c8:	ldr	r2, [fp, #-8]
   1c3cc:	add	r2, r2, #8
   1c3d0:	ldr	r1, [fp, #-8]
   1c3d4:	ldr	r1, [r1, #40]	; 0x28
   1c3d8:	ldr	r0, [fp, #-8]
   1c3dc:	ldr	r0, [r0, #44]	; 0x2c
   1c3e0:	str	r0, [sp, #16]
   1c3e4:	str	r1, [sp, #12]
   1c3e8:	str	r2, [sp, #8]
   1c3ec:	ldr	r2, [fp, #-16]
   1c3f0:	str	r2, [sp, #4]
   1c3f4:	str	r3, [sp]
   1c3f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c3fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c400:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c408:	bl	1aafc <__assert_fail@plt+0x9718>
   1c40c:	bl	112d0 <__errno_location@plt>
   1c410:	mov	r2, r0
   1c414:	ldr	r3, [fp, #-12]
   1c418:	str	r3, [r2]
   1c41c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c420:	cmp	r3, #0
   1c424:	beq	1c438 <__assert_fail@plt+0xb054>
   1c428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c42c:	sub	r2, r3, #1
   1c430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c434:	str	r2, [r3]
   1c438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c43c:	mov	r0, r3
   1c440:	sub	sp, fp, #4
   1c444:	ldr	fp, [sp]
   1c448:	add	sp, sp, #4
   1c44c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c450:	str	fp, [sp, #-8]!
   1c454:	str	lr, [sp, #4]
   1c458:	add	fp, sp, #4
   1c45c:	sub	sp, sp, #8
   1c460:	movw	r3, #16796	; 0x419c
   1c464:	movt	r3, #3
   1c468:	ldr	r3, [r3]
   1c46c:	str	r3, [fp, #-12]
   1c470:	mov	r3, #1
   1c474:	str	r3, [fp, #-8]
   1c478:	b	1c4a4 <__assert_fail@plt+0xb0c0>
   1c47c:	ldr	r3, [fp, #-8]
   1c480:	lsl	r3, r3, #3
   1c484:	ldr	r2, [fp, #-12]
   1c488:	add	r3, r2, r3
   1c48c:	ldr	r3, [r3, #4]
   1c490:	mov	r0, r3
   1c494:	bl	17278 <__assert_fail@plt+0x5e94>
   1c498:	ldr	r3, [fp, #-8]
   1c49c:	add	r3, r3, #1
   1c4a0:	str	r3, [fp, #-8]
   1c4a4:	movw	r3, #16784	; 0x4190
   1c4a8:	movt	r3, #3
   1c4ac:	ldr	r3, [r3]
   1c4b0:	ldr	r2, [fp, #-8]
   1c4b4:	cmp	r2, r3
   1c4b8:	blt	1c47c <__assert_fail@plt+0xb098>
   1c4bc:	ldr	r3, [fp, #-12]
   1c4c0:	ldr	r2, [r3, #4]
   1c4c4:	movw	r3, #17128	; 0x42e8
   1c4c8:	movt	r3, #3
   1c4cc:	cmp	r2, r3
   1c4d0:	beq	1c508 <__assert_fail@plt+0xb124>
   1c4d4:	ldr	r3, [fp, #-12]
   1c4d8:	ldr	r3, [r3, #4]
   1c4dc:	mov	r0, r3
   1c4e0:	bl	17278 <__assert_fail@plt+0x5e94>
   1c4e4:	movw	r3, #16788	; 0x4194
   1c4e8:	movt	r3, #3
   1c4ec:	mov	r2, #256	; 0x100
   1c4f0:	str	r2, [r3]
   1c4f4:	movw	r3, #16788	; 0x4194
   1c4f8:	movt	r3, #3
   1c4fc:	movw	r2, #17128	; 0x42e8
   1c500:	movt	r2, #3
   1c504:	str	r2, [r3, #4]
   1c508:	ldr	r2, [fp, #-12]
   1c50c:	movw	r3, #16788	; 0x4194
   1c510:	movt	r3, #3
   1c514:	cmp	r2, r3
   1c518:	beq	1c538 <__assert_fail@plt+0xb154>
   1c51c:	ldr	r0, [fp, #-12]
   1c520:	bl	17278 <__assert_fail@plt+0x5e94>
   1c524:	movw	r3, #16796	; 0x419c
   1c528:	movt	r3, #3
   1c52c:	movw	r2, #16788	; 0x4194
   1c530:	movt	r2, #3
   1c534:	str	r2, [r3]
   1c538:	movw	r3, #16784	; 0x4190
   1c53c:	movt	r3, #3
   1c540:	mov	r2, #1
   1c544:	str	r2, [r3]
   1c548:	nop	{0}
   1c54c:	sub	sp, fp, #4
   1c550:	ldr	fp, [sp]
   1c554:	add	sp, sp, #4
   1c558:	pop	{pc}		; (ldr pc, [sp], #4)
   1c55c:	str	fp, [sp, #-8]!
   1c560:	str	lr, [sp, #4]
   1c564:	add	fp, sp, #4
   1c568:	sub	sp, sp, #80	; 0x50
   1c56c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c570:	str	r1, [fp, #-52]	; 0xffffffcc
   1c574:	str	r2, [fp, #-56]	; 0xffffffc8
   1c578:	str	r3, [fp, #-60]	; 0xffffffc4
   1c57c:	bl	112d0 <__errno_location@plt>
   1c580:	mov	r3, r0
   1c584:	ldr	r3, [r3]
   1c588:	str	r3, [fp, #-16]
   1c58c:	movw	r3, #16796	; 0x419c
   1c590:	movt	r3, #3
   1c594:	ldr	r3, [r3]
   1c598:	str	r3, [fp, #-8]
   1c59c:	mvn	r3, #-2147483648	; 0x80000000
   1c5a0:	str	r3, [fp, #-20]	; 0xffffffec
   1c5a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c5a8:	cmp	r3, #0
   1c5ac:	blt	1c5c0 <__assert_fail@plt+0xb1dc>
   1c5b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c5b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5b8:	cmp	r2, r3
   1c5bc:	blt	1c5c4 <__assert_fail@plt+0xb1e0>
   1c5c0:	bl	113c0 <abort@plt>
   1c5c4:	movw	r3, #16784	; 0x4190
   1c5c8:	movt	r3, #3
   1c5cc:	ldr	r3, [r3]
   1c5d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c5d4:	cmp	r2, r3
   1c5d8:	blt	1c6d0 <__assert_fail@plt+0xb2ec>
   1c5dc:	ldr	r2, [fp, #-8]
   1c5e0:	movw	r3, #16788	; 0x4194
   1c5e4:	movt	r3, #3
   1c5e8:	cmp	r2, r3
   1c5ec:	moveq	r3, #1
   1c5f0:	movne	r3, #0
   1c5f4:	strb	r3, [fp, #-21]	; 0xffffffeb
   1c5f8:	movw	r3, #16784	; 0x4190
   1c5fc:	movt	r3, #3
   1c600:	ldr	r3, [r3]
   1c604:	str	r3, [fp, #-40]	; 0xffffffd8
   1c608:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1c60c:	cmp	r3, #0
   1c610:	beq	1c61c <__assert_fail@plt+0xb238>
   1c614:	mov	r0, #0
   1c618:	b	1c620 <__assert_fail@plt+0xb23c>
   1c61c:	ldr	r0, [fp, #-8]
   1c620:	movw	r3, #16784	; 0x4190
   1c624:	movt	r3, #3
   1c628:	ldr	r3, [r3]
   1c62c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c630:	sub	r3, r2, r3
   1c634:	add	r2, r3, #1
   1c638:	sub	r1, fp, #40	; 0x28
   1c63c:	mov	r3, #8
   1c640:	str	r3, [sp]
   1c644:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c648:	bl	1e7a0 <__assert_fail@plt+0xd3bc>
   1c64c:	str	r0, [fp, #-8]
   1c650:	movw	r3, #16796	; 0x419c
   1c654:	movt	r3, #3
   1c658:	ldr	r2, [fp, #-8]
   1c65c:	str	r2, [r3]
   1c660:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1c664:	cmp	r3, #0
   1c668:	beq	1c684 <__assert_fail@plt+0xb2a0>
   1c66c:	ldr	r2, [fp, #-8]
   1c670:	movw	r3, #16788	; 0x4194
   1c674:	movt	r3, #3
   1c678:	mov	r1, r2
   1c67c:	ldrd	r2, [r3]
   1c680:	strd	r2, [r1]
   1c684:	movw	r3, #16784	; 0x4190
   1c688:	movt	r3, #3
   1c68c:	ldr	r3, [r3]
   1c690:	lsl	r3, r3, #3
   1c694:	ldr	r2, [fp, #-8]
   1c698:	add	r0, r2, r3
   1c69c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c6a0:	movw	r3, #16784	; 0x4190
   1c6a4:	movt	r3, #3
   1c6a8:	ldr	r3, [r3]
   1c6ac:	sub	r3, r2, r3
   1c6b0:	lsl	r3, r3, #3
   1c6b4:	mov	r2, r3
   1c6b8:	mov	r1, #0
   1c6bc:	bl	112e8 <memset@plt>
   1c6c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c6c4:	movw	r3, #16784	; 0x4190
   1c6c8:	movt	r3, #3
   1c6cc:	str	r2, [r3]
   1c6d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6d4:	lsl	r3, r3, #3
   1c6d8:	ldr	r2, [fp, #-8]
   1c6dc:	add	r3, r2, r3
   1c6e0:	ldr	r3, [r3]
   1c6e4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c6e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6ec:	lsl	r3, r3, #3
   1c6f0:	ldr	r2, [fp, #-8]
   1c6f4:	add	r3, r2, r3
   1c6f8:	ldr	r3, [r3, #4]
   1c6fc:	str	r3, [fp, #-12]
   1c700:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c704:	ldr	r3, [r3, #4]
   1c708:	orr	r3, r3, #1
   1c70c:	str	r3, [fp, #-32]	; 0xffffffe0
   1c710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c714:	ldr	r3, [r3]
   1c718:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c71c:	add	r2, r2, #8
   1c720:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c724:	ldr	r1, [r1, #40]	; 0x28
   1c728:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c72c:	ldr	r0, [r0, #44]	; 0x2c
   1c730:	str	r0, [sp, #16]
   1c734:	str	r1, [sp, #12]
   1c738:	str	r2, [sp, #8]
   1c73c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c740:	str	r2, [sp, #4]
   1c744:	str	r3, [sp]
   1c748:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c74c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c754:	ldr	r0, [fp, #-12]
   1c758:	bl	1aafc <__assert_fail@plt+0x9718>
   1c75c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c760:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c768:	cmp	r2, r3
   1c76c:	bhi	1c824 <__assert_fail@plt+0xb440>
   1c770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c774:	add	r3, r3, #1
   1c778:	str	r3, [fp, #-28]	; 0xffffffe4
   1c77c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c780:	lsl	r3, r3, #3
   1c784:	ldr	r2, [fp, #-8]
   1c788:	add	r3, r2, r3
   1c78c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c790:	str	r2, [r3]
   1c794:	ldr	r2, [fp, #-12]
   1c798:	movw	r3, #17128	; 0x42e8
   1c79c:	movt	r3, #3
   1c7a0:	cmp	r2, r3
   1c7a4:	beq	1c7b0 <__assert_fail@plt+0xb3cc>
   1c7a8:	ldr	r0, [fp, #-12]
   1c7ac:	bl	17278 <__assert_fail@plt+0x5e94>
   1c7b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c7b4:	bl	1e440 <__assert_fail@plt+0xd05c>
   1c7b8:	mov	r3, r0
   1c7bc:	str	r3, [fp, #-12]
   1c7c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c7c4:	lsl	r3, r3, #3
   1c7c8:	ldr	r2, [fp, #-8]
   1c7cc:	add	r3, r2, r3
   1c7d0:	ldr	r2, [fp, #-12]
   1c7d4:	str	r2, [r3, #4]
   1c7d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c7dc:	ldr	r3, [r3]
   1c7e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c7e4:	add	r2, r2, #8
   1c7e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c7ec:	ldr	r1, [r1, #40]	; 0x28
   1c7f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c7f4:	ldr	r0, [r0, #44]	; 0x2c
   1c7f8:	str	r0, [sp, #16]
   1c7fc:	str	r1, [sp, #12]
   1c800:	str	r2, [sp, #8]
   1c804:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c808:	str	r2, [sp, #4]
   1c80c:	str	r3, [sp]
   1c810:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c814:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c81c:	ldr	r0, [fp, #-12]
   1c820:	bl	1aafc <__assert_fail@plt+0x9718>
   1c824:	bl	112d0 <__errno_location@plt>
   1c828:	mov	r2, r0
   1c82c:	ldr	r3, [fp, #-16]
   1c830:	str	r3, [r2]
   1c834:	ldr	r3, [fp, #-12]
   1c838:	mov	r0, r3
   1c83c:	sub	sp, fp, #4
   1c840:	ldr	fp, [sp]
   1c844:	add	sp, sp, #4
   1c848:	pop	{pc}		; (ldr pc, [sp], #4)
   1c84c:	str	fp, [sp, #-8]!
   1c850:	str	lr, [sp, #4]
   1c854:	add	fp, sp, #4
   1c858:	sub	sp, sp, #8
   1c85c:	str	r0, [fp, #-8]
   1c860:	str	r1, [fp, #-12]
   1c864:	movw	r3, #17080	; 0x42b8
   1c868:	movt	r3, #3
   1c86c:	mvn	r2, #0
   1c870:	ldr	r1, [fp, #-12]
   1c874:	ldr	r0, [fp, #-8]
   1c878:	bl	1c55c <__assert_fail@plt+0xb178>
   1c87c:	mov	r3, r0
   1c880:	mov	r0, r3
   1c884:	sub	sp, fp, #4
   1c888:	ldr	fp, [sp]
   1c88c:	add	sp, sp, #4
   1c890:	pop	{pc}		; (ldr pc, [sp], #4)
   1c894:	str	fp, [sp, #-8]!
   1c898:	str	lr, [sp, #4]
   1c89c:	add	fp, sp, #4
   1c8a0:	sub	sp, sp, #16
   1c8a4:	str	r0, [fp, #-8]
   1c8a8:	str	r1, [fp, #-12]
   1c8ac:	str	r2, [fp, #-16]
   1c8b0:	movw	r3, #17080	; 0x42b8
   1c8b4:	movt	r3, #3
   1c8b8:	ldr	r2, [fp, #-16]
   1c8bc:	ldr	r1, [fp, #-12]
   1c8c0:	ldr	r0, [fp, #-8]
   1c8c4:	bl	1c55c <__assert_fail@plt+0xb178>
   1c8c8:	mov	r3, r0
   1c8cc:	mov	r0, r3
   1c8d0:	sub	sp, fp, #4
   1c8d4:	ldr	fp, [sp]
   1c8d8:	add	sp, sp, #4
   1c8dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8e0:	str	fp, [sp, #-8]!
   1c8e4:	str	lr, [sp, #4]
   1c8e8:	add	fp, sp, #4
   1c8ec:	sub	sp, sp, #8
   1c8f0:	str	r0, [fp, #-8]
   1c8f4:	ldr	r1, [fp, #-8]
   1c8f8:	mov	r0, #0
   1c8fc:	bl	1c84c <__assert_fail@plt+0xb468>
   1c900:	mov	r3, r0
   1c904:	mov	r0, r3
   1c908:	sub	sp, fp, #4
   1c90c:	ldr	fp, [sp]
   1c910:	add	sp, sp, #4
   1c914:	pop	{pc}		; (ldr pc, [sp], #4)
   1c918:	str	fp, [sp, #-8]!
   1c91c:	str	lr, [sp, #4]
   1c920:	add	fp, sp, #4
   1c924:	sub	sp, sp, #8
   1c928:	str	r0, [fp, #-8]
   1c92c:	str	r1, [fp, #-12]
   1c930:	ldr	r2, [fp, #-12]
   1c934:	ldr	r1, [fp, #-8]
   1c938:	mov	r0, #0
   1c93c:	bl	1c894 <__assert_fail@plt+0xb4b0>
   1c940:	mov	r3, r0
   1c944:	mov	r0, r3
   1c948:	sub	sp, fp, #4
   1c94c:	ldr	fp, [sp]
   1c950:	add	sp, sp, #4
   1c954:	pop	{pc}		; (ldr pc, [sp], #4)
   1c958:	str	fp, [sp, #-8]!
   1c95c:	str	lr, [sp, #4]
   1c960:	add	fp, sp, #4
   1c964:	sub	sp, sp, #64	; 0x40
   1c968:	str	r0, [fp, #-56]	; 0xffffffc8
   1c96c:	str	r1, [fp, #-60]	; 0xffffffc4
   1c970:	str	r2, [fp, #-64]	; 0xffffffc0
   1c974:	sub	r3, fp, #52	; 0x34
   1c978:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c97c:	mov	r0, r3
   1c980:	bl	1a958 <__assert_fail@plt+0x9574>
   1c984:	sub	r3, fp, #52	; 0x34
   1c988:	mvn	r2, #0
   1c98c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c990:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c994:	bl	1c55c <__assert_fail@plt+0xb178>
   1c998:	mov	r3, r0
   1c99c:	mov	r0, r3
   1c9a0:	sub	sp, fp, #4
   1c9a4:	ldr	fp, [sp]
   1c9a8:	add	sp, sp, #4
   1c9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9b0:	str	fp, [sp, #-8]!
   1c9b4:	str	lr, [sp, #4]
   1c9b8:	add	fp, sp, #4
   1c9bc:	sub	sp, sp, #64	; 0x40
   1c9c0:	str	r0, [fp, #-56]	; 0xffffffc8
   1c9c4:	str	r1, [fp, #-60]	; 0xffffffc4
   1c9c8:	str	r2, [fp, #-64]	; 0xffffffc0
   1c9cc:	str	r3, [fp, #-68]	; 0xffffffbc
   1c9d0:	sub	r3, fp, #52	; 0x34
   1c9d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c9d8:	mov	r0, r3
   1c9dc:	bl	1a958 <__assert_fail@plt+0x9574>
   1c9e0:	sub	r3, fp, #52	; 0x34
   1c9e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c9e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c9ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c9f0:	bl	1c55c <__assert_fail@plt+0xb178>
   1c9f4:	mov	r3, r0
   1c9f8:	mov	r0, r3
   1c9fc:	sub	sp, fp, #4
   1ca00:	ldr	fp, [sp]
   1ca04:	add	sp, sp, #4
   1ca08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca0c:	str	fp, [sp, #-8]!
   1ca10:	str	lr, [sp, #4]
   1ca14:	add	fp, sp, #4
   1ca18:	sub	sp, sp, #8
   1ca1c:	str	r0, [fp, #-8]
   1ca20:	str	r1, [fp, #-12]
   1ca24:	ldr	r2, [fp, #-12]
   1ca28:	ldr	r1, [fp, #-8]
   1ca2c:	mov	r0, #0
   1ca30:	bl	1c958 <__assert_fail@plt+0xb574>
   1ca34:	mov	r3, r0
   1ca38:	mov	r0, r3
   1ca3c:	sub	sp, fp, #4
   1ca40:	ldr	fp, [sp]
   1ca44:	add	sp, sp, #4
   1ca48:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca4c:	str	fp, [sp, #-8]!
   1ca50:	str	lr, [sp, #4]
   1ca54:	add	fp, sp, #4
   1ca58:	sub	sp, sp, #16
   1ca5c:	str	r0, [fp, #-8]
   1ca60:	str	r1, [fp, #-12]
   1ca64:	str	r2, [fp, #-16]
   1ca68:	ldr	r3, [fp, #-16]
   1ca6c:	ldr	r2, [fp, #-12]
   1ca70:	ldr	r1, [fp, #-8]
   1ca74:	mov	r0, #0
   1ca78:	bl	1c9b0 <__assert_fail@plt+0xb5cc>
   1ca7c:	mov	r3, r0
   1ca80:	mov	r0, r3
   1ca84:	sub	sp, fp, #4
   1ca88:	ldr	fp, [sp]
   1ca8c:	add	sp, sp, #4
   1ca90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca94:	str	fp, [sp, #-8]!
   1ca98:	str	lr, [sp, #4]
   1ca9c:	add	fp, sp, #4
   1caa0:	sub	sp, sp, #64	; 0x40
   1caa4:	str	r0, [fp, #-56]	; 0xffffffc8
   1caa8:	str	r1, [fp, #-60]	; 0xffffffc4
   1caac:	mov	r3, r2
   1cab0:	strb	r3, [fp, #-61]	; 0xffffffc3
   1cab4:	movw	r2, #17080	; 0x42b8
   1cab8:	movt	r2, #3
   1cabc:	sub	r3, fp, #52	; 0x34
   1cac0:	ldrd	r0, [r2]
   1cac4:	strd	r0, [r3]
   1cac8:	ldrd	r0, [r2, #8]
   1cacc:	strd	r0, [r3, #8]
   1cad0:	ldrd	r0, [r2, #16]
   1cad4:	strd	r0, [r3, #16]
   1cad8:	ldrd	r0, [r2, #24]
   1cadc:	strd	r0, [r3, #24]
   1cae0:	ldrd	r0, [r2, #32]
   1cae4:	strd	r0, [r3, #32]
   1cae8:	ldrd	r0, [r2, #40]	; 0x28
   1caec:	strd	r0, [r3, #40]	; 0x28
   1caf0:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1caf4:	sub	r3, fp, #52	; 0x34
   1caf8:	mov	r2, #1
   1cafc:	mov	r0, r3
   1cb00:	bl	1a7b8 <__assert_fail@plt+0x93d4>
   1cb04:	sub	r3, fp, #52	; 0x34
   1cb08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cb0c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cb10:	mov	r0, #0
   1cb14:	bl	1c55c <__assert_fail@plt+0xb178>
   1cb18:	mov	r3, r0
   1cb1c:	mov	r0, r3
   1cb20:	sub	sp, fp, #4
   1cb24:	ldr	fp, [sp]
   1cb28:	add	sp, sp, #4
   1cb2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb30:	str	fp, [sp, #-8]!
   1cb34:	str	lr, [sp, #4]
   1cb38:	add	fp, sp, #4
   1cb3c:	sub	sp, sp, #8
   1cb40:	str	r0, [fp, #-8]
   1cb44:	mov	r3, r1
   1cb48:	strb	r3, [fp, #-9]
   1cb4c:	ldrb	r3, [fp, #-9]
   1cb50:	mov	r2, r3
   1cb54:	mvn	r1, #0
   1cb58:	ldr	r0, [fp, #-8]
   1cb5c:	bl	1ca94 <__assert_fail@plt+0xb6b0>
   1cb60:	mov	r3, r0
   1cb64:	mov	r0, r3
   1cb68:	sub	sp, fp, #4
   1cb6c:	ldr	fp, [sp]
   1cb70:	add	sp, sp, #4
   1cb74:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb78:	str	fp, [sp, #-8]!
   1cb7c:	str	lr, [sp, #4]
   1cb80:	add	fp, sp, #4
   1cb84:	sub	sp, sp, #8
   1cb88:	str	r0, [fp, #-8]
   1cb8c:	mov	r1, #58	; 0x3a
   1cb90:	ldr	r0, [fp, #-8]
   1cb94:	bl	1cb30 <__assert_fail@plt+0xb74c>
   1cb98:	mov	r3, r0
   1cb9c:	mov	r0, r3
   1cba0:	sub	sp, fp, #4
   1cba4:	ldr	fp, [sp]
   1cba8:	add	sp, sp, #4
   1cbac:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbb0:	str	fp, [sp, #-8]!
   1cbb4:	str	lr, [sp, #4]
   1cbb8:	add	fp, sp, #4
   1cbbc:	sub	sp, sp, #8
   1cbc0:	str	r0, [fp, #-8]
   1cbc4:	str	r1, [fp, #-12]
   1cbc8:	mov	r2, #58	; 0x3a
   1cbcc:	ldr	r1, [fp, #-12]
   1cbd0:	ldr	r0, [fp, #-8]
   1cbd4:	bl	1ca94 <__assert_fail@plt+0xb6b0>
   1cbd8:	mov	r3, r0
   1cbdc:	mov	r0, r3
   1cbe0:	sub	sp, fp, #4
   1cbe4:	ldr	fp, [sp]
   1cbe8:	add	sp, sp, #4
   1cbec:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbf0:	str	fp, [sp, #-8]!
   1cbf4:	str	lr, [sp, #4]
   1cbf8:	add	fp, sp, #4
   1cbfc:	sub	sp, sp, #112	; 0x70
   1cc00:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc04:	str	r1, [fp, #-60]	; 0xffffffc4
   1cc08:	str	r2, [fp, #-64]	; 0xffffffc0
   1cc0c:	sub	r3, fp, #116	; 0x74
   1cc10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cc14:	mov	r0, r3
   1cc18:	bl	1a958 <__assert_fail@plt+0x9574>
   1cc1c:	sub	r3, fp, #52	; 0x34
   1cc20:	sub	r2, fp, #116	; 0x74
   1cc24:	ldrd	r0, [r2]
   1cc28:	strd	r0, [r3]
   1cc2c:	ldrd	r0, [r2, #8]
   1cc30:	strd	r0, [r3, #8]
   1cc34:	ldrd	r0, [r2, #16]
   1cc38:	strd	r0, [r3, #16]
   1cc3c:	ldrd	r0, [r2, #24]
   1cc40:	strd	r0, [r3, #24]
   1cc44:	ldrd	r0, [r2, #32]
   1cc48:	strd	r0, [r3, #32]
   1cc4c:	ldrd	r0, [r2, #40]	; 0x28
   1cc50:	strd	r0, [r3, #40]	; 0x28
   1cc54:	sub	r3, fp, #52	; 0x34
   1cc58:	mov	r2, #1
   1cc5c:	mov	r1, #58	; 0x3a
   1cc60:	mov	r0, r3
   1cc64:	bl	1a7b8 <__assert_fail@plt+0x93d4>
   1cc68:	sub	r3, fp, #52	; 0x34
   1cc6c:	mvn	r2, #0
   1cc70:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cc74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cc78:	bl	1c55c <__assert_fail@plt+0xb178>
   1cc7c:	mov	r3, r0
   1cc80:	mov	r0, r3
   1cc84:	sub	sp, fp, #4
   1cc88:	ldr	fp, [sp]
   1cc8c:	add	sp, sp, #4
   1cc90:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc94:	str	fp, [sp, #-8]!
   1cc98:	str	lr, [sp, #4]
   1cc9c:	add	fp, sp, #4
   1cca0:	sub	sp, sp, #24
   1cca4:	str	r0, [fp, #-8]
   1cca8:	str	r1, [fp, #-12]
   1ccac:	str	r2, [fp, #-16]
   1ccb0:	str	r3, [fp, #-20]	; 0xffffffec
   1ccb4:	mvn	r3, #0
   1ccb8:	str	r3, [sp]
   1ccbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccc0:	ldr	r2, [fp, #-16]
   1ccc4:	ldr	r1, [fp, #-12]
   1ccc8:	ldr	r0, [fp, #-8]
   1cccc:	bl	1cce8 <__assert_fail@plt+0xb904>
   1ccd0:	mov	r3, r0
   1ccd4:	mov	r0, r3
   1ccd8:	sub	sp, fp, #4
   1ccdc:	ldr	fp, [sp]
   1cce0:	add	sp, sp, #4
   1cce4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cce8:	str	fp, [sp, #-8]!
   1ccec:	str	lr, [sp, #4]
   1ccf0:	add	fp, sp, #4
   1ccf4:	sub	sp, sp, #64	; 0x40
   1ccf8:	str	r0, [fp, #-56]	; 0xffffffc8
   1ccfc:	str	r1, [fp, #-60]	; 0xffffffc4
   1cd00:	str	r2, [fp, #-64]	; 0xffffffc0
   1cd04:	str	r3, [fp, #-68]	; 0xffffffbc
   1cd08:	movw	r2, #17080	; 0x42b8
   1cd0c:	movt	r2, #3
   1cd10:	sub	r3, fp, #52	; 0x34
   1cd14:	ldrd	r0, [r2]
   1cd18:	strd	r0, [r3]
   1cd1c:	ldrd	r0, [r2, #8]
   1cd20:	strd	r0, [r3, #8]
   1cd24:	ldrd	r0, [r2, #16]
   1cd28:	strd	r0, [r3, #16]
   1cd2c:	ldrd	r0, [r2, #24]
   1cd30:	strd	r0, [r3, #24]
   1cd34:	ldrd	r0, [r2, #32]
   1cd38:	strd	r0, [r3, #32]
   1cd3c:	ldrd	r0, [r2, #40]	; 0x28
   1cd40:	strd	r0, [r3, #40]	; 0x28
   1cd44:	sub	r3, fp, #52	; 0x34
   1cd48:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cd4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cd50:	mov	r0, r3
   1cd54:	bl	1a8d0 <__assert_fail@plt+0x94ec>
   1cd58:	sub	r3, fp, #52	; 0x34
   1cd5c:	ldr	r2, [fp, #4]
   1cd60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cd64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cd68:	bl	1c55c <__assert_fail@plt+0xb178>
   1cd6c:	mov	r3, r0
   1cd70:	mov	r0, r3
   1cd74:	sub	sp, fp, #4
   1cd78:	ldr	fp, [sp]
   1cd7c:	add	sp, sp, #4
   1cd80:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd84:	str	fp, [sp, #-8]!
   1cd88:	str	lr, [sp, #4]
   1cd8c:	add	fp, sp, #4
   1cd90:	sub	sp, sp, #16
   1cd94:	str	r0, [fp, #-8]
   1cd98:	str	r1, [fp, #-12]
   1cd9c:	str	r2, [fp, #-16]
   1cda0:	ldr	r3, [fp, #-16]
   1cda4:	ldr	r2, [fp, #-12]
   1cda8:	ldr	r1, [fp, #-8]
   1cdac:	mov	r0, #0
   1cdb0:	bl	1cc94 <__assert_fail@plt+0xb8b0>
   1cdb4:	mov	r3, r0
   1cdb8:	mov	r0, r3
   1cdbc:	sub	sp, fp, #4
   1cdc0:	ldr	fp, [sp]
   1cdc4:	add	sp, sp, #4
   1cdc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdcc:	str	fp, [sp, #-8]!
   1cdd0:	str	lr, [sp, #4]
   1cdd4:	add	fp, sp, #4
   1cdd8:	sub	sp, sp, #24
   1cddc:	str	r0, [fp, #-8]
   1cde0:	str	r1, [fp, #-12]
   1cde4:	str	r2, [fp, #-16]
   1cde8:	str	r3, [fp, #-20]	; 0xffffffec
   1cdec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cdf0:	str	r3, [sp]
   1cdf4:	ldr	r3, [fp, #-16]
   1cdf8:	ldr	r2, [fp, #-12]
   1cdfc:	ldr	r1, [fp, #-8]
   1ce00:	mov	r0, #0
   1ce04:	bl	1cce8 <__assert_fail@plt+0xb904>
   1ce08:	mov	r3, r0
   1ce0c:	mov	r0, r3
   1ce10:	sub	sp, fp, #4
   1ce14:	ldr	fp, [sp]
   1ce18:	add	sp, sp, #4
   1ce1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce20:	str	fp, [sp, #-8]!
   1ce24:	str	lr, [sp, #4]
   1ce28:	add	fp, sp, #4
   1ce2c:	sub	sp, sp, #16
   1ce30:	str	r0, [fp, #-8]
   1ce34:	str	r1, [fp, #-12]
   1ce38:	str	r2, [fp, #-16]
   1ce3c:	movw	r3, #16800	; 0x41a0
   1ce40:	movt	r3, #3
   1ce44:	ldr	r2, [fp, #-16]
   1ce48:	ldr	r1, [fp, #-12]
   1ce4c:	ldr	r0, [fp, #-8]
   1ce50:	bl	1c55c <__assert_fail@plt+0xb178>
   1ce54:	mov	r3, r0
   1ce58:	mov	r0, r3
   1ce5c:	sub	sp, fp, #4
   1ce60:	ldr	fp, [sp]
   1ce64:	add	sp, sp, #4
   1ce68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce6c:	str	fp, [sp, #-8]!
   1ce70:	str	lr, [sp, #4]
   1ce74:	add	fp, sp, #4
   1ce78:	sub	sp, sp, #8
   1ce7c:	str	r0, [fp, #-8]
   1ce80:	str	r1, [fp, #-12]
   1ce84:	ldr	r2, [fp, #-12]
   1ce88:	ldr	r1, [fp, #-8]
   1ce8c:	mov	r0, #0
   1ce90:	bl	1ce20 <__assert_fail@plt+0xba3c>
   1ce94:	mov	r3, r0
   1ce98:	mov	r0, r3
   1ce9c:	sub	sp, fp, #4
   1cea0:	ldr	fp, [sp]
   1cea4:	add	sp, sp, #4
   1cea8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ceac:	str	fp, [sp, #-8]!
   1ceb0:	str	lr, [sp, #4]
   1ceb4:	add	fp, sp, #4
   1ceb8:	sub	sp, sp, #8
   1cebc:	str	r0, [fp, #-8]
   1cec0:	str	r1, [fp, #-12]
   1cec4:	mvn	r2, #0
   1cec8:	ldr	r1, [fp, #-12]
   1cecc:	ldr	r0, [fp, #-8]
   1ced0:	bl	1ce20 <__assert_fail@plt+0xba3c>
   1ced4:	mov	r3, r0
   1ced8:	mov	r0, r3
   1cedc:	sub	sp, fp, #4
   1cee0:	ldr	fp, [sp]
   1cee4:	add	sp, sp, #4
   1cee8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ceec:	str	fp, [sp, #-8]!
   1cef0:	str	lr, [sp, #4]
   1cef4:	add	fp, sp, #4
   1cef8:	sub	sp, sp, #8
   1cefc:	str	r0, [fp, #-8]
   1cf00:	ldr	r1, [fp, #-8]
   1cf04:	mov	r0, #0
   1cf08:	bl	1ceac <__assert_fail@plt+0xbac8>
   1cf0c:	mov	r3, r0
   1cf10:	mov	r0, r3
   1cf14:	sub	sp, fp, #4
   1cf18:	ldr	fp, [sp]
   1cf1c:	add	sp, sp, #4
   1cf20:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf24:	str	fp, [sp, #-8]!
   1cf28:	str	lr, [sp, #4]
   1cf2c:	add	fp, sp, #4
   1cf30:	sub	sp, sp, #16
   1cf34:	str	r0, [fp, #-16]
   1cf38:	mov	r1, #0
   1cf3c:	ldr	r0, [fp, #-16]
   1cf40:	bl	1133c <setlocale@plt>
   1cf44:	str	r0, [fp, #-8]
   1cf48:	ldr	r3, [fp, #-8]
   1cf4c:	mov	r0, r3
   1cf50:	sub	sp, fp, #4
   1cf54:	ldr	fp, [sp]
   1cf58:	add	sp, sp, #4
   1cf5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf60:	str	fp, [sp, #-8]!
   1cf64:	str	lr, [sp, #4]
   1cf68:	add	fp, sp, #4
   1cf6c:	sub	sp, sp, #24
   1cf70:	str	r0, [fp, #-16]
   1cf74:	str	r1, [fp, #-20]	; 0xffffffec
   1cf78:	str	r2, [fp, #-24]	; 0xffffffe8
   1cf7c:	ldr	r0, [fp, #-16]
   1cf80:	bl	1cf24 <__assert_fail@plt+0xbb40>
   1cf84:	str	r0, [fp, #-8]
   1cf88:	ldr	r3, [fp, #-8]
   1cf8c:	cmp	r3, #0
   1cf90:	bne	1cfb4 <__assert_fail@plt+0xbbd0>
   1cf94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf98:	cmp	r3, #0
   1cf9c:	beq	1cfac <__assert_fail@plt+0xbbc8>
   1cfa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfa4:	mov	r2, #0
   1cfa8:	strb	r2, [r3]
   1cfac:	mov	r3, #22
   1cfb0:	b	1d030 <__assert_fail@plt+0xbc4c>
   1cfb4:	ldr	r0, [fp, #-8]
   1cfb8:	bl	11294 <strlen@plt>
   1cfbc:	str	r0, [fp, #-12]
   1cfc0:	ldr	r2, [fp, #-12]
   1cfc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfc8:	cmp	r2, r3
   1cfcc:	bcs	1cff0 <__assert_fail@plt+0xbc0c>
   1cfd0:	ldr	r3, [fp, #-12]
   1cfd4:	add	r3, r3, #1
   1cfd8:	mov	r2, r3
   1cfdc:	ldr	r1, [fp, #-8]
   1cfe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cfe4:	bl	1112c <memcpy@plt>
   1cfe8:	mov	r3, #0
   1cfec:	b	1d030 <__assert_fail@plt+0xbc4c>
   1cff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cff4:	cmp	r3, #0
   1cff8:	beq	1d02c <__assert_fail@plt+0xbc48>
   1cffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d000:	sub	r3, r3, #1
   1d004:	mov	r2, r3
   1d008:	ldr	r1, [fp, #-8]
   1d00c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d010:	bl	1112c <memcpy@plt>
   1d014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d018:	sub	r3, r3, #1
   1d01c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d020:	add	r3, r2, r3
   1d024:	mov	r2, #0
   1d028:	strb	r2, [r3]
   1d02c:	mov	r3, #34	; 0x22
   1d030:	mov	r0, r3
   1d034:	sub	sp, fp, #4
   1d038:	ldr	fp, [sp]
   1d03c:	add	sp, sp, #4
   1d040:	pop	{pc}		; (ldr pc, [sp], #4)
   1d044:	str	fp, [sp, #-8]!
   1d048:	str	lr, [sp, #4]
   1d04c:	add	fp, sp, #4
   1d050:	sub	sp, sp, #16
   1d054:	str	r0, [fp, #-8]
   1d058:	str	r1, [fp, #-12]
   1d05c:	str	r2, [fp, #-16]
   1d060:	ldr	r2, [fp, #-16]
   1d064:	ldr	r1, [fp, #-12]
   1d068:	ldr	r0, [fp, #-8]
   1d06c:	bl	1cf60 <__assert_fail@plt+0xbb7c>
   1d070:	mov	r3, r0
   1d074:	mov	r0, r3
   1d078:	sub	sp, fp, #4
   1d07c:	ldr	fp, [sp]
   1d080:	add	sp, sp, #4
   1d084:	pop	{pc}		; (ldr pc, [sp], #4)
   1d088:	str	fp, [sp, #-8]!
   1d08c:	str	lr, [sp, #4]
   1d090:	add	fp, sp, #4
   1d094:	sub	sp, sp, #8
   1d098:	str	r0, [fp, #-8]
   1d09c:	ldr	r0, [fp, #-8]
   1d0a0:	bl	1cf24 <__assert_fail@plt+0xbb40>
   1d0a4:	mov	r3, r0
   1d0a8:	mov	r0, r3
   1d0ac:	sub	sp, fp, #4
   1d0b0:	ldr	fp, [sp]
   1d0b4:	add	sp, sp, #4
   1d0b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0bc:	push	{fp}		; (str fp, [sp, #-4]!)
   1d0c0:	add	fp, sp, #0
   1d0c4:	sub	sp, sp, #12
   1d0c8:	str	r0, [fp, #-8]
   1d0cc:	ldr	r3, [fp, #-8]
   1d0d0:	ldr	r3, [r3, #76]	; 0x4c
   1d0d4:	mov	r0, r3
   1d0d8:	add	sp, fp, #0
   1d0dc:	pop	{fp}		; (ldr fp, [sp], #4)
   1d0e0:	bx	lr
   1d0e4:	push	{fp}		; (str fp, [sp, #-4]!)
   1d0e8:	add	fp, sp, #0
   1d0ec:	sub	sp, sp, #12
   1d0f0:	str	r0, [fp, #-8]
   1d0f4:	ldr	r3, [fp, #-8]
   1d0f8:	ldr	r3, [r3, #92]	; 0x5c
   1d0fc:	mov	r0, r3
   1d100:	add	sp, fp, #0
   1d104:	pop	{fp}		; (ldr fp, [sp], #4)
   1d108:	bx	lr
   1d10c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d110:	add	fp, sp, #0
   1d114:	sub	sp, sp, #12
   1d118:	str	r0, [fp, #-8]
   1d11c:	ldr	r3, [fp, #-8]
   1d120:	ldr	r3, [r3, #84]	; 0x54
   1d124:	mov	r0, r3
   1d128:	add	sp, fp, #0
   1d12c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d130:	bx	lr
   1d134:	push	{fp}		; (str fp, [sp, #-4]!)
   1d138:	add	fp, sp, #0
   1d13c:	sub	sp, sp, #12
   1d140:	str	r0, [fp, #-8]
   1d144:	mov	r3, #0
   1d148:	mov	r0, r3
   1d14c:	add	sp, fp, #0
   1d150:	pop	{fp}		; (ldr fp, [sp], #4)
   1d154:	bx	lr
   1d158:	push	{fp}		; (str fp, [sp, #-4]!)
   1d15c:	add	fp, sp, #0
   1d160:	sub	sp, sp, #12
   1d164:	str	r0, [fp, #-8]
   1d168:	str	r1, [fp, #-12]
   1d16c:	ldr	r2, [fp, #-8]
   1d170:	ldr	r3, [fp, #-12]
   1d174:	mov	r1, r2
   1d178:	add	r3, r3, #72	; 0x48
   1d17c:	ldrd	r2, [r3]
   1d180:	strd	r2, [r1]
   1d184:	ldr	r0, [fp, #-8]
   1d188:	add	sp, fp, #0
   1d18c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d190:	bx	lr
   1d194:	push	{fp}		; (str fp, [sp, #-4]!)
   1d198:	add	fp, sp, #0
   1d19c:	sub	sp, sp, #12
   1d1a0:	str	r0, [fp, #-8]
   1d1a4:	str	r1, [fp, #-12]
   1d1a8:	ldr	r2, [fp, #-8]
   1d1ac:	ldr	r3, [fp, #-12]
   1d1b0:	mov	r1, r2
   1d1b4:	add	r3, r3, #88	; 0x58
   1d1b8:	ldrd	r2, [r3]
   1d1bc:	strd	r2, [r1]
   1d1c0:	ldr	r0, [fp, #-8]
   1d1c4:	add	sp, fp, #0
   1d1c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d1cc:	bx	lr
   1d1d0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d1d4:	add	fp, sp, #0
   1d1d8:	sub	sp, sp, #12
   1d1dc:	str	r0, [fp, #-8]
   1d1e0:	str	r1, [fp, #-12]
   1d1e4:	ldr	r2, [fp, #-8]
   1d1e8:	ldr	r3, [fp, #-12]
   1d1ec:	mov	r1, r2
   1d1f0:	add	r3, r3, #80	; 0x50
   1d1f4:	ldrd	r2, [r3]
   1d1f8:	strd	r2, [r1]
   1d1fc:	ldr	r0, [fp, #-8]
   1d200:	add	sp, fp, #0
   1d204:	pop	{fp}		; (ldr fp, [sp], #4)
   1d208:	bx	lr
   1d20c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d210:	add	fp, sp, #0
   1d214:	sub	sp, sp, #20
   1d218:	str	r0, [fp, #-16]
   1d21c:	str	r1, [fp, #-20]	; 0xffffffec
   1d220:	mvn	r3, #0
   1d224:	str	r3, [fp, #-12]
   1d228:	mvn	r3, #0
   1d22c:	str	r3, [fp, #-8]
   1d230:	ldr	r3, [fp, #-16]
   1d234:	mov	r1, r3
   1d238:	sub	r3, fp, #12
   1d23c:	ldrd	r2, [r3]
   1d240:	strd	r2, [r1]
   1d244:	ldr	r0, [fp, #-16]
   1d248:	add	sp, fp, #0
   1d24c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d250:	bx	lr
   1d254:	push	{fp}		; (str fp, [sp, #-4]!)
   1d258:	add	fp, sp, #0
   1d25c:	sub	sp, sp, #12
   1d260:	str	r0, [fp, #-8]
   1d264:	str	r1, [fp, #-12]
   1d268:	ldr	r3, [fp, #-8]
   1d26c:	mov	r0, r3
   1d270:	add	sp, fp, #0
   1d274:	pop	{fp}		; (ldr fp, [sp], #4)
   1d278:	bx	lr
   1d27c:	str	fp, [sp, #-8]!
   1d280:	str	lr, [sp, #4]
   1d284:	add	fp, sp, #4
   1d288:	sub	sp, sp, #16
   1d28c:	str	r0, [fp, #-8]
   1d290:	str	r1, [fp, #-12]
   1d294:	str	r2, [fp, #-16]
   1d298:	ldr	r2, [fp, #-16]
   1d29c:	ldr	r1, [fp, #-12]
   1d2a0:	ldr	r0, [fp, #-8]
   1d2a4:	bl	1112c <memcpy@plt>
   1d2a8:	ldr	r2, [fp, #-8]
   1d2ac:	ldr	r3, [fp, #-16]
   1d2b0:	add	r3, r2, r3
   1d2b4:	mov	r2, #0
   1d2b8:	strb	r2, [r3]
   1d2bc:	nop	{0}
   1d2c0:	sub	sp, fp, #4
   1d2c4:	ldr	fp, [sp]
   1d2c8:	add	sp, sp, #4
   1d2cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2d0:	str	fp, [sp, #-8]!
   1d2d4:	str	lr, [sp, #4]
   1d2d8:	add	fp, sp, #4
   1d2dc:	sub	sp, sp, #24
   1d2e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d2e8:	cmp	r3, #0
   1d2ec:	beq	1d304 <__assert_fail@plt+0xbf20>
   1d2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f4:	bl	11294 <strlen@plt>
   1d2f8:	mov	r3, r0
   1d2fc:	add	r3, r3, #1
   1d300:	b	1d308 <__assert_fail@plt+0xbf24>
   1d304:	mov	r3, #0
   1d308:	str	r3, [fp, #-8]
   1d30c:	ldr	r3, [fp, #-8]
   1d310:	cmp	r3, #58	; 0x3a
   1d314:	movcs	r3, r3
   1d318:	movcc	r3, #58	; 0x3a
   1d31c:	add	r3, r3, #1
   1d320:	str	r3, [fp, #-12]
   1d324:	ldr	r3, [fp, #-12]
   1d328:	add	r3, r3, #8
   1d32c:	bic	r3, r3, #3
   1d330:	mov	r0, r3
   1d334:	bl	208f4 <__assert_fail@plt+0xf510>
   1d338:	mov	r3, r0
   1d33c:	str	r3, [fp, #-16]
   1d340:	ldr	r3, [fp, #-16]
   1d344:	cmp	r3, #0
   1d348:	beq	1d3a8 <__assert_fail@plt+0xbfc4>
   1d34c:	ldr	r3, [fp, #-16]
   1d350:	mov	r2, #0
   1d354:	str	r2, [r3]
   1d358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d35c:	cmp	r3, #0
   1d360:	movne	r3, #1
   1d364:	moveq	r3, #0
   1d368:	uxtb	r3, r3
   1d36c:	mov	r2, r3
   1d370:	ldr	r3, [fp, #-16]
   1d374:	strb	r2, [r3, #4]
   1d378:	ldr	r3, [fp, #-16]
   1d37c:	mov	r2, #0
   1d380:	strb	r2, [r3, #5]
   1d384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d388:	cmp	r3, #0
   1d38c:	beq	1d3a8 <__assert_fail@plt+0xbfc4>
   1d390:	ldr	r3, [fp, #-16]
   1d394:	add	r3, r3, #5
   1d398:	ldr	r2, [fp, #-8]
   1d39c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3a0:	mov	r0, r3
   1d3a4:	bl	1d27c <__assert_fail@plt+0xbe98>
   1d3a8:	ldr	r3, [fp, #-16]
   1d3ac:	mov	r0, r3
   1d3b0:	sub	sp, fp, #4
   1d3b4:	ldr	fp, [sp]
   1d3b8:	add	sp, sp, #4
   1d3bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3c0:	str	fp, [sp, #-8]!
   1d3c4:	str	lr, [sp, #4]
   1d3c8:	add	fp, sp, #4
   1d3cc:	sub	sp, sp, #24
   1d3d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d3d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1d3d8:	mov	r3, #0
   1d3dc:	str	r3, [fp, #-12]
   1d3e0:	movw	r3, #13364	; 0x3434
   1d3e4:	movt	r3, #2
   1d3e8:	str	r3, [fp, #-8]
   1d3ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3f0:	ldr	r3, [r3, #40]	; 0x28
   1d3f4:	str	r3, [fp, #-12]
   1d3f8:	ldr	r3, [fp, #-12]
   1d3fc:	cmp	r3, #0
   1d400:	beq	1d428 <__assert_fail@plt+0xc044>
   1d404:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d408:	ldr	r3, [fp, #-12]
   1d40c:	cmp	r2, r3
   1d410:	bhi	1d430 <__assert_fail@plt+0xc04c>
   1d414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d418:	add	r3, r3, #44	; 0x2c
   1d41c:	ldr	r2, [fp, #-12]
   1d420:	cmp	r2, r3
   1d424:	bcs	1d430 <__assert_fail@plt+0xc04c>
   1d428:	mov	r3, #1
   1d42c:	b	1d59c <__assert_fail@plt+0xc1b8>
   1d430:	ldr	r3, [fp, #-12]
   1d434:	ldrb	r3, [r3]
   1d438:	cmp	r3, #0
   1d43c:	beq	1d58c <__assert_fail@plt+0xc1a8>
   1d440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d444:	add	r3, r3, #5
   1d448:	str	r3, [fp, #-8]
   1d44c:	b	1d574 <__assert_fail@plt+0xc190>
   1d450:	ldr	r3, [fp, #-8]
   1d454:	ldrb	r3, [r3]
   1d458:	cmp	r3, #0
   1d45c:	bne	1d520 <__assert_fail@plt+0xc13c>
   1d460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d464:	add	r3, r3, #5
   1d468:	ldr	r2, [fp, #-8]
   1d46c:	cmp	r2, r3
   1d470:	bne	1d484 <__assert_fail@plt+0xc0a0>
   1d474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d478:	ldrb	r3, [r3, #4]
   1d47c:	cmp	r3, #0
   1d480:	bne	1d520 <__assert_fail@plt+0xc13c>
   1d484:	ldr	r0, [fp, #-12]
   1d488:	bl	11294 <strlen@plt>
   1d48c:	mov	r3, r0
   1d490:	add	r3, r3, #1
   1d494:	str	r3, [fp, #-16]
   1d498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d49c:	add	r3, r3, #5
   1d4a0:	add	r2, r3, #59	; 0x3b
   1d4a4:	ldr	r3, [fp, #-8]
   1d4a8:	sub	r3, r2, r3
   1d4ac:	ldr	r2, [fp, #-16]
   1d4b0:	cmp	r2, r3
   1d4b4:	bge	1d4d0 <__assert_fail@plt+0xc0ec>
   1d4b8:	ldr	r3, [fp, #-16]
   1d4bc:	mov	r2, r3
   1d4c0:	ldr	r1, [fp, #-12]
   1d4c4:	ldr	r0, [fp, #-8]
   1d4c8:	bl	1d27c <__assert_fail@plt+0xbe98>
   1d4cc:	b	1d58c <__assert_fail@plt+0xc1a8>
   1d4d0:	ldr	r0, [fp, #-12]
   1d4d4:	bl	1d2d0 <__assert_fail@plt+0xbeec>
   1d4d8:	mov	r2, r0
   1d4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4e0:	str	r2, [r3]
   1d4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4e8:	ldr	r3, [r3]
   1d4ec:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4f4:	cmp	r3, #0
   1d4f8:	bne	1d504 <__assert_fail@plt+0xc120>
   1d4fc:	mov	r3, #0
   1d500:	b	1d59c <__assert_fail@plt+0xc1b8>
   1d504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d508:	mov	r2, #0
   1d50c:	strb	r2, [r3, #4]
   1d510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d514:	add	r3, r3, #5
   1d518:	str	r3, [fp, #-8]
   1d51c:	b	1d58c <__assert_fail@plt+0xc1a8>
   1d520:	ldr	r0, [fp, #-8]
   1d524:	bl	11294 <strlen@plt>
   1d528:	mov	r3, r0
   1d52c:	add	r3, r3, #1
   1d530:	ldr	r2, [fp, #-8]
   1d534:	add	r3, r2, r3
   1d538:	str	r3, [fp, #-8]
   1d53c:	ldr	r3, [fp, #-8]
   1d540:	ldrb	r3, [r3]
   1d544:	cmp	r3, #0
   1d548:	bne	1d574 <__assert_fail@plt+0xc190>
   1d54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d550:	ldr	r3, [r3]
   1d554:	cmp	r3, #0
   1d558:	beq	1d574 <__assert_fail@plt+0xc190>
   1d55c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d560:	ldr	r3, [r3]
   1d564:	str	r3, [fp, #-24]	; 0xffffffe8
   1d568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d56c:	add	r3, r3, #5
   1d570:	str	r3, [fp, #-8]
   1d574:	ldr	r1, [fp, #-12]
   1d578:	ldr	r0, [fp, #-8]
   1d57c:	bl	110b4 <strcmp@plt>
   1d580:	mov	r3, r0
   1d584:	cmp	r3, #0
   1d588:	bne	1d450 <__assert_fail@plt+0xc06c>
   1d58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d590:	ldr	r2, [fp, #-8]
   1d594:	str	r2, [r3, #40]	; 0x28
   1d598:	mov	r3, #1
   1d59c:	mov	r0, r3
   1d5a0:	sub	sp, fp, #4
   1d5a4:	ldr	fp, [sp]
   1d5a8:	add	sp, sp, #4
   1d5ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5b0:	str	fp, [sp, #-8]!
   1d5b4:	str	lr, [sp, #4]
   1d5b8:	add	fp, sp, #4
   1d5bc:	sub	sp, sp, #16
   1d5c0:	str	r0, [fp, #-16]
   1d5c4:	mov	r2, #1
   1d5c8:	ldr	r3, [fp, #-16]
   1d5cc:	cmp	r3, r2
   1d5d0:	beq	1d600 <__assert_fail@plt+0xc21c>
   1d5d4:	b	1d5f4 <__assert_fail@plt+0xc210>
   1d5d8:	ldr	r3, [fp, #-16]
   1d5dc:	ldr	r3, [r3]
   1d5e0:	str	r3, [fp, #-8]
   1d5e4:	ldr	r0, [fp, #-16]
   1d5e8:	bl	17278 <__assert_fail@plt+0x5e94>
   1d5ec:	ldr	r3, [fp, #-8]
   1d5f0:	str	r3, [fp, #-16]
   1d5f4:	ldr	r3, [fp, #-16]
   1d5f8:	cmp	r3, #0
   1d5fc:	bne	1d5d8 <__assert_fail@plt+0xc1f4>
   1d600:	nop	{0}
   1d604:	sub	sp, fp, #4
   1d608:	ldr	fp, [sp]
   1d60c:	add	sp, sp, #4
   1d610:	pop	{pc}		; (ldr pc, [sp], #4)
   1d614:	str	fp, [sp, #-8]!
   1d618:	str	lr, [sp, #4]
   1d61c:	add	fp, sp, #4
   1d620:	movw	r0, #13368	; 0x3438
   1d624:	movt	r0, #2
   1d628:	bl	1121c <getenv@plt>
   1d62c:	mov	r3, r0
   1d630:	mov	r0, r3
   1d634:	sub	sp, fp, #4
   1d638:	ldr	fp, [sp]
   1d63c:	add	sp, sp, #4
   1d640:	pop	{pc}		; (ldr pc, [sp], #4)
   1d644:	str	fp, [sp, #-8]!
   1d648:	str	lr, [sp, #4]
   1d64c:	add	fp, sp, #4
   1d650:	sub	sp, sp, #8
   1d654:	str	r0, [fp, #-8]
   1d658:	ldr	r3, [fp, #-8]
   1d65c:	cmp	r3, #0
   1d660:	beq	1d680 <__assert_fail@plt+0xc29c>
   1d664:	mov	r2, #1
   1d668:	ldr	r1, [fp, #-8]
   1d66c:	movw	r0, #13368	; 0x3438
   1d670:	movt	r0, #2
   1d674:	bl	112ac <setenv@plt>
   1d678:	mov	r3, r0
   1d67c:	b	1d690 <__assert_fail@plt+0xc2ac>
   1d680:	movw	r0, #13368	; 0x3438
   1d684:	movt	r0, #2
   1d688:	bl	113a8 <unsetenv@plt>
   1d68c:	mov	r3, r0
   1d690:	mov	r0, r3
   1d694:	sub	sp, fp, #4
   1d698:	ldr	fp, [sp]
   1d69c:	add	sp, sp, #4
   1d6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6a4:	str	fp, [sp, #-8]!
   1d6a8:	str	lr, [sp, #4]
   1d6ac:	add	fp, sp, #4
   1d6b0:	sub	sp, sp, #8
   1d6b4:	str	r0, [fp, #-8]
   1d6b8:	ldr	r3, [fp, #-8]
   1d6bc:	ldrb	r3, [r3, #4]
   1d6c0:	cmp	r3, #0
   1d6c4:	beq	1d6d4 <__assert_fail@plt+0xc2f0>
   1d6c8:	ldr	r3, [fp, #-8]
   1d6cc:	add	r3, r3, #5
   1d6d0:	b	1d6d8 <__assert_fail@plt+0xc2f4>
   1d6d4:	mov	r3, #0
   1d6d8:	mov	r0, r3
   1d6dc:	bl	1d644 <__assert_fail@plt+0xc260>
   1d6e0:	mov	r3, r0
   1d6e4:	cmp	r3, #0
   1d6e8:	beq	1d6f4 <__assert_fail@plt+0xc310>
   1d6ec:	mov	r3, #0
   1d6f0:	b	1d6fc <__assert_fail@plt+0xc318>
   1d6f4:	bl	111b0 <tzset@plt>
   1d6f8:	mov	r3, #1
   1d6fc:	mov	r0, r3
   1d700:	sub	sp, fp, #4
   1d704:	ldr	fp, [sp]
   1d708:	add	sp, sp, #4
   1d70c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d710:	str	fp, [sp, #-8]!
   1d714:	str	lr, [sp, #4]
   1d718:	add	fp, sp, #4
   1d71c:	sub	sp, sp, #24
   1d720:	str	r0, [fp, #-24]	; 0xffffffe8
   1d724:	bl	1d614 <__assert_fail@plt+0xc230>
   1d728:	str	r0, [fp, #-8]
   1d72c:	ldr	r3, [fp, #-8]
   1d730:	cmp	r3, #0
   1d734:	beq	1d780 <__assert_fail@plt+0xc39c>
   1d738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d73c:	ldrb	r3, [r3, #4]
   1d740:	cmp	r3, #0
   1d744:	beq	1d770 <__assert_fail@plt+0xc38c>
   1d748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d74c:	add	r3, r3, #5
   1d750:	ldr	r1, [fp, #-8]
   1d754:	mov	r0, r3
   1d758:	bl	110b4 <strcmp@plt>
   1d75c:	mov	r3, r0
   1d760:	cmp	r3, #0
   1d764:	bne	1d770 <__assert_fail@plt+0xc38c>
   1d768:	mov	r3, #1
   1d76c:	b	1d774 <__assert_fail@plt+0xc390>
   1d770:	mov	r3, #0
   1d774:	and	r3, r3, #1
   1d778:	uxtb	r3, r3
   1d77c:	b	1d798 <__assert_fail@plt+0xc3b4>
   1d780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d784:	ldrb	r3, [r3, #4]
   1d788:	cmp	r3, #0
   1d78c:	moveq	r3, #1
   1d790:	movne	r3, #0
   1d794:	uxtb	r3, r3
   1d798:	cmp	r3, #0
   1d79c:	beq	1d7a8 <__assert_fail@plt+0xc3c4>
   1d7a0:	mov	r3, #1
   1d7a4:	b	1d818 <__assert_fail@plt+0xc434>
   1d7a8:	ldr	r0, [fp, #-8]
   1d7ac:	bl	1d2d0 <__assert_fail@plt+0xbeec>
   1d7b0:	str	r0, [fp, #-12]
   1d7b4:	ldr	r3, [fp, #-12]
   1d7b8:	cmp	r3, #0
   1d7bc:	bne	1d7c8 <__assert_fail@plt+0xc3e4>
   1d7c0:	ldr	r3, [fp, #-12]
   1d7c4:	b	1d818 <__assert_fail@plt+0xc434>
   1d7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7cc:	bl	1d6a4 <__assert_fail@plt+0xc2c0>
   1d7d0:	mov	r3, r0
   1d7d4:	eor	r3, r3, #1
   1d7d8:	uxtb	r3, r3
   1d7dc:	cmp	r3, #0
   1d7e0:	beq	1d814 <__assert_fail@plt+0xc430>
   1d7e4:	bl	112d0 <__errno_location@plt>
   1d7e8:	mov	r3, r0
   1d7ec:	ldr	r3, [r3]
   1d7f0:	str	r3, [fp, #-16]
   1d7f4:	ldr	r0, [fp, #-12]
   1d7f8:	bl	1d5b0 <__assert_fail@plt+0xc1cc>
   1d7fc:	bl	112d0 <__errno_location@plt>
   1d800:	mov	r2, r0
   1d804:	ldr	r3, [fp, #-16]
   1d808:	str	r3, [r2]
   1d80c:	mov	r3, #0
   1d810:	b	1d818 <__assert_fail@plt+0xc434>
   1d814:	ldr	r3, [fp, #-12]
   1d818:	mov	r0, r3
   1d81c:	sub	sp, fp, #4
   1d820:	ldr	fp, [sp]
   1d824:	add	sp, sp, #4
   1d828:	pop	{pc}		; (ldr pc, [sp], #4)
   1d82c:	str	fp, [sp, #-8]!
   1d830:	str	lr, [sp, #4]
   1d834:	add	fp, sp, #4
   1d838:	sub	sp, sp, #16
   1d83c:	str	r0, [fp, #-16]
   1d840:	mov	r2, #1
   1d844:	ldr	r3, [fp, #-16]
   1d848:	cmp	r3, r2
   1d84c:	bne	1d858 <__assert_fail@plt+0xc474>
   1d850:	mov	r3, #1
   1d854:	b	1d8b8 <__assert_fail@plt+0xc4d4>
   1d858:	bl	112d0 <__errno_location@plt>
   1d85c:	mov	r3, r0
   1d860:	ldr	r3, [r3]
   1d864:	str	r3, [fp, #-8]
   1d868:	ldr	r0, [fp, #-16]
   1d86c:	bl	1d6a4 <__assert_fail@plt+0xc2c0>
   1d870:	mov	r3, r0
   1d874:	strb	r3, [fp, #-9]
   1d878:	ldrb	r3, [fp, #-9]
   1d87c:	eor	r3, r3, #1
   1d880:	uxtb	r3, r3
   1d884:	cmp	r3, #0
   1d888:	beq	1d89c <__assert_fail@plt+0xc4b8>
   1d88c:	bl	112d0 <__errno_location@plt>
   1d890:	mov	r3, r0
   1d894:	ldr	r3, [r3]
   1d898:	str	r3, [fp, #-8]
   1d89c:	ldr	r0, [fp, #-16]
   1d8a0:	bl	1d5b0 <__assert_fail@plt+0xc1cc>
   1d8a4:	bl	112d0 <__errno_location@plt>
   1d8a8:	mov	r2, r0
   1d8ac:	ldr	r3, [fp, #-8]
   1d8b0:	str	r3, [r2]
   1d8b4:	ldrb	r3, [fp, #-9]
   1d8b8:	mov	r0, r3
   1d8bc:	sub	sp, fp, #4
   1d8c0:	ldr	fp, [sp]
   1d8c4:	add	sp, sp, #4
   1d8c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d8cc:	str	fp, [sp, #-8]!
   1d8d0:	str	lr, [sp, #4]
   1d8d4:	add	fp, sp, #4
   1d8d8:	sub	sp, sp, #24
   1d8dc:	str	r0, [fp, #-16]
   1d8e0:	str	r1, [fp, #-20]	; 0xffffffec
   1d8e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d8e8:	ldr	r3, [fp, #-16]
   1d8ec:	cmp	r3, #0
   1d8f0:	bne	1d908 <__assert_fail@plt+0xc524>
   1d8f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8fc:	bl	110a8 <gmtime_r@plt>
   1d900:	mov	r3, r0
   1d904:	b	1d998 <__assert_fail@plt+0xc5b4>
   1d908:	ldr	r0, [fp, #-16]
   1d90c:	bl	1d710 <__assert_fail@plt+0xc32c>
   1d910:	str	r0, [fp, #-8]
   1d914:	ldr	r3, [fp, #-8]
   1d918:	cmp	r3, #0
   1d91c:	beq	1d994 <__assert_fail@plt+0xc5b0>
   1d920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d924:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d928:	bl	11180 <localtime_r@plt>
   1d92c:	mov	r3, r0
   1d930:	cmp	r3, #0
   1d934:	beq	1d958 <__assert_fail@plt+0xc574>
   1d938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d93c:	ldr	r0, [fp, #-16]
   1d940:	bl	1d3c0 <__assert_fail@plt+0xbfdc>
   1d944:	mov	r3, r0
   1d948:	cmp	r3, #0
   1d94c:	beq	1d958 <__assert_fail@plt+0xc574>
   1d950:	mov	r3, #1
   1d954:	b	1d95c <__assert_fail@plt+0xc578>
   1d958:	mov	r3, #0
   1d95c:	strb	r3, [fp, #-9]
   1d960:	ldrb	r3, [fp, #-9]
   1d964:	and	r3, r3, #1
   1d968:	strb	r3, [fp, #-9]
   1d96c:	ldr	r0, [fp, #-8]
   1d970:	bl	1d82c <__assert_fail@plt+0xc448>
   1d974:	mov	r3, r0
   1d978:	cmp	r3, #0
   1d97c:	beq	1d994 <__assert_fail@plt+0xc5b0>
   1d980:	ldrb	r3, [fp, #-9]
   1d984:	cmp	r3, #0
   1d988:	beq	1d994 <__assert_fail@plt+0xc5b0>
   1d98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d990:	b	1d998 <__assert_fail@plt+0xc5b4>
   1d994:	mov	r3, #0
   1d998:	mov	r0, r3
   1d99c:	sub	sp, fp, #4
   1d9a0:	ldr	fp, [sp]
   1d9a4:	add	sp, sp, #4
   1d9a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9ac:	str	fp, [sp, #-8]!
   1d9b0:	str	lr, [sp, #4]
   1d9b4:	add	fp, sp, #4
   1d9b8:	sub	sp, sp, #64	; 0x40
   1d9bc:	str	r0, [fp, #-64]	; 0xffffffc0
   1d9c0:	str	r1, [fp, #-68]	; 0xffffffbc
   1d9c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d9c8:	cmp	r3, #0
   1d9cc:	bne	1d9e0 <__assert_fail@plt+0xc5fc>
   1d9d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1d9d4:	bl	11378 <timegm@plt>
   1d9d8:	mov	r3, r0
   1d9dc:	b	1db20 <__assert_fail@plt+0xc73c>
   1d9e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d9e4:	bl	1d710 <__assert_fail@plt+0xc32c>
   1d9e8:	str	r0, [fp, #-8]
   1d9ec:	ldr	r3, [fp, #-8]
   1d9f0:	cmp	r3, #0
   1d9f4:	beq	1db1c <__assert_fail@plt+0xc738>
   1d9f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d9fc:	ldr	r3, [r3]
   1da00:	str	r3, [fp, #-60]	; 0xffffffc4
   1da04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da08:	ldr	r3, [r3, #4]
   1da0c:	str	r3, [fp, #-56]	; 0xffffffc8
   1da10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da14:	ldr	r3, [r3, #8]
   1da18:	str	r3, [fp, #-52]	; 0xffffffcc
   1da1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da20:	ldr	r3, [r3, #12]
   1da24:	str	r3, [fp, #-48]	; 0xffffffd0
   1da28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da2c:	ldr	r3, [r3, #16]
   1da30:	str	r3, [fp, #-44]	; 0xffffffd4
   1da34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da38:	ldr	r3, [r3, #20]
   1da3c:	str	r3, [fp, #-40]	; 0xffffffd8
   1da40:	mvn	r3, #0
   1da44:	str	r3, [fp, #-32]	; 0xffffffe0
   1da48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1da4c:	ldr	r3, [r3, #32]
   1da50:	str	r3, [fp, #-28]	; 0xffffffe4
   1da54:	sub	r3, fp, #60	; 0x3c
   1da58:	mov	r0, r3
   1da5c:	bl	110e4 <mktime@plt>
   1da60:	str	r0, [fp, #-12]
   1da64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da68:	mvn	r3, r3
   1da6c:	lsr	r3, r3, #31
   1da70:	strb	r3, [fp, #-13]
   1da74:	ldrb	r3, [fp, #-13]
   1da78:	cmp	r3, #0
   1da7c:	beq	1daa4 <__assert_fail@plt+0xc6c0>
   1da80:	sub	r3, fp, #60	; 0x3c
   1da84:	mov	r1, r3
   1da88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1da8c:	bl	1d3c0 <__assert_fail@plt+0xbfdc>
   1da90:	mov	r3, r0
   1da94:	cmp	r3, #0
   1da98:	beq	1daa4 <__assert_fail@plt+0xc6c0>
   1da9c:	mov	r3, #1
   1daa0:	b	1daa8 <__assert_fail@plt+0xc6c4>
   1daa4:	mov	r3, #0
   1daa8:	strb	r3, [fp, #-13]
   1daac:	ldrb	r3, [fp, #-13]
   1dab0:	and	r3, r3, #1
   1dab4:	strb	r3, [fp, #-13]
   1dab8:	ldr	r0, [fp, #-8]
   1dabc:	bl	1d82c <__assert_fail@plt+0xc448>
   1dac0:	mov	r3, r0
   1dac4:	cmp	r3, #0
   1dac8:	beq	1db1c <__assert_fail@plt+0xc738>
   1dacc:	ldrb	r3, [fp, #-13]
   1dad0:	cmp	r3, #0
   1dad4:	beq	1db1c <__assert_fail@plt+0xc738>
   1dad8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1dadc:	mov	r2, r3
   1dae0:	sub	r3, fp, #60	; 0x3c
   1dae4:	ldrd	r0, [r3]
   1dae8:	strd	r0, [r2]
   1daec:	ldrd	r0, [r3, #8]
   1daf0:	strd	r0, [r2, #8]
   1daf4:	ldrd	r0, [r3, #16]
   1daf8:	strd	r0, [r2, #16]
   1dafc:	ldrd	r0, [r3, #24]
   1db00:	strd	r0, [r2, #24]
   1db04:	ldrd	r0, [r3, #32]
   1db08:	strd	r0, [r2, #32]
   1db0c:	ldr	r3, [r3, #40]	; 0x28
   1db10:	str	r3, [r2, #40]	; 0x28
   1db14:	ldr	r3, [fp, #-12]
   1db18:	b	1db20 <__assert_fail@plt+0xc73c>
   1db1c:	mvn	r3, #0
   1db20:	mov	r0, r3
   1db24:	sub	sp, fp, #4
   1db28:	ldr	fp, [sp]
   1db2c:	add	sp, sp, #4
   1db30:	pop	{pc}		; (ldr pc, [sp], #4)
   1db34:	str	fp, [sp, #-8]!
   1db38:	str	lr, [sp, #4]
   1db3c:	add	fp, sp, #4
   1db40:	sub	sp, sp, #8
   1db44:	str	r0, [fp, #-8]
   1db48:	mov	r2, #3
   1db4c:	mov	r1, #0
   1db50:	ldr	r0, [fp, #-8]
   1db54:	bl	20bcc <__assert_fail@plt+0xf7e8>
   1db58:	mov	r3, r0
   1db5c:	mov	r0, r3
   1db60:	sub	sp, fp, #4
   1db64:	ldr	fp, [sp]
   1db68:	add	sp, sp, #4
   1db6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1db70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1db74:	strd	r6, [sp, #8]
   1db78:	str	fp, [sp, #16]
   1db7c:	str	lr, [sp, #20]
   1db80:	add	fp, sp, #20
   1db84:	sub	sp, sp, #48	; 0x30
   1db88:	str	r0, [fp, #-24]	; 0xffffffe8
   1db8c:	str	r1, [fp, #-28]	; 0xffffffe4
   1db90:	str	r2, [fp, #-32]	; 0xffffffe0
   1db94:	str	r3, [fp, #-36]	; 0xffffffdc
   1db98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db9c:	cmp	r3, #0
   1dba0:	beq	1dbc8 <__assert_fail@plt+0xc7e4>
   1dba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dba8:	str	r3, [sp]
   1dbac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dbb4:	movw	r1, #13372	; 0x343c
   1dbb8:	movt	r1, #2
   1dbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbc0:	bl	112b8 <fprintf@plt>
   1dbc4:	b	1dbe0 <__assert_fail@plt+0xc7fc>
   1dbc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dbcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dbd0:	movw	r1, #13384	; 0x3448
   1dbd4:	movt	r1, #2
   1dbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbdc:	bl	112b8 <fprintf@plt>
   1dbe0:	movw	r0, #13392	; 0x3450
   1dbe4:	movt	r0, #2
   1dbe8:	bl	11288 <gettext@plt>
   1dbec:	mov	r2, r0
   1dbf0:	movw	r3, #2022	; 0x7e6
   1dbf4:	movw	r1, #14176	; 0x3760
   1dbf8:	movt	r1, #2
   1dbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc00:	bl	112b8 <fprintf@plt>
   1dc04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc08:	mov	r0, #10
   1dc0c:	bl	1115c <fputc_unlocked@plt>
   1dc10:	movw	r0, #13396	; 0x3454
   1dc14:	movt	r0, #2
   1dc18:	bl	11288 <gettext@plt>
   1dc1c:	mov	r3, r0
   1dc20:	movw	r2, #13568	; 0x3500
   1dc24:	movt	r2, #2
   1dc28:	mov	r1, r3
   1dc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc30:	bl	112b8 <fprintf@plt>
   1dc34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc38:	mov	r0, #10
   1dc3c:	bl	1115c <fputc_unlocked@plt>
   1dc40:	ldr	r3, [fp, #8]
   1dc44:	cmp	r3, #9
   1dc48:	ldrls	pc, [pc, r3, lsl #2]
   1dc4c:	b	1e02c <__assert_fail@plt+0xcc48>
   1dc50:	ldrdeq	lr, [r1], -r8
   1dc54:	andeq	sp, r1, r8, ror ip
   1dc58:	andeq	sp, r1, r0, lsr #25
   1dc5c:	ldrdeq	sp, [r1], -r0
   1dc60:	andeq	sp, r1, r4, lsl sp
   1dc64:	andeq	sp, r1, r0, ror sp
   1dc68:	ldrdeq	sp, [r1], -ip
   1dc6c:	andeq	sp, r1, r8, asr lr
   1dc70:	andeq	sp, r1, r4, ror #29
   1dc74:	andeq	sp, r1, r0, lsl #31
   1dc78:	movw	r0, #13604	; 0x3524
   1dc7c:	movt	r0, #2
   1dc80:	bl	11288 <gettext@plt>
   1dc84:	mov	r1, r0
   1dc88:	ldr	r3, [fp, #4]
   1dc8c:	ldr	r3, [r3]
   1dc90:	mov	r2, r3
   1dc94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc98:	bl	112b8 <fprintf@plt>
   1dc9c:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dca0:	movw	r0, #13620	; 0x3534
   1dca4:	movt	r0, #2
   1dca8:	bl	11288 <gettext@plt>
   1dcac:	mov	r1, r0
   1dcb0:	ldr	r3, [fp, #4]
   1dcb4:	ldr	r2, [r3]
   1dcb8:	ldr	r3, [fp, #4]
   1dcbc:	add	r3, r3, #4
   1dcc0:	ldr	r3, [r3]
   1dcc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcc8:	bl	112b8 <fprintf@plt>
   1dccc:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dcd0:	movw	r0, #13644	; 0x354c
   1dcd4:	movt	r0, #2
   1dcd8:	bl	11288 <gettext@plt>
   1dcdc:	ldr	r3, [fp, #4]
   1dce0:	ldr	r2, [r3]
   1dce4:	ldr	r3, [fp, #4]
   1dce8:	add	r3, r3, #4
   1dcec:	ldr	r1, [r3]
   1dcf0:	ldr	r3, [fp, #4]
   1dcf4:	add	r3, r3, #8
   1dcf8:	ldr	r3, [r3]
   1dcfc:	str	r3, [sp]
   1dd00:	mov	r3, r1
   1dd04:	mov	r1, r0
   1dd08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd0c:	bl	112b8 <fprintf@plt>
   1dd10:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dd14:	movw	r0, #13672	; 0x3568
   1dd18:	movt	r0, #2
   1dd1c:	bl	11288 <gettext@plt>
   1dd20:	mov	ip, r0
   1dd24:	ldr	r3, [fp, #4]
   1dd28:	ldr	r1, [r3]
   1dd2c:	ldr	r3, [fp, #4]
   1dd30:	add	r3, r3, #4
   1dd34:	ldr	r0, [r3]
   1dd38:	ldr	r3, [fp, #4]
   1dd3c:	add	r3, r3, #8
   1dd40:	ldr	r3, [r3]
   1dd44:	ldr	r2, [fp, #4]
   1dd48:	add	r2, r2, #12
   1dd4c:	ldr	r2, [r2]
   1dd50:	str	r2, [sp, #4]
   1dd54:	str	r3, [sp]
   1dd58:	mov	r3, r0
   1dd5c:	mov	r2, r1
   1dd60:	mov	r1, ip
   1dd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd68:	bl	112b8 <fprintf@plt>
   1dd6c:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dd70:	movw	r0, #13704	; 0x3588
   1dd74:	movt	r0, #2
   1dd78:	bl	11288 <gettext@plt>
   1dd7c:	mov	lr, r0
   1dd80:	ldr	r3, [fp, #4]
   1dd84:	ldr	r0, [r3]
   1dd88:	ldr	r3, [fp, #4]
   1dd8c:	add	r3, r3, #4
   1dd90:	ldr	ip, [r3]
   1dd94:	ldr	r3, [fp, #4]
   1dd98:	add	r3, r3, #8
   1dd9c:	ldr	r3, [r3]
   1dda0:	ldr	r2, [fp, #4]
   1dda4:	add	r2, r2, #12
   1dda8:	ldr	r2, [r2]
   1ddac:	ldr	r1, [fp, #4]
   1ddb0:	add	r1, r1, #16
   1ddb4:	ldr	r1, [r1]
   1ddb8:	str	r1, [sp, #8]
   1ddbc:	str	r2, [sp, #4]
   1ddc0:	str	r3, [sp]
   1ddc4:	mov	r3, ip
   1ddc8:	mov	r2, r0
   1ddcc:	mov	r1, lr
   1ddd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddd4:	bl	112b8 <fprintf@plt>
   1ddd8:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dddc:	movw	r0, #13740	; 0x35ac
   1dde0:	movt	r0, #2
   1dde4:	bl	11288 <gettext@plt>
   1dde8:	mov	r4, r0
   1ddec:	ldr	r3, [fp, #4]
   1ddf0:	ldr	ip, [r3]
   1ddf4:	ldr	r3, [fp, #4]
   1ddf8:	add	r3, r3, #4
   1ddfc:	ldr	lr, [r3]
   1de00:	ldr	r3, [fp, #4]
   1de04:	add	r3, r3, #8
   1de08:	ldr	r3, [r3]
   1de0c:	ldr	r2, [fp, #4]
   1de10:	add	r2, r2, #12
   1de14:	ldr	r2, [r2]
   1de18:	ldr	r1, [fp, #4]
   1de1c:	add	r1, r1, #16
   1de20:	ldr	r1, [r1]
   1de24:	ldr	r0, [fp, #4]
   1de28:	add	r0, r0, #20
   1de2c:	ldr	r0, [r0]
   1de30:	str	r0, [sp, #12]
   1de34:	str	r1, [sp, #8]
   1de38:	str	r2, [sp, #4]
   1de3c:	str	r3, [sp]
   1de40:	mov	r3, lr
   1de44:	mov	r2, ip
   1de48:	mov	r1, r4
   1de4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de50:	bl	112b8 <fprintf@plt>
   1de54:	b	1e0dc <__assert_fail@plt+0xccf8>
   1de58:	movw	r0, #13780	; 0x35d4
   1de5c:	movt	r0, #2
   1de60:	bl	11288 <gettext@plt>
   1de64:	mov	r5, r0
   1de68:	ldr	r3, [fp, #4]
   1de6c:	ldr	lr, [r3]
   1de70:	ldr	r3, [fp, #4]
   1de74:	add	r3, r3, #4
   1de78:	ldr	r4, [r3]
   1de7c:	ldr	r3, [fp, #4]
   1de80:	add	r3, r3, #8
   1de84:	ldr	r3, [r3]
   1de88:	ldr	r2, [fp, #4]
   1de8c:	add	r2, r2, #12
   1de90:	ldr	r2, [r2]
   1de94:	ldr	r1, [fp, #4]
   1de98:	add	r1, r1, #16
   1de9c:	ldr	r1, [r1]
   1dea0:	ldr	r0, [fp, #4]
   1dea4:	add	r0, r0, #20
   1dea8:	ldr	r0, [r0]
   1deac:	ldr	ip, [fp, #4]
   1deb0:	add	ip, ip, #24
   1deb4:	ldr	ip, [ip]
   1deb8:	str	ip, [sp, #16]
   1debc:	str	r0, [sp, #12]
   1dec0:	str	r1, [sp, #8]
   1dec4:	str	r2, [sp, #4]
   1dec8:	str	r3, [sp]
   1decc:	mov	r3, r4
   1ded0:	mov	r2, lr
   1ded4:	mov	r1, r5
   1ded8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dedc:	bl	112b8 <fprintf@plt>
   1dee0:	b	1e0dc <__assert_fail@plt+0xccf8>
   1dee4:	movw	r0, #13824	; 0x3600
   1dee8:	movt	r0, #2
   1deec:	bl	11288 <gettext@plt>
   1def0:	mov	r6, r0
   1def4:	ldr	r3, [fp, #4]
   1def8:	ldr	r4, [r3]
   1defc:	ldr	r3, [fp, #4]
   1df00:	add	r3, r3, #4
   1df04:	ldr	r5, [r3]
   1df08:	ldr	r3, [fp, #4]
   1df0c:	add	r3, r3, #8
   1df10:	ldr	r3, [r3]
   1df14:	ldr	r2, [fp, #4]
   1df18:	add	r2, r2, #12
   1df1c:	ldr	r2, [r2]
   1df20:	ldr	r1, [fp, #4]
   1df24:	add	r1, r1, #16
   1df28:	ldr	r1, [r1]
   1df2c:	ldr	r0, [fp, #4]
   1df30:	add	r0, r0, #20
   1df34:	ldr	r0, [r0]
   1df38:	ldr	ip, [fp, #4]
   1df3c:	add	ip, ip, #24
   1df40:	ldr	ip, [ip]
   1df44:	ldr	lr, [fp, #4]
   1df48:	add	lr, lr, #28
   1df4c:	ldr	lr, [lr]
   1df50:	str	lr, [sp, #20]
   1df54:	str	ip, [sp, #16]
   1df58:	str	r0, [sp, #12]
   1df5c:	str	r1, [sp, #8]
   1df60:	str	r2, [sp, #4]
   1df64:	str	r3, [sp]
   1df68:	mov	r3, r5
   1df6c:	mov	r2, r4
   1df70:	mov	r1, r6
   1df74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df78:	bl	112b8 <fprintf@plt>
   1df7c:	b	1e0dc <__assert_fail@plt+0xccf8>
   1df80:	movw	r0, #13872	; 0x3630
   1df84:	movt	r0, #2
   1df88:	bl	11288 <gettext@plt>
   1df8c:	mov	r7, r0
   1df90:	ldr	r3, [fp, #4]
   1df94:	ldr	r5, [r3]
   1df98:	ldr	r3, [fp, #4]
   1df9c:	add	r3, r3, #4
   1dfa0:	ldr	r6, [r3]
   1dfa4:	ldr	r3, [fp, #4]
   1dfa8:	add	r3, r3, #8
   1dfac:	ldr	r3, [r3]
   1dfb0:	ldr	r2, [fp, #4]
   1dfb4:	add	r2, r2, #12
   1dfb8:	ldr	r2, [r2]
   1dfbc:	ldr	r1, [fp, #4]
   1dfc0:	add	r1, r1, #16
   1dfc4:	ldr	r1, [r1]
   1dfc8:	ldr	r0, [fp, #4]
   1dfcc:	add	r0, r0, #20
   1dfd0:	ldr	r0, [r0]
   1dfd4:	ldr	ip, [fp, #4]
   1dfd8:	add	ip, ip, #24
   1dfdc:	ldr	ip, [ip]
   1dfe0:	ldr	lr, [fp, #4]
   1dfe4:	add	lr, lr, #28
   1dfe8:	ldr	lr, [lr]
   1dfec:	ldr	r4, [fp, #4]
   1dff0:	add	r4, r4, #32
   1dff4:	ldr	r4, [r4]
   1dff8:	str	r4, [sp, #24]
   1dffc:	str	lr, [sp, #20]
   1e000:	str	ip, [sp, #16]
   1e004:	str	r0, [sp, #12]
   1e008:	str	r1, [sp, #8]
   1e00c:	str	r2, [sp, #4]
   1e010:	str	r3, [sp]
   1e014:	mov	r3, r6
   1e018:	mov	r2, r5
   1e01c:	mov	r1, r7
   1e020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e024:	bl	112b8 <fprintf@plt>
   1e028:	b	1e0dc <__assert_fail@plt+0xccf8>
   1e02c:	movw	r0, #13924	; 0x3664
   1e030:	movt	r0, #2
   1e034:	bl	11288 <gettext@plt>
   1e038:	mov	r7, r0
   1e03c:	ldr	r3, [fp, #4]
   1e040:	ldr	r5, [r3]
   1e044:	ldr	r3, [fp, #4]
   1e048:	add	r3, r3, #4
   1e04c:	ldr	r6, [r3]
   1e050:	ldr	r3, [fp, #4]
   1e054:	add	r3, r3, #8
   1e058:	ldr	r3, [r3]
   1e05c:	ldr	r2, [fp, #4]
   1e060:	add	r2, r2, #12
   1e064:	ldr	r2, [r2]
   1e068:	ldr	r1, [fp, #4]
   1e06c:	add	r1, r1, #16
   1e070:	ldr	r1, [r1]
   1e074:	ldr	r0, [fp, #4]
   1e078:	add	r0, r0, #20
   1e07c:	ldr	r0, [r0]
   1e080:	ldr	ip, [fp, #4]
   1e084:	add	ip, ip, #24
   1e088:	ldr	ip, [ip]
   1e08c:	ldr	lr, [fp, #4]
   1e090:	add	lr, lr, #28
   1e094:	ldr	lr, [lr]
   1e098:	ldr	r4, [fp, #4]
   1e09c:	add	r4, r4, #32
   1e0a0:	ldr	r4, [r4]
   1e0a4:	str	r4, [sp, #24]
   1e0a8:	str	lr, [sp, #20]
   1e0ac:	str	ip, [sp, #16]
   1e0b0:	str	r0, [sp, #12]
   1e0b4:	str	r1, [sp, #8]
   1e0b8:	str	r2, [sp, #4]
   1e0bc:	str	r3, [sp]
   1e0c0:	mov	r3, r6
   1e0c4:	mov	r2, r5
   1e0c8:	mov	r1, r7
   1e0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0d0:	bl	112b8 <fprintf@plt>
   1e0d4:	b	1e0dc <__assert_fail@plt+0xccf8>
   1e0d8:	nop	{0}
   1e0dc:	nop	{0}
   1e0e0:	sub	sp, fp, #20
   1e0e4:	ldrd	r4, [sp]
   1e0e8:	ldrd	r6, [sp, #8]
   1e0ec:	ldr	fp, [sp, #16]
   1e0f0:	add	sp, sp, #20
   1e0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0f8:	str	fp, [sp, #-8]!
   1e0fc:	str	lr, [sp, #4]
   1e100:	add	fp, sp, #4
   1e104:	sub	sp, sp, #32
   1e108:	str	r0, [fp, #-16]
   1e10c:	str	r1, [fp, #-20]	; 0xffffffec
   1e110:	str	r2, [fp, #-24]	; 0xffffffe8
   1e114:	str	r3, [fp, #-28]	; 0xffffffe4
   1e118:	mov	r3, #0
   1e11c:	str	r3, [fp, #-8]
   1e120:	b	1e130 <__assert_fail@plt+0xcd4c>
   1e124:	ldr	r3, [fp, #-8]
   1e128:	add	r3, r3, #1
   1e12c:	str	r3, [fp, #-8]
   1e130:	ldr	r3, [fp, #-8]
   1e134:	lsl	r3, r3, #2
   1e138:	ldr	r2, [fp, #4]
   1e13c:	add	r3, r2, r3
   1e140:	ldr	r3, [r3]
   1e144:	cmp	r3, #0
   1e148:	bne	1e124 <__assert_fail@plt+0xcd40>
   1e14c:	ldr	r3, [fp, #-8]
   1e150:	str	r3, [sp, #4]
   1e154:	ldr	r3, [fp, #4]
   1e158:	str	r3, [sp]
   1e15c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e164:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e168:	ldr	r0, [fp, #-16]
   1e16c:	bl	1db70 <__assert_fail@plt+0xc78c>
   1e170:	nop	{0}
   1e174:	sub	sp, fp, #4
   1e178:	ldr	fp, [sp]
   1e17c:	add	sp, sp, #4
   1e180:	pop	{pc}		; (ldr pc, [sp], #4)
   1e184:	str	fp, [sp, #-8]!
   1e188:	str	lr, [sp, #4]
   1e18c:	add	fp, sp, #4
   1e190:	sub	sp, sp, #72	; 0x48
   1e194:	str	r0, [fp, #-56]	; 0xffffffc8
   1e198:	str	r1, [fp, #-60]	; 0xffffffc4
   1e19c:	str	r2, [fp, #-64]	; 0xffffffc0
   1e1a0:	str	r3, [fp, #-68]	; 0xffffffbc
   1e1a4:	mov	r3, #0
   1e1a8:	str	r3, [fp, #-8]
   1e1ac:	b	1e1bc <__assert_fail@plt+0xcdd8>
   1e1b0:	ldr	r3, [fp, #-8]
   1e1b4:	add	r3, r3, #1
   1e1b8:	str	r3, [fp, #-8]
   1e1bc:	ldr	r3, [fp, #-8]
   1e1c0:	cmp	r3, #9
   1e1c4:	bhi	1e208 <__assert_fail@plt+0xce24>
   1e1c8:	ldr	r3, [fp, #4]
   1e1cc:	add	r2, r3, #4
   1e1d0:	str	r2, [fp, #4]
   1e1d4:	ldr	r2, [r3]
   1e1d8:	ldr	r3, [fp, #-8]
   1e1dc:	lsl	r3, r3, #2
   1e1e0:	sub	r1, fp, #4
   1e1e4:	add	r3, r1, r3
   1e1e8:	str	r2, [r3, #-44]	; 0xffffffd4
   1e1ec:	ldr	r3, [fp, #-8]
   1e1f0:	lsl	r3, r3, #2
   1e1f4:	sub	r2, fp, #4
   1e1f8:	add	r3, r2, r3
   1e1fc:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1e200:	cmp	r3, #0
   1e204:	bne	1e1b0 <__assert_fail@plt+0xcdcc>
   1e208:	ldr	r3, [fp, #-8]
   1e20c:	str	r3, [sp, #4]
   1e210:	sub	r3, fp, #48	; 0x30
   1e214:	str	r3, [sp]
   1e218:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e21c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e220:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e224:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e228:	bl	1db70 <__assert_fail@plt+0xc78c>
   1e22c:	nop	{0}
   1e230:	sub	sp, fp, #4
   1e234:	ldr	fp, [sp]
   1e238:	add	sp, sp, #4
   1e23c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e240:	push	{r3}		; (str r3, [sp, #-4]!)
   1e244:	str	fp, [sp, #-8]!
   1e248:	str	lr, [sp, #4]
   1e24c:	add	fp, sp, #4
   1e250:	sub	sp, sp, #36	; 0x24
   1e254:	str	r0, [fp, #-20]	; 0xffffffec
   1e258:	str	r1, [fp, #-24]	; 0xffffffe8
   1e25c:	str	r2, [fp, #-28]	; 0xffffffe4
   1e260:	add	r3, fp, #8
   1e264:	str	r3, [fp, #-12]
   1e268:	ldr	r3, [fp, #-12]
   1e26c:	str	r3, [sp]
   1e270:	ldr	r3, [fp, #4]
   1e274:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e27c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e280:	bl	1e184 <__assert_fail@plt+0xcda0>
   1e284:	nop	{0}
   1e288:	sub	sp, fp, #4
   1e28c:	ldr	fp, [sp]
   1e290:	ldr	lr, [sp, #4]
   1e294:	add	sp, sp, #8
   1e298:	add	sp, sp, #4
   1e29c:	bx	lr
   1e2a0:	str	fp, [sp, #-8]!
   1e2a4:	str	lr, [sp, #4]
   1e2a8:	add	fp, sp, #4
   1e2ac:	movw	r3, #16876	; 0x41ec
   1e2b0:	movt	r3, #3
   1e2b4:	ldr	r3, [r3]
   1e2b8:	mov	r1, r3
   1e2bc:	mov	r0, #10
   1e2c0:	bl	1115c <fputc_unlocked@plt>
   1e2c4:	movw	r0, #13984	; 0x36a0
   1e2c8:	movt	r0, #2
   1e2cc:	bl	11288 <gettext@plt>
   1e2d0:	mov	r3, r0
   1e2d4:	movw	r1, #14004	; 0x36b4
   1e2d8:	movt	r1, #2
   1e2dc:	mov	r0, r3
   1e2e0:	bl	110d8 <printf@plt>
   1e2e4:	movw	r0, #14028	; 0x36cc
   1e2e8:	movt	r0, #2
   1e2ec:	bl	11288 <gettext@plt>
   1e2f0:	mov	r3, r0
   1e2f4:	movw	r2, #14048	; 0x36e0
   1e2f8:	movt	r2, #2
   1e2fc:	movw	r1, #14088	; 0x3708
   1e300:	movt	r1, #2
   1e304:	mov	r0, r3
   1e308:	bl	110d8 <printf@plt>
   1e30c:	movw	r0, #14104	; 0x3718
   1e310:	movt	r0, #2
   1e314:	bl	11288 <gettext@plt>
   1e318:	mov	r3, r0
   1e31c:	movw	r1, #14144	; 0x3740
   1e320:	movt	r1, #2
   1e324:	mov	r0, r3
   1e328:	bl	110d8 <printf@plt>
   1e32c:	nop	{0}
   1e330:	sub	sp, fp, #4
   1e334:	ldr	fp, [sp]
   1e338:	add	sp, sp, #4
   1e33c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e340:	str	fp, [sp, #-8]!
   1e344:	str	lr, [sp, #4]
   1e348:	add	fp, sp, #4
   1e34c:	sub	sp, sp, #16
   1e350:	str	r0, [fp, #-8]
   1e354:	str	r1, [fp, #-12]
   1e358:	str	r2, [fp, #-16]
   1e35c:	ldr	r2, [fp, #-16]
   1e360:	ldr	r1, [fp, #-12]
   1e364:	ldr	r0, [fp, #-8]
   1e368:	bl	1e524 <__assert_fail@plt+0xd140>
   1e36c:	mov	r3, r0
   1e370:	mov	r0, r3
   1e374:	sub	sp, fp, #4
   1e378:	ldr	fp, [sp]
   1e37c:	add	sp, sp, #4
   1e380:	pop	{pc}		; (ldr pc, [sp], #4)
   1e384:	str	fp, [sp, #-8]!
   1e388:	str	lr, [sp, #4]
   1e38c:	add	fp, sp, #4
   1e390:	sub	sp, sp, #8
   1e394:	str	r0, [fp, #-8]
   1e398:	ldr	r3, [fp, #-8]
   1e39c:	cmp	r3, #0
   1e3a0:	bne	1e3a8 <__assert_fail@plt+0xcfc4>
   1e3a4:	bl	1ec34 <__assert_fail@plt+0xd850>
   1e3a8:	ldr	r3, [fp, #-8]
   1e3ac:	mov	r0, r3
   1e3b0:	sub	sp, fp, #4
   1e3b4:	ldr	fp, [sp]
   1e3b8:	add	sp, sp, #4
   1e3bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3c0:	str	fp, [sp, #-8]!
   1e3c4:	str	lr, [sp, #4]
   1e3c8:	add	fp, sp, #4
   1e3cc:	sub	sp, sp, #8
   1e3d0:	str	r0, [fp, #-8]
   1e3d4:	ldr	r0, [fp, #-8]
   1e3d8:	bl	208f4 <__assert_fail@plt+0xf510>
   1e3dc:	mov	r3, r0
   1e3e0:	mov	r0, r3
   1e3e4:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1e3e8:	mov	r3, r0
   1e3ec:	mov	r0, r3
   1e3f0:	sub	sp, fp, #4
   1e3f4:	ldr	fp, [sp]
   1e3f8:	add	sp, sp, #4
   1e3fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e400:	str	fp, [sp, #-8]!
   1e404:	str	lr, [sp, #4]
   1e408:	add	fp, sp, #4
   1e40c:	sub	sp, sp, #8
   1e410:	str	r0, [fp, #-8]
   1e414:	ldr	r0, [fp, #-8]
   1e418:	bl	20fe4 <__assert_fail@plt+0xfc00>
   1e41c:	mov	r3, r0
   1e420:	mov	r0, r3
   1e424:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1e428:	mov	r3, r0
   1e42c:	mov	r0, r3
   1e430:	sub	sp, fp, #4
   1e434:	ldr	fp, [sp]
   1e438:	add	sp, sp, #4
   1e43c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e440:	str	fp, [sp, #-8]!
   1e444:	str	lr, [sp, #4]
   1e448:	add	fp, sp, #4
   1e44c:	sub	sp, sp, #8
   1e450:	str	r0, [fp, #-8]
   1e454:	ldr	r0, [fp, #-8]
   1e458:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   1e45c:	mov	r3, r0
   1e460:	mov	r0, r3
   1e464:	sub	sp, fp, #4
   1e468:	ldr	fp, [sp]
   1e46c:	add	sp, sp, #4
   1e470:	pop	{pc}		; (ldr pc, [sp], #4)
   1e474:	str	fp, [sp, #-8]!
   1e478:	str	lr, [sp, #4]
   1e47c:	add	fp, sp, #4
   1e480:	sub	sp, sp, #16
   1e484:	str	r0, [fp, #-16]
   1e488:	str	r1, [fp, #-20]	; 0xffffffec
   1e48c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e490:	ldr	r0, [fp, #-16]
   1e494:	bl	20984 <__assert_fail@plt+0xf5a0>
   1e498:	str	r0, [fp, #-8]
   1e49c:	ldr	r3, [fp, #-8]
   1e4a0:	cmp	r3, #0
   1e4a4:	bne	1e4c4 <__assert_fail@plt+0xd0e0>
   1e4a8:	ldr	r3, [fp, #-16]
   1e4ac:	cmp	r3, #0
   1e4b0:	beq	1e4c0 <__assert_fail@plt+0xd0dc>
   1e4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e4b8:	cmp	r3, #0
   1e4bc:	beq	1e4c4 <__assert_fail@plt+0xd0e0>
   1e4c0:	bl	1ec34 <__assert_fail@plt+0xd850>
   1e4c4:	ldr	r3, [fp, #-8]
   1e4c8:	mov	r0, r3
   1e4cc:	sub	sp, fp, #4
   1e4d0:	ldr	fp, [sp]
   1e4d4:	add	sp, sp, #4
   1e4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4dc:	str	fp, [sp, #-8]!
   1e4e0:	str	lr, [sp, #4]
   1e4e4:	add	fp, sp, #4
   1e4e8:	sub	sp, sp, #8
   1e4ec:	str	r0, [fp, #-8]
   1e4f0:	str	r1, [fp, #-12]
   1e4f4:	ldr	r1, [fp, #-12]
   1e4f8:	ldr	r0, [fp, #-8]
   1e4fc:	bl	2101c <__assert_fail@plt+0xfc38>
   1e500:	mov	r3, r0
   1e504:	mov	r0, r3
   1e508:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1e50c:	mov	r3, r0
   1e510:	mov	r0, r3
   1e514:	sub	sp, fp, #4
   1e518:	ldr	fp, [sp]
   1e51c:	add	sp, sp, #4
   1e520:	pop	{pc}		; (ldr pc, [sp], #4)
   1e524:	str	fp, [sp, #-8]!
   1e528:	str	lr, [sp, #4]
   1e52c:	add	fp, sp, #4
   1e530:	sub	sp, sp, #24
   1e534:	str	r0, [fp, #-16]
   1e538:	str	r1, [fp, #-20]	; 0xffffffec
   1e53c:	str	r2, [fp, #-24]	; 0xffffffe8
   1e540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e544:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e548:	ldr	r0, [fp, #-16]
   1e54c:	bl	2124c <__assert_fail@plt+0xfe68>
   1e550:	str	r0, [fp, #-8]
   1e554:	ldr	r3, [fp, #-8]
   1e558:	cmp	r3, #0
   1e55c:	bne	1e588 <__assert_fail@plt+0xd1a4>
   1e560:	ldr	r3, [fp, #-16]
   1e564:	cmp	r3, #0
   1e568:	beq	1e584 <__assert_fail@plt+0xd1a0>
   1e56c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e570:	cmp	r3, #0
   1e574:	beq	1e588 <__assert_fail@plt+0xd1a4>
   1e578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e57c:	cmp	r3, #0
   1e580:	beq	1e588 <__assert_fail@plt+0xd1a4>
   1e584:	bl	1ec34 <__assert_fail@plt+0xd850>
   1e588:	ldr	r3, [fp, #-8]
   1e58c:	mov	r0, r3
   1e590:	sub	sp, fp, #4
   1e594:	ldr	fp, [sp]
   1e598:	add	sp, sp, #4
   1e59c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5a0:	str	fp, [sp, #-8]!
   1e5a4:	str	lr, [sp, #4]
   1e5a8:	add	fp, sp, #4
   1e5ac:	sub	sp, sp, #16
   1e5b0:	str	r0, [fp, #-8]
   1e5b4:	str	r1, [fp, #-12]
   1e5b8:	str	r2, [fp, #-16]
   1e5bc:	ldr	r2, [fp, #-16]
   1e5c0:	ldr	r1, [fp, #-12]
   1e5c4:	ldr	r0, [fp, #-8]
   1e5c8:	bl	210bc <__assert_fail@plt+0xfcd8>
   1e5cc:	mov	r3, r0
   1e5d0:	mov	r0, r3
   1e5d4:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1e5d8:	mov	r3, r0
   1e5dc:	mov	r0, r3
   1e5e0:	sub	sp, fp, #4
   1e5e4:	ldr	fp, [sp]
   1e5e8:	add	sp, sp, #4
   1e5ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5f0:	str	fp, [sp, #-8]!
   1e5f4:	str	lr, [sp, #4]
   1e5f8:	add	fp, sp, #4
   1e5fc:	sub	sp, sp, #8
   1e600:	str	r0, [fp, #-8]
   1e604:	str	r1, [fp, #-12]
   1e608:	ldr	r2, [fp, #-12]
   1e60c:	ldr	r1, [fp, #-8]
   1e610:	mov	r0, #0
   1e614:	bl	1e524 <__assert_fail@plt+0xd140>
   1e618:	mov	r3, r0
   1e61c:	mov	r0, r3
   1e620:	sub	sp, fp, #4
   1e624:	ldr	fp, [sp]
   1e628:	add	sp, sp, #4
   1e62c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e630:	str	fp, [sp, #-8]!
   1e634:	str	lr, [sp, #4]
   1e638:	add	fp, sp, #4
   1e63c:	sub	sp, sp, #8
   1e640:	str	r0, [fp, #-8]
   1e644:	str	r1, [fp, #-12]
   1e648:	ldr	r2, [fp, #-12]
   1e64c:	ldr	r1, [fp, #-8]
   1e650:	mov	r0, #0
   1e654:	bl	1e5a0 <__assert_fail@plt+0xd1bc>
   1e658:	mov	r3, r0
   1e65c:	mov	r0, r3
   1e660:	sub	sp, fp, #4
   1e664:	ldr	fp, [sp]
   1e668:	add	sp, sp, #4
   1e66c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e670:	str	fp, [sp, #-8]!
   1e674:	str	lr, [sp, #4]
   1e678:	add	fp, sp, #4
   1e67c:	sub	sp, sp, #8
   1e680:	str	r0, [fp, #-8]
   1e684:	str	r1, [fp, #-12]
   1e688:	mov	r2, #1
   1e68c:	ldr	r1, [fp, #-12]
   1e690:	ldr	r0, [fp, #-8]
   1e694:	bl	1e6b0 <__assert_fail@plt+0xd2cc>
   1e698:	mov	r3, r0
   1e69c:	mov	r0, r3
   1e6a0:	sub	sp, fp, #4
   1e6a4:	ldr	fp, [sp]
   1e6a8:	add	sp, sp, #4
   1e6ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1e6b0:	str	fp, [sp, #-8]!
   1e6b4:	str	lr, [sp, #4]
   1e6b8:	add	fp, sp, #4
   1e6bc:	sub	sp, sp, #24
   1e6c0:	str	r0, [fp, #-16]
   1e6c4:	str	r1, [fp, #-20]	; 0xffffffec
   1e6c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6d0:	ldr	r3, [r3]
   1e6d4:	str	r3, [fp, #-8]
   1e6d8:	ldr	r3, [fp, #-16]
   1e6dc:	cmp	r3, #0
   1e6e0:	bne	1e728 <__assert_fail@plt+0xd344>
   1e6e4:	ldr	r3, [fp, #-8]
   1e6e8:	cmp	r3, #0
   1e6ec:	bne	1e764 <__assert_fail@plt+0xd380>
   1e6f0:	mov	r2, #64	; 0x40
   1e6f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6f8:	udiv	r3, r2, r3
   1e6fc:	str	r3, [fp, #-8]
   1e700:	ldr	r3, [fp, #-8]
   1e704:	cmp	r3, #0
   1e708:	moveq	r3, #1
   1e70c:	movne	r3, #0
   1e710:	uxtb	r3, r3
   1e714:	mov	r2, r3
   1e718:	ldr	r3, [fp, #-8]
   1e71c:	add	r3, r2, r3
   1e720:	str	r3, [fp, #-8]
   1e724:	b	1e764 <__assert_fail@plt+0xd380>
   1e728:	ldr	r2, [fp, #-8]
   1e72c:	ldr	r3, [fp, #-8]
   1e730:	lsr	r3, r3, #1
   1e734:	add	r3, r3, #1
   1e738:	mov	r1, #0
   1e73c:	adds	r3, r2, r3
   1e740:	bcc	1e748 <__assert_fail@plt+0xd364>
   1e744:	mov	r1, #1
   1e748:	str	r3, [fp, #-8]
   1e74c:	mov	r3, r1
   1e750:	and	r3, r3, #1
   1e754:	uxtb	r3, r3
   1e758:	cmp	r3, #0
   1e75c:	beq	1e764 <__assert_fail@plt+0xd380>
   1e760:	bl	1ec34 <__assert_fail@plt+0xd850>
   1e764:	ldr	r3, [fp, #-8]
   1e768:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e76c:	mov	r1, r3
   1e770:	ldr	r0, [fp, #-16]
   1e774:	bl	1e524 <__assert_fail@plt+0xd140>
   1e778:	str	r0, [fp, #-16]
   1e77c:	ldr	r2, [fp, #-8]
   1e780:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e784:	str	r2, [r3]
   1e788:	ldr	r3, [fp, #-16]
   1e78c:	mov	r0, r3
   1e790:	sub	sp, fp, #4
   1e794:	ldr	fp, [sp]
   1e798:	add	sp, sp, #4
   1e79c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e7a0:	str	fp, [sp, #-8]!
   1e7a4:	str	lr, [sp, #4]
   1e7a8:	add	fp, sp, #4
   1e7ac:	sub	sp, sp, #32
   1e7b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7b4:	str	r1, [fp, #-28]	; 0xffffffe4
   1e7b8:	str	r2, [fp, #-32]	; 0xffffffe0
   1e7bc:	str	r3, [fp, #-36]	; 0xffffffdc
   1e7c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e7c4:	ldr	r3, [r3]
   1e7c8:	str	r3, [fp, #-8]
   1e7cc:	ldr	r3, [fp, #-8]
   1e7d0:	asr	r3, r3, #1
   1e7d4:	mov	r1, #0
   1e7d8:	ldr	r2, [fp, #-8]
   1e7dc:	adds	r3, r2, r3
   1e7e0:	bvc	1e7e8 <__assert_fail@plt+0xd404>
   1e7e4:	mov	r1, #1
   1e7e8:	str	r3, [fp, #-16]
   1e7ec:	mov	r3, r1
   1e7f0:	and	r3, r3, #1
   1e7f4:	uxtb	r3, r3
   1e7f8:	cmp	r3, #0
   1e7fc:	beq	1e808 <__assert_fail@plt+0xd424>
   1e800:	mvn	r3, #-2147483648	; 0x80000000
   1e804:	str	r3, [fp, #-16]
   1e808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e80c:	cmp	r3, #0
   1e810:	blt	1e82c <__assert_fail@plt+0xd448>
   1e814:	ldr	r3, [fp, #-16]
   1e818:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e81c:	cmp	r2, r3
   1e820:	bge	1e82c <__assert_fail@plt+0xd448>
   1e824:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e828:	str	r3, [fp, #-16]
   1e82c:	ldr	r2, [fp, #-16]
   1e830:	mov	lr, #0
   1e834:	ldr	r3, [fp, #4]
   1e838:	smull	r2, r3, r2, r3
   1e83c:	mov	r0, #0
   1e840:	mov	r1, #0
   1e844:	mov	r0, r3
   1e848:	asr	r1, r3, #31
   1e84c:	asr	ip, r2, #31
   1e850:	cmp	ip, r0
   1e854:	beq	1e85c <__assert_fail@plt+0xd478>
   1e858:	mov	lr, #1
   1e85c:	mov	r3, r2
   1e860:	str	r3, [fp, #-20]	; 0xffffffec
   1e864:	mov	r3, lr
   1e868:	and	r3, r3, #1
   1e86c:	uxtb	r3, r3
   1e870:	cmp	r3, #0
   1e874:	beq	1e880 <__assert_fail@plt+0xd49c>
   1e878:	mvn	r3, #-2147483648	; 0x80000000
   1e87c:	b	1e898 <__assert_fail@plt+0xd4b4>
   1e880:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e884:	cmp	r3, #63	; 0x3f
   1e888:	bgt	1e894 <__assert_fail@plt+0xd4b0>
   1e88c:	mov	r3, #64	; 0x40
   1e890:	b	1e898 <__assert_fail@plt+0xd4b4>
   1e894:	mov	r3, #0
   1e898:	str	r3, [fp, #-12]
   1e89c:	ldr	r3, [fp, #-12]
   1e8a0:	cmp	r3, #0
   1e8a4:	beq	1e8dc <__assert_fail@plt+0xd4f8>
   1e8a8:	ldr	r2, [fp, #-12]
   1e8ac:	ldr	r3, [fp, #4]
   1e8b0:	sdiv	r3, r2, r3
   1e8b4:	str	r3, [fp, #-16]
   1e8b8:	ldr	r3, [fp, #-12]
   1e8bc:	ldr	r2, [fp, #4]
   1e8c0:	sdiv	r2, r3, r2
   1e8c4:	ldr	r1, [fp, #4]
   1e8c8:	mul	r2, r1, r2
   1e8cc:	sub	r3, r3, r2
   1e8d0:	ldr	r2, [fp, #-12]
   1e8d4:	sub	r3, r2, r3
   1e8d8:	str	r3, [fp, #-20]	; 0xffffffec
   1e8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8e0:	cmp	r3, #0
   1e8e4:	bne	1e8f4 <__assert_fail@plt+0xd510>
   1e8e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e8ec:	mov	r2, #0
   1e8f0:	str	r2, [r3]
   1e8f4:	ldr	r2, [fp, #-16]
   1e8f8:	ldr	r3, [fp, #-8]
   1e8fc:	sub	r3, r2, r3
   1e900:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e904:	cmp	r2, r3
   1e908:	ble	1e9a8 <__assert_fail@plt+0xd5c4>
   1e90c:	mov	r1, #0
   1e910:	ldr	r2, [fp, #-8]
   1e914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e918:	adds	r3, r2, r3
   1e91c:	bvc	1e924 <__assert_fail@plt+0xd540>
   1e920:	mov	r1, #1
   1e924:	str	r3, [fp, #-16]
   1e928:	mov	r3, r1
   1e92c:	and	r3, r3, #1
   1e930:	uxtb	r3, r3
   1e934:	cmp	r3, #0
   1e938:	bne	1e9a4 <__assert_fail@plt+0xd5c0>
   1e93c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e940:	cmp	r3, #0
   1e944:	blt	1e958 <__assert_fail@plt+0xd574>
   1e948:	ldr	r3, [fp, #-16]
   1e94c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e950:	cmp	r2, r3
   1e954:	blt	1e9a4 <__assert_fail@plt+0xd5c0>
   1e958:	ldr	r2, [fp, #-16]
   1e95c:	mov	lr, #0
   1e960:	ldr	r3, [fp, #4]
   1e964:	smull	r2, r3, r2, r3
   1e968:	mov	r0, #0
   1e96c:	mov	r1, #0
   1e970:	mov	r0, r3
   1e974:	asr	r1, r3, #31
   1e978:	asr	ip, r2, #31
   1e97c:	cmp	ip, r0
   1e980:	beq	1e988 <__assert_fail@plt+0xd5a4>
   1e984:	mov	lr, #1
   1e988:	mov	r3, r2
   1e98c:	str	r3, [fp, #-20]	; 0xffffffec
   1e990:	mov	r3, lr
   1e994:	and	r3, r3, #1
   1e998:	uxtb	r3, r3
   1e99c:	cmp	r3, #0
   1e9a0:	beq	1e9a8 <__assert_fail@plt+0xd5c4>
   1e9a4:	bl	1ec34 <__assert_fail@plt+0xd850>
   1e9a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e9ac:	mov	r1, r3
   1e9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9b4:	bl	1e474 <__assert_fail@plt+0xd090>
   1e9b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e9bc:	ldr	r2, [fp, #-16]
   1e9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9c4:	str	r2, [r3]
   1e9c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9cc:	mov	r0, r3
   1e9d0:	sub	sp, fp, #4
   1e9d4:	ldr	fp, [sp]
   1e9d8:	add	sp, sp, #4
   1e9dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e9e0:	str	fp, [sp, #-8]!
   1e9e4:	str	lr, [sp, #4]
   1e9e8:	add	fp, sp, #4
   1e9ec:	sub	sp, sp, #8
   1e9f0:	str	r0, [fp, #-8]
   1e9f4:	mov	r1, #1
   1e9f8:	ldr	r0, [fp, #-8]
   1e9fc:	bl	1ea50 <__assert_fail@plt+0xd66c>
   1ea00:	mov	r3, r0
   1ea04:	mov	r0, r3
   1ea08:	sub	sp, fp, #4
   1ea0c:	ldr	fp, [sp]
   1ea10:	add	sp, sp, #4
   1ea14:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea18:	str	fp, [sp, #-8]!
   1ea1c:	str	lr, [sp, #4]
   1ea20:	add	fp, sp, #4
   1ea24:	sub	sp, sp, #8
   1ea28:	str	r0, [fp, #-8]
   1ea2c:	mov	r1, #1
   1ea30:	ldr	r0, [fp, #-8]
   1ea34:	bl	1ea98 <__assert_fail@plt+0xd6b4>
   1ea38:	mov	r3, r0
   1ea3c:	mov	r0, r3
   1ea40:	sub	sp, fp, #4
   1ea44:	ldr	fp, [sp]
   1ea48:	add	sp, sp, #4
   1ea4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea50:	str	fp, [sp, #-8]!
   1ea54:	str	lr, [sp, #4]
   1ea58:	add	fp, sp, #4
   1ea5c:	sub	sp, sp, #8
   1ea60:	str	r0, [fp, #-8]
   1ea64:	str	r1, [fp, #-12]
   1ea68:	ldr	r1, [fp, #-12]
   1ea6c:	ldr	r0, [fp, #-8]
   1ea70:	bl	20824 <__assert_fail@plt+0xf440>
   1ea74:	mov	r3, r0
   1ea78:	mov	r0, r3
   1ea7c:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1ea80:	mov	r3, r0
   1ea84:	mov	r0, r3
   1ea88:	sub	sp, fp, #4
   1ea8c:	ldr	fp, [sp]
   1ea90:	add	sp, sp, #4
   1ea94:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea98:	str	fp, [sp, #-8]!
   1ea9c:	str	lr, [sp, #4]
   1eaa0:	add	fp, sp, #4
   1eaa4:	sub	sp, sp, #8
   1eaa8:	str	r0, [fp, #-8]
   1eaac:	str	r1, [fp, #-12]
   1eab0:	ldr	r1, [fp, #-12]
   1eab4:	ldr	r0, [fp, #-8]
   1eab8:	bl	21078 <__assert_fail@plt+0xfc94>
   1eabc:	mov	r3, r0
   1eac0:	mov	r0, r3
   1eac4:	bl	1e384 <__assert_fail@plt+0xcfa0>
   1eac8:	mov	r3, r0
   1eacc:	mov	r0, r3
   1ead0:	sub	sp, fp, #4
   1ead4:	ldr	fp, [sp]
   1ead8:	add	sp, sp, #4
   1eadc:	pop	{pc}		; (ldr pc, [sp], #4)
   1eae0:	str	fp, [sp, #-8]!
   1eae4:	str	lr, [sp, #4]
   1eae8:	add	fp, sp, #4
   1eaec:	sub	sp, sp, #8
   1eaf0:	str	r0, [fp, #-8]
   1eaf4:	str	r1, [fp, #-12]
   1eaf8:	ldr	r0, [fp, #-12]
   1eafc:	bl	1e3c0 <__assert_fail@plt+0xcfdc>
   1eb00:	mov	r3, r0
   1eb04:	ldr	r2, [fp, #-12]
   1eb08:	ldr	r1, [fp, #-8]
   1eb0c:	mov	r0, r3
   1eb10:	bl	1112c <memcpy@plt>
   1eb14:	mov	r3, r0
   1eb18:	mov	r0, r3
   1eb1c:	sub	sp, fp, #4
   1eb20:	ldr	fp, [sp]
   1eb24:	add	sp, sp, #4
   1eb28:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb2c:	str	fp, [sp, #-8]!
   1eb30:	str	lr, [sp, #4]
   1eb34:	add	fp, sp, #4
   1eb38:	sub	sp, sp, #8
   1eb3c:	str	r0, [fp, #-8]
   1eb40:	str	r1, [fp, #-12]
   1eb44:	ldr	r0, [fp, #-12]
   1eb48:	bl	1e400 <__assert_fail@plt+0xd01c>
   1eb4c:	mov	r3, r0
   1eb50:	mov	r0, r3
   1eb54:	ldr	r3, [fp, #-12]
   1eb58:	mov	r2, r3
   1eb5c:	ldr	r1, [fp, #-8]
   1eb60:	bl	1112c <memcpy@plt>
   1eb64:	mov	r3, r0
   1eb68:	mov	r0, r3
   1eb6c:	sub	sp, fp, #4
   1eb70:	ldr	fp, [sp]
   1eb74:	add	sp, sp, #4
   1eb78:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb7c:	str	fp, [sp, #-8]!
   1eb80:	str	lr, [sp, #4]
   1eb84:	add	fp, sp, #4
   1eb88:	sub	sp, sp, #16
   1eb8c:	str	r0, [fp, #-16]
   1eb90:	str	r1, [fp, #-20]	; 0xffffffec
   1eb94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb98:	add	r3, r3, #1
   1eb9c:	mov	r0, r3
   1eba0:	bl	1e400 <__assert_fail@plt+0xd01c>
   1eba4:	mov	r3, r0
   1eba8:	str	r3, [fp, #-8]
   1ebac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebb0:	ldr	r2, [fp, #-8]
   1ebb4:	add	r3, r2, r3
   1ebb8:	mov	r2, #0
   1ebbc:	strb	r2, [r3]
   1ebc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebc4:	mov	r2, r3
   1ebc8:	ldr	r1, [fp, #-16]
   1ebcc:	ldr	r0, [fp, #-8]
   1ebd0:	bl	1112c <memcpy@plt>
   1ebd4:	mov	r3, r0
   1ebd8:	mov	r0, r3
   1ebdc:	sub	sp, fp, #4
   1ebe0:	ldr	fp, [sp]
   1ebe4:	add	sp, sp, #4
   1ebe8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ebec:	str	fp, [sp, #-8]!
   1ebf0:	str	lr, [sp, #4]
   1ebf4:	add	fp, sp, #4
   1ebf8:	sub	sp, sp, #8
   1ebfc:	str	r0, [fp, #-8]
   1ec00:	ldr	r0, [fp, #-8]
   1ec04:	bl	11294 <strlen@plt>
   1ec08:	mov	r3, r0
   1ec0c:	add	r3, r3, #1
   1ec10:	mov	r1, r3
   1ec14:	ldr	r0, [fp, #-8]
   1ec18:	bl	1eae0 <__assert_fail@plt+0xd6fc>
   1ec1c:	mov	r3, r0
   1ec20:	mov	r0, r3
   1ec24:	sub	sp, fp, #4
   1ec28:	ldr	fp, [sp]
   1ec2c:	add	sp, sp, #4
   1ec30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ec34:	strd	r4, [sp, #-16]!
   1ec38:	str	fp, [sp, #8]
   1ec3c:	str	lr, [sp, #12]
   1ec40:	add	fp, sp, #12
   1ec44:	movw	r3, #16780	; 0x418c
   1ec48:	movt	r3, #3
   1ec4c:	ldr	r4, [r3]
   1ec50:	movw	r0, #14224	; 0x3790
   1ec54:	movt	r0, #2
   1ec58:	bl	11288 <gettext@plt>
   1ec5c:	mov	r3, r0
   1ec60:	movw	r2, #14244	; 0x37a4
   1ec64:	movt	r2, #2
   1ec68:	mov	r1, #0
   1ec6c:	mov	r0, r4
   1ec70:	bl	11210 <error@plt>
   1ec74:	bl	113c0 <abort@plt>
   1ec78:	strd	r4, [sp, #-16]!
   1ec7c:	str	fp, [sp, #8]
   1ec80:	str	lr, [sp, #12]
   1ec84:	add	fp, sp, #12
   1ec88:	sub	sp, sp, #40	; 0x28
   1ec8c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ec90:	str	r1, [fp, #-36]	; 0xffffffdc
   1ec94:	strd	r2, [fp, #-44]	; 0xffffffd4
   1ec98:	sub	r2, fp, #28
   1ec9c:	ldr	r3, [fp, #12]
   1eca0:	str	r3, [sp]
   1eca4:	mov	r3, r2
   1eca8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ecac:	mov	r1, #0
   1ecb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecb4:	bl	1f124 <__assert_fail@plt+0xdd40>
   1ecb8:	str	r0, [fp, #-16]
   1ecbc:	ldr	r3, [fp, #-16]
   1ecc0:	cmp	r3, #0
   1ecc4:	bne	1ed64 <__assert_fail@plt+0xd980>
   1ecc8:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   1eccc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ecd0:	cmp	r0, r2
   1ecd4:	sbcs	r3, r1, r3
   1ecd8:	blt	1ecf0 <__assert_fail@plt+0xd90c>
   1ecdc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1ece0:	ldrd	r0, [fp, #4]
   1ece4:	cmp	r0, r2
   1ece8:	sbcs	r3, r1, r3
   1ecec:	bge	1eda0 <__assert_fail@plt+0xd9bc>
   1ecf0:	mov	r3, #1
   1ecf4:	str	r3, [fp, #-16]
   1ecf8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1ecfc:	mvn	r0, #-1073741824	; 0xc0000000
   1ed00:	mov	r1, #0
   1ed04:	cmp	r0, r2
   1ed08:	sbcs	r3, r1, r3
   1ed0c:	bge	1ed24 <__assert_fail@plt+0xd940>
   1ed10:	bl	112d0 <__errno_location@plt>
   1ed14:	mov	r2, r0
   1ed18:	mov	r3, #75	; 0x4b
   1ed1c:	str	r3, [r2]
   1ed20:	b	1eda0 <__assert_fail@plt+0xd9bc>
   1ed24:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1ed28:	mov	r0, #-1073741824	; 0xc0000000
   1ed2c:	mvn	r1, #0
   1ed30:	cmp	r2, r0
   1ed34:	sbcs	r3, r3, r1
   1ed38:	bge	1ed50 <__assert_fail@plt+0xd96c>
   1ed3c:	bl	112d0 <__errno_location@plt>
   1ed40:	mov	r2, r0
   1ed44:	mov	r3, #75	; 0x4b
   1ed48:	str	r3, [r2]
   1ed4c:	b	1eda0 <__assert_fail@plt+0xd9bc>
   1ed50:	bl	112d0 <__errno_location@plt>
   1ed54:	mov	r2, r0
   1ed58:	mov	r3, #34	; 0x22
   1ed5c:	str	r3, [r2]
   1ed60:	b	1eda0 <__assert_fail@plt+0xd9bc>
   1ed64:	ldr	r3, [fp, #-16]
   1ed68:	cmp	r3, #1
   1ed6c:	bne	1ed84 <__assert_fail@plt+0xd9a0>
   1ed70:	bl	112d0 <__errno_location@plt>
   1ed74:	mov	r2, r0
   1ed78:	mov	r3, #75	; 0x4b
   1ed7c:	str	r3, [r2]
   1ed80:	b	1eda0 <__assert_fail@plt+0xd9bc>
   1ed84:	ldr	r3, [fp, #-16]
   1ed88:	cmp	r3, #3
   1ed8c:	bne	1eda0 <__assert_fail@plt+0xd9bc>
   1ed90:	bl	112d0 <__errno_location@plt>
   1ed94:	mov	r2, r0
   1ed98:	mov	r3, #0
   1ed9c:	str	r3, [r2]
   1eda0:	ldr	r3, [fp, #-16]
   1eda4:	cmp	r3, #0
   1eda8:	beq	1ee14 <__assert_fail@plt+0xda30>
   1edac:	ldr	r3, [fp, #20]
   1edb0:	cmp	r3, #0
   1edb4:	beq	1edc0 <__assert_fail@plt+0xd9dc>
   1edb8:	ldr	r4, [fp, #20]
   1edbc:	b	1edc4 <__assert_fail@plt+0xd9e0>
   1edc0:	mov	r4, #1
   1edc4:	bl	112d0 <__errno_location@plt>
   1edc8:	mov	r3, r0
   1edcc:	ldr	r3, [r3]
   1edd0:	cmp	r3, #22
   1edd4:	beq	1ede8 <__assert_fail@plt+0xda04>
   1edd8:	bl	112d0 <__errno_location@plt>
   1eddc:	mov	r3, r0
   1ede0:	ldr	r5, [r3]
   1ede4:	b	1edec <__assert_fail@plt+0xda08>
   1ede8:	mov	r5, #0
   1edec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1edf0:	bl	1ceec <__assert_fail@plt+0xbb08>
   1edf4:	mov	r3, r0
   1edf8:	str	r3, [sp]
   1edfc:	ldr	r3, [fp, #16]
   1ee00:	movw	r2, #14248	; 0x37a8
   1ee04:	movt	r2, #2
   1ee08:	mov	r1, r5
   1ee0c:	mov	r0, r4
   1ee10:	bl	11210 <error@plt>
   1ee14:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1ee18:	mov	r0, r2
   1ee1c:	mov	r1, r3
   1ee20:	sub	sp, fp, #12
   1ee24:	ldrd	r4, [sp]
   1ee28:	ldr	fp, [sp, #8]
   1ee2c:	add	sp, sp, #12
   1ee30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee34:	str	fp, [sp, #-8]!
   1ee38:	str	lr, [sp, #4]
   1ee3c:	add	fp, sp, #4
   1ee40:	sub	sp, sp, #40	; 0x28
   1ee44:	str	r0, [fp, #-8]
   1ee48:	strd	r2, [fp, #-20]	; 0xffffffec
   1ee4c:	ldr	r3, [fp, #20]
   1ee50:	str	r3, [sp, #16]
   1ee54:	ldr	r3, [fp, #16]
   1ee58:	str	r3, [sp, #12]
   1ee5c:	ldr	r3, [fp, #12]
   1ee60:	str	r3, [sp, #8]
   1ee64:	ldrd	r2, [fp, #4]
   1ee68:	strd	r2, [sp]
   1ee6c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1ee70:	mov	r1, #10
   1ee74:	ldr	r0, [fp, #-8]
   1ee78:	bl	1ec78 <__assert_fail@plt+0xd894>
   1ee7c:	mov	r2, r0
   1ee80:	mov	r3, r1
   1ee84:	mov	r0, r2
   1ee88:	mov	r1, r3
   1ee8c:	sub	sp, fp, #4
   1ee90:	ldr	fp, [sp]
   1ee94:	add	sp, sp, #4
   1ee98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1eea0:	strd	r6, [sp, #8]
   1eea4:	strd	r8, [sp, #16]
   1eea8:	str	fp, [sp, #24]
   1eeac:	str	lr, [sp, #28]
   1eeb0:	add	fp, sp, #28
   1eeb4:	sub	sp, sp, #72	; 0x48
   1eeb8:	str	r0, [fp, #-40]	; 0xffffffd8
   1eebc:	str	r1, [fp, #-44]	; 0xffffffd4
   1eec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eec4:	ldrd	r6, [r3]
   1eec8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eecc:	mov	r8, r3
   1eed0:	asr	r9, r8, #31
   1eed4:	mov	r2, #0
   1eed8:	mov	r3, #0
   1eedc:	strd	r2, [fp, #-60]	; 0xffffffc4
   1eee0:	mov	r0, #0
   1eee4:	mov	r1, #0
   1eee8:	mov	r0, r7
   1eeec:	asr	r1, r7, #31
   1eef0:	asr	ip, r6, #31
   1eef4:	mov	r2, #0
   1eef8:	mov	r3, #0
   1eefc:	mov	r2, r9
   1ef00:	asr	r3, r9, #31
   1ef04:	cmp	ip, r0
   1ef08:	bne	1ef18 <__assert_fail@plt+0xdb34>
   1ef0c:	smull	r2, r3, r6, r8
   1ef10:	strd	r2, [fp, #-52]	; 0xffffffcc
   1ef14:	b	1f02c <__assert_fail@plt+0xdc48>
   1ef18:	strd	r6, [fp, #-92]	; 0xffffffa4
   1ef1c:	mov	ip, r0
   1ef20:	mov	lr, r8
   1ef24:	umull	r2, r3, r6, r8
   1ef28:	strd	r2, [fp, #-100]	; 0xffffff9c
   1ef2c:	umull	r2, r3, lr, ip
   1ef30:	mov	r0, r2
   1ef34:	mov	r1, r3
   1ef38:	cmp	ip, #0
   1ef3c:	bge	1ef6c <__assert_fail@plt+0xdb88>
   1ef40:	mov	r2, lr
   1ef44:	mov	r3, #0
   1ef48:	mov	r4, #0
   1ef4c:	mov	r5, #0
   1ef50:	mov	r5, r2
   1ef54:	mov	r4, #0
   1ef58:	subs	r3, r0, r4
   1ef5c:	str	r3, [fp, #-68]	; 0xffffffbc
   1ef60:	sbc	r3, r1, r5
   1ef64:	str	r3, [fp, #-64]	; 0xffffffc0
   1ef68:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1ef6c:	cmp	lr, #0
   1ef70:	bge	1ef90 <__assert_fail@plt+0xdbac>
   1ef74:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1ef78:	mov	ip, r2
   1ef7c:	subs	ip, r0, ip
   1ef80:	str	ip, [fp, #-76]	; 0xffffffb4
   1ef84:	sbc	r3, r1, r3
   1ef88:	str	r3, [fp, #-72]	; 0xffffffb8
   1ef8c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1ef90:	mov	r2, #0
   1ef94:	mov	r3, #0
   1ef98:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   1ef9c:	mov	ip, r5
   1efa0:	mov	r2, ip
   1efa4:	mov	r3, #0
   1efa8:	adds	ip, r0, r2
   1efac:	str	ip, [fp, #-84]	; 0xffffffac
   1efb0:	adc	r3, r1, r3
   1efb4:	str	r3, [fp, #-80]	; 0xffffffb0
   1efb8:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1efbc:	mov	r2, #0
   1efc0:	mov	r3, #0
   1efc4:	mov	r2, r1
   1efc8:	asr	r3, r1, #31
   1efcc:	asr	ip, r0, #31
   1efd0:	cmp	ip, r2
   1efd4:	bne	1f004 <__assert_fail@plt+0xdc20>
   1efd8:	mov	r2, #0
   1efdc:	mov	r3, #0
   1efe0:	mov	r3, r0
   1efe4:	mov	r2, #0
   1efe8:	mov	r0, r4
   1efec:	mov	r1, #0
   1eff0:	orr	ip, r2, r0
   1eff4:	str	ip, [fp, #-52]	; 0xffffffcc
   1eff8:	orr	r3, r3, r1
   1effc:	str	r3, [fp, #-48]	; 0xffffffd0
   1f000:	b	1f02c <__assert_fail@plt+0xdc48>
   1f004:	mul	r2, r8, r7
   1f008:	mul	r3, r6, r9
   1f00c:	add	r1, r2, r3
   1f010:	umull	r2, r3, r6, r8
   1f014:	add	r1, r1, r3
   1f018:	mov	r3, r1
   1f01c:	strd	r2, [fp, #-52]	; 0xffffffcc
   1f020:	mov	r2, #1
   1f024:	mov	r3, #0
   1f028:	strd	r2, [fp, #-60]	; 0xffffffc4
   1f02c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1f030:	strd	r2, [fp, #-36]	; 0xffffffdc
   1f034:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1f038:	mov	r3, r2
   1f03c:	and	r3, r3, #1
   1f040:	uxtb	r3, r3
   1f044:	cmp	r3, #0
   1f048:	beq	1f084 <__assert_fail@plt+0xdca0>
   1f04c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f050:	ldrd	r2, [r3]
   1f054:	cmp	r2, #0
   1f058:	sbcs	r3, r3, #0
   1f05c:	bge	1f06c <__assert_fail@plt+0xdc88>
   1f060:	mov	r2, #0
   1f064:	mov	r3, #-2147483648	; 0x80000000
   1f068:	b	1f074 <__assert_fail@plt+0xdc90>
   1f06c:	mvn	r2, #0
   1f070:	mvn	r3, #-2147483648	; 0x80000000
   1f074:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f078:	strd	r2, [r1]
   1f07c:	mov	r3, #1
   1f080:	b	1f094 <__assert_fail@plt+0xdcb0>
   1f084:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f088:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f08c:	strd	r2, [r1]
   1f090:	mov	r3, #0
   1f094:	mov	r0, r3
   1f098:	sub	sp, fp, #28
   1f09c:	ldrd	r4, [sp]
   1f0a0:	ldrd	r6, [sp, #8]
   1f0a4:	ldrd	r8, [sp, #16]
   1f0a8:	ldr	fp, [sp, #24]
   1f0ac:	add	sp, sp, #28
   1f0b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f0b4:	str	fp, [sp, #-8]!
   1f0b8:	str	lr, [sp, #4]
   1f0bc:	add	fp, sp, #4
   1f0c0:	sub	sp, sp, #24
   1f0c4:	str	r0, [fp, #-16]
   1f0c8:	str	r1, [fp, #-20]	; 0xffffffec
   1f0cc:	str	r2, [fp, #-24]	; 0xffffffe8
   1f0d0:	mov	r3, #0
   1f0d4:	str	r3, [fp, #-8]
   1f0d8:	b	1f0f8 <__assert_fail@plt+0xdd14>
   1f0dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f0e0:	ldr	r0, [fp, #-16]
   1f0e4:	bl	1ee9c <__assert_fail@plt+0xdab8>
   1f0e8:	mov	r2, r0
   1f0ec:	ldr	r3, [fp, #-8]
   1f0f0:	orr	r3, r3, r2
   1f0f4:	str	r3, [fp, #-8]
   1f0f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0fc:	sub	r2, r3, #1
   1f100:	str	r2, [fp, #-24]	; 0xffffffe8
   1f104:	cmp	r3, #0
   1f108:	bne	1f0dc <__assert_fail@plt+0xdcf8>
   1f10c:	ldr	r3, [fp, #-8]
   1f110:	mov	r0, r3
   1f114:	sub	sp, fp, #4
   1f118:	ldr	fp, [sp]
   1f11c:	add	sp, sp, #4
   1f120:	pop	{pc}		; (ldr pc, [sp], #4)
   1f124:	str	fp, [sp, #-8]!
   1f128:	str	lr, [sp, #4]
   1f12c:	add	fp, sp, #4
   1f130:	sub	sp, sp, #48	; 0x30
   1f134:	str	r0, [fp, #-40]	; 0xffffffd8
   1f138:	str	r1, [fp, #-44]	; 0xffffffd4
   1f13c:	str	r2, [fp, #-48]	; 0xffffffd0
   1f140:	str	r3, [fp, #-52]	; 0xffffffcc
   1f144:	mov	r3, #0
   1f148:	str	r3, [fp, #-8]
   1f14c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f150:	cmp	r3, #0
   1f154:	blt	1f164 <__assert_fail@plt+0xdd80>
   1f158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f15c:	cmp	r3, #36	; 0x24
   1f160:	ble	1f184 <__assert_fail@plt+0xdda0>
   1f164:	movw	r3, #14312	; 0x37e8
   1f168:	movt	r3, #2
   1f16c:	mov	r2, #85	; 0x55
   1f170:	movw	r1, #14256	; 0x37b0
   1f174:	movt	r1, #2
   1f178:	movw	r0, #14272	; 0x37c0
   1f17c:	movt	r0, #2
   1f180:	bl	113e4 <__assert_fail@plt>
   1f184:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f188:	cmp	r3, #0
   1f18c:	bne	1f198 <__assert_fail@plt+0xddb4>
   1f190:	sub	r3, fp, #28
   1f194:	b	1f19c <__assert_fail@plt+0xddb8>
   1f198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f19c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f1a0:	bl	112d0 <__errno_location@plt>
   1f1a4:	mov	r2, r0
   1f1a8:	mov	r3, #0
   1f1ac:	str	r3, [r2]
   1f1b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f1bc:	bl	1130c <strtoimax@plt>
   1f1c0:	mov	r2, r0
   1f1c4:	mov	r3, r1
   1f1c8:	strd	r2, [fp, #-36]	; 0xffffffdc
   1f1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1d0:	ldr	r3, [r3]
   1f1d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f1d8:	cmp	r2, r3
   1f1dc:	bne	1f23c <__assert_fail@plt+0xde58>
   1f1e0:	ldr	r3, [fp, #4]
   1f1e4:	cmp	r3, #0
   1f1e8:	beq	1f234 <__assert_fail@plt+0xde50>
   1f1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1f0:	ldr	r3, [r3]
   1f1f4:	ldrb	r3, [r3]
   1f1f8:	cmp	r3, #0
   1f1fc:	beq	1f234 <__assert_fail@plt+0xde50>
   1f200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f204:	ldr	r3, [r3]
   1f208:	ldrb	r3, [r3]
   1f20c:	mov	r1, r3
   1f210:	ldr	r0, [fp, #4]
   1f214:	bl	112a0 <strchr@plt>
   1f218:	mov	r3, r0
   1f21c:	cmp	r3, #0
   1f220:	beq	1f234 <__assert_fail@plt+0xde50>
   1f224:	mov	r2, #1
   1f228:	mov	r3, #0
   1f22c:	strd	r2, [fp, #-36]	; 0xffffffdc
   1f230:	b	1f274 <__assert_fail@plt+0xde90>
   1f234:	mov	r3, #4
   1f238:	b	1f6f8 <__assert_fail@plt+0xe314>
   1f23c:	bl	112d0 <__errno_location@plt>
   1f240:	mov	r3, r0
   1f244:	ldr	r3, [r3]
   1f248:	cmp	r3, #0
   1f24c:	beq	1f274 <__assert_fail@plt+0xde90>
   1f250:	bl	112d0 <__errno_location@plt>
   1f254:	mov	r3, r0
   1f258:	ldr	r3, [r3]
   1f25c:	cmp	r3, #34	; 0x22
   1f260:	beq	1f26c <__assert_fail@plt+0xde88>
   1f264:	mov	r3, #4
   1f268:	b	1f6f8 <__assert_fail@plt+0xe314>
   1f26c:	mov	r3, #1
   1f270:	str	r3, [fp, #-8]
   1f274:	ldr	r3, [fp, #4]
   1f278:	cmp	r3, #0
   1f27c:	bne	1f294 <__assert_fail@plt+0xdeb0>
   1f280:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f284:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f288:	strd	r2, [r1]
   1f28c:	ldr	r3, [fp, #-8]
   1f290:	b	1f6f8 <__assert_fail@plt+0xe314>
   1f294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f298:	ldr	r3, [r3]
   1f29c:	ldrb	r3, [r3]
   1f2a0:	cmp	r3, #0
   1f2a4:	beq	1f6e8 <__assert_fail@plt+0xe304>
   1f2a8:	mov	r3, #1024	; 0x400
   1f2ac:	str	r3, [fp, #-12]
   1f2b0:	mov	r3, #1
   1f2b4:	str	r3, [fp, #-16]
   1f2b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f2bc:	ldr	r3, [r3]
   1f2c0:	ldrb	r3, [r3]
   1f2c4:	mov	r1, r3
   1f2c8:	ldr	r0, [fp, #4]
   1f2cc:	bl	112a0 <strchr@plt>
   1f2d0:	mov	r3, r0
   1f2d4:	cmp	r3, #0
   1f2d8:	bne	1f2f4 <__assert_fail@plt+0xdf10>
   1f2dc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f2e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f2e4:	strd	r2, [r1]
   1f2e8:	ldr	r3, [fp, #-8]
   1f2ec:	orr	r3, r3, #2
   1f2f0:	b	1f6f8 <__assert_fail@plt+0xe314>
   1f2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f2f8:	ldr	r3, [r3]
   1f2fc:	ldrb	r3, [r3]
   1f300:	sub	r3, r3, #69	; 0x45
   1f304:	cmp	r3, #47	; 0x2f
   1f308:	ldrls	pc, [pc, r3, lsl #2]
   1f30c:	b	1f460 <__assert_fail@plt+0xe07c>
   1f310:	ldrdeq	pc, [r1], -r0
   1f314:	andeq	pc, r1, r0, ror #8
   1f318:	ldrdeq	pc, [r1], -r0
   1f31c:	andeq	pc, r1, r0, ror #8
   1f320:	andeq	pc, r1, r0, ror #8
   1f324:	andeq	pc, r1, r0, ror #8
   1f328:	ldrdeq	pc, [r1], -r0
   1f32c:	andeq	pc, r1, r0, ror #8
   1f330:	ldrdeq	pc, [r1], -r0
   1f334:	andeq	pc, r1, r0, ror #8
   1f338:	andeq	pc, r1, r0, ror #8
   1f33c:	ldrdeq	pc, [r1], -r0
   1f340:	andeq	pc, r1, r0, ror #8
   1f344:	andeq	pc, r1, r0, ror #8
   1f348:	andeq	pc, r1, r0, ror #8
   1f34c:	ldrdeq	pc, [r1], -r0
   1f350:	andeq	pc, r1, r0, ror #8
   1f354:	andeq	pc, r1, r0, ror #8
   1f358:	andeq	pc, r1, r0, ror #8
   1f35c:	andeq	pc, r1, r0, ror #8
   1f360:	ldrdeq	pc, [r1], -r0
   1f364:	ldrdeq	pc, [r1], -r0
   1f368:	andeq	pc, r1, r0, ror #8
   1f36c:	andeq	pc, r1, r0, ror #8
   1f370:	andeq	pc, r1, r0, ror #8
   1f374:	andeq	pc, r1, r0, ror #8
   1f378:	andeq	pc, r1, r0, ror #8
   1f37c:	andeq	pc, r1, r0, ror #8
   1f380:	andeq	pc, r1, r0, ror #8
   1f384:	andeq	pc, r1, r0, ror #8
   1f388:	andeq	pc, r1, r0, ror #8
   1f38c:	andeq	pc, r1, r0, ror #8
   1f390:	andeq	pc, r1, r0, ror #8
   1f394:	andeq	pc, r1, r0, ror #8
   1f398:	ldrdeq	pc, [r1], -r0
   1f39c:	andeq	pc, r1, r0, ror #8
   1f3a0:	andeq	pc, r1, r0, ror #8
   1f3a4:	andeq	pc, r1, r0, ror #8
   1f3a8:	ldrdeq	pc, [r1], -r0
   1f3ac:	andeq	pc, r1, r0, ror #8
   1f3b0:	ldrdeq	pc, [r1], -r0
   1f3b4:	andeq	pc, r1, r0, ror #8
   1f3b8:	andeq	pc, r1, r0, ror #8
   1f3bc:	andeq	pc, r1, r0, ror #8
   1f3c0:	andeq	pc, r1, r0, ror #8
   1f3c4:	andeq	pc, r1, r0, ror #8
   1f3c8:	andeq	pc, r1, r0, ror #8
   1f3cc:	ldrdeq	pc, [r1], -r0
   1f3d0:	mov	r1, #48	; 0x30
   1f3d4:	ldr	r0, [fp, #4]
   1f3d8:	bl	112a0 <strchr@plt>
   1f3dc:	mov	r3, r0
   1f3e0:	cmp	r3, #0
   1f3e4:	beq	1f454 <__assert_fail@plt+0xe070>
   1f3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3ec:	ldr	r3, [r3]
   1f3f0:	add	r3, r3, #1
   1f3f4:	ldrb	r3, [r3]
   1f3f8:	cmp	r3, #68	; 0x44
   1f3fc:	beq	1f43c <__assert_fail@plt+0xe058>
   1f400:	cmp	r3, #105	; 0x69
   1f404:	beq	1f414 <__assert_fail@plt+0xe030>
   1f408:	cmp	r3, #66	; 0x42
   1f40c:	beq	1f43c <__assert_fail@plt+0xe058>
   1f410:	b	1f460 <__assert_fail@plt+0xe07c>
   1f414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f418:	ldr	r3, [r3]
   1f41c:	add	r3, r3, #2
   1f420:	ldrb	r3, [r3]
   1f424:	cmp	r3, #66	; 0x42
   1f428:	bne	1f45c <__assert_fail@plt+0xe078>
   1f42c:	ldr	r3, [fp, #-16]
   1f430:	add	r3, r3, #2
   1f434:	str	r3, [fp, #-16]
   1f438:	b	1f45c <__assert_fail@plt+0xe078>
   1f43c:	mov	r3, #1000	; 0x3e8
   1f440:	str	r3, [fp, #-12]
   1f444:	ldr	r3, [fp, #-16]
   1f448:	add	r3, r3, #1
   1f44c:	str	r3, [fp, #-16]
   1f450:	b	1f460 <__assert_fail@plt+0xe07c>
   1f454:	nop	{0}
   1f458:	b	1f460 <__assert_fail@plt+0xe07c>
   1f45c:	nop	{0}
   1f460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f464:	ldr	r3, [r3]
   1f468:	ldrb	r3, [r3]
   1f46c:	sub	r3, r3, #66	; 0x42
   1f470:	cmp	r3, #53	; 0x35
   1f474:	ldrls	pc, [pc, r3, lsl #2]
   1f478:	b	1f688 <__assert_fail@plt+0xe2a4>
   1f47c:	andeq	pc, r1, ip, ror #10
   1f480:	andeq	pc, r1, r8, lsl #13
   1f484:	andeq	pc, r1, r8, lsl #13
   1f488:	muleq	r1, r0, r5
   1f48c:	andeq	pc, r1, r8, lsl #13
   1f490:	andeq	pc, r1, ip, lsr #11
   1f494:	andeq	pc, r1, r8, lsl #13
   1f498:	andeq	pc, r1, r8, lsl #13
   1f49c:	andeq	pc, r1, r8, lsl #13
   1f4a0:	andeq	pc, r1, r8, asr #11
   1f4a4:	andeq	pc, r1, r8, lsl #13
   1f4a8:	andeq	pc, r1, r4, ror #11
   1f4ac:	andeq	pc, r1, r8, lsl #13
   1f4b0:	andeq	pc, r1, r8, lsl #13
   1f4b4:	andeq	pc, r1, r0, lsl #12
   1f4b8:	andeq	pc, r1, r8, lsl #13
   1f4bc:	andeq	pc, r1, r8, lsl #13
   1f4c0:	andeq	pc, r1, r8, lsl #13
   1f4c4:	andeq	pc, r1, ip, lsl r6	; <UNPREDICTABLE>
   1f4c8:	andeq	pc, r1, r8, lsl #13
   1f4cc:	andeq	pc, r1, r8, lsl #13
   1f4d0:	andeq	pc, r1, r8, lsl #13
   1f4d4:	andeq	pc, r1, r8, lsl #13
   1f4d8:	andeq	pc, r1, r0, asr r6	; <UNPREDICTABLE>
   1f4dc:	andeq	pc, r1, ip, ror #12
   1f4e0:	andeq	pc, r1, r8, lsl #13
   1f4e4:	andeq	pc, r1, r8, lsl #13
   1f4e8:	andeq	pc, r1, r8, lsl #13
   1f4ec:	andeq	pc, r1, r8, lsl #13
   1f4f0:	andeq	pc, r1, r8, lsl #13
   1f4f4:	andeq	pc, r1, r8, lsl #13
   1f4f8:	andeq	pc, r1, r8, lsl #13
   1f4fc:	andeq	pc, r1, r4, asr r5	; <UNPREDICTABLE>
   1f500:	andeq	pc, r1, r4, lsl #11
   1f504:	andeq	pc, r1, r8, lsl #13
   1f508:	andeq	pc, r1, r8, lsl #13
   1f50c:	andeq	pc, r1, r8, lsl #13
   1f510:	andeq	pc, r1, ip, lsr #11
   1f514:	andeq	pc, r1, r8, lsl #13
   1f518:	andeq	pc, r1, r8, lsl #13
   1f51c:	andeq	pc, r1, r8, lsl #13
   1f520:	andeq	pc, r1, r8, asr #11
   1f524:	andeq	pc, r1, r8, lsl #13
   1f528:	andeq	pc, r1, r4, ror #11
   1f52c:	andeq	pc, r1, r8, lsl #13
   1f530:	andeq	pc, r1, r8, lsl #13
   1f534:	andeq	pc, r1, r8, lsl #13
   1f538:	andeq	pc, r1, r8, lsl #13
   1f53c:	andeq	pc, r1, r8, lsl #13
   1f540:	andeq	pc, r1, r8, lsl #13
   1f544:	andeq	pc, r1, ip, lsl r6	; <UNPREDICTABLE>
   1f548:	andeq	pc, r1, r8, lsl #13
   1f54c:	andeq	pc, r1, r8, lsl #13
   1f550:	andeq	pc, r1, r8, lsr r6	; <UNPREDICTABLE>
   1f554:	sub	r3, fp, #36	; 0x24
   1f558:	mov	r1, #512	; 0x200
   1f55c:	mov	r0, r3
   1f560:	bl	1ee9c <__assert_fail@plt+0xdab8>
   1f564:	str	r0, [fp, #-20]	; 0xffffffec
   1f568:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f56c:	sub	r3, fp, #36	; 0x24
   1f570:	mov	r1, #1024	; 0x400
   1f574:	mov	r0, r3
   1f578:	bl	1ee9c <__assert_fail@plt+0xdab8>
   1f57c:	str	r0, [fp, #-20]	; 0xffffffec
   1f580:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f584:	mov	r3, #0
   1f588:	str	r3, [fp, #-20]	; 0xffffffec
   1f58c:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f590:	sub	r3, fp, #36	; 0x24
   1f594:	mov	r2, #6
   1f598:	ldr	r1, [fp, #-12]
   1f59c:	mov	r0, r3
   1f5a0:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f5a4:	str	r0, [fp, #-20]	; 0xffffffec
   1f5a8:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f5ac:	sub	r3, fp, #36	; 0x24
   1f5b0:	mov	r2, #3
   1f5b4:	ldr	r1, [fp, #-12]
   1f5b8:	mov	r0, r3
   1f5bc:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f5c0:	str	r0, [fp, #-20]	; 0xffffffec
   1f5c4:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f5c8:	sub	r3, fp, #36	; 0x24
   1f5cc:	mov	r2, #1
   1f5d0:	ldr	r1, [fp, #-12]
   1f5d4:	mov	r0, r3
   1f5d8:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f5dc:	str	r0, [fp, #-20]	; 0xffffffec
   1f5e0:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f5e4:	sub	r3, fp, #36	; 0x24
   1f5e8:	mov	r2, #2
   1f5ec:	ldr	r1, [fp, #-12]
   1f5f0:	mov	r0, r3
   1f5f4:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f5f8:	str	r0, [fp, #-20]	; 0xffffffec
   1f5fc:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f600:	sub	r3, fp, #36	; 0x24
   1f604:	mov	r2, #5
   1f608:	ldr	r1, [fp, #-12]
   1f60c:	mov	r0, r3
   1f610:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f614:	str	r0, [fp, #-20]	; 0xffffffec
   1f618:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f61c:	sub	r3, fp, #36	; 0x24
   1f620:	mov	r2, #4
   1f624:	ldr	r1, [fp, #-12]
   1f628:	mov	r0, r3
   1f62c:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f630:	str	r0, [fp, #-20]	; 0xffffffec
   1f634:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f638:	sub	r3, fp, #36	; 0x24
   1f63c:	mov	r1, #2
   1f640:	mov	r0, r3
   1f644:	bl	1ee9c <__assert_fail@plt+0xdab8>
   1f648:	str	r0, [fp, #-20]	; 0xffffffec
   1f64c:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f650:	sub	r3, fp, #36	; 0x24
   1f654:	mov	r2, #8
   1f658:	ldr	r1, [fp, #-12]
   1f65c:	mov	r0, r3
   1f660:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f664:	str	r0, [fp, #-20]	; 0xffffffec
   1f668:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f66c:	sub	r3, fp, #36	; 0x24
   1f670:	mov	r2, #7
   1f674:	ldr	r1, [fp, #-12]
   1f678:	mov	r0, r3
   1f67c:	bl	1f0b4 <__assert_fail@plt+0xdcd0>
   1f680:	str	r0, [fp, #-20]	; 0xffffffec
   1f684:	b	1f6a0 <__assert_fail@plt+0xe2bc>
   1f688:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f68c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f690:	strd	r2, [r1]
   1f694:	ldr	r3, [fp, #-8]
   1f698:	orr	r3, r3, #2
   1f69c:	b	1f6f8 <__assert_fail@plt+0xe314>
   1f6a0:	ldr	r2, [fp, #-8]
   1f6a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6a8:	orr	r3, r2, r3
   1f6ac:	str	r3, [fp, #-8]
   1f6b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6b4:	ldr	r2, [r3]
   1f6b8:	ldr	r3, [fp, #-16]
   1f6bc:	add	r2, r2, r3
   1f6c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6c4:	str	r2, [r3]
   1f6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6cc:	ldr	r3, [r3]
   1f6d0:	ldrb	r3, [r3]
   1f6d4:	cmp	r3, #0
   1f6d8:	beq	1f6e8 <__assert_fail@plt+0xe304>
   1f6dc:	ldr	r3, [fp, #-8]
   1f6e0:	orr	r3, r3, #2
   1f6e4:	str	r3, [fp, #-8]
   1f6e8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f6ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f6f0:	strd	r2, [r1]
   1f6f4:	ldr	r3, [fp, #-8]
   1f6f8:	mov	r0, r3
   1f6fc:	sub	sp, fp, #4
   1f700:	ldr	fp, [sp]
   1f704:	add	sp, sp, #4
   1f708:	pop	{pc}		; (ldr pc, [sp], #4)
   1f70c:	str	fp, [sp, #-8]!
   1f710:	str	lr, [sp, #4]
   1f714:	add	fp, sp, #4
   1f718:	sub	sp, sp, #16
   1f71c:	str	r0, [fp, #-16]
   1f720:	str	r1, [fp, #-20]	; 0xffffffec
   1f724:	ldr	r3, [fp, #-16]
   1f728:	ldr	r2, [r3]
   1f72c:	mov	lr, #0
   1f730:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f734:	smull	r2, r3, r2, r3
   1f738:	mov	r0, #0
   1f73c:	mov	r1, #0
   1f740:	mov	r0, r3
   1f744:	asr	r1, r3, #31
   1f748:	asr	ip, r2, #31
   1f74c:	cmp	ip, r0
   1f750:	beq	1f758 <__assert_fail@plt+0xe374>
   1f754:	mov	lr, #1
   1f758:	mov	r3, r2
   1f75c:	str	r3, [fp, #-8]
   1f760:	mov	r3, lr
   1f764:	and	r3, r3, #1
   1f768:	uxtb	r3, r3
   1f76c:	cmp	r3, #0
   1f770:	beq	1f7a0 <__assert_fail@plt+0xe3bc>
   1f774:	ldr	r3, [fp, #-16]
   1f778:	ldr	r3, [r3]
   1f77c:	cmp	r3, #0
   1f780:	bge	1f78c <__assert_fail@plt+0xe3a8>
   1f784:	mov	r2, #-2147483648	; 0x80000000
   1f788:	b	1f790 <__assert_fail@plt+0xe3ac>
   1f78c:	mvn	r2, #-2147483648	; 0x80000000
   1f790:	ldr	r3, [fp, #-16]
   1f794:	str	r2, [r3]
   1f798:	mov	r3, #1
   1f79c:	b	1f7b0 <__assert_fail@plt+0xe3cc>
   1f7a0:	ldr	r2, [fp, #-8]
   1f7a4:	ldr	r3, [fp, #-16]
   1f7a8:	str	r2, [r3]
   1f7ac:	mov	r3, #0
   1f7b0:	mov	r0, r3
   1f7b4:	sub	sp, fp, #4
   1f7b8:	ldr	fp, [sp]
   1f7bc:	add	sp, sp, #4
   1f7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f7c4:	str	fp, [sp, #-8]!
   1f7c8:	str	lr, [sp, #4]
   1f7cc:	add	fp, sp, #4
   1f7d0:	sub	sp, sp, #24
   1f7d4:	str	r0, [fp, #-16]
   1f7d8:	str	r1, [fp, #-20]	; 0xffffffec
   1f7dc:	str	r2, [fp, #-24]	; 0xffffffe8
   1f7e0:	mov	r3, #0
   1f7e4:	str	r3, [fp, #-8]
   1f7e8:	b	1f808 <__assert_fail@plt+0xe424>
   1f7ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f7f0:	ldr	r0, [fp, #-16]
   1f7f4:	bl	1f70c <__assert_fail@plt+0xe328>
   1f7f8:	mov	r2, r0
   1f7fc:	ldr	r3, [fp, #-8]
   1f800:	orr	r3, r3, r2
   1f804:	str	r3, [fp, #-8]
   1f808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f80c:	sub	r2, r3, #1
   1f810:	str	r2, [fp, #-24]	; 0xffffffe8
   1f814:	cmp	r3, #0
   1f818:	bne	1f7ec <__assert_fail@plt+0xe408>
   1f81c:	ldr	r3, [fp, #-8]
   1f820:	mov	r0, r3
   1f824:	sub	sp, fp, #4
   1f828:	ldr	fp, [sp]
   1f82c:	add	sp, sp, #4
   1f830:	pop	{pc}		; (ldr pc, [sp], #4)
   1f834:	str	fp, [sp, #-8]!
   1f838:	str	lr, [sp, #4]
   1f83c:	add	fp, sp, #4
   1f840:	sub	sp, sp, #48	; 0x30
   1f844:	str	r0, [fp, #-40]	; 0xffffffd8
   1f848:	str	r1, [fp, #-44]	; 0xffffffd4
   1f84c:	str	r2, [fp, #-48]	; 0xffffffd0
   1f850:	str	r3, [fp, #-52]	; 0xffffffcc
   1f854:	mov	r3, #0
   1f858:	str	r3, [fp, #-8]
   1f85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f860:	cmp	r3, #0
   1f864:	blt	1f874 <__assert_fail@plt+0xe490>
   1f868:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f86c:	cmp	r3, #36	; 0x24
   1f870:	ble	1f894 <__assert_fail@plt+0xe4b0>
   1f874:	movw	r3, #14380	; 0x382c
   1f878:	movt	r3, #2
   1f87c:	mov	r2, #85	; 0x55
   1f880:	movw	r1, #14324	; 0x37f4
   1f884:	movt	r1, #2
   1f888:	movw	r0, #14340	; 0x3804
   1f88c:	movt	r0, #2
   1f890:	bl	113e4 <__assert_fail@plt>
   1f894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f898:	cmp	r3, #0
   1f89c:	bne	1f8a8 <__assert_fail@plt+0xe4c4>
   1f8a0:	sub	r3, fp, #28
   1f8a4:	b	1f8ac <__assert_fail@plt+0xe4c8>
   1f8a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f8ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1f8b0:	bl	112d0 <__errno_location@plt>
   1f8b4:	mov	r2, r0
   1f8b8:	mov	r3, #0
   1f8bc:	str	r3, [r2]
   1f8c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f8c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f8c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f8cc:	bl	110c0 <strtol@plt>
   1f8d0:	mov	r3, r0
   1f8d4:	str	r3, [fp, #-32]	; 0xffffffe0
   1f8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f8dc:	ldr	r3, [r3]
   1f8e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f8e4:	cmp	r2, r3
   1f8e8:	bne	1f944 <__assert_fail@plt+0xe560>
   1f8ec:	ldr	r3, [fp, #4]
   1f8f0:	cmp	r3, #0
   1f8f4:	beq	1f93c <__assert_fail@plt+0xe558>
   1f8f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f8fc:	ldr	r3, [r3]
   1f900:	ldrb	r3, [r3]
   1f904:	cmp	r3, #0
   1f908:	beq	1f93c <__assert_fail@plt+0xe558>
   1f90c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f910:	ldr	r3, [r3]
   1f914:	ldrb	r3, [r3]
   1f918:	mov	r1, r3
   1f91c:	ldr	r0, [fp, #4]
   1f920:	bl	112a0 <strchr@plt>
   1f924:	mov	r3, r0
   1f928:	cmp	r3, #0
   1f92c:	beq	1f93c <__assert_fail@plt+0xe558>
   1f930:	mov	r3, #1
   1f934:	str	r3, [fp, #-32]	; 0xffffffe0
   1f938:	b	1f97c <__assert_fail@plt+0xe598>
   1f93c:	mov	r3, #4
   1f940:	b	1fe00 <__assert_fail@plt+0xea1c>
   1f944:	bl	112d0 <__errno_location@plt>
   1f948:	mov	r3, r0
   1f94c:	ldr	r3, [r3]
   1f950:	cmp	r3, #0
   1f954:	beq	1f97c <__assert_fail@plt+0xe598>
   1f958:	bl	112d0 <__errno_location@plt>
   1f95c:	mov	r3, r0
   1f960:	ldr	r3, [r3]
   1f964:	cmp	r3, #34	; 0x22
   1f968:	beq	1f974 <__assert_fail@plt+0xe590>
   1f96c:	mov	r3, #4
   1f970:	b	1fe00 <__assert_fail@plt+0xea1c>
   1f974:	mov	r3, #1
   1f978:	str	r3, [fp, #-8]
   1f97c:	ldr	r3, [fp, #4]
   1f980:	cmp	r3, #0
   1f984:	bne	1f99c <__assert_fail@plt+0xe5b8>
   1f988:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f98c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f990:	str	r2, [r3]
   1f994:	ldr	r3, [fp, #-8]
   1f998:	b	1fe00 <__assert_fail@plt+0xea1c>
   1f99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9a0:	ldr	r3, [r3]
   1f9a4:	ldrb	r3, [r3]
   1f9a8:	cmp	r3, #0
   1f9ac:	beq	1fdf0 <__assert_fail@plt+0xea0c>
   1f9b0:	mov	r3, #1024	; 0x400
   1f9b4:	str	r3, [fp, #-12]
   1f9b8:	mov	r3, #1
   1f9bc:	str	r3, [fp, #-16]
   1f9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9c4:	ldr	r3, [r3]
   1f9c8:	ldrb	r3, [r3]
   1f9cc:	mov	r1, r3
   1f9d0:	ldr	r0, [fp, #4]
   1f9d4:	bl	112a0 <strchr@plt>
   1f9d8:	mov	r3, r0
   1f9dc:	cmp	r3, #0
   1f9e0:	bne	1f9fc <__assert_fail@plt+0xe618>
   1f9e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f9e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f9ec:	str	r2, [r3]
   1f9f0:	ldr	r3, [fp, #-8]
   1f9f4:	orr	r3, r3, #2
   1f9f8:	b	1fe00 <__assert_fail@plt+0xea1c>
   1f9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fa00:	ldr	r3, [r3]
   1fa04:	ldrb	r3, [r3]
   1fa08:	sub	r3, r3, #69	; 0x45
   1fa0c:	cmp	r3, #47	; 0x2f
   1fa10:	ldrls	pc, [pc, r3, lsl #2]
   1fa14:	b	1fb68 <__assert_fail@plt+0xe784>
   1fa18:	ldrdeq	pc, [r1], -r8
   1fa1c:	andeq	pc, r1, r8, ror #22
   1fa20:	ldrdeq	pc, [r1], -r8
   1fa24:	andeq	pc, r1, r8, ror #22
   1fa28:	andeq	pc, r1, r8, ror #22
   1fa2c:	andeq	pc, r1, r8, ror #22
   1fa30:	ldrdeq	pc, [r1], -r8
   1fa34:	andeq	pc, r1, r8, ror #22
   1fa38:	ldrdeq	pc, [r1], -r8
   1fa3c:	andeq	pc, r1, r8, ror #22
   1fa40:	andeq	pc, r1, r8, ror #22
   1fa44:	ldrdeq	pc, [r1], -r8
   1fa48:	andeq	pc, r1, r8, ror #22
   1fa4c:	andeq	pc, r1, r8, ror #22
   1fa50:	andeq	pc, r1, r8, ror #22
   1fa54:	ldrdeq	pc, [r1], -r8
   1fa58:	andeq	pc, r1, r8, ror #22
   1fa5c:	andeq	pc, r1, r8, ror #22
   1fa60:	andeq	pc, r1, r8, ror #22
   1fa64:	andeq	pc, r1, r8, ror #22
   1fa68:	ldrdeq	pc, [r1], -r8
   1fa6c:	ldrdeq	pc, [r1], -r8
   1fa70:	andeq	pc, r1, r8, ror #22
   1fa74:	andeq	pc, r1, r8, ror #22
   1fa78:	andeq	pc, r1, r8, ror #22
   1fa7c:	andeq	pc, r1, r8, ror #22
   1fa80:	andeq	pc, r1, r8, ror #22
   1fa84:	andeq	pc, r1, r8, ror #22
   1fa88:	andeq	pc, r1, r8, ror #22
   1fa8c:	andeq	pc, r1, r8, ror #22
   1fa90:	andeq	pc, r1, r8, ror #22
   1fa94:	andeq	pc, r1, r8, ror #22
   1fa98:	andeq	pc, r1, r8, ror #22
   1fa9c:	andeq	pc, r1, r8, ror #22
   1faa0:	ldrdeq	pc, [r1], -r8
   1faa4:	andeq	pc, r1, r8, ror #22
   1faa8:	andeq	pc, r1, r8, ror #22
   1faac:	andeq	pc, r1, r8, ror #22
   1fab0:	ldrdeq	pc, [r1], -r8
   1fab4:	andeq	pc, r1, r8, ror #22
   1fab8:	ldrdeq	pc, [r1], -r8
   1fabc:	andeq	pc, r1, r8, ror #22
   1fac0:	andeq	pc, r1, r8, ror #22
   1fac4:	andeq	pc, r1, r8, ror #22
   1fac8:	andeq	pc, r1, r8, ror #22
   1facc:	andeq	pc, r1, r8, ror #22
   1fad0:	andeq	pc, r1, r8, ror #22
   1fad4:	ldrdeq	pc, [r1], -r8
   1fad8:	mov	r1, #48	; 0x30
   1fadc:	ldr	r0, [fp, #4]
   1fae0:	bl	112a0 <strchr@plt>
   1fae4:	mov	r3, r0
   1fae8:	cmp	r3, #0
   1faec:	beq	1fb5c <__assert_fail@plt+0xe778>
   1faf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1faf4:	ldr	r3, [r3]
   1faf8:	add	r3, r3, #1
   1fafc:	ldrb	r3, [r3]
   1fb00:	cmp	r3, #68	; 0x44
   1fb04:	beq	1fb44 <__assert_fail@plt+0xe760>
   1fb08:	cmp	r3, #105	; 0x69
   1fb0c:	beq	1fb1c <__assert_fail@plt+0xe738>
   1fb10:	cmp	r3, #66	; 0x42
   1fb14:	beq	1fb44 <__assert_fail@plt+0xe760>
   1fb18:	b	1fb68 <__assert_fail@plt+0xe784>
   1fb1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb20:	ldr	r3, [r3]
   1fb24:	add	r3, r3, #2
   1fb28:	ldrb	r3, [r3]
   1fb2c:	cmp	r3, #66	; 0x42
   1fb30:	bne	1fb64 <__assert_fail@plt+0xe780>
   1fb34:	ldr	r3, [fp, #-16]
   1fb38:	add	r3, r3, #2
   1fb3c:	str	r3, [fp, #-16]
   1fb40:	b	1fb64 <__assert_fail@plt+0xe780>
   1fb44:	mov	r3, #1000	; 0x3e8
   1fb48:	str	r3, [fp, #-12]
   1fb4c:	ldr	r3, [fp, #-16]
   1fb50:	add	r3, r3, #1
   1fb54:	str	r3, [fp, #-16]
   1fb58:	b	1fb68 <__assert_fail@plt+0xe784>
   1fb5c:	nop	{0}
   1fb60:	b	1fb68 <__assert_fail@plt+0xe784>
   1fb64:	nop	{0}
   1fb68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb6c:	ldr	r3, [r3]
   1fb70:	ldrb	r3, [r3]
   1fb74:	sub	r3, r3, #66	; 0x42
   1fb78:	cmp	r3, #53	; 0x35
   1fb7c:	ldrls	pc, [pc, r3, lsl #2]
   1fb80:	b	1fd90 <__assert_fail@plt+0xe9ac>
   1fb84:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1fb88:	muleq	r1, r0, sp
   1fb8c:	muleq	r1, r0, sp
   1fb90:	muleq	r1, r8, ip
   1fb94:	muleq	r1, r0, sp
   1fb98:			; <UNDEFINED> instruction: 0x0001fcb4
   1fb9c:	muleq	r1, r0, sp
   1fba0:	muleq	r1, r0, sp
   1fba4:	muleq	r1, r0, sp
   1fba8:	ldrdeq	pc, [r1], -r0
   1fbac:	muleq	r1, r0, sp
   1fbb0:	andeq	pc, r1, ip, ror #25
   1fbb4:	muleq	r1, r0, sp
   1fbb8:	muleq	r1, r0, sp
   1fbbc:	andeq	pc, r1, r8, lsl #26
   1fbc0:	muleq	r1, r0, sp
   1fbc4:	muleq	r1, r0, sp
   1fbc8:	muleq	r1, r0, sp
   1fbcc:	andeq	pc, r1, r4, lsr #26
   1fbd0:	muleq	r1, r0, sp
   1fbd4:	muleq	r1, r0, sp
   1fbd8:	muleq	r1, r0, sp
   1fbdc:	muleq	r1, r0, sp
   1fbe0:	andeq	pc, r1, r8, asr sp	; <UNPREDICTABLE>
   1fbe4:	andeq	pc, r1, r4, ror sp	; <UNPREDICTABLE>
   1fbe8:	muleq	r1, r0, sp
   1fbec:	muleq	r1, r0, sp
   1fbf0:	muleq	r1, r0, sp
   1fbf4:	muleq	r1, r0, sp
   1fbf8:	muleq	r1, r0, sp
   1fbfc:	muleq	r1, r0, sp
   1fc00:	muleq	r1, r0, sp
   1fc04:	andeq	pc, r1, ip, asr ip	; <UNPREDICTABLE>
   1fc08:	andeq	pc, r1, ip, lsl #25
   1fc0c:	muleq	r1, r0, sp
   1fc10:	muleq	r1, r0, sp
   1fc14:	muleq	r1, r0, sp
   1fc18:			; <UNDEFINED> instruction: 0x0001fcb4
   1fc1c:	muleq	r1, r0, sp
   1fc20:	muleq	r1, r0, sp
   1fc24:	muleq	r1, r0, sp
   1fc28:	ldrdeq	pc, [r1], -r0
   1fc2c:	muleq	r1, r0, sp
   1fc30:	andeq	pc, r1, ip, ror #25
   1fc34:	muleq	r1, r0, sp
   1fc38:	muleq	r1, r0, sp
   1fc3c:	muleq	r1, r0, sp
   1fc40:	muleq	r1, r0, sp
   1fc44:	muleq	r1, r0, sp
   1fc48:	muleq	r1, r0, sp
   1fc4c:	andeq	pc, r1, r4, lsr #26
   1fc50:	muleq	r1, r0, sp
   1fc54:	muleq	r1, r0, sp
   1fc58:	andeq	pc, r1, r0, asr #26
   1fc5c:	sub	r3, fp, #32
   1fc60:	mov	r1, #512	; 0x200
   1fc64:	mov	r0, r3
   1fc68:	bl	1f70c <__assert_fail@plt+0xe328>
   1fc6c:	str	r0, [fp, #-20]	; 0xffffffec
   1fc70:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fc74:	sub	r3, fp, #32
   1fc78:	mov	r1, #1024	; 0x400
   1fc7c:	mov	r0, r3
   1fc80:	bl	1f70c <__assert_fail@plt+0xe328>
   1fc84:	str	r0, [fp, #-20]	; 0xffffffec
   1fc88:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fc8c:	mov	r3, #0
   1fc90:	str	r3, [fp, #-20]	; 0xffffffec
   1fc94:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fc98:	sub	r3, fp, #32
   1fc9c:	mov	r2, #6
   1fca0:	ldr	r1, [fp, #-12]
   1fca4:	mov	r0, r3
   1fca8:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fcac:	str	r0, [fp, #-20]	; 0xffffffec
   1fcb0:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fcb4:	sub	r3, fp, #32
   1fcb8:	mov	r2, #3
   1fcbc:	ldr	r1, [fp, #-12]
   1fcc0:	mov	r0, r3
   1fcc4:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fcc8:	str	r0, [fp, #-20]	; 0xffffffec
   1fccc:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fcd0:	sub	r3, fp, #32
   1fcd4:	mov	r2, #1
   1fcd8:	ldr	r1, [fp, #-12]
   1fcdc:	mov	r0, r3
   1fce0:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fce4:	str	r0, [fp, #-20]	; 0xffffffec
   1fce8:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fcec:	sub	r3, fp, #32
   1fcf0:	mov	r2, #2
   1fcf4:	ldr	r1, [fp, #-12]
   1fcf8:	mov	r0, r3
   1fcfc:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fd00:	str	r0, [fp, #-20]	; 0xffffffec
   1fd04:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd08:	sub	r3, fp, #32
   1fd0c:	mov	r2, #5
   1fd10:	ldr	r1, [fp, #-12]
   1fd14:	mov	r0, r3
   1fd18:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fd1c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd20:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd24:	sub	r3, fp, #32
   1fd28:	mov	r2, #4
   1fd2c:	ldr	r1, [fp, #-12]
   1fd30:	mov	r0, r3
   1fd34:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fd38:	str	r0, [fp, #-20]	; 0xffffffec
   1fd3c:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd40:	sub	r3, fp, #32
   1fd44:	mov	r1, #2
   1fd48:	mov	r0, r3
   1fd4c:	bl	1f70c <__assert_fail@plt+0xe328>
   1fd50:	str	r0, [fp, #-20]	; 0xffffffec
   1fd54:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd58:	sub	r3, fp, #32
   1fd5c:	mov	r2, #8
   1fd60:	ldr	r1, [fp, #-12]
   1fd64:	mov	r0, r3
   1fd68:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fd6c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd70:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd74:	sub	r3, fp, #32
   1fd78:	mov	r2, #7
   1fd7c:	ldr	r1, [fp, #-12]
   1fd80:	mov	r0, r3
   1fd84:	bl	1f7c4 <__assert_fail@plt+0xe3e0>
   1fd88:	str	r0, [fp, #-20]	; 0xffffffec
   1fd8c:	b	1fda8 <__assert_fail@plt+0xe9c4>
   1fd90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fd98:	str	r2, [r3]
   1fd9c:	ldr	r3, [fp, #-8]
   1fda0:	orr	r3, r3, #2
   1fda4:	b	1fe00 <__assert_fail@plt+0xea1c>
   1fda8:	ldr	r2, [fp, #-8]
   1fdac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdb0:	orr	r3, r2, r3
   1fdb4:	str	r3, [fp, #-8]
   1fdb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdbc:	ldr	r2, [r3]
   1fdc0:	ldr	r3, [fp, #-16]
   1fdc4:	add	r2, r2, r3
   1fdc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdcc:	str	r2, [r3]
   1fdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdd4:	ldr	r3, [r3]
   1fdd8:	ldrb	r3, [r3]
   1fddc:	cmp	r3, #0
   1fde0:	beq	1fdf0 <__assert_fail@plt+0xea0c>
   1fde4:	ldr	r3, [fp, #-8]
   1fde8:	orr	r3, r3, #2
   1fdec:	str	r3, [fp, #-8]
   1fdf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fdf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fdf8:	str	r2, [r3]
   1fdfc:	ldr	r3, [fp, #-8]
   1fe00:	mov	r0, r3
   1fe04:	sub	sp, fp, #4
   1fe08:	ldr	fp, [sp]
   1fe0c:	add	sp, sp, #4
   1fe10:	pop	{pc}		; (ldr pc, [sp], #4)
   1fe14:	str	fp, [sp, #-8]!
   1fe18:	str	lr, [sp, #4]
   1fe1c:	add	fp, sp, #4
   1fe20:	sub	sp, sp, #40	; 0x28
   1fe24:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe28:	str	r1, [fp, #-28]	; 0xffffffe4
   1fe2c:	str	r3, [fp, #-36]	; 0xffffffdc
   1fe30:	mov	r3, r2
   1fe34:	strb	r3, [fp, #-29]	; 0xffffffe3
   1fe38:	movw	r3, #14388	; 0x3834
   1fe3c:	movt	r3, #2
   1fe40:	str	r3, [fp, #-8]
   1fe44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fe48:	sub	r3, r3, #1
   1fe4c:	cmp	r3, #3
   1fe50:	ldrls	pc, [pc, r3, lsl #2]
   1fe54:	b	1fe68 <__assert_fail@plt+0xea84>
   1fe58:	andeq	pc, r1, ip, lsl #29
   1fe5c:	andeq	pc, r1, ip, ror lr	; <UNPREDICTABLE>
   1fe60:	andeq	pc, r1, ip, ror lr	; <UNPREDICTABLE>
   1fe64:	andeq	pc, r1, ip, ror #28
   1fe68:	bl	113c0 <abort@plt>
   1fe6c:	movw	r3, #14392	; 0x3838
   1fe70:	movt	r3, #2
   1fe74:	str	r3, [fp, #-12]
   1fe78:	b	1fe9c <__assert_fail@plt+0xeab8>
   1fe7c:	movw	r3, #14420	; 0x3854
   1fe80:	movt	r3, #2
   1fe84:	str	r3, [fp, #-12]
   1fe88:	b	1fe9c <__assert_fail@plt+0xeab8>
   1fe8c:	movw	r3, #14460	; 0x387c
   1fe90:	movt	r3, #2
   1fe94:	str	r3, [fp, #-12]
   1fe98:	nop	{0}
   1fe9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fea0:	cmp	r3, #0
   1fea4:	bge	1fed8 <__assert_fail@plt+0xeaf4>
   1fea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1feac:	rsb	r3, r3, #0
   1feb0:	ldr	r2, [fp, #-8]
   1feb4:	add	r3, r2, r3
   1feb8:	str	r3, [fp, #-8]
   1febc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1fec0:	strb	r3, [fp, #-20]	; 0xffffffec
   1fec4:	mov	r3, #0
   1fec8:	strb	r3, [fp, #-19]	; 0xffffffed
   1fecc:	sub	r3, fp, #20
   1fed0:	str	r3, [fp, #-16]
   1fed4:	b	1fef0 <__assert_fail@plt+0xeb0c>
   1fed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fedc:	lsl	r3, r3, #4
   1fee0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fee4:	add	r3, r2, r3
   1fee8:	ldr	r3, [r3]
   1feec:	str	r3, [fp, #-16]
   1fef0:	ldr	r0, [fp, #-12]
   1fef4:	bl	11288 <gettext@plt>
   1fef8:	mov	r2, r0
   1fefc:	ldr	r3, [fp, #4]
   1ff00:	str	r3, [sp, #4]
   1ff04:	ldr	r3, [fp, #-16]
   1ff08:	str	r3, [sp]
   1ff0c:	ldr	r3, [fp, #-8]
   1ff10:	mov	r1, #0
   1ff14:	ldr	r0, [fp, #8]
   1ff18:	bl	11210 <error@plt>
   1ff1c:	nop	{0}
   1ff20:	sub	sp, fp, #4
   1ff24:	ldr	fp, [sp]
   1ff28:	add	sp, sp, #4
   1ff2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ff30:	str	fp, [sp, #-8]!
   1ff34:	str	lr, [sp, #4]
   1ff38:	add	fp, sp, #4
   1ff3c:	sub	sp, sp, #24
   1ff40:	str	r0, [fp, #-8]
   1ff44:	str	r1, [fp, #-12]
   1ff48:	str	r3, [fp, #-20]	; 0xffffffec
   1ff4c:	mov	r3, r2
   1ff50:	strb	r3, [fp, #-13]
   1ff54:	movw	r3, #16780	; 0x418c
   1ff58:	movt	r3, #3
   1ff5c:	ldr	r3, [r3]
   1ff60:	ldrb	r2, [fp, #-13]
   1ff64:	str	r3, [sp, #4]
   1ff68:	ldr	r3, [fp, #4]
   1ff6c:	str	r3, [sp]
   1ff70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff74:	ldr	r1, [fp, #-12]
   1ff78:	ldr	r0, [fp, #-8]
   1ff7c:	bl	1fe14 <__assert_fail@plt+0xea30>
   1ff80:	bl	113c0 <abort@plt>
   1ff84:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ff88:	strd	r6, [sp, #8]
   1ff8c:	strd	r8, [sp, #16]
   1ff90:	str	fp, [sp, #24]
   1ff94:	add	fp, sp, #24
   1ff98:	sub	sp, sp, #44	; 0x2c
   1ff9c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ffa0:	str	r1, [fp, #-44]	; 0xffffffd4
   1ffa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffa8:	ldrd	r4, [r3]
   1ffac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ffb0:	mov	r6, r3
   1ffb4:	asr	r7, r6, #31
   1ffb8:	mov	r2, #0
   1ffbc:	mov	r3, #0
   1ffc0:	strd	r2, [fp, #-60]	; 0xffffffc4
   1ffc4:	cmp	r6, #0
   1ffc8:	sbcs	r3, r7, #0
   1ffcc:	bge	1ffe4 <__assert_fail@plt+0xec00>
   1ffd0:	orrs	r3, r4, r5
   1ffd4:	beq	1ffe4 <__assert_fail@plt+0xec00>
   1ffd8:	mov	r2, #1
   1ffdc:	mov	r3, #0
   1ffe0:	strd	r2, [fp, #-60]	; 0xffffffc4
   1ffe4:	mov	r0, #0
   1ffe8:	mov	r1, #0
   1ffec:	mov	r0, r7
   1fff0:	mov	r1, #0
   1fff4:	mov	r2, #0
   1fff8:	mov	r3, #0
   1fffc:	mov	r2, r5
   20000:	mov	r3, #0
   20004:	cmp	r0, #0
   20008:	bne	2002c <__assert_fail@plt+0xec48>
   2000c:	cmp	r2, #0
   20010:	bne	20020 <__assert_fail@plt+0xec3c>
   20014:	umull	r2, r3, r6, r4
   20018:	strd	r2, [fp, #-52]	; 0xffffffcc
   2001c:	b	200f8 <__assert_fail@plt+0xed14>
   20020:	mov	r3, r2
   20024:	mov	r2, r6
   20028:	b	2003c <__assert_fail@plt+0xec58>
   2002c:	cmp	r2, #0
   20030:	bne	200b4 <__assert_fail@plt+0xecd0>
   20034:	mov	r3, r0
   20038:	mov	r2, r4
   2003c:	umull	r8, r9, r6, r4
   20040:	umull	r2, r3, r2, r3
   20044:	mov	r0, r2
   20048:	mov	r1, r3
   2004c:	mov	r2, #0
   20050:	mov	r3, #0
   20054:	mov	r2, r9
   20058:	mov	r3, #0
   2005c:	adds	ip, r0, r2
   20060:	str	ip, [fp, #-68]	; 0xffffffbc
   20064:	adc	r3, r1, r3
   20068:	str	r3, [fp, #-64]	; 0xffffffc0
   2006c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   20070:	mov	r2, #0
   20074:	mov	r3, #0
   20078:	mov	r2, r1
   2007c:	asr	r3, r1, #31
   20080:	cmp	r2, #0
   20084:	bne	200d0 <__assert_fail@plt+0xecec>
   20088:	mov	r2, #0
   2008c:	mov	r3, #0
   20090:	mov	r3, r0
   20094:	mov	r2, #0
   20098:	mov	r0, r8
   2009c:	mov	r1, #0
   200a0:	orr	ip, r2, r0
   200a4:	str	ip, [fp, #-52]	; 0xffffffcc
   200a8:	orr	r3, r3, r1
   200ac:	str	r3, [fp, #-48]	; 0xffffffd0
   200b0:	b	200f8 <__assert_fail@plt+0xed14>
   200b4:	mul	r2, r4, r7
   200b8:	mul	r3, r6, r5
   200bc:	add	r1, r2, r3
   200c0:	umull	r2, r3, r6, r4
   200c4:	add	r1, r1, r3
   200c8:	mov	r3, r1
   200cc:	strd	r2, [fp, #-52]	; 0xffffffcc
   200d0:	mul	r2, r4, r7
   200d4:	mul	r3, r6, r5
   200d8:	add	r1, r2, r3
   200dc:	umull	r2, r3, r6, r4
   200e0:	add	r1, r1, r3
   200e4:	mov	r3, r1
   200e8:	strd	r2, [fp, #-52]	; 0xffffffcc
   200ec:	mov	r2, #1
   200f0:	mov	r3, #0
   200f4:	strd	r2, [fp, #-60]	; 0xffffffc4
   200f8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   200fc:	strd	r2, [fp, #-36]	; 0xffffffdc
   20100:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   20104:	mov	r3, r2
   20108:	and	r3, r3, #1
   2010c:	uxtb	r3, r3
   20110:	cmp	r3, #0
   20114:	beq	20130 <__assert_fail@plt+0xed4c>
   20118:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2011c:	mvn	r2, #0
   20120:	mvn	r3, #0
   20124:	strd	r2, [r1]
   20128:	mov	r3, #1
   2012c:	b	20140 <__assert_fail@plt+0xed5c>
   20130:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   20134:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20138:	strd	r2, [r1]
   2013c:	mov	r3, #0
   20140:	mov	r0, r3
   20144:	sub	sp, fp, #24
   20148:	ldrd	r4, [sp]
   2014c:	ldrd	r6, [sp, #8]
   20150:	ldrd	r8, [sp, #16]
   20154:	ldr	fp, [sp, #24]
   20158:	add	sp, sp, #28
   2015c:	bx	lr
   20160:	str	fp, [sp, #-8]!
   20164:	str	lr, [sp, #4]
   20168:	add	fp, sp, #4
   2016c:	sub	sp, sp, #24
   20170:	str	r0, [fp, #-16]
   20174:	str	r1, [fp, #-20]	; 0xffffffec
   20178:	str	r2, [fp, #-24]	; 0xffffffe8
   2017c:	mov	r3, #0
   20180:	str	r3, [fp, #-8]
   20184:	b	201a4 <__assert_fail@plt+0xedc0>
   20188:	ldr	r1, [fp, #-20]	; 0xffffffec
   2018c:	ldr	r0, [fp, #-16]
   20190:	bl	1ff84 <__assert_fail@plt+0xeba0>
   20194:	mov	r2, r0
   20198:	ldr	r3, [fp, #-8]
   2019c:	orr	r3, r3, r2
   201a0:	str	r3, [fp, #-8]
   201a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   201a8:	sub	r2, r3, #1
   201ac:	str	r2, [fp, #-24]	; 0xffffffe8
   201b0:	cmp	r3, #0
   201b4:	bne	20188 <__assert_fail@plt+0xeda4>
   201b8:	ldr	r3, [fp, #-8]
   201bc:	mov	r0, r3
   201c0:	sub	sp, fp, #4
   201c4:	ldr	fp, [sp]
   201c8:	add	sp, sp, #4
   201cc:	pop	{pc}		; (ldr pc, [sp], #4)
   201d0:	str	fp, [sp, #-8]!
   201d4:	str	lr, [sp, #4]
   201d8:	add	fp, sp, #4
   201dc:	sub	sp, sp, #56	; 0x38
   201e0:	str	r0, [fp, #-48]	; 0xffffffd0
   201e4:	str	r1, [fp, #-52]	; 0xffffffcc
   201e8:	str	r2, [fp, #-56]	; 0xffffffc8
   201ec:	str	r3, [fp, #-60]	; 0xffffffc4
   201f0:	mov	r3, #0
   201f4:	str	r3, [fp, #-8]
   201f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   201fc:	cmp	r3, #0
   20200:	blt	20210 <__assert_fail@plt+0xee2c>
   20204:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20208:	cmp	r3, #36	; 0x24
   2020c:	ble	20230 <__assert_fail@plt+0xee4c>
   20210:	movw	r3, #14548	; 0x38d4
   20214:	movt	r3, #2
   20218:	mov	r2, #85	; 0x55
   2021c:	movw	r1, #14492	; 0x389c
   20220:	movt	r1, #2
   20224:	movw	r0, #14508	; 0x38ac
   20228:	movt	r0, #2
   2022c:	bl	113e4 <__assert_fail@plt>
   20230:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20234:	cmp	r3, #0
   20238:	bne	20244 <__assert_fail@plt+0xee60>
   2023c:	sub	r3, fp, #36	; 0x24
   20240:	b	20248 <__assert_fail@plt+0xee64>
   20244:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20248:	str	r3, [fp, #-32]	; 0xffffffe0
   2024c:	bl	112d0 <__errno_location@plt>
   20250:	mov	r2, r0
   20254:	mov	r3, #0
   20258:	str	r3, [r2]
   2025c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20260:	str	r3, [fp, #-12]
   20264:	ldr	r3, [fp, #-12]
   20268:	ldrb	r3, [r3]
   2026c:	strb	r3, [fp, #-13]
   20270:	b	2028c <__assert_fail@plt+0xeea8>
   20274:	ldr	r3, [fp, #-12]
   20278:	add	r3, r3, #1
   2027c:	str	r3, [fp, #-12]
   20280:	ldr	r3, [fp, #-12]
   20284:	ldrb	r3, [r3]
   20288:	strb	r3, [fp, #-13]
   2028c:	bl	11270 <__ctype_b_loc@plt>
   20290:	mov	r3, r0
   20294:	ldr	r2, [r3]
   20298:	ldrb	r3, [fp, #-13]
   2029c:	lsl	r3, r3, #1
   202a0:	add	r3, r2, r3
   202a4:	ldrh	r3, [r3]
   202a8:	and	r3, r3, #8192	; 0x2000
   202ac:	cmp	r3, #0
   202b0:	bne	20274 <__assert_fail@plt+0xee90>
   202b4:	ldrb	r3, [fp, #-13]
   202b8:	cmp	r3, #45	; 0x2d
   202bc:	bne	202c8 <__assert_fail@plt+0xeee4>
   202c0:	mov	r3, #4
   202c4:	b	20810 <__assert_fail@plt+0xf42c>
   202c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   202cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   202d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   202d4:	bl	11300 <strtoumax@plt>
   202d8:	mov	r2, r0
   202dc:	mov	r3, r1
   202e0:	strd	r2, [fp, #-44]	; 0xffffffd4
   202e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   202e8:	ldr	r3, [r3]
   202ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   202f0:	cmp	r2, r3
   202f4:	bne	20354 <__assert_fail@plt+0xef70>
   202f8:	ldr	r3, [fp, #4]
   202fc:	cmp	r3, #0
   20300:	beq	2034c <__assert_fail@plt+0xef68>
   20304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20308:	ldr	r3, [r3]
   2030c:	ldrb	r3, [r3]
   20310:	cmp	r3, #0
   20314:	beq	2034c <__assert_fail@plt+0xef68>
   20318:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2031c:	ldr	r3, [r3]
   20320:	ldrb	r3, [r3]
   20324:	mov	r1, r3
   20328:	ldr	r0, [fp, #4]
   2032c:	bl	112a0 <strchr@plt>
   20330:	mov	r3, r0
   20334:	cmp	r3, #0
   20338:	beq	2034c <__assert_fail@plt+0xef68>
   2033c:	mov	r2, #1
   20340:	mov	r3, #0
   20344:	strd	r2, [fp, #-44]	; 0xffffffd4
   20348:	b	2038c <__assert_fail@plt+0xefa8>
   2034c:	mov	r3, #4
   20350:	b	20810 <__assert_fail@plt+0xf42c>
   20354:	bl	112d0 <__errno_location@plt>
   20358:	mov	r3, r0
   2035c:	ldr	r3, [r3]
   20360:	cmp	r3, #0
   20364:	beq	2038c <__assert_fail@plt+0xefa8>
   20368:	bl	112d0 <__errno_location@plt>
   2036c:	mov	r3, r0
   20370:	ldr	r3, [r3]
   20374:	cmp	r3, #34	; 0x22
   20378:	beq	20384 <__assert_fail@plt+0xefa0>
   2037c:	mov	r3, #4
   20380:	b	20810 <__assert_fail@plt+0xf42c>
   20384:	mov	r3, #1
   20388:	str	r3, [fp, #-8]
   2038c:	ldr	r3, [fp, #4]
   20390:	cmp	r3, #0
   20394:	bne	203ac <__assert_fail@plt+0xefc8>
   20398:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2039c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   203a0:	strd	r2, [r1]
   203a4:	ldr	r3, [fp, #-8]
   203a8:	b	20810 <__assert_fail@plt+0xf42c>
   203ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   203b0:	ldr	r3, [r3]
   203b4:	ldrb	r3, [r3]
   203b8:	cmp	r3, #0
   203bc:	beq	20800 <__assert_fail@plt+0xf41c>
   203c0:	mov	r3, #1024	; 0x400
   203c4:	str	r3, [fp, #-20]	; 0xffffffec
   203c8:	mov	r3, #1
   203cc:	str	r3, [fp, #-24]	; 0xffffffe8
   203d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   203d4:	ldr	r3, [r3]
   203d8:	ldrb	r3, [r3]
   203dc:	mov	r1, r3
   203e0:	ldr	r0, [fp, #4]
   203e4:	bl	112a0 <strchr@plt>
   203e8:	mov	r3, r0
   203ec:	cmp	r3, #0
   203f0:	bne	2040c <__assert_fail@plt+0xf028>
   203f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   203f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   203fc:	strd	r2, [r1]
   20400:	ldr	r3, [fp, #-8]
   20404:	orr	r3, r3, #2
   20408:	b	20810 <__assert_fail@plt+0xf42c>
   2040c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20410:	ldr	r3, [r3]
   20414:	ldrb	r3, [r3]
   20418:	sub	r3, r3, #69	; 0x45
   2041c:	cmp	r3, #47	; 0x2f
   20420:	ldrls	pc, [pc, r3, lsl #2]
   20424:	b	20578 <__assert_fail@plt+0xf194>
   20428:	andeq	r0, r2, r8, ror #9
   2042c:	andeq	r0, r2, r8, ror r5
   20430:	andeq	r0, r2, r8, ror #9
   20434:	andeq	r0, r2, r8, ror r5
   20438:	andeq	r0, r2, r8, ror r5
   2043c:	andeq	r0, r2, r8, ror r5
   20440:	andeq	r0, r2, r8, ror #9
   20444:	andeq	r0, r2, r8, ror r5
   20448:	andeq	r0, r2, r8, ror #9
   2044c:	andeq	r0, r2, r8, ror r5
   20450:	andeq	r0, r2, r8, ror r5
   20454:	andeq	r0, r2, r8, ror #9
   20458:	andeq	r0, r2, r8, ror r5
   2045c:	andeq	r0, r2, r8, ror r5
   20460:	andeq	r0, r2, r8, ror r5
   20464:	andeq	r0, r2, r8, ror #9
   20468:	andeq	r0, r2, r8, ror r5
   2046c:	andeq	r0, r2, r8, ror r5
   20470:	andeq	r0, r2, r8, ror r5
   20474:	andeq	r0, r2, r8, ror r5
   20478:	andeq	r0, r2, r8, ror #9
   2047c:	andeq	r0, r2, r8, ror #9
   20480:	andeq	r0, r2, r8, ror r5
   20484:	andeq	r0, r2, r8, ror r5
   20488:	andeq	r0, r2, r8, ror r5
   2048c:	andeq	r0, r2, r8, ror r5
   20490:	andeq	r0, r2, r8, ror r5
   20494:	andeq	r0, r2, r8, ror r5
   20498:	andeq	r0, r2, r8, ror r5
   2049c:	andeq	r0, r2, r8, ror r5
   204a0:	andeq	r0, r2, r8, ror r5
   204a4:	andeq	r0, r2, r8, ror r5
   204a8:	andeq	r0, r2, r8, ror r5
   204ac:	andeq	r0, r2, r8, ror r5
   204b0:	andeq	r0, r2, r8, ror #9
   204b4:	andeq	r0, r2, r8, ror r5
   204b8:	andeq	r0, r2, r8, ror r5
   204bc:	andeq	r0, r2, r8, ror r5
   204c0:	andeq	r0, r2, r8, ror #9
   204c4:	andeq	r0, r2, r8, ror r5
   204c8:	andeq	r0, r2, r8, ror #9
   204cc:	andeq	r0, r2, r8, ror r5
   204d0:	andeq	r0, r2, r8, ror r5
   204d4:	andeq	r0, r2, r8, ror r5
   204d8:	andeq	r0, r2, r8, ror r5
   204dc:	andeq	r0, r2, r8, ror r5
   204e0:	andeq	r0, r2, r8, ror r5
   204e4:	andeq	r0, r2, r8, ror #9
   204e8:	mov	r1, #48	; 0x30
   204ec:	ldr	r0, [fp, #4]
   204f0:	bl	112a0 <strchr@plt>
   204f4:	mov	r3, r0
   204f8:	cmp	r3, #0
   204fc:	beq	2056c <__assert_fail@plt+0xf188>
   20500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20504:	ldr	r3, [r3]
   20508:	add	r3, r3, #1
   2050c:	ldrb	r3, [r3]
   20510:	cmp	r3, #68	; 0x44
   20514:	beq	20554 <__assert_fail@plt+0xf170>
   20518:	cmp	r3, #105	; 0x69
   2051c:	beq	2052c <__assert_fail@plt+0xf148>
   20520:	cmp	r3, #66	; 0x42
   20524:	beq	20554 <__assert_fail@plt+0xf170>
   20528:	b	20578 <__assert_fail@plt+0xf194>
   2052c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20530:	ldr	r3, [r3]
   20534:	add	r3, r3, #2
   20538:	ldrb	r3, [r3]
   2053c:	cmp	r3, #66	; 0x42
   20540:	bne	20574 <__assert_fail@plt+0xf190>
   20544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20548:	add	r3, r3, #2
   2054c:	str	r3, [fp, #-24]	; 0xffffffe8
   20550:	b	20574 <__assert_fail@plt+0xf190>
   20554:	mov	r3, #1000	; 0x3e8
   20558:	str	r3, [fp, #-20]	; 0xffffffec
   2055c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20560:	add	r3, r3, #1
   20564:	str	r3, [fp, #-24]	; 0xffffffe8
   20568:	b	20578 <__assert_fail@plt+0xf194>
   2056c:	nop	{0}
   20570:	b	20578 <__assert_fail@plt+0xf194>
   20574:	nop	{0}
   20578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2057c:	ldr	r3, [r3]
   20580:	ldrb	r3, [r3]
   20584:	sub	r3, r3, #66	; 0x42
   20588:	cmp	r3, #53	; 0x35
   2058c:	ldrls	pc, [pc, r3, lsl #2]
   20590:	b	207a0 <__assert_fail@plt+0xf3bc>
   20594:	andeq	r0, r2, r4, lsl #13
   20598:	andeq	r0, r2, r0, lsr #15
   2059c:	andeq	r0, r2, r0, lsr #15
   205a0:	andeq	r0, r2, r8, lsr #13
   205a4:	andeq	r0, r2, r0, lsr #15
   205a8:	andeq	r0, r2, r4, asr #13
   205ac:	andeq	r0, r2, r0, lsr #15
   205b0:	andeq	r0, r2, r0, lsr #15
   205b4:	andeq	r0, r2, r0, lsr #15
   205b8:	andeq	r0, r2, r0, ror #13
   205bc:	andeq	r0, r2, r0, lsr #15
   205c0:	strdeq	r0, [r2], -ip
   205c4:	andeq	r0, r2, r0, lsr #15
   205c8:	andeq	r0, r2, r0, lsr #15
   205cc:	andeq	r0, r2, r8, lsl r7
   205d0:	andeq	r0, r2, r0, lsr #15
   205d4:	andeq	r0, r2, r0, lsr #15
   205d8:	andeq	r0, r2, r0, lsr #15
   205dc:	andeq	r0, r2, r4, lsr r7
   205e0:	andeq	r0, r2, r0, lsr #15
   205e4:	andeq	r0, r2, r0, lsr #15
   205e8:	andeq	r0, r2, r0, lsr #15
   205ec:	andeq	r0, r2, r0, lsr #15
   205f0:	andeq	r0, r2, r8, ror #14
   205f4:	andeq	r0, r2, r4, lsl #15
   205f8:	andeq	r0, r2, r0, lsr #15
   205fc:	andeq	r0, r2, r0, lsr #15
   20600:	andeq	r0, r2, r0, lsr #15
   20604:	andeq	r0, r2, r0, lsr #15
   20608:	andeq	r0, r2, r0, lsr #15
   2060c:	andeq	r0, r2, r0, lsr #15
   20610:	andeq	r0, r2, r0, lsr #15
   20614:	andeq	r0, r2, ip, ror #12
   20618:	muleq	r2, ip, r6
   2061c:	andeq	r0, r2, r0, lsr #15
   20620:	andeq	r0, r2, r0, lsr #15
   20624:	andeq	r0, r2, r0, lsr #15
   20628:	andeq	r0, r2, r4, asr #13
   2062c:	andeq	r0, r2, r0, lsr #15
   20630:	andeq	r0, r2, r0, lsr #15
   20634:	andeq	r0, r2, r0, lsr #15
   20638:	andeq	r0, r2, r0, ror #13
   2063c:	andeq	r0, r2, r0, lsr #15
   20640:	strdeq	r0, [r2], -ip
   20644:	andeq	r0, r2, r0, lsr #15
   20648:	andeq	r0, r2, r0, lsr #15
   2064c:	andeq	r0, r2, r0, lsr #15
   20650:	andeq	r0, r2, r0, lsr #15
   20654:	andeq	r0, r2, r0, lsr #15
   20658:	andeq	r0, r2, r0, lsr #15
   2065c:	andeq	r0, r2, r4, lsr r7
   20660:	andeq	r0, r2, r0, lsr #15
   20664:	andeq	r0, r2, r0, lsr #15
   20668:	andeq	r0, r2, r0, asr r7
   2066c:	sub	r3, fp, #44	; 0x2c
   20670:	mov	r1, #512	; 0x200
   20674:	mov	r0, r3
   20678:	bl	1ff84 <__assert_fail@plt+0xeba0>
   2067c:	str	r0, [fp, #-28]	; 0xffffffe4
   20680:	b	207b8 <__assert_fail@plt+0xf3d4>
   20684:	sub	r3, fp, #44	; 0x2c
   20688:	mov	r1, #1024	; 0x400
   2068c:	mov	r0, r3
   20690:	bl	1ff84 <__assert_fail@plt+0xeba0>
   20694:	str	r0, [fp, #-28]	; 0xffffffe4
   20698:	b	207b8 <__assert_fail@plt+0xf3d4>
   2069c:	mov	r3, #0
   206a0:	str	r3, [fp, #-28]	; 0xffffffe4
   206a4:	b	207b8 <__assert_fail@plt+0xf3d4>
   206a8:	sub	r3, fp, #44	; 0x2c
   206ac:	mov	r2, #6
   206b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   206b4:	mov	r0, r3
   206b8:	bl	20160 <__assert_fail@plt+0xed7c>
   206bc:	str	r0, [fp, #-28]	; 0xffffffe4
   206c0:	b	207b8 <__assert_fail@plt+0xf3d4>
   206c4:	sub	r3, fp, #44	; 0x2c
   206c8:	mov	r2, #3
   206cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   206d0:	mov	r0, r3
   206d4:	bl	20160 <__assert_fail@plt+0xed7c>
   206d8:	str	r0, [fp, #-28]	; 0xffffffe4
   206dc:	b	207b8 <__assert_fail@plt+0xf3d4>
   206e0:	sub	r3, fp, #44	; 0x2c
   206e4:	mov	r2, #1
   206e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   206ec:	mov	r0, r3
   206f0:	bl	20160 <__assert_fail@plt+0xed7c>
   206f4:	str	r0, [fp, #-28]	; 0xffffffe4
   206f8:	b	207b8 <__assert_fail@plt+0xf3d4>
   206fc:	sub	r3, fp, #44	; 0x2c
   20700:	mov	r2, #2
   20704:	ldr	r1, [fp, #-20]	; 0xffffffec
   20708:	mov	r0, r3
   2070c:	bl	20160 <__assert_fail@plt+0xed7c>
   20710:	str	r0, [fp, #-28]	; 0xffffffe4
   20714:	b	207b8 <__assert_fail@plt+0xf3d4>
   20718:	sub	r3, fp, #44	; 0x2c
   2071c:	mov	r2, #5
   20720:	ldr	r1, [fp, #-20]	; 0xffffffec
   20724:	mov	r0, r3
   20728:	bl	20160 <__assert_fail@plt+0xed7c>
   2072c:	str	r0, [fp, #-28]	; 0xffffffe4
   20730:	b	207b8 <__assert_fail@plt+0xf3d4>
   20734:	sub	r3, fp, #44	; 0x2c
   20738:	mov	r2, #4
   2073c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20740:	mov	r0, r3
   20744:	bl	20160 <__assert_fail@plt+0xed7c>
   20748:	str	r0, [fp, #-28]	; 0xffffffe4
   2074c:	b	207b8 <__assert_fail@plt+0xf3d4>
   20750:	sub	r3, fp, #44	; 0x2c
   20754:	mov	r1, #2
   20758:	mov	r0, r3
   2075c:	bl	1ff84 <__assert_fail@plt+0xeba0>
   20760:	str	r0, [fp, #-28]	; 0xffffffe4
   20764:	b	207b8 <__assert_fail@plt+0xf3d4>
   20768:	sub	r3, fp, #44	; 0x2c
   2076c:	mov	r2, #8
   20770:	ldr	r1, [fp, #-20]	; 0xffffffec
   20774:	mov	r0, r3
   20778:	bl	20160 <__assert_fail@plt+0xed7c>
   2077c:	str	r0, [fp, #-28]	; 0xffffffe4
   20780:	b	207b8 <__assert_fail@plt+0xf3d4>
   20784:	sub	r3, fp, #44	; 0x2c
   20788:	mov	r2, #7
   2078c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20790:	mov	r0, r3
   20794:	bl	20160 <__assert_fail@plt+0xed7c>
   20798:	str	r0, [fp, #-28]	; 0xffffffe4
   2079c:	b	207b8 <__assert_fail@plt+0xf3d4>
   207a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   207a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   207a8:	strd	r2, [r1]
   207ac:	ldr	r3, [fp, #-8]
   207b0:	orr	r3, r3, #2
   207b4:	b	20810 <__assert_fail@plt+0xf42c>
   207b8:	ldr	r2, [fp, #-8]
   207bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207c0:	orr	r3, r2, r3
   207c4:	str	r3, [fp, #-8]
   207c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207cc:	ldr	r2, [r3]
   207d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207d4:	add	r2, r2, r3
   207d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207dc:	str	r2, [r3]
   207e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207e4:	ldr	r3, [r3]
   207e8:	ldrb	r3, [r3]
   207ec:	cmp	r3, #0
   207f0:	beq	20800 <__assert_fail@plt+0xf41c>
   207f4:	ldr	r3, [fp, #-8]
   207f8:	orr	r3, r3, #2
   207fc:	str	r3, [fp, #-8]
   20800:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   20804:	ldr	r1, [fp, #-60]	; 0xffffffc4
   20808:	strd	r2, [r1]
   2080c:	ldr	r3, [fp, #-8]
   20810:	mov	r0, r3
   20814:	sub	sp, fp, #4
   20818:	ldr	fp, [sp]
   2081c:	add	sp, sp, #4
   20820:	pop	{pc}		; (ldr pc, [sp], #4)
   20824:	str	fp, [sp, #-8]!
   20828:	str	lr, [sp, #4]
   2082c:	add	fp, sp, #4
   20830:	sub	sp, sp, #16
   20834:	str	r0, [fp, #-16]
   20838:	str	r1, [fp, #-20]	; 0xffffffec
   2083c:	ldr	r3, [fp, #-16]
   20840:	cmp	r3, #0
   20844:	beq	20854 <__assert_fail@plt+0xf470>
   20848:	ldr	r3, [fp, #-20]	; 0xffffffec
   2084c:	cmp	r3, #0
   20850:	bne	20864 <__assert_fail@plt+0xf480>
   20854:	mov	r3, #1
   20858:	str	r3, [fp, #-20]	; 0xffffffec
   2085c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20860:	str	r3, [fp, #-16]
   20864:	mov	ip, #0
   20868:	ldr	r2, [fp, #-16]
   2086c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20870:	umull	r0, r1, r2, r3
   20874:	mov	r2, #0
   20878:	mov	r3, #0
   2087c:	mov	r2, r1
   20880:	mov	r3, #0
   20884:	cmp	r2, #0
   20888:	beq	20890 <__assert_fail@plt+0xf4ac>
   2088c:	mov	ip, #1
   20890:	cmp	r0, #0
   20894:	bge	2089c <__assert_fail@plt+0xf4b8>
   20898:	mov	ip, #1
   2089c:	mov	r3, ip
   208a0:	and	r3, r3, #1
   208a4:	uxtb	r3, r3
   208a8:	cmp	r3, #0
   208ac:	beq	208c8 <__assert_fail@plt+0xf4e4>
   208b0:	bl	112d0 <__errno_location@plt>
   208b4:	mov	r2, r0
   208b8:	mov	r3, #12
   208bc:	str	r3, [r2]
   208c0:	mov	r3, #0
   208c4:	b	208e0 <__assert_fail@plt+0xf4fc>
   208c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   208cc:	ldr	r0, [fp, #-16]
   208d0:	bl	11084 <calloc@plt>
   208d4:	mov	r3, r0
   208d8:	str	r3, [fp, #-8]
   208dc:	ldr	r3, [fp, #-8]
   208e0:	mov	r0, r3
   208e4:	sub	sp, fp, #4
   208e8:	ldr	fp, [sp]
   208ec:	add	sp, sp, #4
   208f0:	pop	{pc}		; (ldr pc, [sp], #4)
   208f4:	str	fp, [sp, #-8]!
   208f8:	str	lr, [sp, #4]
   208fc:	add	fp, sp, #4
   20900:	sub	sp, sp, #16
   20904:	str	r0, [fp, #-16]
   20908:	ldr	r3, [fp, #-16]
   2090c:	cmp	r3, #0
   20910:	bne	2091c <__assert_fail@plt+0xf538>
   20914:	mov	r3, #1
   20918:	str	r3, [fp, #-16]
   2091c:	mov	r2, #0
   20920:	ldr	r3, [fp, #-16]
   20924:	cmp	r3, #0
   20928:	bge	20930 <__assert_fail@plt+0xf54c>
   2092c:	mov	r2, #1
   20930:	mov	r3, r2
   20934:	and	r3, r3, #1
   20938:	uxtb	r3, r3
   2093c:	cmp	r3, #0
   20940:	beq	2095c <__assert_fail@plt+0xf578>
   20944:	bl	112d0 <__errno_location@plt>
   20948:	mov	r2, r0
   2094c:	mov	r3, #12
   20950:	str	r3, [r2]
   20954:	mov	r3, #0
   20958:	b	20970 <__assert_fail@plt+0xf58c>
   2095c:	ldr	r0, [fp, #-16]
   20960:	bl	11228 <malloc@plt>
   20964:	mov	r3, r0
   20968:	str	r3, [fp, #-8]
   2096c:	ldr	r3, [fp, #-8]
   20970:	mov	r0, r3
   20974:	sub	sp, fp, #4
   20978:	ldr	fp, [sp]
   2097c:	add	sp, sp, #4
   20980:	pop	{pc}		; (ldr pc, [sp], #4)
   20984:	str	fp, [sp, #-8]!
   20988:	str	lr, [sp, #4]
   2098c:	add	fp, sp, #4
   20990:	sub	sp, sp, #16
   20994:	str	r0, [fp, #-16]
   20998:	str	r1, [fp, #-20]	; 0xffffffec
   2099c:	ldr	r3, [fp, #-16]
   209a0:	cmp	r3, #0
   209a4:	bne	209b8 <__assert_fail@plt+0xf5d4>
   209a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   209ac:	bl	208f4 <__assert_fail@plt+0xf510>
   209b0:	mov	r3, r0
   209b4:	b	20a28 <__assert_fail@plt+0xf644>
   209b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   209bc:	cmp	r3, #0
   209c0:	bne	209d4 <__assert_fail@plt+0xf5f0>
   209c4:	ldr	r0, [fp, #-16]
   209c8:	bl	17278 <__assert_fail@plt+0x5e94>
   209cc:	mov	r3, #0
   209d0:	b	20a28 <__assert_fail@plt+0xf644>
   209d4:	mov	r2, #0
   209d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   209dc:	cmp	r3, #0
   209e0:	bge	209e8 <__assert_fail@plt+0xf604>
   209e4:	mov	r2, #1
   209e8:	mov	r3, r2
   209ec:	and	r3, r3, #1
   209f0:	uxtb	r3, r3
   209f4:	cmp	r3, #0
   209f8:	beq	20a14 <__assert_fail@plt+0xf630>
   209fc:	bl	112d0 <__errno_location@plt>
   20a00:	mov	r2, r0
   20a04:	mov	r3, #12
   20a08:	str	r3, [r2]
   20a0c:	mov	r3, #0
   20a10:	b	20a28 <__assert_fail@plt+0xf644>
   20a14:	ldr	r1, [fp, #-20]	; 0xffffffec
   20a18:	ldr	r0, [fp, #-16]
   20a1c:	bl	11174 <realloc@plt>
   20a20:	str	r0, [fp, #-8]
   20a24:	ldr	r3, [fp, #-8]
   20a28:	mov	r0, r3
   20a2c:	sub	sp, fp, #4
   20a30:	ldr	fp, [sp]
   20a34:	add	sp, sp, #4
   20a38:	pop	{pc}		; (ldr pc, [sp], #4)
   20a3c:	strd	r4, [sp, #-16]!
   20a40:	str	fp, [sp, #8]
   20a44:	str	lr, [sp, #12]
   20a48:	add	fp, sp, #12
   20a4c:	sub	sp, sp, #16
   20a50:	str	r0, [fp, #-24]	; 0xffffffe8
   20a54:	str	r1, [fp, #-28]	; 0xffffffe4
   20a58:	ldr	r5, [fp, #-24]	; 0xffffffe8
   20a5c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   20a60:	cmp	r5, r4
   20a64:	bne	20a70 <__assert_fail@plt+0xf68c>
   20a68:	mov	r3, #0
   20a6c:	b	20ad0 <__assert_fail@plt+0xf6ec>
   20a70:	ldrb	r3, [r5]
   20a74:	mov	r0, r3
   20a78:	bl	21798 <__assert_fail@plt+0x103b4>
   20a7c:	mov	r3, r0
   20a80:	strb	r3, [fp, #-13]
   20a84:	ldrb	r3, [r4]
   20a88:	mov	r0, r3
   20a8c:	bl	21798 <__assert_fail@plt+0x103b4>
   20a90:	mov	r3, r0
   20a94:	strb	r3, [fp, #-14]
   20a98:	ldrb	r3, [fp, #-13]
   20a9c:	cmp	r3, #0
   20aa0:	beq	20ac0 <__assert_fail@plt+0xf6dc>
   20aa4:	add	r5, r5, #1
   20aa8:	add	r4, r4, #1
   20aac:	ldrb	r2, [fp, #-13]
   20ab0:	ldrb	r3, [fp, #-14]
   20ab4:	cmp	r2, r3
   20ab8:	beq	20a70 <__assert_fail@plt+0xf68c>
   20abc:	b	20ac4 <__assert_fail@plt+0xf6e0>
   20ac0:	nop	{0}
   20ac4:	ldrb	r2, [fp, #-13]
   20ac8:	ldrb	r3, [fp, #-14]
   20acc:	sub	r3, r2, r3
   20ad0:	mov	r0, r3
   20ad4:	sub	sp, fp, #12
   20ad8:	ldrd	r4, [sp]
   20adc:	ldr	fp, [sp, #8]
   20ae0:	add	sp, sp, #12
   20ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ae8:	str	fp, [sp, #-8]!
   20aec:	str	lr, [sp, #4]
   20af0:	add	fp, sp, #4
   20af4:	sub	sp, sp, #16
   20af8:	str	r0, [fp, #-16]
   20afc:	ldr	r0, [fp, #-16]
   20b00:	bl	111ec <__fpending@plt>
   20b04:	mov	r3, r0
   20b08:	cmp	r3, #0
   20b0c:	movne	r3, #1
   20b10:	moveq	r3, #0
   20b14:	strb	r3, [fp, #-5]
   20b18:	ldr	r0, [fp, #-16]
   20b1c:	bl	111f8 <ferror_unlocked@plt>
   20b20:	mov	r3, r0
   20b24:	cmp	r3, #0
   20b28:	movne	r3, #1
   20b2c:	moveq	r3, #0
   20b30:	strb	r3, [fp, #-6]
   20b34:	ldr	r0, [fp, #-16]
   20b38:	bl	16f9c <__assert_fail@plt+0x5bb8>
   20b3c:	mov	r3, r0
   20b40:	cmp	r3, #0
   20b44:	movne	r3, #1
   20b48:	moveq	r3, #0
   20b4c:	strb	r3, [fp, #-7]
   20b50:	ldrb	r3, [fp, #-6]
   20b54:	cmp	r3, #0
   20b58:	bne	20b88 <__assert_fail@plt+0xf7a4>
   20b5c:	ldrb	r3, [fp, #-7]
   20b60:	cmp	r3, #0
   20b64:	beq	20bb4 <__assert_fail@plt+0xf7d0>
   20b68:	ldrb	r3, [fp, #-5]
   20b6c:	cmp	r3, #0
   20b70:	bne	20b88 <__assert_fail@plt+0xf7a4>
   20b74:	bl	112d0 <__errno_location@plt>
   20b78:	mov	r3, r0
   20b7c:	ldr	r3, [r3]
   20b80:	cmp	r3, #9
   20b84:	beq	20bb4 <__assert_fail@plt+0xf7d0>
   20b88:	ldrb	r3, [fp, #-7]
   20b8c:	eor	r3, r3, #1
   20b90:	uxtb	r3, r3
   20b94:	cmp	r3, #0
   20b98:	beq	20bac <__assert_fail@plt+0xf7c8>
   20b9c:	bl	112d0 <__errno_location@plt>
   20ba0:	mov	r2, r0
   20ba4:	mov	r3, #0
   20ba8:	str	r3, [r2]
   20bac:	mvn	r3, #0
   20bb0:	b	20bb8 <__assert_fail@plt+0xf7d4>
   20bb4:	mov	r3, #0
   20bb8:	mov	r0, r3
   20bbc:	sub	sp, fp, #4
   20bc0:	ldr	fp, [sp]
   20bc4:	add	sp, sp, #4
   20bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   20bcc:	push	{r1, r2, r3}
   20bd0:	str	fp, [sp, #-8]!
   20bd4:	str	lr, [sp, #4]
   20bd8:	add	fp, sp, #4
   20bdc:	sub	sp, sp, #36	; 0x24
   20be0:	str	r0, [fp, #-36]	; 0xffffffdc
   20be4:	mvn	r3, #0
   20be8:	str	r3, [fp, #-12]
   20bec:	add	r3, fp, #8
   20bf0:	str	r3, [fp, #-32]	; 0xffffffe0
   20bf4:	ldr	r3, [fp, #4]
   20bf8:	cmp	r3, #0
   20bfc:	beq	20c14 <__assert_fail@plt+0xf830>
   20c00:	ldr	r3, [fp, #4]
   20c04:	movw	r2, #1030	; 0x406
   20c08:	cmp	r3, r2
   20c0c:	beq	20c3c <__assert_fail@plt+0xf858>
   20c10:	b	20c64 <__assert_fail@plt+0xf880>
   20c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20c18:	add	r2, r3, #4
   20c1c:	str	r2, [fp, #-32]	; 0xffffffe0
   20c20:	ldr	r3, [r3]
   20c24:	str	r3, [fp, #-16]
   20c28:	ldr	r1, [fp, #-16]
   20c2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20c30:	bl	20e10 <__assert_fail@plt+0xfa2c>
   20c34:	str	r0, [fp, #-12]
   20c38:	b	20df0 <__assert_fail@plt+0xfa0c>
   20c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20c40:	add	r2, r3, #4
   20c44:	str	r2, [fp, #-32]	; 0xffffffe0
   20c48:	ldr	r3, [r3]
   20c4c:	str	r3, [fp, #-20]	; 0xffffffec
   20c50:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20c58:	bl	20e54 <__assert_fail@plt+0xfa70>
   20c5c:	str	r0, [fp, #-12]
   20c60:	b	20df0 <__assert_fail@plt+0xfa0c>
   20c64:	ldr	r3, [fp, #4]
   20c68:	cmp	r3, #11
   20c6c:	beq	20d80 <__assert_fail@plt+0xf99c>
   20c70:	ldr	r3, [fp, #4]
   20c74:	cmp	r3, #11
   20c78:	bgt	20d00 <__assert_fail@plt+0xf91c>
   20c7c:	ldr	r3, [fp, #4]
   20c80:	cmp	r3, #3
   20c84:	beq	20d80 <__assert_fail@plt+0xf99c>
   20c88:	ldr	r3, [fp, #4]
   20c8c:	cmp	r3, #3
   20c90:	bgt	20cbc <__assert_fail@plt+0xf8d8>
   20c94:	ldr	r3, [fp, #4]
   20c98:	cmp	r3, #1
   20c9c:	beq	20d80 <__assert_fail@plt+0xf99c>
   20ca0:	ldr	r3, [fp, #4]
   20ca4:	cmp	r3, #1
   20ca8:	bgt	20d94 <__assert_fail@plt+0xf9b0>
   20cac:	ldr	r3, [fp, #4]
   20cb0:	cmp	r3, #0
   20cb4:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20cb8:	b	20dc0 <__assert_fail@plt+0xf9dc>
   20cbc:	ldr	r3, [fp, #4]
   20cc0:	cmp	r3, #8
   20cc4:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20cc8:	ldr	r3, [fp, #4]
   20ccc:	cmp	r3, #8
   20cd0:	bgt	20ce4 <__assert_fail@plt+0xf900>
   20cd4:	ldr	r3, [fp, #4]
   20cd8:	cmp	r3, #4
   20cdc:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20ce0:	b	20dc0 <__assert_fail@plt+0xf9dc>
   20ce4:	ldr	r3, [fp, #4]
   20ce8:	cmp	r3, #9
   20cec:	beq	20d80 <__assert_fail@plt+0xf99c>
   20cf0:	ldr	r3, [fp, #4]
   20cf4:	cmp	r3, #10
   20cf8:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20cfc:	b	20dc0 <__assert_fail@plt+0xf9dc>
   20d00:	ldr	r3, [fp, #4]
   20d04:	movw	r2, #1031	; 0x407
   20d08:	cmp	r3, r2
   20d0c:	bgt	20d50 <__assert_fail@plt+0xf96c>
   20d10:	ldr	r3, [fp, #4]
   20d14:	movw	r2, #1030	; 0x406
   20d18:	cmp	r3, r2
   20d1c:	bge	20d94 <__assert_fail@plt+0xf9b0>
   20d20:	ldr	r3, [fp, #4]
   20d24:	movw	r2, #1025	; 0x401
   20d28:	cmp	r3, r2
   20d2c:	beq	20d80 <__assert_fail@plt+0xf99c>
   20d30:	ldr	r3, [fp, #4]
   20d34:	movw	r2, #1026	; 0x402
   20d38:	cmp	r3, r2
   20d3c:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20d40:	ldr	r3, [fp, #4]
   20d44:	cmp	r3, #1024	; 0x400
   20d48:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20d4c:	b	20dc0 <__assert_fail@plt+0xf9dc>
   20d50:	ldr	r3, [fp, #4]
   20d54:	movw	r2, #1033	; 0x409
   20d58:	cmp	r3, r2
   20d5c:	beq	20d94 <__assert_fail@plt+0xf9b0>
   20d60:	ldr	r3, [fp, #4]
   20d64:	movw	r2, #1033	; 0x409
   20d68:	cmp	r3, r2
   20d6c:	blt	20d80 <__assert_fail@plt+0xf99c>
   20d70:	ldr	r3, [fp, #4]
   20d74:	movw	r2, #1034	; 0x40a
   20d78:	cmp	r3, r2
   20d7c:	bne	20dc0 <__assert_fail@plt+0xf9dc>
   20d80:	ldr	r1, [fp, #4]
   20d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20d88:	bl	11330 <fcntl64@plt>
   20d8c:	str	r0, [fp, #-12]
   20d90:	b	20dec <__assert_fail@plt+0xfa08>
   20d94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20d98:	add	r2, r3, #4
   20d9c:	str	r2, [fp, #-32]	; 0xffffffe0
   20da0:	ldr	r3, [r3]
   20da4:	str	r3, [fp, #-24]	; 0xffffffe8
   20da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20dac:	ldr	r1, [fp, #4]
   20db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20db4:	bl	11330 <fcntl64@plt>
   20db8:	str	r0, [fp, #-12]
   20dbc:	b	20dec <__assert_fail@plt+0xfa08>
   20dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dc4:	add	r2, r3, #4
   20dc8:	str	r2, [fp, #-32]	; 0xffffffe0
   20dcc:	ldr	r3, [r3]
   20dd0:	str	r3, [fp, #-28]	; 0xffffffe4
   20dd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20dd8:	ldr	r1, [fp, #4]
   20ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20de0:	bl	11330 <fcntl64@plt>
   20de4:	str	r0, [fp, #-12]
   20de8:	nop	{0}
   20dec:	nop	{0}
   20df0:	ldr	r3, [fp, #-12]
   20df4:	mov	r0, r3
   20df8:	sub	sp, fp, #4
   20dfc:	ldr	fp, [sp]
   20e00:	ldr	lr, [sp, #4]
   20e04:	add	sp, sp, #8
   20e08:	add	sp, sp, #12
   20e0c:	bx	lr
   20e10:	str	fp, [sp, #-8]!
   20e14:	str	lr, [sp, #4]
   20e18:	add	fp, sp, #4
   20e1c:	sub	sp, sp, #16
   20e20:	str	r0, [fp, #-16]
   20e24:	str	r1, [fp, #-20]	; 0xffffffec
   20e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   20e2c:	mov	r1, #0
   20e30:	ldr	r0, [fp, #-16]
   20e34:	bl	11330 <fcntl64@plt>
   20e38:	str	r0, [fp, #-8]
   20e3c:	ldr	r3, [fp, #-8]
   20e40:	mov	r0, r3
   20e44:	sub	sp, fp, #4
   20e48:	ldr	fp, [sp]
   20e4c:	add	sp, sp, #4
   20e50:	pop	{pc}		; (ldr pc, [sp], #4)
   20e54:	str	fp, [sp, #-8]!
   20e58:	str	lr, [sp, #4]
   20e5c:	add	fp, sp, #4
   20e60:	sub	sp, sp, #24
   20e64:	str	r0, [fp, #-24]	; 0xffffffe8
   20e68:	str	r1, [fp, #-28]	; 0xffffffe4
   20e6c:	movw	r3, #17384	; 0x43e8
   20e70:	movt	r3, #3
   20e74:	ldr	r3, [r3]
   20e78:	cmp	r3, #0
   20e7c:	blt	20ef8 <__assert_fail@plt+0xfb14>
   20e80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20e84:	movw	r1, #1030	; 0x406
   20e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20e8c:	bl	11330 <fcntl64@plt>
   20e90:	str	r0, [fp, #-8]
   20e94:	ldr	r3, [fp, #-8]
   20e98:	cmp	r3, #0
   20e9c:	bge	20eb4 <__assert_fail@plt+0xfad0>
   20ea0:	bl	112d0 <__errno_location@plt>
   20ea4:	mov	r3, r0
   20ea8:	ldr	r3, [r3]
   20eac:	cmp	r3, #22
   20eb0:	beq	20ec8 <__assert_fail@plt+0xfae4>
   20eb4:	movw	r3, #17384	; 0x43e8
   20eb8:	movt	r3, #3
   20ebc:	mov	r2, #1
   20ec0:	str	r2, [r3]
   20ec4:	b	20f08 <__assert_fail@plt+0xfb24>
   20ec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20ed0:	bl	20e10 <__assert_fail@plt+0xfa2c>
   20ed4:	str	r0, [fp, #-8]
   20ed8:	ldr	r3, [fp, #-8]
   20edc:	cmp	r3, #0
   20ee0:	blt	20f08 <__assert_fail@plt+0xfb24>
   20ee4:	movw	r3, #17384	; 0x43e8
   20ee8:	movt	r3, #3
   20eec:	mvn	r2, #0
   20ef0:	str	r2, [r3]
   20ef4:	b	20f08 <__assert_fail@plt+0xfb24>
   20ef8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20f00:	bl	20e10 <__assert_fail@plt+0xfa2c>
   20f04:	str	r0, [fp, #-8]
   20f08:	ldr	r3, [fp, #-8]
   20f0c:	cmp	r3, #0
   20f10:	blt	20f98 <__assert_fail@plt+0xfbb4>
   20f14:	movw	r3, #17384	; 0x43e8
   20f18:	movt	r3, #3
   20f1c:	ldr	r3, [r3]
   20f20:	cmn	r3, #1
   20f24:	bne	20f98 <__assert_fail@plt+0xfbb4>
   20f28:	mov	r1, #1
   20f2c:	ldr	r0, [fp, #-8]
   20f30:	bl	11330 <fcntl64@plt>
   20f34:	str	r0, [fp, #-12]
   20f38:	ldr	r3, [fp, #-12]
   20f3c:	cmp	r3, #0
   20f40:	blt	20f68 <__assert_fail@plt+0xfb84>
   20f44:	ldr	r3, [fp, #-12]
   20f48:	orr	r3, r3, #1
   20f4c:	mov	r2, r3
   20f50:	mov	r1, #2
   20f54:	ldr	r0, [fp, #-8]
   20f58:	bl	11330 <fcntl64@plt>
   20f5c:	mov	r3, r0
   20f60:	cmn	r3, #1
   20f64:	bne	20f98 <__assert_fail@plt+0xfbb4>
   20f68:	bl	112d0 <__errno_location@plt>
   20f6c:	mov	r3, r0
   20f70:	ldr	r3, [r3]
   20f74:	str	r3, [fp, #-16]
   20f78:	ldr	r0, [fp, #-8]
   20f7c:	bl	113cc <close@plt>
   20f80:	bl	112d0 <__errno_location@plt>
   20f84:	mov	r2, r0
   20f88:	ldr	r3, [fp, #-16]
   20f8c:	str	r3, [r2]
   20f90:	mvn	r3, #0
   20f94:	str	r3, [fp, #-8]
   20f98:	ldr	r3, [fp, #-8]
   20f9c:	mov	r0, r3
   20fa0:	sub	sp, fp, #4
   20fa4:	ldr	fp, [sp]
   20fa8:	add	sp, sp, #4
   20fac:	pop	{pc}		; (ldr pc, [sp], #4)
   20fb0:	str	fp, [sp, #-8]!
   20fb4:	str	lr, [sp, #4]
   20fb8:	add	fp, sp, #4
   20fbc:	bl	112d0 <__errno_location@plt>
   20fc0:	mov	r2, r0
   20fc4:	mov	r3, #12
   20fc8:	str	r3, [r2]
   20fcc:	mov	r3, #0
   20fd0:	mov	r0, r3
   20fd4:	sub	sp, fp, #4
   20fd8:	ldr	fp, [sp]
   20fdc:	add	sp, sp, #4
   20fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   20fe4:	str	fp, [sp, #-8]!
   20fe8:	str	lr, [sp, #4]
   20fec:	add	fp, sp, #4
   20ff0:	sub	sp, sp, #8
   20ff4:	str	r0, [fp, #-8]
   20ff8:	ldr	r3, [fp, #-8]
   20ffc:	mov	r0, r3
   21000:	bl	208f4 <__assert_fail@plt+0xf510>
   21004:	mov	r3, r0
   21008:	mov	r0, r3
   2100c:	sub	sp, fp, #4
   21010:	ldr	fp, [sp]
   21014:	add	sp, sp, #4
   21018:	pop	{pc}		; (ldr pc, [sp], #4)
   2101c:	str	fp, [sp, #-8]!
   21020:	str	lr, [sp, #4]
   21024:	add	fp, sp, #4
   21028:	sub	sp, sp, #8
   2102c:	str	r0, [fp, #-8]
   21030:	str	r1, [fp, #-12]
   21034:	ldr	r3, [fp, #-12]
   21038:	cmp	r3, #0
   2103c:	moveq	r3, #1
   21040:	movne	r3, #0
   21044:	uxtb	r3, r3
   21048:	mov	r2, r3
   2104c:	ldr	r3, [fp, #-12]
   21050:	orr	r3, r2, r3
   21054:	mov	r1, r3
   21058:	ldr	r0, [fp, #-8]
   2105c:	bl	20984 <__assert_fail@plt+0xf5a0>
   21060:	mov	r3, r0
   21064:	mov	r0, r3
   21068:	sub	sp, fp, #4
   2106c:	ldr	fp, [sp]
   21070:	add	sp, sp, #4
   21074:	pop	{pc}		; (ldr pc, [sp], #4)
   21078:	str	fp, [sp, #-8]!
   2107c:	str	lr, [sp, #4]
   21080:	add	fp, sp, #4
   21084:	sub	sp, sp, #8
   21088:	str	r0, [fp, #-8]
   2108c:	str	r1, [fp, #-12]
   21090:	ldr	r3, [fp, #-8]
   21094:	ldr	r2, [fp, #-12]
   21098:	mov	r1, r2
   2109c:	mov	r0, r3
   210a0:	bl	20824 <__assert_fail@plt+0xf440>
   210a4:	mov	r3, r0
   210a8:	mov	r0, r3
   210ac:	sub	sp, fp, #4
   210b0:	ldr	fp, [sp]
   210b4:	add	sp, sp, #4
   210b8:	pop	{pc}		; (ldr pc, [sp], #4)
   210bc:	str	fp, [sp, #-8]!
   210c0:	str	lr, [sp, #4]
   210c4:	add	fp, sp, #4
   210c8:	sub	sp, sp, #16
   210cc:	str	r0, [fp, #-8]
   210d0:	str	r1, [fp, #-12]
   210d4:	str	r2, [fp, #-16]
   210d8:	ldr	r3, [fp, #-12]
   210dc:	cmp	r3, #0
   210e0:	beq	210f0 <__assert_fail@plt+0xfd0c>
   210e4:	ldr	r3, [fp, #-16]
   210e8:	cmp	r3, #0
   210ec:	bne	21100 <__assert_fail@plt+0xfd1c>
   210f0:	mov	r3, #1
   210f4:	str	r3, [fp, #-16]
   210f8:	ldr	r3, [fp, #-16]
   210fc:	str	r3, [fp, #-12]
   21100:	ldr	r3, [fp, #-12]
   21104:	ldr	r2, [fp, #-16]
   21108:	mov	r1, r3
   2110c:	ldr	r0, [fp, #-8]
   21110:	bl	2124c <__assert_fail@plt+0xfe68>
   21114:	mov	r3, r0
   21118:	mov	r0, r3
   2111c:	sub	sp, fp, #4
   21120:	ldr	fp, [sp]
   21124:	add	sp, sp, #4
   21128:	pop	{pc}		; (ldr pc, [sp], #4)
   2112c:	str	fp, [sp, #-8]!
   21130:	str	lr, [sp, #4]
   21134:	add	fp, sp, #4
   21138:	sub	sp, sp, #8
   2113c:	mov	r0, #14
   21140:	bl	11360 <nl_langinfo@plt>
   21144:	str	r0, [fp, #-8]
   21148:	ldr	r3, [fp, #-8]
   2114c:	cmp	r3, #0
   21150:	bne	21160 <__assert_fail@plt+0xfd7c>
   21154:	movw	r3, #14560	; 0x38e0
   21158:	movt	r3, #2
   2115c:	str	r3, [fp, #-8]
   21160:	ldr	r3, [fp, #-8]
   21164:	ldrb	r3, [r3]
   21168:	cmp	r3, #0
   2116c:	bne	2117c <__assert_fail@plt+0xfd98>
   21170:	movw	r3, #14564	; 0x38e4
   21174:	movt	r3, #2
   21178:	str	r3, [fp, #-8]
   2117c:	ldr	r3, [fp, #-8]
   21180:	mov	r0, r3
   21184:	sub	sp, fp, #4
   21188:	ldr	fp, [sp]
   2118c:	add	sp, sp, #4
   21190:	pop	{pc}		; (ldr pc, [sp], #4)
   21194:	str	fp, [sp, #-8]!
   21198:	str	lr, [sp, #4]
   2119c:	add	fp, sp, #4
   211a0:	sub	sp, sp, #32
   211a4:	str	r0, [fp, #-24]	; 0xffffffe8
   211a8:	str	r1, [fp, #-28]	; 0xffffffe4
   211ac:	str	r2, [fp, #-32]	; 0xffffffe0
   211b0:	str	r3, [fp, #-36]	; 0xffffffdc
   211b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   211b8:	cmp	r3, #0
   211bc:	bne	211c8 <__assert_fail@plt+0xfde4>
   211c0:	sub	r3, fp, #16
   211c4:	str	r3, [fp, #-24]	; 0xffffffe8
   211c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   211cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   211d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   211d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   211d8:	bl	11204 <mbrtowc@plt>
   211dc:	str	r0, [fp, #-8]
   211e0:	ldr	r3, [fp, #-8]
   211e4:	cmn	r3, #3
   211e8:	bls	21234 <__assert_fail@plt+0xfe50>
   211ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   211f0:	cmp	r3, #0
   211f4:	beq	21234 <__assert_fail@plt+0xfe50>
   211f8:	mov	r0, #0
   211fc:	bl	17488 <__assert_fail@plt+0x60a4>
   21200:	mov	r3, r0
   21204:	eor	r3, r3, #1
   21208:	uxtb	r3, r3
   2120c:	cmp	r3, #0
   21210:	beq	21234 <__assert_fail@plt+0xfe50>
   21214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21218:	ldrb	r3, [r3]
   2121c:	strb	r3, [fp, #-9]
   21220:	ldrb	r2, [fp, #-9]
   21224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21228:	str	r2, [r3]
   2122c:	mov	r3, #1
   21230:	b	21238 <__assert_fail@plt+0xfe54>
   21234:	ldr	r3, [fp, #-8]
   21238:	mov	r0, r3
   2123c:	sub	sp, fp, #4
   21240:	ldr	fp, [sp]
   21244:	add	sp, sp, #4
   21248:	pop	{pc}		; (ldr pc, [sp], #4)
   2124c:	str	fp, [sp, #-8]!
   21250:	str	lr, [sp, #4]
   21254:	add	fp, sp, #4
   21258:	sub	sp, sp, #24
   2125c:	str	r0, [fp, #-16]
   21260:	str	r1, [fp, #-20]	; 0xffffffec
   21264:	str	r2, [fp, #-24]	; 0xffffffe8
   21268:	mov	ip, #0
   2126c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21274:	umull	r0, r1, r2, r3
   21278:	mov	r2, #0
   2127c:	mov	r3, #0
   21280:	mov	r2, r1
   21284:	mov	r3, #0
   21288:	cmp	r2, #0
   2128c:	beq	21294 <__assert_fail@plt+0xfeb0>
   21290:	mov	ip, #1
   21294:	mov	r3, r0
   21298:	str	r3, [fp, #-8]
   2129c:	mov	r3, ip
   212a0:	and	r3, r3, #1
   212a4:	uxtb	r3, r3
   212a8:	cmp	r3, #0
   212ac:	beq	212c8 <__assert_fail@plt+0xfee4>
   212b0:	bl	112d0 <__errno_location@plt>
   212b4:	mov	r2, r0
   212b8:	mov	r3, #12
   212bc:	str	r3, [r2]
   212c0:	mov	r3, #0
   212c4:	b	212dc <__assert_fail@plt+0xfef8>
   212c8:	ldr	r3, [fp, #-8]
   212cc:	mov	r1, r3
   212d0:	ldr	r0, [fp, #-16]
   212d4:	bl	20984 <__assert_fail@plt+0xf5a0>
   212d8:	mov	r3, r0
   212dc:	mov	r0, r3
   212e0:	sub	sp, fp, #4
   212e4:	ldr	fp, [sp]
   212e8:	add	sp, sp, #4
   212ec:	pop	{pc}		; (ldr pc, [sp], #4)
   212f0:	push	{fp}		; (str fp, [sp, #-4]!)
   212f4:	add	fp, sp, #0
   212f8:	sub	sp, sp, #12
   212fc:	str	r0, [fp, #-8]
   21300:	ldr	r3, [fp, #-8]
   21304:	cmp	r3, #90	; 0x5a
   21308:	bgt	2132c <__assert_fail@plt+0xff48>
   2130c:	ldr	r3, [fp, #-8]
   21310:	cmp	r3, #65	; 0x41
   21314:	bge	2133c <__assert_fail@plt+0xff58>
   21318:	ldr	r3, [fp, #-8]
   2131c:	sub	r3, r3, #48	; 0x30
   21320:	cmp	r3, #9
   21324:	bhi	21344 <__assert_fail@plt+0xff60>
   21328:	b	2133c <__assert_fail@plt+0xff58>
   2132c:	ldr	r3, [fp, #-8]
   21330:	sub	r3, r3, #97	; 0x61
   21334:	cmp	r3, #25
   21338:	bhi	21344 <__assert_fail@plt+0xff60>
   2133c:	mov	r3, #1
   21340:	b	21348 <__assert_fail@plt+0xff64>
   21344:	mov	r3, #0
   21348:	mov	r0, r3
   2134c:	add	sp, fp, #0
   21350:	pop	{fp}		; (ldr fp, [sp], #4)
   21354:	bx	lr
   21358:	push	{fp}		; (str fp, [sp, #-4]!)
   2135c:	add	fp, sp, #0
   21360:	sub	sp, sp, #12
   21364:	str	r0, [fp, #-8]
   21368:	ldr	r3, [fp, #-8]
   2136c:	cmp	r3, #65	; 0x41
   21370:	blt	21398 <__assert_fail@plt+0xffb4>
   21374:	ldr	r3, [fp, #-8]
   21378:	cmp	r3, #90	; 0x5a
   2137c:	ble	21390 <__assert_fail@plt+0xffac>
   21380:	ldr	r3, [fp, #-8]
   21384:	sub	r3, r3, #97	; 0x61
   21388:	cmp	r3, #25
   2138c:	bhi	21398 <__assert_fail@plt+0xffb4>
   21390:	mov	r3, #1
   21394:	b	2139c <__assert_fail@plt+0xffb8>
   21398:	mov	r3, #0
   2139c:	mov	r0, r3
   213a0:	add	sp, fp, #0
   213a4:	pop	{fp}		; (ldr fp, [sp], #4)
   213a8:	bx	lr
   213ac:	push	{fp}		; (str fp, [sp, #-4]!)
   213b0:	add	fp, sp, #0
   213b4:	sub	sp, sp, #12
   213b8:	str	r0, [fp, #-8]
   213bc:	ldr	r3, [fp, #-8]
   213c0:	cmp	r3, #127	; 0x7f
   213c4:	bhi	213d0 <__assert_fail@plt+0xffec>
   213c8:	mov	r3, #1
   213cc:	b	213d4 <__assert_fail@plt+0xfff0>
   213d0:	mov	r3, #0
   213d4:	mov	r0, r3
   213d8:	add	sp, fp, #0
   213dc:	pop	{fp}		; (ldr fp, [sp], #4)
   213e0:	bx	lr
   213e4:	push	{fp}		; (str fp, [sp, #-4]!)
   213e8:	add	fp, sp, #0
   213ec:	sub	sp, sp, #12
   213f0:	str	r0, [fp, #-8]
   213f4:	ldr	r3, [fp, #-8]
   213f8:	cmp	r3, #32
   213fc:	beq	2140c <__assert_fail@plt+0x10028>
   21400:	ldr	r3, [fp, #-8]
   21404:	cmp	r3, #9
   21408:	bne	21414 <__assert_fail@plt+0x10030>
   2140c:	mov	r3, #1
   21410:	b	21418 <__assert_fail@plt+0x10034>
   21414:	mov	r3, #0
   21418:	and	r3, r3, #1
   2141c:	uxtb	r3, r3
   21420:	mov	r0, r3
   21424:	add	sp, fp, #0
   21428:	pop	{fp}		; (ldr fp, [sp], #4)
   2142c:	bx	lr
   21430:	push	{fp}		; (str fp, [sp, #-4]!)
   21434:	add	fp, sp, #0
   21438:	sub	sp, sp, #12
   2143c:	str	r0, [fp, #-8]
   21440:	ldr	r3, [fp, #-8]
   21444:	cmp	r3, #0
   21448:	blt	2146c <__assert_fail@plt+0x10088>
   2144c:	ldr	r3, [fp, #-8]
   21450:	cmp	r3, #31
   21454:	ble	21464 <__assert_fail@plt+0x10080>
   21458:	ldr	r3, [fp, #-8]
   2145c:	cmp	r3, #127	; 0x7f
   21460:	bne	2146c <__assert_fail@plt+0x10088>
   21464:	mov	r3, #1
   21468:	b	21470 <__assert_fail@plt+0x1008c>
   2146c:	mov	r3, #0
   21470:	mov	r0, r3
   21474:	add	sp, fp, #0
   21478:	pop	{fp}		; (ldr fp, [sp], #4)
   2147c:	bx	lr
   21480:	push	{fp}		; (str fp, [sp, #-4]!)
   21484:	add	fp, sp, #0
   21488:	sub	sp, sp, #12
   2148c:	str	r0, [fp, #-8]
   21490:	ldr	r3, [fp, #-8]
   21494:	sub	r3, r3, #48	; 0x30
   21498:	cmp	r3, #9
   2149c:	bhi	214a8 <__assert_fail@plt+0x100c4>
   214a0:	mov	r3, #1
   214a4:	b	214ac <__assert_fail@plt+0x100c8>
   214a8:	mov	r3, #0
   214ac:	mov	r0, r3
   214b0:	add	sp, fp, #0
   214b4:	pop	{fp}		; (ldr fp, [sp], #4)
   214b8:	bx	lr
   214bc:	push	{fp}		; (str fp, [sp, #-4]!)
   214c0:	add	fp, sp, #0
   214c4:	sub	sp, sp, #12
   214c8:	str	r0, [fp, #-8]
   214cc:	ldr	r3, [fp, #-8]
   214d0:	sub	r3, r3, #33	; 0x21
   214d4:	cmp	r3, #93	; 0x5d
   214d8:	bhi	214e4 <__assert_fail@plt+0x10100>
   214dc:	mov	r3, #1
   214e0:	b	214e8 <__assert_fail@plt+0x10104>
   214e4:	mov	r3, #0
   214e8:	mov	r0, r3
   214ec:	add	sp, fp, #0
   214f0:	pop	{fp}		; (ldr fp, [sp], #4)
   214f4:	bx	lr
   214f8:	push	{fp}		; (str fp, [sp, #-4]!)
   214fc:	add	fp, sp, #0
   21500:	sub	sp, sp, #12
   21504:	str	r0, [fp, #-8]
   21508:	ldr	r3, [fp, #-8]
   2150c:	sub	r3, r3, #97	; 0x61
   21510:	cmp	r3, #25
   21514:	bhi	21520 <__assert_fail@plt+0x1013c>
   21518:	mov	r3, #1
   2151c:	b	21524 <__assert_fail@plt+0x10140>
   21520:	mov	r3, #0
   21524:	mov	r0, r3
   21528:	add	sp, fp, #0
   2152c:	pop	{fp}		; (ldr fp, [sp], #4)
   21530:	bx	lr
   21534:	push	{fp}		; (str fp, [sp, #-4]!)
   21538:	add	fp, sp, #0
   2153c:	sub	sp, sp, #12
   21540:	str	r0, [fp, #-8]
   21544:	ldr	r3, [fp, #-8]
   21548:	sub	r3, r3, #32
   2154c:	cmp	r3, #94	; 0x5e
   21550:	bhi	2155c <__assert_fail@plt+0x10178>
   21554:	mov	r3, #1
   21558:	b	21560 <__assert_fail@plt+0x1017c>
   2155c:	mov	r3, #0
   21560:	mov	r0, r3
   21564:	add	sp, fp, #0
   21568:	pop	{fp}		; (ldr fp, [sp], #4)
   2156c:	bx	lr
   21570:	push	{fp}		; (str fp, [sp, #-4]!)
   21574:	add	fp, sp, #0
   21578:	sub	sp, sp, #12
   2157c:	str	r0, [fp, #-8]
   21580:	ldr	r3, [fp, #-8]
   21584:	cmp	r3, #64	; 0x40
   21588:	bgt	215ac <__assert_fail@plt+0x101c8>
   2158c:	ldr	r3, [fp, #-8]
   21590:	cmp	r3, #58	; 0x3a
   21594:	bge	215d4 <__assert_fail@plt+0x101f0>
   21598:	ldr	r3, [fp, #-8]
   2159c:	sub	r3, r3, #33	; 0x21
   215a0:	cmp	r3, #14
   215a4:	bhi	215dc <__assert_fail@plt+0x101f8>
   215a8:	b	215d4 <__assert_fail@plt+0x101f0>
   215ac:	ldr	r3, [fp, #-8]
   215b0:	cmp	r3, #91	; 0x5b
   215b4:	blt	215dc <__assert_fail@plt+0x101f8>
   215b8:	ldr	r3, [fp, #-8]
   215bc:	cmp	r3, #96	; 0x60
   215c0:	ble	215d4 <__assert_fail@plt+0x101f0>
   215c4:	ldr	r3, [fp, #-8]
   215c8:	sub	r3, r3, #123	; 0x7b
   215cc:	cmp	r3, #3
   215d0:	bhi	215dc <__assert_fail@plt+0x101f8>
   215d4:	mov	r3, #1
   215d8:	b	215e0 <__assert_fail@plt+0x101fc>
   215dc:	mov	r3, #0
   215e0:	mov	r0, r3
   215e4:	add	sp, fp, #0
   215e8:	pop	{fp}		; (ldr fp, [sp], #4)
   215ec:	bx	lr
   215f0:	push	{fp}		; (str fp, [sp, #-4]!)
   215f4:	add	fp, sp, #0
   215f8:	sub	sp, sp, #12
   215fc:	str	r0, [fp, #-8]
   21600:	ldr	r3, [fp, #-8]
   21604:	cmp	r3, #9
   21608:	blt	2162c <__assert_fail@plt+0x10248>
   2160c:	ldr	r3, [fp, #-8]
   21610:	cmp	r3, #13
   21614:	ble	21624 <__assert_fail@plt+0x10240>
   21618:	ldr	r3, [fp, #-8]
   2161c:	cmp	r3, #32
   21620:	bne	2162c <__assert_fail@plt+0x10248>
   21624:	mov	r3, #1
   21628:	b	21630 <__assert_fail@plt+0x1024c>
   2162c:	mov	r3, #0
   21630:	mov	r0, r3
   21634:	add	sp, fp, #0
   21638:	pop	{fp}		; (ldr fp, [sp], #4)
   2163c:	bx	lr
   21640:	push	{fp}		; (str fp, [sp, #-4]!)
   21644:	add	fp, sp, #0
   21648:	sub	sp, sp, #12
   2164c:	str	r0, [fp, #-8]
   21650:	ldr	r3, [fp, #-8]
   21654:	sub	r3, r3, #65	; 0x41
   21658:	cmp	r3, #25
   2165c:	bhi	21668 <__assert_fail@plt+0x10284>
   21660:	mov	r3, #1
   21664:	b	2166c <__assert_fail@plt+0x10288>
   21668:	mov	r3, #0
   2166c:	mov	r0, r3
   21670:	add	sp, fp, #0
   21674:	pop	{fp}		; (ldr fp, [sp], #4)
   21678:	bx	lr
   2167c:	push	{fp}		; (str fp, [sp, #-4]!)
   21680:	add	fp, sp, #0
   21684:	sub	sp, sp, #12
   21688:	str	r0, [fp, #-8]
   2168c:	ldr	r3, [fp, #-8]
   21690:	sub	r3, r3, #48	; 0x30
   21694:	cmp	r3, #54	; 0x36
   21698:	ldrls	pc, [pc, r3, lsl #2]
   2169c:	b	21784 <__assert_fail@plt+0x103a0>
   216a0:	andeq	r1, r2, ip, ror r7
   216a4:	andeq	r1, r2, ip, ror r7
   216a8:	andeq	r1, r2, ip, ror r7
   216ac:	andeq	r1, r2, ip, ror r7
   216b0:	andeq	r1, r2, ip, ror r7
   216b4:	andeq	r1, r2, ip, ror r7
   216b8:	andeq	r1, r2, ip, ror r7
   216bc:	andeq	r1, r2, ip, ror r7
   216c0:	andeq	r1, r2, ip, ror r7
   216c4:	andeq	r1, r2, ip, ror r7
   216c8:	andeq	r1, r2, r4, lsl #15
   216cc:	andeq	r1, r2, r4, lsl #15
   216d0:	andeq	r1, r2, r4, lsl #15
   216d4:	andeq	r1, r2, r4, lsl #15
   216d8:	andeq	r1, r2, r4, lsl #15
   216dc:	andeq	r1, r2, r4, lsl #15
   216e0:	andeq	r1, r2, r4, lsl #15
   216e4:	andeq	r1, r2, ip, ror r7
   216e8:	andeq	r1, r2, ip, ror r7
   216ec:	andeq	r1, r2, ip, ror r7
   216f0:	andeq	r1, r2, ip, ror r7
   216f4:	andeq	r1, r2, ip, ror r7
   216f8:	andeq	r1, r2, ip, ror r7
   216fc:	andeq	r1, r2, r4, lsl #15
   21700:	andeq	r1, r2, r4, lsl #15
   21704:	andeq	r1, r2, r4, lsl #15
   21708:	andeq	r1, r2, r4, lsl #15
   2170c:	andeq	r1, r2, r4, lsl #15
   21710:	andeq	r1, r2, r4, lsl #15
   21714:	andeq	r1, r2, r4, lsl #15
   21718:	andeq	r1, r2, r4, lsl #15
   2171c:	andeq	r1, r2, r4, lsl #15
   21720:	andeq	r1, r2, r4, lsl #15
   21724:	andeq	r1, r2, r4, lsl #15
   21728:	andeq	r1, r2, r4, lsl #15
   2172c:	andeq	r1, r2, r4, lsl #15
   21730:	andeq	r1, r2, r4, lsl #15
   21734:	andeq	r1, r2, r4, lsl #15
   21738:	andeq	r1, r2, r4, lsl #15
   2173c:	andeq	r1, r2, r4, lsl #15
   21740:	andeq	r1, r2, r4, lsl #15
   21744:	andeq	r1, r2, r4, lsl #15
   21748:	andeq	r1, r2, r4, lsl #15
   2174c:	andeq	r1, r2, r4, lsl #15
   21750:	andeq	r1, r2, r4, lsl #15
   21754:	andeq	r1, r2, r4, lsl #15
   21758:	andeq	r1, r2, r4, lsl #15
   2175c:	andeq	r1, r2, r4, lsl #15
   21760:	andeq	r1, r2, r4, lsl #15
   21764:	andeq	r1, r2, ip, ror r7
   21768:	andeq	r1, r2, ip, ror r7
   2176c:	andeq	r1, r2, ip, ror r7
   21770:	andeq	r1, r2, ip, ror r7
   21774:	andeq	r1, r2, ip, ror r7
   21778:	andeq	r1, r2, ip, ror r7
   2177c:	mov	r3, #1
   21780:	b	21788 <__assert_fail@plt+0x103a4>
   21784:	mov	r3, #0
   21788:	mov	r0, r3
   2178c:	add	sp, fp, #0
   21790:	pop	{fp}		; (ldr fp, [sp], #4)
   21794:	bx	lr
   21798:	push	{fp}		; (str fp, [sp, #-4]!)
   2179c:	add	fp, sp, #0
   217a0:	sub	sp, sp, #12
   217a4:	str	r0, [fp, #-8]
   217a8:	ldr	r3, [fp, #-8]
   217ac:	sub	r3, r3, #65	; 0x41
   217b0:	cmp	r3, #25
   217b4:	bhi	217c4 <__assert_fail@plt+0x103e0>
   217b8:	ldr	r3, [fp, #-8]
   217bc:	add	r3, r3, #32
   217c0:	b	217c8 <__assert_fail@plt+0x103e4>
   217c4:	ldr	r3, [fp, #-8]
   217c8:	mov	r0, r3
   217cc:	add	sp, fp, #0
   217d0:	pop	{fp}		; (ldr fp, [sp], #4)
   217d4:	bx	lr
   217d8:	push	{fp}		; (str fp, [sp, #-4]!)
   217dc:	add	fp, sp, #0
   217e0:	sub	sp, sp, #12
   217e4:	str	r0, [fp, #-8]
   217e8:	ldr	r3, [fp, #-8]
   217ec:	sub	r3, r3, #97	; 0x61
   217f0:	cmp	r3, #25
   217f4:	bhi	21804 <__assert_fail@plt+0x10420>
   217f8:	ldr	r3, [fp, #-8]
   217fc:	sub	r3, r3, #32
   21800:	b	21808 <__assert_fail@plt+0x10424>
   21804:	ldr	r3, [fp, #-8]
   21808:	mov	r0, r3
   2180c:	add	sp, fp, #0
   21810:	pop	{fp}		; (ldr fp, [sp], #4)
   21814:	bx	lr
   21818:	cmp	r3, #0
   2181c:	cmpeq	r2, #0
   21820:	bne	21844 <__assert_fail@plt+0x10460>
   21824:	cmp	r1, #0
   21828:	movlt	r1, #-2147483648	; 0x80000000
   2182c:	movlt	r0, #0
   21830:	blt	21840 <__assert_fail@plt+0x1045c>
   21834:	cmpeq	r0, #0
   21838:	mvnne	r1, #-2147483648	; 0x80000000
   2183c:	mvnne	r0, #0
   21840:	b	218ec <__assert_fail@plt+0x10508>
   21844:	sub	sp, sp, #8
   21848:	push	{sp, lr}
   2184c:	cmp	r1, #0
   21850:	blt	21870 <__assert_fail@plt+0x1048c>
   21854:	cmp	r3, #0
   21858:	blt	218a4 <__assert_fail@plt+0x104c0>
   2185c:	bl	218fc <__assert_fail@plt+0x10518>
   21860:	ldr	lr, [sp, #4]
   21864:	add	sp, sp, #8
   21868:	pop	{r2, r3}
   2186c:	bx	lr
   21870:	rsbs	r0, r0, #0
   21874:	sbc	r1, r1, r1, lsl #1
   21878:	cmp	r3, #0
   2187c:	blt	218c8 <__assert_fail@plt+0x104e4>
   21880:	bl	218fc <__assert_fail@plt+0x10518>
   21884:	ldr	lr, [sp, #4]
   21888:	add	sp, sp, #8
   2188c:	pop	{r2, r3}
   21890:	rsbs	r0, r0, #0
   21894:	sbc	r1, r1, r1, lsl #1
   21898:	rsbs	r2, r2, #0
   2189c:	sbc	r3, r3, r3, lsl #1
   218a0:	bx	lr
   218a4:	rsbs	r2, r2, #0
   218a8:	sbc	r3, r3, r3, lsl #1
   218ac:	bl	218fc <__assert_fail@plt+0x10518>
   218b0:	ldr	lr, [sp, #4]
   218b4:	add	sp, sp, #8
   218b8:	pop	{r2, r3}
   218bc:	rsbs	r0, r0, #0
   218c0:	sbc	r1, r1, r1, lsl #1
   218c4:	bx	lr
   218c8:	rsbs	r2, r2, #0
   218cc:	sbc	r3, r3, r3, lsl #1
   218d0:	bl	218fc <__assert_fail@plt+0x10518>
   218d4:	ldr	lr, [sp, #4]
   218d8:	add	sp, sp, #8
   218dc:	pop	{r2, r3}
   218e0:	rsbs	r2, r2, #0
   218e4:	sbc	r3, r3, r3, lsl #1
   218e8:	bx	lr
   218ec:	push	{r1, lr}
   218f0:	mov	r0, #8
   218f4:	bl	1109c <raise@plt>
   218f8:	pop	{r1, pc}
   218fc:	cmp	r1, r3
   21900:	cmpeq	r0, r2
   21904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21908:	mov	r4, r0
   2190c:	movcc	r0, #0
   21910:	mov	r5, r1
   21914:	ldr	lr, [sp, #36]	; 0x24
   21918:	movcc	r1, r0
   2191c:	bcc	21a18 <__assert_fail@plt+0x10634>
   21920:	cmp	r3, #0
   21924:	clzeq	ip, r2
   21928:	clzne	ip, r3
   2192c:	addeq	ip, ip, #32
   21930:	cmp	r5, #0
   21934:	clzeq	r1, r4
   21938:	addeq	r1, r1, #32
   2193c:	clzne	r1, r5
   21940:	sub	ip, ip, r1
   21944:	sub	sl, ip, #32
   21948:	lsl	r9, r3, ip
   2194c:	rsb	fp, ip, #32
   21950:	orr	r9, r9, r2, lsl sl
   21954:	orr	r9, r9, r2, lsr fp
   21958:	lsl	r8, r2, ip
   2195c:	cmp	r5, r9
   21960:	cmpeq	r4, r8
   21964:	movcc	r0, #0
   21968:	movcc	r1, r0
   2196c:	bcc	21988 <__assert_fail@plt+0x105a4>
   21970:	mov	r0, #1
   21974:	subs	r4, r4, r8
   21978:	lsl	r1, r0, sl
   2197c:	orr	r1, r1, r0, lsr fp
   21980:	lsl	r0, r0, ip
   21984:	sbc	r5, r5, r9
   21988:	cmp	ip, #0
   2198c:	beq	21a18 <__assert_fail@plt+0x10634>
   21990:	lsr	r6, r8, #1
   21994:	orr	r6, r6, r9, lsl #31
   21998:	lsr	r7, r9, #1
   2199c:	mov	r2, ip
   219a0:	b	219c4 <__assert_fail@plt+0x105e0>
   219a4:	subs	r3, r4, r6
   219a8:	sbc	r8, r5, r7
   219ac:	adds	r3, r3, r3
   219b0:	adc	r8, r8, r8
   219b4:	adds	r4, r3, #1
   219b8:	adc	r5, r8, #0
   219bc:	subs	r2, r2, #1
   219c0:	beq	219e0 <__assert_fail@plt+0x105fc>
   219c4:	cmp	r5, r7
   219c8:	cmpeq	r4, r6
   219cc:	bcs	219a4 <__assert_fail@plt+0x105c0>
   219d0:	adds	r4, r4, r4
   219d4:	adc	r5, r5, r5
   219d8:	subs	r2, r2, #1
   219dc:	bne	219c4 <__assert_fail@plt+0x105e0>
   219e0:	lsr	r3, r4, ip
   219e4:	orr	r3, r3, r5, lsl fp
   219e8:	lsr	r2, r5, ip
   219ec:	orr	r3, r3, r5, lsr sl
   219f0:	adds	r0, r0, r4
   219f4:	mov	r4, r3
   219f8:	lsl	r3, r2, ip
   219fc:	orr	r3, r3, r4, lsl sl
   21a00:	lsl	ip, r4, ip
   21a04:	orr	r3, r3, r4, lsr fp
   21a08:	adc	r1, r1, r5
   21a0c:	subs	r0, r0, ip
   21a10:	mov	r5, r2
   21a14:	sbc	r1, r1, r3
   21a18:	cmp	lr, #0
   21a1c:	strdne	r4, [lr]
   21a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21a28:	mov	r7, r0
   21a2c:	ldr	r6, [pc, #72]	; 21a7c <__assert_fail@plt+0x10698>
   21a30:	ldr	r5, [pc, #72]	; 21a80 <__assert_fail@plt+0x1069c>
   21a34:	add	r6, pc, r6
   21a38:	add	r5, pc, r5
   21a3c:	sub	r6, r6, r5
   21a40:	mov	r8, r1
   21a44:	mov	r9, r2
   21a48:	bl	11058 <fdopen@plt-0x20>
   21a4c:	asrs	r6, r6, #2
   21a50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21a54:	mov	r4, #0
   21a58:	add	r4, r4, #1
   21a5c:	ldr	r3, [r5], #4
   21a60:	mov	r2, r9
   21a64:	mov	r1, r8
   21a68:	mov	r0, r7
   21a6c:	blx	r3
   21a70:	cmp	r6, r4
   21a74:	bne	21a58 <__assert_fail@plt+0x10674>
   21a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21a7c:	ldrdeq	r2, [r1], -r8
   21a80:	ldrdeq	r2, [r1], -r0
   21a84:	bx	lr
   21a88:	ldr	r3, [pc, #12]	; 21a9c <__assert_fail@plt+0x106b8>
   21a8c:	mov	r1, #0
   21a90:	add	r3, pc, r3
   21a94:	ldr	r2, [r3]
   21a98:	b	112dc <__cxa_atexit@plt>
   21a9c:	andeq	r2, r1, r4, lsr #13
   21aa0:	mov	r2, r1
   21aa4:	mov	r1, r0
   21aa8:	mov	r0, #3
   21aac:	b	111bc <__fxstat64@plt>

Disassembly of section .fini:

00021ab0 <.fini>:
   21ab0:	push	{r3, lr}
   21ab4:	pop	{r3, pc}
