
../repos/coreutils/src/kill:     file format elf32-littlearm


Disassembly of section .init:

00010c9c <.init>:
   10c9c:	push	{r3, lr}
   10ca0:	bl	114fc <abort@plt+0x5c4>
   10ca4:	pop	{r3, pc}

Disassembly of section .plt:

00010ca8 <calloc@plt-0x14>:
   10ca8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cac:	ldr	lr, [pc, #4]	; 10cb8 <calloc@plt-0x4>
   10cb0:	add	lr, pc, lr
   10cb4:	ldr	pc, [lr, #8]!
   10cb8:	andeq	r5, r1, r8, asr #6

00010cbc <calloc@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #86016	; 0x15000
   10cc4:	ldr	pc, [ip, #840]!	; 0x348

00010cc8 <fputs_unlocked@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #86016	; 0x15000
   10cd0:	ldr	pc, [ip, #832]!	; 0x340

00010cd4 <raise@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #86016	; 0x15000
   10cdc:	ldr	pc, [ip, #824]!	; 0x338

00010ce0 <strcmp@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #816]!	; 0x330

00010cec <strtol@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #808]!	; 0x328

00010cf8 <fflush@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #800]!	; 0x320

00010d04 <free@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #792]!	; 0x318

00010d10 <_exit@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #784]!	; 0x310

00010d1c <memcpy@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #776]!	; 0x308

00010d28 <mbsinit@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #768]!	; 0x300

00010d34 <memcmp@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d40 <fputc_unlocked@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #752]!	; 0x2f0

00010d4c <dcgettext@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #744]!	; 0x2e8

00010d58 <realloc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #736]!	; 0x2e0

00010d64 <textdomain@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d70 <strsignal@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #720]!	; 0x2d0

00010d7c <iswprint@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #712]!	; 0x2c8

00010d88 <lseek64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #704]!	; 0x2c0

00010d94 <__ctype_get_mb_cur_max@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #696]!	; 0x2b8

00010da0 <strcpy@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dac <__fpending@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #680]!	; 0x2a8

00010db8 <ferror_unlocked@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #672]!	; 0x2a0

00010dc4 <mbrtowc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #664]!	; 0x298

00010dd0 <error@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #656]!	; 0x290

00010ddc <puts@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #648]!	; 0x288

00010de8 <malloc@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #640]!	; 0x280

00010df4 <__libc_start_main@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #632]!	; 0x278

00010e00 <__freading@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #624]!	; 0x270

00010e0c <__gmon_start__@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #616]!	; 0x268

00010e18 <getopt_long@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #608]!	; 0x260

00010e24 <kill@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #600]!	; 0x258

00010e30 <__ctype_b_loc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #592]!	; 0x250

00010e3c <exit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #584]!	; 0x248

00010e48 <strlen@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #576]!	; 0x240

00010e54 <__libc_current_sigrtmax@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #568]!	; 0x238

00010e60 <strchr@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #560]!	; 0x230

00010e6c <__errno_location@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #552]!	; 0x228

00010e78 <__sprintf_chk@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #544]!	; 0x220

00010e84 <__cxa_atexit@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #536]!	; 0x218

00010e90 <memset@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #528]!	; 0x210

00010e9c <__printf_chk@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #520]!	; 0x208

00010ea8 <fileno@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #512]!	; 0x200

00010eb4 <__fprintf_chk@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ec0 <strtoimax@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #496]!	; 0x1f0

00010ecc <fclose@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed8 <fseeko64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ee4 <setlocale@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #472]!	; 0x1d8

00010ef0 <strrchr@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #464]!	; 0x1d0

00010efc <nl_langinfo@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #456]!	; 0x1c8

00010f08 <bindtextdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #448]!	; 0x1c0

00010f14 <__libc_current_sigrtmin@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #440]!	; 0x1b8

00010f20 <fputs@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #432]!	; 0x1b0

00010f2c <strncmp@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #424]!	; 0x1a8

00010f38 <abort@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #416]!	; 0x1a0

Disassembly of section .text:

00010f44 <.text>:
   10f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f48:	mov	fp, r0
   10f4c:	sub	sp, sp, #68	; 0x44
   10f50:	ldr	r0, [r1]
   10f54:	mov	r4, r1
   10f58:	bl	11b78 <abort@plt+0xc40>
   10f5c:	ldr	r1, [pc, #1284]	; 11468 <abort@plt+0x530>
   10f60:	mov	r0, #6
   10f64:	bl	10ee4 <setlocale@plt>
   10f68:	ldr	r1, [pc, #1276]	; 1146c <abort@plt+0x534>
   10f6c:	ldr	r0, [pc, #1276]	; 11470 <abort@plt+0x538>
   10f70:	bl	10f08 <bindtextdomain@plt>
   10f74:	ldr	r0, [pc, #1268]	; 11470 <abort@plt+0x538>
   10f78:	bl	10d64 <textdomain@plt>
   10f7c:	ldr	r0, [pc, #1264]	; 11474 <abort@plt+0x53c>
   10f80:	bl	1472c <abort@plt+0x37f4>
   10f84:	mov	r6, #0
   10f88:	ldr	r7, [pc, #1256]	; 11478 <abort@plt+0x540>
   10f8c:	mvn	r8, #0
   10f90:	mov	r9, r6
   10f94:	ldr	r3, [pc, #1248]	; 1147c <abort@plt+0x544>
   10f98:	mov	sl, #0
   10f9c:	str	sl, [sp]
   10fa0:	add	r2, r3, #96	; 0x60
   10fa4:	mov	r1, r4
   10fa8:	mov	r0, fp
   10fac:	bl	10e18 <getopt_long@plt>
   10fb0:	cmn	r0, #1
   10fb4:	mov	r5, r0
   10fb8:	beq	110ec <abort@plt+0x1b4>
   10fbc:	cmp	r5, #76	; 0x4c
   10fc0:	beq	11144 <abort@plt+0x20c>
   10fc4:	bgt	11074 <abort@plt+0x13c>
   10fc8:	cmp	r5, #57	; 0x39
   10fcc:	bgt	10ff4 <abort@plt+0xbc>
   10fd0:	cmp	r5, #48	; 0x30
   10fd4:	bge	110d4 <abort@plt+0x19c>
   10fd8:	cmn	r5, #3
   10fdc:	beq	11174 <abort@plt+0x23c>
   10fe0:	cmn	r5, #2
   10fe4:	moveq	r0, sl
   10fe8:	beq	10ff0 <abort@plt+0xb8>
   10fec:	mov	r0, #1
   10ff0:	bl	115e8 <abort@plt+0x6b0>
   10ff4:	cmp	r5, #65	; 0x41
   10ff8:	blt	10fec <abort@plt+0xb4>
   10ffc:	ldr	r3, [r7]
   11000:	ldr	r2, [pc, #1144]	; 11480 <abort@plt+0x548>
   11004:	cmp	r3, #0
   11008:	bne	11030 <abort@plt+0xf8>
   1100c:	ldr	r3, [r2]
   11010:	str	r2, [sp, #20]
   11014:	sub	r3, r3, #-1073741823	; 0xc0000001
   11018:	ldr	sl, [r4, r3, lsl #2]
   1101c:	mov	r0, sl
   11020:	bl	10e48 <strlen@plt>
   11024:	ldr	r2, [sp, #20]
   11028:	add	r0, sl, r0
   1102c:	str	r0, [r7]
   11030:	ldr	r3, [r2]
   11034:	ldr	r1, [r7]
   11038:	sub	r3, r3, #-1073741823	; 0xc0000001
   1103c:	ldr	r3, [r4, r3, lsl #2]
   11040:	add	r2, r3, #2
   11044:	cmp	r1, r2
   11048:	beq	11120 <abort@plt+0x1e8>
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #1068]	; 11484 <abort@plt+0x54c>
   11054:	mov	r0, #0
   11058:	bl	10d4c <dcgettext@plt>
   1105c:	mov	r3, r5
   11060:	mov	r2, r0
   11064:	mov	r1, #0
   11068:	mov	r0, r1
   1106c:	bl	10dd0 <error@plt>
   11070:	b	10fec <abort@plt+0xb4>
   11074:	cmp	r5, #108	; 0x6c
   11078:	beq	11148 <abort@plt+0x210>
   1107c:	bgt	1108c <abort@plt+0x154>
   11080:	cmp	r5, #90	; 0x5a
   11084:	ble	10ffc <abort@plt+0xc4>
   11088:	b	10fec <abort@plt+0xb4>
   1108c:	cmp	r5, #115	; 0x73
   11090:	beq	110a4 <abort@plt+0x16c>
   11094:	cmp	r5, #116	; 0x74
   11098:	beq	11144 <abort@plt+0x20c>
   1109c:	cmp	r5, #110	; 0x6e
   110a0:	bne	10fec <abort@plt+0xb4>
   110a4:	cmn	r8, #1
   110a8:	beq	1112c <abort@plt+0x1f4>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #976]	; 11488 <abort@plt+0x550>
   110b4:	mov	r0, #0
   110b8:	bl	10d4c <dcgettext@plt>
   110bc:	mov	r4, r0
   110c0:	ldr	r0, [r7]
   110c4:	bl	131a8 <abort@plt+0x2270>
   110c8:	mov	r2, r4
   110cc:	mov	r3, r0
   110d0:	b	11064 <abort@plt+0x12c>
   110d4:	ldr	r2, [pc, #932]	; 11480 <abort@plt+0x548>
   110d8:	ldr	r3, [r2]
   110dc:	cmp	r3, #2
   110e0:	beq	10ffc <abort@plt+0xc4>
   110e4:	sub	r3, r3, #1
   110e8:	str	r3, [r2]
   110ec:	cmn	r8, #1
   110f0:	ldr	r3, [pc, #904]	; 11480 <abort@plt+0x548>
   110f4:	beq	111ac <abort@plt+0x274>
   110f8:	cmp	r9, #0
   110fc:	movne	r2, #5
   11100:	ldrne	r1, [pc, #900]	; 1148c <abort@plt+0x554>
   11104:	bne	11158 <abort@plt+0x220>
   11108:	ldr	r3, [r3]
   1110c:	cmp	fp, r3
   11110:	bgt	11354 <abort@plt+0x41c>
   11114:	mov	r2, #5
   11118:	ldr	r1, [pc, #880]	; 11490 <abort@plt+0x558>
   1111c:	b	11158 <abort@plt+0x220>
   11120:	add	r3, r3, #1
   11124:	str	r3, [r7]
   11128:	b	110a4 <abort@plt+0x16c>
   1112c:	add	r1, sp, #24
   11130:	ldr	r0, [r7]
   11134:	bl	11890 <abort@plt+0x958>
   11138:	subs	r8, r0, #0
   1113c:	bge	10f94 <abort@plt+0x5c>
   11140:	b	10fec <abort@plt+0xb4>
   11144:	mov	r6, #1
   11148:	cmp	r9, #0
   1114c:	beq	111a4 <abort@plt+0x26c>
   11150:	ldr	r1, [pc, #828]	; 11494 <abort@plt+0x55c>
   11154:	mov	r2, #5
   11158:	mov	r0, #0
   1115c:	bl	10d4c <dcgettext@plt>
   11160:	mov	r1, #0
   11164:	mov	r2, r0
   11168:	mov	r0, r1
   1116c:	bl	10dd0 <error@plt>
   11170:	b	10fec <abort@plt+0xb4>
   11174:	ldr	r3, [pc, #796]	; 11498 <abort@plt+0x560>
   11178:	ldr	r0, [pc, #796]	; 1149c <abort@plt+0x564>
   1117c:	str	r3, [sp]
   11180:	ldr	r3, [pc, #792]	; 114a0 <abort@plt+0x568>
   11184:	str	sl, [sp, #4]
   11188:	ldr	r2, [pc, #788]	; 114a4 <abort@plt+0x56c>
   1118c:	ldr	r0, [r0]
   11190:	ldr	r3, [r3]
   11194:	ldr	r1, [pc, #780]	; 114a8 <abort@plt+0x570>
   11198:	bl	13840 <abort@plt+0x2908>
   1119c:	mov	r0, sl
   111a0:	bl	10e3c <exit@plt>
   111a4:	mov	r9, #1
   111a8:	b	10f94 <abort@plt+0x5c>
   111ac:	cmp	r9, #0
   111b0:	moveq	r8, #15
   111b4:	beq	11108 <abort@plt+0x1d0>
   111b8:	ldr	r3, [r3]
   111bc:	cmp	fp, r3
   111c0:	ble	1142c <abort@plt+0x4f4>
   111c4:	cmp	r6, #0
   111c8:	add	r4, r4, r3, lsl #2
   111cc:	beq	112ec <abort@plt+0x3b4>
   111d0:	mov	r7, #0
   111d4:	mov	r5, #1
   111d8:	add	r6, sp, #44	; 0x2c
   111dc:	mov	r1, r6
   111e0:	mov	r0, r5
   111e4:	bl	13318 <abort@plt+0x23e0>
   111e8:	cmp	r0, #0
   111ec:	bne	11200 <abort@plt+0x2c8>
   111f0:	mov	r0, r6
   111f4:	bl	10e48 <strlen@plt>
   111f8:	cmp	r7, r0
   111fc:	movcc	r7, r0
   11200:	add	r5, r5, #1
   11204:	cmp	r5, #65	; 0x41
   11208:	bne	111dc <abort@plt+0x2a4>
   1120c:	cmp	r4, #0
   11210:	beq	11284 <abort@plt+0x34c>
   11214:	ldr	r9, [pc, #656]	; 114ac <abort@plt+0x574>
   11218:	ldr	sl, [pc, #656]	; 114b0 <abort@plt+0x578>
   1121c:	sub	r4, r4, #4
   11220:	mov	r5, #0
   11224:	mov	r8, #1
   11228:	ldr	r0, [r4, #4]!
   1122c:	cmp	r0, #0
   11230:	bne	11240 <abort@plt+0x308>
   11234:	mov	r0, r5
   11238:	add	sp, sp, #68	; 0x44
   1123c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11240:	mov	r1, r6
   11244:	bl	11890 <abort@plt+0x958>
   11248:	subs	fp, r0, #0
   1124c:	movlt	r5, r8
   11250:	blt	11228 <abort@plt+0x2f0>
   11254:	bl	10d70 <strsignal@plt>
   11258:	str	r6, [sp, #4]
   1125c:	str	r7, [sp]
   11260:	mov	r3, fp
   11264:	mov	r2, #2
   11268:	mov	r1, sl
   1126c:	cmp	r0, #0
   11270:	moveq	r0, r9
   11274:	str	r0, [sp, #8]
   11278:	mov	r0, r8
   1127c:	bl	10e9c <__printf_chk@plt>
   11280:	b	11228 <abort@plt+0x2f0>
   11284:	ldr	r5, [pc, #544]	; 114ac <abort@plt+0x574>
   11288:	ldr	r9, [pc, #544]	; 114b0 <abort@plt+0x578>
   1128c:	mov	r4, #1
   11290:	mov	r8, #2
   11294:	mov	r1, r6
   11298:	mov	r0, r4
   1129c:	bl	13318 <abort@plt+0x23e0>
   112a0:	cmp	r0, #0
   112a4:	bne	112d8 <abort@plt+0x3a0>
   112a8:	mov	r0, r4
   112ac:	bl	10d70 <strsignal@plt>
   112b0:	str	r6, [sp, #4]
   112b4:	str	r7, [sp]
   112b8:	mov	r3, r4
   112bc:	mov	r2, r8
   112c0:	mov	r1, r9
   112c4:	cmp	r0, #0
   112c8:	moveq	r0, r5
   112cc:	str	r0, [sp, #8]
   112d0:	mov	r0, #1
   112d4:	bl	10e9c <__printf_chk@plt>
   112d8:	add	r4, r4, #1
   112dc:	cmp	r4, #65	; 0x41
   112e0:	bne	11294 <abort@plt+0x35c>
   112e4:	mov	r5, #0
   112e8:	b	11234 <abort@plt+0x2fc>
   112ec:	cmp	r4, #0
   112f0:	beq	11438 <abort@plt+0x500>
   112f4:	ldr	r7, [pc, #440]	; 114b4 <abort@plt+0x57c>
   112f8:	mov	r5, r6
   112fc:	mov	r6, #1
   11300:	ldr	r0, [r4]
   11304:	cmp	r0, #0
   11308:	beq	11234 <abort@plt+0x2fc>
   1130c:	add	r1, sp, #44	; 0x2c
   11310:	bl	11890 <abort@plt+0x958>
   11314:	subs	r2, r0, #0
   11318:	movlt	r5, r6
   1131c:	blt	1133c <abort@plt+0x404>
   11320:	ldr	r3, [r4]
   11324:	ldrb	r3, [r3]
   11328:	sub	r3, r3, #48	; 0x30
   1132c:	cmp	r3, #9
   11330:	bhi	11344 <abort@plt+0x40c>
   11334:	add	r0, sp, #44	; 0x2c
   11338:	bl	10ddc <puts@plt>
   1133c:	add	r4, r4, #4
   11340:	b	11300 <abort@plt+0x3c8>
   11344:	mov	r1, r7
   11348:	mov	r0, r6
   1134c:	bl	10e9c <__printf_chk@plt>
   11350:	b	1133c <abort@plt+0x404>
   11354:	add	r6, r4, r3, lsl #2
   11358:	ldr	r4, [r4, r3, lsl #2]
   1135c:	bl	10e6c <__errno_location@plt>
   11360:	mov	r5, #0
   11364:	ldr	sl, [pc, #332]	; 114b8 <abort@plt+0x580>
   11368:	mov	r7, r5
   1136c:	mov	r9, r0
   11370:	str	r7, [r9]
   11374:	mov	r2, #10
   11378:	add	r1, sp, #44	; 0x2c
   1137c:	mov	r0, r4
   11380:	bl	10ec0 <strtoimax@plt>
   11384:	ldr	r3, [r9]
   11388:	cmp	r3, #34	; 0x22
   1138c:	beq	113b8 <abort@plt+0x480>
   11390:	asr	r3, r0, #31
   11394:	cmp	r1, r3
   11398:	cmpeq	r0, r0
   1139c:	bne	113b8 <abort@plt+0x480>
   113a0:	ldr	r3, [sp, #44]	; 0x2c
   113a4:	cmp	r4, r3
   113a8:	beq	113b8 <abort@plt+0x480>
   113ac:	ldrb	r3, [r3]
   113b0:	cmp	r3, #0
   113b4:	beq	113fc <abort@plt+0x4c4>
   113b8:	mov	r2, #5
   113bc:	mov	r1, sl
   113c0:	mov	r0, r7
   113c4:	bl	10d4c <dcgettext@plt>
   113c8:	mov	r5, r0
   113cc:	mov	r0, r4
   113d0:	bl	131a8 <abort@plt+0x2270>
   113d4:	mov	r2, r5
   113d8:	mov	r1, r7
   113dc:	mov	r3, r0
   113e0:	mov	r0, #0
   113e4:	bl	10dd0 <error@plt>
   113e8:	mov	r5, #1
   113ec:	ldr	r4, [r6, #4]!
   113f0:	cmp	r4, #0
   113f4:	bne	11370 <abort@plt+0x438>
   113f8:	b	11234 <abort@plt+0x2fc>
   113fc:	mov	r1, r8
   11400:	bl	10e24 <kill@plt>
   11404:	cmp	r0, #0
   11408:	beq	113ec <abort@plt+0x4b4>
   1140c:	mov	r0, r4
   11410:	ldr	r5, [r9]
   11414:	bl	131a8 <abort@plt+0x2270>
   11418:	ldr	r2, [pc, #156]	; 114bc <abort@plt+0x584>
   1141c:	mov	r1, r5
   11420:	mov	r3, r0
   11424:	mov	r0, r7
   11428:	b	113e4 <abort@plt+0x4ac>
   1142c:	cmp	r6, #0
   11430:	movne	r4, #0
   11434:	bne	111d0 <abort@plt+0x298>
   11438:	mov	r4, #1
   1143c:	add	r1, sp, #44	; 0x2c
   11440:	mov	r0, r4
   11444:	bl	13318 <abort@plt+0x23e0>
   11448:	cmp	r0, #0
   1144c:	bne	11458 <abort@plt+0x520>
   11450:	add	r0, sp, #44	; 0x2c
   11454:	bl	10ddc <puts@plt>
   11458:	add	r4, r4, #1
   1145c:	cmp	r4, #65	; 0x41
   11460:	bne	1143c <abort@plt+0x504>
   11464:	b	112e4 <abort@plt+0x3ac>
   11468:	andeq	r4, r1, r7, lsl #26
   1146c:	andeq	r4, r1, sl, lsl #26
   11470:	andeq	r4, r1, r5, ror #24
   11474:	andeq	r1, r1, r0, asr #20
   11478:	strdeq	r6, [r2], -r8
   1147c:	andeq	r4, r1, r8, lsl #15
   11480:	andeq	r6, r2, r8, ror #5
   11484:	andeq	r4, r1, r2, lsr #26
   11488:	andeq	r4, r1, r7, lsr sp
   1148c:	andeq	r4, r1, r6, lsl #27
   11490:	andeq	r4, r1, sl, lsr #27
   11494:	andeq	r4, r1, r6, asr sp
   11498:	andeq	r4, r1, sl, ror sp
   1149c:	strdeq	r6, [r2], -r4
   114a0:	strdeq	r6, [r2], -r0
   114a4:	andeq	r4, r1, r1, ror #24
   114a8:	andeq	r4, r1, r9, asr r8
   114ac:	andeq	r4, r1, r8, lsl #26
   114b0:	andeq	r4, r1, r2, asr #27
   114b4:	andeq	r4, r1, pc, asr #27
   114b8:	ldrdeq	r4, [r1], -r3
   114bc:	andeq	r4, r1, lr, lsr #29
   114c0:	mov	fp, #0
   114c4:	mov	lr, #0
   114c8:	pop	{r1}		; (ldr r1, [sp], #4)
   114cc:	mov	r2, sp
   114d0:	push	{r2}		; (str r2, [sp, #-4]!)
   114d4:	push	{r0}		; (str r0, [sp, #-4]!)
   114d8:	ldr	ip, [pc, #16]	; 114f0 <abort@plt+0x5b8>
   114dc:	push	{ip}		; (str ip, [sp, #-4]!)
   114e0:	ldr	r0, [pc, #12]	; 114f4 <abort@plt+0x5bc>
   114e4:	ldr	r3, [pc, #12]	; 114f8 <abort@plt+0x5c0>
   114e8:	bl	10df4 <__libc_start_main@plt>
   114ec:	bl	10f38 <abort@plt>
   114f0:	andeq	r4, r1, r8, lsr #14
   114f4:	andeq	r0, r1, r4, asr #30
   114f8:	andeq	r4, r1, r8, asr #13
   114fc:	ldr	r3, [pc, #20]	; 11518 <abort@plt+0x5e0>
   11500:	ldr	r2, [pc, #20]	; 1151c <abort@plt+0x5e4>
   11504:	add	r3, pc, r3
   11508:	ldr	r2, [r3, r2]
   1150c:	cmp	r2, #0
   11510:	bxeq	lr
   11514:	b	10e0c <__gmon_start__@plt>
   11518:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1151c:	andeq	r0, r0, r4, ror #1
   11520:	ldr	r3, [pc, #28]	; 11544 <abort@plt+0x60c>
   11524:	ldr	r0, [pc, #28]	; 11548 <abort@plt+0x610>
   11528:	sub	r3, r3, r0
   1152c:	cmp	r3, #6
   11530:	bxls	lr
   11534:	ldr	r3, [pc, #16]	; 1154c <abort@plt+0x614>
   11538:	cmp	r3, #0
   1153c:	bxeq	lr
   11540:	bx	r3
   11544:	ldrdeq	r6, [r2], -pc	; <UNPREDICTABLE>
   11548:	ldrdeq	r6, [r2], -ip
   1154c:	andeq	r0, r0, r0
   11550:	ldr	r1, [pc, #36]	; 1157c <abort@plt+0x644>
   11554:	ldr	r0, [pc, #36]	; 11580 <abort@plt+0x648>
   11558:	sub	r1, r1, r0
   1155c:	asr	r1, r1, #2
   11560:	add	r1, r1, r1, lsr #31
   11564:	asrs	r1, r1, #1
   11568:	bxeq	lr
   1156c:	ldr	r3, [pc, #16]	; 11584 <abort@plt+0x64c>
   11570:	cmp	r3, #0
   11574:	bxeq	lr
   11578:	bx	r3
   1157c:	ldrdeq	r6, [r2], -ip
   11580:	ldrdeq	r6, [r2], -ip
   11584:	andeq	r0, r0, r0
   11588:	push	{r4, lr}
   1158c:	ldr	r4, [pc, #24]	; 115ac <abort@plt+0x674>
   11590:	ldrb	r3, [r4]
   11594:	cmp	r3, #0
   11598:	popne	{r4, pc}
   1159c:	bl	11520 <abort@plt+0x5e8>
   115a0:	mov	r3, #1
   115a4:	strb	r3, [r4]
   115a8:	pop	{r4, pc}
   115ac:	strdeq	r6, [r2], -ip
   115b0:	ldr	r0, [pc, #40]	; 115e0 <abort@plt+0x6a8>
   115b4:	ldr	r3, [r0]
   115b8:	cmp	r3, #0
   115bc:	bne	115c4 <abort@plt+0x68c>
   115c0:	b	11550 <abort@plt+0x618>
   115c4:	ldr	r3, [pc, #24]	; 115e4 <abort@plt+0x6ac>
   115c8:	cmp	r3, #0
   115cc:	beq	115c0 <abort@plt+0x688>
   115d0:	push	{r4, lr}
   115d4:	blx	r3
   115d8:	pop	{r4, lr}
   115dc:	b	11550 <abort@plt+0x618>
   115e0:	andeq	r5, r2, r4, lsl pc
   115e4:	andeq	r0, r0, r0
   115e8:	subs	r4, r0, #0
   115ec:	push	{r7, lr}
   115f0:	sub	sp, sp, #64	; 0x40
   115f4:	ldr	r5, [pc, #568]	; 11834 <abort@plt+0x8fc>
   115f8:	beq	11630 <abort@plt+0x6f8>
   115fc:	ldr	r3, [pc, #564]	; 11838 <abort@plt+0x900>
   11600:	mov	r2, #5
   11604:	ldr	r1, [pc, #560]	; 1183c <abort@plt+0x904>
   11608:	mov	r0, #0
   1160c:	ldr	r6, [r3]
   11610:	bl	10d4c <dcgettext@plt>
   11614:	ldr	r3, [r5]
   11618:	mov	r1, #1
   1161c:	mov	r2, r0
   11620:	mov	r0, r6
   11624:	bl	10eb4 <__fprintf_chk@plt>
   11628:	mov	r0, r4
   1162c:	bl	10e3c <exit@plt>
   11630:	mov	r2, #5
   11634:	ldr	r1, [pc, #516]	; 11840 <abort@plt+0x908>
   11638:	bl	10d4c <dcgettext@plt>
   1163c:	ldr	r3, [r5]
   11640:	ldr	r5, [pc, #508]	; 11844 <abort@plt+0x90c>
   11644:	mov	r2, r3
   11648:	str	r3, [sp]
   1164c:	ldr	r9, [pc, #500]	; 11848 <abort@plt+0x910>
   11650:	mov	r6, r4
   11654:	add	r7, sp, #8
   11658:	mov	r1, r0
   1165c:	mov	r0, #1
   11660:	bl	10e9c <__printf_chk@plt>
   11664:	mov	r2, #5
   11668:	ldr	r1, [pc, #476]	; 1184c <abort@plt+0x914>
   1166c:	mov	r0, r4
   11670:	bl	10d4c <dcgettext@plt>
   11674:	ldr	r1, [r5]
   11678:	bl	10cc8 <fputs_unlocked@plt>
   1167c:	mov	r2, #5
   11680:	ldr	r1, [pc, #456]	; 11850 <abort@plt+0x918>
   11684:	mov	r0, r4
   11688:	bl	10d4c <dcgettext@plt>
   1168c:	ldr	r1, [r5]
   11690:	bl	10cc8 <fputs_unlocked@plt>
   11694:	mov	r2, #5
   11698:	ldr	r1, [pc, #436]	; 11854 <abort@plt+0x91c>
   1169c:	mov	r0, r4
   116a0:	bl	10d4c <dcgettext@plt>
   116a4:	ldr	r1, [r5]
   116a8:	bl	10cc8 <fputs_unlocked@plt>
   116ac:	mov	r2, #5
   116b0:	ldr	r1, [pc, #416]	; 11858 <abort@plt+0x920>
   116b4:	mov	r0, r4
   116b8:	bl	10d4c <dcgettext@plt>
   116bc:	ldr	r1, [r5]
   116c0:	bl	10cc8 <fputs_unlocked@plt>
   116c4:	mov	r2, #5
   116c8:	ldr	r1, [pc, #396]	; 1185c <abort@plt+0x924>
   116cc:	mov	r0, r4
   116d0:	bl	10d4c <dcgettext@plt>
   116d4:	ldr	r1, [r5]
   116d8:	bl	10cc8 <fputs_unlocked@plt>
   116dc:	mov	r2, #5
   116e0:	ldr	r1, [pc, #376]	; 11860 <abort@plt+0x928>
   116e4:	mov	r0, r4
   116e8:	bl	10d4c <dcgettext@plt>
   116ec:	ldr	r1, [r5]
   116f0:	bl	10cc8 <fputs_unlocked@plt>
   116f4:	mov	r2, #5
   116f8:	ldr	r1, [pc, #356]	; 11864 <abort@plt+0x92c>
   116fc:	mov	r0, r4
   11700:	bl	10d4c <dcgettext@plt>
   11704:	ldr	r2, [pc, #316]	; 11848 <abort@plt+0x910>
   11708:	mov	r1, r0
   1170c:	mov	r0, #1
   11710:	bl	10e9c <__printf_chk@plt>
   11714:	ldr	lr, [pc, #332]	; 11868 <abort@plt+0x930>
   11718:	add	ip, sp, #8
   1171c:	ldm	lr!, {r0, r1, r2, r3}
   11720:	stmia	ip!, {r0, r1, r2, r3}
   11724:	ldm	lr!, {r0, r1, r2, r3}
   11728:	stmia	ip!, {r0, r1, r2, r3}
   1172c:	ldm	lr!, {r0, r1, r2, r3}
   11730:	stmia	ip!, {r0, r1, r2, r3}
   11734:	ldm	lr, {r0, r1}
   11738:	stm	ip, {r0, r1}
   1173c:	ldr	r1, [r7, r6]
   11740:	add	r8, r7, r6
   11744:	cmp	r1, #0
   11748:	bne	117ec <abort@plt+0x8b4>
   1174c:	ldr	r6, [r8, #4]
   11750:	ldr	r7, [pc, #240]	; 11848 <abort@plt+0x910>
   11754:	cmp	r6, #0
   11758:	mov	r2, #5
   1175c:	ldr	r1, [pc, #264]	; 1186c <abort@plt+0x934>
   11760:	mov	r0, #0
   11764:	moveq	r6, r7
   11768:	bl	10d4c <dcgettext@plt>
   1176c:	ldr	r3, [pc, #252]	; 11870 <abort@plt+0x938>
   11770:	ldr	r2, [pc, #252]	; 11874 <abort@plt+0x93c>
   11774:	mov	r1, r0
   11778:	mov	r0, #1
   1177c:	bl	10e9c <__printf_chk@plt>
   11780:	mov	r1, #0
   11784:	mov	r0, #5
   11788:	bl	10ee4 <setlocale@plt>
   1178c:	cmp	r0, #0
   11790:	bne	11804 <abort@plt+0x8cc>
   11794:	mov	r2, #5
   11798:	ldr	r1, [pc, #216]	; 11878 <abort@plt+0x940>
   1179c:	mov	r0, #0
   117a0:	bl	10d4c <dcgettext@plt>
   117a4:	ldr	r3, [pc, #156]	; 11848 <abort@plt+0x910>
   117a8:	ldr	r2, [pc, #192]	; 11870 <abort@plt+0x938>
   117ac:	mov	r1, r0
   117b0:	mov	r0, #1
   117b4:	bl	10e9c <__printf_chk@plt>
   117b8:	mov	r2, #5
   117bc:	ldr	r1, [pc, #184]	; 1187c <abort@plt+0x944>
   117c0:	mov	r0, #0
   117c4:	bl	10d4c <dcgettext@plt>
   117c8:	ldr	r2, [pc, #176]	; 11880 <abort@plt+0x948>
   117cc:	cmp	r6, r7
   117d0:	ldr	r3, [pc, #172]	; 11884 <abort@plt+0x94c>
   117d4:	moveq	r3, r2
   117d8:	mov	r2, r6
   117dc:	mov	r1, r0
   117e0:	mov	r0, #1
   117e4:	bl	10e9c <__printf_chk@plt>
   117e8:	b	11628 <abort@plt+0x6f0>
   117ec:	mov	r0, r9
   117f0:	bl	10ce0 <strcmp@plt>
   117f4:	add	r6, r6, #8
   117f8:	cmp	r0, #0
   117fc:	bne	1173c <abort@plt+0x804>
   11800:	b	1174c <abort@plt+0x814>
   11804:	mov	r2, #3
   11808:	ldr	r1, [pc, #120]	; 11888 <abort@plt+0x950>
   1180c:	bl	10f2c <strncmp@plt>
   11810:	cmp	r0, #0
   11814:	beq	11794 <abort@plt+0x85c>
   11818:	mov	r2, #5
   1181c:	ldr	r1, [pc, #104]	; 1188c <abort@plt+0x954>
   11820:	mov	r0, #0
   11824:	bl	10d4c <dcgettext@plt>
   11828:	ldr	r1, [r5]
   1182c:	bl	10cc8 <fputs_unlocked@plt>
   11830:	b	11794 <abort@plt+0x85c>
   11834:	andeq	r6, r2, r8, lsl #6
   11838:	strdeq	r6, [r2], -r0
   1183c:	andeq	r4, r1, lr, asr r8
   11840:	andeq	r4, r1, r5, lsl #17
   11844:	strdeq	r6, [r2], -r4
   11848:	andeq	r4, r1, r9, asr r8
   1184c:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   11850:	andeq	r4, r1, ip, lsl #18
   11854:	andeq	r4, r1, r7, asr r9
   11858:	andeq	r4, r1, r3, asr #20
   1185c:	andeq	r4, r1, r0, ror sl
   11860:	andeq	r4, r1, r6, lsr #21
   11864:	andeq	r4, r1, r3, ror #22
   11868:	andeq	r4, r1, r0, asr r7
   1186c:	andeq	r4, r1, r2, lsr #24
   11870:	andeq	r4, r1, r9, lsr ip
   11874:	andeq	r4, r1, r1, ror #24
   11878:			; <UNDEFINED> instruction: 0x00014cba
   1187c:	ldrdeq	r4, [r1], -r5
   11880:	andeq	r4, r1, r6, lsl #28
   11884:	andeq	r4, r1, r7, lsl #26
   11888:	andeq	r4, r1, pc, ror #24
   1188c:	andeq	r4, r1, r3, ror ip
   11890:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11894:	mov	r6, r0
   11898:	ldrb	r3, [r0]
   1189c:	mov	r8, r1
   118a0:	sub	r3, r3, #48	; 0x30
   118a4:	cmp	r3, #9
   118a8:	bhi	11960 <abort@plt+0xa28>
   118ac:	bl	10e6c <__errno_location@plt>
   118b0:	mov	r3, #0
   118b4:	mov	r2, #10
   118b8:	add	r1, sp, #4
   118bc:	str	r3, [r0]
   118c0:	mov	r4, r0
   118c4:	mov	r0, r6
   118c8:	bl	10cec <strtol@plt>
   118cc:	ldr	r3, [sp, #4]
   118d0:	cmp	r6, r3
   118d4:	beq	118f8 <abort@plt+0x9c0>
   118d8:	ldrb	r3, [r3]
   118dc:	cmp	r3, #0
   118e0:	bne	118f8 <abort@plt+0x9c0>
   118e4:	ldr	r3, [r4]
   118e8:	cmp	r3, #0
   118ec:	bne	118f8 <abort@plt+0x9c0>
   118f0:	cmn	r0, #1
   118f4:	bne	11948 <abort@plt+0xa10>
   118f8:	mvn	r3, #0
   118fc:	str	r3, [sp]
   11900:	ldr	r0, [sp]
   11904:	cmp	r0, #0
   11908:	bge	11a00 <abort@plt+0xac8>
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #256]	; 11a18 <abort@plt+0xae0>
   11914:	mov	r0, #0
   11918:	bl	10d4c <dcgettext@plt>
   1191c:	mov	r4, r0
   11920:	mov	r0, r6
   11924:	bl	131a8 <abort@plt+0x2270>
   11928:	mov	r1, #0
   1192c:	mov	r2, r4
   11930:	mov	r3, r0
   11934:	mov	r0, r1
   11938:	bl	10dd0 <error@plt>
   1193c:	mvn	r0, #0
   11940:	add	sp, sp, #12
   11944:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11948:	cmp	r0, #254	; 0xfe
   1194c:	movgt	r3, #255	; 0xff
   11950:	movle	r3, #127	; 0x7f
   11954:	and	r0, r0, r3
   11958:	str	r0, [sp]
   1195c:	b	11900 <abort@plt+0x9c8>
   11960:	bl	13d80 <abort@plt+0x2e48>
   11964:	ldr	r9, [pc, #176]	; 11a1c <abort@plt+0xae4>
   11968:	mov	r4, r0
   1196c:	mov	r7, r0
   11970:	ldrb	r5, [r7]
   11974:	cmp	r5, #0
   11978:	bne	119b0 <abort@plt+0xa78>
   1197c:	mov	r1, sp
   11980:	mov	r0, r4
   11984:	bl	131b4 <abort@plt+0x227c>
   11988:	cmp	r0, #0
   1198c:	beq	119a4 <abort@plt+0xa6c>
   11990:	ldrb	r3, [r4]
   11994:	cmp	r3, #83	; 0x53
   11998:	beq	119d0 <abort@plt+0xa98>
   1199c:	mvn	r3, #0
   119a0:	str	r3, [sp]
   119a4:	mov	r0, r4
   119a8:	bl	11b24 <abort@plt+0xbec>
   119ac:	b	11900 <abort@plt+0x9c8>
   119b0:	mov	r1, r5
   119b4:	mov	r0, r9
   119b8:	bl	10e60 <strchr@plt>
   119bc:	add	r7, r7, #1
   119c0:	cmp	r0, #0
   119c4:	subne	r5, r5, #32
   119c8:	strbne	r5, [r7, #-1]
   119cc:	b	11970 <abort@plt+0xa38>
   119d0:	ldrb	r3, [r4, #1]
   119d4:	cmp	r3, #73	; 0x49
   119d8:	bne	1199c <abort@plt+0xa64>
   119dc:	ldrb	r3, [r4, #2]
   119e0:	cmp	r3, #71	; 0x47
   119e4:	bne	1199c <abort@plt+0xa64>
   119e8:	mov	r1, sp
   119ec:	add	r0, r4, #3
   119f0:	bl	131b4 <abort@plt+0x227c>
   119f4:	cmp	r0, #0
   119f8:	bne	1199c <abort@plt+0xa64>
   119fc:	b	119a4 <abort@plt+0xa6c>
   11a00:	mov	r1, r8
   11a04:	bl	13318 <abort@plt+0x23e0>
   11a08:	cmp	r0, #0
   11a0c:	bne	1190c <abort@plt+0x9d4>
   11a10:	ldr	r0, [sp]
   11a14:	b	11940 <abort@plt+0xa08>
   11a18:	andeq	r4, r1, ip, ror lr
   11a1c:	andeq	r4, r1, r1, ror #28
   11a20:	ldr	r3, [pc, #4]	; 11a2c <abort@plt+0xaf4>
   11a24:	str	r0, [r3]
   11a28:	bx	lr
   11a2c:	andeq	r6, r2, r0, lsl #6
   11a30:	ldr	r3, [pc, #4]	; 11a3c <abort@plt+0xb04>
   11a34:	strb	r0, [r3, #4]
   11a38:	bx	lr
   11a3c:	andeq	r6, r2, r0, lsl #6
   11a40:	ldr	r3, [pc, #192]	; 11b08 <abort@plt+0xbd0>
   11a44:	push	{r0, r1, r4, r5, r6, lr}
   11a48:	ldr	r0, [r3]
   11a4c:	bl	13ec0 <abort@plt+0x2f88>
   11a50:	cmp	r0, #0
   11a54:	beq	11aec <abort@plt+0xbb4>
   11a58:	ldr	r3, [pc, #172]	; 11b0c <abort@plt+0xbd4>
   11a5c:	mov	r4, r3
   11a60:	ldrb	r2, [r3, #4]
   11a64:	cmp	r2, #0
   11a68:	beq	11a7c <abort@plt+0xb44>
   11a6c:	bl	10e6c <__errno_location@plt>
   11a70:	ldr	r3, [r0]
   11a74:	cmp	r3, #32
   11a78:	beq	11aec <abort@plt+0xbb4>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #136]	; 11b10 <abort@plt+0xbd8>
   11a84:	mov	r0, #0
   11a88:	bl	10d4c <dcgettext@plt>
   11a8c:	ldr	r4, [r4]
   11a90:	cmp	r4, #0
   11a94:	mov	r5, r0
   11a98:	beq	11ad0 <abort@plt+0xb98>
   11a9c:	bl	10e6c <__errno_location@plt>
   11aa0:	ldr	r6, [r0]
   11aa4:	mov	r0, r4
   11aa8:	bl	13058 <abort@plt+0x2120>
   11aac:	str	r5, [sp]
   11ab0:	ldr	r2, [pc, #92]	; 11b14 <abort@plt+0xbdc>
   11ab4:	mov	r1, r6
   11ab8:	mov	r3, r0
   11abc:	mov	r0, #0
   11ac0:	bl	10dd0 <error@plt>
   11ac4:	ldr	r3, [pc, #76]	; 11b18 <abort@plt+0xbe0>
   11ac8:	ldr	r0, [r3]
   11acc:	bl	10d10 <_exit@plt>
   11ad0:	bl	10e6c <__errno_location@plt>
   11ad4:	mov	r3, r5
   11ad8:	ldr	r2, [pc, #60]	; 11b1c <abort@plt+0xbe4>
   11adc:	ldr	r1, [r0]
   11ae0:	mov	r0, r4
   11ae4:	bl	10dd0 <error@plt>
   11ae8:	b	11ac4 <abort@plt+0xb8c>
   11aec:	ldr	r3, [pc, #44]	; 11b20 <abort@plt+0xbe8>
   11af0:	ldr	r0, [r3]
   11af4:	bl	13ec0 <abort@plt+0x2f88>
   11af8:	cmp	r0, #0
   11afc:	bne	11ac4 <abort@plt+0xb8c>
   11b00:	add	sp, sp, #8
   11b04:	pop	{r4, r5, r6, pc}
   11b08:	strdeq	r6, [r2], -r4
   11b0c:	andeq	r6, r2, r0, lsl #6
   11b10:	muleq	r1, lr, lr
   11b14:	andeq	r4, r1, sl, lsr #29
   11b18:	strdeq	r6, [r2], -r4
   11b1c:	andeq	r4, r1, lr, lsr #29
   11b20:	strdeq	r6, [r2], -r0
   11b24:	push	{r0, r1, r2, r4, r5, lr}
   11b28:	mov	r5, r0
   11b2c:	bl	10e6c <__errno_location@plt>
   11b30:	ldr	r3, [r0]
   11b34:	mov	r4, r0
   11b38:	str	r3, [sp]
   11b3c:	str	r3, [sp, #4]
   11b40:	mov	r3, #0
   11b44:	str	r3, [r0]
   11b48:	mov	r0, r5
   11b4c:	bl	10d04 <free@plt>
   11b50:	ldr	r3, [r4]
   11b54:	add	r2, sp, #8
   11b58:	cmp	r3, #0
   11b5c:	moveq	r3, #4
   11b60:	movne	r3, #0
   11b64:	add	r3, r2, r3
   11b68:	ldr	r3, [r3, #-8]
   11b6c:	str	r3, [r4]
   11b70:	add	sp, sp, #12
   11b74:	pop	{r4, r5, pc}
   11b78:	push	{r4, r5, r6, lr}
   11b7c:	subs	r5, r0, #0
   11b80:	bne	11b98 <abort@plt+0xc60>
   11b84:	ldr	r3, [pc, #124]	; 11c08 <abort@plt+0xcd0>
   11b88:	ldr	r0, [pc, #124]	; 11c0c <abort@plt+0xcd4>
   11b8c:	ldr	r1, [r3]
   11b90:	bl	10f20 <fputs@plt>
   11b94:	bl	10f38 <abort@plt>
   11b98:	mov	r1, #47	; 0x2f
   11b9c:	bl	10ef0 <strrchr@plt>
   11ba0:	cmp	r0, #0
   11ba4:	addne	r4, r0, #1
   11ba8:	moveq	r4, r5
   11bac:	sub	r3, r4, r5
   11bb0:	cmp	r3, #6
   11bb4:	ble	11bf4 <abort@plt+0xcbc>
   11bb8:	mov	r2, #7
   11bbc:	ldr	r1, [pc, #76]	; 11c10 <abort@plt+0xcd8>
   11bc0:	sub	r0, r4, #7
   11bc4:	bl	10f2c <strncmp@plt>
   11bc8:	cmp	r0, #0
   11bcc:	bne	11bf4 <abort@plt+0xcbc>
   11bd0:	mov	r2, #3
   11bd4:	ldr	r1, [pc, #56]	; 11c14 <abort@plt+0xcdc>
   11bd8:	mov	r0, r4
   11bdc:	bl	10f2c <strncmp@plt>
   11be0:	cmp	r0, #0
   11be4:	movne	r5, r4
   11be8:	ldreq	r3, [pc, #40]	; 11c18 <abort@plt+0xce0>
   11bec:	addeq	r5, r4, #3
   11bf0:	streq	r5, [r3]
   11bf4:	ldr	r3, [pc, #32]	; 11c1c <abort@plt+0xce4>
   11bf8:	str	r5, [r3]
   11bfc:	ldr	r3, [pc, #28]	; 11c20 <abort@plt+0xce8>
   11c00:	str	r5, [r3]
   11c04:	pop	{r4, r5, r6, pc}
   11c08:	strdeq	r6, [r2], -r0
   11c0c:			; <UNDEFINED> instruction: 0x00014eb1
   11c10:	andeq	r4, r1, r9, ror #29
   11c14:	strdeq	r4, [r1], -r1
   11c18:	andeq	r6, r2, r0, ror #5
   11c1c:	andeq	r6, r2, r8, lsl #6
   11c20:	andeq	r6, r2, r4, ror #5
   11c24:	push	{r4, r5, r6, lr}
   11c28:	mov	r2, #48	; 0x30
   11c2c:	mov	r5, r1
   11c30:	mov	r1, #0
   11c34:	mov	r4, r0
   11c38:	bl	10e90 <memset@plt>
   11c3c:	cmp	r5, #10
   11c40:	bne	11c48 <abort@plt+0xd10>
   11c44:	bl	10f38 <abort@plt>
   11c48:	str	r5, [r4]
   11c4c:	mov	r0, r4
   11c50:	pop	{r4, r5, r6, pc}
   11c54:	push	{r4, r5, r6, lr}
   11c58:	mov	r4, r0
   11c5c:	mov	r5, r1
   11c60:	bl	140bc <abort@plt+0x3184>
   11c64:	ldrb	r3, [r0]
   11c68:	bic	r3, r3, #32
   11c6c:	cmp	r3, #85	; 0x55
   11c70:	bne	11ce0 <abort@plt+0xda8>
   11c74:	ldrb	r3, [r0, #1]
   11c78:	bic	r3, r3, #32
   11c7c:	cmp	r3, #84	; 0x54
   11c80:	bne	11cb8 <abort@plt+0xd80>
   11c84:	ldrb	r3, [r0, #2]
   11c88:	bic	r3, r3, #32
   11c8c:	cmp	r3, #70	; 0x46
   11c90:	bne	11cb8 <abort@plt+0xd80>
   11c94:	ldrb	r3, [r0, #3]
   11c98:	cmp	r3, #45	; 0x2d
   11c9c:	bne	11cb8 <abort@plt+0xd80>
   11ca0:	ldrb	r3, [r0, #4]
   11ca4:	cmp	r3, #56	; 0x38
   11ca8:	bne	11cb8 <abort@plt+0xd80>
   11cac:	ldrb	r3, [r0, #5]
   11cb0:	cmp	r3, #0
   11cb4:	beq	11ccc <abort@plt+0xd94>
   11cb8:	ldr	r1, [pc, #144]	; 11d50 <abort@plt+0xe18>
   11cbc:	ldr	r0, [pc, #144]	; 11d54 <abort@plt+0xe1c>
   11cc0:	cmp	r5, #9
   11cc4:	movne	r0, r1
   11cc8:	pop	{r4, r5, r6, pc}
   11ccc:	ldrb	r3, [r4]
   11cd0:	ldr	r1, [pc, #128]	; 11d58 <abort@plt+0xe20>
   11cd4:	ldr	r0, [pc, #128]	; 11d5c <abort@plt+0xe24>
   11cd8:	cmp	r3, #96	; 0x60
   11cdc:	b	11cc4 <abort@plt+0xd8c>
   11ce0:	cmp	r3, #71	; 0x47
   11ce4:	bne	11cb8 <abort@plt+0xd80>
   11ce8:	ldrb	r3, [r0, #1]
   11cec:	bic	r3, r3, #32
   11cf0:	cmp	r3, #66	; 0x42
   11cf4:	bne	11cb8 <abort@plt+0xd80>
   11cf8:	ldrb	r3, [r0, #2]
   11cfc:	cmp	r3, #49	; 0x31
   11d00:	bne	11cb8 <abort@plt+0xd80>
   11d04:	ldrb	r3, [r0, #3]
   11d08:	cmp	r3, #56	; 0x38
   11d0c:	bne	11cb8 <abort@plt+0xd80>
   11d10:	ldrb	r3, [r0, #4]
   11d14:	cmp	r3, #48	; 0x30
   11d18:	bne	11cb8 <abort@plt+0xd80>
   11d1c:	ldrb	r3, [r0, #5]
   11d20:	cmp	r3, #51	; 0x33
   11d24:	bne	11cb8 <abort@plt+0xd80>
   11d28:	ldrb	r3, [r0, #6]
   11d2c:	cmp	r3, #48	; 0x30
   11d30:	bne	11cb8 <abort@plt+0xd80>
   11d34:	ldrb	r3, [r0, #7]
   11d38:	cmp	r3, #0
   11d3c:	bne	11cb8 <abort@plt+0xd80>
   11d40:	ldrb	r3, [r4]
   11d44:	ldr	r1, [pc, #20]	; 11d60 <abort@plt+0xe28>
   11d48:	ldr	r0, [pc, #20]	; 11d64 <abort@plt+0xe2c>
   11d4c:	b	11cd8 <abort@plt+0xda0>
   11d50:	andeq	r4, r1, sp, asr pc
   11d54:	andeq	r4, r1, fp, asr pc
   11d58:	andeq	r4, r1, r0, asr pc
   11d5c:	andeq	r4, r1, ip, asr #30
   11d60:	andeq	r4, r1, r8, asr pc
   11d64:	andeq	r4, r1, r4, asr pc
   11d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d6c:	sub	sp, sp, #108	; 0x6c
   11d70:	mov	r8, r0
   11d74:	str	r3, [sp, #36]	; 0x24
   11d78:	mov	r5, r1
   11d7c:	str	r2, [sp, #44]	; 0x2c
   11d80:	ldr	sl, [sp, #144]	; 0x90
   11d84:	bl	10d94 <__ctype_get_mb_cur_max@plt>
   11d88:	ldr	r3, [sp, #148]	; 0x94
   11d8c:	mov	r7, #0
   11d90:	str	r7, [sp, #48]	; 0x30
   11d94:	lsr	r6, r3, #1
   11d98:	and	r6, r6, #1
   11d9c:	mov	r3, #1
   11da0:	str	r3, [sp, #72]	; 0x48
   11da4:	str	r7, [sp, #24]
   11da8:	str	r7, [sp, #32]
   11dac:	str	r7, [sp, #40]	; 0x28
   11db0:	str	r7, [sp, #60]	; 0x3c
   11db4:	str	r0, [sp, #76]	; 0x4c
   11db8:	cmp	sl, #10
   11dbc:	ldrls	pc, [pc, sl, lsl #2]
   11dc0:	b	11ffc <abort@plt+0x10c4>
   11dc4:	strdeq	r1, [r1], -r0
   11dc8:	andeq	r2, r1, r4, lsl #21
   11dcc:	andeq	r1, r1, r8, asr #31
   11dd0:	andeq	r2, r1, r4, lsl r0
   11dd4:	andeq	r1, r1, r4, lsr #31
   11dd8:	strdeq	r1, [r1], -ip
   11ddc:	andeq	r2, r1, r4, ror #20
   11de0:	andeq	r2, r1, r0
   11de4:	strdeq	r1, [r1], -r4
   11de8:	strdeq	r1, [r1], -r4
   11dec:	strdeq	r1, [r1], -r4
   11df0:	mov	r6, #0
   11df4:	mov	r4, #0
   11df8:	b	11e28 <abort@plt+0xef0>
   11dfc:	cmp	r6, #0
   11e00:	bne	12024 <abort@plt+0x10ec>
   11e04:	cmp	r5, #0
   11e08:	movne	r3, #34	; 0x22
   11e0c:	strbne	r3, [r8]
   11e10:	mov	r3, #1
   11e14:	str	r3, [sp, #24]
   11e18:	str	r3, [sp, #32]
   11e1c:	mov	r4, #1
   11e20:	ldr	r3, [pc, #3172]	; 12a8c <abort@plt+0x1b54>
   11e24:	str	r3, [sp, #40]	; 0x28
   11e28:	mov	r9, r5
   11e2c:	mov	r3, #0
   11e30:	str	r7, [sp, #68]	; 0x44
   11e34:	str	r3, [sp, #28]
   11e38:	ldr	r3, [sp, #36]	; 0x24
   11e3c:	cmn	r3, #1
   11e40:	bne	129d0 <abort@plt+0x1a98>
   11e44:	ldr	r3, [sp, #44]	; 0x2c
   11e48:	ldr	r2, [sp, #28]
   11e4c:	ldrb	r3, [r3, r2]
   11e50:	adds	r3, r3, #0
   11e54:	movne	r3, #1
   11e58:	str	r3, [sp, #52]	; 0x34
   11e5c:	ldr	r3, [sp, #52]	; 0x34
   11e60:	cmp	r3, #0
   11e64:	bne	1204c <abort@plt+0x1114>
   11e68:	sub	r2, sl, #2
   11e6c:	clz	r2, r2
   11e70:	lsr	r2, r2, #5
   11e74:	and	r3, r6, r2
   11e78:	cmp	r4, #0
   11e7c:	movne	r3, #0
   11e80:	andeq	r3, r3, #1
   11e84:	cmp	r3, #0
   11e88:	bne	12214 <abort@plt+0x12dc>
   11e8c:	eor	r3, r6, #1
   11e90:	ands	r2, r2, r3
   11e94:	beq	12a08 <abort@plt+0x1ad0>
   11e98:	ldr	r3, [sp, #68]	; 0x44
   11e9c:	cmp	r3, #0
   11ea0:	beq	12a40 <abort@plt+0x1b08>
   11ea4:	ldr	r3, [sp, #72]	; 0x48
   11ea8:	cmp	r3, #0
   11eac:	beq	129e4 <abort@plt+0x1aac>
   11eb0:	ldr	r3, [sp, #160]	; 0xa0
   11eb4:	ldr	r2, [sp, #44]	; 0x2c
   11eb8:	str	r3, [sp, #16]
   11ebc:	ldr	r3, [sp, #156]	; 0x9c
   11ec0:	ldr	r1, [sp, #60]	; 0x3c
   11ec4:	str	r3, [sp, #12]
   11ec8:	ldr	r3, [sp, #152]	; 0x98
   11ecc:	str	r3, [sp, #8]
   11ed0:	ldr	r3, [sp, #148]	; 0x94
   11ed4:	str	r3, [sp, #4]
   11ed8:	mov	r3, #5
   11edc:	str	r3, [sp]
   11ee0:	ldr	r3, [sp, #36]	; 0x24
   11ee4:	mov	r0, r8
   11ee8:	bl	11d68 <abort@plt+0xe30>
   11eec:	mov	r4, r0
   11ef0:	b	12a34 <abort@plt+0x1afc>
   11ef4:	cmp	sl, #10
   11ef8:	beq	11f54 <abort@plt+0x101c>
   11efc:	ldr	r4, [pc, #2956]	; 12a90 <abort@plt+0x1b58>
   11f00:	mov	r2, #5
   11f04:	mov	r1, r4
   11f08:	mov	r0, #0
   11f0c:	bl	10d4c <dcgettext@plt>
   11f10:	cmp	r0, r4
   11f14:	str	r0, [sp, #156]	; 0x9c
   11f18:	bne	11f28 <abort@plt+0xff0>
   11f1c:	mov	r1, sl
   11f20:	bl	11c54 <abort@plt+0xd1c>
   11f24:	str	r0, [sp, #156]	; 0x9c
   11f28:	ldr	r4, [pc, #2916]	; 12a94 <abort@plt+0x1b5c>
   11f2c:	mov	r2, #5
   11f30:	mov	r1, r4
   11f34:	mov	r0, #0
   11f38:	bl	10d4c <dcgettext@plt>
   11f3c:	cmp	r0, r4
   11f40:	str	r0, [sp, #160]	; 0xa0
   11f44:	bne	11f54 <abort@plt+0x101c>
   11f48:	mov	r1, sl
   11f4c:	bl	11c54 <abort@plt+0xd1c>
   11f50:	str	r0, [sp, #160]	; 0xa0
   11f54:	cmp	r6, #0
   11f58:	moveq	r4, r6
   11f5c:	beq	11f74 <abort@plt+0x103c>
   11f60:	mov	r4, #0
   11f64:	b	11f84 <abort@plt+0x104c>
   11f68:	cmp	r5, r4
   11f6c:	strbhi	r3, [r8, r4]
   11f70:	add	r4, r4, #1
   11f74:	ldr	r3, [sp, #156]	; 0x9c
   11f78:	ldrb	r3, [r3, r4]
   11f7c:	cmp	r3, #0
   11f80:	bne	11f68 <abort@plt+0x1030>
   11f84:	ldr	r0, [sp, #160]	; 0xa0
   11f88:	bl	10e48 <strlen@plt>
   11f8c:	ldr	r3, [sp, #160]	; 0xa0
   11f90:	str	r3, [sp, #40]	; 0x28
   11f94:	mov	r3, #1
   11f98:	str	r3, [sp, #24]
   11f9c:	str	r0, [sp, #32]
   11fa0:	b	11e28 <abort@plt+0xef0>
   11fa4:	mov	r3, #1
   11fa8:	cmp	r6, #0
   11fac:	streq	r3, [sp, #24]
   11fb0:	beq	11fd0 <abort@plt+0x1098>
   11fb4:	str	r3, [sp, #32]
   11fb8:	ldr	r3, [pc, #2772]	; 12a94 <abort@plt+0x1b5c>
   11fbc:	mov	r4, #0
   11fc0:	str	r3, [sp, #40]	; 0x28
   11fc4:	b	11ff4 <abort@plt+0x10bc>
   11fc8:	cmp	r6, #0
   11fcc:	bne	1203c <abort@plt+0x1104>
   11fd0:	cmp	r5, #0
   11fd4:	movne	r3, #39	; 0x27
   11fd8:	strbne	r3, [r8]
   11fdc:	mov	r3, #1
   11fe0:	str	r3, [sp, #32]
   11fe4:	mov	r6, #0
   11fe8:	ldr	r3, [pc, #2724]	; 12a94 <abort@plt+0x1b5c>
   11fec:	mov	r4, #1
   11ff0:	str	r3, [sp, #40]	; 0x28
   11ff4:	mov	sl, #2
   11ff8:	b	11e28 <abort@plt+0xef0>
   11ffc:	bl	10f38 <abort@plt>
   12000:	mov	r6, #0
   12004:	mov	r3, #1
   12008:	str	r3, [sp, #24]
   1200c:	mov	r4, r6
   12010:	b	11e28 <abort@plt+0xef0>
   12014:	mov	r6, #1
   12018:	str	r6, [sp, #24]
   1201c:	str	r6, [sp, #32]
   12020:	b	11fb8 <abort@plt+0x1080>
   12024:	mov	r3, #1
   12028:	str	r3, [sp, #32]
   1202c:	ldr	r3, [pc, #2648]	; 12a8c <abort@plt+0x1b54>
   12030:	str	r6, [sp, #24]
   12034:	str	r3, [sp, #40]	; 0x28
   12038:	b	11df4 <abort@plt+0xebc>
   1203c:	mov	r3, #1
   12040:	str	r3, [sp, #32]
   12044:	ldr	r3, [pc, #2632]	; 12a94 <abort@plt+0x1b5c>
   12048:	b	12034 <abort@plt+0x10fc>
   1204c:	ldr	r3, [sp, #32]
   12050:	ldr	fp, [sp, #24]
   12054:	cmp	sl, #2
   12058:	moveq	fp, #0
   1205c:	andne	fp, fp, #1
   12060:	adds	r5, r3, #0
   12064:	movne	r5, #1
   12068:	ands	r3, r5, fp
   1206c:	str	r3, [sp, #64]	; 0x40
   12070:	beq	12140 <abort@plt+0x1208>
   12074:	ldr	r2, [sp, #32]
   12078:	ldr	r3, [sp, #28]
   1207c:	add	r7, r3, r2
   12080:	mov	r3, r2
   12084:	ldr	r2, [sp, #36]	; 0x24
   12088:	cmp	r3, #1
   1208c:	movls	r3, #0
   12090:	movhi	r3, #1
   12094:	cmn	r2, #1
   12098:	movne	r3, #0
   1209c:	cmp	r3, #0
   120a0:	beq	120b0 <abort@plt+0x1178>
   120a4:	ldr	r0, [sp, #44]	; 0x2c
   120a8:	bl	10e48 <strlen@plt>
   120ac:	str	r0, [sp, #36]	; 0x24
   120b0:	ldr	r3, [sp, #36]	; 0x24
   120b4:	cmp	r3, r7
   120b8:	bcc	12138 <abort@plt+0x1200>
   120bc:	ldr	r3, [sp, #44]	; 0x2c
   120c0:	ldr	r0, [sp, #28]
   120c4:	ldr	r2, [sp, #32]
   120c8:	ldr	r1, [sp, #40]	; 0x28
   120cc:	add	r0, r3, r0
   120d0:	bl	10d34 <memcmp@plt>
   120d4:	cmp	r0, #0
   120d8:	bne	12138 <abort@plt+0x1200>
   120dc:	cmp	r6, #0
   120e0:	beq	12140 <abort@plt+0x1208>
   120e4:	str	r6, [sp, #24]
   120e8:	ldr	r3, [sp, #24]
   120ec:	ldr	r2, [sp, #44]	; 0x2c
   120f0:	cmp	sl, #2
   120f4:	movne	r3, #0
   120f8:	andeq	r3, r3, #1
   120fc:	cmp	r3, #0
   12100:	ldr	r3, [sp, #160]	; 0xa0
   12104:	movne	sl, #4
   12108:	str	r3, [sp, #16]
   1210c:	ldr	r3, [sp, #156]	; 0x9c
   12110:	str	sl, [sp]
   12114:	str	r3, [sp, #12]
   12118:	mov	r3, #0
   1211c:	str	r3, [sp, #8]
   12120:	ldr	r3, [sp, #148]	; 0x94
   12124:	mov	r1, r9
   12128:	bic	r3, r3, #2
   1212c:	str	r3, [sp, #4]
   12130:	ldr	r3, [sp, #36]	; 0x24
   12134:	b	11ee4 <abort@plt+0xfac>
   12138:	mov	r3, #0
   1213c:	str	r3, [sp, #64]	; 0x40
   12140:	ldr	r2, [sp, #28]
   12144:	ldr	r3, [sp, #44]	; 0x2c
   12148:	add	r3, r3, r2
   1214c:	str	r3, [sp, #80]	; 0x50
   12150:	ldr	r3, [sp, #44]	; 0x2c
   12154:	ldrb	r7, [r3, r2]
   12158:	cmp	r7, #58	; 0x3a
   1215c:	bhi	122c4 <abort@plt+0x138c>
   12160:	cmp	r7, #43	; 0x2b
   12164:	bcs	12318 <abort@plt+0x13e0>
   12168:	cmp	r7, #32
   1216c:	beq	12370 <abort@plt+0x1438>
   12170:	bhi	1221c <abort@plt+0x12e4>
   12174:	cmp	r7, #9
   12178:	beq	12624 <abort@plt+0x16ec>
   1217c:	bhi	121e0 <abort@plt+0x12a8>
   12180:	cmp	r7, #7
   12184:	beq	126d0 <abort@plt+0x1798>
   12188:	bhi	1238c <abort@plt+0x1454>
   1218c:	cmp	r7, #0
   12190:	beq	123a8 <abort@plt+0x1470>
   12194:	ldr	r3, [sp, #76]	; 0x4c
   12198:	cmp	r3, #1
   1219c:	bne	12714 <abort@plt+0x17dc>
   121a0:	bl	10e30 <__ctype_b_loc@plt>
   121a4:	sxth	r3, r7
   121a8:	lsl	r3, r3, #1
   121ac:	ldr	r2, [r0]
   121b0:	ldrh	r5, [r2, r3]
   121b4:	ldr	r3, [sp, #76]	; 0x4c
   121b8:	str	r3, [sp, #56]	; 0x38
   121bc:	lsr	r5, r5, #14
   121c0:	and	r5, r5, #1
   121c4:	ldr	r3, [sp, #24]
   121c8:	eor	fp, r5, #1
   121cc:	and	fp, fp, r3
   121d0:	ands	fp, fp, #255	; 0xff
   121d4:	beq	1255c <abort@plt+0x1624>
   121d8:	mov	r5, #0
   121dc:	b	127c0 <abort@plt+0x1888>
   121e0:	cmp	r7, #11
   121e4:	beq	1262c <abort@plt+0x16f4>
   121e8:	bcc	126c8 <abort@plt+0x1790>
   121ec:	cmp	r7, #12
   121f0:	beq	126d8 <abort@plt+0x17a0>
   121f4:	cmp	r7, #13
   121f8:	moveq	r3, #114	; 0x72
   121fc:	bne	12194 <abort@plt+0x125c>
   12200:	cmp	sl, #2
   12204:	movne	r2, #0
   12208:	andeq	r2, r6, #1
   1220c:	cmp	r2, #0
   12210:	beq	12390 <abort@plt+0x1458>
   12214:	mov	sl, #2
   12218:	b	120e8 <abort@plt+0x11b0>
   1221c:	cmp	r7, #37	; 0x25
   12220:	beq	12318 <abort@plt+0x13e0>
   12224:	bhi	12238 <abort@plt+0x1300>
   12228:	cmp	r7, #35	; 0x23
   1222c:	beq	12364 <abort@plt+0x142c>
   12230:	mov	r5, #0
   12234:	b	12374 <abort@plt+0x143c>
   12238:	cmp	r7, #39	; 0x27
   1223c:	bne	12230 <abort@plt+0x12f8>
   12240:	cmp	sl, #2
   12244:	ldrne	r5, [sp, #52]	; 0x34
   12248:	movne	r3, r5
   1224c:	strne	r3, [sp, #68]	; 0x44
   12250:	bne	1231c <abort@plt+0x13e4>
   12254:	cmp	r6, #0
   12258:	bne	120e8 <abort@plt+0x11b0>
   1225c:	ldr	r2, [sp, #60]	; 0x3c
   12260:	adds	r3, r9, #0
   12264:	movne	r3, #1
   12268:	cmp	r2, #0
   1226c:	movne	r3, #0
   12270:	cmp	r3, #0
   12274:	strne	r9, [sp, #60]	; 0x3c
   12278:	movne	r9, #0
   1227c:	bne	1228c <abort@plt+0x1354>
   12280:	cmp	r9, r4
   12284:	movhi	r3, #39	; 0x27
   12288:	strbhi	r3, [r8, r4]
   1228c:	add	r3, r4, #1
   12290:	cmp	r3, r9
   12294:	movcc	r2, #92	; 0x5c
   12298:	strbcc	r2, [r8, r3]
   1229c:	add	r3, r4, #2
   122a0:	cmp	r3, r9
   122a4:	ldr	r5, [sp, #52]	; 0x34
   122a8:	movcc	r2, #39	; 0x27
   122ac:	strbcc	r2, [r8, r3]
   122b0:	add	r4, r4, #3
   122b4:	mov	fp, r6
   122b8:	str	r5, [sp, #68]	; 0x44
   122bc:	str	r6, [sp, #48]	; 0x30
   122c0:	b	1255c <abort@plt+0x1624>
   122c4:	cmp	r7, #94	; 0x5e
   122c8:	beq	12230 <abort@plt+0x12f8>
   122cc:	bhi	12324 <abort@plt+0x13ec>
   122d0:	cmp	r7, #90	; 0x5a
   122d4:	bhi	1230c <abort@plt+0x13d4>
   122d8:	cmp	r7, #65	; 0x41
   122dc:	bcs	12318 <abort@plt+0x13e0>
   122e0:	cmp	r7, #62	; 0x3e
   122e4:	bls	12230 <abort@plt+0x12f8>
   122e8:	cmp	r7, #63	; 0x3f
   122ec:	bne	12194 <abort@plt+0x125c>
   122f0:	cmp	sl, #2
   122f4:	beq	12498 <abort@plt+0x1560>
   122f8:	cmp	sl, #5
   122fc:	beq	124a8 <abort@plt+0x1570>
   12300:	mov	fp, #0
   12304:	mov	r5, fp
   12308:	b	1255c <abort@plt+0x1624>
   1230c:	cmp	r7, #92	; 0x5c
   12310:	beq	12634 <abort@plt+0x16fc>
   12314:	bls	12230 <abort@plt+0x12f8>
   12318:	ldr	r5, [sp, #52]	; 0x34
   1231c:	mov	fp, #0
   12320:	b	1255c <abort@plt+0x1624>
   12324:	cmp	r7, #122	; 0x7a
   12328:	bhi	12348 <abort@plt+0x1410>
   1232c:	cmp	r7, #97	; 0x61
   12330:	bcs	12318 <abort@plt+0x13e0>
   12334:	cmp	r7, #95	; 0x5f
   12338:	beq	12318 <abort@plt+0x13e0>
   1233c:	cmp	r7, #96	; 0x60
   12340:	bne	12194 <abort@plt+0x125c>
   12344:	b	12230 <abort@plt+0x12f8>
   12348:	cmp	r7, #124	; 0x7c
   1234c:	beq	12230 <abort@plt+0x12f8>
   12350:	bcc	126e0 <abort@plt+0x17a8>
   12354:	cmp	r7, #125	; 0x7d
   12358:	beq	126e0 <abort@plt+0x17a8>
   1235c:	cmp	r7, #126	; 0x7e
   12360:	bne	12194 <abort@plt+0x125c>
   12364:	ldr	r3, [sp, #28]
   12368:	cmp	r3, #0
   1236c:	bne	124a0 <abort@plt+0x1568>
   12370:	ldr	r5, [sp, #52]	; 0x34
   12374:	cmp	sl, #2
   12378:	movne	fp, #0
   1237c:	andeq	fp, r6, #1
   12380:	cmp	fp, #0
   12384:	beq	1255c <abort@plt+0x1624>
   12388:	b	12214 <abort@plt+0x12dc>
   1238c:	mov	r3, #98	; 0x62
   12390:	ldr	r2, [sp, #24]
   12394:	cmp	r2, #0
   12398:	beq	124a0 <abort@plt+0x1568>
   1239c:	mov	r7, r3
   123a0:	mov	r5, #0
   123a4:	b	125b4 <abort@plt+0x167c>
   123a8:	ldr	r3, [sp, #24]
   123ac:	cmp	r3, #0
   123b0:	beq	1247c <abort@plt+0x1544>
   123b4:	cmp	r6, #0
   123b8:	bne	120e4 <abort@plt+0x11ac>
   123bc:	ldr	r3, [sp, #48]	; 0x30
   123c0:	eor	r2, r3, #1
   123c4:	cmp	sl, #2
   123c8:	movne	r2, #0
   123cc:	andeq	r2, r2, #1
   123d0:	cmp	r2, #0
   123d4:	moveq	r3, r4
   123d8:	beq	12410 <abort@plt+0x14d8>
   123dc:	cmp	r9, r4
   123e0:	movhi	r3, #39	; 0x27
   123e4:	strbhi	r3, [r8, r4]
   123e8:	add	r3, r4, #1
   123ec:	cmp	r9, r3
   123f0:	movhi	r1, #36	; 0x24
   123f4:	strbhi	r1, [r8, r3]
   123f8:	add	r3, r4, #2
   123fc:	cmp	r9, r3
   12400:	movhi	r1, #39	; 0x27
   12404:	strbhi	r1, [r8, r3]
   12408:	add	r3, r4, #3
   1240c:	str	r2, [sp, #48]	; 0x30
   12410:	cmp	r9, r3
   12414:	movhi	r2, #92	; 0x5c
   12418:	strbhi	r2, [r8, r3]
   1241c:	cmp	fp, #0
   12420:	add	r4, r3, #1
   12424:	beq	129b4 <abort@plt+0x1a7c>
   12428:	ldr	r2, [sp, #28]
   1242c:	ldr	r1, [sp, #36]	; 0x24
   12430:	add	r2, r2, #1
   12434:	cmp	r1, r2
   12438:	bls	12474 <abort@plt+0x153c>
   1243c:	ldr	r1, [sp, #44]	; 0x2c
   12440:	mov	r7, #48	; 0x30
   12444:	ldrb	r2, [r1, r2]
   12448:	sub	r2, r2, #48	; 0x30
   1244c:	cmp	r2, #9
   12450:	movhi	r5, r6
   12454:	bhi	1255c <abort@plt+0x1624>
   12458:	cmp	r9, r4
   1245c:	add	r2, r3, #2
   12460:	strbhi	r7, [r8, r4]
   12464:	cmp	r9, r2
   12468:	add	r4, r3, #3
   1246c:	movhi	r1, #48	; 0x30
   12470:	strbhi	r1, [r8, r2]
   12474:	mov	r5, r6
   12478:	b	129bc <abort@plt+0x1a84>
   1247c:	ldr	r3, [sp, #148]	; 0x94
   12480:	tst	r3, #1
   12484:	ldreq	r5, [sp, #24]
   12488:	beq	129c8 <abort@plt+0x1a90>
   1248c:	ldr	r3, [sp, #28]
   12490:	add	r3, r3, #1
   12494:	b	11e34 <abort@plt+0xefc>
   12498:	cmp	r6, #0
   1249c:	bne	120e8 <abort@plt+0x11b0>
   124a0:	mov	r5, #0
   124a4:	b	1231c <abort@plt+0x13e4>
   124a8:	ldr	r3, [sp, #148]	; 0x94
   124ac:	tst	r3, #4
   124b0:	beq	124a0 <abort@plt+0x1568>
   124b4:	ldr	r3, [sp, #28]
   124b8:	add	r2, r3, #2
   124bc:	ldr	r3, [sp, #36]	; 0x24
   124c0:	cmp	r3, r2
   124c4:	bls	124a0 <abort@plt+0x1568>
   124c8:	ldr	r3, [sp, #44]	; 0x2c
   124cc:	ldr	r1, [sp, #28]
   124d0:	add	r3, r3, r1
   124d4:	ldrb	r0, [r3, #1]
   124d8:	cmp	r0, #63	; 0x3f
   124dc:	bne	124a0 <abort@plt+0x1568>
   124e0:	ldr	r3, [sp, #44]	; 0x2c
   124e4:	ldrb	r1, [r3, r2]
   124e8:	sub	r3, r1, #33	; 0x21
   124ec:	uxtb	r3, r3
   124f0:	cmp	r3, #29
   124f4:	bhi	129c4 <abort@plt+0x1a8c>
   124f8:	mov	ip, #1
   124fc:	ldr	r5, [pc, #1428]	; 12a98 <abort@plt+0x1b60>
   12500:	ands	r5, r5, ip, lsl r3
   12504:	beq	1231c <abort@plt+0x13e4>
   12508:	cmp	r6, #0
   1250c:	bne	120e8 <abort@plt+0x11b0>
   12510:	add	r3, r4, #1
   12514:	cmp	r9, r4
   12518:	strbhi	r0, [r8, r4]
   1251c:	cmp	r9, r3
   12520:	movhi	r0, #34	; 0x22
   12524:	strbhi	r0, [r8, r3]
   12528:	add	r3, r4, #2
   1252c:	cmp	r9, r3
   12530:	movhi	r0, #34	; 0x22
   12534:	strbhi	r0, [r8, r3]
   12538:	add	r3, r4, #3
   1253c:	cmp	r9, r3
   12540:	add	r4, r4, #4
   12544:	mov	r5, r6
   12548:	mov	fp, r6
   1254c:	mov	r7, r1
   12550:	movhi	r0, #63	; 0x3f
   12554:	strbhi	r0, [r8, r3]
   12558:	str	r2, [sp, #28]
   1255c:	ldr	r3, [sp, #24]
   12560:	eor	r3, r3, #1
   12564:	cmp	sl, #2
   12568:	orreq	r3, r3, #1
   1256c:	eor	r3, r3, #1
   12570:	orr	r3, r6, r3
   12574:	tst	r3, #255	; 0xff
   12578:	beq	125a8 <abort@plt+0x1670>
   1257c:	ldr	r3, [sp, #152]	; 0x98
   12580:	cmp	r3, #0
   12584:	beq	125a8 <abort@plt+0x1670>
   12588:	lsr	r2, r7, #5
   1258c:	ldr	r1, [sp, #152]	; 0x98
   12590:	uxtb	r2, r2
   12594:	and	r3, r7, #31
   12598:	ldr	r2, [r1, r2, lsl #2]
   1259c:	lsr	r3, r2, r3
   125a0:	tst	r3, #1
   125a4:	bne	125b4 <abort@plt+0x167c>
   125a8:	ldr	r3, [sp, #64]	; 0x40
   125ac:	cmp	r3, #0
   125b0:	beq	1264c <abort@plt+0x1714>
   125b4:	cmp	r6, #0
   125b8:	bne	120e8 <abort@plt+0x11b0>
   125bc:	ldr	r3, [sp, #48]	; 0x30
   125c0:	eor	r3, r3, #1
   125c4:	cmp	sl, #2
   125c8:	movne	r3, #0
   125cc:	andeq	r3, r3, #1
   125d0:	cmp	r3, #0
   125d4:	beq	1260c <abort@plt+0x16d4>
   125d8:	cmp	r9, r4
   125dc:	movhi	r2, #39	; 0x27
   125e0:	strbhi	r2, [r8, r4]
   125e4:	add	r2, r4, #1
   125e8:	cmp	r9, r2
   125ec:	movhi	r1, #36	; 0x24
   125f0:	strbhi	r1, [r8, r2]
   125f4:	add	r2, r4, #2
   125f8:	cmp	r9, r2
   125fc:	add	r4, r4, #3
   12600:	movhi	r1, #39	; 0x27
   12604:	strbhi	r1, [r8, r2]
   12608:	str	r3, [sp, #48]	; 0x30
   1260c:	cmp	r9, r4
   12610:	movhi	r3, #92	; 0x5c
   12614:	strbhi	r3, [r8, r4]
   12618:	ldr	fp, [sp, #52]	; 0x34
   1261c:	add	r4, r4, #1
   12620:	b	1264c <abort@plt+0x1714>
   12624:	mov	r3, #116	; 0x74
   12628:	b	12200 <abort@plt+0x12c8>
   1262c:	mov	r3, #118	; 0x76
   12630:	b	12390 <abort@plt+0x1458>
   12634:	cmp	sl, #2
   12638:	bne	126a8 <abort@plt+0x1770>
   1263c:	cmp	r6, #0
   12640:	bne	120e8 <abort@plt+0x11b0>
   12644:	mov	r5, r6
   12648:	mov	fp, r6
   1264c:	ldr	r3, [sp, #48]	; 0x30
   12650:	eor	fp, fp, #1
   12654:	and	fp, fp, r3
   12658:	tst	fp, #255	; 0xff
   1265c:	beq	12688 <abort@plt+0x1750>
   12660:	cmp	r9, r4
   12664:	movhi	r3, #39	; 0x27
   12668:	strbhi	r3, [r8, r4]
   1266c:	add	r3, r4, #1
   12670:	cmp	r9, r3
   12674:	movhi	r2, #39	; 0x27
   12678:	add	r4, r4, #2
   1267c:	strbhi	r2, [r8, r3]
   12680:	mov	r3, #0
   12684:	str	r3, [sp, #48]	; 0x30
   12688:	cmp	r9, r4
   1268c:	strbhi	r7, [r8, r4]
   12690:	ldr	r3, [sp, #72]	; 0x48
   12694:	cmp	r5, #0
   12698:	moveq	r3, #0
   1269c:	add	r4, r4, #1
   126a0:	str	r3, [sp, #72]	; 0x48
   126a4:	b	1248c <abort@plt+0x1554>
   126a8:	ldr	r3, [sp, #24]
   126ac:	and	r3, r3, r6
   126b0:	tst	r5, r3
   126b4:	moveq	r3, r7
   126b8:	beq	12200 <abort@plt+0x12c8>
   126bc:	mov	fp, #0
   126c0:	mov	r5, fp
   126c4:	b	1264c <abort@plt+0x1714>
   126c8:	mov	r3, #110	; 0x6e
   126cc:	b	12200 <abort@plt+0x12c8>
   126d0:	mov	r3, #97	; 0x61
   126d4:	b	12390 <abort@plt+0x1458>
   126d8:	mov	r3, #102	; 0x66
   126dc:	b	12390 <abort@plt+0x1458>
   126e0:	ldr	r3, [sp, #36]	; 0x24
   126e4:	cmn	r3, #1
   126e8:	bne	12708 <abort@plt+0x17d0>
   126ec:	ldr	r3, [sp, #44]	; 0x2c
   126f0:	ldrb	r3, [r3, #1]
   126f4:	adds	r3, r3, #0
   126f8:	movne	r3, #1
   126fc:	cmp	r3, #0
   12700:	bne	124a0 <abort@plt+0x1568>
   12704:	b	12364 <abort@plt+0x142c>
   12708:	ldr	r3, [sp, #36]	; 0x24
   1270c:	subs	r3, r3, #1
   12710:	b	126f8 <abort@plt+0x17c0>
   12714:	mov	r3, #0
   12718:	str	r3, [sp, #96]	; 0x60
   1271c:	str	r3, [sp, #100]	; 0x64
   12720:	ldr	r3, [sp, #36]	; 0x24
   12724:	cmn	r3, #1
   12728:	bne	12738 <abort@plt+0x1800>
   1272c:	ldr	r0, [sp, #44]	; 0x2c
   12730:	bl	10e48 <strlen@plt>
   12734:	str	r0, [sp, #36]	; 0x24
   12738:	ldr	r5, [sp, #52]	; 0x34
   1273c:	mov	r3, #0
   12740:	str	r3, [sp, #56]	; 0x38
   12744:	ldr	r3, [sp, #28]
   12748:	ldr	r2, [sp, #56]	; 0x38
   1274c:	ldr	r1, [sp, #36]	; 0x24
   12750:	add	r2, r3, r2
   12754:	ldr	r3, [sp, #44]	; 0x2c
   12758:	add	r0, sp, #92	; 0x5c
   1275c:	add	fp, r3, r2
   12760:	sub	r2, r1, r2
   12764:	add	r3, sp, #96	; 0x60
   12768:	mov	r1, fp
   1276c:	bl	140f0 <abort@plt+0x31b8>
   12770:	subs	r2, r0, #0
   12774:	beq	127b4 <abort@plt+0x187c>
   12778:	cmn	r2, #1
   1277c:	beq	1298c <abort@plt+0x1a54>
   12780:	cmn	r2, #2
   12784:	bne	128fc <abort@plt+0x19c4>
   12788:	ldr	r2, [sp, #56]	; 0x38
   1278c:	ldr	r3, [sp, #28]
   12790:	add	r3, r3, r2
   12794:	ldr	r2, [sp, #36]	; 0x24
   12798:	cmp	r2, r3
   1279c:	bls	1298c <abort@plt+0x1a54>
   127a0:	ldr	r3, [sp, #80]	; 0x50
   127a4:	ldr	r2, [sp, #56]	; 0x38
   127a8:	ldrb	r5, [r3, r2]
   127ac:	cmp	r5, #0
   127b0:	bne	128ec <abort@plt+0x19b4>
   127b4:	ldr	r3, [sp, #56]	; 0x38
   127b8:	cmp	r3, #1
   127bc:	bls	121c4 <abort@plt+0x128c>
   127c0:	ldr	r2, [sp, #56]	; 0x38
   127c4:	ldr	r3, [sp, #28]
   127c8:	mov	fp, #0
   127cc:	add	r3, r3, r2
   127d0:	ldr	r2, [sp, #24]
   127d4:	str	r3, [sp, #52]	; 0x34
   127d8:	eor	r3, r5, #1
   127dc:	and	r3, r3, r2
   127e0:	mov	ip, #92	; 0x5c
   127e4:	uxtb	r3, r3
   127e8:	mov	r2, #39	; 0x27
   127ec:	cmp	r3, #0
   127f0:	beq	12994 <abort@plt+0x1a5c>
   127f4:	cmp	r6, #0
   127f8:	bne	120e4 <abort@plt+0x11ac>
   127fc:	ldr	r1, [sp, #48]	; 0x30
   12800:	eor	r1, r1, #1
   12804:	cmp	sl, #2
   12808:	movne	r1, #0
   1280c:	andeq	r1, r1, #1
   12810:	cmp	r1, #0
   12814:	beq	12844 <abort@plt+0x190c>
   12818:	add	r0, r4, #1
   1281c:	cmp	r9, r4
   12820:	strbhi	r2, [r8, r4]
   12824:	cmp	r9, r0
   12828:	movhi	lr, #36	; 0x24
   1282c:	strbhi	lr, [r8, r0]
   12830:	add	r0, r4, #2
   12834:	add	r4, r4, #3
   12838:	cmp	r9, r0
   1283c:	strbhi	r2, [r8, r0]
   12840:	str	r1, [sp, #48]	; 0x30
   12844:	add	r0, r4, #1
   12848:	cmp	r9, r4
   1284c:	strbhi	ip, [r8, r4]
   12850:	cmp	r9, r0
   12854:	lsrhi	r1, r7, #6
   12858:	addhi	r1, r1, #48	; 0x30
   1285c:	strbhi	r1, [r8, r0]
   12860:	add	r0, r4, #2
   12864:	cmp	r9, r0
   12868:	lsrhi	r1, r7, #3
   1286c:	and	r7, r7, #7
   12870:	andhi	r1, r1, #7
   12874:	add	r4, r4, #3
   12878:	add	r7, r7, #48	; 0x30
   1287c:	mov	fp, r3
   12880:	addhi	r1, r1, #48	; 0x30
   12884:	strbhi	r1, [r8, r0]
   12888:	ldr	r1, [sp, #28]
   1288c:	ldr	r0, [sp, #52]	; 0x34
   12890:	add	r1, r1, #1
   12894:	cmp	r0, r1
   12898:	bls	1264c <abort@plt+0x1714>
   1289c:	ldr	lr, [sp, #48]	; 0x30
   128a0:	eor	r0, fp, #1
   128a4:	and	r0, r0, lr
   128a8:	tst	r0, #255	; 0xff
   128ac:	beq	128d0 <abort@plt+0x1998>
   128b0:	add	r0, r4, #1
   128b4:	cmp	r9, r4
   128b8:	strbhi	r2, [r8, r4]
   128bc:	cmp	r9, r0
   128c0:	add	r4, r4, #2
   128c4:	strbhi	r2, [r8, r0]
   128c8:	mov	r0, #0
   128cc:	str	r0, [sp, #48]	; 0x30
   128d0:	ldr	r0, [sp, #44]	; 0x2c
   128d4:	cmp	r9, r4
   128d8:	strbhi	r7, [r8, r4]
   128dc:	str	r1, [sp, #28]
   128e0:	add	r4, r4, #1
   128e4:	ldrb	r7, [r0, r1]
   128e8:	b	127ec <abort@plt+0x18b4>
   128ec:	ldr	r3, [sp, #56]	; 0x38
   128f0:	add	r3, r3, #1
   128f4:	str	r3, [sp, #56]	; 0x38
   128f8:	b	12788 <abort@plt+0x1850>
   128fc:	cmp	sl, #2
   12900:	movne	r3, #0
   12904:	andeq	r3, r6, #1
   12908:	cmp	r3, #0
   1290c:	movne	r1, #1
   12910:	bne	1296c <abort@plt+0x1a34>
   12914:	ldr	r0, [sp, #92]	; 0x5c
   12918:	str	r2, [sp, #84]	; 0x54
   1291c:	bl	10d7c <iswprint@plt>
   12920:	ldr	r3, [sp, #56]	; 0x38
   12924:	ldr	r2, [sp, #84]	; 0x54
   12928:	add	r3, r3, r2
   1292c:	str	r3, [sp, #56]	; 0x38
   12930:	cmp	r0, #0
   12934:	add	r0, sp, #96	; 0x60
   12938:	moveq	r5, #0
   1293c:	bl	10d28 <mbsinit@plt>
   12940:	cmp	r0, #0
   12944:	beq	12744 <abort@plt+0x180c>
   12948:	b	127b4 <abort@plt+0x187c>
   1294c:	ldrb	r3, [fp, r1]
   12950:	cmp	r3, #94	; 0x5e
   12954:	beq	12214 <abort@plt+0x12dc>
   12958:	bhi	12978 <abort@plt+0x1a40>
   1295c:	sub	r3, r3, #91	; 0x5b
   12960:	cmp	r3, #1
   12964:	bls	12214 <abort@plt+0x12dc>
   12968:	add	r1, r1, #1
   1296c:	cmp	r1, r2
   12970:	bne	1294c <abort@plt+0x1a14>
   12974:	b	12914 <abort@plt+0x19dc>
   12978:	cmp	r3, #96	; 0x60
   1297c:	beq	12214 <abort@plt+0x12dc>
   12980:	cmp	r3, #124	; 0x7c
   12984:	bne	12968 <abort@plt+0x1a30>
   12988:	b	12214 <abort@plt+0x12dc>
   1298c:	mov	r5, #0
   12990:	b	127b4 <abort@plt+0x187c>
   12994:	ldr	r1, [sp, #64]	; 0x40
   12998:	cmp	r1, #0
   1299c:	beq	12888 <abort@plt+0x1950>
   129a0:	cmp	r9, r4
   129a4:	strbhi	ip, [r8, r4]
   129a8:	str	r3, [sp, #64]	; 0x40
   129ac:	add	r4, r4, #1
   129b0:	b	12888 <abort@plt+0x1950>
   129b4:	mov	r5, fp
   129b8:	ldr	fp, [sp, #24]
   129bc:	mov	r7, #48	; 0x30
   129c0:	b	1255c <abort@plt+0x1624>
   129c4:	mov	r5, #0
   129c8:	mov	fp, r5
   129cc:	b	1255c <abort@plt+0x1624>
   129d0:	ldr	r3, [sp, #36]	; 0x24
   129d4:	ldr	r2, [sp, #28]
   129d8:	subs	r3, r3, r2
   129dc:	movne	r3, #1
   129e0:	b	11e58 <abort@plt+0xf20>
   129e4:	ldr	r3, [sp, #60]	; 0x3c
   129e8:	clz	r7, r9
   129ec:	cmp	r3, #0
   129f0:	lsr	r7, r7, #5
   129f4:	moveq	r7, #0
   129f8:	cmp	r7, #0
   129fc:	mov	r5, r3
   12a00:	bne	11db8 <abort@plt+0xe80>
   12a04:	ldr	r3, [sp, #68]	; 0x44
   12a08:	ldr	r2, [sp, #40]	; 0x28
   12a0c:	cmp	r2, #0
   12a10:	moveq	r3, #0
   12a14:	andne	r3, r3, #1
   12a18:	cmp	r3, #0
   12a1c:	movne	r3, r2
   12a20:	subne	r2, r3, #1
   12a24:	bne	12a54 <abort@plt+0x1b1c>
   12a28:	cmp	r9, r4
   12a2c:	movhi	r3, #0
   12a30:	strbhi	r3, [r8, r4]
   12a34:	mov	r0, r4
   12a38:	add	sp, sp, #108	; 0x6c
   12a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a40:	mov	r3, r2
   12a44:	b	12a08 <abort@plt+0x1ad0>
   12a48:	cmp	r9, r4
   12a4c:	strbhi	r3, [r8, r4]
   12a50:	add	r4, r4, #1
   12a54:	ldrb	r3, [r2, #1]!
   12a58:	cmp	r3, #0
   12a5c:	bne	12a48 <abort@plt+0x1b10>
   12a60:	b	12a28 <abort@plt+0x1af0>
   12a64:	ldr	r3, [pc, #32]	; 12a8c <abort@plt+0x1b54>
   12a68:	mov	r6, #1
   12a6c:	str	r6, [sp, #24]
   12a70:	str	r6, [sp, #32]
   12a74:	str	r3, [sp, #40]	; 0x28
   12a78:	mov	r4, #0
   12a7c:	mov	sl, #5
   12a80:	b	11e28 <abort@plt+0xef0>
   12a84:	mov	r6, #1
   12a88:	b	1201c <abort@plt+0x10e4>
   12a8c:	andeq	r4, r1, fp, asr pc
   12a90:	andeq	r4, r1, pc, asr pc
   12a94:	andeq	r4, r1, sp, asr pc
   12a98:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa0:	sub	sp, sp, #52	; 0x34
   12aa4:	mov	r6, r0
   12aa8:	mov	r5, r3
   12aac:	mov	r8, r1
   12ab0:	mov	r9, r2
   12ab4:	bl	10e6c <__errno_location@plt>
   12ab8:	ldr	r7, [pc, #380]	; 12c3c <abort@plt+0x1d04>
   12abc:	cmn	r6, #-2147483647	; 0x80000001
   12ac0:	ldr	r4, [r7]
   12ac4:	ldr	r3, [r0]
   12ac8:	str	r0, [sp, #24]
   12acc:	str	r3, [sp, #32]
   12ad0:	movne	r3, #0
   12ad4:	moveq	r3, #1
   12ad8:	orrs	r3, r3, r6, lsr #31
   12adc:	beq	12ae4 <abort@plt+0x1bac>
   12ae0:	bl	10f38 <abort@plt>
   12ae4:	ldr	r2, [r7, #4]
   12ae8:	cmp	r6, r2
   12aec:	blt	12b5c <abort@plt+0x1c24>
   12af0:	add	r1, sp, #48	; 0x30
   12af4:	add	sl, r7, #8
   12af8:	str	r2, [r1, #-4]!
   12afc:	cmp	r4, sl
   12b00:	mov	r3, #8
   12b04:	sub	r2, r6, r2
   12b08:	movne	r0, r4
   12b0c:	str	r3, [sp]
   12b10:	add	r2, r2, #1
   12b14:	mvn	r3, #-2147483648	; 0x80000000
   12b18:	moveq	r0, #0
   12b1c:	bl	13a78 <abort@plt+0x2b40>
   12b20:	cmp	r4, sl
   12b24:	ldr	r2, [sp, #44]	; 0x2c
   12b28:	mov	fp, r0
   12b2c:	str	r0, [r7]
   12b30:	ldmeq	r4, {r0, r1}
   12b34:	mov	r4, fp
   12b38:	stmeq	fp, {r0, r1}
   12b3c:	ldr	r0, [r7, #4]
   12b40:	mov	r1, #0
   12b44:	sub	r2, r2, r0
   12b48:	add	r0, fp, r0, lsl #3
   12b4c:	lsl	r2, r2, #3
   12b50:	bl	10e90 <memset@plt>
   12b54:	ldr	r3, [sp, #44]	; 0x2c
   12b58:	str	r3, [r7, #4]
   12b5c:	ldr	r3, [r5, #4]
   12b60:	add	sl, r4, r6, lsl #3
   12b64:	orr	r3, r3, #1
   12b68:	str	r3, [sp, #28]
   12b6c:	add	r3, r5, #8
   12b70:	str	r3, [sp, #36]	; 0x24
   12b74:	ldr	r3, [r5, #44]	; 0x2c
   12b78:	ldr	fp, [r4, r6, lsl #3]
   12b7c:	ldr	r7, [sl, #4]
   12b80:	str	r3, [sp, #16]
   12b84:	ldr	r3, [r5, #40]	; 0x28
   12b88:	mov	r2, r8
   12b8c:	str	r3, [sp, #12]
   12b90:	add	r3, r5, #8
   12b94:	str	r3, [sp, #8]
   12b98:	ldr	r3, [sp, #28]
   12b9c:	mov	r1, fp
   12ba0:	str	r3, [sp, #4]
   12ba4:	ldr	r3, [r5]
   12ba8:	mov	r0, r7
   12bac:	str	r3, [sp]
   12bb0:	mov	r3, r9
   12bb4:	bl	11d68 <abort@plt+0xe30>
   12bb8:	cmp	fp, r0
   12bbc:	bhi	12c24 <abort@plt+0x1cec>
   12bc0:	ldr	r3, [pc, #120]	; 12c40 <abort@plt+0x1d08>
   12bc4:	add	fp, r0, #1
   12bc8:	cmp	r7, r3
   12bcc:	str	fp, [r4, r6, lsl #3]
   12bd0:	beq	12bdc <abort@plt+0x1ca4>
   12bd4:	mov	r0, r7
   12bd8:	bl	11b24 <abort@plt+0xbec>
   12bdc:	mov	r0, fp
   12be0:	bl	13930 <abort@plt+0x29f8>
   12be4:	ldr	r3, [r5, #44]	; 0x2c
   12be8:	mov	r2, r8
   12bec:	mov	r1, fp
   12bf0:	str	r0, [sl, #4]
   12bf4:	str	r3, [sp, #16]
   12bf8:	ldr	r3, [r5, #40]	; 0x28
   12bfc:	mov	r7, r0
   12c00:	str	r3, [sp, #12]
   12c04:	add	r3, r5, #8
   12c08:	str	r3, [sp, #8]
   12c0c:	ldr	r3, [sp, #28]
   12c10:	str	r3, [sp, #4]
   12c14:	ldr	r3, [r5]
   12c18:	str	r3, [sp]
   12c1c:	mov	r3, r9
   12c20:	bl	11d68 <abort@plt+0xe30>
   12c24:	ldr	r3, [sp, #24]
   12c28:	ldr	r2, [sp, #32]
   12c2c:	mov	r0, r7
   12c30:	str	r2, [r3]
   12c34:	add	sp, sp, #52	; 0x34
   12c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c3c:	strdeq	r6, [r2], -r8
   12c40:	andeq	r6, r2, ip, lsl #6
   12c44:	push	{r4, r5, r6, lr}
   12c48:	mov	r5, r0
   12c4c:	bl	10e6c <__errno_location@plt>
   12c50:	cmp	r5, #0
   12c54:	mov	r1, #48	; 0x30
   12c58:	ldr	r6, [r0]
   12c5c:	mov	r4, r0
   12c60:	ldr	r0, [pc, #12]	; 12c74 <abort@plt+0x1d3c>
   12c64:	movne	r0, r5
   12c68:	bl	13d0c <abort@plt+0x2dd4>
   12c6c:	str	r6, [r4]
   12c70:	pop	{r4, r5, r6, pc}
   12c74:	andeq	r6, r2, ip, lsl #8
   12c78:	ldr	r3, [pc, #12]	; 12c8c <abort@plt+0x1d54>
   12c7c:	cmp	r0, #0
   12c80:	moveq	r0, r3
   12c84:	ldr	r0, [r0]
   12c88:	bx	lr
   12c8c:	andeq	r6, r2, ip, lsl #8
   12c90:	ldr	r3, [pc, #12]	; 12ca4 <abort@plt+0x1d6c>
   12c94:	cmp	r0, #0
   12c98:	moveq	r0, r3
   12c9c:	str	r1, [r0]
   12ca0:	bx	lr
   12ca4:	andeq	r6, r2, ip, lsl #8
   12ca8:	ldr	r3, [pc, #52]	; 12ce4 <abort@plt+0x1dac>
   12cac:	cmp	r0, #0
   12cb0:	moveq	r0, r3
   12cb4:	add	r3, r0, #8
   12cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   12cbc:	lsr	lr, r1, #5
   12cc0:	and	r1, r1, #31
   12cc4:	ldr	ip, [r3, lr, lsl #2]
   12cc8:	lsr	r0, ip, r1
   12ccc:	eor	r2, r2, r0
   12cd0:	and	r2, r2, #1
   12cd4:	and	r0, r0, #1
   12cd8:	eor	r1, ip, r2, lsl r1
   12cdc:	str	r1, [r3, lr, lsl #2]
   12ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ce4:	andeq	r6, r2, ip, lsl #8
   12ce8:	ldr	r3, [pc, #16]	; 12d00 <abort@plt+0x1dc8>
   12cec:	cmp	r0, #0
   12cf0:	movne	r3, r0
   12cf4:	ldr	r0, [r3, #4]
   12cf8:	str	r1, [r3, #4]
   12cfc:	bx	lr
   12d00:	andeq	r6, r2, ip, lsl #8
   12d04:	ldr	r3, [pc, #44]	; 12d38 <abort@plt+0x1e00>
   12d08:	cmp	r0, #0
   12d0c:	moveq	r0, r3
   12d10:	mov	r3, #10
   12d14:	cmp	r2, #0
   12d18:	cmpne	r1, #0
   12d1c:	str	r3, [r0]
   12d20:	bne	12d2c <abort@plt+0x1df4>
   12d24:	push	{r4, lr}
   12d28:	bl	10f38 <abort@plt>
   12d2c:	str	r1, [r0, #40]	; 0x28
   12d30:	str	r2, [r0, #44]	; 0x2c
   12d34:	bx	lr
   12d38:	andeq	r6, r2, ip, lsl #8
   12d3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d40:	sub	sp, sp, #24
   12d44:	mov	sl, r3
   12d48:	ldr	r4, [sp, #56]	; 0x38
   12d4c:	ldr	r3, [pc, #100]	; 12db8 <abort@plt+0x1e80>
   12d50:	cmp	r4, #0
   12d54:	moveq	r4, r3
   12d58:	mov	r7, r0
   12d5c:	mov	r8, r1
   12d60:	mov	r9, r2
   12d64:	bl	10e6c <__errno_location@plt>
   12d68:	ldr	r3, [r4, #44]	; 0x2c
   12d6c:	mov	r2, r9
   12d70:	mov	r1, r8
   12d74:	ldr	r6, [r0]
   12d78:	str	r3, [sp, #16]
   12d7c:	ldr	r3, [r4, #40]	; 0x28
   12d80:	mov	r5, r0
   12d84:	str	r3, [sp, #12]
   12d88:	add	r3, r4, #8
   12d8c:	str	r3, [sp, #8]
   12d90:	ldr	r3, [r4, #4]
   12d94:	mov	r0, r7
   12d98:	str	r3, [sp, #4]
   12d9c:	ldr	r3, [r4]
   12da0:	str	r3, [sp]
   12da4:	mov	r3, sl
   12da8:	bl	11d68 <abort@plt+0xe30>
   12dac:	str	r6, [r5]
   12db0:	add	sp, sp, #24
   12db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12db8:	andeq	r6, r2, ip, lsl #8
   12dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc0:	cmp	r3, #0
   12dc4:	sub	sp, sp, #44	; 0x2c
   12dc8:	ldr	r4, [pc, #188]	; 12e8c <abort@plt+0x1f54>
   12dcc:	mov	r6, r2
   12dd0:	movne	r4, r3
   12dd4:	mov	sl, r1
   12dd8:	mov	r9, r0
   12ddc:	bl	10e6c <__errno_location@plt>
   12de0:	ldr	r5, [r4, #4]
   12de4:	add	fp, r4, #8
   12de8:	cmp	r6, #0
   12dec:	orreq	r5, r5, #1
   12df0:	mov	r1, #0
   12df4:	mov	r2, r9
   12df8:	ldr	r3, [r0]
   12dfc:	mov	r8, r0
   12e00:	str	r3, [sp, #28]
   12e04:	ldr	r3, [r4, #44]	; 0x2c
   12e08:	mov	r0, r1
   12e0c:	str	r3, [sp, #16]
   12e10:	ldr	r3, [r4, #40]	; 0x28
   12e14:	stmib	sp, {r5, fp}
   12e18:	str	r3, [sp, #12]
   12e1c:	ldr	r3, [r4]
   12e20:	str	r3, [sp]
   12e24:	mov	r3, sl
   12e28:	bl	11d68 <abort@plt+0xe30>
   12e2c:	add	r1, r0, #1
   12e30:	mov	r7, r0
   12e34:	mov	r0, r1
   12e38:	str	r1, [sp, #36]	; 0x24
   12e3c:	bl	13930 <abort@plt+0x29f8>
   12e40:	ldr	r3, [r4, #44]	; 0x2c
   12e44:	mov	r2, r9
   12e48:	str	r3, [sp, #16]
   12e4c:	ldr	r3, [r4, #40]	; 0x28
   12e50:	stmib	sp, {r5, fp}
   12e54:	str	r3, [sp, #12]
   12e58:	ldr	r3, [r4]
   12e5c:	ldr	r1, [sp, #36]	; 0x24
   12e60:	str	r3, [sp]
   12e64:	mov	r3, sl
   12e68:	str	r0, [sp, #32]
   12e6c:	bl	11d68 <abort@plt+0xe30>
   12e70:	ldr	r3, [sp, #28]
   12e74:	cmp	r6, #0
   12e78:	str	r3, [r8]
   12e7c:	ldr	r0, [sp, #32]
   12e80:	strne	r7, [r6]
   12e84:	add	sp, sp, #44	; 0x2c
   12e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e8c:	andeq	r6, r2, ip, lsl #8
   12e90:	mov	r3, r2
   12e94:	mov	r2, #0
   12e98:	b	12dbc <abort@plt+0x1e84>
   12e9c:	push	{r4, r5, r6, r7, r8, lr}
   12ea0:	mov	r6, #1
   12ea4:	ldr	r4, [pc, #104]	; 12f14 <abort@plt+0x1fdc>
   12ea8:	ldr	r5, [r4]
   12eac:	add	r7, r5, #12
   12eb0:	ldr	r3, [r4, #4]
   12eb4:	add	r7, r7, #8
   12eb8:	cmp	r6, r3
   12ebc:	blt	12f04 <abort@plt+0x1fcc>
   12ec0:	ldr	r0, [r5, #4]
   12ec4:	ldr	r6, [pc, #76]	; 12f18 <abort@plt+0x1fe0>
   12ec8:	cmp	r0, r6
   12ecc:	beq	12ee0 <abort@plt+0x1fa8>
   12ed0:	bl	11b24 <abort@plt+0xbec>
   12ed4:	mov	r3, #256	; 0x100
   12ed8:	str	r3, [r4, #8]
   12edc:	str	r6, [r4, #12]
   12ee0:	ldr	r6, [pc, #52]	; 12f1c <abort@plt+0x1fe4>
   12ee4:	cmp	r5, r6
   12ee8:	beq	12ef8 <abort@plt+0x1fc0>
   12eec:	mov	r0, r5
   12ef0:	bl	11b24 <abort@plt+0xbec>
   12ef4:	str	r6, [r4]
   12ef8:	mov	r3, #1
   12efc:	str	r3, [r4, #4]
   12f00:	pop	{r4, r5, r6, r7, r8, pc}
   12f04:	ldr	r0, [r7, #-8]
   12f08:	bl	11b24 <abort@plt+0xbec>
   12f0c:	add	r6, r6, #1
   12f10:	b	12eb0 <abort@plt+0x1f78>
   12f14:	strdeq	r6, [r2], -r8
   12f18:	andeq	r6, r2, ip, lsl #6
   12f1c:	andeq	r6, r2, r0, lsl #2
   12f20:	ldr	r3, [pc, #4]	; 12f2c <abort@plt+0x1ff4>
   12f24:	mvn	r2, #0
   12f28:	b	12a9c <abort@plt+0x1b64>
   12f2c:	andeq	r6, r2, ip, lsl #8
   12f30:	ldr	r3, [pc]	; 12f38 <abort@plt+0x2000>
   12f34:	b	12a9c <abort@plt+0x1b64>
   12f38:	andeq	r6, r2, ip, lsl #8
   12f3c:	mov	r1, r0
   12f40:	mov	r0, #0
   12f44:	b	12f20 <abort@plt+0x1fe8>
   12f48:	mov	r2, r1
   12f4c:	mov	r1, r0
   12f50:	mov	r0, #0
   12f54:	b	12f30 <abort@plt+0x1ff8>
   12f58:	push	{r4, r5, lr}
   12f5c:	sub	sp, sp, #52	; 0x34
   12f60:	mov	r5, r2
   12f64:	mov	r4, r0
   12f68:	mov	r0, sp
   12f6c:	bl	11c24 <abort@plt+0xcec>
   12f70:	mov	r3, sp
   12f74:	mvn	r2, #0
   12f78:	mov	r1, r5
   12f7c:	mov	r0, r4
   12f80:	bl	12a9c <abort@plt+0x1b64>
   12f84:	add	sp, sp, #52	; 0x34
   12f88:	pop	{r4, r5, pc}
   12f8c:	push	{r4, r5, r6, lr}
   12f90:	sub	sp, sp, #48	; 0x30
   12f94:	mov	r5, r2
   12f98:	mov	r6, r3
   12f9c:	mov	r4, r0
   12fa0:	mov	r0, sp
   12fa4:	bl	11c24 <abort@plt+0xcec>
   12fa8:	mov	r3, sp
   12fac:	mov	r2, r6
   12fb0:	mov	r1, r5
   12fb4:	mov	r0, r4
   12fb8:	bl	12a9c <abort@plt+0x1b64>
   12fbc:	add	sp, sp, #48	; 0x30
   12fc0:	pop	{r4, r5, r6, pc}
   12fc4:	mov	r2, r1
   12fc8:	mov	r1, r0
   12fcc:	mov	r0, #0
   12fd0:	b	12f58 <abort@plt+0x2020>
   12fd4:	mov	r3, r2
   12fd8:	mov	r2, r1
   12fdc:	mov	r1, r0
   12fe0:	mov	r0, #0
   12fe4:	b	12f8c <abort@plt+0x2054>
   12fe8:	push	{r4, r5, r6, lr}
   12fec:	mov	r4, r0
   12ff0:	ldr	lr, [pc, #80]	; 13048 <abort@plt+0x2110>
   12ff4:	mov	r5, r1
   12ff8:	mov	r6, r2
   12ffc:	ldm	lr!, {r0, r1, r2, r3}
   13000:	sub	sp, sp, #48	; 0x30
   13004:	mov	ip, sp
   13008:	stmia	ip!, {r0, r1, r2, r3}
   1300c:	ldm	lr!, {r0, r1, r2, r3}
   13010:	stmia	ip!, {r0, r1, r2, r3}
   13014:	ldm	lr, {r0, r1, r2, r3}
   13018:	stm	ip, {r0, r1, r2, r3}
   1301c:	mov	r1, r6
   13020:	mov	r2, #1
   13024:	mov	r0, sp
   13028:	bl	12ca8 <abort@plt+0x1d70>
   1302c:	mov	r3, sp
   13030:	mov	r2, r5
   13034:	mov	r1, r4
   13038:	mov	r0, #0
   1303c:	bl	12a9c <abort@plt+0x1b64>
   13040:	add	sp, sp, #48	; 0x30
   13044:	pop	{r4, r5, r6, pc}
   13048:	andeq	r6, r2, ip, lsl #8
   1304c:	mov	r2, r1
   13050:	mvn	r1, #0
   13054:	b	12fe8 <abort@plt+0x20b0>
   13058:	mov	r1, #58	; 0x3a
   1305c:	b	1304c <abort@plt+0x2114>
   13060:	mov	r2, #58	; 0x3a
   13064:	b	12fe8 <abort@plt+0x20b0>
   13068:	push	{r4, r5, lr}
   1306c:	sub	sp, sp, #100	; 0x64
   13070:	mov	r4, r0
   13074:	mov	r0, sp
   13078:	mov	r5, r2
   1307c:	bl	11c24 <abort@plt+0xcec>
   13080:	mov	ip, sp
   13084:	add	lr, sp, #48	; 0x30
   13088:	ldm	ip!, {r0, r1, r2, r3}
   1308c:	stmia	lr!, {r0, r1, r2, r3}
   13090:	ldm	ip!, {r0, r1, r2, r3}
   13094:	stmia	lr!, {r0, r1, r2, r3}
   13098:	ldm	ip, {r0, r1, r2, r3}
   1309c:	stm	lr, {r0, r1, r2, r3}
   130a0:	mov	r2, #1
   130a4:	mov	r1, #58	; 0x3a
   130a8:	add	r0, sp, #48	; 0x30
   130ac:	bl	12ca8 <abort@plt+0x1d70>
   130b0:	add	r3, sp, #48	; 0x30
   130b4:	mvn	r2, #0
   130b8:	mov	r1, r5
   130bc:	mov	r0, r4
   130c0:	bl	12a9c <abort@plt+0x1b64>
   130c4:	add	sp, sp, #100	; 0x64
   130c8:	pop	{r4, r5, pc}
   130cc:	push	{r4, r5, r6, r7, lr}
   130d0:	mov	r4, r0
   130d4:	ldr	lr, [pc, #84]	; 13130 <abort@plt+0x21f8>
   130d8:	mov	r6, r1
   130dc:	mov	r7, r2
   130e0:	mov	r5, r3
   130e4:	ldm	lr!, {r0, r1, r2, r3}
   130e8:	sub	sp, sp, #52	; 0x34
   130ec:	mov	ip, sp
   130f0:	stmia	ip!, {r0, r1, r2, r3}
   130f4:	ldm	lr!, {r0, r1, r2, r3}
   130f8:	stmia	ip!, {r0, r1, r2, r3}
   130fc:	ldm	lr, {r0, r1, r2, r3}
   13100:	stm	ip, {r0, r1, r2, r3}
   13104:	mov	r2, r7
   13108:	mov	r1, r6
   1310c:	mov	r0, sp
   13110:	bl	12d04 <abort@plt+0x1dcc>
   13114:	mov	r3, sp
   13118:	ldr	r2, [sp, #72]	; 0x48
   1311c:	mov	r1, r5
   13120:	mov	r0, r4
   13124:	bl	12a9c <abort@plt+0x1b64>
   13128:	add	sp, sp, #52	; 0x34
   1312c:	pop	{r4, r5, r6, r7, pc}
   13130:	andeq	r6, r2, ip, lsl #8
   13134:	mvn	ip, #0
   13138:	push	{r0, r1, r2, lr}
   1313c:	str	ip, [sp]
   13140:	bl	130cc <abort@plt+0x2194>
   13144:	add	sp, sp, #12
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	mov	r3, r2
   13150:	mov	r2, r1
   13154:	mov	r1, r0
   13158:	mov	r0, #0
   1315c:	b	13134 <abort@plt+0x21fc>
   13160:	push	{r0, r1, r2, lr}
   13164:	str	r3, [sp]
   13168:	mov	r3, r2
   1316c:	mov	r2, r1
   13170:	mov	r1, r0
   13174:	mov	r0, #0
   13178:	bl	130cc <abort@plt+0x2194>
   1317c:	add	sp, sp, #12
   13180:	pop	{pc}		; (ldr pc, [sp], #4)
   13184:	ldr	r3, [pc]	; 1318c <abort@plt+0x2254>
   13188:	b	12a9c <abort@plt+0x1b64>
   1318c:	andeq	r6, r2, r8, lsl #2
   13190:	mov	r2, r1
   13194:	mov	r1, r0
   13198:	mov	r0, #0
   1319c:	b	13184 <abort@plt+0x224c>
   131a0:	mvn	r2, #0
   131a4:	b	13184 <abort@plt+0x224c>
   131a8:	mov	r1, r0
   131ac:	mov	r0, #0
   131b0:	b	131a0 <abort@plt+0x2268>
   131b4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   131b8:	mov	r7, r1
   131bc:	ldrb	r3, [r0]
   131c0:	sub	r3, r3, #48	; 0x30
   131c4:	cmp	r3, #9
   131c8:	bhi	131fc <abort@plt+0x22c4>
   131cc:	mov	r2, #10
   131d0:	add	r1, sp, #4
   131d4:	bl	10cec <strtol@plt>
   131d8:	ldr	r3, [sp, #4]
   131dc:	ldrb	r3, [r3]
   131e0:	cmp	r0, #64	; 0x40
   131e4:	cmple	r3, #0
   131e8:	mvnne	r0, #0
   131ec:	str	r0, [r7]
   131f0:	asr	r0, r0, #31
   131f4:	add	sp, sp, #12
   131f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   131fc:	ldr	r5, [pc, #264]	; 1330c <abort@plt+0x23d4>
   13200:	mov	r6, r0
   13204:	mov	r4, #0
   13208:	mov	r9, #12
   1320c:	mul	r8, r9, r4
   13210:	mov	r1, r6
   13214:	add	r0, r8, #4
   13218:	add	r0, r5, r0
   1321c:	bl	10ce0 <strcmp@plt>
   13220:	cmp	r0, #0
   13224:	ldreq	r0, [r5, r8]
   13228:	beq	131ec <abort@plt+0x22b4>
   1322c:	add	r4, r4, #1
   13230:	cmp	r4, #35	; 0x23
   13234:	bne	1320c <abort@plt+0x22d4>
   13238:	bl	10f14 <__libc_current_sigrtmin@plt>
   1323c:	mov	r5, r0
   13240:	bl	10e54 <__libc_current_sigrtmax@plt>
   13244:	cmp	r5, #0
   13248:	mov	r4, r0
   1324c:	ble	132a4 <abort@plt+0x236c>
   13250:	mov	r2, #5
   13254:	ldr	r1, [pc, #180]	; 13310 <abort@plt+0x23d8>
   13258:	mov	r0, r6
   1325c:	bl	10f2c <strncmp@plt>
   13260:	cmp	r0, #0
   13264:	bne	132a4 <abort@plt+0x236c>
   13268:	mov	r2, #10
   1326c:	add	r1, sp, #4
   13270:	add	r0, r6, #5
   13274:	bl	10cec <strtol@plt>
   13278:	ldr	r3, [sp, #4]
   1327c:	ldrb	r3, [r3]
   13280:	cmp	r0, #0
   13284:	cmpge	r3, #0
   13288:	bne	1329c <abort@plt+0x2364>
   1328c:	sub	r4, r4, r5
   13290:	cmp	r0, r4
   13294:	addle	r0, r5, r0
   13298:	ble	131ec <abort@plt+0x22b4>
   1329c:	mvn	r0, #0
   132a0:	b	131ec <abort@plt+0x22b4>
   132a4:	cmp	r4, #0
   132a8:	ble	1329c <abort@plt+0x2364>
   132ac:	mov	r2, #5
   132b0:	ldr	r1, [pc, #92]	; 13314 <abort@plt+0x23dc>
   132b4:	mov	r0, r6
   132b8:	bl	10f2c <strncmp@plt>
   132bc:	cmp	r0, #0
   132c0:	bne	1329c <abort@plt+0x2364>
   132c4:	mov	r2, #10
   132c8:	add	r1, sp, #4
   132cc:	add	r0, r6, #5
   132d0:	bl	10cec <strtol@plt>
   132d4:	ldr	r3, [sp, #4]
   132d8:	ldrb	r3, [r3]
   132dc:	cmp	r3, #0
   132e0:	bne	1329c <abort@plt+0x2364>
   132e4:	sub	r5, r5, r4
   132e8:	cmp	r0, r5
   132ec:	movlt	r5, #0
   132f0:	movge	r5, #1
   132f4:	cmp	r0, #0
   132f8:	movgt	r5, #0
   132fc:	cmp	r5, #0
   13300:	addne	r0, r4, r0
   13304:	bne	131ec <abort@plt+0x22b4>
   13308:	b	1329c <abort@plt+0x2364>
   1330c:	andeq	r6, r2, r8, lsr r1
   13310:	andeq	r4, r1, sp, lsr #31
   13314:			; <UNDEFINED> instruction: 0x00014fb3
   13318:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1331c:	mov	r6, r1
   13320:	ldr	r1, [pc, #196]	; 133ec <abort@plt+0x24b4>
   13324:	mov	r4, r0
   13328:	mov	r3, #0
   1332c:	mov	r0, #12
   13330:	mul	r2, r0, r3
   13334:	ldr	ip, [r2, r1]
   13338:	cmp	ip, r4
   1333c:	bne	1335c <abort@plt+0x2424>
   13340:	add	r2, r2, #4
   13344:	add	r1, r1, r2
   13348:	mov	r0, r6
   1334c:	bl	10da0 <strcpy@plt>
   13350:	mov	r0, #0
   13354:	add	sp, sp, #12
   13358:	pop	{r4, r5, r6, r7, pc}
   1335c:	add	r3, r3, #1
   13360:	cmp	r3, #35	; 0x23
   13364:	bne	13330 <abort@plt+0x23f8>
   13368:	bl	10f14 <__libc_current_sigrtmin@plt>
   1336c:	mov	r5, r0
   13370:	bl	10e54 <__libc_current_sigrtmax@plt>
   13374:	cmp	r4, r0
   13378:	movle	r3, #0
   1337c:	movgt	r3, #1
   13380:	cmp	r4, r5
   13384:	orrlt	r3, r3, #1
   13388:	cmp	r3, #0
   1338c:	mov	r7, r0
   13390:	mvnne	r0, #0
   13394:	bne	13354 <abort@plt+0x241c>
   13398:	sub	r3, r7, r5
   1339c:	add	r3, r5, r3, asr #1
   133a0:	cmp	r4, r3
   133a4:	bgt	133d8 <abort@plt+0x24a0>
   133a8:	ldr	r1, [pc, #64]	; 133f0 <abort@plt+0x24b8>
   133ac:	mov	r0, r6
   133b0:	bl	10da0 <strcpy@plt>
   133b4:	subs	r0, r4, r5
   133b8:	beq	13354 <abort@plt+0x241c>
   133bc:	str	r0, [sp]
   133c0:	ldr	r3, [pc, #44]	; 133f4 <abort@plt+0x24bc>
   133c4:	mvn	r2, #0
   133c8:	mov	r1, #1
   133cc:	add	r0, r6, #5
   133d0:	bl	10e78 <__sprintf_chk@plt>
   133d4:	b	13350 <abort@plt+0x2418>
   133d8:	ldr	r1, [pc, #24]	; 133f8 <abort@plt+0x24c0>
   133dc:	mov	r0, r6
   133e0:	bl	10da0 <strcpy@plt>
   133e4:	mov	r5, r7
   133e8:	b	133b4 <abort@plt+0x247c>
   133ec:	andeq	r6, r2, r8, lsr r1
   133f0:	andeq	r4, r1, sp, lsr #31
   133f4:			; <UNDEFINED> instruction: 0x00014fb9
   133f8:			; <UNDEFINED> instruction: 0x00014fb3
   133fc:	push	{r4, r5, r6, lr}
   13400:	sub	sp, sp, #32
   13404:	cmp	r1, #0
   13408:	mov	r5, r0
   1340c:	ldr	r4, [sp, #48]	; 0x30
   13410:	ldr	r6, [sp, #52]	; 0x34
   13414:	beq	134c8 <abort@plt+0x2590>
   13418:	stm	sp, {r2, r3}
   1341c:	mov	r3, r1
   13420:	ldr	r2, [pc, #860]	; 13784 <abort@plt+0x284c>
   13424:	mov	r1, #1
   13428:	bl	10eb4 <__fprintf_chk@plt>
   1342c:	mov	r2, #5
   13430:	ldr	r1, [pc, #848]	; 13788 <abort@plt+0x2850>
   13434:	mov	r0, #0
   13438:	bl	10d4c <dcgettext@plt>
   1343c:	ldr	r3, [pc, #840]	; 1378c <abort@plt+0x2854>
   13440:	ldr	r2, [pc, #840]	; 13790 <abort@plt+0x2858>
   13444:	str	r3, [sp]
   13448:	mov	r1, #1
   1344c:	mov	r3, r0
   13450:	mov	r0, r5
   13454:	bl	10eb4 <__fprintf_chk@plt>
   13458:	mov	r1, r5
   1345c:	mov	r0, #10
   13460:	bl	10d40 <fputc_unlocked@plt>
   13464:	mov	r2, #5
   13468:	ldr	r1, [pc, #804]	; 13794 <abort@plt+0x285c>
   1346c:	mov	r0, #0
   13470:	bl	10d4c <dcgettext@plt>
   13474:	mov	r1, #1
   13478:	ldr	r3, [pc, #792]	; 13798 <abort@plt+0x2860>
   1347c:	mov	r2, r0
   13480:	mov	r0, r5
   13484:	bl	10eb4 <__fprintf_chk@plt>
   13488:	mov	r1, r5
   1348c:	mov	r0, #10
   13490:	bl	10d40 <fputc_unlocked@plt>
   13494:	cmp	r6, #9
   13498:	ldrls	pc, [pc, r6, lsl #2]
   1349c:	b	13778 <abort@plt+0x2840>
   134a0:			; <UNDEFINED> instruction: 0x000135b8
   134a4:	andeq	r3, r1, r0, ror #9
   134a8:	andeq	r3, r1, ip, lsl #10
   134ac:	andeq	r3, r1, r0, asr #10
   134b0:	andeq	r3, r1, ip, ror r5
   134b4:	andeq	r3, r1, r0, asr #11
   134b8:	andeq	r3, r1, r8, lsl #12
   134bc:	andeq	r3, r1, r8, asr r6
   134c0:			; <UNDEFINED> instruction: 0x000136b0
   134c4:	andeq	r3, r1, r0, lsl r7
   134c8:	str	r3, [sp]
   134cc:	mov	r1, #1
   134d0:	mov	r3, r2
   134d4:	ldr	r2, [pc, #704]	; 1379c <abort@plt+0x2864>
   134d8:	bl	10eb4 <__fprintf_chk@plt>
   134dc:	b	1342c <abort@plt+0x24f4>
   134e0:	mov	r2, #5
   134e4:	ldr	r1, [pc, #692]	; 137a0 <abort@plt+0x2868>
   134e8:	mov	r0, #0
   134ec:	bl	10d4c <dcgettext@plt>
   134f0:	ldr	r3, [r4]
   134f4:	mov	r1, #1
   134f8:	mov	r2, r0
   134fc:	mov	r0, r5
   13500:	add	sp, sp, #32
   13504:	pop	{r4, r5, r6, lr}
   13508:	b	10eb4 <__fprintf_chk@plt>
   1350c:	mov	r2, #5
   13510:	ldr	r1, [pc, #652]	; 137a4 <abort@plt+0x286c>
   13514:	mov	r0, #0
   13518:	bl	10d4c <dcgettext@plt>
   1351c:	ldr	r3, [r4, #4]
   13520:	mov	r1, #1
   13524:	str	r3, [sp, #48]	; 0x30
   13528:	ldr	r3, [r4]
   1352c:	mov	r2, r0
   13530:	mov	r0, r5
   13534:	add	sp, sp, #32
   13538:	pop	{r4, r5, r6, lr}
   1353c:	b	10eb4 <__fprintf_chk@plt>
   13540:	mov	r2, #5
   13544:	ldr	r1, [pc, #604]	; 137a8 <abort@plt+0x2870>
   13548:	mov	r0, #0
   1354c:	bl	10d4c <dcgettext@plt>
   13550:	ldr	r3, [r4, #8]
   13554:	mov	r1, #1
   13558:	str	r3, [sp, #52]	; 0x34
   1355c:	ldr	r3, [r4, #4]
   13560:	str	r3, [sp, #48]	; 0x30
   13564:	ldr	r3, [r4]
   13568:	mov	r2, r0
   1356c:	mov	r0, r5
   13570:	add	sp, sp, #32
   13574:	pop	{r4, r5, r6, lr}
   13578:	b	10eb4 <__fprintf_chk@plt>
   1357c:	mov	r2, #5
   13580:	ldr	r1, [pc, #548]	; 137ac <abort@plt+0x2874>
   13584:	mov	r0, #0
   13588:	bl	10d4c <dcgettext@plt>
   1358c:	ldr	r3, [r4, #12]
   13590:	mov	r1, #1
   13594:	str	r3, [sp, #8]
   13598:	ldr	r3, [r4, #8]
   1359c:	str	r3, [sp, #4]
   135a0:	ldr	r3, [r4, #4]
   135a4:	str	r3, [sp]
   135a8:	ldr	r3, [r4]
   135ac:	mov	r2, r0
   135b0:	mov	r0, r5
   135b4:	bl	10eb4 <__fprintf_chk@plt>
   135b8:	add	sp, sp, #32
   135bc:	pop	{r4, r5, r6, pc}
   135c0:	mov	r2, #5
   135c4:	ldr	r1, [pc, #484]	; 137b0 <abort@plt+0x2878>
   135c8:	mov	r0, #0
   135cc:	bl	10d4c <dcgettext@plt>
   135d0:	ldr	r3, [r4, #16]
   135d4:	mov	r1, #1
   135d8:	str	r3, [sp, #12]
   135dc:	ldr	r3, [r4, #12]
   135e0:	str	r3, [sp, #8]
   135e4:	ldr	r3, [r4, #8]
   135e8:	str	r3, [sp, #4]
   135ec:	ldr	r3, [r4, #4]
   135f0:	str	r3, [sp]
   135f4:	ldr	r3, [r4]
   135f8:	mov	r2, r0
   135fc:	mov	r0, r5
   13600:	bl	10eb4 <__fprintf_chk@plt>
   13604:	b	135b8 <abort@plt+0x2680>
   13608:	mov	r2, #5
   1360c:	ldr	r1, [pc, #416]	; 137b4 <abort@plt+0x287c>
   13610:	mov	r0, #0
   13614:	bl	10d4c <dcgettext@plt>
   13618:	ldr	r3, [r4, #20]
   1361c:	mov	r1, #1
   13620:	str	r3, [sp, #16]
   13624:	ldr	r3, [r4, #16]
   13628:	str	r3, [sp, #12]
   1362c:	ldr	r3, [r4, #12]
   13630:	str	r3, [sp, #8]
   13634:	ldr	r3, [r4, #8]
   13638:	str	r3, [sp, #4]
   1363c:	ldr	r3, [r4, #4]
   13640:	str	r3, [sp]
   13644:	ldr	r3, [r4]
   13648:	mov	r2, r0
   1364c:	mov	r0, r5
   13650:	bl	10eb4 <__fprintf_chk@plt>
   13654:	b	135b8 <abort@plt+0x2680>
   13658:	mov	r2, #5
   1365c:	ldr	r1, [pc, #340]	; 137b8 <abort@plt+0x2880>
   13660:	mov	r0, #0
   13664:	bl	10d4c <dcgettext@plt>
   13668:	ldr	r3, [r4, #24]
   1366c:	mov	r1, #1
   13670:	str	r3, [sp, #20]
   13674:	ldr	r3, [r4, #20]
   13678:	str	r3, [sp, #16]
   1367c:	ldr	r3, [r4, #16]
   13680:	str	r3, [sp, #12]
   13684:	ldr	r3, [r4, #12]
   13688:	str	r3, [sp, #8]
   1368c:	ldr	r3, [r4, #8]
   13690:	str	r3, [sp, #4]
   13694:	ldr	r3, [r4, #4]
   13698:	str	r3, [sp]
   1369c:	ldr	r3, [r4]
   136a0:	mov	r2, r0
   136a4:	mov	r0, r5
   136a8:	bl	10eb4 <__fprintf_chk@plt>
   136ac:	b	135b8 <abort@plt+0x2680>
   136b0:	mov	r2, #5
   136b4:	ldr	r1, [pc, #256]	; 137bc <abort@plt+0x2884>
   136b8:	mov	r0, #0
   136bc:	bl	10d4c <dcgettext@plt>
   136c0:	ldr	r3, [r4, #28]
   136c4:	mov	r1, #1
   136c8:	str	r3, [sp, #24]
   136cc:	ldr	r3, [r4, #24]
   136d0:	str	r3, [sp, #20]
   136d4:	ldr	r3, [r4, #20]
   136d8:	str	r3, [sp, #16]
   136dc:	ldr	r3, [r4, #16]
   136e0:	str	r3, [sp, #12]
   136e4:	ldr	r3, [r4, #12]
   136e8:	str	r3, [sp, #8]
   136ec:	ldr	r3, [r4, #8]
   136f0:	str	r3, [sp, #4]
   136f4:	ldr	r3, [r4, #4]
   136f8:	str	r3, [sp]
   136fc:	ldr	r3, [r4]
   13700:	mov	r2, r0
   13704:	mov	r0, r5
   13708:	bl	10eb4 <__fprintf_chk@plt>
   1370c:	b	135b8 <abort@plt+0x2680>
   13710:	ldr	r1, [pc, #168]	; 137c0 <abort@plt+0x2888>
   13714:	mov	r2, #5
   13718:	mov	r0, #0
   1371c:	bl	10d4c <dcgettext@plt>
   13720:	ldr	r3, [r4, #32]
   13724:	mov	r1, #1
   13728:	str	r3, [sp, #28]
   1372c:	ldr	r3, [r4, #28]
   13730:	str	r3, [sp, #24]
   13734:	ldr	r3, [r4, #24]
   13738:	str	r3, [sp, #20]
   1373c:	ldr	r3, [r4, #20]
   13740:	str	r3, [sp, #16]
   13744:	ldr	r3, [r4, #16]
   13748:	str	r3, [sp, #12]
   1374c:	ldr	r3, [r4, #12]
   13750:	str	r3, [sp, #8]
   13754:	ldr	r3, [r4, #8]
   13758:	str	r3, [sp, #4]
   1375c:	ldr	r3, [r4, #4]
   13760:	str	r3, [sp]
   13764:	ldr	r3, [r4]
   13768:	mov	r2, r0
   1376c:	mov	r0, r5
   13770:	bl	10eb4 <__fprintf_chk@plt>
   13774:	b	135b8 <abort@plt+0x2680>
   13778:	mov	r2, #5
   1377c:	ldr	r1, [pc, #64]	; 137c4 <abort@plt+0x288c>
   13780:	b	13718 <abort@plt+0x27e0>
   13784:			; <UNDEFINED> instruction: 0x00014fbd
   13788:	ldrdeq	r4, [r1], -r0
   1378c:	andeq	r0, r0, r6, ror #15
   13790:	muleq	r1, lr, r2
   13794:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13798:	andeq	r5, r1, pc, ror r0
   1379c:	andeq	r4, r1, r9, asr #31
   137a0:	andeq	r5, r1, r1, lsr #1
   137a4:	strheq	r5, [r1], -r1
   137a8:	andeq	r5, r1, r8, asr #1
   137ac:	andeq	r5, r1, r4, ror #1
   137b0:	andeq	r5, r1, r4, lsl #2
   137b4:	andeq	r5, r1, r8, lsr #2
   137b8:	andeq	r5, r1, r0, asr r1
   137bc:	andeq	r5, r1, ip, ror r1
   137c0:	andeq	r5, r1, ip, lsr #3
   137c4:	andeq	r5, r1, r0, ror #3
   137c8:	push	{r0, r1, r4, lr}
   137cc:	mov	ip, #0
   137d0:	ldr	lr, [sp, #16]
   137d4:	ldr	r4, [lr, ip, lsl #2]
   137d8:	cmp	r4, #0
   137dc:	bne	137f4 <abort@plt+0x28bc>
   137e0:	str	ip, [sp, #4]
   137e4:	str	lr, [sp]
   137e8:	bl	133fc <abort@plt+0x24c4>
   137ec:	add	sp, sp, #8
   137f0:	pop	{r4, pc}
   137f4:	add	ip, ip, #1
   137f8:	b	137d4 <abort@plt+0x289c>
   137fc:	push	{r4, r5, lr}
   13800:	sub	sp, sp, #52	; 0x34
   13804:	mov	ip, #0
   13808:	ldr	r5, [sp, #64]	; 0x40
   1380c:	add	lr, sp, #8
   13810:	ldr	r4, [r5, ip, lsl #2]
   13814:	cmp	r4, #0
   13818:	str	r4, [lr, ip, lsl #2]
   1381c:	beq	1382c <abort@plt+0x28f4>
   13820:	add	ip, ip, #1
   13824:	cmp	ip, #10
   13828:	bne	13810 <abort@plt+0x28d8>
   1382c:	str	ip, [sp, #4]
   13830:	str	lr, [sp]
   13834:	bl	133fc <abort@plt+0x24c4>
   13838:	add	sp, sp, #52	; 0x34
   1383c:	pop	{r4, r5, pc}
   13840:	push	{r3}		; (str r3, [sp, #-4]!)
   13844:	push	{r0, r1, r2, r3, lr}
   13848:	add	r3, sp, #24
   1384c:	str	r3, [sp, #12]
   13850:	str	r3, [sp]
   13854:	ldr	r3, [sp, #20]
   13858:	bl	137fc <abort@plt+0x28c4>
   1385c:	add	sp, sp, #16
   13860:	pop	{lr}		; (ldr lr, [sp], #4)
   13864:	add	sp, sp, #4
   13868:	bx	lr
   1386c:	ldr	r3, [pc, #116]	; 138e8 <abort@plt+0x29b0>
   13870:	push	{r4, lr}
   13874:	mov	r0, #10
   13878:	ldr	r1, [r3]
   1387c:	bl	10d40 <fputc_unlocked@plt>
   13880:	mov	r2, #5
   13884:	ldr	r1, [pc, #96]	; 138ec <abort@plt+0x29b4>
   13888:	mov	r0, #0
   1388c:	bl	10d4c <dcgettext@plt>
   13890:	ldr	r2, [pc, #88]	; 138f0 <abort@plt+0x29b8>
   13894:	mov	r1, r0
   13898:	mov	r0, #1
   1389c:	bl	10e9c <__printf_chk@plt>
   138a0:	mov	r2, #5
   138a4:	ldr	r1, [pc, #72]	; 138f4 <abort@plt+0x29bc>
   138a8:	mov	r0, #0
   138ac:	bl	10d4c <dcgettext@plt>
   138b0:	ldr	r3, [pc, #64]	; 138f8 <abort@plt+0x29c0>
   138b4:	ldr	r2, [pc, #64]	; 138fc <abort@plt+0x29c4>
   138b8:	mov	r1, r0
   138bc:	mov	r0, #1
   138c0:	bl	10e9c <__printf_chk@plt>
   138c4:	mov	r2, #5
   138c8:	ldr	r1, [pc, #48]	; 13900 <abort@plt+0x29c8>
   138cc:	mov	r0, #0
   138d0:	bl	10d4c <dcgettext@plt>
   138d4:	ldr	r2, [pc, #40]	; 13904 <abort@plt+0x29cc>
   138d8:	pop	{r4, lr}
   138dc:	mov	r1, r0
   138e0:	mov	r0, #1
   138e4:	b	10e9c <__printf_chk@plt>
   138e8:	strdeq	r6, [r2], -r4
   138ec:	andeq	r5, r1, ip, lsl r2
   138f0:	andeq	r5, r1, r0, lsr r2
   138f4:	andeq	r5, r1, r6, asr #4
   138f8:	andeq	r4, r1, r9, lsr ip
   138fc:	andeq	r4, r1, r1, ror #24
   13900:	andeq	r5, r1, sl, asr r2
   13904:	andeq	r5, r1, r1, lsl #5
   13908:	push	{r4, lr}
   1390c:	bl	13e24 <abort@plt+0x2eec>
   13910:	cmp	r0, #0
   13914:	popne	{r4, pc}
   13918:	bl	13d9c <abort@plt+0x2e64>
   1391c:	push	{r4, lr}
   13920:	bl	13e24 <abort@plt+0x2eec>
   13924:	cmp	r0, #0
   13928:	popne	{r4, pc}
   1392c:	bl	13d9c <abort@plt+0x2e64>
   13930:	b	13908 <abort@plt+0x29d0>
   13934:	push	{r4, r5, r6, lr}
   13938:	mov	r5, r0
   1393c:	mov	r4, r1
   13940:	bl	13e64 <abort@plt+0x2f2c>
   13944:	cmp	r0, #0
   13948:	popne	{r4, r5, r6, pc}
   1394c:	adds	r4, r4, #0
   13950:	movne	r4, #1
   13954:	cmp	r5, #0
   13958:	orreq	r4, r4, #1
   1395c:	cmp	r4, #0
   13960:	popeq	{r4, r5, r6, pc}
   13964:	bl	13d9c <abort@plt+0x2e64>
   13968:	push	{r4, lr}
   1396c:	cmp	r1, #0
   13970:	orreq	r1, r1, #1
   13974:	bl	13e64 <abort@plt+0x2f2c>
   13978:	cmp	r0, #0
   1397c:	popne	{r4, pc}
   13980:	bl	13d9c <abort@plt+0x2e64>
   13984:	push	{r4, r5, r6, lr}
   13988:	mov	r6, r0
   1398c:	mov	r5, r1
   13990:	mov	r4, r2
   13994:	bl	14140 <abort@plt+0x3208>
   13998:	cmp	r0, #0
   1399c:	popne	{r4, r5, r6, pc}
   139a0:	cmp	r6, #0
   139a4:	beq	139b4 <abort@plt+0x2a7c>
   139a8:	cmp	r5, #0
   139ac:	cmpne	r4, #0
   139b0:	popeq	{r4, r5, r6, pc}
   139b4:	bl	13d9c <abort@plt+0x2e64>
   139b8:	b	13984 <abort@plt+0x2a4c>
   139bc:	cmp	r2, #0
   139c0:	cmpne	r1, #0
   139c4:	moveq	r2, #1
   139c8:	moveq	r1, r2
   139cc:	push	{r4, lr}
   139d0:	bl	14140 <abort@plt+0x3208>
   139d4:	cmp	r0, #0
   139d8:	popne	{r4, pc}
   139dc:	bl	13d9c <abort@plt+0x2e64>
   139e0:	mov	r2, r1
   139e4:	mov	r1, r0
   139e8:	mov	r0, #0
   139ec:	b	13984 <abort@plt+0x2a4c>
   139f0:	mov	r2, r1
   139f4:	mov	r1, r0
   139f8:	mov	r0, #0
   139fc:	b	139bc <abort@plt+0x2a84>
   13a00:	push	{r4, r5, r6, r7, r8, lr}
   13a04:	subs	r7, r0, #0
   13a08:	mov	r5, r1
   13a0c:	mov	r6, r2
   13a10:	ldr	r4, [r1]
   13a14:	bne	13a50 <abort@plt+0x2b18>
   13a18:	cmp	r4, #0
   13a1c:	bne	13a38 <abort@plt+0x2b00>
   13a20:	mov	r1, r2
   13a24:	mov	r0, #64	; 0x40
   13a28:	bl	1426c <abort@plt+0x3334>
   13a2c:	cmp	r0, #0
   13a30:	movne	r4, r0
   13a34:	addeq	r4, r0, #1
   13a38:	mov	r2, r6
   13a3c:	mov	r1, r4
   13a40:	mov	r0, r7
   13a44:	bl	13984 <abort@plt+0x2a4c>
   13a48:	str	r4, [r5]
   13a4c:	pop	{r4, r5, r6, r7, r8, pc}
   13a50:	lsr	r2, r4, #1
   13a54:	add	r3, r2, #1
   13a58:	mvn	r3, r3
   13a5c:	cmp	r4, r3
   13a60:	addls	r4, r4, #1
   13a64:	addls	r4, r4, r2
   13a68:	bls	13a38 <abort@plt+0x2b00>
   13a6c:	bl	13d9c <abort@plt+0x2e64>
   13a70:	mov	r2, #1
   13a74:	b	13a00 <abort@plt+0x2ac8>
   13a78:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a7c:	mov	sl, r0
   13a80:	ldr	r8, [r1]
   13a84:	mov	fp, r1
   13a88:	mov	r5, r2
   13a8c:	asrs	r4, r8, #1
   13a90:	mov	r9, r3
   13a94:	ldr	r7, [sp, #48]	; 0x30
   13a98:	bpl	13b34 <abort@plt+0x2bfc>
   13a9c:	rsb	r2, r4, #-2147483648	; 0x80000000
   13aa0:	cmp	r8, r2
   13aa4:	movge	r2, #0
   13aa8:	movlt	r2, #1
   13aac:	mvn	r3, r9
   13ab0:	cmp	r2, #0
   13ab4:	lsr	r3, r3, #31
   13ab8:	addeq	r4, r4, r8
   13abc:	mvnne	r4, #-2147483648	; 0x80000000
   13ac0:	mov	r0, r3
   13ac4:	cmp	r9, r4
   13ac8:	movge	r0, #0
   13acc:	andlt	r0, r0, #1
   13ad0:	cmp	r0, #0
   13ad4:	str	r3, [sp, #4]
   13ad8:	bne	13ca8 <abort@plt+0x2d70>
   13adc:	cmp	r7, #0
   13ae0:	bge	13bf4 <abort@plt+0x2cbc>
   13ae4:	cmp	r4, #0
   13ae8:	bge	13b4c <abort@plt+0x2c14>
   13aec:	mov	r1, r7
   13af0:	mvn	r0, #-2147483648	; 0x80000000
   13af4:	bl	14478 <abort@plt+0x3540>
   13af8:	cmp	r0, r4
   13afc:	movle	r0, #0
   13b00:	movgt	r0, #1
   13b04:	cmp	r0, #0
   13b08:	mvnne	r6, #-2147483648	; 0x80000000
   13b0c:	beq	13b5c <abort@plt+0x2c24>
   13b10:	mov	r1, r7
   13b14:	mov	r0, r6
   13b18:	bl	14478 <abort@plt+0x3540>
   13b1c:	mov	r1, r7
   13b20:	mov	r4, r0
   13b24:	mov	r0, r6
   13b28:	bl	14698 <abort@plt+0x3760>
   13b2c:	sub	r1, r6, r1
   13b30:	b	13b6c <abort@plt+0x2c34>
   13b34:	mvn	r2, #-2147483648	; 0x80000000
   13b38:	sub	r2, r2, r4
   13b3c:	cmp	r8, r2
   13b40:	movle	r2, #0
   13b44:	movgt	r2, #1
   13b48:	b	13aac <abort@plt+0x2b74>
   13b4c:	cmn	r7, #1
   13b50:	movne	r1, r7
   13b54:	movne	r0, #-2147483648	; 0x80000000
   13b58:	bne	13cc0 <abort@plt+0x2d88>
   13b5c:	mul	r1, r7, r4
   13b60:	cmp	r1, #63	; 0x3f
   13b64:	movle	r6, #64	; 0x40
   13b68:	ble	13b10 <abort@plt+0x2bd8>
   13b6c:	cmp	sl, #0
   13b70:	sub	r2, r4, r8
   13b74:	streq	sl, [fp]
   13b78:	cmp	r2, r5
   13b7c:	bge	13c50 <abort@plt+0x2d18>
   13b80:	cmp	r5, #0
   13b84:	bge	13c1c <abort@plt+0x2ce4>
   13b88:	rsb	r2, r5, #-2147483648	; 0x80000000
   13b8c:	cmp	r8, r2
   13b90:	movge	r2, #0
   13b94:	movlt	r2, #1
   13b98:	cmp	r2, #0
   13b9c:	bne	13bf0 <abort@plt+0x2cb8>
   13ba0:	ldr	r0, [sp, #4]
   13ba4:	add	r5, r8, r5
   13ba8:	cmp	r9, r5
   13bac:	movge	r0, #0
   13bb0:	andlt	r0, r0, #1
   13bb4:	cmp	r0, #0
   13bb8:	mov	r4, r5
   13bbc:	bne	13bf0 <abort@plt+0x2cb8>
   13bc0:	cmp	r7, #0
   13bc4:	bge	13c64 <abort@plt+0x2d2c>
   13bc8:	cmp	r5, #0
   13bcc:	bge	13c3c <abort@plt+0x2d04>
   13bd0:	mov	r1, r7
   13bd4:	mvn	r0, #-2147483648	; 0x80000000
   13bd8:	bl	14478 <abort@plt+0x3540>
   13bdc:	cmp	r5, r0
   13be0:	movge	r0, #0
   13be4:	movlt	r0, #1
   13be8:	cmp	r0, #0
   13bec:	beq	13c4c <abort@plt+0x2d14>
   13bf0:	bl	13d9c <abort@plt+0x2e64>
   13bf4:	beq	13b5c <abort@plt+0x2c24>
   13bf8:	cmp	r4, #0
   13bfc:	bge	13cb8 <abort@plt+0x2d80>
   13c00:	cmn	r4, #1
   13c04:	beq	13b5c <abort@plt+0x2c24>
   13c08:	mov	r1, r4
   13c0c:	mov	r0, #-2147483648	; 0x80000000
   13c10:	bl	14478 <abort@plt+0x3540>
   13c14:	cmp	r7, r0
   13c18:	b	13afc <abort@plt+0x2bc4>
   13c1c:	cmp	r8, #0
   13c20:	blt	13ba0 <abort@plt+0x2c68>
   13c24:	mvn	r2, #-2147483648	; 0x80000000
   13c28:	sub	r2, r2, r5
   13c2c:	cmp	r8, r2
   13c30:	movle	r2, #0
   13c34:	movgt	r2, #1
   13c38:	b	13b98 <abort@plt+0x2c60>
   13c3c:	cmn	r7, #1
   13c40:	movne	r1, r7
   13c44:	movne	r0, #-2147483648	; 0x80000000
   13c48:	bne	13c9c <abort@plt+0x2d64>
   13c4c:	mul	r1, r5, r7
   13c50:	mov	r0, sl
   13c54:	bl	13934 <abort@plt+0x29fc>
   13c58:	str	r4, [fp]
   13c5c:	add	sp, sp, #12
   13c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c64:	beq	13c4c <abort@plt+0x2d14>
   13c68:	cmp	r5, #0
   13c6c:	movge	r1, r7
   13c70:	mvnge	r0, #-2147483648	; 0x80000000
   13c74:	bge	13c9c <abort@plt+0x2d64>
   13c78:	cmn	r5, #1
   13c7c:	beq	13c4c <abort@plt+0x2d14>
   13c80:	mov	r1, r5
   13c84:	mov	r0, #-2147483648	; 0x80000000
   13c88:	bl	14478 <abort@plt+0x3540>
   13c8c:	cmp	r7, r0
   13c90:	movle	r0, #0
   13c94:	movgt	r0, #1
   13c98:	b	13be8 <abort@plt+0x2cb0>
   13c9c:	bl	14478 <abort@plt+0x3540>
   13ca0:	cmp	r5, r0
   13ca4:	b	13c90 <abort@plt+0x2d58>
   13ca8:	cmp	r7, #0
   13cac:	mov	r4, r9
   13cb0:	blt	13b4c <abort@plt+0x2c14>
   13cb4:	beq	13b5c <abort@plt+0x2c24>
   13cb8:	mov	r1, r7
   13cbc:	mvn	r0, #-2147483648	; 0x80000000
   13cc0:	bl	14478 <abort@plt+0x3540>
   13cc4:	cmp	r0, r4
   13cc8:	movge	r0, #0
   13ccc:	movlt	r0, #1
   13cd0:	b	13b04 <abort@plt+0x2bcc>
   13cd4:	push	{r4, lr}
   13cd8:	bl	13ddc <abort@plt+0x2ea4>
   13cdc:	cmp	r0, #0
   13ce0:	popne	{r4, pc}
   13ce4:	bl	13d9c <abort@plt+0x2e64>
   13ce8:	mov	r1, #1
   13cec:	b	13cd4 <abort@plt+0x2d9c>
   13cf0:	push	{r4, lr}
   13cf4:	bl	13ddc <abort@plt+0x2ea4>
   13cf8:	cmp	r0, #0
   13cfc:	popne	{r4, pc}
   13d00:	bl	13d9c <abort@plt+0x2e64>
   13d04:	mov	r1, #1
   13d08:	b	13cf0 <abort@plt+0x2db8>
   13d0c:	push	{r4, r5, r6, lr}
   13d10:	mov	r4, r1
   13d14:	mov	r5, r0
   13d18:	mov	r0, r1
   13d1c:	bl	13908 <abort@plt+0x29d0>
   13d20:	mov	r2, r4
   13d24:	mov	r1, r5
   13d28:	pop	{r4, r5, r6, lr}
   13d2c:	b	10d1c <memcpy@plt>
   13d30:	push	{r4, r5, r6, lr}
   13d34:	mov	r4, r1
   13d38:	mov	r5, r0
   13d3c:	mov	r0, r1
   13d40:	bl	1391c <abort@plt+0x29e4>
   13d44:	mov	r2, r4
   13d48:	mov	r1, r5
   13d4c:	pop	{r4, r5, r6, lr}
   13d50:	b	10d1c <memcpy@plt>
   13d54:	push	{r4, r5, r6, lr}
   13d58:	mov	r5, r0
   13d5c:	add	r0, r1, #1
   13d60:	mov	r4, r1
   13d64:	bl	1391c <abort@plt+0x29e4>
   13d68:	mov	r2, #0
   13d6c:	mov	r1, r5
   13d70:	strb	r2, [r0, r4]
   13d74:	mov	r2, r4
   13d78:	pop	{r4, r5, r6, lr}
   13d7c:	b	10d1c <memcpy@plt>
   13d80:	push	{r4, lr}
   13d84:	mov	r4, r0
   13d88:	bl	10e48 <strlen@plt>
   13d8c:	add	r1, r0, #1
   13d90:	mov	r0, r4
   13d94:	pop	{r4, lr}
   13d98:	b	13d0c <abort@plt+0x2dd4>
   13d9c:	ldr	r3, [pc, #44]	; 13dd0 <abort@plt+0x2e98>
   13da0:	push	{r4, lr}
   13da4:	mov	r2, #5
   13da8:	ldr	r1, [pc, #36]	; 13dd4 <abort@plt+0x2e9c>
   13dac:	mov	r0, #0
   13db0:	ldr	r4, [r3]
   13db4:	bl	10d4c <dcgettext@plt>
   13db8:	ldr	r2, [pc, #24]	; 13dd8 <abort@plt+0x2ea0>
   13dbc:	mov	r1, #0
   13dc0:	mov	r3, r0
   13dc4:	mov	r0, r4
   13dc8:	bl	10dd0 <error@plt>
   13dcc:	bl	10f38 <abort@plt>
   13dd0:	strdeq	r6, [r2], -r4
   13dd4:	andeq	r5, r1, sp, asr #5
   13dd8:	andeq	r4, r1, lr, lsr #29
   13ddc:	cmp	r1, #0
   13de0:	cmpne	r0, #0
   13de4:	moveq	r1, #1
   13de8:	moveq	r0, r1
   13dec:	umull	r2, r3, r0, r1
   13df0:	adds	r3, r3, #0
   13df4:	movne	r3, #1
   13df8:	cmp	r2, #0
   13dfc:	blt	13e0c <abort@plt+0x2ed4>
   13e00:	cmp	r3, #0
   13e04:	bne	13e0c <abort@plt+0x2ed4>
   13e08:	b	10cbc <calloc@plt>
   13e0c:	push	{r4, lr}
   13e10:	bl	10e6c <__errno_location@plt>
   13e14:	mov	r3, #12
   13e18:	str	r3, [r0]
   13e1c:	mov	r0, #0
   13e20:	pop	{r4, pc}
   13e24:	cmp	r0, #0
   13e28:	mov	r3, #0
   13e2c:	moveq	r0, #1
   13e30:	adds	r3, r3, #0
   13e34:	movne	r3, #1
   13e38:	cmp	r0, #0
   13e3c:	blt	13e4c <abort@plt+0x2f14>
   13e40:	cmp	r3, #0
   13e44:	bne	13e4c <abort@plt+0x2f14>
   13e48:	b	10de8 <malloc@plt>
   13e4c:	push	{r4, lr}
   13e50:	bl	10e6c <__errno_location@plt>
   13e54:	mov	r3, #12
   13e58:	str	r3, [r0]
   13e5c:	mov	r0, #0
   13e60:	pop	{r4, pc}
   13e64:	cmp	r0, #0
   13e68:	push	{r4, lr}
   13e6c:	mov	r4, r1
   13e70:	bne	13e80 <abort@plt+0x2f48>
   13e74:	mov	r0, r1
   13e78:	pop	{r4, lr}
   13e7c:	b	13e24 <abort@plt+0x2eec>
   13e80:	cmp	r1, #0
   13e84:	bne	13e94 <abort@plt+0x2f5c>
   13e88:	bl	11b24 <abort@plt+0xbec>
   13e8c:	mov	r0, #0
   13e90:	pop	{r4, pc}
   13e94:	cmp	r1, #0
   13e98:	blt	13ea8 <abort@plt+0x2f70>
   13e9c:	mov	r3, #0
   13ea0:	cmp	r3, r3
   13ea4:	beq	13eb8 <abort@plt+0x2f80>
   13ea8:	bl	10e6c <__errno_location@plt>
   13eac:	mov	r3, #12
   13eb0:	str	r3, [r0]
   13eb4:	b	13e8c <abort@plt+0x2f54>
   13eb8:	pop	{r4, lr}
   13ebc:	b	10d58 <realloc@plt>
   13ec0:	push	{r4, r5, r6, lr}
   13ec4:	mov	r4, r0
   13ec8:	bl	10dac <__fpending@plt>
   13ecc:	mov	r5, r0
   13ed0:	mov	r0, r4
   13ed4:	bl	10db8 <ferror_unlocked@plt>
   13ed8:	mov	r6, r0
   13edc:	mov	r0, r4
   13ee0:	bl	13f30 <abort@plt+0x2ff8>
   13ee4:	cmp	r6, #0
   13ee8:	mov	r4, r0
   13eec:	bne	13f18 <abort@plt+0x2fe0>
   13ef0:	cmp	r0, #0
   13ef4:	beq	13f10 <abort@plt+0x2fd8>
   13ef8:	cmp	r5, #0
   13efc:	bne	13f28 <abort@plt+0x2ff0>
   13f00:	bl	10e6c <__errno_location@plt>
   13f04:	ldr	r4, [r0]
   13f08:	subs	r4, r4, #9
   13f0c:	mvnne	r4, #0
   13f10:	mov	r0, r4
   13f14:	pop	{r4, r5, r6, pc}
   13f18:	cmp	r0, #0
   13f1c:	bne	13f28 <abort@plt+0x2ff0>
   13f20:	bl	10e6c <__errno_location@plt>
   13f24:	str	r4, [r0]
   13f28:	mvn	r4, #0
   13f2c:	b	13f10 <abort@plt+0x2fd8>
   13f30:	push	{r0, r1, r2, r4, r5, lr}
   13f34:	mov	r4, r0
   13f38:	bl	10ea8 <fileno@plt>
   13f3c:	cmp	r0, #0
   13f40:	mov	r0, r4
   13f44:	bge	13f54 <abort@plt+0x301c>
   13f48:	add	sp, sp, #12
   13f4c:	pop	{r4, r5, lr}
   13f50:	b	10ecc <fclose@plt>
   13f54:	bl	10e00 <__freading@plt>
   13f58:	cmp	r0, #0
   13f5c:	bne	13f98 <abort@plt+0x3060>
   13f60:	mov	r0, r4
   13f64:	bl	13fd8 <abort@plt+0x30a0>
   13f68:	cmp	r0, #0
   13f6c:	bne	13fcc <abort@plt+0x3094>
   13f70:	mov	r5, #0
   13f74:	mov	r0, r4
   13f78:	bl	10ecc <fclose@plt>
   13f7c:	cmp	r5, #0
   13f80:	beq	13f90 <abort@plt+0x3058>
   13f84:	bl	10e6c <__errno_location@plt>
   13f88:	str	r5, [r0]
   13f8c:	mvn	r0, #0
   13f90:	add	sp, sp, #12
   13f94:	pop	{r4, r5, pc}
   13f98:	mov	r0, r4
   13f9c:	bl	10ea8 <fileno@plt>
   13fa0:	mov	r3, #1
   13fa4:	str	r3, [sp]
   13fa8:	mov	r2, #0
   13fac:	mov	r3, #0
   13fb0:	bl	10d88 <lseek64@plt>
   13fb4:	mvn	r3, #0
   13fb8:	mvn	r2, #0
   13fbc:	cmp	r1, r3
   13fc0:	cmpeq	r0, r2
   13fc4:	bne	13f60 <abort@plt+0x3028>
   13fc8:	b	13f70 <abort@plt+0x3038>
   13fcc:	bl	10e6c <__errno_location@plt>
   13fd0:	ldr	r5, [r0]
   13fd4:	b	13f74 <abort@plt+0x303c>
   13fd8:	push	{r0, r1, r4, lr}
   13fdc:	subs	r4, r0, #0
   13fe0:	bne	13ff4 <abort@plt+0x30bc>
   13fe4:	mov	r0, r4
   13fe8:	add	sp, sp, #8
   13fec:	pop	{r4, lr}
   13ff0:	b	10cf8 <fflush@plt>
   13ff4:	bl	10e00 <__freading@plt>
   13ff8:	cmp	r0, #0
   13ffc:	beq	13fe4 <abort@plt+0x30ac>
   14000:	ldr	r3, [r4]
   14004:	tst	r3, #256	; 0x100
   14008:	beq	13fe4 <abort@plt+0x30ac>
   1400c:	mov	r3, #1
   14010:	str	r3, [sp]
   14014:	mov	r2, #0
   14018:	mov	r3, #0
   1401c:	mov	r0, r4
   14020:	bl	14028 <abort@plt+0x30f0>
   14024:	b	13fe4 <abort@plt+0x30ac>
   14028:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1402c:	mov	r4, r0
   14030:	ldmib	r0, {ip, lr}
   14034:	ldr	r8, [sp, #32]
   14038:	cmp	lr, ip
   1403c:	bne	140a8 <abort@plt+0x3170>
   14040:	ldr	lr, [r0, #20]
   14044:	ldr	ip, [r0, #16]
   14048:	cmp	lr, ip
   1404c:	bne	140a8 <abort@plt+0x3170>
   14050:	ldr	r5, [r0, #36]	; 0x24
   14054:	cmp	r5, #0
   14058:	bne	140a8 <abort@plt+0x3170>
   1405c:	mov	r6, r2
   14060:	mov	r7, r3
   14064:	bl	10ea8 <fileno@plt>
   14068:	mov	r2, r6
   1406c:	mov	r3, r7
   14070:	str	r8, [sp]
   14074:	bl	10d88 <lseek64@plt>
   14078:	mvn	r3, #0
   1407c:	mvn	r2, #0
   14080:	cmp	r1, r3
   14084:	cmpeq	r0, r2
   14088:	mvneq	r0, #0
   1408c:	ldrne	r3, [r4]
   14090:	strdne	r0, [r4, #80]	; 0x50
   14094:	movne	r0, r5
   14098:	bicne	r3, r3, #16
   1409c:	strne	r3, [r4]
   140a0:	add	sp, sp, #8
   140a4:	pop	{r4, r5, r6, r7, r8, pc}
   140a8:	str	r8, [sp, #32]
   140ac:	mov	r0, r4
   140b0:	add	sp, sp, #8
   140b4:	pop	{r4, r5, r6, r7, r8, lr}
   140b8:	b	10ed8 <fseeko64@plt>
   140bc:	push	{r4, lr}
   140c0:	mov	r0, #14
   140c4:	bl	10efc <nl_langinfo@plt>
   140c8:	ldr	r3, [pc, #24]	; 140e8 <abort@plt+0x31b0>
   140cc:	cmp	r0, #0
   140d0:	moveq	r0, r3
   140d4:	ldr	r3, [pc, #16]	; 140ec <abort@plt+0x31b4>
   140d8:	ldrb	r2, [r0]
   140dc:	cmp	r2, #0
   140e0:	moveq	r0, r3
   140e4:	pop	{r4, pc}
   140e8:	andeq	r4, r1, r7, lsl #26
   140ec:	ldrdeq	r5, [r1], -lr
   140f0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   140f4:	subs	r5, r0, #0
   140f8:	addeq	r5, sp, #4
   140fc:	mov	r0, r5
   14100:	mov	r7, r2
   14104:	mov	r6, r1
   14108:	bl	10dc4 <mbrtowc@plt>
   1410c:	cmp	r7, #0
   14110:	cmnne	r0, #3
   14114:	mov	r4, r0
   14118:	bls	14134 <abort@plt+0x31fc>
   1411c:	mov	r0, #0
   14120:	bl	1418c <abort@plt+0x3254>
   14124:	cmp	r0, #0
   14128:	moveq	r4, #1
   1412c:	ldrbeq	r3, [r6]
   14130:	streq	r3, [r5]
   14134:	mov	r0, r4
   14138:	add	sp, sp, #12
   1413c:	pop	{r4, r5, r6, r7, pc}
   14140:	push	{r4, r5, r6, lr}
   14144:	subs	r4, r2, #0
   14148:	mov	r6, r0
   1414c:	mov	r5, r1
   14150:	beq	14168 <abort@plt+0x3230>
   14154:	mov	r1, r4
   14158:	mvn	r0, #0
   1415c:	bl	1426c <abort@plt+0x3334>
   14160:	cmp	r0, r5
   14164:	bcc	14178 <abort@plt+0x3240>
   14168:	mul	r1, r5, r4
   1416c:	mov	r0, r6
   14170:	pop	{r4, r5, r6, lr}
   14174:	b	13e64 <abort@plt+0x2f2c>
   14178:	bl	10e6c <__errno_location@plt>
   1417c:	mov	r3, #12
   14180:	str	r3, [r0]
   14184:	mov	r0, #0
   14188:	pop	{r4, r5, r6, pc}
   1418c:	push	{lr}		; (str lr, [sp, #-4]!)
   14190:	sub	sp, sp, #268	; 0x10c
   14194:	ldr	r2, [pc, #64]	; 141dc <abort@plt+0x32a4>
   14198:	add	r1, sp, #4
   1419c:	bl	141e8 <abort@plt+0x32b0>
   141a0:	cmp	r0, #0
   141a4:	movne	r0, #0
   141a8:	bne	141d4 <abort@plt+0x329c>
   141ac:	ldr	r1, [pc, #44]	; 141e0 <abort@plt+0x32a8>
   141b0:	add	r0, sp, #4
   141b4:	bl	10ce0 <strcmp@plt>
   141b8:	cmp	r0, #0
   141bc:	beq	141d4 <abort@plt+0x329c>
   141c0:	ldr	r1, [pc, #28]	; 141e4 <abort@plt+0x32ac>
   141c4:	add	r0, sp, #4
   141c8:	bl	10ce0 <strcmp@plt>
   141cc:	adds	r0, r0, #0
   141d0:	movne	r0, #1
   141d4:	add	sp, sp, #268	; 0x10c
   141d8:	pop	{pc}		; (ldr pc, [sp], #4)
   141dc:	andeq	r0, r0, r1, lsl #2
   141e0:	andeq	r5, r1, r4, ror #5
   141e4:	andeq	r5, r1, r6, ror #5
   141e8:	push	{r4, r5, r6, lr}
   141ec:	mov	r5, r1
   141f0:	mov	r1, #0
   141f4:	mov	r4, r2
   141f8:	bl	10ee4 <setlocale@plt>
   141fc:	subs	r6, r0, #0
   14200:	bne	14214 <abort@plt+0x32dc>
   14204:	cmp	r4, #0
   14208:	strbne	r6, [r5]
   1420c:	mov	r0, #22
   14210:	pop	{r4, r5, r6, pc}
   14214:	bl	10e48 <strlen@plt>
   14218:	cmp	r4, r0
   1421c:	bls	14238 <abort@plt+0x3300>
   14220:	add	r2, r0, #1
   14224:	mov	r1, r6
   14228:	mov	r0, r5
   1422c:	bl	10d1c <memcpy@plt>
   14230:	mov	r0, #0
   14234:	pop	{r4, r5, r6, pc}
   14238:	cmp	r4, #0
   1423c:	beq	1425c <abort@plt+0x3324>
   14240:	sub	r4, r4, #1
   14244:	mov	r2, r4
   14248:	mov	r1, r6
   1424c:	mov	r0, r5
   14250:	bl	10d1c <memcpy@plt>
   14254:	mov	r3, #0
   14258:	strb	r3, [r5, r4]
   1425c:	mov	r0, #34	; 0x22
   14260:	pop	{r4, r5, r6, pc}
   14264:	mov	r1, #0
   14268:	b	10ee4 <setlocale@plt>
   1426c:	subs	r2, r1, #1
   14270:	bxeq	lr
   14274:	bcc	1444c <abort@plt+0x3514>
   14278:	cmp	r0, r1
   1427c:	bls	14430 <abort@plt+0x34f8>
   14280:	tst	r1, r2
   14284:	beq	1443c <abort@plt+0x3504>
   14288:	clz	r3, r0
   1428c:	clz	r2, r1
   14290:	sub	r3, r2, r3
   14294:	rsbs	r3, r3, #31
   14298:	addne	r3, r3, r3, lsl #1
   1429c:	mov	r2, #0
   142a0:	addne	pc, pc, r3, lsl #2
   142a4:	nop			; (mov r0, r0)
   142a8:	cmp	r0, r1, lsl #31
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #31
   142b4:	cmp	r0, r1, lsl #30
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #30
   142c0:	cmp	r0, r1, lsl #29
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #29
   142cc:	cmp	r0, r1, lsl #28
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #28
   142d8:	cmp	r0, r1, lsl #27
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1, lsl #27
   142e4:	cmp	r0, r1, lsl #26
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #26
   142f0:	cmp	r0, r1, lsl #25
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #25
   142fc:	cmp	r0, r1, lsl #24
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #24
   14308:	cmp	r0, r1, lsl #23
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #23
   14314:	cmp	r0, r1, lsl #22
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #22
   14320:	cmp	r0, r1, lsl #21
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1, lsl #21
   1432c:	cmp	r0, r1, lsl #20
   14330:	adc	r2, r2, r2
   14334:	subcs	r0, r0, r1, lsl #20
   14338:	cmp	r0, r1, lsl #19
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #19
   14344:	cmp	r0, r1, lsl #18
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #18
   14350:	cmp	r0, r1, lsl #17
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #17
   1435c:	cmp	r0, r1, lsl #16
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #16
   14368:	cmp	r0, r1, lsl #15
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #15
   14374:	cmp	r0, r1, lsl #14
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #14
   14380:	cmp	r0, r1, lsl #13
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #13
   1438c:	cmp	r0, r1, lsl #12
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1, lsl #12
   14398:	cmp	r0, r1, lsl #11
   1439c:	adc	r2, r2, r2
   143a0:	subcs	r0, r0, r1, lsl #11
   143a4:	cmp	r0, r1, lsl #10
   143a8:	adc	r2, r2, r2
   143ac:	subcs	r0, r0, r1, lsl #10
   143b0:	cmp	r0, r1, lsl #9
   143b4:	adc	r2, r2, r2
   143b8:	subcs	r0, r0, r1, lsl #9
   143bc:	cmp	r0, r1, lsl #8
   143c0:	adc	r2, r2, r2
   143c4:	subcs	r0, r0, r1, lsl #8
   143c8:	cmp	r0, r1, lsl #7
   143cc:	adc	r2, r2, r2
   143d0:	subcs	r0, r0, r1, lsl #7
   143d4:	cmp	r0, r1, lsl #6
   143d8:	adc	r2, r2, r2
   143dc:	subcs	r0, r0, r1, lsl #6
   143e0:	cmp	r0, r1, lsl #5
   143e4:	adc	r2, r2, r2
   143e8:	subcs	r0, r0, r1, lsl #5
   143ec:	cmp	r0, r1, lsl #4
   143f0:	adc	r2, r2, r2
   143f4:	subcs	r0, r0, r1, lsl #4
   143f8:	cmp	r0, r1, lsl #3
   143fc:	adc	r2, r2, r2
   14400:	subcs	r0, r0, r1, lsl #3
   14404:	cmp	r0, r1, lsl #2
   14408:	adc	r2, r2, r2
   1440c:	subcs	r0, r0, r1, lsl #2
   14410:	cmp	r0, r1, lsl #1
   14414:	adc	r2, r2, r2
   14418:	subcs	r0, r0, r1, lsl #1
   1441c:	cmp	r0, r1
   14420:	adc	r2, r2, r2
   14424:	subcs	r0, r0, r1
   14428:	mov	r0, r2
   1442c:	bx	lr
   14430:	moveq	r0, #1
   14434:	movne	r0, #0
   14438:	bx	lr
   1443c:	clz	r2, r1
   14440:	rsb	r2, r2, #31
   14444:	lsr	r0, r0, r2
   14448:	bx	lr
   1444c:	cmp	r0, #0
   14450:	mvnne	r0, #0
   14454:	b	146b8 <abort@plt+0x3780>
   14458:	cmp	r1, #0
   1445c:	beq	1444c <abort@plt+0x3514>
   14460:	push	{r0, r1, lr}
   14464:	bl	1426c <abort@plt+0x3334>
   14468:	pop	{r1, r2, lr}
   1446c:	mul	r3, r2, r0
   14470:	sub	r1, r1, r3
   14474:	bx	lr
   14478:	cmp	r1, #0
   1447c:	beq	14688 <abort@plt+0x3750>
   14480:	eor	ip, r0, r1
   14484:	rsbmi	r1, r1, #0
   14488:	subs	r2, r1, #1
   1448c:	beq	14654 <abort@plt+0x371c>
   14490:	movs	r3, r0
   14494:	rsbmi	r3, r0, #0
   14498:	cmp	r3, r1
   1449c:	bls	14660 <abort@plt+0x3728>
   144a0:	tst	r1, r2
   144a4:	beq	14670 <abort@plt+0x3738>
   144a8:	clz	r2, r3
   144ac:	clz	r0, r1
   144b0:	sub	r2, r0, r2
   144b4:	rsbs	r2, r2, #31
   144b8:	addne	r2, r2, r2, lsl #1
   144bc:	mov	r0, #0
   144c0:	addne	pc, pc, r2, lsl #2
   144c4:	nop			; (mov r0, r0)
   144c8:	cmp	r3, r1, lsl #31
   144cc:	adc	r0, r0, r0
   144d0:	subcs	r3, r3, r1, lsl #31
   144d4:	cmp	r3, r1, lsl #30
   144d8:	adc	r0, r0, r0
   144dc:	subcs	r3, r3, r1, lsl #30
   144e0:	cmp	r3, r1, lsl #29
   144e4:	adc	r0, r0, r0
   144e8:	subcs	r3, r3, r1, lsl #29
   144ec:	cmp	r3, r1, lsl #28
   144f0:	adc	r0, r0, r0
   144f4:	subcs	r3, r3, r1, lsl #28
   144f8:	cmp	r3, r1, lsl #27
   144fc:	adc	r0, r0, r0
   14500:	subcs	r3, r3, r1, lsl #27
   14504:	cmp	r3, r1, lsl #26
   14508:	adc	r0, r0, r0
   1450c:	subcs	r3, r3, r1, lsl #26
   14510:	cmp	r3, r1, lsl #25
   14514:	adc	r0, r0, r0
   14518:	subcs	r3, r3, r1, lsl #25
   1451c:	cmp	r3, r1, lsl #24
   14520:	adc	r0, r0, r0
   14524:	subcs	r3, r3, r1, lsl #24
   14528:	cmp	r3, r1, lsl #23
   1452c:	adc	r0, r0, r0
   14530:	subcs	r3, r3, r1, lsl #23
   14534:	cmp	r3, r1, lsl #22
   14538:	adc	r0, r0, r0
   1453c:	subcs	r3, r3, r1, lsl #22
   14540:	cmp	r3, r1, lsl #21
   14544:	adc	r0, r0, r0
   14548:	subcs	r3, r3, r1, lsl #21
   1454c:	cmp	r3, r1, lsl #20
   14550:	adc	r0, r0, r0
   14554:	subcs	r3, r3, r1, lsl #20
   14558:	cmp	r3, r1, lsl #19
   1455c:	adc	r0, r0, r0
   14560:	subcs	r3, r3, r1, lsl #19
   14564:	cmp	r3, r1, lsl #18
   14568:	adc	r0, r0, r0
   1456c:	subcs	r3, r3, r1, lsl #18
   14570:	cmp	r3, r1, lsl #17
   14574:	adc	r0, r0, r0
   14578:	subcs	r3, r3, r1, lsl #17
   1457c:	cmp	r3, r1, lsl #16
   14580:	adc	r0, r0, r0
   14584:	subcs	r3, r3, r1, lsl #16
   14588:	cmp	r3, r1, lsl #15
   1458c:	adc	r0, r0, r0
   14590:	subcs	r3, r3, r1, lsl #15
   14594:	cmp	r3, r1, lsl #14
   14598:	adc	r0, r0, r0
   1459c:	subcs	r3, r3, r1, lsl #14
   145a0:	cmp	r3, r1, lsl #13
   145a4:	adc	r0, r0, r0
   145a8:	subcs	r3, r3, r1, lsl #13
   145ac:	cmp	r3, r1, lsl #12
   145b0:	adc	r0, r0, r0
   145b4:	subcs	r3, r3, r1, lsl #12
   145b8:	cmp	r3, r1, lsl #11
   145bc:	adc	r0, r0, r0
   145c0:	subcs	r3, r3, r1, lsl #11
   145c4:	cmp	r3, r1, lsl #10
   145c8:	adc	r0, r0, r0
   145cc:	subcs	r3, r3, r1, lsl #10
   145d0:	cmp	r3, r1, lsl #9
   145d4:	adc	r0, r0, r0
   145d8:	subcs	r3, r3, r1, lsl #9
   145dc:	cmp	r3, r1, lsl #8
   145e0:	adc	r0, r0, r0
   145e4:	subcs	r3, r3, r1, lsl #8
   145e8:	cmp	r3, r1, lsl #7
   145ec:	adc	r0, r0, r0
   145f0:	subcs	r3, r3, r1, lsl #7
   145f4:	cmp	r3, r1, lsl #6
   145f8:	adc	r0, r0, r0
   145fc:	subcs	r3, r3, r1, lsl #6
   14600:	cmp	r3, r1, lsl #5
   14604:	adc	r0, r0, r0
   14608:	subcs	r3, r3, r1, lsl #5
   1460c:	cmp	r3, r1, lsl #4
   14610:	adc	r0, r0, r0
   14614:	subcs	r3, r3, r1, lsl #4
   14618:	cmp	r3, r1, lsl #3
   1461c:	adc	r0, r0, r0
   14620:	subcs	r3, r3, r1, lsl #3
   14624:	cmp	r3, r1, lsl #2
   14628:	adc	r0, r0, r0
   1462c:	subcs	r3, r3, r1, lsl #2
   14630:	cmp	r3, r1, lsl #1
   14634:	adc	r0, r0, r0
   14638:	subcs	r3, r3, r1, lsl #1
   1463c:	cmp	r3, r1
   14640:	adc	r0, r0, r0
   14644:	subcs	r3, r3, r1
   14648:	cmp	ip, #0
   1464c:	rsbmi	r0, r0, #0
   14650:	bx	lr
   14654:	teq	ip, r0
   14658:	rsbmi	r0, r0, #0
   1465c:	bx	lr
   14660:	movcc	r0, #0
   14664:	asreq	r0, ip, #31
   14668:	orreq	r0, r0, #1
   1466c:	bx	lr
   14670:	clz	r2, r1
   14674:	rsb	r2, r2, #31
   14678:	cmp	ip, #0
   1467c:	lsr	r0, r3, r2
   14680:	rsbmi	r0, r0, #0
   14684:	bx	lr
   14688:	cmp	r0, #0
   1468c:	mvngt	r0, #-2147483648	; 0x80000000
   14690:	movlt	r0, #-2147483648	; 0x80000000
   14694:	b	146b8 <abort@plt+0x3780>
   14698:	cmp	r1, #0
   1469c:	beq	14688 <abort@plt+0x3750>
   146a0:	push	{r0, r1, lr}
   146a4:	bl	14480 <abort@plt+0x3548>
   146a8:	pop	{r1, r2, lr}
   146ac:	mul	r3, r2, r0
   146b0:	sub	r1, r1, r3
   146b4:	bx	lr
   146b8:	push	{r1, lr}
   146bc:	mov	r0, #8
   146c0:	bl	10cd4 <raise@plt>
   146c4:	pop	{r1, pc}
   146c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146cc:	mov	r7, r0
   146d0:	ldr	r6, [pc, #72]	; 14720 <abort@plt+0x37e8>
   146d4:	ldr	r5, [pc, #72]	; 14724 <abort@plt+0x37ec>
   146d8:	add	r6, pc, r6
   146dc:	add	r5, pc, r5
   146e0:	sub	r6, r6, r5
   146e4:	mov	r8, r1
   146e8:	mov	r9, r2
   146ec:	bl	10c9c <calloc@plt-0x20>
   146f0:	asrs	r6, r6, #2
   146f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   146f8:	mov	r4, #0
   146fc:	add	r4, r4, #1
   14700:	ldr	r3, [r5], #4
   14704:	mov	r2, r9
   14708:	mov	r1, r8
   1470c:	mov	r0, r7
   14710:	blx	r3
   14714:	cmp	r6, r4
   14718:	bne	146fc <abort@plt+0x37c4>
   1471c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14720:	andeq	r1, r1, r0, lsr r8
   14724:	andeq	r1, r1, r8, lsr #16
   14728:	bx	lr
   1472c:	ldr	r3, [pc, #12]	; 14740 <abort@plt+0x3808>
   14730:	mov	r1, #0
   14734:	add	r3, pc, r3
   14738:	ldr	r2, [r3]
   1473c:	b	10e84 <__cxa_atexit@plt>
   14740:			; <UNDEFINED> instruction: 0x000119b0

Disassembly of section .fini:

00014744 <.fini>:
   14744:	push	{r3, lr}
   14748:	pop	{r3, pc}
