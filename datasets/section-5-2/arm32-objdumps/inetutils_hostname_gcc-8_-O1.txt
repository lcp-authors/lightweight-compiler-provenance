
../repos/inetutils/src/hostname:     file format elf32-littlearm


Disassembly of section .init:

00010efc <.init>:
   10efc:	push	{r3, lr}
   10f00:	bl	11210 <__assert_fail@plt+0x48>
   10f04:	pop	{r3, pc}

Disassembly of section .plt:

00010f08 <calloc@plt-0x14>:
   10f08:	push	{lr}		; (str lr, [sp, #-4]!)
   10f0c:	ldr	lr, [pc, #4]	; 10f18 <calloc@plt-0x4>
   10f10:	add	lr, pc, lr
   10f14:	ldr	pc, [lr, #8]!
   10f18:	andeq	r9, r1, r8, ror #1

00010f1c <calloc@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #102400	; 0x19000
   10f24:	ldr	pc, [ip, #232]!	; 0xe8

00010f28 <fputs_unlocked@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #102400	; 0x19000
   10f30:	ldr	pc, [ip, #224]!	; 0xe0

00010f34 <__getdelim@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #102400	; 0x19000
   10f3c:	ldr	pc, [ip, #216]!	; 0xd8

00010f40 <strcmp@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #102400	; 0x19000
   10f48:	ldr	pc, [ip, #208]!	; 0xd0

00010f4c <strtol@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #102400	; 0x19000
   10f54:	ldr	pc, [ip, #200]!	; 0xc8

00010f58 <printf@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #102400	; 0x19000
   10f60:	ldr	pc, [ip, #192]!	; 0xc0

00010f64 <hstrerror@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #102400	; 0x19000
   10f6c:	ldr	pc, [ip, #184]!	; 0xb8

00010f70 <memmove@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #102400	; 0x19000
   10f78:	ldr	pc, [ip, #176]!	; 0xb0

00010f7c <strchrnul@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #102400	; 0x19000
   10f84:	ldr	pc, [ip, #168]!	; 0xa8

00010f88 <free@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #102400	; 0x19000
   10f90:	ldr	pc, [ip, #160]!	; 0xa0

00010f94 <strndup@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #102400	; 0x19000
   10f9c:	ldr	pc, [ip, #152]!	; 0x98

00010fa0 <memcpy@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #102400	; 0x19000
   10fa8:	ldr	pc, [ip, #144]!	; 0x90

00010fac <fwrite_unlocked@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #102400	; 0x19000
   10fb4:	ldr	pc, [ip, #136]!	; 0x88

00010fb8 <sleep@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #102400	; 0x19000
   10fc0:	ldr	pc, [ip, #128]!	; 0x80

00010fc4 <getdomainname@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #102400	; 0x19000
   10fcc:	ldr	pc, [ip, #120]!	; 0x78

00010fd0 <strdup@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #102400	; 0x19000
   10fd8:	ldr	pc, [ip, #112]!	; 0x70

00010fdc <realloc@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #102400	; 0x19000
   10fe4:	ldr	pc, [ip, #104]!	; 0x68

00010fe8 <strcasecmp@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #102400	; 0x19000
   10ff0:	ldr	pc, [ip, #96]!	; 0x60

00010ff4 <funlockfile@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #102400	; 0x19000
   10ffc:	ldr	pc, [ip, #88]!	; 0x58

00011000 <fwrite@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #80]!	; 0x50

0001100c <strcat@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #102400	; 0x19000
   11014:	ldr	pc, [ip, #72]!	; 0x48

00011018 <error@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #102400	; 0x19000
   11020:	ldr	pc, [ip, #64]!	; 0x40

00011024 <gethostname@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #102400	; 0x19000
   1102c:	ldr	pc, [ip, #56]!	; 0x38

00011030 <getenv@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #102400	; 0x19000
   11038:	ldr	pc, [ip, #48]!	; 0x30

0001103c <puts@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #102400	; 0x19000
   11044:	ldr	pc, [ip, #40]!	; 0x28

00011048 <malloc@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #102400	; 0x19000
   11050:	ldr	pc, [ip, #32]!

00011054 <__libc_start_main@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #102400	; 0x19000
   1105c:	ldr	pc, [ip, #24]!

00011060 <strerror@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #102400	; 0x19000
   11068:	ldr	pc, [ip, #16]!

0001106c <__h_errno_location@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #102400	; 0x19000
   11074:	ldr	pc, [ip, #8]!

00011078 <sethostname@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #102400	; 0x19000
   11080:	ldr	pc, [ip, #0]!

00011084 <__ctype_tolower_loc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4088]!	; 0xff8

00011090 <__gmon_start__@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4080]!	; 0xff0

0001109c <mempcpy@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #4072]!	; 0xfe8

000110a8 <__ctype_b_loc@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #4064]!	; 0xfe0

000110b4 <exit@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #4056]!	; 0xfd8

000110c0 <feof@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110cc <strlen@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #4040]!	; 0xfc8

000110d8 <strchr@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #4032]!	; 0xfc0

000110e4 <fprintf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #4024]!	; 0xfb8

000110f0 <__errno_location@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110fc <strerror_r@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #4008]!	; 0xfa8

00011108 <memset@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #4000]!	; 0xfa0

00011114 <memchr@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3992]!	; 0xf98

00011120 <fclose@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3984]!	; 0xf90

0001112c <__overflow@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3976]!	; 0xf88

00011138 <strrchr@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3968]!	; 0xf80

00011144 <vfprintf@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3960]!	; 0xf78

00011150 <fputc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3952]!	; 0xf70

0001115c <sscanf@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3944]!	; 0xf68

00011168 <flockfile@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3936]!	; 0xf60

00011174 <vsnprintf@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3928]!	; 0xf58

00011180 <fopen64@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3920]!	; 0xf50

0001118c <qsort@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3912]!	; 0xf48

00011198 <inet_ntop@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3904]!	; 0xf40

000111a4 <gethostbyname@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3896]!	; 0xf38

000111b0 <strncmp@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3888]!	; 0xf30

000111bc <abort@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3880]!	; 0xf28

000111c8 <__assert_fail@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3872]!	; 0xf20

Disassembly of section .text:

000111d4 <argp_parse@@Base-0xf60>:
   111d4:	mov	fp, #0
   111d8:	mov	lr, #0
   111dc:	pop	{r1}		; (ldr r1, [sp], #4)
   111e0:	mov	r2, sp
   111e4:	push	{r2}		; (str r2, [sp, #-4]!)
   111e8:	push	{r0}		; (str r0, [sp, #-4]!)
   111ec:	ldr	ip, [pc, #16]	; 11204 <__assert_fail@plt+0x3c>
   111f0:	push	{ip}		; (str ip, [sp, #-4]!)
   111f4:	ldr	r0, [pc, #12]	; 11208 <__assert_fail@plt+0x40>
   111f8:	ldr	r3, [pc, #12]	; 1120c <__assert_fail@plt+0x44>
   111fc:	bl	11054 <__libc_start_main@plt>
   11200:	bl	111bc <abort@plt>
   11204:	andeq	r8, r1, r8, ror #10
   11208:	andeq	r1, r1, r0, lsl #9
   1120c:	andeq	r8, r1, r8, lsl #10
   11210:	ldr	r3, [pc, #20]	; 1122c <__assert_fail@plt+0x64>
   11214:	ldr	r2, [pc, #20]	; 11230 <__assert_fail@plt+0x68>
   11218:	add	r3, pc, r3
   1121c:	ldr	r2, [r3, r2]
   11220:	cmp	r2, #0
   11224:	bxeq	lr
   11228:	b	11090 <__gmon_start__@plt>
   1122c:	andeq	r8, r1, r0, ror #27
   11230:	strdeq	r0, [r0], -r4
   11234:	ldr	r0, [pc, #24]	; 11254 <__assert_fail@plt+0x8c>
   11238:	ldr	r3, [pc, #24]	; 11258 <__assert_fail@plt+0x90>
   1123c:	cmp	r3, r0
   11240:	bxeq	lr
   11244:	ldr	r3, [pc, #16]	; 1125c <__assert_fail@plt+0x94>
   11248:	cmp	r3, #0
   1124c:	bxeq	lr
   11250:	bx	r3
   11254:	andeq	sl, r2, r0, asr r2
   11258:	andeq	sl, r2, r0, asr r2
   1125c:	andeq	r0, r0, r0
   11260:	ldr	r0, [pc, #36]	; 1128c <__assert_fail@plt+0xc4>
   11264:	ldr	r1, [pc, #36]	; 11290 <__assert_fail@plt+0xc8>
   11268:	sub	r1, r1, r0
   1126c:	asr	r1, r1, #2
   11270:	add	r1, r1, r1, lsr #31
   11274:	asrs	r1, r1, #1
   11278:	bxeq	lr
   1127c:	ldr	r3, [pc, #16]	; 11294 <__assert_fail@plt+0xcc>
   11280:	cmp	r3, #0
   11284:	bxeq	lr
   11288:	bx	r3
   1128c:	andeq	sl, r2, r0, asr r2
   11290:	andeq	sl, r2, r0, asr r2
   11294:	andeq	r0, r0, r0
   11298:	push	{r4, lr}
   1129c:	ldr	r4, [pc, #24]	; 112bc <__assert_fail@plt+0xf4>
   112a0:	ldrb	r3, [r4]
   112a4:	cmp	r3, #0
   112a8:	popne	{r4, pc}
   112ac:	bl	11234 <__assert_fail@plt+0x6c>
   112b0:	mov	r3, #1
   112b4:	strb	r3, [r4]
   112b8:	pop	{r4, pc}
   112bc:	andeq	sl, r2, r0, ror #4
   112c0:	b	11260 <__assert_fail@plt+0x98>
   112c4:	strd	r4, [sp, #-16]!
   112c8:	str	r6, [sp, #8]
   112cc:	str	lr, [sp, #12]
   112d0:	ldr	r5, [r2, #28]
   112d4:	cmp	r0, #100	; 0x64
   112d8:	beq	1139c <__assert_fail@plt+0x1d4>
   112dc:	ble	1131c <__assert_fail@plt+0x154>
   112e0:	cmp	r0, #105	; 0x69
   112e4:	beq	113e4 <__assert_fail@plt+0x21c>
   112e8:	ble	11348 <__assert_fail@plt+0x180>
   112ec:	cmp	r0, #115	; 0x73
   112f0:	beq	11408 <__assert_fail@plt+0x240>
   112f4:	cmp	r0, #121	; 0x79
   112f8:	movne	r0, #7
   112fc:	bne	11338 <__assert_fail@plt+0x170>
   11300:	movw	r3, #41572	; 0xa264
   11304:	movt	r3, #2
   11308:	movw	r2, #14600	; 0x3908
   1130c:	movt	r2, #1
   11310:	str	r2, [r3]
   11314:	mov	r0, #0
   11318:	b	11338 <__assert_fail@plt+0x170>
   1131c:	cmp	r0, #70	; 0x46
   11320:	beq	113c4 <__assert_fail@plt+0x1fc>
   11324:	cmp	r0, #97	; 0x61
   11328:	beq	11378 <__assert_fail@plt+0x1b0>
   1132c:	cmp	r0, #0
   11330:	movne	r0, #7
   11334:	beq	11430 <__assert_fail@plt+0x268>
   11338:	ldrd	r4, [sp]
   1133c:	ldr	r6, [sp, #8]
   11340:	add	sp, sp, #12
   11344:	pop	{pc}		; (ldr pc, [sp], #4)
   11348:	cmp	r0, #102	; 0x66
   1134c:	movne	r0, #7
   11350:	bne	11338 <__assert_fail@plt+0x170>
   11354:	movw	r3, #41572	; 0xa264
   11358:	movt	r3, #2
   1135c:	movw	r2, #14876	; 0x3a1c
   11360:	movt	r2, #1
   11364:	str	r2, [r3]
   11368:	mov	r3, #1
   1136c:	strh	r3, [r5, #10]
   11370:	mov	r0, #0
   11374:	b	11338 <__assert_fail@plt+0x170>
   11378:	movw	r3, #41572	; 0xa264
   1137c:	movt	r3, #2
   11380:	movw	r2, #14876	; 0x3a1c
   11384:	movt	r2, #1
   11388:	str	r2, [r3]
   1138c:	mov	r3, #1
   11390:	strh	r3, [r5, #8]
   11394:	mov	r0, #0
   11398:	b	11338 <__assert_fail@plt+0x170>
   1139c:	movw	r3, #41572	; 0xa264
   113a0:	movt	r3, #2
   113a4:	movw	r2, #14876	; 0x3a1c
   113a8:	movt	r2, #1
   113ac:	str	r2, [r3]
   113b0:	mov	r3, #1
   113b4:	strh	r3, [r5, #10]
   113b8:	strh	r3, [r5, #14]
   113bc:	mov	r0, #0
   113c0:	b	11338 <__assert_fail@plt+0x170>
   113c4:	movw	r3, #41572	; 0xa264
   113c8:	movt	r3, #2
   113cc:	movw	r2, #4216	; 0x1078
   113d0:	movt	r2, #1
   113d4:	str	r2, [r3, #4]
   113d8:	str	r1, [r5]
   113dc:	mov	r0, #0
   113e0:	b	11338 <__assert_fail@plt+0x170>
   113e4:	movw	r3, #41572	; 0xa264
   113e8:	movt	r3, #2
   113ec:	movw	r2, #14876	; 0x3a1c
   113f0:	movt	r2, #1
   113f4:	str	r2, [r3]
   113f8:	mov	r3, #1
   113fc:	strh	r3, [r5, #12]
   11400:	mov	r0, #0
   11404:	b	11338 <__assert_fail@plt+0x170>
   11408:	movw	r3, #41572	; 0xa264
   1140c:	movt	r3, #2
   11410:	movw	r2, #14876	; 0x3a1c
   11414:	movt	r2, #1
   11418:	str	r2, [r3]
   1141c:	mov	r3, #1
   11420:	strh	r3, [r5, #10]
   11424:	strh	r3, [r5, #16]
   11428:	mov	r0, #0
   1142c:	b	11338 <__assert_fail@plt+0x170>
   11430:	mov	r4, r0
   11434:	movw	r3, #41572	; 0xa264
   11438:	movt	r3, #2
   1143c:	movw	r2, #4216	; 0x1078
   11440:	movt	r2, #1
   11444:	str	r2, [r3, #4]
   11448:	mov	r0, r1
   1144c:	bl	10fd0 <strdup@plt>
   11450:	str	r0, [r5, #4]
   11454:	cmp	r0, #0
   11458:	movne	r0, r4
   1145c:	bne	11338 <__assert_fail@plt+0x170>
   11460:	bl	110f0 <__errno_location@plt>
   11464:	movw	r2, #34212	; 0x85a4
   11468:	movt	r2, #1
   1146c:	ldr	r1, [r0]
   11470:	mov	r0, #1
   11474:	bl	11018 <error@plt>
   11478:	mov	r0, r4
   1147c:	b	11338 <__assert_fail@plt+0x170>
   11480:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11484:	strd	r6, [sp, #8]
   11488:	strd	r8, [sp, #16]
   1148c:	strd	sl, [sp, #24]
   11490:	str	lr, [sp, #32]
   11494:	sub	sp, sp, #52	; 0x34
   11498:	mov	r8, r0
   1149c:	mov	r7, r1
   114a0:	ldr	r0, [r1]
   114a4:	bl	12f24 <argp_parse@@Base+0xdf0>
   114a8:	add	r5, sp, #28
   114ac:	mov	r4, #0
   114b0:	str	r4, [sp, #28]
   114b4:	str	r4, [sp, #32]
   114b8:	str	r4, [sp, #36]	; 0x24
   114bc:	str	r4, [sp, #40]	; 0x28
   114c0:	str	r4, [sp, #44]	; 0x2c
   114c4:	movw	r3, #41636	; 0xa2a4
   114c8:	movt	r3, #2
   114cc:	movw	r2, #34232	; 0x85b8
   114d0:	movt	r2, #1
   114d4:	str	r2, [r3]
   114d8:	movw	r6, #41216	; 0xa100
   114dc:	movt	r6, #2
   114e0:	mov	r1, r6
   114e4:	movw	r0, #34256	; 0x85d0
   114e8:	movt	r0, #1
   114ec:	bl	12d20 <argp_parse@@Base+0xbec>
   114f0:	str	r5, [sp, #4]
   114f4:	str	r4, [sp]
   114f8:	mov	r3, r4
   114fc:	mov	r2, r7
   11500:	mov	r1, r8
   11504:	add	r0, r6, #8
   11508:	bl	12134 <argp_parse@@Base>
   1150c:	movw	r3, #41572	; 0xa264
   11510:	movt	r3, #2
   11514:	ldr	r3, [r3]
   11518:	cmp	r3, r4
   1151c:	beq	11578 <__assert_fail@plt+0x3b0>
   11520:	movw	r1, #14600	; 0x3908
   11524:	movt	r1, #1
   11528:	movw	r2, #14876	; 0x3a1c
   1152c:	movt	r2, #1
   11530:	cmp	r3, r2
   11534:	cmpne	r3, r1
   11538:	beq	115a0 <__assert_fail@plt+0x3d8>
   1153c:	movw	r2, #41572	; 0xa264
   11540:	movt	r2, #2
   11544:	movw	r3, #4216	; 0x1078
   11548:	movt	r3, #1
   1154c:	ldr	r2, [r2, #4]
   11550:	cmp	r2, r3
   11554:	beq	118d0 <__assert_fail@plt+0x708>
   11558:	mov	r0, #0
   1155c:	add	sp, sp, #52	; 0x34
   11560:	ldrd	r4, [sp]
   11564:	ldrd	r6, [sp, #8]
   11568:	ldrd	r8, [sp, #16]
   1156c:	ldrd	sl, [sp, #24]
   11570:	add	sp, sp, #32
   11574:	pop	{pc}		; (ldr pc, [sp], #4)
   11578:	movw	r3, #41572	; 0xa264
   1157c:	movt	r3, #2
   11580:	ldr	r3, [r3, #4]
   11584:	cmp	r3, r4
   11588:	bne	1153c <__assert_fail@plt+0x374>
   1158c:	movw	r2, #41572	; 0xa264
   11590:	movt	r2, #2
   11594:	movw	r3, #14876	; 0x3a1c
   11598:	movt	r3, #1
   1159c:	str	r3, [r2]
   115a0:	blx	r3
   115a4:	subs	r8, r0, #0
   115a8:	beq	11600 <__assert_fail@plt+0x438>
   115ac:	ldrsh	r3, [sp, #36]	; 0x24
   115b0:	cmp	r3, #1
   115b4:	beq	1161c <__assert_fail@plt+0x454>
   115b8:	ldrsh	r3, [sp, #38]	; 0x26
   115bc:	cmp	r3, #1
   115c0:	beq	116cc <__assert_fail@plt+0x504>
   115c4:	ldrsh	r3, [sp, #40]	; 0x28
   115c8:	cmp	r3, #1
   115cc:	beq	117ac <__assert_fail@plt+0x5e4>
   115d0:	mov	r0, r8
   115d4:	bl	10fd0 <strdup@plt>
   115d8:	subs	r4, r0, #0
   115dc:	beq	118a4 <__assert_fail@plt+0x6dc>
   115e0:	ldrb	r3, [r4]
   115e4:	cmp	r3, #0
   115e8:	bne	118c4 <__assert_fail@plt+0x6fc>
   115ec:	mov	r0, r4
   115f0:	bl	12e0c <argp_parse@@Base+0xcd8>
   115f4:	mov	r0, r8
   115f8:	bl	12e0c <argp_parse@@Base+0xcd8>
   115fc:	b	11558 <__assert_fail@plt+0x390>
   11600:	bl	110f0 <__errno_location@plt>
   11604:	movw	r2, #34268	; 0x85dc
   11608:	movt	r2, #1
   1160c:	ldr	r1, [r0]
   11610:	mov	r0, #1
   11614:	bl	11018 <error@plt>
   11618:	b	115ac <__assert_fail@plt+0x3e4>
   1161c:	mov	r0, #256	; 0x100
   11620:	bl	13444 <argp_parse@@Base+0x1310>
   11624:	mov	r4, r0
   11628:	mov	r3, #0
   1162c:	strb	r3, [r0]
   11630:	mov	r0, r8
   11634:	bl	111a4 <gethostbyname@plt>
   11638:	subs	r9, r0, #0
   1163c:	moveq	r3, #0
   11640:	strbeq	r3, [r4]
   11644:	beq	115e0 <__assert_fail@plt+0x418>
   11648:	mov	r6, #0
   1164c:	mov	sl, #256	; 0x100
   11650:	mov	r5, r6
   11654:	movw	fp, #34292	; 0x85f4
   11658:	movt	fp, #1
   1165c:	b	11698 <__assert_fail@plt+0x4d0>
   11660:	lsl	sl, sl, #1
   11664:	mov	r1, sl
   11668:	mov	r0, r4
   1166c:	bl	134a4 <argp_parse@@Base+0x1370>
   11670:	mov	r4, r0
   11674:	ldr	r3, [r9, #4]
   11678:	ldr	r1, [r3, r6]
   1167c:	mov	r0, r4
   11680:	bl	1100c <strcat@plt>
   11684:	mov	r0, r4
   11688:	bl	110cc <strlen@plt>
   1168c:	ldrh	r3, [fp]
   11690:	strh	r3, [r4, r0]
   11694:	mov	r6, r7
   11698:	ldr	r3, [r9, #4]
   1169c:	ldr	r0, [r3, r6]
   116a0:	cmp	r0, #0
   116a4:	beq	11708 <__assert_fail@plt+0x540>
   116a8:	add	r7, r6, #4
   116ac:	ldr	r3, [r3, r7]
   116b0:	cmp	r3, #0
   116b4:	addne	r5, r5, #1
   116b8:	bl	110cc <strlen@plt>
   116bc:	add	r5, r5, r0
   116c0:	cmp	r5, sl
   116c4:	bcc	11674 <__assert_fail@plt+0x4ac>
   116c8:	b	11660 <__assert_fail@plt+0x498>
   116cc:	mov	r0, r8
   116d0:	bl	111a4 <gethostbyname@plt>
   116d4:	cmp	r0, #0
   116d8:	moveq	r0, r8
   116dc:	ldrne	r0, [r0]
   116e0:	bl	10fd0 <strdup@plt>
   116e4:	mov	r4, r0
   116e8:	cmp	r0, #0
   116ec:	beq	11714 <__assert_fail@plt+0x54c>
   116f0:	ldrsh	r3, [sp, #42]	; 0x2a
   116f4:	cmp	r3, #1
   116f8:	beq	11a70 <__assert_fail@plt+0x8a8>
   116fc:	ldrsh	r3, [sp, #44]	; 0x2c
   11700:	cmp	r3, #1
   11704:	beq	11a64 <__assert_fail@plt+0x89c>
   11708:	cmp	r4, #0
   1170c:	bne	115e0 <__assert_fail@plt+0x418>
   11710:	b	115ec <__assert_fail@plt+0x424>
   11714:	bl	110f0 <__errno_location@plt>
   11718:	movw	r2, #34212	; 0x85a4
   1171c:	movt	r2, #1
   11720:	ldr	r1, [r0]
   11724:	mov	r0, #1
   11728:	bl	11018 <error@plt>
   1172c:	b	116f0 <__assert_fail@plt+0x528>
   11730:	mov	r0, r8
   11734:	bl	12e0c <argp_parse@@Base+0xcd8>
   11738:	mov	r8, r4
   1173c:	mov	r4, #0
   11740:	b	11a90 <__assert_fail@plt+0x8c8>
   11744:	mov	r0, r4
   11748:	bl	12e0c <argp_parse@@Base+0xcd8>
   1174c:	mov	r4, #0
   11750:	b	11a90 <__assert_fail@plt+0x8c8>
   11754:	mov	r1, #46	; 0x2e
   11758:	mov	r0, r8
   1175c:	bl	110d8 <strchr@plt>
   11760:	cmp	r0, #0
   11764:	movweq	r0, #34296	; 0x85f8
   11768:	movteq	r0, #1
   1176c:	addne	r0, r0, #1
   11770:	bl	10fd0 <strdup@plt>
   11774:	mov	r4, r0
   11778:	cmp	r0, #0
   1177c:	bne	115e0 <__assert_fail@plt+0x418>
   11780:	bl	110f0 <__errno_location@plt>
   11784:	movw	r2, #34212	; 0x85a4
   11788:	movt	r2, #1
   1178c:	ldr	r1, [r0]
   11790:	mov	r0, #1
   11794:	bl	11018 <error@plt>
   11798:	b	118bc <__assert_fail@plt+0x6f4>
   1179c:	mov	r0, r8
   117a0:	bl	10fd0 <strdup@plt>
   117a4:	mov	r4, r0
   117a8:	b	11acc <__assert_fail@plt+0x904>
   117ac:	mov	r0, #256	; 0x100
   117b0:	bl	13444 <argp_parse@@Base+0x1310>
   117b4:	mov	r4, r0
   117b8:	mov	r3, #0
   117bc:	strb	r3, [r0]
   117c0:	mov	r0, r8
   117c4:	bl	111a4 <gethostbyname@plt>
   117c8:	subs	r7, r0, #0
   117cc:	beq	117ec <__assert_fail@plt+0x624>
   117d0:	mov	r5, #0
   117d4:	mov	r9, #256	; 0x100
   117d8:	mov	r6, r5
   117dc:	mov	sl, #16
   117e0:	movw	fp, #34292	; 0x85f4
   117e4:	movt	fp, #1
   117e8:	b	1183c <__assert_fail@plt+0x674>
   117ec:	bl	1106c <__h_errno_location@plt>
   117f0:	ldr	r0, [r0]
   117f4:	bl	10f64 <hstrerror@plt>
   117f8:	mov	r3, r0
   117fc:	movw	r2, #34304	; 0x8600
   11800:	movt	r2, #1
   11804:	mov	r1, #0
   11808:	mov	r0, #1
   1180c:	bl	11018 <error@plt>
   11810:	b	11708 <__assert_fail@plt+0x540>
   11814:	lsl	r9, r9, #1
   11818:	mov	r1, r9
   1181c:	mov	r0, r4
   11820:	bl	134a4 <argp_parse@@Base+0x1370>
   11824:	mov	r4, r0
   11828:	b	11884 <__assert_fail@plt+0x6bc>
   1182c:	mov	r0, r4
   11830:	bl	110cc <strlen@plt>
   11834:	ldrh	r3, [fp]
   11838:	strh	r3, [r4, r0]
   1183c:	ldr	r3, [r7, #16]
   11840:	ldr	r1, [r3, r5]
   11844:	cmp	r1, #0
   11848:	beq	11708 <__assert_fail@plt+0x540>
   1184c:	mov	r3, sl
   11850:	add	r2, sp, #12
   11854:	ldr	r0, [r7, #8]
   11858:	bl	11198 <inet_ntop@plt>
   1185c:	add	r5, r5, #4
   11860:	ldr	r3, [r7, #16]
   11864:	ldr	r3, [r3, r5]
   11868:	cmp	r3, #0
   1186c:	addne	r6, r6, #1
   11870:	add	r0, sp, #12
   11874:	bl	110cc <strlen@plt>
   11878:	add	r6, r6, r0
   1187c:	cmp	r6, r9
   11880:	bcs	11814 <__assert_fail@plt+0x64c>
   11884:	add	r1, sp, #12
   11888:	mov	r0, r4
   1188c:	bl	1100c <strcat@plt>
   11890:	ldr	r3, [r7, #16]
   11894:	ldr	r3, [r3, r5]
   11898:	cmp	r3, #0
   1189c:	bne	1182c <__assert_fail@plt+0x664>
   118a0:	b	1183c <__assert_fail@plt+0x674>
   118a4:	bl	110f0 <__errno_location@plt>
   118a8:	movw	r2, #34212	; 0x85a4
   118ac:	movt	r2, #1
   118b0:	ldr	r1, [r0]
   118b4:	mov	r0, #1
   118b8:	bl	11018 <error@plt>
   118bc:	mov	r4, #0
   118c0:	b	115ec <__assert_fail@plt+0x424>
   118c4:	mov	r0, r4
   118c8:	bl	1103c <puts@plt>
   118cc:	b	115ec <__assert_fail@plt+0x424>
   118d0:	ldr	r0, [sp, #28]
   118d4:	cmp	r0, #0
   118d8:	ldreq	r4, [sp, #32]
   118dc:	beq	119f0 <__assert_fail@plt+0x828>
   118e0:	mov	r3, #0
   118e4:	str	r3, [sp, #8]
   118e8:	str	r3, [sp, #12]
   118ec:	movw	r1, #36744	; 0x8f88
   118f0:	movt	r1, #1
   118f4:	bl	11180 <fopen64@plt>
   118f8:	subs	r5, r0, #0
   118fc:	beq	1192c <__assert_fail@plt+0x764>
   11900:	bl	110f0 <__errno_location@plt>
   11904:	mov	r9, r0
   11908:	mov	r3, #0
   1190c:	str	r3, [r0]
   11910:	movw	r8, #37400	; 0x9218
   11914:	movt	r8, #1
   11918:	movw	r7, #34220	; 0x85ac
   1191c:	movt	r7, #1
   11920:	movw	r6, #34332	; 0x861c
   11924:	movt	r6, #1
   11928:	b	11978 <__assert_fail@plt+0x7b0>
   1192c:	bl	110f0 <__errno_location@plt>
   11930:	movw	r2, #34324	; 0x8614
   11934:	movt	r2, #1
   11938:	ldr	r1, [r0]
   1193c:	mov	r0, #1
   11940:	bl	11018 <error@plt>
   11944:	b	11900 <__assert_fail@plt+0x738>
   11948:	ldr	r1, [r9]
   1194c:	cmp	r1, #0
   11950:	movne	r3, r8
   11954:	moveq	r3, r7
   11958:	mov	r2, r6
   1195c:	mov	r0, #1
   11960:	bl	11018 <error@plt>
   11964:	b	11998 <__assert_fail@plt+0x7d0>
   11968:	mov	r0, r5
   1196c:	bl	110c0 <feof@plt>
   11970:	cmp	r0, #0
   11974:	bne	119dc <__assert_fail@plt+0x814>
   11978:	mov	r3, r5
   1197c:	mov	r2, #10
   11980:	add	r1, sp, #12
   11984:	add	r0, sp, #8
   11988:	bl	10f34 <__getdelim@plt>
   1198c:	mov	r4, r0
   11990:	cmn	r0, #1
   11994:	beq	11948 <__assert_fail@plt+0x780>
   11998:	ldr	r3, [sp, #8]
   1199c:	ldrb	r3, [r3]
   119a0:	cmp	r3, #35	; 0x23
   119a4:	beq	11968 <__assert_fail@plt+0x7a0>
   119a8:	add	r0, r4, #1
   119ac:	bl	13444 <argp_parse@@Base+0x1310>
   119b0:	mov	r4, r0
   119b4:	mov	r2, r0
   119b8:	movw	r1, #34344	; 0x8628
   119bc:	movt	r1, #1
   119c0:	ldr	r0, [sp, #8]
   119c4:	bl	1115c <sscanf@plt>
   119c8:	cmp	r0, #1
   119cc:	beq	119e0 <__assert_fail@plt+0x818>
   119d0:	mov	r0, r4
   119d4:	bl	12e0c <argp_parse@@Base+0xcd8>
   119d8:	b	11968 <__assert_fail@plt+0x7a0>
   119dc:	mov	r4, #0
   119e0:	ldr	r0, [sp, #8]
   119e4:	bl	12e0c <argp_parse@@Base+0xcd8>
   119e8:	mov	r0, r5
   119ec:	bl	11120 <fclose@plt>
   119f0:	cmp	r4, #0
   119f4:	beq	11a08 <__assert_fail@plt+0x840>
   119f8:	mov	r0, r4
   119fc:	bl	110cc <strlen@plt>
   11a00:	subs	r1, r0, #0
   11a04:	bne	11a20 <__assert_fail@plt+0x858>
   11a08:	movw	r2, #34348	; 0x862c
   11a0c:	movt	r2, #1
   11a10:	mov	r1, #0
   11a14:	mov	r0, #1
   11a18:	bl	11018 <error@plt>
   11a1c:	mov	r1, #0
   11a20:	movw	r3, #41572	; 0xa264
   11a24:	movt	r3, #2
   11a28:	ldr	r3, [r3, #4]
   11a2c:	mov	r0, r4
   11a30:	blx	r3
   11a34:	cmn	r0, #1
   11a38:	beq	11a48 <__assert_fail@plt+0x880>
   11a3c:	mov	r0, r4
   11a40:	bl	12e0c <argp_parse@@Base+0xcd8>
   11a44:	b	11558 <__assert_fail@plt+0x390>
   11a48:	bl	110f0 <__errno_location@plt>
   11a4c:	movw	r2, #34364	; 0x863c
   11a50:	movt	r2, #1
   11a54:	ldr	r1, [r0]
   11a58:	mov	r0, #1
   11a5c:	bl	11018 <error@plt>
   11a60:	b	11a3c <__assert_fail@plt+0x874>
   11a64:	cmp	r4, #0
   11a68:	bne	11a78 <__assert_fail@plt+0x8b0>
   11a6c:	b	11a9c <__assert_fail@plt+0x8d4>
   11a70:	cmp	r4, #0
   11a74:	beq	11754 <__assert_fail@plt+0x58c>
   11a78:	ldrb	r3, [r4]
   11a7c:	cmp	r3, #0
   11a80:	cmpne	r3, #40	; 0x28
   11a84:	bne	11730 <__assert_fail@plt+0x568>
   11a88:	cmp	r3, #40	; 0x28
   11a8c:	beq	11744 <__assert_fail@plt+0x57c>
   11a90:	ldrsh	r3, [sp, #42]	; 0x2a
   11a94:	cmp	r3, #1
   11a98:	beq	11754 <__assert_fail@plt+0x58c>
   11a9c:	ldrsh	r3, [sp, #44]	; 0x2c
   11aa0:	cmp	r3, #1
   11aa4:	bne	11708 <__assert_fail@plt+0x540>
   11aa8:	mov	r1, #46	; 0x2e
   11aac:	mov	r0, r8
   11ab0:	bl	110d8 <strchr@plt>
   11ab4:	subs	r1, r0, #0
   11ab8:	beq	1179c <__assert_fail@plt+0x5d4>
   11abc:	sub	r1, r1, r8
   11ac0:	mov	r0, r8
   11ac4:	bl	10f94 <strndup@plt>
   11ac8:	mov	r4, r0
   11acc:	cmp	r4, #0
   11ad0:	bne	115e0 <__assert_fail@plt+0x418>
   11ad4:	bl	110f0 <__errno_location@plt>
   11ad8:	movw	r2, #34212	; 0x85a4
   11adc:	movt	r2, #1
   11ae0:	ldr	r1, [r0]
   11ae4:	mov	r0, #1
   11ae8:	bl	11018 <error@plt>
   11aec:	b	118bc <__assert_fail@plt+0x6f4>
   11af0:	ldr	ip, [r0]
   11af4:	cmp	ip, #0
   11af8:	beq	11b60 <__assert_fail@plt+0x998>
   11afc:	strd	r4, [sp, #-16]!
   11b00:	str	r6, [sp, #8]
   11b04:	str	lr, [sp, #12]
   11b08:	mov	ip, r2
   11b0c:	mov	r5, r1
   11b10:	mov	r4, r0
   11b14:	ldr	r2, [r0, #32]
   11b18:	str	r2, [r1, #36]	; 0x24
   11b1c:	ldr	r2, [r0, #24]
   11b20:	str	r2, [r1, #28]
   11b24:	ldr	r2, [r0, #28]
   11b28:	str	r2, [r1, #32]
   11b2c:	ldr	r2, [r0, #12]
   11b30:	str	r2, [r1, #20]
   11b34:	ldr	r6, [r0]
   11b38:	mov	r2, r1
   11b3c:	mov	r1, r3
   11b40:	mov	r0, ip
   11b44:	blx	r6
   11b48:	ldr	r3, [r5, #36]	; 0x24
   11b4c:	str	r3, [r4, #32]
   11b50:	ldrd	r4, [sp]
   11b54:	ldr	r6, [sp, #8]
   11b58:	add	sp, sp, #12
   11b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b60:	mov	r0, #7
   11b64:	bx	lr
   11b68:	strd	r4, [sp, #-16]!
   11b6c:	str	r6, [sp, #8]
   11b70:	str	lr, [sp, #12]
   11b74:	ldr	r5, [r0, #16]
   11b78:	ldr	r3, [r0]
   11b7c:	cmp	r3, #0
   11b80:	beq	11b98 <__assert_fail@plt+0x9d0>
   11b84:	ldr	r2, [r1, #8]
   11b88:	add	r2, r2, #1
   11b8c:	str	r2, [r1, #8]
   11b90:	mov	r2, #0
   11b94:	b	11bb8 <__assert_fail@plt+0x9f0>
   11b98:	ldr	r3, [r0, #4]
   11b9c:	cmp	r3, #0
   11ba0:	beq	11c08 <__assert_fail@plt+0xa40>
   11ba4:	ldr	r3, [r1, #8]
   11ba8:	add	r3, r3, #1
   11bac:	str	r3, [r1, #8]
   11bb0:	b	11c08 <__assert_fail@plt+0xa40>
   11bb4:	add	r2, r2, #1
   11bb8:	add	r3, r3, #24
   11bbc:	ldr	r0, [r3, #-20]	; 0xffffffec
   11bc0:	cmp	r0, #0
   11bc4:	bne	11bb4 <__assert_fail@plt+0x9ec>
   11bc8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11bcc:	cmp	r0, #0
   11bd0:	bne	11bb4 <__assert_fail@plt+0x9ec>
   11bd4:	ldr	r0, [r3, #-8]
   11bd8:	cmp	r0, #0
   11bdc:	bne	11bb4 <__assert_fail@plt+0x9ec>
   11be0:	ldr	r0, [r3, #-4]
   11be4:	cmp	r0, #0
   11be8:	bne	11bb4 <__assert_fail@plt+0x9ec>
   11bec:	add	r0, r2, r2, lsl #1
   11bf0:	ldr	r3, [r1]
   11bf4:	add	r3, r3, r0
   11bf8:	str	r3, [r1]
   11bfc:	ldr	r3, [r1, #4]
   11c00:	add	r2, r3, r2
   11c04:	str	r2, [r1, #4]
   11c08:	cmp	r5, #0
   11c0c:	beq	11c40 <__assert_fail@plt+0xa78>
   11c10:	ldr	r0, [r5]
   11c14:	cmp	r0, #0
   11c18:	beq	11c40 <__assert_fail@plt+0xa78>
   11c1c:	mov	r4, r1
   11c20:	mov	r1, r4
   11c24:	bl	11b68 <__assert_fail@plt+0x9a0>
   11c28:	ldr	r3, [r4, #12]
   11c2c:	add	r3, r3, #1
   11c30:	str	r3, [r4, #12]
   11c34:	ldr	r0, [r5, #16]!
   11c38:	cmp	r0, #0
   11c3c:	bne	11c20 <__assert_fail@plt+0xa58>
   11c40:	ldrd	r4, [sp]
   11c44:	ldr	r6, [sp, #8]
   11c48:	add	sp, sp, #12
   11c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c50:	cmp	r0, #86	; 0x56
   11c54:	beq	11c60 <__assert_fail@plt+0xa98>
   11c58:	mov	r0, #7
   11c5c:	bx	lr
   11c60:	str	r4, [sp, #-8]!
   11c64:	str	lr, [sp, #4]
   11c68:	mov	r4, r2
   11c6c:	movw	r3, #41584	; 0xa270
   11c70:	movt	r3, #2
   11c74:	ldr	r3, [r3]
   11c78:	cmp	r3, #0
   11c7c:	beq	11ca8 <__assert_fail@plt+0xae0>
   11c80:	mov	r1, r2
   11c84:	ldr	r0, [r2, #48]	; 0x30
   11c88:	blx	r3
   11c8c:	ldr	r3, [r4, #16]
   11c90:	tst	r3, #32
   11c94:	beq	11cec <__assert_fail@plt+0xb24>
   11c98:	mov	r0, #0
   11c9c:	ldr	r4, [sp]
   11ca0:	add	sp, sp, #4
   11ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ca8:	movw	r3, #41640	; 0xa2a8
   11cac:	movt	r3, #2
   11cb0:	ldr	r2, [r3]
   11cb4:	cmp	r2, #0
   11cb8:	beq	11cd0 <__assert_fail@plt+0xb08>
   11cbc:	movw	r1, #35324	; 0x89fc
   11cc0:	movt	r1, #1
   11cc4:	ldr	r0, [r4, #48]	; 0x30
   11cc8:	bl	110e4 <fprintf@plt>
   11ccc:	b	11c8c <__assert_fail@plt+0xac4>
   11cd0:	movw	r2, #34912	; 0x8860
   11cd4:	movt	r2, #1
   11cd8:	movw	r1, #34344	; 0x8628
   11cdc:	movt	r1, #1
   11ce0:	mov	r0, r4
   11ce4:	bl	16f28 <argp_error@@Base>
   11ce8:	b	11c8c <__assert_fail@plt+0xac4>
   11cec:	mov	r0, #0
   11cf0:	bl	110b4 <exit@plt>
   11cf4:	strd	r4, [sp, #-16]!
   11cf8:	str	r6, [sp, #8]
   11cfc:	str	lr, [sp, #12]
   11d00:	mov	r4, r2
   11d04:	cmn	r0, #3
   11d08:	beq	11dc0 <__assert_fail@plt+0xbf8>
   11d0c:	mov	r5, r1
   11d10:	ble	11d4c <__assert_fail@plt+0xb84>
   11d14:	cmn	r0, #2
   11d18:	beq	11dd8 <__assert_fail@plt+0xc10>
   11d1c:	cmp	r0, #63	; 0x3f
   11d20:	movne	r0, #7
   11d24:	bne	11d3c <__assert_fail@plt+0xb74>
   11d28:	movw	r2, #634	; 0x27a
   11d2c:	ldr	r1, [r4, #48]	; 0x30
   11d30:	mov	r0, r4
   11d34:	bl	16e60 <argp_state_help@@Base>
   11d38:	mov	r0, #0
   11d3c:	ldrd	r4, [sp]
   11d40:	ldr	r6, [sp, #8]
   11d44:	add	sp, sp, #12
   11d48:	pop	{pc}		; (ldr pc, [sp], #4)
   11d4c:	cmn	r0, #4
   11d50:	movne	r0, #7
   11d54:	bne	11d3c <__assert_fail@plt+0xb74>
   11d58:	movw	r0, #34948	; 0x8884
   11d5c:	movt	r0, #1
   11d60:	mov	r2, #10
   11d64:	mov	r1, #0
   11d68:	cmp	r5, r1
   11d6c:	movne	r0, r5
   11d70:	bl	10f4c <strtol@plt>
   11d74:	movw	r3, #41580	; 0xa26c
   11d78:	movt	r3, #2
   11d7c:	str	r0, [r3]
   11d80:	ldr	r2, [r3]
   11d84:	sub	r1, r2, #1
   11d88:	str	r1, [r3]
   11d8c:	cmp	r2, #0
   11d90:	ble	11e20 <__assert_fail@plt+0xc58>
   11d94:	mov	r5, #1
   11d98:	mov	r4, r3
   11d9c:	mov	r0, r5
   11da0:	bl	10fb8 <sleep@plt>
   11da4:	ldr	r3, [r4]
   11da8:	sub	r2, r3, #1
   11dac:	str	r2, [r4]
   11db0:	cmp	r3, #0
   11db4:	bgt	11d9c <__assert_fail@plt+0xbd4>
   11db8:	mov	r0, #0
   11dbc:	b	11d3c <__assert_fail@plt+0xb74>
   11dc0:	movw	r2, #513	; 0x201
   11dc4:	ldr	r1, [r4, #48]	; 0x30
   11dc8:	mov	r0, r4
   11dcc:	bl	16e60 <argp_state_help@@Base>
   11dd0:	mov	r0, #0
   11dd4:	b	11d3c <__assert_fail@plt+0xb74>
   11dd8:	movw	r3, #41556	; 0xa254
   11ddc:	movt	r3, #2
   11de0:	str	r1, [r3]
   11de4:	mov	r0, r1
   11de8:	bl	12d48 <argp_parse@@Base+0xc14>
   11dec:	str	r0, [r4, #40]	; 0x28
   11df0:	movw	r3, #41552	; 0xa250
   11df4:	movt	r3, #2
   11df8:	str	r0, [r3]
   11dfc:	ldr	r3, [r4, #16]
   11e00:	and	r3, r3, #3
   11e04:	cmp	r3, #1
   11e08:	movne	r0, #0
   11e0c:	bne	11d3c <__assert_fail@plt+0xb74>
   11e10:	ldr	r3, [r4, #8]
   11e14:	str	r5, [r3]
   11e18:	mov	r0, #0
   11e1c:	b	11d3c <__assert_fail@plt+0xb74>
   11e20:	mov	r0, #0
   11e24:	b	11d3c <__assert_fail@plt+0xb74>
   11e28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11e2c:	strd	r6, [sp, #8]
   11e30:	strd	r8, [sp, #16]
   11e34:	strd	sl, [sp, #24]
   11e38:	str	lr, [sp, #32]
   11e3c:	sub	sp, sp, #36	; 0x24
   11e40:	str	r0, [sp, #16]
   11e44:	str	r1, [sp, #20]
   11e48:	str	r2, [sp, #24]
   11e4c:	str	r3, [sp, #8]
   11e50:	ldr	r8, [sp, #72]	; 0x48
   11e54:	ldr	r6, [r0]
   11e58:	ldr	sl, [r0, #16]
   11e5c:	cmp	r6, #0
   11e60:	beq	11e7c <__assert_fail@plt+0xcb4>
   11e64:	mov	r4, r6
   11e68:	movw	r3, #36409	; 0x8e39
   11e6c:	movt	r3, #14563	; 0x38e3
   11e70:	str	r3, [sp, #12]
   11e74:	str	sl, [sp, #28]
   11e78:	b	11ec0 <__assert_fail@plt+0xcf8>
   11e7c:	ldr	r3, [r0, #4]
   11e80:	cmp	r3, #0
   11e84:	bne	1204c <__assert_fail@plt+0xe84>
   11e88:	ldr	r0, [sp, #8]
   11e8c:	str	r6, [sp, #8]
   11e90:	b	120d0 <__assert_fail@plt+0xf08>
   11e94:	ldr	r0, [r7, #16]!
   11e98:	cmp	r0, #0
   11e9c:	beq	11fa0 <__assert_fail@plt+0xdd8>
   11ea0:	mov	r1, r9
   11ea4:	bl	10f40 <strcmp@plt>
   11ea8:	cmp	r0, #0
   11eac:	bne	11e94 <__assert_fail@plt+0xccc>
   11eb0:	sub	sl, r7, fp
   11eb4:	cmp	sl, #0
   11eb8:	blt	11fa0 <__assert_fail@plt+0xdd8>
   11ebc:	add	r4, r4, #24
   11ec0:	ldr	r7, [r4, #4]
   11ec4:	cmp	r7, #0
   11ec8:	bne	11ed8 <__assert_fail@plt+0xd10>
   11ecc:	ldr	r3, [r4]
   11ed0:	cmp	r3, #0
   11ed4:	beq	12030 <__assert_fail@plt+0xe68>
   11ed8:	ldr	r3, [r4, #12]
   11edc:	and	r2, r3, #4
   11ee0:	cmp	r2, #0
   11ee4:	moveq	r6, r4
   11ee8:	ldr	r5, [r6, #12]
   11eec:	ands	r5, r5, #8
   11ef0:	bne	11ebc <__assert_fail@plt+0xcf4>
   11ef4:	tst	r3, #8
   11ef8:	bne	11f78 <__assert_fail@plt+0xdb0>
   11efc:	sub	r3, r7, #1
   11f00:	cmp	r3, #254	; 0xfe
   11f04:	bhi	11f78 <__assert_fail@plt+0xdb0>
   11f08:	bl	110a8 <__ctype_b_loc@plt>
   11f0c:	ldr	r2, [r0]
   11f10:	lsl	r3, r7, #1
   11f14:	ldrh	r3, [r2, r3]
   11f18:	tst	r3, #16384	; 0x4000
   11f1c:	beq	11f78 <__assert_fail@plt+0xdb0>
   11f20:	ldr	r3, [r8, #4]
   11f24:	add	r2, r3, #1
   11f28:	str	r2, [r8, #4]
   11f2c:	strb	r7, [r3]
   11f30:	ldr	r3, [r6, #8]
   11f34:	cmp	r3, #0
   11f38:	beq	11f6c <__assert_fail@plt+0xda4>
   11f3c:	ldr	r3, [r8, #4]
   11f40:	add	r2, r3, #1
   11f44:	str	r2, [r8, #4]
   11f48:	mov	r1, #58	; 0x3a
   11f4c:	strb	r1, [r3]
   11f50:	ldr	r3, [r6, #12]
   11f54:	tst	r3, #1
   11f58:	beq	11f6c <__assert_fail@plt+0xda4>
   11f5c:	ldr	r3, [r8, #4]
   11f60:	add	r2, r3, #1
   11f64:	str	r2, [r8, #4]
   11f68:	strb	r1, [r3]
   11f6c:	ldr	r3, [r8, #4]
   11f70:	mov	r2, #0
   11f74:	strb	r2, [r3]
   11f78:	ldr	r9, [r4]
   11f7c:	cmp	r9, #0
   11f80:	beq	11ebc <__assert_fail@plt+0xcf4>
   11f84:	ldr	r3, [r8]
   11f88:	ldr	fp, [r3, #8]
   11f8c:	ldr	r0, [fp]
   11f90:	cmp	r0, #0
   11f94:	beq	11fa0 <__assert_fail@plt+0xdd8>
   11f98:	mov	r7, fp
   11f9c:	b	11ea0 <__assert_fail@plt+0xcd8>
   11fa0:	ldr	r3, [r8, #8]
   11fa4:	str	r9, [r3]
   11fa8:	ldr	r3, [r6, #8]
   11fac:	cmp	r3, #0
   11fb0:	beq	11fc8 <__assert_fail@plt+0xe00>
   11fb4:	ldr	r3, [r6, #12]
   11fb8:	and	r3, r3, #1
   11fbc:	cmp	r3, #0
   11fc0:	movne	r5, #2
   11fc4:	moveq	r5, #1
   11fc8:	ldr	r3, [r8, #8]
   11fcc:	str	r5, [r3, #4]
   11fd0:	ldr	r3, [r8, #8]
   11fd4:	mov	r2, #0
   11fd8:	str	r2, [r3, #8]
   11fdc:	ldr	r3, [r4, #4]
   11fe0:	cmp	r3, r2
   11fe4:	ldreq	r3, [r6, #4]
   11fe8:	bic	r2, r3, #-16777216	; 0xff000000
   11fec:	ldr	r1, [r8, #8]
   11ff0:	ldr	r3, [r8]
   11ff4:	ldr	r3, [r3, #48]	; 0x30
   11ff8:	ldr	r0, [sp, #8]
   11ffc:	sub	r3, r0, r3
   12000:	asr	r3, r3, #2
   12004:	ldr	r0, [sp, #12]
   12008:	mul	r3, r0, r3
   1200c:	add	r3, r3, #1
   12010:	add	r3, r2, r3, lsl #24
   12014:	str	r3, [r1, #12]
   12018:	ldr	r3, [r8, #8]
   1201c:	add	r2, r3, #16
   12020:	str	r2, [r8, #8]
   12024:	mov	r2, #0
   12028:	str	r2, [r3, #16]
   1202c:	b	11ebc <__assert_fail@plt+0xcf4>
   12030:	ldr	r3, [r4, #16]
   12034:	cmp	r3, #0
   12038:	bne	11ed8 <__assert_fail@plt+0xd10>
   1203c:	ldr	r3, [r4, #20]
   12040:	cmp	r3, #0
   12044:	bne	11ed8 <__assert_fail@plt+0xd10>
   12048:	ldr	sl, [sp, #28]
   1204c:	ldr	r1, [sp, #16]
   12050:	ldr	r3, [r1, #4]
   12054:	ldr	r2, [sp, #8]
   12058:	str	r3, [r2]
   1205c:	str	r1, [r2, #4]
   12060:	ldr	r3, [r8, #4]
   12064:	str	r3, [r2, #8]
   12068:	mov	r3, #0
   1206c:	str	r3, [r2, #12]
   12070:	ldr	r1, [sp, #20]
   12074:	str	r1, [r2, #16]
   12078:	ldr	r1, [sp, #24]
   1207c:	str	r1, [r2, #20]
   12080:	str	r3, [r2, #24]
   12084:	str	r3, [r2, #32]
   12088:	str	r3, [r2, #28]
   1208c:	cmp	sl, r3
   12090:	beq	120c8 <__assert_fail@plt+0xf00>
   12094:	ldr	r3, [sl]
   12098:	cmp	r3, #0
   1209c:	beq	1212c <__assert_fail@plt+0xf64>
   120a0:	mov	r3, #0
   120a4:	add	r3, r3, #1
   120a8:	ldr	r2, [sl, r3, lsl #4]
   120ac:	cmp	r2, #0
   120b0:	bne	120a4 <__assert_fail@plt+0xedc>
   120b4:	ldr	r2, [r8, #12]
   120b8:	ldr	r1, [sp, #8]
   120bc:	str	r2, [r1, #28]
   120c0:	add	r3, r2, r3, lsl #2
   120c4:	str	r3, [r8, #12]
   120c8:	ldr	r3, [sp, #8]
   120cc:	add	r0, r3, #36	; 0x24
   120d0:	cmp	sl, #0
   120d4:	beq	12110 <__assert_fail@plt+0xf48>
   120d8:	ldr	ip, [sl]
   120dc:	cmp	ip, #0
   120e0:	beq	12110 <__assert_fail@plt+0xf48>
   120e4:	mov	r2, #0
   120e8:	add	r4, r2, #1
   120ec:	str	r8, [sp]
   120f0:	mov	r3, r0
   120f4:	ldr	r1, [sp, #8]
   120f8:	mov	r0, ip
   120fc:	bl	11e28 <__assert_fail@plt+0xc60>
   12100:	ldr	ip, [sl, r4, lsl #4]
   12104:	mov	r2, r4
   12108:	cmp	ip, #0
   1210c:	bne	120e8 <__assert_fail@plt+0xf20>
   12110:	add	sp, sp, #36	; 0x24
   12114:	ldrd	r4, [sp]
   12118:	ldrd	r6, [sp, #8]
   1211c:	ldrd	r8, [sp, #16]
   12120:	ldrd	sl, [sp, #24]
   12124:	add	sp, sp, #32
   12128:	pop	{pc}		; (ldr pc, [sp], #4)
   1212c:	mov	r3, #0
   12130:	b	120b4 <__assert_fail@plt+0xeec>

00012134 <argp_parse@@Base>:
   12134:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12138:	strd	r6, [sp, #8]
   1213c:	strd	r8, [sp, #16]
   12140:	strd	sl, [sp, #24]
   12144:	str	lr, [sp, #32]
   12148:	add	fp, sp, #32
   1214c:	sub	sp, sp, #228	; 0xe4
   12150:	mov	r8, r0
   12154:	str	r1, [fp, #-240]	; 0xffffff10
   12158:	str	r2, [fp, #-232]	; 0xffffff18
   1215c:	mov	r7, r3
   12160:	tst	r3, #1
   12164:	bne	12190 <argp_parse@@Base+0x5c>
   12168:	movw	r3, #41556	; 0xa254
   1216c:	movt	r3, #2
   12170:	ldr	r3, [r3]
   12174:	cmp	r3, #0
   12178:	beq	121e8 <argp_parse@@Base+0xb4>
   1217c:	movw	r3, #41552	; 0xa250
   12180:	movt	r3, #2
   12184:	ldr	r3, [r3]
   12188:	cmp	r3, #0
   1218c:	beq	121fc <argp_parse@@Base+0xc8>
   12190:	tst	r7, #16
   12194:	beq	12218 <argp_parse@@Base+0xe4>
   12198:	str	r7, [fp, #-244]	; 0xffffff0c
   1219c:	mov	r3, #0
   121a0:	str	r3, [fp, #-188]	; 0xffffff44
   121a4:	str	r3, [fp, #-184]	; 0xffffff48
   121a8:	str	r3, [fp, #-180]	; 0xffffff4c
   121ac:	str	r3, [fp, #-176]	; 0xffffff50
   121b0:	str	r3, [fp, #-172]	; 0xffffff54
   121b4:	str	r3, [fp, #-168]	; 0xffffff58
   121b8:	str	r3, [fp, #-164]	; 0xffffff5c
   121bc:	ands	r2, r7, #4
   121c0:	str	r2, [fp, #-248]	; 0xffffff08
   121c4:	moveq	r2, #1
   121c8:	movne	r2, r3
   121cc:	str	r2, [fp, #-228]	; 0xffffff1c
   121d0:	str	r3, [fp, #-224]	; 0xffffff20
   121d4:	str	r3, [fp, #-220]	; 0xffffff24
   121d8:	str	r3, [fp, #-216]	; 0xffffff28
   121dc:	cmp	r8, r3
   121e0:	beq	122e4 <argp_parse@@Base+0x1b0>
   121e4:	b	122d8 <argp_parse@@Base+0x1a4>
   121e8:	ldr	r2, [r2]
   121ec:	movw	r3, #41556	; 0xa254
   121f0:	movt	r3, #2
   121f4:	str	r2, [r3]
   121f8:	b	1217c <argp_parse@@Base+0x48>
   121fc:	ldr	r3, [fp, #-232]	; 0xffffff18
   12200:	ldr	r0, [r3]
   12204:	bl	12d48 <argp_parse@@Base+0xc14>
   12208:	movw	r3, #41552	; 0xa250
   1220c:	movt	r3, #2
   12210:	str	r0, [r3]
   12214:	b	12190 <argp_parse@@Base+0x5c>
   12218:	sub	sp, sp, #64	; 0x40
   1221c:	add	r5, sp, #8
   12220:	sub	sp, sp, #32
   12224:	add	r4, sp, #8
   12228:	mov	r1, #0
   1222c:	str	r1, [r4]
   12230:	str	r1, [r4, #4]
   12234:	str	r1, [r4, #8]
   12238:	str	r1, [r4, #12]
   1223c:	str	r1, [r4, #20]
   12240:	str	r1, [r4, #24]
   12244:	str	r5, [r4, #16]
   12248:	mov	r2, #64	; 0x40
   1224c:	mov	r0, r5
   12250:	bl	11108 <memset@plt>
   12254:	cmp	r8, #0
   12258:	mov	r0, r5
   1225c:	strne	r8, [r0], #16
   12260:	movw	r3, #34632	; 0x8748
   12264:	movt	r3, #1
   12268:	str	r3, [r0]
   1226c:	movw	r3, #41640	; 0xa2a8
   12270:	movt	r3, #2
   12274:	ldr	r3, [r3]
   12278:	cmp	r3, #0
   1227c:	beq	124a4 <argp_parse@@Base+0x370>
   12280:	add	r2, r0, #32
   12284:	ldr	r3, [pc, #2548]	; 12c80 <argp_parse@@Base+0xb4c>
   12288:	str	r3, [r0, #16]
   1228c:	mov	r3, #0
   12290:	str	r3, [r2]
   12294:	str	r7, [fp, #-244]	; 0xffffff0c
   12298:	str	r3, [fp, #-188]	; 0xffffff44
   1229c:	str	r3, [fp, #-184]	; 0xffffff48
   122a0:	str	r3, [fp, #-180]	; 0xffffff4c
   122a4:	str	r3, [fp, #-176]	; 0xffffff50
   122a8:	str	r3, [fp, #-172]	; 0xffffff54
   122ac:	str	r3, [fp, #-168]	; 0xffffff58
   122b0:	str	r3, [fp, #-164]	; 0xffffff5c
   122b4:	ands	r2, r7, #4
   122b8:	str	r2, [fp, #-248]	; 0xffffff08
   122bc:	moveq	r2, #1
   122c0:	movne	r2, r3
   122c4:	str	r2, [fp, #-228]	; 0xffffff1c
   122c8:	str	r3, [fp, #-224]	; 0xffffff20
   122cc:	str	r3, [fp, #-220]	; 0xffffff24
   122d0:	str	r3, [fp, #-216]	; 0xffffff28
   122d4:	mov	r8, r4
   122d8:	sub	r1, fp, #228	; 0xe4
   122dc:	mov	r0, r8
   122e0:	bl	11b68 <__assert_fail@plt+0x9a0>
   122e4:	ldr	r4, [fp, #-220]	; 0xffffff24
   122e8:	add	r4, r4, #1
   122ec:	add	r4, r4, r4, lsl #3
   122f0:	lsl	r4, r4, #2
   122f4:	ldr	r3, [fp, #-216]	; 0xffffff28
   122f8:	lsl	r3, r3, #2
   122fc:	str	r3, [fp, #-236]	; 0xffffff14
   12300:	add	r9, r3, r4
   12304:	ldr	r5, [fp, #-224]	; 0xffffff20
   12308:	add	r5, r5, #1
   1230c:	add	r5, r9, r5, lsl #4
   12310:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12314:	add	r0, r0, #1
   12318:	add	r0, r0, r5
   1231c:	bl	13ba4 <argp_parse@@Base+0x1a70>
   12320:	mov	r6, r0
   12324:	str	r0, [fp, #-40]	; 0xffffffd8
   12328:	cmp	r0, #0
   1232c:	moveq	r4, #12
   12330:	beq	12aa0 <argp_parse@@Base+0x96c>
   12334:	str	r0, [fp, #-112]	; 0xffffff90
   12338:	add	r4, r0, r4
   1233c:	str	r4, [fp, #-104]	; 0xffffff98
   12340:	add	r9, r0, r9
   12344:	str	r9, [fp, #-152]	; 0xffffff68
   12348:	add	sl, r0, r5
   1234c:	str	sl, [fp, #-156]	; 0xffffff64
   12350:	mov	r3, #1
   12354:	str	r3, [fp, #-196]	; 0xffffff3c
   12358:	str	r3, [fp, #-192]	; 0xffffff40
   1235c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12360:	strd	r2, [fp, #-148]	; 0xffffff6c
   12364:	ldrd	r2, [fp, #-188]	; 0xffffff44
   12368:	strd	r2, [fp, #-140]	; 0xffffff74
   1236c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   12370:	strd	r2, [fp, #-132]	; 0xffffff7c
   12374:	ldrd	r2, [fp, #-172]	; 0xffffff54
   12378:	strd	r2, [fp, #-124]	; 0xffffff84
   1237c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12380:	str	r3, [fp, #-116]	; 0xffffff8c
   12384:	ldr	r2, [fp, #-236]	; 0xffffff14
   12388:	mov	r1, #0
   1238c:	mov	r0, r4
   12390:	bl	11108 <memset@plt>
   12394:	sub	r3, fp, #160	; 0xa0
   12398:	str	r3, [fp, #-212]	; 0xffffff2c
   1239c:	str	sl, [fp, #-208]	; 0xffffff30
   123a0:	str	r9, [fp, #-204]	; 0xffffff34
   123a4:	str	r4, [fp, #-200]	; 0xffffff38
   123a8:	ldr	r3, [fp, #-244]	; 0xffffff0c
   123ac:	tst	r3, #8
   123b0:	beq	124c0 <argp_parse@@Base+0x38c>
   123b4:	add	sl, sl, #1
   123b8:	str	sl, [fp, #-208]	; 0xffffff30
   123bc:	mov	r3, #45	; 0x2d
   123c0:	strb	r3, [r6, r5]
   123c4:	mov	r3, #0
   123c8:	ldr	r2, [fp, #-208]	; 0xffffff30
   123cc:	strb	r3, [r2]
   123d0:	ldr	r2, [fp, #-204]	; 0xffffff34
   123d4:	str	r3, [r2]
   123d8:	str	r8, [fp, #-160]	; 0xffffff60
   123dc:	cmp	r8, r3
   123e0:	beq	124e0 <argp_parse@@Base+0x3ac>
   123e4:	sub	r3, fp, #212	; 0xd4
   123e8:	str	r3, [sp]
   123ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   123f0:	mov	r2, #0
   123f4:	mov	r1, r2
   123f8:	mov	r0, r8
   123fc:	bl	11e28 <__assert_fail@plt+0xc60>
   12400:	str	r0, [fp, #-108]	; 0xffffff94
   12404:	mov	r2, #0
   12408:	mov	r3, #0
   1240c:	strd	r2, [fp, #-76]	; 0xffffffb4
   12410:	strd	r2, [fp, #-68]	; 0xffffffbc
   12414:	strd	r2, [fp, #-60]	; 0xffffffc4
   12418:	ldr	r3, [fp, #-160]	; 0xffffff60
   1241c:	str	r3, [fp, #-96]	; 0xffffffa0
   12420:	ldr	r3, [fp, #-240]	; 0xffffff10
   12424:	str	r3, [fp, #-92]	; 0xffffffa4
   12428:	ldr	r3, [fp, #-232]	; 0xffffff18
   1242c:	str	r3, [fp, #-88]	; 0xffffffa8
   12430:	str	r7, [fp, #-80]	; 0xffffffb0
   12434:	movw	r3, #41560	; 0xa258
   12438:	movt	r3, #2
   1243c:	ldr	r3, [r3]
   12440:	str	r3, [fp, #-52]	; 0xffffffcc
   12444:	movw	r3, #41564	; 0xa25c
   12448:	movt	r3, #2
   1244c:	ldr	r3, [r3]
   12450:	str	r3, [fp, #-48]	; 0xffffffd0
   12454:	mov	r3, #0
   12458:	str	r3, [fp, #-84]	; 0xffffffac
   1245c:	sub	r3, fp, #160	; 0xa0
   12460:	str	r3, [fp, #-44]	; 0xffffffd4
   12464:	mov	r3, #1
   12468:	str	r3, [fp, #-100]	; 0xffffff9c
   1246c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12470:	ldr	r2, [fp, #-108]	; 0xffffff94
   12474:	cmp	r3, r2
   12478:	bcs	1258c <argp_parse@@Base+0x458>
   1247c:	ldr	r2, [fp, #8]
   12480:	str	r2, [r3, #24]
   12484:	ldr	r5, [fp, #-112]	; 0xffffff90
   12488:	ldr	r3, [fp, #-108]	; 0xffffff94
   1248c:	cmp	r5, r3
   12490:	bcs	1258c <argp_parse@@Base+0x458>
   12494:	mov	r6, #3
   12498:	movt	r6, #256	; 0x100
   1249c:	mov	r7, #0
   124a0:	b	12528 <argp_parse@@Base+0x3f4>
   124a4:	movw	r3, #41584	; 0xa270
   124a8:	movt	r3, #2
   124ac:	ldr	r3, [r3]
   124b0:	cmp	r3, #0
   124b4:	addeq	r2, r0, #16
   124b8:	bne	12280 <argp_parse@@Base+0x14c>
   124bc:	b	1228c <argp_parse@@Base+0x158>
   124c0:	ldr	r3, [fp, #-248]	; 0xffffff08
   124c4:	cmp	r3, #0
   124c8:	beq	123c4 <argp_parse@@Base+0x290>
   124cc:	add	sl, sl, #1
   124d0:	str	sl, [fp, #-208]	; 0xffffff30
   124d4:	mov	r3, #43	; 0x2b
   124d8:	strb	r3, [r6, r5]
   124dc:	b	123c4 <argp_parse@@Base+0x290>
   124e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   124e4:	str	r3, [fp, #-108]	; 0xffffff94
   124e8:	b	12404 <argp_parse@@Base+0x2d0>
   124ec:	ldr	r3, [r5]
   124f0:	cmp	r3, #0
   124f4:	beq	12548 <argp_parse@@Base+0x414>
   124f8:	mov	r3, r7
   124fc:	mov	r2, r6
   12500:	sub	r1, fp, #96	; 0x60
   12504:	mov	r0, r5
   12508:	bl	11af0 <__assert_fail@plt+0x928>
   1250c:	add	r5, r5, #36	; 0x24
   12510:	ldr	r3, [fp, #-108]	; 0xffffff94
   12514:	cmp	r5, r3
   12518:	bcs	1257c <argp_parse@@Base+0x448>
   1251c:	cmp	r0, #7
   12520:	cmpne	r0, #0
   12524:	bne	12574 <argp_parse@@Base+0x440>
   12528:	ldr	r3, [r5, #16]
   1252c:	cmp	r3, #0
   12530:	beq	124ec <argp_parse@@Base+0x3b8>
   12534:	ldr	r2, [r5, #20]
   12538:	ldr	r3, [r3, #28]
   1253c:	ldr	r3, [r3, r2, lsl #2]
   12540:	str	r3, [r5, #24]
   12544:	b	124ec <argp_parse@@Base+0x3b8>
   12548:	ldr	r3, [r5, #4]
   1254c:	ldr	r3, [r3, #16]
   12550:	cmp	r3, #0
   12554:	beq	124f8 <argp_parse@@Base+0x3c4>
   12558:	ldr	r3, [r3]
   1255c:	cmp	r3, #0
   12560:	beq	124f8 <argp_parse@@Base+0x3c4>
   12564:	ldr	r3, [r5, #28]
   12568:	ldr	r2, [r5, #24]
   1256c:	str	r2, [r3]
   12570:	b	124f8 <argp_parse@@Base+0x3c4>
   12574:	mov	r4, r0
   12578:	b	12aa0 <argp_parse@@Base+0x96c>
   1257c:	mov	r4, r0
   12580:	cmp	r0, #7
   12584:	cmpne	r0, #0
   12588:	bne	12aa0 <argp_parse@@Base+0x96c>
   1258c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12590:	tst	r3, #2
   12594:	moveq	r3, #1
   12598:	streq	r3, [fp, #-144]	; 0xffffff70
   1259c:	beq	125c8 <argp_parse@@Base+0x494>
   125a0:	mov	r2, #0
   125a4:	str	r2, [fp, #-144]	; 0xffffff70
   125a8:	tst	r3, #1
   125ac:	beq	125c8 <argp_parse@@Base+0x494>
   125b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   125b4:	sub	r3, r3, #4
   125b8:	str	r3, [fp, #-88]	; 0xffffffa8
   125bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   125c0:	add	r3, r3, #1
   125c4:	str	r3, [fp, #-92]	; 0xffffffa4
   125c8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   125cc:	ldr	r2, [fp, #-232]	; 0xffffff18
   125d0:	cmp	r2, r3
   125d4:	beq	125fc <argp_parse@@Base+0x4c8>
   125d8:	movw	r3, #41552	; 0xa250
   125dc:	movt	r3, #2
   125e0:	ldr	r3, [r3]
   125e4:	str	r3, [fp, #-56]	; 0xffffffc8
   125e8:	movw	sl, #34960	; 0x8890
   125ec:	movt	sl, #1
   125f0:	mov	r9, #6
   125f4:	movt	r9, #256	; 0x100
   125f8:	b	126c4 <argp_parse@@Base+0x590>
   125fc:	ldr	r0, [r2]
   12600:	cmp	r0, #0
   12604:	beq	125d8 <argp_parse@@Base+0x4a4>
   12608:	bl	12d48 <argp_parse@@Base+0xc14>
   1260c:	str	r0, [fp, #-56]	; 0xffffffc8
   12610:	b	125e8 <argp_parse@@Base+0x4b4>
   12614:	ldr	r3, [fp, #-84]	; 0xffffffac
   12618:	str	r3, [fp, #-148]	; 0xffffff6c
   1261c:	mvn	r3, #0
   12620:	str	r3, [fp, #-140]	; 0xffffff74
   12624:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12628:	tst	r3, #64	; 0x40
   1262c:	beq	12748 <argp_parse@@Base+0x614>
   12630:	sub	r3, fp, #148	; 0x94
   12634:	str	r3, [sp, #4]
   12638:	mov	r3, #0
   1263c:	str	r3, [sp]
   12640:	ldr	r3, [fp, #-152]	; 0xffffff68
   12644:	ldr	r2, [fp, #-156]	; 0xffffff64
   12648:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1264c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12650:	bl	12ef0 <argp_parse@@Base+0xdbc>
   12654:	mov	r5, r0
   12658:	ldr	r4, [fp, #-148]	; 0xffffff6c
   1265c:	str	r4, [fp, #-84]	; 0xffffffac
   12660:	cmn	r5, #1
   12664:	beq	12774 <argp_parse@@Base+0x640>
   12668:	cmp	r5, #63	; 0x3f
   1266c:	beq	127a4 <argp_parse@@Base+0x670>
   12670:	cmp	r5, #1
   12674:	beq	12720 <argp_parse@@Base+0x5ec>
   12678:	ldr	r4, [fp, #-136]	; 0xffffff78
   1267c:	asrs	r3, r5, #24
   12680:	beq	127b4 <argp_parse@@Base+0x680>
   12684:	ands	r1, r5, #8388608	; 0x800000
   12688:	movne	r1, #-16777216	; 0xff000000
   1268c:	bic	r2, r5, #-16777216	; 0xff000000
   12690:	add	r0, r3, r3, lsl #3
   12694:	lsl	r0, r0, #2
   12698:	sub	r0, r0, #36	; 0x24
   1269c:	mov	r3, r4
   126a0:	orr	r2, r2, r1
   126a4:	sub	r1, fp, #96	; 0x60
   126a8:	ldr	ip, [fp, #-112]	; 0xffffff90
   126ac:	add	r0, ip, r0
   126b0:	bl	11af0 <__assert_fail@plt+0x928>
   126b4:	cmp	r0, #7
   126b8:	beq	1297c <argp_parse@@Base+0x848>
   126bc:	cmp	r0, #0
   126c0:	bne	12a00 <argp_parse@@Base+0x8cc>
   126c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   126c8:	cmp	r3, #0
   126cc:	beq	126e4 <argp_parse@@Base+0x5b0>
   126d0:	ldr	r2, [fp, #-84]	; 0xffffffac
   126d4:	cmp	r3, r2
   126d8:	movgt	r3, #0
   126dc:	strgt	r3, [fp, #-72]	; 0xffffffb8
   126e0:	ble	126f0 <argp_parse@@Base+0x5bc>
   126e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   126e8:	cmp	r3, #0
   126ec:	bne	12614 <argp_parse@@Base+0x4e0>
   126f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   126f4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   126f8:	cmp	r3, r2
   126fc:	bge	12c70 <argp_parse@@Base+0xb3c>
   12700:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12704:	tst	r2, #4
   12708:	bne	12c78 <argp_parse@@Base+0xb44>
   1270c:	add	r2, r3, #1
   12710:	str	r2, [fp, #-84]	; 0xffffffac
   12714:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12718:	ldr	r3, [r2, r3, lsl #2]
   1271c:	str	r3, [fp, #-136]	; 0xffffff78
   12720:	ldr	r7, [fp, #-136]	; 0xffffff78
   12724:	ldr	r4, [fp, #-84]	; 0xffffffac
   12728:	sub	r4, r4, #1
   1272c:	str	r4, [fp, #-84]	; 0xffffffac
   12730:	ldr	r5, [fp, #-112]	; 0xffffff90
   12734:	ldr	r3, [fp, #-108]	; 0xffffff94
   12738:	cmp	r3, r5
   1273c:	bls	129f8 <argp_parse@@Base+0x8c4>
   12740:	mov	r6, #0
   12744:	b	12874 <argp_parse@@Base+0x740>
   12748:	sub	r3, fp, #148	; 0x94
   1274c:	str	r3, [sp, #4]
   12750:	mov	r3, #0
   12754:	str	r3, [sp]
   12758:	ldr	r3, [fp, #-152]	; 0xffffff68
   1275c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12760:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12764:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12768:	bl	12e94 <argp_parse@@Base+0xd60>
   1276c:	mov	r5, r0
   12770:	b	12658 <argp_parse@@Base+0x524>
   12774:	mov	r3, #0
   12778:	str	r3, [fp, #-100]	; 0xffffff9c
   1277c:	cmp	r4, #1
   12780:	ble	126f0 <argp_parse@@Base+0x5bc>
   12784:	sub	r3, r4, #-1073741823	; 0xc0000001
   12788:	mov	r1, sl
   1278c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12790:	ldr	r0, [r2, r3, lsl #2]
   12794:	bl	10f40 <strcmp@plt>
   12798:	cmp	r0, #0
   1279c:	streq	r4, [fp, #-72]	; 0xffffffb8
   127a0:	b	126f0 <argp_parse@@Base+0x5bc>
   127a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   127a8:	cmn	r3, #1
   127ac:	bne	12c68 <argp_parse@@Base+0xb34>
   127b0:	ldr	r4, [fp, #-136]	; 0xffffff78
   127b4:	mov	r1, r5
   127b8:	ldr	r0, [fp, #-156]	; 0xffffff64
   127bc:	bl	110d8 <strchr@plt>
   127c0:	subs	r1, r0, #0
   127c4:	beq	12814 <argp_parse@@Base+0x6e0>
   127c8:	ldr	r0, [fp, #-112]	; 0xffffff90
   127cc:	ldr	r2, [fp, #-108]	; 0xffffff94
   127d0:	cmp	r2, r0
   127d4:	bls	12814 <argp_parse@@Base+0x6e0>
   127d8:	ldr	r3, [r0, #8]
   127dc:	cmp	r1, r3
   127e0:	bcc	127fc <argp_parse@@Base+0x6c8>
   127e4:	add	r0, r0, #36	; 0x24
   127e8:	cmp	r2, r0
   127ec:	bls	12814 <argp_parse@@Base+0x6e0>
   127f0:	ldr	r3, [r0, #8]
   127f4:	cmp	r1, r3
   127f8:	bcs	127e4 <argp_parse@@Base+0x6b0>
   127fc:	mov	r3, r4
   12800:	mov	r2, r5
   12804:	sub	r1, fp, #96	; 0x60
   12808:	bl	11af0 <__assert_fail@plt+0x928>
   1280c:	cmp	r0, #7
   12810:	bne	126bc <argp_parse@@Base+0x588>
   12814:	ldr	r3, [pc, #1128]	; 12c84 <argp_parse@@Base+0xb50>
   12818:	mov	r2, r5
   1281c:	movw	r1, #34964	; 0x8894
   12820:	movt	r1, #1
   12824:	sub	r0, fp, #96	; 0x60
   12828:	bl	16f28 <argp_error@@Base>
   1282c:	b	128b4 <argp_parse@@Base+0x780>
   12830:	ldr	r3, [fp, #-84]	; 0xffffffac
   12834:	sub	r3, r3, #1
   12838:	str	r3, [fp, #-84]	; 0xffffffac
   1283c:	mov	r3, r6
   12840:	mov	r2, r9
   12844:	sub	r1, fp, #96	; 0x60
   12848:	mov	r0, r5
   1284c:	bl	11af0 <__assert_fail@plt+0x928>
   12850:	add	r5, r5, #36	; 0x24
   12854:	ldr	r2, [fp, #-108]	; 0xffffff94
   12858:	cmp	r5, r2
   1285c:	movcs	r3, #0
   12860:	movcc	r3, #1
   12864:	cmp	r0, #7
   12868:	movne	r3, #0
   1286c:	cmp	r3, #0
   12870:	beq	12944 <argp_parse@@Base+0x810>
   12874:	ldr	r3, [fp, #-84]	; 0xffffffac
   12878:	add	r3, r3, #1
   1287c:	str	r3, [fp, #-84]	; 0xffffffac
   12880:	mov	r3, r7
   12884:	mov	r2, r6
   12888:	sub	r1, fp, #96	; 0x60
   1288c:	mov	r0, r5
   12890:	bl	11af0 <__assert_fail@plt+0x928>
   12894:	cmp	r0, #7
   12898:	beq	12830 <argp_parse@@Base+0x6fc>
   1289c:	add	r5, r5, #36	; 0x24
   128a0:	cmp	r0, #0
   128a4:	beq	12954 <argp_parse@@Base+0x820>
   128a8:	cmp	r0, #7
   128ac:	bne	126bc <argp_parse@@Base+0x588>
   128b0:	mov	r5, #1
   128b4:	add	r5, r5, #1
   128b8:	bics	r3, r5, #2
   128bc:	moveq	r3, #1
   128c0:	movne	r3, #0
   128c4:	cmp	r3, #0
   128c8:	beq	12c0c <argp_parse@@Base+0xad8>
   128cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   128d0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   128d4:	cmp	r3, r2
   128d8:	beq	12ac0 <argp_parse@@Base+0x98c>
   128dc:	ldr	r2, [fp, #4]
   128e0:	cmp	r2, #0
   128e4:	strne	r3, [r2]
   128e8:	beq	12be4 <argp_parse@@Base+0xab0>
   128ec:	ldr	r5, [fp, #-108]	; 0xffffff94
   128f0:	sub	r5, r5, #36	; 0x24
   128f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   128f8:	cmp	r5, r3
   128fc:	bcc	12c4c <argp_parse@@Base+0xb18>
   12900:	mov	r6, #4
   12904:	movt	r6, #256	; 0x100
   12908:	mov	r7, #0
   1290c:	mov	r3, r7
   12910:	mov	r2, r6
   12914:	sub	r1, fp, #96	; 0x60
   12918:	mov	r0, r5
   1291c:	bl	11af0 <__assert_fail@plt+0x928>
   12920:	sub	r5, r5, #36	; 0x24
   12924:	ldr	r3, [fp, #-112]	; 0xffffff90
   12928:	cmp	r5, r3
   1292c:	bcc	12c24 <argp_parse@@Base+0xaf0>
   12930:	cmp	r0, #7
   12934:	cmpne	r0, #0
   12938:	beq	1290c <argp_parse@@Base+0x7d8>
   1293c:	mov	r4, r0
   12940:	b	12c34 <argp_parse@@Base+0xb00>
   12944:	cmp	r0, #0
   12948:	bne	128a8 <argp_parse@@Base+0x774>
   1294c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12950:	str	r3, [fp, #-84]	; 0xffffffac
   12954:	ldr	r3, [fp, #-84]	; 0xffffffac
   12958:	cmp	r4, r3
   1295c:	movge	r3, #1
   12960:	strge	r3, [fp, #-100]	; 0xffffff9c
   12964:	bge	126c4 <argp_parse@@Base+0x590>
   12968:	sub	r4, r3, r4
   1296c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12970:	add	r4, r3, r4
   12974:	str	r4, [r5, #-24]	; 0xffffffe8
   12978:	b	126c4 <argp_parse@@Base+0x590>
   1297c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12980:	ldr	r2, [r3, #12]
   12984:	cmp	r2, r5
   12988:	beq	129c0 <argp_parse@@Base+0x88c>
   1298c:	ldr	r2, [r3]
   12990:	cmp	r2, #0
   12994:	beq	129ec <argp_parse@@Base+0x8b8>
   12998:	add	r3, r3, #16
   1299c:	ldr	r2, [r3, #12]
   129a0:	cmp	r5, r2
   129a4:	beq	129c0 <argp_parse@@Base+0x88c>
   129a8:	ldr	r2, [r3]
   129ac:	cmp	r2, #0
   129b0:	bne	12998 <argp_parse@@Base+0x864>
   129b4:	movw	r2, #34956	; 0x888c
   129b8:	movt	r2, #1
   129bc:	b	129d4 <argp_parse@@Base+0x8a0>
   129c0:	ldr	r2, [r3]
   129c4:	movw	r3, #34956	; 0x888c
   129c8:	movt	r3, #1
   129cc:	cmp	r2, #0
   129d0:	moveq	r2, r3
   129d4:	ldr	r3, [pc, #680]	; 12c84 <argp_parse@@Base+0xb50>
   129d8:	movw	r1, #34972	; 0x889c
   129dc:	movt	r1, #1
   129e0:	sub	r0, fp, #96	; 0x60
   129e4:	bl	16f28 <argp_error@@Base>
   129e8:	b	128b4 <argp_parse@@Base+0x780>
   129ec:	movw	r2, #34956	; 0x888c
   129f0:	movt	r2, #1
   129f4:	b	129d4 <argp_parse@@Base+0x8a0>
   129f8:	mov	r5, #1
   129fc:	b	128b4 <argp_parse@@Base+0x780>
   12a00:	mov	r4, r0
   12a04:	cmp	r4, #7
   12a08:	beq	12c0c <argp_parse@@Base+0xad8>
   12a0c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12a10:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a14:	cmp	r5, r3
   12a18:	bcs	12a4c <argp_parse@@Base+0x918>
   12a1c:	mov	r6, #5
   12a20:	movt	r6, #256	; 0x100
   12a24:	mov	r7, #0
   12a28:	mov	r3, r7
   12a2c:	mov	r2, r6
   12a30:	sub	r1, fp, #96	; 0x60
   12a34:	mov	r0, r5
   12a38:	bl	11af0 <__assert_fail@plt+0x928>
   12a3c:	add	r5, r5, #36	; 0x24
   12a40:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a44:	cmp	r5, r3
   12a48:	bcc	12a28 <argp_parse@@Base+0x8f4>
   12a4c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12a50:	sub	r5, r5, #36	; 0x24
   12a54:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a58:	cmp	r3, r5
   12a5c:	bhi	12a90 <argp_parse@@Base+0x95c>
   12a60:	mov	r6, #7
   12a64:	movt	r6, #256	; 0x100
   12a68:	mov	r7, #0
   12a6c:	mov	r3, r7
   12a70:	mov	r2, r6
   12a74:	sub	r1, fp, #96	; 0x60
   12a78:	mov	r0, r5
   12a7c:	bl	11af0 <__assert_fail@plt+0x928>
   12a80:	sub	r5, r5, #36	; 0x24
   12a84:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a88:	cmp	r5, r3
   12a8c:	bcs	12a6c <argp_parse@@Base+0x938>
   12a90:	cmp	r4, #7
   12a94:	moveq	r4, #22
   12a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a9c:	bl	12e0c <argp_parse@@Base+0xcd8>
   12aa0:	mov	r0, r4
   12aa4:	sub	sp, fp, #32
   12aa8:	ldrd	r4, [sp]
   12aac:	ldrd	r6, [sp, #8]
   12ab0:	ldrd	r8, [sp, #16]
   12ab4:	ldrd	sl, [sp, #24]
   12ab8:	add	sp, sp, #32
   12abc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ac0:	ldr	r6, [fp, #-112]	; 0xffffff90
   12ac4:	ldr	r5, [fp, #-108]	; 0xffffff94
   12ac8:	cmp	r5, r6
   12acc:	bls	12c54 <argp_parse@@Base+0xb20>
   12ad0:	mov	r4, #0
   12ad4:	mov	r7, #2
   12ad8:	movt	r7, #256	; 0x100
   12adc:	mov	r8, r4
   12ae0:	mov	r0, r4
   12ae4:	b	12b04 <argp_parse@@Base+0x9d0>
   12ae8:	add	r6, r6, #36	; 0x24
   12aec:	ldr	r5, [fp, #-108]	; 0xffffff94
   12af0:	cmp	r6, r5
   12af4:	bcs	12b40 <argp_parse@@Base+0xa0c>
   12af8:	cmp	r0, #7
   12afc:	cmpne	r0, #0
   12b00:	bne	12b28 <argp_parse@@Base+0x9f4>
   12b04:	ldr	r3, [r6, #12]
   12b08:	cmp	r3, #0
   12b0c:	bne	12ae8 <argp_parse@@Base+0x9b4>
   12b10:	mov	r3, r8
   12b14:	mov	r2, r7
   12b18:	sub	r1, fp, #96	; 0x60
   12b1c:	mov	r0, r6
   12b20:	bl	11af0 <__assert_fail@plt+0x928>
   12b24:	b	12ae8 <argp_parse@@Base+0x9b4>
   12b28:	mov	r4, r0
   12b2c:	sub	r5, r5, #36	; 0x24
   12b30:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b34:	cmp	r3, r5
   12b38:	bls	12b54 <argp_parse@@Base+0xa20>
   12b3c:	b	12ba0 <argp_parse@@Base+0xa6c>
   12b40:	mov	r4, r0
   12b44:	sub	r5, r5, #36	; 0x24
   12b48:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b4c:	cmp	r3, r5
   12b50:	bhi	12bc8 <argp_parse@@Base+0xa94>
   12b54:	cmp	r4, #7
   12b58:	cmpne	r4, #0
   12b5c:	bne	12ba0 <argp_parse@@Base+0xa6c>
   12b60:	mov	r6, #1
   12b64:	movt	r6, #256	; 0x100
   12b68:	mov	r7, #0
   12b6c:	mov	r3, r7
   12b70:	mov	r2, r6
   12b74:	sub	r1, fp, #96	; 0x60
   12b78:	mov	r0, r5
   12b7c:	bl	11af0 <__assert_fail@plt+0x928>
   12b80:	sub	r5, r5, #36	; 0x24
   12b84:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b88:	cmp	r5, r3
   12b8c:	bcc	12bc4 <argp_parse@@Base+0xa90>
   12b90:	cmp	r0, #7
   12b94:	cmpne	r0, #0
   12b98:	beq	12b6c <argp_parse@@Base+0xa38>
   12b9c:	mov	r4, r0
   12ba0:	ldr	r3, [fp, #4]
   12ba4:	cmp	r3, #0
   12ba8:	beq	12bb8 <argp_parse@@Base+0xa84>
   12bac:	ldr	r3, [fp, #-84]	; 0xffffffac
   12bb0:	ldr	r2, [fp, #4]
   12bb4:	str	r3, [r2]
   12bb8:	cmp	r4, #0
   12bbc:	beq	128ec <argp_parse@@Base+0x7b8>
   12bc0:	b	12a04 <argp_parse@@Base+0x8d0>
   12bc4:	mov	r4, r0
   12bc8:	cmp	r4, #7
   12bcc:	bne	12ba0 <argp_parse@@Base+0xa6c>
   12bd0:	ldr	r3, [fp, #4]
   12bd4:	cmp	r3, #0
   12bd8:	movne	r4, #0
   12bdc:	bne	12bac <argp_parse@@Base+0xa78>
   12be0:	b	128ec <argp_parse@@Base+0x7b8>
   12be4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12be8:	tst	r3, #2
   12bec:	bne	12c0c <argp_parse@@Base+0xad8>
   12bf0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c0c <argp_parse@@Base+0xad8>
   12bfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c00:	movw	r1, #34984	; 0x88a8
   12c04:	movt	r1, #1
   12c08:	bl	110e4 <fprintf@plt>
   12c0c:	mov	r2, #260	; 0x104
   12c10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c14:	sub	r0, fp, #96	; 0x60
   12c18:	bl	16e60 <argp_state_help@@Base>
   12c1c:	mov	r4, #7
   12c20:	b	12a0c <argp_parse@@Base+0x8d8>
   12c24:	mov	r4, r0
   12c28:	cmp	r0, #7
   12c2c:	movne	r4, r0
   12c30:	moveq	r4, #0
   12c34:	ldr	r5, [fp, #-108]	; 0xffffff94
   12c38:	sub	r5, r5, #36	; 0x24
   12c3c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c40:	cmp	r3, r5
   12c44:	bls	12a60 <argp_parse@@Base+0x92c>
   12c48:	b	12a98 <argp_parse@@Base+0x964>
   12c4c:	mov	r4, #0
   12c50:	b	12a98 <argp_parse@@Base+0x964>
   12c54:	sub	r5, r5, #36	; 0x24
   12c58:	cmp	r5, r6
   12c5c:	movcc	r4, #0
   12c60:	bcs	12b60 <argp_parse@@Base+0xa2c>
   12c64:	b	12ba0 <argp_parse@@Base+0xa6c>
   12c68:	mov	r3, #0
   12c6c:	b	128c4 <argp_parse@@Base+0x790>
   12c70:	mov	r3, #1
   12c74:	b	128c4 <argp_parse@@Base+0x790>
   12c78:	mov	r3, #1
   12c7c:	b	128c4 <argp_parse@@Base+0x790>
   12c80:	andeq	r8, r1, r4, ror #14
   12c84:	andeq	r8, r1, r0, lsl #15
   12c88:	cmp	r1, #0
   12c8c:	beq	12cd8 <argp_parse@@Base+0xba4>
   12c90:	ldr	r2, [r1, #52]	; 0x34
   12c94:	ldr	r3, [r2, #48]	; 0x30
   12c98:	ldr	r1, [r2, #52]	; 0x34
   12c9c:	cmp	r3, r1
   12ca0:	bcs	12ce0 <argp_parse@@Base+0xbac>
   12ca4:	ldr	r2, [r3, #4]
   12ca8:	cmp	r0, r2
   12cac:	beq	12cc8 <argp_parse@@Base+0xb94>
   12cb0:	add	r3, r3, #36	; 0x24
   12cb4:	cmp	r3, r1
   12cb8:	bcs	12cd0 <argp_parse@@Base+0xb9c>
   12cbc:	ldr	r2, [r3, #4]
   12cc0:	cmp	r2, r0
   12cc4:	bne	12cb0 <argp_parse@@Base+0xb7c>
   12cc8:	ldr	r0, [r3, #24]
   12ccc:	bx	lr
   12cd0:	mov	r0, #0
   12cd4:	bx	lr
   12cd8:	mov	r0, r1
   12cdc:	bx	lr
   12ce0:	mov	r0, #0
   12ce4:	bx	lr
   12ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   12cec:	sub	sp, sp, #12
   12cf0:	movw	r1, #41588	; 0xa274
   12cf4:	movt	r1, #2
   12cf8:	ldr	r3, [r1, #4]
   12cfc:	str	r3, [sp]
   12d00:	movw	r3, #35216	; 0x8990
   12d04:	movt	r3, #1
   12d08:	movw	r2, #35232	; 0x89a0
   12d0c:	movt	r2, #1
   12d10:	ldr	r1, [r1]
   12d14:	bl	132fc <argp_parse@@Base+0x11c8>
   12d18:	add	sp, sp, #12
   12d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d20:	movw	r3, #41584	; 0xa270
   12d24:	movt	r3, #2
   12d28:	movw	r2, #11496	; 0x2ce8
   12d2c:	movt	r2, #1
   12d30:	str	r2, [r3]
   12d34:	movw	r3, #41588	; 0xa274
   12d38:	movt	r3, #2
   12d3c:	str	r0, [r3]
   12d40:	str	r1, [r3, #4]
   12d44:	bx	lr
   12d48:	ldrb	r3, [r0]
   12d4c:	cmp	r3, #47	; 0x2f
   12d50:	bne	12d60 <argp_parse@@Base+0xc2c>
   12d54:	ldrb	r3, [r0, #1]!
   12d58:	cmp	r3, #47	; 0x2f
   12d5c:	beq	12d54 <argp_parse@@Base+0xc20>
   12d60:	ldrb	r2, [r0]
   12d64:	cmp	r2, #0
   12d68:	bxeq	lr
   12d6c:	push	{lr}		; (str lr, [sp, #-4]!)
   12d70:	mov	r1, r0
   12d74:	mov	r3, #0
   12d78:	mov	lr, #1
   12d7c:	mov	ip, r3
   12d80:	b	12d9c <argp_parse@@Base+0xc68>
   12d84:	cmp	r3, #0
   12d88:	movne	r0, r1
   12d8c:	movne	r3, ip
   12d90:	ldrb	r2, [r1, #1]!
   12d94:	cmp	r2, #0
   12d98:	beq	12dac <argp_parse@@Base+0xc78>
   12d9c:	cmp	r2, #47	; 0x2f
   12da0:	moveq	r3, lr
   12da4:	bne	12d84 <argp_parse@@Base+0xc50>
   12da8:	b	12d90 <argp_parse@@Base+0xc5c>
   12dac:	pop	{pc}		; (ldr pc, [sp], #4)
   12db0:	str	r4, [sp, #-8]!
   12db4:	str	lr, [sp, #4]
   12db8:	mov	r4, r0
   12dbc:	bl	110cc <strlen@plt>
   12dc0:	cmp	r0, #1
   12dc4:	bls	12de4 <argp_parse@@Base+0xcb0>
   12dc8:	add	r3, r4, r0
   12dcc:	ldrb	r3, [r3, #-1]
   12dd0:	cmp	r3, #47	; 0x2f
   12dd4:	subeq	r0, r0, #2
   12dd8:	addeq	r3, r4, r0
   12ddc:	rsbeq	r1, r4, #1
   12de0:	beq	12df0 <argp_parse@@Base+0xcbc>
   12de4:	ldr	r4, [sp]
   12de8:	add	sp, sp, #4
   12dec:	pop	{pc}		; (ldr pc, [sp], #4)
   12df0:	add	r0, r1, r3
   12df4:	cmp	r3, r4
   12df8:	beq	12de4 <argp_parse@@Base+0xcb0>
   12dfc:	ldrb	r2, [r3], #-1
   12e00:	cmp	r2, #47	; 0x2f
   12e04:	bne	12de4 <argp_parse@@Base+0xcb0>
   12e08:	b	12df0 <argp_parse@@Base+0xcbc>
   12e0c:	strd	r4, [sp, #-12]!
   12e10:	str	lr, [sp, #8]
   12e14:	sub	sp, sp, #12
   12e18:	mov	r5, r0
   12e1c:	bl	110f0 <__errno_location@plt>
   12e20:	mov	r4, r0
   12e24:	ldr	r3, [r0]
   12e28:	str	r3, [sp]
   12e2c:	str	r3, [sp, #4]
   12e30:	mov	r3, #0
   12e34:	str	r3, [r0]
   12e38:	mov	r0, r5
   12e3c:	bl	10f88 <free@plt>
   12e40:	ldr	r3, [r4]
   12e44:	clz	r3, r3
   12e48:	lsr	r3, r3, #5
   12e4c:	add	r2, sp, #8
   12e50:	add	r3, r2, r3, lsl #2
   12e54:	ldr	r3, [r3, #-8]
   12e58:	str	r3, [r4]
   12e5c:	add	sp, sp, #12
   12e60:	ldrd	r4, [sp]
   12e64:	add	sp, sp, #8
   12e68:	pop	{pc}		; (ldr pc, [sp], #4)
   12e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   12e70:	sub	sp, sp, #20
   12e74:	mov	ip, #0
   12e78:	str	ip, [sp, #8]
   12e7c:	str	ip, [sp, #4]
   12e80:	ldr	ip, [sp, #24]
   12e84:	str	ip, [sp]
   12e88:	bl	17c88 <argp_error@@Base+0xd60>
   12e8c:	add	sp, sp, #20
   12e90:	pop	{pc}		; (ldr pc, [sp], #4)
   12e94:	push	{lr}		; (str lr, [sp, #-4]!)
   12e98:	sub	sp, sp, #20
   12e9c:	mov	ip, #0
   12ea0:	str	ip, [sp, #12]
   12ea4:	ldr	lr, [sp, #28]
   12ea8:	str	lr, [sp, #8]
   12eac:	str	ip, [sp, #4]
   12eb0:	ldr	ip, [sp, #24]
   12eb4:	str	ip, [sp]
   12eb8:	bl	176cc <argp_error@@Base+0x7a4>
   12ebc:	add	sp, sp, #20
   12ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ec8:	sub	sp, sp, #20
   12ecc:	mov	ip, #0
   12ed0:	str	ip, [sp, #8]
   12ed4:	mov	ip, #1
   12ed8:	str	ip, [sp, #4]
   12edc:	ldr	ip, [sp, #24]
   12ee0:	str	ip, [sp]
   12ee4:	bl	17c88 <argp_error@@Base+0xd60>
   12ee8:	add	sp, sp, #20
   12eec:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   12ef4:	sub	sp, sp, #20
   12ef8:	mov	ip, #0
   12efc:	str	ip, [sp, #12]
   12f00:	ldr	ip, [sp, #28]
   12f04:	str	ip, [sp, #8]
   12f08:	mov	ip, #1
   12f0c:	str	ip, [sp, #4]
   12f10:	ldr	ip, [sp, #24]
   12f14:	str	ip, [sp]
   12f18:	bl	176cc <argp_error@@Base+0x7a4>
   12f1c:	add	sp, sp, #20
   12f20:	pop	{pc}		; (ldr pc, [sp], #4)
   12f24:	strd	r4, [sp, #-16]!
   12f28:	str	r6, [sp, #8]
   12f2c:	str	lr, [sp, #12]
   12f30:	subs	r4, r0, #0
   12f34:	beq	12fd0 <argp_parse@@Base+0xe9c>
   12f38:	mov	r1, #47	; 0x2f
   12f3c:	mov	r0, r4
   12f40:	bl	11138 <strrchr@plt>
   12f44:	subs	r5, r0, #0
   12f48:	beq	12fa8 <argp_parse@@Base+0xe74>
   12f4c:	add	r6, r5, #1
   12f50:	sub	r3, r6, r4
   12f54:	cmp	r3, #6
   12f58:	ble	12fa8 <argp_parse@@Base+0xe74>
   12f5c:	mov	r2, #7
   12f60:	movw	r1, #35304	; 0x89e8
   12f64:	movt	r1, #1
   12f68:	sub	r0, r5, #6
   12f6c:	bl	111b0 <strncmp@plt>
   12f70:	cmp	r0, #0
   12f74:	bne	12fa8 <argp_parse@@Base+0xe74>
   12f78:	mov	r2, #3
   12f7c:	movw	r1, #35312	; 0x89f0
   12f80:	movt	r1, #1
   12f84:	mov	r0, r6
   12f88:	bl	111b0 <strncmp@plt>
   12f8c:	cmp	r0, #0
   12f90:	movne	r4, r6
   12f94:	bne	12fa8 <argp_parse@@Base+0xe74>
   12f98:	add	r4, r5, #4
   12f9c:	movw	r3, #41552	; 0xa250
   12fa0:	movt	r3, #2
   12fa4:	str	r4, [r3]
   12fa8:	movw	r3, #41596	; 0xa27c
   12fac:	movt	r3, #2
   12fb0:	str	r4, [r3]
   12fb4:	movw	r3, #41556	; 0xa254
   12fb8:	movt	r3, #2
   12fbc:	str	r4, [r3]
   12fc0:	ldrd	r4, [sp]
   12fc4:	ldr	r6, [sp, #8]
   12fc8:	add	sp, sp, #12
   12fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fd0:	movw	r3, #41560	; 0xa258
   12fd4:	movt	r3, #2
   12fd8:	ldr	r3, [r3]
   12fdc:	mov	r2, #55	; 0x37
   12fe0:	mov	r1, #1
   12fe4:	movw	r0, #35248	; 0x89b0
   12fe8:	movt	r0, #1
   12fec:	bl	11000 <fwrite@plt>
   12ff0:	bl	111bc <abort@plt>
   12ff4:	strd	r4, [sp, #-16]!
   12ff8:	str	r6, [sp, #8]
   12ffc:	str	lr, [sp, #12]
   13000:	sub	sp, sp, #32
   13004:	mov	r4, r0
   13008:	ldr	r5, [sp, #48]	; 0x30
   1300c:	ldr	r6, [sp, #52]	; 0x34
   13010:	cmp	r1, #0
   13014:	beq	130b0 <argp_parse@@Base+0xf7c>
   13018:	str	r3, [sp]
   1301c:	mov	r3, r2
   13020:	mov	r2, r1
   13024:	movw	r1, #35316	; 0x89f4
   13028:	movt	r1, #1
   1302c:	bl	110e4 <fprintf@plt>
   13030:	movw	r3, #2022	; 0x7e6
   13034:	movw	r2, #35336	; 0x8a08
   13038:	movt	r2, #1
   1303c:	movw	r1, #36104	; 0x8d08
   13040:	movt	r1, #1
   13044:	mov	r0, r4
   13048:	bl	110e4 <fprintf@plt>
   1304c:	mov	r1, r4
   13050:	mov	r0, #10
   13054:	bl	11150 <fputc@plt>
   13058:	movw	r2, #35340	; 0x8a0c
   1305c:	movt	r2, #1
   13060:	movw	r1, #35376	; 0x8a30
   13064:	movt	r1, #1
   13068:	mov	r0, r4
   1306c:	bl	110e4 <fprintf@plt>
   13070:	mov	r1, r4
   13074:	mov	r0, #10
   13078:	bl	11150 <fputc@plt>
   1307c:	cmp	r6, #9
   13080:	ldrls	pc, [pc, r6, lsl #2]
   13084:	b	132a8 <argp_parse@@Base+0x1174>
   13088:	ldrdeq	r3, [r1], -r4
   1308c:	andeq	r3, r1, r0, asr #1
   13090:	andeq	r3, r1, r8, ror #1
   13094:	andeq	r3, r1, r4, lsl #2
   13098:	andeq	r3, r1, r8, lsr #2
   1309c:	andeq	r3, r1, r4, asr r1
   130a0:	andeq	r3, r1, r8, lsl #3
   130a4:	andeq	r3, r1, r4, asr #3
   130a8:	andeq	r3, r1, r8, lsl #4
   130ac:	andeq	r3, r1, r4, asr r2
   130b0:	movw	r1, #35328	; 0x8a00
   130b4:	movt	r1, #1
   130b8:	bl	110e4 <fprintf@plt>
   130bc:	b	13030 <argp_parse@@Base+0xefc>
   130c0:	ldr	r2, [r5]
   130c4:	movw	r1, #35548	; 0x8adc
   130c8:	movt	r1, #1
   130cc:	mov	r0, r4
   130d0:	bl	110e4 <fprintf@plt>
   130d4:	add	sp, sp, #32
   130d8:	ldrd	r4, [sp]
   130dc:	ldr	r6, [sp, #8]
   130e0:	add	sp, sp, #12
   130e4:	pop	{pc}		; (ldr pc, [sp], #4)
   130e8:	ldr	r3, [r5, #4]
   130ec:	ldr	r2, [r5]
   130f0:	movw	r1, #35564	; 0x8aec
   130f4:	movt	r1, #1
   130f8:	mov	r0, r4
   130fc:	bl	110e4 <fprintf@plt>
   13100:	b	130d4 <argp_parse@@Base+0xfa0>
   13104:	ldr	r3, [r5, #8]
   13108:	str	r3, [sp]
   1310c:	ldr	r3, [r5, #4]
   13110:	ldr	r2, [r5]
   13114:	movw	r1, #35588	; 0x8b04
   13118:	movt	r1, #1
   1311c:	mov	r0, r4
   13120:	bl	110e4 <fprintf@plt>
   13124:	b	130d4 <argp_parse@@Base+0xfa0>
   13128:	ldr	r3, [r5, #12]
   1312c:	str	r3, [sp, #4]
   13130:	ldr	r3, [r5, #8]
   13134:	str	r3, [sp]
   13138:	ldr	r3, [r5, #4]
   1313c:	ldr	r2, [r5]
   13140:	movw	r1, #35616	; 0x8b20
   13144:	movt	r1, #1
   13148:	mov	r0, r4
   1314c:	bl	110e4 <fprintf@plt>
   13150:	b	130d4 <argp_parse@@Base+0xfa0>
   13154:	ldr	r3, [r5, #16]
   13158:	str	r3, [sp, #8]
   1315c:	ldr	r3, [r5, #12]
   13160:	str	r3, [sp, #4]
   13164:	ldr	r3, [r5, #8]
   13168:	str	r3, [sp]
   1316c:	ldr	r3, [r5, #4]
   13170:	ldr	r2, [r5]
   13174:	movw	r1, #35648	; 0x8b40
   13178:	movt	r1, #1
   1317c:	mov	r0, r4
   13180:	bl	110e4 <fprintf@plt>
   13184:	b	130d4 <argp_parse@@Base+0xfa0>
   13188:	ldr	r3, [r5, #20]
   1318c:	str	r3, [sp, #12]
   13190:	ldr	r3, [r5, #16]
   13194:	str	r3, [sp, #8]
   13198:	ldr	r3, [r5, #12]
   1319c:	str	r3, [sp, #4]
   131a0:	ldr	r3, [r5, #8]
   131a4:	str	r3, [sp]
   131a8:	ldr	r3, [r5, #4]
   131ac:	ldr	r2, [r5]
   131b0:	movw	r1, #35684	; 0x8b64
   131b4:	movt	r1, #1
   131b8:	mov	r0, r4
   131bc:	bl	110e4 <fprintf@plt>
   131c0:	b	130d4 <argp_parse@@Base+0xfa0>
   131c4:	ldr	r3, [r5, #24]
   131c8:	str	r3, [sp, #16]
   131cc:	ldr	r3, [r5, #20]
   131d0:	str	r3, [sp, #12]
   131d4:	ldr	r3, [r5, #16]
   131d8:	str	r3, [sp, #8]
   131dc:	ldr	r3, [r5, #12]
   131e0:	str	r3, [sp, #4]
   131e4:	ldr	r3, [r5, #8]
   131e8:	str	r3, [sp]
   131ec:	ldr	r3, [r5, #4]
   131f0:	ldr	r2, [r5]
   131f4:	movw	r1, #35724	; 0x8b8c
   131f8:	movt	r1, #1
   131fc:	mov	r0, r4
   13200:	bl	110e4 <fprintf@plt>
   13204:	b	130d4 <argp_parse@@Base+0xfa0>
   13208:	ldr	r3, [r5, #28]
   1320c:	str	r3, [sp, #20]
   13210:	ldr	r3, [r5, #24]
   13214:	str	r3, [sp, #16]
   13218:	ldr	r3, [r5, #20]
   1321c:	str	r3, [sp, #12]
   13220:	ldr	r3, [r5, #16]
   13224:	str	r3, [sp, #8]
   13228:	ldr	r3, [r5, #12]
   1322c:	str	r3, [sp, #4]
   13230:	ldr	r3, [r5, #8]
   13234:	str	r3, [sp]
   13238:	ldr	r3, [r5, #4]
   1323c:	ldr	r2, [r5]
   13240:	movw	r1, #35768	; 0x8bb8
   13244:	movt	r1, #1
   13248:	mov	r0, r4
   1324c:	bl	110e4 <fprintf@plt>
   13250:	b	130d4 <argp_parse@@Base+0xfa0>
   13254:	ldr	r3, [r5, #32]
   13258:	str	r3, [sp, #24]
   1325c:	ldr	r3, [r5, #28]
   13260:	str	r3, [sp, #20]
   13264:	ldr	r3, [r5, #24]
   13268:	str	r3, [sp, #16]
   1326c:	ldr	r3, [r5, #20]
   13270:	str	r3, [sp, #12]
   13274:	ldr	r3, [r5, #16]
   13278:	str	r3, [sp, #8]
   1327c:	ldr	r3, [r5, #12]
   13280:	str	r3, [sp, #4]
   13284:	ldr	r3, [r5, #8]
   13288:	str	r3, [sp]
   1328c:	ldr	r3, [r5, #4]
   13290:	ldr	r2, [r5]
   13294:	movw	r1, #35816	; 0x8be8
   13298:	movt	r1, #1
   1329c:	mov	r0, r4
   132a0:	bl	110e4 <fprintf@plt>
   132a4:	b	130d4 <argp_parse@@Base+0xfa0>
   132a8:	ldr	r3, [r5, #32]
   132ac:	str	r3, [sp, #24]
   132b0:	ldr	r3, [r5, #28]
   132b4:	str	r3, [sp, #20]
   132b8:	ldr	r3, [r5, #24]
   132bc:	str	r3, [sp, #16]
   132c0:	ldr	r3, [r5, #20]
   132c4:	str	r3, [sp, #12]
   132c8:	ldr	r3, [r5, #16]
   132cc:	str	r3, [sp, #8]
   132d0:	ldr	r3, [r5, #12]
   132d4:	str	r3, [sp, #4]
   132d8:	ldr	r3, [r5, #8]
   132dc:	str	r3, [sp]
   132e0:	ldr	r3, [r5, #4]
   132e4:	ldr	r2, [r5]
   132e8:	movw	r1, #35868	; 0x8c1c
   132ec:	movt	r1, #1
   132f0:	mov	r0, r4
   132f4:	bl	110e4 <fprintf@plt>
   132f8:	b	130d4 <argp_parse@@Base+0xfa0>
   132fc:	strd	r4, [sp, #-12]!
   13300:	str	lr, [sp, #8]
   13304:	sub	sp, sp, #12
   13308:	ldr	r5, [sp, #24]
   1330c:	ldr	ip, [r5]
   13310:	cmp	ip, #0
   13314:	beq	1334c <argp_parse@@Base+0x1218>
   13318:	mov	lr, r5
   1331c:	mov	ip, #0
   13320:	add	ip, ip, #1
   13324:	ldr	r4, [lr, #4]!
   13328:	cmp	r4, #0
   1332c:	bne	13320 <argp_parse@@Base+0x11ec>
   13330:	str	ip, [sp, #4]
   13334:	str	r5, [sp]
   13338:	bl	12ff4 <argp_parse@@Base+0xec0>
   1333c:	add	sp, sp, #12
   13340:	ldrd	r4, [sp]
   13344:	add	sp, sp, #8
   13348:	pop	{pc}		; (ldr pc, [sp], #4)
   1334c:	mov	ip, #0
   13350:	b	13330 <argp_parse@@Base+0x11fc>
   13354:	strd	r4, [sp, #-12]!
   13358:	str	lr, [sp, #8]
   1335c:	sub	sp, sp, #52	; 0x34
   13360:	ldr	r5, [sp, #64]	; 0x40
   13364:	add	r4, sp, #8
   13368:	mov	ip, #0
   1336c:	ldr	lr, [r5], #4
   13370:	str	lr, [r4], #4
   13374:	cmp	lr, #0
   13378:	beq	13388 <argp_parse@@Base+0x1254>
   1337c:	add	ip, ip, #1
   13380:	cmp	ip, #10
   13384:	bne	1336c <argp_parse@@Base+0x1238>
   13388:	str	ip, [sp, #4]
   1338c:	add	ip, sp, #8
   13390:	str	ip, [sp]
   13394:	bl	12ff4 <argp_parse@@Base+0xec0>
   13398:	add	sp, sp, #52	; 0x34
   1339c:	ldrd	r4, [sp]
   133a0:	add	sp, sp, #8
   133a4:	pop	{pc}		; (ldr pc, [sp], #4)
   133a8:	push	{r3}		; (str r3, [sp, #-4]!)
   133ac:	push	{lr}		; (str lr, [sp, #-4]!)
   133b0:	sub	sp, sp, #16
   133b4:	add	r3, sp, #24
   133b8:	str	r3, [sp, #12]
   133bc:	str	r3, [sp]
   133c0:	ldr	r3, [sp, #20]
   133c4:	bl	13354 <argp_parse@@Base+0x1220>
   133c8:	add	sp, sp, #16
   133cc:	pop	{lr}		; (ldr lr, [sp], #4)
   133d0:	add	sp, sp, #4
   133d4:	bx	lr
   133d8:	str	r4, [sp, #-8]!
   133dc:	str	lr, [sp, #4]
   133e0:	movw	r3, #41564	; 0xa25c
   133e4:	movt	r3, #2
   133e8:	ldr	r1, [r3]
   133ec:	mov	r0, #10
   133f0:	bl	11150 <fputc@plt>
   133f4:	movw	r1, #35928	; 0x8c58
   133f8:	movt	r1, #1
   133fc:	movw	r0, #35952	; 0x8c70
   13400:	movt	r0, #1
   13404:	bl	10f58 <printf@plt>
   13408:	movw	r2, #35972	; 0x8c84
   1340c:	movt	r2, #1
   13410:	movw	r1, #35232	; 0x89a0
   13414:	movt	r1, #1
   13418:	movw	r0, #36012	; 0x8cac
   1341c:	movt	r0, #1
   13420:	bl	10f58 <printf@plt>
   13424:	movw	r1, #36032	; 0x8cc0
   13428:	movt	r1, #1
   1342c:	movw	r0, #36064	; 0x8ce0
   13430:	movt	r0, #1
   13434:	bl	10f58 <printf@plt>
   13438:	ldr	r4, [sp]
   1343c:	add	sp, sp, #4
   13440:	pop	{pc}		; (ldr pc, [sp], #4)
   13444:	str	r4, [sp, #-8]!
   13448:	str	lr, [sp, #4]
   1344c:	bl	13ba4 <argp_parse@@Base+0x1a70>
   13450:	cmp	r0, #0
   13454:	beq	13464 <argp_parse@@Base+0x1330>
   13458:	ldr	r4, [sp]
   1345c:	add	sp, sp, #4
   13460:	pop	{pc}		; (ldr pc, [sp], #4)
   13464:	bl	138d8 <argp_parse@@Base+0x17a4>
   13468:	str	r4, [sp, #-8]!
   1346c:	str	lr, [sp, #4]
   13470:	bl	13ba4 <argp_parse@@Base+0x1a70>
   13474:	cmp	r0, #0
   13478:	beq	13488 <argp_parse@@Base+0x1354>
   1347c:	ldr	r4, [sp]
   13480:	add	sp, sp, #4
   13484:	pop	{pc}		; (ldr pc, [sp], #4)
   13488:	bl	138d8 <argp_parse@@Base+0x17a4>
   1348c:	str	r4, [sp, #-8]!
   13490:	str	lr, [sp, #4]
   13494:	bl	13444 <argp_parse@@Base+0x1310>
   13498:	ldr	r4, [sp]
   1349c:	add	sp, sp, #4
   134a0:	pop	{pc}		; (ldr pc, [sp], #4)
   134a4:	strd	r4, [sp, #-16]!
   134a8:	str	r6, [sp, #8]
   134ac:	str	lr, [sp, #12]
   134b0:	mov	r5, r0
   134b4:	mov	r4, r1
   134b8:	bl	13be0 <argp_parse@@Base+0x1aac>
   134bc:	cmp	r0, #0
   134c0:	beq	134d4 <argp_parse@@Base+0x13a0>
   134c4:	ldrd	r4, [sp]
   134c8:	ldr	r6, [sp, #8]
   134cc:	add	sp, sp, #12
   134d0:	pop	{pc}		; (ldr pc, [sp], #4)
   134d4:	adds	r4, r4, #0
   134d8:	movne	r4, #1
   134dc:	cmp	r5, #0
   134e0:	moveq	r4, #1
   134e4:	cmp	r4, #0
   134e8:	beq	134c4 <argp_parse@@Base+0x1390>
   134ec:	bl	138d8 <argp_parse@@Base+0x17a4>
   134f0:	str	r4, [sp, #-8]!
   134f4:	str	lr, [sp, #4]
   134f8:	cmp	r1, #0
   134fc:	orreq	r1, r1, #1
   13500:	bl	13be0 <argp_parse@@Base+0x1aac>
   13504:	cmp	r0, #0
   13508:	beq	13518 <argp_parse@@Base+0x13e4>
   1350c:	ldr	r4, [sp]
   13510:	add	sp, sp, #4
   13514:	pop	{pc}		; (ldr pc, [sp], #4)
   13518:	bl	138d8 <argp_parse@@Base+0x17a4>
   1351c:	strd	r4, [sp, #-16]!
   13520:	str	r6, [sp, #8]
   13524:	str	lr, [sp, #12]
   13528:	mov	r4, r0
   1352c:	mov	r6, r1
   13530:	mov	r5, r2
   13534:	bl	17d2c <argp_error@@Base+0xe04>
   13538:	cmp	r0, #0
   1353c:	beq	13550 <argp_parse@@Base+0x141c>
   13540:	ldrd	r4, [sp]
   13544:	ldr	r6, [sp, #8]
   13548:	add	sp, sp, #12
   1354c:	pop	{pc}		; (ldr pc, [sp], #4)
   13550:	cmp	r4, #0
   13554:	beq	13564 <argp_parse@@Base+0x1430>
   13558:	cmp	r6, #0
   1355c:	cmpne	r5, #0
   13560:	beq	13540 <argp_parse@@Base+0x140c>
   13564:	bl	138d8 <argp_parse@@Base+0x17a4>
   13568:	str	r4, [sp, #-8]!
   1356c:	str	lr, [sp, #4]
   13570:	bl	1351c <argp_parse@@Base+0x13e8>
   13574:	ldr	r4, [sp]
   13578:	add	sp, sp, #4
   1357c:	pop	{pc}		; (ldr pc, [sp], #4)
   13580:	str	r4, [sp, #-8]!
   13584:	str	lr, [sp, #4]
   13588:	mov	ip, r1
   1358c:	mov	r3, r2
   13590:	cmp	r2, #0
   13594:	cmpne	r1, #0
   13598:	moveq	r3, #1
   1359c:	moveq	ip, r3
   135a0:	mov	r2, r3
   135a4:	mov	r1, ip
   135a8:	bl	17d2c <argp_error@@Base+0xe04>
   135ac:	cmp	r0, #0
   135b0:	beq	135c0 <argp_parse@@Base+0x148c>
   135b4:	ldr	r4, [sp]
   135b8:	add	sp, sp, #4
   135bc:	pop	{pc}		; (ldr pc, [sp], #4)
   135c0:	bl	138d8 <argp_parse@@Base+0x17a4>
   135c4:	str	r4, [sp, #-8]!
   135c8:	str	lr, [sp, #4]
   135cc:	mov	r2, r1
   135d0:	mov	r1, r0
   135d4:	mov	r0, #0
   135d8:	bl	1351c <argp_parse@@Base+0x13e8>
   135dc:	ldr	r4, [sp]
   135e0:	add	sp, sp, #4
   135e4:	pop	{pc}		; (ldr pc, [sp], #4)
   135e8:	str	r4, [sp, #-8]!
   135ec:	str	lr, [sp, #4]
   135f0:	mov	r2, r1
   135f4:	mov	r1, r0
   135f8:	mov	r0, #0
   135fc:	bl	13580 <argp_parse@@Base+0x144c>
   13600:	ldr	r4, [sp]
   13604:	add	sp, sp, #4
   13608:	pop	{pc}		; (ldr pc, [sp], #4)
   1360c:	strd	r4, [sp, #-16]!
   13610:	str	r6, [sp, #8]
   13614:	str	lr, [sp, #12]
   13618:	mov	r5, r1
   1361c:	ldr	r4, [r1]
   13620:	cmp	r0, #0
   13624:	beq	13654 <argp_parse@@Base+0x1520>
   13628:	lsr	r3, r4, #1
   1362c:	add	r3, r3, #1
   13630:	adds	r4, r4, r3
   13634:	bcs	13670 <argp_parse@@Base+0x153c>
   13638:	mov	r1, r4
   1363c:	bl	1351c <argp_parse@@Base+0x13e8>
   13640:	str	r4, [r5]
   13644:	ldrd	r4, [sp]
   13648:	ldr	r6, [sp, #8]
   1364c:	add	sp, sp, #12
   13650:	pop	{pc}		; (ldr pc, [sp], #4)
   13654:	cmp	r4, #0
   13658:	bne	13638 <argp_parse@@Base+0x1504>
   1365c:	mov	r4, #64	; 0x40
   13660:	udiv	r4, r4, r2
   13664:	cmp	r2, #64	; 0x40
   13668:	addhi	r4, r4, #1
   1366c:	b	13638 <argp_parse@@Base+0x1504>
   13670:	bl	138d8 <argp_parse@@Base+0x17a4>
   13674:	str	r4, [sp, #-8]!
   13678:	str	lr, [sp, #4]
   1367c:	mov	r2, #1
   13680:	bl	1360c <argp_parse@@Base+0x14d8>
   13684:	ldr	r4, [sp]
   13688:	add	sp, sp, #4
   1368c:	pop	{pc}		; (ldr pc, [sp], #4)
   13690:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13694:	strd	r6, [sp, #8]
   13698:	str	r8, [sp, #16]
   1369c:	str	lr, [sp, #20]
   136a0:	mov	r5, r1
   136a4:	ldr	lr, [sp, #24]
   136a8:	ldr	ip, [r1]
   136ac:	asr	r4, ip, #1
   136b0:	adds	r4, ip, r4
   136b4:	movvs	r1, #1
   136b8:	movvc	r1, #0
   136bc:	cmp	r1, #0
   136c0:	mvnne	r4, #-2147483648	; 0x80000000
   136c4:	mvn	r8, r3
   136c8:	lsr	r8, r8, #31
   136cc:	cmp	r3, r4
   136d0:	movge	r1, #0
   136d4:	andlt	r1, r8, #1
   136d8:	cmp	r1, #0
   136dc:	movne	r4, r3
   136e0:	smull	r6, r7, r4, lr
   136e4:	asr	r1, r6, #31
   136e8:	cmp	r1, r7
   136ec:	bne	13704 <argp_parse@@Base+0x15d0>
   136f0:	mov	r1, r6
   136f4:	cmp	r6, #63	; 0x3f
   136f8:	movle	r1, #64	; 0x40
   136fc:	ble	13708 <argp_parse@@Base+0x15d4>
   13700:	b	13714 <argp_parse@@Base+0x15e0>
   13704:	mvn	r1, #-2147483648	; 0x80000000
   13708:	sdiv	r4, r1, lr
   1370c:	mls	r6, lr, r4, r1
   13710:	sub	r1, r1, r6
   13714:	cmp	r0, #0
   13718:	moveq	r6, #0
   1371c:	streq	r6, [r5]
   13720:	sub	r6, r4, ip
   13724:	cmp	r6, r2
   13728:	bge	13760 <argp_parse@@Base+0x162c>
   1372c:	adds	r2, ip, r2
   13730:	mov	r4, r2
   13734:	bvs	1377c <argp_parse@@Base+0x1648>
   13738:	cmp	r2, r3
   1373c:	movle	r3, #0
   13740:	andgt	r3, r8, #1
   13744:	cmp	r3, #0
   13748:	bne	1377c <argp_parse@@Base+0x1648>
   1374c:	smull	r2, r3, r2, lr
   13750:	asr	ip, r2, #31
   13754:	mov	r1, r2
   13758:	cmp	ip, r3
   1375c:	bne	1377c <argp_parse@@Base+0x1648>
   13760:	bl	134a4 <argp_parse@@Base+0x1370>
   13764:	str	r4, [r5]
   13768:	ldrd	r4, [sp]
   1376c:	ldrd	r6, [sp, #8]
   13770:	ldr	r8, [sp, #16]
   13774:	add	sp, sp, #20
   13778:	pop	{pc}		; (ldr pc, [sp], #4)
   1377c:	bl	138d8 <argp_parse@@Base+0x17a4>
   13780:	str	r4, [sp, #-8]!
   13784:	str	lr, [sp, #4]
   13788:	bl	13b30 <argp_parse@@Base+0x19fc>
   1378c:	cmp	r0, #0
   13790:	beq	137a0 <argp_parse@@Base+0x166c>
   13794:	ldr	r4, [sp]
   13798:	add	sp, sp, #4
   1379c:	pop	{pc}		; (ldr pc, [sp], #4)
   137a0:	bl	138d8 <argp_parse@@Base+0x17a4>
   137a4:	str	r4, [sp, #-8]!
   137a8:	str	lr, [sp, #4]
   137ac:	mov	r1, #1
   137b0:	bl	13780 <argp_parse@@Base+0x164c>
   137b4:	ldr	r4, [sp]
   137b8:	add	sp, sp, #4
   137bc:	pop	{pc}		; (ldr pc, [sp], #4)
   137c0:	str	r4, [sp, #-8]!
   137c4:	str	lr, [sp, #4]
   137c8:	bl	13b30 <argp_parse@@Base+0x19fc>
   137cc:	cmp	r0, #0
   137d0:	beq	137e0 <argp_parse@@Base+0x16ac>
   137d4:	ldr	r4, [sp]
   137d8:	add	sp, sp, #4
   137dc:	pop	{pc}		; (ldr pc, [sp], #4)
   137e0:	bl	138d8 <argp_parse@@Base+0x17a4>
   137e4:	str	r4, [sp, #-8]!
   137e8:	str	lr, [sp, #4]
   137ec:	mov	r1, #1
   137f0:	bl	137c0 <argp_parse@@Base+0x168c>
   137f4:	ldr	r4, [sp]
   137f8:	add	sp, sp, #4
   137fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13800:	strd	r4, [sp, #-16]!
   13804:	str	r6, [sp, #8]
   13808:	str	lr, [sp, #12]
   1380c:	mov	r5, r0
   13810:	mov	r4, r1
   13814:	mov	r0, r1
   13818:	bl	13444 <argp_parse@@Base+0x1310>
   1381c:	mov	r2, r4
   13820:	mov	r1, r5
   13824:	bl	10fa0 <memcpy@plt>
   13828:	ldrd	r4, [sp]
   1382c:	ldr	r6, [sp, #8]
   13830:	add	sp, sp, #12
   13834:	pop	{pc}		; (ldr pc, [sp], #4)
   13838:	strd	r4, [sp, #-16]!
   1383c:	str	r6, [sp, #8]
   13840:	str	lr, [sp, #12]
   13844:	mov	r5, r0
   13848:	mov	r4, r1
   1384c:	mov	r0, r1
   13850:	bl	13468 <argp_parse@@Base+0x1334>
   13854:	mov	r2, r4
   13858:	mov	r1, r5
   1385c:	bl	10fa0 <memcpy@plt>
   13860:	ldrd	r4, [sp]
   13864:	ldr	r6, [sp, #8]
   13868:	add	sp, sp, #12
   1386c:	pop	{pc}		; (ldr pc, [sp], #4)
   13870:	strd	r4, [sp, #-16]!
   13874:	str	r6, [sp, #8]
   13878:	str	lr, [sp, #12]
   1387c:	mov	r5, r0
   13880:	mov	r4, r1
   13884:	add	r0, r1, #1
   13888:	bl	13468 <argp_parse@@Base+0x1334>
   1388c:	mov	r2, #0
   13890:	strb	r2, [r0, r4]
   13894:	mov	r2, r4
   13898:	mov	r1, r5
   1389c:	bl	10fa0 <memcpy@plt>
   138a0:	ldrd	r4, [sp]
   138a4:	ldr	r6, [sp, #8]
   138a8:	add	sp, sp, #12
   138ac:	pop	{pc}		; (ldr pc, [sp], #4)
   138b0:	str	r4, [sp, #-8]!
   138b4:	str	lr, [sp, #4]
   138b8:	mov	r4, r0
   138bc:	bl	110cc <strlen@plt>
   138c0:	add	r1, r0, #1
   138c4:	mov	r0, r4
   138c8:	bl	13800 <argp_parse@@Base+0x16cc>
   138cc:	ldr	r4, [sp]
   138d0:	add	sp, sp, #4
   138d4:	pop	{pc}		; (ldr pc, [sp], #4)
   138d8:	str	r4, [sp, #-8]!
   138dc:	str	lr, [sp, #4]
   138e0:	movw	r3, #41532	; 0xa23c
   138e4:	movt	r3, #2
   138e8:	ldr	r0, [r3]
   138ec:	movw	r3, #36152	; 0x8d38
   138f0:	movt	r3, #1
   138f4:	movw	r2, #34344	; 0x8628
   138f8:	movt	r2, #1
   138fc:	mov	r1, #0
   13900:	bl	11018 <error@plt>
   13904:	bl	111bc <abort@plt>
   13908:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1390c:	strd	r6, [sp, #8]
   13910:	strd	r8, [sp, #16]
   13914:	str	lr, [sp, #24]
   13918:	sub	sp, sp, #116	; 0x74
   1391c:	mov	r3, #100	; 0x64
   13920:	str	r3, [sp, #8]
   13924:	bl	110f0 <__errno_location@plt>
   13928:	mov	r6, r0
   1392c:	mov	r9, #0
   13930:	add	r8, sp, #12
   13934:	mov	r5, r9
   13938:	mov	r7, #1
   1393c:	b	139d4 <argp_parse@@Base+0x18a0>
   13940:	cmp	r9, #0
   13944:	beq	13964 <argp_parse@@Base+0x1830>
   13948:	mov	r0, r9
   1394c:	add	sp, sp, #116	; 0x74
   13950:	ldrd	r4, [sp]
   13954:	ldrd	r6, [sp, #8]
   13958:	ldrd	r8, [sp, #16]
   1395c:	add	sp, sp, #24
   13960:	pop	{pc}		; (ldr pc, [sp], #4)
   13964:	mov	r1, r0
   13968:	mov	r0, r8
   1396c:	bl	13838 <argp_parse@@Base+0x1704>
   13970:	mov	r9, r0
   13974:	b	13948 <argp_parse@@Base+0x1814>
   13978:	mov	r0, r9
   1397c:	bl	12e0c <argp_parse@@Base+0xcd8>
   13980:	ldr	r2, [r6]
   13984:	subs	r3, r2, #36	; 0x24
   13988:	movne	r3, #1
   1398c:	cmp	r2, #0
   13990:	moveq	r3, #0
   13994:	cmp	r2, #22
   13998:	moveq	r3, #0
   1399c:	andne	r3, r3, #1
   139a0:	cmp	r2, #12
   139a4:	moveq	r3, #0
   139a8:	andne	r3, r3, #1
   139ac:	cmp	r3, #0
   139b0:	bne	13a14 <argp_parse@@Base+0x18e0>
   139b4:	str	r7, [sp]
   139b8:	mvn	r3, #0
   139bc:	mov	r2, r7
   139c0:	add	r1, sp, #8
   139c4:	mov	r0, r5
   139c8:	bl	13690 <argp_parse@@Base+0x155c>
   139cc:	mov	r9, r0
   139d0:	mov	r8, r0
   139d4:	ldr	r4, [sp, #8]
   139d8:	sub	r4, r4, #1
   139dc:	strb	r5, [r8, r4]
   139e0:	str	r5, [r6]
   139e4:	mov	r1, r4
   139e8:	mov	r0, r8
   139ec:	bl	10fc4 <getdomainname@plt>
   139f0:	cmp	r0, #0
   139f4:	bne	13978 <argp_parse@@Base+0x1844>
   139f8:	mov	r0, r8
   139fc:	bl	110cc <strlen@plt>
   13a00:	add	r0, r0, #1
   13a04:	cmp	r4, r0
   13a08:	bgt	13940 <argp_parse@@Base+0x180c>
   13a0c:	str	r5, [r6]
   13a10:	b	13978 <argp_parse@@Base+0x1844>
   13a14:	mov	r9, #0
   13a18:	b	13948 <argp_parse@@Base+0x1814>
   13a1c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13a20:	strd	r6, [sp, #8]
   13a24:	strd	r8, [sp, #16]
   13a28:	str	lr, [sp, #24]
   13a2c:	sub	sp, sp, #116	; 0x74
   13a30:	mov	r3, #100	; 0x64
   13a34:	str	r3, [sp, #8]
   13a38:	bl	110f0 <__errno_location@plt>
   13a3c:	mov	r6, r0
   13a40:	mov	r9, #0
   13a44:	add	r8, sp, #12
   13a48:	mov	r5, r9
   13a4c:	mov	r7, #1
   13a50:	b	13ae8 <argp_parse@@Base+0x19b4>
   13a54:	cmp	r9, #0
   13a58:	beq	13a78 <argp_parse@@Base+0x1944>
   13a5c:	mov	r0, r9
   13a60:	add	sp, sp, #116	; 0x74
   13a64:	ldrd	r4, [sp]
   13a68:	ldrd	r6, [sp, #8]
   13a6c:	ldrd	r8, [sp, #16]
   13a70:	add	sp, sp, #24
   13a74:	pop	{pc}		; (ldr pc, [sp], #4)
   13a78:	mov	r1, r0
   13a7c:	mov	r0, r8
   13a80:	bl	13838 <argp_parse@@Base+0x1704>
   13a84:	mov	r9, r0
   13a88:	b	13a5c <argp_parse@@Base+0x1928>
   13a8c:	mov	r0, r9
   13a90:	bl	12e0c <argp_parse@@Base+0xcd8>
   13a94:	ldr	r2, [r6]
   13a98:	subs	r3, r2, #36	; 0x24
   13a9c:	movne	r3, #1
   13aa0:	cmp	r2, #0
   13aa4:	moveq	r3, #0
   13aa8:	cmp	r2, #22
   13aac:	moveq	r3, #0
   13ab0:	andne	r3, r3, #1
   13ab4:	cmp	r2, #12
   13ab8:	moveq	r3, #0
   13abc:	andne	r3, r3, #1
   13ac0:	cmp	r3, #0
   13ac4:	bne	13b28 <argp_parse@@Base+0x19f4>
   13ac8:	str	r7, [sp]
   13acc:	mvn	r3, #0
   13ad0:	mov	r2, r7
   13ad4:	add	r1, sp, #8
   13ad8:	mov	r0, r5
   13adc:	bl	13690 <argp_parse@@Base+0x155c>
   13ae0:	mov	r9, r0
   13ae4:	mov	r8, r0
   13ae8:	ldr	r4, [sp, #8]
   13aec:	sub	r4, r4, #1
   13af0:	strb	r5, [r8, r4]
   13af4:	str	r5, [r6]
   13af8:	mov	r1, r4
   13afc:	mov	r0, r8
   13b00:	bl	11024 <gethostname@plt>
   13b04:	cmp	r0, #0
   13b08:	bne	13a8c <argp_parse@@Base+0x1958>
   13b0c:	mov	r0, r8
   13b10:	bl	110cc <strlen@plt>
   13b14:	add	r0, r0, #1
   13b18:	cmp	r4, r0
   13b1c:	bgt	13a54 <argp_parse@@Base+0x1920>
   13b20:	str	r5, [r6]
   13b24:	b	13a8c <argp_parse@@Base+0x1958>
   13b28:	mov	r9, #0
   13b2c:	b	13a5c <argp_parse@@Base+0x1928>
   13b30:	strd	r4, [sp, #-16]!
   13b34:	str	r6, [sp, #8]
   13b38:	str	lr, [sp, #12]
   13b3c:	cmp	r1, #0
   13b40:	cmpne	r0, #0
   13b44:	beq	13b80 <argp_parse@@Base+0x1a4c>
   13b48:	mov	r2, r0
   13b4c:	mov	r3, r1
   13b50:	umull	r4, r5, r0, r1
   13b54:	adds	r1, r5, #0
   13b58:	movne	r1, #1
   13b5c:	cmp	r4, #0
   13b60:	movlt	r1, #1
   13b64:	cmp	r1, #0
   13b68:	beq	13b88 <argp_parse@@Base+0x1a54>
   13b6c:	bl	110f0 <__errno_location@plt>
   13b70:	mov	r3, #12
   13b74:	str	r3, [r0]
   13b78:	mov	r0, #0
   13b7c:	b	13b94 <argp_parse@@Base+0x1a60>
   13b80:	mov	r3, #1
   13b84:	mov	r2, r3
   13b88:	mov	r1, r3
   13b8c:	mov	r0, r2
   13b90:	bl	10f1c <calloc@plt>
   13b94:	ldrd	r4, [sp]
   13b98:	ldr	r6, [sp, #8]
   13b9c:	add	sp, sp, #12
   13ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ba4:	str	r4, [sp, #-8]!
   13ba8:	str	lr, [sp, #4]
   13bac:	cmp	r0, #0
   13bb0:	beq	13bcc <argp_parse@@Base+0x1a98>
   13bb4:	bge	13bd0 <argp_parse@@Base+0x1a9c>
   13bb8:	bl	110f0 <__errno_location@plt>
   13bbc:	mov	r3, #12
   13bc0:	str	r3, [r0]
   13bc4:	mov	r0, #0
   13bc8:	b	13bd4 <argp_parse@@Base+0x1aa0>
   13bcc:	mov	r0, #1
   13bd0:	bl	11048 <malloc@plt>
   13bd4:	ldr	r4, [sp]
   13bd8:	add	sp, sp, #4
   13bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13be0:	str	r4, [sp, #-8]!
   13be4:	str	lr, [sp, #4]
   13be8:	cmp	r0, #0
   13bec:	beq	13c10 <argp_parse@@Base+0x1adc>
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c1c <argp_parse@@Base+0x1ae8>
   13bf8:	cmp	r1, #0
   13bfc:	blt	13c28 <argp_parse@@Base+0x1af4>
   13c00:	bl	10fdc <realloc@plt>
   13c04:	ldr	r4, [sp]
   13c08:	add	sp, sp, #4
   13c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c10:	mov	r0, r1
   13c14:	bl	13ba4 <argp_parse@@Base+0x1a70>
   13c18:	b	13c04 <argp_parse@@Base+0x1ad0>
   13c1c:	bl	12e0c <argp_parse@@Base+0xcd8>
   13c20:	mov	r0, #0
   13c24:	b	13c04 <argp_parse@@Base+0x1ad0>
   13c28:	bl	110f0 <__errno_location@plt>
   13c2c:	mov	r3, #12
   13c30:	str	r3, [r0]
   13c34:	mov	r0, #0
   13c38:	b	13c04 <argp_parse@@Base+0x1ad0>
   13c3c:	ldr	r3, [r0]
   13c40:	ldr	r2, [r0, #4]
   13c44:	cmp	r2, #0
   13c48:	beq	13c84 <argp_parse@@Base+0x1b50>
   13c4c:	add	r3, r3, #24
   13c50:	b	13c60 <argp_parse@@Base+0x1b2c>
   13c54:	add	r3, r3, #24
   13c58:	subs	r2, r2, #1
   13c5c:	beq	13c7c <argp_parse@@Base+0x1b48>
   13c60:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13c64:	cmp	r0, #0
   13c68:	beq	13c54 <argp_parse@@Base+0x1b20>
   13c6c:	ldr	r1, [r3, #-12]
   13c70:	tst	r1, #2
   13c74:	bne	13c54 <argp_parse@@Base+0x1b20>
   13c78:	bx	lr
   13c7c:	mov	r0, #0
   13c80:	bx	lr
   13c84:	mov	r0, #0
   13c88:	b	13c78 <argp_parse@@Base+0x1b44>
   13c8c:	ldr	r2, [r0, #8]
   13c90:	cmp	r2, #0
   13c94:	beq	13ca0 <argp_parse@@Base+0x1b6c>
   13c98:	mov	r0, #0
   13c9c:	bx	lr
   13ca0:	ldr	r2, [r1, #8]
   13ca4:	cmp	r2, #0
   13ca8:	bne	13c98 <argp_parse@@Base+0x1b64>
   13cac:	ldr	r2, [r0, #12]
   13cb0:	ldr	r1, [r1, #12]
   13cb4:	orr	r2, r2, r1
   13cb8:	tst	r2, #16
   13cbc:	bne	13c98 <argp_parse@@Base+0x1b64>
   13cc0:	ldr	r1, [r0, #4]
   13cc4:	ldr	r2, [r3]
   13cc8:	add	r0, r2, #1
   13ccc:	str	r0, [r3]
   13cd0:	strb	r1, [r2]
   13cd4:	b	13c98 <argp_parse@@Base+0x1b64>
   13cd8:	str	r4, [sp, #-8]!
   13cdc:	str	lr, [sp, #4]
   13ce0:	mov	r4, r0
   13ce4:	bl	110a8 <__ctype_b_loc@plt>
   13ce8:	ldr	r3, [r4]
   13cec:	ldrb	r2, [r3]
   13cf0:	ldr	ip, [r0]
   13cf4:	lsl	r1, r2, #1
   13cf8:	ldrh	r1, [ip, r1]
   13cfc:	tst	r1, #8192	; 0x2000
   13d00:	beq	13d10 <argp_parse@@Base+0x1bdc>
   13d04:	add	r3, r3, #1
   13d08:	str	r3, [r4]
   13d0c:	b	13ce8 <argp_parse@@Base+0x1bb4>
   13d10:	subs	ip, r2, #45	; 0x2d
   13d14:	movne	ip, #1
   13d18:	cmp	r2, #0
   13d1c:	beq	13d50 <argp_parse@@Base+0x1c1c>
   13d20:	tst	r1, #8
   13d24:	bne	13d50 <argp_parse@@Base+0x1c1c>
   13d28:	add	r3, r3, #1
   13d2c:	str	r3, [r4]
   13d30:	ldrb	r2, [r3]
   13d34:	cmp	r2, #0
   13d38:	beq	13d50 <argp_parse@@Base+0x1c1c>
   13d3c:	ldr	r1, [r0]
   13d40:	lsl	r2, r2, #1
   13d44:	ldrh	r2, [r1, r2]
   13d48:	tst	r2, #8
   13d4c:	beq	13d28 <argp_parse@@Base+0x1bf4>
   13d50:	mov	r0, ip
   13d54:	ldr	r4, [sp]
   13d58:	add	sp, sp, #4
   13d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d60:	strd	r4, [sp, #-16]!
   13d64:	str	r6, [sp, #8]
   13d68:	str	lr, [sp, #12]
   13d6c:	mov	r5, r0
   13d70:	ldr	r0, [r0, #12]
   13d74:	cmp	r0, #0
   13d78:	beq	13d90 <argp_parse@@Base+0x1c5c>
   13d7c:	ldr	r4, [r0, #24]
   13d80:	bl	12e0c <argp_parse@@Base+0xcd8>
   13d84:	mov	r0, r4
   13d88:	cmp	r4, #0
   13d8c:	bne	13d7c <argp_parse@@Base+0x1c48>
   13d90:	ldr	r3, [r5, #4]
   13d94:	cmp	r3, #0
   13d98:	bne	13db4 <argp_parse@@Base+0x1c80>
   13d9c:	mov	r0, r5
   13da0:	bl	12e0c <argp_parse@@Base+0xcd8>
   13da4:	ldrd	r4, [sp]
   13da8:	ldr	r6, [sp, #8]
   13dac:	add	sp, sp, #12
   13db0:	pop	{pc}		; (ldr pc, [sp], #4)
   13db4:	ldr	r0, [r5]
   13db8:	bl	12e0c <argp_parse@@Base+0xcd8>
   13dbc:	ldr	r0, [r5, #8]
   13dc0:	bl	12e0c <argp_parse@@Base+0xcd8>
   13dc4:	b	13d9c <argp_parse@@Base+0x1c68>
   13dc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13dcc:	strd	r6, [sp, #8]
   13dd0:	str	r8, [sp, #16]
   13dd4:	str	lr, [sp, #20]
   13dd8:	mov	r6, r1
   13ddc:	ldr	r7, [r0]
   13de0:	ldr	r3, [r0, #4]
   13de4:	sub	r8, r3, #1
   13de8:	cmp	r3, #0
   13dec:	bne	13e58 <argp_parse@@Base+0x1d24>
   13df0:	mov	r7, #0
   13df4:	b	13e30 <argp_parse@@Base+0x1cfc>
   13df8:	sub	r5, r5, #1
   13dfc:	add	r4, r4, #24
   13e00:	cmn	r5, #1
   13e04:	beq	13e48 <argp_parse@@Base+0x1d14>
   13e08:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13e0c:	cmp	r0, #0
   13e10:	beq	13df8 <argp_parse@@Base+0x1cc4>
   13e14:	ldr	r3, [r4, #-12]
   13e18:	tst	r3, #2
   13e1c:	bne	13df8 <argp_parse@@Base+0x1cc4>
   13e20:	mov	r1, r6
   13e24:	bl	10f40 <strcmp@plt>
   13e28:	cmp	r0, #0
   13e2c:	bne	13df8 <argp_parse@@Base+0x1cc4>
   13e30:	mov	r0, r7
   13e34:	ldrd	r4, [sp]
   13e38:	ldrd	r6, [sp, #8]
   13e3c:	ldr	r8, [sp, #16]
   13e40:	add	sp, sp, #20
   13e44:	pop	{pc}		; (ldr pc, [sp], #4)
   13e48:	add	r7, r7, #28
   13e4c:	sub	r8, r8, #1
   13e50:	cmn	r8, #1
   13e54:	beq	13e74 <argp_parse@@Base+0x1d40>
   13e58:	ldr	r4, [r7]
   13e5c:	ldr	r3, [r7, #4]
   13e60:	sub	r5, r3, #1
   13e64:	cmp	r3, #0
   13e68:	beq	13e48 <argp_parse@@Base+0x1d14>
   13e6c:	add	r4, r4, #24
   13e70:	b	13e08 <argp_parse@@Base+0x1cd4>
   13e74:	mov	r7, #0
   13e78:	b	13e30 <argp_parse@@Base+0x1cfc>
   13e7c:	strd	r4, [sp, #-16]!
   13e80:	str	r6, [sp, #8]
   13e84:	str	lr, [sp, #12]
   13e88:	ldr	r4, [r0, #16]
   13e8c:	ldr	r0, [r0, #8]
   13e90:	cmp	r0, #0
   13e94:	moveq	r5, #0
   13e98:	beq	13eac <argp_parse@@Base+0x1d78>
   13e9c:	mov	r1, #10
   13ea0:	bl	110d8 <strchr@plt>
   13ea4:	adds	r5, r0, #0
   13ea8:	movne	r5, #1
   13eac:	cmp	r4, #0
   13eb0:	beq	13ed4 <argp_parse@@Base+0x1da0>
   13eb4:	ldr	r0, [r4]
   13eb8:	cmp	r0, #0
   13ebc:	beq	13ed4 <argp_parse@@Base+0x1da0>
   13ec0:	bl	13e7c <argp_parse@@Base+0x1d48>
   13ec4:	add	r5, r5, r0
   13ec8:	ldr	r0, [r4, #16]!
   13ecc:	cmp	r0, #0
   13ed0:	bne	13ec0 <argp_parse@@Base+0x1d8c>
   13ed4:	mov	r0, r5
   13ed8:	ldrd	r4, [sp]
   13edc:	ldr	r6, [sp, #8]
   13ee0:	add	sp, sp, #12
   13ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ee8:	strd	r4, [sp, #-16]!
   13eec:	str	r6, [sp, #8]
   13ef0:	str	lr, [sp, #12]
   13ef4:	mov	r4, r0
   13ef8:	subs	r5, r2, #0
   13efc:	beq	13f34 <argp_parse@@Base+0x1e00>
   13f00:	mov	r6, r1
   13f04:	ldr	r2, [r5, #20]
   13f08:	cmp	r2, #0
   13f0c:	beq	13f34 <argp_parse@@Base+0x1e00>
   13f10:	mov	r1, r3
   13f14:	mov	r0, r5
   13f18:	bl	12c88 <argp_parse@@Base+0xb54>
   13f1c:	ldr	r3, [r5, #20]
   13f20:	mov	r2, r0
   13f24:	mov	r1, r4
   13f28:	mov	r0, r6
   13f2c:	blx	r3
   13f30:	mov	r4, r0
   13f34:	mov	r0, r4
   13f38:	ldrd	r4, [sp]
   13f3c:	ldr	r6, [sp, #8]
   13f40:	add	sp, sp, #12
   13f44:	pop	{pc}		; (ldr pc, [sp], #4)
   13f48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f4c:	strd	r6, [sp, #8]
   13f50:	strd	r8, [sp, #16]
   13f54:	strd	sl, [sp, #24]
   13f58:	str	lr, [sp, #32]
   13f5c:	sub	sp, sp, #20
   13f60:	ldr	r4, [r0]
   13f64:	ldr	r9, [r0, #8]
   13f68:	ldr	r6, [r0, #4]
   13f6c:	cmp	r6, #0
   13f70:	beq	13fc4 <argp_parse@@Base+0x1e90>
   13f74:	str	r3, [sp, #12]
   13f78:	str	r2, [sp, #8]
   13f7c:	str	r1, [sp, #4]
   13f80:	mov	fp, r4
   13f84:	mov	sl, #0
   13f88:	b	14014 <argp_parse@@Base+0x1ee0>
   13f8c:	and	r3, r5, #4
   13f90:	cmp	r3, #0
   13f94:	moveq	fp, r4
   13f98:	tst	r5, #2
   13f9c:	bne	13fbc <argp_parse@@Base+0x1e88>
   13fa0:	ldr	r3, [sp, #12]
   13fa4:	ldr	r2, [sp, #8]
   13fa8:	mov	r1, fp
   13fac:	mov	r0, r4
   13fb0:	ldr	ip, [sp, #4]
   13fb4:	blx	ip
   13fb8:	mov	r7, r0
   13fbc:	add	r9, r9, #1
   13fc0:	b	13ff4 <argp_parse@@Base+0x1ec0>
   13fc4:	mov	r7, #0
   13fc8:	mov	r0, r7
   13fcc:	add	sp, sp, #20
   13fd0:	ldrd	r4, [sp]
   13fd4:	ldrd	r6, [sp, #8]
   13fd8:	ldrd	r8, [sp, #16]
   13fdc:	ldrd	sl, [sp, #24]
   13fe0:	add	sp, sp, #32
   13fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   13fe8:	ldrb	r3, [r9]
   13fec:	cmp	r3, r8
   13ff0:	beq	13f8c <argp_parse@@Base+0x1e58>
   13ff4:	add	r4, r4, #24
   13ff8:	subs	r6, r6, #1
   13ffc:	movne	r3, #1
   14000:	moveq	r3, #0
   14004:	cmp	r7, #0
   14008:	movne	r3, #0
   1400c:	cmp	r3, #0
   14010:	beq	13fc8 <argp_parse@@Base+0x1e94>
   14014:	ldr	r5, [r4, #12]
   14018:	ands	r7, r5, #8
   1401c:	movne	r7, sl
   14020:	bne	13ff4 <argp_parse@@Base+0x1ec0>
   14024:	ldr	r8, [r4, #4]
   14028:	sub	r3, r8, #1
   1402c:	cmp	r3, #254	; 0xfe
   14030:	bhi	13ff4 <argp_parse@@Base+0x1ec0>
   14034:	bl	110a8 <__ctype_b_loc@plt>
   14038:	ldr	r2, [r0]
   1403c:	lsl	r3, r8, #1
   14040:	ldrh	r3, [r2, r3]
   14044:	tst	r3, #16384	; 0x4000
   14048:	bne	13fe8 <argp_parse@@Base+0x1eb4>
   1404c:	b	13ff4 <argp_parse@@Base+0x1ec0>
   14050:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14054:	strd	r6, [sp, #8]
   14058:	strd	r8, [sp, #16]
   1405c:	strd	sl, [sp, #24]
   14060:	str	lr, [sp, #32]
   14064:	add	fp, sp, #32
   14068:	sub	sp, sp, #20
   1406c:	ldr	r5, [r0, #4]
   14070:	cmp	r5, #0
   14074:	beq	1421c <argp_parse@@Base+0x20e8>
   14078:	str	r1, [fp, #-48]	; 0xffffffd0
   1407c:	mov	r6, r0
   14080:	ldr	r0, [r0, #8]
   14084:	bl	110cc <strlen@plt>
   14088:	add	r3, r0, #8
   1408c:	bic	r3, r3, #7
   14090:	sub	sp, sp, r3
   14094:	mov	r8, sp
   14098:	str	r8, [fp, #-40]	; 0xffffffd8
   1409c:	ldr	r4, [r6]
   140a0:	movw	r7, #15500	; 0x3c8c
   140a4:	movt	r7, #1
   140a8:	ldr	r2, [r4, #20]
   140ac:	sub	r3, fp, #40	; 0x28
   140b0:	ldr	r2, [r2, #24]
   140b4:	mov	r1, r7
   140b8:	mov	r0, r4
   140bc:	bl	13f48 <argp_parse@@Base+0x1e14>
   140c0:	add	r4, r4, #28
   140c4:	subs	r5, r5, #1
   140c8:	bne	140a8 <argp_parse@@Base+0x1f74>
   140cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140d0:	cmp	r3, r8
   140d4:	bhi	14148 <argp_parse@@Base+0x2014>
   140d8:	ldr	r4, [r6]
   140dc:	ldr	r5, [r6, #4]
   140e0:	cmp	r5, #0
   140e4:	beq	1421c <argp_parse@@Base+0x20e8>
   140e8:	movw	r7, #17428	; 0x4414
   140ec:	movt	r7, #1
   140f0:	ldr	r2, [r4, #20]
   140f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   140f8:	ldr	r2, [r2, #24]
   140fc:	mov	r1, r7
   14100:	mov	r0, r4
   14104:	bl	13f48 <argp_parse@@Base+0x1e14>
   14108:	add	r4, r4, #28
   1410c:	subs	r5, r5, #1
   14110:	bne	140f0 <argp_parse@@Base+0x1fbc>
   14114:	ldr	r7, [r6]
   14118:	ldr	r8, [r6, #4]
   1411c:	cmp	r8, #0
   14120:	beq	1421c <argp_parse@@Base+0x20e8>
   14124:	add	r7, r7, #28
   14128:	movw	sl, #36364	; 0x8e0c
   1412c:	movt	sl, #1
   14130:	movw	r9, #36348	; 0x8dfc
   14134:	movt	r9, #1
   14138:	movw	r3, #36376	; 0x8e18
   1413c:	movt	r3, #1
   14140:	str	r3, [fp, #-52]	; 0xffffffcc
   14144:	b	14204 <argp_parse@@Base+0x20d0>
   14148:	add	r2, r3, #1
   1414c:	str	r2, [fp, #-40]	; 0xffffffd8
   14150:	mov	r2, #0
   14154:	strb	r2, [r3]
   14158:	mov	r2, r8
   1415c:	movw	r1, #36340	; 0x8df4
   14160:	movt	r1, #1
   14164:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14168:	bl	18478 <argp_error@@Base+0x1550>
   1416c:	b	140d8 <argp_parse@@Base+0x1fa4>
   14170:	tst	r1, #16
   14174:	bne	141a8 <argp_parse@@Base+0x2074>
   14178:	ldr	r3, [r6, #8]
   1417c:	cmp	r3, #0
   14180:	bne	14194 <argp_parse@@Base+0x2060>
   14184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14188:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1418c:	bl	18478 <argp_error@@Base+0x1550>
   14190:	b	141a8 <argp_parse@@Base+0x2074>
   14194:	tst	r1, #1
   14198:	movne	r1, r9
   1419c:	moveq	r1, sl
   141a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141a4:	bl	18478 <argp_error@@Base+0x1550>
   141a8:	add	r4, r4, #24
   141ac:	subs	r5, r5, #1
   141b0:	beq	141f8 <argp_parse@@Base+0x20c4>
   141b4:	ldr	r2, [r4]
   141b8:	cmp	r2, #0
   141bc:	beq	141a8 <argp_parse@@Base+0x2074>
   141c0:	ldr	r1, [r4, #12]
   141c4:	and	r3, r1, #4
   141c8:	cmp	r3, #0
   141cc:	moveq	r6, r4
   141d0:	tst	r1, #2
   141d4:	bne	141a8 <argp_parse@@Base+0x2074>
   141d8:	ldr	r3, [r4, #8]
   141dc:	ldr	r0, [r6, #12]
   141e0:	orr	r1, r1, r0
   141e4:	cmp	r3, #0
   141e8:	beq	14170 <argp_parse@@Base+0x203c>
   141ec:	tst	r1, #16
   141f0:	beq	14194 <argp_parse@@Base+0x2060>
   141f4:	b	141a8 <argp_parse@@Base+0x2074>
   141f8:	add	r7, r7, #28
   141fc:	subs	r8, r8, #1
   14200:	beq	1421c <argp_parse@@Base+0x20e8>
   14204:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14208:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1420c:	cmp	r5, #0
   14210:	beq	141f8 <argp_parse@@Base+0x20c4>
   14214:	mov	r6, r4
   14218:	b	141b4 <argp_parse@@Base+0x2080>
   1421c:	sub	sp, fp, #32
   14220:	ldrd	r4, [sp]
   14224:	ldrd	r6, [sp, #8]
   14228:	ldrd	r8, [sp, #16]
   1422c:	ldrd	sl, [sp, #24]
   14230:	add	sp, sp, #32
   14234:	pop	{pc}		; (ldr pc, [sp], #4)
   14238:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1423c:	strd	r6, [sp, #8]
   14240:	str	r8, [sp, #16]
   14244:	str	lr, [sp, #20]
   14248:	mov	r4, r0
   1424c:	mov	r5, r1
   14250:	ldr	r3, [r0, #28]
   14254:	ldr	r2, [r0, #24]
   14258:	sub	r3, r3, r2
   1425c:	ldr	r2, [r0, #16]
   14260:	cmp	r3, r2
   14264:	bhi	14280 <argp_parse@@Base+0x214c>
   14268:	ldr	r3, [r4, #20]
   1426c:	cmp	r3, #0
   14270:	subge	r5, r5, r3
   14274:	mov	r6, #32
   14278:	mov	r7, #1
   1427c:	b	1429c <argp_parse@@Base+0x2168>
   14280:	bl	17e00 <argp_error@@Base+0xed8>
   14284:	b	14268 <argp_parse@@Base+0x2134>
   14288:	ldr	r3, [r4, #28]
   1428c:	add	r2, r3, #1
   14290:	str	r2, [r4, #28]
   14294:	strb	r6, [r3]
   14298:	sub	r5, r5, #1
   1429c:	cmp	r5, #0
   142a0:	ble	142cc <argp_parse@@Base+0x2198>
   142a4:	ldr	r2, [r4, #28]
   142a8:	ldr	r3, [r4, #32]
   142ac:	cmp	r2, r3
   142b0:	bcc	14288 <argp_parse@@Base+0x2154>
   142b4:	mov	r1, r7
   142b8:	mov	r0, r4
   142bc:	bl	18378 <argp_error@@Base+0x1450>
   142c0:	cmp	r0, #0
   142c4:	bne	14288 <argp_parse@@Base+0x2154>
   142c8:	b	14298 <argp_parse@@Base+0x2164>
   142cc:	ldrd	r4, [sp]
   142d0:	ldrd	r6, [sp, #8]
   142d4:	ldr	r8, [sp, #16]
   142d8:	add	sp, sp, #20
   142dc:	pop	{pc}		; (ldr pc, [sp], #4)
   142e0:	strd	r4, [sp, #-16]!
   142e4:	str	r6, [sp, #8]
   142e8:	str	lr, [sp, #12]
   142ec:	ldr	r4, [r0, #12]
   142f0:	ands	r4, r4, #8
   142f4:	movne	r4, #0
   142f8:	bne	14328 <argp_parse@@Base+0x21f4>
   142fc:	ldr	r5, [r0, #4]
   14300:	sub	r3, r5, #1
   14304:	cmp	r3, #254	; 0xfe
   14308:	bhi	14328 <argp_parse@@Base+0x21f4>
   1430c:	bl	110a8 <__ctype_b_loc@plt>
   14310:	ldr	r2, [r0]
   14314:	lsl	r3, r5, #1
   14318:	ldrh	r3, [r2, r3]
   1431c:	and	r3, r3, #16384	; 0x4000
   14320:	cmp	r3, #0
   14324:	movne	r4, r5
   14328:	mov	r0, r4
   1432c:	ldrd	r4, [sp]
   14330:	ldr	r6, [sp, #8]
   14334:	add	sp, sp, #12
   14338:	pop	{pc}		; (ldr pc, [sp], #4)
   1433c:	strd	r4, [sp, #-16]!
   14340:	str	r6, [sp, #8]
   14344:	str	lr, [sp, #12]
   14348:	mov	r4, r0
   1434c:	mov	r5, r1
   14350:	ldr	r3, [r0, #28]
   14354:	ldr	r2, [r0, #24]
   14358:	sub	r3, r3, r2
   1435c:	ldr	r2, [r0, #16]
   14360:	cmp	r3, r2
   14364:	bhi	143b4 <argp_parse@@Base+0x2280>
   14368:	ldr	r3, [r4, #20]
   1436c:	cmp	r3, #0
   14370:	addge	r5, r5, r3
   14374:	ldr	r3, [r4, #8]
   14378:	cmp	r5, r3
   1437c:	bcc	143d4 <argp_parse@@Base+0x22a0>
   14380:	ldr	r2, [r4, #28]
   14384:	ldr	r3, [r4, #32]
   14388:	cmp	r2, r3
   1438c:	bcs	143bc <argp_parse@@Base+0x2288>
   14390:	ldr	r3, [r4, #28]
   14394:	add	r2, r3, #1
   14398:	str	r2, [r4, #28]
   1439c:	mov	r2, #10
   143a0:	strb	r2, [r3]
   143a4:	ldrd	r4, [sp]
   143a8:	ldr	r6, [sp, #8]
   143ac:	add	sp, sp, #12
   143b0:	pop	{pc}		; (ldr pc, [sp], #4)
   143b4:	bl	17e00 <argp_error@@Base+0xed8>
   143b8:	b	14368 <argp_parse@@Base+0x2234>
   143bc:	mov	r1, #1
   143c0:	mov	r0, r4
   143c4:	bl	18378 <argp_error@@Base+0x1450>
   143c8:	cmp	r0, #0
   143cc:	bne	14390 <argp_parse@@Base+0x225c>
   143d0:	b	143a4 <argp_parse@@Base+0x2270>
   143d4:	ldr	r2, [r4, #28]
   143d8:	ldr	r3, [r4, #32]
   143dc:	cmp	r2, r3
   143e0:	bcs	143fc <argp_parse@@Base+0x22c8>
   143e4:	ldr	r3, [r4, #28]
   143e8:	add	r2, r3, #1
   143ec:	str	r2, [r4, #28]
   143f0:	mov	r2, #32
   143f4:	strb	r2, [r3]
   143f8:	b	143a4 <argp_parse@@Base+0x2270>
   143fc:	mov	r1, #1
   14400:	mov	r0, r4
   14404:	bl	18378 <argp_error@@Base+0x1450>
   14408:	cmp	r0, #0
   1440c:	bne	143e4 <argp_parse@@Base+0x22b0>
   14410:	b	143a4 <argp_parse@@Base+0x2270>
   14414:	strd	r4, [sp, #-16]!
   14418:	str	r6, [sp, #8]
   1441c:	str	lr, [sp, #12]
   14420:	ldr	r5, [r0, #8]
   14424:	cmp	r5, #0
   14428:	beq	1446c <argp_parse@@Base+0x2338>
   1442c:	ldr	r2, [r0, #12]
   14430:	ldr	r1, [r1, #12]
   14434:	orr	r2, r2, r1
   14438:	tst	r2, #16
   1443c:	bne	14478 <argp_parse@@Base+0x2344>
   14440:	mov	r6, r3
   14444:	mov	r4, r0
   14448:	tst	r2, #1
   1444c:	beq	1448c <argp_parse@@Base+0x2358>
   14450:	mov	r3, r5
   14454:	ldr	r2, [r0, #4]
   14458:	movw	r1, #36384	; 0x8e20
   1445c:	movt	r1, #1
   14460:	mov	r0, r6
   14464:	bl	18478 <argp_error@@Base+0x1550>
   14468:	b	14478 <argp_parse@@Base+0x2344>
   1446c:	ldr	r5, [r1, #8]
   14470:	cmp	r5, #0
   14474:	bne	1442c <argp_parse@@Base+0x22f8>
   14478:	mov	r0, #0
   1447c:	ldrd	r4, [sp]
   14480:	ldr	r6, [sp, #8]
   14484:	add	sp, sp, #12
   14488:	pop	{pc}		; (ldr pc, [sp], #4)
   1448c:	mov	r0, r5
   14490:	bl	110cc <strlen@plt>
   14494:	add	r1, r0, #6
   14498:	mov	r0, r6
   1449c:	bl	1433c <argp_parse@@Base+0x2208>
   144a0:	mov	r3, r5
   144a4:	ldr	r2, [r4, #4]
   144a8:	movw	r1, #36396	; 0x8e2c
   144ac:	movt	r1, #1
   144b0:	mov	r0, r6
   144b4:	bl	18478 <argp_error@@Base+0x1550>
   144b8:	b	14478 <argp_parse@@Base+0x2344>
   144bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   144c0:	strd	r6, [sp, #8]
   144c4:	strd	r8, [sp, #16]
   144c8:	strd	sl, [sp, #24]
   144cc:	str	lr, [sp, #32]
   144d0:	sub	sp, sp, #28
   144d4:	str	r1, [sp, #8]
   144d8:	mov	sl, r2
   144dc:	mov	r4, r3
   144e0:	ldr	r9, [sp, #64]	; 0x40
   144e4:	ldr	r6, [r2]
   144e8:	str	r6, [sp, #20]
   144ec:	ldr	r7, [r0, #16]
   144f0:	ldr	r2, [r0, #8]
   144f4:	mov	ip, r2
   144f8:	str	r2, [sp, #16]
   144fc:	mov	r3, r1
   14500:	mov	r2, r0
   14504:	mov	r1, #6
   14508:	movt	r1, #512	; 0x200
   1450c:	mov	r0, ip
   14510:	bl	13ee8 <argp_parse@@Base+0x1db4>
   14514:	cmp	r0, #0
   14518:	str	r0, [sp, #12]
   1451c:	beq	146ac <argp_parse@@Base+0x2578>
   14520:	mov	r1, #10
   14524:	bl	10f7c <strchrnul@plt>
   14528:	mov	r5, r0
   1452c:	ldrb	r3, [r0]
   14530:	cmp	r3, #0
   14534:	beq	1467c <argp_parse@@Base+0x2548>
   14538:	ldrb	fp, [r6]
   1453c:	cmp	fp, #0
   14540:	ble	14674 <argp_parse@@Base+0x2540>
   14544:	mov	r6, #0
   14548:	add	r8, r0, #1
   1454c:	mov	r1, #10
   14550:	mov	r0, r8
   14554:	bl	10f7c <strchrnul@plt>
   14558:	add	r6, r6, #1
   1455c:	cmp	r6, fp
   14560:	bne	14548 <argp_parse@@Base+0x2414>
   14564:	mov	r5, r0
   14568:	ldr	r3, [sl]
   1456c:	add	r3, r3, #1
   14570:	str	r3, [sl]
   14574:	mov	fp, #1
   14578:	add	r1, r5, #1
   1457c:	sub	r1, r1, r8
   14580:	mov	r0, r9
   14584:	bl	1433c <argp_parse@@Base+0x2208>
   14588:	sub	r6, r5, r8
   1458c:	ldr	r3, [r9, #28]
   14590:	add	r3, r3, r6
   14594:	ldr	r2, [r9, #32]
   14598:	cmp	r2, r3
   1459c:	bcs	145b4 <argp_parse@@Base+0x2480>
   145a0:	mov	r1, r6
   145a4:	mov	r0, r9
   145a8:	bl	18378 <argp_error@@Base+0x1450>
   145ac:	cmp	r0, #0
   145b0:	beq	145d0 <argp_parse@@Base+0x249c>
   145b4:	mov	r2, r6
   145b8:	mov	r1, r8
   145bc:	ldr	r0, [r9, #28]
   145c0:	bl	10fa0 <memcpy@plt>
   145c4:	ldr	r3, [r9, #28]
   145c8:	add	r6, r3, r6
   145cc:	str	r6, [r9, #28]
   145d0:	ldr	r2, [sp, #16]
   145d4:	ldr	r3, [sp, #12]
   145d8:	cmp	r2, r3
   145dc:	bne	14688 <argp_parse@@Base+0x2554>
   145e0:	cmp	r7, #0
   145e4:	beq	14620 <argp_parse@@Base+0x24ec>
   145e8:	ldr	r0, [r7]
   145ec:	cmp	r0, #0
   145f0:	beq	14620 <argp_parse@@Base+0x24ec>
   145f4:	mov	r3, r4
   145f8:	str	r9, [sp]
   145fc:	mov	r2, sl
   14600:	ldr	r1, [sp, #8]
   14604:	bl	144bc <argp_parse@@Base+0x2388>
   14608:	clz	r3, r0
   1460c:	lsr	r3, r3, #5
   14610:	ldr	r0, [r7, #16]!
   14614:	cmp	r0, #0
   14618:	bne	145f8 <argp_parse@@Base+0x24c4>
   1461c:	mov	r4, r3
   14620:	cmp	r4, #0
   14624:	moveq	fp, #0
   14628:	cmp	fp, #0
   1462c:	beq	14650 <argp_parse@@Base+0x251c>
   14630:	ldrb	r3, [r5]
   14634:	cmp	r3, #0
   14638:	beq	14694 <argp_parse@@Base+0x2560>
   1463c:	ldr	r2, [sp, #20]
   14640:	ldrb	r3, [r2]
   14644:	add	r3, r3, #1
   14648:	strb	r3, [r2]
   1464c:	mov	r4, #0
   14650:	clz	r0, r4
   14654:	lsr	r0, r0, #5
   14658:	add	sp, sp, #28
   1465c:	ldrd	r4, [sp]
   14660:	ldrd	r6, [sp, #8]
   14664:	ldrd	r8, [sp, #16]
   14668:	ldrd	sl, [sp, #24]
   1466c:	add	sp, sp, #32
   14670:	pop	{pc}		; (ldr pc, [sp], #4)
   14674:	ldr	r8, [sp, #12]
   14678:	b	14568 <argp_parse@@Base+0x2434>
   1467c:	ldr	r8, [sp, #12]
   14680:	mov	fp, #0
   14684:	b	14578 <argp_parse@@Base+0x2444>
   14688:	mov	r0, r3
   1468c:	bl	12e0c <argp_parse@@Base+0xcd8>
   14690:	b	145e0 <argp_parse@@Base+0x24ac>
   14694:	ldr	r2, [sp, #20]
   14698:	ldrb	r3, [r2]
   1469c:	cmp	r3, #0
   146a0:	movne	r3, #0
   146a4:	strbne	r3, [r2]
   146a8:	b	14650 <argp_parse@@Base+0x251c>
   146ac:	cmp	r7, #0
   146b0:	beq	14650 <argp_parse@@Base+0x251c>
   146b4:	ldr	r5, [sp, #12]
   146b8:	mov	fp, #0
   146bc:	b	145e8 <argp_parse@@Base+0x24b4>
   146c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   146c4:	strd	r6, [sp, #8]
   146c8:	str	r8, [sp, #16]
   146cc:	str	lr, [sp, #20]
   146d0:	mov	r6, r0
   146d4:	mov	r4, r2
   146d8:	ldr	r3, [r2, #16]
   146dc:	mov	r2, r1
   146e0:	mov	r1, #3
   146e4:	movt	r1, #512	; 0x200
   146e8:	bl	13ee8 <argp_parse@@Base+0x1db4>
   146ec:	subs	r5, r0, #0
   146f0:	beq	14804 <argp_parse@@Base+0x26d0>
   146f4:	ldrb	r3, [r5]
   146f8:	cmp	r3, #0
   146fc:	beq	147f8 <argp_parse@@Base+0x26c4>
   14700:	ldr	r3, [r4, #8]
   14704:	ldr	r3, [r3]
   14708:	cmp	r3, #0
   1470c:	beq	14738 <argp_parse@@Base+0x2604>
   14710:	ldr	r7, [r4, #4]
   14714:	ldr	r2, [r7, #28]
   14718:	ldr	r3, [r7, #32]
   1471c:	cmp	r2, r3
   14720:	bcs	14828 <argp_parse@@Base+0x26f4>
   14724:	ldr	r3, [r7, #28]
   14728:	add	r2, r3, #1
   1472c:	str	r2, [r7, #28]
   14730:	mov	r2, #10
   14734:	strb	r2, [r3]
   14738:	movw	r8, #41492	; 0xa214
   1473c:	movt	r8, #2
   14740:	ldr	r1, [r8, #24]
   14744:	ldr	r0, [r4, #4]
   14748:	bl	14238 <argp_parse@@Base+0x2104>
   1474c:	ldr	r7, [r4, #4]
   14750:	ldr	r8, [r8, #24]
   14754:	ldr	r3, [r7, #28]
   14758:	ldr	r2, [r7, #24]
   1475c:	sub	r3, r3, r2
   14760:	ldr	r2, [r7, #16]
   14764:	cmp	r3, r2
   14768:	bhi	14840 <argp_parse@@Base+0x270c>
   1476c:	str	r8, [r7, #4]
   14770:	ldr	r7, [r4, #4]
   14774:	movw	r3, #41492	; 0xa214
   14778:	movt	r3, #2
   1477c:	ldr	r8, [r3, #24]
   14780:	ldr	r3, [r7, #28]
   14784:	ldr	r2, [r7, #24]
   14788:	sub	r3, r3, r2
   1478c:	ldr	r2, [r7, #16]
   14790:	cmp	r3, r2
   14794:	bhi	1484c <argp_parse@@Base+0x2718>
   14798:	str	r8, [r7, #12]
   1479c:	mov	r0, r5
   147a0:	bl	110cc <strlen@plt>
   147a4:	subs	r7, r0, #0
   147a8:	bne	14858 <argp_parse@@Base+0x2724>
   147ac:	ldr	r7, [r4, #4]
   147b0:	ldr	r3, [r7, #28]
   147b4:	ldr	r2, [r7, #24]
   147b8:	sub	r3, r3, r2
   147bc:	ldr	r2, [r7, #16]
   147c0:	cmp	r3, r2
   147c4:	bhi	148a4 <argp_parse@@Base+0x2770>
   147c8:	mov	r3, #0
   147cc:	str	r3, [r7, #4]
   147d0:	ldr	r7, [r4, #4]
   147d4:	ldr	r2, [r7, #28]
   147d8:	ldr	r3, [r7, #32]
   147dc:	cmp	r2, r3
   147e0:	bcs	148b0 <argp_parse@@Base+0x277c>
   147e4:	ldr	r3, [r7, #28]
   147e8:	add	r2, r3, #1
   147ec:	str	r2, [r7, #28]
   147f0:	mov	r2, #10
   147f4:	strb	r2, [r3]
   147f8:	ldr	r3, [r4, #8]
   147fc:	mov	r2, #1
   14800:	str	r2, [r3, #4]
   14804:	cmp	r6, r5
   14808:	beq	14814 <argp_parse@@Base+0x26e0>
   1480c:	mov	r0, r5
   14810:	bl	12e0c <argp_parse@@Base+0xcd8>
   14814:	ldrd	r4, [sp]
   14818:	ldrd	r6, [sp, #8]
   1481c:	ldr	r8, [sp, #16]
   14820:	add	sp, sp, #20
   14824:	pop	{pc}		; (ldr pc, [sp], #4)
   14828:	mov	r1, #1
   1482c:	mov	r0, r7
   14830:	bl	18378 <argp_error@@Base+0x1450>
   14834:	cmp	r0, #0
   14838:	bne	14724 <argp_parse@@Base+0x25f0>
   1483c:	b	14738 <argp_parse@@Base+0x2604>
   14840:	mov	r0, r7
   14844:	bl	17e00 <argp_error@@Base+0xed8>
   14848:	b	1476c <argp_parse@@Base+0x2638>
   1484c:	mov	r0, r7
   14850:	bl	17e00 <argp_error@@Base+0xed8>
   14854:	b	14798 <argp_parse@@Base+0x2664>
   14858:	ldr	r8, [r4, #4]
   1485c:	ldr	r3, [r8, #28]
   14860:	add	r3, r3, r7
   14864:	ldr	r2, [r8, #32]
   14868:	cmp	r2, r3
   1486c:	bcs	14884 <argp_parse@@Base+0x2750>
   14870:	mov	r1, r7
   14874:	mov	r0, r8
   14878:	bl	18378 <argp_error@@Base+0x1450>
   1487c:	cmp	r0, #0
   14880:	beq	147ac <argp_parse@@Base+0x2678>
   14884:	mov	r2, r7
   14888:	mov	r1, r5
   1488c:	ldr	r0, [r8, #28]
   14890:	bl	10fa0 <memcpy@plt>
   14894:	ldr	r3, [r8, #28]
   14898:	add	r7, r3, r7
   1489c:	str	r7, [r8, #28]
   148a0:	b	147ac <argp_parse@@Base+0x2678>
   148a4:	mov	r0, r7
   148a8:	bl	17e00 <argp_error@@Base+0xed8>
   148ac:	b	147c8 <argp_parse@@Base+0x2694>
   148b0:	mov	r1, #1
   148b4:	mov	r0, r7
   148b8:	bl	18378 <argp_error@@Base+0x1450>
   148bc:	cmp	r0, #0
   148c0:	bne	147e4 <argp_parse@@Base+0x26b0>
   148c4:	b	147f8 <argp_parse@@Base+0x26c4>
   148c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   148cc:	strd	r6, [sp, #8]
   148d0:	str	r8, [sp, #16]
   148d4:	str	lr, [sp, #20]
   148d8:	mov	r6, r0
   148dc:	mov	r4, r1
   148e0:	ldr	r3, [r1, #12]
   148e4:	cmp	r3, #0
   148e8:	beq	14a1c <argp_parse@@Base+0x28e8>
   148ec:	ldr	r3, [r1, #8]
   148f0:	ldr	r7, [r3]
   148f4:	ldr	r2, [r1]
   148f8:	ldr	r5, [r2, #16]
   148fc:	ldr	r3, [r3, #4]
   14900:	cmp	r3, #0
   14904:	cmpne	r7, #0
   14908:	bne	149bc <argp_parse@@Base+0x2888>
   1490c:	cmp	r5, #0
   14910:	beq	14994 <argp_parse@@Base+0x2860>
   14914:	ldr	r0, [r5]
   14918:	cmp	r0, #0
   1491c:	beq	14994 <argp_parse@@Base+0x2860>
   14920:	ldrb	r3, [r0]
   14924:	cmp	r3, #0
   14928:	beq	14994 <argp_parse@@Base+0x2860>
   1492c:	cmp	r7, #0
   14930:	beq	14960 <argp_parse@@Base+0x282c>
   14934:	ldr	r3, [r7, #16]
   14938:	cmp	r3, r5
   1493c:	beq	14994 <argp_parse@@Base+0x2860>
   14940:	cmp	r3, #0
   14944:	beq	14960 <argp_parse@@Base+0x282c>
   14948:	ldr	r3, [r3, #12]
   1494c:	cmp	r3, #0
   14950:	cmpne	r5, r3
   14954:	bne	14948 <argp_parse@@Base+0x2814>
   14958:	cmp	r5, r3
   1495c:	beq	14994 <argp_parse@@Base+0x2860>
   14960:	ldr	r3, [r4, #4]
   14964:	ldr	r7, [r3, #12]
   14968:	mov	r2, r4
   1496c:	ldr	r1, [r5, #16]
   14970:	bl	146c0 <argp_parse@@Base+0x258c>
   14974:	ldr	r5, [r4, #4]
   14978:	ldr	r3, [r5, #28]
   1497c:	ldr	r2, [r5, #24]
   14980:	sub	r3, r3, r2
   14984:	ldr	r2, [r5, #16]
   14988:	cmp	r3, r2
   1498c:	bhi	14a10 <argp_parse@@Base+0x28dc>
   14990:	str	r7, [r5, #12]
   14994:	mov	r3, #0
   14998:	str	r3, [r4, #12]
   1499c:	mov	r1, r6
   149a0:	ldr	r0, [r4, #4]
   149a4:	bl	14238 <argp_parse@@Base+0x2104>
   149a8:	ldrd	r4, [sp]
   149ac:	ldrd	r6, [sp, #8]
   149b0:	ldr	r8, [sp, #16]
   149b4:	add	sp, sp, #20
   149b8:	pop	{pc}		; (ldr pc, [sp], #4)
   149bc:	ldr	r2, [r2, #12]
   149c0:	ldr	r3, [r7, #12]
   149c4:	cmp	r2, r3
   149c8:	beq	1490c <argp_parse@@Base+0x27d8>
   149cc:	ldr	r8, [r1, #4]
   149d0:	ldr	r2, [r8, #28]
   149d4:	ldr	r3, [r8, #32]
   149d8:	cmp	r2, r3
   149dc:	bcs	149f8 <argp_parse@@Base+0x28c4>
   149e0:	ldr	r3, [r8, #28]
   149e4:	add	r2, r3, #1
   149e8:	str	r2, [r8, #28]
   149ec:	mov	r2, #10
   149f0:	strb	r2, [r3]
   149f4:	b	1490c <argp_parse@@Base+0x27d8>
   149f8:	mov	r1, #1
   149fc:	mov	r0, r8
   14a00:	bl	18378 <argp_error@@Base+0x1450>
   14a04:	cmp	r0, #0
   14a08:	bne	149e0 <argp_parse@@Base+0x28ac>
   14a0c:	b	1490c <argp_parse@@Base+0x27d8>
   14a10:	mov	r0, r5
   14a14:	bl	17e00 <argp_error@@Base+0xed8>
   14a18:	b	14990 <argp_parse@@Base+0x285c>
   14a1c:	ldr	r5, [r1, #4]
   14a20:	ldr	r3, [r5, #28]
   14a24:	add	r3, r3, #2
   14a28:	ldr	r2, [r5, #32]
   14a2c:	cmp	r2, r3
   14a30:	bcs	14a48 <argp_parse@@Base+0x2914>
   14a34:	mov	r1, #2
   14a38:	mov	r0, r5
   14a3c:	bl	18378 <argp_error@@Base+0x1450>
   14a40:	cmp	r0, #0
   14a44:	beq	1499c <argp_parse@@Base+0x2868>
   14a48:	ldr	r2, [r5, #28]
   14a4c:	movw	r3, #36408	; 0x8e38
   14a50:	movt	r3, #1
   14a54:	ldrh	r3, [r3]
   14a58:	strh	r3, [r2]
   14a5c:	ldr	r3, [r5, #28]
   14a60:	add	r3, r3, #2
   14a64:	str	r3, [r5, #28]
   14a68:	b	1499c <argp_parse@@Base+0x2868>
   14a6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a70:	strd	r6, [sp, #8]
   14a74:	strd	r8, [sp, #16]
   14a78:	strd	sl, [sp, #24]
   14a7c:	str	lr, [sp, #32]
   14a80:	sub	sp, sp, #28
   14a84:	mov	r8, r0
   14a88:	str	r1, [sp, #12]
   14a8c:	str	r2, [sp, #8]
   14a90:	mov	fp, r3
   14a94:	ldr	sl, [sp, #64]	; 0x40
   14a98:	ldr	r4, [sp, #68]	; 0x44
   14a9c:	ldr	r6, [r0, #12]
   14aa0:	ldr	r9, [r0, #16]
   14aa4:	cmp	r6, #0
   14aa8:	beq	14f24 <argp_parse@@Base+0x2df0>
   14aac:	mov	r5, r2
   14ab0:	mov	r1, #11
   14ab4:	mov	r0, r6
   14ab8:	bl	110d8 <strchr@plt>
   14abc:	cmp	r5, #0
   14ac0:	beq	14b00 <argp_parse@@Base+0x29cc>
   14ac4:	cmp	r0, #0
   14ac8:	addne	r6, r0, #1
   14acc:	beq	14f6c <argp_parse@@Base+0x2e38>
   14ad0:	ldr	r3, [r8, #20]
   14ad4:	cmp	r3, #0
   14ad8:	beq	14f74 <argp_parse@@Base+0x2e40>
   14adc:	ldr	r1, [sp, #12]
   14ae0:	mov	r0, r8
   14ae4:	bl	12c88 <argp_parse@@Base+0xb54>
   14ae8:	str	r0, [sp, #16]
   14aec:	ldr	r3, [r8, #20]
   14af0:	mov	r7, #0
   14af4:	mov	r0, #2
   14af8:	movt	r0, #512	; 0x200
   14afc:	b	14b4c <argp_parse@@Base+0x2a18>
   14b00:	cmp	r0, #0
   14b04:	beq	14f90 <argp_parse@@Base+0x2e5c>
   14b08:	sub	r7, r0, r6
   14b0c:	ldr	r3, [r8, #20]
   14b10:	cmp	r3, #0
   14b14:	beq	14d34 <argp_parse@@Base+0x2c00>
   14b18:	cmp	r7, #0
   14b1c:	beq	14b30 <argp_parse@@Base+0x29fc>
   14b20:	mov	r1, r7
   14b24:	mov	r0, r6
   14b28:	bl	10f94 <strndup@plt>
   14b2c:	mov	r6, r0
   14b30:	ldr	r1, [sp, #12]
   14b34:	mov	r0, r8
   14b38:	bl	12c88 <argp_parse@@Base+0xb54>
   14b3c:	str	r0, [sp, #16]
   14b40:	ldr	r3, [r8, #20]
   14b44:	mov	r0, #1
   14b48:	movt	r0, #512	; 0x200
   14b4c:	ldr	r2, [sp, #16]
   14b50:	mov	r1, r6
   14b54:	blx	r3
   14b58:	subs	r5, r0, #0
   14b5c:	beq	14e40 <argp_parse@@Base+0x2d0c>
   14b60:	cmp	fp, #0
   14b64:	bne	14d44 <argp_parse@@Base+0x2c10>
   14b68:	cmp	r5, r6
   14b6c:	movne	r3, #0
   14b70:	moveq	r3, #1
   14b74:	cmp	r7, #0
   14b78:	moveq	r3, #0
   14b7c:	cmp	r3, #0
   14b80:	beq	14d84 <argp_parse@@Base+0x2c50>
   14b84:	ldr	r3, [r4, #28]
   14b88:	add	r3, r3, r7
   14b8c:	ldr	r2, [r4, #32]
   14b90:	cmp	r2, r3
   14b94:	bcs	14bac <argp_parse@@Base+0x2a78>
   14b98:	mov	r1, r7
   14b9c:	mov	r0, r4
   14ba0:	bl	18378 <argp_error@@Base+0x1450>
   14ba4:	cmp	r0, #0
   14ba8:	beq	14bc8 <argp_parse@@Base+0x2a94>
   14bac:	mov	r2, r7
   14bb0:	mov	r1, r6
   14bb4:	ldr	r0, [r4, #28]
   14bb8:	bl	10fa0 <memcpy@plt>
   14bbc:	ldr	r3, [r4, #28]
   14bc0:	add	r3, r3, r7
   14bc4:	str	r3, [r4, #28]
   14bc8:	ldr	r3, [r4, #28]
   14bcc:	ldr	r2, [r4, #24]
   14bd0:	sub	r3, r3, r2
   14bd4:	ldr	r2, [r4, #16]
   14bd8:	cmp	r3, r2
   14bdc:	bhi	14de4 <argp_parse@@Base+0x2cb0>
   14be0:	ldr	r3, [r4, #20]
   14be4:	bic	r3, r3, r3, asr #31
   14be8:	ldr	r2, [r4, #4]
   14bec:	cmp	r2, r3
   14bf0:	bcc	14df0 <argp_parse@@Base+0x2cbc>
   14bf4:	cmp	r5, r6
   14bf8:	moveq	r5, #1
   14bfc:	bne	14e30 <argp_parse@@Base+0x2cfc>
   14c00:	cmp	r6, #0
   14c04:	cmpne	r7, #0
   14c08:	beq	14c20 <argp_parse@@Base+0x2aec>
   14c0c:	ldr	r3, [r8, #20]
   14c10:	cmp	r3, #0
   14c14:	beq	14ca4 <argp_parse@@Base+0x2b70>
   14c18:	mov	r0, r6
   14c1c:	bl	12e0c <argp_parse@@Base+0xcd8>
   14c20:	ldr	r3, [sp, #8]
   14c24:	cmp	r3, #0
   14c28:	beq	14ca4 <argp_parse@@Base+0x2b70>
   14c2c:	ldr	r3, [r8, #20]
   14c30:	cmp	r3, #0
   14c34:	beq	14ca4 <argp_parse@@Base+0x2b70>
   14c38:	ldr	r2, [sp, #16]
   14c3c:	mov	r1, #0
   14c40:	mov	r0, #4
   14c44:	movt	r0, #512	; 0x200
   14c48:	blx	r3
   14c4c:	subs	r6, r0, #0
   14c50:	beq	14ca4 <argp_parse@@Base+0x2b70>
   14c54:	orrs	r3, fp, r5
   14c58:	bne	14e48 <argp_parse@@Base+0x2d14>
   14c5c:	mov	r0, r6
   14c60:	bl	110cc <strlen@plt>
   14c64:	subs	r5, r0, #0
   14c68:	bne	14e88 <argp_parse@@Base+0x2d54>
   14c6c:	mov	r0, r6
   14c70:	bl	12e0c <argp_parse@@Base+0xcd8>
   14c74:	ldr	r3, [r4, #28]
   14c78:	ldr	r2, [r4, #24]
   14c7c:	sub	r3, r3, r2
   14c80:	ldr	r2, [r4, #16]
   14c84:	cmp	r3, r2
   14c88:	bhi	14ed0 <argp_parse@@Base+0x2d9c>
   14c8c:	ldr	r3, [r4, #20]
   14c90:	bic	r3, r3, r3, asr #31
   14c94:	ldr	r2, [r4, #4]
   14c98:	cmp	r2, r3
   14c9c:	movcs	r5, #1
   14ca0:	bcc	14edc <argp_parse@@Base+0x2da8>
   14ca4:	cmp	r9, #0
   14ca8:	beq	14d14 <argp_parse@@Base+0x2be0>
   14cac:	ldr	r0, [r9]
   14cb0:	cmp	r0, #0
   14cb4:	beq	14d14 <argp_parse@@Base+0x2be0>
   14cb8:	clz	r6, sl
   14cbc:	lsr	r6, r6, #5
   14cc0:	cmp	sl, #0
   14cc4:	cmpne	r5, #0
   14cc8:	bne	14d14 <argp_parse@@Base+0x2be0>
   14ccc:	orrs	r3, fp, r5
   14cd0:	str	r4, [sp, #4]
   14cd4:	str	sl, [sp]
   14cd8:	movne	r3, #1
   14cdc:	moveq	r3, #0
   14ce0:	ldr	r2, [sp, #8]
   14ce4:	ldr	r1, [sp, #12]
   14ce8:	bl	14a6c <argp_parse@@Base+0x2938>
   14cec:	orr	r5, r5, r0
   14cf0:	ldr	r0, [r9, #16]
   14cf4:	cmp	r0, #0
   14cf8:	beq	14d14 <argp_parse@@Base+0x2be0>
   14cfc:	add	r9, r9, #16
   14d00:	cmp	r5, #0
   14d04:	movne	r3, r6
   14d08:	moveq	r3, #1
   14d0c:	cmp	r3, #0
   14d10:	bne	14ccc <argp_parse@@Base+0x2b98>
   14d14:	mov	r0, r5
   14d18:	add	sp, sp, #28
   14d1c:	ldrd	r4, [sp]
   14d20:	ldrd	r6, [sp, #8]
   14d24:	ldrd	r8, [sp, #16]
   14d28:	ldrd	sl, [sp, #24]
   14d2c:	add	sp, sp, #32
   14d30:	pop	{pc}		; (ldr pc, [sp], #4)
   14d34:	mov	r5, r6
   14d38:	mov	r3, #0
   14d3c:	str	r3, [sp, #16]
   14d40:	b	14b60 <argp_parse@@Base+0x2a2c>
   14d44:	ldr	r2, [r4, #28]
   14d48:	ldr	r3, [r4, #32]
   14d4c:	cmp	r2, r3
   14d50:	bcs	14d6c <argp_parse@@Base+0x2c38>
   14d54:	ldr	r3, [r4, #28]
   14d58:	add	r2, r3, #1
   14d5c:	str	r2, [r4, #28]
   14d60:	mov	r2, #10
   14d64:	strb	r2, [r3]
   14d68:	b	14b68 <argp_parse@@Base+0x2a34>
   14d6c:	mov	r1, #1
   14d70:	mov	r0, r4
   14d74:	bl	18378 <argp_error@@Base+0x1450>
   14d78:	cmp	r0, #0
   14d7c:	bne	14d54 <argp_parse@@Base+0x2c20>
   14d80:	b	14b68 <argp_parse@@Base+0x2a34>
   14d84:	mov	r0, r5
   14d88:	bl	110cc <strlen@plt>
   14d8c:	subs	r3, r0, #0
   14d90:	str	r3, [sp, #20]
   14d94:	beq	14bc8 <argp_parse@@Base+0x2a94>
   14d98:	ldr	r3, [r4, #28]
   14d9c:	mov	r1, r0
   14da0:	add	r3, r3, r0
   14da4:	ldr	r2, [r4, #32]
   14da8:	cmp	r2, r3
   14dac:	bcs	14dc0 <argp_parse@@Base+0x2c8c>
   14db0:	mov	r0, r4
   14db4:	bl	18378 <argp_error@@Base+0x1450>
   14db8:	cmp	r0, #0
   14dbc:	beq	14bc8 <argp_parse@@Base+0x2a94>
   14dc0:	ldr	r2, [sp, #20]
   14dc4:	mov	r1, r5
   14dc8:	ldr	r0, [r4, #28]
   14dcc:	bl	10fa0 <memcpy@plt>
   14dd0:	ldr	r3, [r4, #28]
   14dd4:	ldr	r2, [sp, #20]
   14dd8:	add	r3, r3, r2
   14ddc:	str	r3, [r4, #28]
   14de0:	b	14bc8 <argp_parse@@Base+0x2a94>
   14de4:	mov	r0, r4
   14de8:	bl	17e00 <argp_error@@Base+0xed8>
   14dec:	b	14be0 <argp_parse@@Base+0x2aac>
   14df0:	ldr	r2, [r4, #28]
   14df4:	ldr	r3, [r4, #32]
   14df8:	cmp	r2, r3
   14dfc:	bcs	14e18 <argp_parse@@Base+0x2ce4>
   14e00:	ldr	r3, [r4, #28]
   14e04:	add	r2, r3, #1
   14e08:	str	r2, [r4, #28]
   14e0c:	mov	r2, #10
   14e10:	strb	r2, [r3]
   14e14:	b	14bf4 <argp_parse@@Base+0x2ac0>
   14e18:	mov	r1, #1
   14e1c:	mov	r0, r4
   14e20:	bl	18378 <argp_error@@Base+0x1450>
   14e24:	cmp	r0, #0
   14e28:	bne	14e00 <argp_parse@@Base+0x2ccc>
   14e2c:	b	14bf4 <argp_parse@@Base+0x2ac0>
   14e30:	mov	r0, r5
   14e34:	bl	12e0c <argp_parse@@Base+0xcd8>
   14e38:	mov	r5, #1
   14e3c:	b	14c00 <argp_parse@@Base+0x2acc>
   14e40:	mov	r5, #0
   14e44:	b	14c00 <argp_parse@@Base+0x2acc>
   14e48:	ldr	r2, [r4, #28]
   14e4c:	ldr	r3, [r4, #32]
   14e50:	cmp	r2, r3
   14e54:	bcs	14e70 <argp_parse@@Base+0x2d3c>
   14e58:	ldr	r3, [r4, #28]
   14e5c:	add	r2, r3, #1
   14e60:	str	r2, [r4, #28]
   14e64:	mov	r2, #10
   14e68:	strb	r2, [r3]
   14e6c:	b	14c5c <argp_parse@@Base+0x2b28>
   14e70:	mov	r1, #1
   14e74:	mov	r0, r4
   14e78:	bl	18378 <argp_error@@Base+0x1450>
   14e7c:	cmp	r0, #0
   14e80:	bne	14e58 <argp_parse@@Base+0x2d24>
   14e84:	b	14c5c <argp_parse@@Base+0x2b28>
   14e88:	ldr	r3, [r4, #28]
   14e8c:	add	r3, r3, r5
   14e90:	ldr	r2, [r4, #32]
   14e94:	cmp	r2, r3
   14e98:	bcs	14eb0 <argp_parse@@Base+0x2d7c>
   14e9c:	mov	r1, r5
   14ea0:	mov	r0, r4
   14ea4:	bl	18378 <argp_error@@Base+0x1450>
   14ea8:	cmp	r0, #0
   14eac:	beq	14c6c <argp_parse@@Base+0x2b38>
   14eb0:	mov	r2, r5
   14eb4:	mov	r1, r6
   14eb8:	ldr	r0, [r4, #28]
   14ebc:	bl	10fa0 <memcpy@plt>
   14ec0:	ldr	r3, [r4, #28]
   14ec4:	add	r5, r3, r5
   14ec8:	str	r5, [r4, #28]
   14ecc:	b	14c6c <argp_parse@@Base+0x2b38>
   14ed0:	mov	r0, r4
   14ed4:	bl	17e00 <argp_error@@Base+0xed8>
   14ed8:	b	14c8c <argp_parse@@Base+0x2b58>
   14edc:	ldr	r2, [r4, #28]
   14ee0:	ldr	r3, [r4, #32]
   14ee4:	cmp	r2, r3
   14ee8:	bcs	14f08 <argp_parse@@Base+0x2dd4>
   14eec:	ldr	r3, [r4, #28]
   14ef0:	add	r2, r3, #1
   14ef4:	str	r2, [r4, #28]
   14ef8:	mov	r2, #10
   14efc:	strb	r2, [r3]
   14f00:	mov	r5, #1
   14f04:	b	14ca4 <argp_parse@@Base+0x2b70>
   14f08:	mov	r1, #1
   14f0c:	mov	r0, r4
   14f10:	bl	18378 <argp_error@@Base+0x1450>
   14f14:	cmp	r0, #0
   14f18:	bne	14eec <argp_parse@@Base+0x2db8>
   14f1c:	mov	r5, #1
   14f20:	b	14ca4 <argp_parse@@Base+0x2b70>
   14f24:	ldr	r3, [r0, #20]
   14f28:	cmp	r3, #0
   14f2c:	moveq	r5, r6
   14f30:	beq	14f78 <argp_parse@@Base+0x2e44>
   14f34:	ldr	r1, [sp, #12]
   14f38:	mov	r0, r8
   14f3c:	bl	12c88 <argp_parse@@Base+0xb54>
   14f40:	str	r0, [sp, #16]
   14f44:	ldr	r3, [r8, #20]
   14f48:	mov	r7, #0
   14f4c:	mov	r0, #2
   14f50:	movt	r0, #512	; 0x200
   14f54:	mov	r2, #1
   14f58:	movt	r2, #512	; 0x200
   14f5c:	ldr	r1, [sp, #8]
   14f60:	cmp	r1, r7
   14f64:	moveq	r0, r2
   14f68:	b	14b4c <argp_parse@@Base+0x2a18>
   14f6c:	mov	r6, r0
   14f70:	b	14ad0 <argp_parse@@Base+0x299c>
   14f74:	mov	r5, r6
   14f78:	cmp	r5, #0
   14f7c:	streq	r5, [sp, #16]
   14f80:	beq	14c20 <argp_parse@@Base+0x2aec>
   14f84:	mov	r7, #0
   14f88:	str	r7, [sp, #16]
   14f8c:	b	14b60 <argp_parse@@Base+0x2a2c>
   14f90:	ldr	r3, [r8, #20]
   14f94:	cmp	r3, #0
   14f98:	moveq	r5, r6
   14f9c:	beq	14f78 <argp_parse@@Base+0x2e44>
   14fa0:	ldr	r1, [sp, #12]
   14fa4:	mov	r0, r8
   14fa8:	bl	12c88 <argp_parse@@Base+0xb54>
   14fac:	str	r0, [sp, #16]
   14fb0:	ldr	r3, [r8, #20]
   14fb4:	mov	r7, #0
   14fb8:	mov	r0, #1
   14fbc:	movt	r0, #512	; 0x200
   14fc0:	b	14b4c <argp_parse@@Base+0x2a18>
   14fc4:	ldr	r3, [r0, #12]
   14fc8:	ldr	r2, [r1, #12]
   14fcc:	cmp	r3, r2
   14fd0:	beq	15040 <argp_parse@@Base+0x2f0c>
   14fd4:	strd	r4, [sp, #-16]!
   14fd8:	str	r6, [sp, #8]
   14fdc:	str	lr, [sp, #12]
   14fe0:	mov	r5, r1
   14fe4:	mov	r4, r0
   14fe8:	mov	r1, r2
   14fec:	mov	r0, r3
   14ff0:	bl	14fc4 <argp_parse@@Base+0x2e90>
   14ff4:	subs	r3, r0, #0
   14ff8:	bne	1502c <argp_parse@@Base+0x2ef8>
   14ffc:	ldr	r0, [r4, #8]
   15000:	ldr	r3, [r5, #8]
   15004:	mvn	r2, r3
   15008:	lsr	r2, r2, #31
   1500c:	cmp	r2, r0, lsr #31
   15010:	subne	r3, r0, r3
   15014:	subeq	r3, r3, r0
   15018:	cmp	r3, #0
   1501c:	bne	1502c <argp_parse@@Base+0x2ef8>
   15020:	ldr	r3, [r5, #4]
   15024:	ldr	r0, [r4, #4]
   15028:	sub	r3, r3, r0
   1502c:	mov	r0, r3
   15030:	ldrd	r4, [sp]
   15034:	ldr	r6, [sp, #8]
   15038:	add	sp, sp, #12
   1503c:	pop	{pc}		; (ldr pc, [sp], #4)
   15040:	ldr	r2, [r0, #8]
   15044:	ldr	r3, [r1, #8]
   15048:	mvn	ip, r3
   1504c:	lsr	ip, ip, #31
   15050:	cmp	ip, r2, lsr #31
   15054:	subne	r3, r2, r3
   15058:	subeq	r3, r3, r2
   1505c:	cmp	r3, #0
   15060:	bne	15070 <argp_parse@@Base+0x2f3c>
   15064:	ldr	r3, [r1, #4]
   15068:	ldr	r0, [r0, #4]
   1506c:	sub	r3, r3, r0
   15070:	mov	r0, r3
   15074:	bx	lr
   15078:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1507c:	strd	r6, [sp, #8]
   15080:	str	r8, [sp, #16]
   15084:	str	lr, [sp, #20]
   15088:	sub	sp, sp, #8
   1508c:	ldr	lr, [r0, #16]
   15090:	cmp	lr, #0
   15094:	movne	r3, lr
   15098:	bne	150a8 <argp_parse@@Base+0x2f74>
   1509c:	ldr	ip, [r0, #12]
   150a0:	b	150b8 <argp_parse@@Base+0x2f84>
   150a4:	mov	r3, r2
   150a8:	ldr	r2, [r3, #12]
   150ac:	cmp	r2, #0
   150b0:	bne	150a4 <argp_parse@@Base+0x2f70>
   150b4:	ldr	ip, [r3, #8]
   150b8:	ldr	r5, [r1, #16]
   150bc:	cmp	r5, #0
   150c0:	movne	r3, r5
   150c4:	bne	150d4 <argp_parse@@Base+0x2fa0>
   150c8:	ldr	r4, [r1, #12]
   150cc:	b	150e4 <argp_parse@@Base+0x2fb0>
   150d0:	mov	r3, r2
   150d4:	ldr	r2, [r3, #12]
   150d8:	cmp	r2, #0
   150dc:	bne	150d0 <argp_parse@@Base+0x2f9c>
   150e0:	ldr	r4, [r3, #8]
   150e4:	mvn	r3, r4
   150e8:	lsr	r3, r3, #31
   150ec:	cmp	r3, ip, lsr #31
   150f0:	subne	r4, ip, r4
   150f4:	subeq	r4, r4, ip
   150f8:	cmp	r4, #0
   150fc:	bne	1523c <argp_parse@@Base+0x3108>
   15100:	adds	r4, r5, #0
   15104:	movne	r4, #1
   15108:	cmp	lr, #0
   1510c:	rsbeq	r4, r4, #0
   15110:	rsbne	r4, r4, #1
   15114:	cmp	r4, #0
   15118:	bne	1523c <argp_parse@@Base+0x3108>
   1511c:	mov	r7, r1
   15120:	mov	r6, r0
   15124:	cmp	lr, #0
   15128:	beq	151a8 <argp_parse@@Base+0x3074>
   1512c:	ldr	r1, [lr, #20]
   15130:	ldr	r2, [r5, #20]
   15134:	cmp	r1, r2
   15138:	ble	15164 <argp_parse@@Base+0x3030>
   1513c:	ldr	lr, [lr, #12]
   15140:	ldr	r3, [lr, #20]
   15144:	cmp	r2, r3
   15148:	blt	1513c <argp_parse@@Base+0x3008>
   1514c:	mov	r1, r5
   15150:	mov	r0, lr
   15154:	bl	14fc4 <argp_parse@@Base+0x2e90>
   15158:	subs	r4, r0, #0
   1515c:	moveq	r4, #1
   15160:	b	1523c <argp_parse@@Base+0x3108>
   15164:	cmp	r1, r2
   15168:	bge	15194 <argp_parse@@Base+0x3060>
   1516c:	ldr	r5, [r5, #12]
   15170:	ldr	r3, [r5, #20]
   15174:	cmp	r1, r3
   15178:	blt	1516c <argp_parse@@Base+0x3038>
   1517c:	mov	r1, r5
   15180:	mov	r0, lr
   15184:	bl	14fc4 <argp_parse@@Base+0x2e90>
   15188:	subs	r4, r0, #0
   1518c:	mvneq	r4, #0
   15190:	b	1523c <argp_parse@@Base+0x3108>
   15194:	mov	r1, r5
   15198:	mov	r0, lr
   1519c:	bl	14fc4 <argp_parse@@Base+0x2e90>
   151a0:	subs	r4, r0, #0
   151a4:	bne	1523c <argp_parse@@Base+0x3108>
   151a8:	ldr	r3, [r6, #12]
   151ac:	ldr	r4, [r7, #12]
   151b0:	mvn	r2, r4
   151b4:	lsr	r2, r2, #31
   151b8:	cmp	r2, r3, lsr #31
   151bc:	subne	r4, r3, r4
   151c0:	subeq	r4, r4, r3
   151c4:	cmp	r4, #0
   151c8:	bne	1523c <argp_parse@@Base+0x3108>
   151cc:	mov	r0, r6
   151d0:	bl	13c3c <argp_parse@@Base+0x1b08>
   151d4:	mov	r5, r0
   151d8:	str	r0, [sp]
   151dc:	mov	r0, r7
   151e0:	bl	13c3c <argp_parse@@Base+0x1b08>
   151e4:	str	r0, [sp, #4]
   151e8:	ldr	r3, [r6]
   151ec:	ldr	r0, [r3, #12]
   151f0:	ubfx	r0, r0, #3, #1
   151f4:	cmp	r5, #0
   151f8:	moveq	r0, #0
   151fc:	cmp	r0, #0
   15200:	bne	15258 <argp_parse@@Base+0x3124>
   15204:	ldr	r3, [r7]
   15208:	ldr	r3, [r3, #12]
   1520c:	tst	r3, #8
   15210:	beq	15290 <argp_parse@@Base+0x315c>
   15214:	ldr	r3, [sp, #4]
   15218:	cmp	r3, #0
   1521c:	beq	15290 <argp_parse@@Base+0x315c>
   15220:	add	r0, sp, #4
   15224:	bl	13cd8 <argp_parse@@Base+0x1ba4>
   15228:	adds	r3, r0, #0
   1522c:	movne	r3, #1
   15230:	mov	r0, r4
   15234:	subs	r4, r0, r3
   15238:	beq	15290 <argp_parse@@Base+0x315c>
   1523c:	mov	r0, r4
   15240:	add	sp, sp, #8
   15244:	ldrd	r4, [sp]
   15248:	ldrd	r6, [sp, #8]
   1524c:	ldr	r8, [sp, #16]
   15250:	add	sp, sp, #20
   15254:	pop	{pc}		; (ldr pc, [sp], #4)
   15258:	mov	r0, sp
   1525c:	bl	13cd8 <argp_parse@@Base+0x1ba4>
   15260:	adds	r0, r0, #0
   15264:	movne	r0, #1
   15268:	ldr	r3, [r7]
   1526c:	ldr	r3, [r3, #12]
   15270:	ands	r3, r3, #8
   15274:	beq	15234 <argp_parse@@Base+0x3100>
   15278:	ldr	r3, [sp, #4]
   1527c:	cmp	r3, #0
   15280:	moveq	r3, r4
   15284:	beq	15234 <argp_parse@@Base+0x3100>
   15288:	mov	r4, r0
   1528c:	b	15220 <argp_parse@@Base+0x30ec>
   15290:	ldr	r2, [r6, #20]
   15294:	movw	r4, #17120	; 0x42e0
   15298:	movt	r4, #1
   1529c:	mov	r3, #0
   152a0:	ldr	r2, [r2, #24]
   152a4:	mov	r1, r4
   152a8:	mov	r0, r6
   152ac:	bl	13f48 <argp_parse@@Base+0x1e14>
   152b0:	mov	r5, r0
   152b4:	uxtb	r8, r0
   152b8:	ldr	r2, [r7, #20]
   152bc:	mov	r3, #0
   152c0:	ldr	r2, [r2, #24]
   152c4:	mov	r1, r4
   152c8:	mov	r0, r7
   152cc:	bl	13f48 <argp_parse@@Base+0x1e14>
   152d0:	uxtb	r7, r0
   152d4:	cmp	r8, #0
   152d8:	movne	r5, r8
   152dc:	bne	152f0 <argp_parse@@Base+0x31bc>
   152e0:	ldr	r3, [sp]
   152e4:	cmp	r3, #0
   152e8:	ldrbne	r5, [r3]
   152ec:	moveq	r5, #0
   152f0:	cmp	r7, #0
   152f4:	uxtbne	r6, r0
   152f8:	bne	1530c <argp_parse@@Base+0x31d8>
   152fc:	ldr	r3, [sp, #4]
   15300:	cmp	r3, #0
   15304:	ldrbne	r6, [r3]
   15308:	moveq	r6, #0
   1530c:	bl	11084 <__ctype_tolower_loc@plt>
   15310:	ldr	r3, [r0]
   15314:	ldr	r4, [r3, r5, lsl #2]
   15318:	ldr	r3, [r3, r6, lsl #2]
   1531c:	subs	r4, r4, r3
   15320:	bne	1523c <argp_parse@@Base+0x3108>
   15324:	subs	r4, r6, r5
   15328:	bne	1523c <argp_parse@@Base+0x3108>
   1532c:	adds	r4, r7, #0
   15330:	movne	r4, #1
   15334:	cmp	r8, #0
   15338:	rsbeq	r4, r4, #0
   1533c:	rsbne	r4, r4, #1
   15340:	cmp	r4, #0
   15344:	bne	1523c <argp_parse@@Base+0x3108>
   15348:	cmp	r8, #0
   1534c:	bne	1523c <argp_parse@@Base+0x3108>
   15350:	ldr	r0, [sp]
   15354:	ldr	r1, [sp, #4]
   15358:	adds	r4, r1, #0
   1535c:	movne	r4, #1
   15360:	cmp	r0, #0
   15364:	rsbeq	r4, r4, #0
   15368:	rsbne	r4, r4, #1
   1536c:	cmp	r4, #0
   15370:	bne	1523c <argp_parse@@Base+0x3108>
   15374:	cmp	r0, #0
   15378:	beq	1523c <argp_parse@@Base+0x3108>
   1537c:	bl	10fe8 <strcasecmp@plt>
   15380:	mov	r4, r0
   15384:	b	1523c <argp_parse@@Base+0x3108>
   15388:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1538c:	strd	r6, [sp, #8]
   15390:	strd	r8, [sp, #16]
   15394:	strd	sl, [sp, #24]
   15398:	str	lr, [sp, #32]
   1539c:	sub	sp, sp, #52	; 0x34
   153a0:	str	r0, [sp, #12]
   153a4:	str	r1, [sp, #4]
   153a8:	ldr	fp, [r0, #16]
   153ac:	ldr	r4, [r0]
   153b0:	mov	r0, #16
   153b4:	bl	13ba4 <argp_parse@@Base+0x1a70>
   153b8:	subs	sl, r0, #0
   153bc:	beq	153ec <argp_parse@@Base+0x32b8>
   153c0:	mov	r3, #0
   153c4:	str	r3, [sl, #4]
   153c8:	str	r3, [sl, #12]
   153cc:	cmp	r4, r3
   153d0:	beq	155f8 <argp_parse@@Base+0x34c4>
   153d4:	ldr	r3, [r4, #12]
   153d8:	tst	r3, #4
   153dc:	bne	1540c <argp_parse@@Base+0x32d8>
   153e0:	add	r5, r4, #24
   153e4:	mov	r6, #0
   153e8:	b	15430 <argp_parse@@Base+0x32fc>
   153ec:	movw	r3, #36172	; 0x8d4c
   153f0:	movt	r3, #1
   153f4:	movw	r2, #450	; 0x1c2
   153f8:	movw	r1, #36412	; 0x8e3c
   153fc:	movt	r1, #1
   15400:	movw	r0, #36424	; 0x8e48
   15404:	movt	r0, #1
   15408:	bl	111c8 <__assert_fail@plt>
   1540c:	movw	r3, #36172	; 0x8d4c
   15410:	movt	r3, #1
   15414:	mov	r2, #460	; 0x1cc
   15418:	movw	r1, #36412	; 0x8e3c
   1541c:	movt	r1, #1
   15420:	movw	r0, #36428	; 0x8e4c
   15424:	movt	r0, #1
   15428:	bl	111c8 <__assert_fail@plt>
   1542c:	add	r5, r5, #24
   15430:	mov	r3, r5
   15434:	ldr	r2, [r5, #-20]	; 0xffffffec
   15438:	cmp	r2, #0
   1543c:	bne	1544c <argp_parse@@Base+0x3318>
   15440:	ldr	r2, [r5, #-24]	; 0xffffffe8
   15444:	cmp	r2, #0
   15448:	beq	1549c <argp_parse@@Base+0x3368>
   1544c:	ldr	r2, [r3, #-12]
   15450:	tst	r2, #4
   15454:	bne	15464 <argp_parse@@Base+0x3330>
   15458:	ldr	r2, [sl, #4]
   1545c:	add	r2, r2, #1
   15460:	str	r2, [sl, #4]
   15464:	ldr	r2, [r3, #-12]
   15468:	tst	r2, #8
   1546c:	bne	1542c <argp_parse@@Base+0x32f8>
   15470:	ldr	r7, [r3, #-20]	; 0xffffffec
   15474:	sub	r3, r7, #1
   15478:	cmp	r3, #254	; 0xfe
   1547c:	bhi	1542c <argp_parse@@Base+0x32f8>
   15480:	bl	110a8 <__ctype_b_loc@plt>
   15484:	ldr	r3, [r0]
   15488:	lsl	r7, r7, #1
   1548c:	ldrh	r3, [r3, r7]
   15490:	tst	r3, #16384	; 0x4000
   15494:	addne	r6, r6, #1
   15498:	b	1542c <argp_parse@@Base+0x32f8>
   1549c:	ldr	r2, [r5, #-8]
   154a0:	cmp	r2, #0
   154a4:	bne	1544c <argp_parse@@Base+0x3318>
   154a8:	ldr	r9, [r5, #-4]
   154ac:	cmp	r9, #0
   154b0:	bne	1544c <argp_parse@@Base+0x3318>
   154b4:	ldr	r0, [sl, #4]
   154b8:	rsb	r0, r0, r0, lsl #3
   154bc:	lsl	r0, r0, #2
   154c0:	bl	13ba4 <argp_parse@@Base+0x1a70>
   154c4:	str	r0, [sl]
   154c8:	add	r0, r6, #1
   154cc:	bl	13ba4 <argp_parse@@Base+0x1a70>
   154d0:	mov	r5, r0
   154d4:	str	r0, [sl, #8]
   154d8:	ldr	r7, [sl]
   154dc:	cmp	r0, #0
   154e0:	cmpne	r7, #0
   154e4:	beq	1550c <argp_parse@@Base+0x33d8>
   154e8:	movw	r3, #37449	; 0x9249
   154ec:	movt	r3, #2340	; 0x924
   154f0:	ldr	r2, [sl, #4]
   154f4:	cmp	r2, r3
   154f8:	bhi	1552c <argp_parse@@Base+0x33f8>
   154fc:	add	r7, r7, #28
   15500:	str	fp, [sp, #8]
   15504:	ldr	fp, [sp, #12]
   15508:	b	15578 <argp_parse@@Base+0x3444>
   1550c:	movw	r3, #36172	; 0x8d4c
   15510:	movt	r3, #1
   15514:	movw	r2, #474	; 0x1da
   15518:	movw	r1, #36412	; 0x8e3c
   1551c:	movt	r1, #1
   15520:	movw	r0, #36444	; 0x8e5c
   15524:	movt	r0, #1
   15528:	bl	111c8 <__assert_fail@plt>
   1552c:	movw	r3, #36172	; 0x8d4c
   15530:	movt	r3, #1
   15534:	mov	r2, #476	; 0x1dc
   15538:	movw	r1, #36412	; 0x8e3c
   1553c:	movt	r1, #1
   15540:	movw	r0, #36480	; 0x8e80
   15544:	movt	r0, #1
   15548:	bl	111c8 <__assert_fail@plt>
   1554c:	ldr	r3, [r4, #4]
   15550:	cmp	r3, #0
   15554:	addeq	r9, r9, #1
   15558:	b	155c0 <argp_parse@@Base+0x348c>
   1555c:	ldr	r3, [r4, #16]
   15560:	cmp	r3, #0
   15564:	bne	15998 <argp_parse@@Base+0x3864>
   15568:	ldr	r3, [r4, #20]
   1556c:	cmp	r3, #0
   15570:	bne	15998 <argp_parse@@Base+0x3864>
   15574:	add	r7, r7, #28
   15578:	ldr	r3, [r4, #4]
   1557c:	cmp	r3, #0
   15580:	bne	15590 <argp_parse@@Base+0x345c>
   15584:	ldr	r3, [r4]
   15588:	cmp	r3, #0
   1558c:	beq	155d4 <argp_parse@@Base+0x34a0>
   15590:	mov	r8, r7
   15594:	str	r4, [r7, #-28]	; 0xffffffe4
   15598:	mov	r3, #0
   1559c:	str	r3, [r7, #-24]	; 0xffffffe8
   155a0:	str	r5, [r7, #-20]	; 0xffffffec
   155a4:	ldr	r3, [r4, #20]
   155a8:	cmp	r3, #0
   155ac:	movne	r9, r3
   155b0:	bne	155c0 <argp_parse@@Base+0x348c>
   155b4:	ldr	r3, [r4]
   155b8:	cmp	r3, #0
   155bc:	beq	1554c <argp_parse@@Base+0x3418>
   155c0:	str	r9, [r8, #-16]
   155c4:	ldr	r3, [sp, #4]
   155c8:	str	r3, [r8, #-12]
   155cc:	str	fp, [r8, #-8]
   155d0:	b	159a4 <argp_parse@@Base+0x3870>
   155d4:	ldr	r3, [r4, #16]
   155d8:	cmp	r3, #0
   155dc:	bne	15590 <argp_parse@@Base+0x345c>
   155e0:	ldr	r3, [r4, #20]
   155e4:	cmp	r3, #0
   155e8:	bne	15590 <argp_parse@@Base+0x345c>
   155ec:	ldr	fp, [sp, #8]
   155f0:	mov	r3, #0
   155f4:	strb	r3, [r5]
   155f8:	cmp	fp, #0
   155fc:	beq	15a1c <argp_parse@@Base+0x38e8>
   15600:	ldr	r3, [fp]
   15604:	cmp	r3, #0
   15608:	beq	15a1c <argp_parse@@Base+0x38e8>
   1560c:	movw	r3, #37449	; 0x9249
   15610:	movt	r3, #2340	; 0x924
   15614:	str	r3, [sp, #32]
   15618:	b	1568c <argp_parse@@Base+0x3558>
   1561c:	ldr	r1, [sp, #4]
   15620:	b	15704 <argp_parse@@Base+0x35d0>
   15624:	mov	r3, r2
   15628:	ldr	r2, [r3, #24]
   1562c:	cmp	r2, #0
   15630:	bne	15624 <argp_parse@@Base+0x34f0>
   15634:	add	r3, r3, #24
   15638:	ldr	r2, [r5, #12]
   1563c:	str	r2, [r3]
   15640:	mov	r1, #0
   15644:	str	r1, [r5, #12]
   15648:	ldr	r3, [r5, #4]
   1564c:	cmp	r3, r1
   15650:	beq	15678 <argp_parse@@Base+0x3544>
   15654:	ldr	r2, [sl, #4]
   15658:	cmp	r2, r1
   1565c:	bne	15724 <argp_parse@@Base+0x35f0>
   15660:	str	r3, [sl, #4]
   15664:	ldr	r3, [r5]
   15668:	str	r3, [sl]
   1566c:	ldr	r3, [r5, #8]
   15670:	str	r3, [sl, #8]
   15674:	str	r1, [r5, #4]
   15678:	mov	r0, r5
   1567c:	bl	13d60 <argp_parse@@Base+0x1c2c>
   15680:	ldr	r3, [fp, #16]!
   15684:	cmp	r3, #0
   15688:	beq	15a1c <argp_parse@@Base+0x38e8>
   1568c:	mov	r5, fp
   15690:	ldr	r6, [fp, #12]
   15694:	cmp	r6, #0
   15698:	bne	156a8 <argp_parse@@Base+0x3574>
   1569c:	ldr	r3, [fp, #8]
   156a0:	cmp	r3, #0
   156a4:	beq	1561c <argp_parse@@Base+0x34e8>
   156a8:	ldr	r7, [r5, #8]
   156ac:	ldr	r8, [sp, #12]
   156b0:	ldr	r4, [r8, #16]
   156b4:	mov	r0, #28
   156b8:	bl	13ba4 <argp_parse@@Base+0x1a70>
   156bc:	subs	r1, r0, #0
   156c0:	beq	15704 <argp_parse@@Base+0x35d0>
   156c4:	str	r6, [r1, #8]
   156c8:	str	r7, [r1]
   156cc:	sub	r4, r5, r4
   156d0:	asr	r4, r4, #4
   156d4:	str	r4, [r1, #4]
   156d8:	ldr	r3, [sp, #4]
   156dc:	str	r3, [r1, #12]
   156e0:	str	r8, [r1, #16]
   156e4:	cmp	r3, #0
   156e8:	ldrne	r3, [r3, #20]
   156ec:	addne	r3, r3, #1
   156f0:	moveq	r3, #0
   156f4:	str	r3, [r1, #20]
   156f8:	ldr	r3, [sl, #12]
   156fc:	str	r3, [r1, #24]
   15700:	str	r1, [sl, #12]
   15704:	ldr	r0, [r5]
   15708:	bl	15388 <argp_parse@@Base+0x3254>
   1570c:	mov	r5, r0
   15710:	ldr	r3, [sl, #12]
   15714:	cmp	r3, #0
   15718:	bne	15628 <argp_parse@@Base+0x34f4>
   1571c:	add	r3, sl, #12
   15720:	b	15638 <argp_parse@@Base+0x3504>
   15724:	add	r3, r3, r2
   15728:	str	r3, [sp, #24]
   1572c:	rsb	r0, r3, r3, lsl #3
   15730:	lsl	r0, r0, #2
   15734:	bl	13ba4 <argp_parse@@Base+0x1a70>
   15738:	mov	r4, r0
   1573c:	str	r0, [sp, #20]
   15740:	ldr	r0, [sl, #8]
   15744:	bl	110cc <strlen@plt>
   15748:	mov	r7, r0
   1574c:	ldr	r0, [r5, #8]
   15750:	bl	110cc <strlen@plt>
   15754:	add	r0, r7, r0
   15758:	add	r0, r0, #1
   1575c:	bl	13ba4 <argp_parse@@Base+0x1a70>
   15760:	mov	r9, r0
   15764:	cmp	r4, #0
   15768:	cmpne	r0, #0
   1576c:	beq	15838 <argp_parse@@Base+0x3704>
   15770:	ldr	r3, [sp, #24]
   15774:	ldr	r2, [sp, #32]
   15778:	cmp	r3, r2
   1577c:	bhi	15854 <argp_parse@@Base+0x3720>
   15780:	ldr	r1, [sl]
   15784:	str	r1, [sp, #28]
   15788:	ldr	r4, [sl, #4]
   1578c:	rsb	r8, r4, r4, lsl #3
   15790:	lsl	r8, r8, #2
   15794:	mov	r2, r8
   15798:	ldr	r0, [sp, #20]
   1579c:	bl	1109c <mempcpy@plt>
   157a0:	ldr	r3, [r5, #4]
   157a4:	str	r3, [sp, #16]
   157a8:	rsb	r2, r3, r3, lsl #3
   157ac:	lsl	r2, r2, #2
   157b0:	ldr	r1, [r5]
   157b4:	bl	10fa0 <memcpy@plt>
   157b8:	ldr	r6, [sl, #8]
   157bc:	mov	r2, r7
   157c0:	mov	r1, r6
   157c4:	mov	r0, r9
   157c8:	bl	10fa0 <memcpy@plt>
   157cc:	cmp	r4, #0
   157d0:	beq	15870 <argp_parse@@Base+0x373c>
   157d4:	ldr	r2, [sp, #20]
   157d8:	ldr	r3, [r2, #8]
   157dc:	sub	r3, r3, r6
   157e0:	add	r3, r9, r3
   157e4:	str	r3, [r2, #8]
   157e8:	add	r2, r2, #28
   157ec:	subs	r4, r4, #1
   157f0:	bne	157d8 <argp_parse@@Base+0x36a4>
   157f4:	ldr	r3, [sp, #20]
   157f8:	add	r4, r3, r8
   157fc:	add	r3, r9, r7
   15800:	str	r3, [sp, #8]
   15804:	ldr	r1, [r5, #8]
   15808:	ldr	r8, [sp, #16]
   1580c:	cmp	r8, #0
   15810:	beq	15914 <argp_parse@@Base+0x37e0>
   15814:	add	r4, r4, #28
   15818:	sub	r2, r3, #1
   1581c:	str	r2, [sp, #16]
   15820:	str	r5, [sp, #36]	; 0x24
   15824:	str	fp, [sp, #40]	; 0x28
   15828:	mov	fp, r3
   1582c:	str	sl, [sp, #44]	; 0x2c
   15830:	mov	sl, r1
   15834:	b	158bc <argp_parse@@Base+0x3788>
   15838:	ldr	r3, [pc, #508]	; 15a3c <argp_parse@@Base+0x3908>
   1583c:	movw	r2, #970	; 0x3ca
   15840:	movw	r1, #36412	; 0x8e3c
   15844:	movt	r1, #1
   15848:	movw	r0, #36540	; 0x8ebc
   1584c:	movt	r0, #1
   15850:	bl	111c8 <__assert_fail@plt>
   15854:	ldr	r3, [pc, #480]	; 15a3c <argp_parse@@Base+0x3908>
   15858:	mov	r2, #972	; 0x3cc
   1585c:	movw	r1, #36412	; 0x8e3c
   15860:	movt	r1, #1
   15864:	movw	r0, #36568	; 0x8ed8
   15868:	movt	r0, #1
   1586c:	bl	111c8 <__assert_fail@plt>
   15870:	ldr	r4, [sp, #20]
   15874:	b	157fc <argp_parse@@Base+0x36c8>
   15878:	ldr	r2, [sp, #8]
   1587c:	cmp	r9, r2
   15880:	bcs	1591c <argp_parse@@Base+0x37e8>
   15884:	ldrb	r2, [r9]
   15888:	cmp	r2, r3
   1588c:	beq	15920 <argp_parse@@Base+0x37ec>
   15890:	mov	r2, r9
   15894:	ldr	r1, [sp, #16]
   15898:	cmp	r1, r2
   1589c:	beq	1591c <argp_parse@@Base+0x37e8>
   158a0:	ldrb	r1, [r2, #1]!
   158a4:	cmp	r1, r3
   158a8:	bne	15894 <argp_parse@@Base+0x3760>
   158ac:	b	15920 <argp_parse@@Base+0x37ec>
   158b0:	add	r4, r4, #28
   158b4:	subs	r8, r8, #1
   158b8:	beq	158d4 <argp_parse@@Base+0x37a0>
   158bc:	str	fp, [r4, #-20]	; 0xffffffec
   158c0:	ldr	r5, [r4, #-24]	; 0xffffffe8
   158c4:	ldr	r6, [r4, #-28]	; 0xffffffe4
   158c8:	cmp	r5, #0
   158cc:	bne	15940 <argp_parse@@Base+0x380c>
   158d0:	b	158b0 <argp_parse@@Base+0x377c>
   158d4:	ldr	r5, [sp, #36]	; 0x24
   158d8:	mov	r3, fp
   158dc:	ldr	fp, [sp, #40]	; 0x28
   158e0:	ldr	sl, [sp, #44]	; 0x2c
   158e4:	mov	r2, #0
   158e8:	strb	r2, [r3]
   158ec:	ldr	r0, [sp, #28]
   158f0:	bl	12e0c <argp_parse@@Base+0xcd8>
   158f4:	ldr	r0, [sl, #8]
   158f8:	bl	12e0c <argp_parse@@Base+0xcd8>
   158fc:	ldr	r3, [sp, #20]
   15900:	str	r3, [sl]
   15904:	ldr	r3, [sp, #24]
   15908:	str	r3, [sl, #4]
   1590c:	str	r9, [sl, #8]
   15910:	b	15678 <argp_parse@@Base+0x3544>
   15914:	ldr	r3, [sp, #8]
   15918:	b	158e4 <argp_parse@@Base+0x37b0>
   1591c:	strb	r3, [fp], #1
   15920:	add	sl, sl, #1
   15924:	b	15934 <argp_parse@@Base+0x3800>
   15928:	ldrb	r3, [sl]
   1592c:	cmp	r3, r7
   15930:	beq	15878 <argp_parse@@Base+0x3744>
   15934:	add	r6, r6, #24
   15938:	subs	r5, r5, #1
   1593c:	beq	158b0 <argp_parse@@Base+0x377c>
   15940:	ldr	r3, [r6, #12]
   15944:	tst	r3, #8
   15948:	bne	15934 <argp_parse@@Base+0x3800>
   1594c:	ldr	r7, [r6, #4]
   15950:	sub	r3, r7, #1
   15954:	cmp	r3, #254	; 0xfe
   15958:	bhi	15934 <argp_parse@@Base+0x3800>
   1595c:	bl	110a8 <__ctype_b_loc@plt>
   15960:	ldr	r2, [r0]
   15964:	lsl	r3, r7, #1
   15968:	ldrh	r3, [r2, r3]
   1596c:	tst	r3, #16384	; 0x4000
   15970:	bne	15928 <argp_parse@@Base+0x37f4>
   15974:	b	15934 <argp_parse@@Base+0x3800>
   15978:	strb	r6, [r5], #1
   1597c:	add	r4, r4, #24
   15980:	ldr	r3, [r4, #4]
   15984:	cmp	r3, #0
   15988:	bne	15998 <argp_parse@@Base+0x3864>
   1598c:	ldr	r3, [r4]
   15990:	cmp	r3, #0
   15994:	beq	1555c <argp_parse@@Base+0x3428>
   15998:	ldr	r3, [r4, #12]
   1599c:	tst	r3, #4
   159a0:	beq	15574 <argp_parse@@Base+0x3440>
   159a4:	ldr	r3, [r8, #-24]	; 0xffffffe8
   159a8:	add	r3, r3, #1
   159ac:	str	r3, [r8, #-24]	; 0xffffffe8
   159b0:	ldr	r3, [r4, #12]
   159b4:	tst	r3, #8
   159b8:	bne	1597c <argp_parse@@Base+0x3848>
   159bc:	ldr	r6, [r4, #4]
   159c0:	sub	r3, r6, #1
   159c4:	cmp	r3, #254	; 0xfe
   159c8:	bhi	1597c <argp_parse@@Base+0x3848>
   159cc:	bl	110a8 <__ctype_b_loc@plt>
   159d0:	ldr	r2, [r0]
   159d4:	lsl	r3, r6, #1
   159d8:	ldrh	r3, [r2, r3]
   159dc:	tst	r3, #16384	; 0x4000
   159e0:	beq	1597c <argp_parse@@Base+0x3848>
   159e4:	uxtb	r6, r6
   159e8:	ldr	r3, [sl, #8]
   159ec:	cmp	r3, r5
   159f0:	bcs	15978 <argp_parse@@Base+0x3844>
   159f4:	ldrb	r2, [r3]
   159f8:	cmp	r2, r6
   159fc:	beq	1597c <argp_parse@@Base+0x3848>
   15a00:	sub	r2, r5, #1
   15a04:	cmp	r3, r2
   15a08:	beq	15978 <argp_parse@@Base+0x3844>
   15a0c:	ldrb	r1, [r3, #1]!
   15a10:	cmp	r1, r6
   15a14:	bne	15a04 <argp_parse@@Base+0x38d0>
   15a18:	b	1597c <argp_parse@@Base+0x3848>
   15a1c:	mov	r0, sl
   15a20:	add	sp, sp, #52	; 0x34
   15a24:	ldrd	r4, [sp]
   15a28:	ldrd	r6, [sp, #8]
   15a2c:	ldrd	r8, [sp, #16]
   15a30:	ldrd	sl, [sp, #24]
   15a34:	add	sp, sp, #32
   15a38:	pop	{pc}		; (ldr pc, [sp], #4)
   15a3c:	andeq	r8, r1, r8, asr sp

00015a40 <argp_failure@@Base>:
   15a40:	push	{r3}		; (str r3, [sp, #-4]!)
   15a44:	strd	r4, [sp, #-20]!	; 0xffffffec
   15a48:	strd	r6, [sp, #8]
   15a4c:	str	lr, [sp, #16]
   15a50:	sub	sp, sp, #200	; 0xc8
   15a54:	mov	r7, r1
   15a58:	mov	r6, r2
   15a5c:	subs	r5, r0, #0
   15a60:	beq	15bbc <argp_failure@@Base+0x17c>
   15a64:	ldr	r3, [r5, #16]
   15a68:	tst	r3, #2
   15a6c:	bne	15ba0 <argp_failure@@Base+0x160>
   15a70:	ldr	r4, [r5, #44]	; 0x2c
   15a74:	cmp	r4, #0
   15a78:	beq	15ba0 <argp_failure@@Base+0x160>
   15a7c:	mov	r0, r4
   15a80:	bl	11168 <flockfile@plt>
   15a84:	ldr	r0, [r5, #40]	; 0x28
   15a88:	mov	r1, r4
   15a8c:	bl	10f28 <fputs_unlocked@plt>
   15a90:	ldr	r3, [sp, #220]	; 0xdc
   15a94:	cmp	r3, #0
   15a98:	beq	15af4 <argp_failure@@Base+0xb4>
   15a9c:	add	r3, sp, #224	; 0xe0
   15aa0:	str	r3, [sp]
   15aa4:	ldr	r3, [r4, #20]
   15aa8:	ldr	r2, [r4, #24]
   15aac:	cmp	r3, r2
   15ab0:	addcc	r2, r3, #1
   15ab4:	strcc	r2, [r4, #20]
   15ab8:	movcc	r2, #58	; 0x3a
   15abc:	strbcc	r2, [r3]
   15ac0:	bcs	15be8 <argp_failure@@Base+0x1a8>
   15ac4:	ldr	r3, [r4, #20]
   15ac8:	ldr	r2, [r4, #24]
   15acc:	cmp	r3, r2
   15ad0:	addcc	r2, r3, #1
   15ad4:	strcc	r2, [r4, #20]
   15ad8:	movcc	r2, #32
   15adc:	strbcc	r2, [r3]
   15ae0:	bcs	15bf8 <argp_failure@@Base+0x1b8>
   15ae4:	ldr	r2, [sp]
   15ae8:	ldr	r1, [sp, #220]	; 0xdc
   15aec:	mov	r0, r4
   15af0:	bl	11144 <vfprintf@plt>
   15af4:	cmp	r6, #0
   15af8:	beq	15b5c <argp_failure@@Base+0x11c>
   15afc:	ldr	r3, [r4, #20]
   15b00:	ldr	r2, [r4, #24]
   15b04:	cmp	r3, r2
   15b08:	addcc	r2, r3, #1
   15b0c:	strcc	r2, [r4, #20]
   15b10:	movcc	r2, #58	; 0x3a
   15b14:	strbcc	r2, [r3]
   15b18:	bcs	15c08 <argp_failure@@Base+0x1c8>
   15b1c:	ldr	r3, [r4, #20]
   15b20:	ldr	r2, [r4, #24]
   15b24:	cmp	r3, r2
   15b28:	addcc	r2, r3, #1
   15b2c:	strcc	r2, [r4, #20]
   15b30:	movcc	r2, #32
   15b34:	strbcc	r2, [r3]
   15b38:	bcs	15c18 <argp_failure@@Base+0x1d8>
   15b3c:	mov	r2, #200	; 0xc8
   15b40:	mov	r1, sp
   15b44:	mov	r0, r6
   15b48:	bl	110fc <strerror_r@plt>
   15b4c:	cmp	r0, #0
   15b50:	beq	15c28 <argp_failure@@Base+0x1e8>
   15b54:	mov	r1, r4
   15b58:	bl	10f28 <fputs_unlocked@plt>
   15b5c:	ldr	r3, [r4, #20]
   15b60:	ldr	r2, [r4, #24]
   15b64:	cmp	r3, r2
   15b68:	addcc	r2, r3, #1
   15b6c:	strcc	r2, [r4, #20]
   15b70:	movcc	r2, #10
   15b74:	strbcc	r2, [r3]
   15b78:	bcs	15c44 <argp_failure@@Base+0x204>
   15b7c:	mov	r0, r4
   15b80:	bl	10ff4 <funlockfile@plt>
   15b84:	cmp	r7, #0
   15b88:	beq	15ba0 <argp_failure@@Base+0x160>
   15b8c:	cmp	r5, #0
   15b90:	beq	15c54 <argp_failure@@Base+0x214>
   15b94:	ldr	r3, [r5, #16]
   15b98:	tst	r3, #32
   15b9c:	beq	15c54 <argp_failure@@Base+0x214>
   15ba0:	add	sp, sp, #200	; 0xc8
   15ba4:	ldrd	r4, [sp]
   15ba8:	ldrd	r6, [sp, #8]
   15bac:	ldr	lr, [sp, #16]
   15bb0:	add	sp, sp, #20
   15bb4:	add	sp, sp, #4
   15bb8:	bx	lr
   15bbc:	movw	r3, #41560	; 0xa258
   15bc0:	movt	r3, #2
   15bc4:	ldr	r4, [r3]
   15bc8:	cmp	r4, #0
   15bcc:	beq	15ba0 <argp_failure@@Base+0x160>
   15bd0:	mov	r0, r4
   15bd4:	bl	11168 <flockfile@plt>
   15bd8:	movw	r3, #41552	; 0xa250
   15bdc:	movt	r3, #2
   15be0:	ldr	r0, [r3]
   15be4:	b	15a88 <argp_failure@@Base+0x48>
   15be8:	mov	r1, #58	; 0x3a
   15bec:	mov	r0, r4
   15bf0:	bl	1112c <__overflow@plt>
   15bf4:	b	15ac4 <argp_failure@@Base+0x84>
   15bf8:	mov	r1, #32
   15bfc:	mov	r0, r4
   15c00:	bl	1112c <__overflow@plt>
   15c04:	b	15ae4 <argp_failure@@Base+0xa4>
   15c08:	mov	r1, #58	; 0x3a
   15c0c:	mov	r0, r4
   15c10:	bl	1112c <__overflow@plt>
   15c14:	b	15b1c <argp_failure@@Base+0xdc>
   15c18:	mov	r1, #32
   15c1c:	mov	r0, r4
   15c20:	bl	1112c <__overflow@plt>
   15c24:	b	15b3c <argp_failure@@Base+0xfc>
   15c28:	mov	r0, r6
   15c2c:	bl	11060 <strerror@plt>
   15c30:	movw	r3, #36620	; 0x8f0c
   15c34:	movt	r3, #1
   15c38:	cmp	r0, #0
   15c3c:	moveq	r0, r3
   15c40:	b	15b54 <argp_failure@@Base+0x114>
   15c44:	mov	r1, #10
   15c48:	mov	r0, r4
   15c4c:	bl	1112c <__overflow@plt>
   15c50:	b	15b7c <argp_failure@@Base+0x13c>
   15c54:	mov	r0, r7
   15c58:	bl	110b4 <exit@plt>
   15c5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15c60:	strd	r6, [sp, #8]
   15c64:	strd	r8, [sp, #16]
   15c68:	strd	sl, [sp, #24]
   15c6c:	str	lr, [sp, #32]
   15c70:	add	fp, sp, #32
   15c74:	sub	sp, sp, #124	; 0x7c
   15c78:	str	r0, [fp, #-108]	; 0xffffff94
   15c7c:	str	r1, [fp, #-104]	; 0xffffff98
   15c80:	str	r3, [fp, #-100]	; 0xffffff9c
   15c84:	subs	r3, r2, #0
   15c88:	str	r3, [fp, #-132]	; 0xffffff7c
   15c8c:	beq	16c74 <argp_failure@@Base+0x1234>
   15c90:	mov	r0, r3
   15c94:	bl	11168 <flockfile@plt>
   15c98:	movw	r3, #41492	; 0xa214
   15c9c:	movt	r3, #2
   15ca0:	ldr	r9, [r3, #36]	; 0x24
   15ca4:	cmp	r9, #0
   15ca8:	beq	15d80 <argp_failure@@Base+0x340>
   15cac:	movw	r2, #41492	; 0xa214
   15cb0:	movt	r2, #2
   15cb4:	mov	r3, #0
   15cb8:	ldr	r2, [r2, #32]
   15cbc:	mov	r1, r3
   15cc0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15cc4:	bl	17d68 <argp_error@@Base+0xe40>
   15cc8:	subs	sl, r0, #0
   15ccc:	beq	1615c <argp_failure@@Base+0x71c>
   15cd0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15cd4:	tst	r3, #11
   15cd8:	moveq	r3, #0
   15cdc:	streq	r3, [fp, #-128]	; 0xffffff80
   15ce0:	bne	16168 <argp_failure@@Base+0x728>
   15ce4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ce8:	tst	r3, #3
   15cec:	moveq	r4, #0
   15cf0:	bne	161f8 <argp_failure@@Base+0x7b8>
   15cf4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15cf8:	tst	r3, #16
   15cfc:	bne	1641c <argp_failure@@Base+0x9dc>
   15d00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d04:	tst	r3, #4
   15d08:	bne	16444 <argp_failure@@Base+0xa04>
   15d0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d10:	tst	r3, #8
   15d14:	beq	16c00 <argp_failure@@Base+0x11c0>
   15d18:	ldr	r3, [fp, #-128]	; 0xffffff80
   15d1c:	ldr	r3, [r3, #4]
   15d20:	cmp	r3, #0
   15d24:	beq	16c00 <argp_failure@@Base+0x11c0>
   15d28:	cmp	r4, #0
   15d2c:	bne	16464 <argp_failure@@Base+0xa24>
   15d30:	mov	r3, #0
   15d34:	str	r3, [fp, #-88]	; 0xffffffa8
   15d38:	str	r3, [fp, #-84]	; 0xffffffac
   15d3c:	str	r3, [fp, #-80]	; 0xffffffb0
   15d40:	ldr	r3, [fp, #-128]	; 0xffffff80
   15d44:	ldr	r9, [r3]
   15d48:	ldr	r3, [r3, #4]
   15d4c:	str	r3, [fp, #-116]	; 0xffffff8c
   15d50:	cmp	r3, #0
   15d54:	beq	16bfc <argp_failure@@Base+0x11bc>
   15d58:	movw	r3, #41492	; 0xa214
   15d5c:	movt	r3, #2
   15d60:	str	r3, [fp, #-96]	; 0xffffffa0
   15d64:	movw	r3, #36936	; 0x9048
   15d68:	movt	r3, #1
   15d6c:	str	r3, [fp, #-140]	; 0xffffff74
   15d70:	movw	r3, #34968	; 0x8898
   15d74:	movt	r3, #1
   15d78:	str	r3, [fp, #-144]	; 0xffffff70
   15d7c:	b	16a7c <argp_failure@@Base+0x103c>
   15d80:	movw	r0, #36644	; 0x8f24
   15d84:	movt	r0, #1
   15d88:	bl	11030 <getenv@plt>
   15d8c:	movw	r1, #41492	; 0xa214
   15d90:	movt	r1, #2
   15d94:	ldrd	r2, [r1]
   15d98:	strd	r2, [fp, #-76]	; 0xffffffb4
   15d9c:	ldrd	r2, [r1, #8]
   15da0:	strd	r2, [fp, #-68]	; 0xffffffbc
   15da4:	ldrd	r2, [r1, #16]
   15da8:	strd	r2, [fp, #-60]	; 0xffffffc4
   15dac:	ldrd	r2, [r1, #24]
   15db0:	strd	r2, [fp, #-52]	; 0xffffffcc
   15db4:	ldrd	r2, [r1, #32]
   15db8:	strd	r2, [fp, #-44]	; 0xffffffd4
   15dbc:	subs	r6, r0, #0
   15dc0:	beq	15cac <argp_failure@@Base+0x26c>
   15dc4:	movw	sl, #36172	; 0x8d4c
   15dc8:	movt	sl, #1
   15dcc:	add	r8, sl, #168	; 0xa8
   15dd0:	b	1602c <argp_failure@@Base+0x5ec>
   15dd4:	cmp	r0, #45	; 0x2d
   15dd8:	cmpne	r0, #95	; 0x5f
   15ddc:	moveq	r3, #1
   15de0:	movne	r3, #0
   15de4:	ubfx	r1, r1, #3, #1
   15de8:	orrs	r3, r3, r1
   15dec:	beq	16dd8 <argp_failure@@Base+0x1398>
   15df0:	mov	r4, r6
   15df4:	ldrb	r3, [r4, #1]!
   15df8:	lsl	r1, r3, #1
   15dfc:	ldrh	r1, [r2, r1]
   15e00:	ubfx	r1, r1, #3, #1
   15e04:	cmp	r3, #95	; 0x5f
   15e08:	cmpne	r3, #45	; 0x2d
   15e0c:	moveq	r3, #1
   15e10:	movne	r3, #0
   15e14:	orrs	r3, r1, r3
   15e18:	bne	15df4 <argp_failure@@Base+0x3b4>
   15e1c:	sub	r7, r4, r6
   15e20:	ldrb	r3, [r4]
   15e24:	lsl	r1, r3, #1
   15e28:	ldrh	r1, [r2, r1]
   15e2c:	tst	r1, #8192	; 0x2000
   15e30:	beq	15e48 <argp_failure@@Base+0x408>
   15e34:	ldrb	r3, [r4, #1]!
   15e38:	lsl	r1, r3, #1
   15e3c:	ldrh	r1, [r2, r1]
   15e40:	tst	r1, #8192	; 0x2000
   15e44:	bne	15e34 <argp_failure@@Base+0x3f4>
   15e48:	cmp	r3, #44	; 0x2c
   15e4c:	cmpne	r3, #0
   15e50:	beq	15eb4 <argp_failure@@Base+0x474>
   15e54:	cmp	r3, #61	; 0x3d
   15e58:	beq	15e80 <argp_failure@@Base+0x440>
   15e5c:	ldrb	r3, [r4]
   15e60:	lsl	r3, r3, #1
   15e64:	ldrh	r3, [r2, r3]
   15e68:	tst	r3, #2048	; 0x800
   15e6c:	streq	r9, [fp, #-96]	; 0xffffffa0
   15e70:	streq	r9, [fp, #-112]	; 0xffffff90
   15e74:	bne	15f18 <argp_failure@@Base+0x4d8>
   15e78:	add	r5, sl, #24
   15e7c:	b	15fc0 <argp_failure@@Base+0x580>
   15e80:	add	r1, r4, #1
   15e84:	ldrb	r3, [r4, #1]
   15e88:	lsl	r3, r3, #1
   15e8c:	ldrh	r3, [r2, r3]
   15e90:	tst	r3, #8192	; 0x2000
   15e94:	beq	15f10 <argp_failure@@Base+0x4d0>
   15e98:	ldrb	r3, [r1, #1]!
   15e9c:	lsl	r3, r3, #1
   15ea0:	ldrh	r3, [r2, r3]
   15ea4:	tst	r3, #8192	; 0x2000
   15ea8:	bne	15e98 <argp_failure@@Base+0x458>
   15eac:	mov	r4, r1
   15eb0:	b	15e5c <argp_failure@@Base+0x41c>
   15eb4:	cmp	r0, #110	; 0x6e
   15eb8:	movne	r3, #1
   15ebc:	strne	r3, [fp, #-96]	; 0xffffffa0
   15ec0:	strne	r3, [fp, #-112]	; 0xffffff90
   15ec4:	bne	15e78 <argp_failure@@Base+0x438>
   15ec8:	ldrb	r3, [r6, #1]
   15ecc:	cmp	r3, #111	; 0x6f
   15ed0:	movne	r3, #1
   15ed4:	strne	r3, [fp, #-96]	; 0xffffffa0
   15ed8:	strne	r3, [fp, #-112]	; 0xffffff90
   15edc:	bne	15e78 <argp_failure@@Base+0x438>
   15ee0:	ldrb	r3, [r6, #2]
   15ee4:	cmp	r3, #45	; 0x2d
   15ee8:	movne	r3, #1
   15eec:	strne	r3, [fp, #-96]	; 0xffffffa0
   15ef0:	strne	r3, [fp, #-112]	; 0xffffff90
   15ef4:	bne	15e78 <argp_failure@@Base+0x438>
   15ef8:	add	r6, r6, #3
   15efc:	sub	r7, r7, #3
   15f00:	str	r9, [fp, #-112]	; 0xffffff90
   15f04:	mov	r3, #1
   15f08:	str	r3, [fp, #-96]	; 0xffffffa0
   15f0c:	b	15e78 <argp_failure@@Base+0x438>
   15f10:	mov	r4, r1
   15f14:	b	15e5c <argp_failure@@Base+0x41c>
   15f18:	mov	r2, #10
   15f1c:	mov	r1, #0
   15f20:	mov	r0, r4
   15f24:	bl	10f4c <strtol@plt>
   15f28:	str	r0, [fp, #-112]	; 0xffffff90
   15f2c:	ldr	r2, [r5]
   15f30:	ldrb	r3, [r4]
   15f34:	lsl	r3, r3, #1
   15f38:	ldrh	r3, [r2, r3]
   15f3c:	tst	r3, #2048	; 0x800
   15f40:	beq	15f58 <argp_failure@@Base+0x518>
   15f44:	ldrb	r3, [r4, #1]!
   15f48:	lsl	r3, r3, #1
   15f4c:	ldrh	r3, [r2, r3]
   15f50:	tst	r3, #2048	; 0x800
   15f54:	bne	15f44 <argp_failure@@Base+0x504>
   15f58:	ldrb	r3, [r4]
   15f5c:	lsl	r3, r3, #1
   15f60:	ldrh	r3, [r2, r3]
   15f64:	tst	r3, #8192	; 0x2000
   15f68:	beq	15f88 <argp_failure@@Base+0x548>
   15f6c:	ldrb	r3, [r4, #1]!
   15f70:	lsl	r3, r3, #1
   15f74:	ldrh	r3, [r2, r3]
   15f78:	tst	r3, #8192	; 0x2000
   15f7c:	bne	15f6c <argp_failure@@Base+0x52c>
   15f80:	str	r9, [fp, #-96]	; 0xffffffa0
   15f84:	b	15e78 <argp_failure@@Base+0x438>
   15f88:	str	r9, [fp, #-96]	; 0xffffffa0
   15f8c:	b	15e78 <argp_failure@@Base+0x438>
   15f90:	str	r6, [sp, #4]
   15f94:	str	r7, [sp]
   15f98:	movw	r3, #36660	; 0x8f34
   15f9c:	movt	r3, #1
   15fa0:	mov	r2, #0
   15fa4:	mov	r1, r2
   15fa8:	ldr	r0, [fp, #-104]	; 0xffffff98
   15fac:	bl	15a40 <argp_failure@@Base>
   15fb0:	b	16014 <argp_failure@@Base+0x5d4>
   15fb4:	add	r5, r5, #16
   15fb8:	cmp	r5, r8
   15fbc:	beq	160fc <argp_failure@@Base+0x6bc>
   15fc0:	mov	r0, r5
   15fc4:	bl	110cc <strlen@plt>
   15fc8:	cmp	r0, r7
   15fcc:	bne	15fb4 <argp_failure@@Base+0x574>
   15fd0:	mov	r2, r7
   15fd4:	mov	r1, r5
   15fd8:	mov	r0, r6
   15fdc:	bl	111b0 <strncmp@plt>
   15fe0:	cmp	r0, #0
   15fe4:	bne	15fb4 <argp_failure@@Base+0x574>
   15fe8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15fec:	cmp	r3, #0
   15ff0:	beq	16000 <argp_failure@@Base+0x5c0>
   15ff4:	ldrb	r3, [r5, #14]
   15ff8:	cmp	r3, #0
   15ffc:	beq	15f90 <argp_failure@@Base+0x550>
   16000:	ldrb	r3, [r5, #15]
   16004:	sub	r2, fp, #36	; 0x24
   16008:	add	r3, r2, r3
   1600c:	ldr	r2, [fp, #-112]	; 0xffffff90
   16010:	str	r2, [r3, #-40]	; 0xffffffd8
   16014:	cmp	r5, r8
   16018:	beq	160fc <argp_failure@@Base+0x6bc>
   1601c:	ldrb	r3, [r4]
   16020:	cmp	r3, #44	; 0x2c
   16024:	addeq	r6, r4, #1
   16028:	movne	r6, r4
   1602c:	ldrb	r3, [r6]
   16030:	cmp	r3, #0
   16034:	beq	1608c <argp_failure@@Base+0x64c>
   16038:	bl	110a8 <__ctype_b_loc@plt>
   1603c:	mov	r5, r0
   16040:	ldr	r2, [r0]
   16044:	mov	r3, r6
   16048:	mov	r6, r3
   1604c:	ldrb	r0, [r3], #1
   16050:	lsl	r1, r0, #1
   16054:	ldrh	r1, [r2, r1]
   16058:	tst	r1, #8192	; 0x2000
   1605c:	bne	16048 <argp_failure@@Base+0x608>
   16060:	tst	r1, #1024	; 0x400
   16064:	bne	15dd4 <argp_failure@@Base+0x394>
   16068:	cmp	r0, #0
   1606c:	beq	1602c <argp_failure@@Base+0x5ec>
   16070:	str	r6, [sp]
   16074:	movw	r3, #36748	; 0x8f8c
   16078:	movt	r3, #1
   1607c:	mov	r2, #0
   16080:	mov	r1, r2
   16084:	ldr	r0, [fp, #-104]	; 0xffffff98
   16088:	bl	15a40 <argp_failure@@Base>
   1608c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16090:	ldr	r3, [pc, #3488]	; 16e38 <argp_failure@@Base+0x13f8>
   16094:	add	r1, r3, #144	; 0x90
   16098:	add	r3, r3, #16
   1609c:	cmp	r3, r1
   160a0:	beq	16120 <argp_failure@@Base+0x6e0>
   160a4:	ldrb	r2, [r3, #14]
   160a8:	cmp	r2, #0
   160ac:	bne	16098 <argp_failure@@Base+0x658>
   160b0:	ldrb	r2, [r3, #15]
   160b4:	cmp	r2, #32
   160b8:	beq	16098 <argp_failure@@Base+0x658>
   160bc:	sub	ip, fp, #36	; 0x24
   160c0:	add	r2, ip, r2
   160c4:	ldr	r2, [r2, #-40]	; 0xffffffd8
   160c8:	cmp	r2, r0
   160cc:	blt	16098 <argp_failure@@Base+0x658>
   160d0:	str	r3, [sp, #4]
   160d4:	movw	r3, #36832	; 0x8fe0
   160d8:	movt	r3, #1
   160dc:	str	r3, [sp]
   160e0:	movw	r3, #36780	; 0x8fac
   160e4:	movt	r3, #1
   160e8:	mov	r2, #0
   160ec:	mov	r1, r2
   160f0:	ldr	r0, [fp, #-104]	; 0xffffff98
   160f4:	bl	15a40 <argp_failure@@Base>
   160f8:	b	15cac <argp_failure@@Base+0x26c>
   160fc:	str	r6, [sp, #4]
   16100:	str	r7, [sp]
   16104:	movw	r3, #36708	; 0x8f64
   16108:	movt	r3, #1
   1610c:	mov	r2, #0
   16110:	mov	r1, r2
   16114:	ldr	r0, [fp, #-104]	; 0xffffff98
   16118:	bl	15a40 <argp_failure@@Base>
   1611c:	b	1601c <argp_failure@@Base+0x5dc>
   16120:	movw	r1, #41492	; 0xa214
   16124:	movt	r1, #2
   16128:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1612c:	strd	r2, [r1]
   16130:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16134:	strd	r2, [r1, #8]
   16138:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1613c:	strd	r2, [r1, #16]
   16140:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   16144:	strd	r2, [r1, #24]
   16148:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1614c:	strd	r2, [r1, #32]
   16150:	mov	r3, #1
   16154:	str	r3, [r1, #36]	; 0x24
   16158:	b	15cac <argp_failure@@Base+0x26c>
   1615c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16160:	bl	10ff4 <funlockfile@plt>
   16164:	b	16c74 <argp_failure@@Base+0x1234>
   16168:	mov	r1, #0
   1616c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16170:	bl	15388 <argp_parse@@Base+0x3254>
   16174:	str	r0, [fp, #-128]	; 0xffffff80
   16178:	movw	r1, #35048	; 0x88e8
   1617c:	movt	r1, #1
   16180:	bl	13dc8 <argp_parse@@Base+0x1c94>
   16184:	cmp	r0, #0
   16188:	mvnne	r3, #0
   1618c:	strne	r3, [r0, #12]
   16190:	movw	r1, #35016	; 0x88c8
   16194:	movt	r1, #1
   16198:	ldr	r0, [fp, #-128]	; 0xffffff80
   1619c:	bl	13dc8 <argp_parse@@Base+0x1c94>
   161a0:	cmp	r0, #0
   161a4:	mvnne	r3, #0
   161a8:	strne	r3, [r0, #12]
   161ac:	ldr	r0, [fp, #-128]	; 0xffffff80
   161b0:	ldr	r3, [r0, #4]
   161b4:	cmp	r3, #0
   161b8:	beq	15ce4 <argp_failure@@Base+0x2a4>
   161bc:	ldr	r2, [r0]
   161c0:	mov	r3, #0
   161c4:	str	r3, [r2, #24]
   161c8:	add	r3, r3, #1
   161cc:	add	r2, r2, #28
   161d0:	ldr	r1, [r0, #4]
   161d4:	cmp	r3, r1
   161d8:	bcc	161c4 <argp_failure@@Base+0x784>
   161dc:	movw	r3, #20600	; 0x5078
   161e0:	movt	r3, #1
   161e4:	mov	r2, #28
   161e8:	ldr	r0, [fp, #-128]	; 0xffffff80
   161ec:	ldr	r0, [r0]
   161f0:	bl	1118c <qsort@plt>
   161f4:	b	15ce4 <argp_failure@@Base+0x2a4>
   161f8:	ldr	r0, [fp, #-108]	; 0xffffff94
   161fc:	bl	13e7c <argp_parse@@Base+0x1d48>
   16200:	mov	r2, r0
   16204:	add	r3, r0, #7
   16208:	bic	r3, r3, #7
   1620c:	sub	sp, sp, r3
   16210:	add	r9, sp, #8
   16214:	mov	r1, #0
   16218:	mov	r0, r9
   1621c:	bl	11108 <memset@plt>
   16220:	mov	r5, #1
   16224:	movw	r4, #41492	; 0xa214
   16228:	movt	r4, #2
   1622c:	movw	r3, #36856	; 0x8ff8
   16230:	movt	r3, #1
   16234:	str	r3, [fp, #-116]	; 0xffffff8c
   16238:	movw	r8, #36848	; 0x8ff0
   1623c:	movt	r8, #1
   16240:	str	r9, [fp, #-96]	; 0xffffffa0
   16244:	ldr	r9, [fp, #-128]	; 0xffffff80
   16248:	str	r8, [fp, #-112]	; 0xffffff90
   1624c:	ldr	r8, [fp, #-100]	; 0xffffff9c
   16250:	b	16300 <argp_failure@@Base+0x8c0>
   16254:	mov	r0, sl
   16258:	bl	17e00 <argp_error@@Base+0xed8>
   1625c:	b	1631c <argp_failure@@Base+0x8dc>
   16260:	mov	r0, sl
   16264:	bl	17e00 <argp_error@@Base+0xed8>
   16268:	b	16368 <argp_failure@@Base+0x928>
   1626c:	mov	r1, sl
   16270:	mov	r0, r9
   16274:	bl	14050 <argp_parse@@Base+0x1f1c>
   16278:	orr	r8, r8, #2
   1627c:	str	sl, [sp]
   16280:	mov	r3, #1
   16284:	sub	r2, fp, #76	; 0x4c
   16288:	ldr	r1, [fp, #-104]	; 0xffffff98
   1628c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16290:	bl	144bc <argp_parse@@Base+0x2388>
   16294:	mov	r6, r0
   16298:	ldr	r3, [sl, #28]
   1629c:	ldr	r2, [sl, #24]
   162a0:	sub	r3, r3, r2
   162a4:	ldr	r2, [sl, #16]
   162a8:	cmp	r3, r2
   162ac:	bhi	163e0 <argp_failure@@Base+0x9a0>
   162b0:	str	r7, [sl, #12]
   162b4:	ldr	r3, [sl, #28]
   162b8:	ldr	r2, [sl, #24]
   162bc:	sub	r3, r3, r2
   162c0:	ldr	r2, [sl, #16]
   162c4:	cmp	r3, r2
   162c8:	bhi	163ec <argp_failure@@Base+0x9ac>
   162cc:	str	r5, [sl, #4]
   162d0:	ldr	r2, [sl, #28]
   162d4:	ldr	r3, [sl, #32]
   162d8:	cmp	r2, r3
   162dc:	bcs	163f8 <argp_failure@@Base+0x9b8>
   162e0:	ldr	r3, [sl, #28]
   162e4:	add	r2, r3, #1
   162e8:	str	r2, [sl, #28]
   162ec:	mov	r2, #10
   162f0:	strb	r2, [r3]
   162f4:	mov	r5, #0
   162f8:	cmp	r6, r5
   162fc:	beq	16410 <argp_failure@@Base+0x9d0>
   16300:	ldr	r6, [r4, #28]
   16304:	ldr	r3, [sl, #28]
   16308:	ldr	r2, [sl, #24]
   1630c:	sub	r3, r3, r2
   16310:	ldr	r2, [sl, #16]
   16314:	cmp	r3, r2
   16318:	bhi	16254 <argp_failure@@Base+0x814>
   1631c:	ldr	r7, [sl, #12]
   16320:	str	r6, [sl, #12]
   16324:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16328:	str	r3, [fp, #-76]	; 0xffffffb4
   1632c:	cmp	r5, #0
   16330:	ldr	r3, [fp, #4]
   16334:	movwne	r2, #36840	; 0x8fe8
   16338:	movtne	r2, #1
   1633c:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   16340:	ldr	r1, [fp, #-112]	; 0xffffff90
   16344:	mov	r0, sl
   16348:	bl	18478 <argp_error@@Base+0x1550>
   1634c:	ldr	r6, [r4, #28]
   16350:	ldr	r3, [sl, #28]
   16354:	ldr	r2, [sl, #24]
   16358:	sub	r3, r3, r2
   1635c:	ldr	r2, [sl, #16]
   16360:	cmp	r3, r2
   16364:	bhi	16260 <argp_failure@@Base+0x820>
   16368:	ldr	r5, [sl, #4]
   1636c:	str	r6, [sl, #4]
   16370:	tst	r8, #2
   16374:	beq	1626c <argp_failure@@Base+0x82c>
   16378:	ldr	r3, [r9, #4]
   1637c:	cmp	r3, #0
   16380:	beq	1627c <argp_failure@@Base+0x83c>
   16384:	ldr	r3, [sl, #28]
   16388:	add	r3, r3, #12
   1638c:	ldr	r2, [sl, #32]
   16390:	cmp	r2, r3
   16394:	bcs	163ac <argp_failure@@Base+0x96c>
   16398:	mov	r1, #12
   1639c:	mov	r0, sl
   163a0:	bl	18378 <argp_error@@Base+0x1450>
   163a4:	cmp	r0, #0
   163a8:	beq	1627c <argp_failure@@Base+0x83c>
   163ac:	ldr	r2, [sl, #28]
   163b0:	movw	r3, #36864	; 0x9000
   163b4:	movt	r3, #1
   163b8:	ldr	r0, [r3]
   163bc:	ldr	r1, [r3, #4]
   163c0:	str	r0, [r2]
   163c4:	str	r1, [r2, #4]
   163c8:	ldr	r3, [r3, #8]
   163cc:	str	r3, [r2, #8]
   163d0:	ldr	r3, [sl, #28]
   163d4:	add	r3, r3, #12
   163d8:	str	r3, [sl, #28]
   163dc:	b	1627c <argp_failure@@Base+0x83c>
   163e0:	mov	r0, sl
   163e4:	bl	17e00 <argp_error@@Base+0xed8>
   163e8:	b	162b0 <argp_failure@@Base+0x870>
   163ec:	mov	r0, sl
   163f0:	bl	17e00 <argp_error@@Base+0xed8>
   163f4:	b	162cc <argp_failure@@Base+0x88c>
   163f8:	mov	r1, #1
   163fc:	mov	r0, sl
   16400:	bl	18378 <argp_error@@Base+0x1450>
   16404:	cmp	r0, #0
   16408:	bne	162e0 <argp_failure@@Base+0x8a0>
   1640c:	b	162f4 <argp_failure@@Base+0x8b4>
   16410:	str	r8, [fp, #-100]	; 0xffffff9c
   16414:	mov	r4, #1
   16418:	b	15cf4 <argp_failure@@Base+0x2b4>
   1641c:	str	sl, [sp, #4]
   16420:	mov	r3, #1
   16424:	str	r3, [sp]
   16428:	mov	r3, #0
   1642c:	mov	r2, r3
   16430:	ldr	r1, [fp, #-104]	; 0xffffff98
   16434:	ldr	r0, [fp, #-108]	; 0xffffff94
   16438:	bl	14a6c <argp_parse@@Base+0x2938>
   1643c:	orr	r4, r4, r0
   16440:	b	15d00 <argp_failure@@Base+0x2c0>
   16444:	ldr	r3, [fp, #4]
   16448:	mov	r2, r3
   1644c:	movw	r1, #36880	; 0x9010
   16450:	movt	r1, #1
   16454:	mov	r0, sl
   16458:	bl	18478 <argp_error@@Base+0x1550>
   1645c:	mov	r4, #1
   16460:	b	15d0c <argp_failure@@Base+0x2cc>
   16464:	ldr	r2, [sl, #28]
   16468:	ldr	r3, [sl, #32]
   1646c:	cmp	r2, r3
   16470:	bcs	1648c <argp_failure@@Base+0xa4c>
   16474:	ldr	r3, [sl, #28]
   16478:	add	r2, r3, #1
   1647c:	str	r2, [sl, #28]
   16480:	mov	r2, #10
   16484:	strb	r2, [r3]
   16488:	b	15d30 <argp_failure@@Base+0x2f0>
   1648c:	mov	r1, #1
   16490:	mov	r0, sl
   16494:	bl	18378 <argp_error@@Base+0x1450>
   16498:	cmp	r0, #0
   1649c:	bne	16474 <argp_failure@@Base+0xa34>
   164a0:	b	15d30 <argp_failure@@Base+0x2f0>
   164a4:	mov	r0, sl
   164a8:	bl	17e00 <argp_error@@Base+0xed8>
   164ac:	b	16a9c <argp_failure@@Base+0x105c>
   164b0:	add	r3, r3, #24
   164b4:	subs	r2, r2, #1
   164b8:	beq	164dc <argp_failure@@Base+0xa9c>
   164bc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   164c0:	cmp	r1, #0
   164c4:	beq	164b0 <argp_failure@@Base+0xa70>
   164c8:	ldr	r1, [r3, #-12]
   164cc:	tst	r1, #2
   164d0:	bne	164b0 <argp_failure@@Base+0xa70>
   164d4:	mov	r3, #1
   164d8:	str	r3, [fp, #-112]	; 0xffffff90
   164dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164e0:	ldr	r5, [r3, #8]
   164e4:	ldr	r3, [sl, #28]
   164e8:	ldr	r2, [sl, #24]
   164ec:	sub	r3, r3, r2
   164f0:	ldr	r2, [sl, #16]
   164f4:	cmp	r3, r2
   164f8:	bhi	16518 <argp_failure@@Base+0xad8>
   164fc:	str	r5, [sl, #12]
   16500:	ldr	r6, [r9, #4]
   16504:	cmp	r6, #0
   16508:	beq	16618 <argp_failure@@Base+0xbd8>
   1650c:	mov	r5, r4
   16510:	str	r9, [fp, #-136]	; 0xffffff78
   16514:	b	16e00 <argp_failure@@Base+0x13c0>
   16518:	mov	r0, sl
   1651c:	bl	17e00 <argp_error@@Base+0xed8>
   16520:	b	164fc <argp_failure@@Base+0xabc>
   16524:	tst	r9, #2
   16528:	beq	16534 <argp_failure@@Base+0xaf4>
   1652c:	add	r8, r8, #1
   16530:	b	16df4 <argp_failure@@Base+0x13b4>
   16534:	sub	r1, fp, #76	; 0x4c
   16538:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1653c:	ldr	r0, [r3, #8]
   16540:	bl	148c8 <argp_parse@@Base+0x2794>
   16544:	ldr	r2, [sl, #28]
   16548:	ldr	r3, [sl, #32]
   1654c:	cmp	r2, r3
   16550:	bcs	165d0 <argp_failure@@Base+0xb90>
   16554:	ldr	r3, [sl, #28]
   16558:	add	r2, r3, #1
   1655c:	str	r2, [sl, #28]
   16560:	mov	r2, #45	; 0x2d
   16564:	strb	r2, [r3]
   16568:	ldrb	r7, [r8]
   1656c:	ldr	r2, [sl, #28]
   16570:	ldr	r3, [sl, #32]
   16574:	cmp	r2, r3
   16578:	bcs	165e8 <argp_failure@@Base+0xba8>
   1657c:	ldr	r3, [sl, #28]
   16580:	add	r2, r3, #1
   16584:	str	r2, [sl, #28]
   16588:	strb	r7, [r3]
   1658c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16590:	cmp	r3, #0
   16594:	beq	165a8 <argp_failure@@Base+0xb68>
   16598:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1659c:	ldr	r3, [r3]
   165a0:	cmp	r3, #0
   165a4:	beq	16600 <argp_failure@@Base+0xbc0>
   165a8:	ldr	r2, [r4, #8]
   165ac:	cmp	r2, #0
   165b0:	beq	1652c <argp_failure@@Base+0xaec>
   165b4:	ldr	r3, [r4, #12]
   165b8:	tst	r3, #1
   165bc:	ldrne	r1, [fp, #-140]	; 0xffffff74
   165c0:	ldreq	r1, [fp, #-144]	; 0xffffff70
   165c4:	mov	r0, sl
   165c8:	bl	18478 <argp_error@@Base+0x1550>
   165cc:	b	1652c <argp_failure@@Base+0xaec>
   165d0:	mov	r1, #1
   165d4:	mov	r0, sl
   165d8:	bl	18378 <argp_error@@Base+0x1450>
   165dc:	cmp	r0, #0
   165e0:	bne	16554 <argp_failure@@Base+0xb14>
   165e4:	b	16568 <argp_failure@@Base+0xb28>
   165e8:	mov	r1, #1
   165ec:	mov	r0, sl
   165f0:	bl	18378 <argp_error@@Base+0x1450>
   165f4:	cmp	r0, #0
   165f8:	bne	1657c <argp_failure@@Base+0xb3c>
   165fc:	b	1658c <argp_failure@@Base+0xb4c>
   16600:	ldr	r3, [r4, #8]
   16604:	cmp	r3, #0
   16608:	movne	r3, #1
   1660c:	strne	r3, [fp, #-80]	; 0xffffffb0
   16610:	b	1652c <argp_failure@@Base+0xaec>
   16614:	ldr	r9, [fp, #-136]	; 0xffffff78
   16618:	ldr	r3, [r4, #12]
   1661c:	tst	r3, #8
   16620:	beq	166f8 <argp_failure@@Base+0xcb8>
   16624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16628:	ldr	r5, [r3, #16]
   1662c:	ldr	r3, [sl, #28]
   16630:	ldr	r2, [sl, #24]
   16634:	sub	r3, r3, r2
   16638:	ldr	r2, [sl, #16]
   1663c:	cmp	r3, r2
   16640:	bhi	1665c <argp_failure@@Base+0xc1c>
   16644:	str	r5, [sl, #12]
   16648:	ldr	r6, [r9, #4]
   1664c:	cmp	r6, #0
   16650:	beq	167c0 <argp_failure@@Base+0xd80>
   16654:	add	r5, r4, #24
   16658:	b	16690 <argp_failure@@Base+0xc50>
   1665c:	mov	r0, sl
   16660:	bl	17e00 <argp_error@@Base+0xed8>
   16664:	b	16644 <argp_failure@@Base+0xc04>
   16668:	mov	r2, r8
   1666c:	mov	r1, r7
   16670:	ldr	r0, [sl, #28]
   16674:	bl	10fa0 <memcpy@plt>
   16678:	ldr	r3, [sl, #28]
   1667c:	add	r8, r3, r8
   16680:	str	r8, [sl, #28]
   16684:	add	r5, r5, #24
   16688:	subs	r6, r6, #1
   1668c:	beq	167c0 <argp_failure@@Base+0xd80>
   16690:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16694:	cmp	r3, #0
   16698:	beq	16684 <argp_failure@@Base+0xc44>
   1669c:	ldr	r3, [r5, #-12]
   166a0:	tst	r3, #2
   166a4:	bne	16684 <argp_failure@@Base+0xc44>
   166a8:	sub	r1, fp, #76	; 0x4c
   166ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166b0:	ldr	r0, [r3, #16]
   166b4:	bl	148c8 <argp_parse@@Base+0x2794>
   166b8:	ldr	r7, [r5, #-24]	; 0xffffffe8
   166bc:	mov	r0, r7
   166c0:	bl	110cc <strlen@plt>
   166c4:	subs	r8, r0, #0
   166c8:	beq	16684 <argp_failure@@Base+0xc44>
   166cc:	ldr	r3, [sl, #28]
   166d0:	add	r3, r3, r8
   166d4:	ldr	r2, [sl, #32]
   166d8:	cmp	r2, r3
   166dc:	bcs	16668 <argp_failure@@Base+0xc28>
   166e0:	mov	r1, r8
   166e4:	mov	r0, sl
   166e8:	bl	18378 <argp_error@@Base+0x1450>
   166ec:	cmp	r0, #0
   166f0:	beq	16684 <argp_failure@@Base+0xc44>
   166f4:	b	16668 <argp_failure@@Base+0xc28>
   166f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166fc:	ldr	r5, [r3, #12]
   16700:	ldr	r3, [sl, #28]
   16704:	ldr	r2, [sl, #24]
   16708:	sub	r3, r3, r2
   1670c:	ldr	r2, [sl, #16]
   16710:	cmp	r3, r2
   16714:	bhi	16744 <argp_failure@@Base+0xd04>
   16718:	str	r5, [sl, #12]
   1671c:	ldr	r6, [r9, #4]
   16720:	cmp	r6, #0
   16724:	beq	167c0 <argp_failure@@Base+0xd80>
   16728:	add	r5, r4, #24
   1672c:	movw	r8, #36944	; 0x9050
   16730:	movt	r8, #1
   16734:	movw	r7, #36960	; 0x9060
   16738:	movt	r7, #1
   1673c:	str	r7, [fp, #-112]	; 0xffffff90
   16740:	b	1675c <argp_failure@@Base+0xd1c>
   16744:	mov	r0, sl
   16748:	bl	17e00 <argp_error@@Base+0xed8>
   1674c:	b	16718 <argp_failure@@Base+0xcd8>
   16750:	add	r5, r5, #24
   16754:	subs	r6, r6, #1
   16758:	beq	167c0 <argp_failure@@Base+0xd80>
   1675c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16760:	cmp	r3, #0
   16764:	beq	16750 <argp_failure@@Base+0xd10>
   16768:	ldr	r3, [r5, #-12]
   1676c:	tst	r3, #2
   16770:	bne	16750 <argp_failure@@Base+0xd10>
   16774:	sub	r1, fp, #76	; 0x4c
   16778:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1677c:	ldr	r0, [r3, #12]
   16780:	bl	148c8 <argp_parse@@Base+0x2794>
   16784:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16788:	mov	r1, r8
   1678c:	mov	r0, sl
   16790:	bl	18478 <argp_error@@Base+0x1550>
   16794:	ldr	r2, [r4, #8]
   16798:	cmp	r2, #0
   1679c:	beq	16750 <argp_failure@@Base+0xd10>
   167a0:	ldr	r3, [r4, #12]
   167a4:	tst	r3, #1
   167a8:	movwne	r1, #36952	; 0x9058
   167ac:	movtne	r1, #1
   167b0:	ldreq	r1, [fp, #-112]	; 0xffffff90
   167b4:	mov	r0, sl
   167b8:	bl	18478 <argp_error@@Base+0x1550>
   167bc:	b	16750 <argp_failure@@Base+0xd10>
   167c0:	ldr	r3, [sl, #28]
   167c4:	ldr	r2, [sl, #24]
   167c8:	sub	r3, r3, r2
   167cc:	ldr	r2, [sl, #16]
   167d0:	cmp	r3, r2
   167d4:	bhi	16840 <argp_failure@@Base+0xe00>
   167d8:	mov	r3, #0
   167dc:	str	r3, [sl, #4]
   167e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   167e4:	cmp	r3, #0
   167e8:	beq	1684c <argp_failure@@Base+0xe0c>
   167ec:	ldr	r3, [r4, #12]
   167f0:	tst	r3, #8
   167f4:	bne	16820 <argp_failure@@Base+0xde0>
   167f8:	ldr	r5, [r4, #4]
   167fc:	sub	r3, r5, #1
   16800:	cmp	r3, #254	; 0xfe
   16804:	bhi	16820 <argp_failure@@Base+0xde0>
   16808:	bl	110a8 <__ctype_b_loc@plt>
   1680c:	ldr	r3, [r0]
   16810:	lsl	r5, r5, #1
   16814:	ldrh	r3, [r3, r5]
   16818:	tst	r3, #16384	; 0x4000
   1681c:	bne	16a28 <argp_failure@@Base+0xfe8>
   16820:	ldr	r3, [r4]
   16824:	cmp	r3, #0
   16828:	bne	16a28 <argp_failure@@Base+0xfe8>
   1682c:	sub	r2, fp, #76	; 0x4c
   16830:	ldr	r1, [r9, #20]
   16834:	ldr	r0, [r4, #16]
   16838:	bl	146c0 <argp_parse@@Base+0x258c>
   1683c:	b	16a24 <argp_failure@@Base+0xfe4>
   16840:	mov	r0, sl
   16844:	bl	17e00 <argp_error@@Base+0xed8>
   16848:	b	167d8 <argp_failure@@Base+0xd98>
   1684c:	ldr	r5, [r4, #16]
   16850:	ldr	r3, [fp, #-104]	; 0xffffff98
   16854:	ldr	r2, [r9, #20]
   16858:	ldr	r1, [r4, #4]
   1685c:	mov	r0, r5
   16860:	bl	13ee8 <argp_parse@@Base+0x1db4>
   16864:	subs	r4, r0, #0
   16868:	beq	169e0 <argp_failure@@Base+0xfa0>
   1686c:	ldrb	r3, [r4]
   16870:	cmp	r3, #0
   16874:	beq	169d8 <argp_failure@@Base+0xf98>
   16878:	ldr	r3, [sl, #28]
   1687c:	ldr	r2, [sl, #24]
   16880:	sub	r3, r3, r2
   16884:	ldr	r2, [sl, #16]
   16888:	cmp	r3, r2
   1688c:	bhi	16938 <argp_failure@@Base+0xef8>
   16890:	ldr	r6, [sl, #20]
   16894:	bic	r6, r6, r6, asr #31
   16898:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1689c:	ldr	r7, [r3, #20]
   168a0:	str	r7, [sl, #4]
   168a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168a8:	ldr	r7, [r3, #20]
   168ac:	ldr	r3, [sl, #28]
   168b0:	ldr	r2, [sl, #24]
   168b4:	sub	r3, r3, r2
   168b8:	ldr	r2, [sl, #16]
   168bc:	cmp	r3, r2
   168c0:	bhi	16974 <argp_failure@@Base+0xf34>
   168c4:	str	r7, [sl, #12]
   168c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168cc:	ldr	r1, [r3, #20]
   168d0:	add	r3, r1, #3
   168d4:	cmp	r6, r3
   168d8:	bhi	16980 <argp_failure@@Base+0xf40>
   168dc:	cmp	r6, r1
   168e0:	bcc	169c0 <argp_failure@@Base+0xf80>
   168e4:	ldr	r3, [sl, #28]
   168e8:	add	r3, r3, #3
   168ec:	ldr	r2, [sl, #32]
   168f0:	cmp	r2, r3
   168f4:	bcs	1690c <argp_failure@@Base+0xecc>
   168f8:	mov	r1, #3
   168fc:	mov	r0, sl
   16900:	bl	18378 <argp_error@@Base+0x1450>
   16904:	cmp	r0, #0
   16908:	beq	169c8 <argp_failure@@Base+0xf88>
   1690c:	ldr	r2, [sl, #28]
   16910:	movw	r3, #36964	; 0x9064
   16914:	movt	r3, #1
   16918:	ldrh	r1, [r3]
   1691c:	strh	r1, [r2]
   16920:	ldrb	r3, [r3, #2]
   16924:	strb	r3, [r2, #2]
   16928:	ldr	r3, [sl, #28]
   1692c:	add	r3, r3, #3
   16930:	str	r3, [sl, #28]
   16934:	b	169c8 <argp_failure@@Base+0xf88>
   16938:	mov	r0, sl
   1693c:	bl	17e00 <argp_error@@Base+0xed8>
   16940:	ldr	r6, [sl, #20]
   16944:	bic	r6, r6, r6, asr #31
   16948:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1694c:	ldr	r7, [r3, #20]
   16950:	ldr	r3, [sl, #28]
   16954:	ldr	r2, [sl, #24]
   16958:	sub	r3, r3, r2
   1695c:	ldr	r2, [sl, #16]
   16960:	cmp	r3, r2
   16964:	bls	168a0 <argp_failure@@Base+0xe60>
   16968:	mov	r0, sl
   1696c:	bl	17e00 <argp_error@@Base+0xed8>
   16970:	b	168a0 <argp_failure@@Base+0xe60>
   16974:	mov	r0, sl
   16978:	bl	17e00 <argp_error@@Base+0xed8>
   1697c:	b	168c4 <argp_failure@@Base+0xe84>
   16980:	ldr	r2, [sl, #28]
   16984:	ldr	r3, [sl, #32]
   16988:	cmp	r2, r3
   1698c:	bcs	169a8 <argp_failure@@Base+0xf68>
   16990:	ldr	r3, [sl, #28]
   16994:	add	r2, r3, #1
   16998:	str	r2, [sl, #28]
   1699c:	mov	r2, #10
   169a0:	strb	r2, [r3]
   169a4:	b	169c8 <argp_failure@@Base+0xf88>
   169a8:	mov	r1, #1
   169ac:	mov	r0, sl
   169b0:	bl	18378 <argp_error@@Base+0x1450>
   169b4:	cmp	r0, #0
   169b8:	bne	16990 <argp_failure@@Base+0xf50>
   169bc:	b	169c8 <argp_failure@@Base+0xf88>
   169c0:	mov	r0, sl
   169c4:	bl	14238 <argp_parse@@Base+0x2104>
   169c8:	mov	r0, r4
   169cc:	bl	110cc <strlen@plt>
   169d0:	subs	r6, r0, #0
   169d4:	bne	16b00 <argp_failure@@Base+0x10c0>
   169d8:	cmp	r5, r4
   169dc:	bne	16b48 <argp_failure@@Base+0x1108>
   169e0:	ldr	r3, [sl, #28]
   169e4:	ldr	r2, [sl, #24]
   169e8:	sub	r3, r3, r2
   169ec:	ldr	r2, [sl, #16]
   169f0:	cmp	r3, r2
   169f4:	bhi	16b54 <argp_failure@@Base+0x1114>
   169f8:	mov	r3, #0
   169fc:	str	r3, [sl, #4]
   16a00:	ldr	r2, [sl, #28]
   16a04:	ldr	r3, [sl, #32]
   16a08:	cmp	r2, r3
   16a0c:	bcs	16b60 <argp_failure@@Base+0x1120>
   16a10:	ldr	r3, [sl, #28]
   16a14:	add	r2, r3, #1
   16a18:	str	r2, [sl, #28]
   16a1c:	mov	r2, #10
   16a20:	strb	r2, [r3]
   16a24:	str	r9, [fp, #-88]	; 0xffffffa8
   16a28:	ldr	r3, [sl, #28]
   16a2c:	ldr	r2, [sl, #24]
   16a30:	sub	r3, r3, r2
   16a34:	ldr	r2, [sl, #16]
   16a38:	cmp	r3, r2
   16a3c:	bhi	16b78 <argp_failure@@Base+0x1138>
   16a40:	ldr	r3, [fp, #-120]	; 0xffffff88
   16a44:	str	r3, [sl, #4]
   16a48:	ldr	r3, [sl, #28]
   16a4c:	ldr	r2, [sl, #24]
   16a50:	sub	r3, r3, r2
   16a54:	ldr	r2, [sl, #16]
   16a58:	cmp	r3, r2
   16a5c:	bhi	16b84 <argp_failure@@Base+0x1144>
   16a60:	ldr	r3, [fp, #-124]	; 0xffffff84
   16a64:	str	r3, [sl, #12]
   16a68:	add	r9, r9, #28
   16a6c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16a70:	subs	r3, r3, #1
   16a74:	str	r3, [fp, #-116]	; 0xffffff8c
   16a78:	beq	16b90 <argp_failure@@Base+0x1150>
   16a7c:	ldr	r4, [r9]
   16a80:	ldr	r8, [r9, #8]
   16a84:	ldr	r3, [sl, #28]
   16a88:	ldr	r2, [sl, #24]
   16a8c:	sub	r3, r3, r2
   16a90:	ldr	r2, [sl, #16]
   16a94:	cmp	r3, r2
   16a98:	bhi	164a4 <argp_failure@@Base+0xa64>
   16a9c:	ldr	r3, [sl, #4]
   16aa0:	str	r3, [fp, #-120]	; 0xffffff88
   16aa4:	mov	r3, #0
   16aa8:	str	r3, [sl, #4]
   16aac:	ldr	r3, [sl, #12]
   16ab0:	str	r3, [fp, #-124]	; 0xffffff84
   16ab4:	str	r9, [fp, #-76]	; 0xffffffb4
   16ab8:	str	sl, [fp, #-72]	; 0xffffffb8
   16abc:	sub	r3, fp, #88	; 0x58
   16ac0:	str	r3, [fp, #-68]	; 0xffffffbc
   16ac4:	mov	r3, #1
   16ac8:	str	r3, [fp, #-64]	; 0xffffffc0
   16acc:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ad0:	str	r3, [fp, #-60]	; 0xffffffc4
   16ad4:	ldr	r3, [r4, #12]
   16ad8:	ands	r3, r3, #8
   16adc:	str	r3, [fp, #-112]	; 0xffffff90
   16ae0:	movne	r3, #0
   16ae4:	strne	r3, [fp, #-112]	; 0xffffff90
   16ae8:	bne	164dc <argp_failure@@Base+0xa9c>
   16aec:	ldr	r2, [r9, #4]
   16af0:	cmp	r2, #0
   16af4:	beq	164dc <argp_failure@@Base+0xa9c>
   16af8:	add	r3, r4, #24
   16afc:	b	164bc <argp_failure@@Base+0xa7c>
   16b00:	ldr	r3, [sl, #28]
   16b04:	add	r3, r3, r6
   16b08:	ldr	r2, [sl, #32]
   16b0c:	cmp	r2, r3
   16b10:	bcs	16b28 <argp_failure@@Base+0x10e8>
   16b14:	mov	r1, r6
   16b18:	mov	r0, sl
   16b1c:	bl	18378 <argp_error@@Base+0x1450>
   16b20:	cmp	r0, #0
   16b24:	beq	169d8 <argp_failure@@Base+0xf98>
   16b28:	mov	r2, r6
   16b2c:	mov	r1, r4
   16b30:	ldr	r0, [sl, #28]
   16b34:	bl	10fa0 <memcpy@plt>
   16b38:	ldr	r3, [sl, #28]
   16b3c:	add	r6, r3, r6
   16b40:	str	r6, [sl, #28]
   16b44:	b	169d8 <argp_failure@@Base+0xf98>
   16b48:	mov	r0, r4
   16b4c:	bl	12e0c <argp_parse@@Base+0xcd8>
   16b50:	b	169e0 <argp_failure@@Base+0xfa0>
   16b54:	mov	r0, sl
   16b58:	bl	17e00 <argp_error@@Base+0xed8>
   16b5c:	b	169f8 <argp_failure@@Base+0xfb8>
   16b60:	mov	r1, #1
   16b64:	mov	r0, sl
   16b68:	bl	18378 <argp_error@@Base+0x1450>
   16b6c:	cmp	r0, #0
   16b70:	bne	16a10 <argp_failure@@Base+0xfd0>
   16b74:	b	16a24 <argp_failure@@Base+0xfe4>
   16b78:	mov	r0, sl
   16b7c:	bl	17e00 <argp_error@@Base+0xed8>
   16b80:	b	16a40 <argp_failure@@Base+0x1000>
   16b84:	mov	r0, sl
   16b88:	bl	17e00 <argp_error@@Base+0xed8>
   16b8c:	b	16a60 <argp_failure@@Base+0x1020>
   16b90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16b94:	cmp	r3, #0
   16b98:	beq	16bfc <argp_failure@@Base+0x11bc>
   16b9c:	movw	r3, #41492	; 0xa214
   16ba0:	movt	r3, #2
   16ba4:	ldr	r3, [r3, #4]
   16ba8:	cmp	r3, #0
   16bac:	beq	16bfc <argp_failure@@Base+0x11bc>
   16bb0:	ldr	r3, [fp, #-104]	; 0xffffff98
   16bb4:	cmp	r3, #0
   16bb8:	ldrne	r2, [r3]
   16bbc:	ldreq	r2, [fp, #-104]	; 0xffffff98
   16bc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   16bc4:	mov	r1, #5
   16bc8:	movt	r1, #512	; 0x200
   16bcc:	movw	r0, #36968	; 0x9068
   16bd0:	movt	r0, #1
   16bd4:	bl	13ee8 <argp_parse@@Base+0x1db4>
   16bd8:	subs	r4, r0, #0
   16bdc:	beq	16bfc <argp_failure@@Base+0x11bc>
   16be0:	ldrb	r3, [r4]
   16be4:	cmp	r3, #0
   16be8:	bne	16c90 <argp_failure@@Base+0x1250>
   16bec:	movw	r3, #36968	; 0x9068
   16bf0:	movt	r3, #1
   16bf4:	cmp	r4, r3
   16bf8:	bne	16d64 <argp_failure@@Base+0x1324>
   16bfc:	mov	r4, #1
   16c00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c04:	tst	r3, #32
   16c08:	bne	16d70 <argp_failure@@Base+0x1330>
   16c0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c10:	tst	r3, #64	; 0x40
   16c14:	beq	16c50 <argp_failure@@Base+0x1210>
   16c18:	movw	r3, #41636	; 0xa2a4
   16c1c:	movt	r3, #2
   16c20:	ldr	r3, [r3]
   16c24:	cmp	r3, #0
   16c28:	beq	16c50 <argp_failure@@Base+0x1210>
   16c2c:	cmp	r4, #0
   16c30:	bne	16d98 <argp_failure@@Base+0x1358>
   16c34:	movw	r3, #41636	; 0xa2a4
   16c38:	movt	r3, #2
   16c3c:	ldr	r2, [r3]
   16c40:	movw	r1, #37084	; 0x90dc
   16c44:	movt	r1, #1
   16c48:	mov	r0, sl
   16c4c:	bl	18478 <argp_error@@Base+0x1550>
   16c50:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16c54:	bl	10ff4 <funlockfile@plt>
   16c58:	ldr	r3, [fp, #-128]	; 0xffffff80
   16c5c:	cmp	r3, #0
   16c60:	beq	16c6c <argp_failure@@Base+0x122c>
   16c64:	mov	r0, r3
   16c68:	bl	13d60 <argp_parse@@Base+0x1c2c>
   16c6c:	mov	r0, sl
   16c70:	bl	1832c <argp_error@@Base+0x1404>
   16c74:	sub	sp, fp, #32
   16c78:	ldrd	r4, [sp]
   16c7c:	ldrd	r6, [sp, #8]
   16c80:	ldrd	r8, [sp, #16]
   16c84:	ldrd	sl, [sp, #24]
   16c88:	add	sp, sp, #32
   16c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c90:	ldr	r2, [sl, #28]
   16c94:	ldr	r3, [sl, #32]
   16c98:	cmp	r2, r3
   16c9c:	bcs	16cec <argp_failure@@Base+0x12ac>
   16ca0:	ldr	r3, [sl, #28]
   16ca4:	add	r2, r3, #1
   16ca8:	str	r2, [sl, #28]
   16cac:	mov	r2, #10
   16cb0:	strb	r2, [r3]
   16cb4:	mov	r0, r4
   16cb8:	bl	110cc <strlen@plt>
   16cbc:	subs	r5, r0, #0
   16cc0:	bne	16d04 <argp_failure@@Base+0x12c4>
   16cc4:	ldr	r2, [sl, #28]
   16cc8:	ldr	r3, [sl, #32]
   16ccc:	cmp	r2, r3
   16cd0:	bcs	16d4c <argp_failure@@Base+0x130c>
   16cd4:	ldr	r3, [sl, #28]
   16cd8:	add	r2, r3, #1
   16cdc:	str	r2, [sl, #28]
   16ce0:	mov	r2, #10
   16ce4:	strb	r2, [r3]
   16ce8:	b	16bec <argp_failure@@Base+0x11ac>
   16cec:	mov	r1, #1
   16cf0:	mov	r0, sl
   16cf4:	bl	18378 <argp_error@@Base+0x1450>
   16cf8:	cmp	r0, #0
   16cfc:	bne	16ca0 <argp_failure@@Base+0x1260>
   16d00:	b	16cb4 <argp_failure@@Base+0x1274>
   16d04:	ldr	r3, [sl, #28]
   16d08:	add	r3, r3, r5
   16d0c:	ldr	r2, [sl, #32]
   16d10:	cmp	r2, r3
   16d14:	bcs	16d2c <argp_failure@@Base+0x12ec>
   16d18:	mov	r1, r5
   16d1c:	mov	r0, sl
   16d20:	bl	18378 <argp_error@@Base+0x1450>
   16d24:	cmp	r0, #0
   16d28:	beq	16cc4 <argp_failure@@Base+0x1284>
   16d2c:	mov	r2, r5
   16d30:	mov	r1, r4
   16d34:	ldr	r0, [sl, #28]
   16d38:	bl	10fa0 <memcpy@plt>
   16d3c:	ldr	r3, [sl, #28]
   16d40:	add	r5, r3, r5
   16d44:	str	r5, [sl, #28]
   16d48:	b	16cc4 <argp_failure@@Base+0x1284>
   16d4c:	mov	r1, #1
   16d50:	mov	r0, sl
   16d54:	bl	18378 <argp_error@@Base+0x1450>
   16d58:	cmp	r0, #0
   16d5c:	bne	16cd4 <argp_failure@@Base+0x1294>
   16d60:	b	16bec <argp_failure@@Base+0x11ac>
   16d64:	mov	r0, r4
   16d68:	bl	12e0c <argp_parse@@Base+0xcd8>
   16d6c:	b	16bfc <argp_failure@@Base+0x11bc>
   16d70:	str	sl, [sp, #4]
   16d74:	mov	r3, #0
   16d78:	str	r3, [sp]
   16d7c:	mov	r3, r4
   16d80:	mov	r2, #1
   16d84:	ldr	r1, [fp, #-104]	; 0xffffff98
   16d88:	ldr	r0, [fp, #-108]	; 0xffffff94
   16d8c:	bl	14a6c <argp_parse@@Base+0x2938>
   16d90:	orr	r4, r4, r0
   16d94:	b	16c0c <argp_failure@@Base+0x11cc>
   16d98:	ldr	r2, [sl, #28]
   16d9c:	ldr	r3, [sl, #32]
   16da0:	cmp	r2, r3
   16da4:	bcs	16dc0 <argp_failure@@Base+0x1380>
   16da8:	ldr	r3, [sl, #28]
   16dac:	add	r2, r3, #1
   16db0:	str	r2, [sl, #28]
   16db4:	mov	r2, #10
   16db8:	strb	r2, [r3]
   16dbc:	b	16c34 <argp_failure@@Base+0x11f4>
   16dc0:	mov	r1, #1
   16dc4:	mov	r0, sl
   16dc8:	bl	18378 <argp_error@@Base+0x1450>
   16dcc:	cmp	r0, #0
   16dd0:	bne	16da8 <argp_failure@@Base+0x1368>
   16dd4:	b	16c34 <argp_failure@@Base+0x11f4>
   16dd8:	ldrb	r3, [r6]
   16ddc:	mov	r4, r6
   16de0:	mov	r7, #0
   16de4:	b	15e48 <argp_failure@@Base+0x408>
   16de8:	ldrb	r3, [r8]
   16dec:	cmp	r3, r7
   16df0:	beq	16524 <argp_failure@@Base+0xae4>
   16df4:	add	r5, r5, #24
   16df8:	subs	r6, r6, #1
   16dfc:	beq	16614 <argp_failure@@Base+0xbd4>
   16e00:	ldr	r9, [r5, #12]
   16e04:	tst	r9, #8
   16e08:	bne	16df4 <argp_failure@@Base+0x13b4>
   16e0c:	ldr	r7, [r5, #4]
   16e10:	sub	r3, r7, #1
   16e14:	cmp	r3, #254	; 0xfe
   16e18:	bhi	16df4 <argp_failure@@Base+0x13b4>
   16e1c:	bl	110a8 <__ctype_b_loc@plt>
   16e20:	ldr	r2, [r0]
   16e24:	lsl	r3, r7, #1
   16e28:	ldrh	r3, [r2, r3]
   16e2c:	tst	r3, #16384	; 0x4000
   16e30:	bne	16de8 <argp_failure@@Base+0x13a8>
   16e34:	b	16df4 <argp_failure@@Base+0x13b4>
   16e38:	andeq	r8, r1, r4, ror #26

00016e3c <argp_help@@Base>:
   16e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   16e40:	sub	sp, sp, #12
   16e44:	str	r3, [sp]
   16e48:	mov	r3, r2
   16e4c:	mov	r2, r1
   16e50:	mov	r1, #0
   16e54:	bl	15c5c <argp_failure@@Base+0x21c>
   16e58:	add	sp, sp, #12
   16e5c:	pop	{pc}		; (ldr pc, [sp], #4)

00016e60 <argp_state_help@@Base>:
   16e60:	strd	r4, [sp, #-12]!
   16e64:	str	lr, [sp, #8]
   16e68:	sub	sp, sp, #12
   16e6c:	mov	r5, r2
   16e70:	subs	r4, r0, #0
   16e74:	beq	16e94 <argp_state_help@@Base+0x34>
   16e78:	ldr	r3, [r4, #16]
   16e7c:	tst	r3, #2
   16e80:	beq	16ed4 <argp_state_help@@Base+0x74>
   16e84:	add	sp, sp, #12
   16e88:	ldrd	r4, [sp]
   16e8c:	add	sp, sp, #8
   16e90:	pop	{pc}		; (ldr pc, [sp], #4)
   16e94:	cmp	r1, #0
   16e98:	beq	16e84 <argp_state_help@@Base+0x24>
   16e9c:	movw	r3, #41552	; 0xa250
   16ea0:	movt	r3, #2
   16ea4:	ldr	r3, [r3]
   16ea8:	str	r3, [sp]
   16eac:	mov	r3, r2
   16eb0:	mov	r2, r1
   16eb4:	mov	r1, #0
   16eb8:	mov	r0, r1
   16ebc:	bl	15c5c <argp_failure@@Base+0x21c>
   16ec0:	b	16f10 <argp_state_help@@Base+0xb0>
   16ec4:	movw	r3, #41548	; 0xa24c
   16ec8:	movt	r3, #2
   16ecc:	ldr	r0, [r3]
   16ed0:	bl	110b4 <exit@plt>
   16ed4:	cmp	r1, #0
   16ed8:	beq	16e84 <argp_state_help@@Base+0x24>
   16edc:	ldr	r3, [r4, #16]
   16ee0:	tst	r3, #64	; 0x40
   16ee4:	orrne	r5, r5, #128	; 0x80
   16ee8:	ldr	r3, [r4, #40]	; 0x28
   16eec:	str	r3, [sp]
   16ef0:	mov	r3, r5
   16ef4:	mov	r2, r1
   16ef8:	mov	r1, r4
   16efc:	ldr	r0, [r4]
   16f00:	bl	15c5c <argp_failure@@Base+0x21c>
   16f04:	ldr	r3, [r4, #16]
   16f08:	tst	r3, #32
   16f0c:	bne	16e84 <argp_state_help@@Base+0x24>
   16f10:	tst	r5, #256	; 0x100
   16f14:	bne	16ec4 <argp_state_help@@Base+0x64>
   16f18:	tst	r5, #512	; 0x200
   16f1c:	beq	16e84 <argp_state_help@@Base+0x24>
   16f20:	mov	r0, #0
   16f24:	bl	110b4 <exit@plt>

00016f28 <argp_error@@Base>:
   16f28:	push	{r1, r2, r3}
   16f2c:	strd	r4, [sp, #-12]!
   16f30:	str	lr, [sp, #8]
   16f34:	sub	sp, sp, #8
   16f38:	subs	r5, r0, #0
   16f3c:	beq	17014 <argp_error@@Base+0xec>
   16f40:	ldr	r3, [r5, #16]
   16f44:	tst	r3, #2
   16f48:	bne	16ffc <argp_error@@Base+0xd4>
   16f4c:	ldr	r4, [r5, #44]	; 0x2c
   16f50:	cmp	r4, #0
   16f54:	beq	16ffc <argp_error@@Base+0xd4>
   16f58:	mov	r0, r4
   16f5c:	bl	11168 <flockfile@plt>
   16f60:	add	r3, sp, #24
   16f64:	str	r3, [sp, #4]
   16f68:	ldr	r0, [r5, #40]	; 0x28
   16f6c:	mov	r1, r4
   16f70:	bl	10f28 <fputs_unlocked@plt>
   16f74:	ldr	r3, [r4, #20]
   16f78:	ldr	r2, [r4, #24]
   16f7c:	cmp	r3, r2
   16f80:	addcc	r2, r3, #1
   16f84:	strcc	r2, [r4, #20]
   16f88:	movcc	r2, #58	; 0x3a
   16f8c:	strbcc	r2, [r3]
   16f90:	bcs	17048 <argp_error@@Base+0x120>
   16f94:	ldr	r3, [r4, #20]
   16f98:	ldr	r2, [r4, #24]
   16f9c:	cmp	r3, r2
   16fa0:	addcc	r2, r3, #1
   16fa4:	strcc	r2, [r4, #20]
   16fa8:	movcc	r2, #32
   16fac:	strbcc	r2, [r3]
   16fb0:	bcs	17058 <argp_error@@Base+0x130>
   16fb4:	ldr	r2, [sp, #4]
   16fb8:	ldr	r1, [sp, #20]
   16fbc:	mov	r0, r4
   16fc0:	bl	11144 <vfprintf@plt>
   16fc4:	ldr	r3, [r4, #20]
   16fc8:	ldr	r2, [r4, #24]
   16fcc:	cmp	r3, r2
   16fd0:	addcc	r2, r3, #1
   16fd4:	strcc	r2, [r4, #20]
   16fd8:	movcc	r2, #10
   16fdc:	strbcc	r2, [r3]
   16fe0:	bcs	17068 <argp_error@@Base+0x140>
   16fe4:	mov	r2, #260	; 0x104
   16fe8:	mov	r1, r4
   16fec:	mov	r0, r5
   16ff0:	bl	16e60 <argp_state_help@@Base>
   16ff4:	mov	r0, r4
   16ff8:	bl	10ff4 <funlockfile@plt>
   16ffc:	add	sp, sp, #8
   17000:	ldrd	r4, [sp]
   17004:	ldr	lr, [sp, #8]
   17008:	add	sp, sp, #12
   1700c:	add	sp, sp, #12
   17010:	bx	lr
   17014:	movw	r3, #41560	; 0xa258
   17018:	movt	r3, #2
   1701c:	ldr	r4, [r3]
   17020:	cmp	r4, #0
   17024:	beq	16ffc <argp_error@@Base+0xd4>
   17028:	mov	r0, r4
   1702c:	bl	11168 <flockfile@plt>
   17030:	add	r3, sp, #24
   17034:	str	r3, [sp, #4]
   17038:	movw	r3, #41552	; 0xa250
   1703c:	movt	r3, #2
   17040:	ldr	r0, [r3]
   17044:	b	16f6c <argp_error@@Base+0x44>
   17048:	mov	r1, #58	; 0x3a
   1704c:	mov	r0, r4
   17050:	bl	1112c <__overflow@plt>
   17054:	b	16f94 <argp_error@@Base+0x6c>
   17058:	mov	r1, #32
   1705c:	mov	r0, r4
   17060:	bl	1112c <__overflow@plt>
   17064:	b	16fb4 <argp_error@@Base+0x8c>
   17068:	mov	r1, #10
   1706c:	mov	r0, r4
   17070:	bl	1112c <__overflow@plt>
   17074:	b	16fe4 <argp_error@@Base+0xbc>
   17078:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1707c:	strd	r6, [sp, #8]
   17080:	strd	r8, [sp, #16]
   17084:	str	lr, [sp, #24]
   17088:	ldr	r5, [r1, #28]
   1708c:	ldr	r6, [r1, #32]
   17090:	ldr	r8, [r1]
   17094:	add	r7, r0, r6, lsl #2
   17098:	b	170c8 <argp_error@@Base+0x1a0>
   1709c:	add	r3, r0, r5, lsl #2
   170a0:	add	r4, r9, r5
   170a4:	add	r4, r0, r4, lsl #2
   170a8:	mov	r2, r7
   170ac:	ldr	ip, [r3]
   170b0:	ldr	lr, [r2]
   170b4:	str	lr, [r3], #4
   170b8:	str	ip, [r2], #4
   170bc:	cmp	r3, r4
   170c0:	bne	170ac <argp_error@@Base+0x184>
   170c4:	add	r5, r5, r9
   170c8:	cmp	r8, r6
   170cc:	movle	r3, #0
   170d0:	movgt	r3, #1
   170d4:	cmp	r5, r6
   170d8:	movge	r3, #0
   170dc:	cmp	r3, #0
   170e0:	beq	17124 <argp_error@@Base+0x1fc>
   170e4:	sub	r9, r8, r6
   170e8:	sub	r3, r6, r5
   170ec:	cmp	r9, r3
   170f0:	ble	1709c <argp_error@@Base+0x174>
   170f4:	add	r2, r0, r5, lsl #2
   170f8:	sub	r9, r8, r3
   170fc:	add	r3, r0, r9, lsl #2
   17100:	add	r4, r0, r8, lsl #2
   17104:	ldr	ip, [r2]
   17108:	ldr	lr, [r3]
   1710c:	str	lr, [r2], #4
   17110:	str	ip, [r3], #4
   17114:	cmp	r3, r4
   17118:	bne	17104 <argp_error@@Base+0x1dc>
   1711c:	mov	r8, r9
   17120:	b	170c8 <argp_error@@Base+0x1a0>
   17124:	ldr	r0, [r1]
   17128:	ldr	r3, [r1, #32]
   1712c:	sub	r2, r0, r3
   17130:	ldr	r3, [r1, #28]
   17134:	add	r3, r3, r2
   17138:	str	r3, [r1, #28]
   1713c:	str	r0, [r1, #32]
   17140:	ldrd	r4, [sp]
   17144:	ldrd	r6, [sp, #8]
   17148:	ldrd	r8, [sp, #16]
   1714c:	add	sp, sp, #24
   17150:	pop	{pc}		; (ldr pc, [sp], #4)
   17154:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17158:	strd	r6, [sp, #8]
   1715c:	strd	r8, [sp, #16]
   17160:	strd	sl, [sp, #24]
   17164:	str	lr, [sp, #32]
   17168:	sub	sp, sp, #52	; 0x34
   1716c:	str	r0, [sp, #32]
   17170:	str	r1, [sp, #20]
   17174:	str	r2, [sp, #28]
   17178:	str	r3, [sp, #16]
   1717c:	ldr	fp, [sp, #96]	; 0x60
   17180:	ldr	r9, [fp, #20]
   17184:	ldrb	r3, [r9]
   17188:	cmp	r3, #0
   1718c:	cmpne	r3, #61	; 0x3d
   17190:	beq	171c8 <argp_error@@Base+0x2a0>
   17194:	mov	r8, r9
   17198:	ldrb	r3, [r8, #1]!
   1719c:	cmp	r3, #0
   171a0:	cmpne	r3, #61	; 0x3d
   171a4:	bne	17198 <argp_error@@Base+0x270>
   171a8:	sub	r7, r8, r9
   171ac:	ldr	r5, [sp, #16]
   171b0:	ldr	sl, [r5]
   171b4:	cmp	sl, #0
   171b8:	beq	1768c <argp_error@@Base+0x764>
   171bc:	mov	r4, sl
   171c0:	mov	r6, #0
   171c4:	b	171e0 <argp_error@@Base+0x2b8>
   171c8:	mov	r8, r9
   171cc:	b	171a8 <argp_error@@Base+0x280>
   171d0:	add	r6, r6, #1
   171d4:	ldr	r4, [r5, #16]!
   171d8:	cmp	r4, #0
   171dc:	beq	17690 <argp_error@@Base+0x768>
   171e0:	str	r5, [sp, #12]
   171e4:	mov	r2, r7
   171e8:	mov	r1, r9
   171ec:	mov	r0, r4
   171f0:	bl	111b0 <strncmp@plt>
   171f4:	cmp	r0, #0
   171f8:	bne	171d0 <argp_error@@Base+0x2a8>
   171fc:	mov	r0, r4
   17200:	bl	110cc <strlen@plt>
   17204:	cmp	r0, r7
   17208:	bne	171d0 <argp_error@@Base+0x2a8>
   1720c:	cmp	r5, #0
   17210:	beq	17698 <argp_error@@Base+0x770>
   17214:	ldr	r3, [fp]
   17218:	add	r2, r3, #1
   1721c:	str	r2, [fp]
   17220:	mov	r1, #0
   17224:	str	r1, [fp, #20]
   17228:	ldrb	r1, [r8]
   1722c:	cmp	r1, #0
   17230:	beq	175e0 <argp_error@@Base+0x6b8>
   17234:	ldr	r3, [sp, #12]
   17238:	ldr	r3, [r3, #4]
   1723c:	cmp	r3, #0
   17240:	beq	1758c <argp_error@@Base+0x664>
   17244:	add	r8, r8, #1
   17248:	str	r8, [fp, #12]
   1724c:	ldr	r3, [sp, #88]	; 0x58
   17250:	cmp	r3, #0
   17254:	strne	r6, [r3]
   17258:	ldr	r2, [sp, #12]
   1725c:	ldr	r3, [r2, #8]
   17260:	cmp	r3, #0
   17264:	beq	17678 <argp_error@@Base+0x750>
   17268:	ldr	r2, [r2, #12]
   1726c:	str	r2, [r3]
   17270:	mov	r0, #0
   17274:	add	sp, sp, #52	; 0x34
   17278:	ldrd	r4, [sp]
   1727c:	ldrd	r6, [sp, #8]
   17280:	ldrd	r8, [sp, #16]
   17284:	ldrd	sl, [sp, #24]
   17288:	add	sp, sp, #32
   1728c:	pop	{pc}		; (ldr pc, [sp], #4)
   17290:	ldr	r2, [sl, #8]
   17294:	ldr	r3, [r9, #8]
   17298:	cmp	r2, r3
   1729c:	bne	1735c <argp_error@@Base+0x434>
   172a0:	ldr	r2, [sl, #12]
   172a4:	ldr	r3, [r9, #12]
   172a8:	cmp	r2, r3
   172ac:	bne	1735c <argp_error@@Base+0x434>
   172b0:	b	17314 <argp_error@@Base+0x3ec>
   172b4:	mov	r0, r6
   172b8:	bl	13ba4 <argp_parse@@Base+0x1a70>
   172bc:	subs	r3, r0, #0
   172c0:	str	r3, [sp, #24]
   172c4:	beq	1738c <argp_error@@Base+0x464>
   172c8:	mov	r2, r6
   172cc:	mov	r1, #0
   172d0:	ldr	r7, [sp, #24]
   172d4:	mov	r0, r7
   172d8:	bl	11108 <memset@plt>
   172dc:	ldr	r2, [sp, #36]	; 0x24
   172e0:	mov	r1, #1
   172e4:	strb	r1, [r7, r2]
   172e8:	ldr	r3, [sp, #44]	; 0x2c
   172ec:	str	r3, [sp, #40]	; 0x28
   172f0:	b	1737c <argp_error@@Base+0x454>
   172f4:	ldr	r3, [sp, #24]
   172f8:	cmp	r3, #0
   172fc:	moveq	r5, #1
   17300:	beq	17314 <argp_error@@Base+0x3ec>
   17304:	mov	r5, #1
   17308:	b	1737c <argp_error@@Base+0x454>
   1730c:	str	r4, [sp, #36]	; 0x24
   17310:	mov	sl, r9
   17314:	add	r4, r4, #1
   17318:	ldr	r0, [r9, #16]!
   1731c:	cmp	r0, #0
   17320:	beq	17394 <argp_error@@Base+0x46c>
   17324:	ldr	r2, [sp, #12]
   17328:	ldr	r1, [fp, #20]
   1732c:	bl	111b0 <strncmp@plt>
   17330:	cmp	r0, #0
   17334:	bne	17314 <argp_error@@Base+0x3ec>
   17338:	cmp	sl, #0
   1733c:	beq	1730c <argp_error@@Base+0x3e4>
   17340:	ldr	r3, [sp, #92]	; 0x5c
   17344:	cmp	r3, #0
   17348:	bne	1735c <argp_error@@Base+0x434>
   1734c:	ldr	r2, [sl, #4]
   17350:	ldr	r3, [r9, #4]
   17354:	cmp	r2, r3
   17358:	beq	17290 <argp_error@@Base+0x368>
   1735c:	cmp	r5, #0
   17360:	bne	17314 <argp_error@@Base+0x3ec>
   17364:	ldr	r3, [sp, #100]	; 0x64
   17368:	cmp	r3, #0
   1736c:	beq	172f4 <argp_error@@Base+0x3cc>
   17370:	ldr	r3, [sp, #24]
   17374:	cmp	r3, #0
   17378:	beq	172b4 <argp_error@@Base+0x38c>
   1737c:	ldr	r3, [sp, #24]
   17380:	mov	r2, #1
   17384:	strb	r2, [r3, r4]
   17388:	b	17314 <argp_error@@Base+0x3ec>
   1738c:	mov	r5, #1
   17390:	b	17314 <argp_error@@Base+0x3ec>
   17394:	str	sl, [sp, #12]
   17398:	ldr	r3, [sp, #24]
   1739c:	orrs	r3, r3, r5
   173a0:	bne	17418 <argp_error@@Base+0x4f0>
   173a4:	ldr	r3, [sp, #12]
   173a8:	cmp	r3, #0
   173ac:	bne	17584 <argp_error@@Base+0x65c>
   173b0:	ldr	r3, [sp, #92]	; 0x5c
   173b4:	cmp	r3, #0
   173b8:	beq	173ec <argp_error@@Base+0x4c4>
   173bc:	ldr	r3, [fp]
   173c0:	ldr	r2, [sp, #20]
   173c4:	ldr	r3, [r2, r3, lsl #2]
   173c8:	ldrb	r3, [r3, #1]
   173cc:	cmp	r3, #45	; 0x2d
   173d0:	beq	173ec <argp_error@@Base+0x4c4>
   173d4:	ldr	r3, [fp, #20]
   173d8:	ldrb	r1, [r3]
   173dc:	ldr	r0, [sp, #28]
   173e0:	bl	110d8 <strchr@plt>
   173e4:	cmp	r0, #0
   173e8:	bne	17684 <argp_error@@Base+0x75c>
   173ec:	ldr	r3, [sp, #100]	; 0x64
   173f0:	cmp	r3, #0
   173f4:	bne	17554 <argp_error@@Base+0x62c>
   173f8:	mov	r2, #0
   173fc:	str	r2, [fp, #20]
   17400:	ldr	r3, [fp]
   17404:	add	r3, r3, #1
   17408:	str	r3, [fp]
   1740c:	str	r2, [fp, #8]
   17410:	mov	r0, #63	; 0x3f
   17414:	b	17274 <argp_error@@Base+0x34c>
   17418:	ldr	r3, [sp, #100]	; 0x64
   1741c:	cmp	r3, #0
   17420:	beq	17458 <argp_error@@Base+0x530>
   17424:	cmp	r5, #0
   17428:	beq	17494 <argp_error@@Base+0x56c>
   1742c:	movw	r0, #41560	; 0xa258
   17430:	movt	r0, #2
   17434:	ldr	r3, [fp, #20]
   17438:	str	r3, [sp]
   1743c:	ldr	r3, [sp, #104]	; 0x68
   17440:	ldr	r2, [sp, #20]
   17444:	ldr	r2, [r2]
   17448:	movw	r1, #37104	; 0x90f0
   1744c:	movt	r1, #1
   17450:	ldr	r0, [r0]
   17454:	bl	110e4 <fprintf@plt>
   17458:	ldr	r3, [sp, #40]	; 0x28
   1745c:	cmp	r3, #0
   17460:	bne	17548 <argp_error@@Base+0x620>
   17464:	ldr	r4, [fp, #20]
   17468:	mov	r0, r4
   1746c:	bl	110cc <strlen@plt>
   17470:	add	r0, r4, r0
   17474:	str	r0, [fp, #20]
   17478:	ldr	r3, [fp]
   1747c:	add	r3, r3, #1
   17480:	str	r3, [fp]
   17484:	mov	r3, #0
   17488:	str	r3, [fp, #8]
   1748c:	mov	r0, #63	; 0x3f
   17490:	b	17274 <argp_error@@Base+0x34c>
   17494:	movw	r4, #41560	; 0xa258
   17498:	movt	r4, #2
   1749c:	ldr	r0, [r4]
   174a0:	bl	11168 <flockfile@plt>
   174a4:	ldr	r3, [fp, #20]
   174a8:	str	r3, [sp]
   174ac:	ldr	r3, [sp, #104]	; 0x68
   174b0:	ldr	r2, [sp, #20]
   174b4:	ldr	r2, [r2]
   174b8:	movw	r1, #37136	; 0x9110
   174bc:	movt	r1, #1
   174c0:	ldr	r0, [r4]
   174c4:	bl	110e4 <fprintf@plt>
   174c8:	cmp	r6, #0
   174cc:	ble	17528 <argp_error@@Base+0x600>
   174d0:	ldr	r2, [sp, #24]
   174d4:	sub	r4, r2, #1
   174d8:	sub	r3, r6, #1
   174dc:	add	r8, r2, r3
   174e0:	movw	r7, #37184	; 0x9140
   174e4:	movt	r7, #1
   174e8:	movw	r6, #41560	; 0xa258
   174ec:	movt	r6, #2
   174f0:	ldr	r9, [sp, #16]
   174f4:	b	17504 <argp_error@@Base+0x5dc>
   174f8:	add	r5, r5, #1
   174fc:	cmp	r8, r4
   17500:	beq	17528 <argp_error@@Base+0x600>
   17504:	ldrb	r3, [r4, #1]!
   17508:	cmp	r3, #0
   1750c:	beq	174f8 <argp_error@@Base+0x5d0>
   17510:	ldr	r3, [r9, r5, lsl #4]
   17514:	ldr	r2, [sp, #104]	; 0x68
   17518:	mov	r1, r7
   1751c:	ldr	r0, [r6]
   17520:	bl	110e4 <fprintf@plt>
   17524:	b	174f8 <argp_error@@Base+0x5d0>
   17528:	movw	r4, #41560	; 0xa258
   1752c:	movt	r4, #2
   17530:	ldr	r1, [r4]
   17534:	mov	r0, #10
   17538:	bl	11150 <fputc@plt>
   1753c:	ldr	r0, [r4]
   17540:	bl	10ff4 <funlockfile@plt>
   17544:	b	17458 <argp_error@@Base+0x530>
   17548:	ldr	r0, [sp, #24]
   1754c:	bl	12e0c <argp_parse@@Base+0xcd8>
   17550:	b	17464 <argp_error@@Base+0x53c>
   17554:	movw	r0, #41560	; 0xa258
   17558:	movt	r0, #2
   1755c:	ldr	r3, [fp, #20]
   17560:	str	r3, [sp]
   17564:	ldr	r3, [sp, #104]	; 0x68
   17568:	ldr	r2, [sp, #20]
   1756c:	ldr	r2, [r2]
   17570:	movw	r1, #37192	; 0x9148
   17574:	movt	r1, #1
   17578:	ldr	r0, [r0]
   1757c:	bl	110e4 <fprintf@plt>
   17580:	b	173f8 <argp_error@@Base+0x4d0>
   17584:	ldr	r6, [sp, #36]	; 0x24
   17588:	b	17214 <argp_error@@Base+0x2ec>
   1758c:	ldr	r3, [sp, #100]	; 0x64
   17590:	cmp	r3, #0
   17594:	bne	175ac <argp_error@@Base+0x684>
   17598:	ldr	r3, [sp, #12]
   1759c:	ldr	r3, [r3, #12]
   175a0:	str	r3, [fp, #8]
   175a4:	mov	r0, #63	; 0x3f
   175a8:	b	17274 <argp_error@@Base+0x34c>
   175ac:	movw	r0, #41560	; 0xa258
   175b0:	movt	r0, #2
   175b4:	ldr	r3, [sp, #12]
   175b8:	ldr	r3, [r3]
   175bc:	str	r3, [sp]
   175c0:	ldr	r3, [sp, #104]	; 0x68
   175c4:	ldr	r2, [sp, #20]
   175c8:	ldr	r2, [r2]
   175cc:	movw	r1, #37224	; 0x9168
   175d0:	movt	r1, #1
   175d4:	ldr	r0, [r0]
   175d8:	bl	110e4 <fprintf@plt>
   175dc:	b	17598 <argp_error@@Base+0x670>
   175e0:	ldr	r1, [sp, #12]
   175e4:	ldr	r1, [r1, #4]
   175e8:	cmp	r1, #1
   175ec:	bne	1724c <argp_error@@Base+0x324>
   175f0:	ldr	r1, [sp, #32]
   175f4:	cmp	r2, r1
   175f8:	bge	17614 <argp_error@@Base+0x6ec>
   175fc:	add	r3, r3, #2
   17600:	str	r3, [fp]
   17604:	ldr	r3, [sp, #20]
   17608:	ldr	r3, [r3, r2, lsl #2]
   1760c:	str	r3, [fp, #12]
   17610:	b	1724c <argp_error@@Base+0x324>
   17614:	ldr	r3, [sp, #100]	; 0x64
   17618:	cmp	r3, #0
   1761c:	bne	17644 <argp_error@@Base+0x71c>
   17620:	ldr	r3, [sp, #12]
   17624:	ldr	r3, [r3, #12]
   17628:	str	r3, [fp, #8]
   1762c:	ldr	r3, [sp, #28]
   17630:	ldrb	r3, [r3]
   17634:	cmp	r3, #58	; 0x3a
   17638:	moveq	r0, #58	; 0x3a
   1763c:	movne	r0, #63	; 0x3f
   17640:	b	17274 <argp_error@@Base+0x34c>
   17644:	movw	r0, #41560	; 0xa258
   17648:	movt	r0, #2
   1764c:	ldr	r3, [sp, #12]
   17650:	ldr	r3, [r3]
   17654:	str	r3, [sp]
   17658:	ldr	r3, [sp, #104]	; 0x68
   1765c:	ldr	r2, [sp, #20]
   17660:	ldr	r2, [r2]
   17664:	movw	r1, #37272	; 0x9198
   17668:	movt	r1, #1
   1766c:	ldr	r0, [r0]
   17670:	bl	110e4 <fprintf@plt>
   17674:	b	17620 <argp_error@@Base+0x6f8>
   17678:	ldr	r3, [sp, #12]
   1767c:	ldr	r0, [r3, #12]
   17680:	b	17274 <argp_error@@Base+0x34c>
   17684:	mvn	r0, #0
   17688:	b	17274 <argp_error@@Base+0x34c>
   1768c:	mov	r6, #0
   17690:	cmp	sl, #0
   17694:	beq	173b0 <argp_error@@Base+0x488>
   17698:	ldr	r9, [sp, #16]
   1769c:	mvn	r3, #0
   176a0:	str	r3, [sp, #36]	; 0x24
   176a4:	mov	r5, #0
   176a8:	str	r5, [sp, #40]	; 0x28
   176ac:	str	r5, [sp, #24]
   176b0:	mov	r4, r5
   176b4:	mov	r3, #1
   176b8:	str	r3, [sp, #44]	; 0x2c
   176bc:	mov	r0, sl
   176c0:	mov	sl, r5
   176c4:	str	r7, [sp, #12]
   176c8:	b	17324 <argp_error@@Base+0x3fc>
   176cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   176d0:	strd	r6, [sp, #8]
   176d4:	strd	r8, [sp, #16]
   176d8:	strd	sl, [sp, #24]
   176dc:	str	lr, [sp, #32]
   176e0:	sub	sp, sp, #36	; 0x24
   176e4:	str	r3, [sp, #24]
   176e8:	ldr	r4, [sp, #80]	; 0x50
   176ec:	ldr	r8, [r4, #4]
   176f0:	subs	r5, r0, #0
   176f4:	ble	17c30 <argp_error@@Base+0xd08>
   176f8:	mov	r9, r1
   176fc:	mov	r6, r2
   17700:	mov	r3, #0
   17704:	str	r3, [r4, #12]
   17708:	ldr	r3, [r4]
   1770c:	cmp	r3, #0
   17710:	beq	17734 <argp_error@@Base+0x80c>
   17714:	ldr	r3, [r4, #16]
   17718:	cmp	r3, #0
   1771c:	beq	1773c <argp_error@@Base+0x814>
   17720:	ldrb	r3, [r2]
   17724:	sub	r3, r3, #43	; 0x2b
   17728:	tst	r3, #253	; 0xfd
   1772c:	addeq	r6, r2, #1
   17730:	b	17798 <argp_error@@Base+0x870>
   17734:	mov	r3, #1
   17738:	str	r3, [r4]
   1773c:	ldr	r3, [r4]
   17740:	str	r3, [r4, #32]
   17744:	str	r3, [r4, #28]
   17748:	mov	r3, #0
   1774c:	str	r3, [r4, #20]
   17750:	ldrb	r3, [r6]
   17754:	cmp	r3, #45	; 0x2d
   17758:	moveq	r3, #2
   1775c:	streq	r3, [r4, #24]
   17760:	addeq	r6, r6, #1
   17764:	beq	17790 <argp_error@@Base+0x868>
   17768:	cmp	r3, #43	; 0x2b
   1776c:	moveq	r3, #0
   17770:	streq	r3, [r4, #24]
   17774:	addeq	r6, r6, #1
   17778:	beq	17790 <argp_error@@Base+0x868>
   1777c:	ldr	r3, [sp, #84]	; 0x54
   17780:	cmp	r3, #0
   17784:	beq	17858 <argp_error@@Base+0x930>
   17788:	mov	r3, #0
   1778c:	str	r3, [r4, #24]
   17790:	mov	r3, #1
   17794:	str	r3, [r4, #16]
   17798:	ldrb	r3, [r6]
   1779c:	cmp	r3, #58	; 0x3a
   177a0:	moveq	r8, #0
   177a4:	ldr	r3, [r4, #20]
   177a8:	cmp	r3, #0
   177ac:	beq	177bc <argp_error@@Base+0x894>
   177b0:	ldrb	r3, [r3]
   177b4:	cmp	r3, #0
   177b8:	bne	1795c <argp_error@@Base+0xa34>
   177bc:	ldr	r3, [r4]
   177c0:	ldr	r2, [r4, #32]
   177c4:	cmp	r2, r3
   177c8:	strgt	r3, [r4, #32]
   177cc:	ldr	r2, [r4, #28]
   177d0:	cmp	r3, r2
   177d4:	strlt	r3, [r4, #28]
   177d8:	ldr	r2, [r4, #24]
   177dc:	cmp	r2, #1
   177e0:	beq	17878 <argp_error@@Base+0x950>
   177e4:	ldr	r7, [r4]
   177e8:	cmp	r7, r5
   177ec:	beq	17838 <argp_error@@Base+0x910>
   177f0:	ldr	sl, [r9, r7, lsl #2]
   177f4:	movw	r1, #34960	; 0x8890
   177f8:	movt	r1, #1
   177fc:	mov	r0, sl
   17800:	bl	10f40 <strcmp@plt>
   17804:	cmp	r0, #0
   17808:	bne	17c40 <argp_error@@Base+0xd18>
   1780c:	add	r7, r7, #1
   17810:	str	r7, [r4]
   17814:	ldr	r2, [r4, #28]
   17818:	ldr	r3, [r4, #32]
   1781c:	cmp	r2, r3
   17820:	cmpne	r7, r3
   17824:	bne	178f4 <argp_error@@Base+0x9cc>
   17828:	cmp	r2, r3
   1782c:	streq	r7, [r4, #28]
   17830:	str	r5, [r4, #32]
   17834:	str	r5, [r4]
   17838:	ldr	r3, [r4, #28]
   1783c:	ldr	r2, [r4, #32]
   17840:	cmp	r3, r2
   17844:	mvneq	r0, #0
   17848:	beq	17c6c <argp_error@@Base+0xd44>
   1784c:	str	r3, [r4]
   17850:	mvn	r0, #0
   17854:	b	17c6c <argp_error@@Base+0xd44>
   17858:	movw	r0, #37312	; 0x91c0
   1785c:	movt	r0, #1
   17860:	bl	11030 <getenv@plt>
   17864:	cmp	r0, #0
   17868:	bne	17788 <argp_error@@Base+0x860>
   1786c:	mov	r3, #1
   17870:	str	r3, [r4, #24]
   17874:	b	17790 <argp_error@@Base+0x868>
   17878:	ldr	r2, [r4, #32]
   1787c:	ldr	r1, [r4, #28]
   17880:	cmp	r1, r2
   17884:	cmpne	r3, r2
   17888:	bne	178a8 <argp_error@@Base+0x980>
   1788c:	cmp	r3, r2
   17890:	strne	r3, [r4, #28]
   17894:	ldr	r3, [r4]
   17898:	cmp	r5, r3
   1789c:	ble	178ec <argp_error@@Base+0x9c4>
   178a0:	add	r1, r9, r3, lsl #2
   178a4:	b	178c8 <argp_error@@Base+0x9a0>
   178a8:	mov	r1, r4
   178ac:	mov	r0, r9
   178b0:	bl	17078 <argp_error@@Base+0x150>
   178b4:	b	17894 <argp_error@@Base+0x96c>
   178b8:	add	r3, r3, #1
   178bc:	str	r3, [r4]
   178c0:	cmp	r3, r5
   178c4:	beq	178e8 <argp_error@@Base+0x9c0>
   178c8:	ldr	r2, [r1], #4
   178cc:	ldrb	r0, [r2]
   178d0:	cmp	r0, #45	; 0x2d
   178d4:	bne	178b8 <argp_error@@Base+0x990>
   178d8:	ldrb	r2, [r2, #1]
   178dc:	cmp	r2, #0
   178e0:	beq	178b8 <argp_error@@Base+0x990>
   178e4:	b	178ec <argp_error@@Base+0x9c4>
   178e8:	mov	r3, r5
   178ec:	str	r3, [r4, #32]
   178f0:	b	177e4 <argp_error@@Base+0x8bc>
   178f4:	mov	r1, r4
   178f8:	mov	r0, r9
   178fc:	bl	17078 <argp_error@@Base+0x150>
   17900:	b	17830 <argp_error@@Base+0x908>
   17904:	ldrb	r1, [sl, #1]
   17908:	cmp	r1, #0
   1790c:	beq	17c4c <argp_error@@Base+0xd24>
   17910:	ldr	r3, [sp, #24]
   17914:	cmp	r3, #0
   17918:	beq	1794c <argp_error@@Base+0xa24>
   1791c:	cmp	r1, #45	; 0x2d
   17920:	beq	179c8 <argp_error@@Base+0xaa0>
   17924:	ldr	r3, [sp, #76]	; 0x4c
   17928:	cmp	r3, #0
   1792c:	beq	1794c <argp_error@@Base+0xa24>
   17930:	ldrb	r3, [sl, #2]
   17934:	cmp	r3, #0
   17938:	bne	17a0c <argp_error@@Base+0xae4>
   1793c:	mov	r0, r6
   17940:	bl	110d8 <strchr@plt>
   17944:	cmp	r0, #0
   17948:	beq	17a0c <argp_error@@Base+0xae4>
   1794c:	ldr	r3, [r4]
   17950:	ldr	r3, [r9, r3, lsl #2]
   17954:	add	r3, r3, #1
   17958:	str	r3, [r4, #20]
   1795c:	ldr	sl, [r4, #20]
   17960:	add	fp, sl, #1
   17964:	str	fp, [r4, #20]
   17968:	ldrb	r7, [sl]
   1796c:	str	r7, [sp, #28]
   17970:	mov	r1, r7
   17974:	mov	r0, r6
   17978:	bl	110d8 <strchr@plt>
   1797c:	ldrb	r3, [sl, #1]
   17980:	cmp	r3, #0
   17984:	bne	17994 <argp_error@@Base+0xa6c>
   17988:	ldr	r3, [r4]
   1798c:	add	r3, r3, #1
   17990:	str	r3, [r4]
   17994:	sub	r3, r7, #58	; 0x3a
   17998:	uxtb	r3, r3
   1799c:	cmp	r0, #0
   179a0:	cmpne	r3, #1
   179a4:	bls	17a58 <argp_error@@Base+0xb30>
   179a8:	ldrb	r3, [r0]
   179ac:	cmp	r3, #87	; 0x57
   179b0:	beq	17a94 <argp_error@@Base+0xb6c>
   179b4:	ldrb	r3, [r0, #1]
   179b8:	cmp	r3, #58	; 0x3a
   179bc:	beq	17b68 <argp_error@@Base+0xc40>
   179c0:	mov	r0, r7
   179c4:	b	17c6c <argp_error@@Base+0xd44>
   179c8:	add	sl, sl, #2
   179cc:	str	sl, [r4, #20]
   179d0:	movw	r3, #34960	; 0x8890
   179d4:	movt	r3, #1
   179d8:	str	r3, [sp, #16]
   179dc:	str	r8, [sp, #12]
   179e0:	str	r4, [sp, #8]
   179e4:	ldr	r3, [sp, #76]	; 0x4c
   179e8:	str	r3, [sp, #4]
   179ec:	ldr	r3, [sp, #72]	; 0x48
   179f0:	str	r3, [sp]
   179f4:	ldr	r3, [sp, #24]
   179f8:	mov	r2, r6
   179fc:	mov	r1, r9
   17a00:	mov	r0, r5
   17a04:	bl	17154 <argp_error@@Base+0x22c>
   17a08:	b	17c6c <argp_error@@Base+0xd44>
   17a0c:	add	sl, sl, #1
   17a10:	str	sl, [r4, #20]
   17a14:	movw	r3, #37328	; 0x91d0
   17a18:	movt	r3, #1
   17a1c:	str	r3, [sp, #16]
   17a20:	str	r8, [sp, #12]
   17a24:	str	r4, [sp, #8]
   17a28:	ldr	r3, [sp, #76]	; 0x4c
   17a2c:	str	r3, [sp, #4]
   17a30:	ldr	r3, [sp, #72]	; 0x48
   17a34:	str	r3, [sp]
   17a38:	ldr	r3, [sp, #24]
   17a3c:	mov	r2, r6
   17a40:	mov	r1, r9
   17a44:	mov	r0, r5
   17a48:	bl	17154 <argp_error@@Base+0x22c>
   17a4c:	cmn	r0, #1
   17a50:	bne	17c6c <argp_error@@Base+0xd44>
   17a54:	b	1794c <argp_error@@Base+0xa24>
   17a58:	cmp	r8, #0
   17a5c:	bne	17a70 <argp_error@@Base+0xb48>
   17a60:	ldr	r3, [sp, #28]
   17a64:	str	r3, [r4, #8]
   17a68:	mov	r0, #63	; 0x3f
   17a6c:	b	17c6c <argp_error@@Base+0xd44>
   17a70:	movw	r0, #41560	; 0xa258
   17a74:	movt	r0, #2
   17a78:	ldr	r3, [sp, #28]
   17a7c:	ldr	r2, [r9]
   17a80:	movw	r1, #37332	; 0x91d4
   17a84:	movt	r1, #1
   17a88:	ldr	r0, [r0]
   17a8c:	bl	110e4 <fprintf@plt>
   17a90:	b	17a60 <argp_error@@Base+0xb38>
   17a94:	ldrb	r1, [r0, #1]
   17a98:	ldr	r2, [sp, #24]
   17a9c:	cmp	r1, #59	; 0x3b
   17aa0:	movne	r3, #0
   17aa4:	moveq	r3, #1
   17aa8:	cmp	r2, #0
   17aac:	moveq	r3, #0
   17ab0:	cmp	r3, #0
   17ab4:	beq	179b4 <argp_error@@Base+0xa8c>
   17ab8:	ldrb	r3, [sl, #1]
   17abc:	cmp	r3, #0
   17ac0:	strne	fp, [r4, #12]
   17ac4:	bne	17adc <argp_error@@Base+0xbb4>
   17ac8:	ldr	r3, [r4]
   17acc:	cmp	r3, r5
   17ad0:	beq	17b24 <argp_error@@Base+0xbfc>
   17ad4:	ldr	r3, [r9, r3, lsl #2]
   17ad8:	str	r3, [r4, #12]
   17adc:	ldr	r3, [r4, #12]
   17ae0:	str	r3, [r4, #20]
   17ae4:	mov	r2, #0
   17ae8:	str	r2, [r4, #12]
   17aec:	movw	r3, #37404	; 0x921c
   17af0:	movt	r3, #1
   17af4:	str	r3, [sp, #16]
   17af8:	str	r8, [sp, #12]
   17afc:	str	r4, [sp, #8]
   17b00:	str	r2, [sp, #4]
   17b04:	ldr	r3, [sp, #72]	; 0x48
   17b08:	str	r3, [sp]
   17b0c:	ldr	r3, [sp, #24]
   17b10:	mov	r2, r6
   17b14:	mov	r1, r9
   17b18:	mov	r0, r5
   17b1c:	bl	17154 <argp_error@@Base+0x22c>
   17b20:	b	17c6c <argp_error@@Base+0xd44>
   17b24:	cmp	r8, #0
   17b28:	bne	17b44 <argp_error@@Base+0xc1c>
   17b2c:	ldr	r3, [sp, #28]
   17b30:	str	r3, [r4, #8]
   17b34:	ldrb	r0, [r6]
   17b38:	cmp	r0, #58	; 0x3a
   17b3c:	movne	r0, #63	; 0x3f
   17b40:	b	17c6c <argp_error@@Base+0xd44>
   17b44:	movw	r0, #41560	; 0xa258
   17b48:	movt	r0, #2
   17b4c:	ldr	r3, [sp, #28]
   17b50:	ldr	r2, [r9]
   17b54:	movw	r1, #37360	; 0x91f0
   17b58:	movt	r1, #1
   17b5c:	ldr	r0, [r0]
   17b60:	bl	110e4 <fprintf@plt>
   17b64:	b	17b2c <argp_error@@Base+0xc04>
   17b68:	ldrb	r3, [r0, #2]
   17b6c:	cmp	r3, #58	; 0x3a
   17b70:	beq	17b9c <argp_error@@Base+0xc74>
   17b74:	ldrb	r3, [sl, #1]
   17b78:	cmp	r3, #0
   17b7c:	beq	17bcc <argp_error@@Base+0xca4>
   17b80:	str	fp, [r4, #12]
   17b84:	ldr	r3, [r4]
   17b88:	add	r3, r3, #1
   17b8c:	str	r3, [r4]
   17b90:	mov	r3, #0
   17b94:	str	r3, [r4, #20]
   17b98:	b	179c0 <argp_error@@Base+0xa98>
   17b9c:	ldrb	r3, [sl, #1]
   17ba0:	cmp	r3, #0
   17ba4:	moveq	r3, #0
   17ba8:	streq	r3, [r4, #12]
   17bac:	beq	17bc0 <argp_error@@Base+0xc98>
   17bb0:	str	fp, [r4, #12]
   17bb4:	ldr	r3, [r4]
   17bb8:	add	r3, r3, #1
   17bbc:	str	r3, [r4]
   17bc0:	mov	r3, #0
   17bc4:	str	r3, [r4, #20]
   17bc8:	b	179c0 <argp_error@@Base+0xa98>
   17bcc:	ldr	r3, [r4]
   17bd0:	cmp	r3, r5
   17bd4:	beq	17bec <argp_error@@Base+0xcc4>
   17bd8:	add	r2, r3, #1
   17bdc:	str	r2, [r4]
   17be0:	ldr	r3, [r9, r3, lsl #2]
   17be4:	str	r3, [r4, #12]
   17be8:	b	17b90 <argp_error@@Base+0xc68>
   17bec:	cmp	r8, #0
   17bf0:	bne	17c0c <argp_error@@Base+0xce4>
   17bf4:	ldr	r3, [sp, #28]
   17bf8:	str	r3, [r4, #8]
   17bfc:	ldrb	r7, [r6]
   17c00:	cmp	r7, #58	; 0x3a
   17c04:	movne	r7, #63	; 0x3f
   17c08:	b	17b90 <argp_error@@Base+0xc68>
   17c0c:	movw	r0, #41560	; 0xa258
   17c10:	movt	r0, #2
   17c14:	ldr	r3, [sp, #28]
   17c18:	ldr	r2, [r9]
   17c1c:	movw	r1, #37360	; 0x91f0
   17c20:	movt	r1, #1
   17c24:	ldr	r0, [r0]
   17c28:	bl	110e4 <fprintf@plt>
   17c2c:	b	17bf4 <argp_error@@Base+0xccc>
   17c30:	mvn	r0, #0
   17c34:	b	17c6c <argp_error@@Base+0xd44>
   17c38:	mvn	r0, #0
   17c3c:	b	17c6c <argp_error@@Base+0xd44>
   17c40:	ldrb	r3, [sl]
   17c44:	cmp	r3, #45	; 0x2d
   17c48:	beq	17904 <argp_error@@Base+0x9dc>
   17c4c:	ldr	r3, [r4, #24]
   17c50:	cmp	r3, #0
   17c54:	beq	17c38 <argp_error@@Base+0xd10>
   17c58:	add	r3, r7, #1
   17c5c:	str	r3, [r4]
   17c60:	ldr	r3, [r9, r7, lsl #2]
   17c64:	str	r3, [r4, #12]
   17c68:	mov	r0, #1
   17c6c:	add	sp, sp, #36	; 0x24
   17c70:	ldrd	r4, [sp]
   17c74:	ldrd	r6, [sp, #8]
   17c78:	ldrd	r8, [sp, #16]
   17c7c:	ldrd	sl, [sp, #24]
   17c80:	add	sp, sp, #32
   17c84:	pop	{pc}		; (ldr pc, [sp], #4)
   17c88:	strd	r4, [sp, #-12]!
   17c8c:	str	lr, [sp, #8]
   17c90:	sub	sp, sp, #20
   17c94:	movw	r4, #41600	; 0xa280
   17c98:	movt	r4, #2
   17c9c:	movw	r5, #41536	; 0xa240
   17ca0:	movt	r5, #2
   17ca4:	ldr	ip, [r5]
   17ca8:	str	ip, [r4]
   17cac:	ldr	ip, [r5, #4]
   17cb0:	str	ip, [r4, #4]
   17cb4:	ldr	ip, [sp, #40]	; 0x28
   17cb8:	str	ip, [sp, #12]
   17cbc:	str	r4, [sp, #8]
   17cc0:	ldr	ip, [sp, #36]	; 0x24
   17cc4:	str	ip, [sp, #4]
   17cc8:	ldr	ip, [sp, #32]
   17ccc:	str	ip, [sp]
   17cd0:	bl	176cc <argp_error@@Base+0x7a4>
   17cd4:	ldr	r3, [r4]
   17cd8:	str	r3, [r5]
   17cdc:	movw	r3, #41644	; 0xa2ac
   17ce0:	movt	r3, #2
   17ce4:	ldr	r2, [r4, #12]
   17ce8:	str	r2, [r3]
   17cec:	ldr	r3, [r4, #8]
   17cf0:	str	r3, [r5, #8]
   17cf4:	add	sp, sp, #20
   17cf8:	ldrd	r4, [sp]
   17cfc:	add	sp, sp, #8
   17d00:	pop	{pc}		; (ldr pc, [sp], #4)
   17d04:	push	{lr}		; (str lr, [sp, #-4]!)
   17d08:	sub	sp, sp, #20
   17d0c:	mov	r3, #1
   17d10:	str	r3, [sp, #8]
   17d14:	mov	r3, #0
   17d18:	str	r3, [sp, #4]
   17d1c:	str	r3, [sp]
   17d20:	bl	17c88 <argp_error@@Base+0xd60>
   17d24:	add	sp, sp, #20
   17d28:	pop	{pc}		; (ldr pc, [sp], #4)
   17d2c:	str	r4, [sp, #-8]!
   17d30:	str	lr, [sp, #4]
   17d34:	umull	r2, r3, r1, r2
   17d38:	cmp	r3, #0
   17d3c:	bne	17d54 <argp_error@@Base+0xe2c>
   17d40:	mov	r1, r2
   17d44:	bl	13be0 <argp_parse@@Base+0x1aac>
   17d48:	ldr	r4, [sp]
   17d4c:	add	sp, sp, #4
   17d50:	pop	{pc}		; (ldr pc, [sp], #4)
   17d54:	bl	110f0 <__errno_location@plt>
   17d58:	mov	r3, #12
   17d5c:	str	r3, [r0]
   17d60:	mov	r0, #0
   17d64:	b	17d48 <argp_error@@Base+0xe20>
   17d68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d6c:	strd	r6, [sp, #8]
   17d70:	str	r8, [sp, #16]
   17d74:	str	lr, [sp, #20]
   17d78:	mov	r8, r0
   17d7c:	mov	r7, r1
   17d80:	mov	r6, r2
   17d84:	mov	r5, r3
   17d88:	mov	r0, #36	; 0x24
   17d8c:	bl	13ba4 <argp_parse@@Base+0x1a70>
   17d90:	subs	r4, r0, #0
   17d94:	beq	17dd8 <argp_error@@Base+0xeb0>
   17d98:	str	r8, [r4]
   17d9c:	str	r7, [r4, #4]
   17da0:	str	r6, [r4, #8]
   17da4:	str	r5, [r4, #12]
   17da8:	mov	r3, #0
   17dac:	str	r3, [r4, #20]
   17db0:	str	r3, [r4, #16]
   17db4:	mov	r0, #200	; 0xc8
   17db8:	bl	13ba4 <argp_parse@@Base+0x1a70>
   17dbc:	mov	r5, r0
   17dc0:	str	r0, [r4, #24]
   17dc4:	cmp	r0, #0
   17dc8:	strne	r0, [r4, #28]
   17dcc:	addne	r5, r0, #200	; 0xc8
   17dd0:	strne	r5, [r4, #32]
   17dd4:	beq	17df0 <argp_error@@Base+0xec8>
   17dd8:	mov	r0, r4
   17ddc:	ldrd	r4, [sp]
   17de0:	ldrd	r6, [sp, #8]
   17de4:	ldr	r8, [sp, #16]
   17de8:	add	sp, sp, #20
   17dec:	pop	{pc}		; (ldr pc, [sp], #4)
   17df0:	mov	r0, r4
   17df4:	bl	12e0c <argp_parse@@Base+0xcd8>
   17df8:	mov	r4, r5
   17dfc:	b	17dd8 <argp_error@@Base+0xeb0>
   17e00:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17e04:	strd	r6, [sp, #8]
   17e08:	strd	r8, [sp, #16]
   17e0c:	strd	sl, [sp, #24]
   17e10:	str	lr, [sp, #32]
   17e14:	sub	sp, sp, #20
   17e18:	mov	r4, r0
   17e1c:	ldr	r5, [r0, #24]
   17e20:	ldr	r3, [r0, #16]
   17e24:	add	r5, r5, r3
   17e28:	mov	sl, #32
   17e2c:	str	sl, [sp, #8]
   17e30:	b	17f18 <argp_error@@Base+0xff0>
   17e34:	mov	r7, #0
   17e38:	ldr	r0, [r4]
   17e3c:	ldr	r3, [r0, #20]
   17e40:	ldr	r2, [r0, #24]
   17e44:	cmp	r3, r2
   17e48:	addcc	r2, r3, #1
   17e4c:	strcc	r2, [r0, #20]
   17e50:	strbcc	sl, [r3]
   17e54:	bcs	17f84 <argp_error@@Base+0x105c>
   17e58:	add	r7, r7, #1
   17e5c:	cmp	r6, r7
   17e60:	bne	17e38 <argp_error@@Base+0xf10>
   17e64:	str	r6, [r4, #20]
   17e68:	ldr	r8, [r4, #28]
   17e6c:	sub	fp, r8, r5
   17e70:	mov	r2, fp
   17e74:	mov	r1, #10
   17e78:	mov	r0, r5
   17e7c:	bl	11114 <memchr@plt>
   17e80:	mov	r6, r0
   17e84:	ldr	r3, [r4, #20]
   17e88:	cmp	r3, #0
   17e8c:	movlt	r3, #0
   17e90:	strlt	r3, [r4, #20]
   17e94:	cmp	r6, #0
   17e98:	beq	17f90 <argp_error@@Base+0x1068>
   17e9c:	ldr	r0, [r4, #20]
   17ea0:	ldr	r9, [r4, #8]
   17ea4:	sub	r3, r6, r5
   17ea8:	add	r3, r3, r0
   17eac:	cmp	r3, r9
   17eb0:	movlt	r3, #0
   17eb4:	strlt	r3, [r4, #20]
   17eb8:	addlt	r5, r6, #1
   17ebc:	blt	17f18 <argp_error@@Base+0xff0>
   17ec0:	sub	r7, r9, #1
   17ec4:	ldr	r3, [r4, #12]
   17ec8:	str	r3, [sp, #4]
   17ecc:	cmp	r3, #0
   17ed0:	bge	17fbc <argp_error@@Base+0x1094>
   17ed4:	cmp	r8, r6
   17ed8:	bls	1804c <argp_error@@Base+0x1124>
   17edc:	sub	r0, r7, r0
   17ee0:	sub	r2, r8, r6
   17ee4:	mov	r1, r6
   17ee8:	add	r0, r5, r0
   17eec:	bl	10f70 <memmove@plt>
   17ef0:	ldr	r3, [r4, #20]
   17ef4:	sub	r7, r7, r3
   17ef8:	add	r7, r5, r7
   17efc:	sub	r6, r7, r6
   17f00:	ldr	r3, [r4, #28]
   17f04:	sub	r6, r3, r6
   17f08:	str	r6, [r4, #28]
   17f0c:	mov	r3, #0
   17f10:	str	r3, [r4, #20]
   17f14:	add	r5, r5, r9
   17f18:	ldr	r8, [r4, #28]
   17f1c:	cmp	r8, r5
   17f20:	bls	18064 <argp_error@@Base+0x113c>
   17f24:	ldr	r3, [r4, #20]
   17f28:	cmp	r3, #0
   17f2c:	bne	17e68 <argp_error@@Base+0xf40>
   17f30:	ldr	r6, [r4, #4]
   17f34:	cmp	r6, #0
   17f38:	beq	18310 <argp_error@@Base+0x13e8>
   17f3c:	add	r3, r8, r6
   17f40:	ldr	r2, [r4, #32]
   17f44:	cmp	r2, r3
   17f48:	bls	17e34 <argp_error@@Base+0xf0c>
   17f4c:	add	r7, r5, r6
   17f50:	sub	r2, r8, r5
   17f54:	mov	r1, r5
   17f58:	mov	r0, r7
   17f5c:	bl	10f70 <memmove@plt>
   17f60:	ldr	r3, [r4, #28]
   17f64:	add	r3, r3, r6
   17f68:	str	r3, [r4, #28]
   17f6c:	mov	r2, r6
   17f70:	mov	r1, sl
   17f74:	mov	r0, r5
   17f78:	bl	11108 <memset@plt>
   17f7c:	mov	r5, r7
   17f80:	b	17e64 <argp_error@@Base+0xf3c>
   17f84:	ldr	r1, [sp, #8]
   17f88:	bl	1112c <__overflow@plt>
   17f8c:	b	17e58 <argp_error@@Base+0xf30>
   17f90:	ldr	r3, [r4, #20]
   17f94:	add	r3, fp, r3
   17f98:	ldr	r7, [r4, #8]
   17f9c:	cmp	r3, r7
   17fa0:	bcc	18044 <argp_error@@Base+0x111c>
   17fa4:	sub	r7, r7, #1
   17fa8:	ldr	r3, [r4, #12]
   17fac:	str	r3, [sp, #4]
   17fb0:	cmp	r3, #0
   17fb4:	blt	1804c <argp_error@@Base+0x1124>
   17fb8:	mov	r6, r8
   17fbc:	ldr	r3, [r4, #20]
   17fc0:	rsb	r3, r3, #1
   17fc4:	add	r7, r3, r7
   17fc8:	adds	r7, r5, r7
   17fcc:	bcs	18308 <argp_error@@Base+0x13e0>
   17fd0:	bl	110a8 <__ctype_b_loc@plt>
   17fd4:	ldr	r0, [r0]
   17fd8:	mov	r3, r7
   17fdc:	mov	r1, r3
   17fe0:	sub	r3, r3, #1
   17fe4:	ldrb	r2, [r1]
   17fe8:	lsl	r2, r2, #1
   17fec:	ldrh	r2, [r0, r2]
   17ff0:	tst	r2, #1
   17ff4:	bne	18090 <argp_error@@Base+0x1168>
   17ff8:	mov	r1, r3
   17ffc:	cmp	r3, r5
   18000:	bcs	17fdc <argp_error@@Base+0x10b4>
   18004:	add	r9, r1, #1
   18008:	cmp	r9, r5
   1800c:	bhi	180cc <argp_error@@Base+0x11a4>
   18010:	cmp	r6, r7
   18014:	bhi	18168 <argp_error@@Base+0x1240>
   18018:	cmp	r7, r6
   1801c:	beq	181a8 <argp_error@@Base+0x1280>
   18020:	bl	110a8 <__ctype_b_loc@plt>
   18024:	ldr	r2, [r0]
   18028:	mov	r9, r7
   1802c:	ldrb	r3, [r9, #1]!
   18030:	lsl	r3, r3, #1
   18034:	ldrh	r3, [r2, r3]
   18038:	tst	r3, #1
   1803c:	bne	1802c <argp_error@@Base+0x1104>
   18040:	b	180d0 <argp_error@@Base+0x11a8>
   18044:	str	r3, [r4, #20]
   18048:	b	18064 <argp_error@@Base+0x113c>
   1804c:	ldr	r3, [r4, #20]
   18050:	add	r3, fp, r3
   18054:	str	r3, [r4, #20]
   18058:	sub	r3, r7, r3
   1805c:	add	r8, r8, r3
   18060:	str	r8, [r4, #28]
   18064:	ldr	r3, [r4, #28]
   18068:	ldr	r2, [r4, #24]
   1806c:	sub	r3, r3, r2
   18070:	str	r3, [r4, #16]
   18074:	add	sp, sp, #20
   18078:	ldrd	r4, [sp]
   1807c:	ldrd	r6, [sp, #8]
   18080:	ldrd	r8, [sp, #16]
   18084:	ldrd	sl, [sp, #24]
   18088:	add	sp, sp, #32
   1808c:	pop	{pc}		; (ldr pc, [sp], #4)
   18090:	add	r9, r1, #1
   18094:	cmp	r9, r5
   18098:	bls	18010 <argp_error@@Base+0x10e8>
   1809c:	cmp	r5, r1
   180a0:	bhi	180cc <argp_error@@Base+0x11a4>
   180a4:	sub	ip, r5, #1
   180a8:	mov	r1, r3
   180ac:	cmp	r3, ip
   180b0:	beq	180cc <argp_error@@Base+0x11a4>
   180b4:	sub	r3, r3, #1
   180b8:	ldrb	r2, [r1]
   180bc:	lsl	r2, r2, #1
   180c0:	ldrh	r2, [r0, r2]
   180c4:	tst	r2, #1
   180c8:	bne	180a8 <argp_error@@Base+0x1180>
   180cc:	add	r7, r1, #1
   180d0:	add	r3, fp, #1
   180d4:	add	r3, r5, r3
   180d8:	cmp	r9, r3
   180dc:	beq	181b8 <argp_error@@Base+0x1290>
   180e0:	add	r3, r7, #1
   180e4:	sub	r3, r9, r3
   180e8:	ldr	r2, [sp, #4]
   180ec:	cmp	r3, r2
   180f0:	bge	181cc <argp_error@@Base+0x12a4>
   180f4:	cmp	r9, r8
   180f8:	bcs	181cc <argp_error@@Base+0x12a4>
   180fc:	ldr	r3, [r4, #32]
   18100:	sub	r3, r3, r8
   18104:	ldr	r2, [sp, #4]
   18108:	add	r2, r2, #1
   1810c:	cmp	r3, r2
   18110:	bgt	18274 <argp_error@@Base+0x134c>
   18114:	ldr	r0, [r4, #24]
   18118:	cmp	r0, r7
   1811c:	bcs	18130 <argp_error@@Base+0x1208>
   18120:	ldr	r3, [r4]
   18124:	sub	r2, r7, r0
   18128:	mov	r1, #1
   1812c:	bl	10fac <fwrite_unlocked@plt>
   18130:	ldr	r0, [r4]
   18134:	ldr	r3, [r0, #20]
   18138:	ldr	r2, [r0, #24]
   1813c:	cmp	r3, r2
   18140:	addcc	r2, r3, #1
   18144:	strcc	r2, [r0, #20]
   18148:	movcc	r2, #10
   1814c:	strbcc	r2, [r3]
   18150:	bcs	182b4 <argp_error@@Base+0x138c>
   18154:	ldr	r8, [r4, #24]
   18158:	sub	r5, r5, r8
   1815c:	add	fp, fp, r5
   18160:	mov	r5, r8
   18164:	b	181dc <argp_error@@Base+0x12b4>
   18168:	add	r9, r7, #1
   1816c:	str	r6, [sp, #12]
   18170:	mov	r7, r9
   18174:	cmp	r9, r6
   18178:	beq	181a0 <argp_error@@Base+0x1278>
   1817c:	bl	110a8 <__ctype_b_loc@plt>
   18180:	add	r9, r9, #1
   18184:	ldrb	r3, [r7]
   18188:	ldr	r2, [r0]
   1818c:	lsl	r3, r3, #1
   18190:	ldrh	r3, [r2, r3]
   18194:	tst	r3, #1
   18198:	beq	18170 <argp_error@@Base+0x1248>
   1819c:	b	18020 <argp_error@@Base+0x10f8>
   181a0:	ldr	r6, [sp, #12]
   181a4:	b	18018 <argp_error@@Base+0x10f0>
   181a8:	mov	r3, #0
   181ac:	str	r3, [r4, #20]
   181b0:	add	r5, r6, #1
   181b4:	b	17f18 <argp_error@@Base+0xff0>
   181b8:	ldr	r3, [r4, #32]
   181bc:	sub	r3, r3, r7
   181c0:	ldr	r2, [sp, #4]
   181c4:	cmp	r3, r2
   181c8:	ble	180f4 <argp_error@@Base+0x11cc>
   181cc:	mov	r3, #10
   181d0:	strb	r3, [r7], #1
   181d4:	mov	r8, r5
   181d8:	mov	r5, r7
   181dc:	ldr	r3, [r4, #12]
   181e0:	sub	r2, r9, r5
   181e4:	cmp	r2, r3
   181e8:	bge	182c0 <argp_error@@Base+0x1398>
   181ec:	add	r2, fp, #1
   181f0:	add	r2, r8, r2
   181f4:	cmp	r9, r2
   181f8:	bne	1820c <argp_error@@Base+0x12e4>
   181fc:	ldr	r2, [r4, #32]
   18200:	sub	r2, r2, r9
   18204:	cmp	r3, r2
   18208:	ble	182c0 <argp_error@@Base+0x1398>
   1820c:	cmp	r3, #0
   18210:	movgt	r6, #0
   18214:	ble	18248 <argp_error@@Base+0x1320>
   18218:	ldr	r0, [r4]
   1821c:	ldr	r3, [r0, #20]
   18220:	ldr	r2, [r0, #24]
   18224:	cmp	r3, r2
   18228:	addcc	r2, r3, #1
   1822c:	strcc	r2, [r0, #20]
   18230:	strbcc	sl, [r3]
   18234:	bcs	182e4 <argp_error@@Base+0x13bc>
   18238:	add	r6, r6, #1
   1823c:	ldr	r3, [r4, #12]
   18240:	cmp	r3, r6
   18244:	bgt	18218 <argp_error@@Base+0x12f0>
   18248:	cmp	r5, r9
   1824c:	bcc	182f0 <argp_error@@Base+0x13c8>
   18250:	sub	r9, r9, r8
   18254:	sub	fp, fp, r9
   18258:	add	fp, r5, fp
   1825c:	str	fp, [r4, #28]
   18260:	ldr	r3, [r4, #12]
   18264:	cmp	r3, #0
   18268:	mvneq	r3, #0
   1826c:	str	r3, [r4, #20]
   18270:	b	17f18 <argp_error@@Base+0xff0>
   18274:	sub	r8, r8, r9
   18278:	mov	r0, r2
   1827c:	mov	r2, r8
   18280:	mov	r1, r9
   18284:	add	r0, r7, r0
   18288:	bl	10f70 <memmove@plt>
   1828c:	ldr	r9, [r4, #12]
   18290:	add	r9, r9, #1
   18294:	add	r9, r7, r9
   18298:	add	r8, r9, r8
   1829c:	sub	fp, r8, r5
   182a0:	mov	r3, #10
   182a4:	strb	r3, [r7], #1
   182a8:	mov	r8, r5
   182ac:	mov	r5, r7
   182b0:	b	181dc <argp_error@@Base+0x12b4>
   182b4:	mov	r1, #10
   182b8:	bl	1112c <__overflow@plt>
   182bc:	b	18154 <argp_error@@Base+0x122c>
   182c0:	cmp	r3, #0
   182c4:	movgt	r3, #0
   182c8:	ble	18248 <argp_error@@Base+0x1320>
   182cc:	strb	sl, [r5], #1
   182d0:	add	r3, r3, #1
   182d4:	ldr	r2, [r4, #12]
   182d8:	cmp	r2, r3
   182dc:	bgt	182cc <argp_error@@Base+0x13a4>
   182e0:	b	18248 <argp_error@@Base+0x1320>
   182e4:	ldr	r1, [sp, #8]
   182e8:	bl	1112c <__overflow@plt>
   182ec:	b	18238 <argp_error@@Base+0x1310>
   182f0:	add	r2, r8, fp
   182f4:	sub	r2, r2, r9
   182f8:	mov	r1, r9
   182fc:	mov	r0, r5
   18300:	bl	10f70 <memmove@plt>
   18304:	b	18250 <argp_error@@Base+0x1328>
   18308:	mov	r1, r7
   1830c:	b	18004 <argp_error@@Base+0x10dc>
   18310:	sub	fp, r8, r5
   18314:	mov	r2, fp
   18318:	mov	r1, #10
   1831c:	mov	r0, r5
   18320:	bl	11114 <memchr@plt>
   18324:	mov	r6, r0
   18328:	b	17e94 <argp_error@@Base+0xf6c>
   1832c:	str	r4, [sp, #-8]!
   18330:	str	lr, [sp, #4]
   18334:	mov	r4, r0
   18338:	bl	17e00 <argp_error@@Base+0xed8>
   1833c:	ldr	r2, [r4, #28]
   18340:	ldr	r0, [r4, #24]
   18344:	cmp	r2, r0
   18348:	bls	1835c <argp_error@@Base+0x1434>
   1834c:	ldr	r3, [r4]
   18350:	sub	r2, r2, r0
   18354:	mov	r1, #1
   18358:	bl	10fac <fwrite_unlocked@plt>
   1835c:	ldr	r0, [r4, #24]
   18360:	bl	12e0c <argp_parse@@Base+0xcd8>
   18364:	mov	r0, r4
   18368:	bl	12e0c <argp_parse@@Base+0xcd8>
   1836c:	ldr	r4, [sp]
   18370:	add	sp, sp, #4
   18374:	pop	{pc}		; (ldr pc, [sp], #4)
   18378:	ldr	r3, [r0, #32]
   1837c:	ldr	r2, [r0, #28]
   18380:	sub	r3, r3, r2
   18384:	cmp	r3, r1
   18388:	bcc	18394 <argp_error@@Base+0x146c>
   1838c:	mov	r0, #1
   18390:	bx	lr
   18394:	strd	r4, [sp, #-16]!
   18398:	str	r6, [sp, #8]
   1839c:	str	lr, [sp, #12]
   183a0:	mov	r5, r1
   183a4:	mov	r4, r0
   183a8:	bl	17e00 <argp_error@@Base+0xed8>
   183ac:	ldr	r0, [r4, #24]
   183b0:	ldr	r2, [r4, #28]
   183b4:	ldr	r3, [r4]
   183b8:	sub	r2, r2, r0
   183bc:	mov	r1, #1
   183c0:	bl	10fac <fwrite_unlocked@plt>
   183c4:	ldr	r2, [r4, #28]
   183c8:	ldr	r3, [r4, #24]
   183cc:	sub	r1, r2, r3
   183d0:	cmp	r1, r0
   183d4:	bne	18414 <argp_error@@Base+0x14ec>
   183d8:	str	r3, [r4, #28]
   183dc:	mov	r2, #0
   183e0:	str	r2, [r4, #16]
   183e4:	ldr	r1, [r4, #32]
   183e8:	sub	r1, r1, r3
   183ec:	cmp	r1, r5
   183f0:	movcs	r0, #1
   183f4:	bcs	1843c <argp_error@@Base+0x1514>
   183f8:	adds	r5, r1, r5
   183fc:	bcc	1844c <argp_error@@Base+0x1524>
   18400:	bl	110f0 <__errno_location@plt>
   18404:	mov	r3, #12
   18408:	str	r3, [r0]
   1840c:	mov	r0, #0
   18410:	b	1843c <argp_error@@Base+0x1514>
   18414:	sub	r2, r2, r0
   18418:	str	r2, [r4, #28]
   1841c:	ldr	r1, [r4, #16]
   18420:	sub	r1, r1, r0
   18424:	str	r1, [r4, #16]
   18428:	sub	r2, r2, r3
   1842c:	add	r1, r3, r0
   18430:	mov	r0, r3
   18434:	bl	10f70 <memmove@plt>
   18438:	mov	r0, #0
   1843c:	ldrd	r4, [sp]
   18440:	ldr	r6, [sp, #8]
   18444:	add	sp, sp, #12
   18448:	pop	{pc}		; (ldr pc, [sp], #4)
   1844c:	mov	r1, r5
   18450:	mov	r0, r3
   18454:	bl	13be0 <argp_parse@@Base+0x1aac>
   18458:	cmp	r0, #0
   1845c:	beq	18400 <argp_error@@Base+0x14d8>
   18460:	str	r0, [r4, #24]
   18464:	add	r5, r0, r5
   18468:	str	r5, [r4, #32]
   1846c:	str	r0, [r4, #28]
   18470:	mov	r0, #1
   18474:	b	1843c <argp_error@@Base+0x1514>
   18478:	push	{r1, r2, r3}
   1847c:	strd	r4, [sp, #-16]!
   18480:	str	r6, [sp, #8]
   18484:	str	lr, [sp, #12]
   18488:	sub	sp, sp, #12
   1848c:	mov	r5, r0
   18490:	mov	r1, #150	; 0x96
   18494:	add	r6, sp, #32
   18498:	mov	r0, r5
   1849c:	bl	18378 <argp_error@@Base+0x1450>
   184a0:	cmp	r0, #0
   184a4:	beq	184d8 <argp_error@@Base+0x15b0>
   184a8:	str	r6, [sp, #4]
   184ac:	ldr	r0, [r5, #28]
   184b0:	ldr	r4, [r5, #32]
   184b4:	sub	r4, r4, r0
   184b8:	mov	r3, r6
   184bc:	ldr	r2, [sp, #28]
   184c0:	mov	r1, r4
   184c4:	bl	11174 <vsnprintf@plt>
   184c8:	cmp	r0, r4
   184cc:	bcc	184f8 <argp_error@@Base+0x15d0>
   184d0:	add	r1, r0, #1
   184d4:	b	18498 <argp_error@@Base+0x1570>
   184d8:	mvn	r0, #0
   184dc:	add	sp, sp, #12
   184e0:	ldrd	r4, [sp]
   184e4:	ldr	r6, [sp, #8]
   184e8:	ldr	lr, [sp, #12]
   184ec:	add	sp, sp, #16
   184f0:	add	sp, sp, #12
   184f4:	bx	lr
   184f8:	ldr	r2, [r5, #28]
   184fc:	add	r3, r2, r0
   18500:	str	r3, [r5, #28]
   18504:	b	184dc <argp_error@@Base+0x15b4>
   18508:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1850c:	mov	r7, r0
   18510:	ldr	r6, [pc, #72]	; 18560 <argp_error@@Base+0x1638>
   18514:	ldr	r5, [pc, #72]	; 18564 <argp_error@@Base+0x163c>
   18518:	add	r6, pc, r6
   1851c:	add	r5, pc, r5
   18520:	sub	r6, r6, r5
   18524:	mov	r8, r1
   18528:	mov	r9, r2
   1852c:	bl	10efc <calloc@plt-0x20>
   18530:	asrs	r6, r6, #2
   18534:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18538:	mov	r4, #0
   1853c:	add	r4, r4, #1
   18540:	ldr	r3, [r5], #4
   18544:	mov	r2, r9
   18548:	mov	r1, r8
   1854c:	mov	r0, r7
   18550:	blx	r3
   18554:	cmp	r6, r4
   18558:	bne	1853c <argp_error@@Base+0x1614>
   1855c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18560:	andeq	r1, r1, ip, ror #19
   18564:	andeq	r1, r1, r4, ror #19
   18568:	bx	lr

Disassembly of section .fini:

0001856c <.fini>:
   1856c:	push	{r3, lr}
   18570:	pop	{r3, pc}
