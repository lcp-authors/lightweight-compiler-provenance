
../repos/charybdis/modules/.libs/m_certfp.so:     file format elf32-littlearm


Disassembly of section .init:

0000046c <_init>:
 46c:	push	{r3, lr}
 470:	bl	4e0 <call_weak_fn>
 474:	pop	{r3, pc}

Disassembly of section .plt:

00000478 <.plt>:
 478:	push	{lr}		; (str lr, [sp, #-4]!)
 47c:	ldr	lr, [pc, #4]	; 488 <.plt+0x10>
 480:	add	lr, pc, lr
 484:	ldr	pc, [lr, #8]!
 488:	.word	0x00010b78

0000048c <__cxa_finalize@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2936]!	; 0xb78

00000498 <free@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2928]!	; 0xb70

000004a4 <rb_outofmemory@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2920]!	; 0xb68

000004b0 <strcpy@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2912]!	; 0xb60

000004bc <malloc@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2904]!	; 0xb58

000004c8 <__gmon_start__@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2896]!	; 0xb50

000004d4 <strlen@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2888]!	; 0xb48

Disassembly of section .text:

000004e0 <call_weak_fn>:
 4e0:	ldr	r3, [pc, #20]	; 4fc <call_weak_fn+0x1c>
 4e4:	ldr	r2, [pc, #20]	; 500 <call_weak_fn+0x20>
 4e8:	add	r3, pc, r3
 4ec:	ldr	r2, [r3, r2]
 4f0:	cmp	r2, #0
 4f4:	bxeq	lr
 4f8:	b	4c8 <__gmon_start__@plt>
 4fc:	.word	0x00010b10
 500:	.word	0x00000030

00000504 <deregister_tm_clones>:
 504:	ldr	r3, [pc, #52]	; 540 <deregister_tm_clones+0x3c>
 508:	ldr	r0, [pc, #52]	; 544 <deregister_tm_clones+0x40>
 50c:	add	r3, pc, r3
 510:	add	r0, pc, r0
 514:	add	r3, r3, #3
 518:	sub	r3, r3, r0
 51c:	cmp	r3, #6
 520:	ldr	r3, [pc, #32]	; 548 <deregister_tm_clones+0x44>
 524:	add	r3, pc, r3
 528:	bxls	lr
 52c:	ldr	r2, [pc, #24]	; 54c <deregister_tm_clones+0x48>
 530:	ldr	r3, [r3, r2]
 534:	cmp	r3, #0
 538:	bxeq	lr
 53c:	bx	r3
 540:	.word	0x00010ba0
 544:	.word	0x00010b9c
 548:	.word	0x00010ad4
 54c:	.word	0x0000002c

00000550 <register_tm_clones>:
 550:	ldr	r1, [pc, #56]	; 590 <register_tm_clones+0x40>
 554:	ldr	r0, [pc, #56]	; 594 <register_tm_clones+0x44>
 558:	add	r1, pc, r1
 55c:	add	r0, pc, r0
 560:	sub	r1, r1, r0
 564:	ldr	r3, [pc, #44]	; 598 <register_tm_clones+0x48>
 568:	asr	r1, r1, #2
 56c:	add	r3, pc, r3
 570:	add	r1, r1, r1, lsr #31
 574:	asrs	r1, r1, #1
 578:	bxeq	lr
 57c:	ldr	r2, [pc, #24]	; 59c <register_tm_clones+0x4c>
 580:	ldr	r3, [r3, r2]
 584:	cmp	r3, #0
 588:	bxeq	lr
 58c:	bx	r3
 590:	.word	0x00010b54
 594:	.word	0x00010b50
 598:	.word	0x00010a8c
 59c:	.word	0x00000038

000005a0 <__do_global_dtors_aux>:
 5a0:	ldr	r3, [pc, #76]	; 5f4 <__do_global_dtors_aux+0x54>
 5a4:	ldr	r2, [pc, #76]	; 5f8 <__do_global_dtors_aux+0x58>
 5a8:	add	r3, pc, r3
 5ac:	add	r2, pc, r2
 5b0:	ldrb	r3, [r3]
 5b4:	cmp	r3, #0
 5b8:	bxne	lr
 5bc:	ldr	r3, [pc, #56]	; 5fc <__do_global_dtors_aux+0x5c>
 5c0:	push	{r4, lr}
 5c4:	ldr	r3, [r2, r3]
 5c8:	cmp	r3, #0
 5cc:	beq	5dc <__do_global_dtors_aux+0x3c>
 5d0:	ldr	r3, [pc, #40]	; 600 <__do_global_dtors_aux+0x60>
 5d4:	ldr	r0, [pc, r3]
 5d8:	bl	48c <__cxa_finalize@plt>
 5dc:	bl	504 <deregister_tm_clones>
 5e0:	ldr	r3, [pc, #28]	; 604 <__do_global_dtors_aux+0x64>
 5e4:	mov	r2, #1
 5e8:	add	r3, pc, r3
 5ec:	strb	r2, [r3]
 5f0:	pop	{r4, pc}
 5f4:	.word	0x00010b04
 5f8:	.word	0x00010a4c
 5fc:	.word	0x00000028
 600:	.word	0x00010a60
 604:	.word	0x00010ac4

00000608 <frame_dummy>:
 608:	ldr	r0, [pc, #56]	; 648 <frame_dummy+0x40>
 60c:	ldr	r3, [pc, #56]	; 64c <frame_dummy+0x44>
 610:	add	r0, pc, r0
 614:	ldr	r2, [r0]
 618:	add	r3, pc, r3
 61c:	cmp	r2, #0
 620:	bne	628 <frame_dummy+0x20>
 624:	b	550 <register_tm_clones>
 628:	ldr	r2, [pc, #32]	; 650 <frame_dummy+0x48>
 62c:	ldr	r3, [r3, r2]
 630:	cmp	r3, #0
 634:	beq	624 <frame_dummy+0x1c>
 638:	push	{r4, lr}
 63c:	blx	r3
 640:	pop	{r4, lr}
 644:	b	550 <register_tm_clones>
 648:	.word	0x000108e4
 64c:	.word	0x000109e0
 650:	.word	0x00000034

00000654 <me_certfp>:
 654:	ldrh	r3, [r2, #80]	; 0x50
 658:	cmp	r3, #64	; 0x40
 65c:	bxne	lr
 660:	ldr	r3, [r2, #24]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	ldr	r0, [r2, #444]	; 0x1bc
 670:	push	{r4, r5, r6, lr}
 674:	cmp	r0, #0
 678:	mov	r4, r2
 67c:	beq	684 <me_certfp+0x30>
 680:	bl	498 <free@plt>
 684:	mov	r3, #0
 688:	str	r3, [r4, #444]	; 0x1bc
 68c:	ldr	r3, [sp, #16]
 690:	ldr	r5, [r3, #4]
 694:	cmp	r5, #0
 698:	popeq	{r4, r5, r6, pc}
 69c:	ldrb	r3, [r5]
 6a0:	cmp	r3, #0
 6a4:	popeq	{r4, r5, r6, pc}
 6a8:	mov	r0, r5
 6ac:	bl	4d4 <strlen@plt>
 6b0:	add	r0, r0, #1
 6b4:	bl	4bc <malloc@plt>
 6b8:	subs	r6, r0, #0
 6bc:	bne	6c4 <me_certfp+0x70>
 6c0:	bl	4a4 <rb_outofmemory@plt>
 6c4:	mov	r1, r5
 6c8:	bl	4b0 <strcpy@plt>
 6cc:	str	r6, [r4, #444]	; 0x1bc
 6d0:	pop	{r4, r5, r6, pc}

Disassembly of section .fini:

000006d4 <_fini>:
 6d4:	push	{r3, lr}
 6d8:	pop	{r3, pc}
