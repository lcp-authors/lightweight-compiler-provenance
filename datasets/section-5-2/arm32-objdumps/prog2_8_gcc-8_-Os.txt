
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a80 <.init>:
   10a80:	push	{r3, lr}
   10a84:	bl	10c04 <_start@@Base+0x3c>
   10a88:	pop	{r3, pc}

Disassembly of section .plt:

00010a8c <calloc@plt-0x14>:
   10a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a90:	ldr	lr, [pc, #4]	; 10a9c <calloc@plt-0x4>
   10a94:	add	lr, pc, lr
   10a98:	ldr	pc, [lr, #8]!
   10a9c:	andeq	r2, r1, r4, ror #10

00010aa0 <calloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1380]!	; 0x564

00010aac <printf@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ab8 <free@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1364]!	; 0x554

00010ac4 <realloc@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad0 <puts@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1348]!	; 0x544

00010adc <malloc@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ae8 <__libc_start_main@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1332]!	; 0x534

00010af4 <__gmon_start__@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1324]!	; 0x52c

00010b00 <setvbuf@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1316]!	; 0x524

00010b0c <putchar@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1308]!	; 0x51c

00010b18 <abort@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1300]!	; 0x514

Disassembly of section .text:

00010b24 <main@@Base>:
   10b24:	ldr	r0, [pc, #140]	; 10bb8 <main@@Base+0x94>
   10b28:	mov	r3, #0
   10b2c:	mov	r2, #2
   10b30:	push	{r4, lr}
   10b34:	mov	r1, r3
   10b38:	ldr	r0, [r0]
   10b3c:	bl	10b00 <setvbuf@plt>
   10b40:	ldr	r0, [pc, #116]	; 10bbc <main@@Base+0x98>
   10b44:	mov	r3, #0
   10b48:	mov	r2, #2
   10b4c:	mov	r1, r3
   10b50:	ldr	r0, [r0]
   10b54:	bl	10b00 <setvbuf@plt>
   10b58:	bl	10da8 <teste_grafo_novo@@Base>
   10b5c:	mov	r4, r0
   10b60:	bl	10e74 <teste_grafo_aresta@@Base>
   10b64:	add	r4, r4, r0
   10b68:	bl	10fd8 <teste_grafo_adiciona@@Base>
   10b6c:	add	r4, r4, r0
   10b70:	bl	1119c <teste_grafo_remove@@Base>
   10b74:	add	r4, r4, r0
   10b78:	bl	112fc <teste_v_sucessores@@Base>
   10b7c:	add	r4, r4, r0
   10b80:	bl	114a4 <teste_v_antecessores@@Base>
   10b84:	add	r4, r4, r0
   10b88:	bl	11648 <teste_v_grau@@Base>
   10b8c:	add	r4, r4, r0
   10b90:	bl	1177c <teste_v_celebridade@@Base>
   10b94:	adds	r1, r4, r0
   10b98:	bne	10bac <main@@Base+0x88>
   10b9c:	ldr	r0, [pc, #28]	; 10bc0 <main@@Base+0x9c>
   10ba0:	bl	10ad0 <puts@plt>
   10ba4:	mov	r0, #0
   10ba8:	pop	{r4, pc}
   10bac:	ldr	r0, [pc, #16]	; 10bc4 <main@@Base+0xa0>
   10bb0:	bl	10aac <printf@plt>
   10bb4:	b	10ba4 <main@@Base+0x80>
   10bb8:	andeq	r3, r2, ip, asr #32
   10bbc:	andeq	r3, r2, r8, asr #32
   10bc0:	andeq	r2, r1, r7, asr r6
   10bc4:	andeq	r2, r1, pc, ror #12

00010bc8 <_start@@Base>:
   10bc8:	mov	fp, #0
   10bcc:	mov	lr, #0
   10bd0:	pop	{r1}		; (ldr r1, [sp], #4)
   10bd4:	mov	r2, sp
   10bd8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bdc:	push	{r0}		; (str r0, [sp, #-4]!)
   10be0:	ldr	ip, [pc, #16]	; 10bf8 <_start@@Base+0x30>
   10be4:	push	{ip}		; (str ip, [sp, #-4]!)
   10be8:	ldr	r0, [pc, #12]	; 10bfc <_start@@Base+0x34>
   10bec:	ldr	r3, [pc, #12]	; 10c00 <_start@@Base+0x38>
   10bf0:	bl	10ae8 <__libc_start_main@plt>
   10bf4:	bl	10b18 <abort@plt>
   10bf8:	andeq	r1, r1, r4, lsr #31
   10bfc:	andeq	r0, r1, r4, lsr #22
   10c00:	andeq	r1, r1, r4, asr #30
   10c04:	ldr	r3, [pc, #20]	; 10c20 <_start@@Base+0x58>
   10c08:	ldr	r2, [pc, #20]	; 10c24 <_start@@Base+0x5c>
   10c0c:	add	r3, pc, r3
   10c10:	ldr	r2, [r3, r2]
   10c14:	cmp	r2, #0
   10c18:	bxeq	lr
   10c1c:	b	10af4 <__gmon_start__@plt>
   10c20:	andeq	r2, r1, ip, ror #7
   10c24:	andeq	r0, r0, r8, lsr r0
   10c28:	ldr	r0, [pc, #24]	; 10c48 <_start@@Base+0x80>
   10c2c:	ldr	r3, [pc, #24]	; 10c4c <_start@@Base+0x84>
   10c30:	cmp	r3, r0
   10c34:	bxeq	lr
   10c38:	ldr	r3, [pc, #16]	; 10c50 <_start@@Base+0x88>
   10c3c:	cmp	r3, #0
   10c40:	bxeq	lr
   10c44:	bx	r3
   10c48:	andeq	r3, r2, r4, asr #32
   10c4c:	andeq	r3, r2, r4, asr #32
   10c50:	andeq	r0, r0, r0
   10c54:	ldr	r0, [pc, #36]	; 10c80 <_start@@Base+0xb8>
   10c58:	ldr	r1, [pc, #36]	; 10c84 <_start@@Base+0xbc>
   10c5c:	sub	r1, r1, r0
   10c60:	asr	r1, r1, #2
   10c64:	add	r1, r1, r1, lsr #31
   10c68:	asrs	r1, r1, #1
   10c6c:	bxeq	lr
   10c70:	ldr	r3, [pc, #16]	; 10c88 <_start@@Base+0xc0>
   10c74:	cmp	r3, #0
   10c78:	bxeq	lr
   10c7c:	bx	r3
   10c80:	andeq	r3, r2, r4, asr #32
   10c84:	andeq	r3, r2, r4, asr #32
   10c88:	andeq	r0, r0, r0
   10c8c:	push	{r4, lr}
   10c90:	ldr	r4, [pc, #24]	; 10cb0 <_start@@Base+0xe8>
   10c94:	ldrb	r3, [r4]
   10c98:	cmp	r3, #0
   10c9c:	popne	{r4, pc}
   10ca0:	bl	10c28 <_start@@Base+0x60>
   10ca4:	mov	r3, #1
   10ca8:	strb	r3, [r4]
   10cac:	pop	{r4, pc}
   10cb0:	andeq	r3, r2, r0, asr r0
   10cb4:	b	10c54 <_start@@Base+0x8c>

00010cb8 <_g@@Base>:
   10cb8:	push	{r1, r2, r3}
   10cbc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, lr}
   10cc0:	mov	r8, r0
   10cc4:	mov	r0, #8
   10cc8:	mov	r6, #0
   10ccc:	ldr	r9, [sp, #44]	; 0x2c
   10cd0:	bl	10adc <malloc@plt>
   10cd4:	add	r3, sp, #48	; 0x30
   10cd8:	mov	r5, r0
   10cdc:	mov	r1, #8
   10ce0:	mov	r0, r8
   10ce4:	str	r3, [sp, #4]
   10ce8:	bl	10aa0 <calloc@plt>
   10cec:	mov	r4, r0
   10cf0:	str	r0, [r5, #4]
   10cf4:	cmp	r6, r9
   10cf8:	blt	10d14 <_g@@Base+0x5c>
   10cfc:	mov	r0, r5
   10d00:	str	r8, [r5]
   10d04:	add	sp, sp, #12
   10d08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d0c:	add	sp, sp, #12
   10d10:	bx	lr
   10d14:	ldr	r2, [sp, #4]
   10d18:	mov	r1, #8
   10d1c:	mov	r0, #1
   10d20:	add	r6, r6, #2
   10d24:	mov	r3, r2
   10d28:	ldr	sl, [r2, #4]
   10d2c:	ldr	r7, [r3], #8
   10d30:	str	r3, [sp, #4]
   10d34:	bl	10aa0 <calloc@plt>
   10d38:	add	r3, r4, r7, lsl #3
   10d3c:	str	sl, [r0]
   10d40:	ldr	r2, [r3, #4]
   10d44:	str	r0, [r3, #4]
   10d48:	ldr	r3, [r4, r7, lsl #3]
   10d4c:	str	r2, [r0, #4]
   10d50:	add	r3, r3, #1
   10d54:	str	r3, [r4, r7, lsl #3]
   10d58:	b	10cf4 <_g@@Base+0x3c>

00010d5c <_f@@Base>:
   10d5c:	push	{r4, r5, r6, lr}
   10d60:	subs	r5, r0, #0
   10d64:	movne	r6, r1
   10d68:	movne	r4, #0
   10d6c:	bne	10d90 <_f@@Base+0x34>
   10d70:	mov	r0, #0
   10d74:	pop	{r4, r5, r6, pc}
   10d78:	mov	r1, r4
   10d7c:	mov	r0, r5
   10d80:	bl	11d64 <vetor_elemento@@Base>
   10d84:	cmp	r6, r0
   10d88:	beq	10da0 <_f@@Base+0x44>
   10d8c:	add	r4, r4, #1
   10d90:	ldr	r3, [r5]
   10d94:	cmp	r4, r3
   10d98:	blt	10d78 <_f@@Base+0x1c>
   10d9c:	b	10d70 <_f@@Base+0x14>
   10da0:	mov	r0, #1
   10da4:	pop	{r4, r5, r6, pc}

00010da8 <teste_grafo_novo@@Base>:
   10da8:	push	{r4, r5, r6, lr}
   10dac:	ldr	r0, [pc, #172]	; 10e60 <teste_grafo_novo@@Base+0xb8>
   10db0:	bl	10aac <printf@plt>
   10db4:	mov	r0, #10
   10db8:	bl	118cc <grafo_novo@@Base>
   10dbc:	subs	r5, r0, #0
   10dc0:	bne	10de0 <teste_grafo_novo@@Base+0x38>
   10dc4:	ldr	r0, [pc, #152]	; 10e64 <teste_grafo_novo@@Base+0xbc>
   10dc8:	mov	r4, #1
   10dcc:	bl	10aac <printf@plt>
   10dd0:	mov	r0, #10
   10dd4:	bl	10b0c <putchar@plt>
   10dd8:	mov	r0, r4
   10ddc:	pop	{r4, r5, r6, pc}
   10de0:	ldr	r3, [r5]
   10de4:	cmp	r3, #10
   10de8:	moveq	r4, #0
   10dec:	beq	10dfc <teste_grafo_novo@@Base+0x54>
   10df0:	ldr	r0, [pc, #112]	; 10e68 <teste_grafo_novo@@Base+0xc0>
   10df4:	mov	r4, #1
   10df8:	bl	10aac <printf@plt>
   10dfc:	mov	r0, r5
   10e00:	bl	11920 <grafo_apaga@@Base>
   10e04:	mov	r0, #1
   10e08:	bl	118cc <grafo_novo@@Base>
   10e0c:	subs	r5, r0, #0
   10e10:	bne	10e2c <teste_grafo_novo@@Base+0x84>
   10e14:	ldr	r0, [pc, #72]	; 10e64 <teste_grafo_novo@@Base+0xbc>
   10e18:	add	r4, r4, #1
   10e1c:	bl	10aac <printf@plt>
   10e20:	mov	r0, #10
   10e24:	bl	10b0c <putchar@plt>
   10e28:	b	10dd8 <teste_grafo_novo@@Base+0x30>
   10e2c:	ldr	r3, [r5]
   10e30:	cmp	r3, #1
   10e34:	beq	10e44 <teste_grafo_novo@@Base+0x9c>
   10e38:	ldr	r0, [pc, #44]	; 10e6c <teste_grafo_novo@@Base+0xc4>
   10e3c:	add	r4, r4, #1
   10e40:	bl	10aac <printf@plt>
   10e44:	mov	r0, r5
   10e48:	bl	11920 <grafo_apaga@@Base>
   10e4c:	cmp	r4, #0
   10e50:	bne	10e20 <teste_grafo_novo@@Base+0x78>
   10e54:	ldr	r0, [pc, #20]	; 10e70 <teste_grafo_novo@@Base+0xc8>
   10e58:	bl	10ad0 <puts@plt>
   10e5c:	b	10dd8 <teste_grafo_novo@@Base+0x30>
   10e60:			; <UNDEFINED> instruction: 0x00011fb4
   10e64:	andeq	r1, r1, r3, asr #31
   10e68:	ldrdeq	r1, [r1], -fp
   10e6c:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10e70:	andeq	r2, r1, r2, lsr #32

00010e74 <teste_grafo_aresta@@Base>:
   10e74:	push	{r4, r5, r6, r7, r8, lr}
   10e78:	mov	r3, #6
   10e7c:	sub	sp, sp, #80	; 0x50
   10e80:	mov	r1, #7
   10e84:	mov	r7, #4
   10e88:	mov	r4, #0
   10e8c:	mov	r8, #5
   10e90:	mov	r6, #1
   10e94:	mov	r2, #3
   10e98:	str	r1, [sp]
   10e9c:	str	r3, [sp, #44]	; 0x2c
   10ea0:	mov	r0, #8
   10ea4:	str	r3, [sp, #60]	; 0x3c
   10ea8:	str	r3, [sp, #64]	; 0x40
   10eac:	mov	r3, #2
   10eb0:	str	r3, [sp, #4]
   10eb4:	str	r4, [sp, #8]
   10eb8:	str	r3, [sp, #12]
   10ebc:	str	r1, [sp, #16]
   10ec0:	str	r8, [sp, #20]
   10ec4:	str	r8, [sp, #24]
   10ec8:	str	r7, [sp, #28]
   10ecc:	str	r7, [sp, #32]
   10ed0:	str	r4, [sp, #36]	; 0x24
   10ed4:	str	r7, [sp, #40]	; 0x28
   10ed8:	str	r1, [sp, #56]	; 0x38
   10edc:	mov	r1, #22
   10ee0:	str	r6, [sp, #48]	; 0x30
   10ee4:	str	r6, [sp, #52]	; 0x34
   10ee8:	str	r2, [sp, #68]	; 0x44
   10eec:	str	r4, [sp, #72]	; 0x48
   10ef0:	str	r6, [sp, #76]	; 0x4c
   10ef4:	bl	10cb8 <_g@@Base>
   10ef8:	mov	r5, r0
   10efc:	ldr	r0, [pc, #192]	; 10fc4 <teste_grafo_aresta@@Base+0x150>
   10f00:	bl	10aac <printf@plt>
   10f04:	mov	r2, r7
   10f08:	mov	r1, r8
   10f0c:	mov	r0, r5
   10f10:	bl	11974 <grafo_aresta@@Base>
   10f14:	cmp	r0, r6
   10f18:	beq	10f28 <teste_grafo_aresta@@Base+0xb4>
   10f1c:	ldr	r0, [pc, #164]	; 10fc8 <teste_grafo_aresta@@Base+0x154>
   10f20:	mov	r4, r6
   10f24:	bl	10aac <printf@plt>
   10f28:	mov	r2, #6
   10f2c:	mov	r1, #7
   10f30:	mov	r0, r5
   10f34:	bl	11974 <grafo_aresta@@Base>
   10f38:	cmp	r0, #1
   10f3c:	beq	10f4c <teste_grafo_aresta@@Base+0xd8>
   10f40:	ldr	r0, [pc, #128]	; 10fc8 <teste_grafo_aresta@@Base+0x154>
   10f44:	add	r4, r4, #1
   10f48:	bl	10aac <printf@plt>
   10f4c:	mov	r2, #1
   10f50:	mov	r1, #7
   10f54:	mov	r0, r5
   10f58:	bl	11974 <grafo_aresta@@Base>
   10f5c:	cmp	r0, #0
   10f60:	beq	10f70 <teste_grafo_aresta@@Base+0xfc>
   10f64:	ldr	r0, [pc, #96]	; 10fcc <teste_grafo_aresta@@Base+0x158>
   10f68:	add	r4, r4, #1
   10f6c:	bl	10aac <printf@plt>
   10f70:	mov	r2, #7
   10f74:	mov	r1, #2
   10f78:	mov	r0, #0
   10f7c:	bl	11974 <grafo_aresta@@Base>
   10f80:	cmn	r0, #1
   10f84:	beq	10f94 <teste_grafo_aresta@@Base+0x120>
   10f88:	ldr	r0, [pc, #64]	; 10fd0 <teste_grafo_aresta@@Base+0x15c>
   10f8c:	add	r4, r4, #1
   10f90:	bl	10aac <printf@plt>
   10f94:	mov	r0, r5
   10f98:	bl	11920 <grafo_apaga@@Base>
   10f9c:	cmp	r4, #0
   10fa0:	bne	10fb8 <teste_grafo_aresta@@Base+0x144>
   10fa4:	ldr	r0, [pc, #40]	; 10fd4 <teste_grafo_aresta@@Base+0x160>
   10fa8:	bl	10ad0 <puts@plt>
   10fac:	mov	r0, r4
   10fb0:	add	sp, sp, #80	; 0x50
   10fb4:	pop	{r4, r5, r6, r7, r8, pc}
   10fb8:	mov	r0, #10
   10fbc:	bl	10b0c <putchar@plt>
   10fc0:	b	10fac <teste_grafo_aresta@@Base+0x138>
   10fc4:	andeq	r2, r1, r5, lsr #32
   10fc8:	andeq	r2, r1, r6, lsr r0
   10fcc:	andeq	r2, r1, lr, rrx
   10fd0:	andeq	r2, r1, sl, lsr #1
   10fd4:	andeq	r2, r1, r2, lsr #32

00010fd8 <teste_grafo_adiciona@@Base>:
   10fd8:	push	{r0, r1, r4, r5, r6, lr}
   10fdc:	mov	r4, #2
   10fe0:	mov	r6, #7
   10fe4:	mov	r3, r4
   10fe8:	mov	r2, #3
   10fec:	mov	r1, #4
   10ff0:	mov	r0, #9
   10ff4:	str	r6, [sp]
   10ff8:	str	r4, [sp, #4]
   10ffc:	bl	10cb8 <_g@@Base>
   11000:	mov	r5, r0
   11004:	ldr	r0, [pc, #368]	; 1117c <teste_grafo_adiciona@@Base+0x1a4>
   11008:	bl	10aac <printf@plt>
   1100c:	mov	r1, r4
   11010:	mov	r2, r6
   11014:	mov	r0, r5
   11018:	bl	119d0 <grafo_adiciona@@Base>
   1101c:	cmp	r0, #1
   11020:	moveq	r4, #0
   11024:	beq	11034 <teste_grafo_adiciona@@Base+0x5c>
   11028:	ldr	r0, [pc, #336]	; 11180 <teste_grafo_adiciona@@Base+0x1a8>
   1102c:	mov	r4, #1
   11030:	bl	10aac <printf@plt>
   11034:	ldr	r3, [r5, #4]
   11038:	ldr	r3, [r3, #20]
   1103c:	cmp	r3, #0
   11040:	beq	11050 <teste_grafo_adiciona@@Base+0x78>
   11044:	ldr	r3, [r3]
   11048:	cmp	r3, #7
   1104c:	beq	1105c <teste_grafo_adiciona@@Base+0x84>
   11050:	ldr	r0, [pc, #300]	; 11184 <teste_grafo_adiciona@@Base+0x1ac>
   11054:	add	r4, r4, #1
   11058:	bl	10aac <printf@plt>
   1105c:	mov	r2, #8
   11060:	mov	r1, #3
   11064:	mov	r0, r5
   11068:	bl	119d0 <grafo_adiciona@@Base>
   1106c:	cmp	r0, #1
   11070:	beq	11080 <teste_grafo_adiciona@@Base+0xa8>
   11074:	ldr	r0, [pc, #260]	; 11180 <teste_grafo_adiciona@@Base+0x1a8>
   11078:	add	r4, r4, #1
   1107c:	bl	10aac <printf@plt>
   11080:	ldr	r3, [r5, #4]
   11084:	ldr	r2, [r3, #28]
   11088:	cmp	r2, #0
   1108c:	beq	110c0 <teste_grafo_adiciona@@Base+0xe8>
   11090:	ldr	r3, [r2, #4]
   11094:	cmp	r3, #0
   11098:	beq	110c0 <teste_grafo_adiciona@@Base+0xe8>
   1109c:	ldr	r1, [r3, #4]
   110a0:	cmp	r1, #0
   110a4:	bne	110c0 <teste_grafo_adiciona@@Base+0xe8>
   110a8:	ldr	r2, [r2]
   110ac:	cmp	r2, #2
   110b0:	bne	1115c <teste_grafo_adiciona@@Base+0x184>
   110b4:	ldr	r3, [r3]
   110b8:	cmp	r3, #8
   110bc:	beq	110cc <teste_grafo_adiciona@@Base+0xf4>
   110c0:	ldr	r0, [pc, #192]	; 11188 <teste_grafo_adiciona@@Base+0x1b0>
   110c4:	add	r4, r4, #1
   110c8:	bl	10aac <printf@plt>
   110cc:	mov	r2, #7
   110d0:	mov	r1, #2
   110d4:	mov	r0, r5
   110d8:	bl	119d0 <grafo_adiciona@@Base>
   110dc:	cmp	r0, #0
   110e0:	beq	110f0 <teste_grafo_adiciona@@Base+0x118>
   110e4:	ldr	r0, [pc, #160]	; 1118c <teste_grafo_adiciona@@Base+0x1b4>
   110e8:	add	r4, r4, #1
   110ec:	bl	10aac <printf@plt>
   110f0:	mov	r2, #7
   110f4:	mov	r1, #22
   110f8:	mov	r0, r5
   110fc:	bl	119d0 <grafo_adiciona@@Base>
   11100:	cmn	r0, #1
   11104:	beq	11114 <teste_grafo_adiciona@@Base+0x13c>
   11108:	ldr	r0, [pc, #128]	; 11190 <teste_grafo_adiciona@@Base+0x1b8>
   1110c:	add	r4, r4, #1
   11110:	bl	10aac <printf@plt>
   11114:	mov	r2, #7
   11118:	mov	r1, #2
   1111c:	mov	r0, #0
   11120:	bl	119d0 <grafo_adiciona@@Base>
   11124:	cmn	r0, #1
   11128:	beq	11138 <teste_grafo_adiciona@@Base+0x160>
   1112c:	ldr	r0, [pc, #96]	; 11194 <teste_grafo_adiciona@@Base+0x1bc>
   11130:	add	r4, r4, #1
   11134:	bl	10aac <printf@plt>
   11138:	mov	r0, r5
   1113c:	bl	11920 <grafo_apaga@@Base>
   11140:	cmp	r4, #0
   11144:	bne	11170 <teste_grafo_adiciona@@Base+0x198>
   11148:	ldr	r0, [pc, #72]	; 11198 <teste_grafo_adiciona@@Base+0x1c0>
   1114c:	bl	10ad0 <puts@plt>
   11150:	mov	r0, r4
   11154:	add	sp, sp, #8
   11158:	pop	{r4, r5, r6, pc}
   1115c:	cmp	r2, #8
   11160:	bne	110c0 <teste_grafo_adiciona@@Base+0xe8>
   11164:	ldr	r3, [r3]
   11168:	cmp	r3, #2
   1116c:	b	110bc <teste_grafo_adiciona@@Base+0xe4>
   11170:	mov	r0, #10
   11174:	bl	10b0c <putchar@plt>
   11178:	b	11150 <teste_grafo_adiciona@@Base+0x178>
   1117c:	andeq	r2, r1, r0, ror #1
   11180:	strdeq	r2, [r1], -r3
   11184:	andeq	r2, r1, sp, lsr #2
   11188:	andeq	r2, r1, fp, asr r1
   1118c:	muleq	r1, r6, r1
   11190:	andeq	r2, r1, lr, asr #3
   11194:	andeq	r2, r1, r5, lsl #4
   11198:	andeq	r2, r1, r2, lsr #32

0001119c <teste_grafo_remove@@Base>:
   1119c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   111a0:	mov	r4, #1
   111a4:	mov	r3, #2
   111a8:	mov	r6, #7
   111ac:	mov	r2, #3
   111b0:	mov	r1, #6
   111b4:	mov	r0, #9
   111b8:	str	r6, [sp]
   111bc:	stmib	sp, {r3, r6}
   111c0:	str	r4, [sp, #12]
   111c4:	bl	10cb8 <_g@@Base>
   111c8:	mov	r5, r0
   111cc:	ldr	r0, [pc, #272]	; 112e4 <teste_grafo_remove@@Base+0x148>
   111d0:	bl	10aac <printf@plt>
   111d4:	mov	r2, r4
   111d8:	mov	r1, r6
   111dc:	mov	r0, r5
   111e0:	bl	11a58 <grafo_remove@@Base>
   111e4:	cmp	r0, r4
   111e8:	moveq	r4, #0
   111ec:	beq	111f8 <teste_grafo_remove@@Base+0x5c>
   111f0:	ldr	r0, [pc, #240]	; 112e8 <teste_grafo_remove@@Base+0x14c>
   111f4:	bl	10aac <printf@plt>
   111f8:	ldr	r3, [r5, #4]
   111fc:	ldr	r3, [r3, #60]	; 0x3c
   11200:	cmp	r3, #0
   11204:	beq	11220 <teste_grafo_remove@@Base+0x84>
   11208:	ldr	r2, [r3, #4]
   1120c:	cmp	r2, #0
   11210:	bne	11220 <teste_grafo_remove@@Base+0x84>
   11214:	ldr	r3, [r3]
   11218:	cmp	r3, #2
   1121c:	beq	1122c <teste_grafo_remove@@Base+0x90>
   11220:	ldr	r0, [pc, #196]	; 112ec <teste_grafo_remove@@Base+0x150>
   11224:	add	r4, r4, #1
   11228:	bl	10aac <printf@plt>
   1122c:	mov	r2, #2
   11230:	mov	r1, #7
   11234:	mov	r0, r5
   11238:	bl	11a58 <grafo_remove@@Base>
   1123c:	cmp	r0, #1
   11240:	beq	11250 <teste_grafo_remove@@Base+0xb4>
   11244:	ldr	r0, [pc, #156]	; 112e8 <teste_grafo_remove@@Base+0x14c>
   11248:	add	r4, r4, #1
   1124c:	bl	10aac <printf@plt>
   11250:	ldr	r3, [r5, #4]
   11254:	ldr	r3, [r3, #60]	; 0x3c
   11258:	cmp	r3, #0
   1125c:	beq	1126c <teste_grafo_remove@@Base+0xd0>
   11260:	ldr	r0, [pc, #132]	; 112ec <teste_grafo_remove@@Base+0x150>
   11264:	add	r4, r4, #1
   11268:	bl	10aac <printf@plt>
   1126c:	mov	r2, #0
   11270:	mov	r1, #4
   11274:	mov	r0, r5
   11278:	bl	11a58 <grafo_remove@@Base>
   1127c:	cmp	r0, #0
   11280:	beq	11290 <teste_grafo_remove@@Base+0xf4>
   11284:	ldr	r0, [pc, #100]	; 112f0 <teste_grafo_remove@@Base+0x154>
   11288:	add	r4, r4, #1
   1128c:	bl	10aac <printf@plt>
   11290:	mov	r2, #22
   11294:	mov	r1, #7
   11298:	mov	r0, r5
   1129c:	bl	11a58 <grafo_remove@@Base>
   112a0:	cmn	r0, #1
   112a4:	beq	112b4 <teste_grafo_remove@@Base+0x118>
   112a8:	ldr	r0, [pc, #68]	; 112f4 <teste_grafo_remove@@Base+0x158>
   112ac:	add	r4, r4, #1
   112b0:	bl	10aac <printf@plt>
   112b4:	mov	r0, r5
   112b8:	bl	11920 <grafo_apaga@@Base>
   112bc:	cmp	r4, #0
   112c0:	bne	112d8 <teste_grafo_remove@@Base+0x13c>
   112c4:	ldr	r0, [pc, #44]	; 112f8 <teste_grafo_remove@@Base+0x15c>
   112c8:	bl	10ad0 <puts@plt>
   112cc:	mov	r0, r4
   112d0:	add	sp, sp, #16
   112d4:	pop	{r4, r5, r6, pc}
   112d8:	mov	r0, #10
   112dc:	bl	10b0c <putchar@plt>
   112e0:	b	112cc <teste_grafo_remove@@Base+0x130>
   112e4:	andeq	r2, r1, sl, lsr r2
   112e8:	andeq	r2, r1, fp, asr #4
   112ec:	andeq	r2, r1, r5, lsl #5
   112f0:			; <UNDEFINED> instruction: 0x000122be
   112f4:	strdeq	r2, [r1], -sl
   112f8:	andeq	r2, r1, r2, lsr #32

000112fc <teste_v_sucessores@@Base>:
   112fc:	push	{r4, r5, r6, r7, lr}
   11300:	mov	r3, #6
   11304:	sub	sp, sp, #84	; 0x54
   11308:	mov	r5, #7
   1130c:	mov	r4, #0
   11310:	mov	r2, #3
   11314:	mov	r6, #1
   11318:	mov	r1, #22
   1131c:	mov	r0, #8
   11320:	str	r5, [sp]
   11324:	str	r3, [sp, #44]	; 0x2c
   11328:	str	r3, [sp, #60]	; 0x3c
   1132c:	str	r3, [sp, #64]	; 0x40
   11330:	mov	r3, #4
   11334:	str	r4, [sp, #8]
   11338:	str	r5, [sp, #16]
   1133c:	str	r3, [sp, #28]
   11340:	str	r3, [sp, #32]
   11344:	str	r3, [sp, #40]	; 0x28
   11348:	mov	r3, #5
   1134c:	str	r3, [sp, #20]
   11350:	str	r3, [sp, #24]
   11354:	mov	r3, #2
   11358:	str	r4, [sp, #36]	; 0x24
   1135c:	str	r3, [sp, #4]
   11360:	str	r3, [sp, #12]
   11364:	str	r6, [sp, #48]	; 0x30
   11368:	str	r6, [sp, #52]	; 0x34
   1136c:	str	r5, [sp, #56]	; 0x38
   11370:	str	r2, [sp, #68]	; 0x44
   11374:	str	r4, [sp, #72]	; 0x48
   11378:	str	r6, [sp, #76]	; 0x4c
   1137c:	bl	10cb8 <_g@@Base>
   11380:	mov	r7, r0
   11384:	ldr	r0, [pc, #252]	; 11488 <teste_v_sucessores@@Base+0x18c>
   11388:	bl	10aac <printf@plt>
   1138c:	mov	r1, r5
   11390:	mov	r0, r7
   11394:	bl	11b04 <v_sucessores@@Base>
   11398:	subs	r5, r0, #0
   1139c:	bne	11424 <teste_v_sucessores@@Base+0x128>
   113a0:	ldr	r0, [pc, #228]	; 1148c <teste_v_sucessores@@Base+0x190>
   113a4:	bl	10aac <printf@plt>
   113a8:	mov	r0, #10
   113ac:	bl	10b0c <putchar@plt>
   113b0:	b	11418 <teste_v_sucessores@@Base+0x11c>
   113b4:	mov	r1, #5
   113b8:	mov	r0, r5
   113bc:	bl	10d5c <_f@@Base>
   113c0:	cmp	r0, #0
   113c4:	beq	11450 <teste_v_sucessores@@Base+0x154>
   113c8:	mov	r1, #6
   113cc:	mov	r0, r5
   113d0:	bl	10d5c <_f@@Base>
   113d4:	cmp	r0, #0
   113d8:	beq	11450 <teste_v_sucessores@@Base+0x154>
   113dc:	b	1145c <teste_v_sucessores@@Base+0x160>
   113e0:	ldr	r3, [r5]
   113e4:	cmp	r3, #0
   113e8:	beq	113f8 <teste_v_sucessores@@Base+0xfc>
   113ec:	ldr	r0, [pc, #156]	; 11490 <teste_v_sucessores@@Base+0x194>
   113f0:	add	r6, r6, #1
   113f4:	bl	10aac <printf@plt>
   113f8:	mov	r0, r5
   113fc:	bl	11d00 <vetor_apaga@@Base>
   11400:	mov	r0, r7
   11404:	bl	11920 <grafo_apaga@@Base>
   11408:	cmp	r6, #0
   1140c:	bne	113a8 <teste_v_sucessores@@Base+0xac>
   11410:	ldr	r0, [pc, #124]	; 11494 <teste_v_sucessores@@Base+0x198>
   11414:	bl	10ad0 <puts@plt>
   11418:	mov	r0, r6
   1141c:	add	sp, sp, #84	; 0x54
   11420:	pop	{r4, r5, r6, r7, pc}
   11424:	ldr	r3, [r5]
   11428:	cmp	r3, #3
   1142c:	moveq	r6, r4
   11430:	beq	1143c <teste_v_sucessores@@Base+0x140>
   11434:	ldr	r0, [pc, #92]	; 11498 <teste_v_sucessores@@Base+0x19c>
   11438:	bl	10aac <printf@plt>
   1143c:	mov	r1, #2
   11440:	mov	r0, r5
   11444:	bl	10d5c <_f@@Base>
   11448:	cmp	r0, #0
   1144c:	bne	113b4 <teste_v_sucessores@@Base+0xb8>
   11450:	ldr	r0, [pc, #68]	; 1149c <teste_v_sucessores@@Base+0x1a0>
   11454:	add	r6, r6, #1
   11458:	bl	10aac <printf@plt>
   1145c:	mov	r0, r5
   11460:	bl	11d00 <vetor_apaga@@Base>
   11464:	mov	r1, #2
   11468:	mov	r0, r7
   1146c:	bl	11b04 <v_sucessores@@Base>
   11470:	subs	r5, r0, #0
   11474:	bne	113e0 <teste_v_sucessores@@Base+0xe4>
   11478:	ldr	r0, [pc, #32]	; 114a0 <teste_v_sucessores@@Base+0x1a4>
   1147c:	add	r6, r6, #1
   11480:	bl	10aac <printf@plt>
   11484:	b	113a8 <teste_v_sucessores@@Base+0xac>
   11488:	andeq	r2, r1, r2, lsr r3
   1148c:	andeq	r2, r1, r3, asr #6
   11490:	andeq	r2, r1, r5, lsl #8
   11494:	andeq	r2, r1, r2, lsr #32
   11498:	andeq	r2, r1, r0, ror r3
   1149c:	muleq	r1, fp, r3
   114a0:	andeq	r2, r1, r7, asr #7

000114a4 <teste_v_antecessores@@Base>:
   114a4:	push	{r4, r5, r6, r7, lr}
   114a8:	mov	r1, #6
   114ac:	sub	sp, sp, #84	; 0x54
   114b0:	mov	r5, #2
   114b4:	mov	r3, #7
   114b8:	mov	r4, #0
   114bc:	mov	r2, #3
   114c0:	mov	r6, #1
   114c4:	mov	r0, #8
   114c8:	stm	sp, {r3, r5}
   114cc:	str	r1, [sp, #44]	; 0x2c
   114d0:	str	r1, [sp, #60]	; 0x3c
   114d4:	str	r1, [sp, #64]	; 0x40
   114d8:	mov	r1, #4
   114dc:	strd	r4, [sp, #8]
   114e0:	str	r3, [sp, #16]
   114e4:	str	r1, [sp, #28]
   114e8:	str	r1, [sp, #32]
   114ec:	str	r1, [sp, #40]	; 0x28
   114f0:	mov	r1, #5
   114f4:	str	r1, [sp, #20]
   114f8:	str	r1, [sp, #24]
   114fc:	mov	r1, #22
   11500:	str	r4, [sp, #36]	; 0x24
   11504:	str	r3, [sp, #56]	; 0x38
   11508:	mov	r3, r5
   1150c:	str	r6, [sp, #48]	; 0x30
   11510:	str	r6, [sp, #52]	; 0x34
   11514:	str	r2, [sp, #68]	; 0x44
   11518:	str	r4, [sp, #72]	; 0x48
   1151c:	str	r6, [sp, #76]	; 0x4c
   11520:	bl	10cb8 <_g@@Base>
   11524:	mov	r7, r0
   11528:	ldr	r0, [pc, #252]	; 1162c <teste_v_antecessores@@Base+0x188>
   1152c:	bl	10aac <printf@plt>
   11530:	mov	r1, r5
   11534:	mov	r0, r7
   11538:	bl	11b74 <v_antecessores@@Base>
   1153c:	subs	r5, r0, #0
   11540:	bne	115c8 <teste_v_antecessores@@Base+0x124>
   11544:	ldr	r0, [pc, #228]	; 11630 <teste_v_antecessores@@Base+0x18c>
   11548:	bl	10aac <printf@plt>
   1154c:	mov	r0, #10
   11550:	bl	10b0c <putchar@plt>
   11554:	b	115bc <teste_v_antecessores@@Base+0x118>
   11558:	mov	r1, #3
   1155c:	mov	r0, r5
   11560:	bl	10d5c <_f@@Base>
   11564:	cmp	r0, #0
   11568:	beq	115f4 <teste_v_antecessores@@Base+0x150>
   1156c:	mov	r1, #7
   11570:	mov	r0, r5
   11574:	bl	10d5c <_f@@Base>
   11578:	cmp	r0, #0
   1157c:	beq	115f4 <teste_v_antecessores@@Base+0x150>
   11580:	b	11600 <teste_v_antecessores@@Base+0x15c>
   11584:	ldr	r3, [r5]
   11588:	cmp	r3, #0
   1158c:	beq	1159c <teste_v_antecessores@@Base+0xf8>
   11590:	ldr	r0, [pc, #156]	; 11634 <teste_v_antecessores@@Base+0x190>
   11594:	add	r6, r6, #1
   11598:	bl	10aac <printf@plt>
   1159c:	mov	r0, r5
   115a0:	bl	11d00 <vetor_apaga@@Base>
   115a4:	mov	r0, r7
   115a8:	bl	11920 <grafo_apaga@@Base>
   115ac:	cmp	r6, #0
   115b0:	bne	1154c <teste_v_antecessores@@Base+0xa8>
   115b4:	ldr	r0, [pc, #124]	; 11638 <teste_v_antecessores@@Base+0x194>
   115b8:	bl	10ad0 <puts@plt>
   115bc:	mov	r0, r6
   115c0:	add	sp, sp, #84	; 0x54
   115c4:	pop	{r4, r5, r6, r7, pc}
   115c8:	ldr	r3, [r5]
   115cc:	cmp	r3, #3
   115d0:	moveq	r6, r4
   115d4:	beq	115e0 <teste_v_antecessores@@Base+0x13c>
   115d8:	ldr	r0, [pc, #92]	; 1163c <teste_v_antecessores@@Base+0x198>
   115dc:	bl	10aac <printf@plt>
   115e0:	mov	r1, #0
   115e4:	mov	r0, r5
   115e8:	bl	10d5c <_f@@Base>
   115ec:	cmp	r0, #0
   115f0:	bne	11558 <teste_v_antecessores@@Base+0xb4>
   115f4:	ldr	r0, [pc, #68]	; 11640 <teste_v_antecessores@@Base+0x19c>
   115f8:	add	r6, r6, #1
   115fc:	bl	10aac <printf@plt>
   11600:	mov	r0, r5
   11604:	bl	11d00 <vetor_apaga@@Base>
   11608:	mov	r1, #7
   1160c:	mov	r0, r7
   11610:	bl	11b74 <v_antecessores@@Base>
   11614:	subs	r5, r0, #0
   11618:	bne	11584 <teste_v_antecessores@@Base+0xe0>
   1161c:	ldr	r0, [pc, #32]	; 11644 <teste_v_antecessores@@Base+0x1a0>
   11620:	add	r6, r6, #1
   11624:	bl	10aac <printf@plt>
   11628:	b	1154c <teste_v_antecessores@@Base+0xa8>
   1162c:	andeq	r2, r1, r3, lsr r4
   11630:	andeq	r2, r1, r6, asr #8
   11634:	andeq	r2, r1, r0, lsl r5
   11638:	andeq	r2, r1, r2, lsr #32
   1163c:	andeq	r2, r1, r5, ror r4
   11640:	andeq	r2, r1, r2, lsr #9
   11644:	ldrdeq	r2, [r1], -r0

00011648 <teste_v_grau@@Base>:
   11648:	push	{r4, r5, r6, lr}
   1164c:	mov	r3, #6
   11650:	sub	sp, sp, #80	; 0x50
   11654:	mov	r1, #7
   11658:	mov	r4, #0
   1165c:	mov	r2, #3
   11660:	mov	r6, #1
   11664:	mov	r0, #8
   11668:	str	r1, [sp]
   1166c:	str	r3, [sp, #44]	; 0x2c
   11670:	str	r3, [sp, #60]	; 0x3c
   11674:	str	r3, [sp, #64]	; 0x40
   11678:	mov	r3, #4
   1167c:	str	r4, [sp, #8]
   11680:	str	r1, [sp, #16]
   11684:	str	r3, [sp, #28]
   11688:	str	r3, [sp, #32]
   1168c:	str	r3, [sp, #40]	; 0x28
   11690:	mov	r3, #5
   11694:	str	r3, [sp, #20]
   11698:	str	r3, [sp, #24]
   1169c:	mov	r3, #2
   116a0:	str	r4, [sp, #36]	; 0x24
   116a4:	str	r3, [sp, #4]
   116a8:	str	r3, [sp, #12]
   116ac:	str	r1, [sp, #56]	; 0x38
   116b0:	mov	r1, #22
   116b4:	str	r6, [sp, #48]	; 0x30
   116b8:	str	r6, [sp, #52]	; 0x34
   116bc:	str	r2, [sp, #68]	; 0x44
   116c0:	str	r4, [sp, #72]	; 0x48
   116c4:	str	r6, [sp, #76]	; 0x4c
   116c8:	bl	10cb8 <_g@@Base>
   116cc:	mov	r5, r0
   116d0:	ldr	r0, [pc, #144]	; 11768 <teste_v_grau@@Base+0x120>
   116d4:	bl	10aac <printf@plt>
   116d8:	mvn	r1, #3
   116dc:	mov	r0, r5
   116e0:	bl	11c00 <v_grau@@Base>
   116e4:	cmn	r0, #1
   116e8:	beq	116f8 <teste_v_grau@@Base+0xb0>
   116ec:	ldr	r0, [pc, #120]	; 1176c <teste_v_grau@@Base+0x124>
   116f0:	mov	r4, r6
   116f4:	bl	10aac <printf@plt>
   116f8:	mov	r1, #7
   116fc:	mov	r0, r5
   11700:	bl	11c00 <v_grau@@Base>
   11704:	cmp	r0, #3
   11708:	beq	11718 <teste_v_grau@@Base+0xd0>
   1170c:	ldr	r0, [pc, #92]	; 11770 <teste_v_grau@@Base+0x128>
   11710:	add	r4, r4, #1
   11714:	bl	10aac <printf@plt>
   11718:	mov	r1, #5
   1171c:	mov	r0, r5
   11720:	bl	11c00 <v_grau@@Base>
   11724:	cmp	r0, #2
   11728:	beq	11738 <teste_v_grau@@Base+0xf0>
   1172c:	ldr	r0, [pc, #64]	; 11774 <teste_v_grau@@Base+0x12c>
   11730:	add	r4, r4, #1
   11734:	bl	10aac <printf@plt>
   11738:	mov	r0, r5
   1173c:	bl	11920 <grafo_apaga@@Base>
   11740:	cmp	r4, #0
   11744:	bne	1175c <teste_v_grau@@Base+0x114>
   11748:	ldr	r0, [pc, #40]	; 11778 <teste_v_grau@@Base+0x130>
   1174c:	bl	10ad0 <puts@plt>
   11750:	mov	r0, r4
   11754:	add	sp, sp, #80	; 0x50
   11758:	pop	{r4, r5, r6, pc}
   1175c:	mov	r0, #10
   11760:	bl	10b0c <putchar@plt>
   11764:	b	11750 <teste_v_grau@@Base+0x108>
   11768:	andeq	r2, r1, r0, asr #10
   1176c:	andeq	r2, r1, fp, asr #10
   11770:	andeq	r2, r1, fp, ror r5
   11774:	andeq	r2, r1, sl, lsr #11
   11778:	andeq	r2, r1, r2, lsr #32

0001177c <teste_v_celebridade@@Base>:
   1177c:	push	{r4, r5, r6, lr}
   11780:	mov	r3, #2
   11784:	sub	sp, sp, #112	; 0x70
   11788:	mov	ip, #0
   1178c:	mov	r1, #4
   11790:	mov	r0, #6
   11794:	mov	r4, #7
   11798:	mov	lr, #5
   1179c:	mov	r5, #1
   117a0:	mov	r2, #3
   117a4:	str	r4, [sp]
   117a8:	stmib	sp, {r3, ip}
   117ac:	str	r3, [sp, #12]
   117b0:	str	r1, [sp, #28]
   117b4:	str	r1, [sp, #32]
   117b8:	str	r1, [sp, #40]	; 0x28
   117bc:	str	r0, [sp, #44]	; 0x2c
   117c0:	str	r0, [sp, #60]	; 0x3c
   117c4:	str	r0, [sp, #64]	; 0x40
   117c8:	str	r0, [sp, #88]	; 0x58
   117cc:	mov	r0, #8
   117d0:	str	r1, [sp, #96]	; 0x60
   117d4:	mov	r1, #30
   117d8:	str	r4, [sp, #16]
   117dc:	str	lr, [sp, #20]
   117e0:	str	lr, [sp, #24]
   117e4:	str	ip, [sp, #36]	; 0x24
   117e8:	str	r5, [sp, #48]	; 0x30
   117ec:	str	r5, [sp, #52]	; 0x34
   117f0:	str	r4, [sp, #56]	; 0x38
   117f4:	str	r2, [sp, #68]	; 0x44
   117f8:	str	ip, [sp, #72]	; 0x48
   117fc:	str	r5, [sp, #76]	; 0x4c
   11800:	str	r5, [sp, #80]	; 0x50
   11804:	str	r3, [sp, #84]	; 0x54
   11808:	str	r3, [sp, #92]	; 0x5c
   1180c:	str	r3, [sp, #100]	; 0x64
   11810:	str	lr, [sp, #104]	; 0x68
   11814:	str	r3, [sp, #108]	; 0x6c
   11818:	bl	10cb8 <_g@@Base>
   1181c:	mov	r6, r0
   11820:	ldr	r0, [pc, #112]	; 11898 <teste_v_celebridade@@Base+0x11c>
   11824:	bl	10aac <printf@plt>
   11828:	mov	r1, r4
   1182c:	mov	r0, r6
   11830:	bl	11c5c <v_celebridade@@Base>
   11834:	subs	r4, r0, #0
   11838:	beq	11848 <teste_v_celebridade@@Base+0xcc>
   1183c:	ldr	r0, [pc, #88]	; 1189c <teste_v_celebridade@@Base+0x120>
   11840:	mov	r4, r5
   11844:	bl	10aac <printf@plt>
   11848:	mov	r1, #2
   1184c:	mov	r0, r6
   11850:	bl	11c5c <v_celebridade@@Base>
   11854:	cmp	r0, #1
   11858:	beq	11868 <teste_v_celebridade@@Base+0xec>
   1185c:	ldr	r0, [pc, #60]	; 118a0 <teste_v_celebridade@@Base+0x124>
   11860:	add	r4, r4, #1
   11864:	bl	10aac <printf@plt>
   11868:	mov	r0, r6
   1186c:	bl	11920 <grafo_apaga@@Base>
   11870:	cmp	r4, #0
   11874:	bne	1188c <teste_v_celebridade@@Base+0x110>
   11878:	ldr	r0, [pc, #36]	; 118a4 <teste_v_celebridade@@Base+0x128>
   1187c:	bl	10ad0 <puts@plt>
   11880:	mov	r0, r4
   11884:	add	sp, sp, #112	; 0x70
   11888:	pop	{r4, r5, r6, pc}
   1188c:	mov	r0, #10
   11890:	bl	10b0c <putchar@plt>
   11894:	b	11880 <teste_v_celebridade@@Base+0x104>
   11898:	ldrdeq	r2, [r1], -r9
   1189c:	andeq	r2, r1, fp, ror #11
   118a0:	andeq	r2, r1, r3, lsr #12
   118a4:	andeq	r2, r1, r2, lsr #32

000118a8 <cria_elem@@Base>:
   118a8:	push	{r4, lr}
   118ac:	mov	r4, r0
   118b0:	mov	r0, #8
   118b4:	bl	10adc <malloc@plt>
   118b8:	cmp	r0, #0
   118bc:	movne	r3, #0
   118c0:	strne	r4, [r0]
   118c4:	strne	r3, [r0, #4]
   118c8:	pop	{r4, pc}

000118cc <grafo_novo@@Base>:
   118cc:	push	{r4, r5, r6, lr}
   118d0:	subs	r4, r0, #0
   118d4:	movle	r5, #0
   118d8:	ble	11918 <grafo_novo@@Base+0x4c>
   118dc:	mov	r0, #8
   118e0:	bl	10adc <malloc@plt>
   118e4:	mov	r5, r0
   118e8:	lsl	r0, r4, #3
   118ec:	str	r4, [r5]
   118f0:	bl	10adc <malloc@plt>
   118f4:	mov	r3, #0
   118f8:	add	r1, r0, #4
   118fc:	str	r0, [r5, #4]
   11900:	mov	r2, r3
   11904:	str	r2, [r0, r3, lsl #3]
   11908:	str	r2, [r1, r3, lsl #3]
   1190c:	add	r3, r3, #1
   11910:	cmp	r4, r3
   11914:	bne	11904 <grafo_novo@@Base+0x38>
   11918:	mov	r0, r5
   1191c:	pop	{r4, r5, r6, pc}

00011920 <grafo_apaga@@Base>:
   11920:	push	{r4, r5, r6, lr}
   11924:	subs	r4, r0, #0
   11928:	movne	r5, #0
   1192c:	popeq	{r4, r5, r6, pc}
   11930:	ldr	r3, [r4]
   11934:	ldr	r0, [r4, #4]
   11938:	cmp	r3, r5
   1193c:	bgt	11950 <grafo_apaga@@Base+0x30>
   11940:	bl	10ab8 <free@plt>
   11944:	mov	r0, r4
   11948:	pop	{r4, r5, r6, lr}
   1194c:	b	10ab8 <free@plt>
   11950:	add	r0, r0, r5, lsl #3
   11954:	ldr	r0, [r0, #4]
   11958:	cmp	r0, #0
   1195c:	addeq	r5, r5, #1
   11960:	beq	11930 <grafo_apaga@@Base+0x10>
   11964:	ldr	r6, [r0, #4]
   11968:	bl	10ab8 <free@plt>
   1196c:	mov	r0, r6
   11970:	b	11958 <grafo_apaga@@Base+0x38>

00011974 <grafo_aresta@@Base>:
   11974:	cmp	r0, #0
   11978:	beq	119c0 <grafo_aresta@@Base+0x4c>
   1197c:	ldr	r3, [r0]
   11980:	cmp	r3, r1
   11984:	blt	119c0 <grafo_aresta@@Base+0x4c>
   11988:	cmp	r3, r2
   1198c:	ldrge	r3, [r0, #4]
   11990:	addge	r3, r3, r1, lsl #3
   11994:	ldrge	r0, [r3, #4]
   11998:	bge	119b4 <grafo_aresta@@Base+0x40>
   1199c:	mov	r0, #0
   119a0:	bx	lr
   119a4:	ldr	r3, [r0]
   119a8:	cmp	r2, r3
   119ac:	beq	119c8 <grafo_aresta@@Base+0x54>
   119b0:	ldr	r0, [r0, #4]
   119b4:	cmp	r0, #0
   119b8:	bne	119a4 <grafo_aresta@@Base+0x30>
   119bc:	bx	lr
   119c0:	mvn	r0, #0
   119c4:	bx	lr
   119c8:	mov	r0, #1
   119cc:	bx	lr

000119d0 <grafo_adiciona@@Base>:
   119d0:	push	{r4, r5, r6, r7, r8, lr}
   119d4:	subs	r6, r0, #0
   119d8:	beq	11a48 <grafo_adiciona@@Base+0x78>
   119dc:	mov	r5, r1
   119e0:	mov	r7, r2
   119e4:	ldr	r3, [r6]
   119e8:	cmp	r3, r2
   119ec:	cmpge	r3, r1
   119f0:	movlt	r4, #1
   119f4:	movge	r4, #0
   119f8:	blt	11a48 <grafo_adiciona@@Base+0x78>
   119fc:	bl	11974 <grafo_aresta@@Base>
   11a00:	cmp	r0, #1
   11a04:	beq	11a50 <grafo_adiciona@@Base+0x80>
   11a08:	ldr	r5, [r6, #4]
   11a0c:	lsl	r4, r1, #3
   11a10:	mov	r0, r2
   11a14:	add	r5, r5, r4
   11a18:	ldr	r8, [r5, #4]
   11a1c:	bl	118a8 <cria_elem@@Base>
   11a20:	ldr	r3, [r6, #4]
   11a24:	str	r0, [r5, #4]
   11a28:	mov	r0, #1
   11a2c:	add	r4, r3, r4
   11a30:	ldr	r2, [r4, #4]
   11a34:	str	r8, [r2, #4]
   11a38:	ldr	r2, [r3]
   11a3c:	add	r2, r2, #1
   11a40:	str	r2, [r3]
   11a44:	pop	{r4, r5, r6, r7, r8, pc}
   11a48:	mvn	r0, #0
   11a4c:	pop	{r4, r5, r6, r7, r8, pc}
   11a50:	mov	r0, r4
   11a54:	pop	{r4, r5, r6, r7, r8, pc}

00011a58 <grafo_remove@@Base>:
   11a58:	cmp	r0, #0
   11a5c:	beq	11afc <grafo_remove@@Base+0xa4>
   11a60:	ldr	ip, [r0]
   11a64:	cmp	r1, r2
   11a68:	movge	r3, r1
   11a6c:	movlt	r3, r2
   11a70:	cmp	ip, r3
   11a74:	blt	11afc <grafo_remove@@Base+0xa4>
   11a78:	ldr	ip, [r0, #4]
   11a7c:	add	r1, ip, r1, lsl #3
   11a80:	ldr	r0, [r1, #4]
   11a84:	cmp	r0, #0
   11a88:	bxeq	lr
   11a8c:	push	{r4, lr}
   11a90:	ldr	r3, [r0]
   11a94:	cmp	r3, r2
   11a98:	bne	11ae8 <grafo_remove@@Base+0x90>
   11a9c:	ldr	r3, [r0, #4]
   11aa0:	str	r3, [r1, #4]
   11aa4:	ldr	r3, [ip]
   11aa8:	sub	r3, r3, #1
   11aac:	str	r3, [ip]
   11ab0:	bl	10ab8 <free@plt>
   11ab4:	mov	r0, #1
   11ab8:	pop	{r4, pc}
   11abc:	ldr	r1, [r3]
   11ac0:	cmp	r1, r2
   11ac4:	bne	11ae4 <grafo_remove@@Base+0x8c>
   11ac8:	ldr	r2, [r3, #4]
   11acc:	str	r2, [r0, #4]
   11ad0:	mov	r0, r3
   11ad4:	ldr	r2, [ip]
   11ad8:	sub	r2, r2, #1
   11adc:	str	r2, [ip]
   11ae0:	b	11ab0 <grafo_remove@@Base+0x58>
   11ae4:	mov	r0, r3
   11ae8:	ldr	r3, [r0, #4]
   11aec:	cmp	r3, #0
   11af0:	bne	11abc <grafo_remove@@Base+0x64>
   11af4:	mov	r0, r3
   11af8:	pop	{r4, pc}
   11afc:	mvn	r0, #0
   11b00:	bx	lr

00011b04 <v_sucessores@@Base>:
   11b04:	push	{r4, r5, r6, lr}
   11b08:	subs	r6, r0, #0
   11b0c:	moveq	r4, r6
   11b10:	beq	11b50 <v_sucessores@@Base+0x4c>
   11b14:	ldr	r3, [r6]
   11b18:	cmp	r1, #0
   11b1c:	cmpge	r3, r1
   11b20:	movgt	r4, #1
   11b24:	movle	r4, #0
   11b28:	ble	11b50 <v_sucessores@@Base+0x4c>
   11b2c:	mov	r5, r1
   11b30:	bl	11cdc <vetor_novo@@Base>
   11b34:	ldr	r1, [r6, #4]
   11b38:	mov	r4, r0
   11b3c:	mov	r6, #0
   11b40:	add	r1, r1, r5, lsl #3
   11b44:	ldr	r5, [r1, #4]
   11b48:	cmp	r5, #0
   11b4c:	bne	11b58 <v_sucessores@@Base+0x54>
   11b50:	mov	r0, r4
   11b54:	pop	{r4, r5, r6, pc}
   11b58:	mov	r2, r6
   11b5c:	mov	r0, r4
   11b60:	ldr	r1, [r5]
   11b64:	bl	11d98 <vetor_insere@@Base>
   11b68:	add	r6, r6, #1
   11b6c:	ldr	r5, [r5, #4]
   11b70:	b	11b48 <v_sucessores@@Base+0x44>

00011b74 <v_antecessores@@Base>:
   11b74:	push	{r4, r5, r6, r7, r8, lr}
   11b78:	subs	r6, r0, #0
   11b7c:	moveq	r4, r6
   11b80:	beq	11bbc <v_antecessores@@Base+0x48>
   11b84:	ldr	r4, [r6]
   11b88:	cmp	r1, #0
   11b8c:	cmpge	r4, r1
   11b90:	movgt	r4, #1
   11b94:	movle	r4, #0
   11b98:	ble	11bbc <v_antecessores@@Base+0x48>
   11b9c:	mov	r5, r1
   11ba0:	mov	r8, #0
   11ba4:	bl	11cdc <vetor_novo@@Base>
   11ba8:	mov	r4, r0
   11bac:	mov	r7, r8
   11bb0:	ldr	r3, [r6]
   11bb4:	cmp	r7, r3
   11bb8:	blt	11bc4 <v_antecessores@@Base+0x50>
   11bbc:	mov	r0, r4
   11bc0:	pop	{r4, r5, r6, r7, r8, pc}
   11bc4:	ldr	r3, [r6, #4]
   11bc8:	add	r3, r3, r7, lsl #3
   11bcc:	ldr	r3, [r3, #4]
   11bd0:	cmp	r3, #0
   11bd4:	beq	11bf8 <v_antecessores@@Base+0x84>
   11bd8:	ldr	r2, [r3]
   11bdc:	cmp	r5, r2
   11be0:	bne	11bcc <v_antecessores@@Base+0x58>
   11be4:	mov	r2, r8
   11be8:	mov	r1, r7
   11bec:	mov	r0, r4
   11bf0:	add	r8, r8, #1
   11bf4:	bl	11d98 <vetor_insere@@Base>
   11bf8:	add	r7, r7, #1
   11bfc:	b	11bb0 <v_antecessores@@Base+0x3c>

00011c00 <v_grau@@Base>:
   11c00:	push	{r4, r5, r6, lr}
   11c04:	subs	r5, r1, #0
   11c08:	mvnlt	r4, #0
   11c0c:	blt	11c54 <v_grau@@Base+0x54>
   11c10:	mov	r4, r0
   11c14:	bl	11b74 <v_antecessores@@Base>
   11c18:	mov	r6, r0
   11c1c:	mov	r1, r5
   11c20:	mov	r0, r4
   11c24:	bl	11b04 <v_sucessores@@Base>
   11c28:	mov	r5, r0
   11c2c:	mov	r0, r6
   11c30:	bl	11d54 <vetor_tamanho@@Base>
   11c34:	mov	r4, r0
   11c38:	mov	r0, r5
   11c3c:	bl	11d54 <vetor_tamanho@@Base>
   11c40:	add	r4, r4, r0
   11c44:	mov	r0, r6
   11c48:	bl	11d00 <vetor_apaga@@Base>
   11c4c:	mov	r0, r5
   11c50:	bl	11d00 <vetor_apaga@@Base>
   11c54:	mov	r0, r4
   11c58:	pop	{r4, r5, r6, pc}

00011c5c <v_celebridade@@Base>:
   11c5c:	cmp	r0, #0
   11c60:	beq	11ccc <v_celebridade@@Base+0x70>
   11c64:	ldr	ip, [r0, #4]
   11c68:	ldr	r3, [ip, r1, lsl #3]
   11c6c:	cmp	r3, #0
   11c70:	bne	11cd4 <v_celebridade@@Base+0x78>
   11c74:	ldr	r0, [r0]
   11c78:	mov	r2, r3
   11c7c:	add	ip, ip, #4
   11c80:	push	{r4, lr}
   11c84:	cmp	r0, r2
   11c88:	bgt	11ca0 <v_celebridade@@Base+0x44>
   11c8c:	add	r3, r3, #1
   11c90:	sub	r0, r3, r0
   11c94:	clz	r0, r0
   11c98:	lsr	r0, r0, #5
   11c9c:	pop	{r4, pc}
   11ca0:	ldr	lr, [ip, r2, lsl #3]
   11ca4:	cmp	lr, #0
   11ca8:	beq	11cbc <v_celebridade@@Base+0x60>
   11cac:	ldr	r4, [lr]
   11cb0:	cmp	r4, r1
   11cb4:	bne	11cc4 <v_celebridade@@Base+0x68>
   11cb8:	add	r3, r3, #1
   11cbc:	add	r2, r2, #1
   11cc0:	b	11c84 <v_celebridade@@Base+0x28>
   11cc4:	ldr	lr, [lr, #4]
   11cc8:	b	11ca4 <v_celebridade@@Base+0x48>
   11ccc:	mvn	r0, #0
   11cd0:	bx	lr
   11cd4:	mov	r0, #0
   11cd8:	bx	lr

00011cdc <vetor_novo@@Base>:
   11cdc:	push	{r4, lr}
   11ce0:	mov	r0, #12
   11ce4:	bl	10adc <malloc@plt>
   11ce8:	cmp	r0, #0
   11cec:	movne	r3, #0
   11cf0:	strne	r3, [r0]
   11cf4:	strne	r3, [r0, #4]
   11cf8:	strne	r3, [r0, #8]
   11cfc:	pop	{r4, pc}

00011d00 <vetor_apaga@@Base>:
   11d00:	push	{r4, lr}
   11d04:	subs	r4, r0, #0
   11d08:	popeq	{r4, pc}
   11d0c:	ldr	r0, [r4, #8]
   11d10:	bl	10ab8 <free@plt>
   11d14:	mov	r0, r4
   11d18:	pop	{r4, lr}
   11d1c:	b	10ab8 <free@plt>

00011d20 <vetor_atribui@@Base>:
   11d20:	cmp	r0, #0
   11d24:	lsrne	r3, r1, #31
   11d28:	moveq	r3, #1
   11d2c:	cmp	r3, #0
   11d30:	bne	11d48 <vetor_atribui@@Base+0x28>
   11d34:	ldr	r3, [r0]
   11d38:	cmp	r3, r1
   11d3c:	ldrgt	r3, [r0, #8]
   11d40:	strgt	r2, [r3, r1, lsl #2]
   11d44:	bgt	11d4c <vetor_atribui@@Base+0x2c>
   11d48:	mvn	r1, #0
   11d4c:	mov	r0, r1
   11d50:	bx	lr

00011d54 <vetor_tamanho@@Base>:
   11d54:	cmp	r0, #0
   11d58:	ldrne	r0, [r0]
   11d5c:	mvneq	r0, #0
   11d60:	bx	lr

00011d64 <vetor_elemento@@Base>:
   11d64:	cmp	r0, #0
   11d68:	lsrne	r3, r1, #31
   11d6c:	moveq	r3, #1
   11d70:	cmp	r3, #0
   11d74:	bne	11d90 <vetor_elemento@@Base+0x2c>
   11d78:	ldr	r3, [r0]
   11d7c:	cmp	r3, r1
   11d80:	ble	11d90 <vetor_elemento@@Base+0x2c>
   11d84:	ldr	r3, [r0, #8]
   11d88:	ldr	r0, [r3, r1, lsl #2]
   11d8c:	bx	lr
   11d90:	mov	r0, #-2147483648	; 0x80000000
   11d94:	bx	lr

00011d98 <vetor_insere@@Base>:
   11d98:	cmn	r2, #1
   11d9c:	push	{r4, r5, r6, lr}
   11da0:	movge	r3, #0
   11da4:	movlt	r3, #1
   11da8:	cmp	r0, #0
   11dac:	moveq	r3, #1
   11db0:	cmp	r3, #0
   11db4:	beq	11dc4 <vetor_insere@@Base+0x2c>
   11db8:	mvn	r4, #0
   11dbc:	mov	r0, r4
   11dc0:	pop	{r4, r5, r6, pc}
   11dc4:	mov	r6, r1
   11dc8:	ldr	r1, [r0]
   11dcc:	mov	r4, r2
   11dd0:	mov	r5, r0
   11dd4:	cmp	r1, r2
   11dd8:	blt	11db8 <vetor_insere@@Base+0x20>
   11ddc:	ldr	r3, [r0, #4]
   11de0:	cmn	r2, #1
   11de4:	moveq	r4, r1
   11de8:	cmp	r1, r3
   11dec:	beq	11e14 <vetor_insere@@Base+0x7c>
   11df0:	ldr	r2, [r5]
   11df4:	ldr	r1, [r5, #8]
   11df8:	sub	r3, r2, #1
   11dfc:	cmp	r4, r3
   11e00:	ble	11e40 <vetor_insere@@Base+0xa8>
   11e04:	add	r2, r2, #1
   11e08:	str	r6, [r1, r4, lsl #2]
   11e0c:	str	r2, [r5]
   11e10:	b	11dbc <vetor_insere@@Base+0x24>
   11e14:	cmp	r1, #0
   11e18:	ldr	r0, [r0, #8]
   11e1c:	lslne	r1, r1, #1
   11e20:	moveq	r1, #1
   11e24:	str	r1, [r5, #4]
   11e28:	lsl	r1, r1, #2
   11e2c:	bl	10ac4 <realloc@plt>
   11e30:	cmp	r0, #0
   11e34:	str	r0, [r5, #8]
   11e38:	bne	11df0 <vetor_insere@@Base+0x58>
   11e3c:	b	11db8 <vetor_insere@@Base+0x20>
   11e40:	ldr	ip, [r1, r3, lsl #2]
   11e44:	add	r0, r1, r3, lsl #2
   11e48:	sub	r3, r3, #1
   11e4c:	str	ip, [r0, #4]
   11e50:	b	11dfc <vetor_insere@@Base+0x64>

00011e54 <vetor_remove@@Base>:
   11e54:	cmp	r0, #0
   11e58:	lsrne	r3, r1, #31
   11e5c:	moveq	r3, #1
   11e60:	cmp	r3, #0
   11e64:	bne	11ea4 <vetor_remove@@Base+0x50>
   11e68:	ldr	r3, [r0]
   11e6c:	cmp	r3, r1
   11e70:	ble	11ea4 <vetor_remove@@Base+0x50>
   11e74:	add	r1, r1, #1
   11e78:	cmp	r3, r1
   11e7c:	bne	11e90 <vetor_remove@@Base+0x3c>
   11e80:	sub	r3, r3, #1
   11e84:	str	r3, [r0]
   11e88:	mov	r0, #0
   11e8c:	bx	lr
   11e90:	ldr	r2, [r0, #8]
   11e94:	ldr	ip, [r2, r1, lsl #2]
   11e98:	add	r2, r2, r1, lsl #2
   11e9c:	str	ip, [r2, #-4]
   11ea0:	b	11e74 <vetor_remove@@Base+0x20>
   11ea4:	mvn	r0, #0
   11ea8:	bx	lr

00011eac <vetor_pesquisa@@Base>:
   11eac:	subs	r3, r0, #0
   11eb0:	movne	r0, #0
   11eb4:	ldrne	r2, [r3]
   11eb8:	bne	11ed8 <vetor_pesquisa@@Base+0x2c>
   11ebc:	mvn	r0, #0
   11ec0:	bx	lr
   11ec4:	ldr	ip, [r3, #8]
   11ec8:	ldr	ip, [ip, r0, lsl #2]
   11ecc:	cmp	ip, r1
   11ed0:	bxeq	lr
   11ed4:	add	r0, r0, #1
   11ed8:	cmp	r2, r0
   11edc:	bgt	11ec4 <vetor_pesquisa@@Base+0x18>
   11ee0:	b	11ebc <vetor_pesquisa@@Base+0x10>

00011ee4 <vetor_ordena@@Base>:
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f3c <vetor_ordena@@Base+0x58>
   11eec:	push	{r4, r5, lr}
   11ef0:	mov	r3, #1
   11ef4:	ldr	r5, [r0]
   11ef8:	cmp	r5, r3
   11efc:	bgt	11f08 <vetor_ordena@@Base+0x24>
   11f00:	mov	r0, #0
   11f04:	pop	{r4, r5, pc}
   11f08:	ldr	r1, [r0, #8]
   11f0c:	mov	r2, r3
   11f10:	ldr	lr, [r1, r3, lsl #2]
   11f14:	add	ip, r1, r3, lsl #2
   11f18:	ldr	r4, [ip, #-4]
   11f1c:	cmp	r4, lr
   11f20:	ble	11f30 <vetor_ordena@@Base+0x4c>
   11f24:	subs	r2, r2, #1
   11f28:	str	r4, [ip], #-4
   11f2c:	bne	11f18 <vetor_ordena@@Base+0x34>
   11f30:	add	r3, r3, #1
   11f34:	str	lr, [r1, r2, lsl #2]
   11f38:	b	11ef8 <vetor_ordena@@Base+0x14>
   11f3c:	mvn	r0, #0
   11f40:	bx	lr

00011f44 <__libc_csu_init@@Base>:
   11f44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f48:	mov	r7, r0
   11f4c:	ldr	r6, [pc, #72]	; 11f9c <__libc_csu_init@@Base+0x58>
   11f50:	ldr	r5, [pc, #72]	; 11fa0 <__libc_csu_init@@Base+0x5c>
   11f54:	add	r6, pc, r6
   11f58:	add	r5, pc, r5
   11f5c:	sub	r6, r6, r5
   11f60:	mov	r8, r1
   11f64:	mov	r9, r2
   11f68:	bl	10a80 <calloc@plt-0x20>
   11f6c:	asrs	r6, r6, #2
   11f70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f74:	mov	r4, #0
   11f78:	add	r4, r4, #1
   11f7c:	ldr	r3, [r5], #4
   11f80:	mov	r2, r9
   11f84:	mov	r1, r8
   11f88:	mov	r0, r7
   11f8c:	blx	r3
   11f90:	cmp	r6, r4
   11f94:	bne	11f78 <__libc_csu_init@@Base+0x34>
   11f98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f9c:			; <UNDEFINED> instruction: 0x00010fb8
   11fa0:			; <UNDEFINED> instruction: 0x00010fb0

00011fa4 <__libc_csu_fini@@Base>:
   11fa4:	bx	lr

Disassembly of section .fini:

00011fa8 <.fini>:
   11fa8:	push	{r3, lr}
   11fac:	pop	{r3, pc}
