
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010d3c <.init>:
   10d3c:	push	{r3, lr}
   10d40:	bl	11478 <close@plt+0x4b8>
   10d44:	pop	{r3, pc}

Disassembly of section .plt:

00010d48 <calloc@plt-0x14>:
   10d48:	push	{lr}		; (str lr, [sp, #-4]!)
   10d4c:	ldr	lr, [pc, #4]	; 10d58 <calloc@plt-0x4>
   10d50:	add	lr, pc, lr
   10d54:	ldr	pc, [lr, #8]!
   10d58:	andeq	r6, r1, r8, lsr #5

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #680]!	; 0x2a8

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #672]!	; 0x2a0

00010d74 <strcmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #664]!	; 0x298

00010d80 <fflush@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #656]!	; 0x290

00010d8c <free@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #648]!	; 0x288

00010d98 <_exit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #640]!	; 0x280

00010da4 <memcpy@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #632]!	; 0x278

00010db0 <mbsinit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #624]!	; 0x270

00010dbc <fwrite_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #616]!	; 0x268

00010dc8 <memcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #608]!	; 0x260

00010dd4 <fputc_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #600]!	; 0x258

00010de0 <dcgettext@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #592]!	; 0x250

00010dec <dup2@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #584]!	; 0x248

00010df8 <realloc@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #576]!	; 0x240

00010e04 <textdomain@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #568]!	; 0x238

00010e10 <iswprint@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #560]!	; 0x230

00010e1c <lseek64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #552]!	; 0x228

00010e28 <__ctype_get_mb_cur_max@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #544]!	; 0x220

00010e34 <__fpending@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #536]!	; 0x218

00010e40 <ferror_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #528]!	; 0x210

00010e4c <mbrtowc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #520]!	; 0x208

00010e58 <error@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #512]!	; 0x200

00010e64 <fnmatch@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e70 <open64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #496]!	; 0x1f0

00010e7c <getenv@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #488]!	; 0x1e8

00010e88 <puts@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #480]!	; 0x1e0

00010e94 <malloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea0 <__libc_start_main@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #464]!	; 0x1d0

00010eac <__freading@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #456]!	; 0x1c8

00010eb8 <__gmon_start__@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec4 <freopen64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #432]!	; 0x1b0

00010edc <__ctype_b_loc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ee8 <exit@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef4 <strlen@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #408]!	; 0x198

00010f00 <__errno_location@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #400]!	; 0x190

00010f0c <__cxa_atexit@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #392]!	; 0x188

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #384]!	; 0x180

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #376]!	; 0x178

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #368]!	; 0x170

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #360]!	; 0x168

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #352]!	; 0x160

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #344]!	; 0x158

00010f60 <setlocale@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #336]!	; 0x150

00010f6c <strrchr@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #328]!	; 0x148

00010f78 <nl_langinfo@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #320]!	; 0x140

00010f84 <bindtextdomain@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #312]!	; 0x138

00010f90 <getline@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #304]!	; 0x130

00010f9c <fputs@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #296]!	; 0x128

00010fa8 <strncmp@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #288]!	; 0x120

00010fb4 <abort@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #280]!	; 0x118

00010fc0 <close@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #272]!	; 0x110

Disassembly of section .text:

00010fcc <_obstack_begin@@Base-0x13cc>:
   10fcc:	push	{r4, lr}
   10fd0:	bl	10f00 <__errno_location@plt>
   10fd4:	mov	r3, #12
   10fd8:	str	r3, [r0]
   10fdc:	mov	r0, #0
   10fe0:	pop	{r4, pc}
   10fe4:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10fe8:	mov	r6, r0
   10fec:	mov	r8, r1
   10ff0:	mov	r4, #0
   10ff4:	mov	r5, #2
   10ff8:	mov	r7, r4
   10ffc:	ldr	r0, [r1]
   11000:	bl	1259c <_obstack_memory_used@@Base+0x24>
   11004:	ldr	r1, [pc, #940]	; 113b8 <close@plt+0x3f8>
   11008:	mov	r0, #6
   1100c:	bl	10f60 <setlocale@plt>
   11010:	ldr	r1, [pc, #932]	; 113bc <close@plt+0x3fc>
   11014:	ldr	r0, [pc, #932]	; 113c0 <close@plt+0x400>
   11018:	bl	10f84 <bindtextdomain@plt>
   1101c:	ldr	r0, [pc, #924]	; 113c0 <close@plt+0x400>
   11020:	bl	10e04 <textdomain@plt>
   11024:	ldr	r0, [pc, #920]	; 113c4 <close@plt+0x404>
   11028:	ldr	sl, [pc, #920]	; 113c8 <close@plt+0x408>
   1102c:	ldr	r9, [pc, #920]	; 113cc <close@plt+0x40c>
   11030:	bl	148f4 <_obstack_memory_used@@Base+0x237c>
   11034:	mov	r3, sl
   11038:	mov	r2, r9
   1103c:	str	r7, [sp]
   11040:	mov	r1, r8
   11044:	mov	r0, r6
   11048:	bl	10ed0 <getopt_long@plt>
   1104c:	cmn	r0, #1
   11050:	bne	1109c <close@plt+0xdc>
   11054:	ldr	r3, [pc, #884]	; 113d0 <close@plt+0x410>
   11058:	cmp	r5, #2
   1105c:	moveq	r7, #0
   11060:	andne	r7, r4, #1
   11064:	cmp	r7, #0
   11068:	ldr	r9, [r3]
   1106c:	sub	r6, r6, r9
   11070:	add	sl, r8, r9, lsl #2
   11074:	beq	11118 <close@plt+0x158>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #848]	; 113d4 <close@plt+0x414>
   11080:	mov	r0, #0
   11084:	bl	10de0 <dcgettext@plt>
   11088:	mov	r1, #0
   1108c:	mov	r2, r0
   11090:	mov	r0, r1
   11094:	bl	10e58 <error@plt>
   11098:	b	110bc <close@plt+0xfc>
   1109c:	cmp	r0, #98	; 0x62
   110a0:	beq	11108 <close@plt+0x148>
   110a4:	bgt	110c4 <close@plt+0x104>
   110a8:	cmn	r0, #3
   110ac:	beq	110dc <close@plt+0x11c>
   110b0:	cmn	r0, #2
   110b4:	moveq	r0, #0
   110b8:	beq	110c0 <close@plt+0x100>
   110bc:	mov	r0, #1
   110c0:	bl	11b10 <close@plt+0xb50>
   110c4:	cmp	r0, #99	; 0x63
   110c8:	beq	11110 <close@plt+0x150>
   110cc:	cmp	r0, #112	; 0x70
   110d0:	bne	110bc <close@plt+0xfc>
   110d4:	mov	r4, #1
   110d8:	b	11034 <close@plt+0x74>
   110dc:	ldr	r3, [pc, #756]	; 113d8 <close@plt+0x418>
   110e0:	ldr	r0, [pc, #756]	; 113dc <close@plt+0x41c>
   110e4:	ldr	r2, [pc, #756]	; 113e0 <close@plt+0x420>
   110e8:	stm	sp, {r3, r7}
   110ec:	ldr	r3, [pc, #752]	; 113e4 <close@plt+0x424>
   110f0:	ldr	r1, [pc, #752]	; 113e8 <close@plt+0x428>
   110f4:	ldr	r0, [r0]
   110f8:	ldr	r3, [r3]
   110fc:	bl	13fe8 <_obstack_memory_used@@Base+0x1a70>
   11100:	mov	r0, #0
   11104:	bl	10ee8 <exit@plt>
   11108:	mov	r5, #0
   1110c:	b	11034 <close@plt+0x74>
   11110:	mov	r5, #1
   11114:	b	11034 <close@plt+0x74>
   11118:	eor	r3, r4, #1
   1111c:	uxtb	r3, r3
   11120:	cmp	r3, r6
   11124:	bge	1119c <close@plt+0x1dc>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #696]	; 113ec <close@plt+0x42c>
   11130:	mov	r0, r7
   11134:	bl	10de0 <dcgettext@plt>
   11138:	cmp	r4, #0
   1113c:	mov	r5, r0
   11140:	moveq	r3, #4
   11144:	movne	r3, #0
   11148:	ldr	r0, [sl, r3]
   1114c:	bl	13b9c <_obstack_memory_used@@Base+0x1624>
   11150:	mov	r3, r0
   11154:	mov	r2, r5
   11158:	mov	r1, r7
   1115c:	mov	r0, r7
   11160:	bl	10e58 <error@plt>
   11164:	cmp	r4, #0
   11168:	beq	110bc <close@plt+0xfc>
   1116c:	ldr	r3, [pc, #636]	; 113f0 <close@plt+0x430>
   11170:	mov	r2, #5
   11174:	mov	r0, r7
   11178:	ldr	r1, [pc, #628]	; 113f4 <close@plt+0x434>
   1117c:	ldr	r4, [r3]
   11180:	bl	10de0 <dcgettext@plt>
   11184:	mov	r3, r0
   11188:	ldr	r2, [pc, #616]	; 113f8 <close@plt+0x438>
   1118c:	mov	r1, #1
   11190:	mov	r0, r4
   11194:	bl	10f3c <__fprintf_chk@plt>
   11198:	b	110bc <close@plt+0xfc>
   1119c:	cmp	r4, #0
   111a0:	beq	111e4 <close@plt+0x224>
   111a4:	ldr	r5, [pc, #592]	; 113fc <close@plt+0x43c>
   111a8:	movw	r6, #4309	; 0x10d5
   111ac:	mov	r7, r5
   111b0:	mov	r0, r5
   111b4:	bl	10e88 <puts@plt>
   111b8:	mov	r0, r5
   111bc:	bl	10ef4 <strlen@plt>
   111c0:	add	r0, r0, #1
   111c4:	add	r5, r5, r0
   111c8:	sub	r3, r5, r7
   111cc:	cmp	r3, r6
   111d0:	bls	111b0 <close@plt+0x1f0>
   111d4:	eor	r0, r4, #1
   111d8:	uxtb	r0, r0
   111dc:	add	sp, sp, #8
   111e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111e4:	cmp	r5, #2
   111e8:	bne	11238 <close@plt+0x278>
   111ec:	ldr	r0, [pc, #524]	; 11400 <close@plt+0x440>
   111f0:	bl	10e7c <getenv@plt>
   111f4:	subs	r3, r0, #0
   111f8:	beq	1130c <close@plt+0x34c>
   111fc:	ldrb	r3, [r3]
   11200:	cmp	r3, #0
   11204:	beq	1130c <close@plt+0x34c>
   11208:	bl	11d4c <close@plt+0xd8c>
   1120c:	ldr	r1, [pc, #496]	; 11404 <close@plt+0x444>
   11210:	mov	r5, r0
   11214:	bl	10d74 <strcmp@plt>
   11218:	cmp	r0, #0
   1121c:	moveq	r5, #1
   11220:	beq	11238 <close@plt+0x278>
   11224:	mov	r0, r5
   11228:	ldr	r1, [pc, #472]	; 11408 <close@plt+0x448>
   1122c:	bl	10d74 <strcmp@plt>
   11230:	clz	r5, r0
   11234:	lsr	r5, r5, #5
   11238:	ldr	r3, [pc, #460]	; 1140c <close@plt+0x44c>
   1123c:	mov	r2, #0
   11240:	mov	r1, r2
   11244:	ldr	r0, [pc, #452]	; 11410 <close@plt+0x450>
   11248:	str	r3, [sp]
   1124c:	ldr	r3, [pc, #448]	; 11414 <close@plt+0x454>
   11250:	bl	12398 <_obstack_begin@@Base>
   11254:	cmp	r6, #0
   11258:	bne	1132c <close@plt+0x36c>
   1125c:	mov	r1, r6
   11260:	mov	r0, r6
   11264:	bl	11680 <close@plt+0x6c0>
   11268:	mov	r4, r0
   1126c:	cmp	r4, #0
   11270:	beq	111d4 <close@plt+0x214>
   11274:	ldr	r3, [pc, #404]	; 11410 <close@plt+0x450>
   11278:	ldr	r8, [pc, #348]	; 113dc <close@plt+0x41c>
   1127c:	ldr	r6, [r3, #8]
   11280:	ldr	r1, [r3, #12]
   11284:	ldr	r0, [r3, #16]
   11288:	cmp	r1, r6
   1128c:	sub	r7, r1, r6
   11290:	ldrbeq	r2, [r3, #40]	; 0x28
   11294:	orreq	r2, r2, #2
   11298:	strbeq	r2, [r3, #40]	; 0x28
   1129c:	ldr	r2, [r3, #24]
   112a0:	add	r1, r1, r2
   112a4:	bic	r1, r1, r2
   112a8:	ldr	r2, [r3, #4]
   112ac:	sub	ip, r1, r2
   112b0:	sub	r2, r0, r2
   112b4:	cmp	ip, r2
   112b8:	movhi	r1, r0
   112bc:	cmp	r5, #0
   112c0:	ldr	r5, [pc, #336]	; 11418 <close@plt+0x458>
   112c4:	str	r1, [r3, #8]
   112c8:	str	r1, [r3, #12]
   112cc:	ldr	r3, [pc, #328]	; 1141c <close@plt+0x45c>
   112d0:	ldr	r0, [pc, #328]	; 11420 <close@plt+0x460>
   112d4:	ldr	r1, [r8]
   112d8:	movne	r5, r3
   112dc:	ldr	r3, [pc, #320]	; 11424 <close@plt+0x464>
   112e0:	movne	r0, r3
   112e4:	bl	10d68 <fputs_unlocked@plt>
   112e8:	mov	r2, r7
   112ec:	mov	r1, #1
   112f0:	ldr	r3, [r8]
   112f4:	mov	r0, r6
   112f8:	bl	10dbc <fwrite_unlocked@plt>
   112fc:	mov	r0, r5
   11300:	ldr	r1, [r8]
   11304:	bl	10d68 <fputs_unlocked@plt>
   11308:	b	111d4 <close@plt+0x214>
   1130c:	mov	r2, #5
   11310:	ldr	r1, [pc, #272]	; 11428 <close@plt+0x468>
   11314:	mov	r0, #0
   11318:	bl	10de0 <dcgettext@plt>
   1131c:	mov	r2, r0
   11320:	mov	r1, #0
   11324:	mov	r0, #1
   11328:	bl	10e58 <error@plt>
   1132c:	ldr	r6, [r8, r9, lsl #2]
   11330:	ldr	r1, [pc, #244]	; 1142c <close@plt+0x46c>
   11334:	ldr	r7, [pc, #244]	; 11430 <close@plt+0x470>
   11338:	mov	r0, r6
   1133c:	bl	10d74 <strcmp@plt>
   11340:	cmp	r0, #0
   11344:	beq	11390 <close@plt+0x3d0>
   11348:	ldr	r1, [pc, #228]	; 11434 <close@plt+0x474>
   1134c:	mov	r0, r6
   11350:	ldr	r2, [r7]
   11354:	bl	120a0 <close@plt+0x10e0>
   11358:	subs	r8, r0, #0
   1135c:	bne	11390 <close@plt+0x3d0>
   11360:	bl	10f00 <__errno_location@plt>
   11364:	ldr	r5, [r0]
   11368:	mov	r2, r6
   1136c:	mov	r1, #3
   11370:	mov	r0, #0
   11374:	bl	13a5c <_obstack_memory_used@@Base+0x14e4>
   11378:	mov	r3, r0
   1137c:	ldr	r2, [pc, #180]	; 11438 <close@plt+0x478>
   11380:	mov	r0, #0
   11384:	mov	r1, r5
   11388:	bl	10e58 <error@plt>
   1138c:	b	111d4 <close@plt+0x214>
   11390:	mov	r1, r6
   11394:	ldr	r0, [r7]
   11398:	bl	11680 <close@plt+0x6c0>
   1139c:	mov	r8, r0
   113a0:	ldr	r0, [r7]
   113a4:	bl	11f10 <close@plt+0xf50>
   113a8:	cmp	r0, #0
   113ac:	moveq	r4, r8
   113b0:	beq	1126c <close@plt+0x2ac>
   113b4:	b	11360 <close@plt+0x3a0>
   113b8:	ldrdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   113bc:	andeq	r6, r1, sl
   113c0:	andeq	r5, r1, r3, lsr pc
   113c4:	andeq	r1, r1, ip, lsr lr
   113c8:	andeq	r4, r1, r0, lsl #21
   113cc:	andeq	r6, r1, r1, lsr r0
   113d0:	andeq	r7, r2, r0, asr #2
   113d4:	andeq	r6, r1, r5, lsr r0
   113d8:	andeq	r6, r1, r2, lsr #32
   113dc:	andeq	r7, r2, r4, asr r1
   113e0:	andeq	r5, r1, pc, lsr #30
   113e4:	andeq	r7, r2, r8, ror #1
   113e8:	andeq	r5, r1, lr, asr #24
   113ec:	muleq	r1, ip, r0
   113f0:	andeq	r7, r2, r8, asr #2
   113f4:	andeq	r6, r1, sp, lsr #1
   113f8:	andeq	r6, r1, r5, lsr #8
   113fc:	andeq	r4, r1, r0, lsl #22
   11400:	andeq	r6, r1, r9, ror #1
   11404:	strdeq	r6, [r1], -r0
   11408:	andeq	r6, r1, pc, ror #1
   1140c:	andeq	r2, r1, r8
   11410:	andeq	r7, r2, ip, asr r1
   11414:	strdeq	r4, [r1], -ip
   11418:	ldrdeq	r5, [r1], -r6
   1141c:	ldrdeq	r5, [r1], -r3
   11420:	andeq	r5, r1, fp, ror #31
   11424:	strdeq	r5, [r1], -r7
   11428:	strdeq	r6, [r1], -r4
   1142c:	andeq	r6, r1, lr, ror #6
   11430:	andeq	r7, r2, r0, asr r1
   11434:	andeq	r6, r1, r8, lsl #6
   11438:	andeq	r6, r1, lr, lsl #6
   1143c:	mov	fp, #0
   11440:	mov	lr, #0
   11444:	pop	{r1}		; (ldr r1, [sp], #4)
   11448:	mov	r2, sp
   1144c:	push	{r2}		; (str r2, [sp, #-4]!)
   11450:	push	{r0}		; (str r0, [sp, #-4]!)
   11454:	ldr	ip, [pc, #16]	; 1146c <close@plt+0x4ac>
   11458:	push	{ip}		; (str ip, [sp, #-4]!)
   1145c:	ldr	r0, [pc, #12]	; 11470 <close@plt+0x4b0>
   11460:	ldr	r3, [pc, #12]	; 11474 <close@plt+0x4b4>
   11464:	bl	10ea0 <__libc_start_main@plt>
   11468:	bl	10fb4 <abort@plt>
   1146c:	strdeq	r4, [r1], -r0
   11470:	andeq	r0, r1, r4, ror #31
   11474:	muleq	r1, r0, r8
   11478:	ldr	r3, [pc, #20]	; 11494 <close@plt+0x4d4>
   1147c:	ldr	r2, [pc, #20]	; 11498 <close@plt+0x4d8>
   11480:	add	r3, pc, r3
   11484:	ldr	r2, [r3, r2]
   11488:	cmp	r2, #0
   1148c:	bxeq	lr
   11490:	b	10eb8 <__gmon_start__@plt>
   11494:	andeq	r5, r1, r8, ror fp
   11498:	ldrdeq	r0, [r0], -ip
   1149c:	ldr	r0, [pc, #24]	; 114bc <close@plt+0x4fc>
   114a0:	ldr	r3, [pc, #24]	; 114c0 <close@plt+0x500>
   114a4:	cmp	r3, r0
   114a8:	bxeq	lr
   114ac:	ldr	r3, [pc, #16]	; 114c4 <close@plt+0x504>
   114b0:	cmp	r3, #0
   114b4:	bxeq	lr
   114b8:	bx	r3
   114bc:	andeq	r7, r2, r4, lsr r1
   114c0:	andeq	r7, r2, r4, lsr r1
   114c4:	andeq	r0, r0, r0
   114c8:	ldr	r0, [pc, #36]	; 114f4 <close@plt+0x534>
   114cc:	ldr	r1, [pc, #36]	; 114f8 <close@plt+0x538>
   114d0:	sub	r1, r1, r0
   114d4:	asr	r1, r1, #2
   114d8:	add	r1, r1, r1, lsr #31
   114dc:	asrs	r1, r1, #1
   114e0:	bxeq	lr
   114e4:	ldr	r3, [pc, #16]	; 114fc <close@plt+0x53c>
   114e8:	cmp	r3, #0
   114ec:	bxeq	lr
   114f0:	bx	r3
   114f4:	andeq	r7, r2, r4, lsr r1
   114f8:	andeq	r7, r2, r4, lsr r1
   114fc:	andeq	r0, r0, r0
   11500:	push	{r4, lr}
   11504:	ldr	r4, [pc, #24]	; 11524 <close@plt+0x564>
   11508:	ldrb	r3, [r4]
   1150c:	cmp	r3, #0
   11510:	popne	{r4, pc}
   11514:	bl	1149c <close@plt+0x4dc>
   11518:	mov	r3, #1
   1151c:	strb	r3, [r4]
   11520:	pop	{r4, pc}
   11524:	andeq	r7, r2, r8, asr r1
   11528:	b	114c8 <close@plt+0x508>
   1152c:	push	{r4, r5, r6, lr}
   11530:	sub	r6, r0, #1
   11534:	mov	r5, #1
   11538:	ldr	r4, [pc, #316]	; 1167c <close@plt+0x6bc>
   1153c:	ldrb	r3, [r6, #1]!
   11540:	cmp	r3, #0
   11544:	popeq	{r4, r5, r6, pc}
   11548:	cmp	r3, #61	; 0x3d
   1154c:	ldr	r2, [r4, #12]
   11550:	ldr	r1, [r4, #16]
   11554:	beq	11648 <close@plt+0x688>
   11558:	bhi	11574 <close@plt+0x5b4>
   1155c:	cmp	r3, #39	; 0x27
   11560:	beq	115bc <close@plt+0x5fc>
   11564:	cmp	r3, #58	; 0x3a
   11568:	beq	11648 <close@plt+0x688>
   1156c:	mov	r5, #1
   11570:	b	11588 <close@plt+0x5c8>
   11574:	cmp	r3, #92	; 0x5c
   11578:	beq	11584 <close@plt+0x5c4>
   1157c:	cmp	r3, #94	; 0x5e
   11580:	bne	1156c <close@plt+0x5ac>
   11584:	eor	r5, r5, #1
   11588:	ldr	r3, [r4, #12]
   1158c:	ldr	r2, [r4, #16]
   11590:	cmp	r2, r3
   11594:	bne	115a4 <close@plt+0x5e4>
   11598:	mov	r1, #1
   1159c:	mov	r0, r4
   115a0:	bl	123d8 <_obstack_newchunk@@Base>
   115a4:	ldr	r3, [r4, #12]
   115a8:	add	r2, r3, #1
   115ac:	str	r2, [r4, #12]
   115b0:	ldrb	r2, [r6]
   115b4:	strb	r2, [r3]
   115b8:	b	1153c <close@plt+0x57c>
   115bc:	cmp	r1, r2
   115c0:	bne	115d0 <close@plt+0x610>
   115c4:	mov	r1, #1
   115c8:	mov	r0, r4
   115cc:	bl	123d8 <_obstack_newchunk@@Base>
   115d0:	ldr	r3, [r4, #12]
   115d4:	add	r2, r3, #1
   115d8:	str	r2, [r4, #12]
   115dc:	mov	r2, #39	; 0x27
   115e0:	strb	r2, [r3]
   115e4:	ldr	r3, [r4, #12]
   115e8:	ldr	r2, [r4, #16]
   115ec:	cmp	r2, r3
   115f0:	bne	11600 <close@plt+0x640>
   115f4:	mov	r1, #1
   115f8:	mov	r0, r4
   115fc:	bl	123d8 <_obstack_newchunk@@Base>
   11600:	ldr	r3, [r4, #12]
   11604:	add	r2, r3, #1
   11608:	str	r2, [r4, #12]
   1160c:	mov	r2, #92	; 0x5c
   11610:	strb	r2, [r3]
   11614:	ldr	r3, [r4, #12]
   11618:	ldr	r2, [r4, #16]
   1161c:	cmp	r2, r3
   11620:	bne	11630 <close@plt+0x670>
   11624:	mov	r1, #1
   11628:	mov	r0, r4
   1162c:	bl	123d8 <_obstack_newchunk@@Base>
   11630:	ldr	r3, [r4, #12]
   11634:	add	r2, r3, #1
   11638:	str	r2, [r4, #12]
   1163c:	mov	r2, #39	; 0x27
   11640:	strb	r2, [r3]
   11644:	b	1156c <close@plt+0x5ac>
   11648:	cmp	r5, #0
   1164c:	beq	1156c <close@plt+0x5ac>
   11650:	cmp	r1, r2
   11654:	bne	11664 <close@plt+0x6a4>
   11658:	mov	r1, #1
   1165c:	mov	r0, r4
   11660:	bl	123d8 <_obstack_newchunk@@Base>
   11664:	ldr	r3, [r4, #12]
   11668:	add	r2, r3, #1
   1166c:	str	r2, [r4, #12]
   11670:	mov	r2, #92	; 0x5c
   11674:	strb	r2, [r3]
   11678:	b	11588 <close@plt+0x5c8>
   1167c:	andeq	r7, r2, ip, asr r1
   11680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11684:	sub	sp, sp, #36	; 0x24
   11688:	mov	r3, #0
   1168c:	str	r1, [sp, #8]
   11690:	str	r0, [sp, #16]
   11694:	ldr	r0, [pc, #1092]	; 11ae0 <close@plt+0xb20>
   11698:	str	r3, [sp, #24]
   1169c:	str	r3, [sp, #28]
   116a0:	bl	10e7c <getenv@plt>
   116a4:	subs	r8, r0, #0
   116a8:	ldreq	r8, [pc, #1076]	; 11ae4 <close@plt+0xb24>
   116ac:	beq	116c0 <close@plt+0x700>
   116b0:	ldrb	r2, [r8]
   116b4:	ldr	r3, [pc, #1064]	; 11ae4 <close@plt+0xb24>
   116b8:	cmp	r2, #0
   116bc:	moveq	r8, r3
   116c0:	ldr	r7, [pc, #1056]	; 11ae8 <close@plt+0xb28>
   116c4:	mov	r3, #1
   116c8:	mov	r6, #3
   116cc:	mov	fp, #0
   116d0:	ldr	r4, [pc, #1044]	; 11aec <close@plt+0xb2c>
   116d4:	str	r3, [sp, #12]
   116d8:	ldr	r3, [sp, #16]
   116dc:	add	fp, fp, #1
   116e0:	cmp	r3, #0
   116e4:	beq	11800 <close@plt+0x840>
   116e8:	mov	r2, r3
   116ec:	add	r1, sp, #28
   116f0:	add	r0, sp, #24
   116f4:	bl	10f90 <getline@plt>
   116f8:	cmp	r0, #0
   116fc:	bgt	11714 <close@plt+0x754>
   11700:	ldr	r0, [sp, #24]
   11704:	bl	12008 <close@plt+0x1048>
   11708:	ldr	r0, [sp, #12]
   1170c:	add	sp, sp, #36	; 0x24
   11710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11714:	ldr	r5, [sp, #24]
   11718:	bl	10edc <__ctype_b_loc@plt>
   1171c:	ldr	r2, [r0]
   11720:	mov	sl, r0
   11724:	mov	r0, r5
   11728:	add	r5, r5, #1
   1172c:	ldrb	r3, [r5, #-1]
   11730:	lsl	r1, r3, #1
   11734:	ldrh	r1, [r2, r1]
   11738:	tst	r1, #8192	; 0x2000
   1173c:	bne	11724 <close@plt+0x764>
   11740:	cmp	r3, #35	; 0x23
   11744:	cmpne	r3, #0
   11748:	beq	116d8 <close@plt+0x718>
   1174c:	mov	r9, r0
   11750:	ldrb	r3, [r9, #1]!
   11754:	lsl	r1, r3, #1
   11758:	adds	r3, r3, #0
   1175c:	movne	r3, #1
   11760:	ldrh	r1, [r2, r1]
   11764:	eor	r1, r1, #8192	; 0x2000
   11768:	ands	r3, r3, r1, lsr #13
   1176c:	bne	11750 <close@plt+0x790>
   11770:	sub	r1, r9, r0
   11774:	bl	14320 <_obstack_memory_used@@Base+0x1da8>
   11778:	ldrb	r3, [r9]
   1177c:	mov	r5, r0
   11780:	cmp	r3, #0
   11784:	beq	117b0 <close@plt+0x7f0>
   11788:	ldr	r0, [sl]
   1178c:	ldrb	r3, [r9, #1]!
   11790:	lsl	r2, r3, #1
   11794:	ldrh	r2, [r0, r2]
   11798:	tst	r2, #8192	; 0x2000
   1179c:	bne	1178c <close@plt+0x7cc>
   117a0:	cmp	r3, #35	; 0x23
   117a4:	cmpne	r3, #0
   117a8:	movne	r3, r9
   117ac:	bne	11828 <close@plt+0x868>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #820]	; 11af0 <close@plt+0xb30>
   117b8:	mov	r0, #0
   117bc:	bl	10de0 <dcgettext@plt>
   117c0:	mov	r9, r0
   117c4:	mov	r1, #3
   117c8:	ldr	r2, [sp, #8]
   117cc:	mov	r0, #0
   117d0:	bl	13a5c <_obstack_memory_used@@Base+0x14e4>
   117d4:	mov	r1, #0
   117d8:	mov	r3, r0
   117dc:	str	fp, [sp]
   117e0:	mov	r0, r1
   117e4:	mov	r2, r9
   117e8:	bl	10e58 <error@plt>
   117ec:	mov	r0, r5
   117f0:	bl	12008 <close@plt+0x1048>
   117f4:	mov	r3, #0
   117f8:	str	r3, [sp, #12]
   117fc:	b	116d8 <close@plt+0x718>
   11800:	ldr	r3, [pc, #748]	; 11af4 <close@plt+0xb34>
   11804:	cmp	r7, r3
   11808:	beq	11708 <close@plt+0x748>
   1180c:	mov	r0, r7
   11810:	mov	r5, r7
   11814:	bl	10ef4 <strlen@plt>
   11818:	add	r0, r0, #1
   1181c:	add	r7, r7, r0
   11820:	b	11718 <close@plt+0x758>
   11824:	mov	r3, r1
   11828:	ldrb	r2, [r3, #1]
   1182c:	add	r1, r3, #1
   11830:	cmp	r2, #0
   11834:	cmpne	r2, #35	; 0x23
   11838:	bne	11824 <close@plt+0x864>
   1183c:	mov	r1, r3
   11840:	sub	r3, r3, #1
   11844:	ldrb	r2, [r1]
   11848:	lsl	r2, r2, #1
   1184c:	ldrh	r2, [r0, r2]
   11850:	tst	r2, #8192	; 0x2000
   11854:	bne	1183c <close@plt+0x87c>
   11858:	add	r1, r1, #1
   1185c:	mov	r0, r9
   11860:	sub	r1, r1, r9
   11864:	bl	14320 <_obstack_memory_used@@Base+0x1da8>
   11868:	mov	r9, r0
   1186c:	ldr	r1, [pc, #620]	; 11ae0 <close@plt+0xb20>
   11870:	mov	r0, r5
   11874:	bl	11dd0 <close@plt+0xe10>
   11878:	subs	r2, r0, #0
   1187c:	bne	118b0 <close@plt+0x8f0>
   11880:	mov	r1, r8
   11884:	mov	r0, r9
   11888:	bl	10e64 <fnmatch@plt>
   1188c:	cmp	r6, #2
   11890:	cmpne	r0, #0
   11894:	movne	r6, #0
   11898:	moveq	r6, #2
   1189c:	mov	r0, r5
   118a0:	bl	12008 <close@plt+0x1048>
   118a4:	mov	r0, r9
   118a8:	bl	12008 <close@plt+0x1048>
   118ac:	b	116d8 <close@plt+0x718>
   118b0:	cmp	r6, #2
   118b4:	beq	11970 <close@plt+0x9b0>
   118b8:	cmp	r6, #0
   118bc:	beq	1189c <close@plt+0x8dc>
   118c0:	ldrb	r3, [r5]
   118c4:	cmp	r3, #46	; 0x2e
   118c8:	bne	11978 <close@plt+0x9b8>
   118cc:	ldr	r3, [r4, #12]
   118d0:	ldr	r2, [r4, #16]
   118d4:	cmp	r2, r3
   118d8:	bne	118e8 <close@plt+0x928>
   118dc:	mov	r1, #1
   118e0:	mov	r0, r4
   118e4:	bl	123d8 <_obstack_newchunk@@Base>
   118e8:	ldr	r3, [r4, #12]
   118ec:	add	r2, r3, #1
   118f0:	str	r2, [r4, #12]
   118f4:	mov	r2, #42	; 0x2a
   118f8:	strb	r2, [r3]
   118fc:	mov	r0, r5
   11900:	bl	1152c <close@plt+0x56c>
   11904:	ldr	r3, [r4, #12]
   11908:	ldr	r2, [r4, #16]
   1190c:	cmp	r2, r3
   11910:	bne	11920 <close@plt+0x960>
   11914:	mov	r1, #1
   11918:	mov	r0, r4
   1191c:	bl	123d8 <_obstack_newchunk@@Base>
   11920:	ldr	r3, [r4, #12]
   11924:	mov	r0, r9
   11928:	add	r2, r3, #1
   1192c:	str	r2, [r4, #12]
   11930:	mov	r2, #61	; 0x3d
   11934:	strb	r2, [r3]
   11938:	bl	1152c <close@plt+0x56c>
   1193c:	ldr	r3, [r4, #12]
   11940:	ldr	r2, [r4, #16]
   11944:	cmp	r2, r3
   11948:	bne	11958 <close@plt+0x998>
   1194c:	mov	r1, #1
   11950:	mov	r0, r4
   11954:	bl	123d8 <_obstack_newchunk@@Base>
   11958:	ldr	r3, [r4, #12]
   1195c:	add	r2, r3, #1
   11960:	str	r2, [r4, #12]
   11964:	mov	r2, #58	; 0x3a
   11968:	strb	r2, [r3]
   1196c:	b	1189c <close@plt+0x8dc>
   11970:	mov	r6, #1
   11974:	b	118c0 <close@plt+0x900>
   11978:	cmp	r3, #42	; 0x2a
   1197c:	beq	118fc <close@plt+0x93c>
   11980:	ldr	r1, [pc, #368]	; 11af8 <close@plt+0xb38>
   11984:	mov	r0, r5
   11988:	bl	11dd0 <close@plt+0xe10>
   1198c:	cmp	r0, #0
   11990:	beq	1189c <close@plt+0x8dc>
   11994:	ldr	r1, [pc, #352]	; 11afc <close@plt+0xb3c>
   11998:	mov	r0, r5
   1199c:	bl	11dd0 <close@plt+0xe10>
   119a0:	cmp	r0, #0
   119a4:	beq	1189c <close@plt+0x8dc>
   119a8:	ldr	r1, [pc, #336]	; 11b00 <close@plt+0xb40>
   119ac:	mov	r0, r5
   119b0:	bl	11dd0 <close@plt+0xe10>
   119b4:	cmp	r0, #0
   119b8:	ldrne	r2, [pc, #324]	; 11b04 <close@plt+0xb44>
   119bc:	movne	sl, #0
   119c0:	beq	1189c <close@plt+0x8dc>
   119c4:	ldr	r3, [r2], #4
   119c8:	cmp	r3, #0
   119cc:	bne	11a38 <close@plt+0xa78>
   119d0:	cmp	r6, #3
   119d4:	beq	1189c <close@plt+0x8dc>
   119d8:	mov	r0, r3
   119dc:	mov	r2, #5
   119e0:	ldr	r1, [pc, #288]	; 11b08 <close@plt+0xb48>
   119e4:	str	r3, [sp, #12]
   119e8:	bl	10de0 <dcgettext@plt>
   119ec:	ldr	r3, [sp, #8]
   119f0:	mov	sl, r0
   119f4:	cmp	r3, #0
   119f8:	beq	11a5c <close@plt+0xa9c>
   119fc:	mov	r2, r3
   11a00:	ldr	r3, [sp, #12]
   11a04:	mov	r1, #3
   11a08:	mov	r0, r3
   11a0c:	bl	13a5c <_obstack_memory_used@@Base+0x14e4>
   11a10:	mov	r1, #0
   11a14:	mov	r3, r0
   11a18:	str	fp, [sp]
   11a1c:	mov	r2, sl
   11a20:	mov	r0, r1
   11a24:	str	r5, [sp, #4]
   11a28:	bl	10e58 <error@plt>
   11a2c:	mov	r3, #0
   11a30:	str	r3, [sp, #12]
   11a34:	b	1189c <close@plt+0x8dc>
   11a38:	mov	r1, r3
   11a3c:	mov	r0, r5
   11a40:	str	r2, [sp, #20]
   11a44:	bl	11dd0 <close@plt+0xe10>
   11a48:	cmp	r0, #0
   11a4c:	beq	11a70 <close@plt+0xab0>
   11a50:	add	sl, sl, #1
   11a54:	ldr	r2, [sp, #20]
   11a58:	b	119c4 <close@plt+0xa04>
   11a5c:	mov	r2, #5
   11a60:	ldr	r1, [pc, #164]	; 11b0c <close@plt+0xb4c>
   11a64:	ldr	r0, [sp, #8]
   11a68:	bl	10de0 <dcgettext@plt>
   11a6c:	b	11a10 <close@plt+0xa50>
   11a70:	ldr	r3, [r4, #12]
   11a74:	ldr	r2, [r4, #16]
   11a78:	cmp	r2, r3
   11a7c:	bne	11a8c <close@plt+0xacc>
   11a80:	mov	r1, #1
   11a84:	mov	r0, r4
   11a88:	bl	123d8 <_obstack_newchunk@@Base>
   11a8c:	ldr	r3, [pc, #112]	; 11b04 <close@plt+0xb44>
   11a90:	add	sl, r3, sl, lsl #2
   11a94:	ldr	r3, [r4, #12]
   11a98:	ldr	sl, [sl, #152]	; 0x98
   11a9c:	add	r2, r3, #1
   11aa0:	str	r2, [r4, #12]
   11aa4:	ldrb	r2, [sl]
   11aa8:	strb	r2, [r3]
   11aac:	ldr	r3, [r4, #12]
   11ab0:	ldr	r2, [r4, #16]
   11ab4:	cmp	r2, r3
   11ab8:	bne	11ac8 <close@plt+0xb08>
   11abc:	mov	r1, #1
   11ac0:	mov	r0, r4
   11ac4:	bl	123d8 <_obstack_newchunk@@Base>
   11ac8:	ldr	r3, [r4, #12]
   11acc:	add	r2, r3, #1
   11ad0:	str	r2, [r4, #12]
   11ad4:	ldrb	r2, [sl, #1]
   11ad8:	strb	r2, [r3]
   11adc:	b	11904 <close@plt+0x944>
   11ae0:	ldrdeq	r5, [r1], -fp
   11ae4:	ldrdeq	r5, [r1], -r6
   11ae8:	andeq	r4, r1, r0, lsl #22
   11aec:	andeq	r7, r2, ip, asr r1
   11af0:	andeq	r5, r1, r0, ror #23
   11af4:	ldrdeq	r5, [r1], -r6
   11af8:	andeq	r5, r1, ip, lsl #24
   11afc:	andeq	r5, r1, r4, lsl ip
   11b00:	andeq	r5, r1, sl, lsl ip
   11b04:	andeq	r4, r1, r8, lsl r9
   11b08:	andeq	r5, r1, r3, lsr #24
   11b0c:	andeq	r5, r1, r3, asr #24
   11b10:	subs	r5, r0, #0
   11b14:	push	{r7, lr}
   11b18:	sub	sp, sp, #56	; 0x38
   11b1c:	ldr	r4, [pc, #472]	; 11cfc <close@plt+0xd3c>
   11b20:	beq	11b58 <close@plt+0xb98>
   11b24:	mov	r2, #5
   11b28:	mov	r0, #0
   11b2c:	ldr	r3, [pc, #460]	; 11d00 <close@plt+0xd40>
   11b30:	ldr	r1, [pc, #460]	; 11d04 <close@plt+0xd44>
   11b34:	ldr	r6, [r3]
   11b38:	bl	10de0 <dcgettext@plt>
   11b3c:	mov	r2, r0
   11b40:	mov	r1, #1
   11b44:	ldr	r3, [r4]
   11b48:	mov	r0, r6
   11b4c:	bl	10f3c <__fprintf_chk@plt>
   11b50:	mov	r0, r5
   11b54:	bl	10ee8 <exit@plt>
   11b58:	mov	r2, #5
   11b5c:	ldr	r1, [pc, #420]	; 11d08 <close@plt+0xd48>
   11b60:	mov	r6, sp
   11b64:	bl	10de0 <dcgettext@plt>
   11b68:	ldr	r2, [r4]
   11b6c:	mov	r1, r0
   11b70:	mov	r0, #1
   11b74:	bl	10f24 <__printf_chk@plt>
   11b78:	ldr	r4, [pc, #396]	; 11d0c <close@plt+0xd4c>
   11b7c:	mov	r2, #5
   11b80:	mov	r0, r5
   11b84:	ldr	r1, [pc, #388]	; 11d10 <close@plt+0xd50>
   11b88:	bl	10de0 <dcgettext@plt>
   11b8c:	ldr	r7, [pc, #384]	; 11d14 <close@plt+0xd54>
   11b90:	ldr	r1, [r4]
   11b94:	bl	10d68 <fputs_unlocked@plt>
   11b98:	mov	r2, #5
   11b9c:	ldr	r1, [pc, #372]	; 11d18 <close@plt+0xd58>
   11ba0:	mov	r0, r5
   11ba4:	bl	10de0 <dcgettext@plt>
   11ba8:	ldr	r1, [r4]
   11bac:	bl	10d68 <fputs_unlocked@plt>
   11bb0:	mov	r2, #5
   11bb4:	ldr	r1, [pc, #352]	; 11d1c <close@plt+0xd5c>
   11bb8:	mov	r0, r5
   11bbc:	bl	10de0 <dcgettext@plt>
   11bc0:	ldr	r1, [r4]
   11bc4:	bl	10d68 <fputs_unlocked@plt>
   11bc8:	mov	r2, #5
   11bcc:	ldr	r1, [pc, #332]	; 11d20 <close@plt+0xd60>
   11bd0:	mov	r0, r5
   11bd4:	bl	10de0 <dcgettext@plt>
   11bd8:	ldr	r1, [r4]
   11bdc:	bl	10d68 <fputs_unlocked@plt>
   11be0:	ldr	lr, [pc, #316]	; 11d24 <close@plt+0xd64>
   11be4:	mov	ip, sp
   11be8:	ldm	lr!, {r0, r1, r2, r3}
   11bec:	stmia	ip!, {r0, r1, r2, r3}
   11bf0:	ldm	lr!, {r0, r1, r2, r3}
   11bf4:	stmia	ip!, {r0, r1, r2, r3}
   11bf8:	ldm	lr!, {r0, r1, r2, r3}
   11bfc:	stmia	ip!, {r0, r1, r2, r3}
   11c00:	ldm	lr, {r0, r1}
   11c04:	stm	ip, {r0, r1}
   11c08:	ldr	r1, [r6]
   11c0c:	cmp	r1, #0
   11c10:	bne	11cb4 <close@plt+0xcf4>
   11c14:	ldr	r6, [r6, #4]
   11c18:	mov	r2, #5
   11c1c:	mov	r0, #0
   11c20:	ldr	r7, [pc, #236]	; 11d14 <close@plt+0xd54>
   11c24:	ldr	r1, [pc, #252]	; 11d28 <close@plt+0xd68>
   11c28:	cmp	r6, #0
   11c2c:	moveq	r6, r7
   11c30:	bl	10de0 <dcgettext@plt>
   11c34:	mov	r1, r0
   11c38:	ldr	r3, [pc, #236]	; 11d2c <close@plt+0xd6c>
   11c3c:	mov	r0, #1
   11c40:	ldr	r2, [pc, #232]	; 11d30 <close@plt+0xd70>
   11c44:	bl	10f24 <__printf_chk@plt>
   11c48:	mov	r1, #0
   11c4c:	mov	r0, #5
   11c50:	bl	10f60 <setlocale@plt>
   11c54:	cmp	r0, #0
   11c58:	bne	11ccc <close@plt+0xd0c>
   11c5c:	mov	r2, #5
   11c60:	ldr	r1, [pc, #204]	; 11d34 <close@plt+0xd74>
   11c64:	mov	r0, #0
   11c68:	bl	10de0 <dcgettext@plt>
   11c6c:	mov	r1, r0
   11c70:	ldr	r3, [pc, #156]	; 11d14 <close@plt+0xd54>
   11c74:	mov	r0, #1
   11c78:	ldr	r2, [pc, #172]	; 11d2c <close@plt+0xd6c>
   11c7c:	bl	10f24 <__printf_chk@plt>
   11c80:	mov	r2, #5
   11c84:	ldr	r1, [pc, #172]	; 11d38 <close@plt+0xd78>
   11c88:	mov	r0, #0
   11c8c:	bl	10de0 <dcgettext@plt>
   11c90:	ldr	r2, [pc, #164]	; 11d3c <close@plt+0xd7c>
   11c94:	cmp	r6, r7
   11c98:	mov	r1, r0
   11c9c:	mov	r0, #1
   11ca0:	ldr	r3, [pc, #152]	; 11d40 <close@plt+0xd80>
   11ca4:	moveq	r3, r2
   11ca8:	mov	r2, r6
   11cac:	bl	10f24 <__printf_chk@plt>
   11cb0:	b	11b50 <close@plt+0xb90>
   11cb4:	mov	r0, r7
   11cb8:	bl	10d74 <strcmp@plt>
   11cbc:	cmp	r0, #0
   11cc0:	beq	11c14 <close@plt+0xc54>
   11cc4:	add	r6, r6, #8
   11cc8:	b	11c08 <close@plt+0xc48>
   11ccc:	mov	r2, #3
   11cd0:	ldr	r1, [pc, #108]	; 11d44 <close@plt+0xd84>
   11cd4:	bl	10fa8 <strncmp@plt>
   11cd8:	cmp	r0, #0
   11cdc:	beq	11c5c <close@plt+0xc9c>
   11ce0:	mov	r2, #5
   11ce4:	ldr	r1, [pc, #92]	; 11d48 <close@plt+0xd88>
   11ce8:	mov	r0, #0
   11cec:	bl	10de0 <dcgettext@plt>
   11cf0:	ldr	r1, [r4]
   11cf4:	bl	10d68 <fputs_unlocked@plt>
   11cf8:	b	11c5c <close@plt+0xc9c>
   11cfc:	muleq	r2, r0, r1
   11d00:	andeq	r7, r2, r8, asr #2
   11d04:	andeq	r5, r1, r8, asr ip
   11d08:	andeq	r5, r1, pc, ror ip
   11d0c:	andeq	r7, r2, r4, asr r1
   11d10:	muleq	r1, sp, ip
   11d14:	andeq	r5, r1, lr, asr #24
   11d18:	andeq	r5, r1, pc, lsr #27
   11d1c:	ldrdeq	r5, [r1], -ip
   11d20:	andeq	r5, r1, r2, lsl lr
   11d24:	andeq	r4, r1, r8, asr #20
   11d28:	strdeq	r5, [r1], -r0
   11d2c:	andeq	r5, r1, r7, lsl #30
   11d30:	andeq	r5, r1, pc, lsr #30
   11d34:	andeq	r5, r1, r8, lsl #31
   11d38:	andeq	r5, r1, r3, lsr #31
   11d3c:	andeq	r6, r1, lr, asr #2
   11d40:	ldrdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   11d44:	andeq	r5, r1, sp, lsr pc
   11d48:	andeq	r5, r1, r1, asr #30
   11d4c:	mov	r3, r0
   11d50:	mov	r2, r3
   11d54:	mov	r0, r3
   11d58:	ldrb	r1, [r2], #1
   11d5c:	cmp	r1, #47	; 0x2f
   11d60:	beq	11d6c <close@plt+0xdac>
   11d64:	mov	r2, #0
   11d68:	b	11d88 <close@plt+0xdc8>
   11d6c:	mov	r3, r2
   11d70:	b	11d50 <close@plt+0xd90>
   11d74:	cmp	r1, #47	; 0x2f
   11d78:	moveq	r2, #1
   11d7c:	beq	11d88 <close@plt+0xdc8>
   11d80:	cmp	r2, #0
   11d84:	bne	11d9c <close@plt+0xddc>
   11d88:	mov	ip, r3
   11d8c:	ldrb	r1, [r3], #1
   11d90:	cmp	r1, #0
   11d94:	bne	11d74 <close@plt+0xdb4>
   11d98:	bx	lr
   11d9c:	mov	r0, ip
   11da0:	b	11d64 <close@plt+0xda4>
   11da4:	push	{r4, lr}
   11da8:	mov	r4, r0
   11dac:	bl	10ef4 <strlen@plt>
   11db0:	cmp	r0, #1
   11db4:	popls	{r4, pc}
   11db8:	sub	r3, r0, #1
   11dbc:	ldrb	r2, [r4, r3]
   11dc0:	cmp	r2, #47	; 0x2f
   11dc4:	popne	{r4, pc}
   11dc8:	mov	r0, r3
   11dcc:	b	11db0 <close@plt+0xdf0>
   11dd0:	cmp	r0, r1
   11dd4:	beq	11e14 <close@plt+0xe54>
   11dd8:	push	{r4, r5, r6, lr}
   11ddc:	sub	r5, r0, #1
   11de0:	sub	r4, r1, #1
   11de4:	ldrb	r0, [r5, #1]!
   11de8:	bl	14648 <_obstack_memory_used@@Base+0x20d0>
   11dec:	uxtb	r6, r0
   11df0:	ldrb	r0, [r4, #1]!
   11df4:	bl	14648 <_obstack_memory_used@@Base+0x20d0>
   11df8:	cmp	r6, #0
   11dfc:	uxtb	r0, r0
   11e00:	beq	11e0c <close@plt+0xe4c>
   11e04:	cmp	r6, r0
   11e08:	beq	11de4 <close@plt+0xe24>
   11e0c:	sub	r0, r6, r0
   11e10:	pop	{r4, r5, r6, pc}
   11e14:	mov	r0, #0
   11e18:	bx	lr
   11e1c:	ldr	r3, [pc, #4]	; 11e28 <close@plt+0xe68>
   11e20:	str	r0, [r3]
   11e24:	bx	lr
   11e28:	andeq	r7, r2, r8, lsl #3
   11e2c:	ldr	r3, [pc, #4]	; 11e38 <close@plt+0xe78>
   11e30:	strb	r0, [r3, #4]
   11e34:	bx	lr
   11e38:	andeq	r7, r2, r8, lsl #3
   11e3c:	ldr	r3, [pc, #176]	; 11ef4 <close@plt+0xf34>
   11e40:	push	{r0, r1, r4, r5, r6, lr}
   11e44:	ldr	r0, [r3]
   11e48:	bl	14668 <_obstack_memory_used@@Base+0x20f0>
   11e4c:	cmp	r0, #0
   11e50:	beq	11ed8 <close@plt+0xf18>
   11e54:	ldr	r4, [pc, #156]	; 11ef8 <close@plt+0xf38>
   11e58:	bl	10f00 <__errno_location@plt>
   11e5c:	mov	r5, r0
   11e60:	ldrb	r6, [r4, #4]
   11e64:	cmp	r6, #0
   11e68:	beq	11e78 <close@plt+0xeb8>
   11e6c:	ldr	r3, [r0]
   11e70:	cmp	r3, #32
   11e74:	beq	11ed8 <close@plt+0xf18>
   11e78:	mov	r2, #5
   11e7c:	ldr	r1, [pc, #120]	; 11efc <close@plt+0xf3c>
   11e80:	mov	r0, #0
   11e84:	bl	10de0 <dcgettext@plt>
   11e88:	mov	r6, r0
   11e8c:	ldr	r0, [r4]
   11e90:	cmp	r0, #0
   11e94:	beq	11ec4 <close@plt+0xf04>
   11e98:	ldr	r4, [r5]
   11e9c:	bl	13a4c <_obstack_memory_used@@Base+0x14d4>
   11ea0:	mov	r3, r0
   11ea4:	ldr	r2, [pc, #84]	; 11f00 <close@plt+0xf40>
   11ea8:	mov	r0, #0
   11eac:	str	r6, [sp]
   11eb0:	mov	r1, r4
   11eb4:	bl	10e58 <error@plt>
   11eb8:	ldr	r3, [pc, #68]	; 11f04 <close@plt+0xf44>
   11ebc:	ldr	r0, [r3]
   11ec0:	bl	10d98 <_exit@plt>
   11ec4:	mov	r3, r6
   11ec8:	ldr	r2, [pc, #56]	; 11f08 <close@plt+0xf48>
   11ecc:	ldr	r1, [r5]
   11ed0:	bl	10e58 <error@plt>
   11ed4:	b	11eb8 <close@plt+0xef8>
   11ed8:	ldr	r3, [pc, #44]	; 11f0c <close@plt+0xf4c>
   11edc:	ldr	r0, [r3]
   11ee0:	bl	14668 <_obstack_memory_used@@Base+0x20f0>
   11ee4:	cmp	r0, #0
   11ee8:	bne	11eb8 <close@plt+0xef8>
   11eec:	add	sp, sp, #8
   11ef0:	pop	{r4, r5, r6, pc}
   11ef4:	andeq	r7, r2, r4, asr r1
   11ef8:	andeq	r7, r2, r8, lsl #3
   11efc:	strdeq	r6, [r1], -lr
   11f00:	andeq	r6, r1, sl, lsl #6
   11f04:	andeq	r7, r2, ip, ror #1
   11f08:	andeq	r6, r1, lr, lsl #6
   11f0c:	andeq	r7, r2, r8, asr #2
   11f10:	push	{r0, r1, r2, r4, r5, lr}
   11f14:	mov	r4, r0
   11f18:	bl	10f30 <fileno@plt>
   11f1c:	cmp	r0, #0
   11f20:	mov	r0, r4
   11f24:	bge	11f34 <close@plt+0xf74>
   11f28:	add	sp, sp, #12
   11f2c:	pop	{r4, r5, lr}
   11f30:	b	10f48 <fclose@plt>
   11f34:	bl	10eac <__freading@plt>
   11f38:	cmp	r0, #0
   11f3c:	bne	11f78 <close@plt+0xfb8>
   11f40:	mov	r0, r4
   11f44:	bl	11fb8 <close@plt+0xff8>
   11f48:	cmp	r0, #0
   11f4c:	bne	11fac <close@plt+0xfec>
   11f50:	mov	r5, #0
   11f54:	mov	r0, r4
   11f58:	bl	10f48 <fclose@plt>
   11f5c:	cmp	r5, #0
   11f60:	beq	11f70 <close@plt+0xfb0>
   11f64:	bl	10f00 <__errno_location@plt>
   11f68:	str	r5, [r0]
   11f6c:	mvn	r0, #0
   11f70:	add	sp, sp, #12
   11f74:	pop	{r4, r5, pc}
   11f78:	mov	r0, r4
   11f7c:	bl	10f30 <fileno@plt>
   11f80:	mov	r3, #1
   11f84:	mov	r2, #0
   11f88:	str	r3, [sp]
   11f8c:	mov	r3, #0
   11f90:	bl	10e1c <lseek64@plt>
   11f94:	mvn	r3, #0
   11f98:	mvn	r2, #0
   11f9c:	cmp	r1, r3
   11fa0:	cmpeq	r0, r2
   11fa4:	bne	11f40 <close@plt+0xf80>
   11fa8:	b	11f50 <close@plt+0xf90>
   11fac:	bl	10f00 <__errno_location@plt>
   11fb0:	ldr	r5, [r0]
   11fb4:	b	11f54 <close@plt+0xf94>
   11fb8:	push	{r0, r1, r4, lr}
   11fbc:	subs	r4, r0, #0
   11fc0:	bne	11fd4 <close@plt+0x1014>
   11fc4:	mov	r0, r4
   11fc8:	add	sp, sp, #8
   11fcc:	pop	{r4, lr}
   11fd0:	b	10d80 <fflush@plt>
   11fd4:	bl	10eac <__freading@plt>
   11fd8:	cmp	r0, #0
   11fdc:	beq	11fc4 <close@plt+0x1004>
   11fe0:	ldr	r3, [r4]
   11fe4:	tst	r3, #256	; 0x100
   11fe8:	beq	11fc4 <close@plt+0x1004>
   11fec:	mov	r3, #1
   11ff0:	mov	r2, #0
   11ff4:	mov	r0, r4
   11ff8:	str	r3, [sp]
   11ffc:	mov	r3, #0
   12000:	bl	121e0 <close@plt+0x1220>
   12004:	b	11fc4 <close@plt+0x1004>
   12008:	push	{r0, r1, r2, r4, r5, lr}
   1200c:	mov	r5, r0
   12010:	bl	10f00 <__errno_location@plt>
   12014:	mov	r4, r0
   12018:	mov	r0, r5
   1201c:	ldr	r3, [r4]
   12020:	str	r3, [sp]
   12024:	str	r3, [sp, #4]
   12028:	mov	r3, #0
   1202c:	str	r3, [r4]
   12030:	bl	10d8c <free@plt>
   12034:	ldr	r3, [r4]
   12038:	add	r2, sp, #8
   1203c:	clz	r3, r3
   12040:	lsr	r3, r3, #5
   12044:	add	r3, r2, r3, lsl #2
   12048:	ldr	r3, [r3, #-8]
   1204c:	str	r3, [r4]
   12050:	add	sp, sp, #12
   12054:	pop	{r4, r5, pc}
   12058:	push	{r4, lr}
   1205c:	mov	r1, #0
   12060:	mov	r4, r0
   12064:	ldr	r0, [pc, #48]	; 1209c <close@plt+0x10dc>
   12068:	bl	10e70 <open64@plt>
   1206c:	cmp	r4, r0
   12070:	beq	12094 <close@plt+0x10d4>
   12074:	cmp	r0, #0
   12078:	blt	1208c <close@plt+0x10cc>
   1207c:	bl	10fc0 <close@plt>
   12080:	bl	10f00 <__errno_location@plt>
   12084:	mov	r3, #9
   12088:	str	r3, [r0]
   1208c:	mov	r0, #0
   12090:	pop	{r4, pc}
   12094:	mov	r0, #1
   12098:	pop	{r4, pc}
   1209c:	andeq	r6, r1, r1, lsl r3
   120a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120a4:	mov	r9, r0
   120a8:	mov	r0, r2
   120ac:	mov	sl, r1
   120b0:	mov	r8, r2
   120b4:	bl	10f30 <fileno@plt>
   120b8:	cmp	r0, #1
   120bc:	beq	12130 <close@plt+0x1170>
   120c0:	cmp	r0, #2
   120c4:	beq	12128 <close@plt+0x1168>
   120c8:	cmp	r0, #0
   120cc:	beq	1213c <close@plt+0x117c>
   120d0:	mov	r1, #2
   120d4:	mov	r0, r1
   120d8:	bl	10dec <dup2@plt>
   120dc:	subs	r4, r0, #2
   120e0:	movne	r4, #1
   120e4:	mov	r1, #1
   120e8:	mov	r0, r1
   120ec:	bl	10dec <dup2@plt>
   120f0:	subs	r7, r0, #1
   120f4:	movne	r7, #1
   120f8:	mov	r1, #0
   120fc:	mov	r0, r1
   12100:	bl	10dec <dup2@plt>
   12104:	subs	r6, r0, #0
   12108:	beq	12160 <close@plt+0x11a0>
   1210c:	mov	r0, #0
   12110:	bl	12058 <close@plt+0x1098>
   12114:	subs	r5, r0, #0
   12118:	mov	r6, r0
   1211c:	bne	12160 <close@plt+0x11a0>
   12120:	mov	r6, #1
   12124:	b	12194 <close@plt+0x11d4>
   12128:	mov	r4, #0
   1212c:	b	120e4 <close@plt+0x1124>
   12130:	mov	r4, #0
   12134:	mov	r7, r4
   12138:	b	120f8 <close@plt+0x1138>
   1213c:	mov	r4, r0
   12140:	mov	r7, r0
   12144:	mov	r6, r0
   12148:	mov	r2, r8
   1214c:	mov	r1, sl
   12150:	mov	r0, r9
   12154:	bl	10ec4 <freopen64@plt>
   12158:	mov	r5, r0
   1215c:	b	12194 <close@plt+0x11d4>
   12160:	cmp	r7, #0
   12164:	bne	12184 <close@plt+0x11c4>
   12168:	cmp	r4, #0
   1216c:	beq	12148 <close@plt+0x1188>
   12170:	mov	r0, #2
   12174:	bl	12058 <close@plt+0x1098>
   12178:	subs	r5, r0, #0
   1217c:	bne	12148 <close@plt+0x1188>
   12180:	b	12194 <close@plt+0x11d4>
   12184:	mov	r0, #1
   12188:	bl	12058 <close@plt+0x1098>
   1218c:	subs	r5, r0, #0
   12190:	bne	12168 <close@plt+0x11a8>
   12194:	bl	10f00 <__errno_location@plt>
   12198:	cmp	r4, #0
   1219c:	mov	r8, r0
   121a0:	ldr	r9, [r0]
   121a4:	beq	121b0 <close@plt+0x11f0>
   121a8:	mov	r0, #2
   121ac:	bl	10fc0 <close@plt>
   121b0:	cmp	r7, #0
   121b4:	beq	121c0 <close@plt+0x1200>
   121b8:	mov	r0, #1
   121bc:	bl	10fc0 <close@plt>
   121c0:	cmp	r6, #0
   121c4:	beq	121d0 <close@plt+0x1210>
   121c8:	mov	r0, #0
   121cc:	bl	10fc0 <close@plt>
   121d0:	cmp	r5, #0
   121d4:	mov	r0, r5
   121d8:	streq	r9, [r8]
   121dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121e0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   121e4:	mov	r4, r0
   121e8:	ldmib	r0, {ip, lr}
   121ec:	ldr	r8, [sp, #32]
   121f0:	cmp	lr, ip
   121f4:	bne	12264 <close@plt+0x12a4>
   121f8:	ldr	ip, [r0, #16]
   121fc:	ldr	lr, [r0, #20]
   12200:	cmp	lr, ip
   12204:	bne	12264 <close@plt+0x12a4>
   12208:	ldr	r5, [r0, #36]	; 0x24
   1220c:	cmp	r5, #0
   12210:	bne	12264 <close@plt+0x12a4>
   12214:	mov	r6, r2
   12218:	mov	r7, r3
   1221c:	bl	10f30 <fileno@plt>
   12220:	mov	r2, r6
   12224:	mov	r3, r7
   12228:	str	r8, [sp]
   1222c:	bl	10e1c <lseek64@plt>
   12230:	mvn	r3, #0
   12234:	mvn	r2, #0
   12238:	cmp	r1, r3
   1223c:	cmpeq	r0, r2
   12240:	mvneq	r0, #0
   12244:	beq	1225c <close@plt+0x129c>
   12248:	ldr	r3, [r4]
   1224c:	strd	r0, [r4, #80]	; 0x50
   12250:	mov	r0, r5
   12254:	bic	r3, r3, #16
   12258:	str	r3, [r4]
   1225c:	add	sp, sp, #8
   12260:	pop	{r4, r5, r6, r7, r8, pc}
   12264:	mov	r0, r4
   12268:	str	r8, [sp, #32]
   1226c:	add	sp, sp, #8
   12270:	pop	{r4, r5, r6, r7, r8, lr}
   12274:	b	10f54 <fseeko64@plt>
   12278:	ldr	r3, [pc, #52]	; 122b4 <close@plt+0x12f4>
   1227c:	mov	r2, #5
   12280:	mov	r0, #0
   12284:	push	{r4, lr}
   12288:	ldr	r1, [pc, #40]	; 122b8 <close@plt+0x12f8>
   1228c:	ldr	r4, [r3]
   12290:	bl	10de0 <dcgettext@plt>
   12294:	mov	r3, r0
   12298:	ldr	r2, [pc, #28]	; 122bc <close@plt+0x12fc>
   1229c:	mov	r1, #1
   122a0:	mov	r0, r4
   122a4:	bl	10f3c <__fprintf_chk@plt>
   122a8:	ldr	r3, [pc, #16]	; 122c0 <close@plt+0x1300>
   122ac:	ldr	r0, [r3]
   122b0:	bl	10ee8 <exit@plt>
   122b4:	andeq	r7, r2, r8, asr #2
   122b8:	andeq	r6, r1, fp, lsl r3
   122bc:	andeq	r6, r1, r5, lsr #8
   122c0:	andeq	r7, r2, ip, ror #1
   122c4:	mov	r3, r0
   122c8:	mov	r0, r1
   122cc:	ldrb	ip, [r3, #40]	; 0x28
   122d0:	ldr	r2, [r3, #28]
   122d4:	tst	ip, #1
   122d8:	beq	122e4 <close@plt+0x1324>
   122dc:	ldr	r0, [r3, #36]	; 0x24
   122e0:	bx	r2
   122e4:	bx	r2
   122e8:	mov	r3, r0
   122ec:	mov	r0, r1
   122f0:	ldrb	ip, [r3, #40]	; 0x28
   122f4:	ldr	r2, [r3, #32]
   122f8:	tst	ip, #1
   122fc:	beq	12308 <close@plt+0x1348>
   12300:	ldr	r0, [r3, #36]	; 0x24
   12304:	bx	r2
   12308:	bx	r2
   1230c:	push	{r4, r5, r6, lr}
   12310:	subs	r5, r2, #0
   12314:	movw	r3, #4072	; 0xfe8
   12318:	moveq	r5, #8
   1231c:	cmp	r1, #0
   12320:	moveq	r1, r3
   12324:	sub	r6, r5, #1
   12328:	mov	r4, r0
   1232c:	str	r1, [r0]
   12330:	str	r6, [r0, #24]
   12334:	bl	122c4 <close@plt+0x1304>
   12338:	cmp	r0, #0
   1233c:	str	r0, [r4, #4]
   12340:	bne	12350 <close@plt+0x1390>
   12344:	ldr	r3, [pc, #72]	; 12394 <close@plt+0x13d4>
   12348:	ldr	r3, [r3]
   1234c:	blx	r3
   12350:	add	r3, r0, #8
   12354:	rsb	r2, r5, #0
   12358:	add	r3, r3, r6
   1235c:	and	r2, r2, r3
   12360:	ldr	r3, [r4]
   12364:	str	r2, [r4, #8]
   12368:	str	r2, [r4, #12]
   1236c:	add	r3, r0, r3
   12370:	str	r3, [r0]
   12374:	str	r3, [r4, #16]
   12378:	mov	r3, #0
   1237c:	str	r3, [r0, #4]
   12380:	mov	r0, #1
   12384:	ldrb	r3, [r4, #40]	; 0x28
   12388:	bic	r3, r3, #6
   1238c:	strb	r3, [r4, #40]	; 0x28
   12390:	pop	{r4, r5, r6, pc}
   12394:	strdeq	r7, [r2], -r0

00012398 <_obstack_begin@@Base>:
   12398:	str	r3, [r0, #28]
   1239c:	ldr	r3, [sp]
   123a0:	str	r3, [r0, #32]
   123a4:	ldrb	r3, [r0, #40]	; 0x28
   123a8:	bfc	r3, #0, #1
   123ac:	strb	r3, [r0, #40]	; 0x28
   123b0:	b	1230c <close@plt+0x134c>

000123b4 <_obstack_begin_1@@Base>:
   123b4:	str	r3, [r0, #28]
   123b8:	ldr	r3, [sp]
   123bc:	str	r3, [r0, #32]
   123c0:	ldr	r3, [sp, #4]
   123c4:	str	r3, [r0, #36]	; 0x24
   123c8:	ldrb	r3, [r0, #40]	; 0x28
   123cc:	orr	r3, r3, #1
   123d0:	strb	r3, [r0, #40]	; 0x28
   123d4:	b	1230c <close@plt+0x134c>

000123d8 <_obstack_newchunk@@Base>:
   123d8:	push	{r4, r5, r6, r7, r8, lr}
   123dc:	ldr	r7, [r0, #4]
   123e0:	ldr	r3, [r0, #8]
   123e4:	ldr	r5, [r0, #12]
   123e8:	sub	r6, r5, r3
   123ec:	ldr	r3, [r0, #24]
   123f0:	adds	r1, r6, r1
   123f4:	movcs	ip, #1
   123f8:	movcc	ip, #0
   123fc:	eor	ip, ip, #1
   12400:	adds	r3, r3, r1
   12404:	ldr	r1, [r0]
   12408:	add	r5, r3, r6, lsr #3
   1240c:	movcs	r2, #1
   12410:	movcc	r2, #0
   12414:	add	r5, r5, #100	; 0x64
   12418:	cmp	r3, r1
   1241c:	movcc	r3, r1
   12420:	cmp	r3, r5
   12424:	movcs	r5, r3
   12428:	eor	r3, r2, #1
   1242c:	tst	ip, r3
   12430:	bne	12440 <_obstack_newchunk@@Base+0x68>
   12434:	ldr	r3, [pc, #164]	; 124e0 <_obstack_newchunk@@Base+0x108>
   12438:	ldr	r3, [r3]
   1243c:	blx	r3
   12440:	mov	r1, r5
   12444:	mov	r4, r0
   12448:	bl	122c4 <close@plt+0x1304>
   1244c:	subs	r8, r0, #0
   12450:	beq	12434 <_obstack_newchunk@@Base+0x5c>
   12454:	add	r5, r8, r5
   12458:	mov	r3, r8
   1245c:	str	r8, [r4, #4]
   12460:	ldr	r1, [r4, #8]
   12464:	mov	r2, r6
   12468:	str	r7, [r8, #4]
   1246c:	str	r5, [r4, #16]
   12470:	str	r5, [r3], #8
   12474:	ldr	r5, [r4, #24]
   12478:	add	r3, r3, r5
   1247c:	bic	r5, r3, r5
   12480:	mov	r0, r5
   12484:	bl	10da4 <memcpy@plt>
   12488:	ldrb	r3, [r4, #40]	; 0x28
   1248c:	tst	r3, #2
   12490:	bne	124c4 <_obstack_newchunk@@Base+0xec>
   12494:	ldr	r2, [r4, #24]
   12498:	add	r3, r7, #8
   1249c:	add	r3, r3, r2
   124a0:	bic	r3, r3, r2
   124a4:	ldr	r2, [r4, #8]
   124a8:	cmp	r2, r3
   124ac:	bne	124c4 <_obstack_newchunk@@Base+0xec>
   124b0:	ldr	r3, [r7, #4]
   124b4:	mov	r1, r7
   124b8:	mov	r0, r4
   124bc:	str	r3, [r8, #4]
   124c0:	bl	122e8 <close@plt+0x1328>
   124c4:	ldrb	r3, [r4, #40]	; 0x28
   124c8:	str	r5, [r4, #8]
   124cc:	add	r5, r5, r6
   124d0:	str	r5, [r4, #12]
   124d4:	bfc	r3, #1, #1
   124d8:	strb	r3, [r4, #40]	; 0x28
   124dc:	pop	{r4, r5, r6, r7, r8, pc}
   124e0:	strdeq	r7, [r2], -r0

000124e4 <_obstack_allocated_p@@Base>:
   124e4:	ldr	r0, [r0, #4]
   124e8:	cmp	r0, #0
   124ec:	beq	12504 <_obstack_allocated_p@@Base+0x20>
   124f0:	cmp	r0, r1
   124f4:	bcs	124e4 <_obstack_allocated_p@@Base>
   124f8:	ldr	r3, [r0]
   124fc:	cmp	r3, r1
   12500:	bcc	124e4 <_obstack_allocated_p@@Base>
   12504:	adds	r0, r0, #0
   12508:	movne	r0, #1
   1250c:	bx	lr

00012510 <_obstack_free@@Base>:
   12510:	push	{r4, r5, r6, lr}
   12514:	mov	r5, r1
   12518:	mov	r4, r0
   1251c:	ldr	r1, [r0, #4]
   12520:	cmp	r1, #0
   12524:	beq	1256c <_obstack_free@@Base+0x5c>
   12528:	cmp	r1, r5
   1252c:	bcs	1254c <_obstack_free@@Base+0x3c>
   12530:	ldr	r3, [r1]
   12534:	cmp	r3, r5
   12538:	bcc	1254c <_obstack_free@@Base+0x3c>
   1253c:	stmib	r4, {r1, r5}
   12540:	str	r5, [r4, #12]
   12544:	str	r3, [r4, #16]
   12548:	pop	{r4, r5, r6, pc}
   1254c:	mov	r0, r4
   12550:	ldr	r6, [r1, #4]
   12554:	bl	122e8 <close@plt+0x1328>
   12558:	ldrb	r3, [r4, #40]	; 0x28
   1255c:	mov	r1, r6
   12560:	orr	r3, r3, #2
   12564:	strb	r3, [r4, #40]	; 0x28
   12568:	b	12520 <_obstack_free@@Base+0x10>
   1256c:	cmp	r5, #0
   12570:	popeq	{r4, r5, r6, pc}
   12574:	bl	10fb4 <abort@plt>

00012578 <_obstack_memory_used@@Base>:
   12578:	ldr	r3, [r0, #4]
   1257c:	mov	r0, #0
   12580:	cmp	r3, #0
   12584:	bxeq	lr
   12588:	ldr	r2, [r3]
   1258c:	sub	r2, r2, r3
   12590:	ldr	r3, [r3, #4]
   12594:	add	r0, r0, r2
   12598:	b	12580 <_obstack_memory_used@@Base+0x8>
   1259c:	push	{r4, r5, r6, lr}
   125a0:	subs	r4, r0, #0
   125a4:	bne	125bc <_obstack_memory_used@@Base+0x44>
   125a8:	ldr	r3, [pc, #124]	; 1262c <_obstack_memory_used@@Base+0xb4>
   125ac:	ldr	r0, [pc, #124]	; 12630 <_obstack_memory_used@@Base+0xb8>
   125b0:	ldr	r1, [r3]
   125b4:	bl	10f9c <fputs@plt>
   125b8:	bl	10fb4 <abort@plt>
   125bc:	mov	r1, #47	; 0x2f
   125c0:	bl	10f6c <strrchr@plt>
   125c4:	subs	r6, r0, #0
   125c8:	beq	12618 <_obstack_memory_used@@Base+0xa0>
   125cc:	add	r5, r6, #1
   125d0:	sub	r3, r5, r4
   125d4:	cmp	r3, #6
   125d8:	ble	12618 <_obstack_memory_used@@Base+0xa0>
   125dc:	mov	r2, #7
   125e0:	ldr	r1, [pc, #76]	; 12634 <_obstack_memory_used@@Base+0xbc>
   125e4:	sub	r0, r6, #6
   125e8:	bl	10fa8 <strncmp@plt>
   125ec:	cmp	r0, #0
   125f0:	bne	12618 <_obstack_memory_used@@Base+0xa0>
   125f4:	mov	r2, #3
   125f8:	ldr	r1, [pc, #56]	; 12638 <_obstack_memory_used@@Base+0xc0>
   125fc:	mov	r0, r5
   12600:	bl	10fa8 <strncmp@plt>
   12604:	cmp	r0, #0
   12608:	ldreq	r3, [pc, #44]	; 1263c <_obstack_memory_used@@Base+0xc4>
   1260c:	addeq	r4, r6, #4
   12610:	movne	r4, r5
   12614:	streq	r4, [r3]
   12618:	ldr	r3, [pc, #32]	; 12640 <_obstack_memory_used@@Base+0xc8>
   1261c:	str	r4, [r3]
   12620:	ldr	r3, [pc, #28]	; 12644 <_obstack_memory_used@@Base+0xcc>
   12624:	str	r4, [r3]
   12628:	pop	{r4, r5, r6, pc}
   1262c:	andeq	r7, r2, r8, asr #2
   12630:	andeq	r6, r1, ip, lsr #6
   12634:	andeq	r6, r1, r4, ror #6
   12638:	andeq	r6, r1, ip, ror #6
   1263c:	andeq	r7, r2, r8, lsr r1
   12640:	muleq	r2, r0, r1
   12644:	andeq	r7, r2, ip, lsr r1
   12648:	push	{r4, lr}
   1264c:	mov	r2, #48	; 0x30
   12650:	mov	r4, r1
   12654:	mov	r1, #0
   12658:	bl	10f18 <memset@plt>
   1265c:	cmp	r4, #10
   12660:	bne	12668 <_obstack_memory_used@@Base+0xf0>
   12664:	bl	10fb4 <abort@plt>
   12668:	str	r4, [r0]
   1266c:	pop	{r4, pc}
   12670:	push	{r4, r5, r6, lr}
   12674:	mov	r2, #5
   12678:	mov	r6, r0
   1267c:	mov	r5, r1
   12680:	mov	r1, r0
   12684:	mov	r0, #0
   12688:	bl	10de0 <dcgettext@plt>
   1268c:	cmp	r6, r0
   12690:	mov	r4, r0
   12694:	bne	12704 <_obstack_memory_used@@Base+0x18c>
   12698:	bl	14700 <_obstack_memory_used@@Base+0x2188>
   1269c:	ldrb	r3, [r0]
   126a0:	bic	r3, r3, #32
   126a4:	cmp	r3, #85	; 0x55
   126a8:	bne	1270c <_obstack_memory_used@@Base+0x194>
   126ac:	ldrb	r3, [r0, #1]
   126b0:	bic	r3, r3, #32
   126b4:	cmp	r3, #84	; 0x54
   126b8:	bne	1277c <_obstack_memory_used@@Base+0x204>
   126bc:	ldrb	r3, [r0, #2]
   126c0:	bic	r3, r3, #32
   126c4:	cmp	r3, #70	; 0x46
   126c8:	bne	1277c <_obstack_memory_used@@Base+0x204>
   126cc:	ldrb	r3, [r0, #3]
   126d0:	cmp	r3, #45	; 0x2d
   126d4:	bne	1277c <_obstack_memory_used@@Base+0x204>
   126d8:	ldrb	r3, [r0, #4]
   126dc:	cmp	r3, #56	; 0x38
   126e0:	bne	1277c <_obstack_memory_used@@Base+0x204>
   126e4:	ldrb	r3, [r0, #5]
   126e8:	cmp	r3, #0
   126ec:	bne	1277c <_obstack_memory_used@@Base+0x204>
   126f0:	ldrb	r2, [r4]
   126f4:	ldr	r3, [pc, #144]	; 1278c <_obstack_memory_used@@Base+0x214>
   126f8:	ldr	r4, [pc, #144]	; 12790 <_obstack_memory_used@@Base+0x218>
   126fc:	cmp	r2, #96	; 0x60
   12700:	movne	r4, r3
   12704:	mov	r0, r4
   12708:	pop	{r4, r5, r6, pc}
   1270c:	cmp	r3, #71	; 0x47
   12710:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12714:	ldrb	r3, [r0, #1]
   12718:	bic	r3, r3, #32
   1271c:	cmp	r3, #66	; 0x42
   12720:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12724:	ldrb	r3, [r0, #2]
   12728:	cmp	r3, #49	; 0x31
   1272c:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12730:	ldrb	r3, [r0, #3]
   12734:	cmp	r3, #56	; 0x38
   12738:	bne	1277c <_obstack_memory_used@@Base+0x204>
   1273c:	ldrb	r3, [r0, #4]
   12740:	cmp	r3, #48	; 0x30
   12744:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12748:	ldrb	r3, [r0, #5]
   1274c:	cmp	r3, #51	; 0x33
   12750:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12754:	ldrb	r3, [r0, #6]
   12758:	cmp	r3, #48	; 0x30
   1275c:	bne	1277c <_obstack_memory_used@@Base+0x204>
   12760:	ldrb	r3, [r0, #7]
   12764:	cmp	r3, #0
   12768:	bne	1277c <_obstack_memory_used@@Base+0x204>
   1276c:	ldrb	r2, [r4]
   12770:	ldr	r3, [pc, #28]	; 12794 <_obstack_memory_used@@Base+0x21c>
   12774:	ldr	r4, [pc, #28]	; 12798 <_obstack_memory_used@@Base+0x220>
   12778:	b	126fc <_obstack_memory_used@@Base+0x184>
   1277c:	ldr	r4, [pc, #24]	; 1279c <_obstack_memory_used@@Base+0x224>
   12780:	cmp	r5, #9
   12784:	ldr	r3, [pc, #20]	; 127a0 <_obstack_memory_used@@Base+0x228>
   12788:	b	12700 <_obstack_memory_used@@Base+0x188>
   1278c:	andeq	r6, r1, r6, asr #7
   12790:	ldrdeq	r6, [r1], -r1
   12794:	andeq	r6, r1, sl, asr #7
   12798:	andeq	r6, r1, sp, asr #7
   1279c:	andeq	r6, r1, r4, asr #7
   127a0:	andeq	r6, r1, r8
   127a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127a8:	sub	sp, sp, #108	; 0x6c
   127ac:	mov	r8, r0
   127b0:	mov	r5, r1
   127b4:	mov	r6, #0
   127b8:	str	r3, [sp, #40]	; 0x28
   127bc:	str	r2, [sp, #48]	; 0x30
   127c0:	ldr	sl, [sp, #144]	; 0x90
   127c4:	bl	10e28 <__ctype_get_mb_cur_max@plt>
   127c8:	ldr	r3, [sp, #148]	; 0x94
   127cc:	str	r6, [sp, #24]
   127d0:	str	r6, [sp, #32]
   127d4:	str	r6, [sp, #44]	; 0x2c
   127d8:	str	r6, [sp, #52]	; 0x34
   127dc:	ubfx	r7, r3, #1, #1
   127e0:	mov	r3, #1
   127e4:	str	r6, [sp, #60]	; 0x3c
   127e8:	str	r3, [sp, #72]	; 0x48
   127ec:	str	r0, [sp, #76]	; 0x4c
   127f0:	cmp	sl, #10
   127f4:	ldrls	pc, [pc, sl, lsl #2]
   127f8:	b	12a3c <_obstack_memory_used@@Base+0x4c4>
   127fc:	andeq	r2, r1, r8, lsr #16
   12800:	andeq	r2, r1, r4, asr sl
   12804:	ldrdeq	r2, [r1], -r8
   12808:	strdeq	r2, [r1], -r0
   1280c:	andeq	r2, r1, r0, asr #19
   12810:	andeq	r2, r1, r8, lsl r9
   12814:	strdeq	r2, [r1], -r8
   12818:	andeq	r2, r1, r0, asr #20
   1281c:	andeq	r2, r1, r8, asr #18
   12820:	andeq	r2, r1, r8, asr #18
   12824:	andeq	r2, r1, r8, asr #18
   12828:	mov	r4, sl
   1282c:	mov	r7, #0
   12830:	mov	r9, r5
   12834:	mov	r3, #0
   12838:	str	r6, [sp, #68]	; 0x44
   1283c:	str	r3, [sp, #28]
   12840:	ldr	r3, [sp, #40]	; 0x28
   12844:	cmn	r3, #1
   12848:	bne	133e8 <_obstack_memory_used@@Base+0xe70>
   1284c:	ldr	r2, [sp, #28]
   12850:	ldr	r3, [sp, #48]	; 0x30
   12854:	ldrb	r3, [r3, r2]
   12858:	adds	r3, r3, #0
   1285c:	movne	r3, #1
   12860:	str	r3, [sp, #36]	; 0x24
   12864:	ldr	r3, [sp, #36]	; 0x24
   12868:	cmp	r3, #0
   1286c:	bne	12a78 <_obstack_memory_used@@Base+0x500>
   12870:	sub	r3, sl, #2
   12874:	cmp	r4, #0
   12878:	clz	r3, r3
   1287c:	movne	r2, #0
   12880:	lsr	r3, r3, #5
   12884:	andeq	r2, r3, r7
   12888:	cmp	r2, #0
   1288c:	bne	12c3c <_obstack_memory_used@@Base+0x6c4>
   12890:	eor	r7, r7, #1
   12894:	ands	r3, r3, r7
   12898:	beq	13460 <_obstack_memory_used@@Base+0xee8>
   1289c:	ldr	r2, [sp, #68]	; 0x44
   128a0:	cmp	r2, #0
   128a4:	beq	13428 <_obstack_memory_used@@Base+0xeb0>
   128a8:	ldr	r3, [sp, #72]	; 0x48
   128ac:	cmp	r3, #0
   128b0:	beq	133fc <_obstack_memory_used@@Base+0xe84>
   128b4:	ldr	r2, [sp, #48]	; 0x30
   128b8:	ldr	r3, [sp, #160]	; 0xa0
   128bc:	ldr	r1, [sp, #60]	; 0x3c
   128c0:	str	r3, [sp, #16]
   128c4:	ldr	r3, [sp, #156]	; 0x9c
   128c8:	str	r3, [sp, #12]
   128cc:	ldr	r3, [sp, #152]	; 0x98
   128d0:	str	r3, [sp, #8]
   128d4:	ldr	r3, [sp, #148]	; 0x94
   128d8:	str	r3, [sp, #4]
   128dc:	mov	r3, #5
   128e0:	str	r3, [sp]
   128e4:	ldr	r3, [sp, #40]	; 0x28
   128e8:	mov	r0, r8
   128ec:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   128f0:	mov	r4, r0
   128f4:	b	13454 <_obstack_memory_used@@Base+0xedc>
   128f8:	ldr	r3, [pc, #2948]	; 13484 <_obstack_memory_used@@Base+0xf0c>
   128fc:	mov	r7, #1
   12900:	mov	r4, #0
   12904:	mov	sl, #5
   12908:	str	r7, [sp, #24]
   1290c:	str	r7, [sp, #32]
   12910:	str	r3, [sp, #44]	; 0x2c
   12914:	b	12830 <_obstack_memory_used@@Base+0x2b8>
   12918:	cmp	r7, #0
   1291c:	bne	12a60 <_obstack_memory_used@@Base+0x4e8>
   12920:	cmp	r5, #0
   12924:	mov	r4, #1
   12928:	movne	r3, #34	; 0x22
   1292c:	strbne	r3, [r8]
   12930:	mov	r3, #1
   12934:	str	r3, [sp, #24]
   12938:	str	r3, [sp, #32]
   1293c:	ldr	r3, [pc, #2880]	; 13484 <_obstack_memory_used@@Base+0xf0c>
   12940:	str	r3, [sp, #44]	; 0x2c
   12944:	b	12830 <_obstack_memory_used@@Base+0x2b8>
   12948:	cmp	sl, #10
   1294c:	beq	12970 <_obstack_memory_used@@Base+0x3f8>
   12950:	mov	r1, sl
   12954:	ldr	r0, [pc, #2860]	; 13488 <_obstack_memory_used@@Base+0xf10>
   12958:	bl	12670 <_obstack_memory_used@@Base+0xf8>
   1295c:	mov	r1, sl
   12960:	str	r0, [sp, #156]	; 0x9c
   12964:	ldr	r0, [pc, #2848]	; 1348c <_obstack_memory_used@@Base+0xf14>
   12968:	bl	12670 <_obstack_memory_used@@Base+0xf8>
   1296c:	str	r0, [sp, #160]	; 0xa0
   12970:	cmp	r7, #0
   12974:	moveq	r4, r7
   12978:	beq	12990 <_obstack_memory_used@@Base+0x418>
   1297c:	mov	r4, #0
   12980:	b	129a0 <_obstack_memory_used@@Base+0x428>
   12984:	cmp	r5, r4
   12988:	strbhi	r3, [r8, r4]
   1298c:	add	r4, r4, #1
   12990:	ldr	r3, [sp, #156]	; 0x9c
   12994:	ldrb	r3, [r3, r4]
   12998:	cmp	r3, #0
   1299c:	bne	12984 <_obstack_memory_used@@Base+0x40c>
   129a0:	ldr	r0, [sp, #160]	; 0xa0
   129a4:	bl	10ef4 <strlen@plt>
   129a8:	ldr	r3, [sp, #160]	; 0xa0
   129ac:	str	r0, [sp, #32]
   129b0:	str	r3, [sp, #44]	; 0x2c
   129b4:	mov	r3, #1
   129b8:	str	r3, [sp, #24]
   129bc:	b	12830 <_obstack_memory_used@@Base+0x2b8>
   129c0:	mov	r3, #1
   129c4:	cmp	r7, #0
   129c8:	streq	r3, [sp, #24]
   129cc:	beq	12a10 <_obstack_memory_used@@Base+0x498>
   129d0:	str	r3, [sp, #32]
   129d4:	b	129fc <_obstack_memory_used@@Base+0x484>
   129d8:	cmp	r7, #0
   129dc:	beq	12a10 <_obstack_memory_used@@Base+0x498>
   129e0:	mov	r3, #1
   129e4:	str	r3, [sp, #32]
   129e8:	ldr	r3, [pc, #2716]	; 1348c <_obstack_memory_used@@Base+0xf14>
   129ec:	b	12a70 <_obstack_memory_used@@Base+0x4f8>
   129f0:	mov	r7, #1
   129f4:	str	r7, [sp, #24]
   129f8:	str	r7, [sp, #32]
   129fc:	ldr	r3, [pc, #2696]	; 1348c <_obstack_memory_used@@Base+0xf14>
   12a00:	mov	r4, #0
   12a04:	str	r3, [sp, #44]	; 0x2c
   12a08:	mov	sl, #2
   12a0c:	b	12830 <_obstack_memory_used@@Base+0x2b8>
   12a10:	cmp	r5, #0
   12a14:	movne	r3, #39	; 0x27
   12a18:	movne	r7, #0
   12a1c:	strbne	r3, [r8]
   12a20:	moveq	r7, r5
   12a24:	mov	r3, #1
   12a28:	mov	r4, #1
   12a2c:	str	r3, [sp, #32]
   12a30:	ldr	r3, [pc, #2644]	; 1348c <_obstack_memory_used@@Base+0xf14>
   12a34:	str	r3, [sp, #44]	; 0x2c
   12a38:	b	12a08 <_obstack_memory_used@@Base+0x490>
   12a3c:	bl	10fb4 <abort@plt>
   12a40:	mov	r3, #1
   12a44:	mov	r7, #0
   12a48:	str	r3, [sp, #24]
   12a4c:	mov	r4, #0
   12a50:	b	12830 <_obstack_memory_used@@Base+0x2b8>
   12a54:	mov	r7, #1
   12a58:	str	sl, [sp, #32]
   12a5c:	b	129fc <_obstack_memory_used@@Base+0x484>
   12a60:	mov	r3, #1
   12a64:	str	r7, [sp, #24]
   12a68:	str	r3, [sp, #32]
   12a6c:	ldr	r3, [pc, #2576]	; 13484 <_obstack_memory_used@@Base+0xf0c>
   12a70:	str	r3, [sp, #44]	; 0x2c
   12a74:	b	12a4c <_obstack_memory_used@@Base+0x4d4>
   12a78:	ldr	fp, [sp, #24]
   12a7c:	ldr	r3, [sp, #32]
   12a80:	cmp	sl, #2
   12a84:	moveq	fp, #0
   12a88:	andne	fp, fp, #1
   12a8c:	adds	r5, r3, #0
   12a90:	movne	r5, #1
   12a94:	ands	r3, fp, r5
   12a98:	str	r3, [sp, #64]	; 0x40
   12a9c:	beq	12b6c <_obstack_memory_used@@Base+0x5f4>
   12aa0:	ldr	r3, [sp, #28]
   12aa4:	ldr	r2, [sp, #32]
   12aa8:	cmp	r2, #1
   12aac:	add	r6, r3, r2
   12ab0:	mov	r3, r2
   12ab4:	ldr	r2, [sp, #40]	; 0x28
   12ab8:	movls	r3, #0
   12abc:	movhi	r3, #1
   12ac0:	cmn	r2, #1
   12ac4:	movne	r3, #0
   12ac8:	cmp	r3, #0
   12acc:	beq	12adc <_obstack_memory_used@@Base+0x564>
   12ad0:	ldr	r0, [sp, #48]	; 0x30
   12ad4:	bl	10ef4 <strlen@plt>
   12ad8:	str	r0, [sp, #40]	; 0x28
   12adc:	ldr	r3, [sp, #40]	; 0x28
   12ae0:	cmp	r6, r3
   12ae4:	bhi	12b64 <_obstack_memory_used@@Base+0x5ec>
   12ae8:	ldr	r0, [sp, #28]
   12aec:	ldr	r2, [sp, #32]
   12af0:	ldr	r3, [sp, #48]	; 0x30
   12af4:	ldr	r1, [sp, #44]	; 0x2c
   12af8:	add	r0, r3, r0
   12afc:	bl	10dc8 <memcmp@plt>
   12b00:	cmp	r0, #0
   12b04:	bne	12b64 <_obstack_memory_used@@Base+0x5ec>
   12b08:	cmp	r7, #0
   12b0c:	beq	12b6c <_obstack_memory_used@@Base+0x5f4>
   12b10:	str	r7, [sp, #24]
   12b14:	ldr	r3, [sp, #24]
   12b18:	mov	r1, r9
   12b1c:	ldr	r2, [sp, #48]	; 0x30
   12b20:	cmp	sl, #2
   12b24:	movne	r3, #0
   12b28:	andeq	r3, r3, #1
   12b2c:	cmp	r3, #0
   12b30:	ldr	r3, [sp, #160]	; 0xa0
   12b34:	movne	sl, #4
   12b38:	str	sl, [sp]
   12b3c:	str	r3, [sp, #16]
   12b40:	ldr	r3, [sp, #156]	; 0x9c
   12b44:	str	r3, [sp, #12]
   12b48:	mov	r3, #0
   12b4c:	str	r3, [sp, #8]
   12b50:	ldr	r3, [sp, #148]	; 0x94
   12b54:	bic	r3, r3, #2
   12b58:	str	r3, [sp, #4]
   12b5c:	ldr	r3, [sp, #40]	; 0x28
   12b60:	b	128e8 <_obstack_memory_used@@Base+0x370>
   12b64:	mov	r3, #0
   12b68:	str	r3, [sp, #64]	; 0x40
   12b6c:	ldr	r2, [sp, #28]
   12b70:	ldr	r3, [sp, #48]	; 0x30
   12b74:	add	r3, r3, r2
   12b78:	str	r3, [sp, #80]	; 0x50
   12b7c:	ldr	r3, [sp, #48]	; 0x30
   12b80:	ldrb	r6, [r3, r2]
   12b84:	cmp	r6, #58	; 0x3a
   12b88:	bhi	12cec <_obstack_memory_used@@Base+0x774>
   12b8c:	cmp	r6, #43	; 0x2b
   12b90:	bcs	12eac <_obstack_memory_used@@Base+0x934>
   12b94:	cmp	r6, #32
   12b98:	beq	12f00 <_obstack_memory_used@@Base+0x988>
   12b9c:	bhi	12c44 <_obstack_memory_used@@Base+0x6cc>
   12ba0:	cmp	r6, #9
   12ba4:	beq	130a8 <_obstack_memory_used@@Base+0xb30>
   12ba8:	bhi	12c08 <_obstack_memory_used@@Base+0x690>
   12bac:	cmp	r6, #7
   12bb0:	beq	130b8 <_obstack_memory_used@@Base+0xb40>
   12bb4:	bhi	130d4 <_obstack_memory_used@@Base+0xb5c>
   12bb8:	cmp	r6, #0
   12bbc:	beq	12f1c <_obstack_memory_used@@Base+0x9a4>
   12bc0:	ldr	r3, [sp, #76]	; 0x4c
   12bc4:	cmp	r3, #1
   12bc8:	bne	13120 <_obstack_memory_used@@Base+0xba8>
   12bcc:	bl	10edc <__ctype_b_loc@plt>
   12bd0:	ldr	r2, [r0]
   12bd4:	sxth	r3, r6
   12bd8:	lsl	r3, r3, #1
   12bdc:	ldrh	r5, [r2, r3]
   12be0:	ldr	r3, [sp, #76]	; 0x4c
   12be4:	ubfx	r5, r5, #14, #1
   12be8:	str	r3, [sp, #56]	; 0x38
   12bec:	ldr	r3, [sp, #24]
   12bf0:	eor	fp, r5, #1
   12bf4:	and	fp, fp, r3
   12bf8:	ands	fp, fp, #255	; 0xff
   12bfc:	beq	12ddc <_obstack_memory_used@@Base+0x864>
   12c00:	mov	r5, #0
   12c04:	b	131cc <_obstack_memory_used@@Base+0xc54>
   12c08:	cmp	r6, #11
   12c0c:	beq	130dc <_obstack_memory_used@@Base+0xb64>
   12c10:	bcc	130b0 <_obstack_memory_used@@Base+0xb38>
   12c14:	cmp	r6, #12
   12c18:	beq	130e4 <_obstack_memory_used@@Base+0xb6c>
   12c1c:	cmp	r6, #13
   12c20:	moveq	r3, #114	; 0x72
   12c24:	bne	12bc0 <_obstack_memory_used@@Base+0x648>
   12c28:	cmp	sl, #2
   12c2c:	movne	r2, #0
   12c30:	andeq	r2, r7, #1
   12c34:	cmp	r2, #0
   12c38:	beq	130bc <_obstack_memory_used@@Base+0xb44>
   12c3c:	mov	sl, #2
   12c40:	b	12b14 <_obstack_memory_used@@Base+0x59c>
   12c44:	cmp	r6, #37	; 0x25
   12c48:	beq	12eac <_obstack_memory_used@@Base+0x934>
   12c4c:	bhi	12c60 <_obstack_memory_used@@Base+0x6e8>
   12c50:	cmp	r6, #35	; 0x23
   12c54:	beq	12ef4 <_obstack_memory_used@@Base+0x97c>
   12c58:	mov	r5, #0
   12c5c:	b	12f04 <_obstack_memory_used@@Base+0x98c>
   12c60:	cmp	r6, #39	; 0x27
   12c64:	bne	12c58 <_obstack_memory_used@@Base+0x6e0>
   12c68:	cmp	sl, #2
   12c6c:	ldrne	r5, [sp, #36]	; 0x24
   12c70:	movne	r3, r5
   12c74:	strne	r3, [sp, #68]	; 0x44
   12c78:	bne	12ff8 <_obstack_memory_used@@Base+0xa80>
   12c7c:	cmp	r7, #0
   12c80:	bne	12b14 <_obstack_memory_used@@Base+0x59c>
   12c84:	ldr	r3, [sp, #60]	; 0x3c
   12c88:	cmp	r9, #0
   12c8c:	clz	r3, r3
   12c90:	lsr	r3, r3, #5
   12c94:	moveq	r3, #0
   12c98:	cmp	r3, #0
   12c9c:	strne	r9, [sp, #60]	; 0x3c
   12ca0:	movne	r9, #0
   12ca4:	bne	12cb4 <_obstack_memory_used@@Base+0x73c>
   12ca8:	cmp	r9, r4
   12cac:	movhi	r3, #39	; 0x27
   12cb0:	strbhi	r3, [r8, r4]
   12cb4:	add	r3, r4, #1
   12cb8:	ldr	r5, [sp, #36]	; 0x24
   12cbc:	mov	fp, #0
   12cc0:	cmp	r3, r9
   12cc4:	movcc	r2, #92	; 0x5c
   12cc8:	str	fp, [sp, #52]	; 0x34
   12ccc:	strbcc	r2, [r8, r3]
   12cd0:	add	r3, r4, #2
   12cd4:	add	r4, r4, #3
   12cd8:	cmp	r3, r9
   12cdc:	str	r5, [sp, #68]	; 0x44
   12ce0:	movcc	r2, #39	; 0x27
   12ce4:	strbcc	r2, [r8, r3]
   12ce8:	b	12ddc <_obstack_memory_used@@Base+0x864>
   12cec:	cmp	r6, #94	; 0x5e
   12cf0:	beq	12c58 <_obstack_memory_used@@Base+0x6e0>
   12cf4:	bhi	12eb4 <_obstack_memory_used@@Base+0x93c>
   12cf8:	cmp	r6, #90	; 0x5a
   12cfc:	bhi	12ea0 <_obstack_memory_used@@Base+0x928>
   12d00:	cmp	r6, #65	; 0x41
   12d04:	bcs	12eac <_obstack_memory_used@@Base+0x934>
   12d08:	cmp	r6, #62	; 0x3e
   12d0c:	bls	12c58 <_obstack_memory_used@@Base+0x6e0>
   12d10:	cmp	r6, #63	; 0x3f
   12d14:	bne	12bc0 <_obstack_memory_used@@Base+0x648>
   12d18:	cmp	sl, #2
   12d1c:	beq	13000 <_obstack_memory_used@@Base+0xa88>
   12d20:	cmp	sl, #5
   12d24:	movne	fp, #0
   12d28:	bne	133d0 <_obstack_memory_used@@Base+0xe58>
   12d2c:	ldr	r3, [sp, #148]	; 0x94
   12d30:	tst	r3, #4
   12d34:	beq	13008 <_obstack_memory_used@@Base+0xa90>
   12d38:	ldr	r3, [sp, #28]
   12d3c:	add	r2, r3, #2
   12d40:	ldr	r3, [sp, #40]	; 0x28
   12d44:	cmp	r2, r3
   12d48:	bcs	13008 <_obstack_memory_used@@Base+0xa90>
   12d4c:	ldr	r1, [sp, #28]
   12d50:	ldr	r3, [sp, #48]	; 0x30
   12d54:	add	r3, r3, r1
   12d58:	ldrb	r1, [r3, #1]
   12d5c:	cmp	r1, #63	; 0x3f
   12d60:	bne	13008 <_obstack_memory_used@@Base+0xa90>
   12d64:	ldr	r3, [sp, #48]	; 0x30
   12d68:	ldrb	r6, [r3, r2]
   12d6c:	sub	r3, r6, #33	; 0x21
   12d70:	uxtb	r3, r3
   12d74:	cmp	r3, #29
   12d78:	bhi	133d8 <_obstack_memory_used@@Base+0xe60>
   12d7c:	ldr	r0, [pc, #1804]	; 13490 <_obstack_memory_used@@Base+0xf18>
   12d80:	mov	r5, #1
   12d84:	ands	r5, r0, r5, lsl r3
   12d88:	beq	133e0 <_obstack_memory_used@@Base+0xe68>
   12d8c:	cmp	r7, #0
   12d90:	bne	12b14 <_obstack_memory_used@@Base+0x59c>
   12d94:	cmp	r9, r4
   12d98:	add	r3, r4, #1
   12d9c:	str	r2, [sp, #28]
   12da0:	mov	r5, #0
   12da4:	strbhi	r1, [r8, r4]
   12da8:	cmp	r9, r3
   12dac:	mov	fp, r5
   12db0:	movhi	r1, #34	; 0x22
   12db4:	strbhi	r1, [r8, r3]
   12db8:	add	r3, r4, #2
   12dbc:	cmp	r9, r3
   12dc0:	movhi	r1, #34	; 0x22
   12dc4:	strbhi	r1, [r8, r3]
   12dc8:	add	r3, r4, #3
   12dcc:	add	r4, r4, #4
   12dd0:	cmp	r9, r3
   12dd4:	movhi	r1, #63	; 0x3f
   12dd8:	strbhi	r1, [r8, r3]
   12ddc:	ldr	r3, [sp, #24]
   12de0:	eor	r3, r3, #1
   12de4:	cmp	sl, #2
   12de8:	orreq	r3, r3, #1
   12dec:	eor	r3, r3, #1
   12df0:	orr	r3, r7, r3
   12df4:	tst	r3, #255	; 0xff
   12df8:	beq	12e24 <_obstack_memory_used@@Base+0x8ac>
   12dfc:	ldr	r3, [sp, #152]	; 0x98
   12e00:	cmp	r3, #0
   12e04:	beq	12e24 <_obstack_memory_used@@Base+0x8ac>
   12e08:	ldr	r1, [sp, #152]	; 0x98
   12e0c:	ubfx	r2, r6, #5, #8
   12e10:	and	r3, r6, #31
   12e14:	ldr	r2, [r1, r2, lsl #2]
   12e18:	lsr	r3, r2, r3
   12e1c:	tst	r3, #1
   12e20:	bne	12e30 <_obstack_memory_used@@Base+0x8b8>
   12e24:	ldr	r3, [sp, #64]	; 0x40
   12e28:	cmp	r3, #0
   12e2c:	beq	13028 <_obstack_memory_used@@Base+0xab0>
   12e30:	sub	r3, sl, #2
   12e34:	cmp	r7, #0
   12e38:	clz	r3, r3
   12e3c:	lsr	r3, r3, #5
   12e40:	bne	12b14 <_obstack_memory_used@@Base+0x59c>
   12e44:	ldr	r2, [sp, #52]	; 0x34
   12e48:	eor	r2, r2, #1
   12e4c:	ands	r3, r3, r2
   12e50:	beq	12e88 <_obstack_memory_used@@Base+0x910>
   12e54:	cmp	r9, r4
   12e58:	str	r3, [sp, #52]	; 0x34
   12e5c:	movhi	r2, #39	; 0x27
   12e60:	strbhi	r2, [r8, r4]
   12e64:	add	r2, r4, #1
   12e68:	cmp	r9, r2
   12e6c:	movhi	r1, #36	; 0x24
   12e70:	strbhi	r1, [r8, r2]
   12e74:	add	r2, r4, #2
   12e78:	add	r4, r4, #3
   12e7c:	cmp	r9, r2
   12e80:	movhi	r1, #39	; 0x27
   12e84:	strbhi	r1, [r8, r2]
   12e88:	cmp	r9, r4
   12e8c:	ldr	fp, [sp, #36]	; 0x24
   12e90:	movhi	r3, #92	; 0x5c
   12e94:	strbhi	r3, [r8, r4]
   12e98:	add	r4, r4, #1
   12e9c:	b	13028 <_obstack_memory_used@@Base+0xab0>
   12ea0:	cmp	r6, #92	; 0x5c
   12ea4:	beq	13010 <_obstack_memory_used@@Base+0xa98>
   12ea8:	bls	12c58 <_obstack_memory_used@@Base+0x6e0>
   12eac:	ldr	r5, [sp, #36]	; 0x24
   12eb0:	b	12ff8 <_obstack_memory_used@@Base+0xa80>
   12eb4:	cmp	r6, #122	; 0x7a
   12eb8:	bhi	12ed8 <_obstack_memory_used@@Base+0x960>
   12ebc:	cmp	r6, #97	; 0x61
   12ec0:	bcs	12eac <_obstack_memory_used@@Base+0x934>
   12ec4:	cmp	r6, #95	; 0x5f
   12ec8:	beq	12eac <_obstack_memory_used@@Base+0x934>
   12ecc:	cmp	r6, #96	; 0x60
   12ed0:	bne	12bc0 <_obstack_memory_used@@Base+0x648>
   12ed4:	b	12c58 <_obstack_memory_used@@Base+0x6e0>
   12ed8:	cmp	r6, #124	; 0x7c
   12edc:	beq	12c58 <_obstack_memory_used@@Base+0x6e0>
   12ee0:	bcc	130ec <_obstack_memory_used@@Base+0xb74>
   12ee4:	cmp	r6, #125	; 0x7d
   12ee8:	beq	130ec <_obstack_memory_used@@Base+0xb74>
   12eec:	cmp	r6, #126	; 0x7e
   12ef0:	bne	12bc0 <_obstack_memory_used@@Base+0x648>
   12ef4:	ldr	r3, [sp, #28]
   12ef8:	cmp	r3, #0
   12efc:	bne	13008 <_obstack_memory_used@@Base+0xa90>
   12f00:	ldr	r5, [sp, #36]	; 0x24
   12f04:	cmp	sl, #2
   12f08:	movne	fp, #0
   12f0c:	andeq	fp, r7, #1
   12f10:	cmp	fp, #0
   12f14:	beq	12ddc <_obstack_memory_used@@Base+0x864>
   12f18:	b	12c3c <_obstack_memory_used@@Base+0x6c4>
   12f1c:	ldr	r3, [sp, #24]
   12f20:	cmp	r3, #0
   12f24:	beq	12fec <_obstack_memory_used@@Base+0xa74>
   12f28:	sub	r2, sl, #2
   12f2c:	cmp	r7, #0
   12f30:	clz	r2, r2
   12f34:	lsr	r2, r2, #5
   12f38:	bne	12b10 <_obstack_memory_used@@Base+0x598>
   12f3c:	ldr	r3, [sp, #52]	; 0x34
   12f40:	eor	r3, r3, #1
   12f44:	ands	r2, r2, r3
   12f48:	moveq	r3, r4
   12f4c:	beq	12f84 <_obstack_memory_used@@Base+0xa0c>
   12f50:	cmp	r9, r4
   12f54:	str	r2, [sp, #52]	; 0x34
   12f58:	movhi	r3, #39	; 0x27
   12f5c:	strbhi	r3, [r8, r4]
   12f60:	add	r3, r4, #1
   12f64:	cmp	r9, r3
   12f68:	movhi	r1, #36	; 0x24
   12f6c:	strbhi	r1, [r8, r3]
   12f70:	add	r3, r4, #2
   12f74:	cmp	r9, r3
   12f78:	movhi	r1, #39	; 0x27
   12f7c:	strbhi	r1, [r8, r3]
   12f80:	add	r3, r4, #3
   12f84:	cmp	r9, r3
   12f88:	add	r4, r3, #1
   12f8c:	movhi	r2, #92	; 0x5c
   12f90:	strbhi	r2, [r8, r3]
   12f94:	cmp	fp, #0
   12f98:	beq	133c0 <_obstack_memory_used@@Base+0xe48>
   12f9c:	ldr	r2, [sp, #28]
   12fa0:	ldr	r1, [sp, #40]	; 0x28
   12fa4:	add	r2, r2, #1
   12fa8:	cmp	r2, r1
   12fac:	bcs	12fe4 <_obstack_memory_used@@Base+0xa6c>
   12fb0:	ldr	r1, [sp, #48]	; 0x30
   12fb4:	mov	r6, #48	; 0x30
   12fb8:	ldrb	r2, [r1, r2]
   12fbc:	sub	r2, r2, #48	; 0x30
   12fc0:	cmp	r2, #9
   12fc4:	bhi	133d0 <_obstack_memory_used@@Base+0xe58>
   12fc8:	cmp	r9, r4
   12fcc:	add	r2, r3, #2
   12fd0:	strbhi	r6, [r8, r4]
   12fd4:	cmp	r9, r2
   12fd8:	add	r4, r3, #3
   12fdc:	movhi	r1, #48	; 0x30
   12fe0:	strbhi	r1, [r8, r2]
   12fe4:	mov	r5, #0
   12fe8:	b	133c8 <_obstack_memory_used@@Base+0xe50>
   12fec:	ldr	r3, [sp, #148]	; 0x94
   12ff0:	ands	r5, r3, #1
   12ff4:	bne	1307c <_obstack_memory_used@@Base+0xb04>
   12ff8:	mov	fp, #0
   12ffc:	b	12ddc <_obstack_memory_used@@Base+0x864>
   13000:	cmp	r7, #0
   13004:	bne	12b14 <_obstack_memory_used@@Base+0x59c>
   13008:	mov	r5, #0
   1300c:	b	12ff8 <_obstack_memory_used@@Base+0xa80>
   13010:	cmp	sl, #2
   13014:	bne	13088 <_obstack_memory_used@@Base+0xb10>
   13018:	cmp	r7, #0
   1301c:	bne	12b14 <_obstack_memory_used@@Base+0x59c>
   13020:	mov	r5, r7
   13024:	mov	fp, r7
   13028:	ldr	r3, [sp, #52]	; 0x34
   1302c:	eor	fp, fp, #1
   13030:	tst	r3, fp
   13034:	beq	13060 <_obstack_memory_used@@Base+0xae8>
   13038:	cmp	r9, r4
   1303c:	movhi	r3, #39	; 0x27
   13040:	strbhi	r3, [r8, r4]
   13044:	add	r3, r4, #1
   13048:	add	r4, r4, #2
   1304c:	cmp	r9, r3
   13050:	movhi	r2, #39	; 0x27
   13054:	strbhi	r2, [r8, r3]
   13058:	mov	r3, #0
   1305c:	str	r3, [sp, #52]	; 0x34
   13060:	cmp	r9, r4
   13064:	ldr	r3, [sp, #72]	; 0x48
   13068:	strbhi	r6, [r8, r4]
   1306c:	cmp	r5, #0
   13070:	add	r4, r4, #1
   13074:	moveq	r3, #0
   13078:	str	r3, [sp, #72]	; 0x48
   1307c:	ldr	r3, [sp, #28]
   13080:	add	r3, r3, #1
   13084:	b	1283c <_obstack_memory_used@@Base+0x2c4>
   13088:	ldr	r3, [sp, #24]
   1308c:	and	r3, r3, r7
   13090:	tst	r5, r3
   13094:	moveq	r3, r6
   13098:	beq	12c28 <_obstack_memory_used@@Base+0x6b0>
   1309c:	mov	fp, #0
   130a0:	mov	r5, fp
   130a4:	b	13028 <_obstack_memory_used@@Base+0xab0>
   130a8:	mov	r3, #116	; 0x74
   130ac:	b	12c28 <_obstack_memory_used@@Base+0x6b0>
   130b0:	mov	r3, #110	; 0x6e
   130b4:	b	12c28 <_obstack_memory_used@@Base+0x6b0>
   130b8:	mov	r3, #97	; 0x61
   130bc:	ldr	r2, [sp, #24]
   130c0:	cmp	r2, #0
   130c4:	beq	13008 <_obstack_memory_used@@Base+0xa90>
   130c8:	mov	r6, r3
   130cc:	mov	r5, #0
   130d0:	b	12e30 <_obstack_memory_used@@Base+0x8b8>
   130d4:	mov	r3, #98	; 0x62
   130d8:	b	130bc <_obstack_memory_used@@Base+0xb44>
   130dc:	mov	r3, #118	; 0x76
   130e0:	b	130bc <_obstack_memory_used@@Base+0xb44>
   130e4:	mov	r3, #102	; 0x66
   130e8:	b	130bc <_obstack_memory_used@@Base+0xb44>
   130ec:	ldr	r3, [sp, #40]	; 0x28
   130f0:	cmn	r3, #1
   130f4:	bne	13114 <_obstack_memory_used@@Base+0xb9c>
   130f8:	ldr	r3, [sp, #48]	; 0x30
   130fc:	ldrb	r3, [r3, #1]
   13100:	adds	r3, r3, #0
   13104:	movne	r3, #1
   13108:	cmp	r3, #0
   1310c:	bne	13008 <_obstack_memory_used@@Base+0xa90>
   13110:	b	12ef4 <_obstack_memory_used@@Base+0x97c>
   13114:	ldr	r3, [sp, #40]	; 0x28
   13118:	subs	r3, r3, #1
   1311c:	b	13104 <_obstack_memory_used@@Base+0xb8c>
   13120:	mov	r3, #0
   13124:	mov	r2, #0
   13128:	strd	r2, [sp, #96]	; 0x60
   1312c:	ldr	r3, [sp, #40]	; 0x28
   13130:	cmn	r3, #1
   13134:	bne	13144 <_obstack_memory_used@@Base+0xbcc>
   13138:	ldr	r0, [sp, #48]	; 0x30
   1313c:	bl	10ef4 <strlen@plt>
   13140:	str	r0, [sp, #40]	; 0x28
   13144:	ldr	r5, [sp, #36]	; 0x24
   13148:	mov	r3, #0
   1314c:	str	r3, [sp, #56]	; 0x38
   13150:	ldr	r3, [sp, #28]
   13154:	add	r0, sp, #92	; 0x5c
   13158:	ldr	r1, [sp, #40]	; 0x28
   1315c:	ldr	r2, [sp, #56]	; 0x38
   13160:	add	r2, r3, r2
   13164:	ldr	r3, [sp, #48]	; 0x30
   13168:	add	fp, r3, r2
   1316c:	sub	r2, r1, r2
   13170:	add	r3, sp, #96	; 0x60
   13174:	mov	r1, fp
   13178:	bl	14734 <_obstack_memory_used@@Base+0x21bc>
   1317c:	subs	r2, r0, #0
   13180:	beq	131c0 <_obstack_memory_used@@Base+0xc48>
   13184:	cmn	r2, #1
   13188:	beq	13394 <_obstack_memory_used@@Base+0xe1c>
   1318c:	cmn	r2, #2
   13190:	bne	13304 <_obstack_memory_used@@Base+0xd8c>
   13194:	ldr	r3, [sp, #28]
   13198:	ldr	r2, [sp, #56]	; 0x38
   1319c:	add	r3, r3, r2
   131a0:	ldr	r2, [sp, #40]	; 0x28
   131a4:	cmp	r2, r3
   131a8:	bls	13394 <_obstack_memory_used@@Base+0xe1c>
   131ac:	ldr	r2, [sp, #56]	; 0x38
   131b0:	ldr	r3, [sp, #80]	; 0x50
   131b4:	ldrb	r5, [r3, r2]
   131b8:	cmp	r5, #0
   131bc:	bne	132f4 <_obstack_memory_used@@Base+0xd7c>
   131c0:	ldr	r3, [sp, #56]	; 0x38
   131c4:	cmp	r3, #1
   131c8:	bls	12bec <_obstack_memory_used@@Base+0x674>
   131cc:	ldr	r3, [sp, #28]
   131d0:	mov	fp, #0
   131d4:	mov	ip, #92	; 0x5c
   131d8:	ldr	r2, [sp, #56]	; 0x38
   131dc:	add	r3, r3, r2
   131e0:	ldr	r2, [sp, #24]
   131e4:	str	r3, [sp, #36]	; 0x24
   131e8:	eor	r3, r5, #1
   131ec:	and	r3, r3, r2
   131f0:	mov	r2, #39	; 0x27
   131f4:	uxtb	r3, r3
   131f8:	cmp	r3, #0
   131fc:	beq	1339c <_obstack_memory_used@@Base+0xe24>
   13200:	sub	r0, sl, #2
   13204:	cmp	r7, #0
   13208:	clz	r0, r0
   1320c:	lsr	r0, r0, #5
   13210:	bne	12b10 <_obstack_memory_used@@Base+0x598>
   13214:	ldr	r1, [sp, #52]	; 0x34
   13218:	eor	r1, r1, #1
   1321c:	ands	r1, r0, r1
   13220:	beq	13250 <_obstack_memory_used@@Base+0xcd8>
   13224:	cmp	r9, r4
   13228:	add	r0, r4, #1
   1322c:	str	r1, [sp, #52]	; 0x34
   13230:	strbhi	r2, [r8, r4]
   13234:	cmp	r9, r0
   13238:	movhi	lr, #36	; 0x24
   1323c:	strbhi	lr, [r8, r0]
   13240:	add	r0, r4, #2
   13244:	add	r4, r4, #3
   13248:	cmp	r9, r0
   1324c:	strbhi	r2, [r8, r0]
   13250:	cmp	r9, r4
   13254:	add	r0, r4, #1
   13258:	mov	fp, r3
   1325c:	strbhi	ip, [r8, r4]
   13260:	cmp	r9, r0
   13264:	lsrhi	r1, r6, #6
   13268:	addhi	r1, r1, #48	; 0x30
   1326c:	strbhi	r1, [r8, r0]
   13270:	add	r0, r4, #2
   13274:	add	r4, r4, #3
   13278:	cmp	r9, r0
   1327c:	ubfxhi	r1, r6, #3, #3
   13280:	and	r6, r6, #7
   13284:	add	r6, r6, #48	; 0x30
   13288:	addhi	r1, r1, #48	; 0x30
   1328c:	strbhi	r1, [r8, r0]
   13290:	eor	r0, fp, #1
   13294:	ldr	r1, [sp, #28]
   13298:	ldr	lr, [sp, #52]	; 0x34
   1329c:	add	r1, r1, #1
   132a0:	and	r0, r0, lr
   132a4:	ldr	lr, [sp, #36]	; 0x24
   132a8:	cmp	r1, lr
   132ac:	bcs	13028 <_obstack_memory_used@@Base+0xab0>
   132b0:	cmp	r0, #0
   132b4:	beq	132d8 <_obstack_memory_used@@Base+0xd60>
   132b8:	cmp	r9, r4
   132bc:	add	r0, r4, #1
   132c0:	strbhi	r2, [r8, r4]
   132c4:	cmp	r9, r0
   132c8:	add	r4, r4, #2
   132cc:	strbhi	r2, [r8, r0]
   132d0:	mov	r0, #0
   132d4:	str	r0, [sp, #52]	; 0x34
   132d8:	ldr	r0, [sp, #48]	; 0x30
   132dc:	cmp	r9, r4
   132e0:	str	r1, [sp, #28]
   132e4:	strbhi	r6, [r8, r4]
   132e8:	add	r4, r4, #1
   132ec:	ldrb	r6, [r0, r1]
   132f0:	b	131f8 <_obstack_memory_used@@Base+0xc80>
   132f4:	ldr	r3, [sp, #56]	; 0x38
   132f8:	add	r3, r3, #1
   132fc:	str	r3, [sp, #56]	; 0x38
   13300:	b	13194 <_obstack_memory_used@@Base+0xc1c>
   13304:	cmp	sl, #2
   13308:	movne	r3, #0
   1330c:	andeq	r3, r7, #1
   13310:	cmp	r3, #0
   13314:	movne	r1, #1
   13318:	bne	13374 <_obstack_memory_used@@Base+0xdfc>
   1331c:	ldr	r0, [sp, #92]	; 0x5c
   13320:	str	r2, [sp, #84]	; 0x54
   13324:	bl	10e10 <iswprint@plt>
   13328:	ldr	r3, [sp, #56]	; 0x38
   1332c:	cmp	r0, #0
   13330:	add	r0, sp, #96	; 0x60
   13334:	moveq	r5, #0
   13338:	ldr	r2, [sp, #84]	; 0x54
   1333c:	add	r3, r3, r2
   13340:	str	r3, [sp, #56]	; 0x38
   13344:	bl	10db0 <mbsinit@plt>
   13348:	cmp	r0, #0
   1334c:	beq	13150 <_obstack_memory_used@@Base+0xbd8>
   13350:	b	131c0 <_obstack_memory_used@@Base+0xc48>
   13354:	ldrb	r3, [fp, #1]!
   13358:	cmp	r3, #94	; 0x5e
   1335c:	beq	12c3c <_obstack_memory_used@@Base+0x6c4>
   13360:	bhi	13380 <_obstack_memory_used@@Base+0xe08>
   13364:	sub	r3, r3, #91	; 0x5b
   13368:	cmp	r3, #1
   1336c:	bls	12c3c <_obstack_memory_used@@Base+0x6c4>
   13370:	add	r1, r1, #1
   13374:	cmp	r1, r2
   13378:	bne	13354 <_obstack_memory_used@@Base+0xddc>
   1337c:	b	1331c <_obstack_memory_used@@Base+0xda4>
   13380:	cmp	r3, #96	; 0x60
   13384:	beq	12c3c <_obstack_memory_used@@Base+0x6c4>
   13388:	cmp	r3, #124	; 0x7c
   1338c:	bne	13370 <_obstack_memory_used@@Base+0xdf8>
   13390:	b	12c3c <_obstack_memory_used@@Base+0x6c4>
   13394:	mov	r5, #0
   13398:	b	131c0 <_obstack_memory_used@@Base+0xc48>
   1339c:	ldr	r1, [sp, #64]	; 0x40
   133a0:	cmp	r1, #0
   133a4:	beq	13290 <_obstack_memory_used@@Base+0xd18>
   133a8:	cmp	r9, r4
   133ac:	mov	r1, #0
   133b0:	strbhi	ip, [r8, r4]
   133b4:	add	r4, r4, #1
   133b8:	str	r1, [sp, #64]	; 0x40
   133bc:	b	13290 <_obstack_memory_used@@Base+0xd18>
   133c0:	mov	r5, fp
   133c4:	ldr	fp, [sp, #24]
   133c8:	mov	r6, #48	; 0x30
   133cc:	b	12ddc <_obstack_memory_used@@Base+0x864>
   133d0:	mov	r5, #0
   133d4:	b	12ddc <_obstack_memory_used@@Base+0x864>
   133d8:	mov	r6, r1
   133dc:	b	13008 <_obstack_memory_used@@Base+0xa90>
   133e0:	mov	r6, r1
   133e4:	b	12ff8 <_obstack_memory_used@@Base+0xa80>
   133e8:	ldr	r2, [sp, #28]
   133ec:	ldr	r3, [sp, #40]	; 0x28
   133f0:	subs	r3, r3, r2
   133f4:	movne	r3, #1
   133f8:	b	12860 <_obstack_memory_used@@Base+0x2e8>
   133fc:	ldr	r3, [sp, #60]	; 0x3c
   13400:	mov	sl, #2
   13404:	ldr	r7, [sp, #72]	; 0x48
   13408:	adds	r6, r3, #0
   1340c:	mov	r5, r3
   13410:	movne	r6, #1
   13414:	cmp	r9, #0
   13418:	movne	r6, #0
   1341c:	cmp	r6, #0
   13420:	bne	127f0 <_obstack_memory_used@@Base+0x278>
   13424:	ldr	r3, [sp, #68]	; 0x44
   13428:	ldr	r2, [sp, #44]	; 0x2c
   1342c:	cmp	r2, #0
   13430:	moveq	r3, #0
   13434:	andne	r3, r3, #1
   13438:	cmp	r3, #0
   1343c:	movne	r3, r2
   13440:	subne	r3, r3, #1
   13444:	bne	13474 <_obstack_memory_used@@Base+0xefc>
   13448:	cmp	r9, r4
   1344c:	movhi	r3, #0
   13450:	strbhi	r3, [r8, r4]
   13454:	mov	r0, r4
   13458:	add	sp, sp, #108	; 0x6c
   1345c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13460:	mov	r3, r7
   13464:	b	13428 <_obstack_memory_used@@Base+0xeb0>
   13468:	cmp	r9, r4
   1346c:	strbhi	r2, [r8, r4]
   13470:	add	r4, r4, #1
   13474:	ldrb	r2, [r3, #1]!
   13478:	cmp	r2, #0
   1347c:	bne	13468 <_obstack_memory_used@@Base+0xef0>
   13480:	b	13448 <_obstack_memory_used@@Base+0xed0>
   13484:	andeq	r6, r1, r4, asr #7
   13488:	ldrdeq	r6, [r1], -r5
   1348c:	andeq	r6, r1, r8
   13490:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13498:	sub	sp, sp, #52	; 0x34
   1349c:	mov	r6, r0
   134a0:	mov	r5, r3
   134a4:	mov	r8, r1
   134a8:	mov	r9, r2
   134ac:	bl	10f00 <__errno_location@plt>
   134b0:	ldr	r3, [r0]
   134b4:	cmn	r6, #-2147483647	; 0x80000001
   134b8:	str	r0, [sp, #24]
   134bc:	ldr	r7, [pc, #368]	; 13634 <_obstack_memory_used@@Base+0x10bc>
   134c0:	str	r3, [sp, #32]
   134c4:	movne	r3, #0
   134c8:	moveq	r3, #1
   134cc:	orrs	r3, r3, r6, lsr #31
   134d0:	ldr	r4, [r7]
   134d4:	beq	134dc <_obstack_memory_used@@Base+0xf64>
   134d8:	bl	10fb4 <abort@plt>
   134dc:	ldr	r2, [r7, #4]
   134e0:	cmp	r2, r6
   134e4:	bgt	13554 <_obstack_memory_used@@Base+0xfdc>
   134e8:	add	sl, r7, #8
   134ec:	mov	r3, #8
   134f0:	cmp	r4, sl
   134f4:	add	r1, sp, #44	; 0x2c
   134f8:	str	r2, [sp, #44]	; 0x2c
   134fc:	sub	r2, r6, r2
   13500:	movne	r0, r4
   13504:	moveq	r0, #0
   13508:	add	r2, r2, #1
   1350c:	str	r3, [sp]
   13510:	mvn	r3, #-2147483648	; 0x80000000
   13514:	bl	141e8 <_obstack_memory_used@@Base+0x1c70>
   13518:	cmp	r4, sl
   1351c:	mov	fp, r0
   13520:	str	r0, [r7]
   13524:	ldmeq	r4, {r0, r1}
   13528:	mov	r4, fp
   1352c:	ldr	r2, [sp, #44]	; 0x2c
   13530:	stmeq	fp, {r0, r1}
   13534:	mov	r1, #0
   13538:	ldr	r0, [r7, #4]
   1353c:	sub	r2, r2, r0
   13540:	add	r0, fp, r0, lsl #3
   13544:	lsl	r2, r2, #3
   13548:	bl	10f18 <memset@plt>
   1354c:	ldr	r3, [sp, #44]	; 0x2c
   13550:	str	r3, [r7, #4]
   13554:	ldr	r3, [r5, #4]
   13558:	add	sl, r4, r6, lsl #3
   1355c:	mov	r2, r8
   13560:	ldr	fp, [r4, r6, lsl #3]
   13564:	ldr	r7, [sl, #4]
   13568:	orr	r3, r3, #1
   1356c:	str	r3, [sp, #28]
   13570:	add	r3, r5, #8
   13574:	mov	r1, fp
   13578:	str	r3, [sp, #36]	; 0x24
   1357c:	mov	r0, r7
   13580:	ldr	r3, [r5, #44]	; 0x2c
   13584:	str	r3, [sp, #16]
   13588:	ldr	r3, [r5, #40]	; 0x28
   1358c:	str	r3, [sp, #12]
   13590:	add	r3, r5, #8
   13594:	str	r3, [sp, #8]
   13598:	ldr	r3, [sp, #28]
   1359c:	str	r3, [sp, #4]
   135a0:	ldr	r3, [r5]
   135a4:	str	r3, [sp]
   135a8:	mov	r3, r9
   135ac:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   135b0:	cmp	fp, r0
   135b4:	bhi	1361c <_obstack_memory_used@@Base+0x10a4>
   135b8:	ldr	r3, [pc, #120]	; 13638 <_obstack_memory_used@@Base+0x10c0>
   135bc:	add	fp, r0, #1
   135c0:	str	fp, [r4, r6, lsl #3]
   135c4:	cmp	r7, r3
   135c8:	beq	135d4 <_obstack_memory_used@@Base+0x105c>
   135cc:	mov	r0, r7
   135d0:	bl	12008 <close@plt+0x1048>
   135d4:	mov	r0, fp
   135d8:	bl	140d8 <_obstack_memory_used@@Base+0x1b60>
   135dc:	ldr	r3, [r5, #44]	; 0x2c
   135e0:	mov	r2, r8
   135e4:	mov	r1, fp
   135e8:	str	r0, [sl, #4]
   135ec:	mov	r7, r0
   135f0:	str	r3, [sp, #16]
   135f4:	ldr	r3, [r5, #40]	; 0x28
   135f8:	str	r3, [sp, #12]
   135fc:	add	r3, r5, #8
   13600:	str	r3, [sp, #8]
   13604:	ldr	r3, [sp, #28]
   13608:	str	r3, [sp, #4]
   1360c:	ldr	r3, [r5]
   13610:	str	r3, [sp]
   13614:	mov	r3, r9
   13618:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   1361c:	ldr	r3, [sp, #24]
   13620:	mov	r0, r7
   13624:	ldr	r2, [sp, #32]
   13628:	str	r2, [r3]
   1362c:	add	sp, sp, #52	; 0x34
   13630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13634:	strdeq	r7, [r2], -r4
   13638:	muleq	r2, r4, r1
   1363c:	push	{r4, r5, r6, lr}
   13640:	mov	r5, r0
   13644:	bl	10f00 <__errno_location@plt>
   13648:	mov	r4, r0
   1364c:	cmp	r5, #0
   13650:	ldr	r0, [pc, #20]	; 1366c <_obstack_memory_used@@Base+0x10f4>
   13654:	mov	r1, #48	; 0x30
   13658:	movne	r0, r5
   1365c:	ldr	r6, [r4]
   13660:	bl	142d8 <_obstack_memory_used@@Base+0x1d60>
   13664:	str	r6, [r4]
   13668:	pop	{r4, r5, r6, pc}
   1366c:	muleq	r2, r4, r2
   13670:	ldr	r3, [pc, #12]	; 13684 <_obstack_memory_used@@Base+0x110c>
   13674:	cmp	r0, #0
   13678:	moveq	r0, r3
   1367c:	ldr	r0, [r0]
   13680:	bx	lr
   13684:	muleq	r2, r4, r2
   13688:	ldr	r3, [pc, #12]	; 1369c <_obstack_memory_used@@Base+0x1124>
   1368c:	cmp	r0, #0
   13690:	moveq	r0, r3
   13694:	str	r1, [r0]
   13698:	bx	lr
   1369c:	muleq	r2, r4, r2
   136a0:	ldr	r3, [pc, #52]	; 136dc <_obstack_memory_used@@Base+0x1164>
   136a4:	cmp	r0, #0
   136a8:	push	{lr}		; (str lr, [sp, #-4]!)
   136ac:	lsr	lr, r1, #5
   136b0:	and	r1, r1, #31
   136b4:	moveq	r0, r3
   136b8:	add	r3, r0, #8
   136bc:	ldr	ip, [r3, lr, lsl #2]
   136c0:	lsr	r0, ip, r1
   136c4:	eor	r2, r2, r0
   136c8:	and	r0, r0, #1
   136cc:	and	r2, r2, #1
   136d0:	eor	r1, ip, r2, lsl r1
   136d4:	str	r1, [r3, lr, lsl #2]
   136d8:	pop	{pc}		; (ldr pc, [sp], #4)
   136dc:	muleq	r2, r4, r2
   136e0:	ldr	r3, [pc, #16]	; 136f8 <_obstack_memory_used@@Base+0x1180>
   136e4:	cmp	r0, #0
   136e8:	movne	r3, r0
   136ec:	ldr	r0, [r3, #4]
   136f0:	str	r1, [r3, #4]
   136f4:	bx	lr
   136f8:	muleq	r2, r4, r2
   136fc:	ldr	r3, [pc, #44]	; 13730 <_obstack_memory_used@@Base+0x11b8>
   13700:	cmp	r0, #0
   13704:	moveq	r0, r3
   13708:	mov	r3, #10
   1370c:	cmp	r2, #0
   13710:	cmpne	r1, #0
   13714:	str	r3, [r0]
   13718:	bne	13724 <_obstack_memory_used@@Base+0x11ac>
   1371c:	push	{r4, lr}
   13720:	bl	10fb4 <abort@plt>
   13724:	str	r1, [r0, #40]	; 0x28
   13728:	str	r2, [r0, #44]	; 0x2c
   1372c:	bx	lr
   13730:	muleq	r2, r4, r2
   13734:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13738:	sub	sp, sp, #24
   1373c:	mov	sl, r3
   13740:	mov	r7, r0
   13744:	mov	r8, r1
   13748:	mov	r9, r2
   1374c:	ldr	r4, [sp, #56]	; 0x38
   13750:	ldr	r3, [pc, #88]	; 137b0 <_obstack_memory_used@@Base+0x1238>
   13754:	cmp	r4, #0
   13758:	moveq	r4, r3
   1375c:	bl	10f00 <__errno_location@plt>
   13760:	ldr	r3, [r4, #44]	; 0x2c
   13764:	mov	r5, r0
   13768:	mov	r2, r9
   1376c:	mov	r1, r8
   13770:	mov	r0, r7
   13774:	ldr	r6, [r5]
   13778:	str	r3, [sp, #16]
   1377c:	ldr	r3, [r4, #40]	; 0x28
   13780:	str	r3, [sp, #12]
   13784:	add	r3, r4, #8
   13788:	str	r3, [sp, #8]
   1378c:	ldr	r3, [r4, #4]
   13790:	str	r3, [sp, #4]
   13794:	ldr	r3, [r4]
   13798:	str	r3, [sp]
   1379c:	mov	r3, sl
   137a0:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   137a4:	str	r6, [r5]
   137a8:	add	sp, sp, #24
   137ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137b0:	muleq	r2, r4, r2
   137b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137b8:	cmp	r3, #0
   137bc:	sub	sp, sp, #44	; 0x2c
   137c0:	mov	r6, r2
   137c4:	mov	sl, r1
   137c8:	mov	r9, r0
   137cc:	ldr	r4, [pc, #176]	; 13884 <_obstack_memory_used@@Base+0x130c>
   137d0:	movne	r4, r3
   137d4:	bl	10f00 <__errno_location@plt>
   137d8:	ldr	r3, [r0]
   137dc:	mov	r1, #0
   137e0:	mov	r2, r9
   137e4:	mov	r8, r0
   137e8:	mov	r0, r1
   137ec:	ldr	r5, [r4, #4]
   137f0:	add	fp, r4, #8
   137f4:	str	r3, [sp, #28]
   137f8:	ldr	r3, [r4, #44]	; 0x2c
   137fc:	cmp	r6, #0
   13800:	orreq	r5, r5, #1
   13804:	str	r3, [sp, #16]
   13808:	ldr	r3, [r4, #40]	; 0x28
   1380c:	stmib	sp, {r5, fp}
   13810:	str	r3, [sp, #12]
   13814:	ldr	r3, [r4]
   13818:	str	r3, [sp]
   1381c:	mov	r3, sl
   13820:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   13824:	add	r1, r0, #1
   13828:	mov	r7, r0
   1382c:	mov	r0, r1
   13830:	str	r1, [sp, #36]	; 0x24
   13834:	bl	140d8 <_obstack_memory_used@@Base+0x1b60>
   13838:	ldr	r3, [r4, #44]	; 0x2c
   1383c:	mov	r2, r9
   13840:	ldr	r1, [sp, #36]	; 0x24
   13844:	str	r3, [sp, #16]
   13848:	ldr	r3, [r4, #40]	; 0x28
   1384c:	stmib	sp, {r5, fp}
   13850:	str	r0, [sp, #32]
   13854:	str	r3, [sp, #12]
   13858:	ldr	r3, [r4]
   1385c:	str	r3, [sp]
   13860:	mov	r3, sl
   13864:	bl	127a4 <_obstack_memory_used@@Base+0x22c>
   13868:	ldr	r3, [sp, #28]
   1386c:	cmp	r6, #0
   13870:	ldr	r0, [sp, #32]
   13874:	str	r3, [r8]
   13878:	strne	r7, [r6]
   1387c:	add	sp, sp, #44	; 0x2c
   13880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13884:	muleq	r2, r4, r2
   13888:	mov	r3, r2
   1388c:	mov	r2, #0
   13890:	b	137b4 <_obstack_memory_used@@Base+0x123c>
   13894:	push	{r4, r5, r6, r7, r8, lr}
   13898:	mov	r6, #1
   1389c:	ldr	r4, [pc, #100]	; 13908 <_obstack_memory_used@@Base+0x1390>
   138a0:	ldr	r5, [r4]
   138a4:	add	r7, r5, #4
   138a8:	ldr	r3, [r4, #4]
   138ac:	cmp	r3, r6
   138b0:	bgt	138f8 <_obstack_memory_used@@Base+0x1380>
   138b4:	ldr	r6, [pc, #80]	; 1390c <_obstack_memory_used@@Base+0x1394>
   138b8:	ldr	r0, [r5, #4]
   138bc:	cmp	r0, r6
   138c0:	beq	138d4 <_obstack_memory_used@@Base+0x135c>
   138c4:	bl	12008 <close@plt+0x1048>
   138c8:	mov	r3, #256	; 0x100
   138cc:	str	r3, [r4, #8]
   138d0:	str	r6, [r4, #12]
   138d4:	ldr	r6, [pc, #52]	; 13910 <_obstack_memory_used@@Base+0x1398>
   138d8:	cmp	r5, r6
   138dc:	beq	138ec <_obstack_memory_used@@Base+0x1374>
   138e0:	mov	r0, r5
   138e4:	bl	12008 <close@plt+0x1048>
   138e8:	str	r6, [r4]
   138ec:	mov	r3, #1
   138f0:	str	r3, [r4, #4]
   138f4:	pop	{r4, r5, r6, r7, r8, pc}
   138f8:	ldr	r0, [r7, r6, lsl #3]
   138fc:	add	r6, r6, #1
   13900:	bl	12008 <close@plt+0x1048>
   13904:	b	138a8 <_obstack_memory_used@@Base+0x1330>
   13908:	strdeq	r7, [r2], -r4
   1390c:	muleq	r2, r4, r1
   13910:	strdeq	r7, [r2], -ip
   13914:	ldr	r3, [pc, #4]	; 13920 <_obstack_memory_used@@Base+0x13a8>
   13918:	mvn	r2, #0
   1391c:	b	13494 <_obstack_memory_used@@Base+0xf1c>
   13920:	muleq	r2, r4, r2
   13924:	ldr	r3, [pc]	; 1392c <_obstack_memory_used@@Base+0x13b4>
   13928:	b	13494 <_obstack_memory_used@@Base+0xf1c>
   1392c:	muleq	r2, r4, r2
   13930:	mov	r1, r0
   13934:	mov	r0, #0
   13938:	b	13914 <_obstack_memory_used@@Base+0x139c>
   1393c:	mov	r2, r1
   13940:	mov	r1, r0
   13944:	mov	r0, #0
   13948:	b	13924 <_obstack_memory_used@@Base+0x13ac>
   1394c:	push	{r4, r5, lr}
   13950:	sub	sp, sp, #52	; 0x34
   13954:	mov	r5, r2
   13958:	mov	r4, r0
   1395c:	mov	r0, sp
   13960:	bl	12648 <_obstack_memory_used@@Base+0xd0>
   13964:	mov	r3, sp
   13968:	mvn	r2, #0
   1396c:	mov	r1, r5
   13970:	mov	r0, r4
   13974:	bl	13494 <_obstack_memory_used@@Base+0xf1c>
   13978:	add	sp, sp, #52	; 0x34
   1397c:	pop	{r4, r5, pc}
   13980:	push	{r4, r5, r6, lr}
   13984:	sub	sp, sp, #48	; 0x30
   13988:	mov	r5, r2
   1398c:	mov	r6, r3
   13990:	mov	r4, r0
   13994:	mov	r0, sp
   13998:	bl	12648 <_obstack_memory_used@@Base+0xd0>
   1399c:	mov	r3, sp
   139a0:	mov	r2, r6
   139a4:	mov	r1, r5
   139a8:	mov	r0, r4
   139ac:	bl	13494 <_obstack_memory_used@@Base+0xf1c>
   139b0:	add	sp, sp, #48	; 0x30
   139b4:	pop	{r4, r5, r6, pc}
   139b8:	mov	r2, r1
   139bc:	mov	r1, r0
   139c0:	mov	r0, #0
   139c4:	b	1394c <_obstack_memory_used@@Base+0x13d4>
   139c8:	mov	r3, r2
   139cc:	mov	r2, r1
   139d0:	mov	r1, r0
   139d4:	mov	r0, #0
   139d8:	b	13980 <_obstack_memory_used@@Base+0x1408>
   139dc:	push	{r4, r5, r6, lr}
   139e0:	mov	r4, r0
   139e4:	mov	r5, r1
   139e8:	mov	r6, r2
   139ec:	sub	sp, sp, #48	; 0x30
   139f0:	mov	ip, sp
   139f4:	ldr	lr, [pc, #64]	; 13a3c <_obstack_memory_used@@Base+0x14c4>
   139f8:	ldm	lr!, {r0, r1, r2, r3}
   139fc:	stmia	ip!, {r0, r1, r2, r3}
   13a00:	ldm	lr!, {r0, r1, r2, r3}
   13a04:	stmia	ip!, {r0, r1, r2, r3}
   13a08:	ldm	lr, {r0, r1, r2, r3}
   13a0c:	stm	ip, {r0, r1, r2, r3}
   13a10:	mov	r1, r6
   13a14:	mov	r2, #1
   13a18:	mov	r0, sp
   13a1c:	bl	136a0 <_obstack_memory_used@@Base+0x1128>
   13a20:	mov	r3, sp
   13a24:	mov	r2, r5
   13a28:	mov	r1, r4
   13a2c:	mov	r0, #0
   13a30:	bl	13494 <_obstack_memory_used@@Base+0xf1c>
   13a34:	add	sp, sp, #48	; 0x30
   13a38:	pop	{r4, r5, r6, pc}
   13a3c:	muleq	r2, r4, r2
   13a40:	mov	r2, r1
   13a44:	mvn	r1, #0
   13a48:	b	139dc <_obstack_memory_used@@Base+0x1464>
   13a4c:	mov	r1, #58	; 0x3a
   13a50:	b	13a40 <_obstack_memory_used@@Base+0x14c8>
   13a54:	mov	r2, #58	; 0x3a
   13a58:	b	139dc <_obstack_memory_used@@Base+0x1464>
   13a5c:	push	{r4, r5, lr}
   13a60:	sub	sp, sp, #100	; 0x64
   13a64:	mov	r4, r0
   13a68:	mov	r0, sp
   13a6c:	mov	r5, r2
   13a70:	bl	12648 <_obstack_memory_used@@Base+0xd0>
   13a74:	mov	ip, sp
   13a78:	add	lr, sp, #48	; 0x30
   13a7c:	ldm	ip!, {r0, r1, r2, r3}
   13a80:	stmia	lr!, {r0, r1, r2, r3}
   13a84:	ldm	ip!, {r0, r1, r2, r3}
   13a88:	stmia	lr!, {r0, r1, r2, r3}
   13a8c:	ldm	ip, {r0, r1, r2, r3}
   13a90:	stm	lr, {r0, r1, r2, r3}
   13a94:	mov	r2, #1
   13a98:	mov	r1, #58	; 0x3a
   13a9c:	add	r0, sp, #48	; 0x30
   13aa0:	bl	136a0 <_obstack_memory_used@@Base+0x1128>
   13aa4:	add	r3, sp, #48	; 0x30
   13aa8:	mvn	r2, #0
   13aac:	mov	r1, r5
   13ab0:	mov	r0, r4
   13ab4:	bl	13494 <_obstack_memory_used@@Base+0xf1c>
   13ab8:	add	sp, sp, #100	; 0x64
   13abc:	pop	{r4, r5, pc}
   13ac0:	push	{r4, r5, r6, r7, lr}
   13ac4:	mov	r4, r0
   13ac8:	mov	r6, r1
   13acc:	mov	r7, r2
   13ad0:	mov	r5, r3
   13ad4:	sub	sp, sp, #52	; 0x34
   13ad8:	ldr	lr, [pc, #68]	; 13b24 <_obstack_memory_used@@Base+0x15ac>
   13adc:	mov	ip, sp
   13ae0:	ldm	lr!, {r0, r1, r2, r3}
   13ae4:	stmia	ip!, {r0, r1, r2, r3}
   13ae8:	ldm	lr!, {r0, r1, r2, r3}
   13aec:	stmia	ip!, {r0, r1, r2, r3}
   13af0:	ldm	lr, {r0, r1, r2, r3}
   13af4:	stm	ip, {r0, r1, r2, r3}
   13af8:	mov	r2, r7
   13afc:	mov	r1, r6
   13b00:	mov	r0, sp
   13b04:	bl	136fc <_obstack_memory_used@@Base+0x1184>
   13b08:	ldr	r2, [sp, #72]	; 0x48
   13b0c:	mov	r3, sp
   13b10:	mov	r1, r5
   13b14:	mov	r0, r4
   13b18:	bl	13494 <_obstack_memory_used@@Base+0xf1c>
   13b1c:	add	sp, sp, #52	; 0x34
   13b20:	pop	{r4, r5, r6, r7, pc}
   13b24:	muleq	r2, r4, r2
   13b28:	mvn	ip, #0
   13b2c:	push	{r0, r1, r2, lr}
   13b30:	str	ip, [sp]
   13b34:	bl	13ac0 <_obstack_memory_used@@Base+0x1548>
   13b38:	add	sp, sp, #12
   13b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b40:	mov	r3, r2
   13b44:	mov	r2, r1
   13b48:	mov	r1, r0
   13b4c:	mov	r0, #0
   13b50:	b	13b28 <_obstack_memory_used@@Base+0x15b0>
   13b54:	push	{r0, r1, r2, lr}
   13b58:	str	r3, [sp]
   13b5c:	mov	r3, r2
   13b60:	mov	r2, r1
   13b64:	mov	r1, r0
   13b68:	mov	r0, #0
   13b6c:	bl	13ac0 <_obstack_memory_used@@Base+0x1548>
   13b70:	add	sp, sp, #12
   13b74:	pop	{pc}		; (ldr pc, [sp], #4)
   13b78:	ldr	r3, [pc]	; 13b80 <_obstack_memory_used@@Base+0x1608>
   13b7c:	b	13494 <_obstack_memory_used@@Base+0xf1c>
   13b80:	andeq	r7, r2, r4, lsl #2
   13b84:	mov	r2, r1
   13b88:	mov	r1, r0
   13b8c:	mov	r0, #0
   13b90:	b	13b78 <_obstack_memory_used@@Base+0x1600>
   13b94:	mvn	r2, #0
   13b98:	b	13b78 <_obstack_memory_used@@Base+0x1600>
   13b9c:	mov	r1, r0
   13ba0:	mov	r0, #0
   13ba4:	b	13b94 <_obstack_memory_used@@Base+0x161c>
   13ba8:	push	{r4, r5, r6, lr}
   13bac:	cmp	r1, #0
   13bb0:	sub	sp, sp, #32
   13bb4:	mov	r5, r0
   13bb8:	ldr	r4, [sp, #48]	; 0x30
   13bbc:	ldr	r6, [sp, #52]	; 0x34
   13bc0:	beq	13c74 <_obstack_memory_used@@Base+0x16fc>
   13bc4:	strd	r2, [sp]
   13bc8:	mov	r3, r1
   13bcc:	mov	r1, #1
   13bd0:	ldr	r2, [pc, #856]	; 13f30 <_obstack_memory_used@@Base+0x19b8>
   13bd4:	bl	10f3c <__fprintf_chk@plt>
   13bd8:	mov	r2, #5
   13bdc:	ldr	r1, [pc, #848]	; 13f34 <_obstack_memory_used@@Base+0x19bc>
   13be0:	mov	r0, #0
   13be4:	bl	10de0 <dcgettext@plt>
   13be8:	movw	r3, #2022	; 0x7e6
   13bec:	ldr	r2, [pc, #836]	; 13f38 <_obstack_memory_used@@Base+0x19c0>
   13bf0:	mov	r1, #1
   13bf4:	str	r3, [sp]
   13bf8:	mov	r3, r0
   13bfc:	mov	r0, r5
   13c00:	bl	10f3c <__fprintf_chk@plt>
   13c04:	mov	r1, r5
   13c08:	mov	r0, #10
   13c0c:	bl	10dd4 <fputc_unlocked@plt>
   13c10:	mov	r2, #5
   13c14:	ldr	r1, [pc, #800]	; 13f3c <_obstack_memory_used@@Base+0x19c4>
   13c18:	mov	r0, #0
   13c1c:	bl	10de0 <dcgettext@plt>
   13c20:	mov	r2, r0
   13c24:	mov	r1, #1
   13c28:	ldr	r3, [pc, #784]	; 13f40 <_obstack_memory_used@@Base+0x19c8>
   13c2c:	mov	r0, r5
   13c30:	bl	10f3c <__fprintf_chk@plt>
   13c34:	mov	r1, r5
   13c38:	mov	r0, #10
   13c3c:	bl	10dd4 <fputc_unlocked@plt>
   13c40:	cmp	r6, #9
   13c44:	ldrls	pc, [pc, r6, lsl #2]
   13c48:	b	13f24 <_obstack_memory_used@@Base+0x19ac>
   13c4c:	andeq	r3, r1, r4, ror #26
   13c50:	andeq	r3, r1, ip, lsl #25
   13c54:			; <UNDEFINED> instruction: 0x00013cb8
   13c58:	andeq	r3, r1, ip, ror #25
   13c5c:	andeq	r3, r1, r8, lsr #26
   13c60:	andeq	r3, r1, ip, ror #26
   13c64:			; <UNDEFINED> instruction: 0x00013db4
   13c68:	andeq	r3, r1, r4, lsl #28
   13c6c:	andeq	r3, r1, ip, asr lr
   13c70:			; <UNDEFINED> instruction: 0x00013ebc
   13c74:	mov	r1, #1
   13c78:	str	r3, [sp]
   13c7c:	mov	r3, r2
   13c80:	ldr	r2, [pc, #700]	; 13f44 <_obstack_memory_used@@Base+0x19cc>
   13c84:	bl	10f3c <__fprintf_chk@plt>
   13c88:	b	13bd8 <_obstack_memory_used@@Base+0x1660>
   13c8c:	mov	r2, #5
   13c90:	ldr	r1, [pc, #688]	; 13f48 <_obstack_memory_used@@Base+0x19d0>
   13c94:	mov	r0, #0
   13c98:	bl	10de0 <dcgettext@plt>
   13c9c:	ldr	r3, [r4]
   13ca0:	mov	r2, r0
   13ca4:	mov	r1, #1
   13ca8:	mov	r0, r5
   13cac:	add	sp, sp, #32
   13cb0:	pop	{r4, r5, r6, lr}
   13cb4:	b	10f3c <__fprintf_chk@plt>
   13cb8:	mov	r2, #5
   13cbc:	ldr	r1, [pc, #648]	; 13f4c <_obstack_memory_used@@Base+0x19d4>
   13cc0:	mov	r0, #0
   13cc4:	bl	10de0 <dcgettext@plt>
   13cc8:	ldr	r3, [r4, #4]
   13ccc:	mov	r2, r0
   13cd0:	mov	r1, #1
   13cd4:	mov	r0, r5
   13cd8:	str	r3, [sp, #48]	; 0x30
   13cdc:	ldr	r3, [r4]
   13ce0:	add	sp, sp, #32
   13ce4:	pop	{r4, r5, r6, lr}
   13ce8:	b	10f3c <__fprintf_chk@plt>
   13cec:	mov	r2, #5
   13cf0:	ldr	r1, [pc, #600]	; 13f50 <_obstack_memory_used@@Base+0x19d8>
   13cf4:	mov	r0, #0
   13cf8:	bl	10de0 <dcgettext@plt>
   13cfc:	ldr	r3, [r4, #8]
   13d00:	mov	r2, r0
   13d04:	mov	r1, #1
   13d08:	mov	r0, r5
   13d0c:	str	r3, [sp, #52]	; 0x34
   13d10:	ldr	r3, [r4, #4]
   13d14:	str	r3, [sp, #48]	; 0x30
   13d18:	ldr	r3, [r4]
   13d1c:	add	sp, sp, #32
   13d20:	pop	{r4, r5, r6, lr}
   13d24:	b	10f3c <__fprintf_chk@plt>
   13d28:	mov	r2, #5
   13d2c:	ldr	r1, [pc, #544]	; 13f54 <_obstack_memory_used@@Base+0x19dc>
   13d30:	mov	r0, #0
   13d34:	bl	10de0 <dcgettext@plt>
   13d38:	ldr	r3, [r4, #12]
   13d3c:	mov	r2, r0
   13d40:	mov	r1, #1
   13d44:	mov	r0, r5
   13d48:	str	r3, [sp, #8]
   13d4c:	ldr	r3, [r4, #8]
   13d50:	str	r3, [sp, #4]
   13d54:	ldr	r3, [r4, #4]
   13d58:	str	r3, [sp]
   13d5c:	ldr	r3, [r4]
   13d60:	bl	10f3c <__fprintf_chk@plt>
   13d64:	add	sp, sp, #32
   13d68:	pop	{r4, r5, r6, pc}
   13d6c:	mov	r2, #5
   13d70:	ldr	r1, [pc, #480]	; 13f58 <_obstack_memory_used@@Base+0x19e0>
   13d74:	mov	r0, #0
   13d78:	bl	10de0 <dcgettext@plt>
   13d7c:	ldr	r3, [r4, #16]
   13d80:	mov	r2, r0
   13d84:	mov	r1, #1
   13d88:	mov	r0, r5
   13d8c:	str	r3, [sp, #12]
   13d90:	ldr	r3, [r4, #12]
   13d94:	str	r3, [sp, #8]
   13d98:	ldr	r3, [r4, #8]
   13d9c:	str	r3, [sp, #4]
   13da0:	ldr	r3, [r4, #4]
   13da4:	str	r3, [sp]
   13da8:	ldr	r3, [r4]
   13dac:	bl	10f3c <__fprintf_chk@plt>
   13db0:	b	13d64 <_obstack_memory_used@@Base+0x17ec>
   13db4:	mov	r2, #5
   13db8:	ldr	r1, [pc, #412]	; 13f5c <_obstack_memory_used@@Base+0x19e4>
   13dbc:	mov	r0, #0
   13dc0:	bl	10de0 <dcgettext@plt>
   13dc4:	ldr	r3, [r4, #20]
   13dc8:	mov	r2, r0
   13dcc:	mov	r1, #1
   13dd0:	mov	r0, r5
   13dd4:	str	r3, [sp, #16]
   13dd8:	ldr	r3, [r4, #16]
   13ddc:	str	r3, [sp, #12]
   13de0:	ldr	r3, [r4, #12]
   13de4:	str	r3, [sp, #8]
   13de8:	ldr	r3, [r4, #8]
   13dec:	str	r3, [sp, #4]
   13df0:	ldr	r3, [r4, #4]
   13df4:	str	r3, [sp]
   13df8:	ldr	r3, [r4]
   13dfc:	bl	10f3c <__fprintf_chk@plt>
   13e00:	b	13d64 <_obstack_memory_used@@Base+0x17ec>
   13e04:	mov	r2, #5
   13e08:	ldr	r1, [pc, #336]	; 13f60 <_obstack_memory_used@@Base+0x19e8>
   13e0c:	mov	r0, #0
   13e10:	bl	10de0 <dcgettext@plt>
   13e14:	ldr	r3, [r4, #24]
   13e18:	mov	r2, r0
   13e1c:	mov	r1, #1
   13e20:	mov	r0, r5
   13e24:	str	r3, [sp, #20]
   13e28:	ldr	r3, [r4, #20]
   13e2c:	str	r3, [sp, #16]
   13e30:	ldr	r3, [r4, #16]
   13e34:	str	r3, [sp, #12]
   13e38:	ldr	r3, [r4, #12]
   13e3c:	str	r3, [sp, #8]
   13e40:	ldr	r3, [r4, #8]
   13e44:	str	r3, [sp, #4]
   13e48:	ldr	r3, [r4, #4]
   13e4c:	str	r3, [sp]
   13e50:	ldr	r3, [r4]
   13e54:	bl	10f3c <__fprintf_chk@plt>
   13e58:	b	13d64 <_obstack_memory_used@@Base+0x17ec>
   13e5c:	mov	r2, #5
   13e60:	ldr	r1, [pc, #252]	; 13f64 <_obstack_memory_used@@Base+0x19ec>
   13e64:	mov	r0, #0
   13e68:	bl	10de0 <dcgettext@plt>
   13e6c:	ldr	r3, [r4, #28]
   13e70:	mov	r2, r0
   13e74:	mov	r1, #1
   13e78:	mov	r0, r5
   13e7c:	str	r3, [sp, #24]
   13e80:	ldr	r3, [r4, #24]
   13e84:	str	r3, [sp, #20]
   13e88:	ldr	r3, [r4, #20]
   13e8c:	str	r3, [sp, #16]
   13e90:	ldr	r3, [r4, #16]
   13e94:	str	r3, [sp, #12]
   13e98:	ldr	r3, [r4, #12]
   13e9c:	str	r3, [sp, #8]
   13ea0:	ldr	r3, [r4, #8]
   13ea4:	str	r3, [sp, #4]
   13ea8:	ldr	r3, [r4, #4]
   13eac:	str	r3, [sp]
   13eb0:	ldr	r3, [r4]
   13eb4:	bl	10f3c <__fprintf_chk@plt>
   13eb8:	b	13d64 <_obstack_memory_used@@Base+0x17ec>
   13ebc:	ldr	r1, [pc, #164]	; 13f68 <_obstack_memory_used@@Base+0x19f0>
   13ec0:	mov	r2, #5
   13ec4:	mov	r0, #0
   13ec8:	bl	10de0 <dcgettext@plt>
   13ecc:	ldr	r3, [r4, #32]
   13ed0:	mov	r2, r0
   13ed4:	mov	r1, #1
   13ed8:	mov	r0, r5
   13edc:	str	r3, [sp, #28]
   13ee0:	ldr	r3, [r4, #28]
   13ee4:	str	r3, [sp, #24]
   13ee8:	ldr	r3, [r4, #24]
   13eec:	str	r3, [sp, #20]
   13ef0:	ldr	r3, [r4, #20]
   13ef4:	str	r3, [sp, #16]
   13ef8:	ldr	r3, [r4, #16]
   13efc:	str	r3, [sp, #12]
   13f00:	ldr	r3, [r4, #12]
   13f04:	str	r3, [sp, #8]
   13f08:	ldr	r3, [r4, #8]
   13f0c:	str	r3, [sp, #4]
   13f10:	ldr	r3, [r4, #4]
   13f14:	str	r3, [sp]
   13f18:	ldr	r3, [r4]
   13f1c:	bl	10f3c <__fprintf_chk@plt>
   13f20:	b	13d64 <_obstack_memory_used@@Base+0x17ec>
   13f24:	mov	r2, #5
   13f28:	ldr	r1, [pc, #60]	; 13f6c <_obstack_memory_used@@Base+0x19f4>
   13f2c:	b	13ec4 <_obstack_memory_used@@Base+0x194c>
   13f30:	andeq	r6, r1, sp, lsl r4
   13f34:	andeq	r6, r1, r0, lsr r4
   13f38:	strdeq	r6, [r1], -lr
   13f3c:	andeq	r6, r1, r4, lsr r4
   13f40:	ldrdeq	r6, [r1], -pc	; <UNPREDICTABLE>
   13f44:	andeq	r6, r1, r9, lsr #8
   13f48:	andeq	r6, r1, r1, lsl #10
   13f4c:	andeq	r6, r1, r1, lsl r5
   13f50:	andeq	r6, r1, r8, lsr #10
   13f54:	andeq	r6, r1, r4, asr #10
   13f58:	andeq	r6, r1, r4, ror #10
   13f5c:	andeq	r6, r1, r8, lsl #11
   13f60:			; <UNDEFINED> instruction: 0x000165b0
   13f64:	ldrdeq	r6, [r1], -ip
   13f68:	andeq	r6, r1, ip, lsl #12
   13f6c:	andeq	r6, r1, r0, asr #12
   13f70:	push	{r0, r1, r4, lr}
   13f74:	mov	ip, #0
   13f78:	ldr	lr, [sp, #16]
   13f7c:	ldr	r4, [lr, ip, lsl #2]
   13f80:	cmp	r4, #0
   13f84:	bne	13f9c <_obstack_memory_used@@Base+0x1a24>
   13f88:	str	lr, [sp]
   13f8c:	str	ip, [sp, #4]
   13f90:	bl	13ba8 <_obstack_memory_used@@Base+0x1630>
   13f94:	add	sp, sp, #8
   13f98:	pop	{r4, pc}
   13f9c:	add	ip, ip, #1
   13fa0:	b	13f7c <_obstack_memory_used@@Base+0x1a04>
   13fa4:	push	{r4, r5, r6, lr}
   13fa8:	sub	sp, sp, #48	; 0x30
   13fac:	mov	ip, #0
   13fb0:	add	lr, sp, #8
   13fb4:	mov	r5, lr
   13fb8:	ldr	r6, [sp, #64]	; 0x40
   13fbc:	ldr	r4, [r6, ip, lsl #2]
   13fc0:	cmp	r4, #0
   13fc4:	str	r4, [lr], #4
   13fc8:	beq	13fd8 <_obstack_memory_used@@Base+0x1a60>
   13fcc:	add	ip, ip, #1
   13fd0:	cmp	ip, #10
   13fd4:	bne	13fbc <_obstack_memory_used@@Base+0x1a44>
   13fd8:	stm	sp, {r5, ip}
   13fdc:	bl	13ba8 <_obstack_memory_used@@Base+0x1630>
   13fe0:	add	sp, sp, #48	; 0x30
   13fe4:	pop	{r4, r5, r6, pc}
   13fe8:	push	{r3}		; (str r3, [sp, #-4]!)
   13fec:	push	{r0, r1, r2, r3, lr}
   13ff0:	add	r3, sp, #24
   13ff4:	str	r3, [sp]
   13ff8:	str	r3, [sp, #12]
   13ffc:	ldr	r3, [sp, #20]
   14000:	bl	13fa4 <_obstack_memory_used@@Base+0x1a2c>
   14004:	add	sp, sp, #16
   14008:	pop	{lr}		; (ldr lr, [sp], #4)
   1400c:	add	sp, sp, #4
   14010:	bx	lr
   14014:	ldr	r3, [pc, #116]	; 14090 <_obstack_memory_used@@Base+0x1b18>
   14018:	mov	r0, #10
   1401c:	push	{r4, lr}
   14020:	ldr	r1, [r3]
   14024:	bl	10dd4 <fputc_unlocked@plt>
   14028:	mov	r2, #5
   1402c:	ldr	r1, [pc, #96]	; 14094 <_obstack_memory_used@@Base+0x1b1c>
   14030:	mov	r0, #0
   14034:	bl	10de0 <dcgettext@plt>
   14038:	mov	r1, r0
   1403c:	ldr	r2, [pc, #84]	; 14098 <_obstack_memory_used@@Base+0x1b20>
   14040:	mov	r0, #1
   14044:	bl	10f24 <__printf_chk@plt>
   14048:	mov	r2, #5
   1404c:	ldr	r1, [pc, #72]	; 1409c <_obstack_memory_used@@Base+0x1b24>
   14050:	mov	r0, #0
   14054:	bl	10de0 <dcgettext@plt>
   14058:	mov	r1, r0
   1405c:	ldr	r3, [pc, #60]	; 140a0 <_obstack_memory_used@@Base+0x1b28>
   14060:	mov	r0, #1
   14064:	ldr	r2, [pc, #56]	; 140a4 <_obstack_memory_used@@Base+0x1b2c>
   14068:	bl	10f24 <__printf_chk@plt>
   1406c:	mov	r2, #5
   14070:	ldr	r1, [pc, #48]	; 140a8 <_obstack_memory_used@@Base+0x1b30>
   14074:	mov	r0, #0
   14078:	bl	10de0 <dcgettext@plt>
   1407c:	mov	r1, r0
   14080:	ldr	r2, [pc, #36]	; 140ac <_obstack_memory_used@@Base+0x1b34>
   14084:	mov	r0, #1
   14088:	pop	{r4, lr}
   1408c:	b	10f24 <__printf_chk@plt>
   14090:	andeq	r7, r2, r4, asr r1
   14094:	andeq	r6, r1, ip, ror r6
   14098:	muleq	r1, r0, r6
   1409c:	andeq	r6, r1, r6, lsr #13
   140a0:	andeq	r5, r1, r7, lsl #30
   140a4:	andeq	r5, r1, pc, lsr #30
   140a8:			; <UNDEFINED> instruction: 0x000166ba
   140ac:	andeq	r6, r1, r1, ror #13
   140b0:	push	{r4, lr}
   140b4:	bl	143fc <_obstack_memory_used@@Base+0x1e84>
   140b8:	cmp	r0, #0
   140bc:	popne	{r4, pc}
   140c0:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   140c4:	push	{r4, lr}
   140c8:	bl	143fc <_obstack_memory_used@@Base+0x1e84>
   140cc:	cmp	r0, #0
   140d0:	popne	{r4, pc}
   140d4:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   140d8:	b	140b0 <_obstack_memory_used@@Base+0x1b38>
   140dc:	push	{r4, r5, r6, lr}
   140e0:	mov	r5, r0
   140e4:	mov	r4, r1
   140e8:	bl	14428 <_obstack_memory_used@@Base+0x1eb0>
   140ec:	cmp	r0, #0
   140f0:	popne	{r4, r5, r6, pc}
   140f4:	adds	r4, r4, #0
   140f8:	movne	r4, #1
   140fc:	cmp	r5, #0
   14100:	moveq	r4, #1
   14104:	cmp	r4, #0
   14108:	popeq	{r4, r5, r6, pc}
   1410c:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   14110:	push	{r4, lr}
   14114:	bl	146dc <_obstack_memory_used@@Base+0x2164>
   14118:	cmp	r0, #0
   1411c:	popne	{r4, pc}
   14120:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   14124:	push	{r4, r5, r6, lr}
   14128:	mov	r6, r0
   1412c:	mov	r5, r1
   14130:	mov	r4, r2
   14134:	bl	14784 <_obstack_memory_used@@Base+0x220c>
   14138:	cmp	r0, #0
   1413c:	popne	{r4, r5, r6, pc}
   14140:	cmp	r6, #0
   14144:	beq	14154 <_obstack_memory_used@@Base+0x1bdc>
   14148:	cmp	r5, #0
   1414c:	cmpne	r4, #0
   14150:	popeq	{r4, r5, r6, pc}
   14154:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   14158:	b	14124 <_obstack_memory_used@@Base+0x1bac>
   1415c:	push	{r4, lr}
   14160:	bl	146ec <_obstack_memory_used@@Base+0x2174>
   14164:	cmp	r0, #0
   14168:	popne	{r4, pc}
   1416c:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   14170:	mov	r2, r1
   14174:	mov	r1, r0
   14178:	mov	r0, #0
   1417c:	b	14124 <_obstack_memory_used@@Base+0x1bac>
   14180:	mov	r2, r1
   14184:	mov	r1, r0
   14188:	mov	r0, #0
   1418c:	b	1415c <_obstack_memory_used@@Base+0x1be4>
   14190:	cmp	r0, #0
   14194:	push	{r4, r5, r6, lr}
   14198:	mov	r5, r1
   1419c:	ldr	r4, [r1]
   141a0:	bne	141cc <_obstack_memory_used@@Base+0x1c54>
   141a4:	cmp	r4, #0
   141a8:	bne	141bc <_obstack_memory_used@@Base+0x1c44>
   141ac:	mov	r4, #64	; 0x40
   141b0:	udiv	r4, r4, r2
   141b4:	cmp	r2, #64	; 0x40
   141b8:	addhi	r4, r4, #1
   141bc:	mov	r1, r4
   141c0:	bl	14124 <_obstack_memory_used@@Base+0x1bac>
   141c4:	str	r4, [r5]
   141c8:	pop	{r4, r5, r6, pc}
   141cc:	lsr	r3, r4, #1
   141d0:	add	r3, r3, #1
   141d4:	adds	r4, r4, r3
   141d8:	bcc	141bc <_obstack_memory_used@@Base+0x1c44>
   141dc:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   141e0:	mov	r2, #1
   141e4:	b	14190 <_obstack_memory_used@@Base+0x1c18>
   141e8:	ldr	ip, [r1]
   141ec:	push	{r4, r5, r6, r7, r8, lr}
   141f0:	mov	r5, r1
   141f4:	mvn	r8, r3
   141f8:	lsr	r8, r8, #31
   141fc:	ldr	lr, [sp, #24]
   14200:	asr	r1, ip, #1
   14204:	adds	r4, ip, r1
   14208:	mvnvs	r4, #-2147483648	; 0x80000000
   1420c:	cmp	r3, r4
   14210:	movge	r1, #0
   14214:	andlt	r1, r8, #1
   14218:	cmp	r1, #0
   1421c:	movne	r4, r3
   14220:	smull	r6, r7, r4, lr
   14224:	cmp	r7, r6, asr #31
   14228:	bne	14240 <_obstack_memory_used@@Base+0x1cc8>
   1422c:	cmp	r6, #63	; 0x3f
   14230:	mov	r1, r6
   14234:	bgt	14250 <_obstack_memory_used@@Base+0x1cd8>
   14238:	mov	r1, #64	; 0x40
   1423c:	b	14244 <_obstack_memory_used@@Base+0x1ccc>
   14240:	mvn	r1, #-2147483648	; 0x80000000
   14244:	sdiv	r4, r1, lr
   14248:	mls	r6, lr, r4, r1
   1424c:	sub	r1, r1, r6
   14250:	cmp	r0, #0
   14254:	sub	r6, r4, ip
   14258:	streq	r0, [r5]
   1425c:	cmp	r6, r2
   14260:	bge	14294 <_obstack_memory_used@@Base+0x1d1c>
   14264:	adds	r4, ip, r2
   14268:	bvs	14290 <_obstack_memory_used@@Base+0x1d18>
   1426c:	cmp	r4, r3
   14270:	movle	r3, #0
   14274:	andgt	r3, r8, #1
   14278:	cmp	r3, #0
   1427c:	bne	14290 <_obstack_memory_used@@Base+0x1d18>
   14280:	smull	r2, r3, r4, lr
   14284:	cmp	r3, r2, asr #31
   14288:	mov	r1, r2
   1428c:	beq	14294 <_obstack_memory_used@@Base+0x1d1c>
   14290:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   14294:	bl	140dc <_obstack_memory_used@@Base+0x1b64>
   14298:	str	r4, [r5]
   1429c:	pop	{r4, r5, r6, r7, r8, pc}
   142a0:	push	{r4, lr}
   142a4:	bl	143a8 <_obstack_memory_used@@Base+0x1e30>
   142a8:	cmp	r0, #0
   142ac:	popne	{r4, pc}
   142b0:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   142b4:	mov	r1, #1
   142b8:	b	142a0 <_obstack_memory_used@@Base+0x1d28>
   142bc:	push	{r4, lr}
   142c0:	bl	143a8 <_obstack_memory_used@@Base+0x1e30>
   142c4:	cmp	r0, #0
   142c8:	popne	{r4, pc}
   142cc:	bl	14368 <_obstack_memory_used@@Base+0x1df0>
   142d0:	mov	r1, #1
   142d4:	b	142bc <_obstack_memory_used@@Base+0x1d44>
   142d8:	push	{r4, r5, r6, lr}
   142dc:	mov	r4, r1
   142e0:	mov	r5, r0
   142e4:	mov	r0, r1
   142e8:	bl	140b0 <_obstack_memory_used@@Base+0x1b38>
   142ec:	mov	r2, r4
   142f0:	mov	r1, r5
   142f4:	pop	{r4, r5, r6, lr}
   142f8:	b	10da4 <memcpy@plt>
   142fc:	push	{r4, r5, r6, lr}
   14300:	mov	r4, r1
   14304:	mov	r5, r0
   14308:	mov	r0, r1
   1430c:	bl	140c4 <_obstack_memory_used@@Base+0x1b4c>
   14310:	mov	r2, r4
   14314:	mov	r1, r5
   14318:	pop	{r4, r5, r6, lr}
   1431c:	b	10da4 <memcpy@plt>
   14320:	push	{r4, r5, r6, lr}
   14324:	mov	r5, r0
   14328:	add	r0, r1, #1
   1432c:	mov	r4, r1
   14330:	bl	140c4 <_obstack_memory_used@@Base+0x1b4c>
   14334:	mov	r2, #0
   14338:	mov	r1, r5
   1433c:	strb	r2, [r0, r4]
   14340:	mov	r2, r4
   14344:	pop	{r4, r5, r6, lr}
   14348:	b	10da4 <memcpy@plt>
   1434c:	push	{r4, lr}
   14350:	mov	r4, r0
   14354:	bl	10ef4 <strlen@plt>
   14358:	add	r1, r0, #1
   1435c:	mov	r0, r4
   14360:	pop	{r4, lr}
   14364:	b	142d8 <_obstack_memory_used@@Base+0x1d60>
   14368:	ldr	r3, [pc, #44]	; 1439c <_obstack_memory_used@@Base+0x1e24>
   1436c:	mov	r2, #5
   14370:	mov	r0, #0
   14374:	push	{r4, lr}
   14378:	ldr	r1, [pc, #32]	; 143a0 <_obstack_memory_used@@Base+0x1e28>
   1437c:	ldr	r4, [r3]
   14380:	bl	10de0 <dcgettext@plt>
   14384:	mov	r3, r0
   14388:	ldr	r2, [pc, #20]	; 143a4 <_obstack_memory_used@@Base+0x1e2c>
   1438c:	mov	r1, #0
   14390:	mov	r0, r4
   14394:	bl	10e58 <error@plt>
   14398:	bl	10fb4 <abort@plt>
   1439c:	andeq	r7, r2, ip, ror #1
   143a0:	andeq	r6, r1, fp, lsl r3
   143a4:	andeq	r6, r1, lr, lsl #6
   143a8:	cmp	r1, #0
   143ac:	cmpne	r0, #0
   143b0:	beq	143e8 <_obstack_memory_used@@Base+0x1e70>
   143b4:	push	{r4, r5, r6, lr}
   143b8:	umull	r4, r5, r0, r1
   143bc:	adds	r3, r5, #0
   143c0:	movne	r3, #1
   143c4:	cmp	r4, #0
   143c8:	blt	143d4 <_obstack_memory_used@@Base+0x1e5c>
   143cc:	cmp	r3, #0
   143d0:	beq	143f4 <_obstack_memory_used@@Base+0x1e7c>
   143d4:	bl	10f00 <__errno_location@plt>
   143d8:	mov	r3, #12
   143dc:	str	r3, [r0]
   143e0:	mov	r0, #0
   143e4:	pop	{r4, r5, r6, pc}
   143e8:	mov	r1, #1
   143ec:	mov	r0, r1
   143f0:	b	10d5c <calloc@plt>
   143f4:	pop	{r4, r5, r6, lr}
   143f8:	b	143f0 <_obstack_memory_used@@Base+0x1e78>
   143fc:	cmp	r0, #0
   14400:	beq	14420 <_obstack_memory_used@@Base+0x1ea8>
   14404:	bge	14424 <_obstack_memory_used@@Base+0x1eac>
   14408:	push	{r4, lr}
   1440c:	bl	10f00 <__errno_location@plt>
   14410:	mov	r3, #12
   14414:	str	r3, [r0]
   14418:	mov	r0, #0
   1441c:	pop	{r4, pc}
   14420:	mov	r0, #1
   14424:	b	10e94 <malloc@plt>
   14428:	cmp	r0, #0
   1442c:	bne	14438 <_obstack_memory_used@@Base+0x1ec0>
   14430:	mov	r0, r1
   14434:	b	143fc <_obstack_memory_used@@Base+0x1e84>
   14438:	cmp	r1, #0
   1443c:	push	{r4, lr}
   14440:	bne	14450 <_obstack_memory_used@@Base+0x1ed8>
   14444:	bl	12008 <close@plt+0x1048>
   14448:	mov	r0, #0
   1444c:	pop	{r4, pc}
   14450:	blt	1445c <_obstack_memory_used@@Base+0x1ee4>
   14454:	pop	{r4, lr}
   14458:	b	10df8 <realloc@plt>
   1445c:	bl	10f00 <__errno_location@plt>
   14460:	mov	r3, #12
   14464:	str	r3, [r0]
   14468:	b	14448 <_obstack_memory_used@@Base+0x1ed0>
   1446c:	cmp	r0, #90	; 0x5a
   14470:	bgt	14490 <_obstack_memory_used@@Base+0x1f18>
   14474:	cmp	r0, #65	; 0x41
   14478:	bge	1449c <_obstack_memory_used@@Base+0x1f24>
   1447c:	sub	r0, r0, #48	; 0x30
   14480:	cmp	r0, #9
   14484:	movhi	r0, #0
   14488:	movls	r0, #1
   1448c:	bx	lr
   14490:	sub	r0, r0, #97	; 0x61
   14494:	cmp	r0, #25
   14498:	b	14484 <_obstack_memory_used@@Base+0x1f0c>
   1449c:	mov	r0, #1
   144a0:	bx	lr
   144a4:	cmp	r0, #65	; 0x41
   144a8:	blt	144c8 <_obstack_memory_used@@Base+0x1f50>
   144ac:	cmp	r0, #90	; 0x5a
   144b0:	ble	144d0 <_obstack_memory_used@@Base+0x1f58>
   144b4:	sub	r0, r0, #97	; 0x61
   144b8:	cmp	r0, #25
   144bc:	movhi	r0, #0
   144c0:	movls	r0, #1
   144c4:	bx	lr
   144c8:	mov	r0, #0
   144cc:	bx	lr
   144d0:	mov	r0, #1
   144d4:	bx	lr
   144d8:	cmp	r0, #127	; 0x7f
   144dc:	movhi	r0, #0
   144e0:	movls	r0, #1
   144e4:	bx	lr
   144e8:	cmp	r0, #9
   144ec:	cmpne	r0, #32
   144f0:	moveq	r0, #1
   144f4:	movne	r0, #0
   144f8:	bx	lr
   144fc:	cmp	r0, #0
   14500:	blt	1451c <_obstack_memory_used@@Base+0x1fa4>
   14504:	cmp	r0, #31
   14508:	ble	14524 <_obstack_memory_used@@Base+0x1fac>
   1450c:	sub	r0, r0, #127	; 0x7f
   14510:	clz	r0, r0
   14514:	lsr	r0, r0, #5
   14518:	bx	lr
   1451c:	mov	r0, #0
   14520:	bx	lr
   14524:	mov	r0, #1
   14528:	bx	lr
   1452c:	sub	r0, r0, #48	; 0x30
   14530:	cmp	r0, #9
   14534:	movhi	r0, #0
   14538:	movls	r0, #1
   1453c:	bx	lr
   14540:	sub	r0, r0, #33	; 0x21
   14544:	cmp	r0, #93	; 0x5d
   14548:	movhi	r0, #0
   1454c:	movls	r0, #1
   14550:	bx	lr
   14554:	sub	r0, r0, #97	; 0x61
   14558:	cmp	r0, #25
   1455c:	movhi	r0, #0
   14560:	movls	r0, #1
   14564:	bx	lr
   14568:	sub	r0, r0, #32
   1456c:	cmp	r0, #94	; 0x5e
   14570:	movhi	r0, #0
   14574:	movls	r0, #1
   14578:	bx	lr
   1457c:	cmp	r0, #64	; 0x40
   14580:	bgt	145a0 <_obstack_memory_used@@Base+0x2028>
   14584:	cmp	r0, #58	; 0x3a
   14588:	bge	145c4 <_obstack_memory_used@@Base+0x204c>
   1458c:	sub	r0, r0, #33	; 0x21
   14590:	cmp	r0, #14
   14594:	movhi	r0, #0
   14598:	movls	r0, #1
   1459c:	bx	lr
   145a0:	cmp	r0, #91	; 0x5b
   145a4:	blt	145bc <_obstack_memory_used@@Base+0x2044>
   145a8:	cmp	r0, #96	; 0x60
   145ac:	ble	145c4 <_obstack_memory_used@@Base+0x204c>
   145b0:	sub	r0, r0, #123	; 0x7b
   145b4:	cmp	r0, #3
   145b8:	b	14594 <_obstack_memory_used@@Base+0x201c>
   145bc:	mov	r0, #0
   145c0:	bx	lr
   145c4:	mov	r0, #1
   145c8:	bx	lr
   145cc:	sub	r0, r0, #9
   145d0:	cmp	r0, #23
   145d4:	bhi	145f0 <_obstack_memory_used@@Base+0x2078>
   145d8:	ldr	r3, [pc, #24]	; 145f8 <_obstack_memory_used@@Base+0x2080>
   145dc:	mov	r2, #1
   145e0:	ands	r3, r3, r2, lsl r0
   145e4:	movne	r0, r2
   145e8:	moveq	r0, #0
   145ec:	bx	lr
   145f0:	mov	r0, #0
   145f4:	bx	lr
   145f8:	addeq	r0, r0, pc, lsl r0
   145fc:	sub	r0, r0, #65	; 0x41
   14600:	cmp	r0, #25
   14604:	movhi	r0, #0
   14608:	movls	r0, #1
   1460c:	bx	lr
   14610:	cmp	r0, #70	; 0x46
   14614:	bgt	14634 <_obstack_memory_used@@Base+0x20bc>
   14618:	cmp	r0, #65	; 0x41
   1461c:	bge	14640 <_obstack_memory_used@@Base+0x20c8>
   14620:	sub	r0, r0, #48	; 0x30
   14624:	cmp	r0, #9
   14628:	movhi	r0, #0
   1462c:	movls	r0, #1
   14630:	bx	lr
   14634:	sub	r0, r0, #97	; 0x61
   14638:	cmp	r0, #5
   1463c:	b	14628 <_obstack_memory_used@@Base+0x20b0>
   14640:	mov	r0, #1
   14644:	bx	lr
   14648:	sub	r3, r0, #65	; 0x41
   1464c:	cmp	r3, #25
   14650:	addls	r0, r0, #32
   14654:	bx	lr
   14658:	sub	r3, r0, #97	; 0x61
   1465c:	cmp	r3, #25
   14660:	subls	r0, r0, #32
   14664:	bx	lr
   14668:	push	{r4, r5, r6, lr}
   1466c:	mov	r4, r0
   14670:	bl	10e34 <__fpending@plt>
   14674:	mov	r5, r0
   14678:	mov	r0, r4
   1467c:	bl	10e40 <ferror_unlocked@plt>
   14680:	mov	r6, r0
   14684:	mov	r0, r4
   14688:	bl	11f10 <close@plt+0xf50>
   1468c:	cmp	r6, #0
   14690:	mov	r4, r0
   14694:	bne	146c0 <_obstack_memory_used@@Base+0x2148>
   14698:	cmp	r0, #0
   1469c:	beq	146b8 <_obstack_memory_used@@Base+0x2140>
   146a0:	cmp	r5, #0
   146a4:	bne	146d0 <_obstack_memory_used@@Base+0x2158>
   146a8:	bl	10f00 <__errno_location@plt>
   146ac:	ldr	r4, [r0]
   146b0:	subs	r4, r4, #9
   146b4:	mvnne	r4, #0
   146b8:	mov	r0, r4
   146bc:	pop	{r4, r5, r6, pc}
   146c0:	cmp	r0, #0
   146c4:	bne	146d0 <_obstack_memory_used@@Base+0x2158>
   146c8:	bl	10f00 <__errno_location@plt>
   146cc:	str	r4, [r0]
   146d0:	mvn	r4, #0
   146d4:	b	146b8 <_obstack_memory_used@@Base+0x2140>
   146d8:	b	143fc <_obstack_memory_used@@Base+0x1e84>
   146dc:	cmp	r1, #0
   146e0:	orreq	r1, r1, #1
   146e4:	b	14428 <_obstack_memory_used@@Base+0x1eb0>
   146e8:	b	143a8 <_obstack_memory_used@@Base+0x1e30>
   146ec:	cmp	r2, #0
   146f0:	cmpne	r1, #0
   146f4:	moveq	r2, #1
   146f8:	moveq	r1, r2
   146fc:	b	14784 <_obstack_memory_used@@Base+0x220c>
   14700:	push	{r4, lr}
   14704:	mov	r0, #14
   14708:	bl	10f78 <nl_langinfo@plt>
   1470c:	cmp	r0, #0
   14710:	beq	14728 <_obstack_memory_used@@Base+0x21b0>
   14714:	ldrb	r2, [r0]
   14718:	ldr	r3, [pc, #16]	; 14730 <_obstack_memory_used@@Base+0x21b8>
   1471c:	cmp	r2, #0
   14720:	moveq	r0, r3
   14724:	pop	{r4, pc}
   14728:	ldr	r0, [pc]	; 14730 <_obstack_memory_used@@Base+0x21b8>
   1472c:	pop	{r4, pc}
   14730:	andeq	r6, r1, sp, lsr #14
   14734:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14738:	subs	r5, r0, #0
   1473c:	mov	r7, r2
   14740:	addeq	r5, sp, #4
   14744:	mov	r6, r1
   14748:	mov	r0, r5
   1474c:	bl	10e4c <mbrtowc@plt>
   14750:	cmp	r7, #0
   14754:	cmnne	r0, #3
   14758:	mov	r4, r0
   1475c:	bls	14778 <_obstack_memory_used@@Base+0x2200>
   14760:	mov	r0, #0
   14764:	bl	147b0 <_obstack_memory_used@@Base+0x2238>
   14768:	cmp	r0, #0
   1476c:	ldrbeq	r3, [r6]
   14770:	moveq	r4, #1
   14774:	streq	r3, [r5]
   14778:	mov	r0, r4
   1477c:	add	sp, sp, #12
   14780:	pop	{r4, r5, r6, r7, pc}
   14784:	umull	r2, r3, r1, r2
   14788:	cmp	r3, #0
   1478c:	bne	14798 <_obstack_memory_used@@Base+0x2220>
   14790:	mov	r1, r2
   14794:	b	14428 <_obstack_memory_used@@Base+0x1eb0>
   14798:	push	{r4, lr}
   1479c:	bl	10f00 <__errno_location@plt>
   147a0:	mov	r3, #12
   147a4:	str	r3, [r0]
   147a8:	mov	r0, #0
   147ac:	pop	{r4, pc}
   147b0:	push	{lr}		; (str lr, [sp, #-4]!)
   147b4:	sub	sp, sp, #268	; 0x10c
   147b8:	movw	r2, #257	; 0x101
   147bc:	add	r1, sp, #4
   147c0:	bl	1480c <_obstack_memory_used@@Base+0x2294>
   147c4:	cmp	r0, #0
   147c8:	movne	r0, #0
   147cc:	bne	147fc <_obstack_memory_used@@Base+0x2284>
   147d0:	ldr	r1, [pc, #44]	; 14804 <_obstack_memory_used@@Base+0x228c>
   147d4:	add	r0, sp, #4
   147d8:	bl	10d74 <strcmp@plt>
   147dc:	cmp	r0, #0
   147e0:	beq	147f8 <_obstack_memory_used@@Base+0x2280>
   147e4:	ldr	r1, [pc, #28]	; 14808 <_obstack_memory_used@@Base+0x2290>
   147e8:	add	r0, sp, #4
   147ec:	bl	10d74 <strcmp@plt>
   147f0:	adds	r0, r0, #0
   147f4:	movne	r0, #1
   147f8:	and	r0, r0, #1
   147fc:	add	sp, sp, #268	; 0x10c
   14800:	pop	{pc}		; (ldr pc, [sp], #4)
   14804:	andeq	r6, r1, r4, ror #4
   14808:	andeq	r6, r1, r3, lsr r7
   1480c:	push	{r4, r5, r6, lr}
   14810:	mov	r5, r1
   14814:	mov	r1, #0
   14818:	mov	r4, r2
   1481c:	bl	10f60 <setlocale@plt>
   14820:	subs	r6, r0, #0
   14824:	bne	14838 <_obstack_memory_used@@Base+0x22c0>
   14828:	cmp	r4, #0
   1482c:	mov	r0, #22
   14830:	strbne	r6, [r5]
   14834:	pop	{r4, r5, r6, pc}
   14838:	bl	10ef4 <strlen@plt>
   1483c:	cmp	r4, r0
   14840:	bls	1485c <_obstack_memory_used@@Base+0x22e4>
   14844:	add	r2, r0, #1
   14848:	mov	r1, r6
   1484c:	mov	r0, r5
   14850:	bl	10da4 <memcpy@plt>
   14854:	mov	r0, #0
   14858:	pop	{r4, r5, r6, pc}
   1485c:	cmp	r4, #0
   14860:	beq	14880 <_obstack_memory_used@@Base+0x2308>
   14864:	sub	r4, r4, #1
   14868:	mov	r1, r6
   1486c:	mov	r2, r4
   14870:	mov	r0, r5
   14874:	bl	10da4 <memcpy@plt>
   14878:	mov	r3, #0
   1487c:	strb	r3, [r5, r4]
   14880:	mov	r0, #34	; 0x22
   14884:	pop	{r4, r5, r6, pc}
   14888:	mov	r1, #0
   1488c:	b	10f60 <setlocale@plt>
   14890:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14894:	mov	r7, r0
   14898:	ldr	r6, [pc, #72]	; 148e8 <_obstack_memory_used@@Base+0x2370>
   1489c:	ldr	r5, [pc, #72]	; 148ec <_obstack_memory_used@@Base+0x2374>
   148a0:	add	r6, pc, r6
   148a4:	add	r5, pc, r5
   148a8:	sub	r6, r6, r5
   148ac:	mov	r8, r1
   148b0:	mov	r9, r2
   148b4:	bl	10d3c <calloc@plt-0x20>
   148b8:	asrs	r6, r6, #2
   148bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   148c0:	mov	r4, #0
   148c4:	add	r4, r4, #1
   148c8:	ldr	r3, [r5], #4
   148cc:	mov	r2, r9
   148d0:	mov	r1, r8
   148d4:	mov	r0, r7
   148d8:	blx	r3
   148dc:	cmp	r6, r4
   148e0:	bne	148c4 <_obstack_memory_used@@Base+0x234c>
   148e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148e8:	andeq	r2, r1, ip, ror #12
   148ec:	andeq	r2, r1, r4, ror #12
   148f0:	bx	lr
   148f4:	ldr	r3, [pc, #12]	; 14908 <_obstack_memory_used@@Base+0x2390>
   148f8:	mov	r1, #0
   148fc:	add	r3, pc, r3
   14900:	ldr	r2, [r3]
   14904:	b	10f0c <__cxa_atexit@plt>
   14908:	andeq	r2, r1, r0, ror #15

Disassembly of section .fini:

0001490c <.fini>:
   1490c:	push	{r3, lr}
   14910:	pop	{r3, pc}
