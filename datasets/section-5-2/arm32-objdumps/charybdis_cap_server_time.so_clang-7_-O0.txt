
../repos/charybdis/modules/.libs/cap_server_time.so:     file format elf32-littlearm


Disassembly of section .init:

0000044c <_init>:
 44c:	push	{r3, lr}
 450:	bl	4b4 <call_weak_fn>
 454:	pop	{r3, pc}

Disassembly of section .plt:

00000458 <.plt>:
 458:	push	{lr}		; (str lr, [sp, #-4]!)
 45c:	ldr	lr, [pc, #4]	; 468 <.plt+0x10>
 460:	add	lr, pc, lr
 464:	ldr	pc, [lr, #8]!
 468:	.word	0x00010b98

0000046c <__cxa_finalize@plt>:
 46c:	add	ip, pc, #0, 12
 470:	add	ip, ip, #16, 20	; 0x10000
 474:	ldr	pc, [ip, #2968]!	; 0xb98

00000478 <rb_snprintf_append@plt>:
 478:	add	ip, pc, #0, 12
 47c:	add	ip, ip, #16, 20	; 0x10000
 480:	ldr	pc, [ip, #2960]!	; 0xb90

00000484 <strftime@plt>:
 484:	add	ip, pc, #0, 12
 488:	add	ip, ip, #16, 20	; 0x10000
 48c:	ldr	pc, [ip, #2952]!	; 0xb88

00000490 <__gmon_start__@plt>:
 490:	add	ip, pc, #0, 12
 494:	add	ip, ip, #16, 20	; 0x10000
 498:	ldr	pc, [ip, #2944]!	; 0xb80

0000049c <gmtime@plt>:
 49c:	add	ip, pc, #0, 12
 4a0:	add	ip, ip, #16, 20	; 0x10000
 4a4:	ldr	pc, [ip, #2936]!	; 0xb78

000004a8 <rb_gettimeofday@plt>:
 4a8:	add	ip, pc, #0, 12
 4ac:	add	ip, ip, #16, 20	; 0x10000
 4b0:	ldr	pc, [ip, #2928]!	; 0xb70

Disassembly of section .text:

000004b4 <call_weak_fn>:
 4b4:	ldr	r3, [pc, #20]	; 4d0 <call_weak_fn+0x1c>
 4b8:	ldr	r2, [pc, #20]	; 4d4 <call_weak_fn+0x20>
 4bc:	add	r3, pc, r3
 4c0:	ldr	r2, [r3, r2]
 4c4:	cmp	r2, #0
 4c8:	bxeq	lr
 4cc:	b	490 <__gmon_start__@plt>
 4d0:	.word	0x00010b3c
 4d4:	.word	0x00000030

000004d8 <deregister_tm_clones>:
 4d8:	ldr	r0, [pc, #44]	; 50c <deregister_tm_clones+0x34>
 4dc:	ldr	r3, [pc, #44]	; 510 <deregister_tm_clones+0x38>
 4e0:	add	r0, pc, r0
 4e4:	add	r3, pc, r3
 4e8:	cmp	r3, r0
 4ec:	ldr	r3, [pc, #32]	; 514 <deregister_tm_clones+0x3c>
 4f0:	add	r3, pc, r3
 4f4:	bxeq	lr
 4f8:	ldr	r2, [pc, #24]	; 518 <deregister_tm_clones+0x40>
 4fc:	ldr	r3, [r3, r2]
 500:	cmp	r3, #0
 504:	bxeq	lr
 508:	bx	r3
 50c:	.word	0x00010bb4
 510:	.word	0x00010bb0
 514:	.word	0x00010b08
 518:	.word	0x00000028

0000051c <register_tm_clones>:
 51c:	ldr	r0, [pc, #56]	; 55c <register_tm_clones+0x40>
 520:	ldr	r3, [pc, #56]	; 560 <register_tm_clones+0x44>
 524:	add	r0, pc, r0
 528:	add	r3, pc, r3
 52c:	sub	r1, r3, r0
 530:	ldr	r3, [pc, #44]	; 564 <register_tm_clones+0x48>
 534:	asr	r1, r1, #2
 538:	add	r3, pc, r3
 53c:	add	r1, r1, r1, lsr #31
 540:	asrs	r1, r1, #1
 544:	bxeq	lr
 548:	ldr	r2, [pc, #24]	; 568 <register_tm_clones+0x4c>
 54c:	ldr	r3, [r3, r2]
 550:	cmp	r3, #0
 554:	bxeq	lr
 558:	bx	r3
 55c:	.word	0x00010b70
 560:	.word	0x00010b6c
 564:	.word	0x00010ac0
 568:	.word	0x00000034

0000056c <__do_global_dtors_aux>:
 56c:	ldr	r3, [pc, #76]	; 5c0 <__do_global_dtors_aux+0x54>
 570:	ldr	r2, [pc, #76]	; 5c4 <__do_global_dtors_aux+0x58>
 574:	add	r3, pc, r3
 578:	add	r2, pc, r2
 57c:	ldrb	r3, [r3]
 580:	cmp	r3, #0
 584:	bxne	lr
 588:	ldr	r3, [pc, #56]	; 5c8 <__do_global_dtors_aux+0x5c>
 58c:	push	{r4, lr}
 590:	ldr	r3, [r2, r3]
 594:	cmp	r3, #0
 598:	beq	5a8 <__do_global_dtors_aux+0x3c>
 59c:	ldr	r3, [pc, #40]	; 5cc <__do_global_dtors_aux+0x60>
 5a0:	ldr	r0, [pc, r3]
 5a4:	bl	46c <__cxa_finalize@plt>
 5a8:	bl	4d8 <deregister_tm_clones>
 5ac:	ldr	r3, [pc, #28]	; 5d0 <__do_global_dtors_aux+0x64>
 5b0:	mov	r2, #1
 5b4:	add	r3, pc, r3
 5b8:	strb	r2, [r3]
 5bc:	pop	{r4, pc}
 5c0:	.word	0x00010b20
 5c4:	.word	0x00010a80
 5c8:	.word	0x00000024
 5cc:	.word	0x00010a90
 5d0:	.word	0x00010ae0

000005d4 <frame_dummy>:
 5d4:	b	51c <register_tm_clones>

000005d8 <cap_server_time_process>:
 5d8:	push	{fp, lr}
 5dc:	mov	fp, sp
 5e0:	sub	sp, sp, #24
 5e4:	str	r0, [fp, #-4]
 5e8:	ldr	r0, [fp, #-4]
 5ec:	ldr	r0, [r0, #4]
 5f0:	str	r0, [fp, #-8]
 5f4:	add	r0, sp, #8
 5f8:	movw	r1, #0
 5fc:	bl	4a8 <rb_gettimeofday@plt>
 600:	cmp	r0, #0
 604:	bne	6a0 <cap_server_time_process+0xc8>
 608:	add	r0, sp, #8
 60c:	bl	49c <gmtime@plt>
 610:	ldr	lr, [pc, #144]	; 6a8 <cap_server_time_process+0xd0>
 614:	add	lr, pc, lr
 618:	ldr	r1, [pc, #140]	; 6ac <cap_server_time_process+0xd4>
 61c:	add	r2, pc, r1
 620:	str	r0, [sp, #4]
 624:	mov	r0, lr
 628:	movw	r1, #512	; 0x200
 62c:	ldr	r3, [sp, #4]
 630:	bl	484 <strftime@plt>
 634:	cmp	r0, #0
 638:	bne	640 <cap_server_time_process+0x68>
 63c:	b	6a0 <cap_server_time_process+0xc8>
 640:	ldr	r0, [pc, #104]	; 6b0 <cap_server_time_process+0xd8>
 644:	add	r0, pc, r0
 648:	ldr	r1, [pc, #100]	; 6b4 <cap_server_time_process+0xdc>
 64c:	add	r2, pc, r1
 650:	ldr	r1, [sp, #12]
 654:	movw	r3, #1000	; 0x3e8
 658:	sdiv	r3, r1, r3
 65c:	movw	r1, #512	; 0x200
 660:	bl	478 <rb_snprintf_append@plt>
 664:	cmp	r0, #0
 668:	bge	670 <cap_server_time_process+0x98>
 66c:	b	6a0 <cap_server_time_process+0xc8>
 670:	ldr	r0, [pc, #64]	; 6b8 <cap_server_time_process+0xe0>
 674:	add	r1, pc, r0
 678:	ldr	r0, [pc, #60]	; 6bc <cap_server_time_process+0xe4>
 67c:	add	r2, pc, r0
 680:	ldr	r0, [pc, #56]	; 6c0 <cap_server_time_process+0xe8>
 684:	ldr	r0, [pc, r0]
 688:	ldr	r3, [fp, #-8]
 68c:	ldr	r0, [r0]
 690:	str	r0, [sp]
 694:	mov	r0, r3
 698:	ldr	r3, [sp]
 69c:	bl	6c4 <msgbuf_append_tag>
 6a0:	mov	sp, fp
 6a4:	pop	{fp, pc}
 6a8:	.word	0x00010a88
 6ac:	.word	0x00000164
 6b0:	.word	0x00010a58
 6b4:	.word	0x00000147
 6b8:	.word	0x00000107
 6bc:	.word	0x00010a20
 6c0:	.word	0x000109a0

000006c4 <msgbuf_append_tag>:
 6c4:	sub	sp, sp, #16
 6c8:	str	r0, [sp, #12]
 6cc:	str	r1, [sp, #8]
 6d0:	str	r2, [sp, #4]
 6d4:	str	r3, [sp]
 6d8:	ldr	r0, [sp, #12]
 6dc:	ldr	r0, [r0]
 6e0:	cmp	r0, #15
 6e4:	bcs	75c <msgbuf_append_tag+0x98>
 6e8:	ldr	r0, [sp, #8]
 6ec:	ldr	r1, [sp, #12]
 6f0:	add	r1, r1, #4
 6f4:	ldr	r2, [sp, #12]
 6f8:	ldr	r2, [r2]
 6fc:	movw	r3, #12
 700:	mul	r2, r2, r3
 704:	add	r1, r1, r2
 708:	str	r0, [r1]
 70c:	ldr	r0, [sp, #4]
 710:	ldr	r1, [sp, #12]
 714:	add	r1, r1, #4
 718:	ldr	r2, [sp, #12]
 71c:	ldr	r2, [r2]
 720:	mul	r2, r2, r3
 724:	add	r1, r1, r2
 728:	str	r0, [r1, #4]
 72c:	ldr	r0, [sp]
 730:	ldr	r1, [sp, #12]
 734:	add	r1, r1, #4
 738:	ldr	r2, [sp, #12]
 73c:	ldr	r2, [r2]
 740:	mul	r2, r2, r3
 744:	add	r1, r1, r2
 748:	str	r0, [r1, #8]
 74c:	ldr	r0, [sp, #12]
 750:	ldr	r1, [r0]
 754:	add	r1, r1, #1
 758:	str	r1, [r0]
 75c:	add	sp, sp, #16
 760:	bx	lr

Disassembly of section .fini:

00000764 <_fini>:
 764:	push	{r3, lr}
 768:	pop	{r3, pc}
