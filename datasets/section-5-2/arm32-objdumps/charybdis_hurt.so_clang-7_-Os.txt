
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000a58 <_init>:
 a58:	push	{r3, lr}
 a5c:	bl	bf8 <call_weak_fn>
 a60:	pop	{r3, pc}

Disassembly of section .plt:

00000a64 <.plt>:
 a64:	push	{lr}		; (str lr, [sp, #-4]!)
 a68:	ldr	lr, [pc, #4]	; a74 <.plt+0x10>
 a6c:	add	lr, pc, lr
 a70:	ldr	pc, [lr, #8]!
 a74:	.word	0x0001258c

00000a78 <calloc@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1420]!	; 0x58c

00000a84 <get_client_name@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1412]!	; 0x584

00000a90 <rb_current_time@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1404]!	; 0x57c

00000a9c <rb_event_add@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1396]!	; 0x574

00000aa8 <__cxa_finalize@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1388]!	; 0x56c

00000ab4 <sendto_one@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1380]!	; 0x564

00000ac0 <rb_event_delete@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1372]!	; 0x55c

00000acc <free@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1364]!	; 0x554

00000ad8 <rb_strcasecmp@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1356]!	; 0x54c

00000ae4 <rb_outofmemory@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1348]!	; 0x544

00000af0 <sendto_realops_snomask@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1340]!	; 0x53c

00000afc <get_oper_name@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1332]!	; 0x534

00000b08 <rb_free_rb_dlink_node@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1324]!	; 0x52c

00000b14 <strcpy@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1316]!	; 0x524

00000b20 <sendto_server@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1308]!	; 0x51c

00000b2c <malloc@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1300]!	; 0x514

00000b38 <__gmon_start__@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1292]!	; 0x50c

00000b44 <rb_make_rb_dlink_node@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1284]!	; 0x504

00000b50 <sendto_one_numeric@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1276]!	; 0x4fc

00000b5c <strlen@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1268]!	; 0x4f4

00000b68 <strchr@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1260]!	; 0x4ec

00000b74 <clean_nick@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1252]!	; 0x4e4

00000b80 <match@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1244]!	; 0x4dc

00000b8c <find_person@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1236]!	; 0x4d4

00000b98 <valid_temp_time@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1228]!	; 0x4cc

00000ba4 <sendto_one_notice@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1220]!	; 0x4c4

00000bb0 <atoi@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1212]!	; 0x4bc

00000bbc <find_named_person@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1204]!	; 0x4b4

00000bc8 <exit_client@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1196]!	; 0x4ac

00000bd4 <privilegeset_in_set@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1188]!	; 0x4a4

00000be0 <strncmp@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1180]!	; 0x49c

00000bec <__assert_fail@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00000bf8 <call_weak_fn>:
     bf8:	ldr	r3, [pc, #20]	; c14 <call_weak_fn+0x1c>
     bfc:	ldr	r2, [pc, #20]	; c18 <call_weak_fn+0x20>
     c00:	add	r3, pc, r3
     c04:	ldr	r2, [r3, r2]
     c08:	cmp	r2, #0
     c0c:	bxeq	lr
     c10:	b	b38 <__gmon_start__@plt>
     c14:	.word	0x000123f8
     c18:	.word	0x000000a4

00000c1c <deregister_tm_clones>:
     c1c:	ldr	r0, [pc, #44]	; c50 <deregister_tm_clones+0x34>
     c20:	ldr	r3, [pc, #44]	; c54 <deregister_tm_clones+0x38>
     c24:	add	r0, pc, r0
     c28:	add	r3, pc, r3
     c2c:	cmp	r3, r0
     c30:	ldr	r3, [pc, #32]	; c58 <deregister_tm_clones+0x3c>
     c34:	add	r3, pc, r3
     c38:	bxeq	lr
     c3c:	ldr	r2, [pc, #24]	; c5c <deregister_tm_clones+0x40>
     c40:	ldr	r3, [r3, r2]
     c44:	cmp	r3, #0
     c48:	bxeq	lr
     c4c:	bx	r3
     c50:	.word	0x00012598
     c54:	.word	0x00012594
     c58:	.word	0x000123c4
     c5c:	.word	0x00000094

00000c60 <register_tm_clones>:
     c60:	ldr	r0, [pc, #56]	; ca0 <register_tm_clones+0x40>
     c64:	ldr	r3, [pc, #56]	; ca4 <register_tm_clones+0x44>
     c68:	add	r0, pc, r0
     c6c:	add	r3, pc, r3
     c70:	sub	r1, r3, r0
     c74:	ldr	r3, [pc, #44]	; ca8 <register_tm_clones+0x48>
     c78:	asr	r1, r1, #2
     c7c:	add	r3, pc, r3
     c80:	add	r1, r1, r1, lsr #31
     c84:	asrs	r1, r1, #1
     c88:	bxeq	lr
     c8c:	ldr	r2, [pc, #24]	; cac <register_tm_clones+0x4c>
     c90:	ldr	r3, [r3, r2]
     c94:	cmp	r3, #0
     c98:	bxeq	lr
     c9c:	bx	r3
     ca0:	.word	0x00012554
     ca4:	.word	0x00012550
     ca8:	.word	0x0001237c
     cac:	.word	0x000000a8

00000cb0 <__do_global_dtors_aux>:
     cb0:	ldr	r3, [pc, #76]	; d04 <__do_global_dtors_aux+0x54>
     cb4:	ldr	r2, [pc, #76]	; d08 <__do_global_dtors_aux+0x58>
     cb8:	add	r3, pc, r3
     cbc:	add	r2, pc, r2
     cc0:	ldrb	r3, [r3]
     cc4:	cmp	r3, #0
     cc8:	bxne	lr
     ccc:	ldr	r3, [pc, #56]	; d0c <__do_global_dtors_aux+0x5c>
     cd0:	push	{r4, lr}
     cd4:	ldr	r3, [r2, r3]
     cd8:	cmp	r3, #0
     cdc:	beq	cec <__do_global_dtors_aux+0x3c>
     ce0:	ldr	r3, [pc, #40]	; d10 <__do_global_dtors_aux+0x60>
     ce4:	ldr	r0, [pc, r3]
     ce8:	bl	aa8 <__cxa_finalize@plt>
     cec:	bl	c1c <deregister_tm_clones>
     cf0:	ldr	r3, [pc, #28]	; d14 <__do_global_dtors_aux+0x64>
     cf4:	mov	r2, #1
     cf8:	add	r3, pc, r3
     cfc:	strb	r2, [r3]
     d00:	pop	{r4, pc}
     d04:	.word	0x00012504
     d08:	.word	0x0001233c
     d0c:	.word	0x0000008c
     d10:	.word	0x000123c8
     d14:	.word	0x000124c4

00000d18 <frame_dummy>:
     d18:	b	c60 <register_tm_clones>

00000d1c <me_hurt>:
     d1c:	push	{r4, r5, r6, sl, fp, lr}
     d20:	add	fp, sp, #16
     d24:	sub	sp, sp, #16
     d28:	cmp	r3, #4
     d2c:	blt	e40 <me_hurt+0x124>
     d30:	ldrh	r0, [r2, #80]	; 0x50
     d34:	mov	r5, r2
     d38:	cmp	r0, #64	; 0x40
     d3c:	bne	e40 <me_hurt+0x124>
     d40:	ldr	r0, [r5, #24]
     d44:	cmp	r0, #0
     d48:	beq	e40 <me_hurt+0x124>
     d4c:	ldr	r6, [fp, #8]
     d50:	ldr	r0, [r6, #4]
     d54:	bl	bb0 <atoi@plt>
     d58:	cmp	r0, #1
     d5c:	blt	e40 <me_hurt+0x124>
     d60:	mov	r4, r0
     d64:	ldr	r0, [r6, #8]
     d68:	bl	1bbc <hurt_find>
     d6c:	cmp	r0, #0
     d70:	bne	e40 <me_hurt+0x124>
     d74:	ldr	r0, [r6, #12]
     d78:	cmp	r0, #0
     d7c:	ldrbne	r0, [r0]
     d80:	cmpne	r0, #0
     d84:	beq	e40 <me_hurt+0x124>
     d88:	mov	r0, r5
     d8c:	bl	afc <get_oper_name@plt>
     d90:	movw	r2, #34953	; 0x8889
     d94:	mov	r3, r0
     d98:	ldr	r0, [r6, #8]
     d9c:	ldr	r1, [r6, #12]
     da0:	movt	r2, #34952	; 0x8888
     da4:	umull	r2, r5, r4, r2
     da8:	lsr	r2, r5, #5
     dac:	stm	sp, {r0, r2}
     db0:	str	r1, [sp, #8]
     db4:	mov	r0, #256	; 0x100
     db8:	mov	r1, #0
     dbc:	ldr	r2, [pc, #196]	; e88 <me_hurt+0x16c>
     dc0:	add	r2, pc, r2
     dc4:	bl	af0 <sendto_realops_snomask@plt>
     dc8:	ldr	r1, [r6, #8]
     dcc:	ldr	r2, [r6, #12]
     dd0:	mov	r0, r4
     dd4:	bl	1c0c <hurt_new>
     dd8:	mov	r4, r0
     ddc:	bl	b44 <rb_make_rb_dlink_node@plt>
     de0:	cmp	r4, #0
     de4:	beq	e48 <me_hurt+0x12c>
     de8:	cmp	r0, #0
     dec:	beq	e68 <me_hurt+0x14c>
     df0:	mov	r1, #0
     df4:	str	r1, [r0, #4]
     df8:	str	r4, [r0]
     dfc:	ldr	r1, [pc, #136]	; e8c <me_hurt+0x170>
     e00:	ldr	r1, [pc, r1]
     e04:	ldr	r2, [r1]
     e08:	cmp	r2, #0
     e0c:	str	r2, [r0, #8]
     e10:	beq	e20 <me_hurt+0x104>
     e14:	add	r2, r2, #4
     e18:	str	r0, [r2]
     e1c:	b	e30 <me_hurt+0x114>
     e20:	mov	r2, r1
     e24:	ldr	r3, [r2, #4]!
     e28:	cmp	r3, #0
     e2c:	streq	r0, [r2]
     e30:	str	r0, [r1]
     e34:	ldr	r0, [r1, #8]
     e38:	add	r0, r0, #1
     e3c:	str	r0, [r1, #8]
     e40:	sub	sp, fp, #16
     e44:	pop	{r4, r5, r6, sl, fp, pc}
     e48:	ldr	r0, [pc, #64]	; e90 <me_hurt+0x174>
     e4c:	ldr	r1, [pc, #64]	; e94 <me_hurt+0x178>
     e50:	ldr	r3, [pc, #64]	; e98 <me_hurt+0x17c>
     e54:	mov	r2, #143	; 0x8f
     e58:	add	r0, pc, r0
     e5c:	add	r1, pc, r1
     e60:	add	r3, pc, r3
     e64:	bl	bec <__assert_fail@plt>
     e68:	ldr	r0, [pc, #44]	; e9c <me_hurt+0x180>
     e6c:	ldr	r1, [pc, #44]	; ea0 <me_hurt+0x184>
     e70:	ldr	r3, [pc, #44]	; ea4 <me_hurt+0x188>
     e74:	mov	r2, #144	; 0x90
     e78:	add	r0, pc, r0
     e7c:	add	r1, pc, r1
     e80:	add	r3, pc, r3
     e84:	bl	bec <__assert_fail@plt>
     e88:	.word	0x000012f4
     e8c:	.word	0x00012288
     e90:	.word	0x00001155
     e94:	.word	0x00001104
     e98:	.word	0x0000128b
     e9c:	.word	0x0000116d
     ea0:	.word	0x000010e4
     ea4:	.word	0x0000126b

00000ea8 <mo_hurt>:
     ea8:	push	{r4, r5, r6, r7, fp, lr}
     eac:	add	fp, sp, #16
     eb0:	sub	sp, sp, #24
     eb4:	ldr	r0, [r2, #24]
     eb8:	mov	r4, r2
     ebc:	cmp	r0, #0
     ec0:	ldrne	r0, [r0, #36]	; 0x24
     ec4:	cmpne	r0, #0
     ec8:	bne	f00 <mo_hurt+0x58>
     ecc:	ldr	r0, [pc, #756]	; 11c8 <mo_hurt+0x320>
     ed0:	add	r3, r4, #88	; 0x58
     ed4:	add	r0, pc, r0
     ed8:	str	r0, [sp]
     edc:	ldr	r0, [pc, #744]	; 11cc <mo_hurt+0x324>
     ee0:	ldr	r0, [pc, r0]
     ee4:	ldr	r1, [pc, #740]	; 11d0 <mo_hurt+0x328>
     ee8:	add	r2, r0, #88	; 0x58
     eec:	add	r1, pc, r1
     ef0:	mov	r0, r4
     ef4:	bl	ab4 <sendto_one@plt>
     ef8:	sub	sp, fp, #16
     efc:	pop	{r4, r5, r6, r7, fp, pc}
     f00:	ldr	r6, [fp, #8]
     f04:	ldr	r1, [pc, #668]	; 11a8 <mo_hurt+0x300>
     f08:	mov	r5, r3
     f0c:	add	r1, pc, r1
     f10:	bl	bd4 <privilegeset_in_set@plt>
     f14:	cmp	r0, #0
     f18:	beq	ecc <mo_hurt+0x24>
     f1c:	cmp	r5, #3
     f20:	bne	f2c <mo_hurt+0x84>
     f24:	ldmib	r6, {r5, r6}
     f28:	b	f54 <mo_hurt+0xac>
     f2c:	ldmib	r6, {r0, r5, r6}
     f30:	cmp	r0, #0
     f34:	beq	f54 <mo_hurt+0xac>
     f38:	bl	b98 <valid_temp_time@plt>
     f3c:	mov	r7, r0
     f40:	cmp	r0, #0
     f44:	bgt	f58 <mo_hurt+0xb0>
     f48:	ldr	r1, [pc, #608]	; 11b0 <mo_hurt+0x308>
     f4c:	add	r1, pc, r1
     f50:	b	f70 <mo_hurt+0xc8>
     f54:	movw	r7, #10080	; 0x2760
     f58:	cmp	r6, #0
     f5c:	ldrbne	r0, [r6]
     f60:	cmpne	r0, #0
     f64:	bne	f80 <mo_hurt+0xd8>
     f68:	ldr	r1, [pc, #572]	; 11ac <mo_hurt+0x304>
     f6c:	add	r1, pc, r1
     f70:	mov	r0, r4
     f74:	sub	sp, fp, #16
     f78:	pop	{r4, r5, r6, r7, fp, lr}
     f7c:	b	ba4 <sendto_one_notice@plt>
     f80:	mov	r0, r5
     f84:	mov	r1, #46	; 0x2e
     f88:	bl	b68 <strchr@plt>
     f8c:	cmp	r0, #0
     f90:	bne	fa8 <mo_hurt+0x100>
     f94:	mov	r0, r5
     f98:	mov	r1, #58	; 0x3a
     f9c:	bl	b68 <strchr@plt>
     fa0:	cmp	r0, #0
     fa4:	beq	1008 <mo_hurt+0x160>
     fa8:	ldr	r1, [pc, #516]	; 11b4 <mo_hurt+0x30c>
     fac:	mov	r0, r5
     fb0:	mov	r2, #2
     fb4:	add	r1, pc, r1
     fb8:	bl	be0 <strncmp@plt>
     fbc:	cmp	r0, #0
     fc0:	mov	r1, #33	; 0x21
     fc4:	addeq	r5, r5, #2
     fc8:	mov	r0, r5
     fcc:	bl	b68 <strchr@plt>
     fd0:	cmp	r0, #0
     fd4:	bne	fec <mo_hurt+0x144>
     fd8:	mov	r0, r5
     fdc:	mov	r1, #64	; 0x40
     fe0:	bl	b68 <strchr@plt>
     fe4:	cmp	r0, #0
     fe8:	beq	101c <mo_hurt+0x174>
     fec:	ldr	r1, [pc, #484]	; 11d8 <mo_hurt+0x330>
     ff0:	mov	r0, r4
     ff4:	mov	r2, r5
     ff8:	add	r1, pc, r1
     ffc:	sub	sp, fp, #16
    1000:	pop	{r4, r5, r6, r7, fp, lr}
    1004:	b	ba4 <sendto_one_notice@plt>
    1008:	mov	r0, r5
    100c:	bl	bbc <find_named_person@plt>
    1010:	cmp	r0, #0
    1014:	beq	10d8 <mo_hurt+0x230>
    1018:	add	r5, r0, #227	; 0xe3
    101c:	mov	r0, r5
    1020:	bl	1bbc <hurt_find>
    1024:	cmp	r0, #0
    1028:	beq	1048 <mo_hurt+0x1a0>
    102c:	ldr	r1, [pc, #424]	; 11dc <mo_hurt+0x334>
    1030:	mov	r0, r4
    1034:	mov	r2, r5
    1038:	add	r1, pc, r1
    103c:	sub	sp, fp, #16
    1040:	pop	{r4, r5, r6, r7, fp, lr}
    1044:	b	ab4 <sendto_one@plt>
    1048:	mov	r0, r4
    104c:	bl	afc <get_oper_name@plt>
    1050:	mov	r3, r0
    1054:	movw	r0, #34953	; 0x8889
    1058:	str	r5, [sp]
    105c:	movt	r0, #34952	; 0x8888
    1060:	umull	r0, r1, r7, r0
    1064:	lsr	r0, r1, #5
    1068:	mov	r1, #0
    106c:	stmib	sp, {r0, r6}
    1070:	mov	r0, #256	; 0x100
    1074:	ldr	r2, [pc, #316]	; 11b8 <mo_hurt+0x310>
    1078:	add	r2, pc, r2
    107c:	bl	af0 <sendto_realops_snomask@plt>
    1080:	mov	r0, r7
    1084:	mov	r1, r5
    1088:	mov	r2, r6
    108c:	bl	1c0c <hurt_new>
    1090:	mov	r5, r0
    1094:	bl	b44 <rb_make_rb_dlink_node@plt>
    1098:	cmp	r5, #0
    109c:	beq	1168 <mo_hurt+0x2c0>
    10a0:	cmp	r0, #0
    10a4:	beq	1188 <mo_hurt+0x2e0>
    10a8:	mov	r1, #0
    10ac:	str	r1, [r0, #4]
    10b0:	str	r5, [r0]
    10b4:	ldr	r1, [pc, #256]	; 11bc <mo_hurt+0x314>
    10b8:	ldr	r1, [pc, r1]
    10bc:	ldr	r2, [r1]
    10c0:	cmp	r2, #0
    10c4:	str	r2, [r0, #8]
    10c8:	beq	10f8 <mo_hurt+0x250>
    10cc:	add	r2, r2, #4
    10d0:	str	r0, [r2]
    10d4:	b	1108 <mo_hurt+0x260>
    10d8:	ldr	r2, [pc, #244]	; 11d4 <mo_hurt+0x32c>
    10dc:	mov	r0, r4
    10e0:	movw	r1, #401	; 0x191
    10e4:	mov	r3, r5
    10e8:	add	r2, pc, r2
    10ec:	sub	sp, fp, #16
    10f0:	pop	{r4, r5, r6, r7, fp, lr}
    10f4:	b	b50 <sendto_one_numeric@plt>
    10f8:	mov	r2, r1
    10fc:	ldr	r3, [r2, #4]!
    1100:	cmp	r3, #0
    1104:	streq	r0, [r2]
    1108:	str	r0, [r1]
    110c:	ldr	r6, [r5, #16]
    1110:	ldr	r0, [r1, #8]
    1114:	add	r0, r0, #1
    1118:	str	r0, [r1, #8]
    111c:	bl	a90 <rb_current_time@plt>
    1120:	ldr	r1, [r5]
    1124:	ldr	r2, [r5, #12]
    1128:	ldr	r7, [pc, #144]	; 11c0 <mo_hurt+0x318>
    112c:	add	r3, r4, #88	; 0x58
    1130:	sub	r0, r6, r0
    1134:	str	r3, [sp, #4]
    1138:	add	r3, sp, #8
    113c:	add	r7, pc, r7
    1140:	str	r7, [sp]
    1144:	stm	r3, {r0, r1, r2}
    1148:	mov	r1, #0
    114c:	mov	r2, #0
    1150:	mov	r3, #0
    1154:	ldr	r0, [pc, #104]	; 11c4 <mo_hurt+0x31c>
    1158:	ldr	r0, [pc, r0]
    115c:	bl	b20 <sendto_server@plt>
    1160:	sub	sp, fp, #16
    1164:	pop	{r4, r5, r6, r7, fp, pc}
    1168:	ldr	r0, [pc, #112]	; 11e0 <mo_hurt+0x338>
    116c:	ldr	r1, [pc, #112]	; 11e4 <mo_hurt+0x33c>
    1170:	ldr	r3, [pc, #112]	; 11e8 <mo_hurt+0x340>
    1174:	mov	r2, #143	; 0x8f
    1178:	add	r0, pc, r0
    117c:	add	r1, pc, r1
    1180:	add	r3, pc, r3
    1184:	bl	bec <__assert_fail@plt>
    1188:	ldr	r0, [pc, #92]	; 11ec <mo_hurt+0x344>
    118c:	ldr	r1, [pc, #92]	; 11f0 <mo_hurt+0x348>
    1190:	ldr	r3, [pc, #92]	; 11f4 <mo_hurt+0x34c>
    1194:	mov	r2, #144	; 0x90
    1198:	add	r0, pc, r0
    119c:	add	r1, pc, r1
    11a0:	add	r3, pc, r3
    11a4:	bl	bec <__assert_fail@plt>
    11a8:	.word	0x000010e3
    11ac:	.word	0x000010d8
    11b0:	.word	0x000010d5
    11b4:	.word	0x000010d2
    11b8:	.word	0x0000103c
    11bc:	.word	0x00011fd0
    11c0:	.word	0x00000fea
    11c4:	.word	0x00011f4c
    11c8:	.word	0x00001120
    11cc:	.word	0x000121c4
    11d0:	.word	0x0000110e
    11d4:	.word	0x00000f85
    11d8:	.word	0x00001091
    11dc:	.word	0x00001069
    11e0:	.word	0x00000e35
    11e4:	.word	0x00000de4
    11e8:	.word	0x00000f6b
    11ec:	.word	0x00000e4d
    11f0:	.word	0x00000dc4
    11f4:	.word	0x00000f4b

000011f8 <me_heal>:
    11f8:	push	{r4, r5, r6, sl, fp, lr}
    11fc:	add	fp, sp, #16
    1200:	sub	sp, sp, #8
    1204:	cmp	r3, #2
    1208:	bge	1214 <me_heal+0x1c>
    120c:	sub	sp, fp, #16
    1210:	pop	{r4, r5, r6, sl, fp, pc}
    1214:	ldr	r6, [fp, #8]
    1218:	mov	r1, #0
    121c:	mov	r4, r2
    1220:	ldr	r0, [r6, #4]
    1224:	bl	b74 <clean_nick@plt>
    1228:	ldr	r5, [r6, #4]
    122c:	cmp	r0, #0
    1230:	beq	1264 <me_heal+0x6c>
    1234:	mov	r0, r5
    1238:	bl	b8c <find_person@plt>
    123c:	cmp	r0, #0
    1240:	beq	120c <me_heal+0x14>
    1244:	mov	r1, r0
    1248:	ldrb	r0, [r0, #65]	; 0x41
    124c:	tst	r0, #32
    1250:	beq	120c <me_heal+0x14>
    1254:	mov	r0, r4
    1258:	sub	sp, fp, #16
    125c:	pop	{r4, r5, r6, sl, fp, lr}
    1260:	b	1ca0 <heal_nick>
    1264:	mov	r0, r5
    1268:	mov	r1, #46	; 0x2e
    126c:	bl	b68 <strchr@plt>
    1270:	cmp	r0, #0
    1274:	beq	120c <me_heal+0x14>
    1278:	mov	r0, r5
    127c:	bl	1dec <hurt_find_exact>
    1280:	cmp	r0, #0
    1284:	beq	120c <me_heal+0x14>
    1288:	ldr	r0, [r6, #4]
    128c:	bl	1e3c <hurt_remove>
    1290:	mov	r0, r4
    1294:	bl	afc <get_oper_name@plt>
    1298:	mov	r3, r0
    129c:	ldr	r0, [r6, #4]
    12a0:	mov	r1, #0
    12a4:	str	r0, [sp]
    12a8:	mov	r0, #256	; 0x100
    12ac:	ldr	r2, [pc, #8]	; 12bc <me_heal+0xc4>
    12b0:	add	r2, pc, r2
    12b4:	bl	af0 <sendto_realops_snomask@plt>
    12b8:	b	120c <me_heal+0x14>
    12bc:	.word	0x00000ecb

000012c0 <mo_heal>:
    12c0:	push	{r4, r5, r6, sl, fp, lr}
    12c4:	add	fp, sp, #16
    12c8:	sub	sp, sp, #16
    12cc:	ldr	r0, [r2, #24]
    12d0:	mov	r4, r2
    12d4:	cmp	r0, #0
    12d8:	ldrne	r0, [r0, #36]	; 0x24
    12dc:	cmpne	r0, #0
    12e0:	bne	1318 <mo_heal+0x58>
    12e4:	ldr	r0, [pc, #476]	; 14c8 <mo_heal+0x208>
    12e8:	add	r3, r4, #88	; 0x58
    12ec:	add	r0, pc, r0
    12f0:	str	r0, [sp]
    12f4:	ldr	r0, [pc, #464]	; 14cc <mo_heal+0x20c>
    12f8:	ldr	r0, [pc, r0]
    12fc:	ldr	r1, [pc, #460]	; 14d0 <mo_heal+0x210>
    1300:	add	r2, r0, #88	; 0x58
    1304:	add	r1, pc, r1
    1308:	mov	r0, r4
    130c:	bl	ab4 <sendto_one@plt>
    1310:	sub	sp, fp, #16
    1314:	pop	{r4, r5, r6, sl, fp, pc}
    1318:	ldr	r6, [fp, #8]
    131c:	ldr	r1, [pc, #416]	; 14c4 <mo_heal+0x204>
    1320:	add	r1, pc, r1
    1324:	bl	bd4 <privilegeset_in_set@plt>
    1328:	cmp	r0, #0
    132c:	beq	12e4 <mo_heal+0x24>
    1330:	ldr	r0, [r6, #4]
    1334:	mov	r1, #0
    1338:	bl	b74 <clean_nick@plt>
    133c:	ldr	r5, [r6, #4]
    1340:	cmp	r0, #0
    1344:	beq	13a4 <mo_heal+0xe4>
    1348:	mov	r0, r5
    134c:	bl	bbc <find_named_person@plt>
    1350:	cmp	r0, #0
    1354:	beq	1434 <mo_heal+0x174>
    1358:	mov	r2, r0
    135c:	ldrb	r0, [r0, #65]	; 0x41
    1360:	tst	r0, #32
    1364:	bne	1454 <mo_heal+0x194>
    1368:	ldr	r0, [r2, #36]	; 0x24
    136c:	ldrh	r1, [r0, #80]	; 0x50
    1370:	cmp	r1, #32
    1374:	bne	1484 <mo_heal+0x1c4>
    1378:	ldrb	r0, [r0, #396]	; 0x18c
    137c:	cmp	r0, #0
    1380:	beq	1484 <mo_heal+0x1c4>
    1384:	mov	r0, r2
    1388:	ldrb	r1, [r0, #396]!	; 0x18c
    138c:	cmp	r1, #0
    1390:	ldrb	r1, [r4, #396]!	; 0x18c
    1394:	subeq	r0, r0, #308	; 0x134
    1398:	cmp	r1, #0
    139c:	subeq	r4, r4, #308	; 0x134
    13a0:	b	148c <mo_heal+0x1cc>
    13a4:	mov	r0, r5
    13a8:	mov	r1, #46	; 0x2e
    13ac:	bl	b68 <strchr@plt>
    13b0:	cmp	r0, #0
    13b4:	beq	1468 <mo_heal+0x1a8>
    13b8:	mov	r0, r5
    13bc:	bl	1dec <hurt_find_exact>
    13c0:	ldr	r2, [r6, #4]
    13c4:	cmp	r0, #0
    13c8:	beq	14ac <mo_heal+0x1ec>
    13cc:	mov	r0, r2
    13d0:	bl	1e3c <hurt_remove>
    13d4:	mov	r0, r4
    13d8:	bl	afc <get_oper_name@plt>
    13dc:	mov	r3, r0
    13e0:	ldr	r0, [r6, #4]
    13e4:	mov	r1, #0
    13e8:	str	r0, [sp]
    13ec:	mov	r0, #256	; 0x100
    13f0:	ldr	r2, [pc, #224]	; 14d8 <mo_heal+0x218>
    13f4:	add	r2, pc, r2
    13f8:	bl	af0 <sendto_realops_snomask@plt>
    13fc:	ldr	r0, [r6, #4]
    1400:	ldr	r2, [pc, #212]	; 14dc <mo_heal+0x21c>
    1404:	add	r1, r4, #88	; 0x58
    1408:	mov	r3, #0
    140c:	str	r1, [sp, #4]
    1410:	mov	r1, #0
    1414:	add	r2, pc, r2
    1418:	str	r0, [sp, #8]
    141c:	mov	r0, #0
    1420:	str	r2, [sp]
    1424:	mov	r2, #0
    1428:	bl	b20 <sendto_server@plt>
    142c:	sub	sp, fp, #16
    1430:	pop	{r4, r5, r6, sl, fp, pc}
    1434:	ldr	r3, [r6, #4]
    1438:	ldr	r2, [pc, #164]	; 14e4 <mo_heal+0x224>
    143c:	mov	r0, r4
    1440:	movw	r1, #401	; 0x191
    1444:	add	r2, pc, r2
    1448:	sub	sp, fp, #16
    144c:	pop	{r4, r5, r6, sl, fp, lr}
    1450:	b	b50 <sendto_one_numeric@plt>
    1454:	mov	r0, r4
    1458:	mov	r1, r2
    145c:	sub	sp, fp, #16
    1460:	pop	{r4, r5, r6, sl, fp, lr}
    1464:	b	1ca0 <heal_nick>
    1468:	ldr	r1, [pc, #112]	; 14e0 <mo_heal+0x220>
    146c:	mov	r0, r4
    1470:	mov	r2, r5
    1474:	add	r1, pc, r1
    1478:	sub	sp, fp, #16
    147c:	pop	{r4, r5, r6, sl, fp, lr}
    1480:	b	ab4 <sendto_one@plt>
    1484:	add	r0, r2, #88	; 0x58
    1488:	add	r4, r4, #88	; 0x58
    148c:	ldr	r1, [r2, #32]
    1490:	str	r0, [sp]
    1494:	mov	r0, r2
    1498:	mov	r2, r4
    149c:	add	r3, r1, #88	; 0x58
    14a0:	ldr	r1, [pc, #44]	; 14d4 <mo_heal+0x214>
    14a4:	add	r1, pc, r1
    14a8:	b	130c <mo_heal+0x4c>
    14ac:	ldr	r1, [pc, #52]	; 14e8 <mo_heal+0x228>
    14b0:	mov	r0, r4
    14b4:	add	r1, pc, r1
    14b8:	sub	sp, fp, #16
    14bc:	pop	{r4, r5, r6, sl, fp, lr}
    14c0:	b	ba4 <sendto_one_notice@plt>
    14c4:	.word	0x00000e22
    14c8:	.word	0x00000e5b
    14cc:	.word	0x00011dac
    14d0:	.word	0x00000cf6
    14d4:	.word	0x00000cab
    14d8:	.word	0x00000d87
    14dc:	.word	0x00000d7d
    14e0:	.word	0x00000d31
    14e4:	.word	0x00000c29
    14e8:	.word	0x00000cb0

000014ec <client_exit_hook>:
    14ec:	ldr	r3, [r0, #4]
    14f0:	cmp	r3, #0
    14f4:	beq	1560 <client_exit_hook+0x74>
    14f8:	ldr	ip, [pc, #136]	; 1588 <client_exit_hook+0x9c>
    14fc:	ldr	ip, [pc, ip]
    1500:	ldr	r2, [ip, #8]
    1504:	cmp	r2, #0
    1508:	bxeq	lr
    150c:	ldr	r1, [r2]
    1510:	mov	r0, r2
    1514:	ldr	r2, [r2, #8]
    1518:	cmp	r1, r3
    151c:	bne	1504 <client_exit_hook+0x18>
    1520:	ldr	r3, [r0, #4]
    1524:	cmp	r2, #0
    1528:	streq	r3, [ip, #12]
    152c:	strne	r3, [r2, #4]
    1530:	ldrne	r3, [r0, #4]
    1534:	add	r1, r3, #8
    1538:	cmp	r3, #0
    153c:	addeq	r1, ip, #8
    1540:	str	r2, [r1]
    1544:	mov	r1, #0
    1548:	str	r1, [r0, #4]
    154c:	str	r1, [r0, #8]
    1550:	ldr	r1, [ip, #16]
    1554:	sub	r1, r1, #1
    1558:	str	r1, [ip, #16]
    155c:	b	b08 <rb_free_rb_dlink_node@plt>
    1560:	push	{fp, lr}
    1564:	mov	fp, sp
    1568:	ldr	r0, [pc, #28]	; 158c <client_exit_hook+0xa0>
    156c:	ldr	r1, [pc, #28]	; 1590 <client_exit_hook+0xa4>
    1570:	ldr	r3, [pc, #28]	; 1594 <client_exit_hook+0xa8>
    1574:	mov	r2, #288	; 0x120
    1578:	add	r0, pc, r0
    157c:	add	r1, pc, r1
    1580:	add	r3, pc, r3
    1584:	bl	bec <__assert_fail@plt>
    1588:	.word	0x00011b98
    158c:	.word	0x00000a35
    1590:	.word	0x000009e4
    1594:	.word	0x000009fc

00001598 <new_local_user_hook>:
    1598:	push	{r4, r5, fp, lr}
    159c:	add	fp, sp, #8
    15a0:	mov	r5, r0
    15a4:	mov	r4, r0
    15a8:	movw	r1, #16418	; 0x4022
    15ac:	ldr	r0, [r5, #64]!	; 0x40
    15b0:	tst	r0, r1
    15b4:	bne	15cc <new_local_user_hook+0x34>
    15b8:	tst	r0, #4194304	; 0x400000
    15bc:	ldreq	r0, [r4, #24]
    15c0:	ldrbeq	r0, [r0, #40]	; 0x28
    15c4:	cmpeq	r0, #0
    15c8:	beq	15d0 <new_local_user_hook+0x38>
    15cc:	pop	{r4, r5, fp, pc}
    15d0:	movw	r0, #291	; 0x123
    15d4:	add	r0, r4, r0
    15d8:	bl	1bbc <hurt_find>
    15dc:	cmp	r0, #0
    15e0:	bne	15f4 <new_local_user_hook+0x5c>
    15e4:	add	r0, r4, #227	; 0xe3
    15e8:	bl	1bbc <hurt_find>
    15ec:	cmp	r0, #0
    15f0:	popeq	{r4, r5, fp, pc}
    15f4:	bl	a90 <rb_current_time@plt>
    15f8:	ldr	r1, [r4, #432]	; 0x1b0
    15fc:	add	r0, r0, #600	; 0x258
    1600:	str	r0, [r1, #416]	; 0x1a0
    1604:	ldr	r0, [r5]
    1608:	orr	r0, r0, #65536	; 0x10000
    160c:	str	r0, [r5]
    1610:	bl	b44 <rb_make_rb_dlink_node@plt>
    1614:	cmp	r0, #0
    1618:	beq	1680 <new_local_user_hook+0xe8>
    161c:	mov	r1, #0
    1620:	str	r1, [r0, #4]
    1624:	str	r4, [r0]
    1628:	ldr	r1, [pc, #112]	; 16a0 <new_local_user_hook+0x108>
    162c:	ldr	r1, [pc, r1]
    1630:	ldr	r2, [r1, #8]
    1634:	cmp	r2, #0
    1638:	str	r2, [r0, #8]
    163c:	beq	164c <new_local_user_hook+0xb4>
    1640:	add	r2, r2, #4
    1644:	str	r0, [r2]
    1648:	b	165c <new_local_user_hook+0xc4>
    164c:	mov	r2, r1
    1650:	ldr	r3, [r2, #12]!
    1654:	cmp	r3, #0
    1658:	streq	r0, [r2]
    165c:	str	r0, [r1, #8]
    1660:	ldr	r0, [r1, #16]
    1664:	add	r0, r0, #1
    1668:	str	r0, [r1, #16]
    166c:	mov	r0, r4
    1670:	ldr	r1, [pc, #44]	; 16a4 <new_local_user_hook+0x10c>
    1674:	add	r1, pc, r1
    1678:	pop	{r4, r5, fp, lr}
    167c:	b	ba4 <sendto_one_notice@plt>
    1680:	ldr	r0, [pc, #32]	; 16a8 <new_local_user_hook+0x110>
    1684:	ldr	r1, [pc, #32]	; 16ac <new_local_user_hook+0x114>
    1688:	ldr	r3, [pc, #32]	; 16b0 <new_local_user_hook+0x118>
    168c:	mov	r2, #144	; 0x90
    1690:	add	r0, pc, r0
    1694:	add	r1, pc, r1
    1698:	add	r3, pc, r3
    169c:	bl	bec <__assert_fail@plt>
    16a0:	.word	0x00011a68
    16a4:	.word	0x00000bd8
    16a8:	.word	0x00000955
    16ac:	.word	0x000008cc
    16b0:	.word	0x00000a53

000016b4 <doing_stats_hook>:
    16b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    16b8:	add	fp, sp, #24
    16bc:	sub	sp, sp, #24
    16c0:	ldr	r1, [r0, #8]
    16c4:	cmp	r1, #115	; 0x73
    16c8:	bne	1860 <doing_stats_hook+0x1ac>
    16cc:	ldr	r8, [r0]
    16d0:	ldr	r5, [pc, #400]	; 1868 <doing_stats_hook+0x1b4>
    16d4:	ldr	r5, [pc, r5]
    16d8:	ldr	r0, [r5, #164]	; 0xa4
    16dc:	cmp	r0, #2
    16e0:	bne	1734 <doing_stats_hook+0x80>
    16e4:	ldr	r0, [r8, #24]
    16e8:	cmp	r0, #0
    16ec:	ldrne	r0, [r0, #36]	; 0x24
    16f0:	cmpne	r0, #0
    16f4:	bne	171c <doing_stats_hook+0x68>
    16f8:	ldrb	r0, [r8, #57]	; 0x39
    16fc:	tst	r0, #16
    1700:	ldrne	r0, [r8, #24]
    1704:	cmpne	r0, #0
    1708:	beq	1860 <doing_stats_hook+0x1ac>
    170c:	ldr	r0, [r0, #36]	; 0x24
    1710:	cmp	r0, #0
    1714:	bne	1860 <doing_stats_hook+0x1ac>
    1718:	b	1730 <doing_stats_hook+0x7c>
    171c:	ldr	r1, [pc, #328]	; 186c <doing_stats_hook+0x1b8>
    1720:	add	r1, pc, r1
    1724:	bl	bd4 <privilegeset_in_set@plt>
    1728:	cmp	r0, #0
    172c:	beq	16f8 <doing_stats_hook+0x44>
    1730:	ldr	r0, [r5, #164]	; 0xa4
    1734:	cmp	r0, #1
    1738:	bne	17f4 <doing_stats_hook+0x140>
    173c:	ldr	r0, [r8, #24]
    1740:	cmp	r0, #0
    1744:	ldrne	r0, [r0, #36]	; 0x24
    1748:	cmpne	r0, #0
    174c:	bne	17d0 <doing_stats_hook+0x11c>
    1750:	ldrb	r0, [r8, #57]	; 0x39
    1754:	tst	r0, #16
    1758:	ldrne	r0, [r8, #24]
    175c:	cmpne	r0, #0
    1760:	bne	17e8 <doing_stats_hook+0x134>
    1764:	movw	r0, #291	; 0x123
    1768:	add	r0, r8, r0
    176c:	bl	1bbc <hurt_find>
    1770:	cmp	r0, #0
    1774:	bne	1788 <doing_stats_hook+0xd4>
    1778:	add	r0, r8, #227	; 0xe3
    177c:	bl	1bbc <hurt_find>
    1780:	cmp	r0, #0
    1784:	beq	1860 <doing_stats_hook+0x1ac>
    1788:	ldr	r1, [r0]
    178c:	ldr	r0, [r0, #12]
    1790:	ldr	r2, [pc, #220]	; 1874 <doing_stats_hook+0x1c0>
    1794:	ldr	r3, [pc, #220]	; 1878 <doing_stats_hook+0x1c4>
    1798:	add	r2, pc, r2
    179c:	add	r3, pc, r3
    17a0:	str	r1, [sp, #4]
    17a4:	str	r0, [sp, #8]
    17a8:	mov	r0, r8
    17ac:	mov	r1, #216	; 0xd8
    17b0:	str	r3, [sp]
    17b4:	str	r2, [sp, #12]
    17b8:	str	r2, [sp, #16]
    17bc:	mov	r3, #115	; 0x73
    17c0:	ldr	r2, [pc, #180]	; 187c <doing_stats_hook+0x1c8>
    17c4:	add	r2, pc, r2
    17c8:	bl	b50 <sendto_one_numeric@plt>
    17cc:	b	1860 <doing_stats_hook+0x1ac>
    17d0:	ldr	r1, [pc, #152]	; 1870 <doing_stats_hook+0x1bc>
    17d4:	add	r1, pc, r1
    17d8:	bl	bd4 <privilegeset_in_set@plt>
    17dc:	cmp	r0, #0
    17e0:	bne	17f4 <doing_stats_hook+0x140>
    17e4:	b	1750 <doing_stats_hook+0x9c>
    17e8:	ldr	r0, [r0, #36]	; 0x24
    17ec:	cmp	r0, #0
    17f0:	bne	1764 <doing_stats_hook+0xb0>
    17f4:	ldr	r0, [pc, #132]	; 1880 <doing_stats_hook+0x1cc>
    17f8:	ldr	r0, [pc, r0]
    17fc:	ldr	r6, [r0]
    1800:	cmp	r6, #0
    1804:	beq	1860 <doing_stats_hook+0x1ac>
    1808:	ldr	r7, [pc, #116]	; 1884 <doing_stats_hook+0x1d0>
    180c:	ldr	r4, [pc, #116]	; 1888 <doing_stats_hook+0x1d4>
    1810:	ldr	r5, [pc, #116]	; 188c <doing_stats_hook+0x1d8>
    1814:	add	r7, pc, r7
    1818:	add	r4, pc, r4
    181c:	add	r5, pc, r5
    1820:	ldr	r0, [r6]
    1824:	mov	r2, r5
    1828:	mov	r3, #115	; 0x73
    182c:	ldr	r1, [r0]
    1830:	ldr	r0, [r0, #12]
    1834:	str	r4, [sp]
    1838:	str	r7, [sp, #12]
    183c:	str	r7, [sp, #16]
    1840:	str	r1, [sp, #4]
    1844:	str	r0, [sp, #8]
    1848:	mov	r0, r8
    184c:	mov	r1, #216	; 0xd8
    1850:	bl	b50 <sendto_one_numeric@plt>
    1854:	ldr	r6, [r6, #8]
    1858:	cmp	r6, #0
    185c:	bne	1820 <doing_stats_hook+0x16c>
    1860:	sub	sp, fp, #24
    1864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1868:	.word	0x000119d4
    186c:	.word	0x00000b84
    1870:	.word	0x00000ad0
    1874:	.word	0x00000814
    1878:	.word	0x00000b28
    187c:	.word	0x00000aed
    1880:	.word	0x00011890
    1884:	.word	0x00000798
    1888:	.word	0x00000aac
    188c:	.word	0x00000a95

00001890 <modinit>:
    1890:	push	{fp, lr}
    1894:	mov	fp, sp
    1898:	bl	a90 <rb_current_time@plt>
    189c:	ldr	r1, [pc, #92]	; 1900 <modinit+0x70>
    18a0:	mov	r2, #0
    18a4:	mov	r3, #60	; 0x3c
    18a8:	ldr	r1, [pc, r1]
    18ac:	str	r0, [r1]
    18b0:	ldr	r0, [pc, #76]	; 1904 <modinit+0x74>
    18b4:	ldr	r1, [pc, #76]	; 1908 <modinit+0x78>
    18b8:	add	r0, pc, r0
    18bc:	add	r1, pc, r1
    18c0:	bl	a9c <rb_event_add@plt>
    18c4:	ldr	r1, [pc, #64]	; 190c <modinit+0x7c>
    18c8:	mov	r2, #0
    18cc:	mov	r3, #5
    18d0:	ldr	r1, [pc, r1]
    18d4:	str	r0, [r1]
    18d8:	ldr	r0, [pc, #48]	; 1910 <modinit+0x80>
    18dc:	ldr	r1, [pc, #48]	; 1914 <modinit+0x84>
    18e0:	add	r0, pc, r0
    18e4:	add	r1, pc, r1
    18e8:	bl	a9c <rb_event_add@plt>
    18ec:	ldr	r1, [pc, #36]	; 1918 <modinit+0x88>
    18f0:	ldr	r1, [pc, r1]
    18f4:	str	r0, [r1]
    18f8:	mov	r0, #0
    18fc:	pop	{fp, pc}
    1900:	.word	0x000117ec
    1904:	.word	0x00000691
    1908:	.word	0x000000f0
    190c:	.word	0x000117c0
    1910:	.word	0x00000675
    1914:	.word	0x000001a8
    1918:	.word	0x000117a8

0000191c <modfini>:
    191c:	push	{r4, r5, r6, sl, fp, lr}
    1920:	add	fp, sp, #16
    1924:	ldr	r0, [pc, #124]	; 19a8 <modfini+0x8c>
    1928:	ldr	r0, [pc, r0]
    192c:	ldr	r0, [r0]
    1930:	bl	ac0 <rb_event_delete@plt>
    1934:	ldr	r0, [pc, #112]	; 19ac <modfini+0x90>
    1938:	ldr	r0, [pc, r0]
    193c:	ldr	r0, [r0]
    1940:	bl	ac0 <rb_event_delete@plt>
    1944:	ldr	r4, [pc, #100]	; 19b0 <modfini+0x94>
    1948:	ldr	r4, [pc, r4]
    194c:	ldr	r0, [r4, #8]
    1950:	cmp	r0, #0
    1954:	popeq	{r4, r5, r6, sl, fp, pc}
    1958:	mov	r5, #0
    195c:	ldmib	r0, {r1, r6}
    1960:	cmp	r6, #0
    1964:	streq	r1, [r4, #12]
    1968:	strne	r1, [r6, #4]
    196c:	ldrne	r1, [r0, #4]
    1970:	add	r2, r1, #8
    1974:	cmp	r1, #0
    1978:	addeq	r2, r4, #8
    197c:	str	r6, [r2]
    1980:	str	r5, [r0, #4]
    1984:	str	r5, [r0, #8]
    1988:	ldr	r1, [r4, #16]
    198c:	sub	r1, r1, #1
    1990:	str	r1, [r4, #16]
    1994:	bl	b08 <rb_free_rb_dlink_node@plt>
    1998:	cmp	r6, #0
    199c:	mov	r0, r6
    19a0:	bne	195c <modfini+0x40>
    19a4:	pop	{r4, r5, r6, sl, fp, pc}
    19a8:	.word	0x00011768
    19ac:	.word	0x00011760
    19b0:	.word	0x0001174c

000019b4 <hurt_expire_event>:
    19b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    19b8:	add	fp, sp, #24
    19bc:	ldr	r5, [pc, #192]	; 1a84 <hurt_expire_event+0xd0>
    19c0:	ldr	r5, [pc, r5]
    19c4:	ldr	r6, [r5]
    19c8:	cmp	r6, #0
    19cc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    19d0:	mov	r8, #0
    19d4:	ldr	r4, [r6]
    19d8:	ldr	r6, [r6, #8]
    19dc:	ldr	r7, [r4, #16]
    19e0:	bl	a90 <rb_current_time@plt>
    19e4:	cmp	r7, r0
    19e8:	bgt	1a58 <hurt_expire_event+0xa4>
    19ec:	cmp	r4, #0
    19f0:	beq	1a64 <hurt_expire_event+0xb0>
    19f4:	ldr	r1, [r5]
    19f8:	cmp	r1, #0
    19fc:	beq	1a50 <hurt_expire_event+0x9c>
    1a00:	ldr	r2, [r1]
    1a04:	mov	r0, r1
    1a08:	ldr	r1, [r1, #8]
    1a0c:	cmp	r2, r4
    1a10:	bne	19f8 <hurt_expire_event+0x44>
    1a14:	ldr	r2, [r0, #4]
    1a18:	cmp	r1, #0
    1a1c:	mov	r3, r5
    1a20:	streq	r2, [r5, #4]
    1a24:	strne	r2, [r1, #4]
    1a28:	ldrne	r2, [r0, #4]
    1a2c:	cmp	r2, #0
    1a30:	addne	r3, r2, #8
    1a34:	str	r1, [r3]
    1a38:	str	r8, [r0, #4]
    1a3c:	str	r8, [r0, #8]
    1a40:	ldr	r1, [r5, #8]
    1a44:	sub	r1, r1, #1
    1a48:	str	r1, [r5, #8]
    1a4c:	bl	b08 <rb_free_rb_dlink_node@plt>
    1a50:	mov	r0, r4
    1a54:	bl	1b7c <hurt_destroy>
    1a58:	cmp	r6, #0
    1a5c:	bne	19d4 <hurt_expire_event+0x20>
    1a60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a64:	ldr	r0, [pc, #28]	; 1a88 <hurt_expire_event+0xd4>
    1a68:	ldr	r1, [pc, #28]	; 1a8c <hurt_expire_event+0xd8>
    1a6c:	ldr	r3, [pc, #28]	; 1a90 <hurt_expire_event+0xdc>
    1a70:	mov	r2, #288	; 0x120
    1a74:	add	r0, pc, r0
    1a78:	add	r1, pc, r1
    1a7c:	add	r3, pc, r3
    1a80:	bl	bec <__assert_fail@plt>
    1a84:	.word	0x000116c8
    1a88:	.word	0x00000539
    1a8c:	.word	0x000004e8
    1a90:	.word	0x00000500

00001a94 <hurt_check_event>:
    1a94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1a98:	add	fp, sp, #24
    1a9c:	ldr	r7, [pc, #204]	; 1b70 <hurt_check_event+0xdc>
    1aa0:	ldr	r7, [pc, r7]
    1aa4:	ldr	r4, [r7, #8]
    1aa8:	cmp	r4, #0
    1aac:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1ab0:	ldr	r8, [pc, #188]	; 1b74 <hurt_check_event+0xe0>
    1ab4:	mov	r5, #0
    1ab8:	ldr	r8, [pc, r8]
    1abc:	ldr	r9, [pc, #180]	; 1b78 <hurt_check_event+0xe4>
    1ac0:	add	r9, pc, r9
    1ac4:	ldr	r6, [r4]
    1ac8:	mov	r0, r4
    1acc:	ldr	r4, [r4, #8]
    1ad0:	ldr	r1, [r6, #24]
    1ad4:	ldrb	r1, [r1, #40]	; 0x28
    1ad8:	cmp	r1, #0
    1adc:	beq	1b3c <hurt_check_event+0xa8>
    1ae0:	ldr	r1, [r0, #8]
    1ae4:	ldr	r2, [r0, #4]
    1ae8:	cmp	r1, #0
    1aec:	streq	r2, [r7, #12]
    1af0:	strne	r2, [r1, #4]
    1af4:	ldrne	r2, [r0, #4]
    1af8:	add	r3, r2, #8
    1afc:	cmp	r2, #0
    1b00:	addeq	r3, r7, #8
    1b04:	str	r1, [r3]
    1b08:	str	r5, [r0, #4]
    1b0c:	str	r5, [r0, #8]
    1b10:	ldr	r1, [r7, #16]
    1b14:	sub	r1, r1, #1
    1b18:	str	r1, [r7, #16]
    1b1c:	bl	b08 <rb_free_rb_dlink_node@plt>
    1b20:	mov	r0, r6
    1b24:	mov	r1, r9
    1b28:	bl	ba4 <sendto_one_notice@plt>
    1b2c:	bl	a90 <rb_current_time@plt>
    1b30:	ldr	r1, [r6, #432]	; 0x1b0
    1b34:	str	r0, [r1, #416]	; 0x1a0
    1b38:	b	1b64 <hurt_check_event+0xd0>
    1b3c:	ldr	r1, [r6, #432]	; 0x1b0
    1b40:	ldrh	r0, [r7, #20]
    1b44:	ldr	r1, [r1, #116]	; 0x74
    1b48:	cmp	r1, r0
    1b4c:	bls	1b64 <hurt_check_event+0xd0>
    1b50:	ldr	r3, [r7, #28]
    1b54:	mov	r0, #0
    1b58:	mov	r1, r6
    1b5c:	mov	r2, r8
    1b60:	bl	bc8 <exit_client@plt>
    1b64:	cmp	r4, #0
    1b68:	bne	1ac4 <hurt_check_event+0x30>
    1b6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1b70:	.word	0x000115f4
    1b74:	.word	0x000115ec
    1b78:	.word	0x000004fa

00001b7c <hurt_destroy>:
    1b7c:	cmp	r0, #0
    1b80:	bxeq	lr
    1b84:	push	{r4, sl, fp, lr}
    1b88:	add	fp, sp, #8
    1b8c:	mov	r4, r0
    1b90:	ldr	r0, [r0]
    1b94:	cmp	r0, #0
    1b98:	beq	1ba0 <hurt_destroy+0x24>
    1b9c:	bl	acc <free@plt>
    1ba0:	ldr	r0, [r4, #12]
    1ba4:	cmp	r0, #0
    1ba8:	beq	1bb0 <hurt_destroy+0x34>
    1bac:	bl	acc <free@plt>
    1bb0:	mov	r0, r4
    1bb4:	pop	{r4, sl, fp, lr}
    1bb8:	b	acc <free@plt>

00001bbc <hurt_find>:
    1bbc:	push	{r4, r5, r6, sl, fp, lr}
    1bc0:	add	fp, sp, #16
    1bc4:	mov	r4, r0
    1bc8:	ldr	r0, [pc, #56]	; 1c08 <hurt_find+0x4c>
    1bcc:	ldr	r0, [pc, r0]
    1bd0:	ldr	r6, [r0]
    1bd4:	b	1bf4 <hurt_find+0x38>
    1bd8:	ldr	r5, [r6]
    1bdc:	mov	r1, r4
    1be0:	ldr	r0, [r5]
    1be4:	bl	b80 <match@plt>
    1be8:	cmp	r0, #0
    1bec:	bne	1c00 <hurt_find+0x44>
    1bf0:	ldr	r6, [r6, #8]
    1bf4:	cmp	r6, #0
    1bf8:	bne	1bd8 <hurt_find+0x1c>
    1bfc:	mov	r5, #0
    1c00:	mov	r0, r5
    1c04:	pop	{r4, r5, r6, sl, fp, pc}
    1c08:	.word	0x000114bc

00001c0c <hurt_new>:
    1c0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1c10:	add	fp, sp, #24
    1c14:	mov	r7, r1
    1c18:	mov	r8, r0
    1c1c:	mov	r0, #1
    1c20:	mov	r1, #20
    1c24:	mov	r5, r2
    1c28:	bl	a78 <calloc@plt>
    1c2c:	cmp	r0, #0
    1c30:	beq	1c9c <hurt_new+0x90>
    1c34:	mov	r6, r0
    1c38:	mov	r0, r7
    1c3c:	bl	b5c <strlen@plt>
    1c40:	add	r0, r0, #1
    1c44:	bl	b2c <malloc@plt>
    1c48:	cmp	r0, #0
    1c4c:	beq	1c9c <hurt_new+0x90>
    1c50:	mov	r1, r7
    1c54:	mov	r4, r0
    1c58:	bl	b14 <strcpy@plt>
    1c5c:	mov	r0, r5
    1c60:	str	r4, [r6]
    1c64:	bl	b5c <strlen@plt>
    1c68:	add	r0, r0, #1
    1c6c:	bl	b2c <malloc@plt>
    1c70:	cmp	r0, #0
    1c74:	beq	1c9c <hurt_new+0x90>
    1c78:	mov	r1, r5
    1c7c:	mov	r4, r0
    1c80:	bl	b14 <strcpy@plt>
    1c84:	str	r4, [r6, #12]
    1c88:	bl	a90 <rb_current_time@plt>
    1c8c:	add	r0, r0, r8
    1c90:	str	r0, [r6, #16]
    1c94:	mov	r0, r6
    1c98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1c9c:	bl	ae4 <rb_outofmemory@plt>

00001ca0 <heal_nick>:
    1ca0:	push	{r4, r5, r6, sl, fp, lr}
    1ca4:	add	fp, sp, #16
    1ca8:	sub	sp, sp, #8
    1cac:	cmp	r1, #0
    1cb0:	beq	1dac <heal_nick+0x10c>
    1cb4:	mov	r4, r1
    1cb8:	ldr	r1, [pc, #268]	; 1dcc <heal_nick+0x12c>
    1cbc:	mov	r5, r0
    1cc0:	ldr	r1, [pc, r1]
    1cc4:	ldr	r2, [r1, #8]
    1cc8:	cmp	r2, #0
    1ccc:	beq	1d90 <heal_nick+0xf0>
    1cd0:	ldr	r3, [r2]
    1cd4:	mov	r0, r2
    1cd8:	ldr	r2, [r2, #8]
    1cdc:	cmp	r3, r4
    1ce0:	bne	1cc8 <heal_nick+0x28>
    1ce4:	ldr	r3, [r0, #4]
    1ce8:	cmp	r2, #0
    1cec:	streq	r3, [r1, #12]
    1cf0:	strne	r3, [r2, #4]
    1cf4:	ldrne	r3, [r0, #4]
    1cf8:	add	r6, r3, #8
    1cfc:	cmp	r3, #0
    1d00:	addeq	r6, r1, #8
    1d04:	str	r2, [r6]
    1d08:	mov	r2, #0
    1d0c:	str	r2, [r0, #4]
    1d10:	str	r2, [r0, #8]
    1d14:	ldr	r2, [r1, #16]
    1d18:	sub	r2, r2, #1
    1d1c:	str	r2, [r1, #16]
    1d20:	bl	b08 <rb_free_rb_dlink_node@plt>
    1d24:	mov	r0, r5
    1d28:	bl	afc <get_oper_name@plt>
    1d2c:	mov	r6, r0
    1d30:	mov	r0, r4
    1d34:	mov	r1, #0
    1d38:	bl	a84 <get_client_name@plt>
    1d3c:	str	r0, [sp]
    1d40:	mov	r0, #256	; 0x100
    1d44:	mov	r1, #0
    1d48:	mov	r3, r6
    1d4c:	ldr	r2, [pc, #124]	; 1dd0 <heal_nick+0x130>
    1d50:	add	r2, pc, r2
    1d54:	bl	af0 <sendto_realops_snomask@plt>
    1d58:	ldr	r1, [pc, #116]	; 1dd4 <heal_nick+0x134>
    1d5c:	mov	r0, r4
    1d60:	add	r1, pc, r1
    1d64:	bl	ba4 <sendto_one_notice@plt>
    1d68:	ldr	r1, [pc, #104]	; 1dd8 <heal_nick+0x138>
    1d6c:	add	r2, r4, #88	; 0x58
    1d70:	mov	r0, r5
    1d74:	add	r1, pc, r1
    1d78:	bl	ba4 <sendto_one_notice@plt>
    1d7c:	bl	a90 <rb_current_time@plt>
    1d80:	ldr	r1, [r4, #432]	; 0x1b0
    1d84:	str	r0, [r1, #416]	; 0x1a0
    1d88:	sub	sp, fp, #16
    1d8c:	pop	{r4, r5, r6, sl, fp, pc}
    1d90:	ldr	r1, [pc, #68]	; 1ddc <heal_nick+0x13c>
    1d94:	add	r2, r4, #88	; 0x58
    1d98:	mov	r0, r5
    1d9c:	add	r1, pc, r1
    1da0:	sub	sp, fp, #16
    1da4:	pop	{r4, r5, r6, sl, fp, lr}
    1da8:	b	ba4 <sendto_one_notice@plt>
    1dac:	ldr	r0, [pc, #44]	; 1de0 <heal_nick+0x140>
    1db0:	ldr	r1, [pc, #44]	; 1de4 <heal_nick+0x144>
    1db4:	ldr	r3, [pc, #44]	; 1de8 <heal_nick+0x148>
    1db8:	mov	r2, #288	; 0x120
    1dbc:	add	r0, pc, r0
    1dc0:	add	r1, pc, r1
    1dc4:	add	r3, pc, r3
    1dc8:	bl	bec <__assert_fail@plt>
    1dcc:	.word	0x000113d4
    1dd0:	.word	0x0000047a
    1dd4:	.word	0x0000047d
    1dd8:	.word	0x0000049b
    1ddc:	.word	0x0000049f
    1de0:	.word	0x000001f1
    1de4:	.word	0x000001a0
    1de8:	.word	0x000001b8

00001dec <hurt_find_exact>:
    1dec:	push	{r4, r5, r6, sl, fp, lr}
    1df0:	add	fp, sp, #16
    1df4:	mov	r4, r0
    1df8:	ldr	r0, [pc, #56]	; 1e38 <hurt_find_exact+0x4c>
    1dfc:	ldr	r0, [pc, r0]
    1e00:	ldr	r6, [r0]
    1e04:	b	1e24 <hurt_find_exact+0x38>
    1e08:	ldr	r5, [r6]
    1e0c:	mov	r0, r4
    1e10:	ldr	r1, [r5]
    1e14:	bl	ad8 <rb_strcasecmp@plt>
    1e18:	cmp	r0, #0
    1e1c:	beq	1e30 <hurt_find_exact+0x44>
    1e20:	ldr	r6, [r6, #8]
    1e24:	cmp	r6, #0
    1e28:	bne	1e08 <hurt_find_exact+0x1c>
    1e2c:	mov	r5, #0
    1e30:	mov	r0, r5
    1e34:	pop	{r4, r5, r6, sl, fp, pc}
    1e38:	.word	0x0001128c

00001e3c <hurt_remove>:
    1e3c:	push	{r4, sl, fp, lr}
    1e40:	add	fp, sp, #8
    1e44:	bl	1dec <hurt_find_exact>
    1e48:	cmp	r0, #0
    1e4c:	beq	1ec8 <hurt_remove+0x8c>
    1e50:	ldr	ip, [pc, #144]	; 1ee8 <hurt_remove+0xac>
    1e54:	mov	r4, r0
    1e58:	ldr	ip, [pc, ip]
    1e5c:	ldr	r2, [ip]
    1e60:	cmp	r2, #0
    1e64:	beq	1ebc <hurt_remove+0x80>
    1e68:	ldr	r3, [r2]
    1e6c:	mov	r0, r2
    1e70:	ldr	r2, [r2, #8]
    1e74:	cmp	r3, r4
    1e78:	bne	1e60 <hurt_remove+0x24>
    1e7c:	ldr	r3, [r0, #4]
    1e80:	cmp	r2, #0
    1e84:	mov	r1, ip
    1e88:	streq	r3, [ip, #4]
    1e8c:	strne	r3, [r2, #4]
    1e90:	ldrne	r3, [r0, #4]
    1e94:	cmp	r3, #0
    1e98:	addne	r1, r3, #8
    1e9c:	str	r2, [r1]
    1ea0:	mov	r1, #0
    1ea4:	str	r1, [r0, #4]
    1ea8:	str	r1, [r0, #8]
    1eac:	ldr	r1, [ip, #8]
    1eb0:	sub	r1, r1, #1
    1eb4:	str	r1, [ip, #8]
    1eb8:	bl	b08 <rb_free_rb_dlink_node@plt>
    1ebc:	mov	r0, r4
    1ec0:	pop	{r4, sl, fp, lr}
    1ec4:	b	1b7c <hurt_destroy>
    1ec8:	ldr	r0, [pc, #28]	; 1eec <hurt_remove+0xb0>
    1ecc:	ldr	r1, [pc, #28]	; 1ef0 <hurt_remove+0xb4>
    1ed0:	ldr	r3, [pc, #28]	; 1ef4 <hurt_remove+0xb8>
    1ed4:	mov	r2, #288	; 0x120
    1ed8:	add	r0, pc, r0
    1edc:	add	r1, pc, r1
    1ee0:	add	r3, pc, r3
    1ee4:	bl	bec <__assert_fail@plt>
    1ee8:	.word	0x00011230
    1eec:	.word	0x000000d5
    1ef0:	.word	0x00000084
    1ef4:	.word	0x0000009c

Disassembly of section .fini:

00001ef8 <_fini>:
    1ef8:	push	{r3, lr}
    1efc:	pop	{r3, pc}
