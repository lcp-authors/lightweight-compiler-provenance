
../repos/coreutils/src/cat:     file format elf32-littlearm


Disassembly of section .init:

00010cb4 <.init>:
   10cb4:	push	{r3, lr}
   10cb8:	bl	10fa4 <close@plt+0x48>
   10cbc:	pop	{r3, pc}

Disassembly of section .plt:

00010cc0 <calloc@plt-0x14>:
   10cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc4:	ldr	lr, [pc, #4]	; 10cd0 <calloc@plt-0x4>
   10cc8:	add	lr, pc, lr
   10ccc:	ldr	pc, [lr, #8]!
   10cd0:	andeq	r6, r1, r0, lsr r3

00010cd4 <calloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #90112	; 0x16000
   10cdc:	ldr	pc, [ip, #816]!	; 0x330

00010ce0 <fputs_unlocked@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #90112	; 0x16000
   10ce8:	ldr	pc, [ip, #808]!	; 0x328

00010cec <raise@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #90112	; 0x16000
   10cf4:	ldr	pc, [ip, #800]!	; 0x320

00010cf8 <strcmp@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #90112	; 0x16000
   10d00:	ldr	pc, [ip, #792]!	; 0x318

00010d04 <posix_fadvise64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #90112	; 0x16000
   10d0c:	ldr	pc, [ip, #784]!	; 0x310

00010d10 <read@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #90112	; 0x16000
   10d18:	ldr	pc, [ip, #776]!	; 0x308

00010d1c <fflush@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #90112	; 0x16000
   10d24:	ldr	pc, [ip, #768]!	; 0x300

00010d28 <memmove@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #90112	; 0x16000
   10d30:	ldr	pc, [ip, #760]!	; 0x2f8

00010d34 <free@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #90112	; 0x16000
   10d3c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #90112	; 0x16000
   10d48:	ldr	pc, [ip, #744]!	; 0x2e8

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #90112	; 0x16000
   10d54:	ldr	pc, [ip, #736]!	; 0x2e0

00010d58 <mbsinit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #90112	; 0x16000
   10d60:	ldr	pc, [ip, #728]!	; 0x2d8

00010d64 <memcmp@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #90112	; 0x16000
   10d6c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d70 <stpcpy@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #90112	; 0x16000
   10d78:	ldr	pc, [ip, #712]!	; 0x2c8

00010d7c <fputc_unlocked@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #90112	; 0x16000
   10d84:	ldr	pc, [ip, #704]!	; 0x2c0

00010d88 <dcgettext@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #90112	; 0x16000
   10d90:	ldr	pc, [ip, #696]!	; 0x2b8

00010d94 <realloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #90112	; 0x16000
   10d9c:	ldr	pc, [ip, #688]!	; 0x2b0

00010da0 <textdomain@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #90112	; 0x16000
   10da8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dac <iswprint@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #90112	; 0x16000
   10db4:	ldr	pc, [ip, #672]!	; 0x2a0

00010db8 <__fxstat64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #90112	; 0x16000
   10dc0:	ldr	pc, [ip, #664]!	; 0x298

00010dc4 <copy_file_range@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #90112	; 0x16000
   10dcc:	ldr	pc, [ip, #656]!	; 0x290

00010dd0 <fwrite@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #90112	; 0x16000
   10dd8:	ldr	pc, [ip, #648]!	; 0x288

00010ddc <ioctl@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #90112	; 0x16000
   10de4:	ldr	pc, [ip, #640]!	; 0x280

00010de8 <lseek64@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #90112	; 0x16000
   10df0:	ldr	pc, [ip, #632]!	; 0x278

00010df4 <__ctype_get_mb_cur_max@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #90112	; 0x16000
   10dfc:	ldr	pc, [ip, #624]!	; 0x270

00010e00 <__fpending@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #90112	; 0x16000
   10e08:	ldr	pc, [ip, #616]!	; 0x268

00010e0c <mbrtowc@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #90112	; 0x16000
   10e14:	ldr	pc, [ip, #608]!	; 0x260

00010e18 <error@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #90112	; 0x16000
   10e20:	ldr	pc, [ip, #600]!	; 0x258

00010e24 <open64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #90112	; 0x16000
   10e2c:	ldr	pc, [ip, #592]!	; 0x250

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #90112	; 0x16000
   10e38:	ldr	pc, [ip, #584]!	; 0x248

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #90112	; 0x16000
   10e44:	ldr	pc, [ip, #576]!	; 0x240

00010e48 <__freading@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #90112	; 0x16000
   10e50:	ldr	pc, [ip, #568]!	; 0x238

00010e54 <__gmon_start__@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #90112	; 0x16000
   10e5c:	ldr	pc, [ip, #560]!	; 0x230

00010e60 <getopt_long@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #90112	; 0x16000
   10e68:	ldr	pc, [ip, #552]!	; 0x228

00010e6c <__ctype_b_loc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #90112	; 0x16000
   10e74:	ldr	pc, [ip, #544]!	; 0x220

00010e78 <exit@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #90112	; 0x16000
   10e80:	ldr	pc, [ip, #536]!	; 0x218

00010e84 <strlen@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #90112	; 0x16000
   10e8c:	ldr	pc, [ip, #528]!	; 0x210

00010e90 <getpagesize@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #90112	; 0x16000
   10e98:	ldr	pc, [ip, #520]!	; 0x208

00010e9c <__errno_location@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #90112	; 0x16000
   10ea4:	ldr	pc, [ip, #512]!	; 0x200

00010ea8 <__cxa_atexit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #90112	; 0x16000
   10eb0:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb4 <memset@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #90112	; 0x16000
   10ebc:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec0 <__printf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #90112	; 0x16000
   10ec8:	ldr	pc, [ip, #488]!	; 0x1e8

00010ecc <write@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #90112	; 0x16000
   10ed4:	ldr	pc, [ip, #480]!	; 0x1e0

00010ed8 <fileno@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #90112	; 0x16000
   10ee0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee4 <__fprintf_chk@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef0 <fclose@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #456]!	; 0x1c8

00010efc <fseeko64@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #448]!	; 0x1c0

00010f08 <setlocale@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #440]!	; 0x1b8

00010f14 <strrchr@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #432]!	; 0x1b0

00010f20 <nl_langinfo@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #424]!	; 0x1a8

00010f2c <bindtextdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #416]!	; 0x1a0

00010f38 <aligned_alloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #408]!	; 0x198

00010f44 <strncmp@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #400]!	; 0x190

00010f50 <abort@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #392]!	; 0x188

00010f5c <close@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #384]!	; 0x180

Disassembly of section .text:

00010f68 <.text>:
   10f68:	mov	fp, #0
   10f6c:	mov	lr, #0
   10f70:	pop	{r1}		; (ldr r1, [sp], #4)
   10f74:	mov	r2, sp
   10f78:	push	{r2}		; (str r2, [sp, #-4]!)
   10f7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f80:	ldr	ip, [pc, #16]	; 10f98 <close@plt+0x3c>
   10f84:	push	{ip}		; (str ip, [sp, #-4]!)
   10f88:	ldr	r0, [pc, #12]	; 10f9c <close@plt+0x40>
   10f8c:	ldr	r3, [pc, #12]	; 10fa0 <close@plt+0x44>
   10f90:	bl	10e3c <__libc_start_main@plt>
   10f94:	bl	10f50 <abort@plt>
   10f98:	strdeq	r5, [r1], -ip
   10f9c:	muleq	r1, r4, r4
   10fa0:	muleq	r1, ip, r6
   10fa4:	ldr	r3, [pc, #20]	; 10fc0 <close@plt+0x64>
   10fa8:	ldr	r2, [pc, #20]	; 10fc4 <close@plt+0x68>
   10fac:	add	r3, pc, r3
   10fb0:	ldr	r2, [r3, r2]
   10fb4:	cmp	r2, #0
   10fb8:	bxeq	lr
   10fbc:	b	10e54 <__gmon_start__@plt>
   10fc0:	andeq	r6, r1, ip, asr #32
   10fc4:	andeq	r0, r0, r8, ror #1
   10fc8:	ldr	r3, [pc, #28]	; 10fec <close@plt+0x90>
   10fcc:	ldr	r0, [pc, #28]	; 10ff0 <close@plt+0x94>
   10fd0:	sub	r3, r3, r0
   10fd4:	cmp	r3, #6
   10fd8:	bxls	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <close@plt+0x98>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r7, r2, fp, asr r1
   10ff0:	andeq	r7, r2, r8, asr r1
   10ff4:	andeq	r0, r0, r0
   10ff8:	ldr	r1, [pc, #36]	; 11024 <close@plt+0xc8>
   10ffc:	ldr	r0, [pc, #36]	; 11028 <close@plt+0xcc>
   11000:	sub	r1, r1, r0
   11004:	asr	r1, r1, #2
   11008:	add	r1, r1, r1, lsr #31
   1100c:	asrs	r1, r1, #1
   11010:	bxeq	lr
   11014:	ldr	r3, [pc, #16]	; 1102c <close@plt+0xd0>
   11018:	cmp	r3, #0
   1101c:	bxeq	lr
   11020:	bx	r3
   11024:	andeq	r7, r2, r8, asr r1
   11028:	andeq	r7, r2, r8, asr r1
   1102c:	andeq	r0, r0, r0
   11030:	push	{r4, lr}
   11034:	ldr	r4, [pc, #24]	; 11054 <close@plt+0xf8>
   11038:	ldrb	r3, [r4]
   1103c:	cmp	r3, #0
   11040:	popne	{r4, pc}
   11044:	bl	10fc8 <close@plt+0x6c>
   11048:	mov	r3, #1
   1104c:	strb	r3, [r4]
   11050:	pop	{r4, pc}
   11054:	andeq	r7, r2, r0, ror r1
   11058:	ldr	r0, [pc, #40]	; 11088 <close@plt+0x12c>
   1105c:	ldr	r3, [r0]
   11060:	cmp	r3, #0
   11064:	bne	1106c <close@plt+0x110>
   11068:	b	10ff8 <close@plt+0x9c>
   1106c:	ldr	r3, [pc, #24]	; 1108c <close@plt+0x130>
   11070:	cmp	r3, #0
   11074:	beq	11068 <close@plt+0x10c>
   11078:	push	{r4, lr}
   1107c:	blx	r3
   11080:	pop	{r4, lr}
   11084:	b	10ff8 <close@plt+0x9c>
   11088:	andeq	r6, r2, r4, lsl pc
   1108c:	andeq	r0, r0, r0
   11090:	ldr	r3, [pc, #112]	; 11108 <close@plt+0x1ac>
   11094:	ldr	r1, [r3, #20]
   11098:	add	r3, r3, #17
   1109c:	mov	r0, #48	; 0x30
   110a0:	ldrb	r2, [r3]
   110a4:	cmp	r2, #56	; 0x38
   110a8:	bls	110fc <close@plt+0x1a0>
   110ac:	strb	r0, [r3], #-1
   110b0:	cmp	r3, r1
   110b4:	bcs	110a0 <close@plt+0x144>
   110b8:	ldr	r3, [pc, #72]	; 11108 <close@plt+0x1ac>
   110bc:	cmp	r1, r3
   110c0:	subhi	r2, r1, #1
   110c4:	strhi	r2, [r3, #20]
   110c8:	movhi	r3, #49	; 0x31
   110cc:	strbhi	r3, [r1, #-1]
   110d0:	movls	r2, #62	; 0x3e
   110d4:	ldrls	r3, [pc, #44]	; 11108 <close@plt+0x1ac>
   110d8:	strbls	r2, [r3]
   110dc:	ldr	r2, [pc, #36]	; 11108 <close@plt+0x1ac>
   110e0:	ldr	r3, [r2, #24]
   110e4:	ldr	r2, [r2, #20]
   110e8:	cmp	r2, r3
   110ec:	subcc	r3, r3, #1
   110f0:	ldrcc	r2, [pc, #16]	; 11108 <close@plt+0x1ac>
   110f4:	strcc	r3, [r2, #24]
   110f8:	bx	lr
   110fc:	add	r2, r2, #1
   11100:	strb	r2, [r3]
   11104:	bx	lr
   11108:	strdeq	r7, [r2], -r4
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	sub	sp, sp, #60	; 0x3c
   11114:	subs	r6, r0, #0
   11118:	beq	11154 <close@plt+0x1f8>
   1111c:	ldr	r3, [pc, #788]	; 11438 <close@plt+0x4dc>
   11120:	ldr	r4, [r3]
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #780]	; 1143c <close@plt+0x4e0>
   1112c:	mov	r0, #0
   11130:	bl	10d88 <dcgettext@plt>
   11134:	ldr	r3, [pc, #772]	; 11440 <close@plt+0x4e4>
   11138:	ldr	r3, [r3]
   1113c:	mov	r2, r0
   11140:	mov	r1, #1
   11144:	mov	r0, r4
   11148:	bl	10ee4 <__fprintf_chk@plt>
   1114c:	mov	r0, r6
   11150:	bl	10e78 <exit@plt>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #740]	; 11444 <close@plt+0x4e8>
   1115c:	mov	r0, #0
   11160:	bl	10d88 <dcgettext@plt>
   11164:	ldr	r5, [pc, #724]	; 11440 <close@plt+0x4e4>
   11168:	ldr	r2, [r5]
   1116c:	mov	r1, r0
   11170:	mov	r0, #1
   11174:	bl	10ec0 <__printf_chk@plt>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #708]	; 11448 <close@plt+0x4ec>
   11180:	mov	r0, #0
   11184:	bl	10d88 <dcgettext@plt>
   11188:	ldr	r4, [pc, #700]	; 1144c <close@plt+0x4f0>
   1118c:	ldr	r1, [r4]
   11190:	bl	10ce0 <fputs_unlocked@plt>
   11194:	mov	r2, #5
   11198:	ldr	r1, [pc, #688]	; 11450 <close@plt+0x4f4>
   1119c:	mov	r0, #0
   111a0:	bl	10d88 <dcgettext@plt>
   111a4:	ldr	r1, [r4]
   111a8:	bl	10ce0 <fputs_unlocked@plt>
   111ac:	mov	r2, #5
   111b0:	ldr	r1, [pc, #668]	; 11454 <close@plt+0x4f8>
   111b4:	mov	r0, #0
   111b8:	bl	10d88 <dcgettext@plt>
   111bc:	ldr	r1, [r4]
   111c0:	bl	10ce0 <fputs_unlocked@plt>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #648]	; 11458 <close@plt+0x4fc>
   111cc:	mov	r0, #0
   111d0:	bl	10d88 <dcgettext@plt>
   111d4:	ldr	r1, [r4]
   111d8:	bl	10ce0 <fputs_unlocked@plt>
   111dc:	mov	r2, #5
   111e0:	ldr	r1, [pc, #628]	; 1145c <close@plt+0x500>
   111e4:	mov	r0, #0
   111e8:	bl	10d88 <dcgettext@plt>
   111ec:	ldr	r1, [r4]
   111f0:	bl	10ce0 <fputs_unlocked@plt>
   111f4:	mov	r2, #5
   111f8:	ldr	r1, [pc, #608]	; 11460 <close@plt+0x504>
   111fc:	mov	r0, #0
   11200:	bl	10d88 <dcgettext@plt>
   11204:	ldr	r1, [r4]
   11208:	bl	10ce0 <fputs_unlocked@plt>
   1120c:	mov	r2, #5
   11210:	ldr	r1, [pc, #588]	; 11464 <close@plt+0x508>
   11214:	mov	r0, #0
   11218:	bl	10d88 <dcgettext@plt>
   1121c:	ldr	r2, [r5]
   11220:	mov	r3, r2
   11224:	mov	r1, r0
   11228:	mov	r0, #1
   1122c:	bl	10ec0 <__printf_chk@plt>
   11230:	mov	ip, sp
   11234:	ldr	lr, [pc, #556]	; 11468 <close@plt+0x50c>
   11238:	ldm	lr!, {r0, r1, r2, r3}
   1123c:	stmia	ip!, {r0, r1, r2, r3}
   11240:	ldm	lr!, {r0, r1, r2, r3}
   11244:	stmia	ip!, {r0, r1, r2, r3}
   11248:	ldm	lr!, {r0, r1, r2, r3}
   1124c:	stmia	ip!, {r0, r1, r2, r3}
   11250:	ldm	lr, {r0, r1}
   11254:	stm	ip, {r0, r1}
   11258:	ldr	r1, [sp]
   1125c:	cmp	r1, #0
   11260:	moveq	r4, sp
   11264:	beq	1128c <close@plt+0x330>
   11268:	mov	r4, sp
   1126c:	ldr	r5, [pc, #504]	; 1146c <close@plt+0x510>
   11270:	mov	r0, r5
   11274:	bl	10cf8 <strcmp@plt>
   11278:	cmp	r0, #0
   1127c:	beq	1128c <close@plt+0x330>
   11280:	ldr	r1, [r4, #8]!
   11284:	cmp	r1, #0
   11288:	bne	11270 <close@plt+0x314>
   1128c:	ldr	r4, [r4, #4]
   11290:	cmp	r4, #0
   11294:	beq	113a8 <close@plt+0x44c>
   11298:	mov	r2, #5
   1129c:	ldr	r1, [pc, #460]	; 11470 <close@plt+0x514>
   112a0:	mov	r0, #0
   112a4:	bl	10d88 <dcgettext@plt>
   112a8:	ldr	r3, [pc, #452]	; 11474 <close@plt+0x518>
   112ac:	ldr	r2, [pc, #452]	; 11478 <close@plt+0x51c>
   112b0:	mov	r1, r0
   112b4:	mov	r0, #1
   112b8:	bl	10ec0 <__printf_chk@plt>
   112bc:	mov	r1, #0
   112c0:	mov	r0, #5
   112c4:	bl	10f08 <setlocale@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112e4 <close@plt+0x388>
   112d0:	mov	r2, #3
   112d4:	ldr	r1, [pc, #416]	; 1147c <close@plt+0x520>
   112d8:	bl	10f44 <strncmp@plt>
   112dc:	cmp	r0, #0
   112e0:	bne	11344 <close@plt+0x3e8>
   112e4:	mov	r2, #5
   112e8:	ldr	r1, [pc, #400]	; 11480 <close@plt+0x524>
   112ec:	mov	r0, #0
   112f0:	bl	10d88 <dcgettext@plt>
   112f4:	ldr	r5, [pc, #368]	; 1146c <close@plt+0x510>
   112f8:	mov	r3, r5
   112fc:	ldr	r2, [pc, #368]	; 11474 <close@plt+0x518>
   11300:	mov	r1, r0
   11304:	mov	r0, #1
   11308:	bl	10ec0 <__printf_chk@plt>
   1130c:	mov	r2, #5
   11310:	ldr	r1, [pc, #364]	; 11484 <close@plt+0x528>
   11314:	mov	r0, #0
   11318:	bl	10d88 <dcgettext@plt>
   1131c:	mov	r1, r0
   11320:	ldr	r2, [pc, #352]	; 11488 <close@plt+0x52c>
   11324:	ldr	r3, [pc, #352]	; 1148c <close@plt+0x530>
   11328:	cmp	r4, r5
   1132c:	movne	r3, r2
   11330:	mov	r2, r4
   11334:	mov	r0, #1
   11338:	bl	10ec0 <__printf_chk@plt>
   1133c:	b	1114c <close@plt+0x1f0>
   11340:	ldr	r4, [pc, #292]	; 1146c <close@plt+0x510>
   11344:	mov	r2, #5
   11348:	ldr	r1, [pc, #320]	; 11490 <close@plt+0x534>
   1134c:	mov	r0, #0
   11350:	bl	10d88 <dcgettext@plt>
   11354:	ldr	r3, [pc, #240]	; 1144c <close@plt+0x4f0>
   11358:	ldr	r1, [r3]
   1135c:	bl	10ce0 <fputs_unlocked@plt>
   11360:	b	112e4 <close@plt+0x388>
   11364:	mov	r2, #5
   11368:	ldr	r1, [pc, #272]	; 11480 <close@plt+0x524>
   1136c:	mov	r0, #0
   11370:	bl	10d88 <dcgettext@plt>
   11374:	ldr	r4, [pc, #240]	; 1146c <close@plt+0x510>
   11378:	mov	r3, r4
   1137c:	ldr	r2, [pc, #240]	; 11474 <close@plt+0x518>
   11380:	mov	r1, r0
   11384:	mov	r0, #1
   11388:	bl	10ec0 <__printf_chk@plt>
   1138c:	mov	r2, #5
   11390:	ldr	r1, [pc, #236]	; 11484 <close@plt+0x528>
   11394:	mov	r0, #0
   11398:	bl	10d88 <dcgettext@plt>
   1139c:	mov	r1, r0
   113a0:	ldr	r3, [pc, #228]	; 1148c <close@plt+0x530>
   113a4:	b	11330 <close@plt+0x3d4>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #188]	; 11470 <close@plt+0x514>
   113b0:	mov	r0, #0
   113b4:	bl	10d88 <dcgettext@plt>
   113b8:	ldr	r3, [pc, #180]	; 11474 <close@plt+0x518>
   113bc:	ldr	r2, [pc, #180]	; 11478 <close@plt+0x51c>
   113c0:	mov	r1, r0
   113c4:	mov	r0, #1
   113c8:	bl	10ec0 <__printf_chk@plt>
   113cc:	mov	r1, #0
   113d0:	mov	r0, #5
   113d4:	bl	10f08 <setlocale@plt>
   113d8:	cmp	r0, #0
   113dc:	beq	11364 <close@plt+0x408>
   113e0:	mov	r2, #3
   113e4:	ldr	r1, [pc, #144]	; 1147c <close@plt+0x520>
   113e8:	bl	10f44 <strncmp@plt>
   113ec:	cmp	r0, #0
   113f0:	bne	11340 <close@plt+0x3e4>
   113f4:	mov	r2, #5
   113f8:	ldr	r1, [pc, #128]	; 11480 <close@plt+0x524>
   113fc:	mov	r0, #0
   11400:	bl	10d88 <dcgettext@plt>
   11404:	ldr	r4, [pc, #96]	; 1146c <close@plt+0x510>
   11408:	mov	r3, r4
   1140c:	ldr	r2, [pc, #96]	; 11474 <close@plt+0x518>
   11410:	mov	r1, r0
   11414:	mov	r0, #1
   11418:	bl	10ec0 <__printf_chk@plt>
   1141c:	mov	r2, #5
   11420:	ldr	r1, [pc, #92]	; 11484 <close@plt+0x528>
   11424:	mov	r0, #0
   11428:	bl	10d88 <dcgettext@plt>
   1142c:	mov	r1, r0
   11430:	ldr	r3, [pc, #84]	; 1148c <close@plt+0x530>
   11434:	b	11330 <close@plt+0x3d4>
   11438:	andeq	r7, r2, r8, ror #2
   1143c:	andeq	r5, r1, r0, lsl #16
   11440:	andeq	r7, r2, ip, lsl #3
   11444:	andeq	r5, r1, r8, lsr #16
   11448:	andeq	r5, r1, ip, asr #16
   1144c:	andeq	r7, r2, ip, ror #2
   11450:	andeq	r5, r1, r8, ror r8
   11454:			; <UNDEFINED> instruction: 0x000158b0
   11458:	andeq	r5, r1, r0, lsl #20
   1145c:	ldrdeq	r5, [r1], -r4
   11460:	andeq	r5, r1, r4, lsl #22
   11464:	andeq	r5, r1, ip, lsr fp
   11468:	andeq	r5, r1, r4, lsr #14
   1146c:	strdeq	r5, [r1], -ip
   11470:	andeq	r5, r1, r8, asr #23
   11474:	andeq	r5, r1, r0, ror #23
   11478:	andeq	r5, r1, r8, lsl #24
   1147c:	andeq	r5, r1, r8, lsl ip
   11480:	andeq	r5, r1, r4, ror #24
   11484:	andeq	r5, r1, r0, lsl #25
   11488:	andeq	r5, r1, r8, asr #16
   1148c:	andeq	r5, r1, ip, ror #27
   11490:	andeq	r5, r1, ip, lsl ip
   11494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11498:	sub	sp, sp, #244	; 0xf4
   1149c:	str	r0, [sp, #56]	; 0x38
   114a0:	str	r1, [sp, #60]	; 0x3c
   114a4:	ldr	r0, [r1]
   114a8:	bl	1259c <close@plt+0x1640>
   114ac:	ldr	r1, [pc, #3664]	; 12304 <close@plt+0x13a8>
   114b0:	mov	r0, #6
   114b4:	bl	10f08 <setlocale@plt>
   114b8:	ldr	r4, [pc, #3656]	; 12308 <close@plt+0x13ac>
   114bc:	ldr	r1, [pc, #3656]	; 1230c <close@plt+0x13b0>
   114c0:	mov	r0, r4
   114c4:	bl	10f2c <bindtextdomain@plt>
   114c8:	mov	r0, r4
   114cc:	bl	10da0 <textdomain@plt>
   114d0:	ldr	r0, [pc, #3640]	; 12310 <close@plt+0x13b4>
   114d4:	bl	15700 <close@plt+0x47a4>
   114d8:	mov	fp, #0
   114dc:	str	fp, [sp, #24]
   114e0:	str	fp, [sp, #36]	; 0x24
   114e4:	str	fp, [sp, #52]	; 0x34
   114e8:	str	fp, [sp, #80]	; 0x50
   114ec:	str	fp, [sp, #32]
   114f0:	ldr	r6, [pc, #3612]	; 12314 <close@plt+0x13b8>
   114f4:	ldr	r5, [pc, #3612]	; 12318 <close@plt+0x13bc>
   114f8:	mov	r4, fp
   114fc:	mov	r7, #1
   11500:	mov	r8, r7
   11504:	str	r4, [sp]
   11508:	mov	r3, r6
   1150c:	mov	r2, r5
   11510:	ldr	r1, [sp, #60]	; 0x3c
   11514:	ldr	r0, [sp, #56]	; 0x38
   11518:	bl	10e60 <getopt_long@plt>
   1151c:	cmn	r0, #1
   11520:	beq	11634 <close@plt+0x6d8>
   11524:	cmp	r0, #98	; 0x62
   11528:	beq	115ac <close@plt+0x650>
   1152c:	ble	11558 <close@plt+0x5fc>
   11530:	cmp	r0, #115	; 0x73
   11534:	beq	115b8 <close@plt+0x65c>
   11538:	ble	11594 <close@plt+0x638>
   1153c:	cmp	r0, #117	; 0x75
   11540:	beq	11504 <close@plt+0x5a8>
   11544:	blt	115c0 <close@plt+0x664>
   11548:	cmp	r0, #118	; 0x76
   1154c:	bne	11620 <close@plt+0x6c4>
   11550:	str	r7, [sp, #24]
   11554:	b	11504 <close@plt+0x5a8>
   11558:	cmp	r0, #65	; 0x41
   1155c:	beq	115cc <close@plt+0x670>
   11560:	bgt	1157c <close@plt+0x620>
   11564:	cmn	r0, #3
   11568:	beq	115e4 <close@plt+0x688>
   1156c:	cmn	r0, #2
   11570:	bne	11620 <close@plt+0x6c4>
   11574:	mov	r0, #0
   11578:	bl	1110c <close@plt+0x1b0>
   1157c:	cmp	r0, #69	; 0x45
   11580:	beq	115dc <close@plt+0x680>
   11584:	cmp	r0, #84	; 0x54
   11588:	bne	11620 <close@plt+0x6c4>
   1158c:	mov	fp, r7
   11590:	b	11504 <close@plt+0x5a8>
   11594:	cmp	r0, #101	; 0x65
   11598:	beq	11628 <close@plt+0x6cc>
   1159c:	cmp	r0, #110	; 0x6e
   115a0:	bne	11620 <close@plt+0x6c4>
   115a4:	str	r7, [sp, #32]
   115a8:	b	11504 <close@plt+0x5a8>
   115ac:	str	r7, [sp, #80]	; 0x50
   115b0:	str	r8, [sp, #32]
   115b4:	b	11504 <close@plt+0x5a8>
   115b8:	str	r7, [sp, #52]	; 0x34
   115bc:	b	11504 <close@plt+0x5a8>
   115c0:	mov	fp, r7
   115c4:	str	r8, [sp, #24]
   115c8:	b	11504 <close@plt+0x5a8>
   115cc:	mov	fp, r7
   115d0:	str	r8, [sp, #24]
   115d4:	str	r8, [sp, #36]	; 0x24
   115d8:	b	11504 <close@plt+0x5a8>
   115dc:	str	r7, [sp, #36]	; 0x24
   115e0:	b	11504 <close@plt+0x5a8>
   115e4:	mov	r4, #0
   115e8:	str	r4, [sp, #8]
   115ec:	ldr	r3, [pc, #3368]	; 1231c <close@plt+0x13c0>
   115f0:	str	r3, [sp, #4]
   115f4:	ldr	r3, [pc, #3364]	; 12320 <close@plt+0x13c4>
   115f8:	str	r3, [sp]
   115fc:	ldr	r3, [pc, #3360]	; 12324 <close@plt+0x13c8>
   11600:	ldr	r3, [r3]
   11604:	ldr	r2, [pc, #3356]	; 12328 <close@plt+0x13cc>
   11608:	ldr	r1, [pc, #3356]	; 1232c <close@plt+0x13d0>
   1160c:	ldr	r0, [pc, #3356]	; 12330 <close@plt+0x13d4>
   11610:	ldr	r0, [r0]
   11614:	bl	146a0 <close@plt+0x3744>
   11618:	mov	r0, r4
   1161c:	bl	10e78 <exit@plt>
   11620:	mov	r0, #1
   11624:	bl	1110c <close@plt+0x1b0>
   11628:	str	r7, [sp, #24]
   1162c:	str	r8, [sp, #36]	; 0x24
   11630:	b	11504 <close@plt+0x5a8>
   11634:	str	r0, [sp, #40]	; 0x28
   11638:	add	r2, sp, #136	; 0x88
   1163c:	mov	r1, #1
   11640:	mov	r0, #3
   11644:	bl	10db8 <__fxstat64@plt>
   11648:	cmp	r0, #0
   1164c:	blt	116f0 <close@plt+0x794>
   11650:	ldr	r3, [sp, #192]	; 0xc0
   11654:	sub	r1, r3, #131072	; 0x20000
   11658:	ldr	r2, [pc, #3284]	; 12334 <close@plt+0x13d8>
   1165c:	cmp	r1, r2
   11660:	movhi	sl, #131072	; 0x20000
   11664:	bhi	11678 <close@plt+0x71c>
   11668:	sub	r2, r3, #1
   1166c:	cmn	r2, #-536870911	; 0xe0000001
   11670:	movls	sl, r3
   11674:	movhi	sl, #512	; 0x200
   11678:	ldrd	r2, [sp, #136]	; 0x88
   1167c:	strd	r2, [sp, #104]	; 0x68
   11680:	ldrd	r2, [sp, #232]	; 0xe8
   11684:	strd	r2, [sp, #112]	; 0x70
   11688:	ldr	r3, [sp, #152]	; 0x98
   1168c:	and	r3, r3, #61440	; 0xf000
   11690:	str	r3, [sp, #84]	; 0x54
   11694:	ldr	r3, [sp, #32]
   11698:	ldr	r2, [sp, #36]	; 0x24
   1169c:	orr	r3, r3, r2
   116a0:	str	r3, [sp, #100]	; 0x64
   116a4:	ldr	r2, [pc, #3212]	; 12338 <close@plt+0x13dc>
   116a8:	ldr	r3, [pc, #3212]	; 1233c <close@plt+0x13e0>
   116ac:	str	r2, [r3]
   116b0:	ldr	r3, [pc, #3208]	; 12340 <close@plt+0x13e4>
   116b4:	ldr	r3, [r3]
   116b8:	str	r3, [sp, #72]	; 0x48
   116bc:	bl	10e90 <getpagesize@plt>
   116c0:	str	r0, [sp, #88]	; 0x58
   116c4:	mov	r3, #1
   116c8:	str	r3, [sp, #68]	; 0x44
   116cc:	mov	r3, #0
   116d0:	str	r3, [sp, #96]	; 0x60
   116d4:	ldr	r3, [sp, #24]
   116d8:	orr	r3, r3, fp
   116dc:	ldr	r2, [sp, #52]	; 0x34
   116e0:	orr	r3, r2, r3
   116e4:	str	r3, [sp, #120]	; 0x78
   116e8:	str	r3, [sp, #124]	; 0x7c
   116ec:	b	11dd8 <close@plt+0xe7c>
   116f0:	bl	10e9c <__errno_location@plt>
   116f4:	ldr	r4, [r0]
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #3136]	; 12344 <close@plt+0x13e8>
   11700:	mov	r0, #0
   11704:	bl	10d88 <dcgettext@plt>
   11708:	mov	r2, r0
   1170c:	mov	r1, r4
   11710:	mov	r0, #1
   11714:	bl	10e18 <error@plt>
   11718:	mov	r1, #0
   1171c:	mov	r0, r4
   11720:	bl	10e24 <open64@plt>
   11724:	ldr	r3, [pc, #3088]	; 1233c <close@plt+0x13e0>
   11728:	str	r0, [r3, #4]
   1172c:	cmp	r0, #0
   11730:	bge	11e28 <close@plt+0xecc>
   11734:	bl	10e9c <__errno_location@plt>
   11738:	ldr	r4, [r0]
   1173c:	ldr	r3, [pc, #3064]	; 1233c <close@plt+0x13e0>
   11740:	ldr	r2, [r3]
   11744:	mov	r1, #3
   11748:	mov	r0, #0
   1174c:	bl	13f84 <close@plt+0x3028>
   11750:	mov	r3, r0
   11754:	ldr	r2, [pc, #3052]	; 12348 <close@plt+0x13ec>
   11758:	mov	r1, r4
   1175c:	mov	r0, #0
   11760:	bl	10e18 <error@plt>
   11764:	mov	r3, #0
   11768:	str	r3, [sp, #68]	; 0x44
   1176c:	b	11dc0 <close@plt+0xe64>
   11770:	bl	10e9c <__errno_location@plt>
   11774:	ldr	r4, [r0]
   11778:	ldr	r3, [pc, #3004]	; 1233c <close@plt+0x13e0>
   1177c:	ldr	r2, [r3]
   11780:	mov	r1, #3
   11784:	mov	r0, #0
   11788:	bl	13f84 <close@plt+0x3028>
   1178c:	mov	r3, r0
   11790:	ldr	r2, [pc, #2992]	; 12348 <close@plt+0x13ec>
   11794:	mov	r1, r4
   11798:	mov	r0, #0
   1179c:	bl	10e18 <error@plt>
   117a0:	mov	r3, #0
   117a4:	str	r3, [sp, #68]	; 0x44
   117a8:	b	11db4 <close@plt+0xe58>
   117ac:	ldrd	r2, [sp, #136]	; 0x88
   117b0:	ldrd	r0, [sp, #104]	; 0x68
   117b4:	cmp	r1, r3
   117b8:	cmpeq	r0, r2
   117bc:	bne	11e94 <close@plt+0xf38>
   117c0:	ldrd	r2, [sp, #232]	; 0xe8
   117c4:	ldrd	r0, [sp, #112]	; 0x70
   117c8:	cmp	r1, r3
   117cc:	cmpeq	r0, r2
   117d0:	bne	11e94 <close@plt+0xf38>
   117d4:	mov	r3, #1
   117d8:	str	r3, [sp]
   117dc:	mov	r2, #0
   117e0:	mov	r3, #0
   117e4:	ldr	r1, [pc, #2896]	; 1233c <close@plt+0x13e0>
   117e8:	ldr	r0, [r1, #4]
   117ec:	bl	10de8 <lseek64@plt>
   117f0:	ldrd	r2, [sp, #184]	; 0xb8
   117f4:	cmp	r0, r2
   117f8:	sbcs	r3, r1, r3
   117fc:	bge	11e94 <close@plt+0xf38>
   11800:	mov	r2, #5
   11804:	ldr	r1, [pc, #2880]	; 1234c <close@plt+0x13f0>
   11808:	mov	r0, #0
   1180c:	bl	10d88 <dcgettext@plt>
   11810:	mov	r4, r0
   11814:	ldr	r3, [pc, #2848]	; 1233c <close@plt+0x13e0>
   11818:	ldr	r2, [r3]
   1181c:	mov	r1, #3
   11820:	mov	r0, #0
   11824:	bl	13f84 <close@plt+0x3028>
   11828:	mov	r3, r0
   1182c:	mov	r2, r4
   11830:	mov	r1, #0
   11834:	mov	r0, r1
   11838:	bl	10e18 <error@plt>
   1183c:	mov	r3, #0
   11840:	str	r3, [sp, #68]	; 0x44
   11844:	b	11db4 <close@plt+0xe58>
   11848:	ldr	r3, [sp, #152]	; 0x98
   1184c:	and	r3, r3, #61440	; 0xf000
   11850:	cmp	r3, #32768	; 0x8000
   11854:	bne	11ebc <close@plt+0xf60>
   11858:	ldr	r8, [sp, #124]	; 0x7c
   1185c:	mov	r5, #0
   11860:	mov	r9, #1
   11864:	mov	r6, r9
   11868:	str	r5, [sp, #4]
   1186c:	mov	r3, #1073741824	; 0x40000000
   11870:	str	r3, [sp]
   11874:	mov	r3, r5
   11878:	mov	r2, r9
   1187c:	mov	r1, r5
   11880:	ldr	r0, [pc, #2740]	; 1233c <close@plt+0x13e0>
   11884:	ldr	r0, [r0, #4]
   11888:	bl	10dc4 <copy_file_range@plt>
   1188c:	cmn	r0, #1
   11890:	beq	118d0 <close@plt+0x974>
   11894:	cmp	r0, #0
   11898:	bne	118c8 <close@plt+0x96c>
   1189c:	mov	r6, r8
   118a0:	cmp	r8, #0
   118a4:	beq	11ebc <close@plt+0xf60>
   118a8:	ldr	r3, [sp, #68]	; 0x44
   118ac:	cmp	r6, #0
   118b0:	movle	r3, #0
   118b4:	andgt	r3, r3, #1
   118b8:	str	r3, [sp, #68]	; 0x44
   118bc:	mov	r3, #0
   118c0:	str	r3, [sp, #28]
   118c4:	b	11dac <close@plt+0xe50>
   118c8:	mov	r8, r6
   118cc:	b	11868 <close@plt+0x90c>
   118d0:	mov	r6, r0
   118d4:	bl	10e9c <__errno_location@plt>
   118d8:	ldr	r5, [r0]
   118dc:	cmp	r5, #38	; 0x26
   118e0:	cmpne	r5, #95	; 0x5f
   118e4:	moveq	r2, #1
   118e8:	movne	r2, #0
   118ec:	cmp	r5, #26
   118f0:	ldrls	r3, [pc, #2648]	; 12350 <close@plt+0x13f4>
   118f4:	lsrls	r3, r3, r5
   118f8:	eorls	r3, r3, #1
   118fc:	andls	r3, r3, #1
   11900:	movhi	r3, #1
   11904:	eor	r3, r3, #1
   11908:	orrs	r3, r2, r3
   1190c:	bne	11ebc <close@plt+0xf60>
   11910:	ldr	r3, [pc, #2596]	; 1233c <close@plt+0x13e0>
   11914:	ldr	r2, [r3]
   11918:	mov	r1, #3
   1191c:	mov	r0, #0
   11920:	bl	13f84 <close@plt+0x3028>
   11924:	mov	r3, r0
   11928:	ldr	r2, [pc, #2584]	; 12348 <close@plt+0x13ec>
   1192c:	mov	r1, r5
   11930:	mov	r0, #0
   11934:	bl	10e18 <error@plt>
   11938:	b	118a8 <close@plt+0x94c>
   1193c:	bl	10e9c <__errno_location@plt>
   11940:	ldr	r4, [r0]
   11944:	ldr	r3, [pc, #2544]	; 1233c <close@plt+0x13e0>
   11948:	ldr	r2, [r3]
   1194c:	mov	r1, #3
   11950:	mov	r0, #0
   11954:	bl	13f84 <close@plt+0x3028>
   11958:	mov	r3, r0
   1195c:	ldr	r2, [pc, #2532]	; 12348 <close@plt+0x13ec>
   11960:	mov	r1, r4
   11964:	mov	r0, #0
   11968:	bl	10e18 <error@plt>
   1196c:	ldr	r3, [sp, #68]	; 0x44
   11970:	and	r3, r3, r7
   11974:	str	r3, [sp, #68]	; 0x44
   11978:	b	11dac <close@plt+0xe50>
   1197c:	mov	r7, #1
   11980:	b	1196c <close@plt+0xa10>
   11984:	add	r1, r4, #1
   11988:	ldr	r0, [sp, #88]	; 0x58
   1198c:	bl	1476c <close@plt+0x3810>
   11990:	str	r0, [sp, #28]
   11994:	cmp	r4, #0
   11998:	blt	11a54 <close@plt+0xaf8>
   1199c:	cmn	r4, #-536870911	; 0xe0000001
   119a0:	movle	r3, #0
   119a4:	movgt	r3, #1
   119a8:	cmp	r3, #0
   119ac:	bne	1220c <close@plt+0x12b0>
   119b0:	str	r4, [sp, #48]	; 0x30
   119b4:	lsl	r4, r4, #2
   119b8:	cmp	sl, #0
   119bc:	blt	11a7c <close@plt+0xb20>
   119c0:	cmp	r4, #0
   119c4:	blt	11a90 <close@plt+0xb34>
   119c8:	mvn	r3, #-2147483648	; 0x80000000
   119cc:	sub	r3, r3, sl
   119d0:	cmp	r4, r3
   119d4:	movle	r3, #0
   119d8:	movgt	r3, #1
   119dc:	cmp	r3, #0
   119e0:	bne	1220c <close@plt+0x12b0>
   119e4:	mov	r6, sl
   119e8:	adds	r4, r4, sl
   119ec:	bmi	11aa4 <close@plt+0xb48>
   119f0:	cmn	r4, #-2147483628	; 0x80000014
   119f4:	movle	r3, #0
   119f8:	movgt	r3, #1
   119fc:	str	r3, [sp, #76]	; 0x4c
   11a00:	ldr	r3, [sp, #76]	; 0x4c
   11a04:	cmp	r3, #0
   11a08:	bne	1220c <close@plt+0x12b0>
   11a0c:	add	r1, r4, #19
   11a10:	ldr	r0, [sp, #88]	; 0x58
   11a14:	bl	1476c <close@plt+0x3810>
   11a18:	str	r0, [sp, #16]
   11a1c:	ldr	r3, [pc, #2328]	; 1233c <close@plt+0x13e0>
   11a20:	ldr	r9, [r3, #8]
   11a24:	ldr	r3, [sp, #28]
   11a28:	add	r5, r3, #1
   11a2c:	mov	r4, r0
   11a30:	str	r3, [sp, #20]
   11a34:	mov	r3, #1
   11a38:	str	r3, [sp, #44]	; 0x2c
   11a3c:	ldr	r3, [sp, #80]	; 0x50
   11a40:	eor	r3, r3, #1
   11a44:	ldr	r2, [sp, #32]
   11a48:	and	r3, r2, r3
   11a4c:	str	r3, [sp, #64]	; 0x40
   11a50:	b	11ac0 <close@plt+0xb64>
   11a54:	cmn	r4, #1
   11a58:	moveq	r3, #0
   11a5c:	beq	119a8 <close@plt+0xa4c>
   11a60:	mov	r1, r4
   11a64:	mov	r0, #-2147483648	; 0x80000000
   11a68:	bl	1544c <close@plt+0x44f0>
   11a6c:	cmp	r0, #3
   11a70:	movgt	r3, #0
   11a74:	movle	r3, #1
   11a78:	b	119a8 <close@plt+0xa4c>
   11a7c:	rsb	r3, sl, #-2147483648	; 0x80000000
   11a80:	cmp	r4, r3
   11a84:	movge	r3, #0
   11a88:	movlt	r3, #1
   11a8c:	b	119dc <close@plt+0xa80>
   11a90:	rsb	r3, r4, #-2147483648	; 0x80000000
   11a94:	cmp	r3, sl
   11a98:	movle	r3, #0
   11a9c:	movgt	r3, #1
   11aa0:	b	119dc <close@plt+0xa80>
   11aa4:	rsb	r3, r4, #-2147483648	; 0x80000000
   11aa8:	cmp	r3, #19
   11aac:	movle	r3, #0
   11ab0:	movgt	r3, #1
   11ab4:	str	r3, [sp, #76]	; 0x4c
   11ab8:	b	11a00 <close@plt+0xaa4>
   11abc:	ldr	r9, [sp, #40]	; 0x28
   11ac0:	ldr	r7, [sp, #16]
   11ac4:	add	r3, r7, r6
   11ac8:	cmp	r3, r4
   11acc:	bhi	11b24 <close@plt+0xbc8>
   11ad0:	sub	r4, r4, r3
   11ad4:	mov	r8, #1
   11ad8:	b	11ae0 <close@plt+0xb84>
   11adc:	mov	r4, r3
   11ae0:	mov	r2, r6
   11ae4:	mov	r1, r7
   11ae8:	mov	r0, r8
   11aec:	bl	12534 <close@plt+0x15d8>
   11af0:	cmp	r6, r0
   11af4:	bne	11b74 <close@plt+0xc18>
   11af8:	add	r7, r7, r6
   11afc:	sub	r3, r4, sl
   11b00:	add	r2, r6, r3
   11b04:	cmp	sl, r2
   11b08:	ble	11adc <close@plt+0xb80>
   11b0c:	mov	r2, r4
   11b10:	mov	r1, r7
   11b14:	ldr	r7, [sp, #16]
   11b18:	mov	r0, r7
   11b1c:	bl	10d28 <memmove@plt>
   11b20:	add	r4, r7, r4
   11b24:	ldr	r3, [sp, #20]
   11b28:	cmp	r3, r5
   11b2c:	bcs	11fc8 <close@plt+0x106c>
   11b30:	mov	r3, #0
   11b34:	str	r3, [sp, #132]	; 0x84
   11b38:	ldr	r3, [sp, #44]	; 0x2c
   11b3c:	cmp	r3, #0
   11b40:	bne	11b9c <close@plt+0xc40>
   11b44:	ldr	r3, [sp, #16]
   11b48:	sub	r5, r4, r3
   11b4c:	cmp	r5, #0
   11b50:	ble	11bc4 <close@plt+0xc68>
   11b54:	mov	r2, r5
   11b58:	mov	r1, r3
   11b5c:	mov	r0, #1
   11b60:	bl	12534 <close@plt+0x15d8>
   11b64:	cmp	r5, r0
   11b68:	bne	11d08 <close@plt+0xdac>
   11b6c:	ldr	r4, [sp, #16]
   11b70:	b	11bc4 <close@plt+0xc68>
   11b74:	bl	10e9c <__errno_location@plt>
   11b78:	ldr	r4, [r0]
   11b7c:	mov	r2, #5
   11b80:	ldr	r1, [pc, #1996]	; 12354 <close@plt+0x13f8>
   11b84:	mov	r0, #0
   11b88:	bl	10d88 <dcgettext@plt>
   11b8c:	mov	r2, r0
   11b90:	mov	r1, r4
   11b94:	mov	r0, #1
   11b98:	bl	10e18 <error@plt>
   11b9c:	add	r2, sp, #132	; 0x84
   11ba0:	ldr	r1, [pc, #1968]	; 12358 <close@plt+0x13fc>
   11ba4:	ldr	r3, [pc, #1936]	; 1233c <close@plt+0x13e0>
   11ba8:	ldr	r0, [r3, #4]
   11bac:	bl	10ddc <ioctl@plt>
   11bb0:	cmp	r0, #0
   11bb4:	blt	11c78 <close@plt+0xd1c>
   11bb8:	ldr	r3, [sp, #132]	; 0x84
   11bbc:	cmp	r3, #0
   11bc0:	beq	11b44 <close@plt+0xbe8>
   11bc4:	ldr	r2, [sp, #48]	; 0x30
   11bc8:	ldr	r1, [sp, #28]
   11bcc:	ldr	r3, [pc, #1896]	; 1233c <close@plt+0x13e0>
   11bd0:	ldr	r0, [r3, #4]
   11bd4:	bl	14100 <close@plt+0x31a4>
   11bd8:	cmn	r0, #1
   11bdc:	beq	11d30 <close@plt+0xdd4>
   11be0:	cmp	r0, #0
   11be4:	beq	11f68 <close@plt+0x100c>
   11be8:	ldr	r2, [sp, #28]
   11bec:	add	r3, r2, r0
   11bf0:	str	r3, [sp, #20]
   11bf4:	mov	r3, #10
   11bf8:	strb	r3, [r2, r0]
   11bfc:	mov	r3, r2
   11c00:	add	r5, r3, #1
   11c04:	ldrb	r7, [r3]
   11c08:	cmp	r7, #10
   11c0c:	beq	11ac0 <close@plt+0xb64>
   11c10:	ldr	r3, [pc, #1828]	; 1233c <close@plt+0x13e0>
   11c14:	ldrb	r3, [r3, #12]
   11c18:	cmp	r3, #0
   11c1c:	beq	11c38 <close@plt+0xcdc>
   11c20:	mov	r3, #13
   11c24:	strb	r3, [r4]
   11c28:	mov	r3, #0
   11c2c:	ldr	r2, [pc, #1800]	; 1233c <close@plt+0x13e0>
   11c30:	strb	r3, [r2, #12]
   11c34:	add	r4, r4, #1
   11c38:	ldr	r3, [sp, #32]
   11c3c:	cmp	r9, #0
   11c40:	movlt	r3, #0
   11c44:	andge	r3, r3, #1
   11c48:	cmp	r3, #0
   11c4c:	bne	12080 <close@plt+0x1124>
   11c50:	ldr	r3, [sp, #24]
   11c54:	cmp	r3, #0
   11c58:	beq	12150 <close@plt+0x11f4>
   11c5c:	mov	lr, #77	; 0x4d
   11c60:	mov	ip, #45	; 0x2d
   11c64:	mov	r1, #94	; 0x5e
   11c68:	mov	r8, #63	; 0x3f
   11c6c:	eor	r2, fp, #1
   11c70:	mov	r0, #9
   11c74:	b	12100 <close@plt+0x11a4>
   11c78:	bl	10e9c <__errno_location@plt>
   11c7c:	ldr	r7, [r0]
   11c80:	cmp	r7, #95	; 0x5f
   11c84:	movne	r3, #0
   11c88:	moveq	r3, #1
   11c8c:	sub	r1, r7, #19
   11c90:	cmp	r1, #19
   11c94:	ldrls	r2, [pc, #1728]	; 1235c <close@plt+0x1400>
   11c98:	lsrls	r2, r2, r1
   11c9c:	eorls	r2, r2, #1
   11ca0:	andls	r2, r2, #1
   11ca4:	strls	r2, [sp, #44]	; 0x2c
   11ca8:	ldr	r2, [sp, #44]	; 0x2c
   11cac:	eor	r2, r2, #1
   11cb0:	orr	r3, r3, r2
   11cb4:	ands	r5, r3, #255	; 0xff
   11cb8:	ldrne	r3, [sp, #76]	; 0x4c
   11cbc:	strne	r3, [sp, #44]	; 0x2c
   11cc0:	bne	11bb8 <close@plt+0xc5c>
   11cc4:	mov	r2, #5
   11cc8:	ldr	r1, [pc, #1680]	; 12360 <close@plt+0x1404>
   11ccc:	mov	r0, #0
   11cd0:	bl	10d88 <dcgettext@plt>
   11cd4:	mov	r4, r0
   11cd8:	ldr	r3, [pc, #1628]	; 1233c <close@plt+0x13e0>
   11cdc:	ldr	r1, [r3]
   11ce0:	mov	r0, #4
   11ce4:	bl	13eb8 <close@plt+0x2f5c>
   11ce8:	mov	r3, r0
   11cec:	mov	r2, r4
   11cf0:	mov	r1, r7
   11cf4:	mov	r0, #0
   11cf8:	bl	10e18 <error@plt>
   11cfc:	ldr	r3, [pc, #1592]	; 1233c <close@plt+0x13e0>
   11d00:	str	r9, [r3, #8]
   11d04:	b	11d98 <close@plt+0xe3c>
   11d08:	bl	10e9c <__errno_location@plt>
   11d0c:	ldr	r4, [r0]
   11d10:	mov	r2, #5
   11d14:	ldr	r1, [pc, #1592]	; 12354 <close@plt+0x13f8>
   11d18:	mov	r0, #0
   11d1c:	bl	10d88 <dcgettext@plt>
   11d20:	mov	r2, r0
   11d24:	mov	r1, r4
   11d28:	mov	r0, #1
   11d2c:	bl	10e18 <error@plt>
   11d30:	bl	10e9c <__errno_location@plt>
   11d34:	mov	r6, r0
   11d38:	ldr	r5, [r0]
   11d3c:	ldr	r3, [pc, #1528]	; 1233c <close@plt+0x13e0>
   11d40:	ldr	r2, [r3]
   11d44:	mov	r1, #3
   11d48:	mov	r0, #0
   11d4c:	bl	13f84 <close@plt+0x3028>
   11d50:	mov	r3, r0
   11d54:	ldr	r2, [pc, #1516]	; 12348 <close@plt+0x13ec>
   11d58:	mov	r1, r5
   11d5c:	mov	r0, #0
   11d60:	bl	10e18 <error@plt>
   11d64:	ldr	r3, [sp, #16]
   11d68:	sub	r4, r4, r3
   11d6c:	cmp	r4, #0
   11d70:	ble	11d8c <close@plt+0xe30>
   11d74:	mov	r2, r4
   11d78:	mov	r1, r3
   11d7c:	mov	r0, #1
   11d80:	bl	12534 <close@plt+0x15d8>
   11d84:	cmp	r4, r0
   11d88:	bne	11f44 <close@plt+0xfe8>
   11d8c:	ldr	r3, [pc, #1448]	; 1233c <close@plt+0x13e0>
   11d90:	str	r9, [r3, #8]
   11d94:	ldr	r5, [sp, #76]	; 0x4c
   11d98:	ldr	r3, [sp, #68]	; 0x44
   11d9c:	and	r3, r3, r5
   11da0:	str	r3, [sp, #68]	; 0x44
   11da4:	ldr	r0, [sp, #16]
   11da8:	bl	124dc <close@plt+0x1580>
   11dac:	ldr	r0, [sp, #28]
   11db0:	bl	124dc <close@plt+0x1580>
   11db4:	ldr	r3, [sp, #92]	; 0x5c
   11db8:	cmp	r3, #0
   11dbc:	bne	12210 <close@plt+0x12b4>
   11dc0:	ldr	r3, [sp, #72]	; 0x48
   11dc4:	add	r3, r3, #1
   11dc8:	str	r3, [sp, #72]	; 0x48
   11dcc:	ldr	r2, [sp, #56]	; 0x38
   11dd0:	cmp	r2, r3
   11dd4:	ble	12260 <close@plt+0x1304>
   11dd8:	ldr	r3, [sp, #72]	; 0x48
   11ddc:	ldr	r2, [sp, #56]	; 0x38
   11de0:	cmp	r3, r2
   11de4:	ldrlt	r2, [sp, #60]	; 0x3c
   11de8:	ldrlt	r3, [r2, r3, lsl #2]
   11dec:	ldrlt	r2, [pc, #1352]	; 1233c <close@plt+0x13e0>
   11df0:	strlt	r3, [r2]
   11df4:	ldr	r3, [pc, #1344]	; 1233c <close@plt+0x13e0>
   11df8:	ldr	r4, [r3]
   11dfc:	ldr	r1, [pc, #1332]	; 12338 <close@plt+0x13dc>
   11e00:	mov	r0, r4
   11e04:	bl	10cf8 <strcmp@plt>
   11e08:	subs	r3, r0, #0
   11e0c:	str	r3, [sp, #92]	; 0x5c
   11e10:	bne	11718 <close@plt+0x7bc>
   11e14:	mov	r3, #0
   11e18:	ldr	r2, [pc, #1308]	; 1233c <close@plt+0x13e0>
   11e1c:	str	r3, [r2, #4]
   11e20:	mov	r3, #1
   11e24:	str	r3, [sp, #96]	; 0x60
   11e28:	ldr	r3, [pc, #1292]	; 1233c <close@plt+0x13e0>
   11e2c:	ldr	r5, [r3, #4]
   11e30:	add	r2, sp, #136	; 0x88
   11e34:	mov	r1, r5
   11e38:	mov	r0, #3
   11e3c:	bl	10db8 <__fxstat64@plt>
   11e40:	cmp	r0, #0
   11e44:	blt	11770 <close@plt+0x814>
   11e48:	ldr	r4, [sp, #192]	; 0xc0
   11e4c:	sub	r2, r4, #131072	; 0x20000
   11e50:	ldr	r3, [pc, #1244]	; 12334 <close@plt+0x13d8>
   11e54:	cmp	r2, r3
   11e58:	movhi	r4, #131072	; 0x20000
   11e5c:	bhi	11e6c <close@plt+0xf10>
   11e60:	sub	r3, r4, #1
   11e64:	cmn	r3, #-536870911	; 0xe0000001
   11e68:	movhi	r4, #512	; 0x200
   11e6c:	mov	r3, #2
   11e70:	str	r3, [sp, #8]
   11e74:	mov	r2, #0
   11e78:	mov	r3, #0
   11e7c:	strd	r2, [sp]
   11e80:	mov	r0, r5
   11e84:	bl	12484 <close@plt+0x1528>
   11e88:	ldr	r3, [sp, #84]	; 0x54
   11e8c:	cmp	r3, #32768	; 0x8000
   11e90:	beq	117ac <close@plt+0x850>
   11e94:	ldr	r3, [sp, #100]	; 0x64
   11e98:	cmp	r3, #0
   11e9c:	bne	11984 <close@plt+0xa28>
   11ea0:	ldr	r3, [sp, #120]	; 0x78
   11ea4:	mov	r7, r3
   11ea8:	cmp	r3, #0
   11eac:	bne	11984 <close@plt+0xa28>
   11eb0:	ldr	r3, [sp, #84]	; 0x54
   11eb4:	cmp	r3, #32768	; 0x8000
   11eb8:	beq	11848 <close@plt+0x8ec>
   11ebc:	cmp	sl, r4
   11ec0:	movge	r5, sl
   11ec4:	movlt	r5, r4
   11ec8:	mov	r1, r5
   11ecc:	ldr	r0, [sp, #88]	; 0x58
   11ed0:	bl	1476c <close@plt+0x3810>
   11ed4:	str	r0, [sp, #28]
   11ed8:	mov	r6, #1
   11edc:	mov	r2, r5
   11ee0:	ldr	r1, [sp, #28]
   11ee4:	ldr	r3, [pc, #1104]	; 1233c <close@plt+0x13e0>
   11ee8:	ldr	r0, [r3, #4]
   11eec:	bl	14100 <close@plt+0x31a4>
   11ef0:	mov	r4, r0
   11ef4:	cmn	r0, #1
   11ef8:	beq	1193c <close@plt+0x9e0>
   11efc:	cmp	r0, #0
   11f00:	beq	1197c <close@plt+0xa20>
   11f04:	mov	r2, r0
   11f08:	ldr	r1, [sp, #28]
   11f0c:	mov	r0, r6
   11f10:	bl	12534 <close@plt+0x15d8>
   11f14:	cmp	r4, r0
   11f18:	beq	11edc <close@plt+0xf80>
   11f1c:	bl	10e9c <__errno_location@plt>
   11f20:	ldr	r4, [r0]
   11f24:	mov	r2, #5
   11f28:	ldr	r1, [pc, #1060]	; 12354 <close@plt+0x13f8>
   11f2c:	mov	r0, #0
   11f30:	bl	10d88 <dcgettext@plt>
   11f34:	mov	r2, r0
   11f38:	mov	r1, r4
   11f3c:	mov	r0, #1
   11f40:	bl	10e18 <error@plt>
   11f44:	ldr	r4, [r6]
   11f48:	mov	r2, #5
   11f4c:	ldr	r1, [pc, #1024]	; 12354 <close@plt+0x13f8>
   11f50:	mov	r0, #0
   11f54:	bl	10d88 <dcgettext@plt>
   11f58:	mov	r2, r0
   11f5c:	mov	r1, r4
   11f60:	mov	r0, #1
   11f64:	bl	10e18 <error@plt>
   11f68:	ldr	r3, [sp, #16]
   11f6c:	sub	r4, r4, r3
   11f70:	cmp	r4, #0
   11f74:	ble	11f90 <close@plt+0x1034>
   11f78:	mov	r2, r4
   11f7c:	mov	r1, r3
   11f80:	mov	r0, #1
   11f84:	bl	12534 <close@plt+0x15d8>
   11f88:	cmp	r4, r0
   11f8c:	bne	11fa0 <close@plt+0x1044>
   11f90:	ldr	r3, [pc, #932]	; 1233c <close@plt+0x13e0>
   11f94:	str	r9, [r3, #8]
   11f98:	mov	r5, #1
   11f9c:	b	11d98 <close@plt+0xe3c>
   11fa0:	bl	10e9c <__errno_location@plt>
   11fa4:	ldr	r4, [r0]
   11fa8:	mov	r2, #5
   11fac:	ldr	r1, [pc, #928]	; 12354 <close@plt+0x13f8>
   11fb0:	mov	r0, #0
   11fb4:	bl	10d88 <dcgettext@plt>
   11fb8:	mov	r2, r0
   11fbc:	mov	r1, r4
   11fc0:	mov	r0, #1
   11fc4:	bl	10e18 <error@plt>
   11fc8:	add	r9, r9, #1
   11fcc:	cmp	r9, #0
   11fd0:	ble	12004 <close@plt+0x10a8>
   11fd4:	cmp	r9, #1
   11fd8:	ble	11ff8 <close@plt+0x109c>
   11fdc:	ldr	r3, [sp, #52]	; 0x34
   11fe0:	cmp	r3, #0
   11fe4:	ldrbne	r7, [r5]
   11fe8:	addne	r5, r5, #1
   11fec:	movne	r9, #2
   11ff0:	bne	11c08 <close@plt+0xcac>
   11ff4:	mov	r9, #2
   11ff8:	ldr	r3, [sp, #64]	; 0x40
   11ffc:	cmp	r3, #0
   12000:	bne	12064 <close@plt+0x1108>
   12004:	ldr	r3, [sp, #36]	; 0x24
   12008:	cmp	r3, #0
   1200c:	beq	12050 <close@plt+0x10f4>
   12010:	ldr	r3, [pc, #804]	; 1233c <close@plt+0x13e0>
   12014:	ldrb	r3, [r3, #12]
   12018:	cmp	r3, #0
   1201c:	beq	12044 <close@plt+0x10e8>
   12020:	mov	r3, r4
   12024:	mov	r2, #94	; 0x5e
   12028:	strb	r2, [r3], #2
   1202c:	mov	r2, #77	; 0x4d
   12030:	strb	r2, [r4, #1]
   12034:	mov	r2, #0
   12038:	ldr	r1, [pc, #764]	; 1233c <close@plt+0x13e0>
   1203c:	strb	r2, [r1, #12]
   12040:	mov	r4, r3
   12044:	mov	r3, #36	; 0x24
   12048:	strb	r3, [r4]
   1204c:	add	r4, r4, #1
   12050:	mov	r3, #10
   12054:	strb	r3, [r4]
   12058:	add	r4, r4, #1
   1205c:	mov	r3, r5
   12060:	b	11c00 <close@plt+0xca4>
   12064:	bl	11090 <close@plt+0x134>
   12068:	ldr	r3, [pc, #756]	; 12364 <close@plt+0x1408>
   1206c:	ldr	r1, [r3, #24]
   12070:	mov	r0, r4
   12074:	bl	10d70 <stpcpy@plt>
   12078:	mov	r4, r0
   1207c:	b	12004 <close@plt+0x10a8>
   12080:	bl	11090 <close@plt+0x134>
   12084:	ldr	r3, [pc, #728]	; 12364 <close@plt+0x1408>
   12088:	ldr	r1, [r3, #24]
   1208c:	mov	r0, r4
   12090:	bl	10d70 <stpcpy@plt>
   12094:	mov	r4, r0
   12098:	b	11c50 <close@plt+0xcf4>
   1209c:	mov	r3, r4
   120a0:	strb	r1, [r3], #2
   120a4:	strb	r8, [r4, #1]
   120a8:	mov	r4, r3
   120ac:	b	120fc <close@plt+0x11a0>
   120b0:	strb	r1, [r4, #2]
   120b4:	sub	r7, r7, #64	; 0x40
   120b8:	strb	r7, [r4, #3]
   120bc:	add	r4, r4, #4
   120c0:	b	120fc <close@plt+0x11a0>
   120c4:	cmp	r7, #9
   120c8:	movne	r3, #0
   120cc:	andeq	r3, r2, #1
   120d0:	cmp	r3, #0
   120d4:	strbne	r0, [r4]
   120d8:	addne	r4, r4, #1
   120dc:	bne	120fc <close@plt+0x11a0>
   120e0:	cmp	r7, #10
   120e4:	beq	11abc <close@plt+0xb60>
   120e8:	mov	r3, r4
   120ec:	strb	r1, [r3], #2
   120f0:	add	r7, r7, #64	; 0x40
   120f4:	strb	r7, [r4, #1]
   120f8:	mov	r4, r3
   120fc:	ldrb	r7, [r5], #1
   12100:	cmp	r7, #31
   12104:	bls	120c4 <close@plt+0x1168>
   12108:	cmp	r7, #126	; 0x7e
   1210c:	strbls	r7, [r4]
   12110:	addls	r4, r4, #1
   12114:	bls	120fc <close@plt+0x11a0>
   12118:	cmp	r7, #127	; 0x7f
   1211c:	beq	1209c <close@plt+0x1140>
   12120:	strb	lr, [r4]
   12124:	strb	ip, [r4, #1]
   12128:	cmp	r7, #159	; 0x9f
   1212c:	bls	120b0 <close@plt+0x1154>
   12130:	cmp	r7, #255	; 0xff
   12134:	subne	r7, r7, #128	; 0x80
   12138:	strbne	r7, [r4, #2]
   1213c:	addne	r4, r4, #3
   12140:	strbeq	r1, [r4, #2]
   12144:	strbeq	r8, [r4, #3]
   12148:	addeq	r4, r4, #4
   1214c:	b	120fc <close@plt+0x11a0>
   12150:	ldr	r3, [pc, #484]	; 1233c <close@plt+0x13e0>
   12154:	ldrb	ip, [r3, #12]
   12158:	ldr	r1, [sp, #24]
   1215c:	mov	r2, #94	; 0x5e
   12160:	mov	r0, #77	; 0x4d
   12164:	ldr	lr, [sp, #36]	; 0x24
   12168:	b	12188 <close@plt+0x122c>
   1216c:	cmp	r7, #10
   12170:	beq	121b4 <close@plt+0x1258>
   12174:	cmp	r7, #13
   12178:	beq	121c8 <close@plt+0x126c>
   1217c:	strb	r7, [r4]
   12180:	add	r4, r4, #1
   12184:	ldrb	r7, [r5], #1
   12188:	cmp	r7, #9
   1218c:	movne	r3, #0
   12190:	andeq	r3, fp, #1
   12194:	cmp	r3, #0
   12198:	beq	1216c <close@plt+0x1210>
   1219c:	mov	r3, r4
   121a0:	strb	r2, [r3], #2
   121a4:	add	r7, r7, #64	; 0x40
   121a8:	strb	r7, [r4, #1]
   121ac:	mov	r4, r3
   121b0:	b	12184 <close@plt+0x1228>
   121b4:	cmp	r1, #0
   121b8:	ldrne	r3, [pc, #380]	; 1233c <close@plt+0x13e0>
   121bc:	strbne	ip, [r3, #12]
   121c0:	ldr	r9, [sp, #40]	; 0x28
   121c4:	b	11ac0 <close@plt+0xb64>
   121c8:	ldrb	r3, [r5]
   121cc:	cmp	r3, #10
   121d0:	movne	r3, #0
   121d4:	andeq	r3, lr, #1
   121d8:	cmp	r3, #0
   121dc:	beq	1217c <close@plt+0x1220>
   121e0:	ldr	r7, [sp, #20]
   121e4:	cmp	r5, r7
   121e8:	beq	12200 <close@plt+0x12a4>
   121ec:	mov	r3, r4
   121f0:	strb	r2, [r3], #2
   121f4:	strb	r0, [r4, #1]
   121f8:	mov	r4, r3
   121fc:	b	12184 <close@plt+0x1228>
   12200:	mov	r1, r3
   12204:	mov	ip, r3
   12208:	b	12184 <close@plt+0x1228>
   1220c:	bl	14d24 <close@plt+0x3dc8>
   12210:	ldr	r3, [pc, #292]	; 1233c <close@plt+0x13e0>
   12214:	ldr	r0, [r3, #4]
   12218:	bl	10f5c <close@plt>
   1221c:	cmp	r0, #0
   12220:	bge	11dc0 <close@plt+0xe64>
   12224:	bl	10e9c <__errno_location@plt>
   12228:	ldr	r4, [r0]
   1222c:	ldr	r3, [pc, #264]	; 1233c <close@plt+0x13e0>
   12230:	ldr	r2, [r3]
   12234:	mov	r1, #3
   12238:	mov	r0, #0
   1223c:	bl	13f84 <close@plt+0x3028>
   12240:	mov	r3, r0
   12244:	ldr	r2, [pc, #252]	; 12348 <close@plt+0x13ec>
   12248:	mov	r1, r4
   1224c:	mov	r0, #0
   12250:	bl	10e18 <error@plt>
   12254:	mov	r3, #0
   12258:	str	r3, [sp, #68]	; 0x44
   1225c:	b	11dc0 <close@plt+0xe64>
   12260:	ldr	r3, [pc, #212]	; 1233c <close@plt+0x13e0>
   12264:	ldrb	r3, [r3, #12]
   12268:	cmp	r3, #0
   1226c:	bne	1228c <close@plt+0x1330>
   12270:	ldr	r3, [sp, #96]	; 0x60
   12274:	cmp	r3, #0
   12278:	bne	122cc <close@plt+0x1370>
   1227c:	ldr	r3, [sp, #68]	; 0x44
   12280:	eor	r0, r3, #1
   12284:	add	sp, sp, #244	; 0xf4
   12288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1228c:	mov	r2, #1
   12290:	ldr	r1, [pc, #208]	; 12368 <close@plt+0x140c>
   12294:	mov	r0, r2
   12298:	bl	12534 <close@plt+0x15d8>
   1229c:	cmp	r0, #1
   122a0:	beq	12270 <close@plt+0x1314>
   122a4:	bl	10e9c <__errno_location@plt>
   122a8:	ldr	r4, [r0]
   122ac:	mov	r2, #5
   122b0:	ldr	r1, [pc, #156]	; 12354 <close@plt+0x13f8>
   122b4:	mov	r0, #0
   122b8:	bl	10d88 <dcgettext@plt>
   122bc:	mov	r2, r0
   122c0:	mov	r1, r4
   122c4:	mov	r0, #1
   122c8:	bl	10e18 <error@plt>
   122cc:	mov	r0, #0
   122d0:	bl	10f5c <close@plt>
   122d4:	cmp	r0, #0
   122d8:	bge	1227c <close@plt+0x1320>
   122dc:	bl	10e9c <__errno_location@plt>
   122e0:	ldr	r4, [r0]
   122e4:	mov	r2, #5
   122e8:	ldr	r1, [pc, #124]	; 1236c <close@plt+0x1410>
   122ec:	mov	r0, #0
   122f0:	bl	10d88 <dcgettext@plt>
   122f4:	mov	r2, r0
   122f8:	mov	r1, r4
   122fc:	mov	r0, #1
   12300:	bl	10e18 <error@plt>
   12304:	andeq	r5, r1, r8, asr #16
   12308:	andeq	r5, r1, ip, lsl #24
   1230c:			; <UNDEFINED> instruction: 0x00015cb4
   12310:	muleq	r1, r0, r3
   12314:	andeq	r5, r1, ip, asr r7
   12318:	strdeq	r5, [r1], -r4
   1231c:	andeq	r5, r1, ip, asr #25
   12320:	andeq	r5, r1, r0, ror #25
   12324:	andeq	r7, r2, r0, lsl r1
   12328:	andeq	r5, r1, r8, lsl #24
   1232c:	strdeq	r5, [r1], -ip
   12330:	andeq	r7, r2, ip, ror #2
   12334:	svcne	0x00fe0000
   12338:	andeq	r5, r1, r0, lsl sp
   1233c:	andeq	r7, r2, r4, ror r1
   12340:	andeq	r7, r2, r0, ror #2
   12344:	andeq	r5, r1, r0, lsl #26
   12348:	andeq	r5, r1, r4, ror #28
   1234c:	andeq	r5, r1, r4, lsl sp
   12350:	strbeq	r0, [r4], #-514	; 0xfffffdfe
   12354:	andeq	r5, r1, r4, lsr sp
   12358:	andeq	r5, r0, fp, lsl r4
   1235c:	andeq	r0, r8, r9, asr #32
   12360:	andeq	r5, r1, r0, asr #26
   12364:	strdeq	r7, [r2], -r4
   12368:	andeq	r5, r1, r8, asr sp
   1236c:	andeq	r5, r1, ip, asr sp
   12370:	ldr	r3, [pc, #4]	; 1237c <close@plt+0x1420>
   12374:	str	r0, [r3]
   12378:	bx	lr
   1237c:	andeq	r7, r2, r4, lsl #3
   12380:	ldr	r3, [pc, #4]	; 1238c <close@plt+0x1430>
   12384:	strb	r0, [r3, #4]
   12388:	bx	lr
   1238c:	andeq	r7, r2, r4, lsl #3
   12390:	push	{r4, r5, r6, lr}
   12394:	sub	sp, sp, #8
   12398:	ldr	r3, [pc, #200]	; 12468 <close@plt+0x150c>
   1239c:	ldr	r0, [r3]
   123a0:	bl	14e34 <close@plt+0x3ed8>
   123a4:	cmp	r0, #0
   123a8:	beq	123cc <close@plt+0x1470>
   123ac:	ldr	r3, [pc, #184]	; 1246c <close@plt+0x1510>
   123b0:	ldrb	r3, [r3, #4]
   123b4:	cmp	r3, #0
   123b8:	beq	123e8 <close@plt+0x148c>
   123bc:	bl	10e9c <__errno_location@plt>
   123c0:	ldr	r3, [r0]
   123c4:	cmp	r3, #32
   123c8:	bne	123e8 <close@plt+0x148c>
   123cc:	ldr	r3, [pc, #156]	; 12470 <close@plt+0x1514>
   123d0:	ldr	r0, [r3]
   123d4:	bl	14e34 <close@plt+0x3ed8>
   123d8:	cmp	r0, #0
   123dc:	bne	1245c <close@plt+0x1500>
   123e0:	add	sp, sp, #8
   123e4:	pop	{r4, r5, r6, pc}
   123e8:	mov	r2, #5
   123ec:	ldr	r1, [pc, #128]	; 12474 <close@plt+0x1518>
   123f0:	mov	r0, #0
   123f4:	bl	10d88 <dcgettext@plt>
   123f8:	mov	r4, r0
   123fc:	ldr	r3, [pc, #104]	; 1246c <close@plt+0x1510>
   12400:	ldr	r5, [r3]
   12404:	cmp	r5, #0
   12408:	beq	12440 <close@plt+0x14e4>
   1240c:	bl	10e9c <__errno_location@plt>
   12410:	ldr	r6, [r0]
   12414:	mov	r0, r5
   12418:	bl	13f64 <close@plt+0x3008>
   1241c:	str	r4, [sp]
   12420:	mov	r3, r0
   12424:	ldr	r2, [pc, #76]	; 12478 <close@plt+0x151c>
   12428:	mov	r1, r6
   1242c:	mov	r0, #0
   12430:	bl	10e18 <error@plt>
   12434:	ldr	r3, [pc, #64]	; 1247c <close@plt+0x1520>
   12438:	ldr	r0, [r3]
   1243c:	bl	10d40 <_exit@plt>
   12440:	bl	10e9c <__errno_location@plt>
   12444:	mov	r3, r4
   12448:	ldr	r2, [pc, #48]	; 12480 <close@plt+0x1524>
   1244c:	ldr	r1, [r0]
   12450:	mov	r0, #0
   12454:	bl	10e18 <error@plt>
   12458:	b	12434 <close@plt+0x14d8>
   1245c:	ldr	r3, [pc, #24]	; 1247c <close@plt+0x1520>
   12460:	ldr	r0, [r3]
   12464:	bl	10d40 <_exit@plt>
   12468:	andeq	r7, r2, ip, ror #2
   1246c:	andeq	r7, r2, r4, lsl #3
   12470:	andeq	r7, r2, r8, ror #2
   12474:	andeq	r5, r1, r4, lsr sp
   12478:	andeq	r5, r1, r0, ror #28
   1247c:	andeq	r7, r2, r4, lsl r1
   12480:	andeq	r5, r1, r4, ror #28
   12484:	push	{r4, r5, lr}
   12488:	sub	sp, sp, #20
   1248c:	ldr	r1, [sp, #40]	; 0x28
   12490:	str	r1, [sp, #8]
   12494:	ldrd	r4, [sp, #32]
   12498:	strd	r4, [sp]
   1249c:	bl	10d04 <posix_fadvise64@plt>
   124a0:	add	sp, sp, #20
   124a4:	pop	{r4, r5, pc}
   124a8:	cmp	r0, #0
   124ac:	bxeq	lr
   124b0:	push	{r4, lr}
   124b4:	sub	sp, sp, #16
   124b8:	mov	r4, r1
   124bc:	bl	10ed8 <fileno@plt>
   124c0:	str	r4, [sp, #8]
   124c4:	mov	r2, #0
   124c8:	mov	r3, #0
   124cc:	strd	r2, [sp]
   124d0:	bl	10d04 <posix_fadvise64@plt>
   124d4:	add	sp, sp, #16
   124d8:	pop	{r4, pc}
   124dc:	push	{r4, r5, lr}
   124e0:	sub	sp, sp, #12
   124e4:	mov	r5, r0
   124e8:	bl	10e9c <__errno_location@plt>
   124ec:	mov	r4, r0
   124f0:	ldr	r3, [r0]
   124f4:	str	r3, [sp]
   124f8:	str	r3, [sp, #4]
   124fc:	mov	r3, #0
   12500:	str	r3, [r0]
   12504:	mov	r0, r5
   12508:	bl	10d34 <free@plt>
   1250c:	ldr	r3, [r4]
   12510:	cmp	r3, #0
   12514:	moveq	r3, #4
   12518:	movne	r3, #0
   1251c:	add	r2, sp, #8
   12520:	add	r3, r2, r3
   12524:	ldr	r3, [r3, #-8]
   12528:	str	r3, [r4]
   1252c:	add	sp, sp, #12
   12530:	pop	{r4, r5, pc}
   12534:	push	{r4, r5, r6, r7, r8, lr}
   12538:	subs	r4, r2, #0
   1253c:	beq	12594 <close@plt+0x1638>
   12540:	mov	r7, r0
   12544:	mov	r5, r1
   12548:	mov	r6, #0
   1254c:	mov	r2, r4
   12550:	mov	r1, r5
   12554:	mov	r0, r7
   12558:	bl	14174 <close@plt+0x3218>
   1255c:	cmn	r0, #1
   12560:	beq	1258c <close@plt+0x1630>
   12564:	cmp	r0, #0
   12568:	beq	12580 <close@plt+0x1624>
   1256c:	add	r6, r6, r0
   12570:	add	r5, r5, r0
   12574:	subs	r4, r4, r0
   12578:	bne	1254c <close@plt+0x15f0>
   1257c:	b	1258c <close@plt+0x1630>
   12580:	bl	10e9c <__errno_location@plt>
   12584:	mov	r3, #28
   12588:	str	r3, [r0]
   1258c:	mov	r0, r6
   12590:	pop	{r4, r5, r6, r7, r8, pc}
   12594:	mov	r6, r4
   12598:	b	1258c <close@plt+0x1630>
   1259c:	push	{r4, r5, r6, lr}
   125a0:	subs	r4, r0, #0
   125a4:	beq	1261c <close@plt+0x16c0>
   125a8:	mov	r1, #47	; 0x2f
   125ac:	mov	r0, r4
   125b0:	bl	10f14 <strrchr@plt>
   125b4:	cmp	r0, #0
   125b8:	addne	r5, r0, #1
   125bc:	moveq	r5, r4
   125c0:	sub	r3, r5, r4
   125c4:	cmp	r3, #6
   125c8:	ble	12608 <close@plt+0x16ac>
   125cc:	mov	r2, #7
   125d0:	ldr	r1, [pc, #96]	; 12638 <close@plt+0x16dc>
   125d4:	sub	r0, r5, #7
   125d8:	bl	10f44 <strncmp@plt>
   125dc:	cmp	r0, #0
   125e0:	bne	12608 <close@plt+0x16ac>
   125e4:	mov	r2, #3
   125e8:	ldr	r1, [pc, #76]	; 1263c <close@plt+0x16e0>
   125ec:	mov	r0, r5
   125f0:	bl	10f44 <strncmp@plt>
   125f4:	cmp	r0, #0
   125f8:	addeq	r4, r5, #3
   125fc:	ldreq	r3, [pc, #60]	; 12640 <close@plt+0x16e4>
   12600:	streq	r4, [r3]
   12604:	movne	r4, r5
   12608:	ldr	r3, [pc, #52]	; 12644 <close@plt+0x16e8>
   1260c:	str	r4, [r3]
   12610:	ldr	r3, [pc, #48]	; 12648 <close@plt+0x16ec>
   12614:	str	r4, [r3]
   12618:	pop	{r4, r5, r6, pc}
   1261c:	ldr	r3, [pc, #40]	; 1264c <close@plt+0x16f0>
   12620:	ldr	r3, [r3]
   12624:	mov	r2, #55	; 0x37
   12628:	mov	r1, #1
   1262c:	ldr	r0, [pc, #28]	; 12650 <close@plt+0x16f4>
   12630:	bl	10dd0 <fwrite@plt>
   12634:	bl	10f50 <abort@plt>
   12638:	andeq	r5, r1, r0, lsr #29
   1263c:	andeq	r5, r1, r8, lsr #29
   12640:	andeq	r7, r2, r8, asr r1
   12644:	andeq	r7, r2, ip, lsl #3
   12648:	andeq	r7, r2, ip, asr r1
   1264c:	andeq	r7, r2, r8, ror #2
   12650:	andeq	r5, r1, r8, ror #28
   12654:	push	{r4, r5, r6, lr}
   12658:	mov	r5, r0
   1265c:	mov	r4, r1
   12660:	mov	r2, #48	; 0x30
   12664:	mov	r1, #0
   12668:	bl	10eb4 <memset@plt>
   1266c:	cmp	r4, #10
   12670:	beq	12680 <close@plt+0x1724>
   12674:	str	r4, [r5]
   12678:	mov	r0, r5
   1267c:	pop	{r4, r5, r6, pc}
   12680:	bl	10f50 <abort@plt>
   12684:	push	{r4, r5, r6, lr}
   12688:	mov	r4, r0
   1268c:	mov	r5, r1
   12690:	mov	r2, #5
   12694:	mov	r1, r0
   12698:	mov	r0, #0
   1269c:	bl	10d88 <dcgettext@plt>
   126a0:	cmp	r4, r0
   126a4:	popne	{r4, r5, r6, pc}
   126a8:	bl	15060 <close@plt+0x4104>
   126ac:	ldrb	r3, [r0]
   126b0:	bic	r3, r3, #32
   126b4:	cmp	r3, #85	; 0x55
   126b8:	beq	12734 <close@plt+0x17d8>
   126bc:	cmp	r3, #71	; 0x47
   126c0:	bne	12790 <close@plt+0x1834>
   126c4:	ldrb	r3, [r0, #1]
   126c8:	bic	r3, r3, #32
   126cc:	cmp	r3, #66	; 0x42
   126d0:	bne	12790 <close@plt+0x1834>
   126d4:	ldrb	r3, [r0, #2]
   126d8:	cmp	r3, #49	; 0x31
   126dc:	bne	12790 <close@plt+0x1834>
   126e0:	ldrb	r3, [r0, #3]
   126e4:	cmp	r3, #56	; 0x38
   126e8:	bne	12790 <close@plt+0x1834>
   126ec:	ldrb	r3, [r0, #4]
   126f0:	cmp	r3, #48	; 0x30
   126f4:	bne	12790 <close@plt+0x1834>
   126f8:	ldrb	r3, [r0, #5]
   126fc:	cmp	r3, #51	; 0x33
   12700:	bne	12790 <close@plt+0x1834>
   12704:	ldrb	r3, [r0, #6]
   12708:	cmp	r3, #48	; 0x30
   1270c:	bne	12790 <close@plt+0x1834>
   12710:	ldrb	r3, [r0, #7]
   12714:	cmp	r3, #0
   12718:	bne	12790 <close@plt+0x1834>
   1271c:	ldrb	r2, [r4]
   12720:	ldr	r3, [pc, #124]	; 127a4 <close@plt+0x1848>
   12724:	ldr	r0, [pc, #124]	; 127a8 <close@plt+0x184c>
   12728:	cmp	r2, #96	; 0x60
   1272c:	movne	r0, r3
   12730:	pop	{r4, r5, r6, pc}
   12734:	ldrb	r3, [r0, #1]
   12738:	bic	r3, r3, #32
   1273c:	cmp	r3, #84	; 0x54
   12740:	bne	12790 <close@plt+0x1834>
   12744:	ldrb	r3, [r0, #2]
   12748:	bic	r3, r3, #32
   1274c:	cmp	r3, #70	; 0x46
   12750:	bne	12790 <close@plt+0x1834>
   12754:	ldrb	r3, [r0, #3]
   12758:	cmp	r3, #45	; 0x2d
   1275c:	bne	12790 <close@plt+0x1834>
   12760:	ldrb	r3, [r0, #4]
   12764:	cmp	r3, #56	; 0x38
   12768:	bne	12790 <close@plt+0x1834>
   1276c:	ldrb	r3, [r0, #5]
   12770:	cmp	r3, #0
   12774:	bne	12790 <close@plt+0x1834>
   12778:	ldrb	r2, [r4]
   1277c:	ldr	r3, [pc, #40]	; 127ac <close@plt+0x1850>
   12780:	ldr	r0, [pc, #40]	; 127b0 <close@plt+0x1854>
   12784:	cmp	r2, #96	; 0x60
   12788:	movne	r0, r3
   1278c:	pop	{r4, r5, r6, pc}
   12790:	ldr	r3, [pc, #28]	; 127b4 <close@plt+0x1858>
   12794:	ldr	r0, [pc, #28]	; 127b8 <close@plt+0x185c>
   12798:	cmp	r5, #9
   1279c:	movne	r0, r3
   127a0:	pop	{r4, r5, r6, pc}
   127a4:	andeq	r5, r1, r4, lsl #30
   127a8:	andeq	r5, r1, r0, lsl pc
   127ac:	andeq	r5, r1, r0, lsl #30
   127b0:	andeq	r5, r1, r4, lsl pc
   127b4:	andeq	r5, r1, r8, lsl #30
   127b8:	andeq	r5, r1, ip, lsl #30
   127bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127c0:	sub	sp, sp, #116	; 0x74
   127c4:	str	r0, [sp, #36]	; 0x24
   127c8:	mov	sl, r1
   127cc:	str	r2, [sp, #52]	; 0x34
   127d0:	str	r3, [sp, #28]
   127d4:	ldr	r8, [sp, #152]	; 0x98
   127d8:	bl	10df4 <__ctype_get_mb_cur_max@plt>
   127dc:	str	r0, [sp, #84]	; 0x54
   127e0:	ldr	r3, [sp, #156]	; 0x9c
   127e4:	lsr	r3, r3, #1
   127e8:	and	r3, r3, #1
   127ec:	str	r3, [sp, #32]
   127f0:	mov	r3, #1
   127f4:	str	r3, [sp, #40]	; 0x28
   127f8:	mov	r3, #0
   127fc:	str	r3, [sp, #80]	; 0x50
   12800:	str	r3, [sp, #44]	; 0x2c
   12804:	str	r3, [sp, #48]	; 0x30
   12808:	str	r3, [sp, #60]	; 0x3c
   1280c:	str	r3, [sp, #72]	; 0x48
   12810:	str	r3, [sp, #76]	; 0x4c
   12814:	mov	r7, sl
   12818:	mov	sl, r8
   1281c:	cmp	sl, #10
   12820:	ldrls	pc, [pc, sl, lsl #2]
   12824:	b	129dc <close@plt+0x1a80>
   12828:	andeq	r2, r1, ip, lsl #17
   1282c:	andeq	r2, r1, ip, asr r8
   12830:			; <UNDEFINED> instruction: 0x000129b8
   12834:	andeq	r2, r1, r4, asr r8
   12838:	andeq	r2, r1, ip, ror #18
   1283c:	muleq	r1, ip, r8
   12840:	andeq	r3, r1, r8, lsl #18
   12844:	andeq	r2, r1, r0, ror #19
   12848:	ldrdeq	r2, [r1], -r8
   1284c:	ldrdeq	r2, [r1], -r8
   12850:	ldrdeq	r2, [r1], -r8
   12854:	mov	r3, #1
   12858:	str	r3, [sp, #48]	; 0x30
   1285c:	mov	r3, #1
   12860:	str	r3, [sp, #32]
   12864:	str	r3, [sp, #60]	; 0x3c
   12868:	ldr	r3, [pc, #4068]	; 13854 <close@plt+0x28f8>
   1286c:	str	r3, [sp, #72]	; 0x48
   12870:	mov	fp, #0
   12874:	mov	sl, #2
   12878:	mov	r6, #0
   1287c:	ldr	r3, [sp, #48]	; 0x30
   12880:	eor	r3, r3, #1
   12884:	str	r3, [sp, #68]	; 0x44
   12888:	b	13170 <close@plt+0x2214>
   1288c:	mov	r3, #0
   12890:	str	r3, [sp, #32]
   12894:	mov	fp, r3
   12898:	b	12878 <close@plt+0x191c>
   1289c:	ldr	r3, [sp, #32]
   128a0:	cmp	r3, #0
   128a4:	bne	129f8 <close@plt+0x1a9c>
   128a8:	cmp	r7, #0
   128ac:	beq	12a18 <close@plt+0x1abc>
   128b0:	ldr	r3, [sp, #36]	; 0x24
   128b4:	mov	r2, #34	; 0x22
   128b8:	strb	r2, [r3]
   128bc:	mov	r3, #1
   128c0:	str	r3, [sp, #48]	; 0x30
   128c4:	str	r3, [sp, #60]	; 0x3c
   128c8:	ldr	r3, [pc, #3980]	; 1385c <close@plt+0x2900>
   128cc:	str	r3, [sp, #72]	; 0x48
   128d0:	mov	fp, #1
   128d4:	b	12878 <close@plt+0x191c>
   128d8:	cmp	sl, #10
   128dc:	beq	12900 <close@plt+0x19a4>
   128e0:	mov	r1, sl
   128e4:	ldr	r0, [pc, #3948]	; 13858 <close@plt+0x28fc>
   128e8:	bl	12684 <close@plt+0x1728>
   128ec:	str	r0, [sp, #164]	; 0xa4
   128f0:	mov	r1, sl
   128f4:	ldr	r0, [pc, #3928]	; 13854 <close@plt+0x28f8>
   128f8:	bl	12684 <close@plt+0x1728>
   128fc:	str	r0, [sp, #168]	; 0xa8
   12900:	ldr	r3, [sp, #32]
   12904:	cmp	r3, #0
   12908:	movne	fp, #0
   1290c:	bne	12944 <close@plt+0x19e8>
   12910:	ldr	r3, [sp, #164]	; 0xa4
   12914:	ldrb	r3, [r3]
   12918:	cmp	r3, #0
   1291c:	beq	12964 <close@plt+0x1a08>
   12920:	ldr	r2, [sp, #164]	; 0xa4
   12924:	mov	fp, #0
   12928:	ldr	r1, [sp, #36]	; 0x24
   1292c:	cmp	r7, fp
   12930:	strbhi	r3, [r1, fp]
   12934:	add	fp, fp, #1
   12938:	ldrb	r3, [r2, #1]!
   1293c:	cmp	r3, #0
   12940:	bne	1292c <close@plt+0x19d0>
   12944:	ldr	r0, [sp, #168]	; 0xa8
   12948:	bl	10e84 <strlen@plt>
   1294c:	str	r0, [sp, #60]	; 0x3c
   12950:	ldr	r3, [sp, #168]	; 0xa8
   12954:	str	r3, [sp, #72]	; 0x48
   12958:	mov	r3, #1
   1295c:	str	r3, [sp, #48]	; 0x30
   12960:	b	12878 <close@plt+0x191c>
   12964:	mov	fp, #0
   12968:	b	12944 <close@plt+0x19e8>
   1296c:	ldr	r3, [sp, #32]
   12970:	cmp	r3, #0
   12974:	bne	12a34 <close@plt+0x1ad8>
   12978:	mov	r3, #1
   1297c:	str	r3, [sp, #48]	; 0x30
   12980:	cmp	r7, #0
   12984:	beq	12a50 <close@plt+0x1af4>
   12988:	ldr	r3, [sp, #36]	; 0x24
   1298c:	mov	r2, #39	; 0x27
   12990:	strb	r2, [r3]
   12994:	mov	r3, #0
   12998:	str	r3, [sp, #32]
   1299c:	mov	r3, #1
   129a0:	str	r3, [sp, #60]	; 0x3c
   129a4:	ldr	r3, [pc, #3752]	; 13854 <close@plt+0x28f8>
   129a8:	str	r3, [sp, #72]	; 0x48
   129ac:	mov	fp, #1
   129b0:	mov	sl, #2
   129b4:	b	12878 <close@plt+0x191c>
   129b8:	ldr	r3, [sp, #32]
   129bc:	cmp	r3, #0
   129c0:	beq	12980 <close@plt+0x1a24>
   129c4:	mov	r3, #1
   129c8:	str	r3, [sp, #60]	; 0x3c
   129cc:	ldr	r3, [pc, #3712]	; 13854 <close@plt+0x28f8>
   129d0:	str	r3, [sp, #72]	; 0x48
   129d4:	mov	fp, #0
   129d8:	b	12878 <close@plt+0x191c>
   129dc:	bl	10f50 <abort@plt>
   129e0:	mov	r3, #0
   129e4:	str	r3, [sp, #32]
   129e8:	mov	r3, #1
   129ec:	str	r3, [sp, #48]	; 0x30
   129f0:	mov	fp, #0
   129f4:	b	12878 <close@plt+0x191c>
   129f8:	ldr	r3, [sp, #32]
   129fc:	str	r3, [sp, #48]	; 0x30
   12a00:	mov	r3, #1
   12a04:	str	r3, [sp, #60]	; 0x3c
   12a08:	ldr	r3, [pc, #3660]	; 1385c <close@plt+0x2900>
   12a0c:	str	r3, [sp, #72]	; 0x48
   12a10:	mov	fp, #0
   12a14:	b	12878 <close@plt+0x191c>
   12a18:	mov	r3, #1
   12a1c:	str	r3, [sp, #48]	; 0x30
   12a20:	str	r3, [sp, #60]	; 0x3c
   12a24:	ldr	r3, [pc, #3632]	; 1385c <close@plt+0x2900>
   12a28:	str	r3, [sp, #72]	; 0x48
   12a2c:	mov	fp, #1
   12a30:	b	12878 <close@plt+0x191c>
   12a34:	mov	r3, #1
   12a38:	str	r3, [sp, #60]	; 0x3c
   12a3c:	ldr	r3, [pc, #3600]	; 13854 <close@plt+0x28f8>
   12a40:	str	r3, [sp, #72]	; 0x48
   12a44:	mov	fp, #0
   12a48:	mov	sl, #2
   12a4c:	b	12878 <close@plt+0x191c>
   12a50:	mov	r3, #0
   12a54:	str	r3, [sp, #32]
   12a58:	mov	r3, #1
   12a5c:	str	r3, [sp, #60]	; 0x3c
   12a60:	ldr	r3, [pc, #3564]	; 13854 <close@plt+0x28f8>
   12a64:	str	r3, [sp, #72]	; 0x48
   12a68:	mov	fp, #1
   12a6c:	mov	sl, #2
   12a70:	b	12878 <close@plt+0x191c>
   12a74:	mov	r3, #0
   12a78:	str	r3, [sp, #56]	; 0x38
   12a7c:	ldr	r3, [sp, #52]	; 0x34
   12a80:	add	r2, r3, r6
   12a84:	str	r2, [sp, #64]	; 0x40
   12a88:	ldrb	r4, [r3, r6]
   12a8c:	cmp	r4, #126	; 0x7e
   12a90:	ldrls	pc, [pc, r4, lsl #2]
   12a94:	b	132d0 <close@plt+0x2374>
   12a98:			; <UNDEFINED> instruction: 0x00012cb0
   12a9c:	ldrdeq	r3, [r1], -r0
   12aa0:	ldrdeq	r3, [r1], -r0
   12aa4:	ldrdeq	r3, [r1], -r0
   12aa8:	ldrdeq	r3, [r1], -r0
   12aac:	ldrdeq	r3, [r1], -r0
   12ab0:	ldrdeq	r3, [r1], -r0
   12ab4:	andeq	r3, r1, ip
   12ab8:	andeq	r2, r1, r8, lsr #25
   12abc:	andeq	r2, r1, r4, asr #31
   12ac0:			; <UNDEFINED> instruction: 0x00012fbc
   12ac4:	andeq	r2, r1, ip, lsr #30
   12ac8:	andeq	r2, r1, r4, lsr #30
   12acc:	andeq	r2, r1, r0, lsr #25
   12ad0:	ldrdeq	r3, [r1], -r0
   12ad4:	ldrdeq	r3, [r1], -r0
   12ad8:	ldrdeq	r3, [r1], -r0
   12adc:	ldrdeq	r3, [r1], -r0
   12ae0:	ldrdeq	r3, [r1], -r0
   12ae4:	ldrdeq	r3, [r1], -r0
   12ae8:	ldrdeq	r3, [r1], -r0
   12aec:	ldrdeq	r3, [r1], -r0
   12af0:	ldrdeq	r3, [r1], -r0
   12af4:	ldrdeq	r3, [r1], -r0
   12af8:	ldrdeq	r3, [r1], -r0
   12afc:	ldrdeq	r3, [r1], -r0
   12b00:	ldrdeq	r3, [r1], -r0
   12b04:	ldrdeq	r3, [r1], -r0
   12b08:	ldrdeq	r3, [r1], -r0
   12b0c:	ldrdeq	r3, [r1], -r0
   12b10:	ldrdeq	r3, [r1], -r0
   12b14:	ldrdeq	r3, [r1], -r0
   12b18:	andeq	r3, r1, r0, rrx
   12b1c:	andeq	r3, r1, ip, asr r0
   12b20:	andeq	r3, r1, ip, asr r0
   12b24:	andeq	r3, r1, r4, lsr r0
   12b28:	andeq	r3, r1, ip, asr r0
   12b2c:	andeq	r3, r1, r4, lsr #13
   12b30:	andeq	r3, r1, ip, asr r0
   12b34:	andeq	r3, r1, r4, lsr r2
   12b38:	andeq	r3, r1, ip, asr r0
   12b3c:	andeq	r3, r1, ip, asr r0
   12b40:	andeq	r3, r1, ip, asr r0
   12b44:	andeq	r3, r1, r4, lsr #13
   12b48:	andeq	r3, r1, r4, lsr #13
   12b4c:	andeq	r3, r1, r4, lsr #13
   12b50:	andeq	r3, r1, r4, lsr #13
   12b54:	andeq	r3, r1, r4, lsr #13
   12b58:	andeq	r3, r1, r4, lsr #13
   12b5c:	andeq	r3, r1, r4, lsr #13
   12b60:	andeq	r3, r1, r4, lsr #13
   12b64:	andeq	r3, r1, r4, lsr #13
   12b68:	andeq	r3, r1, r4, lsr #13
   12b6c:	andeq	r3, r1, r4, lsr #13
   12b70:	andeq	r3, r1, r4, lsr #13
   12b74:	andeq	r3, r1, r4, lsr #13
   12b78:	andeq	r3, r1, r4, lsr #13
   12b7c:	andeq	r3, r1, r4, lsr #13
   12b80:	andeq	r3, r1, r4, lsr #13
   12b84:	andeq	r3, r1, ip, asr r0
   12b88:	andeq	r3, r1, ip, asr r0
   12b8c:	andeq	r3, r1, ip, asr r0
   12b90:	andeq	r3, r1, ip, asr r0
   12b94:			; <UNDEFINED> instruction: 0x00012db8
   12b98:	ldrdeq	r3, [r1], -r0
   12b9c:	andeq	r3, r1, r4, lsr #13
   12ba0:	andeq	r3, r1, r4, lsr #13
   12ba4:	andeq	r3, r1, r4, lsr #13
   12ba8:	andeq	r3, r1, r4, lsr #13
   12bac:	andeq	r3, r1, r4, lsr #13
   12bb0:	andeq	r3, r1, r4, lsr #13
   12bb4:	andeq	r3, r1, r4, lsr #13
   12bb8:	andeq	r3, r1, r4, lsr #13
   12bbc:	andeq	r3, r1, r4, lsr #13
   12bc0:	andeq	r3, r1, r4, lsr #13
   12bc4:	andeq	r3, r1, r4, lsr #13
   12bc8:	andeq	r3, r1, r4, lsr #13
   12bcc:	andeq	r3, r1, r4, lsr #13
   12bd0:	andeq	r3, r1, r4, lsr #13
   12bd4:	andeq	r3, r1, r4, lsr #13
   12bd8:	andeq	r3, r1, r4, lsr #13
   12bdc:	andeq	r3, r1, r4, lsr #13
   12be0:	andeq	r3, r1, r4, lsr #13
   12be4:	andeq	r3, r1, r4, lsr #13
   12be8:	andeq	r3, r1, r4, lsr #13
   12bec:	andeq	r3, r1, r4, lsr #13
   12bf0:	andeq	r3, r1, r4, lsr #13
   12bf4:	andeq	r3, r1, r4, lsr #13
   12bf8:	andeq	r3, r1, r4, lsr #13
   12bfc:	andeq	r3, r1, r4, lsr #13
   12c00:	andeq	r3, r1, r4, lsr #13
   12c04:	andeq	r3, r1, ip, asr r0
   12c08:	andeq	r2, r1, r4, lsr pc
   12c0c:	andeq	r3, r1, r4, lsr #13
   12c10:	andeq	r3, r1, ip, asr r0
   12c14:	andeq	r3, r1, r4, lsr #13
   12c18:	andeq	r3, r1, ip, asr r0
   12c1c:	andeq	r3, r1, r4, lsr #13
   12c20:	andeq	r3, r1, r4, lsr #13
   12c24:	andeq	r3, r1, r4, lsr #13
   12c28:	andeq	r3, r1, r4, lsr #13
   12c2c:	andeq	r3, r1, r4, lsr #13
   12c30:	andeq	r3, r1, r4, lsr #13
   12c34:	andeq	r3, r1, r4, lsr #13
   12c38:	andeq	r3, r1, r4, lsr #13
   12c3c:	andeq	r3, r1, r4, lsr #13
   12c40:	andeq	r3, r1, r4, lsr #13
   12c44:	andeq	r3, r1, r4, lsr #13
   12c48:	andeq	r3, r1, r4, lsr #13
   12c4c:	andeq	r3, r1, r4, lsr #13
   12c50:	andeq	r3, r1, r4, lsr #13
   12c54:	andeq	r3, r1, r4, lsr #13
   12c58:	andeq	r3, r1, r4, lsr #13
   12c5c:	andeq	r3, r1, r4, lsr #13
   12c60:	andeq	r3, r1, r4, lsr #13
   12c64:	andeq	r3, r1, r4, lsr #13
   12c68:	andeq	r3, r1, r4, lsr #13
   12c6c:	andeq	r3, r1, r4, lsr #13
   12c70:	andeq	r3, r1, r4, lsr #13
   12c74:	andeq	r3, r1, r4, lsr #13
   12c78:	andeq	r3, r1, r4, lsr #13
   12c7c:	andeq	r3, r1, r4, lsr #13
   12c80:	andeq	r3, r1, r4, lsr #13
   12c84:	andeq	r3, r1, r4, lsl r0
   12c88:	andeq	r3, r1, ip, asr r0
   12c8c:	andeq	r3, r1, r4, lsl r0
   12c90:	andeq	r3, r1, r4, lsr r0
   12c94:	mov	r3, #0
   12c98:	str	r3, [sp, #56]	; 0x38
   12c9c:	b	12a7c <close@plt+0x1b20>
   12ca0:	mov	r3, #114	; 0x72
   12ca4:	b	12fc8 <close@plt+0x206c>
   12ca8:	mov	r3, #98	; 0x62
   12cac:	b	12fe0 <close@plt+0x2084>
   12cb0:	ldr	r3, [sp, #48]	; 0x30
   12cb4:	cmp	r3, #0
   12cb8:	beq	12da0 <close@plt+0x1e44>
   12cbc:	ldr	r3, [sp, #32]
   12cc0:	cmp	r3, #0
   12cc4:	bne	13828 <close@plt+0x28cc>
   12cc8:	ldr	r3, [sp, #44]	; 0x2c
   12ccc:	eor	r3, r3, #1
   12cd0:	cmp	sl, #2
   12cd4:	movne	r3, #0
   12cd8:	andeq	r3, r3, #1
   12cdc:	cmp	r3, #0
   12ce0:	moveq	r2, fp
   12ce4:	beq	12d28 <close@plt+0x1dcc>
   12ce8:	cmp	r7, fp
   12cec:	ldrhi	r2, [sp, #36]	; 0x24
   12cf0:	movhi	r1, #39	; 0x27
   12cf4:	strbhi	r1, [r2, fp]
   12cf8:	add	r2, fp, #1
   12cfc:	cmp	r7, r2
   12d00:	ldrhi	r1, [sp, #36]	; 0x24
   12d04:	movhi	r0, #36	; 0x24
   12d08:	strbhi	r0, [r1, r2]
   12d0c:	add	r2, fp, #2
   12d10:	cmp	r7, r2
   12d14:	ldrhi	r1, [sp, #36]	; 0x24
   12d18:	movhi	r0, #39	; 0x27
   12d1c:	strbhi	r0, [r1, r2]
   12d20:	add	r2, fp, #3
   12d24:	str	r3, [sp, #44]	; 0x2c
   12d28:	cmp	r7, r2
   12d2c:	ldrhi	r3, [sp, #36]	; 0x24
   12d30:	movhi	r1, #92	; 0x5c
   12d34:	strbhi	r1, [r3, r2]
   12d38:	add	fp, r2, #1
   12d3c:	cmp	r5, #0
   12d40:	beq	136ac <close@plt+0x2750>
   12d44:	add	r3, r6, #1
   12d48:	ldr	r1, [sp, #28]
   12d4c:	cmp	r1, r3
   12d50:	bls	136bc <close@plt+0x2760>
   12d54:	ldr	r1, [sp, #52]	; 0x34
   12d58:	ldrb	r3, [r1, r3]
   12d5c:	sub	r3, r3, #48	; 0x30
   12d60:	uxtb	r3, r3
   12d64:	cmp	r3, #9
   12d68:	bhi	136c8 <close@plt+0x276c>
   12d6c:	cmp	r7, fp
   12d70:	movhi	r3, #48	; 0x30
   12d74:	ldrhi	r1, [sp, #36]	; 0x24
   12d78:	strbhi	r3, [r1, fp]
   12d7c:	add	r3, r2, #2
   12d80:	cmp	r7, r3
   12d84:	movhi	r1, #48	; 0x30
   12d88:	ldrhi	r0, [sp, #36]	; 0x24
   12d8c:	strbhi	r1, [r0, r3]
   12d90:	add	fp, r2, #3
   12d94:	ldr	r8, [sp, #32]
   12d98:	mov	r4, #48	; 0x30
   12d9c:	b	13078 <close@plt+0x211c>
   12da0:	ldr	r3, [sp, #156]	; 0x9c
   12da4:	tst	r3, #1
   12da8:	bne	1316c <close@plt+0x2210>
   12dac:	ldr	r5, [sp, #48]	; 0x30
   12db0:	mov	r8, r5
   12db4:	b	13078 <close@plt+0x211c>
   12db8:	cmp	sl, #2
   12dbc:	beq	12dd4 <close@plt+0x1e78>
   12dc0:	cmp	sl, #5
   12dc4:	beq	12dec <close@plt+0x1e90>
   12dc8:	mov	r8, #0
   12dcc:	mov	r5, r8
   12dd0:	b	13078 <close@plt+0x211c>
   12dd4:	ldr	r3, [sp, #32]
   12dd8:	cmp	r3, #0
   12ddc:	bne	1383c <close@plt+0x28e0>
   12de0:	mov	r8, r3
   12de4:	mov	r5, r3
   12de8:	b	13078 <close@plt+0x211c>
   12dec:	ldr	r3, [sp, #156]	; 0x9c
   12df0:	tst	r3, #4
   12df4:	beq	136d4 <close@plt+0x2778>
   12df8:	add	r3, r6, #2
   12dfc:	ldr	r2, [sp, #28]
   12e00:	cmp	r2, r3
   12e04:	bls	136e0 <close@plt+0x2784>
   12e08:	ldr	r2, [sp, #52]	; 0x34
   12e0c:	add	r2, r2, r6
   12e10:	ldrb	r2, [r2, #1]
   12e14:	cmp	r2, #63	; 0x3f
   12e18:	movne	r8, #0
   12e1c:	movne	r5, r8
   12e20:	bne	13078 <close@plt+0x211c>
   12e24:	ldr	r2, [sp, #52]	; 0x34
   12e28:	ldrb	r2, [r2, r3]
   12e2c:	sub	r1, r2, #33	; 0x21
   12e30:	cmp	r1, #29
   12e34:	ldrls	pc, [pc, r1, lsl #2]
   12e38:	b	136ec <close@plt+0x2790>
   12e3c:			; <UNDEFINED> instruction: 0x00012eb4
   12e40:	andeq	r3, r1, ip, ror #13
   12e44:	andeq	r3, r1, ip, ror #13
   12e48:	andeq	r3, r1, ip, ror #13
   12e4c:	andeq	r3, r1, ip, ror #13
   12e50:	andeq	r3, r1, ip, ror #13
   12e54:			; <UNDEFINED> instruction: 0x00012eb4
   12e58:			; <UNDEFINED> instruction: 0x00012eb4
   12e5c:			; <UNDEFINED> instruction: 0x00012eb4
   12e60:	andeq	r3, r1, ip, ror #13
   12e64:	andeq	r3, r1, ip, ror #13
   12e68:	andeq	r3, r1, ip, ror #13
   12e6c:			; <UNDEFINED> instruction: 0x00012eb4
   12e70:	andeq	r3, r1, ip, ror #13
   12e74:			; <UNDEFINED> instruction: 0x00012eb4
   12e78:	andeq	r3, r1, ip, ror #13
   12e7c:	andeq	r3, r1, ip, ror #13
   12e80:	andeq	r3, r1, ip, ror #13
   12e84:	andeq	r3, r1, ip, ror #13
   12e88:	andeq	r3, r1, ip, ror #13
   12e8c:	andeq	r3, r1, ip, ror #13
   12e90:	andeq	r3, r1, ip, ror #13
   12e94:	andeq	r3, r1, ip, ror #13
   12e98:	andeq	r3, r1, ip, ror #13
   12e9c:	andeq	r3, r1, ip, ror #13
   12ea0:	andeq	r3, r1, ip, ror #13
   12ea4:	andeq	r3, r1, ip, ror #13
   12ea8:			; <UNDEFINED> instruction: 0x00012eb4
   12eac:			; <UNDEFINED> instruction: 0x00012eb4
   12eb0:			; <UNDEFINED> instruction: 0x00012eb4
   12eb4:	ldr	r1, [sp, #32]
   12eb8:	cmp	r1, #0
   12ebc:	bne	138fc <close@plt+0x29a0>
   12ec0:	cmp	r7, fp
   12ec4:	movhi	r1, #63	; 0x3f
   12ec8:	ldrhi	r0, [sp, #36]	; 0x24
   12ecc:	strbhi	r1, [r0, fp]
   12ed0:	add	r1, fp, #1
   12ed4:	cmp	r7, r1
   12ed8:	ldrhi	r0, [sp, #36]	; 0x24
   12edc:	movhi	ip, #34	; 0x22
   12ee0:	strbhi	ip, [r0, r1]
   12ee4:	add	r1, fp, #2
   12ee8:	cmp	r7, r1
   12eec:	ldrhi	r0, [sp, #36]	; 0x24
   12ef0:	movhi	ip, #34	; 0x22
   12ef4:	strbhi	ip, [r0, r1]
   12ef8:	add	r1, fp, #3
   12efc:	cmp	r7, r1
   12f00:	movhi	r0, #63	; 0x3f
   12f04:	ldrhi	ip, [sp, #36]	; 0x24
   12f08:	strbhi	r0, [ip, r1]
   12f0c:	add	fp, fp, #4
   12f10:	ldr	r5, [sp, #32]
   12f14:	mov	r8, r5
   12f18:	mov	r4, r2
   12f1c:	mov	r6, r3
   12f20:	b	13078 <close@plt+0x211c>
   12f24:	mov	r3, #102	; 0x66
   12f28:	b	12fe0 <close@plt+0x2084>
   12f2c:	mov	r3, #118	; 0x76
   12f30:	b	12fe0 <close@plt+0x2084>
   12f34:	cmp	sl, #2
   12f38:	beq	12fa4 <close@plt+0x2048>
   12f3c:	ldr	r3, [sp, #48]	; 0x30
   12f40:	ldr	r2, [sp, #32]
   12f44:	and	r3, r3, r2
   12f48:	tst	r9, r3
   12f4c:	moveq	r3, r4
   12f50:	beq	12fe0 <close@plt+0x2084>
   12f54:	mov	r8, #0
   12f58:	mov	r5, r8
   12f5c:	eor	r5, r5, #1
   12f60:	ldr	r3, [sp, #44]	; 0x2c
   12f64:	and	r5, r5, r3
   12f68:	tst	r5, #255	; 0xff
   12f6c:	beq	1314c <close@plt+0x21f0>
   12f70:	cmp	r7, fp
   12f74:	ldrhi	r3, [sp, #36]	; 0x24
   12f78:	movhi	r2, #39	; 0x27
   12f7c:	strbhi	r2, [r3, fp]
   12f80:	add	r3, fp, #1
   12f84:	cmp	r7, r3
   12f88:	ldrhi	r2, [sp, #36]	; 0x24
   12f8c:	movhi	r1, #39	; 0x27
   12f90:	strbhi	r1, [r2, r3]
   12f94:	add	fp, fp, #2
   12f98:	mov	r3, #0
   12f9c:	str	r3, [sp, #44]	; 0x2c
   12fa0:	b	1314c <close@plt+0x21f0>
   12fa4:	ldr	r3, [sp, #32]
   12fa8:	cmp	r3, #0
   12fac:	bne	13848 <close@plt+0x28ec>
   12fb0:	mov	r8, r3
   12fb4:	mov	r5, r3
   12fb8:	b	12f5c <close@plt+0x2000>
   12fbc:	mov	r3, #110	; 0x6e
   12fc0:	b	12fc8 <close@plt+0x206c>
   12fc4:	mov	r3, #116	; 0x74
   12fc8:	ldr	r2, [sp, #32]
   12fcc:	cmp	sl, #2
   12fd0:	movne	r2, #0
   12fd4:	andeq	r2, r2, #1
   12fd8:	cmp	r2, #0
   12fdc:	bne	13000 <close@plt+0x20a4>
   12fe0:	ldr	r2, [sp, #48]	; 0x30
   12fe4:	cmp	r2, #0
   12fe8:	moveq	r8, r2
   12fec:	moveq	r5, r2
   12ff0:	beq	13078 <close@plt+0x211c>
   12ff4:	mov	r4, r3
   12ff8:	mov	r8, #0
   12ffc:	b	130d0 <close@plt+0x2174>
   13000:	mov	r8, sl
   13004:	mov	sl, r7
   13008:	b	13874 <close@plt+0x2918>
   1300c:	mov	r3, #97	; 0x61
   13010:	b	12fe0 <close@plt+0x2084>
   13014:	ldr	r3, [sp, #28]
   13018:	cmn	r3, #1
   1301c:	beq	13048 <close@plt+0x20ec>
   13020:	ldr	r3, [sp, #28]
   13024:	subs	r3, r3, #1
   13028:	movne	r3, #1
   1302c:	cmp	r3, #0
   13030:	bne	136f8 <close@plt+0x279c>
   13034:	cmp	r6, #0
   13038:	beq	13060 <close@plt+0x2104>
   1303c:	mov	r8, #0
   13040:	mov	r5, r8
   13044:	b	13078 <close@plt+0x211c>
   13048:	ldr	r3, [sp, #52]	; 0x34
   1304c:	ldrb	r3, [r3, #1]
   13050:	adds	r3, r3, #0
   13054:	movne	r3, #1
   13058:	b	1302c <close@plt+0x20d0>
   1305c:	mov	r8, #0
   13060:	ldr	r5, [sp, #32]
   13064:	cmp	sl, #2
   13068:	movne	r5, #0
   1306c:	andeq	r5, r5, #1
   13070:	cmp	r5, #0
   13074:	bne	13228 <close@plt+0x22cc>
   13078:	ldr	r3, [sp, #68]	; 0x44
   1307c:	cmp	sl, #2
   13080:	orreq	r3, r3, #1
   13084:	eor	r3, r3, #1
   13088:	ldr	r2, [sp, #32]
   1308c:	orr	r3, r2, r3
   13090:	tst	r3, #255	; 0xff
   13094:	beq	130c4 <close@plt+0x2168>
   13098:	ldr	r3, [sp, #160]	; 0xa0
   1309c:	cmp	r3, #0
   130a0:	beq	130c4 <close@plt+0x2168>
   130a4:	lsr	r2, r4, #5
   130a8:	uxtb	r2, r2
   130ac:	and	r3, r4, #31
   130b0:	ldr	r1, [sp, #160]	; 0xa0
   130b4:	ldr	r2, [r1, r2, lsl #2]
   130b8:	lsr	r3, r2, r3
   130bc:	tst	r3, #1
   130c0:	bne	130d0 <close@plt+0x2174>
   130c4:	ldr	r3, [sp, #56]	; 0x38
   130c8:	cmp	r3, #0
   130cc:	beq	12f5c <close@plt+0x2000>
   130d0:	ldr	r3, [sp, #32]
   130d4:	cmp	r3, #0
   130d8:	bne	138e4 <close@plt+0x2988>
   130dc:	ldr	r3, [sp, #44]	; 0x2c
   130e0:	eor	r3, r3, #1
   130e4:	cmp	sl, #2
   130e8:	movne	r3, #0
   130ec:	andeq	r3, r3, #1
   130f0:	cmp	r3, #0
   130f4:	beq	13138 <close@plt+0x21dc>
   130f8:	cmp	r7, fp
   130fc:	ldrhi	r2, [sp, #36]	; 0x24
   13100:	movhi	r1, #39	; 0x27
   13104:	strbhi	r1, [r2, fp]
   13108:	add	r2, fp, #1
   1310c:	cmp	r7, r2
   13110:	ldrhi	r1, [sp, #36]	; 0x24
   13114:	movhi	r0, #36	; 0x24
   13118:	strbhi	r0, [r1, r2]
   1311c:	add	r2, fp, #2
   13120:	cmp	r7, r2
   13124:	ldrhi	r1, [sp, #36]	; 0x24
   13128:	movhi	r0, #39	; 0x27
   1312c:	strbhi	r0, [r1, r2]
   13130:	add	fp, fp, #3
   13134:	str	r3, [sp, #44]	; 0x2c
   13138:	cmp	r7, fp
   1313c:	ldrhi	r3, [sp, #36]	; 0x24
   13140:	movhi	r2, #92	; 0x5c
   13144:	strbhi	r2, [r3, fp]
   13148:	add	fp, fp, #1
   1314c:	cmp	fp, r7
   13150:	ldrcc	r3, [sp, #36]	; 0x24
   13154:	strbcc	r4, [r3, fp]
   13158:	add	fp, fp, #1
   1315c:	ldr	r3, [sp, #40]	; 0x28
   13160:	cmp	r8, #0
   13164:	moveq	r3, #0
   13168:	str	r3, [sp, #40]	; 0x28
   1316c:	add	r6, r6, #1
   13170:	ldr	r3, [sp, #28]
   13174:	cmn	r3, #1
   13178:	beq	13704 <close@plt+0x27a8>
   1317c:	ldr	r3, [sp, #28]
   13180:	subs	r8, r3, r6
   13184:	movne	r8, #1
   13188:	cmp	r8, #0
   1318c:	beq	13718 <close@plt+0x27bc>
   13190:	ldr	r5, [sp, #48]	; 0x30
   13194:	cmp	sl, #2
   13198:	moveq	r5, #0
   1319c:	andne	r5, r5, #1
   131a0:	ldr	r3, [sp, #60]	; 0x3c
   131a4:	adds	r9, r3, #0
   131a8:	movne	r9, #1
   131ac:	ands	r2, r5, r9
   131b0:	str	r2, [sp, #56]	; 0x38
   131b4:	beq	12a7c <close@plt+0x1b20>
   131b8:	add	r4, r6, r3
   131bc:	ldr	r2, [sp, #28]
   131c0:	cmp	r3, #1
   131c4:	movls	r3, #0
   131c8:	movhi	r3, #1
   131cc:	cmn	r2, #1
   131d0:	movne	r3, #0
   131d4:	cmp	r3, #0
   131d8:	beq	131e8 <close@plt+0x228c>
   131dc:	ldr	r0, [sp, #52]	; 0x34
   131e0:	bl	10e84 <strlen@plt>
   131e4:	str	r0, [sp, #28]
   131e8:	ldr	r3, [sp, #28]
   131ec:	cmp	r3, r4
   131f0:	bcc	12a74 <close@plt+0x1b18>
   131f4:	ldr	r2, [sp, #60]	; 0x3c
   131f8:	ldr	r1, [sp, #72]	; 0x48
   131fc:	ldr	r3, [sp, #52]	; 0x34
   13200:	add	r0, r3, r6
   13204:	bl	10d64 <memcmp@plt>
   13208:	cmp	r0, #0
   1320c:	bne	12c94 <close@plt+0x1d38>
   13210:	ldr	r3, [sp, #32]
   13214:	cmp	r3, #0
   13218:	beq	12a7c <close@plt+0x1b20>
   1321c:	mov	r8, sl
   13220:	mov	sl, r7
   13224:	b	13874 <close@plt+0x2918>
   13228:	mov	r8, sl
   1322c:	mov	sl, r7
   13230:	b	13874 <close@plt+0x2918>
   13234:	cmp	sl, #2
   13238:	strne	r8, [sp, #80]	; 0x50
   1323c:	movne	r5, #0
   13240:	bne	13078 <close@plt+0x211c>
   13244:	ldr	r3, [sp, #32]
   13248:	cmp	r3, #0
   1324c:	bne	13860 <close@plt+0x2904>
   13250:	ldr	r2, [sp, #76]	; 0x4c
   13254:	adds	r3, r7, #0
   13258:	movne	r3, #1
   1325c:	cmp	r2, #0
   13260:	movne	r3, #0
   13264:	cmp	r3, #0
   13268:	movne	r3, #0
   1326c:	bne	1329c <close@plt+0x2340>
   13270:	cmp	r7, fp
   13274:	ldrhi	r3, [sp, #36]	; 0x24
   13278:	movhi	r2, #39	; 0x27
   1327c:	strbhi	r2, [r3, fp]
   13280:	add	r3, fp, #1
   13284:	cmp	r7, r3
   13288:	ldrhi	r2, [sp, #36]	; 0x24
   1328c:	movhi	r1, #92	; 0x5c
   13290:	strbhi	r1, [r2, r3]
   13294:	mov	r3, r7
   13298:	ldr	r7, [sp, #76]	; 0x4c
   1329c:	add	r2, fp, #2
   132a0:	cmp	r2, r3
   132a4:	ldrcc	r1, [sp, #36]	; 0x24
   132a8:	movcc	r0, #39	; 0x27
   132ac:	strbcc	r0, [r1, r2]
   132b0:	add	fp, fp, #3
   132b4:	ldr	r2, [sp, #32]
   132b8:	mov	r5, r2
   132bc:	str	r8, [sp, #80]	; 0x50
   132c0:	str	r2, [sp, #44]	; 0x2c
   132c4:	str	r7, [sp, #76]	; 0x4c
   132c8:	mov	r7, r3
   132cc:	b	13078 <close@plt+0x211c>
   132d0:	ldr	r5, [sp, #84]	; 0x54
   132d4:	cmp	r5, #1
   132d8:	beq	13308 <close@plt+0x23ac>
   132dc:	mov	r3, #0
   132e0:	str	r3, [sp, #104]	; 0x68
   132e4:	str	r3, [sp, #108]	; 0x6c
   132e8:	ldr	r3, [sp, #28]
   132ec:	cmn	r3, #1
   132f0:	beq	1333c <close@plt+0x23e0>
   132f4:	mov	r3, #0
   132f8:	str	r4, [sp, #88]	; 0x58
   132fc:	str	fp, [sp, #92]	; 0x5c
   13300:	mov	fp, r3
   13304:	b	13464 <close@plt+0x2508>
   13308:	bl	10e6c <__ctype_b_loc@plt>
   1330c:	ldr	r2, [r0]
   13310:	lsl	r3, r4, #1
   13314:	ldrh	r8, [r2, r3]
   13318:	lsr	r8, r8, #14
   1331c:	and	r8, r8, #1
   13320:	mov	r2, r5
   13324:	eor	r5, r8, #1
   13328:	ldr	r3, [sp, #48]	; 0x30
   1332c:	and	r5, r5, r3
   13330:	ands	r5, r5, #255	; 0xff
   13334:	beq	13078 <close@plt+0x211c>
   13338:	b	134fc <close@plt+0x25a0>
   1333c:	ldr	r0, [sp, #52]	; 0x34
   13340:	bl	10e84 <strlen@plt>
   13344:	str	r0, [sp, #28]
   13348:	b	132f4 <close@plt+0x2398>
   1334c:	mov	r2, fp
   13350:	mov	r1, r4
   13354:	ldr	r4, [sp, #88]	; 0x58
   13358:	ldr	fp, [sp, #92]	; 0x5c
   1335c:	ldr	r0, [sp, #28]
   13360:	cmp	r0, r5
   13364:	bls	13530 <close@plt+0x25d4>
   13368:	ldrb	r3, [r1]
   1336c:	cmp	r3, #0
   13370:	beq	13538 <close@plt+0x25dc>
   13374:	mov	r3, r1
   13378:	add	r2, r2, #1
   1337c:	add	r1, r6, r2
   13380:	cmp	r0, r1
   13384:	bls	13540 <close@plt+0x25e4>
   13388:	ldrb	r1, [r3, #1]!
   1338c:	cmp	r1, #0
   13390:	bne	13378 <close@plt+0x241c>
   13394:	mov	r8, #0
   13398:	b	134f4 <close@plt+0x2598>
   1339c:	cmp	r4, r5
   133a0:	beq	13440 <close@plt+0x24e4>
   133a4:	ldrb	r3, [r4, #1]!
   133a8:	sub	r3, r3, #91	; 0x5b
   133ac:	cmp	r3, #33	; 0x21
   133b0:	ldrls	pc, [pc, r3, lsl #2]
   133b4:	b	1339c <close@plt+0x2440>
   133b8:	andeq	r3, r1, ip, ror #16
   133bc:	andeq	r3, r1, ip, ror #16
   133c0:	muleq	r1, ip, r3
   133c4:	andeq	r3, r1, ip, ror #16
   133c8:	muleq	r1, ip, r3
   133cc:	andeq	r3, r1, ip, ror #16
   133d0:	muleq	r1, ip, r3
   133d4:	muleq	r1, ip, r3
   133d8:	muleq	r1, ip, r3
   133dc:	muleq	r1, ip, r3
   133e0:	muleq	r1, ip, r3
   133e4:	muleq	r1, ip, r3
   133e8:	muleq	r1, ip, r3
   133ec:	muleq	r1, ip, r3
   133f0:	muleq	r1, ip, r3
   133f4:	muleq	r1, ip, r3
   133f8:	muleq	r1, ip, r3
   133fc:	muleq	r1, ip, r3
   13400:	muleq	r1, ip, r3
   13404:	muleq	r1, ip, r3
   13408:	muleq	r1, ip, r3
   1340c:	muleq	r1, ip, r3
   13410:	muleq	r1, ip, r3
   13414:	muleq	r1, ip, r3
   13418:	muleq	r1, ip, r3
   1341c:	muleq	r1, ip, r3
   13420:	muleq	r1, ip, r3
   13424:	muleq	r1, ip, r3
   13428:	muleq	r1, ip, r3
   1342c:	muleq	r1, ip, r3
   13430:	muleq	r1, ip, r3
   13434:	muleq	r1, ip, r3
   13438:	muleq	r1, ip, r3
   1343c:	andeq	r3, r1, ip, ror #16
   13440:	ldr	r0, [sp, #100]	; 0x64
   13444:	bl	10dac <iswprint@plt>
   13448:	cmp	r0, #0
   1344c:	moveq	r8, #0
   13450:	add	fp, fp, r9
   13454:	add	r0, sp, #104	; 0x68
   13458:	bl	10d58 <mbsinit@plt>
   1345c:	cmp	r0, #0
   13460:	bne	134d4 <close@plt+0x2578>
   13464:	add	r5, r6, fp
   13468:	ldr	r3, [sp, #52]	; 0x34
   1346c:	add	r4, r3, r5
   13470:	add	r3, sp, #104	; 0x68
   13474:	ldr	r2, [sp, #28]
   13478:	sub	r2, r2, r5
   1347c:	mov	r1, r4
   13480:	add	r0, sp, #100	; 0x64
   13484:	bl	15094 <close@plt+0x4138>
   13488:	subs	r9, r0, #0
   1348c:	beq	13548 <close@plt+0x25ec>
   13490:	cmn	r9, #1
   13494:	beq	134e4 <close@plt+0x2588>
   13498:	cmn	r9, #2
   1349c:	beq	1334c <close@plt+0x23f0>
   134a0:	ldr	r3, [sp, #32]
   134a4:	cmp	sl, #2
   134a8:	movne	r3, #0
   134ac:	andeq	r3, r3, #1
   134b0:	cmp	r3, #0
   134b4:	beq	13440 <close@plt+0x24e4>
   134b8:	cmp	r9, #1
   134bc:	bls	13440 <close@plt+0x24e4>
   134c0:	sub	r3, r9, #1
   134c4:	add	r5, r3, r5
   134c8:	ldr	r3, [sp, #52]	; 0x34
   134cc:	add	r5, r3, r5
   134d0:	b	133a4 <close@plt+0x2448>
   134d4:	ldr	r4, [sp, #88]	; 0x58
   134d8:	mov	r2, fp
   134dc:	ldr	fp, [sp, #92]	; 0x5c
   134e0:	b	134f4 <close@plt+0x2598>
   134e4:	ldr	r4, [sp, #88]	; 0x58
   134e8:	mov	r2, fp
   134ec:	ldr	fp, [sp, #92]	; 0x5c
   134f0:	mov	r8, #0
   134f4:	cmp	r2, #1
   134f8:	bls	13324 <close@plt+0x23c8>
   134fc:	add	r1, r6, r2
   13500:	ldr	ip, [sp, #64]	; 0x40
   13504:	mov	r5, #0
   13508:	eor	r3, r8, #1
   1350c:	ldr	r2, [sp, #48]	; 0x30
   13510:	and	r3, r3, r2
   13514:	uxtb	r3, r3
   13518:	ldr	r9, [sp, #32]
   1351c:	ldr	lr, [sp, #44]	; 0x2c
   13520:	ldr	r2, [sp, #56]	; 0x38
   13524:	str	r8, [sp, #56]	; 0x38
   13528:	ldr	r0, [sp, #36]	; 0x24
   1352c:	b	135c8 <close@plt+0x266c>
   13530:	mov	r8, #0
   13534:	b	134f4 <close@plt+0x2598>
   13538:	mov	r8, #0
   1353c:	b	134f4 <close@plt+0x2598>
   13540:	mov	r8, #0
   13544:	b	134f4 <close@plt+0x2598>
   13548:	ldr	r4, [sp, #88]	; 0x58
   1354c:	mov	r2, fp
   13550:	ldr	fp, [sp, #92]	; 0x5c
   13554:	b	134f4 <close@plt+0x2598>
   13558:	cmp	r2, #0
   1355c:	beq	13570 <close@plt+0x2614>
   13560:	cmp	r7, fp
   13564:	movhi	r2, #92	; 0x5c
   13568:	strbhi	r2, [r0, fp]
   1356c:	add	fp, fp, #1
   13570:	add	r8, r6, #1
   13574:	cmp	r1, r8
   13578:	bls	13680 <close@plt+0x2724>
   1357c:	eor	r2, r5, #1
   13580:	and	r2, r2, lr
   13584:	ands	r2, r2, #255	; 0xff
   13588:	beq	1369c <close@plt+0x2740>
   1358c:	cmp	r7, fp
   13590:	movhi	r2, #39	; 0x27
   13594:	strbhi	r2, [r0, fp]
   13598:	add	r2, fp, #1
   1359c:	cmp	r7, r2
   135a0:	movhi	lr, #39	; 0x27
   135a4:	strbhi	lr, [r0, r2]
   135a8:	add	fp, fp, #2
   135ac:	mov	r6, r8
   135b0:	mov	r2, r3
   135b4:	mov	lr, r3
   135b8:	cmp	r7, fp
   135bc:	strbhi	r4, [r0, fp]
   135c0:	add	fp, fp, #1
   135c4:	ldrb	r4, [ip, #1]!
   135c8:	cmp	r3, #0
   135cc:	beq	13558 <close@plt+0x25fc>
   135d0:	cmp	r9, #0
   135d4:	bne	138d8 <close@plt+0x297c>
   135d8:	eor	r5, lr, #1
   135dc:	cmp	sl, #2
   135e0:	movne	r5, #0
   135e4:	andeq	r5, r5, #1
   135e8:	cmp	r5, #0
   135ec:	beq	13624 <close@plt+0x26c8>
   135f0:	cmp	r7, fp
   135f4:	movhi	lr, #39	; 0x27
   135f8:	strbhi	lr, [r0, fp]
   135fc:	add	lr, fp, #1
   13600:	cmp	r7, lr
   13604:	movhi	r8, #36	; 0x24
   13608:	strbhi	r8, [r0, lr]
   1360c:	add	lr, fp, #2
   13610:	cmp	r7, lr
   13614:	movhi	r8, #39	; 0x27
   13618:	strbhi	r8, [r0, lr]
   1361c:	add	fp, fp, #3
   13620:	mov	lr, r5
   13624:	cmp	r7, fp
   13628:	movhi	r5, #92	; 0x5c
   1362c:	strbhi	r5, [r0, fp]
   13630:	add	r5, fp, #1
   13634:	cmp	r7, r5
   13638:	lsrhi	r8, r4, #6
   1363c:	addhi	r8, r8, #48	; 0x30
   13640:	strbhi	r8, [r0, r5]
   13644:	add	r8, fp, #2
   13648:	cmp	r7, r8
   1364c:	lsrhi	r5, r4, #3
   13650:	andhi	r5, r5, #7
   13654:	addhi	r5, r5, #48	; 0x30
   13658:	strbhi	r5, [r0, r8]
   1365c:	add	fp, fp, #3
   13660:	and	r4, r4, #7
   13664:	add	r4, r4, #48	; 0x30
   13668:	add	r5, r6, #1
   1366c:	cmp	r1, r5
   13670:	bls	1368c <close@plt+0x2730>
   13674:	mov	r6, r5
   13678:	mov	r5, r3
   1367c:	b	135b8 <close@plt+0x265c>
   13680:	str	lr, [sp, #44]	; 0x2c
   13684:	ldr	r8, [sp, #56]	; 0x38
   13688:	b	12f5c <close@plt+0x2000>
   1368c:	str	lr, [sp, #44]	; 0x2c
   13690:	ldr	r8, [sp, #56]	; 0x38
   13694:	mov	r5, r3
   13698:	b	12f5c <close@plt+0x2000>
   1369c:	mov	r6, r8
   136a0:	b	135b8 <close@plt+0x265c>
   136a4:	mov	r5, #0
   136a8:	b	13078 <close@plt+0x211c>
   136ac:	mov	r8, r5
   136b0:	ldr	r5, [sp, #48]	; 0x30
   136b4:	mov	r4, #48	; 0x30
   136b8:	b	13078 <close@plt+0x211c>
   136bc:	ldr	r8, [sp, #32]
   136c0:	mov	r4, #48	; 0x30
   136c4:	b	13078 <close@plt+0x211c>
   136c8:	ldr	r8, [sp, #32]
   136cc:	mov	r4, #48	; 0x30
   136d0:	b	13078 <close@plt+0x211c>
   136d4:	mov	r8, #0
   136d8:	mov	r5, r8
   136dc:	b	13078 <close@plt+0x211c>
   136e0:	mov	r8, #0
   136e4:	mov	r5, r8
   136e8:	b	13078 <close@plt+0x211c>
   136ec:	mov	r8, #0
   136f0:	mov	r5, r8
   136f4:	b	13078 <close@plt+0x211c>
   136f8:	mov	r8, #0
   136fc:	mov	r5, r8
   13700:	b	13078 <close@plt+0x211c>
   13704:	ldr	r3, [sp, #52]	; 0x34
   13708:	ldrb	r8, [r3, r6]
   1370c:	adds	r8, r8, #0
   13710:	movne	r8, #1
   13714:	b	13188 <close@plt+0x222c>
   13718:	cmp	sl, #2
   1371c:	movne	r3, #0
   13720:	moveq	r3, #1
   13724:	ldr	r1, [sp, #32]
   13728:	mov	r2, r1
   1372c:	and	r2, r2, r3
   13730:	cmp	fp, #0
   13734:	movne	r2, #0
   13738:	andeq	r2, r2, #1
   1373c:	cmp	r2, #0
   13740:	bne	138f0 <close@plt+0x2994>
   13744:	eor	r2, r1, #1
   13748:	and	r3, r3, r2
   1374c:	ldr	r1, [sp, #80]	; 0x50
   13750:	tst	r1, r3
   13754:	beq	137cc <close@plt+0x2870>
   13758:	ldr	r3, [sp, #40]	; 0x28
   1375c:	cmp	r3, #0
   13760:	bne	13788 <close@plt+0x282c>
   13764:	ldr	r1, [sp, #76]	; 0x4c
   13768:	clz	r3, r7
   1376c:	lsr	r3, r3, #5
   13770:	cmp	r1, #0
   13774:	moveq	r3, #0
   13778:	cmp	r3, #0
   1377c:	beq	137cc <close@plt+0x2870>
   13780:	ldr	r7, [sp, #76]	; 0x4c
   13784:	b	1281c <close@plt+0x18c0>
   13788:	ldr	r3, [sp, #168]	; 0xa8
   1378c:	str	r3, [sp, #16]
   13790:	ldr	r3, [sp, #164]	; 0xa4
   13794:	str	r3, [sp, #12]
   13798:	ldr	r3, [sp, #160]	; 0xa0
   1379c:	str	r3, [sp, #8]
   137a0:	ldr	r3, [sp, #156]	; 0x9c
   137a4:	str	r3, [sp, #4]
   137a8:	mov	r3, #5
   137ac:	str	r3, [sp]
   137b0:	ldr	r3, [sp, #28]
   137b4:	ldr	r2, [sp, #52]	; 0x34
   137b8:	ldr	r1, [sp, #76]	; 0x4c
   137bc:	ldr	r0, [sp, #36]	; 0x24
   137c0:	bl	127bc <close@plt+0x1860>
   137c4:	mov	fp, r0
   137c8:	b	138cc <close@plt+0x2970>
   137cc:	mov	sl, r7
   137d0:	ldr	r3, [sp, #72]	; 0x48
   137d4:	cmp	r3, #0
   137d8:	moveq	r2, #0
   137dc:	andne	r2, r2, #1
   137e0:	cmp	r2, #0
   137e4:	beq	13814 <close@plt+0x28b8>
   137e8:	mov	r2, r3
   137ec:	ldrb	r3, [r3]
   137f0:	cmp	r3, #0
   137f4:	beq	13814 <close@plt+0x28b8>
   137f8:	ldr	r1, [sp, #36]	; 0x24
   137fc:	cmp	sl, fp
   13800:	strbhi	r3, [r1, fp]
   13804:	add	fp, fp, #1
   13808:	ldrb	r3, [r2, #1]!
   1380c:	cmp	r3, #0
   13810:	bne	137fc <close@plt+0x28a0>
   13814:	cmp	sl, fp
   13818:	movhi	r3, #0
   1381c:	ldrhi	r2, [sp, #36]	; 0x24
   13820:	strbhi	r3, [r2, fp]
   13824:	b	138cc <close@plt+0x2970>
   13828:	mov	r8, sl
   1382c:	mov	sl, r7
   13830:	ldr	r3, [sp, #32]
   13834:	str	r3, [sp, #48]	; 0x30
   13838:	b	13874 <close@plt+0x2918>
   1383c:	mov	r8, sl
   13840:	mov	sl, r7
   13844:	b	13874 <close@plt+0x2918>
   13848:	mov	r8, sl
   1384c:	mov	sl, r7
   13850:	b	13874 <close@plt+0x2918>
   13854:	andeq	r5, r1, r8, lsl #30
   13858:	andeq	r5, r1, r8, lsl pc
   1385c:	andeq	r5, r1, ip, lsl #30
   13860:	mov	r8, sl
   13864:	mov	sl, r7
   13868:	b	13874 <close@plt+0x2918>
   1386c:	mov	r8, sl
   13870:	mov	sl, r7
   13874:	ldr	r3, [sp, #48]	; 0x30
   13878:	cmp	r8, #2
   1387c:	movne	r3, #0
   13880:	andeq	r3, r3, #1
   13884:	cmp	r3, #0
   13888:	movne	r8, #4
   1388c:	ldr	r3, [sp, #168]	; 0xa8
   13890:	str	r3, [sp, #16]
   13894:	ldr	r3, [sp, #164]	; 0xa4
   13898:	str	r3, [sp, #12]
   1389c:	mov	r3, #0
   138a0:	str	r3, [sp, #8]
   138a4:	ldr	r3, [sp, #156]	; 0x9c
   138a8:	bic	r3, r3, #2
   138ac:	str	r3, [sp, #4]
   138b0:	str	r8, [sp]
   138b4:	ldr	r3, [sp, #28]
   138b8:	ldr	r2, [sp, #52]	; 0x34
   138bc:	mov	r1, sl
   138c0:	ldr	r0, [sp, #36]	; 0x24
   138c4:	bl	127bc <close@plt+0x1860>
   138c8:	mov	fp, r0
   138cc:	mov	r0, fp
   138d0:	add	sp, sp, #116	; 0x74
   138d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138d8:	mov	r8, sl
   138dc:	mov	sl, r7
   138e0:	b	13874 <close@plt+0x2918>
   138e4:	mov	r8, sl
   138e8:	mov	sl, r7
   138ec:	b	13874 <close@plt+0x2918>
   138f0:	mov	r8, sl
   138f4:	mov	sl, r7
   138f8:	b	13874 <close@plt+0x2918>
   138fc:	mov	r8, sl
   13900:	mov	sl, r7
   13904:	b	1388c <close@plt+0x2930>
   13908:	mov	r3, #1
   1390c:	str	r3, [sp, #32]
   13910:	str	r3, [sp, #48]	; 0x30
   13914:	str	r3, [sp, #60]	; 0x3c
   13918:	ldr	r3, [pc, #-196]	; 1385c <close@plt+0x2900>
   1391c:	str	r3, [sp, #72]	; 0x48
   13920:	mov	fp, #0
   13924:	mov	sl, #5
   13928:	b	12878 <close@plt+0x191c>
   1392c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13930:	sub	sp, sp, #52	; 0x34
   13934:	mov	r5, r0
   13938:	str	r1, [sp, #24]
   1393c:	str	r2, [sp, #28]
   13940:	mov	r4, r3
   13944:	bl	10e9c <__errno_location@plt>
   13948:	str	r0, [sp, #32]
   1394c:	ldr	r3, [r0]
   13950:	str	r3, [sp, #36]	; 0x24
   13954:	ldr	r3, [pc, #396]	; 13ae8 <close@plt+0x2b8c>
   13958:	ldr	r6, [r3]
   1395c:	cmn	r5, #-2147483647	; 0x80000001
   13960:	movne	r3, #0
   13964:	moveq	r3, #1
   13968:	orrs	r3, r3, r5, lsr #31
   1396c:	bne	13aac <close@plt+0x2b50>
   13970:	ldr	r3, [pc, #368]	; 13ae8 <close@plt+0x2b8c>
   13974:	ldr	r2, [r3, #4]
   13978:	cmp	r5, r2
   1397c:	blt	139e4 <close@plt+0x2a88>
   13980:	str	r2, [sp, #44]	; 0x2c
   13984:	add	r3, r3, #8
   13988:	cmp	r6, r3
   1398c:	beq	13ab0 <close@plt+0x2b54>
   13990:	sub	r2, r5, r2
   13994:	mov	r3, #8
   13998:	str	r3, [sp]
   1399c:	mvn	r3, #-2147483648	; 0x80000000
   139a0:	add	r2, r2, #1
   139a4:	add	r1, sp, #44	; 0x2c
   139a8:	mov	r0, r6
   139ac:	bl	1492c <close@plt+0x39d0>
   139b0:	mov	r6, r0
   139b4:	ldr	r3, [pc, #300]	; 13ae8 <close@plt+0x2b8c>
   139b8:	str	r0, [r3]
   139bc:	ldr	r7, [pc, #292]	; 13ae8 <close@plt+0x2b8c>
   139c0:	ldr	r0, [r7, #4]
   139c4:	ldr	r2, [sp, #44]	; 0x2c
   139c8:	sub	r2, r2, r0
   139cc:	lsl	r2, r2, #3
   139d0:	mov	r1, #0
   139d4:	add	r0, r6, r0, lsl #3
   139d8:	bl	10eb4 <memset@plt>
   139dc:	ldr	r3, [sp, #44]	; 0x2c
   139e0:	str	r3, [r7, #4]
   139e4:	add	fp, r6, r5, lsl #3
   139e8:	ldr	r8, [r6, r5, lsl #3]
   139ec:	ldr	r7, [fp, #4]
   139f0:	ldr	r9, [r4, #4]
   139f4:	orr	r9, r9, #1
   139f8:	add	sl, r4, #8
   139fc:	ldr	r3, [r4, #44]	; 0x2c
   13a00:	str	r3, [sp, #16]
   13a04:	ldr	r3, [r4, #40]	; 0x28
   13a08:	str	r3, [sp, #12]
   13a0c:	str	sl, [sp, #8]
   13a10:	str	r9, [sp, #4]
   13a14:	ldr	r3, [r4]
   13a18:	str	r3, [sp]
   13a1c:	ldr	r3, [sp, #28]
   13a20:	ldr	r2, [sp, #24]
   13a24:	mov	r1, r8
   13a28:	mov	r0, r7
   13a2c:	bl	127bc <close@plt+0x1860>
   13a30:	cmp	r8, r0
   13a34:	bhi	13a94 <close@plt+0x2b38>
   13a38:	add	r8, r0, #1
   13a3c:	str	r8, [r6, r5, lsl #3]
   13a40:	ldr	r3, [pc, #164]	; 13aec <close@plt+0x2b90>
   13a44:	cmp	r7, r3
   13a48:	beq	13a54 <close@plt+0x2af8>
   13a4c:	mov	r0, r7
   13a50:	bl	124dc <close@plt+0x1580>
   13a54:	mov	r0, r8
   13a58:	bl	147a8 <close@plt+0x384c>
   13a5c:	mov	r7, r0
   13a60:	str	r0, [fp, #4]
   13a64:	ldr	r3, [r4, #44]	; 0x2c
   13a68:	str	r3, [sp, #16]
   13a6c:	ldr	r3, [r4, #40]	; 0x28
   13a70:	str	r3, [sp, #12]
   13a74:	str	sl, [sp, #8]
   13a78:	str	r9, [sp, #4]
   13a7c:	ldr	r3, [r4]
   13a80:	str	r3, [sp]
   13a84:	ldr	r3, [sp, #28]
   13a88:	ldr	r2, [sp, #24]
   13a8c:	mov	r1, r8
   13a90:	bl	127bc <close@plt+0x1860>
   13a94:	ldr	r3, [sp, #32]
   13a98:	ldr	r2, [sp, #36]	; 0x24
   13a9c:	str	r2, [r3]
   13aa0:	mov	r0, r7
   13aa4:	add	sp, sp, #52	; 0x34
   13aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aac:	bl	10f50 <abort@plt>
   13ab0:	sub	r2, r5, r2
   13ab4:	mov	r3, #8
   13ab8:	str	r3, [sp]
   13abc:	mvn	r3, #-2147483648	; 0x80000000
   13ac0:	add	r2, r2, #1
   13ac4:	add	r1, sp, #44	; 0x2c
   13ac8:	mov	r0, #0
   13acc:	bl	1492c <close@plt+0x39d0>
   13ad0:	mov	r6, r0
   13ad4:	ldr	r3, [pc, #12]	; 13ae8 <close@plt+0x2b8c>
   13ad8:	str	r0, [r3], #8
   13adc:	ldm	r3, {r0, r1}
   13ae0:	stm	r6, {r0, r1}
   13ae4:	b	139bc <close@plt+0x2a60>
   13ae8:	andeq	r7, r2, r8, lsl r1
   13aec:	muleq	r2, r0, r1
   13af0:	push	{r4, r5, r6, lr}
   13af4:	mov	r4, r0
   13af8:	bl	10e9c <__errno_location@plt>
   13afc:	mov	r5, r0
   13b00:	ldr	r6, [r0]
   13b04:	cmp	r4, #0
   13b08:	ldr	r3, [pc, #20]	; 13b24 <close@plt+0x2bc8>
   13b0c:	moveq	r4, r3
   13b10:	mov	r1, #48	; 0x30
   13b14:	mov	r0, r4
   13b18:	bl	14c94 <close@plt+0x3d38>
   13b1c:	str	r6, [r5]
   13b20:	pop	{r4, r5, r6, pc}
   13b24:	muleq	r2, r0, r2
   13b28:	subs	r3, r0, #0
   13b2c:	ldr	r2, [pc, #8]	; 13b3c <close@plt+0x2be0>
   13b30:	moveq	r3, r2
   13b34:	ldr	r0, [r3]
   13b38:	bx	lr
   13b3c:	muleq	r2, r0, r2
   13b40:	subs	r3, r0, #0
   13b44:	ldr	r2, [pc, #8]	; 13b54 <close@plt+0x2bf8>
   13b48:	moveq	r3, r2
   13b4c:	str	r1, [r3]
   13b50:	bx	lr
   13b54:	muleq	r2, r0, r2
   13b58:	push	{lr}		; (str lr, [sp, #-4]!)
   13b5c:	subs	r3, r0, #0
   13b60:	ldr	r0, [pc, #44]	; 13b94 <close@plt+0x2c38>
   13b64:	moveq	r3, r0
   13b68:	add	r3, r3, #8
   13b6c:	lsr	lr, r1, #5
   13b70:	and	r1, r1, #31
   13b74:	ldr	ip, [r3, lr, lsl #2]
   13b78:	lsr	r0, ip, r1
   13b7c:	eor	r2, r2, r0
   13b80:	and	r2, r2, #1
   13b84:	eor	r1, ip, r2, lsl r1
   13b88:	str	r1, [r3, lr, lsl #2]
   13b8c:	and	r0, r0, #1
   13b90:	pop	{pc}		; (ldr pc, [sp], #4)
   13b94:	muleq	r2, r0, r2
   13b98:	subs	r3, r0, #0
   13b9c:	ldr	r2, [pc, #12]	; 13bb0 <close@plt+0x2c54>
   13ba0:	moveq	r3, r2
   13ba4:	ldr	r0, [r3, #4]
   13ba8:	str	r1, [r3, #4]
   13bac:	bx	lr
   13bb0:	muleq	r2, r0, r2
   13bb4:	subs	r3, r0, #0
   13bb8:	ldr	r0, [pc, #40]	; 13be8 <close@plt+0x2c8c>
   13bbc:	moveq	r3, r0
   13bc0:	mov	r0, #10
   13bc4:	str	r0, [r3]
   13bc8:	cmp	r2, #0
   13bcc:	cmpne	r1, #0
   13bd0:	beq	13be0 <close@plt+0x2c84>
   13bd4:	str	r1, [r3, #40]	; 0x28
   13bd8:	str	r2, [r3, #44]	; 0x2c
   13bdc:	bx	lr
   13be0:	push	{r4, lr}
   13be4:	bl	10f50 <abort@plt>
   13be8:	muleq	r2, r0, r2
   13bec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bf0:	sub	sp, sp, #24
   13bf4:	mov	r7, r0
   13bf8:	mov	r8, r1
   13bfc:	mov	r9, r2
   13c00:	mov	sl, r3
   13c04:	ldr	r4, [sp, #56]	; 0x38
   13c08:	cmp	r4, #0
   13c0c:	ldr	r3, [pc, #84]	; 13c68 <close@plt+0x2d0c>
   13c10:	moveq	r4, r3
   13c14:	bl	10e9c <__errno_location@plt>
   13c18:	mov	r5, r0
   13c1c:	ldr	r6, [r0]
   13c20:	ldr	r3, [r4, #44]	; 0x2c
   13c24:	str	r3, [sp, #16]
   13c28:	ldr	r3, [r4, #40]	; 0x28
   13c2c:	str	r3, [sp, #12]
   13c30:	add	r3, r4, #8
   13c34:	str	r3, [sp, #8]
   13c38:	ldr	r3, [r4, #4]
   13c3c:	str	r3, [sp, #4]
   13c40:	ldr	r3, [r4]
   13c44:	str	r3, [sp]
   13c48:	mov	r3, sl
   13c4c:	mov	r2, r9
   13c50:	mov	r1, r8
   13c54:	mov	r0, r7
   13c58:	bl	127bc <close@plt+0x1860>
   13c5c:	str	r6, [r5]
   13c60:	add	sp, sp, #24
   13c64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c68:	muleq	r2, r0, r2
   13c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c70:	sub	sp, sp, #44	; 0x2c
   13c74:	str	r0, [sp, #28]
   13c78:	str	r1, [sp, #32]
   13c7c:	mov	r6, r2
   13c80:	subs	r4, r3, #0
   13c84:	ldr	r3, [pc, #172]	; 13d38 <close@plt+0x2ddc>
   13c88:	moveq	r4, r3
   13c8c:	bl	10e9c <__errno_location@plt>
   13c90:	mov	r7, r0
   13c94:	ldr	fp, [r0]
   13c98:	ldr	r5, [r4, #4]
   13c9c:	cmp	r6, #0
   13ca0:	orreq	r5, r5, #1
   13ca4:	add	r9, r4, #8
   13ca8:	ldr	r3, [r4, #44]	; 0x2c
   13cac:	str	r3, [sp, #16]
   13cb0:	ldr	r3, [r4, #40]	; 0x28
   13cb4:	str	r3, [sp, #12]
   13cb8:	str	r9, [sp, #8]
   13cbc:	str	r5, [sp, #4]
   13cc0:	ldr	r3, [r4]
   13cc4:	str	r3, [sp]
   13cc8:	ldr	r3, [sp, #32]
   13ccc:	ldr	r2, [sp, #28]
   13cd0:	mov	r1, #0
   13cd4:	mov	r0, r1
   13cd8:	bl	127bc <close@plt+0x1860>
   13cdc:	mov	sl, r0
   13ce0:	add	r8, r0, #1
   13ce4:	mov	r0, r8
   13ce8:	bl	147a8 <close@plt+0x384c>
   13cec:	str	r0, [sp, #36]	; 0x24
   13cf0:	ldr	r3, [r4, #44]	; 0x2c
   13cf4:	str	r3, [sp, #16]
   13cf8:	ldr	r3, [r4, #40]	; 0x28
   13cfc:	str	r3, [sp, #12]
   13d00:	str	r9, [sp, #8]
   13d04:	str	r5, [sp, #4]
   13d08:	ldr	r3, [r4]
   13d0c:	str	r3, [sp]
   13d10:	ldr	r3, [sp, #32]
   13d14:	ldr	r2, [sp, #28]
   13d18:	mov	r1, r8
   13d1c:	bl	127bc <close@plt+0x1860>
   13d20:	str	fp, [r7]
   13d24:	cmp	r6, #0
   13d28:	strne	sl, [r6]
   13d2c:	ldr	r0, [sp, #36]	; 0x24
   13d30:	add	sp, sp, #44	; 0x2c
   13d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d38:	muleq	r2, r0, r2
   13d3c:	push	{r4, lr}
   13d40:	mov	r3, r2
   13d44:	mov	r2, #0
   13d48:	bl	13c6c <close@plt+0x2d10>
   13d4c:	pop	{r4, pc}
   13d50:	push	{r4, r5, r6, r7, r8, lr}
   13d54:	ldr	r3, [pc, #140]	; 13de8 <close@plt+0x2e8c>
   13d58:	ldr	r7, [r3]
   13d5c:	ldr	r3, [r3, #4]
   13d60:	cmp	r3, #1
   13d64:	ble	13d90 <close@plt+0x2e34>
   13d68:	mov	r5, r7
   13d6c:	mov	r4, #1
   13d70:	ldr	r6, [pc, #112]	; 13de8 <close@plt+0x2e8c>
   13d74:	ldr	r0, [r5, #12]
   13d78:	bl	124dc <close@plt+0x1580>
   13d7c:	add	r4, r4, #1
   13d80:	add	r5, r5, #8
   13d84:	ldr	r3, [r6, #4]
   13d88:	cmp	r3, r4
   13d8c:	bgt	13d74 <close@plt+0x2e18>
   13d90:	ldr	r0, [r7, #4]
   13d94:	ldr	r3, [pc, #80]	; 13dec <close@plt+0x2e90>
   13d98:	cmp	r0, r3
   13d9c:	beq	13db8 <close@plt+0x2e5c>
   13da0:	bl	124dc <close@plt+0x1580>
   13da4:	ldr	r3, [pc, #60]	; 13de8 <close@plt+0x2e8c>
   13da8:	mov	r2, #256	; 0x100
   13dac:	str	r2, [r3, #8]
   13db0:	ldr	r2, [pc, #52]	; 13dec <close@plt+0x2e90>
   13db4:	str	r2, [r3, #12]
   13db8:	ldr	r3, [pc, #48]	; 13df0 <close@plt+0x2e94>
   13dbc:	cmp	r7, r3
   13dc0:	beq	13dd8 <close@plt+0x2e7c>
   13dc4:	mov	r0, r7
   13dc8:	bl	124dc <close@plt+0x1580>
   13dcc:	ldr	r3, [pc, #20]	; 13de8 <close@plt+0x2e8c>
   13dd0:	add	r2, r3, #8
   13dd4:	str	r2, [r3]
   13dd8:	mov	r2, #1
   13ddc:	ldr	r3, [pc, #4]	; 13de8 <close@plt+0x2e8c>
   13de0:	str	r2, [r3, #4]
   13de4:	pop	{r4, r5, r6, r7, r8, pc}
   13de8:	andeq	r7, r2, r8, lsl r1
   13dec:	muleq	r2, r0, r1
   13df0:	andeq	r7, r2, r0, lsr #2
   13df4:	push	{r4, lr}
   13df8:	ldr	r3, [pc, #8]	; 13e08 <close@plt+0x2eac>
   13dfc:	mvn	r2, #0
   13e00:	bl	1392c <close@plt+0x29d0>
   13e04:	pop	{r4, pc}
   13e08:	muleq	r2, r0, r2
   13e0c:	push	{r4, lr}
   13e10:	ldr	r3, [pc, #4]	; 13e1c <close@plt+0x2ec0>
   13e14:	bl	1392c <close@plt+0x29d0>
   13e18:	pop	{r4, pc}
   13e1c:	muleq	r2, r0, r2
   13e20:	push	{r4, lr}
   13e24:	mov	r1, r0
   13e28:	mov	r0, #0
   13e2c:	bl	13df4 <close@plt+0x2e98>
   13e30:	pop	{r4, pc}
   13e34:	push	{r4, lr}
   13e38:	mov	r2, r1
   13e3c:	mov	r1, r0
   13e40:	mov	r0, #0
   13e44:	bl	13e0c <close@plt+0x2eb0>
   13e48:	pop	{r4, pc}
   13e4c:	push	{r4, r5, lr}
   13e50:	sub	sp, sp, #52	; 0x34
   13e54:	mov	r4, r0
   13e58:	mov	r5, r2
   13e5c:	mov	r0, sp
   13e60:	bl	12654 <close@plt+0x16f8>
   13e64:	mov	r3, sp
   13e68:	mvn	r2, #0
   13e6c:	mov	r1, r5
   13e70:	mov	r0, r4
   13e74:	bl	1392c <close@plt+0x29d0>
   13e78:	add	sp, sp, #52	; 0x34
   13e7c:	pop	{r4, r5, pc}
   13e80:	push	{r4, r5, r6, lr}
   13e84:	sub	sp, sp, #48	; 0x30
   13e88:	mov	r4, r0
   13e8c:	mov	r5, r2
   13e90:	mov	r6, r3
   13e94:	mov	r0, sp
   13e98:	bl	12654 <close@plt+0x16f8>
   13e9c:	mov	r3, sp
   13ea0:	mov	r2, r6
   13ea4:	mov	r1, r5
   13ea8:	mov	r0, r4
   13eac:	bl	1392c <close@plt+0x29d0>
   13eb0:	add	sp, sp, #48	; 0x30
   13eb4:	pop	{r4, r5, r6, pc}
   13eb8:	push	{r4, lr}
   13ebc:	mov	r2, r1
   13ec0:	mov	r1, r0
   13ec4:	mov	r0, #0
   13ec8:	bl	13e4c <close@plt+0x2ef0>
   13ecc:	pop	{r4, pc}
   13ed0:	push	{r4, lr}
   13ed4:	mov	r3, r2
   13ed8:	mov	r2, r1
   13edc:	mov	r1, r0
   13ee0:	mov	r0, #0
   13ee4:	bl	13e80 <close@plt+0x2f24>
   13ee8:	pop	{r4, pc}
   13eec:	push	{r4, r5, r6, lr}
   13ef0:	sub	sp, sp, #48	; 0x30
   13ef4:	mov	r4, r0
   13ef8:	mov	r5, r1
   13efc:	mov	r6, r2
   13f00:	mov	ip, sp
   13f04:	ldr	lr, [pc, #64]	; 13f4c <close@plt+0x2ff0>
   13f08:	ldm	lr!, {r0, r1, r2, r3}
   13f0c:	stmia	ip!, {r0, r1, r2, r3}
   13f10:	ldm	lr!, {r0, r1, r2, r3}
   13f14:	stmia	ip!, {r0, r1, r2, r3}
   13f18:	ldm	lr, {r0, r1, r2, r3}
   13f1c:	stm	ip, {r0, r1, r2, r3}
   13f20:	mov	r2, #1
   13f24:	mov	r1, r6
   13f28:	mov	r0, sp
   13f2c:	bl	13b58 <close@plt+0x2bfc>
   13f30:	mov	r3, sp
   13f34:	mov	r2, r5
   13f38:	mov	r1, r4
   13f3c:	mov	r0, #0
   13f40:	bl	1392c <close@plt+0x29d0>
   13f44:	add	sp, sp, #48	; 0x30
   13f48:	pop	{r4, r5, r6, pc}
   13f4c:	muleq	r2, r0, r2
   13f50:	push	{r4, lr}
   13f54:	mov	r2, r1
   13f58:	mvn	r1, #0
   13f5c:	bl	13eec <close@plt+0x2f90>
   13f60:	pop	{r4, pc}
   13f64:	push	{r4, lr}
   13f68:	mov	r1, #58	; 0x3a
   13f6c:	bl	13f50 <close@plt+0x2ff4>
   13f70:	pop	{r4, pc}
   13f74:	push	{r4, lr}
   13f78:	mov	r2, #58	; 0x3a
   13f7c:	bl	13eec <close@plt+0x2f90>
   13f80:	pop	{r4, pc}
   13f84:	push	{r4, r5, lr}
   13f88:	sub	sp, sp, #100	; 0x64
   13f8c:	mov	r4, r0
   13f90:	mov	r5, r2
   13f94:	mov	r0, sp
   13f98:	bl	12654 <close@plt+0x16f8>
   13f9c:	add	lr, sp, #48	; 0x30
   13fa0:	mov	ip, sp
   13fa4:	ldm	ip!, {r0, r1, r2, r3}
   13fa8:	stmia	lr!, {r0, r1, r2, r3}
   13fac:	ldm	ip!, {r0, r1, r2, r3}
   13fb0:	stmia	lr!, {r0, r1, r2, r3}
   13fb4:	ldm	ip, {r0, r1, r2, r3}
   13fb8:	stm	lr, {r0, r1, r2, r3}
   13fbc:	mov	r2, #1
   13fc0:	mov	r1, #58	; 0x3a
   13fc4:	add	r0, sp, #48	; 0x30
   13fc8:	bl	13b58 <close@plt+0x2bfc>
   13fcc:	add	r3, sp, #48	; 0x30
   13fd0:	mvn	r2, #0
   13fd4:	mov	r1, r5
   13fd8:	mov	r0, r4
   13fdc:	bl	1392c <close@plt+0x29d0>
   13fe0:	add	sp, sp, #100	; 0x64
   13fe4:	pop	{r4, r5, pc}
   13fe8:	push	{r4, r5, r6, r7, lr}
   13fec:	sub	sp, sp, #52	; 0x34
   13ff0:	mov	r4, r0
   13ff4:	mov	r6, r1
   13ff8:	mov	r7, r2
   13ffc:	mov	r5, r3
   14000:	mov	ip, sp
   14004:	ldr	lr, [pc, #64]	; 1404c <close@plt+0x30f0>
   14008:	ldm	lr!, {r0, r1, r2, r3}
   1400c:	stmia	ip!, {r0, r1, r2, r3}
   14010:	ldm	lr!, {r0, r1, r2, r3}
   14014:	stmia	ip!, {r0, r1, r2, r3}
   14018:	ldm	lr, {r0, r1, r2, r3}
   1401c:	stm	ip, {r0, r1, r2, r3}
   14020:	mov	r2, r7
   14024:	mov	r1, r6
   14028:	mov	r0, sp
   1402c:	bl	13bb4 <close@plt+0x2c58>
   14030:	mov	r3, sp
   14034:	ldr	r2, [sp, #72]	; 0x48
   14038:	mov	r1, r5
   1403c:	mov	r0, r4
   14040:	bl	1392c <close@plt+0x29d0>
   14044:	add	sp, sp, #52	; 0x34
   14048:	pop	{r4, r5, r6, r7, pc}
   1404c:	muleq	r2, r0, r2
   14050:	push	{lr}		; (str lr, [sp, #-4]!)
   14054:	sub	sp, sp, #12
   14058:	mvn	ip, #0
   1405c:	str	ip, [sp]
   14060:	bl	13fe8 <close@plt+0x308c>
   14064:	add	sp, sp, #12
   14068:	pop	{pc}		; (ldr pc, [sp], #4)
   1406c:	push	{r4, lr}
   14070:	mov	r3, r2
   14074:	mov	r2, r1
   14078:	mov	r1, r0
   1407c:	mov	r0, #0
   14080:	bl	14050 <close@plt+0x30f4>
   14084:	pop	{r4, pc}
   14088:	push	{lr}		; (str lr, [sp, #-4]!)
   1408c:	sub	sp, sp, #12
   14090:	str	r3, [sp]
   14094:	mov	r3, r2
   14098:	mov	r2, r1
   1409c:	mov	r1, r0
   140a0:	mov	r0, #0
   140a4:	bl	13fe8 <close@plt+0x308c>
   140a8:	add	sp, sp, #12
   140ac:	pop	{pc}		; (ldr pc, [sp], #4)
   140b0:	push	{r4, lr}
   140b4:	ldr	r3, [pc, #4]	; 140c0 <close@plt+0x3164>
   140b8:	bl	1392c <close@plt+0x29d0>
   140bc:	pop	{r4, pc}
   140c0:	andeq	r7, r2, r8, lsr #2
   140c4:	push	{r4, lr}
   140c8:	mov	r2, r1
   140cc:	mov	r1, r0
   140d0:	mov	r0, #0
   140d4:	bl	140b0 <close@plt+0x3154>
   140d8:	pop	{r4, pc}
   140dc:	push	{r4, lr}
   140e0:	mvn	r2, #0
   140e4:	bl	140b0 <close@plt+0x3154>
   140e8:	pop	{r4, pc}
   140ec:	push	{r4, lr}
   140f0:	mov	r1, r0
   140f4:	mov	r0, #0
   140f8:	bl	140dc <close@plt+0x3180>
   140fc:	pop	{r4, pc}
   14100:	push	{r4, r5, r6, r7, r8, lr}
   14104:	mov	r8, r0
   14108:	mov	r7, r1
   1410c:	mov	r4, r2
   14110:	ldr	r5, [pc, #88]	; 14170 <close@plt+0x3214>
   14114:	b	1411c <close@plt+0x31c0>
   14118:	mov	r4, r5
   1411c:	mov	r2, r4
   14120:	mov	r1, r7
   14124:	mov	r0, r8
   14128:	bl	10d10 <read@plt>
   1412c:	subs	r6, r0, #0
   14130:	bge	14168 <close@plt+0x320c>
   14134:	bl	10e9c <__errno_location@plt>
   14138:	ldr	r3, [r0]
   1413c:	cmp	r3, #4
   14140:	beq	1411c <close@plt+0x31c0>
   14144:	cmp	r4, r5
   14148:	movls	r4, #0
   1414c:	movhi	r4, #1
   14150:	cmp	r3, #22
   14154:	movne	r4, #0
   14158:	cmp	r4, #0
   1415c:	bne	14118 <close@plt+0x31bc>
   14160:	mov	r0, r6
   14164:	pop	{r4, r5, r6, r7, r8, pc}
   14168:	mov	r0, r6
   1416c:	pop	{r4, r5, r6, r7, r8, pc}
   14170:	svcvc	0x00f00000	; IMB
   14174:	push	{r4, r5, r6, r7, r8, lr}
   14178:	mov	r8, r0
   1417c:	mov	r7, r1
   14180:	mov	r4, r2
   14184:	ldr	r5, [pc, #88]	; 141e4 <close@plt+0x3288>
   14188:	b	14190 <close@plt+0x3234>
   1418c:	mov	r4, r5
   14190:	mov	r2, r4
   14194:	mov	r1, r7
   14198:	mov	r0, r8
   1419c:	bl	10ecc <write@plt>
   141a0:	subs	r6, r0, #0
   141a4:	bge	141dc <close@plt+0x3280>
   141a8:	bl	10e9c <__errno_location@plt>
   141ac:	ldr	r3, [r0]
   141b0:	cmp	r3, #4
   141b4:	beq	14190 <close@plt+0x3234>
   141b8:	cmp	r4, r5
   141bc:	movls	r4, #0
   141c0:	movhi	r4, #1
   141c4:	cmp	r3, #22
   141c8:	movne	r4, #0
   141cc:	cmp	r4, #0
   141d0:	bne	1418c <close@plt+0x3230>
   141d4:	mov	r0, r6
   141d8:	pop	{r4, r5, r6, r7, r8, pc}
   141dc:	mov	r0, r6
   141e0:	pop	{r4, r5, r6, r7, r8, pc}
   141e4:	svcvc	0x00f00000	; IMB
   141e8:	push	{r4, r5, r6, lr}
   141ec:	sub	sp, sp, #32
   141f0:	mov	r4, r0
   141f4:	ldr	r5, [sp, #48]	; 0x30
   141f8:	ldr	r6, [sp, #52]	; 0x34
   141fc:	cmp	r1, #0
   14200:	beq	142b8 <close@plt+0x335c>
   14204:	str	r3, [sp, #4]
   14208:	str	r2, [sp]
   1420c:	mov	r3, r1
   14210:	ldr	r2, [pc, #940]	; 145c4 <close@plt+0x3668>
   14214:	mov	r1, #1
   14218:	bl	10ee4 <__fprintf_chk@plt>
   1421c:	mov	r2, #5
   14220:	ldr	r1, [pc, #928]	; 145c8 <close@plt+0x366c>
   14224:	mov	r0, #0
   14228:	bl	10d88 <dcgettext@plt>
   1422c:	ldr	r3, [pc, #920]	; 145cc <close@plt+0x3670>
   14230:	str	r3, [sp]
   14234:	mov	r3, r0
   14238:	ldr	r2, [pc, #912]	; 145d0 <close@plt+0x3674>
   1423c:	mov	r1, #1
   14240:	mov	r0, r4
   14244:	bl	10ee4 <__fprintf_chk@plt>
   14248:	mov	r1, r4
   1424c:	mov	r0, #10
   14250:	bl	10d7c <fputc_unlocked@plt>
   14254:	mov	r2, #5
   14258:	ldr	r1, [pc, #884]	; 145d4 <close@plt+0x3678>
   1425c:	mov	r0, #0
   14260:	bl	10d88 <dcgettext@plt>
   14264:	ldr	r3, [pc, #876]	; 145d8 <close@plt+0x367c>
   14268:	mov	r2, r0
   1426c:	mov	r1, #1
   14270:	mov	r0, r4
   14274:	bl	10ee4 <__fprintf_chk@plt>
   14278:	mov	r1, r4
   1427c:	mov	r0, #10
   14280:	bl	10d7c <fputc_unlocked@plt>
   14284:	cmp	r6, #9
   14288:	ldrls	pc, [pc, r6, lsl #2]
   1428c:	b	1455c <close@plt+0x3600>
   14290:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14294:	ldrdeq	r4, [r1], -r0
   14298:	strdeq	r4, [r1], -ip
   1429c:	andeq	r4, r1, ip, lsr #6
   142a0:	andeq	r4, r1, r4, ror #6
   142a4:	andeq	r4, r1, r4, lsr #7
   142a8:	andeq	r4, r1, ip, ror #7
   142ac:	andeq	r4, r1, ip, lsr r4
   142b0:	muleq	r1, r4, r4
   142b4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142b8:	str	r3, [sp]
   142bc:	mov	r3, r2
   142c0:	ldr	r2, [pc, #788]	; 145dc <close@plt+0x3680>
   142c4:	mov	r1, #1
   142c8:	bl	10ee4 <__fprintf_chk@plt>
   142cc:	b	1421c <close@plt+0x32c0>
   142d0:	mov	r2, #5
   142d4:	ldr	r1, [pc, #772]	; 145e0 <close@plt+0x3684>
   142d8:	mov	r0, #0
   142dc:	bl	10d88 <dcgettext@plt>
   142e0:	ldr	r3, [r5]
   142e4:	mov	r2, r0
   142e8:	mov	r1, #1
   142ec:	mov	r0, r4
   142f0:	bl	10ee4 <__fprintf_chk@plt>
   142f4:	add	sp, sp, #32
   142f8:	pop	{r4, r5, r6, pc}
   142fc:	mov	r2, #5
   14300:	ldr	r1, [pc, #732]	; 145e4 <close@plt+0x3688>
   14304:	mov	r0, #0
   14308:	bl	10d88 <dcgettext@plt>
   1430c:	ldr	r3, [r5]
   14310:	ldr	r2, [r5, #4]
   14314:	str	r2, [sp]
   14318:	mov	r2, r0
   1431c:	mov	r1, #1
   14320:	mov	r0, r4
   14324:	bl	10ee4 <__fprintf_chk@plt>
   14328:	b	142f4 <close@plt+0x3398>
   1432c:	mov	r2, #5
   14330:	ldr	r1, [pc, #688]	; 145e8 <close@plt+0x368c>
   14334:	mov	r0, #0
   14338:	bl	10d88 <dcgettext@plt>
   1433c:	ldr	r3, [r5]
   14340:	ldr	r2, [r5, #8]
   14344:	str	r2, [sp, #4]
   14348:	ldr	r2, [r5, #4]
   1434c:	str	r2, [sp]
   14350:	mov	r2, r0
   14354:	mov	r1, #1
   14358:	mov	r0, r4
   1435c:	bl	10ee4 <__fprintf_chk@plt>
   14360:	b	142f4 <close@plt+0x3398>
   14364:	mov	r2, #5
   14368:	ldr	r1, [pc, #636]	; 145ec <close@plt+0x3690>
   1436c:	mov	r0, #0
   14370:	bl	10d88 <dcgettext@plt>
   14374:	ldr	r3, [r5]
   14378:	ldr	r2, [r5, #12]
   1437c:	str	r2, [sp, #8]
   14380:	ldr	r2, [r5, #8]
   14384:	str	r2, [sp, #4]
   14388:	ldr	r2, [r5, #4]
   1438c:	str	r2, [sp]
   14390:	mov	r2, r0
   14394:	mov	r1, #1
   14398:	mov	r0, r4
   1439c:	bl	10ee4 <__fprintf_chk@plt>
   143a0:	b	142f4 <close@plt+0x3398>
   143a4:	mov	r2, #5
   143a8:	ldr	r1, [pc, #576]	; 145f0 <close@plt+0x3694>
   143ac:	mov	r0, #0
   143b0:	bl	10d88 <dcgettext@plt>
   143b4:	ldr	r3, [r5]
   143b8:	ldr	r2, [r5, #16]
   143bc:	str	r2, [sp, #12]
   143c0:	ldr	r2, [r5, #12]
   143c4:	str	r2, [sp, #8]
   143c8:	ldr	r2, [r5, #8]
   143cc:	str	r2, [sp, #4]
   143d0:	ldr	r2, [r5, #4]
   143d4:	str	r2, [sp]
   143d8:	mov	r2, r0
   143dc:	mov	r1, #1
   143e0:	mov	r0, r4
   143e4:	bl	10ee4 <__fprintf_chk@plt>
   143e8:	b	142f4 <close@plt+0x3398>
   143ec:	mov	r2, #5
   143f0:	ldr	r1, [pc, #508]	; 145f4 <close@plt+0x3698>
   143f4:	mov	r0, #0
   143f8:	bl	10d88 <dcgettext@plt>
   143fc:	ldr	r3, [r5]
   14400:	ldr	r2, [r5, #20]
   14404:	str	r2, [sp, #16]
   14408:	ldr	r2, [r5, #16]
   1440c:	str	r2, [sp, #12]
   14410:	ldr	r2, [r5, #12]
   14414:	str	r2, [sp, #8]
   14418:	ldr	r2, [r5, #8]
   1441c:	str	r2, [sp, #4]
   14420:	ldr	r2, [r5, #4]
   14424:	str	r2, [sp]
   14428:	mov	r2, r0
   1442c:	mov	r1, #1
   14430:	mov	r0, r4
   14434:	bl	10ee4 <__fprintf_chk@plt>
   14438:	b	142f4 <close@plt+0x3398>
   1443c:	mov	r2, #5
   14440:	ldr	r1, [pc, #432]	; 145f8 <close@plt+0x369c>
   14444:	mov	r0, #0
   14448:	bl	10d88 <dcgettext@plt>
   1444c:	ldr	r3, [r5]
   14450:	ldr	r2, [r5, #24]
   14454:	str	r2, [sp, #20]
   14458:	ldr	r2, [r5, #20]
   1445c:	str	r2, [sp, #16]
   14460:	ldr	r2, [r5, #16]
   14464:	str	r2, [sp, #12]
   14468:	ldr	r2, [r5, #12]
   1446c:	str	r2, [sp, #8]
   14470:	ldr	r2, [r5, #8]
   14474:	str	r2, [sp, #4]
   14478:	ldr	r2, [r5, #4]
   1447c:	str	r2, [sp]
   14480:	mov	r2, r0
   14484:	mov	r1, #1
   14488:	mov	r0, r4
   1448c:	bl	10ee4 <__fprintf_chk@plt>
   14490:	b	142f4 <close@plt+0x3398>
   14494:	mov	r2, #5
   14498:	ldr	r1, [pc, #348]	; 145fc <close@plt+0x36a0>
   1449c:	mov	r0, #0
   144a0:	bl	10d88 <dcgettext@plt>
   144a4:	ldr	r3, [r5]
   144a8:	ldr	r2, [r5, #28]
   144ac:	str	r2, [sp, #24]
   144b0:	ldr	r2, [r5, #24]
   144b4:	str	r2, [sp, #20]
   144b8:	ldr	r2, [r5, #20]
   144bc:	str	r2, [sp, #16]
   144c0:	ldr	r2, [r5, #16]
   144c4:	str	r2, [sp, #12]
   144c8:	ldr	r2, [r5, #12]
   144cc:	str	r2, [sp, #8]
   144d0:	ldr	r2, [r5, #8]
   144d4:	str	r2, [sp, #4]
   144d8:	ldr	r2, [r5, #4]
   144dc:	str	r2, [sp]
   144e0:	mov	r2, r0
   144e4:	mov	r1, #1
   144e8:	mov	r0, r4
   144ec:	bl	10ee4 <__fprintf_chk@plt>
   144f0:	b	142f4 <close@plt+0x3398>
   144f4:	mov	r2, #5
   144f8:	ldr	r1, [pc, #256]	; 14600 <close@plt+0x36a4>
   144fc:	mov	r0, #0
   14500:	bl	10d88 <dcgettext@plt>
   14504:	ldr	r3, [r5]
   14508:	ldr	r2, [r5, #32]
   1450c:	str	r2, [sp, #28]
   14510:	ldr	r2, [r5, #28]
   14514:	str	r2, [sp, #24]
   14518:	ldr	r2, [r5, #24]
   1451c:	str	r2, [sp, #20]
   14520:	ldr	r2, [r5, #20]
   14524:	str	r2, [sp, #16]
   14528:	ldr	r2, [r5, #16]
   1452c:	str	r2, [sp, #12]
   14530:	ldr	r2, [r5, #12]
   14534:	str	r2, [sp, #8]
   14538:	ldr	r2, [r5, #8]
   1453c:	str	r2, [sp, #4]
   14540:	ldr	r2, [r5, #4]
   14544:	str	r2, [sp]
   14548:	mov	r2, r0
   1454c:	mov	r1, #1
   14550:	mov	r0, r4
   14554:	bl	10ee4 <__fprintf_chk@plt>
   14558:	b	142f4 <close@plt+0x3398>
   1455c:	mov	r2, #5
   14560:	ldr	r1, [pc, #156]	; 14604 <close@plt+0x36a8>
   14564:	mov	r0, #0
   14568:	bl	10d88 <dcgettext@plt>
   1456c:	ldr	r3, [r5]
   14570:	ldr	r2, [r5, #32]
   14574:	str	r2, [sp, #28]
   14578:	ldr	r2, [r5, #28]
   1457c:	str	r2, [sp, #24]
   14580:	ldr	r2, [r5, #24]
   14584:	str	r2, [sp, #20]
   14588:	ldr	r2, [r5, #20]
   1458c:	str	r2, [sp, #16]
   14590:	ldr	r2, [r5, #16]
   14594:	str	r2, [sp, #12]
   14598:	ldr	r2, [r5, #12]
   1459c:	str	r2, [sp, #8]
   145a0:	ldr	r2, [r5, #8]
   145a4:	str	r2, [sp, #4]
   145a8:	ldr	r2, [r5, #4]
   145ac:	str	r2, [sp]
   145b0:	mov	r2, r0
   145b4:	mov	r1, #1
   145b8:	mov	r0, r4
   145bc:	bl	10ee4 <__fprintf_chk@plt>
   145c0:	b	142f4 <close@plt+0x3398>
   145c4:	andeq	r5, r1, r4, lsl #31
   145c8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   145cc:	andeq	r0, r0, r6, ror #15
   145d0:	andeq	r6, r1, r0, ror r2
   145d4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   145d8:	andeq	r6, r1, r8, asr #32
   145dc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   145e0:	andeq	r6, r1, ip, rrx
   145e4:	andeq	r6, r1, ip, ror r0
   145e8:	muleq	r1, r4, r0
   145ec:	strheq	r6, [r1], -r0
   145f0:	ldrdeq	r6, [r1], -r0
   145f4:	strdeq	r6, [r1], -r4
   145f8:	andeq	r6, r1, ip, lsl r1
   145fc:	andeq	r6, r1, r8, asr #2
   14600:	andeq	r6, r1, r8, ror r1
   14604:	andeq	r6, r1, ip, lsr #3
   14608:	push	{r4, r5, lr}
   1460c:	sub	sp, sp, #12
   14610:	ldr	r5, [sp, #24]
   14614:	ldr	ip, [r5]
   14618:	cmp	ip, #0
   1461c:	beq	1464c <close@plt+0x36f0>
   14620:	mov	lr, r5
   14624:	mov	ip, #0
   14628:	add	ip, ip, #1
   1462c:	ldr	r4, [lr, #4]!
   14630:	cmp	r4, #0
   14634:	bne	14628 <close@plt+0x36cc>
   14638:	str	ip, [sp, #4]
   1463c:	str	r5, [sp]
   14640:	bl	141e8 <close@plt+0x328c>
   14644:	add	sp, sp, #12
   14648:	pop	{r4, r5, pc}
   1464c:	mov	ip, #0
   14650:	b	14638 <close@plt+0x36dc>
   14654:	push	{r4, r5, lr}
   14658:	sub	sp, sp, #52	; 0x34
   1465c:	ldr	r4, [sp, #64]	; 0x40
   14660:	sub	r4, r4, #4
   14664:	add	r5, sp, #4
   14668:	mov	ip, #0
   1466c:	ldr	lr, [r4, #4]!
   14670:	str	lr, [r5, #4]!
   14674:	cmp	lr, #0
   14678:	beq	14688 <close@plt+0x372c>
   1467c:	add	ip, ip, #1
   14680:	cmp	ip, #10
   14684:	bne	1466c <close@plt+0x3710>
   14688:	str	ip, [sp, #4]
   1468c:	add	ip, sp, #8
   14690:	str	ip, [sp]
   14694:	bl	141e8 <close@plt+0x328c>
   14698:	add	sp, sp, #52	; 0x34
   1469c:	pop	{r4, r5, pc}
   146a0:	push	{r3}		; (str r3, [sp, #-4]!)
   146a4:	push	{lr}		; (str lr, [sp, #-4]!)
   146a8:	sub	sp, sp, #16
   146ac:	add	r3, sp, #24
   146b0:	str	r3, [sp, #12]
   146b4:	str	r3, [sp]
   146b8:	ldr	r3, [sp, #20]
   146bc:	bl	14654 <close@plt+0x36f8>
   146c0:	add	sp, sp, #16
   146c4:	pop	{lr}		; (ldr lr, [sp], #4)
   146c8:	add	sp, sp, #4
   146cc:	bx	lr
   146d0:	push	{r4, lr}
   146d4:	ldr	r3, [pc, #112]	; 1474c <close@plt+0x37f0>
   146d8:	ldr	r1, [r3]
   146dc:	mov	r0, #10
   146e0:	bl	10d7c <fputc_unlocked@plt>
   146e4:	mov	r2, #5
   146e8:	ldr	r1, [pc, #96]	; 14750 <close@plt+0x37f4>
   146ec:	mov	r0, #0
   146f0:	bl	10d88 <dcgettext@plt>
   146f4:	ldr	r2, [pc, #88]	; 14754 <close@plt+0x37f8>
   146f8:	mov	r1, r0
   146fc:	mov	r0, #1
   14700:	bl	10ec0 <__printf_chk@plt>
   14704:	mov	r2, #5
   14708:	ldr	r1, [pc, #72]	; 14758 <close@plt+0x37fc>
   1470c:	mov	r0, #0
   14710:	bl	10d88 <dcgettext@plt>
   14714:	ldr	r3, [pc, #64]	; 1475c <close@plt+0x3800>
   14718:	ldr	r2, [pc, #64]	; 14760 <close@plt+0x3804>
   1471c:	mov	r1, r0
   14720:	mov	r0, #1
   14724:	bl	10ec0 <__printf_chk@plt>
   14728:	mov	r2, #5
   1472c:	ldr	r1, [pc, #48]	; 14764 <close@plt+0x3808>
   14730:	mov	r0, #0
   14734:	bl	10d88 <dcgettext@plt>
   14738:	ldr	r2, [pc, #40]	; 14768 <close@plt+0x380c>
   1473c:	mov	r1, r0
   14740:	mov	r0, #1
   14744:	bl	10ec0 <__printf_chk@plt>
   14748:	pop	{r4, pc}
   1474c:	andeq	r7, r2, ip, ror #2
   14750:	andeq	r6, r1, r8, ror #3
   14754:	strdeq	r6, [r1], -ip
   14758:	andeq	r6, r1, r4, lsl r2
   1475c:	andeq	r5, r1, r0, ror #23
   14760:	andeq	r5, r1, r8, lsl #24
   14764:	andeq	r6, r1, r8, lsr #4
   14768:	andeq	r6, r1, r0, asr r2
   1476c:	push	{r4, lr}
   14770:	bl	10f38 <aligned_alloc@plt>
   14774:	cmp	r0, #0
   14778:	popne	{r4, pc}
   1477c:	bl	14d24 <close@plt+0x3dc8>
   14780:	push	{r4, lr}
   14784:	bl	14db4 <close@plt+0x3e58>
   14788:	cmp	r0, #0
   1478c:	popne	{r4, pc}
   14790:	bl	14d24 <close@plt+0x3dc8>
   14794:	push	{r4, lr}
   14798:	bl	14db4 <close@plt+0x3e58>
   1479c:	cmp	r0, #0
   147a0:	popne	{r4, pc}
   147a4:	bl	14d24 <close@plt+0x3dc8>
   147a8:	push	{r4, lr}
   147ac:	bl	14780 <close@plt+0x3824>
   147b0:	pop	{r4, pc}
   147b4:	push	{r4, r5, r6, lr}
   147b8:	mov	r5, r0
   147bc:	mov	r4, r1
   147c0:	bl	14de4 <close@plt+0x3e88>
   147c4:	cmp	r0, #0
   147c8:	popne	{r4, r5, r6, pc}
   147cc:	adds	r4, r4, #0
   147d0:	movne	r4, #1
   147d4:	cmp	r5, #0
   147d8:	orreq	r4, r4, #1
   147dc:	cmp	r4, #0
   147e0:	popeq	{r4, r5, r6, pc}
   147e4:	bl	14d24 <close@plt+0x3dc8>
   147e8:	push	{r4, lr}
   147ec:	cmp	r1, #0
   147f0:	orreq	r1, r1, #1
   147f4:	bl	14de4 <close@plt+0x3e88>
   147f8:	cmp	r0, #0
   147fc:	popne	{r4, pc}
   14800:	bl	14d24 <close@plt+0x3dc8>
   14804:	push	{r4, r5, r6, lr}
   14808:	mov	r6, r0
   1480c:	mov	r5, r1
   14810:	mov	r4, r2
   14814:	bl	150ec <close@plt+0x4190>
   14818:	cmp	r0, #0
   1481c:	popne	{r4, r5, r6, pc}
   14820:	cmp	r6, #0
   14824:	beq	14834 <close@plt+0x38d8>
   14828:	cmp	r5, #0
   1482c:	cmpne	r4, #0
   14830:	popeq	{r4, r5, r6, pc}
   14834:	bl	14d24 <close@plt+0x3dc8>
   14838:	push	{r4, lr}
   1483c:	bl	14804 <close@plt+0x38a8>
   14840:	pop	{r4, pc}
   14844:	push	{r4, lr}
   14848:	mov	ip, r1
   1484c:	mov	r3, r2
   14850:	cmp	r2, #0
   14854:	cmpne	r1, #0
   14858:	moveq	r3, #1
   1485c:	moveq	ip, r3
   14860:	mov	r2, r3
   14864:	mov	r1, ip
   14868:	bl	150ec <close@plt+0x4190>
   1486c:	cmp	r0, #0
   14870:	popne	{r4, pc}
   14874:	bl	14d24 <close@plt+0x3dc8>
   14878:	push	{r4, lr}
   1487c:	mov	r2, r1
   14880:	mov	r1, r0
   14884:	mov	r0, #0
   14888:	bl	14804 <close@plt+0x38a8>
   1488c:	pop	{r4, pc}
   14890:	push	{r4, lr}
   14894:	mov	r2, r1
   14898:	mov	r1, r0
   1489c:	mov	r0, #0
   148a0:	bl	14844 <close@plt+0x38e8>
   148a4:	pop	{r4, pc}
   148a8:	push	{r4, r5, r6, r7, r8, lr}
   148ac:	mov	r5, r1
   148b0:	mov	r6, r2
   148b4:	ldr	r4, [r1]
   148b8:	subs	r7, r0, #0
   148bc:	beq	148d8 <close@plt+0x397c>
   148c0:	lsr	r2, r4, #1
   148c4:	add	r3, r2, #1
   148c8:	mvn	r3, r3
   148cc:	cmp	r4, r3
   148d0:	bls	148fc <close@plt+0x39a0>
   148d4:	bl	14d24 <close@plt+0x3dc8>
   148d8:	cmp	r4, #0
   148dc:	bne	14904 <close@plt+0x39a8>
   148e0:	mov	r1, r2
   148e4:	mov	r0, #64	; 0x40
   148e8:	bl	15240 <close@plt+0x42e4>
   148ec:	cmp	r0, #0
   148f0:	movne	r4, r0
   148f4:	addeq	r4, r0, #1
   148f8:	b	14904 <close@plt+0x39a8>
   148fc:	add	r4, r4, #1
   14900:	add	r4, r4, r2
   14904:	mov	r2, r6
   14908:	mov	r1, r4
   1490c:	mov	r0, r7
   14910:	bl	14804 <close@plt+0x38a8>
   14914:	str	r4, [r5]
   14918:	pop	{r4, r5, r6, r7, r8, pc}
   1491c:	push	{r4, lr}
   14920:	mov	r2, #1
   14924:	bl	148a8 <close@plt+0x394c>
   14928:	pop	{r4, pc}
   1492c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14930:	sub	sp, sp, #12
   14934:	mov	fp, r0
   14938:	mov	sl, r1
   1493c:	mov	r9, r2
   14940:	mov	r7, r3
   14944:	ldr	r6, [sp, #48]	; 0x30
   14948:	ldr	r5, [r1]
   1494c:	asrs	r4, r5, #1
   14950:	bmi	14aac <close@plt+0x3b50>
   14954:	cmp	r5, #0
   14958:	blt	14ac0 <close@plt+0x3b64>
   1495c:	mvn	r3, #-2147483648	; 0x80000000
   14960:	sub	r3, r3, r4
   14964:	cmp	r5, r3
   14968:	movle	r3, #0
   1496c:	movgt	r3, #1
   14970:	cmp	r3, #0
   14974:	addeq	r4, r4, r5
   14978:	mvnne	r4, #-2147483648	; 0x80000000
   1497c:	mvn	r8, r7
   14980:	lsr	r8, r8, #31
   14984:	cmp	r7, r4
   14988:	movge	r3, #0
   1498c:	andlt	r3, r8, #1
   14990:	cmp	r3, #0
   14994:	movne	r4, r7
   14998:	cmp	r6, #0
   1499c:	blt	14ad4 <close@plt+0x3b78>
   149a0:	cmp	r6, #0
   149a4:	beq	14b80 <close@plt+0x3c24>
   149a8:	cmp	r4, #0
   149ac:	blt	14b30 <close@plt+0x3bd4>
   149b0:	mov	r1, r6
   149b4:	mvn	r0, #-2147483648	; 0x80000000
   149b8:	bl	1544c <close@plt+0x44f0>
   149bc:	cmp	r0, r4
   149c0:	movge	r0, #0
   149c4:	movlt	r0, #1
   149c8:	cmp	r0, #0
   149cc:	mvnne	r3, #-2147483648	; 0x80000000
   149d0:	strne	r3, [sp, #4]
   149d4:	beq	14b68 <close@plt+0x3c0c>
   149d8:	mov	r1, r6
   149dc:	ldr	r0, [sp, #4]
   149e0:	bl	1544c <close@plt+0x44f0>
   149e4:	mov	r4, r0
   149e8:	mov	r1, r6
   149ec:	ldr	r0, [sp, #4]
   149f0:	bl	1566c <close@plt+0x4710>
   149f4:	ldr	r3, [sp, #4]
   149f8:	sub	r1, r3, r1
   149fc:	cmp	fp, #0
   14a00:	moveq	r3, #0
   14a04:	streq	r3, [sl]
   14a08:	sub	r3, r4, r5
   14a0c:	cmp	r3, r9
   14a10:	bge	14a98 <close@plt+0x3b3c>
   14a14:	cmp	r9, #0
   14a18:	blt	14b8c <close@plt+0x3c30>
   14a1c:	cmp	r5, #0
   14a20:	blt	14ba0 <close@plt+0x3c44>
   14a24:	mvn	r3, #-2147483648	; 0x80000000
   14a28:	sub	r3, r3, r9
   14a2c:	cmp	r5, r3
   14a30:	movle	r3, #0
   14a34:	movgt	r3, #1
   14a38:	cmp	r3, #0
   14a3c:	bne	14c48 <close@plt+0x3cec>
   14a40:	add	r5, r5, r9
   14a44:	mov	r4, r5
   14a48:	cmp	r7, r5
   14a4c:	movge	r7, #0
   14a50:	andlt	r7, r8, #1
   14a54:	cmp	r7, #0
   14a58:	bne	14c48 <close@plt+0x3cec>
   14a5c:	cmp	r6, #0
   14a60:	blt	14bb4 <close@plt+0x3c58>
   14a64:	cmp	r6, #0
   14a68:	beq	14a94 <close@plt+0x3b38>
   14a6c:	cmp	r5, #0
   14a70:	blt	14c10 <close@plt+0x3cb4>
   14a74:	mov	r1, r6
   14a78:	mvn	r0, #-2147483648	; 0x80000000
   14a7c:	bl	1544c <close@plt+0x44f0>
   14a80:	cmp	r5, r0
   14a84:	movle	r0, #0
   14a88:	movgt	r0, #1
   14a8c:	cmp	r0, #0
   14a90:	bne	14c48 <close@plt+0x3cec>
   14a94:	mul	r1, r5, r6
   14a98:	mov	r0, fp
   14a9c:	bl	147b4 <close@plt+0x3858>
   14aa0:	str	r4, [sl]
   14aa4:	add	sp, sp, #12
   14aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aac:	rsb	r3, r4, #-2147483648	; 0x80000000
   14ab0:	cmp	r5, r3
   14ab4:	movge	r3, #0
   14ab8:	movlt	r3, #1
   14abc:	b	14970 <close@plt+0x3a14>
   14ac0:	rsb	r3, r5, #-2147483648	; 0x80000000
   14ac4:	cmp	r4, r3
   14ac8:	movge	r3, #0
   14acc:	movlt	r3, #1
   14ad0:	b	14970 <close@plt+0x3a14>
   14ad4:	cmp	r4, #0
   14ad8:	blt	14b00 <close@plt+0x3ba4>
   14adc:	cmn	r6, #1
   14ae0:	beq	14b1c <close@plt+0x3bc0>
   14ae4:	mov	r1, r6
   14ae8:	mov	r0, #-2147483648	; 0x80000000
   14aec:	bl	1544c <close@plt+0x44f0>
   14af0:	cmp	r0, r4
   14af4:	movge	r0, #0
   14af8:	movlt	r0, #1
   14afc:	b	149c8 <close@plt+0x3a6c>
   14b00:	mov	r1, r6
   14b04:	mvn	r0, #-2147483648	; 0x80000000
   14b08:	bl	1544c <close@plt+0x44f0>
   14b0c:	cmp	r0, r4
   14b10:	movle	r0, #0
   14b14:	movgt	r0, #1
   14b18:	b	149c8 <close@plt+0x3a6c>
   14b1c:	add	r0, r4, #-2147483648	; 0x80000000
   14b20:	cmp	r0, #0
   14b24:	movle	r0, #0
   14b28:	movgt	r0, #1
   14b2c:	b	149c8 <close@plt+0x3a6c>
   14b30:	cmn	r4, #1
   14b34:	beq	14b54 <close@plt+0x3bf8>
   14b38:	mov	r1, r4
   14b3c:	mov	r0, #-2147483648	; 0x80000000
   14b40:	bl	1544c <close@plt+0x44f0>
   14b44:	cmp	r6, r0
   14b48:	movle	r0, #0
   14b4c:	movgt	r0, #1
   14b50:	b	149c8 <close@plt+0x3a6c>
   14b54:	add	r0, r6, #-2147483648	; 0x80000000
   14b58:	cmp	r0, #0
   14b5c:	movle	r0, #0
   14b60:	movgt	r0, #1
   14b64:	b	149c8 <close@plt+0x3a6c>
   14b68:	mul	r1, r6, r4
   14b6c:	cmp	r1, #63	; 0x3f
   14b70:	movle	r3, #64	; 0x40
   14b74:	strle	r3, [sp, #4]
   14b78:	bgt	149fc <close@plt+0x3aa0>
   14b7c:	b	149d8 <close@plt+0x3a7c>
   14b80:	mov	r3, #64	; 0x40
   14b84:	str	r3, [sp, #4]
   14b88:	b	149d8 <close@plt+0x3a7c>
   14b8c:	rsb	r3, r9, #-2147483648	; 0x80000000
   14b90:	cmp	r5, r3
   14b94:	movge	r3, #0
   14b98:	movlt	r3, #1
   14b9c:	b	14a38 <close@plt+0x3adc>
   14ba0:	rsb	r3, r5, #-2147483648	; 0x80000000
   14ba4:	cmp	r9, r3
   14ba8:	movge	r3, #0
   14bac:	movlt	r3, #1
   14bb0:	b	14a38 <close@plt+0x3adc>
   14bb4:	cmp	r5, #0
   14bb8:	blt	14be0 <close@plt+0x3c84>
   14bbc:	cmn	r6, #1
   14bc0:	beq	14bfc <close@plt+0x3ca0>
   14bc4:	mov	r1, r6
   14bc8:	mov	r0, #-2147483648	; 0x80000000
   14bcc:	bl	1544c <close@plt+0x44f0>
   14bd0:	cmp	r5, r0
   14bd4:	movle	r0, #0
   14bd8:	movgt	r0, #1
   14bdc:	b	14a8c <close@plt+0x3b30>
   14be0:	mov	r1, r6
   14be4:	mvn	r0, #-2147483648	; 0x80000000
   14be8:	bl	1544c <close@plt+0x44f0>
   14bec:	cmp	r5, r0
   14bf0:	movge	r0, #0
   14bf4:	movlt	r0, #1
   14bf8:	b	14a8c <close@plt+0x3b30>
   14bfc:	add	r0, r5, #-2147483648	; 0x80000000
   14c00:	cmp	r0, #0
   14c04:	movle	r0, #0
   14c08:	movgt	r0, #1
   14c0c:	b	14a8c <close@plt+0x3b30>
   14c10:	cmn	r5, #1
   14c14:	beq	14c34 <close@plt+0x3cd8>
   14c18:	mov	r1, r5
   14c1c:	mov	r0, #-2147483648	; 0x80000000
   14c20:	bl	1544c <close@plt+0x44f0>
   14c24:	cmp	r6, r0
   14c28:	movle	r0, #0
   14c2c:	movgt	r0, #1
   14c30:	b	14a8c <close@plt+0x3b30>
   14c34:	add	r0, r6, #-2147483648	; 0x80000000
   14c38:	cmp	r0, #0
   14c3c:	movle	r0, #0
   14c40:	movgt	r0, #1
   14c44:	b	14a8c <close@plt+0x3b30>
   14c48:	bl	14d24 <close@plt+0x3dc8>
   14c4c:	push	{r4, lr}
   14c50:	bl	14d64 <close@plt+0x3e08>
   14c54:	cmp	r0, #0
   14c58:	popne	{r4, pc}
   14c5c:	bl	14d24 <close@plt+0x3dc8>
   14c60:	push	{r4, lr}
   14c64:	mov	r1, #1
   14c68:	bl	14c4c <close@plt+0x3cf0>
   14c6c:	pop	{r4, pc}
   14c70:	push	{r4, lr}
   14c74:	bl	14d64 <close@plt+0x3e08>
   14c78:	cmp	r0, #0
   14c7c:	popne	{r4, pc}
   14c80:	bl	14d24 <close@plt+0x3dc8>
   14c84:	push	{r4, lr}
   14c88:	mov	r1, #1
   14c8c:	bl	14c70 <close@plt+0x3d14>
   14c90:	pop	{r4, pc}
   14c94:	push	{r4, r5, r6, lr}
   14c98:	mov	r5, r0
   14c9c:	mov	r4, r1
   14ca0:	mov	r0, r1
   14ca4:	bl	14780 <close@plt+0x3824>
   14ca8:	mov	r2, r4
   14cac:	mov	r1, r5
   14cb0:	bl	10d4c <memcpy@plt>
   14cb4:	pop	{r4, r5, r6, pc}
   14cb8:	push	{r4, r5, r6, lr}
   14cbc:	mov	r5, r0
   14cc0:	mov	r4, r1
   14cc4:	mov	r0, r1
   14cc8:	bl	14794 <close@plt+0x3838>
   14ccc:	mov	r2, r4
   14cd0:	mov	r1, r5
   14cd4:	bl	10d4c <memcpy@plt>
   14cd8:	pop	{r4, r5, r6, pc}
   14cdc:	push	{r4, r5, r6, lr}
   14ce0:	mov	r5, r0
   14ce4:	mov	r4, r1
   14ce8:	add	r0, r1, #1
   14cec:	bl	14794 <close@plt+0x3838>
   14cf0:	mov	r2, #0
   14cf4:	strb	r2, [r0, r4]
   14cf8:	mov	r2, r4
   14cfc:	mov	r1, r5
   14d00:	bl	10d4c <memcpy@plt>
   14d04:	pop	{r4, r5, r6, pc}
   14d08:	push	{r4, lr}
   14d0c:	mov	r4, r0
   14d10:	bl	10e84 <strlen@plt>
   14d14:	add	r1, r0, #1
   14d18:	mov	r0, r4
   14d1c:	bl	14c94 <close@plt+0x3d38>
   14d20:	pop	{r4, pc}
   14d24:	push	{r4, lr}
   14d28:	ldr	r3, [pc, #40]	; 14d58 <close@plt+0x3dfc>
   14d2c:	ldr	r4, [r3]
   14d30:	mov	r2, #5
   14d34:	ldr	r1, [pc, #32]	; 14d5c <close@plt+0x3e00>
   14d38:	mov	r0, #0
   14d3c:	bl	10d88 <dcgettext@plt>
   14d40:	mov	r3, r0
   14d44:	ldr	r2, [pc, #20]	; 14d60 <close@plt+0x3e04>
   14d48:	mov	r1, #0
   14d4c:	mov	r0, r4
   14d50:	bl	10e18 <error@plt>
   14d54:	bl	10f50 <abort@plt>
   14d58:	andeq	r7, r2, r4, lsl r1
   14d5c:	andeq	r6, r1, r0, lsr #5
   14d60:	andeq	r5, r1, r4, ror #28
   14d64:	push	{r4, lr}
   14d68:	mov	r2, r0
   14d6c:	mov	r3, r1
   14d70:	cmp	r1, #0
   14d74:	cmpne	r0, #0
   14d78:	moveq	r3, #1
   14d7c:	moveq	r2, r3
   14d80:	umull	r0, r1, r2, r3
   14d84:	cmp	r0, #0
   14d88:	cmpge	r1, #0
   14d8c:	bne	14da0 <close@plt+0x3e44>
   14d90:	mov	r1, r3
   14d94:	mov	r0, r2
   14d98:	bl	10cd4 <calloc@plt>
   14d9c:	pop	{r4, pc}
   14da0:	bl	10e9c <__errno_location@plt>
   14da4:	mov	r3, #12
   14da8:	str	r3, [r0]
   14dac:	mov	r0, #0
   14db0:	pop	{r4, pc}
   14db4:	push	{r4, lr}
   14db8:	cmp	r0, #0
   14dbc:	moveq	r0, #1
   14dc0:	cmp	r0, #0
   14dc4:	blt	14dd0 <close@plt+0x3e74>
   14dc8:	bl	10e30 <malloc@plt>
   14dcc:	pop	{r4, pc}
   14dd0:	bl	10e9c <__errno_location@plt>
   14dd4:	mov	r3, #12
   14dd8:	str	r3, [r0]
   14ddc:	mov	r0, #0
   14de0:	pop	{r4, pc}
   14de4:	push	{r4, lr}
   14de8:	cmp	r0, #0
   14dec:	beq	14e08 <close@plt+0x3eac>
   14df0:	cmp	r1, #0
   14df4:	beq	14e14 <close@plt+0x3eb8>
   14df8:	cmp	r1, #0
   14dfc:	blt	14e20 <close@plt+0x3ec4>
   14e00:	bl	10d94 <realloc@plt>
   14e04:	pop	{r4, pc}
   14e08:	mov	r0, r1
   14e0c:	bl	14db4 <close@plt+0x3e58>
   14e10:	pop	{r4, pc}
   14e14:	bl	124dc <close@plt+0x1580>
   14e18:	mov	r0, #0
   14e1c:	pop	{r4, pc}
   14e20:	bl	10e9c <__errno_location@plt>
   14e24:	mov	r3, #12
   14e28:	str	r3, [r0]
   14e2c:	mov	r0, #0
   14e30:	pop	{r4, pc}
   14e34:	push	{r4, r5, r6, lr}
   14e38:	mov	r5, r0
   14e3c:	bl	10e00 <__fpending@plt>
   14e40:	mov	r6, r0
   14e44:	ldr	r4, [r5]
   14e48:	and	r4, r4, #32
   14e4c:	mov	r0, r5
   14e50:	bl	14eac <close@plt+0x3f50>
   14e54:	cmp	r4, #0
   14e58:	bne	14e80 <close@plt+0x3f24>
   14e5c:	cmp	r0, #0
   14e60:	popeq	{r4, r5, r6, pc}
   14e64:	cmp	r6, #0
   14e68:	bne	14e9c <close@plt+0x3f40>
   14e6c:	bl	10e9c <__errno_location@plt>
   14e70:	ldr	r0, [r0]
   14e74:	subs	r0, r0, #9
   14e78:	mvnne	r0, #0
   14e7c:	pop	{r4, r5, r6, pc}
   14e80:	cmp	r0, #0
   14e84:	bne	14ea4 <close@plt+0x3f48>
   14e88:	bl	10e9c <__errno_location@plt>
   14e8c:	mov	r3, #0
   14e90:	str	r3, [r0]
   14e94:	mvn	r0, #0
   14e98:	pop	{r4, r5, r6, pc}
   14e9c:	mvn	r0, #0
   14ea0:	pop	{r4, r5, r6, pc}
   14ea4:	mvn	r0, #0
   14ea8:	pop	{r4, r5, r6, pc}
   14eac:	push	{r4, r5, r6, lr}
   14eb0:	sub	sp, sp, #8
   14eb4:	mov	r4, r0
   14eb8:	bl	10ed8 <fileno@plt>
   14ebc:	cmp	r0, #0
   14ec0:	blt	14f38 <close@plt+0x3fdc>
   14ec4:	mov	r0, r4
   14ec8:	bl	10e48 <__freading@plt>
   14ecc:	cmp	r0, #0
   14ed0:	beq	14f04 <close@plt+0x3fa8>
   14ed4:	mov	r0, r4
   14ed8:	bl	10ed8 <fileno@plt>
   14edc:	mov	r3, #1
   14ee0:	str	r3, [sp]
   14ee4:	mov	r2, #0
   14ee8:	mov	r3, #0
   14eec:	bl	10de8 <lseek64@plt>
   14ef0:	mvn	r2, #0
   14ef4:	mvn	r3, #0
   14ef8:	cmp	r1, r3
   14efc:	cmpeq	r0, r2
   14f00:	beq	14f44 <close@plt+0x3fe8>
   14f04:	mov	r0, r4
   14f08:	bl	14f54 <close@plt+0x3ff8>
   14f0c:	cmp	r0, #0
   14f10:	beq	14f44 <close@plt+0x3fe8>
   14f14:	bl	10e9c <__errno_location@plt>
   14f18:	mov	r5, r0
   14f1c:	ldr	r6, [r0]
   14f20:	mov	r0, r4
   14f24:	bl	10ef0 <fclose@plt>
   14f28:	cmp	r6, #0
   14f2c:	strne	r6, [r5]
   14f30:	mvnne	r0, #0
   14f34:	b	14f4c <close@plt+0x3ff0>
   14f38:	mov	r0, r4
   14f3c:	bl	10ef0 <fclose@plt>
   14f40:	b	14f4c <close@plt+0x3ff0>
   14f44:	mov	r0, r4
   14f48:	bl	10ef0 <fclose@plt>
   14f4c:	add	sp, sp, #8
   14f50:	pop	{r4, r5, r6, pc}
   14f54:	push	{r4, lr}
   14f58:	sub	sp, sp, #8
   14f5c:	subs	r4, r0, #0
   14f60:	beq	14f74 <close@plt+0x4018>
   14f64:	mov	r0, r4
   14f68:	bl	10e48 <__freading@plt>
   14f6c:	cmp	r0, #0
   14f70:	bne	14f84 <close@plt+0x4028>
   14f74:	mov	r0, r4
   14f78:	bl	10d1c <fflush@plt>
   14f7c:	add	sp, sp, #8
   14f80:	pop	{r4, pc}
   14f84:	ldr	r3, [r4]
   14f88:	tst	r3, #256	; 0x100
   14f8c:	bne	14f9c <close@plt+0x4040>
   14f90:	mov	r0, r4
   14f94:	bl	10d1c <fflush@plt>
   14f98:	b	14f7c <close@plt+0x4020>
   14f9c:	mov	r3, #1
   14fa0:	str	r3, [sp]
   14fa4:	mov	r2, #0
   14fa8:	mov	r3, #0
   14fac:	mov	r0, r4
   14fb0:	bl	14fb8 <close@plt+0x405c>
   14fb4:	b	14f90 <close@plt+0x4034>
   14fb8:	push	{r4, r5, r6, r7, lr}
   14fbc:	sub	sp, sp, #12
   14fc0:	mov	r4, r0
   14fc4:	mov	r6, r2
   14fc8:	mov	r7, r3
   14fcc:	ldr	r5, [sp, #32]
   14fd0:	ldr	r2, [r0, #8]
   14fd4:	ldr	r3, [r0, #4]
   14fd8:	cmp	r2, r3
   14fdc:	beq	14ffc <close@plt+0x40a0>
   14fe0:	str	r5, [sp]
   14fe4:	mov	r2, r6
   14fe8:	mov	r3, r7
   14fec:	mov	r0, r4
   14ff0:	bl	10efc <fseeko64@plt>
   14ff4:	add	sp, sp, #12
   14ff8:	pop	{r4, r5, r6, r7, pc}
   14ffc:	ldr	r2, [r0, #20]
   15000:	ldr	r3, [r0, #16]
   15004:	cmp	r2, r3
   15008:	bne	14fe0 <close@plt+0x4084>
   1500c:	ldr	r3, [r0, #36]	; 0x24
   15010:	cmp	r3, #0
   15014:	bne	14fe0 <close@plt+0x4084>
   15018:	bl	10ed8 <fileno@plt>
   1501c:	str	r5, [sp]
   15020:	mov	r2, r6
   15024:	mov	r3, r7
   15028:	bl	10de8 <lseek64@plt>
   1502c:	mvn	r2, #0
   15030:	mvn	r3, #0
   15034:	cmp	r1, r3
   15038:	cmpeq	r0, r2
   1503c:	beq	15058 <close@plt+0x40fc>
   15040:	ldr	r3, [r4]
   15044:	bic	r3, r3, #16
   15048:	str	r3, [r4]
   1504c:	strd	r0, [r4, #80]	; 0x50
   15050:	mov	r0, #0
   15054:	b	14ff4 <close@plt+0x4098>
   15058:	mvn	r0, #0
   1505c:	b	14ff4 <close@plt+0x4098>
   15060:	push	{r4, lr}
   15064:	mov	r0, #14
   15068:	bl	10f20 <nl_langinfo@plt>
   1506c:	cmp	r0, #0
   15070:	beq	15088 <close@plt+0x412c>
   15074:	ldrb	r2, [r0]
   15078:	ldr	r3, [pc, #16]	; 15090 <close@plt+0x4134>
   1507c:	cmp	r2, #0
   15080:	moveq	r0, r3
   15084:	pop	{r4, pc}
   15088:	ldr	r0, [pc]	; 15090 <close@plt+0x4134>
   1508c:	pop	{r4, pc}
   15090:			; <UNDEFINED> instruction: 0x000162b4
   15094:	push	{r4, r5, r6, r7, lr}
   15098:	sub	sp, sp, #12
   1509c:	mov	r7, r1
   150a0:	mov	r5, r2
   150a4:	subs	r6, r0, #0
   150a8:	addeq	r6, sp, #4
   150ac:	mov	r0, r6
   150b0:	bl	10e0c <mbrtowc@plt>
   150b4:	mov	r4, r0
   150b8:	cmp	r5, #0
   150bc:	cmnne	r0, #3
   150c0:	bhi	150d0 <close@plt+0x4174>
   150c4:	mov	r0, r4
   150c8:	add	sp, sp, #12
   150cc:	pop	{r4, r5, r6, r7, pc}
   150d0:	mov	r0, #0
   150d4:	bl	15138 <close@plt+0x41dc>
   150d8:	cmp	r0, #0
   150dc:	ldrbeq	r3, [r7]
   150e0:	streq	r3, [r6]
   150e4:	moveq	r4, #1
   150e8:	b	150c4 <close@plt+0x4168>
   150ec:	push	{r4, r5, r6, lr}
   150f0:	mov	r6, r0
   150f4:	mov	r5, r1
   150f8:	subs	r4, r2, #0
   150fc:	beq	15128 <close@plt+0x41cc>
   15100:	mov	r1, r4
   15104:	mvn	r0, #0
   15108:	bl	15240 <close@plt+0x42e4>
   1510c:	cmp	r0, r5
   15110:	bcs	15128 <close@plt+0x41cc>
   15114:	bl	10e9c <__errno_location@plt>
   15118:	mov	r3, #12
   1511c:	str	r3, [r0]
   15120:	mov	r0, #0
   15124:	pop	{r4, r5, r6, pc}
   15128:	mul	r1, r5, r4
   1512c:	mov	r0, r6
   15130:	bl	14de4 <close@plt+0x3e88>
   15134:	pop	{r4, r5, r6, pc}
   15138:	push	{lr}		; (str lr, [sp, #-4]!)
   1513c:	sub	sp, sp, #268	; 0x10c
   15140:	ldr	r2, [pc, #68]	; 1518c <close@plt+0x4230>
   15144:	add	r1, sp, #4
   15148:	bl	15198 <close@plt+0x423c>
   1514c:	cmp	r0, #0
   15150:	movne	r0, #0
   15154:	bne	15184 <close@plt+0x4228>
   15158:	ldr	r1, [pc, #48]	; 15190 <close@plt+0x4234>
   1515c:	add	r0, sp, #4
   15160:	bl	10cf8 <strcmp@plt>
   15164:	cmp	r0, #0
   15168:	moveq	r0, #0
   1516c:	beq	15184 <close@plt+0x4228>
   15170:	ldr	r1, [pc, #28]	; 15194 <close@plt+0x4238>
   15174:	add	r0, sp, #4
   15178:	bl	10cf8 <strcmp@plt>
   1517c:	adds	r0, r0, #0
   15180:	movne	r0, #1
   15184:	add	sp, sp, #268	; 0x10c
   15188:	pop	{pc}		; (ldr pc, [sp], #4)
   1518c:	andeq	r0, r0, r1, lsl #2
   15190:			; <UNDEFINED> instruction: 0x000162bc
   15194:	andeq	r6, r1, r0, asr #5
   15198:	push	{r4, r5, r6, lr}
   1519c:	mov	r6, r1
   151a0:	mov	r4, r2
   151a4:	mov	r1, #0
   151a8:	bl	10f08 <setlocale@plt>
   151ac:	subs	r5, r0, #0
   151b0:	beq	151d4 <close@plt+0x4278>
   151b4:	mov	r0, r5
   151b8:	bl	10e84 <strlen@plt>
   151bc:	cmp	r4, r0
   151c0:	bhi	151ec <close@plt+0x4290>
   151c4:	cmp	r4, #0
   151c8:	bne	15204 <close@plt+0x42a8>
   151cc:	mov	r0, #34	; 0x22
   151d0:	pop	{r4, r5, r6, pc}
   151d4:	cmp	r4, #0
   151d8:	beq	15228 <close@plt+0x42cc>
   151dc:	mov	r3, #0
   151e0:	strb	r3, [r6]
   151e4:	mov	r0, #22
   151e8:	pop	{r4, r5, r6, pc}
   151ec:	add	r2, r0, #1
   151f0:	mov	r1, r5
   151f4:	mov	r0, r6
   151f8:	bl	10d4c <memcpy@plt>
   151fc:	mov	r0, #0
   15200:	pop	{r4, r5, r6, pc}
   15204:	sub	r4, r4, #1
   15208:	mov	r2, r4
   1520c:	mov	r1, r5
   15210:	mov	r0, r6
   15214:	bl	10d4c <memcpy@plt>
   15218:	mov	r3, #0
   1521c:	strb	r3, [r6, r4]
   15220:	mov	r0, #34	; 0x22
   15224:	pop	{r4, r5, r6, pc}
   15228:	mov	r0, #22
   1522c:	pop	{r4, r5, r6, pc}
   15230:	push	{r4, lr}
   15234:	mov	r1, #0
   15238:	bl	10f08 <setlocale@plt>
   1523c:	pop	{r4, pc}
   15240:	subs	r2, r1, #1
   15244:	bxeq	lr
   15248:	bcc	15420 <close@plt+0x44c4>
   1524c:	cmp	r0, r1
   15250:	bls	15404 <close@plt+0x44a8>
   15254:	tst	r1, r2
   15258:	beq	15410 <close@plt+0x44b4>
   1525c:	clz	r3, r0
   15260:	clz	r2, r1
   15264:	sub	r3, r2, r3
   15268:	rsbs	r3, r3, #31
   1526c:	addne	r3, r3, r3, lsl #1
   15270:	mov	r2, #0
   15274:	addne	pc, pc, r3, lsl #2
   15278:	nop			; (mov r0, r0)
   1527c:	cmp	r0, r1, lsl #31
   15280:	adc	r2, r2, r2
   15284:	subcs	r0, r0, r1, lsl #31
   15288:	cmp	r0, r1, lsl #30
   1528c:	adc	r2, r2, r2
   15290:	subcs	r0, r0, r1, lsl #30
   15294:	cmp	r0, r1, lsl #29
   15298:	adc	r2, r2, r2
   1529c:	subcs	r0, r0, r1, lsl #29
   152a0:	cmp	r0, r1, lsl #28
   152a4:	adc	r2, r2, r2
   152a8:	subcs	r0, r0, r1, lsl #28
   152ac:	cmp	r0, r1, lsl #27
   152b0:	adc	r2, r2, r2
   152b4:	subcs	r0, r0, r1, lsl #27
   152b8:	cmp	r0, r1, lsl #26
   152bc:	adc	r2, r2, r2
   152c0:	subcs	r0, r0, r1, lsl #26
   152c4:	cmp	r0, r1, lsl #25
   152c8:	adc	r2, r2, r2
   152cc:	subcs	r0, r0, r1, lsl #25
   152d0:	cmp	r0, r1, lsl #24
   152d4:	adc	r2, r2, r2
   152d8:	subcs	r0, r0, r1, lsl #24
   152dc:	cmp	r0, r1, lsl #23
   152e0:	adc	r2, r2, r2
   152e4:	subcs	r0, r0, r1, lsl #23
   152e8:	cmp	r0, r1, lsl #22
   152ec:	adc	r2, r2, r2
   152f0:	subcs	r0, r0, r1, lsl #22
   152f4:	cmp	r0, r1, lsl #21
   152f8:	adc	r2, r2, r2
   152fc:	subcs	r0, r0, r1, lsl #21
   15300:	cmp	r0, r1, lsl #20
   15304:	adc	r2, r2, r2
   15308:	subcs	r0, r0, r1, lsl #20
   1530c:	cmp	r0, r1, lsl #19
   15310:	adc	r2, r2, r2
   15314:	subcs	r0, r0, r1, lsl #19
   15318:	cmp	r0, r1, lsl #18
   1531c:	adc	r2, r2, r2
   15320:	subcs	r0, r0, r1, lsl #18
   15324:	cmp	r0, r1, lsl #17
   15328:	adc	r2, r2, r2
   1532c:	subcs	r0, r0, r1, lsl #17
   15330:	cmp	r0, r1, lsl #16
   15334:	adc	r2, r2, r2
   15338:	subcs	r0, r0, r1, lsl #16
   1533c:	cmp	r0, r1, lsl #15
   15340:	adc	r2, r2, r2
   15344:	subcs	r0, r0, r1, lsl #15
   15348:	cmp	r0, r1, lsl #14
   1534c:	adc	r2, r2, r2
   15350:	subcs	r0, r0, r1, lsl #14
   15354:	cmp	r0, r1, lsl #13
   15358:	adc	r2, r2, r2
   1535c:	subcs	r0, r0, r1, lsl #13
   15360:	cmp	r0, r1, lsl #12
   15364:	adc	r2, r2, r2
   15368:	subcs	r0, r0, r1, lsl #12
   1536c:	cmp	r0, r1, lsl #11
   15370:	adc	r2, r2, r2
   15374:	subcs	r0, r0, r1, lsl #11
   15378:	cmp	r0, r1, lsl #10
   1537c:	adc	r2, r2, r2
   15380:	subcs	r0, r0, r1, lsl #10
   15384:	cmp	r0, r1, lsl #9
   15388:	adc	r2, r2, r2
   1538c:	subcs	r0, r0, r1, lsl #9
   15390:	cmp	r0, r1, lsl #8
   15394:	adc	r2, r2, r2
   15398:	subcs	r0, r0, r1, lsl #8
   1539c:	cmp	r0, r1, lsl #7
   153a0:	adc	r2, r2, r2
   153a4:	subcs	r0, r0, r1, lsl #7
   153a8:	cmp	r0, r1, lsl #6
   153ac:	adc	r2, r2, r2
   153b0:	subcs	r0, r0, r1, lsl #6
   153b4:	cmp	r0, r1, lsl #5
   153b8:	adc	r2, r2, r2
   153bc:	subcs	r0, r0, r1, lsl #5
   153c0:	cmp	r0, r1, lsl #4
   153c4:	adc	r2, r2, r2
   153c8:	subcs	r0, r0, r1, lsl #4
   153cc:	cmp	r0, r1, lsl #3
   153d0:	adc	r2, r2, r2
   153d4:	subcs	r0, r0, r1, lsl #3
   153d8:	cmp	r0, r1, lsl #2
   153dc:	adc	r2, r2, r2
   153e0:	subcs	r0, r0, r1, lsl #2
   153e4:	cmp	r0, r1, lsl #1
   153e8:	adc	r2, r2, r2
   153ec:	subcs	r0, r0, r1, lsl #1
   153f0:	cmp	r0, r1
   153f4:	adc	r2, r2, r2
   153f8:	subcs	r0, r0, r1
   153fc:	mov	r0, r2
   15400:	bx	lr
   15404:	moveq	r0, #1
   15408:	movne	r0, #0
   1540c:	bx	lr
   15410:	clz	r2, r1
   15414:	rsb	r2, r2, #31
   15418:	lsr	r0, r0, r2
   1541c:	bx	lr
   15420:	cmp	r0, #0
   15424:	mvnne	r0, #0
   15428:	b	1568c <close@plt+0x4730>
   1542c:	cmp	r1, #0
   15430:	beq	15420 <close@plt+0x44c4>
   15434:	push	{r0, r1, lr}
   15438:	bl	15240 <close@plt+0x42e4>
   1543c:	pop	{r1, r2, lr}
   15440:	mul	r3, r2, r0
   15444:	sub	r1, r1, r3
   15448:	bx	lr
   1544c:	cmp	r1, #0
   15450:	beq	1565c <close@plt+0x4700>
   15454:	eor	ip, r0, r1
   15458:	rsbmi	r1, r1, #0
   1545c:	subs	r2, r1, #1
   15460:	beq	15628 <close@plt+0x46cc>
   15464:	movs	r3, r0
   15468:	rsbmi	r3, r0, #0
   1546c:	cmp	r3, r1
   15470:	bls	15634 <close@plt+0x46d8>
   15474:	tst	r1, r2
   15478:	beq	15644 <close@plt+0x46e8>
   1547c:	clz	r2, r3
   15480:	clz	r0, r1
   15484:	sub	r2, r0, r2
   15488:	rsbs	r2, r2, #31
   1548c:	addne	r2, r2, r2, lsl #1
   15490:	mov	r0, #0
   15494:	addne	pc, pc, r2, lsl #2
   15498:	nop			; (mov r0, r0)
   1549c:	cmp	r3, r1, lsl #31
   154a0:	adc	r0, r0, r0
   154a4:	subcs	r3, r3, r1, lsl #31
   154a8:	cmp	r3, r1, lsl #30
   154ac:	adc	r0, r0, r0
   154b0:	subcs	r3, r3, r1, lsl #30
   154b4:	cmp	r3, r1, lsl #29
   154b8:	adc	r0, r0, r0
   154bc:	subcs	r3, r3, r1, lsl #29
   154c0:	cmp	r3, r1, lsl #28
   154c4:	adc	r0, r0, r0
   154c8:	subcs	r3, r3, r1, lsl #28
   154cc:	cmp	r3, r1, lsl #27
   154d0:	adc	r0, r0, r0
   154d4:	subcs	r3, r3, r1, lsl #27
   154d8:	cmp	r3, r1, lsl #26
   154dc:	adc	r0, r0, r0
   154e0:	subcs	r3, r3, r1, lsl #26
   154e4:	cmp	r3, r1, lsl #25
   154e8:	adc	r0, r0, r0
   154ec:	subcs	r3, r3, r1, lsl #25
   154f0:	cmp	r3, r1, lsl #24
   154f4:	adc	r0, r0, r0
   154f8:	subcs	r3, r3, r1, lsl #24
   154fc:	cmp	r3, r1, lsl #23
   15500:	adc	r0, r0, r0
   15504:	subcs	r3, r3, r1, lsl #23
   15508:	cmp	r3, r1, lsl #22
   1550c:	adc	r0, r0, r0
   15510:	subcs	r3, r3, r1, lsl #22
   15514:	cmp	r3, r1, lsl #21
   15518:	adc	r0, r0, r0
   1551c:	subcs	r3, r3, r1, lsl #21
   15520:	cmp	r3, r1, lsl #20
   15524:	adc	r0, r0, r0
   15528:	subcs	r3, r3, r1, lsl #20
   1552c:	cmp	r3, r1, lsl #19
   15530:	adc	r0, r0, r0
   15534:	subcs	r3, r3, r1, lsl #19
   15538:	cmp	r3, r1, lsl #18
   1553c:	adc	r0, r0, r0
   15540:	subcs	r3, r3, r1, lsl #18
   15544:	cmp	r3, r1, lsl #17
   15548:	adc	r0, r0, r0
   1554c:	subcs	r3, r3, r1, lsl #17
   15550:	cmp	r3, r1, lsl #16
   15554:	adc	r0, r0, r0
   15558:	subcs	r3, r3, r1, lsl #16
   1555c:	cmp	r3, r1, lsl #15
   15560:	adc	r0, r0, r0
   15564:	subcs	r3, r3, r1, lsl #15
   15568:	cmp	r3, r1, lsl #14
   1556c:	adc	r0, r0, r0
   15570:	subcs	r3, r3, r1, lsl #14
   15574:	cmp	r3, r1, lsl #13
   15578:	adc	r0, r0, r0
   1557c:	subcs	r3, r3, r1, lsl #13
   15580:	cmp	r3, r1, lsl #12
   15584:	adc	r0, r0, r0
   15588:	subcs	r3, r3, r1, lsl #12
   1558c:	cmp	r3, r1, lsl #11
   15590:	adc	r0, r0, r0
   15594:	subcs	r3, r3, r1, lsl #11
   15598:	cmp	r3, r1, lsl #10
   1559c:	adc	r0, r0, r0
   155a0:	subcs	r3, r3, r1, lsl #10
   155a4:	cmp	r3, r1, lsl #9
   155a8:	adc	r0, r0, r0
   155ac:	subcs	r3, r3, r1, lsl #9
   155b0:	cmp	r3, r1, lsl #8
   155b4:	adc	r0, r0, r0
   155b8:	subcs	r3, r3, r1, lsl #8
   155bc:	cmp	r3, r1, lsl #7
   155c0:	adc	r0, r0, r0
   155c4:	subcs	r3, r3, r1, lsl #7
   155c8:	cmp	r3, r1, lsl #6
   155cc:	adc	r0, r0, r0
   155d0:	subcs	r3, r3, r1, lsl #6
   155d4:	cmp	r3, r1, lsl #5
   155d8:	adc	r0, r0, r0
   155dc:	subcs	r3, r3, r1, lsl #5
   155e0:	cmp	r3, r1, lsl #4
   155e4:	adc	r0, r0, r0
   155e8:	subcs	r3, r3, r1, lsl #4
   155ec:	cmp	r3, r1, lsl #3
   155f0:	adc	r0, r0, r0
   155f4:	subcs	r3, r3, r1, lsl #3
   155f8:	cmp	r3, r1, lsl #2
   155fc:	adc	r0, r0, r0
   15600:	subcs	r3, r3, r1, lsl #2
   15604:	cmp	r3, r1, lsl #1
   15608:	adc	r0, r0, r0
   1560c:	subcs	r3, r3, r1, lsl #1
   15610:	cmp	r3, r1
   15614:	adc	r0, r0, r0
   15618:	subcs	r3, r3, r1
   1561c:	cmp	ip, #0
   15620:	rsbmi	r0, r0, #0
   15624:	bx	lr
   15628:	teq	ip, r0
   1562c:	rsbmi	r0, r0, #0
   15630:	bx	lr
   15634:	movcc	r0, #0
   15638:	asreq	r0, ip, #31
   1563c:	orreq	r0, r0, #1
   15640:	bx	lr
   15644:	clz	r2, r1
   15648:	rsb	r2, r2, #31
   1564c:	cmp	ip, #0
   15650:	lsr	r0, r3, r2
   15654:	rsbmi	r0, r0, #0
   15658:	bx	lr
   1565c:	cmp	r0, #0
   15660:	mvngt	r0, #-2147483648	; 0x80000000
   15664:	movlt	r0, #-2147483648	; 0x80000000
   15668:	b	1568c <close@plt+0x4730>
   1566c:	cmp	r1, #0
   15670:	beq	1565c <close@plt+0x4700>
   15674:	push	{r0, r1, lr}
   15678:	bl	15454 <close@plt+0x44f8>
   1567c:	pop	{r1, r2, lr}
   15680:	mul	r3, r2, r0
   15684:	sub	r1, r1, r3
   15688:	bx	lr
   1568c:	push	{r1, lr}
   15690:	mov	r0, #8
   15694:	bl	10cec <raise@plt>
   15698:	pop	{r1, pc}
   1569c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156a0:	mov	r7, r0
   156a4:	ldr	r6, [pc, #72]	; 156f4 <close@plt+0x4798>
   156a8:	ldr	r5, [pc, #72]	; 156f8 <close@plt+0x479c>
   156ac:	add	r6, pc, r6
   156b0:	add	r5, pc, r5
   156b4:	sub	r6, r6, r5
   156b8:	mov	r8, r1
   156bc:	mov	r9, r2
   156c0:	bl	10cb4 <calloc@plt-0x20>
   156c4:	asrs	r6, r6, #2
   156c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   156cc:	mov	r4, #0
   156d0:	add	r4, r4, #1
   156d4:	ldr	r3, [r5], #4
   156d8:	mov	r2, r9
   156dc:	mov	r1, r8
   156e0:	mov	r0, r7
   156e4:	blx	r3
   156e8:	cmp	r6, r4
   156ec:	bne	156d0 <close@plt+0x4774>
   156f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156f4:	andeq	r1, r1, ip, asr r8
   156f8:	andeq	r1, r1, r4, asr r8
   156fc:	bx	lr
   15700:	ldr	r3, [pc, #12]	; 15714 <close@plt+0x47b8>
   15704:	mov	r1, #0
   15708:	add	r3, pc, r3
   1570c:	ldr	r2, [r3]
   15710:	b	10ea8 <__cxa_atexit@plt>
   15714:	andeq	r1, r1, r0, ror #19

Disassembly of section .fini:

00015718 <.fini>:
   15718:	push	{r3, lr}
   1571c:	pop	{r3, pc}
