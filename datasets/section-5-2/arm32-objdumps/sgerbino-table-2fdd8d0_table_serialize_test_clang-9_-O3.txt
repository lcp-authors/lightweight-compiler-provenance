
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r5, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #86016	; 0x15000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #86016	; 0x15000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #86016	; 0x15000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #86016	; 0x15000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #86016	; 0x15000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #86016	; 0x15000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #86016	; 0x15000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #86016	; 0x15000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #86016	; 0x15000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #86016	; 0x15000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #86016	; 0x15000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #86016	; 0x15000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #86016	; 0x15000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #86016	; 0x15000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #86016	; 0x15000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #86016	; 0x15000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r6, r1, r0, asr #11
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	andeq	r6, r1, r0, ror #10
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r4, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r7, r2, r8, asr r0
   120c4:	andeq	r7, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r7, r2, r8, asr r0
   120fc:	andeq	r7, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r7, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	sub	r5, fp, #100	; 0x64
   1215c:	mov	r4, r0
   12160:	mov	r0, r5
   12164:	bl	128d8 <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	mov	r2, #0
   12170:	movt	r0, #20971	; 0x51eb
   12174:	smmul	r0, r4, r0
   12178:	asr	r1, r0, #5
   1217c:	add	r0, r1, r0, lsr #31
   12180:	mov	r1, #100	; 0x64
   12184:	mls	r0, r0, r1, r4
   12188:	movw	r1, #26064	; 0x65d0
   1218c:	movt	r1, #1
   12190:	add	r8, r0, #100	; 0x64
   12194:	mov	r0, #0
   12198:	str	r0, [sp]
   1219c:	mov	r0, r5
   121a0:	bl	1349c <table_add_column@@Base>
   121a4:	movw	r1, #26067	; 0x65d3
   121a8:	mov	sl, r0
   121ac:	mov	r0, r5
   121b0:	mov	r2, #21
   121b4:	movt	r1, #1
   121b8:	bl	1349c <table_add_column@@Base>
   121bc:	cmp	r8, #1
   121c0:	blt	1222c <main@@Base+0xfc>
   121c4:	movw	r9, #26191	; 0x664f
   121c8:	mov	r5, r0
   121cc:	mov	r6, #0
   121d0:	add	r7, sp, #8
   121d4:	sub	r4, fp, #100	; 0x64
   121d8:	movt	r9, #1
   121dc:	mov	r0, r7
   121e0:	mov	r1, #255	; 0xff
   121e4:	mov	r2, r9
   121e8:	mov	r3, r6
   121ec:	bl	12004 <snprintf@plt>
   121f0:	mov	r0, r4
   121f4:	bl	141e4 <table_add_row@@Base>
   121f8:	mov	r0, r4
   121fc:	mov	r1, r6
   12200:	mov	r2, sl
   12204:	mov	r3, r6
   12208:	bl	14790 <table_set_int@@Base>
   1220c:	mov	r0, r4
   12210:	mov	r1, r6
   12214:	mov	r2, r5
   12218:	mov	r3, r7
   1221c:	bl	1514c <table_set_string@@Base>
   12220:	add	r6, r6, #1
   12224:	cmp	r8, r6
   12228:	bne	121dc <main@@Base+0xac>
   1222c:	movw	r6, #34464	; 0x86a0
   12230:	sub	r4, fp, #100	; 0x64
   12234:	add	r5, sp, #8
   12238:	movt	r6, #1
   1223c:	mov	r0, r4
   12240:	mov	r1, r5
   12244:	mov	r2, r6
   12248:	bl	15330 <table_serialize@@Base>
   1224c:	mov	r0, r5
   12250:	mov	r1, r6
   12254:	bl	155f4 <table_deserialize@@Base>
   12258:	mov	r8, r0
   1225c:	mov	r0, r4
   12260:	bl	141dc <table_get_row_length@@Base>
   12264:	mov	r5, r0
   12268:	mov	r0, r8
   1226c:	bl	141dc <table_get_row_length@@Base>
   12270:	mov	r4, r0
   12274:	cmp	r0, r5
   12278:	str	r5, [sp, #4]
   1227c:	beq	1229c <main@@Base+0x16c>
   12280:	ldr	r1, [sp, #4]
   12284:	movw	r0, #26073	; 0x65d9
   12288:	mov	r2, r4
   1228c:	movt	r0, #1
   12290:	bl	11f8c <printf@plt>
   12294:	mvn	r0, #0
   12298:	str	r0, [sp]
   1229c:	sub	r0, fp, #100	; 0x64
   122a0:	bl	13404 <table_get_column_length@@Base>
   122a4:	mov	r7, r0
   122a8:	mov	r0, r8
   122ac:	bl	13404 <table_get_column_length@@Base>
   122b0:	cmp	r0, r7
   122b4:	bne	12848 <main@@Base+0x718>
   122b8:	ldr	r0, [sp, #4]
   122bc:	cmp	r4, r0
   122c0:	bne	12864 <main@@Base+0x734>
   122c4:	cmp	r4, #1
   122c8:	blt	12864 <main@@Base+0x734>
   122cc:	mov	r4, #0
   122d0:	sub	r9, fp, #100	; 0x64
   122d4:	cmp	r7, #1
   122d8:	bge	12314 <main@@Base+0x1e4>
   122dc:	b	122fc <main@@Base+0x1cc>
   122e0:	movw	r0, #26194	; 0x6652
   122e4:	mov	r1, r4
   122e8:	mov	r2, sl
   122ec:	movt	r0, #1
   122f0:	bl	11f8c <printf@plt>
   122f4:	mvn	r0, #0
   122f8:	str	r0, [sp]
   122fc:	ldr	r0, [sp, #4]
   12300:	add	r4, r4, #1
   12304:	cmp	r4, r0
   12308:	beq	12864 <main@@Base+0x734>
   1230c:	cmp	r7, #1
   12310:	blt	122fc <main@@Base+0x1cc>
   12314:	mov	sl, #0
   12318:	b	1234c <main@@Base+0x21c>
   1231c:	mov	r0, r9
   12320:	mov	r1, r4
   12324:	mov	r2, sl
   12328:	bl	13f48 <table_get_uint@@Base>
   1232c:	mov	r5, r0
   12330:	mov	r0, r8
   12334:	mov	r1, r4
   12338:	mov	r2, sl
   1233c:	bl	13f48 <table_get_uint@@Base>
   12340:	cmp	r5, r0
   12344:	beq	123fc <main@@Base+0x2cc>
   12348:	b	122e0 <main@@Base+0x1b0>
   1234c:	mov	r0, r9
   12350:	mov	r1, sl
   12354:	bl	13488 <table_get_column_data_type@@Base>
   12358:	cmp	r0, #23
   1235c:	bhi	123fc <main@@Base+0x2cc>
   12360:	add	r1, pc, #0
   12364:	ldr	pc, [r1, r0, lsl #2]
   12368:	andeq	r2, r1, r8, asr #7
   1236c:	andeq	r2, r1, ip, lsl r3
   12370:	andeq	r2, r1, ip, lsl #8
   12374:	andeq	r2, r1, ip, lsr r4
   12378:	andeq	r2, r1, ip, ror #8
   1237c:	muleq	r1, ip, r4
   12380:	andeq	r2, r1, ip, asr #9
   12384:	strdeq	r2, [r1], -ip
   12388:	andeq	r2, r1, ip, lsr #10
   1238c:	andeq	r2, r1, r8, asr r5
   12390:	andeq	r2, r1, r4, lsl #11
   12394:			; <UNDEFINED> instruction: 0x000125b4
   12398:	andeq	r2, r1, r4, ror #11
   1239c:	andeq	r2, r1, r4, lsl r6
   123a0:	andeq	r2, r1, r4, asr #12
   123a4:	andeq	r2, r1, r0, ror r6
   123a8:	andeq	r2, r1, ip, lsr #13
   123ac:	andeq	r2, r1, r0, ror #13
   123b0:	andeq	r2, r1, r4, lsl r7
   123b4:	andeq	r2, r1, r8, asr #14
   123b8:	andeq	r2, r1, r8, ror r7
   123bc:	andeq	r2, r1, r8, lsr #15
   123c0:	andeq	r2, r1, r4, ror #15
   123c4:	andeq	r2, r1, r8, lsl r8
   123c8:	mov	r0, r9
   123cc:	mov	r1, r4
   123d0:	mov	r2, sl
   123d4:	bl	13f30 <table_get_int@@Base>
   123d8:	mov	r5, r8
   123dc:	mov	r8, r0
   123e0:	mov	r1, r4
   123e4:	mov	r2, sl
   123e8:	mov	r0, r5
   123ec:	bl	13f30 <table_get_int@@Base>
   123f0:	cmp	r8, r0
   123f4:	mov	r8, r5
   123f8:	bne	122e0 <main@@Base+0x1b0>
   123fc:	add	sl, sl, #1
   12400:	cmp	r7, sl
   12404:	bne	1234c <main@@Base+0x21c>
   12408:	b	122fc <main@@Base+0x1cc>
   1240c:	mov	r0, r9
   12410:	mov	r1, r4
   12414:	mov	r2, sl
   12418:	bl	13f60 <table_get_int8@@Base>
   1241c:	mov	r5, r0
   12420:	mov	r0, r8
   12424:	mov	r1, r4
   12428:	mov	r2, sl
   1242c:	bl	13f60 <table_get_int8@@Base>
   12430:	cmp	r5, r0
   12434:	beq	123fc <main@@Base+0x2cc>
   12438:	b	122e0 <main@@Base+0x1b0>
   1243c:	mov	r0, r9
   12440:	mov	r1, r4
   12444:	mov	r2, sl
   12448:	bl	13f78 <table_get_uint8@@Base>
   1244c:	mov	r5, r0
   12450:	mov	r0, r8
   12454:	mov	r1, r4
   12458:	mov	r2, sl
   1245c:	bl	13f78 <table_get_uint8@@Base>
   12460:	cmp	r5, r0
   12464:	beq	123fc <main@@Base+0x2cc>
   12468:	b	122e0 <main@@Base+0x1b0>
   1246c:	mov	r0, r9
   12470:	mov	r1, r4
   12474:	mov	r2, sl
   12478:	bl	13f90 <table_get_int16@@Base>
   1247c:	mov	r5, r0
   12480:	mov	r0, r8
   12484:	mov	r1, r4
   12488:	mov	r2, sl
   1248c:	bl	13f90 <table_get_int16@@Base>
   12490:	cmp	r5, r0
   12494:	beq	123fc <main@@Base+0x2cc>
   12498:	b	122e0 <main@@Base+0x1b0>
   1249c:	mov	r0, r9
   124a0:	mov	r1, r4
   124a4:	mov	r2, sl
   124a8:	bl	13fa8 <table_get_uint16@@Base>
   124ac:	mov	r5, r0
   124b0:	mov	r0, r8
   124b4:	mov	r1, r4
   124b8:	mov	r2, sl
   124bc:	bl	13fa8 <table_get_uint16@@Base>
   124c0:	cmp	r5, r0
   124c4:	beq	123fc <main@@Base+0x2cc>
   124c8:	b	122e0 <main@@Base+0x1b0>
   124cc:	mov	r0, r9
   124d0:	mov	r1, r4
   124d4:	mov	r2, sl
   124d8:	bl	13fc0 <table_get_int32@@Base>
   124dc:	mov	r5, r0
   124e0:	mov	r0, r8
   124e4:	mov	r1, r4
   124e8:	mov	r2, sl
   124ec:	bl	13fc0 <table_get_int32@@Base>
   124f0:	cmp	r5, r0
   124f4:	beq	123fc <main@@Base+0x2cc>
   124f8:	b	122e0 <main@@Base+0x1b0>
   124fc:	mov	r0, r9
   12500:	mov	r1, r4
   12504:	mov	r2, sl
   12508:	bl	13fd8 <table_get_uint32@@Base>
   1250c:	mov	r5, r0
   12510:	mov	r0, r8
   12514:	mov	r1, r4
   12518:	mov	r2, sl
   1251c:	bl	13fd8 <table_get_uint32@@Base>
   12520:	cmp	r5, r0
   12524:	beq	123fc <main@@Base+0x2cc>
   12528:	b	122e0 <main@@Base+0x1b0>
   1252c:	mov	r0, r9
   12530:	mov	r1, r4
   12534:	mov	r2, sl
   12538:	bl	13ff0 <table_get_int64@@Base>
   1253c:	mov	r5, r0
   12540:	mov	r6, r1
   12544:	mov	r0, r8
   12548:	mov	r1, r4
   1254c:	mov	r2, sl
   12550:	bl	13ff0 <table_get_int64@@Base>
   12554:	b	12698 <main@@Base+0x568>
   12558:	mov	r0, r9
   1255c:	mov	r1, r4
   12560:	mov	r2, sl
   12564:	bl	14008 <table_get_uint64@@Base>
   12568:	mov	r5, r0
   1256c:	mov	r6, r1
   12570:	mov	r0, r8
   12574:	mov	r1, r4
   12578:	mov	r2, sl
   1257c:	bl	14008 <table_get_uint64@@Base>
   12580:	b	12698 <main@@Base+0x568>
   12584:	mov	r0, r9
   12588:	mov	r1, r4
   1258c:	mov	r2, sl
   12590:	bl	14020 <table_get_short@@Base>
   12594:	mov	r5, r0
   12598:	mov	r0, r8
   1259c:	mov	r1, r4
   125a0:	mov	r2, sl
   125a4:	bl	14020 <table_get_short@@Base>
   125a8:	cmp	r5, r0
   125ac:	beq	123fc <main@@Base+0x2cc>
   125b0:	b	122e0 <main@@Base+0x1b0>
   125b4:	mov	r0, r9
   125b8:	mov	r1, r4
   125bc:	mov	r2, sl
   125c0:	bl	14038 <table_get_ushort@@Base>
   125c4:	mov	r5, r0
   125c8:	mov	r0, r8
   125cc:	mov	r1, r4
   125d0:	mov	r2, sl
   125d4:	bl	14038 <table_get_ushort@@Base>
   125d8:	cmp	r5, r0
   125dc:	beq	123fc <main@@Base+0x2cc>
   125e0:	b	122e0 <main@@Base+0x1b0>
   125e4:	mov	r0, r9
   125e8:	mov	r1, r4
   125ec:	mov	r2, sl
   125f0:	bl	14050 <table_get_long@@Base>
   125f4:	mov	r5, r0
   125f8:	mov	r0, r8
   125fc:	mov	r1, r4
   12600:	mov	r2, sl
   12604:	bl	14050 <table_get_long@@Base>
   12608:	cmp	r5, r0
   1260c:	beq	123fc <main@@Base+0x2cc>
   12610:	b	122e0 <main@@Base+0x1b0>
   12614:	mov	r0, r9
   12618:	mov	r1, r4
   1261c:	mov	r2, sl
   12620:	bl	14068 <table_get_ulong@@Base>
   12624:	mov	r5, r0
   12628:	mov	r0, r8
   1262c:	mov	r1, r4
   12630:	mov	r2, sl
   12634:	bl	14068 <table_get_ulong@@Base>
   12638:	cmp	r5, r0
   1263c:	beq	123fc <main@@Base+0x2cc>
   12640:	b	122e0 <main@@Base+0x1b0>
   12644:	mov	r0, r9
   12648:	mov	r1, r4
   1264c:	mov	r2, sl
   12650:	bl	14080 <table_get_llong@@Base>
   12654:	mov	r5, r0
   12658:	mov	r6, r1
   1265c:	mov	r0, r8
   12660:	mov	r1, r4
   12664:	mov	r2, sl
   12668:	bl	14080 <table_get_llong@@Base>
   1266c:	b	12698 <main@@Base+0x568>
   12670:	mov	r0, r9
   12674:	mov	r1, r4
   12678:	mov	r2, sl
   1267c:	bl	14098 <table_get_ullong@@Base>
   12680:	mov	r5, r0
   12684:	mov	r6, r1
   12688:	mov	r0, r8
   1268c:	mov	r1, r4
   12690:	mov	r2, sl
   12694:	bl	14098 <table_get_ullong@@Base>
   12698:	eor	r1, r6, r1
   1269c:	eor	r0, r5, r0
   126a0:	orrs	r0, r0, r1
   126a4:	beq	123fc <main@@Base+0x2cc>
   126a8:	b	122e0 <main@@Base+0x1b0>
   126ac:	mov	r0, r9
   126b0:	mov	r1, r4
   126b4:	mov	r2, sl
   126b8:	bl	140b0 <table_get_float@@Base>
   126bc:	mov	r0, r8
   126c0:	mov	r1, r4
   126c4:	mov	r2, sl
   126c8:	vmov.f32	s16, s0
   126cc:	bl	140b0 <table_get_float@@Base>
   126d0:	vcmp.f32	s16, s0
   126d4:	vmrs	APSR_nzcv, fpscr
   126d8:	beq	123fc <main@@Base+0x2cc>
   126dc:	b	122e0 <main@@Base+0x1b0>
   126e0:	mov	r0, r9
   126e4:	mov	r1, r4
   126e8:	mov	r2, sl
   126ec:	bl	140c8 <table_get_double@@Base>
   126f0:	mov	r0, r8
   126f4:	mov	r1, r4
   126f8:	mov	r2, sl
   126fc:	vmov.f64	d8, d0
   12700:	bl	140c8 <table_get_double@@Base>
   12704:	vcmp.f64	d8, d0
   12708:	vmrs	APSR_nzcv, fpscr
   1270c:	beq	123fc <main@@Base+0x2cc>
   12710:	b	122e0 <main@@Base+0x1b0>
   12714:	mov	r0, r9
   12718:	mov	r1, r4
   1271c:	mov	r2, sl
   12720:	bl	140e0 <table_get_ldouble@@Base>
   12724:	mov	r0, r8
   12728:	mov	r1, r4
   1272c:	mov	r2, sl
   12730:	vmov.f64	d8, d0
   12734:	bl	140e0 <table_get_ldouble@@Base>
   12738:	vcmp.f64	d8, d0
   1273c:	vmrs	APSR_nzcv, fpscr
   12740:	beq	123fc <main@@Base+0x2cc>
   12744:	b	122e0 <main@@Base+0x1b0>
   12748:	mov	r0, r9
   1274c:	mov	r1, r4
   12750:	mov	r2, sl
   12754:	bl	140f8 <table_get_char@@Base>
   12758:	mov	r5, r0
   1275c:	mov	r0, r8
   12760:	mov	r1, r4
   12764:	mov	r2, sl
   12768:	bl	140f8 <table_get_char@@Base>
   1276c:	cmp	r5, r0
   12770:	beq	123fc <main@@Base+0x2cc>
   12774:	b	122e0 <main@@Base+0x1b0>
   12778:	mov	r0, r9
   1277c:	mov	r1, r4
   12780:	mov	r2, sl
   12784:	bl	14110 <table_get_uchar@@Base>
   12788:	mov	r5, r0
   1278c:	mov	r0, r8
   12790:	mov	r1, r4
   12794:	mov	r2, sl
   12798:	bl	14110 <table_get_uchar@@Base>
   1279c:	cmp	r5, r0
   127a0:	beq	123fc <main@@Base+0x2cc>
   127a4:	b	122e0 <main@@Base+0x1b0>
   127a8:	mov	r0, r9
   127ac:	mov	r1, r4
   127b0:	mov	r2, sl
   127b4:	bl	14128 <table_get_string@@Base>
   127b8:	mov	r5, r0
   127bc:	mov	r0, r8
   127c0:	mov	r1, r4
   127c4:	mov	r2, sl
   127c8:	bl	14128 <table_get_string@@Base>
   127cc:	mov	r1, r0
   127d0:	mov	r0, r5
   127d4:	bl	11f80 <strcmp@plt>
   127d8:	cmp	r0, #0
   127dc:	beq	123fc <main@@Base+0x2cc>
   127e0:	b	122e0 <main@@Base+0x1b0>
   127e4:	mov	r0, r9
   127e8:	mov	r1, r4
   127ec:	mov	r2, sl
   127f0:	bl	13f18 <table_get_bool@@Base>
   127f4:	mov	r5, r0
   127f8:	mov	r0, r8
   127fc:	mov	r1, r4
   12800:	mov	r2, sl
   12804:	bl	13f18 <table_get_bool@@Base>
   12808:	eor	r0, r5, r0
   1280c:	cmp	r0, #1
   12810:	bne	123fc <main@@Base+0x2cc>
   12814:	b	122e0 <main@@Base+0x1b0>
   12818:	mov	r0, r9
   1281c:	mov	r1, r4
   12820:	mov	r2, sl
   12824:	bl	1413c <table_get_ptr@@Base>
   12828:	mov	r5, r0
   1282c:	mov	r0, r8
   12830:	mov	r1, r4
   12834:	mov	r2, sl
   12838:	bl	1413c <table_get_ptr@@Base>
   1283c:	cmp	r5, r0
   12840:	beq	123fc <main@@Base+0x2cc>
   12844:	b	122e0 <main@@Base+0x1b0>
   12848:	mov	r2, r0
   1284c:	movw	r0, #26132	; 0x6614
   12850:	mov	r1, r7
   12854:	movt	r0, #1
   12858:	bl	11f8c <printf@plt>
   1285c:	mvn	r0, #0
   12860:	str	r0, [sp]
   12864:	sub	r0, fp, #100	; 0x64
   12868:	bl	12934 <table_destroy@@Base>
   1286c:	mov	r0, r8
   12870:	bl	12918 <table_delete@@Base>
   12874:	ldr	r0, [sp]
   12878:	sub	sp, fp, #40	; 0x28
   1287c:	vpop	{d8}
   12880:	add	sp, sp, #4
   12884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012888 <table_new@@Base>:
   12888:	push	{fp, lr}
   1288c:	mov	fp, sp
   12890:	mov	r0, #56	; 0x38
   12894:	bl	11fc8 <malloc@plt>
   12898:	vmov.i32	q8, #0	; 0x00000000
   1289c:	mov	r1, #0
   128a0:	mov	r2, #10
   128a4:	mov	r3, #20
   128a8:	str	r1, [r0]
   128ac:	stmib	r0, {r1, r2}
   128b0:	str	r1, [r0, #12]
   128b4:	str	r1, [r0, #16]
   128b8:	str	r1, [r0, #20]
   128bc:	str	r3, [r0, #24]
   128c0:	str	r1, [r0, #28]
   128c4:	str	r2, [r0, #48]	; 0x30
   128c8:	str	r1, [r0, #52]	; 0x34
   128cc:	add	r1, r0, #32
   128d0:	vst1.32	{d16-d17}, [r1]
   128d4:	pop	{fp, pc}

000128d8 <table_init@@Base>:
   128d8:	vmov.i32	q8, #0	; 0x00000000
   128dc:	mov	r1, #0
   128e0:	mov	r2, #10
   128e4:	mov	r3, #20
   128e8:	str	r1, [r0]
   128ec:	stmib	r0, {r1, r2}
   128f0:	str	r1, [r0, #12]
   128f4:	str	r1, [r0, #16]
   128f8:	str	r1, [r0, #20]
   128fc:	str	r3, [r0, #24]
   12900:	str	r1, [r0, #28]
   12904:	str	r2, [r0, #48]	; 0x30
   12908:	str	r1, [r0, #52]	; 0x34
   1290c:	add	r0, r0, #32
   12910:	vst1.32	{d16-d17}, [r0]
   12914:	bx	lr

00012918 <table_delete@@Base>:
   12918:	push	{r4, sl, fp, lr}
   1291c:	add	fp, sp, #8
   12920:	mov	r4, r0
   12924:	bl	12934 <table_destroy@@Base>
   12928:	mov	r0, r4
   1292c:	pop	{r4, sl, fp, lr}
   12930:	b	11f98 <free@plt>

00012934 <table_destroy@@Base>:
   12934:	cmp	r0, #0
   12938:	bxeq	lr
   1293c:	push	{r4, r5, r6, sl, fp, lr}
   12940:	add	fp, sp, #16
   12944:	mvn	r1, #0
   12948:	mvn	r2, #0
   1294c:	mov	r3, #64	; 0x40
   12950:	mov	r4, r0
   12954:	bl	132f4 <table_notify@@Base>
   12958:	mov	r0, r4
   1295c:	bl	141dc <table_get_row_length@@Base>
   12960:	cmp	r0, #1
   12964:	blt	12988 <table_destroy@@Base+0x54>
   12968:	mov	r5, r0
   1296c:	mov	r6, #0
   12970:	mov	r0, r4
   12974:	mov	r1, r6
   12978:	bl	14180 <table_row_destroy@@Base>
   1297c:	add	r6, r6, #1
   12980:	cmp	r5, r6
   12984:	bne	12970 <table_destroy@@Base+0x3c>
   12988:	ldr	r0, [r4, #16]
   1298c:	cmp	r0, #0
   12990:	beq	12998 <table_destroy@@Base+0x64>
   12994:	bl	11f98 <free@plt>
   12998:	mov	r0, r4
   1299c:	bl	13404 <table_get_column_length@@Base>
   129a0:	cmp	r0, #1
   129a4:	blt	129c8 <table_destroy@@Base+0x94>
   129a8:	mov	r5, r0
   129ac:	mov	r6, #0
   129b0:	mov	r0, r4
   129b4:	mov	r1, r6
   129b8:	bl	133ec <table_column_destroy@@Base>
   129bc:	add	r6, r6, #1
   129c0:	cmp	r5, r6
   129c4:	bne	129b0 <table_destroy@@Base+0x7c>
   129c8:	ldr	r0, [r4]
   129cc:	cmp	r0, #0
   129d0:	beq	129d8 <table_destroy@@Base+0xa4>
   129d4:	bl	11f98 <free@plt>
   129d8:	ldr	r0, [r4, #36]	; 0x24
   129dc:	cmp	r0, #0
   129e0:	beq	129e8 <table_destroy@@Base+0xb4>
   129e4:	bl	11f98 <free@plt>
   129e8:	ldr	r0, [r4, #40]	; 0x28
   129ec:	cmp	r0, #0
   129f0:	beq	129f8 <table_destroy@@Base+0xc4>
   129f4:	bl	11f98 <free@plt>
   129f8:	ldr	r0, [r4, #44]	; 0x2c
   129fc:	cmp	r0, #0
   12a00:	pop	{r4, r5, r6, sl, fp, lr}
   12a04:	beq	12a0c <table_destroy@@Base+0xd8>
   12a08:	b	11f98 <free@plt>
   12a0c:	bx	lr

00012a10 <table_dupe@@Base>:
   12a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a14:	add	fp, sp, #28
   12a18:	sub	sp, sp, #12
   12a1c:	mov	r4, r0
   12a20:	bl	141dc <table_get_row_length@@Base>
   12a24:	mov	r8, r0
   12a28:	mov	r0, r4
   12a2c:	bl	13404 <table_get_column_length@@Base>
   12a30:	mov	r6, r0
   12a34:	mov	r0, #56	; 0x38
   12a38:	bl	11fc8 <malloc@plt>
   12a3c:	vmov.i32	q8, #0	; 0x00000000
   12a40:	mov	sl, r0
   12a44:	mov	r5, #0
   12a48:	mov	r0, #10
   12a4c:	mov	r1, #20
   12a50:	cmp	r6, #1
   12a54:	str	r5, [sl]
   12a58:	str	r5, [sl, #4]
   12a5c:	str	r0, [sl, #8]
   12a60:	str	r5, [sl, #12]
   12a64:	str	r5, [sl, #16]
   12a68:	str	r5, [sl, #20]
   12a6c:	str	r1, [sl, #24]
   12a70:	str	r5, [sl, #28]
   12a74:	str	r0, [sl, #48]	; 0x30
   12a78:	add	r0, sl, #32
   12a7c:	str	r5, [sl, #52]	; 0x34
   12a80:	vst1.32	{d16-d17}, [r0]
   12a84:	blt	12ac0 <table_dupe@@Base+0xb0>
   12a88:	mov	r0, r4
   12a8c:	mov	r1, r5
   12a90:	bl	13478 <table_get_column_name@@Base>
   12a94:	mov	r7, r0
   12a98:	mov	r0, r4
   12a9c:	mov	r1, r5
   12aa0:	bl	13488 <table_get_column_data_type@@Base>
   12aa4:	mov	r2, r0
   12aa8:	mov	r0, sl
   12aac:	mov	r1, r7
   12ab0:	bl	1349c <table_add_column@@Base>
   12ab4:	add	r5, r5, #1
   12ab8:	cmp	r6, r5
   12abc:	bne	12a88 <table_dupe@@Base+0x78>
   12ac0:	cmp	r8, #1
   12ac4:	blt	13054 <table_dupe@@Base+0x644>
   12ac8:	mov	r5, #0
   12acc:	add	r9, sp, #8
   12ad0:	mov	r0, sl
   12ad4:	bl	141e4 <table_add_row@@Base>
   12ad8:	cmp	r6, #1
   12adc:	bge	12afc <table_dupe@@Base+0xec>
   12ae0:	add	r5, r5, #1
   12ae4:	cmp	r5, r8
   12ae8:	beq	13054 <table_dupe@@Base+0x644>
   12aec:	mov	r0, sl
   12af0:	bl	141e4 <table_add_row@@Base>
   12af4:	cmp	r6, #1
   12af8:	blt	12ae0 <table_dupe@@Base+0xd0>
   12afc:	mov	r7, #0
   12b00:	b	12b38 <table_dupe@@Base+0x128>
   12b04:	mov	r0, r4
   12b08:	mov	r1, r5
   12b0c:	mov	r2, r7
   12b10:	bl	1413c <table_get_ptr@@Base>
   12b14:	str	r0, [sp, #8]
   12b18:	mov	r0, sl
   12b1c:	mov	r1, r5
   12b20:	mov	r2, r7
   12b24:	mov	r3, r9
   12b28:	bl	152d4 <table_set_ptr@@Base>
   12b2c:	add	r7, r7, #1
   12b30:	cmp	r6, r7
   12b34:	beq	12ae0 <table_dupe@@Base+0xd0>
   12b38:	mov	r0, r4
   12b3c:	mov	r1, r7
   12b40:	bl	13488 <table_get_column_data_type@@Base>
   12b44:	cmp	r0, #23
   12b48:	bhi	12b2c <table_dupe@@Base+0x11c>
   12b4c:	add	r1, pc, #0
   12b50:	ldr	pc, [r1, r0, lsl #2]
   12b54:			; <UNDEFINED> instruction: 0x00012bb4
   12b58:	andeq	r2, r1, r8, ror #23
   12b5c:	andeq	r2, r1, ip, lsl ip
   12b60:	andeq	r2, r1, r0, asr ip
   12b64:	andeq	r2, r1, r4, lsl #25
   12b68:			; <UNDEFINED> instruction: 0x00012cb8
   12b6c:	andeq	r2, r1, ip, ror #25
   12b70:	andeq	r2, r1, r0, lsr #26
   12b74:	andeq	r2, r1, r4, asr sp
   12b78:	andeq	r2, r1, r8, lsl #27
   12b7c:			; <UNDEFINED> instruction: 0x00012dbc
   12b80:	strdeq	r2, [r1], -r0
   12b84:	andeq	r2, r1, r4, lsr #28
   12b88:	andeq	r2, r1, r8, asr lr
   12b8c:	andeq	r2, r1, ip, lsl #29
   12b90:	andeq	r2, r1, r0, asr #29
   12b94:	strdeq	r2, [r1], -r4
   12b98:	andeq	r2, r1, r4, lsr #30
   12b9c:	andeq	r2, r1, r4, asr pc
   12ba0:	andeq	r2, r1, r4, lsl #31
   12ba4:			; <UNDEFINED> instruction: 0x00012fb8
   12ba8:	andeq	r2, r1, ip, ror #31
   12bac:	andeq	r3, r1, r0, lsr #32
   12bb0:	andeq	r2, r1, r4, lsl #22
   12bb4:	mov	r0, r4
   12bb8:	mov	r1, r5
   12bbc:	mov	r2, r7
   12bc0:	bl	13f30 <table_get_int@@Base>
   12bc4:	mov	r3, r0
   12bc8:	mov	r0, sl
   12bcc:	mov	r1, r5
   12bd0:	mov	r2, r7
   12bd4:	bl	14790 <table_set_int@@Base>
   12bd8:	add	r7, r7, #1
   12bdc:	cmp	r6, r7
   12be0:	bne	12b38 <table_dupe@@Base+0x128>
   12be4:	b	12ae0 <table_dupe@@Base+0xd0>
   12be8:	mov	r0, r4
   12bec:	mov	r1, r5
   12bf0:	mov	r2, r7
   12bf4:	bl	13f48 <table_get_uint@@Base>
   12bf8:	mov	r3, r0
   12bfc:	mov	r0, sl
   12c00:	mov	r1, r5
   12c04:	mov	r2, r7
   12c08:	bl	14810 <table_set_uint@@Base>
   12c0c:	add	r7, r7, #1
   12c10:	cmp	r6, r7
   12c14:	bne	12b38 <table_dupe@@Base+0x128>
   12c18:	b	12ae0 <table_dupe@@Base+0xd0>
   12c1c:	mov	r0, r4
   12c20:	mov	r1, r5
   12c24:	mov	r2, r7
   12c28:	bl	13f60 <table_get_int8@@Base>
   12c2c:	mov	r3, r0
   12c30:	mov	r0, sl
   12c34:	mov	r1, r5
   12c38:	mov	r2, r7
   12c3c:	bl	14890 <table_set_int8@@Base>
   12c40:	add	r7, r7, #1
   12c44:	cmp	r6, r7
   12c48:	bne	12b38 <table_dupe@@Base+0x128>
   12c4c:	b	12ae0 <table_dupe@@Base+0xd0>
   12c50:	mov	r0, r4
   12c54:	mov	r1, r5
   12c58:	mov	r2, r7
   12c5c:	bl	13f78 <table_get_uint8@@Base>
   12c60:	mov	r3, r0
   12c64:	mov	r0, sl
   12c68:	mov	r1, r5
   12c6c:	mov	r2, r7
   12c70:	bl	14910 <table_set_uint8@@Base>
   12c74:	add	r7, r7, #1
   12c78:	cmp	r6, r7
   12c7c:	bne	12b38 <table_dupe@@Base+0x128>
   12c80:	b	12ae0 <table_dupe@@Base+0xd0>
   12c84:	mov	r0, r4
   12c88:	mov	r1, r5
   12c8c:	mov	r2, r7
   12c90:	bl	13f90 <table_get_int16@@Base>
   12c94:	mov	r3, r0
   12c98:	mov	r0, sl
   12c9c:	mov	r1, r5
   12ca0:	mov	r2, r7
   12ca4:	bl	14990 <table_set_int16@@Base>
   12ca8:	add	r7, r7, #1
   12cac:	cmp	r6, r7
   12cb0:	bne	12b38 <table_dupe@@Base+0x128>
   12cb4:	b	12ae0 <table_dupe@@Base+0xd0>
   12cb8:	mov	r0, r4
   12cbc:	mov	r1, r5
   12cc0:	mov	r2, r7
   12cc4:	bl	13fa8 <table_get_uint16@@Base>
   12cc8:	mov	r3, r0
   12ccc:	mov	r0, sl
   12cd0:	mov	r1, r5
   12cd4:	mov	r2, r7
   12cd8:	bl	14a10 <table_set_uint16@@Base>
   12cdc:	add	r7, r7, #1
   12ce0:	cmp	r6, r7
   12ce4:	bne	12b38 <table_dupe@@Base+0x128>
   12ce8:	b	12ae0 <table_dupe@@Base+0xd0>
   12cec:	mov	r0, r4
   12cf0:	mov	r1, r5
   12cf4:	mov	r2, r7
   12cf8:	bl	13fc0 <table_get_int32@@Base>
   12cfc:	mov	r3, r0
   12d00:	mov	r0, sl
   12d04:	mov	r1, r5
   12d08:	mov	r2, r7
   12d0c:	bl	14a90 <table_set_int32@@Base>
   12d10:	add	r7, r7, #1
   12d14:	cmp	r6, r7
   12d18:	bne	12b38 <table_dupe@@Base+0x128>
   12d1c:	b	12ae0 <table_dupe@@Base+0xd0>
   12d20:	mov	r0, r4
   12d24:	mov	r1, r5
   12d28:	mov	r2, r7
   12d2c:	bl	13fd8 <table_get_uint32@@Base>
   12d30:	mov	r3, r0
   12d34:	mov	r0, sl
   12d38:	mov	r1, r5
   12d3c:	mov	r2, r7
   12d40:	bl	14b10 <table_set_uint32@@Base>
   12d44:	add	r7, r7, #1
   12d48:	cmp	r6, r7
   12d4c:	bne	12b38 <table_dupe@@Base+0x128>
   12d50:	b	12ae0 <table_dupe@@Base+0xd0>
   12d54:	mov	r0, r4
   12d58:	mov	r1, r5
   12d5c:	mov	r2, r7
   12d60:	bl	13ff0 <table_get_int64@@Base>
   12d64:	stm	sp, {r0, r1}
   12d68:	mov	r0, sl
   12d6c:	mov	r1, r5
   12d70:	mov	r2, r7
   12d74:	bl	14b90 <table_set_int64@@Base>
   12d78:	add	r7, r7, #1
   12d7c:	cmp	r6, r7
   12d80:	bne	12b38 <table_dupe@@Base+0x128>
   12d84:	b	12ae0 <table_dupe@@Base+0xd0>
   12d88:	mov	r0, r4
   12d8c:	mov	r1, r5
   12d90:	mov	r2, r7
   12d94:	bl	14008 <table_get_uint64@@Base>
   12d98:	stm	sp, {r0, r1}
   12d9c:	mov	r0, sl
   12da0:	mov	r1, r5
   12da4:	mov	r2, r7
   12da8:	bl	14c18 <table_set_uint64@@Base>
   12dac:	add	r7, r7, #1
   12db0:	cmp	r6, r7
   12db4:	bne	12b38 <table_dupe@@Base+0x128>
   12db8:	b	12ae0 <table_dupe@@Base+0xd0>
   12dbc:	mov	r0, r4
   12dc0:	mov	r1, r5
   12dc4:	mov	r2, r7
   12dc8:	bl	14020 <table_get_short@@Base>
   12dcc:	mov	r3, r0
   12dd0:	mov	r0, sl
   12dd4:	mov	r1, r5
   12dd8:	mov	r2, r7
   12ddc:	bl	14ca0 <table_set_short@@Base>
   12de0:	add	r7, r7, #1
   12de4:	cmp	r6, r7
   12de8:	bne	12b38 <table_dupe@@Base+0x128>
   12dec:	b	12ae0 <table_dupe@@Base+0xd0>
   12df0:	mov	r0, r4
   12df4:	mov	r1, r5
   12df8:	mov	r2, r7
   12dfc:	bl	14038 <table_get_ushort@@Base>
   12e00:	mov	r3, r0
   12e04:	mov	r0, sl
   12e08:	mov	r1, r5
   12e0c:	mov	r2, r7
   12e10:	bl	14d20 <table_set_ushort@@Base>
   12e14:	add	r7, r7, #1
   12e18:	cmp	r6, r7
   12e1c:	bne	12b38 <table_dupe@@Base+0x128>
   12e20:	b	12ae0 <table_dupe@@Base+0xd0>
   12e24:	mov	r0, r4
   12e28:	mov	r1, r5
   12e2c:	mov	r2, r7
   12e30:	bl	14050 <table_get_long@@Base>
   12e34:	mov	r3, r0
   12e38:	mov	r0, sl
   12e3c:	mov	r1, r5
   12e40:	mov	r2, r7
   12e44:	bl	14da0 <table_set_long@@Base>
   12e48:	add	r7, r7, #1
   12e4c:	cmp	r6, r7
   12e50:	bne	12b38 <table_dupe@@Base+0x128>
   12e54:	b	12ae0 <table_dupe@@Base+0xd0>
   12e58:	mov	r0, r4
   12e5c:	mov	r1, r5
   12e60:	mov	r2, r7
   12e64:	bl	14068 <table_get_ulong@@Base>
   12e68:	mov	r3, r0
   12e6c:	mov	r0, sl
   12e70:	mov	r1, r5
   12e74:	mov	r2, r7
   12e78:	bl	14e20 <table_set_ulong@@Base>
   12e7c:	add	r7, r7, #1
   12e80:	cmp	r6, r7
   12e84:	bne	12b38 <table_dupe@@Base+0x128>
   12e88:	b	12ae0 <table_dupe@@Base+0xd0>
   12e8c:	mov	r0, r4
   12e90:	mov	r1, r5
   12e94:	mov	r2, r7
   12e98:	bl	14080 <table_get_llong@@Base>
   12e9c:	stm	sp, {r0, r1}
   12ea0:	mov	r0, sl
   12ea4:	mov	r1, r5
   12ea8:	mov	r2, r7
   12eac:	bl	14ea0 <table_set_llong@@Base>
   12eb0:	add	r7, r7, #1
   12eb4:	cmp	r6, r7
   12eb8:	bne	12b38 <table_dupe@@Base+0x128>
   12ebc:	b	12ae0 <table_dupe@@Base+0xd0>
   12ec0:	mov	r0, r4
   12ec4:	mov	r1, r5
   12ec8:	mov	r2, r7
   12ecc:	bl	14098 <table_get_ullong@@Base>
   12ed0:	stm	sp, {r0, r1}
   12ed4:	mov	r0, sl
   12ed8:	mov	r1, r5
   12edc:	mov	r2, r7
   12ee0:	bl	14f28 <table_set_ullong@@Base>
   12ee4:	add	r7, r7, #1
   12ee8:	cmp	r6, r7
   12eec:	bne	12b38 <table_dupe@@Base+0x128>
   12ef0:	b	12ae0 <table_dupe@@Base+0xd0>
   12ef4:	mov	r0, r4
   12ef8:	mov	r1, r5
   12efc:	mov	r2, r7
   12f00:	bl	140b0 <table_get_float@@Base>
   12f04:	mov	r0, sl
   12f08:	mov	r1, r5
   12f0c:	mov	r2, r7
   12f10:	bl	14fb0 <table_set_float@@Base>
   12f14:	add	r7, r7, #1
   12f18:	cmp	r6, r7
   12f1c:	bne	12b38 <table_dupe@@Base+0x128>
   12f20:	b	12ae0 <table_dupe@@Base+0xd0>
   12f24:	mov	r0, r4
   12f28:	mov	r1, r5
   12f2c:	mov	r2, r7
   12f30:	bl	140c8 <table_get_double@@Base>
   12f34:	mov	r0, sl
   12f38:	mov	r1, r5
   12f3c:	mov	r2, r7
   12f40:	bl	1503c <table_set_double@@Base>
   12f44:	add	r7, r7, #1
   12f48:	cmp	r6, r7
   12f4c:	bne	12b38 <table_dupe@@Base+0x128>
   12f50:	b	12ae0 <table_dupe@@Base+0xd0>
   12f54:	mov	r0, r4
   12f58:	mov	r1, r5
   12f5c:	mov	r2, r7
   12f60:	bl	140e0 <table_get_ldouble@@Base>
   12f64:	mov	r0, sl
   12f68:	mov	r1, r5
   12f6c:	mov	r2, r7
   12f70:	bl	150c4 <table_set_ldouble@@Base>
   12f74:	add	r7, r7, #1
   12f78:	cmp	r6, r7
   12f7c:	bne	12b38 <table_dupe@@Base+0x128>
   12f80:	b	12ae0 <table_dupe@@Base+0xd0>
   12f84:	mov	r0, r4
   12f88:	mov	r1, r5
   12f8c:	mov	r2, r7
   12f90:	bl	140f8 <table_get_char@@Base>
   12f94:	mov	r3, r0
   12f98:	mov	r0, sl
   12f9c:	mov	r1, r5
   12fa0:	mov	r2, r7
   12fa4:	bl	151d4 <table_set_char@@Base>
   12fa8:	add	r7, r7, #1
   12fac:	cmp	r6, r7
   12fb0:	bne	12b38 <table_dupe@@Base+0x128>
   12fb4:	b	12ae0 <table_dupe@@Base+0xd0>
   12fb8:	mov	r0, r4
   12fbc:	mov	r1, r5
   12fc0:	mov	r2, r7
   12fc4:	bl	14110 <table_get_uchar@@Base>
   12fc8:	mov	r3, r0
   12fcc:	mov	r0, sl
   12fd0:	mov	r1, r5
   12fd4:	mov	r2, r7
   12fd8:	bl	15254 <table_set_uchar@@Base>
   12fdc:	add	r7, r7, #1
   12fe0:	cmp	r6, r7
   12fe4:	bne	12b38 <table_dupe@@Base+0x128>
   12fe8:	b	12ae0 <table_dupe@@Base+0xd0>
   12fec:	mov	r0, r4
   12ff0:	mov	r1, r5
   12ff4:	mov	r2, r7
   12ff8:	bl	14128 <table_get_string@@Base>
   12ffc:	mov	r3, r0
   13000:	mov	r0, sl
   13004:	mov	r1, r5
   13008:	mov	r2, r7
   1300c:	bl	1514c <table_set_string@@Base>
   13010:	add	r7, r7, #1
   13014:	cmp	r6, r7
   13018:	bne	12b38 <table_dupe@@Base+0x128>
   1301c:	b	12ae0 <table_dupe@@Base+0xd0>
   13020:	mov	r0, r4
   13024:	mov	r1, r5
   13028:	mov	r2, r7
   1302c:	bl	13f18 <table_get_bool@@Base>
   13030:	mov	r3, r0
   13034:	mov	r0, sl
   13038:	mov	r1, r5
   1303c:	mov	r2, r7
   13040:	bl	14710 <table_set_bool@@Base>
   13044:	add	r7, r7, #1
   13048:	cmp	r6, r7
   1304c:	bne	12b38 <table_dupe@@Base+0x128>
   13050:	b	12ae0 <table_dupe@@Base+0xd0>
   13054:	mov	r0, sl
   13058:	sub	sp, fp, #28
   1305c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013060 <table_get_major_version@@Base>:
   13060:	mov	r0, #0
   13064:	bx	lr

00013068 <table_get_minor_version@@Base>:
   13068:	mov	r0, #0
   1306c:	bx	lr

00013070 <table_get_patch_version@@Base>:
   13070:	mov	r0, #0
   13074:	bx	lr

00013078 <table_get_version@@Base>:
   13078:	movw	r0, #26245	; 0x6685
   1307c:	movt	r0, #1
   13080:	bx	lr

00013084 <table_get_callback_length@@Base>:
   13084:	ldr	r0, [r0, #32]
   13088:	bx	lr

0001308c <table_register_callback@@Base>:
   1308c:	push	{r4, r5, r6, r7, fp, lr}
   13090:	add	fp, sp, #16
   13094:	mov	r5, r0
   13098:	ldr	r0, [r0, #32]
   1309c:	mov	r4, r3
   130a0:	mov	r6, r2
   130a4:	mov	r7, r1
   130a8:	cmp	r0, #1
   130ac:	blt	13108 <table_register_callback@@Base+0x7c>
   130b0:	ldr	r2, [r5, #36]	; 0x24
   130b4:	mov	r1, #0
   130b8:	ldr	r3, [r2, r1, lsl #2]
   130bc:	cmp	r3, r7
   130c0:	beq	130dc <table_register_callback@@Base+0x50>
   130c4:	add	r1, r1, #1
   130c8:	cmp	r0, r1
   130cc:	beq	13108 <table_register_callback@@Base+0x7c>
   130d0:	ldr	r3, [r2, r1, lsl #2]
   130d4:	cmp	r3, r7
   130d8:	bne	130c4 <table_register_callback@@Base+0x38>
   130dc:	ldr	r3, [r5, #40]	; 0x28
   130e0:	ldr	r3, [r3, r1, lsl #2]
   130e4:	cmp	r3, r6
   130e8:	bne	130c4 <table_register_callback@@Base+0x38>
   130ec:	cmp	r1, #0
   130f0:	beq	13108 <table_register_callback@@Base+0x7c>
   130f4:	ldr	r0, [r5, #44]	; 0x2c
   130f8:	ldr	r2, [r0, r1, lsl #2]
   130fc:	orr	r2, r2, r4
   13100:	str	r2, [r0, r1, lsl #2]
   13104:	pop	{r4, r5, r6, r7, fp, pc}
   13108:	ldr	r1, [r5, #48]	; 0x30
   1310c:	udiv	r2, r0, r1
   13110:	mls	r2, r2, r1, r0
   13114:	cmp	r2, #0
   13118:	bne	13164 <table_register_callback@@Base+0xd8>
   1311c:	ldr	r2, [r5, #52]	; 0x34
   13120:	ldr	r0, [r5, #36]	; 0x24
   13124:	add	r1, r2, r1
   13128:	str	r1, [r5, #52]	; 0x34
   1312c:	lsl	r1, r1, #2
   13130:	bl	11fb0 <realloc@plt>
   13134:	str	r0, [r5, #36]	; 0x24
   13138:	ldr	r1, [r5, #52]	; 0x34
   1313c:	ldr	r0, [r5, #40]	; 0x28
   13140:	lsl	r1, r1, #2
   13144:	bl	11fb0 <realloc@plt>
   13148:	str	r0, [r5, #40]	; 0x28
   1314c:	ldr	r1, [r5, #52]	; 0x34
   13150:	ldr	r0, [r5, #44]	; 0x2c
   13154:	lsl	r1, r1, #2
   13158:	bl	11fb0 <realloc@plt>
   1315c:	str	r0, [r5, #44]	; 0x2c
   13160:	ldr	r0, [r5, #32]
   13164:	ldr	r1, [r5, #36]	; 0x24
   13168:	str	r7, [r1, r0, lsl #2]
   1316c:	ldr	r1, [r5, #40]	; 0x28
   13170:	str	r6, [r1, r0, lsl #2]
   13174:	ldr	r1, [r5, #44]	; 0x2c
   13178:	str	r4, [r1, r0, lsl #2]
   1317c:	ldr	r0, [r5, #32]
   13180:	add	r0, r0, #1
   13184:	str	r0, [r5, #32]
   13188:	pop	{r4, r5, r6, r7, fp, pc}

0001318c <table_unregister_callback@@Base>:
   1318c:	push	{r4, r5, r6, sl, fp, lr}
   13190:	add	fp, sp, #16
   13194:	ldr	r4, [r0, #32]
   13198:	cmp	r4, #1
   1319c:	blt	132f0 <table_unregister_callback@@Base+0x164>
   131a0:	ldr	r3, [r0, #36]	; 0x24
   131a4:	mov	r6, r0
   131a8:	mov	r0, #0
   131ac:	ldr	r5, [r3, r0, lsl #2]
   131b0:	cmp	r5, r1
   131b4:	beq	131d0 <table_unregister_callback@@Base+0x44>
   131b8:	add	r0, r0, #1
   131bc:	cmp	r0, r4
   131c0:	beq	132f0 <table_unregister_callback@@Base+0x164>
   131c4:	ldr	r5, [r3, r0, lsl #2]
   131c8:	cmp	r5, r1
   131cc:	bne	131b8 <table_unregister_callback@@Base+0x2c>
   131d0:	ldr	r5, [r6, #40]	; 0x28
   131d4:	ldr	r5, [r5, r0, lsl #2]
   131d8:	cmp	r5, r2
   131dc:	bne	131b8 <table_unregister_callback@@Base+0x2c>
   131e0:	sub	r1, r4, #1
   131e4:	cmp	r0, r1
   131e8:	bge	1326c <table_unregister_callback@@Base+0xe0>
   131ec:	add	r2, r0, #1
   131f0:	ldr	r1, [r3, r2, lsl #2]
   131f4:	str	r1, [r3, r0, lsl #2]
   131f8:	ldr	r1, [r6, #40]	; 0x28
   131fc:	ldr	r3, [r1, r2, lsl #2]
   13200:	str	r3, [r1, r0, lsl #2]
   13204:	ldr	r1, [r6, #44]	; 0x2c
   13208:	ldr	r3, [r1, r2, lsl #2]
   1320c:	str	r3, [r1, r0, lsl #2]
   13210:	ldr	r1, [r6, #32]
   13214:	sub	r1, r1, #1
   13218:	cmp	r2, r1
   1321c:	bge	1326c <table_unregister_callback@@Base+0xe0>
   13220:	ldr	r1, [r6, #36]	; 0x24
   13224:	add	r1, r1, r0, lsl #2
   13228:	ldr	r2, [r1, #8]
   1322c:	str	r2, [r1, #4]
   13230:	ldr	r1, [r6, #40]	; 0x28
   13234:	add	r1, r1, r0, lsl #2
   13238:	ldr	r2, [r1, #8]
   1323c:	str	r2, [r1, #4]
   13240:	ldr	r1, [r6, #44]	; 0x2c
   13244:	add	r1, r1, r0, lsl #2
   13248:	ldr	r2, [r1, #8]
   1324c:	str	r2, [r1, #4]
   13250:	add	r2, r0, #1
   13254:	add	r0, r0, #2
   13258:	ldr	r1, [r6, #32]
   1325c:	sub	r1, r1, #1
   13260:	cmp	r0, r1
   13264:	mov	r0, r2
   13268:	blt	13220 <table_unregister_callback@@Base+0x94>
   1326c:	str	r1, [r6, #32]
   13270:	ldr	r2, [r6, #48]	; 0x30
   13274:	udiv	r0, r1, r2
   13278:	mls	r0, r0, r2, r1
   1327c:	cmp	r0, #0
   13280:	popne	{r4, r5, r6, sl, fp, pc}
   13284:	ldr	r1, [r6, #52]	; 0x34
   13288:	ldr	r0, [r6, #36]	; 0x24
   1328c:	subs	r1, r1, r2
   13290:	str	r1, [r6, #52]	; 0x34
   13294:	beq	132cc <table_unregister_callback@@Base+0x140>
   13298:	lsl	r1, r1, #2
   1329c:	bl	11fb0 <realloc@plt>
   132a0:	str	r0, [r6, #36]	; 0x24
   132a4:	ldr	r1, [r6, #52]	; 0x34
   132a8:	ldr	r0, [r6, #40]	; 0x28
   132ac:	lsl	r1, r1, #2
   132b0:	bl	11fb0 <realloc@plt>
   132b4:	str	r0, [r6, #40]	; 0x28
   132b8:	ldr	r1, [r6, #52]	; 0x34
   132bc:	ldr	r0, [r6, #44]	; 0x2c
   132c0:	lsl	r1, r1, #2
   132c4:	bl	11fb0 <realloc@plt>
   132c8:	b	132ec <table_unregister_callback@@Base+0x160>
   132cc:	bl	11f98 <free@plt>
   132d0:	ldr	r0, [r6, #40]	; 0x28
   132d4:	bl	11f98 <free@plt>
   132d8:	ldr	r0, [r6, #44]	; 0x2c
   132dc:	bl	11f98 <free@plt>
   132e0:	mov	r0, #0
   132e4:	str	r0, [r6, #36]	; 0x24
   132e8:	str	r0, [r6, #40]	; 0x28
   132ec:	str	r0, [r6, #44]	; 0x2c
   132f0:	pop	{r4, r5, r6, sl, fp, pc}

000132f4 <table_notify@@Base>:
   132f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132f8:	add	fp, sp, #24
   132fc:	sub	sp, sp, #8
   13300:	mov	r7, r0
   13304:	ldr	r0, [r0, #32]
   13308:	cmp	r0, #1
   1330c:	blt	13384 <table_notify@@Base+0x90>
   13310:	mov	r4, r3
   13314:	mov	r8, r2
   13318:	mov	r9, r1
   1331c:	mov	r5, #0
   13320:	ldr	r1, [r7, #44]	; 0x2c
   13324:	ldr	r1, [r1, r5, lsl #2]
   13328:	tst	r1, r4
   1332c:	bne	1334c <table_notify@@Base+0x58>
   13330:	add	r5, r5, #1
   13334:	cmp	r5, r0
   13338:	bge	13384 <table_notify@@Base+0x90>
   1333c:	ldr	r1, [r7, #44]	; 0x2c
   13340:	ldr	r1, [r1, r5, lsl #2]
   13344:	tst	r1, r4
   13348:	beq	13330 <table_notify@@Base+0x3c>
   1334c:	ldr	r0, [r7, #36]	; 0x24
   13350:	ldr	r1, [r7, #40]	; 0x28
   13354:	mov	r2, r8
   13358:	mov	r3, r4
   1335c:	ldr	r6, [r0, r5, lsl #2]
   13360:	ldr	r0, [r1, r5, lsl #2]
   13364:	mov	r1, r9
   13368:	str	r0, [sp]
   1336c:	mov	r0, r7
   13370:	blx	r6
   13374:	ldr	r0, [r7, #32]
   13378:	add	r5, r5, #1
   1337c:	cmp	r5, r0
   13380:	blt	1333c <table_notify@@Base+0x48>
   13384:	sub	sp, fp, #24
   13388:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001338c <table_column_init@@Base>:
   1338c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13390:	add	fp, sp, #24
   13394:	ldr	r7, [r0]
   13398:	mov	r0, r2
   1339c:	mov	r4, r3
   133a0:	mov	r5, r2
   133a4:	mov	r6, r1
   133a8:	bl	11fec <strlen@plt>
   133ac:	add	r0, r0, #1
   133b0:	bl	11fc8 <malloc@plt>
   133b4:	ldr	r8, [fp, #8]
   133b8:	add	r6, r6, r6, lsl #1
   133bc:	cmp	r0, #0
   133c0:	str	r0, [r7, r6, lsl #2]
   133c4:	beq	133d0 <table_column_init@@Base+0x44>
   133c8:	mov	r1, r5
   133cc:	bl	11fbc <strcpy@plt>
   133d0:	add	r0, r7, r6, lsl #2
   133d4:	stmib	r0, {r4, r8}
   133d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000133dc <table_get_col_ptr@@Base>:
   133dc:	ldr	r0, [r0]
   133e0:	add	r1, r1, r1, lsl #1
   133e4:	add	r0, r0, r1, lsl #2
   133e8:	bx	lr

000133ec <table_column_destroy@@Base>:
   133ec:	ldr	r0, [r0]
   133f0:	add	r1, r1, r1, lsl #1
   133f4:	ldr	r0, [r0, r1, lsl #2]
   133f8:	cmp	r0, #0
   133fc:	bxeq	lr
   13400:	b	11f98 <free@plt>

00013404 <table_get_column_length@@Base>:
   13404:	ldr	r0, [r0, #4]
   13408:	bx	lr

0001340c <table_get_column@@Base>:
   1340c:	push	{r4, r5, r6, r7, fp, lr}
   13410:	add	fp, sp, #16
   13414:	ldr	r6, [r0, #4]
   13418:	cmp	r6, #1
   1341c:	blt	13464 <table_get_column@@Base+0x58>
   13420:	ldr	r7, [r0]
   13424:	mov	r5, r1
   13428:	mov	r4, #0
   1342c:	ldr	r0, [r7]
   13430:	mov	r1, r5
   13434:	bl	11f80 <strcmp@plt>
   13438:	cmp	r0, #0
   1343c:	beq	13454 <table_get_column@@Base+0x48>
   13440:	add	r4, r4, #1
   13444:	add	r7, r7, #12
   13448:	cmp	r6, r4
   1344c:	bne	1342c <table_get_column@@Base+0x20>
   13450:	mov	r4, r6
   13454:	cmp	r4, r6
   13458:	mvneq	r4, #0
   1345c:	mov	r0, r4
   13460:	pop	{r4, r5, r6, r7, fp, pc}
   13464:	mov	r4, #0
   13468:	cmp	r4, r6
   1346c:	mvneq	r4, #0
   13470:	mov	r0, r4
   13474:	pop	{r4, r5, r6, r7, fp, pc}

00013478 <table_get_column_name@@Base>:
   13478:	ldr	r0, [r0]
   1347c:	add	r1, r1, r1, lsl #1
   13480:	ldr	r0, [r0, r1, lsl #2]
   13484:	bx	lr

00013488 <table_get_column_data_type@@Base>:
   13488:	ldr	r0, [r0]
   1348c:	add	r1, r1, r1, lsl #1
   13490:	add	r0, r0, r1, lsl #2
   13494:	ldr	r0, [r0, #4]
   13498:	bx	lr

0001349c <table_add_column@@Base>:
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a0:	add	fp, sp, #28
   134a4:	sub	sp, sp, #4
   134a8:	mov	r4, r0
   134ac:	mov	r8, r1
   134b0:	ldr	r0, [r0, #4]
   134b4:	mov	r9, r2
   134b8:	ldr	r1, [r4, #8]
   134bc:	udiv	r2, r0, r1
   134c0:	mls	r0, r2, r1, r0
   134c4:	cmp	r0, #0
   134c8:	bne	13534 <table_add_column@@Base+0x98>
   134cc:	ldr	r2, [r4, #12]
   134d0:	ldr	r0, [r4]
   134d4:	add	r1, r2, r1
   134d8:	str	r1, [r4, #12]
   134dc:	add	r1, r1, r1, lsl #1
   134e0:	lsl	r1, r1, #2
   134e4:	bl	11fb0 <realloc@plt>
   134e8:	str	r0, [r4]
   134ec:	mov	r0, r4
   134f0:	bl	141dc <table_get_row_length@@Base>
   134f4:	cmp	r0, #1
   134f8:	blt	13534 <table_add_column@@Base+0x98>
   134fc:	mov	r6, r0
   13500:	mov	r5, #0
   13504:	mov	r0, r4
   13508:	mov	r1, r5
   1350c:	bl	14174 <table_get_row_ptr@@Base>
   13510:	ldr	r1, [r4, #12]
   13514:	mov	r7, r0
   13518:	ldr	r0, [r0]
   1351c:	lsl	r1, r1, #2
   13520:	bl	11fb0 <realloc@plt>
   13524:	add	r5, r5, #1
   13528:	str	r0, [r7]
   1352c:	cmp	r6, r5
   13530:	bne	13504 <table_add_column@@Base+0x68>
   13534:	mov	r0, r4
   13538:	bl	141dc <table_get_row_length@@Base>
   1353c:	ldr	r6, [r4, #4]
   13540:	mov	r7, r0
   13544:	mov	r0, r9
   13548:	bl	13ee8 <table_get_default_compare_function_for_data_type@@Base>
   1354c:	ldr	r5, [r4]
   13550:	mov	sl, r0
   13554:	mov	r0, r8
   13558:	bl	11fec <strlen@plt>
   1355c:	add	r0, r0, #1
   13560:	bl	11fc8 <malloc@plt>
   13564:	mov	r1, r8
   13568:	add	r8, r6, r6, lsl #1
   1356c:	cmp	r0, #0
   13570:	str	r0, [r5, r8, lsl #2]
   13574:	beq	1357c <table_add_column@@Base+0xe0>
   13578:	bl	11fbc <strcpy@plt>
   1357c:	add	r0, r5, r8, lsl #2
   13580:	cmp	r7, #1
   13584:	stmib	r0, {r9, sl}
   13588:	blt	135ac <table_add_column@@Base+0x110>
   1358c:	mov	r5, #0
   13590:	mov	r0, r4
   13594:	mov	r1, r5
   13598:	mov	r2, r6
   1359c:	bl	15af4 <table_cell_init@@Base>
   135a0:	add	r5, r5, #1
   135a4:	cmp	r7, r5
   135a8:	bne	13590 <table_add_column@@Base+0xf4>
   135ac:	ldr	r2, [r4, #4]
   135b0:	mov	r0, r4
   135b4:	mvn	r1, #0
   135b8:	mov	r3, #8
   135bc:	bl	132f4 <table_notify@@Base>
   135c0:	ldr	r0, [r4, #4]
   135c4:	add	r1, r0, #1
   135c8:	str	r1, [r4, #4]
   135cc:	sub	sp, fp, #28
   135d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000135d4 <table_remove_column@@Base>:
   135d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135d8:	add	fp, sp, #28
   135dc:	sub	sp, sp, #12
   135e0:	mov	r5, r0
   135e4:	ldr	r0, [r0]
   135e8:	add	r6, r1, r1, lsl #1
   135ec:	mov	r4, r1
   135f0:	ldr	r0, [r0, r6, lsl #2]
   135f4:	cmp	r0, #0
   135f8:	beq	13600 <table_remove_column@@Base+0x2c>
   135fc:	bl	11f98 <free@plt>
   13600:	ldr	r7, [r5, #4]
   13604:	sub	r0, r7, #1
   13608:	cmp	r0, r4
   1360c:	str	r0, [sp, #8]
   13610:	ble	13644 <table_remove_column@@Base+0x70>
   13614:	mvn	r0, r4
   13618:	lsl	r1, r6, #2
   1361c:	add	r0, r0, r7
   13620:	ldr	r2, [r5]
   13624:	subs	r0, r0, #1
   13628:	add	r2, r2, r1
   1362c:	add	r1, r1, #12
   13630:	vldr	d16, [r2, #12]
   13634:	ldr	r3, [r2, #20]
   13638:	str	r3, [r2, #8]
   1363c:	vstr	d16, [r2]
   13640:	bne	13620 <table_remove_column@@Base+0x4c>
   13644:	mov	r0, r5
   13648:	bl	141dc <table_get_row_length@@Base>
   1364c:	cmp	r0, #1
   13650:	blt	1373c <table_remove_column@@Base+0x168>
   13654:	mov	sl, r0
   13658:	ldr	r0, [sp, #8]
   1365c:	cmp	r0, r4
   13660:	ble	13710 <table_remove_column@@Base+0x13c>
   13664:	mvn	r0, r4
   13668:	sub	r8, r7, #2
   1366c:	add	r0, r7, r0
   13670:	mov	r7, #0
   13674:	and	r9, r0, #1
   13678:	add	r0, r4, #1
   1367c:	str	r0, [sp, #4]
   13680:	b	13690 <table_remove_column@@Base+0xbc>
   13684:	add	r7, r7, #1
   13688:	cmp	r7, sl
   1368c:	beq	1373c <table_remove_column@@Base+0x168>
   13690:	mov	r0, r5
   13694:	mov	r1, r7
   13698:	mov	r2, r4
   1369c:	bl	15b30 <table_cell_destroy@@Base>
   136a0:	mov	r0, r5
   136a4:	mov	r1, r7
   136a8:	bl	14174 <table_get_row_ptr@@Base>
   136ac:	cmp	r9, #0
   136b0:	mov	r2, r4
   136b4:	beq	136cc <table_remove_column@@Base+0xf8>
   136b8:	ldr	r1, [r0]
   136bc:	add	r2, r1, r4, lsl #2
   136c0:	ldr	r2, [r2, #4]
   136c4:	str	r2, [r1, r4, lsl #2]
   136c8:	ldr	r2, [sp, #4]
   136cc:	cmp	r8, r4
   136d0:	beq	13684 <table_remove_column@@Base+0xb0>
   136d4:	ldr	r1, [sp, #8]
   136d8:	sub	r1, r1, r2
   136dc:	lsl	r2, r2, #2
   136e0:	ldr	r3, [r0]
   136e4:	subs	r1, r1, #2
   136e8:	add	r6, r3, r2
   136ec:	ldr	r6, [r6, #4]
   136f0:	str	r6, [r3, r2]
   136f4:	ldr	r3, [r0]
   136f8:	add	r3, r3, r2
   136fc:	add	r2, r2, #8
   13700:	ldr	r6, [r3, #8]
   13704:	str	r6, [r3, #4]
   13708:	bne	136e0 <table_remove_column@@Base+0x10c>
   1370c:	b	13684 <table_remove_column@@Base+0xb0>
   13710:	mov	r7, #0
   13714:	mov	r0, r5
   13718:	mov	r1, r7
   1371c:	mov	r2, r4
   13720:	bl	15b30 <table_cell_destroy@@Base>
   13724:	mov	r0, r5
   13728:	mov	r1, r7
   1372c:	bl	14174 <table_get_row_ptr@@Base>
   13730:	add	r7, r7, #1
   13734:	cmp	sl, r7
   13738:	bne	13714 <table_remove_column@@Base+0x140>
   1373c:	ldmib	r5, {r0, r1}
   13740:	sub	r0, r0, #1
   13744:	udiv	r2, r0, r1
   13748:	str	r0, [r5, #4]
   1374c:	mls	r0, r2, r1, r0
   13750:	cmp	r0, #0
   13754:	bne	137c0 <table_remove_column@@Base+0x1ec>
   13758:	ldr	r2, [r5, #12]
   1375c:	ldr	r0, [r5]
   13760:	sub	r1, r2, r1
   13764:	str	r1, [r5, #12]
   13768:	add	r1, r1, r1, lsl #1
   1376c:	lsl	r1, r1, #2
   13770:	bl	11fb0 <realloc@plt>
   13774:	str	r0, [r5]
   13778:	mov	r0, r5
   1377c:	bl	141dc <table_get_row_length@@Base>
   13780:	cmp	r0, #1
   13784:	blt	137c0 <table_remove_column@@Base+0x1ec>
   13788:	mov	r8, r0
   1378c:	mov	r7, #0
   13790:	mov	r0, r5
   13794:	mov	r1, r7
   13798:	bl	14174 <table_get_row_ptr@@Base>
   1379c:	ldr	r1, [r5, #12]
   137a0:	mov	r6, r0
   137a4:	ldr	r0, [r0]
   137a8:	lsl	r1, r1, #2
   137ac:	bl	11fb0 <realloc@plt>
   137b0:	add	r7, r7, #1
   137b4:	str	r0, [r6]
   137b8:	cmp	r8, r7
   137bc:	bne	13790 <table_remove_column@@Base+0x1bc>
   137c0:	mov	r0, r5
   137c4:	mvn	r1, #0
   137c8:	mov	r2, r4
   137cc:	mov	r3, #16
   137d0:	bl	132f4 <table_notify@@Base>
   137d4:	mov	r0, #0
   137d8:	sub	sp, fp, #28
   137dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000137e0 <table_get_column_compare_function@@Base>:
   137e0:	ldr	r0, [r0]
   137e4:	add	r1, r1, r1, lsl #1
   137e8:	add	r0, r0, r1, lsl #2
   137ec:	ldr	r0, [r0, #8]
   137f0:	bx	lr

000137f4 <table_set_column_compare_function@@Base>:
   137f4:	ldr	r0, [r0]
   137f8:	add	r1, r1, r1, lsl #1
   137fc:	add	r0, r0, r1, lsl #2
   13800:	str	r2, [r0, #8]
   13804:	bx	lr

00013808 <table_compare_bool@@Base>:
   13808:	cmp	r0, #0
   1380c:	beq	13840 <table_compare_bool@@Base+0x38>
   13810:	cmp	r1, #0
   13814:	moveq	r1, #1
   13818:	moveq	r0, r1
   1381c:	bxeq	lr
   13820:	ldrb	r2, [r1]
   13824:	ldrb	r0, [r0]
   13828:	mov	r1, #0
   1382c:	cmp	r0, r2
   13830:	mvncc	r1, #0
   13834:	movwhi	r1, #1
   13838:	mov	r0, r1
   1383c:	bx	lr
   13840:	cmp	r1, #0
   13844:	mvnne	r1, #0
   13848:	mov	r0, r1
   1384c:	bx	lr

00013850 <table_compare_int@@Base>:
   13850:	cmp	r0, #0
   13854:	beq	13888 <table_compare_int@@Base+0x38>
   13858:	cmp	r1, #0
   1385c:	moveq	r1, #1
   13860:	moveq	r0, r1
   13864:	bxeq	lr
   13868:	ldr	r2, [r1]
   1386c:	ldr	r0, [r0]
   13870:	mov	r1, #0
   13874:	cmp	r0, r2
   13878:	mvnlt	r1, #0
   1387c:	movwgt	r1, #1
   13880:	mov	r0, r1
   13884:	bx	lr
   13888:	cmp	r1, #0
   1388c:	mvnne	r1, #0
   13890:	mov	r0, r1
   13894:	bx	lr

00013898 <table_compare_uint@@Base>:
   13898:	cmp	r0, #0
   1389c:	beq	138d0 <table_compare_uint@@Base+0x38>
   138a0:	cmp	r1, #0
   138a4:	moveq	r1, #1
   138a8:	moveq	r0, r1
   138ac:	bxeq	lr
   138b0:	ldr	r2, [r1]
   138b4:	ldr	r0, [r0]
   138b8:	mov	r1, #0
   138bc:	cmp	r0, r2
   138c0:	mvncc	r1, #0
   138c4:	movwhi	r1, #1
   138c8:	mov	r0, r1
   138cc:	bx	lr
   138d0:	cmp	r1, #0
   138d4:	mvnne	r1, #0
   138d8:	mov	r0, r1
   138dc:	bx	lr

000138e0 <table_compare_int8@@Base>:
   138e0:	cmp	r0, #0
   138e4:	beq	13918 <table_compare_int8@@Base+0x38>
   138e8:	cmp	r1, #0
   138ec:	moveq	r1, #1
   138f0:	moveq	r0, r1
   138f4:	bxeq	lr
   138f8:	ldrsb	r2, [r1]
   138fc:	ldrsb	r0, [r0]
   13900:	mov	r1, #0
   13904:	cmp	r0, r2
   13908:	mvnlt	r1, #0
   1390c:	movwgt	r1, #1
   13910:	mov	r0, r1
   13914:	bx	lr
   13918:	cmp	r1, #0
   1391c:	mvnne	r1, #0
   13920:	mov	r0, r1
   13924:	bx	lr

00013928 <table_compare_uint8@@Base>:
   13928:	cmp	r0, #0
   1392c:	beq	13960 <table_compare_uint8@@Base+0x38>
   13930:	cmp	r1, #0
   13934:	moveq	r1, #1
   13938:	moveq	r0, r1
   1393c:	bxeq	lr
   13940:	ldrb	r2, [r1]
   13944:	ldrb	r0, [r0]
   13948:	mov	r1, #0
   1394c:	cmp	r0, r2
   13950:	mvncc	r1, #0
   13954:	movwhi	r1, #1
   13958:	mov	r0, r1
   1395c:	bx	lr
   13960:	cmp	r1, #0
   13964:	mvnne	r1, #0
   13968:	mov	r0, r1
   1396c:	bx	lr

00013970 <table_compare_int16@@Base>:
   13970:	cmp	r0, #0
   13974:	beq	139a8 <table_compare_int16@@Base+0x38>
   13978:	cmp	r1, #0
   1397c:	moveq	r1, #1
   13980:	moveq	r0, r1
   13984:	bxeq	lr
   13988:	ldrsh	r2, [r1]
   1398c:	ldrsh	r0, [r0]
   13990:	mov	r1, #0
   13994:	cmp	r0, r2
   13998:	mvnlt	r1, #0
   1399c:	movwgt	r1, #1
   139a0:	mov	r0, r1
   139a4:	bx	lr
   139a8:	cmp	r1, #0
   139ac:	mvnne	r1, #0
   139b0:	mov	r0, r1
   139b4:	bx	lr

000139b8 <table_compare_uint16@@Base>:
   139b8:	cmp	r0, #0
   139bc:	beq	139f0 <table_compare_uint16@@Base+0x38>
   139c0:	cmp	r1, #0
   139c4:	moveq	r1, #1
   139c8:	moveq	r0, r1
   139cc:	bxeq	lr
   139d0:	ldrh	r2, [r1]
   139d4:	ldrh	r0, [r0]
   139d8:	mov	r1, #0
   139dc:	cmp	r0, r2
   139e0:	mvncc	r1, #0
   139e4:	movwhi	r1, #1
   139e8:	mov	r0, r1
   139ec:	bx	lr
   139f0:	cmp	r1, #0
   139f4:	mvnne	r1, #0
   139f8:	mov	r0, r1
   139fc:	bx	lr

00013a00 <table_compare_int32@@Base>:
   13a00:	cmp	r0, #0
   13a04:	beq	13a38 <table_compare_int32@@Base+0x38>
   13a08:	cmp	r1, #0
   13a0c:	moveq	r1, #1
   13a10:	moveq	r0, r1
   13a14:	bxeq	lr
   13a18:	ldr	r2, [r1]
   13a1c:	ldr	r0, [r0]
   13a20:	mov	r1, #0
   13a24:	cmp	r0, r2
   13a28:	mvnlt	r1, #0
   13a2c:	movwgt	r1, #1
   13a30:	mov	r0, r1
   13a34:	bx	lr
   13a38:	cmp	r1, #0
   13a3c:	mvnne	r1, #0
   13a40:	mov	r0, r1
   13a44:	bx	lr

00013a48 <table_compare_uint32@@Base>:
   13a48:	cmp	r0, #0
   13a4c:	beq	13a80 <table_compare_uint32@@Base+0x38>
   13a50:	cmp	r1, #0
   13a54:	moveq	r1, #1
   13a58:	moveq	r0, r1
   13a5c:	bxeq	lr
   13a60:	ldr	r2, [r1]
   13a64:	ldr	r0, [r0]
   13a68:	mov	r1, #0
   13a6c:	cmp	r0, r2
   13a70:	mvncc	r1, #0
   13a74:	movwhi	r1, #1
   13a78:	mov	r0, r1
   13a7c:	bx	lr
   13a80:	cmp	r1, #0
   13a84:	mvnne	r1, #0
   13a88:	mov	r0, r1
   13a8c:	bx	lr

00013a90 <table_compare_int64@@Base>:
   13a90:	cmp	r0, #0
   13a94:	beq	13ae8 <table_compare_int64@@Base+0x58>
   13a98:	cmp	r1, #0
   13a9c:	moveq	r1, #1
   13aa0:	moveq	r0, r1
   13aa4:	bxeq	lr
   13aa8:	push	{r5, r7, fp, lr}
   13aac:	add	fp, sp, #8
   13ab0:	ldm	r0, {r0, r5}
   13ab4:	ldm	r1, {r2, r7}
   13ab8:	mov	r1, #0
   13abc:	subs	r3, r0, r2
   13ac0:	sbcs	r3, r5, r7
   13ac4:	movwlt	r1, #1
   13ac8:	cmp	r1, #0
   13acc:	mvnne	r1, #0
   13ad0:	subs	r0, r2, r0
   13ad4:	sbcs	r0, r7, r5
   13ad8:	movwlt	r1, #1
   13adc:	pop	{r5, r7, fp, lr}
   13ae0:	mov	r0, r1
   13ae4:	bx	lr
   13ae8:	cmp	r1, #0
   13aec:	mvnne	r1, #0
   13af0:	mov	r0, r1
   13af4:	bx	lr

00013af8 <table_compare_uint64@@Base>:
   13af8:	cmp	r0, #0
   13afc:	beq	13b50 <table_compare_uint64@@Base+0x58>
   13b00:	cmp	r1, #0
   13b04:	moveq	r1, #1
   13b08:	moveq	r0, r1
   13b0c:	bxeq	lr
   13b10:	push	{r5, r7, fp, lr}
   13b14:	add	fp, sp, #8
   13b18:	ldm	r0, {r0, r5}
   13b1c:	ldm	r1, {r2, r7}
   13b20:	mov	r1, #0
   13b24:	subs	r3, r0, r2
   13b28:	sbcs	r3, r5, r7
   13b2c:	movwcc	r1, #1
   13b30:	cmp	r1, #0
   13b34:	mvnne	r1, #0
   13b38:	subs	r0, r2, r0
   13b3c:	sbcs	r0, r7, r5
   13b40:	movwcc	r1, #1
   13b44:	pop	{r5, r7, fp, lr}
   13b48:	mov	r0, r1
   13b4c:	bx	lr
   13b50:	cmp	r1, #0
   13b54:	mvnne	r1, #0
   13b58:	mov	r0, r1
   13b5c:	bx	lr

00013b60 <table_compare_short@@Base>:
   13b60:	cmp	r0, #0
   13b64:	beq	13b98 <table_compare_short@@Base+0x38>
   13b68:	cmp	r1, #0
   13b6c:	moveq	r1, #1
   13b70:	moveq	r0, r1
   13b74:	bxeq	lr
   13b78:	ldrsh	r2, [r1]
   13b7c:	ldrsh	r0, [r0]
   13b80:	mov	r1, #0
   13b84:	cmp	r0, r2
   13b88:	mvnlt	r1, #0
   13b8c:	movwgt	r1, #1
   13b90:	mov	r0, r1
   13b94:	bx	lr
   13b98:	cmp	r1, #0
   13b9c:	mvnne	r1, #0
   13ba0:	mov	r0, r1
   13ba4:	bx	lr

00013ba8 <table_compare_ushort@@Base>:
   13ba8:	cmp	r0, #0
   13bac:	beq	13be0 <table_compare_ushort@@Base+0x38>
   13bb0:	cmp	r1, #0
   13bb4:	moveq	r1, #1
   13bb8:	moveq	r0, r1
   13bbc:	bxeq	lr
   13bc0:	ldrh	r2, [r1]
   13bc4:	ldrh	r0, [r0]
   13bc8:	mov	r1, #0
   13bcc:	cmp	r0, r2
   13bd0:	mvncc	r1, #0
   13bd4:	movwhi	r1, #1
   13bd8:	mov	r0, r1
   13bdc:	bx	lr
   13be0:	cmp	r1, #0
   13be4:	mvnne	r1, #0
   13be8:	mov	r0, r1
   13bec:	bx	lr

00013bf0 <table_compare_long@@Base>:
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c28 <table_compare_long@@Base+0x38>
   13bf8:	cmp	r1, #0
   13bfc:	moveq	r1, #1
   13c00:	moveq	r0, r1
   13c04:	bxeq	lr
   13c08:	ldr	r2, [r1]
   13c0c:	ldr	r0, [r0]
   13c10:	mov	r1, #0
   13c14:	cmp	r0, r2
   13c18:	mvnlt	r1, #0
   13c1c:	movwgt	r1, #1
   13c20:	mov	r0, r1
   13c24:	bx	lr
   13c28:	cmp	r1, #0
   13c2c:	mvnne	r1, #0
   13c30:	mov	r0, r1
   13c34:	bx	lr

00013c38 <table_compare_ulong@@Base>:
   13c38:	cmp	r0, #0
   13c3c:	beq	13c70 <table_compare_ulong@@Base+0x38>
   13c40:	cmp	r1, #0
   13c44:	moveq	r1, #1
   13c48:	moveq	r0, r1
   13c4c:	bxeq	lr
   13c50:	ldr	r2, [r1]
   13c54:	ldr	r0, [r0]
   13c58:	mov	r1, #0
   13c5c:	cmp	r0, r2
   13c60:	mvncc	r1, #0
   13c64:	movwhi	r1, #1
   13c68:	mov	r0, r1
   13c6c:	bx	lr
   13c70:	cmp	r1, #0
   13c74:	mvnne	r1, #0
   13c78:	mov	r0, r1
   13c7c:	bx	lr

00013c80 <table_compare_llong@@Base>:
   13c80:	cmp	r0, #0
   13c84:	beq	13cd8 <table_compare_llong@@Base+0x58>
   13c88:	cmp	r1, #0
   13c8c:	moveq	r1, #1
   13c90:	moveq	r0, r1
   13c94:	bxeq	lr
   13c98:	push	{r5, r7, fp, lr}
   13c9c:	add	fp, sp, #8
   13ca0:	ldm	r0, {r0, r5}
   13ca4:	ldm	r1, {r2, r7}
   13ca8:	mov	r1, #0
   13cac:	subs	r3, r0, r2
   13cb0:	sbcs	r3, r5, r7
   13cb4:	movwlt	r1, #1
   13cb8:	cmp	r1, #0
   13cbc:	mvnne	r1, #0
   13cc0:	subs	r0, r2, r0
   13cc4:	sbcs	r0, r7, r5
   13cc8:	movwlt	r1, #1
   13ccc:	pop	{r5, r7, fp, lr}
   13cd0:	mov	r0, r1
   13cd4:	bx	lr
   13cd8:	cmp	r1, #0
   13cdc:	mvnne	r1, #0
   13ce0:	mov	r0, r1
   13ce4:	bx	lr

00013ce8 <table_compare_ullong@@Base>:
   13ce8:	cmp	r0, #0
   13cec:	beq	13d20 <table_compare_ullong@@Base+0x38>
   13cf0:	cmp	r1, #0
   13cf4:	moveq	r1, #1
   13cf8:	moveq	r0, r1
   13cfc:	bxeq	lr
   13d00:	ldr	r2, [r1]
   13d04:	ldr	r0, [r0]
   13d08:	mov	r1, #0
   13d0c:	cmp	r0, r2
   13d10:	mvncc	r1, #0
   13d14:	movwhi	r1, #1
   13d18:	mov	r0, r1
   13d1c:	bx	lr
   13d20:	cmp	r1, #0
   13d24:	mvnne	r1, #0
   13d28:	mov	r0, r1
   13d2c:	bx	lr

00013d30 <table_compare_float@@Base>:
   13d30:	cmp	r0, #0
   13d34:	beq	13d6c <table_compare_float@@Base+0x3c>
   13d38:	cmp	r1, #0
   13d3c:	moveq	r1, #1
   13d40:	moveq	r0, r1
   13d44:	bxeq	lr
   13d48:	vldr	s0, [r1]
   13d4c:	vldr	s2, [r0]
   13d50:	mov	r1, #0
   13d54:	vcmpe.f32	s2, s0
   13d58:	vmrs	APSR_nzcv, fpscr
   13d5c:	mvnmi	r1, #0
   13d60:	movwgt	r1, #1
   13d64:	mov	r0, r1
   13d68:	bx	lr
   13d6c:	cmp	r1, #0
   13d70:	mvnne	r1, #0
   13d74:	mov	r0, r1
   13d78:	bx	lr

00013d7c <table_compare_double@@Base>:
   13d7c:	cmp	r0, #0
   13d80:	beq	13db8 <table_compare_double@@Base+0x3c>
   13d84:	cmp	r1, #0
   13d88:	moveq	r1, #1
   13d8c:	moveq	r0, r1
   13d90:	bxeq	lr
   13d94:	vldr	d16, [r1]
   13d98:	vldr	d17, [r0]
   13d9c:	mov	r1, #0
   13da0:	vcmpe.f64	d17, d16
   13da4:	vmrs	APSR_nzcv, fpscr
   13da8:	mvnmi	r1, #0
   13dac:	movwgt	r1, #1
   13db0:	mov	r0, r1
   13db4:	bx	lr
   13db8:	cmp	r1, #0
   13dbc:	mvnne	r1, #0
   13dc0:	mov	r0, r1
   13dc4:	bx	lr

00013dc8 <table_compare_ldouble@@Base>:
   13dc8:	cmp	r0, #0
   13dcc:	beq	13e04 <table_compare_ldouble@@Base+0x3c>
   13dd0:	cmp	r1, #0
   13dd4:	moveq	r1, #1
   13dd8:	moveq	r0, r1
   13ddc:	bxeq	lr
   13de0:	vldr	d16, [r1]
   13de4:	vldr	d17, [r0]
   13de8:	mov	r1, #0
   13dec:	vcmpe.f64	d17, d16
   13df0:	vmrs	APSR_nzcv, fpscr
   13df4:	mvnmi	r1, #0
   13df8:	movwgt	r1, #1
   13dfc:	mov	r0, r1
   13e00:	bx	lr
   13e04:	cmp	r1, #0
   13e08:	mvnne	r1, #0
   13e0c:	mov	r0, r1
   13e10:	bx	lr

00013e14 <table_compare_char@@Base>:
   13e14:	cmp	r0, #0
   13e18:	beq	13e4c <table_compare_char@@Base+0x38>
   13e1c:	cmp	r1, #0
   13e20:	moveq	r1, #1
   13e24:	moveq	r0, r1
   13e28:	bxeq	lr
   13e2c:	ldrb	r2, [r1]
   13e30:	ldrb	r0, [r0]
   13e34:	mov	r1, #0
   13e38:	cmp	r0, r2
   13e3c:	mvncc	r1, #0
   13e40:	movwhi	r1, #1
   13e44:	mov	r0, r1
   13e48:	bx	lr
   13e4c:	cmp	r1, #0
   13e50:	mvnne	r1, #0
   13e54:	mov	r0, r1
   13e58:	bx	lr

00013e5c <table_compare_uchar@@Base>:
   13e5c:	cmp	r0, #0
   13e60:	beq	13e94 <table_compare_uchar@@Base+0x38>
   13e64:	cmp	r1, #0
   13e68:	moveq	r1, #1
   13e6c:	moveq	r0, r1
   13e70:	bxeq	lr
   13e74:	ldrb	r2, [r1]
   13e78:	ldrb	r0, [r0]
   13e7c:	mov	r1, #0
   13e80:	cmp	r0, r2
   13e84:	mvncc	r1, #0
   13e88:	movwhi	r1, #1
   13e8c:	mov	r0, r1
   13e90:	bx	lr
   13e94:	cmp	r1, #0
   13e98:	mvnne	r1, #0
   13e9c:	mov	r0, r1
   13ea0:	bx	lr

00013ea4 <table_compare_string@@Base>:
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ec0 <table_compare_string@@Base+0x1c>
   13eac:	cmp	r1, #0
   13eb0:	moveq	r1, #1
   13eb4:	moveq	r0, r1
   13eb8:	bxeq	lr
   13ebc:	b	11f80 <strcmp@plt>
   13ec0:	cmp	r1, #0
   13ec4:	mvnne	r1, #0
   13ec8:	mov	r0, r1
   13ecc:	bx	lr

00013ed0 <table_compare_ptr@@Base>:
   13ed0:	cmp	r0, r1
   13ed4:	mov	r2, #0
   13ed8:	mvncc	r2, #0
   13edc:	movwhi	r2, #1
   13ee0:	mov	r0, r2
   13ee4:	bx	lr

00013ee8 <table_get_default_compare_function_for_data_type@@Base>:
   13ee8:	cmp	r0, #23
   13eec:	movhi	r0, #0
   13ef0:	bxhi	lr
   13ef4:	movw	r1, #26248	; 0x6688
   13ef8:	movt	r1, #1
   13efc:	ldr	r0, [r1, r0, lsl #2]
   13f00:	bx	lr

00013f04 <table_get@@Base>:
   13f04:	push	{fp, lr}
   13f08:	mov	fp, sp
   13f0c:	bl	15b14 <table_get_cell_ptr@@Base>
   13f10:	ldr	r0, [r0]
   13f14:	pop	{fp, pc}

00013f18 <table_get_bool@@Base>:
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	bl	15b14 <table_get_cell_ptr@@Base>
   13f24:	ldr	r0, [r0]
   13f28:	ldrb	r0, [r0]
   13f2c:	pop	{fp, pc}

00013f30 <table_get_int@@Base>:
   13f30:	push	{fp, lr}
   13f34:	mov	fp, sp
   13f38:	bl	15b14 <table_get_cell_ptr@@Base>
   13f3c:	ldr	r0, [r0]
   13f40:	ldr	r0, [r0]
   13f44:	pop	{fp, pc}

00013f48 <table_get_uint@@Base>:
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	bl	15b14 <table_get_cell_ptr@@Base>
   13f54:	ldr	r0, [r0]
   13f58:	ldr	r0, [r0]
   13f5c:	pop	{fp, pc}

00013f60 <table_get_int8@@Base>:
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	bl	15b14 <table_get_cell_ptr@@Base>
   13f6c:	ldr	r0, [r0]
   13f70:	ldrsb	r0, [r0]
   13f74:	pop	{fp, pc}

00013f78 <table_get_uint8@@Base>:
   13f78:	push	{fp, lr}
   13f7c:	mov	fp, sp
   13f80:	bl	15b14 <table_get_cell_ptr@@Base>
   13f84:	ldr	r0, [r0]
   13f88:	ldrb	r0, [r0]
   13f8c:	pop	{fp, pc}

00013f90 <table_get_int16@@Base>:
   13f90:	push	{fp, lr}
   13f94:	mov	fp, sp
   13f98:	bl	15b14 <table_get_cell_ptr@@Base>
   13f9c:	ldr	r0, [r0]
   13fa0:	ldrsh	r0, [r0]
   13fa4:	pop	{fp, pc}

00013fa8 <table_get_uint16@@Base>:
   13fa8:	push	{fp, lr}
   13fac:	mov	fp, sp
   13fb0:	bl	15b14 <table_get_cell_ptr@@Base>
   13fb4:	ldr	r0, [r0]
   13fb8:	ldrh	r0, [r0]
   13fbc:	pop	{fp, pc}

00013fc0 <table_get_int32@@Base>:
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	bl	15b14 <table_get_cell_ptr@@Base>
   13fcc:	ldr	r0, [r0]
   13fd0:	ldr	r0, [r0]
   13fd4:	pop	{fp, pc}

00013fd8 <table_get_uint32@@Base>:
   13fd8:	push	{fp, lr}
   13fdc:	mov	fp, sp
   13fe0:	bl	15b14 <table_get_cell_ptr@@Base>
   13fe4:	ldr	r0, [r0]
   13fe8:	ldr	r0, [r0]
   13fec:	pop	{fp, pc}

00013ff0 <table_get_int64@@Base>:
   13ff0:	push	{fp, lr}
   13ff4:	mov	fp, sp
   13ff8:	bl	15b14 <table_get_cell_ptr@@Base>
   13ffc:	ldr	r0, [r0]
   14000:	ldrd	r0, [r0]
   14004:	pop	{fp, pc}

00014008 <table_get_uint64@@Base>:
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	bl	15b14 <table_get_cell_ptr@@Base>
   14014:	ldr	r0, [r0]
   14018:	ldrd	r0, [r0]
   1401c:	pop	{fp, pc}

00014020 <table_get_short@@Base>:
   14020:	push	{fp, lr}
   14024:	mov	fp, sp
   14028:	bl	15b14 <table_get_cell_ptr@@Base>
   1402c:	ldr	r0, [r0]
   14030:	ldrsh	r0, [r0]
   14034:	pop	{fp, pc}

00014038 <table_get_ushort@@Base>:
   14038:	push	{fp, lr}
   1403c:	mov	fp, sp
   14040:	bl	15b14 <table_get_cell_ptr@@Base>
   14044:	ldr	r0, [r0]
   14048:	ldrh	r0, [r0]
   1404c:	pop	{fp, pc}

00014050 <table_get_long@@Base>:
   14050:	push	{fp, lr}
   14054:	mov	fp, sp
   14058:	bl	15b14 <table_get_cell_ptr@@Base>
   1405c:	ldr	r0, [r0]
   14060:	ldr	r0, [r0]
   14064:	pop	{fp, pc}

00014068 <table_get_ulong@@Base>:
   14068:	push	{fp, lr}
   1406c:	mov	fp, sp
   14070:	bl	15b14 <table_get_cell_ptr@@Base>
   14074:	ldr	r0, [r0]
   14078:	ldr	r0, [r0]
   1407c:	pop	{fp, pc}

00014080 <table_get_llong@@Base>:
   14080:	push	{fp, lr}
   14084:	mov	fp, sp
   14088:	bl	15b14 <table_get_cell_ptr@@Base>
   1408c:	ldr	r0, [r0]
   14090:	ldrd	r0, [r0]
   14094:	pop	{fp, pc}

00014098 <table_get_ullong@@Base>:
   14098:	push	{fp, lr}
   1409c:	mov	fp, sp
   140a0:	bl	15b14 <table_get_cell_ptr@@Base>
   140a4:	ldr	r0, [r0]
   140a8:	ldrd	r0, [r0]
   140ac:	pop	{fp, pc}

000140b0 <table_get_float@@Base>:
   140b0:	push	{fp, lr}
   140b4:	mov	fp, sp
   140b8:	bl	15b14 <table_get_cell_ptr@@Base>
   140bc:	ldr	r0, [r0]
   140c0:	vldr	s0, [r0]
   140c4:	pop	{fp, pc}

000140c8 <table_get_double@@Base>:
   140c8:	push	{fp, lr}
   140cc:	mov	fp, sp
   140d0:	bl	15b14 <table_get_cell_ptr@@Base>
   140d4:	ldr	r0, [r0]
   140d8:	vldr	d0, [r0]
   140dc:	pop	{fp, pc}

000140e0 <table_get_ldouble@@Base>:
   140e0:	push	{fp, lr}
   140e4:	mov	fp, sp
   140e8:	bl	15b14 <table_get_cell_ptr@@Base>
   140ec:	ldr	r0, [r0]
   140f0:	vldr	d0, [r0]
   140f4:	pop	{fp, pc}

000140f8 <table_get_char@@Base>:
   140f8:	push	{fp, lr}
   140fc:	mov	fp, sp
   14100:	bl	15b14 <table_get_cell_ptr@@Base>
   14104:	ldr	r0, [r0]
   14108:	ldrb	r0, [r0]
   1410c:	pop	{fp, pc}

00014110 <table_get_uchar@@Base>:
   14110:	push	{fp, lr}
   14114:	mov	fp, sp
   14118:	bl	15b14 <table_get_cell_ptr@@Base>
   1411c:	ldr	r0, [r0]
   14120:	ldrb	r0, [r0]
   14124:	pop	{fp, pc}

00014128 <table_get_string@@Base>:
   14128:	push	{fp, lr}
   1412c:	mov	fp, sp
   14130:	bl	15b14 <table_get_cell_ptr@@Base>
   14134:	ldr	r0, [r0]
   14138:	pop	{fp, pc}

0001413c <table_get_ptr@@Base>:
   1413c:	push	{fp, lr}
   14140:	mov	fp, sp
   14144:	bl	15b14 <table_get_cell_ptr@@Base>
   14148:	ldr	r0, [r0]
   1414c:	pop	{fp, pc}

00014150 <table_row_init@@Base>:
   14150:	push	{r4, r5, fp, lr}
   14154:	add	fp, sp, #8
   14158:	mov	r4, r1
   1415c:	ldr	r1, [r0, #12]
   14160:	ldr	r5, [r0, #16]
   14164:	lsl	r0, r1, #2
   14168:	bl	11fc8 <malloc@plt>
   1416c:	str	r0, [r5, r4, lsl #2]
   14170:	pop	{r4, r5, fp, pc}

00014174 <table_get_row_ptr@@Base>:
   14174:	ldr	r0, [r0, #16]
   14178:	add	r0, r0, r1, lsl #2
   1417c:	bx	lr

00014180 <table_row_destroy@@Base>:
   14180:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14184:	add	fp, sp, #24
   14188:	mov	r4, r1
   1418c:	mov	r5, r0
   14190:	bl	13404 <table_get_column_length@@Base>
   14194:	ldr	r8, [r5, #16]
   14198:	cmp	r0, #1
   1419c:	blt	141c4 <table_row_destroy@@Base+0x44>
   141a0:	mov	r6, r0
   141a4:	mov	r7, #0
   141a8:	mov	r0, r5
   141ac:	mov	r1, r4
   141b0:	mov	r2, r7
   141b4:	bl	15b30 <table_cell_destroy@@Base>
   141b8:	add	r7, r7, #1
   141bc:	cmp	r6, r7
   141c0:	bne	141a8 <table_row_destroy@@Base+0x28>
   141c4:	ldr	r0, [r8, r4, lsl #2]
   141c8:	cmp	r0, #0
   141cc:	beq	141d8 <table_row_destroy@@Base+0x58>
   141d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d4:	b	11f98 <free@plt>
   141d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000141dc <table_get_row_length@@Base>:
   141dc:	ldr	r0, [r0, #20]
   141e0:	bx	lr

000141e4 <table_add_row@@Base>:
   141e4:	push	{r4, r5, r6, r7, fp, lr}
   141e8:	add	fp, sp, #16
   141ec:	ldr	r5, [r0, #20]
   141f0:	ldr	r1, [r0, #24]
   141f4:	mov	r4, r0
   141f8:	udiv	r0, r5, r1
   141fc:	mls	r0, r0, r1, r5
   14200:	cmp	r0, #0
   14204:	bne	14228 <table_add_row@@Base+0x44>
   14208:	ldr	r2, [r4, #28]
   1420c:	ldr	r0, [r4, #16]
   14210:	add	r1, r2, r1
   14214:	str	r1, [r4, #28]
   14218:	lsl	r1, r1, #2
   1421c:	bl	11fb0 <realloc@plt>
   14220:	str	r0, [r4, #16]
   14224:	ldr	r5, [r4, #20]
   14228:	mov	r0, r4
   1422c:	bl	13404 <table_get_column_length@@Base>
   14230:	mov	r6, r0
   14234:	ldr	r0, [r4, #12]
   14238:	ldr	r7, [r4, #16]
   1423c:	lsl	r0, r0, #2
   14240:	bl	11fc8 <malloc@plt>
   14244:	cmp	r6, #1
   14248:	str	r0, [r7, r5, lsl #2]
   1424c:	blt	14270 <table_add_row@@Base+0x8c>
   14250:	mov	r7, #0
   14254:	mov	r0, r4
   14258:	mov	r1, r5
   1425c:	mov	r2, r7
   14260:	bl	15af4 <table_cell_init@@Base>
   14264:	add	r7, r7, #1
   14268:	cmp	r6, r7
   1426c:	bne	14254 <table_add_row@@Base+0x70>
   14270:	ldr	r1, [r4, #20]
   14274:	mov	r0, r4
   14278:	mvn	r2, #0
   1427c:	mov	r3, #2
   14280:	bl	132f4 <table_notify@@Base>
   14284:	ldr	r0, [r4, #20]
   14288:	add	r1, r0, #1
   1428c:	str	r1, [r4, #20]
   14290:	pop	{r4, r5, r6, r7, fp, pc}

00014294 <table_remove_row@@Base>:
   14294:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14298:	add	fp, sp, #24
   1429c:	ldr	r8, [r0, #20]
   142a0:	mov	r4, r1
   142a4:	mov	r5, r0
   142a8:	bl	13404 <table_get_column_length@@Base>
   142ac:	cmp	r0, #1
   142b0:	blt	14304 <table_remove_row@@Base+0x70>
   142b4:	mov	r6, r0
   142b8:	mov	r7, #0
   142bc:	b	142cc <table_remove_row@@Base+0x38>
   142c0:	add	r7, r7, #1
   142c4:	cmp	r6, r7
   142c8:	beq	14304 <table_remove_row@@Base+0x70>
   142cc:	mov	r0, r5
   142d0:	mov	r1, r7
   142d4:	bl	13488 <table_get_column_data_type@@Base>
   142d8:	cmp	r0, #23
   142dc:	beq	142c0 <table_remove_row@@Base+0x2c>
   142e0:	mov	r0, r5
   142e4:	mov	r1, r4
   142e8:	mov	r2, r7
   142ec:	bl	15b14 <table_get_cell_ptr@@Base>
   142f0:	ldr	r0, [r0]
   142f4:	cmp	r0, #0
   142f8:	beq	142c0 <table_remove_row@@Base+0x2c>
   142fc:	bl	11f98 <free@plt>
   14300:	b	142c0 <table_remove_row@@Base+0x2c>
   14304:	ldr	r0, [r5, #16]
   14308:	ldr	r0, [r0, r4, lsl #2]
   1430c:	cmp	r0, #0
   14310:	beq	14318 <table_remove_row@@Base+0x84>
   14314:	bl	11f98 <free@plt>
   14318:	sub	r0, r8, #1
   1431c:	cmp	r0, r4
   14320:	ble	14390 <table_remove_row@@Base+0xfc>
   14324:	mvn	r0, r4
   14328:	add	r1, r8, r0
   1432c:	sub	r0, r8, #2
   14330:	tst	r1, #1
   14334:	mov	r1, r4
   14338:	beq	14350 <table_remove_row@@Base+0xbc>
   1433c:	ldr	r1, [r5, #16]
   14340:	add	r2, r1, r4, lsl #2
   14344:	ldr	r2, [r2, #4]
   14348:	str	r2, [r1, r4, lsl #2]
   1434c:	add	r1, r4, #1
   14350:	cmp	r0, r4
   14354:	beq	14390 <table_remove_row@@Base+0xfc>
   14358:	mvn	r0, r1
   1435c:	lsl	r1, r1, #2
   14360:	add	r0, r0, r8
   14364:	ldr	r2, [r5, #16]
   14368:	subs	r0, r0, #2
   1436c:	add	r3, r2, r1
   14370:	ldr	r3, [r3, #4]
   14374:	str	r3, [r2, r1]
   14378:	ldr	r2, [r5, #16]
   1437c:	add	r2, r2, r1
   14380:	add	r1, r1, #8
   14384:	ldr	r3, [r2, #8]
   14388:	str	r3, [r2, #4]
   1438c:	bne	14364 <table_remove_row@@Base+0xd0>
   14390:	ldr	r0, [r5, #20]
   14394:	ldr	r1, [r5, #24]
   14398:	sub	r0, r0, #1
   1439c:	udiv	r2, r0, r1
   143a0:	str	r0, [r5, #20]
   143a4:	mls	r0, r2, r1, r0
   143a8:	cmp	r0, #0
   143ac:	bne	143cc <table_remove_row@@Base+0x138>
   143b0:	ldr	r2, [r5, #28]
   143b4:	ldr	r0, [r5, #16]
   143b8:	sub	r1, r2, r1
   143bc:	str	r1, [r5, #28]
   143c0:	lsl	r1, r1, #2
   143c4:	bl	11fb0 <realloc@plt>
   143c8:	str	r0, [r5, #16]
   143cc:	mov	r0, r5
   143d0:	mov	r1, r4
   143d4:	mvn	r2, #0
   143d8:	mov	r3, #4
   143dc:	bl	132f4 <table_notify@@Base>
   143e0:	mov	r0, #0
   143e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000143e8 <table_set_row_ptr@@Base>:
   143e8:	ldr	r2, [r2]
   143ec:	ldr	r0, [r0, #16]
   143f0:	str	r2, [r0, r1, lsl #2]
   143f4:	bx	lr

000143f8 <table_set@@Base>:
   143f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143fc:	add	fp, sp, #24
   14400:	mov	r8, r3
   14404:	mov	r4, r2
   14408:	mov	r9, r1
   1440c:	mov	r6, r0
   14410:	bl	15b14 <table_get_cell_ptr@@Base>
   14414:	mov	r5, r0
   14418:	mov	r0, r6
   1441c:	mov	r1, r4
   14420:	bl	133dc <table_get_col_ptr@@Base>
   14424:	ldr	r1, [fp, #8]
   14428:	mvn	r7, #0
   1442c:	cmp	r1, #23
   14430:	bhi	146f4 <table_set@@Base+0x2fc>
   14434:	add	r2, pc, #0
   14438:	ldr	pc, [r2, r1, lsl #2]
   1443c:	muleq	r1, ip, r4
   14440:	andeq	r4, r1, ip, lsr #9
   14444:			; <UNDEFINED> instruction: 0x000144bc
   14448:	andeq	r4, r1, ip, asr #9
   1444c:	ldrdeq	r4, [r1], -ip
   14450:	andeq	r4, r1, ip, ror #9
   14454:	strdeq	r4, [r1], -ip
   14458:	andeq	r4, r1, ip, lsl #10
   1445c:	andeq	r4, r1, ip, lsl r5
   14460:	andeq	r4, r1, ip, lsr #10
   14464:	andeq	r4, r1, ip, lsr r5
   14468:	andeq	r4, r1, ip, asr #10
   1446c:	andeq	r4, r1, r4, lsl #11
   14470:	muleq	r1, r4, r5
   14474:	andeq	r4, r1, r4, lsr #11
   14478:			; <UNDEFINED> instruction: 0x000145b4
   1447c:	andeq	r4, r1, r4, asr #11
   14480:	strdeq	r4, [r1], -ip
   14484:	andeq	r4, r1, ip, lsl #12
   14488:	andeq	r4, r1, ip, asr #12
   1448c:	andeq	r4, r1, ip, asr r6
   14490:	andeq	r4, r1, ip, ror #12
   14494:	andeq	r4, r1, r8, lsr #13
   14498:	strdeq	r4, [r1], -ip
   1449c:	ldr	r0, [r0, #4]
   144a0:	cmp	r0, #0
   144a4:	bne	146f4 <table_set@@Base+0x2fc>
   144a8:	b	145d0 <table_set@@Base+0x1d8>
   144ac:	ldr	r0, [r0, #4]
   144b0:	cmp	r0, #1
   144b4:	beq	145d0 <table_set@@Base+0x1d8>
   144b8:	b	146f4 <table_set@@Base+0x2fc>
   144bc:	ldr	r0, [r0, #4]
   144c0:	cmp	r0, #2
   144c4:	beq	146b4 <table_set@@Base+0x2bc>
   144c8:	b	146f4 <table_set@@Base+0x2fc>
   144cc:	ldr	r0, [r0, #4]
   144d0:	cmp	r0, #3
   144d4:	beq	146b4 <table_set@@Base+0x2bc>
   144d8:	b	146f4 <table_set@@Base+0x2fc>
   144dc:	ldr	r0, [r0, #4]
   144e0:	cmp	r0, #4
   144e4:	beq	14558 <table_set@@Base+0x160>
   144e8:	b	146f4 <table_set@@Base+0x2fc>
   144ec:	ldr	r0, [r0, #4]
   144f0:	cmp	r0, #5
   144f4:	beq	14558 <table_set@@Base+0x160>
   144f8:	b	146f4 <table_set@@Base+0x2fc>
   144fc:	ldr	r0, [r0, #4]
   14500:	cmp	r0, #6
   14504:	beq	145d0 <table_set@@Base+0x1d8>
   14508:	b	146f4 <table_set@@Base+0x2fc>
   1450c:	ldr	r0, [r0, #4]
   14510:	cmp	r0, #7
   14514:	beq	145d0 <table_set@@Base+0x1d8>
   14518:	b	146f4 <table_set@@Base+0x2fc>
   1451c:	ldr	r0, [r0, #4]
   14520:	cmp	r0, #8
   14524:	beq	14618 <table_set@@Base+0x220>
   14528:	b	146f4 <table_set@@Base+0x2fc>
   1452c:	ldr	r0, [r0, #4]
   14530:	cmp	r0, #9
   14534:	beq	14618 <table_set@@Base+0x220>
   14538:	b	146f4 <table_set@@Base+0x2fc>
   1453c:	ldr	r0, [r0, #4]
   14540:	cmp	r0, #10
   14544:	beq	14558 <table_set@@Base+0x160>
   14548:	b	146f4 <table_set@@Base+0x2fc>
   1454c:	ldr	r0, [r0, #4]
   14550:	cmp	r0, #11
   14554:	bne	146f4 <table_set@@Base+0x2fc>
   14558:	ldr	r0, [r5]
   1455c:	cmp	r0, #0
   14560:	bne	14578 <table_set@@Base+0x180>
   14564:	mov	r0, #2
   14568:	bl	11fc8 <malloc@plt>
   1456c:	cmp	r0, #0
   14570:	str	r0, [r5]
   14574:	beq	146f4 <table_set@@Base+0x2fc>
   14578:	ldrh	r1, [r8]
   1457c:	strh	r1, [r0]
   14580:	b	146dc <table_set@@Base+0x2e4>
   14584:	ldr	r0, [r0, #4]
   14588:	cmp	r0, #12
   1458c:	beq	145d0 <table_set@@Base+0x1d8>
   14590:	b	146f4 <table_set@@Base+0x2fc>
   14594:	ldr	r0, [r0, #4]
   14598:	cmp	r0, #13
   1459c:	beq	145d0 <table_set@@Base+0x1d8>
   145a0:	b	146f4 <table_set@@Base+0x2fc>
   145a4:	ldr	r0, [r0, #4]
   145a8:	cmp	r0, #14
   145ac:	beq	14618 <table_set@@Base+0x220>
   145b0:	b	146f4 <table_set@@Base+0x2fc>
   145b4:	ldr	r0, [r0, #4]
   145b8:	cmp	r0, #15
   145bc:	beq	14618 <table_set@@Base+0x220>
   145c0:	b	146f4 <table_set@@Base+0x2fc>
   145c4:	ldr	r0, [r0, #4]
   145c8:	cmp	r0, #16
   145cc:	bne	146f4 <table_set@@Base+0x2fc>
   145d0:	ldr	r0, [r5]
   145d4:	cmp	r0, #0
   145d8:	bne	145f0 <table_set@@Base+0x1f8>
   145dc:	mov	r0, #4
   145e0:	bl	11fc8 <malloc@plt>
   145e4:	cmp	r0, #0
   145e8:	str	r0, [r5]
   145ec:	beq	146f4 <table_set@@Base+0x2fc>
   145f0:	ldr	r1, [r8]
   145f4:	str	r1, [r0]
   145f8:	b	146dc <table_set@@Base+0x2e4>
   145fc:	ldr	r0, [r0, #4]
   14600:	cmp	r0, #17
   14604:	beq	14618 <table_set@@Base+0x220>
   14608:	b	146f4 <table_set@@Base+0x2fc>
   1460c:	ldr	r0, [r0, #4]
   14610:	cmp	r0, #18
   14614:	bne	146f4 <table_set@@Base+0x2fc>
   14618:	ldr	r0, [r5]
   1461c:	cmp	r0, #0
   14620:	bne	14638 <table_set@@Base+0x240>
   14624:	mov	r0, #8
   14628:	bl	11fc8 <malloc@plt>
   1462c:	cmp	r0, #0
   14630:	str	r0, [r5]
   14634:	beq	146f4 <table_set@@Base+0x2fc>
   14638:	ldr	r1, [r8]
   1463c:	ldr	r2, [r8, #4]
   14640:	str	r2, [r0, #4]
   14644:	str	r1, [r0]
   14648:	b	146dc <table_set@@Base+0x2e4>
   1464c:	ldr	r0, [r0, #4]
   14650:	cmp	r0, #19
   14654:	beq	146b4 <table_set@@Base+0x2bc>
   14658:	b	146f4 <table_set@@Base+0x2fc>
   1465c:	ldr	r0, [r0, #4]
   14660:	cmp	r0, #20
   14664:	beq	146b4 <table_set@@Base+0x2bc>
   14668:	b	146f4 <table_set@@Base+0x2fc>
   1466c:	ldr	r0, [r0, #4]
   14670:	cmp	r0, #21
   14674:	bne	146f4 <table_set@@Base+0x2fc>
   14678:	mov	r0, r8
   1467c:	bl	11fec <strlen@plt>
   14680:	ldr	r2, [r5]
   14684:	add	r1, r0, #1
   14688:	mov	r0, r2
   1468c:	bl	11fb0 <realloc@plt>
   14690:	cmp	r0, #0
   14694:	str	r0, [r5]
   14698:	beq	146f4 <table_set@@Base+0x2fc>
   1469c:	mov	r1, r8
   146a0:	bl	11fbc <strcpy@plt>
   146a4:	b	146dc <table_set@@Base+0x2e4>
   146a8:	ldr	r0, [r0, #4]
   146ac:	cmp	r0, #22
   146b0:	bne	146f4 <table_set@@Base+0x2fc>
   146b4:	ldr	r0, [r5]
   146b8:	cmp	r0, #0
   146bc:	bne	146d4 <table_set@@Base+0x2dc>
   146c0:	mov	r0, #1
   146c4:	bl	11fc8 <malloc@plt>
   146c8:	cmp	r0, #0
   146cc:	str	r0, [r5]
   146d0:	beq	146f4 <table_set@@Base+0x2fc>
   146d4:	ldrb	r1, [r8]
   146d8:	strb	r1, [r0]
   146dc:	mov	r0, r6
   146e0:	mov	r1, r9
   146e4:	mov	r2, r4
   146e8:	mov	r3, #1
   146ec:	bl	132f4 <table_notify@@Base>
   146f0:	mov	r7, #0
   146f4:	mov	r0, r7
   146f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   146fc:	ldr	r0, [r0, #4]
   14700:	cmp	r0, #23
   14704:	bne	146f4 <table_set@@Base+0x2fc>
   14708:	str	r8, [r5]
   1470c:	b	146dc <table_set@@Base+0x2e4>

00014710 <table_set_bool@@Base>:
   14710:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14714:	add	fp, sp, #24
   14718:	mov	r8, r3
   1471c:	mov	r4, r2
   14720:	mov	r9, r1
   14724:	mov	r6, r0
   14728:	bl	15b14 <table_get_cell_ptr@@Base>
   1472c:	mov	r5, r0
   14730:	mov	r0, r6
   14734:	mov	r1, r4
   14738:	bl	133dc <table_get_col_ptr@@Base>
   1473c:	ldr	r0, [r0, #4]
   14740:	mvn	r7, #0
   14744:	cmp	r0, #22
   14748:	bne	14788 <table_set_bool@@Base+0x78>
   1474c:	ldr	r0, [r5]
   14750:	cmp	r0, #0
   14754:	bne	1476c <table_set_bool@@Base+0x5c>
   14758:	mov	r0, #1
   1475c:	bl	11fc8 <malloc@plt>
   14760:	cmp	r0, #0
   14764:	str	r0, [r5]
   14768:	beq	14788 <table_set_bool@@Base+0x78>
   1476c:	strb	r8, [r0]
   14770:	mov	r0, r6
   14774:	mov	r1, r9
   14778:	mov	r2, r4
   1477c:	mov	r3, #1
   14780:	bl	132f4 <table_notify@@Base>
   14784:	mov	r7, #0
   14788:	mov	r0, r7
   1478c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014790 <table_set_int@@Base>:
   14790:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14794:	add	fp, sp, #24
   14798:	mov	r8, r3
   1479c:	mov	r4, r2
   147a0:	mov	r5, r1
   147a4:	mov	r6, r0
   147a8:	bl	15b14 <table_get_cell_ptr@@Base>
   147ac:	mov	r9, r0
   147b0:	mov	r0, r6
   147b4:	mov	r1, r4
   147b8:	bl	133dc <table_get_col_ptr@@Base>
   147bc:	ldr	r0, [r0, #4]
   147c0:	mvn	r7, #0
   147c4:	cmp	r0, #0
   147c8:	bne	14808 <table_set_int@@Base+0x78>
   147cc:	ldr	r0, [r9]
   147d0:	cmp	r0, #0
   147d4:	bne	147ec <table_set_int@@Base+0x5c>
   147d8:	mov	r0, #4
   147dc:	bl	11fc8 <malloc@plt>
   147e0:	cmp	r0, #0
   147e4:	str	r0, [r9]
   147e8:	beq	14808 <table_set_int@@Base+0x78>
   147ec:	str	r8, [r0]
   147f0:	mov	r0, r6
   147f4:	mov	r1, r5
   147f8:	mov	r2, r4
   147fc:	mov	r3, #1
   14800:	bl	132f4 <table_notify@@Base>
   14804:	mov	r7, #0
   14808:	mov	r0, r7
   1480c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014810 <table_set_uint@@Base>:
   14810:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14814:	add	fp, sp, #24
   14818:	mov	r8, r3
   1481c:	mov	r4, r2
   14820:	mov	r5, r1
   14824:	mov	r6, r0
   14828:	bl	15b14 <table_get_cell_ptr@@Base>
   1482c:	mov	r9, r0
   14830:	mov	r0, r6
   14834:	mov	r1, r4
   14838:	bl	133dc <table_get_col_ptr@@Base>
   1483c:	ldr	r0, [r0, #4]
   14840:	mvn	r7, #0
   14844:	cmp	r0, #1
   14848:	bne	14888 <table_set_uint@@Base+0x78>
   1484c:	ldr	r0, [r9]
   14850:	cmp	r0, #0
   14854:	bne	1486c <table_set_uint@@Base+0x5c>
   14858:	mov	r0, #4
   1485c:	bl	11fc8 <malloc@plt>
   14860:	cmp	r0, #0
   14864:	str	r0, [r9]
   14868:	beq	14888 <table_set_uint@@Base+0x78>
   1486c:	str	r8, [r0]
   14870:	mov	r0, r6
   14874:	mov	r1, r5
   14878:	mov	r2, r4
   1487c:	mov	r3, #1
   14880:	bl	132f4 <table_notify@@Base>
   14884:	mov	r7, #0
   14888:	mov	r0, r7
   1488c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014890 <table_set_int8@@Base>:
   14890:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14894:	add	fp, sp, #24
   14898:	mov	r8, r3
   1489c:	mov	r4, r2
   148a0:	mov	r9, r1
   148a4:	mov	r6, r0
   148a8:	bl	15b14 <table_get_cell_ptr@@Base>
   148ac:	mov	r5, r0
   148b0:	mov	r0, r6
   148b4:	mov	r1, r4
   148b8:	bl	133dc <table_get_col_ptr@@Base>
   148bc:	ldr	r0, [r0, #4]
   148c0:	mvn	r7, #0
   148c4:	cmp	r0, #2
   148c8:	bne	14908 <table_set_int8@@Base+0x78>
   148cc:	ldr	r0, [r5]
   148d0:	cmp	r0, #0
   148d4:	bne	148ec <table_set_int8@@Base+0x5c>
   148d8:	mov	r0, #1
   148dc:	bl	11fc8 <malloc@plt>
   148e0:	cmp	r0, #0
   148e4:	str	r0, [r5]
   148e8:	beq	14908 <table_set_int8@@Base+0x78>
   148ec:	strb	r8, [r0]
   148f0:	mov	r0, r6
   148f4:	mov	r1, r9
   148f8:	mov	r2, r4
   148fc:	mov	r3, #1
   14900:	bl	132f4 <table_notify@@Base>
   14904:	mov	r7, #0
   14908:	mov	r0, r7
   1490c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014910 <table_set_uint8@@Base>:
   14910:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14914:	add	fp, sp, #24
   14918:	mov	r8, r3
   1491c:	mov	r4, r2
   14920:	mov	r9, r1
   14924:	mov	r6, r0
   14928:	bl	15b14 <table_get_cell_ptr@@Base>
   1492c:	mov	r5, r0
   14930:	mov	r0, r6
   14934:	mov	r1, r4
   14938:	bl	133dc <table_get_col_ptr@@Base>
   1493c:	ldr	r0, [r0, #4]
   14940:	mvn	r7, #0
   14944:	cmp	r0, #3
   14948:	bne	14988 <table_set_uint8@@Base+0x78>
   1494c:	ldr	r0, [r5]
   14950:	cmp	r0, #0
   14954:	bne	1496c <table_set_uint8@@Base+0x5c>
   14958:	mov	r0, #1
   1495c:	bl	11fc8 <malloc@plt>
   14960:	cmp	r0, #0
   14964:	str	r0, [r5]
   14968:	beq	14988 <table_set_uint8@@Base+0x78>
   1496c:	strb	r8, [r0]
   14970:	mov	r0, r6
   14974:	mov	r1, r9
   14978:	mov	r2, r4
   1497c:	mov	r3, #1
   14980:	bl	132f4 <table_notify@@Base>
   14984:	mov	r7, #0
   14988:	mov	r0, r7
   1498c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014990 <table_set_int16@@Base>:
   14990:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14994:	add	fp, sp, #24
   14998:	mov	r8, r3
   1499c:	mov	r4, r2
   149a0:	mov	r9, r1
   149a4:	mov	r6, r0
   149a8:	bl	15b14 <table_get_cell_ptr@@Base>
   149ac:	mov	r5, r0
   149b0:	mov	r0, r6
   149b4:	mov	r1, r4
   149b8:	bl	133dc <table_get_col_ptr@@Base>
   149bc:	ldr	r0, [r0, #4]
   149c0:	mvn	r7, #0
   149c4:	cmp	r0, #4
   149c8:	bne	14a08 <table_set_int16@@Base+0x78>
   149cc:	ldr	r0, [r5]
   149d0:	cmp	r0, #0
   149d4:	bne	149ec <table_set_int16@@Base+0x5c>
   149d8:	mov	r0, #2
   149dc:	bl	11fc8 <malloc@plt>
   149e0:	cmp	r0, #0
   149e4:	str	r0, [r5]
   149e8:	beq	14a08 <table_set_int16@@Base+0x78>
   149ec:	strh	r8, [r0]
   149f0:	mov	r0, r6
   149f4:	mov	r1, r9
   149f8:	mov	r2, r4
   149fc:	mov	r3, #1
   14a00:	bl	132f4 <table_notify@@Base>
   14a04:	mov	r7, #0
   14a08:	mov	r0, r7
   14a0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a10 <table_set_uint16@@Base>:
   14a10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a14:	add	fp, sp, #24
   14a18:	mov	r8, r3
   14a1c:	mov	r4, r2
   14a20:	mov	r9, r1
   14a24:	mov	r6, r0
   14a28:	bl	15b14 <table_get_cell_ptr@@Base>
   14a2c:	mov	r5, r0
   14a30:	mov	r0, r6
   14a34:	mov	r1, r4
   14a38:	bl	133dc <table_get_col_ptr@@Base>
   14a3c:	ldr	r0, [r0, #4]
   14a40:	mvn	r7, #0
   14a44:	cmp	r0, #5
   14a48:	bne	14a88 <table_set_uint16@@Base+0x78>
   14a4c:	ldr	r0, [r5]
   14a50:	cmp	r0, #0
   14a54:	bne	14a6c <table_set_uint16@@Base+0x5c>
   14a58:	mov	r0, #2
   14a5c:	bl	11fc8 <malloc@plt>
   14a60:	cmp	r0, #0
   14a64:	str	r0, [r5]
   14a68:	beq	14a88 <table_set_uint16@@Base+0x78>
   14a6c:	strh	r8, [r0]
   14a70:	mov	r0, r6
   14a74:	mov	r1, r9
   14a78:	mov	r2, r4
   14a7c:	mov	r3, #1
   14a80:	bl	132f4 <table_notify@@Base>
   14a84:	mov	r7, #0
   14a88:	mov	r0, r7
   14a8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a90 <table_set_int32@@Base>:
   14a90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a94:	add	fp, sp, #24
   14a98:	mov	r8, r3
   14a9c:	mov	r4, r2
   14aa0:	mov	r5, r1
   14aa4:	mov	r6, r0
   14aa8:	bl	15b14 <table_get_cell_ptr@@Base>
   14aac:	mov	r9, r0
   14ab0:	mov	r0, r6
   14ab4:	mov	r1, r4
   14ab8:	bl	133dc <table_get_col_ptr@@Base>
   14abc:	ldr	r0, [r0, #4]
   14ac0:	mvn	r7, #0
   14ac4:	cmp	r0, #6
   14ac8:	bne	14b08 <table_set_int32@@Base+0x78>
   14acc:	ldr	r0, [r9]
   14ad0:	cmp	r0, #0
   14ad4:	bne	14aec <table_set_int32@@Base+0x5c>
   14ad8:	mov	r0, #4
   14adc:	bl	11fc8 <malloc@plt>
   14ae0:	cmp	r0, #0
   14ae4:	str	r0, [r9]
   14ae8:	beq	14b08 <table_set_int32@@Base+0x78>
   14aec:	str	r8, [r0]
   14af0:	mov	r0, r6
   14af4:	mov	r1, r5
   14af8:	mov	r2, r4
   14afc:	mov	r3, #1
   14b00:	bl	132f4 <table_notify@@Base>
   14b04:	mov	r7, #0
   14b08:	mov	r0, r7
   14b0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b10 <table_set_uint32@@Base>:
   14b10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b14:	add	fp, sp, #24
   14b18:	mov	r8, r3
   14b1c:	mov	r4, r2
   14b20:	mov	r5, r1
   14b24:	mov	r6, r0
   14b28:	bl	15b14 <table_get_cell_ptr@@Base>
   14b2c:	mov	r9, r0
   14b30:	mov	r0, r6
   14b34:	mov	r1, r4
   14b38:	bl	133dc <table_get_col_ptr@@Base>
   14b3c:	ldr	r0, [r0, #4]
   14b40:	mvn	r7, #0
   14b44:	cmp	r0, #7
   14b48:	bne	14b88 <table_set_uint32@@Base+0x78>
   14b4c:	ldr	r0, [r9]
   14b50:	cmp	r0, #0
   14b54:	bne	14b6c <table_set_uint32@@Base+0x5c>
   14b58:	mov	r0, #4
   14b5c:	bl	11fc8 <malloc@plt>
   14b60:	cmp	r0, #0
   14b64:	str	r0, [r9]
   14b68:	beq	14b88 <table_set_uint32@@Base+0x78>
   14b6c:	str	r8, [r0]
   14b70:	mov	r0, r6
   14b74:	mov	r1, r5
   14b78:	mov	r2, r4
   14b7c:	mov	r3, #1
   14b80:	bl	132f4 <table_notify@@Base>
   14b84:	mov	r7, #0
   14b88:	mov	r0, r7
   14b8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b90 <table_set_int64@@Base>:
   14b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b94:	add	fp, sp, #24
   14b98:	mov	r4, r2
   14b9c:	mov	r8, r1
   14ba0:	mov	r6, r0
   14ba4:	bl	15b14 <table_get_cell_ptr@@Base>
   14ba8:	mov	r5, r0
   14bac:	mov	r0, r6
   14bb0:	mov	r1, r4
   14bb4:	bl	133dc <table_get_col_ptr@@Base>
   14bb8:	ldr	r0, [r0, #4]
   14bbc:	mvn	r7, #0
   14bc0:	cmp	r0, #8
   14bc4:	bne	14c10 <table_set_int64@@Base+0x80>
   14bc8:	ldr	r0, [r5]
   14bcc:	cmp	r0, #0
   14bd0:	bne	14be8 <table_set_int64@@Base+0x58>
   14bd4:	mov	r0, #8
   14bd8:	bl	11fc8 <malloc@plt>
   14bdc:	cmp	r0, #0
   14be0:	str	r0, [r5]
   14be4:	beq	14c10 <table_set_int64@@Base+0x80>
   14be8:	ldr	r1, [fp, #12]
   14bec:	ldr	r2, [fp, #8]
   14bf0:	mov	r3, #1
   14bf4:	str	r2, [r0]
   14bf8:	str	r1, [r0, #4]
   14bfc:	mov	r0, r6
   14c00:	mov	r1, r8
   14c04:	mov	r2, r4
   14c08:	bl	132f4 <table_notify@@Base>
   14c0c:	mov	r7, #0
   14c10:	mov	r0, r7
   14c14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c18 <table_set_uint64@@Base>:
   14c18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c1c:	add	fp, sp, #24
   14c20:	mov	r4, r2
   14c24:	mov	r8, r1
   14c28:	mov	r6, r0
   14c2c:	bl	15b14 <table_get_cell_ptr@@Base>
   14c30:	mov	r5, r0
   14c34:	mov	r0, r6
   14c38:	mov	r1, r4
   14c3c:	bl	133dc <table_get_col_ptr@@Base>
   14c40:	ldr	r0, [r0, #4]
   14c44:	mvn	r7, #0
   14c48:	cmp	r0, #9
   14c4c:	bne	14c98 <table_set_uint64@@Base+0x80>
   14c50:	ldr	r0, [r5]
   14c54:	cmp	r0, #0
   14c58:	bne	14c70 <table_set_uint64@@Base+0x58>
   14c5c:	mov	r0, #8
   14c60:	bl	11fc8 <malloc@plt>
   14c64:	cmp	r0, #0
   14c68:	str	r0, [r5]
   14c6c:	beq	14c98 <table_set_uint64@@Base+0x80>
   14c70:	ldr	r1, [fp, #12]
   14c74:	ldr	r2, [fp, #8]
   14c78:	mov	r3, #1
   14c7c:	str	r2, [r0]
   14c80:	str	r1, [r0, #4]
   14c84:	mov	r0, r6
   14c88:	mov	r1, r8
   14c8c:	mov	r2, r4
   14c90:	bl	132f4 <table_notify@@Base>
   14c94:	mov	r7, #0
   14c98:	mov	r0, r7
   14c9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014ca0 <table_set_short@@Base>:
   14ca0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ca4:	add	fp, sp, #24
   14ca8:	mov	r8, r3
   14cac:	mov	r4, r2
   14cb0:	mov	r9, r1
   14cb4:	mov	r6, r0
   14cb8:	bl	15b14 <table_get_cell_ptr@@Base>
   14cbc:	mov	r5, r0
   14cc0:	mov	r0, r6
   14cc4:	mov	r1, r4
   14cc8:	bl	133dc <table_get_col_ptr@@Base>
   14ccc:	ldr	r0, [r0, #4]
   14cd0:	mvn	r7, #0
   14cd4:	cmp	r0, #10
   14cd8:	bne	14d18 <table_set_short@@Base+0x78>
   14cdc:	ldr	r0, [r5]
   14ce0:	cmp	r0, #0
   14ce4:	bne	14cfc <table_set_short@@Base+0x5c>
   14ce8:	mov	r0, #2
   14cec:	bl	11fc8 <malloc@plt>
   14cf0:	cmp	r0, #0
   14cf4:	str	r0, [r5]
   14cf8:	beq	14d18 <table_set_short@@Base+0x78>
   14cfc:	strh	r8, [r0]
   14d00:	mov	r0, r6
   14d04:	mov	r1, r9
   14d08:	mov	r2, r4
   14d0c:	mov	r3, #1
   14d10:	bl	132f4 <table_notify@@Base>
   14d14:	mov	r7, #0
   14d18:	mov	r0, r7
   14d1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d20 <table_set_ushort@@Base>:
   14d20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d24:	add	fp, sp, #24
   14d28:	mov	r8, r3
   14d2c:	mov	r4, r2
   14d30:	mov	r9, r1
   14d34:	mov	r6, r0
   14d38:	bl	15b14 <table_get_cell_ptr@@Base>
   14d3c:	mov	r5, r0
   14d40:	mov	r0, r6
   14d44:	mov	r1, r4
   14d48:	bl	133dc <table_get_col_ptr@@Base>
   14d4c:	ldr	r0, [r0, #4]
   14d50:	mvn	r7, #0
   14d54:	cmp	r0, #11
   14d58:	bne	14d98 <table_set_ushort@@Base+0x78>
   14d5c:	ldr	r0, [r5]
   14d60:	cmp	r0, #0
   14d64:	bne	14d7c <table_set_ushort@@Base+0x5c>
   14d68:	mov	r0, #2
   14d6c:	bl	11fc8 <malloc@plt>
   14d70:	cmp	r0, #0
   14d74:	str	r0, [r5]
   14d78:	beq	14d98 <table_set_ushort@@Base+0x78>
   14d7c:	strh	r8, [r0]
   14d80:	mov	r0, r6
   14d84:	mov	r1, r9
   14d88:	mov	r2, r4
   14d8c:	mov	r3, #1
   14d90:	bl	132f4 <table_notify@@Base>
   14d94:	mov	r7, #0
   14d98:	mov	r0, r7
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014da0 <table_set_long@@Base>:
   14da0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14da4:	add	fp, sp, #24
   14da8:	mov	r8, r3
   14dac:	mov	r4, r2
   14db0:	mov	r5, r1
   14db4:	mov	r6, r0
   14db8:	bl	15b14 <table_get_cell_ptr@@Base>
   14dbc:	mov	r9, r0
   14dc0:	mov	r0, r6
   14dc4:	mov	r1, r4
   14dc8:	bl	133dc <table_get_col_ptr@@Base>
   14dcc:	ldr	r0, [r0, #4]
   14dd0:	mvn	r7, #0
   14dd4:	cmp	r0, #12
   14dd8:	bne	14e18 <table_set_long@@Base+0x78>
   14ddc:	ldr	r0, [r9]
   14de0:	cmp	r0, #0
   14de4:	bne	14dfc <table_set_long@@Base+0x5c>
   14de8:	mov	r0, #4
   14dec:	bl	11fc8 <malloc@plt>
   14df0:	cmp	r0, #0
   14df4:	str	r0, [r9]
   14df8:	beq	14e18 <table_set_long@@Base+0x78>
   14dfc:	str	r8, [r0]
   14e00:	mov	r0, r6
   14e04:	mov	r1, r5
   14e08:	mov	r2, r4
   14e0c:	mov	r3, #1
   14e10:	bl	132f4 <table_notify@@Base>
   14e14:	mov	r7, #0
   14e18:	mov	r0, r7
   14e1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e20 <table_set_ulong@@Base>:
   14e20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e24:	add	fp, sp, #24
   14e28:	mov	r8, r3
   14e2c:	mov	r4, r2
   14e30:	mov	r5, r1
   14e34:	mov	r6, r0
   14e38:	bl	15b14 <table_get_cell_ptr@@Base>
   14e3c:	mov	r9, r0
   14e40:	mov	r0, r6
   14e44:	mov	r1, r4
   14e48:	bl	133dc <table_get_col_ptr@@Base>
   14e4c:	ldr	r0, [r0, #4]
   14e50:	mvn	r7, #0
   14e54:	cmp	r0, #13
   14e58:	bne	14e98 <table_set_ulong@@Base+0x78>
   14e5c:	ldr	r0, [r9]
   14e60:	cmp	r0, #0
   14e64:	bne	14e7c <table_set_ulong@@Base+0x5c>
   14e68:	mov	r0, #4
   14e6c:	bl	11fc8 <malloc@plt>
   14e70:	cmp	r0, #0
   14e74:	str	r0, [r9]
   14e78:	beq	14e98 <table_set_ulong@@Base+0x78>
   14e7c:	str	r8, [r0]
   14e80:	mov	r0, r6
   14e84:	mov	r1, r5
   14e88:	mov	r2, r4
   14e8c:	mov	r3, #1
   14e90:	bl	132f4 <table_notify@@Base>
   14e94:	mov	r7, #0
   14e98:	mov	r0, r7
   14e9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ea0 <table_set_llong@@Base>:
   14ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ea4:	add	fp, sp, #24
   14ea8:	mov	r4, r2
   14eac:	mov	r8, r1
   14eb0:	mov	r6, r0
   14eb4:	bl	15b14 <table_get_cell_ptr@@Base>
   14eb8:	mov	r5, r0
   14ebc:	mov	r0, r6
   14ec0:	mov	r1, r4
   14ec4:	bl	133dc <table_get_col_ptr@@Base>
   14ec8:	ldr	r0, [r0, #4]
   14ecc:	mvn	r7, #0
   14ed0:	cmp	r0, #14
   14ed4:	bne	14f20 <table_set_llong@@Base+0x80>
   14ed8:	ldr	r0, [r5]
   14edc:	cmp	r0, #0
   14ee0:	bne	14ef8 <table_set_llong@@Base+0x58>
   14ee4:	mov	r0, #8
   14ee8:	bl	11fc8 <malloc@plt>
   14eec:	cmp	r0, #0
   14ef0:	str	r0, [r5]
   14ef4:	beq	14f20 <table_set_llong@@Base+0x80>
   14ef8:	ldr	r1, [fp, #12]
   14efc:	ldr	r2, [fp, #8]
   14f00:	mov	r3, #1
   14f04:	str	r2, [r0]
   14f08:	str	r1, [r0, #4]
   14f0c:	mov	r0, r6
   14f10:	mov	r1, r8
   14f14:	mov	r2, r4
   14f18:	bl	132f4 <table_notify@@Base>
   14f1c:	mov	r7, #0
   14f20:	mov	r0, r7
   14f24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014f28 <table_set_ullong@@Base>:
   14f28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f2c:	add	fp, sp, #24
   14f30:	mov	r4, r2
   14f34:	mov	r8, r1
   14f38:	mov	r6, r0
   14f3c:	bl	15b14 <table_get_cell_ptr@@Base>
   14f40:	mov	r5, r0
   14f44:	mov	r0, r6
   14f48:	mov	r1, r4
   14f4c:	bl	133dc <table_get_col_ptr@@Base>
   14f50:	ldr	r0, [r0, #4]
   14f54:	mvn	r7, #0
   14f58:	cmp	r0, #15
   14f5c:	bne	14fa8 <table_set_ullong@@Base+0x80>
   14f60:	ldr	r0, [r5]
   14f64:	cmp	r0, #0
   14f68:	bne	14f80 <table_set_ullong@@Base+0x58>
   14f6c:	mov	r0, #8
   14f70:	bl	11fc8 <malloc@plt>
   14f74:	cmp	r0, #0
   14f78:	str	r0, [r5]
   14f7c:	beq	14fa8 <table_set_ullong@@Base+0x80>
   14f80:	ldr	r1, [fp, #12]
   14f84:	ldr	r2, [fp, #8]
   14f88:	mov	r3, #1
   14f8c:	str	r2, [r0]
   14f90:	str	r1, [r0, #4]
   14f94:	mov	r0, r6
   14f98:	mov	r1, r8
   14f9c:	mov	r2, r4
   14fa0:	bl	132f4 <table_notify@@Base>
   14fa4:	mov	r7, #0
   14fa8:	mov	r0, r7
   14fac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014fb0 <table_set_float@@Base>:
   14fb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fb4:	add	fp, sp, #24
   14fb8:	vpush	{d8}
   14fbc:	vmov.f32	s16, s0
   14fc0:	mov	r4, r2
   14fc4:	mov	r8, r1
   14fc8:	mov	r6, r0
   14fcc:	bl	15b14 <table_get_cell_ptr@@Base>
   14fd0:	mov	r5, r0
   14fd4:	mov	r0, r6
   14fd8:	mov	r1, r4
   14fdc:	bl	133dc <table_get_col_ptr@@Base>
   14fe0:	ldr	r0, [r0, #4]
   14fe4:	mvn	r7, #0
   14fe8:	cmp	r0, #16
   14fec:	bne	15030 <table_set_float@@Base+0x80>
   14ff0:	ldr	r0, [r5]
   14ff4:	cmp	r0, #0
   14ff8:	bne	15010 <table_set_float@@Base+0x60>
   14ffc:	mov	r0, #4
   15000:	bl	11fc8 <malloc@plt>
   15004:	cmp	r0, #0
   15008:	str	r0, [r5]
   1500c:	beq	15030 <table_set_float@@Base+0x80>
   15010:	vmov	r1, s16
   15014:	mov	r2, r4
   15018:	mov	r3, #1
   1501c:	str	r1, [r0]
   15020:	mov	r0, r6
   15024:	mov	r1, r8
   15028:	bl	132f4 <table_notify@@Base>
   1502c:	mov	r7, #0
   15030:	mov	r0, r7
   15034:	vpop	{d8}
   15038:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001503c <table_set_double@@Base>:
   1503c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15040:	add	fp, sp, #24
   15044:	vpush	{d8}
   15048:	vorr	d8, d0, d0
   1504c:	mov	r4, r2
   15050:	mov	r5, r1
   15054:	mov	r6, r0
   15058:	bl	15b14 <table_get_cell_ptr@@Base>
   1505c:	mov	r8, r0
   15060:	mov	r0, r6
   15064:	mov	r1, r4
   15068:	bl	133dc <table_get_col_ptr@@Base>
   1506c:	ldr	r0, [r0, #4]
   15070:	mvn	r7, #0
   15074:	cmp	r0, #17
   15078:	bne	150b8 <table_set_double@@Base+0x7c>
   1507c:	ldr	r0, [r8]
   15080:	cmp	r0, #0
   15084:	bne	1509c <table_set_double@@Base+0x60>
   15088:	mov	r0, #8
   1508c:	bl	11fc8 <malloc@plt>
   15090:	cmp	r0, #0
   15094:	str	r0, [r8]
   15098:	beq	150b8 <table_set_double@@Base+0x7c>
   1509c:	vst1.8	{d8}, [r0]
   150a0:	mov	r0, r6
   150a4:	mov	r1, r5
   150a8:	mov	r2, r4
   150ac:	mov	r3, #1
   150b0:	bl	132f4 <table_notify@@Base>
   150b4:	mov	r7, #0
   150b8:	mov	r0, r7
   150bc:	vpop	{d8}
   150c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000150c4 <table_set_ldouble@@Base>:
   150c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150c8:	add	fp, sp, #24
   150cc:	vpush	{d8}
   150d0:	vorr	d8, d0, d0
   150d4:	mov	r4, r2
   150d8:	mov	r5, r1
   150dc:	mov	r6, r0
   150e0:	bl	15b14 <table_get_cell_ptr@@Base>
   150e4:	mov	r8, r0
   150e8:	mov	r0, r6
   150ec:	mov	r1, r4
   150f0:	bl	133dc <table_get_col_ptr@@Base>
   150f4:	ldr	r0, [r0, #4]
   150f8:	mvn	r7, #0
   150fc:	cmp	r0, #18
   15100:	bne	15140 <table_set_ldouble@@Base+0x7c>
   15104:	ldr	r0, [r8]
   15108:	cmp	r0, #0
   1510c:	bne	15124 <table_set_ldouble@@Base+0x60>
   15110:	mov	r0, #8
   15114:	bl	11fc8 <malloc@plt>
   15118:	cmp	r0, #0
   1511c:	str	r0, [r8]
   15120:	beq	15140 <table_set_ldouble@@Base+0x7c>
   15124:	vst1.8	{d8}, [r0]
   15128:	mov	r0, r6
   1512c:	mov	r1, r5
   15130:	mov	r2, r4
   15134:	mov	r3, #1
   15138:	bl	132f4 <table_notify@@Base>
   1513c:	mov	r7, #0
   15140:	mov	r0, r7
   15144:	vpop	{d8}
   15148:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001514c <table_set_string@@Base>:
   1514c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15150:	add	fp, sp, #24
   15154:	mov	r8, r3
   15158:	mov	r4, r2
   1515c:	mov	r9, r1
   15160:	mov	r6, r0
   15164:	bl	15b14 <table_get_cell_ptr@@Base>
   15168:	mov	r5, r0
   1516c:	mov	r0, r6
   15170:	mov	r1, r4
   15174:	bl	133dc <table_get_col_ptr@@Base>
   15178:	ldr	r0, [r0, #4]
   1517c:	mvn	r7, #0
   15180:	cmp	r0, #21
   15184:	bne	151cc <table_set_string@@Base+0x80>
   15188:	mov	r0, r8
   1518c:	bl	11fec <strlen@plt>
   15190:	ldr	r2, [r5]
   15194:	add	r1, r0, #1
   15198:	mov	r0, r2
   1519c:	bl	11fb0 <realloc@plt>
   151a0:	cmp	r0, #0
   151a4:	str	r0, [r5]
   151a8:	beq	151cc <table_set_string@@Base+0x80>
   151ac:	mov	r1, r8
   151b0:	bl	11fbc <strcpy@plt>
   151b4:	mov	r0, r6
   151b8:	mov	r1, r9
   151bc:	mov	r2, r4
   151c0:	mov	r3, #1
   151c4:	bl	132f4 <table_notify@@Base>
   151c8:	mov	r7, #0
   151cc:	mov	r0, r7
   151d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000151d4 <table_set_char@@Base>:
   151d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151d8:	add	fp, sp, #24
   151dc:	mov	r8, r3
   151e0:	mov	r4, r2
   151e4:	mov	r9, r1
   151e8:	mov	r6, r0
   151ec:	bl	15b14 <table_get_cell_ptr@@Base>
   151f0:	mov	r5, r0
   151f4:	mov	r0, r6
   151f8:	mov	r1, r4
   151fc:	bl	133dc <table_get_col_ptr@@Base>
   15200:	ldr	r0, [r0, #4]
   15204:	mvn	r7, #0
   15208:	cmp	r0, #19
   1520c:	bne	1524c <table_set_char@@Base+0x78>
   15210:	ldr	r0, [r5]
   15214:	cmp	r0, #0
   15218:	bne	15230 <table_set_char@@Base+0x5c>
   1521c:	mov	r0, #1
   15220:	bl	11fc8 <malloc@plt>
   15224:	cmp	r0, #0
   15228:	str	r0, [r5]
   1522c:	beq	1524c <table_set_char@@Base+0x78>
   15230:	strb	r8, [r0]
   15234:	mov	r0, r6
   15238:	mov	r1, r9
   1523c:	mov	r2, r4
   15240:	mov	r3, #1
   15244:	bl	132f4 <table_notify@@Base>
   15248:	mov	r7, #0
   1524c:	mov	r0, r7
   15250:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015254 <table_set_uchar@@Base>:
   15254:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15258:	add	fp, sp, #24
   1525c:	mov	r8, r3
   15260:	mov	r4, r2
   15264:	mov	r9, r1
   15268:	mov	r6, r0
   1526c:	bl	15b14 <table_get_cell_ptr@@Base>
   15270:	mov	r5, r0
   15274:	mov	r0, r6
   15278:	mov	r1, r4
   1527c:	bl	133dc <table_get_col_ptr@@Base>
   15280:	ldr	r0, [r0, #4]
   15284:	mvn	r7, #0
   15288:	cmp	r0, #20
   1528c:	bne	152cc <table_set_uchar@@Base+0x78>
   15290:	ldr	r0, [r5]
   15294:	cmp	r0, #0
   15298:	bne	152b0 <table_set_uchar@@Base+0x5c>
   1529c:	mov	r0, #1
   152a0:	bl	11fc8 <malloc@plt>
   152a4:	cmp	r0, #0
   152a8:	str	r0, [r5]
   152ac:	beq	152cc <table_set_uchar@@Base+0x78>
   152b0:	strb	r8, [r0]
   152b4:	mov	r0, r6
   152b8:	mov	r1, r9
   152bc:	mov	r2, r4
   152c0:	mov	r3, #1
   152c4:	bl	132f4 <table_notify@@Base>
   152c8:	mov	r7, #0
   152cc:	mov	r0, r7
   152d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000152d4 <table_set_ptr@@Base>:
   152d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152d8:	add	fp, sp, #24
   152dc:	mov	r8, r3
   152e0:	mov	r4, r2
   152e4:	mov	r5, r1
   152e8:	mov	r6, r0
   152ec:	bl	15b14 <table_get_cell_ptr@@Base>
   152f0:	mov	r7, r0
   152f4:	mov	r0, r6
   152f8:	mov	r1, r4
   152fc:	bl	133dc <table_get_col_ptr@@Base>
   15300:	ldr	r1, [r0, #4]
   15304:	mvn	r0, #0
   15308:	cmp	r1, #23
   1530c:	bne	1532c <table_set_ptr@@Base+0x58>
   15310:	mov	r0, r6
   15314:	mov	r1, r5
   15318:	mov	r2, r4
   1531c:	mov	r3, #1
   15320:	str	r8, [r7]
   15324:	bl	132f4 <table_notify@@Base>
   15328:	mov	r0, #0
   1532c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015330 <table_serialize@@Base>:
   15330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15334:	add	fp, sp, #28
   15338:	sub	sp, sp, #4
   1533c:	mov	r5, r1
   15340:	mov	r4, r0
   15344:	bl	141dc <table_get_row_length@@Base>
   15348:	str	r0, [sp]
   1534c:	mov	r0, r4
   15350:	bl	13404 <table_get_column_length@@Base>
   15354:	str	r0, [r5]
   15358:	mov	r9, r0
   1535c:	ldr	r0, [r4, #8]
   15360:	cmp	r9, #1
   15364:	str	r0, [r5, #4]
   15368:	add	r5, r5, #8
   1536c:	blt	153c0 <table_serialize@@Base+0x90>
   15370:	mov	r6, #0
   15374:	mov	r0, r4
   15378:	mov	r1, r6
   1537c:	bl	13478 <table_get_column_name@@Base>
   15380:	mov	r8, r0
   15384:	bl	11fec <strlen@plt>
   15388:	mov	sl, r0
   1538c:	mov	r0, r4
   15390:	mov	r1, r6
   15394:	bl	13488 <table_get_column_data_type@@Base>
   15398:	str	r0, [r5], #4
   1539c:	add	r7, sl, #1
   153a0:	mov	r1, r8
   153a4:	mov	r0, r5
   153a8:	mov	r2, r7
   153ac:	bl	1201c <strncpy@plt>
   153b0:	add	r6, r6, #1
   153b4:	add	r5, r5, r7
   153b8:	cmp	r9, r6
   153bc:	bne	15374 <table_serialize@@Base+0x44>
   153c0:	ldr	r1, [sp]
   153c4:	add	r7, r5, #8
   153c8:	str	r1, [r5]
   153cc:	cmp	r1, #1
   153d0:	ldr	r0, [r4, #24]
   153d4:	str	r0, [r5, #4]
   153d8:	blt	15590 <table_serialize@@Base+0x260>
   153dc:	mov	r8, #0
   153e0:	cmp	r9, #1
   153e4:	bge	15400 <table_serialize@@Base+0xd0>
   153e8:	ldr	r0, [sp]
   153ec:	add	r8, r8, #1
   153f0:	cmp	r8, r0
   153f4:	beq	15590 <table_serialize@@Base+0x260>
   153f8:	cmp	r9, #1
   153fc:	blt	153e8 <table_serialize@@Base+0xb8>
   15400:	mov	r6, #0
   15404:	b	1542c <table_serialize@@Base+0xfc>
   15408:	mov	r0, r4
   1540c:	mov	r1, r8
   15410:	mov	r2, r6
   15414:	bl	13f04 <table_get@@Base>
   15418:	ldrb	r0, [r0]
   1541c:	strb	r0, [r7], #1
   15420:	add	r6, r6, #1
   15424:	cmp	r9, r6
   15428:	beq	153e8 <table_serialize@@Base+0xb8>
   1542c:	mov	r0, r4
   15430:	mov	r1, r6
   15434:	bl	13488 <table_get_column_data_type@@Base>
   15438:	cmp	r0, #23
   1543c:	bhi	15420 <table_serialize@@Base+0xf0>
   15440:	add	r1, pc, #0
   15444:	ldr	pc, [r1, r0, lsl #2]
   15448:	andeq	r5, r1, r8, lsr #9
   1544c:	andeq	r5, r1, r8, lsr #9
   15450:	andeq	r5, r1, r8, lsl #8
   15454:	andeq	r5, r1, r8, lsl #8
   15458:	ldrdeq	r5, [r1], -r0
   1545c:	ldrdeq	r5, [r1], -r0
   15460:	andeq	r5, r1, r8, lsr #9
   15464:	andeq	r5, r1, r8, lsr #9
   15468:	strdeq	r5, [r1], -r8
   1546c:	strdeq	r5, [r1], -r8
   15470:	ldrdeq	r5, [r1], -r0
   15474:	ldrdeq	r5, [r1], -r0
   15478:	andeq	r5, r1, r8, lsr #9
   1547c:	andeq	r5, r1, r8, lsr #9
   15480:	strdeq	r5, [r1], -r8
   15484:	strdeq	r5, [r1], -r8
   15488:	andeq	r5, r1, r8, lsr #9
   1548c:	andeq	r5, r1, r4, lsr #10
   15490:	andeq	r5, r1, r4, lsr #10
   15494:	andeq	r5, r1, r8, lsl #8
   15498:	andeq	r5, r1, r8, lsl #8
   1549c:	andeq	r5, r1, r0, asr r5
   154a0:	andeq	r5, r1, r8, lsl #8
   154a4:	andeq	r5, r1, r8, lsr #9
   154a8:	mov	r0, r4
   154ac:	mov	r1, r8
   154b0:	mov	r2, r6
   154b4:	bl	13f04 <table_get@@Base>
   154b8:	ldr	r0, [r0]
   154bc:	str	r0, [r7], #4
   154c0:	add	r6, r6, #1
   154c4:	cmp	r9, r6
   154c8:	bne	1542c <table_serialize@@Base+0xfc>
   154cc:	b	153e8 <table_serialize@@Base+0xb8>
   154d0:	mov	r0, r4
   154d4:	mov	r1, r8
   154d8:	mov	r2, r6
   154dc:	bl	13f04 <table_get@@Base>
   154e0:	ldrh	r0, [r0]
   154e4:	strh	r0, [r7], #2
   154e8:	add	r6, r6, #1
   154ec:	cmp	r9, r6
   154f0:	bne	1542c <table_serialize@@Base+0xfc>
   154f4:	b	153e8 <table_serialize@@Base+0xb8>
   154f8:	mov	r0, r4
   154fc:	mov	r1, r8
   15500:	mov	r2, r6
   15504:	bl	13f04 <table_get@@Base>
   15508:	ldrd	r0, [r0]
   1550c:	strd	r0, [r7]
   15510:	add	r7, r7, #8
   15514:	add	r6, r6, #1
   15518:	cmp	r9, r6
   1551c:	bne	1542c <table_serialize@@Base+0xfc>
   15520:	b	153e8 <table_serialize@@Base+0xb8>
   15524:	mov	r0, r4
   15528:	mov	r1, r8
   1552c:	mov	r2, r6
   15530:	bl	13f04 <table_get@@Base>
   15534:	vldr	d16, [r0]
   15538:	vstr	d16, [r7]
   1553c:	add	r7, r7, #8
   15540:	add	r6, r6, #1
   15544:	cmp	r9, r6
   15548:	bne	1542c <table_serialize@@Base+0xfc>
   1554c:	b	153e8 <table_serialize@@Base+0xb8>
   15550:	mov	r0, r4
   15554:	mov	r1, r8
   15558:	mov	r2, r6
   1555c:	bl	14128 <table_get_string@@Base>
   15560:	mov	sl, r0
   15564:	bl	11fec <strlen@plt>
   15568:	add	r5, r0, #1
   1556c:	mov	r0, r7
   15570:	mov	r1, sl
   15574:	mov	r2, r5
   15578:	bl	1201c <strncpy@plt>
   1557c:	add	r7, r7, r5
   15580:	add	r6, r6, #1
   15584:	cmp	r9, r6
   15588:	bne	1542c <table_serialize@@Base+0xfc>
   1558c:	b	153e8 <table_serialize@@Base+0xb8>
   15590:	ldr	r0, [r4, #32]
   15594:	str	r0, [r7]
   15598:	ldr	r0, [r4, #48]	; 0x30
   1559c:	str	r0, [r7, #4]
   155a0:	ldr	r0, [r4, #32]
   155a4:	cmp	r0, #1
   155a8:	blt	155ec <table_serialize@@Base+0x2bc>
   155ac:	add	r0, r7, #8
   155b0:	mov	r1, #0
   155b4:	ldr	r2, [r4, #36]	; 0x24
   155b8:	ldr	r2, [r2, r1, lsl #2]
   155bc:	str	r2, [r0]
   155c0:	ldr	r2, [r4, #40]	; 0x28
   155c4:	ldr	r2, [r2, r1, lsl #2]
   155c8:	str	r2, [r0, #4]
   155cc:	ldr	r2, [r4, #44]	; 0x2c
   155d0:	ldr	r2, [r2, r1, lsl #2]
   155d4:	add	r1, r1, #1
   155d8:	str	r2, [r0, #8]
   155dc:	add	r0, r0, #12
   155e0:	ldr	r2, [r4, #32]
   155e4:	cmp	r1, r2
   155e8:	blt	155b4 <table_serialize@@Base+0x284>
   155ec:	sub	sp, fp, #28
   155f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000155f4 <table_deserialize@@Base>:
   155f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   155f8:	add	fp, sp, #24
   155fc:	sub	sp, sp, #8
   15600:	mov	r5, r0
   15604:	bl	12888 <table_new@@Base>
   15608:	mov	r4, r0
   1560c:	ldr	r0, [r5, #4]
   15610:	ldr	r9, [r5]
   15614:	str	r0, [r4, #8]
   15618:	cmp	r9, #1
   1561c:	ldr	r8, [r5, #8]!
   15620:	add	r6, r5, #4
   15624:	blt	15658 <table_deserialize@@Base+0x64>
   15628:	mov	r7, r9
   1562c:	mov	r0, r4
   15630:	mov	r1, r6
   15634:	mov	r2, r8
   15638:	bl	1349c <table_add_column@@Base>
   1563c:	mov	r0, r6
   15640:	bl	11fec <strlen@plt>
   15644:	add	r5, r5, r0
   15648:	subs	r7, r7, #1
   1564c:	ldr	r8, [r5, #5]!
   15650:	add	r6, r5, #4
   15654:	bne	1562c <table_deserialize@@Base+0x38>
   15658:	ldr	r0, [r6]
   1565c:	add	r6, r5, #8
   15660:	cmp	r8, #1
   15664:	str	r0, [r4, #24]
   15668:	blt	15ab8 <table_deserialize@@Base+0x4c4>
   1566c:	mov	r7, #0
   15670:	mov	r0, r4
   15674:	bl	141e4 <table_add_row@@Base>
   15678:	cmp	r9, #1
   1567c:	bge	1569c <table_deserialize@@Base+0xa8>
   15680:	add	r7, r7, #1
   15684:	cmp	r7, r8
   15688:	beq	15ab8 <table_deserialize@@Base+0x4c4>
   1568c:	mov	r0, r4
   15690:	bl	141e4 <table_add_row@@Base>
   15694:	cmp	r9, #1
   15698:	blt	15680 <table_deserialize@@Base+0x8c>
   1569c:	mov	r5, #0
   156a0:	b	156c4 <table_deserialize@@Base+0xd0>
   156a4:	ldr	r3, [r6], #4
   156a8:	mov	r0, r4
   156ac:	mov	r1, r7
   156b0:	mov	r2, r5
   156b4:	bl	152d4 <table_set_ptr@@Base>
   156b8:	add	r5, r5, #1
   156bc:	cmp	r9, r5
   156c0:	beq	15680 <table_deserialize@@Base+0x8c>
   156c4:	mov	r0, r4
   156c8:	mov	r1, r5
   156cc:	bl	13488 <table_get_column_data_type@@Base>
   156d0:	cmp	r0, #23
   156d4:	bhi	156b8 <table_deserialize@@Base+0xc4>
   156d8:	add	r1, pc, #0
   156dc:	ldr	pc, [r1, r0, lsl #2]
   156e0:	andeq	r5, r1, r0, asr #14
   156e4:	andeq	r5, r1, r4, ror #14
   156e8:	andeq	r5, r1, r8, lsl #15
   156ec:	andeq	r5, r1, ip, lsr #15
   156f0:	ldrdeq	r5, [r1], -r0
   156f4:	strdeq	r5, [r1], -r4
   156f8:	andeq	r5, r1, r8, lsl r8
   156fc:	andeq	r5, r1, ip, lsr r8
   15700:	andeq	r5, r1, r0, ror #16
   15704:	andeq	r5, r1, ip, lsl #17
   15708:			; <UNDEFINED> instruction: 0x000158b8
   1570c:	ldrdeq	r5, [r1], -ip
   15710:	andeq	r5, r1, r0, lsl #18
   15714:	andeq	r5, r1, r4, lsr #18
   15718:	andeq	r5, r1, r8, asr #18
   1571c:	andeq	r5, r1, r4, ror r9
   15720:	andeq	r5, r1, r0, lsr #19
   15724:	andeq	r5, r1, r8, asr #19
   15728:	strdeq	r5, [r1], -r0
   1572c:	andeq	r5, r1, r8, lsl sl
   15730:	andeq	r5, r1, ip, lsr sl
   15734:	andeq	r5, r1, r0, ror #20
   15738:	muleq	r1, r4, sl
   1573c:	andeq	r5, r1, r4, lsr #13
   15740:	ldr	r3, [r6], #4
   15744:	mov	r0, r4
   15748:	mov	r1, r7
   1574c:	mov	r2, r5
   15750:	bl	14790 <table_set_int@@Base>
   15754:	add	r5, r5, #1
   15758:	cmp	r9, r5
   1575c:	bne	156c4 <table_deserialize@@Base+0xd0>
   15760:	b	15680 <table_deserialize@@Base+0x8c>
   15764:	ldr	r3, [r6], #4
   15768:	mov	r0, r4
   1576c:	mov	r1, r7
   15770:	mov	r2, r5
   15774:	bl	14810 <table_set_uint@@Base>
   15778:	add	r5, r5, #1
   1577c:	cmp	r9, r5
   15780:	bne	156c4 <table_deserialize@@Base+0xd0>
   15784:	b	15680 <table_deserialize@@Base+0x8c>
   15788:	ldrsb	r3, [r6], #1
   1578c:	mov	r0, r4
   15790:	mov	r1, r7
   15794:	mov	r2, r5
   15798:	bl	14890 <table_set_int8@@Base>
   1579c:	add	r5, r5, #1
   157a0:	cmp	r9, r5
   157a4:	bne	156c4 <table_deserialize@@Base+0xd0>
   157a8:	b	15680 <table_deserialize@@Base+0x8c>
   157ac:	ldrb	r3, [r6], #1
   157b0:	mov	r0, r4
   157b4:	mov	r1, r7
   157b8:	mov	r2, r5
   157bc:	bl	14910 <table_set_uint8@@Base>
   157c0:	add	r5, r5, #1
   157c4:	cmp	r9, r5
   157c8:	bne	156c4 <table_deserialize@@Base+0xd0>
   157cc:	b	15680 <table_deserialize@@Base+0x8c>
   157d0:	ldrsh	r3, [r6], #2
   157d4:	mov	r0, r4
   157d8:	mov	r1, r7
   157dc:	mov	r2, r5
   157e0:	bl	14990 <table_set_int16@@Base>
   157e4:	add	r5, r5, #1
   157e8:	cmp	r9, r5
   157ec:	bne	156c4 <table_deserialize@@Base+0xd0>
   157f0:	b	15680 <table_deserialize@@Base+0x8c>
   157f4:	ldrh	r3, [r6], #2
   157f8:	mov	r0, r4
   157fc:	mov	r1, r7
   15800:	mov	r2, r5
   15804:	bl	14a10 <table_set_uint16@@Base>
   15808:	add	r5, r5, #1
   1580c:	cmp	r9, r5
   15810:	bne	156c4 <table_deserialize@@Base+0xd0>
   15814:	b	15680 <table_deserialize@@Base+0x8c>
   15818:	ldr	r3, [r6], #4
   1581c:	mov	r0, r4
   15820:	mov	r1, r7
   15824:	mov	r2, r5
   15828:	bl	14a90 <table_set_int32@@Base>
   1582c:	add	r5, r5, #1
   15830:	cmp	r9, r5
   15834:	bne	156c4 <table_deserialize@@Base+0xd0>
   15838:	b	15680 <table_deserialize@@Base+0x8c>
   1583c:	ldr	r3, [r6], #4
   15840:	mov	r0, r4
   15844:	mov	r1, r7
   15848:	mov	r2, r5
   1584c:	bl	14b10 <table_set_uint32@@Base>
   15850:	add	r5, r5, #1
   15854:	cmp	r9, r5
   15858:	bne	156c4 <table_deserialize@@Base+0xd0>
   1585c:	b	15680 <table_deserialize@@Base+0x8c>
   15860:	ldrd	r0, [r6]
   15864:	mov	r2, r5
   15868:	stm	sp, {r0, r1}
   1586c:	mov	r0, r4
   15870:	mov	r1, r7
   15874:	bl	14b90 <table_set_int64@@Base>
   15878:	add	r6, r6, #8
   1587c:	add	r5, r5, #1
   15880:	cmp	r9, r5
   15884:	bne	156c4 <table_deserialize@@Base+0xd0>
   15888:	b	15680 <table_deserialize@@Base+0x8c>
   1588c:	ldrd	r0, [r6]
   15890:	mov	r2, r5
   15894:	stm	sp, {r0, r1}
   15898:	mov	r0, r4
   1589c:	mov	r1, r7
   158a0:	bl	14c18 <table_set_uint64@@Base>
   158a4:	add	r6, r6, #8
   158a8:	add	r5, r5, #1
   158ac:	cmp	r9, r5
   158b0:	bne	156c4 <table_deserialize@@Base+0xd0>
   158b4:	b	15680 <table_deserialize@@Base+0x8c>
   158b8:	ldrsh	r3, [r6], #2
   158bc:	mov	r0, r4
   158c0:	mov	r1, r7
   158c4:	mov	r2, r5
   158c8:	bl	14ca0 <table_set_short@@Base>
   158cc:	add	r5, r5, #1
   158d0:	cmp	r9, r5
   158d4:	bne	156c4 <table_deserialize@@Base+0xd0>
   158d8:	b	15680 <table_deserialize@@Base+0x8c>
   158dc:	ldrh	r3, [r6], #2
   158e0:	mov	r0, r4
   158e4:	mov	r1, r7
   158e8:	mov	r2, r5
   158ec:	bl	14d20 <table_set_ushort@@Base>
   158f0:	add	r5, r5, #1
   158f4:	cmp	r9, r5
   158f8:	bne	156c4 <table_deserialize@@Base+0xd0>
   158fc:	b	15680 <table_deserialize@@Base+0x8c>
   15900:	ldr	r3, [r6], #4
   15904:	mov	r0, r4
   15908:	mov	r1, r7
   1590c:	mov	r2, r5
   15910:	bl	14da0 <table_set_long@@Base>
   15914:	add	r5, r5, #1
   15918:	cmp	r9, r5
   1591c:	bne	156c4 <table_deserialize@@Base+0xd0>
   15920:	b	15680 <table_deserialize@@Base+0x8c>
   15924:	ldr	r3, [r6], #4
   15928:	mov	r0, r4
   1592c:	mov	r1, r7
   15930:	mov	r2, r5
   15934:	bl	14e20 <table_set_ulong@@Base>
   15938:	add	r5, r5, #1
   1593c:	cmp	r9, r5
   15940:	bne	156c4 <table_deserialize@@Base+0xd0>
   15944:	b	15680 <table_deserialize@@Base+0x8c>
   15948:	ldrd	r0, [r6]
   1594c:	mov	r2, r5
   15950:	stm	sp, {r0, r1}
   15954:	mov	r0, r4
   15958:	mov	r1, r7
   1595c:	bl	14ea0 <table_set_llong@@Base>
   15960:	add	r6, r6, #8
   15964:	add	r5, r5, #1
   15968:	cmp	r9, r5
   1596c:	bne	156c4 <table_deserialize@@Base+0xd0>
   15970:	b	15680 <table_deserialize@@Base+0x8c>
   15974:	ldrd	r0, [r6]
   15978:	mov	r2, r5
   1597c:	stm	sp, {r0, r1}
   15980:	mov	r0, r4
   15984:	mov	r1, r7
   15988:	bl	14f28 <table_set_ullong@@Base>
   1598c:	add	r6, r6, #8
   15990:	add	r5, r5, #1
   15994:	cmp	r9, r5
   15998:	bne	156c4 <table_deserialize@@Base+0xd0>
   1599c:	b	15680 <table_deserialize@@Base+0x8c>
   159a0:	vldr	s0, [r6]
   159a4:	mov	r0, r4
   159a8:	mov	r1, r7
   159ac:	mov	r2, r5
   159b0:	bl	14fb0 <table_set_float@@Base>
   159b4:	add	r6, r6, #4
   159b8:	add	r5, r5, #1
   159bc:	cmp	r9, r5
   159c0:	bne	156c4 <table_deserialize@@Base+0xd0>
   159c4:	b	15680 <table_deserialize@@Base+0x8c>
   159c8:	vldr	d0, [r6]
   159cc:	mov	r0, r4
   159d0:	mov	r1, r7
   159d4:	mov	r2, r5
   159d8:	bl	1503c <table_set_double@@Base>
   159dc:	add	r6, r6, #8
   159e0:	add	r5, r5, #1
   159e4:	cmp	r9, r5
   159e8:	bne	156c4 <table_deserialize@@Base+0xd0>
   159ec:	b	15680 <table_deserialize@@Base+0x8c>
   159f0:	vldr	d0, [r6]
   159f4:	mov	r0, r4
   159f8:	mov	r1, r7
   159fc:	mov	r2, r5
   15a00:	bl	150c4 <table_set_ldouble@@Base>
   15a04:	add	r6, r6, #8
   15a08:	add	r5, r5, #1
   15a0c:	cmp	r9, r5
   15a10:	bne	156c4 <table_deserialize@@Base+0xd0>
   15a14:	b	15680 <table_deserialize@@Base+0x8c>
   15a18:	ldrb	r3, [r6], #1
   15a1c:	mov	r0, r4
   15a20:	mov	r1, r7
   15a24:	mov	r2, r5
   15a28:	bl	151d4 <table_set_char@@Base>
   15a2c:	add	r5, r5, #1
   15a30:	cmp	r9, r5
   15a34:	bne	156c4 <table_deserialize@@Base+0xd0>
   15a38:	b	15680 <table_deserialize@@Base+0x8c>
   15a3c:	ldrb	r3, [r6], #1
   15a40:	mov	r0, r4
   15a44:	mov	r1, r7
   15a48:	mov	r2, r5
   15a4c:	bl	15254 <table_set_uchar@@Base>
   15a50:	add	r5, r5, #1
   15a54:	cmp	r9, r5
   15a58:	bne	156c4 <table_deserialize@@Base+0xd0>
   15a5c:	b	15680 <table_deserialize@@Base+0x8c>
   15a60:	mov	r0, r4
   15a64:	mov	r1, r7
   15a68:	mov	r2, r5
   15a6c:	mov	r3, r6
   15a70:	bl	1514c <table_set_string@@Base>
   15a74:	mov	r0, r6
   15a78:	bl	11fec <strlen@plt>
   15a7c:	add	r0, r6, r0
   15a80:	add	r6, r0, #1
   15a84:	add	r5, r5, #1
   15a88:	cmp	r9, r5
   15a8c:	bne	156c4 <table_deserialize@@Base+0xd0>
   15a90:	b	15680 <table_deserialize@@Base+0x8c>
   15a94:	ldrb	r3, [r6], #1
   15a98:	mov	r0, r4
   15a9c:	mov	r1, r7
   15aa0:	mov	r2, r5
   15aa4:	bl	14710 <table_set_bool@@Base>
   15aa8:	add	r5, r5, #1
   15aac:	cmp	r9, r5
   15ab0:	bne	156c4 <table_deserialize@@Base+0xd0>
   15ab4:	b	15680 <table_deserialize@@Base+0x8c>
   15ab8:	ldr	r5, [r6]
   15abc:	ldr	r0, [r6, #4]
   15ac0:	cmp	r5, #1
   15ac4:	str	r0, [r4, #48]	; 0x30
   15ac8:	blt	15ae8 <table_deserialize@@Base+0x4f4>
   15acc:	add	r6, r6, #8
   15ad0:	ldm	r6, {r1, r2, r3}
   15ad4:	mov	r0, r4
   15ad8:	bl	1308c <table_register_callback@@Base>
   15adc:	add	r6, r6, #12
   15ae0:	subs	r5, r5, #1
   15ae4:	bne	15ad0 <table_deserialize@@Base+0x4dc>
   15ae8:	mov	r0, r4
   15aec:	sub	sp, fp, #24
   15af0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015af4 <table_cell_init@@Base>:
   15af4:	push	{r4, sl, fp, lr}
   15af8:	add	fp, sp, #8
   15afc:	mov	r4, r2
   15b00:	bl	14174 <table_get_row_ptr@@Base>
   15b04:	ldr	r0, [r0]
   15b08:	mov	r1, #0
   15b0c:	str	r1, [r0, r4, lsl #2]
   15b10:	pop	{r4, sl, fp, pc}

00015b14 <table_get_cell_ptr@@Base>:
   15b14:	push	{r4, sl, fp, lr}
   15b18:	add	fp, sp, #8
   15b1c:	mov	r4, r2
   15b20:	bl	14174 <table_get_row_ptr@@Base>
   15b24:	ldr	r0, [r0]
   15b28:	add	r0, r0, r4, lsl #2
   15b2c:	pop	{r4, sl, fp, pc}

00015b30 <table_cell_destroy@@Base>:
   15b30:	push	{r4, r5, r6, sl, fp, lr}
   15b34:	add	fp, sp, #16
   15b38:	mov	r5, r1
   15b3c:	mov	r1, r2
   15b40:	mov	r4, r2
   15b44:	mov	r6, r0
   15b48:	bl	13488 <table_get_column_data_type@@Base>
   15b4c:	cmp	r0, #23
   15b50:	popeq	{r4, r5, r6, sl, fp, pc}
   15b54:	mov	r0, r6
   15b58:	mov	r1, r5
   15b5c:	bl	14174 <table_get_row_ptr@@Base>
   15b60:	ldr	r0, [r0]
   15b64:	ldr	r0, [r0, r4, lsl #2]
   15b68:	cmp	r0, #0
   15b6c:	beq	15b78 <table_cell_destroy@@Base+0x48>
   15b70:	pop	{r4, r5, r6, sl, fp, lr}
   15b74:	b	11f98 <free@plt>
   15b78:	pop	{r4, r5, r6, sl, fp, pc}

00015b7c <table_cell_to_buffer@@Base>:
   15b7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b80:	add	fp, sp, #24
   15b84:	sub	sp, sp, #8
   15b88:	mov	r7, r1
   15b8c:	mov	r1, r2
   15b90:	mov	r5, r3
   15b94:	mov	r6, r2
   15b98:	mov	r4, r0
   15b9c:	bl	13488 <table_get_column_data_type@@Base>
   15ba0:	cmp	r0, #23
   15ba4:	bhi	15e14 <table_cell_to_buffer@@Base+0x298>
   15ba8:	ldr	r8, [fp, #8]
   15bac:	add	r1, pc, #0
   15bb0:	ldr	pc, [r1, r0, lsl #2]
   15bb4:	andeq	r5, r1, r4, lsl ip
   15bb8:	andeq	r5, r1, r8, lsr #24
   15bbc:	andeq	r5, r1, ip, lsr ip
   15bc0:	andeq	r5, r1, r0, asr ip
   15bc4:	andeq	r5, r1, r4, ror #24
   15bc8:	andeq	r5, r1, r8, ror ip
   15bcc:	andeq	r5, r1, ip, lsl #25
   15bd0:	andeq	r5, r1, r0, lsr #25
   15bd4:	andeq	r5, r1, r0, asr #25
   15bd8:	ldrdeq	r5, [r1], -r4
   15bdc:	andeq	r5, r1, r8, ror #25
   15be0:	andeq	r5, r1, r8, lsl #26
   15be4:	andeq	r5, r1, r8, lsr #26
   15be8:	andeq	r5, r1, r8, asr #26
   15bec:	andeq	r5, r1, r8, ror #26
   15bf0:	andeq	r5, r1, r8, lsl #27
   15bf4:	andeq	r5, r1, r8, lsr #27
   15bf8:	andeq	r5, r1, ip, asr #27
   15bfc:	andeq	r5, r1, ip, ror #27
   15c00:	andeq	r5, r1, r0, lsr #28
   15c04:	andeq	r5, r1, r4, lsr lr
   15c08:	andeq	r5, r1, r4, asr lr
   15c0c:	andeq	r5, r1, r4, ror lr
   15c10:	andeq	r5, r1, r8, lsr #29
   15c14:	mov	r0, r4
   15c18:	mov	r1, r7
   15c1c:	mov	r2, r6
   15c20:	bl	13f30 <table_get_int@@Base>
   15c24:	b	15e84 <table_cell_to_buffer@@Base+0x308>
   15c28:	mov	r0, r4
   15c2c:	mov	r1, r7
   15c30:	mov	r2, r6
   15c34:	bl	13f48 <table_get_uint@@Base>
   15c38:	b	15cb0 <table_cell_to_buffer@@Base+0x134>
   15c3c:	mov	r0, r4
   15c40:	mov	r1, r7
   15c44:	mov	r2, r6
   15c48:	bl	13f60 <table_get_int8@@Base>
   15c4c:	b	15e84 <table_cell_to_buffer@@Base+0x308>
   15c50:	mov	r0, r4
   15c54:	mov	r1, r7
   15c58:	mov	r2, r6
   15c5c:	bl	13f78 <table_get_uint8@@Base>
   15c60:	b	15cb0 <table_cell_to_buffer@@Base+0x134>
   15c64:	mov	r0, r4
   15c68:	mov	r1, r7
   15c6c:	mov	r2, r6
   15c70:	bl	13f90 <table_get_int16@@Base>
   15c74:	b	15e84 <table_cell_to_buffer@@Base+0x308>
   15c78:	mov	r0, r4
   15c7c:	mov	r1, r7
   15c80:	mov	r2, r6
   15c84:	bl	13fa8 <table_get_uint16@@Base>
   15c88:	b	15cb0 <table_cell_to_buffer@@Base+0x134>
   15c8c:	mov	r0, r4
   15c90:	mov	r1, r7
   15c94:	mov	r2, r6
   15c98:	bl	13fc0 <table_get_int32@@Base>
   15c9c:	b	15e84 <table_cell_to_buffer@@Base+0x308>
   15ca0:	mov	r0, r4
   15ca4:	mov	r1, r7
   15ca8:	mov	r2, r6
   15cac:	bl	13fd8 <table_get_uint32@@Base>
   15cb0:	movw	r2, #26344	; 0x66e8
   15cb4:	mov	r3, r0
   15cb8:	movt	r2, #1
   15cbc:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15cc0:	mov	r0, r4
   15cc4:	mov	r1, r7
   15cc8:	mov	r2, r6
   15ccc:	bl	13ff0 <table_get_int64@@Base>
   15cd0:	b	15d78 <table_cell_to_buffer@@Base+0x1fc>
   15cd4:	mov	r0, r4
   15cd8:	mov	r1, r7
   15cdc:	mov	r2, r6
   15ce0:	bl	14008 <table_get_uint64@@Base>
   15ce4:	b	15d98 <table_cell_to_buffer@@Base+0x21c>
   15ce8:	mov	r0, r4
   15cec:	mov	r1, r7
   15cf0:	mov	r2, r6
   15cf4:	bl	14020 <table_get_short@@Base>
   15cf8:	movw	r2, #26357	; 0x66f5
   15cfc:	mov	r3, r0
   15d00:	movt	r2, #1
   15d04:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15d08:	mov	r0, r4
   15d0c:	mov	r1, r7
   15d10:	mov	r2, r6
   15d14:	bl	14038 <table_get_ushort@@Base>
   15d18:	movw	r2, #26361	; 0x66f9
   15d1c:	mov	r3, r0
   15d20:	movt	r2, #1
   15d24:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15d28:	mov	r0, r4
   15d2c:	mov	r1, r7
   15d30:	mov	r2, r6
   15d34:	bl	14050 <table_get_long@@Base>
   15d38:	movw	r2, #26365	; 0x66fd
   15d3c:	mov	r3, r0
   15d40:	movt	r2, #1
   15d44:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15d48:	mov	r0, r4
   15d4c:	mov	r1, r7
   15d50:	mov	r2, r6
   15d54:	bl	14068 <table_get_ulong@@Base>
   15d58:	movw	r2, #26369	; 0x6701
   15d5c:	mov	r3, r0
   15d60:	movt	r2, #1
   15d64:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15d68:	mov	r0, r4
   15d6c:	mov	r1, r7
   15d70:	mov	r2, r6
   15d74:	bl	14080 <table_get_llong@@Base>
   15d78:	movw	r2, #26347	; 0x66eb
   15d7c:	stm	sp, {r0, r1}
   15d80:	movt	r2, #1
   15d84:	b	15e08 <table_cell_to_buffer@@Base+0x28c>
   15d88:	mov	r0, r4
   15d8c:	mov	r1, r7
   15d90:	mov	r2, r6
   15d94:	bl	14098 <table_get_ullong@@Base>
   15d98:	movw	r2, #26352	; 0x66f0
   15d9c:	stm	sp, {r0, r1}
   15da0:	movt	r2, #1
   15da4:	b	15e08 <table_cell_to_buffer@@Base+0x28c>
   15da8:	mov	r0, r4
   15dac:	mov	r1, r7
   15db0:	mov	r2, r6
   15db4:	bl	140b0 <table_get_float@@Base>
   15db8:	vcvt.f64.f32	d16, s0
   15dbc:	movw	r2, #26376	; 0x6708
   15dc0:	movt	r2, #1
   15dc4:	vstr	d16, [sp]
   15dc8:	b	15e08 <table_cell_to_buffer@@Base+0x28c>
   15dcc:	mov	r0, r4
   15dd0:	mov	r1, r7
   15dd4:	mov	r2, r6
   15dd8:	bl	140c8 <table_get_double@@Base>
   15ddc:	movw	r2, #26379	; 0x670b
   15de0:	vstr	d0, [sp]
   15de4:	movt	r2, #1
   15de8:	b	15e08 <table_cell_to_buffer@@Base+0x28c>
   15dec:	mov	r0, r4
   15df0:	mov	r1, r7
   15df4:	mov	r2, r6
   15df8:	bl	140e0 <table_get_ldouble@@Base>
   15dfc:	movw	r2, #26383	; 0x670f
   15e00:	vstr	d0, [sp]
   15e04:	movt	r2, #1
   15e08:	mov	r0, r5
   15e0c:	mov	r1, r8
   15e10:	bl	12004 <snprintf@plt>
   15e14:	mov	r0, #0
   15e18:	sub	sp, fp, #24
   15e1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15e20:	mov	r0, r4
   15e24:	mov	r1, r7
   15e28:	mov	r2, r6
   15e2c:	bl	140f8 <table_get_char@@Base>
   15e30:	b	15e44 <table_cell_to_buffer@@Base+0x2c8>
   15e34:	mov	r0, r4
   15e38:	mov	r1, r7
   15e3c:	mov	r2, r6
   15e40:	bl	14110 <table_get_uchar@@Base>
   15e44:	movw	r2, #26387	; 0x6713
   15e48:	mov	r3, r0
   15e4c:	movt	r2, #1
   15e50:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15e54:	mov	r0, r4
   15e58:	mov	r1, r7
   15e5c:	mov	r2, r6
   15e60:	bl	14128 <table_get_string@@Base>
   15e64:	movw	r2, #26373	; 0x6705
   15e68:	mov	r3, r0
   15e6c:	movt	r2, #1
   15e70:	b	15e90 <table_cell_to_buffer@@Base+0x314>
   15e74:	mov	r0, r4
   15e78:	mov	r1, r7
   15e7c:	mov	r2, r6
   15e80:	bl	13f18 <table_get_bool@@Base>
   15e84:	movw	r2, #26191	; 0x664f
   15e88:	mov	r3, r0
   15e8c:	movt	r2, #1
   15e90:	mov	r0, r5
   15e94:	mov	r1, r8
   15e98:	bl	12004 <snprintf@plt>
   15e9c:	mov	r0, #0
   15ea0:	sub	sp, fp, #24
   15ea4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ea8:	mov	r0, r4
   15eac:	mov	r1, r7
   15eb0:	mov	r2, r6
   15eb4:	bl	1413c <table_get_ptr@@Base>
   15eb8:	movw	r2, #26390	; 0x6716
   15ebc:	mov	r3, r0
   15ec0:	movt	r2, #1
   15ec4:	b	15e90 <table_cell_to_buffer@@Base+0x314>

00015ec8 <table_cell_from_buffer@@Base>:
   15ec8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15ecc:	add	fp, sp, #24
   15ed0:	sub	sp, sp, #264	; 0x108
   15ed4:	mov	r5, r1
   15ed8:	mov	r1, r2
   15edc:	mov	r7, r3
   15ee0:	mov	r4, r2
   15ee4:	mov	r6, r0
   15ee8:	bl	13488 <table_get_column_data_type@@Base>
   15eec:	cmp	r0, #23
   15ef0:	bhi	16520 <table_cell_from_buffer@@Base+0x658>
   15ef4:	add	r1, pc, #0
   15ef8:	ldr	pc, [r1, r0, lsl #2]
   15efc:	andeq	r5, r1, ip, asr pc
   15f00:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15f04:	ldrdeq	r5, [r1], -r4
   15f08:	andeq	r6, r1, r0, lsl r0
   15f0c:	andeq	r6, r1, ip, asr #32
   15f10:	andeq	r6, r1, r8, lsl #1
   15f14:	andeq	r6, r1, r4, asr #1
   15f18:	andeq	r6, r1, r0, lsl #2
   15f1c:	andeq	r6, r1, ip, lsr r1
   15f20:	andeq	r6, r1, r0, lsl #3
   15f24:	andeq	r6, r1, r4, asr #3
   15f28:	andeq	r6, r1, r0, lsl #4
   15f2c:	andeq	r6, r1, ip, lsr r2
   15f30:	andeq	r6, r1, r8, ror r2
   15f34:			; <UNDEFINED> instruction: 0x000162b4
   15f38:	strdeq	r6, [r1], -r8
   15f3c:	andeq	r6, r1, ip, lsr r3
   15f40:	andeq	r6, r1, r8, ror r3
   15f44:			; <UNDEFINED> instruction: 0x000163b4
   15f48:	strdeq	r6, [r1], -r0
   15f4c:	andeq	r6, r1, ip, lsr #8
   15f50:	andeq	r6, r1, r8, ror #8
   15f54:	andeq	r6, r1, r4, lsr #9
   15f58:	andeq	r6, r1, r8, ror #9
   15f5c:	movw	r1, #26191	; 0x664f
   15f60:	add	r2, sp, #8
   15f64:	mov	r0, r7
   15f68:	movt	r1, #1
   15f6c:	bl	12010 <__isoc99_sscanf@plt>
   15f70:	mov	r1, r0
   15f74:	mvn	r0, #0
   15f78:	cmp	r1, #1
   15f7c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   15f80:	ldr	r3, [sp, #8]
   15f84:	mov	r0, r6
   15f88:	mov	r1, r5
   15f8c:	mov	r2, r4
   15f90:	bl	14790 <table_set_int@@Base>
   15f94:	b	16520 <table_cell_from_buffer@@Base+0x658>
   15f98:	movw	r1, #26344	; 0x66e8
   15f9c:	add	r2, sp, #8
   15fa0:	mov	r0, r7
   15fa4:	movt	r1, #1
   15fa8:	bl	12010 <__isoc99_sscanf@plt>
   15fac:	mov	r1, r0
   15fb0:	mvn	r0, #0
   15fb4:	cmp	r1, #1
   15fb8:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   15fbc:	ldr	r3, [sp, #8]
   15fc0:	mov	r0, r6
   15fc4:	mov	r1, r5
   15fc8:	mov	r2, r4
   15fcc:	bl	14810 <table_set_uint@@Base>
   15fd0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   15fd4:	movw	r1, #26393	; 0x6719
   15fd8:	add	r2, sp, #8
   15fdc:	mov	r0, r7
   15fe0:	movt	r1, #1
   15fe4:	bl	12010 <__isoc99_sscanf@plt>
   15fe8:	mov	r1, r0
   15fec:	mvn	r0, #0
   15ff0:	cmp	r1, #1
   15ff4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   15ff8:	ldrsb	r3, [sp, #8]
   15ffc:	mov	r0, r6
   16000:	mov	r1, r5
   16004:	mov	r2, r4
   16008:	bl	14890 <table_set_int8@@Base>
   1600c:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16010:	movw	r1, #26398	; 0x671e
   16014:	add	r2, sp, #8
   16018:	mov	r0, r7
   1601c:	movt	r1, #1
   16020:	bl	12010 <__isoc99_sscanf@plt>
   16024:	mov	r1, r0
   16028:	mvn	r0, #0
   1602c:	cmp	r1, #1
   16030:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16034:	ldrb	r3, [sp, #8]
   16038:	mov	r0, r6
   1603c:	mov	r1, r5
   16040:	mov	r2, r4
   16044:	bl	14910 <table_set_uint8@@Base>
   16048:	b	16520 <table_cell_from_buffer@@Base+0x658>
   1604c:	movw	r1, #26357	; 0x66f5
   16050:	add	r2, sp, #8
   16054:	mov	r0, r7
   16058:	movt	r1, #1
   1605c:	bl	12010 <__isoc99_sscanf@plt>
   16060:	mov	r1, r0
   16064:	mvn	r0, #0
   16068:	cmp	r1, #1
   1606c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16070:	ldrsh	r3, [sp, #8]
   16074:	mov	r0, r6
   16078:	mov	r1, r5
   1607c:	mov	r2, r4
   16080:	bl	14990 <table_set_int16@@Base>
   16084:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16088:	movw	r1, #26361	; 0x66f9
   1608c:	add	r2, sp, #8
   16090:	mov	r0, r7
   16094:	movt	r1, #1
   16098:	bl	12010 <__isoc99_sscanf@plt>
   1609c:	mov	r1, r0
   160a0:	mvn	r0, #0
   160a4:	cmp	r1, #1
   160a8:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   160ac:	ldrh	r3, [sp, #8]
   160b0:	mov	r0, r6
   160b4:	mov	r1, r5
   160b8:	mov	r2, r4
   160bc:	bl	14a10 <table_set_uint16@@Base>
   160c0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   160c4:	movw	r1, #26191	; 0x664f
   160c8:	add	r2, sp, #8
   160cc:	mov	r0, r7
   160d0:	movt	r1, #1
   160d4:	bl	12010 <__isoc99_sscanf@plt>
   160d8:	mov	r1, r0
   160dc:	mvn	r0, #0
   160e0:	cmp	r1, #1
   160e4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   160e8:	ldr	r3, [sp, #8]
   160ec:	mov	r0, r6
   160f0:	mov	r1, r5
   160f4:	mov	r2, r4
   160f8:	bl	14a90 <table_set_int32@@Base>
   160fc:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16100:	movw	r1, #26344	; 0x66e8
   16104:	add	r2, sp, #8
   16108:	mov	r0, r7
   1610c:	movt	r1, #1
   16110:	bl	12010 <__isoc99_sscanf@plt>
   16114:	mov	r1, r0
   16118:	mvn	r0, #0
   1611c:	cmp	r1, #1
   16120:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16124:	ldr	r3, [sp, #8]
   16128:	mov	r0, r6
   1612c:	mov	r1, r5
   16130:	mov	r2, r4
   16134:	bl	14b10 <table_set_uint32@@Base>
   16138:	b	16520 <table_cell_from_buffer@@Base+0x658>
   1613c:	movw	r1, #26347	; 0x66eb
   16140:	add	r2, sp, #8
   16144:	mov	r0, r7
   16148:	movt	r1, #1
   1614c:	bl	12010 <__isoc99_sscanf@plt>
   16150:	mov	r1, r0
   16154:	mvn	r0, #0
   16158:	cmp	r1, #1
   1615c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16160:	ldr	r0, [sp, #8]
   16164:	ldr	r1, [sp, #12]
   16168:	mov	r2, r4
   1616c:	stm	sp, {r0, r1}
   16170:	mov	r0, r6
   16174:	mov	r1, r5
   16178:	bl	14b90 <table_set_int64@@Base>
   1617c:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16180:	movw	r1, #26352	; 0x66f0
   16184:	add	r2, sp, #8
   16188:	mov	r0, r7
   1618c:	movt	r1, #1
   16190:	bl	12010 <__isoc99_sscanf@plt>
   16194:	mov	r1, r0
   16198:	mvn	r0, #0
   1619c:	cmp	r1, #1
   161a0:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   161a4:	ldr	r0, [sp, #8]
   161a8:	ldr	r1, [sp, #12]
   161ac:	mov	r2, r4
   161b0:	stm	sp, {r0, r1}
   161b4:	mov	r0, r6
   161b8:	mov	r1, r5
   161bc:	bl	14c18 <table_set_uint64@@Base>
   161c0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   161c4:	movw	r1, #26357	; 0x66f5
   161c8:	add	r2, sp, #8
   161cc:	mov	r0, r7
   161d0:	movt	r1, #1
   161d4:	bl	12010 <__isoc99_sscanf@plt>
   161d8:	mov	r1, r0
   161dc:	mvn	r0, #0
   161e0:	cmp	r1, #1
   161e4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   161e8:	ldrsh	r3, [sp, #8]
   161ec:	mov	r0, r6
   161f0:	mov	r1, r5
   161f4:	mov	r2, r4
   161f8:	bl	14ca0 <table_set_short@@Base>
   161fc:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16200:	movw	r1, #26361	; 0x66f9
   16204:	add	r2, sp, #8
   16208:	mov	r0, r7
   1620c:	movt	r1, #1
   16210:	bl	12010 <__isoc99_sscanf@plt>
   16214:	mov	r1, r0
   16218:	mvn	r0, #0
   1621c:	cmp	r1, #1
   16220:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16224:	ldrh	r3, [sp, #8]
   16228:	mov	r0, r6
   1622c:	mov	r1, r5
   16230:	mov	r2, r4
   16234:	bl	14d20 <table_set_ushort@@Base>
   16238:	b	16520 <table_cell_from_buffer@@Base+0x658>
   1623c:	movw	r1, #26365	; 0x66fd
   16240:	add	r2, sp, #8
   16244:	mov	r0, r7
   16248:	movt	r1, #1
   1624c:	bl	12010 <__isoc99_sscanf@plt>
   16250:	mov	r1, r0
   16254:	mvn	r0, #0
   16258:	cmp	r1, #1
   1625c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16260:	ldr	r3, [sp, #8]
   16264:	mov	r0, r6
   16268:	mov	r1, r5
   1626c:	mov	r2, r4
   16270:	bl	14da0 <table_set_long@@Base>
   16274:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16278:	movw	r1, #26369	; 0x6701
   1627c:	add	r2, sp, #8
   16280:	mov	r0, r7
   16284:	movt	r1, #1
   16288:	bl	12010 <__isoc99_sscanf@plt>
   1628c:	mov	r1, r0
   16290:	mvn	r0, #0
   16294:	cmp	r1, #1
   16298:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   1629c:	ldr	r3, [sp, #8]
   162a0:	mov	r0, r6
   162a4:	mov	r1, r5
   162a8:	mov	r2, r4
   162ac:	bl	14e20 <table_set_ulong@@Base>
   162b0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   162b4:	movw	r1, #26347	; 0x66eb
   162b8:	add	r2, sp, #8
   162bc:	mov	r0, r7
   162c0:	movt	r1, #1
   162c4:	bl	12010 <__isoc99_sscanf@plt>
   162c8:	mov	r1, r0
   162cc:	mvn	r0, #0
   162d0:	cmp	r1, #1
   162d4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   162d8:	ldr	r0, [sp, #8]
   162dc:	ldr	r1, [sp, #12]
   162e0:	mov	r2, r4
   162e4:	stm	sp, {r0, r1}
   162e8:	mov	r0, r6
   162ec:	mov	r1, r5
   162f0:	bl	14ea0 <table_set_llong@@Base>
   162f4:	b	16520 <table_cell_from_buffer@@Base+0x658>
   162f8:	movw	r1, #26352	; 0x66f0
   162fc:	add	r2, sp, #8
   16300:	mov	r0, r7
   16304:	movt	r1, #1
   16308:	bl	12010 <__isoc99_sscanf@plt>
   1630c:	mov	r1, r0
   16310:	mvn	r0, #0
   16314:	cmp	r1, #1
   16318:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   1631c:	ldr	r0, [sp, #8]
   16320:	ldr	r1, [sp, #12]
   16324:	mov	r2, r4
   16328:	stm	sp, {r0, r1}
   1632c:	mov	r0, r6
   16330:	mov	r1, r5
   16334:	bl	14f28 <table_set_ullong@@Base>
   16338:	b	16520 <table_cell_from_buffer@@Base+0x658>
   1633c:	movw	r1, #26376	; 0x6708
   16340:	add	r2, sp, #8
   16344:	mov	r0, r7
   16348:	movt	r1, #1
   1634c:	bl	12010 <__isoc99_sscanf@plt>
   16350:	mov	r1, r0
   16354:	mvn	r0, #0
   16358:	cmp	r1, #1
   1635c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16360:	vldr	s0, [sp, #8]
   16364:	mov	r0, r6
   16368:	mov	r1, r5
   1636c:	mov	r2, r4
   16370:	bl	14fb0 <table_set_float@@Base>
   16374:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16378:	movw	r1, #26379	; 0x670b
   1637c:	add	r2, sp, #8
   16380:	mov	r0, r7
   16384:	movt	r1, #1
   16388:	bl	12010 <__isoc99_sscanf@plt>
   1638c:	mov	r1, r0
   16390:	mvn	r0, #0
   16394:	cmp	r1, #1
   16398:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   1639c:	vldr	d0, [sp, #8]
   163a0:	mov	r0, r6
   163a4:	mov	r1, r5
   163a8:	mov	r2, r4
   163ac:	bl	1503c <table_set_double@@Base>
   163b0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   163b4:	movw	r1, #26383	; 0x670f
   163b8:	add	r2, sp, #8
   163bc:	mov	r0, r7
   163c0:	movt	r1, #1
   163c4:	bl	12010 <__isoc99_sscanf@plt>
   163c8:	mov	r1, r0
   163cc:	mvn	r0, #0
   163d0:	cmp	r1, #1
   163d4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   163d8:	vldr	d0, [sp, #8]
   163dc:	mov	r0, r6
   163e0:	mov	r1, r5
   163e4:	mov	r2, r4
   163e8:	bl	150c4 <table_set_ldouble@@Base>
   163ec:	b	16520 <table_cell_from_buffer@@Base+0x658>
   163f0:	movw	r1, #26387	; 0x6713
   163f4:	add	r2, sp, #8
   163f8:	mov	r0, r7
   163fc:	movt	r1, #1
   16400:	bl	12010 <__isoc99_sscanf@plt>
   16404:	mov	r1, r0
   16408:	mvn	r0, #0
   1640c:	cmp	r1, #1
   16410:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16414:	ldrb	r3, [sp, #8]
   16418:	mov	r0, r6
   1641c:	mov	r1, r5
   16420:	mov	r2, r4
   16424:	bl	151d4 <table_set_char@@Base>
   16428:	b	16520 <table_cell_from_buffer@@Base+0x658>
   1642c:	movw	r1, #26387	; 0x6713
   16430:	add	r2, sp, #8
   16434:	mov	r0, r7
   16438:	movt	r1, #1
   1643c:	bl	12010 <__isoc99_sscanf@plt>
   16440:	mov	r1, r0
   16444:	mvn	r0, #0
   16448:	cmp	r1, #1
   1644c:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   16450:	ldrb	r3, [sp, #8]
   16454:	mov	r0, r6
   16458:	mov	r1, r5
   1645c:	mov	r2, r4
   16460:	bl	15254 <table_set_uchar@@Base>
   16464:	b	16520 <table_cell_from_buffer@@Base+0x658>
   16468:	movw	r1, #26373	; 0x6705
   1646c:	add	r2, sp, #8
   16470:	mov	r0, r7
   16474:	movt	r1, #1
   16478:	bl	12010 <__isoc99_sscanf@plt>
   1647c:	mov	r1, r0
   16480:	mvn	r0, #0
   16484:	cmp	r1, #1
   16488:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   1648c:	add	r3, sp, #8
   16490:	mov	r0, r6
   16494:	mov	r1, r5
   16498:	mov	r2, r4
   1649c:	bl	1514c <table_set_string@@Base>
   164a0:	b	16520 <table_cell_from_buffer@@Base+0x658>
   164a4:	movw	r1, #26191	; 0x664f
   164a8:	add	r2, sp, #8
   164ac:	mov	r0, r7
   164b0:	movt	r1, #1
   164b4:	bl	12010 <__isoc99_sscanf@plt>
   164b8:	mov	r1, r0
   164bc:	mvn	r0, #0
   164c0:	cmp	r1, #1
   164c4:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   164c8:	ldr	r3, [sp, #8]
   164cc:	mov	r0, r6
   164d0:	mov	r1, r5
   164d4:	mov	r2, r4
   164d8:	cmp	r3, #0
   164dc:	movwne	r3, #1
   164e0:	bl	14710 <table_set_bool@@Base>
   164e4:	b	16520 <table_cell_from_buffer@@Base+0x658>
   164e8:	movw	r1, #26390	; 0x6716
   164ec:	add	r2, sp, #8
   164f0:	mov	r0, r7
   164f4:	movt	r1, #1
   164f8:	bl	12010 <__isoc99_sscanf@plt>
   164fc:	mov	r1, r0
   16500:	mvn	r0, #0
   16504:	cmp	r1, #1
   16508:	bne	16524 <table_cell_from_buffer@@Base+0x65c>
   1650c:	ldr	r3, [sp, #8]
   16510:	mov	r0, r6
   16514:	mov	r1, r5
   16518:	mov	r2, r4
   1651c:	bl	152d4 <table_set_ptr@@Base>
   16520:	mov	r0, #0
   16524:	sub	sp, fp, #24
   16528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001652c <table_cell_nullify@@Base>:
   1652c:	push	{r4, r5, fp, lr}
   16530:	add	fp, sp, #8
   16534:	mov	r4, r2
   16538:	bl	14174 <table_get_row_ptr@@Base>
   1653c:	ldr	r5, [r0]
   16540:	ldr	r0, [r5, r4, lsl #2]
   16544:	cmp	r0, #0
   16548:	beq	16558 <table_cell_nullify@@Base+0x2c>
   1654c:	bl	11f98 <free@plt>
   16550:	mov	r0, #0
   16554:	str	r0, [r5, r4, lsl #2]
   16558:	mov	r0, #0
   1655c:	pop	{r4, r5, fp, pc}

00016560 <__libc_csu_init@@Base>:
   16560:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16564:	mov	r7, r0
   16568:	ldr	r6, [pc, #72]	; 165b8 <__libc_csu_init@@Base+0x58>
   1656c:	ldr	r5, [pc, #72]	; 165bc <__libc_csu_init@@Base+0x5c>
   16570:	add	r6, pc, r6
   16574:	add	r5, pc, r5
   16578:	sub	r6, r6, r5
   1657c:	mov	r8, r1
   16580:	mov	r9, r2
   16584:	bl	11f60 <strcmp@plt-0x20>
   16588:	asrs	r6, r6, #2
   1658c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16590:	mov	r4, #0
   16594:	add	r4, r4, #1
   16598:	ldr	r3, [r5], #4
   1659c:	mov	r2, r9
   165a0:	mov	r1, r8
   165a4:	mov	r0, r7
   165a8:	blx	r3
   165ac:	cmp	r6, r4
   165b0:	bne	16594 <__libc_csu_init@@Base+0x34>
   165b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   165b8:	muleq	r1, r4, r9
   165bc:	andeq	r0, r1, ip, lsl #19

000165c0 <__libc_csu_fini@@Base>:
   165c0:	bx	lr

Disassembly of section .fini:

000165c4 <.fini>:
   165c4:	push	{r3, lr}
   165c8:	pop	{r3, pc}
