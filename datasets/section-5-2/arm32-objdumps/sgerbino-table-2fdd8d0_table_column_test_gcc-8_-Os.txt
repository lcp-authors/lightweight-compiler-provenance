
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011a28 <.init>:
   11a28:	push	{r3, lr}
   11a2c:	bl	11be0 <_start@@Base+0x3c>
   11a30:	pop	{r3, pc}

Disassembly of section .plt:

00011a34 <strcmp@plt-0x14>:
   11a34:	push	{lr}		; (str lr, [sp, #-4]!)
   11a38:	ldr	lr, [pc, #4]	; 11a44 <strcmp@plt-0x4>
   11a3c:	add	lr, pc, lr
   11a40:	ldr	pc, [lr, #8]!
   11a44:			; <UNDEFINED> instruction: 0x000135bc

00011a48 <strcmp@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #77824	; 0x13000
   11a50:	ldr	pc, [ip, #1468]!	; 0x5bc

00011a54 <printf@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #77824	; 0x13000
   11a5c:	ldr	pc, [ip, #1460]!	; 0x5b4

00011a60 <free@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #77824	; 0x13000
   11a68:	ldr	pc, [ip, #1452]!	; 0x5ac

00011a6c <realloc@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #77824	; 0x13000
   11a74:	ldr	pc, [ip, #1444]!	; 0x5a4

00011a78 <strcpy@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #77824	; 0x13000
   11a80:	ldr	pc, [ip, #1436]!	; 0x59c

00011a84 <malloc@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #77824	; 0x13000
   11a8c:	ldr	pc, [ip, #1428]!	; 0x594

00011a90 <__libc_start_main@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1420]!	; 0x58c

00011a9c <__gmon_start__@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1412]!	; 0x584

00011aa8 <strlen@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1404]!	; 0x57c

00011ab4 <snprintf@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1396]!	; 0x574

00011ac0 <__isoc99_sscanf@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1388]!	; 0x56c

00011acc <abort@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1380]!	; 0x564

Disassembly of section .text:

00011ad8 <main@@Base>:
   11ad8:	push	{r4, r5, r6, lr}
   11adc:	sub	sp, sp, #56	; 0x38
   11ae0:	mov	r0, sp
   11ae4:	bl	11c94 <table_init@@Base>
   11ae8:	mov	r2, #0
   11aec:	ldr	r1, [pc, #160]	; 11b94 <main@@Base+0xbc>
   11af0:	mov	r0, sp
   11af4:	bl	12604 <table_add_column@@Base>
   11af8:	mov	r6, r0
   11afc:	mov	r2, #21
   11b00:	ldr	r1, [pc, #144]	; 11b98 <main@@Base+0xc0>
   11b04:	mov	r0, sp
   11b08:	bl	12604 <table_add_column@@Base>
   11b0c:	mov	r5, r0
   11b10:	mov	r0, sp
   11b14:	bl	12598 <table_get_column_length@@Base>
   11b18:	cmp	r0, #2
   11b1c:	moveq	r4, #0
   11b20:	beq	11b30 <main@@Base+0x58>
   11b24:	ldr	r0, [pc, #112]	; 11b9c <main@@Base+0xc4>
   11b28:	mvn	r4, #0
   11b2c:	bl	11a54 <printf@plt>
   11b30:	mov	r1, r6
   11b34:	mov	r0, sp
   11b38:	bl	1285c <table_get_column_name@@Base>
   11b3c:	ldr	r1, [pc, #80]	; 11b94 <main@@Base+0xbc>
   11b40:	bl	11a48 <strcmp@plt>
   11b44:	cmp	r0, #0
   11b48:	beq	11b58 <main@@Base+0x80>
   11b4c:	ldr	r0, [pc, #76]	; 11ba0 <main@@Base+0xc8>
   11b50:	mvn	r4, #0
   11b54:	bl	11a54 <printf@plt>
   11b58:	mov	r1, r5
   11b5c:	mov	r0, sp
   11b60:	bl	1285c <table_get_column_name@@Base>
   11b64:	ldr	r1, [pc, #44]	; 11b98 <main@@Base+0xc0>
   11b68:	bl	11a48 <strcmp@plt>
   11b6c:	cmp	r0, #0
   11b70:	beq	11b80 <main@@Base+0xa8>
   11b74:	ldr	r0, [pc, #36]	; 11ba0 <main@@Base+0xc8>
   11b78:	mvn	r4, #0
   11b7c:	bl	11a54 <printf@plt>
   11b80:	mov	r0, sp
   11b84:	bl	11cec <table_destroy@@Base>
   11b88:	mov	r0, r4
   11b8c:	add	sp, sp, #56	; 0x38
   11b90:	pop	{r4, r5, r6, pc}
   11b94:			; <UNDEFINED> instruction: 0x000141b8
   11b98:	strdeq	r4, [r1], -sl
   11b9c:			; <UNDEFINED> instruction: 0x000141bb
   11ba0:	andeq	r4, r1, r0, ror #3

00011ba4 <_start@@Base>:
   11ba4:	mov	fp, #0
   11ba8:	mov	lr, #0
   11bac:	pop	{r1}		; (ldr r1, [sp], #4)
   11bb0:	mov	r2, sp
   11bb4:	push	{r2}		; (str r2, [sp, #-4]!)
   11bb8:	push	{r0}		; (str r0, [sp, #-4]!)
   11bbc:	ldr	ip, [pc, #16]	; 11bd4 <_start@@Base+0x30>
   11bc0:	push	{ip}		; (str ip, [sp, #-4]!)
   11bc4:	ldr	r0, [pc, #12]	; 11bd8 <_start@@Base+0x34>
   11bc8:	ldr	r3, [pc, #12]	; 11bdc <_start@@Base+0x38>
   11bcc:	bl	11a90 <__libc_start_main@plt>
   11bd0:	bl	11acc <abort@plt>
   11bd4:	andeq	r4, r1, r8, lsr #3
   11bd8:	ldrdeq	r1, [r1], -r8
   11bdc:	andeq	r4, r1, r8, asr #2
   11be0:	ldr	r3, [pc, #20]	; 11bfc <_start@@Base+0x58>
   11be4:	ldr	r2, [pc, #20]	; 11c00 <_start@@Base+0x5c>
   11be8:	add	r3, pc, r3
   11bec:	ldr	r2, [r3, r2]
   11bf0:	cmp	r2, #0
   11bf4:	bxeq	lr
   11bf8:	b	11a9c <__gmon_start__@plt>
   11bfc:	andeq	r3, r1, r0, lsl r4
   11c00:	andeq	r0, r0, ip, lsr r0
   11c04:	ldr	r0, [pc, #24]	; 11c24 <_start@@Base+0x80>
   11c08:	ldr	r3, [pc, #24]	; 11c28 <_start@@Base+0x84>
   11c0c:	cmp	r3, r0
   11c10:	bxeq	lr
   11c14:	ldr	r3, [pc, #16]	; 11c2c <_start@@Base+0x88>
   11c18:	cmp	r3, #0
   11c1c:	bxeq	lr
   11c20:	bx	r3
   11c24:	andeq	r5, r2, r8, asr #32
   11c28:	andeq	r5, r2, r8, asr #32
   11c2c:	andeq	r0, r0, r0
   11c30:	ldr	r0, [pc, #36]	; 11c5c <_start@@Base+0xb8>
   11c34:	ldr	r1, [pc, #36]	; 11c60 <_start@@Base+0xbc>
   11c38:	sub	r1, r1, r0
   11c3c:	asr	r1, r1, #2
   11c40:	add	r1, r1, r1, lsr #31
   11c44:	asrs	r1, r1, #1
   11c48:	bxeq	lr
   11c4c:	ldr	r3, [pc, #16]	; 11c64 <_start@@Base+0xc0>
   11c50:	cmp	r3, #0
   11c54:	bxeq	lr
   11c58:	bx	r3
   11c5c:	andeq	r5, r2, r8, asr #32
   11c60:	andeq	r5, r2, r8, asr #32
   11c64:	andeq	r0, r0, r0
   11c68:	push	{r4, lr}
   11c6c:	ldr	r4, [pc, #24]	; 11c8c <_start@@Base+0xe8>
   11c70:	ldrb	r3, [r4]
   11c74:	cmp	r3, #0
   11c78:	popne	{r4, pc}
   11c7c:	bl	11c04 <_start@@Base+0x60>
   11c80:	mov	r3, #1
   11c84:	strb	r3, [r4]
   11c88:	pop	{r4, pc}
   11c8c:	andeq	r5, r2, r8, asr #32
   11c90:	b	11c30 <_start@@Base+0x8c>

00011c94 <table_init@@Base>:
   11c94:	mov	r3, #0
   11c98:	mov	r2, #10
   11c9c:	mov	r1, #20
   11ca0:	str	r3, [r0]
   11ca4:	str	r3, [r0, #4]
   11ca8:	strd	r2, [r0, #8]
   11cac:	str	r3, [r0, #16]
   11cb0:	str	r3, [r0, #20]
   11cb4:	str	r1, [r0, #24]
   11cb8:	str	r3, [r0, #28]
   11cbc:	str	r3, [r0, #32]
   11cc0:	str	r3, [r0, #36]	; 0x24
   11cc4:	str	r3, [r0, #40]	; 0x28
   11cc8:	str	r3, [r0, #44]	; 0x2c
   11ccc:	strd	r2, [r0, #48]	; 0x30
   11cd0:	bx	lr

00011cd4 <table_new@@Base>:
   11cd4:	push	{r4, lr}
   11cd8:	mov	r0, #56	; 0x38
   11cdc:	bl	11a84 <malloc@plt>
   11ce0:	mov	r4, r0
   11ce4:	bl	11c94 <table_init@@Base>
   11ce8:	pop	{r4, pc}

00011cec <table_destroy@@Base>:
   11cec:	push	{r4, r5, r6, lr}
   11cf0:	subs	r4, r0, #0
   11cf4:	popeq	{r4, r5, r6, pc}
   11cf8:	mvn	r2, #0
   11cfc:	mov	r3, #64	; 0x40
   11d00:	mov	r1, r2
   11d04:	mov	r5, #0
   11d08:	bl	124c0 <table_notify@@Base>
   11d0c:	mov	r0, r4
   11d10:	bl	130b4 <table_get_row_length@@Base>
   11d14:	mov	r6, r0
   11d18:	cmp	r6, r5
   11d1c:	bgt	11d8c <table_destroy@@Base+0xa0>
   11d20:	ldr	r0, [r4, #16]
   11d24:	cmp	r0, #0
   11d28:	beq	11d30 <table_destroy@@Base+0x44>
   11d2c:	bl	11a60 <free@plt>
   11d30:	mov	r0, r4
   11d34:	mov	r5, #0
   11d38:	bl	12598 <table_get_column_length@@Base>
   11d3c:	mov	r6, r0
   11d40:	cmp	r6, r5
   11d44:	bgt	11da0 <table_destroy@@Base+0xb4>
   11d48:	ldr	r0, [r4]
   11d4c:	cmp	r0, #0
   11d50:	beq	11d58 <table_destroy@@Base+0x6c>
   11d54:	bl	11a60 <free@plt>
   11d58:	ldr	r0, [r4, #36]	; 0x24
   11d5c:	cmp	r0, #0
   11d60:	beq	11d68 <table_destroy@@Base+0x7c>
   11d64:	bl	11a60 <free@plt>
   11d68:	ldr	r0, [r4, #40]	; 0x28
   11d6c:	cmp	r0, #0
   11d70:	beq	11d78 <table_destroy@@Base+0x8c>
   11d74:	bl	11a60 <free@plt>
   11d78:	ldr	r0, [r4, #44]	; 0x2c
   11d7c:	cmp	r0, #0
   11d80:	popeq	{r4, r5, r6, pc}
   11d84:	pop	{r4, r5, r6, lr}
   11d88:	b	11a60 <free@plt>
   11d8c:	mov	r1, r5
   11d90:	mov	r0, r4
   11d94:	bl	13064 <table_row_destroy@@Base>
   11d98:	add	r5, r5, #1
   11d9c:	b	11d18 <table_destroy@@Base+0x2c>
   11da0:	mov	r1, r5
   11da4:	mov	r0, r4
   11da8:	bl	1257c <table_column_destroy@@Base>
   11dac:	add	r5, r5, #1
   11db0:	b	11d40 <table_destroy@@Base+0x54>

00011db4 <table_delete@@Base>:
   11db4:	push	{r4, lr}
   11db8:	mov	r4, r0
   11dbc:	bl	11cec <table_destroy@@Base>
   11dc0:	mov	r0, r4
   11dc4:	pop	{r4, lr}
   11dc8:	b	11a60 <free@plt>

00011dcc <table_dupe@@Base>:
   11dcc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11dd0:	sub	sp, sp, #20
   11dd4:	mov	r6, r0
   11dd8:	mov	r4, #0
   11ddc:	bl	130b4 <table_get_row_length@@Base>
   11de0:	mov	r9, r0
   11de4:	mov	r0, r6
   11de8:	bl	12598 <table_get_column_length@@Base>
   11dec:	mov	r8, r0
   11df0:	bl	11cd4 <table_new@@Base>
   11df4:	mov	r7, r0
   11df8:	cmp	r4, r8
   11dfc:	blt	11e18 <table_dupe@@Base+0x4c>
   11e00:	mov	r5, #0
   11e04:	cmp	r5, r9
   11e08:	mov	r0, r7
   11e0c:	blt	11e4c <table_dupe@@Base+0x80>
   11e10:	add	sp, sp, #20
   11e14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11e18:	mov	r1, r4
   11e1c:	mov	r0, r6
   11e20:	bl	1285c <table_get_column_name@@Base>
   11e24:	mov	r5, r0
   11e28:	mov	r1, r4
   11e2c:	mov	r0, r6
   11e30:	add	r4, r4, #1
   11e34:	bl	125f0 <table_get_column_data_type@@Base>
   11e38:	mov	r2, r0
   11e3c:	mov	r1, r5
   11e40:	mov	r0, r7
   11e44:	bl	12604 <table_add_column@@Base>
   11e48:	b	11df8 <table_dupe@@Base+0x2c>
   11e4c:	mov	r4, #0
   11e50:	bl	130bc <table_add_row@@Base>
   11e54:	cmp	r4, r8
   11e58:	addge	r5, r5, #1
   11e5c:	bge	11e04 <table_dupe@@Base+0x38>
   11e60:	mov	r1, r4
   11e64:	mov	r0, r6
   11e68:	bl	125f0 <table_get_column_data_type@@Base>
   11e6c:	cmp	r0, #23
   11e70:	ldrls	pc, [pc, r0, lsl #2]
   11e74:	b	11efc <table_dupe@@Base+0x130>
   11e78:	ldrdeq	r1, [r1], -r8
   11e7c:	andeq	r1, r1, r4, lsl #30
   11e80:	andeq	r1, r1, ip, lsr #30
   11e84:	andeq	r1, r1, r4, asr pc
   11e88:	andeq	r1, r1, ip, ror pc
   11e8c:	andeq	r1, r1, r4, lsr #31
   11e90:	andeq	r1, r1, ip, asr #31
   11e94:	strdeq	r1, [r1], -r4
   11e98:	andeq	r2, r1, ip, lsl r0
   11e9c:	andeq	r2, r1, r4, asr #32
   11ea0:	andeq	r2, r1, ip, rrx
   11ea4:	muleq	r1, r4, r0
   11ea8:	strheq	r2, [r1], -ip
   11eac:	andeq	r2, r1, r4, ror #1
   11eb0:	andeq	r2, r1, ip, lsl #2
   11eb4:	andeq	r2, r1, r4, lsr r1
   11eb8:	andeq	r2, r1, r4, lsl #3
   11ebc:	andeq	r2, r1, r8, lsr #3
   11ec0:	andeq	r2, r1, ip, asr #3
   11ec4:	andeq	r2, r1, r8, lsl r2
   11ec8:	andeq	r2, r1, r0, asr #4
   11ecc:	andeq	r2, r1, ip, asr r1
   11ed0:	strdeq	r2, [r1], -r0
   11ed4:	andeq	r2, r1, r8, ror #4
   11ed8:	mov	r2, r4
   11edc:	mov	r1, r5
   11ee0:	mov	r0, r6
   11ee4:	bl	12f4c <table_get_int@@Base>
   11ee8:	mov	r3, r0
   11eec:	mov	r2, r4
   11ef0:	mov	r1, r5
   11ef4:	mov	r0, r7
   11ef8:	bl	1356c <table_set_int@@Base>
   11efc:	add	r4, r4, #1
   11f00:	b	11e54 <table_dupe@@Base+0x88>
   11f04:	mov	r2, r4
   11f08:	mov	r1, r5
   11f0c:	mov	r0, r6
   11f10:	bl	12f5c <table_get_uint@@Base>
   11f14:	mov	r3, r0
   11f18:	mov	r2, r4
   11f1c:	mov	r1, r5
   11f20:	mov	r0, r7
   11f24:	bl	1358c <table_set_uint@@Base>
   11f28:	b	11efc <table_dupe@@Base+0x130>
   11f2c:	mov	r2, r4
   11f30:	mov	r1, r5
   11f34:	mov	r0, r6
   11f38:	bl	12f6c <table_get_int8@@Base>
   11f3c:	mov	r3, r0
   11f40:	mov	r2, r4
   11f44:	mov	r1, r5
   11f48:	mov	r0, r7
   11f4c:	bl	135ac <table_set_int8@@Base>
   11f50:	b	11efc <table_dupe@@Base+0x130>
   11f54:	mov	r2, r4
   11f58:	mov	r1, r5
   11f5c:	mov	r0, r6
   11f60:	bl	12f7c <table_get_uint8@@Base>
   11f64:	mov	r3, r0
   11f68:	mov	r2, r4
   11f6c:	mov	r1, r5
   11f70:	mov	r0, r7
   11f74:	bl	135cc <table_set_uint8@@Base>
   11f78:	b	11efc <table_dupe@@Base+0x130>
   11f7c:	mov	r2, r4
   11f80:	mov	r1, r5
   11f84:	mov	r0, r6
   11f88:	bl	12f8c <table_get_int16@@Base>
   11f8c:	mov	r3, r0
   11f90:	mov	r2, r4
   11f94:	mov	r1, r5
   11f98:	mov	r0, r7
   11f9c:	bl	135ec <table_set_int16@@Base>
   11fa0:	b	11efc <table_dupe@@Base+0x130>
   11fa4:	mov	r2, r4
   11fa8:	mov	r1, r5
   11fac:	mov	r0, r6
   11fb0:	bl	12f9c <table_get_uint16@@Base>
   11fb4:	mov	r3, r0
   11fb8:	mov	r2, r4
   11fbc:	mov	r1, r5
   11fc0:	mov	r0, r7
   11fc4:	bl	1360c <table_set_uint16@@Base>
   11fc8:	b	11efc <table_dupe@@Base+0x130>
   11fcc:	mov	r2, r4
   11fd0:	mov	r1, r5
   11fd4:	mov	r0, r6
   11fd8:	bl	12fac <table_get_int32@@Base>
   11fdc:	mov	r3, r0
   11fe0:	mov	r2, r4
   11fe4:	mov	r1, r5
   11fe8:	mov	r0, r7
   11fec:	bl	1362c <table_set_int32@@Base>
   11ff0:	b	11efc <table_dupe@@Base+0x130>
   11ff4:	mov	r2, r4
   11ff8:	mov	r1, r5
   11ffc:	mov	r0, r6
   12000:	bl	12fb0 <table_get_uint32@@Base>
   12004:	mov	r3, r0
   12008:	mov	r2, r4
   1200c:	mov	r1, r5
   12010:	mov	r0, r7
   12014:	bl	1364c <table_set_uint32@@Base>
   12018:	b	11efc <table_dupe@@Base+0x130>
   1201c:	mov	r2, r4
   12020:	mov	r1, r5
   12024:	mov	r0, r6
   12028:	bl	12fb4 <table_get_int64@@Base>
   1202c:	mov	r2, r4
   12030:	strd	r0, [sp]
   12034:	mov	r1, r5
   12038:	mov	r0, r7
   1203c:	bl	1366c <table_set_int64@@Base>
   12040:	b	11efc <table_dupe@@Base+0x130>
   12044:	mov	r2, r4
   12048:	mov	r1, r5
   1204c:	mov	r0, r6
   12050:	bl	12fc4 <table_get_uint64@@Base>
   12054:	mov	r2, r4
   12058:	strd	r0, [sp]
   1205c:	mov	r1, r5
   12060:	mov	r0, r7
   12064:	bl	13688 <table_set_uint64@@Base>
   12068:	b	11efc <table_dupe@@Base+0x130>
   1206c:	mov	r2, r4
   12070:	mov	r1, r5
   12074:	mov	r0, r6
   12078:	bl	12fd4 <table_get_short@@Base>
   1207c:	mov	r3, r0
   12080:	mov	r2, r4
   12084:	mov	r1, r5
   12088:	mov	r0, r7
   1208c:	bl	136a4 <table_set_short@@Base>
   12090:	b	11efc <table_dupe@@Base+0x130>
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	mov	r0, r6
   120a0:	bl	12fd8 <table_get_ushort@@Base>
   120a4:	mov	r3, r0
   120a8:	mov	r2, r4
   120ac:	mov	r1, r5
   120b0:	mov	r0, r7
   120b4:	bl	136c4 <table_set_ushort@@Base>
   120b8:	b	11efc <table_dupe@@Base+0x130>
   120bc:	mov	r2, r4
   120c0:	mov	r1, r5
   120c4:	mov	r0, r6
   120c8:	bl	12fdc <table_get_long@@Base>
   120cc:	mov	r3, r0
   120d0:	mov	r2, r4
   120d4:	mov	r1, r5
   120d8:	mov	r0, r7
   120dc:	bl	136e4 <table_set_long@@Base>
   120e0:	b	11efc <table_dupe@@Base+0x130>
   120e4:	mov	r2, r4
   120e8:	mov	r1, r5
   120ec:	mov	r0, r6
   120f0:	bl	12fec <table_get_ulong@@Base>
   120f4:	mov	r3, r0
   120f8:	mov	r2, r4
   120fc:	mov	r1, r5
   12100:	mov	r0, r7
   12104:	bl	13704 <table_set_ulong@@Base>
   12108:	b	11efc <table_dupe@@Base+0x130>
   1210c:	mov	r2, r4
   12110:	mov	r1, r5
   12114:	mov	r0, r6
   12118:	bl	12ffc <table_get_llong@@Base>
   1211c:	mov	r2, r4
   12120:	strd	r0, [sp]
   12124:	mov	r1, r5
   12128:	mov	r0, r7
   1212c:	bl	13724 <table_set_llong@@Base>
   12130:	b	11efc <table_dupe@@Base+0x130>
   12134:	mov	r2, r4
   12138:	mov	r1, r5
   1213c:	mov	r0, r6
   12140:	bl	13000 <table_get_ullong@@Base>
   12144:	mov	r2, r4
   12148:	strd	r0, [sp]
   1214c:	mov	r1, r5
   12150:	mov	r0, r7
   12154:	bl	13740 <table_set_ullong@@Base>
   12158:	b	11efc <table_dupe@@Base+0x130>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r0, r6
   12168:	bl	1303c <table_get_string@@Base>
   1216c:	mov	r3, r0
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r7
   1217c:	bl	137bc <table_set_string@@Base>
   12180:	b	11efc <table_dupe@@Base+0x130>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	mov	r0, r6
   12190:	bl	13004 <table_get_float@@Base>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r0, r7
   121a0:	bl	1375c <table_set_float@@Base>
   121a4:	b	11efc <table_dupe@@Base+0x130>
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r0, r6
   121b4:	bl	13014 <table_get_double@@Base>
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r7
   121c4:	bl	1377c <table_set_double@@Base>
   121c8:	b	11efc <table_dupe@@Base+0x130>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	13024 <table_get_ldouble@@Base>
   121dc:	mov	r2, r4
   121e0:	mov	r1, r5
   121e4:	mov	r0, r7
   121e8:	bl	1379c <table_set_ldouble@@Base>
   121ec:	b	11efc <table_dupe@@Base+0x130>
   121f0:	mov	r2, r4
   121f4:	mov	r1, r5
   121f8:	mov	r0, r6
   121fc:	bl	12f3c <table_get_bool@@Base>
   12200:	mov	r3, r0
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r0, r7
   12210:	bl	1354c <table_set_bool@@Base>
   12214:	b	11efc <table_dupe@@Base+0x130>
   12218:	mov	r2, r4
   1221c:	mov	r1, r5
   12220:	mov	r0, r6
   12224:	bl	13034 <table_get_char@@Base>
   12228:	mov	r3, r0
   1222c:	mov	r2, r4
   12230:	mov	r1, r5
   12234:	mov	r0, r7
   12238:	bl	137d4 <table_set_char@@Base>
   1223c:	b	11efc <table_dupe@@Base+0x130>
   12240:	mov	r2, r4
   12244:	mov	r1, r5
   12248:	mov	r0, r6
   1224c:	bl	13038 <table_get_uchar@@Base>
   12250:	mov	r3, r0
   12254:	mov	r2, r4
   12258:	mov	r1, r5
   1225c:	mov	r0, r7
   12260:	bl	137f4 <table_set_uchar@@Base>
   12264:	b	11efc <table_dupe@@Base+0x130>
   12268:	mov	r2, r4
   1226c:	mov	r1, r5
   12270:	mov	r0, r6
   12274:	bl	13040 <table_get_ptr@@Base>
   12278:	add	r3, sp, #12
   1227c:	mov	r2, r4
   12280:	str	r0, [sp, #12]
   12284:	mov	r1, r5
   12288:	mov	r0, r7
   1228c:	bl	13814 <table_set_ptr@@Base>
   12290:	b	11efc <table_dupe@@Base+0x130>

00012294 <table_get_major_version@@Base>:
   12294:	mov	r0, #0
   12298:	bx	lr

0001229c <table_get_minor_version@@Base>:
   1229c:	mov	r0, #0
   122a0:	bx	lr

000122a4 <table_get_patch_version@@Base>:
   122a4:	mov	r0, #0
   122a8:	bx	lr

000122ac <table_get_version@@Base>:
   122ac:	ldr	r0, [pc]	; 122b4 <table_get_version@@Base+0x8>
   122b0:	bx	lr
   122b4:	muleq	r1, r0, r2

000122b8 <table_get_callback_length@@Base>:
   122b8:	ldr	r0, [r0, #32]
   122bc:	bx	lr

000122c0 <table_register_callback@@Base>:
   122c0:	push	{r4, r5, r6, r7, r8, lr}
   122c4:	mov	r4, r0
   122c8:	mov	ip, #0
   122cc:	ldr	lr, [r0, #32]
   122d0:	ldr	r0, [r0, #36]	; 0x24
   122d4:	cmp	ip, lr
   122d8:	blt	12368 <table_register_callback@@Base+0xa8>
   122dc:	ldr	ip, [r4, #48]	; 0x30
   122e0:	mov	r5, r3
   122e4:	mov	r6, r2
   122e8:	mov	r7, r1
   122ec:	udiv	r3, lr, ip
   122f0:	mls	r3, ip, r3, lr
   122f4:	cmp	r3, #0
   122f8:	bne	1233c <table_register_callback@@Base+0x7c>
   122fc:	ldr	r1, [r4, #52]	; 0x34
   12300:	add	r1, ip, r1
   12304:	str	r1, [r4, #52]	; 0x34
   12308:	lsl	r1, r1, #2
   1230c:	bl	11a6c <realloc@plt>
   12310:	ldr	r1, [r4, #52]	; 0x34
   12314:	str	r0, [r4, #36]	; 0x24
   12318:	ldr	r0, [r4, #40]	; 0x28
   1231c:	lsl	r1, r1, #2
   12320:	bl	11a6c <realloc@plt>
   12324:	ldr	r1, [r4, #52]	; 0x34
   12328:	str	r0, [r4, #40]	; 0x28
   1232c:	ldr	r0, [r4, #44]	; 0x2c
   12330:	lsl	r1, r1, #2
   12334:	bl	11a6c <realloc@plt>
   12338:	str	r0, [r4, #44]	; 0x2c
   1233c:	ldr	r3, [r4, #32]
   12340:	ldr	r2, [r4, #36]	; 0x24
   12344:	str	r7, [r2, r3, lsl #2]
   12348:	ldr	r2, [r4, #40]	; 0x28
   1234c:	str	r6, [r2, r3, lsl #2]
   12350:	ldr	r2, [r4, #44]	; 0x2c
   12354:	str	r5, [r2, r3, lsl #2]
   12358:	ldr	r3, [r4, #32]
   1235c:	add	r3, r3, #1
   12360:	str	r3, [r4, #32]
   12364:	pop	{r4, r5, r6, r7, r8, pc}
   12368:	ldr	r6, [r0, ip, lsl #2]
   1236c:	lsl	r5, ip, #2
   12370:	cmp	r1, r6
   12374:	bne	12388 <table_register_callback@@Base+0xc8>
   12378:	ldr	r6, [r4, #40]	; 0x28
   1237c:	ldr	r6, [r6, ip, lsl #2]
   12380:	cmp	r2, r6
   12384:	beq	12390 <table_register_callback@@Base+0xd0>
   12388:	add	ip, ip, #1
   1238c:	b	122d4 <table_register_callback@@Base+0x14>
   12390:	cmp	ip, #0
   12394:	ble	122dc <table_register_callback@@Base+0x1c>
   12398:	ldr	r1, [r4, #44]	; 0x2c
   1239c:	ldr	r2, [r1, r5]
   123a0:	orr	r2, r2, r3
   123a4:	str	r2, [r1, r5]
   123a8:	pop	{r4, r5, r6, r7, r8, pc}

000123ac <table_unregister_callback@@Base>:
   123ac:	ldr	ip, [r0, #32]
   123b0:	mov	r3, #0
   123b4:	cmp	r3, ip
   123b8:	bxge	lr
   123bc:	push	{r4, r5, r6, lr}
   123c0:	ldr	lr, [r0, #36]	; 0x24
   123c4:	ldr	lr, [lr, r3, lsl #2]
   123c8:	cmp	r1, lr
   123cc:	bne	123e0 <table_unregister_callback@@Base+0x34>
   123d0:	ldr	lr, [r0, #40]	; 0x28
   123d4:	ldr	lr, [lr, r3, lsl #2]
   123d8:	cmp	r2, lr
   123dc:	beq	12420 <table_unregister_callback@@Base+0x74>
   123e0:	add	r3, r3, #1
   123e4:	cmp	r3, ip
   123e8:	blt	123c0 <table_unregister_callback@@Base+0x14>
   123ec:	pop	{r4, r5, r6, pc}
   123f0:	ldr	r1, [r0, #36]	; 0x24
   123f4:	add	r2, r3, #1
   123f8:	lsl	r3, r3, #2
   123fc:	ldr	ip, [r1, r2, lsl #2]
   12400:	str	ip, [r1, r3]
   12404:	ldr	r1, [r0, #40]	; 0x28
   12408:	ldr	ip, [r1, r2, lsl #2]
   1240c:	str	ip, [r1, r3]
   12410:	ldr	r1, [r0, #44]	; 0x2c
   12414:	ldr	ip, [r1, r2, lsl #2]
   12418:	str	ip, [r1, r3]
   1241c:	mov	r3, r2
   12420:	ldr	r2, [r0, #32]
   12424:	sub	r2, r2, #1
   12428:	cmp	r2, r3
   1242c:	bgt	123f0 <table_unregister_callback@@Base+0x44>
   12430:	ldr	r1, [r0, #48]	; 0x30
   12434:	str	r2, [r0, #32]
   12438:	udiv	r3, r2, r1
   1243c:	mls	r2, r1, r3, r2
   12440:	cmp	r2, #0
   12444:	popne	{r4, r5, r6, pc}
   12448:	mov	r4, r0
   1244c:	ldr	r5, [r4, #52]	; 0x34
   12450:	ldr	r0, [r0, #36]	; 0x24
   12454:	sub	r5, r5, r1
   12458:	cmp	r5, #0
   1245c:	str	r5, [r4, #52]	; 0x34
   12460:	beq	1249c <table_unregister_callback@@Base+0xf0>
   12464:	lsl	r1, r5, #2
   12468:	bl	11a6c <realloc@plt>
   1246c:	ldr	r1, [r4, #52]	; 0x34
   12470:	str	r0, [r4, #36]	; 0x24
   12474:	ldr	r0, [r4, #40]	; 0x28
   12478:	lsl	r1, r1, #2
   1247c:	bl	11a6c <realloc@plt>
   12480:	ldr	r1, [r4, #52]	; 0x34
   12484:	str	r0, [r4, #40]	; 0x28
   12488:	ldr	r0, [r4, #44]	; 0x2c
   1248c:	lsl	r1, r1, #2
   12490:	bl	11a6c <realloc@plt>
   12494:	str	r0, [r4, #44]	; 0x2c
   12498:	pop	{r4, r5, r6, pc}
   1249c:	bl	11a60 <free@plt>
   124a0:	ldr	r0, [r4, #40]	; 0x28
   124a4:	bl	11a60 <free@plt>
   124a8:	ldr	r0, [r4, #44]	; 0x2c
   124ac:	bl	11a60 <free@plt>
   124b0:	str	r5, [r4, #36]	; 0x24
   124b4:	str	r5, [r4, #40]	; 0x28
   124b8:	str	r5, [r4, #44]	; 0x2c
   124bc:	pop	{r4, r5, r6, pc}

000124c0 <table_notify@@Base>:
   124c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   124c4:	mov	r5, r0
   124c8:	mov	r7, r1
   124cc:	mov	r8, r2
   124d0:	mov	r6, r3
   124d4:	mov	r4, #0
   124d8:	ldr	r3, [r5, #32]
   124dc:	cmp	r3, r4
   124e0:	bgt	124ec <table_notify@@Base+0x2c>
   124e4:	add	sp, sp, #12
   124e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124ec:	ldr	r3, [r5, #44]	; 0x2c
   124f0:	ldr	r3, [r3, r4, lsl #2]
   124f4:	tst	r6, r3
   124f8:	beq	12524 <table_notify@@Base+0x64>
   124fc:	ldr	r3, [r5, #36]	; 0x24
   12500:	mov	r1, r7
   12504:	mov	r0, r5
   12508:	ldr	r2, [r5, #40]	; 0x28
   1250c:	ldr	r2, [r2, r4, lsl #2]
   12510:	str	r2, [sp]
   12514:	mov	r2, r8
   12518:	ldr	r9, [r3, r4, lsl #2]
   1251c:	mov	r3, r6
   12520:	blx	r9
   12524:	add	r4, r4, #1
   12528:	b	124d8 <table_notify@@Base+0x18>

0001252c <table_column_init@@Base>:
   1252c:	push	{r4, r5, r6, r7, r8, lr}
   12530:	mov	r4, #12
   12534:	mov	r6, r2
   12538:	mov	r8, r3
   1253c:	mul	r4, r4, r1
   12540:	ldr	r7, [r0]
   12544:	mov	r0, r2
   12548:	bl	11aa8 <strlen@plt>
   1254c:	add	r0, r0, #1
   12550:	bl	11a84 <malloc@plt>
   12554:	cmp	r0, #0
   12558:	add	r5, r7, r4
   1255c:	str	r0, [r7, r4]
   12560:	beq	1256c <table_column_init@@Base+0x40>
   12564:	mov	r1, r6
   12568:	bl	11a78 <strcpy@plt>
   1256c:	ldr	r3, [sp, #24]
   12570:	str	r8, [r5, #4]
   12574:	str	r3, [r5, #8]
   12578:	pop	{r4, r5, r6, r7, r8, pc}

0001257c <table_column_destroy@@Base>:
   1257c:	mov	r3, #12
   12580:	ldr	r2, [r0]
   12584:	mul	r1, r3, r1
   12588:	ldr	r0, [r2, r1]
   1258c:	cmp	r0, #0
   12590:	bxeq	lr
   12594:	b	11a60 <free@plt>

00012598 <table_get_column_length@@Base>:
   12598:	ldr	r0, [r0, #4]
   1259c:	bx	lr

000125a0 <table_get_column@@Base>:
   125a0:	push	{r4, r5, r6, r7, r8, lr}
   125a4:	mov	r5, r0
   125a8:	mov	r7, r1
   125ac:	mov	r4, #0
   125b0:	mov	r8, #12
   125b4:	ldr	r6, [r0, #4]
   125b8:	cmp	r4, r6
   125bc:	blt	125cc <table_get_column@@Base+0x2c>
   125c0:	mvneq	r4, #0
   125c4:	mov	r0, r4
   125c8:	pop	{r4, r5, r6, r7, r8, pc}
   125cc:	ldr	r2, [r5]
   125d0:	mul	r3, r8, r4
   125d4:	mov	r1, r7
   125d8:	ldr	r0, [r2, r3]
   125dc:	bl	11a48 <strcmp@plt>
   125e0:	cmp	r0, #0
   125e4:	beq	125c4 <table_get_column@@Base+0x24>
   125e8:	add	r4, r4, #1
   125ec:	b	125b8 <table_get_column@@Base+0x18>

000125f0 <table_get_column_data_type@@Base>:
   125f0:	ldr	r2, [r0]
   125f4:	mov	r3, #12
   125f8:	mla	r1, r3, r1, r2
   125fc:	ldr	r0, [r1, #4]
   12600:	bx	lr

00012604 <table_add_column@@Base>:
   12604:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12608:	mov	r7, r1
   1260c:	mov	r4, r0
   12610:	mov	r6, r2
   12614:	ldr	r3, [r0, #4]
   12618:	ldr	r1, [r0, #8]
   1261c:	udiv	r5, r3, r1
   12620:	mls	r5, r1, r5, r3
   12624:	cmp	r5, #0
   12628:	beq	12690 <table_add_column@@Base+0x8c>
   1262c:	mov	r0, r4
   12630:	mov	r5, #0
   12634:	bl	130b4 <table_get_row_length@@Base>
   12638:	ldr	r8, [r4, #4]
   1263c:	mov	r9, r0
   12640:	mov	r0, r6
   12644:	bl	12f14 <table_get_default_compare_function_for_data_type@@Base>
   12648:	mov	r3, r6
   1264c:	mov	r2, r7
   12650:	str	r0, [sp]
   12654:	mov	r0, r4
   12658:	mov	r1, r8
   1265c:	bl	1252c <table_column_init@@Base>
   12660:	cmp	r9, r5
   12664:	bgt	126f0 <table_add_column@@Base+0xec>
   12668:	mov	r0, r4
   1266c:	mov	r3, #8
   12670:	ldr	r2, [r4, #4]
   12674:	mvn	r1, #0
   12678:	bl	124c0 <table_notify@@Base>
   1267c:	ldr	r0, [r4, #4]
   12680:	add	r3, r0, #1
   12684:	str	r3, [r4, #4]
   12688:	add	sp, sp, #12
   1268c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12690:	ldr	r3, [r4, #12]
   12694:	ldr	r0, [r0]
   12698:	add	r1, r1, r3
   1269c:	mov	r3, #12
   126a0:	str	r1, [r4, #12]
   126a4:	mul	r1, r3, r1
   126a8:	bl	11a6c <realloc@plt>
   126ac:	str	r0, [r4]
   126b0:	mov	r0, r4
   126b4:	bl	130b4 <table_get_row_length@@Base>
   126b8:	mov	r9, r0
   126bc:	cmp	r9, r5
   126c0:	ble	1262c <table_add_column@@Base+0x28>
   126c4:	mov	r1, r5
   126c8:	mov	r0, r4
   126cc:	bl	13250 <table_get_row_ptr@@Base>
   126d0:	ldr	r1, [r4, #12]
   126d4:	mov	r8, r0
   126d8:	add	r5, r5, #1
   126dc:	ldr	r0, [r0]
   126e0:	lsl	r1, r1, #2
   126e4:	bl	11a6c <realloc@plt>
   126e8:	str	r0, [r8]
   126ec:	b	126bc <table_add_column@@Base+0xb8>
   126f0:	mov	r1, r5
   126f4:	mov	r2, r8
   126f8:	mov	r0, r4
   126fc:	add	r5, r5, #1
   12700:	bl	140c4 <table_cell_init@@Base>
   12704:	b	12660 <table_add_column@@Base+0x5c>

00012708 <table_remove_column@@Base>:
   12708:	push	{r4, r5, r6, r7, r8, lr}
   1270c:	mov	r4, r0
   12710:	mov	r6, r1
   12714:	mov	r5, #12
   12718:	bl	1257c <table_column_destroy@@Base>
   1271c:	ldr	r7, [r4, #4]
   12720:	mov	r1, r6
   12724:	sub	r7, r7, #1
   12728:	cmp	r1, r7
   1272c:	blt	127b8 <table_remove_column@@Base+0xb0>
   12730:	mov	r0, r4
   12734:	mov	r5, #0
   12738:	bl	130b4 <table_get_row_length@@Base>
   1273c:	mov	r8, r0
   12740:	cmp	r8, r5
   12744:	bgt	127ec <table_remove_column@@Base+0xe4>
   12748:	ldr	r5, [r4, #4]
   1274c:	ldr	r1, [r4, #8]
   12750:	sub	r3, r5, #1
   12754:	udiv	r5, r3, r1
   12758:	str	r3, [r4, #4]
   1275c:	mls	r5, r1, r5, r3
   12760:	cmp	r5, #0
   12764:	bne	1279c <table_remove_column@@Base+0x94>
   12768:	ldr	r0, [r4]
   1276c:	ldr	r3, [r4, #12]
   12770:	sub	r3, r3, r1
   12774:	mov	r1, #12
   12778:	mul	r1, r1, r3
   1277c:	str	r3, [r4, #12]
   12780:	bl	11a6c <realloc@plt>
   12784:	str	r0, [r4]
   12788:	mov	r0, r4
   1278c:	bl	130b4 <table_get_row_length@@Base>
   12790:	mov	r8, r0
   12794:	cmp	r8, r5
   12798:	bgt	12830 <table_remove_column@@Base+0x128>
   1279c:	mov	r0, r4
   127a0:	mov	r3, #16
   127a4:	mov	r2, r6
   127a8:	mvn	r1, #0
   127ac:	bl	124c0 <table_notify@@Base>
   127b0:	mov	r0, #0
   127b4:	pop	{r4, r5, r6, r7, r8, pc}
   127b8:	ldr	ip, [r4]
   127bc:	mul	r0, r5, r1
   127c0:	add	r1, r1, #1
   127c4:	add	r2, r0, #12
   127c8:	add	r2, ip, r2
   127cc:	add	lr, ip, r0
   127d0:	ldr	r3, [r2]
   127d4:	str	r3, [ip, r0]
   127d8:	ldr	r3, [r2, #4]
   127dc:	str	r3, [lr, #4]
   127e0:	ldr	r3, [r2, #8]
   127e4:	str	r3, [lr, #8]
   127e8:	b	12728 <table_remove_column@@Base+0x20>
   127ec:	mov	r2, r6
   127f0:	mov	r1, r5
   127f4:	mov	r0, r4
   127f8:	bl	140d8 <table_cell_destroy@@Base>
   127fc:	mov	r1, r5
   12800:	mov	r0, r4
   12804:	bl	13250 <table_get_row_ptr@@Base>
   12808:	mov	r3, r6
   1280c:	cmp	r7, r3
   12810:	addle	r5, r5, #1
   12814:	ble	12740 <table_remove_column@@Base+0x38>
   12818:	ldr	r2, [r0]
   1281c:	add	r1, r2, r3, lsl #2
   12820:	ldr	r1, [r1, #4]
   12824:	str	r1, [r2, r3, lsl #2]
   12828:	add	r3, r3, #1
   1282c:	b	1280c <table_remove_column@@Base+0x104>
   12830:	mov	r1, r5
   12834:	mov	r0, r4
   12838:	bl	13250 <table_get_row_ptr@@Base>
   1283c:	ldr	r1, [r4, #12]
   12840:	mov	r7, r0
   12844:	add	r5, r5, #1
   12848:	ldr	r0, [r0]
   1284c:	lsl	r1, r1, #2
   12850:	bl	11a6c <realloc@plt>
   12854:	str	r0, [r7]
   12858:	b	12794 <table_remove_column@@Base+0x8c>

0001285c <table_get_column_name@@Base>:
   1285c:	mov	r3, #12
   12860:	ldr	r2, [r0]
   12864:	mul	r1, r3, r1
   12868:	ldr	r0, [r2, r1]
   1286c:	bx	lr

00012870 <table_get_col_ptr@@Base>:
   12870:	ldr	r3, [r0]
   12874:	mov	r0, #12
   12878:	mla	r0, r0, r1, r3
   1287c:	bx	lr

00012880 <table_get_column_compare_function@@Base>:
   12880:	ldr	r2, [r0]
   12884:	mov	r3, #12
   12888:	mla	r1, r3, r1, r2
   1288c:	ldr	r0, [r1, #8]
   12890:	bx	lr

00012894 <table_set_column_compare_function@@Base>:
   12894:	ldr	r0, [r0]
   12898:	mov	r3, #12
   1289c:	mla	r1, r3, r1, r0
   128a0:	str	r2, [r1, #8]
   128a4:	bx	lr

000128a8 <table_compare_ptr@@Base>:
   128a8:	cmp	r0, r1
   128ac:	bhi	128bc <table_compare_ptr@@Base+0x14>
   128b0:	mvncc	r0, #0
   128b4:	movcs	r0, #0
   128b8:	bx	lr
   128bc:	mov	r0, #1
   128c0:	bx	lr

000128c4 <table_compare_string@@Base>:
   128c4:	cmp	r0, #0
   128c8:	bne	128dc <table_compare_string@@Base+0x18>
   128cc:	adds	r0, r1, #0
   128d0:	movne	r0, #1
   128d4:	rsb	r0, r0, #0
   128d8:	bx	lr
   128dc:	cmp	r1, #0
   128e0:	beq	128e8 <table_compare_string@@Base+0x24>
   128e4:	b	11a48 <strcmp@plt>
   128e8:	mov	r0, #1
   128ec:	bx	lr

000128f0 <table_compare_bool@@Base>:
   128f0:	cmp	r0, #0
   128f4:	bne	12908 <table_compare_bool@@Base+0x18>
   128f8:	adds	r0, r1, #0
   128fc:	movne	r0, #1
   12900:	rsb	r0, r0, #0
   12904:	bx	lr
   12908:	cmp	r1, #0
   1290c:	beq	1292c <table_compare_bool@@Base+0x3c>
   12910:	ldrb	r2, [r0]
   12914:	ldrb	r3, [r1]
   12918:	cmp	r2, r3
   1291c:	bhi	1292c <table_compare_bool@@Base+0x3c>
   12920:	mvncc	r0, #0
   12924:	movcs	r0, #0
   12928:	bx	lr
   1292c:	mov	r0, #1
   12930:	bx	lr

00012934 <table_compare_int32@@Base>:
   12934:	cmp	r0, #0
   12938:	bne	1294c <table_compare_int32@@Base+0x18>
   1293c:	adds	r0, r1, #0
   12940:	movne	r0, #1
   12944:	rsb	r0, r0, #0
   12948:	bx	lr
   1294c:	cmp	r1, #0
   12950:	beq	12970 <table_compare_int32@@Base+0x3c>
   12954:	ldr	r2, [r0]
   12958:	ldr	r3, [r1]
   1295c:	cmp	r2, r3
   12960:	bgt	12970 <table_compare_int32@@Base+0x3c>
   12964:	mvnlt	r0, #0
   12968:	movge	r0, #0
   1296c:	bx	lr
   12970:	mov	r0, #1
   12974:	bx	lr

00012978 <table_compare_uint32@@Base>:
   12978:	cmp	r0, #0
   1297c:	bne	12990 <table_compare_uint32@@Base+0x18>
   12980:	adds	r0, r1, #0
   12984:	movne	r0, #1
   12988:	rsb	r0, r0, #0
   1298c:	bx	lr
   12990:	cmp	r1, #0
   12994:	beq	129b4 <table_compare_uint32@@Base+0x3c>
   12998:	ldr	r2, [r0]
   1299c:	ldr	r3, [r1]
   129a0:	cmp	r2, r3
   129a4:	bhi	129b4 <table_compare_uint32@@Base+0x3c>
   129a8:	mvncc	r0, #0
   129ac:	movcs	r0, #0
   129b0:	bx	lr
   129b4:	mov	r0, #1
   129b8:	bx	lr

000129bc <table_compare_int8@@Base>:
   129bc:	cmp	r0, #0
   129c0:	bne	129d4 <table_compare_int8@@Base+0x18>
   129c4:	adds	r0, r1, #0
   129c8:	movne	r0, #1
   129cc:	rsb	r0, r0, #0
   129d0:	bx	lr
   129d4:	cmp	r1, #0
   129d8:	beq	129f8 <table_compare_int8@@Base+0x3c>
   129dc:	ldrsb	r2, [r0]
   129e0:	ldrsb	r3, [r1]
   129e4:	cmp	r2, r3
   129e8:	bgt	129f8 <table_compare_int8@@Base+0x3c>
   129ec:	mvnlt	r0, #0
   129f0:	movge	r0, #0
   129f4:	bx	lr
   129f8:	mov	r0, #1
   129fc:	bx	lr

00012a00 <table_compare_char@@Base>:
   12a00:	cmp	r0, #0
   12a04:	bne	12a18 <table_compare_char@@Base+0x18>
   12a08:	adds	r0, r1, #0
   12a0c:	movne	r0, #1
   12a10:	rsb	r0, r0, #0
   12a14:	bx	lr
   12a18:	cmp	r1, #0
   12a1c:	beq	12a3c <table_compare_char@@Base+0x3c>
   12a20:	ldrb	r2, [r0]
   12a24:	ldrb	r3, [r1]
   12a28:	cmp	r2, r3
   12a2c:	bhi	12a3c <table_compare_char@@Base+0x3c>
   12a30:	mvncc	r0, #0
   12a34:	movcs	r0, #0
   12a38:	bx	lr
   12a3c:	mov	r0, #1
   12a40:	bx	lr

00012a44 <table_compare_short@@Base>:
   12a44:	cmp	r0, #0
   12a48:	bne	12a5c <table_compare_short@@Base+0x18>
   12a4c:	adds	r0, r1, #0
   12a50:	movne	r0, #1
   12a54:	rsb	r0, r0, #0
   12a58:	bx	lr
   12a5c:	cmp	r1, #0
   12a60:	beq	12a80 <table_compare_short@@Base+0x3c>
   12a64:	ldrsh	r2, [r0]
   12a68:	ldrsh	r3, [r1]
   12a6c:	cmp	r2, r3
   12a70:	bgt	12a80 <table_compare_short@@Base+0x3c>
   12a74:	mvnlt	r0, #0
   12a78:	movge	r0, #0
   12a7c:	bx	lr
   12a80:	mov	r0, #1
   12a84:	bx	lr

00012a88 <table_compare_ushort@@Base>:
   12a88:	cmp	r0, #0
   12a8c:	bne	12aa0 <table_compare_ushort@@Base+0x18>
   12a90:	adds	r0, r1, #0
   12a94:	movne	r0, #1
   12a98:	rsb	r0, r0, #0
   12a9c:	bx	lr
   12aa0:	cmp	r1, #0
   12aa4:	beq	12ac4 <table_compare_ushort@@Base+0x3c>
   12aa8:	ldrh	r2, [r0]
   12aac:	ldrh	r3, [r1]
   12ab0:	cmp	r2, r3
   12ab4:	bhi	12ac4 <table_compare_ushort@@Base+0x3c>
   12ab8:	mvncc	r0, #0
   12abc:	movcs	r0, #0
   12ac0:	bx	lr
   12ac4:	mov	r0, #1
   12ac8:	bx	lr

00012acc <table_compare_llong@@Base>:
   12acc:	cmp	r0, #0
   12ad0:	bne	12ae4 <table_compare_llong@@Base+0x18>
   12ad4:	adds	r0, r1, #0
   12ad8:	movne	r0, #1
   12adc:	rsb	r0, r0, #0
   12ae0:	bx	lr
   12ae4:	cmp	r1, #0
   12ae8:	beq	12b18 <table_compare_llong@@Base+0x4c>
   12aec:	push	{r4, r5, lr}
   12af0:	ldrd	r2, [r1]
   12af4:	ldrd	r4, [r0]
   12af8:	cmp	r2, r4
   12afc:	sbcs	r1, r3, r5
   12b00:	blt	12b20 <table_compare_llong@@Base+0x54>
   12b04:	cmp	r4, r2
   12b08:	sbcs	r3, r5, r3
   12b0c:	mvnlt	r0, #0
   12b10:	movge	r0, #0
   12b14:	pop	{r4, r5, pc}
   12b18:	mov	r0, #1
   12b1c:	bx	lr
   12b20:	mov	r0, #1
   12b24:	pop	{r4, r5, pc}

00012b28 <table_compare_uint64@@Base>:
   12b28:	cmp	r0, #0
   12b2c:	bne	12b40 <table_compare_uint64@@Base+0x18>
   12b30:	adds	r0, r1, #0
   12b34:	movne	r0, #1
   12b38:	rsb	r0, r0, #0
   12b3c:	bx	lr
   12b40:	cmp	r1, #0
   12b44:	beq	12b6c <table_compare_uint64@@Base+0x44>
   12b48:	push	{r4, r5, lr}
   12b4c:	ldrd	r2, [r1]
   12b50:	ldrd	r4, [r0]
   12b54:	cmp	r5, r3
   12b58:	cmpeq	r4, r2
   12b5c:	bhi	12b74 <table_compare_uint64@@Base+0x4c>
   12b60:	mvncc	r0, #0
   12b64:	movcs	r0, #0
   12b68:	pop	{r4, r5, pc}
   12b6c:	mov	r0, #1
   12b70:	bx	lr
   12b74:	mov	r0, #1
   12b78:	pop	{r4, r5, pc}

00012b7c <table_compare_long@@Base>:
   12b7c:	cmp	r0, #0
   12b80:	bne	12b94 <table_compare_long@@Base+0x18>
   12b84:	adds	r0, r1, #0
   12b88:	movne	r0, #1
   12b8c:	rsb	r0, r0, #0
   12b90:	bx	lr
   12b94:	cmp	r1, #0
   12b98:	beq	12bb8 <table_compare_long@@Base+0x3c>
   12b9c:	ldr	r2, [r0]
   12ba0:	ldr	r3, [r1]
   12ba4:	cmp	r2, r3
   12ba8:	bgt	12bb8 <table_compare_long@@Base+0x3c>
   12bac:	mvnlt	r0, #0
   12bb0:	movge	r0, #0
   12bb4:	bx	lr
   12bb8:	mov	r0, #1
   12bbc:	bx	lr

00012bc0 <table_compare_ullong@@Base>:
   12bc0:	cmp	r0, #0
   12bc4:	bne	12bd8 <table_compare_ullong@@Base+0x18>
   12bc8:	adds	r0, r1, #0
   12bcc:	movne	r0, #1
   12bd0:	rsb	r0, r0, #0
   12bd4:	bx	lr
   12bd8:	cmp	r1, #0
   12bdc:	beq	12bfc <table_compare_ullong@@Base+0x3c>
   12be0:	ldr	r2, [r0]
   12be4:	ldr	r3, [r1]
   12be8:	cmp	r2, r3
   12bec:	bhi	12bfc <table_compare_ullong@@Base+0x3c>
   12bf0:	mvncc	r0, #0
   12bf4:	movcs	r0, #0
   12bf8:	bx	lr
   12bfc:	mov	r0, #1
   12c00:	bx	lr

00012c04 <table_compare_float@@Base>:
   12c04:	cmp	r0, #0
   12c08:	bne	12c1c <table_compare_float@@Base+0x18>
   12c0c:	adds	r0, r1, #0
   12c10:	movne	r0, #1
   12c14:	rsb	r0, r0, #0
   12c18:	bx	lr
   12c1c:	cmp	r1, #0
   12c20:	beq	12c44 <table_compare_float@@Base+0x40>
   12c24:	vldr	s14, [r0]
   12c28:	vldr	s15, [r1]
   12c2c:	vcmpe.f32	s14, s15
   12c30:	vmrs	APSR_nzcv, fpscr
   12c34:	bgt	12c44 <table_compare_float@@Base+0x40>
   12c38:	mvnmi	r0, #0
   12c3c:	movpl	r0, #0
   12c40:	bx	lr
   12c44:	mov	r0, #1
   12c48:	bx	lr

00012c4c <table_compare_double@@Base>:
   12c4c:	cmp	r0, #0
   12c50:	bne	12c64 <table_compare_double@@Base+0x18>
   12c54:	adds	r0, r1, #0
   12c58:	movne	r0, #1
   12c5c:	rsb	r0, r0, #0
   12c60:	bx	lr
   12c64:	cmp	r1, #0
   12c68:	beq	12c8c <table_compare_double@@Base+0x40>
   12c6c:	vldr	d6, [r0]
   12c70:	vldr	d7, [r1]
   12c74:	vcmpe.f64	d6, d7
   12c78:	vmrs	APSR_nzcv, fpscr
   12c7c:	bgt	12c8c <table_compare_double@@Base+0x40>
   12c80:	mvnmi	r0, #0
   12c84:	movpl	r0, #0
   12c88:	bx	lr
   12c8c:	mov	r0, #1
   12c90:	bx	lr

00012c94 <table_compare_ldouble@@Base>:
   12c94:	cmp	r0, #0
   12c98:	bne	12cac <table_compare_ldouble@@Base+0x18>
   12c9c:	adds	r0, r1, #0
   12ca0:	movne	r0, #1
   12ca4:	rsb	r0, r0, #0
   12ca8:	bx	lr
   12cac:	cmp	r1, #0
   12cb0:	beq	12cd4 <table_compare_ldouble@@Base+0x40>
   12cb4:	vldr	d6, [r0]
   12cb8:	vldr	d7, [r1]
   12cbc:	vcmpe.f64	d6, d7
   12cc0:	vmrs	APSR_nzcv, fpscr
   12cc4:	bgt	12cd4 <table_compare_ldouble@@Base+0x40>
   12cc8:	mvnmi	r0, #0
   12ccc:	movpl	r0, #0
   12cd0:	bx	lr
   12cd4:	mov	r0, #1
   12cd8:	bx	lr

00012cdc <table_compare_uchar@@Base>:
   12cdc:	cmp	r0, #0
   12ce0:	bne	12cf4 <table_compare_uchar@@Base+0x18>
   12ce4:	adds	r0, r1, #0
   12ce8:	movne	r0, #1
   12cec:	rsb	r0, r0, #0
   12cf0:	bx	lr
   12cf4:	cmp	r1, #0
   12cf8:	beq	12d18 <table_compare_uchar@@Base+0x3c>
   12cfc:	ldrb	r2, [r0]
   12d00:	ldrb	r3, [r1]
   12d04:	cmp	r2, r3
   12d08:	bhi	12d18 <table_compare_uchar@@Base+0x3c>
   12d0c:	mvncc	r0, #0
   12d10:	movcs	r0, #0
   12d14:	bx	lr
   12d18:	mov	r0, #1
   12d1c:	bx	lr

00012d20 <table_compare_int@@Base>:
   12d20:	cmp	r0, #0
   12d24:	bne	12d38 <table_compare_int@@Base+0x18>
   12d28:	adds	r0, r1, #0
   12d2c:	movne	r0, #1
   12d30:	rsb	r0, r0, #0
   12d34:	bx	lr
   12d38:	cmp	r1, #0
   12d3c:	beq	12d5c <table_compare_int@@Base+0x3c>
   12d40:	ldr	r2, [r0]
   12d44:	ldr	r3, [r1]
   12d48:	cmp	r2, r3
   12d4c:	bgt	12d5c <table_compare_int@@Base+0x3c>
   12d50:	mvnlt	r0, #0
   12d54:	movge	r0, #0
   12d58:	bx	lr
   12d5c:	mov	r0, #1
   12d60:	bx	lr

00012d64 <table_compare_uint@@Base>:
   12d64:	cmp	r0, #0
   12d68:	bne	12d7c <table_compare_uint@@Base+0x18>
   12d6c:	adds	r0, r1, #0
   12d70:	movne	r0, #1
   12d74:	rsb	r0, r0, #0
   12d78:	bx	lr
   12d7c:	cmp	r1, #0
   12d80:	beq	12da0 <table_compare_uint@@Base+0x3c>
   12d84:	ldr	r2, [r0]
   12d88:	ldr	r3, [r1]
   12d8c:	cmp	r2, r3
   12d90:	bhi	12da0 <table_compare_uint@@Base+0x3c>
   12d94:	mvncc	r0, #0
   12d98:	movcs	r0, #0
   12d9c:	bx	lr
   12da0:	mov	r0, #1
   12da4:	bx	lr

00012da8 <table_compare_uint8@@Base>:
   12da8:	cmp	r0, #0
   12dac:	bne	12dc0 <table_compare_uint8@@Base+0x18>
   12db0:	adds	r0, r1, #0
   12db4:	movne	r0, #1
   12db8:	rsb	r0, r0, #0
   12dbc:	bx	lr
   12dc0:	cmp	r1, #0
   12dc4:	beq	12de4 <table_compare_uint8@@Base+0x3c>
   12dc8:	ldrb	r2, [r0]
   12dcc:	ldrb	r3, [r1]
   12dd0:	cmp	r2, r3
   12dd4:	bhi	12de4 <table_compare_uint8@@Base+0x3c>
   12dd8:	mvncc	r0, #0
   12ddc:	movcs	r0, #0
   12de0:	bx	lr
   12de4:	mov	r0, #1
   12de8:	bx	lr

00012dec <table_compare_int16@@Base>:
   12dec:	cmp	r0, #0
   12df0:	bne	12e04 <table_compare_int16@@Base+0x18>
   12df4:	adds	r0, r1, #0
   12df8:	movne	r0, #1
   12dfc:	rsb	r0, r0, #0
   12e00:	bx	lr
   12e04:	cmp	r1, #0
   12e08:	beq	12e28 <table_compare_int16@@Base+0x3c>
   12e0c:	ldrsh	r2, [r0]
   12e10:	ldrsh	r3, [r1]
   12e14:	cmp	r2, r3
   12e18:	bgt	12e28 <table_compare_int16@@Base+0x3c>
   12e1c:	mvnlt	r0, #0
   12e20:	movge	r0, #0
   12e24:	bx	lr
   12e28:	mov	r0, #1
   12e2c:	bx	lr

00012e30 <table_compare_uint16@@Base>:
   12e30:	cmp	r0, #0
   12e34:	bne	12e48 <table_compare_uint16@@Base+0x18>
   12e38:	adds	r0, r1, #0
   12e3c:	movne	r0, #1
   12e40:	rsb	r0, r0, #0
   12e44:	bx	lr
   12e48:	cmp	r1, #0
   12e4c:	beq	12e6c <table_compare_uint16@@Base+0x3c>
   12e50:	ldrh	r2, [r0]
   12e54:	ldrh	r3, [r1]
   12e58:	cmp	r2, r3
   12e5c:	bhi	12e6c <table_compare_uint16@@Base+0x3c>
   12e60:	mvncc	r0, #0
   12e64:	movcs	r0, #0
   12e68:	bx	lr
   12e6c:	mov	r0, #1
   12e70:	bx	lr

00012e74 <table_compare_ulong@@Base>:
   12e74:	cmp	r0, #0
   12e78:	bne	12e8c <table_compare_ulong@@Base+0x18>
   12e7c:	adds	r0, r1, #0
   12e80:	movne	r0, #1
   12e84:	rsb	r0, r0, #0
   12e88:	bx	lr
   12e8c:	cmp	r1, #0
   12e90:	beq	12eb0 <table_compare_ulong@@Base+0x3c>
   12e94:	ldr	r2, [r0]
   12e98:	ldr	r3, [r1]
   12e9c:	cmp	r2, r3
   12ea0:	bhi	12eb0 <table_compare_ulong@@Base+0x3c>
   12ea4:	mvncc	r0, #0
   12ea8:	movcs	r0, #0
   12eac:	bx	lr
   12eb0:	mov	r0, #1
   12eb4:	bx	lr

00012eb8 <table_compare_int64@@Base>:
   12eb8:	cmp	r0, #0
   12ebc:	bne	12ed0 <table_compare_int64@@Base+0x18>
   12ec0:	adds	r0, r1, #0
   12ec4:	movne	r0, #1
   12ec8:	rsb	r0, r0, #0
   12ecc:	bx	lr
   12ed0:	cmp	r1, #0
   12ed4:	beq	12f04 <table_compare_int64@@Base+0x4c>
   12ed8:	push	{r4, r5, lr}
   12edc:	ldrd	r2, [r1]
   12ee0:	ldrd	r4, [r0]
   12ee4:	cmp	r2, r4
   12ee8:	sbcs	r1, r3, r5
   12eec:	blt	12f0c <table_compare_int64@@Base+0x54>
   12ef0:	cmp	r4, r2
   12ef4:	sbcs	r3, r5, r3
   12ef8:	mvnlt	r0, #0
   12efc:	movge	r0, #0
   12f00:	pop	{r4, r5, pc}
   12f04:	mov	r0, #1
   12f08:	bx	lr
   12f0c:	mov	r0, #1
   12f10:	pop	{r4, r5, pc}

00012f14 <table_get_default_compare_function_for_data_type@@Base>:
   12f14:	cmp	r0, #23
   12f18:	ldrls	r3, [pc, #8]	; 12f28 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12f1c:	ldrls	r0, [r3, r0, lsl #2]
   12f20:	movhi	r0, #0
   12f24:	bx	lr
   12f28:	andeq	r4, r1, r0, lsl #4

00012f2c <table_get@@Base>:
   12f2c:	push	{r4, lr}
   12f30:	bl	140ac <table_get_cell_ptr@@Base>
   12f34:	ldr	r0, [r0]
   12f38:	pop	{r4, pc}

00012f3c <table_get_bool@@Base>:
   12f3c:	push	{r4, lr}
   12f40:	bl	12f2c <table_get@@Base>
   12f44:	ldrb	r0, [r0]
   12f48:	pop	{r4, pc}

00012f4c <table_get_int@@Base>:
   12f4c:	push	{r4, lr}
   12f50:	bl	12f2c <table_get@@Base>
   12f54:	ldr	r0, [r0]
   12f58:	pop	{r4, pc}

00012f5c <table_get_uint@@Base>:
   12f5c:	push	{r4, lr}
   12f60:	bl	12f2c <table_get@@Base>
   12f64:	ldr	r0, [r0]
   12f68:	pop	{r4, pc}

00012f6c <table_get_int8@@Base>:
   12f6c:	push	{r4, lr}
   12f70:	bl	12f2c <table_get@@Base>
   12f74:	ldrsb	r0, [r0]
   12f78:	pop	{r4, pc}

00012f7c <table_get_uint8@@Base>:
   12f7c:	push	{r4, lr}
   12f80:	bl	12f2c <table_get@@Base>
   12f84:	ldrb	r0, [r0]
   12f88:	pop	{r4, pc}

00012f8c <table_get_int16@@Base>:
   12f8c:	push	{r4, lr}
   12f90:	bl	12f2c <table_get@@Base>
   12f94:	ldrsh	r0, [r0]
   12f98:	pop	{r4, pc}

00012f9c <table_get_uint16@@Base>:
   12f9c:	push	{r4, lr}
   12fa0:	bl	12f2c <table_get@@Base>
   12fa4:	ldrh	r0, [r0]
   12fa8:	pop	{r4, pc}

00012fac <table_get_int32@@Base>:
   12fac:	b	12f4c <table_get_int@@Base>

00012fb0 <table_get_uint32@@Base>:
   12fb0:	b	12f5c <table_get_uint@@Base>

00012fb4 <table_get_int64@@Base>:
   12fb4:	push	{r4, lr}
   12fb8:	bl	12f2c <table_get@@Base>
   12fbc:	ldrd	r0, [r0]
   12fc0:	pop	{r4, pc}

00012fc4 <table_get_uint64@@Base>:
   12fc4:	push	{r4, lr}
   12fc8:	bl	12f2c <table_get@@Base>
   12fcc:	ldrd	r0, [r0]
   12fd0:	pop	{r4, pc}

00012fd4 <table_get_short@@Base>:
   12fd4:	b	12f8c <table_get_int16@@Base>

00012fd8 <table_get_ushort@@Base>:
   12fd8:	b	12f9c <table_get_uint16@@Base>

00012fdc <table_get_long@@Base>:
   12fdc:	push	{r4, lr}
   12fe0:	bl	12f2c <table_get@@Base>
   12fe4:	ldr	r0, [r0]
   12fe8:	pop	{r4, pc}

00012fec <table_get_ulong@@Base>:
   12fec:	push	{r4, lr}
   12ff0:	bl	12f2c <table_get@@Base>
   12ff4:	ldr	r0, [r0]
   12ff8:	pop	{r4, pc}

00012ffc <table_get_llong@@Base>:
   12ffc:	b	12fb4 <table_get_int64@@Base>

00013000 <table_get_ullong@@Base>:
   13000:	b	12fc4 <table_get_uint64@@Base>

00013004 <table_get_float@@Base>:
   13004:	push	{r4, lr}
   13008:	bl	12f2c <table_get@@Base>
   1300c:	vldr	s0, [r0]
   13010:	pop	{r4, pc}

00013014 <table_get_double@@Base>:
   13014:	push	{r4, lr}
   13018:	bl	12f2c <table_get@@Base>
   1301c:	vldr	d0, [r0]
   13020:	pop	{r4, pc}

00013024 <table_get_ldouble@@Base>:
   13024:	push	{r4, lr}
   13028:	bl	12f2c <table_get@@Base>
   1302c:	vldr	d0, [r0]
   13030:	pop	{r4, pc}

00013034 <table_get_char@@Base>:
   13034:	b	12f7c <table_get_uint8@@Base>

00013038 <table_get_uchar@@Base>:
   13038:	b	12f7c <table_get_uint8@@Base>

0001303c <table_get_string@@Base>:
   1303c:	b	12f2c <table_get@@Base>

00013040 <table_get_ptr@@Base>:
   13040:	b	12f2c <table_get@@Base>

00013044 <table_row_init@@Base>:
   13044:	push	{r4, r5, r6, lr}
   13048:	mov	r5, r1
   1304c:	ldr	r4, [r0, #16]
   13050:	ldr	r0, [r0, #12]
   13054:	lsl	r0, r0, #2
   13058:	bl	11a84 <malloc@plt>
   1305c:	str	r0, [r4, r5, lsl #2]
   13060:	pop	{r4, r5, r6, pc}

00013064 <table_row_destroy@@Base>:
   13064:	push	{r4, r5, r6, r7, r8, lr}
   13068:	mov	r6, r0
   1306c:	mov	r5, r1
   13070:	mov	r4, #0
   13074:	bl	12598 <table_get_column_length@@Base>
   13078:	ldr	r7, [r6, #16]
   1307c:	mov	r8, r0
   13080:	cmp	r4, r8
   13084:	blt	1309c <table_row_destroy@@Base+0x38>
   13088:	ldr	r0, [r7, r5, lsl #2]
   1308c:	cmp	r0, #0
   13090:	popeq	{r4, r5, r6, r7, r8, pc}
   13094:	pop	{r4, r5, r6, r7, r8, lr}
   13098:	b	11a60 <free@plt>
   1309c:	mov	r2, r4
   130a0:	mov	r1, r5
   130a4:	mov	r0, r6
   130a8:	add	r4, r4, #1
   130ac:	bl	140d8 <table_cell_destroy@@Base>
   130b0:	b	13080 <table_row_destroy@@Base+0x1c>

000130b4 <table_get_row_length@@Base>:
   130b4:	ldr	r0, [r0, #20]
   130b8:	bx	lr

000130bc <table_add_row@@Base>:
   130bc:	ldr	r2, [r0, #20]
   130c0:	push	{r4, r5, r6, r7, r8, lr}
   130c4:	mov	r4, r0
   130c8:	ldr	r1, [r0, #24]
   130cc:	udiv	r3, r2, r1
   130d0:	mls	r3, r1, r3, r2
   130d4:	cmp	r3, #0
   130d8:	bne	130f8 <table_add_row@@Base+0x3c>
   130dc:	ldr	r3, [r4, #28]
   130e0:	ldr	r0, [r0, #16]
   130e4:	add	r1, r1, r3
   130e8:	str	r1, [r4, #28]
   130ec:	lsl	r1, r1, #2
   130f0:	bl	11a6c <realloc@plt>
   130f4:	str	r0, [r4, #16]
   130f8:	ldr	r6, [r4, #20]
   130fc:	mov	r0, r4
   13100:	mov	r5, #0
   13104:	bl	12598 <table_get_column_length@@Base>
   13108:	mov	r7, r0
   1310c:	mov	r0, r4
   13110:	mov	r1, r6
   13114:	bl	13044 <table_row_init@@Base>
   13118:	cmp	r7, r5
   1311c:	bgt	13144 <table_add_row@@Base+0x88>
   13120:	mov	r0, r4
   13124:	mov	r3, #2
   13128:	ldr	r1, [r4, #20]
   1312c:	mvn	r2, #0
   13130:	bl	124c0 <table_notify@@Base>
   13134:	ldr	r0, [r4, #20]
   13138:	add	r3, r0, #1
   1313c:	str	r3, [r4, #20]
   13140:	pop	{r4, r5, r6, r7, r8, pc}
   13144:	mov	r2, r5
   13148:	mov	r1, r6
   1314c:	mov	r0, r4
   13150:	add	r5, r5, #1
   13154:	bl	140c4 <table_cell_init@@Base>
   13158:	b	13118 <table_add_row@@Base+0x5c>

0001315c <table_remove_row@@Base>:
   1315c:	push	{r4, r5, r6, r7, r8, lr}
   13160:	mov	r4, r0
   13164:	mov	r6, r1
   13168:	mov	r5, #0
   1316c:	ldr	r7, [r0, #20]
   13170:	bl	12598 <table_get_column_length@@Base>
   13174:	mov	r8, r0
   13178:	cmp	r8, r5
   1317c:	bgt	131fc <table_remove_row@@Base+0xa0>
   13180:	ldr	r3, [r4, #16]
   13184:	ldr	r0, [r3, r6, lsl #2]
   13188:	cmp	r0, #0
   1318c:	beq	13194 <table_remove_row@@Base+0x38>
   13190:	bl	11a60 <free@plt>
   13194:	mov	r3, r6
   13198:	sub	r7, r7, #1
   1319c:	cmp	r3, r7
   131a0:	blt	13238 <table_remove_row@@Base+0xdc>
   131a4:	ldr	r3, [r4, #20]
   131a8:	ldr	r2, [r4, #24]
   131ac:	sub	r3, r3, #1
   131b0:	udiv	r1, r3, r2
   131b4:	str	r3, [r4, #20]
   131b8:	mls	r3, r2, r1, r3
   131bc:	cmp	r3, #0
   131c0:	bne	131e0 <table_remove_row@@Base+0x84>
   131c4:	ldr	r0, [r4, #16]
   131c8:	ldr	r1, [r4, #28]
   131cc:	sub	r1, r1, r2
   131d0:	str	r1, [r4, #28]
   131d4:	lsl	r1, r1, #2
   131d8:	bl	11a6c <realloc@plt>
   131dc:	str	r0, [r4, #16]
   131e0:	mov	r0, r4
   131e4:	mov	r3, #4
   131e8:	mvn	r2, #0
   131ec:	mov	r1, r6
   131f0:	bl	124c0 <table_notify@@Base>
   131f4:	mov	r0, #0
   131f8:	pop	{r4, r5, r6, r7, r8, pc}
   131fc:	mov	r1, r5
   13200:	mov	r0, r4
   13204:	bl	125f0 <table_get_column_data_type@@Base>
   13208:	cmp	r0, #23
   1320c:	beq	13230 <table_remove_row@@Base+0xd4>
   13210:	mov	r2, r5
   13214:	mov	r1, r6
   13218:	mov	r0, r4
   1321c:	bl	140ac <table_get_cell_ptr@@Base>
   13220:	ldr	r0, [r0]
   13224:	cmp	r0, #0
   13228:	beq	13230 <table_remove_row@@Base+0xd4>
   1322c:	bl	11a60 <free@plt>
   13230:	add	r5, r5, #1
   13234:	b	13178 <table_remove_row@@Base+0x1c>
   13238:	ldr	r2, [r4, #16]
   1323c:	add	r1, r2, r3, lsl #2
   13240:	ldr	r1, [r1, #4]
   13244:	str	r1, [r2, r3, lsl #2]
   13248:	add	r3, r3, #1
   1324c:	b	1319c <table_remove_row@@Base+0x40>

00013250 <table_get_row_ptr@@Base>:
   13250:	ldr	r0, [r0, #16]
   13254:	add	r0, r0, r1, lsl #2
   13258:	bx	lr

0001325c <table_set_row_ptr@@Base>:
   1325c:	ldr	r2, [r2]
   13260:	ldr	r3, [r0, #16]
   13264:	str	r2, [r3, r1, lsl #2]
   13268:	bx	lr

0001326c <table_set@@Base>:
   1326c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13270:	mov	r6, r0
   13274:	mov	r8, r1
   13278:	mov	r7, r2
   1327c:	mov	r5, r3
   13280:	ldr	r9, [sp, #32]
   13284:	bl	140ac <table_get_cell_ptr@@Base>
   13288:	mov	r4, r0
   1328c:	mov	r1, r7
   13290:	mov	r0, r6
   13294:	bl	12870 <table_get_col_ptr@@Base>
   13298:	cmp	r9, #23
   1329c:	ldrls	pc, [pc, r9, lsl #2]
   132a0:	b	133f0 <table_set@@Base+0x184>
   132a4:	andeq	r3, r1, r0, asr #6
   132a8:	muleq	r1, r4, r3
   132ac:	andeq	r3, r1, r0, lsr #7
   132b0:	andeq	r3, r1, ip, lsr #7
   132b4:			; <UNDEFINED> instruction: 0x000133b8
   132b8:	strdeq	r3, [r1], -r8
   132bc:	andeq	r3, r1, r4, lsl #8
   132c0:	andeq	r3, r1, r0, lsl r4
   132c4:	andeq	r3, r1, ip, lsl r4
   132c8:	andeq	r3, r1, ip, asr r4
   132cc:	andeq	r3, r1, ip, ror r4
   132d0:	andeq	r3, r1, r8, lsl #9
   132d4:	muleq	r1, r4, r4
   132d8:	andeq	r3, r1, r0, lsr #9
   132dc:	andeq	r3, r1, ip, lsr #9
   132e0:			; <UNDEFINED> instruction: 0x000134b8
   132e4:	andeq	r3, r1, r4, asr #9
   132e8:	ldrdeq	r3, [r1], -r0
   132ec:	ldrdeq	r3, [r1], -ip
   132f0:	andeq	r3, r1, r0, lsr #10
   132f4:	andeq	r3, r1, ip, lsr #10
   132f8:	andeq	r3, r1, r8, ror #9
   132fc:	andeq	r3, r1, r4, lsl #6
   13300:	andeq	r3, r1, r8, lsr r5
   13304:	ldr	r3, [r0, #4]
   13308:	cmp	r3, #22
   1330c:	bne	133f0 <table_set@@Base+0x184>
   13310:	ldr	r3, [r4]
   13314:	cmp	r3, #0
   13318:	bne	13328 <table_set@@Base+0xbc>
   1331c:	mov	r0, #1
   13320:	bl	11a84 <malloc@plt>
   13324:	str	r0, [r4]
   13328:	ldr	r3, [r4]
   1332c:	cmp	r3, #0
   13330:	ldrbne	r2, [r5]
   13334:	strbne	r2, [r3]
   13338:	bne	13378 <table_set@@Base+0x10c>
   1333c:	b	133f0 <table_set@@Base+0x184>
   13340:	ldr	r3, [r0, #4]
   13344:	cmp	r3, #0
   13348:	bne	133f0 <table_set@@Base+0x184>
   1334c:	ldr	r3, [r4]
   13350:	cmp	r3, #0
   13354:	bne	13364 <table_set@@Base+0xf8>
   13358:	mov	r0, #4
   1335c:	bl	11a84 <malloc@plt>
   13360:	str	r0, [r4]
   13364:	ldr	r3, [r4]
   13368:	cmp	r3, #0
   1336c:	ldrne	r2, [r5]
   13370:	strne	r2, [r3]
   13374:	beq	133f0 <table_set@@Base+0x184>
   13378:	mov	r0, r6
   1337c:	mov	r3, #1
   13380:	mov	r2, r7
   13384:	mov	r1, r8
   13388:	bl	124c0 <table_notify@@Base>
   1338c:	mov	r0, #0
   13390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13394:	ldr	r3, [r0, #4]
   13398:	cmp	r3, #1
   1339c:	b	13348 <table_set@@Base+0xdc>
   133a0:	ldr	r3, [r0, #4]
   133a4:	cmp	r3, #2
   133a8:	b	1330c <table_set@@Base+0xa0>
   133ac:	ldr	r3, [r0, #4]
   133b0:	cmp	r3, #3
   133b4:	b	1330c <table_set@@Base+0xa0>
   133b8:	ldr	r3, [r0, #4]
   133bc:	cmp	r3, #4
   133c0:	bne	133f0 <table_set@@Base+0x184>
   133c4:	ldr	r3, [r4]
   133c8:	cmp	r3, #0
   133cc:	bne	133dc <table_set@@Base+0x170>
   133d0:	mov	r0, #2
   133d4:	bl	11a84 <malloc@plt>
   133d8:	str	r0, [r4]
   133dc:	ldr	r3, [r4]
   133e0:	cmp	r3, #0
   133e4:	ldrhne	r2, [r5]
   133e8:	strhne	r2, [r3]
   133ec:	bne	13378 <table_set@@Base+0x10c>
   133f0:	mvn	r0, #0
   133f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133f8:	ldr	r3, [r0, #4]
   133fc:	cmp	r3, #5
   13400:	b	133c0 <table_set@@Base+0x154>
   13404:	ldr	r3, [r0, #4]
   13408:	cmp	r3, #6
   1340c:	b	13348 <table_set@@Base+0xdc>
   13410:	ldr	r3, [r0, #4]
   13414:	cmp	r3, #7
   13418:	b	13348 <table_set@@Base+0xdc>
   1341c:	ldr	r0, [r0, #4]
   13420:	cmp	r0, #8
   13424:	bne	133f0 <table_set@@Base+0x184>
   13428:	ldr	r3, [r4]
   1342c:	cmp	r3, #0
   13430:	bne	1343c <table_set@@Base+0x1d0>
   13434:	bl	11a84 <malloc@plt>
   13438:	str	r0, [r4]
   1343c:	ldr	r3, [r4]
   13440:	cmp	r3, #0
   13444:	beq	133f0 <table_set@@Base+0x184>
   13448:	ldr	r2, [r5]
   1344c:	str	r2, [r3]
   13450:	ldr	r2, [r5, #4]
   13454:	str	r2, [r3, #4]
   13458:	b	13378 <table_set@@Base+0x10c>
   1345c:	ldr	r3, [r0, #4]
   13460:	cmp	r3, #9
   13464:	bne	133f0 <table_set@@Base+0x184>
   13468:	ldr	r3, [r4]
   1346c:	cmp	r3, #0
   13470:	bne	1343c <table_set@@Base+0x1d0>
   13474:	mov	r0, #8
   13478:	b	13434 <table_set@@Base+0x1c8>
   1347c:	ldr	r3, [r0, #4]
   13480:	cmp	r3, #10
   13484:	b	133c0 <table_set@@Base+0x154>
   13488:	ldr	r3, [r0, #4]
   1348c:	cmp	r3, #11
   13490:	b	133c0 <table_set@@Base+0x154>
   13494:	ldr	r3, [r0, #4]
   13498:	cmp	r3, #12
   1349c:	b	13348 <table_set@@Base+0xdc>
   134a0:	ldr	r3, [r0, #4]
   134a4:	cmp	r3, #13
   134a8:	b	13348 <table_set@@Base+0xdc>
   134ac:	ldr	r3, [r0, #4]
   134b0:	cmp	r3, #14
   134b4:	b	13464 <table_set@@Base+0x1f8>
   134b8:	ldr	r3, [r0, #4]
   134bc:	cmp	r3, #15
   134c0:	b	13464 <table_set@@Base+0x1f8>
   134c4:	ldr	r3, [r0, #4]
   134c8:	cmp	r3, #16
   134cc:	b	13348 <table_set@@Base+0xdc>
   134d0:	ldr	r3, [r0, #4]
   134d4:	cmp	r3, #17
   134d8:	b	13464 <table_set@@Base+0x1f8>
   134dc:	ldr	r3, [r0, #4]
   134e0:	cmp	r3, #18
   134e4:	b	13464 <table_set@@Base+0x1f8>
   134e8:	ldr	r3, [r0, #4]
   134ec:	cmp	r3, #21
   134f0:	bne	133f0 <table_set@@Base+0x184>
   134f4:	mov	r0, r5
   134f8:	bl	11aa8 <strlen@plt>
   134fc:	add	r1, r0, #1
   13500:	ldr	r0, [r4]
   13504:	bl	11a6c <realloc@plt>
   13508:	cmp	r0, #0
   1350c:	str	r0, [r4]
   13510:	beq	133f0 <table_set@@Base+0x184>
   13514:	mov	r1, r5
   13518:	bl	11a78 <strcpy@plt>
   1351c:	b	13378 <table_set@@Base+0x10c>
   13520:	ldr	r3, [r0, #4]
   13524:	cmp	r3, #19
   13528:	b	1330c <table_set@@Base+0xa0>
   1352c:	ldr	r3, [r0, #4]
   13530:	cmp	r3, #20
   13534:	b	1330c <table_set@@Base+0xa0>
   13538:	ldr	r3, [r0, #4]
   1353c:	cmp	r3, #23
   13540:	bne	133f0 <table_set@@Base+0x184>
   13544:	str	r5, [r4]
   13548:	b	13378 <table_set@@Base+0x10c>

0001354c <table_set_bool@@Base>:
   1354c:	push	{r0, r1, r2, r3, r4, lr}
   13550:	strb	r3, [sp, #15]
   13554:	mov	r3, #22
   13558:	str	r3, [sp]
   1355c:	add	r3, sp, #15
   13560:	bl	1326c <table_set@@Base>
   13564:	add	sp, sp, #20
   13568:	pop	{pc}		; (ldr pc, [sp], #4)

0001356c <table_set_int@@Base>:
   1356c:	push	{r0, r1, r2, r3, r4, lr}
   13570:	str	r3, [sp, #12]
   13574:	mov	r3, #0
   13578:	str	r3, [sp]
   1357c:	add	r3, sp, #12
   13580:	bl	1326c <table_set@@Base>
   13584:	add	sp, sp, #20
   13588:	pop	{pc}		; (ldr pc, [sp], #4)

0001358c <table_set_uint@@Base>:
   1358c:	push	{r0, r1, r2, r3, r4, lr}
   13590:	str	r3, [sp, #12]
   13594:	mov	r3, #1
   13598:	str	r3, [sp]
   1359c:	add	r3, sp, #12
   135a0:	bl	1326c <table_set@@Base>
   135a4:	add	sp, sp, #20
   135a8:	pop	{pc}		; (ldr pc, [sp], #4)

000135ac <table_set_int8@@Base>:
   135ac:	push	{r0, r1, r2, r3, r4, lr}
   135b0:	strb	r3, [sp, #15]
   135b4:	mov	r3, #2
   135b8:	str	r3, [sp]
   135bc:	add	r3, sp, #15
   135c0:	bl	1326c <table_set@@Base>
   135c4:	add	sp, sp, #20
   135c8:	pop	{pc}		; (ldr pc, [sp], #4)

000135cc <table_set_uint8@@Base>:
   135cc:	push	{r0, r1, r2, r3, r4, lr}
   135d0:	strb	r3, [sp, #15]
   135d4:	mov	r3, #3
   135d8:	str	r3, [sp]
   135dc:	add	r3, sp, #15
   135e0:	bl	1326c <table_set@@Base>
   135e4:	add	sp, sp, #20
   135e8:	pop	{pc}		; (ldr pc, [sp], #4)

000135ec <table_set_int16@@Base>:
   135ec:	push	{r0, r1, r2, r3, r4, lr}
   135f0:	strh	r3, [sp, #14]
   135f4:	mov	r3, #4
   135f8:	str	r3, [sp]
   135fc:	add	r3, sp, #14
   13600:	bl	1326c <table_set@@Base>
   13604:	add	sp, sp, #20
   13608:	pop	{pc}		; (ldr pc, [sp], #4)

0001360c <table_set_uint16@@Base>:
   1360c:	push	{r0, r1, r2, r3, r4, lr}
   13610:	strh	r3, [sp, #14]
   13614:	mov	r3, #5
   13618:	str	r3, [sp]
   1361c:	add	r3, sp, #14
   13620:	bl	1326c <table_set@@Base>
   13624:	add	sp, sp, #20
   13628:	pop	{pc}		; (ldr pc, [sp], #4)

0001362c <table_set_int32@@Base>:
   1362c:	push	{r0, r1, r2, r3, r4, lr}
   13630:	str	r3, [sp, #12]
   13634:	mov	r3, #6
   13638:	str	r3, [sp]
   1363c:	add	r3, sp, #12
   13640:	bl	1326c <table_set@@Base>
   13644:	add	sp, sp, #20
   13648:	pop	{pc}		; (ldr pc, [sp], #4)

0001364c <table_set_uint32@@Base>:
   1364c:	push	{r0, r1, r2, r3, r4, lr}
   13650:	str	r3, [sp, #12]
   13654:	mov	r3, #7
   13658:	str	r3, [sp]
   1365c:	add	r3, sp, #12
   13660:	bl	1326c <table_set@@Base>
   13664:	add	sp, sp, #20
   13668:	pop	{pc}		; (ldr pc, [sp], #4)

0001366c <table_set_int64@@Base>:
   1366c:	mov	r3, #8
   13670:	push	{r0, r1, r2, lr}
   13674:	str	r3, [sp]
   13678:	add	r3, sp, #16
   1367c:	bl	1326c <table_set@@Base>
   13680:	add	sp, sp, #12
   13684:	pop	{pc}		; (ldr pc, [sp], #4)

00013688 <table_set_uint64@@Base>:
   13688:	mov	r3, #9
   1368c:	push	{r0, r1, r2, lr}
   13690:	str	r3, [sp]
   13694:	add	r3, sp, #16
   13698:	bl	1326c <table_set@@Base>
   1369c:	add	sp, sp, #12
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)

000136a4 <table_set_short@@Base>:
   136a4:	push	{r0, r1, r2, r3, r4, lr}
   136a8:	strh	r3, [sp, #14]
   136ac:	mov	r3, #10
   136b0:	str	r3, [sp]
   136b4:	add	r3, sp, #14
   136b8:	bl	1326c <table_set@@Base>
   136bc:	add	sp, sp, #20
   136c0:	pop	{pc}		; (ldr pc, [sp], #4)

000136c4 <table_set_ushort@@Base>:
   136c4:	push	{r0, r1, r2, r3, r4, lr}
   136c8:	strh	r3, [sp, #14]
   136cc:	mov	r3, #11
   136d0:	str	r3, [sp]
   136d4:	add	r3, sp, #14
   136d8:	bl	1326c <table_set@@Base>
   136dc:	add	sp, sp, #20
   136e0:	pop	{pc}		; (ldr pc, [sp], #4)

000136e4 <table_set_long@@Base>:
   136e4:	push	{r0, r1, r2, r3, r4, lr}
   136e8:	str	r3, [sp, #12]
   136ec:	mov	r3, #12
   136f0:	str	r3, [sp]
   136f4:	add	r3, sp, r3
   136f8:	bl	1326c <table_set@@Base>
   136fc:	add	sp, sp, #20
   13700:	pop	{pc}		; (ldr pc, [sp], #4)

00013704 <table_set_ulong@@Base>:
   13704:	push	{r0, r1, r2, r3, r4, lr}
   13708:	str	r3, [sp, #12]
   1370c:	mov	r3, #13
   13710:	str	r3, [sp]
   13714:	add	r3, sp, #12
   13718:	bl	1326c <table_set@@Base>
   1371c:	add	sp, sp, #20
   13720:	pop	{pc}		; (ldr pc, [sp], #4)

00013724 <table_set_llong@@Base>:
   13724:	mov	r3, #14
   13728:	push	{r0, r1, r2, lr}
   1372c:	str	r3, [sp]
   13730:	add	r3, sp, #16
   13734:	bl	1326c <table_set@@Base>
   13738:	add	sp, sp, #12
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)

00013740 <table_set_ullong@@Base>:
   13740:	mov	r3, #15
   13744:	push	{r0, r1, r2, lr}
   13748:	str	r3, [sp]
   1374c:	add	r3, sp, #16
   13750:	bl	1326c <table_set@@Base>
   13754:	add	sp, sp, #12
   13758:	pop	{pc}		; (ldr pc, [sp], #4)

0001375c <table_set_float@@Base>:
   1375c:	push	{r0, r1, r2, r3, r4, lr}
   13760:	mov	r3, #16
   13764:	str	r3, [sp]
   13768:	add	r3, sp, #12
   1376c:	vstr	s0, [sp, #12]
   13770:	bl	1326c <table_set@@Base>
   13774:	add	sp, sp, #20
   13778:	pop	{pc}		; (ldr pc, [sp], #4)

0001377c <table_set_double@@Base>:
   1377c:	push	{r0, r1, r2, r3, r4, lr}
   13780:	mov	r3, #17
   13784:	str	r3, [sp]
   13788:	add	r3, sp, #8
   1378c:	vstr	d0, [sp, #8]
   13790:	bl	1326c <table_set@@Base>
   13794:	add	sp, sp, #20
   13798:	pop	{pc}		; (ldr pc, [sp], #4)

0001379c <table_set_ldouble@@Base>:
   1379c:	push	{r0, r1, r2, r3, r4, lr}
   137a0:	mov	r3, #18
   137a4:	str	r3, [sp]
   137a8:	add	r3, sp, #8
   137ac:	vstr	d0, [sp, #8]
   137b0:	bl	1326c <table_set@@Base>
   137b4:	add	sp, sp, #20
   137b8:	pop	{pc}		; (ldr pc, [sp], #4)

000137bc <table_set_string@@Base>:
   137bc:	mov	ip, #21
   137c0:	push	{r0, r1, r2, lr}
   137c4:	str	ip, [sp]
   137c8:	bl	1326c <table_set@@Base>
   137cc:	add	sp, sp, #12
   137d0:	pop	{pc}		; (ldr pc, [sp], #4)

000137d4 <table_set_char@@Base>:
   137d4:	push	{r0, r1, r2, r3, r4, lr}
   137d8:	strb	r3, [sp, #15]
   137dc:	mov	r3, #19
   137e0:	str	r3, [sp]
   137e4:	add	r3, sp, #15
   137e8:	bl	1326c <table_set@@Base>
   137ec:	add	sp, sp, #20
   137f0:	pop	{pc}		; (ldr pc, [sp], #4)

000137f4 <table_set_uchar@@Base>:
   137f4:	push	{r0, r1, r2, r3, r4, lr}
   137f8:	strb	r3, [sp, #15]
   137fc:	mov	r3, #20
   13800:	str	r3, [sp]
   13804:	add	r3, sp, #15
   13808:	bl	1326c <table_set@@Base>
   1380c:	add	sp, sp, #20
   13810:	pop	{pc}		; (ldr pc, [sp], #4)

00013814 <table_set_ptr@@Base>:
   13814:	mov	ip, #23
   13818:	push	{r0, r1, r2, lr}
   1381c:	str	ip, [sp]
   13820:	bl	1326c <table_set@@Base>
   13824:	add	sp, sp, #12
   13828:	pop	{pc}		; (ldr pc, [sp], #4)

0001382c <table_cell_to_buffer@@Base>:
   1382c:	push	{r4, r5, r6, r7, lr}
   13830:	sub	sp, sp, #20
   13834:	mov	r7, r1
   13838:	mov	r1, r2
   1383c:	mov	r6, r0
   13840:	mov	r4, r3
   13844:	str	r2, [sp, #12]
   13848:	ldr	r5, [sp, #40]	; 0x28
   1384c:	bl	125f0 <table_get_column_data_type@@Base>
   13850:	ldr	r2, [sp, #12]
   13854:	cmp	r0, #23
   13858:	ldrls	pc, [pc, r0, lsl #2]
   1385c:	b	1397c <table_cell_to_buffer@@Base+0x150>
   13860:	andeq	r3, r1, r0, asr #17
   13864:	ldrdeq	r3, [r1], -r8
   13868:	strdeq	r3, [r1], -ip
   1386c:	andeq	r3, r1, ip, lsl #18
   13870:	andeq	r3, r1, ip, lsl r9
   13874:	andeq	r3, r1, ip, lsr #18
   13878:	andeq	r3, r1, ip, lsr r9
   1387c:	andeq	r3, r1, ip, asr #18
   13880:	andeq	r3, r1, ip, asr r9
   13884:	andeq	r3, r1, r8, lsl #19
   13888:	andeq	r3, r1, r0, lsr #19
   1388c:			; <UNDEFINED> instruction: 0x000139b8
   13890:	ldrdeq	r3, [r1], -r0
   13894:	andeq	r3, r1, r8, ror #19
   13898:	andeq	r3, r1, r0, lsl #20
   1389c:	andeq	r3, r1, r0, lsl sl
   138a0:	andeq	r3, r1, r8, lsr sl
   138a4:	andeq	r3, r1, r0, ror #20
   138a8:	andeq	r3, r1, r8, ror sl
   138ac:	andeq	r3, r1, r0, lsr #21
   138b0:			; <UNDEFINED> instruction: 0x00013ab8
   138b4:	andeq	r3, r1, r0, lsr #20
   138b8:	muleq	r1, r0, sl
   138bc:	andeq	r3, r1, r8, asr #21
   138c0:	mov	r1, r7
   138c4:	mov	r0, r6
   138c8:	bl	12f4c <table_get_int@@Base>
   138cc:	mov	r3, r0
   138d0:	ldr	r2, [pc, #520]	; 13ae0 <table_cell_to_buffer@@Base+0x2b4>
   138d4:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   138d8:	mov	r1, r7
   138dc:	mov	r0, r6
   138e0:	bl	12f5c <table_get_uint@@Base>
   138e4:	ldr	r2, [pc, #504]	; 13ae4 <table_cell_to_buffer@@Base+0x2b8>
   138e8:	mov	r3, r0
   138ec:	mov	r1, r5
   138f0:	mov	r0, r4
   138f4:	bl	11ab4 <snprintf@plt>
   138f8:	b	1397c <table_cell_to_buffer@@Base+0x150>
   138fc:	mov	r1, r7
   13900:	mov	r0, r6
   13904:	bl	12f6c <table_get_int8@@Base>
   13908:	b	138cc <table_cell_to_buffer@@Base+0xa0>
   1390c:	mov	r1, r7
   13910:	mov	r0, r6
   13914:	bl	12f7c <table_get_uint8@@Base>
   13918:	b	138e4 <table_cell_to_buffer@@Base+0xb8>
   1391c:	mov	r1, r7
   13920:	mov	r0, r6
   13924:	bl	12f8c <table_get_int16@@Base>
   13928:	b	138cc <table_cell_to_buffer@@Base+0xa0>
   1392c:	mov	r1, r7
   13930:	mov	r0, r6
   13934:	bl	12f9c <table_get_uint16@@Base>
   13938:	b	138e4 <table_cell_to_buffer@@Base+0xb8>
   1393c:	mov	r1, r7
   13940:	mov	r0, r6
   13944:	bl	12fac <table_get_int32@@Base>
   13948:	b	138cc <table_cell_to_buffer@@Base+0xa0>
   1394c:	mov	r1, r7
   13950:	mov	r0, r6
   13954:	bl	12fb0 <table_get_uint32@@Base>
   13958:	b	138e4 <table_cell_to_buffer@@Base+0xb8>
   1395c:	mov	r1, r7
   13960:	mov	r0, r6
   13964:	bl	12fb4 <table_get_int64@@Base>
   13968:	ldr	r2, [pc, #376]	; 13ae8 <table_cell_to_buffer@@Base+0x2bc>
   1396c:	strd	r0, [sp]
   13970:	mov	r1, r5
   13974:	mov	r0, r4
   13978:	bl	11ab4 <snprintf@plt>
   1397c:	mov	r0, #0
   13980:	add	sp, sp, #20
   13984:	pop	{r4, r5, r6, r7, pc}
   13988:	mov	r1, r7
   1398c:	mov	r0, r6
   13990:	bl	12fc4 <table_get_uint64@@Base>
   13994:	ldr	r2, [pc, #336]	; 13aec <table_cell_to_buffer@@Base+0x2c0>
   13998:	strd	r0, [sp]
   1399c:	b	13970 <table_cell_to_buffer@@Base+0x144>
   139a0:	mov	r1, r7
   139a4:	mov	r0, r6
   139a8:	bl	12fd4 <table_get_short@@Base>
   139ac:	mov	r3, r0
   139b0:	ldr	r2, [pc, #312]	; 13af0 <table_cell_to_buffer@@Base+0x2c4>
   139b4:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   139b8:	mov	r1, r7
   139bc:	mov	r0, r6
   139c0:	bl	12fd8 <table_get_ushort@@Base>
   139c4:	mov	r3, r0
   139c8:	ldr	r2, [pc, #292]	; 13af4 <table_cell_to_buffer@@Base+0x2c8>
   139cc:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   139d0:	mov	r1, r7
   139d4:	mov	r0, r6
   139d8:	bl	12fdc <table_get_long@@Base>
   139dc:	mov	r3, r0
   139e0:	ldr	r2, [pc, #272]	; 13af8 <table_cell_to_buffer@@Base+0x2cc>
   139e4:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   139e8:	mov	r1, r7
   139ec:	mov	r0, r6
   139f0:	bl	12fec <table_get_ulong@@Base>
   139f4:	mov	r3, r0
   139f8:	ldr	r2, [pc, #252]	; 13afc <table_cell_to_buffer@@Base+0x2d0>
   139fc:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   13a00:	mov	r1, r7
   13a04:	mov	r0, r6
   13a08:	bl	12ffc <table_get_llong@@Base>
   13a0c:	b	13968 <table_cell_to_buffer@@Base+0x13c>
   13a10:	mov	r1, r7
   13a14:	mov	r0, r6
   13a18:	bl	13000 <table_get_ullong@@Base>
   13a1c:	b	13994 <table_cell_to_buffer@@Base+0x168>
   13a20:	mov	r1, r7
   13a24:	mov	r0, r6
   13a28:	bl	1303c <table_get_string@@Base>
   13a2c:	mov	r3, r0
   13a30:	ldr	r2, [pc, #200]	; 13b00 <table_cell_to_buffer@@Base+0x2d4>
   13a34:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   13a38:	mov	r1, r7
   13a3c:	mov	r0, r6
   13a40:	bl	13004 <table_get_float@@Base>
   13a44:	vcvt.f64.f32	d0, s0
   13a48:	ldr	r2, [pc, #180]	; 13b04 <table_cell_to_buffer@@Base+0x2d8>
   13a4c:	vstr	d0, [sp]
   13a50:	mov	r1, r5
   13a54:	mov	r0, r4
   13a58:	bl	11ab4 <snprintf@plt>
   13a5c:	b	1397c <table_cell_to_buffer@@Base+0x150>
   13a60:	mov	r1, r7
   13a64:	mov	r0, r6
   13a68:	bl	13014 <table_get_double@@Base>
   13a6c:	ldr	r2, [pc, #148]	; 13b08 <table_cell_to_buffer@@Base+0x2dc>
   13a70:	vstr	d0, [sp]
   13a74:	b	13a50 <table_cell_to_buffer@@Base+0x224>
   13a78:	mov	r1, r7
   13a7c:	mov	r0, r6
   13a80:	bl	13024 <table_get_ldouble@@Base>
   13a84:	ldr	r2, [pc, #128]	; 13b0c <table_cell_to_buffer@@Base+0x2e0>
   13a88:	vstr	d0, [sp]
   13a8c:	b	13a50 <table_cell_to_buffer@@Base+0x224>
   13a90:	mov	r1, r7
   13a94:	mov	r0, r6
   13a98:	bl	12f3c <table_get_bool@@Base>
   13a9c:	b	138cc <table_cell_to_buffer@@Base+0xa0>
   13aa0:	mov	r1, r7
   13aa4:	mov	r0, r6
   13aa8:	bl	13034 <table_get_char@@Base>
   13aac:	mov	r3, r0
   13ab0:	ldr	r2, [pc, #88]	; 13b10 <table_cell_to_buffer@@Base+0x2e4>
   13ab4:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   13ab8:	mov	r1, r7
   13abc:	mov	r0, r6
   13ac0:	bl	13038 <table_get_uchar@@Base>
   13ac4:	b	13aac <table_cell_to_buffer@@Base+0x280>
   13ac8:	mov	r1, r7
   13acc:	mov	r0, r6
   13ad0:	bl	13040 <table_get_ptr@@Base>
   13ad4:	mov	r3, r0
   13ad8:	ldr	r2, [pc, #52]	; 13b14 <table_cell_to_buffer@@Base+0x2e8>
   13adc:	b	138ec <table_cell_to_buffer@@Base+0xc0>
   13ae0:	andeq	r4, r1, r0, ror #4
   13ae4:	andeq	r4, r1, r3, ror #4
   13ae8:	andeq	r4, r1, r6, ror #4
   13aec:	andeq	r4, r1, fp, ror #4
   13af0:	andeq	r4, r1, r0, ror r2
   13af4:	andeq	r4, r1, r4, ror r2
   13af8:	andeq	r4, r1, r8, ror r2
   13afc:	andeq	r4, r1, ip, ror r2
   13b00:	andeq	r4, r1, r0, lsl #5
   13b04:	andeq	r4, r1, r3, lsl #5
   13b08:	andeq	r4, r1, r6, lsl #5
   13b0c:	andeq	r4, r1, sl, lsl #5
   13b10:	andeq	r4, r1, lr, lsl #5
   13b14:	muleq	r1, r1, r2

00013b18 <table_cell_from_buffer@@Base>:
   13b18:	push	{r4, r5, r6, r7, lr}
   13b1c:	mov	r7, r1
   13b20:	sub	sp, sp, #268	; 0x10c
   13b24:	mov	r1, r2
   13b28:	mov	r6, r0
   13b2c:	mov	r5, r2
   13b30:	mov	r4, r3
   13b34:	bl	125f0 <table_get_column_data_type@@Base>
   13b38:	cmp	r0, #23
   13b3c:	ldrls	pc, [pc, r0, lsl #2]
   13b40:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13b44:	andeq	r3, r1, r4, lsr #23
   13b48:	ldrdeq	r3, [r1], -r8
   13b4c:	andeq	r3, r1, r8, lsl #24
   13b50:	andeq	r3, r1, r8, lsr ip
   13b54:	andeq	r3, r1, r8, ror #24
   13b58:	muleq	r1, r8, ip
   13b5c:	andeq	r3, r1, r8, asr #25
   13b60:	strdeq	r3, [r1], -r8
   13b64:	andeq	r3, r1, r8, lsr #26
   13b68:	andeq	r3, r1, ip, asr sp
   13b6c:	muleq	r1, r0, sp
   13b70:	andeq	r3, r1, r0, asr #27
   13b74:	strdeq	r3, [r1], -r0
   13b78:	andeq	r3, r1, r0, lsr #28
   13b7c:	andeq	r3, r1, r0, asr lr
   13b80:	andeq	r3, r1, r4, lsl #29
   13b84:	andeq	r3, r1, r8, ror #29
   13b88:	andeq	r3, r1, r8, lsl pc
   13b8c:	andeq	r3, r1, r8, asr #30
   13b90:	ldrdeq	r3, [r1], -r4
   13b94:	andeq	r4, r1, r4
   13b98:			; <UNDEFINED> instruction: 0x00013eb8
   13b9c:	andeq	r3, r1, r8, ror pc
   13ba0:	andeq	r4, r1, r4, lsr r0
   13ba4:	add	r2, sp, #8
   13ba8:	ldr	r1, [pc, #1212]	; 1406c <table_cell_from_buffer@@Base+0x554>
   13bac:	mov	r0, r4
   13bb0:	bl	11ac0 <__isoc99_sscanf@plt>
   13bb4:	cmp	r0, #1
   13bb8:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13bbc:	mov	r2, r5
   13bc0:	mov	r1, r7
   13bc4:	ldr	r3, [sp, #8]
   13bc8:	mov	r0, r6
   13bcc:	bl	1356c <table_set_int@@Base>
   13bd0:	mov	r4, #0
   13bd4:	b	13fc8 <table_cell_from_buffer@@Base+0x4b0>
   13bd8:	add	r2, sp, #8
   13bdc:	ldr	r1, [pc, #1164]	; 14070 <table_cell_from_buffer@@Base+0x558>
   13be0:	mov	r0, r4
   13be4:	bl	11ac0 <__isoc99_sscanf@plt>
   13be8:	cmp	r0, #1
   13bec:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13bf0:	mov	r2, r5
   13bf4:	mov	r1, r7
   13bf8:	ldr	r3, [sp, #8]
   13bfc:	mov	r0, r6
   13c00:	bl	1358c <table_set_uint@@Base>
   13c04:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13c08:	add	r2, sp, #8
   13c0c:	ldr	r1, [pc, #1120]	; 14074 <table_cell_from_buffer@@Base+0x55c>
   13c10:	mov	r0, r4
   13c14:	bl	11ac0 <__isoc99_sscanf@plt>
   13c18:	cmp	r0, #1
   13c1c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13c20:	ldrsb	r3, [sp, #8]
   13c24:	mov	r2, r5
   13c28:	mov	r1, r7
   13c2c:	mov	r0, r6
   13c30:	bl	135ac <table_set_int8@@Base>
   13c34:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13c38:	add	r2, sp, #8
   13c3c:	ldr	r1, [pc, #1076]	; 14078 <table_cell_from_buffer@@Base+0x560>
   13c40:	mov	r0, r4
   13c44:	bl	11ac0 <__isoc99_sscanf@plt>
   13c48:	cmp	r0, #1
   13c4c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13c50:	ldrb	r3, [sp, #8]
   13c54:	mov	r2, r5
   13c58:	mov	r1, r7
   13c5c:	mov	r0, r6
   13c60:	bl	135cc <table_set_uint8@@Base>
   13c64:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13c68:	add	r2, sp, #8
   13c6c:	ldr	r1, [pc, #1032]	; 1407c <table_cell_from_buffer@@Base+0x564>
   13c70:	mov	r0, r4
   13c74:	bl	11ac0 <__isoc99_sscanf@plt>
   13c78:	cmp	r0, #1
   13c7c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13c80:	ldrsh	r3, [sp, #8]
   13c84:	mov	r2, r5
   13c88:	mov	r1, r7
   13c8c:	mov	r0, r6
   13c90:	bl	135ec <table_set_int16@@Base>
   13c94:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13c98:	add	r2, sp, #8
   13c9c:	ldr	r1, [pc, #988]	; 14080 <table_cell_from_buffer@@Base+0x568>
   13ca0:	mov	r0, r4
   13ca4:	bl	11ac0 <__isoc99_sscanf@plt>
   13ca8:	cmp	r0, #1
   13cac:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13cb0:	ldrh	r3, [sp, #8]
   13cb4:	mov	r2, r5
   13cb8:	mov	r1, r7
   13cbc:	mov	r0, r6
   13cc0:	bl	1360c <table_set_uint16@@Base>
   13cc4:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13cc8:	add	r2, sp, #8
   13ccc:	ldr	r1, [pc, #920]	; 1406c <table_cell_from_buffer@@Base+0x554>
   13cd0:	mov	r0, r4
   13cd4:	bl	11ac0 <__isoc99_sscanf@plt>
   13cd8:	cmp	r0, #1
   13cdc:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13ce0:	mov	r2, r5
   13ce4:	mov	r1, r7
   13ce8:	ldr	r3, [sp, #8]
   13cec:	mov	r0, r6
   13cf0:	bl	1362c <table_set_int32@@Base>
   13cf4:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13cf8:	add	r2, sp, #8
   13cfc:	ldr	r1, [pc, #876]	; 14070 <table_cell_from_buffer@@Base+0x558>
   13d00:	mov	r0, r4
   13d04:	bl	11ac0 <__isoc99_sscanf@plt>
   13d08:	cmp	r0, #1
   13d0c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13d10:	mov	r2, r5
   13d14:	mov	r1, r7
   13d18:	ldr	r3, [sp, #8]
   13d1c:	mov	r0, r6
   13d20:	bl	1364c <table_set_uint32@@Base>
   13d24:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13d28:	add	r2, sp, #8
   13d2c:	ldr	r1, [pc, #848]	; 14084 <table_cell_from_buffer@@Base+0x56c>
   13d30:	mov	r0, r4
   13d34:	bl	11ac0 <__isoc99_sscanf@plt>
   13d38:	cmp	r0, #1
   13d3c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13d40:	ldrd	r2, [sp, #8]
   13d44:	mov	r1, r7
   13d48:	mov	r0, r6
   13d4c:	strd	r2, [sp]
   13d50:	mov	r2, r5
   13d54:	bl	1366c <table_set_int64@@Base>
   13d58:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13d5c:	add	r2, sp, #8
   13d60:	ldr	r1, [pc, #800]	; 14088 <table_cell_from_buffer@@Base+0x570>
   13d64:	mov	r0, r4
   13d68:	bl	11ac0 <__isoc99_sscanf@plt>
   13d6c:	cmp	r0, #1
   13d70:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13d74:	ldrd	r2, [sp, #8]
   13d78:	mov	r1, r7
   13d7c:	mov	r0, r6
   13d80:	strd	r2, [sp]
   13d84:	mov	r2, r5
   13d88:	bl	13688 <table_set_uint64@@Base>
   13d8c:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13d90:	add	r2, sp, #8
   13d94:	ldr	r1, [pc, #736]	; 1407c <table_cell_from_buffer@@Base+0x564>
   13d98:	mov	r0, r4
   13d9c:	bl	11ac0 <__isoc99_sscanf@plt>
   13da0:	cmp	r0, #1
   13da4:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13da8:	ldrsh	r3, [sp, #8]
   13dac:	mov	r2, r5
   13db0:	mov	r1, r7
   13db4:	mov	r0, r6
   13db8:	bl	136a4 <table_set_short@@Base>
   13dbc:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13dc0:	add	r2, sp, #8
   13dc4:	ldr	r1, [pc, #692]	; 14080 <table_cell_from_buffer@@Base+0x568>
   13dc8:	mov	r0, r4
   13dcc:	bl	11ac0 <__isoc99_sscanf@plt>
   13dd0:	cmp	r0, #1
   13dd4:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13dd8:	ldrh	r3, [sp, #8]
   13ddc:	mov	r2, r5
   13de0:	mov	r1, r7
   13de4:	mov	r0, r6
   13de8:	bl	136c4 <table_set_ushort@@Base>
   13dec:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13df0:	add	r2, sp, #8
   13df4:	ldr	r1, [pc, #656]	; 1408c <table_cell_from_buffer@@Base+0x574>
   13df8:	mov	r0, r4
   13dfc:	bl	11ac0 <__isoc99_sscanf@plt>
   13e00:	cmp	r0, #1
   13e04:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13e08:	mov	r2, r5
   13e0c:	mov	r1, r7
   13e10:	ldr	r3, [sp, #8]
   13e14:	mov	r0, r6
   13e18:	bl	136e4 <table_set_long@@Base>
   13e1c:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13e20:	add	r2, sp, #8
   13e24:	ldr	r1, [pc, #612]	; 14090 <table_cell_from_buffer@@Base+0x578>
   13e28:	mov	r0, r4
   13e2c:	bl	11ac0 <__isoc99_sscanf@plt>
   13e30:	cmp	r0, #1
   13e34:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13e38:	mov	r2, r5
   13e3c:	mov	r1, r7
   13e40:	ldr	r3, [sp, #8]
   13e44:	mov	r0, r6
   13e48:	bl	13704 <table_set_ulong@@Base>
   13e4c:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13e50:	add	r2, sp, #8
   13e54:	ldr	r1, [pc, #552]	; 14084 <table_cell_from_buffer@@Base+0x56c>
   13e58:	mov	r0, r4
   13e5c:	bl	11ac0 <__isoc99_sscanf@plt>
   13e60:	cmp	r0, #1
   13e64:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13e68:	ldrd	r2, [sp, #8]
   13e6c:	mov	r1, r7
   13e70:	mov	r0, r6
   13e74:	strd	r2, [sp]
   13e78:	mov	r2, r5
   13e7c:	bl	13724 <table_set_llong@@Base>
   13e80:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13e84:	add	r2, sp, #8
   13e88:	ldr	r1, [pc, #504]	; 14088 <table_cell_from_buffer@@Base+0x570>
   13e8c:	mov	r0, r4
   13e90:	bl	11ac0 <__isoc99_sscanf@plt>
   13e94:	cmp	r0, #1
   13e98:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13e9c:	ldrd	r2, [sp, #8]
   13ea0:	mov	r1, r7
   13ea4:	mov	r0, r6
   13ea8:	strd	r2, [sp]
   13eac:	mov	r2, r5
   13eb0:	bl	13740 <table_set_ullong@@Base>
   13eb4:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13eb8:	add	r2, sp, #8
   13ebc:	ldr	r1, [pc, #464]	; 14094 <table_cell_from_buffer@@Base+0x57c>
   13ec0:	mov	r0, r4
   13ec4:	bl	11ac0 <__isoc99_sscanf@plt>
   13ec8:	cmp	r0, #1
   13ecc:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13ed0:	add	r3, sp, #8
   13ed4:	mov	r2, r5
   13ed8:	mov	r1, r7
   13edc:	mov	r0, r6
   13ee0:	bl	137bc <table_set_string@@Base>
   13ee4:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13ee8:	add	r2, sp, #8
   13eec:	ldr	r1, [pc, #420]	; 14098 <table_cell_from_buffer@@Base+0x580>
   13ef0:	mov	r0, r4
   13ef4:	bl	11ac0 <__isoc99_sscanf@plt>
   13ef8:	cmp	r0, #1
   13efc:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13f00:	mov	r2, r5
   13f04:	mov	r1, r7
   13f08:	vldr	s0, [sp, #8]
   13f0c:	mov	r0, r6
   13f10:	bl	1375c <table_set_float@@Base>
   13f14:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13f18:	add	r2, sp, #8
   13f1c:	ldr	r1, [pc, #376]	; 1409c <table_cell_from_buffer@@Base+0x584>
   13f20:	mov	r0, r4
   13f24:	bl	11ac0 <__isoc99_sscanf@plt>
   13f28:	cmp	r0, #1
   13f2c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13f30:	mov	r2, r5
   13f34:	mov	r1, r7
   13f38:	vldr	d0, [sp, #8]
   13f3c:	mov	r0, r6
   13f40:	bl	1377c <table_set_double@@Base>
   13f44:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13f48:	add	r2, sp, #8
   13f4c:	ldr	r1, [pc, #332]	; 140a0 <table_cell_from_buffer@@Base+0x588>
   13f50:	mov	r0, r4
   13f54:	bl	11ac0 <__isoc99_sscanf@plt>
   13f58:	cmp	r0, #1
   13f5c:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13f60:	mov	r2, r5
   13f64:	mov	r1, r7
   13f68:	vldr	d0, [sp, #8]
   13f6c:	mov	r0, r6
   13f70:	bl	1379c <table_set_ldouble@@Base>
   13f74:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13f78:	add	r2, sp, #8
   13f7c:	ldr	r1, [pc, #232]	; 1406c <table_cell_from_buffer@@Base+0x554>
   13f80:	mov	r0, r4
   13f84:	bl	11ac0 <__isoc99_sscanf@plt>
   13f88:	cmp	r0, #1
   13f8c:	mov	r3, r0
   13f90:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13f94:	ldr	r4, [sp, #8]
   13f98:	cmp	r4, #0
   13f9c:	beq	13fb4 <table_cell_from_buffer@@Base+0x49c>
   13fa0:	mov	r2, r5
   13fa4:	mov	r1, r7
   13fa8:	mov	r0, r6
   13fac:	bl	1354c <table_set_bool@@Base>
   13fb0:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   13fb4:	mov	r3, r4
   13fb8:	mov	r2, r5
   13fbc:	mov	r1, r7
   13fc0:	mov	r0, r6
   13fc4:	bl	1354c <table_set_bool@@Base>
   13fc8:	mov	r0, r4
   13fcc:	add	sp, sp, #268	; 0x10c
   13fd0:	pop	{r4, r5, r6, r7, pc}
   13fd4:	add	r2, sp, #8
   13fd8:	ldr	r1, [pc, #196]	; 140a4 <table_cell_from_buffer@@Base+0x58c>
   13fdc:	mov	r0, r4
   13fe0:	bl	11ac0 <__isoc99_sscanf@plt>
   13fe4:	cmp	r0, #1
   13fe8:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   13fec:	ldrb	r3, [sp, #8]
   13ff0:	mov	r2, r5
   13ff4:	mov	r1, r7
   13ff8:	mov	r0, r6
   13ffc:	bl	137d4 <table_set_char@@Base>
   14000:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   14004:	add	r2, sp, #8
   14008:	ldr	r1, [pc, #148]	; 140a4 <table_cell_from_buffer@@Base+0x58c>
   1400c:	mov	r0, r4
   14010:	bl	11ac0 <__isoc99_sscanf@plt>
   14014:	cmp	r0, #1
   14018:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   1401c:	ldrb	r3, [sp, #8]
   14020:	mov	r2, r5
   14024:	mov	r1, r7
   14028:	mov	r0, r6
   1402c:	bl	137f4 <table_set_uchar@@Base>
   14030:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   14034:	add	r2, sp, #8
   14038:	ldr	r1, [pc, #104]	; 140a8 <table_cell_from_buffer@@Base+0x590>
   1403c:	mov	r0, r4
   14040:	bl	11ac0 <__isoc99_sscanf@plt>
   14044:	cmp	r0, #1
   14048:	bne	14064 <table_cell_from_buffer@@Base+0x54c>
   1404c:	mov	r2, r5
   14050:	mov	r1, r7
   14054:	ldr	r3, [sp, #8]
   14058:	mov	r0, r6
   1405c:	bl	13814 <table_set_ptr@@Base>
   14060:	b	13bd0 <table_cell_from_buffer@@Base+0xb8>
   14064:	mvn	r4, #0
   14068:	b	13fc8 <table_cell_from_buffer@@Base+0x4b0>
   1406c:	andeq	r4, r1, r0, ror #4
   14070:	andeq	r4, r1, r3, ror #4
   14074:	muleq	r1, r4, r2
   14078:	muleq	r1, r9, r2
   1407c:	andeq	r4, r1, r0, ror r2
   14080:	andeq	r4, r1, r4, ror r2
   14084:	andeq	r4, r1, r6, ror #4
   14088:	andeq	r4, r1, fp, ror #4
   1408c:	andeq	r4, r1, r8, ror r2
   14090:	andeq	r4, r1, ip, ror r2
   14094:	andeq	r4, r1, r0, lsl #5
   14098:	andeq	r4, r1, r3, lsl #5
   1409c:	andeq	r4, r1, r6, lsl #5
   140a0:	andeq	r4, r1, sl, lsl #5
   140a4:	andeq	r4, r1, lr, lsl #5
   140a8:	muleq	r1, r1, r2

000140ac <table_get_cell_ptr@@Base>:
   140ac:	push	{r4, lr}
   140b0:	mov	r4, r2
   140b4:	bl	13250 <table_get_row_ptr@@Base>
   140b8:	ldr	r0, [r0]
   140bc:	add	r0, r0, r4, lsl #2
   140c0:	pop	{r4, pc}

000140c4 <table_cell_init@@Base>:
   140c4:	push	{r4, lr}
   140c8:	bl	140ac <table_get_cell_ptr@@Base>
   140cc:	mov	r3, #0
   140d0:	str	r3, [r0]
   140d4:	pop	{r4, pc}

000140d8 <table_cell_destroy@@Base>:
   140d8:	push	{r4, r5, r6, lr}
   140dc:	mov	r6, r1
   140e0:	mov	r1, r2
   140e4:	mov	r5, r0
   140e8:	mov	r4, r2
   140ec:	bl	125f0 <table_get_column_data_type@@Base>
   140f0:	cmp	r0, #23
   140f4:	popeq	{r4, r5, r6, pc}
   140f8:	mov	r2, r4
   140fc:	mov	r1, r6
   14100:	mov	r0, r5
   14104:	bl	140ac <table_get_cell_ptr@@Base>
   14108:	ldr	r0, [r0]
   1410c:	cmp	r0, #0
   14110:	popeq	{r4, r5, r6, pc}
   14114:	pop	{r4, r5, r6, lr}
   14118:	b	11a60 <free@plt>

0001411c <table_cell_nullify@@Base>:
   1411c:	push	{r4, lr}
   14120:	bl	140ac <table_get_cell_ptr@@Base>
   14124:	mov	r4, r0
   14128:	ldr	r0, [r0]
   1412c:	cmp	r0, #0
   14130:	beq	14140 <table_cell_nullify@@Base+0x24>
   14134:	bl	11a60 <free@plt>
   14138:	mov	r3, #0
   1413c:	str	r3, [r4]
   14140:	mov	r0, #0
   14144:	pop	{r4, pc}

00014148 <__libc_csu_init@@Base>:
   14148:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1414c:	mov	r7, r0
   14150:	ldr	r6, [pc, #72]	; 141a0 <__libc_csu_init@@Base+0x58>
   14154:	ldr	r5, [pc, #72]	; 141a4 <__libc_csu_init@@Base+0x5c>
   14158:	add	r6, pc, r6
   1415c:	add	r5, pc, r5
   14160:	sub	r6, r6, r5
   14164:	mov	r8, r1
   14168:	mov	r9, r2
   1416c:	bl	11a28 <strcmp@plt-0x20>
   14170:	asrs	r6, r6, #2
   14174:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14178:	mov	r4, #0
   1417c:	add	r4, r4, #1
   14180:	ldr	r3, [r5], #4
   14184:	mov	r2, r9
   14188:	mov	r1, r8
   1418c:	mov	r0, r7
   14190:	blx	r3
   14194:	cmp	r6, r4
   14198:	bne	1417c <__libc_csu_init@@Base+0x34>
   1419c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141a0:			; <UNDEFINED> instruction: 0x00010db4
   141a4:	andeq	r0, r1, ip, lsr #27

000141a8 <__libc_csu_fini@@Base>:
   141a8:	bx	lr

Disassembly of section .fini:

000141ac <.fini>:
   141ac:	push	{r3, lr}
   141b0:	pop	{r3, pc}
