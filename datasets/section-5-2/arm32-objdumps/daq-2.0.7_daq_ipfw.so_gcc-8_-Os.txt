
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000634 <_init>:
 634:	push	{r3, lr}
 638:	bl	75c <call_weak_fn>
 63c:	pop	{r3, pc}

Disassembly of section .plt:

00000640 <.plt>:
 640:	push	{lr}		; (str lr, [sp, #-4]!)
 644:	ldr	lr, [pc, #4]	; 650 <.plt+0x10>
 648:	add	lr, pc, lr
 64c:	ldr	pc, [lr, #8]!
 650:	.word	0x000119b0

00000654 <calloc@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2480]!	; 0x9b0

00000660 <strcmp@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2472]!	; 0x9a8

0000066c <__cxa_finalize@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2464]!	; 0x9a0

00000678 <strtol@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2456]!	; 0x998

00000684 <free@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2448]!	; 0x990

00000690 <memcpy@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2440]!	; 0x988

0000069c <select@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2432]!	; 0x980

000006a8 <recvfrom@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2424]!	; 0x978

000006b4 <strdup@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2416]!	; 0x970

000006c0 <gettimeofday@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2408]!	; 0x968

000006cc <malloc@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2400]!	; 0x960

000006d8 <sfbpf_compile@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2392]!	; 0x958

000006e4 <strerror@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2384]!	; 0x950

000006f0 <__gmon_start__@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2376]!	; 0x948

000006fc <__errno_location@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2368]!	; 0x940

00000708 <snprintf@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2360]!	; 0x938

00000714 <bind@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2352]!	; 0x930

00000720 <memset@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2344]!	; 0x928

0000072c <sendto@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2336]!	; 0x920

00000738 <sfbpf_filter@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2328]!	; 0x918

00000744 <socket@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2320]!	; 0x910

00000750 <close@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2312]!	; 0x908

Disassembly of section .text:

0000075c <call_weak_fn>:
     75c:	ldr	r3, [pc, #20]	; 778 <call_weak_fn+0x1c>
     760:	ldr	r2, [pc, #20]	; 77c <call_weak_fn+0x20>
     764:	add	r3, pc, r3
     768:	ldr	r2, [r3, r2]
     76c:	cmp	r2, #0
     770:	bxeq	lr
     774:	b	6f0 <__gmon_start__@plt>
     778:	.word	0x00011894
     77c:	.word	0x0000006c

00000780 <deregister_tm_clones>:
     780:	ldr	r0, [pc, #44]	; 7b4 <deregister_tm_clones+0x34>
     784:	ldr	r3, [pc, #44]	; 7b8 <deregister_tm_clones+0x38>
     788:	add	r0, pc, r0
     78c:	add	r3, pc, r3
     790:	cmp	r3, r0
     794:	ldr	r3, [pc, #32]	; 7bc <deregister_tm_clones+0x3c>
     798:	add	r3, pc, r3
     79c:	bxeq	lr
     7a0:	ldr	r2, [pc, #24]	; 7c0 <deregister_tm_clones+0x40>
     7a4:	ldr	r3, [r3, r2]
     7a8:	cmp	r3, #0
     7ac:	bxeq	lr
     7b0:	bx	r3
     7b4:	.word	0x00011950
     7b8:	.word	0x0001194c
     7bc:	.word	0x00011860
     7c0:	.word	0x00000068

000007c4 <register_tm_clones>:
     7c4:	ldr	r0, [pc, #56]	; 804 <register_tm_clones+0x40>
     7c8:	ldr	r3, [pc, #56]	; 808 <register_tm_clones+0x44>
     7cc:	add	r0, pc, r0
     7d0:	add	r3, pc, r3
     7d4:	sub	r1, r3, r0
     7d8:	ldr	r3, [pc, #44]	; 80c <register_tm_clones+0x48>
     7dc:	asr	r1, r1, #2
     7e0:	add	r3, pc, r3
     7e4:	add	r1, r1, r1, lsr #31
     7e8:	asrs	r1, r1, #1
     7ec:	bxeq	lr
     7f0:	ldr	r2, [pc, #24]	; 810 <register_tm_clones+0x4c>
     7f4:	ldr	r3, [r3, r2]
     7f8:	cmp	r3, #0
     7fc:	bxeq	lr
     800:	bx	r3
     804:	.word	0x0001190c
     808:	.word	0x00011908
     80c:	.word	0x00011818
     810:	.word	0x00000070

00000814 <__do_global_dtors_aux>:
     814:	ldr	r3, [pc, #76]	; 868 <__do_global_dtors_aux+0x54>
     818:	ldr	r2, [pc, #76]	; 86c <__do_global_dtors_aux+0x58>
     81c:	add	r3, pc, r3
     820:	add	r2, pc, r2
     824:	ldrb	r3, [r3]
     828:	cmp	r3, #0
     82c:	bxne	lr
     830:	ldr	r3, [pc, #56]	; 870 <__do_global_dtors_aux+0x5c>
     834:	push	{r4, lr}
     838:	ldr	r3, [r2, r3]
     83c:	cmp	r3, #0
     840:	beq	850 <__do_global_dtors_aux+0x3c>
     844:	ldr	r3, [pc, #40]	; 874 <__do_global_dtors_aux+0x60>
     848:	ldr	r0, [pc, r3]
     84c:	bl	66c <__cxa_finalize@plt>
     850:	bl	780 <deregister_tm_clones>
     854:	ldr	r3, [pc, #28]	; 878 <__do_global_dtors_aux+0x64>
     858:	mov	r2, #1
     85c:	add	r3, pc, r3
     860:	strb	r2, [r3]
     864:	pop	{r4, pc}
     868:	.word	0x000118bc
     86c:	.word	0x000117d8
     870:	.word	0x00000064
     874:	.word	0x00011824
     878:	.word	0x0001187c

0000087c <frame_dummy>:
     87c:	b	7c4 <register_tm_clones>

00000880 <ipfw_daq_breakloop>:
     880:	mov	r3, #0
     884:	str	r3, [r0, #12]
     888:	mov	r0, r3
     88c:	bx	lr

00000890 <ipfw_daq_check_status>:
     890:	ldr	r0, [r0, #316]	; 0x13c
     894:	bx	lr

00000898 <ipfw_daq_get_stats>:
     898:	mov	r3, r1
     89c:	push	{r4, lr}
     8a0:	add	r1, r0, #320	; 0x140
     8a4:	mov	r2, #96	; 0x60
     8a8:	mov	r0, r3
     8ac:	bl	690 <memcpy@plt>
     8b0:	mov	r0, #0
     8b4:	pop	{r4, pc}

000008b8 <ipfw_daq_get_snaplen>:
     8b8:	ldr	r0, [r0, #24]
     8bc:	bx	lr

000008c0 <ipfw_daq_get_capabilities>:
     8c0:	movw	r0, #743	; 0x2e7
     8c4:	bx	lr

000008c8 <ipfw_daq_get_datalink_type>:
     8c8:	mov	r0, #228	; 0xe4
     8cc:	bx	lr

000008d0 <ipfw_daq_get_errbuf>:
     8d0:	add	r0, r0, #36	; 0x24
     8d4:	bx	lr

000008d8 <ipfw_daq_get_device_index>:
     8d8:	mvn	r0, #3
     8dc:	bx	lr

000008e0 <ipfw_daq_set_errbuf>:
     8e0:	subs	r3, r1, #0
     8e4:	add	r0, r0, #36	; 0x24
     8e8:	ldreq	r3, [pc, #16]	; 900 <ipfw_daq_set_errbuf+0x20>
     8ec:	addeq	r3, pc, r3
     8f0:	ldr	r2, [pc, #12]	; 904 <ipfw_daq_set_errbuf+0x24>
     8f4:	mov	r1, #256	; 0x100
     8f8:	add	r2, pc, r2
     8fc:	b	708 <snprintf@plt>
     900:	.word	0x00000921
     904:	.word	0x00000812

00000908 <ipfw_daq_reset_stats>:
     908:	mov	r2, #96	; 0x60
     90c:	mov	r1, #0
     910:	add	r0, r0, #320	; 0x140
     914:	b	720 <memset@plt>

00000918 <ipfw_daq_shutdown>:
     918:	push	{r4, lr}
     91c:	mov	r4, r0
     920:	ldr	r0, [r0, #32]
     924:	cmp	r0, #0
     928:	beq	930 <ipfw_daq_shutdown+0x18>
     92c:	bl	684 <free@plt>
     930:	ldr	r0, [r4, #28]
     934:	cmp	r0, #0
     938:	beq	940 <ipfw_daq_shutdown+0x28>
     93c:	bl	684 <free@plt>
     940:	mov	r0, r4
     944:	pop	{r4, lr}
     948:	b	684 <free@plt>

0000094c <ipfw_daq_stop>:
     94c:	push	{r4, lr}
     950:	mov	r4, r0
     954:	ldr	r0, [r0]
     958:	bl	750 <close@plt>
     95c:	mvn	r3, #0
     960:	mov	r0, #0
     964:	str	r3, [r4]
     968:	mov	r3, #3
     96c:	str	r3, [r4, #316]	; 0x13c
     970:	pop	{r4, pc}

00000974 <ipfw_daq_set_filter>:
     974:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     978:	mov	r3, #0
     97c:	add	r5, sp, #8
     980:	mov	r4, r0
     984:	mov	r6, r1
     988:	mov	r2, r5
     98c:	str	r3, [sp, #4]
     990:	mov	r3, #1
     994:	str	r3, [sp]
     998:	mov	r3, r1
     99c:	mov	r1, #228	; 0xe4
     9a0:	ldr	r0, [r0, #24]
     9a4:	bl	6d8 <sfbpf_compile@plt>
     9a8:	cmp	r0, #0
     9ac:	mvnlt	r0, #0
     9b0:	blt	9f0 <ipfw_daq_set_filter+0x7c>
     9b4:	ldr	r0, [r4, #32]
     9b8:	cmp	r0, #0
     9bc:	beq	9c4 <ipfw_daq_set_filter+0x50>
     9c0:	bl	684 <free@plt>
     9c4:	ldr	r0, [r4, #296]	; 0x128
     9c8:	cmp	r0, #0
     9cc:	beq	9d4 <ipfw_daq_set_filter+0x60>
     9d0:	bl	684 <free@plt>
     9d4:	mov	r0, r6
     9d8:	add	r4, r4, #292	; 0x124
     9dc:	bl	6b4 <strdup@plt>
     9e0:	str	r0, [r4, #-260]	; 0xfffffefc
     9e4:	ldm	r5, {r0, r1}
     9e8:	stm	r4, {r0, r1}
     9ec:	mov	r0, #0
     9f0:	add	sp, sp, #16
     9f4:	pop	{r4, r5, r6, pc}

000009f8 <ipfw_daq_forward.isra.0>:
     9f8:	mov	r3, r0
     9fc:	push	{r0, r1, r2, r4, r5, lr}
     a00:	mov	r5, r0
     a04:	mov	ip, #16
     a08:	ldr	r0, [r3], #300	; 0x12c
     a0c:	stm	sp, {r3, ip}
     a10:	mov	r3, #0
     a14:	bl	72c <sendto@plt>
     a18:	cmn	r0, #1
     a1c:	movne	r4, #0
     a20:	bne	a54 <ipfw_daq_forward.isra.0+0x5c>
     a24:	mov	r4, r0
     a28:	bl	6fc <__errno_location@plt>
     a2c:	ldr	r0, [r0]
     a30:	bl	6e4 <strerror@plt>
     a34:	ldr	r3, [pc, #36]	; a60 <ipfw_daq_forward.isra.0+0x68>
     a38:	mov	r1, #256	; 0x100
     a3c:	str	r0, [sp]
     a40:	add	r0, r5, #36	; 0x24
     a44:	ldr	r2, [pc, #24]	; a64 <ipfw_daq_forward.isra.0+0x6c>
     a48:	add	r3, pc, r3
     a4c:	add	r2, pc, r2
     a50:	bl	708 <snprintf@plt>
     a54:	mov	r0, r4
     a58:	add	sp, sp, #12
     a5c:	pop	{r4, r5, pc}
     a60:	.word	0x0000064c
     a64:	.word	0x000006c1

00000a68 <ipfw_daq_acquire>:
     a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a6c:	cmp	r1, #0
     a70:	mov	r5, #0
     a74:	sub	sp, sp, #204	; 0xcc
     a78:	mvneq	r1, #0
     a7c:	mov	r4, r0
     a80:	mov	r9, r2
     a84:	ldr	r6, [pc, #700]	; d48 <ipfw_daq_acquire+0x2e0>
     a88:	mov	r7, r5
     a8c:	mov	fp, r5
     a90:	str	r1, [r0, #12]
     a94:	str	r5, [sp, #16]
     a98:	add	r6, pc, r6
     a9c:	mov	r8, #1
     aa0:	add	sl, sp, #12
     aa4:	ldr	r3, [r4, #12]
     aa8:	cmp	r3, r5
     aac:	bls	b38 <ipfw_daq_acquire+0xd0>
     ab0:	add	r2, sp, #72	; 0x48
     ab4:	mov	r3, #0
     ab8:	mov	r1, r2
     abc:	add	r3, r3, #1
     ac0:	str	r7, [r2], #4
     ac4:	cmp	r3, #32
     ac8:	bne	abc <ipfw_daq_acquire+0x54>
     acc:	ldr	r0, [r4]
     ad0:	add	r2, sp, #200	; 0xc8
     ad4:	cmp	r0, #0
     ad8:	add	r3, r0, #31
     adc:	movge	r3, r0
     ae0:	and	ip, r0, #31
     ae4:	asr	r3, r3, #5
     ae8:	add	r3, r2, r3, lsl #2
     aec:	rsbs	r2, r0, #0
     af0:	add	r0, r0, #1
     af4:	and	r2, r2, #31
     af8:	rsbpl	ip, r2, #0
     afc:	ldr	r2, [r3, #-128]	; 0xffffff80
     b00:	orr	r2, r2, r8, lsl ip
     b04:	str	r2, [r3, #-128]	; 0xffffff80
     b08:	str	sl, [sp]
     b0c:	ldr	r3, [r4, #20]
     b10:	str	r3, [sp, #12]
     b14:	mov	r3, #0
     b18:	mov	r2, r3
     b1c:	bl	69c <select@plt>
     b20:	cmp	r0, #0
     b24:	bge	b78 <ipfw_daq_acquire+0x110>
     b28:	bl	6fc <__errno_location@plt>
     b2c:	ldr	r0, [r0]
     b30:	cmp	r0, #4
     b34:	bne	b48 <ipfw_daq_acquire+0xe0>
     b38:	mov	r8, #0
     b3c:	mov	r0, r8
     b40:	add	sp, sp, #204	; 0xcc
     b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b48:	bl	6e4 <strerror@plt>
     b4c:	ldr	r3, [pc, #504]	; d4c <ipfw_daq_acquire+0x2e4>
     b50:	mov	r1, #256	; 0x100
     b54:	mvn	r8, #0
     b58:	str	r0, [sp]
     b5c:	add	r0, r4, #36	; 0x24
     b60:	ldr	r2, [pc, #488]	; d50 <ipfw_daq_acquire+0x2e8>
     b64:	add	r3, pc, r3
     b68:	add	r3, r3, #17
     b6c:	add	r2, pc, r2
     b70:	bl	708 <snprintf@plt>
     b74:	b	b3c <ipfw_daq_acquire+0xd4>
     b78:	ldr	r0, [r4]
     b7c:	add	r2, sp, #200	; 0xc8
     b80:	cmp	r0, #0
     b84:	add	r3, r0, #31
     b88:	movge	r3, r0
     b8c:	rsbs	r1, r0, #0
     b90:	asr	r3, r3, #5
     b94:	and	r1, r1, #31
     b98:	add	r3, r2, r3, lsl #2
     b9c:	and	r2, r0, #31
     ba0:	rsbpl	r2, r1, #0
     ba4:	ldr	r3, [r3, #-128]	; 0xffffff80
     ba8:	ands	r3, r3, r8, lsl r2
     bac:	beq	aa4 <ipfw_daq_acquire+0x3c>
     bb0:	mov	r3, #16
     bb4:	add	r2, sp, #8
     bb8:	ldr	r1, [r4, #28]
     bbc:	strd	r2, [sp, #4]
     bc0:	add	r3, r4, #300	; 0x12c
     bc4:	ldr	r2, [r4, #24]
     bc8:	str	r3, [sp]
     bcc:	mov	r3, #0
     bd0:	bl	6a8 <recvfrom@plt>
     bd4:	cmn	r0, #1
     bd8:	mov	r8, r0
     bdc:	bne	c1c <ipfw_daq_acquire+0x1b4>
     be0:	bl	6fc <__errno_location@plt>
     be4:	ldr	r0, [r0]
     be8:	cmp	r0, #4
     bec:	beq	c1c <ipfw_daq_acquire+0x1b4>
     bf0:	bl	6e4 <strerror@plt>
     bf4:	ldr	r3, [pc, #344]	; d54 <ipfw_daq_acquire+0x2ec>
     bf8:	mov	r1, #256	; 0x100
     bfc:	str	r0, [sp]
     c00:	add	r0, r4, #36	; 0x24
     c04:	ldr	r2, [pc, #332]	; d58 <ipfw_daq_acquire+0x2f0>
     c08:	add	r3, pc, r3
     c0c:	add	r3, r3, #17
     c10:	add	r2, pc, r2
     c14:	bl	708 <snprintf@plt>
     c18:	b	b3c <ipfw_daq_acquire+0xd4>
     c1c:	mov	r3, #0
     c20:	mov	r2, #0
     c24:	mov	r1, #0
     c28:	mov	r0, r6
     c2c:	strd	r2, [r6]
     c30:	bl	6c0 <gettimeofday@plt>
     c34:	ldr	r3, [r6]
     c38:	ldr	r0, [r4, #296]	; 0x128
     c3c:	ldr	r1, [r4, #324]	; 0x144
     c40:	str	r3, [sp, #20]
     c44:	ldr	r3, [r6, #4]
     c48:	str	r8, [sp, #28]
     c4c:	str	r8, [sp, #32]
     c50:	str	fp, [sp, #52]	; 0x34
     c54:	strh	r7, [sp, #68]	; 0x44
     c58:	str	r3, [sp, #24]
     c5c:	mvn	r3, #0
     c60:	str	r3, [sp, #36]	; 0x24
     c64:	str	r3, [sp, #40]	; 0x28
     c68:	str	r3, [sp, #44]	; 0x2c
     c6c:	str	r3, [sp, #48]	; 0x30
     c70:	ldr	r3, [r4, #320]	; 0x140
     c74:	adds	r3, r3, #1
     c78:	adc	r1, r1, #0
     c7c:	cmp	r0, #0
     c80:	str	r3, [r4, #320]	; 0x140
     c84:	str	r1, [r4, #324]	; 0x144
     c88:	beq	cf8 <ipfw_daq_acquire+0x290>
     c8c:	mov	r3, r8
     c90:	mov	r2, r8
     c94:	ldr	r1, [r4, #28]
     c98:	bl	738 <sfbpf_filter@plt>
     c9c:	cmp	r0, #0
     ca0:	bne	cf8 <ipfw_daq_acquire+0x290>
     ca4:	ldr	r3, [r4, #344]	; 0x158
     ca8:	ldr	r1, [r4, #348]	; 0x15c
     cac:	adds	r3, r3, #1
     cb0:	adc	r1, r1, #0
     cb4:	str	r3, [r4, #344]	; 0x158
     cb8:	str	r1, [r4, #348]	; 0x15c
     cbc:	ldr	r3, [r4, #16]
     cc0:	cmp	r3, #0
     cc4:	bne	ce0 <ipfw_daq_acquire+0x278>
     cc8:	ldr	r3, [pc, #140]	; d5c <ipfw_daq_acquire+0x2f4>
     ccc:	add	r3, pc, r3
     cd0:	add	r0, r3, r0, lsl #2
     cd4:	ldr	r3, [r0, #36]	; 0x24
     cd8:	cmp	r3, #0
     cdc:	beq	cf0 <ipfw_daq_acquire+0x288>
     ce0:	mov	r0, r4
     ce4:	ldr	r1, [r4, #28]
     ce8:	ldr	r2, [sp, #32]
     cec:	bl	9f8 <ipfw_daq_forward.isra.0>
     cf0:	add	r5, r5, #1
     cf4:	b	a9c <ipfw_daq_acquire+0x34>
     cf8:	add	r1, sp, #20
     cfc:	mov	r0, #0
     d00:	ldr	r2, [r4, #28]
     d04:	blx	r9
     d08:	cmp	r0, #6
     d0c:	movhi	r0, #1
     d10:	add	r3, r4, r0, lsl #3
     d14:	ldr	r2, [r3, #360]	; 0x168
     d18:	ldr	r1, [r3, #364]	; 0x16c
     d1c:	adds	r2, r2, #1
     d20:	adc	r1, r1, #0
     d24:	str	r2, [r3, #360]	; 0x168
     d28:	str	r1, [r3, #364]	; 0x16c
     d2c:	ldr	r3, [r4, #336]	; 0x150
     d30:	ldr	r1, [r4, #340]	; 0x154
     d34:	adds	r3, r3, #1
     d38:	adc	r1, r1, #0
     d3c:	str	r3, [r4, #336]	; 0x150
     d40:	str	r1, [r4, #340]	; 0x154
     d44:	b	cbc <ipfw_daq_acquire+0x254>
     d48:	.word	0x00011644
     d4c:	.word	0x00000530
     d50:	.word	0x000005c6
     d54:	.word	0x0000048c
     d58:	.word	0x00000547
     d5c:	.word	0x000003c8

00000d60 <ipfw_daq_inject>:
     d60:	push	{r4, lr}
     d64:	mov	r1, r2
     d68:	mov	r2, r3
     d6c:	mov	r4, r0
     d70:	bl	9f8 <ipfw_daq_forward.isra.0>
     d74:	cmp	r0, #0
     d78:	popne	{r4, pc}
     d7c:	ldr	r2, [r4, #352]	; 0x160
     d80:	ldr	r1, [r4, #356]	; 0x164
     d84:	adds	r2, r2, #1
     d88:	adc	r1, r1, #0
     d8c:	str	r2, [r4, #352]	; 0x160
     d90:	str	r1, [r4, #356]	; 0x164
     d94:	pop	{r4, pc}

00000d98 <ipfw_daq_start>:
     d98:	push	{r0, r1, r2, r4, r5, lr}
     d9c:	mov	r5, r0
     da0:	mov	r2, #254	; 0xfe
     da4:	mov	r1, #3
     da8:	ldr	r0, [r0, #8]
     dac:	bl	744 <socket@plt>
     db0:	cmn	r0, #1
     db4:	str	r0, [r5]
     db8:	bne	dfc <ipfw_daq_start+0x64>
     dbc:	mov	r4, r0
     dc0:	bl	6fc <__errno_location@plt>
     dc4:	ldr	r0, [r0]
     dc8:	bl	6e4 <strerror@plt>
     dcc:	ldr	r3, [pc, #116]	; e48 <ipfw_daq_start+0xb0>
     dd0:	str	r0, [sp]
     dd4:	ldr	r2, [pc, #112]	; e4c <ipfw_daq_start+0xb4>
     dd8:	add	r3, pc, r3
     ddc:	add	r3, r3, #64	; 0x40
     de0:	add	r2, pc, r2
     de4:	mov	r1, #256	; 0x100
     de8:	add	r0, r5, #36	; 0x24
     dec:	bl	708 <snprintf@plt>
     df0:	mov	r0, r4
     df4:	add	sp, sp, #12
     df8:	pop	{r4, r5, pc}
     dfc:	mov	r2, #16
     e00:	add	r1, r5, #300	; 0x12c
     e04:	bl	714 <bind@plt>
     e08:	cmn	r0, #1
     e0c:	mov	r4, r0
     e10:	movne	r3, #2
     e14:	movne	r4, #0
     e18:	strne	r3, [r5, #316]	; 0x13c
     e1c:	bne	df0 <ipfw_daq_start+0x58>
     e20:	bl	6fc <__errno_location@plt>
     e24:	ldr	r0, [r0]
     e28:	bl	6e4 <strerror@plt>
     e2c:	ldr	r3, [pc, #28]	; e50 <ipfw_daq_start+0xb8>
     e30:	str	r0, [sp]
     e34:	ldr	r2, [pc, #24]	; e54 <ipfw_daq_start+0xbc>
     e38:	add	r3, pc, r3
     e3c:	add	r3, r3, #64	; 0x40
     e40:	add	r2, pc, r2
     e44:	b	de4 <ipfw_daq_start+0x4c>
     e48:	.word	0x000002bc
     e4c:	.word	0x0000039e
     e50:	.word	0x0000025c
     e54:	.word	0x00000363

00000e58 <ipfw_daq_initialize>:
     e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e5c:	mov	r9, r0
     e60:	sub	sp, sp, #28
     e64:	mov	r8, r1
     e68:	mov	r0, #1
     e6c:	mov	r1, #416	; 0x1a0
     e70:	mov	r6, r2
     e74:	mov	r7, r3
     e78:	bl	654 <calloc@plt>
     e7c:	subs	r4, r0, #0
     e80:	bne	eac <ipfw_daq_initialize+0x54>
     e84:	ldr	r3, [pc, #476]	; 1068 <ipfw_daq_initialize+0x210>
     e88:	mov	r1, r7
     e8c:	mov	r0, r6
     e90:	ldr	r2, [pc, #468]	; 106c <ipfw_daq_initialize+0x214>
     e94:	add	r3, pc, r3
     e98:	add	r3, r3, #79	; 0x4f
     e9c:	add	r2, pc, r2
     ea0:	bl	708 <snprintf@plt>
     ea4:	mvn	r0, #1
     ea8:	b	fa4 <ipfw_daq_initialize+0x14c>
     eac:	ldr	sl, [pc, #444]	; 1070 <ipfw_daq_initialize+0x218>
     eb0:	mov	r3, #2
     eb4:	add	fp, sp, #20
     eb8:	ldr	r5, [r9, #20]
     ebc:	str	r3, [r4, #8]
     ec0:	mov	r3, #8000	; 0x1f40
     ec4:	add	sl, pc, sl
     ec8:	str	r3, [r4, #4]
     ecc:	cmp	r5, #0
     ed0:	bne	f5c <ipfw_daq_initialize+0x104>
     ed4:	ldr	r0, [r9, #4]
     ed8:	movw	r3, #65535	; 0xffff
     edc:	ldr	r2, [r4, #8]
     ee0:	cmp	r0, #0
     ee4:	moveq	r0, r3
     ee8:	ldr	r3, [r9, #8]
     eec:	str	r3, [r4, #20]
     ef0:	ldr	r3, [r9, #12]
     ef4:	str	r0, [r4, #24]
     ef8:	clz	r3, r3
     efc:	lsr	r3, r3, #5
     f00:	str	r3, [r4, #16]
     f04:	add	r3, r4, #300	; 0x12c
     f08:	strh	r2, [r3]
     f0c:	movw	r2, #302	; 0x12e
     f10:	ldr	r3, [r4, #4]
     f14:	str	r5, [r4, #304]	; 0x130
     f18:	rev16	r3, r3
     f1c:	strh	r3, [r4, r2]
     f20:	bl	6cc <malloc@plt>
     f24:	cmp	r0, #0
     f28:	str	r0, [r4, #28]
     f2c:	bne	104c <ipfw_daq_initialize+0x1f4>
     f30:	ldr	r3, [pc, #316]	; 1074 <ipfw_daq_initialize+0x21c>
     f34:	mov	r1, r7
     f38:	mov	r0, r6
     f3c:	ldr	r2, [pc, #308]	; 1078 <ipfw_daq_initialize+0x220>
     f40:	add	r3, pc, r3
     f44:	add	r3, r3, #79	; 0x4f
     f48:	add	r2, pc, r2
     f4c:	bl	708 <snprintf@plt>
     f50:	mov	r0, r4
     f54:	bl	918 <ipfw_daq_shutdown>
     f58:	b	ea4 <ipfw_daq_initialize+0x4c>
     f5c:	ldrd	r2, [r5]
     f60:	cmp	r3, #0
     f64:	beq	f74 <ipfw_daq_initialize+0x11c>
     f68:	ldrb	r1, [r3]
     f6c:	cmp	r1, #0
     f70:	bne	fac <ipfw_daq_initialize+0x154>
     f74:	ldr	r3, [pc, #256]	; 107c <ipfw_daq_initialize+0x224>
     f78:	str	r2, [sp]
     f7c:	ldr	r2, [pc, #252]	; 1080 <ipfw_daq_initialize+0x228>
     f80:	add	r3, pc, r3
     f84:	add	r3, r3, #99	; 0x63
     f88:	add	r2, pc, r2
     f8c:	mov	r1, r7
     f90:	mov	r0, r6
     f94:	bl	708 <snprintf@plt>
     f98:	mov	r0, r4
     f9c:	bl	918 <ipfw_daq_shutdown>
     fa0:	mvn	r0, #0
     fa4:	add	sp, sp, #28
     fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fac:	mov	r0, r2
     fb0:	mov	r1, sl
     fb4:	strd	r2, [sp, #8]
     fb8:	bl	660 <strcmp@plt>
     fbc:	cmp	r0, #0
     fc0:	ldrd	r2, [sp, #8]
     fc4:	bne	1024 <ipfw_daq_initialize+0x1cc>
     fc8:	mov	r2, r0
     fcc:	mov	r1, fp
     fd0:	str	r3, [sp, #20]
     fd4:	mov	r0, r3
     fd8:	bl	678 <strtol@plt>
     fdc:	ldr	r3, [sp, #20]
     fe0:	str	r0, [r4, #4]
     fe4:	sub	r0, r0, #1
     fe8:	ldrb	r2, [r3]
     fec:	movw	r3, #65534	; 0xfffe
     ff0:	cmp	r0, r3
     ff4:	cmpls	r2, #0
     ff8:	beq	101c <ipfw_daq_initialize+0x1c4>
     ffc:	ldr	r3, [r5, #4]
    1000:	ldr	r2, [pc, #124]	; 1084 <ipfw_daq_initialize+0x22c>
    1004:	str	r3, [sp]
    1008:	ldr	r3, [pc, #120]	; 1088 <ipfw_daq_initialize+0x230>
    100c:	add	r2, pc, r2
    1010:	add	r3, pc, r3
    1014:	add	r3, r3, #99	; 0x63
    1018:	b	f8c <ipfw_daq_initialize+0x134>
    101c:	ldr	r5, [r5, #8]
    1020:	b	ecc <ipfw_daq_initialize+0x74>
    1024:	strd	r2, [sp]
    1028:	mov	r1, r7
    102c:	mov	r0, r6
    1030:	ldr	r3, [pc, #84]	; 108c <ipfw_daq_initialize+0x234>
    1034:	ldr	r2, [pc, #84]	; 1090 <ipfw_daq_initialize+0x238>
    1038:	add	r3, pc, r3
    103c:	add	r3, r3, #99	; 0x63
    1040:	add	r2, pc, r2
    1044:	bl	708 <snprintf@plt>
    1048:	b	f98 <ipfw_daq_initialize+0x140>
    104c:	mvn	r3, #0
    1050:	mov	r0, r5
    1054:	str	r4, [r8]
    1058:	str	r3, [r4]
    105c:	mov	r3, #1
    1060:	str	r3, [r4, #316]	; 0x13c
    1064:	b	fa4 <ipfw_daq_initialize+0x14c>
    1068:	.word	0x00000200
    106c:	.word	0x0000032a
    1070:	.word	0x0000034a
    1074:	.word	0x00000154
    1078:	.word	0x00000300
    107c:	.word	0x00000114
    1080:	.word	0x00000267
    1084:	.word	0x00000207
    1088:	.word	0x00000084
    108c:	.word	0x0000005c
    1090:	.word	0x000001e6

Disassembly of section .fini:

00001094 <_fini>:
    1094:	push	{r3, lr}
    1098:	pop	{r3, pc}
