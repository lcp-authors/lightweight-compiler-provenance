
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010cdc <.init>:
   10cdc:	push	{r3, lr}
   10ce0:	bl	11b30 <putchar_unlocked@plt+0xb88>
   10ce4:	pop	{r3, pc}

Disassembly of section .plt:

00010ce8 <calloc@plt-0x14>:
   10ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cec:	ldr	lr, [pc, #4]	; 10cf8 <calloc@plt-0x4>
   10cf0:	add	lr, pc, lr
   10cf4:	ldr	pc, [lr, #8]!
   10cf8:	andeq	r6, r1, r8, lsl #6

00010cfc <calloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #776]!	; 0x308

00010d08 <fputs_unlocked@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #768]!	; 0x300

00010d14 <raise@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d20 <uselocale@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #752]!	; 0x2f0

00010d2c <iconv@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #744]!	; 0x2e8

00010d38 <strcmp@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #736]!	; 0x2e0

00010d44 <fflush@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d50 <free@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #720]!	; 0x2d0

00010d5c <ferror@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #712]!	; 0x2c8

00010d68 <_exit@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #704]!	; 0x2c0

00010d74 <memcpy@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #696]!	; 0x2b8

00010d80 <mbsinit@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #688]!	; 0x2b0

00010d8c <strtold@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #680]!	; 0x2a8

00010d98 <memcmp@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #672]!	; 0x2a0

00010da4 <__vprintf_chk@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #664]!	; 0x298

00010db0 <fputc_unlocked@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #656]!	; 0x290

00010dbc <dcgettext@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #648]!	; 0x288

00010dc8 <realloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #640]!	; 0x280

00010dd4 <textdomain@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #632]!	; 0x278

00010de0 <iswprint@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #624]!	; 0x270

00010dec <fwrite@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #616]!	; 0x268

00010df8 <lseek64@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #608]!	; 0x260

00010e04 <__ctype_get_mb_cur_max@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #600]!	; 0x258

00010e10 <__fpending@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #592]!	; 0x250

00010e1c <ferror_unlocked@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #584]!	; 0x248

00010e28 <mbrtowc@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #576]!	; 0x240

00010e34 <error@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #568]!	; 0x238

00010e40 <getenv@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #560]!	; 0x230

00010e4c <malloc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #552]!	; 0x228

00010e58 <iconv_open@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #544]!	; 0x220

00010e64 <__libc_start_main@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #536]!	; 0x218

00010e70 <__vfprintf_chk@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #528]!	; 0x210

00010e7c <__freading@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #520]!	; 0x208

00010e88 <__gmon_start__@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #512]!	; 0x200

00010e94 <mempcpy@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #504]!	; 0x1f8

00010ea0 <__ctype_b_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #496]!	; 0x1f0

00010eac <exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #488]!	; 0x1e8

00010eb8 <strlen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ec4 <strchr@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #472]!	; 0x1d8

00010ed0 <__errno_location@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #464]!	; 0x1d0

00010edc <__cxa_atexit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ee8 <memset@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ef4 <__printf_chk@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #440]!	; 0x1b8

00010f00 <fileno@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #432]!	; 0x1b0

00010f0c <strtoumax@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #424]!	; 0x1a8

00010f18 <__fprintf_chk@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #416]!	; 0x1a0

00010f24 <strtoimax@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #408]!	; 0x198

00010f30 <fclose@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #400]!	; 0x190

00010f3c <fseeko64@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #392]!	; 0x188

00010f48 <setlocale@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #384]!	; 0x180

00010f54 <strrchr@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #376]!	; 0x178

00010f60 <nl_langinfo@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #368]!	; 0x170

00010f6c <newlocale@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #360]!	; 0x168

00010f78 <bindtextdomain@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #352]!	; 0x160

00010f84 <fputs@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #344]!	; 0x158

00010f90 <strncmp@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #336]!	; 0x150

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #328]!	; 0x148

00010fa8 <putchar_unlocked@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #320]!	; 0x140

Disassembly of section .text:

00010fb8 <.text>:
   10fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fbc:	vpush	{d8}
   10fc0:	mov	r5, r0
   10fc4:	ldr	r0, [r1]
   10fc8:	mov	r4, r1
   10fcc:	sub	sp, sp, #380	; 0x17c
   10fd0:	bl	124fc <putchar_unlocked@plt+0x1554>
   10fd4:	ldr	r1, [pc, #2748]	; 11a98 <putchar_unlocked@plt+0xaf0>
   10fd8:	mov	r0, #6
   10fdc:	bl	10f48 <setlocale@plt>
   10fe0:	ldr	r1, [pc, #2740]	; 11a9c <putchar_unlocked@plt+0xaf4>
   10fe4:	ldr	r0, [pc, #2740]	; 11aa0 <putchar_unlocked@plt+0xaf8>
   10fe8:	bl	10f78 <bindtextdomain@plt>
   10fec:	ldr	r6, [pc, #2736]	; 11aa4 <putchar_unlocked@plt+0xafc>
   10ff0:	ldr	r0, [pc, #2728]	; 11aa0 <putchar_unlocked@plt+0xaf8>
   10ff4:	bl	10dd4 <textdomain@plt>
   10ff8:	ldr	r0, [pc, #2728]	; 11aa8 <putchar_unlocked@plt+0xb00>
   10ffc:	bl	153d0 <putchar_unlocked@plt+0x4428>
   11000:	mov	r3, #0
   11004:	ldr	r0, [pc, #2720]	; 11aac <putchar_unlocked@plt+0xb04>
   11008:	str	r3, [r6]
   1100c:	bl	10e40 <getenv@plt>
   11010:	adds	r0, r0, #0
   11014:	movne	r0, #1
   11018:	cmp	r5, #2
   1101c:	strb	r0, [r6, #4]
   11020:	bne	1108c <putchar_unlocked@plt+0xe4>
   11024:	ldr	r6, [r4, #4]
   11028:	ldr	r1, [pc, #2688]	; 11ab0 <putchar_unlocked@plt+0xb08>
   1102c:	mov	r0, r6
   11030:	bl	10d38 <strcmp@plt>
   11034:	cmp	r0, #0
   11038:	bne	11040 <putchar_unlocked@plt+0x98>
   1103c:	bl	12070 <putchar_unlocked@plt+0x10c8>
   11040:	mov	r0, r6
   11044:	ldr	r1, [pc, #2664]	; 11ab4 <putchar_unlocked@plt+0xb0c>
   11048:	bl	10d38 <strcmp@plt>
   1104c:	subs	r6, r0, #0
   11050:	bne	11094 <putchar_unlocked@plt+0xec>
   11054:	ldr	r3, [pc, #2652]	; 11ab8 <putchar_unlocked@plt+0xb10>
   11058:	ldr	r0, [pc, #2652]	; 11abc <putchar_unlocked@plt+0xb14>
   1105c:	str	r3, [sp]
   11060:	ldr	r3, [pc, #2648]	; 11ac0 <putchar_unlocked@plt+0xb18>
   11064:	str	r6, [sp, #4]
   11068:	ldr	r2, [pc, #2644]	; 11ac4 <putchar_unlocked@plt+0xb1c>
   1106c:	ldr	r3, [r3]
   11070:	ldr	r1, [pc, #2640]	; 11ac8 <putchar_unlocked@plt+0xb20>
   11074:	ldr	r0, [r0]
   11078:	bl	14304 <putchar_unlocked@plt+0x335c>
   1107c:	mov	r0, r6
   11080:	add	sp, sp, #380	; 0x17c
   11084:	vpop	{d8}
   11088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1108c:	cmp	r5, #1
   11090:	ble	110b8 <putchar_unlocked@plt+0x110>
   11094:	ldr	r1, [pc, #2608]	; 11acc <putchar_unlocked@plt+0xb24>
   11098:	ldr	r0, [r4, #4]
   1109c:	bl	10d38 <strcmp@plt>
   110a0:	cmp	r0, #0
   110a4:	bne	110e0 <putchar_unlocked@plt+0x138>
   110a8:	sub	r5, r5, #1
   110ac:	cmp	r5, #1
   110b0:	add	r4, r4, #4
   110b4:	bne	110e0 <putchar_unlocked@plt+0x138>
   110b8:	mov	r2, #5
   110bc:	ldr	r1, [pc, #2572]	; 11ad0 <putchar_unlocked@plt+0xb28>
   110c0:	mov	r0, #0
   110c4:	bl	10dbc <dcgettext@plt>
   110c8:	mov	r1, #0
   110cc:	mov	r2, r0
   110d0:	mov	r0, r1
   110d4:	bl	10e34 <error@plt>
   110d8:	mov	r0, #1
   110dc:	b	1103c <putchar_unlocked@plt+0x94>
   110e0:	ldr	r3, [r4, #4]
   110e4:	str	r3, [sp, #104]	; 0x68
   110e8:	sub	r3, r5, #2
   110ec:	str	r3, [sp, #40]	; 0x28
   110f0:	add	r3, r4, #8
   110f4:	mov	r4, #1
   110f8:	str	r3, [sp, #32]
   110fc:	ldr	fp, [sp, #104]	; 0x68
   11100:	ldr	r7, [sp, #32]
   11104:	ldr	r6, [sp, #40]	; 0x28
   11108:	mov	r3, #0
   1110c:	str	r3, [sp, #20]
   11110:	str	r3, [sp, #12]
   11114:	ldrb	r0, [fp]
   11118:	cmp	r0, #0
   1111c:	bne	11194 <putchar_unlocked@plt+0x1ec>
   11120:	ldr	r3, [sp, #40]	; 0x28
   11124:	str	r6, [sp, #40]	; 0x28
   11128:	sub	r1, r3, r6
   1112c:	ldr	r3, [sp, #32]
   11130:	cmp	r1, #0
   11134:	cmpgt	r6, #0
   11138:	add	r3, r3, r1, lsl #2
   1113c:	str	r3, [sp, #32]
   11140:	movgt	r5, #1
   11144:	movle	r5, #0
   11148:	bgt	110fc <putchar_unlocked@plt+0x154>
   1114c:	cmp	r6, #0
   11150:	beq	11188 <putchar_unlocked@plt+0x1e0>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #2420]	; 11ad4 <putchar_unlocked@plt+0xb2c>
   1115c:	mov	r0, r5
   11160:	bl	10dbc <dcgettext@plt>
   11164:	ldr	r3, [sp, #32]
   11168:	mov	r4, r0
   1116c:	ldr	r0, [r3]
   11170:	bl	13b2c <putchar_unlocked@plt+0x2b84>
   11174:	mov	r2, r4
   11178:	mov	r1, r5
   1117c:	mov	r3, r0
   11180:	mov	r0, r5
   11184:	bl	10e34 <error@plt>
   11188:	ldr	r3, [pc, #2324]	; 11aa4 <putchar_unlocked@plt+0xafc>
   1118c:	ldr	r6, [r3]
   11190:	b	1107c <putchar_unlocked@plt+0xd4>
   11194:	cmp	r0, #37	; 0x25
   11198:	beq	111b0 <putchar_unlocked@plt+0x208>
   1119c:	cmp	r0, #92	; 0x5c
   111a0:	beq	11a80 <putchar_unlocked@plt+0xad8>
   111a4:	bl	10fa8 <putchar_unlocked@plt>
   111a8:	str	fp, [sp, #28]
   111ac:	b	111c8 <putchar_unlocked@plt+0x220>
   111b0:	ldrb	r0, [fp, #1]
   111b4:	add	r3, fp, #1
   111b8:	str	r3, [sp, #28]
   111bc:	cmp	r0, #37	; 0x25
   111c0:	bne	111d4 <putchar_unlocked@plt+0x22c>
   111c4:	bl	10fa8 <putchar_unlocked@plt>
   111c8:	ldr	r3, [sp, #28]
   111cc:	add	fp, r3, #1
   111d0:	b	11114 <putchar_unlocked@plt+0x16c>
   111d4:	cmp	r0, #98	; 0x62
   111d8:	bne	11228 <putchar_unlocked@plt+0x280>
   111dc:	cmp	r6, #0
   111e0:	ldrne	r5, [r7]
   111e4:	beq	111c8 <putchar_unlocked@plt+0x220>
   111e8:	ldrb	r0, [r5]
   111ec:	cmp	r0, #0
   111f0:	bne	11200 <putchar_unlocked@plt+0x258>
   111f4:	add	r7, r7, #4
   111f8:	sub	r6, r6, #1
   111fc:	b	111c8 <putchar_unlocked@plt+0x220>
   11200:	cmp	r0, #92	; 0x5c
   11204:	bne	11220 <putchar_unlocked@plt+0x278>
   11208:	mov	r0, r5
   1120c:	mov	r1, r4
   11210:	bl	11c1c <putchar_unlocked@plt+0xc74>
   11214:	add	r5, r5, r0
   11218:	add	r5, r5, #1
   1121c:	b	111e8 <putchar_unlocked@plt+0x240>
   11220:	bl	10fa8 <putchar_unlocked@plt>
   11224:	b	11218 <putchar_unlocked@plt+0x270>
   11228:	cmp	r0, #113	; 0x71
   1122c:	bne	11254 <putchar_unlocked@plt+0x2ac>
   11230:	cmp	r6, #0
   11234:	beq	111c8 <putchar_unlocked@plt+0x220>
   11238:	ldr	r1, [r7], #4
   1123c:	mov	r0, #3
   11240:	bl	13948 <putchar_unlocked@plt+0x29a0>
   11244:	ldr	r3, [pc, #2160]	; 11abc <putchar_unlocked@plt+0xb14>
   11248:	ldr	r1, [r3]
   1124c:	bl	10d08 <fputs_unlocked@plt>
   11250:	b	111f8 <putchar_unlocked@plt+0x250>
   11254:	mov	r2, #256	; 0x100
   11258:	mov	r1, #0
   1125c:	add	r0, sp, #120	; 0x78
   11260:	bl	10ee8 <memset@plt>
   11264:	mov	r2, #0
   11268:	add	r3, fp, #1
   1126c:	mov	r8, r2
   11270:	mov	sl, r4
   11274:	mov	lr, r2
   11278:	mov	ip, r4
   1127c:	mov	r9, r2
   11280:	mov	r1, r2
   11284:	strb	r4, [sp, #208]	; 0xd0
   11288:	strb	r4, [sp, #240]	; 0xf0
   1128c:	strb	r4, [sp, #237]	; 0xed
   11290:	strb	r4, [sp, #235]	; 0xeb
   11294:	strb	r4, [sp, #231]	; 0xe7
   11298:	strb	r4, [sp, #225]	; 0xe1
   1129c:	strb	r4, [sp, #191]	; 0xbf
   112a0:	strb	r4, [sp, #223]	; 0xdf
   112a4:	strb	r4, [sp, #190]	; 0xbe
   112a8:	strb	r4, [sp, #222]	; 0xde
   112ac:	strb	r4, [sp, #189]	; 0xbd
   112b0:	strb	r4, [sp, #221]	; 0xdd
   112b4:	strb	r4, [sp, #220]	; 0xdc
   112b8:	strb	r4, [sp, #219]	; 0xdb
   112bc:	strb	r4, [sp, #185]	; 0xb9
   112c0:	strb	r4, [sp, #217]	; 0xd9
   112c4:	str	r4, [sp, #100]	; 0x64
   112c8:	str	r2, [sp, #96]	; 0x60
   112cc:	str	r4, [sp, #60]	; 0x3c
   112d0:	str	r2, [sp, #64]	; 0x40
   112d4:	str	r4, [sp, #68]	; 0x44
   112d8:	str	r2, [sp, #16]
   112dc:	str	r4, [sp, #56]	; 0x38
   112e0:	str	r2, [sp, #80]	; 0x50
   112e4:	str	r4, [sp, #84]	; 0x54
   112e8:	str	r2, [sp, #24]
   112ec:	str	r4, [sp, #28]
   112f0:	str	r2, [sp, #36]	; 0x24
   112f4:	str	r4, [sp, #44]	; 0x2c
   112f8:	str	r2, [sp, #48]	; 0x30
   112fc:	str	r4, [sp, #52]	; 0x34
   11300:	str	r2, [sp, #72]	; 0x48
   11304:	str	r4, [sp, #76]	; 0x4c
   11308:	str	r2, [sp, #88]	; 0x58
   1130c:	str	r4, [sp, #92]	; 0x5c
   11310:	mov	r5, r3
   11314:	sub	r0, r3, fp
   11318:	str	r0, [sp, #108]	; 0x6c
   1131c:	ldrb	r0, [r5], #1
   11320:	cmp	r0, #43	; 0x2b
   11324:	beq	11344 <putchar_unlocked@plt+0x39c>
   11328:	bhi	1134c <putchar_unlocked@plt+0x3a4>
   1132c:	cmp	r0, #35	; 0x23
   11330:	beq	113b0 <putchar_unlocked@plt+0x408>
   11334:	cmp	r0, #39	; 0x27
   11338:	beq	11364 <putchar_unlocked@plt+0x3bc>
   1133c:	cmp	r0, #32
   11340:	bne	113e8 <putchar_unlocked@plt+0x440>
   11344:	mov	r3, r5
   11348:	b	11310 <putchar_unlocked@plt+0x368>
   1134c:	cmp	r0, #48	; 0x30
   11350:	beq	113dc <putchar_unlocked@plt+0x434>
   11354:	cmp	r0, #73	; 0x49
   11358:	beq	11364 <putchar_unlocked@plt+0x3bc>
   1135c:	cmp	r0, #45	; 0x2d
   11360:	b	11340 <putchar_unlocked@plt+0x398>
   11364:	str	r4, [sp, #16]
   11368:	str	r9, [sp, #56]	; 0x38
   1136c:	str	r4, [sp, #80]	; 0x50
   11370:	str	r1, [sp, #84]	; 0x54
   11374:	mov	r8, r4
   11378:	mov	sl, r1
   1137c:	str	r4, [sp, #24]
   11380:	str	r1, [sp, #28]
   11384:	str	r4, [sp, #36]	; 0x24
   11388:	str	r1, [sp, #44]	; 0x2c
   1138c:	str	r4, [sp, #48]	; 0x30
   11390:	str	r1, [sp, #52]	; 0x34
   11394:	mov	lr, r4
   11398:	mov	ip, r1
   1139c:	str	r4, [sp, #72]	; 0x48
   113a0:	str	r1, [sp, #76]	; 0x4c
   113a4:	str	r4, [sp, #88]	; 0x58
   113a8:	str	r1, [sp, #92]	; 0x5c
   113ac:	b	11344 <putchar_unlocked@plt+0x39c>
   113b0:	mov	r2, r4
   113b4:	mov	r8, r4
   113b8:	mov	sl, r1
   113bc:	str	r9, [sp, #100]	; 0x64
   113c0:	str	r4, [sp, #96]	; 0x60
   113c4:	str	r1, [sp, #60]	; 0x3c
   113c8:	str	r4, [sp, #64]	; 0x40
   113cc:	str	r1, [sp, #68]	; 0x44
   113d0:	mov	lr, r4
   113d4:	mov	ip, r1
   113d8:	b	11344 <putchar_unlocked@plt+0x39c>
   113dc:	mov	r8, r4
   113e0:	mov	sl, r9
   113e4:	b	113d0 <putchar_unlocked@plt+0x428>
   113e8:	ldr	r1, [sp, #88]	; 0x58
   113ec:	cmp	r1, #0
   113f0:	ldrbne	r1, [sp, #92]	; 0x5c
   113f4:	strbne	r1, [sp, #208]	; 0xd0
   113f8:	ldr	r1, [sp, #72]	; 0x48
   113fc:	cmp	r1, #0
   11400:	ldrbne	r1, [sp, #76]	; 0x4c
   11404:	strbne	r1, [sp, #240]	; 0xf0
   11408:	ldr	r1, [sp, #48]	; 0x30
   1140c:	cmp	lr, #0
   11410:	strbne	ip, [sp, #235]	; 0xeb
   11414:	cmp	r1, #0
   11418:	ldrbne	r1, [sp, #52]	; 0x34
   1141c:	strbne	r1, [sp, #231]	; 0xe7
   11420:	ldr	r1, [sp, #36]	; 0x24
   11424:	cmp	r1, #0
   11428:	ldrbne	r1, [sp, #44]	; 0x2c
   1142c:	strbne	r1, [sp, #189]	; 0xbd
   11430:	ldr	r1, [sp, #24]
   11434:	cmp	r1, #0
   11438:	ldrbne	r1, [sp, #28]
   1143c:	strbne	r1, [sp, #221]	; 0xdd
   11440:	ldr	r1, [sp, #80]	; 0x50
   11444:	cmp	r8, #0
   11448:	strbne	sl, [sp, #219]	; 0xdb
   1144c:	cmp	r1, #0
   11450:	ldrbne	r1, [sp, #84]	; 0x54
   11454:	strbne	r1, [sp, #185]	; 0xb9
   11458:	ldr	r1, [sp, #16]
   1145c:	cmp	r1, #0
   11460:	ldrbne	r1, [sp, #56]	; 0x38
   11464:	strbne	r1, [sp, #217]	; 0xd9
   11468:	ldr	r1, [sp, #64]	; 0x40
   1146c:	cmp	r1, #0
   11470:	ldrbne	r1, [sp, #68]	; 0x44
   11474:	strbne	r1, [sp, #237]	; 0xed
   11478:	ldr	r1, [sp, #96]	; 0x60
   1147c:	cmp	r1, #0
   11480:	ldrbne	r1, [sp, #60]	; 0x3c
   11484:	strbne	r1, [sp, #225]	; 0xe1
   11488:	cmp	r2, #0
   1148c:	ldrbne	r2, [sp, #100]	; 0x64
   11490:	strbne	r2, [sp, #220]	; 0xdc
   11494:	cmp	r0, #42	; 0x2a
   11498:	bne	11518 <putchar_unlocked@plt+0x570>
   1149c:	add	r5, r3, #1
   114a0:	ldr	r3, [sp, #108]	; 0x6c
   114a4:	cmp	r6, #0
   114a8:	add	sl, r3, #1
   114ac:	beq	115a4 <putchar_unlocked@plt+0x5fc>
   114b0:	ldr	r0, [r7]
   114b4:	bl	11fbc <putchar_unlocked@plt+0x1014>
   114b8:	mov	r9, #0
   114bc:	mvn	r8, #0
   114c0:	adds	r2, r0, #-2147483648	; 0x80000000
   114c4:	adc	r3, r1, #0
   114c8:	cmp	r3, r9
   114cc:	cmpeq	r2, r8
   114d0:	bhi	114e8 <putchar_unlocked@plt+0x540>
   114d4:	add	r7, r7, #4
   114d8:	sub	r6, r6, #1
   114dc:	str	r0, [sp, #12]
   114e0:	str	r4, [sp, #24]
   114e4:	b	1153c <putchar_unlocked@plt+0x594>
   114e8:	ldr	r1, [pc, #1512]	; 11ad8 <putchar_unlocked@plt+0xb30>
   114ec:	mov	r2, #5
   114f0:	mov	r0, #0
   114f4:	bl	10dbc <dcgettext@plt>
   114f8:	mov	r4, r0
   114fc:	ldr	r0, [r7]
   11500:	bl	13b2c <putchar_unlocked@plt+0x2b84>
   11504:	mov	r2, r4
   11508:	mov	r1, #0
   1150c:	mov	r3, r0
   11510:	mov	r0, #1
   11514:	bl	10e34 <error@plt>
   11518:	mov	r5, r3
   1151c:	sub	sl, r3, fp
   11520:	ldrb	r2, [r5]
   11524:	add	r3, r3, #1
   11528:	sub	r2, r2, #48	; 0x30
   1152c:	cmp	r2, #9
   11530:	bls	11518 <putchar_unlocked@plt+0x570>
   11534:	mov	r3, #0
   11538:	str	r3, [sp, #24]
   1153c:	ldrb	r3, [r5]
   11540:	mov	r8, #0
   11544:	cmp	r3, #46	; 0x2e
   11548:	strne	r8, [sp, #16]
   1154c:	bne	115bc <putchar_unlocked@plt+0x614>
   11550:	ldrb	r3, [r5, #1]
   11554:	strb	r8, [sp, #219]	; 0xdb
   11558:	cmp	r3, #42	; 0x2a
   1155c:	addne	r3, r5, #1
   11560:	subne	r2, sl, r5
   11564:	bne	11658 <putchar_unlocked@plt+0x6b0>
   11568:	cmp	r6, #0
   1156c:	add	r5, r5, #2
   11570:	add	sl, sl, #2
   11574:	beq	11650 <putchar_unlocked@plt+0x6a8>
   11578:	ldr	r0, [r7]
   1157c:	bl	11fbc <putchar_unlocked@plt+0x1014>
   11580:	cmp	r0, #0
   11584:	sbcs	r3, r1, #0
   11588:	blt	11644 <putchar_unlocked@plt+0x69c>
   1158c:	cmp	r0, #-2147483648	; 0x80000000
   11590:	sbcs	r3, r1, #0
   11594:	blt	115ac <putchar_unlocked@plt+0x604>
   11598:	mov	r2, #5
   1159c:	ldr	r1, [pc, #1336]	; 11adc <putchar_unlocked@plt+0xb34>
   115a0:	b	114f0 <putchar_unlocked@plt+0x548>
   115a4:	str	r6, [sp, #12]
   115a8:	b	114e0 <putchar_unlocked@plt+0x538>
   115ac:	str	r0, [sp, #20]
   115b0:	add	r7, r7, #4
   115b4:	sub	r6, r6, #1
   115b8:	str	r4, [sp, #16]
   115bc:	ldr	r0, [pc, #1308]	; 11ae0 <putchar_unlocked@plt+0xb38>
   115c0:	mov	r2, r5
   115c4:	str	r2, [sp, #28]
   115c8:	ldrb	r5, [r2], #1
   115cc:	sub	r3, r5, #104	; 0x68
   115d0:	and	r1, r5, #223	; 0xdf
   115d4:	uxtb	r3, r3
   115d8:	cmp	r3, #18
   115dc:	mvnls	r3, r0, lsr r3
   115e0:	movhi	r3, r4
   115e4:	and	r3, r3, #1
   115e8:	sub	r1, r1, #76	; 0x4c
   115ec:	eor	r3, r3, #1
   115f0:	clz	r1, r1
   115f4:	lsr	r1, r1, #5
   115f8:	orrs	r3, r1, r3
   115fc:	bne	115c4 <putchar_unlocked@plt+0x61c>
   11600:	add	r3, sp, #376	; 0x178
   11604:	add	r3, r3, r5
   11608:	ldrb	r9, [r3, #-256]	; 0xffffff00
   1160c:	cmp	r9, #0
   11610:	bne	11684 <putchar_unlocked@plt+0x6dc>
   11614:	mov	r2, #5
   11618:	ldr	r1, [pc, #1220]	; 11ae4 <putchar_unlocked@plt+0xb3c>
   1161c:	mov	r0, r9
   11620:	bl	10dbc <dcgettext@plt>
   11624:	ldr	r3, [sp, #28]
   11628:	str	fp, [sp]
   1162c:	add	r3, r3, #1
   11630:	sub	r3, r3, fp
   11634:	mov	r1, r9
   11638:	mov	r2, r0
   1163c:	mov	r0, #1
   11640:	bl	10e34 <error@plt>
   11644:	mvn	r3, #0
   11648:	str	r3, [sp, #20]
   1164c:	b	115b0 <putchar_unlocked@plt+0x608>
   11650:	str	r6, [sp, #20]
   11654:	b	115b8 <putchar_unlocked@plt+0x610>
   11658:	mov	r5, r3
   1165c:	add	r0, r2, r3
   11660:	ldrb	r1, [r5]
   11664:	add	r3, r3, #1
   11668:	sub	r1, r1, #48	; 0x30
   1166c:	cmp	r1, #9
   11670:	bls	11658 <putchar_unlocked@plt+0x6b0>
   11674:	mov	r3, #0
   11678:	mov	sl, r0
   1167c:	str	r3, [sp, #16]
   11680:	b	115bc <putchar_unlocked@plt+0x614>
   11684:	cmp	r6, #0
   11688:	subne	r6, r6, #1
   1168c:	ldrne	r8, [r7]
   11690:	ldreq	r8, [pc, #1024]	; 11a98 <putchar_unlocked@plt+0xaf0>
   11694:	addne	r7, r7, #4
   11698:	cmp	r5, #100	; 0x64
   1169c:	beq	11714 <putchar_unlocked@plt+0x76c>
   116a0:	bhi	116dc <putchar_unlocked@plt+0x734>
   116a4:	cmp	r5, #71	; 0x47
   116a8:	bhi	116cc <putchar_unlocked@plt+0x724>
   116ac:	cmp	r5, #69	; 0x45
   116b0:	bcs	116f0 <putchar_unlocked@plt+0x748>
   116b4:	cmp	r5, #65	; 0x41
   116b8:	beq	116f0 <putchar_unlocked@plt+0x748>
   116bc:	mov	r2, #0
   116c0:	mov	r3, fp
   116c4:	str	r2, [sp, #36]	; 0x24
   116c8:	b	11720 <putchar_unlocked@plt+0x778>
   116cc:	cmp	r5, #88	; 0x58
   116d0:	beq	11714 <putchar_unlocked@plt+0x76c>
   116d4:	cmp	r5, #97	; 0x61
   116d8:	b	116b8 <putchar_unlocked@plt+0x710>
   116dc:	cmp	r5, #105	; 0x69
   116e0:	beq	11714 <putchar_unlocked@plt+0x76c>
   116e4:	bhi	116fc <putchar_unlocked@plt+0x754>
   116e8:	cmp	r5, #103	; 0x67
   116ec:	bhi	116bc <putchar_unlocked@plt+0x714>
   116f0:	str	r4, [sp, #36]	; 0x24
   116f4:	ldr	r3, [pc, #1004]	; 11ae8 <putchar_unlocked@plt+0xb40>
   116f8:	b	11720 <putchar_unlocked@plt+0x778>
   116fc:	cmp	r5, #117	; 0x75
   11700:	beq	11714 <putchar_unlocked@plt+0x76c>
   11704:	cmp	r5, #120	; 0x78
   11708:	beq	11714 <putchar_unlocked@plt+0x76c>
   1170c:	cmp	r5, #111	; 0x6f
   11710:	bne	116bc <putchar_unlocked@plt+0x714>
   11714:	mov	r3, #2
   11718:	str	r3, [sp, #36]	; 0x24
   1171c:	ldr	r3, [pc, #968]	; 11aec <putchar_unlocked@plt+0xb44>
   11720:	str	r3, [sp, #44]	; 0x2c
   11724:	ldr	r3, [sp, #36]	; 0x24
   11728:	add	r0, sl, #2
   1172c:	add	r0, r0, r3
   11730:	bl	143cc <putchar_unlocked@plt+0x3424>
   11734:	mov	r2, sl
   11738:	mov	r1, fp
   1173c:	mov	r9, r0
   11740:	bl	10e94 <mempcpy@plt>
   11744:	ldr	r3, [sp, #44]	; 0x2c
   11748:	ldr	r2, [sp, #36]	; 0x24
   1174c:	mov	r1, r3
   11750:	bl	10e94 <mempcpy@plt>
   11754:	mov	r2, #0
   11758:	cmp	r5, #100	; 0x64
   1175c:	strb	r5, [r0]
   11760:	strb	r2, [r0, #1]
   11764:	beq	11848 <putchar_unlocked@plt+0x8a0>
   11768:	bhi	1182c <putchar_unlocked@plt+0x884>
   1176c:	cmp	r5, #71	; 0x47
   11770:	bhi	11790 <putchar_unlocked@plt+0x7e8>
   11774:	cmp	r5, #69	; 0x45
   11778:	bcs	1193c <putchar_unlocked@plt+0x994>
   1177c:	cmp	r5, #65	; 0x41
   11780:	beq	1193c <putchar_unlocked@plt+0x994>
   11784:	mov	r0, r9
   11788:	bl	124a8 <putchar_unlocked@plt+0x1500>
   1178c:	b	111c8 <putchar_unlocked@plt+0x220>
   11790:	cmp	r5, #97	; 0x61
   11794:	beq	1193c <putchar_unlocked@plt+0x994>
   11798:	cmp	r5, #99	; 0x63
   1179c:	beq	11a2c <putchar_unlocked@plt+0xa84>
   117a0:	cmp	r5, #88	; 0x58
   117a4:	bne	11784 <putchar_unlocked@plt+0x7dc>
   117a8:	ldrb	r2, [r8]
   117ac:	cmp	r2, #39	; 0x27
   117b0:	cmpne	r2, #34	; 0x22
   117b4:	bne	118ec <putchar_unlocked@plt+0x944>
   117b8:	ldrb	sl, [r8, #1]
   117bc:	cmp	sl, #0
   117c0:	beq	118ec <putchar_unlocked@plt+0x944>
   117c4:	ldrb	r2, [r8, #2]
   117c8:	uxtb	sl, sl
   117cc:	mov	fp, #0
   117d0:	cmp	r2, #0
   117d4:	beq	1180c <putchar_unlocked@plt+0x864>
   117d8:	ldr	r2, [pc, #708]	; 11aa4 <putchar_unlocked@plt+0xafc>
   117dc:	ldrb	r5, [r2, #4]
   117e0:	cmp	r5, #0
   117e4:	bne	1180c <putchar_unlocked@plt+0x864>
   117e8:	mov	r2, #5
   117ec:	ldr	r1, [pc, #764]	; 11af0 <putchar_unlocked@plt+0xb48>
   117f0:	mov	r0, r5
   117f4:	bl	10dbc <dcgettext@plt>
   117f8:	add	r3, r8, #2
   117fc:	mov	r1, r5
   11800:	mov	r2, r0
   11804:	mov	r0, r5
   11808:	bl	10e34 <error@plt>
   1180c:	ldr	r3, [sp, #24]
   11810:	cmp	r3, #0
   11814:	ldr	r3, [sp, #16]
   11818:	bne	11924 <putchar_unlocked@plt+0x97c>
   1181c:	cmp	r3, #0
   11820:	mov	r2, sl
   11824:	mov	r3, fp
   11828:	b	1186c <putchar_unlocked@plt+0x8c4>
   1182c:	cmp	r5, #111	; 0x6f
   11830:	beq	117a8 <putchar_unlocked@plt+0x800>
   11834:	bhi	1187c <putchar_unlocked@plt+0x8d4>
   11838:	cmp	r5, #103	; 0x67
   1183c:	bls	1193c <putchar_unlocked@plt+0x994>
   11840:	cmp	r5, #105	; 0x69
   11844:	bne	11784 <putchar_unlocked@plt+0x7dc>
   11848:	mov	r0, r8
   1184c:	bl	11fbc <putchar_unlocked@plt+0x1014>
   11850:	mov	r3, r1
   11854:	ldr	r1, [sp, #24]
   11858:	mov	r2, r0
   1185c:	cmp	r1, #0
   11860:	ldr	r1, [sp, #16]
   11864:	bne	118bc <putchar_unlocked@plt+0x914>
   11868:	cmp	r1, #0
   1186c:	bne	1191c <putchar_unlocked@plt+0x974>
   11870:	mov	r0, r9
   11874:	bl	14914 <putchar_unlocked@plt+0x396c>
   11878:	b	11784 <putchar_unlocked@plt+0x7dc>
   1187c:	cmp	r5, #117	; 0x75
   11880:	beq	117a8 <putchar_unlocked@plt+0x800>
   11884:	cmp	r5, #120	; 0x78
   11888:	beq	117a8 <putchar_unlocked@plt+0x800>
   1188c:	cmp	r5, #115	; 0x73
   11890:	bne	11784 <putchar_unlocked@plt+0x7dc>
   11894:	ldr	r3, [sp, #24]
   11898:	cmp	r3, #0
   1189c:	ldr	r3, [sp, #16]
   118a0:	bne	11a5c <putchar_unlocked@plt+0xab4>
   118a4:	cmp	r3, #0
   118a8:	bne	11a48 <putchar_unlocked@plt+0xaa0>
   118ac:	mov	r1, r8
   118b0:	mov	r0, r9
   118b4:	bl	14914 <putchar_unlocked@plt+0x396c>
   118b8:	b	11784 <putchar_unlocked@plt+0x7dc>
   118bc:	cmp	r1, #0
   118c0:	bne	118d4 <putchar_unlocked@plt+0x92c>
   118c4:	ldr	r1, [sp, #12]
   118c8:	mov	r0, r9
   118cc:	bl	14914 <putchar_unlocked@plt+0x396c>
   118d0:	b	11784 <putchar_unlocked@plt+0x7dc>
   118d4:	strd	r2, [sp]
   118d8:	ldr	r2, [sp, #20]
   118dc:	ldr	r1, [sp, #12]
   118e0:	mov	r0, r9
   118e4:	bl	14914 <putchar_unlocked@plt+0x396c>
   118e8:	b	11784 <putchar_unlocked@plt+0x7dc>
   118ec:	bl	10ed0 <__errno_location@plt>
   118f0:	mov	r2, #0
   118f4:	add	r1, sp, #116	; 0x74
   118f8:	str	r2, [r0]
   118fc:	mov	r0, r8
   11900:	bl	10f0c <strtoumax@plt>
   11904:	mov	sl, r0
   11908:	mov	fp, r1
   1190c:	mov	r0, r8
   11910:	ldr	r1, [sp, #116]	; 0x74
   11914:	bl	11f20 <putchar_unlocked@plt+0xf78>
   11918:	b	1180c <putchar_unlocked@plt+0x864>
   1191c:	ldr	r1, [sp, #20]
   11920:	b	118c8 <putchar_unlocked@plt+0x920>
   11924:	cmp	r3, #0
   11928:	moveq	r2, sl
   1192c:	moveq	r3, fp
   11930:	beq	118c4 <putchar_unlocked@plt+0x91c>
   11934:	strd	sl, [sp]
   11938:	b	118d8 <putchar_unlocked@plt+0x930>
   1193c:	ldrb	r2, [r8]
   11940:	cmp	r2, #39	; 0x27
   11944:	cmpne	r2, #34	; 0x22
   11948:	bne	119c8 <putchar_unlocked@plt+0xa20>
   1194c:	ldrb	r2, [r8, #1]
   11950:	cmp	r2, #0
   11954:	beq	119c8 <putchar_unlocked@plt+0xa20>
   11958:	vmov	s15, r2
   1195c:	ldrb	r2, [r8, #2]
   11960:	cmp	r2, #0
   11964:	vcvt.f64.u32	d8, s15
   11968:	beq	119a0 <putchar_unlocked@plt+0x9f8>
   1196c:	ldr	r2, [pc, #304]	; 11aa4 <putchar_unlocked@plt+0xafc>
   11970:	ldrb	r5, [r2, #4]
   11974:	cmp	r5, #0
   11978:	bne	119a0 <putchar_unlocked@plt+0x9f8>
   1197c:	mov	r2, #5
   11980:	ldr	r1, [pc, #360]	; 11af0 <putchar_unlocked@plt+0xb48>
   11984:	mov	r0, r5
   11988:	bl	10dbc <dcgettext@plt>
   1198c:	add	r3, r8, #2
   11990:	mov	r1, r5
   11994:	mov	r2, r0
   11998:	mov	r0, r5
   1199c:	bl	10e34 <error@plt>
   119a0:	ldr	r3, [sp, #24]
   119a4:	cmp	r3, #0
   119a8:	ldr	r3, [sp, #16]
   119ac:	bne	11a04 <putchar_unlocked@plt+0xa5c>
   119b0:	cmp	r3, #0
   119b4:	vmov	r2, r3, d8
   119b8:	bne	119f4 <putchar_unlocked@plt+0xa4c>
   119bc:	mov	r0, r9
   119c0:	bl	14914 <putchar_unlocked@plt+0x396c>
   119c4:	b	11784 <putchar_unlocked@plt+0x7dc>
   119c8:	bl	10ed0 <__errno_location@plt>
   119cc:	mov	r2, #0
   119d0:	add	r1, sp, #116	; 0x74
   119d4:	str	r2, [r0]
   119d8:	mov	r0, r8
   119dc:	bl	1232c <putchar_unlocked@plt+0x1384>
   119e0:	ldr	r1, [sp, #116]	; 0x74
   119e4:	mov	r0, r8
   119e8:	vmov.f64	d8, d0
   119ec:	bl	11f20 <putchar_unlocked@plt+0xf78>
   119f0:	b	119a0 <putchar_unlocked@plt+0x9f8>
   119f4:	ldr	r1, [sp, #20]
   119f8:	mov	r0, r9
   119fc:	bl	14914 <putchar_unlocked@plt+0x396c>
   11a00:	b	11784 <putchar_unlocked@plt+0x7dc>
   11a04:	cmp	r3, #0
   11a08:	vmoveq	r2, r3, d8
   11a0c:	ldreq	r1, [sp, #12]
   11a10:	beq	119f8 <putchar_unlocked@plt+0xa50>
   11a14:	vstr	d8, [sp]
   11a18:	ldr	r2, [sp, #20]
   11a1c:	ldr	r1, [sp, #12]
   11a20:	mov	r0, r9
   11a24:	bl	14914 <putchar_unlocked@plt+0x396c>
   11a28:	b	11784 <putchar_unlocked@plt+0x7dc>
   11a2c:	ldr	r3, [sp, #24]
   11a30:	ldrb	r2, [r8]
   11a34:	cmp	r3, #0
   11a38:	moveq	r1, r2
   11a3c:	beq	118b0 <putchar_unlocked@plt+0x908>
   11a40:	ldr	r1, [sp, #12]
   11a44:	b	11a50 <putchar_unlocked@plt+0xaa8>
   11a48:	ldr	r1, [sp, #20]
   11a4c:	mov	r2, r8
   11a50:	mov	r0, r9
   11a54:	bl	14914 <putchar_unlocked@plt+0x396c>
   11a58:	b	11784 <putchar_unlocked@plt+0x7dc>
   11a5c:	cmp	r3, #0
   11a60:	moveq	r2, r8
   11a64:	beq	11a40 <putchar_unlocked@plt+0xa98>
   11a68:	mov	r3, r8
   11a6c:	ldr	r2, [sp, #20]
   11a70:	ldr	r1, [sp, #12]
   11a74:	mov	r0, r9
   11a78:	bl	14914 <putchar_unlocked@plt+0x396c>
   11a7c:	b	11784 <putchar_unlocked@plt+0x7dc>
   11a80:	mov	r1, #0
   11a84:	mov	r0, fp
   11a88:	bl	11c1c <putchar_unlocked@plt+0xc74>
   11a8c:	add	r3, fp, r0
   11a90:	str	r3, [sp, #28]
   11a94:	b	111c8 <putchar_unlocked@plt+0x220>
   11a98:			; <UNDEFINED> instruction: 0x000155b6
   11a9c:	andeq	r5, r1, r7, asr #23
   11aa0:	andeq	r5, r1, lr, lsl fp
   11aa4:	andeq	r7, r2, ip, asr r1
   11aa8:	andeq	r2, r1, r4, asr #7
   11aac:	ldrdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   11ab0:	andeq	r5, r1, pc, ror #23
   11ab4:	strdeq	r5, [r1], -r6
   11ab8:	andeq	r5, r1, r0, lsl #24
   11abc:	andeq	r7, r2, r4, asr r1
   11ac0:	andeq	r7, r2, r0, lsl #2
   11ac4:	andeq	r5, r1, sl, lsl fp
   11ac8:	andeq	r5, r1, pc, lsl #10
   11acc:	andeq	r5, r1, r0, lsl ip
   11ad0:	andeq	r5, r1, r3, lsl ip
   11ad4:	andeq	r5, r1, r8, ror ip
   11ad8:	andeq	r5, r1, r3, lsr #24
   11adc:	andeq	r5, r1, fp, lsr ip
   11ae0:	andeq	r1, r4, r5
   11ae4:	andeq	r5, r1, r1, asr ip
   11ae8:	andeq	r5, r1, r5, asr #23
   11aec:	andeq	r5, r1, r1, asr #23
   11af0:	andeq	r5, r1, r6, asr #9
   11af4:	mov	fp, #0
   11af8:	mov	lr, #0
   11afc:	pop	{r1}		; (ldr r1, [sp], #4)
   11b00:	mov	r2, sp
   11b04:	push	{r2}		; (str r2, [sp, #-4]!)
   11b08:	push	{r0}		; (str r0, [sp, #-4]!)
   11b0c:	ldr	ip, [pc, #16]	; 11b24 <putchar_unlocked@plt+0xb7c>
   11b10:	push	{ip}		; (str ip, [sp, #-4]!)
   11b14:	ldr	r0, [pc, #12]	; 11b28 <putchar_unlocked@plt+0xb80>
   11b18:	ldr	r3, [pc, #12]	; 11b2c <putchar_unlocked@plt+0xb84>
   11b1c:	bl	10e64 <__libc_start_main@plt>
   11b20:	bl	10f9c <abort@plt>
   11b24:	andeq	r5, r1, ip, asr #7
   11b28:			; <UNDEFINED> instruction: 0x00010fb8
   11b2c:	andeq	r5, r1, ip, ror #6
   11b30:	ldr	r3, [pc, #20]	; 11b4c <putchar_unlocked@plt+0xba4>
   11b34:	ldr	r2, [pc, #20]	; 11b50 <putchar_unlocked@plt+0xba8>
   11b38:	add	r3, pc, r3
   11b3c:	ldr	r2, [r3, r2]
   11b40:	cmp	r2, #0
   11b44:	bxeq	lr
   11b48:	b	10e88 <__gmon_start__@plt>
   11b4c:	andeq	r5, r1, r0, asr #9
   11b50:	strdeq	r0, [r0], -r4
   11b54:	ldr	r3, [pc, #28]	; 11b78 <putchar_unlocked@plt+0xbd0>
   11b58:	ldr	r0, [pc, #28]	; 11b7c <putchar_unlocked@plt+0xbd4>
   11b5c:	sub	r3, r3, r0
   11b60:	cmp	r3, #6
   11b64:	bxls	lr
   11b68:	ldr	r3, [pc, #16]	; 11b80 <putchar_unlocked@plt+0xbd8>
   11b6c:	cmp	r3, #0
   11b70:	bxeq	lr
   11b74:	bx	r3
   11b78:	andeq	r7, r2, fp, asr #2
   11b7c:	andeq	r7, r2, r8, asr #2
   11b80:	andeq	r0, r0, r0
   11b84:	ldr	r1, [pc, #36]	; 11bb0 <putchar_unlocked@plt+0xc08>
   11b88:	ldr	r0, [pc, #36]	; 11bb4 <putchar_unlocked@plt+0xc0c>
   11b8c:	sub	r1, r1, r0
   11b90:	asr	r1, r1, #2
   11b94:	add	r1, r1, r1, lsr #31
   11b98:	asrs	r1, r1, #1
   11b9c:	bxeq	lr
   11ba0:	ldr	r3, [pc, #16]	; 11bb8 <putchar_unlocked@plt+0xc10>
   11ba4:	cmp	r3, #0
   11ba8:	bxeq	lr
   11bac:	bx	r3
   11bb0:	andeq	r7, r2, r8, asr #2
   11bb4:	andeq	r7, r2, r8, asr #2
   11bb8:	andeq	r0, r0, r0
   11bbc:	push	{r4, lr}
   11bc0:	ldr	r4, [pc, #24]	; 11be0 <putchar_unlocked@plt+0xc38>
   11bc4:	ldrb	r3, [r4]
   11bc8:	cmp	r3, #0
   11bcc:	popne	{r4, pc}
   11bd0:	bl	11b54 <putchar_unlocked@plt+0xbac>
   11bd4:	mov	r3, #1
   11bd8:	strb	r3, [r4]
   11bdc:	pop	{r4, pc}
   11be0:	andeq	r7, r2, r8, asr r1
   11be4:	ldr	r0, [pc, #40]	; 11c14 <putchar_unlocked@plt+0xc6c>
   11be8:	ldr	r3, [r0]
   11bec:	cmp	r3, #0
   11bf0:	bne	11bf8 <putchar_unlocked@plt+0xc50>
   11bf4:	b	11b84 <putchar_unlocked@plt+0xbdc>
   11bf8:	ldr	r3, [pc, #24]	; 11c18 <putchar_unlocked@plt+0xc70>
   11bfc:	cmp	r3, #0
   11c00:	beq	11bf4 <putchar_unlocked@plt+0xc4c>
   11c04:	push	{r4, lr}
   11c08:	blx	r3
   11c0c:	pop	{r4, lr}
   11c10:	b	11b84 <putchar_unlocked@plt+0xbdc>
   11c14:	andeq	r6, r2, r4, lsl pc
   11c18:	andeq	r0, r0, r0
   11c1c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11c20:	mov	r7, r0
   11c24:	ldrb	r6, [r0, #1]
   11c28:	cmp	r6, #120	; 0x78
   11c2c:	bne	11cd4 <putchar_unlocked@plt+0xd2c>
   11c30:	bl	10ea0 <__ctype_b_loc@plt>
   11c34:	mov	r2, #0
   11c38:	add	r1, r7, #2
   11c3c:	ldr	lr, [r0]
   11c40:	mov	r0, r2
   11c44:	ldrb	r3, [r1]
   11c48:	mov	r4, r1
   11c4c:	add	r1, r1, #1
   11c50:	lsl	ip, r3, #1
   11c54:	ldrh	ip, [lr, ip]
   11c58:	tst	ip, #4096	; 0x1000
   11c5c:	bne	11c88 <putchar_unlocked@plt+0xce0>
   11c60:	cmp	r2, #0
   11c64:	bne	11cc0 <putchar_unlocked@plt+0xd18>
   11c68:	mov	r2, #5
   11c6c:	ldr	r1, [pc, #668]	; 11f10 <putchar_unlocked@plt+0xf68>
   11c70:	mov	r0, #0
   11c74:	bl	10dbc <dcgettext@plt>
   11c78:	mov	r1, #0
   11c7c:	mov	r2, r0
   11c80:	mov	r0, #1
   11c84:	bl	10e34 <error@plt>
   11c88:	sub	ip, r3, #97	; 0x61
   11c8c:	cmp	ip, #5
   11c90:	lsl	r0, r0, #4
   11c94:	subls	r3, r3, #87	; 0x57
   11c98:	bls	11cac <putchar_unlocked@plt+0xd04>
   11c9c:	sub	ip, r3, #65	; 0x41
   11ca0:	cmp	ip, #5
   11ca4:	subls	r3, r3, #55	; 0x37
   11ca8:	subhi	r3, r3, #48	; 0x30
   11cac:	add	r2, r2, #1
   11cb0:	cmp	r2, #2
   11cb4:	add	r0, r3, r0
   11cb8:	mov	r4, r1
   11cbc:	bne	11c44 <putchar_unlocked@plt+0xc9c>
   11cc0:	bl	10fa8 <putchar_unlocked@plt>
   11cc4:	sub	r0, r4, r7
   11cc8:	sub	r0, r0, #1
   11ccc:	add	sp, sp, #8
   11cd0:	pop	{r4, r5, r6, r7, r8, pc}
   11cd4:	sub	r3, r6, #48	; 0x30
   11cd8:	cmp	r3, #7
   11cdc:	add	r4, r0, #1
   11ce0:	bhi	11d28 <putchar_unlocked@plt+0xd80>
   11ce4:	cmp	r6, #48	; 0x30
   11ce8:	movne	r6, #0
   11cec:	andeq	r6, r1, #1
   11cf0:	add	r6, r4, r6
   11cf4:	add	r1, r6, #3
   11cf8:	mov	r0, #0
   11cfc:	mov	r4, r6
   11d00:	ldrb	r3, [r6], #1
   11d04:	sub	r3, r3, #48	; 0x30
   11d08:	uxtb	r2, r3
   11d0c:	cmp	r2, #7
   11d10:	bhi	11cc0 <putchar_unlocked@plt+0xd18>
   11d14:	cmp	r1, r6
   11d18:	add	r0, r3, r0, lsl #3
   11d1c:	mov	r4, r6
   11d20:	bne	11cfc <putchar_unlocked@plt+0xd54>
   11d24:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11d28:	cmp	r6, #0
   11d2c:	beq	11e00 <putchar_unlocked@plt+0xe58>
   11d30:	mov	r1, r6
   11d34:	ldr	r0, [pc, #472]	; 11f14 <putchar_unlocked@plt+0xf6c>
   11d38:	bl	10ec4 <strchr@plt>
   11d3c:	cmp	r0, #0
   11d40:	beq	11e00 <putchar_unlocked@plt+0xe58>
   11d44:	sub	r3, r6, #97	; 0x61
   11d48:	add	r4, r7, #2
   11d4c:	cmp	r3, #21
   11d50:	ldrls	pc, [pc, r3, lsl #2]
   11d54:	b	11df8 <putchar_unlocked@plt+0xe50>
   11d58:			; <UNDEFINED> instruction: 0x00011db0
   11d5c:			; <UNDEFINED> instruction: 0x00011db8
   11d60:	andeq	r1, r1, r0, asr #27
   11d64:	strdeq	r1, [r1], -r8
   11d68:	andeq	r1, r1, r8, asr #27
   11d6c:	ldrdeq	r1, [r1], -r0
   11d70:	strdeq	r1, [r1], -r8
   11d74:	strdeq	r1, [r1], -r8
   11d78:	strdeq	r1, [r1], -r8
   11d7c:	strdeq	r1, [r1], -r8
   11d80:	strdeq	r1, [r1], -r8
   11d84:	strdeq	r1, [r1], -r8
   11d88:	strdeq	r1, [r1], -r8
   11d8c:	ldrdeq	r1, [r1], -r8
   11d90:	strdeq	r1, [r1], -r8
   11d94:	strdeq	r1, [r1], -r8
   11d98:	strdeq	r1, [r1], -r8
   11d9c:	andeq	r1, r1, r0, ror #27
   11da0:	strdeq	r1, [r1], -r8
   11da4:	andeq	r1, r1, r8, ror #27
   11da8:	strdeq	r1, [r1], -r8
   11dac:	strdeq	r1, [r1], -r0
   11db0:	mov	r0, #7
   11db4:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11db8:	mov	r0, #8
   11dbc:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11dc0:	mov	r0, #0
   11dc4:	bl	10eac <exit@plt>
   11dc8:	mov	r0, #27
   11dcc:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11dd0:	mov	r0, #12
   11dd4:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11dd8:	mov	r0, #10
   11ddc:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11de0:	mov	r0, #13
   11de4:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11de8:	mov	r0, #9
   11dec:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11df0:	mov	r0, #11
   11df4:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11df8:	mov	r0, r6
   11dfc:	b	11cc0 <putchar_unlocked@plt+0xd18>
   11e00:	and	r3, r6, #223	; 0xdf
   11e04:	cmp	r3, #85	; 0x55
   11e08:	bne	11ef0 <putchar_unlocked@plt+0xf48>
   11e0c:	cmp	r6, #117	; 0x75
   11e10:	moveq	r8, #4
   11e14:	movne	r8, #8
   11e18:	bl	10ea0 <__ctype_b_loc@plt>
   11e1c:	add	r4, r7, #2
   11e20:	mov	r2, r4
   11e24:	add	r1, r4, r8
   11e28:	mov	r5, #0
   11e2c:	ldr	r0, [r0]
   11e30:	ldrb	r3, [r2], #1
   11e34:	lsl	ip, r3, #1
   11e38:	ldrh	ip, [r0, ip]
   11e3c:	tst	ip, #4096	; 0x1000
   11e40:	beq	11c68 <putchar_unlocked@plt+0xcc0>
   11e44:	sub	ip, r3, #97	; 0x61
   11e48:	cmp	ip, #5
   11e4c:	lsl	r5, r5, #4
   11e50:	subls	r3, r3, #87	; 0x57
   11e54:	bls	11e68 <putchar_unlocked@plt+0xec0>
   11e58:	sub	ip, r3, #65	; 0x41
   11e5c:	cmp	ip, #5
   11e60:	subls	r3, r3, #55	; 0x37
   11e64:	subhi	r3, r3, #48	; 0x30
   11e68:	cmp	r1, r2
   11e6c:	add	r5, r3, r5
   11e70:	mov	r4, r2
   11e74:	bne	11e30 <putchar_unlocked@plt+0xe88>
   11e78:	cmp	r5, #159	; 0x9f
   11e7c:	movhi	r3, #0
   11e80:	movls	r3, #1
   11e84:	cmp	r5, #36	; 0x24
   11e88:	moveq	r3, #0
   11e8c:	cmp	r3, #0
   11e90:	beq	11ea0 <putchar_unlocked@plt+0xef8>
   11e94:	bic	r3, r5, #32
   11e98:	cmp	r3, #64	; 0x40
   11e9c:	bne	11eac <putchar_unlocked@plt+0xf04>
   11ea0:	sub	r3, r5, #55296	; 0xd800
   11ea4:	cmp	r3, #2048	; 0x800
   11ea8:	bcs	11ed8 <putchar_unlocked@plt+0xf30>
   11eac:	mov	r2, #5
   11eb0:	ldr	r1, [pc, #96]	; 11f18 <putchar_unlocked@plt+0xf70>
   11eb4:	mov	r0, #0
   11eb8:	bl	10dbc <dcgettext@plt>
   11ebc:	str	r5, [sp, #4]
   11ec0:	str	r8, [sp]
   11ec4:	mov	r3, r6
   11ec8:	mov	r1, #0
   11ecc:	mov	r2, r0
   11ed0:	mov	r0, #1
   11ed4:	bl	10e34 <error@plt>
   11ed8:	ldr	r3, [pc, #60]	; 11f1c <putchar_unlocked@plt+0xf74>
   11edc:	mov	r2, #0
   11ee0:	mov	r1, r5
   11ee4:	ldr	r0, [r3]
   11ee8:	bl	13dc8 <putchar_unlocked@plt+0x2e20>
   11eec:	b	11cc4 <putchar_unlocked@plt+0xd1c>
   11ef0:	mov	r0, #92	; 0x5c
   11ef4:	bl	10fa8 <putchar_unlocked@plt>
   11ef8:	ldrb	r0, [r7, #1]
   11efc:	cmp	r0, #0
   11f00:	beq	11cc4 <putchar_unlocked@plt+0xd1c>
   11f04:	bl	10fa8 <putchar_unlocked@plt>
   11f08:	add	r4, r7, #2
   11f0c:	b	11cc4 <putchar_unlocked@plt+0xd1c>
   11f10:	andeq	r5, r1, ip, lsr #8
   11f14:	andeq	r5, r1, r1, asr r4
   11f18:	andeq	r5, r1, sp, asr r4
   11f1c:	andeq	r7, r2, r4, asr r1
   11f20:	push	{r4, r5, r6, lr}
   11f24:	mov	r5, r0
   11f28:	mov	r6, r1
   11f2c:	bl	10ed0 <__errno_location@plt>
   11f30:	ldr	r4, [r0]
   11f34:	cmp	r4, #0
   11f38:	beq	11f68 <putchar_unlocked@plt+0xfc0>
   11f3c:	mov	r0, r5
   11f40:	bl	13b2c <putchar_unlocked@plt+0x2b84>
   11f44:	ldr	r2, [pc, #96]	; 11fac <putchar_unlocked@plt+0x1004>
   11f48:	mov	r1, r4
   11f4c:	mov	r3, r0
   11f50:	mov	r0, #0
   11f54:	bl	10e34 <error@plt>
   11f58:	ldr	r3, [pc, #80]	; 11fb0 <putchar_unlocked@plt+0x1008>
   11f5c:	mov	r2, #1
   11f60:	str	r2, [r3]
   11f64:	pop	{r4, r5, r6, pc}
   11f68:	ldrb	r3, [r6]
   11f6c:	cmp	r3, #0
   11f70:	popeq	{r4, r5, r6, pc}
   11f74:	cmp	r5, r6
   11f78:	mov	r2, #5
   11f7c:	ldreq	r1, [pc, #48]	; 11fb4 <putchar_unlocked@plt+0x100c>
   11f80:	ldrne	r1, [pc, #48]	; 11fb8 <putchar_unlocked@plt+0x1010>
   11f84:	mov	r0, r4
   11f88:	bl	10dbc <dcgettext@plt>
   11f8c:	mov	r6, r0
   11f90:	mov	r0, r5
   11f94:	bl	13b2c <putchar_unlocked@plt+0x2b84>
   11f98:	mov	r2, r6
   11f9c:	mov	r1, r4
   11fa0:	mov	r3, r0
   11fa4:	mov	r0, r4
   11fa8:	b	11f54 <putchar_unlocked@plt+0xfac>
   11fac:	andeq	r5, r1, r8, lsr ip
   11fb0:	andeq	r7, r2, ip, asr r1
   11fb4:	andeq	r5, r1, r6, lsl #9
   11fb8:	andeq	r5, r1, r3, lsr #9
   11fbc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11fc0:	mov	r4, r0
   11fc4:	ldrb	r3, [r0]
   11fc8:	cmp	r3, #39	; 0x27
   11fcc:	cmpne	r3, #34	; 0x22
   11fd0:	bne	12038 <putchar_unlocked@plt+0x1090>
   11fd4:	ldrb	r6, [r0, #1]
   11fd8:	cmp	r6, #0
   11fdc:	beq	12038 <putchar_unlocked@plt+0x1090>
   11fe0:	ldrb	r3, [r0, #2]
   11fe4:	uxtb	r6, r6
   11fe8:	mov	r7, #0
   11fec:	cmp	r3, #0
   11ff0:	beq	12028 <putchar_unlocked@plt+0x1080>
   11ff4:	ldr	r3, [pc, #108]	; 12068 <putchar_unlocked@plt+0x10c0>
   11ff8:	ldrb	r5, [r3, #4]
   11ffc:	cmp	r5, #0
   12000:	bne	12028 <putchar_unlocked@plt+0x1080>
   12004:	mov	r2, #5
   12008:	ldr	r1, [pc, #92]	; 1206c <putchar_unlocked@plt+0x10c4>
   1200c:	mov	r0, r5
   12010:	bl	10dbc <dcgettext@plt>
   12014:	add	r3, r4, #2
   12018:	mov	r1, r5
   1201c:	mov	r2, r0
   12020:	mov	r0, r5
   12024:	bl	10e34 <error@plt>
   12028:	mov	r0, r6
   1202c:	mov	r1, r7
   12030:	add	sp, sp, #12
   12034:	pop	{r4, r5, r6, r7, pc}
   12038:	bl	10ed0 <__errno_location@plt>
   1203c:	mov	r2, #0
   12040:	add	r1, sp, #4
   12044:	str	r2, [r0]
   12048:	mov	r0, r4
   1204c:	bl	10f24 <strtoimax@plt>
   12050:	mov	r6, r0
   12054:	mov	r7, r1
   12058:	mov	r0, r4
   1205c:	ldr	r1, [sp, #4]
   12060:	bl	11f20 <putchar_unlocked@plt+0xf78>
   12064:	b	12028 <putchar_unlocked@plt+0x1080>
   12068:	andeq	r7, r2, ip, asr r1
   1206c:	andeq	r5, r1, r6, asr #9
   12070:	subs	r4, r0, #0
   12074:	push	{r7, lr}
   12078:	sub	sp, sp, #56	; 0x38
   1207c:	ldr	r5, [pc, #584]	; 122cc <putchar_unlocked@plt+0x1324>
   12080:	beq	120b8 <putchar_unlocked@plt+0x1110>
   12084:	ldr	r3, [pc, #580]	; 122d0 <putchar_unlocked@plt+0x1328>
   12088:	mov	r2, #5
   1208c:	ldr	r1, [pc, #576]	; 122d4 <putchar_unlocked@plt+0x132c>
   12090:	mov	r0, #0
   12094:	ldr	r6, [r3]
   12098:	bl	10dbc <dcgettext@plt>
   1209c:	ldr	r3, [r5]
   120a0:	mov	r1, #1
   120a4:	mov	r2, r0
   120a8:	mov	r0, r6
   120ac:	bl	10f18 <__fprintf_chk@plt>
   120b0:	mov	r0, r4
   120b4:	bl	10eac <exit@plt>
   120b8:	mov	r2, #5
   120bc:	ldr	r1, [pc, #532]	; 122d8 <putchar_unlocked@plt+0x1330>
   120c0:	bl	10dbc <dcgettext@plt>
   120c4:	ldr	r3, [r5]
   120c8:	ldr	r5, [pc, #524]	; 122dc <putchar_unlocked@plt+0x1334>
   120cc:	mov	r2, r3
   120d0:	ldr	r8, [pc, #520]	; 122e0 <putchar_unlocked@plt+0x1338>
   120d4:	mov	r6, r4
   120d8:	mov	r1, r0
   120dc:	mov	r0, #1
   120e0:	bl	10ef4 <__printf_chk@plt>
   120e4:	mov	r2, #5
   120e8:	ldr	r1, [pc, #500]	; 122e4 <putchar_unlocked@plt+0x133c>
   120ec:	mov	r0, r4
   120f0:	bl	10dbc <dcgettext@plt>
   120f4:	ldr	r1, [r5]
   120f8:	bl	10d08 <fputs_unlocked@plt>
   120fc:	mov	r2, #5
   12100:	ldr	r1, [pc, #480]	; 122e8 <putchar_unlocked@plt+0x1340>
   12104:	mov	r0, r4
   12108:	bl	10dbc <dcgettext@plt>
   1210c:	ldr	r1, [r5]
   12110:	bl	10d08 <fputs_unlocked@plt>
   12114:	mov	r2, #5
   12118:	ldr	r1, [pc, #460]	; 122ec <putchar_unlocked@plt+0x1344>
   1211c:	mov	r0, r4
   12120:	bl	10dbc <dcgettext@plt>
   12124:	ldr	r1, [r5]
   12128:	bl	10d08 <fputs_unlocked@plt>
   1212c:	mov	r2, #5
   12130:	ldr	r1, [pc, #440]	; 122f0 <putchar_unlocked@plt+0x1348>
   12134:	mov	r0, r4
   12138:	bl	10dbc <dcgettext@plt>
   1213c:	ldr	r1, [r5]
   12140:	bl	10d08 <fputs_unlocked@plt>
   12144:	mov	r2, #5
   12148:	ldr	r1, [pc, #420]	; 122f4 <putchar_unlocked@plt+0x134c>
   1214c:	mov	r0, r4
   12150:	bl	10dbc <dcgettext@plt>
   12154:	ldr	r1, [r5]
   12158:	bl	10d08 <fputs_unlocked@plt>
   1215c:	mov	r2, #5
   12160:	ldr	r1, [pc, #400]	; 122f8 <putchar_unlocked@plt+0x1350>
   12164:	mov	r0, r4
   12168:	bl	10dbc <dcgettext@plt>
   1216c:	ldr	r1, [r5]
   12170:	bl	10d08 <fputs_unlocked@plt>
   12174:	mov	r2, #5
   12178:	ldr	r1, [pc, #380]	; 122fc <putchar_unlocked@plt+0x1354>
   1217c:	mov	r0, r4
   12180:	bl	10dbc <dcgettext@plt>
   12184:	ldr	r1, [r5]
   12188:	bl	10d08 <fputs_unlocked@plt>
   1218c:	mov	r2, #5
   12190:	ldr	r1, [pc, #360]	; 12300 <putchar_unlocked@plt+0x1358>
   12194:	mov	r0, r4
   12198:	bl	10dbc <dcgettext@plt>
   1219c:	ldr	r2, [pc, #316]	; 122e0 <putchar_unlocked@plt+0x1338>
   121a0:	mov	r1, r0
   121a4:	mov	r0, #1
   121a8:	bl	10ef4 <__printf_chk@plt>
   121ac:	ldr	lr, [pc, #336]	; 12304 <putchar_unlocked@plt+0x135c>
   121b0:	mov	ip, sp
   121b4:	ldm	lr!, {r0, r1, r2, r3}
   121b8:	stmia	ip!, {r0, r1, r2, r3}
   121bc:	ldm	lr!, {r0, r1, r2, r3}
   121c0:	stmia	ip!, {r0, r1, r2, r3}
   121c4:	ldm	lr!, {r0, r1, r2, r3}
   121c8:	stmia	ip!, {r0, r1, r2, r3}
   121cc:	ldm	lr, {r0, r1}
   121d0:	stm	ip, {r0, r1}
   121d4:	ldr	r1, [sp, r6]
   121d8:	add	r7, sp, r6
   121dc:	cmp	r1, #0
   121e0:	bne	12284 <putchar_unlocked@plt+0x12dc>
   121e4:	ldr	r6, [r7, #4]
   121e8:	ldr	r7, [pc, #240]	; 122e0 <putchar_unlocked@plt+0x1338>
   121ec:	cmp	r6, #0
   121f0:	mov	r2, #5
   121f4:	ldr	r1, [pc, #268]	; 12308 <putchar_unlocked@plt+0x1360>
   121f8:	mov	r0, #0
   121fc:	moveq	r6, r7
   12200:	bl	10dbc <dcgettext@plt>
   12204:	ldr	r3, [pc, #256]	; 1230c <putchar_unlocked@plt+0x1364>
   12208:	ldr	r2, [pc, #256]	; 12310 <putchar_unlocked@plt+0x1368>
   1220c:	mov	r1, r0
   12210:	mov	r0, #1
   12214:	bl	10ef4 <__printf_chk@plt>
   12218:	mov	r1, #0
   1221c:	mov	r0, #5
   12220:	bl	10f48 <setlocale@plt>
   12224:	cmp	r0, #0
   12228:	bne	1229c <putchar_unlocked@plt+0x12f4>
   1222c:	mov	r2, #5
   12230:	ldr	r1, [pc, #220]	; 12314 <putchar_unlocked@plt+0x136c>
   12234:	mov	r0, #0
   12238:	bl	10dbc <dcgettext@plt>
   1223c:	ldr	r3, [pc, #156]	; 122e0 <putchar_unlocked@plt+0x1338>
   12240:	ldr	r2, [pc, #196]	; 1230c <putchar_unlocked@plt+0x1364>
   12244:	mov	r1, r0
   12248:	mov	r0, #1
   1224c:	bl	10ef4 <__printf_chk@plt>
   12250:	mov	r2, #5
   12254:	ldr	r1, [pc, #188]	; 12318 <putchar_unlocked@plt+0x1370>
   12258:	mov	r0, #0
   1225c:	bl	10dbc <dcgettext@plt>
   12260:	ldr	r2, [pc, #180]	; 1231c <putchar_unlocked@plt+0x1374>
   12264:	cmp	r6, r7
   12268:	ldr	r3, [pc, #176]	; 12320 <putchar_unlocked@plt+0x1378>
   1226c:	moveq	r3, r2
   12270:	mov	r2, r6
   12274:	mov	r1, r0
   12278:	mov	r0, #1
   1227c:	bl	10ef4 <__printf_chk@plt>
   12280:	b	120b0 <putchar_unlocked@plt+0x1108>
   12284:	mov	r0, r8
   12288:	bl	10d38 <strcmp@plt>
   1228c:	add	r6, r6, #8
   12290:	cmp	r0, #0
   12294:	bne	121d4 <putchar_unlocked@plt+0x122c>
   12298:	b	121e4 <putchar_unlocked@plt+0x123c>
   1229c:	mov	r2, #3
   122a0:	ldr	r1, [pc, #124]	; 12324 <putchar_unlocked@plt+0x137c>
   122a4:	bl	10f90 <strncmp@plt>
   122a8:	cmp	r0, #0
   122ac:	beq	1222c <putchar_unlocked@plt+0x1284>
   122b0:	mov	r2, #5
   122b4:	ldr	r1, [pc, #108]	; 12328 <putchar_unlocked@plt+0x1380>
   122b8:	mov	r0, #0
   122bc:	bl	10dbc <dcgettext@plt>
   122c0:	ldr	r1, [r5]
   122c4:	bl	10d08 <fputs_unlocked@plt>
   122c8:	b	1222c <putchar_unlocked@plt+0x1284>
   122cc:	andeq	r7, r2, ip, ror #2
   122d0:	andeq	r7, r2, r0, asr r1
   122d4:	andeq	r5, r1, r6, lsl r5
   122d8:	andeq	r5, r1, sp, lsr r5
   122dc:	andeq	r7, r2, r4, asr r1
   122e0:	andeq	r5, r1, pc, lsl #10
   122e4:	andeq	r5, r1, lr, ror #10
   122e8:			; <UNDEFINED> instruction: 0x000155b7
   122ec:	andeq	r5, r1, r4, ror #11
   122f0:	andeq	r5, r1, sl, lsl r6
   122f4:	andeq	r5, r1, fp, ror r6
   122f8:	andeq	r5, r1, r0, ror #14
   122fc:	andeq	r5, r1, ip, asr r8
   12300:	andeq	r5, r1, ip, lsl sl
   12304:	strdeq	r5, [r1], -r4
   12308:	ldrdeq	r5, [r1], -fp
   1230c:	strdeq	r5, [r1], -r2
   12310:	andeq	r5, r1, sl, lsl fp
   12314:	andeq	r5, r1, r3, ror fp
   12318:	andeq	r5, r1, lr, lsl #23
   1231c:	andeq	r5, r1, r9, asr #25
   12320:			; <UNDEFINED> instruction: 0x000155b6
   12324:	andeq	r5, r1, r8, lsr #22
   12328:	andeq	r5, r1, ip, lsr #22
   1232c:	push	{r4, r5, r6, r7, lr}
   12330:	vpush	{d8}
   12334:	mov	r4, r1
   12338:	mov	r7, r0
   1233c:	sub	sp, sp, #12
   12340:	mov	r1, sp
   12344:	bl	10d8c <strtold@plt>
   12348:	ldr	r3, [sp]
   1234c:	ldrb	r3, [r3]
   12350:	cmp	r3, #0
   12354:	vmov.f64	d8, d0
   12358:	beq	12388 <putchar_unlocked@plt+0x13e0>
   1235c:	bl	10ed0 <__errno_location@plt>
   12360:	add	r1, sp, #4
   12364:	ldr	r6, [r0]
   12368:	mov	r5, r0
   1236c:	mov	r0, r7
   12370:	bl	14ab8 <putchar_unlocked@plt+0x3b10>
   12374:	ldm	sp, {r2, r3}
   12378:	cmp	r2, r3
   1237c:	strcc	r3, [sp]
   12380:	strcs	r6, [r5]
   12384:	vmovcc.f64	d8, d0
   12388:	cmp	r4, #0
   1238c:	vmov.f64	d0, d8
   12390:	ldrne	r3, [sp]
   12394:	strne	r3, [r4]
   12398:	add	sp, sp, #12
   1239c:	vpop	{d8}
   123a0:	pop	{r4, r5, r6, r7, pc}
   123a4:	ldr	r3, [pc, #4]	; 123b0 <putchar_unlocked@plt+0x1408>
   123a8:	str	r0, [r3]
   123ac:	bx	lr
   123b0:	andeq	r7, r2, r4, ror #2
   123b4:	ldr	r3, [pc, #4]	; 123c0 <putchar_unlocked@plt+0x1418>
   123b8:	strb	r0, [r3, #4]
   123bc:	bx	lr
   123c0:	andeq	r7, r2, r4, ror #2
   123c4:	ldr	r3, [pc, #192]	; 1248c <putchar_unlocked@plt+0x14e4>
   123c8:	push	{r0, r1, r4, r5, r6, lr}
   123cc:	ldr	r0, [r3]
   123d0:	bl	14b64 <putchar_unlocked@plt+0x3bbc>
   123d4:	cmp	r0, #0
   123d8:	beq	12470 <putchar_unlocked@plt+0x14c8>
   123dc:	ldr	r3, [pc, #172]	; 12490 <putchar_unlocked@plt+0x14e8>
   123e0:	mov	r4, r3
   123e4:	ldrb	r2, [r3, #4]
   123e8:	cmp	r2, #0
   123ec:	beq	12400 <putchar_unlocked@plt+0x1458>
   123f0:	bl	10ed0 <__errno_location@plt>
   123f4:	ldr	r3, [r0]
   123f8:	cmp	r3, #32
   123fc:	beq	12470 <putchar_unlocked@plt+0x14c8>
   12400:	mov	r2, #5
   12404:	ldr	r1, [pc, #136]	; 12494 <putchar_unlocked@plt+0x14ec>
   12408:	mov	r0, #0
   1240c:	bl	10dbc <dcgettext@plt>
   12410:	ldr	r4, [r4]
   12414:	cmp	r4, #0
   12418:	mov	r5, r0
   1241c:	beq	12454 <putchar_unlocked@plt+0x14ac>
   12420:	bl	10ed0 <__errno_location@plt>
   12424:	ldr	r6, [r0]
   12428:	mov	r0, r4
   1242c:	bl	139dc <putchar_unlocked@plt+0x2a34>
   12430:	str	r5, [sp]
   12434:	ldr	r2, [pc, #92]	; 12498 <putchar_unlocked@plt+0x14f0>
   12438:	mov	r1, r6
   1243c:	mov	r3, r0
   12440:	mov	r0, #0
   12444:	bl	10e34 <error@plt>
   12448:	ldr	r3, [pc, #76]	; 1249c <putchar_unlocked@plt+0x14f4>
   1244c:	ldr	r0, [r3]
   12450:	bl	10d68 <_exit@plt>
   12454:	bl	10ed0 <__errno_location@plt>
   12458:	mov	r3, r5
   1245c:	ldr	r2, [pc, #60]	; 124a0 <putchar_unlocked@plt+0x14f8>
   12460:	ldr	r1, [r0]
   12464:	mov	r0, r4
   12468:	bl	10e34 <error@plt>
   1246c:	b	12448 <putchar_unlocked@plt+0x14a0>
   12470:	ldr	r3, [pc, #44]	; 124a4 <putchar_unlocked@plt+0x14fc>
   12474:	ldr	r0, [r3]
   12478:	bl	14b64 <putchar_unlocked@plt+0x3bbc>
   1247c:	cmp	r0, #0
   12480:	bne	12448 <putchar_unlocked@plt+0x14a0>
   12484:	add	sp, sp, #8
   12488:	pop	{r4, r5, r6, pc}
   1248c:	andeq	r7, r2, r4, asr r1
   12490:	andeq	r7, r2, r4, ror #2
   12494:	andeq	r5, r1, fp, lsl sp
   12498:	andeq	r5, r1, r7, lsr #26
   1249c:	andeq	r7, r2, r4, lsl #2
   124a0:	andeq	r5, r1, r8, lsr ip
   124a4:	andeq	r7, r2, r0, asr r1
   124a8:	push	{r0, r1, r2, r4, r5, lr}
   124ac:	mov	r5, r0
   124b0:	bl	10ed0 <__errno_location@plt>
   124b4:	ldr	r3, [r0]
   124b8:	mov	r4, r0
   124bc:	str	r3, [sp]
   124c0:	str	r3, [sp, #4]
   124c4:	mov	r3, #0
   124c8:	str	r3, [r0]
   124cc:	mov	r0, r5
   124d0:	bl	10d50 <free@plt>
   124d4:	ldr	r3, [r4]
   124d8:	add	r2, sp, #8
   124dc:	cmp	r3, #0
   124e0:	moveq	r3, #4
   124e4:	movne	r3, #0
   124e8:	add	r3, r2, r3
   124ec:	ldr	r3, [r3, #-8]
   124f0:	str	r3, [r4]
   124f4:	add	sp, sp, #12
   124f8:	pop	{r4, r5, pc}
   124fc:	push	{r4, r5, r6, lr}
   12500:	subs	r5, r0, #0
   12504:	bne	1251c <putchar_unlocked@plt+0x1574>
   12508:	ldr	r3, [pc, #124]	; 1258c <putchar_unlocked@plt+0x15e4>
   1250c:	ldr	r0, [pc, #124]	; 12590 <putchar_unlocked@plt+0x15e8>
   12510:	ldr	r1, [r3]
   12514:	bl	10f84 <fputs@plt>
   12518:	bl	10f9c <abort@plt>
   1251c:	mov	r1, #47	; 0x2f
   12520:	bl	10f54 <strrchr@plt>
   12524:	cmp	r0, #0
   12528:	addne	r4, r0, #1
   1252c:	moveq	r4, r5
   12530:	sub	r3, r4, r5
   12534:	cmp	r3, #6
   12538:	ble	12578 <putchar_unlocked@plt+0x15d0>
   1253c:	mov	r2, #7
   12540:	ldr	r1, [pc, #76]	; 12594 <putchar_unlocked@plt+0x15ec>
   12544:	sub	r0, r4, #7
   12548:	bl	10f90 <strncmp@plt>
   1254c:	cmp	r0, #0
   12550:	bne	12578 <putchar_unlocked@plt+0x15d0>
   12554:	mov	r2, #3
   12558:	ldr	r1, [pc, #56]	; 12598 <putchar_unlocked@plt+0x15f0>
   1255c:	mov	r0, r4
   12560:	bl	10f90 <strncmp@plt>
   12564:	cmp	r0, #0
   12568:	movne	r5, r4
   1256c:	ldreq	r3, [pc, #40]	; 1259c <putchar_unlocked@plt+0x15f4>
   12570:	addeq	r5, r4, #3
   12574:	streq	r5, [r3]
   12578:	ldr	r3, [pc, #32]	; 125a0 <putchar_unlocked@plt+0x15f8>
   1257c:	str	r5, [r3]
   12580:	ldr	r3, [pc, #28]	; 125a4 <putchar_unlocked@plt+0x15fc>
   12584:	str	r5, [r3]
   12588:	pop	{r4, r5, r6, pc}
   1258c:	andeq	r7, r2, r0, asr r1
   12590:	andeq	r5, r1, lr, lsr #26
   12594:	andeq	r5, r1, r6, ror #26
   12598:	andeq	r5, r1, lr, ror #26
   1259c:	andeq	r7, r2, r8, asr #2
   125a0:	andeq	r7, r2, ip, ror #2
   125a4:	andeq	r7, r2, ip, asr #2
   125a8:	push	{r4, r5, r6, lr}
   125ac:	mov	r2, #48	; 0x30
   125b0:	mov	r5, r1
   125b4:	mov	r1, #0
   125b8:	mov	r4, r0
   125bc:	bl	10ee8 <memset@plt>
   125c0:	cmp	r5, #10
   125c4:	bne	125cc <putchar_unlocked@plt+0x1624>
   125c8:	bl	10f9c <abort@plt>
   125cc:	str	r5, [r4]
   125d0:	mov	r0, r4
   125d4:	pop	{r4, r5, r6, pc}
   125d8:	push	{r4, r5, r6, lr}
   125dc:	mov	r4, r0
   125e0:	mov	r5, r1
   125e4:	bl	14d60 <putchar_unlocked@plt+0x3db8>
   125e8:	ldrb	r3, [r0]
   125ec:	bic	r3, r3, #32
   125f0:	cmp	r3, #85	; 0x55
   125f4:	bne	12664 <putchar_unlocked@plt+0x16bc>
   125f8:	ldrb	r3, [r0, #1]
   125fc:	bic	r3, r3, #32
   12600:	cmp	r3, #84	; 0x54
   12604:	bne	1263c <putchar_unlocked@plt+0x1694>
   12608:	ldrb	r3, [r0, #2]
   1260c:	bic	r3, r3, #32
   12610:	cmp	r3, #70	; 0x46
   12614:	bne	1263c <putchar_unlocked@plt+0x1694>
   12618:	ldrb	r3, [r0, #3]
   1261c:	cmp	r3, #45	; 0x2d
   12620:	bne	1263c <putchar_unlocked@plt+0x1694>
   12624:	ldrb	r3, [r0, #4]
   12628:	cmp	r3, #56	; 0x38
   1262c:	bne	1263c <putchar_unlocked@plt+0x1694>
   12630:	ldrb	r3, [r0, #5]
   12634:	cmp	r3, #0
   12638:	beq	12650 <putchar_unlocked@plt+0x16a8>
   1263c:	ldr	r1, [pc, #144]	; 126d4 <putchar_unlocked@plt+0x172c>
   12640:	ldr	r0, [pc, #144]	; 126d8 <putchar_unlocked@plt+0x1730>
   12644:	cmp	r5, #9
   12648:	movne	r0, r1
   1264c:	pop	{r4, r5, r6, pc}
   12650:	ldrb	r3, [r4]
   12654:	ldr	r1, [pc, #128]	; 126dc <putchar_unlocked@plt+0x1734>
   12658:	ldr	r0, [pc, #128]	; 126e0 <putchar_unlocked@plt+0x1738>
   1265c:	cmp	r3, #96	; 0x60
   12660:	b	12648 <putchar_unlocked@plt+0x16a0>
   12664:	cmp	r3, #71	; 0x47
   12668:	bne	1263c <putchar_unlocked@plt+0x1694>
   1266c:	ldrb	r3, [r0, #1]
   12670:	bic	r3, r3, #32
   12674:	cmp	r3, #66	; 0x42
   12678:	bne	1263c <putchar_unlocked@plt+0x1694>
   1267c:	ldrb	r3, [r0, #2]
   12680:	cmp	r3, #49	; 0x31
   12684:	bne	1263c <putchar_unlocked@plt+0x1694>
   12688:	ldrb	r3, [r0, #3]
   1268c:	cmp	r3, #56	; 0x38
   12690:	bne	1263c <putchar_unlocked@plt+0x1694>
   12694:	ldrb	r3, [r0, #4]
   12698:	cmp	r3, #48	; 0x30
   1269c:	bne	1263c <putchar_unlocked@plt+0x1694>
   126a0:	ldrb	r3, [r0, #5]
   126a4:	cmp	r3, #51	; 0x33
   126a8:	bne	1263c <putchar_unlocked@plt+0x1694>
   126ac:	ldrb	r3, [r0, #6]
   126b0:	cmp	r3, #48	; 0x30
   126b4:	bne	1263c <putchar_unlocked@plt+0x1694>
   126b8:	ldrb	r3, [r0, #7]
   126bc:	cmp	r3, #0
   126c0:	bne	1263c <putchar_unlocked@plt+0x1694>
   126c4:	ldrb	r3, [r4]
   126c8:	ldr	r1, [pc, #20]	; 126e4 <putchar_unlocked@plt+0x173c>
   126cc:	ldr	r0, [pc, #20]	; 126e8 <putchar_unlocked@plt+0x1740>
   126d0:	b	1265c <putchar_unlocked@plt+0x16b4>
   126d4:	ldrdeq	r5, [r1], -r9
   126d8:	ldrdeq	r5, [r1], -r7
   126dc:	andeq	r5, r1, ip, asr #27
   126e0:	andeq	r5, r1, r8, asr #27
   126e4:	ldrdeq	r5, [r1], -r4
   126e8:	ldrdeq	r5, [r1], -r0
   126ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126f0:	sub	sp, sp, #108	; 0x6c
   126f4:	mov	r8, r0
   126f8:	str	r3, [sp, #36]	; 0x24
   126fc:	mov	r5, r1
   12700:	str	r2, [sp, #44]	; 0x2c
   12704:	ldr	sl, [sp, #144]	; 0x90
   12708:	bl	10e04 <__ctype_get_mb_cur_max@plt>
   1270c:	ldr	r3, [sp, #148]	; 0x94
   12710:	mov	r7, #0
   12714:	str	r7, [sp, #48]	; 0x30
   12718:	lsr	r6, r3, #1
   1271c:	and	r6, r6, #1
   12720:	mov	r3, #1
   12724:	str	r3, [sp, #72]	; 0x48
   12728:	str	r7, [sp, #24]
   1272c:	str	r7, [sp, #32]
   12730:	str	r7, [sp, #40]	; 0x28
   12734:	str	r7, [sp, #60]	; 0x3c
   12738:	str	r0, [sp, #76]	; 0x4c
   1273c:	cmp	sl, #10
   12740:	ldrls	pc, [pc, sl, lsl #2]
   12744:	b	12980 <putchar_unlocked@plt+0x19d8>
   12748:	andeq	r2, r1, r4, ror r7
   1274c:	andeq	r3, r1, r8, lsl #8
   12750:	andeq	r2, r1, ip, asr #18
   12754:	muleq	r1, r8, r9
   12758:	andeq	r2, r1, r8, lsr #18
   1275c:	andeq	r2, r1, r0, lsl #15
   12760:	andeq	r3, r1, r8, ror #7
   12764:	andeq	r2, r1, r4, lsl #19
   12768:	andeq	r2, r1, r8, ror r8
   1276c:	andeq	r2, r1, r8, ror r8
   12770:	andeq	r2, r1, r8, ror r8
   12774:	mov	r6, #0
   12778:	mov	r4, #0
   1277c:	b	127ac <putchar_unlocked@plt+0x1804>
   12780:	cmp	r6, #0
   12784:	bne	129a8 <putchar_unlocked@plt+0x1a00>
   12788:	cmp	r5, #0
   1278c:	movne	r3, #34	; 0x22
   12790:	strbne	r3, [r8]
   12794:	mov	r3, #1
   12798:	str	r3, [sp, #24]
   1279c:	str	r3, [sp, #32]
   127a0:	mov	r4, #1
   127a4:	ldr	r3, [pc, #3172]	; 13410 <putchar_unlocked@plt+0x2468>
   127a8:	str	r3, [sp, #40]	; 0x28
   127ac:	mov	r9, r5
   127b0:	mov	r3, #0
   127b4:	str	r7, [sp, #68]	; 0x44
   127b8:	str	r3, [sp, #28]
   127bc:	ldr	r3, [sp, #36]	; 0x24
   127c0:	cmn	r3, #1
   127c4:	bne	13354 <putchar_unlocked@plt+0x23ac>
   127c8:	ldr	r3, [sp, #44]	; 0x2c
   127cc:	ldr	r2, [sp, #28]
   127d0:	ldrb	r3, [r3, r2]
   127d4:	adds	r3, r3, #0
   127d8:	movne	r3, #1
   127dc:	str	r3, [sp, #52]	; 0x34
   127e0:	ldr	r3, [sp, #52]	; 0x34
   127e4:	cmp	r3, #0
   127e8:	bne	129d0 <putchar_unlocked@plt+0x1a28>
   127ec:	sub	r2, sl, #2
   127f0:	clz	r2, r2
   127f4:	lsr	r2, r2, #5
   127f8:	and	r3, r6, r2
   127fc:	cmp	r4, #0
   12800:	movne	r3, #0
   12804:	andeq	r3, r3, #1
   12808:	cmp	r3, #0
   1280c:	bne	12b98 <putchar_unlocked@plt+0x1bf0>
   12810:	eor	r3, r6, #1
   12814:	ands	r2, r2, r3
   12818:	beq	1338c <putchar_unlocked@plt+0x23e4>
   1281c:	ldr	r3, [sp, #68]	; 0x44
   12820:	cmp	r3, #0
   12824:	beq	133c4 <putchar_unlocked@plt+0x241c>
   12828:	ldr	r3, [sp, #72]	; 0x48
   1282c:	cmp	r3, #0
   12830:	beq	13368 <putchar_unlocked@plt+0x23c0>
   12834:	ldr	r3, [sp, #160]	; 0xa0
   12838:	ldr	r2, [sp, #44]	; 0x2c
   1283c:	str	r3, [sp, #16]
   12840:	ldr	r3, [sp, #156]	; 0x9c
   12844:	ldr	r1, [sp, #60]	; 0x3c
   12848:	str	r3, [sp, #12]
   1284c:	ldr	r3, [sp, #152]	; 0x98
   12850:	str	r3, [sp, #8]
   12854:	ldr	r3, [sp, #148]	; 0x94
   12858:	str	r3, [sp, #4]
   1285c:	mov	r3, #5
   12860:	str	r3, [sp]
   12864:	ldr	r3, [sp, #36]	; 0x24
   12868:	mov	r0, r8
   1286c:	bl	126ec <putchar_unlocked@plt+0x1744>
   12870:	mov	r4, r0
   12874:	b	133b8 <putchar_unlocked@plt+0x2410>
   12878:	cmp	sl, #10
   1287c:	beq	128d8 <putchar_unlocked@plt+0x1930>
   12880:	ldr	r4, [pc, #2956]	; 13414 <putchar_unlocked@plt+0x246c>
   12884:	mov	r2, #5
   12888:	mov	r1, r4
   1288c:	mov	r0, #0
   12890:	bl	10dbc <dcgettext@plt>
   12894:	cmp	r0, r4
   12898:	str	r0, [sp, #156]	; 0x9c
   1289c:	bne	128ac <putchar_unlocked@plt+0x1904>
   128a0:	mov	r1, sl
   128a4:	bl	125d8 <putchar_unlocked@plt+0x1630>
   128a8:	str	r0, [sp, #156]	; 0x9c
   128ac:	ldr	r4, [pc, #2916]	; 13418 <putchar_unlocked@plt+0x2470>
   128b0:	mov	r2, #5
   128b4:	mov	r1, r4
   128b8:	mov	r0, #0
   128bc:	bl	10dbc <dcgettext@plt>
   128c0:	cmp	r0, r4
   128c4:	str	r0, [sp, #160]	; 0xa0
   128c8:	bne	128d8 <putchar_unlocked@plt+0x1930>
   128cc:	mov	r1, sl
   128d0:	bl	125d8 <putchar_unlocked@plt+0x1630>
   128d4:	str	r0, [sp, #160]	; 0xa0
   128d8:	cmp	r6, #0
   128dc:	moveq	r4, r6
   128e0:	beq	128f8 <putchar_unlocked@plt+0x1950>
   128e4:	mov	r4, #0
   128e8:	b	12908 <putchar_unlocked@plt+0x1960>
   128ec:	cmp	r5, r4
   128f0:	strbhi	r3, [r8, r4]
   128f4:	add	r4, r4, #1
   128f8:	ldr	r3, [sp, #156]	; 0x9c
   128fc:	ldrb	r3, [r3, r4]
   12900:	cmp	r3, #0
   12904:	bne	128ec <putchar_unlocked@plt+0x1944>
   12908:	ldr	r0, [sp, #160]	; 0xa0
   1290c:	bl	10eb8 <strlen@plt>
   12910:	ldr	r3, [sp, #160]	; 0xa0
   12914:	str	r3, [sp, #40]	; 0x28
   12918:	mov	r3, #1
   1291c:	str	r3, [sp, #24]
   12920:	str	r0, [sp, #32]
   12924:	b	127ac <putchar_unlocked@plt+0x1804>
   12928:	mov	r3, #1
   1292c:	cmp	r6, #0
   12930:	streq	r3, [sp, #24]
   12934:	beq	12954 <putchar_unlocked@plt+0x19ac>
   12938:	str	r3, [sp, #32]
   1293c:	ldr	r3, [pc, #2772]	; 13418 <putchar_unlocked@plt+0x2470>
   12940:	mov	r4, #0
   12944:	str	r3, [sp, #40]	; 0x28
   12948:	b	12978 <putchar_unlocked@plt+0x19d0>
   1294c:	cmp	r6, #0
   12950:	bne	129c0 <putchar_unlocked@plt+0x1a18>
   12954:	cmp	r5, #0
   12958:	movne	r3, #39	; 0x27
   1295c:	strbne	r3, [r8]
   12960:	mov	r3, #1
   12964:	str	r3, [sp, #32]
   12968:	mov	r6, #0
   1296c:	ldr	r3, [pc, #2724]	; 13418 <putchar_unlocked@plt+0x2470>
   12970:	mov	r4, #1
   12974:	str	r3, [sp, #40]	; 0x28
   12978:	mov	sl, #2
   1297c:	b	127ac <putchar_unlocked@plt+0x1804>
   12980:	bl	10f9c <abort@plt>
   12984:	mov	r6, #0
   12988:	mov	r3, #1
   1298c:	str	r3, [sp, #24]
   12990:	mov	r4, r6
   12994:	b	127ac <putchar_unlocked@plt+0x1804>
   12998:	mov	r6, #1
   1299c:	str	r6, [sp, #24]
   129a0:	str	r6, [sp, #32]
   129a4:	b	1293c <putchar_unlocked@plt+0x1994>
   129a8:	mov	r3, #1
   129ac:	str	r3, [sp, #32]
   129b0:	ldr	r3, [pc, #2648]	; 13410 <putchar_unlocked@plt+0x2468>
   129b4:	str	r6, [sp, #24]
   129b8:	str	r3, [sp, #40]	; 0x28
   129bc:	b	12778 <putchar_unlocked@plt+0x17d0>
   129c0:	mov	r3, #1
   129c4:	str	r3, [sp, #32]
   129c8:	ldr	r3, [pc, #2632]	; 13418 <putchar_unlocked@plt+0x2470>
   129cc:	b	129b8 <putchar_unlocked@plt+0x1a10>
   129d0:	ldr	r3, [sp, #32]
   129d4:	ldr	fp, [sp, #24]
   129d8:	cmp	sl, #2
   129dc:	moveq	fp, #0
   129e0:	andne	fp, fp, #1
   129e4:	adds	r5, r3, #0
   129e8:	movne	r5, #1
   129ec:	ands	r3, r5, fp
   129f0:	str	r3, [sp, #64]	; 0x40
   129f4:	beq	12ac4 <putchar_unlocked@plt+0x1b1c>
   129f8:	ldr	r2, [sp, #32]
   129fc:	ldr	r3, [sp, #28]
   12a00:	add	r7, r3, r2
   12a04:	mov	r3, r2
   12a08:	ldr	r2, [sp, #36]	; 0x24
   12a0c:	cmp	r3, #1
   12a10:	movls	r3, #0
   12a14:	movhi	r3, #1
   12a18:	cmn	r2, #1
   12a1c:	movne	r3, #0
   12a20:	cmp	r3, #0
   12a24:	beq	12a34 <putchar_unlocked@plt+0x1a8c>
   12a28:	ldr	r0, [sp, #44]	; 0x2c
   12a2c:	bl	10eb8 <strlen@plt>
   12a30:	str	r0, [sp, #36]	; 0x24
   12a34:	ldr	r3, [sp, #36]	; 0x24
   12a38:	cmp	r3, r7
   12a3c:	bcc	12abc <putchar_unlocked@plt+0x1b14>
   12a40:	ldr	r3, [sp, #44]	; 0x2c
   12a44:	ldr	r0, [sp, #28]
   12a48:	ldr	r2, [sp, #32]
   12a4c:	ldr	r1, [sp, #40]	; 0x28
   12a50:	add	r0, r3, r0
   12a54:	bl	10d98 <memcmp@plt>
   12a58:	cmp	r0, #0
   12a5c:	bne	12abc <putchar_unlocked@plt+0x1b14>
   12a60:	cmp	r6, #0
   12a64:	beq	12ac4 <putchar_unlocked@plt+0x1b1c>
   12a68:	str	r6, [sp, #24]
   12a6c:	ldr	r3, [sp, #24]
   12a70:	ldr	r2, [sp, #44]	; 0x2c
   12a74:	cmp	sl, #2
   12a78:	movne	r3, #0
   12a7c:	andeq	r3, r3, #1
   12a80:	cmp	r3, #0
   12a84:	ldr	r3, [sp, #160]	; 0xa0
   12a88:	movne	sl, #4
   12a8c:	str	r3, [sp, #16]
   12a90:	ldr	r3, [sp, #156]	; 0x9c
   12a94:	str	sl, [sp]
   12a98:	str	r3, [sp, #12]
   12a9c:	mov	r3, #0
   12aa0:	str	r3, [sp, #8]
   12aa4:	ldr	r3, [sp, #148]	; 0x94
   12aa8:	mov	r1, r9
   12aac:	bic	r3, r3, #2
   12ab0:	str	r3, [sp, #4]
   12ab4:	ldr	r3, [sp, #36]	; 0x24
   12ab8:	b	12868 <putchar_unlocked@plt+0x18c0>
   12abc:	mov	r3, #0
   12ac0:	str	r3, [sp, #64]	; 0x40
   12ac4:	ldr	r2, [sp, #28]
   12ac8:	ldr	r3, [sp, #44]	; 0x2c
   12acc:	add	r3, r3, r2
   12ad0:	str	r3, [sp, #80]	; 0x50
   12ad4:	ldr	r3, [sp, #44]	; 0x2c
   12ad8:	ldrb	r7, [r3, r2]
   12adc:	cmp	r7, #58	; 0x3a
   12ae0:	bhi	12c48 <putchar_unlocked@plt+0x1ca0>
   12ae4:	cmp	r7, #43	; 0x2b
   12ae8:	bcs	12c9c <putchar_unlocked@plt+0x1cf4>
   12aec:	cmp	r7, #32
   12af0:	beq	12cf4 <putchar_unlocked@plt+0x1d4c>
   12af4:	bhi	12ba0 <putchar_unlocked@plt+0x1bf8>
   12af8:	cmp	r7, #9
   12afc:	beq	12fa8 <putchar_unlocked@plt+0x2000>
   12b00:	bhi	12b64 <putchar_unlocked@plt+0x1bbc>
   12b04:	cmp	r7, #7
   12b08:	beq	13054 <putchar_unlocked@plt+0x20ac>
   12b0c:	bhi	12d10 <putchar_unlocked@plt+0x1d68>
   12b10:	cmp	r7, #0
   12b14:	beq	12d2c <putchar_unlocked@plt+0x1d84>
   12b18:	ldr	r3, [sp, #76]	; 0x4c
   12b1c:	cmp	r3, #1
   12b20:	bne	13098 <putchar_unlocked@plt+0x20f0>
   12b24:	bl	10ea0 <__ctype_b_loc@plt>
   12b28:	sxth	r3, r7
   12b2c:	lsl	r3, r3, #1
   12b30:	ldr	r2, [r0]
   12b34:	ldrh	r5, [r2, r3]
   12b38:	ldr	r3, [sp, #76]	; 0x4c
   12b3c:	str	r3, [sp, #56]	; 0x38
   12b40:	lsr	r5, r5, #14
   12b44:	and	r5, r5, #1
   12b48:	ldr	r3, [sp, #24]
   12b4c:	eor	fp, r5, #1
   12b50:	and	fp, fp, r3
   12b54:	ands	fp, fp, #255	; 0xff
   12b58:	beq	12ee0 <putchar_unlocked@plt+0x1f38>
   12b5c:	mov	r5, #0
   12b60:	b	13144 <putchar_unlocked@plt+0x219c>
   12b64:	cmp	r7, #11
   12b68:	beq	12fb0 <putchar_unlocked@plt+0x2008>
   12b6c:	bcc	1304c <putchar_unlocked@plt+0x20a4>
   12b70:	cmp	r7, #12
   12b74:	beq	1305c <putchar_unlocked@plt+0x20b4>
   12b78:	cmp	r7, #13
   12b7c:	moveq	r3, #114	; 0x72
   12b80:	bne	12b18 <putchar_unlocked@plt+0x1b70>
   12b84:	cmp	sl, #2
   12b88:	movne	r2, #0
   12b8c:	andeq	r2, r6, #1
   12b90:	cmp	r2, #0
   12b94:	beq	12d14 <putchar_unlocked@plt+0x1d6c>
   12b98:	mov	sl, #2
   12b9c:	b	12a6c <putchar_unlocked@plt+0x1ac4>
   12ba0:	cmp	r7, #37	; 0x25
   12ba4:	beq	12c9c <putchar_unlocked@plt+0x1cf4>
   12ba8:	bhi	12bbc <putchar_unlocked@plt+0x1c14>
   12bac:	cmp	r7, #35	; 0x23
   12bb0:	beq	12ce8 <putchar_unlocked@plt+0x1d40>
   12bb4:	mov	r5, #0
   12bb8:	b	12cf8 <putchar_unlocked@plt+0x1d50>
   12bbc:	cmp	r7, #39	; 0x27
   12bc0:	bne	12bb4 <putchar_unlocked@plt+0x1c0c>
   12bc4:	cmp	sl, #2
   12bc8:	ldrne	r5, [sp, #52]	; 0x34
   12bcc:	movne	r3, r5
   12bd0:	strne	r3, [sp, #68]	; 0x44
   12bd4:	bne	12ca0 <putchar_unlocked@plt+0x1cf8>
   12bd8:	cmp	r6, #0
   12bdc:	bne	12a6c <putchar_unlocked@plt+0x1ac4>
   12be0:	ldr	r2, [sp, #60]	; 0x3c
   12be4:	adds	r3, r9, #0
   12be8:	movne	r3, #1
   12bec:	cmp	r2, #0
   12bf0:	movne	r3, #0
   12bf4:	cmp	r3, #0
   12bf8:	strne	r9, [sp, #60]	; 0x3c
   12bfc:	movne	r9, #0
   12c00:	bne	12c10 <putchar_unlocked@plt+0x1c68>
   12c04:	cmp	r9, r4
   12c08:	movhi	r3, #39	; 0x27
   12c0c:	strbhi	r3, [r8, r4]
   12c10:	add	r3, r4, #1
   12c14:	cmp	r3, r9
   12c18:	movcc	r2, #92	; 0x5c
   12c1c:	strbcc	r2, [r8, r3]
   12c20:	add	r3, r4, #2
   12c24:	cmp	r3, r9
   12c28:	ldr	r5, [sp, #52]	; 0x34
   12c2c:	movcc	r2, #39	; 0x27
   12c30:	strbcc	r2, [r8, r3]
   12c34:	add	r4, r4, #3
   12c38:	mov	fp, r6
   12c3c:	str	r5, [sp, #68]	; 0x44
   12c40:	str	r6, [sp, #48]	; 0x30
   12c44:	b	12ee0 <putchar_unlocked@plt+0x1f38>
   12c48:	cmp	r7, #94	; 0x5e
   12c4c:	beq	12bb4 <putchar_unlocked@plt+0x1c0c>
   12c50:	bhi	12ca8 <putchar_unlocked@plt+0x1d00>
   12c54:	cmp	r7, #90	; 0x5a
   12c58:	bhi	12c90 <putchar_unlocked@plt+0x1ce8>
   12c5c:	cmp	r7, #65	; 0x41
   12c60:	bcs	12c9c <putchar_unlocked@plt+0x1cf4>
   12c64:	cmp	r7, #62	; 0x3e
   12c68:	bls	12bb4 <putchar_unlocked@plt+0x1c0c>
   12c6c:	cmp	r7, #63	; 0x3f
   12c70:	bne	12b18 <putchar_unlocked@plt+0x1b70>
   12c74:	cmp	sl, #2
   12c78:	beq	12e1c <putchar_unlocked@plt+0x1e74>
   12c7c:	cmp	sl, #5
   12c80:	beq	12e2c <putchar_unlocked@plt+0x1e84>
   12c84:	mov	fp, #0
   12c88:	mov	r5, fp
   12c8c:	b	12ee0 <putchar_unlocked@plt+0x1f38>
   12c90:	cmp	r7, #92	; 0x5c
   12c94:	beq	12fb8 <putchar_unlocked@plt+0x2010>
   12c98:	bls	12bb4 <putchar_unlocked@plt+0x1c0c>
   12c9c:	ldr	r5, [sp, #52]	; 0x34
   12ca0:	mov	fp, #0
   12ca4:	b	12ee0 <putchar_unlocked@plt+0x1f38>
   12ca8:	cmp	r7, #122	; 0x7a
   12cac:	bhi	12ccc <putchar_unlocked@plt+0x1d24>
   12cb0:	cmp	r7, #97	; 0x61
   12cb4:	bcs	12c9c <putchar_unlocked@plt+0x1cf4>
   12cb8:	cmp	r7, #95	; 0x5f
   12cbc:	beq	12c9c <putchar_unlocked@plt+0x1cf4>
   12cc0:	cmp	r7, #96	; 0x60
   12cc4:	bne	12b18 <putchar_unlocked@plt+0x1b70>
   12cc8:	b	12bb4 <putchar_unlocked@plt+0x1c0c>
   12ccc:	cmp	r7, #124	; 0x7c
   12cd0:	beq	12bb4 <putchar_unlocked@plt+0x1c0c>
   12cd4:	bcc	13064 <putchar_unlocked@plt+0x20bc>
   12cd8:	cmp	r7, #125	; 0x7d
   12cdc:	beq	13064 <putchar_unlocked@plt+0x20bc>
   12ce0:	cmp	r7, #126	; 0x7e
   12ce4:	bne	12b18 <putchar_unlocked@plt+0x1b70>
   12ce8:	ldr	r3, [sp, #28]
   12cec:	cmp	r3, #0
   12cf0:	bne	12e24 <putchar_unlocked@plt+0x1e7c>
   12cf4:	ldr	r5, [sp, #52]	; 0x34
   12cf8:	cmp	sl, #2
   12cfc:	movne	fp, #0
   12d00:	andeq	fp, r6, #1
   12d04:	cmp	fp, #0
   12d08:	beq	12ee0 <putchar_unlocked@plt+0x1f38>
   12d0c:	b	12b98 <putchar_unlocked@plt+0x1bf0>
   12d10:	mov	r3, #98	; 0x62
   12d14:	ldr	r2, [sp, #24]
   12d18:	cmp	r2, #0
   12d1c:	beq	12e24 <putchar_unlocked@plt+0x1e7c>
   12d20:	mov	r7, r3
   12d24:	mov	r5, #0
   12d28:	b	12f38 <putchar_unlocked@plt+0x1f90>
   12d2c:	ldr	r3, [sp, #24]
   12d30:	cmp	r3, #0
   12d34:	beq	12e00 <putchar_unlocked@plt+0x1e58>
   12d38:	cmp	r6, #0
   12d3c:	bne	12a68 <putchar_unlocked@plt+0x1ac0>
   12d40:	ldr	r3, [sp, #48]	; 0x30
   12d44:	eor	r2, r3, #1
   12d48:	cmp	sl, #2
   12d4c:	movne	r2, #0
   12d50:	andeq	r2, r2, #1
   12d54:	cmp	r2, #0
   12d58:	moveq	r3, r4
   12d5c:	beq	12d94 <putchar_unlocked@plt+0x1dec>
   12d60:	cmp	r9, r4
   12d64:	movhi	r3, #39	; 0x27
   12d68:	strbhi	r3, [r8, r4]
   12d6c:	add	r3, r4, #1
   12d70:	cmp	r9, r3
   12d74:	movhi	r1, #36	; 0x24
   12d78:	strbhi	r1, [r8, r3]
   12d7c:	add	r3, r4, #2
   12d80:	cmp	r9, r3
   12d84:	movhi	r1, #39	; 0x27
   12d88:	strbhi	r1, [r8, r3]
   12d8c:	add	r3, r4, #3
   12d90:	str	r2, [sp, #48]	; 0x30
   12d94:	cmp	r9, r3
   12d98:	movhi	r2, #92	; 0x5c
   12d9c:	strbhi	r2, [r8, r3]
   12da0:	cmp	fp, #0
   12da4:	add	r4, r3, #1
   12da8:	beq	13338 <putchar_unlocked@plt+0x2390>
   12dac:	ldr	r2, [sp, #28]
   12db0:	ldr	r1, [sp, #36]	; 0x24
   12db4:	add	r2, r2, #1
   12db8:	cmp	r1, r2
   12dbc:	bls	12df8 <putchar_unlocked@plt+0x1e50>
   12dc0:	ldr	r1, [sp, #44]	; 0x2c
   12dc4:	mov	r7, #48	; 0x30
   12dc8:	ldrb	r2, [r1, r2]
   12dcc:	sub	r2, r2, #48	; 0x30
   12dd0:	cmp	r2, #9
   12dd4:	movhi	r5, r6
   12dd8:	bhi	12ee0 <putchar_unlocked@plt+0x1f38>
   12ddc:	cmp	r9, r4
   12de0:	add	r2, r3, #2
   12de4:	strbhi	r7, [r8, r4]
   12de8:	cmp	r9, r2
   12dec:	add	r4, r3, #3
   12df0:	movhi	r1, #48	; 0x30
   12df4:	strbhi	r1, [r8, r2]
   12df8:	mov	r5, r6
   12dfc:	b	13340 <putchar_unlocked@plt+0x2398>
   12e00:	ldr	r3, [sp, #148]	; 0x94
   12e04:	tst	r3, #1
   12e08:	ldreq	r5, [sp, #24]
   12e0c:	beq	1334c <putchar_unlocked@plt+0x23a4>
   12e10:	ldr	r3, [sp, #28]
   12e14:	add	r3, r3, #1
   12e18:	b	127b8 <putchar_unlocked@plt+0x1810>
   12e1c:	cmp	r6, #0
   12e20:	bne	12a6c <putchar_unlocked@plt+0x1ac4>
   12e24:	mov	r5, #0
   12e28:	b	12ca0 <putchar_unlocked@plt+0x1cf8>
   12e2c:	ldr	r3, [sp, #148]	; 0x94
   12e30:	tst	r3, #4
   12e34:	beq	12e24 <putchar_unlocked@plt+0x1e7c>
   12e38:	ldr	r3, [sp, #28]
   12e3c:	add	r2, r3, #2
   12e40:	ldr	r3, [sp, #36]	; 0x24
   12e44:	cmp	r3, r2
   12e48:	bls	12e24 <putchar_unlocked@plt+0x1e7c>
   12e4c:	ldr	r3, [sp, #44]	; 0x2c
   12e50:	ldr	r1, [sp, #28]
   12e54:	add	r3, r3, r1
   12e58:	ldrb	r0, [r3, #1]
   12e5c:	cmp	r0, #63	; 0x3f
   12e60:	bne	12e24 <putchar_unlocked@plt+0x1e7c>
   12e64:	ldr	r3, [sp, #44]	; 0x2c
   12e68:	ldrb	r1, [r3, r2]
   12e6c:	sub	r3, r1, #33	; 0x21
   12e70:	uxtb	r3, r3
   12e74:	cmp	r3, #29
   12e78:	bhi	13348 <putchar_unlocked@plt+0x23a0>
   12e7c:	mov	ip, #1
   12e80:	ldr	r5, [pc, #1428]	; 1341c <putchar_unlocked@plt+0x2474>
   12e84:	ands	r5, r5, ip, lsl r3
   12e88:	beq	12ca0 <putchar_unlocked@plt+0x1cf8>
   12e8c:	cmp	r6, #0
   12e90:	bne	12a6c <putchar_unlocked@plt+0x1ac4>
   12e94:	add	r3, r4, #1
   12e98:	cmp	r9, r4
   12e9c:	strbhi	r0, [r8, r4]
   12ea0:	cmp	r9, r3
   12ea4:	movhi	r0, #34	; 0x22
   12ea8:	strbhi	r0, [r8, r3]
   12eac:	add	r3, r4, #2
   12eb0:	cmp	r9, r3
   12eb4:	movhi	r0, #34	; 0x22
   12eb8:	strbhi	r0, [r8, r3]
   12ebc:	add	r3, r4, #3
   12ec0:	cmp	r9, r3
   12ec4:	add	r4, r4, #4
   12ec8:	mov	r5, r6
   12ecc:	mov	fp, r6
   12ed0:	mov	r7, r1
   12ed4:	movhi	r0, #63	; 0x3f
   12ed8:	strbhi	r0, [r8, r3]
   12edc:	str	r2, [sp, #28]
   12ee0:	ldr	r3, [sp, #24]
   12ee4:	eor	r3, r3, #1
   12ee8:	cmp	sl, #2
   12eec:	orreq	r3, r3, #1
   12ef0:	eor	r3, r3, #1
   12ef4:	orr	r3, r6, r3
   12ef8:	tst	r3, #255	; 0xff
   12efc:	beq	12f2c <putchar_unlocked@plt+0x1f84>
   12f00:	ldr	r3, [sp, #152]	; 0x98
   12f04:	cmp	r3, #0
   12f08:	beq	12f2c <putchar_unlocked@plt+0x1f84>
   12f0c:	lsr	r2, r7, #5
   12f10:	ldr	r1, [sp, #152]	; 0x98
   12f14:	uxtb	r2, r2
   12f18:	and	r3, r7, #31
   12f1c:	ldr	r2, [r1, r2, lsl #2]
   12f20:	lsr	r3, r2, r3
   12f24:	tst	r3, #1
   12f28:	bne	12f38 <putchar_unlocked@plt+0x1f90>
   12f2c:	ldr	r3, [sp, #64]	; 0x40
   12f30:	cmp	r3, #0
   12f34:	beq	12fd0 <putchar_unlocked@plt+0x2028>
   12f38:	cmp	r6, #0
   12f3c:	bne	12a6c <putchar_unlocked@plt+0x1ac4>
   12f40:	ldr	r3, [sp, #48]	; 0x30
   12f44:	eor	r3, r3, #1
   12f48:	cmp	sl, #2
   12f4c:	movne	r3, #0
   12f50:	andeq	r3, r3, #1
   12f54:	cmp	r3, #0
   12f58:	beq	12f90 <putchar_unlocked@plt+0x1fe8>
   12f5c:	cmp	r9, r4
   12f60:	movhi	r2, #39	; 0x27
   12f64:	strbhi	r2, [r8, r4]
   12f68:	add	r2, r4, #1
   12f6c:	cmp	r9, r2
   12f70:	movhi	r1, #36	; 0x24
   12f74:	strbhi	r1, [r8, r2]
   12f78:	add	r2, r4, #2
   12f7c:	cmp	r9, r2
   12f80:	add	r4, r4, #3
   12f84:	movhi	r1, #39	; 0x27
   12f88:	strbhi	r1, [r8, r2]
   12f8c:	str	r3, [sp, #48]	; 0x30
   12f90:	cmp	r9, r4
   12f94:	movhi	r3, #92	; 0x5c
   12f98:	strbhi	r3, [r8, r4]
   12f9c:	ldr	fp, [sp, #52]	; 0x34
   12fa0:	add	r4, r4, #1
   12fa4:	b	12fd0 <putchar_unlocked@plt+0x2028>
   12fa8:	mov	r3, #116	; 0x74
   12fac:	b	12b84 <putchar_unlocked@plt+0x1bdc>
   12fb0:	mov	r3, #118	; 0x76
   12fb4:	b	12d14 <putchar_unlocked@plt+0x1d6c>
   12fb8:	cmp	sl, #2
   12fbc:	bne	1302c <putchar_unlocked@plt+0x2084>
   12fc0:	cmp	r6, #0
   12fc4:	bne	12a6c <putchar_unlocked@plt+0x1ac4>
   12fc8:	mov	r5, r6
   12fcc:	mov	fp, r6
   12fd0:	ldr	r3, [sp, #48]	; 0x30
   12fd4:	eor	fp, fp, #1
   12fd8:	and	fp, fp, r3
   12fdc:	tst	fp, #255	; 0xff
   12fe0:	beq	1300c <putchar_unlocked@plt+0x2064>
   12fe4:	cmp	r9, r4
   12fe8:	movhi	r3, #39	; 0x27
   12fec:	strbhi	r3, [r8, r4]
   12ff0:	add	r3, r4, #1
   12ff4:	cmp	r9, r3
   12ff8:	movhi	r2, #39	; 0x27
   12ffc:	add	r4, r4, #2
   13000:	strbhi	r2, [r8, r3]
   13004:	mov	r3, #0
   13008:	str	r3, [sp, #48]	; 0x30
   1300c:	cmp	r9, r4
   13010:	strbhi	r7, [r8, r4]
   13014:	ldr	r3, [sp, #72]	; 0x48
   13018:	cmp	r5, #0
   1301c:	moveq	r3, #0
   13020:	add	r4, r4, #1
   13024:	str	r3, [sp, #72]	; 0x48
   13028:	b	12e10 <putchar_unlocked@plt+0x1e68>
   1302c:	ldr	r3, [sp, #24]
   13030:	and	r3, r3, r6
   13034:	tst	r5, r3
   13038:	moveq	r3, r7
   1303c:	beq	12b84 <putchar_unlocked@plt+0x1bdc>
   13040:	mov	fp, #0
   13044:	mov	r5, fp
   13048:	b	12fd0 <putchar_unlocked@plt+0x2028>
   1304c:	mov	r3, #110	; 0x6e
   13050:	b	12b84 <putchar_unlocked@plt+0x1bdc>
   13054:	mov	r3, #97	; 0x61
   13058:	b	12d14 <putchar_unlocked@plt+0x1d6c>
   1305c:	mov	r3, #102	; 0x66
   13060:	b	12d14 <putchar_unlocked@plt+0x1d6c>
   13064:	ldr	r3, [sp, #36]	; 0x24
   13068:	cmn	r3, #1
   1306c:	bne	1308c <putchar_unlocked@plt+0x20e4>
   13070:	ldr	r3, [sp, #44]	; 0x2c
   13074:	ldrb	r3, [r3, #1]
   13078:	adds	r3, r3, #0
   1307c:	movne	r3, #1
   13080:	cmp	r3, #0
   13084:	bne	12e24 <putchar_unlocked@plt+0x1e7c>
   13088:	b	12ce8 <putchar_unlocked@plt+0x1d40>
   1308c:	ldr	r3, [sp, #36]	; 0x24
   13090:	subs	r3, r3, #1
   13094:	b	1307c <putchar_unlocked@plt+0x20d4>
   13098:	mov	r3, #0
   1309c:	str	r3, [sp, #96]	; 0x60
   130a0:	str	r3, [sp, #100]	; 0x64
   130a4:	ldr	r3, [sp, #36]	; 0x24
   130a8:	cmn	r3, #1
   130ac:	bne	130bc <putchar_unlocked@plt+0x2114>
   130b0:	ldr	r0, [sp, #44]	; 0x2c
   130b4:	bl	10eb8 <strlen@plt>
   130b8:	str	r0, [sp, #36]	; 0x24
   130bc:	ldr	r5, [sp, #52]	; 0x34
   130c0:	mov	r3, #0
   130c4:	str	r3, [sp, #56]	; 0x38
   130c8:	ldr	r3, [sp, #28]
   130cc:	ldr	r2, [sp, #56]	; 0x38
   130d0:	ldr	r1, [sp, #36]	; 0x24
   130d4:	add	r2, r3, r2
   130d8:	ldr	r3, [sp, #44]	; 0x2c
   130dc:	add	r0, sp, #92	; 0x5c
   130e0:	add	fp, r3, r2
   130e4:	sub	r2, r1, r2
   130e8:	add	r3, sp, #96	; 0x60
   130ec:	mov	r1, fp
   130f0:	bl	14d94 <putchar_unlocked@plt+0x3dec>
   130f4:	subs	r2, r0, #0
   130f8:	beq	13138 <putchar_unlocked@plt+0x2190>
   130fc:	cmn	r2, #1
   13100:	beq	13310 <putchar_unlocked@plt+0x2368>
   13104:	cmn	r2, #2
   13108:	bne	13280 <putchar_unlocked@plt+0x22d8>
   1310c:	ldr	r2, [sp, #56]	; 0x38
   13110:	ldr	r3, [sp, #28]
   13114:	add	r3, r3, r2
   13118:	ldr	r2, [sp, #36]	; 0x24
   1311c:	cmp	r2, r3
   13120:	bls	13310 <putchar_unlocked@plt+0x2368>
   13124:	ldr	r3, [sp, #80]	; 0x50
   13128:	ldr	r2, [sp, #56]	; 0x38
   1312c:	ldrb	r5, [r3, r2]
   13130:	cmp	r5, #0
   13134:	bne	13270 <putchar_unlocked@plt+0x22c8>
   13138:	ldr	r3, [sp, #56]	; 0x38
   1313c:	cmp	r3, #1
   13140:	bls	12b48 <putchar_unlocked@plt+0x1ba0>
   13144:	ldr	r2, [sp, #56]	; 0x38
   13148:	ldr	r3, [sp, #28]
   1314c:	mov	fp, #0
   13150:	add	r3, r3, r2
   13154:	ldr	r2, [sp, #24]
   13158:	str	r3, [sp, #52]	; 0x34
   1315c:	eor	r3, r5, #1
   13160:	and	r3, r3, r2
   13164:	mov	ip, #92	; 0x5c
   13168:	uxtb	r3, r3
   1316c:	mov	r2, #39	; 0x27
   13170:	cmp	r3, #0
   13174:	beq	13318 <putchar_unlocked@plt+0x2370>
   13178:	cmp	r6, #0
   1317c:	bne	12a68 <putchar_unlocked@plt+0x1ac0>
   13180:	ldr	r1, [sp, #48]	; 0x30
   13184:	eor	r1, r1, #1
   13188:	cmp	sl, #2
   1318c:	movne	r1, #0
   13190:	andeq	r1, r1, #1
   13194:	cmp	r1, #0
   13198:	beq	131c8 <putchar_unlocked@plt+0x2220>
   1319c:	add	r0, r4, #1
   131a0:	cmp	r9, r4
   131a4:	strbhi	r2, [r8, r4]
   131a8:	cmp	r9, r0
   131ac:	movhi	lr, #36	; 0x24
   131b0:	strbhi	lr, [r8, r0]
   131b4:	add	r0, r4, #2
   131b8:	add	r4, r4, #3
   131bc:	cmp	r9, r0
   131c0:	strbhi	r2, [r8, r0]
   131c4:	str	r1, [sp, #48]	; 0x30
   131c8:	add	r0, r4, #1
   131cc:	cmp	r9, r4
   131d0:	strbhi	ip, [r8, r4]
   131d4:	cmp	r9, r0
   131d8:	lsrhi	r1, r7, #6
   131dc:	addhi	r1, r1, #48	; 0x30
   131e0:	strbhi	r1, [r8, r0]
   131e4:	add	r0, r4, #2
   131e8:	cmp	r9, r0
   131ec:	lsrhi	r1, r7, #3
   131f0:	and	r7, r7, #7
   131f4:	andhi	r1, r1, #7
   131f8:	add	r4, r4, #3
   131fc:	add	r7, r7, #48	; 0x30
   13200:	mov	fp, r3
   13204:	addhi	r1, r1, #48	; 0x30
   13208:	strbhi	r1, [r8, r0]
   1320c:	ldr	r1, [sp, #28]
   13210:	ldr	r0, [sp, #52]	; 0x34
   13214:	add	r1, r1, #1
   13218:	cmp	r0, r1
   1321c:	bls	12fd0 <putchar_unlocked@plt+0x2028>
   13220:	ldr	lr, [sp, #48]	; 0x30
   13224:	eor	r0, fp, #1
   13228:	and	r0, r0, lr
   1322c:	tst	r0, #255	; 0xff
   13230:	beq	13254 <putchar_unlocked@plt+0x22ac>
   13234:	add	r0, r4, #1
   13238:	cmp	r9, r4
   1323c:	strbhi	r2, [r8, r4]
   13240:	cmp	r9, r0
   13244:	add	r4, r4, #2
   13248:	strbhi	r2, [r8, r0]
   1324c:	mov	r0, #0
   13250:	str	r0, [sp, #48]	; 0x30
   13254:	ldr	r0, [sp, #44]	; 0x2c
   13258:	cmp	r9, r4
   1325c:	strbhi	r7, [r8, r4]
   13260:	str	r1, [sp, #28]
   13264:	add	r4, r4, #1
   13268:	ldrb	r7, [r0, r1]
   1326c:	b	13170 <putchar_unlocked@plt+0x21c8>
   13270:	ldr	r3, [sp, #56]	; 0x38
   13274:	add	r3, r3, #1
   13278:	str	r3, [sp, #56]	; 0x38
   1327c:	b	1310c <putchar_unlocked@plt+0x2164>
   13280:	cmp	sl, #2
   13284:	movne	r3, #0
   13288:	andeq	r3, r6, #1
   1328c:	cmp	r3, #0
   13290:	movne	r1, #1
   13294:	bne	132f0 <putchar_unlocked@plt+0x2348>
   13298:	ldr	r0, [sp, #92]	; 0x5c
   1329c:	str	r2, [sp, #84]	; 0x54
   132a0:	bl	10de0 <iswprint@plt>
   132a4:	ldr	r3, [sp, #56]	; 0x38
   132a8:	ldr	r2, [sp, #84]	; 0x54
   132ac:	add	r3, r3, r2
   132b0:	str	r3, [sp, #56]	; 0x38
   132b4:	cmp	r0, #0
   132b8:	add	r0, sp, #96	; 0x60
   132bc:	moveq	r5, #0
   132c0:	bl	10d80 <mbsinit@plt>
   132c4:	cmp	r0, #0
   132c8:	beq	130c8 <putchar_unlocked@plt+0x2120>
   132cc:	b	13138 <putchar_unlocked@plt+0x2190>
   132d0:	ldrb	r3, [fp, r1]
   132d4:	cmp	r3, #94	; 0x5e
   132d8:	beq	12b98 <putchar_unlocked@plt+0x1bf0>
   132dc:	bhi	132fc <putchar_unlocked@plt+0x2354>
   132e0:	sub	r3, r3, #91	; 0x5b
   132e4:	cmp	r3, #1
   132e8:	bls	12b98 <putchar_unlocked@plt+0x1bf0>
   132ec:	add	r1, r1, #1
   132f0:	cmp	r1, r2
   132f4:	bne	132d0 <putchar_unlocked@plt+0x2328>
   132f8:	b	13298 <putchar_unlocked@plt+0x22f0>
   132fc:	cmp	r3, #96	; 0x60
   13300:	beq	12b98 <putchar_unlocked@plt+0x1bf0>
   13304:	cmp	r3, #124	; 0x7c
   13308:	bne	132ec <putchar_unlocked@plt+0x2344>
   1330c:	b	12b98 <putchar_unlocked@plt+0x1bf0>
   13310:	mov	r5, #0
   13314:	b	13138 <putchar_unlocked@plt+0x2190>
   13318:	ldr	r1, [sp, #64]	; 0x40
   1331c:	cmp	r1, #0
   13320:	beq	1320c <putchar_unlocked@plt+0x2264>
   13324:	cmp	r9, r4
   13328:	strbhi	ip, [r8, r4]
   1332c:	str	r3, [sp, #64]	; 0x40
   13330:	add	r4, r4, #1
   13334:	b	1320c <putchar_unlocked@plt+0x2264>
   13338:	mov	r5, fp
   1333c:	ldr	fp, [sp, #24]
   13340:	mov	r7, #48	; 0x30
   13344:	b	12ee0 <putchar_unlocked@plt+0x1f38>
   13348:	mov	r5, #0
   1334c:	mov	fp, r5
   13350:	b	12ee0 <putchar_unlocked@plt+0x1f38>
   13354:	ldr	r3, [sp, #36]	; 0x24
   13358:	ldr	r2, [sp, #28]
   1335c:	subs	r3, r3, r2
   13360:	movne	r3, #1
   13364:	b	127dc <putchar_unlocked@plt+0x1834>
   13368:	ldr	r3, [sp, #60]	; 0x3c
   1336c:	clz	r7, r9
   13370:	cmp	r3, #0
   13374:	lsr	r7, r7, #5
   13378:	moveq	r7, #0
   1337c:	cmp	r7, #0
   13380:	mov	r5, r3
   13384:	bne	1273c <putchar_unlocked@plt+0x1794>
   13388:	ldr	r3, [sp, #68]	; 0x44
   1338c:	ldr	r2, [sp, #40]	; 0x28
   13390:	cmp	r2, #0
   13394:	moveq	r3, #0
   13398:	andne	r3, r3, #1
   1339c:	cmp	r3, #0
   133a0:	movne	r3, r2
   133a4:	subne	r2, r3, #1
   133a8:	bne	133d8 <putchar_unlocked@plt+0x2430>
   133ac:	cmp	r9, r4
   133b0:	movhi	r3, #0
   133b4:	strbhi	r3, [r8, r4]
   133b8:	mov	r0, r4
   133bc:	add	sp, sp, #108	; 0x6c
   133c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133c4:	mov	r3, r2
   133c8:	b	1338c <putchar_unlocked@plt+0x23e4>
   133cc:	cmp	r9, r4
   133d0:	strbhi	r3, [r8, r4]
   133d4:	add	r4, r4, #1
   133d8:	ldrb	r3, [r2, #1]!
   133dc:	cmp	r3, #0
   133e0:	bne	133cc <putchar_unlocked@plt+0x2424>
   133e4:	b	133ac <putchar_unlocked@plt+0x2404>
   133e8:	ldr	r3, [pc, #32]	; 13410 <putchar_unlocked@plt+0x2468>
   133ec:	mov	r6, #1
   133f0:	str	r6, [sp, #24]
   133f4:	str	r6, [sp, #32]
   133f8:	str	r3, [sp, #40]	; 0x28
   133fc:	mov	r4, #0
   13400:	mov	sl, #5
   13404:	b	127ac <putchar_unlocked@plt+0x1804>
   13408:	mov	r6, #1
   1340c:	b	129a0 <putchar_unlocked@plt+0x19f8>
   13410:	ldrdeq	r5, [r1], -r7
   13414:	ldrdeq	r5, [r1], -fp
   13418:	ldrdeq	r5, [r1], -r9
   1341c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	sub	sp, sp, #52	; 0x34
   13428:	mov	r6, r0
   1342c:	mov	r5, r3
   13430:	mov	r8, r1
   13434:	mov	r9, r2
   13438:	bl	10ed0 <__errno_location@plt>
   1343c:	ldr	r7, [pc, #380]	; 135c0 <putchar_unlocked@plt+0x2618>
   13440:	cmn	r6, #-2147483647	; 0x80000001
   13444:	ldr	r4, [r7]
   13448:	ldr	r3, [r0]
   1344c:	str	r0, [sp, #24]
   13450:	str	r3, [sp, #32]
   13454:	movne	r3, #0
   13458:	moveq	r3, #1
   1345c:	orrs	r3, r3, r6, lsr #31
   13460:	beq	13468 <putchar_unlocked@plt+0x24c0>
   13464:	bl	10f9c <abort@plt>
   13468:	ldr	r2, [r7, #4]
   1346c:	cmp	r6, r2
   13470:	blt	134e0 <putchar_unlocked@plt+0x2538>
   13474:	add	r1, sp, #48	; 0x30
   13478:	add	sl, r7, #8
   1347c:	str	r2, [r1, #-4]!
   13480:	cmp	r4, sl
   13484:	mov	r3, #8
   13488:	sub	r2, r6, r2
   1348c:	movne	r0, r4
   13490:	str	r3, [sp]
   13494:	add	r2, r2, #1
   13498:	mvn	r3, #-2147483648	; 0x80000000
   1349c:	moveq	r0, #0
   134a0:	bl	1453c <putchar_unlocked@plt+0x3594>
   134a4:	cmp	r4, sl
   134a8:	ldr	r2, [sp, #44]	; 0x2c
   134ac:	mov	fp, r0
   134b0:	str	r0, [r7]
   134b4:	ldmeq	r4, {r0, r1}
   134b8:	mov	r4, fp
   134bc:	stmeq	fp, {r0, r1}
   134c0:	ldr	r0, [r7, #4]
   134c4:	mov	r1, #0
   134c8:	sub	r2, r2, r0
   134cc:	add	r0, fp, r0, lsl #3
   134d0:	lsl	r2, r2, #3
   134d4:	bl	10ee8 <memset@plt>
   134d8:	ldr	r3, [sp, #44]	; 0x2c
   134dc:	str	r3, [r7, #4]
   134e0:	ldr	r3, [r5, #4]
   134e4:	add	sl, r4, r6, lsl #3
   134e8:	orr	r3, r3, #1
   134ec:	str	r3, [sp, #28]
   134f0:	add	r3, r5, #8
   134f4:	str	r3, [sp, #36]	; 0x24
   134f8:	ldr	r3, [r5, #44]	; 0x2c
   134fc:	ldr	fp, [r4, r6, lsl #3]
   13500:	ldr	r7, [sl, #4]
   13504:	str	r3, [sp, #16]
   13508:	ldr	r3, [r5, #40]	; 0x28
   1350c:	mov	r2, r8
   13510:	str	r3, [sp, #12]
   13514:	add	r3, r5, #8
   13518:	str	r3, [sp, #8]
   1351c:	ldr	r3, [sp, #28]
   13520:	mov	r1, fp
   13524:	str	r3, [sp, #4]
   13528:	ldr	r3, [r5]
   1352c:	mov	r0, r7
   13530:	str	r3, [sp]
   13534:	mov	r3, r9
   13538:	bl	126ec <putchar_unlocked@plt+0x1744>
   1353c:	cmp	fp, r0
   13540:	bhi	135a8 <putchar_unlocked@plt+0x2600>
   13544:	ldr	r3, [pc, #120]	; 135c4 <putchar_unlocked@plt+0x261c>
   13548:	add	fp, r0, #1
   1354c:	cmp	r7, r3
   13550:	str	fp, [r4, r6, lsl #3]
   13554:	beq	13560 <putchar_unlocked@plt+0x25b8>
   13558:	mov	r0, r7
   1355c:	bl	124a8 <putchar_unlocked@plt+0x1500>
   13560:	mov	r0, fp
   13564:	bl	143f4 <putchar_unlocked@plt+0x344c>
   13568:	ldr	r3, [r5, #44]	; 0x2c
   1356c:	mov	r2, r8
   13570:	mov	r1, fp
   13574:	str	r0, [sl, #4]
   13578:	str	r3, [sp, #16]
   1357c:	ldr	r3, [r5, #40]	; 0x28
   13580:	mov	r7, r0
   13584:	str	r3, [sp, #12]
   13588:	add	r3, r5, #8
   1358c:	str	r3, [sp, #8]
   13590:	ldr	r3, [sp, #28]
   13594:	str	r3, [sp, #4]
   13598:	ldr	r3, [r5]
   1359c:	str	r3, [sp]
   135a0:	mov	r3, r9
   135a4:	bl	126ec <putchar_unlocked@plt+0x1744>
   135a8:	ldr	r3, [sp, #24]
   135ac:	ldr	r2, [sp, #32]
   135b0:	mov	r0, r7
   135b4:	str	r2, [r3]
   135b8:	add	sp, sp, #52	; 0x34
   135bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135c0:	andeq	r7, r2, r8, lsl #2
   135c4:	andeq	r7, r2, r0, ror r1
   135c8:	push	{r4, r5, r6, lr}
   135cc:	mov	r5, r0
   135d0:	bl	10ed0 <__errno_location@plt>
   135d4:	cmp	r5, #0
   135d8:	mov	r1, #48	; 0x30
   135dc:	ldr	r6, [r0]
   135e0:	mov	r4, r0
   135e4:	ldr	r0, [pc, #12]	; 135f8 <putchar_unlocked@plt+0x2650>
   135e8:	movne	r0, r5
   135ec:	bl	147d0 <putchar_unlocked@plt+0x3828>
   135f0:	str	r6, [r4]
   135f4:	pop	{r4, r5, r6, pc}
   135f8:	andeq	r7, r2, r0, ror r2
   135fc:	ldr	r3, [pc, #12]	; 13610 <putchar_unlocked@plt+0x2668>
   13600:	cmp	r0, #0
   13604:	moveq	r0, r3
   13608:	ldr	r0, [r0]
   1360c:	bx	lr
   13610:	andeq	r7, r2, r0, ror r2
   13614:	ldr	r3, [pc, #12]	; 13628 <putchar_unlocked@plt+0x2680>
   13618:	cmp	r0, #0
   1361c:	moveq	r0, r3
   13620:	str	r1, [r0]
   13624:	bx	lr
   13628:	andeq	r7, r2, r0, ror r2
   1362c:	ldr	r3, [pc, #52]	; 13668 <putchar_unlocked@plt+0x26c0>
   13630:	cmp	r0, #0
   13634:	moveq	r0, r3
   13638:	add	r3, r0, #8
   1363c:	push	{lr}		; (str lr, [sp, #-4]!)
   13640:	lsr	lr, r1, #5
   13644:	and	r1, r1, #31
   13648:	ldr	ip, [r3, lr, lsl #2]
   1364c:	lsr	r0, ip, r1
   13650:	eor	r2, r2, r0
   13654:	and	r2, r2, #1
   13658:	and	r0, r0, #1
   1365c:	eor	r1, ip, r2, lsl r1
   13660:	str	r1, [r3, lr, lsl #2]
   13664:	pop	{pc}		; (ldr pc, [sp], #4)
   13668:	andeq	r7, r2, r0, ror r2
   1366c:	ldr	r3, [pc, #16]	; 13684 <putchar_unlocked@plt+0x26dc>
   13670:	cmp	r0, #0
   13674:	movne	r3, r0
   13678:	ldr	r0, [r3, #4]
   1367c:	str	r1, [r3, #4]
   13680:	bx	lr
   13684:	andeq	r7, r2, r0, ror r2
   13688:	ldr	r3, [pc, #44]	; 136bc <putchar_unlocked@plt+0x2714>
   1368c:	cmp	r0, #0
   13690:	moveq	r0, r3
   13694:	mov	r3, #10
   13698:	cmp	r2, #0
   1369c:	cmpne	r1, #0
   136a0:	str	r3, [r0]
   136a4:	bne	136b0 <putchar_unlocked@plt+0x2708>
   136a8:	push	{r4, lr}
   136ac:	bl	10f9c <abort@plt>
   136b0:	str	r1, [r0, #40]	; 0x28
   136b4:	str	r2, [r0, #44]	; 0x2c
   136b8:	bx	lr
   136bc:	andeq	r7, r2, r0, ror r2
   136c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136c4:	sub	sp, sp, #24
   136c8:	mov	sl, r3
   136cc:	ldr	r4, [sp, #56]	; 0x38
   136d0:	ldr	r3, [pc, #100]	; 1373c <putchar_unlocked@plt+0x2794>
   136d4:	cmp	r4, #0
   136d8:	moveq	r4, r3
   136dc:	mov	r7, r0
   136e0:	mov	r8, r1
   136e4:	mov	r9, r2
   136e8:	bl	10ed0 <__errno_location@plt>
   136ec:	ldr	r3, [r4, #44]	; 0x2c
   136f0:	mov	r2, r9
   136f4:	mov	r1, r8
   136f8:	ldr	r6, [r0]
   136fc:	str	r3, [sp, #16]
   13700:	ldr	r3, [r4, #40]	; 0x28
   13704:	mov	r5, r0
   13708:	str	r3, [sp, #12]
   1370c:	add	r3, r4, #8
   13710:	str	r3, [sp, #8]
   13714:	ldr	r3, [r4, #4]
   13718:	mov	r0, r7
   1371c:	str	r3, [sp, #4]
   13720:	ldr	r3, [r4]
   13724:	str	r3, [sp]
   13728:	mov	r3, sl
   1372c:	bl	126ec <putchar_unlocked@plt+0x1744>
   13730:	str	r6, [r5]
   13734:	add	sp, sp, #24
   13738:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1373c:	andeq	r7, r2, r0, ror r2
   13740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13744:	cmp	r3, #0
   13748:	sub	sp, sp, #44	; 0x2c
   1374c:	ldr	r4, [pc, #188]	; 13810 <putchar_unlocked@plt+0x2868>
   13750:	mov	r6, r2
   13754:	movne	r4, r3
   13758:	mov	sl, r1
   1375c:	mov	r9, r0
   13760:	bl	10ed0 <__errno_location@plt>
   13764:	ldr	r5, [r4, #4]
   13768:	add	fp, r4, #8
   1376c:	cmp	r6, #0
   13770:	orreq	r5, r5, #1
   13774:	mov	r1, #0
   13778:	mov	r2, r9
   1377c:	ldr	r3, [r0]
   13780:	mov	r8, r0
   13784:	str	r3, [sp, #28]
   13788:	ldr	r3, [r4, #44]	; 0x2c
   1378c:	mov	r0, r1
   13790:	str	r3, [sp, #16]
   13794:	ldr	r3, [r4, #40]	; 0x28
   13798:	stmib	sp, {r5, fp}
   1379c:	str	r3, [sp, #12]
   137a0:	ldr	r3, [r4]
   137a4:	str	r3, [sp]
   137a8:	mov	r3, sl
   137ac:	bl	126ec <putchar_unlocked@plt+0x1744>
   137b0:	add	r1, r0, #1
   137b4:	mov	r7, r0
   137b8:	mov	r0, r1
   137bc:	str	r1, [sp, #36]	; 0x24
   137c0:	bl	143f4 <putchar_unlocked@plt+0x344c>
   137c4:	ldr	r3, [r4, #44]	; 0x2c
   137c8:	mov	r2, r9
   137cc:	str	r3, [sp, #16]
   137d0:	ldr	r3, [r4, #40]	; 0x28
   137d4:	stmib	sp, {r5, fp}
   137d8:	str	r3, [sp, #12]
   137dc:	ldr	r3, [r4]
   137e0:	ldr	r1, [sp, #36]	; 0x24
   137e4:	str	r3, [sp]
   137e8:	mov	r3, sl
   137ec:	str	r0, [sp, #32]
   137f0:	bl	126ec <putchar_unlocked@plt+0x1744>
   137f4:	ldr	r3, [sp, #28]
   137f8:	cmp	r6, #0
   137fc:	str	r3, [r8]
   13800:	ldr	r0, [sp, #32]
   13804:	strne	r7, [r6]
   13808:	add	sp, sp, #44	; 0x2c
   1380c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13810:	andeq	r7, r2, r0, ror r2
   13814:	mov	r3, r2
   13818:	mov	r2, #0
   1381c:	b	13740 <putchar_unlocked@plt+0x2798>
   13820:	push	{r4, r5, r6, r7, r8, lr}
   13824:	mov	r6, #1
   13828:	ldr	r4, [pc, #104]	; 13898 <putchar_unlocked@plt+0x28f0>
   1382c:	ldr	r5, [r4]
   13830:	add	r7, r5, #12
   13834:	ldr	r3, [r4, #4]
   13838:	add	r7, r7, #8
   1383c:	cmp	r6, r3
   13840:	blt	13888 <putchar_unlocked@plt+0x28e0>
   13844:	ldr	r0, [r5, #4]
   13848:	ldr	r6, [pc, #76]	; 1389c <putchar_unlocked@plt+0x28f4>
   1384c:	cmp	r0, r6
   13850:	beq	13864 <putchar_unlocked@plt+0x28bc>
   13854:	bl	124a8 <putchar_unlocked@plt+0x1500>
   13858:	mov	r3, #256	; 0x100
   1385c:	str	r3, [r4, #8]
   13860:	str	r6, [r4, #12]
   13864:	ldr	r6, [pc, #52]	; 138a0 <putchar_unlocked@plt+0x28f8>
   13868:	cmp	r5, r6
   1386c:	beq	1387c <putchar_unlocked@plt+0x28d4>
   13870:	mov	r0, r5
   13874:	bl	124a8 <putchar_unlocked@plt+0x1500>
   13878:	str	r6, [r4]
   1387c:	mov	r3, #1
   13880:	str	r3, [r4, #4]
   13884:	pop	{r4, r5, r6, r7, r8, pc}
   13888:	ldr	r0, [r7, #-8]
   1388c:	bl	124a8 <putchar_unlocked@plt+0x1500>
   13890:	add	r6, r6, #1
   13894:	b	13834 <putchar_unlocked@plt+0x288c>
   13898:	andeq	r7, r2, r8, lsl #2
   1389c:	andeq	r7, r2, r0, ror r1
   138a0:	andeq	r7, r2, r0, lsl r1
   138a4:	ldr	r3, [pc, #4]	; 138b0 <putchar_unlocked@plt+0x2908>
   138a8:	mvn	r2, #0
   138ac:	b	13420 <putchar_unlocked@plt+0x2478>
   138b0:	andeq	r7, r2, r0, ror r2
   138b4:	ldr	r3, [pc]	; 138bc <putchar_unlocked@plt+0x2914>
   138b8:	b	13420 <putchar_unlocked@plt+0x2478>
   138bc:	andeq	r7, r2, r0, ror r2
   138c0:	mov	r1, r0
   138c4:	mov	r0, #0
   138c8:	b	138a4 <putchar_unlocked@plt+0x28fc>
   138cc:	mov	r2, r1
   138d0:	mov	r1, r0
   138d4:	mov	r0, #0
   138d8:	b	138b4 <putchar_unlocked@plt+0x290c>
   138dc:	push	{r4, r5, lr}
   138e0:	sub	sp, sp, #52	; 0x34
   138e4:	mov	r5, r2
   138e8:	mov	r4, r0
   138ec:	mov	r0, sp
   138f0:	bl	125a8 <putchar_unlocked@plt+0x1600>
   138f4:	mov	r3, sp
   138f8:	mvn	r2, #0
   138fc:	mov	r1, r5
   13900:	mov	r0, r4
   13904:	bl	13420 <putchar_unlocked@plt+0x2478>
   13908:	add	sp, sp, #52	; 0x34
   1390c:	pop	{r4, r5, pc}
   13910:	push	{r4, r5, r6, lr}
   13914:	sub	sp, sp, #48	; 0x30
   13918:	mov	r5, r2
   1391c:	mov	r6, r3
   13920:	mov	r4, r0
   13924:	mov	r0, sp
   13928:	bl	125a8 <putchar_unlocked@plt+0x1600>
   1392c:	mov	r3, sp
   13930:	mov	r2, r6
   13934:	mov	r1, r5
   13938:	mov	r0, r4
   1393c:	bl	13420 <putchar_unlocked@plt+0x2478>
   13940:	add	sp, sp, #48	; 0x30
   13944:	pop	{r4, r5, r6, pc}
   13948:	mov	r2, r1
   1394c:	mov	r1, r0
   13950:	mov	r0, #0
   13954:	b	138dc <putchar_unlocked@plt+0x2934>
   13958:	mov	r3, r2
   1395c:	mov	r2, r1
   13960:	mov	r1, r0
   13964:	mov	r0, #0
   13968:	b	13910 <putchar_unlocked@plt+0x2968>
   1396c:	push	{r4, r5, r6, lr}
   13970:	mov	r4, r0
   13974:	ldr	lr, [pc, #80]	; 139cc <putchar_unlocked@plt+0x2a24>
   13978:	mov	r5, r1
   1397c:	mov	r6, r2
   13980:	ldm	lr!, {r0, r1, r2, r3}
   13984:	sub	sp, sp, #48	; 0x30
   13988:	mov	ip, sp
   1398c:	stmia	ip!, {r0, r1, r2, r3}
   13990:	ldm	lr!, {r0, r1, r2, r3}
   13994:	stmia	ip!, {r0, r1, r2, r3}
   13998:	ldm	lr, {r0, r1, r2, r3}
   1399c:	stm	ip, {r0, r1, r2, r3}
   139a0:	mov	r1, r6
   139a4:	mov	r2, #1
   139a8:	mov	r0, sp
   139ac:	bl	1362c <putchar_unlocked@plt+0x2684>
   139b0:	mov	r3, sp
   139b4:	mov	r2, r5
   139b8:	mov	r1, r4
   139bc:	mov	r0, #0
   139c0:	bl	13420 <putchar_unlocked@plt+0x2478>
   139c4:	add	sp, sp, #48	; 0x30
   139c8:	pop	{r4, r5, r6, pc}
   139cc:	andeq	r7, r2, r0, ror r2
   139d0:	mov	r2, r1
   139d4:	mvn	r1, #0
   139d8:	b	1396c <putchar_unlocked@plt+0x29c4>
   139dc:	mov	r1, #58	; 0x3a
   139e0:	b	139d0 <putchar_unlocked@plt+0x2a28>
   139e4:	mov	r2, #58	; 0x3a
   139e8:	b	1396c <putchar_unlocked@plt+0x29c4>
   139ec:	push	{r4, r5, lr}
   139f0:	sub	sp, sp, #100	; 0x64
   139f4:	mov	r4, r0
   139f8:	mov	r0, sp
   139fc:	mov	r5, r2
   13a00:	bl	125a8 <putchar_unlocked@plt+0x1600>
   13a04:	mov	ip, sp
   13a08:	add	lr, sp, #48	; 0x30
   13a0c:	ldm	ip!, {r0, r1, r2, r3}
   13a10:	stmia	lr!, {r0, r1, r2, r3}
   13a14:	ldm	ip!, {r0, r1, r2, r3}
   13a18:	stmia	lr!, {r0, r1, r2, r3}
   13a1c:	ldm	ip, {r0, r1, r2, r3}
   13a20:	stm	lr, {r0, r1, r2, r3}
   13a24:	mov	r2, #1
   13a28:	mov	r1, #58	; 0x3a
   13a2c:	add	r0, sp, #48	; 0x30
   13a30:	bl	1362c <putchar_unlocked@plt+0x2684>
   13a34:	add	r3, sp, #48	; 0x30
   13a38:	mvn	r2, #0
   13a3c:	mov	r1, r5
   13a40:	mov	r0, r4
   13a44:	bl	13420 <putchar_unlocked@plt+0x2478>
   13a48:	add	sp, sp, #100	; 0x64
   13a4c:	pop	{r4, r5, pc}
   13a50:	push	{r4, r5, r6, r7, lr}
   13a54:	mov	r4, r0
   13a58:	ldr	lr, [pc, #84]	; 13ab4 <putchar_unlocked@plt+0x2b0c>
   13a5c:	mov	r6, r1
   13a60:	mov	r7, r2
   13a64:	mov	r5, r3
   13a68:	ldm	lr!, {r0, r1, r2, r3}
   13a6c:	sub	sp, sp, #52	; 0x34
   13a70:	mov	ip, sp
   13a74:	stmia	ip!, {r0, r1, r2, r3}
   13a78:	ldm	lr!, {r0, r1, r2, r3}
   13a7c:	stmia	ip!, {r0, r1, r2, r3}
   13a80:	ldm	lr, {r0, r1, r2, r3}
   13a84:	stm	ip, {r0, r1, r2, r3}
   13a88:	mov	r2, r7
   13a8c:	mov	r1, r6
   13a90:	mov	r0, sp
   13a94:	bl	13688 <putchar_unlocked@plt+0x26e0>
   13a98:	mov	r3, sp
   13a9c:	ldr	r2, [sp, #72]	; 0x48
   13aa0:	mov	r1, r5
   13aa4:	mov	r0, r4
   13aa8:	bl	13420 <putchar_unlocked@plt+0x2478>
   13aac:	add	sp, sp, #52	; 0x34
   13ab0:	pop	{r4, r5, r6, r7, pc}
   13ab4:	andeq	r7, r2, r0, ror r2
   13ab8:	mvn	ip, #0
   13abc:	push	{r0, r1, r2, lr}
   13ac0:	str	ip, [sp]
   13ac4:	bl	13a50 <putchar_unlocked@plt+0x2aa8>
   13ac8:	add	sp, sp, #12
   13acc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ad0:	mov	r3, r2
   13ad4:	mov	r2, r1
   13ad8:	mov	r1, r0
   13adc:	mov	r0, #0
   13ae0:	b	13ab8 <putchar_unlocked@plt+0x2b10>
   13ae4:	push	{r0, r1, r2, lr}
   13ae8:	str	r3, [sp]
   13aec:	mov	r3, r2
   13af0:	mov	r2, r1
   13af4:	mov	r1, r0
   13af8:	mov	r0, #0
   13afc:	bl	13a50 <putchar_unlocked@plt+0x2aa8>
   13b00:	add	sp, sp, #12
   13b04:	pop	{pc}		; (ldr pc, [sp], #4)
   13b08:	ldr	r3, [pc]	; 13b10 <putchar_unlocked@plt+0x2b68>
   13b0c:	b	13420 <putchar_unlocked@plt+0x2478>
   13b10:	andeq	r7, r2, r8, lsl r1
   13b14:	mov	r2, r1
   13b18:	mov	r1, r0
   13b1c:	mov	r0, #0
   13b20:	b	13b08 <putchar_unlocked@plt+0x2b60>
   13b24:	mvn	r2, #0
   13b28:	b	13b08 <putchar_unlocked@plt+0x2b60>
   13b2c:	mov	r1, r0
   13b30:	mov	r0, #0
   13b34:	b	13b24 <putchar_unlocked@plt+0x2b7c>
   13b38:	mov	r3, r2
   13b3c:	push	{r4, lr}
   13b40:	mov	r2, r1
   13b44:	mov	r1, #1
   13b48:	bl	10dec <fwrite@plt>
   13b4c:	mov	r0, #0
   13b50:	pop	{r4, pc}
   13b54:	mov	r3, r0
   13b58:	cmp	r3, #65536	; 0x10000
   13b5c:	mov	r0, r2
   13b60:	push	{r4, lr}
   13b64:	mov	r1, #1
   13b68:	ldrcc	r2, [pc, #12]	; 13b7c <putchar_unlocked@plt+0x2bd4>
   13b6c:	ldrcs	r2, [pc, #12]	; 13b80 <putchar_unlocked@plt+0x2bd8>
   13b70:	bl	10f18 <__fprintf_chk@plt>
   13b74:	mvn	r0, #0
   13b78:	pop	{r4, pc}
   13b7c:	andeq	r5, r1, fp, lsr #28
   13b80:	andeq	r5, r1, r2, lsr lr
   13b84:	push	{r0, r1, r4, r5, r6, lr}
   13b88:	subs	r4, r1, #0
   13b8c:	mov	r5, r0
   13b90:	mov	r2, #5
   13b94:	bne	13bc4 <putchar_unlocked@plt+0x2c1c>
   13b98:	ldr	r1, [pc, #96]	; 13c00 <putchar_unlocked@plt+0x2c58>
   13b9c:	mov	r0, r4
   13ba0:	bl	10dbc <dcgettext@plt>
   13ba4:	mov	r3, r5
   13ba8:	mov	r1, r4
   13bac:	mov	r2, r0
   13bb0:	mov	r0, #1
   13bb4:	bl	10e34 <error@plt>
   13bb8:	mvn	r0, #0
   13bbc:	add	sp, sp, #8
   13bc0:	pop	{r4, r5, r6, pc}
   13bc4:	ldr	r1, [pc, #56]	; 13c04 <putchar_unlocked@plt+0x2c5c>
   13bc8:	mov	r0, #0
   13bcc:	bl	10dbc <dcgettext@plt>
   13bd0:	mov	r1, r4
   13bd4:	mov	r2, #5
   13bd8:	mov	r6, r0
   13bdc:	mov	r0, #0
   13be0:	bl	10dbc <dcgettext@plt>
   13be4:	mov	r3, r5
   13be8:	mov	r2, r6
   13bec:	mov	r1, #0
   13bf0:	str	r0, [sp]
   13bf4:	mov	r0, #1
   13bf8:	bl	10e34 <error@plt>
   13bfc:	b	13bb8 <putchar_unlocked@plt+0x2c10>
   13c00:	andeq	r5, r1, r9, lsr lr
   13c04:	andeq	r5, r1, r6, ror #28
   13c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c0c:	mov	r6, r3
   13c10:	ldr	r4, [pc, #412]	; 13db4 <putchar_unlocked@plt+0x2e0c>
   13c14:	sub	sp, sp, #64	; 0x40
   13c18:	mov	r5, r0
   13c1c:	ldr	r3, [r4]
   13c20:	mov	r9, r1
   13c24:	cmp	r3, #0
   13c28:	mov	r8, r2
   13c2c:	bne	13c84 <putchar_unlocked@plt+0x2cdc>
   13c30:	bl	14d60 <putchar_unlocked@plt+0x3db8>
   13c34:	ldr	r1, [pc, #380]	; 13db8 <putchar_unlocked@plt+0x2e10>
   13c38:	mov	r7, r0
   13c3c:	bl	10d38 <strcmp@plt>
   13c40:	cmp	r0, #0
   13c44:	moveq	r3, #1
   13c48:	movne	r3, #0
   13c4c:	str	r3, [r4, #4]
   13c50:	beq	13c7c <putchar_unlocked@plt+0x2cd4>
   13c54:	ldr	r1, [pc, #348]	; 13db8 <putchar_unlocked@plt+0x2e10>
   13c58:	mov	r0, r7
   13c5c:	bl	10e58 <iconv_open@plt>
   13c60:	cmn	r0, #1
   13c64:	str	r0, [r4, #8]
   13c68:	bne	13c7c <putchar_unlocked@plt+0x2cd4>
   13c6c:	ldr	r1, [pc, #324]	; 13db8 <putchar_unlocked@plt+0x2e10>
   13c70:	ldr	r0, [pc, #324]	; 13dbc <putchar_unlocked@plt+0x2e14>
   13c74:	bl	10e58 <iconv_open@plt>
   13c78:	str	r0, [r4, #8]
   13c7c:	mov	r3, #1
   13c80:	str	r3, [r4]
   13c84:	ldr	r3, [r4, #4]
   13c88:	cmp	r3, #0
   13c8c:	bne	13ca4 <putchar_unlocked@plt+0x2cfc>
   13c90:	ldr	r3, [r4, #8]
   13c94:	cmn	r3, #1
   13c98:	moveq	r2, r6
   13c9c:	ldreq	r1, [pc, #284]	; 13dc0 <putchar_unlocked@plt+0x2e18>
   13ca0:	beq	13d64 <putchar_unlocked@plt+0x2dbc>
   13ca4:	cmp	r5, #127	; 0x7f
   13ca8:	add	r7, sp, #28
   13cac:	strbls	r5, [sp, #28]
   13cb0:	movls	r1, #1
   13cb4:	bls	13cd8 <putchar_unlocked@plt+0x2d30>
   13cb8:	mov	r2, #6
   13cbc:	mov	r1, r5
   13cc0:	mov	r0, r7
   13cc4:	bl	13dfc <putchar_unlocked@plt+0x2e54>
   13cc8:	subs	r1, r0, #0
   13ccc:	movlt	r2, r6
   13cd0:	ldrlt	r1, [pc, #236]	; 13dc4 <putchar_unlocked@plt+0x2e1c>
   13cd4:	blt	13d64 <putchar_unlocked@plt+0x2dbc>
   13cd8:	ldr	r3, [r4, #4]
   13cdc:	cmp	r3, #0
   13ce0:	bne	13dac <putchar_unlocked@plt+0x2e04>
   13ce4:	mov	r3, #25
   13ce8:	add	sl, sp, #24
   13cec:	str	r7, [sp, #12]
   13cf0:	str	r1, [sp, #16]
   13cf4:	str	r3, [sp, #24]
   13cf8:	add	r2, sp, #16
   13cfc:	add	r3, sp, #20
   13d00:	add	r7, sp, #36	; 0x24
   13d04:	str	sl, [sp]
   13d08:	add	r1, sp, #12
   13d0c:	ldr	r0, [r4, #8]
   13d10:	str	r7, [sp, #20]
   13d14:	bl	10d2c <iconv@plt>
   13d18:	ldr	r2, [sp, #16]
   13d1c:	cmn	r0, #1
   13d20:	movne	r3, #0
   13d24:	moveq	r3, #1
   13d28:	cmp	r2, #0
   13d2c:	orrne	r3, r3, #1
   13d30:	cmp	r3, #0
   13d34:	bne	13d5c <putchar_unlocked@plt+0x2db4>
   13d38:	cmp	r0, #0
   13d3c:	beq	13d74 <putchar_unlocked@plt+0x2dcc>
   13d40:	ldr	r3, [sp, #20]
   13d44:	sub	r3, r3, r7
   13d48:	cmp	r3, #1
   13d4c:	bne	13d74 <putchar_unlocked@plt+0x2dcc>
   13d50:	ldrb	r3, [sp, #36]	; 0x24
   13d54:	cmp	r3, #63	; 0x3f
   13d58:	bne	13d74 <putchar_unlocked@plt+0x2dcc>
   13d5c:	mov	r2, r6
   13d60:	mov	r1, #0
   13d64:	mov	r0, r5
   13d68:	blx	r8
   13d6c:	add	sp, sp, #64	; 0x40
   13d70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d74:	mov	r2, #0
   13d78:	mov	r1, r2
   13d7c:	str	sl, [sp]
   13d80:	add	r3, sp, #20
   13d84:	ldr	r0, [r4, #8]
   13d88:	bl	10d2c <iconv@plt>
   13d8c:	mov	r2, r6
   13d90:	cmn	r0, #1
   13d94:	ldrne	r1, [sp, #20]
   13d98:	subne	r1, r1, r7
   13d9c:	beq	13d60 <putchar_unlocked@plt+0x2db8>
   13da0:	mov	r0, r7
   13da4:	blx	r9
   13da8:	b	13d6c <putchar_unlocked@plt+0x2dc4>
   13dac:	mov	r2, r6
   13db0:	b	13da0 <putchar_unlocked@plt+0x2df8>
   13db4:	andeq	r7, r2, r0, lsr #5
   13db8:	muleq	r1, r7, lr
   13dbc:	muleq	r1, sp, lr
   13dc0:	andeq	r5, r1, r3, lsr #29
   13dc4:			; <UNDEFINED> instruction: 0x00015ebd
   13dc8:	mov	ip, r1
   13dcc:	mov	r3, r0
   13dd0:	ldr	r1, [pc, #24]	; 13df0 <putchar_unlocked@plt+0x2e48>
   13dd4:	ldr	r0, [pc, #24]	; 13df4 <putchar_unlocked@plt+0x2e4c>
   13dd8:	cmp	r2, #0
   13ddc:	movne	r2, r0
   13de0:	moveq	r2, r1
   13de4:	mov	r0, ip
   13de8:	ldr	r1, [pc, #8]	; 13df8 <putchar_unlocked@plt+0x2e50>
   13dec:	b	13c08 <putchar_unlocked@plt+0x2c60>
   13df0:	andeq	r3, r1, r4, asr fp
   13df4:	andeq	r3, r1, r4, lsl #23
   13df8:	andeq	r3, r1, r8, lsr fp
   13dfc:	cmp	r1, #127	; 0x7f
   13e00:	bls	13e40 <putchar_unlocked@plt+0x2e98>
   13e04:	ldr	r3, [pc, #176]	; 13ebc <putchar_unlocked@plt+0x2f14>
   13e08:	cmp	r1, r3
   13e0c:	bls	13e9c <putchar_unlocked@plt+0x2ef4>
   13e10:	cmp	r1, #65536	; 0x10000
   13e14:	bcs	13e30 <putchar_unlocked@plt+0x2e88>
   13e18:	sub	ip, r1, #55296	; 0xd800
   13e1c:	cmp	ip, r3
   13e20:	bhi	13eac <putchar_unlocked@plt+0x2f04>
   13e24:	mvn	r3, #0
   13e28:	mov	r0, r3
   13e2c:	bx	lr
   13e30:	cmp	r1, #1114112	; 0x110000
   13e34:	bcs	13e24 <putchar_unlocked@plt+0x2e7c>
   13e38:	cmp	r2, #3
   13e3c:	bgt	13e48 <putchar_unlocked@plt+0x2ea0>
   13e40:	mvn	r3, #1
   13e44:	b	13e28 <putchar_unlocked@plt+0x2e80>
   13e48:	and	r3, r1, #63	; 0x3f
   13e4c:	lsr	r1, r1, #6
   13e50:	mvn	r3, r3, lsl #25
   13e54:	orr	r1, r1, #65536	; 0x10000
   13e58:	mvn	r3, r3, lsr #25
   13e5c:	strb	r3, [r0, #3]
   13e60:	mov	r3, #4
   13e64:	and	r2, r1, #63	; 0x3f
   13e68:	lsr	r1, r1, #6
   13e6c:	mvn	r2, r2, lsl #25
   13e70:	orr	r1, r1, #2048	; 0x800
   13e74:	mvn	r2, r2, lsr #25
   13e78:	strb	r2, [r0, #2]
   13e7c:	and	r2, r1, #63	; 0x3f
   13e80:	lsr	r1, r1, #6
   13e84:	mvn	r2, r2, lsl #25
   13e88:	orr	r1, r1, #192	; 0xc0
   13e8c:	mvn	r2, r2, lsr #25
   13e90:	strb	r2, [r0, #1]
   13e94:	strb	r1, [r0]
   13e98:	b	13e28 <putchar_unlocked@plt+0x2e80>
   13e9c:	cmp	r2, #1
   13ea0:	movgt	r3, #2
   13ea4:	ble	13e40 <putchar_unlocked@plt+0x2e98>
   13ea8:	b	13e7c <putchar_unlocked@plt+0x2ed4>
   13eac:	cmp	r2, #2
   13eb0:	movgt	r3, #3
   13eb4:	bgt	13e64 <putchar_unlocked@plt+0x2ebc>
   13eb8:	b	13e40 <putchar_unlocked@plt+0x2e98>
   13ebc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   13ec0:	push	{r4, r5, r6, lr}
   13ec4:	sub	sp, sp, #32
   13ec8:	cmp	r1, #0
   13ecc:	mov	r5, r0
   13ed0:	ldr	r4, [sp, #48]	; 0x30
   13ed4:	ldr	r6, [sp, #52]	; 0x34
   13ed8:	beq	13f8c <putchar_unlocked@plt+0x2fe4>
   13edc:	stm	sp, {r2, r3}
   13ee0:	mov	r3, r1
   13ee4:	ldr	r2, [pc, #860]	; 14248 <putchar_unlocked@plt+0x32a0>
   13ee8:	mov	r1, #1
   13eec:	bl	10f18 <__fprintf_chk@plt>
   13ef0:	mov	r2, #5
   13ef4:	ldr	r1, [pc, #848]	; 1424c <putchar_unlocked@plt+0x32a4>
   13ef8:	mov	r0, #0
   13efc:	bl	10dbc <dcgettext@plt>
   13f00:	ldr	r3, [pc, #840]	; 14250 <putchar_unlocked@plt+0x32a8>
   13f04:	ldr	r2, [pc, #840]	; 14254 <putchar_unlocked@plt+0x32ac>
   13f08:	str	r3, [sp]
   13f0c:	mov	r1, #1
   13f10:	mov	r3, r0
   13f14:	mov	r0, r5
   13f18:	bl	10f18 <__fprintf_chk@plt>
   13f1c:	mov	r1, r5
   13f20:	mov	r0, #10
   13f24:	bl	10db0 <fputc_unlocked@plt>
   13f28:	mov	r2, #5
   13f2c:	ldr	r1, [pc, #804]	; 14258 <putchar_unlocked@plt+0x32b0>
   13f30:	mov	r0, #0
   13f34:	bl	10dbc <dcgettext@plt>
   13f38:	mov	r1, #1
   13f3c:	ldr	r3, [pc, #792]	; 1425c <putchar_unlocked@plt+0x32b4>
   13f40:	mov	r2, r0
   13f44:	mov	r0, r5
   13f48:	bl	10f18 <__fprintf_chk@plt>
   13f4c:	mov	r1, r5
   13f50:	mov	r0, #10
   13f54:	bl	10db0 <fputc_unlocked@plt>
   13f58:	cmp	r6, #9
   13f5c:	ldrls	pc, [pc, r6, lsl #2]
   13f60:	b	1423c <putchar_unlocked@plt+0x3294>
   13f64:	andeq	r4, r1, ip, ror r0
   13f68:	andeq	r3, r1, r4, lsr #31
   13f6c:	ldrdeq	r3, [r1], -r0
   13f70:	andeq	r4, r1, r4
   13f74:	andeq	r4, r1, r0, asr #32
   13f78:	andeq	r4, r1, r4, lsl #1
   13f7c:	andeq	r4, r1, ip, asr #1
   13f80:	andeq	r4, r1, ip, lsl r1
   13f84:	andeq	r4, r1, r4, ror r1
   13f88:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f8c:	str	r3, [sp]
   13f90:	mov	r1, #1
   13f94:	mov	r3, r2
   13f98:	ldr	r2, [pc, #704]	; 14260 <putchar_unlocked@plt+0x32b8>
   13f9c:	bl	10f18 <__fprintf_chk@plt>
   13fa0:	b	13ef0 <putchar_unlocked@plt+0x2f48>
   13fa4:	mov	r2, #5
   13fa8:	ldr	r1, [pc, #692]	; 14264 <putchar_unlocked@plt+0x32bc>
   13fac:	mov	r0, #0
   13fb0:	bl	10dbc <dcgettext@plt>
   13fb4:	ldr	r3, [r4]
   13fb8:	mov	r1, #1
   13fbc:	mov	r2, r0
   13fc0:	mov	r0, r5
   13fc4:	add	sp, sp, #32
   13fc8:	pop	{r4, r5, r6, lr}
   13fcc:	b	10f18 <__fprintf_chk@plt>
   13fd0:	mov	r2, #5
   13fd4:	ldr	r1, [pc, #652]	; 14268 <putchar_unlocked@plt+0x32c0>
   13fd8:	mov	r0, #0
   13fdc:	bl	10dbc <dcgettext@plt>
   13fe0:	ldr	r3, [r4, #4]
   13fe4:	mov	r1, #1
   13fe8:	str	r3, [sp, #48]	; 0x30
   13fec:	ldr	r3, [r4]
   13ff0:	mov	r2, r0
   13ff4:	mov	r0, r5
   13ff8:	add	sp, sp, #32
   13ffc:	pop	{r4, r5, r6, lr}
   14000:	b	10f18 <__fprintf_chk@plt>
   14004:	mov	r2, #5
   14008:	ldr	r1, [pc, #604]	; 1426c <putchar_unlocked@plt+0x32c4>
   1400c:	mov	r0, #0
   14010:	bl	10dbc <dcgettext@plt>
   14014:	ldr	r3, [r4, #8]
   14018:	mov	r1, #1
   1401c:	str	r3, [sp, #52]	; 0x34
   14020:	ldr	r3, [r4, #4]
   14024:	str	r3, [sp, #48]	; 0x30
   14028:	ldr	r3, [r4]
   1402c:	mov	r2, r0
   14030:	mov	r0, r5
   14034:	add	sp, sp, #32
   14038:	pop	{r4, r5, r6, lr}
   1403c:	b	10f18 <__fprintf_chk@plt>
   14040:	mov	r2, #5
   14044:	ldr	r1, [pc, #548]	; 14270 <putchar_unlocked@plt+0x32c8>
   14048:	mov	r0, #0
   1404c:	bl	10dbc <dcgettext@plt>
   14050:	ldr	r3, [r4, #12]
   14054:	mov	r1, #1
   14058:	str	r3, [sp, #8]
   1405c:	ldr	r3, [r4, #8]
   14060:	str	r3, [sp, #4]
   14064:	ldr	r3, [r4, #4]
   14068:	str	r3, [sp]
   1406c:	ldr	r3, [r4]
   14070:	mov	r2, r0
   14074:	mov	r0, r5
   14078:	bl	10f18 <__fprintf_chk@plt>
   1407c:	add	sp, sp, #32
   14080:	pop	{r4, r5, r6, pc}
   14084:	mov	r2, #5
   14088:	ldr	r1, [pc, #484]	; 14274 <putchar_unlocked@plt+0x32cc>
   1408c:	mov	r0, #0
   14090:	bl	10dbc <dcgettext@plt>
   14094:	ldr	r3, [r4, #16]
   14098:	mov	r1, #1
   1409c:	str	r3, [sp, #12]
   140a0:	ldr	r3, [r4, #12]
   140a4:	str	r3, [sp, #8]
   140a8:	ldr	r3, [r4, #8]
   140ac:	str	r3, [sp, #4]
   140b0:	ldr	r3, [r4, #4]
   140b4:	str	r3, [sp]
   140b8:	ldr	r3, [r4]
   140bc:	mov	r2, r0
   140c0:	mov	r0, r5
   140c4:	bl	10f18 <__fprintf_chk@plt>
   140c8:	b	1407c <putchar_unlocked@plt+0x30d4>
   140cc:	mov	r2, #5
   140d0:	ldr	r1, [pc, #416]	; 14278 <putchar_unlocked@plt+0x32d0>
   140d4:	mov	r0, #0
   140d8:	bl	10dbc <dcgettext@plt>
   140dc:	ldr	r3, [r4, #20]
   140e0:	mov	r1, #1
   140e4:	str	r3, [sp, #16]
   140e8:	ldr	r3, [r4, #16]
   140ec:	str	r3, [sp, #12]
   140f0:	ldr	r3, [r4, #12]
   140f4:	str	r3, [sp, #8]
   140f8:	ldr	r3, [r4, #8]
   140fc:	str	r3, [sp, #4]
   14100:	ldr	r3, [r4, #4]
   14104:	str	r3, [sp]
   14108:	ldr	r3, [r4]
   1410c:	mov	r2, r0
   14110:	mov	r0, r5
   14114:	bl	10f18 <__fprintf_chk@plt>
   14118:	b	1407c <putchar_unlocked@plt+0x30d4>
   1411c:	mov	r2, #5
   14120:	ldr	r1, [pc, #340]	; 1427c <putchar_unlocked@plt+0x32d4>
   14124:	mov	r0, #0
   14128:	bl	10dbc <dcgettext@plt>
   1412c:	ldr	r3, [r4, #24]
   14130:	mov	r1, #1
   14134:	str	r3, [sp, #20]
   14138:	ldr	r3, [r4, #20]
   1413c:	str	r3, [sp, #16]
   14140:	ldr	r3, [r4, #16]
   14144:	str	r3, [sp, #12]
   14148:	ldr	r3, [r4, #12]
   1414c:	str	r3, [sp, #8]
   14150:	ldr	r3, [r4, #8]
   14154:	str	r3, [sp, #4]
   14158:	ldr	r3, [r4, #4]
   1415c:	str	r3, [sp]
   14160:	ldr	r3, [r4]
   14164:	mov	r2, r0
   14168:	mov	r0, r5
   1416c:	bl	10f18 <__fprintf_chk@plt>
   14170:	b	1407c <putchar_unlocked@plt+0x30d4>
   14174:	mov	r2, #5
   14178:	ldr	r1, [pc, #256]	; 14280 <putchar_unlocked@plt+0x32d8>
   1417c:	mov	r0, #0
   14180:	bl	10dbc <dcgettext@plt>
   14184:	ldr	r3, [r4, #28]
   14188:	mov	r1, #1
   1418c:	str	r3, [sp, #24]
   14190:	ldr	r3, [r4, #24]
   14194:	str	r3, [sp, #20]
   14198:	ldr	r3, [r4, #20]
   1419c:	str	r3, [sp, #16]
   141a0:	ldr	r3, [r4, #16]
   141a4:	str	r3, [sp, #12]
   141a8:	ldr	r3, [r4, #12]
   141ac:	str	r3, [sp, #8]
   141b0:	ldr	r3, [r4, #8]
   141b4:	str	r3, [sp, #4]
   141b8:	ldr	r3, [r4, #4]
   141bc:	str	r3, [sp]
   141c0:	ldr	r3, [r4]
   141c4:	mov	r2, r0
   141c8:	mov	r0, r5
   141cc:	bl	10f18 <__fprintf_chk@plt>
   141d0:	b	1407c <putchar_unlocked@plt+0x30d4>
   141d4:	ldr	r1, [pc, #168]	; 14284 <putchar_unlocked@plt+0x32dc>
   141d8:	mov	r2, #5
   141dc:	mov	r0, #0
   141e0:	bl	10dbc <dcgettext@plt>
   141e4:	ldr	r3, [r4, #32]
   141e8:	mov	r1, #1
   141ec:	str	r3, [sp, #28]
   141f0:	ldr	r3, [r4, #28]
   141f4:	str	r3, [sp, #24]
   141f8:	ldr	r3, [r4, #24]
   141fc:	str	r3, [sp, #20]
   14200:	ldr	r3, [r4, #20]
   14204:	str	r3, [sp, #16]
   14208:	ldr	r3, [r4, #16]
   1420c:	str	r3, [sp, #12]
   14210:	ldr	r3, [r4, #12]
   14214:	str	r3, [sp, #8]
   14218:	ldr	r3, [r4, #8]
   1421c:	str	r3, [sp, #4]
   14220:	ldr	r3, [r4, #4]
   14224:	str	r3, [sp]
   14228:	ldr	r3, [r4]
   1422c:	mov	r2, r0
   14230:	mov	r0, r5
   14234:	bl	10f18 <__fprintf_chk@plt>
   14238:	b	1407c <putchar_unlocked@plt+0x30d4>
   1423c:	mov	r2, #5
   14240:	ldr	r1, [pc, #64]	; 14288 <putchar_unlocked@plt+0x32e0>
   14244:	b	141dc <putchar_unlocked@plt+0x3234>
   14248:	ldrdeq	r5, [r1], -r4
   1424c:	andeq	r5, r1, r7, ror #29
   14250:	andeq	r0, r0, r6, ror #15
   14254:			; <UNDEFINED> instruction: 0x000161b5
   14258:	andeq	r5, r1, fp, ror #29
   1425c:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   14260:	andeq	r5, r1, r0, ror #29
   14264:			; <UNDEFINED> instruction: 0x00015fb8
   14268:	andeq	r5, r1, r8, asr #31
   1426c:	ldrdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   14270:	strdeq	r5, [r1], -fp
   14274:	andeq	r6, r1, fp, lsl r0
   14278:	andeq	r6, r1, pc, lsr r0
   1427c:	andeq	r6, r1, r7, rrx
   14280:	muleq	r1, r3, r0
   14284:	andeq	r6, r1, r3, asr #1
   14288:	strdeq	r6, [r1], -r7
   1428c:	push	{r0, r1, r4, lr}
   14290:	mov	ip, #0
   14294:	ldr	lr, [sp, #16]
   14298:	ldr	r4, [lr, ip, lsl #2]
   1429c:	cmp	r4, #0
   142a0:	bne	142b8 <putchar_unlocked@plt+0x3310>
   142a4:	str	ip, [sp, #4]
   142a8:	str	lr, [sp]
   142ac:	bl	13ec0 <putchar_unlocked@plt+0x2f18>
   142b0:	add	sp, sp, #8
   142b4:	pop	{r4, pc}
   142b8:	add	ip, ip, #1
   142bc:	b	14298 <putchar_unlocked@plt+0x32f0>
   142c0:	push	{r4, r5, lr}
   142c4:	sub	sp, sp, #52	; 0x34
   142c8:	mov	ip, #0
   142cc:	ldr	r5, [sp, #64]	; 0x40
   142d0:	add	lr, sp, #8
   142d4:	ldr	r4, [r5, ip, lsl #2]
   142d8:	cmp	r4, #0
   142dc:	str	r4, [lr, ip, lsl #2]
   142e0:	beq	142f0 <putchar_unlocked@plt+0x3348>
   142e4:	add	ip, ip, #1
   142e8:	cmp	ip, #10
   142ec:	bne	142d4 <putchar_unlocked@plt+0x332c>
   142f0:	str	ip, [sp, #4]
   142f4:	str	lr, [sp]
   142f8:	bl	13ec0 <putchar_unlocked@plt+0x2f18>
   142fc:	add	sp, sp, #52	; 0x34
   14300:	pop	{r4, r5, pc}
   14304:	push	{r3}		; (str r3, [sp, #-4]!)
   14308:	push	{r0, r1, r2, r3, lr}
   1430c:	add	r3, sp, #24
   14310:	str	r3, [sp, #12]
   14314:	str	r3, [sp]
   14318:	ldr	r3, [sp, #20]
   1431c:	bl	142c0 <putchar_unlocked@plt+0x3318>
   14320:	add	sp, sp, #16
   14324:	pop	{lr}		; (ldr lr, [sp], #4)
   14328:	add	sp, sp, #4
   1432c:	bx	lr
   14330:	ldr	r3, [pc, #116]	; 143ac <putchar_unlocked@plt+0x3404>
   14334:	push	{r4, lr}
   14338:	mov	r0, #10
   1433c:	ldr	r1, [r3]
   14340:	bl	10db0 <fputc_unlocked@plt>
   14344:	mov	r2, #5
   14348:	ldr	r1, [pc, #96]	; 143b0 <putchar_unlocked@plt+0x3408>
   1434c:	mov	r0, #0
   14350:	bl	10dbc <dcgettext@plt>
   14354:	ldr	r2, [pc, #88]	; 143b4 <putchar_unlocked@plt+0x340c>
   14358:	mov	r1, r0
   1435c:	mov	r0, #1
   14360:	bl	10ef4 <__printf_chk@plt>
   14364:	mov	r2, #5
   14368:	ldr	r1, [pc, #72]	; 143b8 <putchar_unlocked@plt+0x3410>
   1436c:	mov	r0, #0
   14370:	bl	10dbc <dcgettext@plt>
   14374:	ldr	r3, [pc, #64]	; 143bc <putchar_unlocked@plt+0x3414>
   14378:	ldr	r2, [pc, #64]	; 143c0 <putchar_unlocked@plt+0x3418>
   1437c:	mov	r1, r0
   14380:	mov	r0, #1
   14384:	bl	10ef4 <__printf_chk@plt>
   14388:	mov	r2, #5
   1438c:	ldr	r1, [pc, #48]	; 143c4 <putchar_unlocked@plt+0x341c>
   14390:	mov	r0, #0
   14394:	bl	10dbc <dcgettext@plt>
   14398:	ldr	r2, [pc, #40]	; 143c8 <putchar_unlocked@plt+0x3420>
   1439c:	pop	{r4, lr}
   143a0:	mov	r1, r0
   143a4:	mov	r0, #1
   143a8:	b	10ef4 <__printf_chk@plt>
   143ac:	andeq	r7, r2, r4, asr r1
   143b0:	andeq	r6, r1, r3, lsr r1
   143b4:	andeq	r6, r1, r7, asr #2
   143b8:	andeq	r6, r1, sp, asr r1
   143bc:	strdeq	r5, [r1], -r2
   143c0:	andeq	r5, r1, sl, lsl fp
   143c4:	andeq	r6, r1, r1, ror r1
   143c8:	muleq	r1, r8, r1
   143cc:	push	{r4, lr}
   143d0:	bl	14a1c <putchar_unlocked@plt+0x3a74>
   143d4:	cmp	r0, #0
   143d8:	popne	{r4, pc}
   143dc:	bl	14860 <putchar_unlocked@plt+0x38b8>
   143e0:	push	{r4, lr}
   143e4:	bl	14a1c <putchar_unlocked@plt+0x3a74>
   143e8:	cmp	r0, #0
   143ec:	popne	{r4, pc}
   143f0:	bl	14860 <putchar_unlocked@plt+0x38b8>
   143f4:	b	143cc <putchar_unlocked@plt+0x3424>
   143f8:	push	{r4, r5, r6, lr}
   143fc:	mov	r5, r0
   14400:	mov	r4, r1
   14404:	bl	14a5c <putchar_unlocked@plt+0x3ab4>
   14408:	cmp	r0, #0
   1440c:	popne	{r4, r5, r6, pc}
   14410:	adds	r4, r4, #0
   14414:	movne	r4, #1
   14418:	cmp	r5, #0
   1441c:	orreq	r4, r4, #1
   14420:	cmp	r4, #0
   14424:	popeq	{r4, r5, r6, pc}
   14428:	bl	14860 <putchar_unlocked@plt+0x38b8>
   1442c:	push	{r4, lr}
   14430:	cmp	r1, #0
   14434:	orreq	r1, r1, #1
   14438:	bl	14a5c <putchar_unlocked@plt+0x3ab4>
   1443c:	cmp	r0, #0
   14440:	popne	{r4, pc}
   14444:	bl	14860 <putchar_unlocked@plt+0x38b8>
   14448:	push	{r4, r5, r6, lr}
   1444c:	mov	r6, r0
   14450:	mov	r5, r1
   14454:	mov	r4, r2
   14458:	bl	14de4 <putchar_unlocked@plt+0x3e3c>
   1445c:	cmp	r0, #0
   14460:	popne	{r4, r5, r6, pc}
   14464:	cmp	r6, #0
   14468:	beq	14478 <putchar_unlocked@plt+0x34d0>
   1446c:	cmp	r5, #0
   14470:	cmpne	r4, #0
   14474:	popeq	{r4, r5, r6, pc}
   14478:	bl	14860 <putchar_unlocked@plt+0x38b8>
   1447c:	b	14448 <putchar_unlocked@plt+0x34a0>
   14480:	cmp	r2, #0
   14484:	cmpne	r1, #0
   14488:	moveq	r2, #1
   1448c:	moveq	r1, r2
   14490:	push	{r4, lr}
   14494:	bl	14de4 <putchar_unlocked@plt+0x3e3c>
   14498:	cmp	r0, #0
   1449c:	popne	{r4, pc}
   144a0:	bl	14860 <putchar_unlocked@plt+0x38b8>
   144a4:	mov	r2, r1
   144a8:	mov	r1, r0
   144ac:	mov	r0, #0
   144b0:	b	14448 <putchar_unlocked@plt+0x34a0>
   144b4:	mov	r2, r1
   144b8:	mov	r1, r0
   144bc:	mov	r0, #0
   144c0:	b	14480 <putchar_unlocked@plt+0x34d8>
   144c4:	push	{r4, r5, r6, r7, r8, lr}
   144c8:	subs	r7, r0, #0
   144cc:	mov	r5, r1
   144d0:	mov	r6, r2
   144d4:	ldr	r4, [r1]
   144d8:	bne	14514 <putchar_unlocked@plt+0x356c>
   144dc:	cmp	r4, #0
   144e0:	bne	144fc <putchar_unlocked@plt+0x3554>
   144e4:	mov	r1, r2
   144e8:	mov	r0, #64	; 0x40
   144ec:	bl	14f10 <putchar_unlocked@plt+0x3f68>
   144f0:	cmp	r0, #0
   144f4:	movne	r4, r0
   144f8:	addeq	r4, r0, #1
   144fc:	mov	r2, r6
   14500:	mov	r1, r4
   14504:	mov	r0, r7
   14508:	bl	14448 <putchar_unlocked@plt+0x34a0>
   1450c:	str	r4, [r5]
   14510:	pop	{r4, r5, r6, r7, r8, pc}
   14514:	lsr	r2, r4, #1
   14518:	add	r3, r2, #1
   1451c:	mvn	r3, r3
   14520:	cmp	r4, r3
   14524:	addls	r4, r4, #1
   14528:	addls	r4, r4, r2
   1452c:	bls	144fc <putchar_unlocked@plt+0x3554>
   14530:	bl	14860 <putchar_unlocked@plt+0x38b8>
   14534:	mov	r2, #1
   14538:	b	144c4 <putchar_unlocked@plt+0x351c>
   1453c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14540:	mov	sl, r0
   14544:	ldr	r8, [r1]
   14548:	mov	fp, r1
   1454c:	mov	r5, r2
   14550:	asrs	r4, r8, #1
   14554:	mov	r9, r3
   14558:	ldr	r7, [sp, #48]	; 0x30
   1455c:	bpl	145f8 <putchar_unlocked@plt+0x3650>
   14560:	rsb	r2, r4, #-2147483648	; 0x80000000
   14564:	cmp	r8, r2
   14568:	movge	r2, #0
   1456c:	movlt	r2, #1
   14570:	mvn	r3, r9
   14574:	cmp	r2, #0
   14578:	lsr	r3, r3, #31
   1457c:	addeq	r4, r4, r8
   14580:	mvnne	r4, #-2147483648	; 0x80000000
   14584:	mov	r0, r3
   14588:	cmp	r9, r4
   1458c:	movge	r0, #0
   14590:	andlt	r0, r0, #1
   14594:	cmp	r0, #0
   14598:	str	r3, [sp, #4]
   1459c:	bne	1476c <putchar_unlocked@plt+0x37c4>
   145a0:	cmp	r7, #0
   145a4:	bge	146b8 <putchar_unlocked@plt+0x3710>
   145a8:	cmp	r4, #0
   145ac:	bge	14610 <putchar_unlocked@plt+0x3668>
   145b0:	mov	r1, r7
   145b4:	mvn	r0, #-2147483648	; 0x80000000
   145b8:	bl	1511c <putchar_unlocked@plt+0x4174>
   145bc:	cmp	r0, r4
   145c0:	movle	r0, #0
   145c4:	movgt	r0, #1
   145c8:	cmp	r0, #0
   145cc:	mvnne	r6, #-2147483648	; 0x80000000
   145d0:	beq	14620 <putchar_unlocked@plt+0x3678>
   145d4:	mov	r1, r7
   145d8:	mov	r0, r6
   145dc:	bl	1511c <putchar_unlocked@plt+0x4174>
   145e0:	mov	r1, r7
   145e4:	mov	r4, r0
   145e8:	mov	r0, r6
   145ec:	bl	1533c <putchar_unlocked@plt+0x4394>
   145f0:	sub	r1, r6, r1
   145f4:	b	14630 <putchar_unlocked@plt+0x3688>
   145f8:	mvn	r2, #-2147483648	; 0x80000000
   145fc:	sub	r2, r2, r4
   14600:	cmp	r8, r2
   14604:	movle	r2, #0
   14608:	movgt	r2, #1
   1460c:	b	14570 <putchar_unlocked@plt+0x35c8>
   14610:	cmn	r7, #1
   14614:	movne	r1, r7
   14618:	movne	r0, #-2147483648	; 0x80000000
   1461c:	bne	14784 <putchar_unlocked@plt+0x37dc>
   14620:	mul	r1, r7, r4
   14624:	cmp	r1, #63	; 0x3f
   14628:	movle	r6, #64	; 0x40
   1462c:	ble	145d4 <putchar_unlocked@plt+0x362c>
   14630:	cmp	sl, #0
   14634:	sub	r2, r4, r8
   14638:	streq	sl, [fp]
   1463c:	cmp	r2, r5
   14640:	bge	14714 <putchar_unlocked@plt+0x376c>
   14644:	cmp	r5, #0
   14648:	bge	146e0 <putchar_unlocked@plt+0x3738>
   1464c:	rsb	r2, r5, #-2147483648	; 0x80000000
   14650:	cmp	r8, r2
   14654:	movge	r2, #0
   14658:	movlt	r2, #1
   1465c:	cmp	r2, #0
   14660:	bne	146b4 <putchar_unlocked@plt+0x370c>
   14664:	ldr	r0, [sp, #4]
   14668:	add	r5, r8, r5
   1466c:	cmp	r9, r5
   14670:	movge	r0, #0
   14674:	andlt	r0, r0, #1
   14678:	cmp	r0, #0
   1467c:	mov	r4, r5
   14680:	bne	146b4 <putchar_unlocked@plt+0x370c>
   14684:	cmp	r7, #0
   14688:	bge	14728 <putchar_unlocked@plt+0x3780>
   1468c:	cmp	r5, #0
   14690:	bge	14700 <putchar_unlocked@plt+0x3758>
   14694:	mov	r1, r7
   14698:	mvn	r0, #-2147483648	; 0x80000000
   1469c:	bl	1511c <putchar_unlocked@plt+0x4174>
   146a0:	cmp	r5, r0
   146a4:	movge	r0, #0
   146a8:	movlt	r0, #1
   146ac:	cmp	r0, #0
   146b0:	beq	14710 <putchar_unlocked@plt+0x3768>
   146b4:	bl	14860 <putchar_unlocked@plt+0x38b8>
   146b8:	beq	14620 <putchar_unlocked@plt+0x3678>
   146bc:	cmp	r4, #0
   146c0:	bge	1477c <putchar_unlocked@plt+0x37d4>
   146c4:	cmn	r4, #1
   146c8:	beq	14620 <putchar_unlocked@plt+0x3678>
   146cc:	mov	r1, r4
   146d0:	mov	r0, #-2147483648	; 0x80000000
   146d4:	bl	1511c <putchar_unlocked@plt+0x4174>
   146d8:	cmp	r7, r0
   146dc:	b	145c0 <putchar_unlocked@plt+0x3618>
   146e0:	cmp	r8, #0
   146e4:	blt	14664 <putchar_unlocked@plt+0x36bc>
   146e8:	mvn	r2, #-2147483648	; 0x80000000
   146ec:	sub	r2, r2, r5
   146f0:	cmp	r8, r2
   146f4:	movle	r2, #0
   146f8:	movgt	r2, #1
   146fc:	b	1465c <putchar_unlocked@plt+0x36b4>
   14700:	cmn	r7, #1
   14704:	movne	r1, r7
   14708:	movne	r0, #-2147483648	; 0x80000000
   1470c:	bne	14760 <putchar_unlocked@plt+0x37b8>
   14710:	mul	r1, r5, r7
   14714:	mov	r0, sl
   14718:	bl	143f8 <putchar_unlocked@plt+0x3450>
   1471c:	str	r4, [fp]
   14720:	add	sp, sp, #12
   14724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14728:	beq	14710 <putchar_unlocked@plt+0x3768>
   1472c:	cmp	r5, #0
   14730:	movge	r1, r7
   14734:	mvnge	r0, #-2147483648	; 0x80000000
   14738:	bge	14760 <putchar_unlocked@plt+0x37b8>
   1473c:	cmn	r5, #1
   14740:	beq	14710 <putchar_unlocked@plt+0x3768>
   14744:	mov	r1, r5
   14748:	mov	r0, #-2147483648	; 0x80000000
   1474c:	bl	1511c <putchar_unlocked@plt+0x4174>
   14750:	cmp	r7, r0
   14754:	movle	r0, #0
   14758:	movgt	r0, #1
   1475c:	b	146ac <putchar_unlocked@plt+0x3704>
   14760:	bl	1511c <putchar_unlocked@plt+0x4174>
   14764:	cmp	r5, r0
   14768:	b	14754 <putchar_unlocked@plt+0x37ac>
   1476c:	cmp	r7, #0
   14770:	mov	r4, r9
   14774:	blt	14610 <putchar_unlocked@plt+0x3668>
   14778:	beq	14620 <putchar_unlocked@plt+0x3678>
   1477c:	mov	r1, r7
   14780:	mvn	r0, #-2147483648	; 0x80000000
   14784:	bl	1511c <putchar_unlocked@plt+0x4174>
   14788:	cmp	r0, r4
   1478c:	movge	r0, #0
   14790:	movlt	r0, #1
   14794:	b	145c8 <putchar_unlocked@plt+0x3620>
   14798:	push	{r4, lr}
   1479c:	bl	149d4 <putchar_unlocked@plt+0x3a2c>
   147a0:	cmp	r0, #0
   147a4:	popne	{r4, pc}
   147a8:	bl	14860 <putchar_unlocked@plt+0x38b8>
   147ac:	mov	r1, #1
   147b0:	b	14798 <putchar_unlocked@plt+0x37f0>
   147b4:	push	{r4, lr}
   147b8:	bl	149d4 <putchar_unlocked@plt+0x3a2c>
   147bc:	cmp	r0, #0
   147c0:	popne	{r4, pc}
   147c4:	bl	14860 <putchar_unlocked@plt+0x38b8>
   147c8:	mov	r1, #1
   147cc:	b	147b4 <putchar_unlocked@plt+0x380c>
   147d0:	push	{r4, r5, r6, lr}
   147d4:	mov	r4, r1
   147d8:	mov	r5, r0
   147dc:	mov	r0, r1
   147e0:	bl	143cc <putchar_unlocked@plt+0x3424>
   147e4:	mov	r2, r4
   147e8:	mov	r1, r5
   147ec:	pop	{r4, r5, r6, lr}
   147f0:	b	10d74 <memcpy@plt>
   147f4:	push	{r4, r5, r6, lr}
   147f8:	mov	r4, r1
   147fc:	mov	r5, r0
   14800:	mov	r0, r1
   14804:	bl	143e0 <putchar_unlocked@plt+0x3438>
   14808:	mov	r2, r4
   1480c:	mov	r1, r5
   14810:	pop	{r4, r5, r6, lr}
   14814:	b	10d74 <memcpy@plt>
   14818:	push	{r4, r5, r6, lr}
   1481c:	mov	r5, r0
   14820:	add	r0, r1, #1
   14824:	mov	r4, r1
   14828:	bl	143e0 <putchar_unlocked@plt+0x3438>
   1482c:	mov	r2, #0
   14830:	mov	r1, r5
   14834:	strb	r2, [r0, r4]
   14838:	mov	r2, r4
   1483c:	pop	{r4, r5, r6, lr}
   14840:	b	10d74 <memcpy@plt>
   14844:	push	{r4, lr}
   14848:	mov	r4, r0
   1484c:	bl	10eb8 <strlen@plt>
   14850:	add	r1, r0, #1
   14854:	mov	r0, r4
   14858:	pop	{r4, lr}
   1485c:	b	147d0 <putchar_unlocked@plt+0x3828>
   14860:	ldr	r3, [pc, #44]	; 14894 <putchar_unlocked@plt+0x38ec>
   14864:	push	{r4, lr}
   14868:	mov	r2, #5
   1486c:	ldr	r1, [pc, #36]	; 14898 <putchar_unlocked@plt+0x38f0>
   14870:	mov	r0, #0
   14874:	ldr	r4, [r3]
   14878:	bl	10dbc <dcgettext@plt>
   1487c:	ldr	r2, [pc, #24]	; 1489c <putchar_unlocked@plt+0x38f4>
   14880:	mov	r1, #0
   14884:	mov	r3, r0
   14888:	mov	r0, r4
   1488c:	bl	10e34 <error@plt>
   14890:	bl	10f9c <abort@plt>
   14894:	andeq	r7, r2, r4, lsl #2
   14898:	andeq	r6, r1, r4, ror #3
   1489c:	andeq	r5, r1, r8, lsr ip
   148a0:	push	{r4, r5, r6, r7, r8, lr}
   148a4:	mov	r2, r1
   148a8:	mov	r1, r0
   148ac:	mov	r0, #1
   148b0:	bl	10da4 <__vprintf_chk@plt>
   148b4:	subs	r4, r0, #0
   148b8:	bge	14900 <putchar_unlocked@plt+0x3958>
   148bc:	ldr	r3, [pc, #68]	; 14908 <putchar_unlocked@plt+0x3960>
   148c0:	ldr	r0, [r3]
   148c4:	bl	10d5c <ferror@plt>
   148c8:	subs	r7, r0, #0
   148cc:	bne	14900 <putchar_unlocked@plt+0x3958>
   148d0:	ldr	r3, [pc, #52]	; 1490c <putchar_unlocked@plt+0x3964>
   148d4:	ldr	r5, [r3]
   148d8:	bl	10ed0 <__errno_location@plt>
   148dc:	mov	r2, #5
   148e0:	ldr	r1, [pc, #40]	; 14910 <putchar_unlocked@plt+0x3968>
   148e4:	ldr	r6, [r0]
   148e8:	mov	r0, r7
   148ec:	bl	10dbc <dcgettext@plt>
   148f0:	mov	r1, r6
   148f4:	mov	r2, r0
   148f8:	mov	r0, r5
   148fc:	bl	10e34 <error@plt>
   14900:	mov	r0, r4
   14904:	pop	{r4, r5, r6, r7, r8, pc}
   14908:	andeq	r7, r2, r4, asr r1
   1490c:	andeq	r7, r2, r4, lsl #2
   14910:	strdeq	r6, [r1], -r5
   14914:	push	{r0, r1, r2, r3}
   14918:	push	{r0, r1, r2, lr}
   1491c:	add	r1, sp, #20
   14920:	ldr	r0, [sp, #16]
   14924:	str	r1, [sp, #4]
   14928:	bl	148a0 <putchar_unlocked@plt+0x38f8>
   1492c:	add	sp, sp, #12
   14930:	pop	{lr}		; (ldr lr, [sp], #4)
   14934:	add	sp, sp, #16
   14938:	bx	lr
   1493c:	push	{r4, r5, r6, r7, r8, lr}
   14940:	mov	r3, r2
   14944:	mov	r2, r1
   14948:	mov	r1, #1
   1494c:	mov	r5, r0
   14950:	bl	10e70 <__vfprintf_chk@plt>
   14954:	subs	r4, r0, #0
   14958:	bge	1499c <putchar_unlocked@plt+0x39f4>
   1495c:	mov	r0, r5
   14960:	bl	10d5c <ferror@plt>
   14964:	subs	r7, r0, #0
   14968:	bne	1499c <putchar_unlocked@plt+0x39f4>
   1496c:	ldr	r3, [pc, #48]	; 149a4 <putchar_unlocked@plt+0x39fc>
   14970:	ldr	r5, [r3]
   14974:	bl	10ed0 <__errno_location@plt>
   14978:	mov	r2, #5
   1497c:	ldr	r1, [pc, #36]	; 149a8 <putchar_unlocked@plt+0x3a00>
   14980:	ldr	r6, [r0]
   14984:	mov	r0, r7
   14988:	bl	10dbc <dcgettext@plt>
   1498c:	mov	r1, r6
   14990:	mov	r2, r0
   14994:	mov	r0, r5
   14998:	bl	10e34 <error@plt>
   1499c:	mov	r0, r4
   149a0:	pop	{r4, r5, r6, r7, r8, pc}
   149a4:	andeq	r7, r2, r4, lsl #2
   149a8:	strdeq	r6, [r1], -r5
   149ac:	push	{r1, r2, r3}
   149b0:	push	{r0, r1, lr}
   149b4:	add	r2, sp, #16
   149b8:	ldr	r1, [sp, #12]
   149bc:	str	r2, [sp, #4]
   149c0:	bl	1493c <putchar_unlocked@plt+0x3994>
   149c4:	add	sp, sp, #8
   149c8:	pop	{lr}		; (ldr lr, [sp], #4)
   149cc:	add	sp, sp, #12
   149d0:	bx	lr
   149d4:	cmp	r1, #0
   149d8:	cmpne	r0, #0
   149dc:	moveq	r1, #1
   149e0:	moveq	r0, r1
   149e4:	umull	r2, r3, r0, r1
   149e8:	adds	r3, r3, #0
   149ec:	movne	r3, #1
   149f0:	cmp	r2, #0
   149f4:	blt	14a04 <putchar_unlocked@plt+0x3a5c>
   149f8:	cmp	r3, #0
   149fc:	bne	14a04 <putchar_unlocked@plt+0x3a5c>
   14a00:	b	10cfc <calloc@plt>
   14a04:	push	{r4, lr}
   14a08:	bl	10ed0 <__errno_location@plt>
   14a0c:	mov	r3, #12
   14a10:	str	r3, [r0]
   14a14:	mov	r0, #0
   14a18:	pop	{r4, pc}
   14a1c:	cmp	r0, #0
   14a20:	mov	r3, #0
   14a24:	moveq	r0, #1
   14a28:	adds	r3, r3, #0
   14a2c:	movne	r3, #1
   14a30:	cmp	r0, #0
   14a34:	blt	14a44 <putchar_unlocked@plt+0x3a9c>
   14a38:	cmp	r3, #0
   14a3c:	bne	14a44 <putchar_unlocked@plt+0x3a9c>
   14a40:	b	10e4c <malloc@plt>
   14a44:	push	{r4, lr}
   14a48:	bl	10ed0 <__errno_location@plt>
   14a4c:	mov	r3, #12
   14a50:	str	r3, [r0]
   14a54:	mov	r0, #0
   14a58:	pop	{r4, pc}
   14a5c:	cmp	r0, #0
   14a60:	push	{r4, lr}
   14a64:	mov	r4, r1
   14a68:	bne	14a78 <putchar_unlocked@plt+0x3ad0>
   14a6c:	mov	r0, r1
   14a70:	pop	{r4, lr}
   14a74:	b	14a1c <putchar_unlocked@plt+0x3a74>
   14a78:	cmp	r1, #0
   14a7c:	bne	14a8c <putchar_unlocked@plt+0x3ae4>
   14a80:	bl	124a8 <putchar_unlocked@plt+0x1500>
   14a84:	mov	r0, #0
   14a88:	pop	{r4, pc}
   14a8c:	cmp	r1, #0
   14a90:	blt	14aa0 <putchar_unlocked@plt+0x3af8>
   14a94:	mov	r3, #0
   14a98:	cmp	r3, r3
   14a9c:	beq	14ab0 <putchar_unlocked@plt+0x3b08>
   14aa0:	bl	10ed0 <__errno_location@plt>
   14aa4:	mov	r3, #12
   14aa8:	str	r3, [r0]
   14aac:	b	14a84 <putchar_unlocked@plt+0x3adc>
   14ab0:	pop	{r4, lr}
   14ab4:	b	10dc8 <realloc@plt>
   14ab8:	push	{r4, r5, r6, r7, r8, lr}
   14abc:	mov	r6, r0
   14ac0:	ldr	r4, [pc, #144]	; 14b58 <putchar_unlocked@plt+0x3bb0>
   14ac4:	vpush	{d8}
   14ac8:	mov	r5, r1
   14acc:	ldr	r2, [r4]
   14ad0:	cmp	r2, #0
   14ad4:	bne	14ae8 <putchar_unlocked@plt+0x3b40>
   14ad8:	ldr	r1, [pc, #124]	; 14b5c <putchar_unlocked@plt+0x3bb4>
   14adc:	ldr	r0, [pc, #124]	; 14b60 <putchar_unlocked@plt+0x3bb8>
   14ae0:	bl	10f6c <newlocale@plt>
   14ae4:	str	r0, [r4]
   14ae8:	ldr	r0, [r4]
   14aec:	cmp	r0, #0
   14af0:	bne	14b0c <putchar_unlocked@plt+0x3b64>
   14af4:	vldr	d8, [pc, #84]	; 14b50 <putchar_unlocked@plt+0x3ba8>
   14af8:	cmp	r5, #0
   14afc:	strne	r6, [r5]
   14b00:	vmov.f64	d0, d8
   14b04:	vpop	{d8}
   14b08:	pop	{r4, r5, r6, r7, r8, pc}
   14b0c:	bl	10d20 <uselocale@plt>
   14b10:	subs	r7, r0, #0
   14b14:	beq	14af4 <putchar_unlocked@plt+0x3b4c>
   14b18:	mov	r1, r5
   14b1c:	mov	r0, r6
   14b20:	bl	10d8c <strtold@plt>
   14b24:	vmov.f64	d8, d0
   14b28:	bl	10ed0 <__errno_location@plt>
   14b2c:	ldr	r5, [r0]
   14b30:	mov	r4, r0
   14b34:	mov	r0, r7
   14b38:	bl	10d20 <uselocale@plt>
   14b3c:	cmp	r0, #0
   14b40:	strne	r5, [r4]
   14b44:	bne	14b00 <putchar_unlocked@plt+0x3b58>
   14b48:	bl	10f9c <abort@plt>
   14b4c:	nop			; (mov r0, r0)
	...
   14b58:	andeq	r7, r2, ip, lsr #5
   14b5c:	andeq	r6, r1, r5, lsl r2
   14b60:			; <UNDEFINED> instruction: 0x00001fbf
   14b64:	push	{r4, r5, r6, lr}
   14b68:	mov	r4, r0
   14b6c:	bl	10e10 <__fpending@plt>
   14b70:	mov	r5, r0
   14b74:	mov	r0, r4
   14b78:	bl	10e1c <ferror_unlocked@plt>
   14b7c:	mov	r6, r0
   14b80:	mov	r0, r4
   14b84:	bl	14bd4 <putchar_unlocked@plt+0x3c2c>
   14b88:	cmp	r6, #0
   14b8c:	mov	r4, r0
   14b90:	bne	14bbc <putchar_unlocked@plt+0x3c14>
   14b94:	cmp	r0, #0
   14b98:	beq	14bb4 <putchar_unlocked@plt+0x3c0c>
   14b9c:	cmp	r5, #0
   14ba0:	bne	14bcc <putchar_unlocked@plt+0x3c24>
   14ba4:	bl	10ed0 <__errno_location@plt>
   14ba8:	ldr	r4, [r0]
   14bac:	subs	r4, r4, #9
   14bb0:	mvnne	r4, #0
   14bb4:	mov	r0, r4
   14bb8:	pop	{r4, r5, r6, pc}
   14bbc:	cmp	r0, #0
   14bc0:	bne	14bcc <putchar_unlocked@plt+0x3c24>
   14bc4:	bl	10ed0 <__errno_location@plt>
   14bc8:	str	r4, [r0]
   14bcc:	mvn	r4, #0
   14bd0:	b	14bb4 <putchar_unlocked@plt+0x3c0c>
   14bd4:	push	{r0, r1, r2, r4, r5, lr}
   14bd8:	mov	r4, r0
   14bdc:	bl	10f00 <fileno@plt>
   14be0:	cmp	r0, #0
   14be4:	mov	r0, r4
   14be8:	bge	14bf8 <putchar_unlocked@plt+0x3c50>
   14bec:	add	sp, sp, #12
   14bf0:	pop	{r4, r5, lr}
   14bf4:	b	10f30 <fclose@plt>
   14bf8:	bl	10e7c <__freading@plt>
   14bfc:	cmp	r0, #0
   14c00:	bne	14c3c <putchar_unlocked@plt+0x3c94>
   14c04:	mov	r0, r4
   14c08:	bl	14c7c <putchar_unlocked@plt+0x3cd4>
   14c0c:	cmp	r0, #0
   14c10:	bne	14c70 <putchar_unlocked@plt+0x3cc8>
   14c14:	mov	r5, #0
   14c18:	mov	r0, r4
   14c1c:	bl	10f30 <fclose@plt>
   14c20:	cmp	r5, #0
   14c24:	beq	14c34 <putchar_unlocked@plt+0x3c8c>
   14c28:	bl	10ed0 <__errno_location@plt>
   14c2c:	str	r5, [r0]
   14c30:	mvn	r0, #0
   14c34:	add	sp, sp, #12
   14c38:	pop	{r4, r5, pc}
   14c3c:	mov	r0, r4
   14c40:	bl	10f00 <fileno@plt>
   14c44:	mov	r3, #1
   14c48:	str	r3, [sp]
   14c4c:	mov	r2, #0
   14c50:	mov	r3, #0
   14c54:	bl	10df8 <lseek64@plt>
   14c58:	mvn	r3, #0
   14c5c:	mvn	r2, #0
   14c60:	cmp	r1, r3
   14c64:	cmpeq	r0, r2
   14c68:	bne	14c04 <putchar_unlocked@plt+0x3c5c>
   14c6c:	b	14c14 <putchar_unlocked@plt+0x3c6c>
   14c70:	bl	10ed0 <__errno_location@plt>
   14c74:	ldr	r5, [r0]
   14c78:	b	14c18 <putchar_unlocked@plt+0x3c70>
   14c7c:	push	{r0, r1, r4, lr}
   14c80:	subs	r4, r0, #0
   14c84:	bne	14c98 <putchar_unlocked@plt+0x3cf0>
   14c88:	mov	r0, r4
   14c8c:	add	sp, sp, #8
   14c90:	pop	{r4, lr}
   14c94:	b	10d44 <fflush@plt>
   14c98:	bl	10e7c <__freading@plt>
   14c9c:	cmp	r0, #0
   14ca0:	beq	14c88 <putchar_unlocked@plt+0x3ce0>
   14ca4:	ldr	r3, [r4]
   14ca8:	tst	r3, #256	; 0x100
   14cac:	beq	14c88 <putchar_unlocked@plt+0x3ce0>
   14cb0:	mov	r3, #1
   14cb4:	str	r3, [sp]
   14cb8:	mov	r2, #0
   14cbc:	mov	r3, #0
   14cc0:	mov	r0, r4
   14cc4:	bl	14ccc <putchar_unlocked@plt+0x3d24>
   14cc8:	b	14c88 <putchar_unlocked@plt+0x3ce0>
   14ccc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14cd0:	mov	r4, r0
   14cd4:	ldmib	r0, {ip, lr}
   14cd8:	ldr	r8, [sp, #32]
   14cdc:	cmp	lr, ip
   14ce0:	bne	14d4c <putchar_unlocked@plt+0x3da4>
   14ce4:	ldr	lr, [r0, #20]
   14ce8:	ldr	ip, [r0, #16]
   14cec:	cmp	lr, ip
   14cf0:	bne	14d4c <putchar_unlocked@plt+0x3da4>
   14cf4:	ldr	r5, [r0, #36]	; 0x24
   14cf8:	cmp	r5, #0
   14cfc:	bne	14d4c <putchar_unlocked@plt+0x3da4>
   14d00:	mov	r6, r2
   14d04:	mov	r7, r3
   14d08:	bl	10f00 <fileno@plt>
   14d0c:	mov	r2, r6
   14d10:	mov	r3, r7
   14d14:	str	r8, [sp]
   14d18:	bl	10df8 <lseek64@plt>
   14d1c:	mvn	r3, #0
   14d20:	mvn	r2, #0
   14d24:	cmp	r1, r3
   14d28:	cmpeq	r0, r2
   14d2c:	mvneq	r0, #0
   14d30:	ldrne	r3, [r4]
   14d34:	strdne	r0, [r4, #80]	; 0x50
   14d38:	movne	r0, r5
   14d3c:	bicne	r3, r3, #16
   14d40:	strne	r3, [r4]
   14d44:	add	sp, sp, #8
   14d48:	pop	{r4, r5, r6, r7, r8, pc}
   14d4c:	str	r8, [sp, #32]
   14d50:	mov	r0, r4
   14d54:	add	sp, sp, #8
   14d58:	pop	{r4, r5, r6, r7, r8, lr}
   14d5c:	b	10f3c <fseeko64@plt>
   14d60:	push	{r4, lr}
   14d64:	mov	r0, #14
   14d68:	bl	10f60 <nl_langinfo@plt>
   14d6c:	ldr	r3, [pc, #24]	; 14d8c <putchar_unlocked@plt+0x3de4>
   14d70:	cmp	r0, #0
   14d74:	moveq	r0, r3
   14d78:	ldr	r3, [pc, #16]	; 14d90 <putchar_unlocked@plt+0x3de8>
   14d7c:	ldrb	r2, [r0]
   14d80:	cmp	r2, #0
   14d84:	moveq	r0, r3
   14d88:	pop	{r4, pc}
   14d8c:			; <UNDEFINED> instruction: 0x000155b6
   14d90:	muleq	r1, sp, lr
   14d94:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14d98:	subs	r5, r0, #0
   14d9c:	addeq	r5, sp, #4
   14da0:	mov	r0, r5
   14da4:	mov	r7, r2
   14da8:	mov	r6, r1
   14dac:	bl	10e28 <mbrtowc@plt>
   14db0:	cmp	r7, #0
   14db4:	cmnne	r0, #3
   14db8:	mov	r4, r0
   14dbc:	bls	14dd8 <putchar_unlocked@plt+0x3e30>
   14dc0:	mov	r0, #0
   14dc4:	bl	14e30 <putchar_unlocked@plt+0x3e88>
   14dc8:	cmp	r0, #0
   14dcc:	moveq	r4, #1
   14dd0:	ldrbeq	r3, [r6]
   14dd4:	streq	r3, [r5]
   14dd8:	mov	r0, r4
   14ddc:	add	sp, sp, #12
   14de0:	pop	{r4, r5, r6, r7, pc}
   14de4:	push	{r4, r5, r6, lr}
   14de8:	subs	r4, r2, #0
   14dec:	mov	r6, r0
   14df0:	mov	r5, r1
   14df4:	beq	14e0c <putchar_unlocked@plt+0x3e64>
   14df8:	mov	r1, r4
   14dfc:	mvn	r0, #0
   14e00:	bl	14f10 <putchar_unlocked@plt+0x3f68>
   14e04:	cmp	r0, r5
   14e08:	bcc	14e1c <putchar_unlocked@plt+0x3e74>
   14e0c:	mul	r1, r5, r4
   14e10:	mov	r0, r6
   14e14:	pop	{r4, r5, r6, lr}
   14e18:	b	14a5c <putchar_unlocked@plt+0x3ab4>
   14e1c:	bl	10ed0 <__errno_location@plt>
   14e20:	mov	r3, #12
   14e24:	str	r3, [r0]
   14e28:	mov	r0, #0
   14e2c:	pop	{r4, r5, r6, pc}
   14e30:	push	{lr}		; (str lr, [sp, #-4]!)
   14e34:	sub	sp, sp, #268	; 0x10c
   14e38:	ldr	r2, [pc, #64]	; 14e80 <putchar_unlocked@plt+0x3ed8>
   14e3c:	add	r1, sp, #4
   14e40:	bl	14e8c <putchar_unlocked@plt+0x3ee4>
   14e44:	cmp	r0, #0
   14e48:	movne	r0, #0
   14e4c:	bne	14e78 <putchar_unlocked@plt+0x3ed0>
   14e50:	ldr	r1, [pc, #44]	; 14e84 <putchar_unlocked@plt+0x3edc>
   14e54:	add	r0, sp, #4
   14e58:	bl	10d38 <strcmp@plt>
   14e5c:	cmp	r0, #0
   14e60:	beq	14e78 <putchar_unlocked@plt+0x3ed0>
   14e64:	ldr	r1, [pc, #28]	; 14e88 <putchar_unlocked@plt+0x3ee0>
   14e68:	add	r0, sp, #4
   14e6c:	bl	10d38 <strcmp@plt>
   14e70:	adds	r0, r0, #0
   14e74:	movne	r0, #1
   14e78:	add	sp, sp, #268	; 0x10c
   14e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e80:	andeq	r0, r0, r1, lsl #2
   14e84:	andeq	r6, r1, r5, lsl r2
   14e88:	andeq	r6, r1, r7, lsl r2
   14e8c:	push	{r4, r5, r6, lr}
   14e90:	mov	r5, r1
   14e94:	mov	r1, #0
   14e98:	mov	r4, r2
   14e9c:	bl	10f48 <setlocale@plt>
   14ea0:	subs	r6, r0, #0
   14ea4:	bne	14eb8 <putchar_unlocked@plt+0x3f10>
   14ea8:	cmp	r4, #0
   14eac:	strbne	r6, [r5]
   14eb0:	mov	r0, #22
   14eb4:	pop	{r4, r5, r6, pc}
   14eb8:	bl	10eb8 <strlen@plt>
   14ebc:	cmp	r4, r0
   14ec0:	bls	14edc <putchar_unlocked@plt+0x3f34>
   14ec4:	add	r2, r0, #1
   14ec8:	mov	r1, r6
   14ecc:	mov	r0, r5
   14ed0:	bl	10d74 <memcpy@plt>
   14ed4:	mov	r0, #0
   14ed8:	pop	{r4, r5, r6, pc}
   14edc:	cmp	r4, #0
   14ee0:	beq	14f00 <putchar_unlocked@plt+0x3f58>
   14ee4:	sub	r4, r4, #1
   14ee8:	mov	r2, r4
   14eec:	mov	r1, r6
   14ef0:	mov	r0, r5
   14ef4:	bl	10d74 <memcpy@plt>
   14ef8:	mov	r3, #0
   14efc:	strb	r3, [r5, r4]
   14f00:	mov	r0, #34	; 0x22
   14f04:	pop	{r4, r5, r6, pc}
   14f08:	mov	r1, #0
   14f0c:	b	10f48 <setlocale@plt>
   14f10:	subs	r2, r1, #1
   14f14:	bxeq	lr
   14f18:	bcc	150f0 <putchar_unlocked@plt+0x4148>
   14f1c:	cmp	r0, r1
   14f20:	bls	150d4 <putchar_unlocked@plt+0x412c>
   14f24:	tst	r1, r2
   14f28:	beq	150e0 <putchar_unlocked@plt+0x4138>
   14f2c:	clz	r3, r0
   14f30:	clz	r2, r1
   14f34:	sub	r3, r2, r3
   14f38:	rsbs	r3, r3, #31
   14f3c:	addne	r3, r3, r3, lsl #1
   14f40:	mov	r2, #0
   14f44:	addne	pc, pc, r3, lsl #2
   14f48:	nop			; (mov r0, r0)
   14f4c:	cmp	r0, r1, lsl #31
   14f50:	adc	r2, r2, r2
   14f54:	subcs	r0, r0, r1, lsl #31
   14f58:	cmp	r0, r1, lsl #30
   14f5c:	adc	r2, r2, r2
   14f60:	subcs	r0, r0, r1, lsl #30
   14f64:	cmp	r0, r1, lsl #29
   14f68:	adc	r2, r2, r2
   14f6c:	subcs	r0, r0, r1, lsl #29
   14f70:	cmp	r0, r1, lsl #28
   14f74:	adc	r2, r2, r2
   14f78:	subcs	r0, r0, r1, lsl #28
   14f7c:	cmp	r0, r1, lsl #27
   14f80:	adc	r2, r2, r2
   14f84:	subcs	r0, r0, r1, lsl #27
   14f88:	cmp	r0, r1, lsl #26
   14f8c:	adc	r2, r2, r2
   14f90:	subcs	r0, r0, r1, lsl #26
   14f94:	cmp	r0, r1, lsl #25
   14f98:	adc	r2, r2, r2
   14f9c:	subcs	r0, r0, r1, lsl #25
   14fa0:	cmp	r0, r1, lsl #24
   14fa4:	adc	r2, r2, r2
   14fa8:	subcs	r0, r0, r1, lsl #24
   14fac:	cmp	r0, r1, lsl #23
   14fb0:	adc	r2, r2, r2
   14fb4:	subcs	r0, r0, r1, lsl #23
   14fb8:	cmp	r0, r1, lsl #22
   14fbc:	adc	r2, r2, r2
   14fc0:	subcs	r0, r0, r1, lsl #22
   14fc4:	cmp	r0, r1, lsl #21
   14fc8:	adc	r2, r2, r2
   14fcc:	subcs	r0, r0, r1, lsl #21
   14fd0:	cmp	r0, r1, lsl #20
   14fd4:	adc	r2, r2, r2
   14fd8:	subcs	r0, r0, r1, lsl #20
   14fdc:	cmp	r0, r1, lsl #19
   14fe0:	adc	r2, r2, r2
   14fe4:	subcs	r0, r0, r1, lsl #19
   14fe8:	cmp	r0, r1, lsl #18
   14fec:	adc	r2, r2, r2
   14ff0:	subcs	r0, r0, r1, lsl #18
   14ff4:	cmp	r0, r1, lsl #17
   14ff8:	adc	r2, r2, r2
   14ffc:	subcs	r0, r0, r1, lsl #17
   15000:	cmp	r0, r1, lsl #16
   15004:	adc	r2, r2, r2
   15008:	subcs	r0, r0, r1, lsl #16
   1500c:	cmp	r0, r1, lsl #15
   15010:	adc	r2, r2, r2
   15014:	subcs	r0, r0, r1, lsl #15
   15018:	cmp	r0, r1, lsl #14
   1501c:	adc	r2, r2, r2
   15020:	subcs	r0, r0, r1, lsl #14
   15024:	cmp	r0, r1, lsl #13
   15028:	adc	r2, r2, r2
   1502c:	subcs	r0, r0, r1, lsl #13
   15030:	cmp	r0, r1, lsl #12
   15034:	adc	r2, r2, r2
   15038:	subcs	r0, r0, r1, lsl #12
   1503c:	cmp	r0, r1, lsl #11
   15040:	adc	r2, r2, r2
   15044:	subcs	r0, r0, r1, lsl #11
   15048:	cmp	r0, r1, lsl #10
   1504c:	adc	r2, r2, r2
   15050:	subcs	r0, r0, r1, lsl #10
   15054:	cmp	r0, r1, lsl #9
   15058:	adc	r2, r2, r2
   1505c:	subcs	r0, r0, r1, lsl #9
   15060:	cmp	r0, r1, lsl #8
   15064:	adc	r2, r2, r2
   15068:	subcs	r0, r0, r1, lsl #8
   1506c:	cmp	r0, r1, lsl #7
   15070:	adc	r2, r2, r2
   15074:	subcs	r0, r0, r1, lsl #7
   15078:	cmp	r0, r1, lsl #6
   1507c:	adc	r2, r2, r2
   15080:	subcs	r0, r0, r1, lsl #6
   15084:	cmp	r0, r1, lsl #5
   15088:	adc	r2, r2, r2
   1508c:	subcs	r0, r0, r1, lsl #5
   15090:	cmp	r0, r1, lsl #4
   15094:	adc	r2, r2, r2
   15098:	subcs	r0, r0, r1, lsl #4
   1509c:	cmp	r0, r1, lsl #3
   150a0:	adc	r2, r2, r2
   150a4:	subcs	r0, r0, r1, lsl #3
   150a8:	cmp	r0, r1, lsl #2
   150ac:	adc	r2, r2, r2
   150b0:	subcs	r0, r0, r1, lsl #2
   150b4:	cmp	r0, r1, lsl #1
   150b8:	adc	r2, r2, r2
   150bc:	subcs	r0, r0, r1, lsl #1
   150c0:	cmp	r0, r1
   150c4:	adc	r2, r2, r2
   150c8:	subcs	r0, r0, r1
   150cc:	mov	r0, r2
   150d0:	bx	lr
   150d4:	moveq	r0, #1
   150d8:	movne	r0, #0
   150dc:	bx	lr
   150e0:	clz	r2, r1
   150e4:	rsb	r2, r2, #31
   150e8:	lsr	r0, r0, r2
   150ec:	bx	lr
   150f0:	cmp	r0, #0
   150f4:	mvnne	r0, #0
   150f8:	b	1535c <putchar_unlocked@plt+0x43b4>
   150fc:	cmp	r1, #0
   15100:	beq	150f0 <putchar_unlocked@plt+0x4148>
   15104:	push	{r0, r1, lr}
   15108:	bl	14f10 <putchar_unlocked@plt+0x3f68>
   1510c:	pop	{r1, r2, lr}
   15110:	mul	r3, r2, r0
   15114:	sub	r1, r1, r3
   15118:	bx	lr
   1511c:	cmp	r1, #0
   15120:	beq	1532c <putchar_unlocked@plt+0x4384>
   15124:	eor	ip, r0, r1
   15128:	rsbmi	r1, r1, #0
   1512c:	subs	r2, r1, #1
   15130:	beq	152f8 <putchar_unlocked@plt+0x4350>
   15134:	movs	r3, r0
   15138:	rsbmi	r3, r0, #0
   1513c:	cmp	r3, r1
   15140:	bls	15304 <putchar_unlocked@plt+0x435c>
   15144:	tst	r1, r2
   15148:	beq	15314 <putchar_unlocked@plt+0x436c>
   1514c:	clz	r2, r3
   15150:	clz	r0, r1
   15154:	sub	r2, r0, r2
   15158:	rsbs	r2, r2, #31
   1515c:	addne	r2, r2, r2, lsl #1
   15160:	mov	r0, #0
   15164:	addne	pc, pc, r2, lsl #2
   15168:	nop			; (mov r0, r0)
   1516c:	cmp	r3, r1, lsl #31
   15170:	adc	r0, r0, r0
   15174:	subcs	r3, r3, r1, lsl #31
   15178:	cmp	r3, r1, lsl #30
   1517c:	adc	r0, r0, r0
   15180:	subcs	r3, r3, r1, lsl #30
   15184:	cmp	r3, r1, lsl #29
   15188:	adc	r0, r0, r0
   1518c:	subcs	r3, r3, r1, lsl #29
   15190:	cmp	r3, r1, lsl #28
   15194:	adc	r0, r0, r0
   15198:	subcs	r3, r3, r1, lsl #28
   1519c:	cmp	r3, r1, lsl #27
   151a0:	adc	r0, r0, r0
   151a4:	subcs	r3, r3, r1, lsl #27
   151a8:	cmp	r3, r1, lsl #26
   151ac:	adc	r0, r0, r0
   151b0:	subcs	r3, r3, r1, lsl #26
   151b4:	cmp	r3, r1, lsl #25
   151b8:	adc	r0, r0, r0
   151bc:	subcs	r3, r3, r1, lsl #25
   151c0:	cmp	r3, r1, lsl #24
   151c4:	adc	r0, r0, r0
   151c8:	subcs	r3, r3, r1, lsl #24
   151cc:	cmp	r3, r1, lsl #23
   151d0:	adc	r0, r0, r0
   151d4:	subcs	r3, r3, r1, lsl #23
   151d8:	cmp	r3, r1, lsl #22
   151dc:	adc	r0, r0, r0
   151e0:	subcs	r3, r3, r1, lsl #22
   151e4:	cmp	r3, r1, lsl #21
   151e8:	adc	r0, r0, r0
   151ec:	subcs	r3, r3, r1, lsl #21
   151f0:	cmp	r3, r1, lsl #20
   151f4:	adc	r0, r0, r0
   151f8:	subcs	r3, r3, r1, lsl #20
   151fc:	cmp	r3, r1, lsl #19
   15200:	adc	r0, r0, r0
   15204:	subcs	r3, r3, r1, lsl #19
   15208:	cmp	r3, r1, lsl #18
   1520c:	adc	r0, r0, r0
   15210:	subcs	r3, r3, r1, lsl #18
   15214:	cmp	r3, r1, lsl #17
   15218:	adc	r0, r0, r0
   1521c:	subcs	r3, r3, r1, lsl #17
   15220:	cmp	r3, r1, lsl #16
   15224:	adc	r0, r0, r0
   15228:	subcs	r3, r3, r1, lsl #16
   1522c:	cmp	r3, r1, lsl #15
   15230:	adc	r0, r0, r0
   15234:	subcs	r3, r3, r1, lsl #15
   15238:	cmp	r3, r1, lsl #14
   1523c:	adc	r0, r0, r0
   15240:	subcs	r3, r3, r1, lsl #14
   15244:	cmp	r3, r1, lsl #13
   15248:	adc	r0, r0, r0
   1524c:	subcs	r3, r3, r1, lsl #13
   15250:	cmp	r3, r1, lsl #12
   15254:	adc	r0, r0, r0
   15258:	subcs	r3, r3, r1, lsl #12
   1525c:	cmp	r3, r1, lsl #11
   15260:	adc	r0, r0, r0
   15264:	subcs	r3, r3, r1, lsl #11
   15268:	cmp	r3, r1, lsl #10
   1526c:	adc	r0, r0, r0
   15270:	subcs	r3, r3, r1, lsl #10
   15274:	cmp	r3, r1, lsl #9
   15278:	adc	r0, r0, r0
   1527c:	subcs	r3, r3, r1, lsl #9
   15280:	cmp	r3, r1, lsl #8
   15284:	adc	r0, r0, r0
   15288:	subcs	r3, r3, r1, lsl #8
   1528c:	cmp	r3, r1, lsl #7
   15290:	adc	r0, r0, r0
   15294:	subcs	r3, r3, r1, lsl #7
   15298:	cmp	r3, r1, lsl #6
   1529c:	adc	r0, r0, r0
   152a0:	subcs	r3, r3, r1, lsl #6
   152a4:	cmp	r3, r1, lsl #5
   152a8:	adc	r0, r0, r0
   152ac:	subcs	r3, r3, r1, lsl #5
   152b0:	cmp	r3, r1, lsl #4
   152b4:	adc	r0, r0, r0
   152b8:	subcs	r3, r3, r1, lsl #4
   152bc:	cmp	r3, r1, lsl #3
   152c0:	adc	r0, r0, r0
   152c4:	subcs	r3, r3, r1, lsl #3
   152c8:	cmp	r3, r1, lsl #2
   152cc:	adc	r0, r0, r0
   152d0:	subcs	r3, r3, r1, lsl #2
   152d4:	cmp	r3, r1, lsl #1
   152d8:	adc	r0, r0, r0
   152dc:	subcs	r3, r3, r1, lsl #1
   152e0:	cmp	r3, r1
   152e4:	adc	r0, r0, r0
   152e8:	subcs	r3, r3, r1
   152ec:	cmp	ip, #0
   152f0:	rsbmi	r0, r0, #0
   152f4:	bx	lr
   152f8:	teq	ip, r0
   152fc:	rsbmi	r0, r0, #0
   15300:	bx	lr
   15304:	movcc	r0, #0
   15308:	asreq	r0, ip, #31
   1530c:	orreq	r0, r0, #1
   15310:	bx	lr
   15314:	clz	r2, r1
   15318:	rsb	r2, r2, #31
   1531c:	cmp	ip, #0
   15320:	lsr	r0, r3, r2
   15324:	rsbmi	r0, r0, #0
   15328:	bx	lr
   1532c:	cmp	r0, #0
   15330:	mvngt	r0, #-2147483648	; 0x80000000
   15334:	movlt	r0, #-2147483648	; 0x80000000
   15338:	b	1535c <putchar_unlocked@plt+0x43b4>
   1533c:	cmp	r1, #0
   15340:	beq	1532c <putchar_unlocked@plt+0x4384>
   15344:	push	{r0, r1, lr}
   15348:	bl	15124 <putchar_unlocked@plt+0x417c>
   1534c:	pop	{r1, r2, lr}
   15350:	mul	r3, r2, r0
   15354:	sub	r1, r1, r3
   15358:	bx	lr
   1535c:	push	{r1, lr}
   15360:	mov	r0, #8
   15364:	bl	10d14 <raise@plt>
   15368:	pop	{r1, pc}
   1536c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15370:	mov	r7, r0
   15374:	ldr	r6, [pc, #72]	; 153c4 <putchar_unlocked@plt+0x441c>
   15378:	ldr	r5, [pc, #72]	; 153c8 <putchar_unlocked@plt+0x4420>
   1537c:	add	r6, pc, r6
   15380:	add	r5, pc, r5
   15384:	sub	r6, r6, r5
   15388:	mov	r8, r1
   1538c:	mov	r9, r2
   15390:	bl	10cdc <calloc@plt-0x20>
   15394:	asrs	r6, r6, #2
   15398:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1539c:	mov	r4, #0
   153a0:	add	r4, r4, #1
   153a4:	ldr	r3, [r5], #4
   153a8:	mov	r2, r9
   153ac:	mov	r1, r8
   153b0:	mov	r0, r7
   153b4:	blx	r3
   153b8:	cmp	r6, r4
   153bc:	bne	153a0 <putchar_unlocked@plt+0x43f8>
   153c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153c4:	andeq	r1, r1, ip, lsl #23
   153c8:	andeq	r1, r1, r4, lsl #23
   153cc:	bx	lr
   153d0:	ldr	r3, [pc, #12]	; 153e4 <putchar_unlocked@plt+0x443c>
   153d4:	mov	r1, #0
   153d8:	add	r3, pc, r3
   153dc:	ldr	r2, [r3]
   153e0:	b	10edc <__cxa_atexit@plt>
   153e4:	andeq	r1, r1, ip, lsl sp

Disassembly of section .fini:

000153e8 <.fini>:
   153e8:	push	{r3, lr}
   153ec:	pop	{r3, pc}
