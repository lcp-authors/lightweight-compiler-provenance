
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

0001099c <.init>:
   1099c:	push	{r3, lr}
   109a0:	bl	10ad0 <_start@@Base+0x3c>
   109a4:	pop	{r3, pc}

Disassembly of section .plt:

000109a8 <calloc@plt-0x14>:
   109a8:	push	{lr}		; (str lr, [sp, #-4]!)
   109ac:	ldr	lr, [pc, #4]	; 109b8 <calloc@plt-0x4>
   109b0:	add	lr, pc, lr
   109b4:	ldr	pc, [lr, #8]!
   109b8:	andeq	r2, r1, r8, asr #12

000109bc <calloc@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1608]!	; 0x648

000109c8 <strcmp@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1600]!	; 0x640

000109d4 <printf@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1592]!	; 0x638

000109e0 <__isoc99_fscanf@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1584]!	; 0x630

000109ec <fopen@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1576]!	; 0x628

000109f8 <fflush@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1568]!	; 0x620

00010a04 <free@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1560]!	; 0x618

00010a10 <fgets@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1552]!	; 0x610

00010a1c <strdup@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1544]!	; 0x608

00010a28 <puts@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1536]!	; 0x600

00010a34 <malloc@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a40 <__libc_start_main@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a4c <__gmon_start__@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a58 <feof@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a7c <fclose@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a88 <abort@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1472]!	; 0x5c0

Disassembly of section .text:

00010a94 <_start@@Base>:
   10a94:	mov	fp, #0
   10a98:	mov	lr, #0
   10a9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10aa0:	mov	r2, sp
   10aa4:	push	{r2}		; (str r2, [sp, #-4]!)
   10aa8:	push	{r0}		; (str r0, [sp, #-4]!)
   10aac:	ldr	ip, [pc, #16]	; 10ac4 <_start@@Base+0x30>
   10ab0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ab4:	ldr	r0, [pc, #12]	; 10ac8 <_start@@Base+0x34>
   10ab8:	ldr	r3, [pc, #12]	; 10acc <_start@@Base+0x38>
   10abc:	bl	10a40 <__libc_start_main@plt>
   10ac0:	bl	10a88 <abort@plt>
   10ac4:	andeq	r1, r1, r4, lsr ip
   10ac8:	andeq	r1, r1, ip, lsl r1
   10acc:	ldrdeq	r1, [r1], -r4
   10ad0:	ldr	r3, [pc, #20]	; 10aec <_start@@Base+0x58>
   10ad4:	ldr	r2, [pc, #20]	; 10af0 <_start@@Base+0x5c>
   10ad8:	add	r3, pc, r3
   10adc:	ldr	r2, [r3, r2]
   10ae0:	cmp	r2, #0
   10ae4:	bxeq	lr
   10ae8:	b	10a4c <__gmon_start__@plt>
   10aec:	andeq	r2, r1, r0, lsr #10
   10af0:	andeq	r0, r0, ip, asr r0
   10af4:	ldr	r0, [pc, #24]	; 10b14 <_start@@Base+0x80>
   10af8:	ldr	r3, [pc, #24]	; 10b18 <_start@@Base+0x84>
   10afc:	cmp	r3, r0
   10b00:	bxeq	lr
   10b04:	ldr	r3, [pc, #16]	; 10b1c <_start@@Base+0x88>
   10b08:	cmp	r3, #0
   10b0c:	bxeq	lr
   10b10:	bx	r3
   10b14:	andeq	r3, r2, r0, ror r0
   10b18:	andeq	r3, r2, r0, ror r0
   10b1c:	andeq	r0, r0, r0
   10b20:	ldr	r0, [pc, #36]	; 10b4c <_start@@Base+0xb8>
   10b24:	ldr	r1, [pc, #36]	; 10b50 <_start@@Base+0xbc>
   10b28:	sub	r1, r1, r0
   10b2c:	asr	r1, r1, #2
   10b30:	add	r1, r1, r1, lsr #31
   10b34:	asrs	r1, r1, #1
   10b38:	bxeq	lr
   10b3c:	ldr	r3, [pc, #16]	; 10b54 <_start@@Base+0xc0>
   10b40:	cmp	r3, #0
   10b44:	bxeq	lr
   10b48:	bx	r3
   10b4c:	andeq	r3, r2, r0, ror r0
   10b50:	andeq	r3, r2, r0, ror r0
   10b54:	andeq	r0, r0, r0
   10b58:	push	{r4, lr}
   10b5c:	ldr	r4, [pc, #24]	; 10b7c <_start@@Base+0xe8>
   10b60:	ldrb	r3, [r4]
   10b64:	cmp	r3, #0
   10b68:	popne	{r4, pc}
   10b6c:	bl	10af4 <_start@@Base+0x60>
   10b70:	mov	r3, #1
   10b74:	strb	r3, [r4]
   10b78:	pop	{r4, pc}
   10b7c:	andeq	r3, r2, r0, ror r0
   10b80:	b	10b20 <_start@@Base+0x8c>

00010b84 <fp_insere@@Base>:
   10b84:	str	fp, [sp, #-8]!
   10b88:	str	lr, [sp, #4]
   10b8c:	add	fp, sp, #4
   10b90:	sub	sp, sp, #32
   10b94:	str	r0, [fp, #-24]	; 0xffffffe8
   10b98:	str	r1, [fp, #-28]	; 0xffffffe4
   10b9c:	str	r2, [fp, #-32]	; 0xffffffe0
   10ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ba4:	cmp	r3, #0
   10ba8:	bne	10bb4 <fp_insere@@Base+0x30>
   10bac:	mvn	r3, #0
   10bb0:	b	10cdc <fp_insere@@Base+0x158>
   10bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bb8:	ldr	r2, [r3]
   10bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bc0:	ldr	r3, [r3, #4]
   10bc4:	cmp	r2, r3
   10bc8:	bne	10bd4 <fp_insere@@Base+0x50>
   10bcc:	mov	r3, #0
   10bd0:	b	10cdc <fp_insere@@Base+0x158>
   10bd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10bdc:	bl	117a4 <elemento_cria@@Base>
   10be0:	str	r0, [fp, #-16]
   10be4:	mov	r3, #0
   10be8:	str	r3, [fp, #-8]
   10bec:	b	10c2c <fp_insere@@Base+0xa8>
   10bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bf4:	ldr	r2, [r3, #8]
   10bf8:	ldr	r3, [fp, #-8]
   10bfc:	lsl	r3, r3, #2
   10c00:	add	r3, r2, r3
   10c04:	ldr	r3, [r3]
   10c08:	ldr	r1, [fp, #-16]
   10c0c:	mov	r0, r3
   10c10:	bl	1181c <maior_que@@Base>
   10c14:	mov	r3, r0
   10c18:	cmp	r3, #0
   10c1c:	beq	10c44 <fp_insere@@Base+0xc0>
   10c20:	ldr	r3, [fp, #-8]
   10c24:	add	r3, r3, #1
   10c28:	str	r3, [fp, #-8]
   10c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c30:	ldr	r3, [r3]
   10c34:	ldr	r2, [fp, #-8]
   10c38:	cmp	r2, r3
   10c3c:	blt	10bf0 <fp_insere@@Base+0x6c>
   10c40:	b	10c48 <fp_insere@@Base+0xc4>
   10c44:	nop	{0}
   10c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c4c:	ldr	r3, [r3]
   10c50:	str	r3, [fp, #-12]
   10c54:	b	10c98 <fp_insere@@Base+0x114>
   10c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c5c:	ldr	r2, [r3, #8]
   10c60:	ldr	r3, [fp, #-12]
   10c64:	lsl	r3, r3, #2
   10c68:	add	r2, r2, r3
   10c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c70:	ldr	r1, [r3, #8]
   10c74:	ldr	r3, [fp, #-12]
   10c78:	add	r3, r3, #1
   10c7c:	lsl	r3, r3, #2
   10c80:	add	r3, r1, r3
   10c84:	ldr	r2, [r2]
   10c88:	str	r2, [r3]
   10c8c:	ldr	r3, [fp, #-12]
   10c90:	sub	r3, r3, #1
   10c94:	str	r3, [fp, #-12]
   10c98:	ldr	r2, [fp, #-12]
   10c9c:	ldr	r3, [fp, #-8]
   10ca0:	cmp	r2, r3
   10ca4:	bge	10c58 <fp_insere@@Base+0xd4>
   10ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cac:	ldr	r2, [r3, #8]
   10cb0:	ldr	r3, [fp, #-8]
   10cb4:	lsl	r3, r3, #2
   10cb8:	add	r3, r2, r3
   10cbc:	ldr	r2, [fp, #-16]
   10cc0:	str	r2, [r3]
   10cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cc8:	ldr	r3, [r3]
   10ccc:	add	r2, r3, #1
   10cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cd4:	str	r2, [r3]
   10cd8:	mov	r3, #1
   10cdc:	mov	r0, r3
   10ce0:	sub	sp, fp, #4
   10ce4:	ldr	fp, [sp]
   10ce8:	add	sp, sp, #4
   10cec:	pop	{pc}		; (ldr pc, [sp], #4)

00010cf0 <fp_remove@@Base>:
   10cf0:	push	{fp}		; (str fp, [sp, #-4]!)
   10cf4:	add	fp, sp, #0
   10cf8:	sub	sp, sp, #20
   10cfc:	str	r0, [fp, #-16]
   10d00:	ldr	r3, [fp, #-16]
   10d04:	cmp	r3, #0
   10d08:	beq	10d1c <fp_remove@@Base+0x2c>
   10d0c:	ldr	r3, [fp, #-16]
   10d10:	ldr	r3, [r3]
   10d14:	cmp	r3, #0
   10d18:	bne	10d24 <fp_remove@@Base+0x34>
   10d1c:	mov	r3, #0
   10d20:	b	10db0 <fp_remove@@Base+0xc0>
   10d24:	ldr	r3, [fp, #-16]
   10d28:	ldr	r3, [r3, #8]
   10d2c:	ldr	r3, [r3]
   10d30:	str	r3, [fp, #-12]
   10d34:	mov	r3, #0
   10d38:	str	r3, [fp, #-8]
   10d3c:	b	10d80 <fp_remove@@Base+0x90>
   10d40:	ldr	r3, [fp, #-16]
   10d44:	ldr	r2, [r3, #8]
   10d48:	ldr	r3, [fp, #-8]
   10d4c:	add	r3, r3, #1
   10d50:	lsl	r3, r3, #2
   10d54:	add	r2, r2, r3
   10d58:	ldr	r3, [fp, #-16]
   10d5c:	ldr	r1, [r3, #8]
   10d60:	ldr	r3, [fp, #-8]
   10d64:	lsl	r3, r3, #2
   10d68:	add	r3, r1, r3
   10d6c:	ldr	r2, [r2]
   10d70:	str	r2, [r3]
   10d74:	ldr	r3, [fp, #-8]
   10d78:	add	r3, r3, #1
   10d7c:	str	r3, [fp, #-8]
   10d80:	ldr	r3, [fp, #-16]
   10d84:	ldr	r3, [r3]
   10d88:	ldr	r2, [fp, #-8]
   10d8c:	cmp	r2, r3
   10d90:	blt	10d40 <fp_remove@@Base+0x50>
   10d94:	ldr	r3, [fp, #-16]
   10d98:	ldr	r3, [r3]
   10d9c:	sub	r2, r3, #1
   10da0:	ldr	r3, [fp, #-16]
   10da4:	str	r2, [r3]
   10da8:	ldr	r3, [fp, #-12]
   10dac:	ldr	r3, [r3, #4]
   10db0:	mov	r0, r3
   10db4:	add	sp, fp, #0
   10db8:	pop	{fp}		; (ldr fp, [sp], #4)
   10dbc:	bx	lr

00010dc0 <fp_carrega@@Base>:
   10dc0:	str	fp, [sp, #-8]!
   10dc4:	str	lr, [sp, #4]
   10dc8:	add	fp, sp, #4
   10dcc:	sub	sp, sp, #272	; 0x110
   10dd0:	str	r0, [fp, #-272]	; 0xfffffef0
   10dd4:	str	r1, [fp, #-276]	; 0xfffffeec
   10dd8:	ldr	r3, [pc, #196]	; 10ea4 <fp_carrega@@Base+0xe4>
   10ddc:	add	r3, pc, r3
   10de0:	mov	r1, r3
   10de4:	ldr	r0, [fp, #-276]	; 0xfffffeec
   10de8:	bl	109ec <fopen@plt>
   10dec:	str	r0, [fp, #-8]
   10df0:	ldr	r3, [fp, #-8]
   10df4:	cmp	r3, #0
   10df8:	bne	10e78 <fp_carrega@@Base+0xb8>
   10dfc:	ldr	r3, [pc, #164]	; 10ea8 <fp_carrega@@Base+0xe8>
   10e00:	add	r3, pc, r3
   10e04:	mov	r0, r3
   10e08:	bl	10a28 <puts@plt>
   10e0c:	b	10e94 <fp_carrega@@Base+0xd4>
   10e10:	sub	r3, fp, #268	; 0x10c
   10e14:	mov	r2, r3
   10e18:	ldr	r3, [pc, #140]	; 10eac <fp_carrega@@Base+0xec>
   10e1c:	add	r3, pc, r3
   10e20:	mov	r1, r3
   10e24:	ldr	r0, [fp, #-8]
   10e28:	bl	109e0 <__isoc99_fscanf@plt>
   10e2c:	sub	r3, fp, #264	; 0x108
   10e30:	ldr	r2, [fp, #-8]
   10e34:	mov	r1, #256	; 0x100
   10e38:	mov	r0, r3
   10e3c:	bl	10a10 <fgets@plt>
   10e40:	sub	r3, fp, #264	; 0x108
   10e44:	mov	r0, r3
   10e48:	bl	10a64 <strlen@plt>
   10e4c:	mov	r3, r0
   10e50:	sub	r3, r3, #1
   10e54:	sub	r2, fp, #4
   10e58:	add	r3, r2, r3
   10e5c:	mov	r2, #0
   10e60:	strb	r2, [r3, #-260]	; 0xfffffefc
   10e64:	ldr	r2, [fp, #-268]	; 0xfffffef4
   10e68:	sub	r3, fp, #264	; 0x108
   10e6c:	mov	r1, r3
   10e70:	ldr	r0, [fp, #-272]	; 0xfffffef0
   10e74:	bl	10b84 <fp_insere@@Base>
   10e78:	ldr	r0, [fp, #-8]
   10e7c:	bl	10a58 <feof@plt>
   10e80:	mov	r3, r0
   10e84:	cmp	r3, #0
   10e88:	beq	10e10 <fp_carrega@@Base+0x50>
   10e8c:	ldr	r0, [fp, #-8]
   10e90:	bl	10a7c <fclose@plt>
   10e94:	sub	sp, fp, #4
   10e98:	ldr	fp, [sp]
   10e9c:	add	sp, sp, #4
   10ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ea4:	andeq	r0, r0, r0, ror #28
   10ea8:	andeq	r0, r0, r0, asr #28
   10eac:	andeq	r0, r0, r8, asr #28

00010eb0 <heap_insere@@Base>:
   10eb0:	str	fp, [sp, #-8]!
   10eb4:	str	lr, [sp, #4]
   10eb8:	add	fp, sp, #4
   10ebc:	sub	sp, sp, #32
   10ec0:	str	r0, [fp, #-24]	; 0xffffffe8
   10ec4:	str	r1, [fp, #-28]	; 0xffffffe4
   10ec8:	str	r2, [fp, #-32]	; 0xffffffe0
   10ecc:	str	r3, [fp, #-36]	; 0xffffffdc
   10ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ed4:	ldr	r2, [r3]
   10ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10edc:	ldr	r3, [r3, #4]
   10ee0:	cmp	r2, r3
   10ee4:	bne	10ef0 <heap_insere@@Base+0x40>
   10ee8:	mov	r3, #0
   10eec:	b	10fec <heap_insere@@Base+0x13c>
   10ef0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10ef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10ef8:	bl	117a4 <elemento_cria@@Base>
   10efc:	str	r0, [fp, #-16]
   10f00:	mov	r3, #0
   10f04:	str	r3, [fp, #-8]
   10f08:	b	10f18 <heap_insere@@Base+0x68>
   10f0c:	ldr	r3, [fp, #-8]
   10f10:	add	r3, r3, #1
   10f14:	str	r3, [fp, #-8]
   10f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f1c:	ldr	r3, [r3]
   10f20:	ldr	r2, [fp, #-8]
   10f24:	cmp	r2, r3
   10f28:	bge	10f60 <heap_insere@@Base+0xb0>
   10f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f30:	ldr	r2, [r3, #8]
   10f34:	ldr	r3, [fp, #-8]
   10f38:	lsl	r3, r3, #2
   10f3c:	add	r3, r2, r3
   10f40:	ldr	r2, [r3]
   10f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f48:	ldr	r1, [fp, #-16]
   10f4c:	mov	r0, r2
   10f50:	blx	r3
   10f54:	mov	r3, r0
   10f58:	cmp	r3, #1
   10f5c:	bne	10f0c <heap_insere@@Base+0x5c>
   10f60:	ldr	r3, [fp, #-8]
   10f64:	str	r3, [fp, #-12]
   10f68:	b	10fac <heap_insere@@Base+0xfc>
   10f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f70:	ldr	r2, [r3, #8]
   10f74:	ldr	r3, [fp, #-12]
   10f78:	lsl	r3, r3, #2
   10f7c:	add	r2, r2, r3
   10f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f84:	ldr	r1, [r3, #8]
   10f88:	ldr	r3, [fp, #-12]
   10f8c:	add	r3, r3, #1
   10f90:	lsl	r3, r3, #2
   10f94:	add	r3, r1, r3
   10f98:	ldr	r2, [r2]
   10f9c:	str	r2, [r3]
   10fa0:	ldr	r3, [fp, #-12]
   10fa4:	sub	r3, r3, #1
   10fa8:	str	r3, [fp, #-12]
   10fac:	ldr	r3, [fp, #-12]
   10fb0:	cmp	r3, #0
   10fb4:	bgt	10f6c <heap_insere@@Base+0xbc>
   10fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fbc:	ldr	r2, [r3, #8]
   10fc0:	ldr	r3, [fp, #-8]
   10fc4:	lsl	r3, r3, #2
   10fc8:	add	r3, r2, r3
   10fcc:	ldr	r2, [fp, #-16]
   10fd0:	str	r2, [r3]
   10fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fd8:	ldr	r3, [r3]
   10fdc:	add	r2, r3, #1
   10fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fe4:	str	r2, [r3]
   10fe8:	ldr	r3, [fp, #-8]
   10fec:	mov	r0, r3
   10ff0:	sub	sp, fp, #4
   10ff4:	ldr	fp, [sp]
   10ff8:	add	sp, sp, #4
   10ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00011000 <heap_remove@@Base>:
   11000:	push	{fp}		; (str fp, [sp, #-4]!)
   11004:	add	fp, sp, #0
   11008:	sub	sp, sp, #12
   1100c:	str	r0, [fp, #-8]
   11010:	str	r1, [fp, #-12]
   11014:	mov	r3, #0
   11018:	mov	r0, r3
   1101c:	add	sp, fp, #0
   11020:	pop	{fp}		; (ldr fp, [sp], #4)
   11024:	bx	lr

00011028 <heap_carrega@@Base>:
   11028:	str	fp, [sp, #-8]!
   1102c:	str	lr, [sp, #4]
   11030:	add	fp, sp, #4
   11034:	sub	sp, sp, #280	; 0x118
   11038:	str	r0, [fp, #-272]	; 0xfffffef0
   1103c:	str	r1, [fp, #-276]	; 0xfffffeec
   11040:	str	r2, [fp, #-280]	; 0xfffffee8
   11044:	ldr	r3, [pc, #196]	; 11110 <heap_carrega@@Base+0xe8>
   11048:	add	r3, pc, r3
   1104c:	mov	r1, r3
   11050:	ldr	r0, [fp, #-280]	; 0xfffffee8
   11054:	bl	109ec <fopen@plt>
   11058:	str	r0, [fp, #-8]
   1105c:	ldr	r3, [fp, #-8]
   11060:	cmp	r3, #0
   11064:	bne	110e4 <heap_carrega@@Base+0xbc>
   11068:	ldr	r3, [pc, #164]	; 11114 <heap_carrega@@Base+0xec>
   1106c:	add	r3, pc, r3
   11070:	mov	r0, r3
   11074:	bl	10a28 <puts@plt>
   11078:	b	11100 <heap_carrega@@Base+0xd8>
   1107c:	sub	r3, fp, #268	; 0x10c
   11080:	mov	r2, r3
   11084:	ldr	r3, [pc, #140]	; 11118 <heap_carrega@@Base+0xf0>
   11088:	add	r3, pc, r3
   1108c:	mov	r1, r3
   11090:	ldr	r0, [fp, #-8]
   11094:	bl	109e0 <__isoc99_fscanf@plt>
   11098:	sub	r3, fp, #264	; 0x108
   1109c:	ldr	r2, [fp, #-8]
   110a0:	mov	r1, #256	; 0x100
   110a4:	mov	r0, r3
   110a8:	bl	10a10 <fgets@plt>
   110ac:	sub	r3, fp, #264	; 0x108
   110b0:	mov	r0, r3
   110b4:	bl	10a64 <strlen@plt>
   110b8:	mov	r3, r0
   110bc:	sub	r3, r3, #1
   110c0:	sub	r2, fp, #4
   110c4:	add	r3, r2, r3
   110c8:	mov	r2, #0
   110cc:	strb	r2, [r3, #-260]	; 0xfffffefc
   110d0:	ldr	r3, [fp, #-268]	; 0xfffffef4
   110d4:	sub	r2, fp, #264	; 0x108
   110d8:	ldr	r1, [fp, #-276]	; 0xfffffeec
   110dc:	ldr	r0, [fp, #-272]	; 0xfffffef0
   110e0:	bl	10eb0 <heap_insere@@Base>
   110e4:	ldr	r0, [fp, #-8]
   110e8:	bl	10a58 <feof@plt>
   110ec:	mov	r3, r0
   110f0:	cmp	r3, #0
   110f4:	beq	1107c <heap_carrega@@Base+0x54>
   110f8:	ldr	r0, [fp, #-8]
   110fc:	bl	10a7c <fclose@plt>
   11100:	sub	sp, fp, #4
   11104:	ldr	fp, [sp]
   11108:	add	sp, sp, #4
   1110c:	pop	{pc}		; (ldr pc, [sp], #4)
   11110:	strdeq	r0, [r0], -r4
   11114:	ldrdeq	r0, [r0], -r4
   11118:	ldrdeq	r0, [r0], -ip

0001111c <main@@Base>:
   1111c:	str	r4, [sp, #-12]!
   11120:	str	fp, [sp, #4]
   11124:	str	lr, [sp, #8]
   11128:	add	fp, sp, #8
   1112c:	sub	sp, sp, #204	; 0xcc
   11130:	str	r0, [fp, #-208]	; 0xffffff30
   11134:	str	r1, [fp, #-212]	; 0xffffff2c
   11138:	ldr	r4, [pc, #1168]	; 115d0 <main@@Base+0x4b4>
   1113c:	add	r4, pc, r4
   11140:	mov	r0, #42	; 0x2a
   11144:	bl	11650 <vetor_cria@@Base>
   11148:	str	r0, [fp, #-20]	; 0xffffffec
   1114c:	ldr	r3, [pc, #1152]	; 115d4 <main@@Base+0x4b8>
   11150:	add	r3, pc, r3
   11154:	mov	r0, r3
   11158:	bl	10a28 <puts@plt>
   1115c:	ldr	r3, [pc, #1140]	; 115d8 <main@@Base+0x4bc>
   11160:	add	r3, pc, r3
   11164:	mov	r1, r3
   11168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1116c:	bl	10dc0 <fp_carrega@@Base>
   11170:	ldr	r3, [pc, #1124]	; 115dc <main@@Base+0x4c0>
   11174:	ldr	r3, [r4, r3]
   11178:	ldr	r3, [r3]
   1117c:	mov	r1, r3
   11180:	ldr	r3, [pc, #1112]	; 115e0 <main@@Base+0x4c4>
   11184:	add	r3, pc, r3
   11188:	mov	r0, r3
   1118c:	bl	109d4 <printf@plt>
   11190:	ldr	r0, [fp, #-20]	; 0xffffffec
   11194:	bl	119bc <vetor_imprime@@Base>
   11198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1119c:	ldr	r3, [r3]
   111a0:	cmp	r3, #42	; 0x2a
   111a4:	beq	111c0 <main@@Base+0xa4>
   111a8:	ldr	r3, [pc, #1076]	; 115e4 <main@@Base+0x4c8>
   111ac:	add	r3, pc, r3
   111b0:	mov	r0, r3
   111b4:	bl	10a28 <puts@plt>
   111b8:	mov	r3, #1
   111bc:	b	115b8 <main@@Base+0x49c>
   111c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   111c4:	bl	10cf0 <fp_remove@@Base>
   111c8:	mov	r3, r0
   111cc:	mov	r1, r3
   111d0:	ldr	r3, [pc, #1040]	; 115e8 <main@@Base+0x4cc>
   111d4:	add	r3, pc, r3
   111d8:	mov	r0, r3
   111dc:	bl	109c8 <strcmp@plt>
   111e0:	mov	r3, r0
   111e4:	cmp	r3, #0
   111e8:	beq	11204 <main@@Base+0xe8>
   111ec:	ldr	r3, [pc, #1016]	; 115ec <main@@Base+0x4d0>
   111f0:	add	r3, pc, r3
   111f4:	mov	r0, r3
   111f8:	bl	10a28 <puts@plt>
   111fc:	mov	r3, #1
   11200:	b	115b8 <main@@Base+0x49c>
   11204:	ldr	r3, [pc, #976]	; 115dc <main@@Base+0x4c0>
   11208:	ldr	r3, [r4, r3]
   1120c:	mov	r2, #0
   11210:	str	r2, [r3]
   11214:	ldr	r0, [fp, #-20]	; 0xffffffec
   11218:	bl	10cf0 <fp_remove@@Base>
   1121c:	ldr	r3, [pc, #952]	; 115dc <main@@Base+0x4c0>
   11220:	ldr	r3, [r4, r3]
   11224:	ldr	r3, [r3]
   11228:	mov	r1, r3
   1122c:	ldr	r3, [pc, #956]	; 115f0 <main@@Base+0x4d4>
   11230:	add	r3, pc, r3
   11234:	mov	r0, r3
   11238:	bl	109d4 <printf@plt>
   1123c:	ldr	r3, [pc, #920]	; 115dc <main@@Base+0x4c0>
   11240:	ldr	r3, [r4, r3]
   11244:	mov	r2, #0
   11248:	str	r2, [r3]
   1124c:	mov	r2, #99	; 0x63
   11250:	ldr	r3, [pc, #924]	; 115f4 <main@@Base+0x4d8>
   11254:	add	r3, pc, r3
   11258:	mov	r1, r3
   1125c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11260:	bl	10b84 <fp_insere@@Base>
   11264:	ldr	r3, [pc, #880]	; 115dc <main@@Base+0x4c0>
   11268:	ldr	r3, [r4, r3]
   1126c:	ldr	r3, [r3]
   11270:	mov	r1, r3
   11274:	ldr	r3, [pc, #892]	; 115f8 <main@@Base+0x4dc>
   11278:	add	r3, pc, r3
   1127c:	mov	r0, r3
   11280:	bl	109d4 <printf@plt>
   11284:	ldr	r0, [fp, #-20]	; 0xffffffec
   11288:	bl	10cf0 <fp_remove@@Base>
   1128c:	ldr	r3, [pc, #840]	; 115dc <main@@Base+0x4c0>
   11290:	ldr	r3, [r4, r3]
   11294:	mov	r2, #0
   11298:	str	r2, [r3]
   1129c:	mov	r2, #0
   112a0:	ldr	r3, [pc, #852]	; 115fc <main@@Base+0x4e0>
   112a4:	add	r3, pc, r3
   112a8:	mov	r1, r3
   112ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   112b0:	bl	10b84 <fp_insere@@Base>
   112b4:	ldr	r3, [pc, #800]	; 115dc <main@@Base+0x4c0>
   112b8:	ldr	r3, [r4, r3]
   112bc:	ldr	r3, [r3]
   112c0:	mov	r1, r3
   112c4:	ldr	r3, [pc, #820]	; 11600 <main@@Base+0x4e4>
   112c8:	add	r3, pc, r3
   112cc:	mov	r0, r3
   112d0:	bl	109d4 <printf@plt>
   112d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   112d8:	bl	10cf0 <fp_remove@@Base>
   112dc:	ldr	r3, [pc, #760]	; 115dc <main@@Base+0x4c0>
   112e0:	ldr	r3, [r4, r3]
   112e4:	mov	r2, #0
   112e8:	str	r2, [r3]
   112ec:	mov	r2, #42	; 0x2a
   112f0:	ldr	r3, [pc, #780]	; 11604 <main@@Base+0x4e8>
   112f4:	add	r3, pc, r3
   112f8:	mov	r1, r3
   112fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11300:	bl	10b84 <fp_insere@@Base>
   11304:	ldr	r3, [pc, #720]	; 115dc <main@@Base+0x4c0>
   11308:	ldr	r3, [r4, r3]
   1130c:	ldr	r3, [r3]
   11310:	mov	r1, r3
   11314:	ldr	r3, [pc, #748]	; 11608 <main@@Base+0x4ec>
   11318:	add	r3, pc, r3
   1131c:	mov	r0, r3
   11320:	bl	109d4 <printf@plt>
   11324:	ldr	r3, [pc, #736]	; 1160c <main@@Base+0x4f0>
   11328:	add	r3, pc, r3
   1132c:	mov	r0, r3
   11330:	bl	10a28 <puts@plt>
   11334:	mov	r0, #42	; 0x2a
   11338:	bl	116f8 <vetor_criaHeap@@Base>
   1133c:	str	r0, [fp, #-24]	; 0xffffffe8
   11340:	ldr	r3, [pc, #712]	; 11610 <main@@Base+0x4f4>
   11344:	ldr	r3, [r4, r3]
   11348:	str	r3, [fp, #-28]	; 0xffffffe4
   1134c:	ldr	r3, [pc, #704]	; 11614 <main@@Base+0x4f8>
   11350:	add	r3, pc, r3
   11354:	mov	r2, r3
   11358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1135c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11360:	bl	11028 <heap_carrega@@Base>
   11364:	ldr	r3, [pc, #624]	; 115dc <main@@Base+0x4c0>
   11368:	ldr	r3, [r4, r3]
   1136c:	ldr	r3, [r3]
   11370:	mov	r1, r3
   11374:	ldr	r3, [pc, #668]	; 11618 <main@@Base+0x4fc>
   11378:	add	r3, pc, r3
   1137c:	mov	r0, r3
   11380:	bl	109d4 <printf@plt>
   11384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11388:	bl	11ac4 <vetor_imprimeHeap@@Base>
   1138c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11390:	ldr	r3, [r3]
   11394:	cmp	r3, #42	; 0x2a
   11398:	beq	113b4 <main@@Base+0x298>
   1139c:	ldr	r3, [pc, #632]	; 1161c <main@@Base+0x500>
   113a0:	add	r3, pc, r3
   113a4:	mov	r0, r3
   113a8:	bl	10a28 <puts@plt>
   113ac:	mov	r3, #1
   113b0:	b	115b8 <main@@Base+0x49c>
   113b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   113b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113bc:	bl	11000 <heap_remove@@Base>
   113c0:	mov	r3, r0
   113c4:	mov	r1, r3
   113c8:	ldr	r3, [pc, #592]	; 11620 <main@@Base+0x504>
   113cc:	add	r3, pc, r3
   113d0:	mov	r0, r3
   113d4:	bl	109c8 <strcmp@plt>
   113d8:	mov	r3, r0
   113dc:	cmp	r3, #0
   113e0:	beq	113fc <main@@Base+0x2e0>
   113e4:	ldr	r3, [pc, #568]	; 11624 <main@@Base+0x508>
   113e8:	add	r3, pc, r3
   113ec:	mov	r0, r3
   113f0:	bl	10a28 <puts@plt>
   113f4:	mov	r3, #1
   113f8:	b	115b8 <main@@Base+0x49c>
   113fc:	ldr	r3, [pc, #472]	; 115dc <main@@Base+0x4c0>
   11400:	ldr	r3, [r4, r3]
   11404:	mov	r2, #0
   11408:	str	r2, [r3]
   1140c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11414:	bl	11000 <heap_remove@@Base>
   11418:	ldr	r3, [pc, #444]	; 115dc <main@@Base+0x4c0>
   1141c:	ldr	r3, [r4, r3]
   11420:	ldr	r3, [r3]
   11424:	mov	r1, r3
   11428:	ldr	r3, [pc, #504]	; 11628 <main@@Base+0x50c>
   1142c:	add	r3, pc, r3
   11430:	mov	r0, r3
   11434:	bl	109d4 <printf@plt>
   11438:	ldr	r3, [pc, #412]	; 115dc <main@@Base+0x4c0>
   1143c:	ldr	r3, [r4, r3]
   11440:	mov	r2, #0
   11444:	str	r2, [r3]
   11448:	mov	r3, #99	; 0x63
   1144c:	ldr	r2, [pc, #472]	; 1162c <main@@Base+0x510>
   11450:	add	r2, pc, r2
   11454:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1145c:	bl	10eb0 <heap_insere@@Base>
   11460:	ldr	r3, [pc, #372]	; 115dc <main@@Base+0x4c0>
   11464:	ldr	r3, [r4, r3]
   11468:	ldr	r3, [r3]
   1146c:	mov	r1, r3
   11470:	ldr	r3, [pc, #440]	; 11630 <main@@Base+0x514>
   11474:	add	r3, pc, r3
   11478:	mov	r0, r3
   1147c:	bl	109d4 <printf@plt>
   11480:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11488:	bl	11000 <heap_remove@@Base>
   1148c:	ldr	r3, [pc, #328]	; 115dc <main@@Base+0x4c0>
   11490:	ldr	r3, [r4, r3]
   11494:	mov	r2, #0
   11498:	str	r2, [r3]
   1149c:	mov	r3, #0
   114a0:	ldr	r2, [pc, #396]	; 11634 <main@@Base+0x518>
   114a4:	add	r2, pc, r2
   114a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114b0:	bl	10eb0 <heap_insere@@Base>
   114b4:	ldr	r3, [pc, #288]	; 115dc <main@@Base+0x4c0>
   114b8:	ldr	r3, [r4, r3]
   114bc:	ldr	r3, [r3]
   114c0:	mov	r1, r3
   114c4:	ldr	r3, [pc, #364]	; 11638 <main@@Base+0x51c>
   114c8:	add	r3, pc, r3
   114cc:	mov	r0, r3
   114d0:	bl	109d4 <printf@plt>
   114d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114dc:	bl	11000 <heap_remove@@Base>
   114e0:	ldr	r3, [pc, #244]	; 115dc <main@@Base+0x4c0>
   114e4:	ldr	r3, [r4, r3]
   114e8:	mov	r2, #0
   114ec:	str	r2, [r3]
   114f0:	mov	r3, #42	; 0x2a
   114f4:	ldr	r2, [pc, #320]	; 1163c <main@@Base+0x520>
   114f8:	add	r2, pc, r2
   114fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11504:	bl	10eb0 <heap_insere@@Base>
   11508:	ldr	r3, [pc, #204]	; 115dc <main@@Base+0x4c0>
   1150c:	ldr	r3, [r4, r3]
   11510:	ldr	r3, [r3]
   11514:	mov	r1, r3
   11518:	ldr	r3, [pc, #288]	; 11640 <main@@Base+0x524>
   1151c:	add	r3, pc, r3
   11520:	mov	r0, r3
   11524:	bl	109d4 <printf@plt>
   11528:	mov	r0, #42	; 0x2a
   1152c:	bl	116f8 <vetor_criaHeap@@Base>
   11530:	str	r0, [fp, #-24]	; 0xffffffe8
   11534:	ldr	r3, [pc, #264]	; 11644 <main@@Base+0x528>
   11538:	ldr	r3, [r4, r3]
   1153c:	str	r3, [fp, #-32]	; 0xffffffe0
   11540:	ldr	r3, [pc, #256]	; 11648 <main@@Base+0x52c>
   11544:	add	r3, pc, r3
   11548:	mov	r2, r3
   1154c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11554:	bl	11028 <heap_carrega@@Base>
   11558:	ldr	r3, [pc, #124]	; 115dc <main@@Base+0x4c0>
   1155c:	ldr	r3, [r4, r3]
   11560:	ldr	r3, [r3]
   11564:	mov	r1, r3
   11568:	ldr	r3, [pc, #220]	; 1164c <main@@Base+0x530>
   1156c:	add	r3, pc, r3
   11570:	mov	r0, r3
   11574:	bl	109d4 <printf@plt>
   11578:	mov	r3, #0
   1157c:	str	r3, [fp, #-16]
   11580:	b	115a8 <main@@Base+0x48c>
   11584:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1158c:	bl	11000 <heap_remove@@Base>
   11590:	mov	r3, r0
   11594:	mov	r0, r3
   11598:	bl	10a28 <puts@plt>
   1159c:	ldr	r3, [fp, #-16]
   115a0:	add	r3, r3, #1
   115a4:	str	r3, [fp, #-16]
   115a8:	ldr	r3, [fp, #-16]
   115ac:	cmp	r3, #41	; 0x29
   115b0:	ble	11584 <main@@Base+0x468>
   115b4:	mov	r3, #0
   115b8:	mov	r0, r3
   115bc:	sub	sp, fp, #8
   115c0:	ldr	r4, [sp]
   115c4:	ldr	fp, [sp, #4]
   115c8:	add	sp, sp, #8
   115cc:	pop	{pc}		; (ldr pc, [sp], #4)
   115d0:			; <UNDEFINED> instruction: 0x00011ebc
   115d4:	andeq	r0, r0, r8, lsl fp
   115d8:	andeq	r0, r0, r0, asr #22
   115dc:	andeq	r0, r0, r8, asr r0
   115e0:	andeq	r0, r0, r8, lsr #22
   115e4:	andeq	r0, r0, r8, lsr fp
   115e8:	andeq	r0, r0, r8, lsr fp
   115ec:	andeq	r0, r0, r0, lsr fp
   115f0:	andeq	r0, r0, r4, lsr fp
   115f4:	andeq	r0, r0, r4, asr #22
   115f8:	andeq	r0, r0, r0, lsr fp
   115fc:	strdeq	r0, [r0], -r4
   11600:	andeq	r0, r0, r8, lsr #22
   11604:	andeq	r0, r0, r4, lsr #21
   11608:	andeq	r0, r0, r0, lsr #22
   1160c:	andeq	r0, r0, r8, asr fp
   11610:	andeq	r0, r0, r4, asr r0
   11614:	andeq	r0, r0, r0, asr r9
   11618:	andeq	r0, r0, r0, asr #22
   1161c:	andeq	r0, r0, r0, asr fp
   11620:	andeq	r0, r0, r0, asr #18
   11624:	andeq	r0, r0, r8, lsr r9
   11628:	andeq	r0, r0, ip, ror #21
   1162c:	andeq	r0, r0, r8, asr #18
   11630:	ldrdeq	r0, [r0], -r8
   11634:	strdeq	r0, [r0], -r4
   11638:	andeq	r0, r0, ip, asr #21
   1163c:	andeq	r0, r0, r0, lsr #17
   11640:	andeq	r0, r0, ip, lsl r9
   11644:	andeq	r0, r0, r0, rrx
   11648:	andeq	r0, r0, ip, asr r7
   1164c:	andeq	r0, r0, ip, asr #18

00011650 <vetor_cria@@Base>:
   11650:	str	fp, [sp, #-8]!
   11654:	str	lr, [sp, #4]
   11658:	add	fp, sp, #4
   1165c:	sub	sp, sp, #16
   11660:	str	r0, [fp, #-16]
   11664:	mov	r0, #12
   11668:	bl	10a34 <malloc@plt>
   1166c:	mov	r3, r0
   11670:	str	r3, [fp, #-8]
   11674:	ldr	r3, [fp, #-8]
   11678:	cmp	r3, #0
   1167c:	bne	11688 <vetor_cria@@Base+0x38>
   11680:	mov	r3, #0
   11684:	b	116e4 <vetor_cria@@Base+0x94>
   11688:	ldr	r3, [fp, #-8]
   1168c:	mov	r2, #0
   11690:	str	r2, [r3]
   11694:	ldr	r3, [fp, #-8]
   11698:	ldr	r2, [fp, #-16]
   1169c:	str	r2, [r3, #4]
   116a0:	ldr	r3, [fp, #-16]
   116a4:	mov	r1, #4
   116a8:	mov	r0, r3
   116ac:	bl	109bc <calloc@plt>
   116b0:	mov	r3, r0
   116b4:	mov	r2, r3
   116b8:	ldr	r3, [fp, #-8]
   116bc:	str	r2, [r3, #8]
   116c0:	ldr	r3, [fp, #-8]
   116c4:	ldr	r3, [r3, #8]
   116c8:	cmp	r3, #0
   116cc:	bne	116e0 <vetor_cria@@Base+0x90>
   116d0:	ldr	r0, [fp, #-8]
   116d4:	bl	10a04 <free@plt>
   116d8:	mov	r3, #0
   116dc:	b	116e4 <vetor_cria@@Base+0x94>
   116e0:	ldr	r3, [fp, #-8]
   116e4:	mov	r0, r3
   116e8:	sub	sp, fp, #4
   116ec:	ldr	fp, [sp]
   116f0:	add	sp, sp, #4
   116f4:	pop	{pc}		; (ldr pc, [sp], #4)

000116f8 <vetor_criaHeap@@Base>:
   116f8:	str	fp, [sp, #-8]!
   116fc:	str	lr, [sp, #4]
   11700:	add	fp, sp, #4
   11704:	sub	sp, sp, #16
   11708:	str	r0, [fp, #-16]
   1170c:	mov	r0, #12
   11710:	bl	10a34 <malloc@plt>
   11714:	mov	r3, r0
   11718:	str	r3, [fp, #-8]
   1171c:	ldr	r3, [fp, #-8]
   11720:	cmp	r3, #0
   11724:	bne	11730 <vetor_criaHeap@@Base+0x38>
   11728:	mov	r3, #0
   1172c:	b	11790 <vetor_criaHeap@@Base+0x98>
   11730:	ldr	r3, [fp, #-8]
   11734:	mov	r2, #0
   11738:	str	r2, [r3]
   1173c:	ldr	r3, [fp, #-8]
   11740:	ldr	r2, [fp, #-16]
   11744:	str	r2, [r3, #4]
   11748:	ldr	r3, [fp, #-16]
   1174c:	add	r3, r3, #1
   11750:	mov	r1, #4
   11754:	mov	r0, r3
   11758:	bl	109bc <calloc@plt>
   1175c:	mov	r3, r0
   11760:	mov	r2, r3
   11764:	ldr	r3, [fp, #-8]
   11768:	str	r2, [r3, #8]
   1176c:	ldr	r3, [fp, #-8]
   11770:	ldr	r3, [r3, #8]
   11774:	cmp	r3, #0
   11778:	bne	1178c <vetor_criaHeap@@Base+0x94>
   1177c:	ldr	r0, [fp, #-8]
   11780:	bl	10a04 <free@plt>
   11784:	mov	r3, #0
   11788:	b	11790 <vetor_criaHeap@@Base+0x98>
   1178c:	ldr	r3, [fp, #-8]
   11790:	mov	r0, r3
   11794:	sub	sp, fp, #4
   11798:	ldr	fp, [sp]
   1179c:	add	sp, sp, #4
   117a0:	pop	{pc}		; (ldr pc, [sp], #4)

000117a4 <elemento_cria@@Base>:
   117a4:	str	fp, [sp, #-8]!
   117a8:	str	lr, [sp, #4]
   117ac:	add	fp, sp, #4
   117b0:	sub	sp, sp, #16
   117b4:	str	r0, [fp, #-16]
   117b8:	str	r1, [fp, #-20]	; 0xffffffec
   117bc:	mov	r0, #8
   117c0:	bl	10a34 <malloc@plt>
   117c4:	mov	r3, r0
   117c8:	str	r3, [fp, #-8]
   117cc:	ldr	r3, [fp, #-8]
   117d0:	cmp	r3, #0
   117d4:	bne	117e0 <elemento_cria@@Base+0x3c>
   117d8:	mov	r3, #0
   117dc:	b	11808 <elemento_cria@@Base+0x64>
   117e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   117e4:	bl	10a1c <strdup@plt>
   117e8:	mov	r3, r0
   117ec:	mov	r2, r3
   117f0:	ldr	r3, [fp, #-8]
   117f4:	str	r2, [r3, #4]
   117f8:	ldr	r3, [fp, #-8]
   117fc:	ldr	r2, [fp, #-16]
   11800:	str	r2, [r3]
   11804:	ldr	r3, [fp, #-8]
   11808:	mov	r0, r3
   1180c:	sub	sp, fp, #4
   11810:	ldr	fp, [sp]
   11814:	add	sp, sp, #4
   11818:	pop	{pc}		; (ldr pc, [sp], #4)

0001181c <maior_que@@Base>:
   1181c:	str	r4, [sp, #-12]!
   11820:	str	fp, [sp, #4]
   11824:	str	lr, [sp, #8]
   11828:	add	fp, sp, #8
   1182c:	sub	sp, sp, #12
   11830:	str	r0, [fp, #-16]
   11834:	str	r1, [fp, #-20]	; 0xffffffec
   11838:	ldr	r4, [pc, #152]	; 118d8 <maior_que@@Base+0xbc>
   1183c:	add	r4, pc, r4
   11840:	ldr	r3, [fp, #-16]
   11844:	cmp	r3, #0
   11848:	beq	11858 <maior_que@@Base+0x3c>
   1184c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11850:	cmp	r3, #0
   11854:	bne	11870 <maior_que@@Base+0x54>
   11858:	ldr	r3, [pc, #124]	; 118dc <maior_que@@Base+0xc0>
   1185c:	add	r3, pc, r3
   11860:	mov	r0, r3
   11864:	bl	10a28 <puts@plt>
   11868:	mov	r3, #0
   1186c:	b	118c0 <maior_que@@Base+0xa4>
   11870:	ldr	r3, [pc, #104]	; 118e0 <maior_que@@Base+0xc4>
   11874:	ldr	r3, [r4, r3]
   11878:	ldr	r3, [r3]
   1187c:	mov	r0, r3
   11880:	bl	109f8 <fflush@plt>
   11884:	ldr	r3, [pc, #88]	; 118e4 <maior_que@@Base+0xc8>
   11888:	ldr	r3, [r4, r3]
   1188c:	ldr	r3, [r3]
   11890:	add	r2, r3, #1
   11894:	ldr	r3, [pc, #72]	; 118e4 <maior_que@@Base+0xc8>
   11898:	ldr	r3, [r4, r3]
   1189c:	str	r2, [r3]
   118a0:	ldr	r3, [fp, #-16]
   118a4:	ldr	r2, [r3]
   118a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   118ac:	ldr	r3, [r3]
   118b0:	cmp	r2, r3
   118b4:	movgt	r3, #1
   118b8:	movle	r3, #0
   118bc:	uxtb	r3, r3
   118c0:	mov	r0, r3
   118c4:	sub	sp, fp, #8
   118c8:	ldr	r4, [sp]
   118cc:	ldr	fp, [sp, #4]
   118d0:	add	sp, sp, #8
   118d4:	pop	{pc}		; (ldr pc, [sp], #4)
   118d8:			; <UNDEFINED> instruction: 0x000117bc
   118dc:	andeq	r0, r0, r0, lsl #15
   118e0:	andeq	r0, r0, r4, rrx
   118e4:	andeq	r0, r0, r8, asr r0

000118e8 <maior_que_HeapSort@@Base>:
   118e8:	str	r4, [sp, #-12]!
   118ec:	str	fp, [sp, #4]
   118f0:	str	lr, [sp, #8]
   118f4:	add	fp, sp, #8
   118f8:	sub	sp, sp, #12
   118fc:	str	r0, [fp, #-16]
   11900:	str	r1, [fp, #-20]	; 0xffffffec
   11904:	ldr	r4, [pc, #160]	; 119ac <maior_que_HeapSort@@Base+0xc4>
   11908:	add	r4, pc, r4
   1190c:	ldr	r3, [fp, #-16]
   11910:	cmp	r3, #0
   11914:	beq	11924 <maior_que_HeapSort@@Base+0x3c>
   11918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1191c:	cmp	r3, #0
   11920:	bne	1193c <maior_que_HeapSort@@Base+0x54>
   11924:	ldr	r3, [pc, #132]	; 119b0 <maior_que_HeapSort@@Base+0xc8>
   11928:	add	r3, pc, r3
   1192c:	mov	r0, r3
   11930:	bl	10a28 <puts@plt>
   11934:	mov	r3, #0
   11938:	b	11994 <maior_que_HeapSort@@Base+0xac>
   1193c:	ldr	r3, [pc, #112]	; 119b4 <maior_que_HeapSort@@Base+0xcc>
   11940:	ldr	r3, [r4, r3]
   11944:	ldr	r3, [r3]
   11948:	mov	r0, r3
   1194c:	bl	109f8 <fflush@plt>
   11950:	ldr	r3, [pc, #96]	; 119b8 <maior_que_HeapSort@@Base+0xd0>
   11954:	ldr	r3, [r4, r3]
   11958:	ldr	r3, [r3]
   1195c:	add	r2, r3, #1
   11960:	ldr	r3, [pc, #80]	; 119b8 <maior_que_HeapSort@@Base+0xd0>
   11964:	ldr	r3, [r4, r3]
   11968:	str	r2, [r3]
   1196c:	ldr	r3, [fp, #-16]
   11970:	ldr	r2, [r3, #4]
   11974:	ldr	r3, [fp, #-20]	; 0xffffffec
   11978:	ldr	r3, [r3, #4]
   1197c:	mov	r1, r3
   11980:	mov	r0, r2
   11984:	bl	109c8 <strcmp@plt>
   11988:	mov	r3, r0
   1198c:	lsr	r3, r3, #31
   11990:	uxtb	r3, r3
   11994:	mov	r0, r3
   11998:	sub	sp, fp, #8
   1199c:	ldr	r4, [sp]
   119a0:	ldr	fp, [sp, #4]
   119a4:	add	sp, sp, #8
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:	strdeq	r1, [r1], -r0
   119b0:			; <UNDEFINED> instruction: 0x000006b4
   119b4:	andeq	r0, r0, r4, rrx
   119b8:	andeq	r0, r0, r8, asr r0

000119bc <vetor_imprime@@Base>:
   119bc:	str	fp, [sp, #-8]!
   119c0:	str	lr, [sp, #4]
   119c4:	add	fp, sp, #4
   119c8:	sub	sp, sp, #16
   119cc:	str	r0, [fp, #-16]
   119d0:	ldr	r3, [fp, #-16]
   119d4:	ldr	r3, [r3]
   119d8:	cmp	r3, #0
   119dc:	ble	11a20 <vetor_imprime@@Base+0x64>
   119e0:	ldr	r3, [fp, #-16]
   119e4:	ldr	r3, [r3, #8]
   119e8:	ldr	r3, [r3]
   119ec:	ldr	r1, [r3, #4]
   119f0:	ldr	r3, [fp, #-16]
   119f4:	ldr	r3, [r3, #8]
   119f8:	ldr	r3, [r3]
   119fc:	ldr	r3, [r3]
   11a00:	mov	r2, r3
   11a04:	ldr	r3, [pc, #172]	; 11ab8 <vetor_imprime@@Base+0xfc>
   11a08:	add	r3, pc, r3
   11a0c:	mov	r0, r3
   11a10:	bl	109d4 <printf@plt>
   11a14:	mov	r3, #1
   11a18:	str	r3, [fp, #-8]
   11a1c:	b	11a8c <vetor_imprime@@Base+0xd0>
   11a20:	ldr	r3, [pc, #148]	; 11abc <vetor_imprime@@Base+0x100>
   11a24:	add	r3, pc, r3
   11a28:	mov	r0, r3
   11a2c:	bl	10a28 <puts@plt>
   11a30:	b	11aa8 <vetor_imprime@@Base+0xec>
   11a34:	ldr	r3, [fp, #-16]
   11a38:	ldr	r2, [r3, #8]
   11a3c:	ldr	r3, [fp, #-8]
   11a40:	lsl	r3, r3, #2
   11a44:	add	r3, r2, r3
   11a48:	ldr	r3, [r3]
   11a4c:	ldr	r1, [r3, #4]
   11a50:	ldr	r3, [fp, #-16]
   11a54:	ldr	r2, [r3, #8]
   11a58:	ldr	r3, [fp, #-8]
   11a5c:	lsl	r3, r3, #2
   11a60:	add	r3, r2, r3
   11a64:	ldr	r3, [r3]
   11a68:	ldr	r3, [r3]
   11a6c:	mov	r2, r3
   11a70:	ldr	r3, [pc, #72]	; 11ac0 <vetor_imprime@@Base+0x104>
   11a74:	add	r3, pc, r3
   11a78:	mov	r0, r3
   11a7c:	bl	109d4 <printf@plt>
   11a80:	ldr	r3, [fp, #-8]
   11a84:	add	r3, r3, #1
   11a88:	str	r3, [fp, #-8]
   11a8c:	ldr	r3, [fp, #-16]
   11a90:	ldr	r3, [r3]
   11a94:	ldr	r2, [fp, #-8]
   11a98:	cmp	r2, r3
   11a9c:	blt	11a34 <vetor_imprime@@Base+0x78>
   11aa0:	mov	r0, #10
   11aa4:	bl	10a70 <putchar@plt>
   11aa8:	sub	sp, fp, #4
   11aac:	ldr	fp, [sp]
   11ab0:	add	sp, sp, #4
   11ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ab8:	andeq	r0, r0, r0, ror #11
   11abc:	andeq	r0, r0, r4, ror #11
   11ac0:	andeq	r0, r0, ip, lsr #11

00011ac4 <vetor_imprimeHeap@@Base>:
   11ac4:	str	fp, [sp, #-8]!
   11ac8:	str	lr, [sp, #4]
   11acc:	add	fp, sp, #4
   11ad0:	sub	sp, sp, #16
   11ad4:	str	r0, [fp, #-16]
   11ad8:	ldr	r3, [fp, #-16]
   11adc:	ldr	r3, [r3]
   11ae0:	cmp	r3, #0
   11ae4:	ble	11b30 <vetor_imprimeHeap@@Base+0x6c>
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	ldr	r3, [r3, #8]
   11af0:	add	r3, r3, #4
   11af4:	ldr	r3, [r3]
   11af8:	ldr	r1, [r3, #4]
   11afc:	ldr	r3, [fp, #-16]
   11b00:	ldr	r3, [r3, #8]
   11b04:	add	r3, r3, #4
   11b08:	ldr	r3, [r3]
   11b0c:	ldr	r3, [r3]
   11b10:	mov	r2, r3
   11b14:	ldr	r3, [pc, #172]	; 11bc8 <vetor_imprimeHeap@@Base+0x104>
   11b18:	add	r3, pc, r3
   11b1c:	mov	r0, r3
   11b20:	bl	109d4 <printf@plt>
   11b24:	mov	r3, #2
   11b28:	str	r3, [fp, #-8]
   11b2c:	b	11b9c <vetor_imprimeHeap@@Base+0xd8>
   11b30:	ldr	r3, [pc, #148]	; 11bcc <vetor_imprimeHeap@@Base+0x108>
   11b34:	add	r3, pc, r3
   11b38:	mov	r0, r3
   11b3c:	bl	10a28 <puts@plt>
   11b40:	b	11bb8 <vetor_imprimeHeap@@Base+0xf4>
   11b44:	ldr	r3, [fp, #-16]
   11b48:	ldr	r2, [r3, #8]
   11b4c:	ldr	r3, [fp, #-8]
   11b50:	lsl	r3, r3, #2
   11b54:	add	r3, r2, r3
   11b58:	ldr	r3, [r3]
   11b5c:	ldr	r1, [r3, #4]
   11b60:	ldr	r3, [fp, #-16]
   11b64:	ldr	r2, [r3, #8]
   11b68:	ldr	r3, [fp, #-8]
   11b6c:	lsl	r3, r3, #2
   11b70:	add	r3, r2, r3
   11b74:	ldr	r3, [r3]
   11b78:	ldr	r3, [r3]
   11b7c:	mov	r2, r3
   11b80:	ldr	r3, [pc, #72]	; 11bd0 <vetor_imprimeHeap@@Base+0x10c>
   11b84:	add	r3, pc, r3
   11b88:	mov	r0, r3
   11b8c:	bl	109d4 <printf@plt>
   11b90:	ldr	r3, [fp, #-8]
   11b94:	add	r3, r3, #1
   11b98:	str	r3, [fp, #-8]
   11b9c:	ldr	r3, [fp, #-16]
   11ba0:	ldr	r3, [r3]
   11ba4:	ldr	r2, [fp, #-8]
   11ba8:	cmp	r2, r3
   11bac:	blt	11b44 <vetor_imprimeHeap@@Base+0x80>
   11bb0:	mov	r0, #10
   11bb4:	bl	10a70 <putchar@plt>
   11bb8:	sub	sp, fp, #4
   11bbc:	ldr	fp, [sp]
   11bc0:	add	sp, sp, #4
   11bc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11bc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11bcc:	ldrdeq	r0, [r0], -r4
   11bd0:	muleq	r0, ip, r4

00011bd4 <__libc_csu_init@@Base>:
   11bd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bd8:	mov	r7, r0
   11bdc:	ldr	r6, [pc, #72]	; 11c2c <__libc_csu_init@@Base+0x58>
   11be0:	ldr	r5, [pc, #72]	; 11c30 <__libc_csu_init@@Base+0x5c>
   11be4:	add	r6, pc, r6
   11be8:	add	r5, pc, r5
   11bec:	sub	r6, r6, r5
   11bf0:	mov	r8, r1
   11bf4:	mov	r9, r2
   11bf8:	bl	1099c <calloc@plt-0x20>
   11bfc:	asrs	r6, r6, #2
   11c00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c04:	mov	r4, #0
   11c08:	add	r4, r4, #1
   11c0c:	ldr	r3, [r5], #4
   11c10:	mov	r2, r9
   11c14:	mov	r1, r8
   11c18:	mov	r0, r7
   11c1c:	blx	r3
   11c20:	cmp	r6, r4
   11c24:	bne	11c08 <__libc_csu_init@@Base+0x34>
   11c28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c2c:	andeq	r1, r1, r8, lsr #6
   11c30:	andeq	r1, r1, r0, lsr #6

00011c34 <__libc_csu_fini@@Base>:
   11c34:	bx	lr

Disassembly of section .fini:

00011c38 <.fini>:
   11c38:	push	{r3, lr}
   11c3c:	pop	{r3, pc}
