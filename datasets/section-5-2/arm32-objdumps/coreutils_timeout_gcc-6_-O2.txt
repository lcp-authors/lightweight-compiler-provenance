
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001101c <.init>:
   1101c:	push	{r3, lr}
   11020:	bl	119a4 <__snprintf_chk@plt+0x638>
   11024:	pop	{r3, pc}

Disassembly of section .plt:

00011028 <calloc@plt-0x14>:
   11028:	push	{lr}		; (str lr, [sp, #-4]!)
   1102c:	ldr	lr, [pc, #4]	; 11038 <calloc@plt-0x4>
   11030:	add	lr, pc, lr
   11034:	ldr	pc, [lr, #8]!
   11038:	andeq	r5, r1, r8, asr #31

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #86016	; 0x15000
   11044:	ldr	pc, [ip, #4040]!	; 0xfc8

00011048 <fputs_unlocked@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #86016	; 0x15000
   11050:	ldr	pc, [ip, #4032]!	; 0xfc0

00011054 <raise@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #86016	; 0x15000
   1105c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011060 <strcmp@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #86016	; 0x15000
   11068:	ldr	pc, [ip, #4016]!	; 0xfb0

0001106c <strtol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #4008]!	; 0xfa8

00011078 <fflush@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #4000]!	; 0xfa0

00011084 <sigprocmask@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #3992]!	; 0xf98

00011090 <free@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #3984]!	; 0xf90

0001109c <_exit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #3976]!	; 0xf88

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #3968]!	; 0xf80

000110b4 <execvp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #3960]!	; 0xf78

000110c0 <mbsinit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #3952]!	; 0xf70

000110cc <signal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #3944]!	; 0xf68

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #3936]!	; 0xf60

000110e4 <fputc_unlocked@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #3928]!	; 0xf58

000110f0 <dcgettext@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #3920]!	; 0xf50

000110fc <alarm@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #3912]!	; 0xf48

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #3904]!	; 0xf40

00011114 <timer_create@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #3896]!	; 0xf38

00011120 <textdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3888]!	; 0xf30

0001112c <iswprint@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3880]!	; 0xf28

00011138 <timer_settime@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3872]!	; 0xf20

00011144 <sigaction@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3864]!	; 0xf18

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3856]!	; 0xf10

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3848]!	; 0xf08

00011168 <waitpid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3840]!	; 0xf00

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3832]!	; 0xef8

00011180 <strcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3824]!	; 0xef0

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3816]!	; 0xee8

00011198 <mbrtowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3808]!	; 0xee0

000111a4 <error@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3800]!	; 0xed8

000111b0 <timer_delete@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3792]!	; 0xed0

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3784]!	; 0xec8

000111c8 <sigaddset@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3776]!	; 0xec0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3752]!	; 0xea8

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3744]!	; 0xea0

00011204 <kill@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3736]!	; 0xe98

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3728]!	; 0xe90

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3720]!	; 0xe88

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3712]!	; 0xe80

00011234 <__libc_current_sigrtmax@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3704]!	; 0xe78

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3696]!	; 0xe70

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3688]!	; 0xe68

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3680]!	; 0xe60

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3672]!	; 0xe58

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3664]!	; 0xe50

0001127c <sigsuspend@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3656]!	; 0xe48

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3648]!	; 0xe40

00011294 <prctl@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3640]!	; 0xe38

000112a0 <strtod@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3632]!	; 0xe30

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3624]!	; 0xe28

000112b8 <__fprintf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3616]!	; 0xe20

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3608]!	; 0xe18

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3600]!	; 0xe10

000112dc <strtod_l@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3592]!	; 0xe08

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3584]!	; 0xe00

000112f4 <sigemptyset@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3576]!	; 0xdf8

00011300 <fork@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3568]!	; 0xdf0

0001130c <strrchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3560]!	; 0xde8

00011318 <nl_langinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3552]!	; 0xde0

00011324 <newlocale@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011330 <setpgid@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3536]!	; 0xdd0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3528]!	; 0xdc8

00011348 <__libc_current_sigrtmin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3520]!	; 0xdc0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3504]!	; 0xdb0

0001136c <__snprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

00011378 <.text>:
   11378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1137c:	vpush	{d8}
   11380:	mov	r6, r0
   11384:	ldr	r0, [r1]
   11388:	mov	r5, r1
   1138c:	sub	sp, sp, #300	; 0x12c
   11390:	bl	1270c <__snprintf_chk@plt+0x13a0>
   11394:	ldr	r1, [pc, #1380]	; 11900 <__snprintf_chk@plt+0x594>
   11398:	mov	r0, #6
   1139c:	bl	112e8 <setlocale@plt>
   113a0:	ldr	r1, [pc, #1372]	; 11904 <__snprintf_chk@plt+0x598>
   113a4:	ldr	r0, [pc, #1372]	; 11908 <__snprintf_chk@plt+0x59c>
   113a8:	bl	1133c <bindtextdomain@plt>
   113ac:	ldr	r0, [pc, #1364]	; 11908 <__snprintf_chk@plt+0x59c>
   113b0:	bl	11120 <textdomain@plt>
   113b4:	ldr	r3, [pc, #1360]	; 1190c <__snprintf_chk@plt+0x5a0>
   113b8:	mov	r2, #125	; 0x7d
   113bc:	ldr	r0, [pc, #1356]	; 11910 <__snprintf_chk@plt+0x5a4>
   113c0:	str	r2, [r3]
   113c4:	bl	15d90 <__snprintf_chk@plt+0x4a24>
   113c8:	ldr	r8, [pc, #1348]	; 11914 <__snprintf_chk@plt+0x5a8>
   113cc:	ldr	r7, [pc, #1348]	; 11918 <__snprintf_chk@plt+0x5ac>
   113d0:	ldr	sl, [pc, #1348]	; 1191c <__snprintf_chk@plt+0x5b0>
   113d4:	ldr	fp, [pc, #1348]	; 11920 <__snprintf_chk@plt+0x5b4>
   113d8:	ldr	r9, [pc, #1348]	; 11924 <__snprintf_chk@plt+0x5b8>
   113dc:	mov	r4, #0
   113e0:	str	r4, [sp]
   113e4:	mov	r3, r8
   113e8:	mov	r2, r7
   113ec:	mov	r1, r5
   113f0:	mov	r0, r6
   113f4:	bl	111f8 <getopt_long@plt>
   113f8:	cmn	r0, #1
   113fc:	beq	114d0 <__snprintf_chk@plt+0x164>
   11400:	cmp	r0, #115	; 0x73
   11404:	beq	114b4 <__snprintf_chk@plt+0x148>
   11408:	bgt	11454 <__snprintf_chk@plt+0xe8>
   1140c:	cmn	r0, #2
   11410:	beq	11494 <__snprintf_chk@plt+0x128>
   11414:	cmp	r0, #107	; 0x6b
   11418:	beq	11484 <__snprintf_chk@plt+0x118>
   1141c:	cmn	r0, #3
   11420:	bne	11470 <__snprintf_chk@plt+0x104>
   11424:	ldr	r1, [pc, #1276]	; 11928 <__snprintf_chk@plt+0x5bc>
   11428:	ldr	r3, [pc, #1276]	; 1192c <__snprintf_chk@plt+0x5c0>
   1142c:	ldr	r2, [pc, #1276]	; 11930 <__snprintf_chk@plt+0x5c4>
   11430:	str	r4, [sp, #4]
   11434:	ldr	r0, [r1]
   11438:	ldr	r3, [r3]
   1143c:	ldr	r1, [pc, #1264]	; 11934 <__snprintf_chk@plt+0x5c8>
   11440:	str	r2, [sp]
   11444:	ldr	r2, [pc, #1260]	; 11938 <__snprintf_chk@plt+0x5cc>
   11448:	bl	14c74 <__snprintf_chk@plt+0x3908>
   1144c:	mov	r0, r4
   11450:	bl	1121c <exit@plt>
   11454:	cmp	r0, #256	; 0x100
   11458:	beq	1149c <__snprintf_chk@plt+0x130>
   1145c:	ldr	r3, [pc, #1240]	; 1193c <__snprintf_chk@plt+0x5d0>
   11460:	cmp	r0, r3
   11464:	beq	11478 <__snprintf_chk@plt+0x10c>
   11468:	cmp	r0, #118	; 0x76
   1146c:	beq	114a8 <__snprintf_chk@plt+0x13c>
   11470:	mov	r0, #125	; 0x7d
   11474:	bl	11e00 <__snprintf_chk@plt+0xa94>
   11478:	mov	r3, #1
   1147c:	strb	r3, [r9, #25]
   11480:	b	113dc <__snprintf_chk@plt+0x70>
   11484:	ldr	r0, [sl]
   11488:	bl	12174 <__snprintf_chk@plt+0xe08>
   1148c:	vstr	d0, [r9, #8]
   11490:	b	113dc <__snprintf_chk@plt+0x70>
   11494:	mov	r0, r4
   11498:	bl	11e00 <__snprintf_chk@plt+0xa94>
   1149c:	mov	r3, #1
   114a0:	strb	r3, [r9, #24]
   114a4:	b	113dc <__snprintf_chk@plt+0x70>
   114a8:	mov	r3, #1
   114ac:	strb	r3, [r9, #16]
   114b0:	b	113dc <__snprintf_chk@plt+0x70>
   114b4:	add	r1, sp, #8
   114b8:	ldr	r0, [sl]
   114bc:	bl	122c8 <__snprintf_chk@plt+0xf5c>
   114c0:	cmn	r0, #1
   114c4:	str	r0, [fp]
   114c8:	bne	113dc <__snprintf_chk@plt+0x70>
   114cc:	b	11470 <__snprintf_chk@plt+0x104>
   114d0:	ldr	r4, [pc, #1128]	; 11940 <__snprintf_chk@plt+0x5d4>
   114d4:	ldr	r3, [r4]
   114d8:	sub	r6, r6, r3
   114dc:	cmp	r6, #1
   114e0:	ble	11470 <__snprintf_chk@plt+0x104>
   114e4:	add	r2, r3, #1
   114e8:	ldr	r0, [r5, r3, lsl #2]
   114ec:	str	r2, [r4]
   114f0:	bl	12174 <__snprintf_chk@plt+0xe08>
   114f4:	ldr	r6, [pc, #1064]	; 11924 <__snprintf_chk@plt+0x5b8>
   114f8:	ldr	r4, [r4]
   114fc:	ldrb	r1, [r6, #24]
   11500:	ldr	r3, [r5, r4, lsl #2]
   11504:	add	sl, r5, r4, lsl #2
   11508:	cmp	r1, #0
   1150c:	str	r3, [r6, #20]
   11510:	vmov.f64	d8, d0
   11514:	beq	11674 <__snprintf_chk@plt+0x308>
   11518:	ldr	r9, [pc, #1024]	; 11920 <__snprintf_chk@plt+0x5b4>
   1151c:	add	r8, sp, #160	; 0xa0
   11520:	mov	r0, r8
   11524:	ldr	fp, [r9]
   11528:	bl	112f4 <sigemptyset@plt>
   1152c:	ldr	r3, [pc, #1040]	; 11944 <__snprintf_chk@plt+0x5d8>
   11530:	mov	r7, #268435456	; 0x10000000
   11534:	add	r1, sp, #156	; 0x9c
   11538:	mov	r2, #0
   1153c:	mov	r0, #14
   11540:	str	r3, [sp, #156]	; 0x9c
   11544:	str	r7, [sp, #288]	; 0x120
   11548:	bl	11144 <sigaction@plt>
   1154c:	add	r1, sp, #156	; 0x9c
   11550:	mov	r2, #0
   11554:	mov	r0, #2
   11558:	bl	11144 <sigaction@plt>
   1155c:	add	r1, sp, #156	; 0x9c
   11560:	mov	r2, #0
   11564:	mov	r0, #3
   11568:	bl	11144 <sigaction@plt>
   1156c:	add	r1, sp, #156	; 0x9c
   11570:	mov	r2, #0
   11574:	mov	r0, #1
   11578:	bl	11144 <sigaction@plt>
   1157c:	add	r1, sp, #156	; 0x9c
   11580:	mov	r2, #0
   11584:	mov	r0, #15
   11588:	bl	11144 <sigaction@plt>
   1158c:	mov	r2, #0
   11590:	add	r1, sp, #156	; 0x9c
   11594:	mov	r0, fp
   11598:	bl	11144 <sigaction@plt>
   1159c:	mov	r1, #1
   115a0:	mov	r0, #21
   115a4:	bl	110cc <signal@plt>
   115a8:	mov	r1, #1
   115ac:	mov	r0, #22
   115b0:	bl	110cc <signal@plt>
   115b4:	mov	r0, r8
   115b8:	bl	112f4 <sigemptyset@plt>
   115bc:	ldr	r3, [pc, #900]	; 11948 <__snprintf_chk@plt+0x5dc>
   115c0:	add	r1, sp, #156	; 0x9c
   115c4:	mov	r2, #0
   115c8:	mov	r0, #17
   115cc:	str	r3, [sp, #156]	; 0x9c
   115d0:	str	r7, [sp, #288]	; 0x120
   115d4:	bl	11144 <sigaction@plt>
   115d8:	mov	r0, #17
   115dc:	bl	11bd0 <__snprintf_chk@plt+0x864>
   115e0:	bl	11300 <fork@plt>
   115e4:	cmn	r0, #1
   115e8:	mov	r7, r0
   115ec:	str	r0, [r6, #4]
   115f0:	beq	11680 <__snprintf_chk@plt+0x314>
   115f4:	cmp	r0, #0
   115f8:	bne	116b0 <__snprintf_chk@plt+0x344>
   115fc:	mov	r1, r0
   11600:	mov	r0, #21
   11604:	bl	110cc <signal@plt>
   11608:	mov	r1, r7
   1160c:	mov	r0, #22
   11610:	bl	110cc <signal@plt>
   11614:	mov	r1, sl
   11618:	ldr	r0, [r5, r4, lsl #2]
   1161c:	bl	110b4 <execvp@plt>
   11620:	bl	1124c <__errno_location@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #796]	; 1194c <__snprintf_chk@plt+0x5e0>
   1162c:	ldr	r4, [r0]
   11630:	mov	r0, r7
   11634:	bl	110f0 <dcgettext@plt>
   11638:	mov	r5, r0
   1163c:	ldr	r0, [r6, #20]
   11640:	bl	145cc <__snprintf_chk@plt+0x3260>
   11644:	mov	r1, r4
   11648:	cmp	r4, #2
   1164c:	mov	r2, r5
   11650:	moveq	r4, #127	; 0x7f
   11654:	movne	r4, #126	; 0x7e
   11658:	mov	r3, r0
   1165c:	mov	r0, r7
   11660:	bl	111a4 <error@plt>
   11664:	mov	r0, r4
   11668:	add	sp, sp, #300	; 0x12c
   1166c:	vpop	{d8}
   11670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11674:	mov	r0, r1
   11678:	bl	11330 <setpgid@plt>
   1167c:	b	11518 <__snprintf_chk@plt+0x1ac>
   11680:	bl	1124c <__errno_location@plt>
   11684:	mov	r2, #5
   11688:	ldr	r1, [pc, #704]	; 11950 <__snprintf_chk@plt+0x5e4>
   1168c:	mov	r4, #125	; 0x7d
   11690:	ldr	r5, [r0]
   11694:	mov	r0, #0
   11698:	bl	110f0 <dcgettext@plt>
   1169c:	mov	r1, r5
   116a0:	mov	r2, r0
   116a4:	mov	r0, #0
   116a8:	bl	111a4 <error@plt>
   116ac:	b	11664 <__snprintf_chk@plt+0x2f8>
   116b0:	mov	r0, #14
   116b4:	bl	11bd0 <__snprintf_chk@plt+0x864>
   116b8:	vmov.f64	d0, d8
   116bc:	mov	r0, #1
   116c0:	bl	11a94 <__snprintf_chk@plt+0x728>
   116c4:	add	r0, sp, #156	; 0x9c
   116c8:	ldr	r4, [r9]
   116cc:	bl	112f4 <sigemptyset@plt>
   116d0:	mov	r1, #14
   116d4:	add	r0, sp, #156	; 0x9c
   116d8:	bl	111c8 <sigaddset@plt>
   116dc:	mov	r1, #2
   116e0:	add	r0, sp, #156	; 0x9c
   116e4:	bl	111c8 <sigaddset@plt>
   116e8:	mov	r1, #3
   116ec:	add	r0, sp, #156	; 0x9c
   116f0:	bl	111c8 <sigaddset@plt>
   116f4:	mov	r1, #1
   116f8:	add	r0, sp, #156	; 0x9c
   116fc:	bl	111c8 <sigaddset@plt>
   11700:	mov	r1, #15
   11704:	add	r0, sp, #156	; 0x9c
   11708:	bl	111c8 <sigaddset@plt>
   1170c:	mov	r1, r4
   11710:	add	r0, sp, #156	; 0x9c
   11714:	bl	111c8 <sigaddset@plt>
   11718:	mov	r1, #17
   1171c:	add	r0, sp, #156	; 0x9c
   11720:	bl	111c8 <sigaddset@plt>
   11724:	add	r2, sp, #28
   11728:	add	r1, sp, #156	; 0x9c
   1172c:	mov	r0, #0
   11730:	bl	11084 <sigprocmask@plt>
   11734:	cmp	r0, #0
   11738:	beq	11764 <__snprintf_chk@plt+0x3f8>
   1173c:	bl	1124c <__errno_location@plt>
   11740:	mov	r2, #5
   11744:	ldr	r1, [pc, #520]	; 11954 <__snprintf_chk@plt+0x5e8>
   11748:	ldr	r4, [r0]
   1174c:	mov	r0, #0
   11750:	bl	110f0 <dcgettext@plt>
   11754:	mov	r1, r4
   11758:	mov	r2, r0
   1175c:	mov	r0, #0
   11760:	bl	111a4 <error@plt>
   11764:	mov	r4, #1
   11768:	b	11774 <__snprintf_chk@plt+0x408>
   1176c:	add	r0, sp, #28
   11770:	bl	1127c <sigsuspend@plt>
   11774:	mov	r2, r4
   11778:	add	r1, sp, #156	; 0x9c
   1177c:	ldr	r0, [r6, #4]
   11780:	bl	11168 <waitpid@plt>
   11784:	cmp	r0, #0
   11788:	beq	1176c <__snprintf_chk@plt+0x400>
   1178c:	blt	1181c <__snprintf_chk@plt+0x4b0>
   11790:	ldr	r3, [sp, #156]	; 0x9c
   11794:	ands	r4, r3, #127	; 0x7f
   11798:	bne	117cc <__snprintf_chk@plt+0x460>
   1179c:	asr	r3, r3, #8
   117a0:	uxtb	r3, r3
   117a4:	str	r3, [sp, #156]	; 0x9c
   117a8:	ldr	r3, [r6]
   117ac:	cmp	r3, #0
   117b0:	beq	117c4 <__snprintf_chk@plt+0x458>
   117b4:	ldrb	r3, [r6, #25]
   117b8:	cmp	r3, #0
   117bc:	moveq	r3, #124	; 0x7c
   117c0:	streq	r3, [sp, #156]	; 0x9c
   117c4:	ldr	r4, [sp, #156]	; 0x9c
   117c8:	b	11664 <__snprintf_chk@plt+0x2f8>
   117cc:	add	r2, r4, #1
   117d0:	sxtb	r2, r2
   117d4:	cmp	r2, #1
   117d8:	ble	118a4 <__snprintf_chk@plt+0x538>
   117dc:	tst	r3, #128	; 0x80
   117e0:	bne	11880 <__snprintf_chk@plt+0x514>
   117e4:	ldr	r5, [r6]
   117e8:	cmp	r5, #0
   117ec:	beq	11850 <__snprintf_chk@plt+0x4e4>
   117f0:	ldr	r3, [r6]
   117f4:	adds	r3, r3, #0
   117f8:	movne	r3, #1
   117fc:	cmp	r4, #9
   11800:	movne	r3, #0
   11804:	cmp	r3, #0
   11808:	movne	r3, #1
   1180c:	add	r4, r4, #128	; 0x80
   11810:	strbne	r3, [r6, #25]
   11814:	str	r4, [sp, #156]	; 0x9c
   11818:	b	117a8 <__snprintf_chk@plt+0x43c>
   1181c:	bl	1124c <__errno_location@plt>
   11820:	mov	r2, #5
   11824:	ldr	r1, [pc, #300]	; 11958 <__snprintf_chk@plt+0x5ec>
   11828:	ldr	r4, [r0]
   1182c:	mov	r0, #0
   11830:	bl	110f0 <dcgettext@plt>
   11834:	mov	r1, r4
   11838:	mov	r2, r0
   1183c:	mov	r0, #0
   11840:	bl	111a4 <error@plt>
   11844:	mov	r3, #125	; 0x7d
   11848:	str	r3, [sp, #156]	; 0x9c
   1184c:	b	117a8 <__snprintf_chk@plt+0x43c>
   11850:	mov	r1, r5
   11854:	mov	r0, #4
   11858:	bl	11294 <prctl@plt>
   1185c:	subs	r1, r0, #0
   11860:	bne	118d4 <__snprintf_chk@plt+0x568>
   11864:	mov	r0, r4
   11868:	bl	110cc <signal@plt>
   1186c:	mov	r0, r4
   11870:	bl	11bd0 <__snprintf_chk@plt+0x864>
   11874:	mov	r0, r4
   11878:	bl	11054 <raise@plt>
   1187c:	b	117f0 <__snprintf_chk@plt+0x484>
   11880:	mov	r2, #5
   11884:	ldr	r1, [pc, #208]	; 1195c <__snprintf_chk@plt+0x5f0>
   11888:	mov	r0, #0
   1188c:	bl	110f0 <dcgettext@plt>
   11890:	mov	r1, #0
   11894:	mov	r2, r0
   11898:	mov	r0, r1
   1189c:	bl	111a4 <error@plt>
   118a0:	b	117e4 <__snprintf_chk@plt+0x478>
   118a4:	mov	r2, #5
   118a8:	ldr	r1, [pc, #176]	; 11960 <__snprintf_chk@plt+0x5f4>
   118ac:	mov	r0, #0
   118b0:	bl	110f0 <dcgettext@plt>
   118b4:	mov	r1, #0
   118b8:	ldr	r3, [sp, #156]	; 0x9c
   118bc:	mov	r2, r0
   118c0:	mov	r0, r1
   118c4:	bl	111a4 <error@plt>
   118c8:	mov	r3, #1
   118cc:	str	r3, [sp, #156]	; 0x9c
   118d0:	b	117a8 <__snprintf_chk@plt+0x43c>
   118d4:	bl	1124c <__errno_location@plt>
   118d8:	mov	r2, #5
   118dc:	ldr	r1, [pc, #128]	; 11964 <__snprintf_chk@plt+0x5f8>
   118e0:	ldr	r7, [r0]
   118e4:	mov	r0, r5
   118e8:	bl	110f0 <dcgettext@plt>
   118ec:	mov	r1, r7
   118f0:	mov	r2, r0
   118f4:	mov	r0, r5
   118f8:	bl	111a4 <error@plt>
   118fc:	b	117f0 <__snprintf_chk@plt+0x484>
   11900:	andeq	r5, r1, r8, lsl #31
   11904:	andeq	r6, r1, ip, asr r7
   11908:	muleq	r1, r8, r6
   1190c:	andeq	r7, r2, r4, lsr r1
   11910:	andeq	r2, r1, r0, lsl #10
   11914:	andeq	r5, r1, ip, ror #27
   11918:	andeq	r6, r1, r4, lsl #15
   1191c:	andeq	r7, r2, r8, lsr r3
   11920:	andeq	r7, r2, ip, lsr #2
   11924:	andeq	r7, r2, r0, asr #6
   11928:	andeq	r7, r2, r4, lsr r3
   1192c:	andeq	r7, r2, r0, lsr r1
   11930:	andeq	r6, r1, r4, ror r7
   11934:	ldrdeq	r5, [r1], -r8
   11938:	muleq	r1, r4, r6
   1193c:	andeq	r0, r0, r1, lsl #2
   11940:	andeq	r7, r2, r8, lsr #6
   11944:	andeq	r1, r1, ip, lsr ip
   11948:	muleq	r1, r0, sl
   1194c:	andeq	r6, r1, r4, lsr #15
   11950:	andeq	r6, r1, ip, lsl #15
   11954:	muleq	r1, ip, lr
   11958:	andeq	r6, r1, r0, asr #15
   1195c:	ldrdeq	r6, [r1], -ip
   11960:	andeq	r6, r1, r8, lsr #16
   11964:	andeq	r6, r1, r0, lsl #16
   11968:	mov	fp, #0
   1196c:	mov	lr, #0
   11970:	pop	{r1}		; (ldr r1, [sp], #4)
   11974:	mov	r2, sp
   11978:	push	{r2}		; (str r2, [sp, #-4]!)
   1197c:	push	{r0}		; (str r0, [sp, #-4]!)
   11980:	ldr	ip, [pc, #16]	; 11998 <__snprintf_chk@plt+0x62c>
   11984:	push	{ip}		; (str ip, [sp, #-4]!)
   11988:	ldr	r0, [pc, #12]	; 1199c <__snprintf_chk@plt+0x630>
   1198c:	ldr	r3, [pc, #12]	; 119a0 <__snprintf_chk@plt+0x634>
   11990:	bl	111d4 <__libc_start_main@plt>
   11994:	bl	11360 <abort@plt>
   11998:	andeq	r5, r1, ip, lsl #27
   1199c:	andeq	r1, r1, r8, ror r3
   119a0:	andeq	r5, r1, ip, lsr #26
   119a4:	ldr	r3, [pc, #20]	; 119c0 <__snprintf_chk@plt+0x654>
   119a8:	ldr	r2, [pc, #20]	; 119c4 <__snprintf_chk@plt+0x658>
   119ac:	add	r3, pc, r3
   119b0:	ldr	r2, [r3, r2]
   119b4:	cmp	r2, #0
   119b8:	bxeq	lr
   119bc:	b	111ec <__gmon_start__@plt>
   119c0:	andeq	r5, r1, ip, asr #12
   119c4:	andeq	r0, r0, r0, lsr #2
   119c8:	ldr	r3, [pc, #28]	; 119ec <__snprintf_chk@plt+0x680>
   119cc:	ldr	r0, [pc, #28]	; 119f0 <__snprintf_chk@plt+0x684>
   119d0:	sub	r3, r3, r0
   119d4:	cmp	r3, #6
   119d8:	bxls	lr
   119dc:	ldr	r3, [pc, #16]	; 119f4 <__snprintf_chk@plt+0x688>
   119e0:	cmp	r3, #0
   119e4:	bxeq	lr
   119e8:	bx	r3
   119ec:	andeq	r7, r2, pc, lsl r3
   119f0:	andeq	r7, r2, ip, lsl r3
   119f4:	andeq	r0, r0, r0
   119f8:	ldr	r1, [pc, #36]	; 11a24 <__snprintf_chk@plt+0x6b8>
   119fc:	ldr	r0, [pc, #36]	; 11a28 <__snprintf_chk@plt+0x6bc>
   11a00:	sub	r1, r1, r0
   11a04:	asr	r1, r1, #2
   11a08:	add	r1, r1, r1, lsr #31
   11a0c:	asrs	r1, r1, #1
   11a10:	bxeq	lr
   11a14:	ldr	r3, [pc, #16]	; 11a2c <__snprintf_chk@plt+0x6c0>
   11a18:	cmp	r3, #0
   11a1c:	bxeq	lr
   11a20:	bx	r3
   11a24:	andeq	r7, r2, ip, lsl r3
   11a28:	andeq	r7, r2, ip, lsl r3
   11a2c:	andeq	r0, r0, r0
   11a30:	push	{r4, lr}
   11a34:	ldr	r4, [pc, #24]	; 11a54 <__snprintf_chk@plt+0x6e8>
   11a38:	ldrb	r3, [r4]
   11a3c:	cmp	r3, #0
   11a40:	popne	{r4, pc}
   11a44:	bl	119c8 <__snprintf_chk@plt+0x65c>
   11a48:	mov	r3, #1
   11a4c:	strb	r3, [r4]
   11a50:	pop	{r4, pc}
   11a54:	andeq	r7, r2, ip, lsr r3
   11a58:	ldr	r0, [pc, #40]	; 11a88 <__snprintf_chk@plt+0x71c>
   11a5c:	ldr	r3, [r0]
   11a60:	cmp	r3, #0
   11a64:	bne	11a6c <__snprintf_chk@plt+0x700>
   11a68:	b	119f8 <__snprintf_chk@plt+0x68c>
   11a6c:	ldr	r3, [pc, #24]	; 11a8c <__snprintf_chk@plt+0x720>
   11a70:	cmp	r3, #0
   11a74:	beq	11a68 <__snprintf_chk@plt+0x6fc>
   11a78:	push	{r4, lr}
   11a7c:	blx	r3
   11a80:	pop	{r4, lr}
   11a84:	b	119f8 <__snprintf_chk@plt+0x68c>
   11a88:	andeq	r6, r2, r4, lsl #30
   11a8c:	andeq	r0, r0, r0
   11a90:	bx	lr
   11a94:	push	{r4, r5, r6, lr}
   11a98:	vpush	{d8}
   11a9c:	mov	r5, r0
   11aa0:	vmov.f64	d8, d0
   11aa4:	sub	sp, sp, #32
   11aa8:	add	r4, sp, #8
   11aac:	mov	r0, r4
   11ab0:	bl	125e8 <__snprintf_chk@plt+0x127c>
   11ab4:	ldm	r4, {r0, r1}
   11ab8:	add	r3, sp, #32
   11abc:	mov	r4, #0
   11ac0:	stmdb	r3, {r0, r1}
   11ac4:	add	r2, sp, #4
   11ac8:	mov	r1, r4
   11acc:	mov	r0, r4
   11ad0:	str	r4, [sp, #16]
   11ad4:	str	r4, [sp, #20]
   11ad8:	bl	11114 <timer_create@plt>
   11adc:	subs	r6, r0, #0
   11ae0:	beq	11b64 <__snprintf_chk@plt+0x7f8>
   11ae4:	cmp	r5, #0
   11ae8:	bne	11b30 <__snprintf_chk@plt+0x7c4>
   11aec:	vldr	d7, [pc, #204]	; 11bc0 <__snprintf_chk@plt+0x854>
   11af0:	vcmpe.f64	d8, d7
   11af4:	vmrs	APSR_nzcv, fpscr
   11af8:	mvnge	r0, #0
   11afc:	bge	11b20 <__snprintf_chk@plt+0x7b4>
   11b00:	vcvt.u32.f64	s15, d8
   11b04:	vcvt.f64.u32	d6, s15
   11b08:	vmov	r3, s15
   11b0c:	vcmpe.f64	d8, d6
   11b10:	vmrs	APSR_nzcv, fpscr
   11b14:	movgt	r0, #1
   11b18:	movle	r0, #0
   11b1c:	add	r0, r0, r3
   11b20:	bl	110fc <alarm@plt>
   11b24:	add	sp, sp, #32
   11b28:	vpop	{d8}
   11b2c:	pop	{r4, r5, r6, pc}
   11b30:	bl	1124c <__errno_location@plt>
   11b34:	ldr	r5, [r0]
   11b38:	cmp	r5, #38	; 0x26
   11b3c:	beq	11aec <__snprintf_chk@plt+0x780>
   11b40:	mov	r2, #5
   11b44:	ldr	r1, [pc, #124]	; 11bc8 <__snprintf_chk@plt+0x85c>
   11b48:	mov	r0, r4
   11b4c:	bl	110f0 <dcgettext@plt>
   11b50:	mov	r1, r5
   11b54:	mov	r2, r0
   11b58:	mov	r0, r4
   11b5c:	bl	111a4 <error@plt>
   11b60:	b	11aec <__snprintf_chk@plt+0x780>
   11b64:	mov	r3, r6
   11b68:	add	r2, sp, #16
   11b6c:	mov	r1, r6
   11b70:	ldr	r0, [sp, #4]
   11b74:	bl	11138 <timer_settime@plt>
   11b78:	cmp	r0, r4
   11b7c:	beq	11b24 <__snprintf_chk@plt+0x7b8>
   11b80:	cmp	r5, r4
   11b84:	bne	11b94 <__snprintf_chk@plt+0x828>
   11b88:	ldr	r0, [sp, #4]
   11b8c:	bl	111b0 <timer_delete@plt>
   11b90:	b	11aec <__snprintf_chk@plt+0x780>
   11b94:	bl	1124c <__errno_location@plt>
   11b98:	mov	r2, #5
   11b9c:	ldr	r1, [pc, #40]	; 11bcc <__snprintf_chk@plt+0x860>
   11ba0:	ldr	r4, [r0]
   11ba4:	mov	r0, r6
   11ba8:	bl	110f0 <dcgettext@plt>
   11bac:	mov	r1, r4
   11bb0:	mov	r2, r0
   11bb4:	mov	r0, r6
   11bb8:	bl	111a4 <error@plt>
   11bbc:	b	11b88 <__snprintf_chk@plt+0x81c>
   11bc0:			; <UNDEFINED> instruction: 0xffe00000
   11bc4:	strdmi	pc, [pc, #255]	; 11ccb <__snprintf_chk@plt+0x95f>
   11bc8:	andeq	r5, r1, r4, lsl #29
   11bcc:	andeq	r5, r1, ip, ror #28
   11bd0:	push	{r4, lr}
   11bd4:	sub	sp, sp, #128	; 0x80
   11bd8:	mov	r4, r0
   11bdc:	mov	r0, sp
   11be0:	bl	112f4 <sigemptyset@plt>
   11be4:	mov	r1, r4
   11be8:	mov	r0, sp
   11bec:	bl	111c8 <sigaddset@plt>
   11bf0:	mov	r1, sp
   11bf4:	mov	r2, #0
   11bf8:	mov	r0, #1
   11bfc:	bl	11084 <sigprocmask@plt>
   11c00:	cmp	r0, #0
   11c04:	beq	11c30 <__snprintf_chk@plt+0x8c4>
   11c08:	bl	1124c <__errno_location@plt>
   11c0c:	mov	r2, #5
   11c10:	ldr	r1, [pc, #32]	; 11c38 <__snprintf_chk@plt+0x8cc>
   11c14:	ldr	r4, [r0]
   11c18:	mov	r0, #0
   11c1c:	bl	110f0 <dcgettext@plt>
   11c20:	mov	r1, r4
   11c24:	mov	r2, r0
   11c28:	mov	r0, #0
   11c2c:	bl	111a4 <error@plt>
   11c30:	add	sp, sp, #128	; 0x80
   11c34:	pop	{r4, pc}
   11c38:	muleq	r1, ip, lr
   11c3c:	cmp	r0, #14
   11c40:	push	{r4, r5, r6, r7, lr}
   11c44:	vpush	{d8-d9}
   11c48:	ldreq	r4, [pc, #416]	; 11df0 <__snprintf_chk@plt+0xa84>
   11c4c:	ldrne	r4, [pc, #412]	; 11df0 <__snprintf_chk@plt+0xa84>
   11c50:	ldreq	r2, [pc, #412]	; 11df4 <__snprintf_chk@plt+0xa88>
   11c54:	moveq	r3, #1
   11c58:	ldr	r6, [r4, #4]
   11c5c:	movne	r5, r0
   11c60:	ldreq	r5, [r2]
   11c64:	streq	r3, [r4]
   11c68:	cmp	r6, #0
   11c6c:	sub	sp, sp, #36	; 0x24
   11c70:	beq	11ddc <__snprintf_chk@plt+0xa70>
   11c74:	vldr	d9, [r4, #8]
   11c78:	vldr	d8, [pc, #360]	; 11de8 <__snprintf_chk@plt+0xa7c>
   11c7c:	vcmp.f64	d9, d8
   11c80:	vmrs	APSR_nzcv, fpscr
   11c84:	bne	11d20 <__snprintf_chk@plt+0x9b4>
   11c88:	ldrb	r3, [r4, #16]
   11c8c:	cmp	r3, #0
   11c90:	bne	11d58 <__snprintf_chk@plt+0x9ec>
   11c94:	mov	r1, r5
   11c98:	mov	r0, r6
   11c9c:	bl	11204 <kill@plt>
   11ca0:	ldrb	r4, [r4, #24]
   11ca4:	cmp	r4, #0
   11ca8:	beq	11cb8 <__snprintf_chk@plt+0x94c>
   11cac:	add	sp, sp, #36	; 0x24
   11cb0:	vpop	{d8-d9}
   11cb4:	pop	{r4, r5, r6, r7, pc}
   11cb8:	mov	r1, #1
   11cbc:	mov	r0, r5
   11cc0:	bl	110cc <signal@plt>
   11cc4:	mov	r1, r5
   11cc8:	mov	r0, r4
   11ccc:	bl	11204 <kill@plt>
   11cd0:	cmp	r5, #9
   11cd4:	cmpne	r5, #18
   11cd8:	beq	11cac <__snprintf_chk@plt+0x940>
   11cdc:	cmp	r6, #0
   11ce0:	bne	11cf0 <__snprintf_chk@plt+0x984>
   11ce4:	mov	r1, #1
   11ce8:	mov	r0, #18
   11cec:	bl	110cc <signal@plt>
   11cf0:	mov	r0, r6
   11cf4:	mov	r1, #18
   11cf8:	bl	11204 <kill@plt>
   11cfc:	mov	r1, #1
   11d00:	mov	r0, #18
   11d04:	bl	110cc <signal@plt>
   11d08:	mov	r1, #18
   11d0c:	mov	r0, #0
   11d10:	bl	11204 <kill@plt>
   11d14:	add	sp, sp, #36	; 0x24
   11d18:	vpop	{d8-d9}
   11d1c:	pop	{r4, r5, r6, r7, pc}
   11d20:	bl	1124c <__errno_location@plt>
   11d24:	ldr	r3, [pc, #200]	; 11df4 <__snprintf_chk@plt+0xa88>
   11d28:	mov	r2, #9
   11d2c:	vmov.f64	d0, d9
   11d30:	str	r2, [r3]
   11d34:	mov	r6, r0
   11d38:	mov	r0, #0
   11d3c:	ldr	r7, [r6]
   11d40:	bl	11a94 <__snprintf_chk@plt+0x728>
   11d44:	ldrb	r3, [r4, #16]
   11d48:	str	r7, [r6]
   11d4c:	vstr	d8, [r4, #8]
   11d50:	cmp	r3, #0
   11d54:	beq	11da0 <__snprintf_chk@plt+0xa34>
   11d58:	add	r1, sp, #12
   11d5c:	mov	r0, r5
   11d60:	bl	14760 <__snprintf_chk@plt+0x33f4>
   11d64:	cmp	r0, #0
   11d68:	bne	11dbc <__snprintf_chk@plt+0xa50>
   11d6c:	mov	r2, #5
   11d70:	ldr	r1, [pc, #128]	; 11df8 <__snprintf_chk@plt+0xa8c>
   11d74:	mov	r0, #0
   11d78:	bl	110f0 <dcgettext@plt>
   11d7c:	mov	r6, r0
   11d80:	ldr	r0, [r4, #20]
   11d84:	bl	145cc <__snprintf_chk@plt+0x3260>
   11d88:	mov	r1, #0
   11d8c:	mov	r2, r6
   11d90:	add	r3, sp, #12
   11d94:	str	r0, [sp]
   11d98:	mov	r0, r1
   11d9c:	bl	111a4 <error@plt>
   11da0:	ldr	r6, [r4, #4]
   11da4:	cmp	r6, #0
   11da8:	bne	11c94 <__snprintf_chk@plt+0x928>
   11dac:	mov	r1, #1
   11db0:	mov	r0, r5
   11db4:	bl	110cc <signal@plt>
   11db8:	b	11c94 <__snprintf_chk@plt+0x928>
   11dbc:	ldr	r2, [pc, #56]	; 11dfc <__snprintf_chk@plt+0xa90>
   11dc0:	mov	r3, #19
   11dc4:	mov	r1, r3
   11dc8:	stm	sp, {r2, r5}
   11dcc:	add	r0, sp, #12
   11dd0:	mov	r2, #1
   11dd4:	bl	1136c <__snprintf_chk@plt>
   11dd8:	b	11d6c <__snprintf_chk@plt+0xa00>
   11ddc:	add	r0, r5, #128	; 0x80
   11de0:	bl	1109c <_exit@plt>
   11de4:	nop			; (mov r0, r0)
	...
   11df0:	andeq	r7, r2, r0, asr #6
   11df4:	andeq	r7, r2, ip, lsr #2
   11df8:			; <UNDEFINED> instruction: 0x00015eb8
   11dfc:			; <UNDEFINED> instruction: 0x00015eb4
   11e00:	subs	r5, r0, #0
   11e04:	push	{r7, lr}
   11e08:	sub	sp, sp, #56	; 0x38
   11e0c:	beq	11e48 <__snprintf_chk@plt+0xadc>
   11e10:	ldr	r3, [pc, #760]	; 12110 <__snprintf_chk@plt+0xda4>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #756]	; 12114 <__snprintf_chk@plt+0xda8>
   11e1c:	mov	r0, #0
   11e20:	ldr	r4, [r3]
   11e24:	bl	110f0 <dcgettext@plt>
   11e28:	ldr	r3, [pc, #744]	; 12118 <__snprintf_chk@plt+0xdac>
   11e2c:	mov	r1, #1
   11e30:	ldr	r3, [r3]
   11e34:	mov	r2, r0
   11e38:	mov	r0, r4
   11e3c:	bl	112b8 <__fprintf_chk@plt>
   11e40:	mov	r0, r5
   11e44:	bl	1121c <exit@plt>
   11e48:	mov	r2, #5
   11e4c:	ldr	r1, [pc, #712]	; 1211c <__snprintf_chk@plt+0xdb0>
   11e50:	bl	110f0 <dcgettext@plt>
   11e54:	ldr	r3, [pc, #700]	; 12118 <__snprintf_chk@plt+0xdac>
   11e58:	ldr	r7, [pc, #704]	; 12120 <__snprintf_chk@plt+0xdb4>
   11e5c:	ldr	r4, [pc, #704]	; 12124 <__snprintf_chk@plt+0xdb8>
   11e60:	ldr	r3, [r3]
   11e64:	mov	r2, r3
   11e68:	mov	r1, r0
   11e6c:	mov	r0, #1
   11e70:	bl	11288 <__printf_chk@plt>
   11e74:	mov	r2, #5
   11e78:	ldr	r1, [pc, #680]	; 12128 <__snprintf_chk@plt+0xdbc>
   11e7c:	mov	r0, r5
   11e80:	bl	110f0 <dcgettext@plt>
   11e84:	ldr	r1, [r7]
   11e88:	bl	11048 <fputs_unlocked@plt>
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #660]	; 1212c <__snprintf_chk@plt+0xdc0>
   11e94:	mov	r0, r5
   11e98:	bl	110f0 <dcgettext@plt>
   11e9c:	ldr	r1, [r7]
   11ea0:	bl	11048 <fputs_unlocked@plt>
   11ea4:	mov	r2, #5
   11ea8:	ldr	r1, [pc, #640]	; 12130 <__snprintf_chk@plt+0xdc4>
   11eac:	mov	r0, r5
   11eb0:	bl	110f0 <dcgettext@plt>
   11eb4:	ldr	r1, [r7]
   11eb8:	bl	11048 <fputs_unlocked@plt>
   11ebc:	mov	r2, #5
   11ec0:	ldr	r1, [pc, #620]	; 12134 <__snprintf_chk@plt+0xdc8>
   11ec4:	mov	r0, r5
   11ec8:	bl	110f0 <dcgettext@plt>
   11ecc:	ldr	r1, [r7]
   11ed0:	bl	11048 <fputs_unlocked@plt>
   11ed4:	mov	r2, #5
   11ed8:	ldr	r1, [pc, #600]	; 12138 <__snprintf_chk@plt+0xdcc>
   11edc:	mov	r0, r5
   11ee0:	bl	110f0 <dcgettext@plt>
   11ee4:	ldr	r1, [r7]
   11ee8:	bl	11048 <fputs_unlocked@plt>
   11eec:	mov	r2, #5
   11ef0:	ldr	r1, [pc, #580]	; 1213c <__snprintf_chk@plt+0xdd0>
   11ef4:	mov	r0, r5
   11ef8:	bl	110f0 <dcgettext@plt>
   11efc:	ldr	r1, [r7]
   11f00:	bl	11048 <fputs_unlocked@plt>
   11f04:	mov	r2, #5
   11f08:	ldr	r1, [pc, #560]	; 12140 <__snprintf_chk@plt+0xdd4>
   11f0c:	mov	r0, r5
   11f10:	bl	110f0 <dcgettext@plt>
   11f14:	ldr	r1, [r7]
   11f18:	bl	11048 <fputs_unlocked@plt>
   11f1c:	mov	r2, #5
   11f20:	ldr	r1, [pc, #540]	; 12144 <__snprintf_chk@plt+0xdd8>
   11f24:	mov	r0, r5
   11f28:	bl	110f0 <dcgettext@plt>
   11f2c:	ldr	r1, [r7]
   11f30:	bl	11048 <fputs_unlocked@plt>
   11f34:	mov	r2, #5
   11f38:	ldr	r1, [pc, #520]	; 12148 <__snprintf_chk@plt+0xddc>
   11f3c:	mov	r0, r5
   11f40:	bl	110f0 <dcgettext@plt>
   11f44:	ldr	r1, [r7]
   11f48:	bl	11048 <fputs_unlocked@plt>
   11f4c:	ldm	r4!, {r0, r1, r2, r3}
   11f50:	mov	lr, sp
   11f54:	stmia	lr!, {r0, r1, r2, r3}
   11f58:	ldm	r4!, {r0, r1, r2, r3}
   11f5c:	ldr	ip, [sp]
   11f60:	stmia	lr!, {r0, r1, r2, r3}
   11f64:	cmp	ip, #0
   11f68:	ldm	r4!, {r0, r1, r2, r3}
   11f6c:	stmia	lr!, {r0, r1, r2, r3}
   11f70:	ldm	r4, {r0, r1}
   11f74:	moveq	r4, sp
   11f78:	stm	lr, {r0, r1}
   11f7c:	beq	11fac <__snprintf_chk@plt+0xc40>
   11f80:	ldr	r6, [pc, #452]	; 1214c <__snprintf_chk@plt+0xde0>
   11f84:	mov	r4, sp
   11f88:	b	11f98 <__snprintf_chk@plt+0xc2c>
   11f8c:	ldr	ip, [r4, #8]!
   11f90:	cmp	ip, #0
   11f94:	beq	11fac <__snprintf_chk@plt+0xc40>
   11f98:	mov	r1, ip
   11f9c:	mov	r0, r6
   11fa0:	bl	11060 <strcmp@plt>
   11fa4:	cmp	r0, #0
   11fa8:	bne	11f8c <__snprintf_chk@plt+0xc20>
   11fac:	ldr	r4, [r4, #4]
   11fb0:	mov	r2, #5
   11fb4:	cmp	r4, #0
   11fb8:	ldr	r1, [pc, #400]	; 12150 <__snprintf_chk@plt+0xde4>
   11fbc:	beq	12064 <__snprintf_chk@plt+0xcf8>
   11fc0:	mov	r0, #0
   11fc4:	bl	110f0 <dcgettext@plt>
   11fc8:	ldr	r3, [pc, #388]	; 12154 <__snprintf_chk@plt+0xde8>
   11fcc:	ldr	r2, [pc, #388]	; 12158 <__snprintf_chk@plt+0xdec>
   11fd0:	mov	r1, r0
   11fd4:	mov	r0, #1
   11fd8:	bl	11288 <__printf_chk@plt>
   11fdc:	mov	r1, #0
   11fe0:	mov	r0, #5
   11fe4:	bl	112e8 <setlocale@plt>
   11fe8:	cmp	r0, #0
   11fec:	ldreq	r6, [pc, #344]	; 1214c <__snprintf_chk@plt+0xde0>
   11ff0:	beq	1200c <__snprintf_chk@plt+0xca0>
   11ff4:	mov	r2, #3
   11ff8:	ldr	r1, [pc, #348]	; 1215c <__snprintf_chk@plt+0xdf0>
   11ffc:	bl	11354 <strncmp@plt>
   12000:	ldr	r6, [pc, #324]	; 1214c <__snprintf_chk@plt+0xde0>
   12004:	cmp	r0, #0
   12008:	bne	120f4 <__snprintf_chk@plt+0xd88>
   1200c:	mov	r2, #5
   12010:	ldr	r1, [pc, #328]	; 12160 <__snprintf_chk@plt+0xdf4>
   12014:	mov	r0, #0
   12018:	bl	110f0 <dcgettext@plt>
   1201c:	ldr	r3, [pc, #296]	; 1214c <__snprintf_chk@plt+0xde0>
   12020:	ldr	r2, [pc, #300]	; 12154 <__snprintf_chk@plt+0xde8>
   12024:	mov	r1, r0
   12028:	mov	r0, #1
   1202c:	bl	11288 <__printf_chk@plt>
   12030:	mov	r2, #5
   12034:	ldr	r1, [pc, #296]	; 12164 <__snprintf_chk@plt+0xdf8>
   12038:	mov	r0, #0
   1203c:	bl	110f0 <dcgettext@plt>
   12040:	ldr	r2, [pc, #288]	; 12168 <__snprintf_chk@plt+0xdfc>
   12044:	cmp	r4, r6
   12048:	ldr	r3, [pc, #284]	; 1216c <__snprintf_chk@plt+0xe00>
   1204c:	movne	r3, r2
   12050:	mov	r1, r0
   12054:	mov	r2, r4
   12058:	mov	r0, #1
   1205c:	bl	11288 <__printf_chk@plt>
   12060:	b	11e40 <__snprintf_chk@plt+0xad4>
   12064:	mov	r0, r4
   12068:	bl	110f0 <dcgettext@plt>
   1206c:	ldr	r3, [pc, #224]	; 12154 <__snprintf_chk@plt+0xde8>
   12070:	ldr	r2, [pc, #224]	; 12158 <__snprintf_chk@plt+0xdec>
   12074:	mov	r1, r0
   12078:	mov	r0, #1
   1207c:	bl	11288 <__printf_chk@plt>
   12080:	mov	r1, r4
   12084:	mov	r0, #5
   12088:	bl	112e8 <setlocale@plt>
   1208c:	cmp	r0, #0
   12090:	beq	120a8 <__snprintf_chk@plt+0xd3c>
   12094:	mov	r2, #3
   12098:	ldr	r1, [pc, #188]	; 1215c <__snprintf_chk@plt+0xdf0>
   1209c:	bl	11354 <strncmp@plt>
   120a0:	cmp	r0, #0
   120a4:	bne	120ec <__snprintf_chk@plt+0xd80>
   120a8:	mov	r2, #5
   120ac:	ldr	r1, [pc, #172]	; 12160 <__snprintf_chk@plt+0xdf4>
   120b0:	mov	r0, #0
   120b4:	bl	110f0 <dcgettext@plt>
   120b8:	ldr	r3, [pc, #140]	; 1214c <__snprintf_chk@plt+0xde0>
   120bc:	ldr	r2, [pc, #144]	; 12154 <__snprintf_chk@plt+0xde8>
   120c0:	mov	r4, r3
   120c4:	mov	r1, r0
   120c8:	mov	r0, #1
   120cc:	bl	11288 <__printf_chk@plt>
   120d0:	ldr	r1, [pc, #140]	; 12164 <__snprintf_chk@plt+0xdf8>
   120d4:	mov	r2, #5
   120d8:	mov	r0, #0
   120dc:	bl	110f0 <dcgettext@plt>
   120e0:	ldr	r3, [pc, #132]	; 1216c <__snprintf_chk@plt+0xe00>
   120e4:	mov	r1, r0
   120e8:	b	12054 <__snprintf_chk@plt+0xce8>
   120ec:	ldr	r6, [pc, #88]	; 1214c <__snprintf_chk@plt+0xde0>
   120f0:	mov	r4, r6
   120f4:	mov	r2, #5
   120f8:	ldr	r1, [pc, #112]	; 12170 <__snprintf_chk@plt+0xe04>
   120fc:	mov	r0, #0
   12100:	bl	110f0 <dcgettext@plt>
   12104:	ldr	r1, [r7]
   12108:	bl	11048 <fputs_unlocked@plt>
   1210c:	b	1200c <__snprintf_chk@plt+0xca0>
   12110:	andeq	r7, r2, r0, lsr r3
   12114:	andeq	r5, r1, r0, ror #29
   12118:	andeq	r7, r2, r4, ror #6
   1211c:	andeq	r5, r1, r8, lsl #30
   12120:	andeq	r7, r2, r4, lsr r3
   12124:			; <UNDEFINED> instruction: 0x00015db4
   12128:	andeq	r5, r1, ip, asr #30
   1212c:	andeq	r5, r1, ip, lsl #31
   12130:	ldrdeq	r5, [r1], -r8
   12134:			; <UNDEFINED> instruction: 0x000162b4
   12138:	strdeq	r6, [r1], -r8
   1213c:	andeq	r6, r1, r8, lsr #6
   12140:	andeq	r6, r1, r0, ror #6
   12144:	andeq	r6, r1, r0, lsr #8
   12148:	andeq	r6, r1, ip, lsl #10
   1214c:	ldrdeq	r5, [r1], -r8
   12150:	andeq	r6, r1, r4, asr r6
   12154:	andeq	r6, r1, ip, ror #12
   12158:	muleq	r1, r4, r6
   1215c:	andeq	r6, r1, r4, lsr #13
   12160:	strdeq	r6, [r1], -r0
   12164:	andeq	r6, r1, ip, lsl #14
   12168:	andeq	r5, r1, r8, lsl #31
   1216c:	andeq	r6, r1, r4, asr r8
   12170:	andeq	r6, r1, r8, lsr #13
   12174:	push	{r4, r5, lr}
   12178:	sub	sp, sp, #20
   1217c:	ldr	r3, [pc, #316]	; 122c0 <__snprintf_chk@plt+0xf54>
   12180:	add	r2, sp, #8
   12184:	add	r1, sp, #4
   12188:	mov	r4, r0
   1218c:	bl	152f8 <__snprintf_chk@plt+0x3f8c>
   12190:	cmp	r0, #0
   12194:	bne	121a8 <__snprintf_chk@plt+0xe3c>
   12198:	bl	1124c <__errno_location@plt>
   1219c:	ldr	r3, [r0]
   121a0:	cmp	r3, #34	; 0x22
   121a4:	bne	12264 <__snprintf_chk@plt+0xef8>
   121a8:	vldr	d0, [sp, #8]
   121ac:	vcmpe.f64	d0, #0.0
   121b0:	vmrs	APSR_nzcv, fpscr
   121b4:	blt	12264 <__snprintf_chk@plt+0xef8>
   121b8:	ldr	r2, [sp, #4]
   121bc:	ldrb	r3, [r2]
   121c0:	cmp	r3, #0
   121c4:	beq	12224 <__snprintf_chk@plt+0xeb8>
   121c8:	ldrb	r2, [r2, #1]
   121cc:	cmp	r2, #0
   121d0:	bne	12264 <__snprintf_chk@plt+0xef8>
   121d4:	sub	r3, r3, #100	; 0x64
   121d8:	cmp	r3, #15
   121dc:	ldrls	pc, [pc, r3, lsl #2]
   121e0:	b	12264 <__snprintf_chk@plt+0xef8>
   121e4:	andeq	r2, r1, r4, asr #4
   121e8:	andeq	r2, r1, r4, ror #4
   121ec:	andeq	r2, r1, r4, ror #4
   121f0:	andeq	r2, r1, r4, ror #4
   121f4:	andeq	r2, r1, r4, lsr r2
   121f8:	andeq	r2, r1, r4, ror #4
   121fc:	andeq	r2, r1, r4, ror #4
   12200:	andeq	r2, r1, r4, ror #4
   12204:	andeq	r2, r1, r4, ror #4
   12208:	andeq	r2, r1, r4, asr r2
   1220c:	andeq	r2, r1, r4, ror #4
   12210:	andeq	r2, r1, r4, ror #4
   12214:	andeq	r2, r1, r4, ror #4
   12218:	andeq	r2, r1, r4, ror #4
   1221c:	andeq	r2, r1, r4, ror #4
   12220:	andeq	r2, r1, r4, lsr #4
   12224:	vldr	d7, [pc, #116]	; 122a0 <__snprintf_chk@plt+0xf34>
   12228:	vmul.f64	d0, d0, d7
   1222c:	add	sp, sp, #20
   12230:	pop	{r4, r5, pc}
   12234:	vldr	d7, [pc, #108]	; 122a8 <__snprintf_chk@plt+0xf3c>
   12238:	vmul.f64	d0, d0, d7
   1223c:	add	sp, sp, #20
   12240:	pop	{r4, r5, pc}
   12244:	vldr	d7, [pc, #100]	; 122b0 <__snprintf_chk@plt+0xf44>
   12248:	vmul.f64	d0, d0, d7
   1224c:	add	sp, sp, #20
   12250:	pop	{r4, r5, pc}
   12254:	vldr	d7, [pc, #92]	; 122b8 <__snprintf_chk@plt+0xf4c>
   12258:	vmul.f64	d0, d0, d7
   1225c:	add	sp, sp, #20
   12260:	pop	{r4, r5, pc}
   12264:	mov	r2, #5
   12268:	ldr	r1, [pc, #84]	; 122c4 <__snprintf_chk@plt+0xf58>
   1226c:	mov	r0, #0
   12270:	bl	110f0 <dcgettext@plt>
   12274:	mov	r5, r0
   12278:	mov	r0, r4
   1227c:	bl	145cc <__snprintf_chk@plt+0x3260>
   12280:	mov	r1, #0
   12284:	mov	r2, r5
   12288:	mov	r3, r0
   1228c:	mov	r0, r1
   12290:	bl	111a4 <error@plt>
   12294:	mov	r0, #125	; 0x7d
   12298:	bl	11e00 <__snprintf_chk@plt+0xa94>
   1229c:	nop			; (mov r0, r0)
   122a0:	andeq	r0, r0, r0
   122a4:	svccc	0x00f00000	; IMB
   122a8:	andeq	r0, r0, r0
   122ac:	adcmi	r2, ip, r0
   122b0:	andeq	r0, r0, r0
   122b4:	rscsmi	r1, r5, r0, lsl #16
   122b8:	andeq	r0, r0, r0
   122bc:	submi	r0, lr, r0
   122c0:	andeq	r2, r1, r4, ror #8
   122c4:	andeq	r6, r1, r0, asr #14
   122c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   122cc:	mov	r7, r0
   122d0:	ldrb	r3, [r0]
   122d4:	sub	sp, sp, #12
   122d8:	mov	r8, r1
   122dc:	sub	r3, r3, #48	; 0x30
   122e0:	cmp	r3, #9
   122e4:	bhi	12350 <__snprintf_chk@plt+0xfe4>
   122e8:	bl	1124c <__errno_location@plt>
   122ec:	mov	r3, #0
   122f0:	mov	r2, #10
   122f4:	add	r1, sp, #4
   122f8:	str	r3, [r0]
   122fc:	mov	r4, r0
   12300:	mov	r0, r7
   12304:	bl	1106c <strtol@plt>
   12308:	ldr	r3, [sp, #4]
   1230c:	cmp	r7, r3
   12310:	beq	123ec <__snprintf_chk@plt+0x1080>
   12314:	ldrb	r3, [r3]
   12318:	cmp	r3, #0
   1231c:	bne	123ec <__snprintf_chk@plt+0x1080>
   12320:	ldr	r3, [r4]
   12324:	cmp	r3, #0
   12328:	bne	123ec <__snprintf_chk@plt+0x1080>
   1232c:	cmn	r0, #1
   12330:	streq	r0, [sp]
   12334:	beq	123f4 <__snprintf_chk@plt+0x1088>
   12338:	cmp	r0, #254	; 0xfe
   1233c:	movle	r3, #127	; 0x7f
   12340:	movgt	r3, #255	; 0xff
   12344:	and	r0, r0, r3
   12348:	str	r0, [sp]
   1234c:	b	123b0 <__snprintf_chk@plt+0x1044>
   12350:	bl	1529c <__snprintf_chk@plt+0x3f30>
   12354:	ldrb	r4, [r0]
   12358:	mov	r9, r0
   1235c:	cmp	r4, #0
   12360:	movne	r5, r0
   12364:	ldrne	r6, [pc, #240]	; 1245c <__snprintf_chk@plt+0x10f0>
   12368:	beq	12390 <__snprintf_chk@plt+0x1024>
   1236c:	mov	r1, r4
   12370:	mov	r0, r6
   12374:	bl	11240 <strchr@plt>
   12378:	sub	r4, r4, #32
   1237c:	cmp	r0, #0
   12380:	strbne	r4, [r5]
   12384:	ldrb	r4, [r5, #1]!
   12388:	cmp	r4, #0
   1238c:	bne	1236c <__snprintf_chk@plt+0x1000>
   12390:	mov	r1, sp
   12394:	mov	r0, r9
   12398:	bl	145e4 <__snprintf_chk@plt+0x3278>
   1239c:	cmp	r0, #0
   123a0:	bne	123d4 <__snprintf_chk@plt+0x1068>
   123a4:	mov	r0, r9
   123a8:	bl	126b4 <__snprintf_chk@plt+0x1348>
   123ac:	ldr	r0, [sp]
   123b0:	cmp	r0, #0
   123b4:	blt	123f4 <__snprintf_chk@plt+0x1088>
   123b8:	mov	r1, r8
   123bc:	bl	14760 <__snprintf_chk@plt+0x33f4>
   123c0:	cmp	r0, #0
   123c4:	bne	123f4 <__snprintf_chk@plt+0x1088>
   123c8:	ldr	r0, [sp]
   123cc:	add	sp, sp, #12
   123d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   123d4:	ldrb	r3, [r9]
   123d8:	cmp	r3, #83	; 0x53
   123dc:	beq	1242c <__snprintf_chk@plt+0x10c0>
   123e0:	mvn	r3, #0
   123e4:	str	r3, [sp]
   123e8:	b	123a4 <__snprintf_chk@plt+0x1038>
   123ec:	mvn	r3, #0
   123f0:	str	r3, [sp]
   123f4:	mov	r2, #5
   123f8:	ldr	r1, [pc, #96]	; 12460 <__snprintf_chk@plt+0x10f4>
   123fc:	mov	r0, #0
   12400:	bl	110f0 <dcgettext@plt>
   12404:	mov	r4, r0
   12408:	mov	r0, r7
   1240c:	bl	145cc <__snprintf_chk@plt+0x3260>
   12410:	mov	r1, #0
   12414:	mov	r2, r4
   12418:	mov	r3, r0
   1241c:	mov	r0, r1
   12420:	bl	111a4 <error@plt>
   12424:	mvn	r0, #0
   12428:	b	123cc <__snprintf_chk@plt+0x1060>
   1242c:	ldrb	r3, [r9, #1]
   12430:	cmp	r3, #73	; 0x49
   12434:	bne	123e0 <__snprintf_chk@plt+0x1074>
   12438:	ldrb	r3, [r9, #2]
   1243c:	cmp	r3, #71	; 0x47
   12440:	bne	123e0 <__snprintf_chk@plt+0x1074>
   12444:	mov	r1, sp
   12448:	add	r0, r9, #3
   1244c:	bl	145e4 <__snprintf_chk@plt+0x3278>
   12450:	cmp	r0, #0
   12454:	bne	123e0 <__snprintf_chk@plt+0x1074>
   12458:	b	123a4 <__snprintf_chk@plt+0x1038>
   1245c:	strdeq	r6, [r1], -r8
   12460:	andeq	r6, r1, r4, lsl r9
   12464:	push	{r4, r5, r6, lr}
   12468:	vpush	{d8}
   1246c:	mov	r4, r1
   12470:	mov	r5, r0
   12474:	sub	sp, sp, #8
   12478:	mov	r1, sp
   1247c:	bl	112a0 <strtod@plt>
   12480:	ldr	r3, [sp]
   12484:	ldrb	r3, [r3]
   12488:	cmp	r3, #0
   1248c:	vmov.f64	d8, d0
   12490:	bne	124b0 <__snprintf_chk@plt+0x1144>
   12494:	cmp	r4, #0
   12498:	vmov.f64	d0, d8
   1249c:	ldrne	r3, [sp]
   124a0:	strne	r3, [r4]
   124a4:	add	sp, sp, #8
   124a8:	vpop	{d8}
   124ac:	pop	{r4, r5, r6, pc}
   124b0:	bl	1124c <__errno_location@plt>
   124b4:	add	r1, sp, #4
   124b8:	mov	r6, r0
   124bc:	mov	r0, r5
   124c0:	ldr	r5, [r6]
   124c4:	bl	15470 <__snprintf_chk@plt+0x4104>
   124c8:	ldm	sp, {r2, r3}
   124cc:	cmp	r2, r3
   124d0:	strcc	r3, [sp]
   124d4:	strcs	r5, [r6]
   124d8:	vmovcc.f64	d8, d0
   124dc:	b	12494 <__snprintf_chk@plt+0x1128>
   124e0:	ldr	r3, [pc, #4]	; 124ec <__snprintf_chk@plt+0x1180>
   124e4:	str	r0, [r3]
   124e8:	bx	lr
   124ec:	andeq	r7, r2, ip, asr r3
   124f0:	ldr	r3, [pc, #4]	; 124fc <__snprintf_chk@plt+0x1190>
   124f4:	strb	r0, [r3, #4]
   124f8:	bx	lr
   124fc:	andeq	r7, r2, ip, asr r3
   12500:	ldr	r3, [pc, #192]	; 125c8 <__snprintf_chk@plt+0x125c>
   12504:	push	{r4, r5, r6, lr}
   12508:	sub	sp, sp, #8
   1250c:	ldr	r0, [r3]
   12510:	bl	154ec <__snprintf_chk@plt+0x4180>
   12514:	cmp	r0, #0
   12518:	beq	1253c <__snprintf_chk@plt+0x11d0>
   1251c:	ldr	r4, [pc, #168]	; 125cc <__snprintf_chk@plt+0x1260>
   12520:	ldrb	r3, [r4, #4]
   12524:	cmp	r3, #0
   12528:	beq	12558 <__snprintf_chk@plt+0x11ec>
   1252c:	bl	1124c <__errno_location@plt>
   12530:	ldr	r3, [r0]
   12534:	cmp	r3, #32
   12538:	bne	12558 <__snprintf_chk@plt+0x11ec>
   1253c:	ldr	r3, [pc, #140]	; 125d0 <__snprintf_chk@plt+0x1264>
   12540:	ldr	r0, [r3]
   12544:	bl	154ec <__snprintf_chk@plt+0x4180>
   12548:	cmp	r0, #0
   1254c:	bne	125a0 <__snprintf_chk@plt+0x1234>
   12550:	add	sp, sp, #8
   12554:	pop	{r4, r5, r6, pc}
   12558:	mov	r2, #5
   1255c:	ldr	r1, [pc, #112]	; 125d4 <__snprintf_chk@plt+0x1268>
   12560:	mov	r0, #0
   12564:	bl	110f0 <dcgettext@plt>
   12568:	ldr	r4, [r4]
   1256c:	cmp	r4, #0
   12570:	mov	r5, r0
   12574:	beq	125ac <__snprintf_chk@plt+0x1240>
   12578:	bl	1124c <__errno_location@plt>
   1257c:	ldr	r6, [r0]
   12580:	mov	r0, r4
   12584:	bl	14434 <__snprintf_chk@plt+0x30c8>
   12588:	mov	r1, r6
   1258c:	str	r5, [sp]
   12590:	ldr	r2, [pc, #64]	; 125d8 <__snprintf_chk@plt+0x126c>
   12594:	mov	r3, r0
   12598:	mov	r0, #0
   1259c:	bl	111a4 <error@plt>
   125a0:	ldr	r3, [pc, #52]	; 125dc <__snprintf_chk@plt+0x1270>
   125a4:	ldr	r0, [r3]
   125a8:	bl	1109c <_exit@plt>
   125ac:	bl	1124c <__errno_location@plt>
   125b0:	mov	r3, r5
   125b4:	ldr	r2, [pc, #36]	; 125e0 <__snprintf_chk@plt+0x1274>
   125b8:	ldr	r1, [r0]
   125bc:	mov	r0, r4
   125c0:	bl	111a4 <error@plt>
   125c4:	b	125a0 <__snprintf_chk@plt+0x1234>
   125c8:	andeq	r7, r2, r4, lsr r3
   125cc:	andeq	r7, r2, ip, asr r3
   125d0:	andeq	r7, r2, r0, lsr r3
   125d4:	andeq	r6, r1, r8, lsr r9
   125d8:	andeq	r6, r1, r4, asr #18
   125dc:	andeq	r7, r2, r4, lsr r1
   125e0:	andeq	r6, r1, r8, asr #18
   125e4:	andeq	r0, r0, r0
   125e8:	vldr	d7, [pc, #160]	; 12690 <__snprintf_chk@plt+0x1324>
   125ec:	vcmpe.f64	d0, d7
   125f0:	vmrs	APSR_nzcv, fpscr
   125f4:	ble	12680 <__snprintf_chk@plt+0x1314>
   125f8:	vldr	d7, [pc, #152]	; 12698 <__snprintf_chk@plt+0x132c>
   125fc:	vcmpe.f64	d0, d7
   12600:	vmrs	APSR_nzcv, fpscr
   12604:	bpl	12670 <__snprintf_chk@plt+0x1304>
   12608:	vcvt.s32.f64	s14, d0
   1260c:	vldr	d6, [pc, #140]	; 126a0 <__snprintf_chk@plt+0x1334>
   12610:	ldr	r2, [pc, #144]	; 126a8 <__snprintf_chk@plt+0x133c>
   12614:	ldr	ip, [pc, #144]	; 126ac <__snprintf_chk@plt+0x1340>
   12618:	vcvt.f64.s32	d5, s14
   1261c:	vsub.f64	d0, d0, d5
   12620:	vmul.f64	d0, d0, d6
   12624:	vcvt.s32.f64	s15, d0
   12628:	vcvt.f64.s32	d6, s15
   1262c:	vmov	r1, s15
   12630:	vcmpe.f64	d0, d6
   12634:	vmrs	APSR_nzcv, fpscr
   12638:	movgt	r3, #1
   1263c:	movle	r3, #0
   12640:	add	r3, r1, r3
   12644:	smull	r2, r1, r2, r3
   12648:	asr	r2, r3, #31
   1264c:	rsb	r2, r2, r1, asr #28
   12650:	vmov	r1, s14
   12654:	add	r1, r2, r1
   12658:	mul	r2, ip, r2
   1265c:	subs	r3, r3, r2
   12660:	submi	r1, r1, #1
   12664:	addmi	r3, r3, ip
   12668:	stm	r0, {r1, r3}
   1266c:	bx	lr
   12670:	ldr	r3, [pc, #56]	; 126b0 <__snprintf_chk@plt+0x1344>
   12674:	mvn	r2, #-2147483648	; 0x80000000
   12678:	stm	r0, {r2, r3}
   1267c:	bx	lr
   12680:	mov	r2, #-2147483648	; 0x80000000
   12684:	mov	r3, #0
   12688:	stm	r0, {r2, r3}
   1268c:	bx	lr
   12690:	andeq	r0, r0, r0
   12694:	mvngt	r0, r0
   12698:	andeq	r0, r0, r0
   1269c:	mvnmi	r0, r0
   126a0:	andeq	r0, r0, r0
   126a4:	bicmi	ip, sp, r5, ror #26
   126a8:	ldrtmi	r2, [r8], #4001	; 0xfa1
   126ac:	blcc	fe6c4eb4 <optarg@@GLIBC_2.4+0xfe69db7c>
   126b0:	blcc	fe6c4eb4 <optarg@@GLIBC_2.4+0xfe69db7c>
   126b4:	push	{r4, r5, lr}
   126b8:	sub	sp, sp, #12
   126bc:	mov	r5, r0
   126c0:	bl	1124c <__errno_location@plt>
   126c4:	mov	r2, #0
   126c8:	mov	r4, r0
   126cc:	ldr	r3, [r0]
   126d0:	str	r2, [r4]
   126d4:	mov	r0, r5
   126d8:	str	r3, [sp]
   126dc:	str	r3, [sp, #4]
   126e0:	bl	11090 <free@plt>
   126e4:	ldr	r3, [r4]
   126e8:	add	r2, sp, #8
   126ec:	cmp	r3, #0
   126f0:	moveq	r3, #4
   126f4:	movne	r3, #0
   126f8:	add	r3, r2, r3
   126fc:	ldr	r3, [r3, #-8]
   12700:	str	r3, [r4]
   12704:	add	sp, sp, #12
   12708:	pop	{r4, r5, pc}
   1270c:	push	{r4, r5, r6, lr}
   12710:	subs	r4, r0, #0
   12714:	beq	12788 <__snprintf_chk@plt+0x141c>
   12718:	mov	r1, #47	; 0x2f
   1271c:	bl	1130c <strrchr@plt>
   12720:	subs	r5, r0, #0
   12724:	beq	12774 <__snprintf_chk@plt+0x1408>
   12728:	add	r6, r5, #1
   1272c:	sub	r3, r6, r4
   12730:	cmp	r3, #6
   12734:	ble	12774 <__snprintf_chk@plt+0x1408>
   12738:	mov	r2, #7
   1273c:	ldr	r1, [pc, #96]	; 127a4 <__snprintf_chk@plt+0x1438>
   12740:	sub	r0, r5, #6
   12744:	bl	11354 <strncmp@plt>
   12748:	cmp	r0, #0
   1274c:	bne	12774 <__snprintf_chk@plt+0x1408>
   12750:	mov	r2, #3
   12754:	ldr	r1, [pc, #76]	; 127a8 <__snprintf_chk@plt+0x143c>
   12758:	mov	r0, r6
   1275c:	bl	11354 <strncmp@plt>
   12760:	cmp	r0, #0
   12764:	movne	r4, r6
   12768:	ldreq	r3, [pc, #60]	; 127ac <__snprintf_chk@plt+0x1440>
   1276c:	addeq	r4, r5, #4
   12770:	streq	r4, [r3]
   12774:	ldr	r2, [pc, #52]	; 127b0 <__snprintf_chk@plt+0x1444>
   12778:	ldr	r3, [pc, #52]	; 127b4 <__snprintf_chk@plt+0x1448>
   1277c:	str	r4, [r2]
   12780:	str	r4, [r3]
   12784:	pop	{r4, r5, r6, pc}
   12788:	ldr	r3, [pc, #40]	; 127b8 <__snprintf_chk@plt+0x144c>
   1278c:	mov	r2, #55	; 0x37
   12790:	mov	r1, #1
   12794:	ldr	r3, [r3]
   12798:	ldr	r0, [pc, #28]	; 127bc <__snprintf_chk@plt+0x1450>
   1279c:	bl	11150 <fwrite@plt>
   127a0:	bl	11360 <abort@plt>
   127a4:	andeq	r6, r1, r4, lsl #19
   127a8:	andeq	r6, r1, ip, lsl #19
   127ac:	andeq	r7, r2, r0, lsr #6
   127b0:	andeq	r7, r2, r4, ror #6
   127b4:	andeq	r7, r2, r4, lsr #6
   127b8:	andeq	r7, r2, r0, lsr r3
   127bc:	andeq	r6, r1, ip, asr #18
   127c0:	push	{r4, r5, r6, lr}
   127c4:	mov	r2, #48	; 0x30
   127c8:	mov	r4, r1
   127cc:	mov	r1, #0
   127d0:	mov	r5, r0
   127d4:	bl	11270 <memset@plt>
   127d8:	cmp	r4, #10
   127dc:	beq	127ec <__snprintf_chk@plt+0x1480>
   127e0:	str	r4, [r5]
   127e4:	mov	r0, r5
   127e8:	pop	{r4, r5, r6, pc}
   127ec:	bl	11360 <abort@plt>
   127f0:	push	{r4, r5, r6, lr}
   127f4:	mov	r4, r0
   127f8:	mov	r5, r1
   127fc:	bl	15708 <__snprintf_chk@plt+0x439c>
   12800:	ldrb	r3, [r0]
   12804:	bic	r3, r3, #32
   12808:	cmp	r3, #85	; 0x55
   1280c:	bne	1286c <__snprintf_chk@plt+0x1500>
   12810:	ldrb	r3, [r0, #1]
   12814:	bic	r3, r3, #32
   12818:	cmp	r3, #84	; 0x54
   1281c:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12820:	ldrb	r3, [r0, #2]
   12824:	bic	r3, r3, #32
   12828:	cmp	r3, #70	; 0x46
   1282c:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12830:	ldrb	r3, [r0, #3]
   12834:	cmp	r3, #45	; 0x2d
   12838:	bne	128a8 <__snprintf_chk@plt+0x153c>
   1283c:	ldrb	r3, [r0, #4]
   12840:	cmp	r3, #56	; 0x38
   12844:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12848:	ldrb	r3, [r0, #5]
   1284c:	cmp	r3, #0
   12850:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12854:	ldrb	r2, [r4]
   12858:	ldr	r3, [pc, #152]	; 128f8 <__snprintf_chk@plt+0x158c>
   1285c:	ldr	r0, [pc, #152]	; 128fc <__snprintf_chk@plt+0x1590>
   12860:	cmp	r2, #96	; 0x60
   12864:	movne	r0, r3
   12868:	pop	{r4, r5, r6, pc}
   1286c:	cmp	r3, #71	; 0x47
   12870:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12874:	ldrb	r3, [r0, #1]
   12878:	bic	r3, r3, #32
   1287c:	cmp	r3, #66	; 0x42
   12880:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12884:	ldrb	r3, [r0, #2]
   12888:	cmp	r3, #49	; 0x31
   1288c:	bne	128a8 <__snprintf_chk@plt+0x153c>
   12890:	ldrb	r3, [r0, #3]
   12894:	cmp	r3, #56	; 0x38
   12898:	bne	128a8 <__snprintf_chk@plt+0x153c>
   1289c:	ldrb	r3, [r0, #4]
   128a0:	cmp	r3, #48	; 0x30
   128a4:	beq	128bc <__snprintf_chk@plt+0x1550>
   128a8:	ldr	r3, [pc, #80]	; 12900 <__snprintf_chk@plt+0x1594>
   128ac:	cmp	r5, #9
   128b0:	ldr	r0, [pc, #76]	; 12904 <__snprintf_chk@plt+0x1598>
   128b4:	movne	r0, r3
   128b8:	pop	{r4, r5, r6, pc}
   128bc:	ldrb	r3, [r0, #5]
   128c0:	cmp	r3, #51	; 0x33
   128c4:	bne	128a8 <__snprintf_chk@plt+0x153c>
   128c8:	ldrb	r3, [r0, #6]
   128cc:	cmp	r3, #48	; 0x30
   128d0:	bne	128a8 <__snprintf_chk@plt+0x153c>
   128d4:	ldrb	r3, [r0, #7]
   128d8:	cmp	r3, #0
   128dc:	bne	128a8 <__snprintf_chk@plt+0x153c>
   128e0:	ldrb	r2, [r4]
   128e4:	ldr	r3, [pc, #28]	; 12908 <__snprintf_chk@plt+0x159c>
   128e8:	ldr	r0, [pc, #28]	; 1290c <__snprintf_chk@plt+0x15a0>
   128ec:	cmp	r2, #96	; 0x60
   128f0:	movne	r0, r3
   128f4:	pop	{r4, r5, r6, pc}
   128f8:	andeq	r6, r1, r8, ror #19
   128fc:	andeq	r6, r1, r4, ror #19
   12900:	strdeq	r6, [r1], -r8
   12904:	strdeq	r6, [r1], -r4
   12908:	strdeq	r6, [r1], -r0
   1290c:	andeq	r6, r1, ip, ror #19
   12910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12914:	sub	sp, sp, #116	; 0x74
   12918:	mov	sl, r0
   1291c:	str	r3, [sp, #24]
   12920:	mov	r3, #1
   12924:	mov	r8, r1
   12928:	str	r2, [sp, #56]	; 0x38
   1292c:	str	r3, [sp, #36]	; 0x24
   12930:	bl	11174 <__ctype_get_mb_cur_max@plt>
   12934:	ldr	r3, [sp, #156]	; 0x9c
   12938:	mov	fp, r8
   1293c:	mov	r2, #0
   12940:	lsr	r3, r3, #1
   12944:	and	r3, r3, #1
   12948:	str	r2, [sp, #68]	; 0x44
   1294c:	str	r3, [sp, #28]
   12950:	str	r2, [sp, #40]	; 0x28
   12954:	str	r2, [sp, #44]	; 0x2c
   12958:	str	r2, [sp, #52]	; 0x34
   1295c:	str	r2, [sp, #64]	; 0x40
   12960:	str	r2, [sp, #72]	; 0x48
   12964:	str	sl, [sp, #32]
   12968:	str	r0, [sp, #76]	; 0x4c
   1296c:	ldr	r3, [sp, #152]	; 0x98
   12970:	cmp	r3, #10
   12974:	ldrls	pc, [pc, r3, lsl #2]
   12978:	b	13b38 <__snprintf_chk@plt+0x27cc>
   1297c:	andeq	r2, r1, r8, lsr #19
   12980:	muleq	r1, r0, ip
   12984:			; <UNDEFINED> instruction: 0x00012cb4
   12988:	ldrdeq	r2, [r1], -r8
   1298c:	andeq	r2, r1, r4, lsl #28
   12990:	ldrdeq	r2, [r1], -r8
   12994:			; <UNDEFINED> instruction: 0x00012db0
   12998:	andeq	r2, r1, ip, ror #25
   1299c:	andeq	r2, r1, r4, lsl #26
   129a0:	andeq	r2, r1, r4, lsl #26
   129a4:	andeq	r2, r1, r4, lsl #26
   129a8:	mov	r3, #0
   129ac:	mov	r7, r3
   129b0:	str	r3, [sp, #28]
   129b4:	ldr	r3, [sp, #44]	; 0x2c
   129b8:	mov	sl, #0
   129bc:	eor	r3, r3, #1
   129c0:	str	r3, [sp, #60]	; 0x3c
   129c4:	ldr	r3, [sp, #24]
   129c8:	cmn	r3, #1
   129cc:	beq	12f30 <__snprintf_chk@plt+0x1bc4>
   129d0:	ldr	r3, [sp, #24]
   129d4:	subs	r5, r3, sl
   129d8:	movne	r5, #1
   129dc:	cmp	r5, #0
   129e0:	beq	12f48 <__snprintf_chk@plt+0x1bdc>
   129e4:	ldr	r3, [sp, #152]	; 0x98
   129e8:	ldr	r8, [sp, #44]	; 0x2c
   129ec:	cmp	r3, #2
   129f0:	moveq	r8, #0
   129f4:	andne	r8, r8, #1
   129f8:	ldr	r3, [sp, #52]	; 0x34
   129fc:	adds	r9, r3, #0
   12a00:	movne	r9, #1
   12a04:	ands	r6, r9, r8
   12a08:	beq	133b0 <__snprintf_chk@plt+0x2044>
   12a0c:	ldr	r2, [sp, #52]	; 0x34
   12a10:	ldr	r1, [sp, #24]
   12a14:	cmp	r2, #1
   12a18:	mov	r3, r2
   12a1c:	movls	r3, #0
   12a20:	movhi	r3, #1
   12a24:	cmn	r1, #1
   12a28:	movne	r3, #0
   12a2c:	cmp	r3, #0
   12a30:	add	r4, sl, r2
   12a34:	beq	12a44 <__snprintf_chk@plt+0x16d8>
   12a38:	ldr	r0, [sp, #56]	; 0x38
   12a3c:	bl	11228 <strlen@plt>
   12a40:	str	r0, [sp, #24]
   12a44:	ldr	r3, [sp, #24]
   12a48:	cmp	r3, r4
   12a4c:	ldr	r3, [sp, #56]	; 0x38
   12a50:	add	r3, r3, sl
   12a54:	str	r3, [sp, #48]	; 0x30
   12a58:	bcc	133bc <__snprintf_chk@plt+0x2050>
   12a5c:	mov	r0, r3
   12a60:	ldr	r2, [sp, #52]	; 0x34
   12a64:	ldr	r1, [sp, #64]	; 0x40
   12a68:	bl	110d8 <memcmp@plt>
   12a6c:	cmp	r0, #0
   12a70:	bne	133bc <__snprintf_chk@plt+0x2050>
   12a74:	ldr	r3, [sp, #28]
   12a78:	cmp	r3, #0
   12a7c:	bne	13c38 <__snprintf_chk@plt+0x28cc>
   12a80:	ldr	r3, [sp, #48]	; 0x30
   12a84:	ldrb	r4, [r3]
   12a88:	cmp	r4, #126	; 0x7e
   12a8c:	ldrls	pc, [pc, r4, lsl #2]
   12a90:	b	13350 <__snprintf_chk@plt+0x1fe4>
   12a94:	andeq	r3, r1, r4, ror r1
   12a98:	andeq	r3, r1, r0, asr r3
   12a9c:	andeq	r3, r1, r0, asr r3
   12aa0:	andeq	r3, r1, r0, asr r3
   12aa4:	andeq	r3, r1, r0, asr r3
   12aa8:	andeq	r3, r1, r0, asr r3
   12aac:	andeq	r3, r1, r0, asr r3
   12ab0:	andeq	r3, r1, r8, asr r1
   12ab4:	andeq	r3, r1, ip, lsr r1
   12ab8:	andeq	r3, r1, r8, lsr r3
   12abc:	muleq	r1, ip, r0
   12ac0:	andeq	r3, r1, r0, lsl #1
   12ac4:	andeq	r3, r1, r4, lsl r3
   12ac8:	strdeq	r3, [r1], -r0
   12acc:	andeq	r3, r1, r0, asr r3
   12ad0:	andeq	r3, r1, r0, asr r3
   12ad4:	andeq	r3, r1, r0, asr r3
   12ad8:	andeq	r3, r1, r0, asr r3
   12adc:	andeq	r3, r1, r0, asr r3
   12ae0:	andeq	r3, r1, r0, asr r3
   12ae4:	andeq	r3, r1, r0, asr r3
   12ae8:	andeq	r3, r1, r0, asr r3
   12aec:	andeq	r3, r1, r0, asr r3
   12af0:	andeq	r3, r1, r0, asr r3
   12af4:	andeq	r3, r1, r0, asr r3
   12af8:	andeq	r3, r1, r0, asr r3
   12afc:	andeq	r3, r1, r0, asr r3
   12b00:	andeq	r3, r1, r0, asr r3
   12b04:	andeq	r3, r1, r0, asr r3
   12b08:	andeq	r3, r1, r0, asr r3
   12b0c:	andeq	r3, r1, r0, asr r3
   12b10:	andeq	r3, r1, r0, asr r3
   12b14:	andeq	r3, r1, r0, lsr r3
   12b18:	andeq	r3, r1, r4, ror #4
   12b1c:	andeq	r3, r1, r4, ror #4
   12b20:	andeq	r2, r1, r4, ror lr
   12b24:	andeq	r3, r1, r4, ror #4
   12b28:	strdeq	r3, [r1], -ip
   12b2c:	andeq	r3, r1, r4, ror #4
   12b30:	ldrdeq	r3, [r1], -r0
   12b34:	andeq	r3, r1, r4, ror #4
   12b38:	andeq	r3, r1, r4, ror #4
   12b3c:	andeq	r3, r1, r4, ror #4
   12b40:	strdeq	r3, [r1], -ip
   12b44:	strdeq	r3, [r1], -ip
   12b48:	strdeq	r3, [r1], -ip
   12b4c:	strdeq	r3, [r1], -ip
   12b50:	strdeq	r3, [r1], -ip
   12b54:	strdeq	r3, [r1], -ip
   12b58:	strdeq	r3, [r1], -ip
   12b5c:	strdeq	r3, [r1], -ip
   12b60:	strdeq	r3, [r1], -ip
   12b64:	strdeq	r3, [r1], -ip
   12b68:	strdeq	r3, [r1], -ip
   12b6c:	strdeq	r3, [r1], -ip
   12b70:	strdeq	r3, [r1], -ip
   12b74:	strdeq	r3, [r1], -ip
   12b78:	strdeq	r3, [r1], -ip
   12b7c:	strdeq	r3, [r1], -ip
   12b80:	andeq	r3, r1, r4, ror #4
   12b84:	andeq	r3, r1, r4, ror #4
   12b88:	andeq	r3, r1, r4, ror #4
   12b8c:	andeq	r3, r1, r4, ror #4
   12b90:	andeq	r3, r1, r0, lsr #5
   12b94:	andeq	r3, r1, r0, asr r3
   12b98:	strdeq	r3, [r1], -ip
   12b9c:	strdeq	r3, [r1], -ip
   12ba0:	strdeq	r3, [r1], -ip
   12ba4:	strdeq	r3, [r1], -ip
   12ba8:	strdeq	r3, [r1], -ip
   12bac:	strdeq	r3, [r1], -ip
   12bb0:	strdeq	r3, [r1], -ip
   12bb4:	strdeq	r3, [r1], -ip
   12bb8:	strdeq	r3, [r1], -ip
   12bbc:	strdeq	r3, [r1], -ip
   12bc0:	strdeq	r3, [r1], -ip
   12bc4:	strdeq	r3, [r1], -ip
   12bc8:	strdeq	r3, [r1], -ip
   12bcc:	strdeq	r3, [r1], -ip
   12bd0:	strdeq	r3, [r1], -ip
   12bd4:	strdeq	r3, [r1], -ip
   12bd8:	strdeq	r3, [r1], -ip
   12bdc:	strdeq	r3, [r1], -ip
   12be0:	strdeq	r3, [r1], -ip
   12be4:	strdeq	r3, [r1], -ip
   12be8:	strdeq	r3, [r1], -ip
   12bec:	strdeq	r3, [r1], -ip
   12bf0:	strdeq	r3, [r1], -ip
   12bf4:	strdeq	r3, [r1], -ip
   12bf8:	strdeq	r3, [r1], -ip
   12bfc:	strdeq	r3, [r1], -ip
   12c00:	andeq	r3, r1, r4, ror #4
   12c04:	andeq	r2, r1, r0, asr #31
   12c08:	strdeq	r3, [r1], -ip
   12c0c:	andeq	r3, r1, r4, ror #4
   12c10:	strdeq	r3, [r1], -ip
   12c14:	andeq	r3, r1, r4, ror #4
   12c18:	strdeq	r3, [r1], -ip
   12c1c:	strdeq	r3, [r1], -ip
   12c20:	strdeq	r3, [r1], -ip
   12c24:	strdeq	r3, [r1], -ip
   12c28:	strdeq	r3, [r1], -ip
   12c2c:	strdeq	r3, [r1], -ip
   12c30:	strdeq	r3, [r1], -ip
   12c34:	strdeq	r3, [r1], -ip
   12c38:	strdeq	r3, [r1], -ip
   12c3c:	strdeq	r3, [r1], -ip
   12c40:	strdeq	r3, [r1], -ip
   12c44:	strdeq	r3, [r1], -ip
   12c48:	strdeq	r3, [r1], -ip
   12c4c:	strdeq	r3, [r1], -ip
   12c50:	strdeq	r3, [r1], -ip
   12c54:	strdeq	r3, [r1], -ip
   12c58:	strdeq	r3, [r1], -ip
   12c5c:	strdeq	r3, [r1], -ip
   12c60:	strdeq	r3, [r1], -ip
   12c64:	strdeq	r3, [r1], -ip
   12c68:	strdeq	r3, [r1], -ip
   12c6c:	strdeq	r3, [r1], -ip
   12c70:	strdeq	r3, [r1], -ip
   12c74:	strdeq	r3, [r1], -ip
   12c78:	strdeq	r3, [r1], -ip
   12c7c:	strdeq	r3, [r1], -ip
   12c80:	andeq	r2, r1, r4, asr lr
   12c84:	andeq	r3, r1, r4, ror #4
   12c88:	andeq	r2, r1, r4, asr lr
   12c8c:	andeq	r2, r1, r4, ror lr
   12c90:	mov	r3, #1
   12c94:	str	r3, [sp, #28]
   12c98:	str	r3, [sp, #52]	; 0x34
   12c9c:	ldr	r3, [pc, #4000]	; 13c44 <__snprintf_chk@plt+0x28d8>
   12ca0:	mov	r7, #0
   12ca4:	str	r3, [sp, #64]	; 0x40
   12ca8:	mov	r3, #2
   12cac:	str	r3, [sp, #152]	; 0x98
   12cb0:	b	129b4 <__snprintf_chk@plt+0x1648>
   12cb4:	ldr	r3, [sp, #28]
   12cb8:	cmp	r3, #0
   12cbc:	beq	12e18 <__snprintf_chk@plt+0x1aac>
   12cc0:	mov	r3, #1
   12cc4:	str	r3, [sp, #52]	; 0x34
   12cc8:	ldr	r3, [pc, #3956]	; 13c44 <__snprintf_chk@plt+0x28d8>
   12ccc:	mov	r7, #0
   12cd0:	str	r3, [sp, #64]	; 0x40
   12cd4:	b	129b4 <__snprintf_chk@plt+0x1648>
   12cd8:	mov	r3, #1
   12cdc:	str	r3, [sp, #44]	; 0x2c
   12ce0:	str	r3, [sp, #52]	; 0x34
   12ce4:	str	r3, [sp, #28]
   12ce8:	b	12c9c <__snprintf_chk@plt+0x1930>
   12cec:	mov	r3, #0
   12cf0:	str	r3, [sp, #28]
   12cf4:	mov	r3, #1
   12cf8:	str	r3, [sp, #44]	; 0x2c
   12cfc:	mov	r7, #0
   12d00:	b	129b4 <__snprintf_chk@plt+0x1648>
   12d04:	ldr	r3, [sp, #152]	; 0x98
   12d08:	cmp	r3, #10
   12d0c:	beq	12d50 <__snprintf_chk@plt+0x19e4>
   12d10:	mov	r2, #5
   12d14:	ldr	r1, [pc, #3884]	; 13c48 <__snprintf_chk@plt+0x28dc>
   12d18:	mov	r0, #0
   12d1c:	bl	110f0 <dcgettext@plt>
   12d20:	ldr	r2, [pc, #3872]	; 13c48 <__snprintf_chk@plt+0x28dc>
   12d24:	cmp	r0, r2
   12d28:	str	r0, [sp, #164]	; 0xa4
   12d2c:	beq	13d34 <__snprintf_chk@plt+0x29c8>
   12d30:	mov	r2, #5
   12d34:	ldr	r1, [pc, #3848]	; 13c44 <__snprintf_chk@plt+0x28d8>
   12d38:	mov	r0, #0
   12d3c:	bl	110f0 <dcgettext@plt>
   12d40:	ldr	r2, [pc, #3836]	; 13c44 <__snprintf_chk@plt+0x28d8>
   12d44:	cmp	r0, r2
   12d48:	str	r0, [sp, #168]	; 0xa8
   12d4c:	beq	13d24 <__snprintf_chk@plt+0x29b8>
   12d50:	ldr	r7, [sp, #28]
   12d54:	cmp	r7, #0
   12d58:	movne	r7, #0
   12d5c:	bne	12d90 <__snprintf_chk@plt+0x1a24>
   12d60:	ldr	r3, [sp, #164]	; 0xa4
   12d64:	ldrb	r3, [r3]
   12d68:	cmp	r3, #0
   12d6c:	beq	13d44 <__snprintf_chk@plt+0x29d8>
   12d70:	ldr	r2, [sp, #164]	; 0xa4
   12d74:	ldr	r1, [sp, #32]
   12d78:	cmp	fp, r7
   12d7c:	strbhi	r3, [r1, r7]
   12d80:	ldrb	r3, [r2, #1]!
   12d84:	add	r7, r7, #1
   12d88:	cmp	r3, #0
   12d8c:	bne	12d78 <__snprintf_chk@plt+0x1a0c>
   12d90:	ldr	r0, [sp, #168]	; 0xa8
   12d94:	bl	11228 <strlen@plt>
   12d98:	ldr	r3, [sp, #168]	; 0xa8
   12d9c:	str	r3, [sp, #64]	; 0x40
   12da0:	mov	r3, #1
   12da4:	str	r3, [sp, #44]	; 0x2c
   12da8:	str	r0, [sp, #52]	; 0x34
   12dac:	b	129b4 <__snprintf_chk@plt+0x1648>
   12db0:	mov	r3, #1
   12db4:	str	r3, [sp, #44]	; 0x2c
   12db8:	str	r3, [sp, #52]	; 0x34
   12dbc:	str	r3, [sp, #28]
   12dc0:	ldr	r3, [pc, #3716]	; 13c4c <__snprintf_chk@plt+0x28e0>
   12dc4:	mov	r7, #0
   12dc8:	str	r3, [sp, #64]	; 0x40
   12dcc:	mov	r3, #5
   12dd0:	str	r3, [sp, #152]	; 0x98
   12dd4:	b	129b4 <__snprintf_chk@plt+0x1648>
   12dd8:	ldr	r3, [sp, #28]
   12ddc:	cmp	r3, #0
   12de0:	beq	13ae0 <__snprintf_chk@plt+0x2774>
   12de4:	ldr	r3, [sp, #28]
   12de8:	mov	r7, #0
   12dec:	str	r3, [sp, #44]	; 0x2c
   12df0:	mov	r3, #1
   12df4:	str	r3, [sp, #52]	; 0x34
   12df8:	ldr	r3, [pc, #3660]	; 13c4c <__snprintf_chk@plt+0x28e0>
   12dfc:	str	r3, [sp, #64]	; 0x40
   12e00:	b	129b4 <__snprintf_chk@plt+0x1648>
   12e04:	ldr	r3, [sp, #28]
   12e08:	cmp	r3, #0
   12e0c:	mov	r3, #1
   12e10:	streq	r3, [sp, #44]	; 0x2c
   12e14:	bne	12c98 <__snprintf_chk@plt+0x192c>
   12e18:	cmp	fp, #0
   12e1c:	beq	13b10 <__snprintf_chk@plt+0x27a4>
   12e20:	ldr	r3, [sp, #32]
   12e24:	mov	r2, #39	; 0x27
   12e28:	mov	r7, #1
   12e2c:	strb	r2, [r3]
   12e30:	mov	r3, #0
   12e34:	str	r3, [sp, #28]
   12e38:	mov	r3, #1
   12e3c:	str	r3, [sp, #52]	; 0x34
   12e40:	ldr	r3, [pc, #3580]	; 13c44 <__snprintf_chk@plt+0x28d8>
   12e44:	str	r3, [sp, #64]	; 0x40
   12e48:	mov	r3, #2
   12e4c:	str	r3, [sp, #152]	; 0x98
   12e50:	b	129b4 <__snprintf_chk@plt+0x1648>
   12e54:	ldr	r3, [sp, #24]
   12e58:	cmn	r3, #1
   12e5c:	beq	13a74 <__snprintf_chk@plt+0x2708>
   12e60:	ldr	r3, [sp, #24]
   12e64:	subs	r3, r3, #1
   12e68:	movne	r3, #1
   12e6c:	cmp	r3, #0
   12e70:	bne	12e7c <__snprintf_chk@plt+0x1b10>
   12e74:	cmp	sl, #0
   12e78:	beq	13268 <__snprintf_chk@plt+0x1efc>
   12e7c:	ldr	r3, [sp, #152]	; 0x98
   12e80:	mov	r5, #0
   12e84:	sub	r2, r3, #2
   12e88:	mov	r8, r5
   12e8c:	clz	r2, r2
   12e90:	lsr	r2, r2, #5
   12e94:	ldr	r3, [sp, #60]	; 0x3c
   12e98:	ldr	r1, [sp, #28]
   12e9c:	orr	r3, r2, r3
   12ea0:	eor	r3, r3, #1
   12ea4:	orr	r3, r1, r3
   12ea8:	tst	r3, #255	; 0xff
   12eac:	bne	135d8 <__snprintf_chk@plt+0x226c>
   12eb0:	cmp	r6, #0
   12eb4:	bne	13004 <__snprintf_chk@plt+0x1c98>
   12eb8:	ldr	r3, [sp, #40]	; 0x28
   12ebc:	eor	r8, r8, #1
   12ec0:	and	r8, r8, r3
   12ec4:	add	sl, sl, #1
   12ec8:	uxtb	r6, r8
   12ecc:	cmp	r6, #0
   12ed0:	beq	12f04 <__snprintf_chk@plt+0x1b98>
   12ed4:	cmp	fp, r7
   12ed8:	movhi	r2, #39	; 0x27
   12edc:	ldrhi	r3, [sp, #32]
   12ee0:	strbhi	r2, [r3, r7]
   12ee4:	add	r3, r7, #1
   12ee8:	cmp	fp, r3
   12eec:	movhi	r1, #39	; 0x27
   12ef0:	ldrhi	r2, [sp, #32]
   12ef4:	add	r7, r7, #2
   12ef8:	strbhi	r1, [r2, r3]
   12efc:	mov	r3, #0
   12f00:	str	r3, [sp, #40]	; 0x28
   12f04:	cmp	r7, fp
   12f08:	ldrcc	r3, [sp, #32]
   12f0c:	strbcc	r4, [r3, r7]
   12f10:	ldr	r3, [sp, #36]	; 0x24
   12f14:	cmp	r5, #0
   12f18:	moveq	r3, #0
   12f1c:	str	r3, [sp, #36]	; 0x24
   12f20:	ldr	r3, [sp, #24]
   12f24:	add	r7, r7, #1
   12f28:	cmn	r3, #1
   12f2c:	bne	129d0 <__snprintf_chk@plt+0x1664>
   12f30:	ldr	r3, [sp, #56]	; 0x38
   12f34:	ldrb	r5, [r3, sl]
   12f38:	adds	r5, r5, #0
   12f3c:	movne	r5, #1
   12f40:	cmp	r5, #0
   12f44:	bne	129e4 <__snprintf_chk@plt+0x1678>
   12f48:	ldr	r3, [sp, #152]	; 0x98
   12f4c:	ldr	r1, [sp, #28]
   12f50:	sub	r3, r3, #2
   12f54:	clz	r3, r3
   12f58:	lsr	r3, r3, #5
   12f5c:	and	r9, r1, r3
   12f60:	cmp	r7, #0
   12f64:	movne	r2, #0
   12f68:	andeq	r2, r9, #1
   12f6c:	cmp	r2, #0
   12f70:	bne	1394c <__snprintf_chk@plt+0x25e0>
   12f74:	eor	r2, r1, #1
   12f78:	ands	r3, r3, r2
   12f7c:	beq	13e08 <__snprintf_chk@plt+0x2a9c>
   12f80:	ldr	r2, [sp, #68]	; 0x44
   12f84:	cmp	r2, #0
   12f88:	beq	13df4 <__snprintf_chk@plt+0x2a88>
   12f8c:	ldr	r3, [sp, #36]	; 0x24
   12f90:	cmp	r3, #0
   12f94:	bne	13dac <__snprintf_chk@plt+0x2a40>
   12f98:	ldr	r2, [sp, #72]	; 0x48
   12f9c:	clz	r3, fp
   12fa0:	cmp	r2, #0
   12fa4:	lsr	r3, r3, #5
   12fa8:	moveq	r3, #0
   12fac:	cmp	r3, #0
   12fb0:	beq	13d4c <__snprintf_chk@plt+0x29e0>
   12fb4:	str	r3, [sp, #68]	; 0x44
   12fb8:	ldr	fp, [sp, #72]	; 0x48
   12fbc:	b	1296c <__snprintf_chk@plt+0x1600>
   12fc0:	ldr	r3, [sp, #152]	; 0x98
   12fc4:	cmp	r3, #2
   12fc8:	beq	1361c <__snprintf_chk@plt+0x22b0>
   12fcc:	ldr	r3, [sp, #44]	; 0x2c
   12fd0:	ldr	r2, [sp, #28]
   12fd4:	and	r2, r3, r2
   12fd8:	ands	r2, r9, r2
   12fdc:	bne	13628 <__snprintf_chk@plt+0x22bc>
   12fe0:	mov	r4, #92	; 0x5c
   12fe4:	mov	r3, r4
   12fe8:	ldr	r1, [sp, #44]	; 0x2c
   12fec:	cmp	r1, #0
   12ff0:	moveq	r5, #0
   12ff4:	moveq	r8, r1
   12ff8:	beq	12e94 <__snprintf_chk@plt+0x1b28>
   12ffc:	mov	r4, r3
   13000:	mov	r5, #0
   13004:	ldr	r3, [sp, #28]
   13008:	cmp	r3, #0
   1300c:	bne	13610 <__snprintf_chk@plt+0x22a4>
   13010:	ldr	r3, [sp, #40]	; 0x28
   13014:	eor	r9, r3, #1
   13018:	and	r9, r9, r2
   1301c:	ands	r9, r9, #255	; 0xff
   13020:	beq	13064 <__snprintf_chk@plt+0x1cf8>
   13024:	cmp	fp, r7
   13028:	movhi	r2, #39	; 0x27
   1302c:	ldrhi	r3, [sp, #32]
   13030:	str	r9, [sp, #40]	; 0x28
   13034:	strbhi	r2, [r3, r7]
   13038:	add	r3, r7, #1
   1303c:	cmp	fp, r3
   13040:	movhi	r1, #36	; 0x24
   13044:	ldrhi	r2, [sp, #32]
   13048:	strbhi	r1, [r2, r3]
   1304c:	add	r3, r7, #2
   13050:	cmp	fp, r3
   13054:	add	r7, r7, #3
   13058:	ldrhi	r2, [sp, #32]
   1305c:	movhi	r1, #39	; 0x27
   13060:	strbhi	r1, [r2, r3]
   13064:	cmp	fp, r7
   13068:	movhi	r2, #92	; 0x5c
   1306c:	ldrhi	r3, [sp, #32]
   13070:	add	sl, sl, #1
   13074:	strbhi	r2, [r3, r7]
   13078:	add	r7, r7, #1
   1307c:	b	12f04 <__snprintf_chk@plt+0x1b98>
   13080:	ldr	r3, [sp, #152]	; 0x98
   13084:	mov	r4, #11
   13088:	sub	r2, r3, #2
   1308c:	mov	r3, #118	; 0x76
   13090:	clz	r2, r2
   13094:	lsr	r2, r2, #5
   13098:	b	12fe8 <__snprintf_chk@plt+0x1c7c>
   1309c:	mov	r4, #10
   130a0:	mov	r3, #110	; 0x6e
   130a4:	ldr	r2, [sp, #152]	; 0x98
   130a8:	ldr	r1, [sp, #28]
   130ac:	sub	r2, r2, #2
   130b0:	clz	r2, r2
   130b4:	lsr	r2, r2, #5
   130b8:	ands	r1, r1, r2
   130bc:	beq	12fe8 <__snprintf_chk@plt+0x1c7c>
   130c0:	ldr	sl, [sp, #32]
   130c4:	mov	r8, fp
   130c8:	mov	r2, r1
   130cc:	mov	r3, #2
   130d0:	str	r3, [sp, #152]	; 0x98
   130d4:	ldr	r9, [sp, #44]	; 0x2c
   130d8:	ldr	r3, [sp, #152]	; 0x98
   130dc:	and	r9, r9, r2
   130e0:	tst	r9, #255	; 0xff
   130e4:	movne	r3, #4
   130e8:	str	r3, [sp, #152]	; 0x98
   130ec:	ldr	r3, [sp, #156]	; 0x9c
   130f0:	mov	ip, #0
   130f4:	bic	r3, r3, #2
   130f8:	str	r3, [sp, #4]
   130fc:	ldr	r3, [sp, #168]	; 0xa8
   13100:	ldr	r2, [sp, #56]	; 0x38
   13104:	str	r3, [sp, #16]
   13108:	ldr	r3, [sp, #164]	; 0xa4
   1310c:	mov	r1, r8
   13110:	str	r3, [sp, #12]
   13114:	ldr	r3, [sp, #152]	; 0x98
   13118:	mov	r0, sl
   1311c:	str	r3, [sp]
   13120:	str	ip, [sp, #8]
   13124:	ldr	r3, [sp, #24]
   13128:	bl	12910 <__snprintf_chk@plt+0x15a4>
   1312c:	mov	fp, r0
   13130:	mov	r0, fp
   13134:	add	sp, sp, #116	; 0x74
   13138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1313c:	ldr	r3, [sp, #152]	; 0x98
   13140:	mov	r4, #8
   13144:	sub	r2, r3, #2
   13148:	mov	r3, #98	; 0x62
   1314c:	clz	r2, r2
   13150:	lsr	r2, r2, #5
   13154:	b	12fe8 <__snprintf_chk@plt+0x1c7c>
   13158:	ldr	r3, [sp, #152]	; 0x98
   1315c:	mov	r4, #7
   13160:	sub	r2, r3, #2
   13164:	mov	r3, #97	; 0x61
   13168:	clz	r2, r2
   1316c:	lsr	r2, r2, #5
   13170:	b	12fe8 <__snprintf_chk@plt+0x1c7c>
   13174:	ldr	r3, [sp, #44]	; 0x2c
   13178:	cmp	r3, #0
   1317c:	beq	13960 <__snprintf_chk@plt+0x25f4>
   13180:	ldr	r3, [sp, #28]
   13184:	cmp	r3, #0
   13188:	bne	13c38 <__snprintf_chk@plt+0x28cc>
   1318c:	ldr	r3, [sp, #152]	; 0x98
   13190:	sub	r2, r3, #2
   13194:	ldr	r3, [sp, #40]	; 0x28
   13198:	clz	r2, r2
   1319c:	eor	r3, r3, #1
   131a0:	lsr	r2, r2, #5
   131a4:	ands	r3, r2, r3
   131a8:	moveq	r1, r7
   131ac:	beq	131f0 <__snprintf_chk@plt+0x1e84>
   131b0:	cmp	fp, r7
   131b4:	movhi	r0, #39	; 0x27
   131b8:	ldrhi	r1, [sp, #32]
   131bc:	str	r3, [sp, #40]	; 0x28
   131c0:	strbhi	r0, [r1, r7]
   131c4:	add	r1, r7, #1
   131c8:	cmp	fp, r1
   131cc:	movhi	ip, #36	; 0x24
   131d0:	ldrhi	r0, [sp, #32]
   131d4:	strbhi	ip, [r0, r1]
   131d8:	add	r1, r7, #2
   131dc:	cmp	fp, r1
   131e0:	movhi	ip, #39	; 0x27
   131e4:	ldrhi	r0, [sp, #32]
   131e8:	strbhi	ip, [r0, r1]
   131ec:	add	r1, r7, #3
   131f0:	cmp	fp, r1
   131f4:	movhi	r0, #92	; 0x5c
   131f8:	ldrhi	r3, [sp, #32]
   131fc:	add	r7, r1, #1
   13200:	strbhi	r0, [r3, r1]
   13204:	cmp	r8, #0
   13208:	beq	13b4c <__snprintf_chk@plt+0x27e0>
   1320c:	ldr	r0, [sp, #24]
   13210:	add	r3, sl, #1
   13214:	cmp	r3, r0
   13218:	bcs	13a88 <__snprintf_chk@plt+0x271c>
   1321c:	ldr	r0, [sp, #56]	; 0x38
   13220:	ldrb	r3, [r0, r3]
   13224:	sub	r3, r3, #48	; 0x30
   13228:	cmp	r3, #9
   1322c:	bhi	13a88 <__snprintf_chk@plt+0x271c>
   13230:	cmp	fp, r7
   13234:	movhi	r3, #48	; 0x30
   13238:	ldrhi	r0, [sp, #32]
   1323c:	ldr	r5, [sp, #28]
   13240:	mov	r4, #48	; 0x30
   13244:	strbhi	r3, [r0, r7]
   13248:	add	r3, r1, #2
   1324c:	cmp	fp, r3
   13250:	movhi	r0, #48	; 0x30
   13254:	ldrhi	ip, [sp, #32]
   13258:	add	r7, r1, #3
   1325c:	strbhi	r0, [ip, r3]
   13260:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13264:	mov	r5, #0
   13268:	ldr	r3, [sp, #152]	; 0x98
   1326c:	sub	r2, r3, #2
   13270:	ldr	r3, [sp, #28]
   13274:	clz	r2, r2
   13278:	lsr	r2, r2, #5
   1327c:	ands	r8, r3, r2
   13280:	beq	12e94 <__snprintf_chk@plt+0x1b28>
   13284:	mov	r3, r8
   13288:	mov	r2, r3
   1328c:	mov	r3, #2
   13290:	ldr	sl, [sp, #32]
   13294:	mov	r8, fp
   13298:	str	r3, [sp, #152]	; 0x98
   1329c:	b	130d4 <__snprintf_chk@plt+0x1d68>
   132a0:	ldr	r3, [sp, #152]	; 0x98
   132a4:	cmp	r3, #2
   132a8:	beq	139cc <__snprintf_chk@plt+0x2660>
   132ac:	cmp	r3, #5
   132b0:	beq	1398c <__snprintf_chk@plt+0x2620>
   132b4:	mov	r5, #0
   132b8:	sub	r2, r3, #2
   132bc:	mov	r8, r5
   132c0:	clz	r2, r2
   132c4:	mov	r4, #63	; 0x3f
   132c8:	lsr	r2, r2, #5
   132cc:	b	12e94 <__snprintf_chk@plt+0x1b28>
   132d0:	ldr	r3, [sp, #152]	; 0x98
   132d4:	cmp	r3, #2
   132d8:	beq	139ec <__snprintf_chk@plt+0x2680>
   132dc:	mov	r2, #0
   132e0:	str	r5, [sp, #68]	; 0x44
   132e4:	mov	r8, r2
   132e8:	mov	r4, #39	; 0x27
   132ec:	b	12e94 <__snprintf_chk@plt+0x1b28>
   132f0:	mov	r4, #13
   132f4:	mov	r3, #114	; 0x72
   132f8:	b	130a4 <__snprintf_chk@plt+0x1d38>
   132fc:	ldr	r3, [sp, #152]	; 0x98
   13300:	mov	r8, #0
   13304:	sub	r2, r3, #2
   13308:	clz	r2, r2
   1330c:	lsr	r2, r2, #5
   13310:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13314:	ldr	r3, [sp, #152]	; 0x98
   13318:	mov	r4, #12
   1331c:	sub	r2, r3, #2
   13320:	mov	r3, #102	; 0x66
   13324:	clz	r2, r2
   13328:	lsr	r2, r2, #5
   1332c:	b	12fe8 <__snprintf_chk@plt+0x1c7c>
   13330:	mov	r5, r6
   13334:	b	13268 <__snprintf_chk@plt+0x1efc>
   13338:	ldr	r3, [sp, #152]	; 0x98
   1333c:	sub	r2, r3, #2
   13340:	mov	r3, #116	; 0x74
   13344:	clz	r2, r2
   13348:	lsr	r2, r2, #5
   1334c:	b	12fe8 <__snprintf_chk@plt+0x1c7c>
   13350:	ldr	r8, [sp, #76]	; 0x4c
   13354:	cmp	r8, #1
   13358:	bne	13808 <__snprintf_chk@plt+0x249c>
   1335c:	bl	11210 <__ctype_b_loc@plt>
   13360:	sxth	r3, r4
   13364:	mov	ip, r8
   13368:	lsl	r3, r3, #1
   1336c:	ldr	r2, [r0]
   13370:	ldrh	r3, [r2, r3]
   13374:	and	r3, r3, #16384	; 0x4000
   13378:	cmp	r3, #0
   1337c:	movne	r5, #1
   13380:	moveq	r5, #0
   13384:	moveq	r3, #1
   13388:	movne	r3, #0
   1338c:	ldr	r2, [sp, #44]	; 0x2c
   13390:	and	r3, r3, r2
   13394:	ands	r8, r3, #255	; 0xff
   13398:	bne	1369c <__snprintf_chk@plt+0x2330>
   1339c:	ldr	r3, [sp, #152]	; 0x98
   133a0:	sub	r2, r3, #2
   133a4:	clz	r2, r2
   133a8:	lsr	r2, r2, #5
   133ac:	b	12e94 <__snprintf_chk@plt+0x1b28>
   133b0:	ldr	r3, [sp, #56]	; 0x38
   133b4:	add	r3, r3, sl
   133b8:	str	r3, [sp, #48]	; 0x30
   133bc:	ldr	r3, [sp, #48]	; 0x30
   133c0:	mov	r6, #0
   133c4:	ldrb	r4, [r3]
   133c8:	cmp	r4, #126	; 0x7e
   133cc:	ldrls	pc, [pc, r4, lsl #2]
   133d0:	b	13350 <__snprintf_chk@plt+0x1fe4>
   133d4:	andeq	r3, r1, r4, ror r1
   133d8:	andeq	r3, r1, r0, asr r3
   133dc:	andeq	r3, r1, r0, asr r3
   133e0:	andeq	r3, r1, r0, asr r3
   133e4:	andeq	r3, r1, r0, asr r3
   133e8:	andeq	r3, r1, r0, asr r3
   133ec:	andeq	r3, r1, r0, asr r3
   133f0:	andeq	r3, r1, r8, asr r1
   133f4:	andeq	r3, r1, ip, lsr r1
   133f8:	ldrdeq	r3, [r1], -r0
   133fc:	muleq	r1, ip, r0
   13400:	andeq	r3, r1, r0, lsl #1
   13404:	andeq	r3, r1, r4, lsl r3
   13408:	strdeq	r3, [r1], -r0
   1340c:	andeq	r3, r1, r0, asr r3
   13410:	andeq	r3, r1, r0, asr r3
   13414:	andeq	r3, r1, r0, asr r3
   13418:	andeq	r3, r1, r0, asr r3
   1341c:	andeq	r3, r1, r0, asr r3
   13420:	andeq	r3, r1, r0, asr r3
   13424:	andeq	r3, r1, r0, asr r3
   13428:	andeq	r3, r1, r0, asr r3
   1342c:	andeq	r3, r1, r0, asr r3
   13430:	andeq	r3, r1, r0, asr r3
   13434:	andeq	r3, r1, r0, asr r3
   13438:	andeq	r3, r1, r0, asr r3
   1343c:	andeq	r3, r1, r0, asr r3
   13440:	andeq	r3, r1, r0, asr r3
   13444:	andeq	r3, r1, r0, asr r3
   13448:	andeq	r3, r1, r0, asr r3
   1344c:	andeq	r3, r1, r0, asr r3
   13450:	andeq	r3, r1, r0, asr r3
   13454:	andeq	r3, r1, r8, ror #4
   13458:	andeq	r3, r1, r4, ror #4
   1345c:	andeq	r3, r1, r4, ror #4
   13460:	andeq	r2, r1, r4, ror lr
   13464:	andeq	r3, r1, r4, ror #4
   13468:	strdeq	r3, [r1], -ip
   1346c:	andeq	r3, r1, r4, ror #4
   13470:	ldrdeq	r3, [r1], -r0
   13474:	andeq	r3, r1, r4, ror #4
   13478:	andeq	r3, r1, r4, ror #4
   1347c:	andeq	r3, r1, r4, ror #4
   13480:	strdeq	r3, [r1], -ip
   13484:	strdeq	r3, [r1], -ip
   13488:	strdeq	r3, [r1], -ip
   1348c:	strdeq	r3, [r1], -ip
   13490:	strdeq	r3, [r1], -ip
   13494:	strdeq	r3, [r1], -ip
   13498:	strdeq	r3, [r1], -ip
   1349c:	strdeq	r3, [r1], -ip
   134a0:	strdeq	r3, [r1], -ip
   134a4:	strdeq	r3, [r1], -ip
   134a8:	strdeq	r3, [r1], -ip
   134ac:	strdeq	r3, [r1], -ip
   134b0:	strdeq	r3, [r1], -ip
   134b4:	strdeq	r3, [r1], -ip
   134b8:	strdeq	r3, [r1], -ip
   134bc:	strdeq	r3, [r1], -ip
   134c0:	andeq	r3, r1, r4, ror #4
   134c4:	andeq	r3, r1, r4, ror #4
   134c8:	andeq	r3, r1, r4, ror #4
   134cc:	andeq	r3, r1, r4, ror #4
   134d0:	andeq	r3, r1, r0, lsr #5
   134d4:	andeq	r3, r1, r0, asr r3
   134d8:	strdeq	r3, [r1], -ip
   134dc:	strdeq	r3, [r1], -ip
   134e0:	strdeq	r3, [r1], -ip
   134e4:	strdeq	r3, [r1], -ip
   134e8:	strdeq	r3, [r1], -ip
   134ec:	strdeq	r3, [r1], -ip
   134f0:	strdeq	r3, [r1], -ip
   134f4:	strdeq	r3, [r1], -ip
   134f8:	strdeq	r3, [r1], -ip
   134fc:	strdeq	r3, [r1], -ip
   13500:	strdeq	r3, [r1], -ip
   13504:	strdeq	r3, [r1], -ip
   13508:	strdeq	r3, [r1], -ip
   1350c:	strdeq	r3, [r1], -ip
   13510:	strdeq	r3, [r1], -ip
   13514:	strdeq	r3, [r1], -ip
   13518:	strdeq	r3, [r1], -ip
   1351c:	strdeq	r3, [r1], -ip
   13520:	strdeq	r3, [r1], -ip
   13524:	strdeq	r3, [r1], -ip
   13528:	strdeq	r3, [r1], -ip
   1352c:	strdeq	r3, [r1], -ip
   13530:	strdeq	r3, [r1], -ip
   13534:	strdeq	r3, [r1], -ip
   13538:	strdeq	r3, [r1], -ip
   1353c:	strdeq	r3, [r1], -ip
   13540:	andeq	r3, r1, r4, ror #4
   13544:	andeq	r2, r1, r0, asr #31
   13548:	strdeq	r3, [r1], -ip
   1354c:	andeq	r3, r1, r4, ror #4
   13550:	strdeq	r3, [r1], -ip
   13554:	andeq	r3, r1, r4, ror #4
   13558:	strdeq	r3, [r1], -ip
   1355c:	strdeq	r3, [r1], -ip
   13560:	strdeq	r3, [r1], -ip
   13564:	strdeq	r3, [r1], -ip
   13568:	strdeq	r3, [r1], -ip
   1356c:	strdeq	r3, [r1], -ip
   13570:	strdeq	r3, [r1], -ip
   13574:	strdeq	r3, [r1], -ip
   13578:	strdeq	r3, [r1], -ip
   1357c:	strdeq	r3, [r1], -ip
   13580:	strdeq	r3, [r1], -ip
   13584:	strdeq	r3, [r1], -ip
   13588:	strdeq	r3, [r1], -ip
   1358c:	strdeq	r3, [r1], -ip
   13590:	strdeq	r3, [r1], -ip
   13594:	strdeq	r3, [r1], -ip
   13598:	strdeq	r3, [r1], -ip
   1359c:	strdeq	r3, [r1], -ip
   135a0:	strdeq	r3, [r1], -ip
   135a4:	strdeq	r3, [r1], -ip
   135a8:	strdeq	r3, [r1], -ip
   135ac:	strdeq	r3, [r1], -ip
   135b0:	strdeq	r3, [r1], -ip
   135b4:	strdeq	r3, [r1], -ip
   135b8:	strdeq	r3, [r1], -ip
   135bc:	strdeq	r3, [r1], -ip
   135c0:	andeq	r2, r1, r4, asr lr
   135c4:	andeq	r3, r1, r4, ror #4
   135c8:	andeq	r2, r1, r4, asr lr
   135cc:	andeq	r2, r1, r4, ror lr
   135d0:	mov	r3, #116	; 0x74
   135d4:	b	130a4 <__snprintf_chk@plt+0x1d38>
   135d8:	ldr	r3, [sp, #160]	; 0xa0
   135dc:	cmp	r3, #0
   135e0:	beq	12eb0 <__snprintf_chk@plt+0x1b44>
   135e4:	lsr	r3, r4, #5
   135e8:	ldr	r0, [sp, #160]	; 0xa0
   135ec:	uxtb	r3, r3
   135f0:	and	r1, r4, #31
   135f4:	ldr	r0, [r0, r3, lsl #2]
   135f8:	lsr	r3, r0, r1
   135fc:	tst	r3, #1
   13600:	beq	12eb0 <__snprintf_chk@plt+0x1b44>
   13604:	ldr	r3, [sp, #28]
   13608:	cmp	r3, #0
   1360c:	beq	13010 <__snprintf_chk@plt+0x1ca4>
   13610:	ldr	sl, [sp, #32]
   13614:	mov	r8, fp
   13618:	b	130d4 <__snprintf_chk@plt+0x1d68>
   1361c:	ldr	r3, [sp, #28]
   13620:	cmp	r3, #0
   13624:	bne	13b78 <__snprintf_chk@plt+0x280c>
   13628:	add	sl, sl, #1
   1362c:	ldr	r6, [sp, #40]	; 0x28
   13630:	mov	r5, #0
   13634:	mov	r4, #92	; 0x5c
   13638:	b	12ecc <__snprintf_chk@plt+0x1b60>
   1363c:	cmp	r9, r8
   13640:	bne	138b0 <__snprintf_chk@plt+0x2544>
   13644:	ldr	r0, [sp, #100]	; 0x64
   13648:	bl	1112c <iswprint@plt>
   1364c:	add	r5, r5, r4
   13650:	cmp	r0, #0
   13654:	add	r0, sp, #104	; 0x68
   13658:	moveq	r6, #0
   1365c:	bl	110c0 <mbsinit@plt>
   13660:	cmp	r0, #0
   13664:	beq	13844 <__snprintf_chk@plt+0x24d8>
   13668:	mov	r2, r6
   1366c:	mov	ip, r5
   13670:	eor	r5, r2, #1
   13674:	ldr	r4, [sp, #80]	; 0x50
   13678:	ldr	r6, [sp, #84]	; 0x54
   1367c:	ldr	r7, [sp, #88]	; 0x58
   13680:	uxtb	r5, r5
   13684:	cmp	ip, #1
   13688:	bls	13b88 <__snprintf_chk@plt+0x281c>
   1368c:	ldr	r3, [sp, #44]	; 0x2c
   13690:	and	r8, r3, r5
   13694:	mov	r5, r2
   13698:	uxtb	r8, r8
   1369c:	add	r2, sl, ip
   136a0:	ldr	r0, [sp, #48]	; 0x30
   136a4:	mov	r1, #0
   136a8:	str	r5, [sp, #48]	; 0x30
   136ac:	ldr	r9, [sp, #28]
   136b0:	ldr	ip, [sp, #40]	; 0x28
   136b4:	ldr	r3, [sp, #32]
   136b8:	ldr	r5, [sp, #152]	; 0x98
   136bc:	b	13778 <__snprintf_chk@plt+0x240c>
   136c0:	cmp	r9, #0
   136c4:	bne	13a9c <__snprintf_chk@plt+0x2730>
   136c8:	eor	r1, ip, #1
   136cc:	cmp	r5, #2
   136d0:	movne	r1, #0
   136d4:	andeq	r1, r1, #1
   136d8:	cmp	r1, #0
   136dc:	beq	13714 <__snprintf_chk@plt+0x23a8>
   136e0:	cmp	fp, r7
   136e4:	movhi	ip, #39	; 0x27
   136e8:	strbhi	ip, [r3, r7]
   136ec:	add	ip, r7, #1
   136f0:	cmp	fp, ip
   136f4:	movhi	lr, #36	; 0x24
   136f8:	strbhi	lr, [r3, ip]
   136fc:	add	ip, r7, #2
   13700:	cmp	fp, ip
   13704:	movhi	lr, #39	; 0x27
   13708:	strbhi	lr, [r3, ip]
   1370c:	add	r7, r7, #3
   13710:	mov	ip, r1
   13714:	cmp	fp, r7
   13718:	movhi	r1, #92	; 0x5c
   1371c:	strbhi	r1, [r3, r7]
   13720:	add	r1, r7, #1
   13724:	cmp	fp, r1
   13728:	lsrhi	lr, r4, #6
   1372c:	addhi	lr, lr, #48	; 0x30
   13730:	strbhi	lr, [r3, r1]
   13734:	add	lr, r7, #2
   13738:	cmp	fp, lr
   1373c:	lsrhi	r1, r4, #3
   13740:	andhi	r1, r1, #7
   13744:	addhi	r1, r1, #48	; 0x30
   13748:	add	sl, sl, #1
   1374c:	strbhi	r1, [r3, lr]
   13750:	and	r4, r4, #7
   13754:	cmp	r2, sl
   13758:	add	r4, r4, #48	; 0x30
   1375c:	add	r7, r7, #3
   13760:	bls	13ac0 <__snprintf_chk@plt+0x2754>
   13764:	mov	r1, r8
   13768:	cmp	fp, r7
   1376c:	strbhi	r4, [r3, r7]
   13770:	ldrb	r4, [r0, #1]!
   13774:	add	r7, r7, #1
   13778:	cmp	r8, #0
   1377c:	bne	136c0 <__snprintf_chk@plt+0x2354>
   13780:	cmp	r6, #0
   13784:	bne	137d4 <__snprintf_chk@plt+0x2468>
   13788:	eor	r6, r1, #1
   1378c:	and	r6, r6, ip
   13790:	add	sl, sl, #1
   13794:	cmp	r2, sl
   13798:	uxtb	r6, r6
   1379c:	bls	137fc <__snprintf_chk@plt+0x2490>
   137a0:	cmp	r6, #0
   137a4:	beq	13768 <__snprintf_chk@plt+0x23fc>
   137a8:	cmp	fp, r7
   137ac:	movhi	ip, #39	; 0x27
   137b0:	strbhi	ip, [r3, r7]
   137b4:	add	ip, r7, #1
   137b8:	cmp	fp, ip
   137bc:	movhi	lr, #39	; 0x27
   137c0:	strbhi	lr, [r3, ip]
   137c4:	add	r7, r7, #2
   137c8:	mov	r6, r8
   137cc:	mov	ip, r8
   137d0:	b	13768 <__snprintf_chk@plt+0x23fc>
   137d4:	cmp	fp, r7
   137d8:	eor	r6, r1, #1
   137dc:	movhi	lr, #92	; 0x5c
   137e0:	and	r6, r6, ip
   137e4:	add	sl, sl, #1
   137e8:	strbhi	lr, [r3, r7]
   137ec:	cmp	r2, sl
   137f0:	add	r7, r7, #1
   137f4:	uxtb	r6, r6
   137f8:	bhi	137a0 <__snprintf_chk@plt+0x2434>
   137fc:	str	ip, [sp, #40]	; 0x28
   13800:	ldr	r5, [sp, #48]	; 0x30
   13804:	b	12ecc <__snprintf_chk@plt+0x1b60>
   13808:	ldr	r3, [sp, #24]
   1380c:	cmn	r3, #1
   13810:	mov	r3, #0
   13814:	str	r3, [sp, #104]	; 0x68
   13818:	str	r3, [sp, #108]	; 0x6c
   1381c:	beq	13b3c <__snprintf_chk@plt+0x27d0>
   13820:	mov	r2, r5
   13824:	mov	r3, #0
   13828:	str	r7, [sp, #88]	; 0x58
   1382c:	ldr	r7, [sp, #152]	; 0x98
   13830:	str	r5, [sp, #92]	; 0x5c
   13834:	str	r6, [sp, #84]	; 0x54
   13838:	mov	r5, r3
   1383c:	mov	r6, r2
   13840:	str	r4, [sp, #80]	; 0x50
   13844:	ldr	r3, [sp, #56]	; 0x38
   13848:	add	r9, sl, r5
   1384c:	add	r8, r3, r9
   13850:	ldr	r3, [sp, #24]
   13854:	mov	r1, r8
   13858:	sub	r2, r3, r9
   1385c:	add	r0, sp, #100	; 0x64
   13860:	add	r3, sp, #104	; 0x68
   13864:	bl	1573c <__snprintf_chk@plt+0x43d0>
   13868:	subs	r4, r0, #0
   1386c:	beq	13c14 <__snprintf_chk@plt+0x28a8>
   13870:	cmn	r4, #1
   13874:	beq	13bf4 <__snprintf_chk@plt+0x2888>
   13878:	cmn	r4, #2
   1387c:	beq	13b94 <__snprintf_chk@plt+0x2828>
   13880:	ldr	r2, [sp, #28]
   13884:	cmp	r7, #2
   13888:	movne	r2, #0
   1388c:	andeq	r2, r2, #1
   13890:	cmp	r2, #0
   13894:	beq	13644 <__snprintf_chk@plt+0x22d8>
   13898:	cmp	r4, #1
   1389c:	beq	13644 <__snprintf_chk@plt+0x22d8>
   138a0:	sub	r3, r4, #1
   138a4:	add	r9, r3, r9
   138a8:	ldr	r3, [sp, #56]	; 0x38
   138ac:	add	r9, r3, r9
   138b0:	ldrb	r3, [r8, #1]!
   138b4:	sub	r3, r3, #91	; 0x5b
   138b8:	cmp	r3, #33	; 0x21
   138bc:	ldrls	pc, [pc, r3, lsl #2]
   138c0:	b	1363c <__snprintf_chk@plt+0x22d0>
   138c4:	andeq	r3, r1, ip, asr #18
   138c8:	andeq	r3, r1, ip, asr #18
   138cc:	andeq	r3, r1, ip, lsr r6
   138d0:	andeq	r3, r1, ip, asr #18
   138d4:	andeq	r3, r1, ip, lsr r6
   138d8:	andeq	r3, r1, ip, asr #18
   138dc:	andeq	r3, r1, ip, lsr r6
   138e0:	andeq	r3, r1, ip, lsr r6
   138e4:	andeq	r3, r1, ip, lsr r6
   138e8:	andeq	r3, r1, ip, lsr r6
   138ec:	andeq	r3, r1, ip, lsr r6
   138f0:	andeq	r3, r1, ip, lsr r6
   138f4:	andeq	r3, r1, ip, lsr r6
   138f8:	andeq	r3, r1, ip, lsr r6
   138fc:	andeq	r3, r1, ip, lsr r6
   13900:	andeq	r3, r1, ip, lsr r6
   13904:	andeq	r3, r1, ip, lsr r6
   13908:	andeq	r3, r1, ip, lsr r6
   1390c:	andeq	r3, r1, ip, lsr r6
   13910:	andeq	r3, r1, ip, lsr r6
   13914:	andeq	r3, r1, ip, lsr r6
   13918:	andeq	r3, r1, ip, lsr r6
   1391c:	andeq	r3, r1, ip, lsr r6
   13920:	andeq	r3, r1, ip, lsr r6
   13924:	andeq	r3, r1, ip, lsr r6
   13928:	andeq	r3, r1, ip, lsr r6
   1392c:	andeq	r3, r1, ip, lsr r6
   13930:	andeq	r3, r1, ip, lsr r6
   13934:	andeq	r3, r1, ip, lsr r6
   13938:	andeq	r3, r1, ip, lsr r6
   1393c:	andeq	r3, r1, ip, lsr r6
   13940:	andeq	r3, r1, ip, lsr r6
   13944:	andeq	r3, r1, ip, lsr r6
   13948:	andeq	r3, r1, ip, asr #18
   1394c:	mov	r3, #2
   13950:	ldr	sl, [sp, #32]
   13954:	mov	r8, fp
   13958:	str	r3, [sp, #152]	; 0x98
   1395c:	b	130d4 <__snprintf_chk@plt+0x1d68>
   13960:	ldr	r3, [sp, #156]	; 0x9c
   13964:	tst	r3, #1
   13968:	bne	13a94 <__snprintf_chk@plt+0x2728>
   1396c:	ldr	r3, [sp, #152]	; 0x98
   13970:	ldr	r4, [sp, #44]	; 0x2c
   13974:	sub	r2, r3, #2
   13978:	mov	r5, #0
   1397c:	clz	r2, r2
   13980:	mov	r8, r4
   13984:	lsr	r2, r2, #5
   13988:	b	12e94 <__snprintf_chk@plt+0x1b28>
   1398c:	ldr	r3, [sp, #156]	; 0x9c
   13990:	ands	r9, r3, #4
   13994:	beq	13acc <__snprintf_chk@plt+0x2760>
   13998:	ldr	r2, [sp, #24]
   1399c:	add	r3, sl, #2
   139a0:	cmp	r3, r2
   139a4:	bcs	139b8 <__snprintf_chk@plt+0x264c>
   139a8:	ldr	r2, [sp, #48]	; 0x30
   139ac:	ldrb	r4, [r2, #1]
   139b0:	cmp	r4, #63	; 0x3f
   139b4:	beq	13c54 <__snprintf_chk@plt+0x28e8>
   139b8:	mov	r2, #0
   139bc:	mov	r8, r2
   139c0:	mov	r5, r2
   139c4:	mov	r4, #63	; 0x3f
   139c8:	b	12e94 <__snprintf_chk@plt+0x1b28>
   139cc:	ldr	r3, [sp, #28]
   139d0:	cmp	r3, #0
   139d4:	bne	13cf8 <__snprintf_chk@plt+0x298c>
   139d8:	mov	r2, r5
   139dc:	mov	r8, r3
   139e0:	mov	r5, #0
   139e4:	mov	r4, #63	; 0x3f
   139e8:	b	12e94 <__snprintf_chk@plt+0x1b28>
   139ec:	ldr	r3, [sp, #28]
   139f0:	cmp	r3, #0
   139f4:	bne	13cf8 <__snprintf_chk@plt+0x298c>
   139f8:	ldr	r2, [sp, #72]	; 0x48
   139fc:	adds	r3, fp, #0
   13a00:	movne	r3, #1
   13a04:	cmp	r2, #0
   13a08:	movne	r3, #0
   13a0c:	cmp	r3, #0
   13a10:	strne	fp, [sp, #72]	; 0x48
   13a14:	movne	fp, #0
   13a18:	bne	13a54 <__snprintf_chk@plt+0x26e8>
   13a1c:	cmp	fp, r7
   13a20:	movhi	r2, #39	; 0x27
   13a24:	ldrhi	r3, [sp, #32]
   13a28:	strbhi	r2, [r3, r7]
   13a2c:	add	r3, r7, #1
   13a30:	cmp	fp, r3
   13a34:	movhi	r1, #92	; 0x5c
   13a38:	ldrhi	r2, [sp, #32]
   13a3c:	strbhi	r1, [r2, r3]
   13a40:	add	r3, r7, #2
   13a44:	cmp	fp, r3
   13a48:	movhi	r1, #39	; 0x27
   13a4c:	ldrhi	r2, [sp, #32]
   13a50:	strbhi	r1, [r2, r3]
   13a54:	ldr	r3, [sp, #28]
   13a58:	add	r7, r7, #3
   13a5c:	mov	r2, r5
   13a60:	mov	r8, r3
   13a64:	str	r5, [sp, #68]	; 0x44
   13a68:	str	r3, [sp, #40]	; 0x28
   13a6c:	mov	r4, #39	; 0x27
   13a70:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13a74:	ldr	r3, [sp, #56]	; 0x38
   13a78:	ldrb	r3, [r3, #1]
   13a7c:	adds	r3, r3, #0
   13a80:	movne	r3, #1
   13a84:	b	12e6c <__snprintf_chk@plt+0x1b00>
   13a88:	ldr	r5, [sp, #28]
   13a8c:	mov	r4, #48	; 0x30
   13a90:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13a94:	add	sl, sl, #1
   13a98:	b	129c4 <__snprintf_chk@plt+0x1658>
   13a9c:	mov	sl, r3
   13aa0:	ldr	r3, [sp, #28]
   13aa4:	mov	r8, fp
   13aa8:	str	r3, [sp, #44]	; 0x2c
   13aac:	ldr	r3, [sp, #152]	; 0x98
   13ab0:	sub	r2, r3, #2
   13ab4:	clz	r2, r2
   13ab8:	lsr	r2, r2, #5
   13abc:	b	130d4 <__snprintf_chk@plt+0x1d68>
   13ac0:	str	ip, [sp, #40]	; 0x28
   13ac4:	ldr	r5, [sp, #48]	; 0x30
   13ac8:	b	12f04 <__snprintf_chk@plt+0x1b98>
   13acc:	mov	r2, r9
   13ad0:	mov	r8, r9
   13ad4:	mov	r5, #0
   13ad8:	mov	r4, #63	; 0x3f
   13adc:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13ae0:	cmp	fp, #0
   13ae4:	beq	13b5c <__snprintf_chk@plt+0x27f0>
   13ae8:	ldr	r1, [sp, #32]
   13aec:	mov	r3, #34	; 0x22
   13af0:	mov	r2, #1
   13af4:	strb	r3, [r1]
   13af8:	ldr	r3, [pc, #332]	; 13c4c <__snprintf_chk@plt+0x28e0>
   13afc:	str	r2, [sp, #52]	; 0x34
   13b00:	mov	r7, r2
   13b04:	str	r2, [sp, #44]	; 0x2c
   13b08:	str	r3, [sp, #64]	; 0x40
   13b0c:	b	129b4 <__snprintf_chk@plt+0x1648>
   13b10:	ldr	r3, [pc, #300]	; 13c44 <__snprintf_chk@plt+0x28d8>
   13b14:	str	r3, [sp, #64]	; 0x40
   13b18:	mov	r3, #0
   13b1c:	str	r3, [sp, #28]
   13b20:	mov	r3, #1
   13b24:	str	r3, [sp, #52]	; 0x34
   13b28:	mov	r7, r3
   13b2c:	mov	r3, #2
   13b30:	str	r3, [sp, #152]	; 0x98
   13b34:	b	129b4 <__snprintf_chk@plt+0x1648>
   13b38:	bl	11360 <abort@plt>
   13b3c:	ldr	r0, [sp, #56]	; 0x38
   13b40:	bl	11228 <strlen@plt>
   13b44:	str	r0, [sp, #24]
   13b48:	b	13820 <__snprintf_chk@plt+0x24b4>
   13b4c:	mov	r5, r8
   13b50:	mov	r4, #48	; 0x30
   13b54:	ldr	r8, [sp, #44]	; 0x2c
   13b58:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13b5c:	mov	r3, #1
   13b60:	str	r3, [sp, #52]	; 0x34
   13b64:	mov	r7, r3
   13b68:	str	r3, [sp, #44]	; 0x2c
   13b6c:	ldr	r3, [pc, #216]	; 13c4c <__snprintf_chk@plt+0x28e0>
   13b70:	str	r3, [sp, #64]	; 0x40
   13b74:	b	129b4 <__snprintf_chk@plt+0x1648>
   13b78:	ldr	sl, [sp, #32]
   13b7c:	mov	r8, fp
   13b80:	mov	r2, r3
   13b84:	b	130d4 <__snprintf_chk@plt+0x1d68>
   13b88:	mov	r3, r5
   13b8c:	mov	r5, r2
   13b90:	b	1338c <__snprintf_chk@plt+0x2020>
   13b94:	ldr	r1, [sp, #24]
   13b98:	mov	r2, r5
   13b9c:	cmp	r1, r9
   13ba0:	mov	ip, r5
   13ba4:	ldr	r4, [sp, #80]	; 0x50
   13ba8:	ldr	r5, [sp, #92]	; 0x5c
   13bac:	ldr	r6, [sp, #84]	; 0x54
   13bb0:	ldr	r7, [sp, #88]	; 0x58
   13bb4:	bls	13be8 <__snprintf_chk@plt+0x287c>
   13bb8:	ldrb	r3, [r8]
   13bbc:	cmp	r3, #0
   13bc0:	bne	13bd4 <__snprintf_chk@plt+0x2868>
   13bc4:	b	13bec <__snprintf_chk@plt+0x2880>
   13bc8:	ldrb	r3, [r8, #1]!
   13bcc:	cmp	r3, #0
   13bd0:	beq	13cec <__snprintf_chk@plt+0x2980>
   13bd4:	add	r2, r2, #1
   13bd8:	add	r3, sl, r2
   13bdc:	cmp	r1, r3
   13be0:	bhi	13bc8 <__snprintf_chk@plt+0x285c>
   13be4:	mov	ip, r2
   13be8:	mov	r3, #0
   13bec:	mov	r2, r3
   13bf0:	b	13684 <__snprintf_chk@plt+0x2318>
   13bf4:	mov	r3, #0
   13bf8:	mov	ip, r5
   13bfc:	ldr	r4, [sp, #80]	; 0x50
   13c00:	ldr	r5, [sp, #92]	; 0x5c
   13c04:	ldr	r6, [sp, #84]	; 0x54
   13c08:	ldr	r7, [sp, #88]	; 0x58
   13c0c:	mov	r2, r3
   13c10:	b	13684 <__snprintf_chk@plt+0x2318>
   13c14:	mov	r3, r6
   13c18:	mov	ip, r5
   13c1c:	eor	r5, r3, #1
   13c20:	mov	r2, r6
   13c24:	ldr	r4, [sp, #80]	; 0x50
   13c28:	ldr	r6, [sp, #84]	; 0x54
   13c2c:	ldr	r7, [sp, #88]	; 0x58
   13c30:	uxtb	r5, r5
   13c34:	b	13684 <__snprintf_chk@plt+0x2318>
   13c38:	ldr	sl, [sp, #32]
   13c3c:	mov	r8, fp
   13c40:	b	13aa8 <__snprintf_chk@plt+0x273c>
   13c44:	strdeq	r6, [r1], -r8
   13c48:	strdeq	r6, [r1], -ip
   13c4c:	strdeq	r6, [r1], -r4
   13c50:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13c54:	ldr	r2, [sp, #56]	; 0x38
   13c58:	ldrb	r1, [r2, r3]
   13c5c:	sub	r2, r1, #33	; 0x21
   13c60:	uxtb	r2, r2
   13c64:	cmp	r2, #29
   13c68:	bhi	13d08 <__snprintf_chk@plt+0x299c>
   13c6c:	ldr	r0, [pc, #-36]	; 13c50 <__snprintf_chk@plt+0x28e4>
   13c70:	mov	ip, #1
   13c74:	ands	r2, r0, ip, lsl r2
   13c78:	beq	13d18 <__snprintf_chk@plt+0x29ac>
   13c7c:	ldr	r2, [sp, #28]
   13c80:	cmp	r2, #0
   13c84:	bne	13e18 <__snprintf_chk@plt+0x2aac>
   13c88:	cmp	fp, r7
   13c8c:	ldr	r8, [sp, #28]
   13c90:	ldrhi	r2, [sp, #32]
   13c94:	mov	sl, r3
   13c98:	mov	r5, r8
   13c9c:	strbhi	r4, [r2, r7]
   13ca0:	add	r2, r7, #1
   13ca4:	cmp	fp, r2
   13ca8:	movhi	r0, #34	; 0x22
   13cac:	ldrhi	ip, [sp, #32]
   13cb0:	mov	r4, r1
   13cb4:	strbhi	r0, [ip, r2]
   13cb8:	add	r2, r7, #2
   13cbc:	cmp	fp, r2
   13cc0:	movhi	r0, #34	; 0x22
   13cc4:	ldrhi	ip, [sp, #32]
   13cc8:	strbhi	r0, [ip, r2]
   13ccc:	add	r2, r7, #3
   13cd0:	cmp	fp, r2
   13cd4:	movhi	r0, #63	; 0x3f
   13cd8:	ldrhi	ip, [sp, #32]
   13cdc:	add	r7, r7, #4
   13ce0:	strbhi	r0, [ip, r2]
   13ce4:	mov	r2, r8
   13ce8:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13cec:	mov	ip, r2
   13cf0:	mov	r2, r3
   13cf4:	b	13684 <__snprintf_chk@plt+0x2318>
   13cf8:	ldr	sl, [sp, #32]
   13cfc:	mov	r8, fp
   13d00:	ldr	r2, [sp, #28]
   13d04:	b	130d4 <__snprintf_chk@plt+0x1d68>
   13d08:	mov	r2, #0
   13d0c:	mov	r8, r2
   13d10:	mov	r5, r2
   13d14:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13d18:	mov	r8, r2
   13d1c:	mov	r5, #0
   13d20:	b	12e94 <__snprintf_chk@plt+0x1b28>
   13d24:	ldr	r1, [sp, #152]	; 0x98
   13d28:	bl	127f0 <__snprintf_chk@plt+0x1484>
   13d2c:	str	r0, [sp, #168]	; 0xa8
   13d30:	b	12d50 <__snprintf_chk@plt+0x19e4>
   13d34:	ldr	r1, [sp, #152]	; 0x98
   13d38:	bl	127f0 <__snprintf_chk@plt+0x1484>
   13d3c:	str	r0, [sp, #164]	; 0xa4
   13d40:	b	12d30 <__snprintf_chk@plt+0x19c4>
   13d44:	ldr	r7, [sp, #28]
   13d48:	b	12d90 <__snprintf_chk@plt+0x1a24>
   13d4c:	ldr	sl, [sp, #32]
   13d50:	ldr	r2, [sp, #68]	; 0x44
   13d54:	mov	r8, fp
   13d58:	mov	fp, r7
   13d5c:	ldr	r3, [sp, #64]	; 0x40
   13d60:	cmp	r3, #0
   13d64:	moveq	r2, #0
   13d68:	andne	r2, r2, #1
   13d6c:	cmp	r2, #0
   13d70:	beq	13d9c <__snprintf_chk@plt+0x2a30>
   13d74:	mov	r2, r3
   13d78:	ldrb	r3, [r3]
   13d7c:	cmp	r3, #0
   13d80:	beq	13d9c <__snprintf_chk@plt+0x2a30>
   13d84:	cmp	r8, fp
   13d88:	strbhi	r3, [sl, fp]
   13d8c:	ldrb	r3, [r2, #1]!
   13d90:	add	fp, fp, #1
   13d94:	cmp	r3, #0
   13d98:	bne	13d84 <__snprintf_chk@plt+0x2a18>
   13d9c:	cmp	r8, fp
   13da0:	movhi	r3, #0
   13da4:	strbhi	r3, [sl, fp]
   13da8:	b	13130 <__snprintf_chk@plt+0x1dc4>
   13dac:	ldr	r3, [sp, #168]	; 0xa8
   13db0:	ldr	sl, [sp, #32]
   13db4:	str	r3, [sp, #16]
   13db8:	ldr	r3, [sp, #164]	; 0xa4
   13dbc:	mov	ip, #5
   13dc0:	str	r3, [sp, #12]
   13dc4:	ldr	r3, [sp, #160]	; 0xa0
   13dc8:	ldr	r2, [sp, #56]	; 0x38
   13dcc:	str	r3, [sp, #8]
   13dd0:	ldr	r3, [sp, #156]	; 0x9c
   13dd4:	ldr	r1, [sp, #72]	; 0x48
   13dd8:	str	r3, [sp, #4]
   13ddc:	mov	r0, sl
   13de0:	ldr	r3, [sp, #24]
   13de4:	str	ip, [sp]
   13de8:	bl	12910 <__snprintf_chk@plt+0x15a4>
   13dec:	mov	fp, r0
   13df0:	b	13130 <__snprintf_chk@plt+0x1dc4>
   13df4:	mov	r8, fp
   13df8:	ldr	sl, [sp, #32]
   13dfc:	mov	fp, r7
   13e00:	mov	r2, r3
   13e04:	b	13d5c <__snprintf_chk@plt+0x29f0>
   13e08:	mov	r8, fp
   13e0c:	ldr	sl, [sp, #32]
   13e10:	mov	fp, r7
   13e14:	b	13d5c <__snprintf_chk@plt+0x29f0>
   13e18:	ldr	sl, [sp, #32]
   13e1c:	mov	r8, fp
   13e20:	b	130ec <__snprintf_chk@plt+0x1d80>
   13e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e28:	sub	sp, sp, #52	; 0x34
   13e2c:	mov	r4, r0
   13e30:	mov	r5, r3
   13e34:	mov	sl, r1
   13e38:	mov	fp, r2
   13e3c:	bl	1124c <__errno_location@plt>
   13e40:	ldr	r7, [pc, #412]	; 13fe4 <__snprintf_chk@plt+0x2c78>
   13e44:	cmn	r4, #-2147483647	; 0x80000001
   13e48:	ldr	r6, [r7]
   13e4c:	mov	r8, r0
   13e50:	movne	r0, #0
   13e54:	moveq	r0, #1
   13e58:	ldr	r3, [r8]
   13e5c:	orrs	r0, r0, r4, lsr #31
   13e60:	str	r3, [sp, #24]
   13e64:	bne	13fe0 <__snprintf_chk@plt+0x2c74>
   13e68:	ldr	r2, [r7, #4]
   13e6c:	cmp	r4, r2
   13e70:	blt	13ed0 <__snprintf_chk@plt+0x2b64>
   13e74:	add	r9, r7, #8
   13e78:	cmp	r6, r9
   13e7c:	str	r2, [sp, #44]	; 0x2c
   13e80:	beq	13fb0 <__snprintf_chk@plt+0x2c44>
   13e84:	mov	r3, #8
   13e88:	sub	r2, r4, r2
   13e8c:	mov	r0, r6
   13e90:	str	r3, [sp]
   13e94:	add	r2, r2, #1
   13e98:	mvn	r3, #-2147483648	; 0x80000000
   13e9c:	add	r1, sp, #44	; 0x2c
   13ea0:	bl	14efc <__snprintf_chk@plt+0x3b90>
   13ea4:	mov	r6, r0
   13ea8:	str	r0, [r7]
   13eac:	ldr	r0, [r7, #4]
   13eb0:	ldr	r2, [sp, #44]	; 0x2c
   13eb4:	mov	r1, #0
   13eb8:	sub	r2, r2, r0
   13ebc:	add	r0, r6, r0, lsl #3
   13ec0:	lsl	r2, r2, #3
   13ec4:	bl	11270 <memset@plt>
   13ec8:	ldr	r3, [sp, #44]	; 0x2c
   13ecc:	str	r3, [r7, #4]
   13ed0:	add	r3, r6, r4, lsl #3
   13ed4:	ldr	r1, [r5, #4]
   13ed8:	ldr	r7, [r3, #4]
   13edc:	ldr	r9, [r6, r4, lsl #3]
   13ee0:	ldr	r2, [r5, #40]	; 0x28
   13ee4:	ldr	ip, [r5, #44]	; 0x2c
   13ee8:	add	r0, r5, #8
   13eec:	str	r3, [sp, #28]
   13ef0:	ldr	r3, [r5]
   13ef4:	orr	r1, r1, #1
   13ef8:	mov	lr, r0
   13efc:	str	r1, [sp, #32]
   13f00:	str	r0, [sp, #36]	; 0x24
   13f04:	str	r1, [sp, #4]
   13f08:	str	r2, [sp, #12]
   13f0c:	str	r3, [sp]
   13f10:	mov	r0, r7
   13f14:	mov	r1, r9
   13f18:	str	ip, [sp, #16]
   13f1c:	str	lr, [sp, #8]
   13f20:	mov	r3, fp
   13f24:	mov	r2, sl
   13f28:	bl	12910 <__snprintf_chk@plt+0x15a4>
   13f2c:	cmp	r9, r0
   13f30:	bhi	13f9c <__snprintf_chk@plt+0x2c30>
   13f34:	ldr	r3, [pc, #172]	; 13fe8 <__snprintf_chk@plt+0x2c7c>
   13f38:	add	r9, r0, #1
   13f3c:	cmp	r7, r3
   13f40:	str	r9, [r6, r4, lsl #3]
   13f44:	beq	13f50 <__snprintf_chk@plt+0x2be4>
   13f48:	mov	r0, r7
   13f4c:	bl	126b4 <__snprintf_chk@plt+0x1348>
   13f50:	mov	r0, r9
   13f54:	bl	14d98 <__snprintf_chk@plt+0x3a2c>
   13f58:	ldr	lr, [sp, #28]
   13f5c:	ldr	ip, [r5, #44]	; 0x2c
   13f60:	ldr	r4, [r5, #40]	; 0x28
   13f64:	mov	r3, fp
   13f68:	mov	r2, sl
   13f6c:	mov	r1, r9
   13f70:	str	r0, [lr, #4]
   13f74:	ldr	lr, [r5]
   13f78:	ldr	r5, [sp, #36]	; 0x24
   13f7c:	str	ip, [sp, #16]
   13f80:	str	r5, [sp, #8]
   13f84:	ldr	r5, [sp, #32]
   13f88:	str	r4, [sp, #12]
   13f8c:	str	r5, [sp, #4]
   13f90:	str	lr, [sp]
   13f94:	mov	r7, r0
   13f98:	bl	12910 <__snprintf_chk@plt+0x15a4>
   13f9c:	ldr	r3, [sp, #24]
   13fa0:	mov	r0, r7
   13fa4:	str	r3, [r8]
   13fa8:	add	sp, sp, #52	; 0x34
   13fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fb0:	mov	r3, #8
   13fb4:	sub	r2, r4, r2
   13fb8:	str	r3, [sp]
   13fbc:	add	r1, sp, #44	; 0x2c
   13fc0:	add	r2, r2, #1
   13fc4:	mvn	r3, #-2147483648	; 0x80000000
   13fc8:	bl	14efc <__snprintf_chk@plt+0x3b90>
   13fcc:	mov	r6, r0
   13fd0:	ldm	r9, {r0, r1}
   13fd4:	str	r6, [r7]
   13fd8:	stm	r6, {r0, r1}
   13fdc:	b	13eac <__snprintf_chk@plt+0x2b40>
   13fe0:	bl	11360 <abort@plt>
   13fe4:	andeq	r7, r2, r8, lsr r1
   13fe8:	andeq	r7, r2, r8, ror #6
   13fec:	push	{r4, r5, r6, lr}
   13ff0:	mov	r5, r0
   13ff4:	bl	1124c <__errno_location@plt>
   13ff8:	cmp	r5, #0
   13ffc:	mov	r1, #48	; 0x30
   14000:	mov	r4, r0
   14004:	ldr	r0, [pc, #16]	; 1401c <__snprintf_chk@plt+0x2cb0>
   14008:	ldr	r6, [r4]
   1400c:	movne	r0, r5
   14010:	bl	151f8 <__snprintf_chk@plt+0x3e8c>
   14014:	str	r6, [r4]
   14018:	pop	{r4, r5, r6, pc}
   1401c:	andeq	r7, r2, r8, ror #8
   14020:	ldr	r3, [pc, #12]	; 14034 <__snprintf_chk@plt+0x2cc8>
   14024:	cmp	r0, #0
   14028:	moveq	r0, r3
   1402c:	ldr	r0, [r0]
   14030:	bx	lr
   14034:	andeq	r7, r2, r8, ror #8
   14038:	ldr	r3, [pc, #12]	; 1404c <__snprintf_chk@plt+0x2ce0>
   1403c:	cmp	r0, #0
   14040:	moveq	r0, r3
   14044:	str	r1, [r0]
   14048:	bx	lr
   1404c:	andeq	r7, r2, r8, ror #8
   14050:	ldr	r3, [pc, #52]	; 1408c <__snprintf_chk@plt+0x2d20>
   14054:	cmp	r0, #0
   14058:	moveq	r0, r3
   1405c:	add	r3, r0, #8
   14060:	push	{lr}		; (str lr, [sp, #-4]!)
   14064:	lsr	lr, r1, #5
   14068:	and	r1, r1, #31
   1406c:	ldr	ip, [r3, lr, lsl #2]
   14070:	lsr	r0, ip, r1
   14074:	eor	r2, r2, r0
   14078:	and	r2, r2, #1
   1407c:	and	r0, r0, #1
   14080:	eor	r1, ip, r2, lsl r1
   14084:	str	r1, [r3, lr, lsl #2]
   14088:	pop	{pc}		; (ldr pc, [sp], #4)
   1408c:	andeq	r7, r2, r8, ror #8
   14090:	ldr	r3, [pc, #16]	; 140a8 <__snprintf_chk@plt+0x2d3c>
   14094:	cmp	r0, #0
   14098:	movne	r3, r0
   1409c:	ldr	r0, [r3, #4]
   140a0:	str	r1, [r3, #4]
   140a4:	bx	lr
   140a8:	andeq	r7, r2, r8, ror #8
   140ac:	ldr	r3, [pc, #44]	; 140e0 <__snprintf_chk@plt+0x2d74>
   140b0:	cmp	r0, #0
   140b4:	moveq	r0, r3
   140b8:	mov	ip, #10
   140bc:	cmp	r2, #0
   140c0:	cmpne	r1, #0
   140c4:	str	ip, [r0]
   140c8:	beq	140d8 <__snprintf_chk@plt+0x2d6c>
   140cc:	str	r1, [r0, #40]	; 0x28
   140d0:	str	r2, [r0, #44]	; 0x2c
   140d4:	bx	lr
   140d8:	push	{r4, lr}
   140dc:	bl	11360 <abort@plt>
   140e0:	andeq	r7, r2, r8, ror #8
   140e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140e8:	sub	sp, sp, #24
   140ec:	ldr	ip, [pc, #108]	; 14160 <__snprintf_chk@plt+0x2df4>
   140f0:	ldr	r4, [sp, #56]	; 0x38
   140f4:	mov	r9, r2
   140f8:	cmp	r4, #0
   140fc:	moveq	r4, ip
   14100:	mov	sl, r3
   14104:	mov	r7, r0
   14108:	mov	r8, r1
   1410c:	bl	1124c <__errno_location@plt>
   14110:	ldr	r3, [r4, #44]	; 0x2c
   14114:	mov	r1, r8
   14118:	ldr	r6, [r0]
   1411c:	str	r3, [sp, #16]
   14120:	ldr	r2, [r4, #40]	; 0x28
   14124:	add	r3, r4, #8
   14128:	str	r3, [sp, #8]
   1412c:	str	r2, [sp, #12]
   14130:	ldr	r2, [r4, #4]
   14134:	mov	r5, r0
   14138:	str	r2, [sp, #4]
   1413c:	ldr	ip, [r4]
   14140:	mov	r3, sl
   14144:	mov	r2, r9
   14148:	mov	r0, r7
   1414c:	str	ip, [sp]
   14150:	bl	12910 <__snprintf_chk@plt+0x15a4>
   14154:	str	r6, [r5]
   14158:	add	sp, sp, #24
   1415c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14160:	andeq	r7, r2, r8, ror #8
   14164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14168:	cmp	r3, #0
   1416c:	sub	sp, sp, #44	; 0x2c
   14170:	ldr	r4, [pc, #192]	; 14238 <__snprintf_chk@plt+0x2ecc>
   14174:	mov	r6, r2
   14178:	movne	r4, r3
   1417c:	mov	r9, r1
   14180:	mov	r8, r0
   14184:	bl	1124c <__errno_location@plt>
   14188:	ldr	r3, [r4, #44]	; 0x2c
   1418c:	ldr	r5, [r4, #4]
   14190:	add	sl, r4, #8
   14194:	cmp	r6, #0
   14198:	orreq	r5, r5, #1
   1419c:	mov	r1, #0
   141a0:	ldr	r2, [r0]
   141a4:	str	r3, [sp, #16]
   141a8:	ldr	r3, [r4, #40]	; 0x28
   141ac:	stmib	sp, {r5, sl}
   141b0:	str	r3, [sp, #12]
   141b4:	ldr	r3, [r4]
   141b8:	mov	r7, r0
   141bc:	str	r2, [sp, #28]
   141c0:	str	r3, [sp]
   141c4:	mov	r2, r8
   141c8:	mov	r3, r9
   141cc:	mov	r0, r1
   141d0:	bl	12910 <__snprintf_chk@plt+0x15a4>
   141d4:	add	r1, r0, #1
   141d8:	mov	fp, r0
   141dc:	mov	r0, r1
   141e0:	str	r1, [sp, #36]	; 0x24
   141e4:	bl	14d98 <__snprintf_chk@plt+0x3a2c>
   141e8:	ldr	r3, [r4, #44]	; 0x2c
   141ec:	mov	r2, r8
   141f0:	str	r3, [sp, #16]
   141f4:	ldr	r3, [r4, #40]	; 0x28
   141f8:	str	r5, [sp, #4]
   141fc:	str	r3, [sp, #12]
   14200:	str	sl, [sp, #8]
   14204:	ldr	ip, [r4]
   14208:	ldr	r1, [sp, #36]	; 0x24
   1420c:	mov	r3, r9
   14210:	str	ip, [sp]
   14214:	str	r0, [sp, #32]
   14218:	bl	12910 <__snprintf_chk@plt+0x15a4>
   1421c:	ldr	r2, [sp, #28]
   14220:	cmp	r6, #0
   14224:	str	r2, [r7]
   14228:	ldr	r0, [sp, #32]
   1422c:	strne	fp, [r6]
   14230:	add	sp, sp, #44	; 0x2c
   14234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14238:	andeq	r7, r2, r8, ror #8
   1423c:	mov	r3, r2
   14240:	mov	r2, #0
   14244:	b	14164 <__snprintf_chk@plt+0x2df8>
   14248:	push	{r4, r5, r6, r7, r8, lr}
   1424c:	ldr	r6, [pc, #116]	; 142c8 <__snprintf_chk@plt+0x2f5c>
   14250:	ldr	r3, [r6, #4]
   14254:	ldr	r7, [r6]
   14258:	cmp	r3, #1
   1425c:	movgt	r5, r7
   14260:	movgt	r4, #1
   14264:	ble	14284 <__snprintf_chk@plt+0x2f18>
   14268:	ldr	r0, [r5, #12]
   1426c:	bl	126b4 <__snprintf_chk@plt+0x1348>
   14270:	ldr	r3, [r6, #4]
   14274:	add	r4, r4, #1
   14278:	cmp	r3, r4
   1427c:	add	r5, r5, #8
   14280:	bgt	14268 <__snprintf_chk@plt+0x2efc>
   14284:	ldr	r0, [r7, #4]
   14288:	ldr	r4, [pc, #60]	; 142cc <__snprintf_chk@plt+0x2f60>
   1428c:	cmp	r0, r4
   14290:	beq	142a4 <__snprintf_chk@plt+0x2f38>
   14294:	bl	126b4 <__snprintf_chk@plt+0x1348>
   14298:	mov	r3, #256	; 0x100
   1429c:	str	r4, [r6, #12]
   142a0:	str	r3, [r6, #8]
   142a4:	ldr	r4, [pc, #36]	; 142d0 <__snprintf_chk@plt+0x2f64>
   142a8:	cmp	r7, r4
   142ac:	beq	142bc <__snprintf_chk@plt+0x2f50>
   142b0:	mov	r0, r7
   142b4:	bl	126b4 <__snprintf_chk@plt+0x1348>
   142b8:	str	r4, [r6]
   142bc:	mov	r3, #1
   142c0:	str	r3, [r6, #4]
   142c4:	pop	{r4, r5, r6, r7, r8, pc}
   142c8:	andeq	r7, r2, r8, lsr r1
   142cc:	andeq	r7, r2, r8, ror #6
   142d0:	andeq	r7, r2, r0, asr #2
   142d4:	ldr	r3, [pc, #4]	; 142e0 <__snprintf_chk@plt+0x2f74>
   142d8:	mvn	r2, #0
   142dc:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   142e0:	andeq	r7, r2, r8, ror #8
   142e4:	ldr	r3, [pc]	; 142ec <__snprintf_chk@plt+0x2f80>
   142e8:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   142ec:	andeq	r7, r2, r8, ror #8
   142f0:	mov	r1, r0
   142f4:	ldr	r3, [pc, #8]	; 14304 <__snprintf_chk@plt+0x2f98>
   142f8:	mvn	r2, #0
   142fc:	mov	r0, #0
   14300:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   14304:	andeq	r7, r2, r8, ror #8
   14308:	mov	r2, r1
   1430c:	ldr	r3, [pc, #8]	; 1431c <__snprintf_chk@plt+0x2fb0>
   14310:	mov	r1, r0
   14314:	mov	r0, #0
   14318:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   1431c:	andeq	r7, r2, r8, ror #8
   14320:	push	{r4, r5, lr}
   14324:	sub	sp, sp, #52	; 0x34
   14328:	mov	r5, r2
   1432c:	mov	r4, r0
   14330:	mov	r0, sp
   14334:	bl	127c0 <__snprintf_chk@plt+0x1454>
   14338:	mov	r3, sp
   1433c:	mov	r1, r5
   14340:	mov	r0, r4
   14344:	mvn	r2, #0
   14348:	bl	13e24 <__snprintf_chk@plt+0x2ab8>
   1434c:	add	sp, sp, #52	; 0x34
   14350:	pop	{r4, r5, pc}
   14354:	push	{r4, r5, r6, lr}
   14358:	sub	sp, sp, #48	; 0x30
   1435c:	mov	r5, r2
   14360:	mov	r6, r3
   14364:	mov	r4, r0
   14368:	mov	r0, sp
   1436c:	bl	127c0 <__snprintf_chk@plt+0x1454>
   14370:	mov	r3, sp
   14374:	mov	r2, r6
   14378:	mov	r1, r5
   1437c:	mov	r0, r4
   14380:	bl	13e24 <__snprintf_chk@plt+0x2ab8>
   14384:	add	sp, sp, #48	; 0x30
   14388:	pop	{r4, r5, r6, pc}
   1438c:	mov	r2, r1
   14390:	mov	r1, r0
   14394:	mov	r0, #0
   14398:	b	14320 <__snprintf_chk@plt+0x2fb4>
   1439c:	mov	r3, r2
   143a0:	mov	r2, r1
   143a4:	mov	r1, r0
   143a8:	mov	r0, #0
   143ac:	b	14354 <__snprintf_chk@plt+0x2fe8>
   143b0:	push	{r4, r5, r6, r7, r8, lr}
   143b4:	mov	r7, r0
   143b8:	ldr	lr, [pc, #100]	; 14424 <__snprintf_chk@plt+0x30b8>
   143bc:	mov	r8, r1
   143c0:	mov	r4, r2
   143c4:	ldm	lr!, {r0, r1, r2, r3}
   143c8:	sub	sp, sp, #48	; 0x30
   143cc:	mov	ip, sp
   143d0:	lsr	r5, r4, #5
   143d4:	stmia	ip!, {r0, r1, r2, r3}
   143d8:	add	r6, sp, #8
   143dc:	ldm	lr!, {r0, r1, r2, r3}
   143e0:	and	r4, r4, #31
   143e4:	stmia	ip!, {r0, r1, r2, r3}
   143e8:	ldm	lr, {r0, r1, r2, r3}
   143ec:	stm	ip, {r0, r1, r2, r3}
   143f0:	mov	r2, r8
   143f4:	ldr	lr, [r6, r5, lsl #2]
   143f8:	mov	r1, r7
   143fc:	mov	r3, sp
   14400:	lsr	ip, lr, r4
   14404:	eor	ip, ip, #1
   14408:	and	ip, ip, #1
   1440c:	mov	r0, #0
   14410:	eor	r4, lr, ip, lsl r4
   14414:	str	r4, [r6, r5, lsl #2]
   14418:	bl	13e24 <__snprintf_chk@plt+0x2ab8>
   1441c:	add	sp, sp, #48	; 0x30
   14420:	pop	{r4, r5, r6, r7, r8, pc}
   14424:	andeq	r7, r2, r8, ror #8
   14428:	mov	r2, r1
   1442c:	mvn	r1, #0
   14430:	b	143b0 <__snprintf_chk@plt+0x3044>
   14434:	mov	r2, #58	; 0x3a
   14438:	mvn	r1, #0
   1443c:	b	143b0 <__snprintf_chk@plt+0x3044>
   14440:	mov	r2, #58	; 0x3a
   14444:	b	143b0 <__snprintf_chk@plt+0x3044>
   14448:	push	{r4, r5, r6, r7, lr}
   1444c:	sub	sp, sp, #100	; 0x64
   14450:	mov	r6, r0
   14454:	mov	r0, sp
   14458:	mov	r7, r2
   1445c:	bl	127c0 <__snprintf_chk@plt+0x1454>
   14460:	mov	ip, sp
   14464:	add	lr, sp, #48	; 0x30
   14468:	ldm	ip!, {r0, r1, r2, r3}
   1446c:	stmia	lr!, {r0, r1, r2, r3}
   14470:	ldm	ip!, {r0, r1, r2, r3}
   14474:	ldr	r5, [sp, #60]	; 0x3c
   14478:	stmia	lr!, {r0, r1, r2, r3}
   1447c:	mvn	r4, r5
   14480:	ldm	ip, {r0, r1, r2, r3}
   14484:	and	ip, r4, #67108864	; 0x4000000
   14488:	eor	ip, ip, r5
   1448c:	str	ip, [sp, #60]	; 0x3c
   14490:	stm	lr, {r0, r1, r2, r3}
   14494:	mov	r1, r7
   14498:	mov	r0, r6
   1449c:	add	r3, sp, #48	; 0x30
   144a0:	mvn	r2, #0
   144a4:	bl	13e24 <__snprintf_chk@plt+0x2ab8>
   144a8:	add	sp, sp, #100	; 0x64
   144ac:	pop	{r4, r5, r6, r7, pc}
   144b0:	push	{r4, r5, r6, r7, r8, lr}
   144b4:	mov	r5, r1
   144b8:	ldr	lr, [pc, #100]	; 14524 <__snprintf_chk@plt+0x31b8>
   144bc:	mov	r4, r2
   144c0:	mov	r7, r0
   144c4:	mov	r8, r3
   144c8:	ldm	lr!, {r0, r1, r2, r3}
   144cc:	sub	sp, sp, #48	; 0x30
   144d0:	mov	ip, sp
   144d4:	mov	r6, #10
   144d8:	stmia	ip!, {r0, r1, r2, r3}
   144dc:	cmp	r4, #0
   144e0:	cmpne	r5, #0
   144e4:	ldm	lr!, {r0, r1, r2, r3}
   144e8:	str	r6, [sp]
   144ec:	stmia	ip!, {r0, r1, r2, r3}
   144f0:	ldm	lr, {r0, r1, r2, r3}
   144f4:	stm	ip, {r0, r1, r2, r3}
   144f8:	beq	14520 <__snprintf_chk@plt+0x31b4>
   144fc:	mov	r3, sp
   14500:	mov	r1, r8
   14504:	mov	r0, r7
   14508:	ldr	r2, [sp, #72]	; 0x48
   1450c:	str	r5, [sp, #40]	; 0x28
   14510:	str	r4, [sp, #44]	; 0x2c
   14514:	bl	13e24 <__snprintf_chk@plt+0x2ab8>
   14518:	add	sp, sp, #48	; 0x30
   1451c:	pop	{r4, r5, r6, r7, r8, pc}
   14520:	bl	11360 <abort@plt>
   14524:	andeq	r7, r2, r8, ror #8
   14528:	push	{lr}		; (str lr, [sp, #-4]!)
   1452c:	sub	sp, sp, #12
   14530:	mvn	ip, #0
   14534:	str	ip, [sp]
   14538:	bl	144b0 <__snprintf_chk@plt+0x3144>
   1453c:	add	sp, sp, #12
   14540:	pop	{pc}		; (ldr pc, [sp], #4)
   14544:	push	{lr}		; (str lr, [sp, #-4]!)
   14548:	sub	sp, sp, #12
   1454c:	mvn	ip, #0
   14550:	mov	r3, r2
   14554:	str	ip, [sp]
   14558:	mov	r2, r1
   1455c:	mov	r1, r0
   14560:	mov	r0, #0
   14564:	bl	144b0 <__snprintf_chk@plt+0x3144>
   14568:	add	sp, sp, #12
   1456c:	pop	{pc}		; (ldr pc, [sp], #4)
   14570:	push	{lr}		; (str lr, [sp, #-4]!)
   14574:	sub	sp, sp, #12
   14578:	str	r3, [sp]
   1457c:	mov	r3, r2
   14580:	mov	r2, r1
   14584:	mov	r1, r0
   14588:	mov	r0, #0
   1458c:	bl	144b0 <__snprintf_chk@plt+0x3144>
   14590:	add	sp, sp, #12
   14594:	pop	{pc}		; (ldr pc, [sp], #4)
   14598:	ldr	r3, [pc]	; 145a0 <__snprintf_chk@plt+0x3234>
   1459c:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   145a0:	andeq	r7, r2, r8, asr #2
   145a4:	mov	r2, r1
   145a8:	ldr	r3, [pc, #8]	; 145b8 <__snprintf_chk@plt+0x324c>
   145ac:	mov	r1, r0
   145b0:	mov	r0, #0
   145b4:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   145b8:	andeq	r7, r2, r8, asr #2
   145bc:	ldr	r3, [pc, #4]	; 145c8 <__snprintf_chk@plt+0x325c>
   145c0:	mvn	r2, #0
   145c4:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   145c8:	andeq	r7, r2, r8, asr #2
   145cc:	mov	r1, r0
   145d0:	ldr	r3, [pc, #8]	; 145e0 <__snprintf_chk@plt+0x3274>
   145d4:	mvn	r2, #0
   145d8:	mov	r0, #0
   145dc:	b	13e24 <__snprintf_chk@plt+0x2ab8>
   145e0:	andeq	r7, r2, r8, asr #2
   145e4:	push	{r4, r5, r6, r7, lr}
   145e8:	mov	r7, r1
   145ec:	ldrb	r3, [r0]
   145f0:	sub	sp, sp, #12
   145f4:	sub	r3, r3, #48	; 0x30
   145f8:	cmp	r3, #9
   145fc:	bls	14650 <__snprintf_chk@plt+0x32e4>
   14600:	mov	r6, r0
   14604:	ldr	r5, [pc, #324]	; 14750 <__snprintf_chk@plt+0x33e4>
   14608:	mov	r4, #0
   1460c:	b	1461c <__snprintf_chk@plt+0x32b0>
   14610:	add	r4, r4, #1
   14614:	cmp	r4, #35	; 0x23
   14618:	beq	14680 <__snprintf_chk@plt+0x3314>
   1461c:	mov	r0, r5
   14620:	mov	r1, r6
   14624:	bl	11060 <strcmp@plt>
   14628:	add	r5, r5, #12
   1462c:	cmp	r0, #0
   14630:	bne	14610 <__snprintf_chk@plt+0x32a4>
   14634:	ldr	r3, [pc, #280]	; 14754 <__snprintf_chk@plt+0x33e8>
   14638:	add	r4, r4, r4, lsl #1
   1463c:	ldr	r0, [r3, r4, lsl #2]
   14640:	str	r0, [r7]
   14644:	asr	r0, r0, #31
   14648:	add	sp, sp, #12
   1464c:	pop	{r4, r5, r6, r7, pc}
   14650:	mov	r2, #10
   14654:	add	r1, sp, #4
   14658:	bl	1106c <strtol@plt>
   1465c:	ldr	r3, [sp, #4]
   14660:	ldrb	r3, [r3]
   14664:	cmp	r0, #64	; 0x40
   14668:	cmple	r3, #0
   1466c:	beq	14640 <__snprintf_chk@plt+0x32d4>
   14670:	mvn	r3, #0
   14674:	mov	r0, r3
   14678:	str	r3, [r7]
   1467c:	b	14648 <__snprintf_chk@plt+0x32dc>
   14680:	bl	11348 <__libc_current_sigrtmin@plt>
   14684:	mov	r5, r0
   14688:	bl	11234 <__libc_current_sigrtmax@plt>
   1468c:	cmp	r5, #0
   14690:	mov	r4, r0
   14694:	ble	146b0 <__snprintf_chk@plt+0x3344>
   14698:	mov	r2, #5
   1469c:	ldr	r1, [pc, #180]	; 14758 <__snprintf_chk@plt+0x33ec>
   146a0:	mov	r0, r6
   146a4:	bl	11354 <strncmp@plt>
   146a8:	cmp	r0, #0
   146ac:	beq	14718 <__snprintf_chk@plt+0x33ac>
   146b0:	cmp	r4, #0
   146b4:	ble	14670 <__snprintf_chk@plt+0x3304>
   146b8:	mov	r2, #5
   146bc:	ldr	r1, [pc, #152]	; 1475c <__snprintf_chk@plt+0x33f0>
   146c0:	mov	r0, r6
   146c4:	bl	11354 <strncmp@plt>
   146c8:	cmp	r0, #0
   146cc:	bne	14670 <__snprintf_chk@plt+0x3304>
   146d0:	add	r0, r6, #5
   146d4:	mov	r2, #10
   146d8:	add	r1, sp, #4
   146dc:	bl	1106c <strtol@plt>
   146e0:	ldr	r3, [sp, #4]
   146e4:	ldrb	r3, [r3]
   146e8:	cmp	r3, #0
   146ec:	bne	14670 <__snprintf_chk@plt+0x3304>
   146f0:	sub	r5, r5, r4
   146f4:	cmp	r0, r5
   146f8:	movlt	r5, #0
   146fc:	movge	r5, #1
   14700:	cmp	r0, #0
   14704:	movgt	r5, #0
   14708:	cmp	r5, #0
   1470c:	beq	14670 <__snprintf_chk@plt+0x3304>
   14710:	add	r0, r4, r0
   14714:	b	14640 <__snprintf_chk@plt+0x32d4>
   14718:	add	r0, r6, #5
   1471c:	mov	r2, #10
   14720:	add	r1, sp, #4
   14724:	bl	1106c <strtol@plt>
   14728:	ldr	r3, [sp, #4]
   1472c:	ldrb	r3, [r3]
   14730:	cmp	r0, #0
   14734:	cmpge	r3, #0
   14738:	bne	14670 <__snprintf_chk@plt+0x3304>
   1473c:	sub	r4, r4, r5
   14740:	cmp	r0, r4
   14744:	bgt	14670 <__snprintf_chk@plt+0x3304>
   14748:	add	r0, r5, r0
   1474c:	b	14640 <__snprintf_chk@plt+0x32d4>
   14750:	andeq	r7, r2, ip, ror r1
   14754:	andeq	r7, r2, r8, ror r1
   14758:	andeq	r6, r1, r8, ror #20
   1475c:	andeq	r6, r1, r0, ror sl
   14760:	mov	r3, #0
   14764:	push	{r4, r5, r6, lr}
   14768:	mov	r2, r3
   1476c:	sub	sp, sp, #8
   14770:	ldr	lr, [pc, #200]	; 14840 <__snprintf_chk@plt+0x34d4>
   14774:	mov	r4, r0
   14778:	mov	r5, r1
   1477c:	b	1478c <__snprintf_chk@plt+0x3420>
   14780:	add	r2, r2, #1
   14784:	cmp	r2, #35	; 0x23
   14788:	beq	147bc <__snprintf_chk@plt+0x3450>
   1478c:	ldr	ip, [lr, r3]
   14790:	add	r3, r3, #12
   14794:	cmp	ip, r4
   14798:	bne	14780 <__snprintf_chk@plt+0x3414>
   1479c:	add	r2, r2, r2, lsl #1
   147a0:	mov	r0, r5
   147a4:	add	r2, lr, r2, lsl #2
   147a8:	add	r1, r2, #4
   147ac:	bl	11180 <strcpy@plt>
   147b0:	mov	r0, #0
   147b4:	add	sp, sp, #8
   147b8:	pop	{r4, r5, r6, pc}
   147bc:	bl	11348 <__libc_current_sigrtmin@plt>
   147c0:	mov	r6, r0
   147c4:	bl	11234 <__libc_current_sigrtmax@plt>
   147c8:	cmp	r4, r0
   147cc:	movle	r3, #0
   147d0:	movgt	r3, #1
   147d4:	cmp	r4, r6
   147d8:	orrlt	r3, r3, #1
   147dc:	cmp	r3, #0
   147e0:	bne	14838 <__snprintf_chk@plt+0x34cc>
   147e4:	sub	r3, r0, r6
   147e8:	add	r3, r6, r3, asr #1
   147ec:	cmp	r4, r3
   147f0:	movgt	r6, r0
   147f4:	ldrle	r3, [pc, #72]	; 14844 <__snprintf_chk@plt+0x34d8>
   147f8:	ldrgt	r3, [pc, #72]	; 14848 <__snprintf_chk@plt+0x34dc>
   147fc:	ldr	r0, [r3]
   14800:	ldrh	r2, [r3, #4]
   14804:	str	r0, [r5]
   14808:	subs	r0, r4, r6
   1480c:	strh	r2, [r5, #4]
   14810:	beq	147b4 <__snprintf_chk@plt+0x3448>
   14814:	str	r0, [sp]
   14818:	ldr	r3, [pc, #44]	; 1484c <__snprintf_chk@plt+0x34e0>
   1481c:	add	r0, r5, #5
   14820:	mvn	r2, #0
   14824:	mov	r1, #1
   14828:	bl	11258 <__sprintf_chk@plt>
   1482c:	mov	r0, #0
   14830:	add	sp, sp, #8
   14834:	pop	{r4, r5, r6, pc}
   14838:	mvn	r0, #0
   1483c:	b	147b4 <__snprintf_chk@plt+0x3448>
   14840:	andeq	r7, r2, r8, ror r1
   14844:	andeq	r6, r1, r8, ror #20
   14848:	andeq	r6, r1, r0, ror sl
   1484c:	andeq	r6, r1, r8, ror sl
   14850:	push	{r4, r5, r6, lr}
   14854:	sub	sp, sp, #32
   14858:	cmp	r1, #0
   1485c:	mov	r4, r0
   14860:	ldr	r5, [sp, #48]	; 0x30
   14864:	ldr	r6, [sp, #52]	; 0x34
   14868:	beq	14b80 <__snprintf_chk@plt+0x3814>
   1486c:	stm	sp, {r2, r3}
   14870:	mov	r3, r1
   14874:	ldr	r2, [pc, #808]	; 14ba4 <__snprintf_chk@plt+0x3838>
   14878:	mov	r1, #1
   1487c:	bl	112b8 <__fprintf_chk@plt>
   14880:	mov	r2, #5
   14884:	ldr	r1, [pc, #796]	; 14ba8 <__snprintf_chk@plt+0x383c>
   14888:	mov	r0, #0
   1488c:	bl	110f0 <dcgettext@plt>
   14890:	ldr	r3, [pc, #788]	; 14bac <__snprintf_chk@plt+0x3840>
   14894:	ldr	r2, [pc, #788]	; 14bb0 <__snprintf_chk@plt+0x3844>
   14898:	str	r3, [sp]
   1489c:	mov	r1, #1
   148a0:	mov	r3, r0
   148a4:	mov	r0, r4
   148a8:	bl	112b8 <__fprintf_chk@plt>
   148ac:	mov	r1, r4
   148b0:	mov	r0, #10
   148b4:	bl	110e4 <fputc_unlocked@plt>
   148b8:	mov	r2, #5
   148bc:	ldr	r1, [pc, #752]	; 14bb4 <__snprintf_chk@plt+0x3848>
   148c0:	mov	r0, #0
   148c4:	bl	110f0 <dcgettext@plt>
   148c8:	mov	r1, #1
   148cc:	ldr	r3, [pc, #740]	; 14bb8 <__snprintf_chk@plt+0x384c>
   148d0:	mov	r2, r0
   148d4:	mov	r0, r4
   148d8:	bl	112b8 <__fprintf_chk@plt>
   148dc:	mov	r1, r4
   148e0:	mov	r0, #10
   148e4:	bl	110e4 <fputc_unlocked@plt>
   148e8:	cmp	r6, #9
   148ec:	ldrls	pc, [pc, r6, lsl #2]
   148f0:	b	14b98 <__snprintf_chk@plt+0x382c>
   148f4:	andeq	r4, r1, r8, ror r9
   148f8:	andeq	r4, r1, r0, lsl #19
   148fc:	andeq	r4, r1, ip, lsr #19
   14900:	andeq	r4, r1, r0, ror #19
   14904:	andeq	r4, r1, ip, lsl sl
   14908:	andeq	r4, r1, r8, asr sl
   1490c:	muleq	r1, r4, sl
   14910:	ldrdeq	r4, [r1], -r8
   14914:	andeq	r4, r1, r8, lsr #22
   14918:	andeq	r4, r1, ip, lsl r9
   1491c:	ldr	r1, [pc, #664]	; 14bbc <__snprintf_chk@plt+0x3850>
   14920:	mov	r2, #5
   14924:	mov	r0, #0
   14928:	bl	110f0 <dcgettext@plt>
   1492c:	ldr	ip, [r5, #32]
   14930:	ldr	r1, [r5, #28]
   14934:	ldr	r2, [r5, #24]
   14938:	ldr	r3, [r5]
   1493c:	ldr	r6, [r5, #20]
   14940:	str	ip, [sp, #28]
   14944:	ldr	lr, [r5, #16]
   14948:	str	r1, [sp, #24]
   1494c:	ldr	ip, [r5, #12]
   14950:	str	r2, [sp, #20]
   14954:	ldr	r1, [r5, #8]
   14958:	ldr	r2, [r5, #4]
   1495c:	str	r6, [sp, #16]
   14960:	stmib	sp, {r1, ip, lr}
   14964:	mov	r1, #1
   14968:	str	r2, [sp]
   1496c:	mov	r2, r0
   14970:	mov	r0, r4
   14974:	bl	112b8 <__fprintf_chk@plt>
   14978:	add	sp, sp, #32
   1497c:	pop	{r4, r5, r6, pc}
   14980:	mov	r2, #5
   14984:	ldr	r1, [pc, #564]	; 14bc0 <__snprintf_chk@plt+0x3854>
   14988:	mov	r0, #0
   1498c:	bl	110f0 <dcgettext@plt>
   14990:	ldr	r3, [r5]
   14994:	mov	r1, #1
   14998:	mov	r2, r0
   1499c:	mov	r0, r4
   149a0:	add	sp, sp, #32
   149a4:	pop	{r4, r5, r6, lr}
   149a8:	b	112b8 <__fprintf_chk@plt>
   149ac:	mov	r2, #5
   149b0:	ldr	r1, [pc, #524]	; 14bc4 <__snprintf_chk@plt+0x3858>
   149b4:	mov	r0, #0
   149b8:	bl	110f0 <dcgettext@plt>
   149bc:	ldr	r2, [r5, #4]
   149c0:	ldr	r3, [r5]
   149c4:	mov	r1, #1
   149c8:	str	r2, [sp, #48]	; 0x30
   149cc:	mov	r2, r0
   149d0:	mov	r0, r4
   149d4:	add	sp, sp, #32
   149d8:	pop	{r4, r5, r6, lr}
   149dc:	b	112b8 <__fprintf_chk@plt>
   149e0:	mov	r2, #5
   149e4:	ldr	r1, [pc, #476]	; 14bc8 <__snprintf_chk@plt+0x385c>
   149e8:	mov	r0, #0
   149ec:	bl	110f0 <dcgettext@plt>
   149f0:	ldr	r1, [r5, #8]
   149f4:	ldr	r2, [r5, #4]
   149f8:	ldr	r3, [r5]
   149fc:	str	r1, [sp, #52]	; 0x34
   14a00:	str	r2, [sp, #48]	; 0x30
   14a04:	mov	r1, #1
   14a08:	mov	r2, r0
   14a0c:	mov	r0, r4
   14a10:	add	sp, sp, #32
   14a14:	pop	{r4, r5, r6, lr}
   14a18:	b	112b8 <__fprintf_chk@plt>
   14a1c:	mov	r2, #5
   14a20:	ldr	r1, [pc, #420]	; 14bcc <__snprintf_chk@plt+0x3860>
   14a24:	mov	r0, #0
   14a28:	bl	110f0 <dcgettext@plt>
   14a2c:	ldr	r1, [r5, #8]
   14a30:	ldr	ip, [r5, #12]
   14a34:	ldr	r2, [r5, #4]
   14a38:	ldr	r3, [r5]
   14a3c:	stmib	sp, {r1, ip}
   14a40:	str	r2, [sp]
   14a44:	mov	r1, #1
   14a48:	mov	r2, r0
   14a4c:	mov	r0, r4
   14a50:	bl	112b8 <__fprintf_chk@plt>
   14a54:	b	14978 <__snprintf_chk@plt+0x360c>
   14a58:	mov	r2, #5
   14a5c:	ldr	r1, [pc, #364]	; 14bd0 <__snprintf_chk@plt+0x3864>
   14a60:	mov	r0, #0
   14a64:	bl	110f0 <dcgettext@plt>
   14a68:	add	r1, r5, #8
   14a6c:	ldr	r2, [r5, #4]
   14a70:	ldm	r1, {r1, ip, lr}
   14a74:	ldr	r3, [r5]
   14a78:	str	r2, [sp]
   14a7c:	stmib	sp, {r1, ip, lr}
   14a80:	mov	r1, #1
   14a84:	mov	r2, r0
   14a88:	mov	r0, r4
   14a8c:	bl	112b8 <__fprintf_chk@plt>
   14a90:	b	14978 <__snprintf_chk@plt+0x360c>
   14a94:	mov	r2, #5
   14a98:	ldr	r1, [pc, #308]	; 14bd4 <__snprintf_chk@plt+0x3868>
   14a9c:	mov	r0, #0
   14aa0:	bl	110f0 <dcgettext@plt>
   14aa4:	add	r1, r5, #8
   14aa8:	ldr	r2, [r5, #4]
   14aac:	ldm	r1, {r1, ip, lr}
   14ab0:	ldr	r6, [r5, #20]
   14ab4:	ldr	r3, [r5]
   14ab8:	stmib	sp, {r1, ip, lr}
   14abc:	mov	r1, #1
   14ac0:	str	r2, [sp]
   14ac4:	str	r6, [sp, #16]
   14ac8:	mov	r2, r0
   14acc:	mov	r0, r4
   14ad0:	bl	112b8 <__fprintf_chk@plt>
   14ad4:	b	14978 <__snprintf_chk@plt+0x360c>
   14ad8:	mov	r2, #5
   14adc:	ldr	r1, [pc, #244]	; 14bd8 <__snprintf_chk@plt+0x386c>
   14ae0:	mov	r0, #0
   14ae4:	bl	110f0 <dcgettext@plt>
   14ae8:	ldr	r2, [r5, #24]
   14aec:	ldr	r3, [r5]
   14af0:	ldr	r6, [r5, #20]
   14af4:	ldr	lr, [r5, #16]
   14af8:	ldr	ip, [r5, #12]
   14afc:	str	r2, [sp, #20]
   14b00:	ldr	r1, [r5, #8]
   14b04:	ldr	r2, [r5, #4]
   14b08:	str	r6, [sp, #16]
   14b0c:	stmib	sp, {r1, ip, lr}
   14b10:	mov	r1, #1
   14b14:	str	r2, [sp]
   14b18:	mov	r2, r0
   14b1c:	mov	r0, r4
   14b20:	bl	112b8 <__fprintf_chk@plt>
   14b24:	b	14978 <__snprintf_chk@plt+0x360c>
   14b28:	mov	r2, #5
   14b2c:	ldr	r1, [pc, #168]	; 14bdc <__snprintf_chk@plt+0x3870>
   14b30:	mov	r0, #0
   14b34:	bl	110f0 <dcgettext@plt>
   14b38:	ldr	r1, [r5, #28]
   14b3c:	ldr	r2, [r5, #24]
   14b40:	ldr	r3, [r5]
   14b44:	ldr	r6, [r5, #20]
   14b48:	ldr	lr, [r5, #16]
   14b4c:	str	r1, [sp, #24]
   14b50:	ldr	ip, [r5, #12]
   14b54:	str	r2, [sp, #20]
   14b58:	ldr	r1, [r5, #8]
   14b5c:	ldr	r2, [r5, #4]
   14b60:	str	r6, [sp, #16]
   14b64:	stmib	sp, {r1, ip, lr}
   14b68:	mov	r1, #1
   14b6c:	str	r2, [sp]
   14b70:	mov	r2, r0
   14b74:	mov	r0, r4
   14b78:	bl	112b8 <__fprintf_chk@plt>
   14b7c:	b	14978 <__snprintf_chk@plt+0x360c>
   14b80:	str	r3, [sp]
   14b84:	mov	r1, #1
   14b88:	mov	r3, r2
   14b8c:	ldr	r2, [pc, #76]	; 14be0 <__snprintf_chk@plt+0x3874>
   14b90:	bl	112b8 <__fprintf_chk@plt>
   14b94:	b	14880 <__snprintf_chk@plt+0x3514>
   14b98:	mov	r2, #5
   14b9c:	ldr	r1, [pc, #64]	; 14be4 <__snprintf_chk@plt+0x3878>
   14ba0:	b	14924 <__snprintf_chk@plt+0x35b8>
   14ba4:	andeq	r6, r1, ip, ror sl
   14ba8:	muleq	r1, r0, sl
   14bac:	andeq	r0, r0, r6, ror #15
   14bb0:	andeq	r6, r1, r8, ror #26
   14bb4:	muleq	r1, r4, sl
   14bb8:	andeq	r6, r1, r0, asr #22
   14bbc:	andeq	r6, r1, r0, ror ip
   14bc0:	andeq	r6, r1, r4, ror #22
   14bc4:	andeq	r6, r1, r4, ror fp
   14bc8:	andeq	r6, r1, ip, lsl #23
   14bcc:	andeq	r6, r1, r8, lsr #23
   14bd0:	andeq	r6, r1, r8, asr #23
   14bd4:	andeq	r6, r1, ip, ror #23
   14bd8:	andeq	r6, r1, r4, lsl ip
   14bdc:	andeq	r6, r1, r0, asr #24
   14be0:	andeq	r6, r1, r8, lsl #21
   14be4:	andeq	r6, r1, r4, lsr #25
   14be8:	push	{r4, r5, lr}
   14bec:	sub	sp, sp, #12
   14bf0:	ldr	r5, [sp, #24]
   14bf4:	ldr	ip, [r5]
   14bf8:	cmp	ip, #0
   14bfc:	beq	14c18 <__snprintf_chk@plt+0x38ac>
   14c00:	mov	lr, r5
   14c04:	mov	ip, #0
   14c08:	ldr	r4, [lr, #4]!
   14c0c:	add	ip, ip, #1
   14c10:	cmp	r4, #0
   14c14:	bne	14c08 <__snprintf_chk@plt+0x389c>
   14c18:	stm	sp, {r5, ip}
   14c1c:	bl	14850 <__snprintf_chk@plt+0x34e4>
   14c20:	add	sp, sp, #12
   14c24:	pop	{r4, r5, pc}
   14c28:	push	{r4, r5, lr}
   14c2c:	sub	sp, sp, #52	; 0x34
   14c30:	add	r5, sp, #4
   14c34:	ldr	r4, [sp, #64]	; 0x40
   14c38:	mov	ip, #0
   14c3c:	sub	r4, r4, #4
   14c40:	ldr	lr, [r4, #4]!
   14c44:	cmp	lr, #0
   14c48:	str	lr, [r5, #4]!
   14c4c:	beq	14c5c <__snprintf_chk@plt+0x38f0>
   14c50:	add	ip, ip, #1
   14c54:	cmp	ip, #10
   14c58:	bne	14c40 <__snprintf_chk@plt+0x38d4>
   14c5c:	add	lr, sp, #8
   14c60:	str	ip, [sp, #4]
   14c64:	str	lr, [sp]
   14c68:	bl	14850 <__snprintf_chk@plt+0x34e4>
   14c6c:	add	sp, sp, #52	; 0x34
   14c70:	pop	{r4, r5, pc}
   14c74:	push	{r3}		; (str r3, [sp, #-4]!)
   14c78:	push	{r4, lr}
   14c7c:	sub	sp, sp, #60	; 0x3c
   14c80:	add	lr, sp, #56	; 0x38
   14c84:	add	r3, sp, #72	; 0x48
   14c88:	str	r3, [lr, #-44]!	; 0xffffffd4
   14c8c:	add	r4, sp, #68	; 0x44
   14c90:	mov	r3, #0
   14c94:	ldr	ip, [r4, #4]!
   14c98:	cmp	ip, #0
   14c9c:	str	ip, [lr, #4]!
   14ca0:	beq	14cb0 <__snprintf_chk@plt+0x3944>
   14ca4:	add	r3, r3, #1
   14ca8:	cmp	r3, #10
   14cac:	bne	14c94 <__snprintf_chk@plt+0x3928>
   14cb0:	add	ip, sp, #16
   14cb4:	str	r3, [sp, #4]
   14cb8:	str	ip, [sp]
   14cbc:	ldr	r3, [sp, #68]	; 0x44
   14cc0:	bl	14850 <__snprintf_chk@plt+0x34e4>
   14cc4:	add	sp, sp, #60	; 0x3c
   14cc8:	pop	{r4, lr}
   14ccc:	add	sp, sp, #4
   14cd0:	bx	lr
   14cd4:	ldr	r3, [pc, #116]	; 14d50 <__snprintf_chk@plt+0x39e4>
   14cd8:	push	{r4, lr}
   14cdc:	mov	r0, #10
   14ce0:	ldr	r1, [r3]
   14ce4:	bl	110e4 <fputc_unlocked@plt>
   14ce8:	mov	r2, #5
   14cec:	ldr	r1, [pc, #96]	; 14d54 <__snprintf_chk@plt+0x39e8>
   14cf0:	mov	r0, #0
   14cf4:	bl	110f0 <dcgettext@plt>
   14cf8:	ldr	r2, [pc, #88]	; 14d58 <__snprintf_chk@plt+0x39ec>
   14cfc:	mov	r1, r0
   14d00:	mov	r0, #1
   14d04:	bl	11288 <__printf_chk@plt>
   14d08:	mov	r2, #5
   14d0c:	ldr	r1, [pc, #72]	; 14d5c <__snprintf_chk@plt+0x39f0>
   14d10:	mov	r0, #0
   14d14:	bl	110f0 <dcgettext@plt>
   14d18:	ldr	r3, [pc, #64]	; 14d60 <__snprintf_chk@plt+0x39f4>
   14d1c:	ldr	r2, [pc, #64]	; 14d64 <__snprintf_chk@plt+0x39f8>
   14d20:	mov	r1, r0
   14d24:	mov	r0, #1
   14d28:	bl	11288 <__printf_chk@plt>
   14d2c:	mov	r2, #5
   14d30:	ldr	r1, [pc, #48]	; 14d68 <__snprintf_chk@plt+0x39fc>
   14d34:	mov	r0, #0
   14d38:	bl	110f0 <dcgettext@plt>
   14d3c:	ldr	r2, [pc, #40]	; 14d6c <__snprintf_chk@plt+0x3a00>
   14d40:	pop	{r4, lr}
   14d44:	mov	r1, r0
   14d48:	mov	r0, #1
   14d4c:	b	11288 <__printf_chk@plt>
   14d50:	andeq	r7, r2, r4, lsr r3
   14d54:	andeq	r6, r1, r0, ror #25
   14d58:	strdeq	r6, [r1], -r4
   14d5c:	andeq	r6, r1, ip, lsl #26
   14d60:	andeq	r6, r1, ip, ror #12
   14d64:	muleq	r1, r4, r6
   14d68:	andeq	r6, r1, r0, lsr #26
   14d6c:	andeq	r6, r1, r8, asr #26
   14d70:	push	{r4, lr}
   14d74:	bl	153e8 <__snprintf_chk@plt+0x407c>
   14d78:	cmp	r0, #0
   14d7c:	popne	{r4, pc}
   14d80:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14d84:	push	{r4, lr}
   14d88:	bl	153e8 <__snprintf_chk@plt+0x407c>
   14d8c:	cmp	r0, #0
   14d90:	popne	{r4, pc}
   14d94:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14d98:	push	{r4, lr}
   14d9c:	bl	153e8 <__snprintf_chk@plt+0x407c>
   14da0:	cmp	r0, #0
   14da4:	popne	{r4, pc}
   14da8:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14dac:	push	{r4, r5, r6, lr}
   14db0:	mov	r5, r0
   14db4:	mov	r4, r1
   14db8:	bl	15414 <__snprintf_chk@plt+0x40a8>
   14dbc:	cmp	r0, #0
   14dc0:	popne	{r4, r5, r6, pc}
   14dc4:	adds	r4, r4, #0
   14dc8:	movne	r4, #1
   14dcc:	cmp	r5, #0
   14dd0:	orreq	r4, r4, #1
   14dd4:	cmp	r4, #0
   14dd8:	popeq	{r4, r5, r6, pc}
   14ddc:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14de0:	push	{r4, lr}
   14de4:	cmp	r1, #0
   14de8:	orreq	r1, r1, #1
   14dec:	bl	15414 <__snprintf_chk@plt+0x40a8>
   14df0:	cmp	r0, #0
   14df4:	popne	{r4, pc}
   14df8:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14dfc:	push	{r4, r5, r6, lr}
   14e00:	mov	r6, r0
   14e04:	mov	r5, r1
   14e08:	mov	r4, r2
   14e0c:	bl	15790 <__snprintf_chk@plt+0x4424>
   14e10:	cmp	r0, #0
   14e14:	popne	{r4, r5, r6, pc}
   14e18:	cmp	r6, #0
   14e1c:	beq	14e2c <__snprintf_chk@plt+0x3ac0>
   14e20:	cmp	r5, #0
   14e24:	cmpne	r4, #0
   14e28:	popeq	{r4, r5, r6, pc}
   14e2c:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14e30:	b	14dfc <__snprintf_chk@plt+0x3a90>
   14e34:	cmp	r2, #0
   14e38:	cmpne	r1, #0
   14e3c:	moveq	r2, #1
   14e40:	moveq	r1, r2
   14e44:	push	{r4, lr}
   14e48:	bl	15790 <__snprintf_chk@plt+0x4424>
   14e4c:	cmp	r0, #0
   14e50:	popne	{r4, pc}
   14e54:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14e58:	mov	r2, r1
   14e5c:	mov	r1, r0
   14e60:	mov	r0, #0
   14e64:	b	14dfc <__snprintf_chk@plt+0x3a90>
   14e68:	mov	r2, r1
   14e6c:	mov	r1, r0
   14e70:	mov	r0, #0
   14e74:	b	14e34 <__snprintf_chk@plt+0x3ac8>
   14e78:	push	{r4, r5, r6, lr}
   14e7c:	subs	r6, r0, #0
   14e80:	sub	sp, sp, #8
   14e84:	mov	r5, r1
   14e88:	ldr	r4, [r1]
   14e8c:	beq	14ec8 <__snprintf_chk@plt+0x3b5c>
   14e90:	lsr	r1, r4, #1
   14e94:	add	r3, r1, #1
   14e98:	mvn	r3, r3
   14e9c:	cmp	r4, r3
   14ea0:	bhi	14ec4 <__snprintf_chk@plt+0x3b58>
   14ea4:	add	r4, r4, #1
   14ea8:	add	r4, r4, r1
   14eac:	mov	r0, r6
   14eb0:	mov	r1, r4
   14eb4:	bl	14dfc <__snprintf_chk@plt+0x3a90>
   14eb8:	str	r4, [r5]
   14ebc:	add	sp, sp, #8
   14ec0:	pop	{r4, r5, r6, pc}
   14ec4:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   14ec8:	cmp	r4, #0
   14ecc:	bne	14eac <__snprintf_chk@plt+0x3b40>
   14ed0:	mov	r1, r2
   14ed4:	mov	r0, #64	; 0x40
   14ed8:	str	r2, [sp, #4]
   14edc:	bl	158d0 <__snprintf_chk@plt+0x4564>
   14ee0:	ldr	r2, [sp, #4]
   14ee4:	cmp	r0, #0
   14ee8:	movne	r4, r0
   14eec:	addeq	r4, r0, #1
   14ef0:	b	14eac <__snprintf_chk@plt+0x3b40>
   14ef4:	mov	r2, #1
   14ef8:	b	14e78 <__snprintf_chk@plt+0x3b0c>
   14efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f00:	sub	sp, sp, #12
   14f04:	ldr	r6, [r1]
   14f08:	mov	sl, r1
   14f0c:	mov	r9, r0
   14f10:	asrs	r4, r6, #1
   14f14:	mov	r5, r2
   14f18:	mov	fp, r3
   14f1c:	ldr	r7, [sp, #48]	; 0x30
   14f20:	bmi	1508c <__snprintf_chk@plt+0x3d20>
   14f24:	mvn	r3, #-2147483648	; 0x80000000
   14f28:	sub	r3, r3, r4
   14f2c:	cmp	r6, r3
   14f30:	movle	r3, #0
   14f34:	movgt	r3, #1
   14f38:	mvn	r8, fp
   14f3c:	cmp	r3, #0
   14f40:	addeq	r4, r4, r6
   14f44:	mvnne	r4, #-2147483648	; 0x80000000
   14f48:	lsr	r8, r8, #31
   14f4c:	cmp	fp, r4
   14f50:	movge	r3, #0
   14f54:	andlt	r3, r8, #1
   14f58:	cmp	r3, #0
   14f5c:	beq	15044 <__snprintf_chk@plt+0x3cd8>
   14f60:	cmp	r7, #0
   14f64:	blt	15114 <__snprintf_chk@plt+0x3da8>
   14f68:	bne	1510c <__snprintf_chk@plt+0x3da0>
   14f6c:	mov	r2, #64	; 0x40
   14f70:	mov	r1, r7
   14f74:	mov	r0, r2
   14f78:	str	r2, [sp, #4]
   14f7c:	bl	15adc <__snprintf_chk@plt+0x4770>
   14f80:	ldr	r2, [sp, #4]
   14f84:	mov	r1, r7
   14f88:	mov	r4, r0
   14f8c:	mov	r0, r2
   14f90:	bl	15cfc <__snprintf_chk@plt+0x4990>
   14f94:	ldr	r2, [sp, #4]
   14f98:	sub	r1, r2, r1
   14f9c:	cmp	r9, #0
   14fa0:	sub	r3, r4, r6
   14fa4:	streq	r9, [sl]
   14fa8:	cmp	r3, r5
   14fac:	bge	15030 <__snprintf_chk@plt+0x3cc4>
   14fb0:	cmp	r5, #0
   14fb4:	blt	150a0 <__snprintf_chk@plt+0x3d34>
   14fb8:	cmp	r6, #0
   14fbc:	blt	14fdc <__snprintf_chk@plt+0x3c70>
   14fc0:	mvn	r3, #-2147483648	; 0x80000000
   14fc4:	sub	r3, r3, r5
   14fc8:	cmp	r6, r3
   14fcc:	movle	r3, #0
   14fd0:	movgt	r3, #1
   14fd4:	cmp	r3, #0
   14fd8:	bne	1519c <__snprintf_chk@plt+0x3e30>
   14fdc:	add	r5, r6, r5
   14fe0:	cmp	fp, r5
   14fe4:	movge	r8, #0
   14fe8:	andlt	r8, r8, #1
   14fec:	cmp	r8, #0
   14ff0:	mov	r4, r5
   14ff4:	bne	1519c <__snprintf_chk@plt+0x3e30>
   14ff8:	cmp	r7, #0
   14ffc:	blt	150b4 <__snprintf_chk@plt+0x3d48>
   15000:	beq	1502c <__snprintf_chk@plt+0x3cc0>
   15004:	cmp	r5, #0
   15008:	blt	1515c <__snprintf_chk@plt+0x3df0>
   1500c:	mov	r1, r7
   15010:	mvn	r0, #-2147483648	; 0x80000000
   15014:	bl	15adc <__snprintf_chk@plt+0x4770>
   15018:	cmp	r5, r0
   1501c:	movle	r0, #0
   15020:	movgt	r0, #1
   15024:	cmp	r0, #0
   15028:	bne	1519c <__snprintf_chk@plt+0x3e30>
   1502c:	mul	r1, r5, r7
   15030:	mov	r0, r9
   15034:	bl	14dac <__snprintf_chk@plt+0x3a40>
   15038:	str	r4, [sl]
   1503c:	add	sp, sp, #12
   15040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15044:	cmp	r7, #0
   15048:	blt	150e0 <__snprintf_chk@plt+0x3d74>
   1504c:	beq	14f6c <__snprintf_chk@plt+0x3c00>
   15050:	cmp	r4, #0
   15054:	blt	1511c <__snprintf_chk@plt+0x3db0>
   15058:	mov	r1, r7
   1505c:	mvn	r0, #-2147483648	; 0x80000000
   15060:	bl	15adc <__snprintf_chk@plt+0x4770>
   15064:	cmp	r0, r4
   15068:	movge	r0, #0
   1506c:	movlt	r0, #1
   15070:	cmp	r0, #0
   15074:	mvnne	r2, #-2147483648	; 0x80000000
   15078:	bne	14f70 <__snprintf_chk@plt+0x3c04>
   1507c:	mul	r1, r7, r4
   15080:	cmp	r1, #63	; 0x3f
   15084:	bgt	14f9c <__snprintf_chk@plt+0x3c30>
   15088:	b	14f6c <__snprintf_chk@plt+0x3c00>
   1508c:	rsb	r3, r4, #-2147483648	; 0x80000000
   15090:	cmp	r6, r3
   15094:	movge	r3, #0
   15098:	movlt	r3, #1
   1509c:	b	14f38 <__snprintf_chk@plt+0x3bcc>
   150a0:	rsb	r3, r5, #-2147483648	; 0x80000000
   150a4:	cmp	r6, r3
   150a8:	movge	r3, #0
   150ac:	movlt	r3, #1
   150b0:	b	14fd4 <__snprintf_chk@plt+0x3c68>
   150b4:	cmp	r5, #0
   150b8:	blt	15140 <__snprintf_chk@plt+0x3dd4>
   150bc:	cmn	r7, #1
   150c0:	beq	1502c <__snprintf_chk@plt+0x3cc0>
   150c4:	mov	r1, r7
   150c8:	mov	r0, #-2147483648	; 0x80000000
   150cc:	bl	15adc <__snprintf_chk@plt+0x4770>
   150d0:	cmp	r5, r0
   150d4:	movle	r0, #0
   150d8:	movgt	r0, #1
   150dc:	b	15024 <__snprintf_chk@plt+0x3cb8>
   150e0:	cmp	r4, #0
   150e4:	blt	15180 <__snprintf_chk@plt+0x3e14>
   150e8:	cmn	r7, #1
   150ec:	beq	1507c <__snprintf_chk@plt+0x3d10>
   150f0:	mov	r1, r7
   150f4:	mov	r0, #-2147483648	; 0x80000000
   150f8:	bl	15adc <__snprintf_chk@plt+0x4770>
   150fc:	cmp	r0, r4
   15100:	movge	r0, #0
   15104:	movlt	r0, #1
   15108:	b	15070 <__snprintf_chk@plt+0x3d04>
   1510c:	mov	r4, fp
   15110:	b	15058 <__snprintf_chk@plt+0x3cec>
   15114:	mov	r4, fp
   15118:	b	150e8 <__snprintf_chk@plt+0x3d7c>
   1511c:	cmn	r4, #1
   15120:	beq	1507c <__snprintf_chk@plt+0x3d10>
   15124:	mov	r1, r4
   15128:	mov	r0, #-2147483648	; 0x80000000
   1512c:	bl	15adc <__snprintf_chk@plt+0x4770>
   15130:	cmp	r7, r0
   15134:	movle	r0, #0
   15138:	movgt	r0, #1
   1513c:	b	15070 <__snprintf_chk@plt+0x3d04>
   15140:	mov	r1, r7
   15144:	mvn	r0, #-2147483648	; 0x80000000
   15148:	bl	15adc <__snprintf_chk@plt+0x4770>
   1514c:	cmp	r5, r0
   15150:	movge	r0, #0
   15154:	movlt	r0, #1
   15158:	b	15024 <__snprintf_chk@plt+0x3cb8>
   1515c:	cmn	r5, #1
   15160:	beq	1502c <__snprintf_chk@plt+0x3cc0>
   15164:	mov	r1, r5
   15168:	mov	r0, #-2147483648	; 0x80000000
   1516c:	bl	15adc <__snprintf_chk@plt+0x4770>
   15170:	cmp	r7, r0
   15174:	movle	r0, #0
   15178:	movgt	r0, #1
   1517c:	b	15024 <__snprintf_chk@plt+0x3cb8>
   15180:	mov	r1, r7
   15184:	mvn	r0, #-2147483648	; 0x80000000
   15188:	bl	15adc <__snprintf_chk@plt+0x4770>
   1518c:	cmp	r0, r4
   15190:	movle	r0, #0
   15194:	movgt	r0, #1
   15198:	b	15070 <__snprintf_chk@plt+0x3d04>
   1519c:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   151a0:	push	{r4, lr}
   151a4:	mov	r1, #1
   151a8:	bl	153a0 <__snprintf_chk@plt+0x4034>
   151ac:	cmp	r0, #0
   151b0:	popne	{r4, pc}
   151b4:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   151b8:	push	{r4, lr}
   151bc:	mov	r1, #1
   151c0:	bl	153a0 <__snprintf_chk@plt+0x4034>
   151c4:	cmp	r0, #0
   151c8:	popne	{r4, pc}
   151cc:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   151d0:	push	{r4, lr}
   151d4:	bl	153a0 <__snprintf_chk@plt+0x4034>
   151d8:	cmp	r0, #0
   151dc:	popne	{r4, pc}
   151e0:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   151e4:	push	{r4, lr}
   151e8:	bl	153a0 <__snprintf_chk@plt+0x4034>
   151ec:	cmp	r0, #0
   151f0:	popne	{r4, pc}
   151f4:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   151f8:	push	{r4, r5, r6, lr}
   151fc:	mov	r6, r0
   15200:	mov	r0, r1
   15204:	mov	r4, r1
   15208:	bl	153e8 <__snprintf_chk@plt+0x407c>
   1520c:	subs	r5, r0, #0
   15210:	beq	15228 <__snprintf_chk@plt+0x3ebc>
   15214:	mov	r2, r4
   15218:	mov	r1, r6
   1521c:	bl	110a8 <memcpy@plt>
   15220:	mov	r0, r5
   15224:	pop	{r4, r5, r6, pc}
   15228:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   1522c:	push	{r4, r5, r6, lr}
   15230:	mov	r6, r0
   15234:	mov	r0, r1
   15238:	mov	r4, r1
   1523c:	bl	153e8 <__snprintf_chk@plt+0x407c>
   15240:	subs	r5, r0, #0
   15244:	beq	1525c <__snprintf_chk@plt+0x3ef0>
   15248:	mov	r2, r4
   1524c:	mov	r1, r6
   15250:	bl	110a8 <memcpy@plt>
   15254:	mov	r0, r5
   15258:	pop	{r4, r5, r6, pc}
   1525c:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   15260:	push	{r4, r5, r6, lr}
   15264:	mov	r6, r0
   15268:	add	r0, r1, #1
   1526c:	mov	r4, r1
   15270:	bl	153e8 <__snprintf_chk@plt+0x407c>
   15274:	subs	r5, r0, #0
   15278:	beq	15298 <__snprintf_chk@plt+0x3f2c>
   1527c:	mov	r3, #0
   15280:	mov	r1, r6
   15284:	strb	r3, [r5, r4]
   15288:	mov	r2, r4
   1528c:	bl	110a8 <memcpy@plt>
   15290:	mov	r0, r5
   15294:	pop	{r4, r5, r6, pc}
   15298:	bl	152b8 <__snprintf_chk@plt+0x3f4c>
   1529c:	push	{r4, lr}
   152a0:	mov	r4, r0
   152a4:	bl	11228 <strlen@plt>
   152a8:	add	r1, r0, #1
   152ac:	mov	r0, r4
   152b0:	pop	{r4, lr}
   152b4:	b	151f8 <__snprintf_chk@plt+0x3e8c>
   152b8:	ldr	r3, [pc, #44]	; 152ec <__snprintf_chk@plt+0x3f80>
   152bc:	push	{r4, lr}
   152c0:	mov	r2, #5
   152c4:	ldr	r1, [pc, #36]	; 152f0 <__snprintf_chk@plt+0x3f84>
   152c8:	mov	r0, #0
   152cc:	ldr	r4, [r3]
   152d0:	bl	110f0 <dcgettext@plt>
   152d4:	ldr	r2, [pc, #24]	; 152f4 <__snprintf_chk@plt+0x3f88>
   152d8:	mov	r1, #0
   152dc:	mov	r3, r0
   152e0:	mov	r0, r4
   152e4:	bl	111a4 <error@plt>
   152e8:	bl	11360 <abort@plt>
   152ec:	andeq	r7, r2, r4, lsr r1
   152f0:	muleq	r1, r8, sp
   152f4:	andeq	r6, r1, r8, asr #18
   152f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   152fc:	sub	sp, sp, #12
   15300:	mov	r6, r0
   15304:	mov	r9, r3
   15308:	mov	r5, r1
   1530c:	mov	r8, r2
   15310:	bl	1124c <__errno_location@plt>
   15314:	mov	r4, #0
   15318:	add	r1, sp, #4
   1531c:	str	r4, [r0]
   15320:	mov	r7, r0
   15324:	mov	r0, r6
   15328:	blx	r9
   1532c:	ldr	r3, [sp, #4]
   15330:	cmp	r6, r3
   15334:	beq	15374 <__snprintf_chk@plt+0x4008>
   15338:	cmp	r5, r4
   1533c:	beq	1537c <__snprintf_chk@plt+0x4010>
   15340:	vcmp.f64	d0, #0.0
   15344:	vmrs	APSR_nzcv, fpscr
   15348:	moveq	r0, #1
   1534c:	beq	15364 <__snprintf_chk@plt+0x3ff8>
   15350:	ldr	r0, [r7]
   15354:	subs	r0, r0, #34	; 0x22
   15358:	movne	r0, #1
   1535c:	cmp	r5, #0
   15360:	beq	15368 <__snprintf_chk@plt+0x3ffc>
   15364:	str	r3, [r5]
   15368:	vstr	d0, [r8]
   1536c:	add	sp, sp, #12
   15370:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15374:	mov	r0, r4
   15378:	b	1535c <__snprintf_chk@plt+0x3ff0>
   1537c:	ldrb	r2, [r3]
   15380:	cmp	r2, r4
   15384:	movne	r0, r5
   15388:	bne	15368 <__snprintf_chk@plt+0x3ffc>
   1538c:	vcmp.f64	d0, #0.0
   15390:	vmrs	APSR_nzcv, fpscr
   15394:	bne	15350 <__snprintf_chk@plt+0x3fe4>
   15398:	mov	r0, #1
   1539c:	b	15368 <__snprintf_chk@plt+0x3ffc>
   153a0:	cmp	r1, #0
   153a4:	cmpne	r0, #0
   153a8:	moveq	r1, #1
   153ac:	moveq	r0, r1
   153b0:	umull	r2, r3, r0, r1
   153b4:	adds	r3, r3, #0
   153b8:	movne	r3, #1
   153bc:	cmp	r2, #0
   153c0:	blt	153d0 <__snprintf_chk@plt+0x4064>
   153c4:	cmp	r3, #0
   153c8:	bne	153d0 <__snprintf_chk@plt+0x4064>
   153cc:	b	1103c <calloc@plt>
   153d0:	push	{r4, lr}
   153d4:	bl	1124c <__errno_location@plt>
   153d8:	mov	r3, #12
   153dc:	str	r3, [r0]
   153e0:	mov	r0, #0
   153e4:	pop	{r4, pc}
   153e8:	cmp	r0, #0
   153ec:	moveq	r0, #1
   153f0:	cmp	r0, #0
   153f4:	blt	153fc <__snprintf_chk@plt+0x4090>
   153f8:	b	111bc <malloc@plt>
   153fc:	push	{r4, lr}
   15400:	bl	1124c <__errno_location@plt>
   15404:	mov	r3, #12
   15408:	str	r3, [r0]
   1540c:	mov	r0, #0
   15410:	pop	{r4, pc}
   15414:	cmp	r0, #0
   15418:	beq	1543c <__snprintf_chk@plt+0x40d0>
   1541c:	cmp	r1, #0
   15420:	push	{lr}		; (str lr, [sp, #-4]!)
   15424:	sub	sp, sp, #12
   15428:	beq	15444 <__snprintf_chk@plt+0x40d8>
   1542c:	blt	1545c <__snprintf_chk@plt+0x40f0>
   15430:	add	sp, sp, #12
   15434:	pop	{lr}		; (ldr lr, [sp], #4)
   15438:	b	11108 <realloc@plt>
   1543c:	mov	r0, r1
   15440:	b	153e8 <__snprintf_chk@plt+0x407c>
   15444:	str	r1, [sp, #4]
   15448:	bl	126b4 <__snprintf_chk@plt+0x1348>
   1544c:	ldr	r3, [sp, #4]
   15450:	mov	r0, r3
   15454:	add	sp, sp, #12
   15458:	pop	{pc}		; (ldr pc, [sp], #4)
   1545c:	bl	1124c <__errno_location@plt>
   15460:	mov	r2, #12
   15464:	mov	r3, #0
   15468:	str	r2, [r0]
   1546c:	b	15450 <__snprintf_chk@plt+0x40e4>
   15470:	push	{r4, r5, r6, lr}
   15474:	mov	r6, r0
   15478:	ldr	r4, [pc, #96]	; 154e0 <__snprintf_chk@plt+0x4174>
   1547c:	mov	r5, r1
   15480:	ldr	r2, [r4]
   15484:	cmp	r2, #0
   15488:	beq	154bc <__snprintf_chk@plt+0x4150>
   1548c:	ldr	r2, [r4]
   15490:	cmp	r2, #0
   15494:	beq	154a8 <__snprintf_chk@plt+0x413c>
   15498:	mov	r1, r5
   1549c:	mov	r0, r6
   154a0:	pop	{r4, r5, r6, lr}
   154a4:	b	112dc <strtod_l@plt>
   154a8:	cmp	r5, #0
   154ac:	beq	154d0 <__snprintf_chk@plt+0x4164>
   154b0:	str	r6, [r5]
   154b4:	vldr	d0, [pc, #28]	; 154d8 <__snprintf_chk@plt+0x416c>
   154b8:	pop	{r4, r5, r6, pc}
   154bc:	ldr	r1, [pc, #32]	; 154e4 <__snprintf_chk@plt+0x4178>
   154c0:	ldr	r0, [pc, #32]	; 154e8 <__snprintf_chk@plt+0x417c>
   154c4:	bl	11324 <newlocale@plt>
   154c8:	str	r0, [r4]
   154cc:	b	1548c <__snprintf_chk@plt+0x4120>
   154d0:	vldr	d0, [pc]	; 154d8 <__snprintf_chk@plt+0x416c>
   154d4:	pop	{r4, r5, r6, pc}
	...
   154e0:	muleq	r2, r8, r4
   154e4:	andeq	r6, r1, ip, lsr #27
   154e8:			; <UNDEFINED> instruction: 0x00001fbf
   154ec:	push	{r4, r5, r6, lr}
   154f0:	mov	r4, r0
   154f4:	bl	1118c <__fpending@plt>
   154f8:	ldr	r5, [r4]
   154fc:	and	r5, r5, #32
   15500:	mov	r6, r0
   15504:	mov	r0, r4
   15508:	bl	15568 <__snprintf_chk@plt+0x41fc>
   1550c:	cmp	r5, #0
   15510:	mov	r4, r0
   15514:	bne	15534 <__snprintf_chk@plt+0x41c8>
   15518:	cmp	r0, #0
   1551c:	beq	1552c <__snprintf_chk@plt+0x41c0>
   15520:	cmp	r6, #0
   15524:	beq	15550 <__snprintf_chk@plt+0x41e4>
   15528:	mvn	r4, #0
   1552c:	mov	r0, r4
   15530:	pop	{r4, r5, r6, pc}
   15534:	cmp	r0, #0
   15538:	bne	15528 <__snprintf_chk@plt+0x41bc>
   1553c:	bl	1124c <__errno_location@plt>
   15540:	str	r4, [r0]
   15544:	mvn	r4, #0
   15548:	mov	r0, r4
   1554c:	pop	{r4, r5, r6, pc}
   15550:	bl	1124c <__errno_location@plt>
   15554:	ldr	r4, [r0]
   15558:	subs	r4, r4, #9
   1555c:	mvnne	r4, #0
   15560:	mov	r0, r4
   15564:	pop	{r4, r5, r6, pc}
   15568:	push	{r4, r5, lr}
   1556c:	sub	sp, sp, #12
   15570:	mov	r4, r0
   15574:	bl	112ac <fileno@plt>
   15578:	cmp	r0, #0
   1557c:	mov	r0, r4
   15580:	blt	155fc <__snprintf_chk@plt+0x4290>
   15584:	bl	111e0 <__freading@plt>
   15588:	cmp	r0, #0
   1558c:	bne	155c8 <__snprintf_chk@plt+0x425c>
   15590:	mov	r0, r4
   15594:	bl	15608 <__snprintf_chk@plt+0x429c>
   15598:	cmp	r0, #0
   1559c:	beq	155f8 <__snprintf_chk@plt+0x428c>
   155a0:	bl	1124c <__errno_location@plt>
   155a4:	mov	r5, r0
   155a8:	mov	r0, r4
   155ac:	ldr	r4, [r5]
   155b0:	bl	112c4 <fclose@plt>
   155b4:	cmp	r4, #0
   155b8:	mvnne	r0, #0
   155bc:	strne	r4, [r5]
   155c0:	add	sp, sp, #12
   155c4:	pop	{r4, r5, pc}
   155c8:	mov	r0, r4
   155cc:	bl	112ac <fileno@plt>
   155d0:	mov	r3, #1
   155d4:	str	r3, [sp]
   155d8:	mov	r2, #0
   155dc:	mov	r3, #0
   155e0:	bl	1115c <lseek64@plt>
   155e4:	mvn	r3, #0
   155e8:	mvn	r2, #0
   155ec:	cmp	r1, r3
   155f0:	cmpeq	r0, r2
   155f4:	bne	15590 <__snprintf_chk@plt+0x4224>
   155f8:	mov	r0, r4
   155fc:	add	sp, sp, #12
   15600:	pop	{r4, r5, lr}
   15604:	b	112c4 <fclose@plt>
   15608:	push	{r4, lr}
   1560c:	subs	r4, r0, #0
   15610:	sub	sp, sp, #8
   15614:	beq	15630 <__snprintf_chk@plt+0x42c4>
   15618:	bl	111e0 <__freading@plt>
   1561c:	cmp	r0, #0
   15620:	beq	15630 <__snprintf_chk@plt+0x42c4>
   15624:	ldr	r3, [r4]
   15628:	tst	r3, #256	; 0x100
   1562c:	bne	15640 <__snprintf_chk@plt+0x42d4>
   15630:	mov	r0, r4
   15634:	add	sp, sp, #8
   15638:	pop	{r4, lr}
   1563c:	b	11078 <fflush@plt>
   15640:	mov	r3, #1
   15644:	str	r3, [sp]
   15648:	mov	r2, #0
   1564c:	mov	r3, #0
   15650:	mov	r0, r4
   15654:	bl	15668 <__snprintf_chk@plt+0x42fc>
   15658:	mov	r0, r4
   1565c:	add	sp, sp, #8
   15660:	pop	{r4, lr}
   15664:	b	11078 <fflush@plt>
   15668:	push	{r4, r5, r6, r7, r8, lr}
   1566c:	sub	sp, sp, #8
   15670:	ldmib	r0, {ip, lr}
   15674:	mov	r4, r0
   15678:	ldr	r5, [sp, #32]
   1567c:	cmp	lr, ip
   15680:	beq	15698 <__snprintf_chk@plt+0x432c>
   15684:	str	r5, [sp, #32]
   15688:	mov	r0, r4
   1568c:	add	sp, sp, #8
   15690:	pop	{r4, r5, r6, r7, r8, lr}
   15694:	b	112d0 <fseeko64@plt>
   15698:	ldr	lr, [r0, #20]
   1569c:	ldr	ip, [r0, #16]
   156a0:	cmp	lr, ip
   156a4:	bne	15684 <__snprintf_chk@plt+0x4318>
   156a8:	ldr	r8, [r0, #36]	; 0x24
   156ac:	cmp	r8, #0
   156b0:	bne	15684 <__snprintf_chk@plt+0x4318>
   156b4:	mov	r6, r2
   156b8:	mov	r7, r3
   156bc:	bl	112ac <fileno@plt>
   156c0:	mov	r2, r6
   156c4:	mov	r3, r7
   156c8:	str	r5, [sp]
   156cc:	bl	1115c <lseek64@plt>
   156d0:	mvn	r3, #0
   156d4:	mvn	r2, #0
   156d8:	cmp	r1, r3
   156dc:	cmpeq	r0, r2
   156e0:	beq	15700 <__snprintf_chk@plt+0x4394>
   156e4:	ldr	r3, [r4]
   156e8:	strd	r0, [r4, #80]	; 0x50
   156ec:	mov	r0, r8
   156f0:	bic	r3, r3, #16
   156f4:	str	r3, [r4]
   156f8:	add	sp, sp, #8
   156fc:	pop	{r4, r5, r6, r7, r8, pc}
   15700:	mvn	r0, #0
   15704:	b	156f8 <__snprintf_chk@plt+0x438c>
   15708:	push	{r4, lr}
   1570c:	mov	r0, #14
   15710:	bl	11318 <nl_langinfo@plt>
   15714:	cmp	r0, #0
   15718:	beq	15730 <__snprintf_chk@plt+0x43c4>
   1571c:	ldrb	r2, [r0]
   15720:	ldr	r3, [pc, #16]	; 15738 <__snprintf_chk@plt+0x43cc>
   15724:	cmp	r2, #0
   15728:	moveq	r0, r3
   1572c:	pop	{r4, pc}
   15730:	ldr	r0, [pc]	; 15738 <__snprintf_chk@plt+0x43cc>
   15734:	pop	{r4, pc}
   15738:			; <UNDEFINED> instruction: 0x00016db0
   1573c:	push	{r4, r5, r6, r7, lr}
   15740:	subs	r6, r0, #0
   15744:	sub	sp, sp, #12
   15748:	addeq	r6, sp, #4
   1574c:	mov	r0, r6
   15750:	mov	r5, r2
   15754:	mov	r7, r1
   15758:	bl	11198 <mbrtowc@plt>
   1575c:	cmp	r5, #0
   15760:	cmnne	r0, #3
   15764:	mov	r4, r0
   15768:	bls	15784 <__snprintf_chk@plt+0x4418>
   1576c:	mov	r0, #0
   15770:	bl	157dc <__snprintf_chk@plt+0x4470>
   15774:	cmp	r0, #0
   15778:	moveq	r4, #1
   1577c:	ldrbeq	r3, [r7]
   15780:	streq	r3, [r6]
   15784:	mov	r0, r4
   15788:	add	sp, sp, #12
   1578c:	pop	{r4, r5, r6, r7, pc}
   15790:	push	{r4, r5, r6, lr}
   15794:	subs	r4, r2, #0
   15798:	mov	r6, r0
   1579c:	mov	r5, r1
   157a0:	beq	157cc <__snprintf_chk@plt+0x4460>
   157a4:	mov	r1, r4
   157a8:	mvn	r0, #0
   157ac:	bl	158d0 <__snprintf_chk@plt+0x4564>
   157b0:	cmp	r0, r5
   157b4:	bcs	157cc <__snprintf_chk@plt+0x4460>
   157b8:	bl	1124c <__errno_location@plt>
   157bc:	mov	r3, #12
   157c0:	str	r3, [r0]
   157c4:	mov	r0, #0
   157c8:	pop	{r4, r5, r6, pc}
   157cc:	mul	r1, r5, r4
   157d0:	mov	r0, r6
   157d4:	pop	{r4, r5, r6, lr}
   157d8:	b	15414 <__snprintf_chk@plt+0x40a8>
   157dc:	push	{lr}		; (str lr, [sp, #-4]!)
   157e0:	sub	sp, sp, #268	; 0x10c
   157e4:	add	r1, sp, #4
   157e8:	ldr	r2, [pc, #60]	; 1582c <__snprintf_chk@plt+0x44c0>
   157ec:	bl	15838 <__snprintf_chk@plt+0x44cc>
   157f0:	cmp	r0, #0
   157f4:	movne	r0, #0
   157f8:	bne	15824 <__snprintf_chk@plt+0x44b8>
   157fc:	ldr	r1, [pc, #44]	; 15830 <__snprintf_chk@plt+0x44c4>
   15800:	add	r0, sp, #4
   15804:	bl	11060 <strcmp@plt>
   15808:	cmp	r0, #0
   1580c:	beq	15824 <__snprintf_chk@plt+0x44b8>
   15810:	add	r0, sp, #4
   15814:	ldr	r1, [pc, #24]	; 15834 <__snprintf_chk@plt+0x44c8>
   15818:	bl	11060 <strcmp@plt>
   1581c:	adds	r0, r0, #0
   15820:	movne	r0, #1
   15824:	add	sp, sp, #268	; 0x10c
   15828:	pop	{pc}		; (ldr pc, [sp], #4)
   1582c:	andeq	r0, r0, r1, lsl #2
   15830:	andeq	r6, r1, ip, lsr #27
   15834:			; <UNDEFINED> instruction: 0x00016db8
   15838:	push	{r4, r5, r6, lr}
   1583c:	mov	r5, r1
   15840:	mov	r1, #0
   15844:	mov	r4, r2
   15848:	bl	112e8 <setlocale@plt>
   1584c:	subs	r6, r0, #0
   15850:	beq	158ac <__snprintf_chk@plt+0x4540>
   15854:	bl	11228 <strlen@plt>
   15858:	cmp	r4, r0
   1585c:	bhi	15894 <__snprintf_chk@plt+0x4528>
   15860:	cmp	r4, #0
   15864:	bne	15870 <__snprintf_chk@plt+0x4504>
   15868:	mov	r0, #34	; 0x22
   1586c:	pop	{r4, r5, r6, pc}
   15870:	sub	r4, r4, #1
   15874:	mov	r1, r6
   15878:	mov	r2, r4
   1587c:	mov	r0, r5
   15880:	bl	110a8 <memcpy@plt>
   15884:	mov	r3, #0
   15888:	strb	r3, [r5, r4]
   1588c:	mov	r0, #34	; 0x22
   15890:	pop	{r4, r5, r6, pc}
   15894:	add	r2, r0, #1
   15898:	mov	r1, r6
   1589c:	mov	r0, r5
   158a0:	bl	110a8 <memcpy@plt>
   158a4:	mov	r0, #0
   158a8:	pop	{r4, r5, r6, pc}
   158ac:	cmp	r4, #0
   158b0:	beq	158c0 <__snprintf_chk@plt+0x4554>
   158b4:	strb	r6, [r5]
   158b8:	mov	r0, #22
   158bc:	pop	{r4, r5, r6, pc}
   158c0:	mov	r0, #22
   158c4:	pop	{r4, r5, r6, pc}
   158c8:	mov	r1, #0
   158cc:	b	112e8 <setlocale@plt>
   158d0:	subs	r2, r1, #1
   158d4:	bxeq	lr
   158d8:	bcc	15ab0 <__snprintf_chk@plt+0x4744>
   158dc:	cmp	r0, r1
   158e0:	bls	15a94 <__snprintf_chk@plt+0x4728>
   158e4:	tst	r1, r2
   158e8:	beq	15aa0 <__snprintf_chk@plt+0x4734>
   158ec:	clz	r3, r0
   158f0:	clz	r2, r1
   158f4:	sub	r3, r2, r3
   158f8:	rsbs	r3, r3, #31
   158fc:	addne	r3, r3, r3, lsl #1
   15900:	mov	r2, #0
   15904:	addne	pc, pc, r3, lsl #2
   15908:	nop			; (mov r0, r0)
   1590c:	cmp	r0, r1, lsl #31
   15910:	adc	r2, r2, r2
   15914:	subcs	r0, r0, r1, lsl #31
   15918:	cmp	r0, r1, lsl #30
   1591c:	adc	r2, r2, r2
   15920:	subcs	r0, r0, r1, lsl #30
   15924:	cmp	r0, r1, lsl #29
   15928:	adc	r2, r2, r2
   1592c:	subcs	r0, r0, r1, lsl #29
   15930:	cmp	r0, r1, lsl #28
   15934:	adc	r2, r2, r2
   15938:	subcs	r0, r0, r1, lsl #28
   1593c:	cmp	r0, r1, lsl #27
   15940:	adc	r2, r2, r2
   15944:	subcs	r0, r0, r1, lsl #27
   15948:	cmp	r0, r1, lsl #26
   1594c:	adc	r2, r2, r2
   15950:	subcs	r0, r0, r1, lsl #26
   15954:	cmp	r0, r1, lsl #25
   15958:	adc	r2, r2, r2
   1595c:	subcs	r0, r0, r1, lsl #25
   15960:	cmp	r0, r1, lsl #24
   15964:	adc	r2, r2, r2
   15968:	subcs	r0, r0, r1, lsl #24
   1596c:	cmp	r0, r1, lsl #23
   15970:	adc	r2, r2, r2
   15974:	subcs	r0, r0, r1, lsl #23
   15978:	cmp	r0, r1, lsl #22
   1597c:	adc	r2, r2, r2
   15980:	subcs	r0, r0, r1, lsl #22
   15984:	cmp	r0, r1, lsl #21
   15988:	adc	r2, r2, r2
   1598c:	subcs	r0, r0, r1, lsl #21
   15990:	cmp	r0, r1, lsl #20
   15994:	adc	r2, r2, r2
   15998:	subcs	r0, r0, r1, lsl #20
   1599c:	cmp	r0, r1, lsl #19
   159a0:	adc	r2, r2, r2
   159a4:	subcs	r0, r0, r1, lsl #19
   159a8:	cmp	r0, r1, lsl #18
   159ac:	adc	r2, r2, r2
   159b0:	subcs	r0, r0, r1, lsl #18
   159b4:	cmp	r0, r1, lsl #17
   159b8:	adc	r2, r2, r2
   159bc:	subcs	r0, r0, r1, lsl #17
   159c0:	cmp	r0, r1, lsl #16
   159c4:	adc	r2, r2, r2
   159c8:	subcs	r0, r0, r1, lsl #16
   159cc:	cmp	r0, r1, lsl #15
   159d0:	adc	r2, r2, r2
   159d4:	subcs	r0, r0, r1, lsl #15
   159d8:	cmp	r0, r1, lsl #14
   159dc:	adc	r2, r2, r2
   159e0:	subcs	r0, r0, r1, lsl #14
   159e4:	cmp	r0, r1, lsl #13
   159e8:	adc	r2, r2, r2
   159ec:	subcs	r0, r0, r1, lsl #13
   159f0:	cmp	r0, r1, lsl #12
   159f4:	adc	r2, r2, r2
   159f8:	subcs	r0, r0, r1, lsl #12
   159fc:	cmp	r0, r1, lsl #11
   15a00:	adc	r2, r2, r2
   15a04:	subcs	r0, r0, r1, lsl #11
   15a08:	cmp	r0, r1, lsl #10
   15a0c:	adc	r2, r2, r2
   15a10:	subcs	r0, r0, r1, lsl #10
   15a14:	cmp	r0, r1, lsl #9
   15a18:	adc	r2, r2, r2
   15a1c:	subcs	r0, r0, r1, lsl #9
   15a20:	cmp	r0, r1, lsl #8
   15a24:	adc	r2, r2, r2
   15a28:	subcs	r0, r0, r1, lsl #8
   15a2c:	cmp	r0, r1, lsl #7
   15a30:	adc	r2, r2, r2
   15a34:	subcs	r0, r0, r1, lsl #7
   15a38:	cmp	r0, r1, lsl #6
   15a3c:	adc	r2, r2, r2
   15a40:	subcs	r0, r0, r1, lsl #6
   15a44:	cmp	r0, r1, lsl #5
   15a48:	adc	r2, r2, r2
   15a4c:	subcs	r0, r0, r1, lsl #5
   15a50:	cmp	r0, r1, lsl #4
   15a54:	adc	r2, r2, r2
   15a58:	subcs	r0, r0, r1, lsl #4
   15a5c:	cmp	r0, r1, lsl #3
   15a60:	adc	r2, r2, r2
   15a64:	subcs	r0, r0, r1, lsl #3
   15a68:	cmp	r0, r1, lsl #2
   15a6c:	adc	r2, r2, r2
   15a70:	subcs	r0, r0, r1, lsl #2
   15a74:	cmp	r0, r1, lsl #1
   15a78:	adc	r2, r2, r2
   15a7c:	subcs	r0, r0, r1, lsl #1
   15a80:	cmp	r0, r1
   15a84:	adc	r2, r2, r2
   15a88:	subcs	r0, r0, r1
   15a8c:	mov	r0, r2
   15a90:	bx	lr
   15a94:	moveq	r0, #1
   15a98:	movne	r0, #0
   15a9c:	bx	lr
   15aa0:	clz	r2, r1
   15aa4:	rsb	r2, r2, #31
   15aa8:	lsr	r0, r0, r2
   15aac:	bx	lr
   15ab0:	cmp	r0, #0
   15ab4:	mvnne	r0, #0
   15ab8:	b	15d1c <__snprintf_chk@plt+0x49b0>
   15abc:	cmp	r1, #0
   15ac0:	beq	15ab0 <__snprintf_chk@plt+0x4744>
   15ac4:	push	{r0, r1, lr}
   15ac8:	bl	158d0 <__snprintf_chk@plt+0x4564>
   15acc:	pop	{r1, r2, lr}
   15ad0:	mul	r3, r2, r0
   15ad4:	sub	r1, r1, r3
   15ad8:	bx	lr
   15adc:	cmp	r1, #0
   15ae0:	beq	15cec <__snprintf_chk@plt+0x4980>
   15ae4:	eor	ip, r0, r1
   15ae8:	rsbmi	r1, r1, #0
   15aec:	subs	r2, r1, #1
   15af0:	beq	15cb8 <__snprintf_chk@plt+0x494c>
   15af4:	movs	r3, r0
   15af8:	rsbmi	r3, r0, #0
   15afc:	cmp	r3, r1
   15b00:	bls	15cc4 <__snprintf_chk@plt+0x4958>
   15b04:	tst	r1, r2
   15b08:	beq	15cd4 <__snprintf_chk@plt+0x4968>
   15b0c:	clz	r2, r3
   15b10:	clz	r0, r1
   15b14:	sub	r2, r0, r2
   15b18:	rsbs	r2, r2, #31
   15b1c:	addne	r2, r2, r2, lsl #1
   15b20:	mov	r0, #0
   15b24:	addne	pc, pc, r2, lsl #2
   15b28:	nop			; (mov r0, r0)
   15b2c:	cmp	r3, r1, lsl #31
   15b30:	adc	r0, r0, r0
   15b34:	subcs	r3, r3, r1, lsl #31
   15b38:	cmp	r3, r1, lsl #30
   15b3c:	adc	r0, r0, r0
   15b40:	subcs	r3, r3, r1, lsl #30
   15b44:	cmp	r3, r1, lsl #29
   15b48:	adc	r0, r0, r0
   15b4c:	subcs	r3, r3, r1, lsl #29
   15b50:	cmp	r3, r1, lsl #28
   15b54:	adc	r0, r0, r0
   15b58:	subcs	r3, r3, r1, lsl #28
   15b5c:	cmp	r3, r1, lsl #27
   15b60:	adc	r0, r0, r0
   15b64:	subcs	r3, r3, r1, lsl #27
   15b68:	cmp	r3, r1, lsl #26
   15b6c:	adc	r0, r0, r0
   15b70:	subcs	r3, r3, r1, lsl #26
   15b74:	cmp	r3, r1, lsl #25
   15b78:	adc	r0, r0, r0
   15b7c:	subcs	r3, r3, r1, lsl #25
   15b80:	cmp	r3, r1, lsl #24
   15b84:	adc	r0, r0, r0
   15b88:	subcs	r3, r3, r1, lsl #24
   15b8c:	cmp	r3, r1, lsl #23
   15b90:	adc	r0, r0, r0
   15b94:	subcs	r3, r3, r1, lsl #23
   15b98:	cmp	r3, r1, lsl #22
   15b9c:	adc	r0, r0, r0
   15ba0:	subcs	r3, r3, r1, lsl #22
   15ba4:	cmp	r3, r1, lsl #21
   15ba8:	adc	r0, r0, r0
   15bac:	subcs	r3, r3, r1, lsl #21
   15bb0:	cmp	r3, r1, lsl #20
   15bb4:	adc	r0, r0, r0
   15bb8:	subcs	r3, r3, r1, lsl #20
   15bbc:	cmp	r3, r1, lsl #19
   15bc0:	adc	r0, r0, r0
   15bc4:	subcs	r3, r3, r1, lsl #19
   15bc8:	cmp	r3, r1, lsl #18
   15bcc:	adc	r0, r0, r0
   15bd0:	subcs	r3, r3, r1, lsl #18
   15bd4:	cmp	r3, r1, lsl #17
   15bd8:	adc	r0, r0, r0
   15bdc:	subcs	r3, r3, r1, lsl #17
   15be0:	cmp	r3, r1, lsl #16
   15be4:	adc	r0, r0, r0
   15be8:	subcs	r3, r3, r1, lsl #16
   15bec:	cmp	r3, r1, lsl #15
   15bf0:	adc	r0, r0, r0
   15bf4:	subcs	r3, r3, r1, lsl #15
   15bf8:	cmp	r3, r1, lsl #14
   15bfc:	adc	r0, r0, r0
   15c00:	subcs	r3, r3, r1, lsl #14
   15c04:	cmp	r3, r1, lsl #13
   15c08:	adc	r0, r0, r0
   15c0c:	subcs	r3, r3, r1, lsl #13
   15c10:	cmp	r3, r1, lsl #12
   15c14:	adc	r0, r0, r0
   15c18:	subcs	r3, r3, r1, lsl #12
   15c1c:	cmp	r3, r1, lsl #11
   15c20:	adc	r0, r0, r0
   15c24:	subcs	r3, r3, r1, lsl #11
   15c28:	cmp	r3, r1, lsl #10
   15c2c:	adc	r0, r0, r0
   15c30:	subcs	r3, r3, r1, lsl #10
   15c34:	cmp	r3, r1, lsl #9
   15c38:	adc	r0, r0, r0
   15c3c:	subcs	r3, r3, r1, lsl #9
   15c40:	cmp	r3, r1, lsl #8
   15c44:	adc	r0, r0, r0
   15c48:	subcs	r3, r3, r1, lsl #8
   15c4c:	cmp	r3, r1, lsl #7
   15c50:	adc	r0, r0, r0
   15c54:	subcs	r3, r3, r1, lsl #7
   15c58:	cmp	r3, r1, lsl #6
   15c5c:	adc	r0, r0, r0
   15c60:	subcs	r3, r3, r1, lsl #6
   15c64:	cmp	r3, r1, lsl #5
   15c68:	adc	r0, r0, r0
   15c6c:	subcs	r3, r3, r1, lsl #5
   15c70:	cmp	r3, r1, lsl #4
   15c74:	adc	r0, r0, r0
   15c78:	subcs	r3, r3, r1, lsl #4
   15c7c:	cmp	r3, r1, lsl #3
   15c80:	adc	r0, r0, r0
   15c84:	subcs	r3, r3, r1, lsl #3
   15c88:	cmp	r3, r1, lsl #2
   15c8c:	adc	r0, r0, r0
   15c90:	subcs	r3, r3, r1, lsl #2
   15c94:	cmp	r3, r1, lsl #1
   15c98:	adc	r0, r0, r0
   15c9c:	subcs	r3, r3, r1, lsl #1
   15ca0:	cmp	r3, r1
   15ca4:	adc	r0, r0, r0
   15ca8:	subcs	r3, r3, r1
   15cac:	cmp	ip, #0
   15cb0:	rsbmi	r0, r0, #0
   15cb4:	bx	lr
   15cb8:	teq	ip, r0
   15cbc:	rsbmi	r0, r0, #0
   15cc0:	bx	lr
   15cc4:	movcc	r0, #0
   15cc8:	asreq	r0, ip, #31
   15ccc:	orreq	r0, r0, #1
   15cd0:	bx	lr
   15cd4:	clz	r2, r1
   15cd8:	rsb	r2, r2, #31
   15cdc:	cmp	ip, #0
   15ce0:	lsr	r0, r3, r2
   15ce4:	rsbmi	r0, r0, #0
   15ce8:	bx	lr
   15cec:	cmp	r0, #0
   15cf0:	mvngt	r0, #-2147483648	; 0x80000000
   15cf4:	movlt	r0, #-2147483648	; 0x80000000
   15cf8:	b	15d1c <__snprintf_chk@plt+0x49b0>
   15cfc:	cmp	r1, #0
   15d00:	beq	15cec <__snprintf_chk@plt+0x4980>
   15d04:	push	{r0, r1, lr}
   15d08:	bl	15ae4 <__snprintf_chk@plt+0x4778>
   15d0c:	pop	{r1, r2, lr}
   15d10:	mul	r3, r2, r0
   15d14:	sub	r1, r1, r3
   15d18:	bx	lr
   15d1c:	push	{r1, lr}
   15d20:	mov	r0, #8
   15d24:	bl	11054 <raise@plt>
   15d28:	pop	{r1, pc}
   15d2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d30:	mov	r7, r0
   15d34:	ldr	r6, [pc, #72]	; 15d84 <__snprintf_chk@plt+0x4a18>
   15d38:	ldr	r5, [pc, #72]	; 15d88 <__snprintf_chk@plt+0x4a1c>
   15d3c:	add	r6, pc, r6
   15d40:	add	r5, pc, r5
   15d44:	sub	r6, r6, r5
   15d48:	mov	r8, r1
   15d4c:	mov	r9, r2
   15d50:	bl	1101c <calloc@plt-0x20>
   15d54:	asrs	r6, r6, #2
   15d58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d5c:	mov	r4, #0
   15d60:	add	r4, r4, #1
   15d64:	ldr	r3, [r5], #4
   15d68:	mov	r2, r9
   15d6c:	mov	r1, r8
   15d70:	mov	r0, r7
   15d74:	blx	r3
   15d78:	cmp	r6, r4
   15d7c:	bne	15d60 <__snprintf_chk@plt+0x49f4>
   15d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d84:			; <UNDEFINED> instruction: 0x000111bc
   15d88:			; <UNDEFINED> instruction: 0x000111b4
   15d8c:	bx	lr
   15d90:	ldr	r3, [pc, #12]	; 15da4 <__snprintf_chk@plt+0x4a38>
   15d94:	mov	r1, #0
   15d98:	add	r3, pc, r3
   15d9c:	ldr	r2, [r3]
   15da0:	b	11264 <__cxa_atexit@plt>
   15da4:	andeq	r1, r1, r8, lsl #7

Disassembly of section .fini:

00015da8 <.fini>:
   15da8:	push	{r3, lr}
   15dac:	pop	{r3, pc}
