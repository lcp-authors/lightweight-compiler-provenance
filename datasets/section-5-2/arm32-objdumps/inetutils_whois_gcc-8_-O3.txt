
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011098 <.init>:
   11098:	push	{r3, lr}
   1109c:	bl	118d8 <__assert_fail@plt+0x520>
   110a0:	pop	{r3, pc}

Disassembly of section .plt:

000110a4 <fdopen@plt-0x14>:
   110a4:	push	{lr}		; (str lr, [sp, #-4]!)
   110a8:	ldr	lr, [pc, #4]	; 110b4 <fdopen@plt-0x4>
   110ac:	add	lr, pc, lr
   110b0:	ldr	pc, [lr, #8]!
   110b4:	andeq	sp, r1, ip, asr #30

000110b8 <fdopen@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #118784	; 0x1d000
   110c0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c4 <calloc@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #118784	; 0x1d000
   110cc:	ldr	pc, [ip, #3908]!	; 0xf44

000110d0 <fputs_unlocked@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #118784	; 0x1d000
   110d8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110dc <inet_aton@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #118784	; 0x1d000
   110e4:	ldr	pc, [ip, #3892]!	; 0xf34

000110e8 <strcmp@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #118784	; 0x1d000
   110f0:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f4 <strtol@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #118784	; 0x1d000
   110fc:	ldr	pc, [ip, #3876]!	; 0xf24

00011100 <printf@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #118784	; 0x1d000
   11108:	ldr	pc, [ip, #3868]!	; 0xf1c

0001110c <memmove@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #118784	; 0x1d000
   11114:	ldr	pc, [ip, #3860]!	; 0xf14

00011118 <strchrnul@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #118784	; 0x1d000
   11120:	ldr	pc, [ip, #3852]!	; 0xf0c

00011124 <free@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #118784	; 0x1d000
   1112c:	ldr	pc, [ip, #3844]!	; 0xf04

00011130 <gai_strerror@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #118784	; 0x1d000
   11138:	ldr	pc, [ip, #3836]!	; 0xefc

0001113c <fgets@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #118784	; 0x1d000
   11144:	ldr	pc, [ip, #3828]!	; 0xef4

00011148 <ferror@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #118784	; 0x1d000
   11150:	ldr	pc, [ip, #3820]!	; 0xeec

00011154 <strndup@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #118784	; 0x1d000
   1115c:	ldr	pc, [ip, #3812]!	; 0xee4

00011160 <memcpy@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #118784	; 0x1d000
   11168:	ldr	pc, [ip, #3804]!	; 0xedc

0001116c <signal@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #118784	; 0x1d000
   11174:	ldr	pc, [ip, #3796]!	; 0xed4

00011178 <fwrite_unlocked@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #118784	; 0x1d000
   11180:	ldr	pc, [ip, #3788]!	; 0xecc

00011184 <sleep@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #118784	; 0x1d000
   1118c:	ldr	pc, [ip, #3780]!	; 0xec4

00011190 <stpcpy@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #118784	; 0x1d000
   11198:	ldr	pc, [ip, #3772]!	; 0xebc

0001119c <realloc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #118784	; 0x1d000
   111a4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a8 <strcasecmp@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #118784	; 0x1d000
   111b0:	ldr	pc, [ip, #3756]!	; 0xeac

000111b4 <funlockfile@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #118784	; 0x1d000
   111bc:	ldr	pc, [ip, #3748]!	; 0xea4

000111c0 <fwrite@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #118784	; 0x1d000
   111c8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111cc <strcat@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #118784	; 0x1d000
   111d4:	ldr	pc, [ip, #3732]!	; 0xe94

000111d8 <strcpy@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #118784	; 0x1d000
   111e0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e4 <error@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #118784	; 0x1d000
   111ec:	ldr	pc, [ip, #3716]!	; 0xe84

000111f0 <getenv@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #118784	; 0x1d000
   111f8:	ldr	pc, [ip, #3708]!	; 0xe7c

000111fc <puts@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #118784	; 0x1d000
   11204:	ldr	pc, [ip, #3700]!	; 0xe74

00011208 <malloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #118784	; 0x1d000
   11210:	ldr	pc, [ip, #3692]!	; 0xe6c

00011214 <__libc_start_main@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #118784	; 0x1d000
   1121c:	ldr	pc, [ip, #3684]!	; 0xe64

00011220 <strerror@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #118784	; 0x1d000
   11228:	ldr	pc, [ip, #3676]!	; 0xe5c

0001122c <__ctype_tolower_loc@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #118784	; 0x1d000
   11234:	ldr	pc, [ip, #3668]!	; 0xe54

00011238 <__gmon_start__@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #118784	; 0x1d000
   11240:	ldr	pc, [ip, #3660]!	; 0xe4c

00011244 <mempcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #118784	; 0x1d000
   1124c:	ldr	pc, [ip, #3652]!	; 0xe44

00011250 <__ctype_b_loc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #118784	; 0x1d000
   11258:	ldr	pc, [ip, #3644]!	; 0xe3c

0001125c <exit@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #118784	; 0x1d000
   11264:	ldr	pc, [ip, #3636]!	; 0xe34

00011268 <strlen@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #118784	; 0x1d000
   11270:	ldr	pc, [ip, #3628]!	; 0xe2c

00011274 <strchr@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #118784	; 0x1d000
   1127c:	ldr	pc, [ip, #3620]!	; 0xe24

00011280 <fprintf@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #118784	; 0x1d000
   11288:	ldr	pc, [ip, #3612]!	; 0xe1c

0001128c <__errno_location@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #118784	; 0x1d000
   11294:	ldr	pc, [ip, #3604]!	; 0xe14

00011298 <strncasecmp@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #118784	; 0x1d000
   112a0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a4 <strerror_r@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #118784	; 0x1d000
   112ac:	ldr	pc, [ip, #3588]!	; 0xe04

000112b0 <memset@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #118784	; 0x1d000
   112b8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112bc <write@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #118784	; 0x1d000
   112c4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112c8 <memchr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #118784	; 0x1d000
   112d0:	ldr	pc, [ip, #3564]!	; 0xdec

000112d4 <__overflow@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #118784	; 0x1d000
   112dc:	ldr	pc, [ip, #3556]!	; 0xde4

000112e0 <strrchr@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #118784	; 0x1d000
   112e8:	ldr	pc, [ip, #3548]!	; 0xddc

000112ec <vfprintf@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #118784	; 0x1d000
   112f4:	ldr	pc, [ip, #3540]!	; 0xdd4

000112f8 <fputc@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #118784	; 0x1d000
   11300:	ldr	pc, [ip, #3532]!	; 0xdcc

00011304 <sscanf@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #118784	; 0x1d000
   1130c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011310 <sprintf@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #118784	; 0x1d000
   11318:	ldr	pc, [ip, #3516]!	; 0xdbc

0001131c <flockfile@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #118784	; 0x1d000
   11324:	ldr	pc, [ip, #3508]!	; 0xdb4

00011328 <vsnprintf@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #118784	; 0x1d000
   11330:	ldr	pc, [ip, #3500]!	; 0xdac

00011334 <qsort@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #118784	; 0x1d000
   1133c:	ldr	pc, [ip, #3492]!	; 0xda4

00011340 <strpbrk@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #118784	; 0x1d000
   11348:	ldr	pc, [ip, #3484]!	; 0xd9c

0001134c <freeaddrinfo@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #118784	; 0x1d000
   11354:	ldr	pc, [ip, #3476]!	; 0xd94

00011358 <getaddrinfo@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #118784	; 0x1d000
   11360:	ldr	pc, [ip, #3468]!	; 0xd8c

00011364 <socket@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #118784	; 0x1d000
   1136c:	ldr	pc, [ip, #3460]!	; 0xd84

00011370 <gethostbyname@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #118784	; 0x1d000
   11378:	ldr	pc, [ip, #3452]!	; 0xd7c

0001137c <fputs@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #118784	; 0x1d000
   11384:	ldr	pc, [ip, #3444]!	; 0xd74

00011388 <strncmp@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #118784	; 0x1d000
   11390:	ldr	pc, [ip, #3436]!	; 0xd6c

00011394 <abort@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #118784	; 0x1d000
   1139c:	ldr	pc, [ip, #3428]!	; 0xd64

000113a0 <close@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #118784	; 0x1d000
   113a8:	ldr	pc, [ip, #3420]!	; 0xd5c

000113ac <connect@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #118784	; 0x1d000
   113b4:	ldr	pc, [ip, #3412]!	; 0xd54

000113b8 <__assert_fail@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #118784	; 0x1d000
   113c0:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000113c4 <argp_parse@@Base-0x20fc>:
   113c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   113c8:	movw	r4, #10508	; 0x290c
   113cc:	movt	r4, #3
   113d0:	strd	r6, [sp, #8]
   113d4:	mov	r6, r0
   113d8:	strd	r8, [sp, #16]
   113dc:	mov	r8, r1
   113e0:	strd	sl, [sp, #24]
   113e4:	str	lr, [sp, #32]
   113e8:	sub	sp, sp, #28
   113ec:	ldr	r0, [r1]
   113f0:	bl	14a9c <_obstack_memory_used@@Base+0x34>
   113f4:	movw	r3, #17656	; 0x44f8
   113f8:	movt	r3, #1
   113fc:	mov	r2, #0
   11400:	mov	r0, r4
   11404:	mov	r1, r2
   11408:	str	r3, [sp]
   1140c:	movw	r3, #23900	; 0x5d5c
   11410:	movt	r3, #1
   11414:	bl	1465c <_obstack_begin@@Base>
   11418:	movw	r3, #10556	; 0x293c
   1141c:	movt	r3, #3
   11420:	ldr	r1, [pc, #1128]	; 11890 <__assert_fail@plt+0x4d8>
   11424:	movw	r2, #49124	; 0xbfe4
   11428:	movt	r2, #1
   1142c:	movw	r0, #48932	; 0xbf24
   11430:	movt	r0, #1
   11434:	str	r2, [r3]
   11438:	bl	14400 <argp_parse@@Base+0xf40>
   1143c:	mov	ip, #0
   11440:	add	r3, sp, #20
   11444:	ldr	r0, [pc, #1096]	; 11894 <__assert_fail@plt+0x4dc>
   11448:	mov	r2, r8
   1144c:	mov	r1, r6
   11450:	stm	sp, {r3, ip}
   11454:	mov	r3, #8
   11458:	bl	134c0 <argp_parse@@Base>
   1145c:	ldr	r3, [r4, #12]
   11460:	ldr	r2, [r4, #16]
   11464:	cmp	r2, r3
   11468:	beq	11718 <__assert_fail@plt+0x360>
   1146c:	add	r1, r3, #1
   11470:	mov	r2, #0
   11474:	str	r1, [r4, #12]
   11478:	strb	r2, [r3]
   1147c:	ldr	r3, [r4, #8]
   11480:	ldr	r2, [r4, #12]
   11484:	str	r3, [sp, #12]
   11488:	cmp	r2, r3
   1148c:	beq	116dc <__assert_fail@plt+0x324>
   11490:	ldr	r1, [r4, #4]
   11494:	movw	r9, #10436	; 0x28c4
   11498:	movt	r9, #3
   1149c:	ldr	r0, [r4, #24]
   114a0:	ldr	r7, [r4, #16]
   114a4:	add	r3, r2, r0
   114a8:	ldr	r2, [sp, #20]
   114ac:	bic	r3, r3, r0
   114b0:	sub	r0, r3, r1
   114b4:	sub	r1, r7, r1
   114b8:	cmp	r0, r1
   114bc:	movhi	r3, r7
   114c0:	subs	r6, r6, r2
   114c4:	mov	r5, r3
   114c8:	str	r3, [r4, #8]
   114cc:	str	r3, [r4, #12]
   114d0:	bne	115f8 <__assert_fail@plt+0x240>
   114d4:	ldr	r1, [r9]
   114d8:	cmp	r1, #0
   114dc:	beq	11700 <__assert_fail@plt+0x348>
   114e0:	ldr	r3, [r4, #16]
   114e4:	cmp	r3, r5
   114e8:	beq	11840 <__assert_fail@plt+0x488>
   114ec:	add	r2, r5, #1
   114f0:	mov	r3, #0
   114f4:	str	r2, [r4, #12]
   114f8:	strb	r3, [r5]
   114fc:	ldr	r5, [r4, #8]
   11500:	ldr	r1, [r4, #12]
   11504:	cmp	r1, r5
   11508:	beq	116cc <__assert_fail@plt+0x314>
   1150c:	ldr	r0, [r4, #4]
   11510:	ldr	ip, [r4, #24]
   11514:	ldr	r2, [r4, #16]
   11518:	add	r3, r1, ip
   1151c:	ldr	r1, [r9, #4]
   11520:	bic	r3, r3, ip
   11524:	sub	ip, r3, r0
   11528:	sub	r0, r2, r0
   1152c:	cmp	ip, r0
   11530:	movhi	r3, r2
   11534:	cmp	r1, #0
   11538:	str	r3, [r4, #8]
   1153c:	str	r3, [r4, #12]
   11540:	beq	1172c <__assert_fail@plt+0x374>
   11544:	movw	r4, #10552	; 0x2938
   11548:	movt	r4, #3
   1154c:	movw	r0, #49432	; 0xc118
   11550:	movt	r0, #1
   11554:	bl	111f0 <getenv@plt>
   11558:	cmp	r0, #0
   1155c:	beq	11570 <__assert_fail@plt+0x1b8>
   11560:	movw	r3, #61724	; 0xf11c
   11564:	movt	r3, #2
   11568:	mov	r2, #0
   1156c:	str	r2, [r3]
   11570:	mov	r2, r5
   11574:	ldr	r0, [r9, #4]
   11578:	ldr	r1, [sp, #12]
   1157c:	bl	1229c <__assert_fail@plt+0xee4>
   11580:	ldr	r3, [r9, #12]
   11584:	mov	r5, r0
   11588:	cmp	r3, #0
   1158c:	bne	116ec <__assert_fail@plt+0x334>
   11590:	mov	r0, r5
   11594:	bl	11268 <strlen@plt>
   11598:	movw	r3, #48868	; 0xbee4
   1159c:	movt	r3, #1
   115a0:	ldrh	ip, [r3]
   115a4:	add	r2, r5, r0
   115a8:	movw	r1, #11984	; 0x2ed0
   115ac:	movt	r1, #1
   115b0:	ldrb	r3, [r3, #2]
   115b4:	strh	ip, [r5, r0]
   115b8:	mov	r0, #15
   115bc:	strb	r3, [r2, #2]
   115c0:	bl	1116c <signal@plt>
   115c4:	movw	r1, #11984	; 0x2ed0
   115c8:	movt	r1, #1
   115cc:	mov	r0, #2
   115d0:	bl	1116c <signal@plt>
   115d4:	ldrd	r0, [r9, #4]
   115d8:	bl	12af0 <__assert_fail@plt+0x1738>
   115dc:	mov	r1, r5
   115e0:	str	r0, [r4]
   115e4:	bl	12c30 <__assert_fail@plt+0x1878>
   115e8:	ldr	r0, [r4]
   115ec:	bl	113a0 <close@plt>
   115f0:	mov	r0, #0
   115f4:	bl	1125c <exit@plt>
   115f8:	ldr	r3, [r9]
   115fc:	cmp	r3, #0
   11600:	bne	11710 <__assert_fail@plt+0x358>
   11604:	add	r8, r8, r2, lsl #2
   11608:	movw	r3, #10508	; 0x290c
   1160c:	movt	r3, #3
   11610:	sub	r6, r6, #1
   11614:	sub	r8, r8, #4
   11618:	str	r3, [sp, #8]
   1161c:	ldr	sl, [r8, #4]!
   11620:	sub	r7, r7, r5
   11624:	mov	r0, sl
   11628:	bl	11268 <strlen@plt>
   1162c:	cmp	r0, r7
   11630:	mov	fp, r0
   11634:	bhi	11688 <__assert_fail@plt+0x2d0>
   11638:	mov	r0, r5
   1163c:	mov	r2, fp
   11640:	mov	r1, sl
   11644:	bl	11160 <memcpy@plt>
   11648:	ldr	r2, [r4, #12]
   1164c:	cmp	r6, #0
   11650:	add	r5, r2, fp
   11654:	str	r5, [r4, #12]
   11658:	beq	114e0 <__assert_fail@plt+0x128>
   1165c:	ldr	r1, [r4, #16]
   11660:	cmp	r5, r1
   11664:	beq	1169c <__assert_fail@plt+0x2e4>
   11668:	add	r5, r5, #1
   1166c:	mov	r3, #32
   11670:	sub	r6, r6, #1
   11674:	str	r5, [r4, #12]
   11678:	strb	r3, [r2, fp]
   1167c:	ldr	r5, [r4, #12]
   11680:	ldr	r7, [r4, #16]
   11684:	b	1161c <__assert_fail@plt+0x264>
   11688:	mov	r1, r0
   1168c:	ldr	r0, [sp, #8]
   11690:	bl	14820 <_obstack_newchunk@@Base>
   11694:	ldr	r5, [r4, #12]
   11698:	b	11638 <__assert_fail@plt+0x280>
   1169c:	mov	r1, #1
   116a0:	ldr	r0, [sp, #8]
   116a4:	sub	r6, r6, #1
   116a8:	bl	14820 <_obstack_newchunk@@Base>
   116ac:	ldr	r3, [r4, #12]
   116b0:	add	r2, r3, #1
   116b4:	str	r2, [r4, #12]
   116b8:	mov	r2, #32
   116bc:	strb	r2, [r3]
   116c0:	ldr	r5, [r4, #12]
   116c4:	ldr	r7, [r4, #16]
   116c8:	b	1161c <__assert_fail@plt+0x264>
   116cc:	ldrb	r3, [r4, #40]	; 0x28
   116d0:	orr	r3, r3, #2
   116d4:	strb	r3, [r4, #40]	; 0x28
   116d8:	b	1150c <__assert_fail@plt+0x154>
   116dc:	ldrb	r3, [r4, #40]	; 0x28
   116e0:	orr	r3, r3, #2
   116e4:	strb	r3, [r4, #40]	; 0x28
   116e8:	b	11490 <__assert_fail@plt+0xd8>
   116ec:	movw	r0, #49444	; 0xc124
   116f0:	movt	r0, #1
   116f4:	mov	r1, r5
   116f8:	bl	11100 <printf@plt>
   116fc:	b	11590 <__assert_fail@plt+0x1d8>
   11700:	movw	r2, #49148	; 0xbffc
   11704:	movt	r2, #1
   11708:	mov	r0, #1
   1170c:	bl	111e4 <error@plt>
   11710:	ldr	r5, [r4, #12]
   11714:	b	114e0 <__assert_fail@plt+0x128>
   11718:	mov	r1, #1
   1171c:	mov	r0, r4
   11720:	bl	14820 <_obstack_newchunk@@Base>
   11724:	ldr	r3, [r4, #12]
   11728:	b	1146c <__assert_fail@plt+0xb4>
   1172c:	ldr	r1, [pc, #356]	; 11898 <__assert_fail@plt+0x4e0>
   11730:	mov	r0, r5
   11734:	bl	1272c <__assert_fail@plt+0x1374>
   11738:	cmp	r0, #0
   1173c:	beq	117a0 <__assert_fail@plt+0x3e8>
   11740:	ldr	r3, [r9, #12]
   11744:	cmp	r3, #0
   11748:	bne	11858 <__assert_fail@plt+0x4a0>
   1174c:	mov	r1, #0
   11750:	movw	r0, #49208	; 0xc038
   11754:	movt	r0, #1
   11758:	movw	r4, #10552	; 0x2938
   1175c:	movt	r4, #3
   11760:	bl	12af0 <__assert_fail@plt+0x1738>
   11764:	mov	r1, r5
   11768:	str	r0, [r4]
   1176c:	bl	12900 <__assert_fail@plt+0x1548>
   11770:	str	r0, [r9, #4]
   11774:	ldr	r0, [r4]
   11778:	bl	113a0 <close@plt>
   1177c:	ldr	r1, [r9, #4]
   11780:	cmp	r1, #0
   11784:	beq	117e4 <__assert_fail@plt+0x42c>
   11788:	movw	r0, #49228	; 0xc04c
   1178c:	movt	r0, #1
   11790:	bl	11100 <printf@plt>
   11794:	ldr	r3, [r9, #4]
   11798:	cmp	r3, #0
   1179c:	bne	1154c <__assert_fail@plt+0x194>
   117a0:	mov	r0, r5
   117a4:	bl	11c84 <__assert_fail@plt+0x8cc>
   117a8:	str	r0, [r9, #4]
   117ac:	ldrb	r3, [r0]
   117b0:	cmp	r3, #3
   117b4:	ldrls	pc, [pc, r3, lsl #2]
   117b8:	b	11868 <__assert_fail@plt+0x4b0>
   117bc:	andeq	r1, r1, r0, lsl #16
   117c0:	andeq	r1, r1, ip, asr #15
   117c4:	ldrdeq	r1, [r1], -r8
   117c8:	andeq	r1, r1, ip, ror #15
   117cc:	movw	r0, #49308	; 0xc09c
   117d0:	movt	r0, #1
   117d4:	bl	111fc <puts@plt>
   117d8:	ldr	r0, [r9, #4]
   117dc:	add	r0, r0, #1
   117e0:	bl	111fc <puts@plt>
   117e4:	mov	r0, #0
   117e8:	bl	1125c <exit@plt>
   117ec:	movw	r0, #49380	; 0xc0e4
   117f0:	movt	r0, #1
   117f4:	bl	111fc <puts@plt>
   117f8:	mov	r0, #0
   117fc:	bl	1125c <exit@plt>
   11800:	movw	r0, #49264	; 0xc070
   11804:	movt	r0, #1
   11808:	bl	111f0 <getenv@plt>
   1180c:	cmp	r0, #0
   11810:	movweq	r3, #49208	; 0xc038
   11814:	movteq	r3, #1
   11818:	strne	r0, [r9, #4]
   1181c:	streq	r3, [r9, #4]
   11820:	ldr	r3, [r9, #12]
   11824:	cmp	r3, #0
   11828:	beq	11544 <__assert_fail@plt+0x18c>
   1182c:	movw	r0, #49280	; 0xc080
   11830:	movt	r0, #1
   11834:	ldr	r1, [r9, #4]
   11838:	bl	11100 <printf@plt>
   1183c:	b	11544 <__assert_fail@plt+0x18c>
   11840:	movw	r0, #10508	; 0x290c
   11844:	movt	r0, #3
   11848:	mov	r1, #1
   1184c:	bl	14820 <_obstack_newchunk@@Base>
   11850:	ldr	r5, [r4, #12]
   11854:	b	114ec <__assert_fail@plt+0x134>
   11858:	movw	r0, #49172	; 0xc014
   1185c:	movt	r0, #1
   11860:	bl	111fc <puts@plt>
   11864:	b	1174c <__assert_fail@plt+0x394>
   11868:	ldr	r3, [r9, #12]
   1186c:	cmp	r3, #0
   11870:	beq	11544 <__assert_fail@plt+0x18c>
   11874:	mov	r1, r0
   11878:	movw	r0, #49412	; 0xc104
   1187c:	movt	r0, #1
   11880:	movw	r4, #10552	; 0x2938
   11884:	movt	r4, #3
   11888:	bl	11100 <printf@plt>
   1188c:	b	1154c <__assert_fail@plt+0x194>
   11890:	strdeq	pc, [r2], -r4
   11894:	strdeq	pc, [r2], -ip
   11898:	andeq	pc, r2, r8, lsl ip	; <UNPREDICTABLE>
   1189c:	mov	fp, #0
   118a0:	mov	lr, #0
   118a4:	pop	{r1}		; (ldr r1, [sp], #4)
   118a8:	mov	r2, sp
   118ac:	push	{r2}		; (str r2, [sp, #-4]!)
   118b0:	push	{r0}		; (str r0, [sp, #-4]!)
   118b4:	ldr	ip, [pc, #16]	; 118cc <__assert_fail@plt+0x514>
   118b8:	push	{ip}		; (str ip, [sp, #-4]!)
   118bc:	ldr	r0, [pc, #12]	; 118d0 <__assert_fail@plt+0x518>
   118c0:	ldr	r3, [pc, #12]	; 118d4 <__assert_fail@plt+0x51c>
   118c4:	bl	11214 <__libc_start_main@plt>
   118c8:	bl	11394 <abort@plt>
   118cc:	andeq	fp, r1, r0, ror #24
   118d0:	andeq	r1, r1, r4, asr #7
   118d4:	andeq	fp, r1, r0, lsl #24
   118d8:	ldr	r3, [pc, #20]	; 118f4 <__assert_fail@plt+0x53c>
   118dc:	ldr	r2, [pc, #20]	; 118f8 <__assert_fail@plt+0x540>
   118e0:	add	r3, pc, r3
   118e4:	ldr	r2, [r3, r2]
   118e8:	cmp	r2, #0
   118ec:	bxeq	lr
   118f0:	b	11238 <__gmon_start__@plt>
   118f4:	andeq	sp, r1, r8, lsl r7
   118f8:	andeq	r0, r0, r0, lsl r1
   118fc:	ldr	r0, [pc, #24]	; 1191c <__assert_fail@plt+0x564>
   11900:	ldr	r3, [pc, #24]	; 11920 <__assert_fail@plt+0x568>
   11904:	cmp	r3, r0
   11908:	bxeq	lr
   1190c:	ldr	r3, [pc, #16]	; 11924 <__assert_fail@plt+0x56c>
   11910:	cmp	r3, #0
   11914:	bxeq	lr
   11918:	bx	r3
   1191c:			; <UNDEFINED> instruction: 0x000328b0
   11920:			; <UNDEFINED> instruction: 0x000328b0
   11924:	andeq	r0, r0, r0
   11928:	ldr	r0, [pc, #36]	; 11954 <__assert_fail@plt+0x59c>
   1192c:	ldr	r1, [pc, #36]	; 11958 <__assert_fail@plt+0x5a0>
   11930:	sub	r1, r1, r0
   11934:	asr	r1, r1, #2
   11938:	add	r1, r1, r1, lsr #31
   1193c:	asrs	r1, r1, #1
   11940:	bxeq	lr
   11944:	ldr	r3, [pc, #16]	; 1195c <__assert_fail@plt+0x5a4>
   11948:	cmp	r3, #0
   1194c:	bxeq	lr
   11950:	bx	r3
   11954:			; <UNDEFINED> instruction: 0x000328b0
   11958:			; <UNDEFINED> instruction: 0x000328b0
   1195c:	andeq	r0, r0, r0
   11960:	push	{r4, lr}
   11964:	ldr	r4, [pc, #24]	; 11984 <__assert_fail@plt+0x5cc>
   11968:	ldrb	r3, [r4]
   1196c:	cmp	r3, #0
   11970:	popne	{r4, pc}
   11974:	bl	118fc <__assert_fail@plt+0x544>
   11978:	mov	r3, #1
   1197c:	strb	r3, [r4]
   11980:	pop	{r4, pc}
   11984:	andeq	r2, r3, r0, asr #17
   11988:	b	11928 <__assert_fail@plt+0x570>
   1198c:	sub	r3, r0, #1
   11990:	cmp	r3, #126	; 0x7e
   11994:	bls	119a0 <__assert_fail@plt+0x5e8>
   11998:	mov	r0, #7
   1199c:	bx	lr
   119a0:	bic	r3, r0, #2
   119a4:	strd	r4, [sp, #-16]!
   119a8:	cmp	r0, #113	; 0x71
   119ac:	cmpne	r3, #116	; 0x74
   119b0:	str	r6, [sp, #8]
   119b4:	str	lr, [sp, #12]
   119b8:	bne	119cc <__assert_fail@plt+0x614>
   119bc:	movw	r3, #10436	; 0x28c4
   119c0:	movt	r3, #3
   119c4:	mov	r2, #1
   119c8:	str	r2, [r3]
   119cc:	movw	r4, #10508	; 0x290c
   119d0:	movt	r4, #3
   119d4:	ldr	r3, [r4, #12]
   119d8:	mov	r6, r1
   119dc:	mov	r5, r0
   119e0:	ldr	r2, [r4, #16]
   119e4:	cmp	r2, r3
   119e8:	beq	11ac0 <__assert_fail@plt+0x708>
   119ec:	add	r1, r3, #1
   119f0:	mov	r2, #45	; 0x2d
   119f4:	str	r1, [r4, #12]
   119f8:	strb	r2, [r3]
   119fc:	ldr	r3, [r4, #12]
   11a00:	ldr	r2, [r4, #16]
   11a04:	cmp	r2, r3
   11a08:	beq	11aa8 <__assert_fail@plt+0x6f0>
   11a0c:	add	r2, r3, #1
   11a10:	cmp	r6, #0
   11a14:	moveq	r0, r6
   11a18:	str	r2, [r4, #12]
   11a1c:	strb	r5, [r3]
   11a20:	beq	11a80 <__assert_fail@plt+0x6c8>
   11a24:	ldr	r3, [r4, #12]
   11a28:	ldr	r2, [r4, #16]
   11a2c:	cmp	r2, r3
   11a30:	beq	11ad4 <__assert_fail@plt+0x71c>
   11a34:	add	r1, r3, #1
   11a38:	mov	r2, #32
   11a3c:	mov	r0, r6
   11a40:	str	r1, [r4, #12]
   11a44:	strb	r2, [r3]
   11a48:	bl	11268 <strlen@plt>
   11a4c:	mov	r5, r0
   11a50:	ldr	r0, [r4, #12]
   11a54:	ldr	r3, [r4, #16]
   11a58:	sub	r3, r3, r0
   11a5c:	cmp	r5, r3
   11a60:	bhi	11a90 <__assert_fail@plt+0x6d8>
   11a64:	mov	r2, r5
   11a68:	mov	r1, r6
   11a6c:	bl	11160 <memcpy@plt>
   11a70:	ldr	r3, [r4, #12]
   11a74:	mov	r0, #0
   11a78:	add	r5, r3, r5
   11a7c:	str	r5, [r4, #12]
   11a80:	ldrd	r4, [sp]
   11a84:	ldr	r6, [sp, #8]
   11a88:	add	sp, sp, #12
   11a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a90:	movw	r0, #10508	; 0x290c
   11a94:	movt	r0, #3
   11a98:	mov	r1, r5
   11a9c:	bl	14820 <_obstack_newchunk@@Base>
   11aa0:	ldr	r0, [r4, #12]
   11aa4:	b	11a64 <__assert_fail@plt+0x6ac>
   11aa8:	movw	r0, #10508	; 0x290c
   11aac:	movt	r0, #3
   11ab0:	mov	r1, #1
   11ab4:	bl	14820 <_obstack_newchunk@@Base>
   11ab8:	ldr	r3, [r4, #12]
   11abc:	b	11a0c <__assert_fail@plt+0x654>
   11ac0:	mov	r1, #1
   11ac4:	mov	r0, r4
   11ac8:	bl	14820 <_obstack_newchunk@@Base>
   11acc:	ldr	r3, [r4, #12]
   11ad0:	b	119ec <__assert_fail@plt+0x634>
   11ad4:	movw	r0, #10508	; 0x290c
   11ad8:	movt	r0, #3
   11adc:	mov	r1, #1
   11ae0:	bl	14820 <_obstack_newchunk@@Base>
   11ae4:	ldr	r3, [r4, #12]
   11ae8:	b	11a34 <__assert_fail@plt+0x67c>
   11aec:	sub	r0, r0, #72	; 0x48
   11af0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11af4:	strd	r6, [sp, #8]
   11af8:	mov	r6, r1
   11afc:	str	r8, [sp, #16]
   11b00:	str	lr, [sp, #20]
   11b04:	cmp	r0, #40	; 0x28
   11b08:	ldrls	pc, [pc, r0, lsl #2]
   11b0c:	b	11c7c <__assert_fail@plt+0x8c4>
   11b10:	andeq	r1, r1, r4, ror #24
   11b14:	andeq	r1, r1, ip, ror ip
   11b18:	andeq	r1, r1, ip, ror ip
   11b1c:	andeq	r1, r1, ip, ror ip
   11b20:	andeq	r1, r1, ip, ror ip
   11b24:	andeq	r1, r1, ip, ror ip
   11b28:	andeq	r1, r1, ip, ror ip
   11b2c:	andeq	r1, r1, ip, ror ip
   11b30:	andeq	r1, r1, ip, ror ip
   11b34:	andeq	r1, r1, ip, ror ip
   11b38:	andeq	r1, r1, ip, ror ip
   11b3c:	andeq	r1, r1, ip, ror ip
   11b40:	andeq	r1, r1, ip, ror ip
   11b44:	andeq	r1, r1, ip, ror ip
   11b48:	andeq	r1, r1, ip, asr #24
   11b4c:	andeq	r1, r1, ip, ror ip
   11b50:	andeq	r1, r1, ip, ror ip
   11b54:	andeq	r1, r1, ip, ror ip
   11b58:	andeq	r1, r1, ip, ror ip
   11b5c:	andeq	r1, r1, ip, ror ip
   11b60:	andeq	r1, r1, ip, ror ip
   11b64:	andeq	r1, r1, ip, ror ip
   11b68:	andeq	r1, r1, ip, ror ip
   11b6c:	andeq	r1, r1, ip, ror ip
   11b70:	andeq	r1, r1, ip, ror ip
   11b74:	andeq	r1, r1, ip, ror ip
   11b78:	andeq	r1, r1, ip, ror ip
   11b7c:	andeq	r1, r1, ip, ror ip
   11b80:	andeq	r1, r1, ip, ror ip
   11b84:	andeq	r1, r1, ip, ror ip
   11b88:	andeq	r1, r1, ip, ror ip
   11b8c:	andeq	r1, r1, ip, ror ip
   11b90:	ldrdeq	r1, [r1], -r8
   11b94:	andeq	r1, r1, ip, ror ip
   11b98:	andeq	r1, r1, ip, ror ip
   11b9c:	andeq	r1, r1, ip, ror ip
   11ba0:	andeq	r1, r1, ip, ror ip
   11ba4:	andeq	r1, r1, ip, ror ip
   11ba8:	andeq	r1, r1, ip, ror ip
   11bac:	andeq	r1, r1, ip, ror ip
   11bb0:			; <UNDEFINED> instruction: 0x00011bb4
   11bb4:	movw	r3, #10436	; 0x28c4
   11bb8:	movt	r3, #3
   11bbc:	mov	r0, #0
   11bc0:	str	r1, [r3, #8]
   11bc4:	ldrd	r4, [sp]
   11bc8:	ldrd	r6, [sp, #8]
   11bcc:	ldr	r8, [sp, #16]
   11bd0:	add	sp, sp, #20
   11bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd8:	mov	r0, r1
   11bdc:	movw	r7, #10436	; 0x28c4
   11be0:	movt	r7, #3
   11be4:	bl	11268 <strlen@plt>
   11be8:	add	r0, r0, #1
   11bec:	bl	15700 <_obstack_memory_used@@Base+0xc98>
   11bf0:	str	r0, [r7, #4]
   11bf4:	mov	r5, r0
   11bf8:	ldrb	r4, [r6]
   11bfc:	cmp	r4, #0
   11c00:	cmpne	r4, #58	; 0x3a
   11c04:	beq	11c30 <__assert_fail@plt+0x878>
   11c08:	bl	1122c <__ctype_tolower_loc@plt>
   11c0c:	ldr	r1, [r0]
   11c10:	add	r3, r6, #1
   11c14:	mov	r6, r3
   11c18:	ldr	r2, [r1, r4, lsl #2]
   11c1c:	ldrb	r4, [r3], #1
   11c20:	strb	r2, [r5], #1
   11c24:	cmp	r4, #0
   11c28:	cmpne	r4, #58	; 0x3a
   11c2c:	bne	11c14 <__assert_fail@plt+0x85c>
   11c30:	cmp	r4, #58	; 0x3a
   11c34:	mov	r3, #0
   11c38:	addeq	r6, r6, #1
   11c3c:	mov	r0, r3
   11c40:	strb	r3, [r5]
   11c44:	streq	r6, [r7, #8]
   11c48:	b	11bc4 <__assert_fail@plt+0x80c>
   11c4c:	movw	r3, #10436	; 0x28c4
   11c50:	movt	r3, #3
   11c54:	mov	r2, #1
   11c58:	mov	r0, #0
   11c5c:	str	r2, [r3, #12]
   11c60:	b	11bc4 <__assert_fail@plt+0x80c>
   11c64:	mov	r2, #0
   11c68:	movw	r3, #61724	; 0xf11c
   11c6c:	movt	r3, #2
   11c70:	mov	r0, r2
   11c74:	str	r2, [r3]
   11c78:	b	11bc4 <__assert_fail@plt+0x80c>
   11c7c:	mov	r0, #7
   11c80:	b	11bc4 <__assert_fail@plt+0x80c>
   11c84:	ldrb	r3, [r0]
   11c88:	cmp	r3, #0
   11c8c:	beq	1208c <__assert_fail@plt+0xcd4>
   11c90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c94:	mov	r4, r0
   11c98:	strd	r6, [sp, #8]
   11c9c:	strd	r8, [sp, #16]
   11ca0:	strd	sl, [sp, #24]
   11ca4:	str	lr, [sp, #32]
   11ca8:	sub	sp, sp, #36	; 0x24
   11cac:	b	11cbc <__assert_fail@plt+0x904>
   11cb0:	ldrb	r3, [r4, #2]!
   11cb4:	cmp	r3, #0
   11cb8:	beq	11e80 <__assert_fail@plt+0xac8>
   11cbc:	ldrb	r3, [r4, #1]
   11cc0:	cmp	r3, #32
   11cc4:	beq	11cb0 <__assert_fail@plt+0x8f8>
   11cc8:	mov	r1, #64	; 0x40
   11ccc:	mov	r0, r4
   11cd0:	bl	11274 <strchr@plt>
   11cd4:	subs	r5, r0, #0
   11cd8:	beq	11d00 <__assert_fail@plt+0x948>
   11cdc:	movw	r0, #49464	; 0xc138
   11ce0:	movt	r0, #1
   11ce4:	add	sp, sp, #36	; 0x24
   11ce8:	ldrd	r4, [sp]
   11cec:	ldrd	r6, [sp, #8]
   11cf0:	ldrd	r8, [sp, #16]
   11cf4:	ldrd	sl, [sp, #24]
   11cf8:	add	sp, sp, #32
   11cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   11d00:	movw	r1, #48288	; 0xbca0
   11d04:	movt	r1, #1
   11d08:	mov	r0, r4
   11d0c:	bl	11340 <strpbrk@plt>
   11d10:	cmp	r0, #0
   11d14:	moveq	r5, r4
   11d18:	beq	11ddc <__assert_fail@plt+0xa24>
   11d1c:	mov	r1, #58	; 0x3a
   11d20:	mov	r0, r4
   11d24:	bl	11274 <strchr@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11e8c <__assert_fail@plt+0xad4>
   11d30:	mov	r0, r4
   11d34:	movw	r1, #48348	; 0xbcdc
   11d38:	movt	r1, #1
   11d3c:	add	r3, sp, #28
   11d40:	str	r5, [sp, #24]
   11d44:	add	r2, sp, #24
   11d48:	str	r5, [sp, #28]
   11d4c:	bl	11304 <sscanf@plt>
   11d50:	cmp	r0, #0
   11d54:	beq	11cdc <__assert_fail@plt+0x924>
   11d58:	movw	r3, #61724	; 0xf11c
   11d5c:	movt	r3, #2
   11d60:	ldrh	ip, [sp, #28]
   11d64:	ldr	r0, [r3, #236]	; 0xec
   11d68:	ldr	r2, [sp, #24]
   11d6c:	cmp	r0, #0
   11d70:	orr	ip, ip, r2, lsl #16
   11d74:	beq	11db8 <__assert_fail@plt+0xa00>
   11d78:	ldr	r1, [r3, #228]	; 0xe4
   11d7c:	ldr	r2, [r3, #232]	; 0xe8
   11d80:	and	r2, r2, ip
   11d84:	cmp	r1, r2
   11d88:	beq	11ce4 <__assert_fail@plt+0x92c>
   11d8c:	add	r3, r3, #228	; 0xe4
   11d90:	b	11da8 <__assert_fail@plt+0x9f0>
   11d94:	ldr	r2, [r2, #16]
   11d98:	ldr	r1, [r3, #12]!
   11d9c:	and	r2, r2, ip
   11da0:	cmp	r2, r1
   11da4:	beq	11ce4 <__assert_fail@plt+0x92c>
   11da8:	ldr	r0, [r3, #20]
   11dac:	mov	r2, r3
   11db0:	cmp	r0, #0
   11db4:	bne	11d94 <__assert_fail@plt+0x9dc>
   11db8:	movw	r3, #10436	; 0x28c4
   11dbc:	movt	r3, #3
   11dc0:	ldr	r3, [r3, #12]
   11dc4:	cmp	r3, #0
   11dc8:	bne	120a0 <__assert_fail@plt+0xce8>
   11dcc:	movw	r0, #48240	; 0xbc70
   11dd0:	movt	r0, #1
   11dd4:	b	11ce4 <__assert_fail@plt+0x92c>
   11dd8:	mov	r5, r2
   11ddc:	ldrb	r3, [r5, #1]
   11de0:	add	r2, r5, #1
   11de4:	cmp	r3, #0
   11de8:	bne	11dd8 <__assert_fail@plt+0xa20>
   11dec:	movw	r1, #48292	; 0xbca4
   11df0:	movt	r1, #1
   11df4:	mov	r2, #2
   11df8:	mov	r0, r4
   11dfc:	bl	11298 <strncasecmp@plt>
   11e00:	subs	r1, r0, #0
   11e04:	bne	11fcc <__assert_fail@plt+0xc14>
   11e08:	ldrb	r3, [r4, #2]
   11e0c:	sub	r2, r3, #48	; 0x30
   11e10:	cmp	r3, #32
   11e14:	cmpne	r2, #9
   11e18:	bhi	11fcc <__assert_fail@plt+0xc14>
   11e1c:	add	r0, r4, #2
   11e20:	mov	r2, #10
   11e24:	bl	110f4 <strtol@plt>
   11e28:	movw	r3, #5071	; 0x13cf
   11e2c:	movt	r3, #6
   11e30:	cmp	r0, r3
   11e34:	mov	r4, r0
   11e38:	bgt	1213c <__assert_fail@plt+0xd84>
   11e3c:	movw	r3, #61724	; 0xf11c
   11e40:	movt	r3, #2
   11e44:	ldr	r0, [r3, #8]
   11e48:	cmp	r0, #0
   11e4c:	addne	r3, r3, #12
   11e50:	beq	11dcc <__assert_fail@plt+0xa14>
   11e54:	ldrh	r2, [r3, #-8]
   11e58:	cmp	r4, r2
   11e5c:	blt	11e6c <__assert_fail@plt+0xab4>
   11e60:	ldrh	r2, [r3, #-6]
   11e64:	cmp	r4, r2
   11e68:	ble	11ce4 <__assert_fail@plt+0x92c>
   11e6c:	add	r3, r3, #8
   11e70:	ldr	r0, [r3, #-4]
   11e74:	cmp	r0, #0
   11e78:	bne	11e54 <__assert_fail@plt+0xa9c>
   11e7c:	b	11dcc <__assert_fail@plt+0xa14>
   11e80:	movw	r0, #48272	; 0xbc90
   11e84:	movt	r0, #1
   11e88:	b	11ce4 <__assert_fail@plt+0x92c>
   11e8c:	add	r0, sp, #28
   11e90:	add	r2, sp, #24
   11e94:	movw	r1, #48448	; 0xbd40
   11e98:	movt	r1, #1
   11e9c:	add	r3, sp, #20
   11ea0:	str	r2, [sp]
   11ea4:	add	r2, sp, #16
   11ea8:	str	r0, [sp, #4]
   11eac:	mov	r0, r4
   11eb0:	bl	11304 <sscanf@plt>
   11eb4:	cmp	r0, #4
   11eb8:	beq	11ff4 <__assert_fail@plt+0xc3c>
   11ebc:	movw	r8, #61724	; 0xf11c
   11ec0:	movt	r8, #2
   11ec4:	ldr	fp, [r8, #516]	; 0x204
   11ec8:	cmp	fp, #0
   11ecc:	beq	11f94 <__assert_fail@plt+0xbdc>
   11ed0:	mov	r3, r4
   11ed4:	mov	r9, #0
   11ed8:	ldrb	r6, [r3], #-1
   11edc:	add	r7, r8, #516	; 0x204
   11ee0:	str	r3, [sp, #12]
   11ee4:	cmp	r6, #0
   11ee8:	ldreq	r5, [sp, #12]
   11eec:	beq	11f0c <__assert_fail@plt+0xb54>
   11ef0:	mov	r5, r4
   11ef4:	b	11efc <__assert_fail@plt+0xb44>
   11ef8:	mov	r5, r2
   11efc:	ldrb	r3, [r5, #1]
   11f00:	add	r2, r5, #1
   11f04:	cmp	r3, #0
   11f08:	bne	11ef8 <__assert_fail@plt+0xb40>
   11f0c:	ldrb	r3, [fp]
   11f10:	cmp	r3, #0
   11f14:	beq	12098 <__assert_fail@plt+0xce0>
   11f18:	mov	sl, fp
   11f1c:	b	11f24 <__assert_fail@plt+0xb6c>
   11f20:	mov	sl, r2
   11f24:	ldrb	r3, [sl, #1]
   11f28:	add	r2, sl, #1
   11f2c:	cmp	r3, #0
   11f30:	bne	11f20 <__assert_fail@plt+0xb68>
   11f34:	cmp	r4, r5
   11f38:	cmpls	fp, sl
   11f3c:	bhi	11f84 <__assert_fail@plt+0xbcc>
   11f40:	bl	1122c <__ctype_tolower_loc@plt>
   11f44:	add	r3, sl, #1
   11f48:	ldr	sl, [r0]
   11f4c:	b	11f64 <__assert_fail@plt+0xbac>
   11f50:	cmp	fp, r2
   11f54:	beq	120b0 <__assert_fail@plt+0xcf8>
   11f58:	cmp	fp, lr
   11f5c:	cmpls	r4, r5
   11f60:	bhi	11f84 <__assert_fail@plt+0xbcc>
   11f64:	ldrb	ip, [r5], #-1
   11f68:	sub	r2, r3, #1
   11f6c:	sub	lr, r3, #2
   11f70:	ldrb	r0, [r3, #-1]
   11f74:	mov	r3, r2
   11f78:	ldr	ip, [sl, ip, lsl #2]
   11f7c:	cmp	ip, r0
   11f80:	beq	11f50 <__assert_fail@plt+0xb98>
   11f84:	add	r9, r9, #2
   11f88:	ldr	fp, [r7, r9, lsl #2]
   11f8c:	cmp	fp, #0
   11f90:	bne	11ee4 <__assert_fail@plt+0xb2c>
   11f94:	mov	r1, #46	; 0x2e
   11f98:	mov	r0, r4
   11f9c:	bl	11274 <strchr@plt>
   11fa0:	cmp	r0, #0
   11fa4:	beq	120bc <__assert_fail@plt+0xd04>
   11fa8:	movw	r3, #10436	; 0x28c4
   11fac:	movt	r3, #3
   11fb0:	ldr	r3, [r3, #12]
   11fb4:	cmp	r3, #0
   11fb8:	beq	11cdc <__assert_fail@plt+0x924>
   11fbc:	movw	r0, #48616	; 0xbde8
   11fc0:	movt	r0, #1
   11fc4:	bl	111fc <puts@plt>
   11fc8:	b	11cdc <__assert_fail@plt+0x924>
   11fcc:	sub	r0, r5, #1
   11fd0:	movw	r1, #48344	; 0xbcd8
   11fd4:	movt	r1, #1
   11fd8:	mov	r2, #2
   11fdc:	bl	11298 <strncasecmp@plt>
   11fe0:	cmp	r0, #0
   11fe4:	movweq	r0, #48256	; 0xbc80
   11fe8:	movteq	r0, #1
   11fec:	beq	11ce4 <__assert_fail@plt+0x92c>
   11ff0:	b	11cdc <__assert_fail@plt+0x924>
   11ff4:	ldrd	r0, [sp, #16]
   11ff8:	ldrd	r2, [sp, #24]
   11ffc:	lsl	r1, r1, #16
   12000:	add	r1, r1, r0, lsl #24
   12004:	add	r1, r1, r2, lsl #8
   12008:	adds	r1, r1, r3
   1200c:	beq	11ebc <__assert_fail@plt+0xb04>
   12010:	movw	r3, #65172	; 0xfe94
   12014:	movt	r3, #2
   12018:	ldr	r0, [r3, #8]
   1201c:	cmp	r0, #0
   12020:	beq	12060 <__assert_fail@plt+0xca8>
   12024:	ldr	ip, [r3]
   12028:	ldr	r2, [r3, #4]
   1202c:	and	r2, r2, r1
   12030:	cmp	ip, r2
   12034:	bne	12050 <__assert_fail@plt+0xc98>
   12038:	b	11ce4 <__assert_fail@plt+0x92c>
   1203c:	ldr	r2, [r2, #16]
   12040:	ldr	ip, [r3, #12]!
   12044:	and	r2, r2, r1
   12048:	cmp	r2, ip
   1204c:	beq	11ce4 <__assert_fail@plt+0x92c>
   12050:	ldr	r0, [r3, #20]
   12054:	mov	r2, r3
   12058:	cmp	r0, #0
   1205c:	bne	1203c <__assert_fail@plt+0xc84>
   12060:	movw	r3, #10436	; 0x28c4
   12064:	movt	r3, #3
   12068:	ldr	r3, [r3, #12]
   1206c:	cmp	r3, #0
   12070:	beq	11dcc <__assert_fail@plt+0xa14>
   12074:	movw	r0, #48460	; 0xbd4c
   12078:	movt	r0, #1
   1207c:	bl	111fc <puts@plt>
   12080:	movw	r0, #48240	; 0xbc70
   12084:	movt	r0, #1
   12088:	b	11ce4 <__assert_fail@plt+0x92c>
   1208c:	movw	r0, #48272	; 0xbc90
   12090:	movt	r0, #1
   12094:	bx	lr
   12098:	sub	sl, fp, #1
   1209c:	b	11f34 <__assert_fail@plt+0xb7c>
   120a0:	movw	r0, #48356	; 0xbce4
   120a4:	movt	r0, #1
   120a8:	bl	111fc <puts@plt>
   120ac:	b	11dcc <__assert_fail@plt+0xa14>
   120b0:	add	r1, r8, r9, lsl #2
   120b4:	ldr	r0, [r1, #520]	; 0x208
   120b8:	b	11ce4 <__assert_fail@plt+0x92c>
   120bc:	ldr	r6, [r8, #2508]	; 0x9cc
   120c0:	cmp	r6, #0
   120c4:	beq	12110 <__assert_fail@plt+0xd58>
   120c8:	ldr	r7, [pc, #124]	; 1214c <__assert_fail@plt+0xd94>
   120cc:	mov	r5, r0
   120d0:	b	120e4 <__assert_fail@plt+0xd2c>
   120d4:	add	r5, r5, #2
   120d8:	ldr	r6, [r7, r5, lsl #2]
   120dc:	cmp	r6, #0
   120e0:	beq	12110 <__assert_fail@plt+0xd58>
   120e4:	mov	r0, r6
   120e8:	bl	11268 <strlen@plt>
   120ec:	mov	r2, r0
   120f0:	mov	r1, r6
   120f4:	mov	r0, r4
   120f8:	bl	11298 <strncasecmp@plt>
   120fc:	cmp	r0, #0
   12100:	bne	120d4 <__assert_fail@plt+0xd1c>
   12104:	add	r5, r8, r5, lsl #2
   12108:	ldr	r0, [r5, #2512]	; 0x9d0
   1210c:	b	11ce4 <__assert_fail@plt+0x92c>
   12110:	movw	r3, #10436	; 0x28c4
   12114:	movt	r3, #3
   12118:	ldr	r3, [r3, #12]
   1211c:	cmp	r3, #0
   12120:	beq	11dcc <__assert_fail@plt+0xa14>
   12124:	movw	r0, #48548	; 0xbda4
   12128:	movt	r0, #1
   1212c:	bl	111fc <puts@plt>
   12130:	movw	r0, #48240	; 0xbc70
   12134:	movt	r0, #1
   12138:	b	11ce4 <__assert_fail@plt+0x92c>
   1213c:	movw	r0, #48296	; 0xbca8
   12140:	movt	r0, #1
   12144:	bl	111fc <puts@plt>
   12148:	b	11e3c <__assert_fail@plt+0xa84>
   1214c:	andeq	pc, r2, r8, ror #21
   12150:	movw	r3, #5071	; 0x13cf
   12154:	movt	r3, #6
   12158:	strd	r4, [sp, #-16]!
   1215c:	cmp	r0, r3
   12160:	mov	r5, r0
   12164:	str	r6, [sp, #8]
   12168:	mov	r4, r1
   1216c:	str	lr, [sp, #12]
   12170:	bgt	121c4 <__assert_fail@plt+0xe0c>
   12174:	ldr	r0, [r4, #4]
   12178:	cmp	r0, #0
   1217c:	beq	121ac <__assert_fail@plt+0xdf4>
   12180:	add	r1, r4, #8
   12184:	ldrh	r3, [r1, #-8]
   12188:	cmp	r3, r5
   1218c:	bgt	1219c <__assert_fail@plt+0xde4>
   12190:	ldrh	r3, [r1, #-6]
   12194:	cmp	r3, r5
   12198:	bge	121b4 <__assert_fail@plt+0xdfc>
   1219c:	add	r1, r1, #8
   121a0:	ldr	r0, [r1, #-4]
   121a4:	cmp	r0, #0
   121a8:	bne	12184 <__assert_fail@plt+0xdcc>
   121ac:	movw	r0, #48240	; 0xbc70
   121b0:	movt	r0, #1
   121b4:	ldrd	r4, [sp]
   121b8:	ldr	r6, [sp, #8]
   121bc:	add	sp, sp, #12
   121c0:	pop	{pc}		; (ldr pc, [sp], #4)
   121c4:	movw	r0, #48296	; 0xbca8
   121c8:	movt	r0, #1
   121cc:	bl	111fc <puts@plt>
   121d0:	b	12174 <__assert_fail@plt+0xdbc>
   121d4:	strd	r4, [sp, #-20]!	; 0xffffffec
   121d8:	mov	r5, r0
   121dc:	strd	r6, [sp, #8]
   121e0:	mov	r6, r1
   121e4:	str	lr, [sp, #16]
   121e8:	sub	sp, sp, #12
   121ec:	mov	r0, r6
   121f0:	add	r1, sp, #4
   121f4:	bl	110dc <inet_aton@plt>
   121f8:	ldr	r4, [r5]
   121fc:	cmp	r4, #0
   12200:	beq	12294 <__assert_fail@plt+0xedc>
   12204:	mov	r7, r0
   12208:	b	12218 <__assert_fail@plt+0xe60>
   1220c:	ldr	r4, [r5, #4]!
   12210:	cmp	r4, #0
   12214:	beq	12294 <__assert_fail@plt+0xedc>
   12218:	mov	r1, r6
   1221c:	mov	r0, r4
   12220:	bl	110e8 <strcmp@plt>
   12224:	cmp	r0, #0
   12228:	beq	1227c <__assert_fail@plt+0xec4>
   1222c:	cmp	r7, #0
   12230:	beq	1220c <__assert_fail@plt+0xe54>
   12234:	mov	r0, r4
   12238:	bl	11370 <gethostbyname@plt>
   1223c:	cmp	r0, #0
   12240:	beq	1220c <__assert_fail@plt+0xe54>
   12244:	ldr	r2, [r0, #16]
   12248:	ldr	r3, [r2]
   1224c:	cmp	r3, #0
   12250:	beq	1220c <__assert_fail@plt+0xe54>
   12254:	ldr	r3, [r3]
   12258:	ldr	r1, [sp, #4]
   1225c:	cmp	r3, r1
   12260:	beq	1227c <__assert_fail@plt+0xec4>
   12264:	ldr	r3, [r2, #4]!
   12268:	cmp	r3, #0
   1226c:	beq	1220c <__assert_fail@plt+0xe54>
   12270:	ldr	r3, [r3]
   12274:	cmp	r3, r1
   12278:	bne	12264 <__assert_fail@plt+0xeac>
   1227c:	mov	r0, #1
   12280:	add	sp, sp, #12
   12284:	ldrd	r4, [sp]
   12288:	ldrd	r6, [sp, #8]
   1228c:	add	sp, sp, #16
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	mov	r0, #0
   12298:	b	12280 <__assert_fail@plt+0xec8>
   1229c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   122a0:	mov	r4, r0
   122a4:	mov	r0, r1
   122a8:	strd	r6, [sp, #8]
   122ac:	movw	r7, #61724	; 0xf11c
   122b0:	movt	r7, #2
   122b4:	strd	r8, [sp, #16]
   122b8:	mov	r8, r2
   122bc:	mov	r9, r1
   122c0:	strd	sl, [sp, #24]
   122c4:	str	lr, [sp, #32]
   122c8:	sub	sp, sp, #12
   122cc:	bl	11268 <strlen@plt>
   122d0:	mov	r5, r0
   122d4:	mov	r0, r8
   122d8:	bl	11268 <strlen@plt>
   122dc:	add	r0, r5, r0
   122e0:	add	r0, r0, #13
   122e4:	bl	15700 <_obstack_memory_used@@Base+0xc98>
   122e8:	mov	r5, r0
   122ec:	mov	r3, #0
   122f0:	mov	r0, r4
   122f4:	add	r1, sp, #4
   122f8:	strb	r3, [r5]
   122fc:	bl	110dc <inet_aton@plt>
   12300:	ldr	r6, [r7, #2580]	; 0xa14
   12304:	cmp	r6, #0
   12308:	beq	12400 <__assert_fail@plt+0x1048>
   1230c:	mov	fp, r0
   12310:	ldr	sl, [pc, #772]	; 1261c <__assert_fail@plt+0x1264>
   12314:	b	12324 <__assert_fail@plt+0xf6c>
   12318:	ldr	r6, [sl, #4]!
   1231c:	cmp	r6, #0
   12320:	beq	12400 <__assert_fail@plt+0x1048>
   12324:	mov	r1, r4
   12328:	mov	r0, r6
   1232c:	bl	110e8 <strcmp@plt>
   12330:	cmp	r0, #0
   12334:	beq	12388 <__assert_fail@plt+0xfd0>
   12338:	cmp	fp, #0
   1233c:	beq	12318 <__assert_fail@plt+0xf60>
   12340:	mov	r0, r6
   12344:	bl	11370 <gethostbyname@plt>
   12348:	cmp	r0, #0
   1234c:	beq	12318 <__assert_fail@plt+0xf60>
   12350:	ldr	r3, [r0, #16]
   12354:	ldr	r2, [r3]
   12358:	cmp	r2, #0
   1235c:	beq	12318 <__assert_fail@plt+0xf60>
   12360:	ldr	r2, [r2]
   12364:	ldr	r1, [sp, #4]
   12368:	cmp	r2, r1
   1236c:	beq	12388 <__assert_fail@plt+0xfd0>
   12370:	ldr	r2, [r3, #4]!
   12374:	cmp	r2, #0
   12378:	beq	12318 <__assert_fail@plt+0xf60>
   1237c:	ldr	r2, [r2]
   12380:	cmp	r2, r1
   12384:	bne	12370 <__assert_fail@plt+0xfb8>
   12388:	mov	r0, r5
   1238c:	bl	11268 <strlen@plt>
   12390:	movw	r3, #48676	; 0xbe24
   12394:	movt	r3, #1
   12398:	ldrb	lr, [r9]
   1239c:	add	r2, r5, r0
   123a0:	ldrb	r1, [r3, #8]
   123a4:	ldr	ip, [r3]
   123a8:	cmp	lr, #0
   123ac:	ldr	r3, [r3, #4]
   123b0:	str	ip, [r5, r0]
   123b4:	str	r3, [r2, #4]
   123b8:	strb	r1, [r2, #8]
   123bc:	bne	123ec <__assert_fail@plt+0x1034>
   123c0:	mov	r1, r8
   123c4:	mov	r0, r5
   123c8:	bl	111cc <strcat@plt>
   123cc:	mov	r0, r5
   123d0:	add	sp, sp, #12
   123d4:	ldrd	r4, [sp]
   123d8:	ldrd	r6, [sp, #8]
   123dc:	ldrd	r8, [sp, #16]
   123e0:	ldrd	sl, [sp, #24]
   123e4:	add	sp, sp, #32
   123e8:	pop	{pc}		; (ldr pc, [sp], #4)
   123ec:	add	r0, r0, #8
   123f0:	mov	r1, r9
   123f4:	add	r0, r5, r0
   123f8:	bl	111d8 <strcpy@plt>
   123fc:	b	123c0 <__assert_fail@plt+0x1008>
   12400:	add	r1, sp, #4
   12404:	mov	r0, r4
   12408:	bl	110dc <inet_aton@plt>
   1240c:	ldr	r6, [r7, #2640]	; 0xa50
   12410:	mov	sl, r0
   12414:	cmp	r6, #0
   12418:	ldrne	r7, [pc, #512]	; 12620 <__assert_fail@plt+0x1268>
   1241c:	bne	12430 <__assert_fail@plt+0x1078>
   12420:	b	12498 <__assert_fail@plt+0x10e0>
   12424:	ldr	r6, [r7, #4]!
   12428:	cmp	r6, #0
   1242c:	beq	12498 <__assert_fail@plt+0x10e0>
   12430:	mov	r1, r4
   12434:	mov	r0, r6
   12438:	bl	110e8 <strcmp@plt>
   1243c:	cmp	r0, #0
   12440:	beq	12388 <__assert_fail@plt+0xfd0>
   12444:	cmp	sl, #0
   12448:	beq	12424 <__assert_fail@plt+0x106c>
   1244c:	mov	r0, r6
   12450:	bl	11370 <gethostbyname@plt>
   12454:	cmp	r0, #0
   12458:	beq	12424 <__assert_fail@plt+0x106c>
   1245c:	ldr	r3, [r0, #16]
   12460:	ldr	r2, [r3]
   12464:	cmp	r2, #0
   12468:	beq	12424 <__assert_fail@plt+0x106c>
   1246c:	ldr	r2, [r2]
   12470:	ldr	r1, [sp, #4]
   12474:	cmp	r1, r2
   12478:	beq	12388 <__assert_fail@plt+0xfd0>
   1247c:	ldr	r2, [r3, #4]!
   12480:	cmp	r2, #0
   12484:	beq	12424 <__assert_fail@plt+0x106c>
   12488:	ldr	r2, [r2]
   1248c:	cmp	r2, r1
   12490:	bne	1247c <__assert_fail@plt+0x10c4>
   12494:	b	12388 <__assert_fail@plt+0xfd0>
   12498:	ldrb	r3, [r9]
   1249c:	cmp	r3, #0
   124a0:	beq	124c8 <__assert_fail@plt+0x1110>
   124a4:	movw	r1, #48688	; 0xbe30
   124a8:	movt	r1, #1
   124ac:	mov	r0, r4
   124b0:	bl	110e8 <strcmp@plt>
   124b4:	cmp	r0, #0
   124b8:	bne	125f4 <__assert_fail@plt+0x123c>
   124bc:	mov	r1, r9
   124c0:	mov	r0, r5
   124c4:	bl	111cc <strcat@plt>
   124c8:	movw	r1, #48240	; 0xbc70
   124cc:	movt	r1, #1
   124d0:	mov	r0, r4
   124d4:	bl	110e8 <strcmp@plt>
   124d8:	cmp	r0, #0
   124dc:	beq	12598 <__assert_fail@plt+0x11e0>
   124e0:	movw	r1, #48764	; 0xbe7c
   124e4:	movt	r1, #1
   124e8:	mov	r0, r4
   124ec:	bl	110e8 <strcmp@plt>
   124f0:	cmp	r0, #0
   124f4:	beq	12598 <__assert_fail@plt+0x11e0>
   124f8:	movw	r1, #48688	; 0xbe30
   124fc:	movt	r1, #1
   12500:	mov	r0, r4
   12504:	bl	110e8 <strcmp@plt>
   12508:	cmp	r0, #0
   1250c:	beq	125dc <__assert_fail@plt+0x1224>
   12510:	movw	r1, #48808	; 0xbea8
   12514:	movt	r1, #1
   12518:	mov	r0, r4
   1251c:	bl	110e8 <strcmp@plt>
   12520:	cmp	r0, #0
   12524:	bne	1253c <__assert_fail@plt+0x1184>
   12528:	mov	r1, #32
   1252c:	mov	r0, r8
   12530:	bl	11274 <strchr@plt>
   12534:	cmp	r0, #0
   12538:	beq	12604 <__assert_fail@plt+0x124c>
   1253c:	mov	r0, r4
   12540:	movw	r1, #48256	; 0xbc80
   12544:	movt	r1, #1
   12548:	bl	110e8 <strcmp@plt>
   1254c:	cmp	r0, #0
   12550:	bne	123c0 <__assert_fail@plt+0x1008>
   12554:	movw	r0, #48840	; 0xbec8
   12558:	movt	r0, #1
   1255c:	bl	111f0 <getenv@plt>
   12560:	cmp	r0, #0
   12564:	beq	12580 <__assert_fail@plt+0x11c8>
   12568:	movw	r1, #48848	; 0xbed0
   1256c:	movt	r1, #1
   12570:	mov	r2, #2
   12574:	bl	11388 <strncmp@plt>
   12578:	cmp	r0, #0
   1257c:	beq	123c0 <__assert_fail@plt+0x1008>
   12580:	mov	r2, r8
   12584:	movw	r1, #48852	; 0xbed4
   12588:	movt	r1, #1
   1258c:	mov	r0, r5
   12590:	bl	11310 <sprintf@plt>
   12594:	b	123cc <__assert_fail@plt+0x1014>
   12598:	movw	r1, #48780	; 0xbe8c
   1259c:	movt	r1, #1
   125a0:	mov	r2, #2
   125a4:	mov	r0, r8
   125a8:	bl	11298 <strncasecmp@plt>
   125ac:	cmp	r0, #0
   125b0:	bne	124f8 <__assert_fail@plt+0x1140>
   125b4:	ldrb	r3, [r8, #2]
   125b8:	sub	r3, r3, #48	; 0x30
   125bc:	cmp	r3, #9
   125c0:	bhi	124f8 <__assert_fail@plt+0x1140>
   125c4:	add	r2, r8, #2
   125c8:	movw	r1, #48784	; 0xbe90
   125cc:	movt	r1, #1
   125d0:	mov	r0, r5
   125d4:	bl	11310 <sprintf@plt>
   125d8:	b	123cc <__assert_fail@plt+0x1014>
   125dc:	mov	r2, r8
   125e0:	movw	r1, #48792	; 0xbe98
   125e4:	movt	r1, #1
   125e8:	mov	r0, r5
   125ec:	bl	11310 <sprintf@plt>
   125f0:	b	123cc <__assert_fail@plt+0x1014>
   125f4:	movw	r0, #48708	; 0xbe44
   125f8:	movt	r0, #1
   125fc:	bl	111fc <puts@plt>
   12600:	b	124c8 <__assert_fail@plt+0x1110>
   12604:	mov	r2, r8
   12608:	movw	r1, #48828	; 0xbebc
   1260c:	movt	r1, #1
   12610:	mov	r0, r5
   12614:	bl	11310 <sprintf@plt>
   12618:	b	123cc <__assert_fail@plt+0x1014>
   1261c:	andeq	pc, r2, r0, lsr fp	; <UNPREDICTABLE>
   12620:	andeq	pc, r2, ip, ror #22
   12624:	b	113a0 <close@plt>
   12628:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1262c:	strd	r6, [sp, #8]
   12630:	str	r8, [sp, #16]
   12634:	str	lr, [sp, #20]
   12638:	ldrb	r3, [r0]
   1263c:	cmp	r3, #0
   12640:	beq	12724 <__assert_fail@plt+0x136c>
   12644:	mov	r5, r0
   12648:	b	12650 <__assert_fail@plt+0x1298>
   1264c:	mov	r5, r2
   12650:	ldrb	r3, [r5, #1]
   12654:	add	r2, r5, #1
   12658:	cmp	r3, #0
   1265c:	bne	1264c <__assert_fail@plt+0x1294>
   12660:	ldrb	r3, [r1]
   12664:	cmp	r3, #0
   12668:	beq	1271c <__assert_fail@plt+0x1364>
   1266c:	mov	r4, r1
   12670:	b	12678 <__assert_fail@plt+0x12c0>
   12674:	mov	r4, r2
   12678:	ldrb	r3, [r4, #1]
   1267c:	add	r2, r4, #1
   12680:	cmp	r3, #0
   12684:	bne	12674 <__assert_fail@plt+0x12bc>
   12688:	cmp	r1, r4
   1268c:	cmpls	r0, r5
   12690:	movls	ip, #1
   12694:	movhi	ip, #0
   12698:	bhi	1270c <__assert_fail@plt+0x1354>
   1269c:	mov	r6, r1
   126a0:	mov	r7, r0
   126a4:	bl	1122c <__ctype_tolower_loc@plt>
   126a8:	add	r3, r4, #1
   126ac:	mov	r2, r5
   126b0:	ldr	r4, [r0]
   126b4:	b	126d4 <__assert_fail@plt+0x131c>
   126b8:	cmp	r6, r1
   126bc:	beq	12714 <__assert_fail@plt+0x135c>
   126c0:	cmp	r6, ip
   126c4:	cmpls	r7, r2
   126c8:	movls	ip, #1
   126cc:	movhi	ip, #0
   126d0:	bhi	1270c <__assert_fail@plt+0x1354>
   126d4:	ldrb	r0, [r2], #-1
   126d8:	sub	r1, r3, #1
   126dc:	sub	ip, r3, #2
   126e0:	ldrb	lr, [r3, #-1]
   126e4:	mov	r3, r1
   126e8:	ldr	r0, [r4, r0, lsl #2]
   126ec:	cmp	lr, r0
   126f0:	beq	126b8 <__assert_fail@plt+0x1300>
   126f4:	mov	r0, #0
   126f8:	ldrd	r4, [sp]
   126fc:	ldrd	r6, [sp, #8]
   12700:	ldr	r8, [sp, #16]
   12704:	add	sp, sp, #20
   12708:	pop	{pc}		; (ldr pc, [sp], #4)
   1270c:	mov	r0, ip
   12710:	b	126f8 <__assert_fail@plt+0x1340>
   12714:	mov	r0, #1
   12718:	b	126f8 <__assert_fail@plt+0x1340>
   1271c:	sub	r4, r1, #1
   12720:	b	12688 <__assert_fail@plt+0x12d0>
   12724:	sub	r5, r0, #1
   12728:	b	12660 <__assert_fail@plt+0x12a8>
   1272c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12730:	strd	r6, [sp, #8]
   12734:	ldr	r6, [r1]
   12738:	strd	r8, [sp, #16]
   1273c:	str	sl, [sp, #24]
   12740:	str	lr, [sp, #28]
   12744:	cmp	r6, #0
   12748:	beq	1280c <__assert_fail@plt+0x1454>
   1274c:	mov	sl, r0
   12750:	mov	r7, r0
   12754:	ldrb	r9, [sl], #-1
   12758:	mov	r8, r1
   1275c:	cmp	r9, #0
   12760:	moveq	r5, sl
   12764:	beq	12784 <__assert_fail@plt+0x13cc>
   12768:	mov	r5, r7
   1276c:	b	12774 <__assert_fail@plt+0x13bc>
   12770:	mov	r5, r2
   12774:	ldrb	r3, [r5, #1]
   12778:	add	r2, r5, #1
   1277c:	cmp	r3, #0
   12780:	bne	12770 <__assert_fail@plt+0x13b8>
   12784:	ldrb	r3, [r6]
   12788:	cmp	r3, #0
   1278c:	beq	12830 <__assert_fail@plt+0x1478>
   12790:	mov	r4, r6
   12794:	b	1279c <__assert_fail@plt+0x13e4>
   12798:	mov	r4, r2
   1279c:	ldrb	r3, [r4, #1]
   127a0:	add	r2, r4, #1
   127a4:	cmp	r3, #0
   127a8:	bne	12798 <__assert_fail@plt+0x13e0>
   127ac:	cmp	r6, r4
   127b0:	cmpls	r7, r5
   127b4:	bhi	12800 <__assert_fail@plt+0x1448>
   127b8:	bl	1122c <__ctype_tolower_loc@plt>
   127bc:	ldr	r1, [r0]
   127c0:	b	127ec <__assert_fail@plt+0x1434>
   127c4:	cmp	r6, r4
   127c8:	sub	r4, r4, #1
   127cc:	beq	12828 <__assert_fail@plt+0x1470>
   127d0:	cmp	r7, r5
   127d4:	movhi	r3, #0
   127d8:	movls	r3, #1
   127dc:	cmp	r4, r6
   127e0:	movcc	r3, #0
   127e4:	cmp	r3, #0
   127e8:	beq	12800 <__assert_fail@plt+0x1448>
   127ec:	ldrb	r2, [r5], #-1
   127f0:	ldrb	r3, [r4]
   127f4:	ldr	r2, [r1, r2, lsl #2]
   127f8:	cmp	r2, r3
   127fc:	beq	127c4 <__assert_fail@plt+0x140c>
   12800:	ldr	r6, [r8, #4]!
   12804:	cmp	r6, #0
   12808:	bne	1275c <__assert_fail@plt+0x13a4>
   1280c:	mov	r0, r6
   12810:	ldrd	r4, [sp]
   12814:	ldrd	r6, [sp, #8]
   12818:	ldrd	r8, [sp, #16]
   1281c:	ldr	sl, [sp, #24]
   12820:	add	sp, sp, #28
   12824:	pop	{pc}		; (ldr pc, [sp], #4)
   12828:	mov	r0, #1
   1282c:	b	12810 <__assert_fail@plt+0x1458>
   12830:	sub	r4, r6, #1
   12834:	b	127ac <__assert_fail@plt+0x13f4>
   12838:	subs	r3, r0, #0
   1283c:	beq	128a0 <__assert_fail@plt+0x14e8>
   12840:	push	{lr}		; (str lr, [sp, #-4]!)
   12844:	sub	sp, sp, #28
   12848:	movw	r1, #48448	; 0xbd40
   1284c:	movt	r1, #1
   12850:	add	ip, sp, #20
   12854:	add	r2, sp, #16
   12858:	add	r3, sp, #12
   1285c:	stm	sp, {r2, ip}
   12860:	add	r2, sp, #8
   12864:	bl	11304 <sscanf@plt>
   12868:	cmp	r0, #4
   1286c:	movne	r0, #0
   12870:	beq	1287c <__assert_fail@plt+0x14c4>
   12874:	add	sp, sp, #28
   12878:	pop	{pc}		; (ldr pc, [sp], #4)
   1287c:	add	r0, sp, #12
   12880:	ldr	r1, [sp, #8]
   12884:	ldm	r0, {r0, r2, r3}
   12888:	lsl	r0, r0, #16
   1288c:	add	r0, r0, r1, lsl #24
   12890:	add	r0, r0, r2, lsl #8
   12894:	add	r0, r0, r3
   12898:	add	sp, sp, #28
   1289c:	pop	{pc}		; (ldr pc, [sp], #4)
   128a0:	mov	r0, r3
   128a4:	bx	lr
   128a8:	push	{r0, r1, r2, r3}
   128ac:	movw	r4, #10424	; 0x28b8
   128b0:	movt	r4, #3
   128b4:	push	{lr}		; (str lr, [sp, #-4]!)
   128b8:	sub	sp, sp, #12
   128bc:	add	r3, sp, #20
   128c0:	ldr	r0, [r4]
   128c4:	mov	r2, r3
   128c8:	ldr	r1, [sp, #16]
   128cc:	str	r3, [sp, #4]
   128d0:	bl	112ec <vfprintf@plt>
   128d4:	bl	1128c <__errno_location@plt>
   128d8:	ldr	r4, [r4]
   128dc:	ldr	r0, [r0]
   128e0:	bl	11220 <strerror@plt>
   128e4:	mov	r2, r0
   128e8:	movw	r1, #48860	; 0xbedc
   128ec:	movt	r1, #1
   128f0:	mov	r0, r4
   128f4:	bl	11280 <fprintf@plt>
   128f8:	mov	r0, #1
   128fc:	bl	1125c <exit@plt>
   12900:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12904:	mov	r4, r0
   12908:	mov	r0, r1
   1290c:	strd	r6, [sp, #8]
   12910:	mov	r5, r1
   12914:	strd	r8, [sp, #16]
   12918:	str	lr, [sp, #24]
   1291c:	sub	sp, sp, #108	; 0x6c
   12920:	bl	11268 <strlen@plt>
   12924:	add	r0, r0, #4
   12928:	bl	15700 <_obstack_memory_used@@Base+0xc98>
   1292c:	mov	r3, #61	; 0x3d
   12930:	mov	r8, r0
   12934:	mov	r1, r5
   12938:	strb	r3, [r0], #1
   1293c:	bl	11190 <stpcpy@plt>
   12940:	movw	r3, #48868	; 0xbee4
   12944:	movt	r3, #1
   12948:	ldrh	ip, [r3]
   1294c:	mov	r2, r0
   12950:	movw	r1, #58084	; 0xe2e4
   12954:	movt	r1, #1
   12958:	mov	r0, r4
   1295c:	ldrb	r3, [r3, #2]
   12960:	strh	ip, [r2]
   12964:	strb	r3, [r2, #2]
   12968:	bl	110b8 <fdopen@plt>
   1296c:	mov	r5, r0
   12970:	mov	r0, r8
   12974:	bl	11268 <strlen@plt>
   12978:	mov	r2, r0
   1297c:	mov	r1, r8
   12980:	mov	r0, r4
   12984:	bl	112bc <write@plt>
   12988:	cmp	r0, #0
   1298c:	blt	12a98 <__assert_fail@plt+0x16e0>
   12990:	movw	r7, #48880	; 0xbef0
   12994:	movt	r7, #1
   12998:	movw	r6, #10428	; 0x28bc
   1299c:	movt	r6, #3
   129a0:	mov	r9, #0
   129a4:	b	129cc <__assert_fail@plt+0x1614>
   129a8:	mov	r2, #16
   129ac:	mov	r1, r7
   129b0:	add	r0, sp, #4
   129b4:	bl	11388 <strncmp@plt>
   129b8:	orrs	r3, r9, r0
   129bc:	beq	12a18 <__assert_fail@plt+0x1660>
   129c0:	add	r0, sp, #4
   129c4:	ldr	r1, [r6]
   129c8:	bl	1137c <fputs@plt>
   129cc:	mov	r2, r5
   129d0:	mov	r1, #100	; 0x64
   129d4:	add	r0, sp, #4
   129d8:	bl	1113c <fgets@plt>
   129dc:	cmp	r0, #0
   129e0:	bne	129a8 <__assert_fail@plt+0x15f0>
   129e4:	mov	r0, r5
   129e8:	bl	11148 <ferror@plt>
   129ec:	cmp	r0, #0
   129f0:	bne	12aa4 <__assert_fail@plt+0x16ec>
   129f4:	mov	r0, r8
   129f8:	bl	144f8 <argp_parse@@Base+0x1038>
   129fc:	mov	r0, r9
   12a00:	add	sp, sp, #108	; 0x6c
   12a04:	ldrd	r4, [sp]
   12a08:	ldrd	r6, [sp, #8]
   12a0c:	ldrd	r8, [sp, #16]
   12a10:	add	sp, sp, #24
   12a14:	pop	{pc}		; (ldr pc, [sp], #4)
   12a18:	ldrb	r3, [sp, #4]
   12a1c:	add	r4, sp, #4
   12a20:	cmp	r3, #58	; 0x3a
   12a24:	beq	12a34 <__assert_fail@plt+0x167c>
   12a28:	ldrb	r3, [r4, #1]!
   12a2c:	cmp	r3, #58	; 0x3a
   12a30:	bne	12a28 <__assert_fail@plt+0x1670>
   12a34:	ldrb	r3, [r4, #1]
   12a38:	add	r4, r4, #1
   12a3c:	cmp	r3, #32
   12a40:	bne	12a50 <__assert_fail@plt+0x1698>
   12a44:	ldrb	r3, [r4, #1]!
   12a48:	cmp	r3, #32
   12a4c:	beq	12a44 <__assert_fail@plt+0x168c>
   12a50:	mov	r0, r4
   12a54:	bl	11268 <strlen@plt>
   12a58:	add	r0, r0, #1
   12a5c:	bl	15700 <_obstack_memory_used@@Base+0xc98>
   12a60:	ldrb	r3, [r4]
   12a64:	mov	r9, r0
   12a68:	mov	r2, r0
   12a6c:	cmp	r3, #10
   12a70:	cmpne	r3, #13
   12a74:	beq	12a8c <__assert_fail@plt+0x16d4>
   12a78:	strb	r3, [r2], #1
   12a7c:	ldrb	r3, [r4, #1]!
   12a80:	cmp	r3, #10
   12a84:	cmpne	r3, #13
   12a88:	bne	12a78 <__assert_fail@plt+0x16c0>
   12a8c:	mov	r3, #0
   12a90:	strb	r3, [r2]
   12a94:	b	129c0 <__assert_fail@plt+0x1608>
   12a98:	movw	r0, #48872	; 0xbee8
   12a9c:	movt	r0, #1
   12aa0:	bl	128a8 <__assert_fail@plt+0x14f0>
   12aa4:	movw	r0, #48900	; 0xbf04
   12aa8:	movt	r0, #1
   12aac:	bl	128a8 <__assert_fail@plt+0x14f0>
   12ab0:	push	{r0, r1, r2, r3}
   12ab4:	movw	r4, #10424	; 0x28b8
   12ab8:	movt	r4, #3
   12abc:	push	{lr}		; (str lr, [sp, #-4]!)
   12ac0:	sub	sp, sp, #12
   12ac4:	add	r3, sp, #20
   12ac8:	ldr	r0, [r4]
   12acc:	mov	r2, r3
   12ad0:	ldr	r1, [sp, #16]
   12ad4:	str	r3, [sp, #4]
   12ad8:	bl	112ec <vfprintf@plt>
   12adc:	mov	r0, #10
   12ae0:	ldr	r1, [r4]
   12ae4:	bl	112f8 <fputc@plt>
   12ae8:	mov	r0, #1
   12aec:	bl	1125c <exit@plt>
   12af0:	mov	r2, #0
   12af4:	mov	r3, #0
   12af8:	strd	r4, [sp, #-16]!
   12afc:	mov	ip, #1
   12b00:	str	r6, [sp, #8]
   12b04:	subs	r5, r1, #0
   12b08:	str	lr, [sp, #12]
   12b0c:	sub	sp, sp, #40	; 0x28
   12b10:	mov	r6, r0
   12b14:	strd	r2, [sp, #8]
   12b18:	strd	r2, [sp, #16]
   12b1c:	str	ip, [sp, #16]
   12b20:	strd	r2, [sp, #24]
   12b24:	strd	r2, [sp, #32]
   12b28:	beq	12bf0 <__assert_fail@plt+0x1838>
   12b2c:	add	r4, sp, #4
   12b30:	add	r2, sp, #8
   12b34:	mov	r3, r4
   12b38:	bl	11358 <getaddrinfo@plt>
   12b3c:	cmp	r0, #0
   12b40:	beq	12b60 <__assert_fail@plt+0x17a8>
   12b44:	mov	r3, r4
   12b48:	add	r2, sp, #8
   12b4c:	mov	r1, r5
   12b50:	mov	r0, r6
   12b54:	bl	11358 <getaddrinfo@plt>
   12b58:	cmp	r0, #0
   12b5c:	bne	12c1c <__assert_fail@plt+0x1864>
   12b60:	ldr	r5, [sp, #4]
   12b64:	cmp	r5, #0
   12b68:	beq	12bb8 <__assert_fail@plt+0x1800>
   12b6c:	mov	r3, r5
   12b70:	ldrd	r0, [r3, #4]
   12b74:	ldr	r2, [r3, #12]
   12b78:	bl	11364 <socket@plt>
   12b7c:	subs	r4, r0, #0
   12b80:	blt	12ba4 <__assert_fail@plt+0x17ec>
   12b84:	ldr	r3, [sp, #4]
   12b88:	ldr	r2, [r3, #16]
   12b8c:	ldr	r1, [r3, #20]
   12b90:	bl	113ac <connect@plt>
   12b94:	cmp	r0, #0
   12b98:	beq	12bc4 <__assert_fail@plt+0x180c>
   12b9c:	mov	r0, r4
   12ba0:	bl	113a0 <close@plt>
   12ba4:	ldr	r3, [sp, #4]
   12ba8:	ldr	r3, [r3, #28]
   12bac:	cmp	r3, #0
   12bb0:	str	r3, [sp, #4]
   12bb4:	bne	12b70 <__assert_fail@plt+0x17b8>
   12bb8:	movw	r0, #48940	; 0xbf2c
   12bbc:	movt	r0, #1
   12bc0:	bl	128a8 <__assert_fail@plt+0x14f0>
   12bc4:	ldr	r3, [sp, #4]
   12bc8:	cmp	r3, #0
   12bcc:	beq	12bb8 <__assert_fail@plt+0x1800>
   12bd0:	mov	r0, r5
   12bd4:	bl	1134c <freeaddrinfo@plt>
   12bd8:	mov	r0, r4
   12bdc:	add	sp, sp, #40	; 0x28
   12be0:	ldrd	r4, [sp]
   12be4:	ldr	r6, [sp, #8]
   12be8:	add	sp, sp, #12
   12bec:	pop	{pc}		; (ldr pc, [sp], #4)
   12bf0:	add	r4, sp, #4
   12bf4:	movw	r1, #48932	; 0xbf24
   12bf8:	movt	r1, #1
   12bfc:	mov	r3, r4
   12c00:	add	r2, sp, #8
   12c04:	bl	11358 <getaddrinfo@plt>
   12c08:	cmp	r0, #0
   12c0c:	beq	12b60 <__assert_fail@plt+0x17a8>
   12c10:	movw	r5, #48908	; 0xbf0c
   12c14:	movt	r5, #1
   12c18:	b	12b44 <__assert_fail@plt+0x178c>
   12c1c:	bl	11130 <gai_strerror@plt>
   12c20:	mov	r1, r0
   12c24:	movw	r0, #48916	; 0xbf14
   12c28:	movt	r0, #1
   12c2c:	bl	12ab0 <__assert_fail@plt+0x16f8>
   12c30:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12c34:	mov	r4, r1
   12c38:	movw	r1, #58084	; 0xe2e4
   12c3c:	movt	r1, #1
   12c40:	strd	r6, [sp, #8]
   12c44:	mov	r6, r0
   12c48:	strd	r8, [sp, #16]
   12c4c:	movw	r8, #61724	; 0xf11c
   12c50:	movt	r8, #2
   12c54:	str	sl, [sp, #24]
   12c58:	str	lr, [sp, #28]
   12c5c:	sub	sp, sp, #1504	; 0x5e0
   12c60:	ldr	r5, [r8]
   12c64:	bl	110b8 <fdopen@plt>
   12c68:	mov	r7, r0
   12c6c:	mov	r0, r4
   12c70:	bl	11268 <strlen@plt>
   12c74:	mov	r2, r0
   12c78:	mov	r1, r4
   12c7c:	mov	r0, r6
   12c80:	bl	112bc <write@plt>
   12c84:	cmp	r0, #0
   12c88:	movwge	r9, #48948	; 0xbf34
   12c8c:	movge	r4, #0
   12c90:	movtge	r9, #1
   12c94:	addge	r6, r8, #2672	; 0xa70
   12c98:	blt	12eac <__assert_fail@plt+0x1af4>
   12c9c:	mov	r2, r7
   12ca0:	mov	r1, #200	; 0xc8
   12ca4:	add	r0, sp, #24
   12ca8:	bl	1113c <fgets@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12d80 <__assert_fail@plt+0x19c8>
   12cb4:	cmp	r5, #1
   12cb8:	beq	12e00 <__assert_fail@plt+0x1a48>
   12cbc:	cmp	r5, #0
   12cc0:	beq	12db4 <__assert_fail@plt+0x19fc>
   12cc4:	mov	r2, #10
   12cc8:	mov	r1, r9
   12ccc:	add	r0, sp, #24
   12cd0:	bl	11388 <strncmp@plt>
   12cd4:	cmp	r0, #0
   12cd8:	bne	12d04 <__assert_fail@plt+0x194c>
   12cdc:	add	ip, sp, #480	; 0x1e0
   12ce0:	add	r3, sp, #8
   12ce4:	add	r2, sp, #224	; 0xe0
   12ce8:	movw	r1, #48960	; 0xbf40
   12cec:	movt	r1, #1
   12cf0:	add	r0, sp, #24
   12cf4:	str	ip, [sp]
   12cf8:	bl	11304 <sscanf@plt>
   12cfc:	cmp	r0, #3
   12d00:	beq	12e2c <__assert_fail@plt+0x1a74>
   12d04:	ldrb	r2, [sp, #24]
   12d08:	add	ip, sp, #24
   12d0c:	cmp	r2, #13
   12d10:	cmpne	r2, #0
   12d14:	movne	r3, #1
   12d18:	moveq	r3, #0
   12d1c:	cmp	r2, #10
   12d20:	moveq	r3, #0
   12d24:	andne	r3, r3, #1
   12d28:	cmp	r3, #0
   12d2c:	beq	12d58 <__assert_fail@plt+0x19a0>
   12d30:	ldrb	r2, [ip, #1]!
   12d34:	subs	r3, r2, #13
   12d38:	movne	r3, #1
   12d3c:	cmp	r2, #0
   12d40:	moveq	r3, #0
   12d44:	cmp	r2, #10
   12d48:	moveq	r3, #0
   12d4c:	andne	r3, r3, #1
   12d50:	cmp	r3, #0
   12d54:	bne	12d30 <__assert_fail@plt+0x1978>
   12d58:	mov	lr, #0
   12d5c:	movw	r3, #10428	; 0x28bc
   12d60:	movt	r3, #3
   12d64:	movw	r1, #56568	; 0xdcf8
   12d68:	movt	r1, #1
   12d6c:	add	r2, sp, #24
   12d70:	strb	lr, [ip]
   12d74:	ldr	r0, [r3]
   12d78:	bl	11280 <fprintf@plt>
   12d7c:	b	12c9c <__assert_fail@plt+0x18e4>
   12d80:	mov	r0, r7
   12d84:	bl	11148 <ferror@plt>
   12d88:	cmp	r0, #0
   12d8c:	bne	12ec4 <__assert_fail@plt+0x1b0c>
   12d90:	cmp	r5, #1
   12d94:	beq	12eb8 <__assert_fail@plt+0x1b00>
   12d98:	add	sp, sp, #1504	; 0x5e0
   12d9c:	ldrd	r4, [sp]
   12da0:	ldrd	r6, [sp, #8]
   12da4:	ldrd	r8, [sp, #16]
   12da8:	ldr	sl, [sp, #24]
   12dac:	add	sp, sp, #28
   12db0:	pop	{pc}		; (ldr pc, [sp], #4)
   12db4:	ldr	sl, [r8, #2672]	; 0xa70
   12db8:	mov	r4, r5
   12dbc:	cmp	sl, #0
   12dc0:	bne	12dd8 <__assert_fail@plt+0x1a20>
   12dc4:	b	12cc4 <__assert_fail@plt+0x190c>
   12dc8:	add	r4, r4, #2
   12dcc:	ldr	sl, [r6, r4, lsl #2]
   12dd0:	cmp	sl, #0
   12dd4:	beq	12cc4 <__assert_fail@plt+0x190c>
   12dd8:	mov	r0, sl
   12ddc:	bl	11268 <strlen@plt>
   12de0:	mov	r2, r0
   12de4:	mov	r1, sl
   12de8:	add	r0, sp, #24
   12dec:	bl	11388 <strncmp@plt>
   12df0:	cmp	r0, #0
   12df4:	bne	12dc8 <__assert_fail@plt+0x1a10>
   12df8:	mov	r5, #1
   12dfc:	b	12c9c <__assert_fail@plt+0x18e4>
   12e00:	add	r3, r8, r4, lsl #2
   12e04:	ldr	r5, [r3, #2676]	; 0xa74
   12e08:	mov	r0, r5
   12e0c:	bl	11268 <strlen@plt>
   12e10:	mov	r2, r0
   12e14:	mov	r1, r5
   12e18:	add	r0, sp, #24
   12e1c:	bl	11388 <strncmp@plt>
   12e20:	adds	r5, r0, #0
   12e24:	movne	r5, #1
   12e28:	b	12c9c <__assert_fail@plt+0x18e4>
   12e2c:	movw	r3, #10436	; 0x28c4
   12e30:	movt	r3, #3
   12e34:	ldr	r3, [r3, #12]
   12e38:	cmp	r3, #0
   12e3c:	bne	12e94 <__assert_fail@plt+0x1adc>
   12e40:	add	r0, sp, #480	; 0x1e0
   12e44:	add	sl, sp, #480	; 0x1e0
   12e48:	bl	11268 <strlen@plt>
   12e4c:	movw	r3, #48868	; 0xbee4
   12e50:	movt	r3, #1
   12e54:	ldrh	lr, [r3]
   12e58:	mov	r2, r0
   12e5c:	add	ip, sp, #480	; 0x1e0
   12e60:	add	ip, ip, r2
   12e64:	add	r1, sp, #8
   12e68:	ldrb	r3, [r3, #2]
   12e6c:	add	r0, sp, #224	; 0xe0
   12e70:	strh	lr, [sl, r2]
   12e74:	strb	r3, [ip, #2]
   12e78:	bl	12af0 <__assert_fail@plt+0x1738>
   12e7c:	mov	sl, r0
   12e80:	add	r1, sp, #480	; 0x1e0
   12e84:	bl	12c30 <__assert_fail@plt+0x1878>
   12e88:	mov	r0, sl
   12e8c:	bl	113a0 <close@plt>
   12e90:	b	12c9c <__assert_fail@plt+0x18e4>
   12e94:	movw	r0, #49008	; 0xbf70
   12e98:	movt	r0, #1
   12e9c:	add	r2, sp, #224	; 0xe0
   12ea0:	add	r1, sp, #480	; 0x1e0
   12ea4:	bl	11100 <printf@plt>
   12ea8:	b	12e40 <__assert_fail@plt+0x1a88>
   12eac:	movw	r0, #48872	; 0xbee8
   12eb0:	movt	r0, #1
   12eb4:	bl	128a8 <__assert_fail@plt+0x14f0>
   12eb8:	movw	r0, #49040	; 0xbf90
   12ebc:	movt	r0, #1
   12ec0:	bl	12ab0 <__assert_fail@plt+0x16f8>
   12ec4:	movw	r0, #48900	; 0xbf04
   12ec8:	movt	r0, #1
   12ecc:	bl	128a8 <__assert_fail@plt+0x14f0>
   12ed0:	movw	r3, #10552	; 0x2938
   12ed4:	movt	r3, #3
   12ed8:	str	r4, [sp, #-8]!
   12edc:	mov	r4, r0
   12ee0:	ldr	r0, [r3]
   12ee4:	str	lr, [sp, #4]
   12ee8:	bl	113a0 <close@plt>
   12eec:	movw	r0, #49468	; 0xc13c
   12ef0:	movt	r0, #1
   12ef4:	mov	r1, r4
   12ef8:	bl	12ab0 <__assert_fail@plt+0x16f8>
   12efc:	ldr	r3, [r0]
   12f00:	strd	r4, [sp, #-16]!
   12f04:	ldr	r5, [r0, #16]
   12f08:	str	r6, [sp, #8]
   12f0c:	str	lr, [sp, #12]
   12f10:	cmp	r3, #0
   12f14:	beq	12fc0 <__assert_fail@plt+0x1c08>
   12f18:	ldr	r0, [r1, #8]
   12f1c:	mov	r2, #0
   12f20:	add	r0, r0, #1
   12f24:	str	r0, [r1, #8]
   12f28:	b	12f30 <__assert_fail@plt+0x1b78>
   12f2c:	add	r2, r2, #1
   12f30:	add	r3, r3, #24
   12f34:	ldr	r0, [r3, #-20]	; 0xffffffec
   12f38:	cmp	r0, #0
   12f3c:	bne	12f2c <__assert_fail@plt+0x1b74>
   12f40:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12f44:	cmp	r0, #0
   12f48:	bne	12f2c <__assert_fail@plt+0x1b74>
   12f4c:	ldr	r0, [r3, #-8]
   12f50:	cmp	r0, #0
   12f54:	bne	12f2c <__assert_fail@plt+0x1b74>
   12f58:	ldr	r0, [r3, #-4]
   12f5c:	cmp	r0, #0
   12f60:	bne	12f2c <__assert_fail@plt+0x1b74>
   12f64:	ldm	r1, {r0, r3}
   12f68:	add	ip, r2, r2, lsl #1
   12f6c:	add	r2, r3, r2
   12f70:	add	r0, r0, ip
   12f74:	stm	r1, {r0, r2}
   12f78:	cmp	r5, #0
   12f7c:	beq	12fb0 <__assert_fail@plt+0x1bf8>
   12f80:	ldr	r0, [r5]
   12f84:	cmp	r0, #0
   12f88:	beq	12fb0 <__assert_fail@plt+0x1bf8>
   12f8c:	mov	r4, r1
   12f90:	mov	r1, r4
   12f94:	bl	12efc <__assert_fail@plt+0x1b44>
   12f98:	ldr	r3, [r4, #12]
   12f9c:	ldr	r0, [r5, #16]!
   12fa0:	add	r3, r3, #1
   12fa4:	cmp	r0, #0
   12fa8:	str	r3, [r4, #12]
   12fac:	bne	12f90 <__assert_fail@plt+0x1bd8>
   12fb0:	ldrd	r4, [sp]
   12fb4:	ldr	r6, [sp, #8]
   12fb8:	add	sp, sp, #12
   12fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc0:	ldr	r3, [r0, #4]
   12fc4:	cmp	r3, #0
   12fc8:	beq	12f78 <__assert_fail@plt+0x1bc0>
   12fcc:	ldr	r3, [r1, #8]
   12fd0:	add	r3, r3, #1
   12fd4:	str	r3, [r1, #8]
   12fd8:	b	12f78 <__assert_fail@plt+0x1bc0>
   12fdc:	cmp	r0, #86	; 0x56
   12fe0:	beq	12fec <__assert_fail@plt+0x1c34>
   12fe4:	mov	r0, #7
   12fe8:	bx	lr
   12fec:	movw	r3, #10456	; 0x28d8
   12ff0:	movt	r3, #3
   12ff4:	str	r4, [sp, #-8]!
   12ff8:	ldr	r3, [r3]
   12ffc:	mov	r4, r2
   13000:	str	lr, [sp, #4]
   13004:	cmp	r3, #0
   13008:	beq	13038 <__assert_fail@plt+0x1c80>
   1300c:	mov	r1, r2
   13010:	ldr	r0, [r2, #48]	; 0x30
   13014:	blx	r3
   13018:	ldr	r0, [r4, #16]
   1301c:	ands	r0, r0, #32
   13020:	beq	13034 <__assert_fail@plt+0x1c7c>
   13024:	ldr	r4, [sp]
   13028:	add	sp, sp, #4
   1302c:	mov	r0, #0
   13030:	pop	{pc}		; (ldr pc, [sp], #4)
   13034:	bl	1125c <exit@plt>
   13038:	movw	r3, #10560	; 0x2940
   1303c:	movt	r3, #3
   13040:	ldr	r2, [r3]
   13044:	cmp	r2, #0
   13048:	beq	13060 <__assert_fail@plt+0x1ca8>
   1304c:	movw	r1, #56568	; 0xdcf8
   13050:	movt	r1, #1
   13054:	ldr	r0, [r4, #48]	; 0x30
   13058:	bl	11280 <fprintf@plt>
   1305c:	b	13018 <__assert_fail@plt+0x1c60>
   13060:	movw	r2, #56132	; 0xdb44
   13064:	movt	r2, #1
   13068:	movw	r1, #56168	; 0xdb68
   1306c:	movt	r1, #1
   13070:	mov	r0, r4
   13074:	bl	19ec0 <argp_error@@Base>
   13078:	b	13018 <__assert_fail@plt+0x1c60>
   1307c:	cmn	r0, #3
   13080:	str	r4, [sp, #-8]!
   13084:	mov	r4, r2
   13088:	str	lr, [sp, #4]
   1308c:	sub	sp, sp, #8
   13090:	beq	13190 <__assert_fail@plt+0x1dd8>
   13094:	ble	130cc <__assert_fail@plt+0x1d14>
   13098:	cmn	r0, #2
   1309c:	beq	13144 <__assert_fail@plt+0x1d8c>
   130a0:	cmp	r0, #63	; 0x3f
   130a4:	bne	13130 <__assert_fail@plt+0x1d78>
   130a8:	mov	r0, r4
   130ac:	movw	r2, #634	; 0x27a
   130b0:	ldr	r1, [r4, #48]	; 0x30
   130b4:	bl	19e00 <argp_state_help@@Base>
   130b8:	mov	r0, #0
   130bc:	add	sp, sp, #8
   130c0:	ldr	r4, [sp]
   130c4:	add	sp, sp, #4
   130c8:	pop	{pc}		; (ldr pc, [sp], #4)
   130cc:	cmn	r0, #4
   130d0:	bne	13130 <__assert_fail@plt+0x1d78>
   130d4:	cmp	r1, #0
   130d8:	movw	r0, #56172	; 0xdb6c
   130dc:	movt	r0, #1
   130e0:	mov	r2, #10
   130e4:	movne	r0, r1
   130e8:	movw	r4, #10452	; 0x28d4
   130ec:	movt	r4, #3
   130f0:	mov	r1, #0
   130f4:	bl	110f4 <strtol@plt>
   130f8:	str	r0, [r4]
   130fc:	b	13108 <__assert_fail@plt+0x1d50>
   13100:	mov	r0, #1
   13104:	bl	11184 <sleep@plt>
   13108:	ldr	r3, [r4]
   1310c:	sub	r2, r3, #1
   13110:	cmp	r3, #0
   13114:	str	r2, [r4]
   13118:	bgt	13100 <__assert_fail@plt+0x1d48>
   1311c:	mov	r0, #0
   13120:	add	sp, sp, #8
   13124:	ldr	r4, [sp]
   13128:	add	sp, sp, #4
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	mov	r0, #7
   13134:	add	sp, sp, #8
   13138:	ldr	r4, [sp]
   1313c:	add	sp, sp, #4
   13140:	pop	{pc}		; (ldr pc, [sp], #4)
   13144:	movw	r3, #10420	; 0x28b4
   13148:	movt	r3, #3
   1314c:	str	r1, [sp, #4]
   13150:	mov	r0, r1
   13154:	str	r1, [r3]
   13158:	bl	14424 <argp_parse@@Base+0xf64>
   1315c:	ldr	r3, [r4, #16]
   13160:	movw	r2, #10416	; 0x28b0
   13164:	movt	r2, #3
   13168:	str	r0, [r4, #40]	; 0x28
   1316c:	str	r0, [r2]
   13170:	ldr	r1, [sp, #4]
   13174:	and	r3, r3, #3
   13178:	cmp	r3, #1
   1317c:	bne	1311c <__assert_fail@plt+0x1d64>
   13180:	ldr	r3, [r4, #8]
   13184:	mov	r0, #0
   13188:	str	r1, [r3]
   1318c:	b	130bc <__assert_fail@plt+0x1d04>
   13190:	ldr	r1, [r4, #48]	; 0x30
   13194:	mov	r0, r4
   13198:	movw	r2, #513	; 0x201
   1319c:	bl	19e00 <argp_state_help@@Base>
   131a0:	mov	r0, #0
   131a4:	add	sp, sp, #8
   131a8:	ldr	r4, [sp]
   131ac:	add	sp, sp, #4
   131b0:	pop	{pc}		; (ldr pc, [sp], #4)
   131b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   131b8:	strd	r6, [sp, #8]
   131bc:	strd	r8, [sp, #16]
   131c0:	strd	sl, [sp, #24]
   131c4:	str	lr, [sp, #32]
   131c8:	sub	sp, sp, #44	; 0x2c
   131cc:	ldr	fp, [r0]
   131d0:	str	r3, [sp, #16]
   131d4:	ldr	r3, [r0, #16]
   131d8:	ldr	r7, [sp, #80]	; 0x50
   131dc:	cmp	fp, #0
   131e0:	str	r3, [sp, #24]
   131e4:	strd	r0, [sp, #28]
   131e8:	str	r2, [sp, #36]	; 0x24
   131ec:	beq	13498 <__assert_fail@plt+0x20e0>
   131f0:	ldr	r9, [r7, #4]
   131f4:	movw	r3, #36409	; 0x8e39
   131f8:	movt	r3, #14563	; 0x38e3
   131fc:	mov	r4, fp
   13200:	str	r3, [sp, #20]
   13204:	ldr	r6, [r4, #4]
   13208:	cmp	r6, #0
   1320c:	bne	1321c <__assert_fail@plt+0x1e64>
   13210:	ldr	r3, [r4]
   13214:	cmp	r3, #0
   13218:	beq	13390 <__assert_fail@plt+0x1fd8>
   1321c:	ldr	r3, [r4, #12]
   13220:	tst	r3, #4
   13224:	moveq	r5, r3
   13228:	moveq	fp, r4
   1322c:	ldrne	r5, [fp, #12]
   13230:	ands	r5, r5, #8
   13234:	bne	13378 <__assert_fail@plt+0x1fc0>
   13238:	tst	r3, #8
   1323c:	bne	132bc <__assert_fail@plt+0x1f04>
   13240:	sub	r3, r6, #1
   13244:	cmp	r3, #254	; 0xfe
   13248:	bhi	132bc <__assert_fail@plt+0x1f04>
   1324c:	bl	11250 <__ctype_b_loc@plt>
   13250:	ldr	r1, [r0]
   13254:	lsl	r3, r6, #1
   13258:	ldrh	r3, [r1, r3]
   1325c:	tst	r3, #16384	; 0x4000
   13260:	beq	132bc <__assert_fail@plt+0x1f04>
   13264:	add	r3, r9, #1
   13268:	str	r3, [r7, #4]
   1326c:	strb	r6, [r9]
   13270:	ldr	r3, [fp, #8]
   13274:	cmp	r3, #0
   13278:	beq	132ac <__assert_fail@plt+0x1ef4>
   1327c:	ldr	r3, [r7, #4]
   13280:	mov	r2, #58	; 0x3a
   13284:	add	r1, r3, #1
   13288:	str	r1, [r7, #4]
   1328c:	strb	r2, [r3]
   13290:	ldr	r3, [fp, #12]
   13294:	tst	r3, #1
   13298:	beq	132ac <__assert_fail@plt+0x1ef4>
   1329c:	ldr	r3, [r7, #4]
   132a0:	add	r1, r3, #1
   132a4:	str	r1, [r7, #4]
   132a8:	strb	r2, [r3]
   132ac:	ldr	r3, [r7, #4]
   132b0:	mov	r2, #0
   132b4:	strb	r2, [r3]
   132b8:	ldr	r9, [r7, #4]
   132bc:	ldr	sl, [r4]
   132c0:	cmp	sl, #0
   132c4:	beq	13378 <__assert_fail@plt+0x1fc0>
   132c8:	ldr	r3, [r7]
   132cc:	ldr	r8, [r3, #8]
   132d0:	str	r3, [sp, #12]
   132d4:	ldr	r0, [r8]
   132d8:	cmp	r0, #0
   132dc:	beq	13300 <__assert_fail@plt+0x1f48>
   132e0:	mov	r6, r8
   132e4:	mov	r1, sl
   132e8:	bl	110e8 <strcmp@plt>
   132ec:	cmp	r0, #0
   132f0:	beq	13380 <__assert_fail@plt+0x1fc8>
   132f4:	ldr	r0, [r6, #16]!
   132f8:	cmp	r0, #0
   132fc:	bne	132e4 <__assert_fail@plt+0x1f2c>
   13300:	ldr	r0, [fp, #8]
   13304:	ldr	r1, [r7, #8]
   13308:	cmp	r0, #0
   1330c:	str	sl, [r1]
   13310:	beq	13324 <__assert_fail@plt+0x1f6c>
   13314:	ldr	r3, [fp, #12]
   13318:	tst	r3, #1
   1331c:	movne	r5, #2
   13320:	moveq	r5, #1
   13324:	str	r5, [r1, #4]
   13328:	mov	r3, #0
   1332c:	add	ip, r1, #16
   13330:	ldr	r0, [r4, #4]
   13334:	str	r3, [r1, #8]
   13338:	ldr	r2, [sp, #16]
   1333c:	cmp	r0, r3
   13340:	ldr	r3, [sp, #12]
   13344:	ldreq	r0, [fp, #4]
   13348:	ldr	r3, [r3, #48]	; 0x30
   1334c:	bic	r0, r0, #-16777216	; 0xff000000
   13350:	sub	r3, r2, r3
   13354:	ldr	r2, [sp, #20]
   13358:	asr	r3, r3, #2
   1335c:	mul	r3, r2, r3
   13360:	add	r3, r3, #1
   13364:	add	r3, r0, r3, lsl #24
   13368:	str	r3, [r1, #12]
   1336c:	mov	r3, #0
   13370:	str	ip, [r7, #8]
   13374:	str	r3, [r1, #16]
   13378:	add	r4, r4, #24
   1337c:	b	13204 <__assert_fail@plt+0x1e4c>
   13380:	sub	r6, r6, r8
   13384:	cmp	r6, #0
   13388:	bge	13378 <__assert_fail@plt+0x1fc0>
   1338c:	b	13300 <__assert_fail@plt+0x1f48>
   13390:	ldr	r3, [r4, #16]
   13394:	cmp	r3, #0
   13398:	bne	1321c <__assert_fail@plt+0x1e64>
   1339c:	ldr	r3, [r4, #20]
   133a0:	cmp	r3, #0
   133a4:	bne	1321c <__assert_fail@plt+0x1e64>
   133a8:	ldr	r3, [sp, #28]
   133ac:	ldr	r2, [r3, #4]
   133b0:	mov	r3, #0
   133b4:	ldr	r1, [sp, #16]
   133b8:	ldr	r0, [sp, #24]
   133bc:	str	r2, [r1]
   133c0:	mov	r2, r1
   133c4:	ldr	r1, [sp, #28]
   133c8:	cmp	r0, r3
   133cc:	stmib	r2, {r1, r9}
   133d0:	ldr	r1, [sp, #32]
   133d4:	str	r3, [r2, #12]
   133d8:	str	r1, [r2, #16]
   133dc:	ldr	r1, [sp, #36]	; 0x24
   133e0:	str	r3, [r2, #24]
   133e4:	str	r3, [r2, #28]
   133e8:	str	r3, [r2, #32]
   133ec:	str	r1, [r2, #20]
   133f0:	beq	1342c <__assert_fail@plt+0x2074>
   133f4:	ldr	r2, [r0]
   133f8:	cmp	r2, r3
   133fc:	beq	134b8 <__assert_fail@plt+0x2100>
   13400:	mov	r1, r0
   13404:	add	r3, r3, #1
   13408:	ldr	r2, [r1, r3, lsl #4]
   1340c:	cmp	r2, #0
   13410:	bne	13404 <__assert_fail@plt+0x204c>
   13414:	lsl	r3, r3, #2
   13418:	ldr	r2, [r7, #12]
   1341c:	ldr	r1, [sp, #16]
   13420:	add	r3, r2, r3
   13424:	str	r2, [r1, #28]
   13428:	str	r3, [r7, #12]
   1342c:	ldr	r3, [sp, #16]
   13430:	add	r0, r3, #36	; 0x24
   13434:	ldr	r5, [sp, #24]
   13438:	cmp	r5, #0
   1343c:	beq	1347c <__assert_fail@plt+0x20c4>
   13440:	ldr	r1, [r5]
   13444:	cmp	r1, #0
   13448:	beq	1347c <__assert_fail@plt+0x20c4>
   1344c:	ldr	r6, [sp, #16]
   13450:	mov	r2, #0
   13454:	add	r4, r2, #1
   13458:	mov	r3, r0
   1345c:	str	r7, [sp]
   13460:	mov	r0, r1
   13464:	mov	r1, r6
   13468:	bl	131b4 <__assert_fail@plt+0x1dfc>
   1346c:	ldr	r1, [r5, r4, lsl #4]
   13470:	mov	r2, r4
   13474:	cmp	r1, #0
   13478:	bne	13454 <__assert_fail@plt+0x209c>
   1347c:	add	sp, sp, #44	; 0x2c
   13480:	ldrd	r4, [sp]
   13484:	ldrd	r6, [sp, #8]
   13488:	ldrd	r8, [sp, #16]
   1348c:	ldrd	sl, [sp, #24]
   13490:	add	sp, sp, #32
   13494:	pop	{pc}		; (ldr pc, [sp], #4)
   13498:	ldr	r2, [r0, #4]
   1349c:	cmp	r2, #0
   134a0:	beq	134ac <__assert_fail@plt+0x20f4>
   134a4:	ldr	r9, [r7, #4]
   134a8:	b	133b0 <__assert_fail@plt+0x1ff8>
   134ac:	ldr	r0, [sp, #16]
   134b0:	str	r2, [sp, #16]
   134b4:	b	13434 <__assert_fail@plt+0x207c>
   134b8:	mov	r3, r2
   134bc:	b	13418 <__assert_fail@plt+0x2060>

000134c0 <argp_parse@@Base>:
   134c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   134c4:	tst	r3, #1
   134c8:	mov	r4, r3
   134cc:	strd	r6, [sp, #8]
   134d0:	strd	r8, [sp, #16]
   134d4:	strd	sl, [sp, #24]
   134d8:	add	fp, sp, #32
   134dc:	str	lr, [sp, #32]
   134e0:	sub	sp, sp, #236	; 0xec
   134e4:	str	r1, [fp, #-256]	; 0xffffff00
   134e8:	str	r2, [fp, #-236]	; 0xffffff14
   134ec:	str	r0, [fp, #-232]	; 0xffffff18
   134f0:	bne	1351c <argp_parse@@Base+0x5c>
   134f4:	movw	r3, #10420	; 0x28b4
   134f8:	movt	r3, #3
   134fc:	ldr	r2, [r3]
   13500:	cmp	r2, #0
   13504:	beq	13f48 <argp_parse@@Base+0xa88>
   13508:	movw	r5, #10416	; 0x28b0
   1350c:	movt	r5, #3
   13510:	ldr	r3, [r5]
   13514:	cmp	r3, #0
   13518:	beq	13f58 <argp_parse@@Base+0xa98>
   1351c:	ands	r3, r4, #4
   13520:	moveq	r5, #1
   13524:	movne	r5, #0
   13528:	ands	ip, r4, #16
   1352c:	str	r3, [fp, #-240]	; 0xffffff10
   13530:	beq	13588 <argp_parse@@Base+0xc8>
   13534:	ldr	r2, [fp, #-232]	; 0xffffff18
   13538:	mov	r3, #0
   1353c:	sub	r9, fp, #196	; 0xc4
   13540:	str	r5, [fp, #-228]	; 0xffffff1c
   13544:	str	r3, [fp, #-224]	; 0xffffff20
   13548:	str	r3, [fp, #-220]	; 0xffffff24
   1354c:	str	r3, [fp, #-216]	; 0xffffff28
   13550:	cmp	r2, r3
   13554:	str	r3, [r9, #8]
   13558:	str	r3, [r9, #12]
   1355c:	str	r3, [r9, #16]
   13560:	str	r3, [r9, #20]
   13564:	str	r3, [r9, #24]
   13568:	str	r3, [r9, #28]
   1356c:	str	r3, [r9, #32]
   13570:	bne	1363c <argp_parse@@Base+0x17c>
   13574:	mov	r3, #52	; 0x34
   13578:	mov	sl, #36	; 0x24
   1357c:	str	r3, [fp, #-240]	; 0xffffff10
   13580:	mov	r3, sl
   13584:	b	13678 <argp_parse@@Base+0x1b8>
   13588:	sub	sp, sp, #64	; 0x40
   1358c:	mov	r1, ip
   13590:	add	r3, sp, #8
   13594:	sub	sp, sp, #32
   13598:	add	r7, sp, #8
   1359c:	mov	r0, r3
   135a0:	mov	r2, #64	; 0x40
   135a4:	str	ip, [r7]
   135a8:	str	ip, [r7, #4]
   135ac:	str	ip, [r7, #8]
   135b0:	str	ip, [r7, #12]
   135b4:	str	r3, [r7, #16]
   135b8:	str	ip, [r7, #20]
   135bc:	str	ip, [r7, #24]
   135c0:	bl	112b0 <memset@plt>
   135c4:	ldr	r2, [fp, #-232]	; 0xffffff18
   135c8:	mov	r3, r0
   135cc:	cmp	r2, #0
   135d0:	strne	r2, [r3], #16
   135d4:	movw	r2, #10560	; 0x2940
   135d8:	movt	r2, #3
   135dc:	ldr	r1, [r2]
   135e0:	movw	r2, #55852	; 0xda2c
   135e4:	movt	r2, #1
   135e8:	str	r2, [r3]
   135ec:	cmp	r1, #0
   135f0:	beq	140e4 <argp_parse@@Base+0xc24>
   135f4:	ldr	r1, [pc, #3444]	; 14370 <argp_parse@@Base+0xeb0>
   135f8:	add	r2, r3, #32
   135fc:	str	r1, [r3, #16]
   13600:	mov	r3, #0
   13604:	sub	r9, fp, #196	; 0xc4
   13608:	str	r7, [fp, #-232]	; 0xffffff18
   1360c:	str	r5, [fp, #-228]	; 0xffffff1c
   13610:	str	r3, [fp, #-224]	; 0xffffff20
   13614:	str	r3, [fp, #-220]	; 0xffffff24
   13618:	str	r3, [fp, #-216]	; 0xffffff28
   1361c:	str	r3, [r2]
   13620:	str	r3, [r9, #8]
   13624:	str	r3, [r9, #12]
   13628:	str	r3, [r9, #16]
   1362c:	str	r3, [r9, #20]
   13630:	str	r3, [r9, #24]
   13634:	str	r3, [r9, #28]
   13638:	str	r3, [r9, #32]
   1363c:	sub	r1, fp, #228	; 0xe4
   13640:	ldr	r0, [fp, #-232]	; 0xffffff18
   13644:	bl	12efc <__assert_fail@plt+0x1b44>
   13648:	ldr	r5, [fp, #-228]	; 0xffffff1c
   1364c:	ldr	r3, [fp, #-220]	; 0xffffff24
   13650:	ldr	r2, [fp, #-216]	; 0xffffff28
   13654:	ldr	r7, [fp, #-224]	; 0xffffff20
   13658:	add	r3, r3, #1
   1365c:	add	r3, r3, r3, lsl #3
   13660:	lsl	r2, r2, #2
   13664:	lsl	r3, r3, #2
   13668:	add	r7, r7, #1
   1366c:	add	sl, r2, r3
   13670:	add	r1, sl, r7, lsl #4
   13674:	str	r1, [fp, #-240]	; 0xffffff10
   13678:	str	r3, [fp, #-252]	; 0xffffff04
   1367c:	ldr	r3, [fp, #-240]	; 0xffffff10
   13680:	str	r2, [fp, #-244]	; 0xffffff0c
   13684:	add	r0, r3, r5
   13688:	add	r0, r0, #1
   1368c:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   13690:	cmp	r0, #0
   13694:	mov	r5, r0
   13698:	str	r0, [fp, #-40]	; 0xffffffd8
   1369c:	moveq	r5, #12
   136a0:	ldr	r3, [fp, #-252]	; 0xffffff04
   136a4:	ldr	r2, [fp, #-244]	; 0xffffff0c
   136a8:	beq	13bbc <argp_parse@@Base+0x6fc>
   136ac:	add	ip, r5, sl
   136b0:	add	r3, r5, r3
   136b4:	ldr	r1, [fp, #-240]	; 0xffffff10
   136b8:	str	ip, [fp, #-244]	; 0xffffff0c
   136bc:	ldrd	r6, [r9, #8]
   136c0:	str	ip, [fp, #-152]	; 0xffffff68
   136c4:	add	sl, r5, r1
   136c8:	ldrd	r0, [r9, #16]
   136cc:	str	r5, [fp, #-112]	; 0xffffff90
   136d0:	strd	r6, [fp, #-140]	; 0xffffff74
   136d4:	ldrd	r6, [r9, #24]
   136d8:	strd	r0, [fp, #-252]	; 0xffffff04
   136dc:	mov	r0, r3
   136e0:	ldr	r1, [r9, #32]
   136e4:	str	sl, [fp, #-156]	; 0xffffff64
   136e8:	ldrd	r8, [fp, #-252]	; 0xffffff04
   136ec:	str	r3, [fp, #-104]	; 0xffffff98
   136f0:	strd	r8, [fp, #-132]	; 0xffffff7c
   136f4:	mov	r9, #1
   136f8:	mov	r8, #1
   136fc:	str	r1, [fp, #-116]	; 0xffffff8c
   13700:	mov	r1, #0
   13704:	strd	r8, [fp, #-196]	; 0xffffff3c
   13708:	strd	r8, [fp, #-148]	; 0xffffff6c
   1370c:	sub	r9, fp, #160	; 0xa0
   13710:	strd	r6, [fp, #-124]	; 0xffffff84
   13714:	bl	112b0 <memset@plt>
   13718:	ldr	ip, [fp, #-244]	; 0xffffff0c
   1371c:	tst	r4, #8
   13720:	str	r9, [fp, #-212]	; 0xffffff2c
   13724:	str	sl, [fp, #-208]	; 0xffffff30
   13728:	str	ip, [fp, #-204]	; 0xffffff34
   1372c:	str	r0, [fp, #-200]	; 0xffffff38
   13730:	bne	13bdc <argp_parse@@Base+0x71c>
   13734:	ands	r3, r4, #4
   13738:	cmp	r3, #0
   1373c:	moveq	r3, sl
   13740:	moveq	r2, ip
   13744:	beq	1375c <argp_parse@@Base+0x29c>
   13748:	mov	r2, #43	; 0x2b
   1374c:	add	r3, sl, #1
   13750:	strb	r2, [sl]
   13754:	mov	r2, ip
   13758:	str	r3, [fp, #-208]	; 0xffffff30
   1375c:	ldr	r0, [fp, #-232]	; 0xffffff18
   13760:	mov	r5, #0
   13764:	strb	r5, [r3]
   13768:	str	r5, [r2]
   1376c:	cmp	r0, r5
   13770:	str	r0, [fp, #-160]	; 0xffffff60
   13774:	beq	13dc8 <argp_parse@@Base+0x908>
   13778:	sub	ip, fp, #212	; 0xd4
   1377c:	mov	r2, r5
   13780:	ldr	r3, [fp, #-112]	; 0xffffff90
   13784:	mov	r1, r5
   13788:	str	ip, [sp]
   1378c:	bl	131b4 <__assert_fail@plt+0x1dfc>
   13790:	movw	r1, #10424	; 0x28b8
   13794:	movt	r1, #3
   13798:	ldr	r6, [fp, #-236]	; 0xffffff14
   1379c:	mov	lr, #1
   137a0:	movw	r2, #10428	; 0x28bc
   137a4:	movt	r2, #3
   137a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   137ac:	str	r0, [fp, #-108]	; 0xffffff94
   137b0:	ldr	ip, [r1]
   137b4:	str	lr, [fp, #-100]	; 0xffffff9c
   137b8:	ldr	r1, [fp, #-256]	; 0xffffff00
   137bc:	cmp	r0, r3
   137c0:	mov	r0, #0
   137c4:	ldr	lr, [fp, #-160]	; 0xffffff60
   137c8:	movls	r3, r6
   137cc:	ldr	r2, [r2]
   137d0:	str	ip, [fp, #-52]	; 0xffffffcc
   137d4:	str	r9, [fp, #-44]	; 0xffffffd4
   137d8:	str	r1, [fp, #-92]	; 0xffffffa4
   137dc:	mov	r1, #0
   137e0:	str	lr, [fp, #-96]	; 0xffffffa0
   137e4:	str	r6, [fp, #-88]	; 0xffffffa8
   137e8:	str	r5, [fp, #-84]	; 0xffffffac
   137ec:	str	r4, [fp, #-80]	; 0xffffffb0
   137f0:	strd	r0, [fp, #-76]	; 0xffffffb4
   137f4:	strd	r0, [fp, #-68]	; 0xffffffbc
   137f8:	strd	r0, [fp, #-60]	; 0xffffffc4
   137fc:	str	r2, [fp, #-48]	; 0xffffffd0
   13800:	bls	138e8 <argp_parse@@Base+0x428>
   13804:	ldr	r2, [fp, #8]
   13808:	mov	r8, r6
   1380c:	add	r4, r3, #36	; 0x24
   13810:	mov	r6, #3
   13814:	movt	r6, #256	; 0x100
   13818:	str	r2, [r3, #24]
   1381c:	b	13868 <argp_parse@@Base+0x3a8>
   13820:	ldr	r7, [r4, #-24]	; 0xffffffe8
   13824:	ldr	r5, [r4, #-12]
   13828:	ldr	lr, [r4, #-8]
   1382c:	ldr	ip, [r4, #-4]
   13830:	str	r7, [fp, #-76]	; 0xffffffb4
   13834:	str	r5, [fp, #-68]	; 0xffffffbc
   13838:	str	lr, [fp, #-64]	; 0xffffffc0
   1383c:	str	ip, [fp, #-60]	; 0xffffffc4
   13840:	blx	r3
   13844:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13848:	str	r3, [r4, #-4]
   1384c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13850:	cmp	r3, r4
   13854:	bls	13e7c <argp_parse@@Base+0x9bc>
   13858:	cmp	r0, #7
   1385c:	cmpne	r0, #0
   13860:	bne	13e6c <argp_parse@@Base+0x9ac>
   13864:	add	r4, r4, #36	; 0x24
   13868:	ldr	r3, [r4, #-20]	; 0xffffffec
   1386c:	mov	r1, #0
   13870:	sub	r2, fp, #96	; 0x60
   13874:	mov	r0, r6
   13878:	cmp	r3, r1
   1387c:	beq	13890 <argp_parse@@Base+0x3d0>
   13880:	ldr	ip, [r4, #-16]
   13884:	ldr	r3, [r3, #28]
   13888:	ldr	r3, [r3, ip, lsl #2]
   1388c:	str	r3, [r4, #-12]
   13890:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13894:	cmp	r3, #0
   13898:	bne	13820 <argp_parse@@Base+0x360>
   1389c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   138a0:	ldr	r3, [r3, #16]
   138a4:	cmp	r3, #0
   138a8:	beq	138d0 <argp_parse@@Base+0x410>
   138ac:	ldr	r3, [r3]
   138b0:	cmp	r3, #0
   138b4:	beq	138d0 <argp_parse@@Base+0x410>
   138b8:	ldr	ip, [r4, #-12]
   138bc:	ldr	r3, [r4, #-8]
   138c0:	str	ip, [r3]
   138c4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   138c8:	cmp	r3, #0
   138cc:	bne	13820 <argp_parse@@Base+0x360>
   138d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   138d4:	cmp	r4, r3
   138d8:	bcc	13864 <argp_parse@@Base+0x3a4>
   138dc:	str	r8, [fp, #-236]	; 0xffffff14
   138e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   138e4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   138e8:	tst	r4, #2
   138ec:	beq	13e3c <argp_parse@@Base+0x97c>
   138f0:	tst	r4, #1
   138f4:	mov	r2, #0
   138f8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   138fc:	subne	r3, r3, #4
   13900:	str	r2, [fp, #-144]	; 0xffffff70
   13904:	ldr	r2, [fp, #-236]	; 0xffffff14
   13908:	strne	r3, [fp, #-88]	; 0xffffffa8
   1390c:	addne	r4, r4, #1
   13910:	strne	r4, [fp, #-92]	; 0xffffffa4
   13914:	cmp	r2, r3
   13918:	beq	13e54 <argp_parse@@Base+0x994>
   1391c:	movw	r3, #10416	; 0x28b0
   13920:	movt	r3, #3
   13924:	ldr	r3, [r3]
   13928:	str	r3, [fp, #-56]	; 0xffffffc8
   1392c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13930:	movw	r3, #56184	; 0xdb78
   13934:	movt	r3, #1
   13938:	mov	r9, #6
   1393c:	movt	r9, #256	; 0x100
   13940:	ldr	r7, [fp, #-84]	; 0xffffffac
   13944:	mov	r0, r4
   13948:	str	r3, [fp, #-232]	; 0xffffff18
   1394c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13950:	cmp	r3, #0
   13954:	beq	13a3c <argp_parse@@Base+0x57c>
   13958:	cmp	r3, r7
   1395c:	movgt	r3, #0
   13960:	strgt	r3, [fp, #-72]	; 0xffffffb8
   13964:	bgt	13a3c <argp_parse@@Base+0x57c>
   13968:	cmp	r7, r0
   1396c:	bge	13c8c <argp_parse@@Base+0x7cc>
   13970:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13974:	tst	r3, #4
   13978:	bne	13ea0 <argp_parse@@Base+0x9e0>
   1397c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13980:	ldr	r5, [r3, r7, lsl #2]
   13984:	str	r5, [fp, #-136]	; 0xffffff78
   13988:	ldr	r8, [fp, #-112]	; 0xffffff90
   1398c:	str	r7, [fp, #-84]	; 0xffffffac
   13990:	ldr	ip, [fp, #-108]	; 0xffffff94
   13994:	cmp	r8, ip
   13998:	bcs	13c84 <argp_parse@@Base+0x7c4>
   1399c:	mov	r3, r7
   139a0:	add	r4, r8, #36	; 0x24
   139a4:	ldr	sl, [r4, #-36]	; 0xffffffdc
   139a8:	mov	r0, #0
   139ac:	add	lr, r3, #1
   139b0:	sub	r2, fp, #96	; 0x60
   139b4:	mov	r1, r5
   139b8:	sub	r6, r4, #36	; 0x24
   139bc:	mov	r8, r4
   139c0:	str	lr, [fp, #-84]	; 0xffffffac
   139c4:	cmp	sl, r0
   139c8:	beq	13c70 <argp_parse@@Base+0x7b0>
   139cc:	ldr	r3, [r4, #-12]
   139d0:	ldr	lr, [r4, #-8]
   139d4:	ldr	ip, [r4, #-4]
   139d8:	str	r3, [fp, #-68]	; 0xffffffbc
   139dc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   139e0:	str	r3, [fp, #-76]	; 0xffffffb4
   139e4:	str	lr, [fp, #-64]	; 0xffffffc0
   139e8:	str	ip, [fp, #-60]	; 0xffffffc4
   139ec:	blx	sl
   139f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139f4:	cmp	r0, #7
   139f8:	str	r3, [r4, #-4]
   139fc:	beq	13bf8 <argp_parse@@Base+0x738>
   13a00:	cmp	r0, #0
   13a04:	bne	13d40 <argp_parse@@Base+0x880>
   13a08:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13a0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13a10:	cmp	r7, r3
   13a14:	bge	13d58 <argp_parse@@Base+0x898>
   13a18:	ldr	r1, [r4, #-24]	; 0xffffffe8
   13a1c:	sub	ip, r3, r7
   13a20:	mov	r7, r3
   13a24:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13a28:	add	r3, r1, ip
   13a2c:	str	r3, [r4, #-24]	; 0xffffffe8
   13a30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13a34:	cmp	r3, #0
   13a38:	bne	13958 <argp_parse@@Base+0x498>
   13a3c:	cmp	r2, #0
   13a40:	beq	13968 <argp_parse@@Base+0x4a8>
   13a44:	mvn	r2, #0
   13a48:	str	r7, [fp, #-148]	; 0xffffff6c
   13a4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a50:	str	r2, [fp, #-140]	; 0xffffff74
   13a54:	ldr	r2, [fp, #-156]	; 0xffffff64
   13a58:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13a5c:	ands	ip, r3, #64	; 0x40
   13a60:	ldr	r3, [fp, #-152]	; 0xffffff68
   13a64:	beq	13d6c <argp_parse@@Base+0x8ac>
   13a68:	mov	ip, #0
   13a6c:	sub	lr, fp, #148	; 0x94
   13a70:	stm	sp, {ip, lr}
   13a74:	bl	145e8 <argp_parse@@Base+0x1128>
   13a78:	ldr	r7, [fp, #-148]	; 0xffffff6c
   13a7c:	mov	r4, r0
   13a80:	cmn	r4, #1
   13a84:	str	r7, [fp, #-84]	; 0xffffffac
   13a88:	beq	13d90 <argp_parse@@Base+0x8d0>
   13a8c:	cmp	r4, #63	; 0x3f
   13a90:	beq	13aa8 <argp_parse@@Base+0x5e8>
   13a94:	cmp	r4, #1
   13a98:	bne	14054 <argp_parse@@Base+0xb94>
   13a9c:	sub	r7, r7, #1
   13aa0:	ldr	r5, [fp, #-136]	; 0xffffff78
   13aa4:	b	13988 <argp_parse@@Base+0x4c8>
   13aa8:	ldr	r3, [fp, #-140]	; 0xffffff74
   13aac:	cmn	r3, #1
   13ab0:	beq	13f6c <argp_parse@@Base+0xaac>
   13ab4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ab8:	sub	r6, fp, #96	; 0x60
   13abc:	mov	r0, r6
   13ac0:	mov	r2, #260	; 0x104
   13ac4:	mov	r5, #7
   13ac8:	bl	19e00 <argp_state_help@@Base>
   13acc:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ad0:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ad4:	cmp	r3, ip
   13ad8:	mov	r6, r3
   13adc:	mov	r4, ip
   13ae0:	bcs	142f4 <argp_parse@@Base+0xe34>
   13ae4:	mov	r7, #5
   13ae8:	movt	r7, #256	; 0x100
   13aec:	ldr	r3, [r6]
   13af0:	mov	r1, #0
   13af4:	sub	r2, fp, #96	; 0x60
   13af8:	mov	r0, r7
   13afc:	cmp	r3, r1
   13b00:	beq	14030 <argp_parse@@Base+0xb70>
   13b04:	ldr	ip, [r6, #24]
   13b08:	add	r6, r6, #36	; 0x24
   13b0c:	ldr	r4, [r6, #-8]
   13b10:	ldr	lr, [r6, #-4]
   13b14:	str	ip, [fp, #-68]	; 0xffffffbc
   13b18:	ldr	ip, [r6, #-24]	; 0xffffffe8
   13b1c:	str	ip, [fp, #-76]	; 0xffffffb4
   13b20:	str	r4, [fp, #-64]	; 0xffffffc0
   13b24:	str	lr, [fp, #-60]	; 0xffffffc4
   13b28:	blx	r3
   13b2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b30:	str	r3, [r6, #-4]
   13b34:	ldr	r4, [fp, #-108]	; 0xffffff94
   13b38:	cmp	r6, r4
   13b3c:	bcc	13aec <argp_parse@@Base+0x62c>
   13b40:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b44:	sub	r4, r4, #36	; 0x24
   13b48:	cmp	r3, r4
   13b4c:	bhi	13bac <argp_parse@@Base+0x6ec>
   13b50:	mov	r7, #7
   13b54:	movt	r7, #256	; 0x100
   13b58:	ldr	r6, [r4]
   13b5c:	mov	r1, #0
   13b60:	sub	r2, fp, #96	; 0x60
   13b64:	mov	r0, r7
   13b68:	cmp	r6, r1
   13b6c:	beq	14020 <argp_parse@@Base+0xb60>
   13b70:	ldr	r8, [r4, #12]
   13b74:	sub	r4, r4, #36	; 0x24
   13b78:	ldr	lr, [r4, #60]	; 0x3c
   13b7c:	ldr	ip, [r4, #64]	; 0x40
   13b80:	ldr	r3, [r4, #68]	; 0x44
   13b84:	str	r8, [fp, #-76]	; 0xffffffb4
   13b88:	str	lr, [fp, #-68]	; 0xffffffbc
   13b8c:	str	ip, [fp, #-64]	; 0xffffffc0
   13b90:	str	r3, [fp, #-60]	; 0xffffffc4
   13b94:	blx	r6
   13b98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b9c:	str	r3, [r4, #68]	; 0x44
   13ba0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ba4:	cmp	r3, r4
   13ba8:	bls	13b58 <argp_parse@@Base+0x698>
   13bac:	cmp	r5, #7
   13bb0:	moveq	r5, #22
   13bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bb8:	bl	144f8 <argp_parse@@Base+0x1038>
   13bbc:	mov	r0, r5
   13bc0:	sub	sp, fp, #32
   13bc4:	ldrd	r4, [sp]
   13bc8:	ldrd	r6, [sp, #8]
   13bcc:	ldrd	r8, [sp, #16]
   13bd0:	ldrd	sl, [sp, #24]
   13bd4:	add	sp, sp, #32
   13bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bdc:	ldr	r1, [fp, #-240]	; 0xffffff10
   13be0:	mov	r2, #45	; 0x2d
   13be4:	add	r3, sl, #1
   13be8:	str	r3, [fp, #-208]	; 0xffffff30
   13bec:	strb	r2, [r5, r1]
   13bf0:	mov	r2, ip
   13bf4:	b	1375c <argp_parse@@Base+0x29c>
   13bf8:	ldr	r3, [fp, #-84]	; 0xffffffac
   13bfc:	ldr	sl, [r4, #-36]	; 0xffffffdc
   13c00:	sub	r3, r3, #1
   13c04:	cmp	sl, #0
   13c08:	str	r3, [fp, #-84]	; 0xffffffac
   13c0c:	beq	1433c <argp_parse@@Base+0xe7c>
   13c10:	ldr	r3, [r6, #24]
   13c14:	sub	r2, fp, #96	; 0x60
   13c18:	mov	r1, #0
   13c1c:	mov	r0, r9
   13c20:	ldr	lr, [r6, #28]
   13c24:	ldr	ip, [r6, #32]
   13c28:	str	r3, [fp, #-68]	; 0xffffffbc
   13c2c:	ldr	r3, [r6, #12]
   13c30:	str	r3, [fp, #-76]	; 0xffffffb4
   13c34:	str	lr, [fp, #-64]	; 0xffffffc0
   13c38:	str	ip, [fp, #-60]	; 0xffffffc4
   13c3c:	blx	sl
   13c40:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c48:	cmp	ip, r4
   13c4c:	movls	r2, #0
   13c50:	movhi	r2, #1
   13c54:	cmp	r0, #7
   13c58:	str	r3, [r6, #32]
   13c5c:	movne	r2, #0
   13c60:	cmp	r2, #0
   13c64:	beq	14344 <argp_parse@@Base+0xe84>
   13c68:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c6c:	b	139a0 <argp_parse@@Base+0x4e0>
   13c70:	str	r3, [fp, #-84]	; 0xffffffac
   13c74:	add	r2, r4, #36	; 0x24
   13c78:	cmp	ip, r4
   13c7c:	mov	r4, r2
   13c80:	bhi	139a4 <argp_parse@@Base+0x4e4>
   13c84:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13c88:	ldr	r7, [fp, #-84]	; 0xffffffac
   13c8c:	cmp	r7, r0
   13c90:	bne	13ea0 <argp_parse@@Base+0x9e0>
   13c94:	ldr	r4, [fp, #-112]	; 0xffffff90
   13c98:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c9c:	mov	r3, r4
   13ca0:	cmp	r4, ip
   13ca4:	bcs	14304 <argp_parse@@Base+0xe44>
   13ca8:	mov	r6, #2
   13cac:	movt	r6, #256	; 0x100
   13cb0:	mov	r5, #0
   13cb4:	b	13cfc <argp_parse@@Base+0x83c>
   13cb8:	ldr	r7, [r4, #-12]
   13cbc:	ldr	lr, [r4, #-8]
   13cc0:	ldr	ip, [r4, #-4]
   13cc4:	str	r3, [fp, #-76]	; 0xffffffb4
   13cc8:	str	r7, [fp, #-68]	; 0xffffffbc
   13ccc:	str	lr, [fp, #-64]	; 0xffffffc0
   13cd0:	str	ip, [fp, #-60]	; 0xffffffc4
   13cd4:	blx	r5
   13cd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13cdc:	mov	r5, r0
   13ce0:	str	r3, [r4, #-4]
   13ce4:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ce8:	cmp	ip, r4
   13cec:	bls	141d8 <argp_parse@@Base+0xd18>
   13cf0:	cmp	r5, #7
   13cf4:	cmpne	r5, #0
   13cf8:	bne	141a0 <argp_parse@@Base+0xce0>
   13cfc:	ldr	r3, [r4, #12]
   13d00:	sub	r2, fp, #96	; 0x60
   13d04:	mov	r0, r6
   13d08:	add	r4, r4, #36	; 0x24
   13d0c:	subs	r1, r3, #0
   13d10:	bne	13ce8 <argp_parse@@Base+0x828>
   13d14:	ldr	r5, [r4, #-36]	; 0xffffffdc
   13d18:	cmp	r5, #0
   13d1c:	bne	13cb8 <argp_parse@@Base+0x7f8>
   13d20:	cmp	ip, r4
   13d24:	mov	r5, #7
   13d28:	bhi	13cfc <argp_parse@@Base+0x83c>
   13d2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13d30:	sub	r4, ip, #36	; 0x24
   13d34:	cmp	r3, r4
   13d38:	bls	141f4 <argp_parse@@Base+0xd34>
   13d3c:	b	14278 <argp_parse@@Base+0xdb8>
   13d40:	mov	r5, r0
   13d44:	cmp	r5, #7
   13d48:	bne	13acc <argp_parse@@Base+0x60c>
   13d4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d50:	sub	r6, fp, #96	; 0x60
   13d54:	b	13abc <argp_parse@@Base+0x5fc>
   13d58:	mov	r1, #1
   13d5c:	mov	r7, r3
   13d60:	mov	r2, r1
   13d64:	str	r1, [fp, #-100]	; 0xffffff9c
   13d68:	b	1394c <argp_parse@@Base+0x48c>
   13d6c:	str	ip, [sp]
   13d70:	sub	ip, fp, #148	; 0x94
   13d74:	str	ip, [sp, #4]
   13d78:	bl	14580 <argp_parse@@Base+0x10c0>
   13d7c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   13d80:	mov	r4, r0
   13d84:	cmn	r4, #1
   13d88:	str	r7, [fp, #-84]	; 0xffffffac
   13d8c:	bne	13a8c <argp_parse@@Base+0x5cc>
   13d90:	mov	r3, #0
   13d94:	cmp	r7, #1
   13d98:	str	r3, [fp, #-100]	; 0xffffff9c
   13d9c:	ble	13e74 <argp_parse@@Base+0x9b4>
   13da0:	sub	r3, r7, #-1073741823	; 0xc0000001
   13da4:	ldr	r1, [fp, #-232]	; 0xffffff18
   13da8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13dac:	ldr	r0, [r2, r3, lsl #2]
   13db0:	bl	110e8 <strcmp@plt>
   13db4:	cmp	r0, #0
   13db8:	bne	13e74 <argp_parse@@Base+0x9b4>
   13dbc:	str	r7, [fp, #-72]	; 0xffffffb8
   13dc0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13dc4:	b	13968 <argp_parse@@Base+0x4a8>
   13dc8:	ldr	r2, [fp, #-256]	; 0xffffff00
   13dcc:	movw	r3, #10424	; 0x28b8
   13dd0:	movt	r3, #3
   13dd4:	mov	lr, r0
   13dd8:	mov	r0, #1
   13ddc:	ldr	r1, [r3]
   13de0:	movw	r3, #10428	; 0x28bc
   13de4:	movt	r3, #3
   13de8:	str	r0, [fp, #-100]	; 0xffffff9c
   13dec:	mov	r0, #0
   13df0:	tst	r4, #2
   13df4:	ldr	ip, [fp, #-236]	; 0xffffff14
   13df8:	str	lr, [fp, #-96]	; 0xffffffa0
   13dfc:	str	r2, [fp, #-92]	; 0xffffffa4
   13e00:	ldr	r2, [fp, #-112]	; 0xffffff90
   13e04:	ldr	r3, [r3]
   13e08:	str	r2, [fp, #-108]	; 0xffffff94
   13e0c:	str	r1, [fp, #-52]	; 0xffffffcc
   13e10:	mov	r1, #0
   13e14:	str	ip, [fp, #-88]	; 0xffffffa8
   13e18:	str	lr, [fp, #-84]	; 0xffffffac
   13e1c:	str	r4, [fp, #-80]	; 0xffffffb0
   13e20:	strd	r0, [fp, #-76]	; 0xffffffb4
   13e24:	strd	r0, [fp, #-68]	; 0xffffffbc
   13e28:	strd	r0, [fp, #-60]	; 0xffffffc4
   13e2c:	str	r3, [fp, #-48]	; 0xffffffd0
   13e30:	mov	r3, ip
   13e34:	str	r9, [fp, #-44]	; 0xffffffd4
   13e38:	bne	138f0 <argp_parse@@Base+0x430>
   13e3c:	mov	r2, #1
   13e40:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13e44:	str	r2, [fp, #-144]	; 0xffffff70
   13e48:	ldr	r2, [fp, #-236]	; 0xffffff14
   13e4c:	cmp	r2, r3
   13e50:	bne	1391c <argp_parse@@Base+0x45c>
   13e54:	ldr	r0, [r2]
   13e58:	cmp	r0, #0
   13e5c:	beq	1391c <argp_parse@@Base+0x45c>
   13e60:	bl	14424 <argp_parse@@Base+0xf64>
   13e64:	str	r0, [fp, #-56]	; 0xffffffc8
   13e68:	b	1392c <argp_parse@@Base+0x46c>
   13e6c:	mov	r5, r0
   13e70:	b	13bbc <argp_parse@@Base+0x6fc>
   13e74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13e78:	b	13968 <argp_parse@@Base+0x4a8>
   13e7c:	cmp	r0, #7
   13e80:	mov	r5, r0
   13e84:	str	r8, [fp, #-236]	; 0xffffff14
   13e88:	beq	138e0 <argp_parse@@Base+0x420>
   13e8c:	cmp	r0, #0
   13e90:	bne	13bbc <argp_parse@@Base+0x6fc>
   13e94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13e98:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13e9c:	b	138e8 <argp_parse@@Base+0x428>
   13ea0:	ldr	r3, [fp, #4]
   13ea4:	cmp	r3, #0
   13ea8:	beq	13fe8 <argp_parse@@Base+0xb28>
   13eac:	str	r7, [r3]
   13eb0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13eb4:	ldr	ip, [fp, #-108]	; 0xffffff94
   13eb8:	sub	r2, ip, #36	; 0x24
   13ebc:	cmp	r3, r2
   13ec0:	movls	r6, #4
   13ec4:	subls	r4, ip, #72	; 0x48
   13ec8:	movtls	r6, #256	; 0x100
   13ecc:	bhi	14120 <argp_parse@@Base+0xc60>
   13ed0:	ldr	r5, [r4, #36]	; 0x24
   13ed4:	mov	r1, #0
   13ed8:	sub	r2, fp, #96	; 0x60
   13edc:	mov	r0, r6
   13ee0:	cmp	r5, r1
   13ee4:	beq	14040 <argp_parse@@Base+0xb80>
   13ee8:	ldr	r3, [r4, #60]	; 0x3c
   13eec:	ldr	lr, [r4, #64]	; 0x40
   13ef0:	ldr	ip, [r4, #68]	; 0x44
   13ef4:	str	r3, [fp, #-68]	; 0xffffffbc
   13ef8:	ldr	r3, [r4, #48]	; 0x30
   13efc:	str	r3, [fp, #-76]	; 0xffffffb4
   13f00:	str	lr, [fp, #-64]	; 0xffffffc0
   13f04:	str	ip, [fp, #-60]	; 0xffffffc4
   13f08:	blx	r5
   13f0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f10:	str	r3, [r4, #68]	; 0x44
   13f14:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f18:	cmp	r4, r3
   13f1c:	sub	r4, r4, #36	; 0x24
   13f20:	bcc	14100 <argp_parse@@Base+0xc40>
   13f24:	cmp	r0, #7
   13f28:	cmpne	r0, #0
   13f2c:	beq	13ed0 <argp_parse@@Base+0xa10>
   13f30:	ldr	ip, [fp, #-108]	; 0xffffff94
   13f34:	mov	r5, r0
   13f38:	sub	r4, ip, #36	; 0x24
   13f3c:	cmp	r4, r3
   13f40:	bcs	13b50 <argp_parse@@Base+0x690>
   13f44:	b	13bb4 <argp_parse@@Base+0x6f4>
   13f48:	ldr	r2, [fp, #-236]	; 0xffffff14
   13f4c:	ldr	r2, [r2]
   13f50:	str	r2, [r3]
   13f54:	b	13508 <argp_parse@@Base+0x48>
   13f58:	ldr	r3, [fp, #-236]	; 0xffffff14
   13f5c:	ldr	r0, [r3]
   13f60:	bl	14424 <argp_parse@@Base+0xf64>
   13f64:	str	r0, [r5]
   13f68:	b	1351c <argp_parse@@Base+0x5c>
   13f6c:	mov	r1, r4
   13f70:	ldr	r0, [fp, #-156]	; 0xffffff64
   13f74:	bl	11274 <strchr@plt>
   13f78:	cmp	r0, #0
   13f7c:	beq	13fb8 <argp_parse@@Base+0xaf8>
   13f80:	ldr	r5, [fp, #-112]	; 0xffffff90
   13f84:	ldr	r2, [fp, #-108]	; 0xffffff94
   13f88:	cmp	r5, r2
   13f8c:	bcs	13fb8 <argp_parse@@Base+0xaf8>
   13f90:	ldr	r3, [r5, #8]
   13f94:	cmp	r3, r0
   13f98:	bls	13fac <argp_parse@@Base+0xaec>
   13f9c:	b	14294 <argp_parse@@Base+0xdd4>
   13fa0:	ldr	r3, [r5, #8]
   13fa4:	cmp	r0, r3
   13fa8:	bcc	14294 <argp_parse@@Base+0xdd4>
   13fac:	add	r5, r5, #36	; 0x24
   13fb0:	cmp	r5, r2
   13fb4:	bcc	13fa0 <argp_parse@@Base+0xae0>
   13fb8:	sub	r6, fp, #96	; 0x60
   13fbc:	mov	r2, r4
   13fc0:	add	r4, r4, #1
   13fc4:	ldr	r3, [pc, #936]	; 14374 <argp_parse@@Base+0xeb4>
   13fc8:	movw	r1, #56188	; 0xdb7c
   13fcc:	movt	r1, #1
   13fd0:	mov	r0, r6
   13fd4:	bic	r4, r4, #2
   13fd8:	bl	19ec0 <argp_error@@Base>
   13fdc:	cmp	r4, #0
   13fe0:	bne	14018 <argp_parse@@Base+0xb58>
   13fe4:	b	13c84 <argp_parse@@Base+0x7c4>
   13fe8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13fec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ff0:	tst	r3, #2
   13ff4:	bne	13d50 <argp_parse@@Base+0x890>
   13ff8:	cmp	r1, #0
   13ffc:	beq	13d50 <argp_parse@@Base+0x890>
   14000:	mov	r0, r1
   14004:	movw	r1, #56208	; 0xdb90
   14008:	movt	r1, #1
   1400c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14010:	sub	r6, fp, #96	; 0x60
   14014:	bl	11280 <fprintf@plt>
   14018:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1401c:	b	13abc <argp_parse@@Base+0x5fc>
   14020:	sub	r4, r4, #36	; 0x24
   14024:	cmp	r4, r3
   14028:	bcs	13b58 <argp_parse@@Base+0x698>
   1402c:	b	13bac <argp_parse@@Base+0x6ec>
   14030:	add	r6, r6, #36	; 0x24
   14034:	cmp	r6, r4
   14038:	bcc	13aec <argp_parse@@Base+0x62c>
   1403c:	b	13b40 <argp_parse@@Base+0x680>
   14040:	cmp	r4, r3
   14044:	sub	r4, r4, #36	; 0x24
   14048:	bcs	13ed0 <argp_parse@@Base+0xa10>
   1404c:	mov	r5, #7
   14050:	b	14104 <argp_parse@@Base+0xc44>
   14054:	asrs	r8, r4, #24
   14058:	beq	13f6c <argp_parse@@Base+0xaac>
   1405c:	add	r3, r8, r8, lsl #3
   14060:	ldr	r5, [fp, #-112]	; 0xffffff90
   14064:	ands	r2, r4, #8388608	; 0x800000
   14068:	movne	r2, #-16777216	; 0xff000000
   1406c:	bic	r0, r4, #-16777216	; 0xff000000
   14070:	lsl	r3, r3, #2
   14074:	orr	r0, r0, r2
   14078:	sub	r3, r3, #36	; 0x24
   1407c:	ldr	r7, [r5, r3]
   14080:	add	r5, r5, r3
   14084:	cmp	r7, #0
   14088:	beq	142fc <argp_parse@@Base+0xe3c>
   1408c:	ldr	r3, [r5, #24]
   14090:	sub	r6, fp, #96	; 0x60
   14094:	mov	r2, r6
   14098:	ldr	ip, [r5, #28]
   1409c:	ldr	r1, [r5, #32]
   140a0:	str	r3, [fp, #-68]	; 0xffffffbc
   140a4:	ldr	r3, [r5, #12]
   140a8:	str	r3, [fp, #-76]	; 0xffffffb4
   140ac:	str	ip, [fp, #-64]	; 0xffffffc0
   140b0:	str	r1, [fp, #-60]	; 0xffffffc4
   140b4:	ldr	r1, [fp, #-136]	; 0xffffff78
   140b8:	blx	r7
   140bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   140c0:	str	r3, [r5, #32]
   140c4:	cmp	r0, #7
   140c8:	beq	14128 <argp_parse@@Base+0xc68>
   140cc:	cmp	r0, #0
   140d0:	bne	13d40 <argp_parse@@Base+0x880>
   140d4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   140d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   140dc:	ldr	r7, [fp, #-84]	; 0xffffffac
   140e0:	b	1394c <argp_parse@@Base+0x48c>
   140e4:	movw	r2, #10456	; 0x28d8
   140e8:	movt	r2, #3
   140ec:	ldr	r2, [r2]
   140f0:	cmp	r2, #0
   140f4:	addeq	r2, r3, #16
   140f8:	bne	135f4 <argp_parse@@Base+0x134>
   140fc:	b	13600 <argp_parse@@Base+0x140>
   14100:	mov	r5, r0
   14104:	ldr	ip, [fp, #-108]	; 0xffffff94
   14108:	cmp	r5, #7
   1410c:	sub	r4, ip, #36	; 0x24
   14110:	bne	13f3c <argp_parse@@Base+0xa7c>
   14114:	cmp	r4, r3
   14118:	movcs	r5, #0
   1411c:	bcs	13b50 <argp_parse@@Base+0x690>
   14120:	mov	r5, #0
   14124:	b	13bb4 <argp_parse@@Base+0x6f4>
   14128:	cmp	r8, #0
   1412c:	beq	13fbc <argp_parse@@Base+0xafc>
   14130:	ldr	r3, [fp, #-152]	; 0xffffff68
   14134:	ldr	r2, [r3]
   14138:	ldr	r1, [r3, #12]
   1413c:	cmp	r4, r1
   14140:	bne	1415c <argp_parse@@Base+0xc9c>
   14144:	b	1418c <argp_parse@@Base+0xccc>
   14148:	add	r3, r3, #16
   1414c:	ldr	r2, [r3]
   14150:	ldr	r1, [r3, #12]
   14154:	cmp	r4, r1
   14158:	beq	1418c <argp_parse@@Base+0xccc>
   1415c:	cmp	r2, #0
   14160:	bne	14148 <argp_parse@@Base+0xc88>
   14164:	movw	r2, #56180	; 0xdb74
   14168:	movt	r2, #1
   1416c:	movw	r1, #56196	; 0xdb84
   14170:	movt	r1, #1
   14174:	ldr	r3, [pc, #504]	; 14374 <argp_parse@@Base+0xeb4>
   14178:	mov	r0, r6
   1417c:	add	r4, r4, #1
   14180:	bl	19ec0 <argp_error@@Base>
   14184:	bic	r4, r4, #2
   14188:	b	13fdc <argp_parse@@Base+0xb1c>
   1418c:	movw	r3, #56180	; 0xdb74
   14190:	movt	r3, #1
   14194:	cmp	r2, #0
   14198:	moveq	r2, r3
   1419c:	b	1416c <argp_parse@@Base+0xcac>
   141a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   141a4:	sub	r2, ip, #36	; 0x24
   141a8:	cmp	r3, r2
   141ac:	bhi	1432c <argp_parse@@Base+0xe6c>
   141b0:	ldr	r2, [fp, #4]
   141b4:	cmp	r2, #0
   141b8:	beq	141c8 <argp_parse@@Base+0xd08>
   141bc:	ldr	r2, [fp, #-84]	; 0xffffffac
   141c0:	ldr	r1, [fp, #4]
   141c4:	str	r2, [r1]
   141c8:	cmp	r5, #0
   141cc:	bne	13d44 <argp_parse@@Base+0x884>
   141d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   141d4:	b	13eb8 <argp_parse@@Base+0x9f8>
   141d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   141dc:	sub	r4, ip, #36	; 0x24
   141e0:	cmp	r4, r3
   141e4:	bcc	142e8 <argp_parse@@Base+0xe28>
   141e8:	cmp	r5, #0
   141ec:	cmpne	r5, #7
   141f0:	bne	141b0 <argp_parse@@Base+0xcf0>
   141f4:	mov	r6, #1
   141f8:	movt	r6, #256	; 0x100
   141fc:	sub	r4, r4, #36	; 0x24
   14200:	ldr	r5, [r4, #36]	; 0x24
   14204:	mov	r1, #0
   14208:	sub	r2, fp, #96	; 0x60
   1420c:	mov	r0, r6
   14210:	cmp	r5, r1
   14214:	beq	14268 <argp_parse@@Base+0xda8>
   14218:	ldr	r3, [r4, #60]	; 0x3c
   1421c:	ldr	lr, [r4, #64]	; 0x40
   14220:	ldr	ip, [r4, #68]	; 0x44
   14224:	str	r3, [fp, #-68]	; 0xffffffbc
   14228:	ldr	r3, [r4, #48]	; 0x30
   1422c:	str	r3, [fp, #-76]	; 0xffffffb4
   14230:	str	lr, [fp, #-64]	; 0xffffffc0
   14234:	str	ip, [fp, #-60]	; 0xffffffc4
   14238:	blx	r5
   1423c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14240:	str	r3, [r4, #68]	; 0x44
   14244:	ldr	r3, [fp, #-112]	; 0xffffff90
   14248:	cmp	r3, r4
   1424c:	sub	r4, r4, #36	; 0x24
   14250:	bhi	142e4 <argp_parse@@Base+0xe24>
   14254:	cmp	r0, #7
   14258:	cmpne	r0, #0
   1425c:	beq	14200 <argp_parse@@Base+0xd40>
   14260:	mov	r5, r0
   14264:	b	141b0 <argp_parse@@Base+0xcf0>
   14268:	cmp	r3, r4
   1426c:	sub	r4, r4, #36	; 0x24
   14270:	bls	14200 <argp_parse@@Base+0xd40>
   14274:	ldr	ip, [fp, #-108]	; 0xffffff94
   14278:	ldr	r2, [fp, #4]
   1427c:	cmp	r2, #0
   14280:	beq	13eb8 <argp_parse@@Base+0x9f8>
   14284:	mov	r1, r2
   14288:	ldr	r2, [fp, #-84]	; 0xffffffac
   1428c:	str	r2, [r1]
   14290:	b	13eb8 <argp_parse@@Base+0x9f8>
   14294:	ldr	r3, [r5]
   14298:	cmp	r3, #0
   1429c:	beq	13fb8 <argp_parse@@Base+0xaf8>
   142a0:	ldr	r2, [r5, #12]
   142a4:	sub	r6, fp, #96	; 0x60
   142a8:	mov	r8, #0
   142ac:	ldr	r0, [r5, #24]
   142b0:	ldr	ip, [r5, #28]
   142b4:	ldr	r1, [r5, #32]
   142b8:	str	r2, [fp, #-76]	; 0xffffffb4
   142bc:	mov	r2, r6
   142c0:	str	r0, [fp, #-68]	; 0xffffffbc
   142c4:	mov	r0, r4
   142c8:	str	ip, [fp, #-64]	; 0xffffffc0
   142cc:	str	r1, [fp, #-60]	; 0xffffffc4
   142d0:	ldr	r1, [fp, #-136]	; 0xffffff78
   142d4:	blx	r3
   142d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   142dc:	str	r3, [r5, #32]
   142e0:	b	140c4 <argp_parse@@Base+0xc04>
   142e4:	mov	r5, r0
   142e8:	cmp	r5, #7
   142ec:	beq	14274 <argp_parse@@Base+0xdb4>
   142f0:	b	141b0 <argp_parse@@Base+0xcf0>
   142f4:	sub	r4, ip, #36	; 0x24
   142f8:	b	13b48 <argp_parse@@Base+0x688>
   142fc:	sub	r6, fp, #96	; 0x60
   14300:	b	14130 <argp_parse@@Base+0xc70>
   14304:	sub	r4, ip, #36	; 0x24
   14308:	cmp	r3, r4
   1430c:	bls	141f4 <argp_parse@@Base+0xd34>
   14310:	ldr	r2, [fp, #4]
   14314:	cmp	r2, #0
   14318:	beq	14120 <argp_parse@@Base+0xc60>
   1431c:	ldr	r2, [fp, #-84]	; 0xffffffac
   14320:	ldr	r1, [fp, #4]
   14324:	str	r2, [r1]
   14328:	b	13eb8 <argp_parse@@Base+0x9f8>
   1432c:	ldr	r2, [fp, #4]
   14330:	cmp	r2, #0
   14334:	bne	141bc <argp_parse@@Base+0xcfc>
   14338:	b	13ad4 <argp_parse@@Base+0x614>
   1433c:	ldr	ip, [fp, #-108]	; 0xffffff94
   14340:	b	13c74 <argp_parse@@Base+0x7b4>
   14344:	cmp	r0, #0
   14348:	beq	14360 <argp_parse@@Base+0xea0>
   1434c:	cmp	r0, #7
   14350:	mov	r5, r0
   14354:	ldrne	r3, [fp, #-112]	; 0xffffff90
   14358:	beq	13c84 <argp_parse@@Base+0x7c4>
   1435c:	b	13ad4 <argp_parse@@Base+0x614>
   14360:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14364:	mov	r0, r3
   14368:	str	r3, [fp, #-84]	; 0xffffffac
   1436c:	b	13a10 <argp_parse@@Base+0x550>
   14370:	andeq	sp, r1, r8, asr #20
   14374:	andeq	sp, r1, r4, ror #20
   14378:	cmp	r1, #0
   1437c:	beq	143bc <argp_parse@@Base+0xefc>
   14380:	ldr	r2, [r1, #52]	; 0x34
   14384:	ldr	r3, [r2, #48]	; 0x30
   14388:	ldr	r1, [r2, #52]	; 0x34
   1438c:	cmp	r3, r1
   14390:	bcs	143bc <argp_parse@@Base+0xefc>
   14394:	ldr	r2, [r3, #4]
   14398:	cmp	r0, r2
   1439c:	bne	143b0 <argp_parse@@Base+0xef0>
   143a0:	b	143c4 <argp_parse@@Base+0xf04>
   143a4:	ldr	r2, [r3, #4]
   143a8:	cmp	r2, r0
   143ac:	beq	143c4 <argp_parse@@Base+0xf04>
   143b0:	add	r3, r3, #36	; 0x24
   143b4:	cmp	r3, r1
   143b8:	bcc	143a4 <argp_parse@@Base+0xee4>
   143bc:	mov	r0, #0
   143c0:	bx	lr
   143c4:	ldr	r0, [r3, #24]
   143c8:	bx	lr
   143cc:	movw	r1, #10460	; 0x28dc
   143d0:	movt	r1, #3
   143d4:	push	{lr}		; (str lr, [sp, #-4]!)
   143d8:	ldm	r1, {r1, ip}
   143dc:	sub	sp, sp, #12
   143e0:	movw	r3, #56440	; 0xdc78
   143e4:	movt	r3, #1
   143e8:	movw	r2, #56456	; 0xdc88
   143ec:	movt	r2, #1
   143f0:	str	ip, [sp]
   143f4:	bl	14e6c <_obstack_memory_used@@Base+0x404>
   143f8:	add	sp, sp, #12
   143fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14400:	movw	r2, #10456	; 0x28d8
   14404:	movt	r2, #3
   14408:	movw	ip, #17356	; 0x43cc
   1440c:	movt	ip, #1
   14410:	movw	r3, #10460	; 0x28dc
   14414:	movt	r3, #3
   14418:	str	ip, [r2]
   1441c:	strd	r0, [r3]
   14420:	bx	lr
   14424:	ldrb	r3, [r0]
   14428:	cmp	r3, #47	; 0x2f
   1442c:	bne	1443c <argp_parse@@Base+0xf7c>
   14430:	ldrb	r3, [r0, #1]!
   14434:	cmp	r3, #47	; 0x2f
   14438:	beq	14430 <argp_parse@@Base+0xf70>
   1443c:	cmp	r3, #0
   14440:	beq	14470 <argp_parse@@Base+0xfb0>
   14444:	mov	r2, r0
   14448:	mov	r1, #0
   1444c:	cmp	r3, #47	; 0x2f
   14450:	moveq	r1, #1
   14454:	beq	14464 <argp_parse@@Base+0xfa4>
   14458:	cmp	r1, #0
   1445c:	movne	r0, r2
   14460:	movne	r1, #0
   14464:	ldrb	r3, [r2, #1]!
   14468:	cmp	r3, #0
   1446c:	bne	1444c <argp_parse@@Base+0xf8c>
   14470:	bx	lr
   14474:	str	r4, [sp, #-8]!
   14478:	mov	r4, r0
   1447c:	str	lr, [sp, #4]
   14480:	bl	11268 <strlen@plt>
   14484:	cmp	r0, #1
   14488:	bls	1449c <argp_parse@@Base+0xfdc>
   1448c:	sub	r2, r0, #1
   14490:	ldrb	r1, [r4, r2]
   14494:	cmp	r1, #47	; 0x2f
   14498:	beq	144a8 <argp_parse@@Base+0xfe8>
   1449c:	ldr	r4, [sp]
   144a0:	add	sp, sp, #4
   144a4:	pop	{pc}		; (ldr pc, [sp], #4)
   144a8:	cmp	r2, #1
   144ac:	beq	144c0 <argp_parse@@Base+0x1000>
   144b0:	add	r1, r4, r0
   144b4:	ldrb	r1, [r1, #-2]
   144b8:	cmp	r1, #47	; 0x2f
   144bc:	beq	144d0 <argp_parse@@Base+0x1010>
   144c0:	ldr	r4, [sp]
   144c4:	add	sp, sp, #4
   144c8:	mov	r0, r2
   144cc:	pop	{pc}		; (ldr pc, [sp], #4)
   144d0:	sub	r3, r0, #3
   144d4:	rsb	r0, r4, #1
   144d8:	add	r3, r4, r3
   144dc:	cmp	r3, r4
   144e0:	add	r2, r0, r3
   144e4:	beq	144c0 <argp_parse@@Base+0x1000>
   144e8:	ldrb	r1, [r3], #-1
   144ec:	cmp	r1, #47	; 0x2f
   144f0:	bne	144c0 <argp_parse@@Base+0x1000>
   144f4:	b	144dc <argp_parse@@Base+0x101c>
   144f8:	strd	r4, [sp, #-12]!
   144fc:	mov	r5, r0
   14500:	str	lr, [sp, #8]
   14504:	sub	sp, sp, #12
   14508:	bl	1128c <__errno_location@plt>
   1450c:	mov	r4, r0
   14510:	mov	r2, #0
   14514:	ldr	r3, [r4]
   14518:	mov	r0, r5
   1451c:	str	r2, [r4]
   14520:	str	r3, [sp]
   14524:	str	r3, [sp, #4]
   14528:	bl	11124 <free@plt>
   1452c:	ldr	r3, [r4]
   14530:	add	r2, sp, #8
   14534:	clz	r3, r3
   14538:	lsr	r3, r3, #5
   1453c:	add	r3, r2, r3, lsl #2
   14540:	ldr	r3, [r3, #-8]
   14544:	str	r3, [r4]
   14548:	add	sp, sp, #12
   1454c:	ldrd	r4, [sp]
   14550:	add	sp, sp, #8
   14554:	pop	{pc}		; (ldr pc, [sp], #4)
   14558:	push	{lr}		; (str lr, [sp, #-4]!)
   1455c:	sub	sp, sp, #20
   14560:	mov	ip, #0
   14564:	ldr	lr, [sp, #24]
   14568:	str	lr, [sp]
   1456c:	str	ip, [sp, #4]
   14570:	str	ip, [sp, #8]
   14574:	bl	1aeec <argp_error@@Base+0x102c>
   14578:	add	sp, sp, #20
   1457c:	pop	{pc}		; (ldr pc, [sp], #4)
   14580:	str	r4, [sp, #-8]!
   14584:	mov	ip, #0
   14588:	str	lr, [sp, #4]
   1458c:	sub	sp, sp, #16
   14590:	ldr	r4, [sp, #24]
   14594:	str	ip, [sp, #12]
   14598:	ldr	lr, [sp, #28]
   1459c:	stm	sp, {r4, ip, lr}
   145a0:	bl	1a950 <argp_error@@Base+0xa90>
   145a4:	add	sp, sp, #16
   145a8:	ldr	r4, [sp]
   145ac:	add	sp, sp, #4
   145b0:	pop	{pc}		; (ldr pc, [sp], #4)
   145b4:	str	r4, [sp, #-8]!
   145b8:	mov	r4, #1
   145bc:	str	lr, [sp, #4]
   145c0:	sub	sp, sp, #16
   145c4:	mov	lr, #0
   145c8:	ldr	ip, [sp, #24]
   145cc:	str	ip, [sp]
   145d0:	stmib	sp, {r4, lr}
   145d4:	bl	1aeec <argp_error@@Base+0x102c>
   145d8:	add	sp, sp, #16
   145dc:	ldr	r4, [sp]
   145e0:	add	sp, sp, #4
   145e4:	pop	{pc}		; (ldr pc, [sp], #4)
   145e8:	strd	r4, [sp, #-12]!
   145ec:	mov	r4, #0
   145f0:	mov	r5, #1
   145f4:	str	lr, [sp, #8]
   145f8:	sub	sp, sp, #20
   145fc:	ldr	lr, [sp, #32]
   14600:	ldr	ip, [sp, #36]	; 0x24
   14604:	str	lr, [sp]
   14608:	str	r4, [sp, #12]
   1460c:	stmib	sp, {r5, ip}
   14610:	bl	1a950 <argp_error@@Base+0xa90>
   14614:	add	sp, sp, #20
   14618:	ldrd	r4, [sp]
   1461c:	add	sp, sp, #8
   14620:	pop	{pc}		; (ldr pc, [sp], #4)
   14624:	movw	r3, #10424	; 0x28b8
   14628:	movt	r3, #3
   1462c:	str	r4, [sp, #-8]!
   14630:	movw	r2, #56472	; 0xdc98
   14634:	movt	r2, #1
   14638:	ldr	r0, [r3]
   1463c:	movw	r1, #56568	; 0xdcf8
   14640:	movt	r1, #1
   14644:	str	lr, [sp, #4]
   14648:	bl	11280 <fprintf@plt>
   1464c:	movw	r3, #10396	; 0x289c
   14650:	movt	r3, #3
   14654:	ldr	r0, [r3]
   14658:	bl	1125c <exit@plt>

0001465c <_obstack_begin@@Base>:
   1465c:	strd	r4, [sp, #-16]!
   14660:	subs	r5, r2, #0
   14664:	mov	r4, r0
   14668:	ldrb	r2, [r0, #40]	; 0x28
   1466c:	moveq	r5, #8
   14670:	str	r6, [sp, #8]
   14674:	subne	r6, r5, #1
   14678:	moveq	r6, #7
   1467c:	ldr	r0, [sp, #16]
   14680:	cmp	r1, #0
   14684:	str	lr, [sp, #12]
   14688:	str	r6, [r4, #24]
   1468c:	bfc	r2, #0, #1
   14690:	str	r3, [r4, #28]
   14694:	str	r0, [r4, #32]
   14698:	movw	r0, #4072	; 0xfe8
   1469c:	strb	r2, [r4, #40]	; 0x28
   146a0:	moveq	r1, r0
   146a4:	ldrb	r2, [r4, #40]	; 0x28
   146a8:	str	r1, [r4]
   146ac:	tst	r2, #1
   146b0:	beq	1471c <_obstack_begin@@Base+0xc0>
   146b4:	ldr	r0, [r4, #36]	; 0x24
   146b8:	blx	r3
   146bc:	mov	r3, r0
   146c0:	cmp	r3, #0
   146c4:	str	r3, [r4, #4]
   146c8:	beq	1472c <_obstack_begin@@Base+0xd0>
   146cc:	ldrb	lr, [r4, #40]	; 0x28
   146d0:	add	r1, r3, #8
   146d4:	rsb	r2, r5, #0
   146d8:	add	r1, r1, r6
   146dc:	mov	r5, #0
   146e0:	ldr	ip, [r4]
   146e4:	and	r2, r2, r1
   146e8:	mov	r0, #1
   146ec:	ldr	r6, [sp, #8]
   146f0:	bic	lr, lr, #6
   146f4:	str	r2, [r4, #8]
   146f8:	str	r2, [r4, #12]
   146fc:	add	r2, r3, ip
   14700:	str	r2, [r3]
   14704:	str	r2, [r4, #16]
   14708:	str	r5, [r3, #4]
   1470c:	strb	lr, [r4, #40]	; 0x28
   14710:	ldrd	r4, [sp]
   14714:	add	sp, sp, #12
   14718:	pop	{pc}		; (ldr pc, [sp], #4)
   1471c:	mov	r0, r1
   14720:	blx	r3
   14724:	mov	r3, r0
   14728:	b	146c0 <_obstack_begin@@Base+0x64>
   1472c:	movw	r3, #10352	; 0x2870
   14730:	movt	r3, #3
   14734:	ldr	r3, [r3]
   14738:	blx	r3

0001473c <_obstack_begin_1@@Base>:
   1473c:	strd	r4, [sp, #-16]!
   14740:	subs	r5, r2, #0
   14744:	mov	r4, r0
   14748:	ldrb	r2, [r0, #40]	; 0x28
   1474c:	moveq	r5, #8
   14750:	str	r6, [sp, #8]
   14754:	subne	r6, r5, #1
   14758:	moveq	r6, #7
   1475c:	ldr	ip, [sp, #16]
   14760:	cmp	r1, #0
   14764:	str	lr, [sp, #12]
   14768:	str	r3, [r0, #28]
   1476c:	orr	r2, r2, #1
   14770:	str	ip, [r0, #32]
   14774:	movw	ip, #4072	; 0xfe8
   14778:	strb	r2, [r0, #40]	; 0x28
   1477c:	moveq	r1, ip
   14780:	ldrb	r2, [r4, #40]	; 0x28
   14784:	str	r1, [r4]
   14788:	ldr	r0, [sp, #20]
   1478c:	str	r6, [r4, #24]
   14790:	tst	r2, #1
   14794:	str	r0, [r4, #36]	; 0x24
   14798:	beq	14800 <_obstack_begin_1@@Base+0xc4>
   1479c:	blx	r3
   147a0:	mov	r3, r0
   147a4:	cmp	r3, #0
   147a8:	str	r3, [r4, #4]
   147ac:	beq	14810 <_obstack_begin_1@@Base+0xd4>
   147b0:	ldrb	lr, [r4, #40]	; 0x28
   147b4:	add	r1, r3, #8
   147b8:	rsb	r2, r5, #0
   147bc:	add	r1, r1, r6
   147c0:	mov	r5, #0
   147c4:	ldr	ip, [r4]
   147c8:	and	r2, r2, r1
   147cc:	mov	r0, #1
   147d0:	ldr	r6, [sp, #8]
   147d4:	bic	lr, lr, #6
   147d8:	str	r2, [r4, #8]
   147dc:	str	r2, [r4, #12]
   147e0:	add	r2, r3, ip
   147e4:	str	r2, [r3]
   147e8:	str	r2, [r4, #16]
   147ec:	str	r5, [r3, #4]
   147f0:	strb	lr, [r4, #40]	; 0x28
   147f4:	ldrd	r4, [sp]
   147f8:	add	sp, sp, #12
   147fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14800:	mov	r0, r1
   14804:	blx	r3
   14808:	mov	r3, r0
   1480c:	b	147a4 <_obstack_begin_1@@Base+0x68>
   14810:	movw	r3, #10352	; 0x2870
   14814:	movt	r3, #3
   14818:	ldr	r3, [r3]
   1481c:	blx	r3

00014820 <_obstack_newchunk@@Base>:
   14820:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14824:	mov	r4, r0
   14828:	ldr	ip, [r0]
   1482c:	ldr	r2, [r0, #8]
   14830:	ldr	r3, [r0, #24]
   14834:	strd	r6, [sp, #8]
   14838:	ldr	r7, [r0, #4]
   1483c:	str	r8, [sp, #16]
   14840:	ldr	r6, [r0, #12]
   14844:	str	lr, [sp, #20]
   14848:	sub	r6, r6, r2
   1484c:	adds	r1, r6, r1
   14850:	movcs	r0, #1
   14854:	movcc	r0, #0
   14858:	adds	r3, r3, r1
   1485c:	eor	r0, r0, #1
   14860:	add	r5, r3, r6, lsr #3
   14864:	movcs	r2, #1
   14868:	movcc	r2, #0
   1486c:	cmp	r3, ip
   14870:	eor	r2, r2, #1
   14874:	add	r5, r5, #100	; 0x64
   14878:	movcc	r3, ip
   1487c:	cmp	r3, r5
   14880:	movcs	r5, r3
   14884:	tst	r0, r2
   14888:	beq	1497c <_obstack_newchunk@@Base+0x15c>
   1488c:	ldrb	r3, [r4, #40]	; 0x28
   14890:	ldr	r2, [r4, #28]
   14894:	tst	r3, #1
   14898:	bne	14938 <_obstack_newchunk@@Base+0x118>
   1489c:	mov	r0, r5
   148a0:	blx	r2
   148a4:	mov	r8, r0
   148a8:	cmp	r8, #0
   148ac:	beq	1497c <_obstack_newchunk@@Base+0x15c>
   148b0:	add	r3, r8, r5
   148b4:	mov	r5, r8
   148b8:	str	r8, [r4, #4]
   148bc:	ldr	r0, [r4, #24]
   148c0:	mov	r2, r6
   148c4:	ldr	r1, [r4, #8]
   148c8:	str	r7, [r8, #4]
   148cc:	str	r3, [r4, #16]
   148d0:	str	r3, [r5], #8
   148d4:	add	r5, r5, r0
   148d8:	bic	r5, r5, r0
   148dc:	mov	r0, r5
   148e0:	bl	11160 <memcpy@plt>
   148e4:	ldrb	r2, [r4, #40]	; 0x28
   148e8:	tst	r2, #2
   148ec:	bne	1490c <_obstack_newchunk@@Base+0xec>
   148f0:	ldr	r0, [r4, #8]
   148f4:	add	r3, r7, #8
   148f8:	ldr	r1, [r4, #24]
   148fc:	add	r3, r3, r1
   14900:	bic	r3, r3, r1
   14904:	cmp	r0, r3
   14908:	beq	1494c <_obstack_newchunk@@Base+0x12c>
   1490c:	ldrb	r3, [r4, #40]	; 0x28
   14910:	add	r6, r5, r6
   14914:	ldr	r8, [sp, #16]
   14918:	str	r5, [r4, #8]
   1491c:	str	r6, [r4, #12]
   14920:	bfc	r3, #1, #1
   14924:	ldrd	r6, [sp, #8]
   14928:	strb	r3, [r4, #40]	; 0x28
   1492c:	ldrd	r4, [sp]
   14930:	add	sp, sp, #20
   14934:	pop	{pc}		; (ldr pc, [sp], #4)
   14938:	mov	r1, r5
   1493c:	ldr	r0, [r4, #36]	; 0x24
   14940:	blx	r2
   14944:	mov	r8, r0
   14948:	b	148a8 <_obstack_newchunk@@Base+0x88>
   1494c:	ldr	r3, [r7, #4]
   14950:	tst	r2, #1
   14954:	ldr	r2, [r4, #32]
   14958:	str	r3, [r8, #4]
   1495c:	beq	14970 <_obstack_newchunk@@Base+0x150>
   14960:	mov	r1, r7
   14964:	ldr	r0, [r4, #36]	; 0x24
   14968:	blx	r2
   1496c:	b	1490c <_obstack_newchunk@@Base+0xec>
   14970:	mov	r0, r7
   14974:	blx	r2
   14978:	b	1490c <_obstack_newchunk@@Base+0xec>
   1497c:	movw	r3, #10352	; 0x2870
   14980:	movt	r3, #3
   14984:	ldr	r3, [r3]
   14988:	blx	r3

0001498c <_obstack_allocated_p@@Base>:
   1498c:	ldr	r0, [r0, #4]
   14990:	cmp	r0, #0
   14994:	beq	149c4 <_obstack_allocated_p@@Base+0x38>
   14998:	cmp	r1, r0
   1499c:	bls	149ac <_obstack_allocated_p@@Base+0x20>
   149a0:	ldr	r3, [r0]
   149a4:	cmp	r3, r1
   149a8:	bcs	149bc <_obstack_allocated_p@@Base+0x30>
   149ac:	ldr	r0, [r0, #4]
   149b0:	cmp	r0, #0
   149b4:	bne	14998 <_obstack_allocated_p@@Base+0xc>
   149b8:	bx	lr
   149bc:	mov	r0, #1
   149c0:	bx	lr
   149c4:	bx	lr

000149c8 <_obstack_free@@Base>:
   149c8:	strd	r4, [sp, #-16]!
   149cc:	str	r6, [sp, #8]
   149d0:	mov	r6, r1
   149d4:	ldr	r1, [r0, #4]
   149d8:	str	lr, [sp, #12]
   149dc:	cmp	r1, #0
   149e0:	movne	r4, r0
   149e4:	bne	14a0c <_obstack_free@@Base+0x44>
   149e8:	b	14a5c <_obstack_free@@Base+0x94>
   149ec:	ldr	r0, [r4, #36]	; 0x24
   149f0:	blx	r3
   149f4:	ldrb	r3, [r4, #40]	; 0x28
   149f8:	cmp	r5, #0
   149fc:	orr	r3, r3, #2
   14a00:	strb	r3, [r4, #40]	; 0x28
   14a04:	beq	14a5c <_obstack_free@@Base+0x94>
   14a08:	mov	r1, r5
   14a0c:	cmp	r1, r6
   14a10:	bcs	14a20 <_obstack_free@@Base+0x58>
   14a14:	ldr	r3, [r1]
   14a18:	cmp	r3, r6
   14a1c:	bcs	14a40 <_obstack_free@@Base+0x78>
   14a20:	ldrb	r2, [r4, #40]	; 0x28
   14a24:	ldr	r5, [r1, #4]
   14a28:	ldr	r3, [r4, #32]
   14a2c:	tst	r2, #1
   14a30:	bne	149ec <_obstack_free@@Base+0x24>
   14a34:	mov	r0, r1
   14a38:	blx	r3
   14a3c:	b	149f4 <_obstack_free@@Base+0x2c>
   14a40:	stmib	r4, {r1, r6}
   14a44:	str	r6, [r4, #12]
   14a48:	str	r3, [r4, #16]
   14a4c:	ldrd	r4, [sp]
   14a50:	ldr	r6, [sp, #8]
   14a54:	add	sp, sp, #12
   14a58:	pop	{pc}		; (ldr pc, [sp], #4)
   14a5c:	cmp	r6, #0
   14a60:	beq	14a4c <_obstack_free@@Base+0x84>
   14a64:	bl	11394 <abort@plt>

00014a68 <_obstack_memory_used@@Base>:
   14a68:	ldr	r3, [r0, #4]
   14a6c:	cmp	r3, #0
   14a70:	beq	14a94 <_obstack_memory_used@@Base+0x2c>
   14a74:	mov	r0, #0
   14a78:	ldr	r2, [r3]
   14a7c:	sub	r2, r2, r3
   14a80:	ldr	r3, [r3, #4]
   14a84:	add	r0, r0, r2
   14a88:	cmp	r3, #0
   14a8c:	bne	14a78 <_obstack_memory_used@@Base+0x10>
   14a90:	bx	lr
   14a94:	mov	r0, r3
   14a98:	bx	lr
   14a9c:	strd	r4, [sp, #-16]!
   14aa0:	subs	r4, r0, #0
   14aa4:	str	r6, [sp, #8]
   14aa8:	str	lr, [sp, #12]
   14aac:	beq	14b44 <_obstack_memory_used@@Base+0xdc>
   14ab0:	mov	r1, #47	; 0x2f
   14ab4:	bl	112e0 <strrchr@plt>
   14ab8:	subs	r5, r0, #0
   14abc:	beq	14b1c <_obstack_memory_used@@Base+0xb4>
   14ac0:	add	r6, r5, #1
   14ac4:	sub	r3, r6, r4
   14ac8:	cmp	r3, #6
   14acc:	ble	14b1c <_obstack_memory_used@@Base+0xb4>
   14ad0:	movw	r1, #56548	; 0xdce4
   14ad4:	movt	r1, #1
   14ad8:	mov	r2, #7
   14adc:	sub	r0, r5, #6
   14ae0:	bl	11388 <strncmp@plt>
   14ae4:	cmp	r0, #0
   14ae8:	bne	14b1c <_obstack_memory_used@@Base+0xb4>
   14aec:	movw	r1, #56556	; 0xdcec
   14af0:	movt	r1, #1
   14af4:	mov	r2, #3
   14af8:	mov	r0, r6
   14afc:	bl	11388 <strncmp@plt>
   14b00:	cmp	r0, #0
   14b04:	movne	r4, r6
   14b08:	bne	14b1c <_obstack_memory_used@@Base+0xb4>
   14b0c:	add	r4, r5, #4
   14b10:	movw	r3, #10416	; 0x28b0
   14b14:	movt	r3, #3
   14b18:	str	r4, [r3]
   14b1c:	movw	r2, #10468	; 0x28e4
   14b20:	movt	r2, #3
   14b24:	ldr	r6, [sp, #8]
   14b28:	movw	r3, #10420	; 0x28b4
   14b2c:	movt	r3, #3
   14b30:	str	r4, [r2]
   14b34:	str	r4, [r3]
   14b38:	ldrd	r4, [sp]
   14b3c:	add	sp, sp, #12
   14b40:	pop	{pc}		; (ldr pc, [sp], #4)
   14b44:	movw	r3, #10424	; 0x28b8
   14b48:	movt	r3, #3
   14b4c:	movw	r0, #56492	; 0xdcac
   14b50:	movt	r0, #1
   14b54:	ldr	r3, [r3]
   14b58:	mov	r2, #55	; 0x37
   14b5c:	mov	r1, #1
   14b60:	bl	111c0 <fwrite@plt>
   14b64:	bl	11394 <abort@plt>
   14b68:	cmp	r1, #0
   14b6c:	strd	r4, [sp, #-16]!
   14b70:	mov	r4, r0
   14b74:	str	r6, [sp, #8]
   14b78:	str	lr, [sp, #12]
   14b7c:	sub	sp, sp, #32
   14b80:	ldr	r5, [sp, #48]	; 0x30
   14b84:	ldr	r6, [sp, #52]	; 0x34
   14b88:	beq	14c8c <_obstack_memory_used@@Base+0x224>
   14b8c:	mov	ip, r3
   14b90:	mov	r3, r2
   14b94:	mov	r2, r1
   14b98:	movw	r1, #56560	; 0xdcf0
   14b9c:	movt	r1, #1
   14ba0:	str	ip, [sp]
   14ba4:	bl	11280 <fprintf@plt>
   14ba8:	movw	r3, #2022	; 0x7e6
   14bac:	movw	r2, #56580	; 0xdd04
   14bb0:	movt	r2, #1
   14bb4:	movw	r1, #57348	; 0xe004
   14bb8:	movt	r1, #1
   14bbc:	mov	r0, r4
   14bc0:	bl	11280 <fprintf@plt>
   14bc4:	mov	r1, r4
   14bc8:	mov	r0, #10
   14bcc:	bl	112f8 <fputc@plt>
   14bd0:	movw	r2, #56584	; 0xdd08
   14bd4:	movt	r2, #1
   14bd8:	movw	r1, #56620	; 0xdd2c
   14bdc:	movt	r1, #1
   14be0:	mov	r0, r4
   14be4:	bl	11280 <fprintf@plt>
   14be8:	mov	r1, r4
   14bec:	mov	r0, #10
   14bf0:	bl	112f8 <fputc@plt>
   14bf4:	cmp	r6, #9
   14bf8:	ldrls	pc, [pc, r6, lsl #2]
   14bfc:	b	14e58 <_obstack_memory_used@@Base+0x3f0>
   14c00:	andeq	r4, r1, r8, ror ip
   14c04:	muleq	r1, ip, ip
   14c08:	andeq	r4, r1, r4, asr #25
   14c0c:	andeq	r4, r1, ip, ror #25
   14c10:	andeq	r4, r1, ip, lsl sp
   14c14:	andeq	r4, r1, r8, asr sp
   14c18:	andeq	r4, r1, ip, lsl #27
   14c1c:	andeq	r4, r1, r8, asr #27
   14c20:	andeq	r4, r1, ip, lsl #28
   14c24:	andeq	r4, r1, r8, lsr #24
   14c28:	ldr	ip, [r5, #8]
   14c2c:	movw	r1, #57060	; 0xdee4
   14c30:	movt	r1, #1
   14c34:	mov	r0, r4
   14c38:	ldr	r3, [r5, #12]
   14c3c:	ldr	r2, [r5, #32]
   14c40:	str	ip, [sp]
   14c44:	ldr	ip, [r5, #16]
   14c48:	str	r2, [sp, #24]
   14c4c:	ldr	r2, [r5, #28]
   14c50:	str	r3, [sp, #4]
   14c54:	ldr	r3, [r5, #20]
   14c58:	str	ip, [sp, #8]
   14c5c:	ldr	ip, [r5, #24]
   14c60:	str	r2, [sp, #20]
   14c64:	ldr	r2, [r5]
   14c68:	str	r3, [sp, #12]
   14c6c:	ldr	r3, [r5, #4]
   14c70:	str	ip, [sp, #16]
   14c74:	bl	11280 <fprintf@plt>
   14c78:	add	sp, sp, #32
   14c7c:	ldrd	r4, [sp]
   14c80:	ldr	r6, [sp, #8]
   14c84:	add	sp, sp, #12
   14c88:	pop	{pc}		; (ldr pc, [sp], #4)
   14c8c:	movw	r1, #56572	; 0xdcfc
   14c90:	movt	r1, #1
   14c94:	bl	11280 <fprintf@plt>
   14c98:	b	14ba8 <_obstack_memory_used@@Base+0x140>
   14c9c:	ldr	r2, [r5]
   14ca0:	mov	r0, r4
   14ca4:	movw	r1, #56792	; 0xddd8
   14ca8:	movt	r1, #1
   14cac:	add	sp, sp, #32
   14cb0:	ldrd	r4, [sp]
   14cb4:	ldr	r6, [sp, #8]
   14cb8:	ldr	lr, [sp, #12]
   14cbc:	add	sp, sp, #16
   14cc0:	b	11280 <fprintf@plt>
   14cc4:	ldrd	r2, [r5]
   14cc8:	mov	r0, r4
   14ccc:	movw	r1, #56808	; 0xdde8
   14cd0:	movt	r1, #1
   14cd4:	add	sp, sp, #32
   14cd8:	ldrd	r4, [sp]
   14cdc:	ldr	r6, [sp, #8]
   14ce0:	ldr	lr, [sp, #12]
   14ce4:	add	sp, sp, #16
   14ce8:	b	11280 <fprintf@plt>
   14cec:	ldrd	r2, [r5]
   14cf0:	mov	r0, r4
   14cf4:	movw	r1, #56832	; 0xde00
   14cf8:	movt	r1, #1
   14cfc:	ldr	ip, [r5, #8]
   14d00:	str	ip, [sp, #48]	; 0x30
   14d04:	add	sp, sp, #32
   14d08:	ldrd	r4, [sp]
   14d0c:	ldr	r6, [sp, #8]
   14d10:	ldr	lr, [sp, #12]
   14d14:	add	sp, sp, #16
   14d18:	b	11280 <fprintf@plt>
   14d1c:	ldr	r2, [r5]
   14d20:	mov	r0, r4
   14d24:	movw	r1, #56860	; 0xde1c
   14d28:	movt	r1, #1
   14d2c:	ldr	r3, [r5, #8]
   14d30:	ldr	ip, [r5, #12]
   14d34:	str	r3, [sp, #48]	; 0x30
   14d38:	ldr	r3, [r5, #4]
   14d3c:	str	ip, [sp, #52]	; 0x34
   14d40:	add	sp, sp, #32
   14d44:	ldrd	r4, [sp]
   14d48:	ldr	r6, [sp, #8]
   14d4c:	ldr	lr, [sp, #12]
   14d50:	add	sp, sp, #16
   14d54:	b	11280 <fprintf@plt>
   14d58:	ldr	r2, [r5, #8]
   14d5c:	mov	r0, r4
   14d60:	movw	r1, #56892	; 0xde3c
   14d64:	movt	r1, #1
   14d68:	ldr	ip, [r5, #12]
   14d6c:	ldr	r3, [r5, #16]
   14d70:	str	r2, [sp]
   14d74:	ldr	r2, [r5]
   14d78:	str	r3, [sp, #8]
   14d7c:	ldr	r3, [r5, #4]
   14d80:	str	ip, [sp, #4]
   14d84:	bl	11280 <fprintf@plt>
   14d88:	b	14c78 <_obstack_memory_used@@Base+0x210>
   14d8c:	ldr	ip, [r5, #8]
   14d90:	mov	r0, r4
   14d94:	movw	r1, #56928	; 0xde60
   14d98:	movt	r1, #1
   14d9c:	ldr	r3, [r5, #12]
   14da0:	ldr	r2, [r5, #20]
   14da4:	str	ip, [sp]
   14da8:	ldr	ip, [r5, #16]
   14dac:	str	r2, [sp, #12]
   14db0:	ldr	r2, [r5]
   14db4:	str	r3, [sp, #4]
   14db8:	ldr	r3, [r5, #4]
   14dbc:	str	ip, [sp, #8]
   14dc0:	bl	11280 <fprintf@plt>
   14dc4:	b	14c78 <_obstack_memory_used@@Base+0x210>
   14dc8:	ldr	r3, [r5, #8]
   14dcc:	mov	r0, r4
   14dd0:	movw	r1, #56968	; 0xde88
   14dd4:	movt	r1, #1
   14dd8:	ldr	r2, [r5, #12]
   14ddc:	ldr	ip, [r5, #24]
   14de0:	str	r3, [sp]
   14de4:	ldr	r3, [r5, #16]
   14de8:	str	ip, [sp, #16]
   14dec:	ldr	ip, [r5, #20]
   14df0:	str	r2, [sp, #4]
   14df4:	ldr	r2, [r5]
   14df8:	str	r3, [sp, #8]
   14dfc:	ldr	r3, [r5, #4]
   14e00:	str	ip, [sp, #12]
   14e04:	bl	11280 <fprintf@plt>
   14e08:	b	14c78 <_obstack_memory_used@@Base+0x210>
   14e0c:	ldr	r2, [r5, #8]
   14e10:	mov	r0, r4
   14e14:	movw	r1, #57012	; 0xdeb4
   14e18:	movt	r1, #1
   14e1c:	ldr	ip, [r5, #12]
   14e20:	ldr	r3, [r5, #28]
   14e24:	str	r2, [sp]
   14e28:	ldr	r2, [r5, #16]
   14e2c:	str	r3, [sp, #20]
   14e30:	ldr	r3, [r5, #24]
   14e34:	str	ip, [sp, #4]
   14e38:	ldr	ip, [r5, #20]
   14e3c:	str	r2, [sp, #8]
   14e40:	ldr	r2, [r5]
   14e44:	str	r3, [sp, #16]
   14e48:	ldr	r3, [r5, #4]
   14e4c:	str	ip, [sp, #12]
   14e50:	bl	11280 <fprintf@plt>
   14e54:	b	14c78 <_obstack_memory_used@@Base+0x210>
   14e58:	movw	r1, #57112	; 0xdf18
   14e5c:	movt	r1, #1
   14e60:	ldr	ip, [r5, #8]
   14e64:	mov	r0, r4
   14e68:	b	14c38 <_obstack_memory_used@@Base+0x1d0>
   14e6c:	strd	r4, [sp, #-16]!
   14e70:	mov	ip, r3
   14e74:	str	r6, [sp, #8]
   14e78:	mov	r6, r0
   14e7c:	str	lr, [sp, #12]
   14e80:	sub	sp, sp, #32
   14e84:	ldr	r5, [sp, #48]	; 0x30
   14e88:	ldr	r4, [r5]
   14e8c:	cmp	r4, #0
   14e90:	beq	14eac <_obstack_memory_used@@Base+0x444>
   14e94:	mov	r3, r5
   14e98:	mov	r4, #0
   14e9c:	ldr	r0, [r3, #4]!
   14ea0:	add	r4, r4, #1
   14ea4:	cmp	r0, #0
   14ea8:	bne	14e9c <_obstack_memory_used@@Base+0x434>
   14eac:	cmp	r1, #0
   14eb0:	beq	14fb4 <_obstack_memory_used@@Base+0x54c>
   14eb4:	mov	r3, r2
   14eb8:	mov	r0, r6
   14ebc:	str	ip, [sp]
   14ec0:	mov	r2, r1
   14ec4:	movw	r1, #56560	; 0xdcf0
   14ec8:	movt	r1, #1
   14ecc:	bl	11280 <fprintf@plt>
   14ed0:	movw	r3, #2022	; 0x7e6
   14ed4:	movw	r2, #56580	; 0xdd04
   14ed8:	movt	r2, #1
   14edc:	movw	r1, #57348	; 0xe004
   14ee0:	movt	r1, #1
   14ee4:	mov	r0, r6
   14ee8:	bl	11280 <fprintf@plt>
   14eec:	mov	r1, r6
   14ef0:	mov	r0, #10
   14ef4:	bl	112f8 <fputc@plt>
   14ef8:	movw	r2, #56584	; 0xdd08
   14efc:	movt	r2, #1
   14f00:	movw	r1, #56620	; 0xdd2c
   14f04:	movt	r1, #1
   14f08:	mov	r0, r6
   14f0c:	bl	11280 <fprintf@plt>
   14f10:	mov	r1, r6
   14f14:	mov	r0, #10
   14f18:	bl	112f8 <fputc@plt>
   14f1c:	cmp	r4, #9
   14f20:	ldrls	pc, [pc, r4, lsl #2]
   14f24:	b	15178 <_obstack_memory_used@@Base+0x710>
   14f28:	andeq	r4, r1, r0, lsr #31
   14f2c:	andeq	r4, r1, ip, asr #31
   14f30:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f34:	andeq	r5, r1, ip, lsl r0
   14f38:	andeq	r5, r1, ip, asr #32
   14f3c:	andeq	r5, r1, r8, ror r0
   14f40:	andeq	r5, r1, ip, lsr #1
   14f44:	andeq	r5, r1, r8, ror #1
   14f48:	andeq	r5, r1, ip, lsr #2
   14f4c:	andeq	r4, r1, r0, asr pc
   14f50:	ldr	ip, [r5, #8]
   14f54:	movw	r1, #57060	; 0xdee4
   14f58:	movt	r1, #1
   14f5c:	mov	r0, r6
   14f60:	ldr	r3, [r5, #12]
   14f64:	ldr	r2, [r5, #32]
   14f68:	str	ip, [sp]
   14f6c:	ldr	ip, [r5, #16]
   14f70:	str	r2, [sp, #24]
   14f74:	ldr	r2, [r5, #28]
   14f78:	str	r3, [sp, #4]
   14f7c:	ldr	r3, [r5, #20]
   14f80:	str	ip, [sp, #8]
   14f84:	ldr	ip, [r5, #24]
   14f88:	str	r2, [sp, #20]
   14f8c:	ldr	r2, [r5]
   14f90:	str	r3, [sp, #12]
   14f94:	ldr	r3, [r5, #4]
   14f98:	str	ip, [sp, #16]
   14f9c:	bl	11280 <fprintf@plt>
   14fa0:	add	sp, sp, #32
   14fa4:	ldrd	r4, [sp]
   14fa8:	ldr	r6, [sp, #8]
   14fac:	add	sp, sp, #12
   14fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fb4:	mov	r3, ip
   14fb8:	movw	r1, #56572	; 0xdcfc
   14fbc:	movt	r1, #1
   14fc0:	mov	r0, r6
   14fc4:	bl	11280 <fprintf@plt>
   14fc8:	b	14ed0 <_obstack_memory_used@@Base+0x468>
   14fcc:	ldr	r2, [r5]
   14fd0:	mov	r0, r6
   14fd4:	movw	r1, #56792	; 0xddd8
   14fd8:	movt	r1, #1
   14fdc:	add	sp, sp, #32
   14fe0:	ldrd	r4, [sp]
   14fe4:	ldr	r6, [sp, #8]
   14fe8:	ldr	lr, [sp, #12]
   14fec:	add	sp, sp, #16
   14ff0:	b	11280 <fprintf@plt>
   14ff4:	ldrd	r2, [r5]
   14ff8:	mov	r0, r6
   14ffc:	movw	r1, #56808	; 0xdde8
   15000:	movt	r1, #1
   15004:	add	sp, sp, #32
   15008:	ldrd	r4, [sp]
   1500c:	ldr	r6, [sp, #8]
   15010:	ldr	lr, [sp, #12]
   15014:	add	sp, sp, #16
   15018:	b	11280 <fprintf@plt>
   1501c:	ldrd	r2, [r5]
   15020:	mov	r0, r6
   15024:	movw	r1, #56832	; 0xde00
   15028:	movt	r1, #1
   1502c:	ldr	ip, [r5, #8]
   15030:	str	ip, [sp, #48]	; 0x30
   15034:	add	sp, sp, #32
   15038:	ldrd	r4, [sp]
   1503c:	ldr	r6, [sp, #8]
   15040:	ldr	lr, [sp, #12]
   15044:	add	sp, sp, #16
   15048:	b	11280 <fprintf@plt>
   1504c:	mov	r0, r6
   15050:	movw	r1, #56860	; 0xde1c
   15054:	movt	r1, #1
   15058:	ldr	r3, [r5, #8]
   1505c:	ldr	ip, [r5, #12]
   15060:	ldr	r2, [r5]
   15064:	str	r3, [sp]
   15068:	ldr	r3, [r5, #4]
   1506c:	str	ip, [sp, #4]
   15070:	bl	11280 <fprintf@plt>
   15074:	b	14fa0 <_obstack_memory_used@@Base+0x538>
   15078:	ldr	r2, [r5, #8]
   1507c:	mov	r0, r6
   15080:	movw	r1, #56892	; 0xde3c
   15084:	movt	r1, #1
   15088:	ldr	ip, [r5, #12]
   1508c:	ldr	r3, [r5, #16]
   15090:	str	r2, [sp]
   15094:	ldr	r2, [r5]
   15098:	str	r3, [sp, #8]
   1509c:	ldr	r3, [r5, #4]
   150a0:	str	ip, [sp, #4]
   150a4:	bl	11280 <fprintf@plt>
   150a8:	b	14fa0 <_obstack_memory_used@@Base+0x538>
   150ac:	ldr	ip, [r5, #8]
   150b0:	mov	r0, r6
   150b4:	movw	r1, #56928	; 0xde60
   150b8:	movt	r1, #1
   150bc:	ldr	r3, [r5, #12]
   150c0:	ldr	r2, [r5, #20]
   150c4:	str	ip, [sp]
   150c8:	ldr	ip, [r5, #16]
   150cc:	str	r2, [sp, #12]
   150d0:	ldr	r2, [r5]
   150d4:	str	r3, [sp, #4]
   150d8:	ldr	r3, [r5, #4]
   150dc:	str	ip, [sp, #8]
   150e0:	bl	11280 <fprintf@plt>
   150e4:	b	14fa0 <_obstack_memory_used@@Base+0x538>
   150e8:	ldr	r3, [r5, #8]
   150ec:	mov	r0, r6
   150f0:	movw	r1, #56968	; 0xde88
   150f4:	movt	r1, #1
   150f8:	ldr	r2, [r5, #12]
   150fc:	ldr	ip, [r5, #24]
   15100:	str	r3, [sp]
   15104:	ldr	r3, [r5, #16]
   15108:	str	ip, [sp, #16]
   1510c:	ldr	ip, [r5, #20]
   15110:	str	r2, [sp, #4]
   15114:	ldr	r2, [r5]
   15118:	str	r3, [sp, #8]
   1511c:	ldr	r3, [r5, #4]
   15120:	str	ip, [sp, #12]
   15124:	bl	11280 <fprintf@plt>
   15128:	b	14fa0 <_obstack_memory_used@@Base+0x538>
   1512c:	ldr	r2, [r5, #8]
   15130:	mov	r0, r6
   15134:	movw	r1, #57012	; 0xdeb4
   15138:	movt	r1, #1
   1513c:	ldr	ip, [r5, #12]
   15140:	ldr	r3, [r5, #28]
   15144:	str	r2, [sp]
   15148:	ldr	r2, [r5, #16]
   1514c:	str	r3, [sp, #20]
   15150:	ldr	r3, [r5, #24]
   15154:	str	ip, [sp, #4]
   15158:	ldr	ip, [r5, #20]
   1515c:	str	r2, [sp, #8]
   15160:	ldr	r2, [r5]
   15164:	str	r3, [sp, #16]
   15168:	ldr	r3, [r5, #4]
   1516c:	str	ip, [sp, #12]
   15170:	bl	11280 <fprintf@plt>
   15174:	b	14fa0 <_obstack_memory_used@@Base+0x538>
   15178:	movw	r1, #57112	; 0xdf18
   1517c:	movt	r1, #1
   15180:	ldr	ip, [r5, #8]
   15184:	mov	r0, r6
   15188:	b	14f60 <_obstack_memory_used@@Base+0x4f8>
   1518c:	strd	r4, [sp, #-12]!
   15190:	mov	r4, r0
   15194:	mov	r0, r3
   15198:	str	lr, [sp, #8]
   1519c:	sub	sp, sp, #76	; 0x4c
   151a0:	ldr	ip, [sp, #88]	; 0x58
   151a4:	ldr	r3, [ip]
   151a8:	cmp	r3, #0
   151ac:	str	r3, [sp, #32]
   151b0:	beq	154d0 <_obstack_memory_used@@Base+0xa68>
   151b4:	ldr	r3, [ip, #4]
   151b8:	cmp	r3, #0
   151bc:	str	r3, [sp, #36]	; 0x24
   151c0:	beq	154d8 <_obstack_memory_used@@Base+0xa70>
   151c4:	ldr	r3, [ip, #8]
   151c8:	cmp	r3, #0
   151cc:	str	r3, [sp, #40]	; 0x28
   151d0:	beq	154e0 <_obstack_memory_used@@Base+0xa78>
   151d4:	ldr	r3, [ip, #12]
   151d8:	cmp	r3, #0
   151dc:	str	r3, [sp, #44]	; 0x2c
   151e0:	beq	154e8 <_obstack_memory_used@@Base+0xa80>
   151e4:	ldr	r3, [ip, #16]
   151e8:	cmp	r3, #0
   151ec:	str	r3, [sp, #48]	; 0x30
   151f0:	beq	154f0 <_obstack_memory_used@@Base+0xa88>
   151f4:	ldr	r3, [ip, #20]
   151f8:	cmp	r3, #0
   151fc:	str	r3, [sp, #52]	; 0x34
   15200:	beq	154f8 <_obstack_memory_used@@Base+0xa90>
   15204:	ldr	r3, [ip, #24]
   15208:	cmp	r3, #0
   1520c:	str	r3, [sp, #56]	; 0x38
   15210:	beq	15500 <_obstack_memory_used@@Base+0xa98>
   15214:	ldr	r3, [ip, #28]
   15218:	cmp	r3, #0
   1521c:	str	r3, [sp, #60]	; 0x3c
   15220:	beq	15508 <_obstack_memory_used@@Base+0xaa0>
   15224:	ldr	r3, [ip, #32]
   15228:	cmp	r3, #0
   1522c:	str	r3, [sp, #64]	; 0x40
   15230:	beq	15510 <_obstack_memory_used@@Base+0xaa8>
   15234:	ldr	r3, [ip, #36]	; 0x24
   15238:	cmp	r3, #0
   1523c:	movne	r5, #10
   15240:	moveq	r5, #9
   15244:	cmp	r1, #0
   15248:	beq	15344 <_obstack_memory_used@@Base+0x8dc>
   1524c:	mov	r3, r2
   15250:	mov	r2, r1
   15254:	str	r0, [sp]
   15258:	movw	r1, #56560	; 0xdcf0
   1525c:	movt	r1, #1
   15260:	mov	r0, r4
   15264:	bl	11280 <fprintf@plt>
   15268:	movw	r3, #2022	; 0x7e6
   1526c:	movw	r2, #56580	; 0xdd04
   15270:	movt	r2, #1
   15274:	movw	r1, #57348	; 0xe004
   15278:	movt	r1, #1
   1527c:	mov	r0, r4
   15280:	bl	11280 <fprintf@plt>
   15284:	mov	r1, r4
   15288:	mov	r0, #10
   1528c:	bl	112f8 <fputc@plt>
   15290:	movw	r2, #56584	; 0xdd08
   15294:	movt	r2, #1
   15298:	movw	r1, #56620	; 0xdd2c
   1529c:	movt	r1, #1
   152a0:	mov	r0, r4
   152a4:	bl	11280 <fprintf@plt>
   152a8:	mov	r1, r4
   152ac:	mov	r0, #10
   152b0:	bl	112f8 <fputc@plt>
   152b4:	cmp	r5, #9
   152b8:	ldrls	pc, [pc, r5, lsl #2]
   152bc:	b	15518 <_obstack_memory_used@@Base+0xab0>
   152c0:	andeq	r5, r1, r4, lsr r3
   152c4:	andeq	r5, r1, ip, asr r3
   152c8:	andeq	r5, r1, r0, lsl #7
   152cc:	andeq	r5, r1, r4, lsr #7
   152d0:	ldrdeq	r5, [r1], -r0
   152d4:	strdeq	r5, [r1], -r8
   152d8:	andeq	r5, r1, r0, lsr #8
   152dc:	andeq	r5, r1, r8, asr r4
   152e0:	muleq	r1, r8, r4
   152e4:	andeq	r5, r1, r8, ror #5
   152e8:	ldr	ip, [sp, #40]	; 0x28
   152ec:	movw	r1, #57060	; 0xdee4
   152f0:	movt	r1, #1
   152f4:	mov	r0, r4
   152f8:	str	ip, [sp]
   152fc:	ldr	r2, [sp, #44]	; 0x2c
   15300:	ldr	ip, [sp, #48]	; 0x30
   15304:	ldr	r3, [sp, #64]	; 0x40
   15308:	str	r2, [sp, #4]
   1530c:	ldr	r2, [sp, #52]	; 0x34
   15310:	str	ip, [sp, #8]
   15314:	ldr	ip, [sp, #56]	; 0x38
   15318:	str	r3, [sp, #24]
   1531c:	ldr	r3, [sp, #60]	; 0x3c
   15320:	str	r2, [sp, #12]
   15324:	str	ip, [sp, #16]
   15328:	str	r3, [sp, #20]
   1532c:	ldrd	r2, [sp, #32]
   15330:	bl	11280 <fprintf@plt>
   15334:	add	sp, sp, #76	; 0x4c
   15338:	ldrd	r4, [sp]
   1533c:	add	sp, sp, #8
   15340:	pop	{pc}		; (ldr pc, [sp], #4)
   15344:	mov	r3, r0
   15348:	movw	r1, #56572	; 0xdcfc
   1534c:	movt	r1, #1
   15350:	mov	r0, r4
   15354:	bl	11280 <fprintf@plt>
   15358:	b	15268 <_obstack_memory_used@@Base+0x800>
   1535c:	ldr	r2, [sp, #32]
   15360:	mov	r0, r4
   15364:	movw	r1, #56792	; 0xddd8
   15368:	movt	r1, #1
   1536c:	add	sp, sp, #76	; 0x4c
   15370:	ldrd	r4, [sp]
   15374:	ldr	lr, [sp, #8]
   15378:	add	sp, sp, #12
   1537c:	b	11280 <fprintf@plt>
   15380:	ldrd	r2, [sp, #32]
   15384:	mov	r0, r4
   15388:	movw	r1, #56808	; 0xdde8
   1538c:	movt	r1, #1
   15390:	add	sp, sp, #76	; 0x4c
   15394:	ldrd	r4, [sp]
   15398:	ldr	lr, [sp, #8]
   1539c:	add	sp, sp, #12
   153a0:	b	11280 <fprintf@plt>
   153a4:	ldrd	r2, [sp, #32]
   153a8:	mov	r0, r4
   153ac:	movw	r1, #56832	; 0xde00
   153b0:	movt	r1, #1
   153b4:	ldr	ip, [sp, #40]	; 0x28
   153b8:	str	ip, [sp, #88]	; 0x58
   153bc:	add	sp, sp, #76	; 0x4c
   153c0:	ldrd	r4, [sp]
   153c4:	ldr	lr, [sp, #8]
   153c8:	add	sp, sp, #12
   153cc:	b	11280 <fprintf@plt>
   153d0:	mov	r0, r4
   153d4:	movw	r1, #56860	; 0xde1c
   153d8:	movt	r1, #1
   153dc:	ldr	r3, [sp, #40]	; 0x28
   153e0:	ldr	ip, [sp, #44]	; 0x2c
   153e4:	ldr	r2, [sp, #32]
   153e8:	stm	sp, {r3, ip}
   153ec:	ldr	r3, [sp, #36]	; 0x24
   153f0:	bl	11280 <fprintf@plt>
   153f4:	b	15334 <_obstack_memory_used@@Base+0x8cc>
   153f8:	ldrd	r2, [sp, #40]	; 0x28
   153fc:	mov	r0, r4
   15400:	movw	r1, #56892	; 0xde3c
   15404:	movt	r1, #1
   15408:	ldr	ip, [sp, #48]	; 0x30
   1540c:	strd	r2, [sp]
   15410:	ldrd	r2, [sp, #32]
   15414:	str	ip, [sp, #8]
   15418:	bl	11280 <fprintf@plt>
   1541c:	b	15334 <_obstack_memory_used@@Base+0x8cc>
   15420:	ldr	ip, [sp, #40]	; 0x28
   15424:	mov	r0, r4
   15428:	movw	r1, #56928	; 0xde60
   1542c:	movt	r1, #1
   15430:	ldr	r2, [sp, #44]	; 0x2c
   15434:	ldr	r3, [sp, #52]	; 0x34
   15438:	str	ip, [sp]
   1543c:	ldr	ip, [sp, #48]	; 0x30
   15440:	str	r2, [sp, #4]
   15444:	str	ip, [sp, #8]
   15448:	str	r3, [sp, #12]
   1544c:	ldrd	r2, [sp, #32]
   15450:	bl	11280 <fprintf@plt>
   15454:	b	15334 <_obstack_memory_used@@Base+0x8cc>
   15458:	ldr	r3, [sp, #40]	; 0x28
   1545c:	mov	r0, r4
   15460:	movw	r1, #56968	; 0xde88
   15464:	movt	r1, #1
   15468:	ldr	ip, [sp, #44]	; 0x2c
   1546c:	ldr	r2, [sp, #56]	; 0x38
   15470:	stm	sp, {r3, ip}
   15474:	ldr	r3, [sp, #48]	; 0x30
   15478:	ldr	ip, [sp, #52]	; 0x34
   1547c:	str	r3, [sp, #8]
   15480:	str	r2, [sp, #16]
   15484:	str	ip, [sp, #12]
   15488:	ldr	r2, [sp, #32]
   1548c:	ldr	r3, [sp, #36]	; 0x24
   15490:	bl	11280 <fprintf@plt>
   15494:	b	15334 <_obstack_memory_used@@Base+0x8cc>
   15498:	ldrd	r2, [sp, #40]	; 0x28
   1549c:	mov	r0, r4
   154a0:	movw	r1, #57012	; 0xdeb4
   154a4:	movt	r1, #1
   154a8:	ldr	ip, [sp, #60]	; 0x3c
   154ac:	strd	r2, [sp]
   154b0:	ldrd	r2, [sp, #48]	; 0x30
   154b4:	str	ip, [sp, #20]
   154b8:	ldr	ip, [sp, #56]	; 0x38
   154bc:	strd	r2, [sp, #8]
   154c0:	ldrd	r2, [sp, #32]
   154c4:	str	ip, [sp, #16]
   154c8:	bl	11280 <fprintf@plt>
   154cc:	b	15334 <_obstack_memory_used@@Base+0x8cc>
   154d0:	mov	r5, r3
   154d4:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   154d8:	mov	r5, #1
   154dc:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   154e0:	mov	r5, #2
   154e4:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   154e8:	mov	r5, #3
   154ec:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   154f0:	mov	r5, #4
   154f4:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   154f8:	mov	r5, #5
   154fc:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   15500:	mov	r5, #6
   15504:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   15508:	mov	r5, #7
   1550c:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   15510:	mov	r5, #8
   15514:	b	15244 <_obstack_memory_used@@Base+0x7dc>
   15518:	movw	r1, #57112	; 0xdf18
   1551c:	movt	r1, #1
   15520:	ldr	ip, [sp, #40]	; 0x28
   15524:	mov	r0, r4
   15528:	b	152f8 <_obstack_memory_used@@Base+0x890>
   1552c:	push	{r3}		; (str r3, [sp, #-4]!)
   15530:	push	{lr}		; (str lr, [sp, #-4]!)
   15534:	sub	sp, sp, #56	; 0x38
   15538:	ldr	ip, [sp, #64]	; 0x40
   1553c:	add	r3, sp, #64	; 0x40
   15540:	str	r3, [sp, #12]
   15544:	cmp	ip, #0
   15548:	str	ip, [sp, #16]
   1554c:	beq	155e4 <_obstack_memory_used@@Base+0xb7c>
   15550:	ldr	ip, [sp, #68]	; 0x44
   15554:	cmp	ip, #0
   15558:	str	ip, [sp, #20]
   1555c:	beq	15608 <_obstack_memory_used@@Base+0xba0>
   15560:	ldr	ip, [sp, #72]	; 0x48
   15564:	cmp	ip, #0
   15568:	str	ip, [sp, #24]
   1556c:	beq	15610 <_obstack_memory_used@@Base+0xba8>
   15570:	ldr	ip, [sp, #76]	; 0x4c
   15574:	cmp	ip, #0
   15578:	str	ip, [sp, #28]
   1557c:	beq	15618 <_obstack_memory_used@@Base+0xbb0>
   15580:	ldr	ip, [sp, #80]	; 0x50
   15584:	cmp	ip, #0
   15588:	str	ip, [sp, #32]
   1558c:	beq	15620 <_obstack_memory_used@@Base+0xbb8>
   15590:	ldr	ip, [sp, #84]	; 0x54
   15594:	cmp	ip, #0
   15598:	str	ip, [sp, #36]	; 0x24
   1559c:	beq	15628 <_obstack_memory_used@@Base+0xbc0>
   155a0:	ldr	ip, [sp, #88]	; 0x58
   155a4:	cmp	ip, #0
   155a8:	str	ip, [sp, #40]	; 0x28
   155ac:	beq	15630 <_obstack_memory_used@@Base+0xbc8>
   155b0:	ldr	ip, [sp, #92]	; 0x5c
   155b4:	cmp	ip, #0
   155b8:	str	ip, [sp, #44]	; 0x2c
   155bc:	beq	15638 <_obstack_memory_used@@Base+0xbd0>
   155c0:	ldr	ip, [sp, #96]	; 0x60
   155c4:	cmp	ip, #0
   155c8:	str	ip, [sp, #48]	; 0x30
   155cc:	beq	15640 <_obstack_memory_used@@Base+0xbd8>
   155d0:	ldr	r3, [sp, #100]	; 0x64
   155d4:	cmp	r3, #0
   155d8:	str	r3, [sp, #52]	; 0x34
   155dc:	movne	ip, #10
   155e0:	moveq	ip, #9
   155e4:	ldr	r3, [sp, #60]	; 0x3c
   155e8:	add	lr, sp, #16
   155ec:	str	lr, [sp]
   155f0:	str	ip, [sp, #4]
   155f4:	bl	14b68 <_obstack_memory_used@@Base+0x100>
   155f8:	add	sp, sp, #56	; 0x38
   155fc:	pop	{lr}		; (ldr lr, [sp], #4)
   15600:	add	sp, sp, #4
   15604:	bx	lr
   15608:	mov	ip, #1
   1560c:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15610:	mov	ip, #2
   15614:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15618:	mov	ip, #3
   1561c:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15620:	mov	ip, #4
   15624:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15628:	mov	ip, #5
   1562c:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15630:	mov	ip, #6
   15634:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15638:	mov	ip, #7
   1563c:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15640:	mov	ip, #8
   15644:	b	155e4 <_obstack_memory_used@@Base+0xb7c>
   15648:	movw	r3, #10428	; 0x28bc
   1564c:	movt	r3, #3
   15650:	str	r4, [sp, #-8]!
   15654:	mov	r0, #10
   15658:	ldr	r1, [r3]
   1565c:	str	lr, [sp, #4]
   15660:	bl	112f8 <fputc@plt>
   15664:	movw	r1, #57172	; 0xdf54
   15668:	movt	r1, #1
   1566c:	movw	r0, #57196	; 0xdf6c
   15670:	movt	r0, #1
   15674:	bl	11100 <printf@plt>
   15678:	movw	r2, #57216	; 0xdf80
   1567c:	movt	r2, #1
   15680:	movw	r1, #56456	; 0xdc88
   15684:	movt	r1, #1
   15688:	movw	r0, #57256	; 0xdfa8
   1568c:	movt	r0, #1
   15690:	bl	11100 <printf@plt>
   15694:	movw	r1, #57276	; 0xdfbc
   15698:	movt	r1, #1
   1569c:	ldr	r4, [sp]
   156a0:	movw	r0, #57308	; 0xdfdc
   156a4:	movt	r0, #1
   156a8:	ldr	lr, [sp, #4]
   156ac:	add	sp, sp, #8
   156b0:	b	11100 <printf@plt>
   156b4:	strd	r4, [sp, #-16]!
   156b8:	mov	r4, r0
   156bc:	mov	r5, r2
   156c0:	str	r6, [sp, #8]
   156c4:	mov	r6, r1
   156c8:	str	lr, [sp, #12]
   156cc:	bl	1b3d8 <argp_error@@Base+0x1518>
   156d0:	cmp	r0, #0
   156d4:	beq	156e8 <_obstack_memory_used@@Base+0xc80>
   156d8:	ldrd	r4, [sp]
   156dc:	ldr	r6, [sp, #8]
   156e0:	add	sp, sp, #12
   156e4:	pop	{pc}		; (ldr pc, [sp], #4)
   156e8:	cmp	r4, #0
   156ec:	beq	156fc <_obstack_memory_used@@Base+0xc94>
   156f0:	cmp	r6, #0
   156f4:	cmpne	r5, #0
   156f8:	beq	156d8 <_obstack_memory_used@@Base+0xc70>
   156fc:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15700:	str	r4, [sp, #-8]!
   15704:	str	lr, [sp, #4]
   15708:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1570c:	cmp	r0, #0
   15710:	beq	15720 <_obstack_memory_used@@Base+0xcb8>
   15714:	ldr	r4, [sp]
   15718:	add	sp, sp, #4
   1571c:	pop	{pc}		; (ldr pc, [sp], #4)
   15720:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15724:	str	r4, [sp, #-8]!
   15728:	str	lr, [sp, #4]
   1572c:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15730:	cmp	r0, #0
   15734:	beq	15744 <_obstack_memory_used@@Base+0xcdc>
   15738:	ldr	r4, [sp]
   1573c:	add	sp, sp, #4
   15740:	pop	{pc}		; (ldr pc, [sp], #4)
   15744:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15748:	str	r4, [sp, #-8]!
   1574c:	str	lr, [sp, #4]
   15750:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15754:	cmp	r0, #0
   15758:	beq	15768 <_obstack_memory_used@@Base+0xd00>
   1575c:	ldr	r4, [sp]
   15760:	add	sp, sp, #4
   15764:	pop	{pc}		; (ldr pc, [sp], #4)
   15768:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   1576c:	strd	r4, [sp, #-16]!
   15770:	mov	r5, r0
   15774:	mov	r4, r1
   15778:	str	r6, [sp, #8]
   1577c:	str	lr, [sp, #12]
   15780:	bl	15d98 <_obstack_memory_used@@Base+0x1330>
   15784:	cmp	r0, #0
   15788:	beq	1579c <_obstack_memory_used@@Base+0xd34>
   1578c:	ldrd	r4, [sp]
   15790:	ldr	r6, [sp, #8]
   15794:	add	sp, sp, #12
   15798:	pop	{pc}		; (ldr pc, [sp], #4)
   1579c:	adds	r4, r4, #0
   157a0:	movne	r4, #1
   157a4:	cmp	r5, #0
   157a8:	moveq	r4, #1
   157ac:	cmp	r4, #0
   157b0:	beq	1578c <_obstack_memory_used@@Base+0xd24>
   157b4:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   157b8:	cmp	r1, #0
   157bc:	orreq	r1, r1, #1
   157c0:	str	r4, [sp, #-8]!
   157c4:	str	lr, [sp, #4]
   157c8:	bl	15d98 <_obstack_memory_used@@Base+0x1330>
   157cc:	cmp	r0, #0
   157d0:	beq	157e0 <_obstack_memory_used@@Base+0xd78>
   157d4:	ldr	r4, [sp]
   157d8:	add	sp, sp, #4
   157dc:	pop	{pc}		; (ldr pc, [sp], #4)
   157e0:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   157e4:	strd	r4, [sp, #-16]!
   157e8:	mov	r4, r0
   157ec:	mov	r5, r2
   157f0:	str	r6, [sp, #8]
   157f4:	mov	r6, r1
   157f8:	str	lr, [sp, #12]
   157fc:	bl	1b3d8 <argp_error@@Base+0x1518>
   15800:	cmp	r0, #0
   15804:	beq	15818 <_obstack_memory_used@@Base+0xdb0>
   15808:	ldrd	r4, [sp]
   1580c:	ldr	r6, [sp, #8]
   15810:	add	sp, sp, #12
   15814:	pop	{pc}		; (ldr pc, [sp], #4)
   15818:	cmp	r4, #0
   1581c:	beq	1582c <_obstack_memory_used@@Base+0xdc4>
   15820:	cmp	r6, #0
   15824:	cmpne	r5, #0
   15828:	beq	15808 <_obstack_memory_used@@Base+0xda0>
   1582c:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15830:	cmp	r2, #0
   15834:	cmpne	r1, #0
   15838:	str	r4, [sp, #-8]!
   1583c:	moveq	r2, #1
   15840:	str	lr, [sp, #4]
   15844:	moveq	r1, r2
   15848:	bl	1b3d8 <argp_error@@Base+0x1518>
   1584c:	cmp	r0, #0
   15850:	beq	15860 <_obstack_memory_used@@Base+0xdf8>
   15854:	ldr	r4, [sp]
   15858:	add	sp, sp, #4
   1585c:	pop	{pc}		; (ldr pc, [sp], #4)
   15860:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15864:	mov	r2, r1
   15868:	mov	r1, r0
   1586c:	str	r4, [sp, #-8]!
   15870:	mov	r0, #0
   15874:	str	lr, [sp, #4]
   15878:	bl	1b3d8 <argp_error@@Base+0x1518>
   1587c:	cmp	r0, #0
   15880:	beq	15890 <_obstack_memory_used@@Base+0xe28>
   15884:	ldr	r4, [sp]
   15888:	add	sp, sp, #4
   1588c:	pop	{pc}		; (ldr pc, [sp], #4)
   15890:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15894:	cmp	r1, #0
   15898:	cmpne	r0, #0
   1589c:	str	r4, [sp, #-8]!
   158a0:	moveq	r2, #1
   158a4:	movne	r2, r1
   158a8:	str	lr, [sp, #4]
   158ac:	movne	r1, r0
   158b0:	moveq	r1, r2
   158b4:	mov	r0, #0
   158b8:	bl	1b3d8 <argp_error@@Base+0x1518>
   158bc:	cmp	r0, #0
   158c0:	beq	158d0 <_obstack_memory_used@@Base+0xe68>
   158c4:	ldr	r4, [sp]
   158c8:	add	sp, sp, #4
   158cc:	pop	{pc}		; (ldr pc, [sp], #4)
   158d0:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   158d4:	cmp	r0, #0
   158d8:	strd	r4, [sp, #-16]!
   158dc:	mov	r5, r1
   158e0:	ldr	r4, [r1]
   158e4:	str	r6, [sp, #8]
   158e8:	str	lr, [sp, #12]
   158ec:	beq	15934 <_obstack_memory_used@@Base+0xecc>
   158f0:	lsr	r3, r4, #1
   158f4:	add	r3, r3, #1
   158f8:	adds	r4, r4, r3
   158fc:	bcs	15930 <_obstack_memory_used@@Base+0xec8>
   15900:	mov	r2, #1
   15904:	mov	r1, r4
   15908:	bl	1b3d8 <argp_error@@Base+0x1518>
   1590c:	cmp	r0, #0
   15910:	beq	15928 <_obstack_memory_used@@Base+0xec0>
   15914:	ldr	r6, [sp, #8]
   15918:	str	r4, [r5]
   1591c:	ldrd	r4, [sp]
   15920:	add	sp, sp, #12
   15924:	pop	{pc}		; (ldr pc, [sp], #4)
   15928:	cmp	r4, #0
   1592c:	beq	15914 <_obstack_memory_used@@Base+0xeac>
   15930:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15934:	cmp	r4, #0
   15938:	mov	r2, #1
   1593c:	moveq	r4, #64	; 0x40
   15940:	mov	r1, r4
   15944:	bl	1b3d8 <argp_error@@Base+0x1518>
   15948:	cmp	r0, #0
   1594c:	bne	15914 <_obstack_memory_used@@Base+0xeac>
   15950:	b	15930 <_obstack_memory_used@@Base+0xec8>
   15954:	cmp	r0, #0
   15958:	strd	r4, [sp, #-16]!
   1595c:	mov	r5, r1
   15960:	ldr	r4, [r1]
   15964:	str	r6, [sp, #8]
   15968:	mov	r6, r2
   1596c:	str	lr, [sp, #12]
   15970:	beq	159b8 <_obstack_memory_used@@Base+0xf50>
   15974:	lsr	r3, r4, #1
   15978:	add	r3, r3, #1
   1597c:	adds	r4, r4, r3
   15980:	bcs	159b4 <_obstack_memory_used@@Base+0xf4c>
   15984:	mov	r1, r4
   15988:	bl	1b3d8 <argp_error@@Base+0x1518>
   1598c:	cmp	r0, #0
   15990:	beq	159a8 <_obstack_memory_used@@Base+0xf40>
   15994:	ldr	r6, [sp, #8]
   15998:	str	r4, [r5]
   1599c:	ldrd	r4, [sp]
   159a0:	add	sp, sp, #12
   159a4:	pop	{pc}		; (ldr pc, [sp], #4)
   159a8:	cmp	r4, #0
   159ac:	cmpne	r6, #0
   159b0:	beq	15994 <_obstack_memory_used@@Base+0xf2c>
   159b4:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   159b8:	cmp	r4, #0
   159bc:	bne	159d0 <_obstack_memory_used@@Base+0xf68>
   159c0:	mov	r4, #64	; 0x40
   159c4:	udiv	r4, r4, r2
   159c8:	cmp	r2, #64	; 0x40
   159cc:	addhi	r4, r4, #1
   159d0:	mov	r2, r6
   159d4:	mov	r1, r4
   159d8:	mov	r0, #0
   159dc:	bl	1b3d8 <argp_error@@Base+0x1518>
   159e0:	cmp	r0, #0
   159e4:	bne	15994 <_obstack_memory_used@@Base+0xf2c>
   159e8:	b	159b4 <_obstack_memory_used@@Base+0xf4c>
   159ec:	ldr	ip, [r1]
   159f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   159f4:	strd	r6, [sp, #8]
   159f8:	mov	r7, r1
   159fc:	mov	r6, r0
   15a00:	str	r8, [sp, #16]
   15a04:	mvn	r8, r3
   15a08:	lsr	r8, r8, #31
   15a0c:	str	lr, [sp, #20]
   15a10:	asr	r1, ip, #1
   15a14:	ldr	lr, [sp, #24]
   15a18:	adds	r4, ip, r1
   15a1c:	mvnvs	r4, #-2147483648	; 0x80000000
   15a20:	cmp	r3, r4
   15a24:	movge	r1, #0
   15a28:	andlt	r1, r8, #1
   15a2c:	cmp	r1, #0
   15a30:	movne	r4, r3
   15a34:	smull	r0, r1, r4, lr
   15a38:	cmp	r1, r0, asr #31
   15a3c:	bne	15aec <_obstack_memory_used@@Base+0x1084>
   15a40:	cmp	r0, #63	; 0x3f
   15a44:	mov	r5, r0
   15a48:	ble	15ab8 <_obstack_memory_used@@Base+0x1050>
   15a4c:	cmp	r6, #0
   15a50:	sub	r1, r4, ip
   15a54:	streq	r6, [r7]
   15a58:	cmp	r1, r2
   15a5c:	bge	15a8c <_obstack_memory_used@@Base+0x1024>
   15a60:	adds	r4, ip, r2
   15a64:	bvs	15ae8 <_obstack_memory_used@@Base+0x1080>
   15a68:	cmp	r4, r3
   15a6c:	movle	r3, #0
   15a70:	andgt	r3, r8, #1
   15a74:	cmp	r3, #0
   15a78:	bne	15ae8 <_obstack_memory_used@@Base+0x1080>
   15a7c:	smull	r0, r1, r4, lr
   15a80:	cmp	r1, r0, asr #31
   15a84:	mov	r5, r0
   15a88:	bne	15ae8 <_obstack_memory_used@@Base+0x1080>
   15a8c:	mov	r1, r5
   15a90:	mov	r0, r6
   15a94:	bl	15d98 <_obstack_memory_used@@Base+0x1330>
   15a98:	cmp	r0, #0
   15a9c:	beq	15acc <_obstack_memory_used@@Base+0x1064>
   15aa0:	ldr	r8, [sp, #16]
   15aa4:	str	r4, [r7]
   15aa8:	ldrd	r4, [sp]
   15aac:	ldrd	r6, [sp, #8]
   15ab0:	add	sp, sp, #20
   15ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ab8:	mov	r0, #64	; 0x40
   15abc:	sdiv	r4, r0, lr
   15ac0:	mls	r5, lr, r4, r0
   15ac4:	sub	r5, r0, r5
   15ac8:	b	15a4c <_obstack_memory_used@@Base+0xfe4>
   15acc:	adds	r5, r5, #0
   15ad0:	movne	r5, #1
   15ad4:	cmp	r6, #0
   15ad8:	movne	r6, r5
   15adc:	moveq	r6, #1
   15ae0:	cmp	r6, #0
   15ae4:	beq	15aa0 <_obstack_memory_used@@Base+0x1038>
   15ae8:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15aec:	mvn	r0, #-2147483648	; 0x80000000
   15af0:	b	15abc <_obstack_memory_used@@Base+0x1054>
   15af4:	mov	r1, #1
   15af8:	str	r4, [sp, #-8]!
   15afc:	str	lr, [sp, #4]
   15b00:	bl	15ce8 <_obstack_memory_used@@Base+0x1280>
   15b04:	cmp	r0, #0
   15b08:	beq	15b18 <_obstack_memory_used@@Base+0x10b0>
   15b0c:	ldr	r4, [sp]
   15b10:	add	sp, sp, #4
   15b14:	pop	{pc}		; (ldr pc, [sp], #4)
   15b18:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15b1c:	mov	r1, #1
   15b20:	str	r4, [sp, #-8]!
   15b24:	str	lr, [sp, #4]
   15b28:	bl	15ce8 <_obstack_memory_used@@Base+0x1280>
   15b2c:	cmp	r0, #0
   15b30:	beq	15b40 <_obstack_memory_used@@Base+0x10d8>
   15b34:	ldr	r4, [sp]
   15b38:	add	sp, sp, #4
   15b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b40:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15b44:	str	r4, [sp, #-8]!
   15b48:	str	lr, [sp, #4]
   15b4c:	bl	15ce8 <_obstack_memory_used@@Base+0x1280>
   15b50:	cmp	r0, #0
   15b54:	beq	15b64 <_obstack_memory_used@@Base+0x10fc>
   15b58:	ldr	r4, [sp]
   15b5c:	add	sp, sp, #4
   15b60:	pop	{pc}		; (ldr pc, [sp], #4)
   15b64:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15b68:	str	r4, [sp, #-8]!
   15b6c:	str	lr, [sp, #4]
   15b70:	bl	15ce8 <_obstack_memory_used@@Base+0x1280>
   15b74:	cmp	r0, #0
   15b78:	beq	15b88 <_obstack_memory_used@@Base+0x1120>
   15b7c:	ldr	r4, [sp]
   15b80:	add	sp, sp, #4
   15b84:	pop	{pc}		; (ldr pc, [sp], #4)
   15b88:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15b8c:	strd	r4, [sp, #-16]!
   15b90:	mov	r4, r1
   15b94:	str	r6, [sp, #8]
   15b98:	mov	r6, r0
   15b9c:	mov	r0, r1
   15ba0:	str	lr, [sp, #12]
   15ba4:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15ba8:	subs	r5, r0, #0
   15bac:	beq	15bd0 <_obstack_memory_used@@Base+0x1168>
   15bb0:	mov	r2, r4
   15bb4:	mov	r1, r6
   15bb8:	bl	11160 <memcpy@plt>
   15bbc:	mov	r0, r5
   15bc0:	ldrd	r4, [sp]
   15bc4:	ldr	r6, [sp, #8]
   15bc8:	add	sp, sp, #12
   15bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   15bd0:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15bd4:	strd	r4, [sp, #-16]!
   15bd8:	mov	r4, r1
   15bdc:	str	r6, [sp, #8]
   15be0:	mov	r6, r0
   15be4:	mov	r0, r1
   15be8:	str	lr, [sp, #12]
   15bec:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15bf0:	subs	r5, r0, #0
   15bf4:	beq	15c18 <_obstack_memory_used@@Base+0x11b0>
   15bf8:	mov	r2, r4
   15bfc:	mov	r1, r6
   15c00:	bl	11160 <memcpy@plt>
   15c04:	mov	r0, r5
   15c08:	ldrd	r4, [sp]
   15c0c:	ldr	r6, [sp, #8]
   15c10:	add	sp, sp, #12
   15c14:	pop	{pc}		; (ldr pc, [sp], #4)
   15c18:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15c1c:	strd	r4, [sp, #-16]!
   15c20:	mov	r4, r1
   15c24:	str	r6, [sp, #8]
   15c28:	mov	r6, r0
   15c2c:	add	r0, r1, #1
   15c30:	str	lr, [sp, #12]
   15c34:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15c38:	subs	r5, r0, #0
   15c3c:	beq	15c68 <_obstack_memory_used@@Base+0x1200>
   15c40:	mov	r3, #0
   15c44:	mov	r1, r6
   15c48:	mov	r2, r4
   15c4c:	strb	r3, [r5, r4]
   15c50:	bl	11160 <memcpy@plt>
   15c54:	mov	r0, r5
   15c58:	ldrd	r4, [sp]
   15c5c:	ldr	r6, [sp, #8]
   15c60:	add	sp, sp, #12
   15c64:	pop	{pc}		; (ldr pc, [sp], #4)
   15c68:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15c6c:	strd	r4, [sp, #-16]!
   15c70:	str	r6, [sp, #8]
   15c74:	mov	r6, r0
   15c78:	str	lr, [sp, #12]
   15c7c:	bl	11268 <strlen@plt>
   15c80:	add	r4, r0, #1
   15c84:	mov	r0, r4
   15c88:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15c8c:	subs	r5, r0, #0
   15c90:	beq	15cb4 <_obstack_memory_used@@Base+0x124c>
   15c94:	mov	r2, r4
   15c98:	mov	r1, r6
   15c9c:	bl	11160 <memcpy@plt>
   15ca0:	mov	r0, r5
   15ca4:	ldrd	r4, [sp]
   15ca8:	ldr	r6, [sp, #8]
   15cac:	add	sp, sp, #12
   15cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15cb4:	bl	15cb8 <_obstack_memory_used@@Base+0x1250>
   15cb8:	movw	r3, #10396	; 0x289c
   15cbc:	movt	r3, #3
   15cc0:	str	r4, [sp, #-8]!
   15cc4:	movw	r2, #56168	; 0xdb68
   15cc8:	movt	r2, #1
   15ccc:	ldr	r0, [r3]
   15cd0:	mov	r1, #0
   15cd4:	movw	r3, #56472	; 0xdc98
   15cd8:	movt	r3, #1
   15cdc:	str	lr, [sp, #4]
   15ce0:	bl	111e4 <error@plt>
   15ce4:	bl	11394 <abort@plt>
   15ce8:	cmp	r1, #0
   15cec:	cmpne	r0, #0
   15cf0:	beq	15d3c <_obstack_memory_used@@Base+0x12d4>
   15cf4:	strd	r4, [sp, #-16]!
   15cf8:	umull	r4, r5, r0, r1
   15cfc:	str	r6, [sp, #8]
   15d00:	str	lr, [sp, #12]
   15d04:	adds	r3, r5, #0
   15d08:	movne	r3, #1
   15d0c:	cmp	r4, #0
   15d10:	blt	15d1c <_obstack_memory_used@@Base+0x12b4>
   15d14:	cmp	r3, #0
   15d18:	beq	15d48 <_obstack_memory_used@@Base+0x12e0>
   15d1c:	bl	1128c <__errno_location@plt>
   15d20:	mov	r3, #12
   15d24:	ldrd	r4, [sp]
   15d28:	ldr	r6, [sp, #8]
   15d2c:	add	sp, sp, #12
   15d30:	str	r3, [r0]
   15d34:	mov	r0, #0
   15d38:	pop	{pc}		; (ldr pc, [sp], #4)
   15d3c:	mov	r1, #1
   15d40:	mov	r0, r1
   15d44:	b	110c4 <calloc@plt>
   15d48:	ldrd	r4, [sp]
   15d4c:	ldr	r6, [sp, #8]
   15d50:	ldr	lr, [sp, #12]
   15d54:	add	sp, sp, #16
   15d58:	b	110c4 <calloc@plt>
   15d5c:	cmp	r0, #0
   15d60:	beq	15d6c <_obstack_memory_used@@Base+0x1304>
   15d64:	blt	15d74 <_obstack_memory_used@@Base+0x130c>
   15d68:	b	11208 <malloc@plt>
   15d6c:	mov	r0, #1
   15d70:	b	11208 <malloc@plt>
   15d74:	str	r4, [sp, #-8]!
   15d78:	str	lr, [sp, #4]
   15d7c:	bl	1128c <__errno_location@plt>
   15d80:	mov	r3, #12
   15d84:	ldr	r4, [sp]
   15d88:	add	sp, sp, #4
   15d8c:	str	r3, [r0]
   15d90:	mov	r0, #0
   15d94:	pop	{pc}		; (ldr pc, [sp], #4)
   15d98:	cmp	r0, #0
   15d9c:	beq	15dc4 <_obstack_memory_used@@Base+0x135c>
   15da0:	cmp	r1, #0
   15da4:	str	r4, [sp, #-8]!
   15da8:	str	lr, [sp, #4]
   15dac:	beq	15dcc <_obstack_memory_used@@Base+0x1364>
   15db0:	blt	15de0 <_obstack_memory_used@@Base+0x1378>
   15db4:	ldr	r4, [sp]
   15db8:	ldr	lr, [sp, #4]
   15dbc:	add	sp, sp, #8
   15dc0:	b	1119c <realloc@plt>
   15dc4:	mov	r0, r1
   15dc8:	b	15d5c <_obstack_memory_used@@Base+0x12f4>
   15dcc:	bl	144f8 <argp_parse@@Base+0x1038>
   15dd0:	ldr	r4, [sp]
   15dd4:	add	sp, sp, #4
   15dd8:	mov	r0, #0
   15ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   15de0:	bl	1128c <__errno_location@plt>
   15de4:	mov	r3, #12
   15de8:	str	r3, [r0]
   15dec:	b	15dd0 <_obstack_memory_used@@Base+0x1368>
   15df0:	ldr	r3, [r0, #12]
   15df4:	strd	r4, [sp, #-16]!
   15df8:	ldr	r2, [r1, #12]
   15dfc:	str	r6, [sp, #8]
   15e00:	str	lr, [sp, #12]
   15e04:	cmp	r3, r2
   15e08:	beq	15e68 <_obstack_memory_used@@Base+0x1400>
   15e0c:	mov	r5, r1
   15e10:	mov	r4, r0
   15e14:	mov	r1, r2
   15e18:	mov	r0, r3
   15e1c:	bl	15df0 <_obstack_memory_used@@Base+0x1388>
   15e20:	cmp	r0, #0
   15e24:	bne	15e58 <_obstack_memory_used@@Base+0x13f0>
   15e28:	ldr	r3, [r5, #8]
   15e2c:	ldr	r0, [r4, #8]
   15e30:	mvn	r2, r3
   15e34:	lsr	r2, r2, #31
   15e38:	cmp	r2, r0, lsr #31
   15e3c:	subne	r0, r0, r3
   15e40:	subeq	r0, r3, r0
   15e44:	cmp	r0, #0
   15e48:	bne	15e58 <_obstack_memory_used@@Base+0x13f0>
   15e4c:	ldr	r0, [r4, #4]
   15e50:	ldr	r3, [r5, #4]
   15e54:	sub	r0, r3, r0
   15e58:	ldrd	r4, [sp]
   15e5c:	ldr	r6, [sp, #8]
   15e60:	add	sp, sp, #12
   15e64:	pop	{pc}		; (ldr pc, [sp], #4)
   15e68:	ldr	lr, [r1, #4]
   15e6c:	ldr	r3, [r1, #8]
   15e70:	ldr	r2, [r0, #8]
   15e74:	ldr	ip, [r0, #4]
   15e78:	mvn	r1, r3
   15e7c:	lsr	r1, r1, #31
   15e80:	ldrd	r4, [sp]
   15e84:	cmp	r1, r2, lsr #31
   15e88:	ldr	r6, [sp, #8]
   15e8c:	add	sp, sp, #12
   15e90:	subne	r0, r2, r3
   15e94:	subeq	r0, r3, r2
   15e98:	cmp	r0, #0
   15e9c:	subeq	r0, lr, ip
   15ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ea4:	strd	r4, [sp, #-16]!
   15ea8:	subs	r5, r0, #0
   15eac:	mov	r4, r1
   15eb0:	str	r6, [sp, #8]
   15eb4:	str	lr, [sp, #12]
   15eb8:	beq	15ecc <_obstack_memory_used@@Base+0x1464>
   15ebc:	mov	r1, #10
   15ec0:	bl	11274 <strchr@plt>
   15ec4:	adds	r5, r0, #0
   15ec8:	movne	r5, #1
   15ecc:	cmp	r4, #0
   15ed0:	beq	15efc <_obstack_memory_used@@Base+0x1494>
   15ed4:	ldr	r3, [r4]
   15ed8:	cmp	r3, #0
   15edc:	beq	15efc <_obstack_memory_used@@Base+0x1494>
   15ee0:	ldr	r0, [r3, #8]
   15ee4:	ldr	r1, [r3, #16]
   15ee8:	bl	15ea4 <_obstack_memory_used@@Base+0x143c>
   15eec:	ldr	r3, [r4, #16]!
   15ef0:	add	r5, r5, r0
   15ef4:	cmp	r3, #0
   15ef8:	bne	15ee0 <_obstack_memory_used@@Base+0x1478>
   15efc:	mov	r0, r5
   15f00:	ldrd	r4, [sp]
   15f04:	ldr	r6, [sp, #8]
   15f08:	add	sp, sp, #12
   15f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   15f10:	ldr	r3, [r0, #16]
   15f14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15f18:	ldr	r4, [r0]
   15f1c:	strd	r6, [sp, #8]
   15f20:	strd	r8, [sp, #16]
   15f24:	strd	sl, [sp, #24]
   15f28:	str	lr, [sp, #32]
   15f2c:	sub	sp, sp, #52	; 0x34
   15f30:	stm	sp, {r0, r3}
   15f34:	mov	r0, #16
   15f38:	str	r1, [sp, #8]
   15f3c:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   15f40:	subs	fp, r0, #0
   15f44:	beq	165ac <_obstack_memory_used@@Base+0x1b44>
   15f48:	mov	r3, #0
   15f4c:	cmp	r4, r3
   15f50:	str	r3, [fp, #4]
   15f54:	str	r3, [fp, #12]
   15f58:	beq	161b4 <_obstack_memory_used@@Base+0x174c>
   15f5c:	ldr	r0, [r4, #12]
   15f60:	ands	r0, r0, #4
   15f64:	bne	165e8 <_obstack_memory_used@@Base+0x1b80>
   15f68:	mov	r9, r0
   15f6c:	add	r5, r4, #24
   15f70:	mov	r8, r0
   15f74:	b	15fc4 <_obstack_memory_used@@Base+0x155c>
   15f78:	ldr	r3, [r5, #-12]
   15f7c:	tst	r3, #4
   15f80:	bne	15f90 <_obstack_memory_used@@Base+0x1528>
   15f84:	add	r9, r9, #1
   15f88:	str	r9, [fp, #4]
   15f8c:	ldr	r3, [r5, #-12]
   15f90:	tst	r3, #8
   15f94:	bne	15fc0 <_obstack_memory_used@@Base+0x1558>
   15f98:	ldr	r6, [r5, #-20]	; 0xffffffec
   15f9c:	sub	r3, r6, #1
   15fa0:	cmp	r3, #254	; 0xfe
   15fa4:	bhi	15fc0 <_obstack_memory_used@@Base+0x1558>
   15fa8:	bl	11250 <__ctype_b_loc@plt>
   15fac:	ldr	r3, [r0]
   15fb0:	lsl	r6, r6, #1
   15fb4:	ldrh	r3, [r3, r6]
   15fb8:	tst	r3, #16384	; 0x4000
   15fbc:	addne	r8, r8, #1
   15fc0:	add	r5, r5, #24
   15fc4:	ldr	r3, [r5, #-20]	; 0xffffffec
   15fc8:	cmp	r3, #0
   15fcc:	bne	15f78 <_obstack_memory_used@@Base+0x1510>
   15fd0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15fd4:	cmp	r3, #0
   15fd8:	bne	15f78 <_obstack_memory_used@@Base+0x1510>
   15fdc:	ldr	r3, [r5, #-8]
   15fe0:	cmp	r3, #0
   15fe4:	bne	15f78 <_obstack_memory_used@@Base+0x1510>
   15fe8:	ldr	sl, [r5, #-4]
   15fec:	cmp	sl, #0
   15ff0:	bne	15f78 <_obstack_memory_used@@Base+0x1510>
   15ff4:	rsb	r9, r9, r9, lsl #3
   15ff8:	lsl	r0, r9, #2
   15ffc:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   16000:	str	r0, [fp]
   16004:	add	r0, r8, #1
   16008:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1600c:	ldr	r5, [fp]
   16010:	mov	r7, r0
   16014:	str	r0, [fp, #8]
   16018:	cmp	r5, #0
   1601c:	cmpne	r0, #0
   16020:	beq	16550 <_obstack_memory_used@@Base+0x1ae8>
   16024:	ldr	r2, [fp, #4]
   16028:	movw	r3, #37449	; 0x9249
   1602c:	movt	r3, #2340	; 0x924
   16030:	cmp	r2, r3
   16034:	bhi	16570 <_obstack_memory_used@@Base+0x1b08>
   16038:	mov	r6, r0
   1603c:	mov	r8, sl
   16040:	ldr	r3, [r4, #4]
   16044:	mov	r0, sl
   16048:	add	r5, r5, #28
   1604c:	str	fp, [sp, #12]
   16050:	ldr	sl, [sp, #8]
   16054:	mov	fp, r7
   16058:	cmp	r3, #0
   1605c:	ldr	r7, [r4, #20]
   16060:	bne	16070 <_obstack_memory_used@@Base+0x1608>
   16064:	ldr	ip, [r4]
   16068:	cmp	ip, #0
   1606c:	beq	16150 <_obstack_memory_used@@Base+0x16e8>
   16070:	cmp	r7, #0
   16074:	str	r4, [r5, #-28]	; 0xffffffe4
   16078:	str	r8, [r5, #-24]	; 0xffffffe8
   1607c:	str	r6, [r5, #-20]	; 0xffffffec
   16080:	bne	16094 <_obstack_memory_used@@Base+0x162c>
   16084:	ldr	r2, [r4]
   16088:	orrs	r3, r2, r3
   1608c:	movne	r7, r0
   16090:	beq	16170 <_obstack_memory_used@@Base+0x1708>
   16094:	ldr	r2, [sp]
   16098:	mov	r3, #0
   1609c:	str	r7, [r5, #-16]
   160a0:	str	sl, [r5, #-12]
   160a4:	str	r2, [r5, #-8]
   160a8:	add	r3, r3, #1
   160ac:	str	r3, [r5, #-24]	; 0xffffffe8
   160b0:	ldr	r3, [r4, #12]
   160b4:	tst	r3, #8
   160b8:	bne	16120 <_obstack_memory_used@@Base+0x16b8>
   160bc:	ldr	r9, [r4, #4]
   160c0:	sub	r3, r9, #1
   160c4:	cmp	r3, #254	; 0xfe
   160c8:	bhi	16120 <_obstack_memory_used@@Base+0x16b8>
   160cc:	bl	11250 <__ctype_b_loc@plt>
   160d0:	ldr	r0, [r0]
   160d4:	lsl	r3, r9, #1
   160d8:	ldrh	r3, [r0, r3]
   160dc:	tst	r3, #16384	; 0x4000
   160e0:	beq	16120 <_obstack_memory_used@@Base+0x16b8>
   160e4:	cmp	fp, r6
   160e8:	uxtb	r9, r9
   160ec:	bcs	1611c <_obstack_memory_used@@Base+0x16b4>
   160f0:	ldrb	r3, [fp]
   160f4:	cmp	r3, r9
   160f8:	beq	16120 <_obstack_memory_used@@Base+0x16b8>
   160fc:	mov	r3, fp
   16100:	sub	r0, r6, #1
   16104:	b	16114 <_obstack_memory_used@@Base+0x16ac>
   16108:	ldrb	ip, [r3, #1]!
   1610c:	cmp	ip, r9
   16110:	beq	16120 <_obstack_memory_used@@Base+0x16b8>
   16114:	cmp	r0, r3
   16118:	bne	16108 <_obstack_memory_used@@Base+0x16a0>
   1611c:	strb	r9, [r6], #1
   16120:	add	r4, r4, #24
   16124:	ldr	r0, [r4, #4]
   16128:	cmp	r0, #0
   1612c:	bne	1613c <_obstack_memory_used@@Base+0x16d4>
   16130:	ldr	r3, [r4]
   16134:	cmp	r3, #0
   16138:	beq	16178 <_obstack_memory_used@@Base+0x1710>
   1613c:	ldr	r3, [r4, #12]
   16140:	tst	r3, #4
   16144:	beq	1619c <_obstack_memory_used@@Base+0x1734>
   16148:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1614c:	b	160a8 <_obstack_memory_used@@Base+0x1640>
   16150:	ldr	ip, [r4, #16]
   16154:	cmp	ip, #0
   16158:	beq	161a4 <_obstack_memory_used@@Base+0x173c>
   1615c:	cmp	r7, #0
   16160:	str	r4, [r5, #-28]	; 0xffffffe4
   16164:	str	r3, [r5, #-24]	; 0xffffffe8
   16168:	str	r6, [r5, #-20]	; 0xffffffec
   1616c:	bne	16094 <_obstack_memory_used@@Base+0x162c>
   16170:	add	r7, r0, #1
   16174:	b	16094 <_obstack_memory_used@@Base+0x162c>
   16178:	ldr	r3, [r4, #16]
   1617c:	cmp	r3, #0
   16180:	bne	1613c <_obstack_memory_used@@Base+0x16d4>
   16184:	ldr	r3, [r4, #20]
   16188:	cmp	r3, #0
   1618c:	bne	1613c <_obstack_memory_used@@Base+0x16d4>
   16190:	add	r5, r5, #28
   16194:	mov	r0, r7
   16198:	b	16058 <_obstack_memory_used@@Base+0x15f0>
   1619c:	mov	r3, r0
   161a0:	b	16190 <_obstack_memory_used@@Base+0x1728>
   161a4:	cmp	r7, #0
   161a8:	bne	162f0 <_obstack_memory_used@@Base+0x1888>
   161ac:	ldr	fp, [sp, #12]
   161b0:	strb	r3, [r6]
   161b4:	ldr	sl, [sp, #4]
   161b8:	cmp	sl, #0
   161bc:	beq	162d0 <_obstack_memory_used@@Base+0x1868>
   161c0:	ldr	r0, [sl]
   161c4:	cmp	r0, #0
   161c8:	beq	162d0 <_obstack_memory_used@@Base+0x1868>
   161cc:	movw	r3, #37449	; 0x9249
   161d0:	movt	r3, #2340	; 0x924
   161d4:	str	r3, [sp, #28]
   161d8:	add	r3, fp, #12
   161dc:	str	r3, [sp, #44]	; 0x2c
   161e0:	ldr	r6, [sl, #8]
   161e4:	ldr	r5, [sl, #12]
   161e8:	cmp	r5, #0
   161ec:	bne	161f8 <_obstack_memory_used@@Base+0x1790>
   161f0:	cmp	r6, #0
   161f4:	beq	16538 <_obstack_memory_used@@Base+0x1ad0>
   161f8:	ldr	r3, [sp]
   161fc:	mov	r0, #28
   16200:	ldr	r4, [r3, #16]
   16204:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   16208:	subs	r1, r0, #0
   1620c:	beq	16300 <_obstack_memory_used@@Base+0x1898>
   16210:	ldr	r2, [sp]
   16214:	sub	r4, sl, r4
   16218:	asr	r4, r4, #4
   1621c:	str	r6, [r1]
   16220:	ldr	r3, [sp, #8]
   16224:	strd	r4, [r1, #4]
   16228:	cmp	r3, #0
   1622c:	str	r3, [r1, #12]
   16230:	ldrne	r3, [r3, #20]
   16234:	str	r2, [r1, #16]
   16238:	ldr	r2, [fp, #12]
   1623c:	ldr	r0, [sl]
   16240:	addne	r3, r3, #1
   16244:	str	r1, [fp, #12]
   16248:	str	r3, [r1, #20]
   1624c:	str	r2, [r1, #24]
   16250:	bl	15f10 <_obstack_memory_used@@Base+0x14a8>
   16254:	ldr	r3, [fp, #12]
   16258:	mov	r4, r0
   1625c:	cmp	r3, #0
   16260:	bne	1626c <_obstack_memory_used@@Base+0x1804>
   16264:	b	16540 <_obstack_memory_used@@Base+0x1ad8>
   16268:	mov	r3, r2
   1626c:	ldr	r2, [r3, #24]
   16270:	cmp	r2, #0
   16274:	bne	16268 <_obstack_memory_used@@Base+0x1800>
   16278:	add	r3, r3, #24
   1627c:	ldr	r2, [r4, #4]
   16280:	ldr	r1, [r4, #12]
   16284:	cmp	r2, #0
   16288:	str	r1, [r3]
   1628c:	mov	r3, #0
   16290:	str	r3, [r4, #12]
   16294:	beq	162bc <_obstack_memory_used@@Base+0x1854>
   16298:	ldr	r3, [fp, #4]
   1629c:	cmp	r3, #0
   162a0:	bne	16308 <_obstack_memory_used@@Base+0x18a0>
   162a4:	ldr	r1, [r4]
   162a8:	str	r2, [fp, #4]
   162ac:	ldr	r2, [r4, #8]
   162b0:	str	r1, [fp]
   162b4:	str	r2, [fp, #8]
   162b8:	str	r3, [r4, #4]
   162bc:	mov	r0, r4
   162c0:	bl	144f8 <argp_parse@@Base+0x1038>
   162c4:	ldr	r0, [sl, #16]!
   162c8:	cmp	r0, #0
   162cc:	bne	161e0 <_obstack_memory_used@@Base+0x1778>
   162d0:	mov	r0, fp
   162d4:	add	sp, sp, #52	; 0x34
   162d8:	ldrd	r4, [sp]
   162dc:	ldrd	r6, [sp, #8]
   162e0:	ldrd	r8, [sp, #16]
   162e4:	ldrd	sl, [sp, #24]
   162e8:	add	sp, sp, #32
   162ec:	pop	{pc}		; (ldr pc, [sp], #4)
   162f0:	str	r4, [r5, #-28]	; 0xffffffe4
   162f4:	str	r3, [r5, #-24]	; 0xffffffe8
   162f8:	str	r6, [r5, #-20]	; 0xffffffec
   162fc:	b	16094 <_obstack_memory_used@@Base+0x162c>
   16300:	ldr	r0, [sl]
   16304:	b	16250 <_obstack_memory_used@@Base+0x17e8>
   16308:	add	r3, r2, r3
   1630c:	rsb	r0, r3, r3, lsl #3
   16310:	str	r3, [sp, #12]
   16314:	lsl	r0, r0, #2
   16318:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1631c:	mov	r5, r0
   16320:	ldr	r0, [fp, #8]
   16324:	str	r5, [sp, #4]
   16328:	bl	11268 <strlen@plt>
   1632c:	mov	r8, r0
   16330:	ldr	r0, [r4, #8]
   16334:	bl	11268 <strlen@plt>
   16338:	add	r0, r8, r0
   1633c:	add	r0, r0, #1
   16340:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   16344:	cmp	r5, #0
   16348:	cmpne	r0, #0
   1634c:	mov	r9, r0
   16350:	beq	16590 <_obstack_memory_used@@Base+0x1b28>
   16354:	ldr	r3, [sp, #12]
   16358:	ldr	r2, [sp, #28]
   1635c:	cmp	r3, r2
   16360:	bhi	165cc <_obstack_memory_used@@Base+0x1b64>
   16364:	ldm	fp, {r1, r6}
   16368:	ldr	r0, [sp, #4]
   1636c:	rsb	r5, r6, r6, lsl #3
   16370:	str	r1, [sp, #16]
   16374:	lsl	r5, r5, #2
   16378:	mov	r2, r5
   1637c:	bl	11244 <mempcpy@plt>
   16380:	ldm	r4, {r1, r3}
   16384:	rsb	r2, r3, r3, lsl #3
   16388:	str	r3, [sp, #20]
   1638c:	lsl	r2, r2, #2
   16390:	bl	11160 <memcpy@plt>
   16394:	ldr	r7, [fp, #8]
   16398:	mov	r2, r8
   1639c:	mov	r0, r9
   163a0:	mov	r1, r7
   163a4:	bl	11160 <memcpy@plt>
   163a8:	cmp	r6, #0
   163ac:	ldr	r3, [sp, #20]
   163b0:	beq	16548 <_obstack_memory_used@@Base+0x1ae0>
   163b4:	ldr	r1, [sp, #4]
   163b8:	subs	r6, r6, #1
   163bc:	add	r1, r1, #28
   163c0:	ldr	r2, [r1, #-20]	; 0xffffffec
   163c4:	sub	r2, r2, r7
   163c8:	add	r2, r9, r2
   163cc:	str	r2, [r1, #-20]	; 0xffffffec
   163d0:	bne	163b8 <_obstack_memory_used@@Base+0x1950>
   163d4:	ldr	r2, [sp, #4]
   163d8:	add	r5, r2, r5
   163dc:	add	r2, r9, r8
   163e0:	cmp	r3, #0
   163e4:	ldr	r1, [r4, #8]
   163e8:	str	r2, [sp, #20]
   163ec:	beq	1648c <_obstack_memory_used@@Base+0x1a24>
   163f0:	sub	r0, r2, #1
   163f4:	add	r5, r5, #28
   163f8:	mov	r7, r2
   163fc:	str	r0, [sp, #24]
   16400:	strd	sl, [sp, #36]	; 0x24
   16404:	mov	sl, r1
   16408:	mov	fp, r3
   1640c:	str	r4, [sp, #32]
   16410:	str	r7, [r5, #-20]	; 0xffffffec
   16414:	ldr	r6, [r5, #-24]	; 0xffffffe8
   16418:	ldr	r8, [r5, #-28]	; 0xffffffe4
   1641c:	cmp	r6, #0
   16420:	beq	16474 <_obstack_memory_used@@Base+0x1a0c>
   16424:	ldr	r3, [r8, #12]
   16428:	tst	r3, #8
   1642c:	bne	16468 <_obstack_memory_used@@Base+0x1a00>
   16430:	ldr	r4, [r8, #4]
   16434:	sub	r3, r4, #1
   16438:	cmp	r3, #254	; 0xfe
   1643c:	bhi	16468 <_obstack_memory_used@@Base+0x1a00>
   16440:	bl	11250 <__ctype_b_loc@plt>
   16444:	ldr	r1, [r0]
   16448:	lsl	r2, r4, #1
   1644c:	ldrb	r3, [sl]
   16450:	ldrh	r2, [r1, r2]
   16454:	sub	r4, r3, r4
   16458:	clz	r4, r4
   1645c:	lsr	r4, r4, #5
   16460:	ands	r2, r4, r2, lsr #14
   16464:	bne	164f4 <_obstack_memory_used@@Base+0x1a8c>
   16468:	subs	r6, r6, #1
   1646c:	add	r8, r8, #24
   16470:	bne	16424 <_obstack_memory_used@@Base+0x19bc>
   16474:	subs	fp, fp, #1
   16478:	add	r5, r5, #28
   1647c:	bne	16410 <_obstack_memory_used@@Base+0x19a8>
   16480:	add	r4, sp, #32
   16484:	mov	r2, r7
   16488:	ldm	r4, {r4, sl, fp}
   1648c:	mov	r3, #0
   16490:	strb	r3, [r2]
   16494:	ldr	r0, [sp, #16]
   16498:	bl	144f8 <argp_parse@@Base+0x1038>
   1649c:	ldr	r0, [fp, #8]
   164a0:	bl	144f8 <argp_parse@@Base+0x1038>
   164a4:	ldr	r3, [sp, #4]
   164a8:	ldr	r0, [r4, #12]
   164ac:	str	r3, [fp]
   164b0:	ldr	r3, [sp, #12]
   164b4:	cmp	r0, #0
   164b8:	str	r3, [fp, #4]
   164bc:	str	r9, [fp, #8]
   164c0:	beq	164d4 <_obstack_memory_used@@Base+0x1a6c>
   164c4:	ldr	r5, [r0, #24]
   164c8:	bl	144f8 <argp_parse@@Base+0x1038>
   164cc:	subs	r0, r5, #0
   164d0:	bne	164c4 <_obstack_memory_used@@Base+0x1a5c>
   164d4:	ldr	r3, [r4, #4]
   164d8:	cmp	r3, #0
   164dc:	beq	162bc <_obstack_memory_used@@Base+0x1854>
   164e0:	ldr	r0, [r4]
   164e4:	bl	144f8 <argp_parse@@Base+0x1038>
   164e8:	ldr	r0, [r4, #8]
   164ec:	bl	144f8 <argp_parse@@Base+0x1038>
   164f0:	b	162bc <_obstack_memory_used@@Base+0x1854>
   164f4:	ldr	r2, [sp, #20]
   164f8:	cmp	r9, r2
   164fc:	bcs	1652c <_obstack_memory_used@@Base+0x1ac4>
   16500:	ldrb	r2, [r9]
   16504:	cmp	r2, r3
   16508:	beq	16530 <_obstack_memory_used@@Base+0x1ac8>
   1650c:	mov	r2, r9
   16510:	ldr	r0, [sp, #24]
   16514:	b	16524 <_obstack_memory_used@@Base+0x1abc>
   16518:	ldrb	r1, [r2, #1]!
   1651c:	cmp	r1, r3
   16520:	beq	16530 <_obstack_memory_used@@Base+0x1ac8>
   16524:	cmp	r0, r2
   16528:	bne	16518 <_obstack_memory_used@@Base+0x1ab0>
   1652c:	strb	r3, [r7], #1
   16530:	add	sl, sl, #1
   16534:	b	16468 <_obstack_memory_used@@Base+0x1a00>
   16538:	ldr	r1, [sp, #8]
   1653c:	b	16250 <_obstack_memory_used@@Base+0x17e8>
   16540:	ldr	r3, [sp, #44]	; 0x2c
   16544:	b	1627c <_obstack_memory_used@@Base+0x1814>
   16548:	ldr	r5, [sp, #4]
   1654c:	b	163dc <_obstack_memory_used@@Base+0x1974>
   16550:	movw	r3, #57396	; 0xe034
   16554:	movt	r3, #1
   16558:	movw	r1, #57564	; 0xe0dc
   1655c:	movt	r1, #1
   16560:	movw	r0, #57596	; 0xe0fc
   16564:	movt	r0, #1
   16568:	movw	r2, #474	; 0x1da
   1656c:	bl	113b8 <__assert_fail@plt>
   16570:	movw	r3, #57396	; 0xe034
   16574:	movt	r3, #1
   16578:	movw	r1, #57564	; 0xe0dc
   1657c:	movt	r1, #1
   16580:	movw	r0, #57632	; 0xe120
   16584:	movt	r0, #1
   16588:	mov	r2, #476	; 0x1dc
   1658c:	bl	113b8 <__assert_fail@plt>
   16590:	movw	r1, #57564	; 0xe0dc
   16594:	movt	r1, #1
   16598:	ldr	r3, [pc, #104]	; 16608 <_obstack_memory_used@@Base+0x1ba0>
   1659c:	movw	r0, #57692	; 0xe15c
   165a0:	movt	r0, #1
   165a4:	movw	r2, #970	; 0x3ca
   165a8:	bl	113b8 <__assert_fail@plt>
   165ac:	movw	r3, #57396	; 0xe034
   165b0:	movt	r3, #1
   165b4:	movw	r1, #57564	; 0xe0dc
   165b8:	movt	r1, #1
   165bc:	movw	r0, #57576	; 0xe0e8
   165c0:	movt	r0, #1
   165c4:	movw	r2, #450	; 0x1c2
   165c8:	bl	113b8 <__assert_fail@plt>
   165cc:	movw	r1, #57564	; 0xe0dc
   165d0:	movt	r1, #1
   165d4:	ldr	r3, [pc, #44]	; 16608 <_obstack_memory_used@@Base+0x1ba0>
   165d8:	movw	r0, #57720	; 0xe178
   165dc:	movt	r0, #1
   165e0:	mov	r2, #972	; 0x3cc
   165e4:	bl	113b8 <__assert_fail@plt>
   165e8:	movw	r3, #57396	; 0xe034
   165ec:	movt	r3, #1
   165f0:	movw	r1, #57564	; 0xe0dc
   165f4:	movt	r1, #1
   165f8:	movw	r0, #57580	; 0xe0ec
   165fc:	movt	r0, #1
   16600:	mov	r2, #460	; 0x1cc
   16604:	bl	113b8 <__assert_fail@plt>
   16608:	andeq	lr, r1, r0, asr #32
   1660c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16610:	mov	r4, r3
   16614:	ldr	r3, [r0, #20]
   16618:	cmp	r3, #0
   1661c:	ldr	r3, [r0, #16]
   16620:	strd	r6, [sp, #8]
   16624:	strd	r8, [sp, #16]
   16628:	mov	r8, r2
   1662c:	ldr	r2, [r2]
   16630:	strd	sl, [sp, #24]
   16634:	ldr	r7, [r0, #8]
   16638:	str	lr, [sp, #32]
   1663c:	sub	sp, sp, #28
   16640:	ldr	r5, [sp, #64]	; 0x40
   16644:	str	r3, [sp, #8]
   16648:	moveq	r9, r7
   1664c:	str	r7, [sp, #12]
   16650:	str	r2, [sp, #16]
   16654:	str	r1, [sp, #20]
   16658:	beq	16680 <_obstack_memory_used@@Base+0x1c18>
   1665c:	mov	r6, r0
   16660:	bl	14378 <argp_parse@@Base+0xeb8>
   16664:	mov	r2, r0
   16668:	mov	r1, r7
   1666c:	ldr	r3, [r6, #20]
   16670:	mov	r0, #6
   16674:	movt	r0, #512	; 0x200
   16678:	blx	r3
   1667c:	mov	r9, r0
   16680:	cmp	r9, #0
   16684:	beq	16874 <_obstack_memory_used@@Base+0x1e0c>
   16688:	mov	r1, #10
   1668c:	mov	r0, r9
   16690:	bl	11118 <strchrnul@plt>
   16694:	ldrb	r3, [r0]
   16698:	mov	r6, r0
   1669c:	cmp	r3, #0
   166a0:	moveq	fp, r3
   166a4:	moveq	r7, r9
   166a8:	beq	166f4 <_obstack_memory_used@@Base+0x1c8c>
   166ac:	ldr	r3, [sp, #16]
   166b0:	ldrb	sl, [r3]
   166b4:	cmp	sl, #0
   166b8:	beq	168f8 <_obstack_memory_used@@Base+0x1e90>
   166bc:	mov	fp, #0
   166c0:	add	r7, r0, #1
   166c4:	add	fp, fp, #1
   166c8:	mov	r0, r7
   166cc:	mov	r1, #10
   166d0:	bl	11118 <strchrnul@plt>
   166d4:	cmp	fp, sl
   166d8:	bne	166c0 <_obstack_memory_used@@Base+0x1c58>
   166dc:	mov	r6, r0
   166e0:	ldr	r3, [r8]
   166e4:	mov	r2, #1
   166e8:	mov	fp, r2
   166ec:	add	r3, r3, r2
   166f0:	str	r3, [r8]
   166f4:	ldr	ip, [r5, #16]
   166f8:	add	sl, r6, #1
   166fc:	sub	sl, sl, r7
   16700:	ldr	r1, [r5, #24]
   16704:	ldr	r3, [r5, #28]
   16708:	sub	r1, r3, r1
   1670c:	mov	r0, r3
   16710:	cmp	r1, ip
   16714:	bhi	16860 <_obstack_memory_used@@Base+0x1df8>
   16718:	ldr	ip, [r5, #8]
   1671c:	ldr	r1, [r5, #20]
   16720:	cmp	r1, #0
   16724:	addge	sl, sl, r1
   16728:	ldr	r1, [r5, #32]
   1672c:	cmp	sl, ip
   16730:	bcc	16750 <_obstack_memory_used@@Base+0x1ce8>
   16734:	cmp	r3, r1
   16738:	bcs	168b0 <_obstack_memory_used@@Base+0x1e48>
   1673c:	add	r0, r3, #1
   16740:	mov	r1, #10
   16744:	str	r0, [r5, #28]
   16748:	strb	r1, [r3]
   1674c:	b	16768 <_obstack_memory_used@@Base+0x1d00>
   16750:	cmp	r3, r1
   16754:	bcs	168dc <_obstack_memory_used@@Base+0x1e74>
   16758:	add	r1, r0, #1
   1675c:	mov	r3, #32
   16760:	str	r1, [r5, #28]
   16764:	strb	r3, [r0]
   16768:	ldrd	r0, [r5, #28]
   1676c:	sub	sl, r6, r7
   16770:	add	r3, r0, sl
   16774:	cmp	r1, r3
   16778:	bcs	16794 <_obstack_memory_used@@Base+0x1d2c>
   1677c:	mov	r1, sl
   16780:	mov	r0, r5
   16784:	bl	1bb38 <argp_error@@Base+0x1c78>
   16788:	cmp	r0, #0
   1678c:	beq	167ac <_obstack_memory_used@@Base+0x1d44>
   16790:	ldr	r0, [r5, #28]
   16794:	mov	r2, sl
   16798:	mov	r1, r7
   1679c:	bl	11160 <memcpy@plt>
   167a0:	ldr	r3, [r5, #28]
   167a4:	add	sl, r3, sl
   167a8:	str	sl, [r5, #28]
   167ac:	ldr	r3, [sp, #12]
   167b0:	cmp	r3, r9
   167b4:	beq	167c0 <_obstack_memory_used@@Base+0x1d58>
   167b8:	mov	r0, r9
   167bc:	bl	144f8 <argp_parse@@Base+0x1038>
   167c0:	ldr	r3, [sp, #8]
   167c4:	cmp	r3, #0
   167c8:	beq	16810 <_obstack_memory_used@@Base+0x1da8>
   167cc:	ldr	r2, [r3]
   167d0:	cmp	r2, #0
   167d4:	beq	16810 <_obstack_memory_used@@Base+0x1da8>
   167d8:	mov	r3, r4
   167dc:	ldr	r7, [sp, #8]
   167e0:	ldr	r4, [sp, #20]
   167e4:	mov	r0, r2
   167e8:	mov	r1, r4
   167ec:	str	r5, [sp]
   167f0:	mov	r2, r8
   167f4:	bl	1660c <_obstack_memory_used@@Base+0x1ba4>
   167f8:	ldr	r2, [r7, #16]!
   167fc:	clz	r3, r0
   16800:	lsr	r3, r3, #5
   16804:	cmp	r2, #0
   16808:	bne	167e4 <_obstack_memory_used@@Base+0x1d7c>
   1680c:	mov	r4, r3
   16810:	cmp	r4, #0
   16814:	mov	r3, fp
   16818:	moveq	r3, #0
   1681c:	cmp	r3, #0
   16820:	beq	16894 <_obstack_memory_used@@Base+0x1e2c>
   16824:	ldrb	r3, [r6]
   16828:	ldr	r2, [sp, #16]
   1682c:	cmp	r3, #0
   16830:	ldrb	r0, [r2]
   16834:	beq	168a0 <_obstack_memory_used@@Base+0x1e38>
   16838:	add	r4, r0, #1
   1683c:	mov	r0, #1
   16840:	strb	r4, [r2]
   16844:	add	sp, sp, #28
   16848:	ldrd	r4, [sp]
   1684c:	ldrd	r6, [sp, #8]
   16850:	ldrd	r8, [sp, #16]
   16854:	ldrd	sl, [sp, #24]
   16858:	add	sp, sp, #32
   1685c:	pop	{pc}		; (ldr pc, [sp], #4)
   16860:	mov	r0, r5
   16864:	bl	1b4a8 <argp_error@@Base+0x15e8>
   16868:	ldr	r3, [r5, #28]
   1686c:	mov	r0, r3
   16870:	b	16718 <_obstack_memory_used@@Base+0x1cb0>
   16874:	ldr	r3, [sp, #8]
   16878:	cmp	r3, #0
   1687c:	beq	16894 <_obstack_memory_used@@Base+0x1e2c>
   16880:	ldr	r2, [r3]
   16884:	cmp	r2, #0
   16888:	movne	r6, r9
   1688c:	movne	fp, r6
   16890:	bne	167d8 <_obstack_memory_used@@Base+0x1d70>
   16894:	clz	r0, r4
   16898:	lsr	r0, r0, #5
   1689c:	b	16844 <_obstack_memory_used@@Base+0x1ddc>
   168a0:	cmp	r0, #0
   168a4:	movne	r0, r3
   168a8:	strbne	r3, [r2]
   168ac:	b	16844 <_obstack_memory_used@@Base+0x1ddc>
   168b0:	mov	r1, #1
   168b4:	mov	r0, r5
   168b8:	bl	1bb38 <argp_error@@Base+0x1c78>
   168bc:	cmp	r0, #0
   168c0:	beq	16768 <_obstack_memory_used@@Base+0x1d00>
   168c4:	ldr	r3, [r5, #28]
   168c8:	mov	r1, #10
   168cc:	add	r0, r3, #1
   168d0:	str	r0, [r5, #28]
   168d4:	strb	r1, [r3]
   168d8:	b	16768 <_obstack_memory_used@@Base+0x1d00>
   168dc:	mov	r1, #1
   168e0:	mov	r0, r5
   168e4:	bl	1bb38 <argp_error@@Base+0x1c78>
   168e8:	cmp	r0, #0
   168ec:	beq	16768 <_obstack_memory_used@@Base+0x1d00>
   168f0:	ldr	r0, [r5, #28]
   168f4:	b	16758 <_obstack_memory_used@@Base+0x1cf0>
   168f8:	mov	r7, r9
   168fc:	b	166e0 <_obstack_memory_used@@Base+0x1c78>
   16900:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16904:	subs	r4, r1, #0
   16908:	strd	r6, [sp, #8]
   1690c:	mov	r7, r0
   16910:	mov	r6, r2
   16914:	strd	r8, [sp, #16]
   16918:	strd	sl, [sp, #24]
   1691c:	str	lr, [sp, #32]
   16920:	sub	sp, sp, #12
   16924:	beq	16960 <_obstack_memory_used@@Base+0x1ef8>
   16928:	ldr	r3, [r4, #20]
   1692c:	cmp	r3, #0
   16930:	beq	16960 <_obstack_memory_used@@Base+0x1ef8>
   16934:	mov	r0, r4
   16938:	ldr	r1, [r2, #16]
   1693c:	bl	14378 <argp_parse@@Base+0xeb8>
   16940:	mov	r2, r0
   16944:	mov	r1, r7
   16948:	ldr	r3, [r4, #20]
   1694c:	mov	r0, #3
   16950:	movt	r0, #512	; 0x200
   16954:	blx	r3
   16958:	mov	r9, r0
   1695c:	b	16964 <_obstack_memory_used@@Base+0x1efc>
   16960:	mov	r9, r7
   16964:	cmp	r9, #0
   16968:	beq	16984 <_obstack_memory_used@@Base+0x1f1c>
   1696c:	ldrb	r2, [r9]
   16970:	ldr	r3, [r6, #8]
   16974:	cmp	r2, #0
   16978:	bne	169b0 <_obstack_memory_used@@Base+0x1f48>
   1697c:	mov	r2, #1
   16980:	str	r2, [r3, #4]
   16984:	cmp	r7, r9
   16988:	beq	16afc <_obstack_memory_used@@Base+0x2094>
   1698c:	mov	r0, r9
   16990:	add	sp, sp, #12
   16994:	ldrd	r4, [sp]
   16998:	ldrd	r6, [sp, #8]
   1699c:	ldrd	r8, [sp, #16]
   169a0:	ldrd	sl, [sp, #24]
   169a4:	ldr	lr, [sp, #32]
   169a8:	add	sp, sp, #36	; 0x24
   169ac:	b	144f8 <argp_parse@@Base+0x1038>
   169b0:	ldr	r3, [r3]
   169b4:	ldr	r4, [r6, #4]
   169b8:	cmp	r3, #0
   169bc:	ldr	r3, [r4, #28]
   169c0:	beq	16a00 <_obstack_memory_used@@Base+0x1f98>
   169c4:	ldr	r2, [r4, #32]
   169c8:	cmp	r2, r3
   169cc:	bhi	169e8 <_obstack_memory_used@@Base+0x1f80>
   169d0:	mov	r1, #1
   169d4:	mov	r0, r4
   169d8:	bl	1bb38 <argp_error@@Base+0x1c78>
   169dc:	cmp	r0, #0
   169e0:	ldrne	r3, [r4, #28]
   169e4:	beq	169f8 <_obstack_memory_used@@Base+0x1f90>
   169e8:	add	r1, r3, #1
   169ec:	mov	r2, #10
   169f0:	str	r1, [r4, #28]
   169f4:	strb	r2, [r3]
   169f8:	ldr	r4, [r6, #4]
   169fc:	ldr	r3, [r4, #28]
   16a00:	movw	r8, #10356	; 0x2874
   16a04:	movt	r8, #3
   16a08:	ldr	r2, [r4, #16]
   16a0c:	ldr	r1, [r4, #24]
   16a10:	ldr	r5, [r8, #24]
   16a14:	sub	r3, r3, r1
   16a18:	cmp	r3, r2
   16a1c:	bhi	16be0 <_obstack_memory_used@@Base+0x2178>
   16a20:	ldr	r3, [r4, #20]
   16a24:	cmp	r3, #0
   16a28:	subge	r5, r5, r3
   16a2c:	cmp	r5, #0
   16a30:	sub	r5, r5, #1
   16a34:	ble	16a7c <_obstack_memory_used@@Base+0x2014>
   16a38:	mov	sl, #32
   16a3c:	ldr	r3, [r4, #28]
   16a40:	mov	r1, #1
   16a44:	mov	r0, r4
   16a48:	sub	r5, r5, #1
   16a4c:	ldr	r2, [r4, #32]
   16a50:	cmp	r3, r2
   16a54:	bcc	16a68 <_obstack_memory_used@@Base+0x2000>
   16a58:	bl	1bb38 <argp_error@@Base+0x1c78>
   16a5c:	cmp	r0, #0
   16a60:	beq	16a74 <_obstack_memory_used@@Base+0x200c>
   16a64:	ldr	r3, [r4, #28]
   16a68:	add	r2, r3, #1
   16a6c:	str	r2, [r4, #28]
   16a70:	strb	sl, [r3]
   16a74:	cmn	r5, #1
   16a78:	bne	16a3c <_obstack_memory_used@@Base+0x1fd4>
   16a7c:	ldr	r4, [r6, #4]
   16a80:	ldr	sl, [r8, #24]
   16a84:	ldr	r1, [r4, #16]
   16a88:	ldr	r3, [r4, #24]
   16a8c:	ldr	r5, [r4, #28]
   16a90:	sub	r3, r5, r3
   16a94:	cmp	r3, r1
   16a98:	movls	fp, r4
   16a9c:	strls	sl, [r4, #4]
   16aa0:	bhi	16b98 <_obstack_memory_used@@Base+0x2130>
   16aa4:	mov	r0, r9
   16aa8:	str	sl, [fp, #12]
   16aac:	bl	11268 <strlen@plt>
   16ab0:	subs	r8, r0, #0
   16ab4:	bne	16b48 <_obstack_memory_used@@Base+0x20e0>
   16ab8:	ldr	r2, [r4, #16]
   16abc:	ldr	r3, [r4, #24]
   16ac0:	sub	r3, r5, r3
   16ac4:	cmp	r3, r2
   16ac8:	movls	r8, r4
   16acc:	bhi	16b34 <_obstack_memory_used@@Base+0x20cc>
   16ad0:	ldr	r3, [r8, #32]
   16ad4:	mov	r2, #0
   16ad8:	str	r2, [r4, #4]
   16adc:	cmp	r3, r5
   16ae0:	bls	16b18 <_obstack_memory_used@@Base+0x20b0>
   16ae4:	add	r2, r5, #1
   16ae8:	mov	r3, #10
   16aec:	str	r2, [r8, #28]
   16af0:	strb	r3, [r5]
   16af4:	ldr	r3, [r6, #8]
   16af8:	b	1697c <_obstack_memory_used@@Base+0x1f14>
   16afc:	add	sp, sp, #12
   16b00:	ldrd	r4, [sp]
   16b04:	ldrd	r6, [sp, #8]
   16b08:	ldrd	r8, [sp, #16]
   16b0c:	ldrd	sl, [sp, #24]
   16b10:	add	sp, sp, #32
   16b14:	pop	{pc}		; (ldr pc, [sp], #4)
   16b18:	mov	r1, #1
   16b1c:	mov	r0, r8
   16b20:	bl	1bb38 <argp_error@@Base+0x1c78>
   16b24:	cmp	r0, #0
   16b28:	ldrne	r5, [r8, #28]
   16b2c:	bne	16ae4 <_obstack_memory_used@@Base+0x207c>
   16b30:	b	16af4 <_obstack_memory_used@@Base+0x208c>
   16b34:	mov	r0, r4
   16b38:	bl	1b4a8 <argp_error@@Base+0x15e8>
   16b3c:	ldr	r8, [r6, #4]
   16b40:	ldr	r5, [r8, #28]
   16b44:	b	16ad0 <_obstack_memory_used@@Base+0x2068>
   16b48:	ldr	r2, [r4, #32]
   16b4c:	add	r3, r5, r8
   16b50:	cmp	r2, r3
   16b54:	bcs	16b70 <_obstack_memory_used@@Base+0x2108>
   16b58:	mov	r1, r8
   16b5c:	mov	r0, r4
   16b60:	bl	1bb38 <argp_error@@Base+0x1c78>
   16b64:	cmp	r0, #0
   16b68:	beq	16b8c <_obstack_memory_used@@Base+0x2124>
   16b6c:	ldr	r5, [r4, #28]
   16b70:	mov	r2, r8
   16b74:	mov	r0, r5
   16b78:	mov	r1, r9
   16b7c:	bl	11160 <memcpy@plt>
   16b80:	ldr	r3, [r4, #28]
   16b84:	add	r8, r3, r8
   16b88:	str	r8, [r4, #28]
   16b8c:	ldr	r4, [r6, #4]
   16b90:	ldr	r5, [r4, #28]
   16b94:	b	16ab8 <_obstack_memory_used@@Base+0x2050>
   16b98:	mov	r0, r4
   16b9c:	str	sl, [sp, #4]
   16ba0:	bl	1b4a8 <argp_error@@Base+0x15e8>
   16ba4:	ldr	fp, [r6, #4]
   16ba8:	ldr	r2, [sp, #4]
   16bac:	ldr	sl, [r8, #24]
   16bb0:	ldr	r1, [fp, #16]
   16bb4:	ldr	r3, [fp, #24]
   16bb8:	ldr	r5, [fp, #28]
   16bbc:	str	r2, [r4, #4]
   16bc0:	sub	r3, r5, r3
   16bc4:	cmp	r3, r1
   16bc8:	bls	16bec <_obstack_memory_used@@Base+0x2184>
   16bcc:	mov	r0, fp
   16bd0:	bl	1b4a8 <argp_error@@Base+0x15e8>
   16bd4:	ldr	r4, [r6, #4]
   16bd8:	ldr	r5, [r4, #28]
   16bdc:	b	16aa4 <_obstack_memory_used@@Base+0x203c>
   16be0:	mov	r0, r4
   16be4:	bl	1b4a8 <argp_error@@Base+0x15e8>
   16be8:	b	16a20 <_obstack_memory_used@@Base+0x1fb8>
   16bec:	mov	r4, fp
   16bf0:	b	16aa4 <_obstack_memory_used@@Base+0x203c>
   16bf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16bf8:	strd	r6, [sp, #8]
   16bfc:	strd	r8, [sp, #16]
   16c00:	strd	sl, [sp, #24]
   16c04:	add	fp, sp, #32
   16c08:	str	lr, [sp, #32]
   16c0c:	sub	sp, sp, #36	; 0x24
   16c10:	ldr	r3, [r0, #4]
   16c14:	cmp	r3, #0
   16c18:	str	r3, [fp, #-40]	; 0xffffffd8
   16c1c:	beq	16e38 <_obstack_memory_used@@Base+0x23d0>
   16c20:	mov	r4, r0
   16c24:	ldr	r0, [r0, #8]
   16c28:	str	r4, [fp, #-60]	; 0xffffffc4
   16c2c:	str	r1, [fp, #-48]	; 0xffffffd0
   16c30:	str	r3, [fp, #-44]	; 0xffffffd4
   16c34:	bl	11268 <strlen@plt>
   16c38:	add	r3, r0, #8
   16c3c:	ldr	r2, [r4]
   16c40:	bic	r3, r3, #7
   16c44:	sub	sp, sp, r3
   16c48:	mov	r3, sp
   16c4c:	str	r3, [fp, #-56]	; 0xffffffc8
   16c50:	str	r3, [fp, #-52]	; 0xffffffcc
   16c54:	add	r3, r2, #28
   16c58:	mov	r9, r3
   16c5c:	str	r3, [fp, #-64]	; 0xffffffc0
   16c60:	ldr	r8, [r9, #-28]	; 0xffffffe4
   16c64:	ldr	r5, [r9, #-24]	; 0xffffffe8
   16c68:	ldr	sl, [r9, #-20]	; 0xffffffec
   16c6c:	cmp	r5, #0
   16c70:	beq	16cc4 <_obstack_memory_used@@Base+0x225c>
   16c74:	mov	r4, r8
   16c78:	ldr	r6, [r4, #12]
   16c7c:	tst	r6, #8
   16c80:	bne	16cb8 <_obstack_memory_used@@Base+0x2250>
   16c84:	ldr	r7, [r4, #4]
   16c88:	sub	r3, r7, #1
   16c8c:	cmp	r3, #254	; 0xfe
   16c90:	bhi	16cb8 <_obstack_memory_used@@Base+0x2250>
   16c94:	bl	11250 <__ctype_b_loc@plt>
   16c98:	ldr	r2, [r0]
   16c9c:	lsl	r3, r7, #1
   16ca0:	ldrh	r3, [r2, r3]
   16ca4:	tst	r3, #16384	; 0x4000
   16ca8:	beq	16cb8 <_obstack_memory_used@@Base+0x2250>
   16cac:	ldrb	r3, [sl]
   16cb0:	cmp	r7, r3
   16cb4:	beq	16e54 <_obstack_memory_used@@Base+0x23ec>
   16cb8:	subs	r5, r5, #1
   16cbc:	add	r4, r4, #24
   16cc0:	bne	16c78 <_obstack_memory_used@@Base+0x2210>
   16cc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cc8:	add	r9, r9, #28
   16ccc:	subs	r3, r3, #1
   16cd0:	str	r3, [fp, #-44]	; 0xffffffd4
   16cd4:	bne	16c60 <_obstack_memory_used@@Base+0x21f8>
   16cd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16cdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ce0:	cmp	r3, r2
   16ce4:	bcc	17024 <_obstack_memory_used@@Base+0x25bc>
   16ce8:	ldr	r6, [fp, #-64]	; 0xffffffc0
   16cec:	movw	r3, #57792	; 0xe1c0
   16cf0:	movt	r3, #1
   16cf4:	str	r3, [fp, #-44]	; 0xffffffd4
   16cf8:	movw	r3, #57780	; 0xe1b4
   16cfc:	movt	r3, #1
   16d00:	str	r3, [fp, #-52]	; 0xffffffcc
   16d04:	ldr	r8, [r6, #-28]	; 0xffffffe4
   16d08:	ldr	r5, [r6, #-24]	; 0xffffffe8
   16d0c:	ldr	r7, [r6, #-20]	; 0xffffffec
   16d10:	cmp	r5, #0
   16d14:	movne	r4, r8
   16d18:	beq	16d68 <_obstack_memory_used@@Base+0x2300>
   16d1c:	ldr	r9, [r4, #12]
   16d20:	tst	r9, #8
   16d24:	bne	16d5c <_obstack_memory_used@@Base+0x22f4>
   16d28:	ldr	sl, [r4, #4]
   16d2c:	sub	r3, sl, #1
   16d30:	cmp	r3, #254	; 0xfe
   16d34:	bhi	16d5c <_obstack_memory_used@@Base+0x22f4>
   16d38:	bl	11250 <__ctype_b_loc@plt>
   16d3c:	ldr	r2, [r0]
   16d40:	lsl	r3, sl, #1
   16d44:	ldrh	r3, [r2, r3]
   16d48:	tst	r3, #16384	; 0x4000
   16d4c:	beq	16d5c <_obstack_memory_used@@Base+0x22f4>
   16d50:	ldrb	r3, [r7]
   16d54:	cmp	sl, r3
   16d58:	beq	16e9c <_obstack_memory_used@@Base+0x2434>
   16d5c:	subs	r5, r5, #1
   16d60:	add	r4, r4, #24
   16d64:	bne	16d1c <_obstack_memory_used@@Base+0x22b4>
   16d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16d6c:	add	r6, r6, #28
   16d70:	subs	r3, r3, #1
   16d74:	str	r3, [fp, #-40]	; 0xffffffd8
   16d78:	bne	16d04 <_obstack_memory_used@@Base+0x229c>
   16d7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16d80:	ldm	r3, {r7, r8}
   16d84:	cmp	r8, #0
   16d88:	beq	16e38 <_obstack_memory_used@@Base+0x23d0>
   16d8c:	movw	sl, #57820	; 0xe1dc
   16d90:	movt	sl, #1
   16d94:	movw	r9, #57804	; 0xe1cc
   16d98:	movt	r9, #1
   16d9c:	str	sl, [fp, #-40]	; 0xffffffd8
   16da0:	movw	r3, #57832	; 0xe1e8
   16da4:	movt	r3, #1
   16da8:	ldr	sl, [fp, #-48]	; 0xffffffd0
   16dac:	add	r7, r7, #28
   16db0:	str	r3, [fp, #-44]	; 0xffffffd4
   16db4:	ldr	r6, [r7, #-28]	; 0xffffffe4
   16db8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16dbc:	cmp	r5, #0
   16dc0:	movne	r4, r6
   16dc4:	beq	16e2c <_obstack_memory_used@@Base+0x23c4>
   16dc8:	ldr	r2, [r4]
   16dcc:	cmp	r2, #0
   16dd0:	beq	16e20 <_obstack_memory_used@@Base+0x23b8>
   16dd4:	ldr	r1, [r4, #12]
   16dd8:	tst	r1, #4
   16ddc:	moveq	r6, r4
   16de0:	tst	r1, #2
   16de4:	bne	16e20 <_obstack_memory_used@@Base+0x23b8>
   16de8:	ldr	r3, [r4, #8]
   16dec:	ldr	r0, [r6, #12]
   16df0:	cmp	r3, #0
   16df4:	orr	r1, r1, r0
   16df8:	and	r0, r1, #16
   16dfc:	beq	16e78 <_obstack_memory_used@@Base+0x2410>
   16e00:	cmp	r0, #0
   16e04:	bne	16e20 <_obstack_memory_used@@Base+0x23b8>
   16e08:	tst	r1, #1
   16e0c:	movne	r1, r9
   16e10:	movne	r0, sl
   16e14:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   16e18:	moveq	r0, sl
   16e1c:	bl	1bb58 <argp_error@@Base+0x1c98>
   16e20:	subs	r5, r5, #1
   16e24:	add	r4, r4, #24
   16e28:	bne	16dc8 <_obstack_memory_used@@Base+0x2360>
   16e2c:	subs	r8, r8, #1
   16e30:	add	r7, r7, #28
   16e34:	bne	16db4 <_obstack_memory_used@@Base+0x234c>
   16e38:	sub	sp, fp, #32
   16e3c:	ldrd	r4, [sp]
   16e40:	ldrd	r6, [sp, #8]
   16e44:	ldrd	r8, [sp, #16]
   16e48:	ldrd	sl, [sp, #24]
   16e4c:	add	sp, sp, #32
   16e50:	pop	{pc}		; (ldr pc, [sp], #4)
   16e54:	tst	r6, #4
   16e58:	moveq	r8, r4
   16e5c:	tst	r6, #2
   16e60:	bne	16e70 <_obstack_memory_used@@Base+0x2408>
   16e64:	ldr	r3, [r4, #8]
   16e68:	cmp	r3, #0
   16e6c:	beq	16ee8 <_obstack_memory_used@@Base+0x2480>
   16e70:	add	sl, sl, #1
   16e74:	b	16cb8 <_obstack_memory_used@@Base+0x2250>
   16e78:	cmp	r0, #0
   16e7c:	bne	16e20 <_obstack_memory_used@@Base+0x23b8>
   16e80:	ldr	r3, [r6, #8]
   16e84:	cmp	r3, #0
   16e88:	bne	16e08 <_obstack_memory_used@@Base+0x23a0>
   16e8c:	mov	r0, sl
   16e90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e94:	bl	1bb58 <argp_error@@Base+0x1c98>
   16e98:	b	16e20 <_obstack_memory_used@@Base+0x23b8>
   16e9c:	tst	r9, #4
   16ea0:	moveq	r8, r4
   16ea4:	tst	r9, #2
   16ea8:	bne	16ee0 <_obstack_memory_used@@Base+0x2478>
   16eac:	ldr	r3, [r4, #8]
   16eb0:	cmp	r3, #0
   16eb4:	beq	16f14 <_obstack_memory_used@@Base+0x24ac>
   16eb8:	ldr	r2, [r8, #12]
   16ebc:	orr	r9, r9, r2
   16ec0:	tst	r9, #16
   16ec4:	bne	16ee0 <_obstack_memory_used@@Base+0x2478>
   16ec8:	tst	r9, #1
   16ecc:	beq	16f24 <_obstack_memory_used@@Base+0x24bc>
   16ed0:	mov	r2, sl
   16ed4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ed8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16edc:	bl	1bb58 <argp_error@@Base+0x1c98>
   16ee0:	add	r7, r7, #1
   16ee4:	b	16d5c <_obstack_memory_used@@Base+0x22f4>
   16ee8:	ldr	r3, [r8, #8]
   16eec:	cmp	r3, #0
   16ef0:	bne	16e70 <_obstack_memory_used@@Base+0x2408>
   16ef4:	ldr	r3, [r8, #12]
   16ef8:	orr	r6, r6, r3
   16efc:	tst	r6, #16
   16f00:	bne	16e70 <_obstack_memory_used@@Base+0x2408>
   16f04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f08:	strb	r7, [r3], #1
   16f0c:	str	r3, [fp, #-52]	; 0xffffffcc
   16f10:	b	16e70 <_obstack_memory_used@@Base+0x2408>
   16f14:	ldr	r3, [r8, #8]
   16f18:	cmp	r3, #0
   16f1c:	beq	16ee0 <_obstack_memory_used@@Base+0x2478>
   16f20:	b	16eb8 <_obstack_memory_used@@Base+0x2450>
   16f24:	mov	r0, r3
   16f28:	str	r3, [fp, #-56]	; 0xffffffc8
   16f2c:	bl	11268 <strlen@plt>
   16f30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f34:	mov	r9, r0
   16f38:	ldr	r0, [r3, #16]
   16f3c:	ldr	r2, [r3, #24]
   16f40:	ldr	r1, [r3, #28]
   16f44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f48:	sub	r2, r1, r2
   16f4c:	cmp	r2, r0
   16f50:	bhi	1700c <_obstack_memory_used@@Base+0x25a4>
   16f54:	ldr	lr, [fp, #-48]	; 0xffffffd0
   16f58:	ldr	r0, [lr, #8]
   16f5c:	ldr	r2, [lr, #20]
   16f60:	ldr	ip, [lr, #32]
   16f64:	bic	r2, r2, r2, asr #31
   16f68:	add	r2, r2, #6
   16f6c:	add	r2, r2, r9
   16f70:	cmp	r2, r0
   16f74:	bcs	16fc8 <_obstack_memory_used@@Base+0x2560>
   16f78:	cmp	r1, ip
   16f7c:	bcc	16fa4 <_obstack_memory_used@@Base+0x253c>
   16f80:	mov	r1, #1
   16f84:	mov	r0, lr
   16f88:	str	r3, [fp, #-56]	; 0xffffffc8
   16f8c:	mov	r9, lr
   16f90:	bl	1bb38 <argp_error@@Base+0x1c78>
   16f94:	cmp	r0, #0
   16f98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f9c:	beq	16fb8 <_obstack_memory_used@@Base+0x2550>
   16fa0:	ldr	r1, [r9, #28]
   16fa4:	add	r2, r1, #1
   16fa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16fac:	str	r2, [r0, #28]
   16fb0:	mov	r2, #32
   16fb4:	strb	r2, [r1]
   16fb8:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   16fbc:	ldr	r2, [r4, #4]
   16fc0:	bl	1bb58 <argp_error@@Base+0x1c98>
   16fc4:	b	16ee0 <_obstack_memory_used@@Base+0x2478>
   16fc8:	cmp	r1, ip
   16fcc:	bcc	16ff4 <_obstack_memory_used@@Base+0x258c>
   16fd0:	mov	r1, #1
   16fd4:	mov	r0, lr
   16fd8:	str	r3, [fp, #-56]	; 0xffffffc8
   16fdc:	mov	r9, lr
   16fe0:	bl	1bb38 <argp_error@@Base+0x1c78>
   16fe4:	cmp	r0, #0
   16fe8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fec:	beq	16fb8 <_obstack_memory_used@@Base+0x2550>
   16ff0:	ldr	r1, [r9, #28]
   16ff4:	add	r0, r1, #1
   16ff8:	mov	r2, #10
   16ffc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   17000:	str	r0, [ip, #28]
   17004:	strb	r2, [r1]
   17008:	b	16fb8 <_obstack_memory_used@@Base+0x2550>
   1700c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   17010:	mov	r0, sl
   17014:	bl	1b4a8 <argp_error@@Base+0x15e8>
   17018:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1701c:	ldr	r1, [sl, #28]
   17020:	b	16f54 <_obstack_memory_used@@Base+0x24ec>
   17024:	mov	r2, r3
   17028:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1702c:	movw	r1, #57772	; 0xe1ac
   17030:	movt	r1, #1
   17034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17038:	strb	r0, [r3]
   1703c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17040:	bl	1bb58 <argp_error@@Base+0x1c98>
   17044:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17048:	ldr	r3, [r2, #4]
   1704c:	cmp	r3, #0
   17050:	str	r3, [fp, #-40]	; 0xffffffd8
   17054:	beq	16e38 <_obstack_memory_used@@Base+0x23d0>
   17058:	ldr	r2, [r2]
   1705c:	add	r3, r2, #28
   17060:	str	r3, [fp, #-64]	; 0xffffffc0
   17064:	b	16ce8 <_obstack_memory_used@@Base+0x2280>
   17068:	ldr	r3, [r1, #12]
   1706c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17070:	mov	r5, r0
   17074:	ldr	r4, [r1, #4]
   17078:	strd	r6, [sp, #8]
   1707c:	mov	r6, r1
   17080:	str	r8, [sp, #16]
   17084:	cmp	r3, #0
   17088:	str	lr, [sp, #20]
   1708c:	beq	171b8 <_obstack_memory_used@@Base+0x2750>
   17090:	ldr	r2, [r1]
   17094:	ldr	r3, [r1, #8]
   17098:	ldr	r7, [r2, #16]
   1709c:	ldr	r8, [r3]
   170a0:	ldr	r3, [r3, #4]
   170a4:	cmp	r3, #0
   170a8:	cmpne	r8, #0
   170ac:	bne	17160 <_obstack_memory_used@@Base+0x26f8>
   170b0:	cmp	r7, #0
   170b4:	beq	170d0 <_obstack_memory_used@@Base+0x2668>
   170b8:	ldr	r0, [r7]
   170bc:	cmp	r0, #0
   170c0:	beq	170d0 <_obstack_memory_used@@Base+0x2668>
   170c4:	ldrb	r3, [r0]
   170c8:	cmp	r3, #0
   170cc:	bne	17228 <_obstack_memory_used@@Base+0x27c0>
   170d0:	ldr	r2, [r4, #16]
   170d4:	ldr	r1, [r4, #24]
   170d8:	ldr	r3, [r4, #28]
   170dc:	sub	r3, r3, r1
   170e0:	mov	r1, #0
   170e4:	cmp	r3, r2
   170e8:	str	r1, [r6, #12]
   170ec:	bhi	1721c <_obstack_memory_used@@Base+0x27b4>
   170f0:	ldr	r3, [r4, #20]
   170f4:	cmp	r3, #0
   170f8:	subge	r5, r5, r3
   170fc:	cmp	r5, #0
   17100:	sub	r5, r5, #1
   17104:	ble	1714c <_obstack_memory_used@@Base+0x26e4>
   17108:	mov	r6, #32
   1710c:	ldr	r3, [r4, #28]
   17110:	mov	r1, #1
   17114:	mov	r0, r4
   17118:	sub	r5, r5, #1
   1711c:	ldr	r2, [r4, #32]
   17120:	cmp	r3, r2
   17124:	bcc	17138 <_obstack_memory_used@@Base+0x26d0>
   17128:	bl	1bb38 <argp_error@@Base+0x1c78>
   1712c:	cmp	r0, #0
   17130:	beq	17144 <_obstack_memory_used@@Base+0x26dc>
   17134:	ldr	r3, [r4, #28]
   17138:	add	r2, r3, #1
   1713c:	str	r2, [r4, #28]
   17140:	strb	r6, [r3]
   17144:	cmn	r5, #1
   17148:	bne	1710c <_obstack_memory_used@@Base+0x26a4>
   1714c:	ldrd	r4, [sp]
   17150:	ldrd	r6, [sp, #8]
   17154:	ldr	r8, [sp, #16]
   17158:	add	sp, sp, #20
   1715c:	pop	{pc}		; (ldr pc, [sp], #4)
   17160:	ldr	r2, [r2, #12]
   17164:	ldr	r3, [r8, #12]
   17168:	cmp	r2, r3
   1716c:	beq	170b0 <_obstack_memory_used@@Base+0x2648>
   17170:	ldr	r3, [r4, #28]
   17174:	ldr	r2, [r4, #32]
   17178:	cmp	r3, r2
   1717c:	bcc	17198 <_obstack_memory_used@@Base+0x2730>
   17180:	mov	r1, #1
   17184:	mov	r0, r4
   17188:	bl	1bb38 <argp_error@@Base+0x1c78>
   1718c:	cmp	r0, #0
   17190:	ldrne	r3, [r4, #28]
   17194:	beq	171a8 <_obstack_memory_used@@Base+0x2740>
   17198:	add	r1, r3, #1
   1719c:	mov	r2, #10
   171a0:	str	r1, [r4, #28]
   171a4:	strb	r2, [r3]
   171a8:	cmp	r7, #0
   171ac:	ldr	r4, [r6, #4]
   171b0:	bne	170b8 <_obstack_memory_used@@Base+0x2650>
   171b4:	b	170d0 <_obstack_memory_used@@Base+0x2668>
   171b8:	ldr	r3, [r4, #28]
   171bc:	ldr	r1, [r4, #32]
   171c0:	add	r2, r3, #2
   171c4:	cmp	r1, r2
   171c8:	bcs	171e4 <_obstack_memory_used@@Base+0x277c>
   171cc:	mov	r1, #2
   171d0:	mov	r0, r4
   171d4:	bl	1bb38 <argp_error@@Base+0x1c78>
   171d8:	cmp	r0, #0
   171dc:	beq	17200 <_obstack_memory_used@@Base+0x2798>
   171e0:	ldr	r3, [r4, #28]
   171e4:	movw	r2, #57840	; 0xe1f0
   171e8:	movt	r2, #1
   171ec:	ldrh	r2, [r2]
   171f0:	strh	r2, [r3]
   171f4:	ldr	r3, [r4, #28]
   171f8:	add	r3, r3, #2
   171fc:	str	r3, [r4, #28]
   17200:	ldr	r4, [r6, #4]
   17204:	ldr	r2, [r4, #16]
   17208:	ldr	r1, [r4, #24]
   1720c:	ldr	r3, [r4, #28]
   17210:	sub	r3, r3, r1
   17214:	cmp	r3, r2
   17218:	bls	170f0 <_obstack_memory_used@@Base+0x2688>
   1721c:	mov	r0, r4
   17220:	bl	1b4a8 <argp_error@@Base+0x15e8>
   17224:	b	170f0 <_obstack_memory_used@@Base+0x2688>
   17228:	cmp	r8, #0
   1722c:	beq	1725c <_obstack_memory_used@@Base+0x27f4>
   17230:	ldr	r3, [r8, #16]
   17234:	cmp	r3, r7
   17238:	beq	170d0 <_obstack_memory_used@@Base+0x2668>
   1723c:	cmp	r3, #0
   17240:	beq	1725c <_obstack_memory_used@@Base+0x27f4>
   17244:	ldr	r3, [r3, #12]
   17248:	cmp	r3, #0
   1724c:	cmpne	r7, r3
   17250:	bne	17244 <_obstack_memory_used@@Base+0x27dc>
   17254:	cmp	r7, r3
   17258:	beq	170d0 <_obstack_memory_used@@Base+0x2668>
   1725c:	mov	r2, r6
   17260:	ldr	r1, [r7, #16]
   17264:	ldr	r7, [r4, #12]
   17268:	bl	16900 <_obstack_memory_used@@Base+0x1e98>
   1726c:	ldr	r8, [r6, #4]
   17270:	ldr	r2, [r8, #16]
   17274:	ldr	r1, [r8, #24]
   17278:	ldr	r3, [r8, #28]
   1727c:	sub	r3, r3, r1
   17280:	cmp	r3, r2
   17284:	movls	r4, r8
   17288:	bhi	17294 <_obstack_memory_used@@Base+0x282c>
   1728c:	str	r7, [r8, #12]
   17290:	b	170e0 <_obstack_memory_used@@Base+0x2678>
   17294:	mov	r0, r8
   17298:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1729c:	ldr	r4, [r6, #4]
   172a0:	ldr	r2, [r4, #16]
   172a4:	ldr	r1, [r4, #24]
   172a8:	ldr	r3, [r4, #28]
   172ac:	sub	r3, r3, r1
   172b0:	b	1728c <_obstack_memory_used@@Base+0x2824>
   172b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   172b8:	strd	r6, [sp, #8]
   172bc:	mov	r7, r0
   172c0:	ldr	r6, [r0, #12]
   172c4:	strd	r8, [sp, #16]
   172c8:	mov	r8, r2
   172cc:	strd	sl, [sp, #24]
   172d0:	mov	sl, r3
   172d4:	mov	fp, r1
   172d8:	ldr	r3, [r0, #16]
   172dc:	str	lr, [sp, #32]
   172e0:	sub	sp, sp, #28
   172e4:	cmp	r6, #0
   172e8:	ldr	r5, [sp, #68]	; 0x44
   172ec:	str	r3, [sp, #8]
   172f0:	ldr	r3, [r0, #20]
   172f4:	beq	17664 <_obstack_memory_used@@Base+0x2bfc>
   172f8:	mov	r1, #11
   172fc:	mov	r0, r6
   17300:	str	r3, [sp, #12]
   17304:	bl	11274 <strchr@plt>
   17308:	cmp	r8, #0
   1730c:	mov	r9, r0
   17310:	ldr	r3, [sp, #12]
   17314:	bne	17560 <_obstack_memory_used@@Base+0x2af8>
   17318:	cmp	r0, #0
   1731c:	beq	17860 <_obstack_memory_used@@Base+0x2df8>
   17320:	subs	r1, r0, r6
   17324:	movne	r4, #1
   17328:	moveq	r4, #0
   1732c:	cmp	r3, #0
   17330:	str	r1, [sp, #20]
   17334:	beq	17804 <_obstack_memory_used@@Base+0x2d9c>
   17338:	cmp	r1, #0
   1733c:	beq	17854 <_obstack_memory_used@@Base+0x2dec>
   17340:	mov	r0, r6
   17344:	mov	r4, #1
   17348:	bl	11154 <strndup@plt>
   1734c:	adds	r3, r0, #0
   17350:	mov	r6, r0
   17354:	movne	r3, #1
   17358:	str	r3, [sp, #16]
   1735c:	mov	r1, fp
   17360:	mov	r0, r7
   17364:	bl	14378 <argp_parse@@Base+0xeb8>
   17368:	mov	r2, r0
   1736c:	mov	r1, r6
   17370:	ldr	r3, [r7, #20]
   17374:	mov	r0, #1
   17378:	movt	r0, #512	; 0x200
   1737c:	str	r2, [sp, #12]
   17380:	blx	r3
   17384:	subs	r9, r0, #0
   17388:	moveq	r4, r9
   1738c:	beq	1741c <_obstack_memory_used@@Base+0x29b4>
   17390:	cmp	r6, r9
   17394:	movne	r4, #0
   17398:	andeq	r4, r4, #1
   1739c:	cmp	sl, #0
   173a0:	ldr	r2, [r5, #28]
   173a4:	bne	176ac <_obstack_memory_used@@Base+0x2c44>
   173a8:	cmp	r4, #0
   173ac:	beq	17604 <_obstack_memory_used@@Base+0x2b9c>
   173b0:	ldr	r3, [sp, #20]
   173b4:	ldr	r0, [r5, #32]
   173b8:	add	r1, r2, r3
   173bc:	cmp	r0, r1
   173c0:	bcs	175bc <_obstack_memory_used@@Base+0x2b54>
   173c4:	mov	r1, r3
   173c8:	mov	r0, r5
   173cc:	bl	1bb38 <argp_error@@Base+0x1c78>
   173d0:	cmp	r0, #0
   173d4:	ldr	r2, [r5, #28]
   173d8:	bne	175bc <_obstack_memory_used@@Base+0x2b54>
   173dc:	ldr	r0, [r5, #16]
   173e0:	ldr	r1, [r5, #24]
   173e4:	sub	r2, r2, r1
   173e8:	cmp	r2, r0
   173ec:	bhi	176f4 <_obstack_memory_used@@Base+0x2c8c>
   173f0:	ldr	r1, [r5, #4]
   173f4:	ldr	r2, [r5, #20]
   173f8:	bic	r2, r2, r2, asr #31
   173fc:	cmp	r1, r2
   17400:	bcc	176d0 <_obstack_memory_used@@Base+0x2c68>
   17404:	cmp	r9, r6
   17408:	moveq	r4, #1
   1740c:	beq	1741c <_obstack_memory_used@@Base+0x29b4>
   17410:	mov	r0, r9
   17414:	mov	r4, #1
   17418:	bl	144f8 <argp_parse@@Base+0x1038>
   1741c:	ldr	r3, [sp, #16]
   17420:	cmp	r3, #0
   17424:	beq	1743c <_obstack_memory_used@@Base+0x29d4>
   17428:	ldr	r3, [r7, #20]
   1742c:	cmp	r3, #0
   17430:	beq	174bc <_obstack_memory_used@@Base+0x2a54>
   17434:	mov	r0, r6
   17438:	bl	144f8 <argp_parse@@Base+0x1038>
   1743c:	cmp	r8, #0
   17440:	beq	174bc <_obstack_memory_used@@Base+0x2a54>
   17444:	ldr	r3, [r7, #20]
   17448:	cmp	r3, #0
   1744c:	beq	174bc <_obstack_memory_used@@Base+0x2a54>
   17450:	mov	r0, #4
   17454:	movt	r0, #512	; 0x200
   17458:	ldr	r2, [sp, #12]
   1745c:	mov	r1, #0
   17460:	blx	r3
   17464:	subs	r6, r0, #0
   17468:	beq	174bc <_obstack_memory_used@@Base+0x2a54>
   1746c:	orrs	r3, sl, r4
   17470:	bne	17790 <_obstack_memory_used@@Base+0x2d28>
   17474:	mov	r0, r6
   17478:	bl	11268 <strlen@plt>
   1747c:	subs	r4, r0, #0
   17480:	bne	17748 <_obstack_memory_used@@Base+0x2ce0>
   17484:	mov	r0, r6
   17488:	bl	144f8 <argp_parse@@Base+0x1038>
   1748c:	ldr	r2, [r5, #16]
   17490:	ldr	r1, [r5, #24]
   17494:	ldr	r3, [r5, #28]
   17498:	sub	r3, r3, r1
   1749c:	cmp	r3, r2
   174a0:	bhi	177dc <_obstack_memory_used@@Base+0x2d74>
   174a4:	ldr	r2, [r5, #4]
   174a8:	ldr	r3, [r5, #20]
   174ac:	bic	r3, r3, r3, asr #31
   174b0:	cmp	r2, r3
   174b4:	bcc	177b4 <_obstack_memory_used@@Base+0x2d4c>
   174b8:	mov	r4, #1
   174bc:	ldr	r7, [sp, #8]
   174c0:	cmp	r7, #0
   174c4:	beq	17540 <_obstack_memory_used@@Base+0x2ad8>
   174c8:	ldr	r3, [r7]
   174cc:	cmp	r3, #0
   174d0:	beq	17540 <_obstack_memory_used@@Base+0x2ad8>
   174d4:	ldr	r2, [sp, #64]	; 0x40
   174d8:	eor	r6, r2, #1
   174dc:	eor	r2, r4, #1
   174e0:	orr	r2, r2, r6
   174e4:	and	r6, r6, #1
   174e8:	tst	r2, #1
   174ec:	beq	17814 <_obstack_memory_used@@Base+0x2dac>
   174f0:	ldr	r9, [sp, #64]	; 0x40
   174f4:	orrs	r2, r4, sl
   174f8:	mov	r0, r3
   174fc:	str	r9, [sp]
   17500:	movne	r3, #1
   17504:	moveq	r3, #0
   17508:	str	r5, [sp, #4]
   1750c:	mov	r2, r8
   17510:	mov	r1, fp
   17514:	bl	172b4 <_obstack_memory_used@@Base+0x284c>
   17518:	ldr	r3, [r7, #16]
   1751c:	orr	r4, r4, r0
   17520:	add	r7, r7, #16
   17524:	cmp	r3, #0
   17528:	beq	17540 <_obstack_memory_used@@Base+0x2ad8>
   1752c:	cmp	r4, #0
   17530:	movne	r2, r6
   17534:	moveq	r2, #1
   17538:	cmp	r2, #0
   1753c:	bne	174f4 <_obstack_memory_used@@Base+0x2a8c>
   17540:	mov	r0, r4
   17544:	add	sp, sp, #28
   17548:	ldrd	r4, [sp]
   1754c:	ldrd	r6, [sp, #8]
   17550:	ldrd	r8, [sp, #16]
   17554:	ldrd	sl, [sp, #24]
   17558:	add	sp, sp, #32
   1755c:	pop	{pc}		; (ldr pc, [sp], #4)
   17560:	cmp	r0, #0
   17564:	beq	177e8 <_obstack_memory_used@@Base+0x2d80>
   17568:	cmp	r3, #0
   1756c:	add	r6, r0, #1
   17570:	movne	r1, fp
   17574:	movne	r0, r7
   17578:	beq	175e0 <_obstack_memory_used@@Base+0x2b78>
   1757c:	bl	14378 <argp_parse@@Base+0xeb8>
   17580:	ldr	r3, [r7, #20]
   17584:	str	r0, [sp, #12]
   17588:	mov	r0, #2
   1758c:	movt	r0, #512	; 0x200
   17590:	mov	r1, r6
   17594:	ldr	r2, [sp, #12]
   17598:	blx	r3
   1759c:	subs	r9, r0, #0
   175a0:	moveq	r4, r9
   175a4:	beq	1743c <_obstack_memory_used@@Base+0x29d4>
   175a8:	mov	r3, #0
   175ac:	mov	r4, r3
   175b0:	str	r3, [sp, #16]
   175b4:	str	r3, [sp, #20]
   175b8:	b	17390 <_obstack_memory_used@@Base+0x2928>
   175bc:	ldr	r4, [sp, #20]
   175c0:	mov	r0, r2
   175c4:	mov	r1, r6
   175c8:	mov	r2, r4
   175cc:	bl	11160 <memcpy@plt>
   175d0:	ldr	r2, [r5, #28]
   175d4:	add	r2, r2, r4
   175d8:	str	r2, [r5, #28]
   175dc:	b	173dc <_obstack_memory_used@@Base+0x2974>
   175e0:	cmp	r6, #0
   175e4:	moveq	r4, r6
   175e8:	beq	174bc <_obstack_memory_used@@Base+0x2a54>
   175ec:	cmp	sl, #0
   175f0:	ldr	r2, [r5, #28]
   175f4:	bne	17694 <_obstack_memory_used@@Base+0x2c2c>
   175f8:	mov	r9, r6
   175fc:	str	sl, [sp, #12]
   17600:	str	sl, [sp, #16]
   17604:	mov	r0, r9
   17608:	str	r2, [sp, #20]
   1760c:	bl	11268 <strlen@plt>
   17610:	subs	r4, r0, #0
   17614:	ldr	r2, [sp, #20]
   17618:	beq	173dc <_obstack_memory_used@@Base+0x2974>
   1761c:	ldr	r0, [r5, #32]
   17620:	add	r1, r2, r4
   17624:	cmp	r0, r1
   17628:	bcs	17644 <_obstack_memory_used@@Base+0x2bdc>
   1762c:	mov	r1, r4
   17630:	mov	r0, r5
   17634:	bl	1bb38 <argp_error@@Base+0x1c78>
   17638:	cmp	r0, #0
   1763c:	ldr	r2, [r5, #28]
   17640:	beq	173dc <_obstack_memory_used@@Base+0x2974>
   17644:	mov	r0, r2
   17648:	mov	r1, r9
   1764c:	mov	r2, r4
   17650:	bl	11160 <memcpy@plt>
   17654:	ldr	r2, [r5, #28]
   17658:	add	r2, r2, r4
   1765c:	str	r2, [r5, #28]
   17660:	b	173dc <_obstack_memory_used@@Base+0x2974>
   17664:	cmp	r3, #0
   17668:	beq	177fc <_obstack_memory_used@@Base+0x2d94>
   1766c:	bl	14378 <argp_parse@@Base+0xeb8>
   17670:	mov	r2, #1
   17674:	movt	r2, #512	; 0x200
   17678:	str	r0, [sp, #12]
   1767c:	cmp	r8, #0
   17680:	mov	r0, #2
   17684:	movt	r0, #512	; 0x200
   17688:	moveq	r0, r2
   1768c:	ldr	r3, [r7, #20]
   17690:	b	17590 <_obstack_memory_used@@Base+0x2b28>
   17694:	mov	r3, #0
   17698:	mov	r9, r6
   1769c:	mov	r4, r3
   176a0:	str	r3, [sp, #12]
   176a4:	str	r3, [sp, #16]
   176a8:	str	r3, [sp, #20]
   176ac:	ldr	r1, [r5, #32]
   176b0:	cmp	r1, r2
   176b4:	bls	17700 <_obstack_memory_used@@Base+0x2c98>
   176b8:	add	r0, r2, #1
   176bc:	mov	r1, #10
   176c0:	str	r0, [r5, #28]
   176c4:	strb	r1, [r2]
   176c8:	ldr	r2, [r5, #28]
   176cc:	b	173a8 <_obstack_memory_used@@Base+0x2940>
   176d0:	ldr	r2, [r5, #28]
   176d4:	ldr	r1, [r5, #32]
   176d8:	cmp	r2, r1
   176dc:	bcs	1771c <_obstack_memory_used@@Base+0x2cb4>
   176e0:	add	r0, r2, #1
   176e4:	mov	r1, #10
   176e8:	str	r0, [r5, #28]
   176ec:	strb	r1, [r2]
   176f0:	b	17404 <_obstack_memory_used@@Base+0x299c>
   176f4:	mov	r0, r5
   176f8:	bl	1b4a8 <argp_error@@Base+0x15e8>
   176fc:	b	173f0 <_obstack_memory_used@@Base+0x2988>
   17700:	mov	r1, #1
   17704:	mov	r0, r5
   17708:	bl	1bb38 <argp_error@@Base+0x1c78>
   1770c:	cmp	r0, #0
   17710:	ldr	r2, [r5, #28]
   17714:	bne	176b8 <_obstack_memory_used@@Base+0x2c50>
   17718:	b	173a8 <_obstack_memory_used@@Base+0x2940>
   1771c:	mov	r1, #1
   17720:	mov	r0, r5
   17724:	bl	1bb38 <argp_error@@Base+0x1c78>
   17728:	cmp	r0, #0
   1772c:	beq	17404 <_obstack_memory_used@@Base+0x299c>
   17730:	ldr	r2, [r5, #28]
   17734:	mov	r1, #10
   17738:	add	r0, r2, #1
   1773c:	str	r0, [r5, #28]
   17740:	strb	r1, [r2]
   17744:	b	17404 <_obstack_memory_used@@Base+0x299c>
   17748:	ldr	r0, [r5, #28]
   1774c:	ldr	r2, [r5, #32]
   17750:	add	r3, r0, r4
   17754:	cmp	r2, r3
   17758:	bcs	17774 <_obstack_memory_used@@Base+0x2d0c>
   1775c:	mov	r1, r4
   17760:	mov	r0, r5
   17764:	bl	1bb38 <argp_error@@Base+0x1c78>
   17768:	cmp	r0, #0
   1776c:	beq	17484 <_obstack_memory_used@@Base+0x2a1c>
   17770:	ldr	r0, [r5, #28]
   17774:	mov	r2, r4
   17778:	mov	r1, r6
   1777c:	bl	11160 <memcpy@plt>
   17780:	ldr	r3, [r5, #28]
   17784:	add	r4, r3, r4
   17788:	str	r4, [r5, #28]
   1778c:	b	17484 <_obstack_memory_used@@Base+0x2a1c>
   17790:	ldr	r3, [r5, #28]
   17794:	ldr	r2, [r5, #32]
   17798:	cmp	r3, r2
   1779c:	bcs	17838 <_obstack_memory_used@@Base+0x2dd0>
   177a0:	add	r1, r3, #1
   177a4:	mov	r2, #10
   177a8:	str	r1, [r5, #28]
   177ac:	strb	r2, [r3]
   177b0:	b	17474 <_obstack_memory_used@@Base+0x2a0c>
   177b4:	ldr	r3, [r5, #28]
   177b8:	ldr	r2, [r5, #32]
   177bc:	cmp	r3, r2
   177c0:	bcs	1781c <_obstack_memory_used@@Base+0x2db4>
   177c4:	add	r1, r3, #1
   177c8:	mov	r2, #10
   177cc:	mov	r4, #1
   177d0:	str	r1, [r5, #28]
   177d4:	strb	r2, [r3]
   177d8:	b	174bc <_obstack_memory_used@@Base+0x2a54>
   177dc:	mov	r0, r5
   177e0:	bl	1b4a8 <argp_error@@Base+0x15e8>
   177e4:	b	174a4 <_obstack_memory_used@@Base+0x2a3c>
   177e8:	cmp	r3, #0
   177ec:	movne	r1, fp
   177f0:	movne	r0, r7
   177f4:	movne	r6, r9
   177f8:	bne	1757c <_obstack_memory_used@@Base+0x2b14>
   177fc:	mov	r4, r3
   17800:	b	174bc <_obstack_memory_used@@Base+0x2a54>
   17804:	mov	r9, r6
   17808:	str	r8, [sp, #12]
   1780c:	str	r4, [sp, #16]
   17810:	b	17390 <_obstack_memory_used@@Base+0x2928>
   17814:	mov	r4, #1
   17818:	b	17540 <_obstack_memory_used@@Base+0x2ad8>
   1781c:	mov	r1, #1
   17820:	mov	r0, r5
   17824:	bl	1bb38 <argp_error@@Base+0x1c78>
   17828:	cmp	r0, #0
   1782c:	beq	174b8 <_obstack_memory_used@@Base+0x2a50>
   17830:	ldr	r3, [r5, #28]
   17834:	b	177c4 <_obstack_memory_used@@Base+0x2d5c>
   17838:	mov	r1, #1
   1783c:	mov	r0, r5
   17840:	bl	1bb38 <argp_error@@Base+0x1c78>
   17844:	cmp	r0, #0
   17848:	beq	17474 <_obstack_memory_used@@Base+0x2a0c>
   1784c:	ldr	r3, [r5, #28]
   17850:	b	177a0 <_obstack_memory_used@@Base+0x2d38>
   17854:	ldr	r4, [sp, #20]
   17858:	str	r4, [sp, #16]
   1785c:	b	1735c <_obstack_memory_used@@Base+0x28f4>
   17860:	cmp	r3, #0
   17864:	beq	175ec <_obstack_memory_used@@Base+0x2b84>
   17868:	mov	r1, fp
   1786c:	mov	r0, r7
   17870:	bl	14378 <argp_parse@@Base+0xeb8>
   17874:	str	r0, [sp, #12]
   17878:	mov	r0, #1
   1787c:	movt	r0, #512	; 0x200
   17880:	ldr	r3, [r7, #20]
   17884:	b	17590 <_obstack_memory_used@@Base+0x2b28>
   17888:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1788c:	ldr	r4, [r0, #16]
   17890:	strd	r6, [sp, #8]
   17894:	strd	r8, [sp, #16]
   17898:	strd	sl, [sp, #24]
   1789c:	str	lr, [sp, #32]
   178a0:	sub	sp, sp, #20
   178a4:	cmp	r4, #0
   178a8:	movne	r3, r4
   178ac:	bne	178b8 <_obstack_memory_used@@Base+0x2e50>
   178b0:	b	18148 <_obstack_memory_used@@Base+0x36e0>
   178b4:	mov	r3, r2
   178b8:	ldr	r2, [r3, #12]
   178bc:	cmp	r2, #0
   178c0:	bne	178b4 <_obstack_memory_used@@Base+0x2e4c>
   178c4:	ldr	r2, [r3, #8]
   178c8:	ldr	r7, [r1, #16]
   178cc:	cmp	r7, #0
   178d0:	movne	r3, r7
   178d4:	bne	178e0 <_obstack_memory_used@@Base+0x2e78>
   178d8:	b	18140 <_obstack_memory_used@@Base+0x36d8>
   178dc:	mov	r3, ip
   178e0:	ldr	ip, [r3, #12]
   178e4:	cmp	ip, #0
   178e8:	bne	178dc <_obstack_memory_used@@Base+0x2e74>
   178ec:	ldr	ip, [r3, #8]
   178f0:	mvn	r3, ip
   178f4:	lsr	r3, r3, #31
   178f8:	cmp	r3, r2, lsr #31
   178fc:	subne	ip, r2, ip
   17900:	subeq	ip, ip, r2
   17904:	cmp	ip, #0
   17908:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   1790c:	adds	ip, r7, #0
   17910:	movne	ip, #1
   17914:	cmp	r4, #0
   17918:	rsbeq	ip, ip, #0
   1791c:	rsbne	ip, ip, #1
   17920:	cmp	ip, #0
   17924:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17928:	cmp	r4, #0
   1792c:	mov	r6, r1
   17930:	mov	r5, r0
   17934:	beq	17e38 <_obstack_memory_used@@Base+0x33d0>
   17938:	ldr	r8, [r4, #12]
   1793c:	ldr	r1, [r4, #20]
   17940:	ldr	r2, [r7, #20]
   17944:	ldr	r9, [r7, #12]
   17948:	cmp	r1, r2
   1794c:	bgt	17b0c <_obstack_memory_used@@Base+0x30a4>
   17950:	blt	1795c <_obstack_memory_used@@Base+0x2ef4>
   17954:	b	17c9c <_obstack_memory_used@@Base+0x3234>
   17958:	mov	r9, r5
   1795c:	ldr	r5, [r9, #12]
   17960:	ldr	r3, [r9, #20]
   17964:	cmp	r1, r3
   17968:	blt	17958 <_obstack_memory_used@@Base+0x2ef0>
   1796c:	cmp	r8, r5
   17970:	beq	18308 <_obstack_memory_used@@Base+0x38a0>
   17974:	ldr	r7, [r5, #12]
   17978:	ldr	r6, [r8, #12]
   1797c:	cmp	r6, r7
   17980:	beq	18250 <_obstack_memory_used@@Base+0x37e8>
   17984:	ldr	sl, [r6, #12]
   17988:	ldr	fp, [r7, #12]
   1798c:	cmp	sl, fp
   17990:	beq	18370 <_obstack_memory_used@@Base+0x3908>
   17994:	ldr	r3, [sl, #12]
   17998:	ldr	r2, [fp, #12]
   1799c:	cmp	r3, r2
   179a0:	beq	1840c <_obstack_memory_used@@Base+0x39a4>
   179a4:	ldr	r1, [r2, #12]
   179a8:	ldr	r0, [r3, #12]
   179ac:	cmp	r0, r1
   179b0:	beq	184a8 <_obstack_memory_used@@Base+0x3a40>
   179b4:	str	r3, [sp]
   179b8:	str	r2, [sp, #4]
   179bc:	bl	15df0 <_obstack_memory_used@@Base+0x1388>
   179c0:	subs	ip, r0, #0
   179c4:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   179c8:	ldr	r3, [sp]
   179cc:	ldr	r2, [sp, #4]
   179d0:	ldr	r0, [r3, #8]
   179d4:	ldr	r1, [r2, #8]
   179d8:	mvn	ip, r1
   179dc:	lsr	ip, ip, #31
   179e0:	cmp	ip, r0, lsr #31
   179e4:	subne	ip, r0, r1
   179e8:	subeq	ip, r1, r0
   179ec:	cmp	ip, #0
   179f0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   179f4:	ldr	r1, [r2, #4]
   179f8:	ldr	r3, [r3, #4]
   179fc:	sub	ip, r1, r3
   17a00:	cmp	ip, #0
   17a04:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a08:	ldr	r1, [fp, #8]
   17a0c:	ldr	r0, [sl, #8]
   17a10:	mvn	r3, r1
   17a14:	lsr	r3, r3, #31
   17a18:	cmp	r3, r0, lsr #31
   17a1c:	subne	ip, r0, r1
   17a20:	subeq	ip, r1, r0
   17a24:	cmp	ip, #0
   17a28:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a2c:	ldr	r3, [sl, #4]
   17a30:	ldr	r1, [fp, #4]
   17a34:	sub	ip, r1, r3
   17a38:	cmp	ip, #0
   17a3c:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a40:	ldr	r1, [r7, #8]
   17a44:	ldr	r0, [r6, #8]
   17a48:	mvn	r3, r1
   17a4c:	lsr	r3, r3, #31
   17a50:	cmp	r3, r0, lsr #31
   17a54:	subne	ip, r0, r1
   17a58:	subeq	ip, r1, r0
   17a5c:	cmp	ip, #0
   17a60:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a64:	ldr	r3, [r6, #4]
   17a68:	ldr	r1, [r7, #4]
   17a6c:	sub	ip, r1, r3
   17a70:	cmp	ip, #0
   17a74:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a78:	ldr	r1, [r5, #8]
   17a7c:	ldr	r0, [r8, #8]
   17a80:	mvn	r3, r1
   17a84:	lsr	r3, r3, #31
   17a88:	cmp	r3, r0, lsr #31
   17a8c:	subne	ip, r0, r1
   17a90:	subeq	ip, r1, r0
   17a94:	cmp	ip, #0
   17a98:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17a9c:	ldr	r1, [r5, #4]
   17aa0:	ldr	r3, [r8, #4]
   17aa4:	sub	ip, r1, r3
   17aa8:	cmp	ip, #0
   17aac:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17ab0:	ldr	r1, [r9, #8]
   17ab4:	ldr	r0, [r4, #8]
   17ab8:	mvn	r3, r1
   17abc:	lsr	r3, r3, #31
   17ac0:	cmp	r3, r0, lsr #31
   17ac4:	subne	ip, r0, r1
   17ac8:	subeq	ip, r1, r0
   17acc:	cmp	ip, #0
   17ad0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17ad4:	ldr	r0, [r4, #4]
   17ad8:	ldr	r1, [r9, #4]
   17adc:	sub	ip, r1, r0
   17ae0:	cmp	ip, #0
   17ae4:	mvneq	ip, #0
   17ae8:	mov	r0, ip
   17aec:	add	sp, sp, #20
   17af0:	ldrd	r4, [sp]
   17af4:	ldrd	r6, [sp, #8]
   17af8:	ldrd	r8, [sp, #16]
   17afc:	ldrd	sl, [sp, #24]
   17b00:	add	sp, sp, #32
   17b04:	pop	{pc}		; (ldr pc, [sp], #4)
   17b08:	mov	r8, r4
   17b0c:	ldr	r4, [r8, #12]
   17b10:	ldr	r3, [r8, #20]
   17b14:	cmp	r2, r3
   17b18:	blt	17b08 <_obstack_memory_used@@Base+0x30a0>
   17b1c:	cmp	r4, r9
   17b20:	beq	182d4 <_obstack_memory_used@@Base+0x386c>
   17b24:	ldr	r5, [r4, #12]
   17b28:	ldr	r6, [r9, #12]
   17b2c:	cmp	r5, r6
   17b30:	beq	1833c <_obstack_memory_used@@Base+0x38d4>
   17b34:	ldr	sl, [r5, #12]
   17b38:	ldr	fp, [r6, #12]
   17b3c:	cmp	sl, fp
   17b40:	beq	18284 <_obstack_memory_used@@Base+0x381c>
   17b44:	ldr	r3, [sl, #12]
   17b48:	ldr	r2, [fp, #12]
   17b4c:	cmp	r3, r2
   17b50:	beq	183b4 <_obstack_memory_used@@Base+0x394c>
   17b54:	ldr	r1, [r2, #12]
   17b58:	ldr	r0, [r3, #12]
   17b5c:	cmp	r0, r1
   17b60:	beq	18440 <_obstack_memory_used@@Base+0x39d8>
   17b64:	str	r3, [sp]
   17b68:	str	r2, [sp, #4]
   17b6c:	bl	15df0 <_obstack_memory_used@@Base+0x1388>
   17b70:	subs	ip, r0, #0
   17b74:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17b78:	ldr	r3, [sp]
   17b7c:	ldr	r2, [sp, #4]
   17b80:	ldr	r0, [r3, #8]
   17b84:	ldr	r1, [r2, #8]
   17b88:	mvn	ip, r1
   17b8c:	lsr	ip, ip, #31
   17b90:	cmp	ip, r0, lsr #31
   17b94:	subne	ip, r0, r1
   17b98:	subeq	ip, r1, r0
   17b9c:	cmp	ip, #0
   17ba0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17ba4:	ldr	r1, [r2, #4]
   17ba8:	ldr	r3, [r3, #4]
   17bac:	sub	ip, r1, r3
   17bb0:	cmp	ip, #0
   17bb4:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17bb8:	ldr	r1, [fp, #8]
   17bbc:	ldr	r0, [sl, #8]
   17bc0:	mvn	r3, r1
   17bc4:	lsr	r3, r3, #31
   17bc8:	cmp	r3, r0, lsr #31
   17bcc:	subne	ip, r0, r1
   17bd0:	subeq	ip, r1, r0
   17bd4:	cmp	ip, #0
   17bd8:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17bdc:	ldr	r3, [sl, #4]
   17be0:	ldr	r1, [fp, #4]
   17be4:	sub	ip, r1, r3
   17be8:	cmp	ip, #0
   17bec:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17bf0:	ldr	r1, [r6, #8]
   17bf4:	ldr	r0, [r5, #8]
   17bf8:	mvn	r3, r1
   17bfc:	lsr	r3, r3, #31
   17c00:	cmp	r3, r0, lsr #31
   17c04:	subne	ip, r0, r1
   17c08:	subeq	ip, r1, r0
   17c0c:	cmp	ip, #0
   17c10:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c14:	ldr	r3, [r5, #4]
   17c18:	ldr	r1, [r6, #4]
   17c1c:	sub	ip, r1, r3
   17c20:	cmp	ip, #0
   17c24:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c28:	ldr	r1, [r9, #8]
   17c2c:	ldr	r0, [r4, #8]
   17c30:	mvn	r3, r1
   17c34:	lsr	r3, r3, #31
   17c38:	cmp	r3, r0, lsr #31
   17c3c:	subne	ip, r0, r1
   17c40:	subeq	ip, r1, r0
   17c44:	cmp	ip, #0
   17c48:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c4c:	ldr	r0, [r4, #4]
   17c50:	ldr	r1, [r9, #4]
   17c54:	sub	ip, r1, r0
   17c58:	cmp	ip, #0
   17c5c:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c60:	ldr	r1, [r7, #8]
   17c64:	ldr	r0, [r8, #8]
   17c68:	mvn	r3, r1
   17c6c:	lsr	r3, r3, #31
   17c70:	cmp	r3, r0, lsr #31
   17c74:	subne	ip, r0, r1
   17c78:	subeq	ip, r1, r0
   17c7c:	cmp	ip, #0
   17c80:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c84:	ldr	r1, [r7, #4]
   17c88:	ldr	r0, [r8, #4]
   17c8c:	sub	ip, r1, r0
   17c90:	cmp	ip, #0
   17c94:	moveq	ip, #1
   17c98:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   17c9c:	cmp	r8, r9
   17ca0:	beq	18474 <_obstack_memory_used@@Base+0x3a0c>
   17ca4:	ldr	sl, [r8, #12]
   17ca8:	ldr	fp, [r9, #12]
   17cac:	cmp	sl, fp
   17cb0:	beq	184dc <_obstack_memory_used@@Base+0x3a74>
   17cb4:	ldr	r3, [sl, #12]
   17cb8:	mov	r2, r3
   17cbc:	ldr	r3, [fp, #12]
   17cc0:	str	r2, [sp]
   17cc4:	cmp	r2, r3
   17cc8:	beq	18510 <_obstack_memory_used@@Base+0x3aa8>
   17ccc:	ldr	r2, [r2, #12]
   17cd0:	mov	r1, r2
   17cd4:	ldr	r2, [r3, #12]
   17cd8:	str	r1, [sp, #4]
   17cdc:	cmp	r1, r2
   17ce0:	beq	18544 <_obstack_memory_used@@Base+0x3adc>
   17ce4:	ldr	r0, [r1, #12]
   17ce8:	ldr	r1, [r2, #12]
   17cec:	cmp	r0, r1
   17cf0:	beq	1857c <_obstack_memory_used@@Base+0x3b14>
   17cf4:	str	r3, [sp, #8]
   17cf8:	str	r2, [sp, #12]
   17cfc:	bl	15df0 <_obstack_memory_used@@Base+0x1388>
   17d00:	subs	ip, r0, #0
   17d04:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17d08:	ldr	r3, [sp, #4]
   17d0c:	ldr	r2, [sp, #12]
   17d10:	ldr	r0, [r3, #8]
   17d14:	ldr	r1, [r2, #8]
   17d18:	ldr	r3, [sp, #8]
   17d1c:	mvn	ip, r1
   17d20:	lsr	ip, ip, #31
   17d24:	cmp	ip, r0, lsr #31
   17d28:	subne	ip, r0, r1
   17d2c:	subeq	ip, r1, r0
   17d30:	cmp	ip, #0
   17d34:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17d38:	ldr	r1, [r2, #4]
   17d3c:	ldr	r2, [sp, #4]
   17d40:	ldr	r2, [r2, #4]
   17d44:	sub	ip, r1, r2
   17d48:	cmp	ip, #0
   17d4c:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17d50:	ldr	r2, [sp]
   17d54:	ldr	r1, [r3, #8]
   17d58:	ldr	r0, [r2, #8]
   17d5c:	mvn	r2, r1
   17d60:	lsr	r2, r2, #31
   17d64:	cmp	r2, r0, lsr #31
   17d68:	subne	ip, r0, r1
   17d6c:	subeq	ip, r1, r0
   17d70:	cmp	ip, #0
   17d74:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17d78:	ldr	r1, [r3, #4]
   17d7c:	ldr	r3, [sp]
   17d80:	ldr	r3, [r3, #4]
   17d84:	sub	ip, r1, r3
   17d88:	cmp	ip, #0
   17d8c:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17d90:	ldr	r1, [fp, #8]
   17d94:	ldr	r0, [sl, #8]
   17d98:	mvn	r3, r1
   17d9c:	lsr	r3, r3, #31
   17da0:	cmp	r3, r0, lsr #31
   17da4:	subne	ip, r0, r1
   17da8:	subeq	ip, r1, r0
   17dac:	cmp	ip, #0
   17db0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17db4:	ldr	r3, [sl, #4]
   17db8:	ldr	r1, [fp, #4]
   17dbc:	sub	ip, r1, r3
   17dc0:	cmp	ip, #0
   17dc4:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17dc8:	ldr	r1, [r9, #8]
   17dcc:	ldr	r0, [r8, #8]
   17dd0:	mvn	r3, r1
   17dd4:	lsr	r3, r3, #31
   17dd8:	cmp	r3, r0, lsr #31
   17ddc:	subne	ip, r0, r1
   17de0:	subeq	ip, r1, r0
   17de4:	cmp	ip, #0
   17de8:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17dec:	ldr	r3, [r8, #4]
   17df0:	ldr	r1, [r9, #4]
   17df4:	sub	ip, r1, r3
   17df8:	cmp	ip, #0
   17dfc:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17e00:	ldr	r1, [r7, #8]
   17e04:	ldr	r0, [r4, #8]
   17e08:	mvn	r3, r1
   17e0c:	lsr	r3, r3, #31
   17e10:	cmp	r3, r0, lsr #31
   17e14:	subne	ip, r0, r1
   17e18:	subeq	ip, r1, r0
   17e1c:	cmp	ip, #0
   17e20:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17e24:	ldr	r3, [r4, #4]
   17e28:	ldr	r1, [r7, #4]
   17e2c:	sub	ip, r1, r3
   17e30:	cmp	ip, #0
   17e34:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17e38:	ldr	r1, [r6, #12]
   17e3c:	ldr	r0, [r5, #12]
   17e40:	mvn	r3, r1
   17e44:	lsr	r3, r3, #31
   17e48:	cmp	r3, r0, lsr #31
   17e4c:	subne	ip, r0, r1
   17e50:	subeq	ip, r1, r0
   17e54:	cmp	ip, #0
   17e58:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   17e5c:	ldm	r5, {r3, sl}
   17e60:	cmp	sl, #0
   17e64:	beq	183a4 <_obstack_memory_used@@Base+0x393c>
   17e68:	add	r2, r3, #24
   17e6c:	mov	r1, sl
   17e70:	ldr	r7, [r2, #-24]	; 0xffffffe8
   17e74:	cmp	r7, #0
   17e78:	beq	17e88 <_obstack_memory_used@@Base+0x3420>
   17e7c:	ldr	r0, [r2, #-12]
   17e80:	tst	r0, #2
   17e84:	beq	17e98 <_obstack_memory_used@@Base+0x3430>
   17e88:	subs	r1, r1, #1
   17e8c:	add	r2, r2, #24
   17e90:	bne	17e70 <_obstack_memory_used@@Base+0x3408>
   17e94:	mov	r7, r1
   17e98:	ldrd	r8, [r6]
   17e9c:	cmp	r9, #0
   17ea0:	beq	183ac <_obstack_memory_used@@Base+0x3944>
   17ea4:	add	r2, r8, #24
   17ea8:	mov	r1, r9
   17eac:	ldr	r4, [r2, #-24]	; 0xffffffe8
   17eb0:	cmp	r4, #0
   17eb4:	beq	17ec4 <_obstack_memory_used@@Base+0x345c>
   17eb8:	ldr	r0, [r2, #-12]
   17ebc:	tst	r0, #2
   17ec0:	beq	17ed4 <_obstack_memory_used@@Base+0x346c>
   17ec4:	subs	r1, r1, #1
   17ec8:	add	r2, r2, #24
   17ecc:	bne	17eac <_obstack_memory_used@@Base+0x3444>
   17ed0:	mov	r4, r1
   17ed4:	ldr	r2, [r3, #12]
   17ed8:	tst	r2, #8
   17edc:	beq	17f50 <_obstack_memory_used@@Base+0x34e8>
   17ee0:	cmp	r7, #0
   17ee4:	beq	17f50 <_obstack_memory_used@@Base+0x34e8>
   17ee8:	str	r3, [sp]
   17eec:	bl	11250 <__ctype_b_loc@plt>
   17ef0:	ldrb	r1, [r7]
   17ef4:	ldr	r0, [r0]
   17ef8:	ldr	r3, [sp]
   17efc:	lsl	r2, r1, #1
   17f00:	ldrh	r2, [r0, r2]
   17f04:	tst	r2, #8192	; 0x2000
   17f08:	beq	17f20 <_obstack_memory_used@@Base+0x34b8>
   17f0c:	ldrb	r1, [r7, #1]!
   17f10:	lsl	r2, r1, #1
   17f14:	ldrh	r2, [r0, r2]
   17f18:	tst	r2, #8192	; 0x2000
   17f1c:	bne	17f0c <_obstack_memory_used@@Base+0x34a4>
   17f20:	cmp	r1, #0
   17f24:	bne	17f40 <_obstack_memory_used@@Base+0x34d8>
   17f28:	b	18234 <_obstack_memory_used@@Base+0x37cc>
   17f2c:	ldrb	r2, [r7, #1]!
   17f30:	cmp	r2, #0
   17f34:	lsl	ip, r2, #1
   17f38:	beq	17f48 <_obstack_memory_used@@Base+0x34e0>
   17f3c:	ldrh	r2, [r0, ip]
   17f40:	tst	r2, #8
   17f44:	beq	17f2c <_obstack_memory_used@@Base+0x34c4>
   17f48:	cmp	r1, #45	; 0x2d
   17f4c:	bne	18234 <_obstack_memory_used@@Base+0x37cc>
   17f50:	ldr	r2, [r8, #12]
   17f54:	tst	r2, #8
   17f58:	bne	18150 <_obstack_memory_used@@Base+0x36e8>
   17f5c:	cmp	sl, #0
   17f60:	ldr	r2, [r5, #8]
   17f64:	ldr	r6, [r6, #8]
   17f68:	beq	181d8 <_obstack_memory_used@@Base+0x3770>
   17f6c:	mov	fp, sl
   17f70:	mov	r5, r3
   17f74:	str	r7, [sp]
   17f78:	stmib	sp, {r4, r6}
   17f7c:	mov	r4, r2
   17f80:	ldr	sl, [r5, #12]
   17f84:	mov	r0, #1
   17f88:	ands	r6, sl, #8
   17f8c:	movne	r6, #0
   17f90:	bne	17fe0 <_obstack_memory_used@@Base+0x3578>
   17f94:	ldr	r7, [r5, #4]
   17f98:	sub	ip, r7, #1
   17f9c:	cmp	ip, #254	; 0xfe
   17fa0:	bhi	17fe0 <_obstack_memory_used@@Base+0x3578>
   17fa4:	bl	11250 <__ctype_b_loc@plt>
   17fa8:	ldr	lr, [r0]
   17fac:	lsl	ip, r7, #1
   17fb0:	mov	r0, #1
   17fb4:	ldrh	ip, [lr, ip]
   17fb8:	tst	ip, #16384	; 0x4000
   17fbc:	beq	17fe0 <_obstack_memory_used@@Base+0x3578>
   17fc0:	ldrb	ip, [r4]
   17fc4:	cmp	r7, ip
   17fc8:	bne	17fe0 <_obstack_memory_used@@Base+0x3578>
   17fcc:	and	sl, sl, #2
   17fd0:	add	r4, r4, r0
   17fd4:	cmp	sl, #0
   17fd8:	moveq	r6, r7
   17fdc:	moveq	r0, #0
   17fe0:	subs	fp, fp, #1
   17fe4:	add	r5, r5, #24
   17fe8:	moveq	r0, #0
   17fec:	cmp	r0, #0
   17ff0:	bne	17f80 <_obstack_memory_used@@Base+0x3518>
   17ff4:	uxtb	r3, r6
   17ff8:	mov	fp, r6
   17ffc:	ldr	r7, [sp]
   18000:	cmp	r9, #0
   18004:	ldmib	sp, {r4, r6}
   18008:	str	r3, [sp]
   1800c:	strne	r4, [sp, #4]
   18010:	beq	183e8 <_obstack_memory_used@@Base+0x3980>
   18014:	ldr	r5, [r8, #12]
   18018:	mov	r3, #1
   1801c:	ands	sl, r5, #8
   18020:	movne	sl, #0
   18024:	bne	18074 <_obstack_memory_used@@Base+0x360c>
   18028:	ldr	r4, [r8, #4]
   1802c:	sub	r1, r4, #1
   18030:	cmp	r1, #254	; 0xfe
   18034:	bhi	18074 <_obstack_memory_used@@Base+0x360c>
   18038:	bl	11250 <__ctype_b_loc@plt>
   1803c:	ldr	r0, [r0]
   18040:	lsl	r1, r4, #1
   18044:	mov	r3, #1
   18048:	ldrh	r1, [r0, r1]
   1804c:	tst	r1, #16384	; 0x4000
   18050:	beq	18074 <_obstack_memory_used@@Base+0x360c>
   18054:	ldrb	r1, [r6]
   18058:	cmp	r4, r1
   1805c:	bne	18074 <_obstack_memory_used@@Base+0x360c>
   18060:	and	r5, r5, #2
   18064:	add	r6, r6, r3
   18068:	cmp	r5, #0
   1806c:	moveq	sl, r4
   18070:	moveq	r3, #0
   18074:	subs	r9, r9, #1
   18078:	add	r8, r8, #24
   1807c:	moveq	r3, #0
   18080:	cmp	r3, #0
   18084:	bne	18014 <_obstack_memory_used@@Base+0x35ac>
   18088:	cmp	fp, #0
   1808c:	uxtb	r6, sl
   18090:	ldr	r4, [sp, #4]
   18094:	beq	18218 <_obstack_memory_used@@Base+0x37b0>
   18098:	ldr	r3, [sp]
   1809c:	lsl	r9, r3, #2
   180a0:	cmp	sl, #0
   180a4:	beq	18204 <_obstack_memory_used@@Base+0x379c>
   180a8:	lsl	r8, r6, #2
   180ac:	bl	1122c <__ctype_tolower_loc@plt>
   180b0:	ldr	r3, [r0]
   180b4:	ldr	r1, [r3, r9]
   180b8:	ldr	r0, [r3, r8]
   180bc:	subs	ip, r1, r0
   180c0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   180c4:	ldr	r3, [sp]
   180c8:	subs	ip, r6, r3
   180cc:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   180d0:	adds	r0, sl, #0
   180d4:	movne	r0, #1
   180d8:	cmp	fp, #0
   180dc:	rsbeq	ip, r0, #0
   180e0:	rsbne	ip, r0, #1
   180e4:	cmp	ip, #0
   180e8:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   180ec:	cmp	fp, #0
   180f0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   180f4:	adds	r0, r4, #0
   180f8:	movne	r0, #1
   180fc:	cmp	r7, #0
   18100:	rsbeq	ip, r0, #0
   18104:	rsbne	ip, r0, #1
   18108:	cmp	ip, #0
   1810c:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   18110:	cmp	r7, #0
   18114:	beq	17ae8 <_obstack_memory_used@@Base+0x3080>
   18118:	mov	r1, r4
   1811c:	mov	r0, r7
   18120:	add	sp, sp, #20
   18124:	ldrd	r4, [sp]
   18128:	ldrd	r6, [sp, #8]
   1812c:	ldrd	r8, [sp, #16]
   18130:	ldrd	sl, [sp, #24]
   18134:	ldr	lr, [sp, #32]
   18138:	add	sp, sp, #36	; 0x24
   1813c:	b	111a8 <strcasecmp@plt>
   18140:	ldr	ip, [r1, #12]
   18144:	b	178f0 <_obstack_memory_used@@Base+0x2e88>
   18148:	ldr	r2, [r0, #12]
   1814c:	b	178c8 <_obstack_memory_used@@Base+0x2e60>
   18150:	cmp	r4, #0
   18154:	movne	fp, #0
   18158:	beq	17f5c <_obstack_memory_used@@Base+0x34f4>
   1815c:	str	r3, [sp]
   18160:	bl	11250 <__ctype_b_loc@plt>
   18164:	ldrb	ip, [r4]
   18168:	ldr	r1, [r0]
   1816c:	ldr	r3, [sp]
   18170:	lsl	r2, ip, #1
   18174:	ldrh	r2, [r1, r2]
   18178:	tst	r2, #8192	; 0x2000
   1817c:	beq	18194 <_obstack_memory_used@@Base+0x372c>
   18180:	ldrb	ip, [r4, #1]!
   18184:	lsl	r2, ip, #1
   18188:	ldrh	r2, [r1, r2]
   1818c:	tst	r2, #8192	; 0x2000
   18190:	bne	18180 <_obstack_memory_used@@Base+0x3718>
   18194:	cmp	ip, #0
   18198:	bne	181b4 <_obstack_memory_used@@Base+0x374c>
   1819c:	b	181bc <_obstack_memory_used@@Base+0x3754>
   181a0:	ldrb	r2, [r4, #1]!
   181a4:	cmp	r2, #0
   181a8:	lsl	r0, r2, #1
   181ac:	beq	181bc <_obstack_memory_used@@Base+0x3754>
   181b0:	ldrh	r2, [r1, r0]
   181b4:	tst	r2, #8
   181b8:	beq	181a0 <_obstack_memory_used@@Base+0x3738>
   181bc:	cmp	ip, #45	; 0x2d
   181c0:	moveq	r0, fp
   181c4:	subne	r0, fp, #1
   181c8:	cmp	r0, #0
   181cc:	movne	ip, r0
   181d0:	bne	17ae8 <_obstack_memory_used@@Base+0x3080>
   181d4:	b	17f5c <_obstack_memory_used@@Base+0x34f4>
   181d8:	cmp	r9, #0
   181dc:	movne	fp, sl
   181e0:	strne	r4, [sp, #4]
   181e4:	strne	fp, [sp]
   181e8:	bne	18014 <_obstack_memory_used@@Base+0x35ac>
   181ec:	cmp	r7, #0
   181f0:	beq	185b8 <_obstack_memory_used@@Base+0x3b50>
   181f4:	ldrb	r3, [r7]
   181f8:	mov	fp, sl
   181fc:	lsl	r9, r3, #2
   18200:	str	r3, [sp]
   18204:	cmp	r4, #0
   18208:	beq	182b8 <_obstack_memory_used@@Base+0x3850>
   1820c:	ldrb	r6, [r4]
   18210:	mov	sl, #0
   18214:	b	180a8 <_obstack_memory_used@@Base+0x3640>
   18218:	cmp	r7, #0
   1821c:	beq	182c8 <_obstack_memory_used@@Base+0x3860>
   18220:	ldrb	r3, [r7]
   18224:	mov	fp, #0
   18228:	lsl	r9, r3, #2
   1822c:	str	r3, [sp]
   18230:	b	180a0 <_obstack_memory_used@@Base+0x3638>
   18234:	ldr	r2, [r8, #12]
   18238:	tst	r2, #8
   1823c:	beq	18248 <_obstack_memory_used@@Base+0x37e0>
   18240:	cmp	r4, #0
   18244:	bne	185c0 <_obstack_memory_used@@Base+0x3b58>
   18248:	mov	ip, #1
   1824c:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18250:	ldr	lr, [r5, #4]
   18254:	ldr	r1, [r5, #8]
   18258:	ldr	r0, [r8, #8]
   1825c:	ldr	r2, [r8, #4]
   18260:	mvn	r3, r1
   18264:	lsr	r3, r3, #31
   18268:	cmp	r3, r0, lsr #31
   1826c:	subne	ip, r0, r1
   18270:	subeq	ip, r1, r0
   18274:	cmp	ip, #0
   18278:	subeq	ip, lr, r2
   1827c:	beq	17aa8 <_obstack_memory_used@@Base+0x3040>
   18280:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18284:	ldr	r2, [r5, #4]
   18288:	ldr	r1, [r6, #8]
   1828c:	ldr	r0, [r5, #8]
   18290:	ldr	lr, [r6, #4]
   18294:	mvn	r3, r1
   18298:	lsr	r3, r3, #31
   1829c:	cmp	r3, r0, lsr #31
   182a0:	subne	ip, r0, r1
   182a4:	subeq	ip, r1, r0
   182a8:	cmp	ip, #0
   182ac:	subeq	ip, lr, r2
   182b0:	beq	17c20 <_obstack_memory_used@@Base+0x31b8>
   182b4:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   182b8:	mov	sl, r4
   182bc:	mov	r8, r4
   182c0:	mov	r6, r4
   182c4:	b	180ac <_obstack_memory_used@@Base+0x3644>
   182c8:	mov	r9, r7
   182cc:	str	r7, [sp]
   182d0:	b	180a0 <_obstack_memory_used@@Base+0x3638>
   182d4:	ldr	lr, [r7, #4]
   182d8:	ldr	r1, [r7, #8]
   182dc:	ldr	r0, [r8, #8]
   182e0:	ldr	r2, [r8, #4]
   182e4:	mvn	r3, r1
   182e8:	lsr	r3, r3, #31
   182ec:	cmp	r3, r0, lsr #31
   182f0:	subne	ip, r0, r1
   182f4:	subeq	ip, r1, r0
   182f8:	cmp	ip, #0
   182fc:	subeq	ip, lr, r2
   18300:	beq	17c90 <_obstack_memory_used@@Base+0x3228>
   18304:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18308:	ldr	r2, [r4, #4]
   1830c:	ldr	r1, [r9, #8]
   18310:	ldr	r0, [r4, #8]
   18314:	ldr	lr, [r9, #4]
   18318:	mvn	r3, r1
   1831c:	lsr	r3, r3, #31
   18320:	cmp	r3, r0, lsr #31
   18324:	subne	ip, r0, r1
   18328:	subeq	ip, r1, r0
   1832c:	cmp	ip, #0
   18330:	subeq	ip, lr, r2
   18334:	beq	17ae0 <_obstack_memory_used@@Base+0x3078>
   18338:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   1833c:	ldr	r2, [r4, #4]
   18340:	ldr	r1, [r9, #8]
   18344:	ldr	r0, [r4, #8]
   18348:	ldr	lr, [r9, #4]
   1834c:	mvn	r3, r1
   18350:	lsr	r3, r3, #31
   18354:	cmp	r3, r0, lsr #31
   18358:	subne	ip, r0, r1
   1835c:	subeq	ip, r1, r0
   18360:	cmp	ip, #0
   18364:	subeq	ip, lr, r2
   18368:	beq	17c58 <_obstack_memory_used@@Base+0x31f0>
   1836c:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18370:	ldr	r2, [r6, #4]
   18374:	ldr	r1, [r7, #8]
   18378:	ldr	r0, [r6, #8]
   1837c:	ldr	lr, [r7, #4]
   18380:	mvn	r3, r1
   18384:	lsr	r3, r3, #31
   18388:	cmp	r3, r0, lsr #31
   1838c:	subne	ip, r0, r1
   18390:	subeq	ip, r1, r0
   18394:	cmp	ip, #0
   18398:	subeq	ip, lr, r2
   1839c:	beq	17a70 <_obstack_memory_used@@Base+0x3008>
   183a0:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   183a4:	mov	r7, ip
   183a8:	b	17e98 <_obstack_memory_used@@Base+0x3430>
   183ac:	mov	r4, r9
   183b0:	b	17ed4 <_obstack_memory_used@@Base+0x346c>
   183b4:	ldr	r2, [sl, #4]
   183b8:	ldr	r1, [fp, #8]
   183bc:	ldr	r0, [sl, #8]
   183c0:	ldr	lr, [fp, #4]
   183c4:	mvn	r3, r1
   183c8:	lsr	r3, r3, #31
   183cc:	cmp	r3, r0, lsr #31
   183d0:	subne	ip, r0, r1
   183d4:	subeq	ip, r1, r0
   183d8:	cmp	ip, #0
   183dc:	subeq	ip, lr, r2
   183e0:	beq	17be8 <_obstack_memory_used@@Base+0x3180>
   183e4:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   183e8:	cmp	fp, #0
   183ec:	lslne	r9, fp, #2
   183f0:	bne	18204 <_obstack_memory_used@@Base+0x379c>
   183f4:	cmp	r7, #0
   183f8:	movne	sl, fp
   183fc:	movne	r6, sl
   18400:	bne	18220 <_obstack_memory_used@@Base+0x37b8>
   18404:	str	r7, [sp]
   18408:	b	18204 <_obstack_memory_used@@Base+0x379c>
   1840c:	ldr	r2, [sl, #4]
   18410:	ldr	r1, [fp, #8]
   18414:	ldr	r0, [sl, #8]
   18418:	ldr	lr, [fp, #4]
   1841c:	mvn	r3, r1
   18420:	lsr	r3, r3, #31
   18424:	cmp	r3, r0, lsr #31
   18428:	subne	ip, r0, r1
   1842c:	subeq	ip, r1, r0
   18430:	cmp	ip, #0
   18434:	subeq	ip, lr, r2
   18438:	beq	17a38 <_obstack_memory_used@@Base+0x2fd0>
   1843c:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18440:	ldr	r0, [r3, #8]
   18444:	ldr	r1, [r2, #8]
   18448:	ldr	lr, [r2, #4]
   1844c:	ldr	r3, [r3, #4]
   18450:	mvn	r2, r1
   18454:	lsr	r2, r2, #31
   18458:	cmp	r2, r0, lsr #31
   1845c:	subne	ip, r0, r1
   18460:	subeq	ip, r1, r0
   18464:	cmp	ip, #0
   18468:	subeq	ip, lr, r3
   1846c:	beq	17bb0 <_obstack_memory_used@@Base+0x3148>
   18470:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18474:	ldr	r2, [r4, #4]
   18478:	ldr	r1, [r7, #8]
   1847c:	ldr	r0, [r4, #8]
   18480:	ldr	lr, [r7, #4]
   18484:	mvn	r3, r1
   18488:	lsr	r3, r3, #31
   1848c:	cmp	r3, r0, lsr #31
   18490:	subne	ip, r0, r1
   18494:	subeq	ip, r1, r0
   18498:	cmp	ip, #0
   1849c:	subeq	ip, lr, r2
   184a0:	beq	17e30 <_obstack_memory_used@@Base+0x33c8>
   184a4:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   184a8:	ldr	r0, [r3, #8]
   184ac:	ldr	r1, [r2, #8]
   184b0:	ldr	lr, [r2, #4]
   184b4:	ldr	r3, [r3, #4]
   184b8:	mvn	r2, r1
   184bc:	lsr	r2, r2, #31
   184c0:	cmp	r2, r0, lsr #31
   184c4:	subne	ip, r0, r1
   184c8:	subeq	ip, r1, r0
   184cc:	cmp	ip, #0
   184d0:	subeq	ip, lr, r3
   184d4:	beq	17a00 <_obstack_memory_used@@Base+0x2f98>
   184d8:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   184dc:	ldr	r2, [r8, #4]
   184e0:	ldr	r1, [r9, #8]
   184e4:	ldr	r0, [r8, #8]
   184e8:	ldr	lr, [r9, #4]
   184ec:	mvn	r3, r1
   184f0:	lsr	r3, r3, #31
   184f4:	cmp	r3, r0, lsr #31
   184f8:	subne	ip, r0, r1
   184fc:	subeq	ip, r1, r0
   18500:	cmp	ip, #0
   18504:	subeq	ip, lr, r2
   18508:	beq	17df8 <_obstack_memory_used@@Base+0x3390>
   1850c:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18510:	ldr	r2, [sl, #4]
   18514:	ldr	r1, [fp, #8]
   18518:	ldr	r0, [sl, #8]
   1851c:	ldr	lr, [fp, #4]
   18520:	mvn	r3, r1
   18524:	lsr	r3, r3, #31
   18528:	cmp	r3, r0, lsr #31
   1852c:	subne	ip, r0, r1
   18530:	subeq	ip, r1, r0
   18534:	cmp	ip, #0
   18538:	subeq	ip, lr, r2
   1853c:	beq	17dc0 <_obstack_memory_used@@Base+0x3358>
   18540:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   18544:	ldr	ip, [sp]
   18548:	ldr	r2, [r3, #4]
   1854c:	ldr	r1, [r3, #8]
   18550:	ldr	lr, [ip, #4]
   18554:	ldr	r0, [ip, #8]
   18558:	mvn	r3, r1
   1855c:	lsr	r3, r3, #31
   18560:	cmp	r3, r0, lsr #31
   18564:	subne	ip, r0, r1
   18568:	subeq	ip, r1, r0
   1856c:	cmp	ip, #0
   18570:	subeq	ip, r2, lr
   18574:	beq	17d88 <_obstack_memory_used@@Base+0x3320>
   18578:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   1857c:	ldr	r0, [sp, #4]
   18580:	ldr	lr, [r2, #4]
   18584:	ldr	r1, [r2, #8]
   18588:	ldr	r2, [sp, #4]
   1858c:	ldr	r0, [r0, #8]
   18590:	mvn	ip, r1
   18594:	lsr	ip, ip, #31
   18598:	ldr	r2, [r2, #4]
   1859c:	cmp	ip, r0, lsr #31
   185a0:	subne	ip, r0, r1
   185a4:	subeq	ip, r1, r0
   185a8:	cmp	ip, #0
   185ac:	subeq	ip, lr, r2
   185b0:	beq	17d48 <_obstack_memory_used@@Base+0x32e0>
   185b4:	b	17ae8 <_obstack_memory_used@@Base+0x3080>
   185b8:	mov	fp, r7
   185bc:	b	18404 <_obstack_memory_used@@Base+0x399c>
   185c0:	mov	fp, #1
   185c4:	b	1815c <_obstack_memory_used@@Base+0x36f4>

000185c8 <argp_failure@@Base>:
   185c8:	push	{r3}		; (str r3, [sp, #-4]!)
   185cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   185d0:	subs	r5, r0, #0
   185d4:	strd	r6, [sp, #8]
   185d8:	mov	r7, r1
   185dc:	mov	r6, r2
   185e0:	str	lr, [sp, #16]
   185e4:	sub	sp, sp, #200	; 0xc8
   185e8:	beq	18744 <argp_failure@@Base+0x17c>
   185ec:	ldr	r3, [r5, #16]
   185f0:	tst	r3, #2
   185f4:	bne	18728 <argp_failure@@Base+0x160>
   185f8:	ldr	r4, [r5, #44]	; 0x2c
   185fc:	cmp	r4, #0
   18600:	beq	18728 <argp_failure@@Base+0x160>
   18604:	mov	r0, r4
   18608:	bl	1131c <flockfile@plt>
   1860c:	ldr	r0, [r5, #40]	; 0x28
   18610:	mov	r1, r4
   18614:	bl	110d0 <fputs_unlocked@plt>
   18618:	ldr	r3, [sp, #220]	; 0xdc
   1861c:	cmp	r3, #0
   18620:	beq	1867c <argp_failure@@Base+0xb4>
   18624:	ldr	r3, [r4, #20]
   18628:	add	r1, sp, #224	; 0xe0
   1862c:	ldr	r2, [r4, #24]
   18630:	str	r1, [sp]
   18634:	cmp	r3, r2
   18638:	addcc	r1, r3, #1
   1863c:	movcc	r2, #58	; 0x3a
   18640:	strcc	r1, [r4, #20]
   18644:	strbcc	r2, [r3]
   18648:	bcs	187b4 <argp_failure@@Base+0x1ec>
   1864c:	ldr	r3, [r4, #20]
   18650:	ldr	r2, [r4, #24]
   18654:	cmp	r3, r2
   18658:	addcc	r1, r3, #1
   1865c:	movcc	r2, #32
   18660:	strcc	r1, [r4, #20]
   18664:	strbcc	r2, [r3]
   18668:	bcs	187a4 <argp_failure@@Base+0x1dc>
   1866c:	mov	r0, r4
   18670:	ldr	r2, [sp]
   18674:	ldr	r1, [sp, #220]	; 0xdc
   18678:	bl	112ec <vfprintf@plt>
   1867c:	cmp	r6, #0
   18680:	ldr	r3, [r4, #20]
   18684:	ldr	r2, [r4, #24]
   18688:	beq	186ec <argp_failure@@Base+0x124>
   1868c:	cmp	r2, r3
   18690:	addhi	r1, r3, #1
   18694:	movhi	r2, #58	; 0x3a
   18698:	strhi	r1, [r4, #20]
   1869c:	strbhi	r2, [r3]
   186a0:	bls	187d4 <argp_failure@@Base+0x20c>
   186a4:	ldr	r3, [r4, #20]
   186a8:	ldr	r2, [r4, #24]
   186ac:	cmp	r3, r2
   186b0:	addcc	r1, r3, #1
   186b4:	movcc	r2, #32
   186b8:	strcc	r1, [r4, #20]
   186bc:	strbcc	r2, [r3]
   186c0:	bcs	187c4 <argp_failure@@Base+0x1fc>
   186c4:	mov	r2, #200	; 0xc8
   186c8:	mov	r1, sp
   186cc:	mov	r0, r6
   186d0:	bl	112a4 <strerror_r@plt>
   186d4:	cmp	r0, #0
   186d8:	beq	18788 <argp_failure@@Base+0x1c0>
   186dc:	mov	r1, r4
   186e0:	bl	110d0 <fputs_unlocked@plt>
   186e4:	ldr	r3, [r4, #20]
   186e8:	ldr	r2, [r4, #24]
   186ec:	cmp	r3, r2
   186f0:	addcc	r1, r3, #1
   186f4:	movcc	r2, #10
   186f8:	strcc	r1, [r4, #20]
   186fc:	strbcc	r2, [r3]
   18700:	bcs	18778 <argp_failure@@Base+0x1b0>
   18704:	mov	r0, r4
   18708:	bl	111b4 <funlockfile@plt>
   1870c:	cmp	r7, #0
   18710:	beq	18728 <argp_failure@@Base+0x160>
   18714:	cmp	r5, #0
   18718:	beq	18770 <argp_failure@@Base+0x1a8>
   1871c:	ldr	r3, [r5, #16]
   18720:	tst	r3, #32
   18724:	beq	18770 <argp_failure@@Base+0x1a8>
   18728:	add	sp, sp, #200	; 0xc8
   1872c:	ldrd	r4, [sp]
   18730:	ldrd	r6, [sp, #8]
   18734:	ldr	lr, [sp, #16]
   18738:	add	sp, sp, #20
   1873c:	add	sp, sp, #4
   18740:	bx	lr
   18744:	movw	r3, #10424	; 0x28b8
   18748:	movt	r3, #3
   1874c:	ldr	r4, [r3]
   18750:	cmp	r4, #0
   18754:	beq	18728 <argp_failure@@Base+0x160>
   18758:	mov	r0, r4
   1875c:	bl	1131c <flockfile@plt>
   18760:	movw	r3, #10416	; 0x28b0
   18764:	movt	r3, #3
   18768:	ldr	r0, [r3]
   1876c:	b	18610 <argp_failure@@Base+0x48>
   18770:	mov	r0, r7
   18774:	bl	1125c <exit@plt>
   18778:	mov	r1, #10
   1877c:	mov	r0, r4
   18780:	bl	112d4 <__overflow@plt>
   18784:	b	18704 <argp_failure@@Base+0x13c>
   18788:	mov	r0, r6
   1878c:	bl	11220 <strerror@plt>
   18790:	cmp	r0, #0
   18794:	movw	r3, #57844	; 0xe1f4
   18798:	movt	r3, #1
   1879c:	moveq	r0, r3
   187a0:	b	186dc <argp_failure@@Base+0x114>
   187a4:	mov	r1, #32
   187a8:	mov	r0, r4
   187ac:	bl	112d4 <__overflow@plt>
   187b0:	b	1866c <argp_failure@@Base+0xa4>
   187b4:	mov	r1, #58	; 0x3a
   187b8:	mov	r0, r4
   187bc:	bl	112d4 <__overflow@plt>
   187c0:	b	1864c <argp_failure@@Base+0x84>
   187c4:	mov	r1, #32
   187c8:	mov	r0, r4
   187cc:	bl	112d4 <__overflow@plt>
   187d0:	b	186c4 <argp_failure@@Base+0xfc>
   187d4:	mov	r1, #58	; 0x3a
   187d8:	mov	r0, r4
   187dc:	bl	112d4 <__overflow@plt>
   187e0:	b	186a4 <argp_failure@@Base+0xdc>
   187e4:	cmp	r2, #0
   187e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   187ec:	strd	r6, [sp, #8]
   187f0:	strd	r8, [sp, #16]
   187f4:	strd	sl, [sp, #24]
   187f8:	add	fp, sp, #32
   187fc:	str	lr, [sp, #32]
   18800:	sub	sp, sp, #124	; 0x7c
   18804:	str	r2, [fp, #-132]	; 0xffffff7c
   18808:	str	r0, [fp, #-108]	; 0xffffff94
   1880c:	str	r3, [fp, #-104]	; 0xffffff98
   18810:	str	r1, [fp, #-100]	; 0xffffff9c
   18814:	beq	18cc8 <argp_failure@@Base+0x700>
   18818:	mov	r0, r2
   1881c:	movw	r9, #10356	; 0x2874
   18820:	movt	r9, #3
   18824:	bl	1131c <flockfile@plt>
   18828:	ldr	r3, [r9, #36]	; 0x24
   1882c:	cmp	r3, #0
   18830:	beq	18ce4 <argp_failure@@Base+0x71c>
   18834:	mov	r3, #0
   18838:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1883c:	mov	r1, r3
   18840:	ldr	r2, [r9, #32]
   18844:	bl	1b410 <argp_error@@Base+0x1550>
   18848:	subs	r7, r0, #0
   1884c:	beq	19b40 <argp_failure@@Base+0x1578>
   18850:	ldr	r3, [fp, #-104]	; 0xffffff98
   18854:	ands	r3, r3, #11
   18858:	streq	r3, [fp, #-112]	; 0xffffff90
   1885c:	bne	19070 <argp_failure@@Base+0xaa8>
   18860:	ldr	r3, [fp, #-104]	; 0xffffff98
   18864:	ands	r4, r3, #3
   18868:	bne	18eb4 <argp_failure@@Base+0x8ec>
   1886c:	ldr	r3, [fp, #-104]	; 0xffffff98
   18870:	tst	r3, #16
   18874:	bne	18e80 <argp_failure@@Base+0x8b8>
   18878:	ldr	r3, [fp, #-104]	; 0xffffff98
   1887c:	tst	r3, #4
   18880:	and	r5, r3, #8
   18884:	bne	18df8 <argp_failure@@Base+0x830>
   18888:	cmp	r5, #0
   1888c:	beq	18c34 <argp_failure@@Base+0x66c>
   18890:	ldr	r3, [fp, #-112]	; 0xffffff90
   18894:	ldr	r3, [r3, #4]
   18898:	cmp	r3, #0
   1889c:	str	r3, [fp, #-116]	; 0xffffff8c
   188a0:	beq	18c34 <argp_failure@@Base+0x66c>
   188a4:	cmp	r4, #0
   188a8:	bne	18e28 <argp_failure@@Base+0x860>
   188ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   188b0:	ldr	r3, [r3]
   188b4:	str	r4, [fp, #-88]	; 0xffffffa8
   188b8:	str	r4, [fp, #-84]	; 0xffffffac
   188bc:	str	r4, [fp, #-80]	; 0xffffffb0
   188c0:	mov	r0, r3
   188c4:	movw	r3, #56192	; 0xdb80
   188c8:	movt	r3, #1
   188cc:	ldr	r2, [r7, #16]
   188d0:	str	r3, [fp, #-140]	; 0xffffff74
   188d4:	movw	r3, #58276	; 0xe3a4
   188d8:	movt	r3, #1
   188dc:	ldr	r1, [r7, #24]
   188e0:	str	r3, [fp, #-144]	; 0xffffff70
   188e4:	ldr	r3, [r7, #28]
   188e8:	str	r9, [fp, #-96]	; 0xffffffa0
   188ec:	mov	r9, r0
   188f0:	sub	r3, r3, r1
   188f4:	ldr	r4, [r9]
   188f8:	cmp	r3, r2
   188fc:	ldr	r8, [r9, #8]
   18900:	bhi	195c4 <argp_failure@@Base+0xffc>
   18904:	mov	r1, #1
   18908:	ldr	r0, [r7, #4]
   1890c:	ldr	r6, [r4, #12]
   18910:	str	r0, [fp, #-120]	; 0xffffff88
   18914:	mov	r0, #0
   18918:	str	r0, [r7, #4]
   1891c:	ldr	r0, [r7, #12]
   18920:	str	r1, [fp, #-64]	; 0xffffffc0
   18924:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18928:	str	r0, [fp, #-124]	; 0xffffff84
   1892c:	ands	r0, r6, #8
   18930:	str	r9, [fp, #-76]	; 0xffffffb4
   18934:	str	r0, [fp, #-128]	; 0xffffff80
   18938:	sub	r0, fp, #88	; 0x58
   1893c:	str	r7, [fp, #-72]	; 0xffffffb8
   18940:	str	r1, [fp, #-60]	; 0xffffffc4
   18944:	movne	r1, #0
   18948:	str	r0, [fp, #-68]	; 0xffffffbc
   1894c:	strne	r1, [fp, #-128]	; 0xffffff80
   18950:	bne	18988 <argp_failure@@Base+0x3c0>
   18954:	ldr	r0, [r9, #4]
   18958:	cmp	r0, #0
   1895c:	beq	18988 <argp_failure@@Base+0x3c0>
   18960:	add	r1, r4, #24
   18964:	ldr	ip, [r1, #-24]	; 0xffffffe8
   18968:	cmp	ip, #0
   1896c:	beq	1897c <argp_failure@@Base+0x3b4>
   18970:	ldr	ip, [r1, #-12]
   18974:	tst	ip, #2
   18978:	beq	196f4 <argp_failure@@Base+0x112c>
   1897c:	subs	r0, r0, #1
   18980:	add	r1, r1, #24
   18984:	bne	18964 <argp_failure@@Base+0x39c>
   18988:	cmp	r3, r2
   1898c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18990:	ldr	r5, [r3, #8]
   18994:	bhi	195b8 <argp_failure@@Base+0xff0>
   18998:	str	r5, [r7, #12]
   1899c:	ldr	sl, [r9, #4]
   189a0:	cmp	sl, #0
   189a4:	beq	18a14 <argp_failure@@Base+0x44c>
   189a8:	mov	r5, r4
   189ac:	str	r9, [fp, #-136]	; 0xffffff78
   189b0:	mov	r9, r7
   189b4:	mov	r7, r4
   189b8:	mov	r4, r8
   189bc:	ldr	r8, [r5, #12]
   189c0:	tst	r8, #8
   189c4:	bne	189fc <argp_failure@@Base+0x434>
   189c8:	ldr	r6, [r5, #4]
   189cc:	sub	r2, r6, #1
   189d0:	cmp	r2, #254	; 0xfe
   189d4:	bhi	189fc <argp_failure@@Base+0x434>
   189d8:	bl	11250 <__ctype_b_loc@plt>
   189dc:	ldr	r1, [r0]
   189e0:	lsl	r2, r6, #1
   189e4:	ldrh	r2, [r1, r2]
   189e8:	tst	r2, #16384	; 0x4000
   189ec:	beq	189fc <argp_failure@@Base+0x434>
   189f0:	ldrb	r2, [r4]
   189f4:	cmp	r6, r2
   189f8:	beq	191c8 <argp_failure@@Base+0xc00>
   189fc:	subs	sl, sl, #1
   18a00:	add	r5, r5, #24
   18a04:	bne	189bc <argp_failure@@Base+0x3f4>
   18a08:	mov	r4, r7
   18a0c:	mov	r7, r9
   18a10:	ldr	r9, [fp, #-136]	; 0xffffff78
   18a14:	ldr	r2, [r4, #12]
   18a18:	ldr	r1, [r7, #24]
   18a1c:	ldr	r3, [r7, #28]
   18a20:	tst	r2, #8
   18a24:	ldr	r2, [r7, #16]
   18a28:	sub	r3, r3, r1
   18a2c:	beq	191d8 <argp_failure@@Base+0xc10>
   18a30:	cmp	r3, r2
   18a34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18a38:	ldr	r5, [r3, #16]
   18a3c:	bhi	19758 <argp_failure@@Base+0x1190>
   18a40:	str	r5, [r7, #12]
   18a44:	ldr	r6, [r9, #4]
   18a48:	cmp	r6, #0
   18a4c:	addne	r5, r4, #24
   18a50:	bne	18a64 <argp_failure@@Base+0x49c>
   18a54:	b	18af4 <argp_failure@@Base+0x52c>
   18a58:	subs	r6, r6, #1
   18a5c:	add	r5, r5, #24
   18a60:	beq	18af4 <argp_failure@@Base+0x52c>
   18a64:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18a68:	cmp	r3, #0
   18a6c:	beq	18a58 <argp_failure@@Base+0x490>
   18a70:	ldr	r3, [r5, #-12]
   18a74:	tst	r3, #2
   18a78:	bne	18a58 <argp_failure@@Base+0x490>
   18a7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18a80:	sub	r1, fp, #76	; 0x4c
   18a84:	ldr	r0, [r3, #16]
   18a88:	bl	17068 <_obstack_memory_used@@Base+0x2600>
   18a8c:	ldr	sl, [r5, #-24]	; 0xffffffe8
   18a90:	mov	r0, sl
   18a94:	bl	11268 <strlen@plt>
   18a98:	subs	r8, r0, #0
   18a9c:	beq	18a58 <argp_failure@@Base+0x490>
   18aa0:	ldr	ip, [r7, #28]
   18aa4:	mov	r1, r8
   18aa8:	mov	r0, r7
   18aac:	ldr	lr, [r7, #32]
   18ab0:	add	r2, ip, r8
   18ab4:	cmp	lr, r2
   18ab8:	bcs	18acc <argp_failure@@Base+0x504>
   18abc:	bl	1bb38 <argp_error@@Base+0x1c78>
   18ac0:	cmp	r0, #0
   18ac4:	beq	18a58 <argp_failure@@Base+0x490>
   18ac8:	ldr	ip, [r7, #28]
   18acc:	mov	r2, r8
   18ad0:	mov	r1, sl
   18ad4:	mov	r0, ip
   18ad8:	add	r5, r5, #24
   18adc:	bl	11160 <memcpy@plt>
   18ae0:	ldr	r2, [r7, #28]
   18ae4:	subs	r6, r6, #1
   18ae8:	add	r3, r2, r8
   18aec:	str	r3, [r7, #28]
   18af0:	bne	18a64 <argp_failure@@Base+0x49c>
   18af4:	ldr	r2, [r7, #16]
   18af8:	ldr	r1, [r7, #24]
   18afc:	ldr	r3, [r7, #28]
   18b00:	sub	r3, r3, r1
   18b04:	cmp	r3, r2
   18b08:	bhi	195ac <argp_failure@@Base+0xfe4>
   18b0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18b10:	mov	r2, #0
   18b14:	str	r2, [r7, #4]
   18b18:	cmp	r3, r2
   18b1c:	beq	1928c <argp_failure@@Base+0xcc4>
   18b20:	ldr	r3, [r4, #12]
   18b24:	tst	r3, #8
   18b28:	bne	18b54 <argp_failure@@Base+0x58c>
   18b2c:	ldr	r5, [r4, #4]
   18b30:	sub	r3, r5, #1
   18b34:	cmp	r3, #254	; 0xfe
   18b38:	bhi	18b54 <argp_failure@@Base+0x58c>
   18b3c:	bl	11250 <__ctype_b_loc@plt>
   18b40:	ldr	r3, [r0]
   18b44:	lsl	r5, r5, #1
   18b48:	ldrh	r3, [r3, r5]
   18b4c:	tst	r3, #16384	; 0x4000
   18b50:	bne	18b60 <argp_failure@@Base+0x598>
   18b54:	ldr	r3, [r4]
   18b58:	cmp	r3, #0
   18b5c:	beq	1988c <argp_failure@@Base+0x12c4>
   18b60:	ldr	r2, [r7, #16]
   18b64:	ldr	r1, [r7, #24]
   18b68:	ldr	r3, [r7, #28]
   18b6c:	sub	r0, r3, r1
   18b70:	cmp	r0, r2
   18b74:	bhi	195e0 <argp_failure@@Base+0x1018>
   18b78:	ldr	r0, [fp, #-120]	; 0xffffff88
   18b7c:	str	r0, [r7, #4]
   18b80:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18b84:	add	r9, r9, #28
   18b88:	subs	r0, r0, #1
   18b8c:	str	r0, [fp, #-116]	; 0xffffff8c
   18b90:	ldr	r0, [fp, #-124]	; 0xffffff84
   18b94:	str	r0, [r7, #12]
   18b98:	bne	188f0 <argp_failure@@Base+0x328>
   18b9c:	ldr	r9, [fp, #-96]	; 0xffffffa0
   18ba0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18ba4:	cmp	r3, #0
   18ba8:	beq	18c30 <argp_failure@@Base+0x668>
   18bac:	ldr	r3, [r9, #4]
   18bb0:	cmp	r3, #0
   18bb4:	beq	18c30 <argp_failure@@Base+0x668>
   18bb8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18bbc:	cmp	r1, #0
   18bc0:	beq	19c68 <argp_failure@@Base+0x16a0>
   18bc4:	ldr	r5, [r1]
   18bc8:	cmp	r5, #0
   18bcc:	beq	19d58 <argp_failure@@Base+0x1790>
   18bd0:	ldr	r4, [r5, #20]
   18bd4:	cmp	r4, #0
   18bd8:	beq	19cf8 <argp_failure@@Base+0x1730>
   18bdc:	mov	r0, r5
   18be0:	movw	r4, #57868	; 0xe20c
   18be4:	movt	r4, #1
   18be8:	bl	14378 <argp_parse@@Base+0xeb8>
   18bec:	mov	r2, r0
   18bf0:	mov	r1, r4
   18bf4:	ldr	r3, [r5, #20]
   18bf8:	mov	r0, #5
   18bfc:	movt	r0, #512	; 0x200
   18c00:	blx	r3
   18c04:	subs	r5, r0, #0
   18c08:	beq	18c30 <argp_failure@@Base+0x668>
   18c0c:	ldrb	r3, [r5]
   18c10:	subs	r4, r5, r4
   18c14:	movne	r4, #1
   18c18:	cmp	r3, #0
   18c1c:	bne	19c74 <argp_failure@@Base+0x16ac>
   18c20:	cmp	r4, #0
   18c24:	beq	18c30 <argp_failure@@Base+0x668>
   18c28:	mov	r0, r5
   18c2c:	bl	144f8 <argp_parse@@Base+0x1038>
   18c30:	mov	r4, #1
   18c34:	ldr	r3, [fp, #-104]	; 0xffffff98
   18c38:	tst	r3, #32
   18c3c:	bne	19164 <argp_failure@@Base+0xb9c>
   18c40:	ldr	r3, [fp, #-104]	; 0xffffff98
   18c44:	tst	r3, #64	; 0x40
   18c48:	beq	18c78 <argp_failure@@Base+0x6b0>
   18c4c:	movw	r5, #10556	; 0x293c
   18c50:	movt	r5, #3
   18c54:	ldr	r2, [r5]
   18c58:	cmp	r2, #0
   18c5c:	beq	18c78 <argp_failure@@Base+0x6b0>
   18c60:	cmp	r4, #0
   18c64:	bne	191a0 <argp_failure@@Base+0xbd8>
   18c68:	movw	r1, #58308	; 0xe3c4
   18c6c:	movt	r1, #1
   18c70:	mov	r0, r7
   18c74:	bl	1bb58 <argp_error@@Base+0x1c98>
   18c78:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18c7c:	bl	111b4 <funlockfile@plt>
   18c80:	ldr	r3, [fp, #-112]	; 0xffffff90
   18c84:	cmp	r3, #0
   18c88:	beq	18cc0 <argp_failure@@Base+0x6f8>
   18c8c:	ldr	r0, [r3, #12]
   18c90:	cmp	r0, #0
   18c94:	beq	18ca8 <argp_failure@@Base+0x6e0>
   18c98:	ldr	r4, [r0, #24]
   18c9c:	bl	144f8 <argp_parse@@Base+0x1038>
   18ca0:	subs	r0, r4, #0
   18ca4:	bne	18c98 <argp_failure@@Base+0x6d0>
   18ca8:	ldr	r3, [fp, #-112]	; 0xffffff90
   18cac:	ldr	r3, [r3, #4]
   18cb0:	cmp	r3, #0
   18cb4:	bne	199f8 <argp_failure@@Base+0x1430>
   18cb8:	ldr	r0, [fp, #-112]	; 0xffffff90
   18cbc:	bl	144f8 <argp_parse@@Base+0x1038>
   18cc0:	mov	r0, r7
   18cc4:	bl	1ba08 <argp_error@@Base+0x1b48>
   18cc8:	sub	sp, fp, #32
   18ccc:	ldrd	r4, [sp]
   18cd0:	ldrd	r6, [sp, #8]
   18cd4:	ldrd	r8, [sp, #16]
   18cd8:	ldrd	sl, [sp, #24]
   18cdc:	add	sp, sp, #32
   18ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ce4:	movw	r0, #57984	; 0xe280
   18ce8:	movt	r0, #1
   18cec:	bl	111f0 <getenv@plt>
   18cf0:	subs	r8, r0, #0
   18cf4:	ldrd	r2, [r9]
   18cf8:	sub	sl, fp, #76	; 0x4c
   18cfc:	ldrd	r0, [r9, #8]
   18d00:	ldrd	r4, [r9, #16]
   18d04:	strd	r2, [fp, #-76]	; 0xffffffb4
   18d08:	ldrd	r2, [r9, #24]
   18d0c:	strd	r0, [sl, #8]
   18d10:	ldrd	r0, [r9, #32]
   18d14:	strd	r4, [sl, #16]
   18d18:	strd	r2, [sl, #24]
   18d1c:	strd	r0, [sl, #32]
   18d20:	beq	18834 <argp_failure@@Base+0x26c>
   18d24:	ldrb	r6, [r8]
   18d28:	cmp	r6, #0
   18d2c:	beq	18d78 <argp_failure@@Base+0x7b0>
   18d30:	bl	11250 <__ctype_b_loc@plt>
   18d34:	mov	r3, r0
   18d38:	mov	r0, r6
   18d3c:	mov	r6, r3
   18d40:	ldr	r1, [r6]
   18d44:	lsl	r3, r0, #1
   18d48:	ldrh	r3, [r1, r3]
   18d4c:	tst	r3, #8192	; 0x2000
   18d50:	beq	18d68 <argp_failure@@Base+0x7a0>
   18d54:	ldrb	r0, [r8, #1]!
   18d58:	lsl	r3, r0, #1
   18d5c:	ldrh	r3, [r1, r3]
   18d60:	tst	r3, #8192	; 0x2000
   18d64:	bne	18d54 <argp_failure@@Base+0x78c>
   18d68:	ands	r2, r3, #1024	; 0x400
   18d6c:	bne	19430 <argp_failure@@Base+0xe68>
   18d70:	cmp	r0, #0
   18d74:	bne	19b4c <argp_failure@@Base+0x1584>
   18d78:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18d7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18d80:	cmp	r3, r2
   18d84:	ble	19d04 <argp_failure@@Base+0x173c>
   18d88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18d8c:	cmp	r3, r2
   18d90:	ble	19d30 <argp_failure@@Base+0x1768>
   18d94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18d98:	cmp	r3, r2
   18d9c:	ble	19d38 <argp_failure@@Base+0x1770>
   18da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18da4:	cmp	r3, r2
   18da8:	ble	19d40 <argp_failure@@Base+0x1778>
   18dac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18db0:	cmp	r3, r2
   18db4:	ble	19d48 <argp_failure@@Base+0x1780>
   18db8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18dbc:	cmp	r3, r2
   18dc0:	ble	19d50 <argp_failure@@Base+0x1788>
   18dc4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   18dc8:	mov	ip, #1
   18dcc:	ldrd	r4, [sl, #8]
   18dd0:	ldrd	r2, [sl, #32]
   18dd4:	strd	r0, [r9]
   18dd8:	ldrd	r0, [sl, #24]
   18ddc:	strd	r4, [r9, #8]
   18de0:	strd	r2, [r9, #32]
   18de4:	ldrd	r2, [sl, #16]
   18de8:	strd	r2, [r9, #16]
   18dec:	strd	r0, [r9, #24]
   18df0:	str	ip, [r9, #36]	; 0x24
   18df4:	b	18834 <argp_failure@@Base+0x26c>
   18df8:	ldr	r3, [fp, #4]
   18dfc:	movw	r1, #58220	; 0xe36c
   18e00:	movt	r1, #1
   18e04:	mov	r0, r7
   18e08:	mov	r2, r3
   18e0c:	bl	1bb58 <argp_error@@Base+0x1c98>
   18e10:	cmp	r5, #0
   18e14:	beq	18c30 <argp_failure@@Base+0x668>
   18e18:	ldr	r3, [fp, #-112]	; 0xffffff90
   18e1c:	ldr	r3, [r3, #4]
   18e20:	cmp	r3, #0
   18e24:	beq	18c30 <argp_failure@@Base+0x668>
   18e28:	ldr	r3, [r7, #28]
   18e2c:	ldr	r2, [r7, #32]
   18e30:	cmp	r3, r2
   18e34:	bcs	19ba0 <argp_failure@@Base+0x15d8>
   18e38:	add	r1, r3, #1
   18e3c:	mov	r2, #10
   18e40:	str	r1, [r7, #28]
   18e44:	strb	r2, [r3]
   18e48:	ldr	r3, [fp, #-112]	; 0xffffff90
   18e4c:	ldr	r3, [r3, #4]
   18e50:	mov	r2, r3
   18e54:	str	r3, [fp, #-116]	; 0xffffff8c
   18e58:	mov	r3, #0
   18e5c:	cmp	r2, r3
   18e60:	ldr	r2, [fp, #-112]	; 0xffffff90
   18e64:	ldr	r2, [r2]
   18e68:	str	r3, [fp, #-88]	; 0xffffffa8
   18e6c:	str	r3, [fp, #-84]	; 0xffffffac
   18e70:	str	r3, [fp, #-80]	; 0xffffffb0
   18e74:	mov	r0, r2
   18e78:	bne	188c4 <argp_failure@@Base+0x2fc>
   18e7c:	b	18c30 <argp_failure@@Base+0x668>
   18e80:	mov	r0, #1
   18e84:	mov	r3, #0
   18e88:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18e8c:	mov	r2, r3
   18e90:	stm	sp, {r0, r7}
   18e94:	ldr	r0, [fp, #-108]	; 0xffffff94
   18e98:	bl	172b4 <_obstack_memory_used@@Base+0x284c>
   18e9c:	ldr	r3, [fp, #-104]	; 0xffffff98
   18ea0:	orr	r4, r4, r0
   18ea4:	tst	r3, #4
   18ea8:	and	r5, r3, #8
   18eac:	beq	18888 <argp_failure@@Base+0x2c0>
   18eb0:	b	18df8 <argp_failure@@Base+0x830>
   18eb4:	ldr	r3, [fp, #-108]	; 0xffffff94
   18eb8:	ldr	r0, [r3, #8]
   18ebc:	ldr	r5, [r3, #16]
   18ec0:	cmp	r0, #0
   18ec4:	moveq	r4, r0
   18ec8:	beq	18edc <argp_failure@@Base+0x914>
   18ecc:	mov	r1, #10
   18ed0:	bl	11274 <strchr@plt>
   18ed4:	adds	r4, r0, #0
   18ed8:	movne	r4, #1
   18edc:	cmp	r5, #0
   18ee0:	beq	18f0c <argp_failure@@Base+0x944>
   18ee4:	ldr	r3, [r5]
   18ee8:	cmp	r3, #0
   18eec:	beq	18f0c <argp_failure@@Base+0x944>
   18ef0:	ldr	r0, [r3, #8]
   18ef4:	ldr	r1, [r3, #16]
   18ef8:	bl	15ea4 <_obstack_memory_used@@Base+0x143c>
   18efc:	ldr	r3, [r5, #16]!
   18f00:	add	r4, r4, r0
   18f04:	cmp	r3, #0
   18f08:	bne	18ef0 <argp_failure@@Base+0x928>
   18f0c:	add	r3, r4, #7
   18f10:	sub	sl, fp, #76	; 0x4c
   18f14:	bic	r3, r3, #7
   18f18:	movw	r8, #58188	; 0xe34c
   18f1c:	movt	r8, #1
   18f20:	sub	sp, sp, r3
   18f24:	movw	r3, #58196	; 0xe354
   18f28:	movt	r3, #1
   18f2c:	mov	r2, r4
   18f30:	mov	r1, #0
   18f34:	str	r3, [fp, #-124]	; 0xffffff84
   18f38:	add	r3, sp, #8
   18f3c:	mov	r4, #1
   18f40:	mov	r0, r3
   18f44:	str	r3, [fp, #-96]	; 0xffffffa0
   18f48:	movw	r3, #58180	; 0xe344
   18f4c:	movt	r3, #1
   18f50:	str	r3, [fp, #-128]	; 0xffffff80
   18f54:	bl	112b0 <memset@plt>
   18f58:	str	r8, [fp, #-120]	; 0xffffff88
   18f5c:	str	sl, [fp, #-116]	; 0xffffff8c
   18f60:	ldr	sl, [fp, #-112]	; 0xffffff90
   18f64:	ldr	r8, [fp, #-104]	; 0xffffff98
   18f68:	b	19048 <argp_failure@@Base+0xa80>
   18f6c:	cmp	r4, #0
   18f70:	mov	r0, r7
   18f74:	ldr	r1, [fp, #-120]	; 0xffffff88
   18f78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18f7c:	ldrne	r2, [fp, #-128]	; 0xffffff80
   18f80:	ldreq	r2, [fp, #-124]	; 0xffffff84
   18f84:	ldr	r4, [r7, #12]
   18f88:	str	r5, [r7, #12]
   18f8c:	str	r3, [fp, #-76]	; 0xffffffb4
   18f90:	ldr	r3, [fp, #4]
   18f94:	bl	1bb58 <argp_error@@Base+0x1c98>
   18f98:	ldr	r2, [r7, #16]
   18f9c:	ldr	r1, [r7, #24]
   18fa0:	ldr	r3, [r7, #28]
   18fa4:	ldr	r5, [r9, #28]
   18fa8:	sub	r3, r3, r1
   18fac:	cmp	r3, r2
   18fb0:	bhi	19158 <argp_failure@@Base+0xb90>
   18fb4:	tst	r8, #2
   18fb8:	ldr	r6, [r7, #4]
   18fbc:	str	r5, [r7, #4]
   18fc0:	beq	19144 <argp_failure@@Base+0xb7c>
   18fc4:	ldr	r3, [sl, #4]
   18fc8:	cmp	r3, #0
   18fcc:	bne	19930 <argp_failure@@Base+0x1368>
   18fd0:	mov	r3, #1
   18fd4:	str	r7, [sp]
   18fd8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18fdc:	ldr	r0, [fp, #-108]	; 0xffffff94
   18fe0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18fe4:	bl	1660c <_obstack_memory_used@@Base+0x1ba4>
   18fe8:	ldr	r1, [r7, #16]
   18fec:	mov	r5, r0
   18ff0:	ldrd	r2, [r7, #24]
   18ff4:	sub	r2, r3, r2
   18ff8:	cmp	r2, r1
   18ffc:	strls	r4, [r7, #12]
   19000:	bhi	19114 <argp_failure@@Base+0xb4c>
   19004:	ldr	r2, [r7, #32]
   19008:	str	r6, [r7, #4]
   1900c:	cmp	r2, r3
   19010:	bhi	1902c <argp_failure@@Base+0xa64>
   19014:	mov	r1, #1
   19018:	mov	r0, r7
   1901c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19020:	cmp	r0, #0
   19024:	beq	1903c <argp_failure@@Base+0xa74>
   19028:	ldr	r3, [r7, #28]
   1902c:	add	r1, r3, #1
   19030:	mov	r2, #10
   19034:	str	r1, [r7, #28]
   19038:	strb	r2, [r3]
   1903c:	cmp	r5, #0
   19040:	mov	r4, #0
   19044:	beq	19188 <argp_failure@@Base+0xbc0>
   19048:	ldr	r2, [r7, #16]
   1904c:	ldr	r1, [r7, #24]
   19050:	ldr	r3, [r7, #28]
   19054:	ldr	r5, [r9, #28]
   19058:	sub	r3, r3, r1
   1905c:	cmp	r3, r2
   19060:	bls	18f6c <argp_failure@@Base+0x9a4>
   19064:	mov	r0, r7
   19068:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1906c:	b	18f6c <argp_failure@@Base+0x9a4>
   19070:	mov	r1, #0
   19074:	ldr	r0, [fp, #-108]	; 0xffffff94
   19078:	bl	15f10 <_obstack_memory_used@@Base+0x14a8>
   1907c:	ldr	r5, [r0]
   19080:	mov	r3, r0
   19084:	ldr	r2, [r0, #4]
   19088:	cmp	r2, #0
   1908c:	sub	r4, r2, #1
   19090:	strd	r2, [fp, #-116]	; 0xffffff8c
   19094:	str	r5, [fp, #-96]	; 0xffffffa0
   19098:	beq	18860 <argp_failure@@Base+0x298>
   1909c:	movw	r6, #56272	; 0xdbd0
   190a0:	movt	r6, #1
   190a4:	str	r4, [fp, #-120]	; 0xffffff88
   190a8:	mov	sl, r4
   190ac:	ldr	r8, [r5]
   190b0:	ldr	r3, [r5, #4]
   190b4:	cmp	r3, #0
   190b8:	sub	r4, r3, #1
   190bc:	beq	190fc <argp_failure@@Base+0xb34>
   190c0:	add	r8, r8, #24
   190c4:	ldr	r0, [r8, #-24]	; 0xffffffe8
   190c8:	sub	r4, r4, #1
   190cc:	cmp	r0, #0
   190d0:	beq	190f0 <argp_failure@@Base+0xb28>
   190d4:	ldr	r3, [r8, #-12]
   190d8:	mov	r1, r6
   190dc:	tst	r3, #2
   190e0:	bne	190f0 <argp_failure@@Base+0xb28>
   190e4:	bl	110e8 <strcmp@plt>
   190e8:	cmp	r0, #0
   190ec:	beq	197a4 <argp_failure@@Base+0x11dc>
   190f0:	cmn	r4, #1
   190f4:	add	r8, r8, #24
   190f8:	bne	190c4 <argp_failure@@Base+0xafc>
   190fc:	sub	sl, sl, #1
   19100:	add	r5, r5, #28
   19104:	cmn	sl, #1
   19108:	bne	190ac <argp_failure@@Base+0xae4>
   1910c:	ldr	r4, [fp, #-120]	; 0xffffff88
   19110:	b	197c4 <argp_failure@@Base+0x11fc>
   19114:	mov	r0, r7
   19118:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1911c:	ldr	r1, [r7, #16]
   19120:	str	r4, [r7, #12]
   19124:	ldrd	r2, [r7, #24]
   19128:	sub	r2, r3, r2
   1912c:	cmp	r2, r1
   19130:	bls	19004 <argp_failure@@Base+0xa3c>
   19134:	mov	r0, r7
   19138:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1913c:	ldr	r3, [r7, #28]
   19140:	b	19004 <argp_failure@@Base+0xa3c>
   19144:	mov	r1, r7
   19148:	mov	r0, sl
   1914c:	orr	r8, r8, #2
   19150:	bl	16bf4 <_obstack_memory_used@@Base+0x218c>
   19154:	b	18fd0 <argp_failure@@Base+0xa08>
   19158:	mov	r0, r7
   1915c:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19160:	b	18fb4 <argp_failure@@Base+0x9ec>
   19164:	mov	r2, #0
   19168:	mov	r3, r4
   1916c:	ldr	r0, [fp, #-108]	; 0xffffff94
   19170:	stm	sp, {r2, r7}
   19174:	mov	r2, #1
   19178:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1917c:	bl	172b4 <_obstack_memory_used@@Base+0x284c>
   19180:	orr	r4, r4, r0
   19184:	b	18c40 <argp_failure@@Base+0x678>
   19188:	str	r8, [fp, #-104]	; 0xffffff98
   1918c:	mov	r4, #1
   19190:	ldr	r3, [fp, #-104]	; 0xffffff98
   19194:	tst	r3, #16
   19198:	beq	18878 <argp_failure@@Base+0x2b0>
   1919c:	b	18e80 <argp_failure@@Base+0x8b8>
   191a0:	ldr	r3, [r7, #28]
   191a4:	ldr	r2, [r7, #32]
   191a8:	cmp	r3, r2
   191ac:	bcs	19b84 <argp_failure@@Base+0x15bc>
   191b0:	add	r1, r3, #1
   191b4:	mov	r2, #10
   191b8:	str	r1, [r7, #28]
   191bc:	strb	r2, [r3]
   191c0:	ldr	r2, [r5]
   191c4:	b	18c68 <argp_failure@@Base+0x6a0>
   191c8:	tst	r8, #2
   191cc:	beq	19644 <argp_failure@@Base+0x107c>
   191d0:	add	r4, r4, #1
   191d4:	b	189fc <argp_failure@@Base+0x434>
   191d8:	cmp	r3, r2
   191dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   191e0:	ldr	r5, [r3, #12]
   191e4:	bhi	19774 <argp_failure@@Base+0x11ac>
   191e8:	str	r5, [r7, #12]
   191ec:	ldr	sl, [r9, #4]
   191f0:	cmp	sl, #0
   191f4:	beq	18af4 <argp_failure@@Base+0x52c>
   191f8:	movw	r3, #58292	; 0xe3b4
   191fc:	movt	r3, #1
   19200:	movw	r6, #58284	; 0xe3ac
   19204:	movt	r6, #1
   19208:	movw	r8, #58300	; 0xe3bc
   1920c:	movt	r8, #1
   19210:	str	r3, [fp, #-128]	; 0xffffff80
   19214:	add	r5, r4, #24
   19218:	b	19228 <argp_failure@@Base+0xc60>
   1921c:	subs	sl, sl, #1
   19220:	add	r5, r5, #24
   19224:	beq	18af4 <argp_failure@@Base+0x52c>
   19228:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1922c:	cmp	r3, #0
   19230:	beq	1921c <argp_failure@@Base+0xc54>
   19234:	ldr	r3, [r5, #-12]
   19238:	tst	r3, #2
   1923c:	bne	1921c <argp_failure@@Base+0xc54>
   19240:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19244:	sub	r1, fp, #76	; 0x4c
   19248:	ldr	r0, [r3, #12]
   1924c:	bl	17068 <_obstack_memory_used@@Base+0x2600>
   19250:	mov	r1, r6
   19254:	mov	r0, r7
   19258:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1925c:	bl	1bb58 <argp_error@@Base+0x1c98>
   19260:	ldr	r3, [r4, #8]
   19264:	cmp	r3, #0
   19268:	beq	1921c <argp_failure@@Base+0xc54>
   1926c:	ldr	ip, [r4, #12]
   19270:	mov	r1, r8
   19274:	mov	r2, r3
   19278:	mov	r0, r7
   1927c:	tst	ip, #1
   19280:	ldrne	r1, [fp, #-128]	; 0xffffff80
   19284:	bl	1bb58 <argp_error@@Base+0x1c98>
   19288:	b	1921c <argp_failure@@Base+0xc54>
   1928c:	ldr	r6, [r9, #20]
   19290:	ldr	r5, [r4, #16]
   19294:	cmp	r6, #0
   19298:	beq	1963c <argp_failure@@Base+0x1074>
   1929c:	ldr	r3, [r6, #20]
   192a0:	cmp	r3, #0
   192a4:	beq	1963c <argp_failure@@Base+0x1074>
   192a8:	ldr	r4, [r4, #4]
   192ac:	mov	r0, r6
   192b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   192b4:	bl	14378 <argp_parse@@Base+0xeb8>
   192b8:	mov	r2, r0
   192bc:	mov	r1, r5
   192c0:	ldr	r3, [r6, #20]
   192c4:	mov	r0, r4
   192c8:	blx	r3
   192cc:	mov	r4, r0
   192d0:	cmp	r4, #0
   192d4:	beq	193d8 <argp_failure@@Base+0xe10>
   192d8:	ldrb	r3, [r4]
   192dc:	cmp	r3, #0
   192e0:	beq	193c8 <argp_failure@@Base+0xe00>
   192e4:	ldr	r1, [r7, #16]
   192e8:	ldrd	r2, [r7, #24]
   192ec:	sub	r2, r3, r2
   192f0:	cmp	r2, r1
   192f4:	bhi	19ad8 <argp_failure@@Base+0x1510>
   192f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   192fc:	ldr	r8, [r7, #20]
   19300:	ldr	r6, [r2, #20]
   19304:	bic	r8, r8, r8, asr #31
   19308:	mov	sl, r6
   1930c:	str	r6, [r7, #4]
   19310:	add	r2, r6, #3
   19314:	str	sl, [r7, #12]
   19318:	cmp	r2, r8
   1931c:	bcc	19ab8 <argp_failure@@Base+0x14f0>
   19320:	cmp	r6, r8
   19324:	bhi	19a44 <argp_failure@@Base+0x147c>
   19328:	ldr	r1, [r7, #32]
   1932c:	add	r2, r3, #3
   19330:	cmp	r1, r2
   19334:	bcs	19350 <argp_failure@@Base+0xd88>
   19338:	mov	r1, #3
   1933c:	mov	r0, r7
   19340:	bl	1bb38 <argp_error@@Base+0x1c78>
   19344:	cmp	r0, #0
   19348:	beq	19374 <argp_failure@@Base+0xdac>
   1934c:	ldr	r3, [r7, #28]
   19350:	movw	r2, #58304	; 0xe3c0
   19354:	movt	r2, #1
   19358:	ldrh	r1, [r2]
   1935c:	ldrb	r2, [r2, #2]
   19360:	strh	r1, [r3]
   19364:	strb	r2, [r3, #2]
   19368:	ldr	r3, [r7, #28]
   1936c:	add	r3, r3, #3
   19370:	str	r3, [r7, #28]
   19374:	mov	r0, r4
   19378:	bl	11268 <strlen@plt>
   1937c:	subs	r6, r0, #0
   19380:	beq	193c8 <argp_failure@@Base+0xe00>
   19384:	ldr	r0, [r7, #28]
   19388:	ldr	r2, [r7, #32]
   1938c:	add	r3, r0, r6
   19390:	cmp	r2, r3
   19394:	bcs	193b0 <argp_failure@@Base+0xde8>
   19398:	mov	r1, r6
   1939c:	mov	r0, r7
   193a0:	bl	1bb38 <argp_error@@Base+0x1c78>
   193a4:	cmp	r0, #0
   193a8:	beq	193c8 <argp_failure@@Base+0xe00>
   193ac:	ldr	r0, [r7, #28]
   193b0:	mov	r2, r6
   193b4:	mov	r1, r4
   193b8:	bl	11160 <memcpy@plt>
   193bc:	ldr	r3, [r7, #28]
   193c0:	add	r6, r3, r6
   193c4:	str	r6, [r7, #28]
   193c8:	cmp	r5, r4
   193cc:	beq	193d8 <argp_failure@@Base+0xe10>
   193d0:	mov	r0, r4
   193d4:	bl	144f8 <argp_parse@@Base+0x1038>
   193d8:	ldr	r1, [r7, #16]
   193dc:	ldrd	r2, [r7, #24]
   193e0:	sub	r2, r3, r2
   193e4:	cmp	r2, r1
   193e8:	bhi	19764 <argp_failure@@Base+0x119c>
   193ec:	mov	r2, #0
   193f0:	str	r2, [r7, #4]
   193f4:	ldr	r2, [r7, #32]
   193f8:	cmp	r2, r3
   193fc:	bhi	19418 <argp_failure@@Base+0xe50>
   19400:	mov	r1, #1
   19404:	mov	r0, r7
   19408:	bl	1bb38 <argp_error@@Base+0x1c78>
   1940c:	cmp	r0, #0
   19410:	beq	19428 <argp_failure@@Base+0xe60>
   19414:	ldr	r3, [r7, #28]
   19418:	add	r1, r3, #1
   1941c:	mov	r2, #10
   19420:	str	r1, [r7, #28]
   19424:	strb	r2, [r3]
   19428:	str	r9, [fp, #-88]	; 0xffffffa8
   1942c:	b	18b60 <argp_failure@@Base+0x598>
   19430:	cmp	r0, #45	; 0x2d
   19434:	cmpne	r0, #95	; 0x5f
   19438:	ubfx	r7, r3, #3, #1
   1943c:	moveq	r2, #1
   19440:	movne	r2, #0
   19444:	orrs	r7, r2, r7
   19448:	beq	19c5c <argp_failure@@Base+0x1694>
   1944c:	mov	r4, r8
   19450:	ldrb	r2, [r4, #1]!
   19454:	lsl	r3, r2, #1
   19458:	cmp	r2, #45	; 0x2d
   1945c:	cmpne	r2, #95	; 0x5f
   19460:	moveq	lr, #1
   19464:	movne	lr, #0
   19468:	ldrh	r3, [r1, r3]
   1946c:	ubfx	ip, r3, #3, #1
   19470:	orrs	ip, lr, ip
   19474:	bne	19450 <argp_failure@@Base+0xe88>
   19478:	tst	r3, #8192	; 0x2000
   1947c:	sub	r7, r4, r8
   19480:	beq	19498 <argp_failure@@Base+0xed0>
   19484:	ldrb	r2, [r4, #1]!
   19488:	lsl	r3, r2, #1
   1948c:	ldrh	r3, [r1, r3]
   19490:	tst	r3, #8192	; 0x2000
   19494:	bne	19484 <argp_failure@@Base+0xebc>
   19498:	cmp	r2, #44	; 0x2c
   1949c:	cmpne	r2, #0
   194a0:	beq	19700 <argp_failure@@Base+0x1138>
   194a4:	cmp	r2, #61	; 0x3d
   194a8:	beq	19bc8 <argp_failure@@Base+0x1600>
   194ac:	ands	r3, r3, #2048	; 0x800
   194b0:	streq	r3, [fp, #-112]	; 0xffffff90
   194b4:	streq	r3, [fp, #-96]	; 0xffffffa0
   194b8:	bne	19bf8 <argp_failure@@Base+0x1630>
   194bc:	ldr	r0, [pc, #2292]	; 19db8 <argp_failure@@Base+0x17f0>
   194c0:	bl	11268 <strlen@plt>
   194c4:	cmp	r7, r0
   194c8:	beq	19724 <argp_failure@@Base+0x115c>
   194cc:	ldr	r5, [pc, #2280]	; 19dbc <argp_failure@@Base+0x17f4>
   194d0:	mov	r0, r5
   194d4:	bl	11268 <strlen@plt>
   194d8:	cmp	r7, r0
   194dc:	beq	198a0 <argp_failure@@Base+0x12d8>
   194e0:	ldr	r5, [pc, #2264]	; 19dc0 <argp_failure@@Base+0x17f8>
   194e4:	mov	r0, r5
   194e8:	bl	11268 <strlen@plt>
   194ec:	cmp	r7, r0
   194f0:	beq	198dc <argp_failure@@Base+0x1314>
   194f4:	ldr	r5, [pc, #2248]	; 19dc4 <argp_failure@@Base+0x17fc>
   194f8:	mov	r0, r5
   194fc:	bl	11268 <strlen@plt>
   19500:	cmp	r7, r0
   19504:	beq	198f8 <argp_failure@@Base+0x1330>
   19508:	ldr	r5, [pc, #2232]	; 19dc8 <argp_failure@@Base+0x1800>
   1950c:	mov	r0, r5
   19510:	bl	11268 <strlen@plt>
   19514:	cmp	r7, r0
   19518:	beq	19914 <argp_failure@@Base+0x134c>
   1951c:	ldr	r5, [pc, #2216]	; 19dcc <argp_failure@@Base+0x1804>
   19520:	mov	r0, r5
   19524:	bl	11268 <strlen@plt>
   19528:	cmp	r7, r0
   1952c:	beq	19988 <argp_failure@@Base+0x13c0>
   19530:	ldr	r5, [pc, #2200]	; 19dd0 <argp_failure@@Base+0x1808>
   19534:	mov	r0, r5
   19538:	bl	11268 <strlen@plt>
   1953c:	cmp	r7, r0
   19540:	beq	199a4 <argp_failure@@Base+0x13dc>
   19544:	ldr	r5, [pc, #2184]	; 19dd4 <argp_failure@@Base+0x180c>
   19548:	mov	r0, r5
   1954c:	bl	11268 <strlen@plt>
   19550:	cmp	r7, r0
   19554:	beq	199c0 <argp_failure@@Base+0x13f8>
   19558:	ldr	r5, [pc, #2168]	; 19dd8 <argp_failure@@Base+0x1810>
   1955c:	mov	r0, r5
   19560:	bl	11268 <strlen@plt>
   19564:	cmp	r0, r7
   19568:	beq	199dc <argp_failure@@Base+0x1414>
   1956c:	movw	r3, #58048	; 0xe2c0
   19570:	movt	r3, #1
   19574:	mov	r2, #0
   19578:	mov	r1, r2
   1957c:	stm	sp, {r7, r8}
   19580:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19584:	bl	185c8 <argp_failure@@Base>
   19588:	ldrb	r0, [r4]
   1958c:	cmp	r0, #44	; 0x2c
   19590:	movne	r8, r4
   19594:	bne	195a0 <argp_failure@@Base+0xfd8>
   19598:	ldrb	r0, [r4, #1]
   1959c:	add	r8, r4, #1
   195a0:	cmp	r0, #0
   195a4:	bne	18d40 <argp_failure@@Base+0x778>
   195a8:	b	18d78 <argp_failure@@Base+0x7b0>
   195ac:	mov	r0, r7
   195b0:	bl	1b4a8 <argp_error@@Base+0x15e8>
   195b4:	b	18b0c <argp_failure@@Base+0x544>
   195b8:	mov	r0, r7
   195bc:	bl	1b4a8 <argp_error@@Base+0x15e8>
   195c0:	b	18998 <argp_failure@@Base+0x3d0>
   195c4:	mov	r0, r7
   195c8:	bl	1b4a8 <argp_error@@Base+0x15e8>
   195cc:	ldr	r2, [r7, #16]
   195d0:	ldr	r3, [r7, #24]
   195d4:	ldr	r1, [r7, #28]
   195d8:	sub	r3, r1, r3
   195dc:	b	18904 <argp_failure@@Base+0x33c>
   195e0:	mov	r0, r7
   195e4:	bl	1b4a8 <argp_error@@Base+0x15e8>
   195e8:	ldr	r3, [fp, #-120]	; 0xffffff88
   195ec:	ldr	r2, [r7, #16]
   195f0:	ldr	r1, [r7, #24]
   195f4:	str	r3, [r7, #4]
   195f8:	ldr	r3, [r7, #28]
   195fc:	sub	r0, r3, r1
   19600:	cmp	r0, r2
   19604:	bls	18b80 <argp_failure@@Base+0x5b8>
   19608:	mov	r0, r7
   1960c:	add	r9, r9, #28
   19610:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19614:	ldr	r3, [fp, #-116]	; 0xffffff8c
   19618:	subs	r3, r3, #1
   1961c:	str	r3, [fp, #-116]	; 0xffffff8c
   19620:	ldr	r3, [fp, #-124]	; 0xffffff84
   19624:	str	r3, [r7, #12]
   19628:	beq	18b9c <argp_failure@@Base+0x5d4>
   1962c:	ldr	r2, [r7, #16]
   19630:	ldr	r1, [r7, #24]
   19634:	ldr	r3, [r7, #28]
   19638:	b	188f0 <argp_failure@@Base+0x328>
   1963c:	mov	r4, r5
   19640:	b	192d0 <argp_failure@@Base+0xd08>
   19644:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19648:	sub	r1, fp, #76	; 0x4c
   1964c:	ldr	r0, [r3, #8]
   19650:	bl	17068 <_obstack_memory_used@@Base+0x2600>
   19654:	ldr	r2, [r9, #28]
   19658:	ldr	r1, [r9, #32]
   1965c:	cmp	r2, r1
   19660:	bcc	1967c <argp_failure@@Base+0x10b4>
   19664:	mov	r1, #1
   19668:	mov	r0, r9
   1966c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19670:	cmp	r0, #0
   19674:	beq	1968c <argp_failure@@Base+0x10c4>
   19678:	ldr	r2, [r9, #28]
   1967c:	add	r0, r2, #1
   19680:	mov	r1, #45	; 0x2d
   19684:	str	r0, [r9, #28]
   19688:	strb	r1, [r2]
   1968c:	ldr	r2, [r9, #28]
   19690:	ldr	r1, [r9, #32]
   19694:	ldrb	r6, [r4]
   19698:	cmp	r2, r1
   1969c:	bcc	196b8 <argp_failure@@Base+0x10f0>
   196a0:	mov	r1, #1
   196a4:	mov	r0, r9
   196a8:	bl	1bb38 <argp_error@@Base+0x1c78>
   196ac:	cmp	r0, #0
   196b0:	beq	196c4 <argp_failure@@Base+0x10fc>
   196b4:	ldr	r2, [r9, #28]
   196b8:	add	r1, r2, #1
   196bc:	str	r1, [r9, #28]
   196c0:	strb	r6, [r2]
   196c4:	ldr	r3, [fp, #-128]	; 0xffffff80
   196c8:	ldr	r2, [r7, #8]
   196cc:	cmp	r3, #0
   196d0:	beq	19780 <argp_failure@@Base+0x11b8>
   196d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   196d8:	ldr	r1, [r3]
   196dc:	cmp	r1, #0
   196e0:	bne	19780 <argp_failure@@Base+0x11b8>
   196e4:	cmp	r2, #0
   196e8:	movne	r2, #1
   196ec:	strne	r2, [fp, #-80]	; 0xffffffb0
   196f0:	b	191d0 <argp_failure@@Base+0xc08>
   196f4:	mov	r1, #1
   196f8:	str	r1, [fp, #-128]	; 0xffffff80
   196fc:	b	18988 <argp_failure@@Base+0x3c0>
   19700:	cmp	r0, #110	; 0x6e
   19704:	beq	19a10 <argp_failure@@Base+0x1448>
   19708:	mov	r3, #1
   1970c:	ldr	r0, [pc, #1700]	; 19db8 <argp_failure@@Base+0x17f0>
   19710:	str	r3, [fp, #-112]	; 0xffffff90
   19714:	str	r3, [fp, #-96]	; 0xffffffa0
   19718:	bl	11268 <strlen@plt>
   1971c:	cmp	r7, r0
   19720:	bne	194cc <argp_failure@@Base+0xf04>
   19724:	mov	r2, r7
   19728:	ldr	r1, [pc, #1672]	; 19db8 <argp_failure@@Base+0x17f0>
   1972c:	mov	r0, r8
   19730:	bl	11388 <strncmp@plt>
   19734:	cmp	r0, #0
   19738:	bne	194cc <argp_failure@@Base+0xf04>
   1973c:	ldr	r5, [pc, #1652]	; 19db8 <argp_failure@@Base+0x17f0>
   19740:	sub	r2, fp, #36	; 0x24
   19744:	ldrb	r3, [r5, #15]
   19748:	add	r3, r2, r3
   1974c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19750:	str	r2, [r3, #-40]	; 0xffffffd8
   19754:	b	19588 <argp_failure@@Base+0xfc0>
   19758:	mov	r0, r7
   1975c:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19760:	b	18a40 <argp_failure@@Base+0x478>
   19764:	mov	r0, r7
   19768:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1976c:	ldr	r3, [r7, #28]
   19770:	b	193ec <argp_failure@@Base+0xe24>
   19774:	mov	r0, r7
   19778:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1977c:	b	191e8 <argp_failure@@Base+0xc20>
   19780:	cmp	r2, #0
   19784:	beq	191d0 <argp_failure@@Base+0xc08>
   19788:	ldr	r1, [r7, #12]
   1978c:	mov	r0, r9
   19790:	tst	r1, #1
   19794:	ldrne	r1, [fp, #-144]	; 0xffffff70
   19798:	ldreq	r1, [fp, #-140]	; 0xffffff74
   1979c:	bl	1bb58 <argp_error@@Base+0x1c98>
   197a0:	b	191d0 <argp_failure@@Base+0xc08>
   197a4:	mvn	r3, #0
   197a8:	str	r3, [r5, #12]
   197ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   197b0:	ldr	r3, [r3, #4]
   197b4:	cmp	r3, #0
   197b8:	sub	r4, r3, #1
   197bc:	str	r3, [fp, #-116]	; 0xffffff8c
   197c0:	beq	18860 <argp_failure@@Base+0x298>
   197c4:	ldr	r5, [fp, #-96]	; 0xffffffa0
   197c8:	movw	r6, #56240	; 0xdbb0
   197cc:	movt	r6, #1
   197d0:	ldm	r5, {r8, sl}
   197d4:	cmp	sl, #0
   197d8:	sub	sl, sl, #1
   197dc:	beq	1981c <argp_failure@@Base+0x1254>
   197e0:	add	r8, r8, #24
   197e4:	ldr	r0, [r8, #-24]	; 0xffffffe8
   197e8:	sub	sl, sl, #1
   197ec:	cmp	r0, #0
   197f0:	beq	19810 <argp_failure@@Base+0x1248>
   197f4:	ldr	r3, [r8, #-12]
   197f8:	mov	r1, r6
   197fc:	tst	r3, #2
   19800:	bne	19810 <argp_failure@@Base+0x1248>
   19804:	bl	110e8 <strcmp@plt>
   19808:	cmp	r0, #0
   1980c:	beq	19834 <argp_failure@@Base+0x126c>
   19810:	cmn	sl, #1
   19814:	add	r8, r8, #24
   19818:	bne	197e4 <argp_failure@@Base+0x121c>
   1981c:	cmp	r4, #0
   19820:	add	r5, r5, #28
   19824:	sub	r4, r4, #1
   19828:	bne	197d0 <argp_failure@@Base+0x1208>
   1982c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   19830:	b	1984c <argp_failure@@Base+0x1284>
   19834:	mvn	r3, #0
   19838:	str	r3, [r5, #12]
   1983c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19840:	ldr	r1, [r3, #4]
   19844:	cmp	r1, #0
   19848:	beq	18860 <argp_failure@@Base+0x298>
   1984c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19850:	mov	r3, #0
   19854:	str	r3, [r2, #24]
   19858:	add	r3, r3, #1
   1985c:	add	r2, r2, #28
   19860:	cmp	r1, r3
   19864:	bhi	19854 <argp_failure@@Base+0x128c>
   19868:	movw	r3, #30856	; 0x7888
   1986c:	movt	r3, #1
   19870:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19874:	mov	r2, #28
   19878:	bl	11334 <qsort@plt>
   1987c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19880:	ands	r4, r3, #3
   19884:	beq	1886c <argp_failure@@Base+0x2a4>
   19888:	b	18eb4 <argp_failure@@Base+0x8ec>
   1988c:	sub	r2, fp, #76	; 0x4c
   19890:	ldr	r0, [r4, #16]
   19894:	ldr	r1, [r9, #20]
   19898:	bl	16900 <_obstack_memory_used@@Base+0x1e98>
   1989c:	b	19428 <argp_failure@@Base+0xe60>
   198a0:	mov	r2, r7
   198a4:	mov	r1, r5
   198a8:	mov	r0, r8
   198ac:	bl	11388 <strncmp@plt>
   198b0:	cmp	r0, #0
   198b4:	bne	194e0 <argp_failure@@Base+0xf18>
   198b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198bc:	cmp	r3, #0
   198c0:	beq	19740 <argp_failure@@Base+0x1178>
   198c4:	ldrb	r2, [r5, #14]
   198c8:	cmp	r2, #0
   198cc:	movweq	r3, #58000	; 0xe290
   198d0:	movteq	r3, #1
   198d4:	bne	19740 <argp_failure@@Base+0x1178>
   198d8:	b	19578 <argp_failure@@Base+0xfb0>
   198dc:	mov	r2, r7
   198e0:	mov	r1, r5
   198e4:	mov	r0, r8
   198e8:	bl	11388 <strncmp@plt>
   198ec:	cmp	r0, #0
   198f0:	bne	194f4 <argp_failure@@Base+0xf2c>
   198f4:	b	198b8 <argp_failure@@Base+0x12f0>
   198f8:	mov	r2, r7
   198fc:	mov	r1, r5
   19900:	mov	r0, r8
   19904:	bl	11388 <strncmp@plt>
   19908:	cmp	r0, #0
   1990c:	bne	19508 <argp_failure@@Base+0xf40>
   19910:	b	198b8 <argp_failure@@Base+0x12f0>
   19914:	mov	r2, r7
   19918:	mov	r1, r5
   1991c:	mov	r0, r8
   19920:	bl	11388 <strncmp@plt>
   19924:	cmp	r0, #0
   19928:	bne	1951c <argp_failure@@Base+0xf54>
   1992c:	b	198b8 <argp_failure@@Base+0x12f0>
   19930:	ldr	r3, [r7, #28]
   19934:	ldr	r1, [r7, #32]
   19938:	add	r2, r3, #12
   1993c:	cmp	r1, r2
   19940:	bcs	1995c <argp_failure@@Base+0x1394>
   19944:	mov	r1, #12
   19948:	mov	r0, r7
   1994c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19950:	cmp	r0, #0
   19954:	beq	18fd0 <argp_failure@@Base+0xa08>
   19958:	ldr	r3, [r7, #28]
   1995c:	movw	r2, #58204	; 0xe35c
   19960:	movt	r2, #1
   19964:	ldrd	r0, [r2]
   19968:	ldr	r2, [r2, #8]
   1996c:	str	r0, [r3]
   19970:	str	r1, [r3, #4]
   19974:	str	r2, [r3, #8]
   19978:	ldr	r3, [r7, #28]
   1997c:	add	r3, r3, #12
   19980:	str	r3, [r7, #28]
   19984:	b	18fd0 <argp_failure@@Base+0xa08>
   19988:	mov	r2, r7
   1998c:	mov	r1, r5
   19990:	mov	r0, r8
   19994:	bl	11388 <strncmp@plt>
   19998:	cmp	r0, #0
   1999c:	bne	19530 <argp_failure@@Base+0xf68>
   199a0:	b	198b8 <argp_failure@@Base+0x12f0>
   199a4:	mov	r2, r7
   199a8:	mov	r1, r5
   199ac:	mov	r0, r8
   199b0:	bl	11388 <strncmp@plt>
   199b4:	cmp	r0, #0
   199b8:	bne	19544 <argp_failure@@Base+0xf7c>
   199bc:	b	198b8 <argp_failure@@Base+0x12f0>
   199c0:	mov	r2, r7
   199c4:	mov	r1, r5
   199c8:	mov	r0, r8
   199cc:	bl	11388 <strncmp@plt>
   199d0:	cmp	r0, #0
   199d4:	bne	19558 <argp_failure@@Base+0xf90>
   199d8:	b	198b8 <argp_failure@@Base+0x12f0>
   199dc:	mov	r2, r7
   199e0:	mov	r1, r5
   199e4:	mov	r0, r8
   199e8:	bl	11388 <strncmp@plt>
   199ec:	cmp	r0, #0
   199f0:	bne	1956c <argp_failure@@Base+0xfa4>
   199f4:	b	198b8 <argp_failure@@Base+0x12f0>
   199f8:	ldr	r4, [fp, #-112]	; 0xffffff90
   199fc:	ldr	r0, [r4]
   19a00:	bl	144f8 <argp_parse@@Base+0x1038>
   19a04:	ldr	r0, [r4, #8]
   19a08:	bl	144f8 <argp_parse@@Base+0x1038>
   19a0c:	b	18cb8 <argp_failure@@Base+0x6f0>
   19a10:	ldrb	r3, [r8, #1]
   19a14:	cmp	r3, #111	; 0x6f
   19a18:	bne	19708 <argp_failure@@Base+0x1140>
   19a1c:	ldrb	r3, [r8, #2]
   19a20:	cmp	r3, #45	; 0x2d
   19a24:	bne	19708 <argp_failure@@Base+0x1140>
   19a28:	mov	r3, #0
   19a2c:	add	r8, r8, #3
   19a30:	sub	r7, r7, #3
   19a34:	str	r3, [fp, #-112]	; 0xffffff90
   19a38:	mov	r3, #1
   19a3c:	str	r3, [fp, #-96]	; 0xffffffa0
   19a40:	b	194bc <argp_failure@@Base+0xef4>
   19a44:	ldr	r1, [r7, #16]
   19a48:	ldr	r2, [r7, #24]
   19a4c:	sub	r3, r3, r2
   19a50:	cmp	r3, r1
   19a54:	bhi	19bbc <argp_failure@@Base+0x15f4>
   19a58:	ldr	r3, [r7, #20]
   19a5c:	cmp	r3, #0
   19a60:	subge	r6, r6, r3
   19a64:	cmp	r6, #0
   19a68:	sub	r6, r6, #1
   19a6c:	ble	19374 <argp_failure@@Base+0xdac>
   19a70:	mov	r8, #32
   19a74:	ldr	r3, [r7, #28]
   19a78:	mov	r1, #1
   19a7c:	mov	r0, r7
   19a80:	sub	r6, r6, #1
   19a84:	ldr	r2, [r7, #32]
   19a88:	cmp	r3, r2
   19a8c:	bcc	19aa0 <argp_failure@@Base+0x14d8>
   19a90:	bl	1bb38 <argp_error@@Base+0x1c78>
   19a94:	cmp	r0, #0
   19a98:	beq	19aac <argp_failure@@Base+0x14e4>
   19a9c:	ldr	r3, [r7, #28]
   19aa0:	add	r2, r3, #1
   19aa4:	str	r2, [r7, #28]
   19aa8:	strb	r8, [r3]
   19aac:	cmn	r6, #1
   19ab0:	bne	19a74 <argp_failure@@Base+0x14ac>
   19ab4:	b	19374 <argp_failure@@Base+0xdac>
   19ab8:	ldr	r2, [r7, #32]
   19abc:	cmp	r2, r3
   19ac0:	bls	19b68 <argp_failure@@Base+0x15a0>
   19ac4:	add	r1, r3, #1
   19ac8:	mov	r2, #10
   19acc:	str	r1, [r7, #28]
   19ad0:	strb	r2, [r3]
   19ad4:	b	19374 <argp_failure@@Base+0xdac>
   19ad8:	mov	r0, r7
   19adc:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19ae0:	ldr	r1, [r7, #16]
   19ae4:	ldrd	r2, [r7, #24]
   19ae8:	ldr	sl, [fp, #-96]	; 0xffffffa0
   19aec:	ldr	r8, [r7, #20]
   19af0:	sub	r2, r3, r2
   19af4:	cmp	r2, r1
   19af8:	ldr	r6, [sl, #20]
   19afc:	bic	r8, r8, r8, asr #31
   19b00:	bls	19308 <argp_failure@@Base+0xd40>
   19b04:	mov	r0, r7
   19b08:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19b0c:	ldr	r1, [r7, #16]
   19b10:	str	r6, [r7, #4]
   19b14:	mov	r6, sl
   19b18:	ldrd	r2, [r7, #24]
   19b1c:	ldr	sl, [sl, #20]
   19b20:	sub	r2, r3, r2
   19b24:	cmp	r2, r1
   19b28:	bls	19db0 <argp_failure@@Base+0x17e8>
   19b2c:	mov	r0, r7
   19b30:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19b34:	ldr	r6, [r6, #20]
   19b38:	ldr	r3, [r7, #28]
   19b3c:	b	19310 <argp_failure@@Base+0xd48>
   19b40:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19b44:	bl	111b4 <funlockfile@plt>
   19b48:	b	18cc8 <argp_failure@@Base+0x700>
   19b4c:	movw	r3, #58088	; 0xe2e8
   19b50:	movt	r3, #1
   19b54:	str	r8, [sp]
   19b58:	mov	r1, r2
   19b5c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19b60:	bl	185c8 <argp_failure@@Base>
   19b64:	b	18d78 <argp_failure@@Base+0x7b0>
   19b68:	mov	r1, #1
   19b6c:	mov	r0, r7
   19b70:	bl	1bb38 <argp_error@@Base+0x1c78>
   19b74:	cmp	r0, #0
   19b78:	beq	19374 <argp_failure@@Base+0xdac>
   19b7c:	ldr	r3, [r7, #28]
   19b80:	b	19ac4 <argp_failure@@Base+0x14fc>
   19b84:	mov	r1, #1
   19b88:	mov	r0, r7
   19b8c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19b90:	cmp	r0, #0
   19b94:	ldrne	r3, [r7, #28]
   19b98:	bne	191b0 <argp_failure@@Base+0xbe8>
   19b9c:	b	191c0 <argp_failure@@Base+0xbf8>
   19ba0:	mov	r1, #1
   19ba4:	mov	r0, r7
   19ba8:	bl	1bb38 <argp_error@@Base+0x1c78>
   19bac:	cmp	r0, #0
   19bb0:	ldrne	r3, [r7, #28]
   19bb4:	bne	18e38 <argp_failure@@Base+0x870>
   19bb8:	b	18e48 <argp_failure@@Base+0x880>
   19bbc:	mov	r0, r7
   19bc0:	bl	1b4a8 <argp_error@@Base+0x15e8>
   19bc4:	b	19a58 <argp_failure@@Base+0x1490>
   19bc8:	ldrb	r3, [r4, #1]
   19bcc:	add	r4, r4, #1
   19bd0:	lsl	r3, r3, #1
   19bd4:	ldrh	r3, [r1, r3]
   19bd8:	tst	r3, #8192	; 0x2000
   19bdc:	beq	194ac <argp_failure@@Base+0xee4>
   19be0:	ldrb	r3, [r4, #1]!
   19be4:	lsl	r3, r3, #1
   19be8:	ldrh	r3, [r1, r3]
   19bec:	tst	r3, #8192	; 0x2000
   19bf0:	bne	19be0 <argp_failure@@Base+0x1618>
   19bf4:	b	194ac <argp_failure@@Base+0xee4>
   19bf8:	mov	r2, #10
   19bfc:	mov	r1, #0
   19c00:	mov	r0, r4
   19c04:	bl	110f4 <strtol@plt>
   19c08:	ldrb	r3, [r4]
   19c0c:	ldr	r2, [r6]
   19c10:	lsl	r3, r3, #1
   19c14:	ldrh	r3, [r2, r3]
   19c18:	str	r0, [fp, #-112]	; 0xffffff90
   19c1c:	tst	r3, #2048	; 0x800
   19c20:	beq	19c38 <argp_failure@@Base+0x1670>
   19c24:	ldrb	r3, [r4, #1]!
   19c28:	lsl	r3, r3, #1
   19c2c:	ldrh	r3, [r2, r3]
   19c30:	tst	r3, #2048	; 0x800
   19c34:	bne	19c24 <argp_failure@@Base+0x165c>
   19c38:	ands	r3, r3, #8192	; 0x2000
   19c3c:	beq	19c54 <argp_failure@@Base+0x168c>
   19c40:	ldrb	r3, [r4, #1]!
   19c44:	lsl	r3, r3, #1
   19c48:	ldrh	r3, [r2, r3]
   19c4c:	ands	r3, r3, #8192	; 0x2000
   19c50:	bne	19c40 <argp_failure@@Base+0x1678>
   19c54:	str	r3, [fp, #-96]	; 0xffffffa0
   19c58:	b	194bc <argp_failure@@Base+0xef4>
   19c5c:	mov	r2, r0
   19c60:	mov	r4, r8
   19c64:	b	19498 <argp_failure@@Base+0xed0>
   19c68:	movw	r5, #57868	; 0xe20c
   19c6c:	movt	r5, #1
   19c70:	mov	r4, r1
   19c74:	ldr	r3, [r7, #28]
   19c78:	ldr	r2, [r7, #32]
   19c7c:	cmp	r3, r2
   19c80:	bcc	19c9c <argp_failure@@Base+0x16d4>
   19c84:	mov	r1, #1
   19c88:	mov	r0, r7
   19c8c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19c90:	cmp	r0, #0
   19c94:	beq	19cac <argp_failure@@Base+0x16e4>
   19c98:	ldr	r3, [r7, #28]
   19c9c:	add	r1, r3, #1
   19ca0:	mov	r2, #10
   19ca4:	str	r1, [r7, #28]
   19ca8:	strb	r2, [r3]
   19cac:	mov	r0, r5
   19cb0:	bl	11268 <strlen@plt>
   19cb4:	subs	r6, r0, #0
   19cb8:	ldr	r0, [r7, #28]
   19cbc:	ldr	r3, [r7, #32]
   19cc0:	bne	19d68 <argp_failure@@Base+0x17a0>
   19cc4:	cmp	r0, r3
   19cc8:	bcc	19ce4 <argp_failure@@Base+0x171c>
   19ccc:	mov	r1, #1
   19cd0:	mov	r0, r7
   19cd4:	bl	1bb38 <argp_error@@Base+0x1c78>
   19cd8:	cmp	r0, #0
   19cdc:	beq	18c20 <argp_failure@@Base+0x658>
   19ce0:	ldr	r0, [r7, #28]
   19ce4:	add	r2, r0, #1
   19ce8:	mov	r3, #10
   19cec:	str	r2, [r7, #28]
   19cf0:	strb	r3, [r0]
   19cf4:	b	18c20 <argp_failure@@Base+0x658>
   19cf8:	movw	r5, #57868	; 0xe20c
   19cfc:	movt	r5, #1
   19d00:	b	19c74 <argp_failure@@Base+0x16ac>
   19d04:	ldr	r3, [pc, #180]	; 19dc0 <argp_failure@@Base+0x17f8>
   19d08:	movw	r0, #58172	; 0xe33c
   19d0c:	movt	r0, #1
   19d10:	mov	r2, #0
   19d14:	mov	r1, r2
   19d18:	stm	sp, {r0, r3}
   19d1c:	movw	r3, #58120	; 0xe308
   19d20:	movt	r3, #1
   19d24:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19d28:	bl	185c8 <argp_failure@@Base>
   19d2c:	b	18834 <argp_failure@@Base+0x26c>
   19d30:	ldr	r3, [pc, #140]	; 19dc4 <argp_failure@@Base+0x17fc>
   19d34:	b	19d08 <argp_failure@@Base+0x1740>
   19d38:	ldr	r3, [pc, #136]	; 19dc8 <argp_failure@@Base+0x1800>
   19d3c:	b	19d08 <argp_failure@@Base+0x1740>
   19d40:	ldr	r3, [pc, #132]	; 19dcc <argp_failure@@Base+0x1804>
   19d44:	b	19d08 <argp_failure@@Base+0x1740>
   19d48:	ldr	r3, [pc, #128]	; 19dd0 <argp_failure@@Base+0x1808>
   19d4c:	b	19d08 <argp_failure@@Base+0x1740>
   19d50:	ldr	r3, [pc, #124]	; 19dd4 <argp_failure@@Base+0x180c>
   19d54:	b	19d08 <argp_failure@@Base+0x1740>
   19d58:	mov	r4, r5
   19d5c:	movw	r5, #57868	; 0xe20c
   19d60:	movt	r5, #1
   19d64:	b	19c74 <argp_failure@@Base+0x16ac>
   19d68:	add	r2, r0, r6
   19d6c:	cmp	r3, r2
   19d70:	bcs	19d90 <argp_failure@@Base+0x17c8>
   19d74:	mov	r1, r6
   19d78:	mov	r0, r7
   19d7c:	bl	1bb38 <argp_error@@Base+0x1c78>
   19d80:	cmp	r0, #0
   19d84:	ldr	r0, [r7, #28]
   19d88:	ldreq	r3, [r7, #32]
   19d8c:	beq	19cc4 <argp_failure@@Base+0x16fc>
   19d90:	mov	r2, r6
   19d94:	mov	r1, r5
   19d98:	bl	11160 <memcpy@plt>
   19d9c:	ldr	r0, [r7, #28]
   19da0:	ldr	r3, [r7, #32]
   19da4:	add	r0, r0, r6
   19da8:	str	r0, [r7, #28]
   19dac:	b	19cc4 <argp_failure@@Base+0x16fc>
   19db0:	mov	r6, sl
   19db4:	b	19310 <argp_failure@@Base+0xd48>
   19db8:	andeq	lr, r1, ip, asr #32
   19dbc:	andeq	lr, r1, ip, asr r0
   19dc0:	andeq	lr, r1, ip, rrx
   19dc4:	andeq	lr, r1, ip, ror r0
   19dc8:	andeq	lr, r1, ip, lsl #1
   19dcc:	muleq	r1, ip, r0
   19dd0:	andeq	lr, r1, ip, lsr #1
   19dd4:	strheq	lr, [r1], -ip
   19dd8:	andeq	lr, r1, ip, asr #1

00019ddc <argp_help@@Base>:
   19ddc:	push	{lr}		; (str lr, [sp, #-4]!)
   19de0:	sub	sp, sp, #12
   19de4:	str	r3, [sp]
   19de8:	mov	r3, r2
   19dec:	mov	r2, r1
   19df0:	mov	r1, #0
   19df4:	bl	187e4 <argp_failure@@Base+0x21c>
   19df8:	add	sp, sp, #12
   19dfc:	pop	{pc}		; (ldr pc, [sp], #4)

00019e00 <argp_state_help@@Base>:
   19e00:	strd	r4, [sp, #-12]!
   19e04:	subs	r4, r0, #0
   19e08:	mov	r5, r2
   19e0c:	str	lr, [sp, #8]
   19e10:	sub	sp, sp, #12
   19e14:	beq	19e84 <argp_state_help@@Base+0x84>
   19e18:	ldr	r3, [r4, #16]
   19e1c:	adds	r2, r1, #0
   19e20:	movne	r2, #1
   19e24:	eor	r0, r3, #2
   19e28:	ands	r2, r2, r0, lsr #1
   19e2c:	bne	19e40 <argp_state_help@@Base+0x40>
   19e30:	add	sp, sp, #12
   19e34:	ldrd	r4, [sp]
   19e38:	add	sp, sp, #8
   19e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   19e40:	ldr	r0, [r4, #40]	; 0x28
   19e44:	tst	r3, #64	; 0x40
   19e48:	mov	r2, r1
   19e4c:	orrne	r5, r5, #128	; 0x80
   19e50:	mov	r1, r4
   19e54:	mov	r3, r5
   19e58:	str	r0, [sp]
   19e5c:	ldr	r0, [r4]
   19e60:	bl	187e4 <argp_failure@@Base+0x21c>
   19e64:	ldr	r3, [r4, #16]
   19e68:	tst	r3, #32
   19e6c:	bne	19e30 <argp_state_help@@Base+0x30>
   19e70:	ands	r0, r5, #256	; 0x100
   19e74:	bne	19eb0 <argp_state_help@@Base+0xb0>
   19e78:	tst	r5, #512	; 0x200
   19e7c:	beq	19e30 <argp_state_help@@Base+0x30>
   19e80:	bl	1125c <exit@plt>
   19e84:	cmp	r1, #0
   19e88:	beq	19e30 <argp_state_help@@Base+0x30>
   19e8c:	movw	r3, #10416	; 0x28b0
   19e90:	movt	r3, #3
   19e94:	ldr	ip, [r3]
   19e98:	mov	r2, r1
   19e9c:	mov	r3, r5
   19ea0:	mov	r1, r4
   19ea4:	str	ip, [sp]
   19ea8:	bl	187e4 <argp_failure@@Base+0x21c>
   19eac:	b	19e70 <argp_state_help@@Base+0x70>
   19eb0:	movw	r3, #10412	; 0x28ac
   19eb4:	movt	r3, #3
   19eb8:	ldr	r0, [r3]
   19ebc:	bl	1125c <exit@plt>

00019ec0 <argp_error@@Base>:
   19ec0:	push	{r1, r2, r3}
   19ec4:	strd	r4, [sp, #-12]!
   19ec8:	subs	r5, r0, #0
   19ecc:	str	lr, [sp, #8]
   19ed0:	sub	sp, sp, #8
   19ed4:	beq	19fac <argp_error@@Base+0xec>
   19ed8:	ldr	r3, [r5, #16]
   19edc:	tst	r3, #2
   19ee0:	bne	19f94 <argp_error@@Base+0xd4>
   19ee4:	ldr	r4, [r5, #44]	; 0x2c
   19ee8:	cmp	r4, #0
   19eec:	beq	19f94 <argp_error@@Base+0xd4>
   19ef0:	mov	r0, r4
   19ef4:	bl	1131c <flockfile@plt>
   19ef8:	ldr	r0, [r5, #40]	; 0x28
   19efc:	add	r3, sp, #24
   19f00:	str	r3, [sp, #4]
   19f04:	mov	r1, r4
   19f08:	bl	110d0 <fputs_unlocked@plt>
   19f0c:	ldr	r3, [r4, #20]
   19f10:	ldr	r2, [r4, #24]
   19f14:	cmp	r3, r2
   19f18:	addcc	r1, r3, #1
   19f1c:	movcc	r2, #58	; 0x3a
   19f20:	strcc	r1, [r4, #20]
   19f24:	strbcc	r2, [r3]
   19f28:	bcs	19ff0 <argp_error@@Base+0x130>
   19f2c:	ldr	r3, [r4, #20]
   19f30:	ldr	r2, [r4, #24]
   19f34:	cmp	r3, r2
   19f38:	addcc	r1, r3, #1
   19f3c:	movcc	r2, #32
   19f40:	strcc	r1, [r4, #20]
   19f44:	strbcc	r2, [r3]
   19f48:	bcs	1a000 <argp_error@@Base+0x140>
   19f4c:	mov	r0, r4
   19f50:	ldr	r2, [sp, #4]
   19f54:	ldr	r1, [sp, #20]
   19f58:	bl	112ec <vfprintf@plt>
   19f5c:	ldr	r3, [r4, #20]
   19f60:	ldr	r2, [r4, #24]
   19f64:	cmp	r3, r2
   19f68:	addcc	r1, r3, #1
   19f6c:	movcc	r2, #10
   19f70:	strcc	r1, [r4, #20]
   19f74:	strbcc	r2, [r3]
   19f78:	bcs	19fe0 <argp_error@@Base+0x120>
   19f7c:	mov	r0, r5
   19f80:	mov	r2, #260	; 0x104
   19f84:	mov	r1, r4
   19f88:	bl	19e00 <argp_state_help@@Base>
   19f8c:	mov	r0, r4
   19f90:	bl	111b4 <funlockfile@plt>
   19f94:	add	sp, sp, #8
   19f98:	ldrd	r4, [sp]
   19f9c:	ldr	lr, [sp, #8]
   19fa0:	add	sp, sp, #12
   19fa4:	add	sp, sp, #12
   19fa8:	bx	lr
   19fac:	movw	r3, #10424	; 0x28b8
   19fb0:	movt	r3, #3
   19fb4:	ldr	r4, [r3]
   19fb8:	cmp	r4, #0
   19fbc:	beq	19f94 <argp_error@@Base+0xd4>
   19fc0:	mov	r0, r4
   19fc4:	bl	1131c <flockfile@plt>
   19fc8:	add	r2, sp, #24
   19fcc:	movw	r3, #10416	; 0x28b0
   19fd0:	movt	r3, #3
   19fd4:	str	r2, [sp, #4]
   19fd8:	ldr	r0, [r3]
   19fdc:	b	19f04 <argp_error@@Base+0x44>
   19fe0:	mov	r1, #10
   19fe4:	mov	r0, r4
   19fe8:	bl	112d4 <__overflow@plt>
   19fec:	b	19f7c <argp_error@@Base+0xbc>
   19ff0:	mov	r1, #58	; 0x3a
   19ff4:	mov	r0, r4
   19ff8:	bl	112d4 <__overflow@plt>
   19ffc:	b	19f2c <argp_error@@Base+0x6c>
   1a000:	mov	r1, #32
   1a004:	mov	r0, r4
   1a008:	bl	112d4 <__overflow@plt>
   1a00c:	b	19f4c <argp_error@@Base+0x8c>
   1a010:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a014:	ldr	r2, [r1]
   1a018:	ldr	ip, [r1, #32]
   1a01c:	strd	r6, [sp, #8]
   1a020:	strd	r8, [sp, #16]
   1a024:	strd	sl, [sp, #24]
   1a028:	str	lr, [sp, #32]
   1a02c:	sub	sp, sp, #36	; 0x24
   1a030:	str	r2, [sp, #24]
   1a034:	str	r1, [sp, #28]
   1a038:	ldr	r1, [r1, #28]
   1a03c:	cmp	r1, ip
   1a040:	cmplt	ip, r2
   1a044:	str	r1, [sp, #20]
   1a048:	bge	1a148 <argp_error@@Base+0x288>
   1a04c:	mov	r3, r1
   1a050:	lsl	r1, ip, #2
   1a054:	mov	lr, r2
   1a058:	mov	r2, r1
   1a05c:	add	r2, r2, #8
   1a060:	str	r1, [sp, #8]
   1a064:	add	r1, r0, r1
   1a068:	str	r1, [sp, #4]
   1a06c:	str	r2, [sp, #12]
   1a070:	sub	r2, r1, #8
   1a074:	str	r2, [sp, #16]
   1a078:	sub	r1, lr, ip
   1a07c:	sub	r8, ip, r3
   1a080:	cmp	r1, r8
   1a084:	ble	1a180 <argp_error@@Base+0x2c0>
   1a088:	lsl	r2, r3, #2
   1a08c:	sub	lr, lr, r8
   1a090:	sub	r5, r8, #1
   1a094:	add	r1, lr, #2
   1a098:	lsl	r6, lr, #2
   1a09c:	cmp	r2, r1, lsl #2
   1a0a0:	add	r7, r2, #8
   1a0a4:	add	r2, r0, r2
   1a0a8:	add	r1, r0, r6
   1a0ac:	movge	r4, #1
   1a0b0:	movlt	r4, #0
   1a0b4:	cmp	r6, r7
   1a0b8:	orrge	r4, r4, #1
   1a0bc:	orr	r9, r1, r2
   1a0c0:	cmp	r5, #3
   1a0c4:	movls	r4, #0
   1a0c8:	andhi	r4, r4, #1
   1a0cc:	tst	r9, #7
   1a0d0:	movne	r4, #0
   1a0d4:	cmp	r4, #0
   1a0d8:	beq	1a254 <argp_error@@Base+0x394>
   1a0dc:	lsr	fp, r8, #1
   1a0e0:	sub	r2, r2, #8
   1a0e4:	sub	sl, r1, #8
   1a0e8:	mov	r9, r2
   1a0ec:	add	fp, r1, fp, lsl #3
   1a0f0:	ldrd	r4, [r2, #8]!
   1a0f4:	ldrd	r6, [sl, #8]!
   1a0f8:	strd	r6, [r9, #8]!
   1a0fc:	strd	r4, [r1], #8
   1a100:	cmp	r1, fp
   1a104:	bne	1a0f0 <argp_error@@Base+0x230>
   1a108:	bic	r2, r8, #1
   1a10c:	cmp	r8, r2
   1a110:	beq	1a12c <argp_error@@Base+0x26c>
   1a114:	add	r1, r3, r2
   1a118:	add	r2, lr, r2
   1a11c:	ldr	r4, [r0, r1, lsl #2]
   1a120:	ldr	r5, [r0, r2, lsl #2]
   1a124:	str	r5, [r0, r1, lsl #2]
   1a128:	str	r4, [r0, r2, lsl #2]
   1a12c:	cmp	lr, ip
   1a130:	movle	r2, #0
   1a134:	movgt	r2, #1
   1a138:	cmp	r3, ip
   1a13c:	movge	r2, #0
   1a140:	cmp	r2, #0
   1a144:	bne	1a078 <argp_error@@Base+0x1b8>
   1a148:	ldr	r3, [sp, #24]
   1a14c:	ldr	r2, [sp, #28]
   1a150:	sub	ip, r3, ip
   1a154:	str	r3, [r2, #32]
   1a158:	ldr	r3, [sp, #20]
   1a15c:	add	ip, ip, r3
   1a160:	str	ip, [r2, #28]
   1a164:	add	sp, sp, #36	; 0x24
   1a168:	ldrd	r4, [sp]
   1a16c:	ldrd	r6, [sp, #8]
   1a170:	ldrd	r8, [sp, #16]
   1a174:	ldrd	sl, [sp, #24]
   1a178:	add	sp, sp, #32
   1a17c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a180:	ldr	r4, [sp, #8]
   1a184:	lsl	r5, r3, #2
   1a188:	sub	r7, r1, #1
   1a18c:	ldr	r8, [sp, #12]
   1a190:	mov	r6, r5
   1a194:	add	r5, r5, #8
   1a198:	add	r2, r0, r6
   1a19c:	cmp	r8, r6
   1a1a0:	cmpgt	r5, r4
   1a1a4:	ldr	r8, [sp, #4]
   1a1a8:	movle	r5, #1
   1a1ac:	movgt	r5, #0
   1a1b0:	cmp	r7, #3
   1a1b4:	movls	r4, #0
   1a1b8:	andhi	r4, r5, #1
   1a1bc:	orr	r6, r2, r8
   1a1c0:	tst	r6, #7
   1a1c4:	movne	r4, #0
   1a1c8:	cmp	r4, #0
   1a1cc:	beq	1a22c <argp_error@@Base+0x36c>
   1a1d0:	lsr	fp, r1, #1
   1a1d4:	ldr	sl, [sp, #16]
   1a1d8:	sub	r2, r2, #8
   1a1dc:	mov	r9, r2
   1a1e0:	add	fp, r8, fp, lsl #3
   1a1e4:	ldrd	r4, [r2, #8]!
   1a1e8:	ldrd	r6, [sl, #8]!
   1a1ec:	strd	r6, [r9, #8]!
   1a1f0:	strd	r4, [r8], #8
   1a1f4:	cmp	r8, fp
   1a1f8:	bne	1a1e4 <argp_error@@Base+0x324>
   1a1fc:	bic	r2, r1, #1
   1a200:	cmp	r1, r2
   1a204:	addeq	r3, r1, r3
   1a208:	beq	1a12c <argp_error@@Base+0x26c>
   1a20c:	add	r4, r3, r2
   1a210:	add	r2, ip, r2
   1a214:	ldr	r5, [r0, r4, lsl #2]
   1a218:	add	r3, r1, r3
   1a21c:	ldr	r6, [r0, r2, lsl #2]
   1a220:	str	r6, [r0, r4, lsl #2]
   1a224:	str	r5, [r0, r2, lsl #2]
   1a228:	b	1a12c <argp_error@@Base+0x26c>
   1a22c:	add	r3, r1, r3
   1a230:	ldr	r1, [sp, #4]
   1a234:	add	r6, r0, r3, lsl #2
   1a238:	ldr	r5, [r1]
   1a23c:	ldr	r4, [r2]
   1a240:	str	r5, [r2], #4
   1a244:	cmp	r2, r6
   1a248:	str	r4, [r1], #4
   1a24c:	bne	1a238 <argp_error@@Base+0x378>
   1a250:	b	1a12c <argp_error@@Base+0x26c>
   1a254:	add	r8, r3, r8
   1a258:	add	r8, r0, r8, lsl #2
   1a25c:	ldr	r5, [r1]
   1a260:	ldr	r4, [r2]
   1a264:	str	r5, [r2], #4
   1a268:	cmp	r8, r2
   1a26c:	str	r4, [r1], #4
   1a270:	bne	1a25c <argp_error@@Base+0x39c>
   1a274:	b	1a12c <argp_error@@Base+0x26c>
   1a278:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a27c:	strd	r6, [sp, #8]
   1a280:	strd	r8, [sp, #16]
   1a284:	strd	sl, [sp, #24]
   1a288:	str	lr, [sp, #32]
   1a28c:	sub	sp, sp, #52	; 0x34
   1a290:	str	r3, [sp, #8]
   1a294:	ldr	r3, [sp, #96]	; 0x60
   1a298:	str	r1, [sp, #20]
   1a29c:	str	r2, [sp, #28]
   1a2a0:	str	r0, [sp, #32]
   1a2a4:	ldr	r9, [r3, #20]
   1a2a8:	ldrb	r5, [r9]
   1a2ac:	mov	r8, r9
   1a2b0:	str	r9, [sp, #24]
   1a2b4:	cmp	r5, #61	; 0x3d
   1a2b8:	cmpne	r5, #0
   1a2bc:	movne	r5, #1
   1a2c0:	moveq	r5, #0
   1a2c4:	beq	1a2dc <argp_error@@Base+0x41c>
   1a2c8:	ldrb	r3, [r8, #1]!
   1a2cc:	cmp	r3, #0
   1a2d0:	cmpne	r3, #61	; 0x3d
   1a2d4:	bne	1a2c8 <argp_error@@Base+0x408>
   1a2d8:	sub	r5, r8, r9
   1a2dc:	ldr	r3, [sp, #8]
   1a2e0:	ldr	r3, [r3]
   1a2e4:	cmp	r3, #0
   1a2e8:	str	r3, [sp, #12]
   1a2ec:	beq	1a4e0 <argp_error@@Base+0x620>
   1a2f0:	ldr	fp, [sp, #8]
   1a2f4:	mov	r4, r3
   1a2f8:	mov	r6, #0
   1a2fc:	str	fp, [sp, #16]
   1a300:	b	1a308 <argp_error@@Base+0x448>
   1a304:	mov	r6, r7
   1a308:	mov	r2, r5
   1a30c:	mov	r1, r9
   1a310:	mov	r0, r4
   1a314:	add	r7, r6, #1
   1a318:	bl	11388 <strncmp@plt>
   1a31c:	cmp	r0, #0
   1a320:	mov	sl, fp
   1a324:	mov	r0, r4
   1a328:	bne	1a338 <argp_error@@Base+0x478>
   1a32c:	bl	11268 <strlen@plt>
   1a330:	cmp	r0, r5
   1a334:	beq	1a458 <argp_error@@Base+0x598>
   1a338:	ldr	r4, [fp, #16]!
   1a33c:	cmp	r4, #0
   1a340:	bne	1a304 <argp_error@@Base+0x444>
   1a344:	ldr	r3, [sp, #100]	; 0x64
   1a348:	cmp	r3, #0
   1a34c:	ldr	r3, [sp, #92]	; 0x5c
   1a350:	beq	1a3ec <argp_error@@Base+0x52c>
   1a354:	cmp	r3, #0
   1a358:	bne	1a558 <argp_error@@Base+0x698>
   1a35c:	ldr	r0, [sp, #12]
   1a360:	mov	r9, r3
   1a364:	mov	sl, r3
   1a368:	mov	fp, #1
   1a36c:	str	r3, [sp, #40]	; 0x28
   1a370:	ldr	r1, [sp, #24]
   1a374:	str	r7, [sp, #24]
   1a378:	mov	r7, r5
   1a37c:	ldr	r5, [sp, #16]
   1a380:	str	r6, [sp, #16]
   1a384:	ldr	r6, [sp, #96]	; 0x60
   1a388:	str	r3, [sp, #44]	; 0x2c
   1a38c:	mvn	r3, #0
   1a390:	str	r3, [sp, #36]	; 0x24
   1a394:	mov	r2, r7
   1a398:	bl	11388 <strncmp@plt>
   1a39c:	cmp	r0, #0
   1a3a0:	bne	1a3d4 <argp_error@@Base+0x514>
   1a3a4:	cmp	sl, #0
   1a3a8:	beq	1a73c <argp_error@@Base+0x87c>
   1a3ac:	ldr	r2, [r5, #4]
   1a3b0:	ldr	r1, [sl, #4]
   1a3b4:	cmp	r1, r2
   1a3b8:	beq	1a85c <argp_error@@Base+0x99c>
   1a3bc:	ldr	r3, [sp, #40]	; 0x28
   1a3c0:	cmp	r3, #0
   1a3c4:	bne	1a3d4 <argp_error@@Base+0x514>
   1a3c8:	cmp	r4, #0
   1a3cc:	beq	1a7d4 <argp_error@@Base+0x914>
   1a3d0:	strb	fp, [r4, r9]
   1a3d4:	ldr	r0, [r5, #16]!
   1a3d8:	add	r9, r9, #1
   1a3dc:	cmp	r0, #0
   1a3e0:	beq	1a66c <argp_error@@Base+0x7ac>
   1a3e4:	ldr	r1, [r6, #20]
   1a3e8:	b	1a394 <argp_error@@Base+0x4d4>
   1a3ec:	cmp	r3, #0
   1a3f0:	beq	1a5d0 <argp_error@@Base+0x710>
   1a3f4:	ldr	r0, [sp, #12]
   1a3f8:	mvn	r3, #0
   1a3fc:	ldr	r6, [sp, #100]	; 0x64
   1a400:	str	r3, [sp, #36]	; 0x24
   1a404:	ldr	sl, [sp, #16]
   1a408:	mov	r7, r6
   1a40c:	mov	r2, r5
   1a410:	mov	r1, r9
   1a414:	bl	11388 <strncmp@plt>
   1a418:	cmp	r0, #0
   1a41c:	bne	1a430 <argp_error@@Base+0x570>
   1a420:	cmp	r4, #0
   1a424:	moveq	r4, sl
   1a428:	movne	r6, #1
   1a42c:	streq	r7, [sp, #36]	; 0x24
   1a430:	ldr	r0, [sl, #16]!
   1a434:	add	r7, r7, #1
   1a438:	cmp	r0, #0
   1a43c:	bne	1a40c <argp_error@@Base+0x54c>
   1a440:	cmp	r6, #0
   1a444:	moveq	sl, r4
   1a448:	bne	1a6d4 <argp_error@@Base+0x814>
   1a44c:	cmp	sl, #0
   1a450:	ldrne	r6, [sp, #36]	; 0x24
   1a454:	beq	1a4e0 <argp_error@@Base+0x620>
   1a458:	ldr	r3, [sp, #96]	; 0x60
   1a45c:	mov	r2, #0
   1a460:	ldr	r1, [sp, #96]	; 0x60
   1a464:	ldr	r0, [sl, #4]
   1a468:	ldr	r3, [r3]
   1a46c:	str	r2, [r1, #20]
   1a470:	add	r2, r3, #1
   1a474:	str	r2, [r1]
   1a478:	ldrb	r1, [r8]
   1a47c:	cmp	r1, #0
   1a480:	bne	1a4c8 <argp_error@@Base+0x608>
   1a484:	cmp	r0, #1
   1a488:	beq	1a708 <argp_error@@Base+0x848>
   1a48c:	ldr	r3, [sp, #88]	; 0x58
   1a490:	cmp	r3, #0
   1a494:	strne	r6, [r3]
   1a498:	ldr	r3, [sl, #8]
   1a49c:	ldr	r0, [sl, #12]
   1a4a0:	cmp	r3, #0
   1a4a4:	strne	r0, [r3]
   1a4a8:	movne	r0, #0
   1a4ac:	add	sp, sp, #52	; 0x34
   1a4b0:	ldrd	r4, [sp]
   1a4b4:	ldrd	r6, [sp, #8]
   1a4b8:	ldrd	r8, [sp, #16]
   1a4bc:	ldrd	sl, [sp, #24]
   1a4c0:	add	sp, sp, #32
   1a4c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4c8:	cmp	r0, #0
   1a4cc:	beq	1a748 <argp_error@@Base+0x888>
   1a4d0:	ldr	r3, [sp, #96]	; 0x60
   1a4d4:	add	r8, r8, #1
   1a4d8:	str	r8, [r3, #12]
   1a4dc:	b	1a48c <argp_error@@Base+0x5cc>
   1a4e0:	ldr	r3, [sp, #92]	; 0x5c
   1a4e4:	cmp	r3, #0
   1a4e8:	beq	1a524 <argp_error@@Base+0x664>
   1a4ec:	ldr	r2, [sp, #20]
   1a4f0:	ldr	r3, [sp, #96]	; 0x60
   1a4f4:	ldr	r3, [r3]
   1a4f8:	ldr	r3, [r2, r3, lsl #2]
   1a4fc:	ldrb	r3, [r3, #1]
   1a500:	cmp	r3, #45	; 0x2d
   1a504:	beq	1a524 <argp_error@@Base+0x664>
   1a508:	ldr	r0, [sp, #28]
   1a50c:	ldr	r3, [sp, #96]	; 0x60
   1a510:	ldr	r3, [r3, #20]
   1a514:	ldrb	r1, [r3]
   1a518:	bl	11274 <strchr@plt>
   1a51c:	cmp	r0, #0
   1a520:	bne	1a798 <argp_error@@Base+0x8d8>
   1a524:	ldr	r3, [sp, #100]	; 0x64
   1a528:	cmp	r3, #0
   1a52c:	bne	1a638 <argp_error@@Base+0x778>
   1a530:	ldr	r3, [sp, #96]	; 0x60
   1a534:	mov	r2, #0
   1a538:	mov	r0, #63	; 0x3f
   1a53c:	ldr	r1, [sp, #96]	; 0x60
   1a540:	ldr	r3, [r3]
   1a544:	str	r2, [r1, #8]
   1a548:	str	r2, [r1, #20]
   1a54c:	add	r3, r3, #1
   1a550:	str	r3, [r1]
   1a554:	b	1a4ac <argp_error@@Base+0x5ec>
   1a558:	ldr	r0, [sp, #12]
   1a55c:	mvn	r3, #0
   1a560:	mov	sl, r4
   1a564:	mov	r9, r4
   1a568:	ldr	fp, [sp, #16]
   1a56c:	str	r3, [sp, #36]	; 0x24
   1a570:	ldr	r1, [sp, #24]
   1a574:	str	r7, [sp, #24]
   1a578:	ldr	r7, [sp, #96]	; 0x60
   1a57c:	str	r4, [sp, #40]	; 0x28
   1a580:	str	r4, [sp, #44]	; 0x2c
   1a584:	mov	r2, r5
   1a588:	bl	11388 <strncmp@plt>
   1a58c:	cmp	r0, #0
   1a590:	bne	1a5b8 <argp_error@@Base+0x6f8>
   1a594:	cmp	sl, #0
   1a598:	beq	1a730 <argp_error@@Base+0x870>
   1a59c:	ldr	r3, [sp, #40]	; 0x28
   1a5a0:	cmp	r3, #0
   1a5a4:	bne	1a5b8 <argp_error@@Base+0x6f8>
   1a5a8:	cmp	r4, #0
   1a5ac:	beq	1a7a0 <argp_error@@Base+0x8e0>
   1a5b0:	mov	r3, #1
   1a5b4:	strb	r3, [r4, r9]
   1a5b8:	ldr	r0, [fp, #16]!
   1a5bc:	add	r9, r9, #1
   1a5c0:	cmp	r0, #0
   1a5c4:	beq	1a670 <argp_error@@Base+0x7b0>
   1a5c8:	ldr	r1, [r7, #20]
   1a5cc:	b	1a584 <argp_error@@Base+0x6c4>
   1a5d0:	mov	r6, r3
   1a5d4:	mov	r7, r3
   1a5d8:	ldr	r0, [sp, #12]
   1a5dc:	mvn	r3, #0
   1a5e0:	ldr	sl, [sp, #16]
   1a5e4:	str	r3, [sp, #36]	; 0x24
   1a5e8:	b	1a610 <argp_error@@Base+0x750>
   1a5ec:	ldr	r2, [r4, #4]
   1a5f0:	ldr	r3, [sl, #4]
   1a5f4:	cmp	r2, r3
   1a5f8:	beq	1a838 <argp_error@@Base+0x978>
   1a5fc:	mov	r6, #1
   1a600:	ldr	r0, [sl, #16]!
   1a604:	add	r7, r7, #1
   1a608:	cmp	r0, #0
   1a60c:	beq	1a440 <argp_error@@Base+0x580>
   1a610:	mov	r2, r5
   1a614:	mov	r1, r9
   1a618:	bl	11388 <strncmp@plt>
   1a61c:	cmp	r0, #0
   1a620:	bne	1a600 <argp_error@@Base+0x740>
   1a624:	cmp	r4, #0
   1a628:	bne	1a5ec <argp_error@@Base+0x72c>
   1a62c:	mov	r4, sl
   1a630:	str	r7, [sp, #36]	; 0x24
   1a634:	b	1a600 <argp_error@@Base+0x740>
   1a638:	ldr	r3, [sp, #96]	; 0x60
   1a63c:	movw	r0, #10424	; 0x28b8
   1a640:	movt	r0, #3
   1a644:	movw	r1, #58416	; 0xe430
   1a648:	movt	r1, #1
   1a64c:	ldr	r0, [r0]
   1a650:	ldr	ip, [r3, #20]
   1a654:	ldr	r3, [sp, #20]
   1a658:	ldr	r2, [r3]
   1a65c:	str	ip, [sp]
   1a660:	ldr	r3, [sp, #104]	; 0x68
   1a664:	bl	11280 <fprintf@plt>
   1a668:	b	1a530 <argp_error@@Base+0x670>
   1a66c:	ldr	r6, [sp, #16]
   1a670:	ldr	r3, [sp, #40]	; 0x28
   1a674:	orrs	r3, r4, r3
   1a678:	beq	1a44c <argp_error@@Base+0x58c>
   1a67c:	ldr	r3, [sp, #40]	; 0x28
   1a680:	movw	r5, #10424	; 0x28b8
   1a684:	movt	r5, #3
   1a688:	ldr	r0, [r5]
   1a68c:	cmp	r3, #0
   1a690:	beq	1a880 <argp_error@@Base+0x9c0>
   1a694:	ldr	r2, [sp, #20]
   1a698:	movw	r1, #58328	; 0xe3d8
   1a69c:	movt	r1, #1
   1a6a0:	ldr	r3, [sp, #96]	; 0x60
   1a6a4:	ldr	r2, [r2]
   1a6a8:	ldr	ip, [r3, #20]
   1a6ac:	ldr	r3, [sp, #104]	; 0x68
   1a6b0:	str	ip, [sp]
   1a6b4:	bl	11280 <fprintf@plt>
   1a6b8:	ldr	r3, [sp, #44]	; 0x2c
   1a6bc:	cmp	r3, #0
   1a6c0:	beq	1a6cc <argp_error@@Base+0x80c>
   1a6c4:	mov	r0, r4
   1a6c8:	bl	144f8 <argp_parse@@Base+0x1038>
   1a6cc:	ldr	r3, [sp, #96]	; 0x60
   1a6d0:	ldr	r9, [r3, #20]
   1a6d4:	mov	r0, r9
   1a6d8:	bl	11268 <strlen@plt>
   1a6dc:	ldr	r3, [sp, #96]	; 0x60
   1a6e0:	add	r9, r9, r0
   1a6e4:	mov	r2, #0
   1a6e8:	mov	r0, #63	; 0x3f
   1a6ec:	ldr	r1, [sp, #96]	; 0x60
   1a6f0:	ldr	r3, [r3]
   1a6f4:	str	r2, [r1, #8]
   1a6f8:	str	r9, [r1, #20]
   1a6fc:	add	r3, r3, #1
   1a700:	str	r3, [r1]
   1a704:	b	1a4ac <argp_error@@Base+0x5ec>
   1a708:	ldr	r1, [sp, #32]
   1a70c:	cmp	r2, r1
   1a710:	bge	1a808 <argp_error@@Base+0x948>
   1a714:	ldr	r1, [sp, #20]
   1a718:	add	r3, r3, #2
   1a71c:	ldr	r2, [r1, r2, lsl #2]
   1a720:	ldr	r1, [sp, #96]	; 0x60
   1a724:	str	r3, [r1]
   1a728:	str	r2, [r1, #12]
   1a72c:	b	1a48c <argp_error@@Base+0x5cc>
   1a730:	mov	sl, fp
   1a734:	str	r9, [sp, #36]	; 0x24
   1a738:	b	1a5b8 <argp_error@@Base+0x6f8>
   1a73c:	mov	sl, r5
   1a740:	str	r9, [sp, #36]	; 0x24
   1a744:	b	1a3d4 <argp_error@@Base+0x514>
   1a748:	ldr	r3, [sp, #100]	; 0x64
   1a74c:	cmp	r3, #0
   1a750:	bne	1a768 <argp_error@@Base+0x8a8>
   1a754:	ldr	r3, [sl, #12]
   1a758:	mov	r0, #63	; 0x3f
   1a75c:	ldr	r2, [sp, #96]	; 0x60
   1a760:	str	r3, [r2, #8]
   1a764:	b	1a4ac <argp_error@@Base+0x5ec>
   1a768:	ldr	ip, [sl]
   1a76c:	movw	r0, #10424	; 0x28b8
   1a770:	movt	r0, #3
   1a774:	movw	r1, #58448	; 0xe450
   1a778:	movt	r1, #1
   1a77c:	ldr	r3, [sp, #20]
   1a780:	ldr	r0, [r0]
   1a784:	ldr	r2, [r3]
   1a788:	str	ip, [sp]
   1a78c:	ldr	r3, [sp, #104]	; 0x68
   1a790:	bl	11280 <fprintf@plt>
   1a794:	b	1a754 <argp_error@@Base+0x894>
   1a798:	mvn	r0, #0
   1a79c:	b	1a4ac <argp_error@@Base+0x5ec>
   1a7a0:	ldr	r0, [sp, #24]
   1a7a4:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1a7a8:	subs	r4, r0, #0
   1a7ac:	beq	1a944 <argp_error@@Base+0xa84>
   1a7b0:	ldr	r2, [sp, #24]
   1a7b4:	ldr	r1, [sp, #40]	; 0x28
   1a7b8:	bl	112b0 <memset@plt>
   1a7bc:	mov	r3, #1
   1a7c0:	mov	r2, #1
   1a7c4:	str	r3, [sp, #44]	; 0x2c
   1a7c8:	ldr	r3, [sp, #36]	; 0x24
   1a7cc:	strb	r2, [r4, r3]
   1a7d0:	b	1a5b0 <argp_error@@Base+0x6f0>
   1a7d4:	ldr	r0, [sp, #24]
   1a7d8:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1a7dc:	subs	r4, r0, #0
   1a7e0:	mov	r3, #1
   1a7e4:	streq	r3, [sp, #40]	; 0x28
   1a7e8:	beq	1a3d4 <argp_error@@Base+0x514>
   1a7ec:	ldr	r2, [sp, #24]
   1a7f0:	str	r3, [sp, #44]	; 0x2c
   1a7f4:	ldr	r1, [sp, #40]	; 0x28
   1a7f8:	bl	112b0 <memset@plt>
   1a7fc:	ldr	r3, [sp, #36]	; 0x24
   1a800:	strb	fp, [r4, r3]
   1a804:	b	1a3d0 <argp_error@@Base+0x510>
   1a808:	ldr	r3, [sp, #100]	; 0x64
   1a80c:	cmp	r3, #0
   1a810:	bne	1a914 <argp_error@@Base+0xa54>
   1a814:	ldr	r3, [sl, #12]
   1a818:	ldr	r2, [sp, #96]	; 0x60
   1a81c:	str	r3, [r2, #8]
   1a820:	ldr	r3, [sp, #28]
   1a824:	ldrb	r3, [r3]
   1a828:	cmp	r3, #58	; 0x3a
   1a82c:	moveq	r0, #58	; 0x3a
   1a830:	movne	r0, #63	; 0x3f
   1a834:	b	1a4ac <argp_error@@Base+0x5ec>
   1a838:	ldr	r2, [r4, #8]
   1a83c:	ldr	r3, [sl, #8]
   1a840:	cmp	r2, r3
   1a844:	bne	1a5fc <argp_error@@Base+0x73c>
   1a848:	ldr	r2, [r4, #12]
   1a84c:	ldr	r3, [sl, #12]
   1a850:	cmp	r2, r3
   1a854:	movne	r6, #1
   1a858:	b	1a600 <argp_error@@Base+0x740>
   1a85c:	ldr	r2, [r5, #8]
   1a860:	ldr	r1, [sl, #8]
   1a864:	cmp	r1, r2
   1a868:	bne	1a3bc <argp_error@@Base+0x4fc>
   1a86c:	ldr	r2, [r5, #12]
   1a870:	ldr	r1, [sl, #12]
   1a874:	cmp	r1, r2
   1a878:	bne	1a3bc <argp_error@@Base+0x4fc>
   1a87c:	b	1a3d4 <argp_error@@Base+0x514>
   1a880:	bl	1131c <flockfile@plt>
   1a884:	ldr	r2, [sp, #20]
   1a888:	movw	r1, #58360	; 0xe3f8
   1a88c:	movt	r1, #1
   1a890:	movw	r7, #58408	; 0xe428
   1a894:	movt	r7, #1
   1a898:	ldr	r3, [sp, #96]	; 0x60
   1a89c:	add	r6, r4, r6
   1a8a0:	sub	r8, r4, #1
   1a8a4:	ldr	r2, [r2]
   1a8a8:	ldr	r0, [r3, #20]
   1a8ac:	ldr	r3, [sp, #104]	; 0x68
   1a8b0:	str	r0, [sp]
   1a8b4:	ldr	r0, [r5]
   1a8b8:	bl	11280 <fprintf@plt>
   1a8bc:	ldr	r0, [r5]
   1a8c0:	ldr	sl, [sp, #8]
   1a8c4:	ldr	r9, [sp, #40]	; 0x28
   1a8c8:	b	1a8d8 <argp_error@@Base+0xa18>
   1a8cc:	cmp	r6, r8
   1a8d0:	add	r9, r9, #1
   1a8d4:	beq	1a8fc <argp_error@@Base+0xa3c>
   1a8d8:	ldrb	r3, [r8, #1]!
   1a8dc:	cmp	r3, #0
   1a8e0:	beq	1a8cc <argp_error@@Base+0xa0c>
   1a8e4:	mov	r1, r7
   1a8e8:	ldr	r3, [sl, r9, lsl #4]
   1a8ec:	ldr	r2, [sp, #104]	; 0x68
   1a8f0:	bl	11280 <fprintf@plt>
   1a8f4:	ldr	r0, [r5]
   1a8f8:	b	1a8cc <argp_error@@Base+0xa0c>
   1a8fc:	mov	r1, r0
   1a900:	mov	r0, #10
   1a904:	bl	112f8 <fputc@plt>
   1a908:	ldr	r0, [r5]
   1a90c:	bl	111b4 <funlockfile@plt>
   1a910:	b	1a6b8 <argp_error@@Base+0x7f8>
   1a914:	ldr	ip, [sl]
   1a918:	movw	r0, #10424	; 0x28b8
   1a91c:	movt	r0, #3
   1a920:	movw	r1, #58496	; 0xe480
   1a924:	movt	r1, #1
   1a928:	ldr	r3, [sp, #20]
   1a92c:	ldr	r0, [r0]
   1a930:	ldr	r2, [r3]
   1a934:	str	ip, [sp]
   1a938:	ldr	r3, [sp, #104]	; 0x68
   1a93c:	bl	11280 <fprintf@plt>
   1a940:	b	1a814 <argp_error@@Base+0x954>
   1a944:	mov	r3, #1
   1a948:	str	r3, [sp, #40]	; 0x28
   1a94c:	b	1a5b8 <argp_error@@Base+0x6f8>
   1a950:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a954:	subs	r5, r0, #0
   1a958:	strd	r6, [sp, #8]
   1a95c:	strd	r8, [sp, #16]
   1a960:	strd	sl, [sp, #24]
   1a964:	str	lr, [sp, #32]
   1a968:	sub	sp, sp, #36	; 0x24
   1a96c:	ldr	r4, [sp, #80]	; 0x50
   1a970:	ldr	r7, [r4, #4]
   1a974:	ble	1ab68 <argp_error@@Base+0xca8>
   1a978:	mov	r6, r2
   1a97c:	mov	sl, r3
   1a980:	ldr	r2, [r4]
   1a984:	mov	r3, #0
   1a988:	mov	r9, r1
   1a98c:	str	r3, [r4, #12]
   1a990:	cmp	r2, r3
   1a994:	beq	1ac10 <argp_error@@Base+0xd50>
   1a998:	ldr	r3, [r4, #16]
   1a99c:	cmp	r3, #0
   1a9a0:	bne	1ab34 <argp_error@@Base+0xc74>
   1a9a4:	mov	r3, #0
   1a9a8:	str	r3, [r4, #20]
   1a9ac:	str	r2, [r4, #28]
   1a9b0:	str	r2, [r4, #32]
   1a9b4:	ldrb	r2, [r6]
   1a9b8:	cmp	r2, #45	; 0x2d
   1a9bc:	moveq	r2, #2
   1a9c0:	addeq	r6, r6, #1
   1a9c4:	streq	r2, [r4, #24]
   1a9c8:	beq	1a9f0 <argp_error@@Base+0xb30>
   1a9cc:	cmp	r2, #43	; 0x2b
   1a9d0:	addeq	r6, r6, #1
   1a9d4:	streq	r3, [r4, #24]
   1a9d8:	beq	1a9f0 <argp_error@@Base+0xb30>
   1a9dc:	ldr	r2, [sp, #84]	; 0x54
   1a9e0:	cmp	r2, #0
   1a9e4:	beq	1ad40 <argp_error@@Base+0xe80>
   1a9e8:	mov	r2, #0
   1a9ec:	str	r2, [r4, #24]
   1a9f0:	mov	r2, #1
   1a9f4:	str	r2, [r4, #16]
   1a9f8:	ldrb	r2, [r6]
   1a9fc:	cmp	r2, #58	; 0x3a
   1aa00:	moveq	r7, #0
   1aa04:	cmp	r3, #0
   1aa08:	beq	1aa9c <argp_error@@Base+0xbdc>
   1aa0c:	ldrb	r2, [r3]
   1aa10:	cmp	r2, #0
   1aa14:	beq	1aa9c <argp_error@@Base+0xbdc>
   1aa18:	add	fp, r3, #1
   1aa1c:	mov	r0, r6
   1aa20:	str	r3, [sp, #28]
   1aa24:	str	fp, [r4, #20]
   1aa28:	ldrb	r8, [r3]
   1aa2c:	mov	r1, r8
   1aa30:	str	r8, [sp, #24]
   1aa34:	bl	11274 <strchr@plt>
   1aa38:	ldrd	r2, [sp, #24]
   1aa3c:	ldrb	r1, [r3, #1]
   1aa40:	cmp	r1, #0
   1aa44:	bne	1aa54 <argp_error@@Base+0xb94>
   1aa48:	ldr	r1, [r4]
   1aa4c:	add	r1, r1, #1
   1aa50:	str	r1, [r4]
   1aa54:	sub	r1, r8, #58	; 0x3a
   1aa58:	cmp	r0, #0
   1aa5c:	cmpne	r1, #1
   1aa60:	bls	1adb8 <argp_error@@Base+0xef8>
   1aa64:	ldrb	ip, [r0]
   1aa68:	ldrb	r1, [r0, #1]
   1aa6c:	cmp	ip, #87	; 0x57
   1aa70:	beq	1acc0 <argp_error@@Base+0xe00>
   1aa74:	cmp	r1, #58	; 0x3a
   1aa78:	beq	1ad64 <argp_error@@Base+0xea4>
   1aa7c:	mov	r0, r2
   1aa80:	add	sp, sp, #36	; 0x24
   1aa84:	ldrd	r4, [sp]
   1aa88:	ldrd	r6, [sp, #8]
   1aa8c:	ldrd	r8, [sp, #16]
   1aa90:	ldrd	sl, [sp, #24]
   1aa94:	add	sp, sp, #32
   1aa98:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa9c:	ldr	r8, [r4]
   1aaa0:	ldr	r2, [r4, #28]
   1aaa4:	ldr	r3, [r4, #32]
   1aaa8:	cmp	r3, r8
   1aaac:	ldr	r3, [r4, #24]
   1aab0:	strgt	r8, [r4, #32]
   1aab4:	cmp	r8, r2
   1aab8:	movlt	r2, r8
   1aabc:	strlt	r8, [r4, #28]
   1aac0:	cmp	r3, #1
   1aac4:	beq	1ab70 <argp_error@@Base+0xcb0>
   1aac8:	cmp	r5, r8
   1aacc:	beq	1ab50 <argp_error@@Base+0xc90>
   1aad0:	ldr	r3, [r9, r8, lsl #2]
   1aad4:	movw	fp, #56184	; 0xdb78
   1aad8:	movt	fp, #1
   1aadc:	mov	r1, fp
   1aae0:	mov	r0, r3
   1aae4:	str	r3, [sp, #24]
   1aae8:	bl	110e8 <strcmp@plt>
   1aaec:	cmp	r0, #0
   1aaf0:	ldr	r3, [sp, #24]
   1aaf4:	bne	1abe4 <argp_error@@Base+0xd24>
   1aaf8:	ldr	r3, [r4, #28]
   1aafc:	add	r8, r8, #1
   1ab00:	ldr	r2, [r4, #32]
   1ab04:	str	r8, [r4]
   1ab08:	cmp	r3, r2
   1ab0c:	beq	1adcc <argp_error@@Base+0xf0c>
   1ab10:	cmp	r8, r2
   1ab14:	beq	1ab28 <argp_error@@Base+0xc68>
   1ab18:	mov	r0, r9
   1ab1c:	mov	r1, r4
   1ab20:	bl	1a010 <argp_error@@Base+0x150>
   1ab24:	ldr	r3, [r4, #28]
   1ab28:	str	r5, [r4]
   1ab2c:	str	r5, [r4, #32]
   1ab30:	b	1ab58 <argp_error@@Base+0xc98>
   1ab34:	ldrb	r2, [r6]
   1ab38:	ldr	r3, [r4, #20]
   1ab3c:	sub	r1, r2, #43	; 0x2b
   1ab40:	tst	r1, #253	; 0xfd
   1ab44:	ldrbeq	r2, [r6, #1]
   1ab48:	addeq	r6, r6, #1
   1ab4c:	b	1a9fc <argp_error@@Base+0xb3c>
   1ab50:	ldr	r3, [r4, #28]
   1ab54:	ldr	r5, [r4, #32]
   1ab58:	cmp	r5, r3
   1ab5c:	mvnne	r2, #0
   1ab60:	strne	r3, [r4]
   1ab64:	bne	1aa7c <argp_error@@Base+0xbbc>
   1ab68:	mvn	r2, #0
   1ab6c:	b	1aa7c <argp_error@@Base+0xbbc>
   1ab70:	ldr	r3, [r4, #32]
   1ab74:	cmp	r3, r2
   1ab78:	beq	1ada4 <argp_error@@Base+0xee4>
   1ab7c:	cmp	r8, r3
   1ab80:	beq	1ab94 <argp_error@@Base+0xcd4>
   1ab84:	mov	r1, r4
   1ab88:	mov	r0, r9
   1ab8c:	bl	1a010 <argp_error@@Base+0x150>
   1ab90:	ldr	r3, [r4]
   1ab94:	cmp	r5, r3
   1ab98:	ble	1abd0 <argp_error@@Base+0xd10>
   1ab9c:	add	r1, r9, r3, lsl #2
   1aba0:	b	1abb4 <argp_error@@Base+0xcf4>
   1aba4:	add	r3, r3, #1
   1aba8:	cmp	r3, r5
   1abac:	str	r3, [r4]
   1abb0:	beq	1abd0 <argp_error@@Base+0xd10>
   1abb4:	ldr	r2, [r1], #4
   1abb8:	ldrb	r0, [r2]
   1abbc:	cmp	r0, #45	; 0x2d
   1abc0:	bne	1aba4 <argp_error@@Base+0xce4>
   1abc4:	ldrb	r2, [r2, #1]
   1abc8:	cmp	r2, #0
   1abcc:	beq	1aba4 <argp_error@@Base+0xce4>
   1abd0:	mov	r8, r3
   1abd4:	str	r3, [r4, #32]
   1abd8:	cmp	r5, r8
   1abdc:	bne	1aad0 <argp_error@@Base+0xc10>
   1abe0:	b	1ab50 <argp_error@@Base+0xc90>
   1abe4:	ldrb	r2, [r3]
   1abe8:	cmp	r2, #45	; 0x2d
   1abec:	beq	1ac20 <argp_error@@Base+0xd60>
   1abf0:	ldr	r2, [r4, #24]
   1abf4:	cmp	r2, #0
   1abf8:	beq	1ab68 <argp_error@@Base+0xca8>
   1abfc:	add	r8, r8, #1
   1ac00:	mov	r2, #1
   1ac04:	str	r8, [r4]
   1ac08:	str	r3, [r4, #12]
   1ac0c:	b	1aa7c <argp_error@@Base+0xbbc>
   1ac10:	mov	r3, #1
   1ac14:	mov	r2, r3
   1ac18:	str	r3, [r4]
   1ac1c:	b	1a9a4 <argp_error@@Base+0xae4>
   1ac20:	ldrb	r1, [r3, #1]
   1ac24:	cmp	r1, #0
   1ac28:	beq	1abf0 <argp_error@@Base+0xd30>
   1ac2c:	cmp	sl, #0
   1ac30:	beq	1acb8 <argp_error@@Base+0xdf8>
   1ac34:	cmp	r1, #45	; 0x2d
   1ac38:	beq	1ae50 <argp_error@@Base+0xf90>
   1ac3c:	ldr	r2, [sp, #76]	; 0x4c
   1ac40:	cmp	r2, #0
   1ac44:	beq	1acb8 <argp_error@@Base+0xdf8>
   1ac48:	ldrb	r2, [r3, #2]
   1ac4c:	cmp	r2, #0
   1ac50:	bne	1ac6c <argp_error@@Base+0xdac>
   1ac54:	mov	r0, r6
   1ac58:	str	r3, [sp, #24]
   1ac5c:	bl	11274 <strchr@plt>
   1ac60:	cmp	r0, #0
   1ac64:	ldr	r3, [sp, #24]
   1ac68:	bne	1acb8 <argp_error@@Base+0xdf8>
   1ac6c:	ldr	r2, [sp, #72]	; 0x48
   1ac70:	add	ip, r3, #1
   1ac74:	movw	r0, #55200	; 0xd7a0
   1ac78:	movt	r0, #1
   1ac7c:	mov	r3, sl
   1ac80:	ldr	r1, [sp, #76]	; 0x4c
   1ac84:	str	r2, [sp]
   1ac88:	mov	r2, r6
   1ac8c:	str	r0, [sp, #16]
   1ac90:	mov	r0, r5
   1ac94:	stmib	sp, {r1, r4, r7}
   1ac98:	mov	r1, r9
   1ac9c:	str	ip, [r4, #20]
   1aca0:	bl	1a278 <argp_error@@Base+0x3b8>
   1aca4:	cmn	r0, #1
   1aca8:	mov	r2, r0
   1acac:	bne	1aa7c <argp_error@@Base+0xbbc>
   1acb0:	ldr	r3, [r4]
   1acb4:	ldr	r3, [r9, r3, lsl #2]
   1acb8:	add	r3, r3, #1
   1acbc:	b	1aa18 <argp_error@@Base+0xb58>
   1acc0:	sub	ip, r1, #59	; 0x3b
   1acc4:	cmp	sl, #0
   1acc8:	clz	ip, ip
   1accc:	lsr	ip, ip, #5
   1acd0:	moveq	ip, #0
   1acd4:	cmp	ip, #0
   1acd8:	beq	1aa74 <argp_error@@Base+0xbb4>
   1acdc:	ldrb	r3, [r3, #1]
   1ace0:	cmp	r3, #0
   1ace4:	bne	1acf8 <argp_error@@Base+0xe38>
   1ace8:	ldr	r3, [r4]
   1acec:	cmp	r3, r5
   1acf0:	beq	1ae84 <argp_error@@Base+0xfc4>
   1acf4:	ldr	fp, [r9, r3, lsl #2]
   1acf8:	mov	lr, #0
   1acfc:	movw	ip, #58624	; 0xe500
   1ad00:	movt	ip, #1
   1ad04:	ldr	r3, [sp, #72]	; 0x48
   1ad08:	mov	r2, r6
   1ad0c:	mov	r1, r9
   1ad10:	mov	r0, r5
   1ad14:	str	r3, [sp]
   1ad18:	mov	r3, sl
   1ad1c:	str	r4, [sp, #8]
   1ad20:	str	r7, [sp, #12]
   1ad24:	str	ip, [sp, #16]
   1ad28:	str	fp, [r4, #20]
   1ad2c:	str	lr, [sp, #4]
   1ad30:	str	lr, [r4, #12]
   1ad34:	bl	1a278 <argp_error@@Base+0x3b8>
   1ad38:	mov	r2, r0
   1ad3c:	b	1aa7c <argp_error@@Base+0xbbc>
   1ad40:	movw	r0, #58536	; 0xe4a8
   1ad44:	movt	r0, #1
   1ad48:	bl	111f0 <getenv@plt>
   1ad4c:	cmp	r0, #0
   1ad50:	ldr	r3, [r4, #20]
   1ad54:	bne	1a9e8 <argp_error@@Base+0xb28>
   1ad58:	mov	r2, #1
   1ad5c:	str	r2, [r4, #24]
   1ad60:	b	1a9f0 <argp_error@@Base+0xb30>
   1ad64:	ldrb	r1, [r0, #2]
   1ad68:	ldrb	r3, [r3, #1]
   1ad6c:	cmp	r1, #58	; 0x3a
   1ad70:	beq	1ae0c <argp_error@@Base+0xf4c>
   1ad74:	cmp	r3, #0
   1ad78:	ldr	r3, [r4]
   1ad7c:	bne	1add8 <argp_error@@Base+0xf18>
   1ad80:	cmp	r5, r3
   1ad84:	beq	1ae30 <argp_error@@Base+0xf70>
   1ad88:	ldr	r1, [r9, r3, lsl #2]
   1ad8c:	add	r3, r3, #1
   1ad90:	str	r3, [r4]
   1ad94:	str	r1, [r4, #12]
   1ad98:	mov	r3, #0
   1ad9c:	str	r3, [r4, #20]
   1ada0:	b	1aa7c <argp_error@@Base+0xbbc>
   1ada4:	cmp	r8, r2
   1ada8:	movne	r3, r8
   1adac:	moveq	r3, r2
   1adb0:	strne	r8, [r4, #28]
   1adb4:	b	1ab94 <argp_error@@Base+0xcd4>
   1adb8:	cmp	r7, #0
   1adbc:	bne	1ade8 <argp_error@@Base+0xf28>
   1adc0:	mov	r2, #63	; 0x3f
   1adc4:	str	r8, [r4, #8]
   1adc8:	b	1aa7c <argp_error@@Base+0xbbc>
   1adcc:	mov	r3, r8
   1add0:	str	r8, [r4, #28]
   1add4:	b	1ab28 <argp_error@@Base+0xc68>
   1add8:	add	r3, r3, #1
   1addc:	str	r3, [r4]
   1ade0:	str	fp, [r4, #12]
   1ade4:	b	1ad98 <argp_error@@Base+0xed8>
   1ade8:	movw	r0, #10424	; 0x28b8
   1adec:	movt	r0, #3
   1adf0:	ldr	r2, [r9]
   1adf4:	movw	r1, #58552	; 0xe4b8
   1adf8:	movt	r1, #1
   1adfc:	mov	r3, r8
   1ae00:	ldr	r0, [r0]
   1ae04:	bl	11280 <fprintf@plt>
   1ae08:	b	1adc0 <argp_error@@Base+0xf00>
   1ae0c:	cmp	r3, #0
   1ae10:	ldrne	r3, [r4]
   1ae14:	moveq	fp, r3
   1ae18:	str	fp, [r4, #12]
   1ae1c:	addne	r3, r3, #1
   1ae20:	strne	r3, [r4]
   1ae24:	mov	r3, #0
   1ae28:	str	r3, [r4, #20]
   1ae2c:	b	1aa7c <argp_error@@Base+0xbbc>
   1ae30:	cmp	r7, #0
   1ae34:	bne	1aea4 <argp_error@@Base+0xfe4>
   1ae38:	str	r8, [r4, #8]
   1ae3c:	ldrb	r3, [r6]
   1ae40:	cmp	r3, #58	; 0x3a
   1ae44:	moveq	r2, #58	; 0x3a
   1ae48:	movne	r2, #63	; 0x3f
   1ae4c:	b	1ad98 <argp_error@@Base+0xed8>
   1ae50:	ldr	r2, [sp, #72]	; 0x48
   1ae54:	add	ip, r3, #2
   1ae58:	mov	r1, r9
   1ae5c:	mov	r3, sl
   1ae60:	ldr	r0, [sp, #76]	; 0x4c
   1ae64:	str	r2, [sp]
   1ae68:	mov	r2, r6
   1ae6c:	stmib	sp, {r0, r4, r7, fp}
   1ae70:	mov	r0, r5
   1ae74:	str	ip, [r4, #20]
   1ae78:	bl	1a278 <argp_error@@Base+0x3b8>
   1ae7c:	mov	r2, r0
   1ae80:	b	1aa7c <argp_error@@Base+0xbbc>
   1ae84:	cmp	r7, #0
   1ae88:	bne	1aec8 <argp_error@@Base+0x1008>
   1ae8c:	str	r8, [r4, #8]
   1ae90:	ldrb	r3, [r6]
   1ae94:	cmp	r3, #58	; 0x3a
   1ae98:	moveq	r2, #58	; 0x3a
   1ae9c:	movne	r2, #63	; 0x3f
   1aea0:	b	1aa7c <argp_error@@Base+0xbbc>
   1aea4:	movw	r0, #10424	; 0x28b8
   1aea8:	movt	r0, #3
   1aeac:	ldr	r2, [r9]
   1aeb0:	movw	r1, #58580	; 0xe4d4
   1aeb4:	movt	r1, #1
   1aeb8:	mov	r3, r8
   1aebc:	ldr	r0, [r0]
   1aec0:	bl	11280 <fprintf@plt>
   1aec4:	b	1ae38 <argp_error@@Base+0xf78>
   1aec8:	movw	r0, #10424	; 0x28b8
   1aecc:	movt	r0, #3
   1aed0:	ldr	r2, [r9]
   1aed4:	movw	r1, #58580	; 0xe4d4
   1aed8:	movt	r1, #1
   1aedc:	mov	r3, r8
   1aee0:	ldr	r0, [r0]
   1aee4:	bl	11280 <fprintf@plt>
   1aee8:	b	1ae8c <argp_error@@Base+0xfcc>
   1aeec:	strd	r4, [sp, #-16]!
   1aef0:	movw	r5, #10400	; 0x28a0
   1aef4:	movt	r5, #3
   1aef8:	str	r6, [sp, #8]
   1aefc:	movw	r4, #10472	; 0x28e8
   1af00:	movt	r4, #3
   1af04:	str	lr, [sp, #12]
   1af08:	sub	sp, sp, #16
   1af0c:	ldr	lr, [sp, #32]
   1af10:	ldr	ip, [r5]
   1af14:	ldr	r6, [sp, #36]	; 0x24
   1af18:	str	lr, [sp]
   1af1c:	ldr	lr, [sp, #40]	; 0x28
   1af20:	str	ip, [r4]
   1af24:	ldr	ip, [r5, #4]
   1af28:	str	r6, [sp, #4]
   1af2c:	str	r4, [sp, #8]
   1af30:	str	lr, [sp, #12]
   1af34:	str	ip, [r4, #4]
   1af38:	bl	1a950 <argp_error@@Base+0xa90>
   1af3c:	ldr	ip, [r4]
   1af40:	movw	r3, #10564	; 0x2944
   1af44:	movt	r3, #3
   1af48:	ldr	r1, [r4, #8]
   1af4c:	ldr	r2, [r4, #12]
   1af50:	str	ip, [r5]
   1af54:	str	r1, [r5, #8]
   1af58:	str	r2, [r3]
   1af5c:	add	sp, sp, #16
   1af60:	ldrd	r4, [sp]
   1af64:	ldr	r6, [sp, #8]
   1af68:	add	sp, sp, #12
   1af6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1af70:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1af74:	movw	r4, #10472	; 0x28e8
   1af78:	movt	r4, #3
   1af7c:	strd	r6, [sp, #8]
   1af80:	movw	r6, #10400	; 0x28a0
   1af84:	movt	r6, #3
   1af88:	strd	r8, [sp, #16]
   1af8c:	subs	r9, r0, #0
   1af90:	strd	sl, [sp, #24]
   1af94:	ldm	r6, {r5, sl}
   1af98:	str	lr, [sp, #32]
   1af9c:	sub	sp, sp, #20
   1afa0:	str	r1, [sp, #4]
   1afa4:	stm	r4, {r5, sl}
   1afa8:	ble	1b37c <argp_error@@Base+0x14bc>
   1afac:	mov	r3, #0
   1afb0:	mov	r8, r2
   1afb4:	cmp	r5, r3
   1afb8:	str	r3, [r4, #12]
   1afbc:	beq	1b08c <argp_error@@Base+0x11cc>
   1afc0:	ldr	r3, [r4, #16]
   1afc4:	cmp	r3, #0
   1afc8:	beq	1b098 <argp_error@@Base+0x11d8>
   1afcc:	ldrb	r3, [r2]
   1afd0:	sub	r2, r3, #43	; 0x2b
   1afd4:	tst	r2, #253	; 0xfd
   1afd8:	ldrbeq	r3, [r8, #1]
   1afdc:	addeq	r8, r8, #1
   1afe0:	cmp	r3, #58	; 0x3a
   1afe4:	ldr	r3, [r4, #20]
   1afe8:	moveq	sl, #0
   1afec:	cmp	r3, #0
   1aff0:	beq	1b0d8 <argp_error@@Base+0x1218>
   1aff4:	ldrb	r2, [r3]
   1aff8:	cmp	r2, #0
   1affc:	beq	1b0d8 <argp_error@@Base+0x1218>
   1b000:	add	r7, r3, #1
   1b004:	mov	r0, r8
   1b008:	str	r3, [sp, #12]
   1b00c:	str	r7, [r4, #20]
   1b010:	ldrb	fp, [r3]
   1b014:	mov	r1, fp
   1b018:	str	fp, [sp, #8]
   1b01c:	bl	11274 <strchr@plt>
   1b020:	ldrd	r2, [sp, #8]
   1b024:	ldrb	r1, [r3, #1]
   1b028:	cmp	r1, #0
   1b02c:	sub	r1, fp, #58	; 0x3a
   1b030:	addeq	r5, r5, #1
   1b034:	streq	r5, [r4]
   1b038:	cmp	r0, #0
   1b03c:	cmpne	r1, #1
   1b040:	bls	1b2a4 <argp_error@@Base+0x13e4>
   1b044:	ldrb	r1, [r0, #1]
   1b048:	cmp	r1, #58	; 0x3a
   1b04c:	beq	1b2c0 <argp_error@@Base+0x1400>
   1b050:	ldr	r1, [r4, #8]
   1b054:	ldr	r7, [r4, #12]
   1b058:	mov	r0, r2
   1b05c:	movw	r3, #10564	; 0x2944
   1b060:	movt	r3, #3
   1b064:	str	r5, [r6]
   1b068:	str	r1, [r6, #8]
   1b06c:	str	r7, [r3]
   1b070:	add	sp, sp, #20
   1b074:	ldrd	r4, [sp]
   1b078:	ldrd	r6, [sp, #8]
   1b07c:	ldrd	r8, [sp, #16]
   1b080:	ldrd	sl, [sp, #24]
   1b084:	add	sp, sp, #32
   1b088:	pop	{pc}		; (ldr pc, [sp], #4)
   1b08c:	mov	r3, #1
   1b090:	mov	r5, r3
   1b094:	str	r3, [r4]
   1b098:	mov	r3, #0
   1b09c:	str	r3, [r4, #20]
   1b0a0:	str	r5, [r4, #28]
   1b0a4:	str	r5, [r4, #32]
   1b0a8:	ldrb	r2, [r8]
   1b0ac:	cmp	r2, #45	; 0x2d
   1b0b0:	beq	1b180 <argp_error@@Base+0x12c0>
   1b0b4:	cmp	r2, #43	; 0x2b
   1b0b8:	mov	r1, r3
   1b0bc:	str	r3, [r4, #24]
   1b0c0:	addeq	r8, r8, #1
   1b0c4:	mov	r3, #1
   1b0c8:	str	r3, [r4, #16]
   1b0cc:	ldrb	r3, [r8]
   1b0d0:	cmp	r3, #58	; 0x3a
   1b0d4:	beq	1b1c4 <argp_error@@Base+0x1304>
   1b0d8:	mov	r2, r5
   1b0dc:	ldr	r1, [r4, #24]
   1b0e0:	ldr	r3, [r4, #32]
   1b0e4:	ldr	r0, [r4, #28]
   1b0e8:	cmp	r3, r5
   1b0ec:	movgt	r3, r5
   1b0f0:	strgt	r5, [r4, #32]
   1b0f4:	cmp	r5, r0
   1b0f8:	movge	r5, r0
   1b0fc:	strlt	r5, [r4, #28]
   1b100:	cmp	r1, #1
   1b104:	beq	1b1d8 <argp_error@@Base+0x1318>
   1b108:	cmp	r9, r2
   1b10c:	beq	1b24c <argp_error@@Base+0x138c>
   1b110:	ldr	fp, [sp, #4]
   1b114:	movw	r1, #56184	; 0xdb78
   1b118:	movt	r1, #1
   1b11c:	strd	r2, [sp, #8]
   1b120:	ldr	r7, [fp, r2, lsl #2]
   1b124:	mov	r0, r7
   1b128:	bl	110e8 <strcmp@plt>
   1b12c:	cmp	r0, #0
   1b130:	ldr	r2, [sp, #8]
   1b134:	bne	1b194 <argp_error@@Base+0x12d4>
   1b138:	ldr	r3, [sp, #12]
   1b13c:	add	r2, r2, #1
   1b140:	ldr	r5, [r4, #28]
   1b144:	str	r2, [r4]
   1b148:	cmp	r5, r3
   1b14c:	beq	1b308 <argp_error@@Base+0x1448>
   1b150:	cmp	r2, r3
   1b154:	beq	1b16c <argp_error@@Base+0x12ac>
   1b158:	mov	r0, fp
   1b15c:	movw	r1, #10472	; 0x28e8
   1b160:	movt	r1, #3
   1b164:	bl	1a010 <argp_error@@Base+0x150>
   1b168:	ldr	r5, [r4, #28]
   1b16c:	mov	r2, r9
   1b170:	mov	r3, r9
   1b174:	str	r9, [r4]
   1b178:	str	r9, [r4, #32]
   1b17c:	b	1b250 <argp_error@@Base+0x1390>
   1b180:	mov	r3, #2
   1b184:	add	r8, r8, #1
   1b188:	mov	r1, r3
   1b18c:	str	r3, [r4, #24]
   1b190:	b	1b0c4 <argp_error@@Base+0x1204>
   1b194:	ldrb	r3, [r7]
   1b198:	cmp	r3, #45	; 0x2d
   1b19c:	beq	1b270 <argp_error@@Base+0x13b0>
   1b1a0:	ldr	r3, [r4, #24]
   1b1a4:	cmp	r3, #0
   1b1a8:	beq	1b378 <argp_error@@Base+0x14b8>
   1b1ac:	add	r5, r2, #1
   1b1b0:	mov	r2, #1
   1b1b4:	ldr	r1, [r4, #8]
   1b1b8:	str	r5, [r4]
   1b1bc:	str	r7, [r4, #12]
   1b1c0:	b	1b058 <argp_error@@Base+0x1198>
   1b1c4:	cmp	r1, #1
   1b1c8:	mov	r3, r5
   1b1cc:	mov	r2, r5
   1b1d0:	mov	sl, #0
   1b1d4:	bne	1b108 <argp_error@@Base+0x1248>
   1b1d8:	cmp	r5, r3
   1b1dc:	beq	1b288 <argp_error@@Base+0x13c8>
   1b1e0:	cmp	r2, r3
   1b1e4:	beq	1b1fc <argp_error@@Base+0x133c>
   1b1e8:	movw	r1, #10472	; 0x28e8
   1b1ec:	movt	r1, #3
   1b1f0:	ldr	r0, [sp, #4]
   1b1f4:	bl	1a010 <argp_error@@Base+0x150>
   1b1f8:	ldr	r3, [r4]
   1b1fc:	cmp	r9, r3
   1b200:	ble	1b23c <argp_error@@Base+0x137c>
   1b204:	ldr	r2, [sp, #4]
   1b208:	add	r1, r2, r3, lsl #2
   1b20c:	b	1b220 <argp_error@@Base+0x1360>
   1b210:	add	r3, r3, #1
   1b214:	cmp	r9, r3
   1b218:	str	r3, [r4]
   1b21c:	beq	1b29c <argp_error@@Base+0x13dc>
   1b220:	ldr	r2, [r1], #4
   1b224:	ldrb	r0, [r2]
   1b228:	cmp	r0, #45	; 0x2d
   1b22c:	bne	1b210 <argp_error@@Base+0x1350>
   1b230:	ldrb	r2, [r2, #1]
   1b234:	cmp	r2, #0
   1b238:	beq	1b210 <argp_error@@Base+0x1350>
   1b23c:	mov	r2, r3
   1b240:	cmp	r9, r2
   1b244:	str	r3, [r4, #32]
   1b248:	bne	1b110 <argp_error@@Base+0x1250>
   1b24c:	ldr	r5, [r4, #28]
   1b250:	cmp	r3, r5
   1b254:	moveq	r5, r2
   1b258:	mvnne	r2, #0
   1b25c:	ldr	r1, [r4, #8]
   1b260:	strne	r5, [r4]
   1b264:	mvneq	r2, #0
   1b268:	ldr	r7, [r4, #12]
   1b26c:	b	1b058 <argp_error@@Base+0x1198>
   1b270:	ldrb	r3, [r7, #1]
   1b274:	cmp	r3, #0
   1b278:	beq	1b1a0 <argp_error@@Base+0x12e0>
   1b27c:	add	r3, r7, #1
   1b280:	mov	r5, r2
   1b284:	b	1b000 <argp_error@@Base+0x1140>
   1b288:	cmp	r2, r3
   1b28c:	beq	1b1fc <argp_error@@Base+0x133c>
   1b290:	mov	r3, r2
   1b294:	str	r2, [r4, #28]
   1b298:	b	1b1fc <argp_error@@Base+0x133c>
   1b29c:	mov	r2, r9
   1b2a0:	b	1b240 <argp_error@@Base+0x1380>
   1b2a4:	cmp	sl, #0
   1b2a8:	bne	1b328 <argp_error@@Base+0x1468>
   1b2ac:	mov	r1, fp
   1b2b0:	mov	r2, #63	; 0x3f
   1b2b4:	str	fp, [r4, #8]
   1b2b8:	ldr	r7, [r4, #12]
   1b2bc:	b	1b058 <argp_error@@Base+0x1198>
   1b2c0:	ldrb	r1, [r0, #2]
   1b2c4:	ldrb	r3, [r3, #1]
   1b2c8:	cmp	r1, #58	; 0x3a
   1b2cc:	beq	1b354 <argp_error@@Base+0x1494>
   1b2d0:	cmp	r3, #0
   1b2d4:	bne	1b314 <argp_error@@Base+0x1454>
   1b2d8:	cmp	r9, r5
   1b2dc:	beq	1b384 <argp_error@@Base+0x14c4>
   1b2e0:	ldr	r3, [sp, #4]
   1b2e4:	ldr	r1, [r4, #8]
   1b2e8:	ldr	r7, [r3, r5, lsl #2]
   1b2ec:	add	r3, r5, #1
   1b2f0:	mov	r5, r3
   1b2f4:	str	r3, [r4]
   1b2f8:	str	r7, [r4, #12]
   1b2fc:	mov	r3, #0
   1b300:	str	r3, [r4, #20]
   1b304:	b	1b058 <argp_error@@Base+0x1198>
   1b308:	mov	r5, r2
   1b30c:	str	r2, [r4, #28]
   1b310:	b	1b16c <argp_error@@Base+0x12ac>
   1b314:	add	r5, r5, #1
   1b318:	ldr	r1, [r4, #8]
   1b31c:	str	r5, [r4]
   1b320:	str	r7, [r4, #12]
   1b324:	b	1b2fc <argp_error@@Base+0x143c>
   1b328:	ldr	r3, [sp, #4]
   1b32c:	movw	r0, #10424	; 0x28b8
   1b330:	movt	r0, #3
   1b334:	movw	r1, #58552	; 0xe4b8
   1b338:	movt	r1, #1
   1b33c:	ldr	r0, [r0]
   1b340:	ldr	r2, [r3]
   1b344:	mov	r3, fp
   1b348:	bl	11280 <fprintf@plt>
   1b34c:	ldr	r5, [r4]
   1b350:	b	1b2ac <argp_error@@Base+0x13ec>
   1b354:	cmp	r3, #0
   1b358:	ldr	r1, [r4, #8]
   1b35c:	moveq	r7, r3
   1b360:	addne	r5, r5, #1
   1b364:	mov	r3, #0
   1b368:	strne	r5, [r4]
   1b36c:	str	r7, [r4, #12]
   1b370:	str	r3, [r4, #20]
   1b374:	b	1b058 <argp_error@@Base+0x1198>
   1b378:	mov	r5, r2
   1b37c:	mvn	r2, #0
   1b380:	b	1b050 <argp_error@@Base+0x1190>
   1b384:	cmp	sl, #0
   1b388:	bne	1b3ac <argp_error@@Base+0x14ec>
   1b38c:	str	fp, [r4, #8]
   1b390:	mov	r1, fp
   1b394:	ldrb	r3, [r8]
   1b398:	ldr	r7, [r4, #12]
   1b39c:	cmp	r3, #58	; 0x3a
   1b3a0:	moveq	r2, #58	; 0x3a
   1b3a4:	movne	r2, #63	; 0x3f
   1b3a8:	b	1b2fc <argp_error@@Base+0x143c>
   1b3ac:	ldr	r3, [sp, #4]
   1b3b0:	movw	r0, #10424	; 0x28b8
   1b3b4:	movt	r0, #3
   1b3b8:	movw	r1, #58580	; 0xe4d4
   1b3bc:	movt	r1, #1
   1b3c0:	ldr	r0, [r0]
   1b3c4:	ldr	r2, [r3]
   1b3c8:	mov	r3, fp
   1b3cc:	bl	11280 <fprintf@plt>
   1b3d0:	ldr	r5, [r4]
   1b3d4:	b	1b38c <argp_error@@Base+0x14cc>
   1b3d8:	umull	r2, r3, r1, r2
   1b3dc:	cmp	r3, #0
   1b3e0:	bne	1b3ec <argp_error@@Base+0x152c>
   1b3e4:	mov	r1, r2
   1b3e8:	b	15d98 <_obstack_memory_used@@Base+0x1330>
   1b3ec:	str	r4, [sp, #-8]!
   1b3f0:	str	lr, [sp, #4]
   1b3f4:	bl	1128c <__errno_location@plt>
   1b3f8:	mov	r3, #12
   1b3fc:	ldr	r4, [sp]
   1b400:	add	sp, sp, #4
   1b404:	str	r3, [r0]
   1b408:	mov	r0, #0
   1b40c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b410:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b414:	mov	r5, r3
   1b418:	strd	r6, [sp, #8]
   1b41c:	mov	r7, r1
   1b420:	mov	r6, r2
   1b424:	str	r8, [sp, #16]
   1b428:	mov	r8, r0
   1b42c:	mov	r0, #36	; 0x24
   1b430:	str	lr, [sp, #20]
   1b434:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1b438:	subs	r4, r0, #0
   1b43c:	beq	1b480 <argp_error@@Base+0x15c0>
   1b440:	mov	r3, #0
   1b444:	mov	r0, #200	; 0xc8
   1b448:	str	r8, [r4]
   1b44c:	str	r7, [r4, #4]
   1b450:	str	r6, [r4, #8]
   1b454:	str	r5, [r4, #12]
   1b458:	str	r3, [r4, #16]
   1b45c:	str	r3, [r4, #20]
   1b460:	bl	15d5c <_obstack_memory_used@@Base+0x12f4>
   1b464:	cmp	r0, #0
   1b468:	mov	r3, r0
   1b46c:	str	r0, [r4, #24]
   1b470:	addne	r2, r0, #200	; 0xc8
   1b474:	strne	r0, [r4, #28]
   1b478:	strne	r2, [r4, #32]
   1b47c:	beq	1b498 <argp_error@@Base+0x15d8>
   1b480:	mov	r0, r4
   1b484:	ldrd	r4, [sp]
   1b488:	ldrd	r6, [sp, #8]
   1b48c:	ldr	r8, [sp, #16]
   1b490:	add	sp, sp, #20
   1b494:	pop	{pc}		; (ldr pc, [sp], #4)
   1b498:	mov	r0, r4
   1b49c:	mov	r4, r3
   1b4a0:	bl	144f8 <argp_parse@@Base+0x1038>
   1b4a4:	b	1b480 <argp_error@@Base+0x15c0>
   1b4a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b4ac:	mov	r5, r0
   1b4b0:	ldr	r4, [r0, #16]
   1b4b4:	ldr	r3, [r0, #24]
   1b4b8:	strd	r6, [sp, #8]
   1b4bc:	strd	r8, [sp, #16]
   1b4c0:	ldr	r8, [r0, #28]
   1b4c4:	strd	sl, [sp, #24]
   1b4c8:	add	r4, r3, r4
   1b4cc:	str	lr, [sp, #32]
   1b4d0:	sub	sp, sp, #12
   1b4d4:	cmp	r4, r8
   1b4d8:	bcc	1b554 <argp_error@@Base+0x1694>
   1b4dc:	b	1b7b0 <argp_error@@Base+0x18f0>
   1b4e0:	sub	r2, fp, r4
   1b4e4:	add	r2, r2, r6
   1b4e8:	cmp	r2, r3
   1b4ec:	blt	1b7f0 <argp_error@@Base+0x1930>
   1b4f0:	ldr	sl, [r5, #12]
   1b4f4:	sub	r7, r3, #1
   1b4f8:	str	r3, [sp, #4]
   1b4fc:	cmp	sl, #0
   1b500:	bge	1b610 <argp_error@@Base+0x1750>
   1b504:	cmp	r8, fp
   1b508:	bls	1b988 <argp_error@@Base+0x1ac8>
   1b50c:	sub	r0, r7, r6
   1b510:	sub	r2, r8, fp
   1b514:	add	r0, r4, r0
   1b518:	mov	r1, fp
   1b51c:	bl	1110c <memmove@plt>
   1b520:	ldr	r2, [r5, #20]
   1b524:	mov	r3, #0
   1b528:	str	r3, [r5, #20]
   1b52c:	ldr	r3, [sp, #4]
   1b530:	ldr	r8, [r5, #28]
   1b534:	sub	r7, r7, r2
   1b538:	add	r7, r4, r7
   1b53c:	sub	fp, r7, fp
   1b540:	add	r4, r4, r3
   1b544:	sub	r8, r8, fp
   1b548:	str	r8, [r5, #28]
   1b54c:	cmp	r4, r8
   1b550:	bcs	1b7ac <argp_error@@Base+0x18ec>
   1b554:	ldr	r6, [r5, #20]
   1b558:	cmp	r6, #0
   1b55c:	bne	1b5bc <argp_error@@Base+0x16fc>
   1b560:	ldr	r7, [r5, #4]
   1b564:	cmp	r7, #0
   1b568:	beq	1b7d4 <argp_error@@Base+0x1914>
   1b56c:	ldr	r2, [r5, #32]
   1b570:	add	r3, r8, r7
   1b574:	cmp	r2, r3
   1b578:	bls	1b8fc <argp_error@@Base+0x1a3c>
   1b57c:	add	r6, r4, r7
   1b580:	sub	r2, r8, r4
   1b584:	mov	r1, r4
   1b588:	mov	r0, r6
   1b58c:	bl	1110c <memmove@plt>
   1b590:	ldr	r3, [r5, #28]
   1b594:	mov	r0, r4
   1b598:	mov	r2, r7
   1b59c:	mov	r1, #32
   1b5a0:	mov	r4, r6
   1b5a4:	add	r3, r3, r7
   1b5a8:	str	r3, [r5, #28]
   1b5ac:	bl	112b0 <memset@plt>
   1b5b0:	ldr	r8, [r5, #28]
   1b5b4:	mov	r6, r7
   1b5b8:	str	r7, [r5, #20]
   1b5bc:	sub	r9, r8, r4
   1b5c0:	mov	r1, #10
   1b5c4:	mov	r2, r9
   1b5c8:	mov	r0, r4
   1b5cc:	bl	112c8 <memchr@plt>
   1b5d0:	cmp	r6, #0
   1b5d4:	mov	fp, r0
   1b5d8:	bge	1b5e4 <argp_error@@Base+0x1724>
   1b5dc:	mov	r6, #0
   1b5e0:	str	r6, [r5, #20]
   1b5e4:	cmp	fp, #0
   1b5e8:	ldr	r3, [r5, #8]
   1b5ec:	bne	1b4e0 <argp_error@@Base+0x1620>
   1b5f0:	add	r1, r6, r9
   1b5f4:	cmp	r1, r3
   1b5f8:	bcc	1b9f8 <argp_error@@Base+0x1b38>
   1b5fc:	ldr	sl, [r5, #12]
   1b600:	sub	r7, r3, #1
   1b604:	cmp	sl, #0
   1b608:	blt	1b98c <argp_error@@Base+0x1acc>
   1b60c:	mov	fp, r8
   1b610:	add	r7, r7, #1
   1b614:	sub	r6, r7, r6
   1b618:	adds	r6, r4, r6
   1b61c:	bcs	1b834 <argp_error@@Base+0x1974>
   1b620:	bl	11250 <__ctype_b_loc@plt>
   1b624:	mov	r3, r6
   1b628:	ldr	ip, [r0]
   1b62c:	b	1b63c <argp_error@@Base+0x177c>
   1b630:	cmp	r4, r0
   1b634:	mov	r3, r0
   1b638:	bhi	1b838 <argp_error@@Base+0x1978>
   1b63c:	ldrb	r1, [r3]
   1b640:	mov	r7, r3
   1b644:	sub	r0, r3, #1
   1b648:	lsl	r1, r1, #1
   1b64c:	ldrh	r1, [ip, r1]
   1b650:	tst	r1, #1
   1b654:	beq	1b630 <argp_error@@Base+0x1770>
   1b658:	add	r0, r3, #1
   1b65c:	cmp	r4, r0
   1b660:	bcs	1b848 <argp_error@@Base+0x1988>
   1b664:	cmp	r4, r3
   1b668:	movhi	r6, r0
   1b66c:	movhi	r7, r6
   1b670:	bls	1b68c <argp_error@@Base+0x17cc>
   1b674:	b	1b6a0 <argp_error@@Base+0x17e0>
   1b678:	ldrb	r1, [r6, #-1]
   1b67c:	lsl	r1, r1, #1
   1b680:	ldrh	r1, [ip, r1]
   1b684:	tst	r1, #1
   1b688:	beq	1b69c <argp_error@@Base+0x17dc>
   1b68c:	cmp	r4, r3
   1b690:	mov	r6, r3
   1b694:	sub	r3, r3, #1
   1b698:	bne	1b678 <argp_error@@Base+0x17b8>
   1b69c:	mov	r7, r0
   1b6a0:	add	r3, r9, #1
   1b6a4:	add	r3, r4, r3
   1b6a8:	cmp	r7, r3
   1b6ac:	beq	1b804 <argp_error@@Base+0x1944>
   1b6b0:	add	r1, r6, #1
   1b6b4:	sub	r3, r7, r1
   1b6b8:	cmp	r3, sl
   1b6bc:	bge	1b81c <argp_error@@Base+0x195c>
   1b6c0:	cmp	r7, r8
   1b6c4:	bcs	1b814 <argp_error@@Base+0x1954>
   1b6c8:	ldr	r3, [r5, #32]
   1b6cc:	add	sl, sl, #1
   1b6d0:	sub	r3, r3, r8
   1b6d4:	cmp	r3, sl
   1b6d8:	bgt	1b9a4 <argp_error@@Base+0x1ae4>
   1b6dc:	ldr	r3, [r5]
   1b6e0:	ldr	r0, [r5, #24]
   1b6e4:	cmp	r0, r6
   1b6e8:	bcs	1b6fc <argp_error@@Base+0x183c>
   1b6ec:	sub	r2, r6, r0
   1b6f0:	mov	r1, #1
   1b6f4:	bl	11178 <fwrite_unlocked@plt>
   1b6f8:	ldr	r3, [r5]
   1b6fc:	ldr	r2, [r3, #20]
   1b700:	ldr	r1, [r3, #24]
   1b704:	cmp	r2, r1
   1b708:	addcc	r1, r2, #1
   1b70c:	strcc	r1, [r3, #20]
   1b710:	movcc	r3, #10
   1b714:	strbcc	r3, [r2]
   1b718:	bcs	1b9e8 <argp_error@@Base+0x1b28>
   1b71c:	ldr	fp, [r5, #24]
   1b720:	sub	r4, r4, fp
   1b724:	sub	r3, r7, fp
   1b728:	add	r9, r9, r4
   1b72c:	mov	r8, r3
   1b730:	mov	r4, fp
   1b734:	ldr	r2, [r5, #12]
   1b738:	cmp	r2, r3
   1b73c:	ble	1b760 <argp_error@@Base+0x18a0>
   1b740:	add	r3, r9, #1
   1b744:	add	r3, fp, r3
   1b748:	cmp	r7, r3
   1b74c:	bne	1b87c <argp_error@@Base+0x19bc>
   1b750:	ldr	r3, [r5, #32]
   1b754:	sub	r3, r3, r7
   1b758:	cmp	r2, r3
   1b75c:	bgt	1b87c <argp_error@@Base+0x19bc>
   1b760:	cmp	r2, #0
   1b764:	ble	1b784 <argp_error@@Base+0x18c4>
   1b768:	mov	r3, #0
   1b76c:	mov	r1, #32
   1b770:	strb	r1, [r4], #1
   1b774:	add	r3, r3, #1
   1b778:	ldr	r2, [r5, #12]
   1b77c:	cmp	r2, r3
   1b780:	bgt	1b770 <argp_error@@Base+0x18b0>
   1b784:	cmp	r4, r7
   1b788:	bcc	1b8e0 <argp_error@@Base+0x1a20>
   1b78c:	cmp	r2, #0
   1b790:	sub	r8, r9, r8
   1b794:	add	r8, r4, r8
   1b798:	mvneq	r2, #0
   1b79c:	cmp	r4, r8
   1b7a0:	str	r2, [r5, #20]
   1b7a4:	str	r8, [r5, #28]
   1b7a8:	bcc	1b554 <argp_error@@Base+0x1694>
   1b7ac:	ldr	r3, [r5, #24]
   1b7b0:	sub	r8, r8, r3
   1b7b4:	str	r8, [r5, #16]
   1b7b8:	add	sp, sp, #12
   1b7bc:	ldrd	r4, [sp]
   1b7c0:	ldrd	r6, [sp, #8]
   1b7c4:	ldrd	r8, [sp, #16]
   1b7c8:	ldrd	sl, [sp, #24]
   1b7cc:	add	sp, sp, #32
   1b7d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7d4:	sub	r9, r8, r4
   1b7d8:	mov	r1, #10
   1b7dc:	mov	r2, r9
   1b7e0:	mov	r0, r4
   1b7e4:	bl	112c8 <memchr@plt>
   1b7e8:	mov	fp, r0
   1b7ec:	b	1b5e4 <argp_error@@Base+0x1724>
   1b7f0:	mov	r3, #0
   1b7f4:	add	r4, fp, #1
   1b7f8:	ldr	r8, [r5, #28]
   1b7fc:	str	r3, [r5, #20]
   1b800:	b	1b54c <argp_error@@Base+0x168c>
   1b804:	ldr	r3, [r5, #32]
   1b808:	sub	r3, r3, r6
   1b80c:	cmp	r3, sl
   1b810:	ble	1b6c0 <argp_error@@Base+0x1800>
   1b814:	add	r1, r6, #1
   1b818:	sub	r3, r7, r1
   1b81c:	mov	r2, #10
   1b820:	sub	r8, r7, r4
   1b824:	mov	fp, r4
   1b828:	mov	r4, r1
   1b82c:	strb	r2, [r6]
   1b830:	b	1b734 <argp_error@@Base+0x1874>
   1b834:	add	r7, r6, #1
   1b838:	cmp	r4, r7
   1b83c:	bcs	1b848 <argp_error@@Base+0x1988>
   1b840:	mov	r6, r7
   1b844:	b	1b6a0 <argp_error@@Base+0x17e0>
   1b848:	cmp	r6, fp
   1b84c:	bcc	1b950 <argp_error@@Base+0x1a90>
   1b850:	cmp	r6, fp
   1b854:	beq	1b93c <argp_error@@Base+0x1a7c>
   1b858:	bl	11250 <__ctype_b_loc@plt>
   1b85c:	ldr	r1, [r0]
   1b860:	mov	r7, r6
   1b864:	ldrb	r3, [r7, #1]!
   1b868:	lsl	r3, r3, #1
   1b86c:	ldrh	r3, [r1, r3]
   1b870:	tst	r3, #1
   1b874:	bne	1b864 <argp_error@@Base+0x19a4>
   1b878:	b	1b6a0 <argp_error@@Base+0x17e0>
   1b87c:	cmp	r2, #0
   1b880:	movgt	r6, #0
   1b884:	movgt	sl, #32
   1b888:	bgt	1b8a8 <argp_error@@Base+0x19e8>
   1b88c:	b	1b784 <argp_error@@Base+0x18c4>
   1b890:	str	ip, [r0, #20]
   1b894:	add	r6, r6, #1
   1b898:	strb	sl, [r2]
   1b89c:	ldr	r2, [r5, #12]
   1b8a0:	cmp	r2, r6
   1b8a4:	ble	1b784 <argp_error@@Base+0x18c4>
   1b8a8:	ldr	r0, [r5]
   1b8ac:	ldr	r2, [r0, #20]
   1b8b0:	ldr	r1, [r0, #24]
   1b8b4:	add	ip, r2, #1
   1b8b8:	cmp	r2, r1
   1b8bc:	bcc	1b890 <argp_error@@Base+0x19d0>
   1b8c0:	mov	r1, #32
   1b8c4:	add	r6, r6, #1
   1b8c8:	bl	112d4 <__overflow@plt>
   1b8cc:	ldr	r2, [r5, #12]
   1b8d0:	cmp	r6, r2
   1b8d4:	blt	1b8a8 <argp_error@@Base+0x19e8>
   1b8d8:	cmp	r4, r7
   1b8dc:	bcs	1b78c <argp_error@@Base+0x18cc>
   1b8e0:	add	r2, fp, r9
   1b8e4:	mov	r1, r7
   1b8e8:	sub	r2, r2, r7
   1b8ec:	mov	r0, r4
   1b8f0:	bl	1110c <memmove@plt>
   1b8f4:	ldr	r2, [r5, #12]
   1b8f8:	b	1b78c <argp_error@@Base+0x18cc>
   1b8fc:	mov	r8, #32
   1b900:	b	1b910 <argp_error@@Base+0x1a50>
   1b904:	add	r6, r6, #1
   1b908:	cmp	r7, r6
   1b90c:	beq	1b5b0 <argp_error@@Base+0x16f0>
   1b910:	ldr	r0, [r5]
   1b914:	ldr	r3, [r0, #20]
   1b918:	ldr	r2, [r0, #24]
   1b91c:	add	r1, r3, #1
   1b920:	cmp	r3, r2
   1b924:	strcc	r1, [r0, #20]
   1b928:	strbcc	r8, [r3]
   1b92c:	bcc	1b904 <argp_error@@Base+0x1a44>
   1b930:	mov	r1, #32
   1b934:	bl	112d4 <__overflow@plt>
   1b938:	b	1b904 <argp_error@@Base+0x1a44>
   1b93c:	mov	r3, #0
   1b940:	add	r4, r6, #1
   1b944:	ldr	r8, [r5, #28]
   1b948:	str	r3, [r5, #20]
   1b94c:	b	1b54c <argp_error@@Base+0x168c>
   1b950:	add	r7, r6, #1
   1b954:	b	1b978 <argp_error@@Base+0x1ab8>
   1b958:	bl	11250 <__ctype_b_loc@plt>
   1b95c:	ldrb	r3, [r7]
   1b960:	add	r7, r7, #1
   1b964:	ldr	r1, [r0]
   1b968:	lsl	r3, r3, #1
   1b96c:	ldrh	r3, [r1, r3]
   1b970:	tst	r3, #1
   1b974:	bne	1b860 <argp_error@@Base+0x19a0>
   1b978:	cmp	fp, r7
   1b97c:	mov	r6, r7
   1b980:	bne	1b958 <argp_error@@Base+0x1a98>
   1b984:	b	1b850 <argp_error@@Base+0x1990>
   1b988:	add	r1, r9, r6
   1b98c:	sub	r7, r7, r1
   1b990:	str	r1, [r5, #20]
   1b994:	add	r8, r8, r7
   1b998:	ldr	r3, [r5, #24]
   1b99c:	str	r8, [r5, #28]
   1b9a0:	b	1b7b0 <argp_error@@Base+0x18f0>
   1b9a4:	sub	r8, r8, r7
   1b9a8:	mov	r1, r7
   1b9ac:	mov	r2, r8
   1b9b0:	add	r0, r6, sl
   1b9b4:	bl	1110c <memmove@plt>
   1b9b8:	ldr	r3, [r5, #12]
   1b9bc:	mov	r2, r6
   1b9c0:	mov	r1, #10
   1b9c4:	mov	fp, r4
   1b9c8:	strb	r1, [r2], #1
   1b9cc:	add	r7, r3, #1
   1b9d0:	add	r7, r6, r7
   1b9d4:	add	r9, r7, r8
   1b9d8:	sub	r8, r7, r4
   1b9dc:	sub	r9, r9, r4
   1b9e0:	mov	r4, r2
   1b9e4:	b	1b734 <argp_error@@Base+0x1874>
   1b9e8:	mov	r0, r3
   1b9ec:	mov	r1, #10
   1b9f0:	bl	112d4 <__overflow@plt>
   1b9f4:	b	1b71c <argp_error@@Base+0x185c>
   1b9f8:	str	r1, [r5, #20]
   1b9fc:	ldr	r3, [r5, #24]
   1ba00:	ldr	r8, [r5, #28]
   1ba04:	b	1b7b0 <argp_error@@Base+0x18f0>
   1ba08:	str	r4, [sp, #-8]!
   1ba0c:	mov	r4, r0
   1ba10:	str	lr, [sp, #4]
   1ba14:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1ba18:	ldr	r0, [r4, #24]
   1ba1c:	ldr	r2, [r4, #28]
   1ba20:	cmp	r2, r0
   1ba24:	bls	1ba3c <argp_error@@Base+0x1b7c>
   1ba28:	sub	r2, r2, r0
   1ba2c:	mov	r1, #1
   1ba30:	ldr	r3, [r4]
   1ba34:	bl	11178 <fwrite_unlocked@plt>
   1ba38:	ldr	r0, [r4, #24]
   1ba3c:	bl	144f8 <argp_parse@@Base+0x1038>
   1ba40:	mov	r0, r4
   1ba44:	ldr	r4, [sp]
   1ba48:	ldr	lr, [sp, #4]
   1ba4c:	add	sp, sp, #8
   1ba50:	b	144f8 <argp_parse@@Base+0x1038>
   1ba54:	strd	r4, [sp, #-16]!
   1ba58:	mov	r4, r0
   1ba5c:	mov	r5, r1
   1ba60:	str	r6, [sp, #8]
   1ba64:	str	lr, [sp, #12]
   1ba68:	bl	1b4a8 <argp_error@@Base+0x15e8>
   1ba6c:	mov	r1, #1
   1ba70:	ldr	r3, [r4]
   1ba74:	ldr	r2, [r4, #24]
   1ba78:	ldr	ip, [r4, #28]
   1ba7c:	mov	r0, r2
   1ba80:	sub	r2, ip, r2
   1ba84:	bl	11178 <fwrite_unlocked@plt>
   1ba88:	mov	ip, r0
   1ba8c:	ldr	r0, [r4, #24]
   1ba90:	ldr	r3, [r4, #28]
   1ba94:	sub	r2, r3, r0
   1ba98:	cmp	ip, r2
   1ba9c:	bne	1bafc <argp_error@@Base+0x1c3c>
   1baa0:	ldr	r1, [r4, #32]
   1baa4:	mov	r3, #0
   1baa8:	str	r3, [r4, #16]
   1baac:	str	r0, [r4, #28]
   1bab0:	sub	r1, r1, r0
   1bab4:	cmp	r1, r5
   1bab8:	movcs	r3, #1
   1babc:	bcs	1bae8 <argp_error@@Base+0x1c28>
   1bac0:	adds	r5, r1, r5
   1bac4:	bcs	1bb24 <argp_error@@Base+0x1c64>
   1bac8:	mov	r1, r5
   1bacc:	bl	15d98 <_obstack_memory_used@@Base+0x1330>
   1bad0:	cmp	r0, #0
   1bad4:	beq	1bb24 <argp_error@@Base+0x1c64>
   1bad8:	add	r1, r0, r5
   1badc:	mov	r3, #1
   1bae0:	str	r0, [r4, #24]
   1bae4:	strd	r0, [r4, #28]
   1bae8:	ldrd	r4, [sp]
   1baec:	mov	r0, r3
   1baf0:	ldr	r6, [sp, #8]
   1baf4:	add	sp, sp, #12
   1baf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bafc:	ldr	lr, [r4, #16]
   1bb00:	sub	r3, r3, ip
   1bb04:	add	r1, r0, ip
   1bb08:	sub	r2, r3, r0
   1bb0c:	str	r3, [r4, #28]
   1bb10:	sub	ip, lr, ip
   1bb14:	str	ip, [r4, #16]
   1bb18:	bl	1110c <memmove@plt>
   1bb1c:	mov	r3, #0
   1bb20:	b	1bae8 <argp_error@@Base+0x1c28>
   1bb24:	bl	1128c <__errno_location@plt>
   1bb28:	mov	r2, #12
   1bb2c:	mov	r3, #0
   1bb30:	str	r2, [r0]
   1bb34:	b	1bae8 <argp_error@@Base+0x1c28>
   1bb38:	ldr	ip, [r0, #28]
   1bb3c:	ldr	r3, [r0, #32]
   1bb40:	sub	r3, r3, ip
   1bb44:	cmp	r3, r1
   1bb48:	bcc	1bb54 <argp_error@@Base+0x1c94>
   1bb4c:	mov	r0, #1
   1bb50:	bx	lr
   1bb54:	b	1ba54 <argp_error@@Base+0x1b94>
   1bb58:	push	{r1, r2, r3}
   1bb5c:	mov	r1, #150	; 0x96
   1bb60:	strd	r4, [sp, #-20]!	; 0xffffffec
   1bb64:	mov	r5, r0
   1bb68:	strd	r6, [sp, #8]
   1bb6c:	str	lr, [sp, #16]
   1bb70:	sub	sp, sp, #8
   1bb74:	ldr	r7, [sp, #28]
   1bb78:	add	r6, sp, #32
   1bb7c:	ldr	r0, [r5, #28]
   1bb80:	ldr	r3, [r5, #32]
   1bb84:	sub	r2, r3, r0
   1bb88:	cmp	r1, r2
   1bb8c:	bhi	1bbdc <argp_error@@Base+0x1d1c>
   1bb90:	sub	r4, r3, r0
   1bb94:	mov	r2, r7
   1bb98:	str	r6, [sp, #4]
   1bb9c:	mov	r1, r4
   1bba0:	mov	r3, r6
   1bba4:	bl	11328 <vsnprintf@plt>
   1bba8:	cmp	r0, r4
   1bbac:	add	r1, r0, #1
   1bbb0:	bcs	1bb7c <argp_error@@Base+0x1cbc>
   1bbb4:	ldr	r3, [r5, #28]
   1bbb8:	add	r3, r3, r0
   1bbbc:	str	r3, [r5, #28]
   1bbc0:	add	sp, sp, #8
   1bbc4:	ldrd	r4, [sp]
   1bbc8:	ldrd	r6, [sp, #8]
   1bbcc:	ldr	lr, [sp, #16]
   1bbd0:	add	sp, sp, #20
   1bbd4:	add	sp, sp, #12
   1bbd8:	bx	lr
   1bbdc:	mov	r0, r5
   1bbe0:	bl	1ba54 <argp_error@@Base+0x1b94>
   1bbe4:	cmp	r0, #0
   1bbe8:	beq	1bbf8 <argp_error@@Base+0x1d38>
   1bbec:	ldr	r0, [r5, #28]
   1bbf0:	ldr	r3, [r5, #32]
   1bbf4:	b	1bb90 <argp_error@@Base+0x1cd0>
   1bbf8:	mvn	r0, #0
   1bbfc:	b	1bbc0 <argp_error@@Base+0x1d00>
   1bc00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc04:	mov	r7, r0
   1bc08:	ldr	r6, [pc, #72]	; 1bc58 <argp_error@@Base+0x1d98>
   1bc0c:	ldr	r5, [pc, #72]	; 1bc5c <argp_error@@Base+0x1d9c>
   1bc10:	add	r6, pc, r6
   1bc14:	add	r5, pc, r5
   1bc18:	sub	r6, r6, r5
   1bc1c:	mov	r8, r1
   1bc20:	mov	r9, r2
   1bc24:	bl	11098 <fdopen@plt-0x20>
   1bc28:	asrs	r6, r6, #2
   1bc2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc30:	mov	r4, #0
   1bc34:	add	r4, r4, #1
   1bc38:	ldr	r3, [r5], #4
   1bc3c:	mov	r2, r9
   1bc40:	mov	r1, r8
   1bc44:	mov	r0, r7
   1bc48:	blx	r3
   1bc4c:	cmp	r6, r4
   1bc50:	bne	1bc34 <argp_error@@Base+0x1d74>
   1bc54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc58:	strdeq	r3, [r1], -ip
   1bc5c:	strdeq	r3, [r1], -r4
   1bc60:	bx	lr

Disassembly of section .fini:

0001bc64 <.fini>:
   1bc64:	push	{r3, lr}
   1bc68:	pop	{r3, pc}
