
../repos/diffutils/src/cmp:     file format elf32-littlearm


Disassembly of section .init:

00010f78 <.init>:
   10f78:	push	{r3, lr}
   10f7c:	bl	11328 <sigaltstack@plt+0x48>
   10f80:	pop	{r3, pc}

Disassembly of section .plt:

00010f84 <calloc@plt-0x14>:
   10f84:	push	{lr}		; (str lr, [sp, #-4]!)
   10f88:	ldr	lr, [pc, #4]	; 10f94 <calloc@plt-0x4>
   10f8c:	add	lr, pc, lr
   10f90:	ldr	pc, [lr, #8]!
   10f94:	andeq	r9, r1, ip, rrx

00010f98 <calloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #102400	; 0x19000
   10fa0:	ldr	pc, [ip, #108]!	; 0x6c

00010fa4 <fputs_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #102400	; 0x19000
   10fac:	ldr	pc, [ip, #100]!	; 0x64

00010fb0 <raise@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #102400	; 0x19000
   10fb8:	ldr	pc, [ip, #92]!	; 0x5c

00010fbc <iconv_close@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #102400	; 0x19000
   10fc4:	ldr	pc, [ip, #84]!	; 0x54

00010fc8 <iconv@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #102400	; 0x19000
   10fd0:	ldr	pc, [ip, #76]!	; 0x4c

00010fd4 <strcmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #102400	; 0x19000
   10fdc:	ldr	pc, [ip, #68]!	; 0x44

00010fe0 <printf@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #102400	; 0x19000
   10fe8:	ldr	pc, [ip, #60]!	; 0x3c

00010fec <read@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #102400	; 0x19000
   10ff4:	ldr	pc, [ip, #52]!	; 0x34

00010ff8 <wcwidth@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #102400	; 0x19000
   11000:	ldr	pc, [ip, #44]!	; 0x2c

00011004 <memmove@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #102400	; 0x19000
   1100c:	ldr	pc, [ip, #36]!	; 0x24

00011010 <free@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #102400	; 0x19000
   11018:	ldr	pc, [ip, #28]!

0001101c <_exit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #102400	; 0x19000
   11024:	ldr	pc, [ip, #20]!

00011028 <memcpy@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #102400	; 0x19000
   11030:	ldr	pc, [ip, #12]!

00011034 <mmap64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #102400	; 0x19000
   1103c:	ldr	pc, [ip, #4]!

00011040 <mbsinit@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #4092]!	; 0xffc

0001104c <signal@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #4084]!	; 0xff4

00011058 <memcmp@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #4076]!	; 0xfec

00011064 <fputc_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #4068]!	; 0xfe4

00011070 <dcgettext@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #4060]!	; 0xfdc

0001107c <strdup@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #4052]!	; 0xfd4

00011088 <realloc@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #4044]!	; 0xfcc

00011094 <textdomain@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #24, 20	; 0x18000
   1109c:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a0 <iswcntrl@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #24, 20	; 0x18000
   110a8:	ldr	pc, [ip, #4028]!	; 0xfbc

000110ac <rawmemchr@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #24, 20	; 0x18000
   110b4:	ldr	pc, [ip, #4020]!	; 0xfb4

000110b8 <perror@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #24, 20	; 0x18000
   110c0:	ldr	pc, [ip, #4012]!	; 0xfac

000110c4 <__fxstat64@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #24, 20	; 0x18000
   110cc:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d0 <sigaction@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #24, 20	; 0x18000
   110d8:	ldr	pc, [ip, #3996]!	; 0xf9c

000110dc <fwrite@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #24, 20	; 0x18000
   110e4:	ldr	pc, [ip, #3988]!	; 0xf94

000110e8 <lseek64@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #24, 20	; 0x18000
   110f0:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f4 <__ctype_get_mb_cur_max@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #24, 20	; 0x18000
   110fc:	ldr	pc, [ip, #3972]!	; 0xf84

00011100 <mbrtowc@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #24, 20	; 0x18000
   11108:	ldr	pc, [ip, #3964]!	; 0xf7c

0001110c <error@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #24, 20	; 0x18000
   11114:	ldr	pc, [ip, #3956]!	; 0xf74

00011118 <open64@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #24, 20	; 0x18000
   11120:	ldr	pc, [ip, #3948]!	; 0xf6c

00011124 <puts@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #24, 20	; 0x18000
   1112c:	ldr	pc, [ip, #3940]!	; 0xf64

00011130 <malloc@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #24, 20	; 0x18000
   11138:	ldr	pc, [ip, #3932]!	; 0xf5c

0001113c <iconv_open@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #24, 20	; 0x18000
   11144:	ldr	pc, [ip, #3924]!	; 0xf54

00011148 <sigaddset@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #24, 20	; 0x18000
   11150:	ldr	pc, [ip, #3916]!	; 0xf4c

00011154 <__libc_start_main@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #24, 20	; 0x18000
   1115c:	ldr	pc, [ip, #3908]!	; 0xf44

00011160 <__gmon_start__@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #24, 20	; 0x18000
   11168:	ldr	pc, [ip, #3900]!	; 0xf3c

0001116c <mempcpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #24, 20	; 0x18000
   11174:	ldr	pc, [ip, #3892]!	; 0xf34

00011178 <getopt_long@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #24, 20	; 0x18000
   11180:	ldr	pc, [ip, #3884]!	; 0xf2c

00011184 <__ctype_b_loc@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #24, 20	; 0x18000
   1118c:	ldr	pc, [ip, #3876]!	; 0xf24

00011190 <exit@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #24, 20	; 0x18000
   11198:	ldr	pc, [ip, #3868]!	; 0xf1c

0001119c <iswspace@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #24, 20	; 0x18000
   111a4:	ldr	pc, [ip, #3860]!	; 0xf14

000111a8 <strlen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #24, 20	; 0x18000
   111b0:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b4 <strchr@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #24, 20	; 0x18000
   111bc:	ldr	pc, [ip, #3844]!	; 0xf04

000111c0 <fprintf@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #24, 20	; 0x18000
   111c8:	ldr	pc, [ip, #3836]!	; 0xefc

000111cc <getpagesize@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #24, 20	; 0x18000
   111d4:	ldr	pc, [ip, #3828]!	; 0xef4

000111d8 <__errno_location@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #24, 20	; 0x18000
   111e0:	ldr	pc, [ip, #3820]!	; 0xeec

000111e4 <iswalnum@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #24, 20	; 0x18000
   111ec:	ldr	pc, [ip, #3812]!	; 0xee4

000111f0 <memset@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #24, 20	; 0x18000
   111f8:	ldr	pc, [ip, #3804]!	; 0xedc

000111fc <write@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #24, 20	; 0x18000
   11204:	ldr	pc, [ip, #3796]!	; 0xed4

00011208 <memchr@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #24, 20	; 0x18000
   11210:	ldr	pc, [ip, #3788]!	; 0xecc

00011214 <fclose@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #24, 20	; 0x18000
   1121c:	ldr	pc, [ip, #3780]!	; 0xec4

00011220 <strnlen@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #24, 20	; 0x18000
   11228:	ldr	pc, [ip, #3772]!	; 0xebc

0001122c <munmap@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #24, 20	; 0x18000
   11234:	ldr	pc, [ip, #3764]!	; 0xeb4

00011238 <fcntl64@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #24, 20	; 0x18000
   11240:	ldr	pc, [ip, #3756]!	; 0xeac

00011244 <setlocale@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #24, 20	; 0x18000
   1124c:	ldr	pc, [ip, #3748]!	; 0xea4

00011250 <sigemptyset@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #24, 20	; 0x18000
   11258:	ldr	pc, [ip, #3740]!	; 0xe9c

0001125c <strrchr@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #24, 20	; 0x18000
   11264:	ldr	pc, [ip, #3732]!	; 0xe94

00011268 <nl_langinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #24, 20	; 0x18000
   11270:	ldr	pc, [ip, #3724]!	; 0xe8c

00011274 <sprintf@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #24, 20	; 0x18000
   1127c:	ldr	pc, [ip, #3716]!	; 0xe84

00011280 <__strtoll_internal@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #24, 20	; 0x18000
   11288:	ldr	pc, [ip, #3708]!	; 0xe7c

0001128c <mincore@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #24, 20	; 0x18000
   11294:	ldr	pc, [ip, #3700]!	; 0xe74

00011298 <bindtextdomain@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #24, 20	; 0x18000
   112a0:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a4 <__xstat64@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #24, 20	; 0x18000
   112ac:	ldr	pc, [ip, #3684]!	; 0xe64

000112b0 <strncmp@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #24, 20	; 0x18000
   112b8:	ldr	pc, [ip, #3676]!	; 0xe5c

000112bc <abort@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #24, 20	; 0x18000
   112c4:	ldr	pc, [ip, #3668]!	; 0xe54

000112c8 <close@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #24, 20	; 0x18000
   112d0:	ldr	pc, [ip, #3660]!	; 0xe4c

000112d4 <__assert_fail@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #24, 20	; 0x18000
   112dc:	ldr	pc, [ip, #3652]!	; 0xe44

000112e0 <sigaltstack@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #24, 20	; 0x18000
   112e8:	ldr	pc, [ip, #3644]!	; 0xe3c

Disassembly of section .text:

000112ec <.text>:
   112ec:	mov	fp, #0
   112f0:	mov	lr, #0
   112f4:	pop	{r1}		; (ldr r1, [sp], #4)
   112f8:	mov	r2, sp
   112fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11300:	push	{r0}		; (str r0, [sp, #-4]!)
   11304:	ldr	ip, [pc, #16]	; 1131c <sigaltstack@plt+0x3c>
   11308:	push	{ip}		; (str ip, [sp, #-4]!)
   1130c:	ldr	r0, [pc, #12]	; 11320 <sigaltstack@plt+0x40>
   11310:	ldr	r3, [pc, #12]	; 11324 <sigaltstack@plt+0x44>
   11314:	bl	11154 <__libc_start_main@plt>
   11318:	bl	112bc <abort@plt>
   1131c:	andeq	r8, r1, r8, asr #11
   11320:	andeq	r1, r1, r8, asr #13
   11324:	andeq	r8, r1, r8, ror #10
   11328:	ldr	r3, [pc, #20]	; 11344 <sigaltstack@plt+0x64>
   1132c:	ldr	r2, [pc, #20]	; 11348 <sigaltstack@plt+0x68>
   11330:	add	r3, pc, r3
   11334:	ldr	r2, [r3, r2]
   11338:	cmp	r2, #0
   1133c:	bxeq	lr
   11340:	b	11160 <__gmon_start__@plt>
   11344:	andeq	r8, r1, r8, asr #25
   11348:	andeq	r0, r0, r8, lsr #2
   1134c:	ldr	r3, [pc, #28]	; 11370 <sigaltstack@plt+0x90>
   11350:	ldr	r0, [pc, #28]	; 11374 <sigaltstack@plt+0x94>
   11354:	sub	r3, r3, r0
   11358:	cmp	r3, #6
   1135c:	bxls	lr
   11360:	ldr	r3, [pc, #16]	; 11378 <sigaltstack@plt+0x98>
   11364:	cmp	r3, #0
   11368:	bxeq	lr
   1136c:	bx	r3
   11370:	andeq	sl, r2, pc, asr #2
   11374:	andeq	sl, r2, ip, asr #2
   11378:	andeq	r0, r0, r0
   1137c:	ldr	r1, [pc, #36]	; 113a8 <sigaltstack@plt+0xc8>
   11380:	ldr	r0, [pc, #36]	; 113ac <sigaltstack@plt+0xcc>
   11384:	sub	r1, r1, r0
   11388:	asr	r1, r1, #2
   1138c:	add	r1, r1, r1, lsr #31
   11390:	asrs	r1, r1, #1
   11394:	bxeq	lr
   11398:	ldr	r3, [pc, #16]	; 113b0 <sigaltstack@plt+0xd0>
   1139c:	cmp	r3, #0
   113a0:	bxeq	lr
   113a4:	bx	r3
   113a8:	andeq	sl, r2, ip, asr #2
   113ac:	andeq	sl, r2, ip, asr #2
   113b0:	andeq	r0, r0, r0
   113b4:	push	{r4, lr}
   113b8:	ldr	r4, [pc, #24]	; 113d8 <sigaltstack@plt+0xf8>
   113bc:	ldrb	r3, [r4]
   113c0:	cmp	r3, #0
   113c4:	popne	{r4, pc}
   113c8:	bl	1134c <sigaltstack@plt+0x6c>
   113cc:	mov	r3, #1
   113d0:	strb	r3, [r4]
   113d4:	pop	{r4, pc}
   113d8:	andeq	sl, r2, ip, ror #2
   113dc:	ldr	r0, [pc, #40]	; 1140c <sigaltstack@plt+0x12c>
   113e0:	ldr	r3, [r0]
   113e4:	cmp	r3, #0
   113e8:	bne	113f0 <sigaltstack@plt+0x110>
   113ec:	b	1137c <sigaltstack@plt+0x9c>
   113f0:	ldr	r3, [pc, #24]	; 11410 <sigaltstack@plt+0x130>
   113f4:	cmp	r3, #0
   113f8:	beq	113ec <sigaltstack@plt+0x10c>
   113fc:	push	{r4, lr}
   11400:	blx	r3
   11404:	pop	{r4, lr}
   11408:	b	1137c <sigaltstack@plt+0x9c>
   1140c:	andeq	r9, r2, r4, lsl pc
   11410:	andeq	r0, r0, r0
   11414:	push	{r4, lr}
   11418:	mov	r4, r1
   1141c:	subs	r1, r0, #0
   11420:	beq	11444 <sigaltstack@plt+0x164>
   11424:	mov	r2, #5
   11428:	mov	r0, #0
   1142c:	bl	11070 <dcgettext@plt>
   11430:	mov	r3, r4
   11434:	mov	r2, r0
   11438:	mov	r1, #0
   1143c:	mov	r0, r1
   11440:	bl	1110c <error@plt>
   11444:	mov	r2, #5
   11448:	ldr	r1, [pc, #28]	; 1146c <sigaltstack@plt+0x18c>
   1144c:	mov	r0, #0
   11450:	bl	11070 <dcgettext@plt>
   11454:	ldr	r3, [pc, #20]	; 11470 <sigaltstack@plt+0x190>
   11458:	ldr	r3, [r3]
   1145c:	mov	r2, r0
   11460:	mov	r1, #0
   11464:	mov	r0, #2
   11468:	bl	1110c <error@plt>
   1146c:	andeq	r8, r1, r8, ror #13
   11470:			; <UNDEFINED> instruction: 0x0003a2b0
   11474:	ldr	r3, [pc, #40]	; 114a4 <sigaltstack@plt+0x1c4>
   11478:	ldr	r3, [r3]
   1147c:	cmp	r3, r0
   11480:	cmpne	r3, #0
   11484:	bne	11494 <sigaltstack@plt+0x1b4>
   11488:	ldr	r3, [pc, #20]	; 114a4 <sigaltstack@plt+0x1c4>
   1148c:	str	r0, [r3]
   11490:	bx	lr
   11494:	push	{r4, lr}
   11498:	mov	r1, #0
   1149c:	ldr	r0, [pc, #4]	; 114a8 <sigaltstack@plt+0x1c8>
   114a0:	bl	11414 <sigaltstack@plt+0x134>
   114a4:	andeq	sl, r2, r0, ror r1
   114a8:	andeq	r8, r1, r0, lsl r7
   114ac:	push	{r4, r5, r6, r7, lr}
   114b0:	sub	sp, sp, #20
   114b4:	mov	r6, r0
   114b8:	mov	r4, r1
   114bc:	mov	r5, r2
   114c0:	ldr	r7, [r1]
   114c4:	ldr	r3, [pc, #116]	; 11540 <sigaltstack@plt+0x260>
   114c8:	str	r3, [sp]
   114cc:	add	r3, sp, #8
   114d0:	mov	r2, #0
   114d4:	mov	r0, r7
   114d8:	bl	154ec <sigaltstack@plt+0x420c>
   114dc:	cmp	r0, #0
   114e0:	beq	114fc <sigaltstack@plt+0x21c>
   114e4:	cmp	r0, #2
   114e8:	bne	11534 <sigaltstack@plt+0x254>
   114ec:	ldr	r3, [r4]
   114f0:	ldrb	r3, [r3]
   114f4:	cmp	r3, r5
   114f8:	bne	11534 <sigaltstack@plt+0x254>
   114fc:	ldrd	r4, [sp, #8]
   11500:	cmp	r4, #0
   11504:	sbcs	r3, r5, #0
   11508:	blt	11534 <sigaltstack@plt+0x254>
   1150c:	ldr	r3, [pc, #48]	; 11544 <sigaltstack@plt+0x264>
   11510:	add	r3, r3, r6, lsl #3
   11514:	ldrd	r2, [r3, #8]
   11518:	cmp	r2, r4
   1151c:	sbcs	r3, r3, r5
   11520:	ldrlt	r3, [pc, #28]	; 11544 <sigaltstack@plt+0x264>
   11524:	addlt	r6, r3, r6, lsl #3
   11528:	strdlt	r4, [r6, #8]
   1152c:	add	sp, sp, #20
   11530:	pop	{r4, r5, r6, r7, pc}
   11534:	mov	r1, r7
   11538:	ldr	r0, [pc, #8]	; 11548 <sigaltstack@plt+0x268>
   1153c:	bl	11414 <sigaltstack@plt+0x134>
   11540:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11544:	andeq	sl, r2, r0, ror r1
   11548:	andeq	r8, r1, r4, lsr r7
   1154c:	push	{r4, r5, lr}
   11550:	sub	sp, sp, #12
   11554:	mov	r4, r0
   11558:	ldr	r3, [pc, #80]	; 115b0 <sigaltstack@plt+0x2d0>
   1155c:	add	r3, r3, r0
   11560:	ldrb	r3, [r3, #24]
   11564:	cmp	r3, #0
   11568:	beq	11580 <sigaltstack@plt+0x2a0>
   1156c:	ldr	r3, [pc, #60]	; 115b0 <sigaltstack@plt+0x2d0>
   11570:	add	r4, r3, r4, lsl #3
   11574:	ldrd	r0, [r4, #40]	; 0x28
   11578:	add	sp, sp, #12
   1157c:	pop	{r4, r5, pc}
   11580:	ldr	r3, [pc, #40]	; 115b0 <sigaltstack@plt+0x2d0>
   11584:	add	r1, r3, r0
   11588:	mov	r2, #1
   1158c:	strb	r2, [r1, #24]
   11590:	add	r5, r3, r0, lsl #3
   11594:	add	r3, r3, r0, lsl #2
   11598:	ldr	r0, [r3, #28]
   1159c:	str	r2, [sp]
   115a0:	ldrd	r2, [r5, #8]
   115a4:	bl	110e8 <lseek64@plt>
   115a8:	strd	r0, [r5, #40]	; 0x28
   115ac:	b	1156c <sigaltstack@plt+0x28c>
   115b0:	andeq	sl, r2, r0, ror r1
   115b4:	push	{r4, r5, r6, lr}
   115b8:	mov	r5, r0
   115bc:	mov	r4, r1
   115c0:	bl	11184 <__ctype_b_loc@plt>
   115c4:	ldr	r2, [r0]
   115c8:	lsl	r3, r4, #1
   115cc:	ldrh	r3, [r2, r3]
   115d0:	tst	r3, #16384	; 0x4000
   115d4:	bne	115fc <sigaltstack@plt+0x31c>
   115d8:	tst	r4, #128	; 0x80
   115dc:	bne	1160c <sigaltstack@plt+0x32c>
   115e0:	cmp	r4, #31
   115e4:	bls	1162c <sigaltstack@plt+0x34c>
   115e8:	cmp	r4, #127	; 0x7f
   115ec:	moveq	r3, #94	; 0x5e
   115f0:	strbeq	r3, [r5]
   115f4:	addeq	r5, r5, #1
   115f8:	moveq	r4, #63	; 0x3f
   115fc:	strb	r4, [r5]
   11600:	mov	r3, #0
   11604:	strb	r3, [r5, #1]
   11608:	pop	{r4, r5, r6, pc}
   1160c:	mov	r3, r5
   11610:	mov	r2, #77	; 0x4d
   11614:	strb	r2, [r3], #2
   11618:	mov	r2, #45	; 0x2d
   1161c:	strb	r2, [r5, #1]
   11620:	eor	r4, r4, #128	; 0x80
   11624:	mov	r5, r3
   11628:	b	115e0 <sigaltstack@plt+0x300>
   1162c:	mov	r3, #94	; 0x5e
   11630:	strb	r3, [r5]
   11634:	add	r4, r4, #64	; 0x40
   11638:	uxtb	r4, r4
   1163c:	add	r5, r5, #1
   11640:	b	115fc <sigaltstack@plt+0x31c>
   11644:	push	{r4, lr}
   11648:	ldr	r3, [pc, #104]	; 116b8 <sigaltstack@plt+0x3d8>
   1164c:	ldr	r0, [r3]
   11650:	ldr	r3, [r0]
   11654:	tst	r3, #32
   11658:	bne	11694 <sigaltstack@plt+0x3b4>
   1165c:	bl	11214 <fclose@plt>
   11660:	cmp	r0, #0
   11664:	popeq	{r4, pc}
   11668:	bl	111d8 <__errno_location@plt>
   1166c:	ldr	r4, [r0]
   11670:	mov	r2, #5
   11674:	ldr	r1, [pc, #64]	; 116bc <sigaltstack@plt+0x3dc>
   11678:	mov	r0, #0
   1167c:	bl	11070 <dcgettext@plt>
   11680:	mov	r3, r0
   11684:	ldr	r2, [pc, #52]	; 116c0 <sigaltstack@plt+0x3e0>
   11688:	mov	r1, r4
   1168c:	mov	r0, #2
   11690:	bl	1110c <error@plt>
   11694:	mov	r2, #5
   11698:	ldr	r1, [pc, #36]	; 116c4 <sigaltstack@plt+0x3e4>
   1169c:	mov	r0, #0
   116a0:	bl	11070 <dcgettext@plt>
   116a4:	mov	r3, r0
   116a8:	ldr	r2, [pc, #16]	; 116c0 <sigaltstack@plt+0x3e0>
   116ac:	mov	r1, #0
   116b0:	mov	r0, #2
   116b4:	bl	1110c <error@plt>
   116b8:	andeq	sl, r2, r4, ror #2
   116bc:	andeq	r8, r1, ip, ror #14
   116c0:	andeq	r8, r1, r8, ror #14
   116c4:	andeq	r8, r1, r8, asr r7
   116c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116cc:	sub	sp, sp, #324	; 0x144
   116d0:	str	r0, [sp, #28]
   116d4:	mov	r4, r1
   116d8:	mov	r2, #2
   116dc:	ldr	r3, [pc, #3788]	; 125b0 <sigaltstack@plt+0x12d0>
   116e0:	str	r2, [r3]
   116e4:	ldr	r0, [r1]
   116e8:	bl	12b84 <sigaltstack@plt+0x18a4>
   116ec:	ldr	r1, [pc, #3776]	; 125b4 <sigaltstack@plt+0x12d4>
   116f0:	mov	r0, #6
   116f4:	bl	11244 <setlocale@plt>
   116f8:	ldr	r6, [pc, #3768]	; 125b8 <sigaltstack@plt+0x12d8>
   116fc:	ldr	r1, [pc, #3768]	; 125bc <sigaltstack@plt+0x12dc>
   11700:	mov	r0, r6
   11704:	bl	11298 <bindtextdomain@plt>
   11708:	mov	r0, r6
   1170c:	bl	11094 <textdomain@plt>
   11710:	mov	r0, #0
   11714:	bl	1299c <sigaltstack@plt+0x16bc>
   11718:	bl	15338 <sigaltstack@plt+0x4058>
   1171c:	ldr	r8, [pc, #3740]	; 125c0 <sigaltstack@plt+0x12e0>
   11720:	add	r7, r8, #112	; 0x70
   11724:	ldr	r6, [pc, #3736]	; 125c4 <sigaltstack@plt+0x12e4>
   11728:	ldr	r9, [pc, #3736]	; 125c8 <sigaltstack@plt+0x12e8>
   1172c:	ldr	r5, [pc, #3736]	; 125cc <sigaltstack@plt+0x12ec>
   11730:	ldr	sl, [pc, #3736]	; 125d0 <sigaltstack@plt+0x12f0>
   11734:	mov	r3, #0
   11738:	str	r3, [sp]
   1173c:	mov	r3, r7
   11740:	mov	r2, r6
   11744:	mov	r1, r4
   11748:	ldr	r0, [sp, #28]
   1174c:	bl	11178 <getopt_long@plt>
   11750:	cmn	r0, #1
   11754:	beq	119d8 <sigaltstack@plt+0x6f8>
   11758:	cmp	r0, #108	; 0x6c
   1175c:	beq	11948 <sigaltstack@plt+0x668>
   11760:	ble	11878 <sigaltstack@plt+0x598>
   11764:	cmp	r0, #115	; 0x73
   11768:	beq	11964 <sigaltstack@plt+0x684>
   1176c:	ble	118d0 <sigaltstack@plt+0x5f0>
   11770:	cmp	r0, #118	; 0x76
   11774:	beq	11970 <sigaltstack@plt+0x690>
   11778:	cmp	r0, #256	; 0x100
   1177c:	bne	119cc <sigaltstack@plt+0x6ec>
   11780:	mov	r2, #5
   11784:	ldr	r1, [pc, #3656]	; 125d4 <sigaltstack@plt+0x12f4>
   11788:	mov	r0, #0
   1178c:	bl	11070 <dcgettext@plt>
   11790:	ldr	r3, [pc, #3648]	; 125d8 <sigaltstack@plt+0x12f8>
   11794:	ldr	r1, [r3]
   11798:	bl	10fe0 <printf@plt>
   1179c:	mov	r2, #5
   117a0:	ldr	r1, [pc, #3636]	; 125dc <sigaltstack@plt+0x12fc>
   117a4:	mov	r0, #0
   117a8:	bl	11070 <dcgettext@plt>
   117ac:	bl	11124 <puts@plt>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #3620]	; 125e0 <sigaltstack@plt+0x1300>
   117b8:	mov	r0, #0
   117bc:	bl	11070 <dcgettext@plt>
   117c0:	mov	r1, r0
   117c4:	ldr	r0, [pc, #3608]	; 125e4 <sigaltstack@plt+0x1304>
   117c8:	bl	10fe0 <printf@plt>
   117cc:	mov	r2, #5
   117d0:	ldr	r1, [pc, #3600]	; 125e8 <sigaltstack@plt+0x1308>
   117d4:	mov	r0, #0
   117d8:	bl	11070 <dcgettext@plt>
   117dc:	ldr	r3, [pc, #3592]	; 125ec <sigaltstack@plt+0x130c>
   117e0:	ldr	r1, [r3]
   117e4:	bl	10fa4 <fputs_unlocked@plt>
   117e8:	ldr	r4, [pc, #3584]	; 125f0 <sigaltstack@plt+0x1310>
   117ec:	ldr	r1, [pc, #3584]	; 125f4 <sigaltstack@plt+0x1314>
   117f0:	mov	r7, #5
   117f4:	mov	r6, #0
   117f8:	ldr	r5, [pc, #3576]	; 125f8 <sigaltstack@plt+0x1318>
   117fc:	mov	r2, r7
   11800:	mov	r0, r6
   11804:	bl	11070 <dcgettext@plt>
   11808:	mov	r1, r0
   1180c:	mov	r0, r5
   11810:	bl	10fe0 <printf@plt>
   11814:	ldr	r1, [r4, #4]!
   11818:	cmp	r1, #0
   1181c:	bne	117fc <sigaltstack@plt+0x51c>
   11820:	mov	r2, #5
   11824:	ldr	r1, [pc, #3536]	; 125fc <sigaltstack@plt+0x131c>
   11828:	mov	r0, #0
   1182c:	bl	11070 <dcgettext@plt>
   11830:	mov	r4, r0
   11834:	mov	r2, #5
   11838:	ldr	r1, [pc, #3520]	; 12600 <sigaltstack@plt+0x1320>
   1183c:	mov	r0, #0
   11840:	bl	11070 <dcgettext@plt>
   11844:	mov	r5, r0
   11848:	mov	r2, #5
   1184c:	ldr	r1, [pc, #3504]	; 12604 <sigaltstack@plt+0x1324>
   11850:	mov	r0, #0
   11854:	bl	11070 <dcgettext@plt>
   11858:	mov	r3, r0
   1185c:	mov	r2, r5
   11860:	mov	r1, r4
   11864:	ldr	r0, [pc, #3484]	; 12608 <sigaltstack@plt+0x1328>
   11868:	bl	10fe0 <printf@plt>
   1186c:	bl	14ce8 <sigaltstack@plt+0x3a08>
   11870:	bl	11644 <sigaltstack@plt+0x364>
   11874:	b	119c0 <sigaltstack@plt+0x6e0>
   11878:	cmp	r0, #98	; 0x62
   1187c:	blt	119cc <sigaltstack@plt+0x6ec>
   11880:	cmp	r0, #99	; 0x63
   11884:	ble	11928 <sigaltstack@plt+0x648>
   11888:	cmp	r0, #105	; 0x69
   1188c:	bne	119cc <sigaltstack@plt+0x6ec>
   11890:	mov	r2, #58	; 0x3a
   11894:	mov	r1, r9
   11898:	mov	r0, #0
   1189c:	bl	114ac <sigaltstack@plt+0x1cc>
   118a0:	ldr	r3, [r9]
   118a4:	add	r2, r3, #1
   118a8:	str	r2, [r9]
   118ac:	ldrb	r3, [r3]
   118b0:	cmp	r3, #58	; 0x3a
   118b4:	beq	11934 <sigaltstack@plt+0x654>
   118b8:	ldrd	r0, [sl, #8]
   118bc:	ldrd	r2, [sl, #16]
   118c0:	cmp	r2, r0
   118c4:	sbcs	r3, r3, r1
   118c8:	strdlt	r0, [sl, #16]
   118cc:	b	11734 <sigaltstack@plt+0x454>
   118d0:	cmp	r0, #110	; 0x6e
   118d4:	bne	119cc <sigaltstack@plt+0x6ec>
   118d8:	str	r8, [sp]
   118dc:	add	r3, sp, #216	; 0xd8
   118e0:	mov	r2, #0
   118e4:	mov	r1, r2
   118e8:	ldr	r0, [r9]
   118ec:	bl	154ec <sigaltstack@plt+0x420c>
   118f0:	cmp	r0, #0
   118f4:	bne	11954 <sigaltstack@plt+0x674>
   118f8:	ldrd	r2, [sp, #216]	; 0xd8
   118fc:	cmp	r2, #0
   11900:	sbcs	r1, r3, #0
   11904:	blt	11954 <sigaltstack@plt+0x674>
   11908:	ldrd	r0, [r5]
   1190c:	cmp	r0, r2
   11910:	sbcs	ip, r1, r3
   11914:	movge	r0, #1
   11918:	movlt	r0, #0
   1191c:	orrs	r1, r0, r1, lsr #31
   11920:	strdne	r2, [r5]
   11924:	b	11734 <sigaltstack@plt+0x454>
   11928:	mov	r3, #1
   1192c:	strb	r3, [sl, #56]	; 0x38
   11930:	b	11734 <sigaltstack@plt+0x454>
   11934:	mov	r2, #0
   11938:	mov	r1, r9
   1193c:	mov	r0, #1
   11940:	bl	114ac <sigaltstack@plt+0x1cc>
   11944:	b	11734 <sigaltstack@plt+0x454>
   11948:	mov	r0, #1
   1194c:	bl	11474 <sigaltstack@plt+0x194>
   11950:	b	11734 <sigaltstack@plt+0x454>
   11954:	ldr	r3, [pc, #3180]	; 125c8 <sigaltstack@plt+0x12e8>
   11958:	ldr	r1, [r3]
   1195c:	ldr	r0, [pc, #3240]	; 1260c <sigaltstack@plt+0x132c>
   11960:	bl	11414 <sigaltstack@plt+0x134>
   11964:	mov	r0, #3
   11968:	bl	11474 <sigaltstack@plt+0x194>
   1196c:	b	11734 <sigaltstack@plt+0x454>
   11970:	ldr	r3, [pc, #3188]	; 125ec <sigaltstack@plt+0x130c>
   11974:	ldr	r4, [r3]
   11978:	ldr	r3, [pc, #3216]	; 12610 <sigaltstack@plt+0x1330>
   1197c:	ldr	r5, [r3]
   11980:	ldr	r1, [pc, #3212]	; 12614 <sigaltstack@plt+0x1334>
   11984:	ldr	r0, [pc, #3212]	; 12618 <sigaltstack@plt+0x1338>
   11988:	bl	13528 <sigaltstack@plt+0x2248>
   1198c:	mov	r6, r0
   11990:	ldr	r0, [pc, #3204]	; 1261c <sigaltstack@plt+0x133c>
   11994:	bl	134ac <sigaltstack@plt+0x21cc>
   11998:	mov	r3, #0
   1199c:	str	r3, [sp, #8]
   119a0:	str	r0, [sp, #4]
   119a4:	str	r6, [sp]
   119a8:	mov	r3, r5
   119ac:	ldr	r2, [pc, #3180]	; 12620 <sigaltstack@plt+0x1340>
   119b0:	ldr	r1, [pc, #3180]	; 12624 <sigaltstack@plt+0x1344>
   119b4:	mov	r0, r4
   119b8:	bl	14cb8 <sigaltstack@plt+0x39d8>
   119bc:	bl	11644 <sigaltstack@plt+0x364>
   119c0:	mov	r0, #0
   119c4:	add	sp, sp, #324	; 0x144
   119c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119cc:	mov	r1, #0
   119d0:	mov	r0, r1
   119d4:	bl	11414 <sigaltstack@plt+0x134>
   119d8:	mov	fp, r0
   119dc:	ldr	r3, [pc, #3140]	; 12628 <sigaltstack@plt+0x1348>
   119e0:	ldr	r3, [r3]
   119e4:	ldr	r2, [sp, #28]
   119e8:	cmp	r2, r3
   119ec:	beq	11b8c <sigaltstack@plt+0x8ac>
   119f0:	add	r2, r3, #1
   119f4:	ldr	r1, [pc, #3116]	; 12628 <sigaltstack@plt+0x1348>
   119f8:	str	r2, [r1]
   119fc:	lsl	r1, r3, #2
   11a00:	ldr	ip, [r4, r3, lsl #2]
   11a04:	ldr	r0, [pc, #3012]	; 125d0 <sigaltstack@plt+0x12f0>
   11a08:	str	ip, [r0, #60]	; 0x3c
   11a0c:	ldr	r0, [sp, #28]
   11a10:	cmp	r0, r2
   11a14:	addgt	r3, r3, #2
   11a18:	ldrgt	r2, [pc, #3080]	; 12628 <sigaltstack@plt+0x1348>
   11a1c:	strgt	r3, [r2]
   11a20:	addgt	r1, r4, r1
   11a24:	ldrgt	r2, [r1, #4]
   11a28:	ldrle	r2, [pc, #3068]	; 1262c <sigaltstack@plt+0x134c>
   11a2c:	ldr	r3, [pc, #2972]	; 125d0 <sigaltstack@plt+0x12f0>
   11a30:	str	r2, [r3, #64]	; 0x40
   11a34:	mov	r6, #0
   11a38:	ldr	r7, [pc, #3048]	; 12628 <sigaltstack@plt+0x1348>
   11a3c:	mov	r8, r6
   11a40:	ldr	r5, [sp, #28]
   11a44:	ldr	r3, [r7]
   11a48:	cmp	r5, r3
   11a4c:	ble	11a90 <sigaltstack@plt+0x7b0>
   11a50:	add	r2, r3, #1
   11a54:	str	r2, [r7]
   11a58:	ldr	r3, [r4, r3, lsl #2]
   11a5c:	str	r3, [sp, #216]	; 0xd8
   11a60:	mov	r2, r8
   11a64:	add	r1, sp, #216	; 0xd8
   11a68:	mov	r0, r6
   11a6c:	bl	114ac <sigaltstack@plt+0x1cc>
   11a70:	add	r6, r6, #1
   11a74:	cmp	r6, #2
   11a78:	bne	11a44 <sigaltstack@plt+0x764>
   11a7c:	ldr	r3, [pc, #2980]	; 12628 <sigaltstack@plt+0x1348>
   11a80:	ldr	r3, [r3]
   11a84:	ldr	r2, [sp, #28]
   11a88:	cmp	r2, r3
   11a8c:	bgt	11c10 <sigaltstack@plt+0x930>
   11a90:	ldr	r3, [pc, #2872]	; 125d0 <sigaltstack@plt+0x12f0>
   11a94:	ldr	r4, [r3, #60]	; 0x3c
   11a98:	ldr	r1, [pc, #2956]	; 1262c <sigaltstack@plt+0x134c>
   11a9c:	mov	r0, r4
   11aa0:	bl	10fd4 <strcmp@plt>
   11aa4:	subs	r1, r0, #0
   11aa8:	bne	11b9c <sigaltstack@plt+0x8bc>
   11aac:	mov	r2, #0
   11ab0:	ldr	r3, [pc, #2840]	; 125d0 <sigaltstack@plt+0x12f0>
   11ab4:	str	r2, [r3, #28]
   11ab8:	ldr	r2, [pc, #2928]	; 12630 <sigaltstack@plt+0x1350>
   11abc:	mov	r0, #3
   11ac0:	bl	110c4 <__fxstat64@plt>
   11ac4:	cmp	r0, #0
   11ac8:	bne	11c50 <sigaltstack@plt+0x970>
   11acc:	ldr	r3, [pc, #2812]	; 125d0 <sigaltstack@plt+0x12f0>
   11ad0:	ldrd	r0, [r3, #16]
   11ad4:	ldrd	r2, [r3, #8]
   11ad8:	cmp	r1, r3
   11adc:	cmpeq	r0, r2
   11ae0:	beq	11bf4 <sigaltstack@plt+0x914>
   11ae4:	ldr	r3, [pc, #2788]	; 125d0 <sigaltstack@plt+0x12f0>
   11ae8:	ldr	r4, [r3, #64]	; 0x40
   11aec:	ldr	r1, [pc, #2872]	; 1262c <sigaltstack@plt+0x134c>
   11af0:	mov	r0, r4
   11af4:	bl	10fd4 <strcmp@plt>
   11af8:	subs	r1, r0, #0
   11afc:	bne	11c1c <sigaltstack@plt+0x93c>
   11b00:	mov	r2, #0
   11b04:	ldr	r3, [pc, #2756]	; 125d0 <sigaltstack@plt+0x12f0>
   11b08:	str	r2, [r3, #32]
   11b0c:	ldr	r2, [pc, #2848]	; 12634 <sigaltstack@plt+0x1354>
   11b10:	mov	r0, #3
   11b14:	bl	110c4 <__fxstat64@plt>
   11b18:	subs	r3, r0, #0
   11b1c:	str	r3, [sp, #64]	; 0x40
   11b20:	bne	11c58 <sigaltstack@plt+0x978>
   11b24:	ldr	r3, [pc, #2724]	; 125d0 <sigaltstack@plt+0x12f0>
   11b28:	add	r2, r3, #272	; 0x110
   11b2c:	ldrd	r0, [r3, #168]	; 0xa8
   11b30:	ldrd	r2, [r2]
   11b34:	cmp	r1, r3
   11b38:	cmpeq	r0, r2
   11b3c:	beq	11c60 <sigaltstack@plt+0x980>
   11b40:	ldr	r3, [pc, #2696]	; 125d0 <sigaltstack@plt+0x12f0>
   11b44:	ldr	r3, [r3, #88]	; 0x58
   11b48:	and	r3, r3, #61440	; 0xf000
   11b4c:	cmp	r3, #24576	; 0x6000
   11b50:	beq	11d70 <sigaltstack@plt+0xa90>
   11b54:	cmp	r3, #8192	; 0x2000
   11b58:	bne	11c8c <sigaltstack@plt+0x9ac>
   11b5c:	ldr	r3, [pc, #2668]	; 125d0 <sigaltstack@plt+0x12f0>
   11b60:	ldr	r3, [r3, #192]	; 0xc0
   11b64:	and	r3, r3, #61440	; 0xf000
   11b68:	cmp	r3, #8192	; 0x2000
   11b6c:	bne	11d84 <sigaltstack@plt+0xaa4>
   11b70:	ldr	r3, [pc, #2648]	; 125d0 <sigaltstack@plt+0x12f0>
   11b74:	ldrd	r0, [r3, #104]	; 0x68
   11b78:	ldrd	r2, [r3, #208]	; 0xd0
   11b7c:	cmp	r1, r3
   11b80:	cmpeq	r0, r2
   11b84:	bne	11c8c <sigaltstack@plt+0x9ac>
   11b88:	b	11c78 <sigaltstack@plt+0x998>
   11b8c:	sub	r5, r2, #-1073741823	; 0xc0000001
   11b90:	ldr	r1, [r4, r5, lsl #2]
   11b94:	ldr	r0, [pc, #2716]	; 12638 <sigaltstack@plt+0x1358>
   11b98:	bl	11414 <sigaltstack@plt+0x134>
   11b9c:	mov	r2, #0
   11ba0:	mov	r1, r2
   11ba4:	mov	r0, r4
   11ba8:	bl	11118 <open64@plt>
   11bac:	mov	r1, r0
   11bb0:	ldr	r3, [pc, #2584]	; 125d0 <sigaltstack@plt+0x12f0>
   11bb4:	str	r0, [r3, #28]
   11bb8:	cmp	r0, #0
   11bbc:	bge	11ab8 <sigaltstack@plt+0x7d8>
   11bc0:	mov	r4, #0
   11bc4:	ldr	r3, [pc, #2564]	; 125d0 <sigaltstack@plt+0x12f0>
   11bc8:	ldr	r3, [r3]
   11bcc:	cmp	r3, #3
   11bd0:	beq	11c48 <sigaltstack@plt+0x968>
   11bd4:	bl	111d8 <__errno_location@plt>
   11bd8:	ldr	r3, [pc, #2544]	; 125d0 <sigaltstack@plt+0x12f0>
   11bdc:	add	r4, r3, r4, lsl #2
   11be0:	ldr	r3, [r4, #60]	; 0x3c
   11be4:	ldr	r2, [pc, #2640]	; 1263c <sigaltstack@plt+0x135c>
   11be8:	ldr	r1, [r0]
   11bec:	mov	r0, #2
   11bf0:	bl	1110c <error@plt>
   11bf4:	ldr	r3, [pc, #2516]	; 125d0 <sigaltstack@plt+0x12f0>
   11bf8:	ldr	r1, [r3, #64]	; 0x40
   11bfc:	ldr	r0, [r3, #60]	; 0x3c
   11c00:	bl	10fd4 <strcmp@plt>
   11c04:	cmp	r0, #0
   11c08:	bne	11ae4 <sigaltstack@plt+0x804>
   11c0c:	b	119c0 <sigaltstack@plt+0x6e0>
   11c10:	ldr	r1, [r4, r3, lsl #2]
   11c14:	ldr	r0, [pc, #2596]	; 12640 <sigaltstack@plt+0x1360>
   11c18:	bl	11414 <sigaltstack@plt+0x134>
   11c1c:	mov	r2, #0
   11c20:	mov	r1, r2
   11c24:	mov	r0, r4
   11c28:	bl	11118 <open64@plt>
   11c2c:	mov	r1, r0
   11c30:	ldr	r3, [pc, #2456]	; 125d0 <sigaltstack@plt+0x12f0>
   11c34:	str	r0, [r3, #32]
   11c38:	cmp	r0, #0
   11c3c:	bge	11b0c <sigaltstack@plt+0x82c>
   11c40:	mov	r4, #1
   11c44:	b	11bc4 <sigaltstack@plt+0x8e4>
   11c48:	mov	r0, #2
   11c4c:	bl	11190 <exit@plt>
   11c50:	mov	r4, #0
   11c54:	b	11bd4 <sigaltstack@plt+0x8f4>
   11c58:	mov	r4, #1
   11c5c:	b	11bd4 <sigaltstack@plt+0x8f4>
   11c60:	ldr	r3, [pc, #2408]	; 125d0 <sigaltstack@plt+0x12f0>
   11c64:	ldrd	r0, [r3, #72]	; 0x48
   11c68:	ldrd	r2, [r3, #176]	; 0xb0
   11c6c:	cmp	r1, r3
   11c70:	cmpeq	r0, r2
   11c74:	bne	11b40 <sigaltstack@plt+0x860>
   11c78:	ldr	r3, [pc, #2384]	; 125d0 <sigaltstack@plt+0x12f0>
   11c7c:	ldr	r2, [r3, #88]	; 0x58
   11c80:	ldr	r3, [r3, #192]	; 0xc0
   11c84:	cmp	r2, r3
   11c88:	beq	11d98 <sigaltstack@plt+0xab8>
   11c8c:	ldr	r3, [pc, #2364]	; 125d0 <sigaltstack@plt+0x12f0>
   11c90:	ldr	r3, [r3]
   11c94:	cmp	r3, #3
   11c98:	beq	11ee4 <sigaltstack@plt+0xc04>
   11c9c:	add	r2, sp, #112	; 0x70
   11ca0:	mov	r1, #1
   11ca4:	mov	r0, #3
   11ca8:	bl	110c4 <__fxstat64@plt>
   11cac:	cmp	r0, #0
   11cb0:	beq	11e3c <sigaltstack@plt+0xb5c>
   11cb4:	ldr	r3, [pc, #2324]	; 125d0 <sigaltstack@plt+0x12f0>
   11cb8:	ldr	r3, [r3]
   11cbc:	cmp	r3, #3
   11cc0:	beq	11ee4 <sigaltstack@plt+0xc04>
   11cc4:	ldr	r4, [pc, #2308]	; 125d0 <sigaltstack@plt+0x12f0>
   11cc8:	mvn	r2, #-2147483644	; 0x80000004
   11ccc:	ldr	r1, [r4, #232]	; 0xe8
   11cd0:	ldr	r0, [r4, #128]	; 0x80
   11cd4:	bl	159b0 <sigaltstack@plt+0x46d0>
   11cd8:	str	r0, [r4, #280]	; 0x118
   11cdc:	add	r5, r0, #7
   11ce0:	lsr	r0, r5, #2
   11ce4:	lsl	r0, r0, #3
   11ce8:	bl	14d6c <sigaltstack@plt+0x3a8c>
   11cec:	str	r0, [sp, #28]
   11cf0:	str	r0, [r4, #284]	; 0x11c
   11cf4:	bic	r5, r5, #3
   11cf8:	add	r3, r0, r5
   11cfc:	str	r3, [sp, #48]	; 0x30
   11d00:	str	r3, [r4, #288]	; 0x120
   11d04:	ldr	r3, [pc, #2240]	; 125cc <sigaltstack@plt+0x12ec>
   11d08:	ldrd	r2, [r3]
   11d0c:	strd	r2, [sp, #40]	; 0x28
   11d10:	ldr	r3, [r4]
   11d14:	cmp	r3, #1
   11d18:	beq	11fb4 <sigaltstack@plt+0xcd4>
   11d1c:	ldr	r8, [sp, #64]	; 0x40
   11d20:	ldr	r9, [pc, #2216]	; 125d0 <sigaltstack@plt+0x12f0>
   11d24:	add	sl, r9, #8
   11d28:	lsl	r3, r8, #3
   11d2c:	ldrd	r6, [r3, sl]
   11d30:	orrs	r3, r6, r7
   11d34:	bne	12064 <sigaltstack@plt+0xd84>
   11d38:	add	r8, r8, #1
   11d3c:	cmp	r8, #2
   11d40:	bne	11d28 <sigaltstack@plt+0xa48>
   11d44:	ldr	r3, [sp, #64]	; 0x40
   11d48:	str	r3, [sp, #52]	; 0x34
   11d4c:	mov	r2, #1
   11d50:	mov	r3, #0
   11d54:	strd	r2, [sp, #32]
   11d58:	strd	r2, [sp, #56]	; 0x38
   11d5c:	mov	r3, #1
   11d60:	str	r3, [sp, #72]	; 0x48
   11d64:	ldr	sl, [pc, #2148]	; 125d0 <sigaltstack@plt+0x12f0>
   11d68:	str	fp, [sp, #76]	; 0x4c
   11d6c:	b	126bc <sigaltstack@plt+0x13dc>
   11d70:	ldr	r3, [pc, #2136]	; 125d0 <sigaltstack@plt+0x12f0>
   11d74:	ldr	r3, [r3, #192]	; 0xc0
   11d78:	and	r3, r3, #61440	; 0xf000
   11d7c:	cmp	r3, #24576	; 0x6000
   11d80:	beq	11b70 <sigaltstack@plt+0x890>
   11d84:	ldr	r3, [pc, #2116]	; 125d0 <sigaltstack@plt+0x12f0>
   11d88:	ldr	r3, [r3]
   11d8c:	cmp	r3, #3
   11d90:	bne	11c9c <sigaltstack@plt+0x9bc>
   11d94:	b	11cc4 <sigaltstack@plt+0x9e4>
   11d98:	ldr	r3, [pc, #2096]	; 125d0 <sigaltstack@plt+0x12f0>
   11d9c:	ldr	r2, [r3, #92]	; 0x5c
   11da0:	ldr	r3, [r3, #196]	; 0xc4
   11da4:	cmp	r2, r3
   11da8:	bne	11c8c <sigaltstack@plt+0x9ac>
   11dac:	ldr	r3, [pc, #2076]	; 125d0 <sigaltstack@plt+0x12f0>
   11db0:	ldr	r2, [r3, #96]	; 0x60
   11db4:	ldr	r3, [r3, #200]	; 0xc8
   11db8:	cmp	r2, r3
   11dbc:	bne	11c8c <sigaltstack@plt+0x9ac>
   11dc0:	ldr	r3, [pc, #2056]	; 125d0 <sigaltstack@plt+0x12f0>
   11dc4:	ldr	r2, [r3, #100]	; 0x64
   11dc8:	ldr	r3, [r3, #204]	; 0xcc
   11dcc:	cmp	r2, r3
   11dd0:	bne	11c8c <sigaltstack@plt+0x9ac>
   11dd4:	ldr	r3, [pc, #2036]	; 125d0 <sigaltstack@plt+0x12f0>
   11dd8:	ldrd	r0, [r3, #120]	; 0x78
   11ddc:	ldrd	r2, [r3, #224]	; 0xe0
   11de0:	cmp	r1, r3
   11de4:	cmpeq	r0, r2
   11de8:	bne	11c8c <sigaltstack@plt+0x9ac>
   11dec:	ldr	r3, [pc, #2012]	; 125d0 <sigaltstack@plt+0x12f0>
   11df0:	ldr	r2, [r3, #152]	; 0x98
   11df4:	ldr	r3, [r3, #256]	; 0x100
   11df8:	cmp	r2, r3
   11dfc:	bne	11c8c <sigaltstack@plt+0x9ac>
   11e00:	ldr	r3, [pc, #1992]	; 125d0 <sigaltstack@plt+0x12f0>
   11e04:	ldr	r2, [r3, #160]	; 0xa0
   11e08:	ldr	r3, [r3, #264]	; 0x108
   11e0c:	cmp	r2, r3
   11e10:	bne	11c8c <sigaltstack@plt+0x9ac>
   11e14:	mov	r0, #0
   11e18:	bl	1154c <sigaltstack@plt+0x26c>
   11e1c:	mov	r4, r0
   11e20:	mov	r5, r1
   11e24:	mov	r0, #1
   11e28:	bl	1154c <sigaltstack@plt+0x26c>
   11e2c:	cmp	r5, r1
   11e30:	cmpeq	r4, r0
   11e34:	bne	11c8c <sigaltstack@plt+0x9ac>
   11e38:	b	119c0 <sigaltstack@plt+0x6e0>
   11e3c:	add	r2, sp, #216	; 0xd8
   11e40:	ldr	r1, [pc, #2044]	; 12644 <sigaltstack@plt+0x1364>
   11e44:	mov	r0, #3
   11e48:	bl	112a4 <__xstat64@plt>
   11e4c:	cmp	r0, #0
   11e50:	bne	11cb4 <sigaltstack@plt+0x9d4>
   11e54:	add	r3, sp, #312	; 0x138
   11e58:	ldrd	r2, [r3]
   11e5c:	ldrd	r0, [sp, #208]	; 0xd0
   11e60:	cmp	r1, r3
   11e64:	cmpeq	r0, r2
   11e68:	beq	11e98 <sigaltstack@plt+0xbb8>
   11e6c:	ldr	r3, [sp, #128]	; 0x80
   11e70:	and	r3, r3, #61440	; 0xf000
   11e74:	cmp	r3, #24576	; 0x6000
   11e78:	beq	11ebc <sigaltstack@plt+0xbdc>
   11e7c:	cmp	r3, #8192	; 0x2000
   11e80:	bne	11cb4 <sigaltstack@plt+0x9d4>
   11e84:	ldr	r3, [sp, #232]	; 0xe8
   11e88:	and	r3, r3, #61440	; 0xf000
   11e8c:	cmp	r3, #8192	; 0x2000
   11e90:	bne	11cb4 <sigaltstack@plt+0x9d4>
   11e94:	b	11ecc <sigaltstack@plt+0xbec>
   11e98:	ldrd	r2, [sp, #216]	; 0xd8
   11e9c:	ldrd	r0, [sp, #112]	; 0x70
   11ea0:	cmp	r1, r3
   11ea4:	cmpeq	r0, r2
   11ea8:	bne	11e6c <sigaltstack@plt+0xb8c>
   11eac:	mov	r2, #2
   11eb0:	ldr	r3, [pc, #1816]	; 125d0 <sigaltstack@plt+0x12f0>
   11eb4:	str	r2, [r3]
   11eb8:	b	11cb4 <sigaltstack@plt+0x9d4>
   11ebc:	ldr	r3, [sp, #232]	; 0xe8
   11ec0:	and	r3, r3, #61440	; 0xf000
   11ec4:	cmp	r3, #24576	; 0x6000
   11ec8:	bne	11cb4 <sigaltstack@plt+0x9d4>
   11ecc:	ldrd	r2, [sp, #248]	; 0xf8
   11ed0:	ldrd	r0, [sp, #144]	; 0x90
   11ed4:	cmp	r1, r3
   11ed8:	cmpeq	r0, r2
   11edc:	bne	11cb4 <sigaltstack@plt+0x9d4>
   11ee0:	b	11eac <sigaltstack@plt+0xbcc>
   11ee4:	ldr	r3, [pc, #1764]	; 125d0 <sigaltstack@plt+0x12f0>
   11ee8:	ldr	r3, [r3, #88]	; 0x58
   11eec:	and	r3, r3, #61440	; 0xf000
   11ef0:	cmp	r3, #32768	; 0x8000
   11ef4:	bne	11cc4 <sigaltstack@plt+0x9e4>
   11ef8:	ldr	r3, [pc, #1744]	; 125d0 <sigaltstack@plt+0x12f0>
   11efc:	ldr	r3, [r3, #192]	; 0xc0
   11f00:	and	r3, r3, #61440	; 0xf000
   11f04:	cmp	r3, #32768	; 0x8000
   11f08:	bne	11cc4 <sigaltstack@plt+0x9e4>
   11f0c:	ldr	r4, [pc, #1724]	; 125d0 <sigaltstack@plt+0x12f0>
   11f10:	ldrd	r6, [r4, #120]	; 0x78
   11f14:	mov	r0, #0
   11f18:	bl	1154c <sigaltstack@plt+0x26c>
   11f1c:	subs	r6, r6, r0
   11f20:	sbc	r7, r7, r1
   11f24:	ldrd	r4, [r4, #224]	; 0xe0
   11f28:	mov	r0, #1
   11f2c:	bl	1154c <sigaltstack@plt+0x26c>
   11f30:	subs	r0, r4, r0
   11f34:	sbc	r1, r5, r1
   11f38:	mov	r4, r6
   11f3c:	mov	r5, r7
   11f40:	cmp	r6, #0
   11f44:	sbcs	r3, r7, #0
   11f48:	movlt	r4, #0
   11f4c:	movlt	r5, #0
   11f50:	mov	r2, r0
   11f54:	mov	r3, r1
   11f58:	cmp	r0, #0
   11f5c:	sbcs	r1, r1, #0
   11f60:	movlt	r2, #0
   11f64:	movlt	r3, #0
   11f68:	cmp	r5, r3
   11f6c:	cmpeq	r4, r2
   11f70:	beq	11cc4 <sigaltstack@plt+0x9e4>
   11f74:	ldr	r1, [pc, #1616]	; 125cc <sigaltstack@plt+0x12ec>
   11f78:	ldrd	r0, [r1]
   11f7c:	cmp	r0, #0
   11f80:	sbcs	ip, r1, #0
   11f84:	blt	11fac <sigaltstack@plt+0xccc>
   11f88:	mov	r6, r4
   11f8c:	mov	r7, r5
   11f90:	cmp	r2, r4
   11f94:	sbcs	ip, r3, r5
   11f98:	movlt	r6, r2
   11f9c:	movlt	r7, r3
   11fa0:	cmp	r6, r0
   11fa4:	sbcs	r3, r7, r1
   11fa8:	bge	11cc4 <sigaltstack@plt+0x9e4>
   11fac:	mov	r0, #1
   11fb0:	bl	11190 <exit@plt>
   11fb4:	ldrd	r2, [sp, #40]	; 0x28
   11fb8:	cmp	r2, #0
   11fbc:	sbcs	r1, r3, #0
   11fc0:	movge	r4, r2
   11fc4:	movge	r5, r3
   11fc8:	mvnlt	r4, #0
   11fcc:	mvnlt	r5, #-2147483648	; 0x80000000
   11fd0:	ldr	r9, [pc, #1624]	; 12630 <sigaltstack@plt+0x1350>
   11fd4:	ldr	r8, [sp, #64]	; 0x40
   11fd8:	ldr	r3, [r9, #16]
   11fdc:	and	r3, r3, #61440	; 0xf000
   11fe0:	cmp	r3, #32768	; 0x8000
   11fe4:	beq	12034 <sigaltstack@plt+0xd54>
   11fe8:	add	r8, r8, #1
   11fec:	add	r9, r9, #104	; 0x68
   11ff0:	cmp	r8, #2
   11ff4:	bne	11fd8 <sigaltstack@plt+0xcf8>
   11ff8:	mov	r3, #1
   11ffc:	mov	r6, #10
   12000:	mov	r7, #0
   12004:	mov	r8, r3
   12008:	mov	r2, r6
   1200c:	mov	r3, r7
   12010:	mov	r0, r4
   12014:	mov	r1, r5
   12018:	bl	1835c <sigaltstack@plt+0x707c>
   1201c:	mov	r4, r0
   12020:	mov	r5, r1
   12024:	orrs	r3, r4, r5
   12028:	bne	1205c <sigaltstack@plt+0xd7c>
   1202c:	str	r8, [sp, #68]	; 0x44
   12030:	b	11d1c <sigaltstack@plt+0xa3c>
   12034:	ldrd	r6, [r9, #48]	; 0x30
   12038:	mov	r0, r8
   1203c:	bl	1154c <sigaltstack@plt+0x26c>
   12040:	subs	r0, r6, r0
   12044:	sbc	r1, r7, r1
   12048:	cmp	r0, r4
   1204c:	sbcs	r3, r1, r5
   12050:	movlt	r4, r0
   12054:	movlt	r5, r1
   12058:	b	11fe8 <sigaltstack@plt+0xd08>
   1205c:	add	r8, r8, #1
   12060:	b	12008 <sigaltstack@plt+0xd28>
   12064:	mov	r0, r8
   12068:	bl	1154c <sigaltstack@plt+0x26c>
   1206c:	mvn	r2, #0
   12070:	mvn	r3, #0
   12074:	cmp	r1, r3
   12078:	cmpeq	r0, r2
   1207c:	bne	11d38 <sigaltstack@plt+0xa58>
   12080:	lsl	r3, r8, #2
   12084:	str	r8, [sp, #32]
   12088:	mov	r8, r3
   1208c:	ldr	r4, [r9, #280]	; 0x118
   12090:	mov	r5, #0
   12094:	cmp	r6, r4
   12098:	sbcs	r3, r7, r5
   1209c:	movlt	r4, r6
   120a0:	mov	r2, r4
   120a4:	ldr	r1, [sp, #28]
   120a8:	ldr	r3, [pc, #1432]	; 12648 <sigaltstack@plt+0x1368>
   120ac:	ldr	r0, [r8, r3]
   120b0:	bl	15930 <sigaltstack@plt+0x4650>
   120b4:	cmp	r4, r0
   120b8:	bne	120d4 <sigaltstack@plt+0xdf4>
   120bc:	subs	r6, r6, r4
   120c0:	sbc	r7, r7, #0
   120c4:	orrs	r3, r6, r7
   120c8:	bne	1208c <sigaltstack@plt+0xdac>
   120cc:	ldr	r8, [sp, #32]
   120d0:	b	11d38 <sigaltstack@plt+0xa58>
   120d4:	ldr	r8, [sp, #32]
   120d8:	cmn	r0, #1
   120dc:	bne	11d38 <sigaltstack@plt+0xa58>
   120e0:	bl	111d8 <__errno_location@plt>
   120e4:	ldr	r3, [pc, #1252]	; 125d0 <sigaltstack@plt+0x12f0>
   120e8:	add	r8, r3, r8, lsl #2
   120ec:	ldr	r3, [r8, #60]	; 0x3c
   120f0:	ldr	r2, [pc, #1348]	; 1263c <sigaltstack@plt+0x135c>
   120f4:	ldr	r1, [r0]
   120f8:	mov	r0, #2
   120fc:	bl	1110c <error@plt>
   12100:	bl	111d8 <__errno_location@plt>
   12104:	ldr	r3, [pc, #1220]	; 125d0 <sigaltstack@plt+0x12f0>
   12108:	ldr	r3, [r3, #60]	; 0x3c
   1210c:	ldr	r2, [pc, #1320]	; 1263c <sigaltstack@plt+0x135c>
   12110:	ldr	r1, [r0]
   12114:	mov	r0, #2
   12118:	bl	1110c <error@plt>
   1211c:	bl	111d8 <__errno_location@plt>
   12120:	ldr	r3, [pc, #1192]	; 125d0 <sigaltstack@plt+0x12f0>
   12124:	ldr	r3, [r3, #64]	; 0x40
   12128:	ldr	r2, [pc, #1292]	; 1263c <sigaltstack@plt+0x135c>
   1212c:	ldr	r1, [r0]
   12130:	mov	r0, #2
   12134:	bl	1110c <error@plt>
   12138:	mov	r3, #121	; 0x79
   1213c:	ldr	r2, [sp, #28]
   12140:	strb	r3, [r2, r8]
   12144:	b	12764 <sigaltstack@plt+0x1484>
   12148:	mov	r3, lr
   1214c:	b	127bc <sigaltstack@plt+0x14dc>
   12150:	mov	r3, ip
   12154:	b	127dc <sigaltstack@plt+0x14fc>
   12158:	mov	fp, r7
   1215c:	ldr	r0, [sp, #28]
   12160:	add	r6, r0, fp
   12164:	ldrb	r3, [r0, fp]
   12168:	str	r3, [sp, #72]	; 0x48
   1216c:	mov	r3, #10
   12170:	strb	r3, [r0, fp]
   12174:	mov	r4, #0
   12178:	b	12184 <sigaltstack@plt+0xea4>
   1217c:	add	r4, r4, #1
   12180:	add	r0, r0, #1
   12184:	mov	r1, #10
   12188:	bl	110ac <rawmemchr@plt>
   1218c:	cmp	r6, r0
   12190:	bne	1217c <sigaltstack@plt+0xe9c>
   12194:	ldrb	r3, [sp, #72]	; 0x48
   12198:	strb	r3, [r6]
   1219c:	ldrd	r2, [sp, #56]	; 0x38
   121a0:	adds	r2, r2, r4
   121a4:	adc	r3, r3, #0
   121a8:	strd	r2, [sp, #56]	; 0x38
   121ac:	ldr	r3, [sp, #28]
   121b0:	add	r3, r3, fp
   121b4:	ldrb	r3, [r3, #-1]
   121b8:	cmp	r3, #10
   121bc:	movne	r3, #0
   121c0:	moveq	r3, #1
   121c4:	str	r3, [sp, #72]	; 0x48
   121c8:	b	12824 <sigaltstack@plt+0x1544>
   121cc:	mov	r3, #1
   121d0:	str	r3, [sp, #52]	; 0x34
   121d4:	b	1269c <sigaltstack@plt+0x13bc>
   121d8:	add	r2, sp, #112	; 0x70
   121dc:	ldrd	r0, [sp, #32]
   121e0:	bl	12ab0 <sigaltstack@plt+0x17d0>
   121e4:	mov	sl, r0
   121e8:	add	r2, sp, #216	; 0xd8
   121ec:	ldrd	r0, [sp, #56]	; 0x38
   121f0:	bl	12ab0 <sigaltstack@plt+0x17d0>
   121f4:	mov	r5, r0
   121f8:	ldr	r3, [pc, #976]	; 125d0 <sigaltstack@plt+0x12f0>
   121fc:	ldrb	r3, [r3, #56]	; 0x38
   12200:	cmp	r3, #0
   12204:	bne	12264 <sigaltstack@plt+0xf84>
   12208:	ldr	r6, [pc, #1084]	; 1264c <sigaltstack@plt+0x136c>
   1220c:	mov	r2, #5
   12210:	mov	r1, r6
   12214:	mov	r0, #0
   12218:	bl	11070 <dcgettext@plt>
   1221c:	cmp	r0, r6
   12220:	beq	12244 <sigaltstack@plt+0xf64>
   12224:	ldr	r1, [pc, #932]	; 125d0 <sigaltstack@plt+0x12f0>
   12228:	str	r5, [sp]
   1222c:	mov	r3, sl
   12230:	ldr	r2, [r1, #64]	; 0x40
   12234:	ldr	r1, [r1, #60]	; 0x3c
   12238:	bl	10fe0 <printf@plt>
   1223c:	mov	sl, #1
   12240:	b	12534 <sigaltstack@plt+0x1254>
   12244:	mov	r0, #5
   12248:	bl	12a50 <sigaltstack@plt+0x1770>
   1224c:	cmp	r0, #0
   12250:	add	r3, r6, #32
   12254:	mov	r0, r6
   12258:	movne	r0, r6
   1225c:	moveq	r0, r3
   12260:	b	12224 <sigaltstack@plt+0xf44>
   12264:	ldr	r3, [sp, #28]
   12268:	ldrb	r6, [r3, fp]
   1226c:	ldr	r3, [sp, #48]	; 0x30
   12270:	ldrb	r8, [r3, fp]
   12274:	add	r7, sp, #96	; 0x60
   12278:	mov	r1, r6
   1227c:	mov	r0, r7
   12280:	bl	115b4 <sigaltstack@plt+0x2d4>
   12284:	add	r9, sp, #104	; 0x68
   12288:	mov	r1, r8
   1228c:	mov	r0, r9
   12290:	bl	115b4 <sigaltstack@plt+0x2d4>
   12294:	mov	r2, #5
   12298:	ldr	r1, [pc, #944]	; 12650 <sigaltstack@plt+0x1370>
   1229c:	mov	r0, #0
   122a0:	bl	11070 <dcgettext@plt>
   122a4:	ldr	r1, [pc, #804]	; 125d0 <sigaltstack@plt+0x12f0>
   122a8:	str	r9, [sp, #16]
   122ac:	str	r8, [sp, #12]
   122b0:	str	r7, [sp, #8]
   122b4:	str	r6, [sp, #4]
   122b8:	str	r5, [sp]
   122bc:	mov	r3, sl
   122c0:	ldr	r2, [r1, #64]	; 0x40
   122c4:	ldr	r1, [r1, #60]	; 0x3c
   122c8:	bl	10fe0 <printf@plt>
   122cc:	b	1223c <sigaltstack@plt+0xf5c>
   122d0:	ldr	r3, [sp, #28]
   122d4:	add	r4, r3, fp
   122d8:	ldr	r2, [sp, #48]	; 0x30
   122dc:	add	r5, r2, fp
   122e0:	add	r1, r3, r7
   122e4:	ldrd	r2, [sp, #32]
   122e8:	str	r9, [sp, #80]	; 0x50
   122ec:	str	r8, [sp, #84]	; 0x54
   122f0:	str	r7, [sp, #88]	; 0x58
   122f4:	mov	r8, r2
   122f8:	mov	r9, r3
   122fc:	str	fp, [sp, #92]	; 0x5c
   12300:	mov	fp, r1
   12304:	b	12358 <sigaltstack@plt+0x1078>
   12308:	mov	r1, r6
   1230c:	add	r0, sp, #104	; 0x68
   12310:	bl	115b4 <sigaltstack@plt+0x2d4>
   12314:	mov	r1, r7
   12318:	add	r0, sp, #112	; 0x70
   1231c:	bl	115b4 <sigaltstack@plt+0x2d4>
   12320:	add	r3, sp, #112	; 0x70
   12324:	str	r3, [sp, #8]
   12328:	str	r7, [sp, #4]
   1232c:	add	r3, sp, #104	; 0x68
   12330:	str	r3, [sp]
   12334:	mov	r3, r6
   12338:	ldr	r2, [sp, #52]	; 0x34
   1233c:	ldr	r1, [sp, #68]	; 0x44
   12340:	ldr	r0, [pc, #780]	; 12654 <sigaltstack@plt+0x1374>
   12344:	bl	10fe0 <printf@plt>
   12348:	adds	r8, r8, #1
   1234c:	adc	r9, r9, #0
   12350:	cmp	fp, r4
   12354:	beq	123a4 <sigaltstack@plt+0x10c4>
   12358:	ldrb	r6, [r4], #1
   1235c:	ldrb	r7, [r5], #1
   12360:	cmp	r6, r7
   12364:	beq	12348 <sigaltstack@plt+0x1068>
   12368:	add	r2, sp, #216	; 0xd8
   1236c:	mov	r0, r8
   12370:	mov	r1, r9
   12374:	bl	12ab0 <sigaltstack@plt+0x17d0>
   12378:	str	r0, [sp, #52]	; 0x34
   1237c:	ldrb	r3, [sl, #56]	; 0x38
   12380:	cmp	r3, #0
   12384:	bne	12308 <sigaltstack@plt+0x1028>
   12388:	str	r7, [sp]
   1238c:	mov	r3, r6
   12390:	mov	r2, r0
   12394:	ldr	r1, [sp, #68]	; 0x44
   12398:	ldr	r0, [pc, #696]	; 12658 <sigaltstack@plt+0x1378>
   1239c:	bl	10fe0 <printf@plt>
   123a0:	b	12348 <sigaltstack@plt+0x1068>
   123a4:	ldr	r9, [sp, #80]	; 0x50
   123a8:	ldr	r8, [sp, #84]	; 0x54
   123ac:	ldr	r7, [sp, #88]	; 0x58
   123b0:	ldr	fp, [sp, #92]	; 0x5c
   123b4:	ldrd	r0, [sp, #32]
   123b8:	adds	r0, r0, #1
   123bc:	adc	r1, r1, #0
   123c0:	sub	r3, r7, #1
   123c4:	sub	r3, r3, fp
   123c8:	adds	r4, r0, r3
   123cc:	adc	r5, r1, #0
   123d0:	strd	r4, [sp, #32]
   123d4:	ldr	r3, [sp, #76]	; 0x4c
   123d8:	str	r3, [sp, #52]	; 0x34
   123dc:	b	1269c <sigaltstack@plt+0x13bc>
   123e0:	ldr	r3, [sp, #52]	; 0x34
   123e4:	cmp	r3, #0
   123e8:	movgt	sl, #1
   123ec:	bgt	12534 <sigaltstack@plt+0x1254>
   123f0:	ldr	r3, [pc, #472]	; 125d0 <sigaltstack@plt+0x12f0>
   123f4:	ldr	r3, [r3]
   123f8:	cmp	r3, #3
   123fc:	moveq	sl, #1
   12400:	beq	12534 <sigaltstack@plt+0x1254>
   12404:	cmp	r9, r8
   12408:	movls	r3, #0
   1240c:	movhi	r3, #1
   12410:	ldr	r2, [pc, #440]	; 125d0 <sigaltstack@plt+0x12f0>
   12414:	add	r3, r2, r3, lsl #2
   12418:	ldr	r4, [r3, #60]	; 0x3c
   1241c:	ldrd	r2, [sp, #32]
   12420:	cmp	r3, #0
   12424:	cmpeq	r2, #1
   12428:	beq	124c0 <sigaltstack@plt+0x11e0>
   1242c:	add	r2, sp, #112	; 0x70
   12430:	ldrd	r0, [sp, #32]
   12434:	subs	r0, r0, #1
   12438:	sbc	r1, r1, #0
   1243c:	bl	12ab0 <sigaltstack@plt+0x17d0>
   12440:	mov	r5, r0
   12444:	ldr	r3, [pc, #388]	; 125d0 <sigaltstack@plt+0x12f0>
   12448:	ldr	r3, [r3]
   1244c:	cmp	r3, #0
   12450:	bne	124f0 <sigaltstack@plt+0x1210>
   12454:	ldr	r8, [sp, #72]	; 0x48
   12458:	uxtb	r0, r8
   1245c:	mov	r1, #0
   12460:	add	r2, sp, #216	; 0xd8
   12464:	ldrd	r6, [sp, #56]	; 0x38
   12468:	subs	r6, r6, r0
   1246c:	sbc	r7, r7, r1
   12470:	mov	r0, r6
   12474:	mov	r1, r7
   12478:	bl	12ab0 <sigaltstack@plt+0x17d0>
   1247c:	mov	r7, r0
   12480:	ldr	r3, [pc, #468]	; 1265c <sigaltstack@plt+0x137c>
   12484:	ldr	r6, [r3]
   12488:	cmp	r8, #0
   1248c:	mov	r2, #5
   12490:	ldrne	r1, [pc, #456]	; 12660 <sigaltstack@plt+0x1380>
   12494:	ldreq	r1, [pc, #456]	; 12664 <sigaltstack@plt+0x1384>
   12498:	mov	r0, #0
   1249c:	bl	11070 <dcgettext@plt>
   124a0:	str	r7, [sp]
   124a4:	mov	r3, r5
   124a8:	mov	r2, r4
   124ac:	mov	r1, r0
   124b0:	mov	r0, r6
   124b4:	bl	111c0 <fprintf@plt>
   124b8:	mov	sl, #1
   124bc:	b	12534 <sigaltstack@plt+0x1254>
   124c0:	ldr	r3, [pc, #404]	; 1265c <sigaltstack@plt+0x137c>
   124c4:	ldr	r5, [r3]
   124c8:	mov	r2, #5
   124cc:	ldr	r1, [pc, #404]	; 12668 <sigaltstack@plt+0x1388>
   124d0:	mov	r0, #0
   124d4:	bl	11070 <dcgettext@plt>
   124d8:	mov	r2, r4
   124dc:	mov	r1, r0
   124e0:	mov	r0, r5
   124e4:	bl	111c0 <fprintf@plt>
   124e8:	mov	sl, #1
   124ec:	b	12534 <sigaltstack@plt+0x1254>
   124f0:	ldr	r3, [pc, #356]	; 1265c <sigaltstack@plt+0x137c>
   124f4:	ldr	r6, [r3]
   124f8:	mov	r2, #5
   124fc:	ldr	r1, [pc, #360]	; 1266c <sigaltstack@plt+0x138c>
   12500:	mov	r0, #0
   12504:	bl	11070 <dcgettext@plt>
   12508:	mov	r3, r5
   1250c:	mov	r2, r4
   12510:	mov	r1, r0
   12514:	mov	r0, r6
   12518:	bl	111c0 <fprintf@plt>
   1251c:	b	124b8 <sigaltstack@plt+0x11d8>
   12520:	ldr	r3, [sp, #52]	; 0x34
   12524:	adds	sl, r3, #0
   12528:	movne	sl, #1
   1252c:	b	12534 <sigaltstack@plt+0x1254>
   12530:	mov	sl, #1
   12534:	ldr	r3, [pc, #148]	; 125d0 <sigaltstack@plt+0x12f0>
   12538:	ldr	r0, [r3, #28]
   1253c:	bl	112c8 <close@plt>
   12540:	cmp	r0, #0
   12544:	bne	12584 <sigaltstack@plt+0x12a4>
   12548:	ldr	r3, [pc, #128]	; 125d0 <sigaltstack@plt+0x12f0>
   1254c:	ldr	r0, [r3, #32]
   12550:	bl	112c8 <close@plt>
   12554:	cmp	r0, #0
   12558:	bne	1257c <sigaltstack@plt+0x129c>
   1255c:	cmp	sl, #0
   12560:	beq	12574 <sigaltstack@plt+0x1294>
   12564:	ldr	r3, [pc, #100]	; 125d0 <sigaltstack@plt+0x12f0>
   12568:	ldr	r3, [r3]
   1256c:	cmp	r3, #1
   12570:	bls	125a8 <sigaltstack@plt+0x12c8>
   12574:	mov	r0, sl
   12578:	bl	11190 <exit@plt>
   1257c:	mov	r3, #1
   12580:	str	r3, [sp, #64]	; 0x40
   12584:	bl	111d8 <__errno_location@plt>
   12588:	ldr	r3, [pc, #64]	; 125d0 <sigaltstack@plt+0x12f0>
   1258c:	ldr	r2, [sp, #64]	; 0x40
   12590:	add	r3, r3, r2, lsl #2
   12594:	ldr	r3, [r3, #60]	; 0x3c
   12598:	ldr	r2, [pc, #156]	; 1263c <sigaltstack@plt+0x135c>
   1259c:	ldr	r1, [r0]
   125a0:	mov	r0, #2
   125a4:	bl	1110c <error@plt>
   125a8:	bl	11644 <sigaltstack@plt+0x364>
   125ac:	b	12574 <sigaltstack@plt+0x1294>
   125b0:	andeq	sl, r2, r4, asr #2
   125b4:	andeq	r8, r1, r8, ror #16
   125b8:	andeq	r8, r1, r4, lsr #16
   125bc:			; <UNDEFINED> instruction: 0x000187b4
   125c0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   125c4:	muleq	r1, r8, sl
   125c8:	andeq	sl, r2, r8, ror #2
   125cc:	andeq	sl, r2, r8, lsr r1
   125d0:	andeq	sl, r2, r0, ror r1
   125d4:	andeq	r8, r1, r4, lsr r8
   125d8:			; <UNDEFINED> instruction: 0x0003a2b0
   125dc:	andeq	r8, r1, ip, ror #16
   125e0:	andeq	r8, r1, ip, lsl #17
   125e4:	andeq	r8, r1, r0, lsl #18
   125e8:	andeq	r8, r1, r8, lsl #18
   125ec:	andeq	sl, r2, r4, ror #2
   125f0:	andeq	r8, r1, r4, ror #11
   125f4:	andeq	r8, r1, ip, ror r7
   125f8:	andeq	r8, r1, r4, asr r9
   125fc:	andeq	r8, r1, ip, asr r9
   12600:	andeq	r8, r1, r0, lsl sl
   12604:	andeq	r8, r1, r4, asr #20
   12608:	andeq	r8, r1, ip, lsl #21
   1260c:	andeq	r8, r1, ip, asr #15
   12610:	andeq	sl, r2, r0, asr #2
   12614:	andeq	r8, r1, r8, ror #15
   12618:	strdeq	r8, [r1], -ip
   1261c:	andeq	r8, r1, r0, lsl r8
   12620:	andeq	r8, r1, r0, lsr #16
   12624:	andeq	r8, r1, r0, lsr r8
   12628:	andeq	sl, r2, r8, asr r1
   1262c:			; <UNDEFINED> instruction: 0x000187b0
   12630:			; <UNDEFINED> instruction: 0x0002a1b8
   12634:	andeq	sl, r2, r0, lsr #4
   12638:	andeq	r8, r1, r4, lsr #21
   1263c:	andeq	r8, r1, r8, ror #14
   12640:	andeq	r8, r1, r0, asr #21
   12644:	ldrdeq	r8, [r1], -r4
   12648:	andeq	sl, r2, ip, lsl #3
   1264c:	andeq	r8, r1, r8, lsl #12
   12650:	andeq	r8, r1, r0, ror #21
   12654:	andeq	r8, r1, r4, lsr #22
   12658:	andeq	r8, r1, r4, lsl fp
   1265c:	andeq	sl, r2, r0, ror #2
   12660:	andeq	r8, r1, ip, asr fp
   12664:	andeq	r8, r1, r4, lsl #23
   12668:	andeq	r8, r1, ip, lsr fp
   1266c:			; <UNDEFINED> instruction: 0x00018bb0
   12670:	ldrd	r2, [sp, #32]
   12674:	adds	r2, r2, r7
   12678:	adc	r3, r3, #0
   1267c:	strd	r2, [sp, #32]
   12680:	ldr	r5, [sl]
   12684:	adds	r3, r7, #0
   12688:	movne	r3, #1
   1268c:	cmp	r5, #0
   12690:	movne	r3, #0
   12694:	cmp	r3, #0
   12698:	bne	12158 <sigaltstack@plt+0xe78>
   1269c:	cmp	r9, r8
   126a0:	bne	123e0 <sigaltstack@plt+0x1100>
   126a4:	ldr	r3, [sp, #52]	; 0x34
   126a8:	cmp	r3, #0
   126ac:	bgt	12520 <sigaltstack@plt+0x1240>
   126b0:	ldr	r3, [sl, #280]	; 0x118
   126b4:	cmp	r9, r3
   126b8:	bne	12520 <sigaltstack@plt+0x1240>
   126bc:	ldr	r4, [sl, #280]	; 0x118
   126c0:	ldrd	r0, [sp, #40]	; 0x28
   126c4:	mov	r3, r1
   126c8:	cmp	r0, #0
   126cc:	sbcs	r3, r3, #0
   126d0:	blt	126f0 <sigaltstack@plt+0x1410>
   126d4:	mov	r3, #0
   126d8:	cmp	r0, r4
   126dc:	sbcs	r3, r1, r3
   126e0:	movlt	r4, r0
   126e4:	subs	r2, r0, r4
   126e8:	sbc	r3, r1, #0
   126ec:	strd	r2, [sp, #40]	; 0x28
   126f0:	mov	r2, r4
   126f4:	ldr	r1, [sp, #28]
   126f8:	ldr	r0, [sl, #28]
   126fc:	bl	15930 <sigaltstack@plt+0x4650>
   12700:	mov	r9, r0
   12704:	cmn	r0, #1
   12708:	beq	12100 <sigaltstack@plt+0xe20>
   1270c:	mov	r2, r4
   12710:	ldr	r1, [sp, #48]	; 0x30
   12714:	ldr	r0, [sl, #32]
   12718:	bl	15930 <sigaltstack@plt+0x4650>
   1271c:	mov	r8, r0
   12720:	cmn	r0, #1
   12724:	beq	1211c <sigaltstack@plt+0xe3c>
   12728:	cmp	r9, r0
   1272c:	movcc	r7, r9
   12730:	movcs	r7, r0
   12734:	mov	r2, r7
   12738:	ldr	r4, [sp, #48]	; 0x30
   1273c:	mov	r1, r4
   12740:	ldr	r0, [sp, #28]
   12744:	bl	11058 <memcmp@plt>
   12748:	cmp	r0, #0
   1274c:	beq	12670 <sigaltstack@plt+0x1390>
   12750:	cmp	r9, r8
   12754:	bcc	12138 <sigaltstack@plt+0xe58>
   12758:	mov	r3, #85	; 0x55
   1275c:	strb	r3, [r4, r9]
   12760:	bls	12138 <sigaltstack@plt+0xe58>
   12764:	ldr	r4, [sp, #48]	; 0x30
   12768:	ldrb	r3, [r4, r9]
   1276c:	mvn	r3, r3
   12770:	ldr	r5, [sp, #28]
   12774:	strb	r3, [r5, r9]
   12778:	ldrb	r3, [r5, r8]
   1277c:	mvn	r3, r3
   12780:	strb	r3, [r4, r8]
   12784:	mvn	r2, r9
   12788:	add	r0, r9, #1
   1278c:	and	r2, r2, #3
   12790:	mov	r1, #0
   12794:	add	r0, r5, r0
   12798:	bl	111f0 <memset@plt>
   1279c:	mvn	r2, r8
   127a0:	add	r0, r8, #1
   127a4:	and	r2, r2, #3
   127a8:	mov	r1, #0
   127ac:	add	r0, r4, r0
   127b0:	bl	111f0 <memset@plt>
   127b4:	mov	r3, r5
   127b8:	mov	r1, r4
   127bc:	mov	r2, r1
   127c0:	add	lr, r3, #4
   127c4:	add	r1, r1, #4
   127c8:	ldr	ip, [r3]
   127cc:	ldr	r0, [r2]
   127d0:	cmp	ip, r0
   127d4:	beq	12148 <sigaltstack@plt+0xe68>
   127d8:	sub	r2, r2, #1
   127dc:	add	ip, r3, #1
   127e0:	ldrb	r0, [r3]
   127e4:	ldrb	r1, [r2, #1]!
   127e8:	cmp	r0, r1
   127ec:	beq	12150 <sigaltstack@plt+0xe70>
   127f0:	ldr	r2, [sp, #28]
   127f4:	sub	fp, r3, r2
   127f8:	ldrd	r2, [sp, #32]
   127fc:	adds	r2, r2, fp
   12800:	adc	r3, r3, #0
   12804:	strd	r2, [sp, #32]
   12808:	ldr	r5, [sl]
   1280c:	clz	r3, r5
   12810:	lsr	r3, r3, #5
   12814:	cmp	fp, #0
   12818:	moveq	r3, #0
   1281c:	cmp	r3, #0
   12820:	bne	1215c <sigaltstack@plt+0xe7c>
   12824:	cmp	r7, fp
   12828:	bls	1269c <sigaltstack@plt+0x13bc>
   1282c:	cmp	r5, #3
   12830:	ldrls	pc, [pc, r5, lsl #2]
   12834:	b	1269c <sigaltstack@plt+0x13bc>
   12838:	ldrdeq	r2, [r1], -r8
   1283c:	ldrdeq	r2, [r1], -r0
   12840:	andeq	r2, r1, ip, asr #3
   12844:	andeq	r2, r1, r0, lsr r5
   12848:	bx	lr
   1284c:	push	{r7, lr}
   12850:	sub	sp, sp, #4096	; 0x1000
   12854:	sub	sp, sp, #8
   12858:	mov	r4, r0
   1285c:	ldr	r3, [pc, #232]	; 1294c <sigaltstack@plt+0x166c>
   12860:	ldr	r3, [r3]
   12864:	blx	r3
   12868:	cmp	r4, #0
   1286c:	ldr	r3, [pc, #216]	; 1294c <sigaltstack@plt+0x166c>
   12870:	ldrne	r5, [r3, #4]
   12874:	ldreq	r5, [r3, #8]
   12878:	ldr	r3, [pc, #204]	; 1294c <sigaltstack@plt+0x166c>
   1287c:	ldr	r0, [r3, #12]
   12880:	bl	111a8 <strlen@plt>
   12884:	mov	r7, r0
   12888:	mov	r0, r5
   1288c:	bl	111a8 <strlen@plt>
   12890:	mov	r6, r0
   12894:	add	r3, r7, r0
   12898:	cmp	r3, #4096	; 0x1000
   1289c:	bcs	128fc <sigaltstack@plt+0x161c>
   128a0:	ldr	r3, [pc, #164]	; 1294c <sigaltstack@plt+0x166c>
   128a4:	ldr	r1, [r3, #12]
   128a8:	add	r8, sp, #4
   128ac:	mov	r2, r7
   128b0:	mov	r0, r8
   128b4:	bl	1116c <mempcpy@plt>
   128b8:	ldr	r3, [pc, #144]	; 12950 <sigaltstack@plt+0x1670>
   128bc:	ldrh	r3, [r3]
   128c0:	strh	r3, [r0], #2
   128c4:	mov	r2, r6
   128c8:	mov	r1, r5
   128cc:	bl	1116c <mempcpy@plt>
   128d0:	mov	r3, #10
   128d4:	strb	r3, [r0], #1
   128d8:	sub	r2, r0, r8
   128dc:	add	r1, sp, #4
   128e0:	mov	r0, #2
   128e4:	bl	111fc <write@plt>
   128e8:	cmp	r4, #0
   128ec:	bne	12940 <sigaltstack@plt+0x1660>
   128f0:	ldr	r3, [pc, #92]	; 12954 <sigaltstack@plt+0x1674>
   128f4:	ldr	r0, [r3]
   128f8:	bl	1101c <_exit@plt>
   128fc:	ldr	r3, [pc, #72]	; 1294c <sigaltstack@plt+0x166c>
   12900:	ldr	r1, [r3, #12]
   12904:	mov	r2, r7
   12908:	mov	r0, #2
   1290c:	bl	111fc <write@plt>
   12910:	mov	r2, #2
   12914:	ldr	r1, [pc, #52]	; 12950 <sigaltstack@plt+0x1670>
   12918:	mov	r0, r2
   1291c:	bl	111fc <write@plt>
   12920:	mov	r2, r6
   12924:	mov	r1, r5
   12928:	mov	r0, #2
   1292c:	bl	111fc <write@plt>
   12930:	mov	r3, #10
   12934:	strb	r3, [sp, #4]
   12938:	mov	r2, #1
   1293c:	b	128dc <sigaltstack@plt+0x15fc>
   12940:	mov	r0, r4
   12944:	bl	10fb0 <raise@plt>
   12948:	bl	112bc <abort@plt>
   1294c:	muleq	r2, r8, r2
   12950:	andeq	r8, r1, r0, lsr lr
   12954:	andeq	sl, r2, r4, asr #2
   12958:	cmp	r1, #0
   1295c:	bne	12968 <sigaltstack@plt+0x1688>
   12960:	mov	r0, #0
   12964:	bx	lr
   12968:	push	{r4, lr}
   1296c:	mov	r0, #11
   12970:	bl	1284c <sigaltstack@plt+0x156c>
   12974:	push	{r4, lr}
   12978:	cmp	r0, #0
   1297c:	beq	12994 <sigaltstack@plt+0x16b4>
   12980:	ldr	r3, [pc, #16]	; 12998 <sigaltstack@plt+0x16b8>
   12984:	ldr	r0, [r3, #16]
   12988:	cmp	r0, #0
   1298c:	moveq	r0, #11
   12990:	movne	r0, #0
   12994:	bl	1284c <sigaltstack@plt+0x156c>
   12998:	muleq	r2, r8, r2
   1299c:	push	{r4, lr}
   129a0:	ldr	r3, [pc, #128]	; 12a28 <sigaltstack@plt+0x1748>
   129a4:	cmp	r0, #0
   129a8:	moveq	r0, r3
   129ac:	ldr	r4, [pc, #120]	; 12a2c <sigaltstack@plt+0x174c>
   129b0:	str	r0, [r4]
   129b4:	mov	r2, #5
   129b8:	ldr	r1, [pc, #112]	; 12a30 <sigaltstack@plt+0x1750>
   129bc:	mov	r0, #0
   129c0:	bl	11070 <dcgettext@plt>
   129c4:	str	r0, [r4, #4]
   129c8:	mov	r2, #5
   129cc:	ldr	r1, [pc, #96]	; 12a34 <sigaltstack@plt+0x1754>
   129d0:	mov	r0, #0
   129d4:	bl	11070 <dcgettext@plt>
   129d8:	str	r0, [r4, #8]
   129dc:	bl	12a40 <sigaltstack@plt+0x1760>
   129e0:	str	r0, [r4, #12]
   129e4:	mov	r2, #65536	; 0x10000
   129e8:	add	r1, r4, #24
   129ec:	ldr	r0, [pc, #68]	; 12a38 <sigaltstack@plt+0x1758>
   129f0:	bl	13b30 <sigaltstack@plt+0x2850>
   129f4:	subs	r4, r0, #0
   129f8:	bne	12a14 <sigaltstack@plt+0x1734>
   129fc:	ldr	r0, [pc, #56]	; 12a3c <sigaltstack@plt+0x175c>
   12a00:	bl	13ac0 <sigaltstack@plt+0x27e0>
   12a04:	ldr	r3, [pc, #32]	; 12a2c <sigaltstack@plt+0x174c>
   12a08:	str	r0, [r3, #16]
   12a0c:	mov	r0, r4
   12a10:	pop	{r4, pc}
   12a14:	bl	111d8 <__errno_location@plt>
   12a18:	mov	r3, #95	; 0x5f
   12a1c:	str	r3, [r0]
   12a20:	mvn	r4, #0
   12a24:	b	12a0c <sigaltstack@plt+0x172c>
   12a28:	andeq	r2, r1, r8, asr #16
   12a2c:	muleq	r2, r8, r2
   12a30:	andeq	r8, r1, r4, lsr lr
   12a34:	andeq	r8, r1, r4, asr #28
   12a38:	andeq	r2, r1, r4, ror r9
   12a3c:	andeq	r2, r1, r8, asr r9
   12a40:	ldr	r3, [pc, #4]	; 12a4c <sigaltstack@plt+0x176c>
   12a44:	ldr	r0, [r3]
   12a48:	bx	lr
   12a4c:	andeq	sl, r2, r0, asr r1
   12a50:	push	{lr}		; (str lr, [sp, #-4]!)
   12a54:	sub	sp, sp, #268	; 0x10c
   12a58:	ldr	r2, [pc, #68]	; 12aa4 <sigaltstack@plt+0x17c4>
   12a5c:	add	r1, sp, #4
   12a60:	bl	13780 <sigaltstack@plt+0x24a0>
   12a64:	cmp	r0, #0
   12a68:	movne	r0, #0
   12a6c:	bne	12a9c <sigaltstack@plt+0x17bc>
   12a70:	ldr	r1, [pc, #48]	; 12aa8 <sigaltstack@plt+0x17c8>
   12a74:	add	r0, sp, #4
   12a78:	bl	10fd4 <strcmp@plt>
   12a7c:	cmp	r0, #0
   12a80:	moveq	r0, #0
   12a84:	beq	12a9c <sigaltstack@plt+0x17bc>
   12a88:	ldr	r1, [pc, #28]	; 12aac <sigaltstack@plt+0x17cc>
   12a8c:	add	r0, sp, #4
   12a90:	bl	10fd4 <strcmp@plt>
   12a94:	adds	r0, r0, #0
   12a98:	movne	r0, #1
   12a9c:	add	sp, sp, #268	; 0x10c
   12aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   12aa4:	andeq	r0, r0, r1, lsl #2
   12aa8:	andeq	r8, r1, r4, asr lr
   12aac:	andeq	r8, r1, r8, asr lr
   12ab0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ab4:	mov	r4, r0
   12ab8:	mov	r5, r1
   12abc:	add	r6, r2, #20
   12ac0:	mov	r3, #0
   12ac4:	strb	r3, [r2, #20]
   12ac8:	cmp	r0, #0
   12acc:	sbcs	r3, r1, #0
   12ad0:	movlt	r8, #10
   12ad4:	movlt	r9, #0
   12ad8:	blt	12b30 <sigaltstack@plt+0x1850>
   12adc:	mov	r8, #10
   12ae0:	mov	r9, #0
   12ae4:	mov	r2, r8
   12ae8:	mov	r3, r9
   12aec:	mov	r0, r4
   12af0:	mov	r1, r5
   12af4:	bl	1835c <sigaltstack@plt+0x707c>
   12af8:	add	r2, r2, #48	; 0x30
   12afc:	strb	r2, [r6, #-1]!
   12b00:	mov	r2, r8
   12b04:	mov	r3, r9
   12b08:	mov	r0, r4
   12b0c:	mov	r1, r5
   12b10:	bl	1835c <sigaltstack@plt+0x707c>
   12b14:	mov	r4, r0
   12b18:	mov	r5, r1
   12b1c:	orrs	r3, r4, r5
   12b20:	bne	12ae4 <sigaltstack@plt+0x1804>
   12b24:	mov	r0, r6
   12b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b2c:	mov	r6, r7
   12b30:	sub	r7, r6, #1
   12b34:	mov	r2, r8
   12b38:	mov	r3, r9
   12b3c:	mov	r0, r4
   12b40:	mov	r1, r5
   12b44:	bl	1835c <sigaltstack@plt+0x707c>
   12b48:	rsb	r2, r2, #48	; 0x30
   12b4c:	strb	r2, [r6, #-1]
   12b50:	mov	r2, r8
   12b54:	mov	r3, r9
   12b58:	mov	r0, r4
   12b5c:	mov	r1, r5
   12b60:	bl	1835c <sigaltstack@plt+0x707c>
   12b64:	mov	r4, r0
   12b68:	mov	r5, r1
   12b6c:	orrs	r3, r4, r5
   12b70:	bne	12b2c <sigaltstack@plt+0x184c>
   12b74:	sub	r6, r6, #2
   12b78:	mov	r3, #45	; 0x2d
   12b7c:	strb	r3, [r7, #-1]
   12b80:	b	12b24 <sigaltstack@plt+0x1844>
   12b84:	push	{r4, r5, r6, lr}
   12b88:	subs	r4, r0, #0
   12b8c:	beq	12c04 <sigaltstack@plt+0x1924>
   12b90:	mov	r1, #47	; 0x2f
   12b94:	mov	r0, r4
   12b98:	bl	1125c <strrchr@plt>
   12b9c:	cmp	r0, #0
   12ba0:	addne	r5, r0, #1
   12ba4:	moveq	r5, r4
   12ba8:	sub	r3, r5, r4
   12bac:	cmp	r3, #6
   12bb0:	ble	12bf0 <sigaltstack@plt+0x1910>
   12bb4:	mov	r2, #7
   12bb8:	ldr	r1, [pc, #96]	; 12c20 <sigaltstack@plt+0x1940>
   12bbc:	sub	r0, r5, #7
   12bc0:	bl	112b0 <strncmp@plt>
   12bc4:	cmp	r0, #0
   12bc8:	bne	12bf0 <sigaltstack@plt+0x1910>
   12bcc:	mov	r2, #3
   12bd0:	ldr	r1, [pc, #76]	; 12c24 <sigaltstack@plt+0x1944>
   12bd4:	mov	r0, r5
   12bd8:	bl	112b0 <strncmp@plt>
   12bdc:	cmp	r0, #0
   12be0:	addeq	r4, r5, #3
   12be4:	ldreq	r3, [pc, #60]	; 12c28 <sigaltstack@plt+0x1948>
   12be8:	streq	r4, [r3]
   12bec:	movne	r4, r5
   12bf0:	ldr	r3, [pc, #52]	; 12c2c <sigaltstack@plt+0x194c>
   12bf4:	str	r4, [r3]
   12bf8:	ldr	r3, [pc, #48]	; 12c30 <sigaltstack@plt+0x1950>
   12bfc:	str	r4, [r3]
   12c00:	pop	{r4, r5, r6, pc}
   12c04:	ldr	r3, [pc, #40]	; 12c34 <sigaltstack@plt+0x1954>
   12c08:	ldr	r3, [r3]
   12c0c:	mov	r2, #55	; 0x37
   12c10:	mov	r1, #1
   12c14:	ldr	r0, [pc, #28]	; 12c38 <sigaltstack@plt+0x1958>
   12c18:	bl	110dc <fwrite@plt>
   12c1c:	bl	112bc <abort@plt>
   12c20:	muleq	r1, r8, lr
   12c24:	andeq	r8, r1, r0, lsr #29
   12c28:	andeq	sl, r2, r0, asr r1
   12c2c:			; <UNDEFINED> instruction: 0x0003a2b0
   12c30:	andeq	sl, r2, r4, asr r1
   12c34:	andeq	sl, r2, r0, ror #2
   12c38:	andeq	r8, r1, r0, ror #28
   12c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c40:	sub	sp, sp, #116	; 0x74
   12c44:	mov	r9, r0
   12c48:	mov	r0, r1
   12c4c:	mov	r1, #2
   12c50:	bl	1438c <sigaltstack@plt+0x30ac>
   12c54:	mov	r8, r0
   12c58:	mov	r4, #1
   12c5c:	mov	r5, #0
   12c60:	ldr	r6, [pc, #2092]	; 13494 <sigaltstack@plt+0x21b4>
   12c64:	b	131a8 <sigaltstack@plt+0x1ec8>
   12c68:	add	r0, sp, #4
   12c6c:	bl	11040 <mbsinit@plt>
   12c70:	cmp	r0, #0
   12c74:	beq	12d7c <sigaltstack@plt+0x1a9c>
   12c78:	strb	r4, [sp]
   12c7c:	ldr	r9, [sp, #16]
   12c80:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   12c84:	mov	r1, r0
   12c88:	mov	r0, r9
   12c8c:	bl	14360 <sigaltstack@plt+0x3080>
   12c90:	add	r3, sp, #4
   12c94:	mov	r2, r0
   12c98:	mov	r1, r9
   12c9c:	add	r0, sp, #28
   12ca0:	bl	15b18 <sigaltstack@plt+0x4838>
   12ca4:	str	r0, [sp, #20]
   12ca8:	cmn	r0, #1
   12cac:	streq	r4, [sp, #20]
   12cb0:	strbeq	r5, [sp, #24]
   12cb4:	beq	12cfc <sigaltstack@plt+0x1a1c>
   12cb8:	cmn	r0, #2
   12cbc:	beq	12d90 <sigaltstack@plt+0x1ab0>
   12cc0:	cmp	r0, #0
   12cc4:	bne	12ce8 <sigaltstack@plt+0x1a08>
   12cc8:	str	r4, [sp, #20]
   12ccc:	ldr	r3, [sp, #16]
   12cd0:	ldrb	r3, [r3]
   12cd4:	cmp	r3, #0
   12cd8:	bne	12da4 <sigaltstack@plt+0x1ac4>
   12cdc:	ldr	r3, [sp, #28]
   12ce0:	cmp	r3, #0
   12ce4:	bne	12db8 <sigaltstack@plt+0x1ad8>
   12ce8:	strb	r4, [sp, #24]
   12cec:	add	r0, sp, #4
   12cf0:	bl	11040 <mbsinit@plt>
   12cf4:	cmp	r0, #0
   12cf8:	strbne	r5, [sp]
   12cfc:	strb	r4, [sp, #12]
   12d00:	ldrb	r3, [sp, #24]
   12d04:	cmp	r3, #0
   12d08:	bne	12dcc <sigaltstack@plt+0x1aec>
   12d0c:	ldrb	r1, [sp, #24]
   12d10:	ldr	r0, [sp, #28]
   12d14:	ldr	r2, [sp, #20]
   12d18:	ldr	r3, [sp, #16]
   12d1c:	add	r3, r3, r2
   12d20:	str	r3, [sp, #16]
   12d24:	strb	r5, [sp, #12]
   12d28:	cmp	r7, r3
   12d2c:	bls	12ddc <sigaltstack@plt+0x1afc>
   12d30:	ldrb	r3, [sp, #12]
   12d34:	cmp	r3, #0
   12d38:	bne	12d00 <sigaltstack@plt+0x1a20>
   12d3c:	ldrb	r3, [sp]
   12d40:	cmp	r3, #0
   12d44:	bne	12c7c <sigaltstack@plt+0x199c>
   12d48:	ldr	r1, [sp, #16]
   12d4c:	ldrb	r3, [r1]
   12d50:	lsr	r2, r3, #5
   12d54:	and	r3, r3, #31
   12d58:	ldr	r2, [r6, r2, lsl #2]
   12d5c:	lsr	r3, r2, r3
   12d60:	tst	r3, #1
   12d64:	beq	12c68 <sigaltstack@plt+0x1988>
   12d68:	str	r4, [sp, #20]
   12d6c:	ldrb	r3, [r1]
   12d70:	str	r3, [sp, #28]
   12d74:	strb	r4, [sp, #24]
   12d78:	b	12cfc <sigaltstack@plt+0x1a1c>
   12d7c:	ldr	r3, [pc, #1812]	; 13498 <sigaltstack@plt+0x21b8>
   12d80:	mov	r2, #143	; 0x8f
   12d84:	ldr	r1, [pc, #1808]	; 1349c <sigaltstack@plt+0x21bc>
   12d88:	ldr	r0, [pc, #1808]	; 134a0 <sigaltstack@plt+0x21c0>
   12d8c:	bl	112d4 <__assert_fail@plt>
   12d90:	ldr	r0, [sp, #16]
   12d94:	bl	111a8 <strlen@plt>
   12d98:	str	r0, [sp, #20]
   12d9c:	strb	r5, [sp, #24]
   12da0:	b	12cfc <sigaltstack@plt+0x1a1c>
   12da4:	ldr	r3, [pc, #1772]	; 13498 <sigaltstack@plt+0x21b8>
   12da8:	mov	r2, #171	; 0xab
   12dac:	ldr	r1, [pc, #1768]	; 1349c <sigaltstack@plt+0x21bc>
   12db0:	ldr	r0, [pc, #1772]	; 134a4 <sigaltstack@plt+0x21c4>
   12db4:	bl	112d4 <__assert_fail@plt>
   12db8:	ldr	r3, [pc, #1752]	; 13498 <sigaltstack@plt+0x21b8>
   12dbc:	mov	r2, #172	; 0xac
   12dc0:	ldr	r1, [pc, #1748]	; 1349c <sigaltstack@plt+0x21bc>
   12dc4:	ldr	r0, [pc, #1756]	; 134a8 <sigaltstack@plt+0x21c8>
   12dc8:	bl	112d4 <__assert_fail@plt>
   12dcc:	ldr	r3, [sp, #28]
   12dd0:	cmp	r3, #0
   12dd4:	bne	12d0c <sigaltstack@plt+0x1a2c>
   12dd8:	bl	112bc <abort@plt>
   12ddc:	cmp	r1, #0
   12de0:	moveq	r9, r4
   12de4:	beq	12df4 <sigaltstack@plt+0x1b14>
   12de8:	bl	111e4 <iswalnum@plt>
   12dec:	clz	r9, r0
   12df0:	lsr	r9, r9, #5
   12df4:	str	r7, [sp, #16]
   12df8:	strb	r5, [sp]
   12dfc:	str	r5, [sp, #4]
   12e00:	str	r5, [sp, #8]
   12e04:	strb	r5, [sp, #12]
   12e08:	str	r8, [sp, #72]	; 0x48
   12e0c:	strb	r5, [sp, #56]	; 0x38
   12e10:	str	r5, [sp, #60]	; 0x3c
   12e14:	str	r5, [sp, #64]	; 0x40
   12e18:	strb	r5, [sp, #68]	; 0x44
   12e1c:	b	12eec <sigaltstack@plt+0x1c0c>
   12e20:	add	r0, sp, #4
   12e24:	bl	11040 <mbsinit@plt>
   12e28:	cmp	r0, #0
   12e2c:	beq	12f90 <sigaltstack@plt+0x1cb0>
   12e30:	strb	r4, [sp]
   12e34:	ldr	sl, [sp, #16]
   12e38:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   12e3c:	mov	r1, r0
   12e40:	mov	r0, sl
   12e44:	bl	14360 <sigaltstack@plt+0x3080>
   12e48:	add	r3, sp, #4
   12e4c:	mov	r2, r0
   12e50:	mov	r1, sl
   12e54:	add	r0, sp, #28
   12e58:	bl	15b18 <sigaltstack@plt+0x4838>
   12e5c:	str	r0, [sp, #20]
   12e60:	cmn	r0, #1
   12e64:	streq	r4, [sp, #20]
   12e68:	strbeq	r5, [sp, #24]
   12e6c:	beq	12eb4 <sigaltstack@plt+0x1bd4>
   12e70:	cmn	r0, #2
   12e74:	beq	12fa4 <sigaltstack@plt+0x1cc4>
   12e78:	cmp	r0, #0
   12e7c:	bne	12ea0 <sigaltstack@plt+0x1bc0>
   12e80:	str	r4, [sp, #20]
   12e84:	ldr	r3, [sp, #16]
   12e88:	ldrb	r3, [r3]
   12e8c:	cmp	r3, #0
   12e90:	bne	12fb8 <sigaltstack@plt+0x1cd8>
   12e94:	ldr	r3, [sp, #28]
   12e98:	cmp	r3, #0
   12e9c:	bne	12fcc <sigaltstack@plt+0x1cec>
   12ea0:	strb	r4, [sp, #24]
   12ea4:	add	r0, sp, #4
   12ea8:	bl	11040 <mbsinit@plt>
   12eac:	cmp	r0, #0
   12eb0:	strbne	r5, [sp]
   12eb4:	strb	r4, [sp, #12]
   12eb8:	ldrb	r3, [sp, #24]
   12ebc:	cmp	r3, #0
   12ec0:	bne	12fe0 <sigaltstack@plt+0x1d00>
   12ec4:	ldr	r2, [sp, #20]
   12ec8:	ldr	r3, [sp, #16]
   12ecc:	add	r3, r3, r2
   12ed0:	str	r3, [sp, #16]
   12ed4:	strb	r5, [sp, #12]
   12ed8:	ldr	r2, [sp, #76]	; 0x4c
   12edc:	ldr	r3, [sp, #72]	; 0x48
   12ee0:	add	r3, r3, r2
   12ee4:	str	r3, [sp, #72]	; 0x48
   12ee8:	strb	r5, [sp, #68]	; 0x44
   12eec:	ldrb	r3, [sp, #68]	; 0x44
   12ef0:	cmp	r3, #0
   12ef4:	bne	12f38 <sigaltstack@plt+0x1c58>
   12ef8:	ldrb	r3, [sp, #56]	; 0x38
   12efc:	cmp	r3, #0
   12f00:	bne	13004 <sigaltstack@plt+0x1d24>
   12f04:	ldr	r1, [sp, #72]	; 0x48
   12f08:	ldrb	r3, [r1]
   12f0c:	lsr	r2, r3, #5
   12f10:	and	r3, r3, #31
   12f14:	ldr	r2, [r6, r2, lsl #2]
   12f18:	lsr	r3, r2, r3
   12f1c:	tst	r3, #1
   12f20:	beq	12ff0 <sigaltstack@plt+0x1d10>
   12f24:	str	r4, [sp, #76]	; 0x4c
   12f28:	ldrb	r3, [r1]
   12f2c:	str	r3, [sp, #84]	; 0x54
   12f30:	strb	r4, [sp, #80]	; 0x50
   12f34:	strb	r4, [sp, #68]	; 0x44
   12f38:	ldrb	sl, [sp, #80]	; 0x50
   12f3c:	cmp	sl, #0
   12f40:	bne	130d8 <sigaltstack@plt+0x1df8>
   12f44:	ldrb	r3, [sp, #12]
   12f48:	cmp	r3, #0
   12f4c:	bne	12eb8 <sigaltstack@plt+0x1bd8>
   12f50:	ldrb	r3, [sp]
   12f54:	cmp	r3, #0
   12f58:	bne	12e34 <sigaltstack@plt+0x1b54>
   12f5c:	ldr	r1, [sp, #16]
   12f60:	ldrb	r3, [r1]
   12f64:	lsr	r2, r3, #5
   12f68:	and	r3, r3, #31
   12f6c:	ldr	r2, [r6, r2, lsl #2]
   12f70:	lsr	r3, r2, r3
   12f74:	tst	r3, #1
   12f78:	beq	12e20 <sigaltstack@plt+0x1b40>
   12f7c:	str	r4, [sp, #20]
   12f80:	ldrb	r3, [r1]
   12f84:	str	r3, [sp, #28]
   12f88:	strb	r4, [sp, #24]
   12f8c:	b	12eb4 <sigaltstack@plt+0x1bd4>
   12f90:	ldr	r3, [pc, #1280]	; 13498 <sigaltstack@plt+0x21b8>
   12f94:	mov	r2, #143	; 0x8f
   12f98:	ldr	r1, [pc, #1276]	; 1349c <sigaltstack@plt+0x21bc>
   12f9c:	ldr	r0, [pc, #1276]	; 134a0 <sigaltstack@plt+0x21c0>
   12fa0:	bl	112d4 <__assert_fail@plt>
   12fa4:	ldr	r0, [sp, #16]
   12fa8:	bl	111a8 <strlen@plt>
   12fac:	str	r0, [sp, #20]
   12fb0:	strb	r5, [sp, #24]
   12fb4:	b	12eb4 <sigaltstack@plt+0x1bd4>
   12fb8:	ldr	r3, [pc, #1240]	; 13498 <sigaltstack@plt+0x21b8>
   12fbc:	mov	r2, #171	; 0xab
   12fc0:	ldr	r1, [pc, #1236]	; 1349c <sigaltstack@plt+0x21bc>
   12fc4:	ldr	r0, [pc, #1240]	; 134a4 <sigaltstack@plt+0x21c4>
   12fc8:	bl	112d4 <__assert_fail@plt>
   12fcc:	ldr	r3, [pc, #1220]	; 13498 <sigaltstack@plt+0x21b8>
   12fd0:	mov	r2, #172	; 0xac
   12fd4:	ldr	r1, [pc, #1216]	; 1349c <sigaltstack@plt+0x21bc>
   12fd8:	ldr	r0, [pc, #1224]	; 134a8 <sigaltstack@plt+0x21c8>
   12fdc:	bl	112d4 <__assert_fail@plt>
   12fe0:	ldr	r3, [sp, #28]
   12fe4:	cmp	r3, #0
   12fe8:	bne	12ec4 <sigaltstack@plt+0x1be4>
   12fec:	bl	112bc <abort@plt>
   12ff0:	add	r0, sp, #60	; 0x3c
   12ff4:	bl	11040 <mbsinit@plt>
   12ff8:	cmp	r0, #0
   12ffc:	beq	13088 <sigaltstack@plt+0x1da8>
   13000:	strb	r4, [sp, #56]	; 0x38
   13004:	ldr	sl, [sp, #72]	; 0x48
   13008:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   1300c:	mov	r1, r0
   13010:	mov	r0, sl
   13014:	bl	14360 <sigaltstack@plt+0x3080>
   13018:	add	r3, sp, #60	; 0x3c
   1301c:	mov	r2, r0
   13020:	mov	r1, sl
   13024:	add	r0, sp, #84	; 0x54
   13028:	bl	15b18 <sigaltstack@plt+0x4838>
   1302c:	str	r0, [sp, #76]	; 0x4c
   13030:	cmn	r0, #1
   13034:	streq	r4, [sp, #76]	; 0x4c
   13038:	strbeq	r5, [sp, #80]	; 0x50
   1303c:	beq	12f34 <sigaltstack@plt+0x1c54>
   13040:	cmn	r0, #2
   13044:	beq	1309c <sigaltstack@plt+0x1dbc>
   13048:	cmp	r0, #0
   1304c:	bne	13070 <sigaltstack@plt+0x1d90>
   13050:	str	r4, [sp, #76]	; 0x4c
   13054:	ldr	r3, [sp, #72]	; 0x48
   13058:	ldrb	r3, [r3]
   1305c:	cmp	r3, #0
   13060:	bne	130b0 <sigaltstack@plt+0x1dd0>
   13064:	ldr	r3, [sp, #84]	; 0x54
   13068:	cmp	r3, #0
   1306c:	bne	130c4 <sigaltstack@plt+0x1de4>
   13070:	strb	r4, [sp, #80]	; 0x50
   13074:	add	r0, sp, #60	; 0x3c
   13078:	bl	11040 <mbsinit@plt>
   1307c:	cmp	r0, #0
   13080:	strbne	r5, [sp, #56]	; 0x38
   13084:	b	12f34 <sigaltstack@plt+0x1c54>
   13088:	ldr	r3, [pc, #1032]	; 13498 <sigaltstack@plt+0x21b8>
   1308c:	mov	r2, #143	; 0x8f
   13090:	ldr	r1, [pc, #1028]	; 1349c <sigaltstack@plt+0x21bc>
   13094:	ldr	r0, [pc, #1028]	; 134a0 <sigaltstack@plt+0x21c0>
   13098:	bl	112d4 <__assert_fail@plt>
   1309c:	ldr	r0, [sp, #72]	; 0x48
   130a0:	bl	111a8 <strlen@plt>
   130a4:	str	r0, [sp, #76]	; 0x4c
   130a8:	strb	r5, [sp, #80]	; 0x50
   130ac:	b	12f34 <sigaltstack@plt+0x1c54>
   130b0:	ldr	r3, [pc, #992]	; 13498 <sigaltstack@plt+0x21b8>
   130b4:	mov	r2, #171	; 0xab
   130b8:	ldr	r1, [pc, #988]	; 1349c <sigaltstack@plt+0x21bc>
   130bc:	ldr	r0, [pc, #992]	; 134a4 <sigaltstack@plt+0x21c4>
   130c0:	bl	112d4 <__assert_fail@plt>
   130c4:	ldr	r3, [pc, #972]	; 13498 <sigaltstack@plt+0x21b8>
   130c8:	mov	r2, #172	; 0xac
   130cc:	ldr	r1, [pc, #968]	; 1349c <sigaltstack@plt+0x21bc>
   130d0:	ldr	r0, [pc, #976]	; 134a8 <sigaltstack@plt+0x21c8>
   130d4:	bl	112d4 <__assert_fail@plt>
   130d8:	ldr	r3, [sp, #84]	; 0x54
   130dc:	cmp	r3, #0
   130e0:	bne	12f44 <sigaltstack@plt+0x1c64>
   130e4:	ldrb	r3, [sp, #12]
   130e8:	cmp	r3, #0
   130ec:	bne	13130 <sigaltstack@plt+0x1e50>
   130f0:	ldrb	r3, [sp]
   130f4:	cmp	r3, #0
   130f8:	bne	1320c <sigaltstack@plt+0x1f2c>
   130fc:	ldr	r1, [sp, #16]
   13100:	ldrb	r3, [r1]
   13104:	lsr	r2, r3, #5
   13108:	and	r3, r3, #31
   1310c:	ldr	r2, [r6, r2, lsl #2]
   13110:	lsr	r3, r2, r3
   13114:	tst	r3, #1
   13118:	beq	131f8 <sigaltstack@plt+0x1f18>
   1311c:	str	r4, [sp, #20]
   13120:	ldrb	r3, [r1]
   13124:	str	r3, [sp, #28]
   13128:	strb	r4, [sp, #24]
   1312c:	strb	r4, [sp, #12]
   13130:	ldrb	r0, [sp, #24]
   13134:	cmp	r0, #0
   13138:	beq	132e0 <sigaltstack@plt+0x2000>
   1313c:	ldr	r3, [sp, #28]
   13140:	cmp	r3, #0
   13144:	bne	132e0 <sigaltstack@plt+0x2000>
   13148:	ands	r9, r9, r0
   1314c:	bne	13478 <sigaltstack@plt+0x2198>
   13150:	str	r7, [sp, #16]
   13154:	strb	r5, [sp]
   13158:	str	r5, [sp, #4]
   1315c:	str	r5, [sp, #8]
   13160:	strb	r5, [sp, #12]
   13164:	ldrb	r3, [r7]
   13168:	lsr	r2, r3, #5
   1316c:	and	r3, r3, #31
   13170:	ldr	r2, [r6, r2, lsl #2]
   13174:	lsr	r3, r2, r3
   13178:	tst	r3, #1
   1317c:	beq	13304 <sigaltstack@plt+0x2024>
   13180:	str	r4, [sp, #20]
   13184:	ldrb	r3, [r7]
   13188:	str	r3, [sp, #28]
   1318c:	strb	r4, [sp, #24]
   13190:	strb	r4, [sp, #12]
   13194:	ldrb	r3, [sp, #24]
   13198:	cmp	r3, #0
   1319c:	bne	133e8 <sigaltstack@plt+0x2108>
   131a0:	ldr	r9, [sp, #20]
   131a4:	add	r9, r7, r9
   131a8:	ldrb	r3, [r9]
   131ac:	cmp	r3, #0
   131b0:	beq	13474 <sigaltstack@plt+0x2194>
   131b4:	mov	r1, r8
   131b8:	mov	r0, r9
   131bc:	bl	1677c <sigaltstack@plt+0x549c>
   131c0:	subs	r7, r0, #0
   131c4:	beq	1348c <sigaltstack@plt+0x21ac>
   131c8:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   131cc:	cmp	r0, #1
   131d0:	bls	133f8 <sigaltstack@plt+0x2118>
   131d4:	str	r9, [sp, #16]
   131d8:	strb	r5, [sp]
   131dc:	str	r5, [sp, #4]
   131e0:	str	r5, [sp, #8]
   131e4:	strb	r5, [sp, #12]
   131e8:	cmp	r9, r7
   131ec:	bcc	12d30 <sigaltstack@plt+0x1a50>
   131f0:	mov	r9, r4
   131f4:	b	12df4 <sigaltstack@plt+0x1b14>
   131f8:	add	r0, sp, #4
   131fc:	bl	11040 <mbsinit@plt>
   13200:	cmp	r0, #0
   13204:	beq	13290 <sigaltstack@plt+0x1fb0>
   13208:	strb	r4, [sp]
   1320c:	ldr	fp, [sp, #16]
   13210:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   13214:	mov	r1, r0
   13218:	mov	r0, fp
   1321c:	bl	14360 <sigaltstack@plt+0x3080>
   13220:	add	r3, sp, #4
   13224:	mov	r2, r0
   13228:	mov	r1, fp
   1322c:	add	r0, sp, #28
   13230:	bl	15b18 <sigaltstack@plt+0x4838>
   13234:	str	r0, [sp, #20]
   13238:	cmn	r0, #1
   1323c:	streq	r4, [sp, #20]
   13240:	strbeq	r5, [sp, #24]
   13244:	beq	1312c <sigaltstack@plt+0x1e4c>
   13248:	cmn	r0, #2
   1324c:	beq	132a4 <sigaltstack@plt+0x1fc4>
   13250:	cmp	r0, #0
   13254:	bne	13278 <sigaltstack@plt+0x1f98>
   13258:	str	r4, [sp, #20]
   1325c:	ldr	r3, [sp, #16]
   13260:	ldrb	r3, [r3]
   13264:	cmp	r3, #0
   13268:	bne	132b8 <sigaltstack@plt+0x1fd8>
   1326c:	ldr	r3, [sp, #28]
   13270:	cmp	r3, #0
   13274:	bne	132cc <sigaltstack@plt+0x1fec>
   13278:	strb	r4, [sp, #24]
   1327c:	add	r0, sp, #4
   13280:	bl	11040 <mbsinit@plt>
   13284:	cmp	r0, #0
   13288:	strbne	r5, [sp]
   1328c:	b	1312c <sigaltstack@plt+0x1e4c>
   13290:	ldr	r3, [pc, #512]	; 13498 <sigaltstack@plt+0x21b8>
   13294:	mov	r2, #143	; 0x8f
   13298:	ldr	r1, [pc, #508]	; 1349c <sigaltstack@plt+0x21bc>
   1329c:	ldr	r0, [pc, #508]	; 134a0 <sigaltstack@plt+0x21c0>
   132a0:	bl	112d4 <__assert_fail@plt>
   132a4:	ldr	r0, [sp, #16]
   132a8:	bl	111a8 <strlen@plt>
   132ac:	str	r0, [sp, #20]
   132b0:	strb	r5, [sp, #24]
   132b4:	b	1312c <sigaltstack@plt+0x1e4c>
   132b8:	ldr	r3, [pc, #472]	; 13498 <sigaltstack@plt+0x21b8>
   132bc:	mov	r2, #171	; 0xab
   132c0:	ldr	r1, [pc, #468]	; 1349c <sigaltstack@plt+0x21bc>
   132c4:	ldr	r0, [pc, #472]	; 134a4 <sigaltstack@plt+0x21c4>
   132c8:	bl	112d4 <__assert_fail@plt>
   132cc:	ldr	r3, [pc, #452]	; 13498 <sigaltstack@plt+0x21b8>
   132d0:	mov	r2, #172	; 0xac
   132d4:	ldr	r1, [pc, #448]	; 1349c <sigaltstack@plt+0x21bc>
   132d8:	ldr	r0, [pc, #456]	; 134a8 <sigaltstack@plt+0x21c8>
   132dc:	bl	112d4 <__assert_fail@plt>
   132e0:	ldrb	r3, [sp, #24]
   132e4:	cmp	r3, #0
   132e8:	moveq	r0, sl
   132ec:	beq	13148 <sigaltstack@plt+0x1e68>
   132f0:	ldr	r0, [sp, #28]
   132f4:	bl	111e4 <iswalnum@plt>
   132f8:	clz	r0, r0
   132fc:	lsr	r0, r0, #5
   13300:	b	13148 <sigaltstack@plt+0x1e68>
   13304:	add	r0, sp, #4
   13308:	bl	11040 <mbsinit@plt>
   1330c:	cmp	r0, #0
   13310:	beq	13398 <sigaltstack@plt+0x20b8>
   13314:	strb	r4, [sp]
   13318:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   1331c:	mov	r1, r0
   13320:	mov	r0, r7
   13324:	bl	14360 <sigaltstack@plt+0x3080>
   13328:	add	r3, sp, #4
   1332c:	mov	r2, r0
   13330:	mov	r1, r7
   13334:	add	r0, sp, #28
   13338:	bl	15b18 <sigaltstack@plt+0x4838>
   1333c:	str	r0, [sp, #20]
   13340:	cmn	r0, #1
   13344:	streq	r4, [sp, #20]
   13348:	strbeq	r5, [sp, #24]
   1334c:	beq	13190 <sigaltstack@plt+0x1eb0>
   13350:	cmn	r0, #2
   13354:	beq	133ac <sigaltstack@plt+0x20cc>
   13358:	cmp	r0, #0
   1335c:	bne	13380 <sigaltstack@plt+0x20a0>
   13360:	str	r4, [sp, #20]
   13364:	ldr	r3, [sp, #16]
   13368:	ldrb	r3, [r3]
   1336c:	cmp	r3, #0
   13370:	bne	133c0 <sigaltstack@plt+0x20e0>
   13374:	ldr	r3, [sp, #28]
   13378:	cmp	r3, #0
   1337c:	bne	133d4 <sigaltstack@plt+0x20f4>
   13380:	strb	r4, [sp, #24]
   13384:	add	r0, sp, #4
   13388:	bl	11040 <mbsinit@plt>
   1338c:	cmp	r0, #0
   13390:	strbne	r5, [sp]
   13394:	b	13190 <sigaltstack@plt+0x1eb0>
   13398:	ldr	r3, [pc, #248]	; 13498 <sigaltstack@plt+0x21b8>
   1339c:	mov	r2, #143	; 0x8f
   133a0:	ldr	r1, [pc, #244]	; 1349c <sigaltstack@plt+0x21bc>
   133a4:	ldr	r0, [pc, #244]	; 134a0 <sigaltstack@plt+0x21c0>
   133a8:	bl	112d4 <__assert_fail@plt>
   133ac:	ldr	r0, [sp, #16]
   133b0:	bl	111a8 <strlen@plt>
   133b4:	str	r0, [sp, #20]
   133b8:	strb	r5, [sp, #24]
   133bc:	b	13190 <sigaltstack@plt+0x1eb0>
   133c0:	ldr	r3, [pc, #208]	; 13498 <sigaltstack@plt+0x21b8>
   133c4:	mov	r2, #171	; 0xab
   133c8:	ldr	r1, [pc, #204]	; 1349c <sigaltstack@plt+0x21bc>
   133cc:	ldr	r0, [pc, #208]	; 134a4 <sigaltstack@plt+0x21c4>
   133d0:	bl	112d4 <__assert_fail@plt>
   133d4:	ldr	r3, [pc, #188]	; 13498 <sigaltstack@plt+0x21b8>
   133d8:	mov	r2, #172	; 0xac
   133dc:	ldr	r1, [pc, #184]	; 1349c <sigaltstack@plt+0x21bc>
   133e0:	ldr	r0, [pc, #192]	; 134a8 <sigaltstack@plt+0x21c8>
   133e4:	bl	112d4 <__assert_fail@plt>
   133e8:	ldr	r3, [sp, #28]
   133ec:	cmp	r3, #0
   133f0:	bne	131a0 <sigaltstack@plt+0x1ec0>
   133f4:	b	13478 <sigaltstack@plt+0x2198>
   133f8:	cmp	r9, r7
   133fc:	movcs	sl, r4
   13400:	bcs	13424 <sigaltstack@plt+0x2144>
   13404:	bl	11184 <__ctype_b_loc@plt>
   13408:	ldrb	r3, [r7, #-1]
   1340c:	ldr	r2, [r0]
   13410:	lsl	r3, r3, #1
   13414:	ldrh	sl, [r2, r3]
   13418:	lsr	sl, sl, #3
   1341c:	eor	sl, sl, #1
   13420:	and	sl, sl, #1
   13424:	mov	r0, r8
   13428:	bl	111a8 <strlen@plt>
   1342c:	ldrb	r9, [r7, r0]
   13430:	cmp	r9, #0
   13434:	moveq	r9, r4
   13438:	beq	13458 <sigaltstack@plt+0x2178>
   1343c:	bl	11184 <__ctype_b_loc@plt>
   13440:	ldr	r3, [r0]
   13444:	lsl	r9, r9, #1
   13448:	ldrh	r9, [r3, r9]
   1344c:	lsr	r9, r9, #3
   13450:	eor	r9, r9, #1
   13454:	and	r9, r9, #1
   13458:	ands	r9, sl, r9
   1345c:	bne	13478 <sigaltstack@plt+0x2198>
   13460:	ldrb	r3, [r7]
   13464:	cmp	r3, #0
   13468:	beq	13478 <sigaltstack@plt+0x2198>
   1346c:	add	r9, r7, #1
   13470:	b	131a8 <sigaltstack@plt+0x1ec8>
   13474:	mov	r9, #0
   13478:	mov	r0, r8
   1347c:	bl	15a90 <sigaltstack@plt+0x47b0>
   13480:	mov	r0, r9
   13484:	add	sp, sp, #116	; 0x74
   13488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1348c:	mov	r9, #0
   13490:	b	13478 <sigaltstack@plt+0x2198>
   13494:	andeq	r9, r1, r4, asr #6
   13498:	andeq	r8, r1, r4, lsr #29
   1349c:			; <UNDEFINED> instruction: 0x00018eb8
   134a0:	andeq	r8, r1, r4, asr #29
   134a4:	ldrdeq	r8, [r1], -ip
   134a8:	strdeq	r8, [r1], -r4
   134ac:	push	{r4, r5, r6, lr}
   134b0:	mov	r5, r0
   134b4:	mov	r2, #5
   134b8:	mov	r1, r0
   134bc:	mov	r0, #0
   134c0:	bl	11070 <dcgettext@plt>
   134c4:	mov	r4, r0
   134c8:	cmp	r5, r0
   134cc:	beq	134e0 <sigaltstack@plt+0x2200>
   134d0:	mov	r1, r5
   134d4:	bl	12c3c <sigaltstack@plt+0x195c>
   134d8:	cmp	r0, #0
   134dc:	beq	134e8 <sigaltstack@plt+0x2208>
   134e0:	mov	r0, r4
   134e4:	pop	{r4, r5, r6, pc}
   134e8:	mov	r0, r4
   134ec:	bl	111a8 <strlen@plt>
   134f0:	mov	r6, r0
   134f4:	mov	r0, r5
   134f8:	bl	111a8 <strlen@plt>
   134fc:	add	r0, r6, r0
   13500:	add	r0, r0, #4
   13504:	bl	14d6c <sigaltstack@plt+0x3a8c>
   13508:	mov	r6, r0
   1350c:	mov	r3, r5
   13510:	mov	r2, r4
   13514:	ldr	r1, [pc, #8]	; 13524 <sigaltstack@plt+0x2244>
   13518:	bl	11274 <sprintf@plt>
   1351c:	mov	r4, r6
   13520:	b	134e0 <sigaltstack@plt+0x2200>
   13524:	andeq	r8, r1, r8, lsl #30
   13528:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1352c:	mov	r7, r0
   13530:	mov	r5, r1
   13534:	mov	r2, #5
   13538:	mov	r1, r0
   1353c:	mov	r0, #0
   13540:	bl	11070 <dcgettext@plt>
   13544:	mov	r9, r0
   13548:	bl	15c70 <sigaltstack@plt+0x4990>
   1354c:	mov	fp, r0
   13550:	ldr	r1, [pc, #540]	; 13774 <sigaltstack@plt+0x2494>
   13554:	bl	15c0c <sigaltstack@plt+0x492c>
   13558:	cmp	r0, #0
   1355c:	moveq	sl, r5
   13560:	moveq	r4, #0
   13564:	moveq	r8, r4
   13568:	bne	135ac <sigaltstack@plt+0x22cc>
   1356c:	cmp	r5, #0
   13570:	movne	r6, r5
   13574:	beq	13674 <sigaltstack@plt+0x2394>
   13578:	mov	r1, r7
   1357c:	mov	r0, r9
   13580:	bl	10fd4 <strcmp@plt>
   13584:	cmp	r0, #0
   13588:	bne	13684 <sigaltstack@plt+0x23a4>
   1358c:	cmp	r8, #0
   13590:	cmpne	r8, r6
   13594:	bne	1375c <sigaltstack@plt+0x247c>
   13598:	cmp	r4, #0
   1359c:	cmpne	r4, r6
   135a0:	bne	13768 <sigaltstack@plt+0x2488>
   135a4:	mov	r0, r6
   135a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135ac:	ldr	sl, [pc, #448]	; 13774 <sigaltstack@plt+0x2494>
   135b0:	mov	r2, fp
   135b4:	mov	r1, sl
   135b8:	mov	r0, r5
   135bc:	bl	153e4 <sigaltstack@plt+0x4104>
   135c0:	mov	r8, r0
   135c4:	mov	r0, fp
   135c8:	bl	111a8 <strlen@plt>
   135cc:	mov	r4, r0
   135d0:	add	r0, r0, #11
   135d4:	bl	14d6c <sigaltstack@plt+0x3a8c>
   135d8:	mov	r6, r0
   135dc:	mov	r2, r4
   135e0:	mov	r1, fp
   135e4:	bl	11028 <memcpy@plt>
   135e8:	add	r2, r6, r4
   135ec:	ldr	r3, [pc, #388]	; 13778 <sigaltstack@plt+0x2498>
   135f0:	ldm	r3!, {r0, r1}
   135f4:	str	r0, [r6, r4]
   135f8:	str	r1, [r2, #4]
   135fc:	ldrh	r1, [r3]
   13600:	ldrb	r3, [r3, #2]
   13604:	strh	r1, [r2, #8]
   13608:	strb	r3, [r2, #10]
   1360c:	mov	r2, r6
   13610:	mov	r1, sl
   13614:	mov	r0, r5
   13618:	bl	153e4 <sigaltstack@plt+0x4104>
   1361c:	mov	r4, r0
   13620:	mov	r0, r6
   13624:	bl	15a90 <sigaltstack@plt+0x47b0>
   13628:	cmp	r4, #0
   1362c:	beq	1365c <sigaltstack@plt+0x237c>
   13630:	mov	r1, #63	; 0x3f
   13634:	mov	r0, r4
   13638:	bl	111b4 <strchr@plt>
   1363c:	cmp	r0, #0
   13640:	beq	13668 <sigaltstack@plt+0x2388>
   13644:	mov	r0, r4
   13648:	bl	15a90 <sigaltstack@plt+0x47b0>
   1364c:	mov	r5, r8
   13650:	mov	r4, #0
   13654:	mov	sl, r4
   13658:	b	1356c <sigaltstack@plt+0x228c>
   1365c:	mov	r5, r8
   13660:	mov	sl, #0
   13664:	b	1356c <sigaltstack@plt+0x228c>
   13668:	mov	sl, r4
   1366c:	mov	r5, r8
   13670:	b	1356c <sigaltstack@plt+0x228c>
   13674:	cmp	sl, #0
   13678:	movne	r6, sl
   1367c:	moveq	r6, r7
   13680:	b	13578 <sigaltstack@plt+0x2298>
   13684:	mov	r1, r7
   13688:	mov	r0, r9
   1368c:	bl	12c3c <sigaltstack@plt+0x195c>
   13690:	cmp	r0, #0
   13694:	bne	136d0 <sigaltstack@plt+0x23f0>
   13698:	cmp	r5, #0
   1369c:	beq	136b4 <sigaltstack@plt+0x23d4>
   136a0:	mov	r1, r5
   136a4:	mov	r0, r9
   136a8:	bl	12c3c <sigaltstack@plt+0x195c>
   136ac:	cmp	r0, #0
   136b0:	bne	136d0 <sigaltstack@plt+0x23f0>
   136b4:	cmp	sl, #0
   136b8:	beq	136fc <sigaltstack@plt+0x241c>
   136bc:	mov	r1, sl
   136c0:	mov	r0, r9
   136c4:	bl	12c3c <sigaltstack@plt+0x195c>
   136c8:	cmp	r0, #0
   136cc:	beq	136fc <sigaltstack@plt+0x241c>
   136d0:	cmp	r8, #0
   136d4:	beq	136e0 <sigaltstack@plt+0x2400>
   136d8:	mov	r0, r8
   136dc:	bl	15a90 <sigaltstack@plt+0x47b0>
   136e0:	cmp	r4, #0
   136e4:	moveq	r6, r9
   136e8:	beq	135a4 <sigaltstack@plt+0x22c4>
   136ec:	mov	r0, r4
   136f0:	bl	15a90 <sigaltstack@plt+0x47b0>
   136f4:	mov	r6, r9
   136f8:	b	135a4 <sigaltstack@plt+0x22c4>
   136fc:	mov	r0, r9
   13700:	bl	111a8 <strlen@plt>
   13704:	mov	r5, r0
   13708:	mov	r0, r6
   1370c:	bl	111a8 <strlen@plt>
   13710:	add	r0, r5, r0
   13714:	add	r0, r0, #4
   13718:	bl	14d6c <sigaltstack@plt+0x3a8c>
   1371c:	mov	r5, r0
   13720:	mov	r3, r6
   13724:	mov	r2, r9
   13728:	ldr	r1, [pc, #76]	; 1377c <sigaltstack@plt+0x249c>
   1372c:	bl	11274 <sprintf@plt>
   13730:	cmp	r8, #0
   13734:	beq	13740 <sigaltstack@plt+0x2460>
   13738:	mov	r0, r8
   1373c:	bl	15a90 <sigaltstack@plt+0x47b0>
   13740:	cmp	r4, #0
   13744:	moveq	r6, r5
   13748:	beq	135a4 <sigaltstack@plt+0x22c4>
   1374c:	mov	r0, r4
   13750:	bl	15a90 <sigaltstack@plt+0x47b0>
   13754:	mov	r6, r5
   13758:	b	135a4 <sigaltstack@plt+0x22c4>
   1375c:	mov	r0, r8
   13760:	bl	15a90 <sigaltstack@plt+0x47b0>
   13764:	b	13598 <sigaltstack@plt+0x22b8>
   13768:	mov	r0, r4
   1376c:	bl	15a90 <sigaltstack@plt+0x47b0>
   13770:	b	135a4 <sigaltstack@plt+0x22c4>
   13774:	andeq	r8, r1, r0, lsl pc
   13778:	andeq	r8, r1, r8, lsl pc
   1377c:	andeq	r8, r1, r8, lsl #30
   13780:	push	{r4, r5, r6, lr}
   13784:	mov	r6, r1
   13788:	mov	r4, r2
   1378c:	mov	r1, #0
   13790:	bl	11244 <setlocale@plt>
   13794:	subs	r5, r0, #0
   13798:	beq	137bc <sigaltstack@plt+0x24dc>
   1379c:	mov	r0, r5
   137a0:	bl	111a8 <strlen@plt>
   137a4:	cmp	r4, r0
   137a8:	bhi	137d4 <sigaltstack@plt+0x24f4>
   137ac:	cmp	r4, #0
   137b0:	bne	137ec <sigaltstack@plt+0x250c>
   137b4:	mov	r0, #34	; 0x22
   137b8:	pop	{r4, r5, r6, pc}
   137bc:	cmp	r4, #0
   137c0:	beq	13810 <sigaltstack@plt+0x2530>
   137c4:	mov	r3, #0
   137c8:	strb	r3, [r6]
   137cc:	mov	r0, #22
   137d0:	pop	{r4, r5, r6, pc}
   137d4:	add	r2, r0, #1
   137d8:	mov	r1, r5
   137dc:	mov	r0, r6
   137e0:	bl	11028 <memcpy@plt>
   137e4:	mov	r0, #0
   137e8:	pop	{r4, r5, r6, pc}
   137ec:	sub	r4, r4, #1
   137f0:	mov	r2, r4
   137f4:	mov	r1, r5
   137f8:	mov	r0, r6
   137fc:	bl	11028 <memcpy@plt>
   13800:	mov	r3, #0
   13804:	strb	r3, [r6, r4]
   13808:	mov	r0, #34	; 0x22
   1380c:	pop	{r4, r5, r6, pc}
   13810:	mov	r0, #22
   13814:	pop	{r4, r5, r6, pc}
   13818:	push	{r4, lr}
   1381c:	mov	r1, #0
   13820:	bl	11244 <setlocale@plt>
   13824:	pop	{r4, pc}
   13828:	push	{r4, lr}
   1382c:	sub	sp, sp, #144	; 0x90
   13830:	mov	r4, r0
   13834:	ldr	r3, [pc, #288]	; 1395c <sigaltstack@plt+0x267c>
   13838:	str	r3, [sp, #4]
   1383c:	add	r0, sp, #8
   13840:	bl	11250 <sigemptyset@plt>
   13844:	mov	r1, #1
   13848:	add	r0, sp, #8
   1384c:	bl	11148 <sigaddset@plt>
   13850:	mov	r1, #2
   13854:	add	r0, sp, #8
   13858:	bl	11148 <sigaddset@plt>
   1385c:	mov	r1, #3
   13860:	add	r0, sp, #8
   13864:	bl	11148 <sigaddset@plt>
   13868:	mov	r1, #13
   1386c:	add	r0, sp, #8
   13870:	bl	11148 <sigaddset@plt>
   13874:	mov	r1, #14
   13878:	add	r0, sp, #8
   1387c:	bl	11148 <sigaddset@plt>
   13880:	mov	r1, #15
   13884:	add	r0, sp, #8
   13888:	bl	11148 <sigaddset@plt>
   1388c:	mov	r1, #10
   13890:	add	r0, sp, #8
   13894:	bl	11148 <sigaddset@plt>
   13898:	mov	r1, #12
   1389c:	add	r0, sp, #8
   138a0:	bl	11148 <sigaddset@plt>
   138a4:	mov	r1, #17
   138a8:	add	r0, sp, #8
   138ac:	bl	11148 <sigaddset@plt>
   138b0:	mov	r1, #17
   138b4:	add	r0, sp, #8
   138b8:	bl	11148 <sigaddset@plt>
   138bc:	mov	r1, #23
   138c0:	add	r0, sp, #8
   138c4:	bl	11148 <sigaddset@plt>
   138c8:	mov	r1, #29
   138cc:	add	r0, sp, #8
   138d0:	bl	11148 <sigaddset@plt>
   138d4:	mov	r1, #29
   138d8:	add	r0, sp, #8
   138dc:	bl	11148 <sigaddset@plt>
   138e0:	mov	r1, #24
   138e4:	add	r0, sp, #8
   138e8:	bl	11148 <sigaddset@plt>
   138ec:	mov	r1, #25
   138f0:	add	r0, sp, #8
   138f4:	bl	11148 <sigaddset@plt>
   138f8:	mov	r1, #26
   138fc:	add	r0, sp, #8
   13900:	bl	11148 <sigaddset@plt>
   13904:	mov	r1, #27
   13908:	add	r0, sp, #8
   1390c:	bl	11148 <sigaddset@plt>
   13910:	mov	r1, #30
   13914:	add	r0, sp, #8
   13918:	bl	11148 <sigaddset@plt>
   1391c:	mov	r1, #28
   13920:	add	r0, sp, #8
   13924:	bl	11148 <sigaddset@plt>
   13928:	mov	r3, #4
   1392c:	str	r3, [sp, #136]	; 0x88
   13930:	ldr	r3, [pc, #40]	; 13960 <sigaltstack@plt+0x2680>
   13934:	ldr	r3, [r3]
   13938:	cmp	r3, #0
   1393c:	ldrne	r3, [pc, #32]	; 13964 <sigaltstack@plt+0x2684>
   13940:	strne	r3, [sp, #136]	; 0x88
   13944:	mov	r2, #0
   13948:	add	r1, sp, #4
   1394c:	mov	r0, r4
   13950:	bl	110d0 <sigaction@plt>
   13954:	add	sp, sp, #144	; 0x90
   13958:	pop	{r4, pc}
   1395c:	andeq	r3, r1, r8, ror #18
   13960:			; <UNDEFINED> instruction: 0x0003a2b4
   13964:	stmdaeq	r0, {r2}
   13968:	push	{r4, r5, r6, r7, r8, r9, lr}
   1396c:	sub	sp, sp, #20
   13970:	mov	r6, r2
   13974:	ldr	r4, [r1, #12]
   13978:	ldr	r3, [pc, #316]	; 13abc <sigaltstack@plt+0x27dc>
   1397c:	ldr	r3, [r3, #4]
   13980:	cmp	r3, #0
   13984:	beq	13a10 <sigaltstack@plt+0x2730>
   13988:	mov	r1, #0
   1398c:	mov	r0, r4
   13990:	blx	r3
   13994:	cmp	r0, #0
   13998:	bne	139ec <sigaltstack@plt+0x270c>
   1399c:	ldr	r3, [pc, #280]	; 13abc <sigaltstack@plt+0x27dc>
   139a0:	ldr	r3, [r3]
   139a4:	cmp	r3, #0
   139a8:	beq	139bc <sigaltstack@plt+0x26dc>
   139ac:	ldr	r3, [pc, #264]	; 13abc <sigaltstack@plt+0x27dc>
   139b0:	ldr	r5, [r3, #8]
   139b4:	cmp	r5, #0
   139b8:	bne	13a30 <sigaltstack@plt+0x2750>
   139bc:	ldr	r3, [pc, #248]	; 13abc <sigaltstack@plt+0x27dc>
   139c0:	ldr	r3, [r3, #4]
   139c4:	cmp	r3, #0
   139c8:	beq	139e0 <sigaltstack@plt+0x2700>
   139cc:	mov	r1, #1
   139d0:	mov	r0, r4
   139d4:	blx	r3
   139d8:	cmp	r0, #0
   139dc:	bne	139ec <sigaltstack@plt+0x270c>
   139e0:	mov	r1, #0
   139e4:	mov	r0, #11
   139e8:	bl	1104c <signal@plt>
   139ec:	add	sp, sp, #20
   139f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   139f4:	mov	r1, sp
   139f8:	mov	r0, r4
   139fc:	ldr	r3, [sp, #8]
   13a00:	blx	r3
   13a04:	adds	r0, r0, #0
   13a08:	movne	r0, #1
   13a0c:	b	13a78 <sigaltstack@plt+0x2798>
   13a10:	ldr	r3, [pc, #164]	; 13abc <sigaltstack@plt+0x27dc>
   13a14:	ldr	r3, [r3]
   13a18:	cmp	r3, #0
   13a1c:	beq	139e0 <sigaltstack@plt+0x2700>
   13a20:	ldr	r3, [pc, #148]	; 13abc <sigaltstack@plt+0x27dc>
   13a24:	ldr	r5, [r3, #8]
   13a28:	cmp	r5, #0
   13a2c:	beq	139e0 <sigaltstack@plt+0x2700>
   13a30:	ldr	r8, [r6, #84]	; 0x54
   13a34:	bl	111d8 <__errno_location@plt>
   13a38:	mov	r7, r0
   13a3c:	ldr	r9, [r0]
   13a40:	mov	r1, sp
   13a44:	mov	r0, r5
   13a48:	bl	13fcc <sigaltstack@plt+0x2cec>
   13a4c:	str	r9, [r7]
   13a50:	cmp	r0, #0
   13a54:	blt	139bc <sigaltstack@plt+0x26dc>
   13a58:	ldr	r3, [sp]
   13a5c:	cmp	r4, r3
   13a60:	bcc	139f4 <sigaltstack@plt+0x2714>
   13a64:	ldr	r0, [sp, #4]
   13a68:	sub	r0, r0, #1
   13a6c:	cmp	r4, r0
   13a70:	movhi	r0, #0
   13a74:	movls	r0, #1
   13a78:	cmp	r0, #0
   13a7c:	beq	139bc <sigaltstack@plt+0x26dc>
   13a80:	ldr	r3, [pc, #52]	; 13abc <sigaltstack@plt+0x27dc>
   13a84:	ldr	r0, [r3, #12]
   13a88:	cmp	r8, r0
   13a8c:	movcc	r0, #0
   13a90:	bcc	13aa8 <sigaltstack@plt+0x27c8>
   13a94:	ldr	r3, [r3, #16]
   13a98:	add	r0, r0, r3
   13a9c:	cmp	r8, r0
   13aa0:	movhi	r0, #0
   13aa4:	movls	r0, #1
   13aa8:	ldr	r3, [pc, #12]	; 13abc <sigaltstack@plt+0x27dc>
   13aac:	ldr	r3, [r3]
   13ab0:	mov	r1, r6
   13ab4:	blx	r3
   13ab8:	b	139bc <sigaltstack@plt+0x26dc>
   13abc:			; <UNDEFINED> instruction: 0x0003a2b4
   13ac0:	push	{r4, lr}
   13ac4:	ldr	r3, [pc, #16]	; 13adc <sigaltstack@plt+0x27fc>
   13ac8:	str	r0, [r3, #4]
   13acc:	mov	r0, #11
   13ad0:	bl	13828 <sigaltstack@plt+0x2548>
   13ad4:	mov	r0, #0
   13ad8:	pop	{r4, pc}
   13adc:			; <UNDEFINED> instruction: 0x0003a2b4
   13ae0:	ldr	r3, [pc, #36]	; 13b0c <sigaltstack@plt+0x282c>
   13ae4:	mov	r2, #0
   13ae8:	str	r2, [r3, #4]
   13aec:	ldr	r3, [r3]
   13af0:	cmp	r3, r2
   13af4:	bxne	lr
   13af8:	push	{r4, lr}
   13afc:	mov	r1, r2
   13b00:	mov	r0, #11
   13b04:	bl	1104c <signal@plt>
   13b08:	pop	{r4, pc}
   13b0c:			; <UNDEFINED> instruction: 0x0003a2b4
   13b10:	push	{r4, lr}
   13b14:	mov	r4, r0
   13b18:	mov	r0, r1
   13b1c:	mov	r1, r2
   13b20:	mov	r2, r3
   13b24:	blx	r4
   13b28:	mov	r0, #1
   13b2c:	pop	{r4, pc}
   13b30:	push	{r4, r5, r6, lr}
   13b34:	sub	sp, sp, #24
   13b38:	mov	r6, r0
   13b3c:	mov	r5, r1
   13b40:	mov	r4, r2
   13b44:	ldr	r3, [pc, #132]	; 13bd0 <sigaltstack@plt+0x28f0>
   13b48:	ldr	r3, [r3, #8]
   13b4c:	cmp	r3, #0
   13b50:	bne	13b88 <sigaltstack@plt+0x28a8>
   13b54:	add	r1, sp, #8
   13b58:	add	r0, sp, #4
   13b5c:	bl	13fcc <sigaltstack@plt+0x2cec>
   13b60:	cmp	r0, #0
   13b64:	ldrge	r3, [sp, #12]
   13b68:	subge	r3, r3, #1
   13b6c:	ldrge	r2, [pc, #92]	; 13bd0 <sigaltstack@plt+0x28f0>
   13b70:	strge	r3, [r2, #8]
   13b74:	ldr	r3, [pc, #84]	; 13bd0 <sigaltstack@plt+0x28f0>
   13b78:	ldr	r3, [r3, #8]
   13b7c:	cmp	r3, #0
   13b80:	mvneq	r0, #0
   13b84:	beq	13bc8 <sigaltstack@plt+0x28e8>
   13b88:	ldr	r3, [pc, #64]	; 13bd0 <sigaltstack@plt+0x28f0>
   13b8c:	str	r6, [r3]
   13b90:	str	r5, [r3, #12]
   13b94:	str	r4, [r3, #16]
   13b98:	str	r5, [sp, #8]
   13b9c:	str	r4, [sp, #16]
   13ba0:	mov	r1, #0
   13ba4:	str	r1, [sp, #12]
   13ba8:	add	r0, sp, #8
   13bac:	bl	112e0 <sigaltstack@plt>
   13bb0:	cmp	r0, #0
   13bb4:	mvnlt	r0, #0
   13bb8:	blt	13bc8 <sigaltstack@plt+0x28e8>
   13bbc:	mov	r0, #11
   13bc0:	bl	13828 <sigaltstack@plt+0x2548>
   13bc4:	mov	r0, #0
   13bc8:	add	sp, sp, #24
   13bcc:	pop	{r4, r5, r6, pc}
   13bd0:			; <UNDEFINED> instruction: 0x0003a2b4
   13bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   13bd8:	sub	sp, sp, #20
   13bdc:	ldr	r3, [pc, #88]	; 13c3c <sigaltstack@plt+0x295c>
   13be0:	mov	r2, #0
   13be4:	str	r2, [r3]
   13be8:	ldr	r3, [r3, #4]
   13bec:	cmp	r3, r2
   13bf0:	beq	13c20 <sigaltstack@plt+0x2940>
   13bf4:	mov	r0, #11
   13bf8:	bl	13828 <sigaltstack@plt+0x2548>
   13bfc:	mov	r3, #2
   13c00:	str	r3, [sp, #8]
   13c04:	mov	r1, #0
   13c08:	add	r0, sp, #4
   13c0c:	bl	112e0 <sigaltstack@plt>
   13c10:	cmp	r0, #0
   13c14:	blt	13c30 <sigaltstack@plt+0x2950>
   13c18:	add	sp, sp, #20
   13c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c20:	mov	r1, #0
   13c24:	mov	r0, #11
   13c28:	bl	1104c <signal@plt>
   13c2c:	b	13bfc <sigaltstack@plt+0x291c>
   13c30:	ldr	r0, [pc, #8]	; 13c40 <sigaltstack@plt+0x2960>
   13c34:	bl	110b8 <perror@plt>
   13c38:	b	13c18 <sigaltstack@plt+0x2938>
   13c3c:			; <UNDEFINED> instruction: 0x0003a2b4
   13c40:	andeq	r8, r1, r4, lsr #30
   13c44:	ldr	r3, [r1]
   13c48:	sub	r0, r3, r0
   13c4c:	ldr	r2, [r1, #12]
   13c50:	sub	r3, r3, r2
   13c54:	cmp	r0, r3, lsr #1
   13c58:	movls	r0, #1
   13c5c:	movhi	r0, #0
   13c60:	bx	lr
   13c64:	mov	r2, r0
   13c68:	ldr	r3, [r0]
   13c6c:	ldr	r1, [r0, #4]
   13c70:	cmp	r3, r1
   13c74:	moveq	r3, #1
   13c78:	streq	r3, [r0, #8]
   13c7c:	mvneq	r0, #0
   13c80:	ldrne	r1, [r2, #12]
   13c84:	ldrbne	r0, [r1, r3]
   13c88:	addne	r3, r3, #1
   13c8c:	strne	r3, [r2]
   13c90:	bx	lr
   13c94:	ldr	r3, [r0]
   13c98:	cmp	r3, r1
   13c9c:	bcc	13cac <sigaltstack@plt+0x29cc>
   13ca0:	sub	ip, r2, #1
   13ca4:	cmp	r3, ip
   13ca8:	bls	13cb8 <sigaltstack@plt+0x29d8>
   13cac:	str	r2, [r0, #8]
   13cb0:	mov	r0, #0
   13cb4:	bx	lr
   13cb8:	ldr	r3, [r0, #4]
   13cbc:	str	r1, [r3]
   13cc0:	ldr	r3, [r0, #4]
   13cc4:	str	r2, [r3, #4]
   13cc8:	ldr	r3, [r0, #4]
   13ccc:	ldr	r2, [r0, #8]
   13cd0:	str	r2, [r3, #12]
   13cd4:	mov	r3, #0
   13cd8:	str	r3, [r0, #12]
   13cdc:	mov	r0, #1
   13ce0:	bx	lr
   13ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce8:	sub	sp, sp, #12
   13cec:	ldr	r4, [r1]
   13cf0:	rsb	r3, r4, r0, lsl #1
   13cf4:	cmp	r0, r3
   13cf8:	movcc	r0, #0
   13cfc:	bcs	13d08 <sigaltstack@plt+0x2a28>
   13d00:	add	sp, sp, #12
   13d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d08:	ldr	r2, [pc, #184]	; 13dc8 <sigaltstack@plt+0x2ae8>
   13d0c:	ldr	r7, [r2]
   13d10:	mov	r1, r7
   13d14:	mov	r0, r3
   13d18:	bl	17f10 <sigaltstack@plt+0x6c30>
   13d1c:	mul	sl, r7, r0
   13d20:	mov	r1, r7
   13d24:	sub	r0, r4, #1
   13d28:	bl	17f10 <sigaltstack@plt+0x6c30>
   13d2c:	mla	r0, r0, r7, r7
   13d30:	mov	r1, r7
   13d34:	sub	r0, r0, sl
   13d38:	bl	17f10 <sigaltstack@plt+0x6c30>
   13d3c:	mov	r6, r0
   13d40:	cmp	r0, #1
   13d44:	bls	13db0 <sigaltstack@plt+0x2ad0>
   13d48:	mov	r3, #1
   13d4c:	lsl	r3, r3, #1
   13d50:	cmp	r6, r3
   13d54:	bhi	13d4c <sigaltstack@plt+0x2a6c>
   13d58:	b	13d60 <sigaltstack@plt+0x2a80>
   13d5c:	mov	r3, r9
   13d60:	lsrs	r9, r3, #1
   13d64:	beq	13db8 <sigaltstack@plt+0x2ad8>
   13d68:	mul	r8, r9, r7
   13d6c:	add	r4, sl, r8
   13d70:	cmp	r6, r9
   13d74:	bls	13d5c <sigaltstack@plt+0x2a7c>
   13d78:	lsl	r8, r8, #1
   13d7c:	mov	r5, r9
   13d80:	bic	fp, r3, #1
   13d84:	add	r2, sp, #4
   13d88:	mov	r1, r7
   13d8c:	mov	r0, r4
   13d90:	bl	1128c <mincore@plt>
   13d94:	cmp	r0, #0
   13d98:	bge	13dc0 <sigaltstack@plt+0x2ae0>
   13d9c:	add	r5, r5, fp
   13da0:	add	r4, r4, r8
   13da4:	cmp	r6, r5
   13da8:	bhi	13d84 <sigaltstack@plt+0x2aa4>
   13dac:	b	13d5c <sigaltstack@plt+0x2a7c>
   13db0:	mov	r0, #1
   13db4:	b	13d00 <sigaltstack@plt+0x2a20>
   13db8:	mov	r0, #1
   13dbc:	b	13d00 <sigaltstack@plt+0x2a20>
   13dc0:	mov	r0, #0
   13dc4:	b	13d00 <sigaltstack@plt+0x2a20>
   13dc8:	andeq	sl, r3, r8, asr #5
   13dcc:	push	{r4, r5, r6, r7, r8, lr}
   13dd0:	sub	sp, sp, #1024	; 0x400
   13dd4:	subs	r6, r0, #0
   13dd8:	beq	13e78 <sigaltstack@plt+0x2b98>
   13ddc:	mov	r4, #1024	; 0x400
   13de0:	ldr	r8, [pc, #160]	; 13e88 <sigaltstack@plt+0x2ba8>
   13de4:	ldr	r7, [r8]
   13de8:	mov	r1, r7
   13dec:	mov	r0, r6
   13df0:	bl	17f10 <sigaltstack@plt+0x6c30>
   13df4:	cmp	r4, r0
   13df8:	movcs	r4, r0
   13dfc:	mul	r1, r4, r7
   13e00:	sub	r5, r6, r1
   13e04:	mov	r2, sp
   13e08:	mov	r0, r5
   13e0c:	bl	1128c <mincore@plt>
   13e10:	cmp	r0, #0
   13e14:	blt	13e30 <sigaltstack@plt+0x2b50>
   13e18:	mov	r6, r5
   13e1c:	cmp	r5, #0
   13e20:	bne	13de4 <sigaltstack@plt+0x2b04>
   13e24:	mov	r0, r5
   13e28:	add	sp, sp, #1024	; 0x400
   13e2c:	pop	{r4, r5, r6, r7, r8, pc}
   13e30:	cmp	r4, #1
   13e34:	bne	13e48 <sigaltstack@plt+0x2b68>
   13e38:	mov	r5, r6
   13e3c:	b	13e24 <sigaltstack@plt+0x2b44>
   13e40:	cmp	r4, #1
   13e44:	beq	13e80 <sigaltstack@plt+0x2ba0>
   13e48:	add	r5, r4, #1
   13e4c:	lsr	r5, r5, #1
   13e50:	mul	r1, r5, r7
   13e54:	sub	r8, r6, r1
   13e58:	mov	r2, sp
   13e5c:	mov	r0, r8
   13e60:	bl	1128c <mincore@plt>
   13e64:	cmp	r0, #0
   13e68:	movlt	r4, r5
   13e6c:	lsrge	r4, r4, #1
   13e70:	movge	r6, r8
   13e74:	b	13e40 <sigaltstack@plt+0x2b60>
   13e78:	mov	r5, r6
   13e7c:	b	13e24 <sigaltstack@plt+0x2b44>
   13e80:	mov	r5, r6
   13e84:	b	13e24 <sigaltstack@plt+0x2b44>
   13e88:	andeq	sl, r3, r8, asr #5
   13e8c:	push	{r4, r5, r6, r7, r8, lr}
   13e90:	sub	sp, sp, #1024	; 0x400
   13e94:	ldr	r3, [pc, #148]	; 13f30 <sigaltstack@plt+0x2c50>
   13e98:	ldr	r7, [r3]
   13e9c:	adds	r4, r7, r0
   13ea0:	beq	13ee0 <sigaltstack@plt+0x2c00>
   13ea4:	mov	r5, #1024	; 0x400
   13ea8:	mov	r1, r7
   13eac:	rsb	r0, r4, #0
   13eb0:	bl	17f10 <sigaltstack@plt+0x6c30>
   13eb4:	cmp	r5, r0
   13eb8:	movcs	r5, r0
   13ebc:	mul	r6, r5, r7
   13ec0:	mov	r2, sp
   13ec4:	mov	r1, r6
   13ec8:	mov	r0, r4
   13ecc:	bl	1128c <mincore@plt>
   13ed0:	cmp	r0, #0
   13ed4:	blt	13eec <sigaltstack@plt+0x2c0c>
   13ed8:	adds	r4, r4, r6
   13edc:	bne	13ea8 <sigaltstack@plt+0x2bc8>
   13ee0:	mov	r0, r4
   13ee4:	add	sp, sp, #1024	; 0x400
   13ee8:	pop	{r4, r5, r6, r7, r8, pc}
   13eec:	cmp	r5, #1
   13ef0:	bne	13f00 <sigaltstack@plt+0x2c20>
   13ef4:	b	13ee0 <sigaltstack@plt+0x2c00>
   13ef8:	cmp	r5, #1
   13efc:	beq	13ee0 <sigaltstack@plt+0x2c00>
   13f00:	add	r6, r5, #1
   13f04:	lsr	r6, r6, #1
   13f08:	mul	r8, r6, r7
   13f0c:	mov	r2, sp
   13f10:	mov	r1, r8
   13f14:	mov	r0, r4
   13f18:	bl	1128c <mincore@plt>
   13f1c:	cmp	r0, #0
   13f20:	movlt	r5, r6
   13f24:	lsrge	r5, r5, #1
   13f28:	addge	r4, r4, r8
   13f2c:	b	13ef8 <sigaltstack@plt+0x2c18>
   13f30:	andeq	sl, r3, r8, asr #5
   13f34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f38:	mov	r4, r0
   13f3c:	mov	r6, r1
   13f40:	mov	r5, #0
   13f44:	mov	r9, r5
   13f48:	mov	r8, #1
   13f4c:	mvn	r7, #0
   13f50:	b	13f60 <sigaltstack@plt+0x2c80>
   13f54:	mov	r0, r4
   13f58:	bl	13c64 <sigaltstack@plt+0x2984>
   13f5c:	add	r5, r5, #1
   13f60:	ldr	r3, [r4]
   13f64:	ldr	r2, [r4, #4]
   13f68:	cmp	r3, r2
   13f6c:	streq	r8, [r4, #8]
   13f70:	moveq	r3, r7
   13f74:	beq	13fa4 <sigaltstack@plt+0x2cc4>
   13f78:	ldr	r2, [r4, #12]
   13f7c:	ldrb	r3, [r2, r3]
   13f80:	sub	r2, r3, #48	; 0x30
   13f84:	cmp	r2, #9
   13f88:	addls	r9, r2, r9, lsl #4
   13f8c:	bls	13f54 <sigaltstack@plt+0x2c74>
   13f90:	sub	r2, r3, #65	; 0x41
   13f94:	cmp	r2, #5
   13f98:	addls	r3, r3, r9, lsl #4
   13f9c:	subls	r9, r3, #55	; 0x37
   13fa0:	bls	13f54 <sigaltstack@plt+0x2c74>
   13fa4:	sub	r2, r3, #97	; 0x61
   13fa8:	cmp	r2, #5
   13fac:	addls	r3, r3, r9, lsl #4
   13fb0:	subls	r9, r3, #87	; 0x57
   13fb4:	bls	13f54 <sigaltstack@plt+0x2c74>
   13fb8:	cmp	r5, #0
   13fbc:	strne	r9, [r6]
   13fc0:	movne	r0, #0
   13fc4:	mvneq	r0, #0
   13fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd0:	sub	sp, sp, #92	; 0x5c
   13fd4:	str	r0, [sp, #20]
   13fd8:	mov	fp, r1
   13fdc:	str	r0, [sp, #72]	; 0x48
   13fe0:	str	r1, [sp, #76]	; 0x4c
   13fe4:	mov	r1, #0
   13fe8:	str	r1, [sp, #80]	; 0x50
   13fec:	mvn	r3, #0
   13ff0:	str	r3, [sp, #84]	; 0x54
   13ff4:	ldr	r0, [pc, #848]	; 1434c <sigaltstack@plt+0x306c>
   13ff8:	bl	11118 <open64@plt>
   13ffc:	subs	r8, r0, #0
   14000:	blt	14224 <sigaltstack@plt+0x2f44>
   14004:	mov	r9, #0
   14008:	str	r9, [sp, #36]	; 0x24
   1400c:	str	r9, [sp, #44]	; 0x2c
   14010:	add	r3, sp, #68	; 0x44
   14014:	str	r3, [sp, #48]	; 0x30
   14018:	str	r9, [sp, #52]	; 0x34
   1401c:	str	r9, [sp, #60]	; 0x3c
   14020:	str	r9, [sp, #64]	; 0x40
   14024:	mov	r4, #1
   14028:	ldr	r5, [pc, #800]	; 14350 <sigaltstack@plt+0x3070>
   1402c:	mov	r6, #0
   14030:	mov	r7, #0
   14034:	mvn	sl, #0
   14038:	b	14194 <sigaltstack@plt+0x2eb4>
   1403c:	mov	r2, r4
   14040:	ldr	r1, [sp, #48]	; 0x30
   14044:	mov	r0, r8
   14048:	bl	10fec <read@plt>
   1404c:	cmp	r0, #0
   14050:	blt	14074 <sigaltstack@plt+0x2d94>
   14054:	cmp	r0, #0
   14058:	ble	140e0 <sigaltstack@plt+0x2e00>
   1405c:	add	r3, r0, #4160	; 0x1040
   14060:	add	r3, r3, #9
   14064:	cmp	r3, r4
   14068:	bhi	1419c <sigaltstack@plt+0x2ebc>
   1406c:	str	r0, [sp, #40]	; 0x28
   14070:	b	140b0 <sigaltstack@plt+0x2dd0>
   14074:	bl	111d8 <__errno_location@plt>
   14078:	ldr	r3, [r0]
   1407c:	cmp	r3, #4
   14080:	bne	140e0 <sigaltstack@plt+0x2e00>
   14084:	b	14170 <sigaltstack@plt+0x2e90>
   14088:	ldr	r2, [sp, #40]	; 0x28
   1408c:	add	r3, r0, #4160	; 0x1040
   14090:	add	r3, r3, #9
   14094:	sub	r1, r4, r2
   14098:	cmp	r3, r1
   1409c:	bhi	1419c <sigaltstack@plt+0x2ebc>
   140a0:	cmp	r0, #0
   140a4:	beq	14100 <sigaltstack@plt+0x2e20>
   140a8:	add	r0, r0, r2
   140ac:	str	r0, [sp, #40]	; 0x28
   140b0:	ldr	r3, [sp, #40]	; 0x28
   140b4:	sub	r2, r4, r3
   140b8:	ldr	r1, [sp, #48]	; 0x30
   140bc:	add	r1, r1, r3
   140c0:	mov	r0, r8
   140c4:	bl	10fec <read@plt>
   140c8:	cmp	r0, #0
   140cc:	bge	14088 <sigaltstack@plt+0x2da8>
   140d0:	bl	111d8 <__errno_location@plt>
   140d4:	ldr	r3, [r0]
   140d8:	cmp	r3, #4
   140dc:	beq	14170 <sigaltstack@plt+0x2e90>
   140e0:	mov	r0, r8
   140e4:	bl	112c8 <close@plt>
   140e8:	ldr	r0, [sp, #52]	; 0x34
   140ec:	cmp	r0, #0
   140f0:	beq	14224 <sigaltstack@plt+0x2f44>
   140f4:	ldr	r1, [sp, #56]	; 0x38
   140f8:	bl	1122c <munmap@plt>
   140fc:	b	14224 <sigaltstack@plt+0x2f44>
   14100:	mov	r0, r8
   14104:	bl	112c8 <close@plt>
   14108:	ldr	r4, [sp, #60]	; 0x3c
   1410c:	ldr	r6, [sp, #64]	; 0x40
   14110:	sub	r5, r6, #1
   14114:	b	14258 <sigaltstack@plt+0x2f78>
   14118:	lsls	r4, r4, #1
   1411c:	beq	140e0 <sigaltstack@plt+0x2e00>
   14120:	ldr	r0, [sp, #52]	; 0x34
   14124:	cmp	r0, #0
   14128:	beq	14134 <sigaltstack@plt+0x2e54>
   1412c:	ldr	r1, [sp, #56]	; 0x38
   14130:	bl	1122c <munmap@plt>
   14134:	strd	r6, [sp, #8]
   14138:	str	sl, [sp]
   1413c:	mov	r3, #34	; 0x22
   14140:	mov	r2, #3
   14144:	mov	r1, r4
   14148:	mov	r0, #0
   1414c:	bl	11034 <mmap64@plt>
   14150:	str	r0, [sp, #52]	; 0x34
   14154:	cmn	r0, #1
   14158:	beq	141d0 <sigaltstack@plt+0x2ef0>
   1415c:	str	r4, [sp, #56]	; 0x38
   14160:	str	r0, [sp, #60]	; 0x3c
   14164:	add	r3, r4, r0
   14168:	str	r3, [sp, #64]	; 0x40
   1416c:	str	r0, [sp, #48]	; 0x30
   14170:	mov	r3, #0
   14174:	str	r3, [sp]
   14178:	mov	r2, r6
   1417c:	mov	r3, r7
   14180:	mov	r0, r8
   14184:	bl	110e8 <lseek64@plt>
   14188:	cmp	r0, #0
   1418c:	sbcs	r3, r1, #0
   14190:	blt	141dc <sigaltstack@plt+0x2efc>
   14194:	cmp	r4, r5
   14198:	bhi	1403c <sigaltstack@plt+0x2d5c>
   1419c:	cmp	r9, #0
   141a0:	bne	14118 <sigaltstack@plt+0x2e38>
   141a4:	bl	111cc <getpagesize@plt>
   141a8:	mov	r9, r0
   141ac:	cmp	r0, r5
   141b0:	bhi	141c8 <sigaltstack@plt+0x2ee8>
   141b4:	mov	r4, r0
   141b8:	lsl	r4, r4, #1
   141bc:	cmp	r4, r5
   141c0:	bls	141b8 <sigaltstack@plt+0x2ed8>
   141c4:	b	14134 <sigaltstack@plt+0x2e54>
   141c8:	mov	r4, r0
   141cc:	b	14134 <sigaltstack@plt+0x2e54>
   141d0:	mov	r0, r8
   141d4:	bl	112c8 <close@plt>
   141d8:	b	14224 <sigaltstack@plt+0x2f44>
   141dc:	mov	r0, r8
   141e0:	bl	112c8 <close@plt>
   141e4:	mov	r1, #0
   141e8:	ldr	r0, [pc, #348]	; 1434c <sigaltstack@plt+0x306c>
   141ec:	bl	11118 <open64@plt>
   141f0:	subs	r8, r0, #0
   141f4:	bge	14194 <sigaltstack@plt+0x2eb4>
   141f8:	b	140e8 <sigaltstack@plt+0x2e08>
   141fc:	mov	r2, r4
   14200:	add	r0, sp, #72	; 0x48
   14204:	bl	13c94 <sigaltstack@plt+0x29b4>
   14208:	cmp	r0, #0
   1420c:	beq	142c8 <sigaltstack@plt+0x2fe8>
   14210:	ldr	r0, [sp, #52]	; 0x34
   14214:	cmp	r0, #0
   14218:	beq	14224 <sigaltstack@plt+0x2f44>
   1421c:	ldr	r1, [sp, #56]	; 0x38
   14220:	bl	1122c <munmap@plt>
   14224:	ldr	r3, [sp, #84]	; 0x54
   14228:	cmp	r3, #0
   1422c:	bne	142f0 <sigaltstack@plt+0x3010>
   14230:	ldr	r3, [pc, #284]	; 14354 <sigaltstack@plt+0x3074>
   14234:	str	r3, [fp, #8]
   14238:	mov	r0, #0
   1423c:	add	sp, sp, #92	; 0x5c
   14240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14244:	ldr	r2, [sp, #32]
   14248:	add	r0, sp, #72	; 0x48
   1424c:	bl	13c94 <sigaltstack@plt+0x29b4>
   14250:	cmp	r0, #0
   14254:	bne	14210 <sigaltstack@plt+0x2f30>
   14258:	add	r1, sp, #28
   1425c:	add	r0, sp, #36	; 0x24
   14260:	bl	13f34 <sigaltstack@plt+0x2c54>
   14264:	cmp	r0, #0
   14268:	blt	14210 <sigaltstack@plt+0x2f30>
   1426c:	add	r0, sp, #36	; 0x24
   14270:	bl	13c64 <sigaltstack@plt+0x2984>
   14274:	cmp	r0, #45	; 0x2d
   14278:	bne	14210 <sigaltstack@plt+0x2f30>
   1427c:	add	r1, sp, #32
   14280:	add	r0, sp, #36	; 0x24
   14284:	bl	13f34 <sigaltstack@plt+0x2c54>
   14288:	cmp	r0, #0
   1428c:	blt	14210 <sigaltstack@plt+0x2f30>
   14290:	add	r0, sp, #36	; 0x24
   14294:	bl	13c64 <sigaltstack@plt+0x2984>
   14298:	cmp	r0, #10
   1429c:	cmnne	r0, #1
   142a0:	bne	14290 <sigaltstack@plt+0x2fb0>
   142a4:	ldr	r1, [sp, #28]
   142a8:	cmp	r4, r1
   142ac:	bcc	14244 <sigaltstack@plt+0x2f64>
   142b0:	ldr	r3, [sp, #32]
   142b4:	sub	r3, r3, #1
   142b8:	cmp	r5, r3
   142bc:	bhi	14244 <sigaltstack@plt+0x2f64>
   142c0:	cmp	r4, r1
   142c4:	bhi	141fc <sigaltstack@plt+0x2f1c>
   142c8:	ldr	r2, [sp, #32]
   142cc:	sub	r3, r2, #1
   142d0:	cmp	r5, r3
   142d4:	bcs	14258 <sigaltstack@plt+0x2f78>
   142d8:	mov	r1, r6
   142dc:	add	r0, sp, #72	; 0x48
   142e0:	bl	13c94 <sigaltstack@plt+0x29b4>
   142e4:	cmp	r0, #0
   142e8:	beq	14258 <sigaltstack@plt+0x2f78>
   142ec:	b	14210 <sigaltstack@plt+0x2f30>
   142f0:	ldr	r3, [pc, #96]	; 14358 <sigaltstack@plt+0x3078>
   142f4:	ldr	r3, [r3]
   142f8:	cmp	r3, #0
   142fc:	beq	1433c <sigaltstack@plt+0x305c>
   14300:	ldr	r3, [pc, #80]	; 14358 <sigaltstack@plt+0x3078>
   14304:	ldr	r4, [r3]
   14308:	mov	r1, r4
   1430c:	ldr	r0, [sp, #20]
   14310:	bl	17f10 <sigaltstack@plt+0x6c30>
   14314:	mul	r4, r4, r0
   14318:	mov	r0, r4
   1431c:	bl	13dcc <sigaltstack@plt+0x2aec>
   14320:	str	r0, [fp]
   14324:	mov	r0, r4
   14328:	bl	13e8c <sigaltstack@plt+0x2bac>
   1432c:	str	r0, [fp, #4]
   14330:	ldr	r3, [pc, #36]	; 1435c <sigaltstack@plt+0x307c>
   14334:	str	r3, [fp, #8]
   14338:	b	14238 <sigaltstack@plt+0x2f58>
   1433c:	bl	111cc <getpagesize@plt>
   14340:	ldr	r3, [pc, #16]	; 14358 <sigaltstack@plt+0x3078>
   14344:	str	r0, [r3]
   14348:	b	14300 <sigaltstack@plt+0x3020>
   1434c:	andeq	r8, r1, r8, asr pc
   14350:	andeq	r1, r0, r9, asr #32
   14354:	andeq	r3, r1, r4, asr #24
   14358:	andeq	sl, r3, r8, asr #5
   1435c:	andeq	r3, r1, r4, ror #25
   14360:	push	{r4, r5, r6, lr}
   14364:	mov	r5, r0
   14368:	mov	r4, r1
   1436c:	mov	r2, r1
   14370:	mov	r1, #0
   14374:	bl	11208 <memchr@plt>
   14378:	cmp	r0, #0
   1437c:	subne	r0, r0, r5
   14380:	addne	r0, r0, #1
   14384:	moveq	r0, r4
   14388:	pop	{r4, r5, r6, pc}
   1438c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14390:	sub	sp, sp, #68	; 0x44
   14394:	mov	r7, r1
   14398:	bl	1107c <strdup@plt>
   1439c:	subs	r9, r0, #0
   143a0:	beq	14400 <sigaltstack@plt+0x3120>
   143a4:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   143a8:	cmp	r0, #1
   143ac:	bls	147a8 <sigaltstack@plt+0x34c8>
   143b0:	cmp	r7, #0
   143b4:	bne	14404 <sigaltstack@plt+0x3124>
   143b8:	str	r9, [sp, #24]
   143bc:	mov	r0, r9
   143c0:	bl	111a8 <strlen@plt>
   143c4:	add	r6, r9, r0
   143c8:	str	r6, [sp, #4]
   143cc:	mov	r3, #0
   143d0:	strb	r3, [sp, #8]
   143d4:	str	r3, [sp, #12]
   143d8:	str	r3, [sp, #16]
   143dc:	strb	r3, [sp, #20]
   143e0:	cmp	r9, r6
   143e4:	bcs	1479c <sigaltstack@plt+0x34bc>
   143e8:	mov	r4, r9
   143ec:	mov	r5, #0
   143f0:	mov	r7, #1
   143f4:	mov	r8, r5
   143f8:	ldr	sl, [pc, #1104]	; 14850 <sigaltstack@plt+0x3570>
   143fc:	b	1460c <sigaltstack@plt+0x332c>
   14400:	bl	152f8 <sigaltstack@plt+0x4018>
   14404:	str	r9, [sp, #24]
   14408:	mov	r0, r9
   1440c:	bl	111a8 <strlen@plt>
   14410:	add	r5, r9, r0
   14414:	str	r5, [sp, #4]
   14418:	mov	r3, #0
   1441c:	strb	r3, [sp, #8]
   14420:	str	r3, [sp, #12]
   14424:	str	r3, [sp, #16]
   14428:	strb	r3, [sp, #20]
   1442c:	cmp	r9, r5
   14430:	bcs	145a4 <sigaltstack@plt+0x32c4>
   14434:	mov	r4, r9
   14438:	mov	r6, #1
   1443c:	mov	r8, #0
   14440:	ldr	sl, [pc, #1032]	; 14850 <sigaltstack@plt+0x3570>
   14444:	b	14508 <sigaltstack@plt+0x3228>
   14448:	add	r0, sp, #12
   1444c:	bl	11040 <mbsinit@plt>
   14450:	cmp	r0, #0
   14454:	beq	14550 <sigaltstack@plt+0x3270>
   14458:	strb	r6, [sp, #8]
   1445c:	add	r3, sp, #12
   14460:	sub	r2, r5, r4
   14464:	mov	r1, r4
   14468:	add	r0, sp, #36	; 0x24
   1446c:	bl	15b18 <sigaltstack@plt+0x4838>
   14470:	str	r0, [sp, #28]
   14474:	cmn	r0, #1
   14478:	streq	r6, [sp, #28]
   1447c:	strbeq	r8, [sp, #32]
   14480:	beq	144c8 <sigaltstack@plt+0x31e8>
   14484:	cmn	r0, #2
   14488:	beq	14564 <sigaltstack@plt+0x3284>
   1448c:	cmp	r0, #0
   14490:	bne	144b4 <sigaltstack@plt+0x31d4>
   14494:	str	r6, [sp, #28]
   14498:	ldr	r3, [sp, #24]
   1449c:	ldrb	r3, [r3]
   144a0:	cmp	r3, #0
   144a4:	bne	1457c <sigaltstack@plt+0x329c>
   144a8:	ldr	r3, [sp, #36]	; 0x24
   144ac:	cmp	r3, #0
   144b0:	bne	14590 <sigaltstack@plt+0x32b0>
   144b4:	strb	r6, [sp, #32]
   144b8:	add	r0, sp, #12
   144bc:	bl	11040 <mbsinit@plt>
   144c0:	cmp	r0, #0
   144c4:	strbne	r8, [sp, #8]
   144c8:	strb	r6, [sp, #20]
   144cc:	ldrb	r3, [sp, #32]
   144d0:	cmp	r3, #0
   144d4:	beq	145a4 <sigaltstack@plt+0x32c4>
   144d8:	ldr	r0, [sp, #36]	; 0x24
   144dc:	bl	1119c <iswspace@plt>
   144e0:	cmp	r0, #0
   144e4:	beq	145a4 <sigaltstack@plt+0x32c4>
   144e8:	ldr	r3, [sp, #28]
   144ec:	ldr	r4, [sp, #24]
   144f0:	add	r4, r4, r3
   144f4:	str	r4, [sp, #24]
   144f8:	strb	r8, [sp, #20]
   144fc:	ldr	r5, [sp, #4]
   14500:	cmp	r5, r4
   14504:	bls	145a4 <sigaltstack@plt+0x32c4>
   14508:	ldrb	r3, [sp, #20]
   1450c:	cmp	r3, #0
   14510:	bne	144cc <sigaltstack@plt+0x31ec>
   14514:	ldrb	r3, [sp, #8]
   14518:	cmp	r3, #0
   1451c:	bne	1445c <sigaltstack@plt+0x317c>
   14520:	ldrb	r3, [r4]
   14524:	lsr	r2, r3, #5
   14528:	and	r3, r3, #31
   1452c:	ldr	r2, [sl, r2, lsl #2]
   14530:	lsr	r3, r2, r3
   14534:	tst	r3, #1
   14538:	beq	14448 <sigaltstack@plt+0x3168>
   1453c:	str	r6, [sp, #28]
   14540:	ldrb	r3, [r4]
   14544:	str	r3, [sp, #36]	; 0x24
   14548:	strb	r6, [sp, #32]
   1454c:	b	144c8 <sigaltstack@plt+0x31e8>
   14550:	ldr	r3, [pc, #764]	; 14854 <sigaltstack@plt+0x3574>
   14554:	mov	r2, #135	; 0x87
   14558:	ldr	r1, [pc, #760]	; 14858 <sigaltstack@plt+0x3578>
   1455c:	ldr	r0, [pc, #760]	; 1485c <sigaltstack@plt+0x357c>
   14560:	bl	112d4 <__assert_fail@plt>
   14564:	ldr	r2, [sp, #24]
   14568:	ldr	r3, [sp, #4]
   1456c:	sub	r3, r3, r2
   14570:	str	r3, [sp, #28]
   14574:	strb	r8, [sp, #32]
   14578:	b	144c8 <sigaltstack@plt+0x31e8>
   1457c:	ldr	r3, [pc, #720]	; 14854 <sigaltstack@plt+0x3574>
   14580:	mov	r2, #162	; 0xa2
   14584:	ldr	r1, [pc, #716]	; 14858 <sigaltstack@plt+0x3578>
   14588:	ldr	r0, [pc, #720]	; 14860 <sigaltstack@plt+0x3580>
   1458c:	bl	112d4 <__assert_fail@plt>
   14590:	ldr	r3, [pc, #700]	; 14854 <sigaltstack@plt+0x3574>
   14594:	mov	r2, #163	; 0xa3
   14598:	ldr	r1, [pc, #696]	; 14858 <sigaltstack@plt+0x3578>
   1459c:	ldr	r0, [pc, #704]	; 14864 <sigaltstack@plt+0x3584>
   145a0:	bl	112d4 <__assert_fail@plt>
   145a4:	ldr	r4, [sp, #24]
   145a8:	mov	r0, r4
   145ac:	bl	111a8 <strlen@plt>
   145b0:	add	r2, r0, #1
   145b4:	mov	r1, r4
   145b8:	mov	r0, r9
   145bc:	bl	11004 <memmove@plt>
   145c0:	cmp	r7, #1
   145c4:	beq	1479c <sigaltstack@plt+0x34bc>
   145c8:	b	143b8 <sigaltstack@plt+0x30d8>
   145cc:	ldrb	r3, [sp, #32]
   145d0:	cmp	r3, #0
   145d4:	moveq	r5, #1
   145d8:	beq	145ec <sigaltstack@plt+0x330c>
   145dc:	ldr	r0, [sp, #36]	; 0x24
   145e0:	bl	1119c <iswspace@plt>
   145e4:	clz	r5, r0
   145e8:	lsr	r5, r5, #5
   145ec:	ldr	r3, [sp, #28]
   145f0:	ldr	r4, [sp, #24]
   145f4:	add	r4, r4, r3
   145f8:	str	r4, [sp, #24]
   145fc:	strb	r8, [sp, #20]
   14600:	ldr	r6, [sp, #4]
   14604:	cmp	r6, r4
   14608:	bls	14790 <sigaltstack@plt+0x34b0>
   1460c:	ldrb	r3, [sp, #20]
   14610:	cmp	r3, #0
   14614:	bne	14654 <sigaltstack@plt+0x3374>
   14618:	ldrb	r3, [sp, #8]
   1461c:	cmp	r3, #0
   14620:	bne	146cc <sigaltstack@plt+0x33ec>
   14624:	ldrb	r3, [r4]
   14628:	lsr	r2, r3, #5
   1462c:	and	r3, r3, #31
   14630:	ldr	r2, [sl, r2, lsl #2]
   14634:	lsr	r3, r2, r3
   14638:	tst	r3, #1
   1463c:	beq	146b8 <sigaltstack@plt+0x33d8>
   14640:	str	r7, [sp, #28]
   14644:	ldrb	r3, [r4]
   14648:	str	r3, [sp, #36]	; 0x24
   1464c:	strb	r7, [sp, #32]
   14650:	strb	r7, [sp, #20]
   14654:	cmp	r5, #0
   14658:	beq	145cc <sigaltstack@plt+0x32ec>
   1465c:	cmp	r5, #1
   14660:	beq	14694 <sigaltstack@plt+0x33b4>
   14664:	cmp	r5, #2
   14668:	movne	r5, #1
   1466c:	bne	145ec <sigaltstack@plt+0x330c>
   14670:	ldrb	r3, [sp, #32]
   14674:	cmp	r3, #0
   14678:	moveq	r5, #1
   1467c:	beq	145ec <sigaltstack@plt+0x330c>
   14680:	ldr	r0, [sp, #36]	; 0x24
   14684:	bl	1119c <iswspace@plt>
   14688:	cmp	r0, #0
   1468c:	moveq	r5, #1
   14690:	b	145ec <sigaltstack@plt+0x330c>
   14694:	ldrb	r3, [sp, #32]
   14698:	cmp	r3, #0
   1469c:	beq	145ec <sigaltstack@plt+0x330c>
   146a0:	ldr	r0, [sp, #36]	; 0x24
   146a4:	bl	1119c <iswspace@plt>
   146a8:	cmp	r0, #0
   146ac:	ldrne	fp, [sp, #24]
   146b0:	movne	r5, #2
   146b4:	b	145ec <sigaltstack@plt+0x330c>
   146b8:	add	r0, sp, #12
   146bc:	bl	11040 <mbsinit@plt>
   146c0:	cmp	r0, #0
   146c4:	beq	1473c <sigaltstack@plt+0x345c>
   146c8:	strb	r7, [sp, #8]
   146cc:	add	r3, sp, #12
   146d0:	sub	r2, r6, r4
   146d4:	mov	r1, r4
   146d8:	add	r0, sp, #36	; 0x24
   146dc:	bl	15b18 <sigaltstack@plt+0x4838>
   146e0:	str	r0, [sp, #28]
   146e4:	cmn	r0, #1
   146e8:	streq	r7, [sp, #28]
   146ec:	strbeq	r8, [sp, #32]
   146f0:	beq	14650 <sigaltstack@plt+0x3370>
   146f4:	cmn	r0, #2
   146f8:	beq	14750 <sigaltstack@plt+0x3470>
   146fc:	cmp	r0, #0
   14700:	bne	14724 <sigaltstack@plt+0x3444>
   14704:	str	r7, [sp, #28]
   14708:	ldr	r3, [sp, #24]
   1470c:	ldrb	r3, [r3]
   14710:	cmp	r3, #0
   14714:	bne	14768 <sigaltstack@plt+0x3488>
   14718:	ldr	r3, [sp, #36]	; 0x24
   1471c:	cmp	r3, #0
   14720:	bne	1477c <sigaltstack@plt+0x349c>
   14724:	strb	r7, [sp, #32]
   14728:	add	r0, sp, #12
   1472c:	bl	11040 <mbsinit@plt>
   14730:	cmp	r0, #0
   14734:	strbne	r8, [sp, #8]
   14738:	b	14650 <sigaltstack@plt+0x3370>
   1473c:	ldr	r3, [pc, #272]	; 14854 <sigaltstack@plt+0x3574>
   14740:	mov	r2, #135	; 0x87
   14744:	ldr	r1, [pc, #268]	; 14858 <sigaltstack@plt+0x3578>
   14748:	ldr	r0, [pc, #268]	; 1485c <sigaltstack@plt+0x357c>
   1474c:	bl	112d4 <__assert_fail@plt>
   14750:	ldr	r2, [sp, #24]
   14754:	ldr	r3, [sp, #4]
   14758:	sub	r3, r3, r2
   1475c:	str	r3, [sp, #28]
   14760:	strb	r8, [sp, #32]
   14764:	b	14650 <sigaltstack@plt+0x3370>
   14768:	ldr	r3, [pc, #228]	; 14854 <sigaltstack@plt+0x3574>
   1476c:	mov	r2, #162	; 0xa2
   14770:	ldr	r1, [pc, #224]	; 14858 <sigaltstack@plt+0x3578>
   14774:	ldr	r0, [pc, #228]	; 14860 <sigaltstack@plt+0x3580>
   14778:	bl	112d4 <__assert_fail@plt>
   1477c:	ldr	r3, [pc, #208]	; 14854 <sigaltstack@plt+0x3574>
   14780:	mov	r2, #163	; 0xa3
   14784:	ldr	r1, [pc, #204]	; 14858 <sigaltstack@plt+0x3578>
   14788:	ldr	r0, [pc, #212]	; 14864 <sigaltstack@plt+0x3584>
   1478c:	bl	112d4 <__assert_fail@plt>
   14790:	cmp	r5, #2
   14794:	moveq	r3, #0
   14798:	strbeq	r3, [fp]
   1479c:	mov	r0, r9
   147a0:	add	sp, sp, #68	; 0x44
   147a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147a8:	cmp	r7, #0
   147ac:	beq	14804 <sigaltstack@plt+0x3524>
   147b0:	ldrb	r4, [r9]
   147b4:	cmp	r4, #0
   147b8:	beq	14848 <sigaltstack@plt+0x3568>
   147bc:	bl	11184 <__ctype_b_loc@plt>
   147c0:	ldr	r2, [r0]
   147c4:	mov	r5, r9
   147c8:	lsl	r4, r4, #1
   147cc:	ldrh	r3, [r2, r4]
   147d0:	tst	r3, #8192	; 0x2000
   147d4:	beq	147e4 <sigaltstack@plt+0x3504>
   147d8:	ldrb	r4, [r5, #1]!
   147dc:	cmp	r4, #0
   147e0:	bne	147c8 <sigaltstack@plt+0x34e8>
   147e4:	mov	r0, r5
   147e8:	bl	111a8 <strlen@plt>
   147ec:	add	r2, r0, #1
   147f0:	mov	r1, r5
   147f4:	mov	r0, r9
   147f8:	bl	11004 <memmove@plt>
   147fc:	cmp	r7, #1
   14800:	beq	1479c <sigaltstack@plt+0x34bc>
   14804:	mov	r0, r9
   14808:	bl	111a8 <strlen@plt>
   1480c:	sub	r0, r0, #1
   14810:	adds	r4, r9, r0
   14814:	bcs	1479c <sigaltstack@plt+0x34bc>
   14818:	bl	11184 <__ctype_b_loc@plt>
   1481c:	ldr	r2, [r0]
   14820:	mov	r1, #0
   14824:	ldrb	r3, [r4]
   14828:	lsl	r3, r3, #1
   1482c:	ldrh	r3, [r2, r3]
   14830:	tst	r3, #8192	; 0x2000
   14834:	beq	1479c <sigaltstack@plt+0x34bc>
   14838:	strb	r1, [r4], #-1
   1483c:	cmp	r9, r4
   14840:	bls	14824 <sigaltstack@plt+0x3544>
   14844:	b	1479c <sigaltstack@plt+0x34bc>
   14848:	mov	r5, r9
   1484c:	b	147e4 <sigaltstack@plt+0x3504>
   14850:	andeq	r9, r1, r4, asr #6
   14854:	andeq	r8, r1, r8, ror #30
   14858:	andeq	r8, r1, ip, ror pc
   1485c:	andeq	r8, r1, r4, asr #29
   14860:	ldrdeq	r8, [r1], -ip
   14864:	strdeq	r8, [r1], -r4
   14868:	push	{r4, r5, r6, lr}
   1486c:	sub	sp, sp, #32
   14870:	mov	r4, r0
   14874:	ldr	r5, [sp, #48]	; 0x30
   14878:	ldr	r6, [sp, #52]	; 0x34
   1487c:	cmp	r1, #0
   14880:	beq	14928 <sigaltstack@plt+0x3648>
   14884:	str	r3, [sp]
   14888:	mov	r3, r2
   1488c:	mov	r2, r1
   14890:	ldr	r1, [pc, #836]	; 14bdc <sigaltstack@plt+0x38fc>
   14894:	bl	111c0 <fprintf@plt>
   14898:	mov	r2, #5
   1489c:	ldr	r1, [pc, #828]	; 14be0 <sigaltstack@plt+0x3900>
   148a0:	mov	r0, #0
   148a4:	bl	11070 <dcgettext@plt>
   148a8:	ldr	r3, [pc, #820]	; 14be4 <sigaltstack@plt+0x3904>
   148ac:	mov	r2, r0
   148b0:	ldr	r1, [pc, #816]	; 14be8 <sigaltstack@plt+0x3908>
   148b4:	mov	r0, r4
   148b8:	bl	111c0 <fprintf@plt>
   148bc:	mov	r1, r4
   148c0:	mov	r0, #10
   148c4:	bl	11064 <fputc_unlocked@plt>
   148c8:	mov	r2, #5
   148cc:	ldr	r1, [pc, #792]	; 14bec <sigaltstack@plt+0x390c>
   148d0:	mov	r0, #0
   148d4:	bl	11070 <dcgettext@plt>
   148d8:	ldr	r2, [pc, #784]	; 14bf0 <sigaltstack@plt+0x3910>
   148dc:	mov	r1, r0
   148e0:	mov	r0, r4
   148e4:	bl	111c0 <fprintf@plt>
   148e8:	mov	r1, r4
   148ec:	mov	r0, #10
   148f0:	bl	11064 <fputc_unlocked@plt>
   148f4:	cmp	r6, #9
   148f8:	ldrls	pc, [pc, r6, lsl #2]
   148fc:	b	14b7c <sigaltstack@plt+0x389c>
   14900:	andeq	r4, r1, r4, asr r9
   14904:	andeq	r4, r1, r4, lsr r9
   14908:	andeq	r4, r1, ip, asr r9
   1490c:	andeq	r4, r1, r4, lsl #19
   14910:			; <UNDEFINED> instruction: 0x000149b4
   14914:	andeq	r4, r1, ip, ror #19
   14918:	andeq	r4, r1, ip, lsr #20
   1491c:	andeq	r4, r1, r4, ror sl
   14920:	andeq	r4, r1, r4, asr #21
   14924:	andeq	r4, r1, ip, lsl fp
   14928:	ldr	r1, [pc, #708]	; 14bf4 <sigaltstack@plt+0x3914>
   1492c:	bl	111c0 <fprintf@plt>
   14930:	b	14898 <sigaltstack@plt+0x35b8>
   14934:	mov	r2, #5
   14938:	ldr	r1, [pc, #696]	; 14bf8 <sigaltstack@plt+0x3918>
   1493c:	mov	r0, #0
   14940:	bl	11070 <dcgettext@plt>
   14944:	ldr	r2, [r5]
   14948:	mov	r1, r0
   1494c:	mov	r0, r4
   14950:	bl	111c0 <fprintf@plt>
   14954:	add	sp, sp, #32
   14958:	pop	{r4, r5, r6, pc}
   1495c:	mov	r2, #5
   14960:	ldr	r1, [pc, #660]	; 14bfc <sigaltstack@plt+0x391c>
   14964:	mov	r0, #0
   14968:	bl	11070 <dcgettext@plt>
   1496c:	ldr	r3, [r5, #4]
   14970:	ldr	r2, [r5]
   14974:	mov	r1, r0
   14978:	mov	r0, r4
   1497c:	bl	111c0 <fprintf@plt>
   14980:	b	14954 <sigaltstack@plt+0x3674>
   14984:	mov	r2, #5
   14988:	ldr	r1, [pc, #624]	; 14c00 <sigaltstack@plt+0x3920>
   1498c:	mov	r0, #0
   14990:	bl	11070 <dcgettext@plt>
   14994:	ldr	r3, [r5, #4]
   14998:	ldr	r2, [r5]
   1499c:	ldr	r1, [r5, #8]
   149a0:	str	r1, [sp]
   149a4:	mov	r1, r0
   149a8:	mov	r0, r4
   149ac:	bl	111c0 <fprintf@plt>
   149b0:	b	14954 <sigaltstack@plt+0x3674>
   149b4:	mov	r2, #5
   149b8:	ldr	r1, [pc, #580]	; 14c04 <sigaltstack@plt+0x3924>
   149bc:	mov	r0, #0
   149c0:	bl	11070 <dcgettext@plt>
   149c4:	ldr	r3, [r5, #4]
   149c8:	ldr	r2, [r5]
   149cc:	ldr	r1, [r5, #12]
   149d0:	str	r1, [sp, #4]
   149d4:	ldr	r1, [r5, #8]
   149d8:	str	r1, [sp]
   149dc:	mov	r1, r0
   149e0:	mov	r0, r4
   149e4:	bl	111c0 <fprintf@plt>
   149e8:	b	14954 <sigaltstack@plt+0x3674>
   149ec:	mov	r2, #5
   149f0:	ldr	r1, [pc, #528]	; 14c08 <sigaltstack@plt+0x3928>
   149f4:	mov	r0, #0
   149f8:	bl	11070 <dcgettext@plt>
   149fc:	ldr	r3, [r5, #4]
   14a00:	ldr	r2, [r5]
   14a04:	ldr	r1, [r5, #16]
   14a08:	str	r1, [sp, #8]
   14a0c:	ldr	r1, [r5, #12]
   14a10:	str	r1, [sp, #4]
   14a14:	ldr	r1, [r5, #8]
   14a18:	str	r1, [sp]
   14a1c:	mov	r1, r0
   14a20:	mov	r0, r4
   14a24:	bl	111c0 <fprintf@plt>
   14a28:	b	14954 <sigaltstack@plt+0x3674>
   14a2c:	mov	r2, #5
   14a30:	ldr	r1, [pc, #468]	; 14c0c <sigaltstack@plt+0x392c>
   14a34:	mov	r0, #0
   14a38:	bl	11070 <dcgettext@plt>
   14a3c:	ldr	r3, [r5, #4]
   14a40:	ldr	r2, [r5]
   14a44:	ldr	r1, [r5, #20]
   14a48:	str	r1, [sp, #12]
   14a4c:	ldr	r1, [r5, #16]
   14a50:	str	r1, [sp, #8]
   14a54:	ldr	r1, [r5, #12]
   14a58:	str	r1, [sp, #4]
   14a5c:	ldr	r1, [r5, #8]
   14a60:	str	r1, [sp]
   14a64:	mov	r1, r0
   14a68:	mov	r0, r4
   14a6c:	bl	111c0 <fprintf@plt>
   14a70:	b	14954 <sigaltstack@plt+0x3674>
   14a74:	mov	r2, #5
   14a78:	ldr	r1, [pc, #400]	; 14c10 <sigaltstack@plt+0x3930>
   14a7c:	mov	r0, #0
   14a80:	bl	11070 <dcgettext@plt>
   14a84:	ldr	r3, [r5, #4]
   14a88:	ldr	r2, [r5]
   14a8c:	ldr	r1, [r5, #24]
   14a90:	str	r1, [sp, #16]
   14a94:	ldr	r1, [r5, #20]
   14a98:	str	r1, [sp, #12]
   14a9c:	ldr	r1, [r5, #16]
   14aa0:	str	r1, [sp, #8]
   14aa4:	ldr	r1, [r5, #12]
   14aa8:	str	r1, [sp, #4]
   14aac:	ldr	r1, [r5, #8]
   14ab0:	str	r1, [sp]
   14ab4:	mov	r1, r0
   14ab8:	mov	r0, r4
   14abc:	bl	111c0 <fprintf@plt>
   14ac0:	b	14954 <sigaltstack@plt+0x3674>
   14ac4:	mov	r2, #5
   14ac8:	ldr	r1, [pc, #324]	; 14c14 <sigaltstack@plt+0x3934>
   14acc:	mov	r0, #0
   14ad0:	bl	11070 <dcgettext@plt>
   14ad4:	ldr	r3, [r5, #4]
   14ad8:	ldr	r2, [r5]
   14adc:	ldr	r1, [r5, #28]
   14ae0:	str	r1, [sp, #20]
   14ae4:	ldr	r1, [r5, #24]
   14ae8:	str	r1, [sp, #16]
   14aec:	ldr	r1, [r5, #20]
   14af0:	str	r1, [sp, #12]
   14af4:	ldr	r1, [r5, #16]
   14af8:	str	r1, [sp, #8]
   14afc:	ldr	r1, [r5, #12]
   14b00:	str	r1, [sp, #4]
   14b04:	ldr	r1, [r5, #8]
   14b08:	str	r1, [sp]
   14b0c:	mov	r1, r0
   14b10:	mov	r0, r4
   14b14:	bl	111c0 <fprintf@plt>
   14b18:	b	14954 <sigaltstack@plt+0x3674>
   14b1c:	mov	r2, #5
   14b20:	ldr	r1, [pc, #240]	; 14c18 <sigaltstack@plt+0x3938>
   14b24:	mov	r0, #0
   14b28:	bl	11070 <dcgettext@plt>
   14b2c:	ldr	r3, [r5, #4]
   14b30:	ldr	r2, [r5]
   14b34:	ldr	r1, [r5, #32]
   14b38:	str	r1, [sp, #24]
   14b3c:	ldr	r1, [r5, #28]
   14b40:	str	r1, [sp, #20]
   14b44:	ldr	r1, [r5, #24]
   14b48:	str	r1, [sp, #16]
   14b4c:	ldr	r1, [r5, #20]
   14b50:	str	r1, [sp, #12]
   14b54:	ldr	r1, [r5, #16]
   14b58:	str	r1, [sp, #8]
   14b5c:	ldr	r1, [r5, #12]
   14b60:	str	r1, [sp, #4]
   14b64:	ldr	r1, [r5, #8]
   14b68:	str	r1, [sp]
   14b6c:	mov	r1, r0
   14b70:	mov	r0, r4
   14b74:	bl	111c0 <fprintf@plt>
   14b78:	b	14954 <sigaltstack@plt+0x3674>
   14b7c:	mov	r2, #5
   14b80:	ldr	r1, [pc, #148]	; 14c1c <sigaltstack@plt+0x393c>
   14b84:	mov	r0, #0
   14b88:	bl	11070 <dcgettext@plt>
   14b8c:	ldr	r3, [r5, #4]
   14b90:	ldr	r2, [r5]
   14b94:	ldr	r1, [r5, #32]
   14b98:	str	r1, [sp, #24]
   14b9c:	ldr	r1, [r5, #28]
   14ba0:	str	r1, [sp, #20]
   14ba4:	ldr	r1, [r5, #24]
   14ba8:	str	r1, [sp, #16]
   14bac:	ldr	r1, [r5, #20]
   14bb0:	str	r1, [sp, #12]
   14bb4:	ldr	r1, [r5, #16]
   14bb8:	str	r1, [sp, #8]
   14bbc:	ldr	r1, [r5, #12]
   14bc0:	str	r1, [sp, #4]
   14bc4:	ldr	r1, [r5, #8]
   14bc8:	str	r1, [sp]
   14bcc:	mov	r1, r0
   14bd0:	mov	r0, r4
   14bd4:	bl	111c0 <fprintf@plt>
   14bd8:	b	14954 <sigaltstack@plt+0x3674>
   14bdc:	andeq	r8, r1, r8, lsl #31
   14be0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14be4:	andeq	r0, r0, r5, ror #15
   14be8:	muleq	r1, ip, r2
   14bec:	andeq	r8, r1, r0, lsr #31
   14bf0:	andeq	r9, r1, ip, asr #32
   14bf4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   14bf8:	andeq	r9, r1, r0, ror r0
   14bfc:	andeq	r9, r1, r0, lsl #1
   14c00:	muleq	r1, r8, r0
   14c04:	strheq	r9, [r1], -r4
   14c08:	ldrdeq	r9, [r1], -r4
   14c0c:	strdeq	r9, [r1], -r8
   14c10:	andeq	r9, r1, r0, lsr #2
   14c14:	andeq	r9, r1, ip, asr #2
   14c18:	andeq	r9, r1, ip, ror r1
   14c1c:			; <UNDEFINED> instruction: 0x000191b0
   14c20:	push	{r4, r5, lr}
   14c24:	sub	sp, sp, #12
   14c28:	ldr	r5, [sp, #24]
   14c2c:	ldr	ip, [r5]
   14c30:	cmp	ip, #0
   14c34:	beq	14c64 <sigaltstack@plt+0x3984>
   14c38:	mov	lr, r5
   14c3c:	mov	ip, #0
   14c40:	add	ip, ip, #1
   14c44:	ldr	r4, [lr, #4]!
   14c48:	cmp	r4, #0
   14c4c:	bne	14c40 <sigaltstack@plt+0x3960>
   14c50:	str	ip, [sp, #4]
   14c54:	str	r5, [sp]
   14c58:	bl	14868 <sigaltstack@plt+0x3588>
   14c5c:	add	sp, sp, #12
   14c60:	pop	{r4, r5, pc}
   14c64:	mov	ip, #0
   14c68:	b	14c50 <sigaltstack@plt+0x3970>
   14c6c:	push	{r4, r5, lr}
   14c70:	sub	sp, sp, #52	; 0x34
   14c74:	ldr	r4, [sp, #64]	; 0x40
   14c78:	sub	r4, r4, #4
   14c7c:	add	r5, sp, #4
   14c80:	mov	ip, #0
   14c84:	ldr	lr, [r4, #4]!
   14c88:	str	lr, [r5, #4]!
   14c8c:	cmp	lr, #0
   14c90:	beq	14ca0 <sigaltstack@plt+0x39c0>
   14c94:	add	ip, ip, #1
   14c98:	cmp	ip, #10
   14c9c:	bne	14c84 <sigaltstack@plt+0x39a4>
   14ca0:	str	ip, [sp, #4]
   14ca4:	add	ip, sp, #8
   14ca8:	str	ip, [sp]
   14cac:	bl	14868 <sigaltstack@plt+0x3588>
   14cb0:	add	sp, sp, #52	; 0x34
   14cb4:	pop	{r4, r5, pc}
   14cb8:	push	{r3}		; (str r3, [sp, #-4]!)
   14cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   14cc0:	sub	sp, sp, #16
   14cc4:	add	r3, sp, #24
   14cc8:	str	r3, [sp, #12]
   14ccc:	str	r3, [sp]
   14cd0:	ldr	r3, [sp, #20]
   14cd4:	bl	14c6c <sigaltstack@plt+0x398c>
   14cd8:	add	sp, sp, #16
   14cdc:	pop	{lr}		; (ldr lr, [sp], #4)
   14ce0:	add	sp, sp, #4
   14ce4:	bx	lr
   14ce8:	push	{r4, lr}
   14cec:	ldr	r3, [pc, #88]	; 14d4c <sigaltstack@plt+0x3a6c>
   14cf0:	ldr	r1, [r3]
   14cf4:	mov	r0, #10
   14cf8:	bl	11064 <fputc_unlocked@plt>
   14cfc:	mov	r2, #5
   14d00:	ldr	r1, [pc, #72]	; 14d50 <sigaltstack@plt+0x3a70>
   14d04:	mov	r0, #0
   14d08:	bl	11070 <dcgettext@plt>
   14d0c:	ldr	r1, [pc, #64]	; 14d54 <sigaltstack@plt+0x3a74>
   14d10:	bl	10fe0 <printf@plt>
   14d14:	mov	r2, #5
   14d18:	ldr	r1, [pc, #56]	; 14d58 <sigaltstack@plt+0x3a78>
   14d1c:	mov	r0, #0
   14d20:	bl	11070 <dcgettext@plt>
   14d24:	ldr	r2, [pc, #48]	; 14d5c <sigaltstack@plt+0x3a7c>
   14d28:	ldr	r1, [pc, #48]	; 14d60 <sigaltstack@plt+0x3a80>
   14d2c:	bl	10fe0 <printf@plt>
   14d30:	mov	r2, #5
   14d34:	ldr	r1, [pc, #40]	; 14d64 <sigaltstack@plt+0x3a84>
   14d38:	mov	r0, #0
   14d3c:	bl	11070 <dcgettext@plt>
   14d40:	ldr	r1, [pc, #32]	; 14d68 <sigaltstack@plt+0x3a88>
   14d44:	bl	10fe0 <printf@plt>
   14d48:	pop	{r4, pc}
   14d4c:	andeq	sl, r2, r4, ror #2
   14d50:	andeq	r9, r1, ip, ror #3
   14d54:	andeq	r9, r1, r0, lsl #4
   14d58:	andeq	r9, r1, r8, lsl r2
   14d5c:	andeq	r9, r1, ip, lsr #4
   14d60:	andeq	r8, r1, r0, lsr #16
   14d64:	andeq	r9, r1, r4, asr r2
   14d68:	andeq	r9, r1, ip, ror r2
   14d6c:	push	{r4, lr}
   14d70:	bl	15ae8 <sigaltstack@plt+0x4808>
   14d74:	cmp	r0, #0
   14d78:	popne	{r4, pc}
   14d7c:	bl	152f8 <sigaltstack@plt+0x4018>
   14d80:	push	{r4, lr}
   14d84:	bl	14d6c <sigaltstack@plt+0x3a8c>
   14d88:	pop	{r4, pc}
   14d8c:	push	{r4, lr}
   14d90:	bl	15ae8 <sigaltstack@plt+0x4808>
   14d94:	cmp	r0, #0
   14d98:	popne	{r4, pc}
   14d9c:	bl	152f8 <sigaltstack@plt+0x4018>
   14da0:	push	{r4, r5, r6, lr}
   14da4:	mov	r5, r0
   14da8:	mov	r4, r1
   14dac:	bl	15b70 <sigaltstack@plt+0x4890>
   14db0:	cmp	r0, #0
   14db4:	popne	{r4, r5, r6, pc}
   14db8:	adds	r4, r4, #0
   14dbc:	movne	r4, #1
   14dc0:	cmp	r5, #0
   14dc4:	orreq	r4, r4, #1
   14dc8:	cmp	r4, #0
   14dcc:	popeq	{r4, r5, r6, pc}
   14dd0:	bl	152f8 <sigaltstack@plt+0x4018>
   14dd4:	push	{r4, lr}
   14dd8:	cmp	r1, #0
   14ddc:	orreq	r1, r1, #1
   14de0:	bl	15b70 <sigaltstack@plt+0x4890>
   14de4:	cmp	r0, #0
   14de8:	popne	{r4, pc}
   14dec:	bl	152f8 <sigaltstack@plt+0x4018>
   14df0:	push	{r4, r5, r6, lr}
   14df4:	mov	r6, r0
   14df8:	mov	r5, r1
   14dfc:	mov	r4, r2
   14e00:	bl	15bc0 <sigaltstack@plt+0x48e0>
   14e04:	cmp	r0, #0
   14e08:	popne	{r4, r5, r6, pc}
   14e0c:	cmp	r6, #0
   14e10:	beq	14e20 <sigaltstack@plt+0x3b40>
   14e14:	cmp	r5, #0
   14e18:	cmpne	r4, #0
   14e1c:	popeq	{r4, r5, r6, pc}
   14e20:	bl	152f8 <sigaltstack@plt+0x4018>
   14e24:	push	{r4, lr}
   14e28:	mov	r2, r1
   14e2c:	mov	r1, r0
   14e30:	mov	r0, #0
   14e34:	bl	14df0 <sigaltstack@plt+0x3b10>
   14e38:	pop	{r4, pc}
   14e3c:	push	{r4, lr}
   14e40:	bl	14df0 <sigaltstack@plt+0x3b10>
   14e44:	pop	{r4, pc}
   14e48:	push	{r4, lr}
   14e4c:	mov	ip, r1
   14e50:	mov	r3, r2
   14e54:	cmp	r2, #0
   14e58:	cmpne	r1, #0
   14e5c:	moveq	r3, #1
   14e60:	moveq	ip, r3
   14e64:	mov	r2, r3
   14e68:	mov	r1, ip
   14e6c:	bl	15bc0 <sigaltstack@plt+0x48e0>
   14e70:	cmp	r0, #0
   14e74:	popne	{r4, pc}
   14e78:	bl	152f8 <sigaltstack@plt+0x4018>
   14e7c:	push	{r4, r5, r6, r7, r8, lr}
   14e80:	mov	r5, r1
   14e84:	mov	r6, r2
   14e88:	ldr	r4, [r1]
   14e8c:	subs	r7, r0, #0
   14e90:	beq	14eac <sigaltstack@plt+0x3bcc>
   14e94:	lsr	r2, r4, #1
   14e98:	add	r3, r2, #1
   14e9c:	mvn	r3, r3
   14ea0:	cmp	r4, r3
   14ea4:	bls	14ed0 <sigaltstack@plt+0x3bf0>
   14ea8:	bl	152f8 <sigaltstack@plt+0x4018>
   14eac:	cmp	r4, #0
   14eb0:	bne	14ed8 <sigaltstack@plt+0x3bf8>
   14eb4:	mov	r1, r2
   14eb8:	mov	r0, #64	; 0x40
   14ebc:	bl	17f10 <sigaltstack@plt+0x6c30>
   14ec0:	cmp	r0, #0
   14ec4:	movne	r4, r0
   14ec8:	addeq	r4, r0, #1
   14ecc:	b	14ed8 <sigaltstack@plt+0x3bf8>
   14ed0:	add	r4, r4, #1
   14ed4:	add	r4, r4, r2
   14ed8:	mov	r2, r6
   14edc:	mov	r1, r4
   14ee0:	mov	r0, r7
   14ee4:	bl	14df0 <sigaltstack@plt+0x3b10>
   14ee8:	str	r4, [r5]
   14eec:	pop	{r4, r5, r6, r7, r8, pc}
   14ef0:	push	{r4, lr}
   14ef4:	mov	r2, #1
   14ef8:	bl	14e7c <sigaltstack@plt+0x3b9c>
   14efc:	pop	{r4, pc}
   14f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f04:	sub	sp, sp, #12
   14f08:	mov	fp, r0
   14f0c:	mov	sl, r1
   14f10:	mov	r9, r2
   14f14:	mov	r7, r3
   14f18:	ldr	r6, [sp, #48]	; 0x30
   14f1c:	ldr	r5, [r1]
   14f20:	asrs	r4, r5, #1
   14f24:	bmi	15080 <sigaltstack@plt+0x3da0>
   14f28:	cmp	r5, #0
   14f2c:	blt	15094 <sigaltstack@plt+0x3db4>
   14f30:	mvn	r3, #-2147483648	; 0x80000000
   14f34:	sub	r3, r3, r4
   14f38:	cmp	r5, r3
   14f3c:	movle	r3, #0
   14f40:	movgt	r3, #1
   14f44:	cmp	r3, #0
   14f48:	addeq	r4, r4, r5
   14f4c:	mvnne	r4, #-2147483648	; 0x80000000
   14f50:	mvn	r8, r7
   14f54:	lsr	r8, r8, #31
   14f58:	cmp	r7, r4
   14f5c:	movge	r3, #0
   14f60:	andlt	r3, r8, #1
   14f64:	cmp	r3, #0
   14f68:	movne	r4, r7
   14f6c:	cmp	r6, #0
   14f70:	blt	150a8 <sigaltstack@plt+0x3dc8>
   14f74:	cmp	r6, #0
   14f78:	beq	15154 <sigaltstack@plt+0x3e74>
   14f7c:	cmp	r4, #0
   14f80:	blt	15104 <sigaltstack@plt+0x3e24>
   14f84:	mov	r1, r6
   14f88:	mvn	r0, #-2147483648	; 0x80000000
   14f8c:	bl	1811c <sigaltstack@plt+0x6e3c>
   14f90:	cmp	r0, r4
   14f94:	movge	r0, #0
   14f98:	movlt	r0, #1
   14f9c:	cmp	r0, #0
   14fa0:	mvnne	r3, #-2147483648	; 0x80000000
   14fa4:	strne	r3, [sp, #4]
   14fa8:	beq	1513c <sigaltstack@plt+0x3e5c>
   14fac:	mov	r1, r6
   14fb0:	ldr	r0, [sp, #4]
   14fb4:	bl	1811c <sigaltstack@plt+0x6e3c>
   14fb8:	mov	r4, r0
   14fbc:	mov	r1, r6
   14fc0:	ldr	r0, [sp, #4]
   14fc4:	bl	1833c <sigaltstack@plt+0x705c>
   14fc8:	ldr	r3, [sp, #4]
   14fcc:	sub	r1, r3, r1
   14fd0:	cmp	fp, #0
   14fd4:	moveq	r3, #0
   14fd8:	streq	r3, [sl]
   14fdc:	sub	r3, r4, r5
   14fe0:	cmp	r3, r9
   14fe4:	bge	1506c <sigaltstack@plt+0x3d8c>
   14fe8:	cmp	r9, #0
   14fec:	blt	15160 <sigaltstack@plt+0x3e80>
   14ff0:	cmp	r5, #0
   14ff4:	blt	15174 <sigaltstack@plt+0x3e94>
   14ff8:	mvn	r3, #-2147483648	; 0x80000000
   14ffc:	sub	r3, r3, r9
   15000:	cmp	r5, r3
   15004:	movle	r3, #0
   15008:	movgt	r3, #1
   1500c:	cmp	r3, #0
   15010:	bne	1521c <sigaltstack@plt+0x3f3c>
   15014:	add	r5, r5, r9
   15018:	mov	r4, r5
   1501c:	cmp	r7, r5
   15020:	movge	r7, #0
   15024:	andlt	r7, r8, #1
   15028:	cmp	r7, #0
   1502c:	bne	1521c <sigaltstack@plt+0x3f3c>
   15030:	cmp	r6, #0
   15034:	blt	15188 <sigaltstack@plt+0x3ea8>
   15038:	cmp	r6, #0
   1503c:	beq	15068 <sigaltstack@plt+0x3d88>
   15040:	cmp	r5, #0
   15044:	blt	151e4 <sigaltstack@plt+0x3f04>
   15048:	mov	r1, r6
   1504c:	mvn	r0, #-2147483648	; 0x80000000
   15050:	bl	1811c <sigaltstack@plt+0x6e3c>
   15054:	cmp	r5, r0
   15058:	movle	r0, #0
   1505c:	movgt	r0, #1
   15060:	cmp	r0, #0
   15064:	bne	1521c <sigaltstack@plt+0x3f3c>
   15068:	mul	r1, r5, r6
   1506c:	mov	r0, fp
   15070:	bl	14da0 <sigaltstack@plt+0x3ac0>
   15074:	str	r4, [sl]
   15078:	add	sp, sp, #12
   1507c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15080:	rsb	r3, r4, #-2147483648	; 0x80000000
   15084:	cmp	r5, r3
   15088:	movge	r3, #0
   1508c:	movlt	r3, #1
   15090:	b	14f44 <sigaltstack@plt+0x3c64>
   15094:	rsb	r3, r5, #-2147483648	; 0x80000000
   15098:	cmp	r4, r3
   1509c:	movge	r3, #0
   150a0:	movlt	r3, #1
   150a4:	b	14f44 <sigaltstack@plt+0x3c64>
   150a8:	cmp	r4, #0
   150ac:	blt	150d4 <sigaltstack@plt+0x3df4>
   150b0:	cmn	r6, #1
   150b4:	beq	150f0 <sigaltstack@plt+0x3e10>
   150b8:	mov	r1, r6
   150bc:	mov	r0, #-2147483648	; 0x80000000
   150c0:	bl	1811c <sigaltstack@plt+0x6e3c>
   150c4:	cmp	r0, r4
   150c8:	movge	r0, #0
   150cc:	movlt	r0, #1
   150d0:	b	14f9c <sigaltstack@plt+0x3cbc>
   150d4:	mov	r1, r6
   150d8:	mvn	r0, #-2147483648	; 0x80000000
   150dc:	bl	1811c <sigaltstack@plt+0x6e3c>
   150e0:	cmp	r0, r4
   150e4:	movle	r0, #0
   150e8:	movgt	r0, #1
   150ec:	b	14f9c <sigaltstack@plt+0x3cbc>
   150f0:	add	r0, r4, #-2147483648	; 0x80000000
   150f4:	cmp	r0, #0
   150f8:	movle	r0, #0
   150fc:	movgt	r0, #1
   15100:	b	14f9c <sigaltstack@plt+0x3cbc>
   15104:	cmn	r4, #1
   15108:	beq	15128 <sigaltstack@plt+0x3e48>
   1510c:	mov	r1, r4
   15110:	mov	r0, #-2147483648	; 0x80000000
   15114:	bl	1811c <sigaltstack@plt+0x6e3c>
   15118:	cmp	r6, r0
   1511c:	movle	r0, #0
   15120:	movgt	r0, #1
   15124:	b	14f9c <sigaltstack@plt+0x3cbc>
   15128:	add	r0, r6, #-2147483648	; 0x80000000
   1512c:	cmp	r0, #0
   15130:	movle	r0, #0
   15134:	movgt	r0, #1
   15138:	b	14f9c <sigaltstack@plt+0x3cbc>
   1513c:	mul	r1, r6, r4
   15140:	cmp	r1, #63	; 0x3f
   15144:	movle	r3, #64	; 0x40
   15148:	strle	r3, [sp, #4]
   1514c:	bgt	14fd0 <sigaltstack@plt+0x3cf0>
   15150:	b	14fac <sigaltstack@plt+0x3ccc>
   15154:	mov	r3, #64	; 0x40
   15158:	str	r3, [sp, #4]
   1515c:	b	14fac <sigaltstack@plt+0x3ccc>
   15160:	rsb	r3, r9, #-2147483648	; 0x80000000
   15164:	cmp	r5, r3
   15168:	movge	r3, #0
   1516c:	movlt	r3, #1
   15170:	b	1500c <sigaltstack@plt+0x3d2c>
   15174:	rsb	r3, r5, #-2147483648	; 0x80000000
   15178:	cmp	r9, r3
   1517c:	movge	r3, #0
   15180:	movlt	r3, #1
   15184:	b	1500c <sigaltstack@plt+0x3d2c>
   15188:	cmp	r5, #0
   1518c:	blt	151b4 <sigaltstack@plt+0x3ed4>
   15190:	cmn	r6, #1
   15194:	beq	151d0 <sigaltstack@plt+0x3ef0>
   15198:	mov	r1, r6
   1519c:	mov	r0, #-2147483648	; 0x80000000
   151a0:	bl	1811c <sigaltstack@plt+0x6e3c>
   151a4:	cmp	r5, r0
   151a8:	movle	r0, #0
   151ac:	movgt	r0, #1
   151b0:	b	15060 <sigaltstack@plt+0x3d80>
   151b4:	mov	r1, r6
   151b8:	mvn	r0, #-2147483648	; 0x80000000
   151bc:	bl	1811c <sigaltstack@plt+0x6e3c>
   151c0:	cmp	r5, r0
   151c4:	movge	r0, #0
   151c8:	movlt	r0, #1
   151cc:	b	15060 <sigaltstack@plt+0x3d80>
   151d0:	add	r0, r5, #-2147483648	; 0x80000000
   151d4:	cmp	r0, #0
   151d8:	movle	r0, #0
   151dc:	movgt	r0, #1
   151e0:	b	15060 <sigaltstack@plt+0x3d80>
   151e4:	cmn	r5, #1
   151e8:	beq	15208 <sigaltstack@plt+0x3f28>
   151ec:	mov	r1, r5
   151f0:	mov	r0, #-2147483648	; 0x80000000
   151f4:	bl	1811c <sigaltstack@plt+0x6e3c>
   151f8:	cmp	r6, r0
   151fc:	movle	r0, #0
   15200:	movgt	r0, #1
   15204:	b	15060 <sigaltstack@plt+0x3d80>
   15208:	add	r0, r6, #-2147483648	; 0x80000000
   1520c:	cmp	r0, #0
   15210:	movle	r0, #0
   15214:	movgt	r0, #1
   15218:	b	15060 <sigaltstack@plt+0x3d80>
   1521c:	bl	152f8 <sigaltstack@plt+0x4018>
   15220:	push	{r4, lr}
   15224:	bl	15a40 <sigaltstack@plt+0x4760>
   15228:	cmp	r0, #0
   1522c:	popne	{r4, pc}
   15230:	bl	152f8 <sigaltstack@plt+0x4018>
   15234:	push	{r4, lr}
   15238:	mov	r1, #1
   1523c:	bl	15220 <sigaltstack@plt+0x3f40>
   15240:	pop	{r4, pc}
   15244:	push	{r4, lr}
   15248:	bl	15a40 <sigaltstack@plt+0x4760>
   1524c:	cmp	r0, #0
   15250:	popne	{r4, pc}
   15254:	bl	152f8 <sigaltstack@plt+0x4018>
   15258:	push	{r4, lr}
   1525c:	mov	r1, #1
   15260:	bl	15244 <sigaltstack@plt+0x3f64>
   15264:	pop	{r4, pc}
   15268:	push	{r4, r5, r6, lr}
   1526c:	mov	r5, r0
   15270:	mov	r4, r1
   15274:	mov	r0, r1
   15278:	bl	14d6c <sigaltstack@plt+0x3a8c>
   1527c:	mov	r2, r4
   15280:	mov	r1, r5
   15284:	bl	11028 <memcpy@plt>
   15288:	pop	{r4, r5, r6, pc}
   1528c:	push	{r4, r5, r6, lr}
   15290:	mov	r5, r0
   15294:	mov	r4, r1
   15298:	mov	r0, r1
   1529c:	bl	14d8c <sigaltstack@plt+0x3aac>
   152a0:	mov	r2, r4
   152a4:	mov	r1, r5
   152a8:	bl	11028 <memcpy@plt>
   152ac:	pop	{r4, r5, r6, pc}
   152b0:	push	{r4, r5, r6, lr}
   152b4:	mov	r5, r0
   152b8:	mov	r4, r1
   152bc:	add	r0, r1, #1
   152c0:	bl	14d8c <sigaltstack@plt+0x3aac>
   152c4:	mov	r2, #0
   152c8:	strb	r2, [r0, r4]
   152cc:	mov	r2, r4
   152d0:	mov	r1, r5
   152d4:	bl	11028 <memcpy@plt>
   152d8:	pop	{r4, r5, r6, pc}
   152dc:	push	{r4, lr}
   152e0:	mov	r4, r0
   152e4:	bl	111a8 <strlen@plt>
   152e8:	add	r1, r0, #1
   152ec:	mov	r0, r4
   152f0:	bl	15268 <sigaltstack@plt+0x3f88>
   152f4:	pop	{r4, pc}
   152f8:	push	{r4, lr}
   152fc:	ldr	r3, [pc, #40]	; 1532c <sigaltstack@plt+0x404c>
   15300:	ldr	r4, [r3]
   15304:	mov	r2, #5
   15308:	ldr	r1, [pc, #32]	; 15330 <sigaltstack@plt+0x4050>
   1530c:	mov	r0, #0
   15310:	bl	11070 <dcgettext@plt>
   15314:	mov	r3, r0
   15318:	ldr	r2, [pc, #20]	; 15334 <sigaltstack@plt+0x4054>
   1531c:	mov	r1, #0
   15320:	mov	r0, r4
   15324:	bl	1110c <error@plt>
   15328:	bl	112bc <abort@plt>
   1532c:	andeq	sl, r2, r4, asr #2
   15330:	andeq	r9, r1, ip, asr #5
   15334:	andeq	r8, r1, r8, ror #14
   15338:	push	{r4, r5, r6, lr}
   1533c:	bl	174d4 <sigaltstack@plt+0x61f4>
   15340:	subs	r4, r0, #0
   15344:	popeq	{r4, r5, r6, pc}
   15348:	ldr	r3, [pc, #36]	; 15374 <sigaltstack@plt+0x4094>
   1534c:	ldr	r5, [r3]
   15350:	mov	r2, #5
   15354:	ldr	r1, [pc, #28]	; 15378 <sigaltstack@plt+0x4098>
   15358:	mov	r0, #0
   1535c:	bl	11070 <dcgettext@plt>
   15360:	mov	r2, r0
   15364:	mov	r1, r4
   15368:	mov	r0, r5
   1536c:	bl	1110c <error@plt>
   15370:	pop	{r4, r5, r6, pc}
   15374:	andeq	sl, r2, r4, asr #2
   15378:	andeq	r9, r1, r0, ror #5
   1537c:	push	{r4, lr}
   15380:	sub	sp, sp, #8
   15384:	ldr	ip, [sp, #16]
   15388:	str	ip, [sp]
   1538c:	bl	17578 <sigaltstack@plt+0x6298>
   15390:	subs	r4, r0, #0
   15394:	blt	153a4 <sigaltstack@plt+0x40c4>
   15398:	mov	r0, r4
   1539c:	add	sp, sp, #8
   153a0:	pop	{r4, pc}
   153a4:	bl	111d8 <__errno_location@plt>
   153a8:	ldr	r3, [r0]
   153ac:	cmp	r3, #12
   153b0:	bne	15398 <sigaltstack@plt+0x40b8>
   153b4:	bl	152f8 <sigaltstack@plt+0x4018>
   153b8:	push	{r4, lr}
   153bc:	bl	177c0 <sigaltstack@plt+0x64e0>
   153c0:	subs	r4, r0, #0
   153c4:	beq	153d0 <sigaltstack@plt+0x40f0>
   153c8:	mov	r0, r4
   153cc:	pop	{r4, pc}
   153d0:	bl	111d8 <__errno_location@plt>
   153d4:	ldr	r3, [r0]
   153d8:	cmp	r3, #12
   153dc:	bne	153c8 <sigaltstack@plt+0x40e8>
   153e0:	bl	152f8 <sigaltstack@plt+0x4018>
   153e4:	push	{r4, lr}
   153e8:	bl	179b0 <sigaltstack@plt+0x66d0>
   153ec:	subs	r4, r0, #0
   153f0:	beq	153fc <sigaltstack@plt+0x411c>
   153f4:	mov	r0, r4
   153f8:	pop	{r4, pc}
   153fc:	bl	111d8 <__errno_location@plt>
   15400:	ldr	r3, [r0]
   15404:	cmp	r3, #12
   15408:	bne	153f4 <sigaltstack@plt+0x4114>
   1540c:	bl	152f8 <sigaltstack@plt+0x4018>
   15410:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15414:	mov	r6, r0
   15418:	mov	r7, r1
   1541c:	ldrd	r4, [r0]
   15420:	mov	r8, r1
   15424:	asr	r9, r1, #31
   15428:	mov	r2, r1
   1542c:	mov	r3, r9
   15430:	mov	r0, #0
   15434:	mov	r1, #-2147483648	; 0x80000000
   15438:	bl	1835c <sigaltstack@plt+0x707c>
   1543c:	cmp	r4, r0
   15440:	sbcs	r3, r5, r1
   15444:	blt	15484 <sigaltstack@plt+0x41a4>
   15448:	mov	r2, r7
   1544c:	mov	r3, r9
   15450:	mvn	r0, #0
   15454:	mvn	r1, #-2147483648	; 0x80000000
   15458:	bl	1835c <sigaltstack@plt+0x707c>
   1545c:	cmp	r0, r4
   15460:	sbcs	r3, r1, r5
   15464:	blt	15498 <sigaltstack@plt+0x41b8>
   15468:	mul	r3, r4, r9
   1546c:	mla	r3, r7, r5, r3
   15470:	umull	r4, r5, r4, r7
   15474:	add	r5, r3, r5
   15478:	strd	r4, [r6]
   1547c:	mov	r0, #0
   15480:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15484:	mov	r2, #0
   15488:	mov	r3, #-2147483648	; 0x80000000
   1548c:	strd	r2, [r6]
   15490:	mov	r0, #1
   15494:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15498:	mvn	r2, #0
   1549c:	mvn	r3, #-2147483648	; 0x80000000
   154a0:	strd	r2, [r6]
   154a4:	mov	r0, #1
   154a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154ac:	push	{r4, r5, r6, r7, r8, lr}
   154b0:	subs	r4, r2, #0
   154b4:	beq	154e4 <sigaltstack@plt+0x4204>
   154b8:	mov	r7, r1
   154bc:	mov	r6, r0
   154c0:	mov	r5, #0
   154c4:	mov	r1, r7
   154c8:	mov	r0, r6
   154cc:	bl	15410 <sigaltstack@plt+0x4130>
   154d0:	orr	r5, r5, r0
   154d4:	subs	r4, r4, #1
   154d8:	bne	154c4 <sigaltstack@plt+0x41e4>
   154dc:	mov	r0, r5
   154e0:	pop	{r4, r5, r6, r7, r8, pc}
   154e4:	mov	r5, #0
   154e8:	b	154dc <sigaltstack@plt+0x41fc>
   154ec:	push	{r4, r5, r6, r7, r8, lr}
   154f0:	sub	sp, sp, #16
   154f4:	cmp	r2, #36	; 0x24
   154f8:	bhi	15564 <sigaltstack@plt+0x4284>
   154fc:	mov	r6, r0
   15500:	mov	r4, r1
   15504:	mov	r5, r2
   15508:	mov	r8, r3
   1550c:	cmp	r1, #0
   15510:	addeq	r4, sp, #12
   15514:	bl	111d8 <__errno_location@plt>
   15518:	mov	r7, r0
   1551c:	mov	r3, #0
   15520:	str	r3, [r0]
   15524:	mov	r2, r5
   15528:	mov	r1, r4
   1552c:	mov	r0, r6
   15530:	bl	11280 <__strtoll_internal@plt>
   15534:	strd	r0, [sp]
   15538:	ldr	r5, [r4]
   1553c:	cmp	r6, r5
   15540:	beq	15578 <sigaltstack@plt+0x4298>
   15544:	ldr	r3, [r7]
   15548:	cmp	r3, #0
   1554c:	beq	155c0 <sigaltstack@plt+0x42e0>
   15550:	cmp	r3, #34	; 0x22
   15554:	moveq	r6, #1
   15558:	beq	155c4 <sigaltstack@plt+0x42e4>
   1555c:	mov	r6, #4
   15560:	b	15918 <sigaltstack@plt+0x4638>
   15564:	ldr	r3, [pc, #952]	; 15924 <sigaltstack@plt+0x4644>
   15568:	mov	r2, #84	; 0x54
   1556c:	ldr	r1, [pc, #948]	; 15928 <sigaltstack@plt+0x4648>
   15570:	ldr	r0, [pc, #948]	; 1592c <sigaltstack@plt+0x464c>
   15574:	bl	112d4 <__assert_fail@plt>
   15578:	ldr	r3, [sp, #40]	; 0x28
   1557c:	cmp	r3, #0
   15580:	moveq	r6, #4
   15584:	beq	15918 <sigaltstack@plt+0x4638>
   15588:	ldrb	r1, [r5]
   1558c:	cmp	r1, #0
   15590:	moveq	r6, #4
   15594:	beq	15918 <sigaltstack@plt+0x4638>
   15598:	mov	r0, r3
   1559c:	bl	111b4 <strchr@plt>
   155a0:	cmp	r0, #0
   155a4:	moveq	r6, #4
   155a8:	beq	15918 <sigaltstack@plt+0x4638>
   155ac:	mov	r2, #1
   155b0:	mov	r3, #0
   155b4:	strd	r2, [sp]
   155b8:	mov	r6, #0
   155bc:	b	155d0 <sigaltstack@plt+0x42f0>
   155c0:	mov	r6, #0
   155c4:	ldr	r3, [sp, #40]	; 0x28
   155c8:	cmp	r3, #0
   155cc:	beq	156c0 <sigaltstack@plt+0x43e0>
   155d0:	ldrb	r7, [r5]
   155d4:	cmp	r7, #0
   155d8:	beq	15910 <sigaltstack@plt+0x4630>
   155dc:	mov	r1, r7
   155e0:	ldr	r0, [sp, #40]	; 0x28
   155e4:	bl	111b4 <strchr@plt>
   155e8:	cmp	r0, #0
   155ec:	beq	156c8 <sigaltstack@plt+0x43e8>
   155f0:	sub	r3, r7, #69	; 0x45
   155f4:	cmp	r3, #47	; 0x2f
   155f8:	ldrls	pc, [pc, r3, lsl #2]
   155fc:	b	15734 <sigaltstack@plt+0x4454>
   15600:	ldrdeq	r5, [r1], -r8
   15604:	andeq	r5, r1, r4, lsr r7
   15608:	ldrdeq	r5, [r1], -r8
   1560c:	andeq	r5, r1, r4, lsr r7
   15610:	andeq	r5, r1, r4, lsr r7
   15614:	andeq	r5, r1, r4, lsr r7
   15618:	ldrdeq	r5, [r1], -r8
   1561c:	andeq	r5, r1, r4, lsr r7
   15620:	ldrdeq	r5, [r1], -r8
   15624:	andeq	r5, r1, r4, lsr r7
   15628:	andeq	r5, r1, r4, lsr r7
   1562c:	ldrdeq	r5, [r1], -r8
   15630:	andeq	r5, r1, r4, lsr r7
   15634:	andeq	r5, r1, r4, lsr r7
   15638:	andeq	r5, r1, r4, lsr r7
   1563c:	ldrdeq	r5, [r1], -r8
   15640:	andeq	r5, r1, r4, lsr r7
   15644:	andeq	r5, r1, r4, lsr r7
   15648:	andeq	r5, r1, r4, lsr r7
   1564c:	andeq	r5, r1, r4, lsr r7
   15650:	ldrdeq	r5, [r1], -r8
   15654:	ldrdeq	r5, [r1], -r8
   15658:	andeq	r5, r1, r4, lsr r7
   1565c:	andeq	r5, r1, r4, lsr r7
   15660:	andeq	r5, r1, r4, lsr r7
   15664:	andeq	r5, r1, r4, lsr r7
   15668:	andeq	r5, r1, r4, lsr r7
   1566c:	andeq	r5, r1, r4, lsr r7
   15670:	andeq	r5, r1, r4, lsr r7
   15674:	andeq	r5, r1, r4, lsr r7
   15678:	andeq	r5, r1, r4, lsr r7
   1567c:	andeq	r5, r1, r4, lsr r7
   15680:	andeq	r5, r1, r4, lsr r7
   15684:	andeq	r5, r1, r4, lsr r7
   15688:	ldrdeq	r5, [r1], -r8
   1568c:	andeq	r5, r1, r4, lsr r7
   15690:	andeq	r5, r1, r4, lsr r7
   15694:	andeq	r5, r1, r4, lsr r7
   15698:	ldrdeq	r5, [r1], -r8
   1569c:	andeq	r5, r1, r4, lsr r7
   156a0:	ldrdeq	r5, [r1], -r8
   156a4:	andeq	r5, r1, r4, lsr r7
   156a8:	andeq	r5, r1, r4, lsr r7
   156ac:	andeq	r5, r1, r4, lsr r7
   156b0:	andeq	r5, r1, r4, lsr r7
   156b4:	andeq	r5, r1, r4, lsr r7
   156b8:	andeq	r5, r1, r4, lsr r7
   156bc:	ldrdeq	r5, [r1], -r8
   156c0:	strd	r0, [r8]
   156c4:	b	15918 <sigaltstack@plt+0x4638>
   156c8:	ldrd	r2, [sp]
   156cc:	strd	r2, [r8]
   156d0:	orr	r6, r6, #2
   156d4:	b	15918 <sigaltstack@plt+0x4638>
   156d8:	mov	r1, #48	; 0x30
   156dc:	ldr	r0, [sp, #40]	; 0x28
   156e0:	bl	111b4 <strchr@plt>
   156e4:	cmp	r0, #0
   156e8:	beq	15824 <sigaltstack@plt+0x4544>
   156ec:	ldrb	r3, [r5, #1]
   156f0:	cmp	r3, #68	; 0x44
   156f4:	beq	15710 <sigaltstack@plt+0x4430>
   156f8:	cmp	r3, #105	; 0x69
   156fc:	beq	1571c <sigaltstack@plt+0x443c>
   15700:	cmp	r3, #66	; 0x42
   15704:	movne	r5, #1
   15708:	movne	r1, #1024	; 0x400
   1570c:	bne	1573c <sigaltstack@plt+0x445c>
   15710:	mov	r5, #2
   15714:	mov	r1, #1000	; 0x3e8
   15718:	b	1573c <sigaltstack@plt+0x445c>
   1571c:	ldrb	r5, [r5, #2]
   15720:	cmp	r5, #66	; 0x42
   15724:	movne	r5, #1
   15728:	moveq	r5, #3
   1572c:	mov	r1, #1024	; 0x400
   15730:	b	1573c <sigaltstack@plt+0x445c>
   15734:	mov	r5, #1
   15738:	mov	r1, #1024	; 0x400
   1573c:	sub	r7, r7, #66	; 0x42
   15740:	cmp	r7, #53	; 0x35
   15744:	ldrls	pc, [pc, r7, lsl #2]
   15748:	b	158e0 <sigaltstack@plt+0x4600>
   1574c:	andeq	r5, r1, r0, asr #16
   15750:	andeq	r5, r1, r0, ror #17
   15754:	andeq	r5, r1, r0, ror #17
   15758:	andeq	r5, r1, r0, asr r8
   1575c:	andeq	r5, r1, r0, ror #17
   15760:	andeq	r5, r1, r0, ror #16
   15764:	andeq	r5, r1, r0, ror #17
   15768:	andeq	r5, r1, r0, ror #17
   1576c:	andeq	r5, r1, r0, ror #17
   15770:	andeq	r5, r1, r0, ror r8
   15774:	andeq	r5, r1, r0, ror #17
   15778:	andeq	r5, r1, r0, lsl #17
   1577c:	andeq	r5, r1, r0, ror #17
   15780:	andeq	r5, r1, r0, ror #17
   15784:	muleq	r1, r0, r8
   15788:	andeq	r5, r1, r0, ror #17
   1578c:	andeq	r5, r1, r0, ror #17
   15790:	andeq	r5, r1, r0, ror #17
   15794:	andeq	r5, r1, r0, lsr #17
   15798:	andeq	r5, r1, r0, ror #17
   1579c:	andeq	r5, r1, r0, ror #17
   157a0:	andeq	r5, r1, r0, ror #17
   157a4:	andeq	r5, r1, r0, ror #17
   157a8:	andeq	r5, r1, r0, asr #17
   157ac:	ldrdeq	r5, [r1], -r0
   157b0:	andeq	r5, r1, r0, ror #17
   157b4:	andeq	r5, r1, r0, ror #17
   157b8:	andeq	r5, r1, r0, ror #17
   157bc:	andeq	r5, r1, r0, ror #17
   157c0:	andeq	r5, r1, r0, ror #17
   157c4:	andeq	r5, r1, r0, ror #17
   157c8:	andeq	r5, r1, r0, ror #17
   157cc:	andeq	r5, r1, r0, lsr r8
   157d0:	strdeq	r5, [r1], -r0
   157d4:	andeq	r5, r1, r0, ror #17
   157d8:	andeq	r5, r1, r0, ror #17
   157dc:	andeq	r5, r1, r0, ror #17
   157e0:	andeq	r5, r1, r0, ror #16
   157e4:	andeq	r5, r1, r0, ror #17
   157e8:	andeq	r5, r1, r0, ror #17
   157ec:	andeq	r5, r1, r0, ror #17
   157f0:	andeq	r5, r1, r0, ror r8
   157f4:	andeq	r5, r1, r0, ror #17
   157f8:	andeq	r5, r1, r0, lsl #17
   157fc:	andeq	r5, r1, r0, ror #17
   15800:	andeq	r5, r1, r0, ror #17
   15804:	andeq	r5, r1, r0, ror #17
   15808:	andeq	r5, r1, r0, ror #17
   1580c:	andeq	r5, r1, r0, ror #17
   15810:	andeq	r5, r1, r0, ror #17
   15814:	andeq	r5, r1, r0, lsr #17
   15818:	andeq	r5, r1, r0, ror #17
   1581c:	andeq	r5, r1, r0, ror #17
   15820:			; <UNDEFINED> instruction: 0x000158b0
   15824:	mov	r5, #1
   15828:	mov	r1, #1024	; 0x400
   1582c:	b	1573c <sigaltstack@plt+0x445c>
   15830:	mov	r1, #512	; 0x200
   15834:	mov	r0, sp
   15838:	bl	15410 <sigaltstack@plt+0x4130>
   1583c:	b	158f4 <sigaltstack@plt+0x4614>
   15840:	mov	r1, #1024	; 0x400
   15844:	mov	r0, sp
   15848:	bl	15410 <sigaltstack@plt+0x4130>
   1584c:	b	158f4 <sigaltstack@plt+0x4614>
   15850:	mov	r2, #6
   15854:	mov	r0, sp
   15858:	bl	154ac <sigaltstack@plt+0x41cc>
   1585c:	b	158f4 <sigaltstack@plt+0x4614>
   15860:	mov	r2, #3
   15864:	mov	r0, sp
   15868:	bl	154ac <sigaltstack@plt+0x41cc>
   1586c:	b	158f4 <sigaltstack@plt+0x4614>
   15870:	mov	r2, #1
   15874:	mov	r0, sp
   15878:	bl	154ac <sigaltstack@plt+0x41cc>
   1587c:	b	158f4 <sigaltstack@plt+0x4614>
   15880:	mov	r2, #2
   15884:	mov	r0, sp
   15888:	bl	154ac <sigaltstack@plt+0x41cc>
   1588c:	b	158f4 <sigaltstack@plt+0x4614>
   15890:	mov	r2, #5
   15894:	mov	r0, sp
   15898:	bl	154ac <sigaltstack@plt+0x41cc>
   1589c:	b	158f4 <sigaltstack@plt+0x4614>
   158a0:	mov	r2, #4
   158a4:	mov	r0, sp
   158a8:	bl	154ac <sigaltstack@plt+0x41cc>
   158ac:	b	158f4 <sigaltstack@plt+0x4614>
   158b0:	mov	r1, #2
   158b4:	mov	r0, sp
   158b8:	bl	15410 <sigaltstack@plt+0x4130>
   158bc:	b	158f4 <sigaltstack@plt+0x4614>
   158c0:	mov	r2, #8
   158c4:	mov	r0, sp
   158c8:	bl	154ac <sigaltstack@plt+0x41cc>
   158cc:	b	158f4 <sigaltstack@plt+0x4614>
   158d0:	mov	r2, #7
   158d4:	mov	r0, sp
   158d8:	bl	154ac <sigaltstack@plt+0x41cc>
   158dc:	b	158f4 <sigaltstack@plt+0x4614>
   158e0:	ldrd	r2, [sp]
   158e4:	strd	r2, [r8]
   158e8:	orr	r6, r6, #2
   158ec:	b	15918 <sigaltstack@plt+0x4638>
   158f0:	mov	r0, #0
   158f4:	orr	r6, r6, r0
   158f8:	ldr	r3, [r4]
   158fc:	add	r2, r3, r5
   15900:	str	r2, [r4]
   15904:	ldrb	r3, [r3, r5]
   15908:	cmp	r3, #0
   1590c:	orrne	r6, r6, #2
   15910:	ldrd	r2, [sp]
   15914:	strd	r2, [r8]
   15918:	mov	r0, r6
   1591c:	add	sp, sp, #16
   15920:	pop	{r4, r5, r6, r7, r8, pc}
   15924:	strdeq	r9, [r1], -ip
   15928:	andeq	r9, r1, r8, lsl #6
   1592c:	andeq	r9, r1, r4, lsl r3
   15930:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15934:	mov	r8, r0
   15938:	mov	r9, r1
   1593c:	add	r7, r1, r2
   15940:	mov	r5, r1
   15944:	mvn	r6, #-2147483648	; 0x80000000
   15948:	b	15954 <sigaltstack@plt+0x4674>
   1594c:	cmp	r5, r7
   15950:	bcs	159a0 <sigaltstack@plt+0x46c0>
   15954:	sub	r4, r7, r5
   15958:	cmp	r4, r6
   1595c:	movcs	r4, r6
   15960:	mov	r2, r4
   15964:	mov	r1, r5
   15968:	mov	r0, r8
   1596c:	bl	10fec <read@plt>
   15970:	cmp	r0, #0
   15974:	addgt	r5, r5, r0
   15978:	bgt	1594c <sigaltstack@plt+0x466c>
   1597c:	beq	159a0 <sigaltstack@plt+0x46c0>
   15980:	bl	111d8 <__errno_location@plt>
   15984:	ldr	r3, [r0]
   15988:	cmp	r3, #22
   1598c:	bne	159a8 <sigaltstack@plt+0x46c8>
   15990:	cmp	r4, #0
   15994:	blt	1594c <sigaltstack@plt+0x466c>
   15998:	mvn	r0, #0
   1599c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   159a0:	sub	r0, r5, r9
   159a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   159a8:	mvn	r0, #0
   159ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   159b0:	push	{r4, r5, r6, r7, r8, lr}
   159b4:	subs	r8, r0, #0
   159b8:	bne	159d0 <sigaltstack@plt+0x46f0>
   159bc:	cmp	r1, #0
   159c0:	movne	r4, r1
   159c4:	moveq	r4, #8192	; 0x2000
   159c8:	mov	r0, r4
   159cc:	pop	{r4, r5, r6, r7, r8, pc}
   159d0:	cmp	r1, #0
   159d4:	moveq	r4, r8
   159d8:	beq	159c8 <sigaltstack@plt+0x46e8>
   159dc:	mov	r7, r2
   159e0:	mov	r5, r1
   159e4:	mov	r6, r1
   159e8:	mov	r0, r8
   159ec:	mov	r1, r6
   159f0:	bl	180fc <sigaltstack@plt+0x6e1c>
   159f4:	mov	r0, r6
   159f8:	cmp	r1, #0
   159fc:	bne	15a38 <sigaltstack@plt+0x4758>
   15a00:	mov	r1, r6
   15a04:	mov	r0, r8
   15a08:	bl	17f10 <sigaltstack@plt+0x6c30>
   15a0c:	mov	r6, r0
   15a10:	mul	r4, r0, r5
   15a14:	cmp	r4, r7
   15a18:	movhi	r4, r8
   15a1c:	bhi	159c8 <sigaltstack@plt+0x46e8>
   15a20:	mov	r1, r5
   15a24:	mov	r0, r4
   15a28:	bl	17f10 <sigaltstack@plt+0x6c30>
   15a2c:	cmp	r6, r0
   15a30:	movne	r4, r8
   15a34:	b	159c8 <sigaltstack@plt+0x46e8>
   15a38:	mov	r6, r1
   15a3c:	b	159ec <sigaltstack@plt+0x470c>
   15a40:	push	{r4, lr}
   15a44:	mov	r2, r0
   15a48:	mov	r3, r1
   15a4c:	cmp	r1, #0
   15a50:	cmpne	r0, #0
   15a54:	moveq	r3, #1
   15a58:	moveq	r2, r3
   15a5c:	umull	r0, r1, r2, r3
   15a60:	cmp	r0, #0
   15a64:	cmpge	r1, #0
   15a68:	bne	15a7c <sigaltstack@plt+0x479c>
   15a6c:	mov	r1, r3
   15a70:	mov	r0, r2
   15a74:	bl	10f98 <calloc@plt>
   15a78:	pop	{r4, pc}
   15a7c:	bl	111d8 <__errno_location@plt>
   15a80:	mov	r3, #12
   15a84:	str	r3, [r0]
   15a88:	mov	r0, #0
   15a8c:	pop	{r4, pc}
   15a90:	push	{r4, r5, lr}
   15a94:	sub	sp, sp, #12
   15a98:	mov	r5, r0
   15a9c:	bl	111d8 <__errno_location@plt>
   15aa0:	mov	r4, r0
   15aa4:	ldr	r3, [r0]
   15aa8:	str	r3, [sp]
   15aac:	str	r3, [sp, #4]
   15ab0:	mov	r3, #0
   15ab4:	str	r3, [r0]
   15ab8:	mov	r0, r5
   15abc:	bl	11010 <free@plt>
   15ac0:	ldr	r3, [r4]
   15ac4:	cmp	r3, #0
   15ac8:	moveq	r3, #4
   15acc:	movne	r3, #0
   15ad0:	add	r2, sp, #8
   15ad4:	add	r3, r2, r3
   15ad8:	ldr	r3, [r3, #-8]
   15adc:	str	r3, [r4]
   15ae0:	add	sp, sp, #12
   15ae4:	pop	{r4, r5, pc}
   15ae8:	push	{r4, lr}
   15aec:	cmp	r0, #0
   15af0:	moveq	r0, #1
   15af4:	cmp	r0, #0
   15af8:	blt	15b04 <sigaltstack@plt+0x4824>
   15afc:	bl	11130 <malloc@plt>
   15b00:	pop	{r4, pc}
   15b04:	bl	111d8 <__errno_location@plt>
   15b08:	mov	r3, #12
   15b0c:	str	r3, [r0]
   15b10:	mov	r0, #0
   15b14:	pop	{r4, pc}
   15b18:	push	{r4, r5, r6, r7, lr}
   15b1c:	sub	sp, sp, #12
   15b20:	mov	r7, r1
   15b24:	mov	r5, r2
   15b28:	subs	r6, r0, #0
   15b2c:	addeq	r6, sp, #4
   15b30:	mov	r0, r6
   15b34:	bl	11100 <mbrtowc@plt>
   15b38:	mov	r4, r0
   15b3c:	cmp	r5, #0
   15b40:	cmnne	r0, #3
   15b44:	bhi	15b54 <sigaltstack@plt+0x4874>
   15b48:	mov	r0, r4
   15b4c:	add	sp, sp, #12
   15b50:	pop	{r4, r5, r6, r7, pc}
   15b54:	mov	r0, #0
   15b58:	bl	12a50 <sigaltstack@plt+0x1770>
   15b5c:	cmp	r0, #0
   15b60:	ldrbeq	r3, [r7]
   15b64:	streq	r3, [r6]
   15b68:	moveq	r4, #1
   15b6c:	b	15b48 <sigaltstack@plt+0x4868>
   15b70:	push	{r4, lr}
   15b74:	cmp	r0, #0
   15b78:	beq	15b94 <sigaltstack@plt+0x48b4>
   15b7c:	cmp	r1, #0
   15b80:	beq	15ba0 <sigaltstack@plt+0x48c0>
   15b84:	cmp	r1, #0
   15b88:	blt	15bac <sigaltstack@plt+0x48cc>
   15b8c:	bl	11088 <realloc@plt>
   15b90:	pop	{r4, pc}
   15b94:	mov	r0, r1
   15b98:	bl	15ae8 <sigaltstack@plt+0x4808>
   15b9c:	pop	{r4, pc}
   15ba0:	bl	15a90 <sigaltstack@plt+0x47b0>
   15ba4:	mov	r0, #0
   15ba8:	pop	{r4, pc}
   15bac:	bl	111d8 <__errno_location@plt>
   15bb0:	mov	r3, #12
   15bb4:	str	r3, [r0]
   15bb8:	mov	r0, #0
   15bbc:	pop	{r4, pc}
   15bc0:	push	{r4, r5, r6, lr}
   15bc4:	mov	r6, r0
   15bc8:	mov	r5, r1
   15bcc:	subs	r4, r2, #0
   15bd0:	beq	15bfc <sigaltstack@plt+0x491c>
   15bd4:	mov	r1, r4
   15bd8:	mvn	r0, #0
   15bdc:	bl	17f10 <sigaltstack@plt+0x6c30>
   15be0:	cmp	r0, r5
   15be4:	bcs	15bfc <sigaltstack@plt+0x491c>
   15be8:	bl	111d8 <__errno_location@plt>
   15bec:	mov	r3, #12
   15bf0:	str	r3, [r0]
   15bf4:	mov	r0, #0
   15bf8:	pop	{r4, r5, r6, pc}
   15bfc:	mul	r1, r5, r4
   15c00:	mov	r0, r6
   15c04:	bl	15b70 <sigaltstack@plt+0x4890>
   15c08:	pop	{r4, r5, r6, pc}
   15c0c:	cmp	r0, r1
   15c10:	beq	15c68 <sigaltstack@plt+0x4988>
   15c14:	push	{lr}		; (str lr, [sp, #-4]!)
   15c18:	sub	ip, r0, #1
   15c1c:	sub	r1, r1, #1
   15c20:	ldrb	r3, [ip, #1]!
   15c24:	sub	r2, r3, #65	; 0x41
   15c28:	cmp	r2, #25
   15c2c:	addls	r3, r3, #32
   15c30:	uxtb	r2, r3
   15c34:	ldrb	r0, [r1, #1]!
   15c38:	sub	lr, r0, #65	; 0x41
   15c3c:	cmp	lr, #25
   15c40:	addls	r0, r0, #32
   15c44:	uxtb	lr, r0
   15c48:	cmp	r2, #0
   15c4c:	beq	15c58 <sigaltstack@plt+0x4978>
   15c50:	cmp	r2, lr
   15c54:	beq	15c20 <sigaltstack@plt+0x4940>
   15c58:	uxtb	r3, r3
   15c5c:	uxtb	r0, r0
   15c60:	sub	r0, r3, r0
   15c64:	pop	{pc}		; (ldr pc, [sp], #4)
   15c68:	mov	r0, #0
   15c6c:	bx	lr
   15c70:	push	{r4, lr}
   15c74:	mov	r0, #14
   15c78:	bl	11268 <nl_langinfo@plt>
   15c7c:	cmp	r0, #0
   15c80:	beq	15c98 <sigaltstack@plt+0x49b8>
   15c84:	ldrb	r2, [r0]
   15c88:	ldr	r3, [pc, #16]	; 15ca0 <sigaltstack@plt+0x49c0>
   15c8c:	cmp	r2, #0
   15c90:	moveq	r0, r3
   15c94:	pop	{r4, pc}
   15c98:	ldr	r0, [pc]	; 15ca0 <sigaltstack@plt+0x49c0>
   15c9c:	pop	{r4, pc}
   15ca0:	andeq	r9, r1, ip, lsr r3
   15ca4:	push	{r4, lr}
   15ca8:	mov	r4, r0
   15cac:	bl	10ff8 <wcwidth@plt>
   15cb0:	cmp	r0, #0
   15cb4:	popge	{r4, pc}
   15cb8:	mov	r0, r4
   15cbc:	bl	110a0 <iswcntrl@plt>
   15cc0:	clz	r0, r0
   15cc4:	lsr	r0, r0, #5
   15cc8:	pop	{r4, pc}
   15ccc:	push	{r4, r5, r6, lr}
   15cd0:	mov	r5, r0
   15cd4:	mov	r4, r1
   15cd8:	mov	r3, r1
   15cdc:	ldr	r1, [r3], #16
   15ce0:	cmp	r1, r3
   15ce4:	strne	r1, [r0]
   15ce8:	beq	15d0c <sigaltstack@plt+0x4a2c>
   15cec:	ldr	r3, [r4, #4]
   15cf0:	str	r3, [r5, #4]
   15cf4:	ldrb	r3, [r4, #8]
   15cf8:	strb	r3, [r5, #8]
   15cfc:	cmp	r3, #0
   15d00:	ldrne	r3, [r4, #12]
   15d04:	strne	r3, [r5, #12]
   15d08:	pop	{r4, r5, r6, pc}
   15d0c:	add	r6, r0, #16
   15d10:	ldr	r2, [r4, #4]
   15d14:	mov	r0, r6
   15d18:	bl	11028 <memcpy@plt>
   15d1c:	str	r6, [r5]
   15d20:	b	15cec <sigaltstack@plt+0x4a0c>
   15d24:	lsr	r2, r0, #5
   15d28:	and	r0, r0, #31
   15d2c:	ldr	r3, [pc, #12]	; 15d40 <sigaltstack@plt+0x4a60>
   15d30:	ldr	r3, [r3, r2, lsl #2]
   15d34:	lsr	r0, r3, r0
   15d38:	and	r0, r0, #1
   15d3c:	bx	lr
   15d40:	andeq	r9, r1, r4, asr #6
   15d44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d48:	add	fp, sp, #28
   15d4c:	mov	r7, r3
   15d50:	lsr	r8, r2, #30
   15d54:	lsl	r3, r2, #2
   15d58:	adds	r8, r8, #0
   15d5c:	movne	r8, #1
   15d60:	cmp	r3, #0
   15d64:	movlt	r8, #1
   15d68:	cmp	r8, #0
   15d6c:	movne	r8, #0
   15d70:	bne	15e90 <sigaltstack@plt+0x4bb0>
   15d74:	mov	r5, r0
   15d78:	mov	r4, r1
   15d7c:	mov	r6, r2
   15d80:	mov	r0, r3
   15d84:	cmp	r3, #4016	; 0xfb0
   15d88:	bhi	15dcc <sigaltstack@plt+0x4aec>
   15d8c:	add	r3, r3, #29
   15d90:	bic	r3, r3, #7
   15d94:	sub	sp, sp, r3
   15d98:	add	r0, sp, #15
   15d9c:	bic	r0, r0, #15
   15da0:	cmp	r0, #0
   15da4:	beq	15e90 <sigaltstack@plt+0x4bb0>
   15da8:	mov	r3, #1
   15dac:	str	r3, [r0, #4]
   15db0:	cmp	r6, #2
   15db4:	bls	15e30 <sigaltstack@plt+0x4b50>
   15db8:	mov	r8, r4
   15dbc:	add	lr, r0, #8
   15dc0:	mov	r3, #0
   15dc4:	mov	ip, #2
   15dc8:	b	15df0 <sigaltstack@plt+0x4b10>
   15dcc:	bl	17cd0 <sigaltstack@plt+0x69f0>
   15dd0:	b	15da0 <sigaltstack@plt+0x4ac0>
   15dd4:	add	r3, r3, #1
   15dd8:	sub	r2, ip, r3
   15ddc:	str	r2, [lr]
   15de0:	add	ip, ip, #1
   15de4:	add	lr, lr, #4
   15de8:	cmp	r6, ip
   15dec:	beq	15e30 <sigaltstack@plt+0x4b50>
   15df0:	ldrb	r1, [r8, #1]!
   15df4:	ldrb	r2, [r4, r3]
   15df8:	cmp	r2, r1
   15dfc:	beq	15dd4 <sigaltstack@plt+0x4af4>
   15e00:	cmp	r3, #0
   15e04:	beq	15e24 <sigaltstack@plt+0x4b44>
   15e08:	ldr	r2, [r0, r3, lsl #2]
   15e0c:	sub	r3, r3, r2
   15e10:	ldrb	r2, [r4, r3]
   15e14:	cmp	r2, r1
   15e18:	beq	15dd4 <sigaltstack@plt+0x4af4>
   15e1c:	cmp	r3, #0
   15e20:	bne	15e08 <sigaltstack@plt+0x4b28>
   15e24:	str	ip, [lr]
   15e28:	mov	r3, #0
   15e2c:	b	15de0 <sigaltstack@plt+0x4b00>
   15e30:	mov	r3, #0
   15e34:	str	r3, [r7]
   15e38:	mov	r1, r5
   15e3c:	b	15e50 <sigaltstack@plt+0x4b70>
   15e40:	add	r3, r3, #1
   15e44:	add	r1, r1, #1
   15e48:	cmp	r6, r3
   15e4c:	beq	15e84 <sigaltstack@plt+0x4ba4>
   15e50:	ldrb	r2, [r1]
   15e54:	cmp	r2, #0
   15e58:	beq	15e88 <sigaltstack@plt+0x4ba8>
   15e5c:	ldrb	ip, [r4, r3]
   15e60:	cmp	ip, r2
   15e64:	beq	15e40 <sigaltstack@plt+0x4b60>
   15e68:	cmp	r3, #0
   15e6c:	ldrne	r2, [r0, r3, lsl #2]
   15e70:	addne	r5, r5, r2
   15e74:	subne	r3, r3, r2
   15e78:	addeq	r5, r5, #1
   15e7c:	addeq	r1, r1, #1
   15e80:	b	15e50 <sigaltstack@plt+0x4b70>
   15e84:	str	r5, [r7]
   15e88:	bl	17d14 <sigaltstack@plt+0x6a34>
   15e8c:	mov	r8, #1
   15e90:	mov	r0, r8
   15e94:	sub	sp, fp, #28
   15e98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ea0:	add	fp, sp, #32
   15ea4:	sub	sp, sp, #140	; 0x8c
   15ea8:	str	r0, [fp, #-172]	; 0xffffff54
   15eac:	mov	r4, r1
   15eb0:	str	r2, [fp, #-168]	; 0xffffff58
   15eb4:	mov	r0, r1
   15eb8:	bl	17d3c <sigaltstack@plt+0x6a5c>
   15ebc:	str	r0, [fp, #-160]	; 0xffffff60
   15ec0:	mov	r2, #44	; 0x2c
   15ec4:	umull	r2, r3, r0, r2
   15ec8:	adds	r3, r3, #0
   15ecc:	movne	r3, #1
   15ed0:	mov	r1, r3
   15ed4:	cmp	r2, #0
   15ed8:	movlt	r1, #1
   15edc:	str	r1, [fp, #-152]	; 0xffffff68
   15ee0:	cmp	r1, #0
   15ee4:	bne	1674c <sigaltstack@plt+0x546c>
   15ee8:	mov	ip, r0
   15eec:	mov	r0, #44	; 0x2c
   15ef0:	mul	r0, r0, ip
   15ef4:	cmp	r0, #4016	; 0xfb0
   15ef8:	bhi	15f50 <sigaltstack@plt+0x4c70>
   15efc:	add	r3, r0, #29
   15f00:	bic	r3, r3, #7
   15f04:	sub	sp, sp, r3
   15f08:	add	r3, sp, #15
   15f0c:	bic	r9, r3, #15
   15f10:	cmp	r9, #0
   15f14:	beq	16758 <sigaltstack@plt+0x5478>
   15f18:	ldr	r3, [fp, #-160]	; 0xffffff60
   15f1c:	add	sl, r3, r3, lsl #2
   15f20:	add	sl, r9, sl, lsl #3
   15f24:	str	r4, [fp, #-76]	; 0xffffffb4
   15f28:	mov	r3, #0
   15f2c:	strb	r3, [fp, #-92]	; 0xffffffa4
   15f30:	str	r3, [fp, #-88]	; 0xffffffa8
   15f34:	str	r3, [fp, #-84]	; 0xffffffac
   15f38:	strb	r3, [fp, #-80]	; 0xffffffb0
   15f3c:	add	r4, r9, #16
   15f40:	mov	r5, #1
   15f44:	mov	r6, r3
   15f48:	sub	r7, fp, #60	; 0x3c
   15f4c:	b	1605c <sigaltstack@plt+0x4d7c>
   15f50:	bl	17cd0 <sigaltstack@plt+0x69f0>
   15f54:	mov	r9, r0
   15f58:	b	15f10 <sigaltstack@plt+0x4c30>
   15f5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15f60:	mov	r1, r7
   15f64:	mov	r0, r4
   15f68:	bl	11028 <memcpy@plt>
   15f6c:	str	r4, [r4, #-16]
   15f70:	b	16028 <sigaltstack@plt+0x4d48>
   15f74:	sub	r0, fp, #88	; 0x58
   15f78:	bl	11040 <mbsinit@plt>
   15f7c:	cmp	r0, #0
   15f80:	beq	160ac <sigaltstack@plt+0x4dcc>
   15f84:	strb	r5, [fp, #-92]	; 0xffffffa4
   15f88:	ldr	r8, [fp, #-76]	; 0xffffffb4
   15f8c:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   15f90:	mov	r1, r0
   15f94:	mov	r0, r8
   15f98:	bl	14360 <sigaltstack@plt+0x3080>
   15f9c:	sub	r3, fp, #88	; 0x58
   15fa0:	mov	r2, r0
   15fa4:	mov	r1, r8
   15fa8:	sub	r0, fp, #64	; 0x40
   15fac:	bl	15b18 <sigaltstack@plt+0x4838>
   15fb0:	str	r0, [fp, #-72]	; 0xffffffb8
   15fb4:	cmn	r0, #1
   15fb8:	streq	r5, [fp, #-72]	; 0xffffffb8
   15fbc:	strbeq	r6, [fp, #-68]	; 0xffffffbc
   15fc0:	beq	16008 <sigaltstack@plt+0x4d28>
   15fc4:	cmn	r0, #2
   15fc8:	beq	160c0 <sigaltstack@plt+0x4de0>
   15fcc:	cmp	r0, #0
   15fd0:	bne	15ff4 <sigaltstack@plt+0x4d14>
   15fd4:	str	r5, [fp, #-72]	; 0xffffffb8
   15fd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15fdc:	ldrb	r3, [r3]
   15fe0:	cmp	r3, #0
   15fe4:	bne	160d4 <sigaltstack@plt+0x4df4>
   15fe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15fec:	cmp	r3, #0
   15ff0:	bne	160e8 <sigaltstack@plt+0x4e08>
   15ff4:	strb	r5, [fp, #-68]	; 0xffffffbc
   15ff8:	sub	r0, fp, #88	; 0x58
   15ffc:	bl	11040 <mbsinit@plt>
   16000:	cmp	r0, #0
   16004:	strbne	r6, [fp, #-92]	; 0xffffffa4
   16008:	strb	r5, [fp, #-80]	; 0xffffffb0
   1600c:	ldrb	r3, [fp, #-68]	; 0xffffffbc
   16010:	cmp	r3, #0
   16014:	bne	160fc <sigaltstack@plt+0x4e1c>
   16018:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1601c:	cmp	r3, r7
   16020:	strne	r3, [r4, #-16]
   16024:	beq	15f5c <sigaltstack@plt+0x4c7c>
   16028:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1602c:	str	r3, [r4, #-12]
   16030:	ldrb	r3, [fp, #-68]	; 0xffffffbc
   16034:	strb	r3, [r4, #-8]
   16038:	cmp	r3, #0
   1603c:	ldrne	r3, [fp, #-64]	; 0xffffffc0
   16040:	strne	r3, [r4, #-4]
   16044:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16048:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1604c:	add	r3, r3, r2
   16050:	str	r3, [fp, #-76]	; 0xffffffb4
   16054:	strb	r6, [fp, #-80]	; 0xffffffb0
   16058:	add	r4, r4, #40	; 0x28
   1605c:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   16060:	cmp	r3, #0
   16064:	bne	1600c <sigaltstack@plt+0x4d2c>
   16068:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   1606c:	cmp	r3, #0
   16070:	bne	15f88 <sigaltstack@plt+0x4ca8>
   16074:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16078:	ldrb	r3, [r1]
   1607c:	lsr	r2, r3, #5
   16080:	and	r3, r3, #31
   16084:	ldr	r0, [pc, #1752]	; 16764 <sigaltstack@plt+0x5484>
   16088:	ldr	r2, [r0, r2, lsl #2]
   1608c:	lsr	r3, r2, r3
   16090:	tst	r3, #1
   16094:	beq	15f74 <sigaltstack@plt+0x4c94>
   16098:	str	r5, [fp, #-72]	; 0xffffffb8
   1609c:	ldrb	r3, [r1]
   160a0:	str	r3, [fp, #-64]	; 0xffffffc0
   160a4:	strb	r5, [fp, #-68]	; 0xffffffbc
   160a8:	b	16008 <sigaltstack@plt+0x4d28>
   160ac:	ldr	r3, [pc, #1716]	; 16768 <sigaltstack@plt+0x5488>
   160b0:	mov	r2, #143	; 0x8f
   160b4:	ldr	r1, [pc, #1712]	; 1676c <sigaltstack@plt+0x548c>
   160b8:	ldr	r0, [pc, #1712]	; 16770 <sigaltstack@plt+0x5490>
   160bc:	bl	112d4 <__assert_fail@plt>
   160c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   160c4:	bl	111a8 <strlen@plt>
   160c8:	str	r0, [fp, #-72]	; 0xffffffb8
   160cc:	strb	r6, [fp, #-68]	; 0xffffffbc
   160d0:	b	16008 <sigaltstack@plt+0x4d28>
   160d4:	ldr	r3, [pc, #1676]	; 16768 <sigaltstack@plt+0x5488>
   160d8:	mov	r2, #171	; 0xab
   160dc:	ldr	r1, [pc, #1672]	; 1676c <sigaltstack@plt+0x548c>
   160e0:	ldr	r0, [pc, #1676]	; 16774 <sigaltstack@plt+0x5494>
   160e4:	bl	112d4 <__assert_fail@plt>
   160e8:	ldr	r3, [pc, #1656]	; 16768 <sigaltstack@plt+0x5488>
   160ec:	mov	r2, #172	; 0xac
   160f0:	ldr	r1, [pc, #1652]	; 1676c <sigaltstack@plt+0x548c>
   160f4:	ldr	r0, [pc, #1660]	; 16778 <sigaltstack@plt+0x5498>
   160f8:	bl	112d4 <__assert_fail@plt>
   160fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16100:	cmp	r2, #0
   16104:	bne	16018 <sigaltstack@plt+0x4d38>
   16108:	str	r3, [fp, #-164]	; 0xffffff5c
   1610c:	mov	r3, #1
   16110:	str	r3, [sl, #4]
   16114:	ldr	r3, [fp, #-160]	; 0xffffff60
   16118:	cmp	r3, #2
   1611c:	bls	16200 <sigaltstack@plt+0x4f20>
   16120:	mov	r8, r9
   16124:	add	r3, sl, #8
   16128:	str	r3, [fp, #-156]	; 0xffffff64
   1612c:	mov	r4, #0
   16130:	mov	r7, #2
   16134:	b	161e8 <sigaltstack@plt+0x4f08>
   16138:	ldr	r2, [r5, #44]	; 0x2c
   1613c:	add	r3, r4, r4, lsl #2
   16140:	add	r1, r9, r3, lsl #3
   16144:	ldr	r1, [r1, #4]
   16148:	cmp	r2, r1
   1614c:	ldrne	r0, [fp, #-152]	; 0xffffff68
   16150:	beq	161a0 <sigaltstack@plt+0x4ec0>
   16154:	cmp	r0, #0
   16158:	bne	161b8 <sigaltstack@plt+0x4ed8>
   1615c:	cmp	r4, #0
   16160:	beq	161f4 <sigaltstack@plt+0x4f14>
   16164:	ldr	r3, [sl, r4, lsl #2]
   16168:	sub	r4, r4, r3
   1616c:	cmp	r6, #0
   16170:	beq	16138 <sigaltstack@plt+0x4e58>
   16174:	add	r3, r4, r4, lsl #2
   16178:	add	r3, r9, r3, lsl #3
   1617c:	ldrb	r2, [r3, #8]
   16180:	cmp	r2, #0
   16184:	beq	16138 <sigaltstack@plt+0x4e58>
   16188:	ldr	r0, [r5, #52]	; 0x34
   1618c:	ldr	r3, [r3, #12]
   16190:	cmp	r0, r3
   16194:	movne	r0, #0
   16198:	moveq	r0, #1
   1619c:	b	16154 <sigaltstack@plt+0x4e74>
   161a0:	ldr	r1, [r9, r3, lsl #3]
   161a4:	ldr	r0, [r5, #40]	; 0x28
   161a8:	bl	11058 <memcmp@plt>
   161ac:	clz	r0, r0
   161b0:	lsr	r0, r0, #5
   161b4:	b	16154 <sigaltstack@plt+0x4e74>
   161b8:	add	r4, r4, #1
   161bc:	sub	r3, r7, r4
   161c0:	ldr	r2, [fp, #-156]	; 0xffffff64
   161c4:	str	r3, [r2]
   161c8:	add	r7, r7, #1
   161cc:	add	r8, r8, #40	; 0x28
   161d0:	ldr	r3, [fp, #-156]	; 0xffffff64
   161d4:	add	r3, r3, #4
   161d8:	str	r3, [fp, #-156]	; 0xffffff64
   161dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   161e0:	cmp	r3, r7
   161e4:	beq	16200 <sigaltstack@plt+0x4f20>
   161e8:	mov	r5, r8
   161ec:	ldrb	r6, [r8, #48]	; 0x30
   161f0:	b	1616c <sigaltstack@plt+0x4e8c>
   161f4:	ldr	r3, [fp, #-156]	; 0xffffff64
   161f8:	str	r7, [r3]
   161fc:	b	161c8 <sigaltstack@plt+0x4ee8>
   16200:	mov	r8, #0
   16204:	ldr	r3, [fp, #-168]	; 0xffffff58
   16208:	str	r8, [r3]
   1620c:	ldr	r3, [fp, #-172]	; 0xffffff54
   16210:	str	r3, [fp, #-132]	; 0xffffff7c
   16214:	strb	r8, [fp, #-148]	; 0xffffff6c
   16218:	str	r8, [fp, #-144]	; 0xffffff70
   1621c:	str	r8, [fp, #-140]	; 0xffffff74
   16220:	strb	r8, [fp, #-136]	; 0xffffff78
   16224:	str	r3, [fp, #-76]	; 0xffffffb4
   16228:	strb	r8, [fp, #-92]	; 0xffffffa4
   1622c:	str	r8, [fp, #-88]	; 0xffffffa8
   16230:	str	r8, [fp, #-84]	; 0xffffffac
   16234:	strb	r8, [fp, #-80]	; 0xffffffb0
   16238:	mov	r5, #1
   1623c:	mov	r6, r8
   16240:	ldr	r7, [pc, #1308]	; 16764 <sigaltstack@plt+0x5484>
   16244:	str	sl, [fp, #-156]	; 0xffffff64
   16248:	b	16678 <sigaltstack@plt+0x5398>
   1624c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16250:	ldr	r0, [r3]
   16254:	bl	11058 <memcmp@plt>
   16258:	clz	r0, r0
   1625c:	lsr	r0, r0, #5
   16260:	b	1664c <sigaltstack@plt+0x536c>
   16264:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16268:	ldr	r2, [fp, #-168]	; 0xffffff58
   1626c:	str	r3, [r2]
   16270:	mov	r0, r9
   16274:	bl	17d14 <sigaltstack@plt+0x6a34>
   16278:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1627c:	sub	sp, fp, #32
   16280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16284:	cmp	r8, #0
   16288:	beq	16410 <sigaltstack@plt+0x5130>
   1628c:	ldr	r3, [fp, #-156]	; 0xffffff64
   16290:	ldr	r4, [r3, r8, lsl #2]
   16294:	sub	r8, r8, r4
   16298:	cmp	r4, #0
   1629c:	bne	16364 <sigaltstack@plt+0x5084>
   162a0:	b	16678 <sigaltstack@plt+0x5398>
   162a4:	sub	r0, fp, #144	; 0x90
   162a8:	bl	11040 <mbsinit@plt>
   162ac:	cmp	r0, #0
   162b0:	beq	163b0 <sigaltstack@plt+0x50d0>
   162b4:	strb	r5, [fp, #-148]	; 0xffffff6c
   162b8:	ldr	sl, [fp, #-132]	; 0xffffff7c
   162bc:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   162c0:	mov	r1, r0
   162c4:	mov	r0, sl
   162c8:	bl	14360 <sigaltstack@plt+0x3080>
   162cc:	sub	r3, fp, #144	; 0x90
   162d0:	mov	r2, r0
   162d4:	mov	r1, sl
   162d8:	sub	r0, fp, #120	; 0x78
   162dc:	bl	15b18 <sigaltstack@plt+0x4838>
   162e0:	str	r0, [fp, #-128]	; 0xffffff80
   162e4:	cmn	r0, #1
   162e8:	streq	r5, [fp, #-128]	; 0xffffff80
   162ec:	strbeq	r6, [fp, #-124]	; 0xffffff84
   162f0:	beq	16338 <sigaltstack@plt+0x5058>
   162f4:	cmn	r0, #2
   162f8:	beq	163c4 <sigaltstack@plt+0x50e4>
   162fc:	cmp	r0, #0
   16300:	bne	16324 <sigaltstack@plt+0x5044>
   16304:	str	r5, [fp, #-128]	; 0xffffff80
   16308:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1630c:	ldrb	r3, [r3]
   16310:	cmp	r3, #0
   16314:	bne	163d8 <sigaltstack@plt+0x50f8>
   16318:	ldr	r3, [fp, #-120]	; 0xffffff88
   1631c:	cmp	r3, #0
   16320:	bne	163ec <sigaltstack@plt+0x510c>
   16324:	strb	r5, [fp, #-124]	; 0xffffff84
   16328:	sub	r0, fp, #144	; 0x90
   1632c:	bl	11040 <mbsinit@plt>
   16330:	cmp	r0, #0
   16334:	strbne	r6, [fp, #-148]	; 0xffffff6c
   16338:	strb	r5, [fp, #-136]	; 0xffffff78
   1633c:	ldrb	r3, [fp, #-124]	; 0xffffff84
   16340:	cmp	r3, #0
   16344:	bne	16400 <sigaltstack@plt+0x5120>
   16348:	ldr	r2, [fp, #-128]	; 0xffffff80
   1634c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16350:	add	r3, r3, r2
   16354:	str	r3, [fp, #-132]	; 0xffffff7c
   16358:	strb	r6, [fp, #-136]	; 0xffffff78
   1635c:	subs	r4, r4, #1
   16360:	beq	16678 <sigaltstack@plt+0x5398>
   16364:	ldrb	r3, [fp, #-136]	; 0xffffff78
   16368:	cmp	r3, #0
   1636c:	bne	1633c <sigaltstack@plt+0x505c>
   16370:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   16374:	cmp	r3, #0
   16378:	bne	162b8 <sigaltstack@plt+0x4fd8>
   1637c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   16380:	ldrb	r3, [r1]
   16384:	lsr	r2, r3, #5
   16388:	and	r3, r3, #31
   1638c:	ldr	r2, [r7, r2, lsl #2]
   16390:	lsr	r3, r2, r3
   16394:	tst	r3, #1
   16398:	beq	162a4 <sigaltstack@plt+0x4fc4>
   1639c:	str	r5, [fp, #-128]	; 0xffffff80
   163a0:	ldrb	r3, [r1]
   163a4:	str	r3, [fp, #-120]	; 0xffffff88
   163a8:	strb	r5, [fp, #-124]	; 0xffffff84
   163ac:	b	16338 <sigaltstack@plt+0x5058>
   163b0:	ldr	r3, [pc, #944]	; 16768 <sigaltstack@plt+0x5488>
   163b4:	mov	r2, #143	; 0x8f
   163b8:	ldr	r1, [pc, #940]	; 1676c <sigaltstack@plt+0x548c>
   163bc:	ldr	r0, [pc, #940]	; 16770 <sigaltstack@plt+0x5490>
   163c0:	bl	112d4 <__assert_fail@plt>
   163c4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   163c8:	bl	111a8 <strlen@plt>
   163cc:	str	r0, [fp, #-128]	; 0xffffff80
   163d0:	strb	r6, [fp, #-124]	; 0xffffff84
   163d4:	b	16338 <sigaltstack@plt+0x5058>
   163d8:	ldr	r3, [pc, #904]	; 16768 <sigaltstack@plt+0x5488>
   163dc:	mov	r2, #171	; 0xab
   163e0:	ldr	r1, [pc, #900]	; 1676c <sigaltstack@plt+0x548c>
   163e4:	ldr	r0, [pc, #904]	; 16774 <sigaltstack@plt+0x5494>
   163e8:	bl	112d4 <__assert_fail@plt>
   163ec:	ldr	r3, [pc, #884]	; 16768 <sigaltstack@plt+0x5488>
   163f0:	mov	r2, #172	; 0xac
   163f4:	ldr	r1, [pc, #880]	; 1676c <sigaltstack@plt+0x548c>
   163f8:	ldr	r0, [pc, #888]	; 16778 <sigaltstack@plt+0x5498>
   163fc:	bl	112d4 <__assert_fail@plt>
   16400:	ldr	r3, [fp, #-120]	; 0xffffff88
   16404:	cmp	r3, #0
   16408:	bne	16348 <sigaltstack@plt+0x5068>
   1640c:	bl	112bc <abort@plt>
   16410:	ldrb	r3, [fp, #-136]	; 0xffffff78
   16414:	cmp	r3, #0
   16418:	bne	1645c <sigaltstack@plt+0x517c>
   1641c:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   16420:	cmp	r3, #0
   16424:	bne	164a8 <sigaltstack@plt+0x51c8>
   16428:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1642c:	ldrb	r3, [r1]
   16430:	lsr	r2, r3, #5
   16434:	and	r3, r3, #31
   16438:	ldr	r2, [r7, r2, lsl #2]
   1643c:	lsr	r3, r2, r3
   16440:	tst	r3, #1
   16444:	beq	16494 <sigaltstack@plt+0x51b4>
   16448:	str	r5, [fp, #-128]	; 0xffffff80
   1644c:	ldrb	r3, [r1]
   16450:	str	r3, [fp, #-120]	; 0xffffff88
   16454:	strb	r5, [fp, #-124]	; 0xffffff84
   16458:	strb	r5, [fp, #-136]	; 0xffffff78
   1645c:	ldrb	r3, [fp, #-124]	; 0xffffff84
   16460:	cmp	r3, #0
   16464:	bne	1657c <sigaltstack@plt+0x529c>
   16468:	ldr	r2, [fp, #-128]	; 0xffffff80
   1646c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16470:	add	r3, r3, r2
   16474:	str	r3, [fp, #-132]	; 0xffffff7c
   16478:	strb	r6, [fp, #-136]	; 0xffffff78
   1647c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16480:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16484:	add	r3, r3, r2
   16488:	str	r3, [fp, #-76]	; 0xffffffb4
   1648c:	strb	r6, [fp, #-80]	; 0xffffffb0
   16490:	b	16678 <sigaltstack@plt+0x5398>
   16494:	sub	r0, fp, #144	; 0x90
   16498:	bl	11040 <mbsinit@plt>
   1649c:	cmp	r0, #0
   164a0:	beq	1652c <sigaltstack@plt+0x524c>
   164a4:	strb	r5, [fp, #-148]	; 0xffffff6c
   164a8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   164ac:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   164b0:	mov	r1, r0
   164b4:	mov	r0, r4
   164b8:	bl	14360 <sigaltstack@plt+0x3080>
   164bc:	sub	r3, fp, #144	; 0x90
   164c0:	mov	r2, r0
   164c4:	mov	r1, r4
   164c8:	sub	r0, fp, #120	; 0x78
   164cc:	bl	15b18 <sigaltstack@plt+0x4838>
   164d0:	str	r0, [fp, #-128]	; 0xffffff80
   164d4:	cmn	r0, #1
   164d8:	streq	r5, [fp, #-128]	; 0xffffff80
   164dc:	strbeq	r6, [fp, #-124]	; 0xffffff84
   164e0:	beq	16458 <sigaltstack@plt+0x5178>
   164e4:	cmn	r0, #2
   164e8:	beq	16540 <sigaltstack@plt+0x5260>
   164ec:	cmp	r0, #0
   164f0:	bne	16514 <sigaltstack@plt+0x5234>
   164f4:	str	r5, [fp, #-128]	; 0xffffff80
   164f8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   164fc:	ldrb	r3, [r3]
   16500:	cmp	r3, #0
   16504:	bne	16554 <sigaltstack@plt+0x5274>
   16508:	ldr	r3, [fp, #-120]	; 0xffffff88
   1650c:	cmp	r3, #0
   16510:	bne	16568 <sigaltstack@plt+0x5288>
   16514:	strb	r5, [fp, #-124]	; 0xffffff84
   16518:	sub	r0, fp, #144	; 0x90
   1651c:	bl	11040 <mbsinit@plt>
   16520:	cmp	r0, #0
   16524:	strbne	r6, [fp, #-148]	; 0xffffff6c
   16528:	b	16458 <sigaltstack@plt+0x5178>
   1652c:	ldr	r3, [pc, #564]	; 16768 <sigaltstack@plt+0x5488>
   16530:	mov	r2, #143	; 0x8f
   16534:	ldr	r1, [pc, #560]	; 1676c <sigaltstack@plt+0x548c>
   16538:	ldr	r0, [pc, #560]	; 16770 <sigaltstack@plt+0x5490>
   1653c:	bl	112d4 <__assert_fail@plt>
   16540:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16544:	bl	111a8 <strlen@plt>
   16548:	str	r0, [fp, #-128]	; 0xffffff80
   1654c:	strb	r6, [fp, #-124]	; 0xffffff84
   16550:	b	16458 <sigaltstack@plt+0x5178>
   16554:	ldr	r3, [pc, #524]	; 16768 <sigaltstack@plt+0x5488>
   16558:	mov	r2, #171	; 0xab
   1655c:	ldr	r1, [pc, #520]	; 1676c <sigaltstack@plt+0x548c>
   16560:	ldr	r0, [pc, #524]	; 16774 <sigaltstack@plt+0x5494>
   16564:	bl	112d4 <__assert_fail@plt>
   16568:	ldr	r3, [pc, #504]	; 16768 <sigaltstack@plt+0x5488>
   1656c:	mov	r2, #172	; 0xac
   16570:	ldr	r1, [pc, #500]	; 1676c <sigaltstack@plt+0x548c>
   16574:	ldr	r0, [pc, #508]	; 16778 <sigaltstack@plt+0x5498>
   16578:	bl	112d4 <__assert_fail@plt>
   1657c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16580:	cmp	r3, #0
   16584:	bne	16468 <sigaltstack@plt+0x5188>
   16588:	bl	112bc <abort@plt>
   1658c:	sub	r0, fp, #88	; 0x58
   16590:	bl	11040 <mbsinit@plt>
   16594:	cmp	r0, #0
   16598:	beq	166c4 <sigaltstack@plt+0x53e4>
   1659c:	strb	r5, [fp, #-92]	; 0xffffffa4
   165a0:	ldr	r4, [fp, #-76]	; 0xffffffb4
   165a4:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   165a8:	mov	r1, r0
   165ac:	mov	r0, r4
   165b0:	bl	14360 <sigaltstack@plt+0x3080>
   165b4:	sub	r3, fp, #88	; 0x58
   165b8:	mov	r2, r0
   165bc:	mov	r1, r4
   165c0:	sub	r0, fp, #64	; 0x40
   165c4:	bl	15b18 <sigaltstack@plt+0x4838>
   165c8:	str	r0, [fp, #-72]	; 0xffffffb8
   165cc:	cmn	r0, #1
   165d0:	streq	r5, [fp, #-72]	; 0xffffffb8
   165d4:	strbeq	r6, [fp, #-68]	; 0xffffffbc
   165d8:	beq	16620 <sigaltstack@plt+0x5340>
   165dc:	cmn	r0, #2
   165e0:	beq	166d8 <sigaltstack@plt+0x53f8>
   165e4:	cmp	r0, #0
   165e8:	bne	1660c <sigaltstack@plt+0x532c>
   165ec:	str	r5, [fp, #-72]	; 0xffffffb8
   165f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   165f4:	ldrb	r3, [r3]
   165f8:	cmp	r3, #0
   165fc:	bne	166ec <sigaltstack@plt+0x540c>
   16600:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16604:	cmp	r3, #0
   16608:	bne	16700 <sigaltstack@plt+0x5420>
   1660c:	strb	r5, [fp, #-68]	; 0xffffffbc
   16610:	sub	r0, fp, #88	; 0x58
   16614:	bl	11040 <mbsinit@plt>
   16618:	cmp	r0, #0
   1661c:	strbne	r6, [fp, #-92]	; 0xffffffa4
   16620:	strb	r5, [fp, #-80]	; 0xffffffb0
   16624:	ldrb	r2, [fp, #-68]	; 0xffffffbc
   16628:	cmp	r2, #0
   1662c:	addeq	r3, r8, r8, lsl #2
   16630:	addeq	r3, r9, r3, lsl #3
   16634:	bne	16714 <sigaltstack@plt+0x5434>
   16638:	ldr	r2, [r3, #4]
   1663c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16640:	cmp	r2, r1
   16644:	ldrne	r0, [fp, #-152]	; 0xffffff68
   16648:	beq	1624c <sigaltstack@plt+0x4f6c>
   1664c:	cmp	r0, #0
   16650:	beq	16284 <sigaltstack@plt+0x4fa4>
   16654:	add	r8, r8, #1
   16658:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1665c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16660:	add	r3, r3, r2
   16664:	str	r3, [fp, #-76]	; 0xffffffb4
   16668:	strb	r6, [fp, #-80]	; 0xffffffb0
   1666c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16670:	cmp	r3, r8
   16674:	beq	16264 <sigaltstack@plt+0x4f84>
   16678:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   1667c:	cmp	r3, #0
   16680:	bne	16624 <sigaltstack@plt+0x5344>
   16684:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   16688:	cmp	r3, #0
   1668c:	bne	165a0 <sigaltstack@plt+0x52c0>
   16690:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16694:	ldrb	r3, [r1]
   16698:	lsr	r2, r3, #5
   1669c:	and	r3, r3, #31
   166a0:	ldr	r2, [r7, r2, lsl #2]
   166a4:	lsr	r3, r2, r3
   166a8:	tst	r3, #1
   166ac:	beq	1658c <sigaltstack@plt+0x52ac>
   166b0:	str	r5, [fp, #-72]	; 0xffffffb8
   166b4:	ldrb	r3, [r1]
   166b8:	str	r3, [fp, #-64]	; 0xffffffc0
   166bc:	strb	r5, [fp, #-68]	; 0xffffffbc
   166c0:	b	16620 <sigaltstack@plt+0x5340>
   166c4:	ldr	r3, [pc, #156]	; 16768 <sigaltstack@plt+0x5488>
   166c8:	mov	r2, #143	; 0x8f
   166cc:	ldr	r1, [pc, #152]	; 1676c <sigaltstack@plt+0x548c>
   166d0:	ldr	r0, [pc, #152]	; 16770 <sigaltstack@plt+0x5490>
   166d4:	bl	112d4 <__assert_fail@plt>
   166d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   166dc:	bl	111a8 <strlen@plt>
   166e0:	str	r0, [fp, #-72]	; 0xffffffb8
   166e4:	strb	r6, [fp, #-68]	; 0xffffffbc
   166e8:	b	16620 <sigaltstack@plt+0x5340>
   166ec:	ldr	r3, [pc, #116]	; 16768 <sigaltstack@plt+0x5488>
   166f0:	mov	r2, #171	; 0xab
   166f4:	ldr	r1, [pc, #112]	; 1676c <sigaltstack@plt+0x548c>
   166f8:	ldr	r0, [pc, #116]	; 16774 <sigaltstack@plt+0x5494>
   166fc:	bl	112d4 <__assert_fail@plt>
   16700:	ldr	r3, [pc, #96]	; 16768 <sigaltstack@plt+0x5488>
   16704:	mov	r2, #172	; 0xac
   16708:	ldr	r1, [pc, #92]	; 1676c <sigaltstack@plt+0x548c>
   1670c:	ldr	r0, [pc, #100]	; 16778 <sigaltstack@plt+0x5498>
   16710:	bl	112d4 <__assert_fail@plt>
   16714:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16718:	cmp	r3, #0
   1671c:	beq	16270 <sigaltstack@plt+0x4f90>
   16720:	add	r3, r8, r8, lsl #2
   16724:	add	r3, r9, r3, lsl #3
   16728:	ldrb	r1, [r3, #8]
   1672c:	tst	r2, r1
   16730:	beq	16638 <sigaltstack@plt+0x5358>
   16734:	ldr	r0, [r3, #12]
   16738:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1673c:	cmp	r0, r3
   16740:	movne	r0, #0
   16744:	moveq	r0, #1
   16748:	b	1664c <sigaltstack@plt+0x536c>
   1674c:	mov	r3, #0
   16750:	str	r3, [fp, #-164]	; 0xffffff5c
   16754:	b	16278 <sigaltstack@plt+0x4f98>
   16758:	ldr	r3, [fp, #-152]	; 0xffffff68
   1675c:	str	r3, [fp, #-164]	; 0xffffff5c
   16760:	b	16278 <sigaltstack@plt+0x4f98>
   16764:	andeq	r9, r1, r4, asr #6
   16768:	andeq	r9, r1, r4, ror #6
   1676c:			; <UNDEFINED> instruction: 0x00018eb8
   16770:	andeq	r8, r1, r4, asr #29
   16774:	ldrdeq	r8, [r1], -ip
   16778:	strdeq	r8, [r1], -r4
   1677c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16780:	sub	sp, sp, #300	; 0x12c
   16784:	str	r0, [sp, #4]
   16788:	mov	sl, r1
   1678c:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16790:	cmp	r0, #1
   16794:	bls	1733c <sigaltstack@plt+0x605c>
   16798:	str	sl, [sp, #32]
   1679c:	mov	r3, #0
   167a0:	strb	r3, [sp, #16]
   167a4:	str	r3, [sp, #20]
   167a8:	str	r3, [sp, #24]
   167ac:	strb	r3, [sp, #28]
   167b0:	ldrb	r2, [sl]
   167b4:	lsr	r0, r2, #5
   167b8:	and	r1, r2, #31
   167bc:	ldr	r3, [pc, #3320]	; 174bc <sigaltstack@plt+0x61dc>
   167c0:	ldr	r3, [r3, r0, lsl #2]
   167c4:	lsr	r3, r3, r1
   167c8:	tst	r3, #1
   167cc:	beq	1680c <sigaltstack@plt+0x552c>
   167d0:	mov	r3, #1
   167d4:	str	r3, [sp, #36]	; 0x24
   167d8:	str	r2, [sp, #44]	; 0x2c
   167dc:	strb	r3, [sp, #40]	; 0x28
   167e0:	mov	r3, #1
   167e4:	strb	r3, [sp, #28]
   167e8:	ldrb	r3, [sp, #40]	; 0x28
   167ec:	cmp	r3, #0
   167f0:	beq	16910 <sigaltstack@plt+0x5630>
   167f4:	ldr	r3, [sp, #44]	; 0x2c
   167f8:	cmp	r3, #0
   167fc:	ldreq	r0, [sp, #4]
   16800:	bne	16910 <sigaltstack@plt+0x5630>
   16804:	add	sp, sp, #300	; 0x12c
   16808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1680c:	add	r0, sp, #20
   16810:	bl	11040 <mbsinit@plt>
   16814:	cmp	r0, #0
   16818:	beq	168a8 <sigaltstack@plt+0x55c8>
   1681c:	mov	r3, #1
   16820:	strb	r3, [sp, #16]
   16824:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16828:	mov	r1, r0
   1682c:	mov	r0, sl
   16830:	bl	14360 <sigaltstack@plt+0x3080>
   16834:	add	r3, sp, #20
   16838:	mov	r2, r0
   1683c:	mov	r1, sl
   16840:	add	r0, sp, #44	; 0x2c
   16844:	bl	15b18 <sigaltstack@plt+0x4838>
   16848:	str	r0, [sp, #36]	; 0x24
   1684c:	cmn	r0, #1
   16850:	beq	168bc <sigaltstack@plt+0x55dc>
   16854:	cmn	r0, #2
   16858:	beq	168d0 <sigaltstack@plt+0x55f0>
   1685c:	cmp	r0, #0
   16860:	bne	16888 <sigaltstack@plt+0x55a8>
   16864:	mov	r3, #1
   16868:	str	r3, [sp, #36]	; 0x24
   1686c:	ldr	r3, [sp, #32]
   16870:	ldrb	r3, [r3]
   16874:	cmp	r3, #0
   16878:	bne	168e8 <sigaltstack@plt+0x5608>
   1687c:	ldr	r3, [sp, #44]	; 0x2c
   16880:	cmp	r3, #0
   16884:	bne	168fc <sigaltstack@plt+0x561c>
   16888:	mov	r3, #1
   1688c:	strb	r3, [sp, #40]	; 0x28
   16890:	add	r0, sp, #20
   16894:	bl	11040 <mbsinit@plt>
   16898:	cmp	r0, #0
   1689c:	movne	r3, #0
   168a0:	strbne	r3, [sp, #16]
   168a4:	b	167e0 <sigaltstack@plt+0x5500>
   168a8:	ldr	r3, [pc, #3088]	; 174c0 <sigaltstack@plt+0x61e0>
   168ac:	mov	r2, #143	; 0x8f
   168b0:	ldr	r1, [pc, #3084]	; 174c4 <sigaltstack@plt+0x61e4>
   168b4:	ldr	r0, [pc, #3084]	; 174c8 <sigaltstack@plt+0x61e8>
   168b8:	bl	112d4 <__assert_fail@plt>
   168bc:	mov	r3, #1
   168c0:	str	r3, [sp, #36]	; 0x24
   168c4:	mov	r3, #0
   168c8:	strb	r3, [sp, #40]	; 0x28
   168cc:	b	167e0 <sigaltstack@plt+0x5500>
   168d0:	ldr	r0, [sp, #32]
   168d4:	bl	111a8 <strlen@plt>
   168d8:	str	r0, [sp, #36]	; 0x24
   168dc:	mov	r3, #0
   168e0:	strb	r3, [sp, #40]	; 0x28
   168e4:	b	167e0 <sigaltstack@plt+0x5500>
   168e8:	ldr	r3, [pc, #3024]	; 174c0 <sigaltstack@plt+0x61e0>
   168ec:	mov	r2, #171	; 0xab
   168f0:	ldr	r1, [pc, #3020]	; 174c4 <sigaltstack@plt+0x61e4>
   168f4:	ldr	r0, [pc, #3024]	; 174cc <sigaltstack@plt+0x61ec>
   168f8:	bl	112d4 <__assert_fail@plt>
   168fc:	ldr	r3, [pc, #3004]	; 174c0 <sigaltstack@plt+0x61e0>
   16900:	mov	r2, #172	; 0xac
   16904:	ldr	r1, [pc, #3000]	; 174c4 <sigaltstack@plt+0x61e4>
   16908:	ldr	r0, [pc, #3008]	; 174d0 <sigaltstack@plt+0x61f0>
   1690c:	bl	112d4 <__assert_fail@plt>
   16910:	str	sl, [sp, #88]	; 0x58
   16914:	mov	r7, #0
   16918:	strb	r7, [sp, #72]	; 0x48
   1691c:	str	r7, [sp, #76]	; 0x4c
   16920:	str	r7, [sp, #80]	; 0x50
   16924:	strb	r7, [sp, #84]	; 0x54
   16928:	ldr	r3, [sp, #4]
   1692c:	str	r3, [sp, #144]	; 0x90
   16930:	strb	r7, [sp, #128]	; 0x80
   16934:	str	r7, [sp, #132]	; 0x84
   16938:	str	r7, [sp, #136]	; 0x88
   1693c:	strb	r7, [sp, #140]	; 0x8c
   16940:	str	r7, [sp, #12]
   16944:	mov	fp, r7
   16948:	mov	r3, #1
   1694c:	mov	r4, r3
   16950:	mov	r5, r7
   16954:	ldr	r8, [pc, #2912]	; 174bc <sigaltstack@plt+0x61dc>
   16958:	str	sl, [sp, #8]
   1695c:	mov	sl, r3
   16960:	b	171dc <sigaltstack@plt+0x5efc>
   16964:	add	r0, sp, #132	; 0x84
   16968:	bl	11040 <mbsinit@plt>
   1696c:	cmp	r0, #0
   16970:	beq	169fc <sigaltstack@plt+0x571c>
   16974:	strb	r4, [sp, #128]	; 0x80
   16978:	ldr	r6, [sp, #144]	; 0x90
   1697c:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16980:	mov	r1, r0
   16984:	mov	r0, r6
   16988:	bl	14360 <sigaltstack@plt+0x3080>
   1698c:	add	r3, sp, #132	; 0x84
   16990:	mov	r2, r0
   16994:	mov	r1, r6
   16998:	add	r0, sp, #156	; 0x9c
   1699c:	bl	15b18 <sigaltstack@plt+0x4838>
   169a0:	str	r0, [sp, #148]	; 0x94
   169a4:	cmn	r0, #1
   169a8:	streq	r4, [sp, #148]	; 0x94
   169ac:	strbeq	r5, [sp, #152]	; 0x98
   169b0:	beq	17224 <sigaltstack@plt+0x5f44>
   169b4:	cmn	r0, #2
   169b8:	beq	16a10 <sigaltstack@plt+0x5730>
   169bc:	cmp	r0, #0
   169c0:	bne	169e4 <sigaltstack@plt+0x5704>
   169c4:	str	r4, [sp, #148]	; 0x94
   169c8:	ldr	r3, [sp, #144]	; 0x90
   169cc:	ldrb	r3, [r3]
   169d0:	cmp	r3, #0
   169d4:	bne	16a24 <sigaltstack@plt+0x5744>
   169d8:	ldr	r3, [sp, #156]	; 0x9c
   169dc:	cmp	r3, #0
   169e0:	bne	16a38 <sigaltstack@plt+0x5758>
   169e4:	strb	r4, [sp, #152]	; 0x98
   169e8:	add	r0, sp, #132	; 0x84
   169ec:	bl	11040 <mbsinit@plt>
   169f0:	cmp	r0, #0
   169f4:	strbne	r5, [sp, #128]	; 0x80
   169f8:	b	17224 <sigaltstack@plt+0x5f44>
   169fc:	ldr	r3, [pc, #2748]	; 174c0 <sigaltstack@plt+0x61e0>
   16a00:	mov	r2, #143	; 0x8f
   16a04:	ldr	r1, [pc, #2744]	; 174c4 <sigaltstack@plt+0x61e4>
   16a08:	ldr	r0, [pc, #2744]	; 174c8 <sigaltstack@plt+0x61e8>
   16a0c:	bl	112d4 <__assert_fail@plt>
   16a10:	ldr	r0, [sp, #144]	; 0x90
   16a14:	bl	111a8 <strlen@plt>
   16a18:	str	r0, [sp, #148]	; 0x94
   16a1c:	strb	r5, [sp, #152]	; 0x98
   16a20:	b	17224 <sigaltstack@plt+0x5f44>
   16a24:	ldr	r3, [pc, #2708]	; 174c0 <sigaltstack@plt+0x61e0>
   16a28:	mov	r2, #171	; 0xab
   16a2c:	ldr	r1, [pc, #2704]	; 174c4 <sigaltstack@plt+0x61e4>
   16a30:	ldr	r0, [pc, #2708]	; 174cc <sigaltstack@plt+0x61ec>
   16a34:	bl	112d4 <__assert_fail@plt>
   16a38:	ldr	r3, [pc, #2688]	; 174c0 <sigaltstack@plt+0x61e0>
   16a3c:	mov	r2, #172	; 0xac
   16a40:	ldr	r1, [pc, #2684]	; 174c4 <sigaltstack@plt+0x61e4>
   16a44:	ldr	r0, [pc, #2692]	; 174d0 <sigaltstack@plt+0x61f0>
   16a48:	bl	112d4 <__assert_fail@plt>
   16a4c:	ldr	r3, [sp, #156]	; 0x9c
   16a50:	cmp	r3, #0
   16a54:	beq	17334 <sigaltstack@plt+0x6054>
   16a58:	cmp	r7, #9
   16a5c:	movls	r3, #0
   16a60:	andhi	r3, sl, #1
   16a64:	cmp	r3, #0
   16a68:	beq	174b0 <sigaltstack@plt+0x61d0>
   16a6c:	add	r3, r7, r7, lsl #2
   16a70:	cmp	fp, r3
   16a74:	bcc	16ae0 <sigaltstack@plt+0x5800>
   16a78:	ldr	r3, [sp, #12]
   16a7c:	subs	r6, fp, r3
   16a80:	bne	16bd8 <sigaltstack@plt+0x58f8>
   16a84:	ldrb	r3, [sp, #84]	; 0x54
   16a88:	cmp	r3, #0
   16a8c:	bne	16ad0 <sigaltstack@plt+0x57f0>
   16a90:	ldrb	r3, [sp, #72]	; 0x48
   16a94:	cmp	r3, #0
   16a98:	bne	16ccc <sigaltstack@plt+0x59ec>
   16a9c:	ldr	r1, [sp, #88]	; 0x58
   16aa0:	ldrb	r3, [r1]
   16aa4:	lsr	r2, r3, #5
   16aa8:	and	r3, r3, #31
   16aac:	ldr	r2, [r8, r2, lsl #2]
   16ab0:	lsr	r3, r2, r3
   16ab4:	tst	r3, #1
   16ab8:	beq	16cb8 <sigaltstack@plt+0x59d8>
   16abc:	str	r4, [sp, #92]	; 0x5c
   16ac0:	ldrb	r3, [r1]
   16ac4:	str	r3, [sp, #100]	; 0x64
   16ac8:	strb	r4, [sp, #96]	; 0x60
   16acc:	strb	r4, [sp, #84]	; 0x54
   16ad0:	ldrb	r3, [sp, #96]	; 0x60
   16ad4:	cmp	r3, #0
   16ad8:	streq	fp, [sp, #12]
   16adc:	bne	16c8c <sigaltstack@plt+0x59ac>
   16ae0:	add	r7, r7, #1
   16ae4:	add	r6, fp, #1
   16ae8:	ldrb	r3, [sp, #152]	; 0x98
   16aec:	cmp	r3, #0
   16af0:	beq	17250 <sigaltstack@plt+0x5f70>
   16af4:	ldrb	r3, [sp, #40]	; 0x28
   16af8:	cmp	r3, #0
   16afc:	beq	17250 <sigaltstack@plt+0x5f70>
   16b00:	ldr	r3, [sp, #44]	; 0x2c
   16b04:	ldr	r0, [sp, #156]	; 0x9c
   16b08:	cmp	r0, r3
   16b0c:	movne	r0, #0
   16b10:	moveq	r0, #1
   16b14:	b	17264 <sigaltstack@plt+0x5f84>
   16b18:	add	r0, sp, #76	; 0x4c
   16b1c:	bl	11040 <mbsinit@plt>
   16b20:	cmp	r0, #0
   16b24:	beq	16c24 <sigaltstack@plt+0x5944>
   16b28:	strb	r4, [sp, #72]	; 0x48
   16b2c:	ldr	r9, [sp, #88]	; 0x58
   16b30:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16b34:	mov	r1, r0
   16b38:	mov	r0, r9
   16b3c:	bl	14360 <sigaltstack@plt+0x3080>
   16b40:	add	r3, sp, #76	; 0x4c
   16b44:	mov	r2, r0
   16b48:	mov	r1, r9
   16b4c:	add	r0, sp, #100	; 0x64
   16b50:	bl	15b18 <sigaltstack@plt+0x4838>
   16b54:	str	r0, [sp, #92]	; 0x5c
   16b58:	cmn	r0, #1
   16b5c:	streq	r4, [sp, #92]	; 0x5c
   16b60:	strbeq	r5, [sp, #96]	; 0x60
   16b64:	beq	16bac <sigaltstack@plt+0x58cc>
   16b68:	cmn	r0, #2
   16b6c:	beq	16c38 <sigaltstack@plt+0x5958>
   16b70:	cmp	r0, #0
   16b74:	bne	16b98 <sigaltstack@plt+0x58b8>
   16b78:	str	r4, [sp, #92]	; 0x5c
   16b7c:	ldr	r3, [sp, #88]	; 0x58
   16b80:	ldrb	r3, [r3]
   16b84:	cmp	r3, #0
   16b88:	bne	16c4c <sigaltstack@plt+0x596c>
   16b8c:	ldr	r3, [sp, #100]	; 0x64
   16b90:	cmp	r3, #0
   16b94:	bne	16c60 <sigaltstack@plt+0x5980>
   16b98:	strb	r4, [sp, #96]	; 0x60
   16b9c:	add	r0, sp, #76	; 0x4c
   16ba0:	bl	11040 <mbsinit@plt>
   16ba4:	cmp	r0, #0
   16ba8:	strbne	r5, [sp, #72]	; 0x48
   16bac:	strb	r4, [sp, #84]	; 0x54
   16bb0:	ldrb	r3, [sp, #96]	; 0x60
   16bb4:	cmp	r3, #0
   16bb8:	bne	16c74 <sigaltstack@plt+0x5994>
   16bbc:	ldr	r2, [sp, #92]	; 0x5c
   16bc0:	ldr	r3, [sp, #88]	; 0x58
   16bc4:	add	r3, r3, r2
   16bc8:	str	r3, [sp, #88]	; 0x58
   16bcc:	strb	r5, [sp, #84]	; 0x54
   16bd0:	subs	r6, r6, #1
   16bd4:	beq	16a90 <sigaltstack@plt+0x57b0>
   16bd8:	ldrb	r3, [sp, #84]	; 0x54
   16bdc:	cmp	r3, #0
   16be0:	bne	16bb0 <sigaltstack@plt+0x58d0>
   16be4:	ldrb	r3, [sp, #72]	; 0x48
   16be8:	cmp	r3, #0
   16bec:	bne	16b2c <sigaltstack@plt+0x584c>
   16bf0:	ldr	r1, [sp, #88]	; 0x58
   16bf4:	ldrb	r3, [r1]
   16bf8:	lsr	r2, r3, #5
   16bfc:	and	r3, r3, #31
   16c00:	ldr	r2, [r8, r2, lsl #2]
   16c04:	lsr	r3, r2, r3
   16c08:	tst	r3, #1
   16c0c:	beq	16b18 <sigaltstack@plt+0x5838>
   16c10:	str	r4, [sp, #92]	; 0x5c
   16c14:	ldrb	r3, [r1]
   16c18:	str	r3, [sp, #100]	; 0x64
   16c1c:	strb	r4, [sp, #96]	; 0x60
   16c20:	b	16bac <sigaltstack@plt+0x58cc>
   16c24:	ldr	r3, [pc, #2196]	; 174c0 <sigaltstack@plt+0x61e0>
   16c28:	mov	r2, #143	; 0x8f
   16c2c:	ldr	r1, [pc, #2192]	; 174c4 <sigaltstack@plt+0x61e4>
   16c30:	ldr	r0, [pc, #2192]	; 174c8 <sigaltstack@plt+0x61e8>
   16c34:	bl	112d4 <__assert_fail@plt>
   16c38:	ldr	r0, [sp, #88]	; 0x58
   16c3c:	bl	111a8 <strlen@plt>
   16c40:	str	r0, [sp, #92]	; 0x5c
   16c44:	strb	r5, [sp, #96]	; 0x60
   16c48:	b	16bac <sigaltstack@plt+0x58cc>
   16c4c:	ldr	r3, [pc, #2156]	; 174c0 <sigaltstack@plt+0x61e0>
   16c50:	mov	r2, #171	; 0xab
   16c54:	ldr	r1, [pc, #2152]	; 174c4 <sigaltstack@plt+0x61e4>
   16c58:	ldr	r0, [pc, #2156]	; 174cc <sigaltstack@plt+0x61ec>
   16c5c:	bl	112d4 <__assert_fail@plt>
   16c60:	ldr	r3, [pc, #2136]	; 174c0 <sigaltstack@plt+0x61e0>
   16c64:	mov	r2, #172	; 0xac
   16c68:	ldr	r1, [pc, #2132]	; 174c4 <sigaltstack@plt+0x61e4>
   16c6c:	ldr	r0, [pc, #2140]	; 174d0 <sigaltstack@plt+0x61f0>
   16c70:	bl	112d4 <__assert_fail@plt>
   16c74:	ldr	r3, [sp, #100]	; 0x64
   16c78:	cmp	r3, #0
   16c7c:	bne	16bbc <sigaltstack@plt+0x58dc>
   16c80:	ldrb	r3, [sp, #84]	; 0x54
   16c84:	cmp	r3, #0
   16c88:	beq	16a90 <sigaltstack@plt+0x57b0>
   16c8c:	ldr	r3, [sp, #100]	; 0x64
   16c90:	cmp	r3, #0
   16c94:	bne	16da8 <sigaltstack@plt+0x5ac8>
   16c98:	add	r2, sp, #240	; 0xf0
   16c9c:	ldr	r1, [sp, #8]
   16ca0:	ldr	r0, [sp, #4]
   16ca4:	bl	15e9c <sigaltstack@plt+0x4bbc>
   16ca8:	subs	sl, r0, #0
   16cac:	bne	16da0 <sigaltstack@plt+0x5ac0>
   16cb0:	str	fp, [sp, #12]
   16cb4:	b	16ae0 <sigaltstack@plt+0x5800>
   16cb8:	add	r0, sp, #76	; 0x4c
   16cbc:	bl	11040 <mbsinit@plt>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16d50 <sigaltstack@plt+0x5a70>
   16cc8:	strb	r4, [sp, #72]	; 0x48
   16ccc:	ldr	r6, [sp, #88]	; 0x58
   16cd0:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16cd4:	mov	r1, r0
   16cd8:	mov	r0, r6
   16cdc:	bl	14360 <sigaltstack@plt+0x3080>
   16ce0:	add	r3, sp, #76	; 0x4c
   16ce4:	mov	r2, r0
   16ce8:	mov	r1, r6
   16cec:	add	r0, sp, #100	; 0x64
   16cf0:	bl	15b18 <sigaltstack@plt+0x4838>
   16cf4:	str	r0, [sp, #92]	; 0x5c
   16cf8:	cmn	r0, #1
   16cfc:	streq	r4, [sp, #92]	; 0x5c
   16d00:	strbeq	r5, [sp, #96]	; 0x60
   16d04:	beq	16acc <sigaltstack@plt+0x57ec>
   16d08:	cmn	r0, #2
   16d0c:	beq	16d64 <sigaltstack@plt+0x5a84>
   16d10:	cmp	r0, #0
   16d14:	bne	16d38 <sigaltstack@plt+0x5a58>
   16d18:	str	r4, [sp, #92]	; 0x5c
   16d1c:	ldr	r3, [sp, #88]	; 0x58
   16d20:	ldrb	r3, [r3]
   16d24:	cmp	r3, #0
   16d28:	bne	16d78 <sigaltstack@plt+0x5a98>
   16d2c:	ldr	r3, [sp, #100]	; 0x64
   16d30:	cmp	r3, #0
   16d34:	bne	16d8c <sigaltstack@plt+0x5aac>
   16d38:	strb	r4, [sp, #96]	; 0x60
   16d3c:	add	r0, sp, #76	; 0x4c
   16d40:	bl	11040 <mbsinit@plt>
   16d44:	cmp	r0, #0
   16d48:	strbne	r5, [sp, #72]	; 0x48
   16d4c:	b	16acc <sigaltstack@plt+0x57ec>
   16d50:	ldr	r3, [pc, #1896]	; 174c0 <sigaltstack@plt+0x61e0>
   16d54:	mov	r2, #143	; 0x8f
   16d58:	ldr	r1, [pc, #1892]	; 174c4 <sigaltstack@plt+0x61e4>
   16d5c:	ldr	r0, [pc, #1892]	; 174c8 <sigaltstack@plt+0x61e8>
   16d60:	bl	112d4 <__assert_fail@plt>
   16d64:	ldr	r0, [sp, #88]	; 0x58
   16d68:	bl	111a8 <strlen@plt>
   16d6c:	str	r0, [sp, #92]	; 0x5c
   16d70:	strb	r5, [sp, #96]	; 0x60
   16d74:	b	16acc <sigaltstack@plt+0x57ec>
   16d78:	ldr	r3, [pc, #1856]	; 174c0 <sigaltstack@plt+0x61e0>
   16d7c:	mov	r2, #171	; 0xab
   16d80:	ldr	r1, [pc, #1852]	; 174c4 <sigaltstack@plt+0x61e4>
   16d84:	ldr	r0, [pc, #1856]	; 174cc <sigaltstack@plt+0x61ec>
   16d88:	bl	112d4 <__assert_fail@plt>
   16d8c:	ldr	r3, [pc, #1836]	; 174c0 <sigaltstack@plt+0x61e0>
   16d90:	mov	r2, #172	; 0xac
   16d94:	ldr	r1, [pc, #1832]	; 174c4 <sigaltstack@plt+0x61e4>
   16d98:	ldr	r0, [pc, #1840]	; 174d0 <sigaltstack@plt+0x61f0>
   16d9c:	bl	112d4 <__assert_fail@plt>
   16da0:	ldr	r0, [sp, #240]	; 0xf0
   16da4:	b	16804 <sigaltstack@plt+0x5524>
   16da8:	str	fp, [sp, #12]
   16dac:	b	16ae0 <sigaltstack@plt+0x5800>
   16db0:	ldr	r1, [sp, #32]
   16db4:	ldr	r0, [sp, #144]	; 0x90
   16db8:	bl	11058 <memcmp@plt>
   16dbc:	clz	r0, r0
   16dc0:	lsr	r0, r0, #5
   16dc4:	b	17264 <sigaltstack@plt+0x5f84>
   16dc8:	add	r0, sp, #244	; 0xf4
   16dcc:	bl	11040 <mbsinit@plt>
   16dd0:	cmp	r0, #0
   16dd4:	beq	16e60 <sigaltstack@plt+0x5b80>
   16dd8:	strb	r4, [sp, #240]	; 0xf0
   16ddc:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16de0:	mov	r1, r0
   16de4:	ldr	r6, [sp, #8]
   16de8:	mov	r0, r6
   16dec:	bl	14360 <sigaltstack@plt+0x3080>
   16df0:	add	r3, sp, #244	; 0xf4
   16df4:	mov	r2, r0
   16df8:	mov	r1, r6
   16dfc:	add	r0, sp, #268	; 0x10c
   16e00:	bl	15b18 <sigaltstack@plt+0x4838>
   16e04:	str	r0, [sp, #260]	; 0x104
   16e08:	cmn	r0, #1
   16e0c:	streq	r4, [sp, #260]	; 0x104
   16e10:	strbeq	r5, [sp, #264]	; 0x108
   16e14:	beq	172e8 <sigaltstack@plt+0x6008>
   16e18:	cmn	r0, #2
   16e1c:	beq	16e74 <sigaltstack@plt+0x5b94>
   16e20:	cmp	r0, #0
   16e24:	bne	16e48 <sigaltstack@plt+0x5b68>
   16e28:	str	r4, [sp, #260]	; 0x104
   16e2c:	ldr	r3, [sp, #256]	; 0x100
   16e30:	ldrb	r3, [r3]
   16e34:	cmp	r3, #0
   16e38:	bne	16e88 <sigaltstack@plt+0x5ba8>
   16e3c:	ldr	r3, [sp, #268]	; 0x10c
   16e40:	cmp	r3, #0
   16e44:	bne	16e9c <sigaltstack@plt+0x5bbc>
   16e48:	strb	r4, [sp, #264]	; 0x108
   16e4c:	add	r0, sp, #244	; 0xf4
   16e50:	bl	11040 <mbsinit@plt>
   16e54:	cmp	r0, #0
   16e58:	strbne	r5, [sp, #240]	; 0xf0
   16e5c:	b	172e8 <sigaltstack@plt+0x6008>
   16e60:	ldr	r3, [pc, #1624]	; 174c0 <sigaltstack@plt+0x61e0>
   16e64:	mov	r2, #143	; 0x8f
   16e68:	ldr	r1, [pc, #1620]	; 174c4 <sigaltstack@plt+0x61e4>
   16e6c:	ldr	r0, [pc, #1620]	; 174c8 <sigaltstack@plt+0x61e8>
   16e70:	bl	112d4 <__assert_fail@plt>
   16e74:	ldr	r0, [sp, #256]	; 0x100
   16e78:	bl	111a8 <strlen@plt>
   16e7c:	str	r0, [sp, #260]	; 0x104
   16e80:	strb	r5, [sp, #264]	; 0x108
   16e84:	b	172e8 <sigaltstack@plt+0x6008>
   16e88:	ldr	r3, [pc, #1584]	; 174c0 <sigaltstack@plt+0x61e0>
   16e8c:	mov	r2, #171	; 0xab
   16e90:	ldr	r1, [pc, #1580]	; 174c4 <sigaltstack@plt+0x61e4>
   16e94:	ldr	r0, [pc, #1584]	; 174cc <sigaltstack@plt+0x61ec>
   16e98:	bl	112d4 <__assert_fail@plt>
   16e9c:	ldr	r3, [pc, #1564]	; 174c0 <sigaltstack@plt+0x61e0>
   16ea0:	mov	r2, #172	; 0xac
   16ea4:	ldr	r1, [pc, #1560]	; 174c4 <sigaltstack@plt+0x61e4>
   16ea8:	ldr	r0, [pc, #1568]	; 174d0 <sigaltstack@plt+0x61f0>
   16eac:	bl	112d4 <__assert_fail@plt>
   16eb0:	ldr	r3, [sp, #268]	; 0x10c
   16eb4:	cmp	r3, #0
   16eb8:	bne	172f8 <sigaltstack@plt+0x6018>
   16ebc:	bl	112bc <abort@plt>
   16ec0:	add	r0, sp, #244	; 0xf4
   16ec4:	bl	11040 <mbsinit@plt>
   16ec8:	cmp	r0, #0
   16ecc:	beq	16f58 <sigaltstack@plt+0x5c78>
   16ed0:	strb	r4, [sp, #240]	; 0xf0
   16ed4:	ldr	r9, [sp, #256]	; 0x100
   16ed8:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16edc:	mov	r1, r0
   16ee0:	mov	r0, r9
   16ee4:	bl	14360 <sigaltstack@plt+0x3080>
   16ee8:	add	r3, sp, #244	; 0xf4
   16eec:	mov	r2, r0
   16ef0:	mov	r1, r9
   16ef4:	add	r0, sp, #268	; 0x10c
   16ef8:	bl	15b18 <sigaltstack@plt+0x4838>
   16efc:	str	r0, [sp, #260]	; 0x104
   16f00:	cmn	r0, #1
   16f04:	streq	r4, [sp, #260]	; 0x104
   16f08:	strbeq	r5, [sp, #264]	; 0x108
   16f0c:	beq	1714c <sigaltstack@plt+0x5e6c>
   16f10:	cmn	r0, #2
   16f14:	beq	16f6c <sigaltstack@plt+0x5c8c>
   16f18:	cmp	r0, #0
   16f1c:	bne	16f40 <sigaltstack@plt+0x5c60>
   16f20:	str	r4, [sp, #260]	; 0x104
   16f24:	ldr	r3, [sp, #256]	; 0x100
   16f28:	ldrb	r3, [r3]
   16f2c:	cmp	r3, #0
   16f30:	bne	16f80 <sigaltstack@plt+0x5ca0>
   16f34:	ldr	r3, [sp, #268]	; 0x10c
   16f38:	cmp	r3, #0
   16f3c:	bne	16f94 <sigaltstack@plt+0x5cb4>
   16f40:	strb	r4, [sp, #264]	; 0x108
   16f44:	add	r0, sp, #244	; 0xf4
   16f48:	bl	11040 <mbsinit@plt>
   16f4c:	cmp	r0, #0
   16f50:	strbne	r5, [sp, #240]	; 0xf0
   16f54:	b	1714c <sigaltstack@plt+0x5e6c>
   16f58:	ldr	r3, [pc, #1376]	; 174c0 <sigaltstack@plt+0x61e0>
   16f5c:	mov	r2, #143	; 0x8f
   16f60:	ldr	r1, [pc, #1372]	; 174c4 <sigaltstack@plt+0x61e4>
   16f64:	ldr	r0, [pc, #1372]	; 174c8 <sigaltstack@plt+0x61e8>
   16f68:	bl	112d4 <__assert_fail@plt>
   16f6c:	ldr	r0, [sp, #256]	; 0x100
   16f70:	bl	111a8 <strlen@plt>
   16f74:	str	r0, [sp, #260]	; 0x104
   16f78:	strb	r5, [sp, #264]	; 0x108
   16f7c:	b	1714c <sigaltstack@plt+0x5e6c>
   16f80:	ldr	r3, [pc, #1336]	; 174c0 <sigaltstack@plt+0x61e0>
   16f84:	mov	r2, #171	; 0xab
   16f88:	ldr	r1, [pc, #1332]	; 174c4 <sigaltstack@plt+0x61e4>
   16f8c:	ldr	r0, [pc, #1336]	; 174cc <sigaltstack@plt+0x61ec>
   16f90:	bl	112d4 <__assert_fail@plt>
   16f94:	ldr	r3, [pc, #1316]	; 174c0 <sigaltstack@plt+0x61e0>
   16f98:	mov	r2, #172	; 0xac
   16f9c:	ldr	r1, [pc, #1312]	; 174c4 <sigaltstack@plt+0x61e4>
   16fa0:	ldr	r0, [pc, #1320]	; 174d0 <sigaltstack@plt+0x61f0>
   16fa4:	bl	112d4 <__assert_fail@plt>
   16fa8:	ldr	r3, [sp, #268]	; 0x10c
   16fac:	cmp	r3, #0
   16fb0:	bne	1715c <sigaltstack@plt+0x5e7c>
   16fb4:	ldr	r0, [sp, #144]	; 0x90
   16fb8:	b	16804 <sigaltstack@plt+0x5524>
   16fbc:	add	r0, sp, #188	; 0xbc
   16fc0:	bl	11040 <mbsinit@plt>
   16fc4:	cmp	r0, #0
   16fc8:	beq	17054 <sigaltstack@plt+0x5d74>
   16fcc:	strb	r4, [sp, #184]	; 0xb8
   16fd0:	ldr	r9, [sp, #200]	; 0xc8
   16fd4:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   16fd8:	mov	r1, r0
   16fdc:	mov	r0, r9
   16fe0:	bl	14360 <sigaltstack@plt+0x3080>
   16fe4:	add	r3, sp, #188	; 0xbc
   16fe8:	mov	r2, r0
   16fec:	mov	r1, r9
   16ff0:	add	r0, sp, #212	; 0xd4
   16ff4:	bl	15b18 <sigaltstack@plt+0x4838>
   16ff8:	str	r0, [sp, #204]	; 0xcc
   16ffc:	cmn	r0, #1
   17000:	streq	r4, [sp, #204]	; 0xcc
   17004:	strbeq	r5, [sp, #208]	; 0xd0
   17008:	beq	171a4 <sigaltstack@plt+0x5ec4>
   1700c:	cmn	r0, #2
   17010:	beq	17068 <sigaltstack@plt+0x5d88>
   17014:	cmp	r0, #0
   17018:	bne	1703c <sigaltstack@plt+0x5d5c>
   1701c:	str	r4, [sp, #204]	; 0xcc
   17020:	ldr	r3, [sp, #200]	; 0xc8
   17024:	ldrb	r3, [r3]
   17028:	cmp	r3, #0
   1702c:	bne	1707c <sigaltstack@plt+0x5d9c>
   17030:	ldr	r3, [sp, #212]	; 0xd4
   17034:	cmp	r3, #0
   17038:	bne	17090 <sigaltstack@plt+0x5db0>
   1703c:	strb	r4, [sp, #208]	; 0xd0
   17040:	add	r0, sp, #188	; 0xbc
   17044:	bl	11040 <mbsinit@plt>
   17048:	cmp	r0, #0
   1704c:	strbne	r5, [sp, #184]	; 0xb8
   17050:	b	171a4 <sigaltstack@plt+0x5ec4>
   17054:	ldr	r3, [pc, #1124]	; 174c0 <sigaltstack@plt+0x61e0>
   17058:	mov	r2, #143	; 0x8f
   1705c:	ldr	r1, [pc, #1120]	; 174c4 <sigaltstack@plt+0x61e4>
   17060:	ldr	r0, [pc, #1120]	; 174c8 <sigaltstack@plt+0x61e8>
   17064:	bl	112d4 <__assert_fail@plt>
   17068:	ldr	r0, [sp, #200]	; 0xc8
   1706c:	bl	111a8 <strlen@plt>
   17070:	str	r0, [sp, #204]	; 0xcc
   17074:	strb	r5, [sp, #208]	; 0xd0
   17078:	b	171a4 <sigaltstack@plt+0x5ec4>
   1707c:	ldr	r3, [pc, #1084]	; 174c0 <sigaltstack@plt+0x61e0>
   17080:	mov	r2, #171	; 0xab
   17084:	ldr	r1, [pc, #1080]	; 174c4 <sigaltstack@plt+0x61e4>
   17088:	ldr	r0, [pc, #1084]	; 174cc <sigaltstack@plt+0x61ec>
   1708c:	bl	112d4 <__assert_fail@plt>
   17090:	ldr	r3, [pc, #1064]	; 174c0 <sigaltstack@plt+0x61e0>
   17094:	mov	r2, #172	; 0xac
   17098:	ldr	r1, [pc, #1060]	; 174c4 <sigaltstack@plt+0x61e4>
   1709c:	ldr	r0, [pc, #1068]	; 174d0 <sigaltstack@plt+0x61f0>
   170a0:	bl	112d4 <__assert_fail@plt>
   170a4:	ldr	r3, [sp, #212]	; 0xd4
   170a8:	cmp	r3, #0
   170ac:	beq	1732c <sigaltstack@plt+0x604c>
   170b0:	ldrb	r3, [sp, #264]	; 0x108
   170b4:	cmp	r3, #0
   170b8:	beq	171b4 <sigaltstack@plt+0x5ed4>
   170bc:	ldr	r3, [sp, #268]	; 0x10c
   170c0:	ldr	r0, [sp, #212]	; 0xd4
   170c4:	subs	r0, r0, r3
   170c8:	movne	r0, #1
   170cc:	add	r2, r6, #1
   170d0:	cmp	r0, #0
   170d4:	bne	171c4 <sigaltstack@plt+0x5ee4>
   170d8:	ldr	r1, [sp, #204]	; 0xcc
   170dc:	ldr	r3, [sp, #200]	; 0xc8
   170e0:	add	r3, r3, r1
   170e4:	str	r3, [sp, #200]	; 0xc8
   170e8:	strb	r5, [sp, #196]	; 0xc4
   170ec:	ldr	r1, [sp, #260]	; 0x104
   170f0:	ldr	r3, [sp, #256]	; 0x100
   170f4:	add	r3, r3, r1
   170f8:	str	r3, [sp, #256]	; 0x100
   170fc:	strb	r5, [sp, #252]	; 0xfc
   17100:	mov	r6, r2
   17104:	ldrb	r3, [sp, #252]	; 0xfc
   17108:	cmp	r3, #0
   1710c:	bne	17150 <sigaltstack@plt+0x5e70>
   17110:	ldrb	r3, [sp, #240]	; 0xf0
   17114:	cmp	r3, #0
   17118:	bne	16ed4 <sigaltstack@plt+0x5bf4>
   1711c:	ldr	r1, [sp, #256]	; 0x100
   17120:	ldrb	r3, [r1]
   17124:	lsr	r2, r3, #5
   17128:	and	r3, r3, #31
   1712c:	ldr	r2, [r8, r2, lsl #2]
   17130:	lsr	r3, r2, r3
   17134:	tst	r3, #1
   17138:	beq	16ec0 <sigaltstack@plt+0x5be0>
   1713c:	str	r4, [sp, #260]	; 0x104
   17140:	ldrb	r3, [r1]
   17144:	str	r3, [sp, #268]	; 0x10c
   17148:	strb	r4, [sp, #264]	; 0x108
   1714c:	strb	r4, [sp, #252]	; 0xfc
   17150:	ldrb	r3, [sp, #264]	; 0x108
   17154:	cmp	r3, #0
   17158:	bne	16fa8 <sigaltstack@plt+0x5cc8>
   1715c:	ldrb	r3, [sp, #196]	; 0xc4
   17160:	cmp	r3, #0
   17164:	bne	171a8 <sigaltstack@plt+0x5ec8>
   17168:	ldrb	r3, [sp, #184]	; 0xb8
   1716c:	cmp	r3, #0
   17170:	bne	16fd0 <sigaltstack@plt+0x5cf0>
   17174:	ldr	r1, [sp, #200]	; 0xc8
   17178:	ldrb	r3, [r1]
   1717c:	lsr	r2, r3, #5
   17180:	and	r3, r3, #31
   17184:	ldr	r2, [r8, r2, lsl #2]
   17188:	lsr	r3, r2, r3
   1718c:	tst	r3, #1
   17190:	beq	16fbc <sigaltstack@plt+0x5cdc>
   17194:	str	r4, [sp, #204]	; 0xcc
   17198:	ldrb	r3, [r1]
   1719c:	str	r3, [sp, #212]	; 0xd4
   171a0:	strb	r4, [sp, #208]	; 0xd0
   171a4:	strb	r4, [sp, #196]	; 0xc4
   171a8:	ldrb	r3, [sp, #208]	; 0xd0
   171ac:	cmp	r3, #0
   171b0:	bne	170a4 <sigaltstack@plt+0x5dc4>
   171b4:	ldr	r2, [sp, #204]	; 0xcc
   171b8:	ldr	r3, [sp, #260]	; 0x104
   171bc:	cmp	r2, r3
   171c0:	beq	17314 <sigaltstack@plt+0x6034>
   171c4:	ldr	r2, [sp, #148]	; 0x94
   171c8:	ldr	r3, [sp, #144]	; 0x90
   171cc:	add	r3, r3, r2
   171d0:	str	r3, [sp, #144]	; 0x90
   171d4:	strb	r5, [sp, #140]	; 0x8c
   171d8:	mov	fp, r6
   171dc:	ldrb	r3, [sp, #140]	; 0x8c
   171e0:	cmp	r3, #0
   171e4:	bne	17228 <sigaltstack@plt+0x5f48>
   171e8:	ldrb	r3, [sp, #128]	; 0x80
   171ec:	cmp	r3, #0
   171f0:	bne	16978 <sigaltstack@plt+0x5698>
   171f4:	ldr	r1, [sp, #144]	; 0x90
   171f8:	ldrb	r3, [r1]
   171fc:	lsr	r2, r3, #5
   17200:	and	r3, r3, #31
   17204:	ldr	r2, [r8, r2, lsl #2]
   17208:	lsr	r3, r2, r3
   1720c:	tst	r3, #1
   17210:	beq	16964 <sigaltstack@plt+0x5684>
   17214:	str	r4, [sp, #148]	; 0x94
   17218:	ldrb	r3, [r1]
   1721c:	str	r3, [sp, #156]	; 0x9c
   17220:	strb	r4, [sp, #152]	; 0x98
   17224:	strb	r4, [sp, #140]	; 0x8c
   17228:	ldrb	r3, [sp, #152]	; 0x98
   1722c:	cmp	r3, #0
   17230:	bne	16a4c <sigaltstack@plt+0x576c>
   17234:	cmp	r7, #9
   17238:	movls	r3, #0
   1723c:	andhi	r3, sl, #1
   17240:	cmp	r3, #0
   17244:	addeq	r7, r7, #1
   17248:	addeq	r6, fp, #1
   1724c:	bne	16a6c <sigaltstack@plt+0x578c>
   17250:	ldr	r2, [sp, #148]	; 0x94
   17254:	ldr	r3, [sp, #36]	; 0x24
   17258:	cmp	r2, r3
   1725c:	movne	r0, r5
   17260:	beq	16db0 <sigaltstack@plt+0x5ad0>
   17264:	cmp	r0, #0
   17268:	beq	171c4 <sigaltstack@plt+0x5ee4>
   1726c:	add	ip, sp, #184	; 0xb8
   17270:	add	lr, sp, #128	; 0x80
   17274:	ldm	lr!, {r0, r1, r2, r3}
   17278:	stmia	ip!, {r0, r1, r2, r3}
   1727c:	ldm	lr!, {r0, r1, r2, r3}
   17280:	stmia	ip!, {r0, r1, r2, r3}
   17284:	ldm	lr!, {r0, r1, r2, r3}
   17288:	stmia	ip!, {r0, r1, r2, r3}
   1728c:	ldm	lr, {r0, r1}
   17290:	stm	ip, {r0, r1}
   17294:	ldr	r2, [sp, #204]	; 0xcc
   17298:	ldr	r3, [sp, #200]	; 0xc8
   1729c:	add	r3, r3, r2
   172a0:	str	r3, [sp, #200]	; 0xc8
   172a4:	strb	r5, [sp, #196]	; 0xc4
   172a8:	ldr	r3, [sp, #8]
   172ac:	str	r3, [sp, #256]	; 0x100
   172b0:	strb	r5, [sp, #240]	; 0xf0
   172b4:	str	r5, [sp, #244]	; 0xf4
   172b8:	str	r5, [sp, #248]	; 0xf8
   172bc:	strb	r5, [sp, #252]	; 0xfc
   172c0:	ldrb	r2, [r3]
   172c4:	lsr	r3, r2, #5
   172c8:	and	r1, r2, #31
   172cc:	ldr	r3, [r8, r3, lsl #2]
   172d0:	lsr	r3, r3, r1
   172d4:	tst	r3, #1
   172d8:	beq	16dc8 <sigaltstack@plt+0x5ae8>
   172dc:	str	r4, [sp, #260]	; 0x104
   172e0:	str	r2, [sp, #268]	; 0x10c
   172e4:	strb	r4, [sp, #264]	; 0x108
   172e8:	strb	r4, [sp, #252]	; 0xfc
   172ec:	ldrb	r3, [sp, #264]	; 0x108
   172f0:	cmp	r3, #0
   172f4:	bne	16eb0 <sigaltstack@plt+0x5bd0>
   172f8:	ldr	r2, [sp, #260]	; 0x104
   172fc:	ldr	r3, [sp, #256]	; 0x100
   17300:	add	r3, r3, r2
   17304:	str	r3, [sp, #256]	; 0x100
   17308:	strb	r5, [sp, #252]	; 0xfc
   1730c:	add	r6, fp, #2
   17310:	b	17104 <sigaltstack@plt+0x5e24>
   17314:	ldr	r1, [sp, #256]	; 0x100
   17318:	ldr	r0, [sp, #200]	; 0xc8
   1731c:	bl	11058 <memcmp@plt>
   17320:	adds	r0, r0, #0
   17324:	movne	r0, #1
   17328:	b	170cc <sigaltstack@plt+0x5dec>
   1732c:	mov	r0, #0
   17330:	b	16804 <sigaltstack@plt+0x5524>
   17334:	mov	r0, #0
   17338:	b	16804 <sigaltstack@plt+0x5524>
   1733c:	ldrb	r7, [sl]
   17340:	cmp	r7, #0
   17344:	beq	17460 <sigaltstack@plt+0x6180>
   17348:	add	r3, sl, #1
   1734c:	str	r3, [sp, #8]
   17350:	ldr	r5, [sp, #4]
   17354:	ldrb	r3, [r5]
   17358:	cmp	r3, #0
   1735c:	beq	17468 <sigaltstack@plt+0x6188>
   17360:	mov	r8, sl
   17364:	mov	r4, #0
   17368:	mov	r6, r4
   1736c:	mov	r9, r4
   17370:	mov	fp, #1
   17374:	mov	r0, r5
   17378:	add	r6, r6, #1
   1737c:	add	r5, r5, #1
   17380:	ldrb	r3, [r0]
   17384:	cmp	r3, r7
   17388:	beq	173fc <sigaltstack@plt+0x611c>
   1738c:	str	r5, [sp, #4]
   17390:	ldrb	r3, [r5]
   17394:	cmp	r3, #0
   17398:	beq	17458 <sigaltstack@plt+0x6178>
   1739c:	add	r4, r4, #1
   173a0:	cmp	r6, #9
   173a4:	movls	r3, #0
   173a8:	andhi	r3, fp, #1
   173ac:	cmp	r3, #0
   173b0:	beq	17374 <sigaltstack@plt+0x6094>
   173b4:	add	r3, r6, r6, lsl #2
   173b8:	cmp	r3, r4
   173bc:	bhi	17374 <sigaltstack@plt+0x6094>
   173c0:	cmp	r8, #0
   173c4:	beq	17484 <sigaltstack@plt+0x61a4>
   173c8:	sub	r1, r4, r9
   173cc:	mov	r0, r8
   173d0:	bl	11220 <strnlen@plt>
   173d4:	ldrb	r3, [r8, r0]!
   173d8:	cmp	r3, #0
   173dc:	beq	17480 <sigaltstack@plt+0x61a0>
   173e0:	cmp	r8, #0
   173e4:	movne	r9, r4
   173e8:	bne	17374 <sigaltstack@plt+0x6094>
   173ec:	mov	r9, r4
   173f0:	b	17484 <sigaltstack@plt+0x61a4>
   173f4:	ldr	r0, [sp, #240]	; 0xf0
   173f8:	b	16804 <sigaltstack@plt+0x5524>
   173fc:	ldrb	r3, [sl, #1]
   17400:	cmp	r3, #0
   17404:	beq	16804 <sigaltstack@plt+0x5524>
   17408:	mov	lr, r5
   1740c:	ldrb	r2, [r5]
   17410:	cmp	r2, #0
   17414:	beq	17470 <sigaltstack@plt+0x6190>
   17418:	add	r4, r4, #2
   1741c:	cmp	r3, r2
   17420:	bne	17450 <sigaltstack@plt+0x6170>
   17424:	mov	ip, r5
   17428:	ldr	r1, [sp, #8]
   1742c:	ldrb	r3, [r1, #1]!
   17430:	cmp	r3, #0
   17434:	beq	16804 <sigaltstack@plt+0x5524>
   17438:	ldrb	r2, [ip, #1]!
   1743c:	cmp	r2, #0
   17440:	beq	17478 <sigaltstack@plt+0x6198>
   17444:	add	r4, r4, #1
   17448:	cmp	r3, r2
   1744c:	beq	1742c <sigaltstack@plt+0x614c>
   17450:	str	lr, [sp, #4]
   17454:	b	173a0 <sigaltstack@plt+0x60c0>
   17458:	mov	r0, #0
   1745c:	b	16804 <sigaltstack@plt+0x5524>
   17460:	ldr	r0, [sp, #4]
   17464:	b	16804 <sigaltstack@plt+0x5524>
   17468:	mov	r0, #0
   1746c:	b	16804 <sigaltstack@plt+0x5524>
   17470:	mov	r0, #0
   17474:	b	16804 <sigaltstack@plt+0x5524>
   17478:	mov	r0, #0
   1747c:	b	16804 <sigaltstack@plt+0x5524>
   17480:	mov	r9, r4
   17484:	mov	r0, sl
   17488:	bl	111a8 <strlen@plt>
   1748c:	add	r3, sp, #240	; 0xf0
   17490:	mov	r2, r0
   17494:	mov	r1, sl
   17498:	ldr	r0, [sp, #4]
   1749c:	bl	15d44 <sigaltstack@plt+0x4a64>
   174a0:	subs	fp, r0, #0
   174a4:	bne	173f4 <sigaltstack@plt+0x6114>
   174a8:	mov	r8, #0
   174ac:	b	17374 <sigaltstack@plt+0x6094>
   174b0:	add	r7, r7, #1
   174b4:	add	r6, fp, #1
   174b8:	b	16af4 <sigaltstack@plt+0x5814>
   174bc:	andeq	r9, r1, r4, asr #6
   174c0:	andeq	r9, r1, r4, ror #6
   174c4:			; <UNDEFINED> instruction: 0x00018eb8
   174c8:	andeq	r8, r1, r4, asr #29
   174cc:	ldrdeq	r8, [r1], -ip
   174d0:	strdeq	r8, [r1], -r4
   174d4:	push	{r4, r5, r6, r7, r8, lr}
   174d8:	mov	r4, #0
   174dc:	mov	r5, #1
   174e0:	ldr	r6, [pc, #136]	; 17570 <sigaltstack@plt+0x6290>
   174e4:	ldr	r8, [pc, #136]	; 17574 <sigaltstack@plt+0x6294>
   174e8:	b	1751c <sigaltstack@plt+0x623c>
   174ec:	mov	r1, r5
   174f0:	mov	r0, r8
   174f4:	bl	11118 <open64@plt>
   174f8:	cmp	r0, #0
   174fc:	bge	17554 <sigaltstack@plt+0x6274>
   17500:	b	17540 <sigaltstack@plt+0x6260>
   17504:	bl	111d8 <__errno_location@plt>
   17508:	ldr	r0, [r0]
   1750c:	pop	{r4, r5, r6, r7, r8, pc}
   17510:	add	r4, r4, #1
   17514:	cmp	r4, #3
   17518:	beq	17568 <sigaltstack@plt+0x6288>
   1751c:	mov	r1, r5
   17520:	mov	r0, r4
   17524:	bl	17a78 <sigaltstack@plt+0x6798>
   17528:	cmp	r0, #0
   1752c:	bge	17510 <sigaltstack@plt+0x6230>
   17530:	cmp	r4, #0
   17534:	moveq	r7, #1
   17538:	movne	r7, #0
   1753c:	beq	174ec <sigaltstack@plt+0x620c>
   17540:	mov	r1, r7
   17544:	mov	r0, r6
   17548:	bl	11118 <open64@plt>
   1754c:	cmp	r0, #0
   17550:	blt	17504 <sigaltstack@plt+0x6224>
   17554:	cmp	r0, #2
   17558:	ble	17510 <sigaltstack@plt+0x6230>
   1755c:	bl	112c8 <close@plt>
   17560:	mov	r0, #0
   17564:	pop	{r4, r5, r6, r7, r8, pc}
   17568:	mov	r0, #0
   1756c:	pop	{r4, r5, r6, r7, r8, pc}
   17570:	ldrdeq	r8, [r1], -r4
   17574:	andeq	r9, r1, r8, ror r3
   17578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1757c:	sub	sp, sp, #4096	; 0x1000
   17580:	sub	sp, sp, #28
   17584:	mov	fp, r0
   17588:	mov	r9, r1
   1758c:	mov	r6, r2
   17590:	mov	sl, r3
   17594:	mov	r1, #0
   17598:	str	r1, [sp]
   1759c:	mov	r3, r1
   175a0:	mov	r2, r1
   175a4:	mov	r0, r6
   175a8:	bl	10fc8 <iconv@plt>
   175ac:	str	fp, [sp, #8]
   175b0:	str	r9, [sp, #12]
   175b4:	cmp	r9, #0
   175b8:	beq	17734 <sigaltstack@plt+0x6454>
   175bc:	mov	r5, #0
   175c0:	add	r4, sp, #24
   175c4:	mov	r8, #4096	; 0x1000
   175c8:	sub	r7, r4, #4
   175cc:	b	175e8 <sigaltstack@plt+0x6308>
   175d0:	ldr	r3, [r4, #-8]
   175d4:	sub	r3, r3, r4
   175d8:	add	r5, r5, r3
   175dc:	ldr	r3, [r4, #-12]
   175e0:	cmp	r3, #0
   175e4:	beq	17628 <sigaltstack@plt+0x6348>
   175e8:	str	r4, [r4, #-8]
   175ec:	str	r8, [r4, #-4]
   175f0:	str	r7, [sp]
   175f4:	add	r3, sp, #16
   175f8:	add	r2, sp, #12
   175fc:	add	r1, sp, #8
   17600:	mov	r0, r6
   17604:	bl	10fc8 <iconv@plt>
   17608:	cmn	r0, #1
   1760c:	bne	175d0 <sigaltstack@plt+0x62f0>
   17610:	bl	111d8 <__errno_location@plt>
   17614:	ldr	r3, [r0]
   17618:	cmp	r3, #7
   1761c:	beq	175d0 <sigaltstack@plt+0x62f0>
   17620:	cmp	r3, #22
   17624:	bne	1773c <sigaltstack@plt+0x645c>
   17628:	add	r3, sp, #24
   1762c:	str	r3, [r3, #-8]
   17630:	mov	r2, #4096	; 0x1000
   17634:	str	r2, [r3, #-4]
   17638:	sub	r2, r3, #4
   1763c:	str	r2, [sp]
   17640:	sub	r3, r3, #8
   17644:	mov	r2, #0
   17648:	mov	r1, r2
   1764c:	mov	r0, r6
   17650:	bl	10fc8 <iconv@plt>
   17654:	cmn	r0, #1
   17658:	beq	1773c <sigaltstack@plt+0x645c>
   1765c:	add	r2, sp, #24
   17660:	ldr	r3, [sp, #16]
   17664:	sub	r3, r3, r2
   17668:	adds	r5, r3, r5
   1766c:	beq	17744 <sigaltstack@plt+0x6464>
   17670:	ldr	r8, [sl]
   17674:	cmp	r8, #0
   17678:	beq	17690 <sigaltstack@plt+0x63b0>
   1767c:	add	r3, sp, #4160	; 0x1040
   17680:	ldr	r3, [r3]
   17684:	ldr	r3, [r3]
   17688:	cmp	r5, r3
   1768c:	bls	176a0 <sigaltstack@plt+0x63c0>
   17690:	mov	r0, r5
   17694:	bl	15ae8 <sigaltstack@plt+0x4808>
   17698:	subs	r8, r0, #0
   1769c:	beq	17760 <sigaltstack@plt+0x6480>
   176a0:	mov	r1, #0
   176a4:	str	r1, [sp]
   176a8:	mov	r3, r1
   176ac:	mov	r2, r1
   176b0:	mov	r0, r6
   176b4:	bl	10fc8 <iconv@plt>
   176b8:	str	fp, [sp, #12]
   176bc:	str	r9, [sp, #16]
   176c0:	str	r8, [sp, #20]
   176c4:	str	r5, [sp, #24]
   176c8:	add	r4, sp, #24
   176cc:	sub	fp, r4, #4
   176d0:	sub	r9, r4, #8
   176d4:	sub	r7, r4, #12
   176d8:	ldr	r3, [r4, #-8]
   176dc:	cmp	r3, #0
   176e0:	beq	17774 <sigaltstack@plt+0x6494>
   176e4:	str	r4, [sp]
   176e8:	mov	r3, fp
   176ec:	mov	r2, r9
   176f0:	mov	r1, r7
   176f4:	mov	r0, r6
   176f8:	bl	10fc8 <iconv@plt>
   176fc:	cmn	r0, #1
   17700:	bne	176d8 <sigaltstack@plt+0x63f8>
   17704:	bl	111d8 <__errno_location@plt>
   17708:	ldr	r3, [r0]
   1770c:	cmp	r3, #22
   17710:	beq	17774 <sigaltstack@plt+0x6494>
   17714:	ldr	r3, [sl]
   17718:	cmp	r8, r3
   1771c:	mvneq	r0, #0
   17720:	beq	17754 <sigaltstack@plt+0x6474>
   17724:	mov	r0, r8
   17728:	bl	15a90 <sigaltstack@plt+0x47b0>
   1772c:	mvn	r0, #0
   17730:	b	17754 <sigaltstack@plt+0x6474>
   17734:	mov	r5, r9
   17738:	b	17628 <sigaltstack@plt+0x6348>
   1773c:	mvn	r0, #0
   17740:	b	17754 <sigaltstack@plt+0x6474>
   17744:	mov	r0, #0
   17748:	add	r3, sp, #4160	; 0x1040
   1774c:	ldr	r3, [r3]
   17750:	str	r0, [r3]
   17754:	add	sp, sp, #4096	; 0x1000
   17758:	add	sp, sp, #28
   1775c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17760:	bl	111d8 <__errno_location@plt>
   17764:	mov	r3, #12
   17768:	str	r3, [r0]
   1776c:	mvn	r0, #0
   17770:	b	17754 <sigaltstack@plt+0x6474>
   17774:	add	r3, sp, #24
   17778:	str	r3, [sp]
   1777c:	add	r3, sp, #20
   17780:	mov	r2, #0
   17784:	mov	r1, r2
   17788:	mov	r0, r6
   1778c:	bl	10fc8 <iconv@plt>
   17790:	cmn	r0, #1
   17794:	beq	17714 <sigaltstack@plt+0x6434>
   17798:	ldr	r3, [sp, #24]
   1779c:	cmp	r3, #0
   177a0:	bne	177bc <sigaltstack@plt+0x64dc>
   177a4:	str	r8, [sl]
   177a8:	add	r3, sp, #4160	; 0x1040
   177ac:	ldr	r3, [r3]
   177b0:	str	r5, [r3]
   177b4:	mov	r0, #0
   177b8:	b	17754 <sigaltstack@plt+0x6474>
   177bc:	bl	112bc <abort@plt>
   177c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177c4:	sub	sp, sp, #28
   177c8:	mov	r8, r1
   177cc:	str	r0, [sp, #20]
   177d0:	bl	111a8 <strlen@plt>
   177d4:	mov	r4, r0
   177d8:	str	r0, [sp, #16]
   177dc:	cmp	r0, #4096	; 0x1000
   177e0:	lslcc	r4, r0, #4
   177e4:	add	r7, r4, #1
   177e8:	mov	r0, r7
   177ec:	bl	15ae8 <sigaltstack@plt+0x4808>
   177f0:	subs	r6, r0, #0
   177f4:	beq	178a0 <sigaltstack@plt+0x65c0>
   177f8:	mov	r1, #0
   177fc:	str	r1, [sp]
   17800:	mov	r3, r1
   17804:	mov	r2, r1
   17808:	mov	r0, r8
   1780c:	bl	10fc8 <iconv@plt>
   17810:	str	r6, [sp, #8]
   17814:	str	r4, [sp, #12]
   17818:	add	r9, sp, #12
   1781c:	str	r9, [sp]
   17820:	add	r3, sp, #8
   17824:	add	r2, sp, #16
   17828:	add	r1, sp, #20
   1782c:	mov	r0, r8
   17830:	bl	10fc8 <iconv@plt>
   17834:	cmn	r0, #1
   17838:	bne	178dc <sigaltstack@plt+0x65fc>
   1783c:	bl	111d8 <__errno_location@plt>
   17840:	mov	sl, r0
   17844:	ldr	r3, [r0]
   17848:	cmp	r3, #22
   1784c:	beq	178dc <sigaltstack@plt+0x65fc>
   17850:	cmp	r3, #7
   17854:	bne	178b8 <sigaltstack@plt+0x65d8>
   17858:	ldr	r4, [sp, #8]
   1785c:	sub	r4, r4, r6
   17860:	lsl	r5, r7, #1
   17864:	cmp	r7, r5
   17868:	bcs	178b0 <sigaltstack@plt+0x65d0>
   1786c:	mov	r1, r5
   17870:	mov	r0, r6
   17874:	bl	15b70 <sigaltstack@plt+0x4890>
   17878:	cmp	r0, #0
   1787c:	beq	178d0 <sigaltstack@plt+0x65f0>
   17880:	add	r3, r0, r4
   17884:	str	r3, [sp, #8]
   17888:	sub	r3, r5, #1
   1788c:	sub	r4, r3, r4
   17890:	str	r4, [sp, #12]
   17894:	mov	r6, r0
   17898:	mov	r7, r5
   1789c:	b	1781c <sigaltstack@plt+0x653c>
   178a0:	bl	111d8 <__errno_location@plt>
   178a4:	mov	r3, #12
   178a8:	str	r3, [r0]
   178ac:	b	178c4 <sigaltstack@plt+0x65e4>
   178b0:	mov	r3, #12
   178b4:	str	r3, [r0]
   178b8:	mov	r0, r6
   178bc:	bl	15a90 <sigaltstack@plt+0x47b0>
   178c0:	mov	r6, #0
   178c4:	mov	r0, r6
   178c8:	add	sp, sp, #28
   178cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178d0:	mov	r3, #12
   178d4:	str	r3, [sl]
   178d8:	b	178b8 <sigaltstack@plt+0x65d8>
   178dc:	add	sl, sp, #12
   178e0:	mov	r9, #0
   178e4:	str	sl, [sp]
   178e8:	add	r3, sp, #8
   178ec:	mov	r2, r9
   178f0:	mov	r1, r9
   178f4:	mov	r0, r8
   178f8:	bl	10fc8 <iconv@plt>
   178fc:	cmn	r0, #1
   17900:	bne	17978 <sigaltstack@plt+0x6698>
   17904:	bl	111d8 <__errno_location@plt>
   17908:	mov	fp, r0
   1790c:	ldr	r3, [r0]
   17910:	cmp	r3, #7
   17914:	bne	178b8 <sigaltstack@plt+0x65d8>
   17918:	ldr	r4, [sp, #8]
   1791c:	sub	r4, r4, r6
   17920:	lsl	r5, r7, #1
   17924:	cmp	r7, r5
   17928:	bcs	17960 <sigaltstack@plt+0x6680>
   1792c:	mov	r1, r5
   17930:	mov	r0, r6
   17934:	bl	15b70 <sigaltstack@plt+0x4890>
   17938:	cmp	r0, #0
   1793c:	beq	1796c <sigaltstack@plt+0x668c>
   17940:	add	r3, r0, r4
   17944:	str	r3, [sp, #8]
   17948:	sub	r3, r5, #1
   1794c:	sub	r4, r3, r4
   17950:	str	r4, [sp, #12]
   17954:	mov	r6, r0
   17958:	mov	r7, r5
   1795c:	b	178e4 <sigaltstack@plt+0x6604>
   17960:	mov	r3, #12
   17964:	str	r3, [r0]
   17968:	b	178b8 <sigaltstack@plt+0x65d8>
   1796c:	mov	r3, #12
   17970:	str	r3, [fp]
   17974:	b	178b8 <sigaltstack@plt+0x65d8>
   17978:	ldr	r3, [sp, #8]
   1797c:	add	r2, r3, #1
   17980:	str	r2, [sp, #8]
   17984:	mov	r2, #0
   17988:	strb	r2, [r3]
   1798c:	ldr	r1, [sp, #8]
   17990:	sub	r1, r1, r6
   17994:	cmp	r7, r1
   17998:	bls	178c4 <sigaltstack@plt+0x65e4>
   1799c:	mov	r0, r6
   179a0:	bl	15b70 <sigaltstack@plt+0x4890>
   179a4:	cmp	r0, #0
   179a8:	movne	r6, r0
   179ac:	b	178c4 <sigaltstack@plt+0x65e4>
   179b0:	push	{r4, r5, r6, r7, r8, lr}
   179b4:	mov	r4, r0
   179b8:	ldrb	r3, [r0]
   179bc:	cmp	r3, #0
   179c0:	beq	179e0 <sigaltstack@plt+0x6700>
   179c4:	mov	r6, r1
   179c8:	mov	r5, r2
   179cc:	mov	r1, r2
   179d0:	mov	r0, r6
   179d4:	bl	15c0c <sigaltstack@plt+0x492c>
   179d8:	cmp	r0, #0
   179dc:	bne	17a08 <sigaltstack@plt+0x6728>
   179e0:	mov	r0, r4
   179e4:	bl	1107c <strdup@plt>
   179e8:	subs	r4, r0, #0
   179ec:	beq	179f8 <sigaltstack@plt+0x6718>
   179f0:	mov	r0, r4
   179f4:	pop	{r4, r5, r6, r7, r8, pc}
   179f8:	bl	111d8 <__errno_location@plt>
   179fc:	mov	r3, #12
   17a00:	str	r3, [r0]
   17a04:	b	179f0 <sigaltstack@plt+0x6710>
   17a08:	mov	r1, r6
   17a0c:	mov	r0, r5
   17a10:	bl	1113c <iconv_open@plt>
   17a14:	mov	r5, r0
   17a18:	cmn	r0, #1
   17a1c:	beq	17a70 <sigaltstack@plt+0x6790>
   17a20:	mov	r1, r0
   17a24:	mov	r0, r4
   17a28:	bl	177c0 <sigaltstack@plt+0x64e0>
   17a2c:	subs	r4, r0, #0
   17a30:	beq	17a54 <sigaltstack@plt+0x6774>
   17a34:	mov	r0, r5
   17a38:	bl	10fbc <iconv_close@plt>
   17a3c:	cmp	r0, #0
   17a40:	bge	179f0 <sigaltstack@plt+0x6710>
   17a44:	mov	r0, r4
   17a48:	bl	15a90 <sigaltstack@plt+0x47b0>
   17a4c:	mov	r4, #0
   17a50:	b	179f0 <sigaltstack@plt+0x6710>
   17a54:	bl	111d8 <__errno_location@plt>
   17a58:	mov	r6, r0
   17a5c:	ldr	r7, [r0]
   17a60:	mov	r0, r5
   17a64:	bl	10fbc <iconv_close@plt>
   17a68:	str	r7, [r6]
   17a6c:	b	179f0 <sigaltstack@plt+0x6710>
   17a70:	mov	r4, #0
   17a74:	b	179f0 <sigaltstack@plt+0x6710>
   17a78:	push	{r1, r2, r3}
   17a7c:	push	{r4, r5, r6, lr}
   17a80:	sub	sp, sp, #12
   17a84:	mov	r5, r0
   17a88:	ldr	r1, [sp, #28]
   17a8c:	add	r3, sp, #32
   17a90:	str	r3, [sp, #4]
   17a94:	cmp	r1, #0
   17a98:	beq	17ae0 <sigaltstack@plt+0x6800>
   17a9c:	ldr	r3, [pc, #540]	; 17cc0 <sigaltstack@plt+0x69e0>
   17aa0:	cmp	r1, r3
   17aa4:	beq	17b10 <sigaltstack@plt+0x6830>
   17aa8:	cmp	r1, #11
   17aac:	beq	17cb0 <sigaltstack@plt+0x69d0>
   17ab0:	bgt	17c3c <sigaltstack@plt+0x695c>
   17ab4:	cmp	r1, #3
   17ab8:	beq	17cb0 <sigaltstack@plt+0x69d0>
   17abc:	ble	17bfc <sigaltstack@plt+0x691c>
   17ac0:	cmp	r1, #8
   17ac4:	beq	17c1c <sigaltstack@plt+0x693c>
   17ac8:	ble	17c14 <sigaltstack@plt+0x6934>
   17acc:	cmp	r1, #9
   17ad0:	beq	17cb0 <sigaltstack@plt+0x69d0>
   17ad4:	cmp	r1, #10
   17ad8:	bne	17c74 <sigaltstack@plt+0x6994>
   17adc:	b	17c1c <sigaltstack@plt+0x693c>
   17ae0:	ldr	r3, [sp, #4]
   17ae4:	add	r2, r3, #4
   17ae8:	str	r2, [sp, #4]
   17aec:	ldr	r2, [r3]
   17af0:	mov	r1, #0
   17af4:	bl	11238 <fcntl64@plt>
   17af8:	mov	r4, r0
   17afc:	mov	r0, r4
   17b00:	add	sp, sp, #12
   17b04:	pop	{r4, r5, r6, lr}
   17b08:	add	sp, sp, #12
   17b0c:	bx	lr
   17b10:	ldr	r3, [sp, #4]
   17b14:	add	r2, r3, #4
   17b18:	str	r2, [sp, #4]
   17b1c:	ldr	r6, [r3]
   17b20:	ldr	r3, [pc, #412]	; 17cc4 <sigaltstack@plt+0x69e4>
   17b24:	ldr	r3, [r3]
   17b28:	cmp	r3, #0
   17b2c:	blt	17b8c <sigaltstack@plt+0x68ac>
   17b30:	mov	r2, r6
   17b34:	ldr	r1, [pc, #388]	; 17cc0 <sigaltstack@plt+0x69e0>
   17b38:	bl	11238 <fcntl64@plt>
   17b3c:	subs	r4, r0, #0
   17b40:	blt	17b54 <sigaltstack@plt+0x6874>
   17b44:	mov	r2, #1
   17b48:	ldr	r3, [pc, #372]	; 17cc4 <sigaltstack@plt+0x69e4>
   17b4c:	str	r2, [r3]
   17b50:	b	17afc <sigaltstack@plt+0x681c>
   17b54:	bl	111d8 <__errno_location@plt>
   17b58:	ldr	r3, [r0]
   17b5c:	cmp	r3, #22
   17b60:	bne	17b44 <sigaltstack@plt+0x6864>
   17b64:	mov	r2, r6
   17b68:	mov	r1, #0
   17b6c:	mov	r0, r5
   17b70:	bl	11238 <fcntl64@plt>
   17b74:	subs	r4, r0, #0
   17b78:	blt	17afc <sigaltstack@plt+0x681c>
   17b7c:	mvn	r2, #0
   17b80:	ldr	r3, [pc, #316]	; 17cc4 <sigaltstack@plt+0x69e4>
   17b84:	str	r2, [r3]
   17b88:	b	17bb0 <sigaltstack@plt+0x68d0>
   17b8c:	mov	r2, r6
   17b90:	mov	r1, #0
   17b94:	bl	11238 <fcntl64@plt>
   17b98:	subs	r4, r0, #0
   17b9c:	blt	17afc <sigaltstack@plt+0x681c>
   17ba0:	ldr	r3, [pc, #284]	; 17cc4 <sigaltstack@plt+0x69e4>
   17ba4:	ldr	r3, [r3]
   17ba8:	cmn	r3, #1
   17bac:	bne	17afc <sigaltstack@plt+0x681c>
   17bb0:	mov	r1, #1
   17bb4:	mov	r0, r4
   17bb8:	bl	11238 <fcntl64@plt>
   17bbc:	subs	r2, r0, #0
   17bc0:	blt	17bdc <sigaltstack@plt+0x68fc>
   17bc4:	orr	r2, r2, #1
   17bc8:	mov	r1, #2
   17bcc:	mov	r0, r4
   17bd0:	bl	11238 <fcntl64@plt>
   17bd4:	cmn	r0, #1
   17bd8:	bne	17afc <sigaltstack@plt+0x681c>
   17bdc:	bl	111d8 <__errno_location@plt>
   17be0:	mov	r5, r0
   17be4:	ldr	r6, [r0]
   17be8:	mov	r0, r4
   17bec:	bl	112c8 <close@plt>
   17bf0:	str	r6, [r5]
   17bf4:	mvn	r4, #0
   17bf8:	b	17afc <sigaltstack@plt+0x681c>
   17bfc:	cmp	r1, #1
   17c00:	beq	17cb0 <sigaltstack@plt+0x69d0>
   17c04:	bgt	17c1c <sigaltstack@plt+0x693c>
   17c08:	cmp	r1, #0
   17c0c:	bne	17c74 <sigaltstack@plt+0x6994>
   17c10:	b	17c1c <sigaltstack@plt+0x693c>
   17c14:	cmp	r1, #4
   17c18:	bne	17c74 <sigaltstack@plt+0x6994>
   17c1c:	ldr	r3, [sp, #4]
   17c20:	add	r2, r3, #4
   17c24:	str	r2, [sp, #4]
   17c28:	ldr	r2, [r3]
   17c2c:	mov	r0, r5
   17c30:	bl	11238 <fcntl64@plt>
   17c34:	mov	r4, r0
   17c38:	b	17afc <sigaltstack@plt+0x681c>
   17c3c:	ldr	r3, [pc, #132]	; 17cc8 <sigaltstack@plt+0x69e8>
   17c40:	cmp	r1, r3
   17c44:	bgt	17c94 <sigaltstack@plt+0x69b4>
   17c48:	sub	r3, r3, #1
   17c4c:	cmp	r1, r3
   17c50:	bge	17c1c <sigaltstack@plt+0x693c>
   17c54:	sub	r3, r3, #5
   17c58:	cmp	r1, r3
   17c5c:	beq	17cb0 <sigaltstack@plt+0x69d0>
   17c60:	add	r3, r3, #1
   17c64:	cmp	r1, r3
   17c68:	beq	17c1c <sigaltstack@plt+0x693c>
   17c6c:	cmp	r1, #1024	; 0x400
   17c70:	beq	17c1c <sigaltstack@plt+0x693c>
   17c74:	ldr	r3, [sp, #4]
   17c78:	add	r2, r3, #4
   17c7c:	str	r2, [sp, #4]
   17c80:	ldr	r2, [r3]
   17c84:	mov	r0, r5
   17c88:	bl	11238 <fcntl64@plt>
   17c8c:	mov	r4, r0
   17c90:	b	17afc <sigaltstack@plt+0x681c>
   17c94:	ldr	r3, [pc, #48]	; 17ccc <sigaltstack@plt+0x69ec>
   17c98:	cmp	r1, r3
   17c9c:	beq	17c1c <sigaltstack@plt+0x693c>
   17ca0:	blt	17cb0 <sigaltstack@plt+0x69d0>
   17ca4:	add	r3, r3, #1
   17ca8:	cmp	r1, r3
   17cac:	bne	17c74 <sigaltstack@plt+0x6994>
   17cb0:	mov	r0, r5
   17cb4:	bl	11238 <fcntl64@plt>
   17cb8:	mov	r4, r0
   17cbc:	b	17afc <sigaltstack@plt+0x681c>
   17cc0:	andeq	r0, r0, r6, lsl #8
   17cc4:	andeq	sl, r3, ip, asr #5
   17cc8:	andeq	r0, r0, r7, lsl #8
   17ccc:	andeq	r0, r0, r9, lsl #8
   17cd0:	cmn	r0, #-2147483631	; 0x80000011
   17cd4:	bhi	17d04 <sigaltstack@plt+0x6a24>
   17cd8:	push	{r4, lr}
   17cdc:	add	r0, r0, #16
   17ce0:	bl	11130 <malloc@plt>
   17ce4:	subs	r3, r0, #0
   17ce8:	beq	17d0c <sigaltstack@plt+0x6a2c>
   17cec:	add	r0, r3, #8
   17cf0:	bic	r0, r0, #15
   17cf4:	add	r0, r0, #8
   17cf8:	sub	r3, r0, r3
   17cfc:	strb	r3, [r0, #-1]
   17d00:	pop	{r4, pc}
   17d04:	mov	r0, #0
   17d08:	bx	lr
   17d0c:	mov	r0, #0
   17d10:	pop	{r4, pc}
   17d14:	push	{r4, lr}
   17d18:	tst	r0, #7
   17d1c:	bne	17d38 <sigaltstack@plt+0x6a58>
   17d20:	tst	r0, #8
   17d24:	popeq	{r4, pc}
   17d28:	ldrb	r3, [r0, #-1]
   17d2c:	sub	r0, r0, r3
   17d30:	bl	15a90 <sigaltstack@plt+0x47b0>
   17d34:	pop	{r4, pc}
   17d38:	bl	112bc <abort@plt>
   17d3c:	push	{r4, r5, r6, r7, r8, lr}
   17d40:	sub	sp, sp, #56	; 0x38
   17d44:	mov	r4, r0
   17d48:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   17d4c:	cmp	r0, #1
   17d50:	bls	17ee8 <sigaltstack@plt+0x6c08>
   17d54:	str	r4, [sp, #16]
   17d58:	mov	r4, #0
   17d5c:	strb	r4, [sp]
   17d60:	str	r4, [sp, #4]
   17d64:	str	r4, [sp, #8]
   17d68:	strb	r4, [sp, #12]
   17d6c:	mov	r6, #1
   17d70:	mov	r5, r4
   17d74:	ldr	r7, [pc, #380]	; 17ef8 <sigaltstack@plt+0x6c18>
   17d78:	b	17e34 <sigaltstack@plt+0x6b54>
   17d7c:	add	r0, sp, #4
   17d80:	bl	11040 <mbsinit@plt>
   17d84:	cmp	r0, #0
   17d88:	beq	17e80 <sigaltstack@plt+0x6ba0>
   17d8c:	strb	r6, [sp]
   17d90:	ldr	r8, [sp, #16]
   17d94:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   17d98:	mov	r1, r0
   17d9c:	mov	r0, r8
   17da0:	bl	14360 <sigaltstack@plt+0x3080>
   17da4:	add	r3, sp, #4
   17da8:	mov	r2, r0
   17dac:	mov	r1, r8
   17db0:	add	r0, sp, #28
   17db4:	bl	15b18 <sigaltstack@plt+0x4838>
   17db8:	str	r0, [sp, #20]
   17dbc:	cmn	r0, #1
   17dc0:	streq	r6, [sp, #20]
   17dc4:	strbeq	r5, [sp, #24]
   17dc8:	beq	17e10 <sigaltstack@plt+0x6b30>
   17dcc:	cmn	r0, #2
   17dd0:	beq	17e94 <sigaltstack@plt+0x6bb4>
   17dd4:	cmp	r0, #0
   17dd8:	bne	17dfc <sigaltstack@plt+0x6b1c>
   17ddc:	str	r6, [sp, #20]
   17de0:	ldr	r3, [sp, #16]
   17de4:	ldrb	r3, [r3]
   17de8:	cmp	r3, #0
   17dec:	bne	17ea8 <sigaltstack@plt+0x6bc8>
   17df0:	ldr	r3, [sp, #28]
   17df4:	cmp	r3, #0
   17df8:	bne	17ebc <sigaltstack@plt+0x6bdc>
   17dfc:	strb	r6, [sp, #24]
   17e00:	add	r0, sp, #4
   17e04:	bl	11040 <mbsinit@plt>
   17e08:	cmp	r0, #0
   17e0c:	strbne	r5, [sp]
   17e10:	ldrb	r3, [sp, #24]
   17e14:	cmp	r3, #0
   17e18:	bne	17ed0 <sigaltstack@plt+0x6bf0>
   17e1c:	add	r4, r4, #1
   17e20:	ldr	r2, [sp, #20]
   17e24:	ldr	r3, [sp, #16]
   17e28:	add	r3, r3, r2
   17e2c:	str	r3, [sp, #16]
   17e30:	strb	r5, [sp, #12]
   17e34:	ldrb	r3, [sp, #12]
   17e38:	cmp	r3, #0
   17e3c:	bne	17e10 <sigaltstack@plt+0x6b30>
   17e40:	ldrb	r3, [sp]
   17e44:	cmp	r3, #0
   17e48:	bne	17d90 <sigaltstack@plt+0x6ab0>
   17e4c:	ldr	r1, [sp, #16]
   17e50:	ldrb	r3, [r1]
   17e54:	lsr	r2, r3, #5
   17e58:	and	r3, r3, #31
   17e5c:	ldr	r2, [r7, r2, lsl #2]
   17e60:	lsr	r3, r2, r3
   17e64:	tst	r3, #1
   17e68:	beq	17d7c <sigaltstack@plt+0x6a9c>
   17e6c:	str	r6, [sp, #20]
   17e70:	ldrb	r3, [r1]
   17e74:	str	r3, [sp, #28]
   17e78:	strb	r6, [sp, #24]
   17e7c:	b	17e10 <sigaltstack@plt+0x6b30>
   17e80:	ldr	r3, [pc, #116]	; 17efc <sigaltstack@plt+0x6c1c>
   17e84:	mov	r2, #143	; 0x8f
   17e88:	ldr	r1, [pc, #112]	; 17f00 <sigaltstack@plt+0x6c20>
   17e8c:	ldr	r0, [pc, #112]	; 17f04 <sigaltstack@plt+0x6c24>
   17e90:	bl	112d4 <__assert_fail@plt>
   17e94:	ldr	r0, [sp, #16]
   17e98:	bl	111a8 <strlen@plt>
   17e9c:	str	r0, [sp, #20]
   17ea0:	strb	r5, [sp, #24]
   17ea4:	b	17e10 <sigaltstack@plt+0x6b30>
   17ea8:	ldr	r3, [pc, #76]	; 17efc <sigaltstack@plt+0x6c1c>
   17eac:	mov	r2, #171	; 0xab
   17eb0:	ldr	r1, [pc, #72]	; 17f00 <sigaltstack@plt+0x6c20>
   17eb4:	ldr	r0, [pc, #76]	; 17f08 <sigaltstack@plt+0x6c28>
   17eb8:	bl	112d4 <__assert_fail@plt>
   17ebc:	ldr	r3, [pc, #56]	; 17efc <sigaltstack@plt+0x6c1c>
   17ec0:	mov	r2, #172	; 0xac
   17ec4:	ldr	r1, [pc, #52]	; 17f00 <sigaltstack@plt+0x6c20>
   17ec8:	ldr	r0, [pc, #60]	; 17f0c <sigaltstack@plt+0x6c2c>
   17ecc:	bl	112d4 <__assert_fail@plt>
   17ed0:	ldr	r3, [sp, #28]
   17ed4:	cmp	r3, #0
   17ed8:	bne	17e1c <sigaltstack@plt+0x6b3c>
   17edc:	mov	r0, r4
   17ee0:	add	sp, sp, #56	; 0x38
   17ee4:	pop	{r4, r5, r6, r7, r8, pc}
   17ee8:	mov	r0, r4
   17eec:	bl	111a8 <strlen@plt>
   17ef0:	mov	r4, r0
   17ef4:	b	17edc <sigaltstack@plt+0x6bfc>
   17ef8:	andeq	r9, r1, r4, asr #6
   17efc:	andeq	r9, r1, r4, lsl #7
   17f00:			; <UNDEFINED> instruction: 0x00018eb8
   17f04:	andeq	r8, r1, r4, asr #29
   17f08:	ldrdeq	r8, [r1], -ip
   17f0c:	strdeq	r8, [r1], -r4
   17f10:	subs	r2, r1, #1
   17f14:	bxeq	lr
   17f18:	bcc	180f0 <sigaltstack@plt+0x6e10>
   17f1c:	cmp	r0, r1
   17f20:	bls	180d4 <sigaltstack@plt+0x6df4>
   17f24:	tst	r1, r2
   17f28:	beq	180e0 <sigaltstack@plt+0x6e00>
   17f2c:	clz	r3, r0
   17f30:	clz	r2, r1
   17f34:	sub	r3, r2, r3
   17f38:	rsbs	r3, r3, #31
   17f3c:	addne	r3, r3, r3, lsl #1
   17f40:	mov	r2, #0
   17f44:	addne	pc, pc, r3, lsl #2
   17f48:	nop			; (mov r0, r0)
   17f4c:	cmp	r0, r1, lsl #31
   17f50:	adc	r2, r2, r2
   17f54:	subcs	r0, r0, r1, lsl #31
   17f58:	cmp	r0, r1, lsl #30
   17f5c:	adc	r2, r2, r2
   17f60:	subcs	r0, r0, r1, lsl #30
   17f64:	cmp	r0, r1, lsl #29
   17f68:	adc	r2, r2, r2
   17f6c:	subcs	r0, r0, r1, lsl #29
   17f70:	cmp	r0, r1, lsl #28
   17f74:	adc	r2, r2, r2
   17f78:	subcs	r0, r0, r1, lsl #28
   17f7c:	cmp	r0, r1, lsl #27
   17f80:	adc	r2, r2, r2
   17f84:	subcs	r0, r0, r1, lsl #27
   17f88:	cmp	r0, r1, lsl #26
   17f8c:	adc	r2, r2, r2
   17f90:	subcs	r0, r0, r1, lsl #26
   17f94:	cmp	r0, r1, lsl #25
   17f98:	adc	r2, r2, r2
   17f9c:	subcs	r0, r0, r1, lsl #25
   17fa0:	cmp	r0, r1, lsl #24
   17fa4:	adc	r2, r2, r2
   17fa8:	subcs	r0, r0, r1, lsl #24
   17fac:	cmp	r0, r1, lsl #23
   17fb0:	adc	r2, r2, r2
   17fb4:	subcs	r0, r0, r1, lsl #23
   17fb8:	cmp	r0, r1, lsl #22
   17fbc:	adc	r2, r2, r2
   17fc0:	subcs	r0, r0, r1, lsl #22
   17fc4:	cmp	r0, r1, lsl #21
   17fc8:	adc	r2, r2, r2
   17fcc:	subcs	r0, r0, r1, lsl #21
   17fd0:	cmp	r0, r1, lsl #20
   17fd4:	adc	r2, r2, r2
   17fd8:	subcs	r0, r0, r1, lsl #20
   17fdc:	cmp	r0, r1, lsl #19
   17fe0:	adc	r2, r2, r2
   17fe4:	subcs	r0, r0, r1, lsl #19
   17fe8:	cmp	r0, r1, lsl #18
   17fec:	adc	r2, r2, r2
   17ff0:	subcs	r0, r0, r1, lsl #18
   17ff4:	cmp	r0, r1, lsl #17
   17ff8:	adc	r2, r2, r2
   17ffc:	subcs	r0, r0, r1, lsl #17
   18000:	cmp	r0, r1, lsl #16
   18004:	adc	r2, r2, r2
   18008:	subcs	r0, r0, r1, lsl #16
   1800c:	cmp	r0, r1, lsl #15
   18010:	adc	r2, r2, r2
   18014:	subcs	r0, r0, r1, lsl #15
   18018:	cmp	r0, r1, lsl #14
   1801c:	adc	r2, r2, r2
   18020:	subcs	r0, r0, r1, lsl #14
   18024:	cmp	r0, r1, lsl #13
   18028:	adc	r2, r2, r2
   1802c:	subcs	r0, r0, r1, lsl #13
   18030:	cmp	r0, r1, lsl #12
   18034:	adc	r2, r2, r2
   18038:	subcs	r0, r0, r1, lsl #12
   1803c:	cmp	r0, r1, lsl #11
   18040:	adc	r2, r2, r2
   18044:	subcs	r0, r0, r1, lsl #11
   18048:	cmp	r0, r1, lsl #10
   1804c:	adc	r2, r2, r2
   18050:	subcs	r0, r0, r1, lsl #10
   18054:	cmp	r0, r1, lsl #9
   18058:	adc	r2, r2, r2
   1805c:	subcs	r0, r0, r1, lsl #9
   18060:	cmp	r0, r1, lsl #8
   18064:	adc	r2, r2, r2
   18068:	subcs	r0, r0, r1, lsl #8
   1806c:	cmp	r0, r1, lsl #7
   18070:	adc	r2, r2, r2
   18074:	subcs	r0, r0, r1, lsl #7
   18078:	cmp	r0, r1, lsl #6
   1807c:	adc	r2, r2, r2
   18080:	subcs	r0, r0, r1, lsl #6
   18084:	cmp	r0, r1, lsl #5
   18088:	adc	r2, r2, r2
   1808c:	subcs	r0, r0, r1, lsl #5
   18090:	cmp	r0, r1, lsl #4
   18094:	adc	r2, r2, r2
   18098:	subcs	r0, r0, r1, lsl #4
   1809c:	cmp	r0, r1, lsl #3
   180a0:	adc	r2, r2, r2
   180a4:	subcs	r0, r0, r1, lsl #3
   180a8:	cmp	r0, r1, lsl #2
   180ac:	adc	r2, r2, r2
   180b0:	subcs	r0, r0, r1, lsl #2
   180b4:	cmp	r0, r1, lsl #1
   180b8:	adc	r2, r2, r2
   180bc:	subcs	r0, r0, r1, lsl #1
   180c0:	cmp	r0, r1
   180c4:	adc	r2, r2, r2
   180c8:	subcs	r0, r0, r1
   180cc:	mov	r0, r2
   180d0:	bx	lr
   180d4:	moveq	r0, #1
   180d8:	movne	r0, #0
   180dc:	bx	lr
   180e0:	clz	r2, r1
   180e4:	rsb	r2, r2, #31
   180e8:	lsr	r0, r0, r2
   180ec:	bx	lr
   180f0:	cmp	r0, #0
   180f4:	mvnne	r0, #0
   180f8:	b	18430 <sigaltstack@plt+0x7150>
   180fc:	cmp	r1, #0
   18100:	beq	180f0 <sigaltstack@plt+0x6e10>
   18104:	push	{r0, r1, lr}
   18108:	bl	17f10 <sigaltstack@plt+0x6c30>
   1810c:	pop	{r1, r2, lr}
   18110:	mul	r3, r2, r0
   18114:	sub	r1, r1, r3
   18118:	bx	lr
   1811c:	cmp	r1, #0
   18120:	beq	1832c <sigaltstack@plt+0x704c>
   18124:	eor	ip, r0, r1
   18128:	rsbmi	r1, r1, #0
   1812c:	subs	r2, r1, #1
   18130:	beq	182f8 <sigaltstack@plt+0x7018>
   18134:	movs	r3, r0
   18138:	rsbmi	r3, r0, #0
   1813c:	cmp	r3, r1
   18140:	bls	18304 <sigaltstack@plt+0x7024>
   18144:	tst	r1, r2
   18148:	beq	18314 <sigaltstack@plt+0x7034>
   1814c:	clz	r2, r3
   18150:	clz	r0, r1
   18154:	sub	r2, r0, r2
   18158:	rsbs	r2, r2, #31
   1815c:	addne	r2, r2, r2, lsl #1
   18160:	mov	r0, #0
   18164:	addne	pc, pc, r2, lsl #2
   18168:	nop			; (mov r0, r0)
   1816c:	cmp	r3, r1, lsl #31
   18170:	adc	r0, r0, r0
   18174:	subcs	r3, r3, r1, lsl #31
   18178:	cmp	r3, r1, lsl #30
   1817c:	adc	r0, r0, r0
   18180:	subcs	r3, r3, r1, lsl #30
   18184:	cmp	r3, r1, lsl #29
   18188:	adc	r0, r0, r0
   1818c:	subcs	r3, r3, r1, lsl #29
   18190:	cmp	r3, r1, lsl #28
   18194:	adc	r0, r0, r0
   18198:	subcs	r3, r3, r1, lsl #28
   1819c:	cmp	r3, r1, lsl #27
   181a0:	adc	r0, r0, r0
   181a4:	subcs	r3, r3, r1, lsl #27
   181a8:	cmp	r3, r1, lsl #26
   181ac:	adc	r0, r0, r0
   181b0:	subcs	r3, r3, r1, lsl #26
   181b4:	cmp	r3, r1, lsl #25
   181b8:	adc	r0, r0, r0
   181bc:	subcs	r3, r3, r1, lsl #25
   181c0:	cmp	r3, r1, lsl #24
   181c4:	adc	r0, r0, r0
   181c8:	subcs	r3, r3, r1, lsl #24
   181cc:	cmp	r3, r1, lsl #23
   181d0:	adc	r0, r0, r0
   181d4:	subcs	r3, r3, r1, lsl #23
   181d8:	cmp	r3, r1, lsl #22
   181dc:	adc	r0, r0, r0
   181e0:	subcs	r3, r3, r1, lsl #22
   181e4:	cmp	r3, r1, lsl #21
   181e8:	adc	r0, r0, r0
   181ec:	subcs	r3, r3, r1, lsl #21
   181f0:	cmp	r3, r1, lsl #20
   181f4:	adc	r0, r0, r0
   181f8:	subcs	r3, r3, r1, lsl #20
   181fc:	cmp	r3, r1, lsl #19
   18200:	adc	r0, r0, r0
   18204:	subcs	r3, r3, r1, lsl #19
   18208:	cmp	r3, r1, lsl #18
   1820c:	adc	r0, r0, r0
   18210:	subcs	r3, r3, r1, lsl #18
   18214:	cmp	r3, r1, lsl #17
   18218:	adc	r0, r0, r0
   1821c:	subcs	r3, r3, r1, lsl #17
   18220:	cmp	r3, r1, lsl #16
   18224:	adc	r0, r0, r0
   18228:	subcs	r3, r3, r1, lsl #16
   1822c:	cmp	r3, r1, lsl #15
   18230:	adc	r0, r0, r0
   18234:	subcs	r3, r3, r1, lsl #15
   18238:	cmp	r3, r1, lsl #14
   1823c:	adc	r0, r0, r0
   18240:	subcs	r3, r3, r1, lsl #14
   18244:	cmp	r3, r1, lsl #13
   18248:	adc	r0, r0, r0
   1824c:	subcs	r3, r3, r1, lsl #13
   18250:	cmp	r3, r1, lsl #12
   18254:	adc	r0, r0, r0
   18258:	subcs	r3, r3, r1, lsl #12
   1825c:	cmp	r3, r1, lsl #11
   18260:	adc	r0, r0, r0
   18264:	subcs	r3, r3, r1, lsl #11
   18268:	cmp	r3, r1, lsl #10
   1826c:	adc	r0, r0, r0
   18270:	subcs	r3, r3, r1, lsl #10
   18274:	cmp	r3, r1, lsl #9
   18278:	adc	r0, r0, r0
   1827c:	subcs	r3, r3, r1, lsl #9
   18280:	cmp	r3, r1, lsl #8
   18284:	adc	r0, r0, r0
   18288:	subcs	r3, r3, r1, lsl #8
   1828c:	cmp	r3, r1, lsl #7
   18290:	adc	r0, r0, r0
   18294:	subcs	r3, r3, r1, lsl #7
   18298:	cmp	r3, r1, lsl #6
   1829c:	adc	r0, r0, r0
   182a0:	subcs	r3, r3, r1, lsl #6
   182a4:	cmp	r3, r1, lsl #5
   182a8:	adc	r0, r0, r0
   182ac:	subcs	r3, r3, r1, lsl #5
   182b0:	cmp	r3, r1, lsl #4
   182b4:	adc	r0, r0, r0
   182b8:	subcs	r3, r3, r1, lsl #4
   182bc:	cmp	r3, r1, lsl #3
   182c0:	adc	r0, r0, r0
   182c4:	subcs	r3, r3, r1, lsl #3
   182c8:	cmp	r3, r1, lsl #2
   182cc:	adc	r0, r0, r0
   182d0:	subcs	r3, r3, r1, lsl #2
   182d4:	cmp	r3, r1, lsl #1
   182d8:	adc	r0, r0, r0
   182dc:	subcs	r3, r3, r1, lsl #1
   182e0:	cmp	r3, r1
   182e4:	adc	r0, r0, r0
   182e8:	subcs	r3, r3, r1
   182ec:	cmp	ip, #0
   182f0:	rsbmi	r0, r0, #0
   182f4:	bx	lr
   182f8:	teq	ip, r0
   182fc:	rsbmi	r0, r0, #0
   18300:	bx	lr
   18304:	movcc	r0, #0
   18308:	asreq	r0, ip, #31
   1830c:	orreq	r0, r0, #1
   18310:	bx	lr
   18314:	clz	r2, r1
   18318:	rsb	r2, r2, #31
   1831c:	cmp	ip, #0
   18320:	lsr	r0, r3, r2
   18324:	rsbmi	r0, r0, #0
   18328:	bx	lr
   1832c:	cmp	r0, #0
   18330:	mvngt	r0, #-2147483648	; 0x80000000
   18334:	movlt	r0, #-2147483648	; 0x80000000
   18338:	b	18430 <sigaltstack@plt+0x7150>
   1833c:	cmp	r1, #0
   18340:	beq	1832c <sigaltstack@plt+0x704c>
   18344:	push	{r0, r1, lr}
   18348:	bl	18124 <sigaltstack@plt+0x6e44>
   1834c:	pop	{r1, r2, lr}
   18350:	mul	r3, r2, r0
   18354:	sub	r1, r1, r3
   18358:	bx	lr
   1835c:	cmp	r3, #0
   18360:	cmpeq	r2, #0
   18364:	bne	18388 <sigaltstack@plt+0x70a8>
   18368:	cmp	r1, #0
   1836c:	movlt	r1, #-2147483648	; 0x80000000
   18370:	movlt	r0, #0
   18374:	blt	18384 <sigaltstack@plt+0x70a4>
   18378:	cmpeq	r0, #0
   1837c:	mvnne	r1, #-2147483648	; 0x80000000
   18380:	mvnne	r0, #0
   18384:	b	18430 <sigaltstack@plt+0x7150>
   18388:	sub	sp, sp, #8
   1838c:	push	{sp, lr}
   18390:	cmp	r1, #0
   18394:	blt	183b4 <sigaltstack@plt+0x70d4>
   18398:	cmp	r3, #0
   1839c:	blt	183e8 <sigaltstack@plt+0x7108>
   183a0:	bl	18440 <sigaltstack@plt+0x7160>
   183a4:	ldr	lr, [sp, #4]
   183a8:	add	sp, sp, #8
   183ac:	pop	{r2, r3}
   183b0:	bx	lr
   183b4:	rsbs	r0, r0, #0
   183b8:	sbc	r1, r1, r1, lsl #1
   183bc:	cmp	r3, #0
   183c0:	blt	1840c <sigaltstack@plt+0x712c>
   183c4:	bl	18440 <sigaltstack@plt+0x7160>
   183c8:	ldr	lr, [sp, #4]
   183cc:	add	sp, sp, #8
   183d0:	pop	{r2, r3}
   183d4:	rsbs	r0, r0, #0
   183d8:	sbc	r1, r1, r1, lsl #1
   183dc:	rsbs	r2, r2, #0
   183e0:	sbc	r3, r3, r3, lsl #1
   183e4:	bx	lr
   183e8:	rsbs	r2, r2, #0
   183ec:	sbc	r3, r3, r3, lsl #1
   183f0:	bl	18440 <sigaltstack@plt+0x7160>
   183f4:	ldr	lr, [sp, #4]
   183f8:	add	sp, sp, #8
   183fc:	pop	{r2, r3}
   18400:	rsbs	r0, r0, #0
   18404:	sbc	r1, r1, r1, lsl #1
   18408:	bx	lr
   1840c:	rsbs	r2, r2, #0
   18410:	sbc	r3, r3, r3, lsl #1
   18414:	bl	18440 <sigaltstack@plt+0x7160>
   18418:	ldr	lr, [sp, #4]
   1841c:	add	sp, sp, #8
   18420:	pop	{r2, r3}
   18424:	rsbs	r2, r2, #0
   18428:	sbc	r3, r3, r3, lsl #1
   1842c:	bx	lr
   18430:	push	{r1, lr}
   18434:	mov	r0, #8
   18438:	bl	10fb0 <raise@plt>
   1843c:	pop	{r1, pc}
   18440:	cmp	r1, r3
   18444:	push	{r4, r5, r6, r7, r8, r9, lr}
   18448:	cmpeq	r0, r2
   1844c:	mov	r4, r0
   18450:	mov	r5, r1
   18454:	ldr	r9, [sp, #28]
   18458:	movcc	r0, #0
   1845c:	movcc	r1, #0
   18460:	bcc	18558 <sigaltstack@plt+0x7278>
   18464:	cmp	r3, #0
   18468:	clzeq	ip, r2
   1846c:	clzne	ip, r3
   18470:	addeq	ip, ip, #32
   18474:	cmp	r5, #0
   18478:	clzeq	r1, r4
   1847c:	addeq	r1, r1, #32
   18480:	clzne	r1, r5
   18484:	sub	ip, ip, r1
   18488:	sub	lr, ip, #32
   1848c:	lsl	r7, r3, ip
   18490:	rsb	r8, ip, #32
   18494:	orr	r7, r7, r2, lsl lr
   18498:	orr	r7, r7, r2, lsr r8
   1849c:	lsl	r6, r2, ip
   184a0:	cmp	r5, r7
   184a4:	cmpeq	r4, r6
   184a8:	movcc	r0, #0
   184ac:	movcc	r1, #0
   184b0:	bcc	184cc <sigaltstack@plt+0x71ec>
   184b4:	mov	r3, #1
   184b8:	subs	r4, r4, r6
   184bc:	lsl	r1, r3, lr
   184c0:	lsl	r0, r3, ip
   184c4:	orr	r1, r1, r3, lsr r8
   184c8:	sbc	r5, r5, r7
   184cc:	cmp	ip, #0
   184d0:	beq	18558 <sigaltstack@plt+0x7278>
   184d4:	lsrs	r3, r7, #1
   184d8:	rrx	r2, r6
   184dc:	mov	r6, ip
   184e0:	b	18504 <sigaltstack@plt+0x7224>
   184e4:	subs	r4, r4, r2
   184e8:	sbc	r5, r5, r3
   184ec:	adds	r4, r4, r4
   184f0:	adc	r5, r5, r5
   184f4:	adds	r4, r4, #1
   184f8:	adc	r5, r5, #0
   184fc:	subs	r6, r6, #1
   18500:	beq	18520 <sigaltstack@plt+0x7240>
   18504:	cmp	r5, r3
   18508:	cmpeq	r4, r2
   1850c:	bcs	184e4 <sigaltstack@plt+0x7204>
   18510:	adds	r4, r4, r4
   18514:	adc	r5, r5, r5
   18518:	subs	r6, r6, #1
   1851c:	bne	18504 <sigaltstack@plt+0x7224>
   18520:	lsr	r6, r4, ip
   18524:	lsr	r7, r5, ip
   18528:	orr	r6, r6, r5, lsl r8
   1852c:	adds	r2, r0, r4
   18530:	orr	r6, r6, r5, lsr lr
   18534:	adc	r3, r1, r5
   18538:	lsl	r1, r7, ip
   1853c:	orr	r1, r1, r6, lsl lr
   18540:	lsl	r0, r6, ip
   18544:	orr	r1, r1, r6, lsr r8
   18548:	subs	r0, r2, r0
   1854c:	mov	r4, r6
   18550:	mov	r5, r7
   18554:	sbc	r1, r3, r1
   18558:	cmp	r9, #0
   1855c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   18560:	strd	r4, [r9]
   18564:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18568:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1856c:	mov	r7, r0
   18570:	ldr	r6, [pc, #72]	; 185c0 <sigaltstack@plt+0x72e0>
   18574:	ldr	r5, [pc, #72]	; 185c4 <sigaltstack@plt+0x72e4>
   18578:	add	r6, pc, r6
   1857c:	add	r5, pc, r5
   18580:	sub	r6, r6, r5
   18584:	mov	r8, r1
   18588:	mov	r9, r2
   1858c:	bl	10f78 <calloc@plt-0x20>
   18590:	asrs	r6, r6, #2
   18594:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18598:	mov	r4, #0
   1859c:	add	r4, r4, #1
   185a0:	ldr	r3, [r5], #4
   185a4:	mov	r2, r9
   185a8:	mov	r1, r8
   185ac:	mov	r0, r7
   185b0:	blx	r3
   185b4:	cmp	r6, r4
   185b8:	bne	1859c <sigaltstack@plt+0x72bc>
   185bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185c0:	muleq	r1, r0, r9
   185c4:	andeq	r1, r1, r8, lsl #19
   185c8:	bx	lr

Disassembly of section .fini:

000185cc <.fini>:
   185cc:	push	{r3, lr}
   185d0:	pop	{r3, pc}
