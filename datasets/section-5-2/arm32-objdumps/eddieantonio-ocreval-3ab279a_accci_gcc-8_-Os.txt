
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

000108d8 <.init>:
   108d8:	push	{r3, lr}
   108dc:	bl	10b10 <getc@plt+0xa4>
   108e0:	pop	{r3, pc}

Disassembly of section .plt:

000108e4 <calloc@plt-0x14>:
   108e4:	push	{lr}		; (str lr, [sp, #-4]!)
   108e8:	ldr	lr, [pc, #4]	; 108f4 <calloc@plt-0x4>
   108ec:	add	lr, pc, lr
   108f0:	ldr	pc, [lr, #8]!
   108f4:	andeq	r3, r1, ip, lsl #14

000108f8 <calloc@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #77824	; 0x13000
   10900:	ldr	pc, [ip, #1804]!	; 0x70c

00010904 <strcmp@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #77824	; 0x13000
   1090c:	ldr	pc, [ip, #1796]!	; 0x704

00010910 <printf@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #77824	; 0x13000
   10918:	ldr	pc, [ip, #1788]!	; 0x6fc

0001091c <fopen@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #77824	; 0x13000
   10924:	ldr	pc, [ip, #1780]!	; 0x6f4

00010928 <free@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #77824	; 0x13000
   10930:	ldr	pc, [ip, #1772]!	; 0x6ec

00010934 <utf8proc_get_property@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #77824	; 0x13000
   1093c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010940 <fgets@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #77824	; 0x13000
   10948:	ldr	pc, [ip, #1756]!	; 0x6dc

0001094c <utf8proc_encode_char@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #77824	; 0x13000
   10954:	ldr	pc, [ip, #1748]!	; 0x6d4

00010958 <strdup@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #77824	; 0x13000
   10960:	ldr	pc, [ip, #1740]!	; 0x6cc

00010964 <rewind@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #77824	; 0x13000
   1096c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010970 <unlink@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #77824	; 0x13000
   10978:	ldr	pc, [ip, #1724]!	; 0x6bc

0001097c <utf8proc_tolower@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #77824	; 0x13000
   10984:	ldr	pc, [ip, #1716]!	; 0x6b4

00010988 <__xstat@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #77824	; 0x13000
   10990:	ldr	pc, [ip, #1708]!	; 0x6ac

00010994 <fread@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #77824	; 0x13000
   1099c:	ldr	pc, [ip, #1700]!	; 0x6a4

000109a0 <utf8proc_iterate@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #77824	; 0x13000
   109a8:	ldr	pc, [ip, #1692]!	; 0x69c

000109ac <__libc_start_main@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1684]!	; 0x694

000109b8 <__sysv_signal@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1676]!	; 0x68c

000109c4 <__gmon_start__@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1668]!	; 0x684

000109d0 <getpid@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1660]!	; 0x67c

000109dc <exit@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1652]!	; 0x674

000109e8 <utf8proc_category@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1644]!	; 0x66c

000109f4 <strlen@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1636]!	; 0x664

00010a00 <fprintf@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1628]!	; 0x65c

00010a0c <sqrt@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1620]!	; 0x654

00010a18 <__isoc99_sscanf@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1612]!	; 0x64c

00010a24 <fclose@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1604]!	; 0x644

00010a30 <sprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #77824	; 0x13000
   10a38:	ldr	pc, [ip, #1596]!	; 0x63c

00010a3c <utf8proc_errmsg@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #77824	; 0x13000
   10a44:	ldr	pc, [ip, #1588]!	; 0x634

00010a48 <fputs@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #77824	; 0x13000
   10a50:	ldr	pc, [ip, #1580]!	; 0x62c

00010a54 <strncmp@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #77824	; 0x13000
   10a5c:	ldr	pc, [ip, #1572]!	; 0x624

00010a60 <abort@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #77824	; 0x13000
   10a68:	ldr	pc, [ip, #1564]!	; 0x61c

00010a6c <getc@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #77824	; 0x13000
   10a74:	ldr	pc, [ip, #1556]!	; 0x614

Disassembly of section .text:

00010a78 <error@@Base-0x1394>:
   10a78:	push	{r0, r1, r2, r4, r5, lr}
   10a7c:	mov	r3, #0
   10a80:	mov	r5, r1
   10a84:	ldr	r2, [pc, #64]	; 10acc <getc@plt+0x60>
   10a88:	str	r0, [sp, #4]
   10a8c:	add	r0, sp, #4
   10a90:	bl	11f2c <error@@Base+0x120>
   10a94:	ldr	r3, [sp, #4]
   10a98:	cmp	r3, #1
   10a9c:	movgt	r4, #0
   10aa0:	bgt	10aac <getc@plt+0x40>
   10aa4:	ldr	r0, [pc, #36]	; 10ad0 <getc@plt+0x64>
   10aa8:	bl	11e0c <error@@Base>
   10aac:	ldr	r0, [r5, r4, lsl #2]
   10ab0:	add	r4, r4, #1
   10ab4:	bl	10bc8 <getc@plt+0x15c>
   10ab8:	ldr	r3, [sp, #4]
   10abc:	cmp	r3, r4
   10ac0:	bgt	10aac <getc@plt+0x40>
   10ac4:	bl	10c00 <getc@plt+0x194>
   10ac8:	bl	11db4 <getc@plt+0x1348>
   10acc:	andeq	r2, r1, r8, lsr r9
   10ad0:	andeq	r2, r1, sl, ror #18
   10ad4:	mov	fp, #0
   10ad8:	mov	lr, #0
   10adc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ae0:	mov	r2, sp
   10ae4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ae8:	push	{r0}		; (str r0, [sp, #-4]!)
   10aec:	ldr	ip, [pc, #16]	; 10b04 <getc@plt+0x98>
   10af0:	push	{ip}		; (str ip, [sp, #-4]!)
   10af4:	ldr	r0, [pc, #12]	; 10b08 <getc@plt+0x9c>
   10af8:	ldr	r3, [pc, #12]	; 10b0c <getc@plt+0xa0>
   10afc:	bl	109ac <__libc_start_main@plt>
   10b00:	bl	10a60 <abort@plt>
   10b04:	andeq	r2, r1, r4, lsl #17
   10b08:	andeq	r0, r1, r8, ror sl
   10b0c:	andeq	r2, r1, r4, lsr #16
   10b10:	ldr	r3, [pc, #20]	; 10b2c <getc@plt+0xc0>
   10b14:	ldr	r2, [pc, #20]	; 10b30 <getc@plt+0xc4>
   10b18:	add	r3, pc, r3
   10b1c:	ldr	r2, [r3, r2]
   10b20:	cmp	r2, #0
   10b24:	bxeq	lr
   10b28:	b	109c4 <__gmon_start__@plt>
   10b2c:	andeq	r3, r1, r0, ror #9
   10b30:	andeq	r0, r0, ip, lsl #1
   10b34:	ldr	r0, [pc, #24]	; 10b54 <getc@plt+0xe8>
   10b38:	ldr	r3, [pc, #24]	; 10b58 <getc@plt+0xec>
   10b3c:	cmp	r3, r0
   10b40:	bxeq	lr
   10b44:	ldr	r3, [pc, #16]	; 10b5c <getc@plt+0xf0>
   10b48:	cmp	r3, #0
   10b4c:	bxeq	lr
   10b50:	bx	r3
   10b54:	andeq	r4, r2, r0, lsr #1
   10b58:	andeq	r4, r2, r0, lsr #1
   10b5c:	andeq	r0, r0, r0
   10b60:	ldr	r0, [pc, #36]	; 10b8c <getc@plt+0x120>
   10b64:	ldr	r1, [pc, #36]	; 10b90 <getc@plt+0x124>
   10b68:	sub	r1, r1, r0
   10b6c:	asr	r1, r1, #2
   10b70:	add	r1, r1, r1, lsr #31
   10b74:	asrs	r1, r1, #1
   10b78:	bxeq	lr
   10b7c:	ldr	r3, [pc, #16]	; 10b94 <getc@plt+0x128>
   10b80:	cmp	r3, #0
   10b84:	bxeq	lr
   10b88:	bx	r3
   10b8c:	andeq	r4, r2, r0, lsr #1
   10b90:	andeq	r4, r2, r0, lsr #1
   10b94:	andeq	r0, r0, r0
   10b98:	push	{r4, lr}
   10b9c:	ldr	r4, [pc, #24]	; 10bbc <getc@plt+0x150>
   10ba0:	ldrb	r3, [r4]
   10ba4:	cmp	r3, #0
   10ba8:	popne	{r4, pc}
   10bac:	bl	10b34 <getc@plt+0xc8>
   10bb0:	mov	r3, #1
   10bb4:	strb	r3, [r4]
   10bb8:	pop	{r4, pc}
   10bbc:	strheq	r4, [r2], -r0
   10bc0:	b	10b60 <getc@plt+0xf4>
   10bc4:	andeq	r0, r0, r0
   10bc8:	push	{r4, r5, r6, lr}
   10bcc:	mov	r1, r0
   10bd0:	ldr	r4, [pc, #32]	; 10bf8 <getc@plt+0x18c>
   10bd4:	mov	r0, r4
   10bd8:	ldm	r4, {r5, r6}
   10bdc:	bl	10ff4 <getc@plt+0x588>
   10be0:	ldm	r4, {r1, r2}
   10be4:	ldr	r0, [pc, #16]	; 10bfc <getc@plt+0x190>
   10be8:	sub	r2, r2, r6
   10bec:	sub	r1, r1, r5
   10bf0:	pop	{r4, r5, r6, lr}
   10bf4:	b	116e0 <getc@plt+0xc74>
   10bf8:	andseq	r4, r3, r8, lsr #10
   10bfc:	addseq	r6, fp, r8, ror #25
   10c00:	push	{r4, lr}
   10c04:	sub	sp, sp, #32
   10c08:	add	r2, sp, #24
   10c0c:	add	r1, sp, #16
   10c10:	ldr	r4, [pc, #136]	; 10ca0 <getc@plt+0x234>
   10c14:	mov	r0, r4
   10c18:	bl	1172c <getc@plt+0xcc0>
   10c1c:	ldr	r1, [r4, #12]
   10c20:	ldr	r4, [pc, #124]	; 10ca4 <getc@plt+0x238>
   10c24:	ldr	r0, [pc, #124]	; 10ca8 <getc@plt+0x23c>
   10c28:	bl	10910 <printf@plt>
   10c2c:	ldr	r0, [pc, #120]	; 10cac <getc@plt+0x240>
   10c30:	ldr	r1, [r4]
   10c34:	bl	10910 <printf@plt>
   10c38:	ldr	r0, [pc, #112]	; 10cb0 <getc@plt+0x244>
   10c3c:	ldr	r1, [r4, #4]
   10c40:	bl	10910 <printf@plt>
   10c44:	ldrd	r2, [r4]
   10c48:	vldr	d6, [pc, #72]	; 10c98 <getc@plt+0x22c>
   10c4c:	ldr	r0, [pc, #96]	; 10cb4 <getc@plt+0x248>
   10c50:	sub	r3, r2, r3
   10c54:	vmov	s14, r3
   10c58:	vcvt.f64.s32	d7, s14
   10c5c:	vmul.f64	d7, d7, d6
   10c60:	vmov	s13, r2
   10c64:	vcvt.f64.s32	d6, s13
   10c68:	vdiv.f64	d7, d7, d6
   10c6c:	vmov	r2, r3, d7
   10c70:	bl	10910 <printf@plt>
   10c74:	ldr	r3, [pc, #60]	; 10cb8 <getc@plt+0x24c>
   10c78:	ldr	r0, [pc, #60]	; 10cbc <getc@plt+0x250>
   10c7c:	str	r3, [sp, #8]
   10c80:	ldrd	r2, [sp, #24]
   10c84:	strd	r2, [sp]
   10c88:	ldrd	r2, [sp, #16]
   10c8c:	bl	10910 <printf@plt>
   10c90:	add	sp, sp, #32
   10c94:	pop	{r4, pc}
   10c98:	andeq	r0, r0, r0
   10c9c:	subsmi	r0, r9, r0
   10ca0:	addseq	r6, fp, r8, ror #25
   10ca4:	andseq	r4, r3, r8, lsr #10
   10ca8:	andeq	r2, r1, r4, lsr #17
   10cac:			; <UNDEFINED> instruction: 0x000128ba
   10cb0:	andeq	r2, r1, lr, asr #17
   10cb4:	ldrdeq	r2, [r1], -lr
   10cb8:	andeq	r2, r1, r7, lsl #18
   10cbc:	strdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   10cc0:	mov	r2, r0
   10cc4:	push	{r4, lr}
   10cc8:	mov	r1, #99	; 0x63
   10ccc:	ldr	r0, [pc, #12]	; 10ce0 <getc@plt+0x274>
   10cd0:	bl	10940 <fgets@plt>
   10cd4:	adds	r0, r0, #0
   10cd8:	movne	r0, #1
   10cdc:	pop	{r4, pc}
   10ce0:	strheq	r4, [r2], -r1
   10ce4:	push	{r4, r5, r6, lr}
   10ce8:	mov	r5, r1
   10cec:	mov	r4, r2
   10cf0:	bl	10cc0 <getc@plt+0x254>
   10cf4:	cmp	r0, #0
   10cf8:	bne	10d04 <getc@plt+0x298>
   10cfc:	mov	r0, #0
   10d00:	pop	{r4, r5, r6, pc}
   10d04:	mov	r2, r5
   10d08:	ldr	r1, [pc, #32]	; 10d30 <getc@plt+0x2c4>
   10d0c:	ldr	r0, [pc, #32]	; 10d34 <getc@plt+0x2c8>
   10d10:	bl	10a18 <__isoc99_sscanf@plt>
   10d14:	cmp	r0, #1
   10d18:	bne	10cfc <getc@plt+0x290>
   10d1c:	ldr	r3, [r4]
   10d20:	ldr	r2, [r5]
   10d24:	add	r3, r3, r2
   10d28:	str	r3, [r4]
   10d2c:	pop	{r4, r5, r6, pc}
   10d30:	andeq	r2, r1, sp, lsl #19
   10d34:	strheq	r4, [r2], -r1
   10d38:	push	{r4, lr}
   10d3c:	sub	sp, sp, #24
   10d40:	mov	r4, r1
   10d44:	bl	10cc0 <getc@plt+0x254>
   10d48:	cmp	r0, #0
   10d4c:	bne	10d5c <getc@plt+0x2f0>
   10d50:	mov	r0, #0
   10d54:	add	sp, sp, #24
   10d58:	pop	{r4, pc}
   10d5c:	add	r3, sp, #20
   10d60:	add	r2, sp, #8
   10d64:	ldr	r1, [pc, #100]	; 10dd0 <getc@plt+0x364>
   10d68:	str	r3, [sp, #4]
   10d6c:	add	r3, sp, #16
   10d70:	ldr	r0, [pc, #92]	; 10dd4 <getc@plt+0x368>
   10d74:	str	r3, [sp]
   10d78:	add	r3, sp, #12
   10d7c:	bl	10a18 <__isoc99_sscanf@plt>
   10d80:	cmp	r0, #4
   10d84:	bne	10d50 <getc@plt+0x2e4>
   10d88:	ldr	r3, [r4]
   10d8c:	mov	r0, #1
   10d90:	ldr	r2, [sp, #8]
   10d94:	add	r3, r3, r2
   10d98:	ldr	r2, [sp, #12]
   10d9c:	str	r3, [r4]
   10da0:	ldr	r3, [r4, #4]
   10da4:	add	r3, r3, r2
   10da8:	ldr	r2, [sp, #16]
   10dac:	str	r3, [r4, #4]
   10db0:	ldr	r3, [r4, #8]
   10db4:	add	r3, r3, r2
   10db8:	ldr	r2, [sp, #20]
   10dbc:	str	r3, [r4, #8]
   10dc0:	ldr	r3, [r4, #12]
   10dc4:	add	r3, r3, r2
   10dc8:	str	r3, [r4, #12]
   10dcc:	b	10d54 <getc@plt+0x2e8>
   10dd0:	andeq	r2, r1, r1, lsl #19
   10dd4:	strheq	r4, [r2], -r1
   10dd8:	push	{r0, r1, r2, r3, r4, lr}
   10ddc:	str	r2, [sp, #8]
   10de0:	ldr	r3, [r1, #12]
   10de4:	str	r3, [sp, #4]
   10de8:	ldr	r3, [r1, #8]
   10dec:	str	r3, [sp]
   10df0:	ldrd	r2, [r1]
   10df4:	ldr	r1, [pc, #8]	; 10e04 <getc@plt+0x398>
   10df8:	bl	10a00 <fprintf@plt>
   10dfc:	add	sp, sp, #20
   10e00:	pop	{pc}		; (ldr pc, [sp], #4)
   10e04:	muleq	r1, r1, r9
   10e08:	cmp	r2, #0
   10e0c:	vmov	s14, r1
   10e10:	bne	10e20 <getc@plt+0x3b4>
   10e14:	mov	r1, r0
   10e18:	ldr	r0, [pc, #48]	; 10e50 <getc@plt+0x3e4>
   10e1c:	b	10a48 <fputs@plt>
   10e20:	vldr	d6, [pc, #32]	; 10e48 <getc@plt+0x3dc>
   10e24:	vcvt.f64.s32	d7, s14
   10e28:	ldr	r1, [pc, #36]	; 10e54 <getc@plt+0x3e8>
   10e2c:	vmul.f64	d7, d7, d6
   10e30:	vmov	s13, r2
   10e34:	vcvt.f64.s32	d6, s13
   10e38:	vdiv.f64	d7, d7, d6
   10e3c:	vmov	r2, r3, d7
   10e40:	b	10a00 <fprintf@plt>
   10e44:	nop	{0}
   10e48:	andeq	r0, r0, r0
   10e4c:	subsmi	r0, r9, r0
   10e50:	andeq	r2, r1, fp, lsr #19
   10e54:			; <UNDEFINED> instruction: 0x000129b4
   10e58:	ldr	r2, [r0, #12]
   10e5c:	ldr	r3, [r1, #12]
   10e60:	cmp	r2, r3
   10e64:	beq	10e70 <getc@plt+0x404>
   10e68:	sub	r0, r3, r2
   10e6c:	bx	lr
   10e70:	ldr	r2, [r0, #16]
   10e74:	ldr	r3, [r1, #16]
   10e78:	cmp	r2, r3
   10e7c:	bne	10e68 <getc@plt+0x3fc>
   10e80:	ldr	r0, [r0, #8]
   10e84:	ldr	r1, [r1, #8]
   10e88:	b	11cb8 <getc@plt+0x124c>
   10e8c:	push	{r4, r5, r6, r7, lr}
   10e90:	mov	r4, r1
   10e94:	mov	r6, r2
   10e98:	sub	sp, sp, #20
   10e9c:	mov	r7, r3
   10ea0:	mov	r5, r0
   10ea4:	ldrd	r2, [r1]
   10ea8:	ldr	r1, [pc, #80]	; 10f00 <getc@plt+0x494>
   10eac:	bl	10a00 <fprintf@plt>
   10eb0:	ldr	r2, [r4]
   10eb4:	mov	r0, r5
   10eb8:	ldr	r1, [r4, #4]
   10ebc:	sub	r1, r2, r1
   10ec0:	bl	10e08 <getc@plt+0x39c>
   10ec4:	cmp	r6, #0
   10ec8:	movne	r2, r6
   10ecc:	ldrne	r1, [pc, #48]	; 10f04 <getc@plt+0x498>
   10ed0:	bne	10ef0 <getc@plt+0x484>
   10ed4:	add	r2, sp, #4
   10ed8:	mov	r1, r7
   10edc:	mov	r3, #1
   10ee0:	mov	r0, r6
   10ee4:	bl	124b4 <error@@Base+0x6a8>
   10ee8:	ldr	r1, [pc, #24]	; 10f08 <getc@plt+0x49c>
   10eec:	add	r2, sp, #4
   10ef0:	mov	r0, r5
   10ef4:	bl	10a00 <fprintf@plt>
   10ef8:	add	sp, sp, #20
   10efc:	pop	{r4, r5, r6, r7, pc}
   10f00:			; <UNDEFINED> instruction: 0x000129ba
   10f04:	andeq	r2, r1, r4, lsr #19
   10f08:	andeq	r2, r1, r5, asr #19
   10f0c:	push	{r4, r5, r6, r7, r8, lr}
   10f10:	mov	r4, r0
   10f14:	mov	r0, r1
   10f18:	mov	r6, r2
   10f1c:	mov	r5, r3
   10f20:	mov	r7, r1
   10f24:	bl	11b98 <getc@plt+0x112c>
   10f28:	sxth	r0, r0
   10f2c:	add	r0, r4, r0, lsl #3
   10f30:	ldr	r3, [r0, #68]	; 0x44
   10f34:	add	r3, r3, r6
   10f38:	str	r3, [r0, #68]	; 0x44
   10f3c:	ldr	r3, [r0, #72]	; 0x48
   10f40:	add	r3, r3, r5
   10f44:	str	r3, [r0, #72]	; 0x48
   10f48:	ldr	r3, [r4, #2116]	; 0x844
   10f4c:	add	r3, r3, r6
   10f50:	str	r3, [r4, #2116]	; 0x844
   10f54:	ldr	r3, [r4, #2120]	; 0x848
   10f58:	add	r3, r3, r5
   10f5c:	str	r3, [r4, #2120]	; 0x848
   10f60:	add	r4, r4, r7, lsl #3
   10f64:	add	r4, r4, #8192	; 0x2000
   10f68:	ldr	r3, [r4, #1988]	; 0x7c4
   10f6c:	ldr	r2, [r4, #1992]	; 0x7c8
   10f70:	add	r3, r3, r6
   10f74:	add	r2, r2, r5
   10f78:	str	r3, [r4, #1988]	; 0x7c4
   10f7c:	str	r2, [r4, #1992]	; 0x7c8
   10f80:	pop	{r4, r5, r6, r7, r8, pc}
   10f84:	push	{r4, r5, r6, r7, r8, lr}
   10f88:	add	r4, r0, #2112	; 0x840
   10f8c:	mov	r8, r1
   10f90:	add	r4, r4, #12
   10f94:	mov	r7, r2
   10f98:	mov	r0, r4
   10f9c:	mov	r6, r3
   10fa0:	bl	11940 <getc@plt+0xed4>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fc0 <getc@plt+0x554>
   10fac:	ldrd	r2, [r0, #12]
   10fb0:	add	r2, r2, r7
   10fb4:	add	r3, r3, r6
   10fb8:	strd	r2, [r0, #12]
   10fbc:	pop	{r4, r5, r6, r7, r8, pc}
   10fc0:	mov	r1, #20
   10fc4:	mov	r0, #1
   10fc8:	bl	11e48 <error@@Base+0x3c>
   10fcc:	mov	r5, r0
   10fd0:	mov	r0, r8
   10fd4:	bl	10958 <strdup@plt>
   10fd8:	mov	r1, r5
   10fdc:	str	r0, [r5, #8]
   10fe0:	mov	r0, r4
   10fe4:	str	r7, [r5, #12]
   10fe8:	str	r6, [r5, #16]
   10fec:	pop	{r4, r5, r6, r7, r8, lr}
   10ff0:	b	11984 <getc@plt+0xf18>
   10ff4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10ff8:	mov	r7, r1
   10ffc:	sub	sp, sp, #28
   11000:	mov	r5, r0
   11004:	mov	r0, r7
   11008:	ldr	r1, [pc, #696]	; 112c8 <getc@plt+0x85c>
   1100c:	bl	11ed0 <error@@Base+0xc4>
   11010:	mov	r4, r0
   11014:	bl	10cc0 <getc@plt+0x254>
   11018:	cmp	r0, #0
   1101c:	beq	112b4 <getc@plt+0x848>
   11020:	mov	r2, #40	; 0x28
   11024:	ldr	r1, [pc, #672]	; 112cc <getc@plt+0x860>
   11028:	ldr	r0, [pc, #672]	; 112d0 <getc@plt+0x864>
   1102c:	bl	10a54 <strncmp@plt>
   11030:	cmp	r0, #0
   11034:	ldr	r6, [pc, #660]	; 112d0 <getc@plt+0x864>
   11038:	bne	112b4 <getc@plt+0x848>
   1103c:	mov	r0, r4
   11040:	bl	10cc0 <getc@plt+0x254>
   11044:	cmp	r0, #0
   11048:	beq	112b4 <getc@plt+0x848>
   1104c:	ldr	r1, [pc, #640]	; 112d4 <getc@plt+0x868>
   11050:	mov	r0, r6
   11054:	bl	10904 <strcmp@plt>
   11058:	cmp	r0, #0
   1105c:	bne	112b4 <getc@plt+0x848>
   11060:	mov	r2, r5
   11064:	add	r1, sp, #4
   11068:	mov	r0, r4
   1106c:	bl	10ce4 <getc@plt+0x278>
   11070:	cmp	r0, #0
   11074:	beq	112b4 <getc@plt+0x848>
   11078:	add	r2, r5, #4
   1107c:	add	r1, sp, #8
   11080:	mov	r0, r4
   11084:	bl	10ce4 <getc@plt+0x278>
   11088:	cmp	r0, #0
   1108c:	beq	112b4 <getc@plt+0x848>
   11090:	mov	r0, r4
   11094:	bl	10cc0 <getc@plt+0x254>
   11098:	cmp	r0, #0
   1109c:	beq	112b4 <getc@plt+0x848>
   110a0:	mov	r0, r4
   110a4:	bl	10cc0 <getc@plt+0x254>
   110a8:	cmp	r0, #0
   110ac:	beq	112b4 <getc@plt+0x848>
   110b0:	add	r2, r5, #8
   110b4:	add	r1, sp, #12
   110b8:	mov	r0, r4
   110bc:	bl	10ce4 <getc@plt+0x278>
   110c0:	cmp	r0, #0
   110c4:	beq	112b4 <getc@plt+0x848>
   110c8:	add	r2, r5, #12
   110cc:	add	r1, sp, #12
   110d0:	mov	r0, r4
   110d4:	bl	10ce4 <getc@plt+0x278>
   110d8:	cmp	r0, #0
   110dc:	beq	112b4 <getc@plt+0x848>
   110e0:	add	r2, r5, #16
   110e4:	add	r1, sp, #12
   110e8:	mov	r0, r4
   110ec:	bl	10ce4 <getc@plt+0x278>
   110f0:	cmp	r0, #0
   110f4:	beq	112b4 <getc@plt+0x848>
   110f8:	mov	r0, r4
   110fc:	bl	10cc0 <getc@plt+0x254>
   11100:	cmp	r0, #0
   11104:	beq	112b4 <getc@plt+0x848>
   11108:	mov	r0, r4
   1110c:	bl	10cc0 <getc@plt+0x254>
   11110:	cmp	r0, #0
   11114:	beq	112b4 <getc@plt+0x848>
   11118:	mov	r0, r4
   1111c:	bl	10cc0 <getc@plt+0x254>
   11120:	cmp	r0, #0
   11124:	beq	112b4 <getc@plt+0x848>
   11128:	mov	r0, r4
   1112c:	bl	10cc0 <getc@plt+0x254>
   11130:	cmp	r0, #0
   11134:	beq	112b4 <getc@plt+0x848>
   11138:	add	r1, r5, #20
   1113c:	mov	r0, r4
   11140:	bl	10d38 <getc@plt+0x2cc>
   11144:	cmp	r0, #0
   11148:	beq	112b4 <getc@plt+0x848>
   1114c:	add	r1, r5, #36	; 0x24
   11150:	mov	r0, r4
   11154:	bl	10d38 <getc@plt+0x2cc>
   11158:	cmp	r0, #0
   1115c:	beq	112b4 <getc@plt+0x848>
   11160:	add	r1, r5, #52	; 0x34
   11164:	mov	r0, r4
   11168:	bl	10d38 <getc@plt+0x2cc>
   1116c:	cmp	r0, #0
   11170:	beq	112b4 <getc@plt+0x848>
   11174:	mov	r0, r4
   11178:	bl	10cc0 <getc@plt+0x254>
   1117c:	cmp	r0, #0
   11180:	beq	112b4 <getc@plt+0x848>
   11184:	mov	r0, r4
   11188:	bl	10cc0 <getc@plt+0x254>
   1118c:	cmp	r0, #0
   11190:	beq	111a0 <getc@plt+0x734>
   11194:	ldrb	r3, [r6]
   11198:	cmp	r3, #10
   1119c:	bne	11184 <getc@plt+0x718>
   111a0:	ldr	r3, [sp, #8]
   111a4:	cmp	r3, #0
   111a8:	bgt	11210 <getc@plt+0x7a4>
   111ac:	ldr	r3, [sp, #4]
   111b0:	cmp	r3, #0
   111b4:	ble	11200 <getc@plt+0x794>
   111b8:	mov	r0, r4
   111bc:	bl	10cc0 <getc@plt+0x254>
   111c0:	cmp	r0, #0
   111c4:	beq	11200 <getc@plt+0x794>
   111c8:	ldr	r8, [pc, #264]	; 112d8 <getc@plt+0x86c>
   111cc:	ldr	r7, [pc, #252]	; 112d0 <getc@plt+0x864>
   111d0:	ldr	r9, [pc, #260]	; 112dc <getc@plt+0x870>
   111d4:	mov	r0, r4
   111d8:	bl	10cc0 <getc@plt+0x254>
   111dc:	cmp	r0, #0
   111e0:	beq	11200 <getc@plt+0x794>
   111e4:	add	r3, sp, #16
   111e8:	add	r2, sp, #12
   111ec:	mov	r1, r8
   111f0:	mov	r0, r7
   111f4:	bl	10a18 <__isoc99_sscanf@plt>
   111f8:	cmp	r0, #2
   111fc:	beq	1126c <getc@plt+0x800>
   11200:	mov	r0, r4
   11204:	bl	11cf4 <getc@plt+0x1288>
   11208:	add	sp, sp, #28
   1120c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11210:	mov	r0, r4
   11214:	bl	10cc0 <getc@plt+0x254>
   11218:	cmp	r0, #0
   1121c:	beq	111ac <getc@plt+0x740>
   11220:	ldr	r7, [pc, #168]	; 112d0 <getc@plt+0x864>
   11224:	ldr	r8, [pc, #172]	; 112d8 <getc@plt+0x86c>
   11228:	add	r9, r7, #20
   1122c:	mov	r0, r4
   11230:	bl	10cc0 <getc@plt+0x254>
   11234:	cmp	r0, #0
   11238:	beq	111ac <getc@plt+0x740>
   1123c:	add	r3, sp, #16
   11240:	add	r2, sp, #12
   11244:	mov	r1, r8
   11248:	mov	r0, r7
   1124c:	bl	10a18 <__isoc99_sscanf@plt>
   11250:	cmp	r0, #2
   11254:	bne	111ac <getc@plt+0x740>
   11258:	mov	r1, r9
   1125c:	mov	r0, r5
   11260:	ldrd	r2, [sp, #12]
   11264:	bl	10f84 <getc@plt+0x518>
   11268:	b	1122c <getc@plt+0x7c0>
   1126c:	ldrb	r3, [r6, #31]
   11270:	cmp	r3, #125	; 0x7d
   11274:	ldrbeq	r3, [r6, #30]
   11278:	beq	11288 <getc@plt+0x81c>
   1127c:	cmp	r3, #92	; 0x5c
   11280:	bne	112a0 <getc@plt+0x834>
   11284:	mov	r3, #10
   11288:	str	r3, [sp, #20]
   1128c:	mov	r0, r5
   11290:	ldrd	r2, [sp, #12]
   11294:	ldr	r1, [sp, #20]
   11298:	bl	10f0c <getc@plt+0x4a0>
   1129c:	b	111d4 <getc@plt+0x768>
   112a0:	add	r2, sp, #20
   112a4:	mov	r1, r9
   112a8:	ldr	r0, [pc, #48]	; 112e0 <getc@plt+0x874>
   112ac:	bl	10a18 <__isoc99_sscanf@plt>
   112b0:	b	1128c <getc@plt+0x820>
   112b4:	cmp	r7, #0
   112b8:	ldr	r1, [pc, #36]	; 112e4 <getc@plt+0x878>
   112bc:	movne	r1, r7
   112c0:	ldr	r0, [pc, #32]	; 112e8 <getc@plt+0x87c>
   112c4:	bl	11e90 <error@@Base+0x84>
   112c8:			; <UNDEFINED> instruction: 0x000136b5
   112cc:	ldrdeq	r2, [r1], -r4
   112d0:	strheq	r4, [r2], -r1
   112d4:	andeq	r3, r1, r4, ror r6
   112d8:	andeq	r2, r1, r9, lsl #19
   112dc:	strdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   112e0:	ldrdeq	r4, [r2], -r0
   112e4:	andeq	r2, r1, lr, asr #19
   112e8:	andeq	r2, r1, r3, lsl #20
   112ec:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   112f0:	mov	r4, r0
   112f4:	mov	r0, r1
   112f8:	mov	r7, r4
   112fc:	mov	r6, #0
   11300:	ldr	r1, [pc, #588]	; 11554 <getc@plt+0xae8>
   11304:	bl	11ed0 <error@@Base+0xc4>
   11308:	mov	r5, r0
   1130c:	ldr	r3, [pc, #580]	; 11558 <getc@plt+0xaec>
   11310:	ldr	r2, [pc, #580]	; 1155c <getc@plt+0xaf0>
   11314:	ldr	r1, [pc, #580]	; 11560 <getc@plt+0xaf4>
   11318:	bl	10a00 <fprintf@plt>
   1131c:	ldr	r3, [pc, #576]	; 11564 <getc@plt+0xaf8>
   11320:	mov	r0, r5
   11324:	ldr	r1, [pc, #572]	; 11568 <getc@plt+0xafc>
   11328:	ldr	r2, [r4]
   1132c:	bl	10a00 <fprintf@plt>
   11330:	ldr	r3, [pc, #564]	; 1156c <getc@plt+0xb00>
   11334:	mov	r0, r5
   11338:	ldr	r1, [pc, #552]	; 11568 <getc@plt+0xafc>
   1133c:	ldr	r2, [r4, #4]
   11340:	bl	10a00 <fprintf@plt>
   11344:	ldr	r2, [r4]
   11348:	mov	r0, r5
   1134c:	ldr	r1, [r4, #4]
   11350:	sub	r1, r2, r1
   11354:	bl	10e08 <getc@plt+0x39c>
   11358:	ldr	r1, [pc, #528]	; 11570 <getc@plt+0xb04>
   1135c:	mov	r0, r5
   11360:	bl	10a00 <fprintf@plt>
   11364:	ldr	r3, [pc, #520]	; 11574 <getc@plt+0xb08>
   11368:	mov	r0, r5
   1136c:	ldr	r1, [pc, #500]	; 11568 <getc@plt+0xafc>
   11370:	ldr	r2, [r4, #8]
   11374:	bl	10a00 <fprintf@plt>
   11378:	ldr	r3, [pc, #504]	; 11578 <getc@plt+0xb0c>
   1137c:	mov	r0, r5
   11380:	ldr	r1, [pc, #480]	; 11568 <getc@plt+0xafc>
   11384:	ldr	r2, [r4, #12]
   11388:	bl	10a00 <fprintf@plt>
   1138c:	ldr	r3, [pc, #488]	; 1157c <getc@plt+0xb10>
   11390:	mov	r0, r5
   11394:	ldr	r1, [pc, #460]	; 11568 <getc@plt+0xafc>
   11398:	ldr	r2, [r4, #16]
   1139c:	bl	10a00 <fprintf@plt>
   113a0:	mov	r0, r5
   113a4:	ldr	r2, [r4]
   113a8:	ldr	r1, [r4, #8]
   113ac:	ldr	r3, [r4, #12]
   113b0:	add	r1, r1, r3
   113b4:	bl	10e08 <getc@plt+0x39c>
   113b8:	ldr	r1, [pc, #448]	; 11580 <getc@plt+0xb14>
   113bc:	mov	r0, r5
   113c0:	bl	10a00 <fprintf@plt>
   113c4:	ldr	r2, [r4]
   113c8:	mov	r0, r5
   113cc:	ldr	r1, [r4, #48]	; 0x30
   113d0:	sub	r1, r2, r1
   113d4:	bl	10e08 <getc@plt+0x39c>
   113d8:	ldr	r1, [pc, #420]	; 11584 <getc@plt+0xb18>
   113dc:	mov	r0, r5
   113e0:	bl	10a00 <fprintf@plt>
   113e4:	mov	r1, r5
   113e8:	ldr	r0, [pc, #408]	; 11588 <getc@plt+0xb1c>
   113ec:	bl	10a48 <fputs@plt>
   113f0:	ldr	r2, [pc, #404]	; 1158c <getc@plt+0xb20>
   113f4:	add	r1, r4, #20
   113f8:	mov	r0, r5
   113fc:	bl	10dd8 <getc@plt+0x36c>
   11400:	ldr	r2, [pc, #392]	; 11590 <getc@plt+0xb24>
   11404:	add	r1, r4, #36	; 0x24
   11408:	mov	r0, r5
   1140c:	bl	10dd8 <getc@plt+0x36c>
   11410:	add	r1, r4, #52	; 0x34
   11414:	mov	r0, r5
   11418:	ldr	r2, [pc, #372]	; 11594 <getc@plt+0xb28>
   1141c:	bl	10dd8 <getc@plt+0x36c>
   11420:	ldr	r1, [pc, #368]	; 11598 <getc@plt+0xb2c>
   11424:	mov	r0, r5
   11428:	bl	10a00 <fprintf@plt>
   1142c:	ldr	r3, [r7, #68]	; 0x44
   11430:	cmp	r3, #0
   11434:	ble	11454 <getc@plt+0x9e8>
   11438:	mov	r0, r6
   1143c:	bl	11bc8 <getc@plt+0x115c>
   11440:	mov	r2, r0
   11444:	mov	r3, #0
   11448:	add	r1, r7, #68	; 0x44
   1144c:	mov	r0, r5
   11450:	bl	10e8c <getc@plt+0x420>
   11454:	add	r6, r6, #1
   11458:	add	r7, r7, #8
   1145c:	cmp	r6, #256	; 0x100
   11460:	bne	1142c <getc@plt+0x9c0>
   11464:	add	r1, r4, #2112	; 0x840
   11468:	mov	r3, #0
   1146c:	ldr	r2, [pc, #288]	; 11594 <getc@plt+0xb28>
   11470:	add	r1, r1, #4
   11474:	mov	r0, r5
   11478:	bl	10e8c <getc@plt+0x420>
   1147c:	ldr	r3, [r4, #4]
   11480:	cmp	r3, #0
   11484:	bgt	114ec <getc@plt+0xa80>
   11488:	ldr	r3, [r4]
   1148c:	cmp	r3, #0
   11490:	ble	114dc <getc@plt+0xa70>
   11494:	ldr	r7, [pc, #256]	; 1159c <getc@plt+0xb30>
   11498:	add	r4, r4, #10176	; 0x27c0
   1149c:	mov	r0, r5
   114a0:	mov	r6, #0
   114a4:	add	r4, r4, #4
   114a8:	ldr	r1, [pc, #232]	; 11598 <getc@plt+0xb2c>
   114ac:	bl	10a00 <fprintf@plt>
   114b0:	ldr	r3, [r4, r6, lsl #3]
   114b4:	cmp	r3, #0
   114b8:	ble	114d0 <getc@plt+0xa64>
   114bc:	mov	r3, r6
   114c0:	mov	r2, #0
   114c4:	add	r1, r4, r6, lsl #3
   114c8:	mov	r0, r5
   114cc:	bl	10e8c <getc@plt+0x420>
   114d0:	add	r6, r6, #1
   114d4:	cmp	r6, r7
   114d8:	bne	114b0 <getc@plt+0xa44>
   114dc:	mov	r0, r5
   114e0:	add	sp, sp, #8
   114e4:	pop	{r4, r5, r6, r7, r8, lr}
   114e8:	b	11cf4 <getc@plt+0x1288>
   114ec:	add	r0, r4, #2112	; 0x840
   114f0:	add	r7, r4, #8192	; 0x2000
   114f4:	ldr	r8, [pc, #164]	; 115a0 <getc@plt+0xb34>
   114f8:	add	r0, r0, #12
   114fc:	mov	r6, #0
   11500:	bl	11a0c <getc@plt+0xfa0>
   11504:	ldr	r2, [pc, #152]	; 115a4 <getc@plt+0xb38>
   11508:	ldr	r1, [r7, #1980]	; 0x7bc
   1150c:	ldr	r0, [r7, #1984]	; 0x7c0
   11510:	bl	116bc <getc@plt+0xc50>
   11514:	mov	r1, r5
   11518:	ldr	r0, [pc, #136]	; 115a8 <getc@plt+0xb3c>
   1151c:	bl	10a48 <fputs@plt>
   11520:	ldr	r3, [r7, #1984]	; 0x7c0
   11524:	cmp	r3, r6
   11528:	ble	11488 <getc@plt+0xa1c>
   1152c:	ldr	r3, [r7, #1980]	; 0x7bc
   11530:	mov	r1, r8
   11534:	mov	r0, r5
   11538:	ldr	r2, [r3, r6, lsl #2]
   1153c:	add	r6, r6, #1
   11540:	ldr	r3, [r2, #8]
   11544:	str	r3, [sp]
   11548:	ldrd	r2, [r2, #12]
   1154c:	bl	10a00 <fprintf@plt>
   11550:	b	11520 <getc@plt+0xab4>
   11554:	andeq	r3, r1, r4, ror r1
   11558:	andeq	r3, r1, r4, ror r6
   1155c:	ldrdeq	r2, [r1], -r4
   11560:	andeq	r2, r1, r5, lsl sl
   11564:	andeq	r3, r1, r6, rrx
   11568:	andeq	r2, r1, r0, lsr #19
   1156c:	andeq	r2, r1, sl, lsl sl
   11570:	andeq	r2, r1, r1, lsr #20
   11574:	andeq	r2, r1, r0, lsr sl
   11578:	andeq	r2, r1, r2, asr #20
   1157c:	andeq	r2, r1, r2, asr sl
   11580:	andeq	r2, r1, lr, asr sl
   11584:	andeq	r2, r1, r5, ror sl
   11588:	muleq	r1, r4, sl
   1158c:			; <UNDEFINED> instruction: 0x00012aba
   11590:	andeq	r2, r1, r1, asr #21
   11594:	andeq	r2, r1, sl, asr #21
   11598:	ldrdeq	r2, [r1], -r0
   1159c:			; <UNDEFINED> instruction: 0x0010ffff
   115a0:	andeq	r2, r1, r6, lsl fp
   115a4:	andeq	r0, r1, r8, asr lr
   115a8:	andeq	r2, r1, lr, ror #21
   115ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b0:	mov	r8, r0
   115b4:	mov	r9, r1
   115b8:	ldr	sl, [pc, #248]	; 116b8 <getc@plt+0xc4c>
   115bc:	mov	r7, sl
   115c0:	ldr	r3, [sl]
   115c4:	mov	r4, r9
   115c8:	mov	r5, r8
   115cc:	ldr	fp, [r3, r8, lsl #2]
   115d0:	cmp	r5, r4
   115d4:	blt	11614 <getc@plt+0xba8>
   115d8:	ldr	r3, [r7]
   115dc:	sub	r1, r4, #1
   115e0:	cmp	r8, r1
   115e4:	str	fp, [r3, r4, lsl #2]
   115e8:	bge	115f4 <getc@plt+0xb88>
   115ec:	mov	r0, r8
   115f0:	bl	115ac <getc@plt+0xb40>
   115f4:	add	r8, r5, #1
   115f8:	cmp	r8, r9
   115fc:	blt	115c0 <getc@plt+0xb54>
   11600:	add	sp, sp, #12
   11604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11608:	sub	r4, r4, #1
   1160c:	cmp	r5, r4
   11610:	beq	116b0 <getc@plt+0xc44>
   11614:	ldrd	r2, [r7]
   11618:	mov	r0, fp
   1161c:	ldr	r1, [r2, r4, lsl #2]
   11620:	blx	r3
   11624:	cmp	r0, #0
   11628:	blt	11608 <getc@plt+0xb9c>
   1162c:	cmp	r5, r4
   11630:	beq	116b0 <getc@plt+0xc44>
   11634:	ldr	r2, [r7]
   11638:	lsl	r3, r4, #2
   1163c:	add	r6, r5, #1
   11640:	ldr	r1, [r2, r4, lsl #2]
   11644:	str	r1, [r2, r5, lsl #2]
   11648:	cmp	r6, r4
   1164c:	lsl	r2, r6, #2
   11650:	ldr	r1, [r7]
   11654:	bge	116a4 <getc@plt+0xc38>
   11658:	mov	r0, fp
   1165c:	ldr	r1, [r1, r6, lsl #2]
   11660:	str	r3, [sp]
   11664:	ldr	r5, [r7, #4]
   11668:	str	r2, [sp, #4]
   1166c:	blx	r5
   11670:	cmp	r0, #0
   11674:	ldr	r3, [sp]
   11678:	ldr	r2, [sp, #4]
   1167c:	bgt	1169c <getc@plt+0xc30>
   11680:	ldr	r1, [r7]
   11684:	sub	r5, r4, #1
   11688:	ldr	r2, [r1, r2]
   1168c:	str	r2, [r1, r3]
   11690:	mov	r4, r5
   11694:	mov	r5, r6
   11698:	b	115d0 <getc@plt+0xb64>
   1169c:	add	r6, r6, #1
   116a0:	b	11648 <getc@plt+0xbdc>
   116a4:	moveq	r5, r6
   116a8:	bne	11680 <getc@plt+0xc14>
   116ac:	b	11690 <getc@plt+0xc24>
   116b0:	mov	r6, r5
   116b4:	b	11690 <getc@plt+0xc24>
   116b8:	andeq	r4, r2, r8, lsl r1
   116bc:	cmp	r0, #1
   116c0:	bxle	lr
   116c4:	ldr	r3, [pc, #12]	; 116d8 <getc@plt+0xc6c>
   116c8:	stm	r3, {r1, r2}
   116cc:	sub	r1, r0, #1
   116d0:	mov	r0, #0
   116d4:	b	115ac <getc@plt+0xb40>
   116d8:	andeq	r4, r2, r8, lsl r1
   116dc:	andeq	r0, r0, r0
   116e0:	push	{r4, r5, r6, lr}
   116e4:	mov	r4, r0
   116e8:	mov	r6, r1
   116ec:	mov	r5, r2
   116f0:	mov	r1, #32
   116f4:	mov	r0, #1
   116f8:	bl	11e48 <error@@Base+0x3c>
   116fc:	str	r6, [r0, #8]
   11700:	str	r5, [r0, #12]
   11704:	ldr	r1, [r4, #24]
   11708:	ldr	r3, [r4, #28]
   1170c:	add	r1, r1, r6
   11710:	add	r3, r3, r5
   11714:	str	r1, [r4, #24]
   11718:	mov	r1, r0
   1171c:	mov	r0, r4
   11720:	str	r3, [r4, #28]
   11724:	pop	{r4, r5, r6, lr}
   11728:	b	12724 <error@@Base+0x918>
   1172c:	ldr	ip, [r0]
   11730:	push	{r4, r5, r6, lr}
   11734:	mov	r6, r2
   11738:	mov	r4, r0
   1173c:	mov	r5, r1
   11740:	mov	r2, #0
   11744:	vpush	{d8}
   11748:	mov	r3, ip
   1174c:	cmp	r3, #0
   11750:	bne	11764 <getc@plt+0xcf8>
   11754:	cmp	r2, #1
   11758:	bgt	11778 <getc@plt+0xd0c>
   1175c:	ldr	r0, [pc, #364]	; 118d0 <getc@plt+0xe64>
   11760:	bl	11e0c <error@@Base>
   11764:	ldr	r1, [r3, #8]
   11768:	ldr	r3, [r3, #4]
   1176c:	cmp	r1, #0
   11770:	addgt	r2, r2, #1
   11774:	b	1174c <getc@plt+0xce0>
   11778:	ldr	r2, [r4, #24]
   1177c:	mov	r0, ip
   11780:	ldr	r1, [r4, #28]
   11784:	vldr	d8, [pc, #300]	; 118b8 <getc@plt+0xe4c>
   11788:	vmov	s15, r2
   1178c:	vldr	d3, [pc, #300]	; 118c0 <getc@plt+0xe54>
   11790:	sub	r3, r2, r1
   11794:	vmov	s12, r3
   11798:	vcvt.f64.s32	d5, s15
   1179c:	vldr	s15, [r4, #12]
   117a0:	vcvt.f64.s32	d6, s12
   117a4:	vmov	r3, s15
   117a8:	vcvt.f64.s32	d2, s15
   117ac:	vmul.f64	d6, d6, d8
   117b0:	sub	r3, r3, #1
   117b4:	vdiv.f64	d4, d6, d5
   117b8:	vmov	s12, r3
   117bc:	vcvt.f64.s32	d6, s12
   117c0:	vstr	d4, [r4, #32]
   117c4:	vmul.f64	d4, d2, d4
   117c8:	cmp	r0, #0
   117cc:	bne	11858 <getc@plt+0xdec>
   117d0:	vmul.f64	d3, d3, d6
   117d4:	vdiv.f64	d7, d3, d2
   117d8:	vsub.f64	d7, d4, d7
   117dc:	vldr	d4, [pc, #220]	; 118c0 <getc@plt+0xe54>
   117e0:	vstr	d7, [r4, #40]	; 0x28
   117e4:	cmp	ip, #0
   117e8:	bne	118a0 <getc@plt+0xe34>
   117ec:	vdiv.f64	d0, d4, d6
   117f0:	vdiv.f64	d0, d0, d2
   117f4:	bl	10a0c <sqrt@plt>
   117f8:	vldr	d7, [pc, #200]	; 118c8 <getc@plt+0xe5c>
   117fc:	vmul.f64	d0, d0, d7
   11800:	vldr	d7, [r4, #40]	; 0x28
   11804:	vsub.f64	d7, d7, d0
   11808:	vcmpe.f64	d7, d8
   1180c:	vmrs	APSR_nzcv, fpscr
   11810:	vldrgt	d7, [pc, #160]	; 118b8 <getc@plt+0xe4c>
   11814:	bgt	11824 <getc@plt+0xdb8>
   11818:	vcmpe.f64	d7, #0.0
   1181c:	vmrs	APSR_nzcv, fpscr
   11820:	vldrmi	d7, [pc, #152]	; 118c0 <getc@plt+0xe54>
   11824:	vstr	d7, [r5]
   11828:	vldr	d7, [r4, #40]	; 0x28
   1182c:	vadd.f64	d0, d0, d7
   11830:	vcmpe.f64	d0, d8
   11834:	vmrs	APSR_nzcv, fpscr
   11838:	vldrgt	d0, [pc, #120]	; 118b8 <getc@plt+0xe4c>
   1183c:	bgt	1184c <getc@plt+0xde0>
   11840:	vcmpe.f64	d0, #0.0
   11844:	vmrs	APSR_nzcv, fpscr
   11848:	vldrmi	d0, [pc, #112]	; 118c0 <getc@plt+0xe54>
   1184c:	vpop	{d8}
   11850:	vstr	d0, [r6]
   11854:	pop	{r4, r5, r6, pc}
   11858:	ldr	lr, [r0, #8]
   1185c:	ldr	r3, [r0, #12]
   11860:	sub	lr, r2, lr
   11864:	sub	r3, r1, r3
   11868:	vmov	s11, lr
   1186c:	sub	r3, lr, r3
   11870:	vmov	s14, r3
   11874:	vcvt.f64.s32	d5, s11
   11878:	vcvt.f64.s32	d7, s14
   1187c:	vmul.f64	d7, d7, d8
   11880:	vdiv.f64	d1, d7, d5
   11884:	vmov.f64	d7, d4
   11888:	vmls.f64	d7, d6, d1
   1188c:	vadd.f64	d3, d3, d1
   11890:	vstr	d1, [r0, #16]
   11894:	vstr	d7, [r0, #24]
   11898:	ldr	r0, [r0, #4]
   1189c:	b	117c8 <getc@plt+0xd5c>
   118a0:	vldr	d5, [ip, #24]
   118a4:	ldr	ip, [ip, #4]
   118a8:	vsub.f64	d5, d5, d7
   118ac:	vmla.f64	d4, d5, d5
   118b0:	b	117e4 <getc@plt+0xd78>
   118b4:	nop	{0}
   118b8:	andeq	r0, r0, r0
   118bc:	subsmi	r0, r9, r0
	...
   118c8:			; <UNDEFINED> instruction: 0xf5c28f5c
   118cc:	svccc	0x00ff5c28
   118d0:	andeq	r2, r1, r5, lsr #22
   118d4:	sub	r0, r0, #1
   118d8:	mov	r3, #0
   118dc:	ldrb	r2, [r0, #1]!
   118e0:	cmp	r2, #0
   118e4:	bne	118fc <getc@plt+0xe90>
   118e8:	movw	r2, #503	; 0x1f7
   118ec:	udiv	r0, r3, r2
   118f0:	mls	r0, r2, r0, r3
   118f4:	sxth	r0, r0
   118f8:	bx	lr
   118fc:	add	r3, r3, r2
   11900:	b	118dc <getc@plt+0xe70>
   11904:	push	{r4, r5, r6, lr}
   11908:	add	r6, r0, #8000	; 0x1f40
   1190c:	mov	r4, r0
   11910:	mov	r5, r0
   11914:	add	r6, r6, #48	; 0x30
   11918:	mov	r0, r5
   1191c:	add	r5, r5, #16
   11920:	bl	126fc <error@@Base+0x8f0>
   11924:	cmp	r5, r6
   11928:	bne	11918 <getc@plt+0xeac>
   1192c:	add	r4, r4, #4096	; 0x1000
   11930:	mov	r3, #0
   11934:	str	r3, [r4, #3952]	; 0xf70
   11938:	str	r3, [r4, #3956]	; 0xf74
   1193c:	pop	{r4, r5, r6, pc}
   11940:	push	{r4, r5, r6, lr}
   11944:	mov	r4, r0
   11948:	mov	r0, r1
   1194c:	mov	r5, r1
   11950:	bl	118d4 <getc@plt+0xe68>
   11954:	ldr	r4, [r4, r0, lsl #4]
   11958:	cmp	r4, #0
   1195c:	beq	11974 <getc@plt+0xf08>
   11960:	mov	r0, r5
   11964:	ldr	r1, [r4, #8]
   11968:	bl	10904 <strcmp@plt>
   1196c:	cmp	r0, #0
   11970:	bne	1197c <getc@plt+0xf10>
   11974:	mov	r0, r4
   11978:	pop	{r4, r5, r6, pc}
   1197c:	ldr	r4, [r4, #4]
   11980:	b	11958 <getc@plt+0xeec>
   11984:	push	{r4, lr}
   11988:	mov	r4, r0
   1198c:	ldr	r0, [r1, #8]
   11990:	bl	118d4 <getc@plt+0xe68>
   11994:	add	r0, r4, r0, lsl #4
   11998:	add	r4, r4, #4096	; 0x1000
   1199c:	bl	12714 <error@@Base+0x908>
   119a0:	ldr	r0, [r4, #3952]	; 0xf70
   119a4:	cmp	r0, #0
   119a8:	beq	119b8 <getc@plt+0xf4c>
   119ac:	bl	10928 <free@plt>
   119b0:	mov	r3, #0
   119b4:	str	r3, [r4, #3952]	; 0xf70
   119b8:	ldr	r3, [r4, #3956]	; 0xf74
   119bc:	add	r3, r3, #1
   119c0:	str	r3, [r4, #3956]	; 0xf74
   119c4:	pop	{r4, pc}
   119c8:	push	{r4, lr}
   119cc:	mov	r4, r0
   119d0:	ldr	r0, [r1, #8]
   119d4:	bl	118d4 <getc@plt+0xe68>
   119d8:	add	r0, r4, r0, lsl #4
   119dc:	add	r4, r4, #4096	; 0x1000
   119e0:	bl	1274c <error@@Base+0x940>
   119e4:	ldr	r0, [r4, #3952]	; 0xf70
   119e8:	cmp	r0, #0
   119ec:	beq	119fc <getc@plt+0xf90>
   119f0:	bl	10928 <free@plt>
   119f4:	mov	r3, #0
   119f8:	str	r3, [r4, #3952]	; 0xf70
   119fc:	ldr	r3, [r4, #3956]	; 0xf74
   11a00:	sub	r3, r3, #1
   11a04:	str	r3, [r4, #3956]	; 0xf74
   11a08:	pop	{r4, pc}
   11a0c:	push	{r4, r5, r6, lr}
   11a10:	add	r6, r0, #4096	; 0x1000
   11a14:	ldr	r4, [r6, #3952]	; 0xf70
   11a18:	cmp	r4, #0
   11a1c:	popne	{r4, r5, r6, pc}
   11a20:	ldr	r3, [r6, #3956]	; 0xf74
   11a24:	cmp	r3, #0
   11a28:	popeq	{r4, r5, r6, pc}
   11a2c:	mov	r5, r0
   11a30:	mov	r1, #4
   11a34:	mov	r0, r3
   11a38:	bl	11e48 <error@@Base+0x3c>
   11a3c:	mov	r3, r4
   11a40:	mov	r2, r4
   11a44:	str	r0, [r6, #3952]	; 0xf70
   11a48:	movw	lr, #503	; 0x1f7
   11a4c:	ldr	r1, [r5, r2, lsl #4]
   11a50:	mov	ip, r3
   11a54:	cmp	r1, #0
   11a58:	mov	r3, ip
   11a5c:	bne	11a70 <getc@plt+0x1004>
   11a60:	add	r2, r2, #1
   11a64:	cmp	r2, lr
   11a68:	bne	11a4c <getc@plt+0xfe0>
   11a6c:	pop	{r4, r5, r6, pc}
   11a70:	str	r1, [r0, ip, lsl #2]
   11a74:	add	ip, ip, #1
   11a78:	ldr	r1, [r1, #4]
   11a7c:	b	11a54 <getc@plt+0xfe8>
   11a80:	push	{r4, r5, r6, r7, r8, lr}
   11a84:	add	r6, r0, #8000	; 0x1f40
   11a88:	mov	r4, r0
   11a8c:	mov	r7, r1
   11a90:	mov	r5, r0
   11a94:	add	r6, r6, #48	; 0x30
   11a98:	mov	r0, r5
   11a9c:	mov	r1, r7
   11aa0:	add	r5, r5, #16
   11aa4:	bl	127f4 <error@@Base+0x9e8>
   11aa8:	cmp	r5, r6
   11aac:	bne	11a98 <getc@plt+0x102c>
   11ab0:	add	r4, r4, #4096	; 0x1000
   11ab4:	ldr	r0, [r4, #3952]	; 0xf70
   11ab8:	cmp	r0, #0
   11abc:	beq	11acc <getc@plt+0x1060>
   11ac0:	bl	10928 <free@plt>
   11ac4:	mov	r3, #0
   11ac8:	str	r3, [r4, #3952]	; 0xf70
   11acc:	mov	r3, #0
   11ad0:	str	r3, [r4, #3956]	; 0xf74
   11ad4:	pop	{r4, r5, r6, r7, r8, pc}
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11adc:	mov	r5, #0
   11ae0:	mov	r8, #12
   11ae4:	mov	r4, r5
   11ae8:	ldr	r6, [pc, #152]	; 11b88 <getc@plt+0x111c>
   11aec:	ldr	r7, [pc, #152]	; 11b8c <getc@plt+0x1120>
   11af0:	ldr	r9, [pc, #152]	; 11b90 <getc@plt+0x1124>
   11af4:	ldrsh	r3, [r6]
   11af8:	cmp	r3, r4
   11afc:	ble	11b4c <getc@plt+0x10e0>
   11b00:	mla	r3, r8, r5, r7
   11b04:	add	r2, r6, r4, lsl #2
   11b08:	ldr	r1, [r2, #4]
   11b0c:	ldr	r0, [r3, #8]
   11b10:	bl	10904 <strcmp@plt>
   11b14:	cmp	r0, #0
   11b18:	addne	r4, r4, #1
   11b1c:	bne	11af4 <getc@plt+0x1088>
   11b20:	mul	r3, r8, r5
   11b24:	add	r2, r7, r3
   11b28:	ldr	r3, [r7, r3]
   11b2c:	ldr	r2, [r2, #4]
   11b30:	cmp	r2, r3
   11b34:	bcs	11b7c <getc@plt+0x1110>
   11b38:	add	r5, r5, #1
   11b3c:	cmp	r5, #91	; 0x5b
   11b40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b44:	mov	r4, #0
   11b48:	b	11af4 <getc@plt+0x1088>
   11b4c:	bne	11b20 <getc@plt+0x10b4>
   11b50:	cmp	r4, #256	; 0x100
   11b54:	bne	11b60 <getc@plt+0x10f4>
   11b58:	ldr	r0, [pc, #52]	; 11b94 <getc@plt+0x1128>
   11b5c:	bl	11e0c <error@@Base>
   11b60:	mla	r2, r8, r5, r7
   11b64:	add	r3, r4, #1
   11b68:	strh	r3, [r6]
   11b6c:	add	r3, r6, r4, lsl #2
   11b70:	ldr	r2, [r2, #8]
   11b74:	str	r2, [r3, #4]
   11b78:	b	11b20 <getc@plt+0x10b4>
   11b7c:	strb	r4, [r3, r9]
   11b80:	add	r3, r3, #1
   11b84:	b	11b30 <getc@plt+0x10c4>
   11b88:	andeq	r4, r2, r0, lsr #2
   11b8c:	andeq	r2, r1, r0, asr #22
   11b90:	andeq	r4, r2, r4, lsr #10
   11b94:	andeq	r2, r1, r4, lsl #31
   11b98:	ldr	r3, [pc, #32]	; 11bc0 <getc@plt+0x1154>
   11b9c:	push	{r4, lr}
   11ba0:	mov	r4, r0
   11ba4:	ldrsh	r3, [r3]
   11ba8:	cmp	r3, #0
   11bac:	bne	11bb4 <getc@plt+0x1148>
   11bb0:	bl	11ad8 <getc@plt+0x106c>
   11bb4:	ldr	r3, [pc, #8]	; 11bc4 <getc@plt+0x1158>
   11bb8:	ldrb	r0, [r3, r4]
   11bbc:	pop	{r4, pc}
   11bc0:	andeq	r4, r2, r0, lsr #2
   11bc4:	andeq	r4, r2, r4, lsr #10
   11bc8:	push	{r4, r5, r6, lr}
   11bcc:	uxtb	r5, r0
   11bd0:	ldr	r4, [pc, #44]	; 11c04 <getc@plt+0x1198>
   11bd4:	ldrsh	r3, [r4]
   11bd8:	cmp	r3, #0
   11bdc:	bne	11be4 <getc@plt+0x1178>
   11be0:	bl	11ad8 <getc@plt+0x106c>
   11be4:	ldrsh	r3, [r4]
   11be8:	cmp	r5, r3
   11bec:	blt	11bf8 <getc@plt+0x118c>
   11bf0:	ldr	r0, [pc, #16]	; 11c08 <getc@plt+0x119c>
   11bf4:	bl	11e0c <error@@Base>
   11bf8:	add	r4, r4, r5, lsl #2
   11bfc:	ldr	r0, [r4, #4]
   11c00:	pop	{r4, r5, r6, pc}
   11c04:	andeq	r4, r2, r0, lsr #2
   11c08:	muleq	r1, pc, pc	; <UNPREDICTABLE>
   11c0c:	ldr	r3, [pc, #56]	; 11c4c <getc@plt+0x11e0>
   11c10:	push	{r4, r5, lr}
   11c14:	sub	sp, sp, #116	; 0x74
   11c18:	mov	r5, r0
   11c1c:	ldr	r4, [r3]
   11c20:	bl	109d0 <getpid@plt>
   11c24:	ldr	r1, [pc, #36]	; 11c50 <getc@plt+0x11e4>
   11c28:	mov	r3, r0
   11c2c:	add	r0, sp, #12
   11c30:	str	r5, [sp]
   11c34:	mov	r2, r4
   11c38:	bl	10a30 <sprintf@plt>
   11c3c:	add	r0, sp, #12
   11c40:	bl	10958 <strdup@plt>
   11c44:	add	sp, sp, #116	; 0x74
   11c48:	pop	{r4, r5, pc}
   11c4c:	addseq	r6, fp, ip, lsl sp
   11c50:	andeq	r3, r1, sl, ror #10
   11c54:	ldr	r3, [pc, #84]	; 11cb0 <getc@plt+0x1244>
   11c58:	mov	r5, r0
   11c5c:	push	{r7, lr}
   11c60:	ldr	r3, [r3]
   11c64:	cmp	r3, #0
   11c68:	beq	11c70 <getc@plt+0x1204>
   11c6c:	blx	r3
   11c70:	ldr	r6, [pc, #60]	; 11cb4 <getc@plt+0x1248>
   11c74:	mov	r4, #1
   11c78:	ldrsh	r3, [r6]
   11c7c:	cmp	r3, r4
   11c80:	bge	11c8c <getc@plt+0x1220>
   11c84:	mov	r0, r5
   11c88:	bl	109dc <exit@plt>
   11c8c:	mov	r0, r4
   11c90:	add	r4, r4, #1
   11c94:	bl	11c0c <getc@plt+0x11a0>
   11c98:	mov	r7, r0
   11c9c:	sxth	r4, r4
   11ca0:	bl	10970 <unlink@plt>
   11ca4:	mov	r0, r7
   11ca8:	bl	10928 <free@plt>
   11cac:	b	11c78 <getc@plt+0x120c>
   11cb0:	addseq	r6, fp, r0, lsr #26
   11cb4:	andseq	r4, r3, r4, lsr #10
   11cb8:	sub	r2, r0, #1
   11cbc:	sub	r1, r1, #1
   11cc0:	ldrb	r3, [r2, #1]!
   11cc4:	ldrb	r0, [r1, #1]!
   11cc8:	cmp	r3, #0
   11ccc:	beq	11ce8 <getc@plt+0x127c>
   11cd0:	cmp	r3, r0
   11cd4:	beq	11cc0 <getc@plt+0x1254>
   11cd8:	cmp	r3, r0
   11cdc:	mvncc	r0, #0
   11ce0:	movcs	r0, #1
   11ce4:	bx	lr
   11ce8:	cmp	r0, #0
   11cec:	bxeq	lr
   11cf0:	b	11cd8 <getc@plt+0x126c>
   11cf4:	ldr	r2, [pc, #28]	; 11d18 <getc@plt+0x12ac>
   11cf8:	ldr	r2, [r2]
   11cfc:	cmp	r2, r0
   11d00:	bxeq	lr
   11d04:	ldr	r2, [pc, #16]	; 11d1c <getc@plt+0x12b0>
   11d08:	ldr	r2, [r2]
   11d0c:	cmp	r2, r0
   11d10:	bxeq	lr
   11d14:	b	10a24 <fclose@plt>
   11d18:	andeq	r4, r2, r8, lsr #1
   11d1c:	andeq	r4, r2, ip, lsr #1
   11d20:	push	{lr}		; (str lr, [sp, #-4]!)
   11d24:	sub	sp, sp, #92	; 0x5c
   11d28:	mov	r1, sp
   11d2c:	bl	12888 <error@@Base+0xa7c>
   11d30:	clz	r0, r0
   11d34:	lsr	r0, r0, #5
   11d38:	add	sp, sp, #92	; 0x5c
   11d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d40:	ldr	r3, [pc, #36]	; 11d6c <getc@plt+0x1300>
   11d44:	push	{r4, lr}
   11d48:	ldrh	r0, [r3]
   11d4c:	add	r0, r0, #1
   11d50:	sxth	r0, r0
   11d54:	strh	r0, [r3]
   11d58:	bl	11c0c <getc@plt+0x11a0>
   11d5c:	mov	r4, r0
   11d60:	bl	10970 <unlink@plt>
   11d64:	mov	r0, r4
   11d68:	pop	{r4, pc}
   11d6c:	andseq	r4, r3, r4, lsr #10
   11d70:	push	{r4, lr}
   11d74:	mov	r4, r0
   11d78:	bl	109f4 <strlen@plt>
   11d7c:	sub	r0, r0, #1
   11d80:	add	r1, r4, #1
   11d84:	sxth	r0, r0
   11d88:	tst	r0, #32768	; 0x8000
   11d8c:	bne	11da0 <getc@plt+0x1334>
   11d90:	sub	r3, r0, #1
   11d94:	ldrb	r2, [r1, r3]
   11d98:	cmp	r2, #47	; 0x2f
   11d9c:	bne	11dac <getc@plt+0x1340>
   11da0:	add	r0, r0, #1
   11da4:	add	r0, r4, r0
   11da8:	pop	{r4, pc}
   11dac:	mov	r0, r3
   11db0:	b	11d88 <getc@plt+0x131c>
   11db4:	push	{r4, lr}
   11db8:	mov	r0, #0
   11dbc:	bl	11c54 <getc@plt+0x11e8>
   11dc0:	ldr	r2, [pc, #52]	; 11dfc <getc@plt+0x1390>
   11dc4:	push	{r4, lr}
   11dc8:	ldr	r2, [r2]
   11dcc:	cmp	r2, #0
   11dd0:	beq	11ddc <getc@plt+0x1370>
   11dd4:	blx	r2
   11dd8:	bl	11db4 <getc@plt+0x1348>
   11ddc:	mov	r3, r0
   11de0:	ldr	r2, [pc, #24]	; 11e00 <getc@plt+0x1394>
   11de4:	ldr	r0, [pc, #24]	; 11e04 <getc@plt+0x1398>
   11de8:	ldr	r1, [pc, #24]	; 11e08 <getc@plt+0x139c>
   11dec:	ldr	r2, [r2]
   11df0:	ldr	r0, [r0]
   11df4:	bl	10a00 <fprintf@plt>
   11df8:	b	11dd8 <getc@plt+0x136c>
   11dfc:	addseq	r6, fp, r8, lsl sp
   11e00:	addseq	r6, fp, ip, lsl sp
   11e04:	andeq	r4, r2, r0, lsr #1
   11e08:	andeq	r3, r1, r8, ror r5

00011e0c <error@@Base>:
   11e0c:	mov	r3, r0
   11e10:	ldr	r2, [pc, #32]	; 11e38 <error@@Base+0x2c>
   11e14:	push	{r4, lr}
   11e18:	ldr	r0, [pc, #28]	; 11e3c <error@@Base+0x30>
   11e1c:	ldr	r1, [pc, #28]	; 11e40 <error@@Base+0x34>
   11e20:	ldr	r2, [r2]
   11e24:	ldr	r0, [r0]
   11e28:	bl	10a00 <fprintf@plt>
   11e2c:	ldr	r3, [pc, #16]	; 11e44 <error@@Base+0x38>
   11e30:	ldr	r0, [r3]
   11e34:	bl	11c54 <getc@plt+0x11e8>
   11e38:	addseq	r6, fp, ip, lsl sp
   11e3c:	andeq	r4, r2, r0, lsr #1
   11e40:	andeq	r3, r1, r7, lsl #11
   11e44:	muleq	r2, r8, r0
   11e48:	push	{r4, lr}
   11e4c:	bl	108f8 <calloc@plt>
   11e50:	cmp	r0, #0
   11e54:	popne	{r4, pc}
   11e58:	ldr	r0, [pc]	; 11e60 <error@@Base+0x54>
   11e5c:	bl	11e0c <error@@Base>
   11e60:	andeq	r3, r1, pc, lsl #11
   11e64:	ldr	r3, [pc, #28]	; 11e88 <error@@Base+0x7c>
   11e68:	ldrb	r2, [r3, #2]
   11e6c:	cmp	r2, #0
   11e70:	bxne	lr
   11e74:	mov	r2, #1
   11e78:	push	{r4, lr}
   11e7c:	ldr	r0, [pc, #8]	; 11e8c <error@@Base+0x80>
   11e80:	strb	r2, [r3, #2]
   11e84:	bl	11e0c <error@@Base>
   11e88:	andseq	r4, r3, r4, lsr #10
   11e8c:	andeq	r3, r1, r9, lsr #11
   11e90:	push	{r0, r1, r2, lr}
   11e94:	mov	r3, r0
   11e98:	ldr	r2, [pc, #32]	; 11ec0 <error@@Base+0xb4>
   11e9c:	str	r1, [sp]
   11ea0:	ldr	r0, [pc, #28]	; 11ec4 <error@@Base+0xb8>
   11ea4:	ldr	r1, [pc, #28]	; 11ec8 <error@@Base+0xbc>
   11ea8:	ldr	r2, [r2]
   11eac:	ldr	r0, [r0]
   11eb0:	bl	10a00 <fprintf@plt>
   11eb4:	ldr	r3, [pc, #16]	; 11ecc <error@@Base+0xc0>
   11eb8:	ldr	r0, [r3]
   11ebc:	bl	11c54 <getc@plt+0x11e8>
   11ec0:	addseq	r6, fp, ip, lsl sp
   11ec4:	andeq	r4, r2, r0, lsr #1
   11ec8:			; <UNDEFINED> instruction: 0x000135b8
   11ecc:	muleq	r2, r8, r0
   11ed0:	push	{r4, r5, r6, lr}
   11ed4:	subs	r4, r0, #0
   11ed8:	mov	r5, r1
   11edc:	bne	11ef8 <error@@Base+0xec>
   11ee0:	ldrb	r3, [r1]
   11ee4:	cmp	r3, #114	; 0x72
   11ee8:	ldreq	r3, [pc, #44]	; 11f1c <error@@Base+0x110>
   11eec:	ldrne	r3, [pc, #44]	; 11f20 <error@@Base+0x114>
   11ef0:	ldr	r0, [r3]
   11ef4:	pop	{r4, r5, r6, pc}
   11ef8:	bl	1091c <fopen@plt>
   11efc:	cmp	r0, #0
   11f00:	popne	{r4, r5, r6, pc}
   11f04:	mov	r1, r4
   11f08:	ldrb	r3, [r5]
   11f0c:	cmp	r3, #119	; 0x77
   11f10:	ldreq	r0, [pc, #12]	; 11f24 <error@@Base+0x118>
   11f14:	ldrne	r0, [pc, #12]	; 11f28 <error@@Base+0x11c>
   11f18:	bl	11e90 <error@@Base+0x84>
   11f1c:	andeq	r4, r2, r8, lsr #1
   11f20:	andeq	r4, r2, ip, lsr #1
   11f24:	andeq	r3, r1, r5, asr #11
   11f28:	ldrdeq	r3, [r1], -fp
   11f2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f30:	mov	r8, r0
   11f34:	mov	r7, r1
   11f38:	mov	r9, r3
   11f3c:	ldr	r0, [r1]
   11f40:	str	r2, [sp]
   11f44:	bl	11d70 <getc@plt+0x1304>
   11f48:	ldr	r3, [pc, #396]	; 120dc <error@@Base+0x2d0>
   11f4c:	ldr	r1, [pc, #396]	; 120e0 <error@@Base+0x2d4>
   11f50:	str	r0, [r3]
   11f54:	mov	r0, #2
   11f58:	bl	109b8 <__sysv_signal@plt>
   11f5c:	ldr	r1, [pc, #380]	; 120e0 <error@@Base+0x2d4>
   11f60:	mov	r0, #15
   11f64:	bl	109b8 <__sysv_signal@plt>
   11f68:	ldr	r4, [r8]
   11f6c:	cmp	r4, #1
   11f70:	movne	r6, #0
   11f74:	movne	r4, #1
   11f78:	bne	1209c <error@@Base+0x290>
   11f7c:	ldr	r3, [pc, #352]	; 120e4 <error@@Base+0x2d8>
   11f80:	ldrb	r6, [r3, #4]
   11f84:	cmp	r6, #0
   11f88:	beq	1209c <error@@Base+0x290>
   11f8c:	ldr	r0, [sp]
   11f90:	bl	11dc0 <getc@plt+0x1354>
   11f94:	ldr	r5, [r7, r4, lsl #2]
   11f98:	lsl	sl, r4, #2
   11f9c:	ldrb	r3, [r5]
   11fa0:	cmp	r3, #45	; 0x2d
   11fa4:	bne	120cc <error@@Base+0x2c0>
   11fa8:	ldrb	r3, [r5, #1]
   11fac:	cmp	r3, #0
   11fb0:	str	r3, [sp, #4]
   11fb4:	beq	120cc <error@@Base+0x2c0>
   11fb8:	mov	r0, r5
   11fbc:	bl	109f4 <strlen@plt>
   11fc0:	mov	r2, r0
   11fc4:	mov	r1, r5
   11fc8:	ldr	r0, [pc, #280]	; 120e8 <error@@Base+0x2dc>
   11fcc:	bl	10a54 <strncmp@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	11f8c <error@@Base+0x180>
   11fd8:	add	r0, r4, #1
   11fdc:	ldr	r3, [sp, #4]
   11fe0:	cmp	r0, fp
   11fe4:	addlt	sl, r7, sl
   11fe8:	movge	r1, #0
   11fec:	ldrlt	r1, [sl, #4]
   11ff0:	cmp	r9, #0
   11ff4:	beq	120b4 <error@@Base+0x2a8>
   11ff8:	mov	ip, #0
   11ffc:	sxth	r2, ip
   12000:	add	r2, r2, r2, lsl #1
   12004:	add	lr, r9, r2, lsl #2
   12008:	ldrb	r2, [r9, r2, lsl #2]
   1200c:	cmp	r2, #0
   12010:	beq	120b4 <error@@Base+0x2a8>
   12014:	cmp	r3, r2
   12018:	add	ip, ip, #1
   1201c:	bne	11ffc <error@@Base+0x1f0>
   12020:	ldr	r3, [lr, #4]
   12024:	cmp	r3, #0
   12028:	bne	1205c <error@@Base+0x250>
   1202c:	ldr	r3, [lr, #8]
   12030:	cmp	r3, #0
   12034:	beq	120b4 <error@@Base+0x2a8>
   12038:	ldrb	r2, [r5, #2]
   1203c:	cmp	r2, #0
   12040:	bne	120b4 <error@@Base+0x2a8>
   12044:	ldrb	r2, [r3]
   12048:	cmp	r2, #0
   1204c:	bne	120c0 <error@@Base+0x2b4>
   12050:	mov	r2, #1
   12054:	strb	r2, [r3]
   12058:	b	12094 <error@@Base+0x288>
   1205c:	ldrb	r2, [r5, #2]
   12060:	cmp	r1, #0
   12064:	cmpeq	r2, #0
   12068:	beq	1202c <error@@Base+0x220>
   1206c:	ldr	ip, [r3]
   12070:	cmp	ip, #0
   12074:	bne	120c0 <error@@Base+0x2b4>
   12078:	cmp	r2, #0
   1207c:	sxth	r0, r0
   12080:	addne	r1, r5, #2
   12084:	str	r1, [r3]
   12088:	ldrb	r3, [r5, #2]
   1208c:	cmp	r3, #0
   12090:	moveq	r4, r0
   12094:	add	r4, r4, #1
   12098:	sxth	r4, r4
   1209c:	ldr	fp, [r8]
   120a0:	cmp	r4, fp
   120a4:	blt	11f94 <error@@Base+0x188>
   120a8:	str	r6, [r8]
   120ac:	add	sp, sp, #12
   120b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120b4:	ldr	r0, [pc, #48]	; 120ec <error@@Base+0x2e0>
   120b8:	mov	r1, r5
   120bc:	bl	11e90 <error@@Base+0x84>
   120c0:	mov	r1, r5
   120c4:	ldr	r0, [pc, #36]	; 120f0 <error@@Base+0x2e4>
   120c8:	b	120bc <error@@Base+0x2b0>
   120cc:	add	r3, r6, #1
   120d0:	str	r5, [r7, r6, lsl #2]
   120d4:	sxth	r6, r3
   120d8:	b	12094 <error@@Base+0x288>
   120dc:	addseq	r6, fp, ip, lsl sp
   120e0:	andeq	r1, r1, r4, ror #28
   120e4:	muleq	r2, r8, r0
   120e8:	andeq	r3, r1, pc, ror #11
   120ec:	strdeq	r3, [r1], -r5
   120f0:	andeq	r3, r1, r4, lsl #12
   120f4:	push	{r0, r1, r2, lr}
   120f8:	mov	r3, r0
   120fc:	ldr	r2, [pc, #28]	; 12120 <error@@Base+0x314>
   12100:	str	r1, [sp]
   12104:	ldr	r0, [pc, #24]	; 12124 <error@@Base+0x318>
   12108:	ldr	r1, [pc, #24]	; 12128 <error@@Base+0x31c>
   1210c:	ldr	r2, [r2]
   12110:	ldr	r0, [r0]
   12114:	bl	10a00 <fprintf@plt>
   12118:	add	sp, sp, #12
   1211c:	pop	{pc}		; (ldr pc, [sp], #4)
   12120:	addseq	r6, fp, ip, lsl sp
   12124:	andeq	r4, r2, r0, lsr #1
   12128:			; <UNDEFINED> instruction: 0x000135b8
   1212c:	push	{r4, r5, r6, lr}
   12130:	mov	r4, r0
   12134:	uxtb	r6, r1
   12138:	mov	r0, #1
   1213c:	mov	r1, #16
   12140:	mov	r5, r2
   12144:	bl	11e48 <error@@Base+0x3c>
   12148:	mov	r1, r0
   1214c:	mov	r0, r4
   12150:	strb	r6, [r1, #8]
   12154:	str	r5, [r1, #12]
   12158:	pop	{r4, r5, r6, lr}
   1215c:	b	12724 <error@@Base+0x918>
   12160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12164:	mov	r6, r0
   12168:	mov	r0, r1
   1216c:	clz	r1, r1
   12170:	sub	sp, sp, #116	; 0x74
   12174:	lsr	r1, r1, #5
   12178:	ldrb	r3, [r2]
   1217c:	cmp	r3, #0
   12180:	moveq	r1, #0
   12184:	cmp	r1, #0
   12188:	beq	12198 <error@@Base+0x38c>
   1218c:	ldr	r1, [pc, #732]	; 12470 <error@@Base+0x664>
   12190:	ldr	r0, [pc, #732]	; 12474 <error@@Base+0x668>
   12194:	bl	11e90 <error@@Base+0x84>
   12198:	mov	r4, r2
   1219c:	ldr	r1, [pc, #724]	; 12478 <error@@Base+0x66c>
   121a0:	ldr	r7, [r6, #4]
   121a4:	bl	11ed0 <error@@Base+0xc4>
   121a8:	ldrb	r3, [r4]
   121ac:	mov	r5, r0
   121b0:	cmp	r3, #0
   121b4:	beq	12240 <error@@Base+0x434>
   121b8:	mov	r2, r0
   121bc:	mov	r1, #99	; 0x63
   121c0:	add	r0, sp, #12
   121c4:	bl	10940 <fgets@plt>
   121c8:	cmp	r0, #0
   121cc:	beq	12230 <error@@Base+0x424>
   121d0:	mov	r2, #51	; 0x33
   121d4:	ldr	r1, [pc, #672]	; 1247c <error@@Base+0x670>
   121d8:	add	r0, sp, #12
   121dc:	bl	10a54 <strncmp@plt>
   121e0:	subs	r8, r0, #0
   121e4:	bne	12230 <error@@Base+0x424>
   121e8:	ldr	r9, [pc, #656]	; 12480 <error@@Base+0x674>
   121ec:	mov	r2, r5
   121f0:	mov	r1, #99	; 0x63
   121f4:	add	r0, sp, #12
   121f8:	bl	10940 <fgets@plt>
   121fc:	cmp	r0, #0
   12200:	beq	12228 <error@@Base+0x41c>
   12204:	mov	r1, r9
   12208:	add	r0, sp, #12
   1220c:	bl	10904 <strcmp@plt>
   12210:	cmp	r0, #0
   12214:	bne	121ec <error@@Base+0x3e0>
   12218:	add	r8, r8, #1
   1221c:	sxth	r8, r8
   12220:	cmp	r8, #2
   12224:	bne	121ec <error@@Base+0x3e0>
   12228:	mov	r3, #1
   1222c:	b	1223c <error@@Base+0x430>
   12230:	mov	r0, r5
   12234:	bl	10964 <rewind@plt>
   12238:	mov	r3, #0
   1223c:	strb	r3, [r4, #11]
   12240:	ldr	r8, [r4, #4]
   12244:	mov	r0, r5
   12248:	mov	fp, #0
   1224c:	ldrb	r3, [r4, #1]
   12250:	cmp	r8, #0
   12254:	moveq	r8, #94	; 0x5e
   12258:	str	r3, [sp, #4]
   1225c:	bl	10a6c <getc@plt>
   12260:	cmn	r0, #1
   12264:	bne	12290 <error@@Base+0x484>
   12268:	mov	r0, r5
   1226c:	bl	11cf4 <getc@plt+0x1288>
   12270:	ldrb	r3, [r4, #9]
   12274:	cmp	r3, #0
   12278:	bne	12330 <error@@Base+0x524>
   1227c:	ldrb	r3, [r4, #10]
   12280:	cmp	r3, #0
   12284:	bne	12448 <error@@Base+0x63c>
   12288:	add	sp, sp, #116	; 0x74
   1228c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12290:	ldr	r3, [pc, #492]	; 12484 <error@@Base+0x678>
   12294:	ldrsb	r9, [r3, r0]
   12298:	cmp	r9, #0
   1229c:	bgt	122a8 <error@@Base+0x49c>
   122a0:	ldr	r0, [pc, #480]	; 12488 <error@@Base+0x67c>
   122a4:	bl	11e0c <error@@Base>
   122a8:	cmp	r9, #1
   122ac:	strb	r0, [sp, #8]
   122b0:	beq	122d8 <error@@Base+0x4cc>
   122b4:	sub	sl, r9, #1
   122b8:	mov	r3, r5
   122bc:	mov	r2, sl
   122c0:	mov	r1, #1
   122c4:	add	r0, sp, #9
   122c8:	bl	10994 <fread@plt>
   122cc:	cmp	sl, r0
   122d0:	ldrne	r0, [pc, #436]	; 1248c <error@@Base+0x680>
   122d4:	bne	122a4 <error@@Base+0x498>
   122d8:	add	r2, sp, #12
   122dc:	mov	r1, #4
   122e0:	add	r0, sp, #8
   122e4:	bl	109a0 <utf8proc_iterate@plt>
   122e8:	cmp	r9, r0
   122ec:	beq	122f8 <error@@Base+0x4ec>
   122f0:	bl	10a3c <utf8proc_errmsg@plt>
   122f4:	b	122a4 <error@@Base+0x498>
   122f8:	ldr	r3, [sp, #4]
   122fc:	ldr	r2, [sp, #12]
   12300:	cmp	r3, #0
   12304:	beq	12314 <error@@Base+0x508>
   12308:	cmp	r8, r2
   1230c:	moveq	fp, #1
   12310:	beq	12324 <error@@Base+0x518>
   12314:	mov	r1, fp
   12318:	mov	r0, r6
   1231c:	mov	fp, #0
   12320:	bl	1212c <error@@Base+0x320>
   12324:	mov	r0, r5
   12328:	bl	10a6c <getc@plt>
   1232c:	b	12260 <error@@Base+0x454>
   12330:	cmp	r7, #0
   12334:	mov	sl, #32
   12338:	ldrne	r8, [r7, #4]
   1233c:	ldreq	r8, [r6]
   12340:	mov	r5, r8
   12344:	cmp	r5, #0
   12348:	bne	12394 <error@@Base+0x588>
   1234c:	cmp	r8, #0
   12350:	beq	1227c <error@@Base+0x470>
   12354:	eor	r3, r5, #1
   12358:	ldr	r9, [r8, #4]
   1235c:	ldr	r2, [r8, #12]
   12360:	cmp	r2, #32
   12364:	bne	123e8 <error@@Base+0x5dc>
   12368:	cmp	r9, #0
   1236c:	moveq	r3, #1
   12370:	cmp	r3, #0
   12374:	bne	12418 <error@@Base+0x60c>
   12378:	ldr	r3, [r9, #12]
   1237c:	cmp	r3, #10
   12380:	cmpne	r3, #32
   12384:	beq	12418 <error@@Base+0x60c>
   12388:	subs	r5, r2, #10
   1238c:	movne	r5, #1
   12390:	b	12410 <error@@Base+0x604>
   12394:	ldr	r9, [r5, #12]
   12398:	mov	r0, r9
   1239c:	bl	10934 <utf8proc_get_property@plt>
   123a0:	cmp	r9, #13
   123a4:	bhi	123d8 <error@@Base+0x5cc>
   123a8:	cmp	r9, #11
   123ac:	bcs	123e0 <error@@Base+0x5d4>
   123b0:	cmp	r9, #9
   123b4:	beq	123e0 <error@@Base+0x5d4>
   123b8:	cmp	r9, #10
   123bc:	beq	123d0 <error@@Base+0x5c4>
   123c0:	ldrsh	r3, [r0]
   123c4:	sub	r3, r3, #23
   123c8:	cmp	r3, #2
   123cc:	bls	123e0 <error@@Base+0x5d4>
   123d0:	ldr	r5, [r5, #4]
   123d4:	b	12344 <error@@Base+0x538>
   123d8:	cmp	r9, #160	; 0xa0
   123dc:	bne	123c0 <error@@Base+0x5b4>
   123e0:	str	sl, [r5, #12]
   123e4:	b	123d0 <error@@Base+0x5c4>
   123e8:	cmp	r2, #10
   123ec:	movne	r3, #0
   123f0:	andeq	r3, r3, #1
   123f4:	cmp	r3, #0
   123f8:	beq	12388 <error@@Base+0x57c>
   123fc:	mov	r0, r6
   12400:	mov	r1, r8
   12404:	bl	1274c <error@@Base+0x940>
   12408:	mov	r0, r8
   1240c:	bl	10928 <free@plt>
   12410:	mov	r8, r9
   12414:	b	1234c <error@@Base+0x540>
   12418:	cmp	r9, #0
   1241c:	movne	r3, r5
   12420:	moveq	r3, #0
   12424:	cmp	r3, #0
   12428:	beq	123fc <error@@Base+0x5f0>
   1242c:	ldr	r3, [r9, #12]
   12430:	cmp	r3, #32
   12434:	ldrbeq	r3, [r9, #8]
   12438:	ldrbeq	r2, [r8, #8]
   1243c:	orreq	r3, r3, r2
   12440:	strbeq	r3, [r9, #8]
   12444:	b	123fc <error@@Base+0x5f0>
   12448:	cmp	r7, #0
   1244c:	ldrne	r4, [r7, #4]
   12450:	ldreq	r4, [r6]
   12454:	cmp	r4, #0
   12458:	beq	12288 <error@@Base+0x47c>
   1245c:	ldr	r0, [r4, #12]
   12460:	bl	1097c <utf8proc_tolower@plt>
   12464:	str	r0, [r4, #12]
   12468:	ldr	r4, [r4, #4]
   1246c:	b	12454 <error@@Base+0x648>
   12470:	andeq	r3, r1, r5, lsl r6
   12474:	andeq	r3, r1, pc, lsl r6
   12478:			; <UNDEFINED> instruction: 0x000136b5
   1247c:	andeq	r3, r1, pc, lsr #12
   12480:	andeq	r3, r1, r7, ror #12
   12484:	andeq	r3, r2, r8, lsl #28
   12488:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   1248c:			; <UNDEFINED> instruction: 0x000136b7
   12490:	push	{r4, lr}
   12494:	bl	1094c <utf8proc_encode_char@plt>
   12498:	cmp	r0, #0
   1249c:	bgt	124a8 <error@@Base+0x69c>
   124a0:	ldr	r0, [pc, #8]	; 124b0 <error@@Base+0x6a4>
   124a4:	bl	11e0c <error@@Base>
   124a8:	sxtb	r0, r0
   124ac:	pop	{r4, pc}
   124b0:	andeq	r3, r1, pc, asr #13
   124b4:	push	{r4, r5, r6, r7, r8, lr}
   124b8:	uxtb	r4, r0
   124bc:	mov	r7, r1
   124c0:	cmp	r4, #0
   124c4:	mov	r6, r2
   124c8:	uxtb	r8, r3
   124cc:	beq	124e0 <error@@Base+0x6d4>
   124d0:	mov	r1, r2
   124d4:	mov	r0, #94	; 0x5e
   124d8:	bl	12490 <error@@Base+0x684>
   124dc:	sxth	r4, r0
   124e0:	cmp	r7, #10
   124e4:	add	r5, r6, r4
   124e8:	bne	12508 <error@@Base+0x6fc>
   124ec:	ldr	r2, [pc, #164]	; 12598 <error@@Base+0x78c>
   124f0:	cmp	r8, #0
   124f4:	mov	r0, r5
   124f8:	pop	{r4, r5, r6, r7, r8, lr}
   124fc:	ldr	r1, [pc, #152]	; 1259c <error@@Base+0x790>
   12500:	moveq	r1, r2
   12504:	b	10a30 <sprintf@plt>
   12508:	mov	r0, r7
   1250c:	bl	10934 <utf8proc_get_property@plt>
   12510:	cmp	r7, #32
   12514:	beq	12534 <error@@Base+0x728>
   12518:	ldrh	r3, [r0]
   1251c:	cmp	r3, #29
   12520:	bhi	1257c <error@@Base+0x770>
   12524:	ldr	r2, [pc, #116]	; 125a0 <error@@Base+0x794>
   12528:	mov	r1, #1
   1252c:	ands	r3, r2, r1, lsl r3
   12530:	beq	1257c <error@@Base+0x770>
   12534:	mov	r0, r7
   12538:	bl	109e8 <utf8proc_category@plt>
   1253c:	sub	r0, r0, #6
   12540:	cmp	r0, #2
   12544:	bhi	1255c <error@@Base+0x750>
   12548:	mov	r1, r5
   1254c:	movw	r0, #9676	; 0x25cc
   12550:	bl	12490 <error@@Base+0x684>
   12554:	add	r4, r0, r4
   12558:	sxth	r4, r4
   1255c:	add	r1, r6, r4
   12560:	mov	r0, r7
   12564:	bl	12490 <error@@Base+0x684>
   12568:	add	r0, r0, r4
   1256c:	mov	r3, #0
   12570:	sxth	r0, r0
   12574:	strb	r3, [r6, r0]
   12578:	pop	{r4, r5, r6, r7, r8, pc}
   1257c:	cmp	r7, #255	; 0xff
   12580:	mov	r2, r7
   12584:	mov	r0, r5
   12588:	ldrls	r1, [pc, #20]	; 125a4 <error@@Base+0x798>
   1258c:	pop	{r4, r5, r6, r7, r8, lr}
   12590:	ldrhi	r1, [pc, #16]	; 125a8 <error@@Base+0x79c>
   12594:	b	10a30 <sprintf@plt>
   12598:	andeq	r2, r1, lr, lsr #20
   1259c:	andeq	r3, r1, r6, ror #13
   125a0:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   125a4:	andeq	r3, r1, fp, ror #13
   125a8:	strdeq	r3, [r1], -r2
   125ac:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   125b0:	mov	r5, r2
   125b4:	mov	r6, r0
   125b8:	mov	r0, r1
   125bc:	ldr	r1, [pc, #124]	; 12640 <error@@Base+0x834>
   125c0:	bl	11ed0 <error@@Base+0xc4>
   125c4:	cmp	r5, #0
   125c8:	mov	r4, r0
   125cc:	beq	125fc <error@@Base+0x7f0>
   125d0:	mov	r1, r0
   125d4:	ldr	r0, [pc, #104]	; 12644 <error@@Base+0x838>
   125d8:	bl	10a48 <fputs@plt>
   125dc:	mov	r1, r4
   125e0:	ldr	r0, [pc, #96]	; 12648 <error@@Base+0x83c>
   125e4:	bl	10a48 <fputs@plt>
   125e8:	mov	r0, r4
   125ec:	blx	r5
   125f0:	mov	r1, r4
   125f4:	ldr	r0, [pc, #76]	; 12648 <error@@Base+0x83c>
   125f8:	bl	10a48 <fputs@plt>
   125fc:	ldr	r5, [r6]
   12600:	cmp	r5, #0
   12604:	bne	12618 <error@@Base+0x80c>
   12608:	mov	r0, r4
   1260c:	bl	11cf4 <getc@plt+0x1288>
   12610:	add	sp, sp, #16
   12614:	pop	{r4, r5, r6, pc}
   12618:	ldrb	r0, [r5, #8]
   1261c:	mov	r3, #0
   12620:	add	r2, sp, #4
   12624:	ldr	r1, [r5, #12]
   12628:	bl	124b4 <error@@Base+0x6a8>
   1262c:	mov	r1, r4
   12630:	add	r0, sp, #4
   12634:	bl	10a48 <fputs@plt>
   12638:	ldr	r5, [r5, #4]
   1263c:	b	12600 <error@@Base+0x7f4>
   12640:	andeq	r3, r1, r4, ror r1
   12644:	andeq	r3, r1, pc, lsr #12
   12648:	andeq	r3, r1, r7, ror #12
   1264c:	push	{r0, r1, r4, r5, r6, lr}
   12650:	mov	r3, #0
   12654:	mov	r5, r0
   12658:	mov	r4, r1
   1265c:	str	r3, [sp, #4]
   12660:	ldrb	r3, [r4]
   12664:	cmp	r3, #0
   12668:	bne	12678 <error@@Base+0x86c>
   1266c:	mov	r0, #1
   12670:	add	sp, sp, #8
   12674:	pop	{r4, r5, r6, pc}
   12678:	add	r2, sp, #4
   1267c:	mvn	r1, #0
   12680:	mov	r0, r4
   12684:	bl	109a0 <utf8proc_iterate@plt>
   12688:	subs	r6, r0, #0
   1268c:	ble	126a8 <error@@Base+0x89c>
   12690:	mov	r1, #0
   12694:	mov	r0, r5
   12698:	ldr	r2, [sp, #4]
   1269c:	add	r4, r4, r6
   126a0:	bl	1212c <error@@Base+0x320>
   126a4:	b	12660 <error@@Base+0x854>
   126a8:	mov	r0, #0
   126ac:	b	12670 <error@@Base+0x864>
   126b0:	cmp	r1, #0
   126b4:	push	{r4, lr}
   126b8:	mov	r4, r0
   126bc:	stm	r2, {r1, r3}
   126c0:	strne	r2, [r1, #4]
   126c4:	streq	r2, [r0]
   126c8:	cmp	r3, #0
   126cc:	streq	r2, [r0, #4]
   126d0:	ldr	r0, [r0, #8]
   126d4:	strne	r2, [r3]
   126d8:	cmp	r0, #0
   126dc:	beq	126ec <error@@Base+0x8e0>
   126e0:	bl	10928 <free@plt>
   126e4:	mov	r3, #0
   126e8:	str	r3, [r4, #8]
   126ec:	ldr	r3, [r4, #12]
   126f0:	add	r3, r3, #1
   126f4:	str	r3, [r4, #12]
   126f8:	pop	{r4, pc}
   126fc:	mov	r3, #0
   12700:	str	r3, [r0]
   12704:	str	r3, [r0, #4]
   12708:	str	r3, [r0, #8]
   1270c:	str	r3, [r0, #12]
   12710:	bx	lr
   12714:	mov	r2, r1
   12718:	mov	r1, #0
   1271c:	ldr	r3, [r0]
   12720:	b	126b0 <error@@Base+0x8a4>
   12724:	mov	r2, r1
   12728:	mov	r3, #0
   1272c:	ldr	r1, [r0, #4]
   12730:	b	126b0 <error@@Base+0x8a4>
   12734:	mov	r3, r2
   12738:	mov	r2, r1
   1273c:	ldr	r1, [r3]
   12740:	b	126b0 <error@@Base+0x8a4>
   12744:	ldr	r3, [r1, #4]
   12748:	b	126b0 <error@@Base+0x8a4>
   1274c:	ldr	r3, [r1]
   12750:	push	{r4, r5, r6, lr}
   12754:	mov	r4, r0
   12758:	mov	r5, #0
   1275c:	ldr	r2, [r1, #4]
   12760:	cmp	r3, #0
   12764:	strne	r2, [r3, #4]
   12768:	streq	r2, [r0]
   1276c:	ldr	r2, [r1, #4]
   12770:	cmp	r2, #0
   12774:	streq	r3, [r0, #4]
   12778:	ldr	r0, [r0, #8]
   1277c:	strne	r3, [r2]
   12780:	str	r5, [r1]
   12784:	str	r5, [r1, #4]
   12788:	cmp	r0, r5
   1278c:	beq	12798 <error@@Base+0x98c>
   12790:	bl	10928 <free@plt>
   12794:	str	r5, [r4, #8]
   12798:	ldr	r3, [r4, #12]
   1279c:	sub	r3, r3, #1
   127a0:	str	r3, [r4, #12]
   127a4:	pop	{r4, r5, r6, pc}
   127a8:	ldr	r3, [r0, #8]
   127ac:	cmp	r3, #0
   127b0:	bxne	lr
   127b4:	ldr	r3, [r0, #12]
   127b8:	cmp	r3, #0
   127bc:	bxeq	lr
   127c0:	push	{r4, lr}
   127c4:	mov	r1, #4
   127c8:	mov	r4, r0
   127cc:	mov	r0, r3
   127d0:	bl	11e48 <error@@Base+0x3c>
   127d4:	ldr	r3, [r4]
   127d8:	str	r0, [r4, #8]
   127dc:	sub	r0, r0, #4
   127e0:	cmp	r3, #0
   127e4:	popeq	{r4, pc}
   127e8:	str	r3, [r0, #4]!
   127ec:	ldr	r3, [r3, #4]
   127f0:	b	127e0 <error@@Base+0x9d4>
   127f4:	push	{r4, r5, r6, lr}
   127f8:	mov	r5, r0
   127fc:	mov	r6, r1
   12800:	ldr	r4, [r5]
   12804:	cmp	r4, #0
   12808:	popeq	{r4, r5, r6, pc}
   1280c:	mov	r0, r5
   12810:	mov	r1, r4
   12814:	bl	1274c <error@@Base+0x940>
   12818:	mov	r0, r4
   1281c:	blx	r6
   12820:	b	12800 <error@@Base+0x9f4>
   12824:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12828:	mov	r7, r0
   1282c:	ldr	r6, [pc, #72]	; 1287c <error@@Base+0xa70>
   12830:	ldr	r5, [pc, #72]	; 12880 <error@@Base+0xa74>
   12834:	add	r6, pc, r6
   12838:	add	r5, pc, r5
   1283c:	sub	r6, r6, r5
   12840:	mov	r8, r1
   12844:	mov	r9, r2
   12848:	bl	108d8 <calloc@plt-0x20>
   1284c:	asrs	r6, r6, #2
   12850:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12854:	mov	r4, #0
   12858:	add	r4, r4, #1
   1285c:	ldr	r3, [r5], #4
   12860:	mov	r2, r9
   12864:	mov	r1, r8
   12868:	mov	r0, r7
   1286c:	blx	r3
   12870:	cmp	r6, r4
   12874:	bne	12858 <error@@Base+0xa4c>
   12878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1287c:	andeq	r1, r1, r8, asr #11
   12880:	andeq	r1, r1, r0, asr #11
   12884:	bx	lr
   12888:	mov	r2, r1
   1288c:	mov	r1, r0
   12890:	mov	r0, #3
   12894:	b	10988 <__xstat@plt>

Disassembly of section .fini:

00012898 <.fini>:
   12898:	push	{r3, lr}
   1289c:	pop	{r3, pc}
