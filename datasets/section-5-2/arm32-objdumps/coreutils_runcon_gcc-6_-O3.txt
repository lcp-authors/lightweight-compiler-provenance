
../repos/coreutils/src/runcon:     file format elf32-littlearm


Disassembly of section .init:

00010ed0 <.init>:
   10ed0:	push	{r3, lr}
   10ed4:	bl	11934 <abort@plt+0x774>
   10ed8:	pop	{r3, pc}

Disassembly of section .plt:

00010edc <calloc@plt-0x14>:
   10edc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ee0:	ldr	lr, [pc, #4]	; 10eec <calloc@plt-0x4>
   10ee4:	add	lr, pc, lr
   10ee8:	ldr	pc, [lr, #8]!
   10eec:	andeq	r8, r1, r4, lsl r1

00010ef0 <calloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #276]!	; 0x114

00010efc <fputs_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #268]!	; 0x10c

00010f08 <raise@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #260]!	; 0x104

00010f14 <string_to_security_class@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #252]!	; 0xfc

00010f20 <is_selinux_enabled@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #244]!	; 0xf4

00010f2c <strcmp@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #236]!	; 0xec

00010f38 <fflush@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #228]!	; 0xe4

00010f44 <free@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #220]!	; 0xdc

00010f50 <_exit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #212]!	; 0xd4

00010f5c <memcpy@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #204]!	; 0xcc

00010f68 <execvp@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #196]!	; 0xc4

00010f74 <mbsinit@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #188]!	; 0xbc

00010f80 <context_new@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #180]!	; 0xb4

00010f8c <memcmp@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #172]!	; 0xac

00010f98 <fputc_unlocked@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #164]!	; 0xa4

00010fa4 <context_role_set@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #156]!	; 0x9c

00010fb0 <dcgettext@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #148]!	; 0x94

00010fbc <context_type_set@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #140]!	; 0x8c

00010fc8 <realloc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #132]!	; 0x84

00010fd4 <fgetfilecon@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #124]!	; 0x7c

00010fe0 <textdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #116]!	; 0x74

00010fec <iswprint@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #108]!	; 0x6c

00010ff8 <fwrite@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #100]!	; 0x64

00011004 <lseek64@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #92]!	; 0x5c

00011010 <__ctype_get_mb_cur_max@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #84]!	; 0x54

0001101c <getcon@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #76]!	; 0x4c

00011028 <__fpending@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #68]!	; 0x44

00011034 <mbrtowc@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #60]!	; 0x3c

00011040 <error@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #52]!	; 0x34

0001104c <security_check_context@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #44]!	; 0x2c

00011058 <lgetfilecon@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #36]!	; 0x24

00011064 <malloc@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #28]!

00011070 <__libc_start_main@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #20]!

0001107c <__freading@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #12]!

00011088 <__gmon_start__@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #4]!

00011094 <getopt_long@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #94208	; 0x17000
   1109c:	ldr	pc, [ip, #4092]!	; 0xffc

000110a0 <__ctype_b_loc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #94208	; 0x17000
   110a8:	ldr	pc, [ip, #4084]!	; 0xff4

000110ac <exit@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #94208	; 0x17000
   110b4:	ldr	pc, [ip, #4076]!	; 0xfec

000110b8 <context_user_set@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #94208	; 0x17000
   110c0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110c4 <getfilecon@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #4060]!	; 0xfdc

000110d0 <strlen@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110dc <__errno_location@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #4044]!	; 0xfcc

000110e8 <__cxa_atexit@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110f4 <memset@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #4028]!	; 0xfbc

00011100 <__printf_chk@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #4020]!	; 0xfb4

0001110c <fileno@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #4012]!	; 0xfac

00011118 <__fprintf_chk@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #4004]!	; 0xfa4

00011124 <fclose@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #94208	; 0x17000
   1112c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011130 <fseeko64@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #94208	; 0x17000
   11138:	ldr	pc, [ip, #3988]!	; 0xf94

0001113c <__overflow@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #94208	; 0x17000
   11144:	ldr	pc, [ip, #3980]!	; 0xf8c

00011148 <setlocale@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #94208	; 0x17000
   11150:	ldr	pc, [ip, #3972]!	; 0xf84

00011154 <strrchr@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #94208	; 0x17000
   1115c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011160 <nl_langinfo@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #94208	; 0x17000
   11168:	ldr	pc, [ip, #3956]!	; 0xf74

0001116c <security_compute_create@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #94208	; 0x17000
   11174:	ldr	pc, [ip, #3948]!	; 0xf6c

00011178 <freecon@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #94208	; 0x17000
   11180:	ldr	pc, [ip, #3940]!	; 0xf64

00011184 <bindtextdomain@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #94208	; 0x17000
   1118c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011190 <context_range_set@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #94208	; 0x17000
   11198:	ldr	pc, [ip, #3924]!	; 0xf54

0001119c <setexeccon@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #94208	; 0x17000
   111a4:	ldr	pc, [ip, #3916]!	; 0xf4c

000111a8 <context_str@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #94208	; 0x17000
   111b0:	ldr	pc, [ip, #3908]!	; 0xf44

000111b4 <strncmp@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #94208	; 0x17000
   111bc:	ldr	pc, [ip, #3900]!	; 0xf3c

000111c0 <abort@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #94208	; 0x17000
   111c8:	ldr	pc, [ip, #3892]!	; 0xf34

Disassembly of section .text:

000111cc <.text>:
   111cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111d0:	sub	sp, sp, #44	; 0x2c
   111d4:	mov	r4, #0
   111d8:	mov	r7, r0
   111dc:	ldr	r0, [r1]
   111e0:	mov	r5, r1
   111e4:	str	r4, [sp, #24]
   111e8:	str	r4, [sp, #28]
   111ec:	str	r4, [sp, #32]
   111f0:	bl	11e28 <abort@plt+0xc68>
   111f4:	ldr	r1, [pc, #1656]	; 11874 <abort@plt+0x6b4>
   111f8:	mov	r0, #6
   111fc:	bl	11148 <setlocale@plt>
   11200:	ldr	sl, [pc, #1648]	; 11878 <abort@plt+0x6b8>
   11204:	ldr	r1, [pc, #1648]	; 1187c <abort@plt+0x6bc>
   11208:	ldr	r0, [pc, #1648]	; 11880 <abort@plt+0x6c0>
   1120c:	ldr	r9, [pc, #1648]	; 11884 <abort@plt+0x6c4>
   11210:	ldr	fp, [pc, #1648]	; 11888 <abort@plt+0x6c8>
   11214:	bl	11184 <bindtextdomain@plt>
   11218:	mov	r6, r4
   1121c:	ldr	r0, [pc, #1628]	; 11880 <abort@plt+0x6c0>
   11220:	add	r8, sp, #36	; 0x24
   11224:	bl	10fe0 <textdomain@plt>
   11228:	ldr	r0, [pc, #1628]	; 1188c <abort@plt+0x6cc>
   1122c:	bl	17a60 <abort@plt+0x68a0>
   11230:	str	r4, [sp, #20]
   11234:	str	r4, [sp, #12]
   11238:	str	r4, [sp, #16]
   1123c:	str	r4, [sp, #8]
   11240:	str	r8, [sp]
   11244:	mov	r3, sl
   11248:	mov	r2, r9
   1124c:	mov	r1, r5
   11250:	mov	r0, r7
   11254:	str	r6, [sp, #36]	; 0x24
   11258:	bl	11094 <getopt_long@plt>
   1125c:	cmn	r0, #1
   11260:	beq	11348 <abort@plt+0x188>
   11264:	cmp	r0, #108	; 0x6c
   11268:	beq	11330 <abort@plt+0x170>
   1126c:	bgt	112b8 <abort@plt+0xf8>
   11270:	cmn	r0, #2
   11274:	beq	112f8 <abort@plt+0x138>
   11278:	cmp	r0, #99	; 0x63
   1127c:	beq	112f0 <abort@plt+0x130>
   11280:	cmn	r0, #3
   11284:	bne	112d0 <abort@plt+0x110>
   11288:	ldr	r1, [pc, #1536]	; 11890 <abort@plt+0x6d0>
   1128c:	ldr	r3, [pc, #1536]	; 11894 <abort@plt+0x6d4>
   11290:	ldr	r2, [pc, #1536]	; 11898 <abort@plt+0x6d8>
   11294:	str	r6, [sp, #4]
   11298:	ldr	r0, [r1]
   1129c:	ldr	r3, [r3]
   112a0:	ldr	r1, [pc, #1524]	; 1189c <abort@plt+0x6dc>
   112a4:	str	r2, [sp]
   112a8:	ldr	r2, [pc, #1520]	; 118a0 <abort@plt+0x6e0>
   112ac:	bl	16824 <abort@plt+0x5664>
   112b0:	mov	r0, #0
   112b4:	bl	110ac <exit@plt>
   112b8:	cmp	r0, #116	; 0x74
   112bc:	beq	11300 <abort@plt+0x140>
   112c0:	cmp	r0, #117	; 0x75
   112c4:	beq	112d8 <abort@plt+0x118>
   112c8:	cmp	r0, #114	; 0x72
   112cc:	beq	11318 <abort@plt+0x158>
   112d0:	mov	r0, #1
   112d4:	bl	11a20 <abort@plt+0x860>
   112d8:	ldr	r3, [sp, #12]
   112dc:	cmp	r3, #0
   112e0:	bne	116d8 <abort@plt+0x518>
   112e4:	ldr	r3, [fp]
   112e8:	str	r3, [sp, #12]
   112ec:	b	11240 <abort@plt+0x80>
   112f0:	mov	r4, #1
   112f4:	b	11240 <abort@plt+0x80>
   112f8:	mov	r0, #0
   112fc:	bl	11a20 <abort@plt+0x860>
   11300:	ldr	r3, [sp, #20]
   11304:	cmp	r3, #0
   11308:	bne	116f8 <abort@plt+0x538>
   1130c:	ldr	r3, [fp]
   11310:	str	r3, [sp, #20]
   11314:	b	11240 <abort@plt+0x80>
   11318:	ldr	r3, [sp, #8]
   1131c:	cmp	r3, #0
   11320:	bne	11704 <abort@plt+0x544>
   11324:	ldr	r3, [fp]
   11328:	str	r3, [sp, #8]
   1132c:	b	11240 <abort@plt+0x80>
   11330:	ldr	r3, [sp, #16]
   11334:	cmp	r3, #0
   11338:	bne	11710 <abort@plt+0x550>
   1133c:	ldr	r3, [fp]
   11340:	str	r3, [sp, #16]
   11344:	b	11240 <abort@plt+0x80>
   11348:	ldr	r6, [pc, #1364]	; 118a4 <abort@plt+0x6e4>
   1134c:	ldr	r3, [r6]
   11350:	cmp	r7, r3
   11354:	beq	11468 <abort@plt+0x2a8>
   11358:	ldr	r2, [sp, #12]
   1135c:	ldr	r1, [sp, #8]
   11360:	cmp	r2, #0
   11364:	cmpeq	r1, #0
   11368:	moveq	r8, #1
   1136c:	movne	r8, #0
   11370:	bne	113ac <abort@plt+0x1ec>
   11374:	ldr	r2, [sp, #20]
   11378:	ldr	r1, [sp, #16]
   1137c:	cmp	r2, #0
   11380:	cmpeq	r1, #0
   11384:	moveq	r8, #1
   11388:	movne	r8, #0
   1138c:	eor	r8, r8, #1
   11390:	orrs	r8, r4, r8
   11394:	bne	114b4 <abort@plt+0x2f4>
   11398:	cmp	r7, r3
   1139c:	addgt	r2, r3, #1
   113a0:	strgt	r2, [r6]
   113a4:	ldrgt	r8, [r5, r3, lsl #2]
   113a8:	ble	117e0 <abort@plt+0x620>
   113ac:	ldr	r3, [r6]
   113b0:	cmp	r7, r3
   113b4:	ble	116b0 <abort@plt+0x4f0>
   113b8:	bl	10f20 <is_selinux_enabled@plt>
   113bc:	cmp	r0, #1
   113c0:	mov	r7, r0
   113c4:	bne	11804 <abort@plt+0x644>
   113c8:	cmp	r8, #0
   113cc:	beq	114bc <abort@plt+0x2fc>
   113d0:	mov	r0, r8
   113d4:	bl	10f80 <context_new@plt>
   113d8:	subs	r4, r0, #0
   113dc:	beq	1183c <abort@plt+0x67c>
   113e0:	mov	r0, r4
   113e4:	bl	111a8 <context_str@plt>
   113e8:	bl	1104c <security_check_context@plt>
   113ec:	cmp	r0, #0
   113f0:	blt	1182c <abort@plt+0x66c>
   113f4:	mov	r0, r4
   113f8:	bl	111a8 <context_str@plt>
   113fc:	bl	1119c <setexeccon@plt>
   11400:	cmp	r0, #0
   11404:	bne	11674 <abort@plt+0x4b4>
   11408:	ldr	r0, [sp, #24]
   1140c:	cmp	r0, #0
   11410:	beq	11418 <abort@plt+0x258>
   11414:	bl	11178 <freecon@plt>
   11418:	ldr	r3, [r6]
   1141c:	add	r1, r5, r3, lsl #2
   11420:	ldr	r0, [r5, r3, lsl #2]
   11424:	bl	10f68 <execvp@plt>
   11428:	bl	110dc <__errno_location@plt>
   1142c:	ldr	r3, [r6]
   11430:	ldr	r4, [r0]
   11434:	ldr	r0, [r5, r3, lsl #2]
   11438:	bl	15cf4 <abort@plt+0x4b34>
   1143c:	mov	r1, r4
   11440:	cmp	r4, #2
   11444:	ldr	r2, [pc, #1116]	; 118a8 <abort@plt+0x6e8>
   11448:	moveq	r4, #127	; 0x7f
   1144c:	movne	r4, #126	; 0x7e
   11450:	mov	r3, r0
   11454:	mov	r0, #0
   11458:	bl	11040 <error@plt>
   1145c:	mov	r0, r4
   11460:	add	sp, sp, #44	; 0x2c
   11464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11468:	add	r0, sp, #24
   1146c:	bl	1101c <getcon@plt>
   11470:	cmp	r0, #0
   11474:	blt	11604 <abort@plt+0x444>
   11478:	ldr	r4, [pc, #1040]	; 11890 <abort@plt+0x6d0>
   1147c:	ldr	r0, [sp, #24]
   11480:	ldr	r1, [r4]
   11484:	bl	10efc <fputs_unlocked@plt>
   11488:	ldr	r0, [r4]
   1148c:	ldr	r3, [r0, #20]
   11490:	ldr	r2, [r0, #24]
   11494:	cmp	r2, r3
   11498:	bls	115f4 <abort@plt+0x434>
   1149c:	add	r1, r3, #1
   114a0:	mov	r2, #10
   114a4:	str	r1, [r0, #20]
   114a8:	mov	r4, #0
   114ac:	strb	r2, [r3]
   114b0:	b	1145c <abort@plt+0x29c>
   114b4:	mov	r8, #0
   114b8:	b	113ac <abort@plt+0x1ec>
   114bc:	add	r0, sp, #24
   114c0:	bl	1101c <getcon@plt>
   114c4:	cmp	r0, #0
   114c8:	blt	11604 <abort@plt+0x444>
   114cc:	cmp	r4, #0
   114d0:	beq	11530 <abort@plt+0x370>
   114d4:	ldr	r3, [r6]
   114d8:	add	r1, sp, #28
   114dc:	ldr	r0, [r5, r3, lsl #2]
   114e0:	bl	15e74 <abort@plt+0x4cb4>
   114e4:	cmn	r0, #1
   114e8:	beq	117a0 <abort@plt+0x5e0>
   114ec:	ldr	r0, [pc, #952]	; 118ac <abort@plt+0x6ec>
   114f0:	ldr	r4, [sp, #24]
   114f4:	ldr	r9, [sp, #28]
   114f8:	bl	10f14 <string_to_security_class@plt>
   114fc:	mov	r1, r9
   11500:	add	r3, sp, #32
   11504:	mov	r2, r0
   11508:	mov	r0, r4
   1150c:	bl	1116c <security_compute_create@plt>
   11510:	cmp	r0, #0
   11514:	bne	11778 <abort@plt+0x5b8>
   11518:	ldr	r0, [sp, #28]
   1151c:	bl	11178 <freecon@plt>
   11520:	ldr	r0, [sp, #24]
   11524:	bl	11178 <freecon@plt>
   11528:	ldr	r3, [sp, #32]
   1152c:	str	r3, [sp, #24]
   11530:	ldr	r0, [sp, #24]
   11534:	bl	10f80 <context_new@plt>
   11538:	subs	r4, r0, #0
   1153c:	beq	1171c <abort@plt+0x55c>
   11540:	ldr	r3, [sp, #12]
   11544:	cmp	r3, #0
   11548:	beq	1155c <abort@plt+0x39c>
   1154c:	mov	r1, r3
   11550:	bl	110b8 <context_user_set@plt>
   11554:	cmp	r0, #0
   11558:	bne	11754 <abort@plt+0x594>
   1155c:	ldr	r3, [sp, #20]
   11560:	cmp	r3, #0
   11564:	beq	1157c <abort@plt+0x3bc>
   11568:	mov	r1, r3
   1156c:	mov	r0, r4
   11570:	bl	10fbc <context_type_set@plt>
   11574:	cmp	r0, #0
   11578:	bne	1162c <abort@plt+0x46c>
   1157c:	ldr	r3, [sp, #16]
   11580:	cmp	r3, #0
   11584:	beq	1159c <abort@plt+0x3dc>
   11588:	mov	r1, r3
   1158c:	mov	r0, r4
   11590:	bl	11190 <context_range_set@plt>
   11594:	cmp	r0, #0
   11598:	bne	11650 <abort@plt+0x490>
   1159c:	ldr	r3, [sp, #8]
   115a0:	cmp	r3, #0
   115a4:	beq	113e0 <abort@plt+0x220>
   115a8:	mov	r1, r3
   115ac:	mov	r0, r4
   115b0:	bl	10fa4 <context_role_set@plt>
   115b4:	cmp	r0, #0
   115b8:	beq	113e0 <abort@plt+0x220>
   115bc:	bl	110dc <__errno_location@plt>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #740]	; 118b0 <abort@plt+0x6f0>
   115c8:	ldr	r4, [r0]
   115cc:	mov	r0, #0
   115d0:	bl	10fb0 <dcgettext@plt>
   115d4:	mov	r5, r0
   115d8:	ldr	r0, [sp, #8]
   115dc:	bl	15cf4 <abort@plt+0x4b34>
   115e0:	mov	r2, r5
   115e4:	mov	r1, r4
   115e8:	mov	r3, r0
   115ec:	mov	r0, #1
   115f0:	bl	11040 <error@plt>
   115f4:	mov	r1, #10
   115f8:	bl	1113c <__overflow@plt>
   115fc:	mov	r4, #0
   11600:	b	1145c <abort@plt+0x29c>
   11604:	bl	110dc <__errno_location@plt>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #672]	; 118b4 <abort@plt+0x6f4>
   11610:	ldr	r4, [r0]
   11614:	mov	r0, #0
   11618:	bl	10fb0 <dcgettext@plt>
   1161c:	mov	r1, r4
   11620:	mov	r2, r0
   11624:	mov	r0, #1
   11628:	bl	11040 <error@plt>
   1162c:	bl	110dc <__errno_location@plt>
   11630:	mov	r2, #5
   11634:	ldr	r1, [pc, #636]	; 118b8 <abort@plt+0x6f8>
   11638:	ldr	r4, [r0]
   1163c:	mov	r0, #0
   11640:	bl	10fb0 <dcgettext@plt>
   11644:	mov	r5, r0
   11648:	ldr	r0, [sp, #20]
   1164c:	b	115dc <abort@plt+0x41c>
   11650:	bl	110dc <__errno_location@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #604]	; 118bc <abort@plt+0x6fc>
   1165c:	ldr	r4, [r0]
   11660:	mov	r0, #0
   11664:	bl	10fb0 <dcgettext@plt>
   11668:	mov	r5, r0
   1166c:	ldr	r0, [sp, #16]
   11670:	b	115dc <abort@plt+0x41c>
   11674:	bl	110dc <__errno_location@plt>
   11678:	ldr	r1, [pc, #576]	; 118c0 <abort@plt+0x700>
   1167c:	mov	r2, #5
   11680:	ldr	r5, [r0]
   11684:	mov	r0, #0
   11688:	bl	10fb0 <dcgettext@plt>
   1168c:	mov	r6, r0
   11690:	mov	r0, r4
   11694:	bl	111a8 <context_str@plt>
   11698:	bl	15cf4 <abort@plt+0x4b34>
   1169c:	mov	r2, r6
   116a0:	mov	r1, r5
   116a4:	mov	r3, r0
   116a8:	mov	r0, #1
   116ac:	bl	11040 <error@plt>
   116b0:	mov	r2, #5
   116b4:	ldr	r1, [pc, #520]	; 118c4 <abort@plt+0x704>
   116b8:	mov	r0, #0
   116bc:	bl	10fb0 <dcgettext@plt>
   116c0:	mov	r1, #0
   116c4:	mov	r2, r0
   116c8:	mov	r0, r1
   116cc:	bl	11040 <error@plt>
   116d0:	mov	r0, #1
   116d4:	bl	11a20 <abort@plt+0x860>
   116d8:	ldr	r1, [pc, #488]	; 118c8 <abort@plt+0x708>
   116dc:	mov	r2, #5
   116e0:	mov	r0, #0
   116e4:	bl	10fb0 <dcgettext@plt>
   116e8:	mov	r1, #0
   116ec:	mov	r2, r0
   116f0:	mov	r0, #1
   116f4:	bl	11040 <error@plt>
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #456]	; 118cc <abort@plt+0x70c>
   11700:	b	116e0 <abort@plt+0x520>
   11704:	mov	r2, #5
   11708:	ldr	r1, [pc, #448]	; 118d0 <abort@plt+0x710>
   1170c:	b	116e0 <abort@plt+0x520>
   11710:	mov	r2, #5
   11714:	ldr	r1, [pc, #440]	; 118d4 <abort@plt+0x714>
   11718:	b	116e0 <abort@plt+0x520>
   1171c:	bl	110dc <__errno_location@plt>
   11720:	mov	r2, #5
   11724:	ldr	r1, [pc, #428]	; 118d8 <abort@plt+0x718>
   11728:	ldr	r5, [r0]
   1172c:	mov	r0, r4
   11730:	bl	10fb0 <dcgettext@plt>
   11734:	mov	r4, r0
   11738:	ldr	r0, [sp, #24]
   1173c:	bl	15cf4 <abort@plt+0x4b34>
   11740:	mov	r2, r4
   11744:	mov	r1, r5
   11748:	mov	r3, r0
   1174c:	mov	r0, #1
   11750:	bl	11040 <error@plt>
   11754:	bl	110dc <__errno_location@plt>
   11758:	mov	r2, #5
   1175c:	ldr	r1, [pc, #376]	; 118dc <abort@plt+0x71c>
   11760:	ldr	r4, [r0]
   11764:	mov	r0, #0
   11768:	bl	10fb0 <dcgettext@plt>
   1176c:	mov	r5, r0
   11770:	ldr	r0, [sp, #12]
   11774:	b	115dc <abort@plt+0x41c>
   11778:	bl	110dc <__errno_location@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #344]	; 118e0 <abort@plt+0x720>
   11784:	ldr	r4, [r0]
   11788:	mov	r0, r8
   1178c:	bl	10fb0 <dcgettext@plt>
   11790:	mov	r1, r4
   11794:	mov	r2, r0
   11798:	mov	r0, r7
   1179c:	bl	11040 <error@plt>
   117a0:	bl	110dc <__errno_location@plt>
   117a4:	mov	r2, #5
   117a8:	ldr	r1, [pc, #308]	; 118e4 <abort@plt+0x724>
   117ac:	ldr	r4, [r0]
   117b0:	mov	r0, r8
   117b4:	bl	10fb0 <dcgettext@plt>
   117b8:	ldr	r3, [r6]
   117bc:	ldr	r1, [r5, r3, lsl #2]
   117c0:	mov	r8, r0
   117c4:	mov	r0, #4
   117c8:	bl	14384 <abort@plt+0x31c4>
   117cc:	mov	r2, r8
   117d0:	mov	r1, r4
   117d4:	mov	r3, r0
   117d8:	mov	r0, r7
   117dc:	bl	11040 <error@plt>
   117e0:	mov	r2, #5
   117e4:	ldr	r1, [pc, #252]	; 118e8 <abort@plt+0x728>
   117e8:	mov	r0, r8
   117ec:	bl	10fb0 <dcgettext@plt>
   117f0:	mov	r1, r8
   117f4:	mov	r2, r0
   117f8:	mov	r0, r8
   117fc:	bl	11040 <error@plt>
   11800:	b	112d0 <abort@plt+0x110>
   11804:	mov	r2, #5
   11808:	ldr	r1, [pc, #220]	; 118ec <abort@plt+0x72c>
   1180c:	mov	r0, #0
   11810:	bl	10fb0 <dcgettext@plt>
   11814:	ldr	r3, [pc, #212]	; 118f0 <abort@plt+0x730>
   11818:	mov	r1, #0
   1181c:	ldr	r3, [r3]
   11820:	mov	r2, r0
   11824:	mov	r0, #1
   11828:	bl	11040 <error@plt>
   1182c:	bl	110dc <__errno_location@plt>
   11830:	mov	r2, #5
   11834:	ldr	r1, [pc, #184]	; 118f4 <abort@plt+0x734>
   11838:	b	11680 <abort@plt+0x4c0>
   1183c:	bl	110dc <__errno_location@plt>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #140]	; 118d8 <abort@plt+0x718>
   11848:	ldr	r5, [r0]
   1184c:	mov	r0, r4
   11850:	bl	10fb0 <dcgettext@plt>
   11854:	mov	r4, r0
   11858:	mov	r0, r8
   1185c:	bl	15cf4 <abort@plt+0x4b34>
   11860:	mov	r2, r4
   11864:	mov	r1, r5
   11868:	mov	r3, r0
   1186c:	mov	r0, r7
   11870:	bl	11040 <error@plt>
   11874:	ldrdeq	r7, [r1], -ip
   11878:			; <UNDEFINED> instruction: 0x00017abc
   1187c:	andeq	r7, r1, r4, lsl #30
   11880:	andeq	r7, r1, ip, asr lr
   11884:	andeq	r7, r1, ip, lsl pc
   11888:	andeq	r9, r2, r0, ror r1
   1188c:	andeq	r1, r1, r4, asr #26
   11890:	andeq	r9, r2, ip, ror #2
   11894:	andeq	r9, r2, ip, lsl #2
   11898:	andeq	r7, r1, r0, ror pc
   1189c:	andeq	r7, r1, ip, lsr fp
   118a0:	andeq	r7, r1, r8, asr lr
   118a4:	andeq	r9, r2, r0, ror #2
   118a8:	strdeq	r8, [r1], -r4
   118ac:	andeq	r8, r1, r0, rrx
   118b0:	ldrdeq	r8, [r1], -ip
   118b4:	andeq	r7, r1, r0, lsl #31
   118b8:	andeq	r8, r1, r4, lsr #1
   118bc:	andeq	r8, r1, r0, asr #1
   118c0:	andeq	r8, r1, ip, lsl #2
   118c4:	ldrdeq	r7, [r1], -r0
   118c8:	andeq	r7, r1, r8, asr #30
   118cc:	andeq	r7, r1, r8, lsr pc
   118d0:	andeq	r7, r1, r8, lsr #30
   118d4:	andeq	r7, r1, r8, asr pc
   118d8:	andeq	r8, r1, r0, lsl r0
   118dc:	andeq	r8, r1, r8, lsl #1
   118e0:	andeq	r8, r1, r8, rrx
   118e4:	andeq	r8, r1, r8, lsr r0
   118e8:	andeq	r7, r1, r0, lsr #31
   118ec:	andeq	r7, r1, r8, ror #31
   118f0:	andeq	r9, r2, r0, lsl #3
   118f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   118f8:	mov	fp, #0
   118fc:	mov	lr, #0
   11900:	pop	{r1}		; (ldr r1, [sp], #4)
   11904:	mov	r2, sp
   11908:	push	{r2}		; (str r2, [sp, #-4]!)
   1190c:	push	{r0}		; (str r0, [sp, #-4]!)
   11910:	ldr	ip, [pc, #16]	; 11928 <abort@plt+0x768>
   11914:	push	{ip}		; (str ip, [sp, #-4]!)
   11918:	ldr	r0, [pc, #12]	; 1192c <abort@plt+0x76c>
   1191c:	ldr	r3, [pc, #12]	; 11930 <abort@plt+0x770>
   11920:	bl	11070 <__libc_start_main@plt>
   11924:	bl	111c0 <abort@plt>
   11928:	andeq	r7, r1, ip, asr sl
   1192c:	andeq	r1, r1, ip, asr #3
   11930:	strdeq	r7, [r1], -ip
   11934:	ldr	r3, [pc, #20]	; 11950 <abort@plt+0x790>
   11938:	ldr	r2, [pc, #20]	; 11954 <abort@plt+0x794>
   1193c:	add	r3, pc, r3
   11940:	ldr	r2, [r3, r2]
   11944:	cmp	r2, #0
   11948:	bxeq	lr
   1194c:	b	11088 <__gmon_start__@plt>
   11950:			; <UNDEFINED> instruction: 0x000176bc
   11954:	andeq	r0, r0, r0, lsl #2
   11958:	ldr	r3, [pc, #28]	; 1197c <abort@plt+0x7bc>
   1195c:	ldr	r0, [pc, #28]	; 11980 <abort@plt+0x7c0>
   11960:	sub	r3, r3, r0
   11964:	cmp	r3, #6
   11968:	bxls	lr
   1196c:	ldr	r3, [pc, #16]	; 11984 <abort@plt+0x7c4>
   11970:	cmp	r3, #0
   11974:	bxeq	lr
   11978:	bx	r3
   1197c:	andeq	r9, r2, r7, asr r1
   11980:	andeq	r9, r2, r4, asr r1
   11984:	andeq	r0, r0, r0
   11988:	ldr	r1, [pc, #36]	; 119b4 <abort@plt+0x7f4>
   1198c:	ldr	r0, [pc, #36]	; 119b8 <abort@plt+0x7f8>
   11990:	sub	r1, r1, r0
   11994:	asr	r1, r1, #2
   11998:	add	r1, r1, r1, lsr #31
   1199c:	asrs	r1, r1, #1
   119a0:	bxeq	lr
   119a4:	ldr	r3, [pc, #16]	; 119bc <abort@plt+0x7fc>
   119a8:	cmp	r3, #0
   119ac:	bxeq	lr
   119b0:	bx	r3
   119b4:	andeq	r9, r2, r4, asr r1
   119b8:	andeq	r9, r2, r4, asr r1
   119bc:	andeq	r0, r0, r0
   119c0:	push	{r4, lr}
   119c4:	ldr	r4, [pc, #24]	; 119e4 <abort@plt+0x824>
   119c8:	ldrb	r3, [r4]
   119cc:	cmp	r3, #0
   119d0:	popne	{r4, pc}
   119d4:	bl	11958 <abort@plt+0x798>
   119d8:	mov	r3, #1
   119dc:	strb	r3, [r4]
   119e0:	pop	{r4, pc}
   119e4:	andeq	r9, r2, r4, ror r1
   119e8:	ldr	r0, [pc, #40]	; 11a18 <abort@plt+0x858>
   119ec:	ldr	r3, [r0]
   119f0:	cmp	r3, #0
   119f4:	bne	119fc <abort@plt+0x83c>
   119f8:	b	11988 <abort@plt+0x7c8>
   119fc:	ldr	r3, [pc, #24]	; 11a1c <abort@plt+0x85c>
   11a00:	cmp	r3, #0
   11a04:	beq	119f8 <abort@plt+0x838>
   11a08:	push	{r4, lr}
   11a0c:	blx	r3
   11a10:	pop	{r4, lr}
   11a14:	b	11988 <abort@plt+0x7c8>
   11a18:	andeq	r8, r2, ip, lsl #30
   11a1c:	andeq	r0, r0, r0
   11a20:	subs	r6, r0, #0
   11a24:	push	{r7, lr}
   11a28:	sub	sp, sp, #56	; 0x38
   11a2c:	beq	11a68 <abort@plt+0x8a8>
   11a30:	ldr	r3, [pc, #664]	; 11cd0 <abort@plt+0xb10>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #660]	; 11cd4 <abort@plt+0xb14>
   11a3c:	mov	r0, #0
   11a40:	ldr	r4, [r3]
   11a44:	bl	10fb0 <dcgettext@plt>
   11a48:	ldr	r3, [pc, #648]	; 11cd8 <abort@plt+0xb18>
   11a4c:	mov	r1, #1
   11a50:	ldr	r3, [r3]
   11a54:	mov	r2, r0
   11a58:	mov	r0, r4
   11a5c:	bl	11118 <__fprintf_chk@plt>
   11a60:	mov	r0, r6
   11a64:	bl	110ac <exit@plt>
   11a68:	mov	r2, #5
   11a6c:	ldr	r1, [pc, #616]	; 11cdc <abort@plt+0xb1c>
   11a70:	bl	10fb0 <dcgettext@plt>
   11a74:	ldr	r3, [pc, #604]	; 11cd8 <abort@plt+0xb18>
   11a78:	ldr	r7, [pc, #608]	; 11ce0 <abort@plt+0xb20>
   11a7c:	ldr	r4, [pc, #608]	; 11ce4 <abort@plt+0xb24>
   11a80:	ldr	r3, [r3]
   11a84:	mov	r2, r3
   11a88:	mov	r1, r0
   11a8c:	mov	r0, #1
   11a90:	bl	11100 <__printf_chk@plt>
   11a94:	mov	r2, #5
   11a98:	ldr	r1, [pc, #584]	; 11ce8 <abort@plt+0xb28>
   11a9c:	mov	r0, r6
   11aa0:	bl	10fb0 <dcgettext@plt>
   11aa4:	ldr	r1, [r7]
   11aa8:	bl	10efc <fputs_unlocked@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #564]	; 11cec <abort@plt+0xb2c>
   11ab4:	mov	r0, r6
   11ab8:	bl	10fb0 <dcgettext@plt>
   11abc:	ldr	r1, [r7]
   11ac0:	bl	10efc <fputs_unlocked@plt>
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #544]	; 11cf0 <abort@plt+0xb30>
   11acc:	mov	r0, r6
   11ad0:	bl	10fb0 <dcgettext@plt>
   11ad4:	ldr	r1, [r7]
   11ad8:	bl	10efc <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #524]	; 11cf4 <abort@plt+0xb34>
   11ae4:	mov	r0, r6
   11ae8:	bl	10fb0 <dcgettext@plt>
   11aec:	ldr	r1, [r7]
   11af0:	bl	10efc <fputs_unlocked@plt>
   11af4:	mov	r2, #5
   11af8:	ldr	r1, [pc, #504]	; 11cf8 <abort@plt+0xb38>
   11afc:	mov	r0, r6
   11b00:	bl	10fb0 <dcgettext@plt>
   11b04:	ldr	r1, [r7]
   11b08:	bl	10efc <fputs_unlocked@plt>
   11b0c:	ldm	r4!, {r0, r1, r2, r3}
   11b10:	mov	lr, sp
   11b14:	stmia	lr!, {r0, r1, r2, r3}
   11b18:	ldm	r4!, {r0, r1, r2, r3}
   11b1c:	ldr	ip, [sp]
   11b20:	stmia	lr!, {r0, r1, r2, r3}
   11b24:	cmp	ip, #0
   11b28:	ldm	r4!, {r0, r1, r2, r3}
   11b2c:	stmia	lr!, {r0, r1, r2, r3}
   11b30:	ldm	r4, {r0, r1}
   11b34:	moveq	r4, sp
   11b38:	stm	lr, {r0, r1}
   11b3c:	beq	11b6c <abort@plt+0x9ac>
   11b40:	ldr	r5, [pc, #436]	; 11cfc <abort@plt+0xb3c>
   11b44:	mov	r4, sp
   11b48:	b	11b58 <abort@plt+0x998>
   11b4c:	ldr	ip, [r4, #8]!
   11b50:	cmp	ip, #0
   11b54:	beq	11b6c <abort@plt+0x9ac>
   11b58:	mov	r1, ip
   11b5c:	mov	r0, r5
   11b60:	bl	10f2c <strcmp@plt>
   11b64:	cmp	r0, #0
   11b68:	bne	11b4c <abort@plt+0x98c>
   11b6c:	ldr	r4, [r4, #4]
   11b70:	mov	r2, #5
   11b74:	cmp	r4, #0
   11b78:	ldr	r1, [pc, #384]	; 11d00 <abort@plt+0xb40>
   11b7c:	beq	11c24 <abort@plt+0xa64>
   11b80:	mov	r0, #0
   11b84:	bl	10fb0 <dcgettext@plt>
   11b88:	ldr	r3, [pc, #372]	; 11d04 <abort@plt+0xb44>
   11b8c:	ldr	r2, [pc, #372]	; 11d08 <abort@plt+0xb48>
   11b90:	mov	r1, r0
   11b94:	mov	r0, #1
   11b98:	bl	11100 <__printf_chk@plt>
   11b9c:	mov	r1, #0
   11ba0:	mov	r0, #5
   11ba4:	bl	11148 <setlocale@plt>
   11ba8:	cmp	r0, #0
   11bac:	ldreq	r5, [pc, #328]	; 11cfc <abort@plt+0xb3c>
   11bb0:	beq	11bcc <abort@plt+0xa0c>
   11bb4:	mov	r2, #3
   11bb8:	ldr	r1, [pc, #332]	; 11d0c <abort@plt+0xb4c>
   11bbc:	bl	111b4 <strncmp@plt>
   11bc0:	ldr	r5, [pc, #308]	; 11cfc <abort@plt+0xb3c>
   11bc4:	cmp	r0, #0
   11bc8:	bne	11cb4 <abort@plt+0xaf4>
   11bcc:	mov	r2, #5
   11bd0:	ldr	r1, [pc, #312]	; 11d10 <abort@plt+0xb50>
   11bd4:	mov	r0, #0
   11bd8:	bl	10fb0 <dcgettext@plt>
   11bdc:	ldr	r3, [pc, #280]	; 11cfc <abort@plt+0xb3c>
   11be0:	ldr	r2, [pc, #284]	; 11d04 <abort@plt+0xb44>
   11be4:	mov	r1, r0
   11be8:	mov	r0, #1
   11bec:	bl	11100 <__printf_chk@plt>
   11bf0:	mov	r2, #5
   11bf4:	ldr	r1, [pc, #280]	; 11d14 <abort@plt+0xb54>
   11bf8:	mov	r0, #0
   11bfc:	bl	10fb0 <dcgettext@plt>
   11c00:	ldr	r2, [pc, #272]	; 11d18 <abort@plt+0xb58>
   11c04:	cmp	r4, r5
   11c08:	ldr	r3, [pc, #268]	; 11d1c <abort@plt+0xb5c>
   11c0c:	movne	r3, r2
   11c10:	mov	r1, r0
   11c14:	mov	r2, r4
   11c18:	mov	r0, #1
   11c1c:	bl	11100 <__printf_chk@plt>
   11c20:	b	11a60 <abort@plt+0x8a0>
   11c24:	mov	r0, r4
   11c28:	bl	10fb0 <dcgettext@plt>
   11c2c:	ldr	r3, [pc, #208]	; 11d04 <abort@plt+0xb44>
   11c30:	ldr	r2, [pc, #208]	; 11d08 <abort@plt+0xb48>
   11c34:	mov	r1, r0
   11c38:	mov	r0, #1
   11c3c:	bl	11100 <__printf_chk@plt>
   11c40:	mov	r1, r4
   11c44:	mov	r0, #5
   11c48:	bl	11148 <setlocale@plt>
   11c4c:	cmp	r0, #0
   11c50:	beq	11c68 <abort@plt+0xaa8>
   11c54:	mov	r2, #3
   11c58:	ldr	r1, [pc, #172]	; 11d0c <abort@plt+0xb4c>
   11c5c:	bl	111b4 <strncmp@plt>
   11c60:	cmp	r0, #0
   11c64:	bne	11cac <abort@plt+0xaec>
   11c68:	mov	r2, #5
   11c6c:	ldr	r1, [pc, #156]	; 11d10 <abort@plt+0xb50>
   11c70:	mov	r0, #0
   11c74:	bl	10fb0 <dcgettext@plt>
   11c78:	ldr	r3, [pc, #124]	; 11cfc <abort@plt+0xb3c>
   11c7c:	ldr	r2, [pc, #128]	; 11d04 <abort@plt+0xb44>
   11c80:	mov	r4, r3
   11c84:	mov	r1, r0
   11c88:	mov	r0, #1
   11c8c:	bl	11100 <__printf_chk@plt>
   11c90:	ldr	r1, [pc, #124]	; 11d14 <abort@plt+0xb54>
   11c94:	mov	r2, #5
   11c98:	mov	r0, #0
   11c9c:	bl	10fb0 <dcgettext@plt>
   11ca0:	ldr	r3, [pc, #116]	; 11d1c <abort@plt+0xb5c>
   11ca4:	mov	r1, r0
   11ca8:	b	11c14 <abort@plt+0xa54>
   11cac:	ldr	r5, [pc, #72]	; 11cfc <abort@plt+0xb3c>
   11cb0:	mov	r4, r5
   11cb4:	mov	r2, #5
   11cb8:	ldr	r1, [pc, #96]	; 11d20 <abort@plt+0xb60>
   11cbc:	mov	r0, #0
   11cc0:	bl	10fb0 <dcgettext@plt>
   11cc4:	ldr	r1, [r7]
   11cc8:	bl	10efc <fputs_unlocked@plt>
   11ccc:	b	11bcc <abort@plt+0xa0c>
   11cd0:	andeq	r9, r2, r8, ror #2
   11cd4:	andeq	r7, r1, r4, asr #22
   11cd8:	andeq	r9, r2, r0, lsl #3
   11cdc:	andeq	r7, r1, ip, ror #22
   11ce0:	andeq	r9, r2, ip, ror #2
   11ce4:	andeq	r7, r1, r4, lsl #21
   11ce8:	ldrdeq	r7, [r1], -r8
   11cec:	andeq	r7, r1, r8, asr ip
   11cf0:	andeq	r7, r1, r4, lsr #25
   11cf4:			; <UNDEFINED> instruction: 0x00017db0
   11cf8:	andeq	r7, r1, r0, ror #27
   11cfc:	andeq	r7, r1, ip, lsr fp
   11d00:	andeq	r7, r1, r8, lsl lr
   11d04:	andeq	r7, r1, r0, lsr lr
   11d08:	andeq	r7, r1, r8, asr lr
   11d0c:	andeq	r7, r1, r8, ror #28
   11d10:			; <UNDEFINED> instruction: 0x00017eb4
   11d14:	ldrdeq	r7, [r1], -r0
   11d18:	ldrdeq	r7, [r1], -ip
   11d1c:	andeq	r8, r1, r8, lsr r1
   11d20:	andeq	r7, r1, ip, ror #28
   11d24:	ldr	r3, [pc, #4]	; 11d30 <abort@plt+0xb70>
   11d28:	str	r0, [r3]
   11d2c:	bx	lr
   11d30:	andeq	r9, r2, r8, ror r1
   11d34:	ldr	r3, [pc, #4]	; 11d40 <abort@plt+0xb80>
   11d38:	strb	r0, [r3, #4]
   11d3c:	bx	lr
   11d40:	andeq	r9, r2, r8, ror r1
   11d44:	ldr	r3, [pc, #192]	; 11e0c <abort@plt+0xc4c>
   11d48:	push	{r4, r5, r6, lr}
   11d4c:	sub	sp, sp, #8
   11d50:	ldr	r0, [r3]
   11d54:	bl	17164 <abort@plt+0x5fa4>
   11d58:	cmp	r0, #0
   11d5c:	beq	11d80 <abort@plt+0xbc0>
   11d60:	ldr	r4, [pc, #168]	; 11e10 <abort@plt+0xc50>
   11d64:	ldrb	r3, [r4, #4]
   11d68:	cmp	r3, #0
   11d6c:	beq	11d9c <abort@plt+0xbdc>
   11d70:	bl	110dc <__errno_location@plt>
   11d74:	ldr	r3, [r0]
   11d78:	cmp	r3, #32
   11d7c:	bne	11d9c <abort@plt+0xbdc>
   11d80:	ldr	r3, [pc, #140]	; 11e14 <abort@plt+0xc54>
   11d84:	ldr	r0, [r3]
   11d88:	bl	17164 <abort@plt+0x5fa4>
   11d8c:	cmp	r0, #0
   11d90:	bne	11de4 <abort@plt+0xc24>
   11d94:	add	sp, sp, #8
   11d98:	pop	{r4, r5, r6, pc}
   11d9c:	mov	r2, #5
   11da0:	ldr	r1, [pc, #112]	; 11e18 <abort@plt+0xc58>
   11da4:	mov	r0, #0
   11da8:	bl	10fb0 <dcgettext@plt>
   11dac:	ldr	r4, [r4]
   11db0:	cmp	r4, #0
   11db4:	mov	r5, r0
   11db8:	beq	11df0 <abort@plt+0xc30>
   11dbc:	bl	110dc <__errno_location@plt>
   11dc0:	ldr	r6, [r0]
   11dc4:	mov	r0, r4
   11dc8:	bl	14a94 <abort@plt+0x38d4>
   11dcc:	mov	r1, r6
   11dd0:	str	r5, [sp]
   11dd4:	ldr	r2, [pc, #64]	; 11e1c <abort@plt+0xc5c>
   11dd8:	mov	r3, r0
   11ddc:	mov	r0, #0
   11de0:	bl	11040 <error@plt>
   11de4:	ldr	r3, [pc, #52]	; 11e20 <abort@plt+0xc60>
   11de8:	ldr	r0, [r3]
   11dec:	bl	10f50 <_exit@plt>
   11df0:	bl	110dc <__errno_location@plt>
   11df4:	mov	r3, r5
   11df8:	ldr	r2, [pc, #36]	; 11e24 <abort@plt+0xc64>
   11dfc:	ldr	r1, [r0]
   11e00:	mov	r0, r4
   11e04:	bl	11040 <error@plt>
   11e08:	b	11de4 <abort@plt+0xc24>
   11e0c:	andeq	r9, r2, ip, ror #2
   11e10:	andeq	r9, r2, r8, ror r1
   11e14:	andeq	r9, r2, r8, ror #2
   11e18:	andeq	r8, r1, r4, ror #3
   11e1c:	strdeq	r8, [r1], -r0
   11e20:	andeq	r9, r2, r0, lsl r1
   11e24:	strdeq	r8, [r1], -r4
   11e28:	push	{r4, r5, r6, lr}
   11e2c:	subs	r4, r0, #0
   11e30:	beq	11ea4 <abort@plt+0xce4>
   11e34:	mov	r1, #47	; 0x2f
   11e38:	bl	11154 <strrchr@plt>
   11e3c:	subs	r5, r0, #0
   11e40:	beq	11e90 <abort@plt+0xcd0>
   11e44:	add	r6, r5, #1
   11e48:	sub	r3, r6, r4
   11e4c:	cmp	r3, #6
   11e50:	ble	11e90 <abort@plt+0xcd0>
   11e54:	mov	r2, #7
   11e58:	ldr	r1, [pc, #96]	; 11ec0 <abort@plt+0xd00>
   11e5c:	sub	r0, r5, #6
   11e60:	bl	111b4 <strncmp@plt>
   11e64:	cmp	r0, #0
   11e68:	bne	11e90 <abort@plt+0xcd0>
   11e6c:	mov	r2, #3
   11e70:	ldr	r1, [pc, #76]	; 11ec4 <abort@plt+0xd04>
   11e74:	mov	r0, r6
   11e78:	bl	111b4 <strncmp@plt>
   11e7c:	cmp	r0, #0
   11e80:	movne	r4, r6
   11e84:	ldreq	r3, [pc, #60]	; 11ec8 <abort@plt+0xd08>
   11e88:	addeq	r4, r5, #4
   11e8c:	streq	r4, [r3]
   11e90:	ldr	r2, [pc, #52]	; 11ecc <abort@plt+0xd0c>
   11e94:	ldr	r3, [pc, #52]	; 11ed0 <abort@plt+0xd10>
   11e98:	str	r4, [r2]
   11e9c:	str	r4, [r3]
   11ea0:	pop	{r4, r5, r6, pc}
   11ea4:	ldr	r3, [pc, #40]	; 11ed4 <abort@plt+0xd14>
   11ea8:	mov	r2, #55	; 0x37
   11eac:	mov	r1, #1
   11eb0:	ldr	r3, [r3]
   11eb4:	ldr	r0, [pc, #28]	; 11ed8 <abort@plt+0xd18>
   11eb8:	bl	10ff8 <fwrite@plt>
   11ebc:	bl	111c0 <abort@plt>
   11ec0:	andeq	r8, r1, r0, lsr r2
   11ec4:	andeq	r8, r1, r8, lsr r2
   11ec8:	andeq	r9, r2, r8, asr r1
   11ecc:	andeq	r9, r2, r0, lsl #3
   11ed0:	andeq	r9, r2, ip, asr r1
   11ed4:	andeq	r9, r2, r8, ror #2
   11ed8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11edc:	push	{r4, r5, r6, lr}
   11ee0:	mov	r4, r0
   11ee4:	mov	r5, r1
   11ee8:	bl	173d8 <abort@plt+0x6218>
   11eec:	ldrb	r3, [r0]
   11ef0:	bic	r3, r3, #32
   11ef4:	cmp	r3, #85	; 0x55
   11ef8:	bne	11f58 <abort@plt+0xd98>
   11efc:	ldrb	r3, [r0, #1]
   11f00:	bic	r3, r3, #32
   11f04:	cmp	r3, #84	; 0x54
   11f08:	bne	11f94 <abort@plt+0xdd4>
   11f0c:	ldrb	r3, [r0, #2]
   11f10:	bic	r3, r3, #32
   11f14:	cmp	r3, #70	; 0x46
   11f18:	bne	11f94 <abort@plt+0xdd4>
   11f1c:	ldrb	r3, [r0, #3]
   11f20:	cmp	r3, #45	; 0x2d
   11f24:	bne	11f94 <abort@plt+0xdd4>
   11f28:	ldrb	r3, [r0, #4]
   11f2c:	cmp	r3, #56	; 0x38
   11f30:	bne	11f94 <abort@plt+0xdd4>
   11f34:	ldrb	r3, [r0, #5]
   11f38:	cmp	r3, #0
   11f3c:	bne	11f94 <abort@plt+0xdd4>
   11f40:	ldrb	r2, [r4]
   11f44:	ldr	r3, [pc, #152]	; 11fe4 <abort@plt+0xe24>
   11f48:	ldr	r0, [pc, #152]	; 11fe8 <abort@plt+0xe28>
   11f4c:	cmp	r2, #96	; 0x60
   11f50:	movne	r0, r3
   11f54:	pop	{r4, r5, r6, pc}
   11f58:	cmp	r3, #71	; 0x47
   11f5c:	bne	11f94 <abort@plt+0xdd4>
   11f60:	ldrb	r3, [r0, #1]
   11f64:	bic	r3, r3, #32
   11f68:	cmp	r3, #66	; 0x42
   11f6c:	bne	11f94 <abort@plt+0xdd4>
   11f70:	ldrb	r3, [r0, #2]
   11f74:	cmp	r3, #49	; 0x31
   11f78:	bne	11f94 <abort@plt+0xdd4>
   11f7c:	ldrb	r3, [r0, #3]
   11f80:	cmp	r3, #56	; 0x38
   11f84:	bne	11f94 <abort@plt+0xdd4>
   11f88:	ldrb	r3, [r0, #4]
   11f8c:	cmp	r3, #48	; 0x30
   11f90:	beq	11fa8 <abort@plt+0xde8>
   11f94:	ldr	r3, [pc, #80]	; 11fec <abort@plt+0xe2c>
   11f98:	cmp	r5, #9
   11f9c:	ldr	r0, [pc, #76]	; 11ff0 <abort@plt+0xe30>
   11fa0:	movne	r0, r3
   11fa4:	pop	{r4, r5, r6, pc}
   11fa8:	ldrb	r3, [r0, #5]
   11fac:	cmp	r3, #51	; 0x33
   11fb0:	bne	11f94 <abort@plt+0xdd4>
   11fb4:	ldrb	r3, [r0, #6]
   11fb8:	cmp	r3, #48	; 0x30
   11fbc:	bne	11f94 <abort@plt+0xdd4>
   11fc0:	ldrb	r3, [r0, #7]
   11fc4:	cmp	r3, #0
   11fc8:	bne	11f94 <abort@plt+0xdd4>
   11fcc:	ldrb	r2, [r4]
   11fd0:	ldr	r3, [pc, #28]	; 11ff4 <abort@plt+0xe34>
   11fd4:	ldr	r0, [pc, #28]	; 11ff8 <abort@plt+0xe38>
   11fd8:	cmp	r2, #96	; 0x60
   11fdc:	movne	r0, r3
   11fe0:	pop	{r4, r5, r6, pc}
   11fe4:	muleq	r1, r4, r2
   11fe8:	muleq	r1, r0, r2
   11fec:	andeq	r8, r1, r4, lsr #5
   11ff0:	andeq	r8, r1, r0, lsr #5
   11ff4:	muleq	r1, ip, r2
   11ff8:	muleq	r1, r8, r2
   11ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12000:	sub	sp, sp, #140	; 0x8c
   12004:	mov	r9, r1
   12008:	str	r3, [sp, #24]
   1200c:	mov	r3, #1
   12010:	mov	sl, r0
   12014:	str	r2, [sp, #44]	; 0x2c
   12018:	str	r3, [sp, #28]
   1201c:	bl	11010 <__ctype_get_mb_cur_max@plt>
   12020:	ldr	r3, [sp, #180]	; 0xb4
   12024:	mov	fp, r9
   12028:	mov	r9, sl
   1202c:	lsr	r3, r3, #1
   12030:	and	r3, r3, #1
   12034:	str	r3, [sp, #40]	; 0x28
   12038:	ldr	r3, [sp, #180]	; 0xb4
   1203c:	mov	r2, #0
   12040:	and	r3, r3, #4
   12044:	str	r3, [sp, #100]	; 0x64
   12048:	ldr	r3, [sp, #180]	; 0xb4
   1204c:	str	r2, [sp, #76]	; 0x4c
   12050:	and	r3, r3, #1
   12054:	str	r3, [sp, #96]	; 0x60
   12058:	str	r2, [sp, #36]	; 0x24
   1205c:	str	r2, [sp, #56]	; 0x38
   12060:	str	r2, [sp, #68]	; 0x44
   12064:	str	r2, [sp, #72]	; 0x48
   12068:	str	r2, [sp, #84]	; 0x54
   1206c:	str	r0, [sp, #80]	; 0x50
   12070:	ldr	r3, [sp, #176]	; 0xb0
   12074:	cmp	r3, #10
   12078:	ldrls	pc, [pc, r3, lsl #2]
   1207c:	b	13254 <abort@plt+0x2094>
   12080:	andeq	r2, r1, ip, lsr #1
   12084:	andeq	r2, r1, ip, asr #7
   12088:	andeq	r2, r1, r4, lsr #10
   1208c:	andeq	r2, r1, r0, lsl #8
   12090:	andeq	r2, r1, r8, ror r5
   12094:	andeq	r2, r1, r8, asr r5
   12098:	andeq	r2, r1, r0, lsr #8
   1209c:	andeq	r2, r1, r4, asr #8
   120a0:	andeq	r2, r1, ip, ror #8
   120a4:	andeq	r2, r1, ip, ror #8
   120a8:	andeq	r2, r1, ip, ror #8
   120ac:	mov	r3, #0
   120b0:	ldr	r1, [sp, #56]	; 0x38
   120b4:	ldr	r2, [sp, #176]	; 0xb0
   120b8:	ldr	lr, [sp, #176]	; 0xb0
   120bc:	mov	r8, r3
   120c0:	mov	ip, r3
   120c4:	str	r3, [sp, #40]	; 0x28
   120c8:	mov	r3, r1
   120cc:	cmp	r2, #2
   120d0:	moveq	r3, #0
   120d4:	andne	r3, r3, #1
   120d8:	mov	r0, r3
   120dc:	str	r3, [sp, #92]	; 0x5c
   120e0:	ldr	r3, [sp, #68]	; 0x44
   120e4:	sub	lr, lr, #2
   120e8:	adds	r2, r3, #0
   120ec:	movne	r2, #1
   120f0:	and	r3, r1, ip
   120f4:	and	r3, r2, r3
   120f8:	clz	lr, lr
   120fc:	str	r3, [sp, #88]	; 0x58
   12100:	lsr	lr, lr, #5
   12104:	mov	r3, ip
   12108:	and	r3, r3, lr
   1210c:	mov	sl, #0
   12110:	and	r0, r2, r0
   12114:	str	r3, [sp, #64]	; 0x40
   12118:	eor	r3, r1, #1
   1211c:	str	lr, [sp, #52]	; 0x34
   12120:	str	r0, [sp, #48]	; 0x30
   12124:	str	r3, [sp, #60]	; 0x3c
   12128:	ldr	r3, [sp, #24]
   1212c:	cmn	r3, #1
   12130:	beq	12660 <abort@plt+0x14a0>
   12134:	subs	r7, r3, sl
   12138:	movne	r7, #1
   1213c:	cmp	r7, #0
   12140:	beq	12678 <abort@plt+0x14b8>
   12144:	ldr	r3, [sp, #48]	; 0x30
   12148:	cmp	r3, #0
   1214c:	beq	129e4 <abort@plt+0x1824>
   12150:	ldr	r2, [sp, #68]	; 0x44
   12154:	ldr	r1, [sp, #24]
   12158:	cmp	r2, #1
   1215c:	mov	r3, r2
   12160:	movls	r3, #0
   12164:	movhi	r3, #1
   12168:	cmn	r1, #1
   1216c:	movne	r3, #0
   12170:	cmp	r3, #0
   12174:	add	r4, sl, r2
   12178:	beq	12188 <abort@plt+0xfc8>
   1217c:	ldr	r0, [sp, #44]	; 0x2c
   12180:	bl	110d0 <strlen@plt>
   12184:	str	r0, [sp, #24]
   12188:	ldr	r3, [sp, #24]
   1218c:	cmp	r3, r4
   12190:	ldr	r3, [sp, #44]	; 0x2c
   12194:	add	r5, r3, sl
   12198:	bcc	129ec <abort@plt+0x182c>
   1219c:	mov	r0, r5
   121a0:	ldr	r2, [sp, #68]	; 0x44
   121a4:	ldr	r1, [sp, #72]	; 0x48
   121a8:	bl	10f8c <memcmp@plt>
   121ac:	cmp	r0, #0
   121b0:	bne	129ec <abort@plt+0x182c>
   121b4:	ldr	r3, [sp, #40]	; 0x28
   121b8:	cmp	r3, #0
   121bc:	bne	133a8 <abort@plt+0x21e8>
   121c0:	ldrb	r4, [r5]
   121c4:	cmp	r4, #126	; 0x7e
   121c8:	ldrls	pc, [pc, r4, lsl #2]
   121cc:	b	132e4 <abort@plt+0x2124>
   121d0:	andeq	r2, r1, r4, lsr #17
   121d4:	andeq	r3, r1, r4, ror #5
   121d8:	andeq	r3, r1, r4, ror #5
   121dc:	andeq	r3, r1, r4, ror #5
   121e0:	andeq	r3, r1, r4, ror #5
   121e4:	andeq	r3, r1, r4, ror #5
   121e8:	andeq	r3, r1, r4, ror #5
   121ec:	muleq	r1, r0, r8
   121f0:	andeq	r2, r1, ip, ror r8
   121f4:	andeq	r2, r1, r8, asr r8
   121f8:	andeq	r2, r1, r8, lsr r8
   121fc:	andeq	r2, r1, r8, ror #16
   12200:	andeq	r2, r1, r0, lsr #15
   12204:	ldrdeq	r2, [r1], -r4
   12208:	andeq	r3, r1, r4, ror #5
   1220c:	andeq	r3, r1, r4, ror #5
   12210:	andeq	r3, r1, r4, ror #5
   12214:	andeq	r3, r1, r4, ror #5
   12218:	andeq	r3, r1, r4, ror #5
   1221c:	andeq	r3, r1, r4, ror #5
   12220:	andeq	r3, r1, r4, ror #5
   12224:	andeq	r3, r1, r4, ror #5
   12228:	andeq	r3, r1, r4, ror #5
   1222c:	andeq	r3, r1, r4, ror #5
   12230:	andeq	r3, r1, r4, ror #5
   12234:	andeq	r3, r1, r4, ror #5
   12238:	andeq	r3, r1, r4, ror #5
   1223c:	andeq	r3, r1, r4, ror #5
   12240:	andeq	r3, r1, r4, ror #5
   12244:	andeq	r3, r1, r4, ror #5
   12248:	andeq	r3, r1, r4, ror #5
   1224c:	andeq	r3, r1, r4, ror #5
   12250:	andeq	r2, r1, r4, asr #19
   12254:	andeq	r2, r1, r4, lsr #19
   12258:	andeq	r2, r1, r4, lsr #19
   1225c:	andeq	r2, r1, r4, lsl #19
   12260:	andeq	r2, r1, r4, lsr #19
   12264:	muleq	r1, r0, r7
   12268:	andeq	r2, r1, r4, lsr #19
   1226c:	andeq	r2, r1, ip, ror #14
   12270:	andeq	r2, r1, r4, lsr #19
   12274:	andeq	r2, r1, r4, lsr #19
   12278:	andeq	r2, r1, r4, lsr #19
   1227c:	muleq	r1, r0, r7
   12280:	muleq	r1, r0, r7
   12284:	muleq	r1, r0, r7
   12288:	muleq	r1, r0, r7
   1228c:	muleq	r1, r0, r7
   12290:	muleq	r1, r0, r7
   12294:	muleq	r1, r0, r7
   12298:	muleq	r1, r0, r7
   1229c:	muleq	r1, r0, r7
   122a0:	muleq	r1, r0, r7
   122a4:	muleq	r1, r0, r7
   122a8:	muleq	r1, r0, r7
   122ac:	muleq	r1, r0, r7
   122b0:	muleq	r1, r0, r7
   122b4:	muleq	r1, r0, r7
   122b8:	muleq	r1, r0, r7
   122bc:	andeq	r2, r1, r4, lsr #19
   122c0:	andeq	r2, r1, r4, lsr #19
   122c4:	andeq	r2, r1, r4, lsr #19
   122c8:	andeq	r2, r1, r4, lsr #19
   122cc:	andeq	r2, r1, ip, lsl r7
   122d0:	andeq	r3, r1, r4, ror #5
   122d4:	muleq	r1, r0, r7
   122d8:	muleq	r1, r0, r7
   122dc:	muleq	r1, r0, r7
   122e0:	muleq	r1, r0, r7
   122e4:	muleq	r1, r0, r7
   122e8:	muleq	r1, r0, r7
   122ec:	muleq	r1, r0, r7
   122f0:	muleq	r1, r0, r7
   122f4:	muleq	r1, r0, r7
   122f8:	muleq	r1, r0, r7
   122fc:	muleq	r1, r0, r7
   12300:	muleq	r1, r0, r7
   12304:	muleq	r1, r0, r7
   12308:	muleq	r1, r0, r7
   1230c:	muleq	r1, r0, r7
   12310:	muleq	r1, r0, r7
   12314:	muleq	r1, r0, r7
   12318:	muleq	r1, r0, r7
   1231c:	muleq	r1, r0, r7
   12320:	muleq	r1, r0, r7
   12324:	muleq	r1, r0, r7
   12328:	muleq	r1, r0, r7
   1232c:	muleq	r1, r0, r7
   12330:	muleq	r1, r0, r7
   12334:	muleq	r1, r0, r7
   12338:	muleq	r1, r0, r7
   1233c:	andeq	r2, r1, r4, lsr #19
   12340:	andeq	r2, r1, r8, ror #13
   12344:	muleq	r1, r0, r7
   12348:	andeq	r2, r1, r4, lsr #19
   1234c:	muleq	r1, r0, r7
   12350:	andeq	r2, r1, r4, lsr #19
   12354:	muleq	r1, r0, r7
   12358:	muleq	r1, r0, r7
   1235c:	muleq	r1, r0, r7
   12360:	muleq	r1, r0, r7
   12364:	muleq	r1, r0, r7
   12368:	muleq	r1, r0, r7
   1236c:	muleq	r1, r0, r7
   12370:	muleq	r1, r0, r7
   12374:	muleq	r1, r0, r7
   12378:	muleq	r1, r0, r7
   1237c:	muleq	r1, r0, r7
   12380:	muleq	r1, r0, r7
   12384:	muleq	r1, r0, r7
   12388:	muleq	r1, r0, r7
   1238c:	muleq	r1, r0, r7
   12390:	muleq	r1, r0, r7
   12394:	muleq	r1, r0, r7
   12398:	muleq	r1, r0, r7
   1239c:	muleq	r1, r0, r7
   123a0:	muleq	r1, r0, r7
   123a4:	muleq	r1, r0, r7
   123a8:	muleq	r1, r0, r7
   123ac:	muleq	r1, r0, r7
   123b0:	muleq	r1, r0, r7
   123b4:	muleq	r1, r0, r7
   123b8:	muleq	r1, r0, r7
   123bc:	andeq	r2, r1, r0, lsr #11
   123c0:	andeq	r2, r1, r4, lsr #19
   123c4:	andeq	r2, r1, r0, lsr #11
   123c8:	andeq	r2, r1, r4, lsl #19
   123cc:	mov	r3, #1
   123d0:	str	r3, [sp, #40]	; 0x28
   123d4:	str	r3, [sp, #68]	; 0x44
   123d8:	mov	r8, #0
   123dc:	ldr	r3, [pc, #4056]	; 133bc <abort@plt+0x21fc>
   123e0:	str	r3, [sp, #72]	; 0x48
   123e4:	mov	r3, #2
   123e8:	str	r3, [sp, #176]	; 0xb0
   123ec:	ldr	r1, [sp, #56]	; 0x38
   123f0:	mov	r2, r3
   123f4:	ldr	ip, [sp, #40]	; 0x28
   123f8:	mov	lr, r3
   123fc:	b	120c8 <abort@plt+0xf08>
   12400:	mov	r3, #1
   12404:	str	r3, [sp, #56]	; 0x38
   12408:	str	r3, [sp, #68]	; 0x44
   1240c:	str	r3, [sp, #40]	; 0x28
   12410:	ldr	r3, [pc, #4004]	; 133bc <abort@plt+0x21fc>
   12414:	mov	r8, #0
   12418:	str	r3, [sp, #72]	; 0x48
   1241c:	b	123e4 <abort@plt+0x1224>
   12420:	mov	r3, #1
   12424:	str	r3, [sp, #56]	; 0x38
   12428:	str	r3, [sp, #68]	; 0x44
   1242c:	str	r3, [sp, #40]	; 0x28
   12430:	ldr	r3, [pc, #3976]	; 133c0 <abort@plt+0x2200>
   12434:	mov	r8, #0
   12438:	str	r3, [sp, #72]	; 0x48
   1243c:	mov	r3, #5
   12440:	b	123e8 <abort@plt+0x1228>
   12444:	mov	r3, #0
   12448:	str	r3, [sp, #40]	; 0x28
   1244c:	mov	r3, #1
   12450:	str	r3, [sp, #56]	; 0x38
   12454:	mov	r8, #0
   12458:	mov	r1, r3
   1245c:	ldr	r2, [sp, #176]	; 0xb0
   12460:	ldr	ip, [sp, #40]	; 0x28
   12464:	ldr	lr, [sp, #176]	; 0xb0
   12468:	b	120c8 <abort@plt+0xf08>
   1246c:	ldr	r3, [sp, #176]	; 0xb0
   12470:	cmp	r3, #10
   12474:	beq	124b8 <abort@plt+0x12f8>
   12478:	mov	r2, #5
   1247c:	ldr	r1, [pc, #3904]	; 133c4 <abort@plt+0x2204>
   12480:	mov	r0, #0
   12484:	bl	10fb0 <dcgettext@plt>
   12488:	ldr	r2, [pc, #3892]	; 133c4 <abort@plt+0x2204>
   1248c:	cmp	r0, r2
   12490:	str	r0, [sp, #188]	; 0xbc
   12494:	beq	13550 <abort@plt+0x2390>
   12498:	mov	r2, #5
   1249c:	ldr	r1, [pc, #3864]	; 133bc <abort@plt+0x21fc>
   124a0:	mov	r0, #0
   124a4:	bl	10fb0 <dcgettext@plt>
   124a8:	ldr	r2, [pc, #3852]	; 133bc <abort@plt+0x21fc>
   124ac:	cmp	r0, r2
   124b0:	str	r0, [sp, #192]	; 0xc0
   124b4:	beq	13540 <abort@plt+0x2380>
   124b8:	ldr	r8, [sp, #40]	; 0x28
   124bc:	cmp	r8, #0
   124c0:	movne	r8, #0
   124c4:	bne	124f4 <abort@plt+0x1334>
   124c8:	ldr	r3, [sp, #188]	; 0xbc
   124cc:	ldrb	r3, [r3]
   124d0:	cmp	r3, #0
   124d4:	beq	124f4 <abort@plt+0x1334>
   124d8:	ldr	r2, [sp, #188]	; 0xbc
   124dc:	cmp	fp, r8
   124e0:	strbhi	r3, [r9, r8]
   124e4:	ldrb	r3, [r2, #1]!
   124e8:	add	r8, r8, #1
   124ec:	cmp	r3, #0
   124f0:	bne	124dc <abort@plt+0x131c>
   124f4:	ldr	r0, [sp, #192]	; 0xc0
   124f8:	bl	110d0 <strlen@plt>
   124fc:	ldr	r3, [sp, #192]	; 0xc0
   12500:	ldr	r2, [sp, #176]	; 0xb0
   12504:	str	r3, [sp, #72]	; 0x48
   12508:	mov	r3, #1
   1250c:	str	r3, [sp, #56]	; 0x38
   12510:	mov	r1, r3
   12514:	ldr	ip, [sp, #40]	; 0x28
   12518:	ldr	lr, [sp, #176]	; 0xb0
   1251c:	str	r0, [sp, #68]	; 0x44
   12520:	b	120c8 <abort@plt+0xf08>
   12524:	ldr	r3, [sp, #40]	; 0x28
   12528:	cmp	r3, #0
   1252c:	beq	131d4 <abort@plt+0x2014>
   12530:	mov	r3, #1
   12534:	str	r3, [sp, #68]	; 0x44
   12538:	ldr	r3, [pc, #3708]	; 133bc <abort@plt+0x21fc>
   1253c:	str	r3, [sp, #72]	; 0x48
   12540:	mov	r8, #0
   12544:	ldr	r1, [sp, #56]	; 0x38
   12548:	ldr	r2, [sp, #176]	; 0xb0
   1254c:	ldr	ip, [sp, #40]	; 0x28
   12550:	ldr	lr, [sp, #176]	; 0xb0
   12554:	b	120c8 <abort@plt+0xf08>
   12558:	ldr	r3, [sp, #40]	; 0x28
   1255c:	cmp	r3, #0
   12560:	beq	13258 <abort@plt+0x2098>
   12564:	str	r3, [sp, #56]	; 0x38
   12568:	mov	r3, #1
   1256c:	str	r3, [sp, #68]	; 0x44
   12570:	ldr	r3, [pc, #3656]	; 133c0 <abort@plt+0x2200>
   12574:	b	1253c <abort@plt+0x137c>
   12578:	ldr	r3, [sp, #40]	; 0x28
   1257c:	cmp	r3, #0
   12580:	mov	r3, #1
   12584:	streq	r3, [sp, #56]	; 0x38
   12588:	beq	131d4 <abort@plt+0x2014>
   1258c:	str	r3, [sp, #68]	; 0x44
   12590:	ldr	r3, [pc, #3620]	; 133bc <abort@plt+0x21fc>
   12594:	mov	r8, #0
   12598:	str	r3, [sp, #72]	; 0x48
   1259c:	b	123e4 <abort@plt+0x1224>
   125a0:	ldr	r3, [sp, #24]
   125a4:	ldr	r6, [sp, #48]	; 0x30
   125a8:	cmn	r3, #1
   125ac:	beq	12c08 <abort@plt+0x1a48>
   125b0:	subs	r3, r3, #1
   125b4:	movne	r3, #1
   125b8:	cmp	r3, #0
   125bc:	beq	12988 <abort@plt+0x17c8>
   125c0:	ldr	r1, [sp, #52]	; 0x34
   125c4:	mov	r7, r3
   125c8:	mov	r3, #0
   125cc:	str	r3, [sp, #32]
   125d0:	ldr	r3, [sp, #60]	; 0x3c
   125d4:	orr	r2, r1, r3
   125d8:	ldr	r3, [sp, #40]	; 0x28
   125dc:	eor	r2, r2, #1
   125e0:	orr	r2, r3, r2
   125e4:	tst	r2, #255	; 0xff
   125e8:	bne	12f0c <abort@plt+0x1d4c>
   125ec:	cmp	r6, #0
   125f0:	bne	127cc <abort@plt+0x160c>
   125f4:	ldr	r3, [sp, #36]	; 0x24
   125f8:	add	sl, sl, #1
   125fc:	and	r3, r3, r7
   12600:	uxtb	r6, r3
   12604:	cmp	r6, #0
   12608:	beq	12634 <abort@plt+0x1474>
   1260c:	cmp	fp, r8
   12610:	movhi	r3, #39	; 0x27
   12614:	strbhi	r3, [r9, r8]
   12618:	add	r3, r8, #1
   1261c:	cmp	fp, r3
   12620:	movhi	r2, #39	; 0x27
   12624:	add	r8, r8, #2
   12628:	strbhi	r2, [r9, r3]
   1262c:	mov	r3, #0
   12630:	str	r3, [sp, #36]	; 0x24
   12634:	ldr	r2, [sp, #32]
   12638:	cmp	r8, fp
   1263c:	ldr	r3, [sp, #28]
   12640:	strbcc	r4, [r9, r8]
   12644:	cmp	r2, #0
   12648:	moveq	r3, #0
   1264c:	str	r3, [sp, #28]
   12650:	ldr	r3, [sp, #24]
   12654:	add	r8, r8, #1
   12658:	cmn	r3, #1
   1265c:	bne	12134 <abort@plt+0xf74>
   12660:	ldr	r3, [sp, #44]	; 0x2c
   12664:	ldrb	r3, [r3, sl]
   12668:	adds	r7, r3, #0
   1266c:	movne	r7, #1
   12670:	cmp	r7, #0
   12674:	bne	12144 <abort@plt+0xf84>
   12678:	ldr	r3, [sp, #64]	; 0x40
   1267c:	cmp	r8, #0
   12680:	movne	r3, #0
   12684:	andeq	r3, r3, #1
   12688:	cmp	r3, #0
   1268c:	str	r3, [sp, #64]	; 0x40
   12690:	bne	13134 <abort@plt+0x1f74>
   12694:	ldr	r3, [sp, #40]	; 0x28
   12698:	ldr	r2, [sp, #52]	; 0x34
   1269c:	eor	r3, r3, #1
   126a0:	ands	r2, r2, r3
   126a4:	beq	13560 <abort@plt+0x23a0>
   126a8:	ldr	r3, [sp, #76]	; 0x4c
   126ac:	cmp	r3, #0
   126b0:	beq	13530 <abort@plt+0x2370>
   126b4:	ldr	r3, [sp, #28]
   126b8:	cmp	r3, #0
   126bc:	bne	134ec <abort@plt+0x232c>
   126c0:	ldr	r2, [sp, #84]	; 0x54
   126c4:	clz	r3, fp
   126c8:	cmp	r2, #0
   126cc:	lsr	r3, r3, #5
   126d0:	moveq	r3, #0
   126d4:	cmp	r3, #0
   126d8:	beq	1348c <abort@plt+0x22cc>
   126dc:	mov	fp, r2
   126e0:	str	r3, [sp, #76]	; 0x4c
   126e4:	b	12070 <abort@plt+0xeb0>
   126e8:	ldr	r3, [sp, #176]	; 0xb0
   126ec:	ldr	r6, [sp, #48]	; 0x30
   126f0:	cmp	r3, #2
   126f4:	beq	12c2c <abort@plt+0x1a6c>
   126f8:	ldr	r3, [sp, #88]	; 0x58
   126fc:	cmp	r3, #0
   12700:	beq	131b0 <abort@plt+0x1ff0>
   12704:	mov	r3, #0
   12708:	add	sl, sl, #1
   1270c:	ldr	r6, [sp, #36]	; 0x24
   12710:	str	r3, [sp, #32]
   12714:	mov	r4, #92	; 0x5c
   12718:	b	12604 <abort@plt+0x1444>
   1271c:	ldr	r3, [sp, #176]	; 0xb0
   12720:	ldr	r6, [sp, #48]	; 0x30
   12724:	cmp	r3, #2
   12728:	beq	12c5c <abort@plt+0x1a9c>
   1272c:	cmp	r3, #5
   12730:	bne	131c0 <abort@plt+0x2000>
   12734:	ldr	r3, [sp, #100]	; 0x64
   12738:	cmp	r3, #0
   1273c:	beq	13224 <abort@plt+0x2064>
   12740:	ldr	r2, [sp, #24]
   12744:	add	r3, sl, #2
   12748:	cmp	r2, r3
   1274c:	bls	1275c <abort@plt+0x159c>
   12750:	ldrb	r4, [r5, #1]
   12754:	cmp	r4, #63	; 0x3f
   12758:	beq	133cc <abort@plt+0x220c>
   1275c:	mov	r1, #0
   12760:	str	r1, [sp, #32]
   12764:	mov	r4, #63	; 0x3f
   12768:	b	125d0 <abort@plt+0x1410>
   1276c:	ldr	r3, [sp, #176]	; 0xb0
   12770:	ldr	r6, [sp, #48]	; 0x30
   12774:	cmp	r3, #2
   12778:	beq	12c88 <abort@plt+0x1ac8>
   1277c:	str	r7, [sp, #32]
   12780:	str	r7, [sp, #76]	; 0x4c
   12784:	mov	r1, #0
   12788:	mov	r4, #39	; 0x27
   1278c:	b	125d0 <abort@plt+0x1410>
   12790:	ldr	r6, [sp, #48]	; 0x30
   12794:	ldr	r1, [sp, #52]	; 0x34
   12798:	str	r7, [sp, #32]
   1279c:	b	125d0 <abort@plt+0x1410>
   127a0:	ldr	r6, [sp, #48]	; 0x30
   127a4:	ldr	r1, [sp, #52]	; 0x34
   127a8:	mov	r4, #12
   127ac:	mov	r3, #102	; 0x66
   127b0:	ldr	r2, [sp, #56]	; 0x38
   127b4:	cmp	r2, #0
   127b8:	streq	r2, [sp, #32]
   127bc:	beq	125d0 <abort@plt+0x1410>
   127c0:	mov	r4, r3
   127c4:	mov	r3, #0
   127c8:	str	r3, [sp, #32]
   127cc:	ldr	r3, [sp, #40]	; 0x28
   127d0:	cmp	r3, #0
   127d4:	bne	12f44 <abort@plt+0x1d84>
   127d8:	ldr	r3, [sp, #36]	; 0x24
   127dc:	eor	r3, r3, #1
   127e0:	and	r3, r3, r1
   127e4:	ands	r3, r3, #255	; 0xff
   127e8:	beq	12820 <abort@plt+0x1660>
   127ec:	cmp	fp, r8
   127f0:	movhi	r2, #39	; 0x27
   127f4:	strbhi	r2, [r9, r8]
   127f8:	add	r2, r8, #1
   127fc:	cmp	fp, r2
   12800:	movhi	r1, #36	; 0x24
   12804:	strbhi	r1, [r9, r2]
   12808:	add	r2, r8, #2
   1280c:	cmp	fp, r2
   12810:	add	r8, r8, #3
   12814:	movhi	r1, #39	; 0x27
   12818:	strbhi	r1, [r9, r2]
   1281c:	str	r3, [sp, #36]	; 0x24
   12820:	cmp	fp, r8
   12824:	movhi	r3, #92	; 0x5c
   12828:	strbhi	r3, [r9, r8]
   1282c:	add	sl, sl, #1
   12830:	add	r8, r8, #1
   12834:	b	12634 <abort@plt+0x1474>
   12838:	ldr	r6, [sp, #48]	; 0x30
   1283c:	mov	r4, #10
   12840:	mov	r3, #110	; 0x6e
   12844:	ldr	r2, [sp, #64]	; 0x40
   12848:	cmp	r2, #0
   1284c:	bne	132cc <abort@plt+0x210c>
   12850:	ldr	r1, [sp, #52]	; 0x34
   12854:	b	127b0 <abort@plt+0x15f0>
   12858:	ldr	r6, [sp, #48]	; 0x30
   1285c:	ldr	r1, [sp, #52]	; 0x34
   12860:	mov	r3, #116	; 0x74
   12864:	b	127b0 <abort@plt+0x15f0>
   12868:	ldr	r6, [sp, #48]	; 0x30
   1286c:	ldr	r1, [sp, #52]	; 0x34
   12870:	mov	r4, #11
   12874:	mov	r3, #118	; 0x76
   12878:	b	127b0 <abort@plt+0x15f0>
   1287c:	ldr	r6, [sp, #48]	; 0x30
   12880:	ldr	r1, [sp, #52]	; 0x34
   12884:	mov	r4, #8
   12888:	mov	r3, #98	; 0x62
   1288c:	b	127b0 <abort@plt+0x15f0>
   12890:	ldr	r6, [sp, #48]	; 0x30
   12894:	ldr	r1, [sp, #52]	; 0x34
   12898:	mov	r4, #7
   1289c:	mov	r3, #97	; 0x61
   128a0:	b	127b0 <abort@plt+0x15f0>
   128a4:	ldr	r3, [sp, #56]	; 0x38
   128a8:	ldr	r6, [sp, #48]	; 0x30
   128ac:	cmp	r3, #0
   128b0:	beq	12d74 <abort@plt+0x1bb4>
   128b4:	ldr	r3, [sp, #40]	; 0x28
   128b8:	cmp	r3, #0
   128bc:	bne	133a8 <abort@plt+0x21e8>
   128c0:	ldr	r3, [sp, #36]	; 0x24
   128c4:	ldr	r2, [sp, #52]	; 0x34
   128c8:	eor	r3, r3, #1
   128cc:	ands	r3, r2, r3
   128d0:	moveq	r2, r8
   128d4:	beq	1290c <abort@plt+0x174c>
   128d8:	cmp	fp, r8
   128dc:	movhi	r2, #39	; 0x27
   128e0:	strbhi	r2, [r9, r8]
   128e4:	add	r2, r8, #1
   128e8:	cmp	fp, r2
   128ec:	movhi	r1, #36	; 0x24
   128f0:	strbhi	r1, [r9, r2]
   128f4:	add	r2, r8, #2
   128f8:	cmp	fp, r2
   128fc:	movhi	r1, #39	; 0x27
   12900:	strbhi	r1, [r9, r2]
   12904:	add	r2, r8, #3
   12908:	str	r3, [sp, #36]	; 0x24
   1290c:	cmp	fp, r2
   12910:	movhi	r3, #92	; 0x5c
   12914:	strbhi	r3, [r9, r2]
   12918:	ldr	r3, [sp, #92]	; 0x5c
   1291c:	add	r8, r2, #1
   12920:	cmp	r3, #0
   12924:	beq	132a8 <abort@plt+0x20e8>
   12928:	ldr	r1, [sp, #24]
   1292c:	add	r3, sl, #1
   12930:	cmp	r1, r3
   12934:	bls	1296c <abort@plt+0x17ac>
   12938:	ldr	r1, [sp, #44]	; 0x2c
   1293c:	ldrb	r3, [r1, r3]
   12940:	sub	r3, r3, #48	; 0x30
   12944:	cmp	r3, #9
   12948:	bhi	1296c <abort@plt+0x17ac>
   1294c:	cmp	fp, r8
   12950:	movhi	r3, #48	; 0x30
   12954:	strbhi	r3, [r9, r8]
   12958:	add	r3, r2, #2
   1295c:	cmp	fp, r3
   12960:	add	r8, r2, #3
   12964:	movhi	r1, #48	; 0x30
   12968:	strbhi	r1, [r9, r3]
   1296c:	ldr	r3, [sp, #40]	; 0x28
   12970:	ldr	r1, [sp, #52]	; 0x34
   12974:	mov	r7, r3
   12978:	str	r3, [sp, #32]
   1297c:	mov	r4, #48	; 0x30
   12980:	b	125d0 <abort@plt+0x1410>
   12984:	ldr	r6, [sp, #48]	; 0x30
   12988:	cmp	sl, #0
   1298c:	streq	r7, [sp, #32]
   12990:	beq	129b0 <abort@plt+0x17f0>
   12994:	mov	r3, #0
   12998:	ldr	r1, [sp, #52]	; 0x34
   1299c:	str	r3, [sp, #32]
   129a0:	b	125d0 <abort@plt+0x1410>
   129a4:	ldr	r6, [sp, #48]	; 0x30
   129a8:	mov	r3, #0
   129ac:	str	r3, [sp, #32]
   129b0:	ldr	r3, [sp, #64]	; 0x40
   129b4:	cmp	r3, #0
   129b8:	bne	13134 <abort@plt+0x1f74>
   129bc:	ldr	r1, [sp, #52]	; 0x34
   129c0:	b	125d0 <abort@plt+0x1410>
   129c4:	ldr	r3, [sp, #48]	; 0x30
   129c8:	mov	r6, r3
   129cc:	str	r3, [sp, #32]
   129d0:	b	129b0 <abort@plt+0x17f0>
   129d4:	ldr	r6, [sp, #48]	; 0x30
   129d8:	mov	r4, #13
   129dc:	mov	r3, #114	; 0x72
   129e0:	b	12844 <abort@plt+0x1684>
   129e4:	ldr	r3, [sp, #44]	; 0x2c
   129e8:	add	r5, r3, sl
   129ec:	ldrb	r4, [r5]
   129f0:	cmp	r4, #126	; 0x7e
   129f4:	ldrls	pc, [pc, r4, lsl #2]
   129f8:	b	12d94 <abort@plt+0x1bd4>
   129fc:	andeq	r2, r1, r4, ror #26
   12a00:	muleq	r1, r4, sp
   12a04:	muleq	r1, r4, sp
   12a08:	muleq	r1, r4, sp
   12a0c:	muleq	r1, r4, sp
   12a10:	muleq	r1, r4, sp
   12a14:	muleq	r1, r4, sp
   12a18:	andeq	r2, r1, ip, asr sp
   12a1c:	andeq	r2, r1, r4, asr sp
   12a20:	andeq	r2, r1, r8, asr #26
   12a24:	andeq	r2, r1, r0, asr #26
   12a28:	andeq	r2, r1, r8, lsr sp
   12a2c:	andeq	r2, r1, r0, lsr sp
   12a30:	andeq	r2, r1, r8, lsr #26
   12a34:	muleq	r1, r4, sp
   12a38:	muleq	r1, r4, sp
   12a3c:	muleq	r1, r4, sp
   12a40:	muleq	r1, r4, sp
   12a44:	muleq	r1, r4, sp
   12a48:	muleq	r1, r4, sp
   12a4c:	muleq	r1, r4, sp
   12a50:	muleq	r1, r4, sp
   12a54:	muleq	r1, r4, sp
   12a58:	muleq	r1, r4, sp
   12a5c:	muleq	r1, r4, sp
   12a60:	muleq	r1, r4, sp
   12a64:	muleq	r1, r4, sp
   12a68:	muleq	r1, r4, sp
   12a6c:	muleq	r1, r4, sp
   12a70:	muleq	r1, r4, sp
   12a74:	muleq	r1, r4, sp
   12a78:	muleq	r1, r4, sp
   12a7c:	andeq	r2, r1, ip, lsl sp
   12a80:	andeq	r2, r1, r4, lsl sp
   12a84:	andeq	r2, r1, r4, lsl sp
   12a88:	andeq	r2, r1, ip, lsl #26
   12a8c:	andeq	r2, r1, r4, lsl sp
   12a90:	andeq	r2, r1, r4, lsl #26
   12a94:	andeq	r2, r1, r4, lsl sp
   12a98:	andeq	r2, r1, r8, ror ip
   12a9c:	andeq	r2, r1, r4, lsl sp
   12aa0:	andeq	r2, r1, r4, lsl sp
   12aa4:	andeq	r2, r1, r4, lsl sp
   12aa8:	andeq	r2, r1, r4, lsl #26
   12aac:	andeq	r2, r1, r4, lsl #26
   12ab0:	andeq	r2, r1, r4, lsl #26
   12ab4:	andeq	r2, r1, r4, lsl #26
   12ab8:	andeq	r2, r1, r4, lsl #26
   12abc:	andeq	r2, r1, r4, lsl #26
   12ac0:	andeq	r2, r1, r4, lsl #26
   12ac4:	andeq	r2, r1, r4, lsl #26
   12ac8:	andeq	r2, r1, r4, lsl #26
   12acc:	andeq	r2, r1, r4, lsl #26
   12ad0:	andeq	r2, r1, r4, lsl #26
   12ad4:	andeq	r2, r1, r4, lsl #26
   12ad8:	andeq	r2, r1, r4, lsl #26
   12adc:	andeq	r2, r1, r4, lsl #26
   12ae0:	andeq	r2, r1, r4, lsl #26
   12ae4:	andeq	r2, r1, r4, lsl #26
   12ae8:	andeq	r2, r1, r4, lsl sp
   12aec:	andeq	r2, r1, r4, lsl sp
   12af0:	andeq	r2, r1, r4, lsl sp
   12af4:	andeq	r2, r1, r4, lsl sp
   12af8:	andeq	r2, r1, ip, asr #24
   12afc:	muleq	r1, r4, sp
   12b00:	andeq	r2, r1, r4, lsl #26
   12b04:	andeq	r2, r1, r4, lsl #26
   12b08:	andeq	r2, r1, r4, lsl #26
   12b0c:	andeq	r2, r1, r4, lsl #26
   12b10:	andeq	r2, r1, r4, lsl #26
   12b14:	andeq	r2, r1, r4, lsl #26
   12b18:	andeq	r2, r1, r4, lsl #26
   12b1c:	andeq	r2, r1, r4, lsl #26
   12b20:	andeq	r2, r1, r4, lsl #26
   12b24:	andeq	r2, r1, r4, lsl #26
   12b28:	andeq	r2, r1, r4, lsl #26
   12b2c:	andeq	r2, r1, r4, lsl #26
   12b30:	andeq	r2, r1, r4, lsl #26
   12b34:	andeq	r2, r1, r4, lsl #26
   12b38:	andeq	r2, r1, r4, lsl #26
   12b3c:	andeq	r2, r1, r4, lsl #26
   12b40:	andeq	r2, r1, r4, lsl #26
   12b44:	andeq	r2, r1, r4, lsl #26
   12b48:	andeq	r2, r1, r4, lsl #26
   12b4c:	andeq	r2, r1, r4, lsl #26
   12b50:	andeq	r2, r1, r4, lsl #26
   12b54:	andeq	r2, r1, r4, lsl #26
   12b58:	andeq	r2, r1, r4, lsl #26
   12b5c:	andeq	r2, r1, r4, lsl #26
   12b60:	andeq	r2, r1, r4, lsl #26
   12b64:	andeq	r2, r1, r4, lsl #26
   12b68:	andeq	r2, r1, r4, lsl sp
   12b6c:	andeq	r2, r1, ip, lsl ip
   12b70:	andeq	r2, r1, r4, lsl #26
   12b74:	andeq	r2, r1, r4, lsl sp
   12b78:	andeq	r2, r1, r4, lsl #26
   12b7c:	andeq	r2, r1, r4, lsl sp
   12b80:	andeq	r2, r1, r4, lsl #26
   12b84:	andeq	r2, r1, r4, lsl #26
   12b88:	andeq	r2, r1, r4, lsl #26
   12b8c:	andeq	r2, r1, r4, lsl #26
   12b90:	andeq	r2, r1, r4, lsl #26
   12b94:	andeq	r2, r1, r4, lsl #26
   12b98:	andeq	r2, r1, r4, lsl #26
   12b9c:	andeq	r2, r1, r4, lsl #26
   12ba0:	andeq	r2, r1, r4, lsl #26
   12ba4:	andeq	r2, r1, r4, lsl #26
   12ba8:	andeq	r2, r1, r4, lsl #26
   12bac:	andeq	r2, r1, r4, lsl #26
   12bb0:	andeq	r2, r1, r4, lsl #26
   12bb4:	andeq	r2, r1, r4, lsl #26
   12bb8:	andeq	r2, r1, r4, lsl #26
   12bbc:	andeq	r2, r1, r4, lsl #26
   12bc0:	andeq	r2, r1, r4, lsl #26
   12bc4:	andeq	r2, r1, r4, lsl #26
   12bc8:	andeq	r2, r1, r4, lsl #26
   12bcc:	andeq	r2, r1, r4, lsl #26
   12bd0:	andeq	r2, r1, r4, lsl #26
   12bd4:	andeq	r2, r1, r4, lsl #26
   12bd8:	andeq	r2, r1, r4, lsl #26
   12bdc:	andeq	r2, r1, r4, lsl #26
   12be0:	andeq	r2, r1, r4, lsl #26
   12be4:	andeq	r2, r1, r4, lsl #26
   12be8:	strdeq	r2, [r1], -r8
   12bec:	andeq	r2, r1, r4, lsl sp
   12bf0:	strdeq	r2, [r1], -r8
   12bf4:	andeq	r2, r1, ip, lsl #26
   12bf8:	ldr	r3, [sp, #24]
   12bfc:	mov	r6, #0
   12c00:	cmn	r3, #1
   12c04:	bne	125b0 <abort@plt+0x13f0>
   12c08:	ldr	r3, [sp, #44]	; 0x2c
   12c0c:	ldrb	r3, [r3, #1]
   12c10:	adds	r3, r3, #0
   12c14:	movne	r3, #1
   12c18:	b	125b8 <abort@plt+0x13f8>
   12c1c:	ldr	r3, [sp, #176]	; 0xb0
   12c20:	mov	r6, #0
   12c24:	cmp	r3, #2
   12c28:	bne	126f8 <abort@plt+0x1538>
   12c2c:	ldr	r3, [sp, #64]	; 0x40
   12c30:	cmp	r3, #0
   12c34:	bne	1346c <abort@plt+0x22ac>
   12c38:	add	sl, sl, #1
   12c3c:	ldr	r6, [sp, #36]	; 0x24
   12c40:	str	r3, [sp, #32]
   12c44:	mov	r4, #92	; 0x5c
   12c48:	b	12604 <abort@plt+0x1444>
   12c4c:	ldr	r3, [sp, #176]	; 0xb0
   12c50:	mov	r6, #0
   12c54:	cmp	r3, #2
   12c58:	bne	1272c <abort@plt+0x156c>
   12c5c:	ldr	r3, [sp, #40]	; 0x28
   12c60:	cmp	r3, #0
   12c64:	bne	12f48 <abort@plt+0x1d88>
   12c68:	mov	r1, r7
   12c6c:	str	r3, [sp, #32]
   12c70:	mov	r4, #63	; 0x3f
   12c74:	b	125d0 <abort@plt+0x1410>
   12c78:	ldr	r3, [sp, #176]	; 0xb0
   12c7c:	mov	r6, #0
   12c80:	cmp	r3, #2
   12c84:	bne	1277c <abort@plt+0x15bc>
   12c88:	ldr	r3, [sp, #64]	; 0x40
   12c8c:	cmp	r3, #0
   12c90:	bne	1346c <abort@plt+0x22ac>
   12c94:	ldr	r2, [sp, #84]	; 0x54
   12c98:	adds	r3, fp, #0
   12c9c:	movne	r3, #1
   12ca0:	cmp	r2, #0
   12ca4:	movne	r3, #0
   12ca8:	cmp	r3, #0
   12cac:	strne	fp, [sp, #84]	; 0x54
   12cb0:	movne	fp, #0
   12cb4:	bne	12ce4 <abort@plt+0x1b24>
   12cb8:	cmp	fp, r8
   12cbc:	movhi	r3, #39	; 0x27
   12cc0:	strbhi	r3, [r9, r8]
   12cc4:	add	r3, r8, #1
   12cc8:	cmp	fp, r3
   12ccc:	movhi	r2, #92	; 0x5c
   12cd0:	strbhi	r2, [r9, r3]
   12cd4:	add	r3, r8, #2
   12cd8:	cmp	fp, r3
   12cdc:	movhi	r2, #39	; 0x27
   12ce0:	strbhi	r2, [r9, r3]
   12ce4:	ldr	r3, [sp, #64]	; 0x40
   12ce8:	add	r8, r8, #3
   12cec:	mov	r1, r7
   12cf0:	str	r7, [sp, #32]
   12cf4:	str	r7, [sp, #76]	; 0x4c
   12cf8:	str	r3, [sp, #36]	; 0x24
   12cfc:	mov	r4, #39	; 0x27
   12d00:	b	125d0 <abort@plt+0x1410>
   12d04:	mov	r6, #0
   12d08:	b	12794 <abort@plt+0x15d4>
   12d0c:	mov	r6, #0
   12d10:	b	12988 <abort@plt+0x17c8>
   12d14:	mov	r6, #0
   12d18:	b	129a8 <abort@plt+0x17e8>
   12d1c:	str	r7, [sp, #32]
   12d20:	mov	r6, #0
   12d24:	b	129b0 <abort@plt+0x17f0>
   12d28:	mov	r6, #0
   12d2c:	b	129d8 <abort@plt+0x1818>
   12d30:	mov	r6, #0
   12d34:	b	127a4 <abort@plt+0x15e4>
   12d38:	mov	r6, #0
   12d3c:	b	1286c <abort@plt+0x16ac>
   12d40:	mov	r6, #0
   12d44:	b	1283c <abort@plt+0x167c>
   12d48:	mov	r6, #0
   12d4c:	mov	r3, #116	; 0x74
   12d50:	b	12844 <abort@plt+0x1684>
   12d54:	mov	r6, #0
   12d58:	b	12880 <abort@plt+0x16c0>
   12d5c:	mov	r6, #0
   12d60:	b	12894 <abort@plt+0x16d4>
   12d64:	ldr	r3, [sp, #56]	; 0x38
   12d68:	mov	r6, #0
   12d6c:	cmp	r3, #0
   12d70:	bne	128b4 <abort@plt+0x16f4>
   12d74:	ldr	r3, [sp, #96]	; 0x60
   12d78:	cmp	r3, #0
   12d7c:	addne	sl, sl, #1
   12d80:	bne	12128 <abort@plt+0xf68>
   12d84:	ldr	r1, [sp, #52]	; 0x34
   12d88:	str	r3, [sp, #32]
   12d8c:	mov	r4, r3
   12d90:	b	125d0 <abort@plt+0x1410>
   12d94:	mov	r6, #0
   12d98:	ldr	r3, [sp, #80]	; 0x50
   12d9c:	cmp	r3, #1
   12da0:	bne	12f90 <abort@plt+0x1dd0>
   12da4:	bl	110a0 <__ctype_b_loc@plt>
   12da8:	ldr	r2, [sp, #80]	; 0x50
   12dac:	sxth	r3, r4
   12db0:	mov	r1, r2
   12db4:	lsl	r3, r3, #1
   12db8:	ldr	r2, [r0]
   12dbc:	ldrh	r3, [r2, r3]
   12dc0:	and	r3, r3, #16384	; 0x4000
   12dc4:	cmp	r3, #0
   12dc8:	movne	r3, #1
   12dcc:	moveq	r3, #0
   12dd0:	str	r3, [sp, #32]
   12dd4:	moveq	r3, #1
   12dd8:	movne	r3, #0
   12ddc:	ldr	r2, [sp, #56]	; 0x38
   12de0:	and	r3, r3, r2
   12de4:	ands	r3, r3, #255	; 0xff
   12de8:	beq	129bc <abort@plt+0x17fc>
   12dec:	add	r1, sl, r1
   12df0:	mov	r0, #0
   12df4:	ldr	r7, [sp, #40]	; 0x28
   12df8:	ldr	r2, [sp, #36]	; 0x24
   12dfc:	ldr	lr, [sp, #52]	; 0x34
   12e00:	b	12eb0 <abort@plt+0x1cf0>
   12e04:	cmp	r7, #0
   12e08:	bne	13204 <abort@plt+0x2044>
   12e0c:	eor	r0, r2, #1
   12e10:	ands	r0, lr, r0
   12e14:	beq	12e4c <abort@plt+0x1c8c>
   12e18:	cmp	fp, r8
   12e1c:	movhi	r2, #39	; 0x27
   12e20:	strbhi	r2, [r9, r8]
   12e24:	add	r2, r8, #1
   12e28:	cmp	fp, r2
   12e2c:	movhi	ip, #36	; 0x24
   12e30:	strbhi	ip, [r9, r2]
   12e34:	add	r2, r8, #2
   12e38:	cmp	fp, r2
   12e3c:	movhi	ip, #39	; 0x27
   12e40:	strbhi	ip, [r9, r2]
   12e44:	add	r8, r8, #3
   12e48:	mov	r2, r0
   12e4c:	cmp	fp, r8
   12e50:	movhi	r0, #92	; 0x5c
   12e54:	strbhi	r0, [r9, r8]
   12e58:	add	r0, r8, #1
   12e5c:	cmp	fp, r0
   12e60:	lsrhi	ip, r4, #6
   12e64:	addhi	ip, ip, #48	; 0x30
   12e68:	strbhi	ip, [r9, r0]
   12e6c:	add	ip, r8, #2
   12e70:	cmp	fp, ip
   12e74:	lsrhi	r0, r4, #3
   12e78:	andhi	r0, r0, #7
   12e7c:	addhi	r0, r0, #48	; 0x30
   12e80:	add	sl, sl, #1
   12e84:	strbhi	r0, [r9, ip]
   12e88:	and	r4, r4, #7
   12e8c:	cmp	sl, r1
   12e90:	add	r4, r4, #48	; 0x30
   12e94:	add	r8, r8, #3
   12e98:	bcs	1321c <abort@plt+0x205c>
   12e9c:	mov	r0, r3
   12ea0:	cmp	fp, r8
   12ea4:	strbhi	r4, [r9, r8]
   12ea8:	ldrb	r4, [r5, #1]!
   12eac:	add	r8, r8, #1
   12eb0:	cmp	r3, #0
   12eb4:	bne	12e04 <abort@plt+0x1c44>
   12eb8:	cmp	r6, #0
   12ebc:	bne	12f60 <abort@plt+0x1da0>
   12ec0:	eor	r6, r0, #1
   12ec4:	and	r6, r6, r2
   12ec8:	add	sl, sl, #1
   12ecc:	cmp	r1, sl
   12ed0:	uxtb	r6, r6
   12ed4:	bls	12f88 <abort@plt+0x1dc8>
   12ed8:	cmp	r6, #0
   12edc:	beq	12ea0 <abort@plt+0x1ce0>
   12ee0:	cmp	fp, r8
   12ee4:	movhi	r2, #39	; 0x27
   12ee8:	strbhi	r2, [r9, r8]
   12eec:	add	r2, r8, #1
   12ef0:	cmp	fp, r2
   12ef4:	movhi	ip, #39	; 0x27
   12ef8:	strbhi	ip, [r9, r2]
   12efc:	add	r8, r8, #2
   12f00:	mov	r6, r3
   12f04:	mov	r2, r3
   12f08:	b	12ea0 <abort@plt+0x1ce0>
   12f0c:	ldr	r3, [sp, #184]	; 0xb8
   12f10:	cmp	r3, #0
   12f14:	beq	125ec <abort@plt+0x142c>
   12f18:	lsr	r2, r4, #5
   12f1c:	mov	r0, r3
   12f20:	uxtb	r2, r2
   12f24:	and	r3, r4, #31
   12f28:	ldr	r2, [r0, r2, lsl #2]
   12f2c:	lsr	r3, r2, r3
   12f30:	tst	r3, #1
   12f34:	beq	125ec <abort@plt+0x142c>
   12f38:	ldr	r3, [sp, #40]	; 0x28
   12f3c:	cmp	r3, #0
   12f40:	beq	127d8 <abort@plt+0x1618>
   12f44:	mov	r3, r1
   12f48:	str	r3, [sp, #64]	; 0x40
   12f4c:	mov	sl, r9
   12f50:	ldr	r3, [sp, #56]	; 0x38
   12f54:	mov	r9, fp
   12f58:	ldr	r2, [sp, #64]	; 0x40
   12f5c:	b	1314c <abort@plt+0x1f8c>
   12f60:	cmp	fp, r8
   12f64:	eor	r6, r0, #1
   12f68:	movhi	ip, #92	; 0x5c
   12f6c:	and	r6, r6, r2
   12f70:	add	sl, sl, #1
   12f74:	strbhi	ip, [r9, r8]
   12f78:	cmp	r1, sl
   12f7c:	add	r8, r8, #1
   12f80:	uxtb	r6, r6
   12f84:	bhi	12ed8 <abort@plt+0x1d18>
   12f88:	str	r2, [sp, #36]	; 0x24
   12f8c:	b	12604 <abort@plt+0x1444>
   12f90:	ldr	r3, [sp, #24]
   12f94:	cmn	r3, #1
   12f98:	mov	r3, #0
   12f9c:	str	r3, [sp, #128]	; 0x80
   12fa0:	str	r3, [sp, #132]	; 0x84
   12fa4:	beq	13298 <abort@plt+0x20d8>
   12fa8:	mov	r2, r7
   12fac:	mov	r3, #0
   12fb0:	str	r7, [sp, #104]	; 0x68
   12fb4:	str	r5, [sp, #116]	; 0x74
   12fb8:	mov	r7, r3
   12fbc:	mov	r5, r2
   12fc0:	str	r4, [sp, #32]
   12fc4:	str	r6, [sp, #108]	; 0x6c
   12fc8:	str	r8, [sp, #112]	; 0x70
   12fcc:	ldr	r3, [sp, #44]	; 0x2c
   12fd0:	add	r6, sl, r7
   12fd4:	add	r4, r3, r6
   12fd8:	ldr	r3, [sp, #24]
   12fdc:	mov	r1, r4
   12fe0:	sub	r2, r3, r6
   12fe4:	add	r0, sp, #124	; 0x7c
   12fe8:	add	r3, sp, #128	; 0x80
   12fec:	bl	1740c <abort@plt+0x624c>
   12ff0:	subs	r8, r0, #0
   12ff4:	beq	1337c <abort@plt+0x21bc>
   12ff8:	cmn	r8, #1
   12ffc:	beq	13354 <abort@plt+0x2194>
   13000:	cmn	r8, #2
   13004:	beq	132ec <abort@plt+0x212c>
   13008:	ldr	r3, [sp, #64]	; 0x40
   1300c:	cmp	r3, #0
   13010:	beq	130d0 <abort@plt+0x1f10>
   13014:	cmp	r8, #1
   13018:	beq	130d0 <abort@plt+0x1f10>
   1301c:	sub	r3, r8, #1
   13020:	add	r6, r3, r6
   13024:	ldr	r3, [sp, #44]	; 0x2c
   13028:	add	r6, r3, r6
   1302c:	ldrb	r3, [r4, #1]!
   13030:	sub	r3, r3, #91	; 0x5b
   13034:	cmp	r3, #33	; 0x21
   13038:	ldrls	pc, [pc, r3, lsl #2]
   1303c:	b	130c8 <abort@plt+0x1f08>
   13040:	andeq	r3, r1, r4, lsr r1
   13044:	andeq	r3, r1, r4, lsr r1
   13048:	andeq	r3, r1, r8, asr #1
   1304c:	andeq	r3, r1, r4, lsr r1
   13050:	andeq	r3, r1, r8, asr #1
   13054:	andeq	r3, r1, r4, lsr r1
   13058:	andeq	r3, r1, r8, asr #1
   1305c:	andeq	r3, r1, r8, asr #1
   13060:	andeq	r3, r1, r8, asr #1
   13064:	andeq	r3, r1, r8, asr #1
   13068:	andeq	r3, r1, r8, asr #1
   1306c:	andeq	r3, r1, r8, asr #1
   13070:	andeq	r3, r1, r8, asr #1
   13074:	andeq	r3, r1, r8, asr #1
   13078:	andeq	r3, r1, r8, asr #1
   1307c:	andeq	r3, r1, r8, asr #1
   13080:	andeq	r3, r1, r8, asr #1
   13084:	andeq	r3, r1, r8, asr #1
   13088:	andeq	r3, r1, r8, asr #1
   1308c:	andeq	r3, r1, r8, asr #1
   13090:	andeq	r3, r1, r8, asr #1
   13094:	andeq	r3, r1, r8, asr #1
   13098:	andeq	r3, r1, r8, asr #1
   1309c:	andeq	r3, r1, r8, asr #1
   130a0:	andeq	r3, r1, r8, asr #1
   130a4:	andeq	r3, r1, r8, asr #1
   130a8:	andeq	r3, r1, r8, asr #1
   130ac:	andeq	r3, r1, r8, asr #1
   130b0:	andeq	r3, r1, r8, asr #1
   130b4:	andeq	r3, r1, r8, asr #1
   130b8:	andeq	r3, r1, r8, asr #1
   130bc:	andeq	r3, r1, r8, asr #1
   130c0:	andeq	r3, r1, r8, asr #1
   130c4:	andeq	r3, r1, r4, lsr r1
   130c8:	cmp	r6, r4
   130cc:	bne	1302c <abort@plt+0x1e6c>
   130d0:	ldr	r0, [sp, #124]	; 0x7c
   130d4:	bl	10fec <iswprint@plt>
   130d8:	add	r7, r7, r8
   130dc:	cmp	r0, #0
   130e0:	add	r0, sp, #128	; 0x80
   130e4:	moveq	r5, #0
   130e8:	bl	10f74 <mbsinit@plt>
   130ec:	cmp	r0, #0
   130f0:	beq	12fcc <abort@plt+0x1e0c>
   130f4:	ldr	r4, [sp, #32]
   130f8:	str	r5, [sp, #32]
   130fc:	ldr	r3, [sp, #32]
   13100:	mov	r1, r7
   13104:	eor	r3, r3, #1
   13108:	ldr	r7, [sp, #104]	; 0x68
   1310c:	ldr	r6, [sp, #108]	; 0x6c
   13110:	ldr	r8, [sp, #112]	; 0x70
   13114:	ldr	r5, [sp, #116]	; 0x74
   13118:	uxtb	r3, r3
   1311c:	cmp	r1, #1
   13120:	bls	12ddc <abort@plt+0x1c1c>
   13124:	ldr	r2, [sp, #56]	; 0x38
   13128:	and	r3, r3, r2
   1312c:	uxtb	r3, r3
   13130:	b	12dec <abort@plt+0x1c2c>
   13134:	mov	r3, #2
   13138:	str	r3, [sp, #176]	; 0xb0
   1313c:	ldr	r2, [sp, #64]	; 0x40
   13140:	ldr	r3, [sp, #56]	; 0x38
   13144:	mov	sl, r9
   13148:	mov	r9, fp
   1314c:	and	r3, r3, r2
   13150:	tst	r3, #255	; 0xff
   13154:	ldr	r3, [sp, #176]	; 0xb0
   13158:	movne	r3, #4
   1315c:	str	r3, [sp, #176]	; 0xb0
   13160:	ldr	r3, [sp, #180]	; 0xb4
   13164:	mov	ip, #0
   13168:	bic	r3, r3, #2
   1316c:	str	r3, [sp, #4]
   13170:	ldr	r3, [sp, #192]	; 0xc0
   13174:	ldr	r2, [sp, #44]	; 0x2c
   13178:	str	r3, [sp, #16]
   1317c:	ldr	r3, [sp, #188]	; 0xbc
   13180:	mov	r1, r9
   13184:	str	r3, [sp, #12]
   13188:	ldr	r3, [sp, #176]	; 0xb0
   1318c:	mov	r0, sl
   13190:	str	r3, [sp]
   13194:	str	ip, [sp, #8]
   13198:	ldr	r3, [sp, #24]
   1319c:	bl	11ffc <abort@plt+0xe3c>
   131a0:	mov	fp, r0
   131a4:	mov	r0, fp
   131a8:	add	sp, sp, #140	; 0x8c
   131ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131b0:	mov	r4, #92	; 0x5c
   131b4:	mov	r1, #0
   131b8:	mov	r3, r4
   131bc:	b	127b0 <abort@plt+0x15f0>
   131c0:	mov	r3, #0
   131c4:	ldr	r1, [sp, #52]	; 0x34
   131c8:	str	r3, [sp, #32]
   131cc:	mov	r4, #63	; 0x3f
   131d0:	b	125d0 <abort@plt+0x1410>
   131d4:	cmp	fp, #0
   131d8:	beq	13234 <abort@plt+0x2074>
   131dc:	mov	r3, #39	; 0x27
   131e0:	strb	r3, [r9]
   131e4:	mov	r3, #0
   131e8:	str	r3, [sp, #40]	; 0x28
   131ec:	mov	r3, #1
   131f0:	str	r3, [sp, #68]	; 0x44
   131f4:	ldr	r3, [pc, #448]	; 133bc <abort@plt+0x21fc>
   131f8:	mov	r8, #1
   131fc:	str	r3, [sp, #72]	; 0x48
   13200:	b	123e4 <abort@plt+0x1224>
   13204:	ldr	r3, [sp, #40]	; 0x28
   13208:	mov	sl, r9
   1320c:	str	r3, [sp, #56]	; 0x38
   13210:	mov	r9, fp
   13214:	ldr	r2, [sp, #64]	; 0x40
   13218:	b	1314c <abort@plt+0x1f8c>
   1321c:	str	r2, [sp, #36]	; 0x24
   13220:	b	12634 <abort@plt+0x1474>
   13224:	mov	r1, #0
   13228:	str	r3, [sp, #32]
   1322c:	mov	r4, #63	; 0x3f
   13230:	b	125d0 <abort@plt+0x1410>
   13234:	ldr	r3, [pc, #384]	; 133bc <abort@plt+0x21fc>
   13238:	str	r3, [sp, #72]	; 0x48
   1323c:	mov	r3, #0
   13240:	str	r3, [sp, #40]	; 0x28
   13244:	mov	r3, #1
   13248:	str	r3, [sp, #68]	; 0x44
   1324c:	mov	r8, r3
   13250:	b	123e4 <abort@plt+0x1224>
   13254:	bl	111c0 <abort@plt>
   13258:	cmp	fp, #0
   1325c:	beq	132bc <abort@plt+0x20fc>
   13260:	mov	r2, #1
   13264:	mov	r3, #34	; 0x22
   13268:	strb	r3, [r9]
   1326c:	mov	r8, r2
   13270:	mov	r3, r2
   13274:	str	r2, [sp, #68]	; 0x44
   13278:	str	r3, [sp, #56]	; 0x38
   1327c:	ldr	r3, [pc, #316]	; 133c0 <abort@plt+0x2200>
   13280:	ldr	r1, [sp, #56]	; 0x38
   13284:	str	r3, [sp, #72]	; 0x48
   13288:	ldr	r2, [sp, #176]	; 0xb0
   1328c:	ldr	ip, [sp, #40]	; 0x28
   13290:	ldr	lr, [sp, #176]	; 0xb0
   13294:	b	120c8 <abort@plt+0xf08>
   13298:	ldr	r0, [sp, #44]	; 0x2c
   1329c:	bl	110d0 <strlen@plt>
   132a0:	str	r0, [sp, #24]
   132a4:	b	12fa8 <abort@plt+0x1de8>
   132a8:	mov	r7, #0
   132ac:	ldr	r1, [sp, #52]	; 0x34
   132b0:	str	r3, [sp, #32]
   132b4:	mov	r4, #48	; 0x30
   132b8:	b	125d0 <abort@plt+0x1410>
   132bc:	mov	r3, #1
   132c0:	str	r3, [sp, #68]	; 0x44
   132c4:	mov	r8, r3
   132c8:	b	13278 <abort@plt+0x20b8>
   132cc:	mov	r3, #2
   132d0:	mov	sl, r9
   132d4:	str	r3, [sp, #176]	; 0xb0
   132d8:	mov	r9, fp
   132dc:	ldr	r3, [sp, #56]	; 0x38
   132e0:	b	1314c <abort@plt+0x1f8c>
   132e4:	ldr	r6, [sp, #48]	; 0x30
   132e8:	b	12d98 <abort@plt+0x1bd8>
   132ec:	ldr	r0, [sp, #24]
   132f0:	mov	ip, r6
   132f4:	cmp	r0, ip
   132f8:	mov	r1, r7
   132fc:	mov	r2, r4
   13300:	ldr	r7, [sp, #104]	; 0x68
   13304:	ldr	r4, [sp, #32]
   13308:	ldr	r6, [sp, #108]	; 0x6c
   1330c:	ldr	r8, [sp, #112]	; 0x70
   13310:	ldr	r5, [sp, #116]	; 0x74
   13314:	bls	13344 <abort@plt+0x2184>
   13318:	ldrb	r3, [r2]
   1331c:	cmp	r3, #0
   13320:	bne	13334 <abort@plt+0x2174>
   13324:	b	13454 <abort@plt+0x2294>
   13328:	ldrb	r3, [r2, #1]!
   1332c:	cmp	r3, #0
   13330:	beq	13454 <abort@plt+0x2294>
   13334:	add	r1, r1, #1
   13338:	add	r3, sl, r1
   1333c:	cmp	r0, r3
   13340:	bhi	13328 <abort@plt+0x2168>
   13344:	mov	r2, #0
   13348:	mov	r3, r7
   1334c:	str	r2, [sp, #32]
   13350:	b	1311c <abort@plt+0x1f5c>
   13354:	mov	r1, r7
   13358:	ldr	r7, [sp, #104]	; 0x68
   1335c:	mov	r2, #0
   13360:	ldr	r4, [sp, #32]
   13364:	ldr	r6, [sp, #108]	; 0x6c
   13368:	ldr	r8, [sp, #112]	; 0x70
   1336c:	ldr	r5, [sp, #116]	; 0x74
   13370:	mov	r3, r7
   13374:	str	r2, [sp, #32]
   13378:	b	1311c <abort@plt+0x1f5c>
   1337c:	mov	r3, r5
   13380:	eor	r3, r3, #1
   13384:	ldr	r4, [sp, #32]
   13388:	mov	r1, r7
   1338c:	str	r5, [sp, #32]
   13390:	ldr	r7, [sp, #104]	; 0x68
   13394:	ldr	r6, [sp, #108]	; 0x6c
   13398:	ldr	r8, [sp, #112]	; 0x70
   1339c:	ldr	r5, [sp, #116]	; 0x74
   133a0:	uxtb	r3, r3
   133a4:	b	1311c <abort@plt+0x1f5c>
   133a8:	mov	sl, r9
   133ac:	str	r3, [sp, #56]	; 0x38
   133b0:	mov	r9, fp
   133b4:	ldr	r2, [sp, #64]	; 0x40
   133b8:	b	1314c <abort@plt+0x1f8c>
   133bc:	andeq	r8, r1, r4, lsr #5
   133c0:	andeq	r8, r1, r0, lsr #5
   133c4:	andeq	r8, r1, r8, lsr #5
   133c8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   133cc:	ldr	r2, [sp, #44]	; 0x2c
   133d0:	ldrb	r1, [r2, r3]
   133d4:	sub	r2, r1, #33	; 0x21
   133d8:	uxtb	r2, r2
   133dc:	cmp	r2, #29
   133e0:	bhi	13460 <abort@plt+0x22a0>
   133e4:	ldr	r0, [pc, #-36]	; 133c8 <abort@plt+0x2208>
   133e8:	mov	ip, #1
   133ec:	ands	r2, r0, ip, lsl r2
   133f0:	beq	13480 <abort@plt+0x22c0>
   133f4:	ldr	r2, [sp, #40]	; 0x28
   133f8:	cmp	r2, #0
   133fc:	bne	13574 <abort@plt+0x23b4>
   13400:	add	r2, r8, #1
   13404:	cmp	fp, r8
   13408:	strbhi	r4, [r9, r8]
   1340c:	cmp	fp, r2
   13410:	movhi	r0, #34	; 0x22
   13414:	strbhi	r0, [r9, r2]
   13418:	add	r2, r8, #2
   1341c:	cmp	fp, r2
   13420:	movhi	r0, #34	; 0x22
   13424:	strbhi	r0, [r9, r2]
   13428:	add	r2, r8, #3
   1342c:	cmp	fp, r2
   13430:	mov	sl, r3
   13434:	ldr	r3, [sp, #40]	; 0x28
   13438:	movhi	r0, #63	; 0x3f
   1343c:	mov	r4, r1
   13440:	strbhi	r0, [r9, r2]
   13444:	add	r8, r8, #4
   13448:	mov	r1, r3
   1344c:	str	r3, [sp, #32]
   13450:	b	125d0 <abort@plt+0x1410>
   13454:	str	r3, [sp, #32]
   13458:	mov	r3, r7
   1345c:	b	1311c <abort@plt+0x1f5c>
   13460:	mov	r1, #0
   13464:	str	r1, [sp, #32]
   13468:	b	125d0 <abort@plt+0x1410>
   1346c:	mov	sl, r9
   13470:	ldr	r3, [sp, #56]	; 0x38
   13474:	mov	r9, fp
   13478:	ldr	r2, [sp, #64]	; 0x40
   1347c:	b	1314c <abort@plt+0x1f8c>
   13480:	str	r2, [sp, #32]
   13484:	mov	r1, #0
   13488:	b	125d0 <abort@plt+0x1410>
   1348c:	ldr	r2, [sp, #76]	; 0x4c
   13490:	mov	sl, r9
   13494:	mov	r9, fp
   13498:	mov	fp, r8
   1349c:	ldr	r1, [sp, #72]	; 0x48
   134a0:	cmp	r1, #0
   134a4:	moveq	r3, #0
   134a8:	andne	r3, r2, #1
   134ac:	cmp	r3, #0
   134b0:	beq	134dc <abort@plt+0x231c>
   134b4:	ldrb	r3, [r1]
   134b8:	cmp	r3, #0
   134bc:	beq	134dc <abort@plt+0x231c>
   134c0:	mov	r2, r1
   134c4:	cmp	r9, fp
   134c8:	strbhi	r3, [sl, fp]
   134cc:	ldrb	r3, [r2, #1]!
   134d0:	add	fp, fp, #1
   134d4:	cmp	r3, #0
   134d8:	bne	134c4 <abort@plt+0x2304>
   134dc:	cmp	r9, fp
   134e0:	movhi	r3, #0
   134e4:	strbhi	r3, [sl, fp]
   134e8:	b	131a4 <abort@plt+0x1fe4>
   134ec:	ldr	r3, [sp, #192]	; 0xc0
   134f0:	mov	ip, #5
   134f4:	str	r3, [sp, #16]
   134f8:	ldr	r3, [sp, #188]	; 0xbc
   134fc:	ldr	r2, [sp, #44]	; 0x2c
   13500:	str	r3, [sp, #12]
   13504:	ldr	r3, [sp, #184]	; 0xb8
   13508:	ldr	r1, [sp, #84]	; 0x54
   1350c:	str	r3, [sp, #8]
   13510:	ldr	r3, [sp, #180]	; 0xb4
   13514:	mov	r0, r9
   13518:	str	r3, [sp, #4]
   1351c:	str	ip, [sp]
   13520:	ldr	r3, [sp, #24]
   13524:	bl	11ffc <abort@plt+0xe3c>
   13528:	mov	fp, r0
   1352c:	b	131a4 <abort@plt+0x1fe4>
   13530:	mov	sl, r9
   13534:	mov	r9, fp
   13538:	mov	fp, r8
   1353c:	b	1349c <abort@plt+0x22dc>
   13540:	ldr	r1, [sp, #176]	; 0xb0
   13544:	bl	11edc <abort@plt+0xd1c>
   13548:	str	r0, [sp, #192]	; 0xc0
   1354c:	b	124b8 <abort@plt+0x12f8>
   13550:	ldr	r1, [sp, #176]	; 0xb0
   13554:	bl	11edc <abort@plt+0xd1c>
   13558:	str	r0, [sp, #188]	; 0xbc
   1355c:	b	12498 <abort@plt+0x12d8>
   13560:	mov	sl, r9
   13564:	mov	r2, r3
   13568:	mov	r9, fp
   1356c:	mov	fp, r8
   13570:	b	1349c <abort@plt+0x22dc>
   13574:	mov	sl, r9
   13578:	mov	r9, fp
   1357c:	b	13160 <abort@plt+0x1fa0>
   13580:	push	{r4, r5, r6, lr}
   13584:	mov	r5, r0
   13588:	bl	110dc <__errno_location@plt>
   1358c:	cmp	r5, #0
   13590:	mov	r1, #48	; 0x30
   13594:	mov	r4, r0
   13598:	ldr	r0, [pc, #16]	; 135b0 <abort@plt+0x23f0>
   1359c:	ldr	r6, [r4]
   135a0:	movne	r0, r5
   135a4:	bl	16f78 <abort@plt+0x5db8>
   135a8:	str	r6, [r4]
   135ac:	pop	{r4, r5, r6, pc}
   135b0:	andeq	r9, r2, r4, lsl #3
   135b4:	ldr	r3, [pc, #12]	; 135c8 <abort@plt+0x2408>
   135b8:	cmp	r0, #0
   135bc:	moveq	r0, r3
   135c0:	ldr	r0, [r0]
   135c4:	bx	lr
   135c8:	andeq	r9, r2, r4, lsl #3
   135cc:	ldr	r3, [pc, #12]	; 135e0 <abort@plt+0x2420>
   135d0:	cmp	r0, #0
   135d4:	moveq	r0, r3
   135d8:	str	r1, [r0]
   135dc:	bx	lr
   135e0:	andeq	r9, r2, r4, lsl #3
   135e4:	ldr	r3, [pc, #52]	; 13620 <abort@plt+0x2460>
   135e8:	cmp	r0, #0
   135ec:	moveq	r0, r3
   135f0:	add	r3, r0, #8
   135f4:	push	{lr}		; (str lr, [sp, #-4]!)
   135f8:	lsr	lr, r1, #5
   135fc:	and	r1, r1, #31
   13600:	ldr	ip, [r3, lr, lsl #2]
   13604:	lsr	r0, ip, r1
   13608:	eor	r2, r2, r0
   1360c:	and	r2, r2, #1
   13610:	and	r0, r0, #1
   13614:	eor	r1, ip, r2, lsl r1
   13618:	str	r1, [r3, lr, lsl #2]
   1361c:	pop	{pc}		; (ldr pc, [sp], #4)
   13620:	andeq	r9, r2, r4, lsl #3
   13624:	ldr	r3, [pc, #16]	; 1363c <abort@plt+0x247c>
   13628:	cmp	r0, #0
   1362c:	movne	r3, r0
   13630:	ldr	r0, [r3, #4]
   13634:	str	r1, [r3, #4]
   13638:	bx	lr
   1363c:	andeq	r9, r2, r4, lsl #3
   13640:	ldr	r3, [pc, #44]	; 13674 <abort@plt+0x24b4>
   13644:	cmp	r0, #0
   13648:	moveq	r0, r3
   1364c:	mov	ip, #10
   13650:	cmp	r2, #0
   13654:	cmpne	r1, #0
   13658:	str	ip, [r0]
   1365c:	beq	1366c <abort@plt+0x24ac>
   13660:	str	r1, [r0, #40]	; 0x28
   13664:	str	r2, [r0, #44]	; 0x2c
   13668:	bx	lr
   1366c:	push	{r4, lr}
   13670:	bl	111c0 <abort@plt>
   13674:	andeq	r9, r2, r4, lsl #3
   13678:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1367c:	sub	sp, sp, #24
   13680:	ldr	ip, [pc, #108]	; 136f4 <abort@plt+0x2534>
   13684:	ldr	r4, [sp, #56]	; 0x38
   13688:	mov	r9, r2
   1368c:	cmp	r4, #0
   13690:	moveq	r4, ip
   13694:	mov	sl, r3
   13698:	mov	r7, r0
   1369c:	mov	r8, r1
   136a0:	bl	110dc <__errno_location@plt>
   136a4:	ldr	r3, [r4, #44]	; 0x2c
   136a8:	mov	r1, r8
   136ac:	ldr	r6, [r0]
   136b0:	str	r3, [sp, #16]
   136b4:	ldr	r2, [r4, #40]	; 0x28
   136b8:	add	r3, r4, #8
   136bc:	str	r3, [sp, #8]
   136c0:	str	r2, [sp, #12]
   136c4:	ldr	r2, [r4, #4]
   136c8:	mov	r5, r0
   136cc:	str	r2, [sp, #4]
   136d0:	ldr	ip, [r4]
   136d4:	mov	r3, sl
   136d8:	mov	r2, r9
   136dc:	mov	r0, r7
   136e0:	str	ip, [sp]
   136e4:	bl	11ffc <abort@plt+0xe3c>
   136e8:	str	r6, [r5]
   136ec:	add	sp, sp, #24
   136f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136f4:	andeq	r9, r2, r4, lsl #3
   136f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136fc:	cmp	r2, #0
   13700:	sub	sp, sp, #36	; 0x24
   13704:	ldr	r4, [pc, #164]	; 137b0 <abort@plt+0x25f0>
   13708:	mov	r8, r1
   1370c:	movne	r4, r2
   13710:	mov	r7, r0
   13714:	bl	110dc <__errno_location@plt>
   13718:	ldr	r3, [r4, #44]	; 0x2c
   1371c:	ldr	r5, [r4, #4]
   13720:	add	r9, r4, #8
   13724:	orr	r5, r5, #1
   13728:	mov	r1, #0
   1372c:	mov	r2, r7
   13730:	ldr	fp, [r0]
   13734:	str	r3, [sp, #16]
   13738:	ldr	r3, [r4, #40]	; 0x28
   1373c:	stmib	sp, {r5, r9}
   13740:	str	r3, [sp, #12]
   13744:	ldr	r3, [r4]
   13748:	mov	r6, r0
   1374c:	str	r3, [sp]
   13750:	mov	r0, r1
   13754:	mov	r3, r8
   13758:	bl	11ffc <abort@plt+0xe3c>
   1375c:	add	r1, r0, #1
   13760:	mov	r0, r1
   13764:	str	r1, [sp, #28]
   13768:	bl	16a34 <abort@plt+0x5874>
   1376c:	ldr	r3, [r4, #44]	; 0x2c
   13770:	ldr	r1, [sp, #28]
   13774:	str	r3, [sp, #16]
   13778:	ldr	r3, [r4, #40]	; 0x28
   1377c:	str	r5, [sp, #4]
   13780:	str	r3, [sp, #12]
   13784:	str	r9, [sp, #8]
   13788:	ldr	ip, [r4]
   1378c:	mov	r3, r8
   13790:	mov	r2, r7
   13794:	str	ip, [sp]
   13798:	mov	sl, r0
   1379c:	bl	11ffc <abort@plt+0xe3c>
   137a0:	mov	r0, sl
   137a4:	str	fp, [r6]
   137a8:	add	sp, sp, #36	; 0x24
   137ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137b0:	andeq	r9, r2, r4, lsl #3
   137b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137b8:	cmp	r3, #0
   137bc:	sub	sp, sp, #44	; 0x2c
   137c0:	ldr	r4, [pc, #192]	; 13888 <abort@plt+0x26c8>
   137c4:	mov	r6, r2
   137c8:	movne	r4, r3
   137cc:	mov	r9, r1
   137d0:	mov	r8, r0
   137d4:	bl	110dc <__errno_location@plt>
   137d8:	ldr	r3, [r4, #44]	; 0x2c
   137dc:	ldr	r5, [r4, #4]
   137e0:	add	sl, r4, #8
   137e4:	cmp	r6, #0
   137e8:	orreq	r5, r5, #1
   137ec:	mov	r1, #0
   137f0:	ldr	r2, [r0]
   137f4:	str	r3, [sp, #16]
   137f8:	ldr	r3, [r4, #40]	; 0x28
   137fc:	stmib	sp, {r5, sl}
   13800:	str	r3, [sp, #12]
   13804:	ldr	r3, [r4]
   13808:	mov	r7, r0
   1380c:	str	r2, [sp, #28]
   13810:	str	r3, [sp]
   13814:	mov	r2, r8
   13818:	mov	r3, r9
   1381c:	mov	r0, r1
   13820:	bl	11ffc <abort@plt+0xe3c>
   13824:	add	r1, r0, #1
   13828:	mov	fp, r0
   1382c:	mov	r0, r1
   13830:	str	r1, [sp, #36]	; 0x24
   13834:	bl	16a34 <abort@plt+0x5874>
   13838:	ldr	r3, [r4, #44]	; 0x2c
   1383c:	mov	r2, r8
   13840:	str	r3, [sp, #16]
   13844:	ldr	r3, [r4, #40]	; 0x28
   13848:	str	r5, [sp, #4]
   1384c:	str	r3, [sp, #12]
   13850:	str	sl, [sp, #8]
   13854:	ldr	ip, [r4]
   13858:	ldr	r1, [sp, #36]	; 0x24
   1385c:	mov	r3, r9
   13860:	str	ip, [sp]
   13864:	str	r0, [sp, #32]
   13868:	bl	11ffc <abort@plt+0xe3c>
   1386c:	ldr	r2, [sp, #28]
   13870:	cmp	r6, #0
   13874:	str	r2, [r7]
   13878:	ldr	r0, [sp, #32]
   1387c:	strne	fp, [r6]
   13880:	add	sp, sp, #44	; 0x2c
   13884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13888:	andeq	r9, r2, r4, lsl #3
   1388c:	push	{r4, r5, r6, r7, r8, lr}
   13890:	ldr	r6, [pc, #116]	; 1390c <abort@plt+0x274c>
   13894:	ldr	r3, [r6, #4]
   13898:	ldr	r7, [r6]
   1389c:	cmp	r3, #1
   138a0:	movgt	r5, r7
   138a4:	movgt	r4, #1
   138a8:	ble	138c8 <abort@plt+0x2708>
   138ac:	ldr	r0, [r5, #12]
   138b0:	bl	172e0 <abort@plt+0x6120>
   138b4:	ldr	r3, [r6, #4]
   138b8:	add	r4, r4, #1
   138bc:	cmp	r3, r4
   138c0:	add	r5, r5, #8
   138c4:	bgt	138ac <abort@plt+0x26ec>
   138c8:	ldr	r0, [r7, #4]
   138cc:	ldr	r4, [pc, #60]	; 13910 <abort@plt+0x2750>
   138d0:	cmp	r0, r4
   138d4:	beq	138e8 <abort@plt+0x2728>
   138d8:	bl	172e0 <abort@plt+0x6120>
   138dc:	mov	r3, #256	; 0x100
   138e0:	str	r4, [r6, #12]
   138e4:	str	r3, [r6, #8]
   138e8:	ldr	r4, [pc, #36]	; 13914 <abort@plt+0x2754>
   138ec:	cmp	r7, r4
   138f0:	beq	13900 <abort@plt+0x2740>
   138f4:	mov	r0, r7
   138f8:	bl	172e0 <abort@plt+0x6120>
   138fc:	str	r4, [r6]
   13900:	mov	r3, #1
   13904:	str	r3, [r6, #4]
   13908:	pop	{r4, r5, r6, r7, r8, pc}
   1390c:	andeq	r9, r2, r4, lsl r1
   13910:			; <UNDEFINED> instruction: 0x000291b4
   13914:	andeq	r9, r2, ip, lsl r1
   13918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1391c:	sub	sp, sp, #44	; 0x2c
   13920:	mov	r5, r0
   13924:	mov	sl, r1
   13928:	bl	110dc <__errno_location@plt>
   1392c:	ldr	r4, [pc, #400]	; 13ac4 <abort@plt+0x2904>
   13930:	cmn	r5, #-2147483647	; 0x80000001
   13934:	ldr	r6, [r4]
   13938:	mov	r8, r0
   1393c:	movne	r0, #0
   13940:	moveq	r0, #1
   13944:	ldr	r3, [r8]
   13948:	orrs	r0, r0, r5, lsr #31
   1394c:	str	r3, [sp, #24]
   13950:	bne	13ac0 <abort@plt+0x2900>
   13954:	ldr	r2, [r4, #4]
   13958:	cmp	r5, r2
   1395c:	blt	139bc <abort@plt+0x27fc>
   13960:	add	r7, r4, #8
   13964:	cmp	r6, r7
   13968:	str	r2, [sp, #36]	; 0x24
   1396c:	beq	13a90 <abort@plt+0x28d0>
   13970:	mov	r3, #8
   13974:	sub	r2, r5, r2
   13978:	mov	r0, r6
   1397c:	str	r3, [sp]
   13980:	add	r2, r2, #1
   13984:	mvn	r3, #-2147483648	; 0x80000000
   13988:	add	r1, sp, #36	; 0x24
   1398c:	bl	16c50 <abort@plt+0x5a90>
   13990:	mov	r6, r0
   13994:	str	r0, [r4]
   13998:	ldr	r0, [r4, #4]
   1399c:	ldr	r2, [sp, #36]	; 0x24
   139a0:	mov	r1, #0
   139a4:	sub	r2, r2, r0
   139a8:	add	r0, r6, r0, lsl #3
   139ac:	lsl	r2, r2, #3
   139b0:	bl	110f4 <memset@plt>
   139b4:	ldr	r3, [sp, #36]	; 0x24
   139b8:	str	r3, [r4, #4]
   139bc:	ldr	r4, [pc, #260]	; 13ac8 <abort@plt+0x2908>
   139c0:	add	fp, r6, r5, lsl #3
   139c4:	ldr	r9, [r6, r5, lsl #3]
   139c8:	ldr	r0, [r4, #4]
   139cc:	ldr	r3, [r4]
   139d0:	ldr	r7, [fp, #4]
   139d4:	ldr	r1, [r4, #44]	; 0x2c
   139d8:	ldr	r2, [r4, #40]	; 0x28
   139dc:	orr	r0, r0, #1
   139e0:	str	r3, [sp]
   139e4:	add	r3, r4, #8
   139e8:	str	r0, [sp, #28]
   139ec:	str	r0, [sp, #4]
   139f0:	str	r1, [sp, #16]
   139f4:	str	r2, [sp, #12]
   139f8:	str	r3, [sp, #8]
   139fc:	mov	r0, r7
   13a00:	mov	r1, r9
   13a04:	mvn	r3, #0
   13a08:	mov	r2, sl
   13a0c:	bl	11ffc <abort@plt+0xe3c>
   13a10:	cmp	r9, r0
   13a14:	bhi	13a7c <abort@plt+0x28bc>
   13a18:	add	r3, r4, #48	; 0x30
   13a1c:	add	r9, r0, #1
   13a20:	cmp	r7, r3
   13a24:	str	r9, [r6, r5, lsl #3]
   13a28:	beq	13a34 <abort@plt+0x2874>
   13a2c:	mov	r0, r7
   13a30:	bl	172e0 <abort@plt+0x6120>
   13a34:	mov	r0, r9
   13a38:	bl	16a34 <abort@plt+0x5874>
   13a3c:	ldr	ip, [r4, #44]	; 0x2c
   13a40:	ldr	r3, [r4]
   13a44:	ldr	lr, [r4, #40]	; 0x28
   13a48:	ldr	r4, [pc, #124]	; 13acc <abort@plt+0x290c>
   13a4c:	mov	r2, sl
   13a50:	mov	r1, r9
   13a54:	str	r0, [fp, #4]
   13a58:	str	r4, [sp, #8]
   13a5c:	ldr	r4, [sp, #28]
   13a60:	str	r3, [sp]
   13a64:	str	r4, [sp, #4]
   13a68:	str	ip, [sp, #16]
   13a6c:	str	lr, [sp, #12]
   13a70:	mvn	r3, #0
   13a74:	mov	r7, r0
   13a78:	bl	11ffc <abort@plt+0xe3c>
   13a7c:	ldr	r3, [sp, #24]
   13a80:	mov	r0, r7
   13a84:	str	r3, [r8]
   13a88:	add	sp, sp, #44	; 0x2c
   13a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a90:	mov	r3, #8
   13a94:	sub	r2, r5, r2
   13a98:	str	r3, [sp]
   13a9c:	add	r1, sp, #36	; 0x24
   13aa0:	add	r2, r2, #1
   13aa4:	mvn	r3, #-2147483648	; 0x80000000
   13aa8:	bl	16c50 <abort@plt+0x5a90>
   13aac:	mov	r6, r0
   13ab0:	ldm	r7, {r0, r1}
   13ab4:	str	r6, [r4]
   13ab8:	stm	r6, {r0, r1}
   13abc:	b	13998 <abort@plt+0x27d8>
   13ac0:	bl	111c0 <abort@plt>
   13ac4:	andeq	r9, r2, r4, lsl r1
   13ac8:	andeq	r9, r2, r4, lsl #3
   13acc:	andeq	r9, r2, ip, lsl #3
   13ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ad4:	sub	sp, sp, #52	; 0x34
   13ad8:	mov	r5, r0
   13adc:	mov	sl, r1
   13ae0:	mov	fp, r2
   13ae4:	bl	110dc <__errno_location@plt>
   13ae8:	ldr	r4, [pc, #408]	; 13c88 <abort@plt+0x2ac8>
   13aec:	cmn	r5, #-2147483647	; 0x80000001
   13af0:	ldr	r6, [r4]
   13af4:	mov	r8, r0
   13af8:	movne	r0, #0
   13afc:	moveq	r0, #1
   13b00:	ldr	r3, [r8]
   13b04:	orrs	r0, r0, r5, lsr #31
   13b08:	str	r3, [sp, #28]
   13b0c:	bne	13c84 <abort@plt+0x2ac4>
   13b10:	ldr	r2, [r4, #4]
   13b14:	cmp	r5, r2
   13b18:	blt	13b78 <abort@plt+0x29b8>
   13b1c:	add	r7, r4, #8
   13b20:	cmp	r6, r7
   13b24:	str	r2, [sp, #44]	; 0x2c
   13b28:	beq	13c54 <abort@plt+0x2a94>
   13b2c:	mov	r3, #8
   13b30:	sub	r2, r5, r2
   13b34:	mov	r0, r6
   13b38:	str	r3, [sp]
   13b3c:	add	r2, r2, #1
   13b40:	mvn	r3, #-2147483648	; 0x80000000
   13b44:	add	r1, sp, #44	; 0x2c
   13b48:	bl	16c50 <abort@plt+0x5a90>
   13b4c:	mov	r6, r0
   13b50:	str	r0, [r4]
   13b54:	ldr	r0, [r4, #4]
   13b58:	ldr	r2, [sp, #44]	; 0x2c
   13b5c:	mov	r1, #0
   13b60:	sub	r2, r2, r0
   13b64:	add	r0, r6, r0, lsl #3
   13b68:	lsl	r2, r2, #3
   13b6c:	bl	110f4 <memset@plt>
   13b70:	ldr	r3, [sp, #44]	; 0x2c
   13b74:	str	r3, [r4, #4]
   13b78:	ldr	r4, [pc, #268]	; 13c8c <abort@plt+0x2acc>
   13b7c:	add	r3, r6, r5, lsl #3
   13b80:	str	r3, [sp, #32]
   13b84:	ldr	r7, [r3, #4]
   13b88:	ldr	r0, [r4, #4]
   13b8c:	ldr	r3, [r4]
   13b90:	ldr	r9, [r6, r5, lsl #3]
   13b94:	ldr	r1, [r4, #44]	; 0x2c
   13b98:	ldr	r2, [r4, #40]	; 0x28
   13b9c:	orr	r0, r0, #1
   13ba0:	str	r3, [sp]
   13ba4:	add	r3, r4, #8
   13ba8:	str	r0, [sp, #36]	; 0x24
   13bac:	str	r0, [sp, #4]
   13bb0:	str	r1, [sp, #16]
   13bb4:	str	r2, [sp, #12]
   13bb8:	str	r3, [sp, #8]
   13bbc:	mov	r0, r7
   13bc0:	mov	r1, r9
   13bc4:	mov	r3, fp
   13bc8:	mov	r2, sl
   13bcc:	bl	11ffc <abort@plt+0xe3c>
   13bd0:	cmp	r9, r0
   13bd4:	bhi	13c40 <abort@plt+0x2a80>
   13bd8:	add	r3, r4, #48	; 0x30
   13bdc:	add	r9, r0, #1
   13be0:	cmp	r7, r3
   13be4:	str	r9, [r6, r5, lsl #3]
   13be8:	beq	13bf4 <abort@plt+0x2a34>
   13bec:	mov	r0, r7
   13bf0:	bl	172e0 <abort@plt+0x6120>
   13bf4:	mov	r0, r9
   13bf8:	bl	16a34 <abort@plt+0x5874>
   13bfc:	ldr	ip, [sp, #32]
   13c00:	ldr	lr, [r4, #44]	; 0x2c
   13c04:	ldr	r5, [r4, #40]	; 0x28
   13c08:	mov	r3, fp
   13c0c:	mov	r2, sl
   13c10:	mov	r1, r9
   13c14:	str	r0, [ip, #4]
   13c18:	ldr	ip, [r4]
   13c1c:	ldr	r4, [pc, #108]	; 13c90 <abort@plt+0x2ad0>
   13c20:	str	lr, [sp, #16]
   13c24:	str	r4, [sp, #8]
   13c28:	ldr	r4, [sp, #36]	; 0x24
   13c2c:	str	r5, [sp, #12]
   13c30:	str	r4, [sp, #4]
   13c34:	str	ip, [sp]
   13c38:	mov	r7, r0
   13c3c:	bl	11ffc <abort@plt+0xe3c>
   13c40:	ldr	r3, [sp, #28]
   13c44:	mov	r0, r7
   13c48:	str	r3, [r8]
   13c4c:	add	sp, sp, #52	; 0x34
   13c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c54:	mov	r3, #8
   13c58:	sub	r2, r5, r2
   13c5c:	str	r3, [sp]
   13c60:	add	r1, sp, #44	; 0x2c
   13c64:	add	r2, r2, #1
   13c68:	mvn	r3, #-2147483648	; 0x80000000
   13c6c:	bl	16c50 <abort@plt+0x5a90>
   13c70:	mov	r6, r0
   13c74:	ldm	r7, {r0, r1}
   13c78:	str	r6, [r4]
   13c7c:	stm	r6, {r0, r1}
   13c80:	b	13b54 <abort@plt+0x2994>
   13c84:	bl	111c0 <abort@plt>
   13c88:	andeq	r9, r2, r4, lsl r1
   13c8c:	andeq	r9, r2, r4, lsl #3
   13c90:	andeq	r9, r2, ip, lsl #3
   13c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c98:	sub	sp, sp, #44	; 0x2c
   13c9c:	mov	sl, r0
   13ca0:	bl	110dc <__errno_location@plt>
   13ca4:	ldr	r4, [pc, #352]	; 13e0c <abort@plt+0x2c4c>
   13ca8:	ldr	r2, [r4, #4]
   13cac:	ldr	r5, [r4]
   13cb0:	cmp	r2, #0
   13cb4:	ldr	r3, [r0]
   13cb8:	mov	r8, r0
   13cbc:	str	r3, [sp, #28]
   13cc0:	bgt	13d1c <abort@plt+0x2b5c>
   13cc4:	add	r6, r4, #8
   13cc8:	cmp	r5, r6
   13ccc:	str	r2, [sp, #36]	; 0x24
   13cd0:	beq	13ddc <abort@plt+0x2c1c>
   13cd4:	mov	r3, #8
   13cd8:	mov	r0, r5
   13cdc:	str	r3, [sp]
   13ce0:	rsb	r2, r2, #1
   13ce4:	mvn	r3, #-2147483648	; 0x80000000
   13ce8:	add	r1, sp, #36	; 0x24
   13cec:	bl	16c50 <abort@plt+0x5a90>
   13cf0:	mov	r5, r0
   13cf4:	str	r0, [r4]
   13cf8:	ldr	r0, [r4, #4]
   13cfc:	ldr	r2, [sp, #36]	; 0x24
   13d00:	mov	r1, #0
   13d04:	sub	r2, r2, r0
   13d08:	add	r0, r5, r0, lsl #3
   13d0c:	lsl	r2, r2, #3
   13d10:	bl	110f4 <memset@plt>
   13d14:	ldr	r3, [sp, #36]	; 0x24
   13d18:	str	r3, [r4, #4]
   13d1c:	ldr	r4, [pc, #236]	; 13e10 <abort@plt+0x2c50>
   13d20:	ldr	r9, [r5]
   13d24:	ldr	r6, [r5, #4]
   13d28:	ldr	r7, [r4, #4]
   13d2c:	ldr	r1, [r4, #44]	; 0x2c
   13d30:	ldr	r2, [r4, #40]	; 0x28
   13d34:	ldr	r3, [r4]
   13d38:	orr	r7, r7, #1
   13d3c:	add	fp, r4, #8
   13d40:	str	r1, [sp, #16]
   13d44:	str	r2, [sp, #12]
   13d48:	str	r3, [sp]
   13d4c:	str	r7, [sp, #4]
   13d50:	str	fp, [sp, #8]
   13d54:	mov	r1, r9
   13d58:	mov	r0, r6
   13d5c:	mvn	r3, #0
   13d60:	mov	r2, sl
   13d64:	bl	11ffc <abort@plt+0xe3c>
   13d68:	cmp	r9, r0
   13d6c:	bhi	13dc8 <abort@plt+0x2c08>
   13d70:	add	r3, r4, #48	; 0x30
   13d74:	add	r9, r0, #1
   13d78:	cmp	r6, r3
   13d7c:	str	r9, [r5]
   13d80:	beq	13d8c <abort@plt+0x2bcc>
   13d84:	mov	r0, r6
   13d88:	bl	172e0 <abort@plt+0x6120>
   13d8c:	mov	r0, r9
   13d90:	bl	16a34 <abort@plt+0x5874>
   13d94:	ldr	ip, [r4, #44]	; 0x2c
   13d98:	ldr	r3, [r4]
   13d9c:	ldr	lr, [r4, #40]	; 0x28
   13da0:	mov	r2, sl
   13da4:	mov	r1, r9
   13da8:	str	r0, [r5, #4]
   13dac:	str	r3, [sp]
   13db0:	stmib	sp, {r7, fp}
   13db4:	str	ip, [sp, #16]
   13db8:	str	lr, [sp, #12]
   13dbc:	mvn	r3, #0
   13dc0:	mov	r6, r0
   13dc4:	bl	11ffc <abort@plt+0xe3c>
   13dc8:	ldr	r3, [sp, #28]
   13dcc:	mov	r0, r6
   13dd0:	str	r3, [r8]
   13dd4:	add	sp, sp, #44	; 0x2c
   13dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ddc:	mov	r3, #8
   13de0:	str	r3, [sp]
   13de4:	add	r1, sp, #36	; 0x24
   13de8:	rsb	r2, r2, #1
   13dec:	mvn	r3, #-2147483648	; 0x80000000
   13df0:	mov	r0, #0
   13df4:	bl	16c50 <abort@plt+0x5a90>
   13df8:	mov	r5, r0
   13dfc:	ldm	r6, {r0, r1}
   13e00:	str	r5, [r4]
   13e04:	stm	r5, {r0, r1}
   13e08:	b	13cf8 <abort@plt+0x2b38>
   13e0c:	andeq	r9, r2, r4, lsl r1
   13e10:	andeq	r9, r2, r4, lsl #3
   13e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e18:	sub	sp, sp, #44	; 0x2c
   13e1c:	mov	r9, r0
   13e20:	mov	sl, r1
   13e24:	bl	110dc <__errno_location@plt>
   13e28:	ldr	r4, [pc, #364]	; 13f9c <abort@plt+0x2ddc>
   13e2c:	ldr	r2, [r4, #4]
   13e30:	ldr	r5, [r4]
   13e34:	cmp	r2, #0
   13e38:	ldr	r3, [r0]
   13e3c:	mov	r7, r0
   13e40:	str	r3, [sp, #24]
   13e44:	bgt	13ea0 <abort@plt+0x2ce0>
   13e48:	add	r6, r4, #8
   13e4c:	cmp	r5, r6
   13e50:	str	r2, [sp, #36]	; 0x24
   13e54:	beq	13f6c <abort@plt+0x2dac>
   13e58:	mov	r3, #8
   13e5c:	mov	r0, r5
   13e60:	str	r3, [sp]
   13e64:	rsb	r2, r2, #1
   13e68:	mvn	r3, #-2147483648	; 0x80000000
   13e6c:	add	r1, sp, #36	; 0x24
   13e70:	bl	16c50 <abort@plt+0x5a90>
   13e74:	mov	r5, r0
   13e78:	str	r0, [r4]
   13e7c:	ldr	r0, [r4, #4]
   13e80:	ldr	r2, [sp, #36]	; 0x24
   13e84:	mov	r1, #0
   13e88:	sub	r2, r2, r0
   13e8c:	add	r0, r5, r0, lsl #3
   13e90:	lsl	r2, r2, #3
   13e94:	bl	110f4 <memset@plt>
   13e98:	ldr	r3, [sp, #36]	; 0x24
   13e9c:	str	r3, [r4, #4]
   13ea0:	ldr	r4, [pc, #248]	; 13fa0 <abort@plt+0x2de0>
   13ea4:	ldr	r8, [r5]
   13ea8:	ldr	r6, [r5, #4]
   13eac:	ldr	r0, [r4, #4]
   13eb0:	ldr	r1, [r4, #44]	; 0x2c
   13eb4:	ldr	r2, [r4, #40]	; 0x28
   13eb8:	ldr	r3, [r4]
   13ebc:	orr	r0, r0, #1
   13ec0:	add	fp, r4, #8
   13ec4:	str	r0, [sp, #28]
   13ec8:	str	r0, [sp, #4]
   13ecc:	str	r1, [sp, #16]
   13ed0:	str	r2, [sp, #12]
   13ed4:	str	r3, [sp]
   13ed8:	str	fp, [sp, #8]
   13edc:	mov	r1, r8
   13ee0:	mov	r0, r6
   13ee4:	mov	r3, sl
   13ee8:	mov	r2, r9
   13eec:	bl	11ffc <abort@plt+0xe3c>
   13ef0:	cmp	r8, r0
   13ef4:	bhi	13f58 <abort@plt+0x2d98>
   13ef8:	add	r3, r4, #48	; 0x30
   13efc:	add	r8, r0, #1
   13f00:	cmp	r6, r3
   13f04:	str	r8, [r5]
   13f08:	beq	13f14 <abort@plt+0x2d54>
   13f0c:	mov	r0, r6
   13f10:	bl	172e0 <abort@plt+0x6120>
   13f14:	mov	r0, r8
   13f18:	bl	16a34 <abort@plt+0x5874>
   13f1c:	ldr	lr, [r4, #44]	; 0x2c
   13f20:	ldr	ip, [r4]
   13f24:	mov	r3, sl
   13f28:	mov	r2, r9
   13f2c:	mov	r1, r8
   13f30:	str	r0, [r5, #4]
   13f34:	ldr	r5, [r4, #40]	; 0x28
   13f38:	ldr	r4, [sp, #28]
   13f3c:	str	fp, [sp, #8]
   13f40:	str	r4, [sp, #4]
   13f44:	str	lr, [sp, #16]
   13f48:	str	r5, [sp, #12]
   13f4c:	str	ip, [sp]
   13f50:	mov	r6, r0
   13f54:	bl	11ffc <abort@plt+0xe3c>
   13f58:	ldr	r3, [sp, #24]
   13f5c:	mov	r0, r6
   13f60:	str	r3, [r7]
   13f64:	add	sp, sp, #44	; 0x2c
   13f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f6c:	mov	r3, #8
   13f70:	str	r3, [sp]
   13f74:	add	r1, sp, #36	; 0x24
   13f78:	rsb	r2, r2, #1
   13f7c:	mvn	r3, #-2147483648	; 0x80000000
   13f80:	mov	r0, #0
   13f84:	bl	16c50 <abort@plt+0x5a90>
   13f88:	mov	r5, r0
   13f8c:	ldm	r6, {r0, r1}
   13f90:	str	r5, [r4]
   13f94:	stm	r5, {r0, r1}
   13f98:	b	13e7c <abort@plt+0x2cbc>
   13f9c:	andeq	r9, r2, r4, lsl r1
   13fa0:	andeq	r9, r2, r4, lsl #3
   13fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fa8:	sub	sp, sp, #132	; 0x84
   13fac:	mov	r5, r1
   13fb0:	mov	r4, r0
   13fb4:	mov	r9, r2
   13fb8:	add	r0, sp, #80	; 0x50
   13fbc:	mov	r2, #48	; 0x30
   13fc0:	mov	r1, #0
   13fc4:	bl	110f4 <memset@plt>
   13fc8:	cmp	r5, #10
   13fcc:	beq	14184 <abort@plt+0x2fc4>
   13fd0:	add	lr, sp, #80	; 0x50
   13fd4:	str	r5, [sp, #80]	; 0x50
   13fd8:	ldm	lr!, {r0, r1, r2, r3}
   13fdc:	add	ip, sp, #32
   13fe0:	ldr	r6, [pc, #416]	; 14188 <abort@plt+0x2fc8>
   13fe4:	stmia	ip!, {r0, r1, r2, r3}
   13fe8:	ldm	lr!, {r0, r1, r2, r3}
   13fec:	stmia	ip!, {r0, r1, r2, r3}
   13ff0:	ldm	lr, {r0, r1, r2, r3}
   13ff4:	stm	ip, {r0, r1, r2, r3}
   13ff8:	bl	110dc <__errno_location@plt>
   13ffc:	cmn	r4, #-2147483647	; 0x80000001
   14000:	ldr	r5, [r6]
   14004:	mov	r7, r0
   14008:	movne	r0, #0
   1400c:	moveq	r0, #1
   14010:	ldr	r3, [r7]
   14014:	orrs	r0, r0, r4, lsr #31
   14018:	str	r3, [sp, #24]
   1401c:	bne	14184 <abort@plt+0x2fc4>
   14020:	ldr	r2, [r6, #4]
   14024:	cmp	r4, r2
   14028:	blt	14088 <abort@plt+0x2ec8>
   1402c:	add	r8, r6, #8
   14030:	cmp	r5, r8
   14034:	str	r2, [sp, #80]	; 0x50
   14038:	beq	14154 <abort@plt+0x2f94>
   1403c:	mov	r3, #8
   14040:	sub	r2, r4, r2
   14044:	mov	r0, r5
   14048:	str	r3, [sp]
   1404c:	add	r2, r2, #1
   14050:	add	r1, sp, #80	; 0x50
   14054:	mvn	r3, #-2147483648	; 0x80000000
   14058:	bl	16c50 <abort@plt+0x5a90>
   1405c:	mov	r5, r0
   14060:	str	r0, [r6]
   14064:	ldr	r0, [r6, #4]
   14068:	ldr	r2, [sp, #80]	; 0x50
   1406c:	mov	r1, #0
   14070:	sub	r2, r2, r0
   14074:	add	r0, r5, r0, lsl #3
   14078:	lsl	r2, r2, #3
   1407c:	bl	110f4 <memset@plt>
   14080:	ldr	r3, [sp, #80]	; 0x50
   14084:	str	r3, [r6, #4]
   14088:	add	fp, r5, r4, lsl #3
   1408c:	ldr	r1, [sp, #36]	; 0x24
   14090:	ldr	r8, [r5, r4, lsl #3]
   14094:	ldr	r6, [fp, #4]
   14098:	ldr	r2, [sp, #72]	; 0x48
   1409c:	ldr	r3, [sp, #32]
   140a0:	ldr	ip, [sp, #76]	; 0x4c
   140a4:	orr	r1, r1, #1
   140a8:	add	sl, sp, #40	; 0x28
   140ac:	str	r1, [sp, #28]
   140b0:	str	r1, [sp, #4]
   140b4:	str	r2, [sp, #12]
   140b8:	str	r3, [sp]
   140bc:	mov	r0, r6
   140c0:	mov	r1, r8
   140c4:	str	ip, [sp, #16]
   140c8:	str	sl, [sp, #8]
   140cc:	mvn	r3, #0
   140d0:	mov	r2, r9
   140d4:	bl	11ffc <abort@plt+0xe3c>
   140d8:	cmp	r8, r0
   140dc:	bhi	14140 <abort@plt+0x2f80>
   140e0:	ldr	r3, [pc, #164]	; 1418c <abort@plt+0x2fcc>
   140e4:	add	r8, r0, #1
   140e8:	cmp	r6, r3
   140ec:	str	r8, [r5, r4, lsl #3]
   140f0:	beq	140fc <abort@plt+0x2f3c>
   140f4:	mov	r0, r6
   140f8:	bl	172e0 <abort@plt+0x6120>
   140fc:	mov	r0, r8
   14100:	bl	16a34 <abort@plt+0x5874>
   14104:	ldr	lr, [sp, #76]	; 0x4c
   14108:	ldr	r3, [sp, #32]
   1410c:	ldr	ip, [sp, #72]	; 0x48
   14110:	ldr	r4, [sp, #28]
   14114:	mov	r2, r9
   14118:	mov	r1, r8
   1411c:	str	r0, [fp, #4]
   14120:	str	r3, [sp]
   14124:	str	sl, [sp, #8]
   14128:	str	r4, [sp, #4]
   1412c:	str	lr, [sp, #16]
   14130:	str	ip, [sp, #12]
   14134:	mvn	r3, #0
   14138:	mov	r6, r0
   1413c:	bl	11ffc <abort@plt+0xe3c>
   14140:	ldr	r3, [sp, #24]
   14144:	mov	r0, r6
   14148:	str	r3, [r7]
   1414c:	add	sp, sp, #132	; 0x84
   14150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14154:	mov	r3, #8
   14158:	sub	r2, r4, r2
   1415c:	add	r1, sp, #80	; 0x50
   14160:	str	r3, [sp]
   14164:	add	r2, r2, #1
   14168:	mvn	r3, #-2147483648	; 0x80000000
   1416c:	bl	16c50 <abort@plt+0x5a90>
   14170:	mov	r5, r0
   14174:	ldm	r8, {r0, r1}
   14178:	str	r5, [r6]
   1417c:	stm	r5, {r0, r1}
   14180:	b	14064 <abort@plt+0x2ea4>
   14184:	bl	111c0 <abort@plt>
   14188:	andeq	r9, r2, r4, lsl r1
   1418c:			; <UNDEFINED> instruction: 0x000291b4
   14190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14194:	sub	sp, sp, #132	; 0x84
   14198:	mov	r5, r1
   1419c:	mov	r4, r0
   141a0:	mov	r9, r2
   141a4:	add	r0, sp, #80	; 0x50
   141a8:	mov	r2, #48	; 0x30
   141ac:	mov	r1, #0
   141b0:	mov	sl, r3
   141b4:	bl	110f4 <memset@plt>
   141b8:	cmp	r5, #10
   141bc:	beq	14378 <abort@plt+0x31b8>
   141c0:	add	lr, sp, #80	; 0x50
   141c4:	str	r5, [sp, #80]	; 0x50
   141c8:	ldm	lr!, {r0, r1, r2, r3}
   141cc:	add	ip, sp, #32
   141d0:	ldr	r6, [pc, #420]	; 1437c <abort@plt+0x31bc>
   141d4:	stmia	ip!, {r0, r1, r2, r3}
   141d8:	ldm	lr!, {r0, r1, r2, r3}
   141dc:	stmia	ip!, {r0, r1, r2, r3}
   141e0:	ldm	lr, {r0, r1, r2, r3}
   141e4:	stm	ip, {r0, r1, r2, r3}
   141e8:	bl	110dc <__errno_location@plt>
   141ec:	cmn	r4, #-2147483647	; 0x80000001
   141f0:	ldr	r5, [r6]
   141f4:	mov	r7, r0
   141f8:	movne	r0, #0
   141fc:	moveq	r0, #1
   14200:	ldr	r3, [r7]
   14204:	orrs	r0, r0, r4, lsr #31
   14208:	str	r3, [sp, #24]
   1420c:	bne	14378 <abort@plt+0x31b8>
   14210:	ldr	r2, [r6, #4]
   14214:	cmp	r4, r2
   14218:	blt	14278 <abort@plt+0x30b8>
   1421c:	add	r8, r6, #8
   14220:	cmp	r5, r8
   14224:	str	r2, [sp, #80]	; 0x50
   14228:	beq	14348 <abort@plt+0x3188>
   1422c:	mov	r3, #8
   14230:	sub	r2, r4, r2
   14234:	mov	r0, r5
   14238:	str	r3, [sp]
   1423c:	add	r2, r2, #1
   14240:	add	r1, sp, #80	; 0x50
   14244:	mvn	r3, #-2147483648	; 0x80000000
   14248:	bl	16c50 <abort@plt+0x5a90>
   1424c:	mov	r5, r0
   14250:	str	r0, [r6]
   14254:	ldr	r0, [r6, #4]
   14258:	ldr	r2, [sp, #80]	; 0x50
   1425c:	mov	r1, #0
   14260:	sub	r2, r2, r0
   14264:	add	r0, r5, r0, lsl #3
   14268:	lsl	r2, r2, #3
   1426c:	bl	110f4 <memset@plt>
   14270:	ldr	r3, [sp, #80]	; 0x50
   14274:	str	r3, [r6, #4]
   14278:	add	fp, r5, r4, lsl #3
   1427c:	ldr	r3, [sp, #32]
   14280:	ldr	r1, [sp, #36]	; 0x24
   14284:	ldr	r8, [r5, r4, lsl #3]
   14288:	ldr	r6, [fp, #4]
   1428c:	ldr	r2, [sp, #72]	; 0x48
   14290:	ldr	ip, [sp, #76]	; 0x4c
   14294:	orr	r1, r1, #1
   14298:	str	r3, [sp]
   1429c:	add	r3, sp, #40	; 0x28
   142a0:	str	r1, [sp, #28]
   142a4:	str	r1, [sp, #4]
   142a8:	str	r2, [sp, #12]
   142ac:	str	r3, [sp, #8]
   142b0:	mov	r0, r6
   142b4:	mov	r1, r8
   142b8:	str	ip, [sp, #16]
   142bc:	mov	r3, sl
   142c0:	mov	r2, r9
   142c4:	bl	11ffc <abort@plt+0xe3c>
   142c8:	cmp	r8, r0
   142cc:	bhi	14334 <abort@plt+0x3174>
   142d0:	ldr	r3, [pc, #168]	; 14380 <abort@plt+0x31c0>
   142d4:	add	r8, r0, #1
   142d8:	cmp	r6, r3
   142dc:	str	r8, [r5, r4, lsl #3]
   142e0:	beq	142ec <abort@plt+0x312c>
   142e4:	mov	r0, r6
   142e8:	bl	172e0 <abort@plt+0x6120>
   142ec:	mov	r0, r8
   142f0:	bl	16a34 <abort@plt+0x5874>
   142f4:	add	lr, sp, #40	; 0x28
   142f8:	ldr	ip, [sp, #76]	; 0x4c
   142fc:	ldr	r4, [sp, #72]	; 0x48
   14300:	ldr	r5, [sp, #28]
   14304:	mov	r3, sl
   14308:	mov	r2, r9
   1430c:	mov	r1, r8
   14310:	str	r0, [fp, #4]
   14314:	str	lr, [sp, #8]
   14318:	ldr	lr, [sp, #32]
   1431c:	str	r5, [sp, #4]
   14320:	str	ip, [sp, #16]
   14324:	str	r4, [sp, #12]
   14328:	str	lr, [sp]
   1432c:	mov	r6, r0
   14330:	bl	11ffc <abort@plt+0xe3c>
   14334:	ldr	r3, [sp, #24]
   14338:	mov	r0, r6
   1433c:	str	r3, [r7]
   14340:	add	sp, sp, #132	; 0x84
   14344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14348:	mov	r3, #8
   1434c:	sub	r2, r4, r2
   14350:	add	r1, sp, #80	; 0x50
   14354:	str	r3, [sp]
   14358:	add	r2, r2, #1
   1435c:	mvn	r3, #-2147483648	; 0x80000000
   14360:	bl	16c50 <abort@plt+0x5a90>
   14364:	mov	r5, r0
   14368:	ldm	r8, {r0, r1}
   1436c:	str	r5, [r6]
   14370:	stm	r5, {r0, r1}
   14374:	b	14254 <abort@plt+0x3094>
   14378:	bl	111c0 <abort@plt>
   1437c:	andeq	r9, r2, r4, lsl r1
   14380:			; <UNDEFINED> instruction: 0x000291b4
   14384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14388:	sub	sp, sp, #124	; 0x7c
   1438c:	mov	r4, r0
   14390:	mov	r9, r1
   14394:	add	r0, sp, #72	; 0x48
   14398:	mov	r2, #48	; 0x30
   1439c:	mov	r1, #0
   143a0:	bl	110f4 <memset@plt>
   143a4:	cmp	r4, #10
   143a8:	beq	14534 <abort@plt+0x3374>
   143ac:	add	lr, sp, #72	; 0x48
   143b0:	str	r4, [sp, #72]	; 0x48
   143b4:	ldm	lr!, {r0, r1, r2, r3}
   143b8:	add	ip, sp, #24
   143bc:	ldr	r5, [pc, #372]	; 14538 <abort@plt+0x3378>
   143c0:	stmia	ip!, {r0, r1, r2, r3}
   143c4:	ldm	lr!, {r0, r1, r2, r3}
   143c8:	stmia	ip!, {r0, r1, r2, r3}
   143cc:	ldm	lr, {r0, r1, r2, r3}
   143d0:	stm	ip, {r0, r1, r2, r3}
   143d4:	bl	110dc <__errno_location@plt>
   143d8:	ldr	r2, [r5, #4]
   143dc:	ldr	r4, [r5]
   143e0:	cmp	r2, #0
   143e4:	mov	r7, r0
   143e8:	ldr	fp, [r0]
   143ec:	bgt	14448 <abort@plt+0x3288>
   143f0:	add	r6, r5, #8
   143f4:	cmp	r4, r6
   143f8:	str	r2, [sp, #72]	; 0x48
   143fc:	beq	14504 <abort@plt+0x3344>
   14400:	mov	r3, #8
   14404:	mov	r0, r4
   14408:	str	r3, [sp]
   1440c:	rsb	r2, r2, #1
   14410:	add	r1, sp, #72	; 0x48
   14414:	mvn	r3, #-2147483648	; 0x80000000
   14418:	bl	16c50 <abort@plt+0x5a90>
   1441c:	mov	r4, r0
   14420:	str	r0, [r5]
   14424:	ldr	r0, [r5, #4]
   14428:	ldr	r2, [sp, #72]	; 0x48
   1442c:	mov	r1, #0
   14430:	sub	r2, r2, r0
   14434:	add	r0, r4, r0, lsl #3
   14438:	lsl	r2, r2, #3
   1443c:	bl	110f4 <memset@plt>
   14440:	ldr	r3, [sp, #72]	; 0x48
   14444:	str	r3, [r5, #4]
   14448:	ldr	r6, [sp, #28]
   1444c:	ldr	r8, [r4]
   14450:	ldr	r5, [r4, #4]
   14454:	ldr	r2, [sp, #64]	; 0x40
   14458:	ldr	r3, [sp, #24]
   1445c:	ldr	ip, [sp, #68]	; 0x44
   14460:	orr	r6, r6, #1
   14464:	add	sl, sp, #32
   14468:	str	r2, [sp, #12]
   1446c:	str	r3, [sp]
   14470:	str	r6, [sp, #4]
   14474:	mov	r1, r8
   14478:	mov	r0, r5
   1447c:	str	ip, [sp, #16]
   14480:	str	sl, [sp, #8]
   14484:	mvn	r3, #0
   14488:	mov	r2, r9
   1448c:	bl	11ffc <abort@plt+0xe3c>
   14490:	cmp	r8, r0
   14494:	bhi	144f4 <abort@plt+0x3334>
   14498:	ldr	r3, [pc, #156]	; 1453c <abort@plt+0x337c>
   1449c:	add	r8, r0, #1
   144a0:	cmp	r5, r3
   144a4:	str	r8, [r4]
   144a8:	beq	144b4 <abort@plt+0x32f4>
   144ac:	mov	r0, r5
   144b0:	bl	172e0 <abort@plt+0x6120>
   144b4:	mov	r0, r8
   144b8:	bl	16a34 <abort@plt+0x5874>
   144bc:	ldr	lr, [sp, #68]	; 0x44
   144c0:	ldr	r3, [sp, #24]
   144c4:	ldr	ip, [sp, #64]	; 0x40
   144c8:	mov	r2, r9
   144cc:	mov	r1, r8
   144d0:	str	r0, [r4, #4]
   144d4:	str	r3, [sp]
   144d8:	str	sl, [sp, #8]
   144dc:	str	r6, [sp, #4]
   144e0:	str	lr, [sp, #16]
   144e4:	str	ip, [sp, #12]
   144e8:	mvn	r3, #0
   144ec:	mov	r5, r0
   144f0:	bl	11ffc <abort@plt+0xe3c>
   144f4:	mov	r0, r5
   144f8:	str	fp, [r7]
   144fc:	add	sp, sp, #124	; 0x7c
   14500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14504:	mov	r3, #8
   14508:	add	r1, sp, #72	; 0x48
   1450c:	str	r3, [sp]
   14510:	rsb	r2, r2, #1
   14514:	mvn	r3, #-2147483648	; 0x80000000
   14518:	mov	r0, #0
   1451c:	bl	16c50 <abort@plt+0x5a90>
   14520:	mov	r4, r0
   14524:	ldm	r6, {r0, r1}
   14528:	str	r4, [r5]
   1452c:	stm	r4, {r0, r1}
   14530:	b	14424 <abort@plt+0x3264>
   14534:	bl	111c0 <abort@plt>
   14538:	andeq	r9, r2, r4, lsl r1
   1453c:			; <UNDEFINED> instruction: 0x000291b4
   14540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14544:	sub	sp, sp, #132	; 0x84
   14548:	mov	r4, r0
   1454c:	mov	r9, r1
   14550:	mov	sl, r2
   14554:	add	r0, sp, #80	; 0x50
   14558:	mov	r2, #48	; 0x30
   1455c:	mov	r1, #0
   14560:	bl	110f4 <memset@plt>
   14564:	cmp	r4, #10
   14568:	beq	146fc <abort@plt+0x353c>
   1456c:	add	lr, sp, #80	; 0x50
   14570:	str	r4, [sp, #80]	; 0x50
   14574:	ldm	lr!, {r0, r1, r2, r3}
   14578:	add	ip, sp, #32
   1457c:	ldr	r5, [pc, #380]	; 14700 <abort@plt+0x3540>
   14580:	stmia	ip!, {r0, r1, r2, r3}
   14584:	ldm	lr!, {r0, r1, r2, r3}
   14588:	stmia	ip!, {r0, r1, r2, r3}
   1458c:	ldm	lr, {r0, r1, r2, r3}
   14590:	stm	ip, {r0, r1, r2, r3}
   14594:	bl	110dc <__errno_location@plt>
   14598:	ldr	r2, [r5, #4]
   1459c:	ldr	r4, [r5]
   145a0:	cmp	r2, #0
   145a4:	ldr	r3, [r0]
   145a8:	mov	r7, r0
   145ac:	str	r3, [sp, #28]
   145b0:	bgt	1460c <abort@plt+0x344c>
   145b4:	add	r6, r5, #8
   145b8:	cmp	r4, r6
   145bc:	str	r2, [sp, #80]	; 0x50
   145c0:	beq	146cc <abort@plt+0x350c>
   145c4:	mov	r3, #8
   145c8:	mov	r0, r4
   145cc:	str	r3, [sp]
   145d0:	rsb	r2, r2, #1
   145d4:	add	r1, sp, #80	; 0x50
   145d8:	mvn	r3, #-2147483648	; 0x80000000
   145dc:	bl	16c50 <abort@plt+0x5a90>
   145e0:	mov	r4, r0
   145e4:	str	r0, [r5]
   145e8:	ldr	r0, [r5, #4]
   145ec:	ldr	r2, [sp, #80]	; 0x50
   145f0:	mov	r1, #0
   145f4:	sub	r2, r2, r0
   145f8:	add	r0, r4, r0, lsl #3
   145fc:	lsl	r2, r2, #3
   14600:	bl	110f4 <memset@plt>
   14604:	ldr	r3, [sp, #80]	; 0x50
   14608:	str	r3, [r5, #4]
   1460c:	ldr	r6, [sp, #36]	; 0x24
   14610:	ldr	r8, [r4]
   14614:	ldr	r5, [r4, #4]
   14618:	ldr	r2, [sp, #72]	; 0x48
   1461c:	ldr	r3, [sp, #32]
   14620:	ldr	ip, [sp, #76]	; 0x4c
   14624:	orr	r6, r6, #1
   14628:	add	fp, sp, #40	; 0x28
   1462c:	str	r2, [sp, #12]
   14630:	str	r3, [sp]
   14634:	str	r6, [sp, #4]
   14638:	mov	r1, r8
   1463c:	mov	r0, r5
   14640:	str	ip, [sp, #16]
   14644:	str	fp, [sp, #8]
   14648:	mov	r3, sl
   1464c:	mov	r2, r9
   14650:	bl	11ffc <abort@plt+0xe3c>
   14654:	cmp	r8, r0
   14658:	bhi	146b8 <abort@plt+0x34f8>
   1465c:	ldr	r3, [pc, #160]	; 14704 <abort@plt+0x3544>
   14660:	add	r8, r0, #1
   14664:	cmp	r5, r3
   14668:	str	r8, [r4]
   1466c:	beq	14678 <abort@plt+0x34b8>
   14670:	mov	r0, r5
   14674:	bl	172e0 <abort@plt+0x6120>
   14678:	mov	r0, r8
   1467c:	bl	16a34 <abort@plt+0x5874>
   14680:	ldr	ip, [sp, #76]	; 0x4c
   14684:	ldr	lr, [sp, #32]
   14688:	mov	r3, sl
   1468c:	mov	r2, r9
   14690:	mov	r1, r8
   14694:	str	r0, [r4, #4]
   14698:	ldr	r4, [sp, #72]	; 0x48
   1469c:	str	fp, [sp, #8]
   146a0:	str	r6, [sp, #4]
   146a4:	str	ip, [sp, #16]
   146a8:	str	r4, [sp, #12]
   146ac:	str	lr, [sp]
   146b0:	mov	r5, r0
   146b4:	bl	11ffc <abort@plt+0xe3c>
   146b8:	ldr	r3, [sp, #28]
   146bc:	mov	r0, r5
   146c0:	str	r3, [r7]
   146c4:	add	sp, sp, #132	; 0x84
   146c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146cc:	mov	r3, #8
   146d0:	add	r1, sp, #80	; 0x50
   146d4:	str	r3, [sp]
   146d8:	rsb	r2, r2, #1
   146dc:	mvn	r3, #-2147483648	; 0x80000000
   146e0:	mov	r0, #0
   146e4:	bl	16c50 <abort@plt+0x5a90>
   146e8:	mov	r4, r0
   146ec:	ldm	r6, {r0, r1}
   146f0:	str	r4, [r5]
   146f4:	stm	r4, {r0, r1}
   146f8:	b	145e8 <abort@plt+0x3428>
   146fc:	bl	111c0 <abort@plt>
   14700:	andeq	r9, r2, r4, lsl r1
   14704:			; <UNDEFINED> instruction: 0x000291b4
   14708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1470c:	mov	r4, r2
   14710:	ldr	lr, [pc, #432]	; 148c8 <abort@plt+0x3708>
   14714:	mov	sl, r0
   14718:	mov	fp, r1
   1471c:	ldm	lr!, {r0, r1, r2, r3}
   14720:	sub	sp, sp, #92	; 0x5c
   14724:	add	ip, sp, #40	; 0x28
   14728:	lsr	r7, r4, #5
   1472c:	stmia	ip!, {r0, r1, r2, r3}
   14730:	add	r6, sp, #48	; 0x30
   14734:	ldm	lr!, {r0, r1, r2, r3}
   14738:	and	r4, r4, #31
   1473c:	ldr	r5, [pc, #392]	; 148cc <abort@plt+0x370c>
   14740:	stmia	ip!, {r0, r1, r2, r3}
   14744:	ldm	lr, {r0, r1, r2, r3}
   14748:	stm	ip, {r0, r1, r2, r3}
   1474c:	ldr	r2, [r6, r7, lsl #2]
   14750:	lsr	r3, r2, r4
   14754:	eor	r3, r3, #1
   14758:	and	r3, r3, #1
   1475c:	eor	r4, r2, r3, lsl r4
   14760:	str	r4, [r6, r7, lsl #2]
   14764:	bl	110dc <__errno_location@plt>
   14768:	ldr	r2, [r5, #4]
   1476c:	ldr	r4, [r5]
   14770:	cmp	r2, #0
   14774:	ldr	r3, [r0]
   14778:	mov	r8, r0
   1477c:	str	r3, [sp, #28]
   14780:	bgt	147dc <abort@plt+0x361c>
   14784:	add	r7, r5, #8
   14788:	cmp	r4, r7
   1478c:	str	r2, [sp, #36]	; 0x24
   14790:	beq	14898 <abort@plt+0x36d8>
   14794:	mov	r3, #8
   14798:	mov	r0, r4
   1479c:	str	r3, [sp]
   147a0:	rsb	r2, r2, #1
   147a4:	mvn	r3, #-2147483648	; 0x80000000
   147a8:	add	r1, sp, #36	; 0x24
   147ac:	bl	16c50 <abort@plt+0x5a90>
   147b0:	mov	r4, r0
   147b4:	str	r0, [r5]
   147b8:	ldr	r0, [r5, #4]
   147bc:	ldr	r2, [sp, #36]	; 0x24
   147c0:	mov	r1, #0
   147c4:	sub	r2, r2, r0
   147c8:	add	r0, r4, r0, lsl #3
   147cc:	lsl	r2, r2, #3
   147d0:	bl	110f4 <memset@plt>
   147d4:	ldr	r3, [sp, #36]	; 0x24
   147d8:	str	r3, [r5, #4]
   147dc:	ldr	r7, [sp, #44]	; 0x2c
   147e0:	ldr	r9, [r4]
   147e4:	ldr	r5, [r4, #4]
   147e8:	ldr	r2, [sp, #80]	; 0x50
   147ec:	ldr	r3, [sp, #40]	; 0x28
   147f0:	ldr	ip, [sp, #84]	; 0x54
   147f4:	orr	r7, r7, #1
   147f8:	str	r2, [sp, #12]
   147fc:	str	r3, [sp]
   14800:	str	r7, [sp, #4]
   14804:	str	r6, [sp, #8]
   14808:	mov	r1, r9
   1480c:	mov	r0, r5
   14810:	str	ip, [sp, #16]
   14814:	mov	r3, fp
   14818:	mov	r2, sl
   1481c:	bl	11ffc <abort@plt+0xe3c>
   14820:	cmp	r9, r0
   14824:	bhi	14884 <abort@plt+0x36c4>
   14828:	ldr	r3, [pc, #160]	; 148d0 <abort@plt+0x3710>
   1482c:	add	r9, r0, #1
   14830:	cmp	r5, r3
   14834:	str	r9, [r4]
   14838:	beq	14844 <abort@plt+0x3684>
   1483c:	mov	r0, r5
   14840:	bl	172e0 <abort@plt+0x6120>
   14844:	mov	r0, r9
   14848:	bl	16a34 <abort@plt+0x5874>
   1484c:	ldr	ip, [sp, #84]	; 0x54
   14850:	ldr	lr, [sp, #40]	; 0x28
   14854:	mov	r3, fp
   14858:	mov	r2, sl
   1485c:	mov	r1, r9
   14860:	str	r0, [r4, #4]
   14864:	ldr	r4, [sp, #80]	; 0x50
   14868:	str	r6, [sp, #8]
   1486c:	str	r7, [sp, #4]
   14870:	str	ip, [sp, #16]
   14874:	str	r4, [sp, #12]
   14878:	str	lr, [sp]
   1487c:	mov	r5, r0
   14880:	bl	11ffc <abort@plt+0xe3c>
   14884:	ldr	r3, [sp, #28]
   14888:	mov	r0, r5
   1488c:	str	r3, [r8]
   14890:	add	sp, sp, #92	; 0x5c
   14894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14898:	mov	r3, #8
   1489c:	str	r3, [sp]
   148a0:	add	r1, sp, #36	; 0x24
   148a4:	rsb	r2, r2, #1
   148a8:	mvn	r3, #-2147483648	; 0x80000000
   148ac:	mov	r0, #0
   148b0:	bl	16c50 <abort@plt+0x5a90>
   148b4:	mov	r4, r0
   148b8:	ldm	r7, {r0, r1}
   148bc:	str	r4, [r5]
   148c0:	stm	r4, {r0, r1}
   148c4:	b	147b8 <abort@plt+0x35f8>
   148c8:	andeq	r9, r2, r4, lsl #3
   148cc:	andeq	r9, r2, r4, lsl r1
   148d0:			; <UNDEFINED> instruction: 0x000291b4
   148d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148d8:	mov	r4, r1
   148dc:	ldr	lr, [pc, #420]	; 14a88 <abort@plt+0x38c8>
   148e0:	mov	r6, r0
   148e4:	sub	sp, sp, #84	; 0x54
   148e8:	ldm	lr!, {r0, r1, r2, r3}
   148ec:	add	ip, sp, #32
   148f0:	lsr	r8, r4, #5
   148f4:	add	r5, sp, #40	; 0x28
   148f8:	stmia	ip!, {r0, r1, r2, r3}
   148fc:	and	r4, r4, #31
   14900:	ldm	lr!, {r0, r1, r2, r3}
   14904:	ldr	r7, [pc, #384]	; 14a8c <abort@plt+0x38cc>
   14908:	stmia	ip!, {r0, r1, r2, r3}
   1490c:	ldm	lr, {r0, r1, r2, r3}
   14910:	stm	ip, {r0, r1, r2, r3}
   14914:	ldr	r2, [r5, r8, lsl #2]
   14918:	lsr	r3, r2, r4
   1491c:	eor	r3, r3, #1
   14920:	and	r3, r3, #1
   14924:	eor	r4, r2, r3, lsl r4
   14928:	str	r4, [r5, r8, lsl #2]
   1492c:	bl	110dc <__errno_location@plt>
   14930:	ldr	r2, [r7, #4]
   14934:	ldr	r4, [r7]
   14938:	cmp	r2, #0
   1493c:	mov	r9, r0
   14940:	ldr	sl, [r0]
   14944:	bgt	149a0 <abort@plt+0x37e0>
   14948:	add	r8, r7, #8
   1494c:	cmp	r4, r8
   14950:	str	r2, [sp, #28]
   14954:	beq	14a58 <abort@plt+0x3898>
   14958:	mov	r3, #8
   1495c:	mov	r0, r4
   14960:	str	r3, [sp]
   14964:	rsb	r2, r2, #1
   14968:	mvn	r3, #-2147483648	; 0x80000000
   1496c:	add	r1, sp, #28
   14970:	bl	16c50 <abort@plt+0x5a90>
   14974:	mov	r4, r0
   14978:	str	r0, [r7]
   1497c:	ldr	r0, [r7, #4]
   14980:	ldr	r2, [sp, #28]
   14984:	mov	r1, #0
   14988:	sub	r2, r2, r0
   1498c:	add	r0, r4, r0, lsl #3
   14990:	lsl	r2, r2, #3
   14994:	bl	110f4 <memset@plt>
   14998:	ldr	r3, [sp, #28]
   1499c:	str	r3, [r7, #4]
   149a0:	ldr	r8, [sp, #36]	; 0x24
   149a4:	ldr	fp, [r4]
   149a8:	ldr	r7, [r4, #4]
   149ac:	ldr	r2, [sp, #72]	; 0x48
   149b0:	ldr	r3, [sp, #32]
   149b4:	ldr	ip, [sp, #76]	; 0x4c
   149b8:	orr	r8, r8, #1
   149bc:	str	r2, [sp, #12]
   149c0:	str	r3, [sp]
   149c4:	str	r8, [sp, #4]
   149c8:	str	r5, [sp, #8]
   149cc:	mov	r1, fp
   149d0:	mov	r0, r7
   149d4:	str	ip, [sp, #16]
   149d8:	mvn	r3, #0
   149dc:	mov	r2, r6
   149e0:	bl	11ffc <abort@plt+0xe3c>
   149e4:	cmp	fp, r0
   149e8:	bhi	14a48 <abort@plt+0x3888>
   149ec:	ldr	r3, [pc, #156]	; 14a90 <abort@plt+0x38d0>
   149f0:	add	fp, r0, #1
   149f4:	cmp	r7, r3
   149f8:	str	fp, [r4]
   149fc:	beq	14a08 <abort@plt+0x3848>
   14a00:	mov	r0, r7
   14a04:	bl	172e0 <abort@plt+0x6120>
   14a08:	mov	r0, fp
   14a0c:	bl	16a34 <abort@plt+0x5874>
   14a10:	ldr	lr, [sp, #76]	; 0x4c
   14a14:	ldr	r3, [sp, #32]
   14a18:	ldr	ip, [sp, #72]	; 0x48
   14a1c:	mov	r2, r6
   14a20:	mov	r1, fp
   14a24:	str	r0, [r4, #4]
   14a28:	str	r3, [sp]
   14a2c:	str	r5, [sp, #8]
   14a30:	str	r8, [sp, #4]
   14a34:	str	lr, [sp, #16]
   14a38:	str	ip, [sp, #12]
   14a3c:	mvn	r3, #0
   14a40:	mov	r7, r0
   14a44:	bl	11ffc <abort@plt+0xe3c>
   14a48:	mov	r0, r7
   14a4c:	str	sl, [r9]
   14a50:	add	sp, sp, #84	; 0x54
   14a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a58:	mov	r3, #8
   14a5c:	str	r3, [sp]
   14a60:	add	r1, sp, #28
   14a64:	rsb	r2, r2, #1
   14a68:	mvn	r3, #-2147483648	; 0x80000000
   14a6c:	mov	r0, #0
   14a70:	bl	16c50 <abort@plt+0x5a90>
   14a74:	mov	r4, r0
   14a78:	ldm	r8, {r0, r1}
   14a7c:	str	r4, [r7]
   14a80:	stm	r4, {r0, r1}
   14a84:	b	1497c <abort@plt+0x37bc>
   14a88:	andeq	r9, r2, r4, lsl #3
   14a8c:	andeq	r9, r2, r4, lsl r1
   14a90:			; <UNDEFINED> instruction: 0x000291b4
   14a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a98:	mov	r6, r0
   14a9c:	ldr	lr, [pc, #404]	; 14c38 <abort@plt+0x3a78>
   14aa0:	sub	sp, sp, #84	; 0x54
   14aa4:	add	ip, sp, #32
   14aa8:	ldm	lr!, {r0, r1, r2, r3}
   14aac:	ldr	r5, [pc, #392]	; 14c3c <abort@plt+0x3a7c>
   14ab0:	stmia	ip!, {r0, r1, r2, r3}
   14ab4:	ldm	lr!, {r0, r1, r2, r3}
   14ab8:	ldr	r4, [sp, #44]	; 0x2c
   14abc:	stmia	ip!, {r0, r1, r2, r3}
   14ac0:	ldm	lr, {r0, r1, r2, r3}
   14ac4:	mvn	lr, r4
   14ac8:	and	lr, lr, #67108864	; 0x4000000
   14acc:	eor	lr, lr, r4
   14ad0:	stm	ip, {r0, r1, r2, r3}
   14ad4:	str	lr, [sp, #44]	; 0x2c
   14ad8:	bl	110dc <__errno_location@plt>
   14adc:	ldr	r2, [r5, #4]
   14ae0:	ldr	r4, [r5]
   14ae4:	cmp	r2, #0
   14ae8:	mov	r8, r0
   14aec:	ldr	sl, [r0]
   14af0:	bgt	14b4c <abort@plt+0x398c>
   14af4:	add	r7, r5, #8
   14af8:	cmp	r4, r7
   14afc:	str	r2, [sp, #28]
   14b00:	beq	14c08 <abort@plt+0x3a48>
   14b04:	mov	r3, #8
   14b08:	mov	r0, r4
   14b0c:	str	r3, [sp]
   14b10:	rsb	r2, r2, #1
   14b14:	mvn	r3, #-2147483648	; 0x80000000
   14b18:	add	r1, sp, #28
   14b1c:	bl	16c50 <abort@plt+0x5a90>
   14b20:	mov	r4, r0
   14b24:	str	r0, [r5]
   14b28:	ldr	r0, [r5, #4]
   14b2c:	ldr	r2, [sp, #28]
   14b30:	mov	r1, #0
   14b34:	sub	r2, r2, r0
   14b38:	add	r0, r4, r0, lsl #3
   14b3c:	lsl	r2, r2, #3
   14b40:	bl	110f4 <memset@plt>
   14b44:	ldr	r3, [sp, #28]
   14b48:	str	r3, [r5, #4]
   14b4c:	ldr	r7, [sp, #36]	; 0x24
   14b50:	ldr	r9, [r4]
   14b54:	ldr	r5, [r4, #4]
   14b58:	ldr	r2, [sp, #72]	; 0x48
   14b5c:	ldr	r3, [sp, #32]
   14b60:	ldr	ip, [sp, #76]	; 0x4c
   14b64:	orr	r7, r7, #1
   14b68:	add	fp, sp, #40	; 0x28
   14b6c:	str	r2, [sp, #12]
   14b70:	str	r3, [sp]
   14b74:	str	r7, [sp, #4]
   14b78:	mov	r1, r9
   14b7c:	mov	r0, r5
   14b80:	str	ip, [sp, #16]
   14b84:	str	fp, [sp, #8]
   14b88:	mvn	r3, #0
   14b8c:	mov	r2, r6
   14b90:	bl	11ffc <abort@plt+0xe3c>
   14b94:	cmp	r9, r0
   14b98:	bhi	14bf8 <abort@plt+0x3a38>
   14b9c:	ldr	r3, [pc, #156]	; 14c40 <abort@plt+0x3a80>
   14ba0:	add	r9, r0, #1
   14ba4:	cmp	r5, r3
   14ba8:	str	r9, [r4]
   14bac:	beq	14bb8 <abort@plt+0x39f8>
   14bb0:	mov	r0, r5
   14bb4:	bl	172e0 <abort@plt+0x6120>
   14bb8:	mov	r0, r9
   14bbc:	bl	16a34 <abort@plt+0x5874>
   14bc0:	ldr	lr, [sp, #76]	; 0x4c
   14bc4:	ldr	r3, [sp, #32]
   14bc8:	ldr	ip, [sp, #72]	; 0x48
   14bcc:	mov	r2, r6
   14bd0:	mov	r1, r9
   14bd4:	str	r0, [r4, #4]
   14bd8:	str	r3, [sp]
   14bdc:	str	fp, [sp, #8]
   14be0:	str	r7, [sp, #4]
   14be4:	str	lr, [sp, #16]
   14be8:	str	ip, [sp, #12]
   14bec:	mvn	r3, #0
   14bf0:	mov	r5, r0
   14bf4:	bl	11ffc <abort@plt+0xe3c>
   14bf8:	mov	r0, r5
   14bfc:	str	sl, [r8]
   14c00:	add	sp, sp, #84	; 0x54
   14c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c08:	mov	r3, #8
   14c0c:	str	r3, [sp]
   14c10:	add	r1, sp, #28
   14c14:	rsb	r2, r2, #1
   14c18:	mvn	r3, #-2147483648	; 0x80000000
   14c1c:	mov	r0, #0
   14c20:	bl	16c50 <abort@plt+0x5a90>
   14c24:	mov	r4, r0
   14c28:	ldm	r7, {r0, r1}
   14c2c:	str	r4, [r5]
   14c30:	stm	r4, {r0, r1}
   14c34:	b	14b28 <abort@plt+0x3968>
   14c38:	andeq	r9, r2, r4, lsl #3
   14c3c:	andeq	r9, r2, r4, lsl r1
   14c40:			; <UNDEFINED> instruction: 0x000291b4
   14c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c48:	mov	r9, r0
   14c4c:	ldr	lr, [pc, #416]	; 14df4 <abort@plt+0x3c34>
   14c50:	mov	sl, r1
   14c54:	sub	sp, sp, #92	; 0x5c
   14c58:	ldm	lr!, {r0, r1, r2, r3}
   14c5c:	add	ip, sp, #40	; 0x28
   14c60:	ldr	r5, [pc, #400]	; 14df8 <abort@plt+0x3c38>
   14c64:	stmia	ip!, {r0, r1, r2, r3}
   14c68:	ldm	lr!, {r0, r1, r2, r3}
   14c6c:	ldr	r4, [sp, #52]	; 0x34
   14c70:	stmia	ip!, {r0, r1, r2, r3}
   14c74:	ldm	lr, {r0, r1, r2, r3}
   14c78:	mvn	lr, r4
   14c7c:	and	lr, lr, #67108864	; 0x4000000
   14c80:	eor	lr, lr, r4
   14c84:	stm	ip, {r0, r1, r2, r3}
   14c88:	str	lr, [sp, #52]	; 0x34
   14c8c:	bl	110dc <__errno_location@plt>
   14c90:	ldr	r2, [r5, #4]
   14c94:	ldr	r4, [r5]
   14c98:	cmp	r2, #0
   14c9c:	ldr	r3, [r0]
   14ca0:	mov	r7, r0
   14ca4:	str	r3, [sp, #28]
   14ca8:	bgt	14d04 <abort@plt+0x3b44>
   14cac:	add	r6, r5, #8
   14cb0:	cmp	r4, r6
   14cb4:	str	r2, [sp, #36]	; 0x24
   14cb8:	beq	14dc4 <abort@plt+0x3c04>
   14cbc:	mov	r3, #8
   14cc0:	mov	r0, r4
   14cc4:	str	r3, [sp]
   14cc8:	rsb	r2, r2, #1
   14ccc:	mvn	r3, #-2147483648	; 0x80000000
   14cd0:	add	r1, sp, #36	; 0x24
   14cd4:	bl	16c50 <abort@plt+0x5a90>
   14cd8:	mov	r4, r0
   14cdc:	str	r0, [r5]
   14ce0:	ldr	r0, [r5, #4]
   14ce4:	ldr	r2, [sp, #36]	; 0x24
   14ce8:	mov	r1, #0
   14cec:	sub	r2, r2, r0
   14cf0:	add	r0, r4, r0, lsl #3
   14cf4:	lsl	r2, r2, #3
   14cf8:	bl	110f4 <memset@plt>
   14cfc:	ldr	r3, [sp, #36]	; 0x24
   14d00:	str	r3, [r5, #4]
   14d04:	ldr	r6, [sp, #44]	; 0x2c
   14d08:	ldr	r8, [r4]
   14d0c:	ldr	r5, [r4, #4]
   14d10:	ldr	r2, [sp, #80]	; 0x50
   14d14:	ldr	r3, [sp, #40]	; 0x28
   14d18:	ldr	ip, [sp, #84]	; 0x54
   14d1c:	orr	r6, r6, #1
   14d20:	add	fp, sp, #48	; 0x30
   14d24:	str	r2, [sp, #12]
   14d28:	str	r3, [sp]
   14d2c:	str	r6, [sp, #4]
   14d30:	mov	r1, r8
   14d34:	mov	r0, r5
   14d38:	str	ip, [sp, #16]
   14d3c:	str	fp, [sp, #8]
   14d40:	mov	r3, sl
   14d44:	mov	r2, r9
   14d48:	bl	11ffc <abort@plt+0xe3c>
   14d4c:	cmp	r8, r0
   14d50:	bhi	14db0 <abort@plt+0x3bf0>
   14d54:	ldr	r3, [pc, #160]	; 14dfc <abort@plt+0x3c3c>
   14d58:	add	r8, r0, #1
   14d5c:	cmp	r5, r3
   14d60:	str	r8, [r4]
   14d64:	beq	14d70 <abort@plt+0x3bb0>
   14d68:	mov	r0, r5
   14d6c:	bl	172e0 <abort@plt+0x6120>
   14d70:	mov	r0, r8
   14d74:	bl	16a34 <abort@plt+0x5874>
   14d78:	ldr	ip, [sp, #84]	; 0x54
   14d7c:	ldr	lr, [sp, #40]	; 0x28
   14d80:	mov	r3, sl
   14d84:	mov	r2, r9
   14d88:	mov	r1, r8
   14d8c:	str	r0, [r4, #4]
   14d90:	ldr	r4, [sp, #80]	; 0x50
   14d94:	str	fp, [sp, #8]
   14d98:	str	r6, [sp, #4]
   14d9c:	str	ip, [sp, #16]
   14da0:	str	r4, [sp, #12]
   14da4:	str	lr, [sp]
   14da8:	mov	r5, r0
   14dac:	bl	11ffc <abort@plt+0xe3c>
   14db0:	ldr	r3, [sp, #28]
   14db4:	mov	r0, r5
   14db8:	str	r3, [r7]
   14dbc:	add	sp, sp, #92	; 0x5c
   14dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc4:	mov	r3, #8
   14dc8:	str	r3, [sp]
   14dcc:	add	r1, sp, #36	; 0x24
   14dd0:	rsb	r2, r2, #1
   14dd4:	mvn	r3, #-2147483648	; 0x80000000
   14dd8:	mov	r0, #0
   14ddc:	bl	16c50 <abort@plt+0x5a90>
   14de0:	mov	r4, r0
   14de4:	ldm	r6, {r0, r1}
   14de8:	str	r4, [r5]
   14dec:	stm	r4, {r0, r1}
   14df0:	b	14ce0 <abort@plt+0x3b20>
   14df4:	andeq	r9, r2, r4, lsl #3
   14df8:	andeq	r9, r2, r4, lsl r1
   14dfc:			; <UNDEFINED> instruction: 0x000291b4
   14e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e04:	sub	sp, sp, #180	; 0xb4
   14e08:	mov	r6, r1
   14e0c:	mov	r4, r0
   14e10:	mov	r9, r2
   14e14:	add	r0, sp, #80	; 0x50
   14e18:	mov	r2, #48	; 0x30
   14e1c:	mov	r1, #0
   14e20:	bl	110f4 <memset@plt>
   14e24:	cmp	r6, #10
   14e28:	beq	15008 <abort@plt+0x3e48>
   14e2c:	add	r5, sp, #80	; 0x50
   14e30:	str	r6, [sp, #80]	; 0x50
   14e34:	ldm	r5!, {r0, r1, r2, r3}
   14e38:	add	ip, sp, #128	; 0x80
   14e3c:	mov	r7, ip
   14e40:	add	lr, sp, #32
   14e44:	stmia	ip!, {r0, r1, r2, r3}
   14e48:	mov	r8, #67108864	; 0x4000000
   14e4c:	ldm	r5!, {r0, r1, r2, r3}
   14e50:	ldr	r6, [pc, #436]	; 1500c <abort@plt+0x3e4c>
   14e54:	stmia	ip!, {r0, r1, r2, r3}
   14e58:	ldm	r5, {r0, r1, r2, r3}
   14e5c:	stm	ip, {r0, r1, r2, r3}
   14e60:	ldm	r7!, {r0, r1, r2, r3}
   14e64:	stmia	lr!, {r0, r1, r2, r3}
   14e68:	ldm	r7!, {r0, r1, r2, r3}
   14e6c:	str	r8, [sp, #44]	; 0x2c
   14e70:	stmia	lr!, {r0, r1, r2, r3}
   14e74:	ldm	ip, {r0, r1, r2, r3}
   14e78:	stm	lr, {r0, r1, r2, r3}
   14e7c:	bl	110dc <__errno_location@plt>
   14e80:	cmn	r4, #-2147483647	; 0x80000001
   14e84:	ldr	r5, [r6]
   14e88:	mov	r7, r0
   14e8c:	movne	r0, #0
   14e90:	moveq	r0, #1
   14e94:	ldr	r3, [r7]
   14e98:	orrs	r0, r0, r4, lsr #31
   14e9c:	str	r3, [sp, #24]
   14ea0:	bne	15008 <abort@plt+0x3e48>
   14ea4:	ldr	r2, [r6, #4]
   14ea8:	cmp	r4, r2
   14eac:	blt	14f0c <abort@plt+0x3d4c>
   14eb0:	add	r8, r6, #8
   14eb4:	cmp	r5, r8
   14eb8:	str	r2, [sp, #80]	; 0x50
   14ebc:	beq	14fd8 <abort@plt+0x3e18>
   14ec0:	mov	r3, #8
   14ec4:	sub	r2, r4, r2
   14ec8:	mov	r0, r5
   14ecc:	str	r3, [sp]
   14ed0:	add	r2, r2, #1
   14ed4:	add	r1, sp, #80	; 0x50
   14ed8:	mvn	r3, #-2147483648	; 0x80000000
   14edc:	bl	16c50 <abort@plt+0x5a90>
   14ee0:	mov	r5, r0
   14ee4:	str	r0, [r6]
   14ee8:	ldr	r0, [r6, #4]
   14eec:	ldr	r2, [sp, #80]	; 0x50
   14ef0:	mov	r1, #0
   14ef4:	sub	r2, r2, r0
   14ef8:	add	r0, r5, r0, lsl #3
   14efc:	lsl	r2, r2, #3
   14f00:	bl	110f4 <memset@plt>
   14f04:	ldr	r3, [sp, #80]	; 0x50
   14f08:	str	r3, [r6, #4]
   14f0c:	add	fp, r5, r4, lsl #3
   14f10:	ldr	r1, [sp, #36]	; 0x24
   14f14:	ldr	r8, [r5, r4, lsl #3]
   14f18:	ldr	r6, [fp, #4]
   14f1c:	ldr	r2, [sp, #72]	; 0x48
   14f20:	ldr	r3, [sp, #32]
   14f24:	ldr	ip, [sp, #76]	; 0x4c
   14f28:	orr	r1, r1, #1
   14f2c:	add	sl, sp, #40	; 0x28
   14f30:	str	r1, [sp, #28]
   14f34:	str	r1, [sp, #4]
   14f38:	str	r2, [sp, #12]
   14f3c:	str	r3, [sp]
   14f40:	mov	r0, r6
   14f44:	mov	r1, r8
   14f48:	str	ip, [sp, #16]
   14f4c:	str	sl, [sp, #8]
   14f50:	mvn	r3, #0
   14f54:	mov	r2, r9
   14f58:	bl	11ffc <abort@plt+0xe3c>
   14f5c:	cmp	r8, r0
   14f60:	bhi	14fc4 <abort@plt+0x3e04>
   14f64:	ldr	r3, [pc, #164]	; 15010 <abort@plt+0x3e50>
   14f68:	add	r8, r0, #1
   14f6c:	cmp	r6, r3
   14f70:	str	r8, [r5, r4, lsl #3]
   14f74:	beq	14f80 <abort@plt+0x3dc0>
   14f78:	mov	r0, r6
   14f7c:	bl	172e0 <abort@plt+0x6120>
   14f80:	mov	r0, r8
   14f84:	bl	16a34 <abort@plt+0x5874>
   14f88:	ldr	lr, [sp, #76]	; 0x4c
   14f8c:	ldr	r3, [sp, #32]
   14f90:	ldr	ip, [sp, #72]	; 0x48
   14f94:	ldr	r4, [sp, #28]
   14f98:	mov	r2, r9
   14f9c:	mov	r1, r8
   14fa0:	str	r0, [fp, #4]
   14fa4:	str	r3, [sp]
   14fa8:	str	sl, [sp, #8]
   14fac:	str	r4, [sp, #4]
   14fb0:	str	lr, [sp, #16]
   14fb4:	str	ip, [sp, #12]
   14fb8:	mvn	r3, #0
   14fbc:	mov	r6, r0
   14fc0:	bl	11ffc <abort@plt+0xe3c>
   14fc4:	ldr	r3, [sp, #24]
   14fc8:	mov	r0, r6
   14fcc:	str	r3, [r7]
   14fd0:	add	sp, sp, #180	; 0xb4
   14fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fd8:	mov	r3, #8
   14fdc:	sub	r2, r4, r2
   14fe0:	add	r1, sp, #80	; 0x50
   14fe4:	str	r3, [sp]
   14fe8:	add	r2, r2, #1
   14fec:	mvn	r3, #-2147483648	; 0x80000000
   14ff0:	bl	16c50 <abort@plt+0x5a90>
   14ff4:	mov	r5, r0
   14ff8:	ldm	r8, {r0, r1}
   14ffc:	str	r5, [r6]
   15000:	stm	r5, {r0, r1}
   15004:	b	14ee8 <abort@plt+0x3d28>
   15008:	bl	111c0 <abort@plt>
   1500c:	andeq	r9, r2, r4, lsl r1
   15010:			; <UNDEFINED> instruction: 0x000291b4
   15014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15018:	mov	r7, r1
   1501c:	ldr	lr, [pc, #492]	; 15210 <abort@plt+0x4050>
   15020:	mov	r8, r2
   15024:	mov	r4, r0
   15028:	mov	fp, r3
   1502c:	ldm	lr!, {r0, r1, r2, r3}
   15030:	sub	sp, sp, #100	; 0x64
   15034:	add	ip, sp, #48	; 0x30
   15038:	mov	sl, #10
   1503c:	stmia	ip!, {r0, r1, r2, r3}
   15040:	cmp	r8, #0
   15044:	cmpne	r7, #0
   15048:	ldm	lr!, {r0, r1, r2, r3}
   1504c:	str	sl, [sp, #48]	; 0x30
   15050:	stmia	ip!, {r0, r1, r2, r3}
   15054:	ldm	lr, {r0, r1, r2, r3}
   15058:	stm	ip, {r0, r1, r2, r3}
   1505c:	beq	1520c <abort@plt+0x404c>
   15060:	str	r7, [sp, #88]	; 0x58
   15064:	str	r8, [sp, #92]	; 0x5c
   15068:	bl	110dc <__errno_location@plt>
   1506c:	ldr	r6, [pc, #416]	; 15214 <abort@plt+0x4054>
   15070:	cmn	r4, #-2147483647	; 0x80000001
   15074:	ldr	r5, [r6]
   15078:	mov	r9, r0
   1507c:	movne	r0, #0
   15080:	moveq	r0, #1
   15084:	ldr	r3, [r9]
   15088:	orrs	r0, r0, r4, lsr #31
   1508c:	str	r3, [sp, #28]
   15090:	bne	1520c <abort@plt+0x404c>
   15094:	ldr	r2, [r6, #4]
   15098:	cmp	r4, r2
   1509c:	movlt	r3, sl
   150a0:	blt	1510c <abort@plt+0x3f4c>
   150a4:	add	r7, r6, #8
   150a8:	cmp	r5, r7
   150ac:	str	r2, [sp, #44]	; 0x2c
   150b0:	beq	151dc <abort@plt+0x401c>
   150b4:	mov	r3, #8
   150b8:	sub	r2, r4, r2
   150bc:	mov	r0, r5
   150c0:	str	r3, [sp]
   150c4:	add	r2, r2, #1
   150c8:	mvn	r3, #-2147483648	; 0x80000000
   150cc:	add	r1, sp, #44	; 0x2c
   150d0:	bl	16c50 <abort@plt+0x5a90>
   150d4:	mov	r5, r0
   150d8:	str	r0, [r6]
   150dc:	ldr	r0, [r6, #4]
   150e0:	ldr	r2, [sp, #44]	; 0x2c
   150e4:	mov	r1, #0
   150e8:	sub	r2, r2, r0
   150ec:	add	r0, r5, r0, lsl #3
   150f0:	lsl	r2, r2, #3
   150f4:	bl	110f4 <memset@plt>
   150f8:	ldr	r3, [sp, #48]	; 0x30
   150fc:	ldr	r7, [sp, #88]	; 0x58
   15100:	ldr	r8, [sp, #92]	; 0x5c
   15104:	ldr	r2, [sp, #44]	; 0x2c
   15108:	str	r2, [r6, #4]
   1510c:	add	r2, r5, r4, lsl #3
   15110:	mov	r1, r2
   15114:	str	r2, [sp, #32]
   15118:	ldr	r2, [sp, #52]	; 0x34
   1511c:	ldr	r6, [r1, #4]
   15120:	ldr	sl, [r5, r4, lsl #3]
   15124:	orr	r2, r2, #1
   15128:	str	r3, [sp]
   1512c:	add	r3, sp, #56	; 0x38
   15130:	str	r2, [sp, #36]	; 0x24
   15134:	str	r2, [sp, #4]
   15138:	str	r3, [sp, #8]
   1513c:	mov	r0, r6
   15140:	str	r8, [sp, #16]
   15144:	str	r7, [sp, #12]
   15148:	mov	r1, sl
   1514c:	mvn	r3, #0
   15150:	mov	r2, fp
   15154:	bl	11ffc <abort@plt+0xe3c>
   15158:	cmp	sl, r0
   1515c:	bhi	151c8 <abort@plt+0x4008>
   15160:	ldr	r3, [pc, #176]	; 15218 <abort@plt+0x4058>
   15164:	add	r7, r0, #1
   15168:	cmp	r6, r3
   1516c:	str	r7, [r5, r4, lsl #3]
   15170:	beq	1517c <abort@plt+0x3fbc>
   15174:	mov	r0, r6
   15178:	bl	172e0 <abort@plt+0x6120>
   1517c:	mov	r0, r7
   15180:	bl	16a34 <abort@plt+0x5874>
   15184:	ldr	r3, [sp, #32]
   15188:	ldr	lr, [sp, #92]	; 0x5c
   1518c:	ldr	ip, [sp, #88]	; 0x58
   15190:	ldr	r4, [sp, #36]	; 0x24
   15194:	mov	r2, fp
   15198:	mov	r1, r7
   1519c:	str	r0, [r3, #4]
   151a0:	add	r3, sp, #56	; 0x38
   151a4:	str	r3, [sp, #8]
   151a8:	ldr	r3, [sp, #48]	; 0x30
   151ac:	str	r4, [sp, #4]
   151b0:	str	r3, [sp]
   151b4:	str	lr, [sp, #16]
   151b8:	str	ip, [sp, #12]
   151bc:	mvn	r3, #0
   151c0:	mov	r6, r0
   151c4:	bl	11ffc <abort@plt+0xe3c>
   151c8:	ldr	r3, [sp, #28]
   151cc:	mov	r0, r6
   151d0:	str	r3, [r9]
   151d4:	add	sp, sp, #100	; 0x64
   151d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151dc:	mov	r3, #8
   151e0:	sub	r2, r4, r2
   151e4:	str	r3, [sp]
   151e8:	add	r1, sp, #44	; 0x2c
   151ec:	add	r2, r2, #1
   151f0:	mvn	r3, #-2147483648	; 0x80000000
   151f4:	bl	16c50 <abort@plt+0x5a90>
   151f8:	mov	r5, r0
   151fc:	ldm	r7, {r0, r1}
   15200:	str	r5, [r6]
   15204:	stm	r5, {r0, r1}
   15208:	b	150dc <abort@plt+0x3f1c>
   1520c:	bl	111c0 <abort@plt>
   15210:	andeq	r9, r2, r4, lsl #3
   15214:	andeq	r9, r2, r4, lsl r1
   15218:			; <UNDEFINED> instruction: 0x000291b4
   1521c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15220:	mov	r7, r1
   15224:	ldr	lr, [pc, #492]	; 15418 <abort@plt+0x4258>
   15228:	mov	r8, r2
   1522c:	mov	r4, r0
   15230:	mov	fp, r3
   15234:	ldm	lr!, {r0, r1, r2, r3}
   15238:	sub	sp, sp, #100	; 0x64
   1523c:	add	ip, sp, #48	; 0x30
   15240:	mov	sl, #10
   15244:	stmia	ip!, {r0, r1, r2, r3}
   15248:	cmp	r8, #0
   1524c:	cmpne	r7, #0
   15250:	ldm	lr!, {r0, r1, r2, r3}
   15254:	str	sl, [sp, #48]	; 0x30
   15258:	stmia	ip!, {r0, r1, r2, r3}
   1525c:	ldm	lr, {r0, r1, r2, r3}
   15260:	stm	ip, {r0, r1, r2, r3}
   15264:	beq	15414 <abort@plt+0x4254>
   15268:	str	r7, [sp, #88]	; 0x58
   1526c:	str	r8, [sp, #92]	; 0x5c
   15270:	bl	110dc <__errno_location@plt>
   15274:	ldr	r6, [pc, #416]	; 1541c <abort@plt+0x425c>
   15278:	cmn	r4, #-2147483647	; 0x80000001
   1527c:	ldr	r5, [r6]
   15280:	mov	r9, r0
   15284:	movne	r0, #0
   15288:	moveq	r0, #1
   1528c:	ldr	r3, [r9]
   15290:	orrs	r0, r0, r4, lsr #31
   15294:	str	r3, [sp, #28]
   15298:	bne	15414 <abort@plt+0x4254>
   1529c:	ldr	r2, [r6, #4]
   152a0:	cmp	r4, r2
   152a4:	movlt	r3, sl
   152a8:	blt	15314 <abort@plt+0x4154>
   152ac:	add	r7, r6, #8
   152b0:	cmp	r5, r7
   152b4:	str	r2, [sp, #44]	; 0x2c
   152b8:	beq	153e4 <abort@plt+0x4224>
   152bc:	mov	r3, #8
   152c0:	sub	r2, r4, r2
   152c4:	mov	r0, r5
   152c8:	str	r3, [sp]
   152cc:	add	r2, r2, #1
   152d0:	mvn	r3, #-2147483648	; 0x80000000
   152d4:	add	r1, sp, #44	; 0x2c
   152d8:	bl	16c50 <abort@plt+0x5a90>
   152dc:	mov	r5, r0
   152e0:	str	r0, [r6]
   152e4:	ldr	r0, [r6, #4]
   152e8:	ldr	r2, [sp, #44]	; 0x2c
   152ec:	mov	r1, #0
   152f0:	sub	r2, r2, r0
   152f4:	add	r0, r5, r0, lsl #3
   152f8:	lsl	r2, r2, #3
   152fc:	bl	110f4 <memset@plt>
   15300:	ldr	r3, [sp, #48]	; 0x30
   15304:	ldr	r7, [sp, #88]	; 0x58
   15308:	ldr	r8, [sp, #92]	; 0x5c
   1530c:	ldr	r2, [sp, #44]	; 0x2c
   15310:	str	r2, [r6, #4]
   15314:	add	r2, r5, r4, lsl #3
   15318:	mov	r1, r2
   1531c:	str	r2, [sp, #32]
   15320:	ldr	r2, [sp, #52]	; 0x34
   15324:	ldr	r6, [r1, #4]
   15328:	ldr	sl, [r5, r4, lsl #3]
   1532c:	orr	r2, r2, #1
   15330:	str	r3, [sp]
   15334:	add	r3, sp, #56	; 0x38
   15338:	str	r2, [sp, #36]	; 0x24
   1533c:	str	r2, [sp, #4]
   15340:	str	r3, [sp, #8]
   15344:	mov	r0, r6
   15348:	str	r8, [sp, #16]
   1534c:	str	r7, [sp, #12]
   15350:	mov	r1, sl
   15354:	ldr	r3, [sp, #136]	; 0x88
   15358:	mov	r2, fp
   1535c:	bl	11ffc <abort@plt+0xe3c>
   15360:	cmp	sl, r0
   15364:	bhi	153d0 <abort@plt+0x4210>
   15368:	ldr	r3, [pc, #176]	; 15420 <abort@plt+0x4260>
   1536c:	add	r7, r0, #1
   15370:	cmp	r6, r3
   15374:	str	r7, [r5, r4, lsl #3]
   15378:	beq	15384 <abort@plt+0x41c4>
   1537c:	mov	r0, r6
   15380:	bl	172e0 <abort@plt+0x6120>
   15384:	mov	r0, r7
   15388:	bl	16a34 <abort@plt+0x5874>
   1538c:	ldr	r3, [sp, #32]
   15390:	ldr	lr, [sp, #92]	; 0x5c
   15394:	ldr	ip, [sp, #88]	; 0x58
   15398:	ldr	r4, [sp, #36]	; 0x24
   1539c:	mov	r2, fp
   153a0:	mov	r1, r7
   153a4:	str	r0, [r3, #4]
   153a8:	add	r3, sp, #56	; 0x38
   153ac:	str	r3, [sp, #8]
   153b0:	ldr	r3, [sp, #48]	; 0x30
   153b4:	str	r4, [sp, #4]
   153b8:	str	r3, [sp]
   153bc:	str	lr, [sp, #16]
   153c0:	str	ip, [sp, #12]
   153c4:	ldr	r3, [sp, #136]	; 0x88
   153c8:	mov	r6, r0
   153cc:	bl	11ffc <abort@plt+0xe3c>
   153d0:	ldr	r3, [sp, #28]
   153d4:	mov	r0, r6
   153d8:	str	r3, [r9]
   153dc:	add	sp, sp, #100	; 0x64
   153e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153e4:	mov	r3, #8
   153e8:	sub	r2, r4, r2
   153ec:	str	r3, [sp]
   153f0:	add	r1, sp, #44	; 0x2c
   153f4:	add	r2, r2, #1
   153f8:	mvn	r3, #-2147483648	; 0x80000000
   153fc:	bl	16c50 <abort@plt+0x5a90>
   15400:	mov	r5, r0
   15404:	ldm	r7, {r0, r1}
   15408:	str	r5, [r6]
   1540c:	stm	r5, {r0, r1}
   15410:	b	152e4 <abort@plt+0x4124>
   15414:	bl	111c0 <abort@plt>
   15418:	andeq	r9, r2, r4, lsl #3
   1541c:	andeq	r9, r2, r4, lsl r1
   15420:			; <UNDEFINED> instruction: 0x000291b4
   15424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15428:	mov	r5, r0
   1542c:	ldr	lr, [pc, #452]	; 155f8 <abort@plt+0x4438>
   15430:	mov	r6, r1
   15434:	mov	sl, r2
   15438:	ldm	lr!, {r0, r1, r2, r3}
   1543c:	sub	sp, sp, #92	; 0x5c
   15440:	add	ip, sp, #40	; 0x28
   15444:	cmp	r6, #0
   15448:	cmpne	r5, #0
   1544c:	stmia	ip!, {r0, r1, r2, r3}
   15450:	mov	r9, #10
   15454:	ldm	lr!, {r0, r1, r2, r3}
   15458:	moveq	fp, #1
   1545c:	movne	fp, #0
   15460:	str	r9, [sp, #40]	; 0x28
   15464:	stmia	ip!, {r0, r1, r2, r3}
   15468:	ldm	lr, {r0, r1, r2, r3}
   1546c:	stm	ip, {r0, r1, r2, r3}
   15470:	beq	155f4 <abort@plt+0x4434>
   15474:	str	r5, [sp, #80]	; 0x50
   15478:	str	r6, [sp, #84]	; 0x54
   1547c:	bl	110dc <__errno_location@plt>
   15480:	ldr	r7, [pc, #372]	; 155fc <abort@plt+0x443c>
   15484:	ldr	r2, [r7, #4]
   15488:	ldr	r4, [r7]
   1548c:	cmp	r2, #0
   15490:	ldr	r3, [r0]
   15494:	mov	r8, r0
   15498:	str	r3, [sp, #24]
   1549c:	movgt	r3, r9
   154a0:	bgt	15508 <abort@plt+0x4348>
   154a4:	add	r5, r7, #8
   154a8:	cmp	r4, r5
   154ac:	str	r2, [sp, #36]	; 0x24
   154b0:	beq	155c4 <abort@plt+0x4404>
   154b4:	mov	r3, #8
   154b8:	mov	r0, r4
   154bc:	str	r3, [sp]
   154c0:	rsb	r2, r2, #1
   154c4:	mvn	r3, #-2147483648	; 0x80000000
   154c8:	add	r1, sp, #36	; 0x24
   154cc:	bl	16c50 <abort@plt+0x5a90>
   154d0:	mov	r4, r0
   154d4:	str	r0, [r7]
   154d8:	ldr	r0, [r7, #4]
   154dc:	ldr	r2, [sp, #36]	; 0x24
   154e0:	mov	r1, #0
   154e4:	sub	r2, r2, r0
   154e8:	add	r0, r4, r0, lsl #3
   154ec:	lsl	r2, r2, #3
   154f0:	bl	110f4 <memset@plt>
   154f4:	ldr	r3, [sp, #40]	; 0x28
   154f8:	ldr	r5, [sp, #80]	; 0x50
   154fc:	ldr	r6, [sp, #84]	; 0x54
   15500:	ldr	r2, [sp, #36]	; 0x24
   15504:	str	r2, [r7, #4]
   15508:	ldr	r2, [sp, #44]	; 0x2c
   1550c:	ldr	r9, [r4]
   15510:	ldr	r7, [r4, #4]
   15514:	orr	r2, r2, #1
   15518:	add	fp, sp, #48	; 0x30
   1551c:	str	r2, [sp, #28]
   15520:	str	r2, [sp, #4]
   15524:	str	r3, [sp]
   15528:	str	r6, [sp, #16]
   1552c:	str	r5, [sp, #12]
   15530:	mov	r1, r9
   15534:	mov	r0, r7
   15538:	str	fp, [sp, #8]
   1553c:	mvn	r3, #0
   15540:	mov	r2, sl
   15544:	bl	11ffc <abort@plt+0xe3c>
   15548:	cmp	r9, r0
   1554c:	bhi	155b0 <abort@plt+0x43f0>
   15550:	ldr	r3, [pc, #168]	; 15600 <abort@plt+0x4440>
   15554:	add	r5, r0, #1
   15558:	cmp	r7, r3
   1555c:	str	r5, [r4]
   15560:	beq	1556c <abort@plt+0x43ac>
   15564:	mov	r0, r7
   15568:	bl	172e0 <abort@plt+0x6120>
   1556c:	mov	r0, r5
   15570:	bl	16a34 <abort@plt+0x5874>
   15574:	ldr	lr, [sp, #84]	; 0x54
   15578:	ldr	r3, [sp, #40]	; 0x28
   1557c:	ldr	ip, [sp, #80]	; 0x50
   15580:	mov	r2, sl
   15584:	mov	r1, r5
   15588:	str	r0, [r4, #4]
   1558c:	ldr	r4, [sp, #28]
   15590:	str	r3, [sp]
   15594:	str	fp, [sp, #8]
   15598:	str	r4, [sp, #4]
   1559c:	str	lr, [sp, #16]
   155a0:	str	ip, [sp, #12]
   155a4:	mvn	r3, #0
   155a8:	mov	r7, r0
   155ac:	bl	11ffc <abort@plt+0xe3c>
   155b0:	ldr	r3, [sp, #24]
   155b4:	mov	r0, r7
   155b8:	str	r3, [r8]
   155bc:	add	sp, sp, #92	; 0x5c
   155c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155c4:	mov	r3, #8
   155c8:	str	r3, [sp]
   155cc:	add	r1, sp, #36	; 0x24
   155d0:	rsb	r2, r2, #1
   155d4:	mov	r0, fp
   155d8:	mvn	r3, #-2147483648	; 0x80000000
   155dc:	bl	16c50 <abort@plt+0x5a90>
   155e0:	mov	r4, r0
   155e4:	ldm	r5, {r0, r1}
   155e8:	str	r4, [r7]
   155ec:	stm	r4, {r0, r1}
   155f0:	b	154d8 <abort@plt+0x4318>
   155f4:	bl	111c0 <abort@plt>
   155f8:	andeq	r9, r2, r4, lsl #3
   155fc:	andeq	r9, r2, r4, lsl r1
   15600:			; <UNDEFINED> instruction: 0x000291b4
   15604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15608:	mov	r5, r0
   1560c:	ldr	lr, [pc, #464]	; 157e4 <abort@plt+0x4624>
   15610:	mov	r6, r1
   15614:	mov	sl, r2
   15618:	mov	fp, r3
   1561c:	ldm	lr!, {r0, r1, r2, r3}
   15620:	sub	sp, sp, #92	; 0x5c
   15624:	add	ip, sp, #40	; 0x28
   15628:	cmp	r6, #0
   1562c:	cmpne	r5, #0
   15630:	stmia	ip!, {r0, r1, r2, r3}
   15634:	moveq	r4, #1
   15638:	ldm	lr!, {r0, r1, r2, r3}
   1563c:	movne	r4, #0
   15640:	mov	r9, #10
   15644:	str	r4, [sp, #28]
   15648:	stmia	ip!, {r0, r1, r2, r3}
   1564c:	ldm	lr, {r0, r1, r2, r3}
   15650:	str	r9, [sp, #40]	; 0x28
   15654:	stm	ip, {r0, r1, r2, r3}
   15658:	beq	157e0 <abort@plt+0x4620>
   1565c:	str	r5, [sp, #80]	; 0x50
   15660:	str	r6, [sp, #84]	; 0x54
   15664:	bl	110dc <__errno_location@plt>
   15668:	ldr	r7, [pc, #376]	; 157e8 <abort@plt+0x4628>
   1566c:	ldr	r2, [r7, #4]
   15670:	ldr	r4, [r7]
   15674:	cmp	r2, #0
   15678:	ldr	r3, [r0]
   1567c:	mov	r8, r0
   15680:	str	r3, [sp, #24]
   15684:	movgt	r3, r9
   15688:	bgt	156f0 <abort@plt+0x4530>
   1568c:	add	r5, r7, #8
   15690:	cmp	r4, r5
   15694:	str	r2, [sp, #36]	; 0x24
   15698:	beq	157b0 <abort@plt+0x45f0>
   1569c:	mov	r3, #8
   156a0:	mov	r0, r4
   156a4:	str	r3, [sp]
   156a8:	rsb	r2, r2, #1
   156ac:	mvn	r3, #-2147483648	; 0x80000000
   156b0:	add	r1, sp, #36	; 0x24
   156b4:	bl	16c50 <abort@plt+0x5a90>
   156b8:	mov	r4, r0
   156bc:	str	r0, [r7]
   156c0:	ldr	r0, [r7, #4]
   156c4:	ldr	r2, [sp, #36]	; 0x24
   156c8:	mov	r1, #0
   156cc:	sub	r2, r2, r0
   156d0:	add	r0, r4, r0, lsl #3
   156d4:	lsl	r2, r2, #3
   156d8:	bl	110f4 <memset@plt>
   156dc:	ldr	r3, [sp, #40]	; 0x28
   156e0:	ldr	r5, [sp, #80]	; 0x50
   156e4:	ldr	r6, [sp, #84]	; 0x54
   156e8:	ldr	r2, [sp, #36]	; 0x24
   156ec:	str	r2, [r7, #4]
   156f0:	ldr	r2, [sp, #44]	; 0x2c
   156f4:	ldr	r9, [r4]
   156f8:	ldr	r7, [r4, #4]
   156fc:	orr	r2, r2, #1
   15700:	str	r3, [sp]
   15704:	add	r3, sp, #48	; 0x30
   15708:	str	r2, [sp, #28]
   1570c:	str	r2, [sp, #4]
   15710:	str	r3, [sp, #8]
   15714:	str	r6, [sp, #16]
   15718:	str	r5, [sp, #12]
   1571c:	mov	r1, r9
   15720:	mov	r0, r7
   15724:	mov	r3, fp
   15728:	mov	r2, sl
   1572c:	bl	11ffc <abort@plt+0xe3c>
   15730:	cmp	r9, r0
   15734:	bhi	1579c <abort@plt+0x45dc>
   15738:	ldr	r3, [pc, #172]	; 157ec <abort@plt+0x462c>
   1573c:	add	r5, r0, #1
   15740:	cmp	r7, r3
   15744:	str	r5, [r4]
   15748:	beq	15754 <abort@plt+0x4594>
   1574c:	mov	r0, r7
   15750:	bl	172e0 <abort@plt+0x6120>
   15754:	mov	r0, r5
   15758:	bl	16a34 <abort@plt+0x5874>
   1575c:	add	lr, sp, #48	; 0x30
   15760:	ldr	ip, [sp, #84]	; 0x54
   15764:	mov	r1, r5
   15768:	ldr	r5, [sp, #28]
   1576c:	mov	r3, fp
   15770:	mov	r2, sl
   15774:	str	r0, [r4, #4]
   15778:	ldr	r4, [sp, #80]	; 0x50
   1577c:	str	lr, [sp, #8]
   15780:	ldr	lr, [sp, #40]	; 0x28
   15784:	str	r5, [sp, #4]
   15788:	str	ip, [sp, #16]
   1578c:	str	r4, [sp, #12]
   15790:	str	lr, [sp]
   15794:	mov	r7, r0
   15798:	bl	11ffc <abort@plt+0xe3c>
   1579c:	ldr	r3, [sp, #24]
   157a0:	mov	r0, r7
   157a4:	str	r3, [r8]
   157a8:	add	sp, sp, #92	; 0x5c
   157ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157b0:	mov	r3, #8
   157b4:	str	r3, [sp]
   157b8:	add	r1, sp, #36	; 0x24
   157bc:	rsb	r2, r2, #1
   157c0:	ldr	r0, [sp, #28]
   157c4:	mvn	r3, #-2147483648	; 0x80000000
   157c8:	bl	16c50 <abort@plt+0x5a90>
   157cc:	mov	r4, r0
   157d0:	ldm	r5, {r0, r1}
   157d4:	str	r4, [r7]
   157d8:	stm	r4, {r0, r1}
   157dc:	b	156c0 <abort@plt+0x4500>
   157e0:	bl	111c0 <abort@plt>
   157e4:	andeq	r9, r2, r4, lsl #3
   157e8:	andeq	r9, r2, r4, lsl r1
   157ec:			; <UNDEFINED> instruction: 0x000291b4
   157f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157f4:	sub	sp, sp, #52	; 0x34
   157f8:	mov	r5, r0
   157fc:	mov	sl, r1
   15800:	mov	fp, r2
   15804:	bl	110dc <__errno_location@plt>
   15808:	ldr	r4, [pc, #404]	; 159a4 <abort@plt+0x47e4>
   1580c:	cmn	r5, #-2147483647	; 0x80000001
   15810:	ldr	r6, [r4]
   15814:	mov	r8, r0
   15818:	movne	r0, #0
   1581c:	moveq	r0, #1
   15820:	ldr	r3, [r8]
   15824:	orrs	r0, r0, r5, lsr #31
   15828:	str	r3, [sp, #28]
   1582c:	bne	159a0 <abort@plt+0x47e0>
   15830:	ldr	r2, [r4, #4]
   15834:	cmp	r5, r2
   15838:	blt	15898 <abort@plt+0x46d8>
   1583c:	add	r7, r4, #8
   15840:	cmp	r6, r7
   15844:	str	r2, [sp, #44]	; 0x2c
   15848:	beq	15970 <abort@plt+0x47b0>
   1584c:	mov	r3, #8
   15850:	sub	r2, r5, r2
   15854:	mov	r0, r6
   15858:	str	r3, [sp]
   1585c:	add	r2, r2, #1
   15860:	mvn	r3, #-2147483648	; 0x80000000
   15864:	add	r1, sp, #44	; 0x2c
   15868:	bl	16c50 <abort@plt+0x5a90>
   1586c:	mov	r6, r0
   15870:	str	r0, [r4]
   15874:	ldr	r0, [r4, #4]
   15878:	ldr	r2, [sp, #44]	; 0x2c
   1587c:	mov	r1, #0
   15880:	sub	r2, r2, r0
   15884:	add	r0, r6, r0, lsl #3
   15888:	lsl	r2, r2, #3
   1588c:	bl	110f4 <memset@plt>
   15890:	ldr	r3, [sp, #44]	; 0x2c
   15894:	str	r3, [r4, #4]
   15898:	ldr	r2, [r4, #56]	; 0x38
   1589c:	add	r3, r6, r5, lsl #3
   158a0:	ldr	r1, [r4, #20]
   158a4:	ldr	r7, [r3, #4]
   158a8:	ldr	r9, [r6, r5, lsl #3]
   158ac:	ldr	ip, [r4, #60]	; 0x3c
   158b0:	str	r3, [sp, #32]
   158b4:	ldr	r3, [r4, #16]
   158b8:	str	r2, [sp, #12]
   158bc:	ldr	r2, [pc, #228]	; 159a8 <abort@plt+0x47e8>
   158c0:	orr	r1, r1, #1
   158c4:	str	r1, [sp, #36]	; 0x24
   158c8:	str	r1, [sp, #4]
   158cc:	str	r2, [sp, #8]
   158d0:	str	r3, [sp]
   158d4:	mov	r0, r7
   158d8:	mov	r1, r9
   158dc:	str	ip, [sp, #16]
   158e0:	mov	r3, fp
   158e4:	mov	r2, sl
   158e8:	bl	11ffc <abort@plt+0xe3c>
   158ec:	cmp	r9, r0
   158f0:	bhi	1595c <abort@plt+0x479c>
   158f4:	ldr	r3, [pc, #176]	; 159ac <abort@plt+0x47ec>
   158f8:	add	r9, r0, #1
   158fc:	cmp	r7, r3
   15900:	str	r9, [r6, r5, lsl #3]
   15904:	beq	15910 <abort@plt+0x4750>
   15908:	mov	r0, r7
   1590c:	bl	172e0 <abort@plt+0x6120>
   15910:	mov	r0, r9
   15914:	bl	16a34 <abort@plt+0x5874>
   15918:	ldr	ip, [sp, #32]
   1591c:	ldr	lr, [r4, #60]	; 0x3c
   15920:	ldr	r5, [r4, #56]	; 0x38
   15924:	mov	r3, fp
   15928:	mov	r2, sl
   1592c:	mov	r1, r9
   15930:	str	r0, [ip, #4]
   15934:	ldr	ip, [r4, #16]
   15938:	ldr	r4, [pc, #104]	; 159a8 <abort@plt+0x47e8>
   1593c:	str	lr, [sp, #16]
   15940:	str	r4, [sp, #8]
   15944:	ldr	r4, [sp, #36]	; 0x24
   15948:	str	r5, [sp, #12]
   1594c:	str	r4, [sp, #4]
   15950:	str	ip, [sp]
   15954:	mov	r7, r0
   15958:	bl	11ffc <abort@plt+0xe3c>
   1595c:	ldr	r3, [sp, #28]
   15960:	mov	r0, r7
   15964:	str	r3, [r8]
   15968:	add	sp, sp, #52	; 0x34
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	mov	r3, #8
   15974:	sub	r2, r5, r2
   15978:	str	r3, [sp]
   1597c:	add	r1, sp, #44	; 0x2c
   15980:	add	r2, r2, #1
   15984:	mvn	r3, #-2147483648	; 0x80000000
   15988:	bl	16c50 <abort@plt+0x5a90>
   1598c:	mov	r6, r0
   15990:	ldm	r7, {r0, r1}
   15994:	str	r6, [r4]
   15998:	stm	r6, {r0, r1}
   1599c:	b	15874 <abort@plt+0x46b4>
   159a0:	bl	111c0 <abort@plt>
   159a4:	andeq	r9, r2, r4, lsl r1
   159a8:	andeq	r9, r2, ip, lsr #2
   159ac:			; <UNDEFINED> instruction: 0x000291b4
   159b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b4:	sub	sp, sp, #44	; 0x2c
   159b8:	mov	r9, r0
   159bc:	mov	sl, r1
   159c0:	bl	110dc <__errno_location@plt>
   159c4:	ldr	r4, [pc, #360]	; 15b34 <abort@plt+0x4974>
   159c8:	ldr	r2, [r4, #4]
   159cc:	ldr	r5, [r4]
   159d0:	cmp	r2, #0
   159d4:	ldr	r3, [r0]
   159d8:	mov	r7, r0
   159dc:	str	r3, [sp, #24]
   159e0:	bgt	15a3c <abort@plt+0x487c>
   159e4:	add	r6, r4, #8
   159e8:	cmp	r5, r6
   159ec:	str	r2, [sp, #36]	; 0x24
   159f0:	beq	15b04 <abort@plt+0x4944>
   159f4:	mov	r3, #8
   159f8:	mov	r0, r5
   159fc:	str	r3, [sp]
   15a00:	rsb	r2, r2, #1
   15a04:	mvn	r3, #-2147483648	; 0x80000000
   15a08:	add	r1, sp, #36	; 0x24
   15a0c:	bl	16c50 <abort@plt+0x5a90>
   15a10:	mov	r5, r0
   15a14:	str	r0, [r4]
   15a18:	ldr	r0, [r4, #4]
   15a1c:	ldr	r2, [sp, #36]	; 0x24
   15a20:	mov	r1, #0
   15a24:	sub	r2, r2, r0
   15a28:	add	r0, r5, r0, lsl #3
   15a2c:	lsl	r2, r2, #3
   15a30:	bl	110f4 <memset@plt>
   15a34:	ldr	r3, [sp, #36]	; 0x24
   15a38:	str	r3, [r4, #4]
   15a3c:	ldr	r1, [r4, #20]
   15a40:	ldr	r8, [r5]
   15a44:	ldr	r6, [r5, #4]
   15a48:	ldr	r2, [r4, #56]	; 0x38
   15a4c:	ldr	r3, [r4, #16]
   15a50:	ldr	ip, [r4, #60]	; 0x3c
   15a54:	ldr	fp, [pc, #220]	; 15b38 <abort@plt+0x4978>
   15a58:	orr	r1, r1, #1
   15a5c:	str	r1, [sp, #28]
   15a60:	str	r1, [sp, #4]
   15a64:	str	r2, [sp, #12]
   15a68:	str	r3, [sp]
   15a6c:	mov	r1, r8
   15a70:	mov	r0, r6
   15a74:	str	ip, [sp, #16]
   15a78:	str	fp, [sp, #8]
   15a7c:	mov	r3, sl
   15a80:	mov	r2, r9
   15a84:	bl	11ffc <abort@plt+0xe3c>
   15a88:	cmp	r8, r0
   15a8c:	bhi	15af0 <abort@plt+0x4930>
   15a90:	ldr	r3, [pc, #164]	; 15b3c <abort@plt+0x497c>
   15a94:	add	r8, r0, #1
   15a98:	cmp	r6, r3
   15a9c:	str	r8, [r5]
   15aa0:	beq	15aac <abort@plt+0x48ec>
   15aa4:	mov	r0, r6
   15aa8:	bl	172e0 <abort@plt+0x6120>
   15aac:	mov	r0, r8
   15ab0:	bl	16a34 <abort@plt+0x5874>
   15ab4:	ldr	lr, [r4, #60]	; 0x3c
   15ab8:	ldr	ip, [r4, #16]
   15abc:	mov	r3, sl
   15ac0:	mov	r2, r9
   15ac4:	mov	r1, r8
   15ac8:	str	r0, [r5, #4]
   15acc:	ldr	r5, [r4, #56]	; 0x38
   15ad0:	ldr	r4, [sp, #28]
   15ad4:	str	fp, [sp, #8]
   15ad8:	str	r4, [sp, #4]
   15adc:	str	lr, [sp, #16]
   15ae0:	str	r5, [sp, #12]
   15ae4:	str	ip, [sp]
   15ae8:	mov	r6, r0
   15aec:	bl	11ffc <abort@plt+0xe3c>
   15af0:	ldr	r3, [sp, #24]
   15af4:	mov	r0, r6
   15af8:	str	r3, [r7]
   15afc:	add	sp, sp, #44	; 0x2c
   15b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b04:	mov	r3, #8
   15b08:	str	r3, [sp]
   15b0c:	add	r1, sp, #36	; 0x24
   15b10:	rsb	r2, r2, #1
   15b14:	mvn	r3, #-2147483648	; 0x80000000
   15b18:	mov	r0, #0
   15b1c:	bl	16c50 <abort@plt+0x5a90>
   15b20:	mov	r5, r0
   15b24:	ldm	r6, {r0, r1}
   15b28:	str	r5, [r4]
   15b2c:	stm	r5, {r0, r1}
   15b30:	b	15a18 <abort@plt+0x4858>
   15b34:	andeq	r9, r2, r4, lsl r1
   15b38:	andeq	r9, r2, ip, lsr #2
   15b3c:			; <UNDEFINED> instruction: 0x000291b4
   15b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b44:	sub	sp, sp, #44	; 0x2c
   15b48:	mov	r5, r0
   15b4c:	mov	sl, r1
   15b50:	bl	110dc <__errno_location@plt>
   15b54:	ldr	r4, [pc, #396]	; 15ce8 <abort@plt+0x4b28>
   15b58:	cmn	r5, #-2147483647	; 0x80000001
   15b5c:	ldr	r6, [r4]
   15b60:	mov	r8, r0
   15b64:	movne	r0, #0
   15b68:	moveq	r0, #1
   15b6c:	ldr	r3, [r8]
   15b70:	orrs	r0, r0, r5, lsr #31
   15b74:	str	r3, [sp, #24]
   15b78:	bne	15ce4 <abort@plt+0x4b24>
   15b7c:	ldr	r2, [r4, #4]
   15b80:	cmp	r5, r2
   15b84:	blt	15be4 <abort@plt+0x4a24>
   15b88:	add	r7, r4, #8
   15b8c:	cmp	r6, r7
   15b90:	str	r2, [sp, #36]	; 0x24
   15b94:	beq	15cb4 <abort@plt+0x4af4>
   15b98:	mov	r3, #8
   15b9c:	sub	r2, r5, r2
   15ba0:	mov	r0, r6
   15ba4:	str	r3, [sp]
   15ba8:	add	r2, r2, #1
   15bac:	mvn	r3, #-2147483648	; 0x80000000
   15bb0:	add	r1, sp, #36	; 0x24
   15bb4:	bl	16c50 <abort@plt+0x5a90>
   15bb8:	mov	r6, r0
   15bbc:	str	r0, [r4]
   15bc0:	ldr	r0, [r4, #4]
   15bc4:	ldr	r2, [sp, #36]	; 0x24
   15bc8:	mov	r1, #0
   15bcc:	sub	r2, r2, r0
   15bd0:	add	r0, r6, r0, lsl #3
   15bd4:	lsl	r2, r2, #3
   15bd8:	bl	110f4 <memset@plt>
   15bdc:	ldr	r3, [sp, #36]	; 0x24
   15be0:	str	r3, [r4, #4]
   15be4:	ldr	r2, [r4, #56]	; 0x38
   15be8:	add	fp, r6, r5, lsl #3
   15bec:	ldr	r1, [r4, #20]
   15bf0:	ldr	r9, [r6, r5, lsl #3]
   15bf4:	ldr	r7, [fp, #4]
   15bf8:	ldr	r3, [r4, #16]
   15bfc:	ldr	ip, [r4, #60]	; 0x3c
   15c00:	str	r2, [sp, #12]
   15c04:	ldr	r2, [pc, #224]	; 15cec <abort@plt+0x4b2c>
   15c08:	orr	r1, r1, #1
   15c0c:	str	r1, [sp, #28]
   15c10:	str	r1, [sp, #4]
   15c14:	str	r2, [sp, #8]
   15c18:	str	r3, [sp]
   15c1c:	mov	r0, r7
   15c20:	mov	r1, r9
   15c24:	str	ip, [sp, #16]
   15c28:	mvn	r3, #0
   15c2c:	mov	r2, sl
   15c30:	bl	11ffc <abort@plt+0xe3c>
   15c34:	cmp	r9, r0
   15c38:	bhi	15ca0 <abort@plt+0x4ae0>
   15c3c:	ldr	r3, [pc, #172]	; 15cf0 <abort@plt+0x4b30>
   15c40:	add	r9, r0, #1
   15c44:	cmp	r7, r3
   15c48:	str	r9, [r6, r5, lsl #3]
   15c4c:	beq	15c58 <abort@plt+0x4a98>
   15c50:	mov	r0, r7
   15c54:	bl	172e0 <abort@plt+0x6120>
   15c58:	mov	r0, r9
   15c5c:	bl	16a34 <abort@plt+0x5874>
   15c60:	ldr	ip, [r4, #60]	; 0x3c
   15c64:	ldr	r3, [r4, #16]
   15c68:	ldr	lr, [r4, #56]	; 0x38
   15c6c:	ldr	r4, [pc, #120]	; 15cec <abort@plt+0x4b2c>
   15c70:	mov	r2, sl
   15c74:	mov	r1, r9
   15c78:	str	r0, [fp, #4]
   15c7c:	str	r4, [sp, #8]
   15c80:	ldr	r4, [sp, #28]
   15c84:	str	r3, [sp]
   15c88:	str	r4, [sp, #4]
   15c8c:	str	ip, [sp, #16]
   15c90:	str	lr, [sp, #12]
   15c94:	mvn	r3, #0
   15c98:	mov	r7, r0
   15c9c:	bl	11ffc <abort@plt+0xe3c>
   15ca0:	ldr	r3, [sp, #24]
   15ca4:	mov	r0, r7
   15ca8:	str	r3, [r8]
   15cac:	add	sp, sp, #44	; 0x2c
   15cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cb4:	mov	r3, #8
   15cb8:	sub	r2, r5, r2
   15cbc:	str	r3, [sp]
   15cc0:	add	r1, sp, #36	; 0x24
   15cc4:	add	r2, r2, #1
   15cc8:	mvn	r3, #-2147483648	; 0x80000000
   15ccc:	bl	16c50 <abort@plt+0x5a90>
   15cd0:	mov	r6, r0
   15cd4:	ldm	r7, {r0, r1}
   15cd8:	str	r6, [r4]
   15cdc:	stm	r6, {r0, r1}
   15ce0:	b	15bc0 <abort@plt+0x4a00>
   15ce4:	bl	111c0 <abort@plt>
   15ce8:	andeq	r9, r2, r4, lsl r1
   15cec:	andeq	r9, r2, ip, lsr #2
   15cf0:			; <UNDEFINED> instruction: 0x000291b4
   15cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf8:	sub	sp, sp, #44	; 0x2c
   15cfc:	mov	sl, r0
   15d00:	bl	110dc <__errno_location@plt>
   15d04:	ldr	r4, [pc, #348]	; 15e68 <abort@plt+0x4ca8>
   15d08:	ldr	r2, [r4, #4]
   15d0c:	ldr	r5, [r4]
   15d10:	cmp	r2, #0
   15d14:	ldr	r3, [r0]
   15d18:	mov	r8, r0
   15d1c:	str	r3, [sp, #28]
   15d20:	bgt	15d7c <abort@plt+0x4bbc>
   15d24:	add	r6, r4, #8
   15d28:	cmp	r5, r6
   15d2c:	str	r2, [sp, #36]	; 0x24
   15d30:	beq	15e38 <abort@plt+0x4c78>
   15d34:	mov	r3, #8
   15d38:	mov	r0, r5
   15d3c:	str	r3, [sp]
   15d40:	rsb	r2, r2, #1
   15d44:	mvn	r3, #-2147483648	; 0x80000000
   15d48:	add	r1, sp, #36	; 0x24
   15d4c:	bl	16c50 <abort@plt+0x5a90>
   15d50:	mov	r5, r0
   15d54:	str	r0, [r4]
   15d58:	ldr	r0, [r4, #4]
   15d5c:	ldr	r2, [sp, #36]	; 0x24
   15d60:	mov	r1, #0
   15d64:	sub	r2, r2, r0
   15d68:	add	r0, r5, r0, lsl #3
   15d6c:	lsl	r2, r2, #3
   15d70:	bl	110f4 <memset@plt>
   15d74:	ldr	r3, [sp, #36]	; 0x24
   15d78:	str	r3, [r4, #4]
   15d7c:	ldr	r7, [r4, #20]
   15d80:	ldr	r9, [r5]
   15d84:	ldr	r6, [r5, #4]
   15d88:	ldr	r2, [r4, #56]	; 0x38
   15d8c:	ldr	r3, [r4, #16]
   15d90:	ldr	ip, [r4, #60]	; 0x3c
   15d94:	ldr	fp, [pc, #208]	; 15e6c <abort@plt+0x4cac>
   15d98:	orr	r7, r7, #1
   15d9c:	str	r2, [sp, #12]
   15da0:	str	r3, [sp]
   15da4:	str	r7, [sp, #4]
   15da8:	mov	r1, r9
   15dac:	mov	r0, r6
   15db0:	str	ip, [sp, #16]
   15db4:	str	fp, [sp, #8]
   15db8:	mvn	r3, #0
   15dbc:	mov	r2, sl
   15dc0:	bl	11ffc <abort@plt+0xe3c>
   15dc4:	cmp	r9, r0
   15dc8:	bhi	15e24 <abort@plt+0x4c64>
   15dcc:	ldr	r3, [pc, #156]	; 15e70 <abort@plt+0x4cb0>
   15dd0:	add	r9, r0, #1
   15dd4:	cmp	r6, r3
   15dd8:	str	r9, [r5]
   15ddc:	beq	15de8 <abort@plt+0x4c28>
   15de0:	mov	r0, r6
   15de4:	bl	172e0 <abort@plt+0x6120>
   15de8:	mov	r0, r9
   15dec:	bl	16a34 <abort@plt+0x5874>
   15df0:	ldr	ip, [r4, #60]	; 0x3c
   15df4:	ldr	r3, [r4, #16]
   15df8:	ldr	lr, [r4, #56]	; 0x38
   15dfc:	mov	r2, sl
   15e00:	mov	r1, r9
   15e04:	str	r0, [r5, #4]
   15e08:	str	r3, [sp]
   15e0c:	stmib	sp, {r7, fp}
   15e10:	str	ip, [sp, #16]
   15e14:	str	lr, [sp, #12]
   15e18:	mvn	r3, #0
   15e1c:	mov	r6, r0
   15e20:	bl	11ffc <abort@plt+0xe3c>
   15e24:	ldr	r3, [sp, #28]
   15e28:	mov	r0, r6
   15e2c:	str	r3, [r8]
   15e30:	add	sp, sp, #44	; 0x2c
   15e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e38:	mov	r3, #8
   15e3c:	str	r3, [sp]
   15e40:	add	r1, sp, #36	; 0x24
   15e44:	rsb	r2, r2, #1
   15e48:	mvn	r3, #-2147483648	; 0x80000000
   15e4c:	mov	r0, #0
   15e50:	bl	16c50 <abort@plt+0x5a90>
   15e54:	mov	r5, r0
   15e58:	ldm	r6, {r0, r1}
   15e5c:	str	r5, [r4]
   15e60:	stm	r5, {r0, r1}
   15e64:	b	15d58 <abort@plt+0x4b98>
   15e68:	andeq	r9, r2, r4, lsl r1
   15e6c:	andeq	r9, r2, ip, lsr #2
   15e70:			; <UNDEFINED> instruction: 0x000291b4
   15e74:	push	{r4, r5, r6, r7, r8, lr}
   15e78:	mov	r5, r1
   15e7c:	bl	110c4 <getfilecon@plt>
   15e80:	subs	r4, r0, #0
   15e84:	beq	15ed0 <abort@plt+0x4d10>
   15e88:	cmp	r4, #10
   15e8c:	beq	15e98 <abort@plt+0x4cd8>
   15e90:	mov	r0, r4
   15e94:	pop	{r4, r5, r6, r7, r8, pc}
   15e98:	ldr	r6, [r5]
   15e9c:	ldr	r1, [pc, #64]	; 15ee4 <abort@plt+0x4d24>
   15ea0:	mov	r0, r6
   15ea4:	bl	10f2c <strcmp@plt>
   15ea8:	subs	r7, r0, #0
   15eac:	bne	15e90 <abort@plt+0x4cd0>
   15eb0:	mov	r0, r6
   15eb4:	bl	11178 <freecon@plt>
   15eb8:	str	r7, [r5]
   15ebc:	bl	110dc <__errno_location@plt>
   15ec0:	mov	r3, #61	; 0x3d
   15ec4:	mvn	r4, #0
   15ec8:	str	r3, [r0]
   15ecc:	b	15e90 <abort@plt+0x4cd0>
   15ed0:	bl	110dc <__errno_location@plt>
   15ed4:	mov	r3, #95	; 0x5f
   15ed8:	mvn	r4, #0
   15edc:	str	r3, [r0]
   15ee0:	b	15e90 <abort@plt+0x4cd0>
   15ee4:	andeq	r8, r1, r4, lsl r3
   15ee8:	push	{r4, r5, r6, r7, r8, lr}
   15eec:	mov	r5, r1
   15ef0:	bl	11058 <lgetfilecon@plt>
   15ef4:	subs	r4, r0, #0
   15ef8:	beq	15f44 <abort@plt+0x4d84>
   15efc:	cmp	r4, #10
   15f00:	beq	15f0c <abort@plt+0x4d4c>
   15f04:	mov	r0, r4
   15f08:	pop	{r4, r5, r6, r7, r8, pc}
   15f0c:	ldr	r6, [r5]
   15f10:	ldr	r1, [pc, #64]	; 15f58 <abort@plt+0x4d98>
   15f14:	mov	r0, r6
   15f18:	bl	10f2c <strcmp@plt>
   15f1c:	subs	r7, r0, #0
   15f20:	bne	15f04 <abort@plt+0x4d44>
   15f24:	mov	r0, r6
   15f28:	bl	11178 <freecon@plt>
   15f2c:	str	r7, [r5]
   15f30:	bl	110dc <__errno_location@plt>
   15f34:	mov	r3, #61	; 0x3d
   15f38:	mvn	r4, #0
   15f3c:	str	r3, [r0]
   15f40:	b	15f04 <abort@plt+0x4d44>
   15f44:	bl	110dc <__errno_location@plt>
   15f48:	mov	r3, #95	; 0x5f
   15f4c:	mvn	r4, #0
   15f50:	str	r3, [r0]
   15f54:	b	15f04 <abort@plt+0x4d44>
   15f58:	andeq	r8, r1, r4, lsl r3
   15f5c:	push	{r4, r5, r6, r7, r8, lr}
   15f60:	mov	r5, r1
   15f64:	bl	10fd4 <fgetfilecon@plt>
   15f68:	subs	r4, r0, #0
   15f6c:	beq	15fb8 <abort@plt+0x4df8>
   15f70:	cmp	r4, #10
   15f74:	beq	15f80 <abort@plt+0x4dc0>
   15f78:	mov	r0, r4
   15f7c:	pop	{r4, r5, r6, r7, r8, pc}
   15f80:	ldr	r6, [r5]
   15f84:	ldr	r1, [pc, #64]	; 15fcc <abort@plt+0x4e0c>
   15f88:	mov	r0, r6
   15f8c:	bl	10f2c <strcmp@plt>
   15f90:	subs	r7, r0, #0
   15f94:	bne	15f78 <abort@plt+0x4db8>
   15f98:	mov	r0, r6
   15f9c:	bl	11178 <freecon@plt>
   15fa0:	str	r7, [r5]
   15fa4:	bl	110dc <__errno_location@plt>
   15fa8:	mov	r3, #61	; 0x3d
   15fac:	mvn	r4, #0
   15fb0:	str	r3, [r0]
   15fb4:	b	15f78 <abort@plt+0x4db8>
   15fb8:	bl	110dc <__errno_location@plt>
   15fbc:	mov	r3, #95	; 0x5f
   15fc0:	mvn	r4, #0
   15fc4:	str	r3, [r0]
   15fc8:	b	15f78 <abort@plt+0x4db8>
   15fcc:	andeq	r8, r1, r4, lsl r3
   15fd0:	push	{r4, r5, r6, lr}
   15fd4:	sub	sp, sp, #32
   15fd8:	cmp	r1, #0
   15fdc:	mov	r4, r0
   15fe0:	ldr	r5, [sp, #48]	; 0x30
   15fe4:	ldr	r6, [sp, #52]	; 0x34
   15fe8:	beq	16300 <abort@plt+0x5140>
   15fec:	stm	sp, {r2, r3}
   15ff0:	mov	r3, r1
   15ff4:	ldr	r2, [pc, #808]	; 16324 <abort@plt+0x5164>
   15ff8:	mov	r1, #1
   15ffc:	bl	11118 <__fprintf_chk@plt>
   16000:	mov	r2, #5
   16004:	ldr	r1, [pc, #796]	; 16328 <abort@plt+0x5168>
   16008:	mov	r0, #0
   1600c:	bl	10fb0 <dcgettext@plt>
   16010:	ldr	r3, [pc, #788]	; 1632c <abort@plt+0x516c>
   16014:	ldr	r2, [pc, #788]	; 16330 <abort@plt+0x5170>
   16018:	str	r3, [sp]
   1601c:	mov	r1, #1
   16020:	mov	r3, r0
   16024:	mov	r0, r4
   16028:	bl	11118 <__fprintf_chk@plt>
   1602c:	mov	r1, r4
   16030:	mov	r0, #10
   16034:	bl	10f98 <fputc_unlocked@plt>
   16038:	mov	r2, #5
   1603c:	ldr	r1, [pc, #752]	; 16334 <abort@plt+0x5174>
   16040:	mov	r0, #0
   16044:	bl	10fb0 <dcgettext@plt>
   16048:	mov	r1, #1
   1604c:	ldr	r3, [pc, #740]	; 16338 <abort@plt+0x5178>
   16050:	mov	r2, r0
   16054:	mov	r0, r4
   16058:	bl	11118 <__fprintf_chk@plt>
   1605c:	mov	r1, r4
   16060:	mov	r0, #10
   16064:	bl	10f98 <fputc_unlocked@plt>
   16068:	cmp	r6, #9
   1606c:	ldrls	pc, [pc, r6, lsl #2]
   16070:	b	16318 <abort@plt+0x5158>
   16074:	strdeq	r6, [r1], -r8
   16078:	andeq	r6, r1, r0, lsl #2
   1607c:	andeq	r6, r1, ip, lsr #2
   16080:	andeq	r6, r1, r0, ror #2
   16084:	muleq	r1, ip, r1
   16088:	ldrdeq	r6, [r1], -r8
   1608c:	andeq	r6, r1, r4, lsl r2
   16090:	andeq	r6, r1, r8, asr r2
   16094:	andeq	r6, r1, r8, lsr #5
   16098:	muleq	r1, ip, r0
   1609c:	ldr	r1, [pc, #664]	; 1633c <abort@plt+0x517c>
   160a0:	mov	r2, #5
   160a4:	mov	r0, #0
   160a8:	bl	10fb0 <dcgettext@plt>
   160ac:	ldr	ip, [r5, #32]
   160b0:	ldr	r1, [r5, #28]
   160b4:	ldr	r2, [r5, #24]
   160b8:	ldr	r3, [r5]
   160bc:	ldr	r6, [r5, #20]
   160c0:	str	ip, [sp, #28]
   160c4:	ldr	lr, [r5, #16]
   160c8:	str	r1, [sp, #24]
   160cc:	ldr	ip, [r5, #12]
   160d0:	str	r2, [sp, #20]
   160d4:	ldr	r1, [r5, #8]
   160d8:	ldr	r2, [r5, #4]
   160dc:	str	r6, [sp, #16]
   160e0:	stmib	sp, {r1, ip, lr}
   160e4:	mov	r1, #1
   160e8:	str	r2, [sp]
   160ec:	mov	r2, r0
   160f0:	mov	r0, r4
   160f4:	bl	11118 <__fprintf_chk@plt>
   160f8:	add	sp, sp, #32
   160fc:	pop	{r4, r5, r6, pc}
   16100:	mov	r2, #5
   16104:	ldr	r1, [pc, #564]	; 16340 <abort@plt+0x5180>
   16108:	mov	r0, #0
   1610c:	bl	10fb0 <dcgettext@plt>
   16110:	ldr	r3, [r5]
   16114:	mov	r1, #1
   16118:	mov	r2, r0
   1611c:	mov	r0, r4
   16120:	add	sp, sp, #32
   16124:	pop	{r4, r5, r6, lr}
   16128:	b	11118 <__fprintf_chk@plt>
   1612c:	mov	r2, #5
   16130:	ldr	r1, [pc, #524]	; 16344 <abort@plt+0x5184>
   16134:	mov	r0, #0
   16138:	bl	10fb0 <dcgettext@plt>
   1613c:	ldr	r2, [r5, #4]
   16140:	ldr	r3, [r5]
   16144:	mov	r1, #1
   16148:	str	r2, [sp, #48]	; 0x30
   1614c:	mov	r2, r0
   16150:	mov	r0, r4
   16154:	add	sp, sp, #32
   16158:	pop	{r4, r5, r6, lr}
   1615c:	b	11118 <__fprintf_chk@plt>
   16160:	mov	r2, #5
   16164:	ldr	r1, [pc, #476]	; 16348 <abort@plt+0x5188>
   16168:	mov	r0, #0
   1616c:	bl	10fb0 <dcgettext@plt>
   16170:	ldr	r1, [r5, #8]
   16174:	ldr	r2, [r5, #4]
   16178:	ldr	r3, [r5]
   1617c:	str	r1, [sp, #52]	; 0x34
   16180:	str	r2, [sp, #48]	; 0x30
   16184:	mov	r1, #1
   16188:	mov	r2, r0
   1618c:	mov	r0, r4
   16190:	add	sp, sp, #32
   16194:	pop	{r4, r5, r6, lr}
   16198:	b	11118 <__fprintf_chk@plt>
   1619c:	mov	r2, #5
   161a0:	ldr	r1, [pc, #420]	; 1634c <abort@plt+0x518c>
   161a4:	mov	r0, #0
   161a8:	bl	10fb0 <dcgettext@plt>
   161ac:	ldr	r1, [r5, #8]
   161b0:	ldr	ip, [r5, #12]
   161b4:	ldr	r2, [r5, #4]
   161b8:	ldr	r3, [r5]
   161bc:	stmib	sp, {r1, ip}
   161c0:	str	r2, [sp]
   161c4:	mov	r1, #1
   161c8:	mov	r2, r0
   161cc:	mov	r0, r4
   161d0:	bl	11118 <__fprintf_chk@plt>
   161d4:	b	160f8 <abort@plt+0x4f38>
   161d8:	mov	r2, #5
   161dc:	ldr	r1, [pc, #364]	; 16350 <abort@plt+0x5190>
   161e0:	mov	r0, #0
   161e4:	bl	10fb0 <dcgettext@plt>
   161e8:	add	r1, r5, #8
   161ec:	ldr	r2, [r5, #4]
   161f0:	ldm	r1, {r1, ip, lr}
   161f4:	ldr	r3, [r5]
   161f8:	str	r2, [sp]
   161fc:	stmib	sp, {r1, ip, lr}
   16200:	mov	r1, #1
   16204:	mov	r2, r0
   16208:	mov	r0, r4
   1620c:	bl	11118 <__fprintf_chk@plt>
   16210:	b	160f8 <abort@plt+0x4f38>
   16214:	mov	r2, #5
   16218:	ldr	r1, [pc, #308]	; 16354 <abort@plt+0x5194>
   1621c:	mov	r0, #0
   16220:	bl	10fb0 <dcgettext@plt>
   16224:	add	r1, r5, #8
   16228:	ldr	r2, [r5, #4]
   1622c:	ldm	r1, {r1, ip, lr}
   16230:	ldr	r6, [r5, #20]
   16234:	ldr	r3, [r5]
   16238:	stmib	sp, {r1, ip, lr}
   1623c:	mov	r1, #1
   16240:	str	r2, [sp]
   16244:	str	r6, [sp, #16]
   16248:	mov	r2, r0
   1624c:	mov	r0, r4
   16250:	bl	11118 <__fprintf_chk@plt>
   16254:	b	160f8 <abort@plt+0x4f38>
   16258:	mov	r2, #5
   1625c:	ldr	r1, [pc, #244]	; 16358 <abort@plt+0x5198>
   16260:	mov	r0, #0
   16264:	bl	10fb0 <dcgettext@plt>
   16268:	ldr	r2, [r5, #24]
   1626c:	ldr	r3, [r5]
   16270:	ldr	r6, [r5, #20]
   16274:	ldr	lr, [r5, #16]
   16278:	ldr	ip, [r5, #12]
   1627c:	str	r2, [sp, #20]
   16280:	ldr	r1, [r5, #8]
   16284:	ldr	r2, [r5, #4]
   16288:	str	r6, [sp, #16]
   1628c:	stmib	sp, {r1, ip, lr}
   16290:	mov	r1, #1
   16294:	str	r2, [sp]
   16298:	mov	r2, r0
   1629c:	mov	r0, r4
   162a0:	bl	11118 <__fprintf_chk@plt>
   162a4:	b	160f8 <abort@plt+0x4f38>
   162a8:	mov	r2, #5
   162ac:	ldr	r1, [pc, #168]	; 1635c <abort@plt+0x519c>
   162b0:	mov	r0, #0
   162b4:	bl	10fb0 <dcgettext@plt>
   162b8:	ldr	r1, [r5, #28]
   162bc:	ldr	r2, [r5, #24]
   162c0:	ldr	r3, [r5]
   162c4:	ldr	r6, [r5, #20]
   162c8:	ldr	lr, [r5, #16]
   162cc:	str	r1, [sp, #24]
   162d0:	ldr	ip, [r5, #12]
   162d4:	str	r2, [sp, #20]
   162d8:	ldr	r1, [r5, #8]
   162dc:	ldr	r2, [r5, #4]
   162e0:	str	r6, [sp, #16]
   162e4:	stmib	sp, {r1, ip, lr}
   162e8:	mov	r1, #1
   162ec:	str	r2, [sp]
   162f0:	mov	r2, r0
   162f4:	mov	r0, r4
   162f8:	bl	11118 <__fprintf_chk@plt>
   162fc:	b	160f8 <abort@plt+0x4f38>
   16300:	str	r3, [sp]
   16304:	mov	r1, #1
   16308:	mov	r3, r2
   1630c:	ldr	r2, [pc, #76]	; 16360 <abort@plt+0x51a0>
   16310:	bl	11118 <__fprintf_chk@plt>
   16314:	b	16000 <abort@plt+0x4e40>
   16318:	mov	r2, #5
   1631c:	ldr	r1, [pc, #64]	; 16364 <abort@plt+0x51a4>
   16320:	b	160a4 <abort@plt+0x4ee4>
   16324:	andeq	r8, r1, r0, lsr #6
   16328:	andeq	r8, r1, r4, lsr r3
   1632c:	andeq	r0, r0, r6, ror #15
   16330:	andeq	r8, r1, ip, lsl #12
   16334:	andeq	r8, r1, r8, lsr r3
   16338:	andeq	r8, r1, r4, ror #7
   1633c:	andeq	r8, r1, r4, lsl r5
   16340:	andeq	r8, r1, r8, lsl #8
   16344:	andeq	r8, r1, r8, lsl r4
   16348:	andeq	r8, r1, r0, lsr r4
   1634c:	andeq	r8, r1, ip, asr #8
   16350:	andeq	r8, r1, ip, ror #8
   16354:	muleq	r1, r0, r4
   16358:			; <UNDEFINED> instruction: 0x000184b8
   1635c:	andeq	r8, r1, r4, ror #9
   16360:	andeq	r8, r1, ip, lsr #6
   16364:	andeq	r8, r1, r8, asr #10
   16368:	push	{r4, r5, lr}
   1636c:	sub	sp, sp, #12
   16370:	ldr	r5, [sp, #24]
   16374:	ldr	ip, [r5]
   16378:	cmp	ip, #0
   1637c:	beq	16398 <abort@plt+0x51d8>
   16380:	mov	lr, r5
   16384:	mov	ip, #0
   16388:	ldr	r4, [lr, #4]!
   1638c:	add	ip, ip, #1
   16390:	cmp	r4, #0
   16394:	bne	16388 <abort@plt+0x51c8>
   16398:	stm	sp, {r5, ip}
   1639c:	bl	15fd0 <abort@plt+0x4e10>
   163a0:	add	sp, sp, #12
   163a4:	pop	{r4, r5, pc}
   163a8:	push	{r4, r5, lr}
   163ac:	sub	sp, sp, #76	; 0x4c
   163b0:	mov	r5, r0
   163b4:	ldr	ip, [sp, #88]	; 0x58
   163b8:	ldr	r0, [ip]
   163bc:	cmp	r0, #0
   163c0:	str	r0, [sp, #32]
   163c4:	beq	16798 <abort@plt+0x55d8>
   163c8:	ldr	r0, [ip, #4]
   163cc:	cmp	r0, #0
   163d0:	str	r0, [sp, #36]	; 0x24
   163d4:	beq	167a0 <abort@plt+0x55e0>
   163d8:	ldr	r0, [ip, #8]
   163dc:	cmp	r0, #0
   163e0:	str	r0, [sp, #40]	; 0x28
   163e4:	beq	167a8 <abort@plt+0x55e8>
   163e8:	ldr	r0, [ip, #12]
   163ec:	cmp	r0, #0
   163f0:	str	r0, [sp, #44]	; 0x2c
   163f4:	beq	167b0 <abort@plt+0x55f0>
   163f8:	ldr	r0, [ip, #16]
   163fc:	cmp	r0, #0
   16400:	str	r0, [sp, #48]	; 0x30
   16404:	beq	167b8 <abort@plt+0x55f8>
   16408:	ldr	r0, [ip, #20]
   1640c:	cmp	r0, #0
   16410:	str	r0, [sp, #52]	; 0x34
   16414:	beq	167c0 <abort@plt+0x5600>
   16418:	ldr	r0, [ip, #24]
   1641c:	cmp	r0, #0
   16420:	str	r0, [sp, #56]	; 0x38
   16424:	beq	167c8 <abort@plt+0x5608>
   16428:	ldr	r0, [ip, #28]
   1642c:	cmp	r0, #0
   16430:	str	r0, [sp, #60]	; 0x3c
   16434:	beq	167d0 <abort@plt+0x5610>
   16438:	ldr	r0, [ip, #32]
   1643c:	cmp	r0, #0
   16440:	str	r0, [sp, #64]	; 0x40
   16444:	beq	167d8 <abort@plt+0x5618>
   16448:	ldr	r0, [ip, #36]	; 0x24
   1644c:	cmp	r0, #0
   16450:	movne	r4, #10
   16454:	moveq	r4, #9
   16458:	cmp	r1, #0
   1645c:	beq	16770 <abort@plt+0x55b0>
   16460:	stm	sp, {r2, r3}
   16464:	mov	r0, r5
   16468:	mov	r3, r1
   1646c:	ldr	r2, [pc, #876]	; 167e0 <abort@plt+0x5620>
   16470:	mov	r1, #1
   16474:	bl	11118 <__fprintf_chk@plt>
   16478:	mov	r2, #5
   1647c:	ldr	r1, [pc, #864]	; 167e4 <abort@plt+0x5624>
   16480:	mov	r0, #0
   16484:	bl	10fb0 <dcgettext@plt>
   16488:	ldr	r3, [pc, #856]	; 167e8 <abort@plt+0x5628>
   1648c:	ldr	r2, [pc, #856]	; 167ec <abort@plt+0x562c>
   16490:	str	r3, [sp]
   16494:	mov	r1, #1
   16498:	mov	r3, r0
   1649c:	mov	r0, r5
   164a0:	bl	11118 <__fprintf_chk@plt>
   164a4:	mov	r1, r5
   164a8:	mov	r0, #10
   164ac:	bl	10f98 <fputc_unlocked@plt>
   164b0:	mov	r2, #5
   164b4:	ldr	r1, [pc, #820]	; 167f0 <abort@plt+0x5630>
   164b8:	mov	r0, #0
   164bc:	bl	10fb0 <dcgettext@plt>
   164c0:	mov	r1, #1
   164c4:	ldr	r3, [pc, #808]	; 167f4 <abort@plt+0x5634>
   164c8:	mov	r2, r0
   164cc:	mov	r0, r5
   164d0:	bl	11118 <__fprintf_chk@plt>
   164d4:	mov	r1, r5
   164d8:	mov	r0, #10
   164dc:	bl	10f98 <fputc_unlocked@plt>
   164e0:	cmp	r4, #9
   164e4:	ldrls	pc, [pc, r4, lsl #2]
   164e8:	b	1678c <abort@plt+0x55cc>
   164ec:	andeq	r6, r1, r0, ror r5
   164f0:	andeq	r6, r1, r8, ror r5
   164f4:	andeq	r6, r1, r4, lsr #11
   164f8:	ldrdeq	r6, [r1], -r8
   164fc:	andeq	r6, r1, r0, lsl r6
   16500:	andeq	r6, r1, ip, asr #12
   16504:	andeq	r6, r1, r8, lsl #13
   16508:	andeq	r6, r1, ip, asr #13
   1650c:	andeq	r6, r1, r8, lsl r7
   16510:	andeq	r6, r1, r4, lsl r5
   16514:	ldr	r1, [pc, #732]	; 167f8 <abort@plt+0x5638>
   16518:	mov	r2, #5
   1651c:	mov	r0, #0
   16520:	bl	10fb0 <dcgettext@plt>
   16524:	ldr	ip, [sp, #64]	; 0x40
   16528:	ldr	r1, [sp, #60]	; 0x3c
   1652c:	ldr	r2, [sp, #56]	; 0x38
   16530:	ldr	lr, [sp, #48]	; 0x30
   16534:	str	ip, [sp, #28]
   16538:	str	r1, [sp, #24]
   1653c:	ldr	ip, [sp, #44]	; 0x2c
   16540:	ldr	r1, [sp, #40]	; 0x28
   16544:	ldr	r4, [sp, #52]	; 0x34
   16548:	str	r2, [sp, #20]
   1654c:	ldr	r2, [sp, #36]	; 0x24
   16550:	stmib	sp, {r1, ip, lr}
   16554:	mov	r1, #1
   16558:	str	r2, [sp]
   1655c:	ldr	r3, [sp, #32]
   16560:	str	r4, [sp, #16]
   16564:	mov	r2, r0
   16568:	mov	r0, r5
   1656c:	bl	11118 <__fprintf_chk@plt>
   16570:	add	sp, sp, #76	; 0x4c
   16574:	pop	{r4, r5, pc}
   16578:	mov	r2, #5
   1657c:	ldr	r1, [pc, #632]	; 167fc <abort@plt+0x563c>
   16580:	mov	r0, #0
   16584:	bl	10fb0 <dcgettext@plt>
   16588:	ldr	r3, [sp, #32]
   1658c:	mov	r1, #1
   16590:	mov	r2, r0
   16594:	mov	r0, r5
   16598:	add	sp, sp, #76	; 0x4c
   1659c:	pop	{r4, r5, lr}
   165a0:	b	11118 <__fprintf_chk@plt>
   165a4:	mov	r2, #5
   165a8:	ldr	r1, [pc, #592]	; 16800 <abort@plt+0x5640>
   165ac:	mov	r0, #0
   165b0:	bl	10fb0 <dcgettext@plt>
   165b4:	ldr	r2, [sp, #36]	; 0x24
   165b8:	ldr	r3, [sp, #32]
   165bc:	str	r2, [sp, #88]	; 0x58
   165c0:	mov	r1, #1
   165c4:	mov	r2, r0
   165c8:	mov	r0, r5
   165cc:	add	sp, sp, #76	; 0x4c
   165d0:	pop	{r4, r5, lr}
   165d4:	b	11118 <__fprintf_chk@plt>
   165d8:	mov	r2, #5
   165dc:	ldr	r1, [pc, #544]	; 16804 <abort@plt+0x5644>
   165e0:	mov	r0, #0
   165e4:	bl	10fb0 <dcgettext@plt>
   165e8:	ldr	r1, [sp, #40]	; 0x28
   165ec:	ldr	r2, [sp, #36]	; 0x24
   165f0:	str	r1, [sp, #4]
   165f4:	str	r2, [sp]
   165f8:	ldr	r3, [sp, #32]
   165fc:	mov	r1, #1
   16600:	mov	r2, r0
   16604:	mov	r0, r5
   16608:	bl	11118 <__fprintf_chk@plt>
   1660c:	b	16570 <abort@plt+0x53b0>
   16610:	mov	r2, #5
   16614:	ldr	r1, [pc, #492]	; 16808 <abort@plt+0x5648>
   16618:	mov	r0, #0
   1661c:	bl	10fb0 <dcgettext@plt>
   16620:	ldr	r1, [sp, #40]	; 0x28
   16624:	ldr	ip, [sp, #44]	; 0x2c
   16628:	ldr	r2, [sp, #36]	; 0x24
   1662c:	ldr	r3, [sp, #32]
   16630:	stmib	sp, {r1, ip}
   16634:	str	r2, [sp]
   16638:	mov	r1, #1
   1663c:	mov	r2, r0
   16640:	mov	r0, r5
   16644:	bl	11118 <__fprintf_chk@plt>
   16648:	b	16570 <abort@plt+0x53b0>
   1664c:	mov	r2, #5
   16650:	ldr	r1, [pc, #436]	; 1680c <abort@plt+0x564c>
   16654:	mov	r0, #0
   16658:	bl	10fb0 <dcgettext@plt>
   1665c:	add	r1, sp, #40	; 0x28
   16660:	ldr	r2, [sp, #36]	; 0x24
   16664:	ldm	r1, {r1, ip, lr}
   16668:	ldr	r3, [sp, #32]
   1666c:	str	r2, [sp]
   16670:	stmib	sp, {r1, ip, lr}
   16674:	mov	r1, #1
   16678:	mov	r2, r0
   1667c:	mov	r0, r5
   16680:	bl	11118 <__fprintf_chk@plt>
   16684:	b	16570 <abort@plt+0x53b0>
   16688:	mov	r2, #5
   1668c:	ldr	r1, [pc, #380]	; 16810 <abort@plt+0x5650>
   16690:	mov	r0, #0
   16694:	bl	10fb0 <dcgettext@plt>
   16698:	add	r1, sp, #40	; 0x28
   1669c:	ldr	r2, [sp, #36]	; 0x24
   166a0:	ldm	r1, {r1, ip, lr}
   166a4:	ldr	r4, [sp, #52]	; 0x34
   166a8:	str	r2, [sp]
   166ac:	stmib	sp, {r1, ip, lr}
   166b0:	mov	r1, #1
   166b4:	ldr	r3, [sp, #32]
   166b8:	str	r4, [sp, #16]
   166bc:	mov	r2, r0
   166c0:	mov	r0, r5
   166c4:	bl	11118 <__fprintf_chk@plt>
   166c8:	b	16570 <abort@plt+0x53b0>
   166cc:	mov	r2, #5
   166d0:	ldr	r1, [pc, #316]	; 16814 <abort@plt+0x5654>
   166d4:	mov	r0, #0
   166d8:	bl	10fb0 <dcgettext@plt>
   166dc:	add	r1, sp, #40	; 0x28
   166e0:	ldr	r2, [sp, #56]	; 0x38
   166e4:	ldm	r1, {r1, ip, lr}
   166e8:	ldr	r4, [sp, #52]	; 0x34
   166ec:	str	r2, [sp, #20]
   166f0:	ldr	r2, [sp, #36]	; 0x24
   166f4:	stmib	sp, {r1, ip, lr}
   166f8:	mov	r1, #1
   166fc:	str	r2, [sp]
   16700:	ldr	r3, [sp, #32]
   16704:	str	r4, [sp, #16]
   16708:	mov	r2, r0
   1670c:	mov	r0, r5
   16710:	bl	11118 <__fprintf_chk@plt>
   16714:	b	16570 <abort@plt+0x53b0>
   16718:	mov	r2, #5
   1671c:	ldr	r1, [pc, #244]	; 16818 <abort@plt+0x5658>
   16720:	mov	r0, #0
   16724:	bl	10fb0 <dcgettext@plt>
   16728:	ldr	r1, [sp, #60]	; 0x3c
   1672c:	ldr	r2, [sp, #56]	; 0x38
   16730:	ldr	lr, [sp, #48]	; 0x30
   16734:	ldr	ip, [sp, #44]	; 0x2c
   16738:	str	r1, [sp, #24]
   1673c:	ldr	r1, [sp, #40]	; 0x28
   16740:	ldr	r4, [sp, #52]	; 0x34
   16744:	str	r2, [sp, #20]
   16748:	ldr	r2, [sp, #36]	; 0x24
   1674c:	stmib	sp, {r1, ip, lr}
   16750:	mov	r1, #1
   16754:	str	r2, [sp]
   16758:	ldr	r3, [sp, #32]
   1675c:	str	r4, [sp, #16]
   16760:	mov	r2, r0
   16764:	mov	r0, r5
   16768:	bl	11118 <__fprintf_chk@plt>
   1676c:	b	16570 <abort@plt+0x53b0>
   16770:	str	r3, [sp]
   16774:	mov	r1, #1
   16778:	mov	r3, r2
   1677c:	mov	r0, r5
   16780:	ldr	r2, [pc, #148]	; 1681c <abort@plt+0x565c>
   16784:	bl	11118 <__fprintf_chk@plt>
   16788:	b	16478 <abort@plt+0x52b8>
   1678c:	mov	r2, #5
   16790:	ldr	r1, [pc, #136]	; 16820 <abort@plt+0x5660>
   16794:	b	1651c <abort@plt+0x535c>
   16798:	mov	r4, r0
   1679c:	b	16458 <abort@plt+0x5298>
   167a0:	mov	r4, #1
   167a4:	b	16458 <abort@plt+0x5298>
   167a8:	mov	r4, #2
   167ac:	b	16458 <abort@plt+0x5298>
   167b0:	mov	r4, #3
   167b4:	b	16458 <abort@plt+0x5298>
   167b8:	mov	r4, #4
   167bc:	b	16458 <abort@plt+0x5298>
   167c0:	mov	r4, #5
   167c4:	b	16458 <abort@plt+0x5298>
   167c8:	mov	r4, #6
   167cc:	b	16458 <abort@plt+0x5298>
   167d0:	mov	r4, #7
   167d4:	b	16458 <abort@plt+0x5298>
   167d8:	mov	r4, #8
   167dc:	b	16458 <abort@plt+0x5298>
   167e0:	andeq	r8, r1, r0, lsr #6
   167e4:	andeq	r8, r1, r4, lsr r3
   167e8:	andeq	r0, r0, r6, ror #15
   167ec:	andeq	r8, r1, ip, lsl #12
   167f0:	andeq	r8, r1, r8, lsr r3
   167f4:	andeq	r8, r1, r4, ror #7
   167f8:	andeq	r8, r1, r4, lsl r5
   167fc:	andeq	r8, r1, r8, lsl #8
   16800:	andeq	r8, r1, r8, lsl r4
   16804:	andeq	r8, r1, r0, lsr r4
   16808:	andeq	r8, r1, ip, asr #8
   1680c:	andeq	r8, r1, ip, ror #8
   16810:	muleq	r1, r0, r4
   16814:			; <UNDEFINED> instruction: 0x000184b8
   16818:	andeq	r8, r1, r4, ror #9
   1681c:	andeq	r8, r1, ip, lsr #6
   16820:	andeq	r8, r1, r8, asr #10
   16824:	push	{r3}		; (str r3, [sp, #-4]!)
   16828:	push	{lr}		; (str lr, [sp, #-4]!)
   1682c:	sub	sp, sp, #56	; 0x38
   16830:	add	r3, sp, #64	; 0x40
   16834:	ldr	ip, [sp, #64]	; 0x40
   16838:	str	r3, [sp, #12]
   1683c:	cmp	ip, #0
   16840:	str	ip, [sp, #16]
   16844:	beq	168dc <abort@plt+0x571c>
   16848:	ldr	ip, [sp, #68]	; 0x44
   1684c:	cmp	ip, #0
   16850:	str	ip, [sp, #20]
   16854:	beq	168fc <abort@plt+0x573c>
   16858:	ldr	ip, [sp, #72]	; 0x48
   1685c:	cmp	ip, #0
   16860:	str	ip, [sp, #24]
   16864:	beq	16904 <abort@plt+0x5744>
   16868:	ldr	ip, [sp, #76]	; 0x4c
   1686c:	cmp	ip, #0
   16870:	str	ip, [sp, #28]
   16874:	beq	1690c <abort@plt+0x574c>
   16878:	ldr	ip, [sp, #80]	; 0x50
   1687c:	cmp	ip, #0
   16880:	str	ip, [sp, #32]
   16884:	beq	16914 <abort@plt+0x5754>
   16888:	ldr	ip, [sp, #84]	; 0x54
   1688c:	cmp	ip, #0
   16890:	str	ip, [sp, #36]	; 0x24
   16894:	beq	1691c <abort@plt+0x575c>
   16898:	ldr	ip, [sp, #88]	; 0x58
   1689c:	cmp	ip, #0
   168a0:	str	ip, [sp, #40]	; 0x28
   168a4:	beq	16924 <abort@plt+0x5764>
   168a8:	ldr	ip, [sp, #92]	; 0x5c
   168ac:	cmp	ip, #0
   168b0:	str	ip, [sp, #44]	; 0x2c
   168b4:	beq	1692c <abort@plt+0x576c>
   168b8:	ldr	ip, [sp, #96]	; 0x60
   168bc:	cmp	ip, #0
   168c0:	str	ip, [sp, #48]	; 0x30
   168c4:	beq	16934 <abort@plt+0x5774>
   168c8:	ldr	ip, [sp, #100]	; 0x64
   168cc:	cmp	ip, #0
   168d0:	str	ip, [sp, #52]	; 0x34
   168d4:	movne	ip, #10
   168d8:	moveq	ip, #9
   168dc:	add	r3, sp, #16
   168e0:	stm	sp, {r3, ip}
   168e4:	ldr	r3, [sp, #60]	; 0x3c
   168e8:	bl	15fd0 <abort@plt+0x4e10>
   168ec:	add	sp, sp, #56	; 0x38
   168f0:	pop	{lr}		; (ldr lr, [sp], #4)
   168f4:	add	sp, sp, #4
   168f8:	bx	lr
   168fc:	mov	ip, #1
   16900:	b	168dc <abort@plt+0x571c>
   16904:	mov	ip, #2
   16908:	b	168dc <abort@plt+0x571c>
   1690c:	mov	ip, #3
   16910:	b	168dc <abort@plt+0x571c>
   16914:	mov	ip, #4
   16918:	b	168dc <abort@plt+0x571c>
   1691c:	mov	ip, #5
   16920:	b	168dc <abort@plt+0x571c>
   16924:	mov	ip, #6
   16928:	b	168dc <abort@plt+0x571c>
   1692c:	mov	ip, #7
   16930:	b	168dc <abort@plt+0x571c>
   16934:	mov	ip, #8
   16938:	b	168dc <abort@plt+0x571c>
   1693c:	ldr	r3, [pc, #116]	; 169b8 <abort@plt+0x57f8>
   16940:	push	{r4, lr}
   16944:	mov	r0, #10
   16948:	ldr	r1, [r3]
   1694c:	bl	10f98 <fputc_unlocked@plt>
   16950:	mov	r2, #5
   16954:	ldr	r1, [pc, #96]	; 169bc <abort@plt+0x57fc>
   16958:	mov	r0, #0
   1695c:	bl	10fb0 <dcgettext@plt>
   16960:	ldr	r2, [pc, #88]	; 169c0 <abort@plt+0x5800>
   16964:	mov	r1, r0
   16968:	mov	r0, #1
   1696c:	bl	11100 <__printf_chk@plt>
   16970:	mov	r2, #5
   16974:	ldr	r1, [pc, #72]	; 169c4 <abort@plt+0x5804>
   16978:	mov	r0, #0
   1697c:	bl	10fb0 <dcgettext@plt>
   16980:	ldr	r3, [pc, #64]	; 169c8 <abort@plt+0x5808>
   16984:	ldr	r2, [pc, #64]	; 169cc <abort@plt+0x580c>
   16988:	mov	r1, r0
   1698c:	mov	r0, #1
   16990:	bl	11100 <__printf_chk@plt>
   16994:	mov	r2, #5
   16998:	ldr	r1, [pc, #48]	; 169d0 <abort@plt+0x5810>
   1699c:	mov	r0, #0
   169a0:	bl	10fb0 <dcgettext@plt>
   169a4:	ldr	r2, [pc, #40]	; 169d4 <abort@plt+0x5814>
   169a8:	pop	{r4, lr}
   169ac:	mov	r1, r0
   169b0:	mov	r0, #1
   169b4:	b	11100 <__printf_chk@plt>
   169b8:	andeq	r9, r2, ip, ror #2
   169bc:	andeq	r8, r1, r4, lsl #11
   169c0:	muleq	r1, r8, r5
   169c4:			; <UNDEFINED> instruction: 0x000185b0
   169c8:	andeq	r7, r1, r0, lsr lr
   169cc:	andeq	r7, r1, r8, asr lr
   169d0:	andeq	r8, r1, r4, asr #11
   169d4:	andeq	r8, r1, ip, ror #11
   169d8:	push	{r4, r5, r6, lr}
   169dc:	mov	r6, r0
   169e0:	mov	r5, r1
   169e4:	mov	r4, r2
   169e8:	bl	17460 <abort@plt+0x62a0>
   169ec:	cmp	r0, #0
   169f0:	popne	{r4, r5, r6, pc}
   169f4:	cmp	r6, #0
   169f8:	beq	16a08 <abort@plt+0x5848>
   169fc:	cmp	r5, #0
   16a00:	cmpne	r4, #0
   16a04:	popeq	{r4, r5, r6, pc}
   16a08:	bl	17054 <abort@plt+0x5e94>
   16a0c:	push	{r4, lr}
   16a10:	bl	170dc <abort@plt+0x5f1c>
   16a14:	cmp	r0, #0
   16a18:	popne	{r4, pc}
   16a1c:	bl	17054 <abort@plt+0x5e94>
   16a20:	push	{r4, lr}
   16a24:	bl	170dc <abort@plt+0x5f1c>
   16a28:	cmp	r0, #0
   16a2c:	popne	{r4, pc}
   16a30:	bl	17054 <abort@plt+0x5e94>
   16a34:	push	{r4, lr}
   16a38:	bl	170dc <abort@plt+0x5f1c>
   16a3c:	cmp	r0, #0
   16a40:	popne	{r4, pc}
   16a44:	bl	17054 <abort@plt+0x5e94>
   16a48:	push	{r4, r5, r6, lr}
   16a4c:	mov	r5, r0
   16a50:	mov	r4, r1
   16a54:	bl	17108 <abort@plt+0x5f48>
   16a58:	cmp	r0, #0
   16a5c:	popne	{r4, r5, r6, pc}
   16a60:	adds	r4, r4, #0
   16a64:	movne	r4, #1
   16a68:	cmp	r5, #0
   16a6c:	orreq	r4, r4, #1
   16a70:	cmp	r4, #0
   16a74:	popeq	{r4, r5, r6, pc}
   16a78:	bl	17054 <abort@plt+0x5e94>
   16a7c:	push	{r4, lr}
   16a80:	cmp	r1, #0
   16a84:	orreq	r1, r1, #1
   16a88:	bl	17108 <abort@plt+0x5f48>
   16a8c:	cmp	r0, #0
   16a90:	popne	{r4, pc}
   16a94:	bl	17054 <abort@plt+0x5e94>
   16a98:	push	{r4, r5, r6, lr}
   16a9c:	mov	r6, r0
   16aa0:	mov	r5, r1
   16aa4:	mov	r4, r2
   16aa8:	bl	17460 <abort@plt+0x62a0>
   16aac:	cmp	r0, #0
   16ab0:	popne	{r4, r5, r6, pc}
   16ab4:	cmp	r6, #0
   16ab8:	beq	16ac8 <abort@plt+0x5908>
   16abc:	cmp	r5, #0
   16ac0:	cmpne	r4, #0
   16ac4:	popeq	{r4, r5, r6, pc}
   16ac8:	bl	17054 <abort@plt+0x5e94>
   16acc:	cmp	r2, #0
   16ad0:	cmpne	r1, #0
   16ad4:	moveq	r2, #1
   16ad8:	moveq	r1, r2
   16adc:	push	{r4, lr}
   16ae0:	bl	17460 <abort@plt+0x62a0>
   16ae4:	cmp	r0, #0
   16ae8:	popne	{r4, pc}
   16aec:	bl	17054 <abort@plt+0x5e94>
   16af0:	push	{r4, lr}
   16af4:	mov	r2, r1
   16af8:	mov	r1, r0
   16afc:	mov	r0, #0
   16b00:	bl	17460 <abort@plt+0x62a0>
   16b04:	cmp	r0, #0
   16b08:	popne	{r4, pc}
   16b0c:	bl	17054 <abort@plt+0x5e94>
   16b10:	cmp	r1, #0
   16b14:	cmpne	r0, #0
   16b18:	moveq	r2, #1
   16b1c:	movne	r2, r1
   16b20:	moveq	r1, r2
   16b24:	movne	r1, r0
   16b28:	push	{r4, lr}
   16b2c:	mov	r0, #0
   16b30:	bl	17460 <abort@plt+0x62a0>
   16b34:	cmp	r0, #0
   16b38:	popne	{r4, pc}
   16b3c:	bl	17054 <abort@plt+0x5e94>
   16b40:	cmp	r0, #0
   16b44:	push	{r4, r5, r6, lr}
   16b48:	mov	r5, r1
   16b4c:	ldr	r4, [r1]
   16b50:	beq	16b8c <abort@plt+0x59cc>
   16b54:	lsr	r2, r4, #1
   16b58:	add	r3, r2, #1
   16b5c:	mvn	r3, r3
   16b60:	cmp	r4, r3
   16b64:	bhi	16ba8 <abort@plt+0x59e8>
   16b68:	add	r4, r4, #1
   16b6c:	add	r4, r4, r2
   16b70:	mov	r1, r4
   16b74:	mov	r2, #1
   16b78:	bl	17460 <abort@plt+0x62a0>
   16b7c:	cmp	r0, #0
   16b80:	beq	16bac <abort@plt+0x59ec>
   16b84:	str	r4, [r5]
   16b88:	pop	{r4, r5, r6, pc}
   16b8c:	cmp	r4, #0
   16b90:	moveq	r4, #64	; 0x40
   16b94:	mov	r1, r4
   16b98:	mov	r2, #1
   16b9c:	bl	17460 <abort@plt+0x62a0>
   16ba0:	cmp	r0, #0
   16ba4:	bne	16b84 <abort@plt+0x59c4>
   16ba8:	bl	17054 <abort@plt+0x5e94>
   16bac:	cmp	r4, #0
   16bb0:	bne	16ba8 <abort@plt+0x59e8>
   16bb4:	str	r4, [r5]
   16bb8:	pop	{r4, r5, r6, pc}
   16bbc:	cmp	r0, #0
   16bc0:	push	{r4, r5, r6, lr}
   16bc4:	mov	r5, r1
   16bc8:	ldr	r4, [r1]
   16bcc:	mov	r6, r2
   16bd0:	beq	16c14 <abort@plt+0x5a54>
   16bd4:	lsr	r1, r4, #1
   16bd8:	add	r3, r1, #1
   16bdc:	mvn	r3, r3
   16be0:	cmp	r4, r3
   16be4:	bhi	16c4c <abort@plt+0x5a8c>
   16be8:	add	r4, r4, #1
   16bec:	add	r4, r4, r1
   16bf0:	mov	r1, r4
   16bf4:	bl	17460 <abort@plt+0x62a0>
   16bf8:	cmp	r0, #0
   16bfc:	bne	16c0c <abort@plt+0x5a4c>
   16c00:	cmp	r4, #0
   16c04:	cmpne	r6, #0
   16c08:	bne	16c4c <abort@plt+0x5a8c>
   16c0c:	str	r4, [r5]
   16c10:	pop	{r4, r5, r6, pc}
   16c14:	cmp	r4, #0
   16c18:	bne	16c34 <abort@plt+0x5a74>
   16c1c:	mov	r1, r2
   16c20:	mov	r0, #64	; 0x40
   16c24:	bl	175a0 <abort@plt+0x63e0>
   16c28:	cmp	r0, #0
   16c2c:	movne	r4, r0
   16c30:	addeq	r4, r0, #1
   16c34:	mov	r2, r6
   16c38:	mov	r1, r4
   16c3c:	mov	r0, #0
   16c40:	bl	17460 <abort@plt+0x62a0>
   16c44:	cmp	r0, #0
   16c48:	bne	16c0c <abort@plt+0x5a4c>
   16c4c:	bl	17054 <abort@plt+0x5e94>
   16c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c54:	sub	sp, sp, #12
   16c58:	ldr	r6, [r1]
   16c5c:	mov	r8, r1
   16c60:	mov	r9, r0
   16c64:	asrs	r4, r6, #1
   16c68:	mov	sl, r2
   16c6c:	mov	fp, r3
   16c70:	ldr	r7, [sp, #48]	; 0x30
   16c74:	bmi	16df0 <abort@plt+0x5c30>
   16c78:	mvn	r1, #-2147483648	; 0x80000000
   16c7c:	sub	r1, r1, r4
   16c80:	cmp	r6, r1
   16c84:	movle	r1, #0
   16c88:	movgt	r1, #1
   16c8c:	mvn	r3, fp
   16c90:	cmp	r1, #0
   16c94:	addeq	r4, r4, r6
   16c98:	mvnne	r4, #-2147483648	; 0x80000000
   16c9c:	lsr	r3, r3, #31
   16ca0:	cmp	fp, r4
   16ca4:	movge	r2, #0
   16ca8:	andlt	r2, r3, #1
   16cac:	cmp	r2, #0
   16cb0:	beq	16da0 <abort@plt+0x5be0>
   16cb4:	cmp	r7, #0
   16cb8:	blt	16e88 <abort@plt+0x5cc8>
   16cbc:	bne	16e80 <abort@plt+0x5cc0>
   16cc0:	mov	r5, #64	; 0x40
   16cc4:	mov	r1, r7
   16cc8:	mov	r0, r5
   16ccc:	str	r3, [sp, #4]
   16cd0:	bl	177ac <abort@plt+0x65ec>
   16cd4:	mov	r1, r7
   16cd8:	mov	r4, r0
   16cdc:	mov	r0, r5
   16ce0:	bl	179cc <abort@plt+0x680c>
   16ce4:	ldr	r3, [sp, #4]
   16ce8:	sub	r5, r5, r1
   16cec:	cmp	r9, #0
   16cf0:	sub	r2, r4, r6
   16cf4:	streq	r9, [r8]
   16cf8:	cmp	r2, sl
   16cfc:	bge	16d80 <abort@plt+0x5bc0>
   16d00:	cmp	sl, #0
   16d04:	blt	16e20 <abort@plt+0x5c60>
   16d08:	cmp	r6, #0
   16d0c:	blt	16d2c <abort@plt+0x5b6c>
   16d10:	mvn	r2, #-2147483648	; 0x80000000
   16d14:	sub	r2, r2, sl
   16d18:	cmp	r6, r2
   16d1c:	movle	r2, #0
   16d20:	movgt	r2, #1
   16d24:	cmp	r2, #0
   16d28:	bne	16e1c <abort@plt+0x5c5c>
   16d2c:	add	r6, r6, sl
   16d30:	cmp	fp, r6
   16d34:	movge	r3, #0
   16d38:	andlt	r3, r3, #1
   16d3c:	cmp	r3, #0
   16d40:	mov	r4, r6
   16d44:	bne	16e1c <abort@plt+0x5c5c>
   16d48:	cmp	r7, #0
   16d4c:	blt	16e34 <abort@plt+0x5c74>
   16d50:	beq	16d7c <abort@plt+0x5bbc>
   16d54:	cmp	r6, #0
   16d58:	blt	16ed8 <abort@plt+0x5d18>
   16d5c:	mov	r1, r7
   16d60:	mvn	r0, #-2147483648	; 0x80000000
   16d64:	bl	177ac <abort@plt+0x65ec>
   16d68:	cmp	r6, r0
   16d6c:	movle	r0, #0
   16d70:	movgt	r0, #1
   16d74:	cmp	r0, #0
   16d78:	bne	16e1c <abort@plt+0x5c5c>
   16d7c:	mul	r5, r6, r7
   16d80:	mov	r1, r5
   16d84:	mov	r0, r9
   16d88:	bl	17108 <abort@plt+0x5f48>
   16d8c:	cmp	r0, #0
   16d90:	beq	16e04 <abort@plt+0x5c44>
   16d94:	str	r4, [r8]
   16d98:	add	sp, sp, #12
   16d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16da0:	cmp	r7, #0
   16da4:	blt	16e60 <abort@plt+0x5ca0>
   16da8:	beq	16cc0 <abort@plt+0x5b00>
   16dac:	cmp	r4, #0
   16db0:	blt	16e90 <abort@plt+0x5cd0>
   16db4:	mov	r1, r7
   16db8:	mvn	r0, #-2147483648	; 0x80000000
   16dbc:	str	r3, [sp, #4]
   16dc0:	bl	177ac <abort@plt+0x65ec>
   16dc4:	ldr	r3, [sp, #4]
   16dc8:	cmp	r0, r4
   16dcc:	movge	r0, #0
   16dd0:	movlt	r0, #1
   16dd4:	cmp	r0, #0
   16dd8:	mvnne	r5, #-2147483648	; 0x80000000
   16ddc:	bne	16cc4 <abort@plt+0x5b04>
   16de0:	mul	r5, r7, r4
   16de4:	cmp	r5, #63	; 0x3f
   16de8:	bgt	16cec <abort@plt+0x5b2c>
   16dec:	b	16cc0 <abort@plt+0x5b00>
   16df0:	rsb	r1, r4, #-2147483648	; 0x80000000
   16df4:	cmp	r6, r1
   16df8:	movge	r1, #0
   16dfc:	movlt	r1, #1
   16e00:	b	16c8c <abort@plt+0x5acc>
   16e04:	adds	r5, r5, #0
   16e08:	movne	r5, #1
   16e0c:	cmp	r9, #0
   16e10:	orreq	r5, r5, #1
   16e14:	cmp	r5, #0
   16e18:	beq	16d94 <abort@plt+0x5bd4>
   16e1c:	bl	17054 <abort@plt+0x5e94>
   16e20:	rsb	r2, sl, #-2147483648	; 0x80000000
   16e24:	cmp	r6, r2
   16e28:	movge	r2, #0
   16e2c:	movlt	r2, #1
   16e30:	b	16d24 <abort@plt+0x5b64>
   16e34:	cmp	r6, #0
   16e38:	blt	16ebc <abort@plt+0x5cfc>
   16e3c:	cmn	r7, #1
   16e40:	beq	16d7c <abort@plt+0x5bbc>
   16e44:	mov	r1, r7
   16e48:	mov	r0, #-2147483648	; 0x80000000
   16e4c:	bl	177ac <abort@plt+0x65ec>
   16e50:	cmp	r6, r0
   16e54:	movle	r0, #0
   16e58:	movgt	r0, #1
   16e5c:	b	16d74 <abort@plt+0x5bb4>
   16e60:	cmp	r4, #0
   16e64:	blt	16efc <abort@plt+0x5d3c>
   16e68:	cmn	r7, #1
   16e6c:	beq	16de0 <abort@plt+0x5c20>
   16e70:	str	r3, [sp, #4]
   16e74:	mov	r1, r7
   16e78:	mov	r0, #-2147483648	; 0x80000000
   16e7c:	b	16dc0 <abort@plt+0x5c00>
   16e80:	mov	r4, fp
   16e84:	b	16db4 <abort@plt+0x5bf4>
   16e88:	mov	r4, fp
   16e8c:	b	16e68 <abort@plt+0x5ca8>
   16e90:	cmn	r4, #1
   16e94:	beq	16de0 <abort@plt+0x5c20>
   16e98:	mov	r1, r4
   16e9c:	mov	r0, #-2147483648	; 0x80000000
   16ea0:	str	r3, [sp, #4]
   16ea4:	bl	177ac <abort@plt+0x65ec>
   16ea8:	ldr	r3, [sp, #4]
   16eac:	cmp	r7, r0
   16eb0:	movle	r0, #0
   16eb4:	movgt	r0, #1
   16eb8:	b	16dd4 <abort@plt+0x5c14>
   16ebc:	mov	r1, r7
   16ec0:	mvn	r0, #-2147483648	; 0x80000000
   16ec4:	bl	177ac <abort@plt+0x65ec>
   16ec8:	cmp	r6, r0
   16ecc:	movge	r0, #0
   16ed0:	movlt	r0, #1
   16ed4:	b	16d74 <abort@plt+0x5bb4>
   16ed8:	cmn	r6, #1
   16edc:	beq	16d7c <abort@plt+0x5bbc>
   16ee0:	mov	r1, r6
   16ee4:	mov	r0, #-2147483648	; 0x80000000
   16ee8:	bl	177ac <abort@plt+0x65ec>
   16eec:	cmp	r7, r0
   16ef0:	movle	r0, #0
   16ef4:	movgt	r0, #1
   16ef8:	b	16d74 <abort@plt+0x5bb4>
   16efc:	mov	r1, r7
   16f00:	mvn	r0, #-2147483648	; 0x80000000
   16f04:	str	r3, [sp, #4]
   16f08:	bl	177ac <abort@plt+0x65ec>
   16f0c:	ldr	r3, [sp, #4]
   16f10:	cmp	r0, r4
   16f14:	movle	r0, #0
   16f18:	movgt	r0, #1
   16f1c:	b	16dd4 <abort@plt+0x5c14>
   16f20:	push	{r4, lr}
   16f24:	mov	r1, #1
   16f28:	bl	17094 <abort@plt+0x5ed4>
   16f2c:	cmp	r0, #0
   16f30:	popne	{r4, pc}
   16f34:	bl	17054 <abort@plt+0x5e94>
   16f38:	push	{r4, lr}
   16f3c:	mov	r1, #1
   16f40:	bl	17094 <abort@plt+0x5ed4>
   16f44:	cmp	r0, #0
   16f48:	popne	{r4, pc}
   16f4c:	bl	17054 <abort@plt+0x5e94>
   16f50:	push	{r4, lr}
   16f54:	bl	17094 <abort@plt+0x5ed4>
   16f58:	cmp	r0, #0
   16f5c:	popne	{r4, pc}
   16f60:	bl	17054 <abort@plt+0x5e94>
   16f64:	push	{r4, lr}
   16f68:	bl	17094 <abort@plt+0x5ed4>
   16f6c:	cmp	r0, #0
   16f70:	popne	{r4, pc}
   16f74:	bl	17054 <abort@plt+0x5e94>
   16f78:	push	{r4, r5, r6, lr}
   16f7c:	mov	r6, r0
   16f80:	mov	r0, r1
   16f84:	mov	r4, r1
   16f88:	bl	170dc <abort@plt+0x5f1c>
   16f8c:	subs	r5, r0, #0
   16f90:	beq	16fa8 <abort@plt+0x5de8>
   16f94:	mov	r2, r4
   16f98:	mov	r1, r6
   16f9c:	bl	10f5c <memcpy@plt>
   16fa0:	mov	r0, r5
   16fa4:	pop	{r4, r5, r6, pc}
   16fa8:	bl	17054 <abort@plt+0x5e94>
   16fac:	push	{r4, r5, r6, lr}
   16fb0:	mov	r6, r0
   16fb4:	mov	r0, r1
   16fb8:	mov	r4, r1
   16fbc:	bl	170dc <abort@plt+0x5f1c>
   16fc0:	subs	r5, r0, #0
   16fc4:	beq	16fdc <abort@plt+0x5e1c>
   16fc8:	mov	r2, r4
   16fcc:	mov	r1, r6
   16fd0:	bl	10f5c <memcpy@plt>
   16fd4:	mov	r0, r5
   16fd8:	pop	{r4, r5, r6, pc}
   16fdc:	bl	17054 <abort@plt+0x5e94>
   16fe0:	push	{r4, r5, r6, lr}
   16fe4:	mov	r6, r0
   16fe8:	add	r0, r1, #1
   16fec:	mov	r4, r1
   16ff0:	bl	170dc <abort@plt+0x5f1c>
   16ff4:	subs	r5, r0, #0
   16ff8:	beq	17018 <abort@plt+0x5e58>
   16ffc:	mov	r3, #0
   17000:	mov	r1, r6
   17004:	strb	r3, [r5, r4]
   17008:	mov	r2, r4
   1700c:	bl	10f5c <memcpy@plt>
   17010:	mov	r0, r5
   17014:	pop	{r4, r5, r6, pc}
   17018:	bl	17054 <abort@plt+0x5e94>
   1701c:	push	{r4, r5, r6, lr}
   17020:	mov	r6, r0
   17024:	bl	110d0 <strlen@plt>
   17028:	add	r4, r0, #1
   1702c:	mov	r0, r4
   17030:	bl	170dc <abort@plt+0x5f1c>
   17034:	subs	r5, r0, #0
   17038:	beq	17050 <abort@plt+0x5e90>
   1703c:	mov	r2, r4
   17040:	mov	r1, r6
   17044:	bl	10f5c <memcpy@plt>
   17048:	mov	r0, r5
   1704c:	pop	{r4, r5, r6, pc}
   17050:	bl	17054 <abort@plt+0x5e94>
   17054:	ldr	r3, [pc, #44]	; 17088 <abort@plt+0x5ec8>
   17058:	push	{r4, lr}
   1705c:	mov	r2, #5
   17060:	ldr	r1, [pc, #36]	; 1708c <abort@plt+0x5ecc>
   17064:	mov	r0, #0
   17068:	ldr	r4, [r3]
   1706c:	bl	10fb0 <dcgettext@plt>
   17070:	ldr	r2, [pc, #24]	; 17090 <abort@plt+0x5ed0>
   17074:	mov	r1, #0
   17078:	mov	r3, r0
   1707c:	mov	r0, r4
   17080:	bl	11040 <error@plt>
   17084:	bl	111c0 <abort@plt>
   17088:	andeq	r9, r2, r0, lsl r1
   1708c:	andeq	r8, r1, ip, lsr r6
   17090:	strdeq	r8, [r1], -r4
   17094:	cmp	r1, #0
   17098:	cmpne	r0, #0
   1709c:	moveq	r1, #1
   170a0:	moveq	r0, r1
   170a4:	umull	r2, r3, r0, r1
   170a8:	adds	r3, r3, #0
   170ac:	movne	r3, #1
   170b0:	cmp	r2, #0
   170b4:	blt	170c4 <abort@plt+0x5f04>
   170b8:	cmp	r3, #0
   170bc:	bne	170c4 <abort@plt+0x5f04>
   170c0:	b	10ef0 <calloc@plt>
   170c4:	push	{r4, lr}
   170c8:	bl	110dc <__errno_location@plt>
   170cc:	mov	r3, #12
   170d0:	str	r3, [r0]
   170d4:	mov	r0, #0
   170d8:	pop	{r4, pc}
   170dc:	cmp	r0, #0
   170e0:	moveq	r0, #1
   170e4:	cmp	r0, #0
   170e8:	blt	170f0 <abort@plt+0x5f30>
   170ec:	b	11064 <malloc@plt>
   170f0:	push	{r4, lr}
   170f4:	bl	110dc <__errno_location@plt>
   170f8:	mov	r3, #12
   170fc:	str	r3, [r0]
   17100:	mov	r0, #0
   17104:	pop	{r4, pc}
   17108:	cmp	r0, #0
   1710c:	beq	17130 <abort@plt+0x5f70>
   17110:	cmp	r1, #0
   17114:	push	{lr}		; (str lr, [sp, #-4]!)
   17118:	sub	sp, sp, #12
   1711c:	beq	17138 <abort@plt+0x5f78>
   17120:	blt	17150 <abort@plt+0x5f90>
   17124:	add	sp, sp, #12
   17128:	pop	{lr}		; (ldr lr, [sp], #4)
   1712c:	b	10fc8 <realloc@plt>
   17130:	mov	r0, r1
   17134:	b	170dc <abort@plt+0x5f1c>
   17138:	str	r1, [sp, #4]
   1713c:	bl	172e0 <abort@plt+0x6120>
   17140:	ldr	r3, [sp, #4]
   17144:	mov	r0, r3
   17148:	add	sp, sp, #12
   1714c:	pop	{pc}		; (ldr pc, [sp], #4)
   17150:	bl	110dc <__errno_location@plt>
   17154:	mov	r2, #12
   17158:	mov	r3, #0
   1715c:	str	r2, [r0]
   17160:	b	17144 <abort@plt+0x5f84>
   17164:	push	{r4, r5, r6, lr}
   17168:	mov	r4, r0
   1716c:	bl	11028 <__fpending@plt>
   17170:	ldr	r5, [r4]
   17174:	and	r5, r5, #32
   17178:	mov	r6, r0
   1717c:	mov	r0, r4
   17180:	bl	171e0 <abort@plt+0x6020>
   17184:	cmp	r5, #0
   17188:	mov	r4, r0
   1718c:	bne	171ac <abort@plt+0x5fec>
   17190:	cmp	r0, #0
   17194:	beq	171a4 <abort@plt+0x5fe4>
   17198:	cmp	r6, #0
   1719c:	beq	171c8 <abort@plt+0x6008>
   171a0:	mvn	r4, #0
   171a4:	mov	r0, r4
   171a8:	pop	{r4, r5, r6, pc}
   171ac:	cmp	r0, #0
   171b0:	bne	171a0 <abort@plt+0x5fe0>
   171b4:	bl	110dc <__errno_location@plt>
   171b8:	str	r4, [r0]
   171bc:	mvn	r4, #0
   171c0:	mov	r0, r4
   171c4:	pop	{r4, r5, r6, pc}
   171c8:	bl	110dc <__errno_location@plt>
   171cc:	ldr	r4, [r0]
   171d0:	subs	r4, r4, #9
   171d4:	mvnne	r4, #0
   171d8:	mov	r0, r4
   171dc:	pop	{r4, r5, r6, pc}
   171e0:	push	{r4, r5, lr}
   171e4:	sub	sp, sp, #12
   171e8:	mov	r4, r0
   171ec:	bl	1110c <fileno@plt>
   171f0:	cmp	r0, #0
   171f4:	mov	r0, r4
   171f8:	blt	17274 <abort@plt+0x60b4>
   171fc:	bl	1107c <__freading@plt>
   17200:	cmp	r0, #0
   17204:	bne	17240 <abort@plt+0x6080>
   17208:	mov	r0, r4
   1720c:	bl	17280 <abort@plt+0x60c0>
   17210:	cmp	r0, #0
   17214:	beq	17270 <abort@plt+0x60b0>
   17218:	bl	110dc <__errno_location@plt>
   1721c:	mov	r5, r0
   17220:	mov	r0, r4
   17224:	ldr	r4, [r5]
   17228:	bl	11124 <fclose@plt>
   1722c:	cmp	r4, #0
   17230:	mvnne	r0, #0
   17234:	strne	r4, [r5]
   17238:	add	sp, sp, #12
   1723c:	pop	{r4, r5, pc}
   17240:	mov	r0, r4
   17244:	bl	1110c <fileno@plt>
   17248:	mov	r3, #1
   1724c:	str	r3, [sp]
   17250:	mov	r2, #0
   17254:	mov	r3, #0
   17258:	bl	11004 <lseek64@plt>
   1725c:	mvn	r3, #0
   17260:	mvn	r2, #0
   17264:	cmp	r1, r3
   17268:	cmpeq	r0, r2
   1726c:	bne	17208 <abort@plt+0x6048>
   17270:	mov	r0, r4
   17274:	add	sp, sp, #12
   17278:	pop	{r4, r5, lr}
   1727c:	b	11124 <fclose@plt>
   17280:	push	{r4, lr}
   17284:	subs	r4, r0, #0
   17288:	sub	sp, sp, #8
   1728c:	beq	172a8 <abort@plt+0x60e8>
   17290:	bl	1107c <__freading@plt>
   17294:	cmp	r0, #0
   17298:	beq	172a8 <abort@plt+0x60e8>
   1729c:	ldr	r3, [r4]
   172a0:	tst	r3, #256	; 0x100
   172a4:	bne	172b8 <abort@plt+0x60f8>
   172a8:	mov	r0, r4
   172ac:	add	sp, sp, #8
   172b0:	pop	{r4, lr}
   172b4:	b	10f38 <fflush@plt>
   172b8:	mov	r3, #1
   172bc:	str	r3, [sp]
   172c0:	mov	r2, #0
   172c4:	mov	r3, #0
   172c8:	mov	r0, r4
   172cc:	bl	17338 <abort@plt+0x6178>
   172d0:	mov	r0, r4
   172d4:	add	sp, sp, #8
   172d8:	pop	{r4, lr}
   172dc:	b	10f38 <fflush@plt>
   172e0:	push	{r4, r5, lr}
   172e4:	sub	sp, sp, #12
   172e8:	mov	r5, r0
   172ec:	bl	110dc <__errno_location@plt>
   172f0:	mov	r2, #0
   172f4:	mov	r4, r0
   172f8:	ldr	r3, [r0]
   172fc:	str	r2, [r4]
   17300:	mov	r0, r5
   17304:	str	r3, [sp]
   17308:	str	r3, [sp, #4]
   1730c:	bl	10f44 <free@plt>
   17310:	ldr	r3, [r4]
   17314:	add	r2, sp, #8
   17318:	cmp	r3, #0
   1731c:	moveq	r3, #4
   17320:	movne	r3, #0
   17324:	add	r3, r2, r3
   17328:	ldr	r3, [r3, #-8]
   1732c:	str	r3, [r4]
   17330:	add	sp, sp, #12
   17334:	pop	{r4, r5, pc}
   17338:	push	{r4, r5, r6, r7, r8, lr}
   1733c:	sub	sp, sp, #8
   17340:	ldmib	r0, {ip, lr}
   17344:	mov	r4, r0
   17348:	ldr	r5, [sp, #32]
   1734c:	cmp	lr, ip
   17350:	beq	17368 <abort@plt+0x61a8>
   17354:	str	r5, [sp, #32]
   17358:	mov	r0, r4
   1735c:	add	sp, sp, #8
   17360:	pop	{r4, r5, r6, r7, r8, lr}
   17364:	b	11130 <fseeko64@plt>
   17368:	ldr	lr, [r0, #20]
   1736c:	ldr	ip, [r0, #16]
   17370:	cmp	lr, ip
   17374:	bne	17354 <abort@plt+0x6194>
   17378:	ldr	r8, [r0, #36]	; 0x24
   1737c:	cmp	r8, #0
   17380:	bne	17354 <abort@plt+0x6194>
   17384:	mov	r6, r2
   17388:	mov	r7, r3
   1738c:	bl	1110c <fileno@plt>
   17390:	mov	r2, r6
   17394:	mov	r3, r7
   17398:	str	r5, [sp]
   1739c:	bl	11004 <lseek64@plt>
   173a0:	mvn	r3, #0
   173a4:	mvn	r2, #0
   173a8:	cmp	r1, r3
   173ac:	cmpeq	r0, r2
   173b0:	beq	173d0 <abort@plt+0x6210>
   173b4:	ldr	r3, [r4]
   173b8:	strd	r0, [r4, #80]	; 0x50
   173bc:	mov	r0, r8
   173c0:	bic	r3, r3, #16
   173c4:	str	r3, [r4]
   173c8:	add	sp, sp, #8
   173cc:	pop	{r4, r5, r6, r7, r8, pc}
   173d0:	mvn	r0, #0
   173d4:	b	173c8 <abort@plt+0x6208>
   173d8:	push	{r4, lr}
   173dc:	mov	r0, #14
   173e0:	bl	11160 <nl_langinfo@plt>
   173e4:	cmp	r0, #0
   173e8:	beq	17400 <abort@plt+0x6240>
   173ec:	ldrb	r2, [r0]
   173f0:	ldr	r3, [pc, #16]	; 17408 <abort@plt+0x6248>
   173f4:	cmp	r2, #0
   173f8:	moveq	r0, r3
   173fc:	pop	{r4, pc}
   17400:	ldr	r0, [pc]	; 17408 <abort@plt+0x6248>
   17404:	pop	{r4, pc}
   17408:	andeq	r8, r1, r0, asr r6
   1740c:	push	{r4, r5, r6, r7, lr}
   17410:	subs	r6, r0, #0
   17414:	sub	sp, sp, #12
   17418:	addeq	r6, sp, #4
   1741c:	mov	r0, r6
   17420:	mov	r5, r2
   17424:	mov	r7, r1
   17428:	bl	11034 <mbrtowc@plt>
   1742c:	cmp	r5, #0
   17430:	cmnne	r0, #3
   17434:	mov	r4, r0
   17438:	bls	17454 <abort@plt+0x6294>
   1743c:	mov	r0, #0
   17440:	bl	174ac <abort@plt+0x62ec>
   17444:	cmp	r0, #0
   17448:	moveq	r4, #1
   1744c:	ldrbeq	r3, [r7]
   17450:	streq	r3, [r6]
   17454:	mov	r0, r4
   17458:	add	sp, sp, #12
   1745c:	pop	{r4, r5, r6, r7, pc}
   17460:	push	{r4, r5, r6, lr}
   17464:	subs	r4, r2, #0
   17468:	mov	r6, r0
   1746c:	mov	r5, r1
   17470:	beq	1749c <abort@plt+0x62dc>
   17474:	mov	r1, r4
   17478:	mvn	r0, #0
   1747c:	bl	175a0 <abort@plt+0x63e0>
   17480:	cmp	r0, r5
   17484:	bcs	1749c <abort@plt+0x62dc>
   17488:	bl	110dc <__errno_location@plt>
   1748c:	mov	r3, #12
   17490:	str	r3, [r0]
   17494:	mov	r0, #0
   17498:	pop	{r4, r5, r6, pc}
   1749c:	mul	r1, r5, r4
   174a0:	mov	r0, r6
   174a4:	pop	{r4, r5, r6, lr}
   174a8:	b	17108 <abort@plt+0x5f48>
   174ac:	push	{lr}		; (str lr, [sp, #-4]!)
   174b0:	sub	sp, sp, #268	; 0x10c
   174b4:	add	r1, sp, #4
   174b8:	ldr	r2, [pc, #60]	; 174fc <abort@plt+0x633c>
   174bc:	bl	17508 <abort@plt+0x6348>
   174c0:	cmp	r0, #0
   174c4:	movne	r0, #0
   174c8:	bne	174f4 <abort@plt+0x6334>
   174cc:	ldr	r1, [pc, #44]	; 17500 <abort@plt+0x6340>
   174d0:	add	r0, sp, #4
   174d4:	bl	10f2c <strcmp@plt>
   174d8:	cmp	r0, #0
   174dc:	beq	174f4 <abort@plt+0x6334>
   174e0:	add	r0, sp, #4
   174e4:	ldr	r1, [pc, #24]	; 17504 <abort@plt+0x6344>
   174e8:	bl	10f2c <strcmp@plt>
   174ec:	adds	r0, r0, #0
   174f0:	movne	r0, #1
   174f4:	add	sp, sp, #268	; 0x10c
   174f8:	pop	{pc}		; (ldr pc, [sp], #4)
   174fc:	andeq	r0, r0, r1, lsl #2
   17500:	andeq	r8, r1, r8, asr r6
   17504:	andeq	r8, r1, ip, asr r6
   17508:	push	{r4, r5, r6, lr}
   1750c:	mov	r5, r1
   17510:	mov	r1, #0
   17514:	mov	r4, r2
   17518:	bl	11148 <setlocale@plt>
   1751c:	subs	r6, r0, #0
   17520:	beq	1757c <abort@plt+0x63bc>
   17524:	bl	110d0 <strlen@plt>
   17528:	cmp	r4, r0
   1752c:	bhi	17564 <abort@plt+0x63a4>
   17530:	cmp	r4, #0
   17534:	bne	17540 <abort@plt+0x6380>
   17538:	mov	r0, #34	; 0x22
   1753c:	pop	{r4, r5, r6, pc}
   17540:	sub	r4, r4, #1
   17544:	mov	r1, r6
   17548:	mov	r2, r4
   1754c:	mov	r0, r5
   17550:	bl	10f5c <memcpy@plt>
   17554:	mov	r3, #0
   17558:	strb	r3, [r5, r4]
   1755c:	mov	r0, #34	; 0x22
   17560:	pop	{r4, r5, r6, pc}
   17564:	add	r2, r0, #1
   17568:	mov	r1, r6
   1756c:	mov	r0, r5
   17570:	bl	10f5c <memcpy@plt>
   17574:	mov	r0, #0
   17578:	pop	{r4, r5, r6, pc}
   1757c:	cmp	r4, #0
   17580:	beq	17590 <abort@plt+0x63d0>
   17584:	strb	r6, [r5]
   17588:	mov	r0, #22
   1758c:	pop	{r4, r5, r6, pc}
   17590:	mov	r0, #22
   17594:	pop	{r4, r5, r6, pc}
   17598:	mov	r1, #0
   1759c:	b	11148 <setlocale@plt>
   175a0:	subs	r2, r1, #1
   175a4:	bxeq	lr
   175a8:	bcc	17780 <abort@plt+0x65c0>
   175ac:	cmp	r0, r1
   175b0:	bls	17764 <abort@plt+0x65a4>
   175b4:	tst	r1, r2
   175b8:	beq	17770 <abort@plt+0x65b0>
   175bc:	clz	r3, r0
   175c0:	clz	r2, r1
   175c4:	sub	r3, r2, r3
   175c8:	rsbs	r3, r3, #31
   175cc:	addne	r3, r3, r3, lsl #1
   175d0:	mov	r2, #0
   175d4:	addne	pc, pc, r3, lsl #2
   175d8:	nop			; (mov r0, r0)
   175dc:	cmp	r0, r1, lsl #31
   175e0:	adc	r2, r2, r2
   175e4:	subcs	r0, r0, r1, lsl #31
   175e8:	cmp	r0, r1, lsl #30
   175ec:	adc	r2, r2, r2
   175f0:	subcs	r0, r0, r1, lsl #30
   175f4:	cmp	r0, r1, lsl #29
   175f8:	adc	r2, r2, r2
   175fc:	subcs	r0, r0, r1, lsl #29
   17600:	cmp	r0, r1, lsl #28
   17604:	adc	r2, r2, r2
   17608:	subcs	r0, r0, r1, lsl #28
   1760c:	cmp	r0, r1, lsl #27
   17610:	adc	r2, r2, r2
   17614:	subcs	r0, r0, r1, lsl #27
   17618:	cmp	r0, r1, lsl #26
   1761c:	adc	r2, r2, r2
   17620:	subcs	r0, r0, r1, lsl #26
   17624:	cmp	r0, r1, lsl #25
   17628:	adc	r2, r2, r2
   1762c:	subcs	r0, r0, r1, lsl #25
   17630:	cmp	r0, r1, lsl #24
   17634:	adc	r2, r2, r2
   17638:	subcs	r0, r0, r1, lsl #24
   1763c:	cmp	r0, r1, lsl #23
   17640:	adc	r2, r2, r2
   17644:	subcs	r0, r0, r1, lsl #23
   17648:	cmp	r0, r1, lsl #22
   1764c:	adc	r2, r2, r2
   17650:	subcs	r0, r0, r1, lsl #22
   17654:	cmp	r0, r1, lsl #21
   17658:	adc	r2, r2, r2
   1765c:	subcs	r0, r0, r1, lsl #21
   17660:	cmp	r0, r1, lsl #20
   17664:	adc	r2, r2, r2
   17668:	subcs	r0, r0, r1, lsl #20
   1766c:	cmp	r0, r1, lsl #19
   17670:	adc	r2, r2, r2
   17674:	subcs	r0, r0, r1, lsl #19
   17678:	cmp	r0, r1, lsl #18
   1767c:	adc	r2, r2, r2
   17680:	subcs	r0, r0, r1, lsl #18
   17684:	cmp	r0, r1, lsl #17
   17688:	adc	r2, r2, r2
   1768c:	subcs	r0, r0, r1, lsl #17
   17690:	cmp	r0, r1, lsl #16
   17694:	adc	r2, r2, r2
   17698:	subcs	r0, r0, r1, lsl #16
   1769c:	cmp	r0, r1, lsl #15
   176a0:	adc	r2, r2, r2
   176a4:	subcs	r0, r0, r1, lsl #15
   176a8:	cmp	r0, r1, lsl #14
   176ac:	adc	r2, r2, r2
   176b0:	subcs	r0, r0, r1, lsl #14
   176b4:	cmp	r0, r1, lsl #13
   176b8:	adc	r2, r2, r2
   176bc:	subcs	r0, r0, r1, lsl #13
   176c0:	cmp	r0, r1, lsl #12
   176c4:	adc	r2, r2, r2
   176c8:	subcs	r0, r0, r1, lsl #12
   176cc:	cmp	r0, r1, lsl #11
   176d0:	adc	r2, r2, r2
   176d4:	subcs	r0, r0, r1, lsl #11
   176d8:	cmp	r0, r1, lsl #10
   176dc:	adc	r2, r2, r2
   176e0:	subcs	r0, r0, r1, lsl #10
   176e4:	cmp	r0, r1, lsl #9
   176e8:	adc	r2, r2, r2
   176ec:	subcs	r0, r0, r1, lsl #9
   176f0:	cmp	r0, r1, lsl #8
   176f4:	adc	r2, r2, r2
   176f8:	subcs	r0, r0, r1, lsl #8
   176fc:	cmp	r0, r1, lsl #7
   17700:	adc	r2, r2, r2
   17704:	subcs	r0, r0, r1, lsl #7
   17708:	cmp	r0, r1, lsl #6
   1770c:	adc	r2, r2, r2
   17710:	subcs	r0, r0, r1, lsl #6
   17714:	cmp	r0, r1, lsl #5
   17718:	adc	r2, r2, r2
   1771c:	subcs	r0, r0, r1, lsl #5
   17720:	cmp	r0, r1, lsl #4
   17724:	adc	r2, r2, r2
   17728:	subcs	r0, r0, r1, lsl #4
   1772c:	cmp	r0, r1, lsl #3
   17730:	adc	r2, r2, r2
   17734:	subcs	r0, r0, r1, lsl #3
   17738:	cmp	r0, r1, lsl #2
   1773c:	adc	r2, r2, r2
   17740:	subcs	r0, r0, r1, lsl #2
   17744:	cmp	r0, r1, lsl #1
   17748:	adc	r2, r2, r2
   1774c:	subcs	r0, r0, r1, lsl #1
   17750:	cmp	r0, r1
   17754:	adc	r2, r2, r2
   17758:	subcs	r0, r0, r1
   1775c:	mov	r0, r2
   17760:	bx	lr
   17764:	moveq	r0, #1
   17768:	movne	r0, #0
   1776c:	bx	lr
   17770:	clz	r2, r1
   17774:	rsb	r2, r2, #31
   17778:	lsr	r0, r0, r2
   1777c:	bx	lr
   17780:	cmp	r0, #0
   17784:	mvnne	r0, #0
   17788:	b	179ec <abort@plt+0x682c>
   1778c:	cmp	r1, #0
   17790:	beq	17780 <abort@plt+0x65c0>
   17794:	push	{r0, r1, lr}
   17798:	bl	175a0 <abort@plt+0x63e0>
   1779c:	pop	{r1, r2, lr}
   177a0:	mul	r3, r2, r0
   177a4:	sub	r1, r1, r3
   177a8:	bx	lr
   177ac:	cmp	r1, #0
   177b0:	beq	179bc <abort@plt+0x67fc>
   177b4:	eor	ip, r0, r1
   177b8:	rsbmi	r1, r1, #0
   177bc:	subs	r2, r1, #1
   177c0:	beq	17988 <abort@plt+0x67c8>
   177c4:	movs	r3, r0
   177c8:	rsbmi	r3, r0, #0
   177cc:	cmp	r3, r1
   177d0:	bls	17994 <abort@plt+0x67d4>
   177d4:	tst	r1, r2
   177d8:	beq	179a4 <abort@plt+0x67e4>
   177dc:	clz	r2, r3
   177e0:	clz	r0, r1
   177e4:	sub	r2, r0, r2
   177e8:	rsbs	r2, r2, #31
   177ec:	addne	r2, r2, r2, lsl #1
   177f0:	mov	r0, #0
   177f4:	addne	pc, pc, r2, lsl #2
   177f8:	nop			; (mov r0, r0)
   177fc:	cmp	r3, r1, lsl #31
   17800:	adc	r0, r0, r0
   17804:	subcs	r3, r3, r1, lsl #31
   17808:	cmp	r3, r1, lsl #30
   1780c:	adc	r0, r0, r0
   17810:	subcs	r3, r3, r1, lsl #30
   17814:	cmp	r3, r1, lsl #29
   17818:	adc	r0, r0, r0
   1781c:	subcs	r3, r3, r1, lsl #29
   17820:	cmp	r3, r1, lsl #28
   17824:	adc	r0, r0, r0
   17828:	subcs	r3, r3, r1, lsl #28
   1782c:	cmp	r3, r1, lsl #27
   17830:	adc	r0, r0, r0
   17834:	subcs	r3, r3, r1, lsl #27
   17838:	cmp	r3, r1, lsl #26
   1783c:	adc	r0, r0, r0
   17840:	subcs	r3, r3, r1, lsl #26
   17844:	cmp	r3, r1, lsl #25
   17848:	adc	r0, r0, r0
   1784c:	subcs	r3, r3, r1, lsl #25
   17850:	cmp	r3, r1, lsl #24
   17854:	adc	r0, r0, r0
   17858:	subcs	r3, r3, r1, lsl #24
   1785c:	cmp	r3, r1, lsl #23
   17860:	adc	r0, r0, r0
   17864:	subcs	r3, r3, r1, lsl #23
   17868:	cmp	r3, r1, lsl #22
   1786c:	adc	r0, r0, r0
   17870:	subcs	r3, r3, r1, lsl #22
   17874:	cmp	r3, r1, lsl #21
   17878:	adc	r0, r0, r0
   1787c:	subcs	r3, r3, r1, lsl #21
   17880:	cmp	r3, r1, lsl #20
   17884:	adc	r0, r0, r0
   17888:	subcs	r3, r3, r1, lsl #20
   1788c:	cmp	r3, r1, lsl #19
   17890:	adc	r0, r0, r0
   17894:	subcs	r3, r3, r1, lsl #19
   17898:	cmp	r3, r1, lsl #18
   1789c:	adc	r0, r0, r0
   178a0:	subcs	r3, r3, r1, lsl #18
   178a4:	cmp	r3, r1, lsl #17
   178a8:	adc	r0, r0, r0
   178ac:	subcs	r3, r3, r1, lsl #17
   178b0:	cmp	r3, r1, lsl #16
   178b4:	adc	r0, r0, r0
   178b8:	subcs	r3, r3, r1, lsl #16
   178bc:	cmp	r3, r1, lsl #15
   178c0:	adc	r0, r0, r0
   178c4:	subcs	r3, r3, r1, lsl #15
   178c8:	cmp	r3, r1, lsl #14
   178cc:	adc	r0, r0, r0
   178d0:	subcs	r3, r3, r1, lsl #14
   178d4:	cmp	r3, r1, lsl #13
   178d8:	adc	r0, r0, r0
   178dc:	subcs	r3, r3, r1, lsl #13
   178e0:	cmp	r3, r1, lsl #12
   178e4:	adc	r0, r0, r0
   178e8:	subcs	r3, r3, r1, lsl #12
   178ec:	cmp	r3, r1, lsl #11
   178f0:	adc	r0, r0, r0
   178f4:	subcs	r3, r3, r1, lsl #11
   178f8:	cmp	r3, r1, lsl #10
   178fc:	adc	r0, r0, r0
   17900:	subcs	r3, r3, r1, lsl #10
   17904:	cmp	r3, r1, lsl #9
   17908:	adc	r0, r0, r0
   1790c:	subcs	r3, r3, r1, lsl #9
   17910:	cmp	r3, r1, lsl #8
   17914:	adc	r0, r0, r0
   17918:	subcs	r3, r3, r1, lsl #8
   1791c:	cmp	r3, r1, lsl #7
   17920:	adc	r0, r0, r0
   17924:	subcs	r3, r3, r1, lsl #7
   17928:	cmp	r3, r1, lsl #6
   1792c:	adc	r0, r0, r0
   17930:	subcs	r3, r3, r1, lsl #6
   17934:	cmp	r3, r1, lsl #5
   17938:	adc	r0, r0, r0
   1793c:	subcs	r3, r3, r1, lsl #5
   17940:	cmp	r3, r1, lsl #4
   17944:	adc	r0, r0, r0
   17948:	subcs	r3, r3, r1, lsl #4
   1794c:	cmp	r3, r1, lsl #3
   17950:	adc	r0, r0, r0
   17954:	subcs	r3, r3, r1, lsl #3
   17958:	cmp	r3, r1, lsl #2
   1795c:	adc	r0, r0, r0
   17960:	subcs	r3, r3, r1, lsl #2
   17964:	cmp	r3, r1, lsl #1
   17968:	adc	r0, r0, r0
   1796c:	subcs	r3, r3, r1, lsl #1
   17970:	cmp	r3, r1
   17974:	adc	r0, r0, r0
   17978:	subcs	r3, r3, r1
   1797c:	cmp	ip, #0
   17980:	rsbmi	r0, r0, #0
   17984:	bx	lr
   17988:	teq	ip, r0
   1798c:	rsbmi	r0, r0, #0
   17990:	bx	lr
   17994:	movcc	r0, #0
   17998:	asreq	r0, ip, #31
   1799c:	orreq	r0, r0, #1
   179a0:	bx	lr
   179a4:	clz	r2, r1
   179a8:	rsb	r2, r2, #31
   179ac:	cmp	ip, #0
   179b0:	lsr	r0, r3, r2
   179b4:	rsbmi	r0, r0, #0
   179b8:	bx	lr
   179bc:	cmp	r0, #0
   179c0:	mvngt	r0, #-2147483648	; 0x80000000
   179c4:	movlt	r0, #-2147483648	; 0x80000000
   179c8:	b	179ec <abort@plt+0x682c>
   179cc:	cmp	r1, #0
   179d0:	beq	179bc <abort@plt+0x67fc>
   179d4:	push	{r0, r1, lr}
   179d8:	bl	177b4 <abort@plt+0x65f4>
   179dc:	pop	{r1, r2, lr}
   179e0:	mul	r3, r2, r0
   179e4:	sub	r1, r1, r3
   179e8:	bx	lr
   179ec:	push	{r1, lr}
   179f0:	mov	r0, #8
   179f4:	bl	10f08 <raise@plt>
   179f8:	pop	{r1, pc}
   179fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a00:	mov	r7, r0
   17a04:	ldr	r6, [pc, #72]	; 17a54 <abort@plt+0x6894>
   17a08:	ldr	r5, [pc, #72]	; 17a58 <abort@plt+0x6898>
   17a0c:	add	r6, pc, r6
   17a10:	add	r5, pc, r5
   17a14:	sub	r6, r6, r5
   17a18:	mov	r8, r1
   17a1c:	mov	r9, r2
   17a20:	bl	10ed0 <calloc@plt-0x20>
   17a24:	asrs	r6, r6, #2
   17a28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a2c:	mov	r4, #0
   17a30:	add	r4, r4, #1
   17a34:	ldr	r3, [r5], #4
   17a38:	mov	r2, r9
   17a3c:	mov	r1, r8
   17a40:	mov	r0, r7
   17a44:	blx	r3
   17a48:	cmp	r6, r4
   17a4c:	bne	17a30 <abort@plt+0x6870>
   17a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a54:	strdeq	r1, [r1], -r4
   17a58:	andeq	r1, r1, ip, ror #9
   17a5c:	bx	lr
   17a60:	ldr	r3, [pc, #12]	; 17a74 <abort@plt+0x68b4>
   17a64:	mov	r1, #0
   17a68:	add	r3, pc, r3
   17a6c:	ldr	r2, [r3]
   17a70:	b	110e8 <__cxa_atexit@plt>
   17a74:	muleq	r1, r8, r6

Disassembly of section .fini:

00017a78 <.fini>:
   17a78:	push	{r3, lr}
   17a7c:	pop	{r3, pc}
