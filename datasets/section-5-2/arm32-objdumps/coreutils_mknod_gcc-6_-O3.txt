
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011468 <.init>:
   11468:	push	{r3, lr}
   1146c:	bl	120ec <__assert_fail@plt+0x820>
   11470:	pop	{r3, pc}

Disassembly of section .plt:

00011474 <fstatfs64@plt-0x14>:
   11474:	push	{lr}		; (str lr, [sp, #-4]!)
   11478:	ldr	lr, [pc, #4]	; 11484 <fstatfs64@plt-0x4>
   1147c:	add	lr, pc, lr
   11480:	ldr	pc, [lr, #8]!
   11484:	andeq	lr, r1, ip, ror fp

00011488 <fstatfs64@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #122880	; 0x1e000
   11490:	ldr	pc, [ip, #2940]!	; 0xb7c

00011494 <selabel_lookup@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #122880	; 0x1e000
   1149c:	ldr	pc, [ip, #2932]!	; 0xb74

000114a0 <calloc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #122880	; 0x1e000
   114a8:	ldr	pc, [ip, #2924]!	; 0xb6c

000114ac <fputs_unlocked@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #122880	; 0x1e000
   114b4:	ldr	pc, [ip, #2916]!	; 0xb64

000114b8 <raise@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #122880	; 0x1e000
   114c0:	ldr	pc, [ip, #2908]!	; 0xb5c

000114c4 <is_selinux_enabled@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #122880	; 0x1e000
   114cc:	ldr	pc, [ip, #2900]!	; 0xb54

000114d0 <strcmp@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #122880	; 0x1e000
   114d8:	ldr	pc, [ip, #2892]!	; 0xb4c

000114dc <context_type_get@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #122880	; 0x1e000
   114e4:	ldr	pc, [ip, #2884]!	; 0xb44

000114e8 <fflush@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #122880	; 0x1e000
   114f0:	ldr	pc, [ip, #2876]!	; 0xb3c

000114f4 <lsetfilecon@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #122880	; 0x1e000
   114fc:	ldr	pc, [ip, #2868]!	; 0xb34

00011500 <memmove@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #122880	; 0x1e000
   11508:	ldr	pc, [ip, #2860]!	; 0xb2c

0001150c <free@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #122880	; 0x1e000
   11514:	ldr	pc, [ip, #2852]!	; 0xb24

00011518 <faccessat@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #122880	; 0x1e000
   11520:	ldr	pc, [ip, #2844]!	; 0xb1c

00011524 <_exit@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #122880	; 0x1e000
   1152c:	ldr	pc, [ip, #2836]!	; 0xb14

00011530 <memcpy@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #122880	; 0x1e000
   11538:	ldr	pc, [ip, #2828]!	; 0xb0c

0001153c <__strtoull_internal@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #122880	; 0x1e000
   11544:	ldr	pc, [ip, #2820]!	; 0xb04

00011548 <mbsinit@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #122880	; 0x1e000
   11550:	ldr	pc, [ip, #2812]!	; 0xafc

00011554 <context_new@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #122880	; 0x1e000
   1155c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011560 <memcmp@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #122880	; 0x1e000
   11568:	ldr	pc, [ip, #2796]!	; 0xaec

0001156c <fputc_unlocked@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #122880	; 0x1e000
   11574:	ldr	pc, [ip, #2788]!	; 0xae4

00011578 <dcgettext@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #122880	; 0x1e000
   11580:	ldr	pc, [ip, #2780]!	; 0xadc

00011584 <context_type_set@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #122880	; 0x1e000
   1158c:	ldr	pc, [ip, #2772]!	; 0xad4

00011590 <realloc@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #122880	; 0x1e000
   11598:	ldr	pc, [ip, #2764]!	; 0xacc

0001159c <fgetfilecon@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #122880	; 0x1e000
   115a4:	ldr	pc, [ip, #2756]!	; 0xac4

000115a8 <textdomain@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #122880	; 0x1e000
   115b0:	ldr	pc, [ip, #2748]!	; 0xabc

000115b4 <rawmemchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #122880	; 0x1e000
   115bc:	ldr	pc, [ip, #2740]!	; 0xab4

000115c0 <__fxstatat64@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #122880	; 0x1e000
   115c8:	ldr	pc, [ip, #2732]!	; 0xaac

000115cc <iswprint@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #122880	; 0x1e000
   115d4:	ldr	pc, [ip, #2724]!	; 0xaa4

000115d8 <__fxstat64@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #122880	; 0x1e000
   115e0:	ldr	pc, [ip, #2716]!	; 0xa9c

000115e4 <readlink@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #122880	; 0x1e000
   115ec:	ldr	pc, [ip, #2708]!	; 0xa94

000115f0 <fwrite@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #122880	; 0x1e000
   115f8:	ldr	pc, [ip, #2700]!	; 0xa8c

000115fc <lseek64@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #122880	; 0x1e000
   11604:	ldr	pc, [ip, #2692]!	; 0xa84

00011608 <__ctype_get_mb_cur_max@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #122880	; 0x1e000
   11610:	ldr	pc, [ip, #2684]!	; 0xa7c

00011614 <getcon@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #122880	; 0x1e000
   1161c:	ldr	pc, [ip, #2676]!	; 0xa74

00011620 <__fpending@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #122880	; 0x1e000
   11628:	ldr	pc, [ip, #2668]!	; 0xa6c

0001162c <mbrtowc@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #122880	; 0x1e000
   11634:	ldr	pc, [ip, #2660]!	; 0xa64

00011638 <error@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #122880	; 0x1e000
   11640:	ldr	pc, [ip, #2652]!	; 0xa5c

00011644 <open64@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #122880	; 0x1e000
   1164c:	ldr	pc, [ip, #2644]!	; 0xa54

00011650 <lgetfilecon@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #122880	; 0x1e000
   11658:	ldr	pc, [ip, #2636]!	; 0xa4c

0001165c <malloc@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #122880	; 0x1e000
   11664:	ldr	pc, [ip, #2628]!	; 0xa44

00011668 <__libc_start_main@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #122880	; 0x1e000
   11670:	ldr	pc, [ip, #2620]!	; 0xa3c

00011674 <__freading@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #122880	; 0x1e000
   1167c:	ldr	pc, [ip, #2612]!	; 0xa34

00011680 <__gmon_start__@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #122880	; 0x1e000
   11688:	ldr	pc, [ip, #2604]!	; 0xa2c

0001168c <context_free@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #122880	; 0x1e000
   11694:	ldr	pc, [ip, #2596]!	; 0xa24

00011698 <mempcpy@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #122880	; 0x1e000
   116a0:	ldr	pc, [ip, #2588]!	; 0xa1c

000116a4 <getopt_long@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #122880	; 0x1e000
   116ac:	ldr	pc, [ip, #2580]!	; 0xa14

000116b0 <__ctype_b_loc@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #122880	; 0x1e000
   116b8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116bc <getcwd@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #122880	; 0x1e000
   116c4:	ldr	pc, [ip, #2564]!	; 0xa04

000116c8 <exit@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #122880	; 0x1e000
   116d0:	ldr	pc, [ip, #2556]!	; 0x9fc

000116d4 <getfilecon@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #122880	; 0x1e000
   116dc:	ldr	pc, [ip, #2548]!	; 0x9f4

000116e0 <strlen@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #122880	; 0x1e000
   116e8:	ldr	pc, [ip, #2540]!	; 0x9ec

000116ec <selabel_open@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #122880	; 0x1e000
   116f4:	ldr	pc, [ip, #2532]!	; 0x9e4

000116f8 <strchr@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #122880	; 0x1e000
   11700:	ldr	pc, [ip, #2524]!	; 0x9dc

00011704 <openat64@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #122880	; 0x1e000
   1170c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011710 <setfscreatecon@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #122880	; 0x1e000
   11718:	ldr	pc, [ip, #2508]!	; 0x9cc

0001171c <__errno_location@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #122880	; 0x1e000
   11724:	ldr	pc, [ip, #2500]!	; 0x9c4

00011728 <__sprintf_chk@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #122880	; 0x1e000
   11730:	ldr	pc, [ip, #2492]!	; 0x9bc

00011734 <__cxa_atexit@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #122880	; 0x1e000
   1173c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011740 <memset@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #122880	; 0x1e000
   11748:	ldr	pc, [ip, #2476]!	; 0x9ac

0001174c <__printf_chk@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #122880	; 0x1e000
   11754:	ldr	pc, [ip, #2468]!	; 0x9a4

00011758 <fileno@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #122880	; 0x1e000
   11760:	ldr	pc, [ip, #2460]!	; 0x99c

00011764 <__fprintf_chk@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #122880	; 0x1e000
   1176c:	ldr	pc, [ip, #2452]!	; 0x994

00011770 <fclose@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #122880	; 0x1e000
   11778:	ldr	pc, [ip, #2444]!	; 0x98c

0001177c <fseeko64@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #122880	; 0x1e000
   11784:	ldr	pc, [ip, #2436]!	; 0x984

00011788 <fcntl64@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #122880	; 0x1e000
   11790:	ldr	pc, [ip, #2428]!	; 0x97c

00011794 <setlocale@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #122880	; 0x1e000
   1179c:	ldr	pc, [ip, #2420]!	; 0x974

000117a0 <fsetfilecon@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #122880	; 0x1e000
   117a8:	ldr	pc, [ip, #2412]!	; 0x96c

000117ac <strrchr@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #122880	; 0x1e000
   117b4:	ldr	pc, [ip, #2404]!	; 0x964

000117b8 <nl_langinfo@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #122880	; 0x1e000
   117c0:	ldr	pc, [ip, #2396]!	; 0x95c

000117c4 <readdir64@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #122880	; 0x1e000
   117cc:	ldr	pc, [ip, #2388]!	; 0x954

000117d0 <fdopendir@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #122880	; 0x1e000
   117d8:	ldr	pc, [ip, #2380]!	; 0x94c

000117dc <security_compute_create@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #122880	; 0x1e000
   117e4:	ldr	pc, [ip, #2372]!	; 0x944

000117e8 <dirfd@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #122880	; 0x1e000
   117f0:	ldr	pc, [ip, #2364]!	; 0x93c

000117f4 <fchdir@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #122880	; 0x1e000
   117fc:	ldr	pc, [ip, #2356]!	; 0x934

00011800 <qsort@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #122880	; 0x1e000
   11808:	ldr	pc, [ip, #2348]!	; 0x92c

0001180c <freecon@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #122880	; 0x1e000
   11814:	ldr	pc, [ip, #2340]!	; 0x924

00011818 <bindtextdomain@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #122880	; 0x1e000
   11820:	ldr	pc, [ip, #2332]!	; 0x91c

00011824 <getfscreatecon@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #122880	; 0x1e000
   1182c:	ldr	pc, [ip, #2324]!	; 0x914

00011830 <umask@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #122880	; 0x1e000
   11838:	ldr	pc, [ip, #2316]!	; 0x90c

0001183c <context_str@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #122880	; 0x1e000
   11844:	ldr	pc, [ip, #2308]!	; 0x904

00011848 <chmod@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #122880	; 0x1e000
   11850:	ldr	pc, [ip, #2300]!	; 0x8fc

00011854 <__xstat64@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #122880	; 0x1e000
   1185c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011860 <__xmknod@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #122880	; 0x1e000
   11868:	ldr	pc, [ip, #2284]!	; 0x8ec

0001186c <strncmp@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #122880	; 0x1e000
   11874:	ldr	pc, [ip, #2276]!	; 0x8e4

00011878 <abort@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #122880	; 0x1e000
   11880:	ldr	pc, [ip, #2268]!	; 0x8dc

00011884 <close@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #122880	; 0x1e000
   1188c:	ldr	pc, [ip, #2260]!	; 0x8d4

00011890 <__lxstat64@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #122880	; 0x1e000
   11898:	ldr	pc, [ip, #2252]!	; 0x8cc

0001189c <mkfifo@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #122880	; 0x1e000
   118a4:	ldr	pc, [ip, #2244]!	; 0x8c4

000118a8 <mode_to_security_class@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #122880	; 0x1e000
   118b0:	ldr	pc, [ip, #2236]!	; 0x8bc

000118b4 <closedir@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #122880	; 0x1e000
   118bc:	ldr	pc, [ip, #2228]!	; 0x8b4

000118c0 <strspn@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #122880	; 0x1e000
   118c8:	ldr	pc, [ip, #2220]!	; 0x8ac

000118cc <__assert_fail@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #122880	; 0x1e000
   118d4:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

000118d8 <lchmod@@Base-0x5db4>:
   118d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118dc:	mov	r5, r0
   118e0:	sub	sp, sp, #84	; 0x54
   118e4:	ldr	r0, [r1]
   118e8:	mov	fp, r1
   118ec:	bl	17d50 <lchmod@@Base+0x6c4>
   118f0:	ldr	r1, [pc, #1840]	; 12028 <__assert_fail@plt+0x75c>
   118f4:	mov	r0, #6
   118f8:	bl	11794 <setlocale@plt>
   118fc:	mov	r9, #0
   11900:	ldr	r1, [pc, #1828]	; 1202c <__assert_fail@plt+0x760>
   11904:	ldr	r0, [pc, #1828]	; 12030 <__assert_fail@plt+0x764>
   11908:	ldr	r7, [pc, #1828]	; 12034 <__assert_fail@plt+0x768>
   1190c:	ldr	r6, [pc, #1828]	; 12038 <__assert_fail@plt+0x76c>
   11910:	ldr	r8, [pc, #1828]	; 1203c <__assert_fail@plt+0x770>
   11914:	bl	11818 <bindtextdomain@plt>
   11918:	mov	sl, r9
   1191c:	ldr	r0, [pc, #1804]	; 12030 <__assert_fail@plt+0x764>
   11920:	mov	r4, r9
   11924:	bl	115a8 <textdomain@plt>
   11928:	ldr	r0, [pc, #1808]	; 12040 <__assert_fail@plt+0x774>
   1192c:	bl	1ee6c <lchmod@@Base+0x77e0>
   11930:	str	r9, [sp, #8]
   11934:	str	r4, [sp]
   11938:	mov	r3, r7
   1193c:	mov	r2, r6
   11940:	mov	r1, fp
   11944:	mov	r0, r5
   11948:	bl	116a4 <getopt_long@plt>
   1194c:	cmn	r0, #1
   11950:	beq	11adc <__assert_fail@plt+0x210>
   11954:	cmn	r0, #2
   11958:	beq	11aa4 <__assert_fail@plt+0x1d8>
   1195c:	ble	119dc <__assert_fail@plt+0x110>
   11960:	cmp	r0, #90	; 0x5a
   11964:	beq	11978 <__assert_fail@plt+0xac>
   11968:	cmp	r0, #109	; 0x6d
   1196c:	bne	11a9c <__assert_fail@plt+0x1d0>
   11970:	ldr	sl, [r8]
   11974:	b	11934 <__assert_fail@plt+0x68>
   11978:	bl	114c4 <is_selinux_enabled@plt>
   1197c:	cmp	r0, #0
   11980:	ble	11aac <__assert_fail@plt+0x1e0>
   11984:	ldr	r1, [r8]
   11988:	cmp	r1, #0
   1198c:	strne	r1, [sp, #8]
   11990:	bne	11934 <__assert_fail@plt+0x68>
   11994:	mov	r2, r4
   11998:	mov	r0, r1
   1199c:	bl	116ec <selabel_open@plt>
   119a0:	subs	r9, r0, #0
   119a4:	bne	11934 <__assert_fail@plt+0x68>
   119a8:	bl	1171c <__errno_location@plt>
   119ac:	mov	r2, #5
   119b0:	ldr	r1, [pc, #1676]	; 12044 <__assert_fail@plt+0x778>
   119b4:	ldr	r3, [r0]
   119b8:	mov	r0, r4
   119bc:	str	r3, [sp, #16]
   119c0:	bl	11578 <dcgettext@plt>
   119c4:	ldr	r3, [sp, #16]
   119c8:	mov	r1, r3
   119cc:	mov	r2, r0
   119d0:	mov	r0, r4
   119d4:	bl	11638 <error@plt>
   119d8:	b	11934 <__assert_fail@plt+0x68>
   119dc:	cmn	r0, #3
   119e0:	bne	11a9c <__assert_fail@plt+0x1d0>
   119e4:	ldr	r1, [pc, #1628]	; 12048 <__assert_fail@plt+0x77c>
   119e8:	ldr	r3, [pc, #1628]	; 1204c <__assert_fail@plt+0x780>
   119ec:	ldr	r2, [pc, #1628]	; 12050 <__assert_fail@plt+0x784>
   119f0:	str	r4, [sp, #4]
   119f4:	ldr	r0, [r1]
   119f8:	ldr	r3, [r3]
   119fc:	ldr	r1, [pc, #1616]	; 12054 <__assert_fail@plt+0x788>
   11a00:	str	r2, [sp]
   11a04:	ldr	r2, [pc, #1612]	; 12058 <__assert_fail@plt+0x78c>
   11a08:	bl	1c8e4 <lchmod@@Base+0x5258>
   11a0c:	mov	r0, #0
   11a10:	bl	116c8 <exit@plt>
   11a14:	sub	r3, r5, r3
   11a18:	cmp	r3, #1
   11a1c:	bls	11f2c <__assert_fail@plt+0x660>
   11a20:	cmp	r3, #2
   11a24:	bls	11b84 <__assert_fail@plt+0x2b8>
   11a28:	mov	r2, #5
   11a2c:	ldr	r1, [pc, #1576]	; 1205c <__assert_fail@plt+0x790>
   11a30:	mov	r0, #0
   11a34:	bl	11578 <dcgettext@plt>
   11a38:	ldr	r3, [r6]
   11a3c:	add	r3, r3, #2
   11a40:	mov	r4, r0
   11a44:	ldr	r0, [fp, r3, lsl #2]
   11a48:	bl	1bc1c <lchmod@@Base+0x4590>
   11a4c:	mov	r1, #0
   11a50:	mov	r2, r4
   11a54:	mov	r3, r0
   11a58:	mov	r0, r1
   11a5c:	bl	11638 <error@plt>
   11a60:	ldr	r3, [r6]
   11a64:	sub	r5, r5, r3
   11a68:	cmp	r5, #4
   11a6c:	bne	11a9c <__assert_fail@plt+0x1d0>
   11a70:	ldr	r3, [pc, #1512]	; 12060 <__assert_fail@plt+0x794>
   11a74:	ldr	r1, [pc, #1512]	; 12064 <__assert_fail@plt+0x798>
   11a78:	mov	r2, #5
   11a7c:	mov	r0, #0
   11a80:	ldr	r4, [r3]
   11a84:	bl	11578 <dcgettext@plt>
   11a88:	ldr	r2, [pc, #1496]	; 12068 <__assert_fail@plt+0x79c>
   11a8c:	mov	r1, #1
   11a90:	mov	r3, r0
   11a94:	mov	r0, r4
   11a98:	bl	11764 <__fprintf_chk@plt>
   11a9c:	mov	r0, #1
   11aa0:	bl	121d8 <__assert_fail@plt+0x90c>
   11aa4:	mov	r0, #0
   11aa8:	bl	121d8 <__assert_fail@plt+0x90c>
   11aac:	ldr	r3, [r8]
   11ab0:	cmp	r3, #0
   11ab4:	beq	11934 <__assert_fail@plt+0x68>
   11ab8:	mov	r2, #5
   11abc:	ldr	r1, [pc, #1448]	; 1206c <__assert_fail@plt+0x7a0>
   11ac0:	mov	r0, r4
   11ac4:	bl	11578 <dcgettext@plt>
   11ac8:	mov	r1, r4
   11acc:	mov	r2, r0
   11ad0:	mov	r0, #0
   11ad4:	bl	11638 <error@plt>
   11ad8:	b	11934 <__assert_fail@plt+0x68>
   11adc:	cmp	sl, #0
   11ae0:	beq	11df4 <__assert_fail@plt+0x528>
   11ae4:	mov	r0, sl
   11ae8:	bl	17798 <lchmod@@Base+0x10c>
   11aec:	subs	r6, r0, #0
   11af0:	moveq	r2, #5
   11af4:	ldreq	r1, [pc, #1396]	; 12070 <__assert_fail@plt+0x7a4>
   11af8:	beq	11eb0 <__assert_fail@plt+0x5e4>
   11afc:	mov	r0, #0
   11b00:	bl	11830 <umask@plt>
   11b04:	mov	r7, r0
   11b08:	bl	11830 <umask@plt>
   11b0c:	mov	r2, r7
   11b10:	mov	r3, r6
   11b14:	mov	r1, #0
   11b18:	str	r4, [sp]
   11b1c:	ldr	r0, [pc, #1360]	; 12074 <__assert_fail@plt+0x7a8>
   11b20:	bl	17b88 <lchmod@@Base+0x4fc>
   11b24:	mov	r7, r0
   11b28:	mov	r0, r6
   11b2c:	bl	1355c <__assert_fail@plt+0x1c90>
   11b30:	bic	r3, r7, #508	; 0x1fc
   11b34:	bic	r3, r3, #3
   11b38:	cmp	r3, #0
   11b3c:	bne	11ea4 <__assert_fail@plt+0x5d8>
   11b40:	ldr	r6, [pc, #1328]	; 12078 <__assert_fail@plt+0x7ac>
   11b44:	ldr	r3, [r6]
   11b48:	cmp	r5, r3
   11b4c:	ble	11a14 <__assert_fail@plt+0x148>
   11b50:	add	r2, r3, #1
   11b54:	cmp	r5, r2
   11b58:	movle	r4, #4
   11b5c:	ble	11b74 <__assert_fail@plt+0x2a8>
   11b60:	ldr	r2, [fp, r2, lsl #2]
   11b64:	ldrb	r4, [r2]
   11b68:	cmp	r4, #112	; 0x70
   11b6c:	movne	r4, #4
   11b70:	moveq	r4, #2
   11b74:	sub	r3, r5, r3
   11b78:	cmp	r4, r3
   11b7c:	bhi	11f9c <__assert_fail@plt+0x6d0>
   11b80:	bcc	11e60 <__assert_fail@plt+0x594>
   11b84:	ldr	r0, [sp, #8]
   11b88:	cmp	r0, #0
   11b8c:	beq	11b9c <__assert_fail@plt+0x2d0>
   11b90:	bl	11710 <setfscreatecon@plt>
   11b94:	cmp	r0, #0
   11b98:	blt	11ff8 <__assert_fail@plt+0x72c>
   11b9c:	ldr	r3, [r6]
   11ba0:	add	r3, r3, #1
   11ba4:	ldr	r2, [fp, r3, lsl #2]
   11ba8:	lsl	r3, r3, #2
   11bac:	ldrb	r2, [r2]
   11bb0:	cmp	r2, #99	; 0x63
   11bb4:	beq	11bcc <__assert_fail@plt+0x300>
   11bb8:	bls	11dac <__assert_fail@plt+0x4e0>
   11bbc:	cmp	r2, #112	; 0x70
   11bc0:	beq	11dfc <__assert_fail@plt+0x530>
   11bc4:	cmp	r2, #117	; 0x75
   11bc8:	bne	11db8 <__assert_fail@plt+0x4ec>
   11bcc:	mov	r8, #8192	; 0x2000
   11bd0:	add	ip, fp, r3
   11bd4:	ldr	r4, [pc, #1100]	; 12028 <__assert_fail@plt+0x75c>
   11bd8:	ldr	r0, [ip, #4]
   11bdc:	mov	r2, #0
   11be0:	str	r4, [sp]
   11be4:	ldr	ip, [ip, #8]
   11be8:	mov	r1, r2
   11bec:	add	r3, sp, #56	; 0x38
   11bf0:	str	ip, [sp, #36]	; 0x24
   11bf4:	str	r0, [sp, #52]	; 0x34
   11bf8:	bl	1d1d8 <lchmod@@Base+0x5b4c>
   11bfc:	subs	ip, r0, #0
   11c00:	bne	11f80 <__assert_fail@plt+0x6b4>
   11c04:	ldrd	r0, [sp, #56]	; 0x38
   11c08:	mov	r3, #0
   11c0c:	cmp	r3, r1
   11c10:	cmpeq	r0, r0
   11c14:	bne	11f80 <__assert_fail@plt+0x6b4>
   11c18:	add	r3, sp, #64	; 0x40
   11c1c:	str	r4, [sp]
   11c20:	mov	r2, ip
   11c24:	mov	r1, ip
   11c28:	ldr	r0, [sp, #36]	; 0x24
   11c2c:	bl	1d1d8 <lchmod@@Base+0x5b4c>
   11c30:	subs	r3, r0, #0
   11c34:	str	r3, [sp, #48]	; 0x30
   11c38:	bne	11f50 <__assert_fail@plt+0x684>
   11c3c:	ldrd	r2, [sp, #64]	; 0x40
   11c40:	mov	r5, #0
   11c44:	mov	r4, r2
   11c48:	cmp	r5, r3
   11c4c:	cmpeq	r2, r2
   11c50:	strd	r4, [sp, #16]
   11c54:	bne	11f50 <__assert_fail@plt+0x684>
   11c58:	ldr	ip, [sp, #60]	; 0x3c
   11c5c:	ldr	r1, [sp, #56]	; 0x38
   11c60:	mov	r4, #0
   11c64:	mov	r5, #0
   11c68:	lsl	r3, ip, #8
   11c6c:	strd	r4, [sp, #8]
   11c70:	ldr	r4, [pc, #1028]	; 1207c <__assert_fail@plt+0x7b0>
   11c74:	orr	r3, r3, r1, lsr #24
   11c78:	lsl	r2, r1, #8
   11c7c:	str	r1, [sp, #28]
   11c80:	mov	r5, #0
   11c84:	ldr	r1, [sp, #48]	; 0x30
   11c88:	and	r4, r4, r2
   11c8c:	and	r5, r5, r3
   11c90:	str	r1, [sp, #24]
   11c94:	strd	r4, [sp, #40]	; 0x28
   11c98:	ldrd	r4, [sp, #24]
   11c9c:	ldr	r3, [pc, #988]	; 12080 <__assert_fail@plt+0x7b4>
   11ca0:	mov	r2, #0
   11ca4:	ldr	r1, [sp, #20]
   11ca8:	and	r4, r4, r2
   11cac:	and	r5, r5, r3
   11cb0:	mov	r2, r4
   11cb4:	mov	r3, r5
   11cb8:	ldrd	r4, [sp, #40]	; 0x28
   11cbc:	lsl	r1, r1, #12
   11cc0:	str	r1, [sp, #12]
   11cc4:	orr	r4, r4, r2
   11cc8:	ldr	r1, [sp, #16]
   11ccc:	orr	r5, r5, r3
   11cd0:	ldr	ip, [sp, #12]
   11cd4:	mov	r2, r4
   11cd8:	mov	r3, r5
   11cdc:	ldrd	r4, [sp, #16]
   11ce0:	orr	r1, ip, r1, lsr #20
   11ce4:	str	r1, [sp, #12]
   11ce8:	uxtb	r1, r4
   11cec:	lsl	ip, r4, #12
   11cf0:	orr	r2, r2, r1
   11cf4:	str	ip, [sp, #8]
   11cf8:	add	r5, pc, #800	; 0x320
   11cfc:	ldrd	r4, [r5]
   11d00:	strd	r2, [sp, #16]
   11d04:	ldrd	r2, [sp, #8]
   11d08:	and	r2, r2, r4
   11d0c:	and	r3, r3, r5
   11d10:	mov	r4, r2
   11d14:	mov	r5, r3
   11d18:	ldrd	r2, [sp, #16]
   11d1c:	orr	r3, r3, r5
   11d20:	orr	r2, r2, r4
   11d24:	mov	r5, r3
   11d28:	mvn	r3, #0
   11d2c:	mov	r4, r2
   11d30:	cmp	r5, r3
   11d34:	mvn	r2, #0
   11d38:	cmpeq	r4, r2
   11d3c:	beq	11ec4 <__assert_fail@plt+0x5f8>
   11d40:	cmp	r9, #0
   11d44:	beq	11d5c <__assert_fail@plt+0x490>
   11d48:	ldr	r3, [r6]
   11d4c:	mov	r0, r9
   11d50:	mov	r2, r8
   11d54:	ldr	r1, [fp, r3, lsl #2]
   11d58:	bl	127e8 <__assert_fail@plt+0xf1c>
   11d5c:	ldr	r1, [r6]
   11d60:	add	r3, sp, #80	; 0x50
   11d64:	orr	r2, r7, r8
   11d68:	ldr	r1, [fp, r1, lsl #2]
   11d6c:	strd	r4, [r3, #-8]!
   11d70:	mov	r0, #1
   11d74:	bl	11860 <__xmknod@plt>
   11d78:	cmp	r0, #0
   11d7c:	bne	11e30 <__assert_fail@plt+0x564>
   11d80:	cmp	sl, #0
   11d84:	beq	11da0 <__assert_fail@plt+0x4d4>
   11d88:	ldr	r3, [r6]
   11d8c:	mov	r1, r7
   11d90:	ldr	r0, [fp, r3, lsl #2]
   11d94:	bl	1768c <lchmod@@Base>
   11d98:	cmp	r0, #0
   11d9c:	bne	11eec <__assert_fail@plt+0x620>
   11da0:	mov	r0, #0
   11da4:	add	sp, sp, #84	; 0x54
   11da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dac:	cmp	r2, #98	; 0x62
   11db0:	moveq	r8, #24576	; 0x6000
   11db4:	beq	11bd0 <__assert_fail@plt+0x304>
   11db8:	mov	r2, #5
   11dbc:	ldr	r1, [pc, #704]	; 12084 <__assert_fail@plt+0x7b8>
   11dc0:	mov	r0, #0
   11dc4:	bl	11578 <dcgettext@plt>
   11dc8:	ldr	r3, [r6]
   11dcc:	add	r3, r3, #1
   11dd0:	mov	r4, r0
   11dd4:	ldr	r0, [fp, r3, lsl #2]
   11dd8:	bl	1bc1c <lchmod@@Base+0x4590>
   11ddc:	mov	r1, #0
   11de0:	mov	r2, r4
   11de4:	mov	r3, r0
   11de8:	mov	r0, r1
   11dec:	bl	11638 <error@plt>
   11df0:	b	11a9c <__assert_fail@plt+0x1d0>
   11df4:	ldr	r7, [pc, #632]	; 12074 <__assert_fail@plt+0x7a8>
   11df8:	b	11b40 <__assert_fail@plt+0x274>
   11dfc:	cmp	r9, #0
   11e00:	beq	11e18 <__assert_fail@plt+0x54c>
   11e04:	add	r3, fp, r3
   11e08:	mov	r0, r9
   11e0c:	ldr	r1, [r3, #-4]
   11e10:	mov	r2, #4096	; 0x1000
   11e14:	bl	127e8 <__assert_fail@plt+0xf1c>
   11e18:	ldr	r3, [r6]
   11e1c:	mov	r1, r7
   11e20:	ldr	r0, [fp, r3, lsl #2]
   11e24:	bl	1189c <mkfifo@plt>
   11e28:	cmp	r0, #0
   11e2c:	beq	11d80 <__assert_fail@plt+0x4b4>
   11e30:	bl	1171c <__errno_location@plt>
   11e34:	ldr	r3, [r6]
   11e38:	mov	r1, #3
   11e3c:	ldr	r2, [fp, r3, lsl #2]
   11e40:	ldr	r4, [r0]
   11e44:	mov	r0, #0
   11e48:	bl	1ad28 <lchmod@@Base+0x369c>
   11e4c:	mov	r1, r4
   11e50:	ldr	r2, [pc, #560]	; 12088 <__assert_fail@plt+0x7bc>
   11e54:	mov	r3, r0
   11e58:	mov	r0, #1
   11e5c:	bl	11638 <error@plt>
   11e60:	mov	r2, #5
   11e64:	ldr	r1, [pc, #496]	; 1205c <__assert_fail@plt+0x790>
   11e68:	mov	r0, #0
   11e6c:	bl	11578 <dcgettext@plt>
   11e70:	ldr	r3, [r6]
   11e74:	add	r3, r4, r3
   11e78:	mov	r7, r0
   11e7c:	ldr	r0, [fp, r3, lsl #2]
   11e80:	bl	1bc1c <lchmod@@Base+0x4590>
   11e84:	mov	r1, #0
   11e88:	mov	r2, r7
   11e8c:	mov	r3, r0
   11e90:	mov	r0, r1
   11e94:	bl	11638 <error@plt>
   11e98:	cmp	r4, #2
   11e9c:	bne	11a9c <__assert_fail@plt+0x1d0>
   11ea0:	b	11a60 <__assert_fail@plt+0x194>
   11ea4:	ldr	r1, [pc, #480]	; 1208c <__assert_fail@plt+0x7c0>
   11ea8:	mov	r2, #5
   11eac:	mov	r0, #0
   11eb0:	bl	11578 <dcgettext@plt>
   11eb4:	mov	r1, #0
   11eb8:	mov	r2, r0
   11ebc:	mov	r0, #1
   11ec0:	bl	11638 <error@plt>
   11ec4:	mov	r2, #5
   11ec8:	ldr	r1, [pc, #448]	; 12090 <__assert_fail@plt+0x7c4>
   11ecc:	bl	11578 <dcgettext@plt>
   11ed0:	ldr	r3, [sp, #36]	; 0x24
   11ed4:	ldr	r1, [sp, #48]	; 0x30
   11ed8:	str	r3, [sp]
   11edc:	ldr	r3, [sp, #52]	; 0x34
   11ee0:	mov	r2, r0
   11ee4:	mov	r0, #1
   11ee8:	bl	11638 <error@plt>
   11eec:	bl	1171c <__errno_location@plt>
   11ef0:	ldr	r1, [pc, #412]	; 12094 <__assert_fail@plt+0x7c8>
   11ef4:	mov	r2, #5
   11ef8:	ldr	r4, [r0]
   11efc:	mov	r0, #0
   11f00:	bl	11578 <dcgettext@plt>
   11f04:	ldr	r3, [r6]
   11f08:	ldr	r1, [fp, r3, lsl #2]
   11f0c:	mov	r5, r0
   11f10:	mov	r0, #4
   11f14:	bl	1a2ac <lchmod@@Base+0x2c20>
   11f18:	mov	r3, r0
   11f1c:	mov	r2, r5
   11f20:	mov	r1, r4
   11f24:	mov	r0, #1
   11f28:	bl	11638 <error@plt>
   11f2c:	mov	r2, #5
   11f30:	ldr	r1, [pc, #352]	; 12098 <__assert_fail@plt+0x7cc>
   11f34:	mov	r0, #0
   11f38:	bl	11578 <dcgettext@plt>
   11f3c:	mov	r1, #0
   11f40:	mov	r2, r0
   11f44:	mov	r0, r1
   11f48:	bl	11638 <error@plt>
   11f4c:	b	11a9c <__assert_fail@plt+0x1d0>
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #320]	; 1209c <__assert_fail@plt+0x7d0>
   11f58:	mov	r0, #0
   11f5c:	bl	11578 <dcgettext@plt>
   11f60:	mov	r4, r0
   11f64:	ldr	r0, [sp, #36]	; 0x24
   11f68:	bl	1bc1c <lchmod@@Base+0x4590>
   11f6c:	mov	r2, r4
   11f70:	mov	r1, #0
   11f74:	mov	r3, r0
   11f78:	mov	r0, #1
   11f7c:	bl	11638 <error@plt>
   11f80:	mov	r2, #5
   11f84:	ldr	r1, [pc, #276]	; 120a0 <__assert_fail@plt+0x7d4>
   11f88:	mov	r0, #0
   11f8c:	bl	11578 <dcgettext@plt>
   11f90:	mov	r4, r0
   11f94:	ldr	r0, [sp, #52]	; 0x34
   11f98:	b	11f68 <__assert_fail@plt+0x69c>
   11f9c:	mov	r2, #5
   11fa0:	ldr	r1, [pc, #252]	; 120a4 <__assert_fail@plt+0x7d8>
   11fa4:	mov	r0, #0
   11fa8:	bl	11578 <dcgettext@plt>
   11fac:	sub	r3, r5, #-1073741823	; 0xc0000001
   11fb0:	mov	r7, r0
   11fb4:	ldr	r0, [fp, r3, lsl #2]
   11fb8:	bl	1bc1c <lchmod@@Base+0x4590>
   11fbc:	mov	r1, #0
   11fc0:	mov	r2, r7
   11fc4:	mov	r3, r0
   11fc8:	mov	r0, r1
   11fcc:	bl	11638 <error@plt>
   11fd0:	cmp	r4, #4
   11fd4:	bne	11a9c <__assert_fail@plt+0x1d0>
   11fd8:	ldr	r3, [r6]
   11fdc:	sub	r5, r5, r3
   11fe0:	cmp	r5, #2
   11fe4:	bne	11a9c <__assert_fail@plt+0x1d0>
   11fe8:	ldr	r3, [pc, #112]	; 12060 <__assert_fail@plt+0x794>
   11fec:	mov	r2, #5
   11ff0:	ldr	r1, [pc, #176]	; 120a8 <__assert_fail@plt+0x7dc>
   11ff4:	b	11a7c <__assert_fail@plt+0x1b0>
   11ff8:	bl	1171c <__errno_location@plt>
   11ffc:	mov	r2, #5
   12000:	ldr	r1, [pc, #164]	; 120ac <__assert_fail@plt+0x7e0>
   12004:	ldr	r4, [r0]
   12008:	mov	r0, #0
   1200c:	bl	11578 <dcgettext@plt>
   12010:	mov	r5, r0
   12014:	ldr	r0, [sp, #8]
   12018:	bl	1bc1c <lchmod@@Base+0x4590>
   1201c:	b	11f18 <__assert_fail@plt+0x64c>
   12020:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   12024:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12028:	andeq	pc, r1, ip, lsr #16
   1202c:			; <UNDEFINED> instruction: 0x0001f4b0
   12030:	andeq	pc, r1, r8, lsl #8
   12034:	andeq	lr, r1, r8, asr #29
   12038:	andeq	pc, r1, r0, asr #10
   1203c:	andeq	r0, r3, r8, ror #3
   12040:	andeq	r3, r1, r4, asr r2
   12044:	andeq	pc, r1, r8, asr #9
   12048:	andeq	r0, r3, r4, ror #3
   1204c:	andeq	r0, r3, r8, lsl #3
   12050:	andeq	pc, r1, r0, lsr r5	; <UNPREDICTABLE>
   12054:	andeq	lr, r1, r8, lsl pc
   12058:	andeq	pc, r1, r4, lsl #8
   1205c:	andeq	pc, r1, r4, ror #11
   12060:	andeq	r0, r3, r0, ror #3
   12064:	strdeq	pc, [r1], -r8
   12068:	andeq	pc, r1, r8, lsl #19
   1206c:	andeq	pc, r1, r4, ror #9
   12070:	andeq	pc, r1, r4, asr #10
   12074:			; <UNDEFINED> instruction: 0x000001b6
   12078:	ldrdeq	r0, [r3], -r8
   1207c:	andeq	pc, pc, r0, lsl #30
   12080:			; <UNDEFINED> instruction: 0xfffff000
   12084:			; <UNDEFINED> instruction: 0x0001f6b8
   12088:	muleq	r1, r0, r7
   1208c:	andeq	pc, r1, r4, asr r5	; <UNPREDICTABLE>
   12090:	andeq	pc, r1, r0, lsr #13
   12094:	ldrdeq	pc, [r1], -r0
   12098:	andeq	pc, r1, r0, lsl #11
   1209c:	andeq	pc, r1, r0, lsl #13
   120a0:	andeq	pc, r1, r0, ror #12
   120a4:	muleq	r1, r0, r5
   120a8:	andeq	pc, r1, ip, lsr #11
   120ac:	andeq	pc, r1, ip, lsr #12
   120b0:	mov	fp, #0
   120b4:	mov	lr, #0
   120b8:	pop	{r1}		; (ldr r1, [sp], #4)
   120bc:	mov	r2, sp
   120c0:	push	{r2}		; (str r2, [sp, #-4]!)
   120c4:	push	{r0}		; (str r0, [sp, #-4]!)
   120c8:	ldr	ip, [pc, #16]	; 120e0 <__assert_fail@plt+0x814>
   120cc:	push	{ip}		; (str ip, [sp, #-4]!)
   120d0:	ldr	r0, [pc, #12]	; 120e4 <__assert_fail@plt+0x818>
   120d4:	ldr	r3, [pc, #12]	; 120e8 <__assert_fail@plt+0x81c>
   120d8:	bl	11668 <__libc_start_main@plt>
   120dc:	bl	11878 <abort@plt>
   120e0:	andeq	lr, r1, r8, ror #28
   120e4:	ldrdeq	r1, [r1], -r8
   120e8:	andeq	lr, r1, r8, lsl #28
   120ec:	ldr	r3, [pc, #20]	; 12108 <__assert_fail@plt+0x83c>
   120f0:	ldr	r2, [pc, #20]	; 1210c <__assert_fail@plt+0x840>
   120f4:	add	r3, pc, r3
   120f8:	ldr	r2, [r3, r2]
   120fc:	cmp	r2, #0
   12100:	bxeq	lr
   12104:	b	11680 <__gmon_start__@plt>
   12108:	andeq	sp, r1, r4, lsl #30
   1210c:	andeq	r0, r0, ip, ror r1
   12110:	ldr	r3, [pc, #28]	; 12134 <__assert_fail@plt+0x868>
   12114:	ldr	r0, [pc, #28]	; 12138 <__assert_fail@plt+0x86c>
   12118:	sub	r3, r3, r0
   1211c:	cmp	r3, #6
   12120:	bxls	lr
   12124:	ldr	r3, [pc, #16]	; 1213c <__assert_fail@plt+0x870>
   12128:	cmp	r3, #0
   1212c:	bxeq	lr
   12130:	bx	r3
   12134:	ldrdeq	r0, [r3], -r3
   12138:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1213c:	andeq	r0, r0, r0
   12140:	ldr	r1, [pc, #36]	; 1216c <__assert_fail@plt+0x8a0>
   12144:	ldr	r0, [pc, #36]	; 12170 <__assert_fail@plt+0x8a4>
   12148:	sub	r1, r1, r0
   1214c:	asr	r1, r1, #2
   12150:	add	r1, r1, r1, lsr #31
   12154:	asrs	r1, r1, #1
   12158:	bxeq	lr
   1215c:	ldr	r3, [pc, #16]	; 12174 <__assert_fail@plt+0x8a8>
   12160:	cmp	r3, #0
   12164:	bxeq	lr
   12168:	bx	r3
   1216c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   12170:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   12174:	andeq	r0, r0, r0
   12178:	push	{r4, lr}
   1217c:	ldr	r4, [pc, #24]	; 1219c <__assert_fail@plt+0x8d0>
   12180:	ldrb	r3, [r4]
   12184:	cmp	r3, #0
   12188:	popne	{r4, pc}
   1218c:	bl	12110 <__assert_fail@plt+0x844>
   12190:	mov	r3, #1
   12194:	strb	r3, [r4]
   12198:	pop	{r4, pc}
   1219c:	andeq	r0, r3, ip, ror #3
   121a0:	ldr	r0, [pc, #40]	; 121d0 <__assert_fail@plt+0x904>
   121a4:	ldr	r3, [r0]
   121a8:	cmp	r3, #0
   121ac:	bne	121b4 <__assert_fail@plt+0x8e8>
   121b0:	b	12140 <__assert_fail@plt+0x874>
   121b4:	ldr	r3, [pc, #24]	; 121d4 <__assert_fail@plt+0x908>
   121b8:	cmp	r3, #0
   121bc:	beq	121b0 <__assert_fail@plt+0x8e4>
   121c0:	push	{r4, lr}
   121c4:	blx	r3
   121c8:	pop	{r4, lr}
   121cc:	b	12140 <__assert_fail@plt+0x874>
   121d0:	andeq	pc, r2, ip, lsl #30
   121d4:	andeq	r0, r0, r0
   121d8:	subs	r5, r0, #0
   121dc:	push	{r7, lr}
   121e0:	sub	sp, sp, #56	; 0x38
   121e4:	beq	12220 <__assert_fail@plt+0x954>
   121e8:	ldr	r3, [pc, #764]	; 124ec <__assert_fail@plt+0xc20>
   121ec:	mov	r2, #5
   121f0:	ldr	r1, [pc, #760]	; 124f0 <__assert_fail@plt+0xc24>
   121f4:	mov	r0, #0
   121f8:	ldr	r4, [r3]
   121fc:	bl	11578 <dcgettext@plt>
   12200:	ldr	r3, [pc, #748]	; 124f4 <__assert_fail@plt+0xc28>
   12204:	mov	r1, #1
   12208:	ldr	r3, [r3]
   1220c:	mov	r2, r0
   12210:	mov	r0, r4
   12214:	bl	11764 <__fprintf_chk@plt>
   12218:	mov	r0, r5
   1221c:	bl	116c8 <exit@plt>
   12220:	mov	r2, #5
   12224:	ldr	r1, [pc, #716]	; 124f8 <__assert_fail@plt+0xc2c>
   12228:	bl	11578 <dcgettext@plt>
   1222c:	ldr	r3, [pc, #704]	; 124f4 <__assert_fail@plt+0xc28>
   12230:	ldr	r7, [pc, #708]	; 124fc <__assert_fail@plt+0xc30>
   12234:	ldr	r4, [pc, #708]	; 12500 <__assert_fail@plt+0xc34>
   12238:	ldr	r2, [r3]
   1223c:	mov	r1, r0
   12240:	mov	r0, #1
   12244:	bl	1174c <__printf_chk@plt>
   12248:	mov	r2, #5
   1224c:	ldr	r1, [pc, #688]	; 12504 <__assert_fail@plt+0xc38>
   12250:	mov	r0, r5
   12254:	bl	11578 <dcgettext@plt>
   12258:	ldr	r1, [r7]
   1225c:	bl	114ac <fputs_unlocked@plt>
   12260:	mov	r2, #5
   12264:	ldr	r1, [pc, #668]	; 12508 <__assert_fail@plt+0xc3c>
   12268:	mov	r0, r5
   1226c:	bl	11578 <dcgettext@plt>
   12270:	ldr	r1, [r7]
   12274:	bl	114ac <fputs_unlocked@plt>
   12278:	mov	r2, #5
   1227c:	ldr	r1, [pc, #648]	; 1250c <__assert_fail@plt+0xc40>
   12280:	mov	r0, r5
   12284:	bl	11578 <dcgettext@plt>
   12288:	ldr	r1, [r7]
   1228c:	bl	114ac <fputs_unlocked@plt>
   12290:	mov	r2, #5
   12294:	ldr	r1, [pc, #628]	; 12510 <__assert_fail@plt+0xc44>
   12298:	mov	r0, r5
   1229c:	bl	11578 <dcgettext@plt>
   122a0:	ldr	r1, [r7]
   122a4:	bl	114ac <fputs_unlocked@plt>
   122a8:	mov	r2, #5
   122ac:	ldr	r1, [pc, #608]	; 12514 <__assert_fail@plt+0xc48>
   122b0:	mov	r0, r5
   122b4:	bl	11578 <dcgettext@plt>
   122b8:	ldr	r1, [r7]
   122bc:	bl	114ac <fputs_unlocked@plt>
   122c0:	mov	r2, #5
   122c4:	ldr	r1, [pc, #588]	; 12518 <__assert_fail@plt+0xc4c>
   122c8:	mov	r0, r5
   122cc:	bl	11578 <dcgettext@plt>
   122d0:	ldr	r1, [r7]
   122d4:	bl	114ac <fputs_unlocked@plt>
   122d8:	mov	r2, #5
   122dc:	ldr	r1, [pc, #568]	; 1251c <__assert_fail@plt+0xc50>
   122e0:	mov	r0, r5
   122e4:	bl	11578 <dcgettext@plt>
   122e8:	ldr	r1, [r7]
   122ec:	bl	114ac <fputs_unlocked@plt>
   122f0:	mov	r2, #5
   122f4:	ldr	r1, [pc, #548]	; 12520 <__assert_fail@plt+0xc54>
   122f8:	mov	r0, r5
   122fc:	bl	11578 <dcgettext@plt>
   12300:	ldr	r1, [r7]
   12304:	bl	114ac <fputs_unlocked@plt>
   12308:	mov	r2, #5
   1230c:	ldr	r1, [pc, #528]	; 12524 <__assert_fail@plt+0xc58>
   12310:	mov	r0, r5
   12314:	bl	11578 <dcgettext@plt>
   12318:	ldr	r2, [pc, #520]	; 12528 <__assert_fail@plt+0xc5c>
   1231c:	mov	r1, r0
   12320:	mov	r0, #1
   12324:	bl	1174c <__printf_chk@plt>
   12328:	ldm	r4!, {r0, r1, r2, r3}
   1232c:	mov	lr, sp
   12330:	stmia	lr!, {r0, r1, r2, r3}
   12334:	ldm	r4!, {r0, r1, r2, r3}
   12338:	ldr	ip, [sp]
   1233c:	stmia	lr!, {r0, r1, r2, r3}
   12340:	cmp	ip, #0
   12344:	ldm	r4!, {r0, r1, r2, r3}
   12348:	stmia	lr!, {r0, r1, r2, r3}
   1234c:	ldm	r4, {r0, r1}
   12350:	moveq	r4, sp
   12354:	stm	lr, {r0, r1}
   12358:	beq	12388 <__assert_fail@plt+0xabc>
   1235c:	ldr	r6, [pc, #452]	; 12528 <__assert_fail@plt+0xc5c>
   12360:	mov	r4, sp
   12364:	b	12374 <__assert_fail@plt+0xaa8>
   12368:	ldr	ip, [r4, #8]!
   1236c:	cmp	ip, #0
   12370:	beq	12388 <__assert_fail@plt+0xabc>
   12374:	mov	r1, ip
   12378:	mov	r0, r6
   1237c:	bl	114d0 <strcmp@plt>
   12380:	cmp	r0, #0
   12384:	bne	12368 <__assert_fail@plt+0xa9c>
   12388:	ldr	r4, [r4, #4]
   1238c:	mov	r2, #5
   12390:	cmp	r4, #0
   12394:	ldr	r1, [pc, #400]	; 1252c <__assert_fail@plt+0xc60>
   12398:	beq	12440 <__assert_fail@plt+0xb74>
   1239c:	mov	r0, #0
   123a0:	bl	11578 <dcgettext@plt>
   123a4:	ldr	r3, [pc, #388]	; 12530 <__assert_fail@plt+0xc64>
   123a8:	ldr	r2, [pc, #388]	; 12534 <__assert_fail@plt+0xc68>
   123ac:	mov	r1, r0
   123b0:	mov	r0, #1
   123b4:	bl	1174c <__printf_chk@plt>
   123b8:	mov	r1, #0
   123bc:	mov	r0, #5
   123c0:	bl	11794 <setlocale@plt>
   123c4:	cmp	r0, #0
   123c8:	ldreq	r6, [pc, #344]	; 12528 <__assert_fail@plt+0xc5c>
   123cc:	beq	123e8 <__assert_fail@plt+0xb1c>
   123d0:	mov	r2, #3
   123d4:	ldr	r1, [pc, #348]	; 12538 <__assert_fail@plt+0xc6c>
   123d8:	bl	1186c <strncmp@plt>
   123dc:	ldr	r6, [pc, #324]	; 12528 <__assert_fail@plt+0xc5c>
   123e0:	cmp	r0, #0
   123e4:	bne	124d0 <__assert_fail@plt+0xc04>
   123e8:	mov	r2, #5
   123ec:	ldr	r1, [pc, #328]	; 1253c <__assert_fail@plt+0xc70>
   123f0:	mov	r0, #0
   123f4:	bl	11578 <dcgettext@plt>
   123f8:	ldr	r3, [pc, #296]	; 12528 <__assert_fail@plt+0xc5c>
   123fc:	ldr	r2, [pc, #300]	; 12530 <__assert_fail@plt+0xc64>
   12400:	mov	r1, r0
   12404:	mov	r0, #1
   12408:	bl	1174c <__printf_chk@plt>
   1240c:	mov	r2, #5
   12410:	ldr	r1, [pc, #296]	; 12540 <__assert_fail@plt+0xc74>
   12414:	mov	r0, #0
   12418:	bl	11578 <dcgettext@plt>
   1241c:	ldr	r2, [pc, #288]	; 12544 <__assert_fail@plt+0xc78>
   12420:	cmp	r4, r6
   12424:	ldr	r3, [pc, #284]	; 12548 <__assert_fail@plt+0xc7c>
   12428:	movne	r3, r2
   1242c:	mov	r1, r0
   12430:	mov	r2, r4
   12434:	mov	r0, #1
   12438:	bl	1174c <__printf_chk@plt>
   1243c:	b	12218 <__assert_fail@plt+0x94c>
   12440:	mov	r0, r4
   12444:	bl	11578 <dcgettext@plt>
   12448:	ldr	r3, [pc, #224]	; 12530 <__assert_fail@plt+0xc64>
   1244c:	ldr	r2, [pc, #224]	; 12534 <__assert_fail@plt+0xc68>
   12450:	mov	r1, r0
   12454:	mov	r0, #1
   12458:	bl	1174c <__printf_chk@plt>
   1245c:	mov	r1, r4
   12460:	mov	r0, #5
   12464:	bl	11794 <setlocale@plt>
   12468:	cmp	r0, #0
   1246c:	beq	12484 <__assert_fail@plt+0xbb8>
   12470:	mov	r2, #3
   12474:	ldr	r1, [pc, #188]	; 12538 <__assert_fail@plt+0xc6c>
   12478:	bl	1186c <strncmp@plt>
   1247c:	cmp	r0, #0
   12480:	bne	124c8 <__assert_fail@plt+0xbfc>
   12484:	mov	r2, #5
   12488:	ldr	r1, [pc, #172]	; 1253c <__assert_fail@plt+0xc70>
   1248c:	mov	r0, #0
   12490:	bl	11578 <dcgettext@plt>
   12494:	ldr	r3, [pc, #140]	; 12528 <__assert_fail@plt+0xc5c>
   12498:	ldr	r2, [pc, #144]	; 12530 <__assert_fail@plt+0xc64>
   1249c:	mov	r4, r3
   124a0:	mov	r1, r0
   124a4:	mov	r0, #1
   124a8:	bl	1174c <__printf_chk@plt>
   124ac:	ldr	r1, [pc, #140]	; 12540 <__assert_fail@plt+0xc74>
   124b0:	mov	r2, #5
   124b4:	mov	r0, #0
   124b8:	bl	11578 <dcgettext@plt>
   124bc:	ldr	r3, [pc, #132]	; 12548 <__assert_fail@plt+0xc7c>
   124c0:	mov	r1, r0
   124c4:	b	12430 <__assert_fail@plt+0xb64>
   124c8:	ldr	r6, [pc, #88]	; 12528 <__assert_fail@plt+0xc5c>
   124cc:	mov	r4, r6
   124d0:	mov	r2, #5
   124d4:	ldr	r1, [pc, #112]	; 1254c <__assert_fail@plt+0xc80>
   124d8:	mov	r0, #0
   124dc:	bl	11578 <dcgettext@plt>
   124e0:	ldr	r1, [r7]
   124e4:	bl	114ac <fputs_unlocked@plt>
   124e8:	b	123e8 <__assert_fail@plt+0xb1c>
   124ec:	andeq	r0, r3, r0, ror #3
   124f0:	andeq	lr, r1, r0, lsr #30
   124f4:	strdeq	r0, [r3], -r8
   124f8:	andeq	lr, r1, r8, asr #30
   124fc:	andeq	r0, r3, r4, ror #3
   12500:	muleq	r1, r0, lr
   12504:	andeq	lr, r1, r8, ror pc
   12508:	andeq	lr, r1, ip, lsr #31
   1250c:	strdeq	lr, [r1], -r8
   12510:	andeq	pc, r1, r4, asr #32
   12514:	andeq	pc, r1, r4, lsl r1	; <UNPREDICTABLE>
   12518:	andeq	pc, r1, r4, asr #2
   1251c:	andeq	pc, r1, ip, ror r1	; <UNPREDICTABLE>
   12520:	andeq	pc, r1, r4, lsl #5
   12524:	andeq	pc, r1, r4, lsl #6
   12528:	andeq	lr, r1, r8, lsl pc
   1252c:	andeq	pc, r1, r4, asr #7
   12530:	ldrdeq	pc, [r1], -ip
   12534:	andeq	pc, r1, r4, lsl #8
   12538:	andeq	pc, r1, r4, lsl r4	; <UNPREDICTABLE>
   1253c:	andeq	pc, r1, r0, ror #8
   12540:	andeq	pc, r1, ip, ror r4	; <UNPREDICTABLE>
   12544:	andeq	pc, r1, ip, lsr #16
   12548:	strdeq	pc, [r1], -r8
   1254c:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   12550:	push	{r4, r5, r6, r7, r8, r9, lr}
   12554:	sub	sp, sp, #116	; 0x74
   12558:	mov	r4, #0
   1255c:	subs	r9, r0, #0
   12560:	mov	r6, r1
   12564:	str	r4, [sp]
   12568:	str	r4, [sp, #4]
   1256c:	beq	12714 <__assert_fail@plt+0xe48>
   12570:	mov	r1, #32768	; 0x8000
   12574:	mov	r0, r6
   12578:	bl	11644 <open64@plt>
   1257c:	cmn	r0, #1
   12580:	mov	r5, r0
   12584:	beq	1263c <__assert_fail@plt+0xd70>
   12588:	mov	r1, r0
   1258c:	add	r2, sp, #8
   12590:	mov	r0, #3
   12594:	bl	115d8 <__fxstat64@plt>
   12598:	cmp	r0, #0
   1259c:	blt	126ac <__assert_fail@plt+0xde0>
   125a0:	bl	1171c <__errno_location@plt>
   125a4:	mov	r7, r0
   125a8:	mov	r0, r9
   125ac:	ldr	r3, [sp, #24]
   125b0:	mov	r2, r6
   125b4:	mov	r1, sp
   125b8:	bl	11494 <selabel_lookup@plt>
   125bc:	cmp	r0, #0
   125c0:	blt	12688 <__assert_fail@plt+0xdbc>
   125c4:	ldr	r0, [sp]
   125c8:	bl	11554 <context_new@plt>
   125cc:	subs	r9, r0, #0
   125d0:	beq	12778 <__assert_fail@plt+0xeac>
   125d4:	cmn	r5, #1
   125d8:	add	r1, sp, #4
   125dc:	beq	126e8 <__assert_fail@plt+0xe1c>
   125e0:	mov	r0, r5
   125e4:	bl	1bfe0 <lchmod@@Base+0x4954>
   125e8:	cmp	r0, #0
   125ec:	blt	1276c <__assert_fail@plt+0xea0>
   125f0:	ldr	r0, [sp, #4]
   125f4:	bl	11554 <context_new@plt>
   125f8:	subs	r4, r0, #0
   125fc:	beq	127c0 <__assert_fail@plt+0xef4>
   12600:	mov	r0, r9
   12604:	bl	114dc <context_type_get@plt>
   12608:	subs	r1, r0, #0
   1260c:	beq	12620 <__assert_fail@plt+0xd54>
   12610:	mov	r0, r4
   12614:	bl	11584 <context_type_set@plt>
   12618:	cmp	r0, #0
   1261c:	beq	12784 <__assert_fail@plt+0xeb8>
   12620:	ldr	r8, [r7]
   12624:	cmn	r5, #1
   12628:	beq	12654 <__assert_fail@plt+0xd88>
   1262c:	mvn	r6, #0
   12630:	mov	r0, r5
   12634:	bl	11884 <close@plt>
   12638:	b	12658 <__assert_fail@plt+0xd8c>
   1263c:	bl	1171c <__errno_location@plt>
   12640:	ldr	r8, [r0]
   12644:	mov	r7, r0
   12648:	cmp	r8, #40	; 0x28
   1264c:	movne	r9, r4
   12650:	beq	126c4 <__assert_fail@plt+0xdf8>
   12654:	mov	r6, r5
   12658:	mov	r0, r9
   1265c:	bl	1168c <context_free@plt>
   12660:	mov	r0, r4
   12664:	bl	1168c <context_free@plt>
   12668:	ldr	r0, [sp]
   1266c:	bl	1180c <freecon@plt>
   12670:	ldr	r0, [sp, #4]
   12674:	bl	1180c <freecon@plt>
   12678:	str	r8, [r7]
   1267c:	mov	r0, r6
   12680:	add	sp, sp, #116	; 0x74
   12684:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12688:	ldr	r8, [r7]
   1268c:	cmp	r8, #2
   12690:	movne	r4, #0
   12694:	movne	r9, r4
   12698:	moveq	r8, #61	; 0x3d
   1269c:	moveq	r4, #0
   126a0:	streq	r8, [r7]
   126a4:	moveq	r9, r4
   126a8:	b	12624 <__assert_fail@plt+0xd58>
   126ac:	bl	1171c <__errno_location@plt>
   126b0:	mov	r9, r4
   126b4:	mvn	r6, #0
   126b8:	mov	r7, r0
   126bc:	ldr	r8, [r7]
   126c0:	b	12630 <__assert_fail@plt+0xd64>
   126c4:	add	r2, sp, #8
   126c8:	mov	r1, r6
   126cc:	mov	r0, #3
   126d0:	bl	11890 <__lxstat64@plt>
   126d4:	cmp	r0, #0
   126d8:	bge	125a8 <__assert_fail@plt+0xcdc>
   126dc:	mov	r9, r4
   126e0:	ldr	r8, [r7]
   126e4:	b	12654 <__assert_fail@plt+0xd88>
   126e8:	mov	r0, r6
   126ec:	bl	1bf6c <lchmod@@Base+0x48e0>
   126f0:	cmp	r0, #0
   126f4:	blt	12760 <__assert_fail@plt+0xe94>
   126f8:	ldr	r0, [sp, #4]
   126fc:	bl	11554 <context_new@plt>
   12700:	subs	r4, r0, #0
   12704:	moveq	r6, r5
   12708:	ldreq	r8, [r7]
   1270c:	beq	12658 <__assert_fail@plt+0xd8c>
   12710:	b	12600 <__assert_fail@plt+0xd34>
   12714:	add	r0, sp, #4
   12718:	bl	11824 <getfscreatecon@plt>
   1271c:	cmp	r0, r4
   12720:	blt	127e0 <__assert_fail@plt+0xf14>
   12724:	ldr	r1, [sp, #4]
   12728:	cmp	r1, r4
   1272c:	beq	127cc <__assert_fail@plt+0xf00>
   12730:	mov	r0, r6
   12734:	bl	114f4 <lsetfilecon@plt>
   12738:	mov	r6, r0
   1273c:	bl	1171c <__errno_location@plt>
   12740:	mov	r4, r0
   12744:	ldr	r0, [sp, #4]
   12748:	ldr	r5, [r4]
   1274c:	bl	1180c <freecon@plt>
   12750:	mov	r0, r6
   12754:	str	r5, [r4]
   12758:	add	sp, sp, #116	; 0x74
   1275c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12760:	ldr	r8, [r7]
   12764:	mov	r4, #0
   12768:	b	12654 <__assert_fail@plt+0xd88>
   1276c:	mov	r4, #0
   12770:	mvn	r6, #0
   12774:	b	126bc <__assert_fail@plt+0xdf0>
   12778:	ldr	r8, [r7]
   1277c:	mov	r4, r9
   12780:	b	12624 <__assert_fail@plt+0xd58>
   12784:	mov	r0, r4
   12788:	bl	1183c <context_str@plt>
   1278c:	subs	r1, r0, #0
   12790:	beq	12620 <__assert_fail@plt+0xd54>
   12794:	cmn	r5, #1
   12798:	beq	127ac <__assert_fail@plt+0xee0>
   1279c:	mov	r0, r5
   127a0:	bl	117a0 <fsetfilecon@plt>
   127a4:	mov	r6, r0
   127a8:	b	126bc <__assert_fail@plt+0xdf0>
   127ac:	mov	r0, r6
   127b0:	bl	114f4 <lsetfilecon@plt>
   127b4:	ldr	r8, [r7]
   127b8:	mov	r5, r0
   127bc:	b	12654 <__assert_fail@plt+0xd88>
   127c0:	ldr	r8, [r7]
   127c4:	mvn	r6, #0
   127c8:	b	12630 <__assert_fail@plt+0xd64>
   127cc:	bl	1171c <__errno_location@plt>
   127d0:	mov	r3, #61	; 0x3d
   127d4:	mvn	r6, #0
   127d8:	str	r3, [r0]
   127dc:	b	1267c <__assert_fail@plt+0xdb0>
   127e0:	mvn	r6, #0
   127e4:	b	1267c <__assert_fail@plt+0xdb0>
   127e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   127ec:	mov	r4, r1
   127f0:	ldrb	r1, [r1]
   127f4:	sub	sp, sp, #20
   127f8:	mov	r3, #0
   127fc:	cmp	r1, #47	; 0x2f
   12800:	mov	r7, r0
   12804:	mov	r5, r2
   12808:	str	r3, [sp]
   1280c:	str	r3, [sp, #4]
   12810:	beq	129ac <__assert_fail@plt+0x10e0>
   12814:	mov	r0, r4
   12818:	mov	r1, #2
   1281c:	bl	12b38 <__assert_fail@plt+0x126c>
   12820:	subs	r6, r0, #0
   12824:	movne	r4, r6
   12828:	beq	12a08 <__assert_fail@plt+0x113c>
   1282c:	mov	r0, r7
   12830:	mov	r3, r5
   12834:	mov	r2, r4
   12838:	mov	r1, sp
   1283c:	bl	11494 <selabel_lookup@plt>
   12840:	cmp	r0, #0
   12844:	blt	12974 <__assert_fail@plt+0x10a8>
   12848:	mov	r0, r4
   1284c:	mov	r4, #0
   12850:	str	r4, [sp, #8]
   12854:	str	r4, [sp, #12]
   12858:	bl	13338 <__assert_fail@plt+0x1a6c>
   1285c:	mov	r7, r0
   12860:	add	r0, sp, #8
   12864:	bl	11614 <getcon@plt>
   12868:	cmp	r0, r4
   1286c:	blt	129b4 <__assert_fail@plt+0x10e8>
   12870:	add	r1, sp, #12
   12874:	mov	r0, r7
   12878:	bl	1bef8 <lchmod@@Base+0x486c>
   1287c:	cmp	r0, #0
   12880:	blt	129b4 <__assert_fail@plt+0x10e8>
   12884:	mov	r0, r5
   12888:	bl	118a8 <mode_to_security_class@plt>
   1288c:	subs	r2, r0, #0
   12890:	beq	129b4 <__assert_fail@plt+0x10e8>
   12894:	add	r3, sp, #4
   12898:	ldr	r1, [sp, #12]
   1289c:	ldr	r0, [sp, #8]
   128a0:	bl	117dc <security_compute_create@plt>
   128a4:	mov	r8, r0
   128a8:	bl	1171c <__errno_location@plt>
   128ac:	mov	r9, r0
   128b0:	mov	r0, r7
   128b4:	ldr	r5, [r9]
   128b8:	bl	1355c <__assert_fail@plt+0x1c90>
   128bc:	ldr	r0, [sp, #8]
   128c0:	bl	1180c <freecon@plt>
   128c4:	ldr	r0, [sp, #12]
   128c8:	bl	1180c <freecon@plt>
   128cc:	cmp	r8, #0
   128d0:	str	r5, [r9]
   128d4:	movlt	r7, r4
   128d8:	mvnlt	r8, #0
   128dc:	blt	1293c <__assert_fail@plt+0x1070>
   128e0:	ldr	r0, [sp]
   128e4:	bl	11554 <context_new@plt>
   128e8:	subs	r7, r0, #0
   128ec:	beq	129f8 <__assert_fail@plt+0x112c>
   128f0:	ldr	r0, [sp, #4]
   128f4:	bl	11554 <context_new@plt>
   128f8:	subs	r4, r0, #0
   128fc:	beq	129ec <__assert_fail@plt+0x1120>
   12900:	mov	r0, r7
   12904:	bl	114dc <context_type_get@plt>
   12908:	subs	r1, r0, #0
   1290c:	beq	129ec <__assert_fail@plt+0x1120>
   12910:	mov	r0, r4
   12914:	bl	11584 <context_type_set@plt>
   12918:	cmp	r0, #0
   1291c:	bne	129ec <__assert_fail@plt+0x1120>
   12920:	mov	r0, r4
   12924:	bl	1183c <context_str@plt>
   12928:	cmp	r0, #0
   1292c:	beq	129ec <__assert_fail@plt+0x1120>
   12930:	bl	11710 <setfscreatecon@plt>
   12934:	ldr	r5, [r9]
   12938:	mov	r8, r0
   1293c:	mov	r0, r7
   12940:	bl	1168c <context_free@plt>
   12944:	mov	r0, r4
   12948:	bl	1168c <context_free@plt>
   1294c:	ldr	r0, [sp]
   12950:	bl	1180c <freecon@plt>
   12954:	ldr	r0, [sp, #4]
   12958:	bl	1180c <freecon@plt>
   1295c:	mov	r0, r6
   12960:	bl	1355c <__assert_fail@plt+0x1c90>
   12964:	mov	r0, r8
   12968:	str	r5, [r9]
   1296c:	add	sp, sp, #20
   12970:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12974:	bl	1171c <__errno_location@plt>
   12978:	ldr	r5, [r0]
   1297c:	mov	r9, r0
   12980:	cmp	r5, #2
   12984:	movne	r4, #0
   12988:	movne	r7, r4
   1298c:	mvnne	r8, #0
   12990:	bne	1293c <__assert_fail@plt+0x1070>
   12994:	mov	r5, #61	; 0x3d
   12998:	mov	r4, #0
   1299c:	str	r5, [r0]
   129a0:	mov	r7, r4
   129a4:	mvn	r8, #0
   129a8:	b	1293c <__assert_fail@plt+0x1070>
   129ac:	mov	r6, r3
   129b0:	b	1282c <__assert_fail@plt+0xf60>
   129b4:	bl	1171c <__errno_location@plt>
   129b8:	mov	r4, #0
   129bc:	mvn	r8, #0
   129c0:	mov	r9, r0
   129c4:	mov	r0, r7
   129c8:	ldr	r5, [r9]
   129cc:	bl	1355c <__assert_fail@plt+0x1c90>
   129d0:	ldr	r0, [sp, #8]
   129d4:	bl	1180c <freecon@plt>
   129d8:	ldr	r0, [sp, #12]
   129dc:	bl	1180c <freecon@plt>
   129e0:	mov	r7, r4
   129e4:	str	r5, [r9]
   129e8:	b	1293c <__assert_fail@plt+0x1070>
   129ec:	ldr	r5, [r9]
   129f0:	mvn	r8, #0
   129f4:	b	1293c <__assert_fail@plt+0x1070>
   129f8:	ldr	r5, [r9]
   129fc:	mov	r4, r7
   12a00:	mvn	r8, #0
   12a04:	b	1293c <__assert_fail@plt+0x1070>
   12a08:	bl	1171c <__errno_location@plt>
   12a0c:	mov	r4, r6
   12a10:	mov	r7, r6
   12a14:	mvn	r8, #0
   12a18:	mov	r9, r0
   12a1c:	ldr	r5, [r0]
   12a20:	b	1293c <__assert_fail@plt+0x1070>
   12a24:	push	{r4, r5, r6, r7, r8, lr}
   12a28:	mov	r3, r1
   12a2c:	ldrb	r1, [r1]
   12a30:	sub	sp, sp, #8
   12a34:	mov	r5, r0
   12a38:	cmp	r1, #47	; 0x2f
   12a3c:	mov	r4, r2
   12a40:	beq	12aec <__assert_fail@plt+0x1220>
   12a44:	mov	r0, r3
   12a48:	mov	r1, #2
   12a4c:	bl	12b38 <__assert_fail@plt+0x126c>
   12a50:	subs	r8, r0, #0
   12a54:	beq	12b30 <__assert_fail@plt+0x1264>
   12a58:	cmp	r4, #0
   12a5c:	mov	r3, r8
   12a60:	beq	12af8 <__assert_fail@plt+0x122c>
   12a64:	mov	r2, #0
   12a68:	mov	r1, #16
   12a6c:	mov	r0, sp
   12a70:	str	r3, [sp]
   12a74:	str	r2, [sp, #4]
   12a78:	mov	r7, r2
   12a7c:	bl	1d154 <lchmod@@Base+0x5ac8>
   12a80:	mov	r4, r0
   12a84:	bl	1171c <__errno_location@plt>
   12a88:	mov	r6, r0
   12a8c:	b	12aa0 <__assert_fail@plt+0x11d4>
   12a90:	ldr	r1, [r4, #24]
   12a94:	bl	12550 <__assert_fail@plt+0xc84>
   12a98:	cmp	r0, #0
   12a9c:	ldrlt	r7, [r6]
   12aa0:	mov	r0, r4
   12aa4:	bl	1511c <__assert_fail@plt+0x3850>
   12aa8:	cmp	r0, #0
   12aac:	mov	r0, r5
   12ab0:	bne	12a90 <__assert_fail@plt+0x11c4>
   12ab4:	mov	r0, r4
   12ab8:	ldr	r4, [r6]
   12abc:	bl	14f54 <__assert_fail@plt+0x3688>
   12ac0:	cmp	r4, #0
   12ac4:	moveq	r4, r7
   12ac8:	cmp	r0, #0
   12acc:	mov	r0, r8
   12ad0:	ldrne	r4, [r6]
   12ad4:	bl	1355c <__assert_fail@plt+0x1c90>
   12ad8:	clz	r4, r4
   12adc:	lsr	r4, r4, #5
   12ae0:	mov	r0, r4
   12ae4:	add	sp, sp, #8
   12ae8:	pop	{r4, r5, r6, r7, r8, pc}
   12aec:	cmp	r4, #0
   12af0:	mov	r8, #0
   12af4:	bne	12a64 <__assert_fail@plt+0x1198>
   12af8:	mov	r1, r3
   12afc:	mov	r0, r5
   12b00:	bl	12550 <__assert_fail@plt+0xc84>
   12b04:	adds	r4, r0, #1
   12b08:	movne	r4, #1
   12b0c:	bl	1171c <__errno_location@plt>
   12b10:	mov	r5, r0
   12b14:	mov	r0, r8
   12b18:	ldr	r6, [r5]
   12b1c:	bl	1355c <__assert_fail@plt+0x1c90>
   12b20:	mov	r0, r4
   12b24:	str	r6, [r5]
   12b28:	add	sp, sp, #8
   12b2c:	pop	{r4, r5, r6, r7, r8, pc}
   12b30:	mov	r4, r8
   12b34:	b	12ae0 <__assert_fail@plt+0x1214>
   12b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b3c:	and	r9, r1, #3
   12b40:	sub	r3, r9, #1
   12b44:	sub	sp, sp, #3232	; 0xca0
   12b48:	tst	r3, r9
   12b4c:	sub	sp, sp, #12
   12b50:	bne	12d34 <__assert_fail@plt+0x1468>
   12b54:	cmp	r0, #0
   12b58:	mov	r8, r0
   12b5c:	beq	12d34 <__assert_fail@plt+0x1468>
   12b60:	ldrb	r6, [r0]
   12b64:	cmp	r6, #0
   12b68:	beq	12d70 <__assert_fail@plt+0x14a4>
   12b6c:	add	fp, sp, #2208	; 0x8a0
   12b70:	mov	r5, r1
   12b74:	add	r3, sp, #1184	; 0x4a0
   12b78:	mov	r1, #1024	; 0x400
   12b7c:	add	fp, fp, #8
   12b80:	add	sl, sp, #152	; 0x98
   12b84:	cmp	r6, #47	; 0x2f
   12b88:	str	r3, [sp, #1176]	; 0x498
   12b8c:	str	r1, [sp, #1180]	; 0x49c
   12b90:	str	r1, [sp, #2212]	; 0x8a4
   12b94:	str	r1, [sp, #148]	; 0x94
   12b98:	str	fp, [sp, #2208]	; 0x8a0
   12b9c:	str	sl, [sp, #144]	; 0x90
   12ba0:	beq	12c4c <__assert_fail@plt+0x1380>
   12ba4:	mov	r4, sl
   12ba8:	sub	r6, sl, #8
   12bac:	mov	r0, r4
   12bb0:	bl	116bc <getcwd@plt>
   12bb4:	cmp	r0, #0
   12bb8:	bne	12eec <__assert_fail@plt+0x1620>
   12bbc:	bl	1171c <__errno_location@plt>
   12bc0:	ldr	r3, [r0]
   12bc4:	cmp	r3, #12
   12bc8:	beq	12d30 <__assert_fail@plt+0x1464>
   12bcc:	cmp	r3, #34	; 0x22
   12bd0:	beq	12c30 <__assert_fail@plt+0x1364>
   12bd4:	mov	r5, r4
   12bd8:	mov	r6, #1
   12bdc:	ldr	r0, [sp, #1176]	; 0x498
   12be0:	add	r3, sp, #1184	; 0x4a0
   12be4:	cmp	r0, r3
   12be8:	beq	12bf0 <__assert_fail@plt+0x1324>
   12bec:	bl	1355c <__assert_fail@plt+0x1c90>
   12bf0:	ldr	r0, [sp, #2208]	; 0x8a0
   12bf4:	cmp	r0, fp
   12bf8:	beq	12c00 <__assert_fail@plt+0x1334>
   12bfc:	bl	1355c <__assert_fail@plt+0x1c90>
   12c00:	cmp	r6, #0
   12c04:	beq	12d54 <__assert_fail@plt+0x1488>
   12c08:	ldr	r0, [sp, #144]	; 0x90
   12c0c:	cmp	r0, sl
   12c10:	moveq	r6, #0
   12c14:	beq	12c20 <__assert_fail@plt+0x1354>
   12c18:	bl	1355c <__assert_fail@plt+0x1c90>
   12c1c:	mov	r6, #0
   12c20:	mov	r0, r6
   12c24:	add	sp, sp, #3232	; 0xca0
   12c28:	add	sp, sp, #12
   12c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c30:	mov	r0, r6
   12c34:	bl	1bdec <lchmod@@Base+0x4760>
   12c38:	cmp	r0, #0
   12c3c:	beq	12d30 <__assert_fail@plt+0x1464>
   12c40:	ldr	r4, [sp, #144]	; 0x90
   12c44:	ldr	r1, [sp, #148]	; 0x94
   12c48:	b	12bac <__assert_fail@plt+0x12e0>
   12c4c:	mov	r4, sl
   12c50:	add	r0, sl, #1
   12c54:	strb	r6, [sp, #152]	; 0x98
   12c58:	mov	r3, #0
   12c5c:	and	r2, r5, #4
   12c60:	str	r3, [sp, #24]
   12c64:	str	r2, [sp, #8]
   12c68:	str	r3, [sp, #12]
   12c6c:	str	r3, [sp, #16]
   12c70:	str	r9, [sp, #20]
   12c74:	cmp	r6, #0
   12c78:	beq	13050 <__assert_fail@plt+0x1784>
   12c7c:	cmp	r6, #47	; 0x2f
   12c80:	movne	r3, r6
   12c84:	bne	12c9c <__assert_fail@plt+0x13d0>
   12c88:	ldrb	r3, [r8, #1]!
   12c8c:	cmp	r3, #47	; 0x2f
   12c90:	beq	12c88 <__assert_fail@plt+0x13bc>
   12c94:	cmp	r3, #0
   12c98:	beq	13050 <__assert_fail@plt+0x1784>
   12c9c:	mov	r5, r8
   12ca0:	ldrb	r6, [r5, #1]!
   12ca4:	cmp	r6, #0
   12ca8:	cmpne	r6, #47	; 0x2f
   12cac:	bne	12ca0 <__assert_fail@plt+0x13d4>
   12cb0:	subs	r7, r5, r8
   12cb4:	beq	13050 <__assert_fail@plt+0x1784>
   12cb8:	cmp	r7, #1
   12cbc:	beq	12e3c <__assert_fail@plt+0x1570>
   12cc0:	cmp	r7, #2
   12cc4:	cmpeq	r3, #46	; 0x2e
   12cc8:	beq	12d80 <__assert_fail@plt+0x14b4>
   12ccc:	ldrb	r3, [r0, #-1]
   12cd0:	add	r6, r7, #2
   12cd4:	cmp	r3, #47	; 0x2f
   12cd8:	movne	r3, #47	; 0x2f
   12cdc:	strbne	r3, [r0]
   12ce0:	ldr	r3, [sp, #148]	; 0x94
   12ce4:	addne	r0, r0, #1
   12ce8:	add	r3, r4, r3
   12cec:	sub	r3, r3, r0
   12cf0:	cmp	r3, r6
   12cf4:	bcs	12dd4 <__assert_fail@plt+0x1508>
   12cf8:	mov	r9, r0
   12cfc:	b	12d1c <__assert_fail@plt+0x1450>
   12d00:	ldr	r3, [sp, #148]	; 0x94
   12d04:	ldr	r4, [sp, #144]	; 0x90
   12d08:	sub	r3, r3, r9
   12d0c:	cmp	r3, r6
   12d10:	add	r9, r4, r9
   12d14:	mov	r0, r9
   12d18:	bcs	12dd4 <__assert_fail@plt+0x1508>
   12d1c:	add	r0, sp, #144	; 0x90
   12d20:	bl	1be64 <lchmod@@Base+0x47d8>
   12d24:	sub	r9, r9, r4
   12d28:	cmp	r0, #0
   12d2c:	bne	12d00 <__assert_fail@plt+0x1434>
   12d30:	bl	1d114 <lchmod@@Base+0x5a88>
   12d34:	bl	1171c <__errno_location@plt>
   12d38:	mov	r6, #0
   12d3c:	mov	r3, #22
   12d40:	str	r3, [r0]
   12d44:	mov	r0, r6
   12d48:	add	sp, sp, #3232	; 0xca0
   12d4c:	add	sp, sp, #12
   12d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d54:	strb	r6, [r4], #1
   12d58:	sub	r0, sl, #8
   12d5c:	sub	r1, r4, r5
   12d60:	bl	1bd9c <lchmod@@Base+0x4710>
   12d64:	subs	r6, r0, #0
   12d68:	bne	12c20 <__assert_fail@plt+0x1354>
   12d6c:	b	12d30 <__assert_fail@plt+0x1464>
   12d70:	bl	1171c <__errno_location@plt>
   12d74:	mov	r3, #2
   12d78:	str	r3, [r0]
   12d7c:	b	12c20 <__assert_fail@plt+0x1354>
   12d80:	ldrb	r3, [r8, #1]
   12d84:	cmp	r3, #46	; 0x2e
   12d88:	bne	12ccc <__assert_fail@plt+0x1400>
   12d8c:	add	r3, r4, #1
   12d90:	cmp	r0, r3
   12d94:	bls	12dcc <__assert_fail@plt+0x1500>
   12d98:	sub	r3, r0, #1
   12d9c:	cmp	r4, r3
   12da0:	bcs	13218 <__assert_fail@plt+0x194c>
   12da4:	ldrb	r2, [r0, #-2]
   12da8:	cmp	r2, #47	; 0x2f
   12dac:	beq	13218 <__assert_fail@plt+0x194c>
   12db0:	sub	r3, r0, #2
   12db4:	cmp	r3, r4
   12db8:	mov	r0, r3
   12dbc:	beq	12dcc <__assert_fail@plt+0x1500>
   12dc0:	ldrb	r2, [r3, #-1]!
   12dc4:	cmp	r2, #47	; 0x2f
   12dc8:	bne	12db4 <__assert_fail@plt+0x14e8>
   12dcc:	mov	r8, r5
   12dd0:	b	12c74 <__assert_fail@plt+0x13a8>
   12dd4:	mov	r2, r7
   12dd8:	mov	r1, r8
   12ddc:	bl	11698 <mempcpy@plt>
   12de0:	ldr	r3, [sp, #8]
   12de4:	cmp	r3, #0
   12de8:	mov	r3, #0
   12dec:	str	r0, [sp, #28]
   12df0:	strb	r3, [r0]
   12df4:	bne	12e48 <__assert_fail@plt+0x157c>
   12df8:	sub	r3, fp, #8
   12dfc:	mov	r9, r3
   12e00:	str	r5, [sp, #32]
   12e04:	ldr	r6, [sp, #2212]	; 0x8a4
   12e08:	ldr	r5, [sp, #2208]	; 0x8a0
   12e0c:	sub	r6, r6, #1
   12e10:	mov	r2, r6
   12e14:	mov	r1, r5
   12e18:	mov	r0, r4
   12e1c:	bl	115e4 <readlink@plt>
   12e20:	cmp	r6, r0
   12e24:	bgt	12f00 <__assert_fail@plt+0x1634>
   12e28:	mov	r0, r9
   12e2c:	bl	1bdec <lchmod@@Base+0x4760>
   12e30:	cmp	r0, #0
   12e34:	bne	12e04 <__assert_fail@plt+0x1538>
   12e38:	b	12d30 <__assert_fail@plt+0x1464>
   12e3c:	cmp	r3, #46	; 0x2e
   12e40:	bne	12ccc <__assert_fail@plt+0x1400>
   12e44:	b	12dcc <__assert_fail@plt+0x1500>
   12e48:	ldr	r3, [sp, #20]
   12e4c:	cmp	r3, #2
   12e50:	beq	130e8 <__assert_fail@plt+0x181c>
   12e54:	ldrb	r2, [r5]
   12e58:	mov	r3, r5
   12e5c:	mov	r1, r2
   12e60:	cmp	r1, #47	; 0x2f
   12e64:	beq	12e70 <__assert_fail@plt+0x15a4>
   12e68:	b	12eb8 <__assert_fail@plt+0x15ec>
   12e6c:	mov	r3, r0
   12e70:	ldrb	r1, [r3, #1]
   12e74:	add	r0, r3, #1
   12e78:	cmp	r1, #47	; 0x2f
   12e7c:	beq	12e6c <__assert_fail@plt+0x15a0>
   12e80:	cmp	r1, #0
   12e84:	add	r3, r3, #2
   12e88:	beq	13104 <__assert_fail@plt+0x1838>
   12e8c:	cmp	r1, #46	; 0x2e
   12e90:	bne	12eb8 <__assert_fail@plt+0x15ec>
   12e94:	ldrb	r1, [r0, #1]
   12e98:	cmp	r1, #0
   12e9c:	beq	13104 <__assert_fail@plt+0x1838>
   12ea0:	cmp	r1, #46	; 0x2e
   12ea4:	bne	12e60 <__assert_fail@plt+0x1594>
   12ea8:	ldrb	r3, [r0, #2]
   12eac:	cmp	r3, #47	; 0x2f
   12eb0:	cmpne	r3, #0
   12eb4:	beq	13104 <__assert_fail@plt+0x1838>
   12eb8:	ldr	r3, [sp, #8]
   12ebc:	cmp	r3, #0
   12ec0:	bne	131c4 <__assert_fail@plt+0x18f8>
   12ec4:	bl	1171c <__errno_location@plt>
   12ec8:	ldr	r6, [r0]
   12ecc:	subs	r6, r6, #22
   12ed0:	movne	r6, #1
   12ed4:	cmp	r6, #0
   12ed8:	bne	13134 <__assert_fail@plt+0x1868>
   12edc:	ldrb	r2, [r5]
   12ee0:	mov	r6, r2
   12ee4:	ldr	r0, [sp, #28]
   12ee8:	b	12dcc <__assert_fail@plt+0x1500>
   12eec:	mov	r1, #0
   12ef0:	mov	r0, r4
   12ef4:	bl	115b4 <rawmemchr@plt>
   12ef8:	ldrb	r6, [r8]
   12efc:	b	12c58 <__assert_fail@plt+0x138c>
   12f00:	cmp	r0, #0
   12f04:	mov	r9, r5
   12f08:	mov	r6, r0
   12f0c:	ldr	r5, [sp, #32]
   12f10:	blt	12e48 <__assert_fail@plt+0x157c>
   12f14:	ldr	r3, [sp, #16]
   12f18:	cmp	r3, #19
   12f1c:	addle	r3, r3, #1
   12f20:	strle	r3, [sp, #16]
   12f24:	ble	12fe8 <__assert_fail@plt+0x171c>
   12f28:	ldrb	r3, [r8]
   12f2c:	cmp	r3, #0
   12f30:	beq	12fe8 <__assert_fail@plt+0x171c>
   12f34:	ldr	r2, [sp, #28]
   12f38:	rsb	r7, r7, #0
   12f3c:	mov	r3, #0
   12f40:	strb	r3, [r2, r7]
   12f44:	ldrb	r1, [r4]
   12f48:	add	r3, sp, #40	; 0x28
   12f4c:	mov	r2, r3
   12f50:	cmp	r1, #0
   12f54:	ldr	r3, [pc, #708]	; 13220 <__assert_fail@plt+0x1954>
   12f58:	movne	r3, r4
   12f5c:	mov	r1, r3
   12f60:	mov	r0, #3
   12f64:	bl	11854 <__xstat64@plt>
   12f68:	cmp	r0, #0
   12f6c:	bne	12fb8 <__assert_fail@plt+0x16ec>
   12f70:	ldrb	r3, [r8]
   12f74:	ldr	r1, [sp, #24]
   12f78:	ldr	r2, [sp, #28]
   12f7c:	cmp	r1, #0
   12f80:	strb	r3, [r2, r7]
   12f84:	beq	131d4 <__assert_fail@plt+0x1908>
   12f88:	add	r2, sp, #40	; 0x28
   12f8c:	mov	r1, r8
   12f90:	ldr	r0, [sp, #24]
   12f94:	bl	13514 <__assert_fail@plt+0x1c48>
   12f98:	cmp	r0, #0
   12f9c:	beq	12fd8 <__assert_fail@plt+0x170c>
   12fa0:	ldr	r3, [sp, #20]
   12fa4:	cmp	r3, #2
   12fa8:	beq	130e8 <__assert_fail@plt+0x181c>
   12fac:	bl	1171c <__errno_location@plt>
   12fb0:	mov	r3, #40	; 0x28
   12fb4:	str	r3, [r0]
   12fb8:	mov	r5, r4
   12fbc:	ldr	r4, [sp, #28]
   12fc0:	mov	r6, #1
   12fc4:	ldr	r0, [sp, #24]
   12fc8:	cmp	r0, #0
   12fcc:	beq	12bdc <__assert_fail@plt+0x1310>
   12fd0:	bl	16710 <__assert_fail@plt+0x4e44>
   12fd4:	b	12bdc <__assert_fail@plt+0x1310>
   12fd8:	add	r2, sp, #40	; 0x28
   12fdc:	mov	r1, r8
   12fe0:	ldr	r0, [sp, #24]
   12fe4:	bl	134ac <__assert_fail@plt+0x1be0>
   12fe8:	mov	r3, #0
   12fec:	strb	r3, [r9, r6]
   12ff0:	ldr	r2, [sp, #12]
   12ff4:	ldr	r8, [sp, #1176]	; 0x498
   12ff8:	cmp	r2, r3
   12ffc:	subne	r3, r5, r8
   13000:	moveq	r3, r2
   13004:	mov	r0, r5
   13008:	str	r3, [sp, #36]	; 0x24
   1300c:	bl	116e0 <strlen@plt>
   13010:	adds	r7, r6, r0
   13014:	str	r0, [sp, #32]
   13018:	bcs	12d30 <__assert_fail@plt+0x1464>
   1301c:	ldr	r3, [sp, #1180]	; 0x49c
   13020:	cmp	r3, r7
   13024:	bls	13038 <__assert_fail@plt+0x176c>
   13028:	b	1307c <__assert_fail@plt+0x17b0>
   1302c:	ldr	r3, [sp, #1180]	; 0x49c
   13030:	cmp	r7, r3
   13034:	bcc	13078 <__assert_fail@plt+0x17ac>
   13038:	add	r0, sp, #1168	; 0x490
   1303c:	add	r0, r0, #8
   13040:	bl	1be64 <lchmod@@Base+0x47d8>
   13044:	cmp	r0, #0
   13048:	bne	1302c <__assert_fail@plt+0x1760>
   1304c:	b	12d30 <__assert_fail@plt+0x1464>
   13050:	add	r3, r4, #1
   13054:	cmp	r0, r3
   13058:	bls	130f4 <__assert_fail@plt+0x1828>
   1305c:	ldrb	r3, [r0, #-1]
   13060:	mov	r5, r4
   13064:	mov	r6, #0
   13068:	cmp	r3, #47	; 0x2f
   1306c:	subeq	r4, r0, #1
   13070:	movne	r4, r0
   13074:	b	12fc4 <__assert_fail@plt+0x16f8>
   13078:	ldr	r8, [sp, #1176]	; 0x498
   1307c:	ldr	r3, [sp, #12]
   13080:	add	r0, r8, r6
   13084:	cmp	r3, #0
   13088:	ldrne	r3, [sp, #36]	; 0x24
   1308c:	addne	r5, r8, r3
   13090:	ldr	r3, [sp, #32]
   13094:	mov	r1, r5
   13098:	add	r2, r3, #1
   1309c:	bl	11500 <memmove@plt>
   130a0:	mov	r2, r6
   130a4:	mov	r1, r9
   130a8:	mov	r0, r8
   130ac:	bl	11530 <memcpy@plt>
   130b0:	ldrb	r2, [r9]
   130b4:	cmp	r2, #47	; 0x2f
   130b8:	mov	r3, r0
   130bc:	beq	131fc <__assert_fail@plt+0x1930>
   130c0:	ldr	r1, [sp, #28]
   130c4:	add	r2, r4, #1
   130c8:	cmp	r1, r2
   130cc:	bhi	13174 <__assert_fail@plt+0x18a8>
   130d0:	ldrb	r6, [r3]
   130d4:	mov	r5, r3
   130d8:	mov	r3, #1
   130dc:	mov	r0, r1
   130e0:	str	r3, [sp, #12]
   130e4:	b	12dcc <__assert_fail@plt+0x1500>
   130e8:	ldr	r0, [sp, #28]
   130ec:	ldrb	r6, [r5]
   130f0:	b	12dcc <__assert_fail@plt+0x1500>
   130f4:	mov	r5, r4
   130f8:	mov	r6, #0
   130fc:	mov	r4, r0
   13100:	b	12fc4 <__assert_fail@plt+0x16f8>
   13104:	ldr	r3, [pc, #280]	; 13224 <__assert_fail@plt+0x1958>
   13108:	ldr	r0, [sp, #28]
   1310c:	mov	r2, #0
   13110:	ldrh	r1, [r3]
   13114:	mov	r3, #512	; 0x200
   13118:	strh	r1, [r0]
   1311c:	mov	r1, r4
   13120:	mvn	r0, #99	; 0x63
   13124:	bl	11518 <faccessat@plt>
   13128:	adds	r6, r0, #0
   1312c:	movne	r6, #1
   13130:	b	12ed4 <__assert_fail@plt+0x1608>
   13134:	ldr	r3, [sp, #20]
   13138:	cmp	r3, #1
   1313c:	bne	13168 <__assert_fail@plt+0x189c>
   13140:	bl	1171c <__errno_location@plt>
   13144:	ldr	r3, [r0]
   13148:	cmp	r3, #2
   1314c:	bne	13168 <__assert_fail@plt+0x189c>
   13150:	ldr	r1, [pc, #204]	; 13224 <__assert_fail@plt+0x1958>
   13154:	mov	r0, r5
   13158:	bl	118c0 <strspn@plt>
   1315c:	ldrb	r3, [r5, r0]
   13160:	cmp	r3, #0
   13164:	beq	130e8 <__assert_fail@plt+0x181c>
   13168:	mov	r5, r4
   1316c:	ldr	r4, [sp, #28]
   13170:	b	12fc4 <__assert_fail@plt+0x16f8>
   13174:	sub	r0, r1, #1
   13178:	cmp	r0, r4
   1317c:	bls	131b0 <__assert_fail@plt+0x18e4>
   13180:	ldrb	r2, [r1, #-2]
   13184:	cmp	r2, #47	; 0x2f
   13188:	beq	131b0 <__assert_fail@plt+0x18e4>
   1318c:	ldr	r2, [sp, #28]
   13190:	sub	r2, r2, #2
   13194:	cmp	r4, r2
   13198:	mov	r0, r2
   1319c:	beq	131b0 <__assert_fail@plt+0x18e4>
   131a0:	ldrb	r1, [r2, #-1]
   131a4:	sub	r2, r2, #1
   131a8:	cmp	r1, #47	; 0x2f
   131ac:	bne	13194 <__assert_fail@plt+0x18c8>
   131b0:	ldrb	r6, [r3]
   131b4:	mov	r5, r3
   131b8:	mov	r3, #1
   131bc:	str	r3, [sp, #12]
   131c0:	b	12dcc <__assert_fail@plt+0x1500>
   131c4:	cmp	r2, #0
   131c8:	bne	12ee0 <__assert_fail@plt+0x1614>
   131cc:	mov	r3, #512	; 0x200
   131d0:	b	1311c <__assert_fail@plt+0x1850>
   131d4:	ldr	r3, [pc, #76]	; 13228 <__assert_fail@plt+0x195c>
   131d8:	ldr	r2, [pc, #76]	; 1322c <__assert_fail@plt+0x1960>
   131dc:	str	r3, [sp]
   131e0:	mov	r0, #7
   131e4:	ldr	r3, [pc, #68]	; 13230 <__assert_fail@plt+0x1964>
   131e8:	bl	16420 <__assert_fail@plt+0x4b54>
   131ec:	subs	r3, r0, #0
   131f0:	str	r3, [sp, #24]
   131f4:	bne	12f88 <__assert_fail@plt+0x16bc>
   131f8:	b	12d30 <__assert_fail@plt+0x1464>
   131fc:	mov	r3, #1
   13200:	strb	r2, [r4]
   13204:	mov	r5, r0
   13208:	ldrb	r6, [r0]
   1320c:	str	r3, [sp, #12]
   13210:	add	r0, r4, #1
   13214:	b	12dcc <__assert_fail@plt+0x1500>
   13218:	mov	r0, r3
   1321c:	b	12dcc <__assert_fail@plt+0x1500>
   13220:	andeq	pc, r1, r0, ror #11
   13224:	andeq	pc, r1, ip, ror r7	; <UNPREDICTABLE>
   13228:			; <UNDEFINED> instruction: 0x000175b0
   1322c:	andeq	r7, r1, ip, lsr #10
   13230:	andeq	r7, r1, r4, ror #10
   13234:	ldr	r3, [pc, #4]	; 13240 <__assert_fail@plt+0x1974>
   13238:	str	r0, [r3]
   1323c:	bx	lr
   13240:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   13244:	ldr	r3, [pc, #4]	; 13250 <__assert_fail@plt+0x1984>
   13248:	strb	r0, [r3, #4]
   1324c:	bx	lr
   13250:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   13254:	ldr	r3, [pc, #192]	; 1331c <__assert_fail@plt+0x1a50>
   13258:	push	{r4, r5, r6, lr}
   1325c:	sub	sp, sp, #8
   13260:	ldr	r0, [r3]
   13264:	bl	1e120 <lchmod@@Base+0x6a94>
   13268:	cmp	r0, #0
   1326c:	beq	13290 <__assert_fail@plt+0x19c4>
   13270:	ldr	r4, [pc, #168]	; 13320 <__assert_fail@plt+0x1a54>
   13274:	ldrb	r3, [r4, #4]
   13278:	cmp	r3, #0
   1327c:	beq	132ac <__assert_fail@plt+0x19e0>
   13280:	bl	1171c <__errno_location@plt>
   13284:	ldr	r3, [r0]
   13288:	cmp	r3, #32
   1328c:	bne	132ac <__assert_fail@plt+0x19e0>
   13290:	ldr	r3, [pc, #140]	; 13324 <__assert_fail@plt+0x1a58>
   13294:	ldr	r0, [r3]
   13298:	bl	1e120 <lchmod@@Base+0x6a94>
   1329c:	cmp	r0, #0
   132a0:	bne	132f4 <__assert_fail@plt+0x1a28>
   132a4:	add	sp, sp, #8
   132a8:	pop	{r4, r5, r6, pc}
   132ac:	mov	r2, #5
   132b0:	ldr	r1, [pc, #112]	; 13328 <__assert_fail@plt+0x1a5c>
   132b4:	mov	r0, #0
   132b8:	bl	11578 <dcgettext@plt>
   132bc:	ldr	r4, [r4]
   132c0:	cmp	r4, #0
   132c4:	mov	r5, r0
   132c8:	beq	13300 <__assert_fail@plt+0x1a34>
   132cc:	bl	1171c <__errno_location@plt>
   132d0:	ldr	r6, [r0]
   132d4:	mov	r0, r4
   132d8:	bl	1a9bc <lchmod@@Base+0x3330>
   132dc:	mov	r1, r6
   132e0:	str	r5, [sp]
   132e4:	ldr	r2, [pc, #64]	; 1332c <__assert_fail@plt+0x1a60>
   132e8:	mov	r3, r0
   132ec:	mov	r0, #0
   132f0:	bl	11638 <error@plt>
   132f4:	ldr	r3, [pc, #52]	; 13330 <__assert_fail@plt+0x1a64>
   132f8:	ldr	r0, [r3]
   132fc:	bl	11524 <_exit@plt>
   13300:	bl	1171c <__errno_location@plt>
   13304:	mov	r3, r5
   13308:	ldr	r2, [pc, #36]	; 13334 <__assert_fail@plt+0x1a68>
   1330c:	ldr	r1, [r0]
   13310:	mov	r0, r4
   13314:	bl	11638 <error@plt>
   13318:	b	132f4 <__assert_fail@plt+0x1a28>
   1331c:	andeq	r0, r3, r4, ror #3
   13320:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   13324:	andeq	r0, r3, r0, ror #3
   13328:	andeq	pc, r1, r0, lsl #15
   1332c:	andeq	pc, r1, ip, lsl #15
   13330:	andeq	r0, r3, ip, lsl #3
   13334:	muleq	r1, r0, r7
   13338:	push	{r4, lr}
   1333c:	bl	133c4 <__assert_fail@plt+0x1af8>
   13340:	cmp	r0, #0
   13344:	popne	{r4, pc}
   13348:	bl	1d114 <lchmod@@Base+0x5a88>
   1334c:	push	{r4, r5, r6, lr}
   13350:	mov	r5, r0
   13354:	ldrb	r4, [r0]
   13358:	bl	1e074 <lchmod@@Base+0x69e8>
   1335c:	sub	r4, r4, #47	; 0x2f
   13360:	clz	r4, r4
   13364:	lsr	r4, r4, #5
   13368:	sub	r0, r0, r5
   1336c:	cmp	r0, r4
   13370:	bls	133bc <__assert_fail@plt+0x1af0>
   13374:	sub	r3, r0, #1
   13378:	add	r2, r5, r3
   1337c:	ldrb	r1, [r5, r3]
   13380:	cmp	r1, #47	; 0x2f
   13384:	beq	133a0 <__assert_fail@plt+0x1ad4>
   13388:	b	133bc <__assert_fail@plt+0x1af0>
   1338c:	ldrb	r1, [r2, #-1]!
   13390:	sub	r0, r3, #1
   13394:	cmp	r1, #47	; 0x2f
   13398:	bne	133b0 <__assert_fail@plt+0x1ae4>
   1339c:	mov	r3, r0
   133a0:	cmp	r4, r3
   133a4:	bne	1338c <__assert_fail@plt+0x1ac0>
   133a8:	mov	r0, r4
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	mov	r4, r3
   133b4:	mov	r0, r4
   133b8:	pop	{r4, r5, r6, pc}
   133bc:	mov	r4, r0
   133c0:	b	133a8 <__assert_fail@plt+0x1adc>
   133c4:	push	{r4, r5, r6, r7, r8, lr}
   133c8:	mov	r6, r0
   133cc:	ldrb	r4, [r0]
   133d0:	bl	1e074 <lchmod@@Base+0x69e8>
   133d4:	sub	r4, r4, #47	; 0x2f
   133d8:	clz	r4, r4
   133dc:	lsr	r4, r4, #5
   133e0:	sub	r5, r0, r6
   133e4:	cmp	r5, r4
   133e8:	bls	134a4 <__assert_fail@plt+0x1bd8>
   133ec:	sub	r3, r5, #1
   133f0:	add	r2, r6, r3
   133f4:	ldrb	r1, [r6, r3]
   133f8:	cmp	r1, #47	; 0x2f
   133fc:	beq	13418 <__assert_fail@plt+0x1b4c>
   13400:	b	13474 <__assert_fail@plt+0x1ba8>
   13404:	ldrb	r0, [r2, #-1]!
   13408:	sub	ip, r3, #1
   1340c:	cmp	r0, #47	; 0x2f
   13410:	bne	13470 <__assert_fail@plt+0x1ba4>
   13414:	mov	r3, ip
   13418:	cmp	r4, r3
   1341c:	bne	13404 <__assert_fail@plt+0x1b38>
   13420:	eor	r3, r4, #1
   13424:	and	r3, r3, #1
   13428:	add	r0, r4, #1
   1342c:	add	r0, r0, r3
   13430:	uxtb	r5, r3
   13434:	bl	1dfec <lchmod@@Base+0x6960>
   13438:	subs	r7, r0, #0
   1343c:	beq	1349c <__assert_fail@plt+0x1bd0>
   13440:	mov	r1, r6
   13444:	mov	r2, r4
   13448:	bl	11530 <memcpy@plt>
   1344c:	cmp	r5, #0
   13450:	movne	r5, #1
   13454:	moveq	r5, r4
   13458:	movne	r3, #46	; 0x2e
   1345c:	strbne	r3, [r7]
   13460:	mov	r3, #0
   13464:	strb	r3, [r7, r5]
   13468:	mov	r0, r7
   1346c:	pop	{r4, r5, r6, r7, r8, pc}
   13470:	mov	r5, r3
   13474:	add	r0, r5, #1
   13478:	cmp	r5, #0
   1347c:	addeq	r0, r0, #1
   13480:	bl	1dfec <lchmod@@Base+0x6960>
   13484:	subs	r7, r0, #0
   13488:	beq	1349c <__assert_fail@plt+0x1bd0>
   1348c:	mov	r1, r6
   13490:	mov	r2, r5
   13494:	bl	11530 <memcpy@plt>
   13498:	b	13460 <__assert_fail@plt+0x1b94>
   1349c:	mov	r7, #0
   134a0:	b	13468 <__assert_fail@plt+0x1b9c>
   134a4:	mov	r4, r5
   134a8:	b	13420 <__assert_fail@plt+0x1b54>
   134ac:	push	{r4, r5, r6, r7, r8, lr}
   134b0:	subs	r8, r0, #0
   134b4:	popeq	{r4, r5, r6, r7, r8, pc}
   134b8:	mov	r0, #24
   134bc:	mov	r4, r1
   134c0:	mov	r7, r2
   134c4:	bl	1cacc <lchmod@@Base+0x5440>
   134c8:	mov	r6, r0
   134cc:	mov	r0, r4
   134d0:	bl	1d0dc <lchmod@@Base+0x5a50>
   134d4:	ldrd	r4, [r7, #96]	; 0x60
   134d8:	ldrd	r2, [r7]
   134dc:	mov	r1, r6
   134e0:	strd	r4, [r6, #8]
   134e4:	strd	r2, [r6, #16]
   134e8:	str	r0, [r6]
   134ec:	mov	r0, r8
   134f0:	bl	16d88 <__assert_fail@plt+0x54bc>
   134f4:	cmp	r0, #0
   134f8:	beq	13510 <__assert_fail@plt+0x1c44>
   134fc:	cmp	r6, r0
   13500:	popeq	{r4, r5, r6, r7, r8, pc}
   13504:	mov	r0, r6
   13508:	pop	{r4, r5, r6, r7, r8, lr}
   1350c:	b	175b0 <__assert_fail@plt+0x5ce4>
   13510:	bl	1d114 <lchmod@@Base+0x5a88>
   13514:	subs	r3, r0, #0
   13518:	beq	13554 <__assert_fail@plt+0x1c88>
   1351c:	push	{r4, r5, lr}
   13520:	sub	sp, sp, #28
   13524:	ldrd	r4, [r2, #96]	; 0x60
   13528:	ldrd	r2, [r2]
   1352c:	mov	ip, r1
   13530:	mov	r1, sp
   13534:	str	ip, [sp]
   13538:	strd	r4, [sp, #8]
   1353c:	strd	r2, [sp, #16]
   13540:	bl	16140 <__assert_fail@plt+0x4874>
   13544:	adds	r0, r0, #0
   13548:	movne	r0, #1
   1354c:	add	sp, sp, #28
   13550:	pop	{r4, r5, pc}
   13554:	mov	r0, r3
   13558:	bx	lr
   1355c:	push	{r4, r5, lr}
   13560:	sub	sp, sp, #12
   13564:	mov	r5, r0
   13568:	bl	1171c <__errno_location@plt>
   1356c:	mov	r2, #0
   13570:	mov	r4, r0
   13574:	ldr	r3, [r0]
   13578:	str	r2, [r4]
   1357c:	mov	r0, r5
   13580:	str	r3, [sp]
   13584:	str	r3, [sp, #4]
   13588:	bl	1150c <free@plt>
   1358c:	ldr	r3, [r4]
   13590:	add	r2, sp, #8
   13594:	cmp	r3, #0
   13598:	moveq	r3, #4
   1359c:	movne	r3, #0
   135a0:	add	r3, r2, r3
   135a4:	ldr	r3, [r3, #-8]
   135a8:	str	r3, [r4]
   135ac:	add	sp, sp, #12
   135b0:	pop	{r4, r5, pc}
   135b4:	ldrd	r2, [r1, #8]
   135b8:	push	{r4, r5}
   135bc:	ldrd	r4, [r0, #8]
   135c0:	cmp	r5, r3
   135c4:	cmpeq	r4, r2
   135c8:	movne	r0, #0
   135cc:	beq	135d8 <__assert_fail@plt+0x1d0c>
   135d0:	pop	{r4, r5}
   135d4:	bx	lr
   135d8:	ldrd	r4, [r0]
   135dc:	ldrd	r2, [r1]
   135e0:	cmp	r5, r3
   135e4:	cmpeq	r4, r2
   135e8:	moveq	r0, #1
   135ec:	movne	r0, #0
   135f0:	pop	{r4, r5}
   135f4:	bx	lr
   135f8:	push	{r4, lr}
   135fc:	mov	r2, r1
   13600:	mov	r3, #0
   13604:	ldrd	r0, [r0, #8]
   13608:	bl	1ec94 <lchmod@@Base+0x7608>
   1360c:	mov	r0, r2
   13610:	pop	{r4, pc}
   13614:	push	{r4, lr}
   13618:	mov	r2, r1
   1361c:	mov	r3, #0
   13620:	ldrd	r0, [r0]
   13624:	bl	1ec94 <lchmod@@Base+0x7608>
   13628:	mov	r0, r2
   1362c:	pop	{r4, pc}
   13630:	push	{r4, r5}
   13634:	ldrd	r2, [r1]
   13638:	ldrd	r4, [r0]
   1363c:	cmp	r5, r3
   13640:	cmpeq	r4, r2
   13644:	moveq	r0, #1
   13648:	movne	r0, #0
   1364c:	pop	{r4, r5}
   13650:	bx	lr
   13654:	ldr	r2, [r0]
   13658:	ldr	r3, [r1]
   1365c:	ldrd	r0, [r2, #160]	; 0xa0
   13660:	ldrd	r2, [r3, #160]	; 0xa0
   13664:	cmp	r1, r3
   13668:	cmpeq	r0, r2
   1366c:	movhi	r0, #1
   13670:	movls	r0, #0
   13674:	movcc	r3, #1
   13678:	movcs	r3, #0
   1367c:	sub	r0, r0, r3
   13680:	bx	lr
   13684:	push	{r4, r5, r6, r7, lr}
   13688:	sub	sp, sp, #100	; 0x64
   1368c:	ldr	r4, [r0, #44]	; 0x2c
   13690:	ldr	r3, [r4, #48]	; 0x30
   13694:	tst	r3, #512	; 0x200
   13698:	beq	1370c <__assert_fail@plt+0x1e40>
   1369c:	ldr	r6, [r4, #52]	; 0x34
   136a0:	mov	r7, r1
   136a4:	cmp	r6, #0
   136a8:	mov	r5, r0
   136ac:	beq	136d8 <__assert_fail@plt+0x1e0c>
   136b0:	ldrd	r2, [r5, #64]	; 0x40
   136b4:	add	r1, sp, #96	; 0x60
   136b8:	mov	r0, r6
   136bc:	strd	r2, [r1, #-88]!	; 0xffffffa8
   136c0:	bl	16140 <__assert_fail@plt+0x4874>
   136c4:	cmp	r0, #0
   136c8:	beq	13704 <__assert_fail@plt+0x1e38>
   136cc:	ldr	r0, [r0, #8]
   136d0:	add	sp, sp, #100	; 0x64
   136d4:	pop	{r4, r5, r6, r7, pc}
   136d8:	ldr	r3, [pc, #168]	; 13788 <__assert_fail@plt+0x1ebc>
   136dc:	mov	r1, r6
   136e0:	str	r3, [sp]
   136e4:	ldr	r2, [pc, #160]	; 1378c <__assert_fail@plt+0x1ec0>
   136e8:	ldr	r3, [pc, #160]	; 13790 <__assert_fail@plt+0x1ec4>
   136ec:	mov	r0, #13
   136f0:	bl	16420 <__assert_fail@plt+0x4b54>
   136f4:	cmp	r0, #0
   136f8:	mov	r6, r0
   136fc:	str	r0, [r4, #52]	; 0x34
   13700:	bne	136b0 <__assert_fail@plt+0x1de4>
   13704:	cmp	r7, #0
   13708:	bge	13718 <__assert_fail@plt+0x1e4c>
   1370c:	mov	r0, #0
   13710:	add	sp, sp, #100	; 0x64
   13714:	pop	{r4, r5, r6, r7, pc}
   13718:	mov	r0, r7
   1371c:	add	r1, sp, #8
   13720:	bl	11488 <fstatfs64@plt>
   13724:	cmp	r0, #0
   13728:	bne	1370c <__assert_fail@plt+0x1e40>
   1372c:	cmp	r6, #0
   13730:	beq	1377c <__assert_fail@plt+0x1eb0>
   13734:	mov	r0, #16
   13738:	bl	1dfec <lchmod@@Base+0x6960>
   1373c:	subs	r4, r0, #0
   13740:	beq	1377c <__assert_fail@plt+0x1eb0>
   13744:	ldrd	r2, [r5, #64]	; 0x40
   13748:	ldr	r1, [sp, #8]
   1374c:	mov	r0, r6
   13750:	str	r1, [r4, #8]
   13754:	strd	r2, [r4]
   13758:	mov	r1, r4
   1375c:	bl	16d88 <__assert_fail@plt+0x54bc>
   13760:	cmp	r0, #0
   13764:	beq	13774 <__assert_fail@plt+0x1ea8>
   13768:	cmp	r4, r0
   1376c:	beq	1377c <__assert_fail@plt+0x1eb0>
   13770:	bl	11878 <abort@plt>
   13774:	mov	r0, r4
   13778:	bl	1355c <__assert_fail@plt+0x1c90>
   1377c:	ldr	r0, [sp, #8]
   13780:	add	sp, sp, #100	; 0x64
   13784:	pop	{r4, r5, r6, r7, pc}
   13788:	andeq	r3, r1, ip, asr r5
   1378c:	andeq	r3, r1, r4, lsl r6
   13790:	andeq	r3, r1, r0, lsr r6
   13794:	push	{r4, r5, r6, lr}
   13798:	mov	r4, r2
   1379c:	ldr	r2, [r2, #48]	; 0x30
   137a0:	sub	sp, sp, #8
   137a4:	cmp	r2, #0
   137a8:	add	r5, r4, #64	; 0x40
   137ac:	bne	13804 <__assert_fail@plt+0x1f38>
   137b0:	tst	r1, #1
   137b4:	beq	13804 <__assert_fail@plt+0x1f38>
   137b8:	mov	r2, r5
   137bc:	ldr	r1, [r4, #24]
   137c0:	mov	r0, #3
   137c4:	bl	11854 <__xstat64@plt>
   137c8:	cmp	r0, #0
   137cc:	beq	13840 <__assert_fail@plt+0x1f74>
   137d0:	bl	1171c <__errno_location@plt>
   137d4:	ldr	r3, [r0]
   137d8:	mov	r6, r0
   137dc:	cmp	r3, #2
   137e0:	beq	138b8 <__assert_fail@plt+0x1fec>
   137e4:	str	r3, [r4, #32]
   137e8:	mov	r0, r5
   137ec:	mov	r2, #104	; 0x68
   137f0:	mov	r1, #0
   137f4:	bl	11740 <memset@plt>
   137f8:	mov	r0, #10
   137fc:	add	sp, sp, #8
   13800:	pop	{r4, r5, r6, pc}
   13804:	lsl	r1, r1, #30
   13808:	orrs	r3, r3, r1, lsr #31
   1380c:	bne	137b8 <__assert_fail@plt+0x1eec>
   13810:	mov	r3, #256	; 0x100
   13814:	ldr	r2, [r4, #24]
   13818:	mov	r1, r0
   1381c:	str	r3, [sp]
   13820:	mov	r0, #3
   13824:	mov	r3, r5
   13828:	bl	115c0 <__fxstatat64@plt>
   1382c:	cmp	r0, #0
   13830:	beq	13840 <__assert_fail@plt+0x1f74>
   13834:	bl	1171c <__errno_location@plt>
   13838:	ldr	r3, [r0]
   1383c:	b	137e4 <__assert_fail@plt+0x1f18>
   13840:	ldr	r0, [r4, #80]	; 0x50
   13844:	and	r0, r0, #61440	; 0xf000
   13848:	cmp	r0, #16384	; 0x4000
   1384c:	beq	13870 <__assert_fail@plt+0x1fa4>
   13850:	cmp	r0, #40960	; 0xa000
   13854:	moveq	r0, #12
   13858:	beq	137fc <__assert_fail@plt+0x1f30>
   1385c:	cmp	r0, #32768	; 0x8000
   13860:	movne	r0, #3
   13864:	moveq	r0, #8
   13868:	add	sp, sp, #8
   1386c:	pop	{r4, r5, r6, pc}
   13870:	ldrb	r3, [r4, #168]	; 0xa8
   13874:	cmp	r3, #46	; 0x2e
   13878:	beq	13884 <__assert_fail@plt+0x1fb8>
   1387c:	mov	r0, #1
   13880:	b	137fc <__assert_fail@plt+0x1f30>
   13884:	ldrb	r3, [r4, #169]	; 0xa9
   13888:	cmp	r3, #0
   1388c:	beq	138a4 <__assert_fail@plt+0x1fd8>
   13890:	ldr	r3, [r4, #168]	; 0xa8
   13894:	bic	r3, r3, #-16777216	; 0xff000000
   13898:	bic	r3, r3, #255	; 0xff
   1389c:	cmp	r3, #11776	; 0x2e00
   138a0:	bne	1387c <__assert_fail@plt+0x1fb0>
   138a4:	ldr	r0, [r4, #48]	; 0x30
   138a8:	cmp	r0, #0
   138ac:	movne	r0, #5
   138b0:	moveq	r0, #1
   138b4:	b	137fc <__assert_fail@plt+0x1f30>
   138b8:	mov	r2, r5
   138bc:	ldr	r1, [r4, #24]
   138c0:	mov	r0, #3
   138c4:	bl	11890 <__lxstat64@plt>
   138c8:	cmp	r0, #0
   138cc:	streq	r0, [r6]
   138d0:	moveq	r0, #13
   138d4:	beq	137fc <__assert_fail@plt+0x1f30>
   138d8:	ldr	r3, [r6]
   138dc:	b	137e4 <__assert_fail@plt+0x1f18>
   138e0:	ldr	r3, [pc, #172]	; 13994 <__assert_fail@plt+0x20c8>
   138e4:	push	{r4, r5, lr}
   138e8:	and	r3, r3, r0
   138ec:	cmp	r3, #0
   138f0:	sub	sp, sp, #28
   138f4:	bne	1393c <__assert_fail@plt+0x2070>
   138f8:	ldr	r3, [r2, #4]
   138fc:	cmp	r3, #0
   13900:	beq	13934 <__assert_fail@plt+0x2068>
   13904:	ldr	r0, [r3, #48]	; 0x30
   13908:	cmp	r0, #0
   1390c:	blt	13934 <__assert_fail@plt+0x2068>
   13910:	ldr	ip, [r1]
   13914:	ldrd	r0, [ip, #16]
   13918:	orrs	r1, r0, r1
   1391c:	beq	13990 <__assert_fail@plt+0x20c4>
   13920:	ldrd	r4, [ip]
   13924:	ldrd	r0, [r2, #160]	; 0xa0
   13928:	cmp	r5, r1
   1392c:	cmpeq	r4, r0
   13930:	beq	1396c <__assert_fail@plt+0x20a0>
   13934:	add	sp, sp, #28
   13938:	pop	{r4, r5, pc}
   1393c:	ldrd	r4, [r2, #64]	; 0x40
   13940:	ldrd	r2, [r2, #160]	; 0xa0
   13944:	ldr	r0, [r1]
   13948:	mov	r1, sp
   1394c:	strd	r4, [sp]
   13950:	strd	r2, [sp, #8]
   13954:	bl	1704c <__assert_fail@plt+0x5780>
   13958:	cmp	r0, #0
   1395c:	beq	13990 <__assert_fail@plt+0x20c4>
   13960:	bl	1355c <__assert_fail@plt+0x1c90>
   13964:	add	sp, sp, #28
   13968:	pop	{r4, r5, pc}
   1396c:	ldrd	r0, [ip, #8]
   13970:	ldrd	r4, [r2, #64]	; 0x40
   13974:	cmp	r1, r5
   13978:	cmpeq	r0, r4
   1397c:	ldrdeq	r0, [r3, #64]	; 0x40
   13980:	ldrdeq	r2, [r3, #160]	; 0xa0
   13984:	strdeq	r0, [ip, #8]
   13988:	strdeq	r2, [ip]
   1398c:	b	13934 <__assert_fail@plt+0x2068>
   13990:	bl	11878 <abort@plt>
   13994:	andeq	r0, r0, r2, lsl #2
   13998:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1399c:	subs	sl, r3, #0
   139a0:	sub	sp, sp, #104	; 0x68
   139a4:	mov	r5, r0
   139a8:	mov	r6, r1
   139ac:	mov	r4, r2
   139b0:	ldr	r9, [r0, #48]	; 0x30
   139b4:	beq	13a30 <__assert_fail@plt+0x2164>
   139b8:	ldr	r1, [pc, #612]	; 13c24 <__assert_fail@plt+0x2358>
   139bc:	mov	r0, sl
   139c0:	bl	114d0 <strcmp@plt>
   139c4:	cmp	r0, #0
   139c8:	bne	13a30 <__assert_fail@plt+0x2164>
   139cc:	tst	r9, #4
   139d0:	bne	13a38 <__assert_fail@plt+0x216c>
   139d4:	cmp	r4, #0
   139d8:	bge	13c10 <__assert_fail@plt+0x2344>
   139dc:	tst	r9, #512	; 0x200
   139e0:	beq	13b24 <__assert_fail@plt+0x2258>
   139e4:	add	r7, r5, #60	; 0x3c
   139e8:	mov	r0, r7
   139ec:	bl	175f8 <__assert_fail@plt+0x5d2c>
   139f0:	cmp	r0, #0
   139f4:	beq	13ba0 <__assert_fail@plt+0x22d4>
   139f8:	ldr	r2, [pc, #552]	; 13c28 <__assert_fail@plt+0x235c>
   139fc:	tst	r9, #16
   13a00:	ldr	r1, [pc, #548]	; 13c2c <__assert_fail@plt+0x2360>
   13a04:	mov	r8, #1
   13a08:	movne	r1, r2
   13a0c:	mov	r2, r1
   13a10:	ldr	r0, [r5, #32]
   13a14:	mov	r1, sl
   13a18:	bl	17cc4 <lchmod@@Base+0x638>
   13a1c:	mov	r7, r0
   13a20:	cmp	r7, #0
   13a24:	blt	13be4 <__assert_fail@plt+0x2318>
   13a28:	ldr	r9, [r5, #48]	; 0x30
   13a2c:	b	13a6c <__assert_fail@plt+0x21a0>
   13a30:	ands	r8, r9, #4
   13a34:	beq	13a60 <__assert_fail@plt+0x2194>
   13a38:	mvn	r3, r4
   13a3c:	lsr	r3, r3, #31
   13a40:	ands	r9, r3, r9, lsr #9
   13a44:	beq	13a54 <__assert_fail@plt+0x2188>
   13a48:	mov	r0, r4
   13a4c:	bl	11884 <close@plt>
   13a50:	mov	r9, #0
   13a54:	mov	r0, r9
   13a58:	add	sp, sp, #104	; 0x68
   13a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a60:	cmp	r4, #0
   13a64:	movge	r7, r4
   13a68:	blt	13bf0 <__assert_fail@plt+0x2324>
   13a6c:	tst	r9, #2
   13a70:	bne	13a90 <__assert_fail@plt+0x21c4>
   13a74:	cmp	sl, #0
   13a78:	beq	13ae8 <__assert_fail@plt+0x221c>
   13a7c:	mov	r0, sl
   13a80:	ldr	r1, [pc, #412]	; 13c24 <__assert_fail@plt+0x2358>
   13a84:	bl	114d0 <strcmp@plt>
   13a88:	cmp	r0, #0
   13a8c:	bne	13ae8 <__assert_fail@plt+0x221c>
   13a90:	mov	r2, sp
   13a94:	mov	r1, r7
   13a98:	mov	r0, #3
   13a9c:	bl	115d8 <__fxstat64@plt>
   13aa0:	cmp	r0, #0
   13aa4:	beq	13b00 <__assert_fail@plt+0x2234>
   13aa8:	mvn	r9, #0
   13aac:	cmp	r4, #0
   13ab0:	bge	13a54 <__assert_fail@plt+0x2188>
   13ab4:	bl	1171c <__errno_location@plt>
   13ab8:	mov	r4, r0
   13abc:	mov	r0, r7
   13ac0:	ldr	r5, [r4]
   13ac4:	bl	11884 <close@plt>
   13ac8:	str	r5, [r4]
   13acc:	b	13a54 <__assert_fail@plt+0x2188>
   13ad0:	ldrd	r0, [r6, #160]	; 0xa0
   13ad4:	ldrd	r2, [sp, #96]	; 0x60
   13ad8:	cmp	r1, r3
   13adc:	cmpeq	r0, r2
   13ae0:	bne	13b14 <__assert_fail@plt+0x2248>
   13ae4:	ldr	r9, [r5, #48]	; 0x30
   13ae8:	tst	r9, #512	; 0x200
   13aec:	bne	13b48 <__assert_fail@plt+0x227c>
   13af0:	mov	r0, r7
   13af4:	bl	117f4 <fchdir@plt>
   13af8:	mov	r9, r0
   13afc:	b	13aac <__assert_fail@plt+0x21e0>
   13b00:	ldrd	r0, [r6, #64]	; 0x40
   13b04:	ldrd	r2, [sp]
   13b08:	cmp	r1, r3
   13b0c:	cmpeq	r0, r2
   13b10:	beq	13ad0 <__assert_fail@plt+0x2204>
   13b14:	bl	1171c <__errno_location@plt>
   13b18:	mov	r3, #2
   13b1c:	str	r3, [r0]
   13b20:	b	13aa8 <__assert_fail@plt+0x21dc>
   13b24:	ldr	r2, [pc, #252]	; 13c28 <__assert_fail@plt+0x235c>
   13b28:	tst	r9, #16
   13b2c:	ldr	r1, [pc, #248]	; 13c2c <__assert_fail@plt+0x2360>
   13b30:	mov	r8, #1
   13b34:	movne	r1, r2
   13b38:	mov	r0, sl
   13b3c:	bl	1e500 <lchmod@@Base+0x6e74>
   13b40:	mov	r7, r0
   13b44:	b	13a20 <__assert_fail@plt+0x2154>
   13b48:	ldr	r1, [r5, #32]
   13b4c:	cmn	r1, #100	; 0x64
   13b50:	sub	r3, r7, r1
   13b54:	clz	r3, r3
   13b58:	lsr	r3, r3, #5
   13b5c:	moveq	r3, #0
   13b60:	cmp	r3, #0
   13b64:	bne	13bec <__assert_fail@plt+0x2320>
   13b68:	cmp	r8, #0
   13b6c:	beq	13bd0 <__assert_fail@plt+0x2304>
   13b70:	lsr	r3, r9, #2
   13b74:	eor	r3, r3, #1
   13b78:	cmp	r1, #0
   13b7c:	movlt	r3, #0
   13b80:	andge	r3, r3, #1
   13b84:	cmp	r3, #0
   13b88:	beq	13b94 <__assert_fail@plt+0x22c8>
   13b8c:	mov	r0, r1
   13b90:	bl	11884 <close@plt>
   13b94:	str	r7, [r5, #32]
   13b98:	mov	r9, #0
   13b9c:	b	13a54 <__assert_fail@plt+0x2188>
   13ba0:	mov	r0, r7
   13ba4:	bl	17644 <__assert_fail@plt+0x5d78>
   13ba8:	ldr	r9, [r5, #48]	; 0x30
   13bac:	subs	r7, r0, #0
   13bb0:	movlt	r8, #1
   13bb4:	andlt	r3, r9, #512	; 0x200
   13bb8:	blt	13bf4 <__assert_fail@plt+0x2328>
   13bbc:	tst	r9, #2
   13bc0:	mov	r4, r7
   13bc4:	mov	r8, #1
   13bc8:	beq	13ae8 <__assert_fail@plt+0x221c>
   13bcc:	b	13a90 <__assert_fail@plt+0x21c4>
   13bd0:	add	r0, r5, #60	; 0x3c
   13bd4:	bl	17600 <__assert_fail@plt+0x5d34>
   13bd8:	cmp	r0, #0
   13bdc:	bge	13b90 <__assert_fail@plt+0x22c4>
   13be0:	b	13b94 <__assert_fail@plt+0x22c8>
   13be4:	mvn	r9, #0
   13be8:	b	13a54 <__assert_fail@plt+0x2188>
   13bec:	bl	11878 <abort@plt>
   13bf0:	and	r3, r9, #512	; 0x200
   13bf4:	ldr	r2, [pc, #48]	; 13c2c <__assert_fail@plt+0x2360>
   13bf8:	tst	r9, #16
   13bfc:	ldr	r1, [pc, #36]	; 13c28 <__assert_fail@plt+0x235c>
   13c00:	moveq	r1, r2
   13c04:	cmp	r3, #0
   13c08:	bne	13a0c <__assert_fail@plt+0x2140>
   13c0c:	b	13b38 <__assert_fail@plt+0x226c>
   13c10:	tst	r9, #2
   13c14:	mov	r7, r4
   13c18:	mov	r8, #1
   13c1c:	beq	13a7c <__assert_fail@plt+0x21b0>
   13c20:	b	13a90 <__assert_fail@plt+0x21c4>
   13c24:	andeq	pc, r1, r4, asr #15
   13c28:	andeq	ip, r8, r0, lsl #18
   13c2c:	andeq	r4, r8, r0, lsl #18
   13c30:	ldr	r3, [r0]
   13c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c38:	sub	sp, sp, #68	; 0x44
   13c3c:	mov	r6, r0
   13c40:	str	r3, [sp, #8]
   13c44:	ldr	r3, [r3, #12]
   13c48:	str	r1, [sp, #40]	; 0x28
   13c4c:	cmp	r3, #0
   13c50:	str	r3, [sp, #44]	; 0x2c
   13c54:	beq	1423c <__assert_fail@plt+0x2970>
   13c58:	mov	r0, r3
   13c5c:	bl	117e8 <dirfd@plt>
   13c60:	cmp	r0, #0
   13c64:	str	r0, [sp, #60]	; 0x3c
   13c68:	blt	14678 <__assert_fail@plt+0x2dac>
   13c6c:	ldr	r3, [r6, #44]	; 0x2c
   13c70:	cmp	r3, #0
   13c74:	beq	148fc <__assert_fail@plt+0x3030>
   13c78:	mvn	r3, #0
   13c7c:	str	r3, [sp, #24]
   13c80:	ldr	r0, [r6, #48]	; 0x30
   13c84:	ldr	r2, [sp, #8]
   13c88:	mov	r3, #1
   13c8c:	str	r3, [sp, #52]	; 0x34
   13c90:	ldr	r3, [r2, #40]	; 0x28
   13c94:	ldr	r1, [r2, #28]
   13c98:	sub	r2, r3, #1
   13c9c:	ldrb	r1, [r1, r2]
   13ca0:	cmp	r1, #47	; 0x2f
   13ca4:	moveq	r3, r2
   13ca8:	ands	r0, r0, #4
   13cac:	movne	r0, #47	; 0x2f
   13cb0:	ldrne	r2, [r6, #24]
   13cb4:	streq	r0, [sp, #32]
   13cb8:	addne	r1, r2, r3
   13cbc:	strbne	r0, [r2, r3]
   13cc0:	addne	r2, r1, #1
   13cc4:	strne	r2, [sp, #32]
   13cc8:	ldr	r2, [sp, #8]
   13ccc:	add	r3, r3, #1
   13cd0:	ldr	r1, [r6, #36]	; 0x24
   13cd4:	ldr	r2, [r2, #48]	; 0x30
   13cd8:	mov	r0, r3
   13cdc:	str	r3, [sp, #12]
   13ce0:	sub	r1, r1, r0
   13ce4:	mov	r3, #0
   13ce8:	add	r2, r2, #1
   13cec:	mov	r7, r3
   13cf0:	str	r3, [sp, #48]	; 0x30
   13cf4:	str	r1, [sp, #20]
   13cf8:	str	r2, [sp, #28]
   13cfc:	str	r3, [sp, #36]	; 0x24
   13d00:	str	r3, [sp]
   13d04:	mov	sl, r3
   13d08:	str	r3, [sp, #16]
   13d0c:	b	13d90 <__assert_fail@plt+0x24c4>
   13d10:	tst	r3, #251	; 0xfb
   13d14:	beq	13ea4 <__assert_fail@plt+0x25d8>
   13d18:	lsr	r2, r1, #4
   13d1c:	cmp	r3, #10
   13d20:	orrne	r2, r2, #1
   13d24:	tst	r2, #1
   13d28:	beq	14368 <__assert_fail@plt+0x2a9c>
   13d2c:	sub	r3, r3, #1
   13d30:	mov	r2, #11
   13d34:	cmp	r3, #11
   13d38:	strh	r2, [r4, #56]	; 0x38
   13d3c:	bhi	14918 <__assert_fail@plt+0x304c>
   13d40:	ldr	r2, [pc, #3040]	; 14928 <__assert_fail@plt+0x305c>
   13d44:	ldr	r1, [r2, r3, lsl #2]
   13d48:	mov	r2, #1
   13d4c:	mov	r3, #0
   13d50:	str	r1, [r4, #80]	; 0x50
   13d54:	strd	r2, [r4, #112]	; 0x70
   13d58:	ldr	r3, [sp, #16]
   13d5c:	str	r7, [r4, #8]
   13d60:	cmp	r3, #0
   13d64:	streq	r4, [sp, #16]
   13d68:	ldrne	r3, [sp]
   13d6c:	strne	r4, [r3, #8]
   13d70:	ldr	r3, [pc, #2996]	; 1492c <__assert_fail@plt+0x3060>
   13d74:	cmp	sl, r3
   13d78:	beq	13ff4 <__assert_fail@plt+0x2728>
   13d7c:	ldr	r3, [sp, #24]
   13d80:	add	sl, sl, #1
   13d84:	cmp	r3, sl
   13d88:	bls	1410c <__assert_fail@plt+0x2840>
   13d8c:	str	r4, [sp]
   13d90:	ldr	r3, [sp, #8]
   13d94:	ldr	r4, [r3, #12]
   13d98:	cmp	r4, #0
   13d9c:	beq	1410c <__assert_fail@plt+0x2840>
   13da0:	bl	1171c <__errno_location@plt>
   13da4:	mov	fp, r0
   13da8:	mov	r0, r4
   13dac:	str	r7, [fp]
   13db0:	bl	117c4 <readdir64@plt>
   13db4:	subs	r8, r0, #0
   13db8:	beq	14508 <__assert_fail@plt+0x2c3c>
   13dbc:	ldr	r3, [r6, #48]	; 0x30
   13dc0:	tst	r3, #32
   13dc4:	bne	13dd4 <__assert_fail@plt+0x2508>
   13dc8:	ldrb	r3, [r8, #19]
   13dcc:	cmp	r3, #46	; 0x2e
   13dd0:	beq	14058 <__assert_fail@plt+0x278c>
   13dd4:	add	r1, r8, #19
   13dd8:	mov	r0, r1
   13ddc:	str	r1, [sp, #4]
   13de0:	bl	116e0 <strlen@plt>
   13de4:	mov	r5, r0
   13de8:	add	r0, r0, #176	; 0xb0
   13dec:	bic	r0, r0, #7
   13df0:	bl	1dfec <lchmod@@Base+0x6960>
   13df4:	subs	r4, r0, #0
   13df8:	beq	14100 <__assert_fail@plt+0x2834>
   13dfc:	add	r9, r4, #168	; 0xa8
   13e00:	ldr	r1, [sp, #4]
   13e04:	mov	r2, r5
   13e08:	mov	r0, r9
   13e0c:	bl	11530 <memcpy@plt>
   13e10:	ldr	r3, [sp, #20]
   13e14:	add	r1, r4, r5
   13e18:	ldr	r2, [r6, #24]
   13e1c:	mov	r0, #196608	; 0x30000
   13e20:	cmp	r3, r5
   13e24:	strb	r7, [r1, #168]	; 0xa8
   13e28:	str	r5, [r4, #52]	; 0x34
   13e2c:	str	r6, [r4, #44]	; 0x2c
   13e30:	str	r7, [r4, #32]
   13e34:	str	r7, [r4, #12]
   13e38:	str	r7, [r4, #16]
   13e3c:	str	r7, [r4, #20]
   13e40:	str	r2, [r4, #28]
   13e44:	str	r0, [r4, #58]	; 0x3a
   13e48:	bls	13edc <__assert_fail@plt+0x2610>
   13e4c:	ldr	r3, [sp, #12]
   13e50:	adds	r5, r3, r5
   13e54:	bcs	13f5c <__assert_fail@plt+0x2690>
   13e58:	ldrd	r2, [r8]
   13e5c:	ldr	r1, [r6, #48]	; 0x30
   13e60:	ldr	r0, [sp, #28]
   13e64:	strd	r2, [r4, #160]	; 0xa0
   13e68:	ldr	r3, [r6]
   13e6c:	tst	r1, #4
   13e70:	str	r0, [r4, #48]	; 0x30
   13e74:	str	r5, [r4, #40]	; 0x28
   13e78:	str	r3, [r4, #4]
   13e7c:	streq	r9, [r4, #24]
   13e80:	bne	13fd0 <__assert_fail@plt+0x2704>
   13e84:	ldr	r3, [r6, #44]	; 0x2c
   13e88:	cmp	r3, #0
   13e8c:	beq	13e98 <__assert_fail@plt+0x25cc>
   13e90:	tst	r1, #1024	; 0x400
   13e94:	beq	14040 <__assert_fail@plt+0x2774>
   13e98:	tst	r1, #8
   13e9c:	ldrb	r3, [r8, #18]
   13ea0:	bne	13d10 <__assert_fail@plt+0x2444>
   13ea4:	sub	r3, r3, #1
   13ea8:	cmp	r3, #11
   13eac:	mov	r2, #11
   13eb0:	strh	r2, [r4, #56]	; 0x38
   13eb4:	strhi	r7, [r4, #80]	; 0x50
   13eb8:	movhi	r2, #2
   13ebc:	movhi	r3, #0
   13ec0:	bhi	13d54 <__assert_fail@plt+0x2488>
   13ec4:	ldr	r2, [pc, #2652]	; 14928 <__assert_fail@plt+0x305c>
   13ec8:	ldr	r1, [r2, r3, lsl #2]
   13ecc:	mov	r2, #2
   13ed0:	mov	r3, #0
   13ed4:	str	r1, [r4, #80]	; 0x50
   13ed8:	b	13d54 <__assert_fail@plt+0x2488>
   13edc:	ldr	r0, [r6, #36]	; 0x24
   13ee0:	ldr	r3, [sp, #12]
   13ee4:	add	r1, r0, #256	; 0x100
   13ee8:	add	r1, r1, #1
   13eec:	add	r1, r1, r3
   13ef0:	add	r1, r1, r5
   13ef4:	cmp	r0, r1
   13ef8:	bhi	14078 <__assert_fail@plt+0x27ac>
   13efc:	mov	r0, r2
   13f00:	str	r1, [r6, #36]	; 0x24
   13f04:	str	r2, [sp, #4]
   13f08:	bl	1e018 <lchmod@@Base+0x698c>
   13f0c:	ldr	r2, [sp, #4]
   13f10:	cmp	r0, #0
   13f14:	beq	146f4 <__assert_fail@plt+0x2e28>
   13f18:	cmp	r2, r0
   13f1c:	str	r0, [r6, #24]
   13f20:	beq	13f40 <__assert_fail@plt+0x2674>
   13f24:	ldr	r2, [r6, #48]	; 0x30
   13f28:	tst	r2, #4
   13f2c:	ldrne	r3, [sp, #12]
   13f30:	addne	r3, r0, r3
   13f34:	strne	r3, [sp, #32]
   13f38:	mov	r3, #1
   13f3c:	str	r3, [sp, #36]	; 0x24
   13f40:	ldr	r2, [r6, #36]	; 0x24
   13f44:	ldr	r3, [sp, #12]
   13f48:	sub	r3, r2, r3
   13f4c:	str	r3, [sp, #20]
   13f50:	ldr	r3, [sp, #12]
   13f54:	adds	r5, r3, r5
   13f58:	bcc	13e58 <__assert_fail@plt+0x258c>
   13f5c:	ldr	r8, [sp, #16]
   13f60:	mov	r0, r4
   13f64:	bl	1355c <__assert_fail@plt+0x1c90>
   13f68:	cmp	r8, #0
   13f6c:	beq	13f94 <__assert_fail@plt+0x26c8>
   13f70:	ldr	r3, [r8, #12]
   13f74:	ldr	r4, [r8, #8]
   13f78:	subs	r0, r3, #0
   13f7c:	beq	13f84 <__assert_fail@plt+0x26b8>
   13f80:	bl	118b4 <closedir@plt>
   13f84:	mov	r0, r8
   13f88:	bl	1355c <__assert_fail@plt+0x1c90>
   13f8c:	subs	r8, r4, #0
   13f90:	bne	13f70 <__assert_fail@plt+0x26a4>
   13f94:	ldr	r4, [sp, #8]
   13f98:	mov	r8, #0
   13f9c:	ldr	r0, [r4, #12]
   13fa0:	bl	118b4 <closedir@plt>
   13fa4:	ldr	r3, [r6, #48]	; 0x30
   13fa8:	mov	r1, #7
   13fac:	orr	r3, r3, #8192	; 0x2000
   13fb0:	mov	r2, #36	; 0x24
   13fb4:	str	r8, [r4, #12]
   13fb8:	strh	r1, [r4, #56]	; 0x38
   13fbc:	str	r3, [r6, #48]	; 0x30
   13fc0:	str	r2, [fp]
   13fc4:	mov	r0, r8
   13fc8:	add	sp, sp, #68	; 0x44
   13fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fd0:	ldr	r0, [r4, #28]
   13fd4:	ldr	r2, [r4, #52]	; 0x34
   13fd8:	mov	r1, r9
   13fdc:	str	r0, [r4, #24]
   13fe0:	add	r2, r2, #1
   13fe4:	ldr	r0, [sp, #32]
   13fe8:	bl	11500 <memmove@plt>
   13fec:	ldr	r1, [r6, #48]	; 0x30
   13ff0:	b	13e84 <__assert_fail@plt+0x25b8>
   13ff4:	ldr	r3, [r6, #44]	; 0x2c
   13ff8:	cmp	r3, #0
   13ffc:	bne	13d7c <__assert_fail@plt+0x24b0>
   14000:	ldr	r1, [sp, #60]	; 0x3c
   14004:	ldr	r0, [sp, #8]
   14008:	bl	13684 <__assert_fail@plt+0x1db8>
   1400c:	ldr	r3, [pc, #2332]	; 14930 <__assert_fail@plt+0x3064>
   14010:	cmp	r0, r3
   14014:	beq	14038 <__assert_fail@plt+0x276c>
   14018:	ldr	r3, [pc, #2324]	; 14934 <__assert_fail@plt+0x3068>
   1401c:	cmp	r0, r3
   14020:	beq	14038 <__assert_fail@plt+0x276c>
   14024:	ldr	r3, [pc, #2316]	; 14938 <__assert_fail@plt+0x306c>
   14028:	cmp	r0, r3
   1402c:	movne	r3, #1
   14030:	strne	r3, [sp, #48]	; 0x30
   14034:	bne	13d7c <__assert_fail@plt+0x24b0>
   14038:	str	r7, [sp, #48]	; 0x30
   1403c:	b	13d7c <__assert_fail@plt+0x24b0>
   14040:	mov	r3, r7
   14044:	mov	r2, r4
   14048:	ldr	r0, [r6, #32]
   1404c:	bl	13794 <__assert_fail@plt+0x1ec8>
   14050:	strh	r0, [r4, #56]	; 0x38
   14054:	b	13d58 <__assert_fail@plt+0x248c>
   14058:	ldrb	r3, [r8, #20]
   1405c:	cmp	r3, #0
   14060:	beq	14070 <__assert_fail@plt+0x27a4>
   14064:	ldrh	r3, [r8, #20]
   14068:	cmp	r3, #46	; 0x2e
   1406c:	bne	13dd4 <__assert_fail@plt+0x2508>
   14070:	ldr	r4, [sp]
   14074:	b	13d8c <__assert_fail@plt+0x24c0>
   14078:	mov	r0, r2
   1407c:	ldr	r8, [sp, #16]
   14080:	bl	1355c <__assert_fail@plt+0x1c90>
   14084:	mov	r3, #36	; 0x24
   14088:	mov	r5, r3
   1408c:	str	r7, [r6, #24]
   14090:	str	r3, [fp]
   14094:	mov	r0, r4
   14098:	bl	1355c <__assert_fail@plt+0x1c90>
   1409c:	cmp	r8, #0
   140a0:	beq	140c8 <__assert_fail@plt+0x27fc>
   140a4:	ldr	r3, [r8, #12]
   140a8:	ldr	r4, [r8, #8]
   140ac:	subs	r0, r3, #0
   140b0:	beq	140b8 <__assert_fail@plt+0x27ec>
   140b4:	bl	118b4 <closedir@plt>
   140b8:	mov	r0, r8
   140bc:	bl	1355c <__assert_fail@plt+0x1c90>
   140c0:	subs	r8, r4, #0
   140c4:	bne	140a4 <__assert_fail@plt+0x27d8>
   140c8:	ldr	r4, [sp, #8]
   140cc:	mov	r8, #0
   140d0:	ldr	r0, [r4, #12]
   140d4:	bl	118b4 <closedir@plt>
   140d8:	ldr	r3, [r6, #48]	; 0x30
   140dc:	mov	r2, #7
   140e0:	orr	r3, r3, #8192	; 0x2000
   140e4:	str	r8, [r4, #12]
   140e8:	strh	r2, [r4, #56]	; 0x38
   140ec:	mov	r0, r8
   140f0:	str	r3, [r6, #48]	; 0x30
   140f4:	str	r5, [fp]
   140f8:	add	sp, sp, #68	; 0x44
   140fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14100:	ldr	r8, [sp, #16]
   14104:	ldr	r5, [fp]
   14108:	b	14094 <__assert_fail@plt+0x27c8>
   1410c:	ldr	r8, [sp, #16]
   14110:	ldr	r3, [sp, #36]	; 0x24
   14114:	cmp	r3, #0
   14118:	bne	14560 <__assert_fail@plt+0x2c94>
   1411c:	ldr	r3, [r6, #48]	; 0x30
   14120:	tst	r3, #4
   14124:	beq	14150 <__assert_fail@plt+0x2884>
   14128:	ldr	r3, [r6, #36]	; 0x24
   1412c:	ldr	r2, [sp, #12]
   14130:	cmp	sl, #0
   14134:	cmpne	r3, r2
   14138:	ldreq	r3, [sp, #32]
   1413c:	subeq	r3, r3, #1
   14140:	streq	r3, [sp, #32]
   14144:	ldr	r2, [sp, #32]
   14148:	mov	r3, #0
   1414c:	strb	r3, [r2]
   14150:	ldr	r3, [sp, #52]	; 0x34
   14154:	ldr	r2, [sp, #44]	; 0x2c
   14158:	cmp	r2, #0
   1415c:	movne	r3, #0
   14160:	andeq	r3, r3, #1
   14164:	cmp	r3, #0
   14168:	beq	141f8 <__assert_fail@plt+0x292c>
   1416c:	ldr	r3, [sp, #40]	; 0x28
   14170:	cmp	sl, #0
   14174:	cmpne	r3, #1
   14178:	beq	14404 <__assert_fail@plt+0x2b38>
   1417c:	ldr	r3, [sp, #48]	; 0x30
   14180:	cmp	r3, #0
   14184:	bne	145e4 <__assert_fail@plt+0x2d18>
   14188:	ldr	r4, [r6, #44]	; 0x2c
   1418c:	cmp	r4, #0
   14190:	cmpne	sl, #1
   14194:	bls	13fc4 <__assert_fail@plt+0x26f8>
   14198:	ldr	r3, [r6, #40]	; 0x28
   1419c:	cmp	sl, r3
   141a0:	bls	14398 <__assert_fail@plt+0x2acc>
   141a4:	add	r1, sl, #40	; 0x28
   141a8:	cmn	r1, #-1073741823	; 0xc0000001
   141ac:	str	r1, [r6, #40]	; 0x28
   141b0:	bhi	146dc <__assert_fail@plt+0x2e10>
   141b4:	lsl	r1, r1, #2
   141b8:	ldr	r0, [r6, #8]
   141bc:	bl	1e018 <lchmod@@Base+0x698c>
   141c0:	cmp	r0, #0
   141c4:	beq	146dc <__assert_fail@plt+0x2e10>
   141c8:	str	r0, [r6, #8]
   141cc:	b	1439c <__assert_fail@plt+0x2ad0>
   141d0:	ldr	r1, [sp, #8]
   141d4:	ldr	r3, [pc, #1888]	; 1493c <__assert_fail@plt+0x3070>
   141d8:	mvn	r2, #0
   141dc:	ldr	r1, [r1, #4]
   141e0:	mov	r0, r6
   141e4:	bl	13998 <__assert_fail@plt+0x20cc>
   141e8:	adds	r5, r0, #0
   141ec:	movne	r5, #1
   141f0:	cmp	r5, #0
   141f4:	bne	147a0 <__assert_fail@plt+0x2ed4>
   141f8:	cmp	sl, #0
   141fc:	bne	1417c <__assert_fail@plt+0x28b0>
   14200:	ldr	r3, [sp, #40]	; 0x28
   14204:	cmp	r3, #3
   14208:	beq	14768 <__assert_fail@plt+0x2e9c>
   1420c:	cmp	r8, #0
   14210:	beq	14698 <__assert_fail@plt+0x2dcc>
   14214:	ldr	r3, [r8, #12]
   14218:	ldr	r4, [r8, #8]
   1421c:	subs	r0, r3, #0
   14220:	beq	14228 <__assert_fail@plt+0x295c>
   14224:	bl	118b4 <closedir@plt>
   14228:	mov	r0, r8
   1422c:	bl	1355c <__assert_fail@plt+0x1c90>
   14230:	subs	r8, r4, #0
   14234:	bne	14214 <__assert_fail@plt+0x2948>
   14238:	b	14698 <__assert_fail@plt+0x2dcc>
   1423c:	ldr	r3, [r0, #48]	; 0x30
   14240:	ldr	ip, [sp, #8]
   14244:	and	r2, r3, #516	; 0x204
   14248:	cmp	r2, #512	; 0x200
   1424c:	mvnne	r0, #99	; 0x63
   14250:	ldreq	r0, [r0, #32]
   14254:	ands	r2, r3, #16
   14258:	ldr	r1, [ip, #24]
   1425c:	bne	14378 <__assert_fail@plt+0x2aac>
   14260:	add	r3, sp, #60	; 0x3c
   14264:	bl	17cfc <lchmod@@Base+0x670>
   14268:	ldr	r3, [sp, #8]
   1426c:	cmp	r0, #0
   14270:	mov	r8, r0
   14274:	str	r0, [r3, #12]
   14278:	beq	147e8 <__assert_fail@plt+0x2f1c>
   1427c:	ldrh	r3, [r3, #56]	; 0x38
   14280:	cmp	r3, #11
   14284:	beq	14810 <__assert_fail@plt+0x2f44>
   14288:	ldr	r0, [r6, #48]	; 0x30
   1428c:	tst	r0, #256	; 0x100
   14290:	bne	1446c <__assert_fail@plt+0x2ba0>
   14294:	ldr	r2, [r6, #44]	; 0x2c
   14298:	ldr	r3, [pc, #1696]	; 14940 <__assert_fail@plt+0x3074>
   1429c:	cmp	r2, #0
   142a0:	mvnne	r3, #0
   142a4:	str	r3, [sp, #24]
   142a8:	ldr	r3, [sp, #40]	; 0x28
   142ac:	cmp	r3, #2
   142b0:	beq	14714 <__assert_fail@plt+0x2e48>
   142b4:	ldr	r3, [r6, #48]	; 0x30
   142b8:	and	r3, r3, #56	; 0x38
   142bc:	cmp	r3, #24
   142c0:	beq	14830 <__assert_fail@plt+0x2f64>
   142c4:	ldr	r3, [sp, #40]	; 0x28
   142c8:	mov	r4, #1
   142cc:	sub	r5, r3, #3
   142d0:	clz	r5, r5
   142d4:	lsr	r5, r5, #5
   142d8:	ldr	r3, [r6, #48]	; 0x30
   142dc:	tst	r3, #512	; 0x200
   142e0:	bne	14784 <__assert_fail@plt+0x2eb8>
   142e4:	ldr	r2, [sp, #60]	; 0x3c
   142e8:	cmp	r2, #0
   142ec:	blt	14308 <__assert_fail@plt+0x2a3c>
   142f0:	mov	r3, #0
   142f4:	ldr	r1, [sp, #8]
   142f8:	mov	r0, r6
   142fc:	bl	13998 <__assert_fail@plt+0x20cc>
   14300:	cmp	r0, #0
   14304:	beq	13c80 <__assert_fail@plt+0x23b4>
   14308:	tst	r4, r5
   1430c:	bne	14888 <__assert_fail@plt+0x2fbc>
   14310:	ldr	r4, [sp, #8]
   14314:	ldrh	r3, [r4, #58]	; 0x3a
   14318:	ldr	r0, [r4, #12]
   1431c:	orr	r3, r3, #1
   14320:	strh	r3, [r4, #58]	; 0x3a
   14324:	bl	118b4 <closedir@plt>
   14328:	ldr	r0, [r6, #48]	; 0x30
   1432c:	mov	r3, #0
   14330:	tst	r0, #512	; 0x200
   14334:	str	r3, [r4, #12]
   14338:	beq	14354 <__assert_fail@plt+0x2a88>
   1433c:	ldr	r3, [sp, #60]	; 0x3c
   14340:	cmp	r3, #0
   14344:	blt	14354 <__assert_fail@plt+0x2a88>
   14348:	mov	r0, r3
   1434c:	bl	11884 <close@plt>
   14350:	ldr	r0, [r6, #48]	; 0x30
   14354:	ldr	r2, [sp, #8]
   14358:	mov	r3, #0
   1435c:	str	r3, [sp, #52]	; 0x34
   14360:	str	r3, [r2, #12]
   14364:	b	13c90 <__assert_fail@plt+0x23c4>
   14368:	mov	r3, #11
   1436c:	strh	r3, [r4, #56]	; 0x38
   14370:	mov	r3, #9
   14374:	b	13ec4 <__assert_fail@plt+0x25f8>
   14378:	tst	r3, #1
   1437c:	moveq	r2, #32768	; 0x8000
   14380:	beq	14260 <__assert_fail@plt+0x2994>
   14384:	ldr	r2, [ip, #48]	; 0x30
   14388:	cmp	r2, #0
   1438c:	movne	r2, #32768	; 0x8000
   14390:	moveq	r2, #0
   14394:	b	14260 <__assert_fail@plt+0x2994>
   14398:	ldr	r0, [r6, #8]
   1439c:	cmp	r8, #0
   143a0:	movne	r2, r0
   143a4:	beq	143b8 <__assert_fail@plt+0x2aec>
   143a8:	str	r8, [r2], #4
   143ac:	ldr	r8, [r8, #8]
   143b0:	cmp	r8, #0
   143b4:	bne	143a8 <__assert_fail@plt+0x2adc>
   143b8:	mov	r3, r4
   143bc:	mov	r2, #4
   143c0:	mov	r1, sl
   143c4:	bl	11800 <qsort@plt>
   143c8:	ldr	ip, [r6, #8]
   143cc:	sub	r3, sl, #1
   143d0:	mov	r2, ip
   143d4:	ldr	r8, [ip]
   143d8:	ldr	r1, [r2]
   143dc:	ldr	r0, [r2, #4]!
   143e0:	subs	r3, r3, #1
   143e4:	str	r0, [r1, #8]
   143e8:	bne	143d8 <__assert_fail@plt+0x2b0c>
   143ec:	add	sl, ip, sl, lsl #2
   143f0:	mov	r0, r8
   143f4:	ldr	r2, [sl, #-4]
   143f8:	str	r3, [r2, #8]
   143fc:	add	sp, sp, #68	; 0x44
   14400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14404:	ldr	r3, [sp, #8]
   14408:	ldr	r3, [r3, #48]	; 0x30
   1440c:	cmp	r3, #0
   14410:	bne	141d0 <__assert_fail@plt+0x2904>
   14414:	ldr	r2, [r6, #48]	; 0x30
   14418:	tst	r2, #4
   1441c:	movne	r5, r3
   14420:	addne	r4, r6, #60	; 0x3c
   14424:	bne	14454 <__assert_fail@plt+0x2b88>
   14428:	tst	r2, #512	; 0x200
   1442c:	bne	148a0 <__assert_fail@plt+0x2fd4>
   14430:	ldr	r0, [r6, #28]
   14434:	bl	117f4 <fchdir@plt>
   14438:	add	r4, r6, #60	; 0x3c
   1443c:	adds	r5, r0, #0
   14440:	movne	r5, #1
   14444:	b	14454 <__assert_fail@plt+0x2b88>
   14448:	bl	17644 <__assert_fail@plt+0x5d78>
   1444c:	cmp	r0, #0
   14450:	bge	146d4 <__assert_fail@plt+0x2e08>
   14454:	mov	r0, r4
   14458:	bl	175f8 <__assert_fail@plt+0x5d2c>
   1445c:	cmp	r0, #0
   14460:	mov	r0, r4
   14464:	beq	14448 <__assert_fail@plt+0x2b7c>
   14468:	b	141f0 <__assert_fail@plt+0x2924>
   1446c:	ldr	r5, [sp, #8]
   14470:	add	r1, r6, #56	; 0x38
   14474:	mov	r2, r5
   14478:	bl	138e0 <__assert_fail@plt+0x2014>
   1447c:	mov	r3, #0
   14480:	mov	r2, r5
   14484:	ldr	r1, [r6, #48]	; 0x30
   14488:	ldr	r0, [r6, #32]
   1448c:	bl	13794 <__assert_fail@plt+0x1ec8>
   14490:	ldr	r2, [r6, #48]	; 0x30
   14494:	ldr	r3, [pc, #1192]	; 14944 <__assert_fail@plt+0x3078>
   14498:	mov	r7, r5
   1449c:	and	r3, r3, r2
   144a0:	cmp	r3, #0
   144a4:	beq	14728 <__assert_fail@plt+0x2e5c>
   144a8:	mov	r0, #24
   144ac:	bl	1dfec <lchmod@@Base+0x6960>
   144b0:	subs	r4, r0, #0
   144b4:	beq	148cc <__assert_fail@plt+0x3000>
   144b8:	ldrd	r0, [r5, #160]	; 0xa0
   144bc:	ldrd	r2, [r5, #64]	; 0x40
   144c0:	str	r5, [r4, #16]
   144c4:	strd	r0, [r4, #8]
   144c8:	strd	r2, [r4]
   144cc:	mov	r1, r4
   144d0:	ldr	r0, [r6, #56]	; 0x38
   144d4:	bl	16d88 <__assert_fail@plt+0x54bc>
   144d8:	cmp	r4, r0
   144dc:	mov	r5, r0
   144e0:	beq	14294 <__assert_fail@plt+0x29c8>
   144e4:	mov	r0, r4
   144e8:	bl	1355c <__assert_fail@plt+0x1c90>
   144ec:	cmp	r5, #0
   144f0:	beq	148cc <__assert_fail@plt+0x3000>
   144f4:	ldr	r2, [r5, #16]
   144f8:	mov	r3, #2
   144fc:	str	r2, [r7]
   14500:	strh	r3, [r7, #56]	; 0x38
   14504:	b	14294 <__assert_fail@plt+0x29c8>
   14508:	ldr	r3, [fp]
   1450c:	ldr	r8, [sp, #16]
   14510:	cmp	r3, #0
   14514:	beq	14538 <__assert_fail@plt+0x2c6c>
   14518:	ldr	r2, [sp, #44]	; 0x2c
   1451c:	ldr	r1, [sp, #8]
   14520:	cmp	sl, #0
   14524:	cmpeq	r2, #0
   14528:	moveq	r2, #4
   1452c:	movne	r2, #7
   14530:	str	r3, [r1, #32]
   14534:	strh	r2, [r1, #56]	; 0x38
   14538:	ldr	r4, [sp, #8]
   1453c:	ldr	r0, [r4, #12]
   14540:	cmp	r0, #0
   14544:	beq	14110 <__assert_fail@plt+0x2844>
   14548:	bl	118b4 <closedir@plt>
   1454c:	mov	r3, #0
   14550:	str	r3, [r4, #12]
   14554:	ldr	r3, [sp, #36]	; 0x24
   14558:	cmp	r3, #0
   1455c:	beq	1411c <__assert_fail@plt+0x2850>
   14560:	ldr	r1, [r6, #4]
   14564:	ldr	r0, [r6, #24]
   14568:	cmp	r1, #0
   1456c:	beq	1459c <__assert_fail@plt+0x2cd0>
   14570:	ldr	r3, [r1, #24]
   14574:	add	r2, r1, #168	; 0xa8
   14578:	cmp	r3, r2
   1457c:	ldrne	r2, [r1, #28]
   14580:	str	r0, [r1, #28]
   14584:	subne	r3, r3, r2
   14588:	addne	r3, r0, r3
   1458c:	strne	r3, [r1, #24]
   14590:	ldr	r1, [r1, #8]
   14594:	cmp	r1, #0
   14598:	bne	14570 <__assert_fail@plt+0x2ca4>
   1459c:	mov	r3, r8
   145a0:	b	145d0 <__assert_fail@plt+0x2d04>
   145a4:	ldr	r2, [r3, #24]
   145a8:	cmp	r2, r1
   145ac:	ldrne	r1, [r3, #28]
   145b0:	str	r0, [r3, #28]
   145b4:	subne	r2, r2, r1
   145b8:	addne	r2, r0, r2
   145bc:	strne	r2, [r3, #24]
   145c0:	ldr	r2, [r3, #8]
   145c4:	cmp	r2, #0
   145c8:	ldreq	r2, [r3, #4]
   145cc:	mov	r3, r2
   145d0:	ldr	r2, [r3, #48]	; 0x30
   145d4:	add	r1, r3, #168	; 0xa8
   145d8:	cmp	r2, #0
   145dc:	bge	145a4 <__assert_fail@plt+0x2cd8>
   145e0:	b	1411c <__assert_fail@plt+0x2850>
   145e4:	ldr	r2, [r6, #40]	; 0x28
   145e8:	ldr	r3, [pc, #856]	; 14948 <__assert_fail@plt+0x307c>
   145ec:	cmp	sl, r2
   145f0:	str	r3, [r6, #44]	; 0x2c
   145f4:	bhi	146a8 <__assert_fail@plt+0x2ddc>
   145f8:	ldr	r0, [r6, #8]
   145fc:	cmp	r8, #0
   14600:	movne	r3, r0
   14604:	beq	14618 <__assert_fail@plt+0x2d4c>
   14608:	str	r8, [r3], #4
   1460c:	ldr	r8, [r8, #8]
   14610:	cmp	r8, #0
   14614:	bne	14608 <__assert_fail@plt+0x2d3c>
   14618:	ldr	r3, [pc, #808]	; 14948 <__assert_fail@plt+0x307c>
   1461c:	mov	r2, #4
   14620:	mov	r1, sl
   14624:	bl	11800 <qsort@plt>
   14628:	ldr	ip, [r6, #8]
   1462c:	subs	r3, sl, #1
   14630:	ldr	r8, [ip]
   14634:	moveq	r3, r8
   14638:	beq	1465c <__assert_fail@plt+0x2d90>
   1463c:	mov	r2, ip
   14640:	ldr	r1, [r2]
   14644:	ldr	r0, [r2, #4]!
   14648:	subs	r3, r3, #1
   1464c:	str	r0, [r1, #8]
   14650:	bne	14640 <__assert_fail@plt+0x2d74>
   14654:	add	ip, ip, sl, lsl #2
   14658:	ldr	r3, [ip, #-4]
   1465c:	mov	r2, #0
   14660:	str	r2, [r3, #8]
   14664:	mov	r3, #0
   14668:	mov	r0, r8
   1466c:	str	r3, [r6, #44]	; 0x2c
   14670:	add	sp, sp, #68	; 0x44
   14674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14678:	ldr	r4, [sp, #8]
   1467c:	mov	r8, #0
   14680:	ldr	r0, [r4, #12]
   14684:	bl	118b4 <closedir@plt>
   14688:	ldr	r3, [sp, #40]	; 0x28
   1468c:	str	r8, [r4, #12]
   14690:	cmp	r3, #3
   14694:	beq	147f4 <__assert_fail@plt+0x2f28>
   14698:	mov	r8, #0
   1469c:	mov	r0, r8
   146a0:	add	sp, sp, #68	; 0x44
   146a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146a8:	add	r1, sl, #40	; 0x28
   146ac:	cmn	r1, #-1073741823	; 0xc0000001
   146b0:	str	r1, [r6, #40]	; 0x28
   146b4:	bhi	14750 <__assert_fail@plt+0x2e84>
   146b8:	lsl	r1, r1, #2
   146bc:	ldr	r0, [r6, #8]
   146c0:	bl	1e018 <lchmod@@Base+0x698c>
   146c4:	cmp	r0, #0
   146c8:	beq	14750 <__assert_fail@plt+0x2e84>
   146cc:	str	r0, [r6, #8]
   146d0:	b	145fc <__assert_fail@plt+0x2d30>
   146d4:	bl	11884 <close@plt>
   146d8:	b	14454 <__assert_fail@plt+0x2b88>
   146dc:	ldr	r0, [r6, #8]
   146e0:	bl	1355c <__assert_fail@plt+0x1c90>
   146e4:	mov	r3, #0
   146e8:	str	r3, [r6, #8]
   146ec:	str	r3, [r6, #40]	; 0x28
   146f0:	b	13fc4 <__assert_fail@plt+0x26f8>
   146f4:	str	r0, [sp]
   146f8:	ldr	r0, [r6, #24]
   146fc:	ldr	r8, [sp, #16]
   14700:	bl	1355c <__assert_fail@plt+0x1c90>
   14704:	ldr	r1, [sp]
   14708:	ldr	r5, [fp]
   1470c:	str	r1, [r6, #24]
   14710:	b	14094 <__assert_fail@plt+0x27c8>
   14714:	mov	r3, #0
   14718:	str	r3, [sp, #52]	; 0x34
   1471c:	ldr	r0, [r6, #48]	; 0x30
   14720:	ldr	r2, [sp, #8]
   14724:	b	13c90 <__assert_fail@plt+0x23c4>
   14728:	ldr	r4, [sp, #8]
   1472c:	ldr	r0, [r6, #56]	; 0x38
   14730:	add	r1, r4, #64	; 0x40
   14734:	bl	1e1c0 <lchmod@@Base+0x6b34>
   14738:	cmp	r0, #0
   1473c:	movne	r2, r4
   14740:	movne	r3, #2
   14744:	strne	r4, [r2]
   14748:	strhne	r3, [r4, #56]	; 0x38
   1474c:	b	14294 <__assert_fail@plt+0x29c8>
   14750:	ldr	r0, [r6, #8]
   14754:	bl	1355c <__assert_fail@plt+0x1c90>
   14758:	mov	r3, #0
   1475c:	str	r3, [r6, #8]
   14760:	str	r3, [r6, #40]	; 0x28
   14764:	b	14664 <__assert_fail@plt+0x2d98>
   14768:	ldr	r2, [sp, #8]
   1476c:	ldrh	r3, [r2, #56]	; 0x38
   14770:	cmp	r3, #7
   14774:	cmpne	r3, #4
   14778:	movne	r3, #6
   1477c:	strhne	r3, [r2, #56]	; 0x38
   14780:	b	1420c <__assert_fail@plt+0x2940>
   14784:	mov	r2, #3
   14788:	ldr	r1, [pc, #444]	; 1494c <__assert_fail@plt+0x3080>
   1478c:	ldr	r0, [sp, #60]	; 0x3c
   14790:	bl	1e32c <lchmod@@Base+0x6ca0>
   14794:	mov	r2, r0
   14798:	str	r0, [sp, #60]	; 0x3c
   1479c:	b	142e8 <__assert_fail@plt+0x2a1c>
   147a0:	ldr	r3, [r6, #48]	; 0x30
   147a4:	ldr	r1, [sp, #8]
   147a8:	orr	r3, r3, #8192	; 0x2000
   147ac:	mov	r2, #7
   147b0:	cmp	r8, #0
   147b4:	strh	r2, [r1, #56]	; 0x38
   147b8:	str	r3, [r6, #48]	; 0x30
   147bc:	beq	14698 <__assert_fail@plt+0x2dcc>
   147c0:	ldr	r3, [r8, #12]
   147c4:	ldr	r4, [r8, #8]
   147c8:	subs	r0, r3, #0
   147cc:	beq	147d4 <__assert_fail@plt+0x2f08>
   147d0:	bl	118b4 <closedir@plt>
   147d4:	mov	r0, r8
   147d8:	bl	1355c <__assert_fail@plt+0x1c90>
   147dc:	subs	r8, r4, #0
   147e0:	bne	147c0 <__assert_fail@plt+0x2ef4>
   147e4:	b	14698 <__assert_fail@plt+0x2dcc>
   147e8:	ldr	r3, [sp, #40]	; 0x28
   147ec:	cmp	r3, #3
   147f0:	bne	14698 <__assert_fail@plt+0x2dcc>
   147f4:	ldr	r4, [sp, #8]
   147f8:	mov	r3, #4
   147fc:	strh	r3, [r4, #56]	; 0x38
   14800:	bl	1171c <__errno_location@plt>
   14804:	ldr	r3, [r0]
   14808:	str	r3, [r4, #32]
   1480c:	b	13fc4 <__assert_fail@plt+0x26f8>
   14810:	ldr	r4, [sp, #8]
   14814:	mov	r3, #0
   14818:	mov	r2, r4
   1481c:	ldr	r1, [r6, #48]	; 0x30
   14820:	ldr	r0, [r6, #32]
   14824:	bl	13794 <__assert_fail@plt+0x1ec8>
   14828:	strh	r0, [r4, #56]	; 0x38
   1482c:	b	14294 <__assert_fail@plt+0x29c8>
   14830:	ldr	r3, [sp, #8]
   14834:	ldr	r3, [r3, #84]	; 0x54
   14838:	cmp	r3, #2
   1483c:	bne	142c4 <__assert_fail@plt+0x29f8>
   14840:	ldr	r1, [sp, #60]	; 0x3c
   14844:	ldr	r0, [sp, #8]
   14848:	bl	13684 <__assert_fail@plt+0x1db8>
   1484c:	ldr	r3, [pc, #220]	; 14930 <__assert_fail@plt+0x3064>
   14850:	cmp	r0, r3
   14854:	beq	142c4 <__assert_fail@plt+0x29f8>
   14858:	bgt	148e0 <__assert_fail@plt+0x3014>
   1485c:	ldr	r3, [pc, #212]	; 14938 <__assert_fail@plt+0x306c>
   14860:	cmp	r0, r3
   14864:	beq	142c4 <__assert_fail@plt+0x29f8>
   14868:	cmp	r0, #0
   1486c:	beq	142c4 <__assert_fail@plt+0x29f8>
   14870:	ldr	r3, [sp, #40]	; 0x28
   14874:	cmp	r3, #3
   14878:	bne	14714 <__assert_fail@plt+0x2e48>
   1487c:	mov	r5, #1
   14880:	mov	r4, #0
   14884:	b	142d8 <__assert_fail@plt+0x2a0c>
   14888:	bl	1171c <__errno_location@plt>
   1488c:	ldr	r2, [sp, #8]
   14890:	mov	r4, r2
   14894:	ldr	r3, [r0]
   14898:	str	r3, [r2, #32]
   1489c:	b	14314 <__assert_fail@plt+0x2a48>
   148a0:	add	r4, r6, #60	; 0x3c
   148a4:	mov	r0, r4
   148a8:	ldr	r1, [r6, #32]
   148ac:	bl	17600 <__assert_fail@plt+0x5d34>
   148b0:	cmp	r0, #0
   148b4:	blt	148bc <__assert_fail@plt+0x2ff0>
   148b8:	bl	11884 <close@plt>
   148bc:	mvn	r3, #99	; 0x63
   148c0:	str	r3, [r6, #32]
   148c4:	mov	r5, #0
   148c8:	b	14454 <__assert_fail@plt+0x2b88>
   148cc:	bl	1171c <__errno_location@plt>
   148d0:	mov	r3, #12
   148d4:	mov	r8, #0
   148d8:	str	r3, [r0]
   148dc:	b	13fc4 <__assert_fail@plt+0x26f8>
   148e0:	ldr	r3, [pc, #104]	; 14950 <__assert_fail@plt+0x3084>
   148e4:	cmp	r0, r3
   148e8:	beq	142c4 <__assert_fail@plt+0x29f8>
   148ec:	ldr	r3, [pc, #96]	; 14954 <__assert_fail@plt+0x3088>
   148f0:	cmp	r0, r3
   148f4:	bne	14870 <__assert_fail@plt+0x2fa4>
   148f8:	b	142c4 <__assert_fail@plt+0x29f8>
   148fc:	ldr	r3, [pc, #60]	; 14940 <__assert_fail@plt+0x3074>
   14900:	ldr	r0, [r6, #48]	; 0x30
   14904:	str	r3, [sp, #24]
   14908:	mov	r3, #1
   1490c:	str	r3, [sp, #52]	; 0x34
   14910:	ldr	r2, [sp, #8]
   14914:	b	13c90 <__assert_fail@plt+0x23c4>
   14918:	str	r7, [r4, #80]	; 0x50
   1491c:	mov	r2, #1
   14920:	mov	r3, #0
   14924:	b	13d54 <__assert_fail@plt+0x2488>
   14928:	muleq	r1, r4, r7
   1492c:	andeq	r2, r0, r0, lsl r7
   14930:	andeq	r6, r0, r9, ror #18
   14934:			; <UNDEFINED> instruction: 0x01021994
   14938:			; <UNDEFINED> instruction: 0xff534d42
   1493c:	andeq	pc, r1, r4, asr #15
   14940:	andeq	r8, r1, r0, lsr #13
   14944:	andeq	r0, r0, r2, lsl #2
   14948:	andeq	r3, r1, r4, asr r6
   1494c:	andeq	r0, r0, r6, lsl #8
   14950:	andeq	r9, r0, r0, lsr #31
   14954:	movtpl	r4, #24911	; 0x614f
   14958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1495c:	bic	r8, r1, #4080	; 0xff0
   14960:	sub	sp, sp, #36	; 0x24
   14964:	bic	r8, r8, #15
   14968:	cmp	r8, #0
   1496c:	str	r2, [sp, #12]
   14970:	bne	14e18 <__assert_fail@plt+0x354c>
   14974:	and	r3, r1, #516	; 0x204
   14978:	cmp	r3, #516	; 0x204
   1497c:	mov	r5, r1
   14980:	beq	14d7c <__assert_fail@plt+0x34b0>
   14984:	ands	r8, r1, #18
   14988:	beq	14d7c <__assert_fail@plt+0x34b0>
   1498c:	mov	r9, r0
   14990:	mov	r1, #96	; 0x60
   14994:	mov	r0, #1
   14998:	bl	1dfa4 <lchmod@@Base+0x6918>
   1499c:	subs	r8, r0, #0
   149a0:	beq	14cd4 <__assert_fail@plt+0x3408>
   149a4:	ldr	r3, [sp, #12]
   149a8:	tst	r5, #2
   149ac:	str	r3, [r8, #44]	; 0x2c
   149b0:	bicne	r3, r5, #512	; 0x200
   149b4:	orrne	r3, r3, #4
   149b8:	strne	r3, [r8, #48]	; 0x30
   149bc:	ldr	r3, [r9]
   149c0:	streq	r5, [r8, #48]	; 0x30
   149c4:	mvn	r2, #99	; 0x63
   149c8:	cmp	r3, #0
   149cc:	str	r2, [r8, #32]
   149d0:	beq	14e7c <__assert_fail@plt+0x35b0>
   149d4:	mov	r6, r9
   149d8:	mov	r4, #0
   149dc:	mov	r0, r3
   149e0:	bl	116e0 <strlen@plt>
   149e4:	ldr	r3, [r6, #4]!
   149e8:	cmp	r4, r0
   149ec:	movcc	r4, r0
   149f0:	cmp	r3, #0
   149f4:	bne	149dc <__assert_fail@plt+0x3110>
   149f8:	add	r4, r4, #1
   149fc:	cmp	r4, #4096	; 0x1000
   14a00:	movcc	r4, #4096	; 0x1000
   14a04:	ldr	r3, [r8, #36]	; 0x24
   14a08:	add	r1, r3, #256	; 0x100
   14a0c:	add	r1, r1, r4
   14a10:	cmp	r3, r1
   14a14:	bhi	14d48 <__assert_fail@plt+0x347c>
   14a18:	str	r1, [r8, #36]	; 0x24
   14a1c:	ldr	r0, [r8, #24]
   14a20:	bl	1e018 <lchmod@@Base+0x698c>
   14a24:	subs	r4, r0, #0
   14a28:	beq	14f18 <__assert_fail@plt+0x364c>
   14a2c:	ldr	fp, [r9]
   14a30:	str	r4, [r8, #24]
   14a34:	cmp	fp, #0
   14a38:	beq	14dfc <__assert_fail@plt+0x3530>
   14a3c:	mov	r0, #176	; 0xb0
   14a40:	bl	1dfec <lchmod@@Base+0x6960>
   14a44:	subs	r3, r0, #0
   14a48:	mov	r0, r3
   14a4c:	str	r3, [sp, #16]
   14a50:	beq	14d3c <__assert_fail@plt+0x3470>
   14a54:	ldr	r2, [r8, #24]
   14a58:	ldr	r3, [sp, #12]
   14a5c:	mov	r1, #196608	; 0x30000
   14a60:	cmp	r3, #0
   14a64:	str	r2, [r0, #28]
   14a68:	mov	r3, #0
   14a6c:	mvn	r2, #0
   14a70:	str	r8, [r0, #44]	; 0x2c
   14a74:	strb	r3, [r0, #168]	; 0xa8
   14a78:	str	r3, [r0, #52]	; 0x34
   14a7c:	str	r3, [r0, #32]
   14a80:	str	r3, [r0, #12]
   14a84:	str	r3, [r0, #16]
   14a88:	str	r3, [r0, #20]
   14a8c:	str	r1, [r0, #58]	; 0x3a
   14a90:	str	r2, [r0, #48]	; 0x30
   14a94:	ldr	fp, [r9]
   14a98:	beq	14e70 <__assert_fail@plt+0x35a4>
   14a9c:	ldr	r3, [r8, #48]	; 0x30
   14aa0:	lsr	r3, r3, #10
   14aa4:	and	r3, r3, #1
   14aa8:	str	r3, [sp, #24]
   14aac:	cmp	fp, #0
   14ab0:	beq	14f30 <__assert_fail@plt+0x3664>
   14ab4:	lsr	r5, r5, #11
   14ab8:	mov	r3, #0
   14abc:	eor	r5, r5, #1
   14ac0:	mov	r6, r3
   14ac4:	str	r3, [sp, #28]
   14ac8:	and	r3, r5, #1
   14acc:	str	r3, [sp, #20]
   14ad0:	mov	sl, r6
   14ad4:	mov	r7, r6
   14ad8:	b	14b18 <__assert_fail@plt+0x324c>
   14adc:	mov	r3, #11
   14ae0:	strh	r3, [r4, #56]	; 0x38
   14ae4:	mov	r2, #2
   14ae8:	mov	r3, #0
   14aec:	strd	r2, [r4, #112]	; 0x70
   14af0:	ldr	r3, [sp, #12]
   14af4:	cmp	r3, #0
   14af8:	beq	14bf8 <__assert_fail@plt+0x332c>
   14afc:	ldr	fp, [r9, #4]!
   14b00:	str	r7, [r4, #8]
   14b04:	cmp	fp, #0
   14b08:	mov	r7, r4
   14b0c:	add	r4, sl, #1
   14b10:	beq	14c24 <__assert_fail@plt+0x3358>
   14b14:	mov	sl, r4
   14b18:	mov	r0, fp
   14b1c:	bl	116e0 <strlen@plt>
   14b20:	ldr	r3, [sp, #20]
   14b24:	cmp	r0, #2
   14b28:	movls	r3, #0
   14b2c:	andhi	r3, r3, #1
   14b30:	cmp	r3, #0
   14b34:	mov	r5, r0
   14b38:	beq	14b50 <__assert_fail@plt+0x3284>
   14b3c:	sub	r2, r0, #1
   14b40:	add	r3, fp, r2
   14b44:	ldrb	r2, [fp, r2]
   14b48:	cmp	r2, #47	; 0x2f
   14b4c:	beq	14ce0 <__assert_fail@plt+0x3414>
   14b50:	add	r0, r5, #176	; 0xb0
   14b54:	bic	r0, r0, #7
   14b58:	bl	1dfec <lchmod@@Base+0x6960>
   14b5c:	subs	r4, r0, #0
   14b60:	beq	14d08 <__assert_fail@plt+0x343c>
   14b64:	add	r3, r4, #168	; 0xa8
   14b68:	mov	r1, fp
   14b6c:	mov	r0, r3
   14b70:	mov	r2, r5
   14b74:	bl	11530 <memcpy@plt>
   14b78:	add	r1, r4, r5
   14b7c:	ldr	r2, [r8, #24]
   14b80:	strb	r6, [r1, #168]	; 0xa8
   14b84:	str	r5, [r4, #52]	; 0x34
   14b88:	str	r8, [r4, #44]	; 0x2c
   14b8c:	str	r6, [r4, #32]
   14b90:	str	r6, [r4, #12]
   14b94:	str	r6, [r4, #16]
   14b98:	str	r6, [r4, #20]
   14b9c:	str	r6, [r4, #48]	; 0x30
   14ba0:	str	r2, [r4, #28]
   14ba4:	mov	r3, r0
   14ba8:	ldr	r0, [sp, #24]
   14bac:	str	r3, [r4, #24]
   14bb0:	mov	r3, #196608	; 0x30000
   14bb4:	cmp	r7, #0
   14bb8:	moveq	r0, #0
   14bbc:	andne	r0, r0, #1
   14bc0:	str	r3, [r4, #58]	; 0x3a
   14bc4:	ldr	r3, [sp, #16]
   14bc8:	cmp	r0, #0
   14bcc:	str	r3, [r4, #4]
   14bd0:	bne	14adc <__assert_fail@plt+0x3210>
   14bd4:	mov	r3, r6
   14bd8:	mov	r2, r4
   14bdc:	ldr	r1, [r8, #48]	; 0x30
   14be0:	ldr	r0, [r8, #32]
   14be4:	bl	13794 <__assert_fail@plt+0x1ec8>
   14be8:	ldr	r3, [sp, #12]
   14bec:	cmp	r3, #0
   14bf0:	strh	r0, [r4, #56]	; 0x38
   14bf4:	bne	14afc <__assert_fail@plt+0x3230>
   14bf8:	cmp	r7, #0
   14bfc:	str	r3, [r4, #8]
   14c00:	ldrne	r3, [sp, #28]
   14c04:	ldr	fp, [r9, #4]!
   14c08:	strne	r4, [sp, #28]
   14c0c:	strne	r4, [r3, #8]
   14c10:	streq	r4, [sp, #28]
   14c14:	moveq	r7, r4
   14c18:	cmp	fp, #0
   14c1c:	add	r4, sl, #1
   14c20:	bne	14b14 <__assert_fail@plt+0x3248>
   14c24:	ldr	r3, [sp, #12]
   14c28:	cmp	r3, #0
   14c2c:	cmpne	r4, #1
   14c30:	bhi	14e34 <__assert_fail@plt+0x3568>
   14c34:	mov	r0, #176	; 0xb0
   14c38:	bl	1dfec <lchmod@@Base+0x6960>
   14c3c:	cmp	r0, #0
   14c40:	beq	14f28 <__assert_fail@plt+0x365c>
   14c44:	ldr	r2, [r8, #48]	; 0x30
   14c48:	ldr	r3, [pc, #744]	; 14f38 <__assert_fail@plt+0x366c>
   14c4c:	ldr	lr, [r8, #24]
   14c50:	and	r3, r3, r2
   14c54:	mov	r1, #0
   14c58:	cmp	r3, #0
   14c5c:	mov	ip, #3
   14c60:	mov	r2, #9
   14c64:	mov	r3, #1
   14c68:	str	r8, [r0, #44]	; 0x2c
   14c6c:	str	r0, [r8]
   14c70:	str	r7, [r0, #8]
   14c74:	str	lr, [r0, #28]
   14c78:	strb	r1, [r0, #168]	; 0xa8
   14c7c:	str	r1, [r0, #52]	; 0x34
   14c80:	str	r1, [r0, #32]
   14c84:	str	r1, [r0, #12]
   14c88:	strh	r1, [r0, #58]	; 0x3a
   14c8c:	str	r1, [r0, #16]
   14c90:	str	r1, [r0, #20]
   14c94:	strh	ip, [r0, #60]	; 0x3c
   14c98:	strh	r2, [r0, #56]	; 0x38
   14c9c:	str	r3, [r0, #48]	; 0x30
   14ca0:	bne	14d94 <__assert_fail@plt+0x34c8>
   14ca4:	mov	r0, #32
   14ca8:	bl	1dfec <lchmod@@Base+0x6960>
   14cac:	cmp	r0, #0
   14cb0:	str	r0, [r8, #56]	; 0x38
   14cb4:	beq	14d08 <__assert_fail@plt+0x343c>
   14cb8:	bl	1e19c <lchmod@@Base+0x6b10>
   14cbc:	ldr	r3, [r8, #48]	; 0x30
   14cc0:	tst	r3, #516	; 0x204
   14cc4:	beq	14dc4 <__assert_fail@plt+0x34f8>
   14cc8:	mvn	r1, #0
   14ccc:	add	r0, r8, #60	; 0x3c
   14cd0:	bl	175cc <__assert_fail@plt+0x5d00>
   14cd4:	mov	r0, r8
   14cd8:	add	sp, sp, #36	; 0x24
   14cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ce0:	ldrb	r2, [r3, #-1]!
   14ce4:	cmp	r2, #47	; 0x2f
   14ce8:	bne	14b50 <__assert_fail@plt+0x3284>
   14cec:	sub	r5, r5, #1
   14cf0:	cmp	r5, #1
   14cf4:	bne	14ce0 <__assert_fail@plt+0x3414>
   14cf8:	mov	r0, #176	; 0xb0
   14cfc:	bl	1dfec <lchmod@@Base+0x6960>
   14d00:	subs	r4, r0, #0
   14d04:	bne	14b64 <__assert_fail@plt+0x3298>
   14d08:	cmp	r7, #0
   14d0c:	beq	14d34 <__assert_fail@plt+0x3468>
   14d10:	ldr	r3, [r7, #12]
   14d14:	ldr	r4, [r7, #8]
   14d18:	subs	r0, r3, #0
   14d1c:	beq	14d24 <__assert_fail@plt+0x3458>
   14d20:	bl	118b4 <closedir@plt>
   14d24:	mov	r0, r7
   14d28:	bl	1355c <__assert_fail@plt+0x1c90>
   14d2c:	subs	r7, r4, #0
   14d30:	bne	14d10 <__assert_fail@plt+0x3444>
   14d34:	ldr	r0, [sp, #16]
   14d38:	bl	1355c <__assert_fail@plt+0x1c90>
   14d3c:	ldr	r0, [r8, #24]
   14d40:	bl	1355c <__assert_fail@plt+0x1c90>
   14d44:	b	14d64 <__assert_fail@plt+0x3498>
   14d48:	ldr	r0, [r8, #24]
   14d4c:	bl	1355c <__assert_fail@plt+0x1c90>
   14d50:	mov	r3, #0
   14d54:	str	r3, [r8, #24]
   14d58:	bl	1171c <__errno_location@plt>
   14d5c:	mov	r3, #36	; 0x24
   14d60:	str	r3, [r0]
   14d64:	mov	r0, r8
   14d68:	bl	1355c <__assert_fail@plt+0x1c90>
   14d6c:	mov	r8, #0
   14d70:	mov	r0, r8
   14d74:	add	sp, sp, #36	; 0x24
   14d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d7c:	bl	1171c <__errno_location@plt>
   14d80:	mov	r3, #22
   14d84:	str	r3, [r0]
   14d88:	mov	r0, r8
   14d8c:	add	sp, sp, #36	; 0x24
   14d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d94:	ldr	r3, [pc, #416]	; 14f3c <__assert_fail@plt+0x3670>
   14d98:	ldr	r2, [pc, #416]	; 14f40 <__assert_fail@plt+0x3674>
   14d9c:	str	r3, [sp]
   14da0:	mov	r0, #31
   14da4:	ldr	r3, [pc, #408]	; 14f44 <__assert_fail@plt+0x3678>
   14da8:	bl	16420 <__assert_fail@plt+0x4b54>
   14dac:	cmp	r0, #0
   14db0:	str	r0, [r8, #56]	; 0x38
   14db4:	beq	14d08 <__assert_fail@plt+0x343c>
   14db8:	ldr	r3, [r8, #48]	; 0x30
   14dbc:	tst	r3, #516	; 0x204
   14dc0:	bne	14cc8 <__assert_fail@plt+0x33fc>
   14dc4:	ldr	r2, [pc, #380]	; 14f48 <__assert_fail@plt+0x367c>
   14dc8:	tst	r3, #16
   14dcc:	ldr	r1, [pc, #376]	; 14f4c <__assert_fail@plt+0x3680>
   14dd0:	moveq	r1, r2
   14dd4:	tst	r3, #512	; 0x200
   14dd8:	bne	14eec <__assert_fail@plt+0x3620>
   14ddc:	ldr	r0, [pc, #364]	; 14f50 <__assert_fail@plt+0x3684>
   14de0:	bl	1e500 <lchmod@@Base+0x6e74>
   14de4:	cmp	r0, #0
   14de8:	str	r0, [r8, #28]
   14dec:	ldrlt	r3, [r8, #48]	; 0x30
   14df0:	orrlt	r3, r3, #4
   14df4:	strlt	r3, [r8, #48]	; 0x30
   14df8:	b	14cc8 <__assert_fail@plt+0x33fc>
   14dfc:	ldr	r3, [sp, #12]
   14e00:	cmp	r3, #0
   14e04:	strne	fp, [sp, #16]
   14e08:	bne	14a9c <__assert_fail@plt+0x31d0>
   14e0c:	str	r3, [sp, #16]
   14e10:	mov	r7, r3
   14e14:	b	14c34 <__assert_fail@plt+0x3368>
   14e18:	bl	1171c <__errno_location@plt>
   14e1c:	mov	r8, #0
   14e20:	mov	r3, #22
   14e24:	str	r3, [r0]
   14e28:	mov	r0, r8
   14e2c:	add	sp, sp, #36	; 0x24
   14e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e34:	ldr	r2, [r8, #40]	; 0x28
   14e38:	ldr	r5, [r8, #44]	; 0x2c
   14e3c:	cmp	r4, r2
   14e40:	bls	14e84 <__assert_fail@plt+0x35b8>
   14e44:	add	r1, sl, #41	; 0x29
   14e48:	cmn	r1, #-1073741823	; 0xc0000001
   14e4c:	str	r1, [r8, #40]	; 0x28
   14e50:	bhi	14f00 <__assert_fail@plt+0x3634>
   14e54:	lsl	r1, r1, #2
   14e58:	ldr	r0, [r8, #8]
   14e5c:	bl	1e018 <lchmod@@Base+0x698c>
   14e60:	cmp	r0, #0
   14e64:	beq	14f00 <__assert_fail@plt+0x3634>
   14e68:	str	r0, [r8, #8]
   14e6c:	b	14e88 <__assert_fail@plt+0x35bc>
   14e70:	mov	r3, #1
   14e74:	str	r3, [sp, #24]
   14e78:	b	14aac <__assert_fail@plt+0x31e0>
   14e7c:	mov	r4, #4096	; 0x1000
   14e80:	b	14a04 <__assert_fail@plt+0x3138>
   14e84:	ldr	r0, [r8, #8]
   14e88:	mov	r2, r0
   14e8c:	str	r7, [r2], #4
   14e90:	ldr	r7, [r7, #8]
   14e94:	cmp	r7, #0
   14e98:	bne	14e8c <__assert_fail@plt+0x35c0>
   14e9c:	mov	r3, r5
   14ea0:	mov	r1, r4
   14ea4:	mov	r2, #4
   14ea8:	bl	11800 <qsort@plt>
   14eac:	ldr	ip, [r8, #8]
   14eb0:	cmp	sl, #0
   14eb4:	ldr	r7, [ip]
   14eb8:	moveq	r3, r7
   14ebc:	beq	14ee0 <__assert_fail@plt+0x3614>
   14ec0:	mov	r2, sl
   14ec4:	mov	r3, ip
   14ec8:	ldr	r1, [r3]
   14ecc:	ldr	r0, [r3, #4]!
   14ed0:	subs	r2, r2, #1
   14ed4:	str	r0, [r1, #8]
   14ed8:	bne	14ec8 <__assert_fail@plt+0x35fc>
   14edc:	ldr	r3, [ip, sl, lsl #2]
   14ee0:	mov	r2, #0
   14ee4:	str	r2, [r3, #8]
   14ee8:	b	14c34 <__assert_fail@plt+0x3368>
   14eec:	mov	r2, r1
   14ef0:	ldr	r0, [r8, #32]
   14ef4:	ldr	r1, [pc, #84]	; 14f50 <__assert_fail@plt+0x3684>
   14ef8:	bl	17cc4 <lchmod@@Base+0x638>
   14efc:	b	14de4 <__assert_fail@plt+0x3518>
   14f00:	ldr	r0, [r8, #8]
   14f04:	bl	1355c <__assert_fail@plt+0x1c90>
   14f08:	mov	r3, #0
   14f0c:	str	r3, [r8, #8]
   14f10:	str	r3, [r8, #40]	; 0x28
   14f14:	b	14c34 <__assert_fail@plt+0x3368>
   14f18:	ldr	r0, [r8, #24]
   14f1c:	bl	1355c <__assert_fail@plt+0x1c90>
   14f20:	str	r4, [r8, #24]
   14f24:	b	14d64 <__assert_fail@plt+0x3498>
   14f28:	str	r0, [r8]
   14f2c:	b	14d08 <__assert_fail@plt+0x343c>
   14f30:	mov	r7, fp
   14f34:	b	14c34 <__assert_fail@plt+0x3368>
   14f38:	andeq	r0, r0, r2, lsl #2
   14f3c:	andeq	r3, r1, ip, asr r5
   14f40:	strdeq	r3, [r1], -r8
   14f44:			; <UNDEFINED> instruction: 0x000135b4
   14f48:	andeq	r4, r8, r0, lsl #18
   14f4c:	andeq	ip, r8, r0, lsl #18
   14f50:	andeq	pc, r1, r0, ror #11
   14f54:	ldr	r3, [r0]
   14f58:	push	{r4, r5, r6, lr}
   14f5c:	cmp	r3, #0
   14f60:	mov	r6, r0
   14f64:	beq	14fa0 <__assert_fail@plt+0x36d4>
   14f68:	ldr	r2, [r3, #48]	; 0x30
   14f6c:	cmp	r2, #0
   14f70:	blt	150e0 <__assert_fail@plt+0x3814>
   14f74:	ldr	r4, [r3, #8]
   14f78:	mov	r0, r3
   14f7c:	cmp	r4, #0
   14f80:	ldreq	r4, [r3, #4]
   14f84:	bl	1355c <__assert_fail@plt+0x1c90>
   14f88:	mov	r3, r4
   14f8c:	ldr	r2, [r4, #48]	; 0x30
   14f90:	cmp	r2, #0
   14f94:	bge	14f74 <__assert_fail@plt+0x36a8>
   14f98:	mov	r0, r4
   14f9c:	bl	1355c <__assert_fail@plt+0x1c90>
   14fa0:	ldr	r4, [r6, #4]
   14fa4:	cmp	r4, #0
   14fa8:	beq	14fd0 <__assert_fail@plt+0x3704>
   14fac:	ldr	r3, [r4, #12]
   14fb0:	ldr	r5, [r4, #8]
   14fb4:	subs	r0, r3, #0
   14fb8:	beq	14fc0 <__assert_fail@plt+0x36f4>
   14fbc:	bl	118b4 <closedir@plt>
   14fc0:	mov	r0, r4
   14fc4:	bl	1355c <__assert_fail@plt+0x1c90>
   14fc8:	subs	r4, r5, #0
   14fcc:	bne	14fac <__assert_fail@plt+0x36e0>
   14fd0:	ldr	r0, [r6, #8]
   14fd4:	bl	1355c <__assert_fail@plt+0x1c90>
   14fd8:	ldr	r0, [r6, #24]
   14fdc:	bl	1355c <__assert_fail@plt+0x1c90>
   14fe0:	ldr	r3, [r6, #48]	; 0x30
   14fe4:	tst	r3, #512	; 0x200
   14fe8:	beq	15084 <__assert_fail@plt+0x37b8>
   14fec:	ldr	r0, [r6, #32]
   14ff0:	cmp	r0, #0
   14ff4:	blt	15004 <__assert_fail@plt+0x3738>
   14ff8:	bl	11884 <close@plt>
   14ffc:	cmp	r0, #0
   15000:	bne	150d4 <__assert_fail@plt+0x3808>
   15004:	mov	r5, #0
   15008:	add	r4, r6, #60	; 0x3c
   1500c:	b	1501c <__assert_fail@plt+0x3750>
   15010:	bl	17644 <__assert_fail@plt+0x5d78>
   15014:	cmp	r0, #0
   15018:	bge	1507c <__assert_fail@plt+0x37b0>
   1501c:	mov	r0, r4
   15020:	bl	175f8 <__assert_fail@plt+0x5d2c>
   15024:	cmp	r0, #0
   15028:	mov	r0, r4
   1502c:	beq	15010 <__assert_fail@plt+0x3744>
   15030:	ldr	r0, [r6, #52]	; 0x34
   15034:	cmp	r0, #0
   15038:	beq	15040 <__assert_fail@plt+0x3774>
   1503c:	bl	16710 <__assert_fail@plt+0x4e44>
   15040:	ldr	r2, [r6, #48]	; 0x30
   15044:	ldr	r3, [pc, #204]	; 15118 <__assert_fail@plt+0x384c>
   15048:	ldr	r0, [r6, #56]	; 0x38
   1504c:	and	r3, r3, r2
   15050:	cmp	r3, #0
   15054:	beq	150cc <__assert_fail@plt+0x3800>
   15058:	cmp	r0, #0
   1505c:	beq	15064 <__assert_fail@plt+0x3798>
   15060:	bl	16710 <__assert_fail@plt+0x4e44>
   15064:	mov	r0, r6
   15068:	bl	1355c <__assert_fail@plt+0x1c90>
   1506c:	cmp	r5, #0
   15070:	bne	15108 <__assert_fail@plt+0x383c>
   15074:	mov	r0, r5
   15078:	pop	{r4, r5, r6, pc}
   1507c:	bl	11884 <close@plt>
   15080:	b	1501c <__assert_fail@plt+0x3750>
   15084:	tst	r3, #4
   15088:	bne	15004 <__assert_fail@plt+0x3738>
   1508c:	ldr	r0, [r6, #28]
   15090:	bl	117f4 <fchdir@plt>
   15094:	cmp	r0, #0
   15098:	beq	150e8 <__assert_fail@plt+0x381c>
   1509c:	bl	1171c <__errno_location@plt>
   150a0:	mov	r4, r0
   150a4:	ldr	r0, [r6, #28]
   150a8:	ldr	r5, [r4]
   150ac:	bl	11884 <close@plt>
   150b0:	adds	r0, r0, #0
   150b4:	movne	r0, #1
   150b8:	cmp	r5, #0
   150bc:	movne	r0, #0
   150c0:	cmp	r0, #0
   150c4:	beq	15008 <__assert_fail@plt+0x373c>
   150c8:	b	15100 <__assert_fail@plt+0x3834>
   150cc:	bl	1355c <__assert_fail@plt+0x1c90>
   150d0:	b	15064 <__assert_fail@plt+0x3798>
   150d4:	bl	1171c <__errno_location@plt>
   150d8:	ldr	r5, [r0]
   150dc:	b	15008 <__assert_fail@plt+0x373c>
   150e0:	mov	r4, r3
   150e4:	b	14f98 <__assert_fail@plt+0x36cc>
   150e8:	ldr	r0, [r6, #28]
   150ec:	bl	11884 <close@plt>
   150f0:	cmp	r0, #0
   150f4:	beq	15004 <__assert_fail@plt+0x3738>
   150f8:	bl	1171c <__errno_location@plt>
   150fc:	mov	r4, r0
   15100:	ldr	r5, [r4]
   15104:	b	15008 <__assert_fail@plt+0x373c>
   15108:	bl	1171c <__errno_location@plt>
   1510c:	str	r5, [r0]
   15110:	mvn	r5, #0
   15114:	b	15074 <__assert_fail@plt+0x37a8>
   15118:	andeq	r0, r0, r2, lsl #2
   1511c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15120:	sub	sp, sp, #12
   15124:	ldr	r4, [r0]
   15128:	cmp	r4, #0
   1512c:	beq	15260 <__assert_fail@plt+0x3994>
   15130:	ldr	r1, [r0, #48]	; 0x30
   15134:	ands	r5, r1, #8192	; 0x2000
   15138:	bne	15260 <__assert_fail@plt+0x3994>
   1513c:	ldrh	r3, [r4, #60]	; 0x3c
   15140:	mov	r2, #3
   15144:	mov	r7, r0
   15148:	cmp	r3, #1
   1514c:	strh	r2, [r4, #60]	; 0x3c
   15150:	beq	155d8 <__assert_fail@plt+0x3d0c>
   15154:	cmp	r3, #2
   15158:	beq	15270 <__assert_fail@plt+0x39a4>
   1515c:	ldrh	r2, [r4, #56]	; 0x38
   15160:	cmp	r2, #1
   15164:	bne	1519c <__assert_fail@plt+0x38d0>
   15168:	cmp	r3, #4
   1516c:	bne	15288 <__assert_fail@plt+0x39bc>
   15170:	b	152a4 <__assert_fail@plt+0x39d8>
   15174:	str	r6, [r7]
   15178:	mov	r0, r4
   1517c:	bl	1355c <__assert_fail@plt+0x1c90>
   15180:	ldr	r3, [r6, #48]	; 0x30
   15184:	cmp	r3, #0
   15188:	beq	15310 <__assert_fail@plt+0x3a44>
   1518c:	ldrh	r3, [r6, #60]	; 0x3c
   15190:	mov	r4, r6
   15194:	cmp	r3, #4
   15198:	bne	154c4 <__assert_fail@plt+0x3bf8>
   1519c:	ldr	r6, [r4, #8]
   151a0:	cmp	r6, #0
   151a4:	bne	15174 <__assert_fail@plt+0x38a8>
   151a8:	ldr	r6, [r4, #4]
   151ac:	ldr	r3, [r6, #12]
   151b0:	cmp	r3, #0
   151b4:	bne	15868 <__assert_fail@plt+0x3f9c>
   151b8:	str	r6, [r7]
   151bc:	mov	r0, r4
   151c0:	bl	1355c <__assert_fail@plt+0x1c90>
   151c4:	ldr	r3, [r6, #48]	; 0x30
   151c8:	cmn	r3, #1
   151cc:	beq	15758 <__assert_fail@plt+0x3e8c>
   151d0:	ldrh	r3, [r6, #56]	; 0x38
   151d4:	cmp	r3, #11
   151d8:	beq	15538 <__assert_fail@plt+0x3c6c>
   151dc:	ldr	r3, [r6, #40]	; 0x28
   151e0:	ldr	r2, [r7, #24]
   151e4:	mov	r1, #0
   151e8:	strb	r1, [r2, r3]
   151ec:	ldr	r3, [r6, #48]	; 0x30
   151f0:	cmp	r3, r1
   151f4:	beq	15654 <__assert_fail@plt+0x3d88>
   151f8:	ldrh	r3, [r6, #58]	; 0x3a
   151fc:	tst	r3, #2
   15200:	beq	15614 <__assert_fail@plt+0x3d48>
   15204:	ldr	r3, [r7, #48]	; 0x30
   15208:	tst	r3, #4
   1520c:	beq	156c8 <__assert_fail@plt+0x3dfc>
   15210:	ldr	r0, [r6, #36]	; 0x24
   15214:	bl	11884 <close@plt>
   15218:	ldr	r3, [r7, #48]	; 0x30
   1521c:	ldrh	r2, [r6, #56]	; 0x38
   15220:	cmp	r2, #2
   15224:	beq	15258 <__assert_fail@plt+0x398c>
   15228:	ldr	r2, [r6, #32]
   1522c:	cmp	r2, #0
   15230:	movne	r2, #7
   15234:	strhne	r2, [r6, #56]	; 0x38
   15238:	bne	15258 <__assert_fail@plt+0x398c>
   1523c:	mov	r2, #6
   15240:	mov	r0, r3
   15244:	strh	r2, [r6, #56]	; 0x38
   15248:	add	r1, r7, #56	; 0x38
   1524c:	mov	r2, r6
   15250:	bl	138e0 <__assert_fail@plt+0x2014>
   15254:	ldr	r3, [r7, #48]	; 0x30
   15258:	tst	r3, #8192	; 0x2000
   1525c:	beq	15304 <__assert_fail@plt+0x3a38>
   15260:	mov	r6, #0
   15264:	mov	r0, r6
   15268:	add	sp, sp, #12
   1526c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15270:	ldrh	r3, [r4, #56]	; 0x38
   15274:	sub	r2, r3, #12
   15278:	cmp	r2, #1
   1527c:	bls	15710 <__assert_fail@plt+0x3e44>
   15280:	cmp	r3, #1
   15284:	bne	1519c <__assert_fail@plt+0x38d0>
   15288:	tst	r1, #64	; 0x40
   1528c:	beq	15544 <__assert_fail@plt+0x3c78>
   15290:	ldrd	r8, [r4, #64]	; 0x40
   15294:	ldrd	r2, [r7, #16]
   15298:	cmp	r9, r3
   1529c:	cmpeq	r8, r2
   152a0:	beq	15544 <__assert_fail@plt+0x3c78>
   152a4:	ldrh	r3, [r4, #58]	; 0x3a
   152a8:	tst	r3, #2
   152ac:	bne	1585c <__assert_fail@plt+0x3f90>
   152b0:	ldr	r5, [r7, #4]
   152b4:	cmp	r5, #0
   152b8:	beq	152e8 <__assert_fail@plt+0x3a1c>
   152bc:	ldr	r0, [r5, #12]
   152c0:	ldr	r6, [r5, #8]
   152c4:	cmp	r0, #0
   152c8:	beq	152d0 <__assert_fail@plt+0x3a04>
   152cc:	bl	118b4 <closedir@plt>
   152d0:	mov	r0, r5
   152d4:	bl	1355c <__assert_fail@plt+0x1c90>
   152d8:	cmp	r6, #0
   152dc:	mov	r5, r6
   152e0:	bne	152bc <__assert_fail@plt+0x39f0>
   152e4:	str	r6, [r7, #4]
   152e8:	mov	r3, #6
   152ec:	strh	r3, [r4, #56]	; 0x38
   152f0:	mov	r2, r4
   152f4:	add	r1, r7, #56	; 0x38
   152f8:	ldr	r0, [r7, #48]	; 0x30
   152fc:	mov	r6, r4
   15300:	bl	138e0 <__assert_fail@plt+0x2014>
   15304:	mov	r0, r6
   15308:	add	sp, sp, #12
   1530c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15310:	ldr	r3, [r7, #48]	; 0x30
   15314:	ands	r8, r3, #4
   15318:	addne	r4, r7, #60	; 0x3c
   1531c:	bne	15350 <__assert_fail@plt+0x3a84>
   15320:	tst	r3, #512	; 0x200
   15324:	bne	15778 <__assert_fail@plt+0x3eac>
   15328:	ldr	r0, [r7, #28]
   1532c:	bl	117f4 <fchdir@plt>
   15330:	add	r4, r7, #60	; 0x3c
   15334:	adds	r5, r0, #0
   15338:	movne	r5, #1
   1533c:	b	15350 <__assert_fail@plt+0x3a84>
   15340:	mov	r0, r4
   15344:	bl	17644 <__assert_fail@plt+0x5d78>
   15348:	cmp	r0, #0
   1534c:	bge	1553c <__assert_fail@plt+0x3c70>
   15350:	mov	r0, r4
   15354:	bl	175f8 <__assert_fail@plt+0x5d2c>
   15358:	cmp	r0, #0
   1535c:	beq	15340 <__assert_fail@plt+0x3a74>
   15360:	cmp	r5, #0
   15364:	bne	15838 <__assert_fail@plt+0x3f6c>
   15368:	ldr	r2, [r7, #48]	; 0x30
   1536c:	ldr	r3, [pc, #1760]	; 15a54 <__assert_fail@plt+0x4188>
   15370:	ldr	r0, [r7, #56]	; 0x38
   15374:	and	r3, r3, r2
   15378:	cmp	r3, #0
   1537c:	beq	15830 <__assert_fail@plt+0x3f64>
   15380:	cmp	r0, #0
   15384:	beq	1538c <__assert_fail@plt+0x3ac0>
   15388:	bl	16710 <__assert_fail@plt+0x4e44>
   1538c:	ldr	r2, [r6, #52]	; 0x34
   15390:	add	r5, r6, #168	; 0xa8
   15394:	str	r2, [r6, #40]	; 0x28
   15398:	mov	r1, r5
   1539c:	add	r2, r2, #1
   153a0:	ldr	r0, [r7, #24]
   153a4:	bl	11500 <memmove@plt>
   153a8:	mov	r0, r5
   153ac:	mov	r1, #47	; 0x2f
   153b0:	bl	117ac <strrchr@plt>
   153b4:	cmp	r0, #0
   153b8:	beq	153e8 <__assert_fail@plt+0x3b1c>
   153bc:	cmp	r5, r0
   153c0:	beq	1584c <__assert_fail@plt+0x3f80>
   153c4:	add	r4, r0, #1
   153c8:	mov	r0, r4
   153cc:	bl	116e0 <strlen@plt>
   153d0:	mov	r1, r4
   153d4:	mov	r8, r0
   153d8:	add	r2, r8, #1
   153dc:	mov	r0, r5
   153e0:	bl	11500 <memmove@plt>
   153e4:	str	r8, [r6, #52]	; 0x34
   153e8:	ldr	r1, [r7, #48]	; 0x30
   153ec:	ldr	r3, [pc, #1632]	; 15a54 <__assert_fail@plt+0x4188>
   153f0:	ldr	r2, [r7, #24]
   153f4:	and	r3, r3, r1
   153f8:	cmp	r3, #0
   153fc:	str	r2, [r6, #28]
   15400:	str	r2, [r6, #24]
   15404:	beq	155f4 <__assert_fail@plt+0x3d28>
   15408:	ldr	r2, [pc, #1608]	; 15a58 <__assert_fail@plt+0x418c>
   1540c:	ldr	r3, [pc, #1608]	; 15a5c <__assert_fail@plt+0x4190>
   15410:	str	r2, [sp]
   15414:	mov	r1, #0
   15418:	ldr	r2, [pc, #1600]	; 15a60 <__assert_fail@plt+0x4194>
   1541c:	mov	r0, #31
   15420:	bl	16420 <__assert_fail@plt+0x4b54>
   15424:	ldrh	r3, [r6, #56]	; 0x38
   15428:	str	r0, [r7, #56]	; 0x38
   1542c:	cmp	r3, #11
   15430:	str	r6, [r7]
   15434:	beq	1551c <__assert_fail@plt+0x3c50>
   15438:	cmp	r3, #1
   1543c:	bne	15304 <__assert_fail@plt+0x3a38>
   15440:	ldr	r3, [r6, #48]	; 0x30
   15444:	cmp	r3, #0
   15448:	ldrdeq	r2, [r6, #64]	; 0x40
   1544c:	strdeq	r2, [r7, #16]
   15450:	ldr	r2, [r7, #48]	; 0x30
   15454:	ldr	r3, [pc, #1528]	; 15a54 <__assert_fail@plt+0x4188>
   15458:	and	r3, r3, r2
   1545c:	cmp	r3, #0
   15460:	beq	155b8 <__assert_fail@plt+0x3cec>
   15464:	mov	r0, #24
   15468:	bl	1dfec <lchmod@@Base+0x6960>
   1546c:	subs	r8, r0, #0
   15470:	beq	15744 <__assert_fail@plt+0x3e78>
   15474:	ldrd	r4, [r6, #64]	; 0x40
   15478:	ldrd	r2, [r6, #160]	; 0xa0
   1547c:	ldr	r0, [r7, #56]	; 0x38
   15480:	strd	r4, [r8]
   15484:	strd	r2, [r8, #8]
   15488:	str	r6, [r8, #16]
   1548c:	mov	r1, r8
   15490:	bl	16d88 <__assert_fail@plt+0x54bc>
   15494:	cmp	r8, r0
   15498:	mov	r4, r0
   1549c:	beq	15304 <__assert_fail@plt+0x3a38>
   154a0:	mov	r0, r8
   154a4:	bl	1355c <__assert_fail@plt+0x1c90>
   154a8:	cmp	r4, #0
   154ac:	beq	15744 <__assert_fail@plt+0x3e78>
   154b0:	ldr	r2, [r4, #16]
   154b4:	mov	r3, #2
   154b8:	str	r2, [r6]
   154bc:	strh	r3, [r6, #56]	; 0x38
   154c0:	b	15304 <__assert_fail@plt+0x3a38>
   154c4:	cmp	r3, #2
   154c8:	beq	1589c <__assert_fail@plt+0x3fd0>
   154cc:	ldr	r3, [r6, #4]
   154d0:	mov	ip, #47	; 0x2f
   154d4:	ldr	r2, [r7, #24]
   154d8:	ldr	r0, [r3, #40]	; 0x28
   154dc:	ldr	lr, [r3, #28]
   154e0:	sub	r3, r0, #1
   154e4:	add	r1, r6, #168	; 0xa8
   154e8:	ldrb	lr, [lr, r3]
   154ec:	cmp	lr, ip
   154f0:	movne	r3, r0
   154f4:	add	r0, r2, r3
   154f8:	strb	ip, [r2, r3]
   154fc:	ldr	r2, [r6, #52]	; 0x34
   15500:	add	r0, r0, #1
   15504:	add	r2, r2, #1
   15508:	bl	11500 <memmove@plt>
   1550c:	ldrh	r3, [r6, #56]	; 0x38
   15510:	str	r6, [r7]
   15514:	cmp	r3, #11
   15518:	bne	15438 <__assert_fail@plt+0x3b6c>
   1551c:	ldrd	r2, [r6, #112]	; 0x70
   15520:	cmp	r3, #0
   15524:	cmpeq	r2, #2
   15528:	beq	158c8 <__assert_fail@plt+0x3ffc>
   1552c:	cmp	r3, #0
   15530:	cmpeq	r2, #1
   15534:	beq	15304 <__assert_fail@plt+0x3a38>
   15538:	bl	11878 <abort@plt>
   1553c:	bl	11884 <close@plt>
   15540:	b	15350 <__assert_fail@plt+0x3a84>
   15544:	ldr	r5, [r7, #4]
   15548:	cmp	r5, #0
   1554c:	beq	157d8 <__assert_fail@plt+0x3f0c>
   15550:	tst	r1, #4096	; 0x1000
   15554:	bne	157a4 <__assert_fail@plt+0x3ed8>
   15558:	ldr	r3, [r4, #24]
   1555c:	mvn	r2, #0
   15560:	mov	r1, r4
   15564:	mov	r0, r7
   15568:	bl	13998 <__assert_fail@plt+0x20cc>
   1556c:	cmp	r0, #0
   15570:	beq	156b8 <__assert_fail@plt+0x3dec>
   15574:	bl	1171c <__errno_location@plt>
   15578:	ldrh	r3, [r4, #58]	; 0x3a
   1557c:	ldr	r6, [r7, #4]
   15580:	orr	r3, r3, #1
   15584:	cmp	r6, #0
   15588:	ldr	r2, [r0]
   1558c:	strh	r3, [r4, #58]	; 0x3a
   15590:	str	r2, [r4, #32]
   15594:	beq	156bc <__assert_fail@plt+0x3df0>
   15598:	mov	r3, r6
   1559c:	ldr	r2, [r3, #4]
   155a0:	ldr	r2, [r2, #24]
   155a4:	str	r2, [r3, #24]
   155a8:	ldr	r3, [r3, #8]
   155ac:	cmp	r3, #0
   155b0:	bne	1559c <__assert_fail@plt+0x3cd0>
   155b4:	b	156bc <__assert_fail@plt+0x3df0>
   155b8:	ldr	r0, [r7, #56]	; 0x38
   155bc:	add	r1, r6, #64	; 0x40
   155c0:	bl	1e1c0 <lchmod@@Base+0x6b34>
   155c4:	cmp	r0, #0
   155c8:	movne	r3, #2
   155cc:	strne	r6, [r6]
   155d0:	strhne	r3, [r6, #56]	; 0x38
   155d4:	b	15304 <__assert_fail@plt+0x3a38>
   155d8:	mov	r3, r5
   155dc:	ldr	r0, [r0, #32]
   155e0:	mov	r2, r4
   155e4:	bl	13794 <__assert_fail@plt+0x1ec8>
   155e8:	mov	r6, r4
   155ec:	strh	r0, [r4, #56]	; 0x38
   155f0:	b	15304 <__assert_fail@plt+0x3a38>
   155f4:	mov	r0, #32
   155f8:	bl	1dfec <lchmod@@Base+0x6960>
   155fc:	cmp	r0, #0
   15600:	str	r0, [r7, #56]	; 0x38
   15604:	beq	1550c <__assert_fail@plt+0x3c40>
   15608:	bl	1e19c <lchmod@@Base+0x6b10>
   1560c:	ldrh	r3, [r6, #56]	; 0x38
   15610:	b	1542c <__assert_fail@plt+0x3b60>
   15614:	tst	r3, #1
   15618:	bne	15218 <__assert_fail@plt+0x394c>
   1561c:	ldr	r3, [pc, #1088]	; 15a64 <__assert_fail@plt+0x4198>
   15620:	mvn	r2, #0
   15624:	ldr	r1, [r6, #4]
   15628:	mov	r0, r7
   1562c:	bl	13998 <__assert_fail@plt+0x20cc>
   15630:	cmp	r0, #0
   15634:	beq	15218 <__assert_fail@plt+0x394c>
   15638:	bl	1171c <__errno_location@plt>
   1563c:	ldr	r3, [r7, #48]	; 0x30
   15640:	orr	r3, r3, #8192	; 0x2000
   15644:	ldr	r2, [r0]
   15648:	str	r2, [r6, #32]
   1564c:	str	r3, [r7, #48]	; 0x30
   15650:	b	1521c <__assert_fail@plt+0x3950>
   15654:	ldr	r3, [r7, #48]	; 0x30
   15658:	ands	r8, r3, #4
   1565c:	addne	r4, r7, #60	; 0x3c
   15660:	bne	15694 <__assert_fail@plt+0x3dc8>
   15664:	tst	r3, #512	; 0x200
   15668:	bne	15914 <__assert_fail@plt+0x4048>
   1566c:	ldr	r0, [r7, #28]
   15670:	bl	117f4 <fchdir@plt>
   15674:	add	r4, r7, #60	; 0x3c
   15678:	adds	r5, r0, #0
   1567c:	movne	r5, #1
   15680:	b	15694 <__assert_fail@plt+0x3dc8>
   15684:	mov	r0, r4
   15688:	bl	17644 <__assert_fail@plt+0x5d78>
   1568c:	cmp	r0, #0
   15690:	bge	156b0 <__assert_fail@plt+0x3de4>
   15694:	mov	r0, r4
   15698:	bl	175f8 <__assert_fail@plt+0x5d2c>
   1569c:	cmp	r0, #0
   156a0:	beq	15684 <__assert_fail@plt+0x3db8>
   156a4:	cmp	r5, #0
   156a8:	bne	15638 <__assert_fail@plt+0x3d6c>
   156ac:	b	15218 <__assert_fail@plt+0x394c>
   156b0:	bl	11884 <close@plt>
   156b4:	b	15694 <__assert_fail@plt+0x3dc8>
   156b8:	ldr	r6, [r7, #4]
   156bc:	mov	r3, #0
   156c0:	str	r3, [r7, #4]
   156c4:	b	154cc <__assert_fail@plt+0x3c00>
   156c8:	tst	r3, #512	; 0x200
   156cc:	beq	158e8 <__assert_fail@plt+0x401c>
   156d0:	ldr	r1, [r7, #32]
   156d4:	ldr	r4, [r6, #36]	; 0x24
   156d8:	cmn	r1, #100	; 0x64
   156dc:	sub	r3, r4, r1
   156e0:	clz	r3, r3
   156e4:	lsr	r3, r3, #5
   156e8:	moveq	r3, #0
   156ec:	cmp	r3, #0
   156f0:	bne	15538 <__assert_fail@plt+0x3c6c>
   156f4:	add	r0, r7, #60	; 0x3c
   156f8:	bl	17600 <__assert_fail@plt+0x5d34>
   156fc:	cmp	r0, #0
   15700:	blt	15708 <__assert_fail@plt+0x3e3c>
   15704:	bl	11884 <close@plt>
   15708:	str	r4, [r7, #32]
   1570c:	b	15210 <__assert_fail@plt+0x3944>
   15710:	mov	r3, #1
   15714:	mov	r2, r4
   15718:	ldr	r0, [r0, #32]
   1571c:	bl	13794 <__assert_fail@plt+0x1ec8>
   15720:	cmp	r0, #1
   15724:	strh	r0, [r4, #56]	; 0x38
   15728:	mov	r3, r0
   1572c:	beq	15954 <__assert_fail@plt+0x4088>
   15730:	cmp	r0, #11
   15734:	mov	r6, r4
   15738:	str	r4, [r7]
   1573c:	bne	15304 <__assert_fail@plt+0x3a38>
   15740:	b	1551c <__assert_fail@plt+0x3c50>
   15744:	bl	1171c <__errno_location@plt>
   15748:	mov	r3, #12
   1574c:	mov	r6, #0
   15750:	str	r3, [r0]
   15754:	b	15304 <__assert_fail@plt+0x3a38>
   15758:	mov	r0, r6
   1575c:	bl	1355c <__assert_fail@plt+0x1c90>
   15760:	bl	1171c <__errno_location@plt>
   15764:	mov	r3, #0
   15768:	mov	r6, r3
   1576c:	str	r3, [r0]
   15770:	str	r3, [r7]
   15774:	b	15304 <__assert_fail@plt+0x3a38>
   15778:	add	r4, r7, #60	; 0x3c
   1577c:	mov	r0, r4
   15780:	ldr	r1, [r7, #32]
   15784:	bl	17600 <__assert_fail@plt+0x5d34>
   15788:	cmp	r0, #0
   1578c:	blt	15794 <__assert_fail@plt+0x3ec8>
   15790:	bl	11884 <close@plt>
   15794:	mvn	r3, #99	; 0x63
   15798:	mov	r5, r8
   1579c:	str	r3, [r7, #32]
   157a0:	b	15350 <__assert_fail@plt+0x3a84>
   157a4:	bic	ip, r1, #4096	; 0x1000
   157a8:	str	ip, [r7, #48]	; 0x30
   157ac:	ldr	r0, [r5, #12]
   157b0:	ldr	r6, [r5, #8]
   157b4:	cmp	r0, #0
   157b8:	beq	157c0 <__assert_fail@plt+0x3ef4>
   157bc:	bl	118b4 <closedir@plt>
   157c0:	mov	r0, r5
   157c4:	bl	1355c <__assert_fail@plt+0x1c90>
   157c8:	cmp	r6, #0
   157cc:	mov	r5, r6
   157d0:	bne	157ac <__assert_fail@plt+0x3ee0>
   157d4:	str	r6, [r7, #4]
   157d8:	mov	r1, #3
   157dc:	mov	r0, r7
   157e0:	bl	13c30 <__assert_fail@plt+0x2364>
   157e4:	cmp	r0, #0
   157e8:	mov	r6, r0
   157ec:	str	r0, [r7, #4]
   157f0:	bne	156bc <__assert_fail@plt+0x3df0>
   157f4:	ldr	r0, [r7, #48]	; 0x30
   157f8:	tst	r0, #8192	; 0x2000
   157fc:	bne	15260 <__assert_fail@plt+0x3994>
   15800:	ldr	r3, [r4, #32]
   15804:	cmp	r3, #0
   15808:	beq	1581c <__assert_fail@plt+0x3f50>
   1580c:	ldrh	r3, [r4, #56]	; 0x38
   15810:	cmp	r3, #4
   15814:	movne	r3, #7
   15818:	strhne	r3, [r4, #56]	; 0x38
   1581c:	add	r1, r7, #56	; 0x38
   15820:	mov	r2, r4
   15824:	bl	138e0 <__assert_fail@plt+0x2014>
   15828:	mov	r6, r4
   1582c:	b	15304 <__assert_fail@plt+0x3a38>
   15830:	bl	1355c <__assert_fail@plt+0x1c90>
   15834:	b	1538c <__assert_fail@plt+0x3ac0>
   15838:	ldr	r3, [r7, #48]	; 0x30
   1583c:	mov	r6, #0
   15840:	orr	r3, r3, #8192	; 0x2000
   15844:	str	r3, [r7, #48]	; 0x30
   15848:	b	15304 <__assert_fail@plt+0x3a38>
   1584c:	ldrb	r3, [r6, #169]	; 0xa9
   15850:	cmp	r3, #0
   15854:	bne	153c4 <__assert_fail@plt+0x3af8>
   15858:	b	153e8 <__assert_fail@plt+0x3b1c>
   1585c:	ldr	r0, [r4, #36]	; 0x24
   15860:	bl	11884 <close@plt>
   15864:	b	152b0 <__assert_fail@plt+0x39e4>
   15868:	ldr	r3, [r6, #40]	; 0x28
   1586c:	ldr	r2, [r7, #24]
   15870:	mov	r0, #0
   15874:	str	r6, [r7]
   15878:	mov	r1, #3
   1587c:	strb	r0, [r2, r3]
   15880:	mov	r0, r7
   15884:	bl	13c30 <__assert_fail@plt+0x2364>
   15888:	subs	r6, r0, #0
   1588c:	beq	15940 <__assert_fail@plt+0x4074>
   15890:	mov	r0, r4
   15894:	bl	1355c <__assert_fail@plt+0x1c90>
   15898:	b	154cc <__assert_fail@plt+0x3c00>
   1589c:	mov	r3, #1
   158a0:	mov	r2, r6
   158a4:	ldr	r1, [r7, #48]	; 0x30
   158a8:	ldr	r0, [r7, #32]
   158ac:	bl	13794 <__assert_fail@plt+0x1ec8>
   158b0:	cmp	r0, #1
   158b4:	strh	r0, [r6, #56]	; 0x38
   158b8:	beq	1596c <__assert_fail@plt+0x40a0>
   158bc:	mov	r3, #3
   158c0:	strh	r3, [r6, #60]	; 0x3c
   158c4:	b	154cc <__assert_fail@plt+0x3c00>
   158c8:	mov	r3, #0
   158cc:	mov	r2, r6
   158d0:	ldr	r1, [r7, #48]	; 0x30
   158d4:	ldr	r0, [r7, #32]
   158d8:	bl	13794 <__assert_fail@plt+0x1ec8>
   158dc:	mov	r3, r0
   158e0:	strh	r0, [r6, #56]	; 0x38
   158e4:	b	15438 <__assert_fail@plt+0x3b6c>
   158e8:	ldr	r0, [r6, #36]	; 0x24
   158ec:	bl	117f4 <fchdir@plt>
   158f0:	cmp	r0, #0
   158f4:	beq	15210 <__assert_fail@plt+0x3944>
   158f8:	bl	1171c <__errno_location@plt>
   158fc:	ldr	r3, [r7, #48]	; 0x30
   15900:	orr	r3, r3, #8192	; 0x2000
   15904:	ldr	r2, [r0]
   15908:	str	r2, [r6, #32]
   1590c:	str	r3, [r7, #48]	; 0x30
   15910:	b	15210 <__assert_fail@plt+0x3944>
   15914:	add	r4, r7, #60	; 0x3c
   15918:	mov	r0, r4
   1591c:	ldr	r1, [r7, #32]
   15920:	bl	17600 <__assert_fail@plt+0x5d34>
   15924:	cmp	r0, #0
   15928:	blt	15930 <__assert_fail@plt+0x4064>
   1592c:	bl	11884 <close@plt>
   15930:	mvn	r3, #99	; 0x63
   15934:	mov	r5, r8
   15938:	str	r3, [r7, #32]
   1593c:	b	15694 <__assert_fail@plt+0x3dc8>
   15940:	ldr	r3, [r7, #48]	; 0x30
   15944:	tst	r3, #8192	; 0x2000
   15948:	bne	15260 <__assert_fail@plt+0x3994>
   1594c:	ldr	r6, [r4, #4]
   15950:	b	151b8 <__assert_fail@plt+0x38ec>
   15954:	ldr	r1, [r7, #48]	; 0x30
   15958:	tst	r1, #4
   1595c:	beq	159b8 <__assert_fail@plt+0x40ec>
   15960:	str	r4, [r7]
   15964:	mov	r6, r4
   15968:	b	15438 <__assert_fail@plt+0x3b6c>
   1596c:	ldr	r3, [r7, #48]	; 0x30
   15970:	tst	r3, #4
   15974:	bne	158bc <__assert_fail@plt+0x3ff0>
   15978:	ldr	r1, [pc, #232]	; 15a68 <__assert_fail@plt+0x419c>
   1597c:	tst	r3, #16
   15980:	ldr	r2, [pc, #228]	; 15a6c <__assert_fail@plt+0x41a0>
   15984:	movne	r2, r1
   15988:	tst	r3, #512	; 0x200
   1598c:	bne	15a18 <__assert_fail@plt+0x414c>
   15990:	mov	r1, r2
   15994:	ldr	r0, [pc, #212]	; 15a70 <__assert_fail@plt+0x41a4>
   15998:	bl	1e500 <lchmod@@Base+0x6e74>
   1599c:	cmp	r0, #0
   159a0:	str	r0, [r6, #36]	; 0x24
   159a4:	blt	15a00 <__assert_fail@plt+0x4134>
   159a8:	ldrh	r3, [r6, #58]	; 0x3a
   159ac:	orr	r3, r3, #2
   159b0:	strh	r3, [r6, #58]	; 0x3a
   159b4:	b	158bc <__assert_fail@plt+0x3ff0>
   159b8:	ldr	r3, [pc, #168]	; 15a68 <__assert_fail@plt+0x419c>
   159bc:	tst	r1, #16
   159c0:	ldr	r2, [pc, #164]	; 15a6c <__assert_fail@plt+0x41a0>
   159c4:	movne	r2, r3
   159c8:	tst	r1, #512	; 0x200
   159cc:	bne	15a44 <__assert_fail@plt+0x4178>
   159d0:	mov	r1, r2
   159d4:	ldr	r0, [pc, #148]	; 15a70 <__assert_fail@plt+0x41a4>
   159d8:	bl	1e500 <lchmod@@Base+0x6e74>
   159dc:	cmp	r0, #0
   159e0:	str	r0, [r4, #36]	; 0x24
   159e4:	blt	15a28 <__assert_fail@plt+0x415c>
   159e8:	ldrh	r2, [r4, #58]	; 0x3a
   159ec:	ldrh	r3, [r4, #56]	; 0x38
   159f0:	mov	r6, r4
   159f4:	orr	r2, r2, #2
   159f8:	strh	r2, [r4, #58]	; 0x3a
   159fc:	b	1542c <__assert_fail@plt+0x3b60>
   15a00:	bl	1171c <__errno_location@plt>
   15a04:	mov	r2, #7
   15a08:	ldr	r3, [r0]
   15a0c:	strh	r2, [r6, #56]	; 0x38
   15a10:	str	r3, [r6, #32]
   15a14:	b	158bc <__assert_fail@plt+0x3ff0>
   15a18:	ldr	r1, [pc, #80]	; 15a70 <__assert_fail@plt+0x41a4>
   15a1c:	ldr	r0, [r7, #32]
   15a20:	bl	17cc4 <lchmod@@Base+0x638>
   15a24:	b	1599c <__assert_fail@plt+0x40d0>
   15a28:	bl	1171c <__errno_location@plt>
   15a2c:	mov	r2, #7
   15a30:	mov	r3, r2
   15a34:	ldr	r1, [r0]
   15a38:	strh	r2, [r4, #56]	; 0x38
   15a3c:	str	r1, [r4, #32]
   15a40:	b	15960 <__assert_fail@plt+0x4094>
   15a44:	ldr	r1, [pc, #36]	; 15a70 <__assert_fail@plt+0x41a4>
   15a48:	ldr	r0, [r7, #32]
   15a4c:	bl	17cc4 <lchmod@@Base+0x638>
   15a50:	b	159dc <__assert_fail@plt+0x4110>
   15a54:	andeq	r0, r0, r2, lsl #2
   15a58:	andeq	r3, r1, ip, asr r5
   15a5c:			; <UNDEFINED> instruction: 0x000135b4
   15a60:	strdeq	r3, [r1], -r8
   15a64:	andeq	pc, r1, r4, asr #15
   15a68:	andeq	ip, r8, r0, lsl #18
   15a6c:	andeq	r4, r8, r0, lsl #18
   15a70:	andeq	pc, r1, r0, ror #11
   15a74:	cmp	r2, #4
   15a78:	bhi	15a8c <__assert_fail@plt+0x41c0>
   15a7c:	mov	r3, #0
   15a80:	strh	r2, [r1, #60]	; 0x3c
   15a84:	mov	r0, r3
   15a88:	bx	lr
   15a8c:	push	{r4, lr}
   15a90:	bl	1171c <__errno_location@plt>
   15a94:	mov	r2, #22
   15a98:	mov	r3, #1
   15a9c:	str	r2, [r0]
   15aa0:	mov	r0, r3
   15aa4:	pop	{r4, pc}
   15aa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15aac:	bics	r4, r1, #4096	; 0x1000
   15ab0:	bne	15c24 <__assert_fail@plt+0x4358>
   15ab4:	mov	r6, r0
   15ab8:	mov	r7, r1
   15abc:	bl	1171c <__errno_location@plt>
   15ac0:	ldr	r8, [r6]
   15ac4:	str	r4, [r0]
   15ac8:	ldr	r3, [r6, #48]	; 0x30
   15acc:	mov	r9, r0
   15ad0:	ands	r3, r3, #8192	; 0x2000
   15ad4:	bne	15c3c <__assert_fail@plt+0x4370>
   15ad8:	ldrh	r2, [r8, #56]	; 0x38
   15adc:	cmp	r2, #9
   15ae0:	ldreq	r3, [r8, #8]
   15ae4:	beq	15b68 <__assert_fail@plt+0x429c>
   15ae8:	cmp	r2, #1
   15aec:	bne	15b68 <__assert_fail@plt+0x429c>
   15af0:	ldr	r4, [r6, #4]
   15af4:	cmp	r4, #0
   15af8:	beq	15b20 <__assert_fail@plt+0x4254>
   15afc:	ldr	r0, [r4, #12]
   15b00:	ldr	r5, [r4, #8]
   15b04:	cmp	r0, #0
   15b08:	beq	15b10 <__assert_fail@plt+0x4244>
   15b0c:	bl	118b4 <closedir@plt>
   15b10:	mov	r0, r4
   15b14:	bl	1355c <__assert_fail@plt+0x1c90>
   15b18:	subs	r4, r5, #0
   15b1c:	bne	15afc <__assert_fail@plt+0x4230>
   15b20:	cmp	r7, #4096	; 0x1000
   15b24:	movne	r4, #1
   15b28:	beq	15b70 <__assert_fail@plt+0x42a4>
   15b2c:	ldr	r3, [r8, #48]	; 0x30
   15b30:	cmp	r3, #0
   15b34:	bne	15b54 <__assert_fail@plt+0x4288>
   15b38:	ldr	r3, [r8, #24]
   15b3c:	ldrb	r3, [r3]
   15b40:	cmp	r3, #47	; 0x2f
   15b44:	beq	15b54 <__assert_fail@plt+0x4288>
   15b48:	ldr	r3, [r6, #48]	; 0x30
   15b4c:	tst	r3, #4
   15b50:	beq	15b90 <__assert_fail@plt+0x42c4>
   15b54:	mov	r1, r4
   15b58:	mov	r0, r6
   15b5c:	bl	13c30 <__assert_fail@plt+0x2364>
   15b60:	mov	r3, r0
   15b64:	str	r0, [r6, #4]
   15b68:	mov	r0, r3
   15b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b70:	ldr	r3, [r6, #48]	; 0x30
   15b74:	mov	r4, #2
   15b78:	orr	r3, r3, #4096	; 0x1000
   15b7c:	str	r3, [r6, #48]	; 0x30
   15b80:	ldr	r3, [r8, #48]	; 0x30
   15b84:	cmp	r3, #0
   15b88:	beq	15b38 <__assert_fail@plt+0x426c>
   15b8c:	b	15b54 <__assert_fail@plt+0x4288>
   15b90:	ldr	r2, [pc, #252]	; 15c94 <__assert_fail@plt+0x43c8>
   15b94:	tst	r3, #16
   15b98:	ldr	r1, [pc, #248]	; 15c98 <__assert_fail@plt+0x43cc>
   15b9c:	moveq	r1, r2
   15ba0:	tst	r3, #512	; 0x200
   15ba4:	bne	15c60 <__assert_fail@plt+0x4394>
   15ba8:	ldr	r0, [pc, #236]	; 15c9c <__assert_fail@plt+0x43d0>
   15bac:	bl	1e500 <lchmod@@Base+0x6e74>
   15bb0:	mov	r5, r0
   15bb4:	cmp	r5, #0
   15bb8:	movlt	r3, #0
   15bbc:	strlt	r3, [r6, #4]
   15bc0:	blt	15b68 <__assert_fail@plt+0x429c>
   15bc4:	mov	r1, r4
   15bc8:	mov	r0, r6
   15bcc:	bl	13c30 <__assert_fail@plt+0x2364>
   15bd0:	ldr	r3, [r6, #48]	; 0x30
   15bd4:	ands	r4, r3, #512	; 0x200
   15bd8:	str	r0, [r6, #4]
   15bdc:	beq	15c44 <__assert_fail@plt+0x4378>
   15be0:	ldr	r1, [r6, #32]
   15be4:	cmn	r1, #100	; 0x64
   15be8:	sub	r3, r5, r1
   15bec:	clz	r3, r3
   15bf0:	lsr	r3, r3, #5
   15bf4:	moveq	r3, #0
   15bf8:	cmp	r3, #0
   15bfc:	bne	15c90 <__assert_fail@plt+0x43c4>
   15c00:	add	r0, r6, #60	; 0x3c
   15c04:	bl	17600 <__assert_fail@plt+0x5d34>
   15c08:	cmp	r0, #0
   15c0c:	blt	15c14 <__assert_fail@plt+0x4348>
   15c10:	bl	11884 <close@plt>
   15c14:	str	r5, [r6, #32]
   15c18:	ldr	r3, [r6, #4]
   15c1c:	mov	r0, r3
   15c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c24:	bl	1171c <__errno_location@plt>
   15c28:	mov	r2, #22
   15c2c:	mov	r3, #0
   15c30:	str	r2, [r0]
   15c34:	mov	r0, r3
   15c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c3c:	mov	r3, r4
   15c40:	b	15b68 <__assert_fail@plt+0x429c>
   15c44:	mov	r0, r5
   15c48:	bl	117f4 <fchdir@plt>
   15c4c:	cmp	r0, #0
   15c50:	bne	15c78 <__assert_fail@plt+0x43ac>
   15c54:	mov	r0, r5
   15c58:	bl	11884 <close@plt>
   15c5c:	b	15c18 <__assert_fail@plt+0x434c>
   15c60:	mov	r2, r1
   15c64:	ldr	r0, [r6, #32]
   15c68:	ldr	r1, [pc, #44]	; 15c9c <__assert_fail@plt+0x43d0>
   15c6c:	bl	17cc4 <lchmod@@Base+0x638>
   15c70:	mov	r5, r0
   15c74:	b	15bb4 <__assert_fail@plt+0x42e8>
   15c78:	ldr	r6, [r9]
   15c7c:	mov	r0, r5
   15c80:	bl	11884 <close@plt>
   15c84:	str	r6, [r9]
   15c88:	mov	r3, r4
   15c8c:	b	15b68 <__assert_fail@plt+0x429c>
   15c90:	bl	11878 <abort@plt>
   15c94:	andeq	r4, r8, r0, lsl #18
   15c98:	andeq	ip, r8, r0, lsl #18
   15c9c:	andeq	pc, r1, r0, ror #11
   15ca0:	push	{r4, lr}
   15ca4:	ror	r0, r0, #3
   15ca8:	bl	1ea34 <lchmod@@Base+0x73a8>
   15cac:	mov	r0, r1
   15cb0:	pop	{r4, pc}
   15cb4:	sub	r0, r1, r0
   15cb8:	clz	r0, r0
   15cbc:	lsr	r0, r0, #5
   15cc0:	bx	lr
   15cc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15cc8:	mov	r5, r1
   15ccc:	mov	r6, r0
   15cd0:	ldr	r4, [r0, #24]
   15cd4:	ldr	r1, [r0, #8]
   15cd8:	mov	r0, r5
   15cdc:	mov	r8, r3
   15ce0:	mov	sl, r2
   15ce4:	blx	r4
   15ce8:	ldr	r3, [r6, #8]
   15cec:	cmp	r0, r3
   15cf0:	bcs	15de0 <__assert_fail@plt+0x4514>
   15cf4:	ldr	r9, [r6]
   15cf8:	mov	r7, r0
   15cfc:	add	r4, r9, r0, lsl #3
   15d00:	str	r4, [sl]
   15d04:	ldr	r3, [r9, r0, lsl #3]
   15d08:	cmp	r3, #0
   15d0c:	beq	15da0 <__assert_fail@plt+0x44d4>
   15d10:	cmp	r5, r3
   15d14:	beq	15d34 <__assert_fail@plt+0x4468>
   15d18:	mov	r1, r3
   15d1c:	mov	r0, r5
   15d20:	ldr	r3, [r6, #28]
   15d24:	blx	r3
   15d28:	cmp	r0, #0
   15d2c:	beq	15d94 <__assert_fail@plt+0x44c8>
   15d30:	ldr	r3, [r9, r7, lsl #3]
   15d34:	cmp	r8, #0
   15d38:	beq	15d64 <__assert_fail@plt+0x4498>
   15d3c:	ldr	r2, [r4, #4]
   15d40:	cmp	r2, #0
   15d44:	movne	ip, #0
   15d48:	ldmne	r2, {r0, r1}
   15d4c:	streq	r2, [r9, r7, lsl #3]
   15d50:	stmne	r4, {r0, r1}
   15d54:	strne	ip, [r2]
   15d58:	ldrne	r1, [r6, #36]	; 0x24
   15d5c:	strne	r1, [r2, #4]
   15d60:	strne	r2, [r6, #36]	; 0x24
   15d64:	mov	r0, r3
   15d68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d6c:	ldr	r3, [r2]
   15d70:	cmp	r5, r3
   15d74:	beq	15db4 <__assert_fail@plt+0x44e8>
   15d78:	mov	r1, r3
   15d7c:	mov	r0, r5
   15d80:	ldr	r3, [r6, #28]
   15d84:	blx	r3
   15d88:	cmp	r0, #0
   15d8c:	bne	15dac <__assert_fail@plt+0x44e0>
   15d90:	ldr	r4, [r4, #4]
   15d94:	ldr	r2, [r4, #4]
   15d98:	cmp	r2, #0
   15d9c:	bne	15d6c <__assert_fail@plt+0x44a0>
   15da0:	mov	r3, #0
   15da4:	mov	r0, r3
   15da8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15dac:	ldr	r2, [r4, #4]
   15db0:	ldr	r3, [r2]
   15db4:	cmp	r8, #0
   15db8:	beq	15d64 <__assert_fail@plt+0x4498>
   15dbc:	ldr	r0, [r2, #4]
   15dc0:	mov	r1, #0
   15dc4:	str	r0, [r4, #4]
   15dc8:	str	r1, [r2]
   15dcc:	ldr	r1, [r6, #36]	; 0x24
   15dd0:	mov	r0, r3
   15dd4:	str	r1, [r2, #4]
   15dd8:	str	r2, [r6, #36]	; 0x24
   15ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15de0:	bl	11878 <abort@plt>
   15de4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15de8:	ldr	r6, [r1]
   15dec:	ldr	r3, [r1, #4]
   15df0:	cmp	r6, r3
   15df4:	bcs	15ec4 <__assert_fail@plt+0x45f8>
   15df8:	mov	r9, r2
   15dfc:	mov	r5, r0
   15e00:	mov	r8, r1
   15e04:	add	r6, r6, #8
   15e08:	mov	sl, #0
   15e0c:	ldr	fp, [r6, #-8]
   15e10:	mov	r7, r6
   15e14:	cmp	fp, #0
   15e18:	beq	15eb8 <__assert_fail@plt+0x45ec>
   15e1c:	ldr	r4, [r6, #-4]
   15e20:	cmp	r4, #0
   15e24:	beq	15ea8 <__assert_fail@plt+0x45dc>
   15e28:	ldr	r1, [r5, #8]
   15e2c:	b	15e48 <__assert_fail@plt+0x457c>
   15e30:	ldr	r3, [ip, #4]
   15e34:	cmp	r2, #0
   15e38:	str	r3, [r4, #4]
   15e3c:	str	r4, [ip, #4]
   15e40:	beq	15ea4 <__assert_fail@plt+0x45d8>
   15e44:	mov	r4, r2
   15e48:	ldr	fp, [r4]
   15e4c:	ldr	r3, [r5, #24]
   15e50:	mov	r0, fp
   15e54:	blx	r3
   15e58:	ldr	r1, [r5, #8]
   15e5c:	cmp	r0, r1
   15e60:	bcs	15f64 <__assert_fail@plt+0x4698>
   15e64:	ldr	r3, [r5]
   15e68:	ldr	r2, [r4, #4]
   15e6c:	add	ip, r3, r0, lsl #3
   15e70:	ldr	lr, [r3, r0, lsl #3]
   15e74:	cmp	lr, #0
   15e78:	bne	15e30 <__assert_fail@plt+0x4564>
   15e7c:	ldr	ip, [r5, #12]
   15e80:	str	fp, [r3, r0, lsl #3]
   15e84:	add	r3, ip, #1
   15e88:	str	r3, [r5, #12]
   15e8c:	str	lr, [r4]
   15e90:	ldr	r3, [r5, #36]	; 0x24
   15e94:	cmp	r2, #0
   15e98:	str	r3, [r4, #4]
   15e9c:	str	r4, [r5, #36]	; 0x24
   15ea0:	bne	15e44 <__assert_fail@plt+0x4578>
   15ea4:	ldr	fp, [r6, #-8]
   15ea8:	cmp	r9, #0
   15eac:	str	sl, [r6, #-4]
   15eb0:	beq	15ecc <__assert_fail@plt+0x4600>
   15eb4:	ldr	r3, [r8, #4]
   15eb8:	cmp	r3, r7
   15ebc:	add	r6, r6, #8
   15ec0:	bhi	15e0c <__assert_fail@plt+0x4540>
   15ec4:	mov	r0, #1
   15ec8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ecc:	ldr	r3, [r5, #24]
   15ed0:	ldr	r1, [r5, #8]
   15ed4:	mov	r0, fp
   15ed8:	blx	r3
   15edc:	ldr	r3, [r5, #8]
   15ee0:	cmp	r0, r3
   15ee4:	bcs	15f64 <__assert_fail@plt+0x4698>
   15ee8:	ldr	r3, [r5]
   15eec:	add	r4, r3, r0, lsl #3
   15ef0:	ldr	r2, [r3, r0, lsl #3]
   15ef4:	cmp	r2, #0
   15ef8:	beq	15f38 <__assert_fail@plt+0x466c>
   15efc:	ldr	r0, [r5, #36]	; 0x24
   15f00:	cmp	r0, #0
   15f04:	beq	15f4c <__assert_fail@plt+0x4680>
   15f08:	ldr	r3, [r0, #4]
   15f0c:	str	r3, [r5, #36]	; 0x24
   15f10:	ldr	r3, [r4, #4]
   15f14:	str	fp, [r0]
   15f18:	str	r3, [r0, #4]
   15f1c:	str	r0, [r4, #4]
   15f20:	ldr	r2, [r8, #12]
   15f24:	str	sl, [r6, #-8]
   15f28:	sub	r2, r2, #1
   15f2c:	ldr	r3, [r8, #4]
   15f30:	str	r2, [r8, #12]
   15f34:	b	15eb8 <__assert_fail@plt+0x45ec>
   15f38:	ldr	r2, [r5, #12]
   15f3c:	str	fp, [r3, r0, lsl #3]
   15f40:	add	r3, r2, #1
   15f44:	str	r3, [r5, #12]
   15f48:	b	15f20 <__assert_fail@plt+0x4654>
   15f4c:	mov	r0, #8
   15f50:	bl	1dfec <lchmod@@Base+0x6960>
   15f54:	cmp	r0, #0
   15f58:	bne	15f10 <__assert_fail@plt+0x4644>
   15f5c:	mov	r0, r9
   15f60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f64:	bl	11878 <abort@plt>
   15f68:	ldr	r0, [r0, #8]
   15f6c:	bx	lr
   15f70:	ldr	r0, [r0, #12]
   15f74:	bx	lr
   15f78:	ldr	r0, [r0, #16]
   15f7c:	bx	lr
   15f80:	ldm	r0, {r1, ip}
   15f84:	mov	r0, #0
   15f88:	cmp	r1, ip
   15f8c:	bcs	15fd4 <__assert_fail@plt+0x4708>
   15f90:	ldr	r3, [r1]
   15f94:	cmp	r3, #0
   15f98:	beq	15fc4 <__assert_fail@plt+0x46f8>
   15f9c:	ldr	r3, [r1, #4]
   15fa0:	mov	r2, #1
   15fa4:	cmp	r3, #0
   15fa8:	beq	15fbc <__assert_fail@plt+0x46f0>
   15fac:	ldr	r3, [r3, #4]
   15fb0:	add	r2, r2, #1
   15fb4:	cmp	r3, #0
   15fb8:	bne	15fac <__assert_fail@plt+0x46e0>
   15fbc:	cmp	r0, r2
   15fc0:	movcc	r0, r2
   15fc4:	add	r1, r1, #8
   15fc8:	cmp	r1, ip
   15fcc:	bcc	15f90 <__assert_fail@plt+0x46c4>
   15fd0:	bx	lr
   15fd4:	bx	lr
   15fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   15fdc:	mov	r2, #0
   15fe0:	ldm	r0, {r1, lr}
   15fe4:	mov	ip, r2
   15fe8:	cmp	r1, lr
   15fec:	bcs	1602c <__assert_fail@plt+0x4760>
   15ff0:	ldr	r3, [r1]
   15ff4:	cmp	r3, #0
   15ff8:	beq	16020 <__assert_fail@plt+0x4754>
   15ffc:	ldr	r3, [r1, #4]
   16000:	add	ip, ip, #1
   16004:	cmp	r3, #0
   16008:	add	r2, r2, #1
   1600c:	beq	16020 <__assert_fail@plt+0x4754>
   16010:	ldr	r3, [r3, #4]
   16014:	add	r2, r2, #1
   16018:	cmp	r3, #0
   1601c:	bne	16010 <__assert_fail@plt+0x4744>
   16020:	add	r1, r1, #8
   16024:	cmp	r1, lr
   16028:	bcc	15ff0 <__assert_fail@plt+0x4724>
   1602c:	ldr	r3, [r0, #12]
   16030:	cmp	r3, ip
   16034:	ldreq	r0, [r0, #16]
   16038:	subeq	r0, r0, r2
   1603c:	clzeq	r0, r0
   16040:	lsreq	r0, r0, #5
   16044:	movne	r0, #0
   16048:	pop	{pc}		; (ldr pc, [sp], #4)
   1604c:	push	{r4, r5, r6, r7, lr}
   16050:	mov	r5, r1
   16054:	ldm	r0, {ip, lr}
   16058:	sub	sp, sp, #12
   1605c:	ldr	r3, [r0, #16]
   16060:	cmp	ip, lr
   16064:	mov	r4, #0
   16068:	ldr	r6, [r0, #8]
   1606c:	ldr	r7, [r0, #12]
   16070:	bcs	160b4 <__assert_fail@plt+0x47e8>
   16074:	ldr	r2, [ip]
   16078:	cmp	r2, #0
   1607c:	beq	160a8 <__assert_fail@plt+0x47dc>
   16080:	ldr	r2, [ip, #4]
   16084:	mov	r1, #1
   16088:	cmp	r2, #0
   1608c:	beq	160a0 <__assert_fail@plt+0x47d4>
   16090:	ldr	r2, [r2, #4]
   16094:	add	r1, r1, #1
   16098:	cmp	r2, #0
   1609c:	bne	16090 <__assert_fail@plt+0x47c4>
   160a0:	cmp	r4, r1
   160a4:	movcc	r4, r1
   160a8:	add	ip, ip, #8
   160ac:	cmp	ip, lr
   160b0:	bcc	16074 <__assert_fail@plt+0x47a8>
   160b4:	ldr	r2, [pc, #116]	; 16130 <__assert_fail@plt+0x4864>
   160b8:	mov	r1, #1
   160bc:	mov	r0, r5
   160c0:	bl	11764 <__fprintf_chk@plt>
   160c4:	mov	r3, r6
   160c8:	ldr	r2, [pc, #100]	; 16134 <__assert_fail@plt+0x4868>
   160cc:	mov	r1, #1
   160d0:	mov	r0, r5
   160d4:	bl	11764 <__fprintf_chk@plt>
   160d8:	vmov	s15, r7
   160dc:	vldr	d5, [pc, #68]	; 16128 <__assert_fail@plt+0x485c>
   160e0:	mov	r3, r7
   160e4:	ldr	r2, [pc, #76]	; 16138 <__assert_fail@plt+0x486c>
   160e8:	vcvt.f64.u32	d6, s15
   160ec:	vmov	s15, r6
   160f0:	mov	r1, #1
   160f4:	mov	r0, r5
   160f8:	vcvt.f64.u32	d7, s15
   160fc:	vmul.f64	d6, d6, d5
   16100:	vdiv.f64	d5, d6, d7
   16104:	vstr	d5, [sp]
   16108:	bl	11764 <__fprintf_chk@plt>
   1610c:	mov	r3, r4
   16110:	mov	r0, r5
   16114:	ldr	r2, [pc, #32]	; 1613c <__assert_fail@plt+0x4870>
   16118:	mov	r1, #1
   1611c:	add	sp, sp, #12
   16120:	pop	{r4, r5, r6, r7, lr}
   16124:	b	11764 <__fprintf_chk@plt>
   16128:	andeq	r0, r0, r0
   1612c:	subsmi	r0, r9, r0
   16130:	ldrdeq	pc, [r1], -ip
   16134:	strdeq	pc, [r1], -r4
   16138:	andeq	pc, r1, ip, lsl #16
   1613c:	andeq	pc, r1, r0, lsr r8	; <UNPREDICTABLE>
   16140:	push	{r4, r5, r6, lr}
   16144:	mov	r5, r1
   16148:	ldr	r3, [r0, #24]
   1614c:	mov	r6, r0
   16150:	ldr	r1, [r0, #8]
   16154:	mov	r0, r5
   16158:	blx	r3
   1615c:	ldr	r3, [r6, #8]
   16160:	cmp	r0, r3
   16164:	bcs	161c4 <__assert_fail@plt+0x48f8>
   16168:	ldr	r3, [r6]
   1616c:	add	r4, r3, r0, lsl #3
   16170:	ldr	r1, [r3, r0, lsl #3]
   16174:	cmp	r1, #0
   16178:	bne	16184 <__assert_fail@plt+0x48b8>
   1617c:	b	161ac <__assert_fail@plt+0x48e0>
   16180:	ldr	r1, [r4]
   16184:	cmp	r5, r1
   16188:	beq	161b4 <__assert_fail@plt+0x48e8>
   1618c:	ldr	r3, [r6, #28]
   16190:	mov	r0, r5
   16194:	blx	r3
   16198:	cmp	r0, #0
   1619c:	bne	161bc <__assert_fail@plt+0x48f0>
   161a0:	ldr	r4, [r4, #4]
   161a4:	cmp	r4, #0
   161a8:	bne	16180 <__assert_fail@plt+0x48b4>
   161ac:	mov	r0, #0
   161b0:	pop	{r4, r5, r6, pc}
   161b4:	mov	r0, r5
   161b8:	pop	{r4, r5, r6, pc}
   161bc:	ldr	r0, [r4]
   161c0:	pop	{r4, r5, r6, pc}
   161c4:	bl	11878 <abort@plt>
   161c8:	ldr	r3, [r0, #16]
   161cc:	cmp	r3, #0
   161d0:	beq	16204 <__assert_fail@plt+0x4938>
   161d4:	ldr	r3, [r0]
   161d8:	ldr	r2, [r0, #4]
   161dc:	cmp	r3, r2
   161e0:	bcc	161f4 <__assert_fail@plt+0x4928>
   161e4:	b	1620c <__assert_fail@plt+0x4940>
   161e8:	add	r3, r3, #8
   161ec:	cmp	r3, r2
   161f0:	bcs	1620c <__assert_fail@plt+0x4940>
   161f4:	ldr	r0, [r3]
   161f8:	cmp	r0, #0
   161fc:	beq	161e8 <__assert_fail@plt+0x491c>
   16200:	bx	lr
   16204:	mov	r0, r3
   16208:	bx	lr
   1620c:	push	{r4, lr}
   16210:	bl	11878 <abort@plt>
   16214:	push	{r4, r5, r6, lr}
   16218:	mov	r4, r1
   1621c:	ldr	r3, [r0, #24]
   16220:	mov	r5, r0
   16224:	ldr	r1, [r0, #8]
   16228:	mov	r0, r4
   1622c:	blx	r3
   16230:	ldr	r3, [r5, #8]
   16234:	cmp	r0, r3
   16238:	bcs	1629c <__assert_fail@plt+0x49d0>
   1623c:	ldr	r3, [r5]
   16240:	add	r0, r3, r0, lsl #3
   16244:	mov	r3, r0
   16248:	b	16254 <__assert_fail@plt+0x4988>
   1624c:	cmp	r3, #0
   16250:	beq	16268 <__assert_fail@plt+0x499c>
   16254:	ldm	r3, {r2, r3}
   16258:	cmp	r4, r2
   1625c:	bne	1624c <__assert_fail@plt+0x4980>
   16260:	cmp	r3, #0
   16264:	bne	16294 <__assert_fail@plt+0x49c8>
   16268:	ldr	r2, [r5, #4]
   1626c:	mov	r3, r0
   16270:	b	16280 <__assert_fail@plt+0x49b4>
   16274:	ldr	r0, [r3]
   16278:	cmp	r0, #0
   1627c:	popne	{r4, r5, r6, pc}
   16280:	add	r3, r3, #8
   16284:	cmp	r3, r2
   16288:	bcc	16274 <__assert_fail@plt+0x49a8>
   1628c:	mov	r0, #0
   16290:	pop	{r4, r5, r6, pc}
   16294:	ldr	r0, [r3]
   16298:	pop	{r4, r5, r6, pc}
   1629c:	bl	11878 <abort@plt>
   162a0:	push	{r4, r5, r6, lr}
   162a4:	mov	r5, r0
   162a8:	ldr	r4, [r0]
   162ac:	ldr	r0, [r0, #4]
   162b0:	cmp	r4, r0
   162b4:	bcs	16330 <__assert_fail@plt+0x4a64>
   162b8:	add	r4, r4, #8
   162bc:	mov	ip, #0
   162c0:	ldr	r3, [r4, #-8]
   162c4:	mov	r6, r4
   162c8:	cmp	r3, #0
   162cc:	beq	16318 <__assert_fail@plt+0x4a4c>
   162d0:	cmp	r2, ip
   162d4:	bls	16324 <__assert_fail@plt+0x4a58>
   162d8:	str	r3, [r1, ip, lsl #2]
   162dc:	ldr	r3, [r4, #-4]
   162e0:	add	r0, ip, #1
   162e4:	cmp	r3, #0
   162e8:	add	ip, r1, ip, lsl #2
   162ec:	beq	16310 <__assert_fail@plt+0x4a44>
   162f0:	cmp	r2, r0
   162f4:	beq	1632c <__assert_fail@plt+0x4a60>
   162f8:	ldr	lr, [r3]
   162fc:	add	r0, r0, #1
   16300:	str	lr, [ip, #4]!
   16304:	ldr	r3, [r3, #4]
   16308:	cmp	r3, #0
   1630c:	bne	162f0 <__assert_fail@plt+0x4a24>
   16310:	mov	ip, r0
   16314:	ldr	r0, [r5, #4]
   16318:	cmp	r0, r6
   1631c:	add	r4, r4, #8
   16320:	bhi	162c0 <__assert_fail@plt+0x49f4>
   16324:	mov	r0, ip
   16328:	pop	{r4, r5, r6, pc}
   1632c:	pop	{r4, r5, r6, pc}
   16330:	mov	r0, #0
   16334:	pop	{r4, r5, r6, pc}
   16338:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1633c:	ldr	r3, [r0, #4]
   16340:	ldr	r8, [r0]
   16344:	cmp	r8, r3
   16348:	bcs	163ac <__assert_fail@plt+0x4ae0>
   1634c:	mov	r7, r2
   16350:	mov	r6, r1
   16354:	mov	r9, r0
   16358:	mov	r5, #0
   1635c:	ldr	r0, [r8]
   16360:	cmp	r0, #0
   16364:	beq	16398 <__assert_fail@plt+0x4acc>
   16368:	mov	r4, r8
   1636c:	b	16374 <__assert_fail@plt+0x4aa8>
   16370:	ldr	r0, [r4]
   16374:	mov	r1, r7
   16378:	blx	r6
   1637c:	cmp	r0, #0
   16380:	beq	163a4 <__assert_fail@plt+0x4ad8>
   16384:	ldr	r4, [r4, #4]
   16388:	add	r5, r5, #1
   1638c:	cmp	r4, #0
   16390:	bne	16370 <__assert_fail@plt+0x4aa4>
   16394:	ldr	r3, [r9, #4]
   16398:	add	r8, r8, #8
   1639c:	cmp	r3, r8
   163a0:	bhi	1635c <__assert_fail@plt+0x4a90>
   163a4:	mov	r0, r5
   163a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   163ac:	mov	r5, #0
   163b0:	b	163a4 <__assert_fail@plt+0x4ad8>
   163b4:	push	{r4, r5, r6, lr}
   163b8:	mov	r4, r0
   163bc:	ldrb	r0, [r0]
   163c0:	cmp	r0, #0
   163c4:	beq	163f4 <__assert_fail@plt+0x4b28>
   163c8:	mov	r5, r1
   163cc:	mov	r1, #0
   163d0:	rsb	r1, r1, r1, lsl #5
   163d4:	add	r0, r1, r0
   163d8:	mov	r1, r5
   163dc:	bl	1ea34 <lchmod@@Base+0x73a8>
   163e0:	ldrb	r0, [r4, #1]!
   163e4:	cmp	r0, #0
   163e8:	bne	163d0 <__assert_fail@plt+0x4b04>
   163ec:	mov	r0, r1
   163f0:	pop	{r4, r5, r6, pc}
   163f4:	mov	r1, r0
   163f8:	b	163ec <__assert_fail@plt+0x4b20>
   163fc:	push	{lr}		; (str lr, [sp, #-4]!)
   16400:	mov	ip, r0
   16404:	ldr	lr, [pc, #16]	; 1641c <__assert_fail@plt+0x4b50>
   16408:	ldm	lr!, {r0, r1, r2, r3}
   1640c:	ldr	lr, [lr]
   16410:	stmia	ip!, {r0, r1, r2, r3}
   16414:	str	lr, [ip]
   16418:	pop	{pc}		; (ldr pc, [sp], #4)
   1641c:	andeq	pc, r1, r8, asr #15
   16420:	cmp	r2, #0
   16424:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16428:	mov	r4, r0
   1642c:	ldr	sl, [pc, #548]	; 16658 <__assert_fail@plt+0x4d8c>
   16430:	mov	r0, #40	; 0x28
   16434:	movne	sl, r2
   16438:	cmp	r3, #0
   1643c:	ldr	fp, [pc, #536]	; 1665c <__assert_fail@plt+0x4d90>
   16440:	mov	r5, r1
   16444:	movne	fp, r3
   16448:	bl	1dfec <lchmod@@Base+0x6960>
   1644c:	subs	r8, r0, #0
   16450:	beq	164e8 <__assert_fail@plt+0x4c1c>
   16454:	cmp	r5, #0
   16458:	ldr	r3, [pc, #512]	; 16660 <__assert_fail@plt+0x4d94>
   1645c:	beq	164f0 <__assert_fail@plt+0x4c24>
   16460:	cmp	r5, r3
   16464:	str	r5, [r8, #20]
   16468:	beq	164f4 <__assert_fail@plt+0x4c28>
   1646c:	vldr	s15, [r5, #8]
   16470:	vldr	s14, [pc, #456]	; 16640 <__assert_fail@plt+0x4d74>
   16474:	vcmpe.f32	s15, s14
   16478:	vmrs	APSR_nzcv, fpscr
   1647c:	ble	164d8 <__assert_fail@plt+0x4c0c>
   16480:	vldr	s13, [pc, #444]	; 16644 <__assert_fail@plt+0x4d78>
   16484:	vcmpe.f32	s15, s13
   16488:	vmrs	APSR_nzcv, fpscr
   1648c:	bpl	164d8 <__assert_fail@plt+0x4c0c>
   16490:	vldr	s13, [pc, #432]	; 16648 <__assert_fail@plt+0x4d7c>
   16494:	vldr	s12, [r5, #12]
   16498:	vcmpe.f32	s12, s13
   1649c:	vmrs	APSR_nzcv, fpscr
   164a0:	ble	164d8 <__assert_fail@plt+0x4c0c>
   164a4:	vldr	s13, [r5]
   164a8:	vcmpe.f32	s13, #0.0
   164ac:	vmrs	APSR_nzcv, fpscr
   164b0:	blt	164d8 <__assert_fail@plt+0x4c0c>
   164b4:	vadd.f32	s14, s13, s14
   164b8:	vldr	s13, [r5, #4]
   164bc:	vcmpe.f32	s14, s13
   164c0:	vmrs	APSR_nzcv, fpscr
   164c4:	bpl	164d8 <__assert_fail@plt+0x4c0c>
   164c8:	vldr	s12, [pc, #380]	; 1664c <__assert_fail@plt+0x4d80>
   164cc:	vcmpe.f32	s13, s12
   164d0:	vmrs	APSR_nzcv, fpscr
   164d4:	bls	16624 <__assert_fail@plt+0x4d58>
   164d8:	str	r3, [r8, #20]
   164dc:	mov	r0, r8
   164e0:	bl	1355c <__assert_fail@plt+0x1c90>
   164e4:	mov	r8, #0
   164e8:	mov	r0, r8
   164ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164f0:	str	r3, [r8, #20]
   164f4:	vldr	s15, [pc, #340]	; 16650 <__assert_fail@plt+0x4d84>
   164f8:	vmov	s14, r4
   164fc:	vldr	s13, [pc, #336]	; 16654 <__assert_fail@plt+0x4d88>
   16500:	vcvt.f32.u32	s12, s14
   16504:	vdiv.f32	s14, s12, s15
   16508:	vcmpe.f32	s14, s13
   1650c:	vmrs	APSR_nzcv, fpscr
   16510:	bge	16610 <__assert_fail@plt+0x4d44>
   16514:	vcvt.u32.f32	s15, s14
   16518:	vmov	r4, s15
   1651c:	cmp	r4, #10
   16520:	movcc	r4, #10
   16524:	orr	r7, r4, #1
   16528:	cmn	r7, #1
   1652c:	ldrne	r9, [pc, #304]	; 16664 <__assert_fail@plt+0x4d98>
   16530:	beq	165a8 <__assert_fail@plt+0x4cdc>
   16534:	cmp	r7, #9
   16538:	bls	1661c <__assert_fail@plt+0x4d50>
   1653c:	umull	r2, r3, r9, r7
   16540:	lsr	r3, r3, #1
   16544:	add	r3, r3, r3, lsl #1
   16548:	cmp	r7, r3
   1654c:	beq	1659c <__assert_fail@plt+0x4cd0>
   16550:	mov	r6, #16
   16554:	mov	r5, #9
   16558:	mov	r4, #3
   1655c:	b	16570 <__assert_fail@plt+0x4ca4>
   16560:	bl	1ea34 <lchmod@@Base+0x73a8>
   16564:	add	r6, r6, #8
   16568:	cmp	r1, #0
   1656c:	beq	1659c <__assert_fail@plt+0x4cd0>
   16570:	add	r5, r5, r6
   16574:	add	r4, r4, #2
   16578:	cmp	r5, r7
   1657c:	mov	r0, r7
   16580:	mov	r1, r4
   16584:	bcc	16560 <__assert_fail@plt+0x4c94>
   16588:	mov	r1, r4
   1658c:	mov	r0, r7
   16590:	bl	1ea34 <lchmod@@Base+0x73a8>
   16594:	cmp	r1, #0
   16598:	bne	165a8 <__assert_fail@plt+0x4cdc>
   1659c:	add	r7, r7, #2
   165a0:	cmn	r7, #1
   165a4:	bne	16534 <__assert_fail@plt+0x4c68>
   165a8:	lsrs	r3, r7, #30
   165ac:	movne	r4, #1
   165b0:	moveq	r4, #0
   165b4:	tst	r7, #536870912	; 0x20000000
   165b8:	bne	16610 <__assert_fail@plt+0x4d44>
   165bc:	cmp	r4, #0
   165c0:	bne	16610 <__assert_fail@plt+0x4d44>
   165c4:	str	r7, [r8, #8]
   165c8:	mov	r0, r7
   165cc:	mov	r1, #8
   165d0:	bl	1dfa4 <lchmod@@Base+0x6918>
   165d4:	cmp	r0, #0
   165d8:	str	r0, [r8]
   165dc:	beq	164dc <__assert_fail@plt+0x4c10>
   165e0:	ldr	r3, [r8, #8]
   165e4:	str	r4, [r8, #12]
   165e8:	str	r4, [r8, #16]
   165ec:	add	r0, r0, r3, lsl #3
   165f0:	ldr	r3, [sp, #40]	; 0x28
   165f4:	str	r0, [r8, #4]
   165f8:	str	sl, [r8, #24]
   165fc:	str	fp, [r8, #28]
   16600:	str	r3, [r8, #32]
   16604:	str	r4, [r8, #36]	; 0x24
   16608:	mov	r0, r8
   1660c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16610:	mov	r3, #0
   16614:	str	r3, [r8, #8]
   16618:	b	164dc <__assert_fail@plt+0x4c10>
   1661c:	mov	r4, #3
   16620:	b	16588 <__assert_fail@plt+0x4cbc>
   16624:	vcmpe.f32	s15, s14
   16628:	vmrs	APSR_nzcv, fpscr
   1662c:	ble	164d8 <__assert_fail@plt+0x4c0c>
   16630:	ldrb	r3, [r5, #16]
   16634:	cmp	r3, #0
   16638:	bne	1651c <__assert_fail@plt+0x4c50>
   1663c:	b	164f8 <__assert_fail@plt+0x4c2c>
   16640:	stclcc	12, cr12, [ip, #820]	; 0x334
   16644:	svccc	0x00666666
   16648:	svccc	0x008ccccd
   1664c:	svccc	0x00800000
   16650:	svccc	0x004ccccd
   16654:	svcmi	0x00800000
   16658:	andeq	r5, r1, r0, lsr #25
   1665c:			; <UNDEFINED> instruction: 0x00015cb4
   16660:	andeq	pc, r1, r8, asr #15
   16664:	bge	feac1118 <optarg@@GLIBC_2.4+0xfea90f30>
   16668:	push	{r4, r5, r6, r7, r8, lr}
   1666c:	mov	r5, r0
   16670:	ldr	r7, [r0]
   16674:	ldr	r3, [r0, #4]
   16678:	cmp	r7, r3
   1667c:	addcc	r7, r7, #8
   16680:	movcc	r6, #0
   16684:	bcs	16700 <__assert_fail@plt+0x4e34>
   16688:	ldr	r2, [r7, #-8]
   1668c:	mov	r8, r7
   16690:	cmp	r2, #0
   16694:	beq	166f4 <__assert_fail@plt+0x4e28>
   16698:	ldr	r4, [r7, #-4]
   1669c:	ldr	r2, [r5, #32]
   166a0:	cmp	r4, #0
   166a4:	beq	166d8 <__assert_fail@plt+0x4e0c>
   166a8:	cmp	r2, #0
   166ac:	beq	166bc <__assert_fail@plt+0x4df0>
   166b0:	ldr	r0, [r4]
   166b4:	blx	r2
   166b8:	ldr	r2, [r5, #32]
   166bc:	ldr	r3, [r4, #4]
   166c0:	ldr	r1, [r5, #36]	; 0x24
   166c4:	str	r6, [r4]
   166c8:	str	r1, [r4, #4]
   166cc:	str	r4, [r5, #36]	; 0x24
   166d0:	subs	r4, r3, #0
   166d4:	bne	166a8 <__assert_fail@plt+0x4ddc>
   166d8:	cmp	r2, #0
   166dc:	beq	166e8 <__assert_fail@plt+0x4e1c>
   166e0:	ldr	r0, [r7, #-8]
   166e4:	blx	r2
   166e8:	str	r6, [r7, #-8]
   166ec:	str	r6, [r7, #-4]
   166f0:	ldr	r3, [r5, #4]
   166f4:	cmp	r3, r8
   166f8:	add	r7, r7, #8
   166fc:	bhi	16688 <__assert_fail@plt+0x4dbc>
   16700:	mov	r3, #0
   16704:	str	r3, [r5, #12]
   16708:	str	r3, [r5, #16]
   1670c:	pop	{r4, r5, r6, r7, r8, pc}
   16710:	ldr	r3, [r0, #32]
   16714:	push	{r4, r5, r6, lr}
   16718:	cmp	r3, #0
   1671c:	mov	r5, r0
   16720:	beq	16780 <__assert_fail@plt+0x4eb4>
   16724:	ldr	r3, [r0, #16]
   16728:	cmp	r3, #0
   1672c:	beq	16780 <__assert_fail@plt+0x4eb4>
   16730:	ldr	r6, [r0]
   16734:	ldr	r3, [r0, #4]
   16738:	cmp	r6, r3
   1673c:	bcs	167bc <__assert_fail@plt+0x4ef0>
   16740:	ldr	r0, [r6]
   16744:	cmp	r0, #0
   16748:	beq	16770 <__assert_fail@plt+0x4ea4>
   1674c:	mov	r4, r6
   16750:	b	16758 <__assert_fail@plt+0x4e8c>
   16754:	ldr	r0, [r4]
   16758:	ldr	r3, [r5, #32]
   1675c:	blx	r3
   16760:	ldr	r4, [r4, #4]
   16764:	cmp	r4, #0
   16768:	bne	16754 <__assert_fail@plt+0x4e88>
   1676c:	ldr	r3, [r5, #4]
   16770:	add	r6, r6, #8
   16774:	cmp	r3, r6
   16778:	bhi	16740 <__assert_fail@plt+0x4e74>
   1677c:	b	16784 <__assert_fail@plt+0x4eb8>
   16780:	ldr	r3, [r5, #4]
   16784:	ldr	r6, [r5]
   16788:	cmp	r6, r3
   1678c:	bcs	167bc <__assert_fail@plt+0x4ef0>
   16790:	ldr	r0, [r6, #4]
   16794:	cmp	r0, #0
   16798:	beq	167b0 <__assert_fail@plt+0x4ee4>
   1679c:	ldr	r4, [r0, #4]
   167a0:	bl	1355c <__assert_fail@plt+0x1c90>
   167a4:	subs	r0, r4, #0
   167a8:	bne	1679c <__assert_fail@plt+0x4ed0>
   167ac:	ldr	r3, [r5, #4]
   167b0:	add	r6, r6, #8
   167b4:	cmp	r3, r6
   167b8:	bhi	16790 <__assert_fail@plt+0x4ec4>
   167bc:	ldr	r0, [r5, #36]	; 0x24
   167c0:	cmp	r0, #0
   167c4:	beq	167d8 <__assert_fail@plt+0x4f0c>
   167c8:	ldr	r4, [r0, #4]
   167cc:	bl	1355c <__assert_fail@plt+0x1c90>
   167d0:	subs	r0, r4, #0
   167d4:	bne	167c8 <__assert_fail@plt+0x4efc>
   167d8:	ldr	r0, [r5]
   167dc:	bl	1355c <__assert_fail@plt+0x1c90>
   167e0:	mov	r0, r5
   167e4:	pop	{r4, r5, r6, lr}
   167e8:	b	1355c <__assert_fail@plt+0x1c90>
   167ec:	ldr	r3, [r0, #20]
   167f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   167f4:	mov	r8, r0
   167f8:	ldrb	r2, [r3, #16]
   167fc:	sub	sp, sp, #40	; 0x28
   16800:	cmp	r2, #0
   16804:	bne	16830 <__assert_fail@plt+0x4f64>
   16808:	vmov	s15, r1
   1680c:	vldr	s13, [r3, #8]
   16810:	vldr	s14, [pc, #648]	; 16aa0 <__assert_fail@plt+0x51d4>
   16814:	vcvt.f32.u32	s12, s15
   16818:	vdiv.f32	s15, s12, s13
   1681c:	vcmpe.f32	s15, s14
   16820:	vmrs	APSR_nzcv, fpscr
   16824:	bge	16a58 <__assert_fail@plt+0x518c>
   16828:	vcvt.u32.f32	s15, s15
   1682c:	vmov	r1, s15
   16830:	cmp	r1, #10
   16834:	movcc	r1, #10
   16838:	orr	r7, r1, #1
   1683c:	cmn	r7, #1
   16840:	ldrne	r9, [pc, #604]	; 16aa4 <__assert_fail@plt+0x51d8>
   16844:	beq	168bc <__assert_fail@plt+0x4ff0>
   16848:	cmp	r7, #9
   1684c:	bls	16a68 <__assert_fail@plt+0x519c>
   16850:	umull	r2, r3, r9, r7
   16854:	lsr	r3, r3, #1
   16858:	add	r3, r3, r3, lsl #1
   1685c:	cmp	r7, r3
   16860:	beq	168b0 <__assert_fail@plt+0x4fe4>
   16864:	mov	r6, #16
   16868:	mov	r5, #9
   1686c:	mov	r4, #3
   16870:	b	1688c <__assert_fail@plt+0x4fc0>
   16874:	mov	r1, r4
   16878:	mov	r0, r7
   1687c:	bl	1ea34 <lchmod@@Base+0x73a8>
   16880:	add	r6, r6, #8
   16884:	cmp	r1, #0
   16888:	beq	168b0 <__assert_fail@plt+0x4fe4>
   1688c:	add	r5, r5, r6
   16890:	cmp	r5, r7
   16894:	add	r4, r4, #2
   16898:	bcc	16874 <__assert_fail@plt+0x4fa8>
   1689c:	mov	r1, r4
   168a0:	mov	r0, r7
   168a4:	bl	1ea34 <lchmod@@Base+0x73a8>
   168a8:	cmp	r1, #0
   168ac:	bne	168bc <__assert_fail@plt+0x4ff0>
   168b0:	add	r7, r7, #2
   168b4:	cmn	r7, #1
   168b8:	bne	16848 <__assert_fail@plt+0x4f7c>
   168bc:	lsrs	r3, r7, #30
   168c0:	movne	r4, #1
   168c4:	moveq	r4, #0
   168c8:	tst	r7, #536870912	; 0x20000000
   168cc:	bne	16a58 <__assert_fail@plt+0x518c>
   168d0:	cmp	r4, #0
   168d4:	bne	16a58 <__assert_fail@plt+0x518c>
   168d8:	ldr	r3, [r8, #8]
   168dc:	cmp	r3, r7
   168e0:	beq	16a48 <__assert_fail@plt+0x517c>
   168e4:	mov	r1, #8
   168e8:	mov	r0, r7
   168ec:	bl	1dfa4 <lchmod@@Base+0x6918>
   168f0:	cmp	r0, #0
   168f4:	str	r0, [sp]
   168f8:	beq	16a58 <__assert_fail@plt+0x518c>
   168fc:	ldr	r1, [r8, #24]
   16900:	ldr	r5, [r8, #20]
   16904:	ldr	lr, [r8, #28]
   16908:	ldr	ip, [r8, #32]
   1690c:	add	r0, r0, r7, lsl #3
   16910:	ldr	r3, [r8, #36]	; 0x24
   16914:	str	r0, [sp, #4]
   16918:	str	r1, [sp, #24]
   1691c:	mov	r2, r4
   16920:	mov	r0, sp
   16924:	mov	r1, r8
   16928:	str	r7, [sp, #8]
   1692c:	str	r4, [sp, #12]
   16930:	str	r4, [sp, #16]
   16934:	str	r5, [sp, #20]
   16938:	str	lr, [sp, #28]
   1693c:	str	ip, [sp, #32]
   16940:	str	r3, [sp, #36]	; 0x24
   16944:	bl	15de4 <__assert_fail@plt+0x4518>
   16948:	subs	r9, r0, #0
   1694c:	bne	16a70 <__assert_fail@plt+0x51a4>
   16950:	ldr	r5, [sp]
   16954:	ldr	r2, [sp, #4]
   16958:	ldr	r3, [sp, #36]	; 0x24
   1695c:	cmp	r5, r2
   16960:	str	r3, [r8, #36]	; 0x24
   16964:	addcc	r5, r5, #8
   16968:	movcc	r7, r9
   1696c:	bcs	16a1c <__assert_fail@plt+0x5150>
   16970:	ldr	r3, [r5, #-8]
   16974:	mov	r6, r5
   16978:	cmp	r3, #0
   1697c:	beq	16a10 <__assert_fail@plt+0x5144>
   16980:	ldr	r4, [r5, #-4]
   16984:	cmp	r4, #0
   16988:	beq	16a0c <__assert_fail@plt+0x5140>
   1698c:	ldr	r1, [r8, #8]
   16990:	b	169ac <__assert_fail@plt+0x50e0>
   16994:	ldr	r3, [ip, #4]
   16998:	cmp	r2, #0
   1699c:	str	r3, [r4, #4]
   169a0:	str	r4, [ip, #4]
   169a4:	beq	16a08 <__assert_fail@plt+0x513c>
   169a8:	mov	r4, r2
   169ac:	ldr	sl, [r4]
   169b0:	ldr	r3, [r8, #24]
   169b4:	mov	r0, sl
   169b8:	blx	r3
   169bc:	ldr	r1, [r8, #8]
   169c0:	cmp	r0, r1
   169c4:	bcs	16a9c <__assert_fail@plt+0x51d0>
   169c8:	ldr	r3, [r8]
   169cc:	ldr	r2, [r4, #4]
   169d0:	add	ip, r3, r0, lsl #3
   169d4:	ldr	lr, [r3, r0, lsl #3]
   169d8:	cmp	lr, #0
   169dc:	bne	16994 <__assert_fail@plt+0x50c8>
   169e0:	ldr	ip, [r8, #12]
   169e4:	str	sl, [r3, r0, lsl #3]
   169e8:	add	r3, ip, #1
   169ec:	str	r3, [r8, #12]
   169f0:	str	lr, [r4]
   169f4:	ldr	r3, [r8, #36]	; 0x24
   169f8:	cmp	r2, #0
   169fc:	str	r3, [r4, #4]
   16a00:	str	r4, [r8, #36]	; 0x24
   16a04:	bne	169a8 <__assert_fail@plt+0x50dc>
   16a08:	ldr	r2, [sp, #4]
   16a0c:	str	r7, [r5, #-4]
   16a10:	cmp	r6, r2
   16a14:	add	r5, r5, #8
   16a18:	bcc	16970 <__assert_fail@plt+0x50a4>
   16a1c:	mov	r1, sp
   16a20:	mov	r0, r8
   16a24:	mov	r2, #0
   16a28:	bl	15de4 <__assert_fail@plt+0x4518>
   16a2c:	cmp	r0, #0
   16a30:	beq	16a9c <__assert_fail@plt+0x51d0>
   16a34:	ldr	r0, [sp]
   16a38:	bl	1355c <__assert_fail@plt+0x1c90>
   16a3c:	mov	r0, r9
   16a40:	add	sp, sp, #40	; 0x28
   16a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a48:	mov	r9, #1
   16a4c:	mov	r0, r9
   16a50:	add	sp, sp, #40	; 0x28
   16a54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a58:	mov	r9, #0
   16a5c:	mov	r0, r9
   16a60:	add	sp, sp, #40	; 0x28
   16a64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a68:	mov	r4, #3
   16a6c:	b	1689c <__assert_fail@plt+0x4fd0>
   16a70:	ldr	r0, [r8]
   16a74:	bl	1355c <__assert_fail@plt+0x1c90>
   16a78:	ldmib	sp, {r0, r1, r2}
   16a7c:	ldr	ip, [sp]
   16a80:	ldr	r3, [sp, #36]	; 0x24
   16a84:	stmib	r8, {r0, r1, r2}
   16a88:	mov	r0, r9
   16a8c:	str	ip, [r8]
   16a90:	str	r3, [r8, #36]	; 0x24
   16a94:	add	sp, sp, #40	; 0x28
   16a98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a9c:	bl	11878 <abort@plt>
   16aa0:	svcmi	0x00800000
   16aa4:	bge	feac1558 <optarg@@GLIBC_2.4+0xfea91370>
   16aa8:	push	{r4, r5, r6, r7, r8, r9, lr}
   16aac:	subs	r5, r1, #0
   16ab0:	sub	sp, sp, #12
   16ab4:	beq	16cd0 <__assert_fail@plt+0x5404>
   16ab8:	ldr	r3, [r0, #24]
   16abc:	mov	r6, r0
   16ac0:	ldr	r1, [r0, #8]
   16ac4:	mov	r0, r5
   16ac8:	mov	r7, r2
   16acc:	blx	r3
   16ad0:	ldr	r3, [r6, #8]
   16ad4:	cmp	r0, r3
   16ad8:	mov	r8, r0
   16adc:	bcs	16cd0 <__assert_fail@plt+0x5404>
   16ae0:	ldr	r9, [r6]
   16ae4:	add	r4, r9, r0, lsl #3
   16ae8:	ldr	r1, [r9, r0, lsl #3]
   16aec:	str	r4, [sp, #4]
   16af0:	cmp	r1, #0
   16af4:	beq	16cd4 <__assert_fail@plt+0x5408>
   16af8:	cmp	r5, r1
   16afc:	beq	16b54 <__assert_fail@plt+0x5288>
   16b00:	ldr	r3, [r6, #28]
   16b04:	mov	r0, r5
   16b08:	blx	r3
   16b0c:	cmp	r0, #0
   16b10:	bne	16b68 <__assert_fail@plt+0x529c>
   16b14:	ldr	r3, [r4, #4]
   16b18:	cmp	r3, #0
   16b1c:	bne	16b48 <__assert_fail@plt+0x527c>
   16b20:	b	16b74 <__assert_fail@plt+0x52a8>
   16b24:	ldr	r3, [r6, #28]
   16b28:	mov	r0, r5
   16b2c:	blx	r3
   16b30:	cmp	r0, #0
   16b34:	bne	16be8 <__assert_fail@plt+0x531c>
   16b38:	ldr	r4, [r4, #4]
   16b3c:	ldr	r3, [r4, #4]
   16b40:	cmp	r3, #0
   16b44:	beq	16b74 <__assert_fail@plt+0x52a8>
   16b48:	ldr	r1, [r3]
   16b4c:	cmp	r5, r1
   16b50:	bne	16b24 <__assert_fail@plt+0x5258>
   16b54:	mov	r0, #0
   16b58:	cmp	r7, #0
   16b5c:	strne	r1, [r7]
   16b60:	add	sp, sp, #12
   16b64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16b68:	ldr	r1, [r9, r8, lsl #3]
   16b6c:	cmp	r1, #0
   16b70:	bne	16b54 <__assert_fail@plt+0x5288>
   16b74:	vldr	s15, [r6, #8]
   16b78:	ldr	r3, [r6, #20]
   16b7c:	vldr	s14, [r6, #12]
   16b80:	vcvt.f32.u32	s15, s15
   16b84:	vldr	s13, [r3, #8]
   16b88:	vcvt.f32.u32	s14, s14
   16b8c:	vmul.f32	s12, s13, s15
   16b90:	vcmpe.f32	s14, s12
   16b94:	vmrs	APSR_nzcv, fpscr
   16b98:	bgt	16bf4 <__assert_fail@plt+0x5328>
   16b9c:	ldr	r4, [sp, #4]
   16ba0:	ldr	r3, [r4]
   16ba4:	cmp	r3, #0
   16ba8:	beq	16d38 <__assert_fail@plt+0x546c>
   16bac:	ldr	r3, [r6, #36]	; 0x24
   16bb0:	cmp	r3, #0
   16bb4:	beq	16d20 <__assert_fail@plt+0x5454>
   16bb8:	ldr	r2, [r3, #4]
   16bbc:	str	r2, [r6, #36]	; 0x24
   16bc0:	ldr	r2, [r6, #16]
   16bc4:	ldr	r1, [r4, #4]
   16bc8:	add	r2, r2, #1
   16bcc:	str	r5, [r3]
   16bd0:	str	r1, [r3, #4]
   16bd4:	mov	r0, #1
   16bd8:	str	r3, [r4, #4]
   16bdc:	str	r2, [r6, #16]
   16be0:	add	sp, sp, #12
   16be4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16be8:	ldr	r3, [r4, #4]
   16bec:	ldr	r1, [r3]
   16bf0:	b	16b6c <__assert_fail@plt+0x52a0>
   16bf4:	ldr	r2, [pc, #392]	; 16d84 <__assert_fail@plt+0x54b8>
   16bf8:	cmp	r3, r2
   16bfc:	beq	16c80 <__assert_fail@plt+0x53b4>
   16c00:	vldr	s12, [pc, #352]	; 16d68 <__assert_fail@plt+0x549c>
   16c04:	vcmpe.f32	s13, s12
   16c08:	vmrs	APSR_nzcv, fpscr
   16c0c:	ble	16c68 <__assert_fail@plt+0x539c>
   16c10:	vldr	s11, [pc, #340]	; 16d6c <__assert_fail@plt+0x54a0>
   16c14:	vcmpe.f32	s13, s11
   16c18:	vmrs	APSR_nzcv, fpscr
   16c1c:	bpl	16c68 <__assert_fail@plt+0x539c>
   16c20:	vldr	s11, [r3, #12]
   16c24:	vldr	s10, [pc, #324]	; 16d70 <__assert_fail@plt+0x54a4>
   16c28:	vcmpe.f32	s11, s10
   16c2c:	vmrs	APSR_nzcv, fpscr
   16c30:	ble	16c68 <__assert_fail@plt+0x539c>
   16c34:	vldr	s10, [r3]
   16c38:	vcmpe.f32	s10, #0.0
   16c3c:	vmrs	APSR_nzcv, fpscr
   16c40:	blt	16c68 <__assert_fail@plt+0x539c>
   16c44:	vadd.f32	s12, s10, s12
   16c48:	vldr	s10, [r3, #4]
   16c4c:	vcmpe.f32	s12, s10
   16c50:	vmrs	APSR_nzcv, fpscr
   16c54:	bpl	16c68 <__assert_fail@plt+0x539c>
   16c58:	vldr	s9, [pc, #276]	; 16d74 <__assert_fail@plt+0x54a8>
   16c5c:	vcmpe.f32	s10, s9
   16c60:	vmrs	APSR_nzcv, fpscr
   16c64:	bls	16d48 <__assert_fail@plt+0x547c>
   16c68:	vldr	s13, [pc, #264]	; 16d78 <__assert_fail@plt+0x54ac>
   16c6c:	str	r2, [r6, #20]
   16c70:	vmul.f32	s12, s15, s13
   16c74:	vcmpe.f32	s12, s14
   16c78:	vmrs	APSR_nzcv, fpscr
   16c7c:	bpl	16b9c <__assert_fail@plt+0x52d0>
   16c80:	vldr	s11, [pc, #244]	; 16d7c <__assert_fail@plt+0x54b0>
   16c84:	vmul.f32	s15, s15, s11
   16c88:	vmul.f32	s15, s15, s13
   16c8c:	vldr	s14, [pc, #236]	; 16d80 <__assert_fail@plt+0x54b4>
   16c90:	vcmpe.f32	s15, s14
   16c94:	vmrs	APSR_nzcv, fpscr
   16c98:	bge	16d40 <__assert_fail@plt+0x5474>
   16c9c:	vcvt.u32.f32	s15, s15
   16ca0:	mov	r0, r6
   16ca4:	vmov	r1, s15
   16ca8:	bl	167ec <__assert_fail@plt+0x4f20>
   16cac:	cmp	r0, #0
   16cb0:	beq	16d40 <__assert_fail@plt+0x5474>
   16cb4:	mov	r3, #0
   16cb8:	add	r2, sp, #4
   16cbc:	mov	r1, r5
   16cc0:	mov	r0, r6
   16cc4:	bl	15cc4 <__assert_fail@plt+0x43f8>
   16cc8:	cmp	r0, #0
   16ccc:	beq	16b9c <__assert_fail@plt+0x52d0>
   16cd0:	bl	11878 <abort@plt>
   16cd4:	vmov	s15, r3
   16cd8:	ldr	r2, [r6, #12]
   16cdc:	ldr	r3, [r6, #20]
   16ce0:	vcvt.f32.u32	s15, s15
   16ce4:	vldr	s13, [r3, #8]
   16ce8:	vmov	s14, r2
   16cec:	vcvt.f32.u32	s14, s14
   16cf0:	vmul.f32	s12, s13, s15
   16cf4:	vcmpe.f32	s14, s12
   16cf8:	vmrs	APSR_nzcv, fpscr
   16cfc:	bgt	16bf4 <__assert_fail@plt+0x5328>
   16d00:	ldr	r3, [r6, #16]
   16d04:	add	r2, r2, #1
   16d08:	add	r3, r3, #1
   16d0c:	str	r5, [r4]
   16d10:	mov	r0, #1
   16d14:	str	r2, [r6, #12]
   16d18:	str	r3, [r6, #16]
   16d1c:	b	16b60 <__assert_fail@plt+0x5294>
   16d20:	mov	r0, #8
   16d24:	bl	1dfec <lchmod@@Base+0x6960>
   16d28:	subs	r3, r0, #0
   16d2c:	beq	16d40 <__assert_fail@plt+0x5474>
   16d30:	ldr	r4, [sp, #4]
   16d34:	b	16bc0 <__assert_fail@plt+0x52f4>
   16d38:	ldr	r2, [r6, #12]
   16d3c:	b	16d00 <__assert_fail@plt+0x5434>
   16d40:	mvn	r0, #0
   16d44:	b	16b60 <__assert_fail@plt+0x5294>
   16d48:	vcmpe.f32	s12, s13
   16d4c:	vmrs	APSR_nzcv, fpscr
   16d50:	bpl	16c68 <__assert_fail@plt+0x539c>
   16d54:	ldrb	r3, [r3, #16]
   16d58:	cmp	r3, #0
   16d5c:	vmulne.f32	s15, s11, s15
   16d60:	bne	16c8c <__assert_fail@plt+0x53c0>
   16d64:	b	16c84 <__assert_fail@plt+0x53b8>
   16d68:	stclcc	12, cr12, [ip, #820]	; 0x334
   16d6c:	svccc	0x00666666
   16d70:	svccc	0x008ccccd
   16d74:	svccc	0x00800000
   16d78:	svccc	0x004ccccd
   16d7c:	svccc	0x00b4fdf4
   16d80:	svcmi	0x00800000
   16d84:	andeq	pc, r1, r8, asr #15
   16d88:	push	{r4, r5, r6, r7, r8, lr}
   16d8c:	subs	r5, r1, #0
   16d90:	sub	sp, sp, #8
   16d94:	beq	16f98 <__assert_fail@plt+0x56cc>
   16d98:	ldr	r3, [r0, #24]
   16d9c:	mov	r6, r0
   16da0:	ldr	r1, [r0, #8]
   16da4:	mov	r0, r5
   16da8:	blx	r3
   16dac:	ldr	r3, [r6, #8]
   16db0:	cmp	r0, r3
   16db4:	mov	r7, r0
   16db8:	bcs	16f98 <__assert_fail@plt+0x56cc>
   16dbc:	ldr	r8, [r6]
   16dc0:	add	r4, r8, r0, lsl #3
   16dc4:	ldr	r1, [r8, r0, lsl #3]
   16dc8:	str	r4, [sp, #4]
   16dcc:	cmp	r1, #0
   16dd0:	beq	16f9c <__assert_fail@plt+0x56d0>
   16dd4:	cmp	r5, r1
   16dd8:	beq	16dfc <__assert_fail@plt+0x5530>
   16ddc:	ldr	r3, [r6, #28]
   16de0:	mov	r0, r5
   16de4:	blx	r3
   16de8:	cmp	r0, #0
   16dec:	beq	16e2c <__assert_fail@plt+0x5560>
   16df0:	ldr	r1, [r8, r7, lsl #3]
   16df4:	cmp	r1, #0
   16df8:	beq	16e38 <__assert_fail@plt+0x556c>
   16dfc:	mov	r0, r1
   16e00:	add	sp, sp, #8
   16e04:	pop	{r4, r5, r6, r7, r8, pc}
   16e08:	ldr	r1, [r3]
   16e0c:	cmp	r5, r1
   16e10:	beq	16dfc <__assert_fail@plt+0x5530>
   16e14:	ldr	r3, [r6, #28]
   16e18:	mov	r0, r5
   16e1c:	blx	r3
   16e20:	cmp	r0, #0
   16e24:	bne	16eb0 <__assert_fail@plt+0x55e4>
   16e28:	ldr	r4, [r4, #4]
   16e2c:	ldr	r3, [r4, #4]
   16e30:	cmp	r3, #0
   16e34:	bne	16e08 <__assert_fail@plt+0x553c>
   16e38:	vldr	s15, [r6, #8]
   16e3c:	ldr	r3, [r6, #20]
   16e40:	vldr	s14, [r6, #12]
   16e44:	vcvt.f32.u32	s15, s15
   16e48:	vldr	s13, [r3, #8]
   16e4c:	vcvt.f32.u32	s14, s14
   16e50:	vmul.f32	s12, s13, s15
   16e54:	vcmpe.f32	s14, s12
   16e58:	vmrs	APSR_nzcv, fpscr
   16e5c:	bgt	16ebc <__assert_fail@plt+0x55f0>
   16e60:	ldr	r4, [sp, #4]
   16e64:	ldr	r3, [r4]
   16e68:	cmp	r3, #0
   16e6c:	beq	16ffc <__assert_fail@plt+0x5730>
   16e70:	ldr	r0, [r6, #36]	; 0x24
   16e74:	cmp	r0, #0
   16e78:	beq	16fe4 <__assert_fail@plt+0x5718>
   16e7c:	ldr	r3, [r0, #4]
   16e80:	str	r3, [r6, #36]	; 0x24
   16e84:	ldr	r3, [r6, #16]
   16e88:	ldr	r2, [r4, #4]
   16e8c:	add	r3, r3, #1
   16e90:	str	r5, [r0]
   16e94:	str	r2, [r0, #4]
   16e98:	str	r0, [r4, #4]
   16e9c:	str	r3, [r6, #16]
   16ea0:	mov	r1, r5
   16ea4:	mov	r0, r1
   16ea8:	add	sp, sp, #8
   16eac:	pop	{r4, r5, r6, r7, r8, pc}
   16eb0:	ldr	r3, [r4, #4]
   16eb4:	ldr	r1, [r3]
   16eb8:	b	16df4 <__assert_fail@plt+0x5528>
   16ebc:	ldr	r2, [pc, #388]	; 17048 <__assert_fail@plt+0x577c>
   16ec0:	cmp	r3, r2
   16ec4:	beq	16f48 <__assert_fail@plt+0x567c>
   16ec8:	vldr	s12, [pc, #348]	; 1702c <__assert_fail@plt+0x5760>
   16ecc:	vcmpe.f32	s13, s12
   16ed0:	vmrs	APSR_nzcv, fpscr
   16ed4:	ble	16f30 <__assert_fail@plt+0x5664>
   16ed8:	vldr	s11, [pc, #336]	; 17030 <__assert_fail@plt+0x5764>
   16edc:	vcmpe.f32	s13, s11
   16ee0:	vmrs	APSR_nzcv, fpscr
   16ee4:	bpl	16f30 <__assert_fail@plt+0x5664>
   16ee8:	vldr	s11, [r3, #12]
   16eec:	vldr	s10, [pc, #320]	; 17034 <__assert_fail@plt+0x5768>
   16ef0:	vcmpe.f32	s11, s10
   16ef4:	vmrs	APSR_nzcv, fpscr
   16ef8:	ble	16f30 <__assert_fail@plt+0x5664>
   16efc:	vldr	s10, [r3]
   16f00:	vcmpe.f32	s10, #0.0
   16f04:	vmrs	APSR_nzcv, fpscr
   16f08:	blt	16f30 <__assert_fail@plt+0x5664>
   16f0c:	vadd.f32	s12, s10, s12
   16f10:	vldr	s10, [r3, #4]
   16f14:	vcmpe.f32	s12, s10
   16f18:	vmrs	APSR_nzcv, fpscr
   16f1c:	bpl	16f30 <__assert_fail@plt+0x5664>
   16f20:	vldr	s9, [pc, #272]	; 17038 <__assert_fail@plt+0x576c>
   16f24:	vcmpe.f32	s10, s9
   16f28:	vmrs	APSR_nzcv, fpscr
   16f2c:	bls	1700c <__assert_fail@plt+0x5740>
   16f30:	vldr	s13, [pc, #260]	; 1703c <__assert_fail@plt+0x5770>
   16f34:	str	r2, [r6, #20]
   16f38:	vmul.f32	s12, s15, s13
   16f3c:	vcmpe.f32	s12, s14
   16f40:	vmrs	APSR_nzcv, fpscr
   16f44:	bpl	16e60 <__assert_fail@plt+0x5594>
   16f48:	vldr	s11, [pc, #240]	; 17040 <__assert_fail@plt+0x5774>
   16f4c:	vmul.f32	s15, s15, s11
   16f50:	vmul.f32	s15, s15, s13
   16f54:	vldr	s14, [pc, #232]	; 17044 <__assert_fail@plt+0x5778>
   16f58:	vcmpe.f32	s15, s14
   16f5c:	vmrs	APSR_nzcv, fpscr
   16f60:	bge	17004 <__assert_fail@plt+0x5738>
   16f64:	vcvt.u32.f32	s15, s15
   16f68:	mov	r0, r6
   16f6c:	vmov	r1, s15
   16f70:	bl	167ec <__assert_fail@plt+0x4f20>
   16f74:	cmp	r0, #0
   16f78:	beq	17004 <__assert_fail@plt+0x5738>
   16f7c:	mov	r3, #0
   16f80:	add	r2, sp, #4
   16f84:	mov	r1, r5
   16f88:	mov	r0, r6
   16f8c:	bl	15cc4 <__assert_fail@plt+0x43f8>
   16f90:	cmp	r0, #0
   16f94:	beq	16e60 <__assert_fail@plt+0x5594>
   16f98:	bl	11878 <abort@plt>
   16f9c:	vmov	s15, r3
   16fa0:	ldr	r2, [r6, #12]
   16fa4:	ldr	r3, [r6, #20]
   16fa8:	vcvt.f32.u32	s15, s15
   16fac:	vldr	s13, [r3, #8]
   16fb0:	vmov	s14, r2
   16fb4:	vcvt.f32.u32	s14, s14
   16fb8:	vmul.f32	s12, s15, s13
   16fbc:	vcmpe.f32	s12, s14
   16fc0:	vmrs	APSR_nzcv, fpscr
   16fc4:	bmi	16ebc <__assert_fail@plt+0x55f0>
   16fc8:	ldr	r3, [r6, #16]
   16fcc:	add	r2, r2, #1
   16fd0:	add	r3, r3, #1
   16fd4:	str	r5, [r4]
   16fd8:	str	r2, [r6, #12]
   16fdc:	str	r3, [r6, #16]
   16fe0:	b	16ea0 <__assert_fail@plt+0x55d4>
   16fe4:	mov	r0, #8
   16fe8:	bl	1dfec <lchmod@@Base+0x6960>
   16fec:	cmp	r0, #0
   16ff0:	beq	17004 <__assert_fail@plt+0x5738>
   16ff4:	ldr	r4, [sp, #4]
   16ff8:	b	16e84 <__assert_fail@plt+0x55b8>
   16ffc:	ldr	r2, [r6, #12]
   17000:	b	16fc8 <__assert_fail@plt+0x56fc>
   17004:	mov	r1, #0
   17008:	b	16dfc <__assert_fail@plt+0x5530>
   1700c:	vcmpe.f32	s12, s13
   17010:	vmrs	APSR_nzcv, fpscr
   17014:	bpl	16f30 <__assert_fail@plt+0x5664>
   17018:	ldrb	r3, [r3, #16]
   1701c:	cmp	r3, #0
   17020:	vmulne.f32	s15, s11, s15
   17024:	bne	16f54 <__assert_fail@plt+0x5688>
   17028:	b	16f4c <__assert_fail@plt+0x5680>
   1702c:	stclcc	12, cr12, [ip, #820]	; 0x334
   17030:	svccc	0x00666666
   17034:	svccc	0x008ccccd
   17038:	svccc	0x00800000
   1703c:	svccc	0x004ccccd
   17040:	svccc	0x00b4fdf4
   17044:	svcmi	0x00800000
   17048:	andeq	pc, r1, r8, asr #15
   1704c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17050:	mov	r7, r1
   17054:	ldr	r3, [r0, #24]
   17058:	mov	r6, r0
   1705c:	ldr	r1, [r0, #8]
   17060:	mov	r0, r7
   17064:	blx	r3
   17068:	ldr	r3, [r6, #8]
   1706c:	cmp	r0, r3
   17070:	bcs	1729c <__assert_fail@plt+0x59d0>
   17074:	ldr	r9, [r6]
   17078:	mov	r8, r0
   1707c:	add	r5, r9, r0, lsl #3
   17080:	ldr	r4, [r9, r0, lsl #3]
   17084:	cmp	r4, #0
   17088:	beq	17134 <__assert_fail@plt+0x5868>
   1708c:	cmp	r7, r4
   17090:	beq	170b0 <__assert_fail@plt+0x57e4>
   17094:	mov	r1, r4
   17098:	ldr	r3, [r6, #28]
   1709c:	mov	r0, r7
   170a0:	blx	r3
   170a4:	cmp	r0, #0
   170a8:	beq	17128 <__assert_fail@plt+0x585c>
   170ac:	ldr	r4, [r9, r8, lsl #3]
   170b0:	ldr	r3, [r5, #4]
   170b4:	cmp	r3, #0
   170b8:	movne	r2, #0
   170bc:	ldmne	r3, {r0, r1}
   170c0:	streq	r3, [r9, r8, lsl #3]
   170c4:	stmne	r5, {r0, r1}
   170c8:	strne	r2, [r3]
   170cc:	ldrne	r2, [r6, #36]	; 0x24
   170d0:	strne	r2, [r3, #4]
   170d4:	strne	r3, [r6, #36]	; 0x24
   170d8:	cmp	r4, #0
   170dc:	beq	17134 <__assert_fail@plt+0x5868>
   170e0:	ldr	r2, [r9, r8, lsl #3]
   170e4:	ldr	r3, [r6, #16]
   170e8:	cmp	r2, #0
   170ec:	sub	r3, r3, #1
   170f0:	str	r3, [r6, #16]
   170f4:	beq	17168 <__assert_fail@plt+0x589c>
   170f8:	mov	r0, r4
   170fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17100:	ldr	r4, [r3]
   17104:	cmp	r7, r4
   17108:	beq	17148 <__assert_fail@plt+0x587c>
   1710c:	mov	r1, r4
   17110:	ldr	r3, [r6, #28]
   17114:	mov	r0, r7
   17118:	blx	r3
   1711c:	cmp	r0, #0
   17120:	bne	17140 <__assert_fail@plt+0x5874>
   17124:	ldr	r5, [r5, #4]
   17128:	ldr	r3, [r5, #4]
   1712c:	cmp	r3, #0
   17130:	bne	17100 <__assert_fail@plt+0x5834>
   17134:	mov	r4, #0
   17138:	mov	r0, r4
   1713c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17140:	ldr	r3, [r5, #4]
   17144:	ldr	r4, [r3]
   17148:	ldr	r1, [r3, #4]
   1714c:	mov	r2, #0
   17150:	str	r1, [r5, #4]
   17154:	str	r2, [r3]
   17158:	ldr	r2, [r6, #36]	; 0x24
   1715c:	str	r2, [r3, #4]
   17160:	str	r3, [r6, #36]	; 0x24
   17164:	b	170d8 <__assert_fail@plt+0x580c>
   17168:	vldr	s15, [r6, #8]
   1716c:	ldr	r3, [r6, #12]
   17170:	ldr	r2, [r6, #20]
   17174:	sub	r3, r3, #1
   17178:	vcvt.f32.u32	s14, s15
   1717c:	vldr	s13, [r2]
   17180:	vmov	s15, r3
   17184:	str	r3, [r6, #12]
   17188:	vcvt.f32.u32	s15, s15
   1718c:	vmul.f32	s12, s13, s14
   17190:	vcmpe.f32	s15, s12
   17194:	vmrs	APSR_nzcv, fpscr
   17198:	bpl	170f8 <__assert_fail@plt+0x582c>
   1719c:	ldr	r3, [pc, #276]	; 172b8 <__assert_fail@plt+0x59ec>
   171a0:	cmp	r2, r3
   171a4:	beq	17284 <__assert_fail@plt+0x59b8>
   171a8:	vldr	s12, [r2, #8]
   171ac:	vldr	s11, [pc, #236]	; 172a0 <__assert_fail@plt+0x59d4>
   171b0:	vcmpe.f32	s12, s11
   171b4:	vmrs	APSR_nzcv, fpscr
   171b8:	ble	1726c <__assert_fail@plt+0x59a0>
   171bc:	vldr	s10, [pc, #224]	; 172a4 <__assert_fail@plt+0x59d8>
   171c0:	vcmpe.f32	s12, s10
   171c4:	vmrs	APSR_nzcv, fpscr
   171c8:	bpl	1726c <__assert_fail@plt+0x59a0>
   171cc:	vldr	s10, [pc, #212]	; 172a8 <__assert_fail@plt+0x59dc>
   171d0:	vldr	s9, [r2, #12]
   171d4:	vcmpe.f32	s9, s10
   171d8:	vmrs	APSR_nzcv, fpscr
   171dc:	ble	1726c <__assert_fail@plt+0x59a0>
   171e0:	vcmpe.f32	s13, #0.0
   171e4:	vmrs	APSR_nzcv, fpscr
   171e8:	blt	1726c <__assert_fail@plt+0x59a0>
   171ec:	vadd.f32	s13, s13, s11
   171f0:	vldr	s11, [r2, #4]
   171f4:	vcmpe.f32	s13, s11
   171f8:	vmrs	APSR_nzcv, fpscr
   171fc:	bpl	1726c <__assert_fail@plt+0x59a0>
   17200:	vldr	s10, [pc, #164]	; 172ac <__assert_fail@plt+0x59e0>
   17204:	vcmpe.f32	s11, s10
   17208:	vmrs	APSR_nzcv, fpscr
   1720c:	bhi	1726c <__assert_fail@plt+0x59a0>
   17210:	vcmpe.f32	s12, s13
   17214:	vmrs	APSR_nzcv, fpscr
   17218:	ble	1726c <__assert_fail@plt+0x59a0>
   1721c:	ldrb	r3, [r2, #16]
   17220:	cmp	r3, #0
   17224:	beq	1728c <__assert_fail@plt+0x59c0>
   17228:	vmul.f32	s15, s14, s11
   1722c:	vcvt.u32.f32	s15, s15
   17230:	vmov	r1, s15
   17234:	mov	r0, r6
   17238:	bl	167ec <__assert_fail@plt+0x4f20>
   1723c:	cmp	r0, #0
   17240:	bne	170f8 <__assert_fail@plt+0x582c>
   17244:	ldr	r0, [r6, #36]	; 0x24
   17248:	cmp	r0, #0
   1724c:	beq	17260 <__assert_fail@plt+0x5994>
   17250:	ldr	r5, [r0, #4]
   17254:	bl	1355c <__assert_fail@plt+0x1c90>
   17258:	subs	r0, r5, #0
   1725c:	bne	17250 <__assert_fail@plt+0x5984>
   17260:	mov	r3, #0
   17264:	str	r3, [r6, #36]	; 0x24
   17268:	b	170f8 <__assert_fail@plt+0x582c>
   1726c:	vldr	s13, [pc, #60]	; 172b0 <__assert_fail@plt+0x59e4>
   17270:	str	r3, [r6, #20]
   17274:	vmul.f32	s13, s14, s13
   17278:	vcmpe.f32	s15, s13
   1727c:	vmrs	APSR_nzcv, fpscr
   17280:	bpl	170f8 <__assert_fail@plt+0x582c>
   17284:	vldr	s12, [pc, #40]	; 172b4 <__assert_fail@plt+0x59e8>
   17288:	vldr	s11, [pc, #28]	; 172ac <__assert_fail@plt+0x59e0>
   1728c:	vmul.f32	s15, s14, s11
   17290:	vmul.f32	s15, s15, s12
   17294:	vcvt.u32.f32	s15, s15
   17298:	b	17230 <__assert_fail@plt+0x5964>
   1729c:	bl	11878 <abort@plt>
   172a0:	stclcc	12, cr12, [ip, #820]	; 0x334
   172a4:	svccc	0x00666666
   172a8:	svccc	0x008ccccd
   172ac:	svccc	0x00800000
   172b0:	andeq	r0, r0, r0
   172b4:	svccc	0x004ccccd
   172b8:	andeq	pc, r1, r8, asr #15
   172bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172c0:	mov	r7, r1
   172c4:	ldr	r3, [r0, #24]
   172c8:	mov	r6, r0
   172cc:	ldr	r1, [r0, #8]
   172d0:	mov	r0, r7
   172d4:	blx	r3
   172d8:	ldr	r3, [r6, #8]
   172dc:	cmp	r0, r3
   172e0:	bcs	1750c <__assert_fail@plt+0x5c40>
   172e4:	ldr	r9, [r6]
   172e8:	mov	r8, r0
   172ec:	add	r5, r9, r0, lsl #3
   172f0:	ldr	r4, [r9, r0, lsl #3]
   172f4:	cmp	r4, #0
   172f8:	beq	173a4 <__assert_fail@plt+0x5ad8>
   172fc:	cmp	r7, r4
   17300:	beq	17320 <__assert_fail@plt+0x5a54>
   17304:	mov	r1, r4
   17308:	ldr	r3, [r6, #28]
   1730c:	mov	r0, r7
   17310:	blx	r3
   17314:	cmp	r0, #0
   17318:	beq	17398 <__assert_fail@plt+0x5acc>
   1731c:	ldr	r4, [r9, r8, lsl #3]
   17320:	ldr	r3, [r5, #4]
   17324:	cmp	r3, #0
   17328:	movne	r2, #0
   1732c:	ldmne	r3, {r0, r1}
   17330:	streq	r3, [r9, r8, lsl #3]
   17334:	stmne	r5, {r0, r1}
   17338:	strne	r2, [r3]
   1733c:	ldrne	r2, [r6, #36]	; 0x24
   17340:	strne	r2, [r3, #4]
   17344:	strne	r3, [r6, #36]	; 0x24
   17348:	cmp	r4, #0
   1734c:	beq	173a4 <__assert_fail@plt+0x5ad8>
   17350:	ldr	r2, [r9, r8, lsl #3]
   17354:	ldr	r3, [r6, #16]
   17358:	cmp	r2, #0
   1735c:	sub	r3, r3, #1
   17360:	str	r3, [r6, #16]
   17364:	beq	173d8 <__assert_fail@plt+0x5b0c>
   17368:	mov	r0, r4
   1736c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17370:	ldr	r4, [r3]
   17374:	cmp	r7, r4
   17378:	beq	173b8 <__assert_fail@plt+0x5aec>
   1737c:	mov	r1, r4
   17380:	ldr	r3, [r6, #28]
   17384:	mov	r0, r7
   17388:	blx	r3
   1738c:	cmp	r0, #0
   17390:	bne	173b0 <__assert_fail@plt+0x5ae4>
   17394:	ldr	r5, [r5, #4]
   17398:	ldr	r3, [r5, #4]
   1739c:	cmp	r3, #0
   173a0:	bne	17370 <__assert_fail@plt+0x5aa4>
   173a4:	mov	r4, #0
   173a8:	mov	r0, r4
   173ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   173b0:	ldr	r3, [r5, #4]
   173b4:	ldr	r4, [r3]
   173b8:	ldr	r1, [r3, #4]
   173bc:	mov	r2, #0
   173c0:	str	r1, [r5, #4]
   173c4:	str	r2, [r3]
   173c8:	ldr	r2, [r6, #36]	; 0x24
   173cc:	str	r2, [r3, #4]
   173d0:	str	r3, [r6, #36]	; 0x24
   173d4:	b	17348 <__assert_fail@plt+0x5a7c>
   173d8:	vldr	s15, [r6, #8]
   173dc:	ldr	r3, [r6, #12]
   173e0:	ldr	r2, [r6, #20]
   173e4:	sub	r3, r3, #1
   173e8:	vcvt.f32.u32	s14, s15
   173ec:	vldr	s13, [r2]
   173f0:	vmov	s15, r3
   173f4:	str	r3, [r6, #12]
   173f8:	vcvt.f32.u32	s15, s15
   173fc:	vmul.f32	s12, s13, s14
   17400:	vcmpe.f32	s15, s12
   17404:	vmrs	APSR_nzcv, fpscr
   17408:	bpl	17368 <__assert_fail@plt+0x5a9c>
   1740c:	ldr	r3, [pc, #276]	; 17528 <__assert_fail@plt+0x5c5c>
   17410:	cmp	r2, r3
   17414:	beq	174f4 <__assert_fail@plt+0x5c28>
   17418:	vldr	s12, [r2, #8]
   1741c:	vldr	s11, [pc, #236]	; 17510 <__assert_fail@plt+0x5c44>
   17420:	vcmpe.f32	s12, s11
   17424:	vmrs	APSR_nzcv, fpscr
   17428:	ble	174dc <__assert_fail@plt+0x5c10>
   1742c:	vldr	s10, [pc, #224]	; 17514 <__assert_fail@plt+0x5c48>
   17430:	vcmpe.f32	s12, s10
   17434:	vmrs	APSR_nzcv, fpscr
   17438:	bpl	174dc <__assert_fail@plt+0x5c10>
   1743c:	vldr	s10, [pc, #212]	; 17518 <__assert_fail@plt+0x5c4c>
   17440:	vldr	s9, [r2, #12]
   17444:	vcmpe.f32	s9, s10
   17448:	vmrs	APSR_nzcv, fpscr
   1744c:	ble	174dc <__assert_fail@plt+0x5c10>
   17450:	vcmpe.f32	s13, #0.0
   17454:	vmrs	APSR_nzcv, fpscr
   17458:	blt	174dc <__assert_fail@plt+0x5c10>
   1745c:	vadd.f32	s13, s13, s11
   17460:	vldr	s11, [r2, #4]
   17464:	vcmpe.f32	s13, s11
   17468:	vmrs	APSR_nzcv, fpscr
   1746c:	bpl	174dc <__assert_fail@plt+0x5c10>
   17470:	vldr	s10, [pc, #164]	; 1751c <__assert_fail@plt+0x5c50>
   17474:	vcmpe.f32	s11, s10
   17478:	vmrs	APSR_nzcv, fpscr
   1747c:	bhi	174dc <__assert_fail@plt+0x5c10>
   17480:	vcmpe.f32	s12, s13
   17484:	vmrs	APSR_nzcv, fpscr
   17488:	ble	174dc <__assert_fail@plt+0x5c10>
   1748c:	ldrb	r3, [r2, #16]
   17490:	cmp	r3, #0
   17494:	beq	174fc <__assert_fail@plt+0x5c30>
   17498:	vmul.f32	s15, s14, s11
   1749c:	vcvt.u32.f32	s15, s15
   174a0:	vmov	r1, s15
   174a4:	mov	r0, r6
   174a8:	bl	167ec <__assert_fail@plt+0x4f20>
   174ac:	cmp	r0, #0
   174b0:	bne	17368 <__assert_fail@plt+0x5a9c>
   174b4:	ldr	r0, [r6, #36]	; 0x24
   174b8:	cmp	r0, #0
   174bc:	beq	174d0 <__assert_fail@plt+0x5c04>
   174c0:	ldr	r5, [r0, #4]
   174c4:	bl	1355c <__assert_fail@plt+0x1c90>
   174c8:	subs	r0, r5, #0
   174cc:	bne	174c0 <__assert_fail@plt+0x5bf4>
   174d0:	mov	r3, #0
   174d4:	str	r3, [r6, #36]	; 0x24
   174d8:	b	17368 <__assert_fail@plt+0x5a9c>
   174dc:	vldr	s13, [pc, #60]	; 17520 <__assert_fail@plt+0x5c54>
   174e0:	str	r3, [r6, #20]
   174e4:	vmul.f32	s13, s14, s13
   174e8:	vcmpe.f32	s15, s13
   174ec:	vmrs	APSR_nzcv, fpscr
   174f0:	bpl	17368 <__assert_fail@plt+0x5a9c>
   174f4:	vldr	s12, [pc, #40]	; 17524 <__assert_fail@plt+0x5c58>
   174f8:	vldr	s11, [pc, #28]	; 1751c <__assert_fail@plt+0x5c50>
   174fc:	vmul.f32	s15, s14, s11
   17500:	vmul.f32	s15, s15, s12
   17504:	vcvt.u32.f32	s15, s15
   17508:	b	174a0 <__assert_fail@plt+0x5bd4>
   1750c:	bl	11878 <abort@plt>
   17510:	stclcc	12, cr12, [ip, #820]	; 0x334
   17514:	svccc	0x00666666
   17518:	svccc	0x008ccccd
   1751c:	svccc	0x00800000
   17520:	andeq	r0, r0, r0
   17524:	svccc	0x004ccccd
   17528:	andeq	pc, r1, r8, asr #15
   1752c:	push	{r4, r5, r6, lr}
   17530:	mov	r4, r0
   17534:	ldr	r0, [r0]
   17538:	mov	r6, r1
   1753c:	bl	1e638 <lchmod@@Base+0x6fac>
   17540:	ldrd	r4, [r4, #8]
   17544:	mov	r2, r6
   17548:	mov	r3, #0
   1754c:	eor	r4, r4, r0
   17550:	mov	r0, r4
   17554:	mov	r1, r5
   17558:	bl	1ec94 <lchmod@@Base+0x7608>
   1755c:	mov	r0, r2
   17560:	pop	{r4, r5, r6, pc}
   17564:	ldrd	r2, [r1, #8]
   17568:	push	{r4, r5, r6, lr}
   1756c:	ldrd	r4, [r0, #8]
   17570:	cmp	r5, r3
   17574:	cmpeq	r4, r2
   17578:	beq	17584 <__assert_fail@plt+0x5cb8>
   1757c:	mov	r0, #0
   17580:	pop	{r4, r5, r6, pc}
   17584:	ldrd	r4, [r0, #16]
   17588:	ldrd	r2, [r1, #16]
   1758c:	cmp	r5, r3
   17590:	cmpeq	r4, r2
   17594:	bne	1757c <__assert_fail@plt+0x5cb0>
   17598:	ldr	r1, [r1]
   1759c:	ldr	r0, [r0]
   175a0:	bl	114d0 <strcmp@plt>
   175a4:	clz	r0, r0
   175a8:	lsr	r0, r0, #5
   175ac:	pop	{r4, r5, r6, pc}
   175b0:	push	{r4, lr}
   175b4:	mov	r4, r0
   175b8:	ldr	r0, [r0]
   175bc:	bl	1355c <__assert_fail@plt+0x1c90>
   175c0:	mov	r0, r4
   175c4:	pop	{r4, lr}
   175c8:	b	1355c <__assert_fail@plt+0x1c90>
   175cc:	mov	r3, #0
   175d0:	mov	r2, #1
   175d4:	str	r1, [r0]
   175d8:	str	r1, [r0, #4]
   175dc:	str	r1, [r0, #8]
   175e0:	str	r1, [r0, #12]
   175e4:	str	r1, [r0, #16]
   175e8:	strb	r2, [r0, #28]
   175ec:	str	r3, [r0, #20]
   175f0:	str	r3, [r0, #24]
   175f4:	bx	lr
   175f8:	ldrb	r0, [r0, #28]
   175fc:	bx	lr
   17600:	ldrb	ip, [r0, #28]
   17604:	ldr	r3, [r0, #20]
   17608:	mov	r2, r0
   1760c:	eor	ip, ip, #1
   17610:	add	r3, ip, r3
   17614:	and	r3, r3, #3
   17618:	ldr	r0, [r0, r3, lsl #2]
   1761c:	str	r1, [r2, r3, lsl #2]
   17620:	ldr	r1, [r2, #24]
   17624:	str	r3, [r2, #20]
   17628:	cmp	r3, r1
   1762c:	addeq	r3, ip, r3
   17630:	andeq	r3, r3, #3
   17634:	streq	r3, [r2, #24]
   17638:	mov	r3, #0
   1763c:	strb	r3, [r2, #28]
   17640:	bx	lr
   17644:	ldrb	r3, [r0, #28]
   17648:	cmp	r3, #0
   1764c:	bne	17684 <__assert_fail@plt+0x5db8>
   17650:	ldr	r3, [r0, #20]
   17654:	ldr	r1, [r0, #16]
   17658:	ldr	r2, [r0, r3, lsl #2]
   1765c:	str	r1, [r0, r3, lsl #2]
   17660:	ldr	r1, [r0, #24]
   17664:	cmp	r3, r1
   17668:	addne	r3, r3, #3
   1766c:	moveq	r3, #1
   17670:	andne	r3, r3, #3
   17674:	strbeq	r3, [r0, #28]
   17678:	strne	r3, [r0, #20]
   1767c:	mov	r0, r2
   17680:	bx	lr
   17684:	push	{r4, lr}
   17688:	bl	11878 <abort@plt>

0001768c <lchmod@@Base>:
   1768c:	push	{r4, r5, r6, r7, r8, lr}
   17690:	mov	r6, r1
   17694:	sub	sp, sp, #144	; 0x90
   17698:	mov	r1, #2654208	; 0x288000
   1769c:	mov	r8, r0
   176a0:	bl	11644 <open64@plt>
   176a4:	subs	r4, r0, #0
   176a8:	movlt	r5, r4
   176ac:	blt	17734 <lchmod@@Base+0xa8>
   176b0:	mov	r3, #4096	; 0x1000
   176b4:	str	r3, [sp]
   176b8:	ldr	r2, [pc, #208]	; 17790 <lchmod@@Base+0x104>
   176bc:	add	r3, sp, #40	; 0x28
   176c0:	mov	r1, r4
   176c4:	mov	r0, #3
   176c8:	bl	115c0 <__fxstatat64@plt>
   176cc:	cmp	r0, #0
   176d0:	bne	17754 <lchmod@@Base+0xc8>
   176d4:	ldr	r3, [sp, #56]	; 0x38
   176d8:	and	r3, r3, #61440	; 0xf000
   176dc:	cmp	r3, #40960	; 0xa000
   176e0:	beq	17774 <lchmod@@Base+0xe8>
   176e4:	ldr	r3, [pc, #168]	; 17794 <lchmod@@Base+0x108>
   176e8:	mov	r2, #26
   176ec:	str	r4, [sp]
   176f0:	mov	r1, #1
   176f4:	add	r0, sp, #12
   176f8:	bl	11728 <__sprintf_chk@plt>
   176fc:	mov	r1, r6
   17700:	add	r0, sp, #12
   17704:	bl	11848 <chmod@plt>
   17708:	mov	r5, r0
   1770c:	bl	1171c <__errno_location@plt>
   17710:	mov	r7, r0
   17714:	mov	r0, r4
   17718:	ldr	r4, [r7]
   1771c:	bl	11884 <close@plt>
   17720:	cmp	r5, #0
   17724:	beq	17734 <lchmod@@Base+0xa8>
   17728:	cmp	r4, #2
   1772c:	strne	r4, [r7]
   17730:	beq	17740 <lchmod@@Base+0xb4>
   17734:	mov	r0, r5
   17738:	add	sp, sp, #144	; 0x90
   1773c:	pop	{r4, r5, r6, r7, r8, pc}
   17740:	mov	r1, r6
   17744:	mov	r0, r8
   17748:	bl	11848 <chmod@plt>
   1774c:	mov	r5, r0
   17750:	b	17734 <lchmod@@Base+0xa8>
   17754:	bl	1171c <__errno_location@plt>
   17758:	mvn	r5, #0
   1775c:	mov	r6, r0
   17760:	mov	r0, r4
   17764:	ldr	r4, [r6]
   17768:	bl	11884 <close@plt>
   1776c:	str	r4, [r6]
   17770:	b	17734 <lchmod@@Base+0xa8>
   17774:	mov	r0, r4
   17778:	bl	11884 <close@plt>
   1777c:	bl	1171c <__errno_location@plt>
   17780:	mov	r3, #95	; 0x5f
   17784:	mvn	r5, #0
   17788:	str	r3, [r0]
   1778c:	b	17734 <lchmod@@Base+0xa8>
   17790:	andeq	pc, r1, ip, lsr #16
   17794:	andeq	pc, r1, r8, asr #16
   17798:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1779c:	mov	r4, r0
   177a0:	ldrb	r3, [r0]
   177a4:	sub	r2, r3, #48	; 0x30
   177a8:	cmp	r2, #7
   177ac:	bls	17844 <lchmod@@Base+0x1b8>
   177b0:	cmp	r3, #0
   177b4:	moveq	r0, #1
   177b8:	beq	177e8 <lchmod@@Base+0x15c>
   177bc:	mov	r1, r4
   177c0:	mov	r0, #1
   177c4:	and	r2, r3, #239	; 0xef
   177c8:	cmp	r3, #43	; 0x2b
   177cc:	cmpne	r2, #45	; 0x2d
   177d0:	ldrb	r3, [r1, #1]!
   177d4:	moveq	r2, #1
   177d8:	movne	r2, #0
   177dc:	cmp	r3, #0
   177e0:	add	r0, r0, r2
   177e4:	bne	177c4 <lchmod@@Base+0x138>
   177e8:	mov	r1, #16
   177ec:	ldr	r6, [pc, #816]	; 17b24 <lchmod@@Base+0x498>
   177f0:	bl	1cbb0 <lchmod@@Base+0x5524>
   177f4:	mov	r9, #3
   177f8:	mov	r2, #0
   177fc:	mov	sl, #1
   17800:	mov	fp, #2
   17804:	mov	lr, #0
   17808:	ldrb	ip, [r4]
   1780c:	mov	r3, r4
   17810:	add	r4, r4, #1
   17814:	cmp	ip, #97	; 0x61
   17818:	beq	17a8c <lchmod@@Base+0x400>
   1781c:	bls	1788c <lchmod@@Base+0x200>
   17820:	cmp	ip, #111	; 0x6f
   17824:	beq	17a94 <lchmod@@Base+0x408>
   17828:	cmp	ip, #117	; 0x75
   1782c:	beq	17884 <lchmod@@Base+0x1f8>
   17830:	cmp	ip, #103	; 0x67
   17834:	beq	17aa0 <lchmod@@Base+0x414>
   17838:	bl	1355c <__assert_fail@plt+0x1c90>
   1783c:	mov	r0, #0
   17840:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17844:	ldr	r0, [pc, #728]	; 17b24 <lchmod@@Base+0x498>
   17848:	mov	r3, r4
   1784c:	mov	r5, #0
   17850:	b	17864 <lchmod@@Base+0x1d8>
   17854:	ldrb	r2, [r3]
   17858:	sub	r1, r2, #48	; 0x30
   1785c:	cmp	r1, #7
   17860:	bhi	17aac <lchmod@@Base+0x420>
   17864:	ldrb	r2, [r3], #1
   17868:	lsl	r5, r5, #3
   1786c:	sub	r5, r5, #48	; 0x30
   17870:	add	r5, r2, r5
   17874:	cmp	r5, r0
   17878:	bls	17854 <lchmod@@Base+0x1c8>
   1787c:	mov	r0, #0
   17880:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17884:	orr	lr, lr, #2496	; 0x9c0
   17888:	b	17808 <lchmod@@Base+0x17c>
   1788c:	cmp	ip, #45	; 0x2d
   17890:	beq	178a4 <lchmod@@Base+0x218>
   17894:	cmp	ip, #61	; 0x3d
   17898:	beq	178a4 <lchmod@@Base+0x218>
   1789c:	cmp	ip, #43	; 0x2b
   178a0:	bne	17838 <lchmod@@Base+0x1ac>
   178a4:	add	r7, r2, #1
   178a8:	add	r2, r0, r2, lsl #4
   178ac:	b	1790c <lchmod@@Base+0x280>
   178b0:	cmp	r4, #111	; 0x6f
   178b4:	beq	17a78 <lchmod@@Base+0x3ec>
   178b8:	cmp	r4, #117	; 0x75
   178bc:	bne	179a4 <lchmod@@Base+0x318>
   178c0:	ldrb	r4, [r3, #2]
   178c4:	mov	r8, r9
   178c8:	add	r3, r3, #2
   178cc:	mov	r1, #448	; 0x1c0
   178d0:	cmp	lr, #0
   178d4:	strb	ip, [r2]
   178d8:	str	r1, [r2, #8]
   178dc:	mov	ip, r4
   178e0:	andne	r1, r1, lr
   178e4:	strb	r8, [r2, #1]
   178e8:	str	lr, [r2, #4]
   178ec:	and	r4, ip, #239	; 0xef
   178f0:	cmp	ip, #43	; 0x2b
   178f4:	cmpne	r4, #45	; 0x2d
   178f8:	str	r1, [r2, #12]
   178fc:	add	r1, r7, #1
   17900:	add	r2, r2, #16
   17904:	bne	17b00 <lchmod@@Base+0x474>
   17908:	mov	r7, r1
   1790c:	ldrb	r4, [r3, #1]
   17910:	add	r1, r3, #1
   17914:	cmp	r4, #103	; 0x67
   17918:	beq	17990 <lchmod@@Base+0x304>
   1791c:	bhi	178b0 <lchmod@@Base+0x224>
   17920:	sub	r3, r4, #48	; 0x30
   17924:	cmp	r3, #7
   17928:	movls	r3, #0
   1792c:	bhi	179a4 <lchmod@@Base+0x318>
   17930:	ldrb	r4, [r1], #1
   17934:	lsl	r3, r3, #3
   17938:	sub	r3, r3, #48	; 0x30
   1793c:	add	r3, r4, r3
   17940:	cmp	r3, r6
   17944:	bhi	17838 <lchmod@@Base+0x1ac>
   17948:	ldrb	r4, [r1]
   1794c:	sub	r5, r4, #48	; 0x30
   17950:	cmp	r5, #7
   17954:	bls	17930 <lchmod@@Base+0x2a4>
   17958:	cmp	lr, #0
   1795c:	bne	17838 <lchmod@@Base+0x1ac>
   17960:	cmp	r4, #0
   17964:	cmpne	r4, #44	; 0x2c
   17968:	bne	17838 <lchmod@@Base+0x1ac>
   1796c:	ldr	lr, [pc, #432]	; 17b24 <lchmod@@Base+0x498>
   17970:	strb	ip, [r2]
   17974:	str	r3, [r2, #8]
   17978:	strb	sl, [r2, #1]
   1797c:	mov	r3, r1
   17980:	str	r6, [r2, #4]
   17984:	mov	ip, r4
   17988:	mov	r1, lr
   1798c:	b	178ec <lchmod@@Base+0x260>
   17990:	ldrb	r4, [r3, #2]
   17994:	mov	r8, r9
   17998:	add	r3, r3, #2
   1799c:	mov	r1, #56	; 0x38
   179a0:	b	178d0 <lchmod@@Base+0x244>
   179a4:	mov	r3, r1
   179a8:	mov	r8, sl
   179ac:	mov	r1, #0
   179b0:	sub	r5, r4, #88	; 0x58
   179b4:	cmp	r5, #32
   179b8:	ldrls	pc, [pc, r5, lsl #2]
   179bc:	b	178d0 <lchmod@@Base+0x244>
   179c0:	andeq	r7, r1, r4, asr #20
   179c4:	ldrdeq	r7, [r1], -r0
   179c8:	ldrdeq	r7, [r1], -r0
   179cc:	ldrdeq	r7, [r1], -r0
   179d0:	ldrdeq	r7, [r1], -r0
   179d4:	ldrdeq	r7, [r1], -r0
   179d8:	ldrdeq	r7, [r1], -r0
   179dc:	ldrdeq	r7, [r1], -r0
   179e0:	ldrdeq	r7, [r1], -r0
   179e4:	ldrdeq	r7, [r1], -r0
   179e8:	ldrdeq	r7, [r1], -r0
   179ec:	ldrdeq	r7, [r1], -r0
   179f0:	ldrdeq	r7, [r1], -r0
   179f4:	ldrdeq	r7, [r1], -r0
   179f8:	ldrdeq	r7, [r1], -r0
   179fc:	ldrdeq	r7, [r1], -r0
   17a00:	ldrdeq	r7, [r1], -r0
   17a04:	ldrdeq	r7, [r1], -r0
   17a08:	ldrdeq	r7, [r1], -r0
   17a0c:	ldrdeq	r7, [r1], -r0
   17a10:	ldrdeq	r7, [r1], -r0
   17a14:	ldrdeq	r7, [r1], -r0
   17a18:	ldrdeq	r7, [r1], -r0
   17a1c:	ldrdeq	r7, [r1], -r0
   17a20:	ldrdeq	r7, [r1], -r0
   17a24:	ldrdeq	r7, [r1], -r0
   17a28:	andeq	r7, r1, r0, ror sl
   17a2c:	andeq	r7, r1, r8, ror #20
   17a30:	andeq	r7, r1, r0, ror #20
   17a34:	ldrdeq	r7, [r1], -r0
   17a38:	ldrdeq	r7, [r1], -r0
   17a3c:	andeq	r7, r1, r8, asr sl
   17a40:	andeq	r7, r1, r0, asr sl
   17a44:	mov	r8, fp
   17a48:	ldrb	r4, [r3, #1]!
   17a4c:	b	179b0 <lchmod@@Base+0x324>
   17a50:	orr	r1, r1, #73	; 0x49
   17a54:	b	17a48 <lchmod@@Base+0x3bc>
   17a58:	orr	r1, r1, #146	; 0x92
   17a5c:	b	17a48 <lchmod@@Base+0x3bc>
   17a60:	orr	r1, r1, #512	; 0x200
   17a64:	b	17a48 <lchmod@@Base+0x3bc>
   17a68:	orr	r1, r1, #3072	; 0xc00
   17a6c:	b	17a48 <lchmod@@Base+0x3bc>
   17a70:	orr	r1, r1, #292	; 0x124
   17a74:	b	17a48 <lchmod@@Base+0x3bc>
   17a78:	ldrb	r4, [r3, #2]
   17a7c:	mov	r8, r9
   17a80:	add	r3, r3, #2
   17a84:	mov	r1, #7
   17a88:	b	178d0 <lchmod@@Base+0x244>
   17a8c:	ldr	lr, [pc, #144]	; 17b24 <lchmod@@Base+0x498>
   17a90:	b	17808 <lchmod@@Base+0x17c>
   17a94:	orr	lr, lr, #516	; 0x204
   17a98:	orr	lr, lr, #3
   17a9c:	b	17808 <lchmod@@Base+0x17c>
   17aa0:	orr	lr, lr, #1072	; 0x430
   17aa4:	orr	lr, lr, #8
   17aa8:	b	17808 <lchmod@@Base+0x17c>
   17aac:	cmp	r2, #0
   17ab0:	bne	1787c <lchmod@@Base+0x1f0>
   17ab4:	sub	r3, r3, r4
   17ab8:	cmp	r3, #4
   17abc:	andle	r4, r5, #3072	; 0xc00
   17ac0:	mov	r0, #32
   17ac4:	mvnle	r4, r4, lsr #10
   17ac8:	ldrgt	r4, [pc, #84]	; 17b24 <lchmod@@Base+0x498>
   17acc:	mvnle	r4, r4, lsl #10
   17ad0:	bl	1cacc <lchmod@@Base+0x5440>
   17ad4:	ldr	r2, [pc, #72]	; 17b24 <lchmod@@Base+0x498>
   17ad8:	mov	ip, #61	; 0x3d
   17adc:	mov	r1, #1
   17ae0:	mov	r3, #0
   17ae4:	str	r5, [r0, #8]
   17ae8:	str	r4, [r0, #12]
   17aec:	strb	ip, [r0]
   17af0:	strb	r1, [r0, #1]
   17af4:	str	r2, [r0, #4]
   17af8:	strb	r3, [r0, #17]
   17afc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b00:	cmp	ip, #44	; 0x2c
   17b04:	addeq	r4, r3, #1
   17b08:	moveq	r2, r7
   17b0c:	beq	17804 <lchmod@@Base+0x178>
   17b10:	cmp	ip, #0
   17b14:	bne	17838 <lchmod@@Base+0x1ac>
   17b18:	add	r7, r0, r7, lsl #4
   17b1c:	strb	ip, [r7, #1]
   17b20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b24:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17b28:	push	{r4, r5, lr}
   17b2c:	sub	sp, sp, #108	; 0x6c
   17b30:	mov	r1, r0
   17b34:	mov	r2, sp
   17b38:	mov	r0, #3
   17b3c:	bl	11854 <__xstat64@plt>
   17b40:	subs	r4, r0, #0
   17b44:	movne	r0, #0
   17b48:	bne	17b7c <lchmod@@Base+0x4f0>
   17b4c:	mov	r0, #32
   17b50:	ldr	r5, [sp, #16]
   17b54:	bl	1cacc <lchmod@@Base+0x5440>
   17b58:	ldr	r3, [pc, #36]	; 17b84 <lchmod@@Base+0x4f8>
   17b5c:	mov	r1, #61	; 0x3d
   17b60:	mov	r2, #1
   17b64:	str	r5, [r0, #8]
   17b68:	strb	r4, [r0, #17]
   17b6c:	strb	r1, [r0]
   17b70:	strb	r2, [r0, #1]
   17b74:	str	r3, [r0, #4]
   17b78:	str	r3, [r0, #12]
   17b7c:	add	sp, sp, #108	; 0x6c
   17b80:	pop	{r4, r5, pc}
   17b84:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b8c:	ldrb	r4, [r3, #1]
   17b90:	ldr	r7, [pc, #292]	; 17cbc <lchmod@@Base+0x630>
   17b94:	ldr	r9, [sp, #36]	; 0x24
   17b98:	cmp	r4, #0
   17b9c:	and	r0, r0, r7
   17ba0:	beq	17cb4 <lchmod@@Base+0x628>
   17ba4:	cmp	r1, #0
   17ba8:	ldr	r8, [pc, #272]	; 17cc0 <lchmod@@Base+0x634>
   17bac:	add	r3, r3, #16
   17bb0:	mvn	r2, r2
   17bb4:	movne	r6, #3072	; 0xc00
   17bb8:	moveq	r6, #0
   17bbc:	mov	r5, #0
   17bc0:	b	17c48 <lchmod@@Base+0x5bc>
   17bc4:	cmp	r4, #3
   17bc8:	bne	17c04 <lchmod@@Base+0x578>
   17bcc:	and	r4, ip, r0
   17bd0:	and	ip, r4, #292	; 0x124
   17bd4:	cmp	ip, #0
   17bd8:	moveq	ip, #146	; 0x92
   17bdc:	movne	ip, r8
   17be0:	moveq	fp, #0
   17be4:	movne	fp, #292	; 0x124
   17be8:	tst	r4, #146	; 0x92
   17bec:	movne	fp, ip
   17bf0:	tst	r4, #73	; 0x49
   17bf4:	moveq	ip, #0
   17bf8:	movne	ip, #73	; 0x49
   17bfc:	orr	ip, ip, fp
   17c00:	orr	ip, ip, r4
   17c04:	ldrb	r4, [r3, #-16]
   17c08:	cmp	lr, #0
   17c0c:	movne	fp, lr
   17c10:	moveq	fp, r2
   17c14:	bic	ip, ip, sl
   17c18:	cmp	r4, #45	; 0x2d
   17c1c:	and	ip, ip, fp
   17c20:	beq	17ca8 <lchmod@@Base+0x61c>
   17c24:	cmp	r4, #61	; 0x3d
   17c28:	beq	17c70 <lchmod@@Base+0x5e4>
   17c2c:	cmp	r4, #43	; 0x2b
   17c30:	orreq	r5, r5, ip
   17c34:	orreq	r0, r0, ip
   17c38:	add	r3, r3, #16
   17c3c:	ldrb	r4, [r3, #-15]
   17c40:	cmp	r4, #0
   17c44:	beq	17c9c <lchmod@@Base+0x610>
   17c48:	ldr	lr, [r3, #-4]
   17c4c:	cmp	r4, #2
   17c50:	bic	sl, r6, lr
   17c54:	ldr	ip, [r3, #-8]
   17c58:	ldr	lr, [r3, #-12]
   17c5c:	bne	17bc4 <lchmod@@Base+0x538>
   17c60:	and	r4, r0, #73	; 0x49
   17c64:	orrs	r4, r4, r1
   17c68:	orrne	ip, ip, #73	; 0x49
   17c6c:	b	17c04 <lchmod@@Base+0x578>
   17c70:	add	r3, r3, #16
   17c74:	cmp	lr, #0
   17c78:	ldrb	r4, [r3, #-15]
   17c7c:	mvnne	lr, lr
   17c80:	orr	lr, lr, sl
   17c84:	and	r0, r0, lr
   17c88:	cmp	r4, #0
   17c8c:	bic	lr, r7, lr
   17c90:	orr	r0, ip, r0
   17c94:	orr	r5, r5, lr
   17c98:	bne	17c48 <lchmod@@Base+0x5bc>
   17c9c:	cmp	r9, #0
   17ca0:	strne	r5, [r9]
   17ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ca8:	orr	r5, r5, ip
   17cac:	bic	r0, r0, ip
   17cb0:	b	17c38 <lchmod@@Base+0x5ac>
   17cb4:	mov	r5, r4
   17cb8:	b	17c9c <lchmod@@Base+0x610>
   17cbc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17cc0:			; <UNDEFINED> instruction: 0x000001b6
   17cc4:	push	{r2, r3}
   17cc8:	push	{lr}		; (str lr, [sp, #-4]!)
   17ccc:	sub	sp, sp, #12
   17cd0:	ldr	r2, [sp, #16]
   17cd4:	ands	r3, r2, #64	; 0x40
   17cd8:	addne	r3, sp, #20
   17cdc:	strne	r3, [sp, #4]
   17ce0:	ldrne	r3, [sp, #20]
   17ce4:	bl	11704 <openat64@plt>
   17ce8:	bl	1c054 <lchmod@@Base+0x49c8>
   17cec:	add	sp, sp, #12
   17cf0:	pop	{lr}		; (ldr lr, [sp], #4)
   17cf4:	add	sp, sp, #8
   17cf8:	bx	lr
   17cfc:	orr	r2, r2, #540672	; 0x84000
   17d00:	push	{r4, r5, r6, lr}
   17d04:	orr	r2, r2, #2304	; 0x900
   17d08:	mov	r6, r3
   17d0c:	bl	17cc4 <lchmod@@Base+0x638>
   17d10:	subs	r5, r0, #0
   17d14:	blt	17d48 <lchmod@@Base+0x6bc>
   17d18:	bl	117d0 <fdopendir@plt>
   17d1c:	subs	r4, r0, #0
   17d20:	beq	17d30 <lchmod@@Base+0x6a4>
   17d24:	str	r5, [r6]
   17d28:	mov	r0, r4
   17d2c:	pop	{r4, r5, r6, pc}
   17d30:	bl	1171c <__errno_location@plt>
   17d34:	mov	r6, r0
   17d38:	mov	r0, r5
   17d3c:	ldr	r5, [r6]
   17d40:	bl	11884 <close@plt>
   17d44:	b	17d24 <lchmod@@Base+0x698>
   17d48:	mov	r4, #0
   17d4c:	b	17d28 <lchmod@@Base+0x69c>
   17d50:	push	{r4, r5, r6, lr}
   17d54:	subs	r4, r0, #0
   17d58:	beq	17dcc <lchmod@@Base+0x740>
   17d5c:	mov	r1, #47	; 0x2f
   17d60:	bl	117ac <strrchr@plt>
   17d64:	subs	r5, r0, #0
   17d68:	beq	17db8 <lchmod@@Base+0x72c>
   17d6c:	add	r6, r5, #1
   17d70:	sub	r3, r6, r4
   17d74:	cmp	r3, #6
   17d78:	ble	17db8 <lchmod@@Base+0x72c>
   17d7c:	mov	r2, #7
   17d80:	ldr	r1, [pc, #96]	; 17de8 <lchmod@@Base+0x75c>
   17d84:	sub	r0, r5, #6
   17d88:	bl	1186c <strncmp@plt>
   17d8c:	cmp	r0, #0
   17d90:	bne	17db8 <lchmod@@Base+0x72c>
   17d94:	mov	r2, #3
   17d98:	ldr	r1, [pc, #76]	; 17dec <lchmod@@Base+0x760>
   17d9c:	mov	r0, r6
   17da0:	bl	1186c <strncmp@plt>
   17da4:	cmp	r0, #0
   17da8:	movne	r4, r6
   17dac:	ldreq	r3, [pc, #60]	; 17df0 <lchmod@@Base+0x764>
   17db0:	addeq	r4, r5, #4
   17db4:	streq	r4, [r3]
   17db8:	ldr	r2, [pc, #52]	; 17df4 <lchmod@@Base+0x768>
   17dbc:	ldr	r3, [pc, #52]	; 17df8 <lchmod@@Base+0x76c>
   17dc0:	str	r4, [r2]
   17dc4:	str	r4, [r3]
   17dc8:	pop	{r4, r5, r6, pc}
   17dcc:	ldr	r3, [pc, #40]	; 17dfc <lchmod@@Base+0x770>
   17dd0:	mov	r2, #55	; 0x37
   17dd4:	mov	r1, #1
   17dd8:	ldr	r3, [r3]
   17ddc:	ldr	r0, [pc, #28]	; 17e00 <lchmod@@Base+0x774>
   17de0:	bl	115f0 <fwrite@plt>
   17de4:	bl	11878 <abort@plt>
   17de8:	muleq	r1, r4, r8
   17dec:	muleq	r1, ip, r8
   17df0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   17df4:	strdeq	r0, [r3], -r8
   17df8:	ldrdeq	r0, [r3], -r4
   17dfc:	andeq	r0, r3, r0, ror #3
   17e00:	andeq	pc, r1, ip, asr r8	; <UNPREDICTABLE>
   17e04:	push	{r4, r5, r6, lr}
   17e08:	mov	r4, r0
   17e0c:	mov	r5, r1
   17e10:	bl	1e674 <lchmod@@Base+0x6fe8>
   17e14:	ldrb	r3, [r0]
   17e18:	bic	r3, r3, #32
   17e1c:	cmp	r3, #85	; 0x55
   17e20:	bne	17e80 <lchmod@@Base+0x7f4>
   17e24:	ldrb	r3, [r0, #1]
   17e28:	bic	r3, r3, #32
   17e2c:	cmp	r3, #84	; 0x54
   17e30:	bne	17ebc <lchmod@@Base+0x830>
   17e34:	ldrb	r3, [r0, #2]
   17e38:	bic	r3, r3, #32
   17e3c:	cmp	r3, #70	; 0x46
   17e40:	bne	17ebc <lchmod@@Base+0x830>
   17e44:	ldrb	r3, [r0, #3]
   17e48:	cmp	r3, #45	; 0x2d
   17e4c:	bne	17ebc <lchmod@@Base+0x830>
   17e50:	ldrb	r3, [r0, #4]
   17e54:	cmp	r3, #56	; 0x38
   17e58:	bne	17ebc <lchmod@@Base+0x830>
   17e5c:	ldrb	r3, [r0, #5]
   17e60:	cmp	r3, #0
   17e64:	bne	17ebc <lchmod@@Base+0x830>
   17e68:	ldrb	r2, [r4]
   17e6c:	ldr	r3, [pc, #152]	; 17f0c <lchmod@@Base+0x880>
   17e70:	ldr	r0, [pc, #152]	; 17f10 <lchmod@@Base+0x884>
   17e74:	cmp	r2, #96	; 0x60
   17e78:	movne	r0, r3
   17e7c:	pop	{r4, r5, r6, pc}
   17e80:	cmp	r3, #71	; 0x47
   17e84:	bne	17ebc <lchmod@@Base+0x830>
   17e88:	ldrb	r3, [r0, #1]
   17e8c:	bic	r3, r3, #32
   17e90:	cmp	r3, #66	; 0x42
   17e94:	bne	17ebc <lchmod@@Base+0x830>
   17e98:	ldrb	r3, [r0, #2]
   17e9c:	cmp	r3, #49	; 0x31
   17ea0:	bne	17ebc <lchmod@@Base+0x830>
   17ea4:	ldrb	r3, [r0, #3]
   17ea8:	cmp	r3, #56	; 0x38
   17eac:	bne	17ebc <lchmod@@Base+0x830>
   17eb0:	ldrb	r3, [r0, #4]
   17eb4:	cmp	r3, #48	; 0x30
   17eb8:	beq	17ed0 <lchmod@@Base+0x844>
   17ebc:	ldr	r3, [pc, #80]	; 17f14 <lchmod@@Base+0x888>
   17ec0:	cmp	r5, #9
   17ec4:	ldr	r0, [pc, #76]	; 17f18 <lchmod@@Base+0x88c>
   17ec8:	movne	r0, r3
   17ecc:	pop	{r4, r5, r6, pc}
   17ed0:	ldrb	r3, [r0, #5]
   17ed4:	cmp	r3, #51	; 0x33
   17ed8:	bne	17ebc <lchmod@@Base+0x830>
   17edc:	ldrb	r3, [r0, #6]
   17ee0:	cmp	r3, #48	; 0x30
   17ee4:	bne	17ebc <lchmod@@Base+0x830>
   17ee8:	ldrb	r3, [r0, #7]
   17eec:	cmp	r3, #0
   17ef0:	bne	17ebc <lchmod@@Base+0x830>
   17ef4:	ldrb	r2, [r4]
   17ef8:	ldr	r3, [pc, #28]	; 17f1c <lchmod@@Base+0x890>
   17efc:	ldr	r0, [pc, #28]	; 17f20 <lchmod@@Base+0x894>
   17f00:	cmp	r2, #96	; 0x60
   17f04:	movne	r0, r3
   17f08:	pop	{r4, r5, r6, pc}
   17f0c:	strdeq	pc, [r1], -r8
   17f10:	strdeq	pc, [r1], -r4
   17f14:	andeq	pc, r1, r8, lsl #18
   17f18:	andeq	pc, r1, r4, lsl #18
   17f1c:	andeq	pc, r1, r0, lsl #18
   17f20:	strdeq	pc, [r1], -ip
   17f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f28:	sub	sp, sp, #140	; 0x8c
   17f2c:	mov	r9, r1
   17f30:	str	r3, [sp, #24]
   17f34:	mov	r3, #1
   17f38:	mov	sl, r0
   17f3c:	str	r2, [sp, #44]	; 0x2c
   17f40:	str	r3, [sp, #28]
   17f44:	bl	11608 <__ctype_get_mb_cur_max@plt>
   17f48:	ldr	r3, [sp, #180]	; 0xb4
   17f4c:	mov	fp, r9
   17f50:	mov	r9, sl
   17f54:	lsr	r3, r3, #1
   17f58:	and	r3, r3, #1
   17f5c:	str	r3, [sp, #40]	; 0x28
   17f60:	ldr	r3, [sp, #180]	; 0xb4
   17f64:	mov	r2, #0
   17f68:	and	r3, r3, #4
   17f6c:	str	r3, [sp, #100]	; 0x64
   17f70:	ldr	r3, [sp, #180]	; 0xb4
   17f74:	str	r2, [sp, #76]	; 0x4c
   17f78:	and	r3, r3, #1
   17f7c:	str	r3, [sp, #96]	; 0x60
   17f80:	str	r2, [sp, #36]	; 0x24
   17f84:	str	r2, [sp, #56]	; 0x38
   17f88:	str	r2, [sp, #68]	; 0x44
   17f8c:	str	r2, [sp, #72]	; 0x48
   17f90:	str	r2, [sp, #84]	; 0x54
   17f94:	str	r0, [sp, #80]	; 0x50
   17f98:	ldr	r3, [sp, #176]	; 0xb0
   17f9c:	cmp	r3, #10
   17fa0:	ldrls	pc, [pc, r3, lsl #2]
   17fa4:	b	1917c <lchmod@@Base+0x1af0>
   17fa8:	ldrdeq	r7, [r1], -r4
   17fac:	strdeq	r8, [r1], -r4
   17fb0:	andeq	r8, r1, ip, asr #8
   17fb4:	andeq	r8, r1, r8, lsr #6
   17fb8:	andeq	r8, r1, r0, lsr #9
   17fbc:	andeq	r8, r1, r0, lsl #9
   17fc0:	andeq	r8, r1, r8, asr #6
   17fc4:	andeq	r8, r1, ip, ror #6
   17fc8:	muleq	r1, r4, r3
   17fcc:	muleq	r1, r4, r3
   17fd0:	muleq	r1, r4, r3
   17fd4:	mov	r3, #0
   17fd8:	ldr	r1, [sp, #56]	; 0x38
   17fdc:	ldr	r2, [sp, #176]	; 0xb0
   17fe0:	ldr	lr, [sp, #176]	; 0xb0
   17fe4:	mov	r8, r3
   17fe8:	mov	ip, r3
   17fec:	str	r3, [sp, #40]	; 0x28
   17ff0:	mov	r3, r1
   17ff4:	cmp	r2, #2
   17ff8:	moveq	r3, #0
   17ffc:	andne	r3, r3, #1
   18000:	mov	r0, r3
   18004:	str	r3, [sp, #92]	; 0x5c
   18008:	ldr	r3, [sp, #68]	; 0x44
   1800c:	sub	lr, lr, #2
   18010:	adds	r2, r3, #0
   18014:	movne	r2, #1
   18018:	and	r3, r1, ip
   1801c:	and	r3, r2, r3
   18020:	clz	lr, lr
   18024:	str	r3, [sp, #88]	; 0x58
   18028:	lsr	lr, lr, #5
   1802c:	mov	r3, ip
   18030:	and	r3, r3, lr
   18034:	mov	sl, #0
   18038:	and	r0, r2, r0
   1803c:	str	r3, [sp, #64]	; 0x40
   18040:	eor	r3, r1, #1
   18044:	str	lr, [sp, #52]	; 0x34
   18048:	str	r0, [sp, #48]	; 0x30
   1804c:	str	r3, [sp, #60]	; 0x3c
   18050:	ldr	r3, [sp, #24]
   18054:	cmn	r3, #1
   18058:	beq	18588 <lchmod@@Base+0xefc>
   1805c:	subs	r7, r3, sl
   18060:	movne	r7, #1
   18064:	cmp	r7, #0
   18068:	beq	185a0 <lchmod@@Base+0xf14>
   1806c:	ldr	r3, [sp, #48]	; 0x30
   18070:	cmp	r3, #0
   18074:	beq	1890c <lchmod@@Base+0x1280>
   18078:	ldr	r2, [sp, #68]	; 0x44
   1807c:	ldr	r1, [sp, #24]
   18080:	cmp	r2, #1
   18084:	mov	r3, r2
   18088:	movls	r3, #0
   1808c:	movhi	r3, #1
   18090:	cmn	r1, #1
   18094:	movne	r3, #0
   18098:	cmp	r3, #0
   1809c:	add	r4, sl, r2
   180a0:	beq	180b0 <lchmod@@Base+0xa24>
   180a4:	ldr	r0, [sp, #44]	; 0x2c
   180a8:	bl	116e0 <strlen@plt>
   180ac:	str	r0, [sp, #24]
   180b0:	ldr	r3, [sp, #24]
   180b4:	cmp	r3, r4
   180b8:	ldr	r3, [sp, #44]	; 0x2c
   180bc:	add	r5, r3, sl
   180c0:	bcc	18914 <lchmod@@Base+0x1288>
   180c4:	mov	r0, r5
   180c8:	ldr	r2, [sp, #68]	; 0x44
   180cc:	ldr	r1, [sp, #72]	; 0x48
   180d0:	bl	11560 <memcmp@plt>
   180d4:	cmp	r0, #0
   180d8:	bne	18914 <lchmod@@Base+0x1288>
   180dc:	ldr	r3, [sp, #40]	; 0x28
   180e0:	cmp	r3, #0
   180e4:	bne	192d0 <lchmod@@Base+0x1c44>
   180e8:	ldrb	r4, [r5]
   180ec:	cmp	r4, #126	; 0x7e
   180f0:	ldrls	pc, [pc, r4, lsl #2]
   180f4:	b	1920c <lchmod@@Base+0x1b80>
   180f8:	andeq	r8, r1, ip, asr #15
   180fc:	andeq	r9, r1, ip, lsl #4
   18100:	andeq	r9, r1, ip, lsl #4
   18104:	andeq	r9, r1, ip, lsl #4
   18108:	andeq	r9, r1, ip, lsl #4
   1810c:	andeq	r9, r1, ip, lsl #4
   18110:	andeq	r9, r1, ip, lsl #4
   18114:			; <UNDEFINED> instruction: 0x000187b8
   18118:	andeq	r8, r1, r4, lsr #15
   1811c:	andeq	r8, r1, r0, lsl #15
   18120:	andeq	r8, r1, r0, ror #14
   18124:	muleq	r1, r0, r7
   18128:	andeq	r8, r1, r8, asr #13
   1812c:	strdeq	r8, [r1], -ip
   18130:	andeq	r9, r1, ip, lsl #4
   18134:	andeq	r9, r1, ip, lsl #4
   18138:	andeq	r9, r1, ip, lsl #4
   1813c:	andeq	r9, r1, ip, lsl #4
   18140:	andeq	r9, r1, ip, lsl #4
   18144:	andeq	r9, r1, ip, lsl #4
   18148:	andeq	r9, r1, ip, lsl #4
   1814c:	andeq	r9, r1, ip, lsl #4
   18150:	andeq	r9, r1, ip, lsl #4
   18154:	andeq	r9, r1, ip, lsl #4
   18158:	andeq	r9, r1, ip, lsl #4
   1815c:	andeq	r9, r1, ip, lsl #4
   18160:	andeq	r9, r1, ip, lsl #4
   18164:	andeq	r9, r1, ip, lsl #4
   18168:	andeq	r9, r1, ip, lsl #4
   1816c:	andeq	r9, r1, ip, lsl #4
   18170:	andeq	r9, r1, ip, lsl #4
   18174:	andeq	r9, r1, ip, lsl #4
   18178:	andeq	r8, r1, ip, ror #17
   1817c:	andeq	r8, r1, ip, asr #17
   18180:	andeq	r8, r1, ip, asr #17
   18184:	andeq	r8, r1, ip, lsr #17
   18188:	andeq	r8, r1, ip, asr #17
   1818c:			; <UNDEFINED> instruction: 0x000186b8
   18190:	andeq	r8, r1, ip, asr #17
   18194:	muleq	r1, r4, r6
   18198:	andeq	r8, r1, ip, asr #17
   1819c:	andeq	r8, r1, ip, asr #17
   181a0:	andeq	r8, r1, ip, asr #17
   181a4:			; <UNDEFINED> instruction: 0x000186b8
   181a8:			; <UNDEFINED> instruction: 0x000186b8
   181ac:			; <UNDEFINED> instruction: 0x000186b8
   181b0:			; <UNDEFINED> instruction: 0x000186b8
   181b4:			; <UNDEFINED> instruction: 0x000186b8
   181b8:			; <UNDEFINED> instruction: 0x000186b8
   181bc:			; <UNDEFINED> instruction: 0x000186b8
   181c0:			; <UNDEFINED> instruction: 0x000186b8
   181c4:			; <UNDEFINED> instruction: 0x000186b8
   181c8:			; <UNDEFINED> instruction: 0x000186b8
   181cc:			; <UNDEFINED> instruction: 0x000186b8
   181d0:			; <UNDEFINED> instruction: 0x000186b8
   181d4:			; <UNDEFINED> instruction: 0x000186b8
   181d8:			; <UNDEFINED> instruction: 0x000186b8
   181dc:			; <UNDEFINED> instruction: 0x000186b8
   181e0:			; <UNDEFINED> instruction: 0x000186b8
   181e4:	andeq	r8, r1, ip, asr #17
   181e8:	andeq	r8, r1, ip, asr #17
   181ec:	andeq	r8, r1, ip, asr #17
   181f0:	andeq	r8, r1, ip, asr #17
   181f4:	andeq	r8, r1, r4, asr #12
   181f8:	andeq	r9, r1, ip, lsl #4
   181fc:			; <UNDEFINED> instruction: 0x000186b8
   18200:			; <UNDEFINED> instruction: 0x000186b8
   18204:			; <UNDEFINED> instruction: 0x000186b8
   18208:			; <UNDEFINED> instruction: 0x000186b8
   1820c:			; <UNDEFINED> instruction: 0x000186b8
   18210:			; <UNDEFINED> instruction: 0x000186b8
   18214:			; <UNDEFINED> instruction: 0x000186b8
   18218:			; <UNDEFINED> instruction: 0x000186b8
   1821c:			; <UNDEFINED> instruction: 0x000186b8
   18220:			; <UNDEFINED> instruction: 0x000186b8
   18224:			; <UNDEFINED> instruction: 0x000186b8
   18228:			; <UNDEFINED> instruction: 0x000186b8
   1822c:			; <UNDEFINED> instruction: 0x000186b8
   18230:			; <UNDEFINED> instruction: 0x000186b8
   18234:			; <UNDEFINED> instruction: 0x000186b8
   18238:			; <UNDEFINED> instruction: 0x000186b8
   1823c:			; <UNDEFINED> instruction: 0x000186b8
   18240:			; <UNDEFINED> instruction: 0x000186b8
   18244:			; <UNDEFINED> instruction: 0x000186b8
   18248:			; <UNDEFINED> instruction: 0x000186b8
   1824c:			; <UNDEFINED> instruction: 0x000186b8
   18250:			; <UNDEFINED> instruction: 0x000186b8
   18254:			; <UNDEFINED> instruction: 0x000186b8
   18258:			; <UNDEFINED> instruction: 0x000186b8
   1825c:			; <UNDEFINED> instruction: 0x000186b8
   18260:			; <UNDEFINED> instruction: 0x000186b8
   18264:	andeq	r8, r1, ip, asr #17
   18268:	andeq	r8, r1, r0, lsl r6
   1826c:			; <UNDEFINED> instruction: 0x000186b8
   18270:	andeq	r8, r1, ip, asr #17
   18274:			; <UNDEFINED> instruction: 0x000186b8
   18278:	andeq	r8, r1, ip, asr #17
   1827c:			; <UNDEFINED> instruction: 0x000186b8
   18280:			; <UNDEFINED> instruction: 0x000186b8
   18284:			; <UNDEFINED> instruction: 0x000186b8
   18288:			; <UNDEFINED> instruction: 0x000186b8
   1828c:			; <UNDEFINED> instruction: 0x000186b8
   18290:			; <UNDEFINED> instruction: 0x000186b8
   18294:			; <UNDEFINED> instruction: 0x000186b8
   18298:			; <UNDEFINED> instruction: 0x000186b8
   1829c:			; <UNDEFINED> instruction: 0x000186b8
   182a0:			; <UNDEFINED> instruction: 0x000186b8
   182a4:			; <UNDEFINED> instruction: 0x000186b8
   182a8:			; <UNDEFINED> instruction: 0x000186b8
   182ac:			; <UNDEFINED> instruction: 0x000186b8
   182b0:			; <UNDEFINED> instruction: 0x000186b8
   182b4:			; <UNDEFINED> instruction: 0x000186b8
   182b8:			; <UNDEFINED> instruction: 0x000186b8
   182bc:			; <UNDEFINED> instruction: 0x000186b8
   182c0:			; <UNDEFINED> instruction: 0x000186b8
   182c4:			; <UNDEFINED> instruction: 0x000186b8
   182c8:			; <UNDEFINED> instruction: 0x000186b8
   182cc:			; <UNDEFINED> instruction: 0x000186b8
   182d0:			; <UNDEFINED> instruction: 0x000186b8
   182d4:			; <UNDEFINED> instruction: 0x000186b8
   182d8:			; <UNDEFINED> instruction: 0x000186b8
   182dc:			; <UNDEFINED> instruction: 0x000186b8
   182e0:			; <UNDEFINED> instruction: 0x000186b8
   182e4:	andeq	r8, r1, r8, asr #9
   182e8:	andeq	r8, r1, ip, asr #17
   182ec:	andeq	r8, r1, r8, asr #9
   182f0:	andeq	r8, r1, ip, lsr #17
   182f4:	mov	r3, #1
   182f8:	str	r3, [sp, #40]	; 0x28
   182fc:	str	r3, [sp, #68]	; 0x44
   18300:	mov	r8, #0
   18304:	ldr	r3, [pc, #4056]	; 192e4 <lchmod@@Base+0x1c58>
   18308:	str	r3, [sp, #72]	; 0x48
   1830c:	mov	r3, #2
   18310:	str	r3, [sp, #176]	; 0xb0
   18314:	ldr	r1, [sp, #56]	; 0x38
   18318:	mov	r2, r3
   1831c:	ldr	ip, [sp, #40]	; 0x28
   18320:	mov	lr, r3
   18324:	b	17ff0 <lchmod@@Base+0x964>
   18328:	mov	r3, #1
   1832c:	str	r3, [sp, #56]	; 0x38
   18330:	str	r3, [sp, #68]	; 0x44
   18334:	str	r3, [sp, #40]	; 0x28
   18338:	ldr	r3, [pc, #4004]	; 192e4 <lchmod@@Base+0x1c58>
   1833c:	mov	r8, #0
   18340:	str	r3, [sp, #72]	; 0x48
   18344:	b	1830c <lchmod@@Base+0xc80>
   18348:	mov	r3, #1
   1834c:	str	r3, [sp, #56]	; 0x38
   18350:	str	r3, [sp, #68]	; 0x44
   18354:	str	r3, [sp, #40]	; 0x28
   18358:	ldr	r3, [pc, #3976]	; 192e8 <lchmod@@Base+0x1c5c>
   1835c:	mov	r8, #0
   18360:	str	r3, [sp, #72]	; 0x48
   18364:	mov	r3, #5
   18368:	b	18310 <lchmod@@Base+0xc84>
   1836c:	mov	r3, #0
   18370:	str	r3, [sp, #40]	; 0x28
   18374:	mov	r3, #1
   18378:	str	r3, [sp, #56]	; 0x38
   1837c:	mov	r8, #0
   18380:	mov	r1, r3
   18384:	ldr	r2, [sp, #176]	; 0xb0
   18388:	ldr	ip, [sp, #40]	; 0x28
   1838c:	ldr	lr, [sp, #176]	; 0xb0
   18390:	b	17ff0 <lchmod@@Base+0x964>
   18394:	ldr	r3, [sp, #176]	; 0xb0
   18398:	cmp	r3, #10
   1839c:	beq	183e0 <lchmod@@Base+0xd54>
   183a0:	mov	r2, #5
   183a4:	ldr	r1, [pc, #3904]	; 192ec <lchmod@@Base+0x1c60>
   183a8:	mov	r0, #0
   183ac:	bl	11578 <dcgettext@plt>
   183b0:	ldr	r2, [pc, #3892]	; 192ec <lchmod@@Base+0x1c60>
   183b4:	cmp	r0, r2
   183b8:	str	r0, [sp, #188]	; 0xbc
   183bc:	beq	19478 <lchmod@@Base+0x1dec>
   183c0:	mov	r2, #5
   183c4:	ldr	r1, [pc, #3864]	; 192e4 <lchmod@@Base+0x1c58>
   183c8:	mov	r0, #0
   183cc:	bl	11578 <dcgettext@plt>
   183d0:	ldr	r2, [pc, #3852]	; 192e4 <lchmod@@Base+0x1c58>
   183d4:	cmp	r0, r2
   183d8:	str	r0, [sp, #192]	; 0xc0
   183dc:	beq	19468 <lchmod@@Base+0x1ddc>
   183e0:	ldr	r8, [sp, #40]	; 0x28
   183e4:	cmp	r8, #0
   183e8:	movne	r8, #0
   183ec:	bne	1841c <lchmod@@Base+0xd90>
   183f0:	ldr	r3, [sp, #188]	; 0xbc
   183f4:	ldrb	r3, [r3]
   183f8:	cmp	r3, #0
   183fc:	beq	1841c <lchmod@@Base+0xd90>
   18400:	ldr	r2, [sp, #188]	; 0xbc
   18404:	cmp	fp, r8
   18408:	strbhi	r3, [r9, r8]
   1840c:	ldrb	r3, [r2, #1]!
   18410:	add	r8, r8, #1
   18414:	cmp	r3, #0
   18418:	bne	18404 <lchmod@@Base+0xd78>
   1841c:	ldr	r0, [sp, #192]	; 0xc0
   18420:	bl	116e0 <strlen@plt>
   18424:	ldr	r3, [sp, #192]	; 0xc0
   18428:	ldr	r2, [sp, #176]	; 0xb0
   1842c:	str	r3, [sp, #72]	; 0x48
   18430:	mov	r3, #1
   18434:	str	r3, [sp, #56]	; 0x38
   18438:	mov	r1, r3
   1843c:	ldr	ip, [sp, #40]	; 0x28
   18440:	ldr	lr, [sp, #176]	; 0xb0
   18444:	str	r0, [sp, #68]	; 0x44
   18448:	b	17ff0 <lchmod@@Base+0x964>
   1844c:	ldr	r3, [sp, #40]	; 0x28
   18450:	cmp	r3, #0
   18454:	beq	190fc <lchmod@@Base+0x1a70>
   18458:	mov	r3, #1
   1845c:	str	r3, [sp, #68]	; 0x44
   18460:	ldr	r3, [pc, #3708]	; 192e4 <lchmod@@Base+0x1c58>
   18464:	str	r3, [sp, #72]	; 0x48
   18468:	mov	r8, #0
   1846c:	ldr	r1, [sp, #56]	; 0x38
   18470:	ldr	r2, [sp, #176]	; 0xb0
   18474:	ldr	ip, [sp, #40]	; 0x28
   18478:	ldr	lr, [sp, #176]	; 0xb0
   1847c:	b	17ff0 <lchmod@@Base+0x964>
   18480:	ldr	r3, [sp, #40]	; 0x28
   18484:	cmp	r3, #0
   18488:	beq	19180 <lchmod@@Base+0x1af4>
   1848c:	str	r3, [sp, #56]	; 0x38
   18490:	mov	r3, #1
   18494:	str	r3, [sp, #68]	; 0x44
   18498:	ldr	r3, [pc, #3656]	; 192e8 <lchmod@@Base+0x1c5c>
   1849c:	b	18464 <lchmod@@Base+0xdd8>
   184a0:	ldr	r3, [sp, #40]	; 0x28
   184a4:	cmp	r3, #0
   184a8:	mov	r3, #1
   184ac:	streq	r3, [sp, #56]	; 0x38
   184b0:	beq	190fc <lchmod@@Base+0x1a70>
   184b4:	str	r3, [sp, #68]	; 0x44
   184b8:	ldr	r3, [pc, #3620]	; 192e4 <lchmod@@Base+0x1c58>
   184bc:	mov	r8, #0
   184c0:	str	r3, [sp, #72]	; 0x48
   184c4:	b	1830c <lchmod@@Base+0xc80>
   184c8:	ldr	r3, [sp, #24]
   184cc:	ldr	r6, [sp, #48]	; 0x30
   184d0:	cmn	r3, #1
   184d4:	beq	18b30 <lchmod@@Base+0x14a4>
   184d8:	subs	r3, r3, #1
   184dc:	movne	r3, #1
   184e0:	cmp	r3, #0
   184e4:	beq	188b0 <lchmod@@Base+0x1224>
   184e8:	ldr	r1, [sp, #52]	; 0x34
   184ec:	mov	r7, r3
   184f0:	mov	r3, #0
   184f4:	str	r3, [sp, #32]
   184f8:	ldr	r3, [sp, #60]	; 0x3c
   184fc:	orr	r2, r1, r3
   18500:	ldr	r3, [sp, #40]	; 0x28
   18504:	eor	r2, r2, #1
   18508:	orr	r2, r3, r2
   1850c:	tst	r2, #255	; 0xff
   18510:	bne	18e34 <lchmod@@Base+0x17a8>
   18514:	cmp	r6, #0
   18518:	bne	186f4 <lchmod@@Base+0x1068>
   1851c:	ldr	r3, [sp, #36]	; 0x24
   18520:	add	sl, sl, #1
   18524:	and	r3, r3, r7
   18528:	uxtb	r6, r3
   1852c:	cmp	r6, #0
   18530:	beq	1855c <lchmod@@Base+0xed0>
   18534:	cmp	fp, r8
   18538:	movhi	r3, #39	; 0x27
   1853c:	strbhi	r3, [r9, r8]
   18540:	add	r3, r8, #1
   18544:	cmp	fp, r3
   18548:	movhi	r2, #39	; 0x27
   1854c:	add	r8, r8, #2
   18550:	strbhi	r2, [r9, r3]
   18554:	mov	r3, #0
   18558:	str	r3, [sp, #36]	; 0x24
   1855c:	ldr	r2, [sp, #32]
   18560:	cmp	r8, fp
   18564:	ldr	r3, [sp, #28]
   18568:	strbcc	r4, [r9, r8]
   1856c:	cmp	r2, #0
   18570:	moveq	r3, #0
   18574:	str	r3, [sp, #28]
   18578:	ldr	r3, [sp, #24]
   1857c:	add	r8, r8, #1
   18580:	cmn	r3, #1
   18584:	bne	1805c <lchmod@@Base+0x9d0>
   18588:	ldr	r3, [sp, #44]	; 0x2c
   1858c:	ldrb	r3, [r3, sl]
   18590:	adds	r7, r3, #0
   18594:	movne	r7, #1
   18598:	cmp	r7, #0
   1859c:	bne	1806c <lchmod@@Base+0x9e0>
   185a0:	ldr	r3, [sp, #64]	; 0x40
   185a4:	cmp	r8, #0
   185a8:	movne	r3, #0
   185ac:	andeq	r3, r3, #1
   185b0:	cmp	r3, #0
   185b4:	str	r3, [sp, #64]	; 0x40
   185b8:	bne	1905c <lchmod@@Base+0x19d0>
   185bc:	ldr	r3, [sp, #40]	; 0x28
   185c0:	ldr	r2, [sp, #52]	; 0x34
   185c4:	eor	r3, r3, #1
   185c8:	ands	r2, r2, r3
   185cc:	beq	19488 <lchmod@@Base+0x1dfc>
   185d0:	ldr	r3, [sp, #76]	; 0x4c
   185d4:	cmp	r3, #0
   185d8:	beq	19458 <lchmod@@Base+0x1dcc>
   185dc:	ldr	r3, [sp, #28]
   185e0:	cmp	r3, #0
   185e4:	bne	19414 <lchmod@@Base+0x1d88>
   185e8:	ldr	r2, [sp, #84]	; 0x54
   185ec:	clz	r3, fp
   185f0:	cmp	r2, #0
   185f4:	lsr	r3, r3, #5
   185f8:	moveq	r3, #0
   185fc:	cmp	r3, #0
   18600:	beq	193b4 <lchmod@@Base+0x1d28>
   18604:	mov	fp, r2
   18608:	str	r3, [sp, #76]	; 0x4c
   1860c:	b	17f98 <lchmod@@Base+0x90c>
   18610:	ldr	r3, [sp, #176]	; 0xb0
   18614:	ldr	r6, [sp, #48]	; 0x30
   18618:	cmp	r3, #2
   1861c:	beq	18b54 <lchmod@@Base+0x14c8>
   18620:	ldr	r3, [sp, #88]	; 0x58
   18624:	cmp	r3, #0
   18628:	beq	190d8 <lchmod@@Base+0x1a4c>
   1862c:	mov	r3, #0
   18630:	add	sl, sl, #1
   18634:	ldr	r6, [sp, #36]	; 0x24
   18638:	str	r3, [sp, #32]
   1863c:	mov	r4, #92	; 0x5c
   18640:	b	1852c <lchmod@@Base+0xea0>
   18644:	ldr	r3, [sp, #176]	; 0xb0
   18648:	ldr	r6, [sp, #48]	; 0x30
   1864c:	cmp	r3, #2
   18650:	beq	18b84 <lchmod@@Base+0x14f8>
   18654:	cmp	r3, #5
   18658:	bne	190e8 <lchmod@@Base+0x1a5c>
   1865c:	ldr	r3, [sp, #100]	; 0x64
   18660:	cmp	r3, #0
   18664:	beq	1914c <lchmod@@Base+0x1ac0>
   18668:	ldr	r2, [sp, #24]
   1866c:	add	r3, sl, #2
   18670:	cmp	r2, r3
   18674:	bls	18684 <lchmod@@Base+0xff8>
   18678:	ldrb	r4, [r5, #1]
   1867c:	cmp	r4, #63	; 0x3f
   18680:	beq	192f4 <lchmod@@Base+0x1c68>
   18684:	mov	r1, #0
   18688:	str	r1, [sp, #32]
   1868c:	mov	r4, #63	; 0x3f
   18690:	b	184f8 <lchmod@@Base+0xe6c>
   18694:	ldr	r3, [sp, #176]	; 0xb0
   18698:	ldr	r6, [sp, #48]	; 0x30
   1869c:	cmp	r3, #2
   186a0:	beq	18bb0 <lchmod@@Base+0x1524>
   186a4:	str	r7, [sp, #32]
   186a8:	str	r7, [sp, #76]	; 0x4c
   186ac:	mov	r1, #0
   186b0:	mov	r4, #39	; 0x27
   186b4:	b	184f8 <lchmod@@Base+0xe6c>
   186b8:	ldr	r6, [sp, #48]	; 0x30
   186bc:	ldr	r1, [sp, #52]	; 0x34
   186c0:	str	r7, [sp, #32]
   186c4:	b	184f8 <lchmod@@Base+0xe6c>
   186c8:	ldr	r6, [sp, #48]	; 0x30
   186cc:	ldr	r1, [sp, #52]	; 0x34
   186d0:	mov	r4, #12
   186d4:	mov	r3, #102	; 0x66
   186d8:	ldr	r2, [sp, #56]	; 0x38
   186dc:	cmp	r2, #0
   186e0:	streq	r2, [sp, #32]
   186e4:	beq	184f8 <lchmod@@Base+0xe6c>
   186e8:	mov	r4, r3
   186ec:	mov	r3, #0
   186f0:	str	r3, [sp, #32]
   186f4:	ldr	r3, [sp, #40]	; 0x28
   186f8:	cmp	r3, #0
   186fc:	bne	18e6c <lchmod@@Base+0x17e0>
   18700:	ldr	r3, [sp, #36]	; 0x24
   18704:	eor	r3, r3, #1
   18708:	and	r3, r3, r1
   1870c:	ands	r3, r3, #255	; 0xff
   18710:	beq	18748 <lchmod@@Base+0x10bc>
   18714:	cmp	fp, r8
   18718:	movhi	r2, #39	; 0x27
   1871c:	strbhi	r2, [r9, r8]
   18720:	add	r2, r8, #1
   18724:	cmp	fp, r2
   18728:	movhi	r1, #36	; 0x24
   1872c:	strbhi	r1, [r9, r2]
   18730:	add	r2, r8, #2
   18734:	cmp	fp, r2
   18738:	add	r8, r8, #3
   1873c:	movhi	r1, #39	; 0x27
   18740:	strbhi	r1, [r9, r2]
   18744:	str	r3, [sp, #36]	; 0x24
   18748:	cmp	fp, r8
   1874c:	movhi	r3, #92	; 0x5c
   18750:	strbhi	r3, [r9, r8]
   18754:	add	sl, sl, #1
   18758:	add	r8, r8, #1
   1875c:	b	1855c <lchmod@@Base+0xed0>
   18760:	ldr	r6, [sp, #48]	; 0x30
   18764:	mov	r4, #10
   18768:	mov	r3, #110	; 0x6e
   1876c:	ldr	r2, [sp, #64]	; 0x40
   18770:	cmp	r2, #0
   18774:	bne	191f4 <lchmod@@Base+0x1b68>
   18778:	ldr	r1, [sp, #52]	; 0x34
   1877c:	b	186d8 <lchmod@@Base+0x104c>
   18780:	ldr	r6, [sp, #48]	; 0x30
   18784:	ldr	r1, [sp, #52]	; 0x34
   18788:	mov	r3, #116	; 0x74
   1878c:	b	186d8 <lchmod@@Base+0x104c>
   18790:	ldr	r6, [sp, #48]	; 0x30
   18794:	ldr	r1, [sp, #52]	; 0x34
   18798:	mov	r4, #11
   1879c:	mov	r3, #118	; 0x76
   187a0:	b	186d8 <lchmod@@Base+0x104c>
   187a4:	ldr	r6, [sp, #48]	; 0x30
   187a8:	ldr	r1, [sp, #52]	; 0x34
   187ac:	mov	r4, #8
   187b0:	mov	r3, #98	; 0x62
   187b4:	b	186d8 <lchmod@@Base+0x104c>
   187b8:	ldr	r6, [sp, #48]	; 0x30
   187bc:	ldr	r1, [sp, #52]	; 0x34
   187c0:	mov	r4, #7
   187c4:	mov	r3, #97	; 0x61
   187c8:	b	186d8 <lchmod@@Base+0x104c>
   187cc:	ldr	r3, [sp, #56]	; 0x38
   187d0:	ldr	r6, [sp, #48]	; 0x30
   187d4:	cmp	r3, #0
   187d8:	beq	18c9c <lchmod@@Base+0x1610>
   187dc:	ldr	r3, [sp, #40]	; 0x28
   187e0:	cmp	r3, #0
   187e4:	bne	192d0 <lchmod@@Base+0x1c44>
   187e8:	ldr	r3, [sp, #36]	; 0x24
   187ec:	ldr	r2, [sp, #52]	; 0x34
   187f0:	eor	r3, r3, #1
   187f4:	ands	r3, r2, r3
   187f8:	moveq	r2, r8
   187fc:	beq	18834 <lchmod@@Base+0x11a8>
   18800:	cmp	fp, r8
   18804:	movhi	r2, #39	; 0x27
   18808:	strbhi	r2, [r9, r8]
   1880c:	add	r2, r8, #1
   18810:	cmp	fp, r2
   18814:	movhi	r1, #36	; 0x24
   18818:	strbhi	r1, [r9, r2]
   1881c:	add	r2, r8, #2
   18820:	cmp	fp, r2
   18824:	movhi	r1, #39	; 0x27
   18828:	strbhi	r1, [r9, r2]
   1882c:	add	r2, r8, #3
   18830:	str	r3, [sp, #36]	; 0x24
   18834:	cmp	fp, r2
   18838:	movhi	r3, #92	; 0x5c
   1883c:	strbhi	r3, [r9, r2]
   18840:	ldr	r3, [sp, #92]	; 0x5c
   18844:	add	r8, r2, #1
   18848:	cmp	r3, #0
   1884c:	beq	191d0 <lchmod@@Base+0x1b44>
   18850:	ldr	r1, [sp, #24]
   18854:	add	r3, sl, #1
   18858:	cmp	r1, r3
   1885c:	bls	18894 <lchmod@@Base+0x1208>
   18860:	ldr	r1, [sp, #44]	; 0x2c
   18864:	ldrb	r3, [r1, r3]
   18868:	sub	r3, r3, #48	; 0x30
   1886c:	cmp	r3, #9
   18870:	bhi	18894 <lchmod@@Base+0x1208>
   18874:	cmp	fp, r8
   18878:	movhi	r3, #48	; 0x30
   1887c:	strbhi	r3, [r9, r8]
   18880:	add	r3, r2, #2
   18884:	cmp	fp, r3
   18888:	add	r8, r2, #3
   1888c:	movhi	r1, #48	; 0x30
   18890:	strbhi	r1, [r9, r3]
   18894:	ldr	r3, [sp, #40]	; 0x28
   18898:	ldr	r1, [sp, #52]	; 0x34
   1889c:	mov	r7, r3
   188a0:	str	r3, [sp, #32]
   188a4:	mov	r4, #48	; 0x30
   188a8:	b	184f8 <lchmod@@Base+0xe6c>
   188ac:	ldr	r6, [sp, #48]	; 0x30
   188b0:	cmp	sl, #0
   188b4:	streq	r7, [sp, #32]
   188b8:	beq	188d8 <lchmod@@Base+0x124c>
   188bc:	mov	r3, #0
   188c0:	ldr	r1, [sp, #52]	; 0x34
   188c4:	str	r3, [sp, #32]
   188c8:	b	184f8 <lchmod@@Base+0xe6c>
   188cc:	ldr	r6, [sp, #48]	; 0x30
   188d0:	mov	r3, #0
   188d4:	str	r3, [sp, #32]
   188d8:	ldr	r3, [sp, #64]	; 0x40
   188dc:	cmp	r3, #0
   188e0:	bne	1905c <lchmod@@Base+0x19d0>
   188e4:	ldr	r1, [sp, #52]	; 0x34
   188e8:	b	184f8 <lchmod@@Base+0xe6c>
   188ec:	ldr	r3, [sp, #48]	; 0x30
   188f0:	mov	r6, r3
   188f4:	str	r3, [sp, #32]
   188f8:	b	188d8 <lchmod@@Base+0x124c>
   188fc:	ldr	r6, [sp, #48]	; 0x30
   18900:	mov	r4, #13
   18904:	mov	r3, #114	; 0x72
   18908:	b	1876c <lchmod@@Base+0x10e0>
   1890c:	ldr	r3, [sp, #44]	; 0x2c
   18910:	add	r5, r3, sl
   18914:	ldrb	r4, [r5]
   18918:	cmp	r4, #126	; 0x7e
   1891c:	ldrls	pc, [pc, r4, lsl #2]
   18920:	b	18cbc <lchmod@@Base+0x1630>
   18924:	andeq	r8, r1, ip, lsl #25
   18928:			; <UNDEFINED> instruction: 0x00018cbc
   1892c:			; <UNDEFINED> instruction: 0x00018cbc
   18930:			; <UNDEFINED> instruction: 0x00018cbc
   18934:			; <UNDEFINED> instruction: 0x00018cbc
   18938:			; <UNDEFINED> instruction: 0x00018cbc
   1893c:			; <UNDEFINED> instruction: 0x00018cbc
   18940:	andeq	r8, r1, r4, lsl #25
   18944:	andeq	r8, r1, ip, ror ip
   18948:	andeq	r8, r1, r0, ror ip
   1894c:	andeq	r8, r1, r8, ror #24
   18950:	andeq	r8, r1, r0, ror #24
   18954:	andeq	r8, r1, r8, asr ip
   18958:	andeq	r8, r1, r0, asr ip
   1895c:			; <UNDEFINED> instruction: 0x00018cbc
   18960:			; <UNDEFINED> instruction: 0x00018cbc
   18964:			; <UNDEFINED> instruction: 0x00018cbc
   18968:			; <UNDEFINED> instruction: 0x00018cbc
   1896c:			; <UNDEFINED> instruction: 0x00018cbc
   18970:			; <UNDEFINED> instruction: 0x00018cbc
   18974:			; <UNDEFINED> instruction: 0x00018cbc
   18978:			; <UNDEFINED> instruction: 0x00018cbc
   1897c:			; <UNDEFINED> instruction: 0x00018cbc
   18980:			; <UNDEFINED> instruction: 0x00018cbc
   18984:			; <UNDEFINED> instruction: 0x00018cbc
   18988:			; <UNDEFINED> instruction: 0x00018cbc
   1898c:			; <UNDEFINED> instruction: 0x00018cbc
   18990:			; <UNDEFINED> instruction: 0x00018cbc
   18994:			; <UNDEFINED> instruction: 0x00018cbc
   18998:			; <UNDEFINED> instruction: 0x00018cbc
   1899c:			; <UNDEFINED> instruction: 0x00018cbc
   189a0:			; <UNDEFINED> instruction: 0x00018cbc
   189a4:	andeq	r8, r1, r4, asr #24
   189a8:	andeq	r8, r1, ip, lsr ip
   189ac:	andeq	r8, r1, ip, lsr ip
   189b0:	andeq	r8, r1, r4, lsr ip
   189b4:	andeq	r8, r1, ip, lsr ip
   189b8:	andeq	r8, r1, ip, lsr #24
   189bc:	andeq	r8, r1, ip, lsr ip
   189c0:	andeq	r8, r1, r0, lsr #23
   189c4:	andeq	r8, r1, ip, lsr ip
   189c8:	andeq	r8, r1, ip, lsr ip
   189cc:	andeq	r8, r1, ip, lsr ip
   189d0:	andeq	r8, r1, ip, lsr #24
   189d4:	andeq	r8, r1, ip, lsr #24
   189d8:	andeq	r8, r1, ip, lsr #24
   189dc:	andeq	r8, r1, ip, lsr #24
   189e0:	andeq	r8, r1, ip, lsr #24
   189e4:	andeq	r8, r1, ip, lsr #24
   189e8:	andeq	r8, r1, ip, lsr #24
   189ec:	andeq	r8, r1, ip, lsr #24
   189f0:	andeq	r8, r1, ip, lsr #24
   189f4:	andeq	r8, r1, ip, lsr #24
   189f8:	andeq	r8, r1, ip, lsr #24
   189fc:	andeq	r8, r1, ip, lsr #24
   18a00:	andeq	r8, r1, ip, lsr #24
   18a04:	andeq	r8, r1, ip, lsr #24
   18a08:	andeq	r8, r1, ip, lsr #24
   18a0c:	andeq	r8, r1, ip, lsr #24
   18a10:	andeq	r8, r1, ip, lsr ip
   18a14:	andeq	r8, r1, ip, lsr ip
   18a18:	andeq	r8, r1, ip, lsr ip
   18a1c:	andeq	r8, r1, ip, lsr ip
   18a20:	andeq	r8, r1, r4, ror fp
   18a24:			; <UNDEFINED> instruction: 0x00018cbc
   18a28:	andeq	r8, r1, ip, lsr #24
   18a2c:	andeq	r8, r1, ip, lsr #24
   18a30:	andeq	r8, r1, ip, lsr #24
   18a34:	andeq	r8, r1, ip, lsr #24
   18a38:	andeq	r8, r1, ip, lsr #24
   18a3c:	andeq	r8, r1, ip, lsr #24
   18a40:	andeq	r8, r1, ip, lsr #24
   18a44:	andeq	r8, r1, ip, lsr #24
   18a48:	andeq	r8, r1, ip, lsr #24
   18a4c:	andeq	r8, r1, ip, lsr #24
   18a50:	andeq	r8, r1, ip, lsr #24
   18a54:	andeq	r8, r1, ip, lsr #24
   18a58:	andeq	r8, r1, ip, lsr #24
   18a5c:	andeq	r8, r1, ip, lsr #24
   18a60:	andeq	r8, r1, ip, lsr #24
   18a64:	andeq	r8, r1, ip, lsr #24
   18a68:	andeq	r8, r1, ip, lsr #24
   18a6c:	andeq	r8, r1, ip, lsr #24
   18a70:	andeq	r8, r1, ip, lsr #24
   18a74:	andeq	r8, r1, ip, lsr #24
   18a78:	andeq	r8, r1, ip, lsr #24
   18a7c:	andeq	r8, r1, ip, lsr #24
   18a80:	andeq	r8, r1, ip, lsr #24
   18a84:	andeq	r8, r1, ip, lsr #24
   18a88:	andeq	r8, r1, ip, lsr #24
   18a8c:	andeq	r8, r1, ip, lsr #24
   18a90:	andeq	r8, r1, ip, lsr ip
   18a94:	andeq	r8, r1, r4, asr #22
   18a98:	andeq	r8, r1, ip, lsr #24
   18a9c:	andeq	r8, r1, ip, lsr ip
   18aa0:	andeq	r8, r1, ip, lsr #24
   18aa4:	andeq	r8, r1, ip, lsr ip
   18aa8:	andeq	r8, r1, ip, lsr #24
   18aac:	andeq	r8, r1, ip, lsr #24
   18ab0:	andeq	r8, r1, ip, lsr #24
   18ab4:	andeq	r8, r1, ip, lsr #24
   18ab8:	andeq	r8, r1, ip, lsr #24
   18abc:	andeq	r8, r1, ip, lsr #24
   18ac0:	andeq	r8, r1, ip, lsr #24
   18ac4:	andeq	r8, r1, ip, lsr #24
   18ac8:	andeq	r8, r1, ip, lsr #24
   18acc:	andeq	r8, r1, ip, lsr #24
   18ad0:	andeq	r8, r1, ip, lsr #24
   18ad4:	andeq	r8, r1, ip, lsr #24
   18ad8:	andeq	r8, r1, ip, lsr #24
   18adc:	andeq	r8, r1, ip, lsr #24
   18ae0:	andeq	r8, r1, ip, lsr #24
   18ae4:	andeq	r8, r1, ip, lsr #24
   18ae8:	andeq	r8, r1, ip, lsr #24
   18aec:	andeq	r8, r1, ip, lsr #24
   18af0:	andeq	r8, r1, ip, lsr #24
   18af4:	andeq	r8, r1, ip, lsr #24
   18af8:	andeq	r8, r1, ip, lsr #24
   18afc:	andeq	r8, r1, ip, lsr #24
   18b00:	andeq	r8, r1, ip, lsr #24
   18b04:	andeq	r8, r1, ip, lsr #24
   18b08:	andeq	r8, r1, ip, lsr #24
   18b0c:	andeq	r8, r1, ip, lsr #24
   18b10:	andeq	r8, r1, r0, lsr #22
   18b14:	andeq	r8, r1, ip, lsr ip
   18b18:	andeq	r8, r1, r0, lsr #22
   18b1c:	andeq	r8, r1, r4, lsr ip
   18b20:	ldr	r3, [sp, #24]
   18b24:	mov	r6, #0
   18b28:	cmn	r3, #1
   18b2c:	bne	184d8 <lchmod@@Base+0xe4c>
   18b30:	ldr	r3, [sp, #44]	; 0x2c
   18b34:	ldrb	r3, [r3, #1]
   18b38:	adds	r3, r3, #0
   18b3c:	movne	r3, #1
   18b40:	b	184e0 <lchmod@@Base+0xe54>
   18b44:	ldr	r3, [sp, #176]	; 0xb0
   18b48:	mov	r6, #0
   18b4c:	cmp	r3, #2
   18b50:	bne	18620 <lchmod@@Base+0xf94>
   18b54:	ldr	r3, [sp, #64]	; 0x40
   18b58:	cmp	r3, #0
   18b5c:	bne	19394 <lchmod@@Base+0x1d08>
   18b60:	add	sl, sl, #1
   18b64:	ldr	r6, [sp, #36]	; 0x24
   18b68:	str	r3, [sp, #32]
   18b6c:	mov	r4, #92	; 0x5c
   18b70:	b	1852c <lchmod@@Base+0xea0>
   18b74:	ldr	r3, [sp, #176]	; 0xb0
   18b78:	mov	r6, #0
   18b7c:	cmp	r3, #2
   18b80:	bne	18654 <lchmod@@Base+0xfc8>
   18b84:	ldr	r3, [sp, #40]	; 0x28
   18b88:	cmp	r3, #0
   18b8c:	bne	18e70 <lchmod@@Base+0x17e4>
   18b90:	mov	r1, r7
   18b94:	str	r3, [sp, #32]
   18b98:	mov	r4, #63	; 0x3f
   18b9c:	b	184f8 <lchmod@@Base+0xe6c>
   18ba0:	ldr	r3, [sp, #176]	; 0xb0
   18ba4:	mov	r6, #0
   18ba8:	cmp	r3, #2
   18bac:	bne	186a4 <lchmod@@Base+0x1018>
   18bb0:	ldr	r3, [sp, #64]	; 0x40
   18bb4:	cmp	r3, #0
   18bb8:	bne	19394 <lchmod@@Base+0x1d08>
   18bbc:	ldr	r2, [sp, #84]	; 0x54
   18bc0:	adds	r3, fp, #0
   18bc4:	movne	r3, #1
   18bc8:	cmp	r2, #0
   18bcc:	movne	r3, #0
   18bd0:	cmp	r3, #0
   18bd4:	strne	fp, [sp, #84]	; 0x54
   18bd8:	movne	fp, #0
   18bdc:	bne	18c0c <lchmod@@Base+0x1580>
   18be0:	cmp	fp, r8
   18be4:	movhi	r3, #39	; 0x27
   18be8:	strbhi	r3, [r9, r8]
   18bec:	add	r3, r8, #1
   18bf0:	cmp	fp, r3
   18bf4:	movhi	r2, #92	; 0x5c
   18bf8:	strbhi	r2, [r9, r3]
   18bfc:	add	r3, r8, #2
   18c00:	cmp	fp, r3
   18c04:	movhi	r2, #39	; 0x27
   18c08:	strbhi	r2, [r9, r3]
   18c0c:	ldr	r3, [sp, #64]	; 0x40
   18c10:	add	r8, r8, #3
   18c14:	mov	r1, r7
   18c18:	str	r7, [sp, #32]
   18c1c:	str	r7, [sp, #76]	; 0x4c
   18c20:	str	r3, [sp, #36]	; 0x24
   18c24:	mov	r4, #39	; 0x27
   18c28:	b	184f8 <lchmod@@Base+0xe6c>
   18c2c:	mov	r6, #0
   18c30:	b	186bc <lchmod@@Base+0x1030>
   18c34:	mov	r6, #0
   18c38:	b	188b0 <lchmod@@Base+0x1224>
   18c3c:	mov	r6, #0
   18c40:	b	188d0 <lchmod@@Base+0x1244>
   18c44:	str	r7, [sp, #32]
   18c48:	mov	r6, #0
   18c4c:	b	188d8 <lchmod@@Base+0x124c>
   18c50:	mov	r6, #0
   18c54:	b	18900 <lchmod@@Base+0x1274>
   18c58:	mov	r6, #0
   18c5c:	b	186cc <lchmod@@Base+0x1040>
   18c60:	mov	r6, #0
   18c64:	b	18794 <lchmod@@Base+0x1108>
   18c68:	mov	r6, #0
   18c6c:	b	18764 <lchmod@@Base+0x10d8>
   18c70:	mov	r6, #0
   18c74:	mov	r3, #116	; 0x74
   18c78:	b	1876c <lchmod@@Base+0x10e0>
   18c7c:	mov	r6, #0
   18c80:	b	187a8 <lchmod@@Base+0x111c>
   18c84:	mov	r6, #0
   18c88:	b	187bc <lchmod@@Base+0x1130>
   18c8c:	ldr	r3, [sp, #56]	; 0x38
   18c90:	mov	r6, #0
   18c94:	cmp	r3, #0
   18c98:	bne	187dc <lchmod@@Base+0x1150>
   18c9c:	ldr	r3, [sp, #96]	; 0x60
   18ca0:	cmp	r3, #0
   18ca4:	addne	sl, sl, #1
   18ca8:	bne	18050 <lchmod@@Base+0x9c4>
   18cac:	ldr	r1, [sp, #52]	; 0x34
   18cb0:	str	r3, [sp, #32]
   18cb4:	mov	r4, r3
   18cb8:	b	184f8 <lchmod@@Base+0xe6c>
   18cbc:	mov	r6, #0
   18cc0:	ldr	r3, [sp, #80]	; 0x50
   18cc4:	cmp	r3, #1
   18cc8:	bne	18eb8 <lchmod@@Base+0x182c>
   18ccc:	bl	116b0 <__ctype_b_loc@plt>
   18cd0:	ldr	r2, [sp, #80]	; 0x50
   18cd4:	sxth	r3, r4
   18cd8:	mov	r1, r2
   18cdc:	lsl	r3, r3, #1
   18ce0:	ldr	r2, [r0]
   18ce4:	ldrh	r3, [r2, r3]
   18ce8:	and	r3, r3, #16384	; 0x4000
   18cec:	cmp	r3, #0
   18cf0:	movne	r3, #1
   18cf4:	moveq	r3, #0
   18cf8:	str	r3, [sp, #32]
   18cfc:	moveq	r3, #1
   18d00:	movne	r3, #0
   18d04:	ldr	r2, [sp, #56]	; 0x38
   18d08:	and	r3, r3, r2
   18d0c:	ands	r3, r3, #255	; 0xff
   18d10:	beq	188e4 <lchmod@@Base+0x1258>
   18d14:	add	r1, sl, r1
   18d18:	mov	r0, #0
   18d1c:	ldr	r7, [sp, #40]	; 0x28
   18d20:	ldr	r2, [sp, #36]	; 0x24
   18d24:	ldr	lr, [sp, #52]	; 0x34
   18d28:	b	18dd8 <lchmod@@Base+0x174c>
   18d2c:	cmp	r7, #0
   18d30:	bne	1912c <lchmod@@Base+0x1aa0>
   18d34:	eor	r0, r2, #1
   18d38:	ands	r0, lr, r0
   18d3c:	beq	18d74 <lchmod@@Base+0x16e8>
   18d40:	cmp	fp, r8
   18d44:	movhi	r2, #39	; 0x27
   18d48:	strbhi	r2, [r9, r8]
   18d4c:	add	r2, r8, #1
   18d50:	cmp	fp, r2
   18d54:	movhi	ip, #36	; 0x24
   18d58:	strbhi	ip, [r9, r2]
   18d5c:	add	r2, r8, #2
   18d60:	cmp	fp, r2
   18d64:	movhi	ip, #39	; 0x27
   18d68:	strbhi	ip, [r9, r2]
   18d6c:	add	r8, r8, #3
   18d70:	mov	r2, r0
   18d74:	cmp	fp, r8
   18d78:	movhi	r0, #92	; 0x5c
   18d7c:	strbhi	r0, [r9, r8]
   18d80:	add	r0, r8, #1
   18d84:	cmp	fp, r0
   18d88:	lsrhi	ip, r4, #6
   18d8c:	addhi	ip, ip, #48	; 0x30
   18d90:	strbhi	ip, [r9, r0]
   18d94:	add	ip, r8, #2
   18d98:	cmp	fp, ip
   18d9c:	lsrhi	r0, r4, #3
   18da0:	andhi	r0, r0, #7
   18da4:	addhi	r0, r0, #48	; 0x30
   18da8:	add	sl, sl, #1
   18dac:	strbhi	r0, [r9, ip]
   18db0:	and	r4, r4, #7
   18db4:	cmp	sl, r1
   18db8:	add	r4, r4, #48	; 0x30
   18dbc:	add	r8, r8, #3
   18dc0:	bcs	19144 <lchmod@@Base+0x1ab8>
   18dc4:	mov	r0, r3
   18dc8:	cmp	fp, r8
   18dcc:	strbhi	r4, [r9, r8]
   18dd0:	ldrb	r4, [r5, #1]!
   18dd4:	add	r8, r8, #1
   18dd8:	cmp	r3, #0
   18ddc:	bne	18d2c <lchmod@@Base+0x16a0>
   18de0:	cmp	r6, #0
   18de4:	bne	18e88 <lchmod@@Base+0x17fc>
   18de8:	eor	r6, r0, #1
   18dec:	and	r6, r6, r2
   18df0:	add	sl, sl, #1
   18df4:	cmp	r1, sl
   18df8:	uxtb	r6, r6
   18dfc:	bls	18eb0 <lchmod@@Base+0x1824>
   18e00:	cmp	r6, #0
   18e04:	beq	18dc8 <lchmod@@Base+0x173c>
   18e08:	cmp	fp, r8
   18e0c:	movhi	r2, #39	; 0x27
   18e10:	strbhi	r2, [r9, r8]
   18e14:	add	r2, r8, #1
   18e18:	cmp	fp, r2
   18e1c:	movhi	ip, #39	; 0x27
   18e20:	strbhi	ip, [r9, r2]
   18e24:	add	r8, r8, #2
   18e28:	mov	r6, r3
   18e2c:	mov	r2, r3
   18e30:	b	18dc8 <lchmod@@Base+0x173c>
   18e34:	ldr	r3, [sp, #184]	; 0xb8
   18e38:	cmp	r3, #0
   18e3c:	beq	18514 <lchmod@@Base+0xe88>
   18e40:	lsr	r2, r4, #5
   18e44:	mov	r0, r3
   18e48:	uxtb	r2, r2
   18e4c:	and	r3, r4, #31
   18e50:	ldr	r2, [r0, r2, lsl #2]
   18e54:	lsr	r3, r2, r3
   18e58:	tst	r3, #1
   18e5c:	beq	18514 <lchmod@@Base+0xe88>
   18e60:	ldr	r3, [sp, #40]	; 0x28
   18e64:	cmp	r3, #0
   18e68:	beq	18700 <lchmod@@Base+0x1074>
   18e6c:	mov	r3, r1
   18e70:	str	r3, [sp, #64]	; 0x40
   18e74:	mov	sl, r9
   18e78:	ldr	r3, [sp, #56]	; 0x38
   18e7c:	mov	r9, fp
   18e80:	ldr	r2, [sp, #64]	; 0x40
   18e84:	b	19074 <lchmod@@Base+0x19e8>
   18e88:	cmp	fp, r8
   18e8c:	eor	r6, r0, #1
   18e90:	movhi	ip, #92	; 0x5c
   18e94:	and	r6, r6, r2
   18e98:	add	sl, sl, #1
   18e9c:	strbhi	ip, [r9, r8]
   18ea0:	cmp	r1, sl
   18ea4:	add	r8, r8, #1
   18ea8:	uxtb	r6, r6
   18eac:	bhi	18e00 <lchmod@@Base+0x1774>
   18eb0:	str	r2, [sp, #36]	; 0x24
   18eb4:	b	1852c <lchmod@@Base+0xea0>
   18eb8:	ldr	r3, [sp, #24]
   18ebc:	cmn	r3, #1
   18ec0:	mov	r3, #0
   18ec4:	str	r3, [sp, #128]	; 0x80
   18ec8:	str	r3, [sp, #132]	; 0x84
   18ecc:	beq	191c0 <lchmod@@Base+0x1b34>
   18ed0:	mov	r2, r7
   18ed4:	mov	r3, #0
   18ed8:	str	r7, [sp, #104]	; 0x68
   18edc:	str	r5, [sp, #116]	; 0x74
   18ee0:	mov	r7, r3
   18ee4:	mov	r5, r2
   18ee8:	str	r4, [sp, #32]
   18eec:	str	r6, [sp, #108]	; 0x6c
   18ef0:	str	r8, [sp, #112]	; 0x70
   18ef4:	ldr	r3, [sp, #44]	; 0x2c
   18ef8:	add	r6, sl, r7
   18efc:	add	r4, r3, r6
   18f00:	ldr	r3, [sp, #24]
   18f04:	mov	r1, r4
   18f08:	sub	r2, r3, r6
   18f0c:	add	r0, sp, #124	; 0x7c
   18f10:	add	r3, sp, #128	; 0x80
   18f14:	bl	1e6a8 <lchmod@@Base+0x701c>
   18f18:	subs	r8, r0, #0
   18f1c:	beq	192a4 <lchmod@@Base+0x1c18>
   18f20:	cmn	r8, #1
   18f24:	beq	1927c <lchmod@@Base+0x1bf0>
   18f28:	cmn	r8, #2
   18f2c:	beq	19214 <lchmod@@Base+0x1b88>
   18f30:	ldr	r3, [sp, #64]	; 0x40
   18f34:	cmp	r3, #0
   18f38:	beq	18ff8 <lchmod@@Base+0x196c>
   18f3c:	cmp	r8, #1
   18f40:	beq	18ff8 <lchmod@@Base+0x196c>
   18f44:	sub	r3, r8, #1
   18f48:	add	r6, r3, r6
   18f4c:	ldr	r3, [sp, #44]	; 0x2c
   18f50:	add	r6, r3, r6
   18f54:	ldrb	r3, [r4, #1]!
   18f58:	sub	r3, r3, #91	; 0x5b
   18f5c:	cmp	r3, #33	; 0x21
   18f60:	ldrls	pc, [pc, r3, lsl #2]
   18f64:	b	18ff0 <lchmod@@Base+0x1964>
   18f68:	andeq	r9, r1, ip, asr r0
   18f6c:	andeq	r9, r1, ip, asr r0
   18f70:	strdeq	r8, [r1], -r0
   18f74:	andeq	r9, r1, ip, asr r0
   18f78:	strdeq	r8, [r1], -r0
   18f7c:	andeq	r9, r1, ip, asr r0
   18f80:	strdeq	r8, [r1], -r0
   18f84:	strdeq	r8, [r1], -r0
   18f88:	strdeq	r8, [r1], -r0
   18f8c:	strdeq	r8, [r1], -r0
   18f90:	strdeq	r8, [r1], -r0
   18f94:	strdeq	r8, [r1], -r0
   18f98:	strdeq	r8, [r1], -r0
   18f9c:	strdeq	r8, [r1], -r0
   18fa0:	strdeq	r8, [r1], -r0
   18fa4:	strdeq	r8, [r1], -r0
   18fa8:	strdeq	r8, [r1], -r0
   18fac:	strdeq	r8, [r1], -r0
   18fb0:	strdeq	r8, [r1], -r0
   18fb4:	strdeq	r8, [r1], -r0
   18fb8:	strdeq	r8, [r1], -r0
   18fbc:	strdeq	r8, [r1], -r0
   18fc0:	strdeq	r8, [r1], -r0
   18fc4:	strdeq	r8, [r1], -r0
   18fc8:	strdeq	r8, [r1], -r0
   18fcc:	strdeq	r8, [r1], -r0
   18fd0:	strdeq	r8, [r1], -r0
   18fd4:	strdeq	r8, [r1], -r0
   18fd8:	strdeq	r8, [r1], -r0
   18fdc:	strdeq	r8, [r1], -r0
   18fe0:	strdeq	r8, [r1], -r0
   18fe4:	strdeq	r8, [r1], -r0
   18fe8:	strdeq	r8, [r1], -r0
   18fec:	andeq	r9, r1, ip, asr r0
   18ff0:	cmp	r6, r4
   18ff4:	bne	18f54 <lchmod@@Base+0x18c8>
   18ff8:	ldr	r0, [sp, #124]	; 0x7c
   18ffc:	bl	115cc <iswprint@plt>
   19000:	add	r7, r7, r8
   19004:	cmp	r0, #0
   19008:	add	r0, sp, #128	; 0x80
   1900c:	moveq	r5, #0
   19010:	bl	11548 <mbsinit@plt>
   19014:	cmp	r0, #0
   19018:	beq	18ef4 <lchmod@@Base+0x1868>
   1901c:	ldr	r4, [sp, #32]
   19020:	str	r5, [sp, #32]
   19024:	ldr	r3, [sp, #32]
   19028:	mov	r1, r7
   1902c:	eor	r3, r3, #1
   19030:	ldr	r7, [sp, #104]	; 0x68
   19034:	ldr	r6, [sp, #108]	; 0x6c
   19038:	ldr	r8, [sp, #112]	; 0x70
   1903c:	ldr	r5, [sp, #116]	; 0x74
   19040:	uxtb	r3, r3
   19044:	cmp	r1, #1
   19048:	bls	18d04 <lchmod@@Base+0x1678>
   1904c:	ldr	r2, [sp, #56]	; 0x38
   19050:	and	r3, r3, r2
   19054:	uxtb	r3, r3
   19058:	b	18d14 <lchmod@@Base+0x1688>
   1905c:	mov	r3, #2
   19060:	str	r3, [sp, #176]	; 0xb0
   19064:	ldr	r2, [sp, #64]	; 0x40
   19068:	ldr	r3, [sp, #56]	; 0x38
   1906c:	mov	sl, r9
   19070:	mov	r9, fp
   19074:	and	r3, r3, r2
   19078:	tst	r3, #255	; 0xff
   1907c:	ldr	r3, [sp, #176]	; 0xb0
   19080:	movne	r3, #4
   19084:	str	r3, [sp, #176]	; 0xb0
   19088:	ldr	r3, [sp, #180]	; 0xb4
   1908c:	mov	ip, #0
   19090:	bic	r3, r3, #2
   19094:	str	r3, [sp, #4]
   19098:	ldr	r3, [sp, #192]	; 0xc0
   1909c:	ldr	r2, [sp, #44]	; 0x2c
   190a0:	str	r3, [sp, #16]
   190a4:	ldr	r3, [sp, #188]	; 0xbc
   190a8:	mov	r1, r9
   190ac:	str	r3, [sp, #12]
   190b0:	ldr	r3, [sp, #176]	; 0xb0
   190b4:	mov	r0, sl
   190b8:	str	r3, [sp]
   190bc:	str	ip, [sp, #8]
   190c0:	ldr	r3, [sp, #24]
   190c4:	bl	17f24 <lchmod@@Base+0x898>
   190c8:	mov	fp, r0
   190cc:	mov	r0, fp
   190d0:	add	sp, sp, #140	; 0x8c
   190d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190d8:	mov	r4, #92	; 0x5c
   190dc:	mov	r1, #0
   190e0:	mov	r3, r4
   190e4:	b	186d8 <lchmod@@Base+0x104c>
   190e8:	mov	r3, #0
   190ec:	ldr	r1, [sp, #52]	; 0x34
   190f0:	str	r3, [sp, #32]
   190f4:	mov	r4, #63	; 0x3f
   190f8:	b	184f8 <lchmod@@Base+0xe6c>
   190fc:	cmp	fp, #0
   19100:	beq	1915c <lchmod@@Base+0x1ad0>
   19104:	mov	r3, #39	; 0x27
   19108:	strb	r3, [r9]
   1910c:	mov	r3, #0
   19110:	str	r3, [sp, #40]	; 0x28
   19114:	mov	r3, #1
   19118:	str	r3, [sp, #68]	; 0x44
   1911c:	ldr	r3, [pc, #448]	; 192e4 <lchmod@@Base+0x1c58>
   19120:	mov	r8, #1
   19124:	str	r3, [sp, #72]	; 0x48
   19128:	b	1830c <lchmod@@Base+0xc80>
   1912c:	ldr	r3, [sp, #40]	; 0x28
   19130:	mov	sl, r9
   19134:	str	r3, [sp, #56]	; 0x38
   19138:	mov	r9, fp
   1913c:	ldr	r2, [sp, #64]	; 0x40
   19140:	b	19074 <lchmod@@Base+0x19e8>
   19144:	str	r2, [sp, #36]	; 0x24
   19148:	b	1855c <lchmod@@Base+0xed0>
   1914c:	mov	r1, #0
   19150:	str	r3, [sp, #32]
   19154:	mov	r4, #63	; 0x3f
   19158:	b	184f8 <lchmod@@Base+0xe6c>
   1915c:	ldr	r3, [pc, #384]	; 192e4 <lchmod@@Base+0x1c58>
   19160:	str	r3, [sp, #72]	; 0x48
   19164:	mov	r3, #0
   19168:	str	r3, [sp, #40]	; 0x28
   1916c:	mov	r3, #1
   19170:	str	r3, [sp, #68]	; 0x44
   19174:	mov	r8, r3
   19178:	b	1830c <lchmod@@Base+0xc80>
   1917c:	bl	11878 <abort@plt>
   19180:	cmp	fp, #0
   19184:	beq	191e4 <lchmod@@Base+0x1b58>
   19188:	mov	r2, #1
   1918c:	mov	r3, #34	; 0x22
   19190:	strb	r3, [r9]
   19194:	mov	r8, r2
   19198:	mov	r3, r2
   1919c:	str	r2, [sp, #68]	; 0x44
   191a0:	str	r3, [sp, #56]	; 0x38
   191a4:	ldr	r3, [pc, #316]	; 192e8 <lchmod@@Base+0x1c5c>
   191a8:	ldr	r1, [sp, #56]	; 0x38
   191ac:	str	r3, [sp, #72]	; 0x48
   191b0:	ldr	r2, [sp, #176]	; 0xb0
   191b4:	ldr	ip, [sp, #40]	; 0x28
   191b8:	ldr	lr, [sp, #176]	; 0xb0
   191bc:	b	17ff0 <lchmod@@Base+0x964>
   191c0:	ldr	r0, [sp, #44]	; 0x2c
   191c4:	bl	116e0 <strlen@plt>
   191c8:	str	r0, [sp, #24]
   191cc:	b	18ed0 <lchmod@@Base+0x1844>
   191d0:	mov	r7, #0
   191d4:	ldr	r1, [sp, #52]	; 0x34
   191d8:	str	r3, [sp, #32]
   191dc:	mov	r4, #48	; 0x30
   191e0:	b	184f8 <lchmod@@Base+0xe6c>
   191e4:	mov	r3, #1
   191e8:	str	r3, [sp, #68]	; 0x44
   191ec:	mov	r8, r3
   191f0:	b	191a0 <lchmod@@Base+0x1b14>
   191f4:	mov	r3, #2
   191f8:	mov	sl, r9
   191fc:	str	r3, [sp, #176]	; 0xb0
   19200:	mov	r9, fp
   19204:	ldr	r3, [sp, #56]	; 0x38
   19208:	b	19074 <lchmod@@Base+0x19e8>
   1920c:	ldr	r6, [sp, #48]	; 0x30
   19210:	b	18cc0 <lchmod@@Base+0x1634>
   19214:	ldr	r0, [sp, #24]
   19218:	mov	ip, r6
   1921c:	cmp	r0, ip
   19220:	mov	r1, r7
   19224:	mov	r2, r4
   19228:	ldr	r7, [sp, #104]	; 0x68
   1922c:	ldr	r4, [sp, #32]
   19230:	ldr	r6, [sp, #108]	; 0x6c
   19234:	ldr	r8, [sp, #112]	; 0x70
   19238:	ldr	r5, [sp, #116]	; 0x74
   1923c:	bls	1926c <lchmod@@Base+0x1be0>
   19240:	ldrb	r3, [r2]
   19244:	cmp	r3, #0
   19248:	bne	1925c <lchmod@@Base+0x1bd0>
   1924c:	b	1937c <lchmod@@Base+0x1cf0>
   19250:	ldrb	r3, [r2, #1]!
   19254:	cmp	r3, #0
   19258:	beq	1937c <lchmod@@Base+0x1cf0>
   1925c:	add	r1, r1, #1
   19260:	add	r3, sl, r1
   19264:	cmp	r0, r3
   19268:	bhi	19250 <lchmod@@Base+0x1bc4>
   1926c:	mov	r2, #0
   19270:	mov	r3, r7
   19274:	str	r2, [sp, #32]
   19278:	b	19044 <lchmod@@Base+0x19b8>
   1927c:	mov	r1, r7
   19280:	ldr	r7, [sp, #104]	; 0x68
   19284:	mov	r2, #0
   19288:	ldr	r4, [sp, #32]
   1928c:	ldr	r6, [sp, #108]	; 0x6c
   19290:	ldr	r8, [sp, #112]	; 0x70
   19294:	ldr	r5, [sp, #116]	; 0x74
   19298:	mov	r3, r7
   1929c:	str	r2, [sp, #32]
   192a0:	b	19044 <lchmod@@Base+0x19b8>
   192a4:	mov	r3, r5
   192a8:	eor	r3, r3, #1
   192ac:	ldr	r4, [sp, #32]
   192b0:	mov	r1, r7
   192b4:	str	r5, [sp, #32]
   192b8:	ldr	r7, [sp, #104]	; 0x68
   192bc:	ldr	r6, [sp, #108]	; 0x6c
   192c0:	ldr	r8, [sp, #112]	; 0x70
   192c4:	ldr	r5, [sp, #116]	; 0x74
   192c8:	uxtb	r3, r3
   192cc:	b	19044 <lchmod@@Base+0x19b8>
   192d0:	mov	sl, r9
   192d4:	str	r3, [sp, #56]	; 0x38
   192d8:	mov	r9, fp
   192dc:	ldr	r2, [sp, #64]	; 0x40
   192e0:	b	19074 <lchmod@@Base+0x19e8>
   192e4:	andeq	pc, r1, r8, lsl #18
   192e8:	andeq	pc, r1, r4, lsl #18
   192ec:	andeq	pc, r1, ip, lsl #18
   192f0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   192f4:	ldr	r2, [sp, #44]	; 0x2c
   192f8:	ldrb	r1, [r2, r3]
   192fc:	sub	r2, r1, #33	; 0x21
   19300:	uxtb	r2, r2
   19304:	cmp	r2, #29
   19308:	bhi	19388 <lchmod@@Base+0x1cfc>
   1930c:	ldr	r0, [pc, #-36]	; 192f0 <lchmod@@Base+0x1c64>
   19310:	mov	ip, #1
   19314:	ands	r2, r0, ip, lsl r2
   19318:	beq	193a8 <lchmod@@Base+0x1d1c>
   1931c:	ldr	r2, [sp, #40]	; 0x28
   19320:	cmp	r2, #0
   19324:	bne	1949c <lchmod@@Base+0x1e10>
   19328:	add	r2, r8, #1
   1932c:	cmp	fp, r8
   19330:	strbhi	r4, [r9, r8]
   19334:	cmp	fp, r2
   19338:	movhi	r0, #34	; 0x22
   1933c:	strbhi	r0, [r9, r2]
   19340:	add	r2, r8, #2
   19344:	cmp	fp, r2
   19348:	movhi	r0, #34	; 0x22
   1934c:	strbhi	r0, [r9, r2]
   19350:	add	r2, r8, #3
   19354:	cmp	fp, r2
   19358:	mov	sl, r3
   1935c:	ldr	r3, [sp, #40]	; 0x28
   19360:	movhi	r0, #63	; 0x3f
   19364:	mov	r4, r1
   19368:	strbhi	r0, [r9, r2]
   1936c:	add	r8, r8, #4
   19370:	mov	r1, r3
   19374:	str	r3, [sp, #32]
   19378:	b	184f8 <lchmod@@Base+0xe6c>
   1937c:	str	r3, [sp, #32]
   19380:	mov	r3, r7
   19384:	b	19044 <lchmod@@Base+0x19b8>
   19388:	mov	r1, #0
   1938c:	str	r1, [sp, #32]
   19390:	b	184f8 <lchmod@@Base+0xe6c>
   19394:	mov	sl, r9
   19398:	ldr	r3, [sp, #56]	; 0x38
   1939c:	mov	r9, fp
   193a0:	ldr	r2, [sp, #64]	; 0x40
   193a4:	b	19074 <lchmod@@Base+0x19e8>
   193a8:	str	r2, [sp, #32]
   193ac:	mov	r1, #0
   193b0:	b	184f8 <lchmod@@Base+0xe6c>
   193b4:	ldr	r2, [sp, #76]	; 0x4c
   193b8:	mov	sl, r9
   193bc:	mov	r9, fp
   193c0:	mov	fp, r8
   193c4:	ldr	r1, [sp, #72]	; 0x48
   193c8:	cmp	r1, #0
   193cc:	moveq	r3, #0
   193d0:	andne	r3, r2, #1
   193d4:	cmp	r3, #0
   193d8:	beq	19404 <lchmod@@Base+0x1d78>
   193dc:	ldrb	r3, [r1]
   193e0:	cmp	r3, #0
   193e4:	beq	19404 <lchmod@@Base+0x1d78>
   193e8:	mov	r2, r1
   193ec:	cmp	r9, fp
   193f0:	strbhi	r3, [sl, fp]
   193f4:	ldrb	r3, [r2, #1]!
   193f8:	add	fp, fp, #1
   193fc:	cmp	r3, #0
   19400:	bne	193ec <lchmod@@Base+0x1d60>
   19404:	cmp	r9, fp
   19408:	movhi	r3, #0
   1940c:	strbhi	r3, [sl, fp]
   19410:	b	190cc <lchmod@@Base+0x1a40>
   19414:	ldr	r3, [sp, #192]	; 0xc0
   19418:	mov	ip, #5
   1941c:	str	r3, [sp, #16]
   19420:	ldr	r3, [sp, #188]	; 0xbc
   19424:	ldr	r2, [sp, #44]	; 0x2c
   19428:	str	r3, [sp, #12]
   1942c:	ldr	r3, [sp, #184]	; 0xb8
   19430:	ldr	r1, [sp, #84]	; 0x54
   19434:	str	r3, [sp, #8]
   19438:	ldr	r3, [sp, #180]	; 0xb4
   1943c:	mov	r0, r9
   19440:	str	r3, [sp, #4]
   19444:	str	ip, [sp]
   19448:	ldr	r3, [sp, #24]
   1944c:	bl	17f24 <lchmod@@Base+0x898>
   19450:	mov	fp, r0
   19454:	b	190cc <lchmod@@Base+0x1a40>
   19458:	mov	sl, r9
   1945c:	mov	r9, fp
   19460:	mov	fp, r8
   19464:	b	193c4 <lchmod@@Base+0x1d38>
   19468:	ldr	r1, [sp, #176]	; 0xb0
   1946c:	bl	17e04 <lchmod@@Base+0x778>
   19470:	str	r0, [sp, #192]	; 0xc0
   19474:	b	183e0 <lchmod@@Base+0xd54>
   19478:	ldr	r1, [sp, #176]	; 0xb0
   1947c:	bl	17e04 <lchmod@@Base+0x778>
   19480:	str	r0, [sp, #188]	; 0xbc
   19484:	b	183c0 <lchmod@@Base+0xd34>
   19488:	mov	sl, r9
   1948c:	mov	r2, r3
   19490:	mov	r9, fp
   19494:	mov	fp, r8
   19498:	b	193c4 <lchmod@@Base+0x1d38>
   1949c:	mov	sl, r9
   194a0:	mov	r9, fp
   194a4:	b	19088 <lchmod@@Base+0x19fc>
   194a8:	push	{r4, r5, r6, lr}
   194ac:	mov	r5, r0
   194b0:	bl	1171c <__errno_location@plt>
   194b4:	cmp	r5, #0
   194b8:	mov	r1, #48	; 0x30
   194bc:	mov	r4, r0
   194c0:	ldr	r0, [pc, #16]	; 194d8 <lchmod@@Base+0x1e4c>
   194c4:	ldr	r6, [r4]
   194c8:	movne	r0, r5
   194cc:	bl	1d038 <lchmod@@Base+0x59ac>
   194d0:	str	r6, [r4]
   194d4:	pop	{r4, r5, r6, pc}
   194d8:	strdeq	r0, [r3], -ip
   194dc:	ldr	r3, [pc, #12]	; 194f0 <lchmod@@Base+0x1e64>
   194e0:	cmp	r0, #0
   194e4:	moveq	r0, r3
   194e8:	ldr	r0, [r0]
   194ec:	bx	lr
   194f0:	strdeq	r0, [r3], -ip
   194f4:	ldr	r3, [pc, #12]	; 19508 <lchmod@@Base+0x1e7c>
   194f8:	cmp	r0, #0
   194fc:	moveq	r0, r3
   19500:	str	r1, [r0]
   19504:	bx	lr
   19508:	strdeq	r0, [r3], -ip
   1950c:	ldr	r3, [pc, #52]	; 19548 <lchmod@@Base+0x1ebc>
   19510:	cmp	r0, #0
   19514:	moveq	r0, r3
   19518:	add	r3, r0, #8
   1951c:	push	{lr}		; (str lr, [sp, #-4]!)
   19520:	lsr	lr, r1, #5
   19524:	and	r1, r1, #31
   19528:	ldr	ip, [r3, lr, lsl #2]
   1952c:	lsr	r0, ip, r1
   19530:	eor	r2, r2, r0
   19534:	and	r2, r2, #1
   19538:	and	r0, r0, #1
   1953c:	eor	r1, ip, r2, lsl r1
   19540:	str	r1, [r3, lr, lsl #2]
   19544:	pop	{pc}		; (ldr pc, [sp], #4)
   19548:	strdeq	r0, [r3], -ip
   1954c:	ldr	r3, [pc, #16]	; 19564 <lchmod@@Base+0x1ed8>
   19550:	cmp	r0, #0
   19554:	movne	r3, r0
   19558:	ldr	r0, [r3, #4]
   1955c:	str	r1, [r3, #4]
   19560:	bx	lr
   19564:	strdeq	r0, [r3], -ip
   19568:	ldr	r3, [pc, #44]	; 1959c <lchmod@@Base+0x1f10>
   1956c:	cmp	r0, #0
   19570:	moveq	r0, r3
   19574:	mov	ip, #10
   19578:	cmp	r2, #0
   1957c:	cmpne	r1, #0
   19580:	str	ip, [r0]
   19584:	beq	19594 <lchmod@@Base+0x1f08>
   19588:	str	r1, [r0, #40]	; 0x28
   1958c:	str	r2, [r0, #44]	; 0x2c
   19590:	bx	lr
   19594:	push	{r4, lr}
   19598:	bl	11878 <abort@plt>
   1959c:	strdeq	r0, [r3], -ip
   195a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195a4:	sub	sp, sp, #24
   195a8:	ldr	ip, [pc, #108]	; 1961c <lchmod@@Base+0x1f90>
   195ac:	ldr	r4, [sp, #56]	; 0x38
   195b0:	mov	r9, r2
   195b4:	cmp	r4, #0
   195b8:	moveq	r4, ip
   195bc:	mov	sl, r3
   195c0:	mov	r7, r0
   195c4:	mov	r8, r1
   195c8:	bl	1171c <__errno_location@plt>
   195cc:	ldr	r3, [r4, #44]	; 0x2c
   195d0:	mov	r1, r8
   195d4:	ldr	r6, [r0]
   195d8:	str	r3, [sp, #16]
   195dc:	ldr	r2, [r4, #40]	; 0x28
   195e0:	add	r3, r4, #8
   195e4:	str	r3, [sp, #8]
   195e8:	str	r2, [sp, #12]
   195ec:	ldr	r2, [r4, #4]
   195f0:	mov	r5, r0
   195f4:	str	r2, [sp, #4]
   195f8:	ldr	ip, [r4]
   195fc:	mov	r3, sl
   19600:	mov	r2, r9
   19604:	mov	r0, r7
   19608:	str	ip, [sp]
   1960c:	bl	17f24 <lchmod@@Base+0x898>
   19610:	str	r6, [r5]
   19614:	add	sp, sp, #24
   19618:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1961c:	strdeq	r0, [r3], -ip
   19620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19624:	cmp	r2, #0
   19628:	sub	sp, sp, #36	; 0x24
   1962c:	ldr	r4, [pc, #164]	; 196d8 <lchmod@@Base+0x204c>
   19630:	mov	r8, r1
   19634:	movne	r4, r2
   19638:	mov	r7, r0
   1963c:	bl	1171c <__errno_location@plt>
   19640:	ldr	r3, [r4, #44]	; 0x2c
   19644:	ldr	r5, [r4, #4]
   19648:	add	r9, r4, #8
   1964c:	orr	r5, r5, #1
   19650:	mov	r1, #0
   19654:	mov	r2, r7
   19658:	ldr	fp, [r0]
   1965c:	str	r3, [sp, #16]
   19660:	ldr	r3, [r4, #40]	; 0x28
   19664:	stmib	sp, {r5, r9}
   19668:	str	r3, [sp, #12]
   1966c:	ldr	r3, [r4]
   19670:	mov	r6, r0
   19674:	str	r3, [sp]
   19678:	mov	r0, r1
   1967c:	mov	r3, r8
   19680:	bl	17f24 <lchmod@@Base+0x898>
   19684:	add	r1, r0, #1
   19688:	mov	r0, r1
   1968c:	str	r1, [sp, #28]
   19690:	bl	1caf4 <lchmod@@Base+0x5468>
   19694:	ldr	r3, [r4, #44]	; 0x2c
   19698:	ldr	r1, [sp, #28]
   1969c:	str	r3, [sp, #16]
   196a0:	ldr	r3, [r4, #40]	; 0x28
   196a4:	str	r5, [sp, #4]
   196a8:	str	r3, [sp, #12]
   196ac:	str	r9, [sp, #8]
   196b0:	ldr	ip, [r4]
   196b4:	mov	r3, r8
   196b8:	mov	r2, r7
   196bc:	str	ip, [sp]
   196c0:	mov	sl, r0
   196c4:	bl	17f24 <lchmod@@Base+0x898>
   196c8:	mov	r0, sl
   196cc:	str	fp, [r6]
   196d0:	add	sp, sp, #36	; 0x24
   196d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196d8:	strdeq	r0, [r3], -ip
   196dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   196e0:	cmp	r3, #0
   196e4:	sub	sp, sp, #44	; 0x2c
   196e8:	ldr	r4, [pc, #192]	; 197b0 <lchmod@@Base+0x2124>
   196ec:	mov	r6, r2
   196f0:	movne	r4, r3
   196f4:	mov	r9, r1
   196f8:	mov	r8, r0
   196fc:	bl	1171c <__errno_location@plt>
   19700:	ldr	r3, [r4, #44]	; 0x2c
   19704:	ldr	r5, [r4, #4]
   19708:	add	sl, r4, #8
   1970c:	cmp	r6, #0
   19710:	orreq	r5, r5, #1
   19714:	mov	r1, #0
   19718:	ldr	r2, [r0]
   1971c:	str	r3, [sp, #16]
   19720:	ldr	r3, [r4, #40]	; 0x28
   19724:	stmib	sp, {r5, sl}
   19728:	str	r3, [sp, #12]
   1972c:	ldr	r3, [r4]
   19730:	mov	r7, r0
   19734:	str	r2, [sp, #28]
   19738:	str	r3, [sp]
   1973c:	mov	r2, r8
   19740:	mov	r3, r9
   19744:	mov	r0, r1
   19748:	bl	17f24 <lchmod@@Base+0x898>
   1974c:	add	r1, r0, #1
   19750:	mov	fp, r0
   19754:	mov	r0, r1
   19758:	str	r1, [sp, #36]	; 0x24
   1975c:	bl	1caf4 <lchmod@@Base+0x5468>
   19760:	ldr	r3, [r4, #44]	; 0x2c
   19764:	mov	r2, r8
   19768:	str	r3, [sp, #16]
   1976c:	ldr	r3, [r4, #40]	; 0x28
   19770:	str	r5, [sp, #4]
   19774:	str	r3, [sp, #12]
   19778:	str	sl, [sp, #8]
   1977c:	ldr	ip, [r4]
   19780:	ldr	r1, [sp, #36]	; 0x24
   19784:	mov	r3, r9
   19788:	str	ip, [sp]
   1978c:	str	r0, [sp, #32]
   19790:	bl	17f24 <lchmod@@Base+0x898>
   19794:	ldr	r2, [sp, #28]
   19798:	cmp	r6, #0
   1979c:	str	r2, [r7]
   197a0:	ldr	r0, [sp, #32]
   197a4:	strne	fp, [r6]
   197a8:	add	sp, sp, #44	; 0x2c
   197ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197b0:	strdeq	r0, [r3], -ip
   197b4:	push	{r4, r5, r6, r7, r8, lr}
   197b8:	ldr	r6, [pc, #116]	; 19834 <lchmod@@Base+0x21a8>
   197bc:	ldr	r3, [r6, #4]
   197c0:	ldr	r7, [r6]
   197c4:	cmp	r3, #1
   197c8:	movgt	r5, r7
   197cc:	movgt	r4, #1
   197d0:	ble	197f0 <lchmod@@Base+0x2164>
   197d4:	ldr	r0, [r5, #12]
   197d8:	bl	1355c <__assert_fail@plt+0x1c90>
   197dc:	ldr	r3, [r6, #4]
   197e0:	add	r4, r4, #1
   197e4:	cmp	r3, r4
   197e8:	add	r5, r5, #8
   197ec:	bgt	197d4 <lchmod@@Base+0x2148>
   197f0:	ldr	r0, [r7, #4]
   197f4:	ldr	r4, [pc, #60]	; 19838 <lchmod@@Base+0x21ac>
   197f8:	cmp	r0, r4
   197fc:	beq	19810 <lchmod@@Base+0x2184>
   19800:	bl	1355c <__assert_fail@plt+0x1c90>
   19804:	mov	r3, #256	; 0x100
   19808:	str	r4, [r6, #12]
   1980c:	str	r3, [r6, #8]
   19810:	ldr	r4, [pc, #36]	; 1983c <lchmod@@Base+0x21b0>
   19814:	cmp	r7, r4
   19818:	beq	19828 <lchmod@@Base+0x219c>
   1981c:	mov	r0, r7
   19820:	bl	1355c <__assert_fail@plt+0x1c90>
   19824:	str	r4, [r6]
   19828:	mov	r3, #1
   1982c:	str	r3, [r6, #4]
   19830:	pop	{r4, r5, r6, r7, r8, pc}
   19834:	muleq	r3, r0, r1
   19838:	andeq	r0, r3, ip, lsr #4
   1983c:	muleq	r3, r8, r1
   19840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19844:	sub	sp, sp, #44	; 0x2c
   19848:	mov	r5, r0
   1984c:	mov	sl, r1
   19850:	bl	1171c <__errno_location@plt>
   19854:	ldr	r4, [pc, #400]	; 199ec <lchmod@@Base+0x2360>
   19858:	cmn	r5, #-2147483647	; 0x80000001
   1985c:	ldr	r6, [r4]
   19860:	mov	r8, r0
   19864:	movne	r0, #0
   19868:	moveq	r0, #1
   1986c:	ldr	r3, [r8]
   19870:	orrs	r0, r0, r5, lsr #31
   19874:	str	r3, [sp, #24]
   19878:	bne	199e8 <lchmod@@Base+0x235c>
   1987c:	ldr	r2, [r4, #4]
   19880:	cmp	r5, r2
   19884:	blt	198e4 <lchmod@@Base+0x2258>
   19888:	add	r7, r4, #8
   1988c:	cmp	r6, r7
   19890:	str	r2, [sp, #36]	; 0x24
   19894:	beq	199b8 <lchmod@@Base+0x232c>
   19898:	mov	r3, #8
   1989c:	sub	r2, r5, r2
   198a0:	mov	r0, r6
   198a4:	str	r3, [sp]
   198a8:	add	r2, r2, #1
   198ac:	mvn	r3, #-2147483648	; 0x80000000
   198b0:	add	r1, sp, #36	; 0x24
   198b4:	bl	1cd10 <lchmod@@Base+0x5684>
   198b8:	mov	r6, r0
   198bc:	str	r0, [r4]
   198c0:	ldr	r0, [r4, #4]
   198c4:	ldr	r2, [sp, #36]	; 0x24
   198c8:	mov	r1, #0
   198cc:	sub	r2, r2, r0
   198d0:	add	r0, r6, r0, lsl #3
   198d4:	lsl	r2, r2, #3
   198d8:	bl	11740 <memset@plt>
   198dc:	ldr	r3, [sp, #36]	; 0x24
   198e0:	str	r3, [r4, #4]
   198e4:	ldr	r4, [pc, #260]	; 199f0 <lchmod@@Base+0x2364>
   198e8:	add	fp, r6, r5, lsl #3
   198ec:	ldr	r9, [r6, r5, lsl #3]
   198f0:	ldr	r0, [r4, #4]
   198f4:	ldr	r3, [r4]
   198f8:	ldr	r7, [fp, #4]
   198fc:	ldr	r1, [r4, #44]	; 0x2c
   19900:	ldr	r2, [r4, #40]	; 0x28
   19904:	orr	r0, r0, #1
   19908:	str	r3, [sp]
   1990c:	add	r3, r4, #8
   19910:	str	r0, [sp, #28]
   19914:	str	r0, [sp, #4]
   19918:	str	r1, [sp, #16]
   1991c:	str	r2, [sp, #12]
   19920:	str	r3, [sp, #8]
   19924:	mov	r0, r7
   19928:	mov	r1, r9
   1992c:	mvn	r3, #0
   19930:	mov	r2, sl
   19934:	bl	17f24 <lchmod@@Base+0x898>
   19938:	cmp	r9, r0
   1993c:	bhi	199a4 <lchmod@@Base+0x2318>
   19940:	add	r3, r4, #48	; 0x30
   19944:	add	r9, r0, #1
   19948:	cmp	r7, r3
   1994c:	str	r9, [r6, r5, lsl #3]
   19950:	beq	1995c <lchmod@@Base+0x22d0>
   19954:	mov	r0, r7
   19958:	bl	1355c <__assert_fail@plt+0x1c90>
   1995c:	mov	r0, r9
   19960:	bl	1caf4 <lchmod@@Base+0x5468>
   19964:	ldr	ip, [r4, #44]	; 0x2c
   19968:	ldr	r3, [r4]
   1996c:	ldr	lr, [r4, #40]	; 0x28
   19970:	ldr	r4, [pc, #124]	; 199f4 <lchmod@@Base+0x2368>
   19974:	mov	r2, sl
   19978:	mov	r1, r9
   1997c:	str	r0, [fp, #4]
   19980:	str	r4, [sp, #8]
   19984:	ldr	r4, [sp, #28]
   19988:	str	r3, [sp]
   1998c:	str	r4, [sp, #4]
   19990:	str	ip, [sp, #16]
   19994:	str	lr, [sp, #12]
   19998:	mvn	r3, #0
   1999c:	mov	r7, r0
   199a0:	bl	17f24 <lchmod@@Base+0x898>
   199a4:	ldr	r3, [sp, #24]
   199a8:	mov	r0, r7
   199ac:	str	r3, [r8]
   199b0:	add	sp, sp, #44	; 0x2c
   199b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199b8:	mov	r3, #8
   199bc:	sub	r2, r5, r2
   199c0:	str	r3, [sp]
   199c4:	add	r1, sp, #36	; 0x24
   199c8:	add	r2, r2, #1
   199cc:	mvn	r3, #-2147483648	; 0x80000000
   199d0:	bl	1cd10 <lchmod@@Base+0x5684>
   199d4:	mov	r6, r0
   199d8:	ldm	r7, {r0, r1}
   199dc:	str	r6, [r4]
   199e0:	stm	r6, {r0, r1}
   199e4:	b	198c0 <lchmod@@Base+0x2234>
   199e8:	bl	11878 <abort@plt>
   199ec:	muleq	r3, r0, r1
   199f0:	strdeq	r0, [r3], -ip
   199f4:	andeq	r0, r3, r4, lsl #4
   199f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199fc:	sub	sp, sp, #52	; 0x34
   19a00:	mov	r5, r0
   19a04:	mov	sl, r1
   19a08:	mov	fp, r2
   19a0c:	bl	1171c <__errno_location@plt>
   19a10:	ldr	r4, [pc, #408]	; 19bb0 <lchmod@@Base+0x2524>
   19a14:	cmn	r5, #-2147483647	; 0x80000001
   19a18:	ldr	r6, [r4]
   19a1c:	mov	r8, r0
   19a20:	movne	r0, #0
   19a24:	moveq	r0, #1
   19a28:	ldr	r3, [r8]
   19a2c:	orrs	r0, r0, r5, lsr #31
   19a30:	str	r3, [sp, #28]
   19a34:	bne	19bac <lchmod@@Base+0x2520>
   19a38:	ldr	r2, [r4, #4]
   19a3c:	cmp	r5, r2
   19a40:	blt	19aa0 <lchmod@@Base+0x2414>
   19a44:	add	r7, r4, #8
   19a48:	cmp	r6, r7
   19a4c:	str	r2, [sp, #44]	; 0x2c
   19a50:	beq	19b7c <lchmod@@Base+0x24f0>
   19a54:	mov	r3, #8
   19a58:	sub	r2, r5, r2
   19a5c:	mov	r0, r6
   19a60:	str	r3, [sp]
   19a64:	add	r2, r2, #1
   19a68:	mvn	r3, #-2147483648	; 0x80000000
   19a6c:	add	r1, sp, #44	; 0x2c
   19a70:	bl	1cd10 <lchmod@@Base+0x5684>
   19a74:	mov	r6, r0
   19a78:	str	r0, [r4]
   19a7c:	ldr	r0, [r4, #4]
   19a80:	ldr	r2, [sp, #44]	; 0x2c
   19a84:	mov	r1, #0
   19a88:	sub	r2, r2, r0
   19a8c:	add	r0, r6, r0, lsl #3
   19a90:	lsl	r2, r2, #3
   19a94:	bl	11740 <memset@plt>
   19a98:	ldr	r3, [sp, #44]	; 0x2c
   19a9c:	str	r3, [r4, #4]
   19aa0:	ldr	r4, [pc, #268]	; 19bb4 <lchmod@@Base+0x2528>
   19aa4:	add	r3, r6, r5, lsl #3
   19aa8:	str	r3, [sp, #32]
   19aac:	ldr	r7, [r3, #4]
   19ab0:	ldr	r0, [r4, #4]
   19ab4:	ldr	r3, [r4]
   19ab8:	ldr	r9, [r6, r5, lsl #3]
   19abc:	ldr	r1, [r4, #44]	; 0x2c
   19ac0:	ldr	r2, [r4, #40]	; 0x28
   19ac4:	orr	r0, r0, #1
   19ac8:	str	r3, [sp]
   19acc:	add	r3, r4, #8
   19ad0:	str	r0, [sp, #36]	; 0x24
   19ad4:	str	r0, [sp, #4]
   19ad8:	str	r1, [sp, #16]
   19adc:	str	r2, [sp, #12]
   19ae0:	str	r3, [sp, #8]
   19ae4:	mov	r0, r7
   19ae8:	mov	r1, r9
   19aec:	mov	r3, fp
   19af0:	mov	r2, sl
   19af4:	bl	17f24 <lchmod@@Base+0x898>
   19af8:	cmp	r9, r0
   19afc:	bhi	19b68 <lchmod@@Base+0x24dc>
   19b00:	add	r3, r4, #48	; 0x30
   19b04:	add	r9, r0, #1
   19b08:	cmp	r7, r3
   19b0c:	str	r9, [r6, r5, lsl #3]
   19b10:	beq	19b1c <lchmod@@Base+0x2490>
   19b14:	mov	r0, r7
   19b18:	bl	1355c <__assert_fail@plt+0x1c90>
   19b1c:	mov	r0, r9
   19b20:	bl	1caf4 <lchmod@@Base+0x5468>
   19b24:	ldr	ip, [sp, #32]
   19b28:	ldr	lr, [r4, #44]	; 0x2c
   19b2c:	ldr	r5, [r4, #40]	; 0x28
   19b30:	mov	r3, fp
   19b34:	mov	r2, sl
   19b38:	mov	r1, r9
   19b3c:	str	r0, [ip, #4]
   19b40:	ldr	ip, [r4]
   19b44:	ldr	r4, [pc, #108]	; 19bb8 <lchmod@@Base+0x252c>
   19b48:	str	lr, [sp, #16]
   19b4c:	str	r4, [sp, #8]
   19b50:	ldr	r4, [sp, #36]	; 0x24
   19b54:	str	r5, [sp, #12]
   19b58:	str	r4, [sp, #4]
   19b5c:	str	ip, [sp]
   19b60:	mov	r7, r0
   19b64:	bl	17f24 <lchmod@@Base+0x898>
   19b68:	ldr	r3, [sp, #28]
   19b6c:	mov	r0, r7
   19b70:	str	r3, [r8]
   19b74:	add	sp, sp, #52	; 0x34
   19b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b7c:	mov	r3, #8
   19b80:	sub	r2, r5, r2
   19b84:	str	r3, [sp]
   19b88:	add	r1, sp, #44	; 0x2c
   19b8c:	add	r2, r2, #1
   19b90:	mvn	r3, #-2147483648	; 0x80000000
   19b94:	bl	1cd10 <lchmod@@Base+0x5684>
   19b98:	mov	r6, r0
   19b9c:	ldm	r7, {r0, r1}
   19ba0:	str	r6, [r4]
   19ba4:	stm	r6, {r0, r1}
   19ba8:	b	19a7c <lchmod@@Base+0x23f0>
   19bac:	bl	11878 <abort@plt>
   19bb0:	muleq	r3, r0, r1
   19bb4:	strdeq	r0, [r3], -ip
   19bb8:	andeq	r0, r3, r4, lsl #4
   19bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19bc0:	sub	sp, sp, #44	; 0x2c
   19bc4:	mov	sl, r0
   19bc8:	bl	1171c <__errno_location@plt>
   19bcc:	ldr	r4, [pc, #352]	; 19d34 <lchmod@@Base+0x26a8>
   19bd0:	ldr	r2, [r4, #4]
   19bd4:	ldr	r5, [r4]
   19bd8:	cmp	r2, #0
   19bdc:	ldr	r3, [r0]
   19be0:	mov	r8, r0
   19be4:	str	r3, [sp, #28]
   19be8:	bgt	19c44 <lchmod@@Base+0x25b8>
   19bec:	add	r6, r4, #8
   19bf0:	cmp	r5, r6
   19bf4:	str	r2, [sp, #36]	; 0x24
   19bf8:	beq	19d04 <lchmod@@Base+0x2678>
   19bfc:	mov	r3, #8
   19c00:	mov	r0, r5
   19c04:	str	r3, [sp]
   19c08:	rsb	r2, r2, #1
   19c0c:	mvn	r3, #-2147483648	; 0x80000000
   19c10:	add	r1, sp, #36	; 0x24
   19c14:	bl	1cd10 <lchmod@@Base+0x5684>
   19c18:	mov	r5, r0
   19c1c:	str	r0, [r4]
   19c20:	ldr	r0, [r4, #4]
   19c24:	ldr	r2, [sp, #36]	; 0x24
   19c28:	mov	r1, #0
   19c2c:	sub	r2, r2, r0
   19c30:	add	r0, r5, r0, lsl #3
   19c34:	lsl	r2, r2, #3
   19c38:	bl	11740 <memset@plt>
   19c3c:	ldr	r3, [sp, #36]	; 0x24
   19c40:	str	r3, [r4, #4]
   19c44:	ldr	r4, [pc, #236]	; 19d38 <lchmod@@Base+0x26ac>
   19c48:	ldr	r9, [r5]
   19c4c:	ldr	r6, [r5, #4]
   19c50:	ldr	r7, [r4, #4]
   19c54:	ldr	r1, [r4, #44]	; 0x2c
   19c58:	ldr	r2, [r4, #40]	; 0x28
   19c5c:	ldr	r3, [r4]
   19c60:	orr	r7, r7, #1
   19c64:	add	fp, r4, #8
   19c68:	str	r1, [sp, #16]
   19c6c:	str	r2, [sp, #12]
   19c70:	str	r3, [sp]
   19c74:	str	r7, [sp, #4]
   19c78:	str	fp, [sp, #8]
   19c7c:	mov	r1, r9
   19c80:	mov	r0, r6
   19c84:	mvn	r3, #0
   19c88:	mov	r2, sl
   19c8c:	bl	17f24 <lchmod@@Base+0x898>
   19c90:	cmp	r9, r0
   19c94:	bhi	19cf0 <lchmod@@Base+0x2664>
   19c98:	add	r3, r4, #48	; 0x30
   19c9c:	add	r9, r0, #1
   19ca0:	cmp	r6, r3
   19ca4:	str	r9, [r5]
   19ca8:	beq	19cb4 <lchmod@@Base+0x2628>
   19cac:	mov	r0, r6
   19cb0:	bl	1355c <__assert_fail@plt+0x1c90>
   19cb4:	mov	r0, r9
   19cb8:	bl	1caf4 <lchmod@@Base+0x5468>
   19cbc:	ldr	ip, [r4, #44]	; 0x2c
   19cc0:	ldr	r3, [r4]
   19cc4:	ldr	lr, [r4, #40]	; 0x28
   19cc8:	mov	r2, sl
   19ccc:	mov	r1, r9
   19cd0:	str	r0, [r5, #4]
   19cd4:	str	r3, [sp]
   19cd8:	stmib	sp, {r7, fp}
   19cdc:	str	ip, [sp, #16]
   19ce0:	str	lr, [sp, #12]
   19ce4:	mvn	r3, #0
   19ce8:	mov	r6, r0
   19cec:	bl	17f24 <lchmod@@Base+0x898>
   19cf0:	ldr	r3, [sp, #28]
   19cf4:	mov	r0, r6
   19cf8:	str	r3, [r8]
   19cfc:	add	sp, sp, #44	; 0x2c
   19d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d04:	mov	r3, #8
   19d08:	str	r3, [sp]
   19d0c:	add	r1, sp, #36	; 0x24
   19d10:	rsb	r2, r2, #1
   19d14:	mvn	r3, #-2147483648	; 0x80000000
   19d18:	mov	r0, #0
   19d1c:	bl	1cd10 <lchmod@@Base+0x5684>
   19d20:	mov	r5, r0
   19d24:	ldm	r6, {r0, r1}
   19d28:	str	r5, [r4]
   19d2c:	stm	r5, {r0, r1}
   19d30:	b	19c20 <lchmod@@Base+0x2594>
   19d34:	muleq	r3, r0, r1
   19d38:	strdeq	r0, [r3], -ip
   19d3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d40:	sub	sp, sp, #44	; 0x2c
   19d44:	mov	r9, r0
   19d48:	mov	sl, r1
   19d4c:	bl	1171c <__errno_location@plt>
   19d50:	ldr	r4, [pc, #364]	; 19ec4 <lchmod@@Base+0x2838>
   19d54:	ldr	r2, [r4, #4]
   19d58:	ldr	r5, [r4]
   19d5c:	cmp	r2, #0
   19d60:	ldr	r3, [r0]
   19d64:	mov	r7, r0
   19d68:	str	r3, [sp, #24]
   19d6c:	bgt	19dc8 <lchmod@@Base+0x273c>
   19d70:	add	r6, r4, #8
   19d74:	cmp	r5, r6
   19d78:	str	r2, [sp, #36]	; 0x24
   19d7c:	beq	19e94 <lchmod@@Base+0x2808>
   19d80:	mov	r3, #8
   19d84:	mov	r0, r5
   19d88:	str	r3, [sp]
   19d8c:	rsb	r2, r2, #1
   19d90:	mvn	r3, #-2147483648	; 0x80000000
   19d94:	add	r1, sp, #36	; 0x24
   19d98:	bl	1cd10 <lchmod@@Base+0x5684>
   19d9c:	mov	r5, r0
   19da0:	str	r0, [r4]
   19da4:	ldr	r0, [r4, #4]
   19da8:	ldr	r2, [sp, #36]	; 0x24
   19dac:	mov	r1, #0
   19db0:	sub	r2, r2, r0
   19db4:	add	r0, r5, r0, lsl #3
   19db8:	lsl	r2, r2, #3
   19dbc:	bl	11740 <memset@plt>
   19dc0:	ldr	r3, [sp, #36]	; 0x24
   19dc4:	str	r3, [r4, #4]
   19dc8:	ldr	r4, [pc, #248]	; 19ec8 <lchmod@@Base+0x283c>
   19dcc:	ldr	r8, [r5]
   19dd0:	ldr	r6, [r5, #4]
   19dd4:	ldr	r0, [r4, #4]
   19dd8:	ldr	r1, [r4, #44]	; 0x2c
   19ddc:	ldr	r2, [r4, #40]	; 0x28
   19de0:	ldr	r3, [r4]
   19de4:	orr	r0, r0, #1
   19de8:	add	fp, r4, #8
   19dec:	str	r0, [sp, #28]
   19df0:	str	r0, [sp, #4]
   19df4:	str	r1, [sp, #16]
   19df8:	str	r2, [sp, #12]
   19dfc:	str	r3, [sp]
   19e00:	str	fp, [sp, #8]
   19e04:	mov	r1, r8
   19e08:	mov	r0, r6
   19e0c:	mov	r3, sl
   19e10:	mov	r2, r9
   19e14:	bl	17f24 <lchmod@@Base+0x898>
   19e18:	cmp	r8, r0
   19e1c:	bhi	19e80 <lchmod@@Base+0x27f4>
   19e20:	add	r3, r4, #48	; 0x30
   19e24:	add	r8, r0, #1
   19e28:	cmp	r6, r3
   19e2c:	str	r8, [r5]
   19e30:	beq	19e3c <lchmod@@Base+0x27b0>
   19e34:	mov	r0, r6
   19e38:	bl	1355c <__assert_fail@plt+0x1c90>
   19e3c:	mov	r0, r8
   19e40:	bl	1caf4 <lchmod@@Base+0x5468>
   19e44:	ldr	lr, [r4, #44]	; 0x2c
   19e48:	ldr	ip, [r4]
   19e4c:	mov	r3, sl
   19e50:	mov	r2, r9
   19e54:	mov	r1, r8
   19e58:	str	r0, [r5, #4]
   19e5c:	ldr	r5, [r4, #40]	; 0x28
   19e60:	ldr	r4, [sp, #28]
   19e64:	str	fp, [sp, #8]
   19e68:	str	r4, [sp, #4]
   19e6c:	str	lr, [sp, #16]
   19e70:	str	r5, [sp, #12]
   19e74:	str	ip, [sp]
   19e78:	mov	r6, r0
   19e7c:	bl	17f24 <lchmod@@Base+0x898>
   19e80:	ldr	r3, [sp, #24]
   19e84:	mov	r0, r6
   19e88:	str	r3, [r7]
   19e8c:	add	sp, sp, #44	; 0x2c
   19e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e94:	mov	r3, #8
   19e98:	str	r3, [sp]
   19e9c:	add	r1, sp, #36	; 0x24
   19ea0:	rsb	r2, r2, #1
   19ea4:	mvn	r3, #-2147483648	; 0x80000000
   19ea8:	mov	r0, #0
   19eac:	bl	1cd10 <lchmod@@Base+0x5684>
   19eb0:	mov	r5, r0
   19eb4:	ldm	r6, {r0, r1}
   19eb8:	str	r5, [r4]
   19ebc:	stm	r5, {r0, r1}
   19ec0:	b	19da4 <lchmod@@Base+0x2718>
   19ec4:	muleq	r3, r0, r1
   19ec8:	strdeq	r0, [r3], -ip
   19ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ed0:	sub	sp, sp, #132	; 0x84
   19ed4:	mov	r5, r1
   19ed8:	mov	r4, r0
   19edc:	mov	r9, r2
   19ee0:	add	r0, sp, #80	; 0x50
   19ee4:	mov	r2, #48	; 0x30
   19ee8:	mov	r1, #0
   19eec:	bl	11740 <memset@plt>
   19ef0:	cmp	r5, #10
   19ef4:	beq	1a0ac <lchmod@@Base+0x2a20>
   19ef8:	add	lr, sp, #80	; 0x50
   19efc:	str	r5, [sp, #80]	; 0x50
   19f00:	ldm	lr!, {r0, r1, r2, r3}
   19f04:	add	ip, sp, #32
   19f08:	ldr	r6, [pc, #416]	; 1a0b0 <lchmod@@Base+0x2a24>
   19f0c:	stmia	ip!, {r0, r1, r2, r3}
   19f10:	ldm	lr!, {r0, r1, r2, r3}
   19f14:	stmia	ip!, {r0, r1, r2, r3}
   19f18:	ldm	lr, {r0, r1, r2, r3}
   19f1c:	stm	ip, {r0, r1, r2, r3}
   19f20:	bl	1171c <__errno_location@plt>
   19f24:	cmn	r4, #-2147483647	; 0x80000001
   19f28:	ldr	r5, [r6]
   19f2c:	mov	r7, r0
   19f30:	movne	r0, #0
   19f34:	moveq	r0, #1
   19f38:	ldr	r3, [r7]
   19f3c:	orrs	r0, r0, r4, lsr #31
   19f40:	str	r3, [sp, #24]
   19f44:	bne	1a0ac <lchmod@@Base+0x2a20>
   19f48:	ldr	r2, [r6, #4]
   19f4c:	cmp	r4, r2
   19f50:	blt	19fb0 <lchmod@@Base+0x2924>
   19f54:	add	r8, r6, #8
   19f58:	cmp	r5, r8
   19f5c:	str	r2, [sp, #80]	; 0x50
   19f60:	beq	1a07c <lchmod@@Base+0x29f0>
   19f64:	mov	r3, #8
   19f68:	sub	r2, r4, r2
   19f6c:	mov	r0, r5
   19f70:	str	r3, [sp]
   19f74:	add	r2, r2, #1
   19f78:	add	r1, sp, #80	; 0x50
   19f7c:	mvn	r3, #-2147483648	; 0x80000000
   19f80:	bl	1cd10 <lchmod@@Base+0x5684>
   19f84:	mov	r5, r0
   19f88:	str	r0, [r6]
   19f8c:	ldr	r0, [r6, #4]
   19f90:	ldr	r2, [sp, #80]	; 0x50
   19f94:	mov	r1, #0
   19f98:	sub	r2, r2, r0
   19f9c:	add	r0, r5, r0, lsl #3
   19fa0:	lsl	r2, r2, #3
   19fa4:	bl	11740 <memset@plt>
   19fa8:	ldr	r3, [sp, #80]	; 0x50
   19fac:	str	r3, [r6, #4]
   19fb0:	add	fp, r5, r4, lsl #3
   19fb4:	ldr	r1, [sp, #36]	; 0x24
   19fb8:	ldr	r8, [r5, r4, lsl #3]
   19fbc:	ldr	r6, [fp, #4]
   19fc0:	ldr	r2, [sp, #72]	; 0x48
   19fc4:	ldr	r3, [sp, #32]
   19fc8:	ldr	ip, [sp, #76]	; 0x4c
   19fcc:	orr	r1, r1, #1
   19fd0:	add	sl, sp, #40	; 0x28
   19fd4:	str	r1, [sp, #28]
   19fd8:	str	r1, [sp, #4]
   19fdc:	str	r2, [sp, #12]
   19fe0:	str	r3, [sp]
   19fe4:	mov	r0, r6
   19fe8:	mov	r1, r8
   19fec:	str	ip, [sp, #16]
   19ff0:	str	sl, [sp, #8]
   19ff4:	mvn	r3, #0
   19ff8:	mov	r2, r9
   19ffc:	bl	17f24 <lchmod@@Base+0x898>
   1a000:	cmp	r8, r0
   1a004:	bhi	1a068 <lchmod@@Base+0x29dc>
   1a008:	ldr	r3, [pc, #164]	; 1a0b4 <lchmod@@Base+0x2a28>
   1a00c:	add	r8, r0, #1
   1a010:	cmp	r6, r3
   1a014:	str	r8, [r5, r4, lsl #3]
   1a018:	beq	1a024 <lchmod@@Base+0x2998>
   1a01c:	mov	r0, r6
   1a020:	bl	1355c <__assert_fail@plt+0x1c90>
   1a024:	mov	r0, r8
   1a028:	bl	1caf4 <lchmod@@Base+0x5468>
   1a02c:	ldr	lr, [sp, #76]	; 0x4c
   1a030:	ldr	r3, [sp, #32]
   1a034:	ldr	ip, [sp, #72]	; 0x48
   1a038:	ldr	r4, [sp, #28]
   1a03c:	mov	r2, r9
   1a040:	mov	r1, r8
   1a044:	str	r0, [fp, #4]
   1a048:	str	r3, [sp]
   1a04c:	str	sl, [sp, #8]
   1a050:	str	r4, [sp, #4]
   1a054:	str	lr, [sp, #16]
   1a058:	str	ip, [sp, #12]
   1a05c:	mvn	r3, #0
   1a060:	mov	r6, r0
   1a064:	bl	17f24 <lchmod@@Base+0x898>
   1a068:	ldr	r3, [sp, #24]
   1a06c:	mov	r0, r6
   1a070:	str	r3, [r7]
   1a074:	add	sp, sp, #132	; 0x84
   1a078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a07c:	mov	r3, #8
   1a080:	sub	r2, r4, r2
   1a084:	add	r1, sp, #80	; 0x50
   1a088:	str	r3, [sp]
   1a08c:	add	r2, r2, #1
   1a090:	mvn	r3, #-2147483648	; 0x80000000
   1a094:	bl	1cd10 <lchmod@@Base+0x5684>
   1a098:	mov	r5, r0
   1a09c:	ldm	r8, {r0, r1}
   1a0a0:	str	r5, [r6]
   1a0a4:	stm	r5, {r0, r1}
   1a0a8:	b	19f8c <lchmod@@Base+0x2900>
   1a0ac:	bl	11878 <abort@plt>
   1a0b0:	muleq	r3, r0, r1
   1a0b4:	andeq	r0, r3, ip, lsr #4
   1a0b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0bc:	sub	sp, sp, #132	; 0x84
   1a0c0:	mov	r5, r1
   1a0c4:	mov	r4, r0
   1a0c8:	mov	r9, r2
   1a0cc:	add	r0, sp, #80	; 0x50
   1a0d0:	mov	r2, #48	; 0x30
   1a0d4:	mov	r1, #0
   1a0d8:	mov	sl, r3
   1a0dc:	bl	11740 <memset@plt>
   1a0e0:	cmp	r5, #10
   1a0e4:	beq	1a2a0 <lchmod@@Base+0x2c14>
   1a0e8:	add	lr, sp, #80	; 0x50
   1a0ec:	str	r5, [sp, #80]	; 0x50
   1a0f0:	ldm	lr!, {r0, r1, r2, r3}
   1a0f4:	add	ip, sp, #32
   1a0f8:	ldr	r6, [pc, #420]	; 1a2a4 <lchmod@@Base+0x2c18>
   1a0fc:	stmia	ip!, {r0, r1, r2, r3}
   1a100:	ldm	lr!, {r0, r1, r2, r3}
   1a104:	stmia	ip!, {r0, r1, r2, r3}
   1a108:	ldm	lr, {r0, r1, r2, r3}
   1a10c:	stm	ip, {r0, r1, r2, r3}
   1a110:	bl	1171c <__errno_location@plt>
   1a114:	cmn	r4, #-2147483647	; 0x80000001
   1a118:	ldr	r5, [r6]
   1a11c:	mov	r7, r0
   1a120:	movne	r0, #0
   1a124:	moveq	r0, #1
   1a128:	ldr	r3, [r7]
   1a12c:	orrs	r0, r0, r4, lsr #31
   1a130:	str	r3, [sp, #24]
   1a134:	bne	1a2a0 <lchmod@@Base+0x2c14>
   1a138:	ldr	r2, [r6, #4]
   1a13c:	cmp	r4, r2
   1a140:	blt	1a1a0 <lchmod@@Base+0x2b14>
   1a144:	add	r8, r6, #8
   1a148:	cmp	r5, r8
   1a14c:	str	r2, [sp, #80]	; 0x50
   1a150:	beq	1a270 <lchmod@@Base+0x2be4>
   1a154:	mov	r3, #8
   1a158:	sub	r2, r4, r2
   1a15c:	mov	r0, r5
   1a160:	str	r3, [sp]
   1a164:	add	r2, r2, #1
   1a168:	add	r1, sp, #80	; 0x50
   1a16c:	mvn	r3, #-2147483648	; 0x80000000
   1a170:	bl	1cd10 <lchmod@@Base+0x5684>
   1a174:	mov	r5, r0
   1a178:	str	r0, [r6]
   1a17c:	ldr	r0, [r6, #4]
   1a180:	ldr	r2, [sp, #80]	; 0x50
   1a184:	mov	r1, #0
   1a188:	sub	r2, r2, r0
   1a18c:	add	r0, r5, r0, lsl #3
   1a190:	lsl	r2, r2, #3
   1a194:	bl	11740 <memset@plt>
   1a198:	ldr	r3, [sp, #80]	; 0x50
   1a19c:	str	r3, [r6, #4]
   1a1a0:	add	fp, r5, r4, lsl #3
   1a1a4:	ldr	r3, [sp, #32]
   1a1a8:	ldr	r1, [sp, #36]	; 0x24
   1a1ac:	ldr	r8, [r5, r4, lsl #3]
   1a1b0:	ldr	r6, [fp, #4]
   1a1b4:	ldr	r2, [sp, #72]	; 0x48
   1a1b8:	ldr	ip, [sp, #76]	; 0x4c
   1a1bc:	orr	r1, r1, #1
   1a1c0:	str	r3, [sp]
   1a1c4:	add	r3, sp, #40	; 0x28
   1a1c8:	str	r1, [sp, #28]
   1a1cc:	str	r1, [sp, #4]
   1a1d0:	str	r2, [sp, #12]
   1a1d4:	str	r3, [sp, #8]
   1a1d8:	mov	r0, r6
   1a1dc:	mov	r1, r8
   1a1e0:	str	ip, [sp, #16]
   1a1e4:	mov	r3, sl
   1a1e8:	mov	r2, r9
   1a1ec:	bl	17f24 <lchmod@@Base+0x898>
   1a1f0:	cmp	r8, r0
   1a1f4:	bhi	1a25c <lchmod@@Base+0x2bd0>
   1a1f8:	ldr	r3, [pc, #168]	; 1a2a8 <lchmod@@Base+0x2c1c>
   1a1fc:	add	r8, r0, #1
   1a200:	cmp	r6, r3
   1a204:	str	r8, [r5, r4, lsl #3]
   1a208:	beq	1a214 <lchmod@@Base+0x2b88>
   1a20c:	mov	r0, r6
   1a210:	bl	1355c <__assert_fail@plt+0x1c90>
   1a214:	mov	r0, r8
   1a218:	bl	1caf4 <lchmod@@Base+0x5468>
   1a21c:	add	lr, sp, #40	; 0x28
   1a220:	ldr	ip, [sp, #76]	; 0x4c
   1a224:	ldr	r4, [sp, #72]	; 0x48
   1a228:	ldr	r5, [sp, #28]
   1a22c:	mov	r3, sl
   1a230:	mov	r2, r9
   1a234:	mov	r1, r8
   1a238:	str	r0, [fp, #4]
   1a23c:	str	lr, [sp, #8]
   1a240:	ldr	lr, [sp, #32]
   1a244:	str	r5, [sp, #4]
   1a248:	str	ip, [sp, #16]
   1a24c:	str	r4, [sp, #12]
   1a250:	str	lr, [sp]
   1a254:	mov	r6, r0
   1a258:	bl	17f24 <lchmod@@Base+0x898>
   1a25c:	ldr	r3, [sp, #24]
   1a260:	mov	r0, r6
   1a264:	str	r3, [r7]
   1a268:	add	sp, sp, #132	; 0x84
   1a26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a270:	mov	r3, #8
   1a274:	sub	r2, r4, r2
   1a278:	add	r1, sp, #80	; 0x50
   1a27c:	str	r3, [sp]
   1a280:	add	r2, r2, #1
   1a284:	mvn	r3, #-2147483648	; 0x80000000
   1a288:	bl	1cd10 <lchmod@@Base+0x5684>
   1a28c:	mov	r5, r0
   1a290:	ldm	r8, {r0, r1}
   1a294:	str	r5, [r6]
   1a298:	stm	r5, {r0, r1}
   1a29c:	b	1a17c <lchmod@@Base+0x2af0>
   1a2a0:	bl	11878 <abort@plt>
   1a2a4:	muleq	r3, r0, r1
   1a2a8:	andeq	r0, r3, ip, lsr #4
   1a2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2b0:	sub	sp, sp, #124	; 0x7c
   1a2b4:	mov	r4, r0
   1a2b8:	mov	r9, r1
   1a2bc:	add	r0, sp, #72	; 0x48
   1a2c0:	mov	r2, #48	; 0x30
   1a2c4:	mov	r1, #0
   1a2c8:	bl	11740 <memset@plt>
   1a2cc:	cmp	r4, #10
   1a2d0:	beq	1a45c <lchmod@@Base+0x2dd0>
   1a2d4:	add	lr, sp, #72	; 0x48
   1a2d8:	str	r4, [sp, #72]	; 0x48
   1a2dc:	ldm	lr!, {r0, r1, r2, r3}
   1a2e0:	add	ip, sp, #24
   1a2e4:	ldr	r5, [pc, #372]	; 1a460 <lchmod@@Base+0x2dd4>
   1a2e8:	stmia	ip!, {r0, r1, r2, r3}
   1a2ec:	ldm	lr!, {r0, r1, r2, r3}
   1a2f0:	stmia	ip!, {r0, r1, r2, r3}
   1a2f4:	ldm	lr, {r0, r1, r2, r3}
   1a2f8:	stm	ip, {r0, r1, r2, r3}
   1a2fc:	bl	1171c <__errno_location@plt>
   1a300:	ldr	r2, [r5, #4]
   1a304:	ldr	r4, [r5]
   1a308:	cmp	r2, #0
   1a30c:	mov	r7, r0
   1a310:	ldr	fp, [r0]
   1a314:	bgt	1a370 <lchmod@@Base+0x2ce4>
   1a318:	add	r6, r5, #8
   1a31c:	cmp	r4, r6
   1a320:	str	r2, [sp, #72]	; 0x48
   1a324:	beq	1a42c <lchmod@@Base+0x2da0>
   1a328:	mov	r3, #8
   1a32c:	mov	r0, r4
   1a330:	str	r3, [sp]
   1a334:	rsb	r2, r2, #1
   1a338:	add	r1, sp, #72	; 0x48
   1a33c:	mvn	r3, #-2147483648	; 0x80000000
   1a340:	bl	1cd10 <lchmod@@Base+0x5684>
   1a344:	mov	r4, r0
   1a348:	str	r0, [r5]
   1a34c:	ldr	r0, [r5, #4]
   1a350:	ldr	r2, [sp, #72]	; 0x48
   1a354:	mov	r1, #0
   1a358:	sub	r2, r2, r0
   1a35c:	add	r0, r4, r0, lsl #3
   1a360:	lsl	r2, r2, #3
   1a364:	bl	11740 <memset@plt>
   1a368:	ldr	r3, [sp, #72]	; 0x48
   1a36c:	str	r3, [r5, #4]
   1a370:	ldr	r6, [sp, #28]
   1a374:	ldr	r8, [r4]
   1a378:	ldr	r5, [r4, #4]
   1a37c:	ldr	r2, [sp, #64]	; 0x40
   1a380:	ldr	r3, [sp, #24]
   1a384:	ldr	ip, [sp, #68]	; 0x44
   1a388:	orr	r6, r6, #1
   1a38c:	add	sl, sp, #32
   1a390:	str	r2, [sp, #12]
   1a394:	str	r3, [sp]
   1a398:	str	r6, [sp, #4]
   1a39c:	mov	r1, r8
   1a3a0:	mov	r0, r5
   1a3a4:	str	ip, [sp, #16]
   1a3a8:	str	sl, [sp, #8]
   1a3ac:	mvn	r3, #0
   1a3b0:	mov	r2, r9
   1a3b4:	bl	17f24 <lchmod@@Base+0x898>
   1a3b8:	cmp	r8, r0
   1a3bc:	bhi	1a41c <lchmod@@Base+0x2d90>
   1a3c0:	ldr	r3, [pc, #156]	; 1a464 <lchmod@@Base+0x2dd8>
   1a3c4:	add	r8, r0, #1
   1a3c8:	cmp	r5, r3
   1a3cc:	str	r8, [r4]
   1a3d0:	beq	1a3dc <lchmod@@Base+0x2d50>
   1a3d4:	mov	r0, r5
   1a3d8:	bl	1355c <__assert_fail@plt+0x1c90>
   1a3dc:	mov	r0, r8
   1a3e0:	bl	1caf4 <lchmod@@Base+0x5468>
   1a3e4:	ldr	lr, [sp, #68]	; 0x44
   1a3e8:	ldr	r3, [sp, #24]
   1a3ec:	ldr	ip, [sp, #64]	; 0x40
   1a3f0:	mov	r2, r9
   1a3f4:	mov	r1, r8
   1a3f8:	str	r0, [r4, #4]
   1a3fc:	str	r3, [sp]
   1a400:	str	sl, [sp, #8]
   1a404:	str	r6, [sp, #4]
   1a408:	str	lr, [sp, #16]
   1a40c:	str	ip, [sp, #12]
   1a410:	mvn	r3, #0
   1a414:	mov	r5, r0
   1a418:	bl	17f24 <lchmod@@Base+0x898>
   1a41c:	mov	r0, r5
   1a420:	str	fp, [r7]
   1a424:	add	sp, sp, #124	; 0x7c
   1a428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a42c:	mov	r3, #8
   1a430:	add	r1, sp, #72	; 0x48
   1a434:	str	r3, [sp]
   1a438:	rsb	r2, r2, #1
   1a43c:	mvn	r3, #-2147483648	; 0x80000000
   1a440:	mov	r0, #0
   1a444:	bl	1cd10 <lchmod@@Base+0x5684>
   1a448:	mov	r4, r0
   1a44c:	ldm	r6, {r0, r1}
   1a450:	str	r4, [r5]
   1a454:	stm	r4, {r0, r1}
   1a458:	b	1a34c <lchmod@@Base+0x2cc0>
   1a45c:	bl	11878 <abort@plt>
   1a460:	muleq	r3, r0, r1
   1a464:	andeq	r0, r3, ip, lsr #4
   1a468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a46c:	sub	sp, sp, #132	; 0x84
   1a470:	mov	r4, r0
   1a474:	mov	r9, r1
   1a478:	mov	sl, r2
   1a47c:	add	r0, sp, #80	; 0x50
   1a480:	mov	r2, #48	; 0x30
   1a484:	mov	r1, #0
   1a488:	bl	11740 <memset@plt>
   1a48c:	cmp	r4, #10
   1a490:	beq	1a624 <lchmod@@Base+0x2f98>
   1a494:	add	lr, sp, #80	; 0x50
   1a498:	str	r4, [sp, #80]	; 0x50
   1a49c:	ldm	lr!, {r0, r1, r2, r3}
   1a4a0:	add	ip, sp, #32
   1a4a4:	ldr	r5, [pc, #380]	; 1a628 <lchmod@@Base+0x2f9c>
   1a4a8:	stmia	ip!, {r0, r1, r2, r3}
   1a4ac:	ldm	lr!, {r0, r1, r2, r3}
   1a4b0:	stmia	ip!, {r0, r1, r2, r3}
   1a4b4:	ldm	lr, {r0, r1, r2, r3}
   1a4b8:	stm	ip, {r0, r1, r2, r3}
   1a4bc:	bl	1171c <__errno_location@plt>
   1a4c0:	ldr	r2, [r5, #4]
   1a4c4:	ldr	r4, [r5]
   1a4c8:	cmp	r2, #0
   1a4cc:	ldr	r3, [r0]
   1a4d0:	mov	r7, r0
   1a4d4:	str	r3, [sp, #28]
   1a4d8:	bgt	1a534 <lchmod@@Base+0x2ea8>
   1a4dc:	add	r6, r5, #8
   1a4e0:	cmp	r4, r6
   1a4e4:	str	r2, [sp, #80]	; 0x50
   1a4e8:	beq	1a5f4 <lchmod@@Base+0x2f68>
   1a4ec:	mov	r3, #8
   1a4f0:	mov	r0, r4
   1a4f4:	str	r3, [sp]
   1a4f8:	rsb	r2, r2, #1
   1a4fc:	add	r1, sp, #80	; 0x50
   1a500:	mvn	r3, #-2147483648	; 0x80000000
   1a504:	bl	1cd10 <lchmod@@Base+0x5684>
   1a508:	mov	r4, r0
   1a50c:	str	r0, [r5]
   1a510:	ldr	r0, [r5, #4]
   1a514:	ldr	r2, [sp, #80]	; 0x50
   1a518:	mov	r1, #0
   1a51c:	sub	r2, r2, r0
   1a520:	add	r0, r4, r0, lsl #3
   1a524:	lsl	r2, r2, #3
   1a528:	bl	11740 <memset@plt>
   1a52c:	ldr	r3, [sp, #80]	; 0x50
   1a530:	str	r3, [r5, #4]
   1a534:	ldr	r6, [sp, #36]	; 0x24
   1a538:	ldr	r8, [r4]
   1a53c:	ldr	r5, [r4, #4]
   1a540:	ldr	r2, [sp, #72]	; 0x48
   1a544:	ldr	r3, [sp, #32]
   1a548:	ldr	ip, [sp, #76]	; 0x4c
   1a54c:	orr	r6, r6, #1
   1a550:	add	fp, sp, #40	; 0x28
   1a554:	str	r2, [sp, #12]
   1a558:	str	r3, [sp]
   1a55c:	str	r6, [sp, #4]
   1a560:	mov	r1, r8
   1a564:	mov	r0, r5
   1a568:	str	ip, [sp, #16]
   1a56c:	str	fp, [sp, #8]
   1a570:	mov	r3, sl
   1a574:	mov	r2, r9
   1a578:	bl	17f24 <lchmod@@Base+0x898>
   1a57c:	cmp	r8, r0
   1a580:	bhi	1a5e0 <lchmod@@Base+0x2f54>
   1a584:	ldr	r3, [pc, #160]	; 1a62c <lchmod@@Base+0x2fa0>
   1a588:	add	r8, r0, #1
   1a58c:	cmp	r5, r3
   1a590:	str	r8, [r4]
   1a594:	beq	1a5a0 <lchmod@@Base+0x2f14>
   1a598:	mov	r0, r5
   1a59c:	bl	1355c <__assert_fail@plt+0x1c90>
   1a5a0:	mov	r0, r8
   1a5a4:	bl	1caf4 <lchmod@@Base+0x5468>
   1a5a8:	ldr	ip, [sp, #76]	; 0x4c
   1a5ac:	ldr	lr, [sp, #32]
   1a5b0:	mov	r3, sl
   1a5b4:	mov	r2, r9
   1a5b8:	mov	r1, r8
   1a5bc:	str	r0, [r4, #4]
   1a5c0:	ldr	r4, [sp, #72]	; 0x48
   1a5c4:	str	fp, [sp, #8]
   1a5c8:	str	r6, [sp, #4]
   1a5cc:	str	ip, [sp, #16]
   1a5d0:	str	r4, [sp, #12]
   1a5d4:	str	lr, [sp]
   1a5d8:	mov	r5, r0
   1a5dc:	bl	17f24 <lchmod@@Base+0x898>
   1a5e0:	ldr	r3, [sp, #28]
   1a5e4:	mov	r0, r5
   1a5e8:	str	r3, [r7]
   1a5ec:	add	sp, sp, #132	; 0x84
   1a5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5f4:	mov	r3, #8
   1a5f8:	add	r1, sp, #80	; 0x50
   1a5fc:	str	r3, [sp]
   1a600:	rsb	r2, r2, #1
   1a604:	mvn	r3, #-2147483648	; 0x80000000
   1a608:	mov	r0, #0
   1a60c:	bl	1cd10 <lchmod@@Base+0x5684>
   1a610:	mov	r4, r0
   1a614:	ldm	r6, {r0, r1}
   1a618:	str	r4, [r5]
   1a61c:	stm	r4, {r0, r1}
   1a620:	b	1a510 <lchmod@@Base+0x2e84>
   1a624:	bl	11878 <abort@plt>
   1a628:	muleq	r3, r0, r1
   1a62c:	andeq	r0, r3, ip, lsr #4
   1a630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a634:	mov	r4, r2
   1a638:	ldr	lr, [pc, #432]	; 1a7f0 <lchmod@@Base+0x3164>
   1a63c:	mov	sl, r0
   1a640:	mov	fp, r1
   1a644:	ldm	lr!, {r0, r1, r2, r3}
   1a648:	sub	sp, sp, #92	; 0x5c
   1a64c:	add	ip, sp, #40	; 0x28
   1a650:	lsr	r7, r4, #5
   1a654:	stmia	ip!, {r0, r1, r2, r3}
   1a658:	add	r6, sp, #48	; 0x30
   1a65c:	ldm	lr!, {r0, r1, r2, r3}
   1a660:	and	r4, r4, #31
   1a664:	ldr	r5, [pc, #392]	; 1a7f4 <lchmod@@Base+0x3168>
   1a668:	stmia	ip!, {r0, r1, r2, r3}
   1a66c:	ldm	lr, {r0, r1, r2, r3}
   1a670:	stm	ip, {r0, r1, r2, r3}
   1a674:	ldr	r2, [r6, r7, lsl #2]
   1a678:	lsr	r3, r2, r4
   1a67c:	eor	r3, r3, #1
   1a680:	and	r3, r3, #1
   1a684:	eor	r4, r2, r3, lsl r4
   1a688:	str	r4, [r6, r7, lsl #2]
   1a68c:	bl	1171c <__errno_location@plt>
   1a690:	ldr	r2, [r5, #4]
   1a694:	ldr	r4, [r5]
   1a698:	cmp	r2, #0
   1a69c:	ldr	r3, [r0]
   1a6a0:	mov	r8, r0
   1a6a4:	str	r3, [sp, #28]
   1a6a8:	bgt	1a704 <lchmod@@Base+0x3078>
   1a6ac:	add	r7, r5, #8
   1a6b0:	cmp	r4, r7
   1a6b4:	str	r2, [sp, #36]	; 0x24
   1a6b8:	beq	1a7c0 <lchmod@@Base+0x3134>
   1a6bc:	mov	r3, #8
   1a6c0:	mov	r0, r4
   1a6c4:	str	r3, [sp]
   1a6c8:	rsb	r2, r2, #1
   1a6cc:	mvn	r3, #-2147483648	; 0x80000000
   1a6d0:	add	r1, sp, #36	; 0x24
   1a6d4:	bl	1cd10 <lchmod@@Base+0x5684>
   1a6d8:	mov	r4, r0
   1a6dc:	str	r0, [r5]
   1a6e0:	ldr	r0, [r5, #4]
   1a6e4:	ldr	r2, [sp, #36]	; 0x24
   1a6e8:	mov	r1, #0
   1a6ec:	sub	r2, r2, r0
   1a6f0:	add	r0, r4, r0, lsl #3
   1a6f4:	lsl	r2, r2, #3
   1a6f8:	bl	11740 <memset@plt>
   1a6fc:	ldr	r3, [sp, #36]	; 0x24
   1a700:	str	r3, [r5, #4]
   1a704:	ldr	r7, [sp, #44]	; 0x2c
   1a708:	ldr	r9, [r4]
   1a70c:	ldr	r5, [r4, #4]
   1a710:	ldr	r2, [sp, #80]	; 0x50
   1a714:	ldr	r3, [sp, #40]	; 0x28
   1a718:	ldr	ip, [sp, #84]	; 0x54
   1a71c:	orr	r7, r7, #1
   1a720:	str	r2, [sp, #12]
   1a724:	str	r3, [sp]
   1a728:	str	r7, [sp, #4]
   1a72c:	str	r6, [sp, #8]
   1a730:	mov	r1, r9
   1a734:	mov	r0, r5
   1a738:	str	ip, [sp, #16]
   1a73c:	mov	r3, fp
   1a740:	mov	r2, sl
   1a744:	bl	17f24 <lchmod@@Base+0x898>
   1a748:	cmp	r9, r0
   1a74c:	bhi	1a7ac <lchmod@@Base+0x3120>
   1a750:	ldr	r3, [pc, #160]	; 1a7f8 <lchmod@@Base+0x316c>
   1a754:	add	r9, r0, #1
   1a758:	cmp	r5, r3
   1a75c:	str	r9, [r4]
   1a760:	beq	1a76c <lchmod@@Base+0x30e0>
   1a764:	mov	r0, r5
   1a768:	bl	1355c <__assert_fail@plt+0x1c90>
   1a76c:	mov	r0, r9
   1a770:	bl	1caf4 <lchmod@@Base+0x5468>
   1a774:	ldr	ip, [sp, #84]	; 0x54
   1a778:	ldr	lr, [sp, #40]	; 0x28
   1a77c:	mov	r3, fp
   1a780:	mov	r2, sl
   1a784:	mov	r1, r9
   1a788:	str	r0, [r4, #4]
   1a78c:	ldr	r4, [sp, #80]	; 0x50
   1a790:	str	r6, [sp, #8]
   1a794:	str	r7, [sp, #4]
   1a798:	str	ip, [sp, #16]
   1a79c:	str	r4, [sp, #12]
   1a7a0:	str	lr, [sp]
   1a7a4:	mov	r5, r0
   1a7a8:	bl	17f24 <lchmod@@Base+0x898>
   1a7ac:	ldr	r3, [sp, #28]
   1a7b0:	mov	r0, r5
   1a7b4:	str	r3, [r8]
   1a7b8:	add	sp, sp, #92	; 0x5c
   1a7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7c0:	mov	r3, #8
   1a7c4:	str	r3, [sp]
   1a7c8:	add	r1, sp, #36	; 0x24
   1a7cc:	rsb	r2, r2, #1
   1a7d0:	mvn	r3, #-2147483648	; 0x80000000
   1a7d4:	mov	r0, #0
   1a7d8:	bl	1cd10 <lchmod@@Base+0x5684>
   1a7dc:	mov	r4, r0
   1a7e0:	ldm	r7, {r0, r1}
   1a7e4:	str	r4, [r5]
   1a7e8:	stm	r4, {r0, r1}
   1a7ec:	b	1a6e0 <lchmod@@Base+0x3054>
   1a7f0:	strdeq	r0, [r3], -ip
   1a7f4:	muleq	r3, r0, r1
   1a7f8:	andeq	r0, r3, ip, lsr #4
   1a7fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a800:	mov	r4, r1
   1a804:	ldr	lr, [pc, #420]	; 1a9b0 <lchmod@@Base+0x3324>
   1a808:	mov	r6, r0
   1a80c:	sub	sp, sp, #84	; 0x54
   1a810:	ldm	lr!, {r0, r1, r2, r3}
   1a814:	add	ip, sp, #32
   1a818:	lsr	r8, r4, #5
   1a81c:	add	r5, sp, #40	; 0x28
   1a820:	stmia	ip!, {r0, r1, r2, r3}
   1a824:	and	r4, r4, #31
   1a828:	ldm	lr!, {r0, r1, r2, r3}
   1a82c:	ldr	r7, [pc, #384]	; 1a9b4 <lchmod@@Base+0x3328>
   1a830:	stmia	ip!, {r0, r1, r2, r3}
   1a834:	ldm	lr, {r0, r1, r2, r3}
   1a838:	stm	ip, {r0, r1, r2, r3}
   1a83c:	ldr	r2, [r5, r8, lsl #2]
   1a840:	lsr	r3, r2, r4
   1a844:	eor	r3, r3, #1
   1a848:	and	r3, r3, #1
   1a84c:	eor	r4, r2, r3, lsl r4
   1a850:	str	r4, [r5, r8, lsl #2]
   1a854:	bl	1171c <__errno_location@plt>
   1a858:	ldr	r2, [r7, #4]
   1a85c:	ldr	r4, [r7]
   1a860:	cmp	r2, #0
   1a864:	mov	r9, r0
   1a868:	ldr	sl, [r0]
   1a86c:	bgt	1a8c8 <lchmod@@Base+0x323c>
   1a870:	add	r8, r7, #8
   1a874:	cmp	r4, r8
   1a878:	str	r2, [sp, #28]
   1a87c:	beq	1a980 <lchmod@@Base+0x32f4>
   1a880:	mov	r3, #8
   1a884:	mov	r0, r4
   1a888:	str	r3, [sp]
   1a88c:	rsb	r2, r2, #1
   1a890:	mvn	r3, #-2147483648	; 0x80000000
   1a894:	add	r1, sp, #28
   1a898:	bl	1cd10 <lchmod@@Base+0x5684>
   1a89c:	mov	r4, r0
   1a8a0:	str	r0, [r7]
   1a8a4:	ldr	r0, [r7, #4]
   1a8a8:	ldr	r2, [sp, #28]
   1a8ac:	mov	r1, #0
   1a8b0:	sub	r2, r2, r0
   1a8b4:	add	r0, r4, r0, lsl #3
   1a8b8:	lsl	r2, r2, #3
   1a8bc:	bl	11740 <memset@plt>
   1a8c0:	ldr	r3, [sp, #28]
   1a8c4:	str	r3, [r7, #4]
   1a8c8:	ldr	r8, [sp, #36]	; 0x24
   1a8cc:	ldr	fp, [r4]
   1a8d0:	ldr	r7, [r4, #4]
   1a8d4:	ldr	r2, [sp, #72]	; 0x48
   1a8d8:	ldr	r3, [sp, #32]
   1a8dc:	ldr	ip, [sp, #76]	; 0x4c
   1a8e0:	orr	r8, r8, #1
   1a8e4:	str	r2, [sp, #12]
   1a8e8:	str	r3, [sp]
   1a8ec:	str	r8, [sp, #4]
   1a8f0:	str	r5, [sp, #8]
   1a8f4:	mov	r1, fp
   1a8f8:	mov	r0, r7
   1a8fc:	str	ip, [sp, #16]
   1a900:	mvn	r3, #0
   1a904:	mov	r2, r6
   1a908:	bl	17f24 <lchmod@@Base+0x898>
   1a90c:	cmp	fp, r0
   1a910:	bhi	1a970 <lchmod@@Base+0x32e4>
   1a914:	ldr	r3, [pc, #156]	; 1a9b8 <lchmod@@Base+0x332c>
   1a918:	add	fp, r0, #1
   1a91c:	cmp	r7, r3
   1a920:	str	fp, [r4]
   1a924:	beq	1a930 <lchmod@@Base+0x32a4>
   1a928:	mov	r0, r7
   1a92c:	bl	1355c <__assert_fail@plt+0x1c90>
   1a930:	mov	r0, fp
   1a934:	bl	1caf4 <lchmod@@Base+0x5468>
   1a938:	ldr	lr, [sp, #76]	; 0x4c
   1a93c:	ldr	r3, [sp, #32]
   1a940:	ldr	ip, [sp, #72]	; 0x48
   1a944:	mov	r2, r6
   1a948:	mov	r1, fp
   1a94c:	str	r0, [r4, #4]
   1a950:	str	r3, [sp]
   1a954:	str	r5, [sp, #8]
   1a958:	str	r8, [sp, #4]
   1a95c:	str	lr, [sp, #16]
   1a960:	str	ip, [sp, #12]
   1a964:	mvn	r3, #0
   1a968:	mov	r7, r0
   1a96c:	bl	17f24 <lchmod@@Base+0x898>
   1a970:	mov	r0, r7
   1a974:	str	sl, [r9]
   1a978:	add	sp, sp, #84	; 0x54
   1a97c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a980:	mov	r3, #8
   1a984:	str	r3, [sp]
   1a988:	add	r1, sp, #28
   1a98c:	rsb	r2, r2, #1
   1a990:	mvn	r3, #-2147483648	; 0x80000000
   1a994:	mov	r0, #0
   1a998:	bl	1cd10 <lchmod@@Base+0x5684>
   1a99c:	mov	r4, r0
   1a9a0:	ldm	r8, {r0, r1}
   1a9a4:	str	r4, [r7]
   1a9a8:	stm	r4, {r0, r1}
   1a9ac:	b	1a8a4 <lchmod@@Base+0x3218>
   1a9b0:	strdeq	r0, [r3], -ip
   1a9b4:	muleq	r3, r0, r1
   1a9b8:	andeq	r0, r3, ip, lsr #4
   1a9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9c0:	mov	r6, r0
   1a9c4:	ldr	lr, [pc, #404]	; 1ab60 <lchmod@@Base+0x34d4>
   1a9c8:	sub	sp, sp, #84	; 0x54
   1a9cc:	add	ip, sp, #32
   1a9d0:	ldm	lr!, {r0, r1, r2, r3}
   1a9d4:	ldr	r5, [pc, #392]	; 1ab64 <lchmod@@Base+0x34d8>
   1a9d8:	stmia	ip!, {r0, r1, r2, r3}
   1a9dc:	ldm	lr!, {r0, r1, r2, r3}
   1a9e0:	ldr	r4, [sp, #44]	; 0x2c
   1a9e4:	stmia	ip!, {r0, r1, r2, r3}
   1a9e8:	ldm	lr, {r0, r1, r2, r3}
   1a9ec:	mvn	lr, r4
   1a9f0:	and	lr, lr, #67108864	; 0x4000000
   1a9f4:	eor	lr, lr, r4
   1a9f8:	stm	ip, {r0, r1, r2, r3}
   1a9fc:	str	lr, [sp, #44]	; 0x2c
   1aa00:	bl	1171c <__errno_location@plt>
   1aa04:	ldr	r2, [r5, #4]
   1aa08:	ldr	r4, [r5]
   1aa0c:	cmp	r2, #0
   1aa10:	mov	r8, r0
   1aa14:	ldr	sl, [r0]
   1aa18:	bgt	1aa74 <lchmod@@Base+0x33e8>
   1aa1c:	add	r7, r5, #8
   1aa20:	cmp	r4, r7
   1aa24:	str	r2, [sp, #28]
   1aa28:	beq	1ab30 <lchmod@@Base+0x34a4>
   1aa2c:	mov	r3, #8
   1aa30:	mov	r0, r4
   1aa34:	str	r3, [sp]
   1aa38:	rsb	r2, r2, #1
   1aa3c:	mvn	r3, #-2147483648	; 0x80000000
   1aa40:	add	r1, sp, #28
   1aa44:	bl	1cd10 <lchmod@@Base+0x5684>
   1aa48:	mov	r4, r0
   1aa4c:	str	r0, [r5]
   1aa50:	ldr	r0, [r5, #4]
   1aa54:	ldr	r2, [sp, #28]
   1aa58:	mov	r1, #0
   1aa5c:	sub	r2, r2, r0
   1aa60:	add	r0, r4, r0, lsl #3
   1aa64:	lsl	r2, r2, #3
   1aa68:	bl	11740 <memset@plt>
   1aa6c:	ldr	r3, [sp, #28]
   1aa70:	str	r3, [r5, #4]
   1aa74:	ldr	r7, [sp, #36]	; 0x24
   1aa78:	ldr	r9, [r4]
   1aa7c:	ldr	r5, [r4, #4]
   1aa80:	ldr	r2, [sp, #72]	; 0x48
   1aa84:	ldr	r3, [sp, #32]
   1aa88:	ldr	ip, [sp, #76]	; 0x4c
   1aa8c:	orr	r7, r7, #1
   1aa90:	add	fp, sp, #40	; 0x28
   1aa94:	str	r2, [sp, #12]
   1aa98:	str	r3, [sp]
   1aa9c:	str	r7, [sp, #4]
   1aaa0:	mov	r1, r9
   1aaa4:	mov	r0, r5
   1aaa8:	str	ip, [sp, #16]
   1aaac:	str	fp, [sp, #8]
   1aab0:	mvn	r3, #0
   1aab4:	mov	r2, r6
   1aab8:	bl	17f24 <lchmod@@Base+0x898>
   1aabc:	cmp	r9, r0
   1aac0:	bhi	1ab20 <lchmod@@Base+0x3494>
   1aac4:	ldr	r3, [pc, #156]	; 1ab68 <lchmod@@Base+0x34dc>
   1aac8:	add	r9, r0, #1
   1aacc:	cmp	r5, r3
   1aad0:	str	r9, [r4]
   1aad4:	beq	1aae0 <lchmod@@Base+0x3454>
   1aad8:	mov	r0, r5
   1aadc:	bl	1355c <__assert_fail@plt+0x1c90>
   1aae0:	mov	r0, r9
   1aae4:	bl	1caf4 <lchmod@@Base+0x5468>
   1aae8:	ldr	lr, [sp, #76]	; 0x4c
   1aaec:	ldr	r3, [sp, #32]
   1aaf0:	ldr	ip, [sp, #72]	; 0x48
   1aaf4:	mov	r2, r6
   1aaf8:	mov	r1, r9
   1aafc:	str	r0, [r4, #4]
   1ab00:	str	r3, [sp]
   1ab04:	str	fp, [sp, #8]
   1ab08:	str	r7, [sp, #4]
   1ab0c:	str	lr, [sp, #16]
   1ab10:	str	ip, [sp, #12]
   1ab14:	mvn	r3, #0
   1ab18:	mov	r5, r0
   1ab1c:	bl	17f24 <lchmod@@Base+0x898>
   1ab20:	mov	r0, r5
   1ab24:	str	sl, [r8]
   1ab28:	add	sp, sp, #84	; 0x54
   1ab2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab30:	mov	r3, #8
   1ab34:	str	r3, [sp]
   1ab38:	add	r1, sp, #28
   1ab3c:	rsb	r2, r2, #1
   1ab40:	mvn	r3, #-2147483648	; 0x80000000
   1ab44:	mov	r0, #0
   1ab48:	bl	1cd10 <lchmod@@Base+0x5684>
   1ab4c:	mov	r4, r0
   1ab50:	ldm	r7, {r0, r1}
   1ab54:	str	r4, [r5]
   1ab58:	stm	r4, {r0, r1}
   1ab5c:	b	1aa50 <lchmod@@Base+0x33c4>
   1ab60:	strdeq	r0, [r3], -ip
   1ab64:	muleq	r3, r0, r1
   1ab68:	andeq	r0, r3, ip, lsr #4
   1ab6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab70:	mov	r9, r0
   1ab74:	ldr	lr, [pc, #416]	; 1ad1c <lchmod@@Base+0x3690>
   1ab78:	mov	sl, r1
   1ab7c:	sub	sp, sp, #92	; 0x5c
   1ab80:	ldm	lr!, {r0, r1, r2, r3}
   1ab84:	add	ip, sp, #40	; 0x28
   1ab88:	ldr	r5, [pc, #400]	; 1ad20 <lchmod@@Base+0x3694>
   1ab8c:	stmia	ip!, {r0, r1, r2, r3}
   1ab90:	ldm	lr!, {r0, r1, r2, r3}
   1ab94:	ldr	r4, [sp, #52]	; 0x34
   1ab98:	stmia	ip!, {r0, r1, r2, r3}
   1ab9c:	ldm	lr, {r0, r1, r2, r3}
   1aba0:	mvn	lr, r4
   1aba4:	and	lr, lr, #67108864	; 0x4000000
   1aba8:	eor	lr, lr, r4
   1abac:	stm	ip, {r0, r1, r2, r3}
   1abb0:	str	lr, [sp, #52]	; 0x34
   1abb4:	bl	1171c <__errno_location@plt>
   1abb8:	ldr	r2, [r5, #4]
   1abbc:	ldr	r4, [r5]
   1abc0:	cmp	r2, #0
   1abc4:	ldr	r3, [r0]
   1abc8:	mov	r7, r0
   1abcc:	str	r3, [sp, #28]
   1abd0:	bgt	1ac2c <lchmod@@Base+0x35a0>
   1abd4:	add	r6, r5, #8
   1abd8:	cmp	r4, r6
   1abdc:	str	r2, [sp, #36]	; 0x24
   1abe0:	beq	1acec <lchmod@@Base+0x3660>
   1abe4:	mov	r3, #8
   1abe8:	mov	r0, r4
   1abec:	str	r3, [sp]
   1abf0:	rsb	r2, r2, #1
   1abf4:	mvn	r3, #-2147483648	; 0x80000000
   1abf8:	add	r1, sp, #36	; 0x24
   1abfc:	bl	1cd10 <lchmod@@Base+0x5684>
   1ac00:	mov	r4, r0
   1ac04:	str	r0, [r5]
   1ac08:	ldr	r0, [r5, #4]
   1ac0c:	ldr	r2, [sp, #36]	; 0x24
   1ac10:	mov	r1, #0
   1ac14:	sub	r2, r2, r0
   1ac18:	add	r0, r4, r0, lsl #3
   1ac1c:	lsl	r2, r2, #3
   1ac20:	bl	11740 <memset@plt>
   1ac24:	ldr	r3, [sp, #36]	; 0x24
   1ac28:	str	r3, [r5, #4]
   1ac2c:	ldr	r6, [sp, #44]	; 0x2c
   1ac30:	ldr	r8, [r4]
   1ac34:	ldr	r5, [r4, #4]
   1ac38:	ldr	r2, [sp, #80]	; 0x50
   1ac3c:	ldr	r3, [sp, #40]	; 0x28
   1ac40:	ldr	ip, [sp, #84]	; 0x54
   1ac44:	orr	r6, r6, #1
   1ac48:	add	fp, sp, #48	; 0x30
   1ac4c:	str	r2, [sp, #12]
   1ac50:	str	r3, [sp]
   1ac54:	str	r6, [sp, #4]
   1ac58:	mov	r1, r8
   1ac5c:	mov	r0, r5
   1ac60:	str	ip, [sp, #16]
   1ac64:	str	fp, [sp, #8]
   1ac68:	mov	r3, sl
   1ac6c:	mov	r2, r9
   1ac70:	bl	17f24 <lchmod@@Base+0x898>
   1ac74:	cmp	r8, r0
   1ac78:	bhi	1acd8 <lchmod@@Base+0x364c>
   1ac7c:	ldr	r3, [pc, #160]	; 1ad24 <lchmod@@Base+0x3698>
   1ac80:	add	r8, r0, #1
   1ac84:	cmp	r5, r3
   1ac88:	str	r8, [r4]
   1ac8c:	beq	1ac98 <lchmod@@Base+0x360c>
   1ac90:	mov	r0, r5
   1ac94:	bl	1355c <__assert_fail@plt+0x1c90>
   1ac98:	mov	r0, r8
   1ac9c:	bl	1caf4 <lchmod@@Base+0x5468>
   1aca0:	ldr	ip, [sp, #84]	; 0x54
   1aca4:	ldr	lr, [sp, #40]	; 0x28
   1aca8:	mov	r3, sl
   1acac:	mov	r2, r9
   1acb0:	mov	r1, r8
   1acb4:	str	r0, [r4, #4]
   1acb8:	ldr	r4, [sp, #80]	; 0x50
   1acbc:	str	fp, [sp, #8]
   1acc0:	str	r6, [sp, #4]
   1acc4:	str	ip, [sp, #16]
   1acc8:	str	r4, [sp, #12]
   1accc:	str	lr, [sp]
   1acd0:	mov	r5, r0
   1acd4:	bl	17f24 <lchmod@@Base+0x898>
   1acd8:	ldr	r3, [sp, #28]
   1acdc:	mov	r0, r5
   1ace0:	str	r3, [r7]
   1ace4:	add	sp, sp, #92	; 0x5c
   1ace8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acec:	mov	r3, #8
   1acf0:	str	r3, [sp]
   1acf4:	add	r1, sp, #36	; 0x24
   1acf8:	rsb	r2, r2, #1
   1acfc:	mvn	r3, #-2147483648	; 0x80000000
   1ad00:	mov	r0, #0
   1ad04:	bl	1cd10 <lchmod@@Base+0x5684>
   1ad08:	mov	r4, r0
   1ad0c:	ldm	r6, {r0, r1}
   1ad10:	str	r4, [r5]
   1ad14:	stm	r4, {r0, r1}
   1ad18:	b	1ac08 <lchmod@@Base+0x357c>
   1ad1c:	strdeq	r0, [r3], -ip
   1ad20:	muleq	r3, r0, r1
   1ad24:	andeq	r0, r3, ip, lsr #4
   1ad28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad2c:	sub	sp, sp, #180	; 0xb4
   1ad30:	mov	r6, r1
   1ad34:	mov	r4, r0
   1ad38:	mov	r9, r2
   1ad3c:	add	r0, sp, #80	; 0x50
   1ad40:	mov	r2, #48	; 0x30
   1ad44:	mov	r1, #0
   1ad48:	bl	11740 <memset@plt>
   1ad4c:	cmp	r6, #10
   1ad50:	beq	1af30 <lchmod@@Base+0x38a4>
   1ad54:	add	r5, sp, #80	; 0x50
   1ad58:	str	r6, [sp, #80]	; 0x50
   1ad5c:	ldm	r5!, {r0, r1, r2, r3}
   1ad60:	add	ip, sp, #128	; 0x80
   1ad64:	mov	r7, ip
   1ad68:	add	lr, sp, #32
   1ad6c:	stmia	ip!, {r0, r1, r2, r3}
   1ad70:	mov	r8, #67108864	; 0x4000000
   1ad74:	ldm	r5!, {r0, r1, r2, r3}
   1ad78:	ldr	r6, [pc, #436]	; 1af34 <lchmod@@Base+0x38a8>
   1ad7c:	stmia	ip!, {r0, r1, r2, r3}
   1ad80:	ldm	r5, {r0, r1, r2, r3}
   1ad84:	stm	ip, {r0, r1, r2, r3}
   1ad88:	ldm	r7!, {r0, r1, r2, r3}
   1ad8c:	stmia	lr!, {r0, r1, r2, r3}
   1ad90:	ldm	r7!, {r0, r1, r2, r3}
   1ad94:	str	r8, [sp, #44]	; 0x2c
   1ad98:	stmia	lr!, {r0, r1, r2, r3}
   1ad9c:	ldm	ip, {r0, r1, r2, r3}
   1ada0:	stm	lr, {r0, r1, r2, r3}
   1ada4:	bl	1171c <__errno_location@plt>
   1ada8:	cmn	r4, #-2147483647	; 0x80000001
   1adac:	ldr	r5, [r6]
   1adb0:	mov	r7, r0
   1adb4:	movne	r0, #0
   1adb8:	moveq	r0, #1
   1adbc:	ldr	r3, [r7]
   1adc0:	orrs	r0, r0, r4, lsr #31
   1adc4:	str	r3, [sp, #24]
   1adc8:	bne	1af30 <lchmod@@Base+0x38a4>
   1adcc:	ldr	r2, [r6, #4]
   1add0:	cmp	r4, r2
   1add4:	blt	1ae34 <lchmod@@Base+0x37a8>
   1add8:	add	r8, r6, #8
   1addc:	cmp	r5, r8
   1ade0:	str	r2, [sp, #80]	; 0x50
   1ade4:	beq	1af00 <lchmod@@Base+0x3874>
   1ade8:	mov	r3, #8
   1adec:	sub	r2, r4, r2
   1adf0:	mov	r0, r5
   1adf4:	str	r3, [sp]
   1adf8:	add	r2, r2, #1
   1adfc:	add	r1, sp, #80	; 0x50
   1ae00:	mvn	r3, #-2147483648	; 0x80000000
   1ae04:	bl	1cd10 <lchmod@@Base+0x5684>
   1ae08:	mov	r5, r0
   1ae0c:	str	r0, [r6]
   1ae10:	ldr	r0, [r6, #4]
   1ae14:	ldr	r2, [sp, #80]	; 0x50
   1ae18:	mov	r1, #0
   1ae1c:	sub	r2, r2, r0
   1ae20:	add	r0, r5, r0, lsl #3
   1ae24:	lsl	r2, r2, #3
   1ae28:	bl	11740 <memset@plt>
   1ae2c:	ldr	r3, [sp, #80]	; 0x50
   1ae30:	str	r3, [r6, #4]
   1ae34:	add	fp, r5, r4, lsl #3
   1ae38:	ldr	r1, [sp, #36]	; 0x24
   1ae3c:	ldr	r8, [r5, r4, lsl #3]
   1ae40:	ldr	r6, [fp, #4]
   1ae44:	ldr	r2, [sp, #72]	; 0x48
   1ae48:	ldr	r3, [sp, #32]
   1ae4c:	ldr	ip, [sp, #76]	; 0x4c
   1ae50:	orr	r1, r1, #1
   1ae54:	add	sl, sp, #40	; 0x28
   1ae58:	str	r1, [sp, #28]
   1ae5c:	str	r1, [sp, #4]
   1ae60:	str	r2, [sp, #12]
   1ae64:	str	r3, [sp]
   1ae68:	mov	r0, r6
   1ae6c:	mov	r1, r8
   1ae70:	str	ip, [sp, #16]
   1ae74:	str	sl, [sp, #8]
   1ae78:	mvn	r3, #0
   1ae7c:	mov	r2, r9
   1ae80:	bl	17f24 <lchmod@@Base+0x898>
   1ae84:	cmp	r8, r0
   1ae88:	bhi	1aeec <lchmod@@Base+0x3860>
   1ae8c:	ldr	r3, [pc, #164]	; 1af38 <lchmod@@Base+0x38ac>
   1ae90:	add	r8, r0, #1
   1ae94:	cmp	r6, r3
   1ae98:	str	r8, [r5, r4, lsl #3]
   1ae9c:	beq	1aea8 <lchmod@@Base+0x381c>
   1aea0:	mov	r0, r6
   1aea4:	bl	1355c <__assert_fail@plt+0x1c90>
   1aea8:	mov	r0, r8
   1aeac:	bl	1caf4 <lchmod@@Base+0x5468>
   1aeb0:	ldr	lr, [sp, #76]	; 0x4c
   1aeb4:	ldr	r3, [sp, #32]
   1aeb8:	ldr	ip, [sp, #72]	; 0x48
   1aebc:	ldr	r4, [sp, #28]
   1aec0:	mov	r2, r9
   1aec4:	mov	r1, r8
   1aec8:	str	r0, [fp, #4]
   1aecc:	str	r3, [sp]
   1aed0:	str	sl, [sp, #8]
   1aed4:	str	r4, [sp, #4]
   1aed8:	str	lr, [sp, #16]
   1aedc:	str	ip, [sp, #12]
   1aee0:	mvn	r3, #0
   1aee4:	mov	r6, r0
   1aee8:	bl	17f24 <lchmod@@Base+0x898>
   1aeec:	ldr	r3, [sp, #24]
   1aef0:	mov	r0, r6
   1aef4:	str	r3, [r7]
   1aef8:	add	sp, sp, #180	; 0xb4
   1aefc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af00:	mov	r3, #8
   1af04:	sub	r2, r4, r2
   1af08:	add	r1, sp, #80	; 0x50
   1af0c:	str	r3, [sp]
   1af10:	add	r2, r2, #1
   1af14:	mvn	r3, #-2147483648	; 0x80000000
   1af18:	bl	1cd10 <lchmod@@Base+0x5684>
   1af1c:	mov	r5, r0
   1af20:	ldm	r8, {r0, r1}
   1af24:	str	r5, [r6]
   1af28:	stm	r5, {r0, r1}
   1af2c:	b	1ae10 <lchmod@@Base+0x3784>
   1af30:	bl	11878 <abort@plt>
   1af34:	muleq	r3, r0, r1
   1af38:	andeq	r0, r3, ip, lsr #4
   1af3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af40:	mov	r7, r1
   1af44:	ldr	lr, [pc, #492]	; 1b138 <lchmod@@Base+0x3aac>
   1af48:	mov	r8, r2
   1af4c:	mov	r4, r0
   1af50:	mov	fp, r3
   1af54:	ldm	lr!, {r0, r1, r2, r3}
   1af58:	sub	sp, sp, #100	; 0x64
   1af5c:	add	ip, sp, #48	; 0x30
   1af60:	mov	sl, #10
   1af64:	stmia	ip!, {r0, r1, r2, r3}
   1af68:	cmp	r8, #0
   1af6c:	cmpne	r7, #0
   1af70:	ldm	lr!, {r0, r1, r2, r3}
   1af74:	str	sl, [sp, #48]	; 0x30
   1af78:	stmia	ip!, {r0, r1, r2, r3}
   1af7c:	ldm	lr, {r0, r1, r2, r3}
   1af80:	stm	ip, {r0, r1, r2, r3}
   1af84:	beq	1b134 <lchmod@@Base+0x3aa8>
   1af88:	str	r7, [sp, #88]	; 0x58
   1af8c:	str	r8, [sp, #92]	; 0x5c
   1af90:	bl	1171c <__errno_location@plt>
   1af94:	ldr	r6, [pc, #416]	; 1b13c <lchmod@@Base+0x3ab0>
   1af98:	cmn	r4, #-2147483647	; 0x80000001
   1af9c:	ldr	r5, [r6]
   1afa0:	mov	r9, r0
   1afa4:	movne	r0, #0
   1afa8:	moveq	r0, #1
   1afac:	ldr	r3, [r9]
   1afb0:	orrs	r0, r0, r4, lsr #31
   1afb4:	str	r3, [sp, #28]
   1afb8:	bne	1b134 <lchmod@@Base+0x3aa8>
   1afbc:	ldr	r2, [r6, #4]
   1afc0:	cmp	r4, r2
   1afc4:	movlt	r3, sl
   1afc8:	blt	1b034 <lchmod@@Base+0x39a8>
   1afcc:	add	r7, r6, #8
   1afd0:	cmp	r5, r7
   1afd4:	str	r2, [sp, #44]	; 0x2c
   1afd8:	beq	1b104 <lchmod@@Base+0x3a78>
   1afdc:	mov	r3, #8
   1afe0:	sub	r2, r4, r2
   1afe4:	mov	r0, r5
   1afe8:	str	r3, [sp]
   1afec:	add	r2, r2, #1
   1aff0:	mvn	r3, #-2147483648	; 0x80000000
   1aff4:	add	r1, sp, #44	; 0x2c
   1aff8:	bl	1cd10 <lchmod@@Base+0x5684>
   1affc:	mov	r5, r0
   1b000:	str	r0, [r6]
   1b004:	ldr	r0, [r6, #4]
   1b008:	ldr	r2, [sp, #44]	; 0x2c
   1b00c:	mov	r1, #0
   1b010:	sub	r2, r2, r0
   1b014:	add	r0, r5, r0, lsl #3
   1b018:	lsl	r2, r2, #3
   1b01c:	bl	11740 <memset@plt>
   1b020:	ldr	r3, [sp, #48]	; 0x30
   1b024:	ldr	r7, [sp, #88]	; 0x58
   1b028:	ldr	r8, [sp, #92]	; 0x5c
   1b02c:	ldr	r2, [sp, #44]	; 0x2c
   1b030:	str	r2, [r6, #4]
   1b034:	add	r2, r5, r4, lsl #3
   1b038:	mov	r1, r2
   1b03c:	str	r2, [sp, #32]
   1b040:	ldr	r2, [sp, #52]	; 0x34
   1b044:	ldr	r6, [r1, #4]
   1b048:	ldr	sl, [r5, r4, lsl #3]
   1b04c:	orr	r2, r2, #1
   1b050:	str	r3, [sp]
   1b054:	add	r3, sp, #56	; 0x38
   1b058:	str	r2, [sp, #36]	; 0x24
   1b05c:	str	r2, [sp, #4]
   1b060:	str	r3, [sp, #8]
   1b064:	mov	r0, r6
   1b068:	str	r8, [sp, #16]
   1b06c:	str	r7, [sp, #12]
   1b070:	mov	r1, sl
   1b074:	mvn	r3, #0
   1b078:	mov	r2, fp
   1b07c:	bl	17f24 <lchmod@@Base+0x898>
   1b080:	cmp	sl, r0
   1b084:	bhi	1b0f0 <lchmod@@Base+0x3a64>
   1b088:	ldr	r3, [pc, #176]	; 1b140 <lchmod@@Base+0x3ab4>
   1b08c:	add	r7, r0, #1
   1b090:	cmp	r6, r3
   1b094:	str	r7, [r5, r4, lsl #3]
   1b098:	beq	1b0a4 <lchmod@@Base+0x3a18>
   1b09c:	mov	r0, r6
   1b0a0:	bl	1355c <__assert_fail@plt+0x1c90>
   1b0a4:	mov	r0, r7
   1b0a8:	bl	1caf4 <lchmod@@Base+0x5468>
   1b0ac:	ldr	r3, [sp, #32]
   1b0b0:	ldr	lr, [sp, #92]	; 0x5c
   1b0b4:	ldr	ip, [sp, #88]	; 0x58
   1b0b8:	ldr	r4, [sp, #36]	; 0x24
   1b0bc:	mov	r2, fp
   1b0c0:	mov	r1, r7
   1b0c4:	str	r0, [r3, #4]
   1b0c8:	add	r3, sp, #56	; 0x38
   1b0cc:	str	r3, [sp, #8]
   1b0d0:	ldr	r3, [sp, #48]	; 0x30
   1b0d4:	str	r4, [sp, #4]
   1b0d8:	str	r3, [sp]
   1b0dc:	str	lr, [sp, #16]
   1b0e0:	str	ip, [sp, #12]
   1b0e4:	mvn	r3, #0
   1b0e8:	mov	r6, r0
   1b0ec:	bl	17f24 <lchmod@@Base+0x898>
   1b0f0:	ldr	r3, [sp, #28]
   1b0f4:	mov	r0, r6
   1b0f8:	str	r3, [r9]
   1b0fc:	add	sp, sp, #100	; 0x64
   1b100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b104:	mov	r3, #8
   1b108:	sub	r2, r4, r2
   1b10c:	str	r3, [sp]
   1b110:	add	r1, sp, #44	; 0x2c
   1b114:	add	r2, r2, #1
   1b118:	mvn	r3, #-2147483648	; 0x80000000
   1b11c:	bl	1cd10 <lchmod@@Base+0x5684>
   1b120:	mov	r5, r0
   1b124:	ldm	r7, {r0, r1}
   1b128:	str	r5, [r6]
   1b12c:	stm	r5, {r0, r1}
   1b130:	b	1b004 <lchmod@@Base+0x3978>
   1b134:	bl	11878 <abort@plt>
   1b138:	strdeq	r0, [r3], -ip
   1b13c:	muleq	r3, r0, r1
   1b140:	andeq	r0, r3, ip, lsr #4
   1b144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b148:	mov	r7, r1
   1b14c:	ldr	lr, [pc, #492]	; 1b340 <lchmod@@Base+0x3cb4>
   1b150:	mov	r8, r2
   1b154:	mov	r4, r0
   1b158:	mov	fp, r3
   1b15c:	ldm	lr!, {r0, r1, r2, r3}
   1b160:	sub	sp, sp, #100	; 0x64
   1b164:	add	ip, sp, #48	; 0x30
   1b168:	mov	sl, #10
   1b16c:	stmia	ip!, {r0, r1, r2, r3}
   1b170:	cmp	r8, #0
   1b174:	cmpne	r7, #0
   1b178:	ldm	lr!, {r0, r1, r2, r3}
   1b17c:	str	sl, [sp, #48]	; 0x30
   1b180:	stmia	ip!, {r0, r1, r2, r3}
   1b184:	ldm	lr, {r0, r1, r2, r3}
   1b188:	stm	ip, {r0, r1, r2, r3}
   1b18c:	beq	1b33c <lchmod@@Base+0x3cb0>
   1b190:	str	r7, [sp, #88]	; 0x58
   1b194:	str	r8, [sp, #92]	; 0x5c
   1b198:	bl	1171c <__errno_location@plt>
   1b19c:	ldr	r6, [pc, #416]	; 1b344 <lchmod@@Base+0x3cb8>
   1b1a0:	cmn	r4, #-2147483647	; 0x80000001
   1b1a4:	ldr	r5, [r6]
   1b1a8:	mov	r9, r0
   1b1ac:	movne	r0, #0
   1b1b0:	moveq	r0, #1
   1b1b4:	ldr	r3, [r9]
   1b1b8:	orrs	r0, r0, r4, lsr #31
   1b1bc:	str	r3, [sp, #28]
   1b1c0:	bne	1b33c <lchmod@@Base+0x3cb0>
   1b1c4:	ldr	r2, [r6, #4]
   1b1c8:	cmp	r4, r2
   1b1cc:	movlt	r3, sl
   1b1d0:	blt	1b23c <lchmod@@Base+0x3bb0>
   1b1d4:	add	r7, r6, #8
   1b1d8:	cmp	r5, r7
   1b1dc:	str	r2, [sp, #44]	; 0x2c
   1b1e0:	beq	1b30c <lchmod@@Base+0x3c80>
   1b1e4:	mov	r3, #8
   1b1e8:	sub	r2, r4, r2
   1b1ec:	mov	r0, r5
   1b1f0:	str	r3, [sp]
   1b1f4:	add	r2, r2, #1
   1b1f8:	mvn	r3, #-2147483648	; 0x80000000
   1b1fc:	add	r1, sp, #44	; 0x2c
   1b200:	bl	1cd10 <lchmod@@Base+0x5684>
   1b204:	mov	r5, r0
   1b208:	str	r0, [r6]
   1b20c:	ldr	r0, [r6, #4]
   1b210:	ldr	r2, [sp, #44]	; 0x2c
   1b214:	mov	r1, #0
   1b218:	sub	r2, r2, r0
   1b21c:	add	r0, r5, r0, lsl #3
   1b220:	lsl	r2, r2, #3
   1b224:	bl	11740 <memset@plt>
   1b228:	ldr	r3, [sp, #48]	; 0x30
   1b22c:	ldr	r7, [sp, #88]	; 0x58
   1b230:	ldr	r8, [sp, #92]	; 0x5c
   1b234:	ldr	r2, [sp, #44]	; 0x2c
   1b238:	str	r2, [r6, #4]
   1b23c:	add	r2, r5, r4, lsl #3
   1b240:	mov	r1, r2
   1b244:	str	r2, [sp, #32]
   1b248:	ldr	r2, [sp, #52]	; 0x34
   1b24c:	ldr	r6, [r1, #4]
   1b250:	ldr	sl, [r5, r4, lsl #3]
   1b254:	orr	r2, r2, #1
   1b258:	str	r3, [sp]
   1b25c:	add	r3, sp, #56	; 0x38
   1b260:	str	r2, [sp, #36]	; 0x24
   1b264:	str	r2, [sp, #4]
   1b268:	str	r3, [sp, #8]
   1b26c:	mov	r0, r6
   1b270:	str	r8, [sp, #16]
   1b274:	str	r7, [sp, #12]
   1b278:	mov	r1, sl
   1b27c:	ldr	r3, [sp, #136]	; 0x88
   1b280:	mov	r2, fp
   1b284:	bl	17f24 <lchmod@@Base+0x898>
   1b288:	cmp	sl, r0
   1b28c:	bhi	1b2f8 <lchmod@@Base+0x3c6c>
   1b290:	ldr	r3, [pc, #176]	; 1b348 <lchmod@@Base+0x3cbc>
   1b294:	add	r7, r0, #1
   1b298:	cmp	r6, r3
   1b29c:	str	r7, [r5, r4, lsl #3]
   1b2a0:	beq	1b2ac <lchmod@@Base+0x3c20>
   1b2a4:	mov	r0, r6
   1b2a8:	bl	1355c <__assert_fail@plt+0x1c90>
   1b2ac:	mov	r0, r7
   1b2b0:	bl	1caf4 <lchmod@@Base+0x5468>
   1b2b4:	ldr	r3, [sp, #32]
   1b2b8:	ldr	lr, [sp, #92]	; 0x5c
   1b2bc:	ldr	ip, [sp, #88]	; 0x58
   1b2c0:	ldr	r4, [sp, #36]	; 0x24
   1b2c4:	mov	r2, fp
   1b2c8:	mov	r1, r7
   1b2cc:	str	r0, [r3, #4]
   1b2d0:	add	r3, sp, #56	; 0x38
   1b2d4:	str	r3, [sp, #8]
   1b2d8:	ldr	r3, [sp, #48]	; 0x30
   1b2dc:	str	r4, [sp, #4]
   1b2e0:	str	r3, [sp]
   1b2e4:	str	lr, [sp, #16]
   1b2e8:	str	ip, [sp, #12]
   1b2ec:	ldr	r3, [sp, #136]	; 0x88
   1b2f0:	mov	r6, r0
   1b2f4:	bl	17f24 <lchmod@@Base+0x898>
   1b2f8:	ldr	r3, [sp, #28]
   1b2fc:	mov	r0, r6
   1b300:	str	r3, [r9]
   1b304:	add	sp, sp, #100	; 0x64
   1b308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b30c:	mov	r3, #8
   1b310:	sub	r2, r4, r2
   1b314:	str	r3, [sp]
   1b318:	add	r1, sp, #44	; 0x2c
   1b31c:	add	r2, r2, #1
   1b320:	mvn	r3, #-2147483648	; 0x80000000
   1b324:	bl	1cd10 <lchmod@@Base+0x5684>
   1b328:	mov	r5, r0
   1b32c:	ldm	r7, {r0, r1}
   1b330:	str	r5, [r6]
   1b334:	stm	r5, {r0, r1}
   1b338:	b	1b20c <lchmod@@Base+0x3b80>
   1b33c:	bl	11878 <abort@plt>
   1b340:	strdeq	r0, [r3], -ip
   1b344:	muleq	r3, r0, r1
   1b348:	andeq	r0, r3, ip, lsr #4
   1b34c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b350:	mov	r5, r0
   1b354:	ldr	lr, [pc, #452]	; 1b520 <lchmod@@Base+0x3e94>
   1b358:	mov	r6, r1
   1b35c:	mov	sl, r2
   1b360:	ldm	lr!, {r0, r1, r2, r3}
   1b364:	sub	sp, sp, #92	; 0x5c
   1b368:	add	ip, sp, #40	; 0x28
   1b36c:	cmp	r6, #0
   1b370:	cmpne	r5, #0
   1b374:	stmia	ip!, {r0, r1, r2, r3}
   1b378:	mov	r9, #10
   1b37c:	ldm	lr!, {r0, r1, r2, r3}
   1b380:	moveq	fp, #1
   1b384:	movne	fp, #0
   1b388:	str	r9, [sp, #40]	; 0x28
   1b38c:	stmia	ip!, {r0, r1, r2, r3}
   1b390:	ldm	lr, {r0, r1, r2, r3}
   1b394:	stm	ip, {r0, r1, r2, r3}
   1b398:	beq	1b51c <lchmod@@Base+0x3e90>
   1b39c:	str	r5, [sp, #80]	; 0x50
   1b3a0:	str	r6, [sp, #84]	; 0x54
   1b3a4:	bl	1171c <__errno_location@plt>
   1b3a8:	ldr	r7, [pc, #372]	; 1b524 <lchmod@@Base+0x3e98>
   1b3ac:	ldr	r2, [r7, #4]
   1b3b0:	ldr	r4, [r7]
   1b3b4:	cmp	r2, #0
   1b3b8:	ldr	r3, [r0]
   1b3bc:	mov	r8, r0
   1b3c0:	str	r3, [sp, #24]
   1b3c4:	movgt	r3, r9
   1b3c8:	bgt	1b430 <lchmod@@Base+0x3da4>
   1b3cc:	add	r5, r7, #8
   1b3d0:	cmp	r4, r5
   1b3d4:	str	r2, [sp, #36]	; 0x24
   1b3d8:	beq	1b4ec <lchmod@@Base+0x3e60>
   1b3dc:	mov	r3, #8
   1b3e0:	mov	r0, r4
   1b3e4:	str	r3, [sp]
   1b3e8:	rsb	r2, r2, #1
   1b3ec:	mvn	r3, #-2147483648	; 0x80000000
   1b3f0:	add	r1, sp, #36	; 0x24
   1b3f4:	bl	1cd10 <lchmod@@Base+0x5684>
   1b3f8:	mov	r4, r0
   1b3fc:	str	r0, [r7]
   1b400:	ldr	r0, [r7, #4]
   1b404:	ldr	r2, [sp, #36]	; 0x24
   1b408:	mov	r1, #0
   1b40c:	sub	r2, r2, r0
   1b410:	add	r0, r4, r0, lsl #3
   1b414:	lsl	r2, r2, #3
   1b418:	bl	11740 <memset@plt>
   1b41c:	ldr	r3, [sp, #40]	; 0x28
   1b420:	ldr	r5, [sp, #80]	; 0x50
   1b424:	ldr	r6, [sp, #84]	; 0x54
   1b428:	ldr	r2, [sp, #36]	; 0x24
   1b42c:	str	r2, [r7, #4]
   1b430:	ldr	r2, [sp, #44]	; 0x2c
   1b434:	ldr	r9, [r4]
   1b438:	ldr	r7, [r4, #4]
   1b43c:	orr	r2, r2, #1
   1b440:	add	fp, sp, #48	; 0x30
   1b444:	str	r2, [sp, #28]
   1b448:	str	r2, [sp, #4]
   1b44c:	str	r3, [sp]
   1b450:	str	r6, [sp, #16]
   1b454:	str	r5, [sp, #12]
   1b458:	mov	r1, r9
   1b45c:	mov	r0, r7
   1b460:	str	fp, [sp, #8]
   1b464:	mvn	r3, #0
   1b468:	mov	r2, sl
   1b46c:	bl	17f24 <lchmod@@Base+0x898>
   1b470:	cmp	r9, r0
   1b474:	bhi	1b4d8 <lchmod@@Base+0x3e4c>
   1b478:	ldr	r3, [pc, #168]	; 1b528 <lchmod@@Base+0x3e9c>
   1b47c:	add	r5, r0, #1
   1b480:	cmp	r7, r3
   1b484:	str	r5, [r4]
   1b488:	beq	1b494 <lchmod@@Base+0x3e08>
   1b48c:	mov	r0, r7
   1b490:	bl	1355c <__assert_fail@plt+0x1c90>
   1b494:	mov	r0, r5
   1b498:	bl	1caf4 <lchmod@@Base+0x5468>
   1b49c:	ldr	lr, [sp, #84]	; 0x54
   1b4a0:	ldr	r3, [sp, #40]	; 0x28
   1b4a4:	ldr	ip, [sp, #80]	; 0x50
   1b4a8:	mov	r2, sl
   1b4ac:	mov	r1, r5
   1b4b0:	str	r0, [r4, #4]
   1b4b4:	ldr	r4, [sp, #28]
   1b4b8:	str	r3, [sp]
   1b4bc:	str	fp, [sp, #8]
   1b4c0:	str	r4, [sp, #4]
   1b4c4:	str	lr, [sp, #16]
   1b4c8:	str	ip, [sp, #12]
   1b4cc:	mvn	r3, #0
   1b4d0:	mov	r7, r0
   1b4d4:	bl	17f24 <lchmod@@Base+0x898>
   1b4d8:	ldr	r3, [sp, #24]
   1b4dc:	mov	r0, r7
   1b4e0:	str	r3, [r8]
   1b4e4:	add	sp, sp, #92	; 0x5c
   1b4e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4ec:	mov	r3, #8
   1b4f0:	str	r3, [sp]
   1b4f4:	add	r1, sp, #36	; 0x24
   1b4f8:	rsb	r2, r2, #1
   1b4fc:	mov	r0, fp
   1b500:	mvn	r3, #-2147483648	; 0x80000000
   1b504:	bl	1cd10 <lchmod@@Base+0x5684>
   1b508:	mov	r4, r0
   1b50c:	ldm	r5, {r0, r1}
   1b510:	str	r4, [r7]
   1b514:	stm	r4, {r0, r1}
   1b518:	b	1b400 <lchmod@@Base+0x3d74>
   1b51c:	bl	11878 <abort@plt>
   1b520:	strdeq	r0, [r3], -ip
   1b524:	muleq	r3, r0, r1
   1b528:	andeq	r0, r3, ip, lsr #4
   1b52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b530:	mov	r5, r0
   1b534:	ldr	lr, [pc, #464]	; 1b70c <lchmod@@Base+0x4080>
   1b538:	mov	r6, r1
   1b53c:	mov	sl, r2
   1b540:	mov	fp, r3
   1b544:	ldm	lr!, {r0, r1, r2, r3}
   1b548:	sub	sp, sp, #92	; 0x5c
   1b54c:	add	ip, sp, #40	; 0x28
   1b550:	cmp	r6, #0
   1b554:	cmpne	r5, #0
   1b558:	stmia	ip!, {r0, r1, r2, r3}
   1b55c:	moveq	r4, #1
   1b560:	ldm	lr!, {r0, r1, r2, r3}
   1b564:	movne	r4, #0
   1b568:	mov	r9, #10
   1b56c:	str	r4, [sp, #28]
   1b570:	stmia	ip!, {r0, r1, r2, r3}
   1b574:	ldm	lr, {r0, r1, r2, r3}
   1b578:	str	r9, [sp, #40]	; 0x28
   1b57c:	stm	ip, {r0, r1, r2, r3}
   1b580:	beq	1b708 <lchmod@@Base+0x407c>
   1b584:	str	r5, [sp, #80]	; 0x50
   1b588:	str	r6, [sp, #84]	; 0x54
   1b58c:	bl	1171c <__errno_location@plt>
   1b590:	ldr	r7, [pc, #376]	; 1b710 <lchmod@@Base+0x4084>
   1b594:	ldr	r2, [r7, #4]
   1b598:	ldr	r4, [r7]
   1b59c:	cmp	r2, #0
   1b5a0:	ldr	r3, [r0]
   1b5a4:	mov	r8, r0
   1b5a8:	str	r3, [sp, #24]
   1b5ac:	movgt	r3, r9
   1b5b0:	bgt	1b618 <lchmod@@Base+0x3f8c>
   1b5b4:	add	r5, r7, #8
   1b5b8:	cmp	r4, r5
   1b5bc:	str	r2, [sp, #36]	; 0x24
   1b5c0:	beq	1b6d8 <lchmod@@Base+0x404c>
   1b5c4:	mov	r3, #8
   1b5c8:	mov	r0, r4
   1b5cc:	str	r3, [sp]
   1b5d0:	rsb	r2, r2, #1
   1b5d4:	mvn	r3, #-2147483648	; 0x80000000
   1b5d8:	add	r1, sp, #36	; 0x24
   1b5dc:	bl	1cd10 <lchmod@@Base+0x5684>
   1b5e0:	mov	r4, r0
   1b5e4:	str	r0, [r7]
   1b5e8:	ldr	r0, [r7, #4]
   1b5ec:	ldr	r2, [sp, #36]	; 0x24
   1b5f0:	mov	r1, #0
   1b5f4:	sub	r2, r2, r0
   1b5f8:	add	r0, r4, r0, lsl #3
   1b5fc:	lsl	r2, r2, #3
   1b600:	bl	11740 <memset@plt>
   1b604:	ldr	r3, [sp, #40]	; 0x28
   1b608:	ldr	r5, [sp, #80]	; 0x50
   1b60c:	ldr	r6, [sp, #84]	; 0x54
   1b610:	ldr	r2, [sp, #36]	; 0x24
   1b614:	str	r2, [r7, #4]
   1b618:	ldr	r2, [sp, #44]	; 0x2c
   1b61c:	ldr	r9, [r4]
   1b620:	ldr	r7, [r4, #4]
   1b624:	orr	r2, r2, #1
   1b628:	str	r3, [sp]
   1b62c:	add	r3, sp, #48	; 0x30
   1b630:	str	r2, [sp, #28]
   1b634:	str	r2, [sp, #4]
   1b638:	str	r3, [sp, #8]
   1b63c:	str	r6, [sp, #16]
   1b640:	str	r5, [sp, #12]
   1b644:	mov	r1, r9
   1b648:	mov	r0, r7
   1b64c:	mov	r3, fp
   1b650:	mov	r2, sl
   1b654:	bl	17f24 <lchmod@@Base+0x898>
   1b658:	cmp	r9, r0
   1b65c:	bhi	1b6c4 <lchmod@@Base+0x4038>
   1b660:	ldr	r3, [pc, #172]	; 1b714 <lchmod@@Base+0x4088>
   1b664:	add	r5, r0, #1
   1b668:	cmp	r7, r3
   1b66c:	str	r5, [r4]
   1b670:	beq	1b67c <lchmod@@Base+0x3ff0>
   1b674:	mov	r0, r7
   1b678:	bl	1355c <__assert_fail@plt+0x1c90>
   1b67c:	mov	r0, r5
   1b680:	bl	1caf4 <lchmod@@Base+0x5468>
   1b684:	add	lr, sp, #48	; 0x30
   1b688:	ldr	ip, [sp, #84]	; 0x54
   1b68c:	mov	r1, r5
   1b690:	ldr	r5, [sp, #28]
   1b694:	mov	r3, fp
   1b698:	mov	r2, sl
   1b69c:	str	r0, [r4, #4]
   1b6a0:	ldr	r4, [sp, #80]	; 0x50
   1b6a4:	str	lr, [sp, #8]
   1b6a8:	ldr	lr, [sp, #40]	; 0x28
   1b6ac:	str	r5, [sp, #4]
   1b6b0:	str	ip, [sp, #16]
   1b6b4:	str	r4, [sp, #12]
   1b6b8:	str	lr, [sp]
   1b6bc:	mov	r7, r0
   1b6c0:	bl	17f24 <lchmod@@Base+0x898>
   1b6c4:	ldr	r3, [sp, #24]
   1b6c8:	mov	r0, r7
   1b6cc:	str	r3, [r8]
   1b6d0:	add	sp, sp, #92	; 0x5c
   1b6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6d8:	mov	r3, #8
   1b6dc:	str	r3, [sp]
   1b6e0:	add	r1, sp, #36	; 0x24
   1b6e4:	rsb	r2, r2, #1
   1b6e8:	ldr	r0, [sp, #28]
   1b6ec:	mvn	r3, #-2147483648	; 0x80000000
   1b6f0:	bl	1cd10 <lchmod@@Base+0x5684>
   1b6f4:	mov	r4, r0
   1b6f8:	ldm	r5, {r0, r1}
   1b6fc:	str	r4, [r7]
   1b700:	stm	r4, {r0, r1}
   1b704:	b	1b5e8 <lchmod@@Base+0x3f5c>
   1b708:	bl	11878 <abort@plt>
   1b70c:	strdeq	r0, [r3], -ip
   1b710:	muleq	r3, r0, r1
   1b714:	andeq	r0, r3, ip, lsr #4
   1b718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b71c:	sub	sp, sp, #52	; 0x34
   1b720:	mov	r5, r0
   1b724:	mov	sl, r1
   1b728:	mov	fp, r2
   1b72c:	bl	1171c <__errno_location@plt>
   1b730:	ldr	r4, [pc, #404]	; 1b8cc <lchmod@@Base+0x4240>
   1b734:	cmn	r5, #-2147483647	; 0x80000001
   1b738:	ldr	r6, [r4]
   1b73c:	mov	r8, r0
   1b740:	movne	r0, #0
   1b744:	moveq	r0, #1
   1b748:	ldr	r3, [r8]
   1b74c:	orrs	r0, r0, r5, lsr #31
   1b750:	str	r3, [sp, #28]
   1b754:	bne	1b8c8 <lchmod@@Base+0x423c>
   1b758:	ldr	r2, [r4, #4]
   1b75c:	cmp	r5, r2
   1b760:	blt	1b7c0 <lchmod@@Base+0x4134>
   1b764:	add	r7, r4, #8
   1b768:	cmp	r6, r7
   1b76c:	str	r2, [sp, #44]	; 0x2c
   1b770:	beq	1b898 <lchmod@@Base+0x420c>
   1b774:	mov	r3, #8
   1b778:	sub	r2, r5, r2
   1b77c:	mov	r0, r6
   1b780:	str	r3, [sp]
   1b784:	add	r2, r2, #1
   1b788:	mvn	r3, #-2147483648	; 0x80000000
   1b78c:	add	r1, sp, #44	; 0x2c
   1b790:	bl	1cd10 <lchmod@@Base+0x5684>
   1b794:	mov	r6, r0
   1b798:	str	r0, [r4]
   1b79c:	ldr	r0, [r4, #4]
   1b7a0:	ldr	r2, [sp, #44]	; 0x2c
   1b7a4:	mov	r1, #0
   1b7a8:	sub	r2, r2, r0
   1b7ac:	add	r0, r6, r0, lsl #3
   1b7b0:	lsl	r2, r2, #3
   1b7b4:	bl	11740 <memset@plt>
   1b7b8:	ldr	r3, [sp, #44]	; 0x2c
   1b7bc:	str	r3, [r4, #4]
   1b7c0:	ldr	r2, [r4, #56]	; 0x38
   1b7c4:	add	r3, r6, r5, lsl #3
   1b7c8:	ldr	r1, [r4, #20]
   1b7cc:	ldr	r7, [r3, #4]
   1b7d0:	ldr	r9, [r6, r5, lsl #3]
   1b7d4:	ldr	ip, [r4, #60]	; 0x3c
   1b7d8:	str	r3, [sp, #32]
   1b7dc:	ldr	r3, [r4, #16]
   1b7e0:	str	r2, [sp, #12]
   1b7e4:	ldr	r2, [pc, #228]	; 1b8d0 <lchmod@@Base+0x4244>
   1b7e8:	orr	r1, r1, #1
   1b7ec:	str	r1, [sp, #36]	; 0x24
   1b7f0:	str	r1, [sp, #4]
   1b7f4:	str	r2, [sp, #8]
   1b7f8:	str	r3, [sp]
   1b7fc:	mov	r0, r7
   1b800:	mov	r1, r9
   1b804:	str	ip, [sp, #16]
   1b808:	mov	r3, fp
   1b80c:	mov	r2, sl
   1b810:	bl	17f24 <lchmod@@Base+0x898>
   1b814:	cmp	r9, r0
   1b818:	bhi	1b884 <lchmod@@Base+0x41f8>
   1b81c:	ldr	r3, [pc, #176]	; 1b8d4 <lchmod@@Base+0x4248>
   1b820:	add	r9, r0, #1
   1b824:	cmp	r7, r3
   1b828:	str	r9, [r6, r5, lsl #3]
   1b82c:	beq	1b838 <lchmod@@Base+0x41ac>
   1b830:	mov	r0, r7
   1b834:	bl	1355c <__assert_fail@plt+0x1c90>
   1b838:	mov	r0, r9
   1b83c:	bl	1caf4 <lchmod@@Base+0x5468>
   1b840:	ldr	ip, [sp, #32]
   1b844:	ldr	lr, [r4, #60]	; 0x3c
   1b848:	ldr	r5, [r4, #56]	; 0x38
   1b84c:	mov	r3, fp
   1b850:	mov	r2, sl
   1b854:	mov	r1, r9
   1b858:	str	r0, [ip, #4]
   1b85c:	ldr	ip, [r4, #16]
   1b860:	ldr	r4, [pc, #104]	; 1b8d0 <lchmod@@Base+0x4244>
   1b864:	str	lr, [sp, #16]
   1b868:	str	r4, [sp, #8]
   1b86c:	ldr	r4, [sp, #36]	; 0x24
   1b870:	str	r5, [sp, #12]
   1b874:	str	r4, [sp, #4]
   1b878:	str	ip, [sp]
   1b87c:	mov	r7, r0
   1b880:	bl	17f24 <lchmod@@Base+0x898>
   1b884:	ldr	r3, [sp, #28]
   1b888:	mov	r0, r7
   1b88c:	str	r3, [r8]
   1b890:	add	sp, sp, #52	; 0x34
   1b894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b898:	mov	r3, #8
   1b89c:	sub	r2, r5, r2
   1b8a0:	str	r3, [sp]
   1b8a4:	add	r1, sp, #44	; 0x2c
   1b8a8:	add	r2, r2, #1
   1b8ac:	mvn	r3, #-2147483648	; 0x80000000
   1b8b0:	bl	1cd10 <lchmod@@Base+0x5684>
   1b8b4:	mov	r6, r0
   1b8b8:	ldm	r7, {r0, r1}
   1b8bc:	str	r6, [r4]
   1b8c0:	stm	r6, {r0, r1}
   1b8c4:	b	1b79c <lchmod@@Base+0x4110>
   1b8c8:	bl	11878 <abort@plt>
   1b8cc:	muleq	r3, r0, r1
   1b8d0:	andeq	r0, r3, r8, lsr #3
   1b8d4:	andeq	r0, r3, ip, lsr #4
   1b8d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8dc:	sub	sp, sp, #44	; 0x2c
   1b8e0:	mov	r9, r0
   1b8e4:	mov	sl, r1
   1b8e8:	bl	1171c <__errno_location@plt>
   1b8ec:	ldr	r4, [pc, #360]	; 1ba5c <lchmod@@Base+0x43d0>
   1b8f0:	ldr	r2, [r4, #4]
   1b8f4:	ldr	r5, [r4]
   1b8f8:	cmp	r2, #0
   1b8fc:	ldr	r3, [r0]
   1b900:	mov	r7, r0
   1b904:	str	r3, [sp, #24]
   1b908:	bgt	1b964 <lchmod@@Base+0x42d8>
   1b90c:	add	r6, r4, #8
   1b910:	cmp	r5, r6
   1b914:	str	r2, [sp, #36]	; 0x24
   1b918:	beq	1ba2c <lchmod@@Base+0x43a0>
   1b91c:	mov	r3, #8
   1b920:	mov	r0, r5
   1b924:	str	r3, [sp]
   1b928:	rsb	r2, r2, #1
   1b92c:	mvn	r3, #-2147483648	; 0x80000000
   1b930:	add	r1, sp, #36	; 0x24
   1b934:	bl	1cd10 <lchmod@@Base+0x5684>
   1b938:	mov	r5, r0
   1b93c:	str	r0, [r4]
   1b940:	ldr	r0, [r4, #4]
   1b944:	ldr	r2, [sp, #36]	; 0x24
   1b948:	mov	r1, #0
   1b94c:	sub	r2, r2, r0
   1b950:	add	r0, r5, r0, lsl #3
   1b954:	lsl	r2, r2, #3
   1b958:	bl	11740 <memset@plt>
   1b95c:	ldr	r3, [sp, #36]	; 0x24
   1b960:	str	r3, [r4, #4]
   1b964:	ldr	r1, [r4, #20]
   1b968:	ldr	r8, [r5]
   1b96c:	ldr	r6, [r5, #4]
   1b970:	ldr	r2, [r4, #56]	; 0x38
   1b974:	ldr	r3, [r4, #16]
   1b978:	ldr	ip, [r4, #60]	; 0x3c
   1b97c:	ldr	fp, [pc, #220]	; 1ba60 <lchmod@@Base+0x43d4>
   1b980:	orr	r1, r1, #1
   1b984:	str	r1, [sp, #28]
   1b988:	str	r1, [sp, #4]
   1b98c:	str	r2, [sp, #12]
   1b990:	str	r3, [sp]
   1b994:	mov	r1, r8
   1b998:	mov	r0, r6
   1b99c:	str	ip, [sp, #16]
   1b9a0:	str	fp, [sp, #8]
   1b9a4:	mov	r3, sl
   1b9a8:	mov	r2, r9
   1b9ac:	bl	17f24 <lchmod@@Base+0x898>
   1b9b0:	cmp	r8, r0
   1b9b4:	bhi	1ba18 <lchmod@@Base+0x438c>
   1b9b8:	ldr	r3, [pc, #164]	; 1ba64 <lchmod@@Base+0x43d8>
   1b9bc:	add	r8, r0, #1
   1b9c0:	cmp	r6, r3
   1b9c4:	str	r8, [r5]
   1b9c8:	beq	1b9d4 <lchmod@@Base+0x4348>
   1b9cc:	mov	r0, r6
   1b9d0:	bl	1355c <__assert_fail@plt+0x1c90>
   1b9d4:	mov	r0, r8
   1b9d8:	bl	1caf4 <lchmod@@Base+0x5468>
   1b9dc:	ldr	lr, [r4, #60]	; 0x3c
   1b9e0:	ldr	ip, [r4, #16]
   1b9e4:	mov	r3, sl
   1b9e8:	mov	r2, r9
   1b9ec:	mov	r1, r8
   1b9f0:	str	r0, [r5, #4]
   1b9f4:	ldr	r5, [r4, #56]	; 0x38
   1b9f8:	ldr	r4, [sp, #28]
   1b9fc:	str	fp, [sp, #8]
   1ba00:	str	r4, [sp, #4]
   1ba04:	str	lr, [sp, #16]
   1ba08:	str	r5, [sp, #12]
   1ba0c:	str	ip, [sp]
   1ba10:	mov	r6, r0
   1ba14:	bl	17f24 <lchmod@@Base+0x898>
   1ba18:	ldr	r3, [sp, #24]
   1ba1c:	mov	r0, r6
   1ba20:	str	r3, [r7]
   1ba24:	add	sp, sp, #44	; 0x2c
   1ba28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba2c:	mov	r3, #8
   1ba30:	str	r3, [sp]
   1ba34:	add	r1, sp, #36	; 0x24
   1ba38:	rsb	r2, r2, #1
   1ba3c:	mvn	r3, #-2147483648	; 0x80000000
   1ba40:	mov	r0, #0
   1ba44:	bl	1cd10 <lchmod@@Base+0x5684>
   1ba48:	mov	r5, r0
   1ba4c:	ldm	r6, {r0, r1}
   1ba50:	str	r5, [r4]
   1ba54:	stm	r5, {r0, r1}
   1ba58:	b	1b940 <lchmod@@Base+0x42b4>
   1ba5c:	muleq	r3, r0, r1
   1ba60:	andeq	r0, r3, r8, lsr #3
   1ba64:	andeq	r0, r3, ip, lsr #4
   1ba68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba6c:	sub	sp, sp, #44	; 0x2c
   1ba70:	mov	r5, r0
   1ba74:	mov	sl, r1
   1ba78:	bl	1171c <__errno_location@plt>
   1ba7c:	ldr	r4, [pc, #396]	; 1bc10 <lchmod@@Base+0x4584>
   1ba80:	cmn	r5, #-2147483647	; 0x80000001
   1ba84:	ldr	r6, [r4]
   1ba88:	mov	r8, r0
   1ba8c:	movne	r0, #0
   1ba90:	moveq	r0, #1
   1ba94:	ldr	r3, [r8]
   1ba98:	orrs	r0, r0, r5, lsr #31
   1ba9c:	str	r3, [sp, #24]
   1baa0:	bne	1bc0c <lchmod@@Base+0x4580>
   1baa4:	ldr	r2, [r4, #4]
   1baa8:	cmp	r5, r2
   1baac:	blt	1bb0c <lchmod@@Base+0x4480>
   1bab0:	add	r7, r4, #8
   1bab4:	cmp	r6, r7
   1bab8:	str	r2, [sp, #36]	; 0x24
   1babc:	beq	1bbdc <lchmod@@Base+0x4550>
   1bac0:	mov	r3, #8
   1bac4:	sub	r2, r5, r2
   1bac8:	mov	r0, r6
   1bacc:	str	r3, [sp]
   1bad0:	add	r2, r2, #1
   1bad4:	mvn	r3, #-2147483648	; 0x80000000
   1bad8:	add	r1, sp, #36	; 0x24
   1badc:	bl	1cd10 <lchmod@@Base+0x5684>
   1bae0:	mov	r6, r0
   1bae4:	str	r0, [r4]
   1bae8:	ldr	r0, [r4, #4]
   1baec:	ldr	r2, [sp, #36]	; 0x24
   1baf0:	mov	r1, #0
   1baf4:	sub	r2, r2, r0
   1baf8:	add	r0, r6, r0, lsl #3
   1bafc:	lsl	r2, r2, #3
   1bb00:	bl	11740 <memset@plt>
   1bb04:	ldr	r3, [sp, #36]	; 0x24
   1bb08:	str	r3, [r4, #4]
   1bb0c:	ldr	r2, [r4, #56]	; 0x38
   1bb10:	add	fp, r6, r5, lsl #3
   1bb14:	ldr	r1, [r4, #20]
   1bb18:	ldr	r9, [r6, r5, lsl #3]
   1bb1c:	ldr	r7, [fp, #4]
   1bb20:	ldr	r3, [r4, #16]
   1bb24:	ldr	ip, [r4, #60]	; 0x3c
   1bb28:	str	r2, [sp, #12]
   1bb2c:	ldr	r2, [pc, #224]	; 1bc14 <lchmod@@Base+0x4588>
   1bb30:	orr	r1, r1, #1
   1bb34:	str	r1, [sp, #28]
   1bb38:	str	r1, [sp, #4]
   1bb3c:	str	r2, [sp, #8]
   1bb40:	str	r3, [sp]
   1bb44:	mov	r0, r7
   1bb48:	mov	r1, r9
   1bb4c:	str	ip, [sp, #16]
   1bb50:	mvn	r3, #0
   1bb54:	mov	r2, sl
   1bb58:	bl	17f24 <lchmod@@Base+0x898>
   1bb5c:	cmp	r9, r0
   1bb60:	bhi	1bbc8 <lchmod@@Base+0x453c>
   1bb64:	ldr	r3, [pc, #172]	; 1bc18 <lchmod@@Base+0x458c>
   1bb68:	add	r9, r0, #1
   1bb6c:	cmp	r7, r3
   1bb70:	str	r9, [r6, r5, lsl #3]
   1bb74:	beq	1bb80 <lchmod@@Base+0x44f4>
   1bb78:	mov	r0, r7
   1bb7c:	bl	1355c <__assert_fail@plt+0x1c90>
   1bb80:	mov	r0, r9
   1bb84:	bl	1caf4 <lchmod@@Base+0x5468>
   1bb88:	ldr	ip, [r4, #60]	; 0x3c
   1bb8c:	ldr	r3, [r4, #16]
   1bb90:	ldr	lr, [r4, #56]	; 0x38
   1bb94:	ldr	r4, [pc, #120]	; 1bc14 <lchmod@@Base+0x4588>
   1bb98:	mov	r2, sl
   1bb9c:	mov	r1, r9
   1bba0:	str	r0, [fp, #4]
   1bba4:	str	r4, [sp, #8]
   1bba8:	ldr	r4, [sp, #28]
   1bbac:	str	r3, [sp]
   1bbb0:	str	r4, [sp, #4]
   1bbb4:	str	ip, [sp, #16]
   1bbb8:	str	lr, [sp, #12]
   1bbbc:	mvn	r3, #0
   1bbc0:	mov	r7, r0
   1bbc4:	bl	17f24 <lchmod@@Base+0x898>
   1bbc8:	ldr	r3, [sp, #24]
   1bbcc:	mov	r0, r7
   1bbd0:	str	r3, [r8]
   1bbd4:	add	sp, sp, #44	; 0x2c
   1bbd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbdc:	mov	r3, #8
   1bbe0:	sub	r2, r5, r2
   1bbe4:	str	r3, [sp]
   1bbe8:	add	r1, sp, #36	; 0x24
   1bbec:	add	r2, r2, #1
   1bbf0:	mvn	r3, #-2147483648	; 0x80000000
   1bbf4:	bl	1cd10 <lchmod@@Base+0x5684>
   1bbf8:	mov	r6, r0
   1bbfc:	ldm	r7, {r0, r1}
   1bc00:	str	r6, [r4]
   1bc04:	stm	r6, {r0, r1}
   1bc08:	b	1bae8 <lchmod@@Base+0x445c>
   1bc0c:	bl	11878 <abort@plt>
   1bc10:	muleq	r3, r0, r1
   1bc14:	andeq	r0, r3, r8, lsr #3
   1bc18:	andeq	r0, r3, ip, lsr #4
   1bc1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc20:	sub	sp, sp, #44	; 0x2c
   1bc24:	mov	sl, r0
   1bc28:	bl	1171c <__errno_location@plt>
   1bc2c:	ldr	r4, [pc, #348]	; 1bd90 <lchmod@@Base+0x4704>
   1bc30:	ldr	r2, [r4, #4]
   1bc34:	ldr	r5, [r4]
   1bc38:	cmp	r2, #0
   1bc3c:	ldr	r3, [r0]
   1bc40:	mov	r8, r0
   1bc44:	str	r3, [sp, #28]
   1bc48:	bgt	1bca4 <lchmod@@Base+0x4618>
   1bc4c:	add	r6, r4, #8
   1bc50:	cmp	r5, r6
   1bc54:	str	r2, [sp, #36]	; 0x24
   1bc58:	beq	1bd60 <lchmod@@Base+0x46d4>
   1bc5c:	mov	r3, #8
   1bc60:	mov	r0, r5
   1bc64:	str	r3, [sp]
   1bc68:	rsb	r2, r2, #1
   1bc6c:	mvn	r3, #-2147483648	; 0x80000000
   1bc70:	add	r1, sp, #36	; 0x24
   1bc74:	bl	1cd10 <lchmod@@Base+0x5684>
   1bc78:	mov	r5, r0
   1bc7c:	str	r0, [r4]
   1bc80:	ldr	r0, [r4, #4]
   1bc84:	ldr	r2, [sp, #36]	; 0x24
   1bc88:	mov	r1, #0
   1bc8c:	sub	r2, r2, r0
   1bc90:	add	r0, r5, r0, lsl #3
   1bc94:	lsl	r2, r2, #3
   1bc98:	bl	11740 <memset@plt>
   1bc9c:	ldr	r3, [sp, #36]	; 0x24
   1bca0:	str	r3, [r4, #4]
   1bca4:	ldr	r7, [r4, #20]
   1bca8:	ldr	r9, [r5]
   1bcac:	ldr	r6, [r5, #4]
   1bcb0:	ldr	r2, [r4, #56]	; 0x38
   1bcb4:	ldr	r3, [r4, #16]
   1bcb8:	ldr	ip, [r4, #60]	; 0x3c
   1bcbc:	ldr	fp, [pc, #208]	; 1bd94 <lchmod@@Base+0x4708>
   1bcc0:	orr	r7, r7, #1
   1bcc4:	str	r2, [sp, #12]
   1bcc8:	str	r3, [sp]
   1bccc:	str	r7, [sp, #4]
   1bcd0:	mov	r1, r9
   1bcd4:	mov	r0, r6
   1bcd8:	str	ip, [sp, #16]
   1bcdc:	str	fp, [sp, #8]
   1bce0:	mvn	r3, #0
   1bce4:	mov	r2, sl
   1bce8:	bl	17f24 <lchmod@@Base+0x898>
   1bcec:	cmp	r9, r0
   1bcf0:	bhi	1bd4c <lchmod@@Base+0x46c0>
   1bcf4:	ldr	r3, [pc, #156]	; 1bd98 <lchmod@@Base+0x470c>
   1bcf8:	add	r9, r0, #1
   1bcfc:	cmp	r6, r3
   1bd00:	str	r9, [r5]
   1bd04:	beq	1bd10 <lchmod@@Base+0x4684>
   1bd08:	mov	r0, r6
   1bd0c:	bl	1355c <__assert_fail@plt+0x1c90>
   1bd10:	mov	r0, r9
   1bd14:	bl	1caf4 <lchmod@@Base+0x5468>
   1bd18:	ldr	ip, [r4, #60]	; 0x3c
   1bd1c:	ldr	r3, [r4, #16]
   1bd20:	ldr	lr, [r4, #56]	; 0x38
   1bd24:	mov	r2, sl
   1bd28:	mov	r1, r9
   1bd2c:	str	r0, [r5, #4]
   1bd30:	str	r3, [sp]
   1bd34:	stmib	sp, {r7, fp}
   1bd38:	str	ip, [sp, #16]
   1bd3c:	str	lr, [sp, #12]
   1bd40:	mvn	r3, #0
   1bd44:	mov	r6, r0
   1bd48:	bl	17f24 <lchmod@@Base+0x898>
   1bd4c:	ldr	r3, [sp, #28]
   1bd50:	mov	r0, r6
   1bd54:	str	r3, [r8]
   1bd58:	add	sp, sp, #44	; 0x2c
   1bd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd60:	mov	r3, #8
   1bd64:	str	r3, [sp]
   1bd68:	add	r1, sp, #36	; 0x24
   1bd6c:	rsb	r2, r2, #1
   1bd70:	mvn	r3, #-2147483648	; 0x80000000
   1bd74:	mov	r0, #0
   1bd78:	bl	1cd10 <lchmod@@Base+0x5684>
   1bd7c:	mov	r5, r0
   1bd80:	ldm	r6, {r0, r1}
   1bd84:	str	r5, [r4]
   1bd88:	stm	r5, {r0, r1}
   1bd8c:	b	1bc80 <lchmod@@Base+0x45f4>
   1bd90:	muleq	r3, r0, r1
   1bd94:	andeq	r0, r3, r8, lsr #3
   1bd98:	andeq	r0, r3, ip, lsr #4
   1bd9c:	push	{r4, r5, r6, lr}
   1bda0:	ldr	r4, [r0], #8
   1bda4:	cmp	r4, r0
   1bda8:	beq	1bdc8 <lchmod@@Base+0x473c>
   1bdac:	mov	r0, r4
   1bdb0:	bl	1e018 <lchmod@@Base+0x698c>
   1bdb4:	cmp	r0, #0
   1bdb8:	movne	r3, r0
   1bdbc:	moveq	r3, r4
   1bdc0:	mov	r0, r3
   1bdc4:	pop	{r4, r5, r6, pc}
   1bdc8:	mov	r0, r1
   1bdcc:	mov	r5, r1
   1bdd0:	bl	1dfec <lchmod@@Base+0x6960>
   1bdd4:	subs	r3, r0, #0
   1bdd8:	beq	1bdc0 <lchmod@@Base+0x4734>
   1bddc:	mov	r2, r5
   1bde0:	mov	r1, r4
   1bde4:	pop	{r4, r5, r6, lr}
   1bde8:	b	11530 <memcpy@plt>
   1bdec:	push	{r4, r5, r6, lr}
   1bdf0:	mov	r5, r0
   1bdf4:	ldr	r3, [r0, #4]
   1bdf8:	mov	r4, r0
   1bdfc:	ldr	r0, [r5], #8
   1be00:	lsl	r6, r3, #1
   1be04:	cmp	r0, r5
   1be08:	beq	1be14 <lchmod@@Base+0x4788>
   1be0c:	bl	1355c <__assert_fail@plt+0x1c90>
   1be10:	ldr	r3, [r4, #4]
   1be14:	cmp	r6, r3
   1be18:	bcc	1be48 <lchmod@@Base+0x47bc>
   1be1c:	mov	r0, r6
   1be20:	bl	1dfec <lchmod@@Base+0x6960>
   1be24:	cmp	r0, #0
   1be28:	mov	r3, r0
   1be2c:	mov	r2, r0
   1be30:	moveq	r3, r5
   1be34:	moveq	r6, #1024	; 0x400
   1be38:	movne	r2, #1
   1be3c:	stm	r4, {r3, r6}
   1be40:	mov	r0, r2
   1be44:	pop	{r4, r5, r6, pc}
   1be48:	bl	1171c <__errno_location@plt>
   1be4c:	mov	r1, #12
   1be50:	mov	r3, r5
   1be54:	mov	r6, #1024	; 0x400
   1be58:	mov	r2, #0
   1be5c:	str	r1, [r0]
   1be60:	b	1be3c <lchmod@@Base+0x47b0>
   1be64:	push	{r4, r5, r6, r7, r8, lr}
   1be68:	mov	r5, r0
   1be6c:	ldr	r3, [r0, #4]
   1be70:	ldr	r8, [r5], #8
   1be74:	mov	r4, r0
   1be78:	cmp	r8, r5
   1be7c:	lsl	r7, r3, #1
   1be80:	beq	1bed8 <lchmod@@Base+0x484c>
   1be84:	cmp	r3, r7
   1be88:	bhi	1beb0 <lchmod@@Base+0x4824>
   1be8c:	mov	r0, r8
   1be90:	mov	r1, r7
   1be94:	bl	1e018 <lchmod@@Base+0x698c>
   1be98:	subs	r6, r0, #0
   1be9c:	ldreq	r8, [r4]
   1bea0:	beq	1bebc <lchmod@@Base+0x4830>
   1bea4:	stm	r4, {r6, r7}
   1bea8:	mov	r0, #1
   1beac:	pop	{r4, r5, r6, r7, r8, pc}
   1beb0:	bl	1171c <__errno_location@plt>
   1beb4:	mov	r3, #12
   1beb8:	str	r3, [r0]
   1bebc:	mov	r0, r8
   1bec0:	bl	1355c <__assert_fail@plt+0x1c90>
   1bec4:	mov	r3, #1024	; 0x400
   1bec8:	str	r5, [r4]
   1becc:	str	r3, [r4, #4]
   1bed0:	mov	r0, #0
   1bed4:	pop	{r4, r5, r6, r7, r8, pc}
   1bed8:	mov	r0, r7
   1bedc:	bl	1dfec <lchmod@@Base+0x6960>
   1bee0:	subs	r6, r0, #0
   1bee4:	beq	1bed0 <lchmod@@Base+0x4844>
   1bee8:	mov	r1, r8
   1beec:	ldr	r2, [r4, #4]
   1bef0:	bl	11530 <memcpy@plt>
   1bef4:	b	1bea4 <lchmod@@Base+0x4818>
   1bef8:	push	{r4, r5, r6, r7, r8, lr}
   1befc:	mov	r5, r1
   1bf00:	bl	116d4 <getfilecon@plt>
   1bf04:	subs	r4, r0, #0
   1bf08:	beq	1bf54 <lchmod@@Base+0x48c8>
   1bf0c:	cmp	r4, #10
   1bf10:	beq	1bf1c <lchmod@@Base+0x4890>
   1bf14:	mov	r0, r4
   1bf18:	pop	{r4, r5, r6, r7, r8, pc}
   1bf1c:	ldr	r6, [r5]
   1bf20:	ldr	r1, [pc, #64]	; 1bf68 <lchmod@@Base+0x48dc>
   1bf24:	mov	r0, r6
   1bf28:	bl	114d0 <strcmp@plt>
   1bf2c:	subs	r7, r0, #0
   1bf30:	bne	1bf14 <lchmod@@Base+0x4888>
   1bf34:	mov	r0, r6
   1bf38:	bl	1180c <freecon@plt>
   1bf3c:	str	r7, [r5]
   1bf40:	bl	1171c <__errno_location@plt>
   1bf44:	mov	r3, #61	; 0x3d
   1bf48:	mvn	r4, #0
   1bf4c:	str	r3, [r0]
   1bf50:	b	1bf14 <lchmod@@Base+0x4888>
   1bf54:	bl	1171c <__errno_location@plt>
   1bf58:	mov	r3, #95	; 0x5f
   1bf5c:	mvn	r4, #0
   1bf60:	str	r3, [r0]
   1bf64:	b	1bf14 <lchmod@@Base+0x4888>
   1bf68:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1bf6c:	push	{r4, r5, r6, r7, r8, lr}
   1bf70:	mov	r5, r1
   1bf74:	bl	11650 <lgetfilecon@plt>
   1bf78:	subs	r4, r0, #0
   1bf7c:	beq	1bfc8 <lchmod@@Base+0x493c>
   1bf80:	cmp	r4, #10
   1bf84:	beq	1bf90 <lchmod@@Base+0x4904>
   1bf88:	mov	r0, r4
   1bf8c:	pop	{r4, r5, r6, r7, r8, pc}
   1bf90:	ldr	r6, [r5]
   1bf94:	ldr	r1, [pc, #64]	; 1bfdc <lchmod@@Base+0x4950>
   1bf98:	mov	r0, r6
   1bf9c:	bl	114d0 <strcmp@plt>
   1bfa0:	subs	r7, r0, #0
   1bfa4:	bne	1bf88 <lchmod@@Base+0x48fc>
   1bfa8:	mov	r0, r6
   1bfac:	bl	1180c <freecon@plt>
   1bfb0:	str	r7, [r5]
   1bfb4:	bl	1171c <__errno_location@plt>
   1bfb8:	mov	r3, #61	; 0x3d
   1bfbc:	mvn	r4, #0
   1bfc0:	str	r3, [r0]
   1bfc4:	b	1bf88 <lchmod@@Base+0x48fc>
   1bfc8:	bl	1171c <__errno_location@plt>
   1bfcc:	mov	r3, #95	; 0x5f
   1bfd0:	mvn	r4, #0
   1bfd4:	str	r3, [r0]
   1bfd8:	b	1bf88 <lchmod@@Base+0x48fc>
   1bfdc:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1bfe0:	push	{r4, r5, r6, r7, r8, lr}
   1bfe4:	mov	r5, r1
   1bfe8:	bl	1159c <fgetfilecon@plt>
   1bfec:	subs	r4, r0, #0
   1bff0:	beq	1c03c <lchmod@@Base+0x49b0>
   1bff4:	cmp	r4, #10
   1bff8:	beq	1c004 <lchmod@@Base+0x4978>
   1bffc:	mov	r0, r4
   1c000:	pop	{r4, r5, r6, r7, r8, pc}
   1c004:	ldr	r6, [r5]
   1c008:	ldr	r1, [pc, #64]	; 1c050 <lchmod@@Base+0x49c4>
   1c00c:	mov	r0, r6
   1c010:	bl	114d0 <strcmp@plt>
   1c014:	subs	r7, r0, #0
   1c018:	bne	1bffc <lchmod@@Base+0x4970>
   1c01c:	mov	r0, r6
   1c020:	bl	1180c <freecon@plt>
   1c024:	str	r7, [r5]
   1c028:	bl	1171c <__errno_location@plt>
   1c02c:	mov	r3, #61	; 0x3d
   1c030:	mvn	r4, #0
   1c034:	str	r3, [r0]
   1c038:	b	1bffc <lchmod@@Base+0x4970>
   1c03c:	bl	1171c <__errno_location@plt>
   1c040:	mov	r3, #95	; 0x5f
   1c044:	mvn	r4, #0
   1c048:	str	r3, [r0]
   1c04c:	b	1bffc <lchmod@@Base+0x4970>
   1c050:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1c054:	cmp	r0, #2
   1c058:	push	{r4, r5, r6, r7, r8, lr}
   1c05c:	mov	r4, r0
   1c060:	bhi	1c088 <lchmod@@Base+0x49fc>
   1c064:	bl	1e748 <lchmod@@Base+0x70bc>
   1c068:	mov	r7, r0
   1c06c:	bl	1171c <__errno_location@plt>
   1c070:	mov	r5, r0
   1c074:	mov	r0, r4
   1c078:	ldr	r6, [r5]
   1c07c:	mov	r4, r7
   1c080:	bl	11884 <close@plt>
   1c084:	str	r6, [r5]
   1c088:	mov	r0, r4
   1c08c:	pop	{r4, r5, r6, r7, r8, pc}
   1c090:	push	{r4, r5, r6, lr}
   1c094:	sub	sp, sp, #32
   1c098:	cmp	r1, #0
   1c09c:	mov	r4, r0
   1c0a0:	ldr	r5, [sp, #48]	; 0x30
   1c0a4:	ldr	r6, [sp, #52]	; 0x34
   1c0a8:	beq	1c3c0 <lchmod@@Base+0x4d34>
   1c0ac:	stm	sp, {r2, r3}
   1c0b0:	mov	r3, r1
   1c0b4:	ldr	r2, [pc, #808]	; 1c3e4 <lchmod@@Base+0x4d58>
   1c0b8:	mov	r1, #1
   1c0bc:	bl	11764 <__fprintf_chk@plt>
   1c0c0:	mov	r2, #5
   1c0c4:	ldr	r1, [pc, #796]	; 1c3e8 <lchmod@@Base+0x4d5c>
   1c0c8:	mov	r0, #0
   1c0cc:	bl	11578 <dcgettext@plt>
   1c0d0:	ldr	r3, [pc, #788]	; 1c3ec <lchmod@@Base+0x4d60>
   1c0d4:	ldr	r2, [pc, #788]	; 1c3f0 <lchmod@@Base+0x4d64>
   1c0d8:	str	r3, [sp]
   1c0dc:	mov	r1, #1
   1c0e0:	mov	r3, r0
   1c0e4:	mov	r0, r4
   1c0e8:	bl	11764 <__fprintf_chk@plt>
   1c0ec:	mov	r1, r4
   1c0f0:	mov	r0, #10
   1c0f4:	bl	1156c <fputc_unlocked@plt>
   1c0f8:	mov	r2, #5
   1c0fc:	ldr	r1, [pc, #752]	; 1c3f4 <lchmod@@Base+0x4d68>
   1c100:	mov	r0, #0
   1c104:	bl	11578 <dcgettext@plt>
   1c108:	mov	r1, #1
   1c10c:	ldr	r3, [pc, #740]	; 1c3f8 <lchmod@@Base+0x4d6c>
   1c110:	mov	r2, r0
   1c114:	mov	r0, r4
   1c118:	bl	11764 <__fprintf_chk@plt>
   1c11c:	mov	r1, r4
   1c120:	mov	r0, #10
   1c124:	bl	1156c <fputc_unlocked@plt>
   1c128:	cmp	r6, #9
   1c12c:	ldrls	pc, [pc, r6, lsl #2]
   1c130:	b	1c3d8 <lchmod@@Base+0x4d4c>
   1c134:			; <UNDEFINED> instruction: 0x0001c1b8
   1c138:	andeq	ip, r1, r0, asr #3
   1c13c:	andeq	ip, r1, ip, ror #3
   1c140:	andeq	ip, r1, r0, lsr #4
   1c144:	andeq	ip, r1, ip, asr r2
   1c148:	muleq	r1, r8, r2
   1c14c:	ldrdeq	ip, [r1], -r4
   1c150:	andeq	ip, r1, r8, lsl r3
   1c154:	andeq	ip, r1, r8, ror #6
   1c158:	andeq	ip, r1, ip, asr r1
   1c15c:	ldr	r1, [pc, #664]	; 1c3fc <lchmod@@Base+0x4d70>
   1c160:	mov	r2, #5
   1c164:	mov	r0, #0
   1c168:	bl	11578 <dcgettext@plt>
   1c16c:	ldr	ip, [r5, #32]
   1c170:	ldr	r1, [r5, #28]
   1c174:	ldr	r2, [r5, #24]
   1c178:	ldr	r3, [r5]
   1c17c:	ldr	r6, [r5, #20]
   1c180:	str	ip, [sp, #28]
   1c184:	ldr	lr, [r5, #16]
   1c188:	str	r1, [sp, #24]
   1c18c:	ldr	ip, [r5, #12]
   1c190:	str	r2, [sp, #20]
   1c194:	ldr	r1, [r5, #8]
   1c198:	ldr	r2, [r5, #4]
   1c19c:	str	r6, [sp, #16]
   1c1a0:	stmib	sp, {r1, ip, lr}
   1c1a4:	mov	r1, #1
   1c1a8:	str	r2, [sp]
   1c1ac:	mov	r2, r0
   1c1b0:	mov	r0, r4
   1c1b4:	bl	11764 <__fprintf_chk@plt>
   1c1b8:	add	sp, sp, #32
   1c1bc:	pop	{r4, r5, r6, pc}
   1c1c0:	mov	r2, #5
   1c1c4:	ldr	r1, [pc, #564]	; 1c400 <lchmod@@Base+0x4d74>
   1c1c8:	mov	r0, #0
   1c1cc:	bl	11578 <dcgettext@plt>
   1c1d0:	ldr	r3, [r5]
   1c1d4:	mov	r1, #1
   1c1d8:	mov	r2, r0
   1c1dc:	mov	r0, r4
   1c1e0:	add	sp, sp, #32
   1c1e4:	pop	{r4, r5, r6, lr}
   1c1e8:	b	11764 <__fprintf_chk@plt>
   1c1ec:	mov	r2, #5
   1c1f0:	ldr	r1, [pc, #524]	; 1c404 <lchmod@@Base+0x4d78>
   1c1f4:	mov	r0, #0
   1c1f8:	bl	11578 <dcgettext@plt>
   1c1fc:	ldr	r2, [r5, #4]
   1c200:	ldr	r3, [r5]
   1c204:	mov	r1, #1
   1c208:	str	r2, [sp, #48]	; 0x30
   1c20c:	mov	r2, r0
   1c210:	mov	r0, r4
   1c214:	add	sp, sp, #32
   1c218:	pop	{r4, r5, r6, lr}
   1c21c:	b	11764 <__fprintf_chk@plt>
   1c220:	mov	r2, #5
   1c224:	ldr	r1, [pc, #476]	; 1c408 <lchmod@@Base+0x4d7c>
   1c228:	mov	r0, #0
   1c22c:	bl	11578 <dcgettext@plt>
   1c230:	ldr	r1, [r5, #8]
   1c234:	ldr	r2, [r5, #4]
   1c238:	ldr	r3, [r5]
   1c23c:	str	r1, [sp, #52]	; 0x34
   1c240:	str	r2, [sp, #48]	; 0x30
   1c244:	mov	r1, #1
   1c248:	mov	r2, r0
   1c24c:	mov	r0, r4
   1c250:	add	sp, sp, #32
   1c254:	pop	{r4, r5, r6, lr}
   1c258:	b	11764 <__fprintf_chk@plt>
   1c25c:	mov	r2, #5
   1c260:	ldr	r1, [pc, #420]	; 1c40c <lchmod@@Base+0x4d80>
   1c264:	mov	r0, #0
   1c268:	bl	11578 <dcgettext@plt>
   1c26c:	ldr	r1, [r5, #8]
   1c270:	ldr	ip, [r5, #12]
   1c274:	ldr	r2, [r5, #4]
   1c278:	ldr	r3, [r5]
   1c27c:	stmib	sp, {r1, ip}
   1c280:	str	r2, [sp]
   1c284:	mov	r1, #1
   1c288:	mov	r2, r0
   1c28c:	mov	r0, r4
   1c290:	bl	11764 <__fprintf_chk@plt>
   1c294:	b	1c1b8 <lchmod@@Base+0x4b2c>
   1c298:	mov	r2, #5
   1c29c:	ldr	r1, [pc, #364]	; 1c410 <lchmod@@Base+0x4d84>
   1c2a0:	mov	r0, #0
   1c2a4:	bl	11578 <dcgettext@plt>
   1c2a8:	add	r1, r5, #8
   1c2ac:	ldr	r2, [r5, #4]
   1c2b0:	ldm	r1, {r1, ip, lr}
   1c2b4:	ldr	r3, [r5]
   1c2b8:	str	r2, [sp]
   1c2bc:	stmib	sp, {r1, ip, lr}
   1c2c0:	mov	r1, #1
   1c2c4:	mov	r2, r0
   1c2c8:	mov	r0, r4
   1c2cc:	bl	11764 <__fprintf_chk@plt>
   1c2d0:	b	1c1b8 <lchmod@@Base+0x4b2c>
   1c2d4:	mov	r2, #5
   1c2d8:	ldr	r1, [pc, #308]	; 1c414 <lchmod@@Base+0x4d88>
   1c2dc:	mov	r0, #0
   1c2e0:	bl	11578 <dcgettext@plt>
   1c2e4:	add	r1, r5, #8
   1c2e8:	ldr	r2, [r5, #4]
   1c2ec:	ldm	r1, {r1, ip, lr}
   1c2f0:	ldr	r6, [r5, #20]
   1c2f4:	ldr	r3, [r5]
   1c2f8:	stmib	sp, {r1, ip, lr}
   1c2fc:	mov	r1, #1
   1c300:	str	r2, [sp]
   1c304:	str	r6, [sp, #16]
   1c308:	mov	r2, r0
   1c30c:	mov	r0, r4
   1c310:	bl	11764 <__fprintf_chk@plt>
   1c314:	b	1c1b8 <lchmod@@Base+0x4b2c>
   1c318:	mov	r2, #5
   1c31c:	ldr	r1, [pc, #244]	; 1c418 <lchmod@@Base+0x4d8c>
   1c320:	mov	r0, #0
   1c324:	bl	11578 <dcgettext@plt>
   1c328:	ldr	r2, [r5, #24]
   1c32c:	ldr	r3, [r5]
   1c330:	ldr	r6, [r5, #20]
   1c334:	ldr	lr, [r5, #16]
   1c338:	ldr	ip, [r5, #12]
   1c33c:	str	r2, [sp, #20]
   1c340:	ldr	r1, [r5, #8]
   1c344:	ldr	r2, [r5, #4]
   1c348:	str	r6, [sp, #16]
   1c34c:	stmib	sp, {r1, ip, lr}
   1c350:	mov	r1, #1
   1c354:	str	r2, [sp]
   1c358:	mov	r2, r0
   1c35c:	mov	r0, r4
   1c360:	bl	11764 <__fprintf_chk@plt>
   1c364:	b	1c1b8 <lchmod@@Base+0x4b2c>
   1c368:	mov	r2, #5
   1c36c:	ldr	r1, [pc, #168]	; 1c41c <lchmod@@Base+0x4d90>
   1c370:	mov	r0, #0
   1c374:	bl	11578 <dcgettext@plt>
   1c378:	ldr	r1, [r5, #28]
   1c37c:	ldr	r2, [r5, #24]
   1c380:	ldr	r3, [r5]
   1c384:	ldr	r6, [r5, #20]
   1c388:	ldr	lr, [r5, #16]
   1c38c:	str	r1, [sp, #24]
   1c390:	ldr	ip, [r5, #12]
   1c394:	str	r2, [sp, #20]
   1c398:	ldr	r1, [r5, #8]
   1c39c:	ldr	r2, [r5, #4]
   1c3a0:	str	r6, [sp, #16]
   1c3a4:	stmib	sp, {r1, ip, lr}
   1c3a8:	mov	r1, #1
   1c3ac:	str	r2, [sp]
   1c3b0:	mov	r2, r0
   1c3b4:	mov	r0, r4
   1c3b8:	bl	11764 <__fprintf_chk@plt>
   1c3bc:	b	1c1b8 <lchmod@@Base+0x4b2c>
   1c3c0:	str	r3, [sp]
   1c3c4:	mov	r1, #1
   1c3c8:	mov	r3, r2
   1c3cc:	ldr	r2, [pc, #76]	; 1c420 <lchmod@@Base+0x4d94>
   1c3d0:	bl	11764 <__fprintf_chk@plt>
   1c3d4:	b	1c0c0 <lchmod@@Base+0x4a34>
   1c3d8:	mov	r2, #5
   1c3dc:	ldr	r1, [pc, #64]	; 1c424 <lchmod@@Base+0x4d98>
   1c3e0:	b	1c164 <lchmod@@Base+0x4ad8>
   1c3e4:	andeq	pc, r1, r0, lsl #19
   1c3e8:	muleq	r1, r4, r9
   1c3ec:	andeq	r0, r0, r6, ror #15
   1c3f0:	andeq	pc, r1, ip, ror #24
   1c3f4:	muleq	r1, r8, r9
   1c3f8:	andeq	pc, r1, r4, asr #20
   1c3fc:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1c400:	andeq	pc, r1, r8, ror #20
   1c404:	andeq	pc, r1, r8, ror sl	; <UNPREDICTABLE>
   1c408:	muleq	r1, r0, sl
   1c40c:	andeq	pc, r1, ip, lsr #21
   1c410:	andeq	pc, r1, ip, asr #21
   1c414:	strdeq	pc, [r1], -r0
   1c418:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   1c41c:	andeq	pc, r1, r4, asr #22
   1c420:	andeq	pc, r1, ip, lsl #19
   1c424:	andeq	pc, r1, r8, lsr #23
   1c428:	push	{r4, r5, lr}
   1c42c:	sub	sp, sp, #12
   1c430:	ldr	r5, [sp, #24]
   1c434:	ldr	ip, [r5]
   1c438:	cmp	ip, #0
   1c43c:	beq	1c458 <lchmod@@Base+0x4dcc>
   1c440:	mov	lr, r5
   1c444:	mov	ip, #0
   1c448:	ldr	r4, [lr, #4]!
   1c44c:	add	ip, ip, #1
   1c450:	cmp	r4, #0
   1c454:	bne	1c448 <lchmod@@Base+0x4dbc>
   1c458:	stm	sp, {r5, ip}
   1c45c:	bl	1c090 <lchmod@@Base+0x4a04>
   1c460:	add	sp, sp, #12
   1c464:	pop	{r4, r5, pc}
   1c468:	push	{r4, r5, lr}
   1c46c:	sub	sp, sp, #76	; 0x4c
   1c470:	mov	r5, r0
   1c474:	ldr	ip, [sp, #88]	; 0x58
   1c478:	ldr	r0, [ip]
   1c47c:	cmp	r0, #0
   1c480:	str	r0, [sp, #32]
   1c484:	beq	1c858 <lchmod@@Base+0x51cc>
   1c488:	ldr	r0, [ip, #4]
   1c48c:	cmp	r0, #0
   1c490:	str	r0, [sp, #36]	; 0x24
   1c494:	beq	1c860 <lchmod@@Base+0x51d4>
   1c498:	ldr	r0, [ip, #8]
   1c49c:	cmp	r0, #0
   1c4a0:	str	r0, [sp, #40]	; 0x28
   1c4a4:	beq	1c868 <lchmod@@Base+0x51dc>
   1c4a8:	ldr	r0, [ip, #12]
   1c4ac:	cmp	r0, #0
   1c4b0:	str	r0, [sp, #44]	; 0x2c
   1c4b4:	beq	1c870 <lchmod@@Base+0x51e4>
   1c4b8:	ldr	r0, [ip, #16]
   1c4bc:	cmp	r0, #0
   1c4c0:	str	r0, [sp, #48]	; 0x30
   1c4c4:	beq	1c878 <lchmod@@Base+0x51ec>
   1c4c8:	ldr	r0, [ip, #20]
   1c4cc:	cmp	r0, #0
   1c4d0:	str	r0, [sp, #52]	; 0x34
   1c4d4:	beq	1c880 <lchmod@@Base+0x51f4>
   1c4d8:	ldr	r0, [ip, #24]
   1c4dc:	cmp	r0, #0
   1c4e0:	str	r0, [sp, #56]	; 0x38
   1c4e4:	beq	1c888 <lchmod@@Base+0x51fc>
   1c4e8:	ldr	r0, [ip, #28]
   1c4ec:	cmp	r0, #0
   1c4f0:	str	r0, [sp, #60]	; 0x3c
   1c4f4:	beq	1c890 <lchmod@@Base+0x5204>
   1c4f8:	ldr	r0, [ip, #32]
   1c4fc:	cmp	r0, #0
   1c500:	str	r0, [sp, #64]	; 0x40
   1c504:	beq	1c898 <lchmod@@Base+0x520c>
   1c508:	ldr	r0, [ip, #36]	; 0x24
   1c50c:	cmp	r0, #0
   1c510:	movne	r4, #10
   1c514:	moveq	r4, #9
   1c518:	cmp	r1, #0
   1c51c:	beq	1c830 <lchmod@@Base+0x51a4>
   1c520:	stm	sp, {r2, r3}
   1c524:	mov	r0, r5
   1c528:	mov	r3, r1
   1c52c:	ldr	r2, [pc, #876]	; 1c8a0 <lchmod@@Base+0x5214>
   1c530:	mov	r1, #1
   1c534:	bl	11764 <__fprintf_chk@plt>
   1c538:	mov	r2, #5
   1c53c:	ldr	r1, [pc, #864]	; 1c8a4 <lchmod@@Base+0x5218>
   1c540:	mov	r0, #0
   1c544:	bl	11578 <dcgettext@plt>
   1c548:	ldr	r3, [pc, #856]	; 1c8a8 <lchmod@@Base+0x521c>
   1c54c:	ldr	r2, [pc, #856]	; 1c8ac <lchmod@@Base+0x5220>
   1c550:	str	r3, [sp]
   1c554:	mov	r1, #1
   1c558:	mov	r3, r0
   1c55c:	mov	r0, r5
   1c560:	bl	11764 <__fprintf_chk@plt>
   1c564:	mov	r1, r5
   1c568:	mov	r0, #10
   1c56c:	bl	1156c <fputc_unlocked@plt>
   1c570:	mov	r2, #5
   1c574:	ldr	r1, [pc, #820]	; 1c8b0 <lchmod@@Base+0x5224>
   1c578:	mov	r0, #0
   1c57c:	bl	11578 <dcgettext@plt>
   1c580:	mov	r1, #1
   1c584:	ldr	r3, [pc, #808]	; 1c8b4 <lchmod@@Base+0x5228>
   1c588:	mov	r2, r0
   1c58c:	mov	r0, r5
   1c590:	bl	11764 <__fprintf_chk@plt>
   1c594:	mov	r1, r5
   1c598:	mov	r0, #10
   1c59c:	bl	1156c <fputc_unlocked@plt>
   1c5a0:	cmp	r4, #9
   1c5a4:	ldrls	pc, [pc, r4, lsl #2]
   1c5a8:	b	1c84c <lchmod@@Base+0x51c0>
   1c5ac:	andeq	ip, r1, r0, lsr r6
   1c5b0:	andeq	ip, r1, r8, lsr r6
   1c5b4:	andeq	ip, r1, r4, ror #12
   1c5b8:	muleq	r1, r8, r6
   1c5bc:	ldrdeq	ip, [r1], -r0
   1c5c0:	andeq	ip, r1, ip, lsl #14
   1c5c4:	andeq	ip, r1, r8, asr #14
   1c5c8:	andeq	ip, r1, ip, lsl #15
   1c5cc:	ldrdeq	ip, [r1], -r8
   1c5d0:	ldrdeq	ip, [r1], -r4
   1c5d4:	ldr	r1, [pc, #732]	; 1c8b8 <lchmod@@Base+0x522c>
   1c5d8:	mov	r2, #5
   1c5dc:	mov	r0, #0
   1c5e0:	bl	11578 <dcgettext@plt>
   1c5e4:	ldr	ip, [sp, #64]	; 0x40
   1c5e8:	ldr	r1, [sp, #60]	; 0x3c
   1c5ec:	ldr	r2, [sp, #56]	; 0x38
   1c5f0:	ldr	lr, [sp, #48]	; 0x30
   1c5f4:	str	ip, [sp, #28]
   1c5f8:	str	r1, [sp, #24]
   1c5fc:	ldr	ip, [sp, #44]	; 0x2c
   1c600:	ldr	r1, [sp, #40]	; 0x28
   1c604:	ldr	r4, [sp, #52]	; 0x34
   1c608:	str	r2, [sp, #20]
   1c60c:	ldr	r2, [sp, #36]	; 0x24
   1c610:	stmib	sp, {r1, ip, lr}
   1c614:	mov	r1, #1
   1c618:	str	r2, [sp]
   1c61c:	ldr	r3, [sp, #32]
   1c620:	str	r4, [sp, #16]
   1c624:	mov	r2, r0
   1c628:	mov	r0, r5
   1c62c:	bl	11764 <__fprintf_chk@plt>
   1c630:	add	sp, sp, #76	; 0x4c
   1c634:	pop	{r4, r5, pc}
   1c638:	mov	r2, #5
   1c63c:	ldr	r1, [pc, #632]	; 1c8bc <lchmod@@Base+0x5230>
   1c640:	mov	r0, #0
   1c644:	bl	11578 <dcgettext@plt>
   1c648:	ldr	r3, [sp, #32]
   1c64c:	mov	r1, #1
   1c650:	mov	r2, r0
   1c654:	mov	r0, r5
   1c658:	add	sp, sp, #76	; 0x4c
   1c65c:	pop	{r4, r5, lr}
   1c660:	b	11764 <__fprintf_chk@plt>
   1c664:	mov	r2, #5
   1c668:	ldr	r1, [pc, #592]	; 1c8c0 <lchmod@@Base+0x5234>
   1c66c:	mov	r0, #0
   1c670:	bl	11578 <dcgettext@plt>
   1c674:	ldr	r2, [sp, #36]	; 0x24
   1c678:	ldr	r3, [sp, #32]
   1c67c:	str	r2, [sp, #88]	; 0x58
   1c680:	mov	r1, #1
   1c684:	mov	r2, r0
   1c688:	mov	r0, r5
   1c68c:	add	sp, sp, #76	; 0x4c
   1c690:	pop	{r4, r5, lr}
   1c694:	b	11764 <__fprintf_chk@plt>
   1c698:	mov	r2, #5
   1c69c:	ldr	r1, [pc, #544]	; 1c8c4 <lchmod@@Base+0x5238>
   1c6a0:	mov	r0, #0
   1c6a4:	bl	11578 <dcgettext@plt>
   1c6a8:	ldr	r1, [sp, #40]	; 0x28
   1c6ac:	ldr	r2, [sp, #36]	; 0x24
   1c6b0:	str	r1, [sp, #4]
   1c6b4:	str	r2, [sp]
   1c6b8:	ldr	r3, [sp, #32]
   1c6bc:	mov	r1, #1
   1c6c0:	mov	r2, r0
   1c6c4:	mov	r0, r5
   1c6c8:	bl	11764 <__fprintf_chk@plt>
   1c6cc:	b	1c630 <lchmod@@Base+0x4fa4>
   1c6d0:	mov	r2, #5
   1c6d4:	ldr	r1, [pc, #492]	; 1c8c8 <lchmod@@Base+0x523c>
   1c6d8:	mov	r0, #0
   1c6dc:	bl	11578 <dcgettext@plt>
   1c6e0:	ldr	r1, [sp, #40]	; 0x28
   1c6e4:	ldr	ip, [sp, #44]	; 0x2c
   1c6e8:	ldr	r2, [sp, #36]	; 0x24
   1c6ec:	ldr	r3, [sp, #32]
   1c6f0:	stmib	sp, {r1, ip}
   1c6f4:	str	r2, [sp]
   1c6f8:	mov	r1, #1
   1c6fc:	mov	r2, r0
   1c700:	mov	r0, r5
   1c704:	bl	11764 <__fprintf_chk@plt>
   1c708:	b	1c630 <lchmod@@Base+0x4fa4>
   1c70c:	mov	r2, #5
   1c710:	ldr	r1, [pc, #436]	; 1c8cc <lchmod@@Base+0x5240>
   1c714:	mov	r0, #0
   1c718:	bl	11578 <dcgettext@plt>
   1c71c:	add	r1, sp, #40	; 0x28
   1c720:	ldr	r2, [sp, #36]	; 0x24
   1c724:	ldm	r1, {r1, ip, lr}
   1c728:	ldr	r3, [sp, #32]
   1c72c:	str	r2, [sp]
   1c730:	stmib	sp, {r1, ip, lr}
   1c734:	mov	r1, #1
   1c738:	mov	r2, r0
   1c73c:	mov	r0, r5
   1c740:	bl	11764 <__fprintf_chk@plt>
   1c744:	b	1c630 <lchmod@@Base+0x4fa4>
   1c748:	mov	r2, #5
   1c74c:	ldr	r1, [pc, #380]	; 1c8d0 <lchmod@@Base+0x5244>
   1c750:	mov	r0, #0
   1c754:	bl	11578 <dcgettext@plt>
   1c758:	add	r1, sp, #40	; 0x28
   1c75c:	ldr	r2, [sp, #36]	; 0x24
   1c760:	ldm	r1, {r1, ip, lr}
   1c764:	ldr	r4, [sp, #52]	; 0x34
   1c768:	str	r2, [sp]
   1c76c:	stmib	sp, {r1, ip, lr}
   1c770:	mov	r1, #1
   1c774:	ldr	r3, [sp, #32]
   1c778:	str	r4, [sp, #16]
   1c77c:	mov	r2, r0
   1c780:	mov	r0, r5
   1c784:	bl	11764 <__fprintf_chk@plt>
   1c788:	b	1c630 <lchmod@@Base+0x4fa4>
   1c78c:	mov	r2, #5
   1c790:	ldr	r1, [pc, #316]	; 1c8d4 <lchmod@@Base+0x5248>
   1c794:	mov	r0, #0
   1c798:	bl	11578 <dcgettext@plt>
   1c79c:	add	r1, sp, #40	; 0x28
   1c7a0:	ldr	r2, [sp, #56]	; 0x38
   1c7a4:	ldm	r1, {r1, ip, lr}
   1c7a8:	ldr	r4, [sp, #52]	; 0x34
   1c7ac:	str	r2, [sp, #20]
   1c7b0:	ldr	r2, [sp, #36]	; 0x24
   1c7b4:	stmib	sp, {r1, ip, lr}
   1c7b8:	mov	r1, #1
   1c7bc:	str	r2, [sp]
   1c7c0:	ldr	r3, [sp, #32]
   1c7c4:	str	r4, [sp, #16]
   1c7c8:	mov	r2, r0
   1c7cc:	mov	r0, r5
   1c7d0:	bl	11764 <__fprintf_chk@plt>
   1c7d4:	b	1c630 <lchmod@@Base+0x4fa4>
   1c7d8:	mov	r2, #5
   1c7dc:	ldr	r1, [pc, #244]	; 1c8d8 <lchmod@@Base+0x524c>
   1c7e0:	mov	r0, #0
   1c7e4:	bl	11578 <dcgettext@plt>
   1c7e8:	ldr	r1, [sp, #60]	; 0x3c
   1c7ec:	ldr	r2, [sp, #56]	; 0x38
   1c7f0:	ldr	lr, [sp, #48]	; 0x30
   1c7f4:	ldr	ip, [sp, #44]	; 0x2c
   1c7f8:	str	r1, [sp, #24]
   1c7fc:	ldr	r1, [sp, #40]	; 0x28
   1c800:	ldr	r4, [sp, #52]	; 0x34
   1c804:	str	r2, [sp, #20]
   1c808:	ldr	r2, [sp, #36]	; 0x24
   1c80c:	stmib	sp, {r1, ip, lr}
   1c810:	mov	r1, #1
   1c814:	str	r2, [sp]
   1c818:	ldr	r3, [sp, #32]
   1c81c:	str	r4, [sp, #16]
   1c820:	mov	r2, r0
   1c824:	mov	r0, r5
   1c828:	bl	11764 <__fprintf_chk@plt>
   1c82c:	b	1c630 <lchmod@@Base+0x4fa4>
   1c830:	str	r3, [sp]
   1c834:	mov	r1, #1
   1c838:	mov	r3, r2
   1c83c:	mov	r0, r5
   1c840:	ldr	r2, [pc, #148]	; 1c8dc <lchmod@@Base+0x5250>
   1c844:	bl	11764 <__fprintf_chk@plt>
   1c848:	b	1c538 <lchmod@@Base+0x4eac>
   1c84c:	mov	r2, #5
   1c850:	ldr	r1, [pc, #136]	; 1c8e0 <lchmod@@Base+0x5254>
   1c854:	b	1c5dc <lchmod@@Base+0x4f50>
   1c858:	mov	r4, r0
   1c85c:	b	1c518 <lchmod@@Base+0x4e8c>
   1c860:	mov	r4, #1
   1c864:	b	1c518 <lchmod@@Base+0x4e8c>
   1c868:	mov	r4, #2
   1c86c:	b	1c518 <lchmod@@Base+0x4e8c>
   1c870:	mov	r4, #3
   1c874:	b	1c518 <lchmod@@Base+0x4e8c>
   1c878:	mov	r4, #4
   1c87c:	b	1c518 <lchmod@@Base+0x4e8c>
   1c880:	mov	r4, #5
   1c884:	b	1c518 <lchmod@@Base+0x4e8c>
   1c888:	mov	r4, #6
   1c88c:	b	1c518 <lchmod@@Base+0x4e8c>
   1c890:	mov	r4, #7
   1c894:	b	1c518 <lchmod@@Base+0x4e8c>
   1c898:	mov	r4, #8
   1c89c:	b	1c518 <lchmod@@Base+0x4e8c>
   1c8a0:	andeq	pc, r1, r0, lsl #19
   1c8a4:	muleq	r1, r4, r9
   1c8a8:	andeq	r0, r0, r6, ror #15
   1c8ac:	andeq	pc, r1, ip, ror #24
   1c8b0:	muleq	r1, r8, r9
   1c8b4:	andeq	pc, r1, r4, asr #20
   1c8b8:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1c8bc:	andeq	pc, r1, r8, ror #20
   1c8c0:	andeq	pc, r1, r8, ror sl	; <UNPREDICTABLE>
   1c8c4:	muleq	r1, r0, sl
   1c8c8:	andeq	pc, r1, ip, lsr #21
   1c8cc:	andeq	pc, r1, ip, asr #21
   1c8d0:	strdeq	pc, [r1], -r0
   1c8d4:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   1c8d8:	andeq	pc, r1, r4, asr #22
   1c8dc:	andeq	pc, r1, ip, lsl #19
   1c8e0:	andeq	pc, r1, r8, lsr #23
   1c8e4:	push	{r3}		; (str r3, [sp, #-4]!)
   1c8e8:	push	{lr}		; (str lr, [sp, #-4]!)
   1c8ec:	sub	sp, sp, #56	; 0x38
   1c8f0:	add	r3, sp, #64	; 0x40
   1c8f4:	ldr	ip, [sp, #64]	; 0x40
   1c8f8:	str	r3, [sp, #12]
   1c8fc:	cmp	ip, #0
   1c900:	str	ip, [sp, #16]
   1c904:	beq	1c99c <lchmod@@Base+0x5310>
   1c908:	ldr	ip, [sp, #68]	; 0x44
   1c90c:	cmp	ip, #0
   1c910:	str	ip, [sp, #20]
   1c914:	beq	1c9bc <lchmod@@Base+0x5330>
   1c918:	ldr	ip, [sp, #72]	; 0x48
   1c91c:	cmp	ip, #0
   1c920:	str	ip, [sp, #24]
   1c924:	beq	1c9c4 <lchmod@@Base+0x5338>
   1c928:	ldr	ip, [sp, #76]	; 0x4c
   1c92c:	cmp	ip, #0
   1c930:	str	ip, [sp, #28]
   1c934:	beq	1c9cc <lchmod@@Base+0x5340>
   1c938:	ldr	ip, [sp, #80]	; 0x50
   1c93c:	cmp	ip, #0
   1c940:	str	ip, [sp, #32]
   1c944:	beq	1c9d4 <lchmod@@Base+0x5348>
   1c948:	ldr	ip, [sp, #84]	; 0x54
   1c94c:	cmp	ip, #0
   1c950:	str	ip, [sp, #36]	; 0x24
   1c954:	beq	1c9dc <lchmod@@Base+0x5350>
   1c958:	ldr	ip, [sp, #88]	; 0x58
   1c95c:	cmp	ip, #0
   1c960:	str	ip, [sp, #40]	; 0x28
   1c964:	beq	1c9e4 <lchmod@@Base+0x5358>
   1c968:	ldr	ip, [sp, #92]	; 0x5c
   1c96c:	cmp	ip, #0
   1c970:	str	ip, [sp, #44]	; 0x2c
   1c974:	beq	1c9ec <lchmod@@Base+0x5360>
   1c978:	ldr	ip, [sp, #96]	; 0x60
   1c97c:	cmp	ip, #0
   1c980:	str	ip, [sp, #48]	; 0x30
   1c984:	beq	1c9f4 <lchmod@@Base+0x5368>
   1c988:	ldr	ip, [sp, #100]	; 0x64
   1c98c:	cmp	ip, #0
   1c990:	str	ip, [sp, #52]	; 0x34
   1c994:	movne	ip, #10
   1c998:	moveq	ip, #9
   1c99c:	add	r3, sp, #16
   1c9a0:	stm	sp, {r3, ip}
   1c9a4:	ldr	r3, [sp, #60]	; 0x3c
   1c9a8:	bl	1c090 <lchmod@@Base+0x4a04>
   1c9ac:	add	sp, sp, #56	; 0x38
   1c9b0:	pop	{lr}		; (ldr lr, [sp], #4)
   1c9b4:	add	sp, sp, #4
   1c9b8:	bx	lr
   1c9bc:	mov	ip, #1
   1c9c0:	b	1c99c <lchmod@@Base+0x5310>
   1c9c4:	mov	ip, #2
   1c9c8:	b	1c99c <lchmod@@Base+0x5310>
   1c9cc:	mov	ip, #3
   1c9d0:	b	1c99c <lchmod@@Base+0x5310>
   1c9d4:	mov	ip, #4
   1c9d8:	b	1c99c <lchmod@@Base+0x5310>
   1c9dc:	mov	ip, #5
   1c9e0:	b	1c99c <lchmod@@Base+0x5310>
   1c9e4:	mov	ip, #6
   1c9e8:	b	1c99c <lchmod@@Base+0x5310>
   1c9ec:	mov	ip, #7
   1c9f0:	b	1c99c <lchmod@@Base+0x5310>
   1c9f4:	mov	ip, #8
   1c9f8:	b	1c99c <lchmod@@Base+0x5310>
   1c9fc:	ldr	r3, [pc, #116]	; 1ca78 <lchmod@@Base+0x53ec>
   1ca00:	push	{r4, lr}
   1ca04:	mov	r0, #10
   1ca08:	ldr	r1, [r3]
   1ca0c:	bl	1156c <fputc_unlocked@plt>
   1ca10:	mov	r2, #5
   1ca14:	ldr	r1, [pc, #96]	; 1ca7c <lchmod@@Base+0x53f0>
   1ca18:	mov	r0, #0
   1ca1c:	bl	11578 <dcgettext@plt>
   1ca20:	ldr	r2, [pc, #88]	; 1ca80 <lchmod@@Base+0x53f4>
   1ca24:	mov	r1, r0
   1ca28:	mov	r0, #1
   1ca2c:	bl	1174c <__printf_chk@plt>
   1ca30:	mov	r2, #5
   1ca34:	ldr	r1, [pc, #72]	; 1ca84 <lchmod@@Base+0x53f8>
   1ca38:	mov	r0, #0
   1ca3c:	bl	11578 <dcgettext@plt>
   1ca40:	ldr	r3, [pc, #64]	; 1ca88 <lchmod@@Base+0x53fc>
   1ca44:	ldr	r2, [pc, #64]	; 1ca8c <lchmod@@Base+0x5400>
   1ca48:	mov	r1, r0
   1ca4c:	mov	r0, #1
   1ca50:	bl	1174c <__printf_chk@plt>
   1ca54:	mov	r2, #5
   1ca58:	ldr	r1, [pc, #48]	; 1ca90 <lchmod@@Base+0x5404>
   1ca5c:	mov	r0, #0
   1ca60:	bl	11578 <dcgettext@plt>
   1ca64:	ldr	r2, [pc, #40]	; 1ca94 <lchmod@@Base+0x5408>
   1ca68:	pop	{r4, lr}
   1ca6c:	mov	r1, r0
   1ca70:	mov	r0, #1
   1ca74:	b	1174c <__printf_chk@plt>
   1ca78:	andeq	r0, r3, r4, ror #3
   1ca7c:	andeq	pc, r1, r4, ror #23
   1ca80:	strdeq	pc, [r1], -r8
   1ca84:	andeq	pc, r1, r0, lsl ip	; <UNPREDICTABLE>
   1ca88:	ldrdeq	pc, [r1], -ip
   1ca8c:	andeq	pc, r1, r4, lsl #8
   1ca90:	andeq	pc, r1, r4, lsr #24
   1ca94:	andeq	pc, r1, ip, asr #24
   1ca98:	push	{r4, r5, r6, lr}
   1ca9c:	mov	r6, r0
   1caa0:	mov	r5, r1
   1caa4:	mov	r4, r2
   1caa8:	bl	1e6fc <lchmod@@Base+0x7070>
   1caac:	cmp	r0, #0
   1cab0:	popne	{r4, r5, r6, pc}
   1cab4:	cmp	r6, #0
   1cab8:	beq	1cac8 <lchmod@@Base+0x543c>
   1cabc:	cmp	r5, #0
   1cac0:	cmpne	r4, #0
   1cac4:	popeq	{r4, r5, r6, pc}
   1cac8:	bl	1d114 <lchmod@@Base+0x5a88>
   1cacc:	push	{r4, lr}
   1cad0:	bl	1dfec <lchmod@@Base+0x6960>
   1cad4:	cmp	r0, #0
   1cad8:	popne	{r4, pc}
   1cadc:	bl	1d114 <lchmod@@Base+0x5a88>
   1cae0:	push	{r4, lr}
   1cae4:	bl	1dfec <lchmod@@Base+0x6960>
   1cae8:	cmp	r0, #0
   1caec:	popne	{r4, pc}
   1caf0:	bl	1d114 <lchmod@@Base+0x5a88>
   1caf4:	push	{r4, lr}
   1caf8:	bl	1dfec <lchmod@@Base+0x6960>
   1cafc:	cmp	r0, #0
   1cb00:	popne	{r4, pc}
   1cb04:	bl	1d114 <lchmod@@Base+0x5a88>
   1cb08:	push	{r4, r5, r6, lr}
   1cb0c:	mov	r5, r0
   1cb10:	mov	r4, r1
   1cb14:	bl	1e018 <lchmod@@Base+0x698c>
   1cb18:	cmp	r0, #0
   1cb1c:	popne	{r4, r5, r6, pc}
   1cb20:	adds	r4, r4, #0
   1cb24:	movne	r4, #1
   1cb28:	cmp	r5, #0
   1cb2c:	orreq	r4, r4, #1
   1cb30:	cmp	r4, #0
   1cb34:	popeq	{r4, r5, r6, pc}
   1cb38:	bl	1d114 <lchmod@@Base+0x5a88>
   1cb3c:	push	{r4, lr}
   1cb40:	cmp	r1, #0
   1cb44:	orreq	r1, r1, #1
   1cb48:	bl	1e018 <lchmod@@Base+0x698c>
   1cb4c:	cmp	r0, #0
   1cb50:	popne	{r4, pc}
   1cb54:	bl	1d114 <lchmod@@Base+0x5a88>
   1cb58:	push	{r4, r5, r6, lr}
   1cb5c:	mov	r6, r0
   1cb60:	mov	r5, r1
   1cb64:	mov	r4, r2
   1cb68:	bl	1e6fc <lchmod@@Base+0x7070>
   1cb6c:	cmp	r0, #0
   1cb70:	popne	{r4, r5, r6, pc}
   1cb74:	cmp	r6, #0
   1cb78:	beq	1cb88 <lchmod@@Base+0x54fc>
   1cb7c:	cmp	r5, #0
   1cb80:	cmpne	r4, #0
   1cb84:	popeq	{r4, r5, r6, pc}
   1cb88:	bl	1d114 <lchmod@@Base+0x5a88>
   1cb8c:	cmp	r2, #0
   1cb90:	cmpne	r1, #0
   1cb94:	moveq	r2, #1
   1cb98:	moveq	r1, r2
   1cb9c:	push	{r4, lr}
   1cba0:	bl	1e6fc <lchmod@@Base+0x7070>
   1cba4:	cmp	r0, #0
   1cba8:	popne	{r4, pc}
   1cbac:	bl	1d114 <lchmod@@Base+0x5a88>
   1cbb0:	push	{r4, lr}
   1cbb4:	mov	r2, r1
   1cbb8:	mov	r1, r0
   1cbbc:	mov	r0, #0
   1cbc0:	bl	1e6fc <lchmod@@Base+0x7070>
   1cbc4:	cmp	r0, #0
   1cbc8:	popne	{r4, pc}
   1cbcc:	bl	1d114 <lchmod@@Base+0x5a88>
   1cbd0:	cmp	r1, #0
   1cbd4:	cmpne	r0, #0
   1cbd8:	moveq	r2, #1
   1cbdc:	movne	r2, r1
   1cbe0:	moveq	r1, r2
   1cbe4:	movne	r1, r0
   1cbe8:	push	{r4, lr}
   1cbec:	mov	r0, #0
   1cbf0:	bl	1e6fc <lchmod@@Base+0x7070>
   1cbf4:	cmp	r0, #0
   1cbf8:	popne	{r4, pc}
   1cbfc:	bl	1d114 <lchmod@@Base+0x5a88>
   1cc00:	cmp	r0, #0
   1cc04:	push	{r4, r5, r6, lr}
   1cc08:	mov	r5, r1
   1cc0c:	ldr	r4, [r1]
   1cc10:	beq	1cc4c <lchmod@@Base+0x55c0>
   1cc14:	lsr	r2, r4, #1
   1cc18:	add	r3, r2, #1
   1cc1c:	mvn	r3, r3
   1cc20:	cmp	r4, r3
   1cc24:	bhi	1cc68 <lchmod@@Base+0x55dc>
   1cc28:	add	r4, r4, #1
   1cc2c:	add	r4, r4, r2
   1cc30:	mov	r1, r4
   1cc34:	mov	r2, #1
   1cc38:	bl	1e6fc <lchmod@@Base+0x7070>
   1cc3c:	cmp	r0, #0
   1cc40:	beq	1cc6c <lchmod@@Base+0x55e0>
   1cc44:	str	r4, [r5]
   1cc48:	pop	{r4, r5, r6, pc}
   1cc4c:	cmp	r4, #0
   1cc50:	moveq	r4, #64	; 0x40
   1cc54:	mov	r1, r4
   1cc58:	mov	r2, #1
   1cc5c:	bl	1e6fc <lchmod@@Base+0x7070>
   1cc60:	cmp	r0, #0
   1cc64:	bne	1cc44 <lchmod@@Base+0x55b8>
   1cc68:	bl	1d114 <lchmod@@Base+0x5a88>
   1cc6c:	cmp	r4, #0
   1cc70:	bne	1cc68 <lchmod@@Base+0x55dc>
   1cc74:	str	r4, [r5]
   1cc78:	pop	{r4, r5, r6, pc}
   1cc7c:	cmp	r0, #0
   1cc80:	push	{r4, r5, r6, lr}
   1cc84:	mov	r5, r1
   1cc88:	ldr	r4, [r1]
   1cc8c:	mov	r6, r2
   1cc90:	beq	1ccd4 <lchmod@@Base+0x5648>
   1cc94:	lsr	r1, r4, #1
   1cc98:	add	r3, r1, #1
   1cc9c:	mvn	r3, r3
   1cca0:	cmp	r4, r3
   1cca4:	bhi	1cd0c <lchmod@@Base+0x5680>
   1cca8:	add	r4, r4, #1
   1ccac:	add	r4, r4, r1
   1ccb0:	mov	r1, r4
   1ccb4:	bl	1e6fc <lchmod@@Base+0x7070>
   1ccb8:	cmp	r0, #0
   1ccbc:	bne	1cccc <lchmod@@Base+0x5640>
   1ccc0:	cmp	r4, #0
   1ccc4:	cmpne	r6, #0
   1ccc8:	bne	1cd0c <lchmod@@Base+0x5680>
   1cccc:	str	r4, [r5]
   1ccd0:	pop	{r4, r5, r6, pc}
   1ccd4:	cmp	r4, #0
   1ccd8:	bne	1ccf4 <lchmod@@Base+0x5668>
   1ccdc:	mov	r1, r2
   1cce0:	mov	r0, #64	; 0x40
   1cce4:	bl	1e848 <lchmod@@Base+0x71bc>
   1cce8:	cmp	r0, #0
   1ccec:	movne	r4, r0
   1ccf0:	addeq	r4, r0, #1
   1ccf4:	mov	r2, r6
   1ccf8:	mov	r1, r4
   1ccfc:	mov	r0, #0
   1cd00:	bl	1e6fc <lchmod@@Base+0x7070>
   1cd04:	cmp	r0, #0
   1cd08:	bne	1cccc <lchmod@@Base+0x5640>
   1cd0c:	bl	1d114 <lchmod@@Base+0x5a88>
   1cd10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd14:	sub	sp, sp, #12
   1cd18:	ldr	r6, [r1]
   1cd1c:	mov	r8, r1
   1cd20:	mov	r9, r0
   1cd24:	asrs	r4, r6, #1
   1cd28:	mov	sl, r2
   1cd2c:	mov	fp, r3
   1cd30:	ldr	r7, [sp, #48]	; 0x30
   1cd34:	bmi	1ceb0 <lchmod@@Base+0x5824>
   1cd38:	mvn	r1, #-2147483648	; 0x80000000
   1cd3c:	sub	r1, r1, r4
   1cd40:	cmp	r6, r1
   1cd44:	movle	r1, #0
   1cd48:	movgt	r1, #1
   1cd4c:	mvn	r3, fp
   1cd50:	cmp	r1, #0
   1cd54:	addeq	r4, r4, r6
   1cd58:	mvnne	r4, #-2147483648	; 0x80000000
   1cd5c:	lsr	r3, r3, #31
   1cd60:	cmp	fp, r4
   1cd64:	movge	r2, #0
   1cd68:	andlt	r2, r3, #1
   1cd6c:	cmp	r2, #0
   1cd70:	beq	1ce60 <lchmod@@Base+0x57d4>
   1cd74:	cmp	r7, #0
   1cd78:	blt	1cf48 <lchmod@@Base+0x58bc>
   1cd7c:	bne	1cf40 <lchmod@@Base+0x58b4>
   1cd80:	mov	r5, #64	; 0x40
   1cd84:	mov	r1, r7
   1cd88:	mov	r0, r5
   1cd8c:	str	r3, [sp, #4]
   1cd90:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cd94:	mov	r1, r7
   1cd98:	mov	r4, r0
   1cd9c:	mov	r0, r5
   1cda0:	bl	1ec74 <lchmod@@Base+0x75e8>
   1cda4:	ldr	r3, [sp, #4]
   1cda8:	sub	r5, r5, r1
   1cdac:	cmp	r9, #0
   1cdb0:	sub	r2, r4, r6
   1cdb4:	streq	r9, [r8]
   1cdb8:	cmp	r2, sl
   1cdbc:	bge	1ce40 <lchmod@@Base+0x57b4>
   1cdc0:	cmp	sl, #0
   1cdc4:	blt	1cee0 <lchmod@@Base+0x5854>
   1cdc8:	cmp	r6, #0
   1cdcc:	blt	1cdec <lchmod@@Base+0x5760>
   1cdd0:	mvn	r2, #-2147483648	; 0x80000000
   1cdd4:	sub	r2, r2, sl
   1cdd8:	cmp	r6, r2
   1cddc:	movle	r2, #0
   1cde0:	movgt	r2, #1
   1cde4:	cmp	r2, #0
   1cde8:	bne	1cedc <lchmod@@Base+0x5850>
   1cdec:	add	r6, r6, sl
   1cdf0:	cmp	fp, r6
   1cdf4:	movge	r3, #0
   1cdf8:	andlt	r3, r3, #1
   1cdfc:	cmp	r3, #0
   1ce00:	mov	r4, r6
   1ce04:	bne	1cedc <lchmod@@Base+0x5850>
   1ce08:	cmp	r7, #0
   1ce0c:	blt	1cef4 <lchmod@@Base+0x5868>
   1ce10:	beq	1ce3c <lchmod@@Base+0x57b0>
   1ce14:	cmp	r6, #0
   1ce18:	blt	1cf98 <lchmod@@Base+0x590c>
   1ce1c:	mov	r1, r7
   1ce20:	mvn	r0, #-2147483648	; 0x80000000
   1ce24:	bl	1ea54 <lchmod@@Base+0x73c8>
   1ce28:	cmp	r6, r0
   1ce2c:	movle	r0, #0
   1ce30:	movgt	r0, #1
   1ce34:	cmp	r0, #0
   1ce38:	bne	1cedc <lchmod@@Base+0x5850>
   1ce3c:	mul	r5, r6, r7
   1ce40:	mov	r1, r5
   1ce44:	mov	r0, r9
   1ce48:	bl	1e018 <lchmod@@Base+0x698c>
   1ce4c:	cmp	r0, #0
   1ce50:	beq	1cec4 <lchmod@@Base+0x5838>
   1ce54:	str	r4, [r8]
   1ce58:	add	sp, sp, #12
   1ce5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce60:	cmp	r7, #0
   1ce64:	blt	1cf20 <lchmod@@Base+0x5894>
   1ce68:	beq	1cd80 <lchmod@@Base+0x56f4>
   1ce6c:	cmp	r4, #0
   1ce70:	blt	1cf50 <lchmod@@Base+0x58c4>
   1ce74:	mov	r1, r7
   1ce78:	mvn	r0, #-2147483648	; 0x80000000
   1ce7c:	str	r3, [sp, #4]
   1ce80:	bl	1ea54 <lchmod@@Base+0x73c8>
   1ce84:	ldr	r3, [sp, #4]
   1ce88:	cmp	r0, r4
   1ce8c:	movge	r0, #0
   1ce90:	movlt	r0, #1
   1ce94:	cmp	r0, #0
   1ce98:	mvnne	r5, #-2147483648	; 0x80000000
   1ce9c:	bne	1cd84 <lchmod@@Base+0x56f8>
   1cea0:	mul	r5, r7, r4
   1cea4:	cmp	r5, #63	; 0x3f
   1cea8:	bgt	1cdac <lchmod@@Base+0x5720>
   1ceac:	b	1cd80 <lchmod@@Base+0x56f4>
   1ceb0:	rsb	r1, r4, #-2147483648	; 0x80000000
   1ceb4:	cmp	r6, r1
   1ceb8:	movge	r1, #0
   1cebc:	movlt	r1, #1
   1cec0:	b	1cd4c <lchmod@@Base+0x56c0>
   1cec4:	adds	r5, r5, #0
   1cec8:	movne	r5, #1
   1cecc:	cmp	r9, #0
   1ced0:	orreq	r5, r5, #1
   1ced4:	cmp	r5, #0
   1ced8:	beq	1ce54 <lchmod@@Base+0x57c8>
   1cedc:	bl	1d114 <lchmod@@Base+0x5a88>
   1cee0:	rsb	r2, sl, #-2147483648	; 0x80000000
   1cee4:	cmp	r6, r2
   1cee8:	movge	r2, #0
   1ceec:	movlt	r2, #1
   1cef0:	b	1cde4 <lchmod@@Base+0x5758>
   1cef4:	cmp	r6, #0
   1cef8:	blt	1cf7c <lchmod@@Base+0x58f0>
   1cefc:	cmn	r7, #1
   1cf00:	beq	1ce3c <lchmod@@Base+0x57b0>
   1cf04:	mov	r1, r7
   1cf08:	mov	r0, #-2147483648	; 0x80000000
   1cf0c:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cf10:	cmp	r6, r0
   1cf14:	movle	r0, #0
   1cf18:	movgt	r0, #1
   1cf1c:	b	1ce34 <lchmod@@Base+0x57a8>
   1cf20:	cmp	r4, #0
   1cf24:	blt	1cfbc <lchmod@@Base+0x5930>
   1cf28:	cmn	r7, #1
   1cf2c:	beq	1cea0 <lchmod@@Base+0x5814>
   1cf30:	str	r3, [sp, #4]
   1cf34:	mov	r1, r7
   1cf38:	mov	r0, #-2147483648	; 0x80000000
   1cf3c:	b	1ce80 <lchmod@@Base+0x57f4>
   1cf40:	mov	r4, fp
   1cf44:	b	1ce74 <lchmod@@Base+0x57e8>
   1cf48:	mov	r4, fp
   1cf4c:	b	1cf28 <lchmod@@Base+0x589c>
   1cf50:	cmn	r4, #1
   1cf54:	beq	1cea0 <lchmod@@Base+0x5814>
   1cf58:	mov	r1, r4
   1cf5c:	mov	r0, #-2147483648	; 0x80000000
   1cf60:	str	r3, [sp, #4]
   1cf64:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cf68:	ldr	r3, [sp, #4]
   1cf6c:	cmp	r7, r0
   1cf70:	movle	r0, #0
   1cf74:	movgt	r0, #1
   1cf78:	b	1ce94 <lchmod@@Base+0x5808>
   1cf7c:	mov	r1, r7
   1cf80:	mvn	r0, #-2147483648	; 0x80000000
   1cf84:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cf88:	cmp	r6, r0
   1cf8c:	movge	r0, #0
   1cf90:	movlt	r0, #1
   1cf94:	b	1ce34 <lchmod@@Base+0x57a8>
   1cf98:	cmn	r6, #1
   1cf9c:	beq	1ce3c <lchmod@@Base+0x57b0>
   1cfa0:	mov	r1, r6
   1cfa4:	mov	r0, #-2147483648	; 0x80000000
   1cfa8:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cfac:	cmp	r7, r0
   1cfb0:	movle	r0, #0
   1cfb4:	movgt	r0, #1
   1cfb8:	b	1ce34 <lchmod@@Base+0x57a8>
   1cfbc:	mov	r1, r7
   1cfc0:	mvn	r0, #-2147483648	; 0x80000000
   1cfc4:	str	r3, [sp, #4]
   1cfc8:	bl	1ea54 <lchmod@@Base+0x73c8>
   1cfcc:	ldr	r3, [sp, #4]
   1cfd0:	cmp	r0, r4
   1cfd4:	movle	r0, #0
   1cfd8:	movgt	r0, #1
   1cfdc:	b	1ce94 <lchmod@@Base+0x5808>
   1cfe0:	push	{r4, lr}
   1cfe4:	mov	r1, #1
   1cfe8:	bl	1dfa4 <lchmod@@Base+0x6918>
   1cfec:	cmp	r0, #0
   1cff0:	popne	{r4, pc}
   1cff4:	bl	1d114 <lchmod@@Base+0x5a88>
   1cff8:	push	{r4, lr}
   1cffc:	mov	r1, #1
   1d000:	bl	1dfa4 <lchmod@@Base+0x6918>
   1d004:	cmp	r0, #0
   1d008:	popne	{r4, pc}
   1d00c:	bl	1d114 <lchmod@@Base+0x5a88>
   1d010:	push	{r4, lr}
   1d014:	bl	1dfa4 <lchmod@@Base+0x6918>
   1d018:	cmp	r0, #0
   1d01c:	popne	{r4, pc}
   1d020:	bl	1d114 <lchmod@@Base+0x5a88>
   1d024:	push	{r4, lr}
   1d028:	bl	1dfa4 <lchmod@@Base+0x6918>
   1d02c:	cmp	r0, #0
   1d030:	popne	{r4, pc}
   1d034:	bl	1d114 <lchmod@@Base+0x5a88>
   1d038:	push	{r4, r5, r6, lr}
   1d03c:	mov	r6, r0
   1d040:	mov	r0, r1
   1d044:	mov	r4, r1
   1d048:	bl	1dfec <lchmod@@Base+0x6960>
   1d04c:	subs	r5, r0, #0
   1d050:	beq	1d068 <lchmod@@Base+0x59dc>
   1d054:	mov	r2, r4
   1d058:	mov	r1, r6
   1d05c:	bl	11530 <memcpy@plt>
   1d060:	mov	r0, r5
   1d064:	pop	{r4, r5, r6, pc}
   1d068:	bl	1d114 <lchmod@@Base+0x5a88>
   1d06c:	push	{r4, r5, r6, lr}
   1d070:	mov	r6, r0
   1d074:	mov	r0, r1
   1d078:	mov	r4, r1
   1d07c:	bl	1dfec <lchmod@@Base+0x6960>
   1d080:	subs	r5, r0, #0
   1d084:	beq	1d09c <lchmod@@Base+0x5a10>
   1d088:	mov	r2, r4
   1d08c:	mov	r1, r6
   1d090:	bl	11530 <memcpy@plt>
   1d094:	mov	r0, r5
   1d098:	pop	{r4, r5, r6, pc}
   1d09c:	bl	1d114 <lchmod@@Base+0x5a88>
   1d0a0:	push	{r4, r5, r6, lr}
   1d0a4:	mov	r6, r0
   1d0a8:	add	r0, r1, #1
   1d0ac:	mov	r4, r1
   1d0b0:	bl	1dfec <lchmod@@Base+0x6960>
   1d0b4:	subs	r5, r0, #0
   1d0b8:	beq	1d0d8 <lchmod@@Base+0x5a4c>
   1d0bc:	mov	r3, #0
   1d0c0:	mov	r1, r6
   1d0c4:	strb	r3, [r5, r4]
   1d0c8:	mov	r2, r4
   1d0cc:	bl	11530 <memcpy@plt>
   1d0d0:	mov	r0, r5
   1d0d4:	pop	{r4, r5, r6, pc}
   1d0d8:	bl	1d114 <lchmod@@Base+0x5a88>
   1d0dc:	push	{r4, r5, r6, lr}
   1d0e0:	mov	r6, r0
   1d0e4:	bl	116e0 <strlen@plt>
   1d0e8:	add	r4, r0, #1
   1d0ec:	mov	r0, r4
   1d0f0:	bl	1dfec <lchmod@@Base+0x6960>
   1d0f4:	subs	r5, r0, #0
   1d0f8:	beq	1d110 <lchmod@@Base+0x5a84>
   1d0fc:	mov	r2, r4
   1d100:	mov	r1, r6
   1d104:	bl	11530 <memcpy@plt>
   1d108:	mov	r0, r5
   1d10c:	pop	{r4, r5, r6, pc}
   1d110:	bl	1d114 <lchmod@@Base+0x5a88>
   1d114:	ldr	r3, [pc, #44]	; 1d148 <lchmod@@Base+0x5abc>
   1d118:	push	{r4, lr}
   1d11c:	mov	r2, #5
   1d120:	ldr	r1, [pc, #36]	; 1d14c <lchmod@@Base+0x5ac0>
   1d124:	mov	r0, #0
   1d128:	ldr	r4, [r3]
   1d12c:	bl	11578 <dcgettext@plt>
   1d130:	ldr	r2, [pc, #24]	; 1d150 <lchmod@@Base+0x5ac4>
   1d134:	mov	r1, #0
   1d138:	mov	r3, r0
   1d13c:	mov	r0, r4
   1d140:	bl	11638 <error@plt>
   1d144:	bl	11878 <abort@plt>
   1d148:	andeq	r0, r3, ip, lsl #3
   1d14c:	muleq	r1, ip, ip
   1d150:	muleq	r1, r0, r7
   1d154:	push	{r4, lr}
   1d158:	orr	r1, r1, #512	; 0x200
   1d15c:	bl	14958 <__assert_fail@plt+0x308c>
   1d160:	cmp	r0, #0
   1d164:	popne	{r4, pc}
   1d168:	bl	1171c <__errno_location@plt>
   1d16c:	ldr	r3, [r0]
   1d170:	cmp	r3, #22
   1d174:	beq	1d17c <lchmod@@Base+0x5af0>
   1d178:	bl	1d114 <lchmod@@Base+0x5a88>
   1d17c:	ldr	r3, [pc, #12]	; 1d190 <lchmod@@Base+0x5b04>
   1d180:	mov	r2, #41	; 0x29
   1d184:	ldr	r1, [pc, #8]	; 1d194 <lchmod@@Base+0x5b08>
   1d188:	ldr	r0, [pc, #8]	; 1d198 <lchmod@@Base+0x5b0c>
   1d18c:	bl	118cc <__assert_fail@plt>
   1d190:			; <UNDEFINED> instruction: 0x0001fcb0
   1d194:			; <UNDEFINED> instruction: 0x0001fcbc
   1d198:	andeq	pc, r1, r8, asr #25
   1d19c:	ldr	r3, [r0, #48]	; 0x30
   1d1a0:	and	r3, r3, #17
   1d1a4:	cmp	r3, #16
   1d1a8:	beq	1d1cc <lchmod@@Base+0x5b40>
   1d1ac:	cmp	r3, #17
   1d1b0:	beq	1d1bc <lchmod@@Base+0x5b30>
   1d1b4:	mov	r0, #0
   1d1b8:	bx	lr
   1d1bc:	ldr	r0, [r1, #48]	; 0x30
   1d1c0:	adds	r0, r0, #0
   1d1c4:	movne	r0, #1
   1d1c8:	bx	lr
   1d1cc:	mov	r0, #1
   1d1d0:	bx	lr
   1d1d4:	andeq	r0, r0, r0
   1d1d8:	cmp	r2, #36	; 0x24
   1d1dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1e0:	sub	sp, sp, #52	; 0x34
   1d1e4:	bhi	1df74 <lchmod@@Base+0x68e8>
   1d1e8:	cmp	r1, #0
   1d1ec:	mov	r6, r2
   1d1f0:	mov	sl, r0
   1d1f4:	mov	r5, r1
   1d1f8:	mov	r8, r3
   1d1fc:	addeq	r5, sp, #44	; 0x2c
   1d200:	bl	1171c <__errno_location@plt>
   1d204:	mov	r3, #0
   1d208:	str	r3, [r0]
   1d20c:	mov	fp, r0
   1d210:	bl	116b0 <__ctype_b_loc@plt>
   1d214:	ldrb	r3, [sl]
   1d218:	mov	r2, sl
   1d21c:	ldr	r0, [r0]
   1d220:	b	1d228 <lchmod@@Base+0x5b9c>
   1d224:	ldrb	r3, [r2, #1]!
   1d228:	lsl	r1, r3, #1
   1d22c:	ldrh	r4, [r0, r1]
   1d230:	ands	r4, r4, #8192	; 0x2000
   1d234:	bne	1d224 <lchmod@@Base+0x5b98>
   1d238:	cmp	r3, #45	; 0x2d
   1d23c:	bne	1d250 <lchmod@@Base+0x5bc4>
   1d240:	mov	r4, #4
   1d244:	mov	r0, r4
   1d248:	add	sp, sp, #52	; 0x34
   1d24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d250:	mov	r2, r6
   1d254:	mov	r3, r4
   1d258:	mov	r1, r5
   1d25c:	mov	r0, sl
   1d260:	bl	1153c <__strtoull_internal@plt>
   1d264:	ldr	r9, [r5]
   1d268:	cmp	sl, r9
   1d26c:	mov	r6, r0
   1d270:	mov	r7, r1
   1d274:	beq	1d2bc <lchmod@@Base+0x5c30>
   1d278:	ldr	r4, [fp]
   1d27c:	cmp	r4, #0
   1d280:	bne	1d2ac <lchmod@@Base+0x5c20>
   1d284:	ldr	r3, [sp, #88]	; 0x58
   1d288:	cmp	r3, #0
   1d28c:	beq	1d29c <lchmod@@Base+0x5c10>
   1d290:	ldrb	sl, [r9]
   1d294:	cmp	sl, #0
   1d298:	bne	1d2f0 <lchmod@@Base+0x5c64>
   1d29c:	mov	r0, r4
   1d2a0:	strd	r6, [r8]
   1d2a4:	add	sp, sp, #52	; 0x34
   1d2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2ac:	cmp	r4, #34	; 0x22
   1d2b0:	bne	1d240 <lchmod@@Base+0x5bb4>
   1d2b4:	mov	r4, #1
   1d2b8:	b	1d284 <lchmod@@Base+0x5bf8>
   1d2bc:	ldr	r3, [sp, #88]	; 0x58
   1d2c0:	cmp	r3, #0
   1d2c4:	beq	1d240 <lchmod@@Base+0x5bb4>
   1d2c8:	ldrb	sl, [r9]
   1d2cc:	cmp	sl, #0
   1d2d0:	beq	1d240 <lchmod@@Base+0x5bb4>
   1d2d4:	mov	r1, sl
   1d2d8:	mov	r0, r3
   1d2dc:	bl	116f8 <strchr@plt>
   1d2e0:	cmp	r0, #0
   1d2e4:	movne	r6, #1
   1d2e8:	movne	r7, #0
   1d2ec:	beq	1d240 <lchmod@@Base+0x5bb4>
   1d2f0:	mov	r1, sl
   1d2f4:	ldr	r0, [sp, #88]	; 0x58
   1d2f8:	bl	116f8 <strchr@plt>
   1d2fc:	cmp	r0, #0
   1d300:	beq	1de60 <lchmod@@Base+0x67d4>
   1d304:	sub	r3, sl, #69	; 0x45
   1d308:	cmp	r3, #47	; 0x2f
   1d30c:	ldrls	pc, [pc, r3, lsl #2]
   1d310:	b	1d404 <lchmod@@Base+0x5d78>
   1d314:	ldrdeq	sp, [r1], -r4
   1d318:	andeq	sp, r1, r4, lsl #8
   1d31c:	ldrdeq	sp, [r1], -r4
   1d320:	andeq	sp, r1, r4, lsl #8
   1d324:	andeq	sp, r1, r4, lsl #8
   1d328:	andeq	sp, r1, r4, lsl #8
   1d32c:	ldrdeq	sp, [r1], -r4
   1d330:	andeq	sp, r1, r4, lsl #8
   1d334:	ldrdeq	sp, [r1], -r4
   1d338:	andeq	sp, r1, r4, lsl #8
   1d33c:	andeq	sp, r1, r4, lsl #8
   1d340:	ldrdeq	sp, [r1], -r4
   1d344:	andeq	sp, r1, r4, lsl #8
   1d348:	andeq	sp, r1, r4, lsl #8
   1d34c:	andeq	sp, r1, r4, lsl #8
   1d350:	ldrdeq	sp, [r1], -r4
   1d354:	andeq	sp, r1, r4, lsl #8
   1d358:	andeq	sp, r1, r4, lsl #8
   1d35c:	andeq	sp, r1, r4, lsl #8
   1d360:	andeq	sp, r1, r4, lsl #8
   1d364:	ldrdeq	sp, [r1], -r4
   1d368:	ldrdeq	sp, [r1], -r4
   1d36c:	andeq	sp, r1, r4, lsl #8
   1d370:	andeq	sp, r1, r4, lsl #8
   1d374:	andeq	sp, r1, r4, lsl #8
   1d378:	andeq	sp, r1, r4, lsl #8
   1d37c:	andeq	sp, r1, r4, lsl #8
   1d380:	andeq	sp, r1, r4, lsl #8
   1d384:	andeq	sp, r1, r4, lsl #8
   1d388:	andeq	sp, r1, r4, lsl #8
   1d38c:	andeq	sp, r1, r4, lsl #8
   1d390:	andeq	sp, r1, r4, lsl #8
   1d394:	andeq	sp, r1, r4, lsl #8
   1d398:	andeq	sp, r1, r4, lsl #8
   1d39c:	ldrdeq	sp, [r1], -r4
   1d3a0:	andeq	sp, r1, r4, lsl #8
   1d3a4:	andeq	sp, r1, r4, lsl #8
   1d3a8:	andeq	sp, r1, r4, lsl #8
   1d3ac:	ldrdeq	sp, [r1], -r4
   1d3b0:	andeq	sp, r1, r4, lsl #8
   1d3b4:	ldrdeq	sp, [r1], -r4
   1d3b8:	andeq	sp, r1, r4, lsl #8
   1d3bc:	andeq	sp, r1, r4, lsl #8
   1d3c0:	andeq	sp, r1, r4, lsl #8
   1d3c4:	andeq	sp, r1, r4, lsl #8
   1d3c8:	andeq	sp, r1, r4, lsl #8
   1d3cc:	andeq	sp, r1, r4, lsl #8
   1d3d0:	ldrdeq	sp, [r1], -r4
   1d3d4:	mov	r1, #48	; 0x30
   1d3d8:	ldr	r0, [sp, #88]	; 0x58
   1d3dc:	bl	116f8 <strchr@plt>
   1d3e0:	cmp	r0, #0
   1d3e4:	beq	1def4 <lchmod@@Base+0x6868>
   1d3e8:	ldrb	r3, [r9, #1]
   1d3ec:	cmp	r3, #68	; 0x44
   1d3f0:	beq	1ded4 <lchmod@@Base+0x6848>
   1d3f4:	cmp	r3, #105	; 0x69
   1d3f8:	beq	1dea4 <lchmod@@Base+0x6818>
   1d3fc:	cmp	r3, #66	; 0x42
   1d400:	beq	1ded4 <lchmod@@Base+0x6848>
   1d404:	ldr	r3, [pc, #2948]	; 1df90 <lchmod@@Base+0x6904>
   1d408:	mvn	r2, #0
   1d40c:	mov	r1, #1024	; 0x400
   1d410:	mov	lr, #0
   1d414:	strd	r2, [sp]
   1d418:	mov	r3, #1
   1d41c:	str	r3, [sp, #12]
   1d420:	sub	sl, sl, #66	; 0x42
   1d424:	cmp	sl, #53	; 0x35
   1d428:	ldrls	pc, [pc, sl, lsl #2]
   1d42c:	b	1de60 <lchmod@@Base+0x67d4>
   1d430:	andeq	sp, r1, r0, lsr lr
   1d434:	andeq	sp, r1, r0, ror #28
   1d438:	andeq	sp, r1, r0, ror #28
   1d43c:	andeq	sp, r1, ip, lsr #25
   1d440:	andeq	sp, r1, r0, ror #28
   1d444:	andeq	sp, r1, r8, ror #23
   1d448:	andeq	sp, r1, r0, ror #28
   1d44c:	andeq	sp, r1, r0, ror #28
   1d450:	andeq	sp, r1, r0, ror #28
   1d454:	andeq	sp, r1, ip, ror #28
   1d458:	andeq	sp, r1, r0, ror #28
   1d45c:	andeq	sp, r1, r8, lsl #10
   1d460:	andeq	sp, r1, r0, ror #28
   1d464:	andeq	sp, r1, r0, ror #28
   1d468:	muleq	r1, r4, r5
   1d46c:	andeq	sp, r1, r0, ror #28
   1d470:	andeq	sp, r1, r0, ror #28
   1d474:	andeq	sp, r1, r0, ror #28
   1d478:	andeq	sp, r1, r4, lsl r9
   1d47c:	andeq	sp, r1, r0, ror #28
   1d480:	andeq	sp, r1, r0, ror #28
   1d484:	andeq	sp, r1, r0, ror #28
   1d488:	andeq	sp, r1, r0, ror #28
   1d48c:	andeq	sp, r1, ip, ror #13
   1d490:	andeq	sp, r1, r8, asr #20
   1d494:	andeq	sp, r1, r0, ror #28
   1d498:	andeq	sp, r1, r0, ror #28
   1d49c:	andeq	sp, r1, r0, ror #28
   1d4a0:	andeq	sp, r1, r0, ror #28
   1d4a4:	andeq	sp, r1, r0, ror #28
   1d4a8:	andeq	sp, r1, r0, ror #28
   1d4ac:	andeq	sp, r1, r0, ror #28
   1d4b0:	andeq	sp, r1, r8, lsl sl
   1d4b4:	andeq	sp, r1, r0, lsl sl
   1d4b8:	andeq	sp, r1, r0, ror #28
   1d4bc:	andeq	sp, r1, r0, ror #28
   1d4c0:	andeq	sp, r1, r0, ror #28
   1d4c4:	andeq	sp, r1, r8, ror #23
   1d4c8:	andeq	sp, r1, r0, ror #28
   1d4cc:	andeq	sp, r1, r0, ror #28
   1d4d0:	andeq	sp, r1, r0, ror #28
   1d4d4:	andeq	sp, r1, ip, ror #28
   1d4d8:	andeq	sp, r1, r0, ror #28
   1d4dc:	andeq	sp, r1, r8, lsl #10
   1d4e0:	andeq	sp, r1, r0, ror #28
   1d4e4:	andeq	sp, r1, r0, ror #28
   1d4e8:	andeq	sp, r1, r0, ror #28
   1d4ec:	andeq	sp, r1, r0, ror #28
   1d4f0:	andeq	sp, r1, r0, ror #28
   1d4f4:	andeq	sp, r1, r0, ror #28
   1d4f8:	andeq	sp, r1, r4, lsl r9
   1d4fc:	andeq	sp, r1, r0, ror #28
   1d500:	andeq	sp, r1, r0, ror #28
   1d504:	strdeq	sp, [r1], -r4
   1d508:	mul	r0, r6, lr
   1d50c:	ldrd	sl, [sp]
   1d510:	umull	r2, r3, r6, r1
   1d514:	mla	r0, r1, r7, r0
   1d518:	cmp	r7, fp
   1d51c:	cmpeq	r6, sl
   1d520:	add	r3, r0, r3
   1d524:	mvnhi	r3, #0
   1d528:	mvnhi	r2, #0
   1d52c:	mul	r6, r1, r3
   1d530:	umull	r0, r1, r1, r2
   1d534:	mla	lr, lr, r2, r6
   1d538:	ldrd	r6, [sp]
   1d53c:	movhi	ip, #1
   1d540:	movls	ip, #0
   1d544:	cmp	r7, r3
   1d548:	cmpeq	r6, r2
   1d54c:	mvncc	r0, #0
   1d550:	add	r1, lr, r1
   1d554:	mov	sl, r6
   1d558:	movcc	r1, r0
   1d55c:	mov	fp, r7
   1d560:	cmp	fp, r3
   1d564:	cmpeq	sl, r2
   1d568:	mov	r6, r0
   1d56c:	mov	r7, r1
   1d570:	orrcc	ip, ip, #1
   1d574:	ldr	r2, [sp, #12]
   1d578:	orr	r4, r4, ip
   1d57c:	add	r3, r9, r2
   1d580:	str	r3, [r5]
   1d584:	ldrb	r3, [r9, r2]
   1d588:	cmp	r3, #0
   1d58c:	orrne	r4, r4, #2
   1d590:	b	1d29c <lchmod@@Base+0x5c10>
   1d594:	ldrd	sl, [sp]
   1d598:	umull	r2, r3, r6, r1
   1d59c:	mul	r0, r6, lr
   1d5a0:	cmp	r7, fp
   1d5a4:	cmpeq	r6, sl
   1d5a8:	mvnhi	r2, #0
   1d5ac:	mla	r0, r1, r7, r0
   1d5b0:	umull	sl, fp, r2, r1
   1d5b4:	add	r3, r0, r3
   1d5b8:	mul	r0, lr, r2
   1d5bc:	mvnhi	r3, #0
   1d5c0:	strd	sl, [sp, #16]
   1d5c4:	ldrd	sl, [sp]
   1d5c8:	mla	r0, r1, r3, r0
   1d5cc:	ldr	ip, [sp, #20]
   1d5d0:	cmp	r3, fp
   1d5d4:	add	r0, r0, ip
   1d5d8:	cmpeq	r2, sl
   1d5dc:	str	r0, [sp, #20]
   1d5e0:	bls	1d5f8 <lchmod@@Base+0x5f6c>
   1d5e4:	mvn	sl, #0
   1d5e8:	mvn	fp, #0
   1d5ec:	strd	sl, [sp, #16]
   1d5f0:	ldr	r0, [sp, #20]
   1d5f4:	ldrd	sl, [sp]
   1d5f8:	cmp	r7, fp
   1d5fc:	cmpeq	r6, sl
   1d600:	mul	r0, r1, r0
   1d604:	ldrd	r6, [sp, #16]
   1d608:	mla	ip, lr, r6, r0
   1d60c:	mov	r0, r6
   1d610:	movhi	r0, #1
   1d614:	movls	r0, #0
   1d618:	cmp	r3, fp
   1d61c:	cmpeq	r2, sl
   1d620:	ldrd	r2, [sp, #16]
   1d624:	umull	r6, r7, r1, r6
   1d628:	orrhi	r0, r0, #1
   1d62c:	cmp	fp, r3
   1d630:	cmpeq	sl, r2
   1d634:	add	r7, ip, r7
   1d638:	bcc	1df44 <lchmod@@Base+0x68b8>
   1d63c:	mov	sl, r6
   1d640:	mov	fp, r7
   1d644:	strd	r6, [sp, #24]
   1d648:	mul	r3, r1, fp
   1d64c:	umull	r6, r7, r1, sl
   1d650:	mla	ip, lr, sl, r3
   1d654:	ldrd	sl, [sp]
   1d658:	ldrd	r2, [sp, #16]
   1d65c:	add	r7, ip, r7
   1d660:	cmp	fp, r3
   1d664:	cmpeq	sl, r2
   1d668:	mov	r3, fp
   1d66c:	mov	r2, sl
   1d670:	ldrd	sl, [sp, #24]
   1d674:	orrcc	r0, r0, #1
   1d678:	str	r0, [sp, #16]
   1d67c:	cmp	r3, fp
   1d680:	cmpeq	r2, sl
   1d684:	bcs	1dbdc <lchmod@@Base+0x6550>
   1d688:	mvn	r2, #0
   1d68c:	mvn	r3, #0
   1d690:	mul	ip, lr, r2
   1d694:	ldrd	sl, [sp]
   1d698:	mla	ip, r1, r3, ip
   1d69c:	umull	r6, r7, r2, r1
   1d6a0:	ldrd	r0, [sp, #24]
   1d6a4:	add	r7, ip, r7
   1d6a8:	cmp	fp, r1
   1d6ac:	ldr	r1, [sp, #16]
   1d6b0:	cmpeq	sl, r0
   1d6b4:	orrcc	r1, r1, #1
   1d6b8:	cmp	r3, fp
   1d6bc:	cmpeq	r2, sl
   1d6c0:	mvnhi	r0, #0
   1d6c4:	movls	ip, r7
   1d6c8:	movhi	ip, r0
   1d6cc:	movls	r0, r6
   1d6d0:	cmp	r3, fp
   1d6d4:	cmpeq	r2, sl
   1d6d8:	mov	r7, ip
   1d6dc:	mov	r6, r0
   1d6e0:	movls	ip, r1
   1d6e4:	orrhi	ip, r1, #1
   1d6e8:	b	1d574 <lchmod@@Base+0x5ee8>
   1d6ec:	ldrd	sl, [sp]
   1d6f0:	umull	r2, r3, r6, r1
   1d6f4:	mul	r0, r6, lr
   1d6f8:	cmp	r7, fp
   1d6fc:	cmpeq	r6, sl
   1d700:	mvnhi	r2, #0
   1d704:	mla	r0, r1, r7, r0
   1d708:	umull	sl, fp, r2, r1
   1d70c:	add	r3, r0, r3
   1d710:	mul	r0, lr, r2
   1d714:	mvnhi	r3, #0
   1d718:	strd	sl, [sp, #16]
   1d71c:	ldrd	sl, [sp]
   1d720:	mla	r0, r1, r3, r0
   1d724:	ldr	ip, [sp, #20]
   1d728:	cmp	r3, fp
   1d72c:	add	r0, r0, ip
   1d730:	cmpeq	r2, sl
   1d734:	str	r0, [sp, #20]
   1d738:	mvnhi	sl, #0
   1d73c:	mvnhi	fp, #0
   1d740:	strdhi	sl, [sp, #16]
   1d744:	ldrdhi	sl, [sp]
   1d748:	ldr	r0, [sp, #16]
   1d74c:	cmp	r3, fp
   1d750:	ldr	r3, [sp, #20]
   1d754:	mul	r0, lr, r0
   1d758:	cmpeq	r2, sl
   1d75c:	mla	r0, r1, r3, r0
   1d760:	ldr	r3, [sp, #16]
   1d764:	umull	r2, r3, r3, r1
   1d768:	strd	r2, [sp, #24]
   1d76c:	movhi	r3, #1
   1d770:	movls	r3, #0
   1d774:	cmp	r7, fp
   1d778:	cmpeq	r6, sl
   1d77c:	ldrd	r6, [sp, #16]
   1d780:	ldr	r2, [sp, #28]
   1d784:	movls	ip, r3
   1d788:	orrhi	ip, r3, #1
   1d78c:	cmp	r7, fp
   1d790:	add	r2, r0, r2
   1d794:	cmpeq	r6, sl
   1d798:	str	r2, [sp, #28]
   1d79c:	mvnhi	r2, #0
   1d7a0:	mvnhi	r3, #0
   1d7a4:	strdhi	r2, [sp, #24]
   1d7a8:	ldrd	r6, [sp, #24]
   1d7ac:	mul	r2, r1, r7
   1d7b0:	umull	sl, fp, r1, r6
   1d7b4:	mla	r3, lr, r6, r2
   1d7b8:	ldrd	r6, [sp]
   1d7bc:	str	r3, [sp, #32]
   1d7c0:	ldrd	r2, [sp, #16]
   1d7c4:	cmp	r3, r7
   1d7c8:	cmpeq	r2, r6
   1d7cc:	ldrd	r2, [sp, #24]
   1d7d0:	orrhi	ip, ip, #1
   1d7d4:	cmp	r3, r7
   1d7d8:	ldr	r3, [sp, #32]
   1d7dc:	cmpeq	r2, r6
   1d7e0:	add	r2, r3, fp
   1d7e4:	mov	fp, r2
   1d7e8:	bhi	1df2c <lchmod@@Base+0x68a0>
   1d7ec:	strd	sl, [sp, #16]
   1d7f0:	mul	r2, r1, fp
   1d7f4:	umull	r6, r7, r1, sl
   1d7f8:	mla	r3, lr, sl, r2
   1d7fc:	ldrd	sl, [sp]
   1d800:	str	r3, [sp, #32]
   1d804:	ldrd	r2, [sp, #24]
   1d808:	cmp	r3, fp
   1d80c:	cmpeq	r2, sl
   1d810:	ldrd	r2, [sp, #16]
   1d814:	orrhi	ip, ip, #1
   1d818:	cmp	fp, r3
   1d81c:	ldr	r3, [sp, #32]
   1d820:	cmpeq	sl, r2
   1d824:	add	r2, r3, r7
   1d828:	mov	r7, r2
   1d82c:	mvncc	r7, #0
   1d830:	mvncc	r6, #0
   1d834:	mul	r2, r1, r7
   1d838:	mov	sl, r6
   1d83c:	strd	r6, [sp, #24]
   1d840:	mla	r0, lr, sl, r2
   1d844:	ldrd	r2, [sp, #16]
   1d848:	ldrd	sl, [sp]
   1d84c:	umull	r6, r7, r1, r6
   1d850:	cmp	fp, r3
   1d854:	cmpeq	sl, r2
   1d858:	mov	r3, fp
   1d85c:	mov	r2, sl
   1d860:	ldrd	sl, [sp, #24]
   1d864:	orrcc	ip, ip, #1
   1d868:	add	r7, r0, r7
   1d86c:	cmp	r3, fp
   1d870:	cmpeq	r2, sl
   1d874:	mvncc	r6, #0
   1d878:	mvncc	r7, #0
   1d87c:	umull	sl, fp, r1, r6
   1d880:	mul	r3, r1, r7
   1d884:	strd	sl, [sp, #16]
   1d888:	mla	r0, lr, r6, r3
   1d88c:	ldrd	sl, [sp, #24]
   1d890:	ldrd	r2, [sp]
   1d894:	cmp	r3, fp
   1d898:	cmpeq	r2, sl
   1d89c:	orrcc	ip, ip, #1
   1d8a0:	cmp	r3, r7
   1d8a4:	ldr	r3, [sp, #20]
   1d8a8:	cmpeq	r2, r6
   1d8ac:	add	r3, r0, r3
   1d8b0:	str	r3, [sp, #20]
   1d8b4:	mvncc	r2, #0
   1d8b8:	mvncc	r3, #0
   1d8bc:	ldrdcs	r2, [sp, #16]
   1d8c0:	ldrd	sl, [sp]
   1d8c4:	mul	r0, r1, r3
   1d8c8:	cmp	fp, r7
   1d8cc:	str	r0, [sp, #16]
   1d8d0:	cmpeq	sl, r6
   1d8d4:	ldr	r6, [sp, #16]
   1d8d8:	umull	r0, r1, r1, r2
   1d8dc:	mla	lr, lr, r2, r6
   1d8e0:	orrcc	ip, ip, #1
   1d8e4:	cmp	r3, fp
   1d8e8:	cmpeq	r2, sl
   1d8ec:	add	r1, lr, r1
   1d8f0:	bls	1d8fc <lchmod@@Base+0x6270>
   1d8f4:	mvn	r0, #0
   1d8f8:	mov	r1, r0
   1d8fc:	cmp	r3, fp
   1d900:	cmpeq	r2, sl
   1d904:	mov	r6, r0
   1d908:	mov	r7, r1
   1d90c:	orrhi	ip, ip, #1
   1d910:	b	1d574 <lchmod@@Base+0x5ee8>
   1d914:	ldrd	sl, [sp]
   1d918:	umull	r2, r3, r6, r1
   1d91c:	mul	r0, r6, lr
   1d920:	cmp	r7, fp
   1d924:	cmpeq	r6, sl
   1d928:	mvnhi	r2, #0
   1d92c:	mla	r0, r1, r7, r0
   1d930:	umull	sl, fp, r1, r2
   1d934:	add	r3, r0, r3
   1d938:	mvnhi	r3, #0
   1d93c:	strd	sl, [sp, #16]
   1d940:	mul	r0, r1, r3
   1d944:	ldrd	sl, [sp]
   1d948:	mla	r0, lr, r2, r0
   1d94c:	ldr	ip, [sp, #20]
   1d950:	cmp	fp, r3
   1d954:	add	r0, r0, ip
   1d958:	cmpeq	sl, r2
   1d95c:	str	r0, [sp, #20]
   1d960:	mvncc	sl, #0
   1d964:	mvncc	fp, #0
   1d968:	strdcc	sl, [sp, #16]
   1d96c:	ldrdcc	sl, [sp]
   1d970:	ldr	r0, [sp, #16]
   1d974:	cmp	fp, r3
   1d978:	cmpeq	sl, r2
   1d97c:	mul	r0, lr, r0
   1d980:	ldr	r2, [sp, #20]
   1d984:	ldr	r3, [sp, #16]
   1d988:	movcc	ip, #1
   1d98c:	movcs	ip, #0
   1d990:	cmp	r7, fp
   1d994:	cmpeq	r6, sl
   1d998:	ldrd	r6, [sp, #16]
   1d99c:	mla	r0, r1, r2, r0
   1d9a0:	umull	r2, r3, r3, r1
   1d9a4:	orrhi	ip, ip, #1
   1d9a8:	cmp	r7, fp
   1d9ac:	cmpeq	r6, sl
   1d9b0:	add	r3, r0, r3
   1d9b4:	mvnhi	r3, #0
   1d9b8:	mvnhi	r2, #0
   1d9bc:	mul	r0, r1, r3
   1d9c0:	cmp	r7, fp
   1d9c4:	str	r0, [sp, #24]
   1d9c8:	cmpeq	r6, sl
   1d9cc:	ldr	r6, [sp, #24]
   1d9d0:	umull	r0, r1, r1, r2
   1d9d4:	mla	lr, lr, r2, r6
   1d9d8:	orrhi	ip, ip, #1
   1d9dc:	cmp	fp, r3
   1d9e0:	cmpeq	sl, r2
   1d9e4:	mvncc	r0, #0
   1d9e8:	add	r1, lr, r1
   1d9ec:	movcc	r1, r0
   1d9f0:	b	1d560 <lchmod@@Base+0x5ed4>
   1d9f4:	cmp	r6, #0
   1d9f8:	sbcs	r3, r7, #0
   1d9fc:	blt	1de94 <lchmod@@Base+0x6808>
   1da00:	adds	r6, r6, r6
   1da04:	adc	r7, r7, r7
   1da08:	mov	ip, #0
   1da0c:	b	1d574 <lchmod@@Base+0x5ee8>
   1da10:	mov	ip, #0
   1da14:	b	1d574 <lchmod@@Base+0x5ee8>
   1da18:	ldr	r3, [pc, #1396]	; 1df94 <lchmod@@Base+0x6908>
   1da1c:	mvn	r2, #0
   1da20:	cmp	r7, r3
   1da24:	cmpeq	r6, r2
   1da28:	bhi	1de94 <lchmod@@Base+0x6808>
   1da2c:	lsl	r3, r7, #9
   1da30:	orr	r3, r3, r6, lsr #23
   1da34:	lsl	r2, r6, #9
   1da38:	mov	r6, r2
   1da3c:	mov	r7, r3
   1da40:	mov	ip, #0
   1da44:	b	1d574 <lchmod@@Base+0x5ee8>
   1da48:	ldrd	sl, [sp]
   1da4c:	umull	r2, r3, r6, r1
   1da50:	mul	r0, r6, lr
   1da54:	cmp	r7, fp
   1da58:	cmpeq	r6, sl
   1da5c:	mvnhi	r2, #0
   1da60:	mla	r0, r1, r7, r0
   1da64:	umull	sl, fp, r2, r1
   1da68:	add	r3, r0, r3
   1da6c:	mul	r0, lr, r2
   1da70:	mvnhi	r3, #0
   1da74:	strd	sl, [sp, #16]
   1da78:	ldrd	sl, [sp]
   1da7c:	mla	r0, r1, r3, r0
   1da80:	ldr	ip, [sp, #20]
   1da84:	cmp	r3, fp
   1da88:	add	r0, r0, ip
   1da8c:	cmpeq	r2, sl
   1da90:	str	r0, [sp, #20]
   1da94:	mvnhi	sl, #0
   1da98:	mvnhi	fp, #0
   1da9c:	strdhi	sl, [sp, #16]
   1daa0:	ldrdhi	sl, [sp]
   1daa4:	ldr	r0, [sp, #16]
   1daa8:	cmp	r3, fp
   1daac:	ldr	r3, [sp, #20]
   1dab0:	mul	r0, lr, r0
   1dab4:	cmpeq	r2, sl
   1dab8:	mla	r0, r1, r3, r0
   1dabc:	ldr	r3, [sp, #16]
   1dac0:	umull	r2, r3, r3, r1
   1dac4:	strd	r2, [sp, #24]
   1dac8:	movhi	r3, #1
   1dacc:	movls	r3, #0
   1dad0:	cmp	r7, fp
   1dad4:	cmpeq	r6, sl
   1dad8:	ldrd	r6, [sp, #16]
   1dadc:	ldr	r2, [sp, #28]
   1dae0:	movls	ip, r3
   1dae4:	orrhi	ip, r3, #1
   1dae8:	cmp	r7, fp
   1daec:	add	r2, r0, r2
   1daf0:	cmpeq	r6, sl
   1daf4:	str	r2, [sp, #28]
   1daf8:	mvnhi	r2, #0
   1dafc:	mvnhi	r3, #0
   1db00:	strdhi	r2, [sp, #24]
   1db04:	ldrd	r6, [sp, #24]
   1db08:	mul	r2, lr, r6
   1db0c:	umull	sl, fp, r6, r1
   1db10:	mla	r3, r1, r7, r2
   1db14:	ldrd	r6, [sp]
   1db18:	str	r3, [sp, #32]
   1db1c:	ldrd	r2, [sp, #16]
   1db20:	cmp	r3, r7
   1db24:	cmpeq	r2, r6
   1db28:	ldrd	r2, [sp, #24]
   1db2c:	orrhi	ip, ip, #1
   1db30:	cmp	r3, r7
   1db34:	ldr	r3, [sp, #32]
   1db38:	cmpeq	r2, r6
   1db3c:	add	r2, r3, fp
   1db40:	mov	fp, r2
   1db44:	bhi	1df5c <lchmod@@Base+0x68d0>
   1db48:	strd	sl, [sp, #16]
   1db4c:	mul	r2, lr, sl
   1db50:	umull	r6, r7, sl, r1
   1db54:	mla	r3, r1, fp, r2
   1db58:	ldrd	sl, [sp]
   1db5c:	str	r3, [sp, #32]
   1db60:	ldrd	r2, [sp, #24]
   1db64:	cmp	r3, fp
   1db68:	cmpeq	r2, sl
   1db6c:	ldrd	r2, [sp, #16]
   1db70:	orrhi	ip, ip, #1
   1db74:	cmp	r3, fp
   1db78:	ldr	r3, [sp, #32]
   1db7c:	cmpeq	r2, sl
   1db80:	add	r2, r3, r7
   1db84:	mov	r7, r2
   1db88:	mvnhi	r7, #0
   1db8c:	mvnhi	r6, #0
   1db90:	mul	r2, r1, r7
   1db94:	mov	sl, r6
   1db98:	strd	r6, [sp, #24]
   1db9c:	mla	r0, lr, sl, r2
   1dba0:	ldrd	sl, [sp]
   1dba4:	ldrd	r2, [sp, #16]
   1dba8:	umull	r6, r7, r1, r6
   1dbac:	cmp	r3, fp
   1dbb0:	cmpeq	r2, sl
   1dbb4:	mov	r3, ip
   1dbb8:	orrhi	r3, r3, #1
   1dbbc:	mov	r2, sl
   1dbc0:	str	r3, [sp, #16]
   1dbc4:	mov	r3, fp
   1dbc8:	ldrd	sl, [sp, #24]
   1dbcc:	add	r7, r0, r7
   1dbd0:	cmp	r3, fp
   1dbd4:	cmpeq	r2, sl
   1dbd8:	bcc	1d688 <lchmod@@Base+0x5ffc>
   1dbdc:	mov	r2, r6
   1dbe0:	mov	r3, r7
   1dbe4:	b	1d690 <lchmod@@Base+0x6004>
   1dbe8:	ldrd	sl, [sp]
   1dbec:	umull	r2, r3, r6, r1
   1dbf0:	mul	r0, r6, lr
   1dbf4:	cmp	r7, fp
   1dbf8:	cmpeq	r6, sl
   1dbfc:	mvnhi	r2, #0
   1dc00:	mla	r0, r1, r7, r0
   1dc04:	umull	sl, fp, r2, r1
   1dc08:	add	r3, r0, r3
   1dc0c:	mul	r0, lr, r2
   1dc10:	mvnhi	r3, #0
   1dc14:	strd	sl, [sp, #16]
   1dc18:	ldrd	sl, [sp]
   1dc1c:	mla	r0, r1, r3, r0
   1dc20:	ldr	ip, [sp, #20]
   1dc24:	cmp	r3, fp
   1dc28:	add	r0, r0, ip
   1dc2c:	cmpeq	r2, sl
   1dc30:	str	r0, [sp, #20]
   1dc34:	mvnhi	sl, #0
   1dc38:	mvnhi	fp, #0
   1dc3c:	strdhi	sl, [sp, #16]
   1dc40:	ldrdhi	sl, [sp]
   1dc44:	ldr	r0, [sp, #16]
   1dc48:	cmp	r3, fp
   1dc4c:	ldr	ip, [sp, #20]
   1dc50:	mul	r0, lr, r0
   1dc54:	ldr	r3, [sp, #16]
   1dc58:	cmpeq	r2, sl
   1dc5c:	mla	r0, r1, ip, r0
   1dc60:	umull	r2, r3, r3, r1
   1dc64:	movhi	r1, #1
   1dc68:	movls	r1, #0
   1dc6c:	cmp	r7, fp
   1dc70:	cmpeq	r6, sl
   1dc74:	ldrd	r6, [sp, #16]
   1dc78:	movls	ip, r1
   1dc7c:	orrhi	ip, r1, #1
   1dc80:	cmp	r7, fp
   1dc84:	cmpeq	r6, sl
   1dc88:	mvnhi	r2, #0
   1dc8c:	add	r3, r0, r3
   1dc90:	movhi	r3, r2
   1dc94:	cmp	r7, fp
   1dc98:	cmpeq	r6, sl
   1dc9c:	mov	r7, r3
   1dca0:	mov	r6, r2
   1dca4:	orrhi	ip, ip, #1
   1dca8:	b	1d574 <lchmod@@Base+0x5ee8>
   1dcac:	ldrd	sl, [sp]
   1dcb0:	umull	r2, r3, r6, r1
   1dcb4:	mul	r0, r6, lr
   1dcb8:	cmp	r7, fp
   1dcbc:	cmpeq	r6, sl
   1dcc0:	mvnhi	r2, #0
   1dcc4:	mla	r0, r1, r7, r0
   1dcc8:	umull	sl, fp, r1, r2
   1dccc:	add	r3, r0, r3
   1dcd0:	mvnhi	r3, #0
   1dcd4:	strd	sl, [sp, #16]
   1dcd8:	mul	r0, r1, r3
   1dcdc:	ldrd	sl, [sp]
   1dce0:	mla	r0, lr, r2, r0
   1dce4:	ldr	ip, [sp, #20]
   1dce8:	cmp	fp, r3
   1dcec:	add	r0, r0, ip
   1dcf0:	cmpeq	sl, r2
   1dcf4:	str	r0, [sp, #20]
   1dcf8:	mvncc	sl, #0
   1dcfc:	mvncc	fp, #0
   1dd00:	strdcc	sl, [sp, #16]
   1dd04:	ldrdcc	sl, [sp]
   1dd08:	ldr	r0, [sp, #16]
   1dd0c:	cmp	fp, r3
   1dd10:	ldr	r3, [sp, #20]
   1dd14:	mul	r0, lr, r0
   1dd18:	cmpeq	sl, r2
   1dd1c:	mla	r0, r1, r3, r0
   1dd20:	ldr	r3, [sp, #16]
   1dd24:	umull	r2, r3, r3, r1
   1dd28:	strd	r2, [sp, #24]
   1dd2c:	movcc	r3, #1
   1dd30:	movcs	r3, #0
   1dd34:	cmp	r7, fp
   1dd38:	cmpeq	r6, sl
   1dd3c:	movls	ip, r3
   1dd40:	orrhi	ip, r3, #1
   1dd44:	ldrd	r2, [sp, #16]
   1dd48:	cmp	r3, fp
   1dd4c:	ldr	r3, [sp, #28]
   1dd50:	cmpeq	r2, sl
   1dd54:	add	r3, r0, r3
   1dd58:	str	r3, [sp, #28]
   1dd5c:	bhi	1df14 <lchmod@@Base+0x6888>
   1dd60:	ldrd	r2, [sp, #24]
   1dd64:	mov	sl, r2
   1dd68:	mov	fp, r3
   1dd6c:	mul	r2, lr, sl
   1dd70:	umull	r6, r7, sl, r1
   1dd74:	mla	r0, r1, fp, r2
   1dd78:	ldrd	r2, [sp]
   1dd7c:	add	r7, r0, r7
   1dd80:	mov	sl, r2
   1dd84:	mov	fp, r3
   1dd88:	strd	r2, [sp, #32]
   1dd8c:	ldrd	r2, [sp, #16]
   1dd90:	cmp	r3, fp
   1dd94:	cmpeq	r2, sl
   1dd98:	ldrd	r2, [sp, #32]
   1dd9c:	ldrd	sl, [sp, #24]
   1dda0:	orrhi	ip, ip, #1
   1dda4:	cmp	fp, r3
   1dda8:	cmpeq	sl, r2
   1ddac:	mvnhi	r6, #0
   1ddb0:	mvnhi	r7, #0
   1ddb4:	umull	sl, fp, r6, r1
   1ddb8:	mul	r3, lr, r6
   1ddbc:	strd	sl, [sp, #16]
   1ddc0:	mla	r0, r1, r7, r3
   1ddc4:	ldrd	sl, [sp, #24]
   1ddc8:	ldrd	r2, [sp]
   1ddcc:	cmp	fp, r3
   1ddd0:	cmpeq	sl, r2
   1ddd4:	orrhi	ip, ip, #1
   1ddd8:	cmp	r7, r3
   1dddc:	ldr	r3, [sp, #20]
   1dde0:	cmpeq	r6, r2
   1dde4:	add	r3, r0, r3
   1dde8:	str	r3, [sp, #20]
   1ddec:	mvnhi	r2, #0
   1ddf0:	mvnhi	r3, #0
   1ddf4:	ldrdls	r2, [sp, #16]
   1ddf8:	ldrd	sl, [sp]
   1ddfc:	mul	r0, r1, r3
   1de00:	cmp	r7, fp
   1de04:	str	r0, [sp, #16]
   1de08:	cmpeq	r6, sl
   1de0c:	ldr	r6, [sp, #16]
   1de10:	umull	r0, r1, r1, r2
   1de14:	mla	lr, lr, r2, r6
   1de18:	orrhi	ip, ip, #1
   1de1c:	cmp	r3, fp
   1de20:	cmpeq	r2, sl
   1de24:	add	r1, lr, r1
   1de28:	bls	1d8fc <lchmod@@Base+0x6270>
   1de2c:	b	1d8f4 <lchmod@@Base+0x6268>
   1de30:	ldr	r3, [pc, #344]	; 1df90 <lchmod@@Base+0x6904>
   1de34:	mvn	r2, #0
   1de38:	cmp	r7, r3
   1de3c:	cmpeq	r6, r2
   1de40:	bhi	1de94 <lchmod@@Base+0x6808>
   1de44:	lsl	r3, r7, #10
   1de48:	orr	r3, r3, r6, lsr #22
   1de4c:	lsl	r2, r6, #10
   1de50:	mov	r6, r2
   1de54:	mov	r7, r3
   1de58:	mov	ip, #0
   1de5c:	b	1d574 <lchmod@@Base+0x5ee8>
   1de60:	strd	r6, [r8]
   1de64:	orr	r4, r4, #2
   1de68:	b	1d244 <lchmod@@Base+0x5bb8>
   1de6c:	ldrd	r2, [sp]
   1de70:	cmp	r7, r3
   1de74:	cmpeq	r6, r2
   1de78:	bhi	1de94 <lchmod@@Base+0x6808>
   1de7c:	mul	r3, r6, lr
   1de80:	mov	ip, #0
   1de84:	mla	r3, r1, r7, r3
   1de88:	umull	r6, r7, r6, r1
   1de8c:	add	r7, r3, r7
   1de90:	b	1d574 <lchmod@@Base+0x5ee8>
   1de94:	mvn	r6, #0
   1de98:	mvn	r7, #0
   1de9c:	mov	ip, #1
   1dea0:	b	1d574 <lchmod@@Base+0x5ee8>
   1dea4:	ldrb	r3, [r9, #2]
   1dea8:	mvn	r2, #0
   1deac:	mov	r1, #1024	; 0x400
   1deb0:	cmp	r3, #66	; 0x42
   1deb4:	ldr	r3, [pc, #212]	; 1df90 <lchmod@@Base+0x6904>
   1deb8:	mov	lr, #0
   1debc:	strd	r2, [sp]
   1dec0:	moveq	r3, #3
   1dec4:	streq	r3, [sp, #12]
   1dec8:	movne	r3, #1
   1decc:	strne	r3, [sp, #12]
   1ded0:	b	1d420 <lchmod@@Base+0x5d94>
   1ded4:	add	r3, pc, #172	; 0xac
   1ded8:	ldrd	r2, [r3]
   1dedc:	mov	r1, #1000	; 0x3e8
   1dee0:	mov	lr, #0
   1dee4:	strd	r2, [sp]
   1dee8:	mov	r3, #2
   1deec:	str	r3, [sp, #12]
   1def0:	b	1d420 <lchmod@@Base+0x5d94>
   1def4:	ldr	r3, [pc, #148]	; 1df90 <lchmod@@Base+0x6904>
   1def8:	mvn	r2, #0
   1defc:	mov	lr, r0
   1df00:	strd	r2, [sp]
   1df04:	mov	r3, #1
   1df08:	mov	r1, #1024	; 0x400
   1df0c:	str	r3, [sp, #12]
   1df10:	b	1d420 <lchmod@@Base+0x5d94>
   1df14:	mvn	r2, #0
   1df18:	mvn	r3, #0
   1df1c:	mov	sl, r2
   1df20:	strd	r2, [sp, #24]
   1df24:	mov	fp, r3
   1df28:	b	1dd6c <lchmod@@Base+0x66e0>
   1df2c:	mvn	r2, #0
   1df30:	mvn	r3, #0
   1df34:	mov	sl, r2
   1df38:	strd	r2, [sp, #16]
   1df3c:	mov	fp, r3
   1df40:	b	1d7f0 <lchmod@@Base+0x6164>
   1df44:	mvn	r2, #0
   1df48:	mvn	r3, #0
   1df4c:	mov	sl, r2
   1df50:	strd	r2, [sp, #24]
   1df54:	mov	fp, r3
   1df58:	b	1d648 <lchmod@@Base+0x5fbc>
   1df5c:	mvn	r2, #0
   1df60:	mvn	r3, #0
   1df64:	mov	sl, r2
   1df68:	strd	r2, [sp, #16]
   1df6c:	mov	fp, r3
   1df70:	b	1db4c <lchmod@@Base+0x64c0>
   1df74:	ldr	r3, [pc, #28]	; 1df98 <lchmod@@Base+0x690c>
   1df78:	mov	r2, #85	; 0x55
   1df7c:	ldr	r1, [pc, #24]	; 1df9c <lchmod@@Base+0x6910>
   1df80:	ldr	r0, [pc, #24]	; 1dfa0 <lchmod@@Base+0x6914>
   1df84:	bl	118cc <__assert_fail@plt>
   1df88:	blmi	ff1c7f4c <optarg@@GLIBC_2.4+0xff197d64>
   1df8c:	subeq	r8, r1, r7, lsr r9
   1df90:	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
   1df94:	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
   1df98:	ldrdeq	pc, [r1], -r8
   1df9c:	andeq	pc, r1, r4, ror #25
   1dfa0:	strdeq	pc, [r1], -r4
   1dfa4:	cmp	r1, #0
   1dfa8:	cmpne	r0, #0
   1dfac:	moveq	r1, #1
   1dfb0:	moveq	r0, r1
   1dfb4:	umull	r2, r3, r0, r1
   1dfb8:	adds	r3, r3, #0
   1dfbc:	movne	r3, #1
   1dfc0:	cmp	r2, #0
   1dfc4:	blt	1dfd4 <lchmod@@Base+0x6948>
   1dfc8:	cmp	r3, #0
   1dfcc:	bne	1dfd4 <lchmod@@Base+0x6948>
   1dfd0:	b	114a0 <calloc@plt>
   1dfd4:	push	{r4, lr}
   1dfd8:	bl	1171c <__errno_location@plt>
   1dfdc:	mov	r3, #12
   1dfe0:	str	r3, [r0]
   1dfe4:	mov	r0, #0
   1dfe8:	pop	{r4, pc}
   1dfec:	cmp	r0, #0
   1dff0:	moveq	r0, #1
   1dff4:	cmp	r0, #0
   1dff8:	blt	1e000 <lchmod@@Base+0x6974>
   1dffc:	b	1165c <malloc@plt>
   1e000:	push	{r4, lr}
   1e004:	bl	1171c <__errno_location@plt>
   1e008:	mov	r3, #12
   1e00c:	str	r3, [r0]
   1e010:	mov	r0, #0
   1e014:	pop	{r4, pc}
   1e018:	cmp	r0, #0
   1e01c:	beq	1e040 <lchmod@@Base+0x69b4>
   1e020:	cmp	r1, #0
   1e024:	push	{lr}		; (str lr, [sp, #-4]!)
   1e028:	sub	sp, sp, #12
   1e02c:	beq	1e048 <lchmod@@Base+0x69bc>
   1e030:	blt	1e060 <lchmod@@Base+0x69d4>
   1e034:	add	sp, sp, #12
   1e038:	pop	{lr}		; (ldr lr, [sp], #4)
   1e03c:	b	11590 <realloc@plt>
   1e040:	mov	r0, r1
   1e044:	b	1dfec <lchmod@@Base+0x6960>
   1e048:	str	r1, [sp, #4]
   1e04c:	bl	1355c <__assert_fail@plt+0x1c90>
   1e050:	ldr	r3, [sp, #4]
   1e054:	mov	r0, r3
   1e058:	add	sp, sp, #12
   1e05c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e060:	bl	1171c <__errno_location@plt>
   1e064:	mov	r2, #12
   1e068:	mov	r3, #0
   1e06c:	str	r2, [r0]
   1e070:	b	1e054 <lchmod@@Base+0x69c8>
   1e074:	ldrb	r3, [r0]
   1e078:	cmp	r3, #47	; 0x2f
   1e07c:	bne	1e08c <lchmod@@Base+0x6a00>
   1e080:	ldrb	r3, [r0, #1]!
   1e084:	cmp	r3, #47	; 0x2f
   1e088:	beq	1e080 <lchmod@@Base+0x69f4>
   1e08c:	cmp	r3, #0
   1e090:	bxeq	lr
   1e094:	mov	r2, #0
   1e098:	push	{lr}		; (str lr, [sp, #-4]!)
   1e09c:	mov	ip, r2
   1e0a0:	mov	r1, r0
   1e0a4:	mov	lr, #1
   1e0a8:	cmp	r3, #47	; 0x2f
   1e0ac:	moveq	r2, lr
   1e0b0:	beq	1e0c0 <lchmod@@Base+0x6a34>
   1e0b4:	cmp	r2, #0
   1e0b8:	movne	r0, r1
   1e0bc:	movne	r2, ip
   1e0c0:	ldrb	r3, [r1, #1]!
   1e0c4:	cmp	r3, #0
   1e0c8:	bne	1e0a8 <lchmod@@Base+0x6a1c>
   1e0cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0d0:	push	{r4, lr}
   1e0d4:	mov	r4, r0
   1e0d8:	bl	116e0 <strlen@plt>
   1e0dc:	cmp	r0, #1
   1e0e0:	popls	{r4, pc}
   1e0e4:	sub	r3, r0, #1
   1e0e8:	add	r2, r4, r3
   1e0ec:	ldrb	r1, [r4, r3]
   1e0f0:	cmp	r1, #47	; 0x2f
   1e0f4:	popne	{r4, pc}
   1e0f8:	cmp	r3, #1
   1e0fc:	beq	1e110 <lchmod@@Base+0x6a84>
   1e100:	ldrb	r1, [r2, #-1]!
   1e104:	sub	r0, r3, #1
   1e108:	cmp	r1, #47	; 0x2f
   1e10c:	beq	1e118 <lchmod@@Base+0x6a8c>
   1e110:	mov	r0, r3
   1e114:	pop	{r4, pc}
   1e118:	mov	r3, r0
   1e11c:	b	1e0f8 <lchmod@@Base+0x6a6c>
   1e120:	push	{r4, r5, r6, lr}
   1e124:	mov	r4, r0
   1e128:	bl	11620 <__fpending@plt>
   1e12c:	ldr	r5, [r4]
   1e130:	and	r5, r5, #32
   1e134:	mov	r6, r0
   1e138:	mov	r0, r4
   1e13c:	bl	1e28c <lchmod@@Base+0x6c00>
   1e140:	cmp	r5, #0
   1e144:	mov	r4, r0
   1e148:	bne	1e168 <lchmod@@Base+0x6adc>
   1e14c:	cmp	r0, #0
   1e150:	beq	1e160 <lchmod@@Base+0x6ad4>
   1e154:	cmp	r6, #0
   1e158:	beq	1e184 <lchmod@@Base+0x6af8>
   1e15c:	mvn	r4, #0
   1e160:	mov	r0, r4
   1e164:	pop	{r4, r5, r6, pc}
   1e168:	cmp	r0, #0
   1e16c:	bne	1e15c <lchmod@@Base+0x6ad0>
   1e170:	bl	1171c <__errno_location@plt>
   1e174:	str	r4, [r0]
   1e178:	mvn	r4, #0
   1e17c:	mov	r0, r4
   1e180:	pop	{r4, r5, r6, pc}
   1e184:	bl	1171c <__errno_location@plt>
   1e188:	ldr	r4, [r0]
   1e18c:	subs	r4, r4, #9
   1e190:	mvnne	r4, #0
   1e194:	mov	r0, r4
   1e198:	pop	{r4, r5, r6, pc}
   1e19c:	push	{r4, r5}
   1e1a0:	mov	r4, #0
   1e1a4:	mov	r5, #0
   1e1a8:	ldr	r3, [pc, #12]	; 1e1bc <lchmod@@Base+0x6b30>
   1e1ac:	strd	r4, [r0, #16]
   1e1b0:	str	r3, [r0, #24]
   1e1b4:	pop	{r4, r5}
   1e1b8:	bx	lr
   1e1bc:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1e1c0:	ldr	r3, [pc, #180]	; 1e27c <lchmod@@Base+0x6bf0>
   1e1c4:	ldr	r2, [r0, #24]
   1e1c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e1cc:	cmp	r2, r3
   1e1d0:	bne	1e268 <lchmod@@Base+0x6bdc>
   1e1d4:	ldrd	r6, [r0, #16]
   1e1d8:	orrs	r3, r6, r7
   1e1dc:	bne	1e208 <lchmod@@Base+0x6b7c>
   1e1e0:	mov	r2, #1
   1e1e4:	mov	r3, #0
   1e1e8:	ldrd	r8, [r1, #96]	; 0x60
   1e1ec:	strd	r2, [r0, #16]
   1e1f0:	ldrd	r2, [r1]
   1e1f4:	mov	r1, #0
   1e1f8:	strd	r8, [r0]
   1e1fc:	strd	r2, [r0, #8]
   1e200:	mov	r0, r1
   1e204:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e208:	ldrd	r8, [r1, #96]	; 0x60
   1e20c:	ldrd	r2, [r0]
   1e210:	cmp	r9, r3
   1e214:	cmpeq	r8, r2
   1e218:	beq	1e250 <lchmod@@Base+0x6bc4>
   1e21c:	adds	r2, r6, #1
   1e220:	adc	r3, r7, #0
   1e224:	and	r6, r6, r2
   1e228:	and	r7, r7, r3
   1e22c:	orrs	ip, r6, r7
   1e230:	strd	r2, [r0, #16]
   1e234:	movne	r1, #0
   1e238:	bne	1e200 <lchmod@@Base+0x6b74>
   1e23c:	orrs	r3, r2, r3
   1e240:	bne	1e1f0 <lchmod@@Base+0x6b64>
   1e244:	mov	r1, #1
   1e248:	mov	r0, r1
   1e24c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e250:	ldrd	r4, [r1]
   1e254:	ldrd	r2, [r0, #8]
   1e258:	cmp	r5, r3
   1e25c:	cmpeq	r4, r2
   1e260:	bne	1e21c <lchmod@@Base+0x6b90>
   1e264:	b	1e244 <lchmod@@Base+0x6bb8>
   1e268:	ldr	r3, [pc, #16]	; 1e280 <lchmod@@Base+0x6bf4>
   1e26c:	mov	r2, #60	; 0x3c
   1e270:	ldr	r1, [pc, #12]	; 1e284 <lchmod@@Base+0x6bf8>
   1e274:	ldr	r0, [pc, #12]	; 1e288 <lchmod@@Base+0x6bfc>
   1e278:	bl	118cc <__assert_fail@plt>
   1e27c:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1e280:	andeq	pc, r1, ip, lsl sp	; <UNPREDICTABLE>
   1e284:	andeq	pc, r1, r8, lsr #26
   1e288:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   1e28c:	push	{r4, r5, lr}
   1e290:	sub	sp, sp, #12
   1e294:	mov	r4, r0
   1e298:	bl	11758 <fileno@plt>
   1e29c:	cmp	r0, #0
   1e2a0:	mov	r0, r4
   1e2a4:	blt	1e320 <lchmod@@Base+0x6c94>
   1e2a8:	bl	11674 <__freading@plt>
   1e2ac:	cmp	r0, #0
   1e2b0:	bne	1e2ec <lchmod@@Base+0x6c60>
   1e2b4:	mov	r0, r4
   1e2b8:	bl	1e538 <lchmod@@Base+0x6eac>
   1e2bc:	cmp	r0, #0
   1e2c0:	beq	1e31c <lchmod@@Base+0x6c90>
   1e2c4:	bl	1171c <__errno_location@plt>
   1e2c8:	mov	r5, r0
   1e2cc:	mov	r0, r4
   1e2d0:	ldr	r4, [r5]
   1e2d4:	bl	11770 <fclose@plt>
   1e2d8:	cmp	r4, #0
   1e2dc:	mvnne	r0, #0
   1e2e0:	strne	r4, [r5]
   1e2e4:	add	sp, sp, #12
   1e2e8:	pop	{r4, r5, pc}
   1e2ec:	mov	r0, r4
   1e2f0:	bl	11758 <fileno@plt>
   1e2f4:	mov	r3, #1
   1e2f8:	str	r3, [sp]
   1e2fc:	mov	r2, #0
   1e300:	mov	r3, #0
   1e304:	bl	115fc <lseek64@plt>
   1e308:	mvn	r3, #0
   1e30c:	mvn	r2, #0
   1e310:	cmp	r1, r3
   1e314:	cmpeq	r0, r2
   1e318:	bne	1e2b4 <lchmod@@Base+0x6c28>
   1e31c:	mov	r0, r4
   1e320:	add	sp, sp, #12
   1e324:	pop	{r4, r5, lr}
   1e328:	b	11770 <fclose@plt>
   1e32c:	push	{r1, r2, r3}
   1e330:	push	{r4, r5, r6, r7, lr}
   1e334:	sub	sp, sp, #8
   1e338:	add	r3, sp, #32
   1e33c:	ldr	r1, [sp, #28]
   1e340:	str	r3, [sp, #4]
   1e344:	cmp	r1, #0
   1e348:	beq	1e3e0 <lchmod@@Base+0x6d54>
   1e34c:	ldr	r2, [pc, #412]	; 1e4f0 <lchmod@@Base+0x6e64>
   1e350:	mov	r5, r0
   1e354:	cmp	r1, r2
   1e358:	bne	1e3a4 <lchmod@@Base+0x6d18>
   1e35c:	ldr	r6, [pc, #400]	; 1e4f4 <lchmod@@Base+0x6e68>
   1e360:	ldr	r7, [r3]
   1e364:	add	r2, sp, #36	; 0x24
   1e368:	ldr	r3, [r6]
   1e36c:	str	r2, [sp, #4]
   1e370:	cmp	r3, #0
   1e374:	mov	r2, r7
   1e378:	blt	1e4a4 <lchmod@@Base+0x6e18>
   1e37c:	bl	11788 <fcntl64@plt>
   1e380:	subs	r4, r0, #0
   1e384:	blt	1e428 <lchmod@@Base+0x6d9c>
   1e388:	mov	r3, #1
   1e38c:	str	r3, [r6]
   1e390:	mov	r0, r4
   1e394:	add	sp, sp, #8
   1e398:	pop	{r4, r5, r6, r7, lr}
   1e39c:	add	sp, sp, #12
   1e3a0:	bx	lr
   1e3a4:	cmp	r1, #11
   1e3a8:	beq	1e3d0 <lchmod@@Base+0x6d44>
   1e3ac:	bgt	1e3f0 <lchmod@@Base+0x6d64>
   1e3b0:	cmp	r1, #3
   1e3b4:	beq	1e3d0 <lchmod@@Base+0x6d44>
   1e3b8:	ble	1e4e4 <lchmod@@Base+0x6e58>
   1e3bc:	cmp	r1, #8
   1e3c0:	beq	1e410 <lchmod@@Base+0x6d84>
   1e3c4:	ble	1e410 <lchmod@@Base+0x6d84>
   1e3c8:	cmp	r1, #9
   1e3cc:	bne	1e410 <lchmod@@Base+0x6d84>
   1e3d0:	mov	r0, r5
   1e3d4:	bl	11788 <fcntl64@plt>
   1e3d8:	mov	r4, r0
   1e3dc:	b	1e390 <lchmod@@Base+0x6d04>
   1e3e0:	ldr	r2, [sp, #32]
   1e3e4:	bl	11788 <fcntl64@plt>
   1e3e8:	mov	r4, r0
   1e3ec:	b	1e390 <lchmod@@Base+0x6d04>
   1e3f0:	ldr	r3, [pc, #256]	; 1e4f8 <lchmod@@Base+0x6e6c>
   1e3f4:	cmp	r1, r3
   1e3f8:	bgt	1e4c4 <lchmod@@Base+0x6e38>
   1e3fc:	cmp	r1, r2
   1e400:	bge	1e410 <lchmod@@Base+0x6d84>
   1e404:	sub	r3, r3, #6
   1e408:	cmp	r1, r3
   1e40c:	beq	1e3d0 <lchmod@@Base+0x6d44>
   1e410:	ldr	r3, [sp, #4]
   1e414:	mov	r0, r5
   1e418:	ldr	r2, [r3]
   1e41c:	bl	11788 <fcntl64@plt>
   1e420:	mov	r4, r0
   1e424:	b	1e390 <lchmod@@Base+0x6d04>
   1e428:	bl	1171c <__errno_location@plt>
   1e42c:	ldr	r3, [r0]
   1e430:	cmp	r3, #22
   1e434:	bne	1e388 <lchmod@@Base+0x6cfc>
   1e438:	mov	r2, r7
   1e43c:	mov	r0, r5
   1e440:	mov	r1, #0
   1e444:	bl	11788 <fcntl64@plt>
   1e448:	subs	r4, r0, #0
   1e44c:	blt	1e390 <lchmod@@Base+0x6d04>
   1e450:	mvn	r3, #0
   1e454:	str	r3, [r6]
   1e458:	mov	r1, #1
   1e45c:	mov	r0, r4
   1e460:	bl	11788 <fcntl64@plt>
   1e464:	subs	r2, r0, #0
   1e468:	blt	1e484 <lchmod@@Base+0x6df8>
   1e46c:	orr	r2, r2, #1
   1e470:	mov	r1, #2
   1e474:	mov	r0, r4
   1e478:	bl	11788 <fcntl64@plt>
   1e47c:	cmn	r0, #1
   1e480:	bne	1e390 <lchmod@@Base+0x6d04>
   1e484:	bl	1171c <__errno_location@plt>
   1e488:	mov	r5, r0
   1e48c:	mov	r0, r4
   1e490:	ldr	r6, [r5]
   1e494:	mvn	r4, #0
   1e498:	bl	11884 <close@plt>
   1e49c:	str	r6, [r5]
   1e4a0:	b	1e390 <lchmod@@Base+0x6d04>
   1e4a4:	mov	r1, #0
   1e4a8:	bl	11788 <fcntl64@plt>
   1e4ac:	subs	r4, r0, #0
   1e4b0:	blt	1e390 <lchmod@@Base+0x6d04>
   1e4b4:	ldr	r3, [r6]
   1e4b8:	cmn	r3, #1
   1e4bc:	beq	1e458 <lchmod@@Base+0x6dcc>
   1e4c0:	b	1e390 <lchmod@@Base+0x6d04>
   1e4c4:	ldr	r3, [pc, #48]	; 1e4fc <lchmod@@Base+0x6e70>
   1e4c8:	cmp	r1, r3
   1e4cc:	beq	1e410 <lchmod@@Base+0x6d84>
   1e4d0:	blt	1e3d0 <lchmod@@Base+0x6d44>
   1e4d4:	add	r3, r3, #1
   1e4d8:	cmp	r1, r3
   1e4dc:	bne	1e410 <lchmod@@Base+0x6d84>
   1e4e0:	b	1e3d0 <lchmod@@Base+0x6d44>
   1e4e4:	cmp	r1, #1
   1e4e8:	bne	1e410 <lchmod@@Base+0x6d84>
   1e4ec:	b	1e3d0 <lchmod@@Base+0x6d44>
   1e4f0:	andeq	r0, r0, r6, lsl #8
   1e4f4:	andeq	r0, r3, ip, lsr #6
   1e4f8:	andeq	r0, r0, r7, lsl #8
   1e4fc:	andeq	r0, r0, r9, lsl #8
   1e500:	push	{r1, r2, r3}
   1e504:	push	{lr}		; (str lr, [sp, #-4]!)
   1e508:	sub	sp, sp, #8
   1e50c:	ldr	r1, [sp, #12]
   1e510:	ands	r2, r1, #64	; 0x40
   1e514:	addne	r3, sp, #16
   1e518:	ldrne	r2, [sp, #16]
   1e51c:	strne	r3, [sp, #4]
   1e520:	bl	11644 <open64@plt>
   1e524:	bl	1c054 <lchmod@@Base+0x49c8>
   1e528:	add	sp, sp, #8
   1e52c:	pop	{lr}		; (ldr lr, [sp], #4)
   1e530:	add	sp, sp, #12
   1e534:	bx	lr
   1e538:	push	{r4, lr}
   1e53c:	subs	r4, r0, #0
   1e540:	sub	sp, sp, #8
   1e544:	beq	1e560 <lchmod@@Base+0x6ed4>
   1e548:	bl	11674 <__freading@plt>
   1e54c:	cmp	r0, #0
   1e550:	beq	1e560 <lchmod@@Base+0x6ed4>
   1e554:	ldr	r3, [r4]
   1e558:	tst	r3, #256	; 0x100
   1e55c:	bne	1e570 <lchmod@@Base+0x6ee4>
   1e560:	mov	r0, r4
   1e564:	add	sp, sp, #8
   1e568:	pop	{r4, lr}
   1e56c:	b	114e8 <fflush@plt>
   1e570:	mov	r3, #1
   1e574:	str	r3, [sp]
   1e578:	mov	r2, #0
   1e57c:	mov	r3, #0
   1e580:	mov	r0, r4
   1e584:	bl	1e598 <lchmod@@Base+0x6f0c>
   1e588:	mov	r0, r4
   1e58c:	add	sp, sp, #8
   1e590:	pop	{r4, lr}
   1e594:	b	114e8 <fflush@plt>
   1e598:	push	{r4, r5, r6, r7, r8, lr}
   1e59c:	sub	sp, sp, #8
   1e5a0:	ldmib	r0, {ip, lr}
   1e5a4:	mov	r4, r0
   1e5a8:	ldr	r5, [sp, #32]
   1e5ac:	cmp	lr, ip
   1e5b0:	beq	1e5c8 <lchmod@@Base+0x6f3c>
   1e5b4:	str	r5, [sp, #32]
   1e5b8:	mov	r0, r4
   1e5bc:	add	sp, sp, #8
   1e5c0:	pop	{r4, r5, r6, r7, r8, lr}
   1e5c4:	b	1177c <fseeko64@plt>
   1e5c8:	ldr	lr, [r0, #20]
   1e5cc:	ldr	ip, [r0, #16]
   1e5d0:	cmp	lr, ip
   1e5d4:	bne	1e5b4 <lchmod@@Base+0x6f28>
   1e5d8:	ldr	r8, [r0, #36]	; 0x24
   1e5dc:	cmp	r8, #0
   1e5e0:	bne	1e5b4 <lchmod@@Base+0x6f28>
   1e5e4:	mov	r6, r2
   1e5e8:	mov	r7, r3
   1e5ec:	bl	11758 <fileno@plt>
   1e5f0:	mov	r2, r6
   1e5f4:	mov	r3, r7
   1e5f8:	str	r5, [sp]
   1e5fc:	bl	115fc <lseek64@plt>
   1e600:	mvn	r3, #0
   1e604:	mvn	r2, #0
   1e608:	cmp	r1, r3
   1e60c:	cmpeq	r0, r2
   1e610:	beq	1e630 <lchmod@@Base+0x6fa4>
   1e614:	ldr	r3, [r4]
   1e618:	strd	r0, [r4, #80]	; 0x50
   1e61c:	mov	r0, r8
   1e620:	bic	r3, r3, #16
   1e624:	str	r3, [r4]
   1e628:	add	sp, sp, #8
   1e62c:	pop	{r4, r5, r6, r7, r8, pc}
   1e630:	mvn	r0, #0
   1e634:	b	1e628 <lchmod@@Base+0x6f9c>
   1e638:	ldrb	r3, [r0]
   1e63c:	cmp	r3, #0
   1e640:	beq	1e66c <lchmod@@Base+0x6fe0>
   1e644:	mov	r2, r0
   1e648:	mov	r0, #0
   1e64c:	push	{r4, lr}
   1e650:	add	r0, r3, r0, ror #23
   1e654:	ldrb	r3, [r2, #1]!
   1e658:	cmp	r3, #0
   1e65c:	bne	1e650 <lchmod@@Base+0x6fc4>
   1e660:	bl	1ea34 <lchmod@@Base+0x73a8>
   1e664:	mov	r0, r1
   1e668:	pop	{r4, pc}
   1e66c:	mov	r0, r3
   1e670:	bx	lr
   1e674:	push	{r4, lr}
   1e678:	mov	r0, #14
   1e67c:	bl	117b8 <nl_langinfo@plt>
   1e680:	cmp	r0, #0
   1e684:	beq	1e69c <lchmod@@Base+0x7010>
   1e688:	ldrb	r2, [r0]
   1e68c:	ldr	r3, [pc, #16]	; 1e6a4 <lchmod@@Base+0x7018>
   1e690:	cmp	r2, #0
   1e694:	moveq	r0, r3
   1e698:	pop	{r4, pc}
   1e69c:	ldr	r0, [pc]	; 1e6a4 <lchmod@@Base+0x7018>
   1e6a0:	pop	{r4, pc}
   1e6a4:	andeq	pc, r1, r4, asr sp	; <UNPREDICTABLE>
   1e6a8:	push	{r4, r5, r6, r7, lr}
   1e6ac:	subs	r6, r0, #0
   1e6b0:	sub	sp, sp, #12
   1e6b4:	addeq	r6, sp, #4
   1e6b8:	mov	r0, r6
   1e6bc:	mov	r5, r2
   1e6c0:	mov	r7, r1
   1e6c4:	bl	1162c <mbrtowc@plt>
   1e6c8:	cmp	r5, #0
   1e6cc:	cmnne	r0, #3
   1e6d0:	mov	r4, r0
   1e6d4:	bls	1e6f0 <lchmod@@Base+0x7064>
   1e6d8:	mov	r0, #0
   1e6dc:	bl	1e754 <lchmod@@Base+0x70c8>
   1e6e0:	cmp	r0, #0
   1e6e4:	moveq	r4, #1
   1e6e8:	ldrbeq	r3, [r7]
   1e6ec:	streq	r3, [r6]
   1e6f0:	mov	r0, r4
   1e6f4:	add	sp, sp, #12
   1e6f8:	pop	{r4, r5, r6, r7, pc}
   1e6fc:	push	{r4, r5, r6, lr}
   1e700:	subs	r4, r2, #0
   1e704:	mov	r6, r0
   1e708:	mov	r5, r1
   1e70c:	beq	1e738 <lchmod@@Base+0x70ac>
   1e710:	mov	r1, r4
   1e714:	mvn	r0, #0
   1e718:	bl	1e848 <lchmod@@Base+0x71bc>
   1e71c:	cmp	r0, r5
   1e720:	bcs	1e738 <lchmod@@Base+0x70ac>
   1e724:	bl	1171c <__errno_location@plt>
   1e728:	mov	r3, #12
   1e72c:	str	r3, [r0]
   1e730:	mov	r0, #0
   1e734:	pop	{r4, r5, r6, pc}
   1e738:	mul	r1, r5, r4
   1e73c:	mov	r0, r6
   1e740:	pop	{r4, r5, r6, lr}
   1e744:	b	1e018 <lchmod@@Base+0x698c>
   1e748:	mov	r2, #3
   1e74c:	mov	r1, #0
   1e750:	b	1e32c <lchmod@@Base+0x6ca0>
   1e754:	push	{lr}		; (str lr, [sp, #-4]!)
   1e758:	sub	sp, sp, #268	; 0x10c
   1e75c:	add	r1, sp, #4
   1e760:	ldr	r2, [pc, #60]	; 1e7a4 <lchmod@@Base+0x7118>
   1e764:	bl	1e7b0 <lchmod@@Base+0x7124>
   1e768:	cmp	r0, #0
   1e76c:	movne	r0, #0
   1e770:	bne	1e79c <lchmod@@Base+0x7110>
   1e774:	ldr	r1, [pc, #44]	; 1e7a8 <lchmod@@Base+0x711c>
   1e778:	add	r0, sp, #4
   1e77c:	bl	114d0 <strcmp@plt>
   1e780:	cmp	r0, #0
   1e784:	beq	1e79c <lchmod@@Base+0x7110>
   1e788:	add	r0, sp, #4
   1e78c:	ldr	r1, [pc, #24]	; 1e7ac <lchmod@@Base+0x7120>
   1e790:	bl	114d0 <strcmp@plt>
   1e794:	adds	r0, r0, #0
   1e798:	movne	r0, #1
   1e79c:	add	sp, sp, #268	; 0x10c
   1e7a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e7a4:	andeq	r0, r0, r1, lsl #2
   1e7a8:	andeq	pc, r1, ip, asr sp	; <UNPREDICTABLE>
   1e7ac:	andeq	pc, r1, r0, ror #26
   1e7b0:	push	{r4, r5, r6, lr}
   1e7b4:	mov	r5, r1
   1e7b8:	mov	r1, #0
   1e7bc:	mov	r4, r2
   1e7c0:	bl	11794 <setlocale@plt>
   1e7c4:	subs	r6, r0, #0
   1e7c8:	beq	1e824 <lchmod@@Base+0x7198>
   1e7cc:	bl	116e0 <strlen@plt>
   1e7d0:	cmp	r4, r0
   1e7d4:	bhi	1e80c <lchmod@@Base+0x7180>
   1e7d8:	cmp	r4, #0
   1e7dc:	bne	1e7e8 <lchmod@@Base+0x715c>
   1e7e0:	mov	r0, #34	; 0x22
   1e7e4:	pop	{r4, r5, r6, pc}
   1e7e8:	sub	r4, r4, #1
   1e7ec:	mov	r1, r6
   1e7f0:	mov	r2, r4
   1e7f4:	mov	r0, r5
   1e7f8:	bl	11530 <memcpy@plt>
   1e7fc:	mov	r3, #0
   1e800:	strb	r3, [r5, r4]
   1e804:	mov	r0, #34	; 0x22
   1e808:	pop	{r4, r5, r6, pc}
   1e80c:	add	r2, r0, #1
   1e810:	mov	r1, r6
   1e814:	mov	r0, r5
   1e818:	bl	11530 <memcpy@plt>
   1e81c:	mov	r0, #0
   1e820:	pop	{r4, r5, r6, pc}
   1e824:	cmp	r4, #0
   1e828:	beq	1e838 <lchmod@@Base+0x71ac>
   1e82c:	strb	r6, [r5]
   1e830:	mov	r0, #22
   1e834:	pop	{r4, r5, r6, pc}
   1e838:	mov	r0, #22
   1e83c:	pop	{r4, r5, r6, pc}
   1e840:	mov	r1, #0
   1e844:	b	11794 <setlocale@plt>
   1e848:	subs	r2, r1, #1
   1e84c:	bxeq	lr
   1e850:	bcc	1ea28 <lchmod@@Base+0x739c>
   1e854:	cmp	r0, r1
   1e858:	bls	1ea0c <lchmod@@Base+0x7380>
   1e85c:	tst	r1, r2
   1e860:	beq	1ea18 <lchmod@@Base+0x738c>
   1e864:	clz	r3, r0
   1e868:	clz	r2, r1
   1e86c:	sub	r3, r2, r3
   1e870:	rsbs	r3, r3, #31
   1e874:	addne	r3, r3, r3, lsl #1
   1e878:	mov	r2, #0
   1e87c:	addne	pc, pc, r3, lsl #2
   1e880:	nop			; (mov r0, r0)
   1e884:	cmp	r0, r1, lsl #31
   1e888:	adc	r2, r2, r2
   1e88c:	subcs	r0, r0, r1, lsl #31
   1e890:	cmp	r0, r1, lsl #30
   1e894:	adc	r2, r2, r2
   1e898:	subcs	r0, r0, r1, lsl #30
   1e89c:	cmp	r0, r1, lsl #29
   1e8a0:	adc	r2, r2, r2
   1e8a4:	subcs	r0, r0, r1, lsl #29
   1e8a8:	cmp	r0, r1, lsl #28
   1e8ac:	adc	r2, r2, r2
   1e8b0:	subcs	r0, r0, r1, lsl #28
   1e8b4:	cmp	r0, r1, lsl #27
   1e8b8:	adc	r2, r2, r2
   1e8bc:	subcs	r0, r0, r1, lsl #27
   1e8c0:	cmp	r0, r1, lsl #26
   1e8c4:	adc	r2, r2, r2
   1e8c8:	subcs	r0, r0, r1, lsl #26
   1e8cc:	cmp	r0, r1, lsl #25
   1e8d0:	adc	r2, r2, r2
   1e8d4:	subcs	r0, r0, r1, lsl #25
   1e8d8:	cmp	r0, r1, lsl #24
   1e8dc:	adc	r2, r2, r2
   1e8e0:	subcs	r0, r0, r1, lsl #24
   1e8e4:	cmp	r0, r1, lsl #23
   1e8e8:	adc	r2, r2, r2
   1e8ec:	subcs	r0, r0, r1, lsl #23
   1e8f0:	cmp	r0, r1, lsl #22
   1e8f4:	adc	r2, r2, r2
   1e8f8:	subcs	r0, r0, r1, lsl #22
   1e8fc:	cmp	r0, r1, lsl #21
   1e900:	adc	r2, r2, r2
   1e904:	subcs	r0, r0, r1, lsl #21
   1e908:	cmp	r0, r1, lsl #20
   1e90c:	adc	r2, r2, r2
   1e910:	subcs	r0, r0, r1, lsl #20
   1e914:	cmp	r0, r1, lsl #19
   1e918:	adc	r2, r2, r2
   1e91c:	subcs	r0, r0, r1, lsl #19
   1e920:	cmp	r0, r1, lsl #18
   1e924:	adc	r2, r2, r2
   1e928:	subcs	r0, r0, r1, lsl #18
   1e92c:	cmp	r0, r1, lsl #17
   1e930:	adc	r2, r2, r2
   1e934:	subcs	r0, r0, r1, lsl #17
   1e938:	cmp	r0, r1, lsl #16
   1e93c:	adc	r2, r2, r2
   1e940:	subcs	r0, r0, r1, lsl #16
   1e944:	cmp	r0, r1, lsl #15
   1e948:	adc	r2, r2, r2
   1e94c:	subcs	r0, r0, r1, lsl #15
   1e950:	cmp	r0, r1, lsl #14
   1e954:	adc	r2, r2, r2
   1e958:	subcs	r0, r0, r1, lsl #14
   1e95c:	cmp	r0, r1, lsl #13
   1e960:	adc	r2, r2, r2
   1e964:	subcs	r0, r0, r1, lsl #13
   1e968:	cmp	r0, r1, lsl #12
   1e96c:	adc	r2, r2, r2
   1e970:	subcs	r0, r0, r1, lsl #12
   1e974:	cmp	r0, r1, lsl #11
   1e978:	adc	r2, r2, r2
   1e97c:	subcs	r0, r0, r1, lsl #11
   1e980:	cmp	r0, r1, lsl #10
   1e984:	adc	r2, r2, r2
   1e988:	subcs	r0, r0, r1, lsl #10
   1e98c:	cmp	r0, r1, lsl #9
   1e990:	adc	r2, r2, r2
   1e994:	subcs	r0, r0, r1, lsl #9
   1e998:	cmp	r0, r1, lsl #8
   1e99c:	adc	r2, r2, r2
   1e9a0:	subcs	r0, r0, r1, lsl #8
   1e9a4:	cmp	r0, r1, lsl #7
   1e9a8:	adc	r2, r2, r2
   1e9ac:	subcs	r0, r0, r1, lsl #7
   1e9b0:	cmp	r0, r1, lsl #6
   1e9b4:	adc	r2, r2, r2
   1e9b8:	subcs	r0, r0, r1, lsl #6
   1e9bc:	cmp	r0, r1, lsl #5
   1e9c0:	adc	r2, r2, r2
   1e9c4:	subcs	r0, r0, r1, lsl #5
   1e9c8:	cmp	r0, r1, lsl #4
   1e9cc:	adc	r2, r2, r2
   1e9d0:	subcs	r0, r0, r1, lsl #4
   1e9d4:	cmp	r0, r1, lsl #3
   1e9d8:	adc	r2, r2, r2
   1e9dc:	subcs	r0, r0, r1, lsl #3
   1e9e0:	cmp	r0, r1, lsl #2
   1e9e4:	adc	r2, r2, r2
   1e9e8:	subcs	r0, r0, r1, lsl #2
   1e9ec:	cmp	r0, r1, lsl #1
   1e9f0:	adc	r2, r2, r2
   1e9f4:	subcs	r0, r0, r1, lsl #1
   1e9f8:	cmp	r0, r1
   1e9fc:	adc	r2, r2, r2
   1ea00:	subcs	r0, r0, r1
   1ea04:	mov	r0, r2
   1ea08:	bx	lr
   1ea0c:	moveq	r0, #1
   1ea10:	movne	r0, #0
   1ea14:	bx	lr
   1ea18:	clz	r2, r1
   1ea1c:	rsb	r2, r2, #31
   1ea20:	lsr	r0, r0, r2
   1ea24:	bx	lr
   1ea28:	cmp	r0, #0
   1ea2c:	mvnne	r0, #0
   1ea30:	b	1ecd0 <lchmod@@Base+0x7644>
   1ea34:	cmp	r1, #0
   1ea38:	beq	1ea28 <lchmod@@Base+0x739c>
   1ea3c:	push	{r0, r1, lr}
   1ea40:	bl	1e848 <lchmod@@Base+0x71bc>
   1ea44:	pop	{r1, r2, lr}
   1ea48:	mul	r3, r2, r0
   1ea4c:	sub	r1, r1, r3
   1ea50:	bx	lr
   1ea54:	cmp	r1, #0
   1ea58:	beq	1ec64 <lchmod@@Base+0x75d8>
   1ea5c:	eor	ip, r0, r1
   1ea60:	rsbmi	r1, r1, #0
   1ea64:	subs	r2, r1, #1
   1ea68:	beq	1ec30 <lchmod@@Base+0x75a4>
   1ea6c:	movs	r3, r0
   1ea70:	rsbmi	r3, r0, #0
   1ea74:	cmp	r3, r1
   1ea78:	bls	1ec3c <lchmod@@Base+0x75b0>
   1ea7c:	tst	r1, r2
   1ea80:	beq	1ec4c <lchmod@@Base+0x75c0>
   1ea84:	clz	r2, r3
   1ea88:	clz	r0, r1
   1ea8c:	sub	r2, r0, r2
   1ea90:	rsbs	r2, r2, #31
   1ea94:	addne	r2, r2, r2, lsl #1
   1ea98:	mov	r0, #0
   1ea9c:	addne	pc, pc, r2, lsl #2
   1eaa0:	nop			; (mov r0, r0)
   1eaa4:	cmp	r3, r1, lsl #31
   1eaa8:	adc	r0, r0, r0
   1eaac:	subcs	r3, r3, r1, lsl #31
   1eab0:	cmp	r3, r1, lsl #30
   1eab4:	adc	r0, r0, r0
   1eab8:	subcs	r3, r3, r1, lsl #30
   1eabc:	cmp	r3, r1, lsl #29
   1eac0:	adc	r0, r0, r0
   1eac4:	subcs	r3, r3, r1, lsl #29
   1eac8:	cmp	r3, r1, lsl #28
   1eacc:	adc	r0, r0, r0
   1ead0:	subcs	r3, r3, r1, lsl #28
   1ead4:	cmp	r3, r1, lsl #27
   1ead8:	adc	r0, r0, r0
   1eadc:	subcs	r3, r3, r1, lsl #27
   1eae0:	cmp	r3, r1, lsl #26
   1eae4:	adc	r0, r0, r0
   1eae8:	subcs	r3, r3, r1, lsl #26
   1eaec:	cmp	r3, r1, lsl #25
   1eaf0:	adc	r0, r0, r0
   1eaf4:	subcs	r3, r3, r1, lsl #25
   1eaf8:	cmp	r3, r1, lsl #24
   1eafc:	adc	r0, r0, r0
   1eb00:	subcs	r3, r3, r1, lsl #24
   1eb04:	cmp	r3, r1, lsl #23
   1eb08:	adc	r0, r0, r0
   1eb0c:	subcs	r3, r3, r1, lsl #23
   1eb10:	cmp	r3, r1, lsl #22
   1eb14:	adc	r0, r0, r0
   1eb18:	subcs	r3, r3, r1, lsl #22
   1eb1c:	cmp	r3, r1, lsl #21
   1eb20:	adc	r0, r0, r0
   1eb24:	subcs	r3, r3, r1, lsl #21
   1eb28:	cmp	r3, r1, lsl #20
   1eb2c:	adc	r0, r0, r0
   1eb30:	subcs	r3, r3, r1, lsl #20
   1eb34:	cmp	r3, r1, lsl #19
   1eb38:	adc	r0, r0, r0
   1eb3c:	subcs	r3, r3, r1, lsl #19
   1eb40:	cmp	r3, r1, lsl #18
   1eb44:	adc	r0, r0, r0
   1eb48:	subcs	r3, r3, r1, lsl #18
   1eb4c:	cmp	r3, r1, lsl #17
   1eb50:	adc	r0, r0, r0
   1eb54:	subcs	r3, r3, r1, lsl #17
   1eb58:	cmp	r3, r1, lsl #16
   1eb5c:	adc	r0, r0, r0
   1eb60:	subcs	r3, r3, r1, lsl #16
   1eb64:	cmp	r3, r1, lsl #15
   1eb68:	adc	r0, r0, r0
   1eb6c:	subcs	r3, r3, r1, lsl #15
   1eb70:	cmp	r3, r1, lsl #14
   1eb74:	adc	r0, r0, r0
   1eb78:	subcs	r3, r3, r1, lsl #14
   1eb7c:	cmp	r3, r1, lsl #13
   1eb80:	adc	r0, r0, r0
   1eb84:	subcs	r3, r3, r1, lsl #13
   1eb88:	cmp	r3, r1, lsl #12
   1eb8c:	adc	r0, r0, r0
   1eb90:	subcs	r3, r3, r1, lsl #12
   1eb94:	cmp	r3, r1, lsl #11
   1eb98:	adc	r0, r0, r0
   1eb9c:	subcs	r3, r3, r1, lsl #11
   1eba0:	cmp	r3, r1, lsl #10
   1eba4:	adc	r0, r0, r0
   1eba8:	subcs	r3, r3, r1, lsl #10
   1ebac:	cmp	r3, r1, lsl #9
   1ebb0:	adc	r0, r0, r0
   1ebb4:	subcs	r3, r3, r1, lsl #9
   1ebb8:	cmp	r3, r1, lsl #8
   1ebbc:	adc	r0, r0, r0
   1ebc0:	subcs	r3, r3, r1, lsl #8
   1ebc4:	cmp	r3, r1, lsl #7
   1ebc8:	adc	r0, r0, r0
   1ebcc:	subcs	r3, r3, r1, lsl #7
   1ebd0:	cmp	r3, r1, lsl #6
   1ebd4:	adc	r0, r0, r0
   1ebd8:	subcs	r3, r3, r1, lsl #6
   1ebdc:	cmp	r3, r1, lsl #5
   1ebe0:	adc	r0, r0, r0
   1ebe4:	subcs	r3, r3, r1, lsl #5
   1ebe8:	cmp	r3, r1, lsl #4
   1ebec:	adc	r0, r0, r0
   1ebf0:	subcs	r3, r3, r1, lsl #4
   1ebf4:	cmp	r3, r1, lsl #3
   1ebf8:	adc	r0, r0, r0
   1ebfc:	subcs	r3, r3, r1, lsl #3
   1ec00:	cmp	r3, r1, lsl #2
   1ec04:	adc	r0, r0, r0
   1ec08:	subcs	r3, r3, r1, lsl #2
   1ec0c:	cmp	r3, r1, lsl #1
   1ec10:	adc	r0, r0, r0
   1ec14:	subcs	r3, r3, r1, lsl #1
   1ec18:	cmp	r3, r1
   1ec1c:	adc	r0, r0, r0
   1ec20:	subcs	r3, r3, r1
   1ec24:	cmp	ip, #0
   1ec28:	rsbmi	r0, r0, #0
   1ec2c:	bx	lr
   1ec30:	teq	ip, r0
   1ec34:	rsbmi	r0, r0, #0
   1ec38:	bx	lr
   1ec3c:	movcc	r0, #0
   1ec40:	asreq	r0, ip, #31
   1ec44:	orreq	r0, r0, #1
   1ec48:	bx	lr
   1ec4c:	clz	r2, r1
   1ec50:	rsb	r2, r2, #31
   1ec54:	cmp	ip, #0
   1ec58:	lsr	r0, r3, r2
   1ec5c:	rsbmi	r0, r0, #0
   1ec60:	bx	lr
   1ec64:	cmp	r0, #0
   1ec68:	mvngt	r0, #-2147483648	; 0x80000000
   1ec6c:	movlt	r0, #-2147483648	; 0x80000000
   1ec70:	b	1ecd0 <lchmod@@Base+0x7644>
   1ec74:	cmp	r1, #0
   1ec78:	beq	1ec64 <lchmod@@Base+0x75d8>
   1ec7c:	push	{r0, r1, lr}
   1ec80:	bl	1ea5c <lchmod@@Base+0x73d0>
   1ec84:	pop	{r1, r2, lr}
   1ec88:	mul	r3, r2, r0
   1ec8c:	sub	r1, r1, r3
   1ec90:	bx	lr
   1ec94:	cmp	r3, #0
   1ec98:	cmpeq	r2, #0
   1ec9c:	bne	1ecb4 <lchmod@@Base+0x7628>
   1eca0:	cmp	r1, #0
   1eca4:	cmpeq	r0, #0
   1eca8:	mvnne	r1, #0
   1ecac:	mvnne	r0, #0
   1ecb0:	b	1ecd0 <lchmod@@Base+0x7644>
   1ecb4:	sub	sp, sp, #8
   1ecb8:	push	{sp, lr}
   1ecbc:	bl	1ece0 <lchmod@@Base+0x7654>
   1ecc0:	ldr	lr, [sp, #4]
   1ecc4:	add	sp, sp, #8
   1ecc8:	pop	{r2, r3}
   1eccc:	bx	lr
   1ecd0:	push	{r1, lr}
   1ecd4:	mov	r0, #8
   1ecd8:	bl	114b8 <raise@plt>
   1ecdc:	pop	{r1, pc}
   1ece0:	cmp	r1, r3
   1ece4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ece8:	cmpeq	r0, r2
   1ecec:	mov	r4, r0
   1ecf0:	mov	r5, r1
   1ecf4:	ldr	r9, [sp, #28]
   1ecf8:	movcc	r0, #0
   1ecfc:	movcc	r1, #0
   1ed00:	bcc	1edf8 <lchmod@@Base+0x776c>
   1ed04:	cmp	r3, #0
   1ed08:	clzeq	ip, r2
   1ed0c:	clzne	ip, r3
   1ed10:	addeq	ip, ip, #32
   1ed14:	cmp	r5, #0
   1ed18:	clzeq	r1, r4
   1ed1c:	addeq	r1, r1, #32
   1ed20:	clzne	r1, r5
   1ed24:	sub	ip, ip, r1
   1ed28:	sub	lr, ip, #32
   1ed2c:	lsl	r7, r3, ip
   1ed30:	rsb	r8, ip, #32
   1ed34:	orr	r7, r7, r2, lsl lr
   1ed38:	orr	r7, r7, r2, lsr r8
   1ed3c:	lsl	r6, r2, ip
   1ed40:	cmp	r5, r7
   1ed44:	cmpeq	r4, r6
   1ed48:	movcc	r0, #0
   1ed4c:	movcc	r1, #0
   1ed50:	bcc	1ed6c <lchmod@@Base+0x76e0>
   1ed54:	mov	r3, #1
   1ed58:	subs	r4, r4, r6
   1ed5c:	lsl	r1, r3, lr
   1ed60:	lsl	r0, r3, ip
   1ed64:	orr	r1, r1, r3, lsr r8
   1ed68:	sbc	r5, r5, r7
   1ed6c:	cmp	ip, #0
   1ed70:	beq	1edf8 <lchmod@@Base+0x776c>
   1ed74:	lsrs	r3, r7, #1
   1ed78:	rrx	r2, r6
   1ed7c:	mov	r6, ip
   1ed80:	b	1eda4 <lchmod@@Base+0x7718>
   1ed84:	subs	r4, r4, r2
   1ed88:	sbc	r5, r5, r3
   1ed8c:	adds	r4, r4, r4
   1ed90:	adc	r5, r5, r5
   1ed94:	adds	r4, r4, #1
   1ed98:	adc	r5, r5, #0
   1ed9c:	subs	r6, r6, #1
   1eda0:	beq	1edc0 <lchmod@@Base+0x7734>
   1eda4:	cmp	r5, r3
   1eda8:	cmpeq	r4, r2
   1edac:	bcs	1ed84 <lchmod@@Base+0x76f8>
   1edb0:	adds	r4, r4, r4
   1edb4:	adc	r5, r5, r5
   1edb8:	subs	r6, r6, #1
   1edbc:	bne	1eda4 <lchmod@@Base+0x7718>
   1edc0:	lsr	r6, r4, ip
   1edc4:	lsr	r7, r5, ip
   1edc8:	orr	r6, r6, r5, lsl r8
   1edcc:	adds	r2, r0, r4
   1edd0:	orr	r6, r6, r5, lsr lr
   1edd4:	adc	r3, r1, r5
   1edd8:	lsl	r1, r7, ip
   1eddc:	orr	r1, r1, r6, lsl lr
   1ede0:	lsl	r0, r6, ip
   1ede4:	orr	r1, r1, r6, lsr r8
   1ede8:	subs	r0, r2, r0
   1edec:	mov	r4, r6
   1edf0:	mov	r5, r7
   1edf4:	sbc	r1, r3, r1
   1edf8:	cmp	r9, #0
   1edfc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1ee00:	strd	r4, [r9]
   1ee04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ee08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ee0c:	mov	r7, r0
   1ee10:	ldr	r6, [pc, #72]	; 1ee60 <lchmod@@Base+0x77d4>
   1ee14:	ldr	r5, [pc, #72]	; 1ee64 <lchmod@@Base+0x77d8>
   1ee18:	add	r6, pc, r6
   1ee1c:	add	r5, pc, r5
   1ee20:	sub	r6, r6, r5
   1ee24:	mov	r8, r1
   1ee28:	mov	r9, r2
   1ee2c:	bl	11468 <fstatfs64@plt-0x20>
   1ee30:	asrs	r6, r6, #2
   1ee34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee38:	mov	r4, #0
   1ee3c:	add	r4, r4, #1
   1ee40:	ldr	r3, [r5], #4
   1ee44:	mov	r2, r9
   1ee48:	mov	r1, r8
   1ee4c:	mov	r0, r7
   1ee50:	blx	r3
   1ee54:	cmp	r6, r4
   1ee58:	bne	1ee3c <lchmod@@Base+0x77b0>
   1ee5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee60:	andeq	r1, r1, r8, ror #1
   1ee64:	andeq	r1, r1, r0, ror #1
   1ee68:	bx	lr
   1ee6c:	ldr	r3, [pc, #12]	; 1ee80 <lchmod@@Base+0x77f4>
   1ee70:	mov	r1, #0
   1ee74:	add	r3, pc, r3
   1ee78:	ldr	r2, [r3]
   1ee7c:	b	11734 <__cxa_atexit@plt>
   1ee80:	andeq	r1, r1, r8, lsl #6

Disassembly of section .fini:

0001ee84 <.fini>:
   1ee84:	push	{r3, lr}
   1ee88:	pop	{r3, pc}
