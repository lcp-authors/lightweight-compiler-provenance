
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init>:
 c54:	push	{r3, lr}
 c58:	bl	e3c <call_weak_fn>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <.plt>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <.plt+0x10>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:	.word	0x00012390

00000c74 <propagate_generic@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #912]!	; 0x390

00000c80 <make_conf@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #904]!	; 0x388

00000c8c <rb_current_time@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #896]!	; 0x380

00000c98 <sendto_match_servs@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #888]!	; 0x378

00000ca4 <__cxa_finalize@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #880]!	; 0x370

00000cb0 <sendto_one@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #872]!	; 0x368

00000cbc <replace_old_ban@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #864]!	; 0x360

00000cc8 <rb_outofmemory@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #856]!	; 0x358

00000cd4 <operhash_delete@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #848]!	; 0x350

00000ce0 <sendto_realops_snomask@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #840]!	; 0x348

00000cec <bandb_add@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #832]!	; 0x340

00000cf8 <deactivate_conf@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #824]!	; 0x338

00000d04 <check_xlines@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #816]!	; 0x330

00000d10 <get_oper_name@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #808]!	; 0x328

00000d1c <rb_free_rb_dlink_node@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #800]!	; 0x320

00000d28 <cluster_generic@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #792]!	; 0x318

00000d34 <operhash_add@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #784]!	; 0x310

00000d40 <strcpy@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #776]!	; 0x308

00000d4c <sendto_server@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #768]!	; 0x300

00000d58 <malloc@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #760]!	; 0x2f8

00000d64 <__gmon_start__@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d70 <free_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #744]!	; 0x2e8

00000d7c <rb_make_rb_dlink_node@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #736]!	; 0x2e0

00000d88 <strlen@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #728]!	; 0x2d8

00000d94 <find_xline_mask@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00000da0 <ilog@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #712]!	; 0x2c8

00000dac <collapse@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #704]!	; 0x2c0

00000db8 <match@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00000dc4 <valid_temp_time@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00000dd0 <remove_reject_mask@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00000ddc <sendto_one_notice@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #672]!	; 0x2a0

00000de8 <bandb_del@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #664]!	; 0x298

00000df4 <atoi@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #656]!	; 0x290

00000e00 <valid_wild_card_simple@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #648]!	; 0x288

00000e0c <find_shared_conf@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #640]!	; 0x280

00000e18 <privilegeset_in_set@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #632]!	; 0x278

00000e24 <irccmp@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #624]!	; 0x270

00000e30 <__assert_fail@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #616]!	; 0x268

Disassembly of section .text:

00000e3c <call_weak_fn>:
     e3c:	ldr	r3, [pc, #20]	; e58 <call_weak_fn+0x1c>
     e40:	ldr	r2, [pc, #20]	; e5c <call_weak_fn+0x20>
     e44:	add	r3, pc, r3
     e48:	ldr	r2, [r3, r2]
     e4c:	cmp	r2, #0
     e50:	bxeq	lr
     e54:	b	d64 <__gmon_start__@plt>
     e58:	.word	0x000121b4
     e5c:	.word	0x000000c0

00000e60 <deregister_tm_clones>:
     e60:	ldr	r0, [pc, #44]	; e94 <deregister_tm_clones+0x34>
     e64:	ldr	r3, [pc, #44]	; e98 <deregister_tm_clones+0x38>
     e68:	add	r0, pc, r0
     e6c:	add	r3, pc, r3
     e70:	cmp	r3, r0
     e74:	ldr	r3, [pc, #32]	; e9c <deregister_tm_clones+0x3c>
     e78:	add	r3, pc, r3
     e7c:	bxeq	lr
     e80:	ldr	r2, [pc, #24]	; ea0 <deregister_tm_clones+0x40>
     e84:	ldr	r3, [r3, r2]
     e88:	cmp	r3, #0
     e8c:	bxeq	lr
     e90:	bx	r3
     e94:	.word	0x00012328
     e98:	.word	0x00012324
     e9c:	.word	0x00012180
     ea0:	.word	0x000000a8

00000ea4 <register_tm_clones>:
     ea4:	ldr	r0, [pc, #56]	; ee4 <register_tm_clones+0x40>
     ea8:	ldr	r3, [pc, #56]	; ee8 <register_tm_clones+0x44>
     eac:	add	r0, pc, r0
     eb0:	add	r3, pc, r3
     eb4:	sub	r1, r3, r0
     eb8:	ldr	r3, [pc, #44]	; eec <register_tm_clones+0x48>
     ebc:	asr	r1, r1, #2
     ec0:	add	r3, pc, r3
     ec4:	add	r1, r1, r1, lsr #31
     ec8:	asrs	r1, r1, #1
     ecc:	bxeq	lr
     ed0:	ldr	r2, [pc, #24]	; ef0 <register_tm_clones+0x4c>
     ed4:	ldr	r3, [r3, r2]
     ed8:	cmp	r3, #0
     edc:	bxeq	lr
     ee0:	bx	r3
     ee4:	.word	0x000122e4
     ee8:	.word	0x000122e0
     eec:	.word	0x00012138
     ef0:	.word	0x000000c8

00000ef4 <__do_global_dtors_aux>:
     ef4:	ldr	r3, [pc, #76]	; f48 <__do_global_dtors_aux+0x54>
     ef8:	ldr	r2, [pc, #76]	; f4c <__do_global_dtors_aux+0x58>
     efc:	add	r3, pc, r3
     f00:	add	r2, pc, r2
     f04:	ldrb	r3, [r3]
     f08:	cmp	r3, #0
     f0c:	bxne	lr
     f10:	ldr	r3, [pc, #56]	; f50 <__do_global_dtors_aux+0x5c>
     f14:	push	{r4, lr}
     f18:	ldr	r3, [r2, r3]
     f1c:	cmp	r3, #0
     f20:	beq	f30 <__do_global_dtors_aux+0x3c>
     f24:	ldr	r3, [pc, #40]	; f54 <__do_global_dtors_aux+0x60>
     f28:	ldr	r0, [pc, r3]
     f2c:	bl	ca4 <__cxa_finalize@plt>
     f30:	bl	e60 <deregister_tm_clones>
     f34:	ldr	r3, [pc, #28]	; f58 <__do_global_dtors_aux+0x64>
     f38:	mov	r2, #1
     f3c:	add	r3, pc, r3
     f40:	strb	r2, [r3]
     f44:	pop	{r4, pc}
     f48:	.word	0x00012294
     f4c:	.word	0x000120f8
     f50:	.word	0x000000a4
     f54:	.word	0x000121a8
     f58:	.word	0x00012254

00000f5c <frame_dummy>:
     f5c:	b	ea4 <register_tm_clones>

00000f60 <ms_xline>:
     f60:	push	{r4, r5, fp, lr}
     f64:	add	fp, sp, #8
     f68:	sub	sp, sp, #8
     f6c:	mov	r4, r2
     f70:	ldr	r5, [fp, #8]
     f74:	ldmib	r5, {r1, r3}
     f78:	ldr	r0, [r5, #12]
     f7c:	ldr	r2, [r5, #16]
     f80:	stm	sp, {r0, r2}
     f84:	mov	r0, r4
     f88:	mov	r2, #0
     f8c:	bl	1588 <propagate_xline>
     f90:	ldrh	r0, [r4, #80]	; 0x50
     f94:	cmp	r0, #64	; 0x40
     f98:	bne	fe0 <ms_xline+0x80>
     f9c:	ldr	r0, [r4, #24]
     fa0:	cmp	r0, #0
     fa4:	beq	fe0 <ms_xline+0x80>
     fa8:	ldr	r0, [r5, #4]
     fac:	ldr	r1, [pc, #52]	; fe8 <ms_xline+0x88>
     fb0:	ldr	r1, [pc, r1]
     fb4:	add	r1, r1, #88	; 0x58
     fb8:	bl	db8 <match@plt>
     fbc:	cmp	r0, #0
     fc0:	beq	fe0 <ms_xline+0x80>
     fc4:	ldr	r2, [r5, #8]
     fc8:	ldr	r3, [r5, #16]
     fcc:	mov	r0, r4
     fd0:	mov	r1, #0
     fd4:	sub	sp, fp, #8
     fd8:	pop	{r4, r5, fp, lr}
     fdc:	b	1cb8 <handle_remote_xline>
     fe0:	sub	sp, fp, #8
     fe4:	pop	{r4, r5, fp, pc}
     fe8:	.word	0x00012114

00000fec <me_xline>:
     fec:	push	{r4, r5, fp, lr}
     ff0:	add	fp, sp, #8
     ff4:	ldrh	r0, [r2, #80]	; 0x50
     ff8:	cmp	r0, #64	; 0x40
     ffc:	popne	{r4, r5, fp, pc}
    1000:	mov	r4, r2
    1004:	ldr	r0, [r2, #24]
    1008:	cmp	r0, #0
    100c:	beq	1034 <me_xline+0x48>
    1010:	ldr	r5, [fp, #8]
    1014:	ldr	r0, [r5, #4]
    1018:	bl	df4 <atoi@plt>
    101c:	mov	r1, r0
    1020:	ldr	r2, [r5, #8]
    1024:	ldr	r3, [r5, #16]
    1028:	mov	r0, r4
    102c:	pop	{r4, r5, fp, lr}
    1030:	b	1cb8 <handle_remote_xline>
    1034:	pop	{r4, r5, fp, pc}

00001038 <mo_xline>:
    1038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    103c:	add	fp, sp, #28
    1040:	sub	sp, sp, #28
    1044:	mov	r4, r2
    1048:	ldr	r0, [r2, #24]
    104c:	ldr	r1, [pc, #680]	; 12fc <mo_xline+0x2c4>
    1050:	ldr	r1, [pc, r1]
    1054:	ldr	r5, [r1, #324]	; 0x144
    1058:	cmp	r5, #0
    105c:	mov	r6, r5
    1060:	movwne	r6, #1
    1064:	cmp	r0, #0
    1068:	beq	1160 <mo_xline+0x128>
    106c:	ldr	r0, [r0, #36]	; 0x24
    1070:	cmp	r0, #0
    1074:	beq	1160 <mo_xline+0x128>
    1078:	mov	r7, r3
    107c:	ldr	r8, [fp, #8]
    1080:	ldr	r1, [pc, #632]	; 1300 <mo_xline+0x2c8>
    1084:	add	r1, pc, r1
    1088:	bl	e18 <privilegeset_in_set@plt>
    108c:	cmp	r0, #0
    1090:	beq	1160 <mo_xline+0x128>
    1094:	ldr	r0, [r8, #4]
    1098:	bl	dc4 <valid_temp_time@plt>
    109c:	mov	r1, #0
    10a0:	cmn	r0, #1
    10a4:	movle	r0, r1
    10a8:	str	r0, [sp, #20]
    10ac:	mov	r9, #1
    10b0:	movwgt	r9, #2
    10b4:	ldr	r0, [r8, r9, lsl #2]
    10b8:	str	r0, [sp, #24]
    10bc:	add	r0, r9, #3
    10c0:	add	sl, r9, #1
    10c4:	cmp	r0, r7
    10c8:	bgt	10ec <mo_xline+0xb4>
    10cc:	str	r0, [sp, #16]
    10d0:	ldr	r0, [r8, sl, lsl #2]
    10d4:	ldr	r1, [pc, #564]	; 1310 <mo_xline+0x2d8>
    10d8:	add	r1, pc, r1
    10dc:	bl	e24 <irccmp@plt>
    10e0:	mov	r1, #0
    10e4:	cmp	r0, #0
    10e8:	beq	1194 <mo_xline+0x15c>
    10ec:	cmp	sl, r7
    10f0:	bge	11d4 <mo_xline+0x19c>
    10f4:	ldr	r7, [r8, sl, lsl #2]
    10f8:	cmp	r7, #0
    10fc:	beq	11d4 <mo_xline+0x19c>
    1100:	ldrb	r0, [r7]
    1104:	cmp	r0, #0
    1108:	beq	11d4 <mo_xline+0x19c>
    110c:	cmp	r1, #0
    1110:	beq	1208 <mo_xline+0x1d0>
    1114:	ldr	r0, [pc, #524]	; 1328 <mo_xline+0x2f0>
    1118:	add	r0, pc, r0
    111c:	stm	sp, {r0, r7}
    1120:	mov	r0, r4
    1124:	mov	r6, r1
    1128:	ldr	r8, [sp, #20]
    112c:	mov	r2, r8
    1130:	ldr	r5, [sp, #24]
    1134:	mov	r3, r5
    1138:	bl	1588 <propagate_xline>
    113c:	ldr	r0, [pc, #488]	; 132c <mo_xline+0x2f4>
    1140:	ldr	r0, [pc, r0]
    1144:	add	r1, r0, #88	; 0x58
    1148:	mov	r0, r6
    114c:	bl	db8 <match@plt>
    1150:	mov	r6, #0
    1154:	cmp	r0, #0
    1158:	bne	1254 <mo_xline+0x21c>
    115c:	b	12f4 <mo_xline+0x2bc>
    1160:	ldr	r0, [pc, #412]	; 1304 <mo_xline+0x2cc>
    1164:	add	r0, pc, r0
    1168:	str	r0, [sp]
    116c:	add	r3, r4, #88	; 0x58
    1170:	ldr	r0, [pc, #400]	; 1308 <mo_xline+0x2d0>
    1174:	ldr	r0, [pc, r0]
    1178:	add	r2, r0, #88	; 0x58
    117c:	ldr	r1, [pc, #392]	; 130c <mo_xline+0x2d4>
    1180:	add	r1, pc, r1
    1184:	mov	r0, r4
    1188:	bl	cb0 <sendto_one@plt>
    118c:	sub	sp, fp, #28
    1190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1194:	ldr	r0, [r4, #24]
    1198:	cmp	r0, #0
    119c:	beq	11fc <mo_xline+0x1c4>
    11a0:	ldr	r0, [r0, #36]	; 0x24
    11a4:	cmp	r0, #0
    11a8:	beq	11fc <mo_xline+0x1c4>
    11ac:	ldr	r1, [pc, #352]	; 1314 <mo_xline+0x2dc>
    11b0:	add	r1, pc, r1
    11b4:	bl	e18 <privilegeset_in_set@plt>
    11b8:	cmp	r0, #0
    11bc:	beq	11fc <mo_xline+0x1c4>
    11c0:	add	r0, r8, r9, lsl #2
    11c4:	ldr	r1, [r0, #8]
    11c8:	ldr	sl, [sp, #16]
    11cc:	cmp	sl, r7
    11d0:	blt	10f4 <mo_xline+0xbc>
    11d4:	ldr	r0, [pc, #320]	; 131c <mo_xline+0x2e4>
    11d8:	add	r0, pc, r0
    11dc:	str	r0, [sp]
    11e0:	add	r3, r4, #88	; 0x58
    11e4:	ldr	r0, [pc, #308]	; 1320 <mo_xline+0x2e8>
    11e8:	ldr	r0, [pc, r0]
    11ec:	add	r2, r0, #88	; 0x58
    11f0:	ldr	r1, [pc, #300]	; 1324 <mo_xline+0x2ec>
    11f4:	add	r1, pc, r1
    11f8:	b	1184 <mo_xline+0x14c>
    11fc:	ldr	r0, [pc, #276]	; 1318 <mo_xline+0x2e0>
    1200:	add	r0, pc, r0
    1204:	b	1168 <mo_xline+0x130>
    1208:	ldr	r0, [pc, #288]	; 1330 <mo_xline+0x2f8>
    120c:	ldr	r0, [pc, r0]
    1210:	ldr	r0, [r0, #8]
    1214:	cmp	r0, #0
    1218:	beq	1244 <mo_xline+0x20c>
    121c:	cmp	r5, #0
    1220:	ldr	r5, [sp, #24]
    1224:	bne	1250 <mo_xline+0x218>
    1228:	mov	r0, r4
    122c:	ldr	r8, [sp, #20]
    1230:	mov	r1, r8
    1234:	mov	r2, r5
    1238:	mov	r3, r7
    123c:	bl	1670 <cluster_xline>
    1240:	b	1254 <mo_xline+0x21c>
    1244:	ldr	r8, [sp, #20]
    1248:	ldr	r5, [sp, #24]
    124c:	b	1254 <mo_xline+0x21c>
    1250:	ldr	r8, [sp, #20]
    1254:	mov	r0, r5
    1258:	bl	d94 <find_xline_mask@plt>
    125c:	cmp	r0, #0
    1260:	beq	1294 <mo_xline+0x25c>
    1264:	ldr	r1, [r0, #16]
    1268:	ldr	r0, [r0, #20]
    126c:	str	r5, [sp]
    1270:	str	r1, [sp, #4]
    1274:	str	r0, [sp, #8]
    1278:	add	r3, r4, #88	; 0x58
    127c:	ldr	r0, [pc, #176]	; 1334 <mo_xline+0x2fc>
    1280:	ldr	r0, [pc, r0]
    1284:	add	r2, r0, #88	; 0x58
    1288:	ldr	r1, [pc, #168]	; 1338 <mo_xline+0x300>
    128c:	add	r1, pc, r1
    1290:	b	1184 <mo_xline+0x14c>
    1294:	mov	r0, r4
    1298:	mov	r1, r5
    129c:	mov	r2, r7
    12a0:	bl	1788 <valid_xline>
    12a4:	cmp	r0, #0
    12a8:	beq	12f4 <mo_xline+0x2bc>
    12ac:	eor	r0, r6, #1
    12b0:	cmp	r8, #0
    12b4:	mov	r1, r8
    12b8:	movwne	r1, #1
    12bc:	orrs	r0, r1, r0
    12c0:	bne	12dc <mo_xline+0x2a4>
    12c4:	ldr	r1, [pc, #112]	; 133c <mo_xline+0x304>
    12c8:	add	r1, pc, r1
    12cc:	mov	r0, r4
    12d0:	sub	sp, fp, #28
    12d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12d8:	b	ddc <sendto_one_notice@plt>
    12dc:	str	r6, [sp]
    12e0:	mov	r0, r4
    12e4:	mov	r1, r5
    12e8:	mov	r2, r7
    12ec:	mov	r3, r8
    12f0:	bl	188c <apply_xline>
    12f4:	sub	sp, fp, #28
    12f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12fc:	.word	0x0001207c
    1300:	.word	0x000011f0
    1304:	.word	0x00001282
    1308:	.word	0x00011f50
    130c:	.word	0x000010ff
    1310:	.word	0x000011ce
    1314:	.word	0x000010f9
    1318:	.word	0x000010ae
    131c:	.word	0x00001096
    1320:	.word	0x00011edc
    1324:	.word	0x000010c4
    1328:	.word	0x000011c5
    132c:	.word	0x00011f84
    1330:	.word	0x00011eb0
    1334:	.word	0x00011e44
    1338:	.word	0x00001053
    133c:	.word	0x00001048

00001340 <ms_unxline>:
    1340:	push	{r4, r5, fp, lr}
    1344:	add	fp, sp, #8
    1348:	sub	sp, sp, #8
    134c:	mov	r4, r2
    1350:	ldr	r0, [pc, #128]	; 13d8 <ms_unxline+0x98>
    1354:	ldr	r0, [pc, r0]
    1358:	ldr	r3, [r0]
    135c:	ldr	r5, [fp, #8]
    1360:	ldr	r2, [r5, #4]
    1364:	ldr	r0, [r5, #8]
    1368:	ldr	r1, [pc, #108]	; 13dc <ms_unxline+0x9c>
    136c:	add	r1, pc, r1
    1370:	str	r1, [sp]
    1374:	str	r0, [sp, #4]
    1378:	ldr	r1, [pc, #96]	; 13e0 <ms_unxline+0xa0>
    137c:	add	r1, pc, r1
    1380:	mov	r0, r4
    1384:	bl	c74 <propagate_generic@plt>
    1388:	ldr	r0, [r5, #4]
    138c:	ldr	r1, [pc, #80]	; 13e4 <ms_unxline+0xa4>
    1390:	ldr	r1, [pc, r1]
    1394:	add	r1, r1, #88	; 0x58
    1398:	bl	db8 <match@plt>
    139c:	cmp	r0, #0
    13a0:	beq	13d0 <ms_unxline+0x90>
    13a4:	ldrh	r0, [r4, #80]	; 0x50
    13a8:	cmp	r0, #64	; 0x40
    13ac:	bne	13d0 <ms_unxline+0x90>
    13b0:	ldr	r0, [r4, #24]
    13b4:	cmp	r0, #0
    13b8:	beq	13d0 <ms_unxline+0x90>
    13bc:	ldr	r1, [r5, #8]
    13c0:	mov	r0, r4
    13c4:	sub	sp, fp, #8
    13c8:	pop	{r4, r5, fp, lr}
    13cc:	b	2228 <handle_remote_unxline>
    13d0:	sub	sp, fp, #8
    13d4:	pop	{r4, r5, fp, pc}
    13d8:	.word	0x00011d58
    13dc:	.word	0x00000fa1
    13e0:	.word	0x00000ef0
    13e4:	.word	0x00011d34

000013e8 <me_unxline>:
    13e8:	ldrh	r0, [r2, #80]	; 0x50
    13ec:	cmp	r0, #64	; 0x40
    13f0:	bxne	lr
    13f4:	ldr	r0, [r2, #24]
    13f8:	cmp	r0, #0
    13fc:	beq	1410 <me_unxline+0x28>
    1400:	ldr	r0, [sp]
    1404:	ldr	r1, [r0, #4]
    1408:	mov	r0, r2
    140c:	b	2228 <handle_remote_unxline>
    1410:	bx	lr

00001414 <mo_unxline>:
    1414:	push	{r4, r5, r6, r7, fp, lr}
    1418:	add	fp, sp, #16
    141c:	sub	sp, sp, #8
    1420:	mov	r4, r2
    1424:	ldr	r0, [r2, #24]
    1428:	cmp	r0, #0
    142c:	beq	1494 <mo_unxline+0x80>
    1430:	ldr	r0, [r0, #36]	; 0x24
    1434:	cmp	r0, #0
    1438:	beq	1494 <mo_unxline+0x80>
    143c:	mov	r6, r3
    1440:	ldr	r7, [fp, #8]
    1444:	ldr	r1, [pc, #272]	; 155c <mo_unxline+0x148>
    1448:	add	r1, pc, r1
    144c:	bl	e18 <privilegeset_in_set@plt>
    1450:	cmp	r0, #0
    1454:	beq	1494 <mo_unxline+0x80>
    1458:	mov	r5, #1
    145c:	cmp	r6, #4
    1460:	bne	147c <mo_unxline+0x68>
    1464:	ldr	r0, [r7, #8]
    1468:	ldr	r1, [pc, #252]	; 156c <mo_unxline+0x158>
    146c:	add	r1, pc, r1
    1470:	bl	e24 <irccmp@plt>
    1474:	cmp	r0, #0
    1478:	beq	14c8 <mo_unxline+0xb4>
    147c:	ldr	r1, [r7, #4]
    1480:	mov	r0, r4
    1484:	mov	r2, r5
    1488:	sub	sp, fp, #16
    148c:	pop	{r4, r5, r6, r7, fp, lr}
    1490:	b	1d74 <remove_xline>
    1494:	ldr	r0, [pc, #196]	; 1560 <mo_unxline+0x14c>
    1498:	add	r0, pc, r0
    149c:	str	r0, [sp]
    14a0:	add	r3, r4, #88	; 0x58
    14a4:	ldr	r0, [pc, #184]	; 1564 <mo_unxline+0x150>
    14a8:	ldr	r0, [pc, r0]
    14ac:	add	r2, r0, #88	; 0x58
    14b0:	ldr	r1, [pc, #176]	; 1568 <mo_unxline+0x154>
    14b4:	add	r1, pc, r1
    14b8:	mov	r0, r4
    14bc:	bl	cb0 <sendto_one@plt>
    14c0:	sub	sp, fp, #16
    14c4:	pop	{r4, r5, r6, r7, fp, pc}
    14c8:	ldr	r0, [r4, #24]
    14cc:	cmp	r0, #0
    14d0:	beq	1550 <mo_unxline+0x13c>
    14d4:	ldr	r0, [r0, #36]	; 0x24
    14d8:	cmp	r0, #0
    14dc:	beq	1550 <mo_unxline+0x13c>
    14e0:	ldr	r1, [pc, #136]	; 1570 <mo_unxline+0x15c>
    14e4:	add	r1, pc, r1
    14e8:	bl	e18 <privilegeset_in_set@plt>
    14ec:	cmp	r0, #0
    14f0:	beq	1550 <mo_unxline+0x13c>
    14f4:	ldr	r0, [pc, #124]	; 1578 <mo_unxline+0x164>
    14f8:	ldr	r0, [pc, r0]
    14fc:	ldr	r3, [r0]
    1500:	ldr	r0, [r7, #4]
    1504:	ldr	r2, [r7, #12]
    1508:	ldr	r1, [pc, #108]	; 157c <mo_unxline+0x168>
    150c:	add	r1, pc, r1
    1510:	str	r1, [sp]
    1514:	str	r0, [sp, #4]
    1518:	ldr	r1, [pc, #96]	; 1580 <mo_unxline+0x16c>
    151c:	add	r1, pc, r1
    1520:	mov	r0, r4
    1524:	bl	c74 <propagate_generic@plt>
    1528:	ldr	r0, [r7, #12]
    152c:	ldr	r1, [pc, #80]	; 1584 <mo_unxline+0x170>
    1530:	ldr	r1, [pc, r1]
    1534:	add	r1, r1, #88	; 0x58
    1538:	bl	db8 <match@plt>
    153c:	mov	r5, #0
    1540:	cmp	r0, #0
    1544:	bne	147c <mo_unxline+0x68>
    1548:	sub	sp, fp, #16
    154c:	pop	{r4, r5, r6, r7, fp, pc}
    1550:	ldr	r0, [pc, #28]	; 1574 <mo_unxline+0x160>
    1554:	add	r0, pc, r0
    1558:	b	149c <mo_unxline+0x88>
    155c:	.word	0x00000e2c
    1560:	.word	0x00000f4e
    1564:	.word	0x00011c1c
    1568:	.word	0x00000dcb
    156c:	.word	0x00000e3a
    1570:	.word	0x00000dc5
    1574:	.word	0x00000d5a
    1578:	.word	0x00011bb4
    157c:	.word	0x00000e01
    1580:	.word	0x00000d50
    1584:	.word	0x00011b94

00001588 <propagate_xline>:
    1588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    158c:	add	fp, sp, #24
    1590:	sub	sp, sp, #24
    1594:	mov	r6, r3
    1598:	mov	r4, r1
    159c:	mov	r5, r0
    15a0:	ldr	r7, [fp, #12]
    15a4:	ldr	r0, [fp, #8]
    15a8:	cmp	r2, #0
    15ac:	beq	15ec <propagate_xline+0x64>
    15b0:	ldr	r1, [pc, #176]	; 1668 <propagate_xline+0xe0>
    15b4:	ldr	r1, [pc, r1]
    15b8:	ldr	r3, [r1]
    15bc:	ldr	r1, [pc, #168]	; 166c <propagate_xline+0xe4>
    15c0:	add	r1, pc, r1
    15c4:	stm	sp, {r1, r4}
    15c8:	str	r2, [sp, #8]
    15cc:	str	r6, [sp, #12]
    15d0:	str	r0, [sp, #16]
    15d4:	str	r7, [sp, #20]
    15d8:	mov	r0, r5
    15dc:	mov	r1, r4
    15e0:	mov	r2, r3
    15e4:	mov	r3, #0
    15e8:	b	164c <propagate_xline+0xc4>
    15ec:	ldr	r8, [pc, #100]	; 1658 <propagate_xline+0xd0>
    15f0:	ldr	r8, [pc, r8]
    15f4:	ldr	r2, [r8]
    15f8:	ldr	r1, [pc, #92]	; 165c <propagate_xline+0xd4>
    15fc:	add	r1, pc, r1
    1600:	stm	sp, {r1, r4, r6}
    1604:	str	r0, [sp, #12]
    1608:	str	r7, [sp, #16]
    160c:	mov	r9, #0
    1610:	mov	r0, r5
    1614:	mov	r1, r4
    1618:	mov	r3, #0
    161c:	bl	c98 <sendto_match_servs@plt>
    1620:	ldr	r3, [r8]
    1624:	ldr	r0, [pc, #52]	; 1660 <propagate_xline+0xd8>
    1628:	ldr	r0, [pc, r0]
    162c:	ldr	r2, [r0]
    1630:	ldr	r0, [pc, #44]	; 1664 <propagate_xline+0xdc>
    1634:	add	r0, pc, r0
    1638:	stm	sp, {r0, r4, r9}
    163c:	str	r6, [sp, #12]
    1640:	str	r7, [sp, #16]
    1644:	mov	r0, r5
    1648:	mov	r1, r4
    164c:	bl	c98 <sendto_match_servs@plt>
    1650:	sub	sp, fp, #24
    1654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1658:	.word	0x00011abc
    165c:	.word	0x00000d37
    1660:	.word	0x00011aa0
    1664:	.word	0x00000d12
    1668:	.word	0x00011b14
    166c:	.word	0x00000da1

00001670 <cluster_xline>:
    1670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1674:	add	fp, sp, #28
    1678:	sub	sp, sp, #36	; 0x24
    167c:	add	ip, sp, #24
    1680:	stm	ip, {r0, r2, r3}
    1684:	ldr	r0, [pc, #224]	; 176c <cluster_xline+0xfc>
    1688:	ldr	r0, [pc, r0]
    168c:	ldr	r4, [r0]
    1690:	cmp	r4, #0
    1694:	beq	1764 <cluster_xline+0xf4>
    1698:	mov	r6, r1
    169c:	ldr	r5, [pc, #204]	; 1770 <cluster_xline+0x100>
    16a0:	ldr	r5, [pc, r5]
    16a4:	ldr	r7, [sp, #28]
    16a8:	ldr	r8, [sp, #32]
    16ac:	ldr	sl, [sp, #24]
    16b0:	b	16c4 <cluster_xline+0x54>
    16b4:	bl	c98 <sendto_match_servs@plt>
    16b8:	ldr	r4, [r4, #8]
    16bc:	cmp	r4, #0
    16c0:	beq	1764 <cluster_xline+0xf4>
    16c4:	ldr	r9, [r4]
    16c8:	ldr	r0, [r9, #12]
    16cc:	cmp	r6, #0
    16d0:	beq	170c <cluster_xline+0x9c>
    16d4:	tst	r0, #16
    16d8:	beq	16b8 <cluster_xline+0x48>
    16dc:	ldr	r2, [r5]
    16e0:	ldr	r1, [r9, #8]
    16e4:	ldr	r0, [pc, #152]	; 1784 <cluster_xline+0x114>
    16e8:	add	r0, pc, r0
    16ec:	stm	sp, {r0, r1, r6}
    16f0:	ldr	r0, [sp, #28]
    16f4:	str	r0, [sp, #12]
    16f8:	ldr	r0, [sp, #32]
    16fc:	str	r0, [sp, #16]
    1700:	ldr	r0, [sp, #24]
    1704:	mov	r3, #0
    1708:	b	16b4 <cluster_xline+0x44>
    170c:	tst	r0, #32
    1710:	beq	16b8 <cluster_xline+0x48>
    1714:	ldr	r0, [pc, #88]	; 1774 <cluster_xline+0x104>
    1718:	ldr	r0, [pc, r0]
    171c:	ldr	r2, [r0]
    1720:	ldr	r1, [r9, #8]
    1724:	ldr	r0, [pc, #76]	; 1778 <cluster_xline+0x108>
    1728:	add	r0, pc, r0
    172c:	stm	sp, {r0, r1, r7, r8}
    1730:	mov	r0, sl
    1734:	mov	r3, #0
    1738:	bl	c98 <sendto_match_servs@plt>
    173c:	ldr	r0, [pc, #56]	; 177c <cluster_xline+0x10c>
    1740:	ldr	r0, [pc, r0]
    1744:	ldr	r3, [r0]
    1748:	ldr	r2, [r5]
    174c:	ldr	r1, [r9, #8]
    1750:	ldr	r0, [pc, #40]	; 1780 <cluster_xline+0x110>
    1754:	add	r0, pc, r0
    1758:	stm	sp, {r0, r1, r7, r8}
    175c:	mov	r0, sl
    1760:	b	16b4 <cluster_xline+0x44>
    1764:	sub	sp, fp, #28
    1768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    176c:	.word	0x00011a34
    1770:	.word	0x00011a28
    1774:	.word	0x00011994
    1778:	.word	0x00000c55
    177c:	.word	0x0001196c
    1780:	.word	0x00000c3b
    1784:	.word	0x00000c5e

00001788 <valid_xline>:
    1788:	push	{r4, sl, fp, lr}
    178c:	add	fp, sp, #8
    1790:	sub	sp, sp, #8
    1794:	mov	r4, r0
    1798:	cmp	r2, #0
    179c:	beq	17cc <valid_xline+0x44>
    17a0:	ldrb	r0, [r2]
    17a4:	cmp	r0, #0
    17a8:	beq	17cc <valid_xline+0x44>
    17ac:	mov	r0, r1
    17b0:	bl	e00 <valid_wild_card_simple@plt>
    17b4:	mov	r1, r0
    17b8:	mov	r0, #1
    17bc:	cmp	r1, #0
    17c0:	beq	1808 <valid_xline+0x80>
    17c4:	sub	sp, fp, #8
    17c8:	pop	{r4, sl, fp, pc}
    17cc:	ldr	r2, [pc, #164]	; 1878 <valid_xline+0xf0>
    17d0:	ldr	r2, [pc, r2]
    17d4:	ldr	r0, [r4, #36]	; 0x24
    17d8:	ldrh	r1, [r0, #80]	; 0x50
    17dc:	cmp	r1, #32
    17e0:	bne	1800 <valid_xline+0x78>
    17e4:	ldrb	r1, [r0, #396]	; 0x18c
    17e8:	cmp	r1, #0
    17ec:	beq	1828 <valid_xline+0xa0>
    17f0:	ldrb	r1, [r2, #396]!	; 0x18c
    17f4:	cmp	r1, #0
    17f8:	subeq	r2, r2, #308	; 0x134
    17fc:	b	182c <valid_xline+0xa4>
    1800:	add	r2, r2, #88	; 0x58
    1804:	b	184c <valid_xline+0xc4>
    1808:	ldr	r0, [pc, #116]	; 1884 <valid_xline+0xfc>
    180c:	ldr	r0, [pc, r0]
    1810:	ldr	r2, [r0, #240]	; 0xf0
    1814:	ldr	r1, [pc, #108]	; 1888 <valid_xline+0x100>
    1818:	add	r1, pc, r1
    181c:	mov	r0, r4
    1820:	bl	ddc <sendto_one_notice@plt>
    1824:	b	186c <valid_xline+0xe4>
    1828:	add	r2, r2, #88	; 0x58
    182c:	ldrb	r0, [r0, #396]	; 0x18c
    1830:	cmp	r0, #0
    1834:	beq	184c <valid_xline+0xc4>
    1838:	mov	r3, r4
    183c:	ldrb	r0, [r3, #396]!	; 0x18c
    1840:	cmp	r0, #0
    1844:	subeq	r3, r3, #308	; 0x134
    1848:	b	1850 <valid_xline+0xc8>
    184c:	add	r3, r4, #88	; 0x58
    1850:	ldr	r0, [pc, #36]	; 187c <valid_xline+0xf4>
    1854:	add	r0, pc, r0
    1858:	str	r0, [sp]
    185c:	ldr	r1, [pc, #28]	; 1880 <valid_xline+0xf8>
    1860:	add	r1, pc, r1
    1864:	mov	r0, r4
    1868:	bl	cb0 <sendto_one@plt>
    186c:	mov	r0, #0
    1870:	sub	sp, fp, #8
    1874:	pop	{r4, sl, fp, pc}
    1878:	.word	0x000118f4
    187c:	.word	0x00000a1a
    1880:	.word	0x00000a58
    1884:	.word	0x000118c0
    1888:	.word	0x00000b91

0000188c <apply_xline>:
    188c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1890:	add	fp, sp, #24
    1894:	sub	sp, sp, #32
    1898:	mov	r6, r3
    189c:	mov	r9, r2
    18a0:	mov	r8, r1
    18a4:	mov	r5, r0
    18a8:	bl	c80 <make_conf@plt>
    18ac:	mov	r4, r0
    18b0:	mov	r0, #128	; 0x80
    18b4:	str	r0, [r4]
    18b8:	bl	c8c <rb_current_time@plt>
    18bc:	str	r0, [r4, #40]	; 0x28
    18c0:	mov	r0, r8
    18c4:	bl	1b98 <rb_strdup>
    18c8:	str	r0, [r4, #16]
    18cc:	mov	r0, r9
    18d0:	bl	1b98 <rb_strdup>
    18d4:	str	r0, [r4, #20]
    18d8:	ldr	r0, [r4, #16]
    18dc:	bl	dac <collapse@plt>
    18e0:	mov	r0, r5
    18e4:	bl	d10 <get_oper_name@plt>
    18e8:	bl	d34 <operhash_add@plt>
    18ec:	str	r0, [r4, #12]
    18f0:	ldr	r0, [fp, #8]
    18f4:	cmp	r0, #0
    18f8:	beq	1a1c <apply_xline+0x190>
    18fc:	ldr	r0, [r4, #4]
    1900:	orr	r0, r0, #8912896	; 0x880000
    1904:	str	r0, [r4, #4]
    1908:	bl	c8c <rb_current_time@plt>
    190c:	add	r0, r0, r6
    1910:	str	r0, [r4, #44]	; 0x2c
    1914:	str	r0, [r4, #36]	; 0x24
    1918:	mov	r0, r4
    191c:	bl	cbc <replace_old_ban@plt>
    1920:	bl	d7c <rb_make_rb_dlink_node@plt>
    1924:	mov	r1, r0
    1928:	ldr	r2, [pc, #560]	; 1b60 <apply_xline+0x2d4>
    192c:	ldr	r2, [pc, r2]
    1930:	mov	r0, r4
    1934:	bl	1bc8 <rb_dlinkAdd>
    1938:	mov	r0, r5
    193c:	bl	d10 <get_oper_name@plt>
    1940:	mov	r3, r0
    1944:	ldr	r0, [r4, #16]
    1948:	movw	r1, #34953	; 0x8889
    194c:	movt	r1, #34952	; 0x8888
    1950:	smmla	r1, r6, r1, r6
    1954:	asr	r2, r1, #5
    1958:	add	r6, r2, r1, lsr #31
    195c:	str	r6, [sp]
    1960:	stmib	sp, {r0, r9}
    1964:	ldr	r2, [pc, #504]	; 1b64 <apply_xline+0x2d8>
    1968:	add	r2, pc, r2
    196c:	mov	r0, #256	; 0x100
    1970:	mov	r1, #0
    1974:	bl	ce0 <sendto_realops_snomask@plt>
    1978:	mov	r0, r5
    197c:	bl	d10 <get_oper_name@plt>
    1980:	mov	r2, r0
    1984:	stm	sp, {r8, r9}
    1988:	ldr	r1, [pc, #472]	; 1b68 <apply_xline+0x2dc>
    198c:	add	r1, pc, r1
    1990:	mov	r0, #7
    1994:	mov	r3, r6
    1998:	bl	da0 <ilog@plt>
    199c:	ldr	r3, [r4, #16]
    19a0:	ldr	r1, [pc, #452]	; 1b6c <apply_xline+0x2e0>
    19a4:	add	r1, pc, r1
    19a8:	mov	r0, r5
    19ac:	mov	r2, r6
    19b0:	bl	ddc <sendto_one_notice@plt>
    19b4:	ldr	r0, [pc, #436]	; 1b70 <apply_xline+0x2e4>
    19b8:	ldr	r0, [pc, r0]
    19bc:	ldr	r0, [r0]
    19c0:	ldr	r1, [pc, #428]	; 1b74 <apply_xline+0x2e8>
    19c4:	ldr	r1, [pc, r1]
    19c8:	ldr	r1, [r1]
    19cc:	ldr	r2, [r4, #16]
    19d0:	add	r7, r4, #36	; 0x24
    19d4:	ldm	r7, {r3, r6, r7}
    19d8:	add	r5, r5, #396	; 0x18c
    19dc:	ldr	ip, [pc, #404]	; 1b78 <apply_xline+0x2ec>
    19e0:	add	ip, pc, ip
    19e4:	sub	r7, r7, r6
    19e8:	sub	r3, r3, r6
    19ec:	str	ip, [sp]
    19f0:	str	r5, [sp, #4]
    19f4:	str	r2, [sp, #8]
    19f8:	str	r6, [sp, #12]
    19fc:	add	r2, sp, #16
    1a00:	stm	r2, {r3, r7, r9}
    1a04:	orr	r2, r0, r1
    1a08:	mov	r0, #0
    1a0c:	mov	r1, #0
    1a10:	mov	r3, #0
    1a14:	bl	d4c <sendto_server@plt>
    1a18:	b	1b3c <apply_xline+0x2b0>
    1a1c:	cmp	r6, #1
    1a20:	blt	1aac <apply_xline+0x220>
    1a24:	bl	c8c <rb_current_time@plt>
    1a28:	add	r0, r0, r6
    1a2c:	str	r0, [r4, #36]	; 0x24
    1a30:	mov	r0, r5
    1a34:	bl	d10 <get_oper_name@plt>
    1a38:	mov	r3, r0
    1a3c:	ldr	r0, [r4, #16]
    1a40:	movw	r1, #34953	; 0x8889
    1a44:	movt	r1, #34952	; 0x8888
    1a48:	umull	r1, r2, r6, r1
    1a4c:	lsr	r6, r2, #5
    1a50:	str	r6, [sp]
    1a54:	stmib	sp, {r0, r9}
    1a58:	ldr	r2, [pc, #284]	; 1b7c <apply_xline+0x2f0>
    1a5c:	add	r2, pc, r2
    1a60:	mov	r0, #256	; 0x100
    1a64:	mov	r1, #0
    1a68:	bl	ce0 <sendto_realops_snomask@plt>
    1a6c:	mov	r0, r5
    1a70:	bl	d10 <get_oper_name@plt>
    1a74:	mov	r2, r0
    1a78:	stm	sp, {r8, r9}
    1a7c:	ldr	r1, [pc, #252]	; 1b80 <apply_xline+0x2f4>
    1a80:	add	r1, pc, r1
    1a84:	mov	r0, #7
    1a88:	mov	r3, r6
    1a8c:	bl	da0 <ilog@plt>
    1a90:	ldr	r3, [r4, #16]
    1a94:	ldr	r1, [pc, #232]	; 1b84 <apply_xline+0x2f8>
    1a98:	add	r1, pc, r1
    1a9c:	mov	r0, r5
    1aa0:	mov	r2, r6
    1aa4:	bl	ddc <sendto_one_notice@plt>
    1aa8:	b	1b3c <apply_xline+0x2b0>
    1aac:	mov	r0, r5
    1ab0:	bl	d10 <get_oper_name@plt>
    1ab4:	mov	r3, r0
    1ab8:	ldr	r0, [r4, #16]
    1abc:	ldr	r1, [r4, #20]
    1ac0:	stm	sp, {r0, r1}
    1ac4:	mov	r6, #0
    1ac8:	ldr	r2, [pc, #184]	; 1b88 <apply_xline+0x2fc>
    1acc:	add	r2, pc, r2
    1ad0:	mov	r0, #256	; 0x100
    1ad4:	mov	r1, #0
    1ad8:	bl	ce0 <sendto_realops_snomask@plt>
    1adc:	ldr	r2, [r4, #16]
    1ae0:	ldr	r3, [r4, #20]
    1ae4:	ldr	r1, [pc, #160]	; 1b8c <apply_xline+0x300>
    1ae8:	add	r1, pc, r1
    1aec:	mov	r0, r5
    1af0:	bl	ddc <sendto_one_notice@plt>
    1af4:	ldr	r2, [r4, #16]
    1af8:	ldr	r0, [r4, #20]
    1afc:	stm	sp, {r0, r6}
    1b00:	str	r6, [sp, #8]
    1b04:	mov	r0, #2
    1b08:	mov	r1, r5
    1b0c:	mov	r3, #0
    1b10:	bl	cec <bandb_add@plt>
    1b14:	mov	r0, r5
    1b18:	bl	d10 <get_oper_name@plt>
    1b1c:	mov	r2, r0
    1b20:	ldr	r0, [r4, #20]
    1b24:	str	r0, [sp]
    1b28:	ldr	r1, [pc, #96]	; 1b90 <apply_xline+0x304>
    1b2c:	add	r1, pc, r1
    1b30:	mov	r0, #7
    1b34:	mov	r3, r8
    1b38:	bl	da0 <ilog@plt>
    1b3c:	bl	d7c <rb_make_rb_dlink_node@plt>
    1b40:	mov	r1, r0
    1b44:	ldr	r2, [pc, #72]	; 1b94 <apply_xline+0x308>
    1b48:	ldr	r2, [pc, r2]
    1b4c:	mov	r0, r4
    1b50:	bl	1bc8 <rb_dlinkAdd>
    1b54:	sub	sp, fp, #24
    1b58:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1b5c:	b	d04 <check_xlines@plt>
    1b60:	.word	0x00011778
    1b64:	.word	0x00000a84
    1b68:	.word	0x00000a8d
    1b6c:	.word	0x00000a83
    1b70:	.word	0x000116fc
    1b74:	.word	0x000116ec
    1b78:	.word	0x00000a69
    1b7c:	.word	0x00000a0c
    1b80:	.word	0x00000999
    1b84:	.word	0x00000a00
    1b88:	.word	0x000009f1
    1b8c:	.word	0x000009f3
    1b90:	.word	0x000009cb
    1b94:	.word	0x00011560

00001b98 <rb_strdup>:
    1b98:	push	{r4, sl, fp, lr}
    1b9c:	add	fp, sp, #8
    1ba0:	mov	r4, r0
    1ba4:	bl	d88 <strlen@plt>
    1ba8:	add	r0, r0, #1
    1bac:	bl	d58 <malloc@plt>
    1bb0:	cmp	r0, #0
    1bb4:	beq	1bc4 <rb_strdup+0x2c>
    1bb8:	mov	r1, r4
    1bbc:	pop	{r4, sl, fp, lr}
    1bc0:	b	d40 <strcpy@plt>
    1bc4:	bl	cc8 <rb_outofmemory@plt>

00001bc8 <rb_dlinkAdd>:
    1bc8:	push	{fp, lr}
    1bcc:	mov	fp, sp
    1bd0:	cmp	r0, #0
    1bd4:	beq	1c34 <rb_dlinkAdd+0x6c>
    1bd8:	cmp	r1, #0
    1bdc:	beq	1c54 <rb_dlinkAdd+0x8c>
    1be0:	cmp	r2, #0
    1be4:	beq	1c74 <rb_dlinkAdd+0xac>
    1be8:	mov	r3, #0
    1bec:	stm	r1, {r0, r3}
    1bf0:	ldr	r0, [r2]
    1bf4:	str	r0, [r1, #8]
    1bf8:	ldr	r0, [r2]
    1bfc:	cmp	r0, #0
    1c00:	beq	1c10 <rb_dlinkAdd+0x48>
    1c04:	add	r0, r0, #4
    1c08:	str	r1, [r0]
    1c0c:	b	1c20 <rb_dlinkAdd+0x58>
    1c10:	mov	r0, r2
    1c14:	ldr	r3, [r0, #4]!
    1c18:	cmp	r3, #0
    1c1c:	streq	r1, [r0]
    1c20:	str	r1, [r2]
    1c24:	ldr	r0, [r2, #8]
    1c28:	add	r0, r0, #1
    1c2c:	str	r0, [r2, #8]
    1c30:	pop	{fp, pc}
    1c34:	ldr	r0, [pc, #88]	; 1c94 <rb_dlinkAdd+0xcc>
    1c38:	add	r0, pc, r0
    1c3c:	ldr	r1, [pc, #84]	; 1c98 <rb_dlinkAdd+0xd0>
    1c40:	add	r1, pc, r1
    1c44:	ldr	r3, [pc, #80]	; 1c9c <rb_dlinkAdd+0xd4>
    1c48:	add	r3, pc, r3
    1c4c:	mov	r2, #143	; 0x8f
    1c50:	bl	e30 <__assert_fail@plt>
    1c54:	ldr	r0, [pc, #68]	; 1ca0 <rb_dlinkAdd+0xd8>
    1c58:	add	r0, pc, r0
    1c5c:	ldr	r1, [pc, #64]	; 1ca4 <rb_dlinkAdd+0xdc>
    1c60:	add	r1, pc, r1
    1c64:	ldr	r3, [pc, #60]	; 1ca8 <rb_dlinkAdd+0xe0>
    1c68:	add	r3, pc, r3
    1c6c:	mov	r2, #144	; 0x90
    1c70:	bl	e30 <__assert_fail@plt>
    1c74:	ldr	r0, [pc, #48]	; 1cac <rb_dlinkAdd+0xe4>
    1c78:	add	r0, pc, r0
    1c7c:	ldr	r1, [pc, #44]	; 1cb0 <rb_dlinkAdd+0xe8>
    1c80:	add	r1, pc, r1
    1c84:	ldr	r3, [pc, #40]	; 1cb4 <rb_dlinkAdd+0xec>
    1c88:	add	r3, pc, r3
    1c8c:	mov	r2, #145	; 0x91
    1c90:	bl	e30 <__assert_fail@plt>
    1c94:	.word	0x000008cc
    1c98:	.word	0x000008d1
    1c9c:	.word	0x000008e5
    1ca0:	.word	0x00000910
    1ca4:	.word	0x000008b1
    1ca8:	.word	0x000008c5
    1cac:	.word	0x000008fa
    1cb0:	.word	0x00000891
    1cb4:	.word	0x000008a5

00001cb8 <handle_remote_xline>:
    1cb8:	push	{r4, r5, r6, r7, fp, lr}
    1cbc:	add	fp, sp, #16
    1cc0:	sub	sp, sp, #8
    1cc4:	mov	r6, r3
    1cc8:	mov	r4, r2
    1ccc:	mov	r7, r1
    1cd0:	mov	r5, r0
    1cd4:	mov	r3, #32
    1cd8:	cmp	r1, #0
    1cdc:	movwgt	r3, #16
    1ce0:	ldr	r2, [r0, #32]
    1ce4:	add	r0, r0, #152	; 0x98
    1ce8:	add	r1, r5, #163	; 0xa3
    1cec:	add	r2, r2, #88	; 0x58
    1cf0:	bl	e0c <find_shared_conf@plt>
    1cf4:	cmp	r0, #0
    1cf8:	beq	1d68 <handle_remote_xline+0xb0>
    1cfc:	mov	r0, r5
    1d00:	mov	r1, r4
    1d04:	mov	r2, r6
    1d08:	bl	1788 <valid_xline>
    1d0c:	cmp	r0, #0
    1d10:	beq	1d68 <handle_remote_xline+0xb0>
    1d14:	mov	r0, r4
    1d18:	bl	d94 <find_xline_mask@plt>
    1d1c:	cmp	r0, #0
    1d20:	beq	1d4c <handle_remote_xline+0x94>
    1d24:	ldr	r3, [r0, #16]
    1d28:	ldr	r0, [r0, #20]
    1d2c:	str	r0, [sp]
    1d30:	ldr	r1, [pc, #56]	; 1d70 <handle_remote_xline+0xb8>
    1d34:	add	r1, pc, r1
    1d38:	mov	r0, r5
    1d3c:	mov	r2, r4
    1d40:	bl	ddc <sendto_one_notice@plt>
    1d44:	sub	sp, fp, #16
    1d48:	pop	{r4, r5, r6, r7, fp, pc}
    1d4c:	mov	r0, #0
    1d50:	str	r0, [sp]
    1d54:	mov	r0, r5
    1d58:	mov	r1, r4
    1d5c:	mov	r2, r6
    1d60:	mov	r3, r7
    1d64:	bl	188c <apply_xline>
    1d68:	sub	sp, fp, #16
    1d6c:	pop	{r4, r5, r6, r7, fp, pc}
    1d70:	.word	0x000005b9

00001d74 <remove_xline>:
    1d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d78:	add	fp, sp, #28
    1d7c:	sub	sp, sp, #28
    1d80:	mov	r5, r2
    1d84:	mov	r6, r1
    1d88:	mov	r8, r0
    1d8c:	ldr	r0, [pc, #812]	; 20c0 <remove_xline+0x34c>
    1d90:	ldr	r0, [pc, r0]
    1d94:	ldr	r7, [r0]
    1d98:	cmp	r7, #0
    1d9c:	beq	1dc4 <remove_xline+0x50>
    1da0:	ldr	r4, [r7]
    1da4:	ldr	r0, [r4, #16]
    1da8:	mov	r1, r6
    1dac:	bl	e24 <irccmp@plt>
    1db0:	cmp	r0, #0
    1db4:	beq	1e24 <remove_xline+0xb0>
    1db8:	ldr	r7, [r7, #8]
    1dbc:	cmp	r7, #0
    1dc0:	bne	1da0 <remove_xline+0x2c>
    1dc4:	ldr	r0, [pc, #828]	; 2108 <remove_xline+0x394>
    1dc8:	ldr	r0, [pc, r0]
    1dcc:	ldr	r0, [r0, #8]
    1dd0:	cmp	r0, #0
    1dd4:	cmpne	r5, #0
    1dd8:	beq	1e08 <remove_xline+0x94>
    1ddc:	ldr	r0, [pc, #808]	; 210c <remove_xline+0x398>
    1de0:	ldr	r0, [pc, r0]
    1de4:	ldr	r3, [r0]
    1de8:	ldr	r0, [pc, #800]	; 2110 <remove_xline+0x39c>
    1dec:	add	r0, pc, r0
    1df0:	stm	sp, {r0, r6}
    1df4:	ldr	r1, [pc, #792]	; 2114 <remove_xline+0x3a0>
    1df8:	add	r1, pc, r1
    1dfc:	mov	r0, r8
    1e00:	mov	r2, #64	; 0x40
    1e04:	bl	d28 <cluster_generic@plt>
    1e08:	ldr	r1, [pc, #776]	; 2118 <remove_xline+0x3a4>
    1e0c:	add	r1, pc, r1
    1e10:	mov	r0, r8
    1e14:	mov	r2, r6
    1e18:	sub	sp, fp, #28
    1e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e20:	b	ddc <sendto_one_notice@plt>
    1e24:	ldr	r0, [r4, #44]	; 0x2c
    1e28:	cmp	r0, #0
    1e2c:	beq	1f6c <remove_xline+0x1f8>
    1e30:	cmp	r5, #0
    1e34:	beq	2014 <remove_xline+0x2a0>
    1e38:	mov	r0, r4
    1e3c:	bl	211c <rb_dlinkFind>
    1e40:	cmp	r0, #0
    1e44:	beq	20b8 <remove_xline+0x344>
    1e48:	mov	sl, r0
    1e4c:	ldr	r1, [pc, #628]	; 20c8 <remove_xline+0x354>
    1e50:	add	r1, pc, r1
    1e54:	mov	r0, r8
    1e58:	mov	r2, r6
    1e5c:	bl	ddc <sendto_one_notice@plt>
    1e60:	mov	r0, r8
    1e64:	bl	d10 <get_oper_name@plt>
    1e68:	mov	r3, r0
    1e6c:	str	r6, [sp]
    1e70:	ldr	r2, [pc, #596]	; 20cc <remove_xline+0x358>
    1e74:	add	r2, pc, r2
    1e78:	mov	r0, #256	; 0x100
    1e7c:	mov	r1, #0
    1e80:	bl	ce0 <sendto_realops_snomask@plt>
    1e84:	mov	r0, r8
    1e88:	bl	d10 <get_oper_name@plt>
    1e8c:	mov	r2, r0
    1e90:	ldr	r1, [pc, #568]	; 20d0 <remove_xline+0x35c>
    1e94:	add	r1, pc, r1
    1e98:	mov	r0, #7
    1e9c:	mov	r3, r6
    1ea0:	bl	da0 <ilog@plt>
    1ea4:	bl	c8c <rb_current_time@plt>
    1ea8:	mov	r9, r0
    1eac:	ldr	r0, [r4, #12]
    1eb0:	ldr	r1, [r4, #40]	; 0x28
    1eb4:	cmp	r1, r9
    1eb8:	mov	r2, r9
    1ebc:	addge	r2, r1, #1
    1ec0:	str	r2, [r4, #36]	; 0x24
    1ec4:	str	r2, [r4, #40]	; 0x28
    1ec8:	bl	cd4 <operhash_delete@plt>
    1ecc:	mov	r0, r8
    1ed0:	bl	d10 <get_oper_name@plt>
    1ed4:	bl	d34 <operhash_add@plt>
    1ed8:	str	r0, [r4, #12]
    1edc:	ldr	r0, [r4, #4]
    1ee0:	ldr	r1, [r4, #16]
    1ee4:	ldr	r2, [r4, #40]	; 0x28
    1ee8:	ldr	r3, [r4, #44]	; 0x2c
    1eec:	orr	r0, r0, #8912896	; 0x880000
    1ef0:	str	r0, [r4, #4]
    1ef4:	ldr	r0, [pc, #472]	; 20d4 <remove_xline+0x360>
    1ef8:	ldr	r0, [pc, r0]
    1efc:	ldr	r0, [r0]
    1f00:	ldr	r5, [pc, #464]	; 20d8 <remove_xline+0x364>
    1f04:	ldr	r5, [pc, r5]
    1f08:	ldr	r5, [r5]
    1f0c:	sub	r3, r3, r2
    1f10:	add	r7, r8, #396	; 0x18c
    1f14:	ldr	r6, [pc, #448]	; 20dc <remove_xline+0x368>
    1f18:	add	r6, pc, r6
    1f1c:	stm	sp, {r6, r7}
    1f20:	str	r1, [sp, #8]
    1f24:	str	r2, [sp, #12]
    1f28:	mov	r1, #0
    1f2c:	str	r1, [sp, #16]
    1f30:	str	r3, [sp, #20]
    1f34:	orr	r2, r5, r0
    1f38:	mov	r0, #0
    1f3c:	mov	r1, #0
    1f40:	mov	r3, #0
    1f44:	bl	d4c <sendto_server@plt>
    1f48:	ldr	r0, [r4, #16]
    1f4c:	mov	r1, #0
    1f50:	bl	dd0 <remove_reject_mask@plt>
    1f54:	mov	r0, r4
    1f58:	mov	r1, sl
    1f5c:	mov	r2, r9
    1f60:	sub	sp, fp, #28
    1f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f68:	b	cf8 <deactivate_conf@plt>
    1f6c:	ldr	r0, [pc, #364]	; 20e0 <remove_xline+0x36c>
    1f70:	ldr	r0, [pc, r0]
    1f74:	ldr	r0, [r0, #8]
    1f78:	cmp	r0, #0
    1f7c:	cmpne	r5, #0
    1f80:	beq	1fb0 <remove_xline+0x23c>
    1f84:	ldr	r0, [pc, #344]	; 20e4 <remove_xline+0x370>
    1f88:	ldr	r0, [pc, r0]
    1f8c:	ldr	r3, [r0]
    1f90:	ldr	r0, [pc, #336]	; 20e8 <remove_xline+0x374>
    1f94:	add	r0, pc, r0
    1f98:	stm	sp, {r0, r6}
    1f9c:	ldr	r1, [pc, #328]	; 20ec <remove_xline+0x378>
    1fa0:	add	r1, pc, r1
    1fa4:	mov	r0, r8
    1fa8:	mov	r2, #64	; 0x40
    1fac:	bl	d28 <cluster_generic@plt>
    1fb0:	ldr	r0, [r4, #36]	; 0x24
    1fb4:	cmp	r0, #0
    1fb8:	beq	2020 <remove_xline+0x2ac>
    1fbc:	ldr	r1, [pc, #312]	; 20fc <remove_xline+0x388>
    1fc0:	add	r1, pc, r1
    1fc4:	mov	r0, r8
    1fc8:	mov	r2, r6
    1fcc:	bl	ddc <sendto_one_notice@plt>
    1fd0:	mov	r0, r8
    1fd4:	bl	d10 <get_oper_name@plt>
    1fd8:	mov	r3, r0
    1fdc:	str	r6, [sp]
    1fe0:	ldr	r2, [pc, #280]	; 2100 <remove_xline+0x38c>
    1fe4:	add	r2, pc, r2
    1fe8:	mov	r0, #256	; 0x100
    1fec:	mov	r1, #0
    1ff0:	bl	ce0 <sendto_realops_snomask@plt>
    1ff4:	mov	r0, r8
    1ff8:	bl	d10 <get_oper_name@plt>
    1ffc:	mov	r2, r0
    2000:	ldr	r1, [pc, #252]	; 2104 <remove_xline+0x390>
    2004:	add	r1, pc, r1
    2008:	mov	r0, #7
    200c:	mov	r3, r6
    2010:	b	2088 <remove_xline+0x314>
    2014:	ldr	r1, [pc, #168]	; 20c4 <remove_xline+0x350>
    2018:	add	r1, pc, r1
    201c:	b	1e10 <remove_xline+0x9c>
    2020:	ldr	r1, [r4, #16]
    2024:	mov	r0, #2
    2028:	mov	r2, #0
    202c:	bl	de8 <bandb_del@plt>
    2030:	ldr	r2, [r4, #16]
    2034:	ldr	r1, [pc, #180]	; 20f0 <remove_xline+0x37c>
    2038:	add	r1, pc, r1
    203c:	mov	r0, r8
    2040:	bl	ddc <sendto_one_notice@plt>
    2044:	mov	r0, r8
    2048:	bl	d10 <get_oper_name@plt>
    204c:	mov	r3, r0
    2050:	ldr	r0, [r4, #16]
    2054:	str	r0, [sp]
    2058:	ldr	r2, [pc, #148]	; 20f4 <remove_xline+0x380>
    205c:	add	r2, pc, r2
    2060:	mov	r0, #256	; 0x100
    2064:	mov	r1, #0
    2068:	bl	ce0 <sendto_realops_snomask@plt>
    206c:	mov	r0, r8
    2070:	bl	d10 <get_oper_name@plt>
    2074:	mov	r2, r0
    2078:	ldr	r3, [r4, #16]
    207c:	ldr	r1, [pc, #116]	; 20f8 <remove_xline+0x384>
    2080:	add	r1, pc, r1
    2084:	mov	r0, #7
    2088:	bl	da0 <ilog@plt>
    208c:	ldr	r0, [r4, #16]
    2090:	mov	r1, #0
    2094:	bl	dd0 <remove_reject_mask@plt>
    2098:	mov	r0, r4
    209c:	bl	d70 <free_conf@plt>
    20a0:	mov	r0, r7
    20a4:	bl	219c <rb_dlinkDelete>
    20a8:	mov	r0, r7
    20ac:	sub	sp, fp, #28
    20b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20b4:	b	d1c <rb_free_rb_dlink_node@plt>
    20b8:	sub	sp, fp, #28
    20bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20c0:	.word	0x00011318
    20c4:	.word	0x00000567
    20c8:	.word	0x00000763
    20cc:	.word	0x0000075b
    20d0:	.word	0x00000766
    20d4:	.word	0x000111b8
    20d8:	.word	0x000111b0
    20dc:	.word	0x000006eb
    20e0:	.word	0x0001114c
    20e4:	.word	0x00011124
    20e8:	.word	0x00000379
    20ec:	.word	0x000002cc
    20f0:	.word	0x0000057b
    20f4:	.word	0x000005c5
    20f8:	.word	0x0000057a
    20fc:	.word	0x000005f3
    2100:	.word	0x00000661
    2104:	.word	0x000005f6
    2108:	.word	0x000112f4
    210c:	.word	0x000112cc
    2110:	.word	0x00000521
    2114:	.word	0x00000474
    2118:	.word	0x00000867

0000211c <rb_dlinkFind>:
    211c:	push	{fp, lr}
    2120:	mov	fp, sp
    2124:	cmp	r0, #0
    2128:	beq	216c <rb_dlinkFind+0x50>
    212c:	mov	r1, r0
    2130:	ldr	r0, [pc, #84]	; 218c <rb_dlinkFind+0x70>
    2134:	ldr	r0, [pc, r0]
    2138:	ldr	r2, [r0]
    213c:	mov	r0, #0
    2140:	cmp	r2, #0
    2144:	beq	2160 <rb_dlinkFind+0x44>
    2148:	ldr	r3, [r2]
    214c:	cmp	r3, r1
    2150:	beq	2164 <rb_dlinkFind+0x48>
    2154:	ldr	r2, [r2, #8]
    2158:	cmp	r2, #0
    215c:	bne	2148 <rb_dlinkFind+0x2c>
    2160:	pop	{fp, pc}
    2164:	mov	r0, r2
    2168:	pop	{fp, pc}
    216c:	ldr	r0, [pc, #28]	; 2190 <rb_dlinkFind+0x74>
    2170:	add	r0, pc, r0
    2174:	ldr	r1, [pc, #24]	; 2194 <rb_dlinkFind+0x78>
    2178:	add	r1, pc, r1
    217c:	ldr	r3, [pc, #20]	; 2198 <rb_dlinkFind+0x7c>
    2180:	add	r3, pc, r3
    2184:	movw	r2, #311	; 0x137
    2188:	bl	e30 <__assert_fail@plt>
    218c:	.word	0x00010f70
    2190:	.word	0x00000394
    2194:	.word	0x00000399
    2198:	.word	0x00000505

0000219c <rb_dlinkDelete>:
    219c:	push	{fp, lr}
    21a0:	mov	fp, sp
    21a4:	cmp	r0, #0
    21a8:	beq	21f8 <rb_dlinkDelete+0x5c>
    21ac:	ldr	ip, [pc, #100]	; 2218 <rb_dlinkDelete+0x7c>
    21b0:	ldr	ip, [pc, ip]
    21b4:	ldmib	r0, {r2, r3}
    21b8:	add	r1, r3, #4
    21bc:	cmp	r3, #0
    21c0:	addeq	r1, ip, #4
    21c4:	str	r2, [r1]
    21c8:	ldmib	r0, {r1, r2}
    21cc:	cmp	r1, #0
    21d0:	mov	r3, ip
    21d4:	addne	r3, r1, #8
    21d8:	str	r2, [r3]
    21dc:	mov	r1, #0
    21e0:	str	r1, [r0, #4]
    21e4:	str	r1, [r0, #8]
    21e8:	ldr	r0, [ip, #8]
    21ec:	sub	r0, r0, #1
    21f0:	str	r0, [ip, #8]
    21f4:	pop	{fp, pc}
    21f8:	ldr	r0, [pc, #28]	; 221c <rb_dlinkDelete+0x80>
    21fc:	add	r0, pc, r0
    2200:	ldr	r1, [pc, #24]	; 2220 <rb_dlinkDelete+0x84>
    2204:	add	r1, pc, r1
    2208:	ldr	r3, [pc, #20]	; 2224 <rb_dlinkDelete+0x88>
    220c:	add	r3, pc, r3
    2210:	mov	r2, #235	; 0xeb
    2214:	bl	e30 <__assert_fail@plt>
    2218:	.word	0x00010ef8
    221c:	.word	0x0000036c
    2220:	.word	0x0000030d
    2224:	.word	0x000004ae

00002228 <handle_remote_unxline>:
    2228:	push	{r4, r5, fp, lr}
    222c:	add	fp, sp, #8
    2230:	mov	r4, r1
    2234:	mov	r5, r0
    2238:	ldr	r2, [r0, #32]
    223c:	add	r0, r0, #152	; 0x98
    2240:	add	r1, r5, #163	; 0xa3
    2244:	add	r2, r2, #88	; 0x58
    2248:	mov	r3, #64	; 0x40
    224c:	bl	e0c <find_shared_conf@plt>
    2250:	cmp	r0, #0
    2254:	popeq	{r4, r5, fp, pc}
    2258:	mov	r0, r5
    225c:	mov	r1, r4
    2260:	mov	r2, #0
    2264:	pop	{r4, r5, fp, lr}
    2268:	b	1d74 <remove_xline>

Disassembly of section .fini:

0000226c <_fini>:
    226c:	push	{r3, lr}
    2270:	pop	{r3, pc}
