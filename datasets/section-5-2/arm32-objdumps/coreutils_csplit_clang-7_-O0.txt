
../repos/coreutils/src/csplit:     file format elf32-littlearm


Disassembly of section .init:

00011380 <.init>:
   11380:	push	{r3, lr}
   11384:	bl	1179c <__assert_fail@plt+0x48>
   11388:	pop	{r3, pc}

Disassembly of section .plt:

0001138c <pthread_mutex_unlock@plt-0x14>:
   1138c:	push	{lr}		; (str lr, [sp, #-4]!)
   11390:	ldr	lr, [pc, #4]	; 1139c <pthread_mutex_unlock@plt-0x4>
   11394:	add	lr, pc, lr
   11398:	ldr	pc, [lr, #8]!
   1139c:	andeq	ip, r3, r4, ror #24

000113a0 <pthread_mutex_unlock@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #60, 20	; 0x3c000
   113a8:	ldr	pc, [ip, #3172]!	; 0xc64

000113ac <fdopen@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #60, 20	; 0x3c000
   113b4:	ldr	pc, [ip, #3164]!	; 0xc5c

000113b8 <calloc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #60, 20	; 0x3c000
   113c0:	ldr	pc, [ip, #3156]!	; 0xc54

000113c4 <fputs_unlocked@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #60, 20	; 0x3c000
   113cc:	ldr	pc, [ip, #3148]!	; 0xc4c

000113d0 <wctype@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #60, 20	; 0x3c000
   113d8:	ldr	pc, [ip, #3140]!	; 0xc44

000113dc <raise@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #60, 20	; 0x3c000
   113e4:	ldr	pc, [ip, #3132]!	; 0xc3c

000113e8 <wcrtomb@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #60, 20	; 0x3c000
   113f0:	ldr	pc, [ip, #3124]!	; 0xc34

000113f4 <iswctype@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #60, 20	; 0x3c000
   113fc:	ldr	pc, [ip, #3116]!	; 0xc2c

00011400 <strcmp@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #60, 20	; 0x3c000
   11408:	ldr	pc, [ip, #3108]!	; 0xc24

0001140c <printf@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #60, 20	; 0x3c000
   11414:	ldr	pc, [ip, #3100]!	; 0xc1c

00011418 <read@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #60, 20	; 0x3c000
   11420:	ldr	pc, [ip, #3092]!	; 0xc14

00011424 <pthread_mutex_destroy@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #60, 20	; 0x3c000
   1142c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011430 <fflush@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #60, 20	; 0x3c000
   11438:	ldr	pc, [ip, #3076]!	; 0xc04

0001143c <sigprocmask@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #60, 20	; 0x3c000
   11444:	ldr	pc, [ip, #3068]!	; 0xbfc

00011448 <memmove@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #60, 20	; 0x3c000
   11450:	ldr	pc, [ip, #3060]!	; 0xbf4

00011454 <free@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #60, 20	; 0x3c000
   1145c:	ldr	pc, [ip, #3052]!	; 0xbec

00011460 <pthread_mutex_lock@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #60, 20	; 0x3c000
   11468:	ldr	pc, [ip, #3044]!	; 0xbe4

0001146c <_exit@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #60, 20	; 0x3c000
   11474:	ldr	pc, [ip, #3036]!	; 0xbdc

00011478 <memcpy@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #60, 20	; 0x3c000
   11480:	ldr	pc, [ip, #3028]!	; 0xbd4

00011484 <tolower@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #60, 20	; 0x3c000
   1148c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011490 <pthread_mutex_init@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #60, 20	; 0x3c000
   11498:	ldr	pc, [ip, #3012]!	; 0xbc4

0001149c <towlower@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #60, 20	; 0x3c000
   114a4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114a8 <mbsinit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #60, 20	; 0x3c000
   114b0:	ldr	pc, [ip, #2996]!	; 0xbb4

000114b4 <signal@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #60, 20	; 0x3c000
   114bc:	ldr	pc, [ip, #2988]!	; 0xbac

000114c0 <fwrite_unlocked@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #60, 20	; 0x3c000
   114c8:	ldr	pc, [ip, #2980]!	; 0xba4

000114cc <memcmp@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #60, 20	; 0x3c000
   114d4:	ldr	pc, [ip, #2972]!	; 0xb9c

000114d8 <unlink@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #60, 20	; 0x3c000
   114e0:	ldr	pc, [ip, #2964]!	; 0xb94

000114e4 <dup2@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #60, 20	; 0x3c000
   114ec:	ldr	pc, [ip, #2956]!	; 0xb8c

000114f0 <realloc@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #60, 20	; 0x3c000
   114f8:	ldr	pc, [ip, #2948]!	; 0xb84

000114fc <sigismember@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #60, 20	; 0x3c000
   11504:	ldr	pc, [ip, #2940]!	; 0xb7c

00011508 <textdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #60, 20	; 0x3c000
   11510:	ldr	pc, [ip, #2932]!	; 0xb74

00011514 <rawmemchr@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #60, 20	; 0x3c000
   1151c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011520 <iswprint@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #60, 20	; 0x3c000
   11528:	ldr	pc, [ip, #2916]!	; 0xb64

0001152c <sigaction@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #60, 20	; 0x3c000
   11534:	ldr	pc, [ip, #2908]!	; 0xb5c

00011538 <lseek64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #60, 20	; 0x3c000
   11540:	ldr	pc, [ip, #2900]!	; 0xb54

00011544 <__ctype_get_mb_cur_max@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #60, 20	; 0x3c000
   1154c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011550 <strcpy@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #60, 20	; 0x3c000
   11558:	ldr	pc, [ip, #2884]!	; 0xb44

0001155c <__fpending@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #60, 20	; 0x3c000
   11564:	ldr	pc, [ip, #2876]!	; 0xb3c

00011568 <ferror_unlocked@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #60, 20	; 0x3c000
   11570:	ldr	pc, [ip, #2868]!	; 0xb34

00011574 <mbrtowc@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #60, 20	; 0x3c000
   1157c:	ldr	pc, [ip, #2860]!	; 0xb2c

00011580 <error@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #60, 20	; 0x3c000
   11588:	ldr	pc, [ip, #2852]!	; 0xb24

0001158c <open64@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #60, 20	; 0x3c000
   11594:	ldr	pc, [ip, #2844]!	; 0xb1c

00011598 <malloc@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #60, 20	; 0x3c000
   115a0:	ldr	pc, [ip, #2836]!	; 0xb14

000115a4 <sigaddset@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #60, 20	; 0x3c000
   115ac:	ldr	pc, [ip, #2828]!	; 0xb0c

000115b0 <__libc_start_main@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #60, 20	; 0x3c000
   115b8:	ldr	pc, [ip, #2820]!	; 0xb04

000115bc <__freading@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #60, 20	; 0x3c000
   115c4:	ldr	pc, [ip, #2812]!	; 0xafc

000115c8 <__gmon_start__@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #60, 20	; 0x3c000
   115d0:	ldr	pc, [ip, #2804]!	; 0xaf4

000115d4 <getopt_long@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #60, 20	; 0x3c000
   115dc:	ldr	pc, [ip, #2796]!	; 0xaec

000115e0 <__ctype_b_loc@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #60, 20	; 0x3c000
   115e8:	ldr	pc, [ip, #2788]!	; 0xae4

000115ec <exit@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #60, 20	; 0x3c000
   115f4:	ldr	pc, [ip, #2780]!	; 0xadc

000115f8 <gettext@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #60, 20	; 0x3c000
   11600:	ldr	pc, [ip, #2772]!	; 0xad4

00011604 <strlen@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #60, 20	; 0x3c000
   1160c:	ldr	pc, [ip, #2764]!	; 0xacc

00011610 <strchr@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #60, 20	; 0x3c000
   11618:	ldr	pc, [ip, #2756]!	; 0xac4

0001161c <fprintf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #60, 20	; 0x3c000
   11624:	ldr	pc, [ip, #2748]!	; 0xabc

00011628 <__errno_location@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #60, 20	; 0x3c000
   11630:	ldr	pc, [ip, #2740]!	; 0xab4

00011634 <iswalnum@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #60, 20	; 0x3c000
   1163c:	ldr	pc, [ip, #2732]!	; 0xaac

00011640 <snprintf@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #60, 20	; 0x3c000
   11648:	ldr	pc, [ip, #2724]!	; 0xaa4

0001164c <__cxa_atexit@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #60, 20	; 0x3c000
   11654:	ldr	pc, [ip, #2716]!	; 0xa9c

00011658 <memset@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #60, 20	; 0x3c000
   11660:	ldr	pc, [ip, #2708]!	; 0xa94

00011664 <btowc@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #60, 20	; 0x3c000
   1166c:	ldr	pc, [ip, #2700]!	; 0xa8c

00011670 <fileno@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #60, 20	; 0x3c000
   11678:	ldr	pc, [ip, #2692]!	; 0xa84

0001167c <strtoumax@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #60, 20	; 0x3c000
   11684:	ldr	pc, [ip, #2684]!	; 0xa7c

00011688 <strtoimax@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #60, 20	; 0x3c000
   11690:	ldr	pc, [ip, #2676]!	; 0xa74

00011694 <fclose@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #60, 20	; 0x3c000
   1169c:	ldr	pc, [ip, #2668]!	; 0xa6c

000116a0 <fseeko64@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #60, 20	; 0x3c000
   116a8:	ldr	pc, [ip, #2660]!	; 0xa64

000116ac <fcntl64@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #60, 20	; 0x3c000
   116b4:	ldr	pc, [ip, #2652]!	; 0xa5c

000116b8 <setlocale@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #60, 20	; 0x3c000
   116c0:	ldr	pc, [ip, #2644]!	; 0xa54

000116c4 <sigemptyset@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #60, 20	; 0x3c000
   116cc:	ldr	pc, [ip, #2636]!	; 0xa4c

000116d0 <toupper@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #60, 20	; 0x3c000
   116d8:	ldr	pc, [ip, #2628]!	; 0xa44

000116dc <strrchr@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #60, 20	; 0x3c000
   116e4:	ldr	pc, [ip, #2620]!	; 0xa3c

000116e8 <nl_langinfo@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #60, 20	; 0x3c000
   116f0:	ldr	pc, [ip, #2612]!	; 0xa34

000116f4 <sprintf@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #60, 20	; 0x3c000
   116fc:	ldr	pc, [ip, #2604]!	; 0xa2c

00011700 <fopen64@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #60, 20	; 0x3c000
   11708:	ldr	pc, [ip, #2596]!	; 0xa24

0001170c <bindtextdomain@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #60, 20	; 0x3c000
   11714:	ldr	pc, [ip, #2588]!	; 0xa1c

00011718 <towupper@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #60, 20	; 0x3c000
   11720:	ldr	pc, [ip, #2580]!	; 0xa14

00011724 <fputs@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #60, 20	; 0x3c000
   1172c:	ldr	pc, [ip, #2572]!	; 0xa0c

00011730 <strncmp@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #60, 20	; 0x3c000
   11738:	ldr	pc, [ip, #2564]!	; 0xa04

0001173c <abort@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #60, 20	; 0x3c000
   11744:	ldr	pc, [ip, #2556]!	; 0x9fc

00011748 <close@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #60, 20	; 0x3c000
   11750:	ldr	pc, [ip, #2548]!	; 0x9f4

00011754 <__assert_fail@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #60, 20	; 0x3c000
   1175c:	ldr	pc, [ip, #2540]!	; 0x9ec

Disassembly of section .text:

00011760 <.text>:
   11760:	mov	fp, #0
   11764:	mov	lr, #0
   11768:	pop	{r1}		; (ldr r1, [sp], #4)
   1176c:	mov	r2, sp
   11770:	push	{r2}		; (str r2, [sp, #-4]!)
   11774:	push	{r0}		; (str r0, [sp, #-4]!)
   11778:	ldr	ip, [pc, #16]	; 11790 <__assert_fail@plt+0x3c>
   1177c:	push	{ip}		; (str ip, [sp, #-4]!)
   11780:	ldr	r0, [pc, #12]	; 11794 <__assert_fail@plt+0x40>
   11784:	ldr	r3, [pc, #12]	; 11798 <__assert_fail@plt+0x44>
   11788:	bl	115b0 <__libc_start_main@plt>
   1178c:	bl	1173c <abort@plt>
   11790:	ldrdeq	ip, [r3], -r0
   11794:	andeq	r1, r1, r0, lsr #17
   11798:	andeq	ip, r3, r0, ror r6
   1179c:	ldr	r3, [pc, #20]	; 117b8 <__assert_fail@plt+0x64>
   117a0:	ldr	r2, [pc, #20]	; 117bc <__assert_fail@plt+0x68>
   117a4:	add	r3, pc, r3
   117a8:	ldr	r2, [r3, r2]
   117ac:	cmp	r2, #0
   117b0:	bxeq	lr
   117b4:	b	115c8 <__gmon_start__@plt>
   117b8:	andeq	ip, r3, r4, asr r8
   117bc:	andeq	r0, r0, ip, asr #2
   117c0:	ldr	r0, [pc, #24]	; 117e0 <__assert_fail@plt+0x8c>
   117c4:	ldr	r3, [pc, #24]	; 117e4 <__assert_fail@plt+0x90>
   117c8:	cmp	r3, r0
   117cc:	bxeq	lr
   117d0:	ldr	r3, [pc, #16]	; 117e8 <__assert_fail@plt+0x94>
   117d4:	cmp	r3, #0
   117d8:	bxeq	lr
   117dc:	bx	r3
   117e0:	andeq	lr, r4, r4, lsr #3
   117e4:	andeq	lr, r4, r4, lsr #3
   117e8:	andeq	r0, r0, r0
   117ec:	ldr	r0, [pc, #36]	; 11818 <__assert_fail@plt+0xc4>
   117f0:	ldr	r1, [pc, #36]	; 1181c <__assert_fail@plt+0xc8>
   117f4:	sub	r1, r1, r0
   117f8:	asr	r1, r1, #2
   117fc:	add	r1, r1, r1, lsr #31
   11800:	asrs	r1, r1, #1
   11804:	bxeq	lr
   11808:	ldr	r3, [pc, #16]	; 11820 <__assert_fail@plt+0xcc>
   1180c:	cmp	r3, #0
   11810:	bxeq	lr
   11814:	bx	r3
   11818:	andeq	lr, r4, r4, lsr #3
   1181c:	andeq	lr, r4, r4, lsr #3
   11820:	andeq	r0, r0, r0
   11824:	push	{r4, lr}
   11828:	ldr	r4, [pc, #24]	; 11848 <__assert_fail@plt+0xf4>
   1182c:	ldrb	r3, [r4]
   11830:	cmp	r3, #0
   11834:	popne	{r4, pc}
   11838:	bl	117c0 <__assert_fail@plt+0x6c>
   1183c:	mov	r3, #1
   11840:	strb	r3, [r4]
   11844:	pop	{r4, pc}
   11848:	andeq	lr, r4, r4, asr #3
   1184c:	b	117ec <__assert_fail@plt+0x98>
   11850:	push	{fp, lr}
   11854:	mov	fp, sp
   11858:	sub	sp, sp, #8
   1185c:	movw	r0, #50936	; 0xc6f8
   11860:	movt	r0, #3
   11864:	bl	115f8 <gettext@plt>
   11868:	movw	lr, #0
   1186c:	str	r0, [sp, #4]
   11870:	mov	r0, lr
   11874:	mov	r1, lr
   11878:	movw	r2, #52883	; 0xce93
   1187c:	movt	r2, #3
   11880:	ldr	r3, [sp, #4]
   11884:	bl	11580 <error@plt>
   11888:	bl	1188c <__assert_fail@plt+0x138>
   1188c:	push	{fp, lr}
   11890:	mov	fp, sp
   11894:	bl	12a50 <__assert_fail@plt+0x12fc>
   11898:	movw	r0, #1
   1189c:	bl	115ec <exit@plt>
   118a0:	push	{r4, r5, fp, lr}
   118a4:	add	fp, sp, #8
   118a8:	sub	sp, sp, #272	; 0x110
   118ac:	movw	r2, #0
   118b0:	str	r2, [fp, #-12]
   118b4:	str	r0, [fp, #-16]
   118b8:	str	r1, [fp, #-20]	; 0xffffffec
   118bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   118c0:	ldr	r0, [r0]
   118c4:	bl	162d8 <__assert_fail@plt+0x4b84>
   118c8:	movw	r0, #6
   118cc:	movw	r1, #52343	; 0xcc77
   118d0:	movt	r1, #3
   118d4:	bl	116b8 <setlocale@plt>
   118d8:	movw	r1, #51017	; 0xc749
   118dc:	movt	r1, #3
   118e0:	str	r0, [sp, #96]	; 0x60
   118e4:	mov	r0, r1
   118e8:	movw	r1, #50953	; 0xc709
   118ec:	movt	r1, #3
   118f0:	bl	1170c <bindtextdomain@plt>
   118f4:	movw	r1, #51017	; 0xc749
   118f8:	movt	r1, #3
   118fc:	str	r0, [sp, #92]	; 0x5c
   11900:	mov	r0, r1
   11904:	bl	11508 <textdomain@plt>
   11908:	movw	r1, #23484	; 0x5bbc
   1190c:	movt	r1, #1
   11910:	str	r0, [sp, #88]	; 0x58
   11914:	mov	r0, r1
   11918:	bl	3c6d4 <__assert_fail@plt+0x2af80>
   1191c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11920:	movw	r2, #57800	; 0xe1c8
   11924:	movt	r2, #4
   11928:	str	r1, [r2]
   1192c:	movw	r1, #57804	; 0xe1cc
   11930:	movt	r1, #4
   11934:	movw	r2, #0
   11938:	str	r2, [r1]
   1193c:	movw	r1, #57808	; 0xe1d0
   11940:	movt	r1, #4
   11944:	str	r2, [r1]
   11948:	movw	r1, #57812	; 0xe1d4
   1194c:	movt	r1, #4
   11950:	movw	r2, #0
   11954:	strb	r2, [r1]
   11958:	movw	r1, #57813	; 0xe1d5
   1195c:	movt	r1, #4
   11960:	movw	lr, #1
   11964:	strb	lr, [r1]
   11968:	movw	r1, #57814	; 0xe1d6
   1196c:	movt	r1, #4
   11970:	strb	r2, [r1]
   11974:	movw	r1, #57816	; 0xe1d8
   11978:	movt	r1, #4
   1197c:	movw	r2, #50977	; 0xc721
   11980:	movt	r2, #3
   11984:	str	r2, [r1]
   11988:	str	r0, [sp, #84]	; 0x54
   1198c:	ldr	r0, [fp, #-16]
   11990:	ldr	r1, [fp, #-20]	; 0xffffffec
   11994:	movw	r2, #50980	; 0xc724
   11998:	movt	r2, #3
   1199c:	movw	r3, #53700	; 0xd1c4
   119a0:	movt	r3, #3
   119a4:	movw	ip, #0
   119a8:	str	ip, [sp]
   119ac:	bl	115d4 <getopt_long@plt>
   119b0:	str	r0, [fp, #-24]	; 0xffffffe8
   119b4:	cmn	r0, #1
   119b8:	beq	11bbc <__assert_fail@plt+0x468>
   119bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119c0:	cmn	r0, #3
   119c4:	str	r0, [sp, #80]	; 0x50
   119c8:	beq	11b5c <__assert_fail@plt+0x408>
   119cc:	b	119d0 <__assert_fail@plt+0x27c>
   119d0:	ldr	r0, [sp, #80]	; 0x50
   119d4:	cmn	r0, #2
   119d8:	beq	11b54 <__assert_fail@plt+0x400>
   119dc:	b	119e0 <__assert_fail@plt+0x28c>
   119e0:	ldr	r0, [sp, #80]	; 0x50
   119e4:	cmp	r0, #98	; 0x62
   119e8:	beq	11a7c <__assert_fail@plt+0x328>
   119ec:	b	119f0 <__assert_fail@plt+0x29c>
   119f0:	ldr	r0, [sp, #80]	; 0x50
   119f4:	cmp	r0, #102	; 0x66
   119f8:	beq	11a60 <__assert_fail@plt+0x30c>
   119fc:	b	11a00 <__assert_fail@plt+0x2ac>
   11a00:	ldr	r0, [sp, #80]	; 0x50
   11a04:	cmp	r0, #107	; 0x6b
   11a08:	beq	11a98 <__assert_fail@plt+0x344>
   11a0c:	b	11a10 <__assert_fail@plt+0x2bc>
   11a10:	ldr	r0, [sp, #80]	; 0x50
   11a14:	cmp	r0, #110	; 0x6e
   11a18:	beq	11aac <__assert_fail@plt+0x358>
   11a1c:	b	11a20 <__assert_fail@plt+0x2cc>
   11a20:	ldr	r0, [sp, #80]	; 0x50
   11a24:	cmp	r0, #113	; 0x71
   11a28:	beq	11b18 <__assert_fail@plt+0x3c4>
   11a2c:	b	11a30 <__assert_fail@plt+0x2dc>
   11a30:	ldr	r0, [sp, #80]	; 0x50
   11a34:	cmp	r0, #115	; 0x73
   11a38:	beq	11b18 <__assert_fail@plt+0x3c4>
   11a3c:	b	11a40 <__assert_fail@plt+0x2ec>
   11a40:	ldr	r0, [sp, #80]	; 0x50
   11a44:	cmp	r0, #122	; 0x7a
   11a48:	beq	11b2c <__assert_fail@plt+0x3d8>
   11a4c:	b	11a50 <__assert_fail@plt+0x2fc>
   11a50:	ldr	r0, [sp, #80]	; 0x50
   11a54:	cmp	r0, #256	; 0x100
   11a58:	beq	11b40 <__assert_fail@plt+0x3ec>
   11a5c:	b	11bb0 <__assert_fail@plt+0x45c>
   11a60:	movw	r0, #57792	; 0xe1c0
   11a64:	movt	r0, #4
   11a68:	ldr	r0, [r0]
   11a6c:	movw	r1, #57816	; 0xe1d8
   11a70:	movt	r1, #4
   11a74:	str	r0, [r1]
   11a78:	b	11bb8 <__assert_fail@plt+0x464>
   11a7c:	movw	r0, #57792	; 0xe1c0
   11a80:	movt	r0, #4
   11a84:	ldr	r0, [r0]
   11a88:	movw	r1, #57820	; 0xe1dc
   11a8c:	movt	r1, #4
   11a90:	str	r0, [r1]
   11a94:	b	11bb8 <__assert_fail@plt+0x464>
   11a98:	movw	r0, #57813	; 0xe1d5
   11a9c:	movt	r0, #4
   11aa0:	movw	r1, #0
   11aa4:	strb	r1, [r0]
   11aa8:	b	11bb8 <__assert_fail@plt+0x464>
   11aac:	movw	r0, #57792	; 0xe1c0
   11ab0:	movt	r0, #4
   11ab4:	ldr	r0, [r0]
   11ab8:	movw	r1, #50991	; 0xc72f
   11abc:	movt	r1, #3
   11ac0:	str	r0, [sp, #76]	; 0x4c
   11ac4:	mov	r0, r1
   11ac8:	bl	115f8 <gettext@plt>
   11acc:	mov	r1, sp
   11ad0:	mov	lr, #0
   11ad4:	str	lr, [r1, #16]
   11ad8:	str	r0, [r1, #12]
   11adc:	movw	r0, #52343	; 0xcc77
   11ae0:	movt	r0, #3
   11ae4:	str	r0, [r1, #8]
   11ae8:	str	lr, [r1, #4]
   11aec:	mvn	r0, #-2147483648	; 0x80000000
   11af0:	str	r0, [r1]
   11af4:	ldr	r0, [sp, #76]	; 0x4c
   11af8:	mov	r2, lr
   11afc:	mov	r3, lr
   11b00:	bl	34424 <__assert_fail@plt+0x22cd0>
   11b04:	movw	r2, #57688	; 0xe158
   11b08:	movt	r2, #4
   11b0c:	str	r0, [r2]
   11b10:	str	r1, [sp, #72]	; 0x48
   11b14:	b	11bb8 <__assert_fail@plt+0x464>
   11b18:	movw	r0, #57812	; 0xe1d4
   11b1c:	movt	r0, #4
   11b20:	movw	r1, #1
   11b24:	strb	r1, [r0]
   11b28:	b	11bb8 <__assert_fail@plt+0x464>
   11b2c:	movw	r0, #57824	; 0xe1e0
   11b30:	movt	r0, #4
   11b34:	movw	r1, #1
   11b38:	strb	r1, [r0]
   11b3c:	b	11bb8 <__assert_fail@plt+0x464>
   11b40:	movw	r0, #57814	; 0xe1d6
   11b44:	movt	r0, #4
   11b48:	movw	r1, #1
   11b4c:	strb	r1, [r0]
   11b50:	b	11bb8 <__assert_fail@plt+0x464>
   11b54:	movw	r0, #0
   11b58:	bl	11ef4 <__assert_fail@plt+0x7a0>
   11b5c:	movw	r0, #57788	; 0xe1bc
   11b60:	movt	r0, #4
   11b64:	ldr	r0, [r0]
   11b68:	movw	r1, #57692	; 0xe15c
   11b6c:	movt	r1, #4
   11b70:	ldr	r3, [r1]
   11b74:	movw	r1, #51006	; 0xc73e
   11b78:	movt	r1, #3
   11b7c:	movw	r2, #51013	; 0xc745
   11b80:	movt	r2, #3
   11b84:	movw	ip, #51027	; 0xc753
   11b88:	movt	ip, #3
   11b8c:	str	ip, [sp]
   11b90:	movw	ip, #51039	; 0xc75f
   11b94:	movt	ip, #3
   11b98:	str	ip, [sp, #4]
   11b9c:	movw	ip, #0
   11ba0:	str	ip, [sp, #8]
   11ba4:	bl	31274 <__assert_fail@plt+0x1fb20>
   11ba8:	movw	r0, #0
   11bac:	bl	115ec <exit@plt>
   11bb0:	movw	r0, #1
   11bb4:	bl	11ef4 <__assert_fail@plt+0x7a0>
   11bb8:	b	1198c <__assert_fail@plt+0x238>
   11bbc:	ldr	r0, [fp, #-16]
   11bc0:	movw	r1, #57776	; 0xe1b0
   11bc4:	movt	r1, #4
   11bc8:	ldr	r1, [r1]
   11bcc:	sub	r0, r0, r1
   11bd0:	cmp	r0, #2
   11bd4:	bge	11c64 <__assert_fail@plt+0x510>
   11bd8:	ldr	r0, [fp, #-16]
   11bdc:	movw	r1, #57776	; 0xe1b0
   11be0:	movt	r1, #4
   11be4:	ldr	r1, [r1]
   11be8:	cmp	r0, r1
   11bec:	bgt	11c18 <__assert_fail@plt+0x4c4>
   11bf0:	movw	r0, #51055	; 0xc76f
   11bf4:	movt	r0, #3
   11bf8:	bl	115f8 <gettext@plt>
   11bfc:	movw	lr, #0
   11c00:	str	r0, [sp, #68]	; 0x44
   11c04:	mov	r0, lr
   11c08:	mov	r1, lr
   11c0c:	ldr	r2, [sp, #68]	; 0x44
   11c10:	bl	11580 <error@plt>
   11c14:	b	11c5c <__assert_fail@plt+0x508>
   11c18:	movw	r0, #51071	; 0xc77f
   11c1c:	movt	r0, #3
   11c20:	bl	115f8 <gettext@plt>
   11c24:	ldr	lr, [fp, #-20]	; 0xffffffec
   11c28:	ldr	r1, [fp, #-16]
   11c2c:	sub	r1, r1, #1
   11c30:	add	r1, lr, r1, lsl #2
   11c34:	ldr	r1, [r1]
   11c38:	str	r0, [sp, #64]	; 0x40
   11c3c:	mov	r0, r1
   11c40:	bl	18934 <__assert_fail@plt+0x71e0>
   11c44:	movw	r1, #0
   11c48:	str	r0, [sp, #60]	; 0x3c
   11c4c:	mov	r0, r1
   11c50:	ldr	r2, [sp, #64]	; 0x40
   11c54:	ldr	r3, [sp, #60]	; 0x3c
   11c58:	bl	11580 <error@plt>
   11c5c:	movw	r0, #1
   11c60:	bl	11ef4 <__assert_fail@plt+0x7a0>
   11c64:	movw	r0, #57816	; 0xe1d8
   11c68:	movt	r0, #4
   11c6c:	ldr	r0, [r0]
   11c70:	bl	11604 <strlen@plt>
   11c74:	str	r0, [fp, #-28]	; 0xffffffe4
   11c78:	movw	r0, #57820	; 0xe1dc
   11c7c:	movt	r0, #4
   11c80:	ldr	r0, [r0]
   11c84:	movw	lr, #0
   11c88:	cmp	r0, lr
   11c8c:	beq	11ca8 <__assert_fail@plt+0x554>
   11c90:	movw	r0, #57820	; 0xe1dc
   11c94:	movt	r0, #4
   11c98:	ldr	r0, [r0]
   11c9c:	bl	120b4 <__assert_fail@plt+0x960>
   11ca0:	str	r0, [sp, #56]	; 0x38
   11ca4:	b	11ce4 <__assert_fail@plt+0x590>
   11ca8:	movw	r0, #57688	; 0xe158
   11cac:	movt	r0, #4
   11cb0:	ldr	r0, [r0]
   11cb4:	movw	r1, #11
   11cb8:	cmp	r1, r0
   11cbc:	bls	11ccc <__assert_fail@plt+0x578>
   11cc0:	movw	r0, #11
   11cc4:	str	r0, [sp, #52]	; 0x34
   11cc8:	b	11cdc <__assert_fail@plt+0x588>
   11ccc:	movw	r0, #57688	; 0xe158
   11cd0:	movt	r0, #4
   11cd4:	ldr	r0, [r0]
   11cd8:	str	r0, [sp, #52]	; 0x34
   11cdc:	ldr	r0, [sp, #52]	; 0x34
   11ce0:	str	r0, [sp, #56]	; 0x38
   11ce4:	ldr	r0, [sp, #56]	; 0x38
   11ce8:	str	r0, [fp, #-32]	; 0xffffffe0
   11cec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11cf4:	add	r1, r1, #1
   11cf8:	add	r1, r0, r1
   11cfc:	mov	r2, #1
   11d00:	cmp	r1, r0
   11d04:	movwvc	r2, #0
   11d08:	str	r1, [fp, #-36]	; 0xffffffdc
   11d0c:	tst	r2, #1
   11d10:	beq	11d18 <__assert_fail@plt+0x5c4>
   11d14:	bl	11850 <__assert_fail@plt+0xfc>
   11d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11d1c:	bl	31458 <__assert_fail@plt+0x1fd04>
   11d20:	movw	lr, #57828	; 0xe1e4
   11d24:	movt	lr, #4
   11d28:	str	r0, [lr]
   11d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d30:	movw	lr, #57776	; 0xe1b0
   11d34:	movt	lr, #4
   11d38:	ldr	r1, [lr]
   11d3c:	add	r2, r1, #1
   11d40:	str	r2, [lr]
   11d44:	add	r0, r0, r1, lsl #2
   11d48:	ldr	r0, [r0]
   11d4c:	bl	12244 <__assert_fail@plt+0xaf0>
   11d50:	ldr	r0, [fp, #-16]
   11d54:	movw	r1, #57776	; 0xe1b0
   11d58:	movt	r1, #4
   11d5c:	ldr	r1, [r1]
   11d60:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d64:	bl	122dc <__assert_fail@plt+0xb88>
   11d68:	movw	r0, #57832	; 0xe1e8
   11d6c:	movt	r0, #4
   11d70:	bl	116c4 <sigemptyset@plt>
   11d74:	movw	r1, #0
   11d78:	str	r1, [fp, #-40]	; 0xffffffd8
   11d7c:	str	r0, [sp, #48]	; 0x30
   11d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d84:	cmp	r0, #11
   11d88:	bge	11df8 <__assert_fail@plt+0x6a4>
   11d8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d90:	movw	r1, #53876	; 0xd274
   11d94:	movt	r1, #3
   11d98:	add	r0, r1, r0, lsl #2
   11d9c:	ldr	r0, [r0]
   11da0:	movw	r1, #0
   11da4:	add	r2, sp, #100	; 0x64
   11da8:	bl	1152c <sigaction@plt>
   11dac:	ldr	r1, [sp, #100]	; 0x64
   11db0:	movw	r2, #1
   11db4:	cmp	r1, r2
   11db8:	str	r0, [sp, #44]	; 0x2c
   11dbc:	beq	11de4 <__assert_fail@plt+0x690>
   11dc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11dc4:	movw	r1, #53876	; 0xd274
   11dc8:	movt	r1, #3
   11dcc:	add	r0, r1, r0, lsl #2
   11dd0:	ldr	r1, [r0]
   11dd4:	movw	r0, #57832	; 0xe1e8
   11dd8:	movt	r0, #4
   11ddc:	bl	115a4 <sigaddset@plt>
   11de0:	str	r0, [sp, #40]	; 0x28
   11de4:	b	11de8 <__assert_fail@plt+0x694>
   11de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11dec:	add	r0, r0, #1
   11df0:	str	r0, [fp, #-40]	; 0xffffffd8
   11df4:	b	11d80 <__assert_fail@plt+0x62c>
   11df8:	movw	r0, #57832	; 0xe1e8
   11dfc:	movt	r0, #4
   11e00:	movw	r1, #9776	; 0x2630
   11e04:	movt	r1, #1
   11e08:	str	r1, [sp, #100]	; 0x64
   11e0c:	add	r1, sp, #100	; 0x64
   11e10:	add	r1, r1, #4
   11e14:	str	r0, [sp, #36]	; 0x24
   11e18:	mov	r0, r1
   11e1c:	ldr	r1, [sp, #36]	; 0x24
   11e20:	movw	r2, #128	; 0x80
   11e24:	bl	11478 <memcpy@plt>
   11e28:	movw	r0, #0
   11e2c:	str	r0, [sp, #232]	; 0xe8
   11e30:	str	r0, [fp, #-40]	; 0xffffffd8
   11e34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e38:	cmp	r0, #11
   11e3c:	bge	11ea0 <__assert_fail@plt+0x74c>
   11e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e44:	movw	r1, #53876	; 0xd274
   11e48:	movt	r1, #3
   11e4c:	add	r0, r1, r0, lsl #2
   11e50:	ldr	r1, [r0]
   11e54:	movw	r0, #57832	; 0xe1e8
   11e58:	movt	r0, #4
   11e5c:	bl	114fc <sigismember@plt>
   11e60:	cmp	r0, #0
   11e64:	beq	11e8c <__assert_fail@plt+0x738>
   11e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e6c:	movw	r1, #53876	; 0xd274
   11e70:	movt	r1, #3
   11e74:	add	r0, r1, r0, lsl #2
   11e78:	ldr	r0, [r0]
   11e7c:	add	r1, sp, #100	; 0x64
   11e80:	movw	r2, #0
   11e84:	bl	1152c <sigaction@plt>
   11e88:	str	r0, [sp, #32]
   11e8c:	b	11e90 <__assert_fail@plt+0x73c>
   11e90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e94:	add	r0, r0, #1
   11e98:	str	r0, [fp, #-40]	; 0xffffffd8
   11e9c:	b	11e34 <__assert_fail@plt+0x6e0>
   11ea0:	bl	12674 <__assert_fail@plt+0xf20>
   11ea4:	movw	r0, #0
   11ea8:	bl	11748 <close@plt>
   11eac:	cmp	r0, #0
   11eb0:	beq	11ee8 <__assert_fail@plt+0x794>
   11eb4:	bl	11628 <__errno_location@plt>
   11eb8:	ldr	r1, [r0]
   11ebc:	movw	r0, #51096	; 0xc798
   11ec0:	movt	r0, #3
   11ec4:	str	r1, [sp, #28]
   11ec8:	bl	115f8 <gettext@plt>
   11ecc:	movw	r1, #0
   11ed0:	str	r0, [sp, #24]
   11ed4:	mov	r0, r1
   11ed8:	ldr	r1, [sp, #28]
   11edc:	ldr	r2, [sp, #24]
   11ee0:	bl	11580 <error@plt>
   11ee4:	bl	1188c <__assert_fail@plt+0x138>
   11ee8:	movw	r0, #0
   11eec:	sub	sp, fp, #8
   11ef0:	pop	{r4, r5, fp, pc}
   11ef4:	push	{fp, lr}
   11ef8:	mov	fp, sp
   11efc:	sub	sp, sp, #56	; 0x38
   11f00:	str	r0, [fp, #-4]
   11f04:	ldr	r0, [fp, #-4]
   11f08:	cmp	r0, #0
   11f0c:	beq	11f5c <__assert_fail@plt+0x808>
   11f10:	b	11f14 <__assert_fail@plt+0x7c0>
   11f14:	movw	r0, #57784	; 0xe1b8
   11f18:	movt	r0, #4
   11f1c:	ldr	r0, [r0]
   11f20:	movw	r1, #51107	; 0xc7a3
   11f24:	movt	r1, #3
   11f28:	str	r0, [fp, #-8]
   11f2c:	mov	r0, r1
   11f30:	bl	115f8 <gettext@plt>
   11f34:	movw	r1, #58044	; 0xe2bc
   11f38:	movt	r1, #4
   11f3c:	ldr	r2, [r1]
   11f40:	ldr	r1, [fp, #-8]
   11f44:	str	r0, [fp, #-12]
   11f48:	mov	r0, r1
   11f4c:	ldr	r1, [fp, #-12]
   11f50:	bl	1161c <fprintf@plt>
   11f54:	str	r0, [fp, #-16]
   11f58:	b	120ac <__assert_fail@plt+0x958>
   11f5c:	movw	r0, #51146	; 0xc7ca
   11f60:	movt	r0, #3
   11f64:	bl	115f8 <gettext@plt>
   11f68:	movw	lr, #58044	; 0xe2bc
   11f6c:	movt	lr, #4
   11f70:	ldr	r1, [lr]
   11f74:	bl	1140c <printf@plt>
   11f78:	movw	r1, #51185	; 0xc7f1
   11f7c:	movt	r1, #3
   11f80:	str	r0, [fp, #-20]	; 0xffffffec
   11f84:	mov	r0, r1
   11f88:	bl	115f8 <gettext@plt>
   11f8c:	movw	r1, #57788	; 0xe1bc
   11f90:	movt	r1, #4
   11f94:	ldr	r1, [r1]
   11f98:	bl	113c4 <fputs_unlocked@plt>
   11f9c:	movw	r1, #51319	; 0xc877
   11fa0:	movt	r1, #3
   11fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   11fa8:	mov	r0, r1
   11fac:	bl	115f8 <gettext@plt>
   11fb0:	movw	r1, #57788	; 0xe1bc
   11fb4:	movt	r1, #4
   11fb8:	ldr	r1, [r1]
   11fbc:	bl	113c4 <fputs_unlocked@plt>
   11fc0:	str	r0, [sp, #28]
   11fc4:	bl	12868 <__assert_fail@plt+0x1114>
   11fc8:	movw	r0, #51354	; 0xc89a
   11fcc:	movt	r0, #3
   11fd0:	bl	115f8 <gettext@plt>
   11fd4:	movw	r1, #57788	; 0xe1bc
   11fd8:	movt	r1, #4
   11fdc:	ldr	r1, [r1]
   11fe0:	bl	113c4 <fputs_unlocked@plt>
   11fe4:	movw	r1, #51542	; 0xc956
   11fe8:	movt	r1, #3
   11fec:	str	r0, [sp, #24]
   11ff0:	mov	r0, r1
   11ff4:	bl	115f8 <gettext@plt>
   11ff8:	movw	r1, #57788	; 0xe1bc
   11ffc:	movt	r1, #4
   12000:	ldr	r1, [r1]
   12004:	bl	113c4 <fputs_unlocked@plt>
   12008:	movw	r1, #51608	; 0xc998
   1200c:	movt	r1, #3
   12010:	str	r0, [sp, #20]
   12014:	mov	r0, r1
   12018:	bl	115f8 <gettext@plt>
   1201c:	movw	r1, #57788	; 0xe1bc
   12020:	movt	r1, #4
   12024:	ldr	r1, [r1]
   12028:	bl	113c4 <fputs_unlocked@plt>
   1202c:	movw	r1, #51807	; 0xca5f
   12030:	movt	r1, #3
   12034:	str	r0, [sp, #16]
   12038:	mov	r0, r1
   1203c:	bl	115f8 <gettext@plt>
   12040:	movw	r1, #57788	; 0xe1bc
   12044:	movt	r1, #4
   12048:	ldr	r1, [r1]
   1204c:	bl	113c4 <fputs_unlocked@plt>
   12050:	movw	r1, #51852	; 0xca8c
   12054:	movt	r1, #3
   12058:	str	r0, [sp, #12]
   1205c:	mov	r0, r1
   12060:	bl	115f8 <gettext@plt>
   12064:	movw	r1, #57788	; 0xe1bc
   12068:	movt	r1, #4
   1206c:	ldr	r1, [r1]
   12070:	bl	113c4 <fputs_unlocked@plt>
   12074:	movw	r1, #51906	; 0xcac2
   12078:	movt	r1, #3
   1207c:	str	r0, [sp, #8]
   12080:	mov	r0, r1
   12084:	bl	115f8 <gettext@plt>
   12088:	movw	r1, #57788	; 0xe1bc
   1208c:	movt	r1, #4
   12090:	ldr	r1, [r1]
   12094:	bl	113c4 <fputs_unlocked@plt>
   12098:	movw	r1, #51006	; 0xc73e
   1209c:	movt	r1, #3
   120a0:	str	r0, [sp, #4]
   120a4:	mov	r0, r1
   120a8:	bl	1289c <__assert_fail@plt+0x1148>
   120ac:	ldr	r0, [fp, #-4]
   120b0:	bl	115ec <exit@plt>
   120b4:	push	{fp, lr}
   120b8:	mov	fp, sp
   120bc:	sub	sp, sp, #32
   120c0:	str	r0, [fp, #-4]
   120c4:	movw	r0, #0
   120c8:	strb	r0, [fp, #-5]
   120cc:	ldr	r0, [fp, #-4]
   120d0:	str	r0, [fp, #-12]
   120d4:	ldr	r0, [fp, #-12]
   120d8:	ldrsb	r0, [r0]
   120dc:	cmp	r0, #0
   120e0:	beq	121d8 <__assert_fail@plt+0xa84>
   120e4:	ldr	r0, [fp, #-12]
   120e8:	ldrb	r0, [r0]
   120ec:	cmp	r0, #37	; 0x25
   120f0:	bne	121c4 <__assert_fail@plt+0xa70>
   120f4:	ldr	r0, [fp, #-12]
   120f8:	add	r1, r0, #1
   120fc:	str	r1, [fp, #-12]
   12100:	ldrb	r0, [r0, #1]
   12104:	cmp	r0, #37	; 0x25
   12108:	beq	121c4 <__assert_fail@plt+0xa70>
   1210c:	ldrb	r0, [fp, #-5]
   12110:	tst	r0, #1
   12114:	beq	1213c <__assert_fail@plt+0x9e8>
   12118:	movw	r0, #52468	; 0xccf4
   1211c:	movt	r0, #3
   12120:	bl	115f8 <gettext@plt>
   12124:	movw	lr, #1
   12128:	str	r0, [sp, #8]
   1212c:	mov	r0, lr
   12130:	movw	r1, #0
   12134:	ldr	r2, [sp, #8]
   12138:	bl	11580 <error@plt>
   1213c:	movw	r0, #1
   12140:	strb	r0, [fp, #-5]
   12144:	ldr	r0, [fp, #-12]
   12148:	add	r1, sp, #16
   1214c:	bl	12f0c <__assert_fail@plt+0x17b8>
   12150:	ldr	r1, [fp, #-12]
   12154:	add	r0, r1, r0
   12158:	str	r0, [fp, #-12]
   1215c:	ldr	r0, [fp, #-12]
   12160:	ldrb	r0, [r0]
   12164:	sub	r0, r0, #48	; 0x30
   12168:	cmp	r0, #9
   1216c:	bhi	12180 <__assert_fail@plt+0xa2c>
   12170:	ldr	r0, [fp, #-12]
   12174:	add	r0, r0, #1
   12178:	str	r0, [fp, #-12]
   1217c:	b	1215c <__assert_fail@plt+0xa08>
   12180:	ldr	r0, [fp, #-12]
   12184:	ldrb	r0, [r0]
   12188:	cmp	r0, #46	; 0x2e
   1218c:	bne	121b8 <__assert_fail@plt+0xa64>
   12190:	b	12194 <__assert_fail@plt+0xa40>
   12194:	ldr	r0, [fp, #-12]
   12198:	add	r1, r0, #1
   1219c:	str	r1, [fp, #-12]
   121a0:	ldrb	r0, [r0, #1]
   121a4:	sub	r0, r0, #48	; 0x30
   121a8:	cmp	r0, #9
   121ac:	bhi	121b4 <__assert_fail@plt+0xa60>
   121b0:	b	12194 <__assert_fail@plt+0xa40>
   121b4:	b	121b8 <__assert_fail@plt+0xa64>
   121b8:	ldr	r0, [fp, #-12]
   121bc:	ldr	r1, [sp, #16]
   121c0:	bl	12fd8 <__assert_fail@plt+0x1884>
   121c4:	b	121c8 <__assert_fail@plt+0xa74>
   121c8:	ldr	r0, [fp, #-12]
   121cc:	add	r0, r0, #1
   121d0:	str	r0, [fp, #-12]
   121d4:	b	120d4 <__assert_fail@plt+0x980>
   121d8:	ldrb	r0, [fp, #-5]
   121dc:	tst	r0, #1
   121e0:	bne	12208 <__assert_fail@plt+0xab4>
   121e4:	movw	r0, #52516	; 0xcd24
   121e8:	movt	r0, #3
   121ec:	bl	115f8 <gettext@plt>
   121f0:	movw	lr, #1
   121f4:	str	r0, [sp, #4]
   121f8:	mov	r0, lr
   121fc:	movw	r1, #0
   12200:	ldr	r2, [sp, #4]
   12204:	bl	11580 <error@plt>
   12208:	ldr	r3, [pc, #48]	; 12240 <__assert_fail@plt+0xaec>
   1220c:	ldr	r2, [fp, #-4]
   12210:	movw	r0, #0
   12214:	str	r0, [sp]
   12218:	ldr	r1, [sp]
   1221c:	bl	11640 <snprintf@plt>
   12220:	str	r0, [sp, #12]
   12224:	ldr	r0, [sp, #12]
   12228:	cmp	r0, #0
   1222c:	bge	12234 <__assert_fail@plt+0xae0>
   12230:	bl	11850 <__assert_fail@plt+0xfc>
   12234:	ldr	r0, [sp, #12]
   12238:	mov	sp, fp
   1223c:	pop	{fp, pc}
   12240:	svcvc	0x00ffffff
   12244:	push	{fp, lr}
   12248:	mov	fp, sp
   1224c:	sub	sp, sp, #24
   12250:	str	r0, [fp, #-4]
   12254:	ldr	r0, [fp, #-4]
   12258:	movw	r1, #54076	; 0xd33c
   1225c:	movt	r1, #3
   12260:	bl	11400 <strcmp@plt>
   12264:	cmp	r0, #0
   12268:	beq	122d4 <__assert_fail@plt+0xb80>
   1226c:	ldr	r1, [fp, #-4]
   12270:	movw	r0, #0
   12274:	str	r0, [fp, #-8]
   12278:	ldr	r2, [fp, #-8]
   1227c:	ldr	r3, [fp, #-8]
   12280:	bl	15dc8 <__assert_fail@plt+0x4674>
   12284:	cmp	r0, #0
   12288:	bge	122d4 <__assert_fail@plt+0xb80>
   1228c:	bl	11628 <__errno_location@plt>
   12290:	ldr	r1, [r0]
   12294:	movw	r0, #52740	; 0xce04
   12298:	movt	r0, #3
   1229c:	str	r1, [sp, #12]
   122a0:	bl	115f8 <gettext@plt>
   122a4:	ldr	r1, [fp, #-4]
   122a8:	movw	lr, #4
   122ac:	str	r0, [sp, #8]
   122b0:	mov	r0, lr
   122b4:	bl	1859c <__assert_fail@plt+0x6e48>
   122b8:	movw	r1, #1
   122bc:	str	r0, [sp, #4]
   122c0:	mov	r0, r1
   122c4:	ldr	r1, [sp, #12]
   122c8:	ldr	r2, [sp, #8]
   122cc:	ldr	r3, [sp, #4]
   122d0:	bl	11580 <error@plt>
   122d4:	mov	sp, fp
   122d8:	pop	{fp, pc}
   122dc:	push	{fp, lr}
   122e0:	mov	fp, sp
   122e4:	sub	sp, sp, #112	; 0x70
   122e8:	str	r0, [fp, #-4]
   122ec:	str	r1, [fp, #-8]
   122f0:	str	r2, [fp, #-12]
   122f4:	ldr	r0, [fp, #-8]
   122f8:	str	r0, [fp, #-20]	; 0xffffffec
   122fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12300:	ldr	r1, [fp, #-4]
   12304:	cmp	r0, r1
   12308:	bge	12628 <__assert_fail@plt+0xed4>
   1230c:	ldr	r0, [fp, #-12]
   12310:	ldr	r1, [fp, #-20]	; 0xffffffec
   12314:	add	r0, r0, r1, lsl #2
   12318:	ldr	r0, [r0]
   1231c:	ldrb	r0, [r0]
   12320:	cmp	r0, #47	; 0x2f
   12324:	beq	12344 <__assert_fail@plt+0xbf0>
   12328:	ldr	r0, [fp, #-12]
   1232c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12330:	add	r0, r0, r1, lsl #2
   12334:	ldr	r0, [r0]
   12338:	ldrb	r0, [r0]
   1233c:	cmp	r0, #37	; 0x25
   12340:	bne	12384 <__assert_fail@plt+0xc30>
   12344:	ldr	r0, [fp, #-20]	; 0xffffffec
   12348:	mov	r1, r0
   1234c:	ldr	r2, [fp, #-12]
   12350:	ldr	r0, [r2, r0, lsl #2]!
   12354:	ldrb	r0, [r0]
   12358:	sub	r0, r0, #37	; 0x25
   1235c:	clz	r0, r0
   12360:	lsr	r0, r0, #5
   12364:	ldr	r2, [r2]
   12368:	str	r0, [sp, #52]	; 0x34
   1236c:	mov	r0, r1
   12370:	ldr	r1, [sp, #52]	; 0x34
   12374:	and	r1, r1, #1
   12378:	bl	131cc <__assert_fail@plt+0x1a78>
   1237c:	str	r0, [fp, #-16]
   12380:	b	125a8 <__assert_fail@plt+0xe54>
   12384:	bl	13368 <__assert_fail@plt+0x1c14>
   12388:	str	r0, [fp, #-16]
   1238c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12390:	ldr	lr, [fp, #-16]
   12394:	str	r0, [lr, #24]
   12398:	ldr	r0, [fp, #-12]
   1239c:	ldr	lr, [fp, #-20]	; 0xffffffec
   123a0:	add	r0, r0, lr, lsl #2
   123a4:	ldr	r0, [r0]
   123a8:	movw	r1, #0
   123ac:	movw	r2, #10
   123b0:	sub	r3, fp, #32
   123b4:	movw	lr, #52343	; 0xcc77
   123b8:	movt	lr, #3
   123bc:	str	lr, [sp]
   123c0:	bl	367e0 <__assert_fail@plt+0x2508c>
   123c4:	cmp	r0, #0
   123c8:	bne	123dc <__assert_fail@plt+0xc88>
   123cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123d0:	cmn	r0, #1
   123d4:	bgt	12420 <__assert_fail@plt+0xccc>
   123d8:	b	123dc <__assert_fail@plt+0xc88>
   123dc:	movw	r0, #52767	; 0xce1f
   123e0:	movt	r0, #3
   123e4:	bl	115f8 <gettext@plt>
   123e8:	ldr	lr, [fp, #-12]
   123ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   123f0:	add	r1, lr, r1, lsl #2
   123f4:	ldr	r1, [r1]
   123f8:	str	r0, [sp, #48]	; 0x30
   123fc:	mov	r0, r1
   12400:	bl	18934 <__assert_fail@plt+0x71e0>
   12404:	movw	r1, #1
   12408:	str	r0, [sp, #44]	; 0x2c
   1240c:	mov	r0, r1
   12410:	movw	r1, #0
   12414:	ldr	r2, [sp, #48]	; 0x30
   12418:	ldr	r3, [sp, #44]	; 0x2c
   1241c:	bl	11580 <error@plt>
   12420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12428:	orr	r0, r0, r1
   1242c:	cmp	r0, #0
   12430:	bne	1246c <__assert_fail@plt+0xd18>
   12434:	b	12438 <__assert_fail@plt+0xce4>
   12438:	movw	r0, #52787	; 0xce33
   1243c:	movt	r0, #3
   12440:	bl	115f8 <gettext@plt>
   12444:	ldr	lr, [fp, #-12]
   12448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1244c:	add	r1, lr, r1, lsl #2
   12450:	ldr	r3, [r1]
   12454:	movw	r1, #1
   12458:	str	r0, [sp, #40]	; 0x28
   1245c:	mov	r0, r1
   12460:	movw	r1, #0
   12464:	ldr	r2, [sp, #40]	; 0x28
   12468:	bl	11580 <error@plt>
   1246c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12474:	movw	r2, #57984	; 0xe280
   12478:	movt	r2, #4
   1247c:	ldr	r3, [r2]
   12480:	ldr	r2, [r2, #4]
   12484:	subs	r0, r0, r3
   12488:	sbcs	r1, r1, r2
   1248c:	str	r0, [sp, #36]	; 0x24
   12490:	str	r1, [sp, #32]
   12494:	bcs	1250c <__assert_fail@plt+0xdb8>
   12498:	b	1249c <__assert_fail@plt+0xd48>
   1249c:	sub	r2, fp, #53	; 0x35
   124a0:	movw	r0, #52829	; 0xce5d
   124a4:	movt	r0, #3
   124a8:	str	r2, [sp, #28]
   124ac:	bl	115f8 <gettext@plt>
   124b0:	ldr	r2, [fp, #-12]
   124b4:	ldr	lr, [fp, #-20]	; 0xffffffec
   124b8:	ldr	r2, [r2, lr, lsl #2]
   124bc:	str	r0, [sp, #24]
   124c0:	mov	r0, r2
   124c4:	bl	18934 <__assert_fail@plt+0x71e0>
   124c8:	movw	r2, #57984	; 0xe280
   124cc:	movt	r2, #4
   124d0:	ldr	lr, [r2]
   124d4:	ldr	r1, [r2, #4]
   124d8:	str	r0, [sp, #20]
   124dc:	mov	r0, lr
   124e0:	ldr	r2, [sp, #28]
   124e4:	bl	16198 <__assert_fail@plt+0x4a44>
   124e8:	movw	r1, #1
   124ec:	str	r0, [sp, #16]
   124f0:	mov	r0, r1
   124f4:	movw	r1, #0
   124f8:	ldr	r2, [sp, #24]
   124fc:	ldr	r3, [sp, #20]
   12500:	ldr	lr, [sp, #16]
   12504:	str	lr, [sp]
   12508:	bl	11580 <error@plt>
   1250c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12514:	movw	r2, #57984	; 0xe280
   12518:	movt	r2, #4
   1251c:	ldr	r3, [r2]
   12520:	ldr	r2, [r2, #4]
   12524:	eor	r1, r1, r2
   12528:	eor	r0, r0, r3
   1252c:	orr	r0, r0, r1
   12530:	cmp	r0, #0
   12534:	bne	1257c <__assert_fail@plt+0xe28>
   12538:	b	1253c <__assert_fail@plt+0xde8>
   1253c:	movw	r0, #52886	; 0xce96
   12540:	movt	r0, #3
   12544:	bl	115f8 <gettext@plt>
   12548:	ldr	lr, [fp, #-12]
   1254c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12550:	add	r1, lr, r1, lsl #2
   12554:	ldr	r1, [r1]
   12558:	str	r0, [sp, #12]
   1255c:	mov	r0, r1
   12560:	bl	18934 <__assert_fail@plt+0x71e0>
   12564:	movw	r1, #0
   12568:	str	r0, [sp, #8]
   1256c:	mov	r0, r1
   12570:	ldr	r2, [sp, #12]
   12574:	ldr	r3, [sp, #8]
   12578:	bl	11580 <error@plt>
   1257c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12584:	movw	r2, #57984	; 0xe280
   12588:	movt	r2, #4
   1258c:	str	r1, [r2, #4]
   12590:	str	r0, [r2]
   12594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1259c:	ldr	r2, [fp, #-16]
   125a0:	str	r1, [r2, #12]
   125a4:	str	r0, [r2, #8]
   125a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   125ac:	add	r0, r0, #1
   125b0:	ldr	r1, [fp, #-4]
   125b4:	cmp	r0, r1
   125b8:	bge	12614 <__assert_fail@plt+0xec0>
   125bc:	ldr	r0, [fp, #-12]
   125c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   125c4:	add	r1, r1, #1
   125c8:	add	r0, r0, r1, lsl #2
   125cc:	ldr	r0, [r0]
   125d0:	ldrb	r0, [r0]
   125d4:	cmp	r0, #123	; 0x7b
   125d8:	bne	12614 <__assert_fail@plt+0xec0>
   125dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   125e0:	add	r0, r0, #1
   125e4:	str	r0, [fp, #-20]	; 0xffffffec
   125e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   125ec:	mov	r1, r0
   125f0:	ldr	r2, [fp, #-16]
   125f4:	ldr	r3, [fp, #-12]
   125f8:	add	r0, r3, r0, lsl #2
   125fc:	ldr	r0, [r0]
   12600:	str	r0, [sp, #4]
   12604:	mov	r0, r1
   12608:	mov	r1, r2
   1260c:	ldr	r2, [sp, #4]
   12610:	bl	13434 <__assert_fail@plt+0x1ce0>
   12614:	b	12618 <__assert_fail@plt+0xec4>
   12618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1261c:	add	r0, r0, #1
   12620:	str	r0, [fp, #-20]	; 0xffffffec
   12624:	b	122fc <__assert_fail@plt+0xba8>
   12628:	mov	sp, fp
   1262c:	pop	{fp, pc}
   12630:	push	{fp, lr}
   12634:	mov	fp, sp
   12638:	sub	sp, sp, #16
   1263c:	str	r0, [fp, #-4]
   12640:	movw	r0, #1
   12644:	and	r0, r0, #1
   12648:	bl	12d30 <__assert_fail@plt+0x15dc>
   1264c:	ldr	r0, [fp, #-4]
   12650:	movw	r1, #0
   12654:	bl	114b4 <signal@plt>
   12658:	ldr	r1, [fp, #-4]
   1265c:	str	r0, [sp, #8]
   12660:	mov	r0, r1
   12664:	bl	113dc <raise@plt>
   12668:	str	r0, [sp, #4]
   1266c:	mov	sp, fp
   12670:	pop	{fp, pc}
   12674:	push	{fp, lr}
   12678:	mov	fp, sp
   1267c:	sub	sp, sp, #40	; 0x28
   12680:	movw	r0, #0
   12684:	str	r0, [fp, #-4]
   12688:	ldr	r0, [fp, #-4]
   1268c:	movw	r1, #57808	; 0xe1d0
   12690:	movt	r1, #4
   12694:	ldr	r1, [r1]
   12698:	cmp	r0, r1
   1269c:	bge	12854 <__assert_fail@plt+0x1100>
   126a0:	movw	r0, #57804	; 0xe1cc
   126a4:	movt	r0, #4
   126a8:	ldr	r0, [r0]
   126ac:	ldr	r1, [fp, #-4]
   126b0:	add	r0, r0, r1, lsl #6
   126b4:	ldrb	r0, [r0, #30]
   126b8:	tst	r0, #1
   126bc:	beq	12780 <__assert_fail@plt+0x102c>
   126c0:	mov	r0, #0
   126c4:	str	r0, [fp, #-12]
   126c8:	str	r0, [fp, #-16]
   126cc:	movw	r0, #57804	; 0xe1cc
   126d0:	movt	r0, #4
   126d4:	ldr	r0, [r0]
   126d8:	ldr	r1, [fp, #-4]
   126dc:	add	r0, r0, r1, lsl #6
   126e0:	ldrb	r0, [r0, #28]
   126e4:	tst	r0, #1
   126e8:	movw	r0, #1
   126ec:	str	r0, [sp, #20]
   126f0:	bne	12734 <__assert_fail@plt+0xfe0>
   126f4:	ldr	r0, [fp, #-16]
   126f8:	ldr	r1, [fp, #-12]
   126fc:	movw	r2, #57804	; 0xe1cc
   12700:	movt	r2, #4
   12704:	ldr	r2, [r2]
   12708:	ldr	r3, [fp, #-4]
   1270c:	add	r2, r2, r3, lsl #6
   12710:	ldr	r3, [r2, #16]
   12714:	ldr	r2, [r2, #20]
   12718:	subs	r0, r3, r0
   1271c:	sbcs	r1, r2, r1
   12720:	mov	r2, #0
   12724:	movwge	r2, #1
   12728:	str	r0, [sp, #16]
   1272c:	str	r1, [sp, #12]
   12730:	str	r2, [sp, #20]
   12734:	ldr	r0, [sp, #20]
   12738:	tst	r0, #1
   1273c:	beq	1277c <__assert_fail@plt+0x1028>
   12740:	movw	r0, #57804	; 0xe1cc
   12744:	movt	r0, #4
   12748:	ldr	r0, [r0]
   1274c:	ldr	r1, [fp, #-4]
   12750:	add	r0, r0, r1, lsl #6
   12754:	ldr	r2, [fp, #-16]
   12758:	ldr	r3, [fp, #-12]
   1275c:	bl	13634 <__assert_fail@plt+0x1ee0>
   12760:	ldr	r0, [fp, #-16]
   12764:	ldr	r1, [fp, #-12]
   12768:	adds	r0, r0, #1
   1276c:	adc	r1, r1, #0
   12770:	str	r0, [fp, #-16]
   12774:	str	r1, [fp, #-12]
   12778:	b	126cc <__assert_fail@plt+0xf78>
   1277c:	b	12840 <__assert_fail@plt+0x10ec>
   12780:	mov	r0, #0
   12784:	str	r0, [fp, #-12]
   12788:	str	r0, [fp, #-16]
   1278c:	movw	r0, #57804	; 0xe1cc
   12790:	movt	r0, #4
   12794:	ldr	r0, [r0]
   12798:	ldr	r1, [fp, #-4]
   1279c:	add	r0, r0, r1, lsl #6
   127a0:	ldrb	r0, [r0, #28]
   127a4:	tst	r0, #1
   127a8:	movw	r0, #1
   127ac:	str	r0, [sp, #8]
   127b0:	bne	127f4 <__assert_fail@plt+0x10a0>
   127b4:	ldr	r0, [fp, #-16]
   127b8:	ldr	r1, [fp, #-12]
   127bc:	movw	r2, #57804	; 0xe1cc
   127c0:	movt	r2, #4
   127c4:	ldr	r2, [r2]
   127c8:	ldr	r3, [fp, #-4]
   127cc:	add	r2, r2, r3, lsl #6
   127d0:	ldr	r3, [r2, #16]
   127d4:	ldr	r2, [r2, #20]
   127d8:	subs	r0, r3, r0
   127dc:	sbcs	r1, r2, r1
   127e0:	mov	r2, #0
   127e4:	movwge	r2, #1
   127e8:	str	r0, [sp, #4]
   127ec:	str	r1, [sp]
   127f0:	str	r2, [sp, #8]
   127f4:	ldr	r0, [sp, #8]
   127f8:	tst	r0, #1
   127fc:	beq	1283c <__assert_fail@plt+0x10e8>
   12800:	movw	r0, #57804	; 0xe1cc
   12804:	movt	r0, #4
   12808:	ldr	r0, [r0]
   1280c:	ldr	r1, [fp, #-4]
   12810:	add	r0, r0, r1, lsl #6
   12814:	ldr	r2, [fp, #-16]
   12818:	ldr	r3, [fp, #-12]
   1281c:	bl	13a00 <__assert_fail@plt+0x22ac>
   12820:	ldr	r0, [fp, #-16]
   12824:	ldr	r1, [fp, #-12]
   12828:	adds	r0, r0, #1
   1282c:	adc	r1, r1, #0
   12830:	str	r0, [fp, #-16]
   12834:	str	r1, [fp, #-12]
   12838:	b	1278c <__assert_fail@plt+0x1038>
   1283c:	b	12840 <__assert_fail@plt+0x10ec>
   12840:	b	12844 <__assert_fail@plt+0x10f0>
   12844:	ldr	r0, [fp, #-4]
   12848:	add	r0, r0, #1
   1284c:	str	r0, [fp, #-4]
   12850:	b	12688 <__assert_fail@plt+0xf34>
   12854:	bl	13b4c <__assert_fail@plt+0x23f8>
   12858:	bl	13cac <__assert_fail@plt+0x2558>
   1285c:	bl	12aa4 <__assert_fail@plt+0x1350>
   12860:	mov	sp, fp
   12864:	pop	{fp, pc}
   12868:	push	{fp, lr}
   1286c:	mov	fp, sp
   12870:	sub	sp, sp, #8
   12874:	movw	r0, #53314	; 0xd042
   12878:	movt	r0, #3
   1287c:	bl	115f8 <gettext@plt>
   12880:	movw	lr, #57788	; 0xe1bc
   12884:	movt	lr, #4
   12888:	ldr	r1, [lr]
   1288c:	bl	113c4 <fputs_unlocked@plt>
   12890:	str	r0, [sp, #4]
   12894:	mov	sp, fp
   12898:	pop	{fp, pc}
   1289c:	push	{fp, lr}
   128a0:	mov	fp, sp
   128a4:	sub	sp, sp, #96	; 0x60
   128a8:	add	r1, sp, #36	; 0x24
   128ac:	movw	r2, #53920	; 0xd2a0
   128b0:	movt	r2, #3
   128b4:	str	r0, [fp, #-4]
   128b8:	mov	r0, r1
   128bc:	str	r1, [sp, #20]
   128c0:	mov	r1, r2
   128c4:	movw	r2, #56	; 0x38
   128c8:	bl	11478 <memcpy@plt>
   128cc:	ldr	r0, [fp, #-4]
   128d0:	str	r0, [sp, #32]
   128d4:	ldr	r0, [sp, #20]
   128d8:	str	r0, [sp, #28]
   128dc:	ldr	r0, [sp, #28]
   128e0:	ldr	r0, [r0]
   128e4:	movw	r1, #0
   128e8:	cmp	r0, r1
   128ec:	movw	r0, #0
   128f0:	str	r0, [sp, #16]
   128f4:	beq	12920 <__assert_fail@plt+0x11cc>
   128f8:	ldr	r0, [fp, #-4]
   128fc:	ldr	r1, [sp, #28]
   12900:	ldr	r1, [r1]
   12904:	bl	11400 <strcmp@plt>
   12908:	cmp	r0, #0
   1290c:	movw	r0, #0
   12910:	moveq	r0, #1
   12914:	mvn	r1, #0
   12918:	eor	r0, r0, r1
   1291c:	str	r0, [sp, #16]
   12920:	ldr	r0, [sp, #16]
   12924:	tst	r0, #1
   12928:	beq	1293c <__assert_fail@plt+0x11e8>
   1292c:	ldr	r0, [sp, #28]
   12930:	add	r0, r0, #8
   12934:	str	r0, [sp, #28]
   12938:	b	128dc <__assert_fail@plt+0x1188>
   1293c:	ldr	r0, [sp, #28]
   12940:	ldr	r0, [r0, #4]
   12944:	movw	r1, #0
   12948:	cmp	r0, r1
   1294c:	beq	1295c <__assert_fail@plt+0x1208>
   12950:	ldr	r0, [sp, #28]
   12954:	ldr	r0, [r0, #4]
   12958:	str	r0, [sp, #32]
   1295c:	movw	r0, #53484	; 0xd0ec
   12960:	movt	r0, #3
   12964:	bl	115f8 <gettext@plt>
   12968:	movw	r1, #51013	; 0xc745
   1296c:	movt	r1, #3
   12970:	movw	r2, #53507	; 0xd103
   12974:	movt	r2, #3
   12978:	bl	1140c <printf@plt>
   1297c:	movw	r1, #5
   12980:	str	r0, [sp, #12]
   12984:	mov	r0, r1
   12988:	movw	r1, #0
   1298c:	bl	116b8 <setlocale@plt>
   12990:	str	r0, [sp, #24]
   12994:	ldr	r0, [sp, #24]
   12998:	movw	r1, #0
   1299c:	cmp	r0, r1
   129a0:	beq	129e0 <__assert_fail@plt+0x128c>
   129a4:	ldr	r0, [sp, #24]
   129a8:	movw	r1, #53547	; 0xd12b
   129ac:	movt	r1, #3
   129b0:	movw	r2, #3
   129b4:	bl	11730 <strncmp@plt>
   129b8:	cmp	r0, #0
   129bc:	beq	129e0 <__assert_fail@plt+0x128c>
   129c0:	movw	r0, #53551	; 0xd12f
   129c4:	movt	r0, #3
   129c8:	bl	115f8 <gettext@plt>
   129cc:	movw	lr, #57788	; 0xe1bc
   129d0:	movt	lr, #4
   129d4:	ldr	r1, [lr]
   129d8:	bl	113c4 <fputs_unlocked@plt>
   129dc:	str	r0, [sp, #8]
   129e0:	movw	r0, #53622	; 0xd176
   129e4:	movt	r0, #3
   129e8:	bl	115f8 <gettext@plt>
   129ec:	ldr	r2, [fp, #-4]
   129f0:	movw	r1, #53507	; 0xd103
   129f4:	movt	r1, #3
   129f8:	bl	1140c <printf@plt>
   129fc:	movw	r1, #53649	; 0xd191
   12a00:	movt	r1, #3
   12a04:	str	r0, [sp, #4]
   12a08:	mov	r0, r1
   12a0c:	bl	115f8 <gettext@plt>
   12a10:	ldr	r1, [sp, #32]
   12a14:	ldr	r2, [sp, #32]
   12a18:	ldr	lr, [fp, #-4]
   12a1c:	cmp	r2, lr
   12a20:	movw	r2, #0
   12a24:	moveq	r2, #1
   12a28:	tst	r2, #1
   12a2c:	movw	r2, #52343	; 0xcc77
   12a30:	movt	r2, #3
   12a34:	movw	lr, #53417	; 0xd0a9
   12a38:	movt	lr, #3
   12a3c:	movne	r2, lr
   12a40:	bl	1140c <printf@plt>
   12a44:	str	r0, [sp]
   12a48:	mov	sp, fp
   12a4c:	pop	{fp, pc}
   12a50:	push	{fp, lr}
   12a54:	mov	fp, sp
   12a58:	sub	sp, sp, #136	; 0x88
   12a5c:	bl	12aa4 <__assert_fail@plt+0x1350>
   12a60:	movw	r0, #0
   12a64:	movw	r1, #57832	; 0xe1e8
   12a68:	movt	r1, #4
   12a6c:	add	r2, sp, #8
   12a70:	bl	1143c <sigprocmask@plt>
   12a74:	movw	r1, #0
   12a78:	and	r1, r1, #1
   12a7c:	str	r0, [sp, #4]
   12a80:	mov	r0, r1
   12a84:	bl	12d30 <__assert_fail@plt+0x15dc>
   12a88:	movw	r0, #2
   12a8c:	add	r1, sp, #8
   12a90:	movw	r2, #0
   12a94:	bl	1143c <sigprocmask@plt>
   12a98:	str	r0, [sp]
   12a9c:	mov	sp, fp
   12aa0:	pop	{fp, pc}
   12aa4:	push	{fp, lr}
   12aa8:	mov	fp, sp
   12aac:	sub	sp, sp, #208	; 0xd0
   12ab0:	movw	r0, #57960	; 0xe268
   12ab4:	movt	r0, #4
   12ab8:	ldr	r0, [r0]
   12abc:	movw	r1, #0
   12ac0:	cmp	r0, r1
   12ac4:	beq	12d28 <__assert_fail@plt+0x15d4>
   12ac8:	movw	r0, #57960	; 0xe268
   12acc:	movt	r0, #4
   12ad0:	ldr	r0, [r0]
   12ad4:	bl	11568 <ferror_unlocked@plt>
   12ad8:	cmp	r0, #0
   12adc:	beq	12b34 <__assert_fail@plt+0x13e0>
   12ae0:	movw	r0, #52344	; 0xcc78
   12ae4:	movt	r0, #3
   12ae8:	bl	115f8 <gettext@plt>
   12aec:	movw	lr, #57964	; 0xe26c
   12af0:	movt	lr, #4
   12af4:	ldr	r1, [lr]
   12af8:	movw	lr, #4
   12afc:	str	r0, [sp, #44]	; 0x2c
   12b00:	mov	r0, lr
   12b04:	bl	1859c <__assert_fail@plt+0x6e48>
   12b08:	movw	r1, #0
   12b0c:	str	r0, [sp, #40]	; 0x28
   12b10:	mov	r0, r1
   12b14:	ldr	r2, [sp, #44]	; 0x2c
   12b18:	ldr	r3, [sp, #40]	; 0x28
   12b1c:	bl	11580 <error@plt>
   12b20:	movw	r0, #57960	; 0xe268
   12b24:	movt	r0, #4
   12b28:	movw	r1, #0
   12b2c:	str	r1, [r0]
   12b30:	bl	1188c <__assert_fail@plt+0x138>
   12b34:	movw	r0, #57960	; 0xe268
   12b38:	movt	r0, #4
   12b3c:	ldr	r0, [r0]
   12b40:	bl	15cdc <__assert_fail@plt+0x4588>
   12b44:	cmp	r0, #0
   12b48:	beq	12ba8 <__assert_fail@plt+0x1454>
   12b4c:	bl	11628 <__errno_location@plt>
   12b50:	ldr	r1, [r0]
   12b54:	movw	r0, #57964	; 0xe26c
   12b58:	movt	r0, #4
   12b5c:	ldr	r2, [r0]
   12b60:	movw	r0, #0
   12b64:	movw	lr, #3
   12b68:	str	r1, [sp, #36]	; 0x24
   12b6c:	mov	r1, lr
   12b70:	bl	186f0 <__assert_fail@plt+0x6f9c>
   12b74:	movw	r1, #0
   12b78:	str	r0, [sp, #32]
   12b7c:	mov	r0, r1
   12b80:	ldr	r1, [sp, #36]	; 0x24
   12b84:	movw	r2, #52883	; 0xce93
   12b88:	movt	r2, #3
   12b8c:	ldr	r3, [sp, #32]
   12b90:	bl	11580 <error@plt>
   12b94:	movw	r0, #57960	; 0xe268
   12b98:	movt	r0, #4
   12b9c:	movw	r1, #0
   12ba0:	str	r1, [r0]
   12ba4:	bl	1188c <__assert_fail@plt+0x138>
   12ba8:	movw	r0, #57968	; 0xe270
   12bac:	movt	r0, #4
   12bb0:	ldr	r1, [r0]
   12bb4:	ldr	r0, [r0, #4]
   12bb8:	orr	r0, r1, r0
   12bbc:	cmp	r0, #0
   12bc0:	bne	12cb4 <__assert_fail@plt+0x1560>
   12bc4:	b	12bc8 <__assert_fail@plt+0x1474>
   12bc8:	movw	r0, #57824	; 0xe1e0
   12bcc:	movt	r0, #4
   12bd0:	ldrb	r0, [r0]
   12bd4:	tst	r0, #1
   12bd8:	beq	12cb4 <__assert_fail@plt+0x1560>
   12bdc:	movw	r0, #0
   12be0:	movw	r1, #57832	; 0xe1e8
   12be4:	movt	r1, #4
   12be8:	add	r2, sp, #80	; 0x50
   12bec:	bl	1143c <sigprocmask@plt>
   12bf0:	movw	r1, #57964	; 0xe26c
   12bf4:	movt	r1, #4
   12bf8:	ldr	r1, [r1]
   12bfc:	str	r0, [sp, #28]
   12c00:	mov	r0, r1
   12c04:	bl	114d8 <unlink@plt>
   12c08:	cmp	r0, #0
   12c0c:	movw	r0, #0
   12c10:	moveq	r0, #1
   12c14:	and	r0, r0, #1
   12c18:	strb	r0, [sp, #79]	; 0x4f
   12c1c:	bl	11628 <__errno_location@plt>
   12c20:	ldr	r0, [r0]
   12c24:	str	r0, [sp, #72]	; 0x48
   12c28:	movw	r0, #57976	; 0xe278
   12c2c:	movt	r0, #4
   12c30:	ldr	r1, [r0]
   12c34:	mvn	r2, #0
   12c38:	add	r1, r1, r2
   12c3c:	str	r1, [r0]
   12c40:	movw	r0, #2
   12c44:	add	r1, sp, #80	; 0x50
   12c48:	movw	r2, #0
   12c4c:	bl	1143c <sigprocmask@plt>
   12c50:	ldrb	r1, [sp, #79]	; 0x4f
   12c54:	tst	r1, #1
   12c58:	str	r0, [sp, #24]
   12c5c:	bne	12cb0 <__assert_fail@plt+0x155c>
   12c60:	ldr	r0, [sp, #72]	; 0x48
   12c64:	cmp	r0, #2
   12c68:	beq	12cb0 <__assert_fail@plt+0x155c>
   12c6c:	ldr	r1, [sp, #72]	; 0x48
   12c70:	movw	r0, #57964	; 0xe26c
   12c74:	movt	r0, #4
   12c78:	ldr	r2, [r0]
   12c7c:	movw	r0, #0
   12c80:	movw	r3, #3
   12c84:	str	r1, [sp, #20]
   12c88:	mov	r1, r3
   12c8c:	bl	186f0 <__assert_fail@plt+0x6f9c>
   12c90:	movw	r1, #0
   12c94:	str	r0, [sp, #16]
   12c98:	mov	r0, r1
   12c9c:	ldr	r1, [sp, #20]
   12ca0:	movw	r2, #52883	; 0xce93
   12ca4:	movt	r2, #3
   12ca8:	ldr	r3, [sp, #16]
   12cac:	bl	11580 <error@plt>
   12cb0:	b	12d18 <__assert_fail@plt+0x15c4>
   12cb4:	movw	r0, #57812	; 0xe1d4
   12cb8:	movt	r0, #4
   12cbc:	ldrb	r0, [r0]
   12cc0:	tst	r0, #1
   12cc4:	bne	12d14 <__assert_fail@plt+0x15c0>
   12cc8:	add	r2, sp, #51	; 0x33
   12ccc:	movw	r0, #57788	; 0xe1bc
   12cd0:	movt	r0, #4
   12cd4:	ldr	r0, [r0]
   12cd8:	movw	r1, #57968	; 0xe270
   12cdc:	movt	r1, #4
   12ce0:	ldr	r3, [r1]
   12ce4:	ldr	r1, [r1, #4]
   12ce8:	str	r0, [sp, #12]
   12cec:	mov	r0, r3
   12cf0:	bl	16198 <__assert_fail@plt+0x4a44>
   12cf4:	ldr	r1, [sp, #12]
   12cf8:	str	r0, [sp, #8]
   12cfc:	mov	r0, r1
   12d00:	movw	r1, #54843	; 0xd63b
   12d04:	movt	r1, #3
   12d08:	ldr	r2, [sp, #8]
   12d0c:	bl	1161c <fprintf@plt>
   12d10:	str	r0, [sp, #4]
   12d14:	b	12d18 <__assert_fail@plt+0x15c4>
   12d18:	movw	r0, #57960	; 0xe268
   12d1c:	movt	r0, #4
   12d20:	movw	r1, #0
   12d24:	str	r1, [r0]
   12d28:	mov	sp, fp
   12d2c:	pop	{fp, pc}
   12d30:	push	{fp, lr}
   12d34:	mov	fp, sp
   12d38:	sub	sp, sp, #24
   12d3c:	and	r0, r0, #1
   12d40:	strb	r0, [fp, #-1]
   12d44:	movw	r0, #57813	; 0xe1d5
   12d48:	movt	r0, #4
   12d4c:	ldrb	r0, [r0]
   12d50:	tst	r0, #1
   12d54:	bne	12d5c <__assert_fail@plt+0x1608>
   12d58:	b	12e14 <__assert_fail@plt+0x16c0>
   12d5c:	movw	r0, #57976	; 0xe278
   12d60:	movt	r0, #4
   12d64:	ldr	r0, [r0]
   12d68:	str	r0, [fp, #-8]
   12d6c:	ldr	r0, [fp, #-8]
   12d70:	mvn	r1, #0
   12d74:	add	r0, r0, r1
   12d78:	str	r0, [fp, #-8]
   12d7c:	movw	r1, #0
   12d80:	cmp	r1, r0
   12d84:	bgt	12e04 <__assert_fail@plt+0x16b0>
   12d88:	ldr	r0, [fp, #-8]
   12d8c:	bl	12e1c <__assert_fail@plt+0x16c8>
   12d90:	str	r0, [sp, #12]
   12d94:	ldr	r0, [sp, #12]
   12d98:	bl	114d8 <unlink@plt>
   12d9c:	cmp	r0, #0
   12da0:	beq	12e00 <__assert_fail@plt+0x16ac>
   12da4:	bl	11628 <__errno_location@plt>
   12da8:	ldr	r0, [r0]
   12dac:	cmp	r0, #2
   12db0:	beq	12e00 <__assert_fail@plt+0x16ac>
   12db4:	ldrb	r0, [fp, #-1]
   12db8:	tst	r0, #1
   12dbc:	bne	12e00 <__assert_fail@plt+0x16ac>
   12dc0:	bl	11628 <__errno_location@plt>
   12dc4:	ldr	r1, [r0]
   12dc8:	ldr	r2, [sp, #12]
   12dcc:	movw	r0, #0
   12dd0:	movw	lr, #3
   12dd4:	str	r1, [sp, #8]
   12dd8:	mov	r1, lr
   12ddc:	bl	186f0 <__assert_fail@plt+0x6f9c>
   12de0:	movw	r1, #0
   12de4:	str	r0, [sp, #4]
   12de8:	mov	r0, r1
   12dec:	ldr	r1, [sp, #8]
   12df0:	movw	r2, #52883	; 0xce93
   12df4:	movt	r2, #3
   12df8:	ldr	r3, [sp, #4]
   12dfc:	bl	11580 <error@plt>
   12e00:	b	12d6c <__assert_fail@plt+0x1618>
   12e04:	movw	r0, #57976	; 0xe278
   12e08:	movt	r0, #4
   12e0c:	movw	r1, #0
   12e10:	str	r1, [r0]
   12e14:	mov	sp, fp
   12e18:	pop	{fp, pc}
   12e1c:	push	{fp, lr}
   12e20:	mov	fp, sp
   12e24:	sub	sp, sp, #24
   12e28:	str	r0, [fp, #-4]
   12e2c:	movw	r0, #57828	; 0xe1e4
   12e30:	movt	r0, #4
   12e34:	ldr	r0, [r0]
   12e38:	movw	r1, #57816	; 0xe1d8
   12e3c:	movt	r1, #4
   12e40:	ldr	r1, [r1]
   12e44:	bl	11550 <strcpy@plt>
   12e48:	movw	r1, #57820	; 0xe1dc
   12e4c:	movt	r1, #4
   12e50:	ldr	r1, [r1]
   12e54:	movw	lr, #0
   12e58:	cmp	r1, lr
   12e5c:	str	r0, [fp, #-8]
   12e60:	beq	12eac <__assert_fail@plt+0x1758>
   12e64:	movw	r0, #57828	; 0xe1e4
   12e68:	movt	r0, #4
   12e6c:	ldr	r0, [r0]
   12e70:	movw	r1, #57816	; 0xe1d8
   12e74:	movt	r1, #4
   12e78:	ldr	r1, [r1]
   12e7c:	str	r0, [sp, #12]
   12e80:	mov	r0, r1
   12e84:	bl	11604 <strlen@plt>
   12e88:	ldr	r1, [sp, #12]
   12e8c:	add	r0, r1, r0
   12e90:	movw	r1, #57820	; 0xe1dc
   12e94:	movt	r1, #4
   12e98:	ldr	r1, [r1]
   12e9c:	ldr	r2, [fp, #-4]
   12ea0:	bl	116f4 <sprintf@plt>
   12ea4:	str	r0, [sp, #8]
   12ea8:	b	12ef8 <__assert_fail@plt+0x17a4>
   12eac:	movw	r0, #57828	; 0xe1e4
   12eb0:	movt	r0, #4
   12eb4:	ldr	r0, [r0]
   12eb8:	movw	r1, #57816	; 0xe1d8
   12ebc:	movt	r1, #4
   12ec0:	ldr	r1, [r1]
   12ec4:	str	r0, [sp, #4]
   12ec8:	mov	r0, r1
   12ecc:	bl	11604 <strlen@plt>
   12ed0:	ldr	r1, [sp, #4]
   12ed4:	add	r0, r1, r0
   12ed8:	movw	r1, #57688	; 0xe158
   12edc:	movt	r1, #4
   12ee0:	ldr	r2, [r1]
   12ee4:	ldr	r3, [fp, #-4]
   12ee8:	movw	r1, #52363	; 0xcc8b
   12eec:	movt	r1, #3
   12ef0:	bl	116f4 <sprintf@plt>
   12ef4:	str	r0, [sp]
   12ef8:	movw	r0, #57828	; 0xe1e4
   12efc:	movt	r0, #4
   12f00:	ldr	r0, [r0]
   12f04:	mov	sp, fp
   12f08:	pop	{fp, pc}
   12f0c:	sub	sp, sp, #20
   12f10:	str	r0, [sp, #16]
   12f14:	str	r1, [sp, #12]
   12f18:	movw	r0, #0
   12f1c:	str	r0, [sp, #8]
   12f20:	str	r0, [sp, #4]
   12f24:	ldr	r0, [sp, #16]
   12f28:	ldr	r1, [sp, #4]
   12f2c:	ldrb	r0, [r0, r1]
   12f30:	sub	r0, r0, #35	; 0x23
   12f34:	cmp	r0, #13
   12f38:	str	r0, [sp]
   12f3c:	bhi	12fac <__assert_fail@plt+0x1858>
   12f40:	add	r0, pc, #8
   12f44:	ldr	r1, [sp]
   12f48:	ldr	r0, [r0, r1, lsl #2]
   12f4c:	mov	pc, r0
   12f50:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12f54:	andeq	r2, r1, ip, lsr #31
   12f58:	andeq	r2, r1, ip, lsr #31
   12f5c:	andeq	r2, r1, ip, lsr #31
   12f60:	andeq	r2, r1, ip, lsl #31
   12f64:	andeq	r2, r1, ip, lsr #31
   12f68:	andeq	r2, r1, ip, lsr #31
   12f6c:	andeq	r2, r1, ip, lsr #31
   12f70:	andeq	r2, r1, ip, lsr #31
   12f74:	andeq	r2, r1, ip, lsr #31
   12f78:	andeq	r2, r1, r8, lsl #31
   12f7c:	andeq	r2, r1, ip, lsr #31
   12f80:	andeq	r2, r1, ip, lsr #31
   12f84:	andeq	r2, r1, r8, lsl #31
   12f88:	b	12fc4 <__assert_fail@plt+0x1870>
   12f8c:	ldr	r0, [sp, #8]
   12f90:	orr	r0, r0, #1
   12f94:	str	r0, [sp, #8]
   12f98:	b	12fc4 <__assert_fail@plt+0x1870>
   12f9c:	ldr	r0, [sp, #8]
   12fa0:	orr	r0, r0, #2
   12fa4:	str	r0, [sp, #8]
   12fa8:	b	12fc4 <__assert_fail@plt+0x1870>
   12fac:	ldr	r0, [sp, #8]
   12fb0:	ldr	r1, [sp, #12]
   12fb4:	str	r0, [r1]
   12fb8:	ldr	r0, [sp, #4]
   12fbc:	add	sp, sp, #20
   12fc0:	bx	lr
   12fc4:	b	12fc8 <__assert_fail@plt+0x1874>
   12fc8:	ldr	r0, [sp, #4]
   12fcc:	add	r0, r0, #1
   12fd0:	str	r0, [sp, #4]
   12fd4:	b	12f24 <__assert_fail@plt+0x17d0>
   12fd8:	push	{fp, lr}
   12fdc:	mov	fp, sp
   12fe0:	sub	sp, sp, #56	; 0x38
   12fe4:	str	r0, [fp, #-4]
   12fe8:	str	r1, [fp, #-8]
   12fec:	ldr	r0, [fp, #-4]
   12ff0:	ldrb	r0, [r0]
   12ff4:	strb	r0, [fp, #-9]
   12ff8:	mov	r0, #1
   12ffc:	str	r0, [fp, #-16]
   13000:	ldrb	r0, [fp, #-9]
   13004:	mov	r1, r0
   13008:	cmp	r0, #0
   1300c:	str	r1, [fp, #-20]	; 0xffffffec
   13010:	beq	13098 <__assert_fail@plt+0x1944>
   13014:	b	13018 <__assert_fail@plt+0x18c4>
   13018:	ldr	r0, [fp, #-20]	; 0xffffffec
   1301c:	cmp	r0, #88	; 0x58
   13020:	beq	1308c <__assert_fail@plt+0x1938>
   13024:	b	13028 <__assert_fail@plt+0x18d4>
   13028:	ldr	r0, [fp, #-20]	; 0xffffffec
   1302c:	cmp	r0, #100	; 0x64
   13030:	beq	13078 <__assert_fail@plt+0x1924>
   13034:	b	13038 <__assert_fail@plt+0x18e4>
   13038:	ldr	r0, [fp, #-20]	; 0xffffffec
   1303c:	cmp	r0, #105	; 0x69
   13040:	beq	13078 <__assert_fail@plt+0x1924>
   13044:	b	13048 <__assert_fail@plt+0x18f4>
   13048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1304c:	cmp	r0, #111	; 0x6f
   13050:	beq	1308c <__assert_fail@plt+0x1938>
   13054:	b	13058 <__assert_fail@plt+0x1904>
   13058:	ldr	r0, [fp, #-20]	; 0xffffffec
   1305c:	cmp	r0, #117	; 0x75
   13060:	beq	1307c <__assert_fail@plt+0x1928>
   13064:	b	13068 <__assert_fail@plt+0x1914>
   13068:	ldr	r0, [fp, #-20]	; 0xffffffec
   1306c:	cmp	r0, #120	; 0x78
   13070:	beq	1308c <__assert_fail@plt+0x1938>
   13074:	b	130bc <__assert_fail@plt+0x1968>
   13078:	b	13134 <__assert_fail@plt+0x19e0>
   1307c:	ldr	r0, [fp, #-4]
   13080:	movw	r1, #100	; 0x64
   13084:	strb	r1, [r0]
   13088:	b	13134 <__assert_fail@plt+0x19e0>
   1308c:	movw	r0, #2
   13090:	str	r0, [fp, #-16]
   13094:	b	13134 <__assert_fail@plt+0x19e0>
   13098:	movw	r0, #52562	; 0xcd52
   1309c:	movt	r0, #3
   130a0:	bl	115f8 <gettext@plt>
   130a4:	movw	lr, #1
   130a8:	str	r0, [fp, #-24]	; 0xffffffe8
   130ac:	mov	r0, lr
   130b0:	movw	r1, #0
   130b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   130b8:	bl	11580 <error@plt>
   130bc:	bl	115e0 <__ctype_b_loc@plt>
   130c0:	ldr	r0, [r0]
   130c4:	ldrb	lr, [fp, #-9]
   130c8:	mov	r1, lr
   130cc:	add	r0, r0, lr, lsl #1
   130d0:	ldrh	r0, [r0]
   130d4:	and	r0, r0, #16384	; 0x4000
   130d8:	cmp	r0, #0
   130dc:	str	r1, [sp, #28]
   130e0:	beq	1310c <__assert_fail@plt+0x19b8>
   130e4:	movw	r0, #52601	; 0xcd79
   130e8:	movt	r0, #3
   130ec:	bl	115f8 <gettext@plt>
   130f0:	ldrb	r3, [fp, #-9]
   130f4:	movw	lr, #1
   130f8:	str	r0, [sp, #24]
   130fc:	mov	r0, lr
   13100:	movw	r1, #0
   13104:	ldr	r2, [sp, #24]
   13108:	bl	11580 <error@plt>
   1310c:	movw	r0, #52644	; 0xcda4
   13110:	movt	r0, #3
   13114:	bl	115f8 <gettext@plt>
   13118:	ldrb	r3, [fp, #-9]
   1311c:	movw	lr, #1
   13120:	str	r0, [sp, #20]
   13124:	mov	r0, lr
   13128:	movw	r1, #0
   1312c:	ldr	r2, [sp, #20]
   13130:	bl	11580 <error@plt>
   13134:	ldr	r0, [fp, #-8]
   13138:	ldr	r1, [fp, #-16]
   1313c:	mvn	r2, #0
   13140:	eor	r1, r1, r2
   13144:	and	r0, r0, r1
   13148:	cmp	r0, #0
   1314c:	beq	131c4 <__assert_fail@plt+0x1a70>
   13150:	movw	r0, #52690	; 0xcdd2
   13154:	movt	r0, #3
   13158:	bl	115f8 <gettext@plt>
   1315c:	ldr	lr, [fp, #-8]
   13160:	ldr	r1, [fp, #-16]
   13164:	mvn	r2, #0
   13168:	eor	r1, r1, r2
   1316c:	and	r1, lr, r1
   13170:	and	r1, r1, #2
   13174:	cmp	r1, #0
   13178:	movw	r1, #0
   1317c:	movne	r1, #1
   13180:	tst	r1, #1
   13184:	movw	r1, #35	; 0x23
   13188:	moveq	r1, #39	; 0x27
   1318c:	ldrb	r2, [fp, #-9]
   13190:	movw	lr, #1
   13194:	str	r0, [sp, #16]
   13198:	mov	r0, lr
   1319c:	movw	lr, #0
   131a0:	str	r1, [sp, #12]
   131a4:	mov	r1, lr
   131a8:	ldr	lr, [sp, #16]
   131ac:	str	r2, [sp, #8]
   131b0:	mov	r2, lr
   131b4:	ldr	r3, [sp, #12]
   131b8:	ldr	ip, [sp, #8]
   131bc:	str	ip, [sp]
   131c0:	bl	11580 <error@plt>
   131c4:	mov	sp, fp
   131c8:	pop	{fp, pc}
   131cc:	push	{fp, lr}
   131d0:	mov	fp, sp
   131d4:	sub	sp, sp, #48	; 0x30
   131d8:	str	r0, [fp, #-4]
   131dc:	and	r0, r1, #1
   131e0:	strb	r0, [fp, #-5]
   131e4:	str	r2, [fp, #-12]
   131e8:	ldr	r0, [fp, #-12]
   131ec:	ldrb	r0, [r0]
   131f0:	strb	r0, [fp, #-17]	; 0xffffffef
   131f4:	ldr	r0, [fp, #-12]
   131f8:	add	r0, r0, #1
   131fc:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13200:	bl	116dc <strrchr@plt>
   13204:	str	r0, [sp, #24]
   13208:	ldr	r0, [sp, #24]
   1320c:	movw	r1, #0
   13210:	cmp	r0, r1
   13214:	bne	13248 <__assert_fail@plt+0x1af4>
   13218:	movw	r0, #52947	; 0xced3
   1321c:	movt	r0, #3
   13220:	bl	115f8 <gettext@plt>
   13224:	ldr	r3, [fp, #-12]
   13228:	ldrb	lr, [fp, #-17]	; 0xffffffef
   1322c:	movw	r1, #1
   13230:	str	r0, [sp, #12]
   13234:	mov	r0, r1
   13238:	movw	r1, #0
   1323c:	ldr	r2, [sp, #12]
   13240:	str	lr, [sp]
   13244:	bl	11580 <error@plt>
   13248:	ldr	r0, [sp, #24]
   1324c:	ldr	r1, [fp, #-12]
   13250:	sub	r0, r0, r1
   13254:	sub	r0, r0, #1
   13258:	str	r0, [fp, #-16]
   1325c:	bl	13368 <__assert_fail@plt+0x1c14>
   13260:	str	r0, [sp, #20]
   13264:	ldr	r0, [fp, #-4]
   13268:	ldr	r1, [sp, #20]
   1326c:	str	r0, [r1, #24]
   13270:	ldrb	r0, [fp, #-5]
   13274:	ldr	r1, [sp, #20]
   13278:	and	r0, r0, #1
   1327c:	strb	r0, [r1, #29]
   13280:	ldr	r0, [sp, #20]
   13284:	movw	r1, #1
   13288:	strb	r1, [r0, #30]
   1328c:	ldr	r0, [sp, #20]
   13290:	movw	r1, #0
   13294:	str	r1, [r0, #32]
   13298:	ldr	r0, [sp, #20]
   1329c:	str	r1, [r0, #36]	; 0x24
   132a0:	movw	r0, #256	; 0x100
   132a4:	bl	31404 <__assert_fail@plt+0x1fcb0>
   132a8:	ldr	r1, [sp, #20]
   132ac:	str	r0, [r1, #48]	; 0x30
   132b0:	ldr	r0, [sp, #20]
   132b4:	movw	r1, #0
   132b8:	str	r1, [r0, #52]	; 0x34
   132bc:	movw	r0, #58356	; 0xe3f4
   132c0:	movt	r0, #4
   132c4:	movw	r1, #710	; 0x2c6
   132c8:	str	r1, [r0]
   132cc:	ldr	r0, [fp, #-12]
   132d0:	add	r0, r0, #1
   132d4:	ldr	r1, [fp, #-16]
   132d8:	ldr	lr, [sp, #20]
   132dc:	add	r2, lr, #32
   132e0:	bl	18a6c <__assert_fail@plt+0x7318>
   132e4:	str	r0, [sp, #16]
   132e8:	ldr	r0, [sp, #16]
   132ec:	movw	r1, #0
   132f0:	cmp	r0, r1
   132f4:	beq	13338 <__assert_fail@plt+0x1be4>
   132f8:	movw	r0, #52982	; 0xcef6
   132fc:	movt	r0, #3
   13300:	bl	115f8 <gettext@plt>
   13304:	ldr	lr, [fp, #-12]
   13308:	str	r0, [sp, #8]
   1330c:	mov	r0, lr
   13310:	bl	18934 <__assert_fail@plt+0x71e0>
   13314:	ldr	lr, [sp, #16]
   13318:	movw	r1, #0
   1331c:	str	r0, [sp, #4]
   13320:	mov	r0, r1
   13324:	ldr	r2, [sp, #8]
   13328:	ldr	r3, [sp, #4]
   1332c:	str	lr, [sp]
   13330:	bl	11580 <error@plt>
   13334:	bl	1188c <__assert_fail@plt+0x138>
   13338:	ldr	r0, [sp, #24]
   1333c:	ldrsb	r0, [r0, #1]
   13340:	cmp	r0, #0
   13344:	beq	1335c <__assert_fail@plt+0x1c08>
   13348:	ldr	r0, [sp, #20]
   1334c:	ldr	r1, [fp, #-12]
   13350:	ldr	r2, [sp, #24]
   13354:	add	r2, r2, #1
   13358:	bl	135b4 <__assert_fail@plt+0x1e60>
   1335c:	ldr	r0, [sp, #20]
   13360:	mov	sp, fp
   13364:	pop	{fp, pc}
   13368:	push	{fp, lr}
   1336c:	mov	fp, sp
   13370:	sub	sp, sp, #8
   13374:	movw	r0, #57808	; 0xe1d0
   13378:	movt	r0, #4
   1337c:	ldr	r0, [r0]
   13380:	movw	r1, #57992	; 0xe288
   13384:	movt	r1, #4
   13388:	ldr	r1, [r1]
   1338c:	cmp	r0, r1
   13390:	bne	133c8 <__assert_fail@plt+0x1c74>
   13394:	movw	r0, #57804	; 0xe1cc
   13398:	movt	r0, #4
   1339c:	ldr	r0, [r0]
   133a0:	movw	r1, #57992	; 0xe288
   133a4:	movt	r1, #4
   133a8:	movw	r2, #1
   133ac:	mvn	r3, #0
   133b0:	movw	ip, #64	; 0x40
   133b4:	str	ip, [sp]
   133b8:	bl	316b8 <__assert_fail@plt+0x1ff64>
   133bc:	movw	r1, #57804	; 0xe1cc
   133c0:	movt	r1, #4
   133c4:	str	r0, [r1]
   133c8:	movw	r0, #57804	; 0xe1cc
   133cc:	movt	r0, #4
   133d0:	ldr	r0, [r0]
   133d4:	movw	r1, #57808	; 0xe1d0
   133d8:	movt	r1, #4
   133dc:	ldr	r2, [r1]
   133e0:	add	r3, r2, #1
   133e4:	str	r3, [r1]
   133e8:	add	r0, r0, r2, lsl #6
   133ec:	str	r0, [sp, #4]
   133f0:	ldr	r0, [sp, #4]
   133f4:	mov	r1, #0
   133f8:	strb	r1, [r0, #30]
   133fc:	ldr	r0, [sp, #4]
   13400:	str	r1, [r0, #20]
   13404:	str	r1, [r0, #16]
   13408:	ldr	r0, [sp, #4]
   1340c:	strb	r1, [r0, #28]
   13410:	ldr	r0, [sp, #4]
   13414:	str	r1, [r0, #12]
   13418:	str	r1, [r0, #8]
   1341c:	ldr	r0, [sp, #4]
   13420:	str	r1, [r0, #4]
   13424:	str	r1, [r0]
   13428:	ldr	r0, [sp, #4]
   1342c:	mov	sp, fp
   13430:	pop	{fp, pc}
   13434:	push	{fp, lr}
   13438:	mov	fp, sp
   1343c:	sub	sp, sp, #48	; 0x30
   13440:	str	r0, [fp, #-4]
   13444:	str	r1, [fp, #-8]
   13448:	str	r2, [fp, #-12]
   1344c:	ldr	r0, [fp, #-12]
   13450:	ldr	r1, [fp, #-12]
   13454:	str	r0, [sp, #20]
   13458:	mov	r0, r1
   1345c:	bl	11604 <strlen@plt>
   13460:	ldr	r1, [sp, #20]
   13464:	add	r0, r1, r0
   13468:	mvn	r1, #0
   1346c:	add	r0, r0, r1
   13470:	str	r0, [fp, #-16]
   13474:	ldr	r0, [fp, #-16]
   13478:	ldrb	r0, [r0]
   1347c:	cmp	r0, #125	; 0x7d
   13480:	beq	134bc <__assert_fail@plt+0x1d68>
   13484:	movw	r0, #53054	; 0xcf3e
   13488:	movt	r0, #3
   1348c:	bl	115f8 <gettext@plt>
   13490:	ldr	lr, [fp, #-12]
   13494:	str	r0, [sp, #16]
   13498:	mov	r0, lr
   1349c:	bl	18934 <__assert_fail@plt+0x71e0>
   134a0:	movw	lr, #1
   134a4:	str	r0, [sp, #12]
   134a8:	mov	r0, lr
   134ac:	movw	r1, #0
   134b0:	ldr	r2, [sp, #16]
   134b4:	ldr	r3, [sp, #12]
   134b8:	bl	11580 <error@plt>
   134bc:	ldr	r0, [fp, #-16]
   134c0:	movw	r1, #0
   134c4:	strb	r1, [r0]
   134c8:	ldr	r0, [fp, #-12]
   134cc:	add	r0, r0, #1
   134d0:	ldr	r1, [fp, #-16]
   134d4:	mvn	r2, #0
   134d8:	add	r1, r1, r2
   134dc:	cmp	r0, r1
   134e0:	bne	13504 <__assert_fail@plt+0x1db0>
   134e4:	ldr	r0, [fp, #-12]
   134e8:	ldrb	r0, [r0, #1]
   134ec:	cmp	r0, #42	; 0x2a
   134f0:	bne	13504 <__assert_fail@plt+0x1db0>
   134f4:	ldr	r0, [fp, #-8]
   134f8:	movw	r1, #1
   134fc:	strb	r1, [r0, #28]
   13500:	b	135a0 <__assert_fail@plt+0x1e4c>
   13504:	ldr	r0, [fp, #-12]
   13508:	add	r0, r0, #1
   1350c:	movw	r1, #0
   13510:	movw	r2, #10
   13514:	add	r3, sp, #24
   13518:	movw	ip, #52343	; 0xcc77
   1351c:	movt	ip, #3
   13520:	str	ip, [sp]
   13524:	bl	367e0 <__assert_fail@plt+0x2508c>
   13528:	cmp	r0, #0
   1352c:	bne	13540 <__assert_fail@plt+0x1dec>
   13530:	ldr	r0, [sp, #28]
   13534:	cmn	r0, #1
   13538:	bgt	1358c <__assert_fail@plt+0x1e38>
   1353c:	b	13540 <__assert_fail@plt+0x1dec>
   13540:	movw	r0, #53090	; 0xcf62
   13544:	movt	r0, #3
   13548:	bl	115f8 <gettext@plt>
   1354c:	movw	lr, #57800	; 0xe1c8
   13550:	movt	lr, #4
   13554:	ldr	lr, [lr]
   13558:	ldr	r1, [fp, #-4]
   1355c:	add	r1, lr, r1, lsl #2
   13560:	ldr	r1, [r1]
   13564:	str	r0, [sp, #8]
   13568:	mov	r0, r1
   1356c:	bl	18934 <__assert_fail@plt+0x71e0>
   13570:	movw	r1, #1
   13574:	str	r0, [sp, #4]
   13578:	mov	r0, r1
   1357c:	movw	r1, #0
   13580:	ldr	r2, [sp, #8]
   13584:	ldr	r3, [sp, #4]
   13588:	bl	11580 <error@plt>
   1358c:	ldr	r0, [sp, #24]
   13590:	ldr	r1, [sp, #28]
   13594:	ldr	r2, [fp, #-8]
   13598:	str	r1, [r2, #20]
   1359c:	str	r0, [r2, #16]
   135a0:	ldr	r0, [fp, #-16]
   135a4:	movw	r1, #125	; 0x7d
   135a8:	strb	r1, [r0]
   135ac:	mov	sp, fp
   135b0:	pop	{fp, pc}
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	sub	sp, sp, #24
   135c0:	str	r0, [fp, #-4]
   135c4:	str	r1, [fp, #-8]
   135c8:	str	r2, [sp, #12]
   135cc:	ldr	r0, [sp, #12]
   135d0:	ldr	r3, [fp, #-4]
   135d4:	movw	r1, #0
   135d8:	movw	r2, #10
   135dc:	movw	ip, #52343	; 0xcc77
   135e0:	movt	ip, #3
   135e4:	str	ip, [sp]
   135e8:	bl	344ac <__assert_fail@plt+0x22d58>
   135ec:	cmp	r0, #0
   135f0:	beq	1362c <__assert_fail@plt+0x1ed8>
   135f4:	movw	r0, #53017	; 0xcf19
   135f8:	movt	r0, #3
   135fc:	bl	115f8 <gettext@plt>
   13600:	ldr	lr, [fp, #-8]
   13604:	str	r0, [sp, #8]
   13608:	mov	r0, lr
   1360c:	bl	18934 <__assert_fail@plt+0x71e0>
   13610:	movw	lr, #1
   13614:	str	r0, [sp, #4]
   13618:	mov	r0, lr
   1361c:	movw	r1, #0
   13620:	ldr	r2, [sp, #8]
   13624:	ldr	r3, [sp, #4]
   13628:	bl	11580 <error@plt>
   1362c:	mov	sp, fp
   13630:	pop	{fp, pc}
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	sub	sp, sp, #80	; 0x50
   13640:	str	r0, [fp, #-4]
   13644:	str	r3, [fp, #-12]
   13648:	str	r2, [fp, #-16]
   1364c:	ldr	r0, [fp, #-4]
   13650:	ldrb	r0, [r0, #29]
   13654:	and	r0, r0, #1
   13658:	strb	r0, [fp, #-33]	; 0xffffffdf
   1365c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   13660:	tst	r0, #1
   13664:	bne	1366c <__assert_fail@plt+0x1f18>
   13668:	bl	13b4c <__assert_fail@plt+0x23f8>
   1366c:	ldr	r0, [fp, #-4]
   13670:	ldr	r0, [r0, #4]
   13674:	cmp	r0, #0
   13678:	blt	137f4 <__assert_fail@plt+0x20a0>
   1367c:	b	13680 <__assert_fail@plt+0x1f2c>
   13680:	b	13684 <__assert_fail@plt+0x1f30>
   13684:	movw	r0, #58000	; 0xe290
   13688:	movt	r0, #4
   1368c:	ldr	r1, [r0]
   13690:	ldr	r2, [r0, #4]
   13694:	adds	r1, r1, #1
   13698:	adc	r2, r2, #0
   1369c:	str	r1, [r0]
   136a0:	str	r2, [r0, #4]
   136a4:	mov	r0, r1
   136a8:	mov	r1, r2
   136ac:	bl	13ce0 <__assert_fail@plt+0x258c>
   136b0:	str	r0, [fp, #-20]	; 0xffffffec
   136b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b8:	movw	r1, #0
   136bc:	cmp	r0, r1
   136c0:	bne	13714 <__assert_fail@plt+0x1fc0>
   136c4:	ldr	r0, [fp, #-4]
   136c8:	ldrb	r0, [r0, #28]
   136cc:	tst	r0, #1
   136d0:	beq	136f0 <__assert_fail@plt+0x1f9c>
   136d4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   136d8:	tst	r0, #1
   136dc:	bne	136e8 <__assert_fail@plt+0x1f94>
   136e0:	bl	13cac <__assert_fail@plt+0x2558>
   136e4:	bl	12aa4 <__assert_fail@plt+0x1350>
   136e8:	movw	r0, #0
   136ec:	bl	115ec <exit@plt>
   136f0:	ldr	r0, [fp, #-4]
   136f4:	ldr	r2, [fp, #-16]
   136f8:	ldr	r3, [fp, #-12]
   136fc:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   13700:	and	r1, r1, #1
   13704:	mov	ip, sp
   13708:	str	r1, [ip]
   1370c:	bl	13e88 <__assert_fail@plt+0x2734>
   13710:	b	13714 <__assert_fail@plt+0x1fc0>
   13714:	ldr	r0, [fp, #-20]	; 0xffffffec
   13718:	ldr	r0, [r0]
   1371c:	str	r0, [fp, #-24]	; 0xffffffe8
   13720:	ldr	r0, [fp, #-20]	; 0xffffffec
   13724:	ldr	r0, [r0, #4]
   13728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1372c:	sub	r1, r1, #1
   13730:	add	r0, r0, r1
   13734:	ldrb	r0, [r0]
   13738:	cmp	r0, #10
   1373c:	bne	13750 <__assert_fail@plt+0x1ffc>
   13740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13744:	mvn	r1, #0
   13748:	add	r0, r0, r1
   1374c:	str	r0, [fp, #-24]	; 0xffffffe8
   13750:	ldr	r0, [fp, #-4]
   13754:	add	r0, r0, #32
   13758:	ldr	r1, [fp, #-20]	; 0xffffffec
   1375c:	ldr	r1, [r1, #4]
   13760:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13768:	movw	ip, #0
   1376c:	str	r3, [sp, #36]	; 0x24
   13770:	mov	r3, ip
   13774:	ldr	lr, [sp, #36]	; 0x24
   13778:	str	lr, [sp]
   1377c:	str	ip, [sp, #4]
   13780:	bl	1b3d4 <__assert_fail@plt+0x9c80>
   13784:	str	r0, [sp, #40]	; 0x28
   13788:	ldr	r0, [sp, #40]	; 0x28
   1378c:	cmn	r0, #2
   13790:	bne	137bc <__assert_fail@plt+0x2068>
   13794:	movw	r0, #53132	; 0xcf8c
   13798:	movt	r0, #3
   1379c:	bl	115f8 <gettext@plt>
   137a0:	movw	lr, #0
   137a4:	str	r0, [sp, #32]
   137a8:	mov	r0, lr
   137ac:	mov	r1, lr
   137b0:	ldr	r2, [sp, #32]
   137b4:	bl	11580 <error@plt>
   137b8:	bl	1188c <__assert_fail@plt+0x138>
   137bc:	ldr	r0, [sp, #40]	; 0x28
   137c0:	cmn	r0, #1
   137c4:	bne	137e8 <__assert_fail@plt+0x2094>
   137c8:	bl	13fd0 <__assert_fail@plt+0x287c>
   137cc:	str	r0, [fp, #-20]	; 0xffffffec
   137d0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   137d4:	tst	r0, #1
   137d8:	bne	137e4 <__assert_fail@plt+0x2090>
   137dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   137e0:	bl	1418c <__assert_fail@plt+0x2a38>
   137e4:	b	137ec <__assert_fail@plt+0x2098>
   137e8:	b	137f0 <__assert_fail@plt+0x209c>
   137ec:	b	13684 <__assert_fail@plt+0x1f30>
   137f0:	b	13948 <__assert_fail@plt+0x21f4>
   137f4:	b	137f8 <__assert_fail@plt+0x20a4>
   137f8:	movw	r0, #58000	; 0xe290
   137fc:	movt	r0, #4
   13800:	ldr	r1, [r0]
   13804:	ldr	r2, [r0, #4]
   13808:	adds	r1, r1, #1
   1380c:	adc	r2, r2, #0
   13810:	str	r1, [r0]
   13814:	str	r2, [r0, #4]
   13818:	mov	r0, r1
   1381c:	mov	r1, r2
   13820:	bl	13ce0 <__assert_fail@plt+0x258c>
   13824:	str	r0, [fp, #-20]	; 0xffffffec
   13828:	ldr	r0, [fp, #-20]	; 0xffffffec
   1382c:	movw	r1, #0
   13830:	cmp	r0, r1
   13834:	bne	13888 <__assert_fail@plt+0x2134>
   13838:	ldr	r0, [fp, #-4]
   1383c:	ldrb	r0, [r0, #28]
   13840:	tst	r0, #1
   13844:	beq	13864 <__assert_fail@plt+0x2110>
   13848:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   1384c:	tst	r0, #1
   13850:	bne	1385c <__assert_fail@plt+0x2108>
   13854:	bl	13cac <__assert_fail@plt+0x2558>
   13858:	bl	12aa4 <__assert_fail@plt+0x1350>
   1385c:	movw	r0, #0
   13860:	bl	115ec <exit@plt>
   13864:	ldr	r0, [fp, #-4]
   13868:	ldr	r2, [fp, #-16]
   1386c:	ldr	r3, [fp, #-12]
   13870:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   13874:	and	r1, r1, #1
   13878:	mov	ip, sp
   1387c:	str	r1, [ip]
   13880:	bl	13e88 <__assert_fail@plt+0x2734>
   13884:	b	13888 <__assert_fail@plt+0x2134>
   13888:	ldr	r0, [fp, #-20]	; 0xffffffec
   1388c:	ldr	r0, [r0]
   13890:	str	r0, [fp, #-24]	; 0xffffffe8
   13894:	ldr	r0, [fp, #-20]	; 0xffffffec
   13898:	ldr	r0, [r0, #4]
   1389c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138a0:	sub	r1, r1, #1
   138a4:	add	r0, r0, r1
   138a8:	ldrb	r0, [r0]
   138ac:	cmp	r0, #10
   138b0:	bne	138c4 <__assert_fail@plt+0x2170>
   138b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138b8:	mvn	r1, #0
   138bc:	add	r0, r0, r1
   138c0:	str	r0, [fp, #-24]	; 0xffffffe8
   138c4:	ldr	r0, [fp, #-4]
   138c8:	add	r0, r0, #32
   138cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   138d0:	ldr	r1, [r1, #4]
   138d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   138d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138dc:	movw	ip, #0
   138e0:	str	r3, [sp, #28]
   138e4:	mov	r3, ip
   138e8:	ldr	lr, [sp, #28]
   138ec:	str	lr, [sp]
   138f0:	str	ip, [sp, #4]
   138f4:	bl	1b3d4 <__assert_fail@plt+0x9c80>
   138f8:	str	r0, [sp, #40]	; 0x28
   138fc:	ldr	r0, [sp, #40]	; 0x28
   13900:	cmn	r0, #2
   13904:	bne	13930 <__assert_fail@plt+0x21dc>
   13908:	movw	r0, #53132	; 0xcf8c
   1390c:	movt	r0, #3
   13910:	bl	115f8 <gettext@plt>
   13914:	movw	lr, #0
   13918:	str	r0, [sp, #24]
   1391c:	mov	r0, lr
   13920:	mov	r1, lr
   13924:	ldr	r2, [sp, #24]
   13928:	bl	11580 <error@plt>
   1392c:	bl	1188c <__assert_fail@plt+0x138>
   13930:	ldr	r0, [sp, #40]	; 0x28
   13934:	cmn	r0, #1
   13938:	beq	13940 <__assert_fail@plt+0x21ec>
   1393c:	b	13944 <__assert_fail@plt+0x21f0>
   13940:	b	137f8 <__assert_fail@plt+0x20a4>
   13944:	b	13948 <__assert_fail@plt+0x21f4>
   13948:	movw	r0, #58000	; 0xe290
   1394c:	movt	r0, #4
   13950:	ldr	r1, [r0]
   13954:	ldr	r0, [r0, #4]
   13958:	ldr	r2, [fp, #-4]
   1395c:	ldr	r3, [r2]
   13960:	ldr	r2, [r2, #4]
   13964:	adds	r1, r1, r3
   13968:	adc	r0, r0, r2
   1396c:	str	r1, [fp, #-32]	; 0xffffffe0
   13970:	str	r0, [fp, #-28]	; 0xffffffe4
   13974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13978:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1397c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   13980:	ldr	r3, [fp, #-4]
   13984:	ldr	r3, [r3, #24]
   13988:	and	r2, r2, #1
   1398c:	bl	1426c <__assert_fail@plt+0x2b18>
   13990:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   13994:	tst	r0, #1
   13998:	bne	139a0 <__assert_fail@plt+0x224c>
   1399c:	bl	12aa4 <__assert_fail@plt+0x1350>
   139a0:	ldr	r0, [fp, #-4]
   139a4:	ldr	r1, [r0]
   139a8:	ldr	r0, [r0, #4]
   139ac:	subs	r1, r1, #1
   139b0:	sbcs	r0, r0, #0
   139b4:	str	r1, [sp, #20]
   139b8:	str	r0, [sp, #16]
   139bc:	blt	139dc <__assert_fail@plt+0x2288>
   139c0:	b	139c4 <__assert_fail@plt+0x2270>
   139c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139cc:	movw	r2, #58000	; 0xe290
   139d0:	movt	r2, #4
   139d4:	str	r1, [r2, #4]
   139d8:	str	r0, [r2]
   139dc:	movw	r0, #57814	; 0xe1d6
   139e0:	movt	r0, #4
   139e4:	ldrb	r0, [r0]
   139e8:	tst	r0, #1
   139ec:	beq	139f8 <__assert_fail@plt+0x22a4>
   139f0:	bl	13fd0 <__assert_fail@plt+0x287c>
   139f4:	str	r0, [sp, #12]
   139f8:	mov	sp, fp
   139fc:	pop	{fp, pc}
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	sub	sp, sp, #48	; 0x30
   13a0c:	str	r0, [fp, #-4]
   13a10:	str	r3, [fp, #-12]
   13a14:	str	r2, [fp, #-16]
   13a18:	ldr	r0, [fp, #-4]
   13a1c:	ldr	r2, [r0, #8]
   13a20:	ldr	r0, [r0, #12]
   13a24:	ldr	r3, [fp, #-16]
   13a28:	ldr	r1, [fp, #-12]
   13a2c:	adds	r3, r3, #1
   13a30:	adc	r1, r1, #0
   13a34:	umull	ip, lr, r2, r3
   13a38:	mla	r1, r2, r1, lr
   13a3c:	mla	r0, r0, r3, r1
   13a40:	str	ip, [sp, #16]
   13a44:	str	r0, [sp, #20]
   13a48:	bl	13b4c <__assert_fail@plt+0x23f8>
   13a4c:	bl	159fc <__assert_fail@plt+0x42a8>
   13a50:	tst	r0, #1
   13a54:	beq	13a7c <__assert_fail@plt+0x2328>
   13a58:	movw	r0, #57814	; 0xe1d6
   13a5c:	movt	r0, #4
   13a60:	ldrb	r0, [r0]
   13a64:	tst	r0, #1
   13a68:	beq	13a7c <__assert_fail@plt+0x2328>
   13a6c:	ldr	r0, [fp, #-4]
   13a70:	ldr	r2, [fp, #-16]
   13a74:	ldr	r3, [fp, #-12]
   13a78:	bl	15a4c <__assert_fail@plt+0x42f8>
   13a7c:	bl	15974 <__assert_fail@plt+0x4220>
   13a80:	str	r1, [sp, #28]
   13a84:	str	r0, [sp, #24]
   13a88:	ldr	r0, [sp, #24]
   13a8c:	ldr	r1, [sp, #28]
   13a90:	adds	r2, r0, #1
   13a94:	adc	r3, r1, #0
   13a98:	str	r2, [sp, #24]
   13a9c:	str	r3, [sp, #28]
   13aa0:	ldr	r2, [sp, #16]
   13aa4:	ldr	r3, [sp, #20]
   13aa8:	subs	r0, r0, r2
   13aac:	sbcs	r1, r1, r3
   13ab0:	str	r0, [sp, #8]
   13ab4:	str	r1, [sp, #4]
   13ab8:	bge	13af4 <__assert_fail@plt+0x23a0>
   13abc:	b	13ac0 <__assert_fail@plt+0x236c>
   13ac0:	bl	13fd0 <__assert_fail@plt+0x287c>
   13ac4:	str	r0, [sp, #12]
   13ac8:	ldr	r0, [sp, #12]
   13acc:	movw	lr, #0
   13ad0:	cmp	r0, lr
   13ad4:	bne	13ae8 <__assert_fail@plt+0x2394>
   13ad8:	ldr	r0, [fp, #-4]
   13adc:	ldr	r2, [fp, #-16]
   13ae0:	ldr	r3, [fp, #-12]
   13ae4:	bl	15a4c <__assert_fail@plt+0x42f8>
   13ae8:	ldr	r0, [sp, #12]
   13aec:	bl	1418c <__assert_fail@plt+0x2a38>
   13af0:	b	13a88 <__assert_fail@plt+0x2334>
   13af4:	bl	12aa4 <__assert_fail@plt+0x1350>
   13af8:	movw	lr, #57814	; 0xe1d6
   13afc:	movt	lr, #4
   13b00:	ldrb	lr, [lr]
   13b04:	tst	lr, #1
   13b08:	beq	13b14 <__assert_fail@plt+0x23c0>
   13b0c:	bl	13fd0 <__assert_fail@plt+0x287c>
   13b10:	str	r0, [sp]
   13b14:	bl	159fc <__assert_fail@plt+0x42a8>
   13b18:	tst	r0, #1
   13b1c:	beq	13b44 <__assert_fail@plt+0x23f0>
   13b20:	movw	r0, #57814	; 0xe1d6
   13b24:	movt	r0, #4
   13b28:	ldrb	r0, [r0]
   13b2c:	tst	r0, #1
   13b30:	bne	13b44 <__assert_fail@plt+0x23f0>
   13b34:	ldr	r0, [fp, #-4]
   13b38:	ldr	r2, [fp, #-16]
   13b3c:	ldr	r3, [fp, #-12]
   13b40:	bl	15a4c <__assert_fail@plt+0x42f8>
   13b44:	mov	sp, fp
   13b48:	pop	{fp, pc}
   13b4c:	push	{fp, lr}
   13b50:	mov	fp, sp
   13b54:	sub	sp, sp, #160	; 0xa0
   13b58:	movw	r0, #57976	; 0xe278
   13b5c:	movt	r0, #4
   13b60:	ldr	r0, [r0]
   13b64:	str	r0, [fp, #-4]
   13b68:	ldr	r0, [fp, #-4]
   13b6c:	bl	12e1c <__assert_fail@plt+0x16c8>
   13b70:	ldr	lr, [pc, #304]	; 13ca8 <__assert_fail@plt+0x2554>
   13b74:	movw	r1, #57964	; 0xe26c
   13b78:	movt	r1, #4
   13b7c:	str	r0, [r1]
   13b80:	ldr	r0, [fp, #-4]
   13b84:	cmp	r0, lr
   13b88:	bne	13ba0 <__assert_fail@plt+0x244c>
   13b8c:	movw	r0, #0
   13b90:	strb	r0, [fp, #-5]
   13b94:	movw	r0, #75	; 0x4b
   13b98:	str	r0, [fp, #-12]
   13b9c:	b	13c38 <__assert_fail@plt+0x24e4>
   13ba0:	movw	r0, #0
   13ba4:	movw	r1, #57832	; 0xe1e8
   13ba8:	movt	r1, #4
   13bac:	add	r2, sp, #20
   13bb0:	bl	1143c <sigprocmask@plt>
   13bb4:	movw	r1, #57964	; 0xe26c
   13bb8:	movt	r1, #4
   13bbc:	ldr	r1, [r1]
   13bc0:	str	r0, [sp, #16]
   13bc4:	mov	r0, r1
   13bc8:	movw	r1, #53312	; 0xd040
   13bcc:	movt	r1, #3
   13bd0:	bl	15f20 <__assert_fail@plt+0x47cc>
   13bd4:	movw	r1, #57960	; 0xe268
   13bd8:	movt	r1, #4
   13bdc:	str	r0, [r1]
   13be0:	ldr	r0, [r1]
   13be4:	movw	r1, #0
   13be8:	cmp	r0, r1
   13bec:	movw	r0, #0
   13bf0:	movne	r0, #1
   13bf4:	and	r0, r0, #1
   13bf8:	strb	r0, [fp, #-5]
   13bfc:	bl	11628 <__errno_location@plt>
   13c00:	ldr	r0, [r0]
   13c04:	str	r0, [fp, #-12]
   13c08:	ldr	r0, [fp, #-4]
   13c0c:	ldrb	r1, [fp, #-5]
   13c10:	and	r1, r1, #1
   13c14:	add	r0, r0, r1
   13c18:	movw	r1, #57976	; 0xe278
   13c1c:	movt	r1, #4
   13c20:	str	r0, [r1]
   13c24:	movw	r0, #2
   13c28:	add	r1, sp, #20
   13c2c:	movw	r2, #0
   13c30:	bl	1143c <sigprocmask@plt>
   13c34:	str	r0, [sp, #12]
   13c38:	ldrb	r0, [fp, #-5]
   13c3c:	tst	r0, #1
   13c40:	bne	13c8c <__assert_fail@plt+0x2538>
   13c44:	ldr	r1, [fp, #-12]
   13c48:	movw	r0, #57964	; 0xe26c
   13c4c:	movt	r0, #4
   13c50:	ldr	r2, [r0]
   13c54:	movw	r0, #0
   13c58:	movw	r3, #3
   13c5c:	str	r1, [sp, #8]
   13c60:	mov	r1, r3
   13c64:	bl	186f0 <__assert_fail@plt+0x6f9c>
   13c68:	movw	r1, #0
   13c6c:	str	r0, [sp, #4]
   13c70:	mov	r0, r1
   13c74:	ldr	r1, [sp, #8]
   13c78:	movw	r2, #52883	; 0xce93
   13c7c:	movt	r2, #3
   13c80:	ldr	r3, [sp, #4]
   13c84:	bl	11580 <error@plt>
   13c88:	bl	1188c <__assert_fail@plt+0x138>
   13c8c:	movw	r0, #57968	; 0xe270
   13c90:	movt	r0, #4
   13c94:	mov	r1, #0
   13c98:	str	r1, [r0, #4]
   13c9c:	str	r1, [r0]
   13ca0:	mov	sp, fp
   13ca4:	pop	{fp, pc}
   13ca8:	svcvc	0x00ffffff
   13cac:	push	{fp, lr}
   13cb0:	mov	fp, sp
   13cb4:	sub	sp, sp, #8
   13cb8:	bl	13fd0 <__assert_fail@plt+0x287c>
   13cbc:	str	r0, [sp, #4]
   13cc0:	movw	lr, #0
   13cc4:	cmp	r0, lr
   13cc8:	beq	13cd8 <__assert_fail@plt+0x2584>
   13ccc:	ldr	r0, [sp, #4]
   13cd0:	bl	1418c <__assert_fail@plt+0x2a38>
   13cd4:	b	13cb8 <__assert_fail@plt+0x2564>
   13cd8:	mov	sp, fp
   13cdc:	pop	{fp, pc}
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	sub	sp, sp, #48	; 0x30
   13cec:	str	r0, [fp, #-16]
   13cf0:	str	r1, [fp, #-12]
   13cf4:	movw	r0, #58008	; 0xe298
   13cf8:	movt	r0, #4
   13cfc:	ldr	r0, [r0]
   13d00:	movw	r1, #0
   13d04:	cmp	r0, r1
   13d08:	bne	13d24 <__assert_fail@plt+0x25d0>
   13d0c:	bl	14400 <__assert_fail@plt+0x2cac>
   13d10:	tst	r0, #1
   13d14:	bne	13d24 <__assert_fail@plt+0x25d0>
   13d18:	movw	r0, #0
   13d1c:	str	r0, [fp, #-4]
   13d20:	b	13e7c <__assert_fail@plt+0x2728>
   13d24:	ldr	r0, [fp, #-16]
   13d28:	ldr	r1, [fp, #-12]
   13d2c:	movw	r2, #58008	; 0xe298
   13d30:	movt	r2, #4
   13d34:	ldr	r2, [r2]
   13d38:	ldr	r3, [r2, #8]
   13d3c:	ldr	r2, [r2, #12]
   13d40:	subs	r0, r0, r3
   13d44:	sbcs	r1, r1, r2
   13d48:	str	r0, [sp, #16]
   13d4c:	str	r1, [sp, #12]
   13d50:	bge	13d64 <__assert_fail@plt+0x2610>
   13d54:	b	13d58 <__assert_fail@plt+0x2604>
   13d58:	movw	r0, #0
   13d5c:	str	r0, [fp, #-4]
   13d60:	b	13e7c <__assert_fail@plt+0x2728>
   13d64:	movw	r0, #58008	; 0xe298
   13d68:	movt	r0, #4
   13d6c:	ldr	r0, [r0]
   13d70:	str	r0, [fp, #-20]	; 0xffffffec
   13d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d78:	movw	r1, #0
   13d7c:	cmp	r0, r1
   13d80:	beq	13d88 <__assert_fail@plt+0x2634>
   13d84:	b	13da8 <__assert_fail@plt+0x2654>
   13d88:	movw	r0, #53167	; 0xcfaf
   13d8c:	movt	r0, #3
   13d90:	movw	r1, #53169	; 0xcfb1
   13d94:	movt	r1, #3
   13d98:	movw	r2, #583	; 0x247
   13d9c:	movw	r3, #53182	; 0xcfbe
   13da0:	movt	r3, #3
   13da4:	bl	11754 <__assert_fail@plt>
   13da8:	ldr	r0, [fp, #-16]
   13dac:	ldr	r1, [fp, #-12]
   13db0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13db4:	ldr	r3, [r2, #8]
   13db8:	ldr	ip, [r2, #12]
   13dbc:	ldr	r2, [r2, #24]
   13dc0:	adds	r3, r3, r2
   13dc4:	adc	r2, ip, r2, asr #31
   13dc8:	subs	r0, r0, r3
   13dcc:	sbcs	r1, r1, r2
   13dd0:	str	r0, [sp, #8]
   13dd4:	str	r1, [sp, #4]
   13dd8:	bge	13e40 <__assert_fail@plt+0x26ec>
   13ddc:	b	13de0 <__assert_fail@plt+0x268c>
   13de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13de4:	ldr	r0, [r0, #32]
   13de8:	str	r0, [sp, #24]
   13dec:	ldr	r0, [fp, #-16]
   13df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13df4:	ldr	r1, [r1, #8]
   13df8:	sub	r0, r0, r1
   13dfc:	str	r0, [sp, #20]
   13e00:	ldr	r0, [sp, #20]
   13e04:	cmp	r0, #80	; 0x50
   13e08:	blt	13e28 <__assert_fail@plt+0x26d4>
   13e0c:	ldr	r0, [sp, #24]
   13e10:	ldr	r0, [r0, #652]	; 0x28c
   13e14:	str	r0, [sp, #24]
   13e18:	ldr	r0, [sp, #20]
   13e1c:	sub	r0, r0, #80	; 0x50
   13e20:	str	r0, [sp, #20]
   13e24:	b	13e00 <__assert_fail@plt+0x26ac>
   13e28:	ldr	r0, [sp, #24]
   13e2c:	add	r0, r0, #12
   13e30:	ldr	r1, [sp, #20]
   13e34:	add	r0, r0, r1, lsl #3
   13e38:	str	r0, [fp, #-4]
   13e3c:	b	13e7c <__assert_fail@plt+0x2728>
   13e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e44:	ldr	r0, [r0, #40]	; 0x28
   13e48:	movw	r1, #0
   13e4c:	cmp	r0, r1
   13e50:	bne	13e6c <__assert_fail@plt+0x2718>
   13e54:	bl	14400 <__assert_fail@plt+0x2cac>
   13e58:	tst	r0, #1
   13e5c:	bne	13e6c <__assert_fail@plt+0x2718>
   13e60:	movw	r0, #0
   13e64:	str	r0, [fp, #-4]
   13e68:	b	13e7c <__assert_fail@plt+0x2728>
   13e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e70:	ldr	r0, [r0, #40]	; 0x28
   13e74:	str	r0, [fp, #-20]	; 0xffffffec
   13e78:	b	13d74 <__assert_fail@plt+0x2620>
   13e7c:	ldr	r0, [fp, #-4]
   13e80:	mov	sp, fp
   13e84:	pop	{fp, pc}
   13e88:	push	{fp, lr}
   13e8c:	mov	fp, sp
   13e90:	sub	sp, sp, #88	; 0x58
   13e94:	ldr	r1, [fp, #8]
   13e98:	str	r0, [fp, #-4]
   13e9c:	str	r3, [fp, #-12]
   13ea0:	str	r2, [fp, #-16]
   13ea4:	and	r0, r1, #1
   13ea8:	strb	r0, [fp, #-17]	; 0xffffffef
   13eac:	movw	r0, #57784	; 0xe1b8
   13eb0:	movt	r0, #4
   13eb4:	ldr	r0, [r0]
   13eb8:	movw	r1, #53218	; 0xcfe2
   13ebc:	movt	r1, #3
   13ec0:	str	r0, [sp, #44]	; 0x2c
   13ec4:	mov	r0, r1
   13ec8:	bl	115f8 <gettext@plt>
   13ecc:	movw	r1, #58044	; 0xe2bc
   13ed0:	movt	r1, #4
   13ed4:	ldr	r2, [r1]
   13ed8:	movw	r1, #57800	; 0xe1c8
   13edc:	movt	r1, #4
   13ee0:	ldr	r1, [r1]
   13ee4:	ldr	r3, [fp, #-4]
   13ee8:	ldr	r3, [r3, #24]
   13eec:	ldr	r1, [r1, r3, lsl #2]
   13ef0:	str	r0, [sp, #40]	; 0x28
   13ef4:	mov	r0, r1
   13ef8:	str	r2, [sp, #36]	; 0x24
   13efc:	bl	18934 <__assert_fail@plt+0x71e0>
   13f00:	ldr	r1, [sp, #44]	; 0x2c
   13f04:	str	r0, [sp, #32]
   13f08:	mov	r0, r1
   13f0c:	ldr	r1, [sp, #40]	; 0x28
   13f10:	ldr	r2, [sp, #36]	; 0x24
   13f14:	ldr	r3, [sp, #32]
   13f18:	bl	1161c <fprintf@plt>
   13f1c:	ldr	r1, [fp, #-16]
   13f20:	ldr	r2, [fp, #-12]
   13f24:	orr	r1, r1, r2
   13f28:	cmp	r1, #0
   13f2c:	str	r0, [sp, #28]
   13f30:	beq	13f9c <__assert_fail@plt+0x2848>
   13f34:	b	13f38 <__assert_fail@plt+0x27e4>
   13f38:	sub	r2, fp, #38	; 0x26
   13f3c:	movw	r0, #57784	; 0xe1b8
   13f40:	movt	r0, #4
   13f44:	ldr	r0, [r0]
   13f48:	movw	r1, #53242	; 0xcffa
   13f4c:	movt	r1, #3
   13f50:	str	r0, [sp, #24]
   13f54:	mov	r0, r1
   13f58:	str	r2, [sp, #20]
   13f5c:	bl	115f8 <gettext@plt>
   13f60:	ldr	r1, [fp, #-16]
   13f64:	ldr	r2, [fp, #-12]
   13f68:	str	r0, [sp, #16]
   13f6c:	mov	r0, r1
   13f70:	mov	r1, r2
   13f74:	ldr	r2, [sp, #20]
   13f78:	bl	16198 <__assert_fail@plt+0x4a44>
   13f7c:	ldr	r1, [sp, #24]
   13f80:	str	r0, [sp, #12]
   13f84:	mov	r0, r1
   13f88:	ldr	r1, [sp, #16]
   13f8c:	ldr	r2, [sp, #12]
   13f90:	bl	1161c <fprintf@plt>
   13f94:	str	r0, [sp, #8]
   13f98:	b	13fb8 <__assert_fail@plt+0x2864>
   13f9c:	movw	r0, #57784	; 0xe1b8
   13fa0:	movt	r0, #4
   13fa4:	ldr	r0, [r0]
   13fa8:	movw	r1, #52342	; 0xcc76
   13fac:	movt	r1, #3
   13fb0:	bl	1161c <fprintf@plt>
   13fb4:	str	r0, [sp, #4]
   13fb8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   13fbc:	tst	r0, #1
   13fc0:	bne	13fcc <__assert_fail@plt+0x2878>
   13fc4:	bl	13cac <__assert_fail@plt+0x2558>
   13fc8:	bl	12aa4 <__assert_fail@plt+0x1350>
   13fcc:	bl	1188c <__assert_fail@plt+0x138>
   13fd0:	push	{fp, lr}
   13fd4:	mov	fp, sp
   13fd8:	sub	sp, sp, #24
   13fdc:	movw	r0, #58032	; 0xe2b0
   13fe0:	movt	r0, #4
   13fe4:	ldr	r0, [r0]
   13fe8:	movw	r1, #0
   13fec:	cmp	r0, r1
   13ff0:	beq	14014 <__assert_fail@plt+0x28c0>
   13ff4:	movw	r0, #58032	; 0xe2b0
   13ff8:	movt	r0, #4
   13ffc:	ldr	r0, [r0]
   14000:	bl	156ec <__assert_fail@plt+0x3f98>
   14004:	movw	r0, #58032	; 0xe2b0
   14008:	movt	r0, #4
   1400c:	movw	lr, #0
   14010:	str	lr, [r0]
   14014:	movw	r0, #58008	; 0xe298
   14018:	movt	r0, #4
   1401c:	ldr	r0, [r0]
   14020:	movw	r1, #0
   14024:	cmp	r0, r1
   14028:	bne	14044 <__assert_fail@plt+0x28f0>
   1402c:	bl	14400 <__assert_fail@plt+0x2cac>
   14030:	tst	r0, #1
   14034:	bne	14044 <__assert_fail@plt+0x28f0>
   14038:	movw	r0, #0
   1403c:	str	r0, [fp, #-4]
   14040:	b	14180 <__assert_fail@plt+0x2a2c>
   14044:	movw	r0, #58000	; 0xe290
   14048:	movt	r0, #4
   1404c:	ldr	r1, [r0]
   14050:	ldr	r0, [r0, #4]
   14054:	movw	r2, #58008	; 0xe298
   14058:	movt	r2, #4
   1405c:	ldr	r2, [r2]
   14060:	ldr	r3, [r2, #16]
   14064:	ldr	r2, [r2, #20]
   14068:	subs	r1, r1, r3
   1406c:	sbcs	r0, r0, r2
   14070:	str	r1, [sp, #8]
   14074:	str	r0, [sp, #4]
   14078:	bge	140a4 <__assert_fail@plt+0x2950>
   1407c:	b	14080 <__assert_fail@plt+0x292c>
   14080:	movw	r0, #58008	; 0xe298
   14084:	movt	r0, #4
   14088:	ldr	r0, [r0]
   1408c:	ldr	r1, [r0, #16]
   14090:	ldr	r0, [r0, #20]
   14094:	movw	r2, #58000	; 0xe290
   14098:	movt	r2, #4
   1409c:	str	r0, [r2, #4]
   140a0:	str	r1, [r2]
   140a4:	movw	r0, #58008	; 0xe298
   140a8:	movt	r0, #4
   140ac:	ldr	r1, [r0]
   140b0:	ldr	r2, [r1, #16]
   140b4:	ldr	r3, [r1, #20]
   140b8:	adds	r2, r2, #1
   140bc:	adc	r3, r3, #0
   140c0:	str	r2, [r1, #16]
   140c4:	str	r3, [r1, #20]
   140c8:	ldr	r0, [r0]
   140cc:	ldr	r0, [r0, #36]	; 0x24
   140d0:	str	r0, [sp, #12]
   140d4:	ldr	r0, [sp, #12]
   140d8:	add	r1, r0, #12
   140dc:	ldr	r0, [r0, #8]
   140e0:	add	r0, r1, r0, lsl #3
   140e4:	str	r0, [fp, #-8]
   140e8:	ldr	r0, [sp, #12]
   140ec:	ldr	r1, [r0, #8]
   140f0:	add	r1, r1, #1
   140f4:	str	r1, [r0, #8]
   140f8:	ldr	r0, [sp, #12]
   140fc:	ldr	r0, [r0]
   14100:	cmp	r1, r0
   14104:	bne	14178 <__assert_fail@plt+0x2a24>
   14108:	ldr	r0, [sp, #12]
   1410c:	ldr	r0, [r0, #652]	; 0x28c
   14110:	movw	r1, #58008	; 0xe298
   14114:	movt	r1, #4
   14118:	ldr	r2, [r1]
   1411c:	str	r0, [r2, #36]	; 0x24
   14120:	ldr	r0, [r1]
   14124:	ldr	r0, [r0, #36]	; 0x24
   14128:	movw	r1, #0
   1412c:	cmp	r0, r1
   14130:	beq	14150 <__assert_fail@plt+0x29fc>
   14134:	movw	r0, #58008	; 0xe298
   14138:	movt	r0, #4
   1413c:	ldr	r0, [r0]
   14140:	ldr	r0, [r0, #36]	; 0x24
   14144:	ldr	r0, [r0]
   14148:	cmp	r0, #0
   1414c:	bne	14174 <__assert_fail@plt+0x2a20>
   14150:	movw	r0, #58008	; 0xe298
   14154:	movt	r0, #4
   14158:	ldr	r1, [r0]
   1415c:	movw	r2, #58032	; 0xe2b0
   14160:	movt	r2, #4
   14164:	str	r1, [r2]
   14168:	ldr	r1, [r0]
   1416c:	ldr	r1, [r1, #40]	; 0x28
   14170:	str	r1, [r0]
   14174:	b	14178 <__assert_fail@plt+0x2a24>
   14178:	ldr	r0, [fp, #-8]
   1417c:	str	r0, [fp, #-4]
   14180:	ldr	r0, [fp, #-4]
   14184:	mov	sp, fp
   14188:	pop	{fp, pc}
   1418c:	push	{fp, lr}
   14190:	mov	fp, sp
   14194:	sub	sp, sp, #24
   14198:	str	r0, [fp, #-4]
   1419c:	ldr	r0, [fp, #-4]
   141a0:	ldr	r0, [r0, #4]
   141a4:	ldr	r1, [fp, #-4]
   141a8:	ldr	r2, [r1]
   141ac:	movw	r1, #57960	; 0xe268
   141b0:	movt	r1, #4
   141b4:	ldr	r3, [r1]
   141b8:	movw	r1, #1
   141bc:	bl	114c0 <fwrite_unlocked@plt>
   141c0:	str	r0, [fp, #-8]
   141c4:	ldr	r0, [fp, #-8]
   141c8:	ldr	r1, [fp, #-4]
   141cc:	ldr	r1, [r1]
   141d0:	cmp	r0, r1
   141d4:	beq	1423c <__assert_fail@plt+0x2ae8>
   141d8:	bl	11628 <__errno_location@plt>
   141dc:	ldr	r1, [r0]
   141e0:	movw	r0, #52344	; 0xcc78
   141e4:	movt	r0, #3
   141e8:	str	r1, [sp, #12]
   141ec:	bl	115f8 <gettext@plt>
   141f0:	movw	r1, #57964	; 0xe26c
   141f4:	movt	r1, #4
   141f8:	ldr	r1, [r1]
   141fc:	movw	lr, #4
   14200:	str	r0, [sp, #8]
   14204:	mov	r0, lr
   14208:	bl	1859c <__assert_fail@plt+0x6e48>
   1420c:	movw	r1, #0
   14210:	str	r0, [sp, #4]
   14214:	mov	r0, r1
   14218:	ldr	r1, [sp, #12]
   1421c:	ldr	r2, [sp, #8]
   14220:	ldr	r3, [sp, #4]
   14224:	bl	11580 <error@plt>
   14228:	movw	r0, #57960	; 0xe268
   1422c:	movt	r0, #4
   14230:	movw	r1, #0
   14234:	str	r1, [r0]
   14238:	bl	1188c <__assert_fail@plt+0x138>
   1423c:	ldr	r0, [fp, #-4]
   14240:	ldr	r0, [r0]
   14244:	movw	r1, #57968	; 0xe270
   14248:	movt	r1, #4
   1424c:	ldr	r2, [r1]
   14250:	ldr	r3, [r1, #4]
   14254:	adds	r2, r2, r0
   14258:	adc	r0, r3, r0, asr #31
   1425c:	str	r2, [r1]
   14260:	str	r0, [r1, #4]
   14264:	mov	sp, fp
   14268:	pop	{fp, pc}
   1426c:	push	{fp, lr}
   14270:	mov	fp, sp
   14274:	sub	sp, sp, #80	; 0x50
   14278:	str	r0, [fp, #-8]
   1427c:	str	r1, [fp, #-4]
   14280:	and	r0, r2, #1
   14284:	strb	r0, [fp, #-9]
   14288:	str	r3, [fp, #-16]
   1428c:	bl	15974 <__assert_fail@plt+0x4220>
   14290:	str	r1, [fp, #-28]	; 0xffffffe4
   14294:	str	r0, [fp, #-32]	; 0xffffffe0
   14298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1429c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142a0:	ldr	r2, [fp, #-8]
   142a4:	ldr	r3, [fp, #-4]
   142a8:	subs	r0, r2, r0
   142ac:	sbcs	r1, r3, r1
   142b0:	str	r0, [sp, #28]
   142b4:	str	r1, [sp, #24]
   142b8:	bge	1430c <__assert_fail@plt+0x2bb8>
   142bc:	b	142c0 <__assert_fail@plt+0x2b6c>
   142c0:	movw	r0, #53283	; 0xd023
   142c4:	movt	r0, #3
   142c8:	bl	115f8 <gettext@plt>
   142cc:	movw	lr, #57800	; 0xe1c8
   142d0:	movt	lr, #4
   142d4:	ldr	lr, [lr]
   142d8:	ldr	r1, [fp, #-16]
   142dc:	add	r1, lr, r1, lsl #2
   142e0:	ldr	r1, [r1]
   142e4:	str	r0, [sp, #20]
   142e8:	mov	r0, r1
   142ec:	bl	18934 <__assert_fail@plt+0x71e0>
   142f0:	movw	r1, #0
   142f4:	str	r0, [sp, #16]
   142f8:	mov	r0, r1
   142fc:	ldr	r2, [sp, #20]
   14300:	ldr	r3, [sp, #16]
   14304:	bl	11580 <error@plt>
   14308:	bl	1188c <__assert_fail@plt+0x138>
   1430c:	ldr	r0, [fp, #-8]
   14310:	ldr	r1, [fp, #-4]
   14314:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1431c:	subs	r0, r0, r2
   14320:	sbc	r1, r1, r3
   14324:	str	r0, [sp, #40]	; 0x28
   14328:	str	r1, [sp, #44]	; 0x2c
   1432c:	mov	r0, #0
   14330:	str	r0, [sp, #36]	; 0x24
   14334:	str	r0, [sp, #32]
   14338:	ldr	r0, [sp, #32]
   1433c:	ldr	r1, [sp, #36]	; 0x24
   14340:	ldr	r2, [sp, #40]	; 0x28
   14344:	ldr	r3, [sp, #44]	; 0x2c
   14348:	subs	r0, r0, r2
   1434c:	sbcs	r1, r1, r3
   14350:	str	r0, [sp, #12]
   14354:	str	r1, [sp, #8]
   14358:	bge	143f8 <__assert_fail@plt+0x2ca4>
   1435c:	b	14360 <__assert_fail@plt+0x2c0c>
   14360:	bl	13fd0 <__assert_fail@plt+0x287c>
   14364:	str	r0, [fp, #-20]	; 0xffffffec
   14368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1436c:	movw	lr, #0
   14370:	cmp	r0, lr
   14374:	bne	143c4 <__assert_fail@plt+0x2c70>
   14378:	movw	r0, #53283	; 0xd023
   1437c:	movt	r0, #3
   14380:	bl	115f8 <gettext@plt>
   14384:	movw	lr, #57800	; 0xe1c8
   14388:	movt	lr, #4
   1438c:	ldr	lr, [lr]
   14390:	ldr	r1, [fp, #-16]
   14394:	add	r1, lr, r1, lsl #2
   14398:	ldr	r1, [r1]
   1439c:	str	r0, [sp, #4]
   143a0:	mov	r0, r1
   143a4:	bl	18934 <__assert_fail@plt+0x71e0>
   143a8:	movw	r1, #0
   143ac:	str	r0, [sp]
   143b0:	mov	r0, r1
   143b4:	ldr	r2, [sp, #4]
   143b8:	ldr	r3, [sp]
   143bc:	bl	11580 <error@plt>
   143c0:	bl	1188c <__assert_fail@plt+0x138>
   143c4:	ldrb	r0, [fp, #-9]
   143c8:	tst	r0, #1
   143cc:	bne	143d8 <__assert_fail@plt+0x2c84>
   143d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143d4:	bl	1418c <__assert_fail@plt+0x2a38>
   143d8:	b	143dc <__assert_fail@plt+0x2c88>
   143dc:	ldr	r0, [sp, #32]
   143e0:	ldr	r1, [sp, #36]	; 0x24
   143e4:	adds	r0, r0, #1
   143e8:	adc	r1, r1, #0
   143ec:	str	r0, [sp, #32]
   143f0:	str	r1, [sp, #36]	; 0x24
   143f4:	b	14338 <__assert_fail@plt+0x2be4>
   143f8:	mov	sp, fp
   143fc:	pop	{fp, pc}
   14400:	push	{fp, lr}
   14404:	mov	fp, sp
   14408:	sub	sp, sp, #80	; 0x50
   1440c:	movw	r0, #8191	; 0x1fff
   14410:	str	r0, [fp, #-12]
   14414:	movw	r0, #58012	; 0xe29c
   14418:	movt	r0, #4
   1441c:	ldrb	r0, [r0]
   14420:	tst	r0, #1
   14424:	beq	14438 <__assert_fail@plt+0x2ce4>
   14428:	movw	r0, #0
   1442c:	and	r0, r0, #1
   14430:	strb	r0, [fp, #-1]
   14434:	b	153b0 <__assert_fail@plt+0x3c5c>
   14438:	ldr	r0, [fp, #-12]
   1443c:	movw	r1, #58016	; 0xe2a0
   14440:	movt	r1, #4
   14444:	ldr	r1, [r1]
   14448:	cmp	r0, r1
   1444c:	bgt	14464 <__assert_fail@plt+0x2d10>
   14450:	movw	r0, #58016	; 0xe2a0
   14454:	movt	r0, #4
   14458:	ldr	r0, [r0]
   1445c:	add	r0, r0, #1
   14460:	str	r0, [fp, #-12]
   14464:	b	14468 <__assert_fail@plt+0x2d14>
   14468:	ldr	r0, [fp, #-12]
   1446c:	bl	153e4 <__assert_fail@plt+0x3c90>
   14470:	str	r0, [fp, #-8]
   14474:	ldr	r0, [fp, #-8]
   14478:	ldr	r0, [r0]
   1447c:	str	r0, [fp, #-16]
   14480:	ldr	r0, [fp, #-8]
   14484:	ldr	r0, [r0, #28]
   14488:	str	r0, [fp, #-24]	; 0xffffffe8
   1448c:	movw	r0, #58016	; 0xe2a0
   14490:	movt	r0, #4
   14494:	ldr	r0, [r0]
   14498:	cmp	r0, #0
   1449c:	beq	14508 <__assert_fail@plt+0x2db4>
   144a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144a4:	movw	r1, #58020	; 0xe2a4
   144a8:	movt	r1, #4
   144ac:	ldr	r1, [r1]
   144b0:	movw	r2, #58016	; 0xe2a0
   144b4:	movt	r2, #4
   144b8:	ldr	r3, [r2]
   144bc:	str	r2, [fp, #-28]	; 0xffffffe4
   144c0:	mov	r2, r3
   144c4:	bl	11478 <memcpy@plt>
   144c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144cc:	ldr	r1, [r0]
   144d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144d4:	add	r1, r2, r1
   144d8:	str	r1, [fp, #-24]	; 0xffffffe8
   144dc:	ldr	r1, [r0]
   144e0:	ldr	r2, [fp, #-8]
   144e4:	ldr	r3, [r2, #4]
   144e8:	add	r1, r3, r1
   144ec:	str	r1, [r2, #4]
   144f0:	ldr	r1, [r0]
   144f4:	ldr	r2, [fp, #-16]
   144f8:	sub	r1, r2, r1
   144fc:	str	r1, [fp, #-16]
   14500:	movw	r1, #0
   14504:	str	r1, [r0]
   14508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1450c:	ldr	r1, [fp, #-16]
   14510:	sub	r1, r1, #1
   14514:	bl	154a4 <__assert_fail@plt+0x3d50>
   14518:	ldr	r1, [fp, #-8]
   1451c:	ldr	lr, [r1, #4]
   14520:	add	r0, lr, r0
   14524:	str	r0, [r1, #4]
   14528:	ldr	r0, [fp, #-8]
   1452c:	bl	15554 <__assert_fail@plt+0x3e00>
   14530:	str	r0, [fp, #-20]	; 0xffffffec
   14534:	ldr	r0, [fp, #-20]	; 0xffffffec
   14538:	cmp	r0, #0
   1453c:	bne	14554 <__assert_fail@plt+0x2e00>
   14540:	movw	r0, #58012	; 0xe29c
   14544:	movt	r0, #4
   14548:	ldrb	r0, [r0]
   1454c:	tst	r0, #1
   14550:	beq	14558 <__assert_fail@plt+0x2e04>
   14554:	b	15378 <__assert_fail@plt+0x3c24>
   14558:	b	1482c <__assert_fail@plt+0x30d8>
   1455c:	b	14560 <__assert_fail@plt+0x2e0c>
   14560:	b	14628 <__assert_fail@plt+0x2ed4>
   14564:	ldr	r0, [fp, #-8]
   14568:	ldr	r0, [r0]
   1456c:	cmp	r0, #0
   14570:	bge	145ac <__assert_fail@plt+0x2e58>
   14574:	b	14578 <__assert_fail@plt+0x2e24>
   14578:	ldr	r0, [fp, #-8]
   1457c:	ldr	r0, [r0]
   14580:	cmp	r0, #63	; 0x3f
   14584:	blt	14698 <__assert_fail@plt+0x2f44>
   14588:	b	146b0 <__assert_fail@plt+0x2f5c>
   1458c:	ldr	r0, [fp, #-8]
   14590:	ldr	r0, [r0]
   14594:	mvn	r1, #0
   14598:	sub	r0, r1, r0
   1459c:	mvn	r1, #62	; 0x3e
   145a0:	cmp	r1, r0
   145a4:	ble	14698 <__assert_fail@plt+0x2f44>
   145a8:	b	146b0 <__assert_fail@plt+0x2f5c>
   145ac:	b	145b0 <__assert_fail@plt+0x2e5c>
   145b0:	b	14610 <__assert_fail@plt+0x2ebc>
   145b4:	b	14610 <__assert_fail@plt+0x2ebc>
   145b8:	b	14610 <__assert_fail@plt+0x2ebc>
   145bc:	b	145c0 <__assert_fail@plt+0x2e6c>
   145c0:	ldr	r0, [fp, #-8]
   145c4:	ldr	r0, [r0]
   145c8:	mvn	r1, #127	; 0x7f
   145cc:	add	r0, r0, r1
   145d0:	movw	r1, #0
   145d4:	cmp	r1, r0
   145d8:	blt	14698 <__assert_fail@plt+0x2f44>
   145dc:	b	146b0 <__assert_fail@plt+0x2f5c>
   145e0:	ldr	r0, [fp, #-8]
   145e4:	ldr	r0, [r0]
   145e8:	movw	r1, #0
   145ec:	cmp	r1, r0
   145f0:	bge	146b0 <__assert_fail@plt+0x2f5c>
   145f4:	ldr	r0, [fp, #-8]
   145f8:	ldr	r0, [r0]
   145fc:	sub	r0, r0, #1
   14600:	movw	r1, #127	; 0x7f
   14604:	cmp	r1, r0
   14608:	blt	14698 <__assert_fail@plt+0x2f44>
   1460c:	b	146b0 <__assert_fail@plt+0x2f5c>
   14610:	ldr	r0, [fp, #-8]
   14614:	ldr	r0, [r0]
   14618:	mvn	r1, #63	; 0x3f
   1461c:	cmp	r1, r0
   14620:	blt	14698 <__assert_fail@plt+0x2f44>
   14624:	b	146b0 <__assert_fail@plt+0x2f5c>
   14628:	b	14630 <__assert_fail@plt+0x2edc>
   1462c:	b	146b0 <__assert_fail@plt+0x2f5c>
   14630:	ldr	r0, [fp, #-8]
   14634:	ldr	r0, [r0]
   14638:	cmp	r0, #0
   1463c:	bge	14684 <__assert_fail@plt+0x2f30>
   14640:	b	14644 <__assert_fail@plt+0x2ef0>
   14644:	b	14668 <__assert_fail@plt+0x2f14>
   14648:	b	14668 <__assert_fail@plt+0x2f14>
   1464c:	ldr	r0, [fp, #-8]
   14650:	ldr	r0, [r0]
   14654:	cmn	r0, #1
   14658:	bne	14668 <__assert_fail@plt+0x2f14>
   1465c:	b	14660 <__assert_fail@plt+0x2f0c>
   14660:	b	146b0 <__assert_fail@plt+0x2f5c>
   14664:	b	146b0 <__assert_fail@plt+0x2f5c>
   14668:	ldr	r0, [fp, #-8]
   1466c:	ldr	r0, [r0]
   14670:	mvn	r1, #127	; 0x7f
   14674:	sdiv	r0, r1, r0
   14678:	cmp	r0, #2
   1467c:	blt	14698 <__assert_fail@plt+0x2f44>
   14680:	b	146b0 <__assert_fail@plt+0x2f5c>
   14684:	ldr	r0, [fp, #-8]
   14688:	ldr	r0, [r0]
   1468c:	movw	r1, #63	; 0x3f
   14690:	cmp	r1, r0
   14694:	bge	146b0 <__assert_fail@plt+0x2f5c>
   14698:	ldr	r0, [fp, #-8]
   1469c:	ldr	r0, [r0]
   146a0:	lsl	r0, r0, #1
   146a4:	sxtb	r0, r0
   146a8:	str	r0, [fp, #-12]
   146ac:	b	15368 <__assert_fail@plt+0x3c14>
   146b0:	ldr	r0, [fp, #-8]
   146b4:	ldr	r0, [r0]
   146b8:	lsl	r0, r0, #1
   146bc:	sxtb	r0, r0
   146c0:	str	r0, [fp, #-12]
   146c4:	b	1536c <__assert_fail@plt+0x3c18>
   146c8:	b	1478c <__assert_fail@plt+0x3038>
   146cc:	ldr	r0, [fp, #-8]
   146d0:	ldr	r0, [r0]
   146d4:	cmp	r0, #0
   146d8:	bge	14714 <__assert_fail@plt+0x2fc0>
   146dc:	b	146e0 <__assert_fail@plt+0x2f8c>
   146e0:	ldr	r0, [fp, #-8]
   146e4:	ldr	r0, [r0]
   146e8:	cmp	r0, #127	; 0x7f
   146ec:	blt	147fc <__assert_fail@plt+0x30a8>
   146f0:	b	14814 <__assert_fail@plt+0x30c0>
   146f4:	ldr	r0, [fp, #-8]
   146f8:	ldr	r0, [r0]
   146fc:	mvn	r1, #0
   14700:	sub	r0, r1, r0
   14704:	mvn	r1, #126	; 0x7e
   14708:	cmp	r1, r0
   1470c:	ble	147fc <__assert_fail@plt+0x30a8>
   14710:	b	14814 <__assert_fail@plt+0x30c0>
   14714:	b	14718 <__assert_fail@plt+0x2fc4>
   14718:	b	14774 <__assert_fail@plt+0x3020>
   1471c:	b	14774 <__assert_fail@plt+0x3020>
   14720:	b	14774 <__assert_fail@plt+0x3020>
   14724:	b	14728 <__assert_fail@plt+0x2fd4>
   14728:	ldr	r0, [fp, #-8]
   1472c:	ldr	r0, [r0]
   14730:	add	r0, r0, #0
   14734:	movw	r1, #0
   14738:	cmp	r1, r0
   1473c:	blt	147fc <__assert_fail@plt+0x30a8>
   14740:	b	14814 <__assert_fail@plt+0x30c0>
   14744:	ldr	r0, [fp, #-8]
   14748:	ldr	r0, [r0]
   1474c:	movw	r1, #0
   14750:	cmp	r1, r0
   14754:	bge	14814 <__assert_fail@plt+0x30c0>
   14758:	ldr	r0, [fp, #-8]
   1475c:	ldr	r0, [r0]
   14760:	sub	r0, r0, #1
   14764:	mvn	r1, #0
   14768:	cmp	r1, r0
   1476c:	blt	147fc <__assert_fail@plt+0x30a8>
   14770:	b	14814 <__assert_fail@plt+0x30c0>
   14774:	ldr	r0, [fp, #-8]
   14778:	ldr	r0, [r0]
   1477c:	movw	r1, #0
   14780:	cmp	r1, r0
   14784:	blt	147fc <__assert_fail@plt+0x30a8>
   14788:	b	14814 <__assert_fail@plt+0x30c0>
   1478c:	b	14794 <__assert_fail@plt+0x3040>
   14790:	b	14814 <__assert_fail@plt+0x30c0>
   14794:	ldr	r0, [fp, #-8]
   14798:	ldr	r0, [r0]
   1479c:	cmp	r0, #0
   147a0:	bge	147e8 <__assert_fail@plt+0x3094>
   147a4:	b	147a8 <__assert_fail@plt+0x3054>
   147a8:	b	147cc <__assert_fail@plt+0x3078>
   147ac:	b	147cc <__assert_fail@plt+0x3078>
   147b0:	ldr	r0, [fp, #-8]
   147b4:	ldr	r0, [r0]
   147b8:	cmn	r0, #1
   147bc:	bne	147cc <__assert_fail@plt+0x3078>
   147c0:	b	147c4 <__assert_fail@plt+0x3070>
   147c4:	b	147fc <__assert_fail@plt+0x30a8>
   147c8:	b	147fc <__assert_fail@plt+0x30a8>
   147cc:	ldr	r0, [fp, #-8]
   147d0:	ldr	r0, [r0]
   147d4:	movw	r1, #0
   147d8:	sdiv	r0, r1, r0
   147dc:	cmp	r0, #2
   147e0:	blt	147fc <__assert_fail@plt+0x30a8>
   147e4:	b	14814 <__assert_fail@plt+0x30c0>
   147e8:	ldr	r0, [fp, #-8]
   147ec:	ldr	r0, [r0]
   147f0:	movw	r1, #127	; 0x7f
   147f4:	cmp	r1, r0
   147f8:	bge	14814 <__assert_fail@plt+0x30c0>
   147fc:	ldr	r0, [fp, #-8]
   14800:	ldr	r0, [r0]
   14804:	lsl	r0, r0, #1
   14808:	and	r0, r0, #255	; 0xff
   1480c:	str	r0, [fp, #-12]
   14810:	b	15368 <__assert_fail@plt+0x3c14>
   14814:	ldr	r0, [fp, #-8]
   14818:	ldr	r0, [r0]
   1481c:	lsl	r0, r0, #1
   14820:	and	r0, r0, #255	; 0xff
   14824:	str	r0, [fp, #-12]
   14828:	b	1536c <__assert_fail@plt+0x3c18>
   1482c:	b	14b08 <__assert_fail@plt+0x33b4>
   14830:	b	14834 <__assert_fail@plt+0x30e0>
   14834:	b	14900 <__assert_fail@plt+0x31ac>
   14838:	ldr	r0, [fp, #-8]
   1483c:	ldr	r0, [r0]
   14840:	cmp	r0, #0
   14844:	bge	14884 <__assert_fail@plt+0x3130>
   14848:	b	1484c <__assert_fail@plt+0x30f8>
   1484c:	ldr	r0, [fp, #-8]
   14850:	ldr	r0, [r0]
   14854:	movw	r1, #16383	; 0x3fff
   14858:	cmp	r0, r1
   1485c:	blt	14970 <__assert_fail@plt+0x321c>
   14860:	b	14988 <__assert_fail@plt+0x3234>
   14864:	ldr	r0, [pc, #2928]	; 153dc <__assert_fail@plt+0x3c88>
   14868:	ldr	r1, [fp, #-8]
   1486c:	ldr	r1, [r1]
   14870:	mvn	r2, #0
   14874:	sub	r1, r2, r1
   14878:	cmp	r0, r1
   1487c:	ble	14970 <__assert_fail@plt+0x321c>
   14880:	b	14988 <__assert_fail@plt+0x3234>
   14884:	b	14888 <__assert_fail@plt+0x3134>
   14888:	b	148e8 <__assert_fail@plt+0x3194>
   1488c:	b	148e8 <__assert_fail@plt+0x3194>
   14890:	b	148e8 <__assert_fail@plt+0x3194>
   14894:	b	14898 <__assert_fail@plt+0x3144>
   14898:	ldr	r0, [pc, #2868]	; 153d4 <__assert_fail@plt+0x3c80>
   1489c:	ldr	r1, [fp, #-8]
   148a0:	ldr	r1, [r1]
   148a4:	add	r0, r1, r0
   148a8:	movw	r1, #0
   148ac:	cmp	r1, r0
   148b0:	blt	14970 <__assert_fail@plt+0x321c>
   148b4:	b	14988 <__assert_fail@plt+0x3234>
   148b8:	ldr	r0, [fp, #-8]
   148bc:	ldr	r0, [r0]
   148c0:	movw	r1, #0
   148c4:	cmp	r1, r0
   148c8:	bge	14988 <__assert_fail@plt+0x3234>
   148cc:	ldr	r0, [fp, #-8]
   148d0:	ldr	r0, [r0]
   148d4:	sub	r0, r0, #1
   148d8:	movw	r1, #32767	; 0x7fff
   148dc:	cmp	r1, r0
   148e0:	blt	14970 <__assert_fail@plt+0x321c>
   148e4:	b	14988 <__assert_fail@plt+0x3234>
   148e8:	ldr	r0, [pc, #2792]	; 153d8 <__assert_fail@plt+0x3c84>
   148ec:	ldr	r1, [fp, #-8]
   148f0:	ldr	r1, [r1]
   148f4:	cmp	r0, r1
   148f8:	blt	14970 <__assert_fail@plt+0x321c>
   148fc:	b	14988 <__assert_fail@plt+0x3234>
   14900:	b	14908 <__assert_fail@plt+0x31b4>
   14904:	b	14988 <__assert_fail@plt+0x3234>
   14908:	ldr	r0, [fp, #-8]
   1490c:	ldr	r0, [r0]
   14910:	cmp	r0, #0
   14914:	bge	1495c <__assert_fail@plt+0x3208>
   14918:	b	1491c <__assert_fail@plt+0x31c8>
   1491c:	b	14940 <__assert_fail@plt+0x31ec>
   14920:	b	14940 <__assert_fail@plt+0x31ec>
   14924:	ldr	r0, [fp, #-8]
   14928:	ldr	r0, [r0]
   1492c:	cmn	r0, #1
   14930:	bne	14940 <__assert_fail@plt+0x31ec>
   14934:	b	14938 <__assert_fail@plt+0x31e4>
   14938:	b	14988 <__assert_fail@plt+0x3234>
   1493c:	b	14988 <__assert_fail@plt+0x3234>
   14940:	ldr	r0, [pc, #2700]	; 153d4 <__assert_fail@plt+0x3c80>
   14944:	ldr	r1, [fp, #-8]
   14948:	ldr	r1, [r1]
   1494c:	sdiv	r0, r0, r1
   14950:	cmp	r0, #2
   14954:	blt	14970 <__assert_fail@plt+0x321c>
   14958:	b	14988 <__assert_fail@plt+0x3234>
   1495c:	ldr	r0, [fp, #-8]
   14960:	ldr	r0, [r0]
   14964:	movw	r1, #16383	; 0x3fff
   14968:	cmp	r1, r0
   1496c:	bge	14988 <__assert_fail@plt+0x3234>
   14970:	ldr	r0, [fp, #-8]
   14974:	ldr	r0, [r0]
   14978:	lsl	r0, r0, #1
   1497c:	sxth	r0, r0
   14980:	str	r0, [fp, #-12]
   14984:	b	15368 <__assert_fail@plt+0x3c14>
   14988:	ldr	r0, [fp, #-8]
   1498c:	ldr	r0, [r0]
   14990:	lsl	r0, r0, #1
   14994:	sxth	r0, r0
   14998:	str	r0, [fp, #-12]
   1499c:	b	1536c <__assert_fail@plt+0x3c18>
   149a0:	b	14a68 <__assert_fail@plt+0x3314>
   149a4:	ldr	r0, [fp, #-8]
   149a8:	ldr	r0, [r0]
   149ac:	cmp	r0, #0
   149b0:	bge	149f0 <__assert_fail@plt+0x329c>
   149b4:	b	149b8 <__assert_fail@plt+0x3264>
   149b8:	ldr	r0, [fp, #-8]
   149bc:	ldr	r0, [r0]
   149c0:	movw	r1, #32767	; 0x7fff
   149c4:	cmp	r0, r1
   149c8:	blt	14ad8 <__assert_fail@plt+0x3384>
   149cc:	b	14af0 <__assert_fail@plt+0x339c>
   149d0:	ldr	r0, [pc, #2568]	; 153e0 <__assert_fail@plt+0x3c8c>
   149d4:	ldr	r1, [fp, #-8]
   149d8:	ldr	r1, [r1]
   149dc:	mvn	r2, #0
   149e0:	sub	r1, r2, r1
   149e4:	cmp	r0, r1
   149e8:	ble	14ad8 <__assert_fail@plt+0x3384>
   149ec:	b	14af0 <__assert_fail@plt+0x339c>
   149f0:	b	149f4 <__assert_fail@plt+0x32a0>
   149f4:	b	14a50 <__assert_fail@plt+0x32fc>
   149f8:	b	14a50 <__assert_fail@plt+0x32fc>
   149fc:	b	14a50 <__assert_fail@plt+0x32fc>
   14a00:	b	14a04 <__assert_fail@plt+0x32b0>
   14a04:	ldr	r0, [fp, #-8]
   14a08:	ldr	r0, [r0]
   14a0c:	add	r0, r0, #0
   14a10:	movw	r1, #0
   14a14:	cmp	r1, r0
   14a18:	blt	14ad8 <__assert_fail@plt+0x3384>
   14a1c:	b	14af0 <__assert_fail@plt+0x339c>
   14a20:	ldr	r0, [fp, #-8]
   14a24:	ldr	r0, [r0]
   14a28:	movw	r1, #0
   14a2c:	cmp	r1, r0
   14a30:	bge	14af0 <__assert_fail@plt+0x339c>
   14a34:	ldr	r0, [fp, #-8]
   14a38:	ldr	r0, [r0]
   14a3c:	sub	r0, r0, #1
   14a40:	mvn	r1, #0
   14a44:	cmp	r1, r0
   14a48:	blt	14ad8 <__assert_fail@plt+0x3384>
   14a4c:	b	14af0 <__assert_fail@plt+0x339c>
   14a50:	ldr	r0, [fp, #-8]
   14a54:	ldr	r0, [r0]
   14a58:	movw	r1, #0
   14a5c:	cmp	r1, r0
   14a60:	blt	14ad8 <__assert_fail@plt+0x3384>
   14a64:	b	14af0 <__assert_fail@plt+0x339c>
   14a68:	b	14a70 <__assert_fail@plt+0x331c>
   14a6c:	b	14af0 <__assert_fail@plt+0x339c>
   14a70:	ldr	r0, [fp, #-8]
   14a74:	ldr	r0, [r0]
   14a78:	cmp	r0, #0
   14a7c:	bge	14ac4 <__assert_fail@plt+0x3370>
   14a80:	b	14a84 <__assert_fail@plt+0x3330>
   14a84:	b	14aa8 <__assert_fail@plt+0x3354>
   14a88:	b	14aa8 <__assert_fail@plt+0x3354>
   14a8c:	ldr	r0, [fp, #-8]
   14a90:	ldr	r0, [r0]
   14a94:	cmn	r0, #1
   14a98:	bne	14aa8 <__assert_fail@plt+0x3354>
   14a9c:	b	14aa0 <__assert_fail@plt+0x334c>
   14aa0:	b	14ad8 <__assert_fail@plt+0x3384>
   14aa4:	b	14ad8 <__assert_fail@plt+0x3384>
   14aa8:	ldr	r0, [fp, #-8]
   14aac:	ldr	r0, [r0]
   14ab0:	movw	r1, #0
   14ab4:	sdiv	r0, r1, r0
   14ab8:	cmp	r0, #2
   14abc:	blt	14ad8 <__assert_fail@plt+0x3384>
   14ac0:	b	14af0 <__assert_fail@plt+0x339c>
   14ac4:	ldr	r0, [fp, #-8]
   14ac8:	ldr	r0, [r0]
   14acc:	movw	r1, #32767	; 0x7fff
   14ad0:	cmp	r1, r0
   14ad4:	bge	14af0 <__assert_fail@plt+0x339c>
   14ad8:	ldr	r0, [fp, #-8]
   14adc:	ldr	r0, [r0]
   14ae0:	lsl	r0, r0, #1
   14ae4:	uxth	r0, r0
   14ae8:	str	r0, [fp, #-12]
   14aec:	b	15368 <__assert_fail@plt+0x3c14>
   14af0:	ldr	r0, [fp, #-8]
   14af4:	ldr	r0, [r0]
   14af8:	lsl	r0, r0, #1
   14afc:	uxth	r0, r0
   14b00:	str	r0, [fp, #-12]
   14b04:	b	1536c <__assert_fail@plt+0x3c18>
   14b08:	b	14b0c <__assert_fail@plt+0x33b8>
   14b0c:	b	14b10 <__assert_fail@plt+0x33bc>
   14b10:	b	14bcc <__assert_fail@plt+0x3478>
   14b14:	ldr	r0, [fp, #-8]
   14b18:	ldr	r0, [r0]
   14b1c:	cmp	r0, #0
   14b20:	bge	14b60 <__assert_fail@plt+0x340c>
   14b24:	b	14b28 <__assert_fail@plt+0x33d4>
   14b28:	ldr	r0, [pc, #2196]	; 153c4 <__assert_fail@plt+0x3c70>
   14b2c:	ldr	r1, [fp, #-8]
   14b30:	ldr	r1, [r1]
   14b34:	cmp	r1, r0
   14b38:	blt	14c30 <__assert_fail@plt+0x34dc>
   14b3c:	b	14c44 <__assert_fail@plt+0x34f0>
   14b40:	ldr	r0, [pc, #2184]	; 153d0 <__assert_fail@plt+0x3c7c>
   14b44:	ldr	r1, [fp, #-8]
   14b48:	ldr	r1, [r1]
   14b4c:	mvn	r2, #0
   14b50:	sub	r1, r2, r1
   14b54:	cmp	r0, r1
   14b58:	ble	14c30 <__assert_fail@plt+0x34dc>
   14b5c:	b	14c44 <__assert_fail@plt+0x34f0>
   14b60:	b	14bb4 <__assert_fail@plt+0x3460>
   14b64:	b	14b68 <__assert_fail@plt+0x3414>
   14b68:	ldr	r0, [fp, #-8]
   14b6c:	ldr	r0, [r0]
   14b70:	add	r0, r0, #-2147483648	; 0x80000000
   14b74:	movw	r1, #0
   14b78:	cmp	r1, r0
   14b7c:	blt	14c30 <__assert_fail@plt+0x34dc>
   14b80:	b	14c44 <__assert_fail@plt+0x34f0>
   14b84:	ldr	r0, [fp, #-8]
   14b88:	ldr	r0, [r0]
   14b8c:	movw	r1, #0
   14b90:	cmp	r1, r0
   14b94:	bge	14c44 <__assert_fail@plt+0x34f0>
   14b98:	ldr	r0, [pc, #2080]	; 153c0 <__assert_fail@plt+0x3c6c>
   14b9c:	ldr	r1, [fp, #-8]
   14ba0:	ldr	r1, [r1]
   14ba4:	sub	r1, r1, #1
   14ba8:	cmp	r0, r1
   14bac:	blt	14c30 <__assert_fail@plt+0x34dc>
   14bb0:	b	14c44 <__assert_fail@plt+0x34f0>
   14bb4:	ldr	r0, [pc, #2064]	; 153cc <__assert_fail@plt+0x3c78>
   14bb8:	ldr	r1, [fp, #-8]
   14bbc:	ldr	r1, [r1]
   14bc0:	cmp	r0, r1
   14bc4:	blt	14c30 <__assert_fail@plt+0x34dc>
   14bc8:	b	14c44 <__assert_fail@plt+0x34f0>
   14bcc:	b	14bd4 <__assert_fail@plt+0x3480>
   14bd0:	b	14c44 <__assert_fail@plt+0x34f0>
   14bd4:	ldr	r0, [fp, #-8]
   14bd8:	ldr	r0, [r0]
   14bdc:	cmp	r0, #0
   14be0:	bge	14c1c <__assert_fail@plt+0x34c8>
   14be4:	ldr	r0, [fp, #-8]
   14be8:	ldr	r0, [r0]
   14bec:	cmn	r0, #1
   14bf0:	bne	14c00 <__assert_fail@plt+0x34ac>
   14bf4:	b	14bf8 <__assert_fail@plt+0x34a4>
   14bf8:	b	14c44 <__assert_fail@plt+0x34f0>
   14bfc:	b	14c44 <__assert_fail@plt+0x34f0>
   14c00:	ldr	r0, [pc, #1984]	; 153c8 <__assert_fail@plt+0x3c74>
   14c04:	ldr	r1, [fp, #-8]
   14c08:	ldr	r1, [r1]
   14c0c:	sdiv	r0, r0, r1
   14c10:	cmp	r0, #2
   14c14:	blt	14c30 <__assert_fail@plt+0x34dc>
   14c18:	b	14c44 <__assert_fail@plt+0x34f0>
   14c1c:	ldr	r0, [pc, #1952]	; 153c4 <__assert_fail@plt+0x3c70>
   14c20:	ldr	r1, [fp, #-8]
   14c24:	ldr	r1, [r1]
   14c28:	cmp	r0, r1
   14c2c:	bge	14c44 <__assert_fail@plt+0x34f0>
   14c30:	ldr	r0, [fp, #-8]
   14c34:	ldr	r0, [r0]
   14c38:	lsl	r0, r0, #1
   14c3c:	str	r0, [fp, #-12]
   14c40:	b	15368 <__assert_fail@plt+0x3c14>
   14c44:	ldr	r0, [fp, #-8]
   14c48:	ldr	r0, [r0]
   14c4c:	lsl	r0, r0, #1
   14c50:	str	r0, [fp, #-12]
   14c54:	b	1536c <__assert_fail@plt+0x3c18>
   14c58:	b	14d20 <__assert_fail@plt+0x35cc>
   14c5c:	ldr	r0, [fp, #-8]
   14c60:	ldr	r0, [r0]
   14c64:	cmp	r0, #0
   14c68:	bge	14ca8 <__assert_fail@plt+0x3554>
   14c6c:	b	14c88 <__assert_fail@plt+0x3534>
   14c70:	ldr	r0, [pc, #1864]	; 153c0 <__assert_fail@plt+0x3c6c>
   14c74:	ldr	r1, [fp, #-8]
   14c78:	ldr	r1, [r1]
   14c7c:	cmp	r1, r0
   14c80:	bcc	14d90 <__assert_fail@plt+0x363c>
   14c84:	b	14da4 <__assert_fail@plt+0x3650>
   14c88:	ldr	r0, [fp, #-8]
   14c8c:	ldr	r0, [r0]
   14c90:	mvn	r1, #0
   14c94:	sub	r0, r1, r0
   14c98:	movw	r1, #1
   14c9c:	cmp	r1, r0
   14ca0:	bls	14d90 <__assert_fail@plt+0x363c>
   14ca4:	b	14da4 <__assert_fail@plt+0x3650>
   14ca8:	b	14cac <__assert_fail@plt+0x3558>
   14cac:	b	14d08 <__assert_fail@plt+0x35b4>
   14cb0:	b	14d08 <__assert_fail@plt+0x35b4>
   14cb4:	b	14d08 <__assert_fail@plt+0x35b4>
   14cb8:	b	14cbc <__assert_fail@plt+0x3568>
   14cbc:	ldr	r0, [fp, #-8]
   14cc0:	ldr	r0, [r0]
   14cc4:	add	r0, r0, #0
   14cc8:	movw	r1, #0
   14ccc:	cmp	r1, r0
   14cd0:	blt	14d90 <__assert_fail@plt+0x363c>
   14cd4:	b	14da4 <__assert_fail@plt+0x3650>
   14cd8:	ldr	r0, [fp, #-8]
   14cdc:	ldr	r0, [r0]
   14ce0:	movw	r1, #0
   14ce4:	cmp	r1, r0
   14ce8:	bge	14da4 <__assert_fail@plt+0x3650>
   14cec:	ldr	r0, [fp, #-8]
   14cf0:	ldr	r0, [r0]
   14cf4:	sub	r0, r0, #1
   14cf8:	mvn	r1, #0
   14cfc:	cmp	r1, r0
   14d00:	blt	14d90 <__assert_fail@plt+0x363c>
   14d04:	b	14da4 <__assert_fail@plt+0x3650>
   14d08:	ldr	r0, [fp, #-8]
   14d0c:	ldr	r0, [r0]
   14d10:	movw	r1, #0
   14d14:	cmp	r1, r0
   14d18:	blt	14d90 <__assert_fail@plt+0x363c>
   14d1c:	b	14da4 <__assert_fail@plt+0x3650>
   14d20:	b	14d28 <__assert_fail@plt+0x35d4>
   14d24:	b	14da4 <__assert_fail@plt+0x3650>
   14d28:	ldr	r0, [fp, #-8]
   14d2c:	ldr	r0, [r0]
   14d30:	cmp	r0, #0
   14d34:	bge	14d7c <__assert_fail@plt+0x3628>
   14d38:	b	14d3c <__assert_fail@plt+0x35e8>
   14d3c:	b	14d60 <__assert_fail@plt+0x360c>
   14d40:	b	14d60 <__assert_fail@plt+0x360c>
   14d44:	ldr	r0, [fp, #-8]
   14d48:	ldr	r0, [r0]
   14d4c:	cmn	r0, #1
   14d50:	bne	14d60 <__assert_fail@plt+0x360c>
   14d54:	b	14d58 <__assert_fail@plt+0x3604>
   14d58:	b	14d90 <__assert_fail@plt+0x363c>
   14d5c:	b	14d90 <__assert_fail@plt+0x363c>
   14d60:	ldr	r0, [fp, #-8]
   14d64:	ldr	r0, [r0]
   14d68:	movw	r1, #0
   14d6c:	sdiv	r0, r1, r0
   14d70:	cmp	r0, #2
   14d74:	blt	14d90 <__assert_fail@plt+0x363c>
   14d78:	b	14da4 <__assert_fail@plt+0x3650>
   14d7c:	ldr	r0, [pc, #1596]	; 153c0 <__assert_fail@plt+0x3c6c>
   14d80:	ldr	r1, [fp, #-8]
   14d84:	ldr	r1, [r1]
   14d88:	cmp	r0, r1
   14d8c:	bcs	14da4 <__assert_fail@plt+0x3650>
   14d90:	ldr	r0, [fp, #-8]
   14d94:	ldr	r0, [r0]
   14d98:	lsl	r0, r0, #1
   14d9c:	str	r0, [fp, #-12]
   14da0:	b	15368 <__assert_fail@plt+0x3c14>
   14da4:	ldr	r0, [fp, #-8]
   14da8:	ldr	r0, [r0]
   14dac:	lsl	r0, r0, #1
   14db0:	str	r0, [fp, #-12]
   14db4:	b	1536c <__assert_fail@plt+0x3c18>
   14db8:	b	14dbc <__assert_fail@plt+0x3668>
   14dbc:	b	14dc0 <__assert_fail@plt+0x366c>
   14dc0:	b	14e7c <__assert_fail@plt+0x3728>
   14dc4:	ldr	r0, [fp, #-8]
   14dc8:	ldr	r0, [r0]
   14dcc:	cmp	r0, #0
   14dd0:	bge	14e10 <__assert_fail@plt+0x36bc>
   14dd4:	b	14dd8 <__assert_fail@plt+0x3684>
   14dd8:	ldr	r0, [pc, #1508]	; 153c4 <__assert_fail@plt+0x3c70>
   14ddc:	ldr	r1, [fp, #-8]
   14de0:	ldr	r1, [r1]
   14de4:	cmp	r1, r0
   14de8:	blt	14ee0 <__assert_fail@plt+0x378c>
   14dec:	b	14ef4 <__assert_fail@plt+0x37a0>
   14df0:	ldr	r0, [pc, #1496]	; 153d0 <__assert_fail@plt+0x3c7c>
   14df4:	ldr	r1, [fp, #-8]
   14df8:	ldr	r1, [r1]
   14dfc:	mvn	r2, #0
   14e00:	sub	r1, r2, r1
   14e04:	cmp	r0, r1
   14e08:	ble	14ee0 <__assert_fail@plt+0x378c>
   14e0c:	b	14ef4 <__assert_fail@plt+0x37a0>
   14e10:	b	14e64 <__assert_fail@plt+0x3710>
   14e14:	b	14e18 <__assert_fail@plt+0x36c4>
   14e18:	ldr	r0, [fp, #-8]
   14e1c:	ldr	r0, [r0]
   14e20:	add	r0, r0, #-2147483648	; 0x80000000
   14e24:	movw	r1, #0
   14e28:	cmp	r1, r0
   14e2c:	blt	14ee0 <__assert_fail@plt+0x378c>
   14e30:	b	14ef4 <__assert_fail@plt+0x37a0>
   14e34:	ldr	r0, [fp, #-8]
   14e38:	ldr	r0, [r0]
   14e3c:	movw	r1, #0
   14e40:	cmp	r1, r0
   14e44:	bge	14ef4 <__assert_fail@plt+0x37a0>
   14e48:	ldr	r0, [pc, #1392]	; 153c0 <__assert_fail@plt+0x3c6c>
   14e4c:	ldr	r1, [fp, #-8]
   14e50:	ldr	r1, [r1]
   14e54:	sub	r1, r1, #1
   14e58:	cmp	r0, r1
   14e5c:	blt	14ee0 <__assert_fail@plt+0x378c>
   14e60:	b	14ef4 <__assert_fail@plt+0x37a0>
   14e64:	ldr	r0, [pc, #1376]	; 153cc <__assert_fail@plt+0x3c78>
   14e68:	ldr	r1, [fp, #-8]
   14e6c:	ldr	r1, [r1]
   14e70:	cmp	r0, r1
   14e74:	blt	14ee0 <__assert_fail@plt+0x378c>
   14e78:	b	14ef4 <__assert_fail@plt+0x37a0>
   14e7c:	b	14e84 <__assert_fail@plt+0x3730>
   14e80:	b	14ef4 <__assert_fail@plt+0x37a0>
   14e84:	ldr	r0, [fp, #-8]
   14e88:	ldr	r0, [r0]
   14e8c:	cmp	r0, #0
   14e90:	bge	14ecc <__assert_fail@plt+0x3778>
   14e94:	ldr	r0, [fp, #-8]
   14e98:	ldr	r0, [r0]
   14e9c:	cmn	r0, #1
   14ea0:	bne	14eb0 <__assert_fail@plt+0x375c>
   14ea4:	b	14ea8 <__assert_fail@plt+0x3754>
   14ea8:	b	14ef4 <__assert_fail@plt+0x37a0>
   14eac:	b	14ef4 <__assert_fail@plt+0x37a0>
   14eb0:	ldr	r0, [pc, #1296]	; 153c8 <__assert_fail@plt+0x3c74>
   14eb4:	ldr	r1, [fp, #-8]
   14eb8:	ldr	r1, [r1]
   14ebc:	sdiv	r0, r0, r1
   14ec0:	cmp	r0, #2
   14ec4:	blt	14ee0 <__assert_fail@plt+0x378c>
   14ec8:	b	14ef4 <__assert_fail@plt+0x37a0>
   14ecc:	ldr	r0, [pc, #1264]	; 153c4 <__assert_fail@plt+0x3c70>
   14ed0:	ldr	r1, [fp, #-8]
   14ed4:	ldr	r1, [r1]
   14ed8:	cmp	r0, r1
   14edc:	bge	14ef4 <__assert_fail@plt+0x37a0>
   14ee0:	ldr	r0, [fp, #-8]
   14ee4:	ldr	r0, [r0]
   14ee8:	lsl	r0, r0, #1
   14eec:	str	r0, [fp, #-12]
   14ef0:	b	15368 <__assert_fail@plt+0x3c14>
   14ef4:	ldr	r0, [fp, #-8]
   14ef8:	ldr	r0, [r0]
   14efc:	lsl	r0, r0, #1
   14f00:	str	r0, [fp, #-12]
   14f04:	b	1536c <__assert_fail@plt+0x3c18>
   14f08:	b	14fd0 <__assert_fail@plt+0x387c>
   14f0c:	ldr	r0, [fp, #-8]
   14f10:	ldr	r0, [r0]
   14f14:	cmp	r0, #0
   14f18:	bge	14f58 <__assert_fail@plt+0x3804>
   14f1c:	b	14f38 <__assert_fail@plt+0x37e4>
   14f20:	ldr	r0, [pc, #1176]	; 153c0 <__assert_fail@plt+0x3c6c>
   14f24:	ldr	r1, [fp, #-8]
   14f28:	ldr	r1, [r1]
   14f2c:	cmp	r1, r0
   14f30:	bcc	15040 <__assert_fail@plt+0x38ec>
   14f34:	b	15054 <__assert_fail@plt+0x3900>
   14f38:	ldr	r0, [fp, #-8]
   14f3c:	ldr	r0, [r0]
   14f40:	mvn	r1, #0
   14f44:	sub	r0, r1, r0
   14f48:	movw	r1, #1
   14f4c:	cmp	r1, r0
   14f50:	bls	15040 <__assert_fail@plt+0x38ec>
   14f54:	b	15054 <__assert_fail@plt+0x3900>
   14f58:	b	14f5c <__assert_fail@plt+0x3808>
   14f5c:	b	14fb8 <__assert_fail@plt+0x3864>
   14f60:	b	14fb8 <__assert_fail@plt+0x3864>
   14f64:	b	14fb8 <__assert_fail@plt+0x3864>
   14f68:	b	14f6c <__assert_fail@plt+0x3818>
   14f6c:	ldr	r0, [fp, #-8]
   14f70:	ldr	r0, [r0]
   14f74:	add	r0, r0, #0
   14f78:	movw	r1, #0
   14f7c:	cmp	r1, r0
   14f80:	blt	15040 <__assert_fail@plt+0x38ec>
   14f84:	b	15054 <__assert_fail@plt+0x3900>
   14f88:	ldr	r0, [fp, #-8]
   14f8c:	ldr	r0, [r0]
   14f90:	movw	r1, #0
   14f94:	cmp	r1, r0
   14f98:	bge	15054 <__assert_fail@plt+0x3900>
   14f9c:	ldr	r0, [fp, #-8]
   14fa0:	ldr	r0, [r0]
   14fa4:	sub	r0, r0, #1
   14fa8:	mvn	r1, #0
   14fac:	cmp	r1, r0
   14fb0:	blt	15040 <__assert_fail@plt+0x38ec>
   14fb4:	b	15054 <__assert_fail@plt+0x3900>
   14fb8:	ldr	r0, [fp, #-8]
   14fbc:	ldr	r0, [r0]
   14fc0:	movw	r1, #0
   14fc4:	cmp	r1, r0
   14fc8:	blt	15040 <__assert_fail@plt+0x38ec>
   14fcc:	b	15054 <__assert_fail@plt+0x3900>
   14fd0:	b	14fd8 <__assert_fail@plt+0x3884>
   14fd4:	b	15054 <__assert_fail@plt+0x3900>
   14fd8:	ldr	r0, [fp, #-8]
   14fdc:	ldr	r0, [r0]
   14fe0:	cmp	r0, #0
   14fe4:	bge	1502c <__assert_fail@plt+0x38d8>
   14fe8:	b	14fec <__assert_fail@plt+0x3898>
   14fec:	b	15010 <__assert_fail@plt+0x38bc>
   14ff0:	b	15010 <__assert_fail@plt+0x38bc>
   14ff4:	ldr	r0, [fp, #-8]
   14ff8:	ldr	r0, [r0]
   14ffc:	cmn	r0, #1
   15000:	bne	15010 <__assert_fail@plt+0x38bc>
   15004:	b	15008 <__assert_fail@plt+0x38b4>
   15008:	b	15040 <__assert_fail@plt+0x38ec>
   1500c:	b	15040 <__assert_fail@plt+0x38ec>
   15010:	ldr	r0, [fp, #-8]
   15014:	ldr	r0, [r0]
   15018:	movw	r1, #0
   1501c:	sdiv	r0, r1, r0
   15020:	cmp	r0, #2
   15024:	blt	15040 <__assert_fail@plt+0x38ec>
   15028:	b	15054 <__assert_fail@plt+0x3900>
   1502c:	ldr	r0, [pc, #908]	; 153c0 <__assert_fail@plt+0x3c6c>
   15030:	ldr	r1, [fp, #-8]
   15034:	ldr	r1, [r1]
   15038:	cmp	r0, r1
   1503c:	bcs	15054 <__assert_fail@plt+0x3900>
   15040:	ldr	r0, [fp, #-8]
   15044:	ldr	r0, [r0]
   15048:	lsl	r0, r0, #1
   1504c:	str	r0, [fp, #-12]
   15050:	b	15368 <__assert_fail@plt+0x3c14>
   15054:	ldr	r0, [fp, #-8]
   15058:	ldr	r0, [r0]
   1505c:	lsl	r0, r0, #1
   15060:	str	r0, [fp, #-12]
   15064:	b	1536c <__assert_fail@plt+0x3c18>
   15068:	b	1506c <__assert_fail@plt+0x3918>
   1506c:	b	1514c <__assert_fail@plt+0x39f8>
   15070:	ldr	r0, [fp, #-8]
   15074:	ldr	r0, [r0]
   15078:	cmp	r0, #0
   1507c:	bge	150d4 <__assert_fail@plt+0x3980>
   15080:	b	15084 <__assert_fail@plt+0x3930>
   15084:	ldr	r0, [fp, #-8]
   15088:	ldr	r0, [r0]
   1508c:	mvn	r1, #0
   15090:	subs	r1, r0, r1
   15094:	mvn	r2, #-1073741824	; 0xc0000000
   15098:	rscs	r0, r2, r0, asr #31
   1509c:	str	r1, [fp, #-32]	; 0xffffffe0
   150a0:	str	r0, [fp, #-36]	; 0xffffffdc
   150a4:	blt	151d8 <__assert_fail@plt+0x3a84>
   150a8:	b	151ec <__assert_fail@plt+0x3a98>
   150ac:	ldr	r0, [fp, #-8]
   150b0:	ldr	r0, [r0]
   150b4:	mvn	r0, r0
   150b8:	rsbs	r1, r0, #0
   150bc:	mov	r2, #-1073741824	; 0xc0000000
   150c0:	sbcs	r0, r2, r0, asr #31
   150c4:	str	r1, [sp, #40]	; 0x28
   150c8:	str	r0, [sp, #36]	; 0x24
   150cc:	blt	151d8 <__assert_fail@plt+0x3a84>
   150d0:	b	151ec <__assert_fail@plt+0x3a98>
   150d4:	b	15128 <__assert_fail@plt+0x39d4>
   150d8:	b	150dc <__assert_fail@plt+0x3988>
   150dc:	ldr	r0, [fp, #-8]
   150e0:	ldr	r0, [r0]
   150e4:	mov	r1, #-2147483648	; 0x80000000
   150e8:	add	r1, r1, r0, asr #31
   150ec:	rsbs	r0, r0, #0
   150f0:	rscs	r1, r1, #0
   150f4:	str	r0, [sp, #32]
   150f8:	str	r1, [sp, #28]
   150fc:	blt	151d8 <__assert_fail@plt+0x3a84>
   15100:	b	151ec <__assert_fail@plt+0x3a98>
   15104:	ldr	r0, [fp, #-8]
   15108:	ldr	r0, [r0]
   1510c:	movw	r1, #0
   15110:	cmp	r1, r0
   15114:	bge	151ec <__assert_fail@plt+0x3a98>
   15118:	mov	r0, #0
   1511c:	cmp	r0, #0
   15120:	bne	151d8 <__assert_fail@plt+0x3a84>
   15124:	b	151ec <__assert_fail@plt+0x3a98>
   15128:	ldr	r0, [fp, #-8]
   1512c:	ldr	r0, [r0]
   15130:	rsbs	r1, r0, #0
   15134:	mov	r2, #-1073741824	; 0xc0000000
   15138:	sbcs	r0, r2, r0, asr #31
   1513c:	str	r1, [sp, #24]
   15140:	str	r0, [sp, #20]
   15144:	blt	151d8 <__assert_fail@plt+0x3a84>
   15148:	b	151ec <__assert_fail@plt+0x3a98>
   1514c:	b	15154 <__assert_fail@plt+0x3a00>
   15150:	b	151ec <__assert_fail@plt+0x3a98>
   15154:	ldr	r0, [fp, #-8]
   15158:	ldr	r0, [r0]
   1515c:	cmp	r0, #0
   15160:	bge	151c0 <__assert_fail@plt+0x3a6c>
   15164:	ldr	r0, [fp, #-8]
   15168:	ldr	r0, [r0]
   1516c:	cmn	r0, #1
   15170:	bne	15180 <__assert_fail@plt+0x3a2c>
   15174:	b	15178 <__assert_fail@plt+0x3a24>
   15178:	b	151ec <__assert_fail@plt+0x3a98>
   1517c:	b	151ec <__assert_fail@plt+0x3a98>
   15180:	ldr	r0, [fp, #-8]
   15184:	ldr	r0, [r0]
   15188:	asr	r3, r0, #31
   1518c:	mov	r1, #0
   15190:	mov	r2, #-2147483648	; 0x80000000
   15194:	str	r0, [sp, #16]
   15198:	mov	r0, r1
   1519c:	mov	r1, r2
   151a0:	ldr	r2, [sp, #16]
   151a4:	bl	3c428 <__assert_fail@plt+0x2acd4>
   151a8:	subs	r0, r0, #2
   151ac:	sbcs	r1, r1, #0
   151b0:	str	r0, [sp, #12]
   151b4:	str	r1, [sp, #8]
   151b8:	blt	151d8 <__assert_fail@plt+0x3a84>
   151bc:	b	151ec <__assert_fail@plt+0x3a98>
   151c0:	ldr	r0, [fp, #-8]
   151c4:	ldr	r0, [r0]
   151c8:	asr	r0, r0, #31
   151cc:	cmp	r0, #1073741824	; 0x40000000
   151d0:	blt	151ec <__assert_fail@plt+0x3a98>
   151d4:	b	151d8 <__assert_fail@plt+0x3a84>
   151d8:	ldr	r0, [fp, #-8]
   151dc:	ldr	r0, [r0]
   151e0:	lsl	r0, r0, #1
   151e4:	str	r0, [fp, #-12]
   151e8:	b	15368 <__assert_fail@plt+0x3c14>
   151ec:	ldr	r0, [fp, #-8]
   151f0:	ldr	r0, [r0]
   151f4:	lsl	r0, r0, #1
   151f8:	str	r0, [fp, #-12]
   151fc:	b	1536c <__assert_fail@plt+0x3c18>
   15200:	b	152cc <__assert_fail@plt+0x3b78>
   15204:	ldr	r0, [fp, #-8]
   15208:	ldr	r0, [r0]
   1520c:	cmp	r0, #0
   15210:	bge	15254 <__assert_fail@plt+0x3b00>
   15214:	b	15240 <__assert_fail@plt+0x3aec>
   15218:	ldr	r0, [fp, #-8]
   1521c:	ldr	r0, [r0]
   15220:	mvn	r1, #0
   15224:	subs	r1, r0, r1
   15228:	mvn	r2, #-2147483648	; 0x80000000
   1522c:	rscs	r0, r2, r0, asr #31
   15230:	str	r1, [sp, #4]
   15234:	str	r0, [sp]
   15238:	bcc	15340 <__assert_fail@plt+0x3bec>
   1523c:	b	15354 <__assert_fail@plt+0x3c00>
   15240:	ldr	r0, [fp, #-8]
   15244:	ldr	r0, [r0]
   15248:	cmn	r0, #1
   1524c:	bne	15340 <__assert_fail@plt+0x3bec>
   15250:	b	15354 <__assert_fail@plt+0x3c00>
   15254:	b	15258 <__assert_fail@plt+0x3b04>
   15258:	b	152b4 <__assert_fail@plt+0x3b60>
   1525c:	b	152b4 <__assert_fail@plt+0x3b60>
   15260:	b	152b4 <__assert_fail@plt+0x3b60>
   15264:	b	15268 <__assert_fail@plt+0x3b14>
   15268:	ldr	r0, [fp, #-8]
   1526c:	ldr	r0, [r0]
   15270:	add	r0, r0, #0
   15274:	movw	r1, #0
   15278:	cmp	r1, r0
   1527c:	blt	15340 <__assert_fail@plt+0x3bec>
   15280:	b	15354 <__assert_fail@plt+0x3c00>
   15284:	ldr	r0, [fp, #-8]
   15288:	ldr	r0, [r0]
   1528c:	movw	r1, #0
   15290:	cmp	r1, r0
   15294:	bge	15354 <__assert_fail@plt+0x3c00>
   15298:	ldr	r0, [fp, #-8]
   1529c:	ldr	r0, [r0]
   152a0:	sub	r0, r0, #1
   152a4:	mvn	r1, #0
   152a8:	cmp	r1, r0
   152ac:	blt	15340 <__assert_fail@plt+0x3bec>
   152b0:	b	15354 <__assert_fail@plt+0x3c00>
   152b4:	ldr	r0, [fp, #-8]
   152b8:	ldr	r0, [r0]
   152bc:	movw	r1, #0
   152c0:	cmp	r1, r0
   152c4:	blt	15340 <__assert_fail@plt+0x3bec>
   152c8:	b	15354 <__assert_fail@plt+0x3c00>
   152cc:	b	152d4 <__assert_fail@plt+0x3b80>
   152d0:	b	15354 <__assert_fail@plt+0x3c00>
   152d4:	ldr	r0, [fp, #-8]
   152d8:	ldr	r0, [r0]
   152dc:	cmp	r0, #0
   152e0:	bge	15328 <__assert_fail@plt+0x3bd4>
   152e4:	b	152e8 <__assert_fail@plt+0x3b94>
   152e8:	b	1530c <__assert_fail@plt+0x3bb8>
   152ec:	b	1530c <__assert_fail@plt+0x3bb8>
   152f0:	ldr	r0, [fp, #-8]
   152f4:	ldr	r0, [r0]
   152f8:	cmn	r0, #1
   152fc:	bne	1530c <__assert_fail@plt+0x3bb8>
   15300:	b	15304 <__assert_fail@plt+0x3bb0>
   15304:	b	15340 <__assert_fail@plt+0x3bec>
   15308:	b	15340 <__assert_fail@plt+0x3bec>
   1530c:	ldr	r0, [fp, #-8]
   15310:	ldr	r0, [r0]
   15314:	movw	r1, #0
   15318:	sdiv	r0, r1, r0
   1531c:	cmp	r0, #2
   15320:	blt	15340 <__assert_fail@plt+0x3bec>
   15324:	b	15354 <__assert_fail@plt+0x3c00>
   15328:	ldr	r0, [fp, #-8]
   1532c:	ldr	r0, [r0]
   15330:	asr	r0, r0, #31
   15334:	cmn	r0, #1
   15338:	bgt	15354 <__assert_fail@plt+0x3c00>
   1533c:	b	15340 <__assert_fail@plt+0x3bec>
   15340:	ldr	r0, [fp, #-8]
   15344:	ldr	r0, [r0]
   15348:	lsl	r0, r0, #1
   1534c:	str	r0, [fp, #-12]
   15350:	b	15368 <__assert_fail@plt+0x3c14>
   15354:	ldr	r0, [fp, #-8]
   15358:	ldr	r0, [r0]
   1535c:	lsl	r0, r0, #1
   15360:	str	r0, [fp, #-12]
   15364:	b	1536c <__assert_fail@plt+0x3c18>
   15368:	bl	11850 <__assert_fail@plt+0xfc>
   1536c:	ldr	r0, [fp, #-8]
   15370:	bl	156ec <__assert_fail@plt+0x3f98>
   15374:	b	14468 <__assert_fail@plt+0x2d14>
   15378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1537c:	cmp	r0, #0
   15380:	beq	15390 <__assert_fail@plt+0x3c3c>
   15384:	ldr	r0, [fp, #-8]
   15388:	bl	15754 <__assert_fail@plt+0x4000>
   1538c:	b	15398 <__assert_fail@plt+0x3c44>
   15390:	ldr	r0, [fp, #-8]
   15394:	bl	156ec <__assert_fail@plt+0x3f98>
   15398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1539c:	cmp	r0, #0
   153a0:	movw	r0, #0
   153a4:	movne	r0, #1
   153a8:	and	r0, r0, #1
   153ac:	strb	r0, [fp, #-1]
   153b0:	ldrb	r0, [fp, #-1]
   153b4:	and	r0, r0, #1
   153b8:	mov	sp, fp
   153bc:	pop	{fp, pc}
   153c0:	svcvc	0x00ffffff
   153c4:	svccc	0x00ffffff
   153c8:	andhi	r0, r0, r0
   153cc:	andgt	r0, r0, r0
   153d0:	andgt	r0, r0, r1
   153d4:			; <UNDEFINED> instruction: 0xffff8000
   153d8:			; <UNDEFINED> instruction: 0xffffc000
   153dc:			; <UNDEFINED> instruction: 0xffffc001
   153e0:			; <UNDEFINED> instruction: 0xffff8001
   153e4:	push	{fp, lr}
   153e8:	mov	fp, sp
   153ec:	sub	sp, sp, #16
   153f0:	str	r0, [fp, #-4]
   153f4:	mov	r0, #48	; 0x30
   153f8:	bl	31404 <__assert_fail@plt+0x1fcb0>
   153fc:	str	r0, [sp, #8]
   15400:	ldr	r0, [sp, #8]
   15404:	mov	lr, #0
   15408:	str	lr, [r0]
   1540c:	ldr	r1, [sp, #8]
   15410:	ldr	r2, [fp, #-4]
   15414:	mov	r0, sp
   15418:	mov	r3, #1
   1541c:	str	r3, [r0]
   15420:	mvn	r3, #0
   15424:	mov	r0, lr
   15428:	str	lr, [sp, #4]
   1542c:	bl	316b8 <__assert_fail@plt+0x1ff64>
   15430:	ldr	r1, [sp, #8]
   15434:	str	r0, [r1, #28]
   15438:	ldr	r0, [sp, #8]
   1543c:	ldr	r1, [sp, #4]
   15440:	str	r1, [r0, #4]
   15444:	movw	r0, #58024	; 0xe2a8
   15448:	movt	r0, #4
   1544c:	ldr	r2, [r0]
   15450:	ldr	r0, [r0, #4]
   15454:	adds	r2, r2, #1
   15458:	adc	r0, r0, #0
   1545c:	ldr	r3, [sp, #8]
   15460:	str	r2, [r3, #16]
   15464:	str	r0, [r3, #20]
   15468:	ldr	r3, [sp, #8]
   1546c:	str	r0, [r3, #12]
   15470:	str	r2, [r3, #8]
   15474:	ldr	r0, [sp, #8]
   15478:	movw	r2, #0
   1547c:	str	r2, [r0, #24]
   15480:	ldr	r0, [sp, #8]
   15484:	str	r2, [r0, #36]	; 0x24
   15488:	ldr	r0, [sp, #8]
   1548c:	str	r2, [r0, #32]
   15490:	ldr	r0, [sp, #8]
   15494:	str	r2, [r0, #40]	; 0x28
   15498:	ldr	r0, [sp, #8]
   1549c:	mov	sp, fp
   154a0:	pop	{fp, pc}
   154a4:	push	{fp, lr}
   154a8:	mov	fp, sp
   154ac:	sub	sp, sp, #24
   154b0:	str	r0, [fp, #-8]
   154b4:	str	r1, [sp, #12]
   154b8:	ldr	r0, [sp, #12]
   154bc:	cmp	r0, #0
   154c0:	bne	154d0 <__assert_fail@plt+0x3d7c>
   154c4:	movw	r0, #0
   154c8:	str	r0, [fp, #-4]
   154cc:	b	15548 <__assert_fail@plt+0x3df4>
   154d0:	ldr	r1, [fp, #-8]
   154d4:	ldr	r2, [sp, #12]
   154d8:	movw	r0, #0
   154dc:	bl	30a18 <__assert_fail@plt+0x1f2c4>
   154e0:	str	r0, [sp, #8]
   154e4:	ldr	r0, [sp, #8]
   154e8:	cmp	r0, #0
   154ec:	bne	15500 <__assert_fail@plt+0x3dac>
   154f0:	movw	r0, #58012	; 0xe29c
   154f4:	movt	r0, #4
   154f8:	movw	r1, #1
   154fc:	strb	r1, [r0]
   15500:	ldr	r0, [sp, #8]
   15504:	cmn	r0, #1
   15508:	bne	15540 <__assert_fail@plt+0x3dec>
   1550c:	bl	11628 <__errno_location@plt>
   15510:	ldr	r1, [r0]
   15514:	movw	r0, #51096	; 0xc798
   15518:	movt	r0, #3
   1551c:	str	r1, [sp, #4]
   15520:	bl	115f8 <gettext@plt>
   15524:	movw	r1, #0
   15528:	str	r0, [sp]
   1552c:	mov	r0, r1
   15530:	ldr	r1, [sp, #4]
   15534:	ldr	r2, [sp]
   15538:	bl	11580 <error@plt>
   1553c:	bl	1188c <__assert_fail@plt+0x138>
   15540:	ldr	r0, [sp, #8]
   15544:	str	r0, [fp, #-4]
   15548:	ldr	r0, [fp, #-4]
   1554c:	mov	sp, fp
   15550:	pop	{fp, pc}
   15554:	push	{fp, lr}
   15558:	mov	fp, sp
   1555c:	sub	sp, sp, #32
   15560:	str	r0, [fp, #-8]
   15564:	ldr	r0, [fp, #-8]
   15568:	ldr	r0, [r0, #4]
   1556c:	cmp	r0, #0
   15570:	bne	15580 <__assert_fail@plt+0x3e2c>
   15574:	movw	r0, #0
   15578:	str	r0, [fp, #-4]
   1557c:	b	156e0 <__assert_fail@plt+0x3f8c>
   15580:	movw	r0, #0
   15584:	str	r0, [sp, #16]
   15588:	ldr	r0, [fp, #-8]
   1558c:	ldr	r0, [r0, #28]
   15590:	str	r0, [fp, #-12]
   15594:	ldr	r0, [fp, #-12]
   15598:	ldr	r1, [fp, #-8]
   1559c:	ldr	r1, [r1, #4]
   155a0:	add	r0, r0, r1
   155a4:	str	r0, [sp, #8]
   155a8:	ldr	r0, [sp, #8]
   155ac:	movw	r1, #10
   155b0:	strb	r1, [r0]
   155b4:	ldr	r0, [fp, #-12]
   155b8:	movw	r1, #10
   155bc:	bl	11514 <rawmemchr@plt>
   155c0:	str	r0, [sp, #4]
   155c4:	ldr	r0, [sp, #4]
   155c8:	ldr	r1, [sp, #8]
   155cc:	cmp	r0, r1
   155d0:	bne	155d8 <__assert_fail@plt+0x3e84>
   155d4:	b	15618 <__assert_fail@plt+0x3ec4>
   155d8:	ldr	r0, [sp, #4]
   155dc:	ldr	r1, [fp, #-12]
   155e0:	sub	r0, r0, r1
   155e4:	add	r0, r0, #1
   155e8:	str	r0, [sp, #12]
   155ec:	ldr	r0, [fp, #-8]
   155f0:	ldr	r1, [fp, #-12]
   155f4:	ldr	r2, [sp, #12]
   155f8:	bl	157ec <__assert_fail@plt+0x4098>
   155fc:	ldr	r0, [sp, #4]
   15600:	add	r0, r0, #1
   15604:	str	r0, [fp, #-12]
   15608:	ldr	r0, [sp, #16]
   1560c:	add	r0, r0, #1
   15610:	str	r0, [sp, #16]
   15614:	b	155b4 <__assert_fail@plt+0x3e60>
   15618:	ldr	r0, [sp, #8]
   1561c:	ldr	r1, [fp, #-12]
   15620:	sub	r0, r0, r1
   15624:	str	r0, [sp]
   15628:	ldr	r0, [sp]
   1562c:	cmp	r0, #0
   15630:	beq	15680 <__assert_fail@plt+0x3f2c>
   15634:	movw	r0, #58012	; 0xe29c
   15638:	movt	r0, #4
   1563c:	ldrb	r0, [r0]
   15640:	tst	r0, #1
   15644:	beq	15668 <__assert_fail@plt+0x3f14>
   15648:	ldr	r0, [fp, #-8]
   1564c:	ldr	r1, [fp, #-12]
   15650:	ldr	r2, [sp]
   15654:	bl	157ec <__assert_fail@plt+0x4098>
   15658:	ldr	r0, [sp, #16]
   1565c:	add	r0, r0, #1
   15660:	str	r0, [sp, #16]
   15664:	b	1567c <__assert_fail@plt+0x3f28>
   15668:	ldr	r0, [fp, #-12]
   1566c:	ldr	r1, [sp]
   15670:	bl	34118 <__assert_fail@plt+0x229c4>
   15674:	ldr	r1, [sp]
   15678:	bl	158c4 <__assert_fail@plt+0x4170>
   1567c:	b	15680 <__assert_fail@plt+0x3f2c>
   15680:	ldr	r0, [sp, #16]
   15684:	ldr	r1, [fp, #-8]
   15688:	str	r0, [r1, #24]
   1568c:	movw	r0, #58024	; 0xe2a8
   15690:	movt	r0, #4
   15694:	ldr	r1, [r0]
   15698:	ldr	r2, [r0, #4]
   1569c:	adds	r1, r1, #1
   156a0:	adc	r2, r2, #0
   156a4:	ldr	r3, [fp, #-8]
   156a8:	str	r1, [r3, #8]
   156ac:	str	r2, [r3, #12]
   156b0:	ldr	r3, [fp, #-8]
   156b4:	str	r2, [r3, #20]
   156b8:	str	r1, [r3, #16]
   156bc:	ldr	r1, [sp, #16]
   156c0:	ldr	r2, [r0]
   156c4:	ldr	r3, [r0, #4]
   156c8:	adds	r2, r2, r1
   156cc:	adc	r1, r3, r1, asr #31
   156d0:	str	r2, [r0]
   156d4:	str	r1, [r0, #4]
   156d8:	ldr	r0, [sp, #16]
   156dc:	str	r0, [fp, #-4]
   156e0:	ldr	r0, [fp, #-4]
   156e4:	mov	sp, fp
   156e8:	pop	{fp, pc}
   156ec:	push	{fp, lr}
   156f0:	mov	fp, sp
   156f4:	sub	sp, sp, #16
   156f8:	str	r0, [fp, #-4]
   156fc:	ldr	r0, [fp, #-4]
   15700:	ldr	r0, [r0, #32]
   15704:	str	r0, [sp, #8]
   15708:	ldr	r0, [sp, #8]
   1570c:	movw	r1, #0
   15710:	cmp	r0, r1
   15714:	beq	15738 <__assert_fail@plt+0x3fe4>
   15718:	ldr	r0, [sp, #8]
   1571c:	ldr	r0, [r0, #652]	; 0x28c
   15720:	str	r0, [sp, #4]
   15724:	ldr	r0, [sp, #8]
   15728:	bl	1604c <__assert_fail@plt+0x48f8>
   1572c:	ldr	r0, [sp, #4]
   15730:	str	r0, [sp, #8]
   15734:	b	15708 <__assert_fail@plt+0x3fb4>
   15738:	ldr	r0, [fp, #-4]
   1573c:	ldr	r0, [r0, #28]
   15740:	bl	1604c <__assert_fail@plt+0x48f8>
   15744:	ldr	r0, [fp, #-4]
   15748:	bl	1604c <__assert_fail@plt+0x48f8>
   1574c:	mov	sp, fp
   15750:	pop	{fp, pc}
   15754:	sub	sp, sp, #8
   15758:	str	r0, [sp, #4]
   1575c:	ldr	r0, [sp, #4]
   15760:	movw	r1, #0
   15764:	str	r1, [r0, #40]	; 0x28
   15768:	ldr	r0, [sp, #4]
   1576c:	ldr	r0, [r0, #32]
   15770:	ldr	r2, [sp, #4]
   15774:	str	r0, [r2, #36]	; 0x24
   15778:	movw	r0, #58008	; 0xe298
   1577c:	movt	r0, #4
   15780:	ldr	r0, [r0]
   15784:	cmp	r0, r1
   15788:	bne	157a0 <__assert_fail@plt+0x404c>
   1578c:	ldr	r0, [sp, #4]
   15790:	movw	r1, #58008	; 0xe298
   15794:	movt	r1, #4
   15798:	str	r0, [r1]
   1579c:	b	157e4 <__assert_fail@plt+0x4090>
   157a0:	movw	r0, #58008	; 0xe298
   157a4:	movt	r0, #4
   157a8:	ldr	r0, [r0]
   157ac:	str	r0, [sp]
   157b0:	ldr	r0, [sp]
   157b4:	ldr	r0, [r0, #40]	; 0x28
   157b8:	movw	r1, #0
   157bc:	cmp	r0, r1
   157c0:	beq	157d8 <__assert_fail@plt+0x4084>
   157c4:	b	157c8 <__assert_fail@plt+0x4074>
   157c8:	ldr	r0, [sp]
   157cc:	ldr	r0, [r0, #40]	; 0x28
   157d0:	str	r0, [sp]
   157d4:	b	157b0 <__assert_fail@plt+0x405c>
   157d8:	ldr	r0, [sp, #4]
   157dc:	ldr	r1, [sp]
   157e0:	str	r0, [r1, #40]	; 0x28
   157e4:	add	sp, sp, #8
   157e8:	bx	lr
   157ec:	push	{fp, lr}
   157f0:	mov	fp, sp
   157f4:	sub	sp, sp, #16
   157f8:	str	r0, [fp, #-4]
   157fc:	str	r1, [sp, #8]
   15800:	str	r2, [sp, #4]
   15804:	ldr	r0, [fp, #-4]
   15808:	ldr	r0, [r0, #32]
   1580c:	movw	r1, #0
   15810:	cmp	r0, r1
   15814:	bne	1582c <__assert_fail@plt+0x40d8>
   15818:	bl	15910 <__assert_fail@plt+0x41bc>
   1581c:	ldr	lr, [fp, #-4]
   15820:	str	r0, [lr, #36]	; 0x24
   15824:	ldr	lr, [fp, #-4]
   15828:	str	r0, [lr, #32]
   1582c:	ldr	r0, [fp, #-4]
   15830:	ldr	r0, [r0, #36]	; 0x24
   15834:	ldr	r0, [r0]
   15838:	cmp	r0, #80	; 0x50
   1583c:	bne	15864 <__assert_fail@plt+0x4110>
   15840:	bl	15910 <__assert_fail@plt+0x41bc>
   15844:	ldr	lr, [fp, #-4]
   15848:	ldr	lr, [lr, #36]	; 0x24
   1584c:	str	r0, [lr, #652]	; 0x28c
   15850:	ldr	r0, [fp, #-4]
   15854:	ldr	r0, [r0, #36]	; 0x24
   15858:	ldr	r0, [r0, #652]	; 0x28c
   1585c:	ldr	lr, [fp, #-4]
   15860:	str	r0, [lr, #36]	; 0x24
   15864:	ldr	r0, [fp, #-4]
   15868:	ldr	r0, [r0, #36]	; 0x24
   1586c:	str	r0, [sp]
   15870:	ldr	r0, [sp, #8]
   15874:	ldr	r1, [sp]
   15878:	ldr	r2, [r1, #4]
   1587c:	add	r1, r1, r2, lsl #3
   15880:	str	r0, [r1, #16]
   15884:	ldr	r0, [sp, #4]
   15888:	ldr	r1, [sp]
   1588c:	add	r2, r1, #12
   15890:	ldr	r1, [r1, #4]
   15894:	add	r1, r2, r1, lsl #3
   15898:	str	r0, [r1]
   1589c:	ldr	r0, [sp]
   158a0:	ldr	r1, [r0]
   158a4:	add	r1, r1, #1
   158a8:	str	r1, [r0]
   158ac:	ldr	r0, [sp]
   158b0:	ldr	r1, [r0, #4]
   158b4:	add	r1, r1, #1
   158b8:	str	r1, [r0, #4]
   158bc:	mov	sp, fp
   158c0:	pop	{fp, pc}
   158c4:	push	{fp, lr}
   158c8:	mov	fp, sp
   158cc:	sub	sp, sp, #8
   158d0:	str	r0, [sp, #4]
   158d4:	str	r1, [sp]
   158d8:	movw	r0, #58020	; 0xe2a4
   158dc:	movt	r0, #4
   158e0:	ldr	r0, [r0]
   158e4:	bl	1604c <__assert_fail@plt+0x48f8>
   158e8:	ldr	r0, [sp, #4]
   158ec:	movw	r1, #58020	; 0xe2a4
   158f0:	movt	r1, #4
   158f4:	str	r0, [r1]
   158f8:	ldr	r0, [sp]
   158fc:	movw	r1, #58016	; 0xe2a0
   15900:	movt	r1, #4
   15904:	str	r0, [r1]
   15908:	mov	sp, fp
   1590c:	pop	{fp, pc}
   15910:	push	{fp, lr}
   15914:	mov	fp, sp
   15918:	sub	sp, sp, #8
   1591c:	movw	r0, #656	; 0x290
   15920:	bl	31404 <__assert_fail@plt+0x1fcb0>
   15924:	str	r0, [sp, #4]
   15928:	ldr	r0, [sp, #4]
   1592c:	movw	lr, #0
   15930:	str	lr, [r0, #652]	; 0x28c
   15934:	ldr	r0, [sp, #4]
   15938:	bl	15948 <__assert_fail@plt+0x41f4>
   1593c:	ldr	r0, [sp, #4]
   15940:	mov	sp, fp
   15944:	pop	{fp, pc}
   15948:	sub	sp, sp, #4
   1594c:	str	r0, [sp]
   15950:	ldr	r0, [sp]
   15954:	movw	r1, #0
   15958:	str	r1, [r0]
   1595c:	ldr	r0, [sp]
   15960:	str	r1, [r0, #4]
   15964:	ldr	r0, [sp]
   15968:	str	r1, [r0, #8]
   1596c:	add	sp, sp, #4
   15970:	bx	lr
   15974:	push	{fp, lr}
   15978:	mov	fp, sp
   1597c:	sub	sp, sp, #16
   15980:	movw	r0, #58008	; 0xe298
   15984:	movt	r0, #4
   15988:	ldr	r0, [r0]
   1598c:	movw	r1, #0
   15990:	cmp	r0, r1
   15994:	bne	159d4 <__assert_fail@plt+0x4280>
   15998:	bl	14400 <__assert_fail@plt+0x2cac>
   1599c:	tst	r0, #1
   159a0:	bne	159d4 <__assert_fail@plt+0x4280>
   159a4:	bl	11628 <__errno_location@plt>
   159a8:	ldr	r1, [r0]
   159ac:	movw	r0, #53261	; 0xd00d
   159b0:	movt	r0, #3
   159b4:	str	r1, [fp, #-4]
   159b8:	bl	115f8 <gettext@plt>
   159bc:	movw	r1, #1
   159c0:	str	r0, [sp, #8]
   159c4:	mov	r0, r1
   159c8:	ldr	r1, [fp, #-4]
   159cc:	ldr	r2, [sp, #8]
   159d0:	bl	11580 <error@plt>
   159d4:	movw	r0, #58008	; 0xe298
   159d8:	movt	r0, #4
   159dc:	ldr	r0, [r0]
   159e0:	ldr	r1, [r0, #16]
   159e4:	ldr	r0, [r0, #20]
   159e8:	str	r0, [sp, #4]
   159ec:	mov	r0, r1
   159f0:	ldr	r1, [sp, #4]
   159f4:	mov	sp, fp
   159f8:	pop	{fp, pc}
   159fc:	push	{fp, lr}
   15a00:	mov	fp, sp
   15a04:	sub	sp, sp, #8
   15a08:	movw	r0, #58000	; 0xe290
   15a0c:	movt	r0, #4
   15a10:	ldr	r1, [r0]
   15a14:	ldr	r0, [r0, #4]
   15a18:	adds	r1, r1, #1
   15a1c:	adc	r0, r0, #0
   15a20:	str	r0, [sp, #4]
   15a24:	mov	r0, r1
   15a28:	ldr	r1, [sp, #4]
   15a2c:	bl	13ce0 <__assert_fail@plt+0x258c>
   15a30:	movw	r1, #0
   15a34:	cmp	r0, r1
   15a38:	movw	r0, #0
   15a3c:	moveq	r0, #1
   15a40:	and	r0, r0, #1
   15a44:	mov	sp, fp
   15a48:	pop	{fp, pc}
   15a4c:	push	{fp, lr}
   15a50:	mov	fp, sp
   15a54:	sub	sp, sp, #88	; 0x58
   15a58:	str	r0, [fp, #-4]
   15a5c:	str	r3, [fp, #-12]
   15a60:	str	r2, [fp, #-16]
   15a64:	movw	r0, #57784	; 0xe1b8
   15a68:	movt	r0, #4
   15a6c:	ldr	r0, [r0]
   15a70:	movw	r2, #53279	; 0xd01f
   15a74:	movt	r2, #3
   15a78:	str	r0, [sp, #44]	; 0x2c
   15a7c:	mov	r0, r2
   15a80:	bl	115f8 <gettext@plt>
   15a84:	movw	r2, #58044	; 0xe2bc
   15a88:	movt	r2, #4
   15a8c:	ldr	r2, [r2]
   15a90:	ldr	r3, [fp, #-4]
   15a94:	ldr	lr, [r3, #8]
   15a98:	ldr	r1, [r3, #12]
   15a9c:	sub	r3, fp, #37	; 0x25
   15aa0:	str	r0, [sp, #40]	; 0x28
   15aa4:	mov	r0, lr
   15aa8:	str	r2, [sp, #36]	; 0x24
   15aac:	mov	r2, r3
   15ab0:	bl	16198 <__assert_fail@plt+0x4a44>
   15ab4:	bl	18934 <__assert_fail@plt+0x71e0>
   15ab8:	ldr	r1, [sp, #44]	; 0x2c
   15abc:	str	r0, [sp, #32]
   15ac0:	mov	r0, r1
   15ac4:	ldr	r1, [sp, #40]	; 0x28
   15ac8:	ldr	r2, [sp, #36]	; 0x24
   15acc:	ldr	r3, [sp, #32]
   15ad0:	bl	1161c <fprintf@plt>
   15ad4:	ldr	r1, [fp, #-16]
   15ad8:	ldr	r2, [fp, #-12]
   15adc:	orr	r1, r1, r2
   15ae0:	cmp	r1, #0
   15ae4:	str	r0, [sp, #28]
   15ae8:	beq	15b54 <__assert_fail@plt+0x4400>
   15aec:	b	15af0 <__assert_fail@plt+0x439c>
   15af0:	sub	r2, fp, #37	; 0x25
   15af4:	movw	r0, #57784	; 0xe1b8
   15af8:	movt	r0, #4
   15afc:	ldr	r0, [r0]
   15b00:	movw	r1, #53242	; 0xcffa
   15b04:	movt	r1, #3
   15b08:	str	r0, [sp, #24]
   15b0c:	mov	r0, r1
   15b10:	str	r2, [sp, #20]
   15b14:	bl	115f8 <gettext@plt>
   15b18:	ldr	r1, [fp, #-16]
   15b1c:	ldr	r2, [fp, #-12]
   15b20:	str	r0, [sp, #16]
   15b24:	mov	r0, r1
   15b28:	mov	r1, r2
   15b2c:	ldr	r2, [sp, #20]
   15b30:	bl	16198 <__assert_fail@plt+0x4a44>
   15b34:	ldr	r1, [sp, #24]
   15b38:	str	r0, [sp, #12]
   15b3c:	mov	r0, r1
   15b40:	ldr	r1, [sp, #16]
   15b44:	ldr	r2, [sp, #12]
   15b48:	bl	1161c <fprintf@plt>
   15b4c:	str	r0, [sp, #8]
   15b50:	b	15b70 <__assert_fail@plt+0x441c>
   15b54:	movw	r0, #57784	; 0xe1b8
   15b58:	movt	r0, #4
   15b5c:	ldr	r0, [r0]
   15b60:	movw	r1, #52342	; 0xcc76
   15b64:	movt	r1, #3
   15b68:	bl	1161c <fprintf@plt>
   15b6c:	str	r0, [sp, #4]
   15b70:	bl	1188c <__assert_fail@plt+0x138>
   15b74:	sub	sp, sp, #4
   15b78:	str	r0, [sp]
   15b7c:	ldr	r0, [sp]
   15b80:	movw	r1, #58036	; 0xe2b4
   15b84:	movt	r1, #4
   15b88:	str	r0, [r1]
   15b8c:	add	sp, sp, #4
   15b90:	bx	lr
   15b94:	sub	sp, sp, #4
   15b98:	and	r0, r0, #1
   15b9c:	strb	r0, [sp, #3]
   15ba0:	ldrb	r0, [sp, #3]
   15ba4:	and	r0, r0, #1
   15ba8:	movw	r1, #58040	; 0xe2b8
   15bac:	movt	r1, #4
   15bb0:	strb	r0, [r1]
   15bb4:	add	sp, sp, #4
   15bb8:	bx	lr
   15bbc:	push	{fp, lr}
   15bc0:	mov	fp, sp
   15bc4:	sub	sp, sp, #24
   15bc8:	movw	r0, #57788	; 0xe1bc
   15bcc:	movt	r0, #4
   15bd0:	ldr	r0, [r0]
   15bd4:	bl	38c48 <__assert_fail@plt+0x274f4>
   15bd8:	cmp	r0, #0
   15bdc:	beq	15cac <__assert_fail@plt+0x4558>
   15be0:	movw	r0, #58040	; 0xe2b8
   15be4:	movt	r0, #4
   15be8:	ldrb	r0, [r0]
   15bec:	tst	r0, #1
   15bf0:	beq	15c04 <__assert_fail@plt+0x44b0>
   15bf4:	bl	11628 <__errno_location@plt>
   15bf8:	ldr	r0, [r0]
   15bfc:	cmp	r0, #32
   15c00:	beq	15cac <__assert_fail@plt+0x4558>
   15c04:	movw	r0, #53991	; 0xd2e7
   15c08:	movt	r0, #3
   15c0c:	bl	115f8 <gettext@plt>
   15c10:	str	r0, [fp, #-4]
   15c14:	movw	r0, #58036	; 0xe2b4
   15c18:	movt	r0, #4
   15c1c:	ldr	r0, [r0]
   15c20:	movw	lr, #0
   15c24:	cmp	r0, lr
   15c28:	beq	15c80 <__assert_fail@plt+0x452c>
   15c2c:	bl	11628 <__errno_location@plt>
   15c30:	ldr	r1, [r0]
   15c34:	movw	r0, #58036	; 0xe2b4
   15c38:	movt	r0, #4
   15c3c:	ldr	r0, [r0]
   15c40:	str	r1, [fp, #-8]
   15c44:	bl	18698 <__assert_fail@plt+0x6f44>
   15c48:	ldr	r1, [fp, #-4]
   15c4c:	movw	lr, #0
   15c50:	str	r0, [sp, #12]
   15c54:	mov	r0, lr
   15c58:	ldr	lr, [fp, #-8]
   15c5c:	str	r1, [sp, #8]
   15c60:	mov	r1, lr
   15c64:	movw	r2, #54003	; 0xd2f3
   15c68:	movt	r2, #3
   15c6c:	ldr	r3, [sp, #12]
   15c70:	ldr	ip, [sp, #8]
   15c74:	str	ip, [sp]
   15c78:	bl	11580 <error@plt>
   15c7c:	b	15c9c <__assert_fail@plt+0x4548>
   15c80:	bl	11628 <__errno_location@plt>
   15c84:	ldr	r1, [r0]
   15c88:	ldr	r3, [fp, #-4]
   15c8c:	movw	r0, #0
   15c90:	movw	r2, #52883	; 0xce93
   15c94:	movt	r2, #3
   15c98:	bl	11580 <error@plt>
   15c9c:	movw	r0, #57696	; 0xe160
   15ca0:	movt	r0, #4
   15ca4:	ldr	r0, [r0]
   15ca8:	bl	1146c <_exit@plt>
   15cac:	movw	r0, #57784	; 0xe1b8
   15cb0:	movt	r0, #4
   15cb4:	ldr	r0, [r0]
   15cb8:	bl	38c48 <__assert_fail@plt+0x274f4>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15cd4 <__assert_fail@plt+0x4580>
   15cc4:	movw	r0, #57696	; 0xe160
   15cc8:	movt	r0, #4
   15ccc:	ldr	r0, [r0]
   15cd0:	bl	1146c <_exit@plt>
   15cd4:	mov	sp, fp
   15cd8:	pop	{fp, pc}
   15cdc:	push	{fp, lr}
   15ce0:	mov	fp, sp
   15ce4:	sub	sp, sp, #32
   15ce8:	str	r0, [fp, #-8]
   15cec:	movw	r0, #0
   15cf0:	str	r0, [fp, #-12]
   15cf4:	str	r0, [sp, #12]
   15cf8:	ldr	r0, [fp, #-8]
   15cfc:	bl	11670 <fileno@plt>
   15d00:	str	r0, [sp, #16]
   15d04:	ldr	r0, [sp, #16]
   15d08:	cmp	r0, #0
   15d0c:	bge	15d20 <__assert_fail@plt+0x45cc>
   15d10:	ldr	r0, [fp, #-8]
   15d14:	bl	11694 <fclose@plt>
   15d18:	str	r0, [fp, #-4]
   15d1c:	b	15dbc <__assert_fail@plt+0x4668>
   15d20:	ldr	r0, [fp, #-8]
   15d24:	bl	115bc <__freading@plt>
   15d28:	cmp	r0, #0
   15d2c:	beq	15d64 <__assert_fail@plt+0x4610>
   15d30:	ldr	r0, [fp, #-8]
   15d34:	bl	11670 <fileno@plt>
   15d38:	mov	lr, sp
   15d3c:	mov	r1, #1
   15d40:	str	r1, [lr]
   15d44:	mov	r1, #0
   15d48:	mov	r2, r1
   15d4c:	mov	r3, r1
   15d50:	bl	11538 <lseek64@plt>
   15d54:	and	r0, r0, r1
   15d58:	cmn	r0, #1
   15d5c:	beq	15d80 <__assert_fail@plt+0x462c>
   15d60:	b	15d64 <__assert_fail@plt+0x4610>
   15d64:	ldr	r0, [fp, #-8]
   15d68:	bl	15e70 <__assert_fail@plt+0x471c>
   15d6c:	cmp	r0, #0
   15d70:	beq	15d80 <__assert_fail@plt+0x462c>
   15d74:	bl	11628 <__errno_location@plt>
   15d78:	ldr	r0, [r0]
   15d7c:	str	r0, [fp, #-12]
   15d80:	ldr	r0, [fp, #-8]
   15d84:	bl	11694 <fclose@plt>
   15d88:	str	r0, [sp, #12]
   15d8c:	ldr	r0, [fp, #-12]
   15d90:	cmp	r0, #0
   15d94:	beq	15db4 <__assert_fail@plt+0x4660>
   15d98:	ldr	r0, [fp, #-12]
   15d9c:	str	r0, [sp, #8]
   15da0:	bl	11628 <__errno_location@plt>
   15da4:	ldr	lr, [sp, #8]
   15da8:	str	lr, [r0]
   15dac:	mvn	r0, #0
   15db0:	str	r0, [sp, #12]
   15db4:	ldr	r0, [sp, #12]
   15db8:	str	r0, [fp, #-4]
   15dbc:	ldr	r0, [fp, #-4]
   15dc0:	mov	sp, fp
   15dc4:	pop	{fp, pc}
   15dc8:	push	{fp, lr}
   15dcc:	mov	fp, sp
   15dd0:	sub	sp, sp, #40	; 0x28
   15dd4:	str	r0, [fp, #-8]
   15dd8:	str	r1, [fp, #-12]
   15ddc:	str	r2, [fp, #-16]
   15de0:	str	r3, [sp, #20]
   15de4:	ldr	r0, [fp, #-12]
   15de8:	ldr	r1, [fp, #-16]
   15dec:	ldr	r2, [sp, #20]
   15df0:	bl	1158c <open64@plt>
   15df4:	str	r0, [sp, #16]
   15df8:	ldr	r0, [sp, #16]
   15dfc:	ldr	r1, [fp, #-8]
   15e00:	cmp	r0, r1
   15e04:	beq	15e14 <__assert_fail@plt+0x46c0>
   15e08:	ldr	r0, [sp, #16]
   15e0c:	cmp	r0, #0
   15e10:	bge	15e20 <__assert_fail@plt+0x46cc>
   15e14:	ldr	r0, [sp, #16]
   15e18:	str	r0, [fp, #-4]
   15e1c:	b	15e64 <__assert_fail@plt+0x4710>
   15e20:	ldr	r0, [sp, #16]
   15e24:	ldr	r1, [fp, #-8]
   15e28:	bl	114e4 <dup2@plt>
   15e2c:	str	r0, [sp, #12]
   15e30:	bl	11628 <__errno_location@plt>
   15e34:	ldr	r0, [r0]
   15e38:	str	r0, [sp, #8]
   15e3c:	ldr	r0, [sp, #16]
   15e40:	bl	11748 <close@plt>
   15e44:	ldr	r1, [sp, #8]
   15e48:	str	r0, [sp, #4]
   15e4c:	str	r1, [sp]
   15e50:	bl	11628 <__errno_location@plt>
   15e54:	ldr	r1, [sp]
   15e58:	str	r1, [r0]
   15e5c:	ldr	r0, [sp, #12]
   15e60:	str	r0, [fp, #-4]
   15e64:	ldr	r0, [fp, #-4]
   15e68:	mov	sp, fp
   15e6c:	pop	{fp, pc}
   15e70:	push	{fp, lr}
   15e74:	mov	fp, sp
   15e78:	sub	sp, sp, #8
   15e7c:	str	r0, [sp]
   15e80:	ldr	r0, [sp]
   15e84:	movw	r1, #0
   15e88:	cmp	r0, r1
   15e8c:	beq	15ea0 <__assert_fail@plt+0x474c>
   15e90:	ldr	r0, [sp]
   15e94:	bl	115bc <__freading@plt>
   15e98:	cmp	r0, #0
   15e9c:	bne	15eb0 <__assert_fail@plt+0x475c>
   15ea0:	ldr	r0, [sp]
   15ea4:	bl	11430 <fflush@plt>
   15ea8:	str	r0, [sp, #4]
   15eac:	b	15ec4 <__assert_fail@plt+0x4770>
   15eb0:	ldr	r0, [sp]
   15eb4:	bl	15ed0 <__assert_fail@plt+0x477c>
   15eb8:	ldr	r0, [sp]
   15ebc:	bl	11430 <fflush@plt>
   15ec0:	str	r0, [sp, #4]
   15ec4:	ldr	r0, [sp, #4]
   15ec8:	mov	sp, fp
   15ecc:	pop	{fp, pc}
   15ed0:	push	{fp, lr}
   15ed4:	mov	fp, sp
   15ed8:	sub	sp, sp, #16
   15edc:	str	r0, [fp, #-4]
   15ee0:	ldr	r0, [fp, #-4]
   15ee4:	ldr	r0, [r0]
   15ee8:	and	r0, r0, #256	; 0x100
   15eec:	cmp	r0, #0
   15ef0:	beq	15f18 <__assert_fail@plt+0x47c4>
   15ef4:	ldr	r0, [fp, #-4]
   15ef8:	mov	r1, sp
   15efc:	mov	r2, #1
   15f00:	str	r2, [r1]
   15f04:	mov	r1, #0
   15f08:	mov	r2, r1
   15f0c:	mov	r3, r1
   15f10:	bl	1608c <__assert_fail@plt+0x4938>
   15f14:	str	r0, [sp, #8]
   15f18:	mov	sp, fp
   15f1c:	pop	{fp, pc}
   15f20:	push	{fp, lr}
   15f24:	mov	fp, sp
   15f28:	sub	sp, sp, #48	; 0x30
   15f2c:	str	r0, [fp, #-8]
   15f30:	str	r1, [fp, #-12]
   15f34:	ldr	r0, [fp, #-8]
   15f38:	ldr	r1, [fp, #-12]
   15f3c:	bl	11700 <fopen64@plt>
   15f40:	str	r0, [fp, #-16]
   15f44:	ldr	r0, [fp, #-16]
   15f48:	movw	r1, #0
   15f4c:	cmp	r0, r1
   15f50:	beq	16038 <__assert_fail@plt+0x48e4>
   15f54:	ldr	r0, [fp, #-16]
   15f58:	bl	11670 <fileno@plt>
   15f5c:	str	r0, [fp, #-20]	; 0xffffffec
   15f60:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f64:	movw	lr, #0
   15f68:	cmp	lr, r0
   15f6c:	bgt	16034 <__assert_fail@plt+0x48e0>
   15f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f74:	cmp	r0, #2
   15f78:	bgt	16034 <__assert_fail@plt+0x48e0>
   15f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f80:	bl	30ac8 <__assert_fail@plt+0x1f374>
   15f84:	str	r0, [sp, #24]
   15f88:	ldr	r0, [sp, #24]
   15f8c:	cmp	r0, #0
   15f90:	bge	15fcc <__assert_fail@plt+0x4878>
   15f94:	bl	11628 <__errno_location@plt>
   15f98:	ldr	r0, [r0]
   15f9c:	str	r0, [sp, #20]
   15fa0:	ldr	r0, [fp, #-16]
   15fa4:	bl	15cdc <__assert_fail@plt+0x4588>
   15fa8:	ldr	lr, [sp, #20]
   15fac:	str	r0, [sp, #12]
   15fb0:	str	lr, [sp, #8]
   15fb4:	bl	11628 <__errno_location@plt>
   15fb8:	ldr	lr, [sp, #8]
   15fbc:	str	lr, [r0]
   15fc0:	movw	r0, #0
   15fc4:	str	r0, [fp, #-4]
   15fc8:	b	16040 <__assert_fail@plt+0x48ec>
   15fcc:	ldr	r0, [fp, #-16]
   15fd0:	bl	15cdc <__assert_fail@plt+0x4588>
   15fd4:	cmp	r0, #0
   15fd8:	bne	15ff8 <__assert_fail@plt+0x48a4>
   15fdc:	ldr	r0, [sp, #24]
   15fe0:	ldr	r1, [fp, #-12]
   15fe4:	bl	113ac <fdopen@plt>
   15fe8:	str	r0, [fp, #-16]
   15fec:	movw	r1, #0
   15ff0:	cmp	r0, r1
   15ff4:	bne	16030 <__assert_fail@plt+0x48dc>
   15ff8:	bl	11628 <__errno_location@plt>
   15ffc:	ldr	r0, [r0]
   16000:	str	r0, [sp, #16]
   16004:	ldr	r0, [sp, #24]
   16008:	bl	11748 <close@plt>
   1600c:	ldr	lr, [sp, #16]
   16010:	str	r0, [sp, #4]
   16014:	str	lr, [sp]
   16018:	bl	11628 <__errno_location@plt>
   1601c:	ldr	lr, [sp]
   16020:	str	lr, [r0]
   16024:	movw	r0, #0
   16028:	str	r0, [fp, #-4]
   1602c:	b	16040 <__assert_fail@plt+0x48ec>
   16030:	b	16034 <__assert_fail@plt+0x48e0>
   16034:	b	16038 <__assert_fail@plt+0x48e4>
   16038:	ldr	r0, [fp, #-16]
   1603c:	str	r0, [fp, #-4]
   16040:	ldr	r0, [fp, #-4]
   16044:	mov	sp, fp
   16048:	pop	{fp, pc}
   1604c:	push	{fp, lr}
   16050:	mov	fp, sp
   16054:	sub	sp, sp, #16
   16058:	str	r0, [fp, #-4]
   1605c:	bl	11628 <__errno_location@plt>
   16060:	ldr	r0, [r0]
   16064:	str	r0, [sp, #8]
   16068:	ldr	r0, [fp, #-4]
   1606c:	bl	11454 <free@plt>
   16070:	ldr	r0, [sp, #8]
   16074:	str	r0, [sp, #4]
   16078:	bl	11628 <__errno_location@plt>
   1607c:	ldr	lr, [sp, #4]
   16080:	str	lr, [r0]
   16084:	mov	sp, fp
   16088:	pop	{fp, pc}
   1608c:	push	{fp, lr}
   16090:	mov	fp, sp
   16094:	sub	sp, sp, #32
   16098:	ldr	r1, [fp, #8]
   1609c:	str	r0, [fp, #-8]
   160a0:	str	r3, [sp, #20]
   160a4:	str	r2, [sp, #16]
   160a8:	ldr	r0, [fp, #-8]
   160ac:	ldr	r0, [r0, #8]
   160b0:	ldr	r2, [fp, #-8]
   160b4:	ldr	r2, [r2, #4]
   160b8:	cmp	r0, r2
   160bc:	str	r1, [sp, #4]
   160c0:	bne	1616c <__assert_fail@plt+0x4a18>
   160c4:	ldr	r0, [fp, #-8]
   160c8:	ldr	r0, [r0, #20]
   160cc:	ldr	r1, [fp, #-8]
   160d0:	ldr	r1, [r1, #16]
   160d4:	cmp	r0, r1
   160d8:	bne	1616c <__assert_fail@plt+0x4a18>
   160dc:	ldr	r0, [fp, #-8]
   160e0:	ldr	r0, [r0, #36]	; 0x24
   160e4:	movw	r1, #0
   160e8:	cmp	r0, r1
   160ec:	bne	1616c <__assert_fail@plt+0x4a18>
   160f0:	ldr	r0, [fp, #-8]
   160f4:	bl	11670 <fileno@plt>
   160f8:	ldr	r2, [sp, #16]
   160fc:	ldr	r3, [sp, #20]
   16100:	ldr	lr, [fp, #8]
   16104:	mov	r1, sp
   16108:	str	lr, [r1]
   1610c:	bl	11538 <lseek64@plt>
   16110:	str	r1, [sp, #12]
   16114:	str	r0, [sp, #8]
   16118:	ldr	r0, [sp, #8]
   1611c:	ldr	r1, [sp, #12]
   16120:	and	r0, r0, r1
   16124:	cmn	r0, #1
   16128:	bne	1613c <__assert_fail@plt+0x49e8>
   1612c:	b	16130 <__assert_fail@plt+0x49dc>
   16130:	mvn	r0, #0
   16134:	str	r0, [fp, #-4]
   16138:	b	1618c <__assert_fail@plt+0x4a38>
   1613c:	ldr	r0, [fp, #-8]
   16140:	ldr	r1, [r0]
   16144:	bic	r1, r1, #16
   16148:	str	r1, [r0]
   1614c:	ldr	r0, [sp, #8]
   16150:	ldr	r1, [sp, #12]
   16154:	ldr	r2, [fp, #-8]
   16158:	str	r1, [r2, #84]	; 0x54
   1615c:	str	r0, [r2, #80]	; 0x50
   16160:	movw	r0, #0
   16164:	str	r0, [fp, #-4]
   16168:	b	1618c <__assert_fail@plt+0x4a38>
   1616c:	ldr	r0, [fp, #-8]
   16170:	ldr	r2, [sp, #16]
   16174:	ldr	r3, [sp, #20]
   16178:	ldr	r1, [fp, #8]
   1617c:	mov	ip, sp
   16180:	str	r1, [ip]
   16184:	bl	116a0 <fseeko64@plt>
   16188:	str	r0, [fp, #-4]
   1618c:	ldr	r0, [fp, #-4]
   16190:	mov	sp, fp
   16194:	pop	{fp, pc}
   16198:	push	{fp, lr}
   1619c:	mov	fp, sp
   161a0:	sub	sp, sp, #32
   161a4:	str	r0, [fp, #-8]
   161a8:	str	r1, [fp, #-4]
   161ac:	str	r2, [fp, #-12]
   161b0:	ldr	r0, [fp, #-12]
   161b4:	add	r0, r0, #20
   161b8:	str	r0, [sp, #16]
   161bc:	ldr	r0, [sp, #16]
   161c0:	mov	r1, #0
   161c4:	strb	r1, [r0]
   161c8:	ldr	r0, [fp, #-4]
   161cc:	cmn	r0, #1
   161d0:	bgt	16260 <__assert_fail@plt+0x4b0c>
   161d4:	b	161d8 <__assert_fail@plt+0x4a84>
   161d8:	b	161dc <__assert_fail@plt+0x4a88>
   161dc:	ldr	r0, [fp, #-8]
   161e0:	ldr	r1, [fp, #-4]
   161e4:	mov	r2, #10
   161e8:	mov	r3, #0
   161ec:	bl	3c428 <__assert_fail@plt+0x2acd4>
   161f0:	rsb	r2, r2, #48	; 0x30
   161f4:	ldr	r3, [sp, #16]
   161f8:	mvn	lr, #0
   161fc:	add	ip, r3, lr
   16200:	str	ip, [sp, #16]
   16204:	add	r3, r3, lr
   16208:	strb	r2, [r3]
   1620c:	str	r0, [sp, #12]
   16210:	str	r1, [sp, #8]
   16214:	ldr	r0, [fp, #-8]
   16218:	ldr	r1, [fp, #-4]
   1621c:	mov	r2, #10
   16220:	mov	r3, #0
   16224:	bl	3c428 <__assert_fail@plt+0x2acd4>
   16228:	str	r1, [fp, #-4]
   1622c:	str	r0, [fp, #-8]
   16230:	orr	r0, r0, r1
   16234:	cmp	r0, #0
   16238:	bne	161dc <__assert_fail@plt+0x4a88>
   1623c:	b	16240 <__assert_fail@plt+0x4aec>
   16240:	ldr	r0, [sp, #16]
   16244:	mvn	r1, #0
   16248:	add	r2, r0, r1
   1624c:	str	r2, [sp, #16]
   16250:	add	r0, r0, r1
   16254:	movw	r1, #45	; 0x2d
   16258:	strb	r1, [r0]
   1625c:	b	162cc <__assert_fail@plt+0x4b78>
   16260:	b	16264 <__assert_fail@plt+0x4b10>
   16264:	ldr	r0, [fp, #-8]
   16268:	ldr	r1, [fp, #-4]
   1626c:	mov	r2, #10
   16270:	mov	r3, #0
   16274:	bl	3c428 <__assert_fail@plt+0x2acd4>
   16278:	add	r2, r2, #48	; 0x30
   1627c:	ldr	r3, [sp, #16]
   16280:	mvn	lr, #0
   16284:	add	ip, r3, lr
   16288:	str	ip, [sp, #16]
   1628c:	add	r3, r3, lr
   16290:	strb	r2, [r3]
   16294:	str	r0, [sp, #4]
   16298:	str	r1, [sp]
   1629c:	ldr	r0, [fp, #-8]
   162a0:	ldr	r1, [fp, #-4]
   162a4:	mov	r2, #10
   162a8:	mov	r3, #0
   162ac:	bl	3c428 <__assert_fail@plt+0x2acd4>
   162b0:	str	r1, [fp, #-4]
   162b4:	str	r0, [fp, #-8]
   162b8:	orr	r0, r0, r1
   162bc:	cmp	r0, #0
   162c0:	bne	16264 <__assert_fail@plt+0x4b10>
   162c4:	b	162c8 <__assert_fail@plt+0x4b74>
   162c8:	b	162cc <__assert_fail@plt+0x4b78>
   162cc:	ldr	r0, [sp, #16]
   162d0:	mov	sp, fp
   162d4:	pop	{fp, pc}
   162d8:	push	{fp, lr}
   162dc:	mov	fp, sp
   162e0:	sub	sp, sp, #24
   162e4:	str	r0, [fp, #-4]
   162e8:	ldr	r0, [fp, #-4]
   162ec:	movw	r1, #0
   162f0:	cmp	r0, r1
   162f4:	bne	16318 <__assert_fail@plt+0x4bc4>
   162f8:	movw	r0, #57784	; 0xe1b8
   162fc:	movt	r0, #4
   16300:	ldr	r1, [r0]
   16304:	movw	r0, #54010	; 0xd2fa
   16308:	movt	r0, #3
   1630c:	bl	11724 <fputs@plt>
   16310:	str	r0, [sp, #8]
   16314:	bl	1173c <abort@plt>
   16318:	ldr	r0, [fp, #-4]
   1631c:	movw	r1, #47	; 0x2f
   16320:	bl	116dc <strrchr@plt>
   16324:	str	r0, [fp, #-8]
   16328:	ldr	r0, [fp, #-8]
   1632c:	movw	r1, #0
   16330:	cmp	r0, r1
   16334:	beq	16348 <__assert_fail@plt+0x4bf4>
   16338:	ldr	r0, [fp, #-8]
   1633c:	add	r0, r0, #1
   16340:	str	r0, [sp, #4]
   16344:	b	16350 <__assert_fail@plt+0x4bfc>
   16348:	ldr	r0, [fp, #-4]
   1634c:	str	r0, [sp, #4]
   16350:	ldr	r0, [sp, #4]
   16354:	str	r0, [sp, #12]
   16358:	ldr	r0, [sp, #12]
   1635c:	ldr	r1, [fp, #-4]
   16360:	sub	r0, r0, r1
   16364:	cmp	r0, #7
   16368:	blt	163d4 <__assert_fail@plt+0x4c80>
   1636c:	ldr	r0, [sp, #12]
   16370:	mvn	r1, #6
   16374:	add	r0, r0, r1
   16378:	movw	r1, #54066	; 0xd332
   1637c:	movt	r1, #3
   16380:	movw	r2, #7
   16384:	bl	11730 <strncmp@plt>
   16388:	cmp	r0, #0
   1638c:	bne	163d4 <__assert_fail@plt+0x4c80>
   16390:	ldr	r0, [sp, #12]
   16394:	str	r0, [fp, #-4]
   16398:	ldr	r0, [sp, #12]
   1639c:	movw	r1, #54074	; 0xd33a
   163a0:	movt	r1, #3
   163a4:	movw	r2, #3
   163a8:	bl	11730 <strncmp@plt>
   163ac:	cmp	r0, #0
   163b0:	bne	163d0 <__assert_fail@plt+0x4c7c>
   163b4:	ldr	r0, [sp, #12]
   163b8:	add	r0, r0, #3
   163bc:	str	r0, [fp, #-4]
   163c0:	ldr	r0, [fp, #-4]
   163c4:	movw	r1, #57768	; 0xe1a8
   163c8:	movt	r1, #4
   163cc:	str	r0, [r1]
   163d0:	b	163d4 <__assert_fail@plt+0x4c80>
   163d4:	ldr	r0, [fp, #-4]
   163d8:	movw	r1, #58044	; 0xe2bc
   163dc:	movt	r1, #4
   163e0:	str	r0, [r1]
   163e4:	ldr	r0, [fp, #-4]
   163e8:	movw	r1, #57772	; 0xe1ac
   163ec:	movt	r1, #4
   163f0:	str	r0, [r1]
   163f4:	mov	sp, fp
   163f8:	pop	{fp, pc}
   163fc:	push	{fp, lr}
   16400:	mov	fp, sp
   16404:	sub	sp, sp, #24
   16408:	str	r0, [fp, #-4]
   1640c:	bl	11628 <__errno_location@plt>
   16410:	ldr	r0, [r0]
   16414:	str	r0, [fp, #-8]
   16418:	ldr	r0, [fp, #-4]
   1641c:	movw	lr, #0
   16420:	cmp	r0, lr
   16424:	beq	16434 <__assert_fail@plt+0x4ce0>
   16428:	ldr	r0, [fp, #-4]
   1642c:	str	r0, [sp, #8]
   16430:	b	16444 <__assert_fail@plt+0x4cf0>
   16434:	movw	r0, #58048	; 0xe2c0
   16438:	movt	r0, #4
   1643c:	str	r0, [sp, #8]
   16440:	b	16444 <__assert_fail@plt+0x4cf0>
   16444:	ldr	r0, [sp, #8]
   16448:	movw	r1, #48	; 0x30
   1644c:	bl	340e0 <__assert_fail@plt+0x2298c>
   16450:	str	r0, [sp, #12]
   16454:	ldr	r0, [fp, #-8]
   16458:	str	r0, [sp, #4]
   1645c:	bl	11628 <__errno_location@plt>
   16460:	ldr	r1, [sp, #4]
   16464:	str	r1, [r0]
   16468:	ldr	r0, [sp, #12]
   1646c:	mov	sp, fp
   16470:	pop	{fp, pc}
   16474:	sub	sp, sp, #8
   16478:	str	r0, [sp, #4]
   1647c:	ldr	r0, [sp, #4]
   16480:	movw	r1, #0
   16484:	cmp	r0, r1
   16488:	beq	16498 <__assert_fail@plt+0x4d44>
   1648c:	ldr	r0, [sp, #4]
   16490:	str	r0, [sp]
   16494:	b	164a8 <__assert_fail@plt+0x4d54>
   16498:	movw	r0, #58048	; 0xe2c0
   1649c:	movt	r0, #4
   164a0:	str	r0, [sp]
   164a4:	b	164a8 <__assert_fail@plt+0x4d54>
   164a8:	ldr	r0, [sp]
   164ac:	ldr	r0, [r0]
   164b0:	add	sp, sp, #8
   164b4:	bx	lr
   164b8:	sub	sp, sp, #16
   164bc:	str	r0, [sp, #12]
   164c0:	str	r1, [sp, #8]
   164c4:	ldr	r0, [sp, #8]
   164c8:	ldr	r1, [sp, #12]
   164cc:	movw	r2, #0
   164d0:	cmp	r1, r2
   164d4:	str	r0, [sp, #4]
   164d8:	beq	164e8 <__assert_fail@plt+0x4d94>
   164dc:	ldr	r0, [sp, #12]
   164e0:	str	r0, [sp]
   164e4:	b	164f8 <__assert_fail@plt+0x4da4>
   164e8:	movw	r0, #58048	; 0xe2c0
   164ec:	movt	r0, #4
   164f0:	str	r0, [sp]
   164f4:	b	164f8 <__assert_fail@plt+0x4da4>
   164f8:	ldr	r0, [sp]
   164fc:	ldr	r1, [sp, #4]
   16500:	str	r1, [r0]
   16504:	add	sp, sp, #16
   16508:	bx	lr
   1650c:	sub	sp, sp, #32
   16510:	str	r0, [sp, #28]
   16514:	strb	r1, [sp, #27]
   16518:	str	r2, [sp, #20]
   1651c:	ldrb	r0, [sp, #27]
   16520:	strb	r0, [sp, #19]
   16524:	ldr	r0, [sp, #28]
   16528:	movw	r1, #0
   1652c:	cmp	r0, r1
   16530:	beq	16540 <__assert_fail@plt+0x4dec>
   16534:	ldr	r0, [sp, #28]
   16538:	str	r0, [sp]
   1653c:	b	16550 <__assert_fail@plt+0x4dfc>
   16540:	movw	r0, #58048	; 0xe2c0
   16544:	movt	r0, #4
   16548:	str	r0, [sp]
   1654c:	b	16550 <__assert_fail@plt+0x4dfc>
   16550:	ldr	r0, [sp]
   16554:	add	r0, r0, #8
   16558:	ldrb	r1, [sp, #19]
   1655c:	lsr	r1, r1, #5
   16560:	add	r0, r0, r1, lsl #2
   16564:	str	r0, [sp, #12]
   16568:	ldrb	r0, [sp, #19]
   1656c:	and	r0, r0, #31
   16570:	str	r0, [sp, #8]
   16574:	ldr	r0, [sp, #12]
   16578:	ldr	r0, [r0]
   1657c:	ldr	r1, [sp, #8]
   16580:	lsr	r0, r0, r1
   16584:	and	r0, r0, #1
   16588:	str	r0, [sp, #4]
   1658c:	ldr	r0, [sp, #20]
   16590:	and	r0, r0, #1
   16594:	ldr	r1, [sp, #4]
   16598:	eor	r0, r0, r1
   1659c:	ldr	r1, [sp, #8]
   165a0:	lsl	r0, r0, r1
   165a4:	ldr	r1, [sp, #12]
   165a8:	ldr	r2, [r1]
   165ac:	eor	r0, r2, r0
   165b0:	str	r0, [r1]
   165b4:	ldr	r0, [sp, #4]
   165b8:	add	sp, sp, #32
   165bc:	bx	lr
   165c0:	sub	sp, sp, #12
   165c4:	str	r0, [sp, #8]
   165c8:	str	r1, [sp, #4]
   165cc:	ldr	r0, [sp, #8]
   165d0:	movw	r1, #0
   165d4:	cmp	r0, r1
   165d8:	bne	165e8 <__assert_fail@plt+0x4e94>
   165dc:	movw	r0, #58048	; 0xe2c0
   165e0:	movt	r0, #4
   165e4:	str	r0, [sp, #8]
   165e8:	ldr	r0, [sp, #8]
   165ec:	ldr	r0, [r0, #4]
   165f0:	str	r0, [sp]
   165f4:	ldr	r0, [sp, #4]
   165f8:	ldr	r1, [sp, #8]
   165fc:	str	r0, [r1, #4]
   16600:	ldr	r0, [sp]
   16604:	add	sp, sp, #12
   16608:	bx	lr
   1660c:	push	{fp, lr}
   16610:	mov	fp, sp
   16614:	sub	sp, sp, #16
   16618:	str	r0, [fp, #-4]
   1661c:	str	r1, [sp, #8]
   16620:	str	r2, [sp, #4]
   16624:	ldr	r0, [fp, #-4]
   16628:	movw	r1, #0
   1662c:	cmp	r0, r1
   16630:	bne	16640 <__assert_fail@plt+0x4eec>
   16634:	movw	r0, #58048	; 0xe2c0
   16638:	movt	r0, #4
   1663c:	str	r0, [fp, #-4]
   16640:	ldr	r0, [fp, #-4]
   16644:	movw	r1, #10
   16648:	str	r1, [r0]
   1664c:	ldr	r0, [sp, #8]
   16650:	movw	r1, #0
   16654:	cmp	r0, r1
   16658:	beq	1666c <__assert_fail@plt+0x4f18>
   1665c:	ldr	r0, [sp, #4]
   16660:	movw	r1, #0
   16664:	cmp	r0, r1
   16668:	bne	16670 <__assert_fail@plt+0x4f1c>
   1666c:	bl	1173c <abort@plt>
   16670:	ldr	r0, [sp, #8]
   16674:	ldr	r1, [fp, #-4]
   16678:	str	r0, [r1, #40]	; 0x28
   1667c:	ldr	r0, [sp, #4]
   16680:	ldr	r1, [fp, #-4]
   16684:	str	r0, [r1, #44]	; 0x2c
   16688:	mov	sp, fp
   1668c:	pop	{fp, pc}
   16690:	push	{r4, r5, r6, sl, fp, lr}
   16694:	add	fp, sp, #16
   16698:	sub	sp, sp, #64	; 0x40
   1669c:	ldr	ip, [fp, #8]
   166a0:	str	r0, [fp, #-20]	; 0xffffffec
   166a4:	str	r1, [fp, #-24]	; 0xffffffe8
   166a8:	str	r2, [fp, #-28]	; 0xffffffe4
   166ac:	str	r3, [fp, #-32]	; 0xffffffe0
   166b0:	ldr	r0, [fp, #8]
   166b4:	movw	r1, #0
   166b8:	cmp	r0, r1
   166bc:	str	ip, [sp, #32]
   166c0:	beq	166d0 <__assert_fail@plt+0x4f7c>
   166c4:	ldr	r0, [fp, #8]
   166c8:	str	r0, [sp, #28]
   166cc:	b	166e0 <__assert_fail@plt+0x4f8c>
   166d0:	movw	r0, #58048	; 0xe2c0
   166d4:	movt	r0, #4
   166d8:	str	r0, [sp, #28]
   166dc:	b	166e0 <__assert_fail@plt+0x4f8c>
   166e0:	ldr	r0, [sp, #28]
   166e4:	str	r0, [fp, #-36]	; 0xffffffdc
   166e8:	bl	11628 <__errno_location@plt>
   166ec:	ldr	r0, [r0]
   166f0:	str	r0, [sp, #40]	; 0x28
   166f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   166f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16700:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16704:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16708:	ldr	lr, [lr]
   1670c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16710:	ldr	ip, [ip, #4]
   16714:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16718:	add	r4, r4, #8
   1671c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16720:	ldr	r5, [r5, #40]	; 0x28
   16724:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16728:	ldr	r6, [r6, #44]	; 0x2c
   1672c:	str	lr, [sp]
   16730:	str	ip, [sp, #4]
   16734:	str	r4, [sp, #8]
   16738:	str	r5, [sp, #12]
   1673c:	str	r6, [sp, #16]
   16740:	bl	16768 <__assert_fail@plt+0x5014>
   16744:	str	r0, [sp, #36]	; 0x24
   16748:	ldr	r0, [sp, #40]	; 0x28
   1674c:	str	r0, [sp, #24]
   16750:	bl	11628 <__errno_location@plt>
   16754:	ldr	r1, [sp, #24]
   16758:	str	r1, [r0]
   1675c:	ldr	r0, [sp, #36]	; 0x24
   16760:	sub	sp, fp, #16
   16764:	pop	{r4, r5, r6, sl, fp, pc}
   16768:	push	{r4, r5, r6, sl, fp, lr}
   1676c:	add	fp, sp, #16
   16770:	sub	sp, sp, #168	; 0xa8
   16774:	ldr	ip, [fp, #24]
   16778:	ldr	lr, [fp, #20]
   1677c:	ldr	r4, [fp, #16]
   16780:	ldr	r5, [fp, #12]
   16784:	ldr	r6, [fp, #8]
   16788:	str	r0, [fp, #-24]	; 0xffffffe8
   1678c:	str	r1, [fp, #-28]	; 0xffffffe4
   16790:	str	r2, [fp, #-32]	; 0xffffffe0
   16794:	str	r3, [fp, #-36]	; 0xffffffdc
   16798:	movw	r0, #0
   1679c:	str	r0, [fp, #-44]	; 0xffffffd4
   167a0:	str	r0, [fp, #-48]	; 0xffffffd0
   167a4:	str	r0, [fp, #-52]	; 0xffffffcc
   167a8:	str	r0, [fp, #-56]	; 0xffffffc8
   167ac:	movw	r0, #0
   167b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   167b4:	str	r6, [sp, #80]	; 0x50
   167b8:	str	lr, [sp, #76]	; 0x4c
   167bc:	str	r4, [sp, #72]	; 0x48
   167c0:	str	r5, [sp, #68]	; 0x44
   167c4:	str	ip, [sp, #64]	; 0x40
   167c8:	bl	11544 <__ctype_get_mb_cur_max@plt>
   167cc:	cmp	r0, #1
   167d0:	movw	r0, #0
   167d4:	moveq	r0, #1
   167d8:	and	r0, r0, #1
   167dc:	strb	r0, [fp, #-58]	; 0xffffffc6
   167e0:	ldr	r0, [fp, #12]
   167e4:	and	r0, r0, #2
   167e8:	cmp	r0, #0
   167ec:	movw	r0, #0
   167f0:	movne	r0, #1
   167f4:	and	r0, r0, #1
   167f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   167fc:	movw	r0, #0
   16800:	strb	r0, [fp, #-60]	; 0xffffffc4
   16804:	strb	r0, [fp, #-61]	; 0xffffffc3
   16808:	movw	r0, #1
   1680c:	strb	r0, [fp, #-62]	; 0xffffffc2
   16810:	ldr	r0, [fp, #8]
   16814:	cmp	r0, #10
   16818:	str	r0, [sp, #60]	; 0x3c
   1681c:	bhi	16a44 <__assert_fail@plt+0x52f0>
   16820:	add	r0, pc, #8
   16824:	ldr	r1, [sp, #60]	; 0x3c
   16828:	ldr	r0, [r0, r1, lsl #2]
   1682c:	mov	pc, r0
   16830:	andeq	r6, r1, r8, lsr sl
   16834:			; <UNDEFINED> instruction: 0x000169b4
   16838:	ldrdeq	r6, [r1], -r4
   1683c:	andeq	r6, r1, ip, lsr #19
   16840:			; <UNDEFINED> instruction: 0x000169bc
   16844:	andeq	r6, r1, ip, ror #16
   16848:	andeq	r6, r1, ip, asr r8
   1684c:	ldrdeq	r6, [r1], -r0
   16850:	andeq	r6, r1, r4, ror #17
   16854:	andeq	r6, r1, r4, ror #17
   16858:	andeq	r6, r1, r4, ror #17
   1685c:	movw	r0, #5
   16860:	str	r0, [fp, #8]
   16864:	movw	r0, #1
   16868:	strb	r0, [fp, #-59]	; 0xffffffc5
   1686c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16870:	tst	r0, #1
   16874:	bne	168b0 <__assert_fail@plt+0x515c>
   16878:	b	1687c <__assert_fail@plt+0x5128>
   1687c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16880:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16884:	cmp	r0, r1
   16888:	bcs	168a0 <__assert_fail@plt+0x514c>
   1688c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16890:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16894:	add	r0, r0, r1
   16898:	movw	r1, #34	; 0x22
   1689c:	strb	r1, [r0]
   168a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168a4:	add	r0, r0, #1
   168a8:	str	r0, [fp, #-44]	; 0xffffffd4
   168ac:	b	168b0 <__assert_fail@plt+0x515c>
   168b0:	movw	r0, #1
   168b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   168b8:	movw	r0, #54154	; 0xd38a
   168bc:	movt	r0, #3
   168c0:	str	r0, [fp, #-52]	; 0xffffffcc
   168c4:	movw	r0, #1
   168c8:	str	r0, [fp, #-56]	; 0xffffffc8
   168cc:	b	16a48 <__assert_fail@plt+0x52f4>
   168d0:	movw	r0, #1
   168d4:	strb	r0, [fp, #-57]	; 0xffffffc7
   168d8:	movw	r0, #0
   168dc:	strb	r0, [fp, #-59]	; 0xffffffc5
   168e0:	b	16a48 <__assert_fail@plt+0x52f4>
   168e4:	ldr	r0, [fp, #8]
   168e8:	cmp	r0, #10
   168ec:	beq	16918 <__assert_fail@plt+0x51c4>
   168f0:	ldr	r1, [fp, #8]
   168f4:	movw	r0, #54156	; 0xd38c
   168f8:	movt	r0, #3
   168fc:	bl	18958 <__assert_fail@plt+0x7204>
   16900:	str	r0, [fp, #20]
   16904:	ldr	r1, [fp, #8]
   16908:	movw	r0, #53130	; 0xcf8a
   1690c:	movt	r0, #3
   16910:	bl	18958 <__assert_fail@plt+0x7204>
   16914:	str	r0, [fp, #24]
   16918:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1691c:	tst	r0, #1
   16920:	bne	1698c <__assert_fail@plt+0x5238>
   16924:	ldr	r0, [fp, #20]
   16928:	str	r0, [fp, #-52]	; 0xffffffcc
   1692c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16930:	ldrsb	r0, [r0]
   16934:	cmp	r0, #0
   16938:	beq	16988 <__assert_fail@plt+0x5234>
   1693c:	b	16940 <__assert_fail@plt+0x51ec>
   16940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16948:	cmp	r0, r1
   1694c:	bcs	16968 <__assert_fail@plt+0x5214>
   16950:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16954:	ldrb	r0, [r0]
   16958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1695c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16960:	add	r1, r1, r2
   16964:	strb	r0, [r1]
   16968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1696c:	add	r0, r0, #1
   16970:	str	r0, [fp, #-44]	; 0xffffffd4
   16974:	b	16978 <__assert_fail@plt+0x5224>
   16978:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1697c:	add	r0, r0, #1
   16980:	str	r0, [fp, #-52]	; 0xffffffcc
   16984:	b	1692c <__assert_fail@plt+0x51d8>
   16988:	b	1698c <__assert_fail@plt+0x5238>
   1698c:	movw	r0, #1
   16990:	strb	r0, [fp, #-57]	; 0xffffffc7
   16994:	ldr	r0, [fp, #24]
   16998:	str	r0, [fp, #-52]	; 0xffffffcc
   1699c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   169a0:	bl	11604 <strlen@plt>
   169a4:	str	r0, [fp, #-56]	; 0xffffffc8
   169a8:	b	16a48 <__assert_fail@plt+0x52f4>
   169ac:	movw	r0, #1
   169b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   169b4:	movw	r0, #1
   169b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   169bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   169c0:	tst	r0, #1
   169c4:	bne	169d0 <__assert_fail@plt+0x527c>
   169c8:	movw	r0, #1
   169cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   169d0:	b	169d4 <__assert_fail@plt+0x5280>
   169d4:	movw	r0, #2
   169d8:	str	r0, [fp, #8]
   169dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   169e0:	tst	r0, #1
   169e4:	bne	16a20 <__assert_fail@plt+0x52cc>
   169e8:	b	169ec <__assert_fail@plt+0x5298>
   169ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   169f4:	cmp	r0, r1
   169f8:	bcs	16a10 <__assert_fail@plt+0x52bc>
   169fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a04:	add	r0, r0, r1
   16a08:	movw	r1, #39	; 0x27
   16a0c:	strb	r1, [r0]
   16a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a14:	add	r0, r0, #1
   16a18:	str	r0, [fp, #-44]	; 0xffffffd4
   16a1c:	b	16a20 <__assert_fail@plt+0x52cc>
   16a20:	movw	r0, #53130	; 0xcf8a
   16a24:	movt	r0, #3
   16a28:	str	r0, [fp, #-52]	; 0xffffffcc
   16a2c:	movw	r0, #1
   16a30:	str	r0, [fp, #-56]	; 0xffffffc8
   16a34:	b	16a48 <__assert_fail@plt+0x52f4>
   16a38:	movw	r0, #0
   16a3c:	strb	r0, [fp, #-59]	; 0xffffffc5
   16a40:	b	16a48 <__assert_fail@plt+0x52f4>
   16a44:	bl	1173c <abort@plt>
   16a48:	movw	r0, #0
   16a4c:	str	r0, [fp, #-40]	; 0xffffffd8
   16a50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a54:	cmn	r0, #1
   16a58:	bne	16a84 <__assert_fail@plt+0x5330>
   16a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16a64:	add	r0, r0, r1
   16a68:	ldrb	r0, [r0]
   16a6c:	cmp	r0, #0
   16a70:	movw	r0, #0
   16a74:	moveq	r0, #1
   16a78:	and	r0, r0, #1
   16a7c:	str	r0, [sp, #56]	; 0x38
   16a80:	b	16aa0 <__assert_fail@plt+0x534c>
   16a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16a88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a8c:	cmp	r0, r1
   16a90:	movw	r0, #0
   16a94:	moveq	r0, #1
   16a98:	and	r0, r0, #1
   16a9c:	str	r0, [sp, #56]	; 0x38
   16aa0:	ldr	r0, [sp, #56]	; 0x38
   16aa4:	cmp	r0, #0
   16aa8:	movw	r0, #0
   16aac:	movne	r0, #1
   16ab0:	mvn	r1, #0
   16ab4:	eor	r0, r0, r1
   16ab8:	tst	r0, #1
   16abc:	beq	17cac <__assert_fail@plt+0x6558>
   16ac0:	movw	r0, #0
   16ac4:	strb	r0, [fp, #-65]	; 0xffffffbf
   16ac8:	strb	r0, [fp, #-66]	; 0xffffffbe
   16acc:	strb	r0, [fp, #-67]	; 0xffffffbd
   16ad0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16ad4:	tst	r0, #1
   16ad8:	beq	16b84 <__assert_fail@plt+0x5430>
   16adc:	ldr	r0, [fp, #8]
   16ae0:	cmp	r0, #2
   16ae4:	beq	16b84 <__assert_fail@plt+0x5430>
   16ae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16aec:	cmp	r0, #0
   16af0:	beq	16b84 <__assert_fail@plt+0x5430>
   16af4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16af8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16afc:	add	r0, r0, r1
   16b00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16b04:	cmn	r1, #1
   16b08:	str	r0, [sp, #52]	; 0x34
   16b0c:	bne	16b34 <__assert_fail@plt+0x53e0>
   16b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16b14:	movw	r1, #1
   16b18:	cmp	r1, r0
   16b1c:	bcs	16b34 <__assert_fail@plt+0x53e0>
   16b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b24:	bl	11604 <strlen@plt>
   16b28:	str	r0, [fp, #-36]	; 0xffffffdc
   16b2c:	str	r0, [sp, #48]	; 0x30
   16b30:	b	16b3c <__assert_fail@plt+0x53e8>
   16b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b38:	str	r0, [sp, #48]	; 0x30
   16b3c:	ldr	r0, [sp, #48]	; 0x30
   16b40:	ldr	r1, [sp, #52]	; 0x34
   16b44:	cmp	r1, r0
   16b48:	bhi	16b84 <__assert_fail@plt+0x5430>
   16b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b54:	add	r0, r0, r1
   16b58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16b5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b60:	bl	114cc <memcmp@plt>
   16b64:	cmp	r0, #0
   16b68:	bne	16b84 <__assert_fail@plt+0x5430>
   16b6c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16b70:	tst	r0, #1
   16b74:	beq	16b7c <__assert_fail@plt+0x5428>
   16b78:	b	17e2c <__assert_fail@plt+0x66d8>
   16b7c:	movw	r0, #1
   16b80:	strb	r0, [fp, #-65]	; 0xffffffbf
   16b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b8c:	ldrb	r0, [r0, r1]
   16b90:	strb	r0, [fp, #-63]	; 0xffffffc1
   16b94:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16b98:	mov	r1, r0
   16b9c:	cmp	r0, #126	; 0x7e
   16ba0:	str	r1, [sp, #44]	; 0x2c
   16ba4:	bhi	17414 <__assert_fail@plt+0x5cc0>
   16ba8:	add	r0, pc, #8
   16bac:	ldr	r1, [sp, #44]	; 0x2c
   16bb0:	ldr	r0, [r0, r1, lsl #2]
   16bb4:	mov	pc, r0
   16bb8:			; <UNDEFINED> instruction: 0x00016db4
   16bbc:	andeq	r7, r1, r4, lsl r4
   16bc0:	andeq	r7, r1, r4, lsl r4
   16bc4:	andeq	r7, r1, r4, lsl r4
   16bc8:	andeq	r7, r1, r4, lsl r4
   16bcc:	andeq	r7, r1, r4, lsl r4
   16bd0:	andeq	r7, r1, r4, lsl r4
   16bd4:			; <UNDEFINED> instruction: 0x000171bc
   16bd8:	andeq	r7, r1, r8, asr #3
   16bdc:	strdeq	r7, [r1], -r8
   16be0:	andeq	r7, r1, r0, ror #3
   16be4:	andeq	r7, r1, r4, lsl #4
   16be8:	ldrdeq	r7, [r1], -r4
   16bec:	andeq	r7, r1, ip, ror #3
   16bf0:	andeq	r7, r1, r4, lsl r4
   16bf4:	andeq	r7, r1, r4, lsl r4
   16bf8:	andeq	r7, r1, r4, lsl r4
   16bfc:	andeq	r7, r1, r4, lsl r4
   16c00:	andeq	r7, r1, r4, lsl r4
   16c04:	andeq	r7, r1, r4, lsl r4
   16c08:	andeq	r7, r1, r4, lsl r4
   16c0c:	andeq	r7, r1, r4, lsl r4
   16c10:	andeq	r7, r1, r4, lsl r4
   16c14:	andeq	r7, r1, r4, lsl r4
   16c18:	andeq	r7, r1, r4, lsl r4
   16c1c:	andeq	r7, r1, r4, lsl r4
   16c20:	andeq	r7, r1, r4, lsl r4
   16c24:	andeq	r7, r1, r4, lsl r4
   16c28:	andeq	r7, r1, r4, lsl r4
   16c2c:	andeq	r7, r1, r4, lsl r4
   16c30:	andeq	r7, r1, r4, lsl r4
   16c34:	andeq	r7, r1, r4, lsl r4
   16c38:	andeq	r7, r1, r8, ror #5
   16c3c:	strdeq	r7, [r1], -r0
   16c40:	strdeq	r7, [r1], -r0
   16c44:	ldrdeq	r7, [r1], -r4
   16c48:	strdeq	r7, [r1], -r0
   16c4c:	andeq	r7, r1, r8, lsl #8
   16c50:	strdeq	r7, [r1], -r0
   16c54:	andeq	r7, r1, r0, lsl r3
   16c58:	strdeq	r7, [r1], -r0
   16c5c:	strdeq	r7, [r1], -r0
   16c60:	strdeq	r7, [r1], -r0
   16c64:	andeq	r7, r1, r8, lsl #8
   16c68:	andeq	r7, r1, r8, lsl #8
   16c6c:	andeq	r7, r1, r8, lsl #8
   16c70:	andeq	r7, r1, r8, lsl #8
   16c74:	andeq	r7, r1, r8, lsl #8
   16c78:	andeq	r7, r1, r8, lsl #8
   16c7c:	andeq	r7, r1, r8, lsl #8
   16c80:	andeq	r7, r1, r8, lsl #8
   16c84:	andeq	r7, r1, r8, lsl #8
   16c88:	andeq	r7, r1, r8, lsl #8
   16c8c:	andeq	r7, r1, r8, lsl #8
   16c90:	andeq	r7, r1, r8, lsl #8
   16c94:	andeq	r7, r1, r8, lsl #8
   16c98:	andeq	r7, r1, r8, lsl #8
   16c9c:	andeq	r7, r1, r8, lsl #8
   16ca0:	andeq	r7, r1, r8, lsl #8
   16ca4:	strdeq	r7, [r1], -r0
   16ca8:	strdeq	r7, [r1], -r0
   16cac:	strdeq	r7, [r1], -r0
   16cb0:	strdeq	r7, [r1], -r0
   16cb4:	andeq	r6, r1, r0, asr #31
   16cb8:	andeq	r7, r1, r4, lsl r4
   16cbc:	andeq	r7, r1, r8, lsl #8
   16cc0:	andeq	r7, r1, r8, lsl #8
   16cc4:	andeq	r7, r1, r8, lsl #8
   16cc8:	andeq	r7, r1, r8, lsl #8
   16ccc:	andeq	r7, r1, r8, lsl #8
   16cd0:	andeq	r7, r1, r8, lsl #8
   16cd4:	andeq	r7, r1, r8, lsl #8
   16cd8:	andeq	r7, r1, r8, lsl #8
   16cdc:	andeq	r7, r1, r8, lsl #8
   16ce0:	andeq	r7, r1, r8, lsl #8
   16ce4:	andeq	r7, r1, r8, lsl #8
   16ce8:	andeq	r7, r1, r8, lsl #8
   16cec:	andeq	r7, r1, r8, lsl #8
   16cf0:	andeq	r7, r1, r8, lsl #8
   16cf4:	andeq	r7, r1, r8, lsl #8
   16cf8:	andeq	r7, r1, r8, lsl #8
   16cfc:	andeq	r7, r1, r8, lsl #8
   16d00:	andeq	r7, r1, r8, lsl #8
   16d04:	andeq	r7, r1, r8, lsl #8
   16d08:	andeq	r7, r1, r8, lsl #8
   16d0c:	andeq	r7, r1, r8, lsl #8
   16d10:	andeq	r7, r1, r8, lsl #8
   16d14:	andeq	r7, r1, r8, lsl #8
   16d18:	andeq	r7, r1, r8, lsl #8
   16d1c:	andeq	r7, r1, r8, lsl #8
   16d20:	andeq	r7, r1, r8, lsl #8
   16d24:	strdeq	r7, [r1], -r0
   16d28:	andeq	r7, r1, r0, lsl r2
   16d2c:	andeq	r7, r1, r8, lsl #8
   16d30:	strdeq	r7, [r1], -r0
   16d34:	andeq	r7, r1, r8, lsl #8
   16d38:	strdeq	r7, [r1], -r0
   16d3c:	andeq	r7, r1, r8, lsl #8
   16d40:	andeq	r7, r1, r8, lsl #8
   16d44:	andeq	r7, r1, r8, lsl #8
   16d48:	andeq	r7, r1, r8, lsl #8
   16d4c:	andeq	r7, r1, r8, lsl #8
   16d50:	andeq	r7, r1, r8, lsl #8
   16d54:	andeq	r7, r1, r8, lsl #8
   16d58:	andeq	r7, r1, r8, lsl #8
   16d5c:	andeq	r7, r1, r8, lsl #8
   16d60:	andeq	r7, r1, r8, lsl #8
   16d64:	andeq	r7, r1, r8, lsl #8
   16d68:	andeq	r7, r1, r8, lsl #8
   16d6c:	andeq	r7, r1, r8, lsl #8
   16d70:	andeq	r7, r1, r8, lsl #8
   16d74:	andeq	r7, r1, r8, lsl #8
   16d78:	andeq	r7, r1, r8, lsl #8
   16d7c:	andeq	r7, r1, r8, lsl #8
   16d80:	andeq	r7, r1, r8, lsl #8
   16d84:	andeq	r7, r1, r8, lsl #8
   16d88:	andeq	r7, r1, r8, lsl #8
   16d8c:	andeq	r7, r1, r8, lsl #8
   16d90:	andeq	r7, r1, r8, lsl #8
   16d94:	andeq	r7, r1, r8, lsl #8
   16d98:	andeq	r7, r1, r8, lsl #8
   16d9c:	andeq	r7, r1, r8, lsl #8
   16da0:	andeq	r7, r1, r8, lsl #8
   16da4:	andeq	r7, r1, r0, lsr #5
   16da8:	strdeq	r7, [r1], -r0
   16dac:	andeq	r7, r1, r0, lsr #5
   16db0:	ldrdeq	r7, [r1], -r4
   16db4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16db8:	tst	r0, #1
   16dbc:	beq	16fa4 <__assert_fail@plt+0x5850>
   16dc0:	b	16dc4 <__assert_fail@plt+0x5670>
   16dc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16dc8:	tst	r0, #1
   16dcc:	beq	16dd4 <__assert_fail@plt+0x5680>
   16dd0:	b	17e2c <__assert_fail@plt+0x66d8>
   16dd4:	movw	r0, #1
   16dd8:	strb	r0, [fp, #-66]	; 0xffffffbe
   16ddc:	ldr	r0, [fp, #8]
   16de0:	cmp	r0, #2
   16de4:	bne	16e98 <__assert_fail@plt+0x5744>
   16de8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16dec:	tst	r0, #1
   16df0:	bne	16e98 <__assert_fail@plt+0x5744>
   16df4:	b	16df8 <__assert_fail@plt+0x56a4>
   16df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16dfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e00:	cmp	r0, r1
   16e04:	bcs	16e1c <__assert_fail@plt+0x56c8>
   16e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e10:	add	r0, r0, r1
   16e14:	movw	r1, #39	; 0x27
   16e18:	strb	r1, [r0]
   16e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e20:	add	r0, r0, #1
   16e24:	str	r0, [fp, #-44]	; 0xffffffd4
   16e28:	b	16e2c <__assert_fail@plt+0x56d8>
   16e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e34:	cmp	r0, r1
   16e38:	bcs	16e50 <__assert_fail@plt+0x56fc>
   16e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e44:	add	r0, r0, r1
   16e48:	movw	r1, #36	; 0x24
   16e4c:	strb	r1, [r0]
   16e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e54:	add	r0, r0, #1
   16e58:	str	r0, [fp, #-44]	; 0xffffffd4
   16e5c:	b	16e60 <__assert_fail@plt+0x570c>
   16e60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e68:	cmp	r0, r1
   16e6c:	bcs	16e84 <__assert_fail@plt+0x5730>
   16e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e78:	add	r0, r0, r1
   16e7c:	movw	r1, #39	; 0x27
   16e80:	strb	r1, [r0]
   16e84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e88:	add	r0, r0, #1
   16e8c:	str	r0, [fp, #-44]	; 0xffffffd4
   16e90:	movw	r0, #1
   16e94:	strb	r0, [fp, #-60]	; 0xffffffc4
   16e98:	b	16e9c <__assert_fail@plt+0x5748>
   16e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ea4:	cmp	r0, r1
   16ea8:	bcs	16ec0 <__assert_fail@plt+0x576c>
   16eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16eb4:	add	r0, r0, r1
   16eb8:	movw	r1, #92	; 0x5c
   16ebc:	strb	r1, [r0]
   16ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ec4:	add	r0, r0, #1
   16ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   16ecc:	b	16ed0 <__assert_fail@plt+0x577c>
   16ed0:	ldr	r0, [fp, #8]
   16ed4:	cmp	r0, #2
   16ed8:	beq	16f98 <__assert_fail@plt+0x5844>
   16edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ee0:	add	r0, r0, #1
   16ee4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ee8:	cmp	r0, r1
   16eec:	bcs	16f98 <__assert_fail@plt+0x5844>
   16ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ef4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16ef8:	add	r1, r1, #1
   16efc:	add	r0, r0, r1
   16f00:	ldrb	r0, [r0]
   16f04:	movw	r1, #48	; 0x30
   16f08:	cmp	r1, r0
   16f0c:	bgt	16f98 <__assert_fail@plt+0x5844>
   16f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16f18:	add	r1, r1, #1
   16f1c:	add	r0, r0, r1
   16f20:	ldrb	r0, [r0]
   16f24:	cmp	r0, #57	; 0x39
   16f28:	bgt	16f98 <__assert_fail@plt+0x5844>
   16f2c:	b	16f30 <__assert_fail@plt+0x57dc>
   16f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16f38:	cmp	r0, r1
   16f3c:	bcs	16f54 <__assert_fail@plt+0x5800>
   16f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16f48:	add	r0, r0, r1
   16f4c:	movw	r1, #48	; 0x30
   16f50:	strb	r1, [r0]
   16f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f58:	add	r0, r0, #1
   16f5c:	str	r0, [fp, #-44]	; 0xffffffd4
   16f60:	b	16f64 <__assert_fail@plt+0x5810>
   16f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16f6c:	cmp	r0, r1
   16f70:	bcs	16f88 <__assert_fail@plt+0x5834>
   16f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16f7c:	add	r0, r0, r1
   16f80:	movw	r1, #48	; 0x30
   16f84:	strb	r1, [r0]
   16f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f8c:	add	r0, r0, #1
   16f90:	str	r0, [fp, #-44]	; 0xffffffd4
   16f94:	b	16f98 <__assert_fail@plt+0x5844>
   16f98:	movw	r0, #48	; 0x30
   16f9c:	strb	r0, [fp, #-63]	; 0xffffffc1
   16fa0:	b	16fbc <__assert_fail@plt+0x5868>
   16fa4:	ldr	r0, [fp, #12]
   16fa8:	and	r0, r0, #1
   16fac:	cmp	r0, #0
   16fb0:	beq	16fb8 <__assert_fail@plt+0x5864>
   16fb4:	b	17c9c <__assert_fail@plt+0x6548>
   16fb8:	b	16fbc <__assert_fail@plt+0x5868>
   16fbc:	b	17a38 <__assert_fail@plt+0x62e4>
   16fc0:	ldr	r0, [fp, #8]
   16fc4:	cmp	r0, #2
   16fc8:	str	r0, [sp, #40]	; 0x28
   16fcc:	beq	16fe4 <__assert_fail@plt+0x5890>
   16fd0:	b	16fd4 <__assert_fail@plt+0x5880>
   16fd4:	ldr	r0, [sp, #40]	; 0x28
   16fd8:	cmp	r0, #5
   16fdc:	beq	16ff8 <__assert_fail@plt+0x58a4>
   16fe0:	b	171b4 <__assert_fail@plt+0x5a60>
   16fe4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16fe8:	tst	r0, #1
   16fec:	beq	16ff4 <__assert_fail@plt+0x58a0>
   16ff0:	b	17e2c <__assert_fail@plt+0x66d8>
   16ff4:	b	171b8 <__assert_fail@plt+0x5a64>
   16ff8:	ldr	r0, [fp, #12]
   16ffc:	and	r0, r0, #4
   17000:	cmp	r0, #0
   17004:	beq	171b0 <__assert_fail@plt+0x5a5c>
   17008:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1700c:	add	r0, r0, #2
   17010:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17014:	cmp	r0, r1
   17018:	bcs	171b0 <__assert_fail@plt+0x5a5c>
   1701c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17024:	add	r1, r1, #1
   17028:	add	r0, r0, r1
   1702c:	ldrb	r0, [r0]
   17030:	cmp	r0, #63	; 0x3f
   17034:	bne	171b0 <__assert_fail@plt+0x5a5c>
   17038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1703c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17040:	add	r0, r0, r1
   17044:	ldrb	r0, [r0, #2]
   17048:	mov	r1, r0
   1704c:	cmp	r0, #33	; 0x21
   17050:	str	r1, [sp, #36]	; 0x24
   17054:	beq	170a4 <__assert_fail@plt+0x5950>
   17058:	b	1705c <__assert_fail@plt+0x5908>
   1705c:	ldr	r0, [sp, #36]	; 0x24
   17060:	sub	r1, r0, #39	; 0x27
   17064:	cmp	r1, #3
   17068:	bcc	170a4 <__assert_fail@plt+0x5950>
   1706c:	b	17070 <__assert_fail@plt+0x591c>
   17070:	ldr	r0, [sp, #36]	; 0x24
   17074:	cmp	r0, #45	; 0x2d
   17078:	beq	170a4 <__assert_fail@plt+0x5950>
   1707c:	b	17080 <__assert_fail@plt+0x592c>
   17080:	ldr	r0, [sp, #36]	; 0x24
   17084:	cmp	r0, #47	; 0x2f
   17088:	beq	170a4 <__assert_fail@plt+0x5950>
   1708c:	b	17090 <__assert_fail@plt+0x593c>
   17090:	ldr	r0, [sp, #36]	; 0x24
   17094:	sub	r1, r0, #60	; 0x3c
   17098:	cmp	r1, #2
   1709c:	bhi	171a8 <__assert_fail@plt+0x5a54>
   170a0:	b	170a4 <__assert_fail@plt+0x5950>
   170a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   170a8:	tst	r0, #1
   170ac:	beq	170b4 <__assert_fail@plt+0x5960>
   170b0:	b	17e2c <__assert_fail@plt+0x66d8>
   170b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   170bc:	add	r1, r1, #2
   170c0:	add	r0, r0, r1
   170c4:	ldrb	r0, [r0]
   170c8:	strb	r0, [fp, #-63]	; 0xffffffc1
   170cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170d0:	add	r0, r0, #2
   170d4:	str	r0, [fp, #-40]	; 0xffffffd8
   170d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   170dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   170e0:	cmp	r0, r1
   170e4:	bcs	170fc <__assert_fail@plt+0x59a8>
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   170f0:	add	r0, r0, r1
   170f4:	movw	r1, #63	; 0x3f
   170f8:	strb	r1, [r0]
   170fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17100:	add	r0, r0, #1
   17104:	str	r0, [fp, #-44]	; 0xffffffd4
   17108:	b	1710c <__assert_fail@plt+0x59b8>
   1710c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17110:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17114:	cmp	r0, r1
   17118:	bcs	17130 <__assert_fail@plt+0x59dc>
   1711c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17120:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17124:	add	r0, r0, r1
   17128:	movw	r1, #34	; 0x22
   1712c:	strb	r1, [r0]
   17130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17134:	add	r0, r0, #1
   17138:	str	r0, [fp, #-44]	; 0xffffffd4
   1713c:	b	17140 <__assert_fail@plt+0x59ec>
   17140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17144:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17148:	cmp	r0, r1
   1714c:	bcs	17164 <__assert_fail@plt+0x5a10>
   17150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17154:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17158:	add	r0, r0, r1
   1715c:	movw	r1, #34	; 0x22
   17160:	strb	r1, [r0]
   17164:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17168:	add	r0, r0, #1
   1716c:	str	r0, [fp, #-44]	; 0xffffffd4
   17170:	b	17174 <__assert_fail@plt+0x5a20>
   17174:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1717c:	cmp	r0, r1
   17180:	bcs	17198 <__assert_fail@plt+0x5a44>
   17184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17188:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1718c:	add	r0, r0, r1
   17190:	movw	r1, #63	; 0x3f
   17194:	strb	r1, [r0]
   17198:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1719c:	add	r0, r0, #1
   171a0:	str	r0, [fp, #-44]	; 0xffffffd4
   171a4:	b	171ac <__assert_fail@plt+0x5a58>
   171a8:	b	171ac <__assert_fail@plt+0x5a58>
   171ac:	b	171b0 <__assert_fail@plt+0x5a5c>
   171b0:	b	171b8 <__assert_fail@plt+0x5a64>
   171b4:	b	171b8 <__assert_fail@plt+0x5a64>
   171b8:	b	17a38 <__assert_fail@plt+0x62e4>
   171bc:	movw	r0, #97	; 0x61
   171c0:	strb	r0, [fp, #-64]	; 0xffffffc0
   171c4:	b	17284 <__assert_fail@plt+0x5b30>
   171c8:	movw	r0, #98	; 0x62
   171cc:	strb	r0, [fp, #-64]	; 0xffffffc0
   171d0:	b	17284 <__assert_fail@plt+0x5b30>
   171d4:	movw	r0, #102	; 0x66
   171d8:	strb	r0, [fp, #-64]	; 0xffffffc0
   171dc:	b	17284 <__assert_fail@plt+0x5b30>
   171e0:	movw	r0, #110	; 0x6e
   171e4:	strb	r0, [fp, #-64]	; 0xffffffc0
   171e8:	b	17264 <__assert_fail@plt+0x5b10>
   171ec:	movw	r0, #114	; 0x72
   171f0:	strb	r0, [fp, #-64]	; 0xffffffc0
   171f4:	b	17264 <__assert_fail@plt+0x5b10>
   171f8:	movw	r0, #116	; 0x74
   171fc:	strb	r0, [fp, #-64]	; 0xffffffc0
   17200:	b	17264 <__assert_fail@plt+0x5b10>
   17204:	movw	r0, #118	; 0x76
   17208:	strb	r0, [fp, #-64]	; 0xffffffc0
   1720c:	b	17284 <__assert_fail@plt+0x5b30>
   17210:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17214:	strb	r0, [fp, #-64]	; 0xffffffc0
   17218:	ldr	r0, [fp, #8]
   1721c:	cmp	r0, #2
   17220:	bne	17238 <__assert_fail@plt+0x5ae4>
   17224:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17228:	tst	r0, #1
   1722c:	beq	17234 <__assert_fail@plt+0x5ae0>
   17230:	b	17e2c <__assert_fail@plt+0x66d8>
   17234:	b	17bc0 <__assert_fail@plt+0x646c>
   17238:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1723c:	tst	r0, #1
   17240:	beq	17260 <__assert_fail@plt+0x5b0c>
   17244:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17248:	tst	r0, #1
   1724c:	beq	17260 <__assert_fail@plt+0x5b0c>
   17250:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17254:	cmp	r0, #0
   17258:	beq	17260 <__assert_fail@plt+0x5b0c>
   1725c:	b	17bc0 <__assert_fail@plt+0x646c>
   17260:	b	17264 <__assert_fail@plt+0x5b10>
   17264:	ldr	r0, [fp, #8]
   17268:	cmp	r0, #2
   1726c:	bne	17280 <__assert_fail@plt+0x5b2c>
   17270:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17274:	tst	r0, #1
   17278:	beq	17280 <__assert_fail@plt+0x5b2c>
   1727c:	b	17e2c <__assert_fail@plt+0x66d8>
   17280:	b	17284 <__assert_fail@plt+0x5b30>
   17284:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17288:	tst	r0, #1
   1728c:	beq	1729c <__assert_fail@plt+0x5b48>
   17290:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   17294:	strb	r0, [fp, #-63]	; 0xffffffc1
   17298:	b	17aac <__assert_fail@plt+0x6358>
   1729c:	b	17a38 <__assert_fail@plt+0x62e4>
   172a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   172a4:	cmn	r0, #1
   172a8:	bne	172c0 <__assert_fail@plt+0x5b6c>
   172ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   172b0:	ldrb	r0, [r0, #1]
   172b4:	cmp	r0, #0
   172b8:	beq	172d0 <__assert_fail@plt+0x5b7c>
   172bc:	b	172cc <__assert_fail@plt+0x5b78>
   172c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   172c4:	cmp	r0, #1
   172c8:	beq	172d0 <__assert_fail@plt+0x5b7c>
   172cc:	b	17a38 <__assert_fail@plt+0x62e4>
   172d0:	b	172d4 <__assert_fail@plt+0x5b80>
   172d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172d8:	cmp	r0, #0
   172dc:	beq	172e4 <__assert_fail@plt+0x5b90>
   172e0:	b	17a38 <__assert_fail@plt+0x62e4>
   172e4:	b	172e8 <__assert_fail@plt+0x5b94>
   172e8:	movw	r0, #1
   172ec:	strb	r0, [fp, #-67]	; 0xffffffbd
   172f0:	ldr	r0, [fp, #8]
   172f4:	cmp	r0, #2
   172f8:	bne	1730c <__assert_fail@plt+0x5bb8>
   172fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17300:	tst	r0, #1
   17304:	beq	1730c <__assert_fail@plt+0x5bb8>
   17308:	b	17e2c <__assert_fail@plt+0x66d8>
   1730c:	b	17a38 <__assert_fail@plt+0x62e4>
   17310:	movw	r0, #1
   17314:	strb	r0, [fp, #-61]	; 0xffffffc3
   17318:	strb	r0, [fp, #-67]	; 0xffffffbd
   1731c:	ldr	r0, [fp, #8]
   17320:	cmp	r0, #2
   17324:	bne	17404 <__assert_fail@plt+0x5cb0>
   17328:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1732c:	tst	r0, #1
   17330:	beq	17338 <__assert_fail@plt+0x5be4>
   17334:	b	17e2c <__assert_fail@plt+0x66d8>
   17338:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1733c:	cmp	r0, #0
   17340:	beq	17360 <__assert_fail@plt+0x5c0c>
   17344:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17348:	cmp	r0, #0
   1734c:	bne	17360 <__assert_fail@plt+0x5c0c>
   17350:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17354:	str	r0, [fp, #-48]	; 0xffffffd0
   17358:	movw	r0, #0
   1735c:	str	r0, [fp, #-28]	; 0xffffffe4
   17360:	b	17364 <__assert_fail@plt+0x5c10>
   17364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1736c:	cmp	r0, r1
   17370:	bcs	17388 <__assert_fail@plt+0x5c34>
   17374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1737c:	add	r0, r0, r1
   17380:	movw	r1, #39	; 0x27
   17384:	strb	r1, [r0]
   17388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1738c:	add	r0, r0, #1
   17390:	str	r0, [fp, #-44]	; 0xffffffd4
   17394:	b	17398 <__assert_fail@plt+0x5c44>
   17398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1739c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   173a0:	cmp	r0, r1
   173a4:	bcs	173bc <__assert_fail@plt+0x5c68>
   173a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173b0:	add	r0, r0, r1
   173b4:	movw	r1, #92	; 0x5c
   173b8:	strb	r1, [r0]
   173bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173c0:	add	r0, r0, #1
   173c4:	str	r0, [fp, #-44]	; 0xffffffd4
   173c8:	b	173cc <__assert_fail@plt+0x5c78>
   173cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   173d4:	cmp	r0, r1
   173d8:	bcs	173f0 <__assert_fail@plt+0x5c9c>
   173dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173e4:	add	r0, r0, r1
   173e8:	movw	r1, #39	; 0x27
   173ec:	strb	r1, [r0]
   173f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173f4:	add	r0, r0, #1
   173f8:	str	r0, [fp, #-44]	; 0xffffffd4
   173fc:	movw	r0, #0
   17400:	strb	r0, [fp, #-60]	; 0xffffffc4
   17404:	b	17a38 <__assert_fail@plt+0x62e4>
   17408:	movw	r0, #1
   1740c:	strb	r0, [fp, #-67]	; 0xffffffbd
   17410:	b	17a38 <__assert_fail@plt+0x62e4>
   17414:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   17418:	tst	r0, #1
   1741c:	beq	17460 <__assert_fail@plt+0x5d0c>
   17420:	mov	r0, #1
   17424:	str	r0, [fp, #-72]	; 0xffffffb8
   17428:	bl	115e0 <__ctype_b_loc@plt>
   1742c:	ldr	r0, [r0]
   17430:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   17434:	mov	r1, lr
   17438:	add	r0, r0, lr, lsl #1
   1743c:	ldrh	r0, [r0]
   17440:	and	r0, r0, #16384	; 0x4000
   17444:	cmp	r0, #0
   17448:	movw	r0, #0
   1744c:	movne	r0, #1
   17450:	and	r0, r0, #1
   17454:	strb	r0, [fp, #-73]	; 0xffffffb7
   17458:	str	r1, [sp, #32]
   1745c:	b	176ec <__assert_fail@plt+0x5f98>
   17460:	sub	r0, fp, #84	; 0x54
   17464:	movw	r1, #0
   17468:	and	r1, r1, #255	; 0xff
   1746c:	movw	r2, #8
   17470:	bl	11658 <memset@plt>
   17474:	movw	r0, #0
   17478:	str	r0, [fp, #-72]	; 0xffffffb8
   1747c:	movw	r0, #1
   17480:	strb	r0, [fp, #-73]	; 0xffffffb7
   17484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17488:	cmn	r0, #1
   1748c:	bne	1749c <__assert_fail@plt+0x5d48>
   17490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17494:	bl	11604 <strlen@plt>
   17498:	str	r0, [fp, #-36]	; 0xffffffdc
   1749c:	b	174a0 <__assert_fail@plt+0x5d4c>
   174a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   174a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174ac:	add	r1, r1, r2
   174b0:	add	r1, r0, r1
   174b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   174bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   174c0:	add	r2, r2, r3
   174c4:	sub	r2, r0, r2
   174c8:	sub	r0, fp, #88	; 0x58
   174cc:	sub	r3, fp, #84	; 0x54
   174d0:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   174d4:	str	r0, [sp, #92]	; 0x5c
   174d8:	ldr	r0, [sp, #92]	; 0x5c
   174dc:	cmp	r0, #0
   174e0:	bne	174e8 <__assert_fail@plt+0x5d94>
   174e4:	b	176e8 <__assert_fail@plt+0x5f94>
   174e8:	ldr	r0, [sp, #92]	; 0x5c
   174ec:	cmn	r0, #1
   174f0:	bne	17500 <__assert_fail@plt+0x5dac>
   174f4:	movw	r0, #0
   174f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   174fc:	b	176e8 <__assert_fail@plt+0x5f94>
   17500:	ldr	r0, [sp, #92]	; 0x5c
   17504:	cmn	r0, #2
   17508:	bne	1757c <__assert_fail@plt+0x5e28>
   1750c:	movw	r0, #0
   17510:	strb	r0, [fp, #-73]	; 0xffffffb7
   17514:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17518:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1751c:	add	r0, r0, r1
   17520:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17524:	cmp	r0, r1
   17528:	movw	r0, #0
   1752c:	str	r0, [sp, #28]
   17530:	bcs	1755c <__assert_fail@plt+0x5e08>
   17534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17538:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1753c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17540:	add	r1, r1, r2
   17544:	add	r0, r0, r1
   17548:	ldrb	r0, [r0]
   1754c:	cmp	r0, #0
   17550:	movw	r0, #0
   17554:	movne	r0, #1
   17558:	str	r0, [sp, #28]
   1755c:	ldr	r0, [sp, #28]
   17560:	tst	r0, #1
   17564:	beq	17578 <__assert_fail@plt+0x5e24>
   17568:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1756c:	add	r0, r0, #1
   17570:	str	r0, [fp, #-72]	; 0xffffffb8
   17574:	b	17514 <__assert_fail@plt+0x5dc0>
   17578:	b	176e8 <__assert_fail@plt+0x5f94>
   1757c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17580:	tst	r0, #1
   17584:	beq	17690 <__assert_fail@plt+0x5f3c>
   17588:	ldr	r0, [fp, #8]
   1758c:	cmp	r0, #2
   17590:	bne	17690 <__assert_fail@plt+0x5f3c>
   17594:	movw	r0, #1
   17598:	str	r0, [sp, #88]	; 0x58
   1759c:	ldr	r0, [sp, #88]	; 0x58
   175a0:	ldr	r1, [sp, #92]	; 0x5c
   175a4:	cmp	r0, r1
   175a8:	bcs	1768c <__assert_fail@plt+0x5f38>
   175ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   175b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   175b8:	add	r1, r1, r2
   175bc:	ldr	r2, [sp, #88]	; 0x58
   175c0:	add	r1, r1, r2
   175c4:	ldrb	r0, [r0, r1]
   175c8:	sub	r0, r0, #91	; 0x5b
   175cc:	cmp	r0, #33	; 0x21
   175d0:	str	r0, [sp, #24]
   175d4:	bhi	17674 <__assert_fail@plt+0x5f20>
   175d8:	add	r0, pc, #8
   175dc:	ldr	r1, [sp, #24]
   175e0:	ldr	r0, [r0, r1, lsl #2]
   175e4:	mov	pc, r0
   175e8:	andeq	r7, r1, r0, ror r6
   175ec:	andeq	r7, r1, r0, ror r6
   175f0:	andeq	r7, r1, r4, ror r6
   175f4:	andeq	r7, r1, r0, ror r6
   175f8:	andeq	r7, r1, r4, ror r6
   175fc:	andeq	r7, r1, r0, ror r6
   17600:	andeq	r7, r1, r4, ror r6
   17604:	andeq	r7, r1, r4, ror r6
   17608:	andeq	r7, r1, r4, ror r6
   1760c:	andeq	r7, r1, r4, ror r6
   17610:	andeq	r7, r1, r4, ror r6
   17614:	andeq	r7, r1, r4, ror r6
   17618:	andeq	r7, r1, r4, ror r6
   1761c:	andeq	r7, r1, r4, ror r6
   17620:	andeq	r7, r1, r4, ror r6
   17624:	andeq	r7, r1, r4, ror r6
   17628:	andeq	r7, r1, r4, ror r6
   1762c:	andeq	r7, r1, r4, ror r6
   17630:	andeq	r7, r1, r4, ror r6
   17634:	andeq	r7, r1, r4, ror r6
   17638:	andeq	r7, r1, r4, ror r6
   1763c:	andeq	r7, r1, r4, ror r6
   17640:	andeq	r7, r1, r4, ror r6
   17644:	andeq	r7, r1, r4, ror r6
   17648:	andeq	r7, r1, r4, ror r6
   1764c:	andeq	r7, r1, r4, ror r6
   17650:	andeq	r7, r1, r4, ror r6
   17654:	andeq	r7, r1, r4, ror r6
   17658:	andeq	r7, r1, r4, ror r6
   1765c:	andeq	r7, r1, r4, ror r6
   17660:	andeq	r7, r1, r4, ror r6
   17664:	andeq	r7, r1, r4, ror r6
   17668:	andeq	r7, r1, r4, ror r6
   1766c:	andeq	r7, r1, r0, ror r6
   17670:	b	17e2c <__assert_fail@plt+0x66d8>
   17674:	b	17678 <__assert_fail@plt+0x5f24>
   17678:	b	1767c <__assert_fail@plt+0x5f28>
   1767c:	ldr	r0, [sp, #88]	; 0x58
   17680:	add	r0, r0, #1
   17684:	str	r0, [sp, #88]	; 0x58
   17688:	b	1759c <__assert_fail@plt+0x5e48>
   1768c:	b	17690 <__assert_fail@plt+0x5f3c>
   17690:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17694:	bl	11520 <iswprint@plt>
   17698:	cmp	r0, #0
   1769c:	bne	176a8 <__assert_fail@plt+0x5f54>
   176a0:	movw	r0, #0
   176a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   176a8:	ldr	r0, [sp, #92]	; 0x5c
   176ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   176b0:	add	r0, r1, r0
   176b4:	str	r0, [fp, #-72]	; 0xffffffb8
   176b8:	b	176bc <__assert_fail@plt+0x5f68>
   176bc:	b	176c0 <__assert_fail@plt+0x5f6c>
   176c0:	b	176c4 <__assert_fail@plt+0x5f70>
   176c4:	sub	r0, fp, #84	; 0x54
   176c8:	bl	114a8 <mbsinit@plt>
   176cc:	cmp	r0, #0
   176d0:	movw	r0, #0
   176d4:	movne	r0, #1
   176d8:	mvn	lr, #0
   176dc:	eor	r0, r0, lr
   176e0:	tst	r0, #1
   176e4:	bne	174a0 <__assert_fail@plt+0x5d4c>
   176e8:	b	176ec <__assert_fail@plt+0x5f98>
   176ec:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   176f0:	and	r0, r0, #1
   176f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   176f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   176fc:	movw	r1, #1
   17700:	cmp	r1, r0
   17704:	bcc	17720 <__assert_fail@plt+0x5fcc>
   17708:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1770c:	tst	r0, #1
   17710:	beq	17a34 <__assert_fail@plt+0x62e0>
   17714:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   17718:	tst	r0, #1
   1771c:	bne	17a34 <__assert_fail@plt+0x62e0>
   17720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17724:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17728:	add	r0, r0, r1
   1772c:	str	r0, [sp, #84]	; 0x54
   17730:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17734:	tst	r0, #1
   17738:	beq	178e8 <__assert_fail@plt+0x6194>
   1773c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   17740:	tst	r0, #1
   17744:	bne	178e8 <__assert_fail@plt+0x6194>
   17748:	b	1774c <__assert_fail@plt+0x5ff8>
   1774c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17750:	tst	r0, #1
   17754:	beq	1775c <__assert_fail@plt+0x6008>
   17758:	b	17e2c <__assert_fail@plt+0x66d8>
   1775c:	movw	r0, #1
   17760:	strb	r0, [fp, #-66]	; 0xffffffbe
   17764:	ldr	r0, [fp, #8]
   17768:	cmp	r0, #2
   1776c:	bne	17820 <__assert_fail@plt+0x60cc>
   17770:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17774:	tst	r0, #1
   17778:	bne	17820 <__assert_fail@plt+0x60cc>
   1777c:	b	17780 <__assert_fail@plt+0x602c>
   17780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17788:	cmp	r0, r1
   1778c:	bcs	177a4 <__assert_fail@plt+0x6050>
   17790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17798:	add	r0, r0, r1
   1779c:	movw	r1, #39	; 0x27
   177a0:	strb	r1, [r0]
   177a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177a8:	add	r0, r0, #1
   177ac:	str	r0, [fp, #-44]	; 0xffffffd4
   177b0:	b	177b4 <__assert_fail@plt+0x6060>
   177b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   177bc:	cmp	r0, r1
   177c0:	bcs	177d8 <__assert_fail@plt+0x6084>
   177c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   177cc:	add	r0, r0, r1
   177d0:	movw	r1, #36	; 0x24
   177d4:	strb	r1, [r0]
   177d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177dc:	add	r0, r0, #1
   177e0:	str	r0, [fp, #-44]	; 0xffffffd4
   177e4:	b	177e8 <__assert_fail@plt+0x6094>
   177e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   177f0:	cmp	r0, r1
   177f4:	bcs	1780c <__assert_fail@plt+0x60b8>
   177f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17800:	add	r0, r0, r1
   17804:	movw	r1, #39	; 0x27
   17808:	strb	r1, [r0]
   1780c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17810:	add	r0, r0, #1
   17814:	str	r0, [fp, #-44]	; 0xffffffd4
   17818:	movw	r0, #1
   1781c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17820:	b	17824 <__assert_fail@plt+0x60d0>
   17824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1782c:	cmp	r0, r1
   17830:	bcs	17848 <__assert_fail@plt+0x60f4>
   17834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1783c:	add	r0, r0, r1
   17840:	movw	r1, #92	; 0x5c
   17844:	strb	r1, [r0]
   17848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1784c:	add	r0, r0, #1
   17850:	str	r0, [fp, #-44]	; 0xffffffd4
   17854:	b	17858 <__assert_fail@plt+0x6104>
   17858:	b	1785c <__assert_fail@plt+0x6108>
   1785c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17860:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17864:	cmp	r0, r1
   17868:	bcs	17888 <__assert_fail@plt+0x6134>
   1786c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17870:	asr	r0, r0, #6
   17874:	add	r0, r0, #48	; 0x30
   17878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1787c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17880:	add	r1, r1, r2
   17884:	strb	r0, [r1]
   17888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1788c:	add	r0, r0, #1
   17890:	str	r0, [fp, #-44]	; 0xffffffd4
   17894:	b	17898 <__assert_fail@plt+0x6144>
   17898:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1789c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   178a0:	cmp	r0, r1
   178a4:	bcs	178c8 <__assert_fail@plt+0x6174>
   178a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   178ac:	asr	r0, r0, #3
   178b0:	and	r0, r0, #7
   178b4:	add	r0, r0, #48	; 0x30
   178b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   178c0:	add	r1, r1, r2
   178c4:	strb	r0, [r1]
   178c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178cc:	add	r0, r0, #1
   178d0:	str	r0, [fp, #-44]	; 0xffffffd4
   178d4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   178d8:	and	r0, r0, #7
   178dc:	add	r0, r0, #48	; 0x30
   178e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   178e4:	b	17934 <__assert_fail@plt+0x61e0>
   178e8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   178ec:	tst	r0, #1
   178f0:	beq	17930 <__assert_fail@plt+0x61dc>
   178f4:	b	178f8 <__assert_fail@plt+0x61a4>
   178f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17900:	cmp	r0, r1
   17904:	bcs	1791c <__assert_fail@plt+0x61c8>
   17908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1790c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17910:	add	r0, r0, r1
   17914:	movw	r1, #92	; 0x5c
   17918:	strb	r1, [r0]
   1791c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17920:	add	r0, r0, #1
   17924:	str	r0, [fp, #-44]	; 0xffffffd4
   17928:	movw	r0, #0
   1792c:	strb	r0, [fp, #-65]	; 0xffffffbf
   17930:	b	17934 <__assert_fail@plt+0x61e0>
   17934:	ldr	r0, [sp, #84]	; 0x54
   17938:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1793c:	add	r1, r1, #1
   17940:	cmp	r0, r1
   17944:	bhi	1794c <__assert_fail@plt+0x61f8>
   17948:	b	17a30 <__assert_fail@plt+0x62dc>
   1794c:	b	17950 <__assert_fail@plt+0x61fc>
   17950:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17954:	tst	r0, #1
   17958:	beq	179d8 <__assert_fail@plt+0x6284>
   1795c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   17960:	tst	r0, #1
   17964:	bne	179d8 <__assert_fail@plt+0x6284>
   17968:	b	1796c <__assert_fail@plt+0x6218>
   1796c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17974:	cmp	r0, r1
   17978:	bcs	17990 <__assert_fail@plt+0x623c>
   1797c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17984:	add	r0, r0, r1
   17988:	movw	r1, #39	; 0x27
   1798c:	strb	r1, [r0]
   17990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17994:	add	r0, r0, #1
   17998:	str	r0, [fp, #-44]	; 0xffffffd4
   1799c:	b	179a0 <__assert_fail@plt+0x624c>
   179a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   179a8:	cmp	r0, r1
   179ac:	bcs	179c4 <__assert_fail@plt+0x6270>
   179b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   179b8:	add	r0, r0, r1
   179bc:	movw	r1, #39	; 0x27
   179c0:	strb	r1, [r0]
   179c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179c8:	add	r0, r0, #1
   179cc:	str	r0, [fp, #-44]	; 0xffffffd4
   179d0:	movw	r0, #0
   179d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   179d8:	b	179dc <__assert_fail@plt+0x6288>
   179dc:	b	179e0 <__assert_fail@plt+0x628c>
   179e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   179e8:	cmp	r0, r1
   179ec:	bcs	17a04 <__assert_fail@plt+0x62b0>
   179f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   179f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   179fc:	add	r1, r1, r2
   17a00:	strb	r0, [r1]
   17a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a08:	add	r0, r0, #1
   17a0c:	str	r0, [fp, #-44]	; 0xffffffd4
   17a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17a18:	add	r1, r1, #1
   17a1c:	str	r1, [fp, #-40]	; 0xffffffd8
   17a20:	add	r0, r0, r1
   17a24:	ldrb	r0, [r0]
   17a28:	strb	r0, [fp, #-63]	; 0xffffffc1
   17a2c:	b	17730 <__assert_fail@plt+0x5fdc>
   17a30:	b	17bc0 <__assert_fail@plt+0x646c>
   17a34:	b	17a38 <__assert_fail@plt+0x62e4>
   17a38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17a3c:	tst	r0, #1
   17a40:	beq	17a50 <__assert_fail@plt+0x62fc>
   17a44:	ldr	r0, [fp, #8]
   17a48:	cmp	r0, #2
   17a4c:	bne	17a5c <__assert_fail@plt+0x6308>
   17a50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17a54:	tst	r0, #1
   17a58:	beq	17a98 <__assert_fail@plt+0x6344>
   17a5c:	ldr	r0, [fp, #16]
   17a60:	movw	r1, #0
   17a64:	cmp	r0, r1
   17a68:	beq	17a98 <__assert_fail@plt+0x6344>
   17a6c:	ldr	r0, [fp, #16]
   17a70:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   17a74:	lsr	r1, r1, #5
   17a78:	add	r0, r0, r1, lsl #2
   17a7c:	ldr	r0, [r0]
   17a80:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   17a84:	and	r1, r1, #31
   17a88:	lsr	r0, r0, r1
   17a8c:	and	r0, r0, #1
   17a90:	cmp	r0, #0
   17a94:	bne	17aa8 <__assert_fail@plt+0x6354>
   17a98:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   17a9c:	tst	r0, #1
   17aa0:	bne	17aa8 <__assert_fail@plt+0x6354>
   17aa4:	b	17bc0 <__assert_fail@plt+0x646c>
   17aa8:	b	17aac <__assert_fail@plt+0x6358>
   17aac:	b	17ab0 <__assert_fail@plt+0x635c>
   17ab0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17ab4:	tst	r0, #1
   17ab8:	beq	17ac0 <__assert_fail@plt+0x636c>
   17abc:	b	17e2c <__assert_fail@plt+0x66d8>
   17ac0:	movw	r0, #1
   17ac4:	strb	r0, [fp, #-66]	; 0xffffffbe
   17ac8:	ldr	r0, [fp, #8]
   17acc:	cmp	r0, #2
   17ad0:	bne	17b84 <__assert_fail@plt+0x6430>
   17ad4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17ad8:	tst	r0, #1
   17adc:	bne	17b84 <__assert_fail@plt+0x6430>
   17ae0:	b	17ae4 <__assert_fail@plt+0x6390>
   17ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17aec:	cmp	r0, r1
   17af0:	bcs	17b08 <__assert_fail@plt+0x63b4>
   17af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17af8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17afc:	add	r0, r0, r1
   17b00:	movw	r1, #39	; 0x27
   17b04:	strb	r1, [r0]
   17b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b0c:	add	r0, r0, #1
   17b10:	str	r0, [fp, #-44]	; 0xffffffd4
   17b14:	b	17b18 <__assert_fail@plt+0x63c4>
   17b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b20:	cmp	r0, r1
   17b24:	bcs	17b3c <__assert_fail@plt+0x63e8>
   17b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b30:	add	r0, r0, r1
   17b34:	movw	r1, #36	; 0x24
   17b38:	strb	r1, [r0]
   17b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b40:	add	r0, r0, #1
   17b44:	str	r0, [fp, #-44]	; 0xffffffd4
   17b48:	b	17b4c <__assert_fail@plt+0x63f8>
   17b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b54:	cmp	r0, r1
   17b58:	bcs	17b70 <__assert_fail@plt+0x641c>
   17b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b64:	add	r0, r0, r1
   17b68:	movw	r1, #39	; 0x27
   17b6c:	strb	r1, [r0]
   17b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b74:	add	r0, r0, #1
   17b78:	str	r0, [fp, #-44]	; 0xffffffd4
   17b7c:	movw	r0, #1
   17b80:	strb	r0, [fp, #-60]	; 0xffffffc4
   17b84:	b	17b88 <__assert_fail@plt+0x6434>
   17b88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b90:	cmp	r0, r1
   17b94:	bcs	17bac <__assert_fail@plt+0x6458>
   17b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17ba0:	add	r0, r0, r1
   17ba4:	movw	r1, #92	; 0x5c
   17ba8:	strb	r1, [r0]
   17bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bb0:	add	r0, r0, #1
   17bb4:	str	r0, [fp, #-44]	; 0xffffffd4
   17bb8:	b	17bbc <__assert_fail@plt+0x6468>
   17bbc:	b	17bc0 <__assert_fail@plt+0x646c>
   17bc0:	b	17bc4 <__assert_fail@plt+0x6470>
   17bc4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17bc8:	tst	r0, #1
   17bcc:	beq	17c4c <__assert_fail@plt+0x64f8>
   17bd0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   17bd4:	tst	r0, #1
   17bd8:	bne	17c4c <__assert_fail@plt+0x64f8>
   17bdc:	b	17be0 <__assert_fail@plt+0x648c>
   17be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17be8:	cmp	r0, r1
   17bec:	bcs	17c04 <__assert_fail@plt+0x64b0>
   17bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17bf8:	add	r0, r0, r1
   17bfc:	movw	r1, #39	; 0x27
   17c00:	strb	r1, [r0]
   17c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c08:	add	r0, r0, #1
   17c0c:	str	r0, [fp, #-44]	; 0xffffffd4
   17c10:	b	17c14 <__assert_fail@plt+0x64c0>
   17c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c1c:	cmp	r0, r1
   17c20:	bcs	17c38 <__assert_fail@plt+0x64e4>
   17c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17c2c:	add	r0, r0, r1
   17c30:	movw	r1, #39	; 0x27
   17c34:	strb	r1, [r0]
   17c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c3c:	add	r0, r0, #1
   17c40:	str	r0, [fp, #-44]	; 0xffffffd4
   17c44:	movw	r0, #0
   17c48:	strb	r0, [fp, #-60]	; 0xffffffc4
   17c4c:	b	17c50 <__assert_fail@plt+0x64fc>
   17c50:	b	17c54 <__assert_fail@plt+0x6500>
   17c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c5c:	cmp	r0, r1
   17c60:	bcs	17c78 <__assert_fail@plt+0x6524>
   17c64:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17c70:	add	r1, r1, r2
   17c74:	strb	r0, [r1]
   17c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c7c:	add	r0, r0, #1
   17c80:	str	r0, [fp, #-44]	; 0xffffffd4
   17c84:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   17c88:	tst	r0, #1
   17c8c:	bne	17c98 <__assert_fail@plt+0x6544>
   17c90:	movw	r0, #0
   17c94:	strb	r0, [fp, #-62]	; 0xffffffc2
   17c98:	b	17c9c <__assert_fail@plt+0x6548>
   17c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ca0:	add	r0, r0, #1
   17ca4:	str	r0, [fp, #-40]	; 0xffffffd8
   17ca8:	b	16a50 <__assert_fail@plt+0x52fc>
   17cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cb0:	cmp	r0, #0
   17cb4:	bne	17cd4 <__assert_fail@plt+0x6580>
   17cb8:	ldr	r0, [fp, #8]
   17cbc:	cmp	r0, #2
   17cc0:	bne	17cd4 <__assert_fail@plt+0x6580>
   17cc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17cc8:	tst	r0, #1
   17ccc:	beq	17cd4 <__assert_fail@plt+0x6580>
   17cd0:	b	17e2c <__assert_fail@plt+0x66d8>
   17cd4:	ldr	r0, [fp, #8]
   17cd8:	cmp	r0, #2
   17cdc:	bne	17d7c <__assert_fail@plt+0x6628>
   17ce0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17ce4:	tst	r0, #1
   17ce8:	bne	17d7c <__assert_fail@plt+0x6628>
   17cec:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   17cf0:	tst	r0, #1
   17cf4:	beq	17d7c <__assert_fail@plt+0x6628>
   17cf8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   17cfc:	tst	r0, #1
   17d00:	beq	17d48 <__assert_fail@plt+0x65f4>
   17d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17d0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17d10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d14:	ldr	ip, [fp, #12]
   17d18:	ldr	lr, [fp, #16]
   17d1c:	ldr	r4, [fp, #20]
   17d20:	ldr	r5, [fp, #24]
   17d24:	movw	r6, #5
   17d28:	str	r6, [sp]
   17d2c:	str	ip, [sp, #4]
   17d30:	str	lr, [sp, #8]
   17d34:	str	r4, [sp, #12]
   17d38:	str	r5, [sp, #16]
   17d3c:	bl	16768 <__assert_fail@plt+0x5014>
   17d40:	str	r0, [fp, #-20]	; 0xffffffec
   17d44:	b	17e94 <__assert_fail@plt+0x6740>
   17d48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17d4c:	cmp	r0, #0
   17d50:	bne	17d74 <__assert_fail@plt+0x6620>
   17d54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17d58:	cmp	r0, #0
   17d5c:	beq	17d74 <__assert_fail@plt+0x6620>
   17d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17d64:	str	r0, [fp, #-28]	; 0xffffffe4
   17d68:	movw	r0, #0
   17d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   17d70:	b	16810 <__assert_fail@plt+0x50bc>
   17d74:	b	17d78 <__assert_fail@plt+0x6624>
   17d78:	b	17d7c <__assert_fail@plt+0x6628>
   17d7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17d80:	movw	r1, #0
   17d84:	cmp	r0, r1
   17d88:	beq	17dfc <__assert_fail@plt+0x66a8>
   17d8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17d90:	tst	r0, #1
   17d94:	bne	17dfc <__assert_fail@plt+0x66a8>
   17d98:	b	17d9c <__assert_fail@plt+0x6648>
   17d9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17da0:	ldrsb	r0, [r0]
   17da4:	cmp	r0, #0
   17da8:	beq	17df8 <__assert_fail@plt+0x66a4>
   17dac:	b	17db0 <__assert_fail@plt+0x665c>
   17db0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17db8:	cmp	r0, r1
   17dbc:	bcs	17dd8 <__assert_fail@plt+0x6684>
   17dc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17dc4:	ldrb	r0, [r0]
   17dc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17dd0:	add	r1, r1, r2
   17dd4:	strb	r0, [r1]
   17dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ddc:	add	r0, r0, #1
   17de0:	str	r0, [fp, #-44]	; 0xffffffd4
   17de4:	b	17de8 <__assert_fail@plt+0x6694>
   17de8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17dec:	add	r0, r0, #1
   17df0:	str	r0, [fp, #-52]	; 0xffffffcc
   17df4:	b	17d9c <__assert_fail@plt+0x6648>
   17df8:	b	17dfc <__assert_fail@plt+0x66a8>
   17dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e04:	cmp	r0, r1
   17e08:	bcs	17e20 <__assert_fail@plt+0x66cc>
   17e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e14:	add	r0, r0, r1
   17e18:	movw	r1, #0
   17e1c:	strb	r1, [r0]
   17e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e24:	str	r0, [fp, #-20]	; 0xffffffec
   17e28:	b	17e94 <__assert_fail@plt+0x6740>
   17e2c:	ldr	r0, [fp, #8]
   17e30:	cmp	r0, #2
   17e34:	bne	17e4c <__assert_fail@plt+0x66f8>
   17e38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17e3c:	tst	r0, #1
   17e40:	beq	17e4c <__assert_fail@plt+0x66f8>
   17e44:	movw	r0, #4
   17e48:	str	r0, [fp, #8]
   17e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e5c:	ldr	ip, [fp, #8]
   17e60:	ldr	lr, [fp, #12]
   17e64:	mvn	r4, #2
   17e68:	and	lr, lr, r4
   17e6c:	ldr	r4, [fp, #20]
   17e70:	ldr	r5, [fp, #24]
   17e74:	str	ip, [sp]
   17e78:	str	lr, [sp, #4]
   17e7c:	movw	ip, #0
   17e80:	str	ip, [sp, #8]
   17e84:	str	r4, [sp, #12]
   17e88:	str	r5, [sp, #16]
   17e8c:	bl	16768 <__assert_fail@plt+0x5014>
   17e90:	str	r0, [fp, #-20]	; 0xffffffec
   17e94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e98:	sub	sp, fp, #16
   17e9c:	pop	{r4, r5, r6, sl, fp, pc}
   17ea0:	push	{fp, lr}
   17ea4:	mov	fp, sp
   17ea8:	sub	sp, sp, #16
   17eac:	str	r0, [fp, #-4]
   17eb0:	str	r1, [sp, #8]
   17eb4:	str	r2, [sp, #4]
   17eb8:	ldr	r0, [fp, #-4]
   17ebc:	ldr	r1, [sp, #8]
   17ec0:	ldr	r3, [sp, #4]
   17ec4:	movw	r2, #0
   17ec8:	bl	17ed4 <__assert_fail@plt+0x6780>
   17ecc:	mov	sp, fp
   17ed0:	pop	{fp, pc}
   17ed4:	push	{r4, r5, r6, sl, fp, lr}
   17ed8:	add	fp, sp, #16
   17edc:	sub	sp, sp, #72	; 0x48
   17ee0:	str	r0, [fp, #-20]	; 0xffffffec
   17ee4:	str	r1, [fp, #-24]	; 0xffffffe8
   17ee8:	str	r2, [fp, #-28]	; 0xffffffe4
   17eec:	str	r3, [fp, #-32]	; 0xffffffe0
   17ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ef4:	movw	r1, #0
   17ef8:	cmp	r0, r1
   17efc:	beq	17f0c <__assert_fail@plt+0x67b8>
   17f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f04:	str	r0, [sp, #32]
   17f08:	b	17f1c <__assert_fail@plt+0x67c8>
   17f0c:	movw	r0, #58048	; 0xe2c0
   17f10:	movt	r0, #4
   17f14:	str	r0, [sp, #32]
   17f18:	b	17f1c <__assert_fail@plt+0x67c8>
   17f1c:	ldr	r0, [sp, #32]
   17f20:	str	r0, [fp, #-36]	; 0xffffffdc
   17f24:	bl	11628 <__errno_location@plt>
   17f28:	ldr	r0, [r0]
   17f2c:	str	r0, [fp, #-40]	; 0xffffffd8
   17f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f34:	ldr	r0, [r0, #4]
   17f38:	ldr	lr, [fp, #-28]	; 0xffffffe4
   17f3c:	movw	r1, #0
   17f40:	cmp	lr, r1
   17f44:	movw	lr, #0
   17f48:	movne	lr, #1
   17f4c:	tst	lr, #1
   17f50:	mov	lr, r1
   17f54:	moveq	lr, #1
   17f58:	orr	r0, r0, lr
   17f5c:	str	r0, [sp, #44]	; 0x2c
   17f60:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f6c:	ldr	r0, [r0]
   17f70:	ldr	lr, [sp, #44]	; 0x2c
   17f74:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17f78:	add	ip, ip, #8
   17f7c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17f80:	ldr	r4, [r4, #40]	; 0x28
   17f84:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17f88:	ldr	r5, [r5, #44]	; 0x2c
   17f8c:	str	r0, [sp, #28]
   17f90:	mov	r0, r1
   17f94:	ldr	r6, [sp, #28]
   17f98:	str	r6, [sp]
   17f9c:	str	lr, [sp, #4]
   17fa0:	str	ip, [sp, #8]
   17fa4:	str	r4, [sp, #12]
   17fa8:	str	r5, [sp, #16]
   17fac:	bl	16768 <__assert_fail@plt+0x5014>
   17fb0:	add	r0, r0, #1
   17fb4:	str	r0, [sp, #40]	; 0x28
   17fb8:	ldr	r0, [sp, #40]	; 0x28
   17fbc:	bl	3147c <__assert_fail@plt+0x1fd28>
   17fc0:	str	r0, [sp, #36]	; 0x24
   17fc4:	ldr	r0, [sp, #36]	; 0x24
   17fc8:	ldr	r1, [sp, #40]	; 0x28
   17fcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17fd4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17fd8:	ldr	ip, [ip]
   17fdc:	ldr	lr, [sp, #44]	; 0x2c
   17fe0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17fe4:	add	r4, r4, #8
   17fe8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17fec:	ldr	r5, [r5, #40]	; 0x28
   17ff0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17ff4:	ldr	r6, [r6, #44]	; 0x2c
   17ff8:	str	ip, [sp]
   17ffc:	str	lr, [sp, #4]
   18000:	str	r4, [sp, #8]
   18004:	str	r5, [sp, #12]
   18008:	str	r6, [sp, #16]
   1800c:	bl	16768 <__assert_fail@plt+0x5014>
   18010:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18014:	str	r0, [sp, #24]
   18018:	str	r1, [sp, #20]
   1801c:	bl	11628 <__errno_location@plt>
   18020:	ldr	r1, [sp, #20]
   18024:	str	r1, [r0]
   18028:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1802c:	movw	r2, #0
   18030:	cmp	r0, r2
   18034:	beq	18048 <__assert_fail@plt+0x68f4>
   18038:	ldr	r0, [sp, #40]	; 0x28
   1803c:	sub	r0, r0, #1
   18040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18044:	str	r0, [r1]
   18048:	ldr	r0, [sp, #36]	; 0x24
   1804c:	sub	sp, fp, #16
   18050:	pop	{r4, r5, r6, sl, fp, pc}
   18054:	push	{fp, lr}
   18058:	mov	fp, sp
   1805c:	sub	sp, sp, #8
   18060:	movw	r0, #57700	; 0xe164
   18064:	movt	r0, #4
   18068:	ldr	r0, [r0]
   1806c:	str	r0, [sp, #4]
   18070:	movw	r0, #1
   18074:	str	r0, [sp]
   18078:	ldr	r0, [sp]
   1807c:	movw	r1, #57704	; 0xe168
   18080:	movt	r1, #4
   18084:	ldr	r1, [r1]
   18088:	cmp	r0, r1
   1808c:	bge	180b4 <__assert_fail@plt+0x6960>
   18090:	ldr	r0, [sp, #4]
   18094:	ldr	r1, [sp]
   18098:	add	r0, r0, r1, lsl #3
   1809c:	ldr	r0, [r0, #4]
   180a0:	bl	1604c <__assert_fail@plt+0x48f8>
   180a4:	ldr	r0, [sp]
   180a8:	add	r0, r0, #1
   180ac:	str	r0, [sp]
   180b0:	b	18078 <__assert_fail@plt+0x6924>
   180b4:	ldr	r0, [sp, #4]
   180b8:	ldr	r0, [r0, #4]
   180bc:	movw	r1, #58096	; 0xe2f0
   180c0:	movt	r1, #4
   180c4:	cmp	r0, r1
   180c8:	beq	180f4 <__assert_fail@plt+0x69a0>
   180cc:	ldr	r0, [sp, #4]
   180d0:	ldr	r0, [r0, #4]
   180d4:	bl	1604c <__assert_fail@plt+0x48f8>
   180d8:	movw	r0, #256	; 0x100
   180dc:	movw	lr, #57708	; 0xe16c
   180e0:	movt	lr, #4
   180e4:	str	r0, [lr]
   180e8:	movw	r0, #58096	; 0xe2f0
   180ec:	movt	r0, #4
   180f0:	str	r0, [lr, #4]
   180f4:	ldr	r0, [sp, #4]
   180f8:	movw	r1, #57708	; 0xe16c
   180fc:	movt	r1, #4
   18100:	cmp	r0, r1
   18104:	beq	18124 <__assert_fail@plt+0x69d0>
   18108:	ldr	r0, [sp, #4]
   1810c:	bl	1604c <__assert_fail@plt+0x48f8>
   18110:	movw	r0, #57700	; 0xe164
   18114:	movt	r0, #4
   18118:	movw	lr, #57708	; 0xe16c
   1811c:	movt	lr, #4
   18120:	str	lr, [r0]
   18124:	movw	r0, #57704	; 0xe168
   18128:	movt	r0, #4
   1812c:	movw	r1, #1
   18130:	str	r1, [r0]
   18134:	mov	sp, fp
   18138:	pop	{fp, pc}
   1813c:	push	{fp, lr}
   18140:	mov	fp, sp
   18144:	sub	sp, sp, #8
   18148:	str	r0, [sp, #4]
   1814c:	str	r1, [sp]
   18150:	ldr	r0, [sp, #4]
   18154:	ldr	r1, [sp]
   18158:	mvn	r2, #0
   1815c:	movw	r3, #58048	; 0xe2c0
   18160:	movt	r3, #4
   18164:	bl	18170 <__assert_fail@plt+0x6a1c>
   18168:	mov	sp, fp
   1816c:	pop	{fp, pc}
   18170:	push	{r4, r5, r6, sl, fp, lr}
   18174:	add	fp, sp, #16
   18178:	sub	sp, sp, #88	; 0x58
   1817c:	str	r0, [fp, #-20]	; 0xffffffec
   18180:	str	r1, [fp, #-24]	; 0xffffffe8
   18184:	str	r2, [fp, #-28]	; 0xffffffe4
   18188:	str	r3, [fp, #-32]	; 0xffffffe0
   1818c:	bl	11628 <__errno_location@plt>
   18190:	ldr	r1, [pc, #676]	; 1843c <__assert_fail@plt+0x6ce8>
   18194:	ldr	r0, [r0]
   18198:	str	r0, [fp, #-36]	; 0xffffffdc
   1819c:	movw	r0, #57700	; 0xe164
   181a0:	movt	r0, #4
   181a4:	ldr	r0, [r0]
   181a8:	str	r0, [fp, #-40]	; 0xffffffd8
   181ac:	str	r1, [fp, #-44]	; 0xffffffd4
   181b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   181b4:	movw	r1, #0
   181b8:	cmp	r1, r0
   181bc:	bgt	181d0 <__assert_fail@plt+0x6a7c>
   181c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   181c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181c8:	cmp	r0, r1
   181cc:	blt	181d4 <__assert_fail@plt+0x6a80>
   181d0:	bl	1173c <abort@plt>
   181d4:	movw	r0, #57704	; 0xe168
   181d8:	movt	r0, #4
   181dc:	ldr	r0, [r0]
   181e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   181e4:	cmp	r0, r1
   181e8:	bgt	182e0 <__assert_fail@plt+0x6b8c>
   181ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181f0:	movw	r1, #57708	; 0xe16c
   181f4:	movt	r1, #4
   181f8:	cmp	r0, r1
   181fc:	movw	r0, #0
   18200:	moveq	r0, #1
   18204:	and	r0, r0, #1
   18208:	strb	r0, [fp, #-45]	; 0xffffffd3
   1820c:	movw	r0, #57704	; 0xe168
   18210:	movt	r0, #4
   18214:	ldr	r0, [r0]
   18218:	str	r0, [sp, #52]	; 0x34
   1821c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18220:	tst	r0, #1
   18224:	beq	18234 <__assert_fail@plt+0x6ae0>
   18228:	movw	r0, #0
   1822c:	str	r0, [sp, #32]
   18230:	b	1823c <__assert_fail@plt+0x6ae8>
   18234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18238:	str	r0, [sp, #32]
   1823c:	ldr	r0, [sp, #32]
   18240:	ldr	r1, [fp, #-20]	; 0xffffffec
   18244:	movw	r2, #57704	; 0xe168
   18248:	movt	r2, #4
   1824c:	ldr	r2, [r2]
   18250:	sub	r1, r1, r2
   18254:	add	r2, r1, #1
   18258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1825c:	add	r1, sp, #52	; 0x34
   18260:	movw	ip, #8
   18264:	str	ip, [sp]
   18268:	bl	316b8 <__assert_fail@plt+0x1ff64>
   1826c:	str	r0, [fp, #-40]	; 0xffffffd8
   18270:	movw	r1, #57700	; 0xe164
   18274:	movt	r1, #4
   18278:	str	r0, [r1]
   1827c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18280:	tst	r0, #1
   18284:	beq	182a4 <__assert_fail@plt+0x6b50>
   18288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1828c:	movw	r1, #57708	; 0xe16c
   18290:	movt	r1, #4
   18294:	ldr	r2, [r1]
   18298:	str	r2, [r0]
   1829c:	ldr	r1, [r1, #4]
   182a0:	str	r1, [r0, #4]
   182a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182a8:	movw	r1, #57704	; 0xe168
   182ac:	movt	r1, #4
   182b0:	ldr	r1, [r1]
   182b4:	add	r0, r0, r1, lsl #3
   182b8:	ldr	r2, [sp, #52]	; 0x34
   182bc:	sub	r1, r2, r1
   182c0:	lsl	r2, r1, #3
   182c4:	movw	r1, #0
   182c8:	and	r1, r1, #255	; 0xff
   182cc:	bl	11658 <memset@plt>
   182d0:	ldr	r0, [sp, #52]	; 0x34
   182d4:	movw	r1, #57704	; 0xe168
   182d8:	movt	r1, #4
   182dc:	str	r0, [r1]
   182e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   182e8:	ldr	r0, [r0, r1, lsl #3]
   182ec:	str	r0, [sp, #48]	; 0x30
   182f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   182f8:	add	r0, r0, r1, lsl #3
   182fc:	ldr	r0, [r0, #4]
   18300:	str	r0, [sp, #44]	; 0x2c
   18304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18308:	ldr	r0, [r0, #4]
   1830c:	orr	r0, r0, #1
   18310:	str	r0, [sp, #40]	; 0x28
   18314:	ldr	r0, [sp, #44]	; 0x2c
   18318:	ldr	r1, [sp, #48]	; 0x30
   1831c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18324:	ldr	ip, [fp, #-32]	; 0xffffffe0
   18328:	ldr	ip, [ip]
   1832c:	ldr	lr, [sp, #40]	; 0x28
   18330:	ldr	r4, [fp, #-32]	; 0xffffffe0
   18334:	add	r4, r4, #8
   18338:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1833c:	ldr	r5, [r5, #40]	; 0x28
   18340:	ldr	r6, [fp, #-32]	; 0xffffffe0
   18344:	ldr	r6, [r6, #44]	; 0x2c
   18348:	str	ip, [sp]
   1834c:	str	lr, [sp, #4]
   18350:	str	r4, [sp, #8]
   18354:	str	r5, [sp, #12]
   18358:	str	r6, [sp, #16]
   1835c:	bl	16768 <__assert_fail@plt+0x5014>
   18360:	str	r0, [sp, #36]	; 0x24
   18364:	ldr	r0, [sp, #48]	; 0x30
   18368:	ldr	r1, [sp, #36]	; 0x24
   1836c:	cmp	r0, r1
   18370:	bhi	1841c <__assert_fail@plt+0x6cc8>
   18374:	ldr	r0, [sp, #36]	; 0x24
   18378:	add	r0, r0, #1
   1837c:	str	r0, [sp, #48]	; 0x30
   18380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18384:	ldr	r2, [fp, #-20]	; 0xffffffec
   18388:	add	r1, r1, r2, lsl #3
   1838c:	str	r0, [r1]
   18390:	ldr	r0, [sp, #44]	; 0x2c
   18394:	movw	r1, #58096	; 0xe2f0
   18398:	movt	r1, #4
   1839c:	cmp	r0, r1
   183a0:	beq	183ac <__assert_fail@plt+0x6c58>
   183a4:	ldr	r0, [sp, #44]	; 0x2c
   183a8:	bl	1604c <__assert_fail@plt+0x48f8>
   183ac:	ldr	r0, [sp, #48]	; 0x30
   183b0:	bl	3147c <__assert_fail@plt+0x1fd28>
   183b4:	mov	lr, r0
   183b8:	str	r0, [sp, #44]	; 0x2c
   183bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   183c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   183c4:	add	r0, r0, r1, lsl #3
   183c8:	str	lr, [r0, #4]
   183cc:	ldr	r0, [sp, #44]	; 0x2c
   183d0:	ldr	r1, [sp, #48]	; 0x30
   183d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183dc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   183e0:	ldr	lr, [lr]
   183e4:	ldr	ip, [sp, #40]	; 0x28
   183e8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   183ec:	add	r4, r4, #8
   183f0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   183f4:	ldr	r5, [r5, #40]	; 0x28
   183f8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   183fc:	ldr	r6, [r6, #44]	; 0x2c
   18400:	str	lr, [sp]
   18404:	str	ip, [sp, #4]
   18408:	str	r4, [sp, #8]
   1840c:	str	r5, [sp, #12]
   18410:	str	r6, [sp, #16]
   18414:	bl	16768 <__assert_fail@plt+0x5014>
   18418:	str	r0, [sp, #28]
   1841c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18420:	str	r0, [sp, #24]
   18424:	bl	11628 <__errno_location@plt>
   18428:	ldr	lr, [sp, #24]
   1842c:	str	lr, [r0]
   18430:	ldr	r0, [sp, #44]	; 0x2c
   18434:	sub	sp, fp, #16
   18438:	pop	{r4, r5, r6, sl, fp, pc}
   1843c:	svcvc	0x00ffffff
   18440:	push	{fp, lr}
   18444:	mov	fp, sp
   18448:	sub	sp, sp, #16
   1844c:	str	r0, [fp, #-4]
   18450:	str	r1, [sp, #8]
   18454:	str	r2, [sp, #4]
   18458:	ldr	r0, [fp, #-4]
   1845c:	ldr	r1, [sp, #8]
   18460:	ldr	r2, [sp, #4]
   18464:	movw	r3, #58048	; 0xe2c0
   18468:	movt	r3, #4
   1846c:	bl	18170 <__assert_fail@plt+0x6a1c>
   18470:	mov	sp, fp
   18474:	pop	{fp, pc}
   18478:	push	{fp, lr}
   1847c:	mov	fp, sp
   18480:	sub	sp, sp, #8
   18484:	str	r0, [sp, #4]
   18488:	ldr	r1, [sp, #4]
   1848c:	movw	r0, #0
   18490:	bl	1813c <__assert_fail@plt+0x69e8>
   18494:	mov	sp, fp
   18498:	pop	{fp, pc}
   1849c:	push	{fp, lr}
   184a0:	mov	fp, sp
   184a4:	sub	sp, sp, #8
   184a8:	str	r0, [sp, #4]
   184ac:	str	r1, [sp]
   184b0:	ldr	r1, [sp, #4]
   184b4:	ldr	r2, [sp]
   184b8:	movw	r0, #0
   184bc:	bl	18440 <__assert_fail@plt+0x6cec>
   184c0:	mov	sp, fp
   184c4:	pop	{fp, pc}
   184c8:	push	{fp, lr}
   184cc:	mov	fp, sp
   184d0:	sub	sp, sp, #64	; 0x40
   184d4:	str	r0, [fp, #-4]
   184d8:	str	r1, [fp, #-8]
   184dc:	str	r2, [fp, #-12]
   184e0:	ldr	r1, [fp, #-8]
   184e4:	add	r0, sp, #4
   184e8:	bl	18508 <__assert_fail@plt+0x6db4>
   184ec:	ldr	r0, [fp, #-4]
   184f0:	ldr	r1, [fp, #-12]
   184f4:	mvn	r2, #0
   184f8:	add	r3, sp, #4
   184fc:	bl	18170 <__assert_fail@plt+0x6a1c>
   18500:	mov	sp, fp
   18504:	pop	{fp, pc}
   18508:	push	{fp, lr}
   1850c:	mov	fp, sp
   18510:	sub	sp, sp, #8
   18514:	str	r1, [sp, #4]
   18518:	mov	r1, r0
   1851c:	str	r0, [sp]
   18520:	mov	r0, r1
   18524:	movw	r1, #0
   18528:	and	r1, r1, #255	; 0xff
   1852c:	movw	r2, #48	; 0x30
   18530:	bl	11658 <memset@plt>
   18534:	ldr	r0, [sp, #4]
   18538:	cmp	r0, #10
   1853c:	bne	18544 <__assert_fail@plt+0x6df0>
   18540:	bl	1173c <abort@plt>
   18544:	ldr	r0, [sp, #4]
   18548:	ldr	r1, [sp]
   1854c:	str	r0, [r1]
   18550:	mov	sp, fp
   18554:	pop	{fp, pc}
   18558:	push	{fp, lr}
   1855c:	mov	fp, sp
   18560:	sub	sp, sp, #64	; 0x40
   18564:	str	r0, [fp, #-4]
   18568:	str	r1, [fp, #-8]
   1856c:	str	r2, [fp, #-12]
   18570:	str	r3, [fp, #-16]
   18574:	ldr	r1, [fp, #-8]
   18578:	mov	r0, sp
   1857c:	bl	18508 <__assert_fail@plt+0x6db4>
   18580:	ldr	r0, [fp, #-4]
   18584:	ldr	r1, [fp, #-12]
   18588:	ldr	r2, [fp, #-16]
   1858c:	mov	r3, sp
   18590:	bl	18170 <__assert_fail@plt+0x6a1c>
   18594:	mov	sp, fp
   18598:	pop	{fp, pc}
   1859c:	push	{fp, lr}
   185a0:	mov	fp, sp
   185a4:	sub	sp, sp, #8
   185a8:	str	r0, [sp, #4]
   185ac:	str	r1, [sp]
   185b0:	ldr	r1, [sp, #4]
   185b4:	ldr	r2, [sp]
   185b8:	movw	r0, #0
   185bc:	bl	184c8 <__assert_fail@plt+0x6d74>
   185c0:	mov	sp, fp
   185c4:	pop	{fp, pc}
   185c8:	push	{fp, lr}
   185cc:	mov	fp, sp
   185d0:	sub	sp, sp, #16
   185d4:	str	r0, [fp, #-4]
   185d8:	str	r1, [sp, #8]
   185dc:	str	r2, [sp, #4]
   185e0:	ldr	r1, [fp, #-4]
   185e4:	ldr	r2, [sp, #8]
   185e8:	ldr	r3, [sp, #4]
   185ec:	movw	r0, #0
   185f0:	bl	18558 <__assert_fail@plt+0x6e04>
   185f4:	mov	sp, fp
   185f8:	pop	{fp, pc}
   185fc:	push	{fp, lr}
   18600:	mov	fp, sp
   18604:	sub	sp, sp, #72	; 0x48
   18608:	movw	r3, #58048	; 0xe2c0
   1860c:	movt	r3, #4
   18610:	str	r0, [fp, #-4]
   18614:	str	r1, [fp, #-8]
   18618:	strb	r2, [fp, #-9]
   1861c:	add	r0, sp, #12
   18620:	mov	r1, r0
   18624:	str	r0, [sp, #8]
   18628:	mov	r0, r1
   1862c:	mov	r1, r3
   18630:	movw	r2, #48	; 0x30
   18634:	bl	11478 <memcpy@plt>
   18638:	ldr	r0, [sp, #8]
   1863c:	ldrb	r1, [fp, #-9]
   18640:	movw	r2, #1
   18644:	bl	1650c <__assert_fail@plt+0x4db8>
   18648:	ldr	r1, [fp, #-4]
   1864c:	ldr	r2, [fp, #-8]
   18650:	movw	r3, #0
   18654:	str	r0, [sp, #4]
   18658:	mov	r0, r3
   1865c:	add	r3, sp, #12
   18660:	bl	18170 <__assert_fail@plt+0x6a1c>
   18664:	mov	sp, fp
   18668:	pop	{fp, pc}
   1866c:	push	{fp, lr}
   18670:	mov	fp, sp
   18674:	sub	sp, sp, #8
   18678:	str	r0, [sp, #4]
   1867c:	strb	r1, [sp, #3]
   18680:	ldr	r0, [sp, #4]
   18684:	mvn	r1, #0
   18688:	ldrb	r2, [sp, #3]
   1868c:	bl	185fc <__assert_fail@plt+0x6ea8>
   18690:	mov	sp, fp
   18694:	pop	{fp, pc}
   18698:	push	{fp, lr}
   1869c:	mov	fp, sp
   186a0:	sub	sp, sp, #8
   186a4:	str	r0, [sp, #4]
   186a8:	ldr	r0, [sp, #4]
   186ac:	movw	r1, #58	; 0x3a
   186b0:	and	r1, r1, #255	; 0xff
   186b4:	bl	1866c <__assert_fail@plt+0x6f18>
   186b8:	mov	sp, fp
   186bc:	pop	{fp, pc}
   186c0:	push	{fp, lr}
   186c4:	mov	fp, sp
   186c8:	sub	sp, sp, #8
   186cc:	str	r0, [sp, #4]
   186d0:	str	r1, [sp]
   186d4:	ldr	r0, [sp, #4]
   186d8:	ldr	r1, [sp]
   186dc:	movw	r2, #58	; 0x3a
   186e0:	and	r2, r2, #255	; 0xff
   186e4:	bl	185fc <__assert_fail@plt+0x6ea8>
   186e8:	mov	sp, fp
   186ec:	pop	{fp, pc}
   186f0:	push	{fp, lr}
   186f4:	mov	fp, sp
   186f8:	sub	sp, sp, #120	; 0x78
   186fc:	str	r0, [fp, #-4]
   18700:	str	r1, [fp, #-8]
   18704:	str	r2, [fp, #-12]
   18708:	ldr	r1, [fp, #-8]
   1870c:	add	r0, sp, #12
   18710:	bl	18508 <__assert_fail@plt+0x6db4>
   18714:	add	r0, sp, #60	; 0x3c
   18718:	mov	r1, r0
   1871c:	add	r2, sp, #12
   18720:	str	r0, [sp, #8]
   18724:	mov	r0, r1
   18728:	mov	r1, r2
   1872c:	movw	r2, #48	; 0x30
   18730:	bl	11478 <memcpy@plt>
   18734:	ldr	r0, [sp, #8]
   18738:	movw	r1, #58	; 0x3a
   1873c:	and	r1, r1, #255	; 0xff
   18740:	movw	r2, #1
   18744:	bl	1650c <__assert_fail@plt+0x4db8>
   18748:	ldr	r1, [fp, #-4]
   1874c:	ldr	r2, [fp, #-12]
   18750:	str	r0, [sp, #4]
   18754:	mov	r0, r1
   18758:	mov	r1, r2
   1875c:	mvn	r2, #0
   18760:	add	r3, sp, #60	; 0x3c
   18764:	bl	18170 <__assert_fail@plt+0x6a1c>
   18768:	mov	sp, fp
   1876c:	pop	{fp, pc}
   18770:	push	{fp, lr}
   18774:	mov	fp, sp
   18778:	sub	sp, sp, #24
   1877c:	str	r0, [fp, #-4]
   18780:	str	r1, [fp, #-8]
   18784:	str	r2, [sp, #12]
   18788:	str	r3, [sp, #8]
   1878c:	ldr	r0, [fp, #-4]
   18790:	ldr	r1, [fp, #-8]
   18794:	ldr	r2, [sp, #12]
   18798:	ldr	r3, [sp, #8]
   1879c:	mvn	ip, #0
   187a0:	str	ip, [sp]
   187a4:	bl	187b0 <__assert_fail@plt+0x705c>
   187a8:	mov	sp, fp
   187ac:	pop	{fp, pc}
   187b0:	push	{fp, lr}
   187b4:	mov	fp, sp
   187b8:	sub	sp, sp, #72	; 0x48
   187bc:	ldr	ip, [fp, #8]
   187c0:	movw	lr, #58048	; 0xe2c0
   187c4:	movt	lr, #4
   187c8:	str	r0, [fp, #-4]
   187cc:	str	r1, [fp, #-8]
   187d0:	str	r2, [fp, #-12]
   187d4:	str	r3, [fp, #-16]
   187d8:	add	r0, sp, #8
   187dc:	mov	r1, r0
   187e0:	str	r0, [sp, #4]
   187e4:	mov	r0, r1
   187e8:	mov	r1, lr
   187ec:	movw	r2, #48	; 0x30
   187f0:	str	ip, [sp]
   187f4:	bl	11478 <memcpy@plt>
   187f8:	ldr	r1, [fp, #-8]
   187fc:	ldr	r2, [fp, #-12]
   18800:	ldr	r0, [sp, #4]
   18804:	bl	1660c <__assert_fail@plt+0x4eb8>
   18808:	ldr	r0, [fp, #-4]
   1880c:	ldr	r1, [fp, #-16]
   18810:	ldr	r2, [fp, #8]
   18814:	add	r3, sp, #8
   18818:	bl	18170 <__assert_fail@plt+0x6a1c>
   1881c:	mov	sp, fp
   18820:	pop	{fp, pc}
   18824:	push	{fp, lr}
   18828:	mov	fp, sp
   1882c:	sub	sp, sp, #16
   18830:	str	r0, [fp, #-4]
   18834:	str	r1, [sp, #8]
   18838:	str	r2, [sp, #4]
   1883c:	ldr	r1, [fp, #-4]
   18840:	ldr	r2, [sp, #8]
   18844:	ldr	r3, [sp, #4]
   18848:	movw	r0, #0
   1884c:	bl	18770 <__assert_fail@plt+0x701c>
   18850:	mov	sp, fp
   18854:	pop	{fp, pc}
   18858:	push	{fp, lr}
   1885c:	mov	fp, sp
   18860:	sub	sp, sp, #24
   18864:	str	r0, [fp, #-4]
   18868:	str	r1, [fp, #-8]
   1886c:	str	r2, [sp, #12]
   18870:	str	r3, [sp, #8]
   18874:	ldr	r1, [fp, #-4]
   18878:	ldr	r2, [fp, #-8]
   1887c:	ldr	r3, [sp, #12]
   18880:	ldr	r0, [sp, #8]
   18884:	movw	ip, #0
   18888:	str	r0, [sp, #4]
   1888c:	mov	r0, ip
   18890:	ldr	ip, [sp, #4]
   18894:	str	ip, [sp]
   18898:	bl	187b0 <__assert_fail@plt+0x705c>
   1889c:	mov	sp, fp
   188a0:	pop	{fp, pc}
   188a4:	push	{fp, lr}
   188a8:	mov	fp, sp
   188ac:	sub	sp, sp, #16
   188b0:	str	r0, [fp, #-4]
   188b4:	str	r1, [sp, #8]
   188b8:	str	r2, [sp, #4]
   188bc:	ldr	r0, [fp, #-4]
   188c0:	ldr	r1, [sp, #8]
   188c4:	ldr	r2, [sp, #4]
   188c8:	movw	r3, #57716	; 0xe174
   188cc:	movt	r3, #4
   188d0:	bl	18170 <__assert_fail@plt+0x6a1c>
   188d4:	mov	sp, fp
   188d8:	pop	{fp, pc}
   188dc:	push	{fp, lr}
   188e0:	mov	fp, sp
   188e4:	sub	sp, sp, #8
   188e8:	str	r0, [sp, #4]
   188ec:	str	r1, [sp]
   188f0:	ldr	r1, [sp, #4]
   188f4:	ldr	r2, [sp]
   188f8:	movw	r0, #0
   188fc:	bl	188a4 <__assert_fail@plt+0x7150>
   18900:	mov	sp, fp
   18904:	pop	{fp, pc}
   18908:	push	{fp, lr}
   1890c:	mov	fp, sp
   18910:	sub	sp, sp, #8
   18914:	str	r0, [sp, #4]
   18918:	str	r1, [sp]
   1891c:	ldr	r0, [sp, #4]
   18920:	ldr	r1, [sp]
   18924:	mvn	r2, #0
   18928:	bl	188a4 <__assert_fail@plt+0x7150>
   1892c:	mov	sp, fp
   18930:	pop	{fp, pc}
   18934:	push	{fp, lr}
   18938:	mov	fp, sp
   1893c:	sub	sp, sp, #8
   18940:	str	r0, [sp, #4]
   18944:	ldr	r1, [sp, #4]
   18948:	movw	r0, #0
   1894c:	bl	18908 <__assert_fail@plt+0x71b4>
   18950:	mov	sp, fp
   18954:	pop	{fp, pc}
   18958:	push	{fp, lr}
   1895c:	mov	fp, sp
   18960:	sub	sp, sp, #24
   18964:	str	r0, [fp, #-8]
   18968:	str	r1, [sp, #12]
   1896c:	ldr	r0, [fp, #-8]
   18970:	bl	115f8 <gettext@plt>
   18974:	str	r0, [sp, #8]
   18978:	ldr	r0, [sp, #8]
   1897c:	ldr	r1, [fp, #-8]
   18980:	cmp	r0, r1
   18984:	beq	18994 <__assert_fail@plt+0x7240>
   18988:	ldr	r0, [sp, #8]
   1898c:	str	r0, [fp, #-4]
   18990:	b	18a60 <__assert_fail@plt+0x730c>
   18994:	bl	3a754 <__assert_fail@plt+0x29000>
   18998:	str	r0, [sp, #4]
   1899c:	ldr	r0, [sp, #4]
   189a0:	movw	r1, #54158	; 0xd38e
   189a4:	movt	r1, #3
   189a8:	bl	38b90 <__assert_fail@plt+0x2743c>
   189ac:	cmp	r0, #0
   189b0:	bne	189e8 <__assert_fail@plt+0x7294>
   189b4:	ldr	r0, [fp, #-8]
   189b8:	ldrb	r0, [r0]
   189bc:	cmp	r0, #96	; 0x60
   189c0:	movw	r0, #0
   189c4:	moveq	r0, #1
   189c8:	tst	r0, #1
   189cc:	movw	r0, #54168	; 0xd398
   189d0:	movt	r0, #3
   189d4:	movw	r1, #54164	; 0xd394
   189d8:	movt	r1, #3
   189dc:	movne	r0, r1
   189e0:	str	r0, [fp, #-4]
   189e4:	b	18a60 <__assert_fail@plt+0x730c>
   189e8:	ldr	r0, [sp, #4]
   189ec:	movw	r1, #54172	; 0xd39c
   189f0:	movt	r1, #3
   189f4:	bl	38b90 <__assert_fail@plt+0x2743c>
   189f8:	cmp	r0, #0
   189fc:	bne	18a34 <__assert_fail@plt+0x72e0>
   18a00:	ldr	r0, [fp, #-8]
   18a04:	ldrb	r0, [r0]
   18a08:	cmp	r0, #96	; 0x60
   18a0c:	movw	r0, #0
   18a10:	moveq	r0, #1
   18a14:	tst	r0, #1
   18a18:	movw	r0, #54184	; 0xd3a8
   18a1c:	movt	r0, #3
   18a20:	movw	r1, #54180	; 0xd3a4
   18a24:	movt	r1, #3
   18a28:	movne	r0, r1
   18a2c:	str	r0, [fp, #-4]
   18a30:	b	18a60 <__assert_fail@plt+0x730c>
   18a34:	ldr	r0, [sp, #12]
   18a38:	cmp	r0, #9
   18a3c:	movw	r0, #0
   18a40:	moveq	r0, #1
   18a44:	tst	r0, #1
   18a48:	movw	r0, #53130	; 0xcf8a
   18a4c:	movt	r0, #3
   18a50:	movw	r1, #54154	; 0xd38a
   18a54:	movt	r1, #3
   18a58:	movne	r0, r1
   18a5c:	str	r0, [fp, #-4]
   18a60:	ldr	r0, [fp, #-4]
   18a64:	mov	sp, fp
   18a68:	pop	{fp, pc}
   18a6c:	push	{fp, lr}
   18a70:	mov	fp, sp
   18a74:	sub	sp, sp, #24
   18a78:	str	r0, [fp, #-8]
   18a7c:	str	r1, [sp, #12]
   18a80:	str	r2, [sp, #8]
   18a84:	movw	r0, #58356	; 0xe3f4
   18a88:	movt	r0, #4
   18a8c:	ldr	r0, [r0]
   18a90:	and	r0, r0, #33554432	; 0x2000000
   18a94:	ldr	r1, [sp, #8]
   18a98:	ldrb	r2, [r1, #28]
   18a9c:	and	r2, r2, #239	; 0xef
   18aa0:	orr	r0, r2, r0, lsr #21
   18aa4:	strb	r0, [r1, #28]
   18aa8:	ldr	r0, [sp, #8]
   18aac:	ldrb	r1, [r0, #28]
   18ab0:	and	r1, r1, #127	; 0x7f
   18ab4:	movw	r2, #128	; 0x80
   18ab8:	orr	r1, r1, r2
   18abc:	strb	r1, [r0, #28]
   18ac0:	ldr	r0, [sp, #8]
   18ac4:	ldr	r1, [fp, #-8]
   18ac8:	ldr	r2, [sp, #12]
   18acc:	movw	r3, #58356	; 0xe3f4
   18ad0:	movt	r3, #4
   18ad4:	ldr	r3, [r3]
   18ad8:	bl	18b2c <__assert_fail@plt+0x73d8>
   18adc:	str	r0, [sp, #4]
   18ae0:	ldr	r0, [sp, #4]
   18ae4:	cmp	r0, #0
   18ae8:	bne	18af8 <__assert_fail@plt+0x73a4>
   18aec:	movw	r0, #0
   18af0:	str	r0, [fp, #-4]
   18af4:	b	18b20 <__assert_fail@plt+0x73cc>
   18af8:	ldr	r0, [sp, #4]
   18afc:	movw	r1, #54656	; 0xd580
   18b00:	movt	r1, #3
   18b04:	add	r0, r1, r0, lsl #2
   18b08:	ldr	r0, [r0]
   18b0c:	movw	r1, #54272	; 0xd400
   18b10:	movt	r1, #3
   18b14:	add	r0, r1, r0
   18b18:	bl	115f8 <gettext@plt>
   18b1c:	str	r0, [fp, #-4]
   18b20:	ldr	r0, [fp, #-4]
   18b24:	mov	sp, fp
   18b28:	pop	{fp, pc}
   18b2c:	push	{r4, sl, fp, lr}
   18b30:	add	fp, sp, #8
   18b34:	sub	sp, sp, #144	; 0x90
   18b38:	str	r0, [fp, #-16]
   18b3c:	str	r1, [fp, #-20]	; 0xffffffec
   18b40:	str	r2, [fp, #-24]	; 0xffffffe8
   18b44:	str	r3, [fp, #-28]	; 0xffffffe4
   18b48:	mov	r0, #0
   18b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   18b50:	ldr	r1, [fp, #-16]
   18b54:	ldrb	r2, [r1, #28]
   18b58:	and	r2, r2, #247	; 0xf7
   18b5c:	strb	r2, [r1, #28]
   18b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18b64:	ldr	r2, [fp, #-16]
   18b68:	str	r1, [r2, #12]
   18b6c:	ldr	r1, [fp, #-16]
   18b70:	ldrb	r2, [r1, #28]
   18b74:	and	r2, r2, #191	; 0xbf
   18b78:	strb	r2, [r1, #28]
   18b7c:	ldr	r1, [fp, #-16]
   18b80:	ldrb	r2, [r1, #28]
   18b84:	and	r2, r2, #223	; 0xdf
   18b88:	strb	r2, [r1, #28]
   18b8c:	ldr	r1, [fp, #-16]
   18b90:	str	r0, [r1, #8]
   18b94:	ldr	r1, [fp, #-16]
   18b98:	str	r0, [r1, #24]
   18b9c:	ldr	r0, [fp, #-16]
   18ba0:	ldrb	r1, [r0, #28]
   18ba4:	and	r1, r1, #254	; 0xfe
   18ba8:	strb	r1, [r0, #28]
   18bac:	ldr	r0, [fp, #-16]
   18bb0:	ldrb	r1, [r0, #28]
   18bb4:	bic	r1, r1, #6
   18bb8:	strb	r1, [r0, #28]
   18bbc:	ldr	r0, [fp, #-16]
   18bc0:	ldr	r0, [r0]
   18bc4:	str	r0, [fp, #-36]	; 0xffffffdc
   18bc8:	ldr	r0, [fp, #-16]
   18bcc:	ldr	r0, [r0, #4]
   18bd0:	cmp	r0, #160	; 0xa0
   18bd4:	bcs	18c20 <__assert_fail@plt+0x74cc>
   18bd8:	ldr	r0, [fp, #-16]
   18bdc:	ldr	r0, [r0]
   18be0:	movw	r1, #160	; 0xa0
   18be4:	bl	38aec <__assert_fail@plt+0x27398>
   18be8:	str	r0, [fp, #-36]	; 0xffffffdc
   18bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18bf0:	movw	r1, #0
   18bf4:	cmp	r0, r1
   18bf8:	bne	18c08 <__assert_fail@plt+0x74b4>
   18bfc:	movw	r0, #12
   18c00:	str	r0, [fp, #-12]
   18c04:	b	18ef8 <__assert_fail@plt+0x77a4>
   18c08:	ldr	r0, [fp, #-16]
   18c0c:	movw	r1, #160	; 0xa0
   18c10:	str	r1, [r0, #4]
   18c14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c18:	ldr	r1, [fp, #-16]
   18c1c:	str	r0, [r1]
   18c20:	ldr	r0, [fp, #-16]
   18c24:	movw	r1, #160	; 0xa0
   18c28:	str	r1, [r0, #8]
   18c2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c34:	bl	1b930 <__assert_fail@plt+0xa1dc>
   18c38:	str	r0, [fp, #-32]	; 0xffffffe0
   18c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c40:	cmp	r0, #0
   18c44:	movw	r0, #0
   18c48:	str	r0, [sp, #28]
   18c4c:	bne	18cb0 <__assert_fail@plt+0x755c>
   18c50:	movw	r0, #0
   18c54:	movt	r0, #0
   18c58:	cmp	r0, #0
   18c5c:	bne	18c78 <__assert_fail@plt+0x7524>
   18c60:	b	18c64 <__assert_fail@plt+0x7510>
   18c64:	movw	r0, #0
   18c68:	movt	r0, #0
   18c6c:	cmp	r0, #0
   18c70:	beq	18c90 <__assert_fail@plt+0x753c>
   18c74:	b	18c78 <__assert_fail@plt+0x7524>
   18c78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c7c:	add	r0, r0, #136	; 0x88
   18c80:	movw	r1, #0
   18c84:	bl	11490 <pthread_mutex_init@plt>
   18c88:	str	r0, [sp, #24]
   18c8c:	b	18c9c <__assert_fail@plt+0x7548>
   18c90:	movw	r0, #0
   18c94:	str	r0, [sp, #24]
   18c98:	b	18c9c <__assert_fail@plt+0x7548>
   18c9c:	ldr	r0, [sp, #24]
   18ca0:	cmp	r0, #0
   18ca4:	movw	r0, #0
   18ca8:	movne	r0, #1
   18cac:	str	r0, [sp, #28]
   18cb0:	ldr	r0, [sp, #28]
   18cb4:	tst	r0, #1
   18cb8:	beq	18cc4 <__assert_fail@plt+0x7570>
   18cbc:	movw	r0, #12
   18cc0:	str	r0, [fp, #-32]	; 0xffffffe0
   18cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cc8:	cmp	r0, #0
   18ccc:	beq	18cf8 <__assert_fail@plt+0x75a4>
   18cd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18cd4:	bl	19b40 <__assert_fail@plt+0x83ec>
   18cd8:	ldr	r0, [fp, #-16]
   18cdc:	movw	lr, #0
   18ce0:	str	lr, [r0]
   18ce4:	ldr	r0, [fp, #-16]
   18ce8:	str	lr, [r0, #4]
   18cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cf0:	str	r0, [fp, #-12]
   18cf4:	b	18ef8 <__assert_fail@plt+0x77a4>
   18cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d00:	ldr	r0, [fp, #-16]
   18d04:	ldr	r3, [r0, #20]
   18d08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d0c:	and	r0, r0, #4194304	; 0x400000
   18d10:	cmp	r0, #0
   18d14:	movw	r0, #0
   18d18:	movne	r0, #1
   18d1c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   18d20:	add	lr, sp, #32
   18d24:	str	r0, [sp, #20]
   18d28:	mov	r0, lr
   18d2c:	ldr	lr, [sp, #20]
   18d30:	and	r4, lr, #1
   18d34:	str	r4, [sp]
   18d38:	str	ip, [sp, #4]
   18d3c:	bl	1bf3c <__assert_fail@plt+0xa7e8>
   18d40:	str	r0, [fp, #-32]	; 0xffffffe0
   18d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d48:	cmp	r0, #0
   18d4c:	beq	18dcc <__assert_fail@plt+0x7678>
   18d50:	b	18d54 <__assert_fail@plt+0x7600>
   18d54:	ldr	r0, [fp, #-16]
   18d58:	bl	1c150 <__assert_fail@plt+0xa9fc>
   18d5c:	add	r0, sp, #32
   18d60:	bl	1c1e8 <__assert_fail@plt+0xaa94>
   18d64:	movw	r0, #0
   18d68:	movt	r0, #0
   18d6c:	cmp	r0, #0
   18d70:	bne	18d8c <__assert_fail@plt+0x7638>
   18d74:	b	18d78 <__assert_fail@plt+0x7624>
   18d78:	movw	r0, #0
   18d7c:	movt	r0, #0
   18d80:	cmp	r0, #0
   18d84:	beq	18da0 <__assert_fail@plt+0x764c>
   18d88:	b	18d8c <__assert_fail@plt+0x7638>
   18d8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d90:	add	r0, r0, #136	; 0x88
   18d94:	bl	11424 <pthread_mutex_destroy@plt>
   18d98:	str	r0, [sp, #16]
   18d9c:	b	18da4 <__assert_fail@plt+0x7650>
   18da0:	b	18da4 <__assert_fail@plt+0x7650>
   18da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18da8:	bl	19b40 <__assert_fail@plt+0x83ec>
   18dac:	ldr	r0, [fp, #-16]
   18db0:	movw	lr, #0
   18db4:	str	lr, [r0]
   18db8:	ldr	r0, [fp, #-16]
   18dbc:	str	lr, [r0, #4]
   18dc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dc4:	str	r0, [fp, #-12]
   18dc8:	b	18ef8 <__assert_fail@plt+0x77a4>
   18dcc:	ldr	r0, [fp, #-16]
   18dd0:	movw	r1, #0
   18dd4:	str	r1, [r0, #24]
   18dd8:	ldr	r1, [fp, #-16]
   18ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18de0:	add	r0, sp, #32
   18de4:	sub	r3, fp, #32
   18de8:	bl	1c234 <__assert_fail@plt+0xaae0>
   18dec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18df0:	str	r0, [r1, #52]	; 0x34
   18df4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18df8:	ldr	r0, [r0, #52]	; 0x34
   18dfc:	movw	r1, #0
   18e00:	cmp	r0, r1
   18e04:	bne	18e0c <__assert_fail@plt+0x76b8>
   18e08:	b	18d54 <__assert_fail@plt+0x7600>
   18e0c:	ldr	r0, [fp, #-16]
   18e10:	bl	1c3b0 <__assert_fail@plt+0xac5c>
   18e14:	str	r0, [fp, #-32]	; 0xffffffe0
   18e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e1c:	cmp	r0, #0
   18e20:	beq	18e28 <__assert_fail@plt+0x76d4>
   18e24:	b	18d54 <__assert_fail@plt+0x7600>
   18e28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18e2c:	ldrb	r0, [r0, #88]	; 0x58
   18e30:	ubfx	r0, r0, #2, #1
   18e34:	and	r0, r0, #255	; 0xff
   18e38:	cmp	r0, #0
   18e3c:	beq	18e6c <__assert_fail@plt+0x7718>
   18e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e44:	and	r0, r0, #4194304	; 0x400000
   18e48:	cmp	r0, #0
   18e4c:	bne	18e6c <__assert_fail@plt+0x7718>
   18e50:	ldr	r0, [fp, #-16]
   18e54:	ldr	r0, [r0, #20]
   18e58:	movw	r1, #0
   18e5c:	cmp	r0, r1
   18e60:	bne	18e6c <__assert_fail@plt+0x7718>
   18e64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18e68:	bl	1c788 <__assert_fail@plt+0xb034>
   18e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18e70:	bl	1ca94 <__assert_fail@plt+0xb340>
   18e74:	str	r0, [fp, #-32]	; 0xffffffe0
   18e78:	ldr	r0, [fp, #-16]
   18e7c:	bl	1c150 <__assert_fail@plt+0xa9fc>
   18e80:	add	r0, sp, #32
   18e84:	bl	1c1e8 <__assert_fail@plt+0xaa94>
   18e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e8c:	cmp	r0, #0
   18e90:	beq	18ef0 <__assert_fail@plt+0x779c>
   18e94:	movw	r0, #0
   18e98:	movt	r0, #0
   18e9c:	cmp	r0, #0
   18ea0:	bne	18ebc <__assert_fail@plt+0x7768>
   18ea4:	b	18ea8 <__assert_fail@plt+0x7754>
   18ea8:	movw	r0, #0
   18eac:	movt	r0, #0
   18eb0:	cmp	r0, #0
   18eb4:	beq	18ed0 <__assert_fail@plt+0x777c>
   18eb8:	b	18ebc <__assert_fail@plt+0x7768>
   18ebc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ec0:	add	r0, r0, #136	; 0x88
   18ec4:	bl	11424 <pthread_mutex_destroy@plt>
   18ec8:	str	r0, [sp, #12]
   18ecc:	b	18ed4 <__assert_fail@plt+0x7780>
   18ed0:	b	18ed4 <__assert_fail@plt+0x7780>
   18ed4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ed8:	bl	19b40 <__assert_fail@plt+0x83ec>
   18edc:	ldr	r0, [fp, #-16]
   18ee0:	movw	lr, #0
   18ee4:	str	lr, [r0]
   18ee8:	ldr	r0, [fp, #-16]
   18eec:	str	lr, [r0, #4]
   18ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ef4:	str	r0, [fp, #-12]
   18ef8:	ldr	r0, [fp, #-12]
   18efc:	sub	sp, fp, #8
   18f00:	pop	{r4, sl, fp, pc}
   18f04:	sub	sp, sp, #8
   18f08:	str	r0, [sp, #4]
   18f0c:	movw	r0, #58356	; 0xe3f4
   18f10:	movt	r0, #4
   18f14:	ldr	r1, [r0]
   18f18:	str	r1, [sp]
   18f1c:	ldr	r1, [sp, #4]
   18f20:	str	r1, [r0]
   18f24:	ldr	r0, [sp]
   18f28:	add	sp, sp, #8
   18f2c:	bx	lr
   18f30:	push	{fp, lr}
   18f34:	mov	fp, sp
   18f38:	sub	sp, sp, #16
   18f3c:	str	r0, [fp, #-4]
   18f40:	ldr	r0, [fp, #-4]
   18f44:	ldr	r0, [r0]
   18f48:	str	r0, [sp, #8]
   18f4c:	ldr	r0, [fp, #-4]
   18f50:	ldr	r0, [r0, #16]
   18f54:	str	r0, [sp, #4]
   18f58:	ldr	r0, [sp, #4]
   18f5c:	movw	r1, #0
   18f60:	and	r1, r1, #255	; 0xff
   18f64:	movw	r2, #256	; 0x100
   18f68:	bl	11658 <memset@plt>
   18f6c:	ldr	r0, [fp, #-4]
   18f70:	ldr	r1, [sp, #8]
   18f74:	ldr	r1, [r1, #36]	; 0x24
   18f78:	ldr	r2, [sp, #4]
   18f7c:	bl	19028 <__assert_fail@plt+0x78d4>
   18f80:	ldr	r0, [sp, #8]
   18f84:	ldr	r0, [r0, #36]	; 0x24
   18f88:	ldr	r1, [sp, #8]
   18f8c:	ldr	r1, [r1, #40]	; 0x28
   18f90:	cmp	r0, r1
   18f94:	beq	18fac <__assert_fail@plt+0x7858>
   18f98:	ldr	r0, [fp, #-4]
   18f9c:	ldr	r1, [sp, #8]
   18fa0:	ldr	r1, [r1, #40]	; 0x28
   18fa4:	ldr	r2, [sp, #4]
   18fa8:	bl	19028 <__assert_fail@plt+0x78d4>
   18fac:	ldr	r0, [sp, #8]
   18fb0:	ldr	r0, [r0, #36]	; 0x24
   18fb4:	ldr	r1, [sp, #8]
   18fb8:	ldr	r1, [r1, #44]	; 0x2c
   18fbc:	cmp	r0, r1
   18fc0:	beq	18fd8 <__assert_fail@plt+0x7884>
   18fc4:	ldr	r0, [fp, #-4]
   18fc8:	ldr	r1, [sp, #8]
   18fcc:	ldr	r1, [r1, #44]	; 0x2c
   18fd0:	ldr	r2, [sp, #4]
   18fd4:	bl	19028 <__assert_fail@plt+0x78d4>
   18fd8:	ldr	r0, [sp, #8]
   18fdc:	ldr	r0, [r0, #36]	; 0x24
   18fe0:	ldr	r1, [sp, #8]
   18fe4:	ldr	r1, [r1, #48]	; 0x30
   18fe8:	cmp	r0, r1
   18fec:	beq	19004 <__assert_fail@plt+0x78b0>
   18ff0:	ldr	r0, [fp, #-4]
   18ff4:	ldr	r1, [sp, #8]
   18ff8:	ldr	r1, [r1, #48]	; 0x30
   18ffc:	ldr	r2, [sp, #4]
   19000:	bl	19028 <__assert_fail@plt+0x78d4>
   19004:	ldr	r0, [fp, #-4]
   19008:	ldrb	r1, [r0, #28]
   1900c:	bic	r1, r1, #8
   19010:	movw	r2, #8
   19014:	orr	r1, r1, r2
   19018:	strb	r1, [r0, #28]
   1901c:	movw	r0, #0
   19020:	mov	sp, fp
   19024:	pop	{fp, pc}
   19028:	push	{r4, r5, fp, lr}
   1902c:	add	fp, sp, #8
   19030:	sub	sp, sp, #504	; 0x1f8
   19034:	str	r0, [fp, #-84]	; 0xffffffac
   19038:	str	r1, [fp, #-88]	; 0xffffffa8
   1903c:	str	r2, [fp, #-92]	; 0xffffffa4
   19040:	ldr	r0, [fp, #-84]	; 0xffffffac
   19044:	ldr	r0, [r0]
   19048:	str	r0, [fp, #-96]	; 0xffffffa0
   1904c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19050:	ldr	r0, [r0, #92]	; 0x5c
   19054:	cmp	r0, #1
   19058:	movw	r0, #0
   1905c:	str	r0, [sp, #60]	; 0x3c
   19060:	bne	19080 <__assert_fail@plt+0x792c>
   19064:	ldr	r0, [fp, #-84]	; 0xffffffac
   19068:	ldr	r0, [r0, #12]
   1906c:	and	r0, r0, #4194304	; 0x400000
   19070:	cmp	r0, #0
   19074:	movw	r0, #0
   19078:	movne	r0, #1
   1907c:	str	r0, [sp, #60]	; 0x3c
   19080:	ldr	r0, [sp, #60]	; 0x3c
   19084:	and	r0, r0, #1
   19088:	strb	r0, [fp, #-101]	; 0xffffff9b
   1908c:	movw	r0, #0
   19090:	str	r0, [fp, #-100]	; 0xffffff9c
   19094:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19098:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1909c:	ldr	r1, [r1, #8]
   190a0:	cmp	r0, r1
   190a4:	bge	197a4 <__assert_fail@plt+0x8050>
   190a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   190ac:	ldr	r0, [r0, #12]
   190b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   190b4:	ldr	r0, [r0, r1, lsl #2]
   190b8:	str	r0, [fp, #-108]	; 0xffffff94
   190bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   190c0:	ldr	r0, [r0]
   190c4:	ldr	r1, [fp, #-108]	; 0xffffff94
   190c8:	add	r0, r0, r1, lsl #3
   190cc:	ldr	r0, [r0, #4]
   190d0:	and	r0, r0, #255	; 0xff
   190d4:	str	r0, [fp, #-112]	; 0xffffff90
   190d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   190dc:	cmp	r0, #1
   190e0:	bne	19344 <__assert_fail@plt+0x7bf0>
   190e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   190e8:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   190ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   190f0:	ldr	r2, [r2]
   190f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   190f8:	add	r2, r2, r3, lsl #3
   190fc:	ldrb	r2, [r2]
   19100:	str	r0, [fp, #-72]	; 0xffffffb8
   19104:	and	r0, r1, #1
   19108:	strb	r0, [fp, #-73]	; 0xffffffb7
   1910c:	str	r2, [fp, #-80]	; 0xffffffb0
   19110:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19114:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19118:	add	r0, r0, r1
   1911c:	movw	r1, #1
   19120:	strb	r1, [r0]
   19124:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   19128:	tst	r0, #1
   1912c:	beq	19154 <__assert_fail@plt+0x7a00>
   19130:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19134:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19138:	str	r0, [sp, #56]	; 0x38
   1913c:	mov	r0, r1
   19140:	bl	11484 <tolower@plt>
   19144:	ldr	r1, [sp, #56]	; 0x38
   19148:	add	r0, r1, r0
   1914c:	movw	r1, #1
   19150:	strb	r1, [r0]
   19154:	ldr	r0, [fp, #-84]	; 0xffffffac
   19158:	ldr	r0, [r0, #12]
   1915c:	and	r0, r0, #4194304	; 0x400000
   19160:	cmp	r0, #0
   19164:	beq	19340 <__assert_fail@plt+0x7bec>
   19168:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1916c:	ldr	r0, [r0, #92]	; 0x5c
   19170:	cmp	r0, #1
   19174:	ble	19340 <__assert_fail@plt+0x7bec>
   19178:	sub	r0, fp, #128	; 0x80
   1917c:	str	r0, [fp, #-132]	; 0xffffff7c
   19180:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19184:	ldr	r0, [r0]
   19188:	ldr	r1, [fp, #-108]	; 0xffffff94
   1918c:	add	r0, r0, r1, lsl #3
   19190:	ldrb	r0, [r0]
   19194:	ldr	r1, [fp, #-132]	; 0xffffff7c
   19198:	add	r2, r1, #1
   1919c:	str	r2, [fp, #-132]	; 0xffffff7c
   191a0:	strb	r0, [r1]
   191a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   191a8:	add	r0, r0, #1
   191ac:	str	r0, [fp, #-108]	; 0xffffff94
   191b0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   191b4:	ldr	r1, [r1, #8]
   191b8:	cmp	r0, r1
   191bc:	movw	r0, #0
   191c0:	str	r0, [sp, #52]	; 0x34
   191c4:	bcs	1921c <__assert_fail@plt+0x7ac8>
   191c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   191cc:	ldr	r0, [r0]
   191d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   191d4:	add	r0, r0, r1, lsl #3
   191d8:	ldr	r0, [r0, #4]
   191dc:	and	r0, r0, #255	; 0xff
   191e0:	cmp	r0, #1
   191e4:	movw	r0, #0
   191e8:	str	r0, [sp, #52]	; 0x34
   191ec:	bne	1921c <__assert_fail@plt+0x7ac8>
   191f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   191f4:	ldr	r0, [r0]
   191f8:	ldr	r1, [fp, #-108]	; 0xffffff94
   191fc:	add	r0, r0, r1, lsl #3
   19200:	ldr	r0, [r0, #4]
   19204:	lsr	r0, r0, #21
   19208:	and	r0, r0, #1
   1920c:	cmp	r0, #0
   19210:	movw	r0, #0
   19214:	movne	r0, #1
   19218:	str	r0, [sp, #52]	; 0x34
   1921c:	ldr	r0, [sp, #52]	; 0x34
   19220:	tst	r0, #1
   19224:	beq	19250 <__assert_fail@plt+0x7afc>
   19228:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1922c:	ldr	r0, [r0]
   19230:	ldr	r1, [fp, #-108]	; 0xffffff94
   19234:	add	r0, r0, r1, lsl #3
   19238:	ldrb	r0, [r0]
   1923c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   19240:	add	r2, r1, #1
   19244:	str	r2, [fp, #-132]	; 0xffffff7c
   19248:	strb	r0, [r1]
   1924c:	b	191a4 <__assert_fail@plt+0x7a50>
   19250:	sub	r0, fp, #128	; 0x80
   19254:	sub	r1, fp, #144	; 0x90
   19258:	mov	r2, r1
   1925c:	str	r0, [sp, #48]	; 0x30
   19260:	mov	r0, r2
   19264:	movw	r2, #0
   19268:	and	r2, r2, #255	; 0xff
   1926c:	str	r1, [sp, #44]	; 0x2c
   19270:	mov	r1, r2
   19274:	movw	r2, #8
   19278:	bl	11658 <memset@plt>
   1927c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19280:	ldr	r1, [sp, #48]	; 0x30
   19284:	sub	r2, r0, r1
   19288:	sub	r0, fp, #136	; 0x88
   1928c:	ldr	r3, [sp, #44]	; 0x2c
   19290:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   19294:	sub	r1, fp, #128	; 0x80
   19298:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1929c:	sub	r1, r2, r1
   192a0:	cmp	r0, r1
   192a4:	bne	1933c <__assert_fail@plt+0x7be8>
   192a8:	sub	r0, fp, #128	; 0x80
   192ac:	ldr	r1, [fp, #-136]	; 0xffffff78
   192b0:	str	r0, [sp, #40]	; 0x28
   192b4:	mov	r0, r1
   192b8:	bl	1149c <towlower@plt>
   192bc:	ldr	r1, [sp, #40]	; 0x28
   192c0:	str	r0, [sp, #36]	; 0x24
   192c4:	mov	r0, r1
   192c8:	ldr	r1, [sp, #36]	; 0x24
   192cc:	sub	r2, fp, #144	; 0x90
   192d0:	bl	113e8 <wcrtomb@plt>
   192d4:	cmn	r0, #1
   192d8:	beq	1933c <__assert_fail@plt+0x7be8>
   192dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   192e0:	ldrb	r1, [fp, #-128]	; 0xffffff80
   192e4:	str	r0, [fp, #-60]	; 0xffffffc4
   192e8:	movw	r0, #0
   192ec:	strb	r0, [fp, #-61]	; 0xffffffc3
   192f0:	str	r1, [fp, #-68]	; 0xffffffbc
   192f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   192f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   192fc:	add	r0, r0, r1
   19300:	movw	r1, #1
   19304:	strb	r1, [r0]
   19308:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1930c:	tst	r0, #1
   19310:	beq	19338 <__assert_fail@plt+0x7be4>
   19314:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19318:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1931c:	str	r0, [sp, #32]
   19320:	mov	r0, r1
   19324:	bl	11484 <tolower@plt>
   19328:	ldr	r1, [sp, #32]
   1932c:	add	r0, r1, r0
   19330:	movw	r1, #1
   19334:	strb	r1, [r0]
   19338:	b	1933c <__assert_fail@plt+0x7be8>
   1933c:	b	19340 <__assert_fail@plt+0x7bec>
   19340:	b	19790 <__assert_fail@plt+0x803c>
   19344:	ldr	r0, [fp, #-112]	; 0xffffff90
   19348:	cmp	r0, #3
   1934c:	bne	19454 <__assert_fail@plt+0x7d00>
   19350:	movw	r0, #0
   19354:	str	r0, [fp, #-148]	; 0xffffff6c
   19358:	str	r0, [fp, #-152]	; 0xffffff68
   1935c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19360:	cmp	r0, #8
   19364:	bge	19450 <__assert_fail@plt+0x7cfc>
   19368:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1936c:	ldr	r0, [r0]
   19370:	ldr	r1, [fp, #-108]	; 0xffffff94
   19374:	ldr	r0, [r0, r1, lsl #3]
   19378:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1937c:	add	r0, r0, r1, lsl #2
   19380:	ldr	r0, [r0]
   19384:	str	r0, [fp, #-160]	; 0xffffff60
   19388:	movw	r0, #0
   1938c:	str	r0, [fp, #-156]	; 0xffffff64
   19390:	ldr	r0, [fp, #-156]	; 0xffffff64
   19394:	cmp	r0, #32
   19398:	bge	1943c <__assert_fail@plt+0x7ce8>
   1939c:	ldr	r0, [fp, #-160]	; 0xffffff60
   193a0:	ldr	r1, [fp, #-156]	; 0xffffff64
   193a4:	movw	r2, #1
   193a8:	lsl	r1, r2, r1
   193ac:	and	r0, r0, r1
   193b0:	cmp	r0, #0
   193b4:	beq	1941c <__assert_fail@plt+0x7cc8>
   193b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   193bc:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   193c0:	ldr	r2, [fp, #-152]	; 0xffffff68
   193c4:	str	r0, [fp, #-48]	; 0xffffffd0
   193c8:	and	r0, r1, #1
   193cc:	strb	r0, [fp, #-49]	; 0xffffffcf
   193d0:	str	r2, [fp, #-56]	; 0xffffffc8
   193d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   193d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   193dc:	add	r0, r0, r1
   193e0:	movw	r1, #1
   193e4:	strb	r1, [r0]
   193e8:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   193ec:	tst	r0, #1
   193f0:	beq	19418 <__assert_fail@plt+0x7cc4>
   193f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   193f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   193fc:	str	r0, [sp, #28]
   19400:	mov	r0, r1
   19404:	bl	11484 <tolower@plt>
   19408:	ldr	r1, [sp, #28]
   1940c:	add	r0, r1, r0
   19410:	movw	r1, #1
   19414:	strb	r1, [r0]
   19418:	b	1941c <__assert_fail@plt+0x7cc8>
   1941c:	b	19420 <__assert_fail@plt+0x7ccc>
   19420:	ldr	r0, [fp, #-156]	; 0xffffff64
   19424:	add	r0, r0, #1
   19428:	str	r0, [fp, #-156]	; 0xffffff64
   1942c:	ldr	r0, [fp, #-152]	; 0xffffff68
   19430:	add	r0, r0, #1
   19434:	str	r0, [fp, #-152]	; 0xffffff68
   19438:	b	19390 <__assert_fail@plt+0x7c3c>
   1943c:	b	19440 <__assert_fail@plt+0x7cec>
   19440:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19444:	add	r0, r0, #1
   19448:	str	r0, [fp, #-148]	; 0xffffff6c
   1944c:	b	1935c <__assert_fail@plt+0x7c08>
   19450:	b	1978c <__assert_fail@plt+0x8038>
   19454:	ldr	r0, [fp, #-112]	; 0xffffff90
   19458:	cmp	r0, #6
   1945c:	bne	19724 <__assert_fail@plt+0x7fd0>
   19460:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19464:	ldr	r0, [r0]
   19468:	ldr	r1, [fp, #-108]	; 0xffffff94
   1946c:	add	r0, r0, r1, lsl #3
   19470:	ldr	r0, [r0]
   19474:	str	r0, [fp, #-164]	; 0xffffff5c
   19478:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1947c:	ldr	r0, [r0, #92]	; 0x5c
   19480:	cmp	r0, #1
   19484:	ble	19588 <__assert_fail@plt+0x7e34>
   19488:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1948c:	ldr	r0, [r0, #36]	; 0x24
   19490:	cmp	r0, #0
   19494:	bne	194c0 <__assert_fail@plt+0x7d6c>
   19498:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1949c:	ldrb	r0, [r0, #16]
   194a0:	and	r0, r0, #1
   194a4:	and	r0, r0, #255	; 0xff
   194a8:	cmp	r0, #0
   194ac:	bne	194c0 <__assert_fail@plt+0x7d6c>
   194b0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   194b4:	ldr	r0, [r0, #32]
   194b8:	cmp	r0, #0
   194bc:	beq	19588 <__assert_fail@plt+0x7e34>
   194c0:	movw	r0, #0
   194c4:	strb	r0, [fp, #-169]	; 0xffffff57
   194c8:	sub	r0, fp, #180	; 0xb4
   194cc:	mov	r1, r0
   194d0:	str	r0, [sp, #24]
   194d4:	mov	r0, r1
   194d8:	movw	r1, #0
   194dc:	and	r1, r1, #255	; 0xff
   194e0:	movw	r2, #8
   194e4:	bl	11658 <memset@plt>
   194e8:	movw	r0, #0
   194ec:	sub	r1, fp, #169	; 0xa9
   194f0:	movw	r2, #1
   194f4:	ldr	r3, [sp, #24]
   194f8:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   194fc:	cmn	r0, #2
   19500:	bne	19564 <__assert_fail@plt+0x7e10>
   19504:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19508:	ldrb	r1, [fp, #-169]	; 0xffffff57
   1950c:	str	r0, [fp, #-36]	; 0xffffffdc
   19510:	movw	r0, #0
   19514:	strb	r0, [fp, #-37]	; 0xffffffdb
   19518:	str	r1, [fp, #-44]	; 0xffffffd4
   1951c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19520:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19524:	add	r0, r0, r1
   19528:	movw	r1, #1
   1952c:	strb	r1, [r0]
   19530:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   19534:	tst	r0, #1
   19538:	beq	19560 <__assert_fail@plt+0x7e0c>
   1953c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19540:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19544:	str	r0, [sp, #20]
   19548:	mov	r0, r1
   1954c:	bl	11484 <tolower@plt>
   19550:	ldr	r1, [sp, #20]
   19554:	add	r0, r1, r0
   19558:	movw	r1, #1
   1955c:	strb	r1, [r0]
   19560:	b	19564 <__assert_fail@plt+0x7e10>
   19564:	b	19568 <__assert_fail@plt+0x7e14>
   19568:	ldrb	r0, [fp, #-169]	; 0xffffff57
   1956c:	movw	r1, #1
   19570:	add	r0, r0, r1
   19574:	strb	r0, [fp, #-169]	; 0xffffff57
   19578:	and	r0, r0, #255	; 0xff
   1957c:	cmp	r0, #0
   19580:	bne	194c8 <__assert_fail@plt+0x7d74>
   19584:	b	19720 <__assert_fail@plt+0x7fcc>
   19588:	movw	r0, #0
   1958c:	str	r0, [fp, #-168]	; 0xffffff58
   19590:	ldr	r0, [fp, #-168]	; 0xffffff58
   19594:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19598:	ldr	r1, [r1, #20]
   1959c:	cmp	r0, r1
   195a0:	bge	1971c <__assert_fail@plt+0x7fc8>
   195a4:	mov	r0, #0
   195a8:	str	r0, [sp, #68]	; 0x44
   195ac:	str	r0, [sp, #64]	; 0x40
   195b0:	add	r0, sp, #76	; 0x4c
   195b4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   195b8:	ldr	r1, [r1]
   195bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   195c0:	add	r1, r1, r2, lsl #2
   195c4:	ldr	r1, [r1]
   195c8:	add	r2, sp, #64	; 0x40
   195cc:	bl	113e8 <wcrtomb@plt>
   195d0:	cmn	r0, #1
   195d4:	beq	1963c <__assert_fail@plt+0x7ee8>
   195d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   195dc:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   195e0:	ldrb	r2, [sp, #76]	; 0x4c
   195e4:	str	r0, [fp, #-24]	; 0xffffffe8
   195e8:	and	r0, r1, #1
   195ec:	strb	r0, [fp, #-25]	; 0xffffffe7
   195f0:	str	r2, [fp, #-32]	; 0xffffffe0
   195f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   195fc:	add	r0, r0, r1
   19600:	movw	r1, #1
   19604:	strb	r1, [r0]
   19608:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1960c:	tst	r0, #1
   19610:	beq	19638 <__assert_fail@plt+0x7ee4>
   19614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19618:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1961c:	str	r0, [sp, #16]
   19620:	mov	r0, r1
   19624:	bl	11484 <tolower@plt>
   19628:	ldr	r1, [sp, #16]
   1962c:	add	r0, r1, r0
   19630:	movw	r1, #1
   19634:	strb	r1, [r0]
   19638:	b	1963c <__assert_fail@plt+0x7ee8>
   1963c:	ldr	r0, [fp, #-84]	; 0xffffffac
   19640:	ldr	r0, [r0, #12]
   19644:	and	r0, r0, #4194304	; 0x400000
   19648:	cmp	r0, #0
   1964c:	beq	19708 <__assert_fail@plt+0x7fb4>
   19650:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19654:	ldr	r0, [r0, #92]	; 0x5c
   19658:	cmp	r0, #1
   1965c:	ble	19708 <__assert_fail@plt+0x7fb4>
   19660:	add	r0, sp, #76	; 0x4c
   19664:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19668:	ldr	r1, [r1]
   1966c:	ldr	r2, [fp, #-168]	; 0xffffff58
   19670:	add	r1, r1, r2, lsl #2
   19674:	ldr	r1, [r1]
   19678:	str	r0, [sp, #12]
   1967c:	mov	r0, r1
   19680:	bl	1149c <towlower@plt>
   19684:	ldr	r1, [sp, #12]
   19688:	str	r0, [sp, #8]
   1968c:	mov	r0, r1
   19690:	ldr	r1, [sp, #8]
   19694:	add	r2, sp, #64	; 0x40
   19698:	bl	113e8 <wcrtomb@plt>
   1969c:	cmn	r0, #1
   196a0:	beq	19704 <__assert_fail@plt+0x7fb0>
   196a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   196a8:	ldrb	r1, [sp, #76]	; 0x4c
   196ac:	str	r0, [fp, #-12]
   196b0:	movw	r0, #0
   196b4:	strb	r0, [fp, #-13]
   196b8:	str	r1, [fp, #-20]	; 0xffffffec
   196bc:	ldr	r0, [fp, #-12]
   196c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   196c4:	add	r0, r0, r1
   196c8:	movw	r1, #1
   196cc:	strb	r1, [r0]
   196d0:	ldrb	r0, [fp, #-13]
   196d4:	tst	r0, #1
   196d8:	beq	19700 <__assert_fail@plt+0x7fac>
   196dc:	ldr	r0, [fp, #-12]
   196e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   196e4:	str	r0, [sp, #4]
   196e8:	mov	r0, r1
   196ec:	bl	11484 <tolower@plt>
   196f0:	ldr	r1, [sp, #4]
   196f4:	add	r0, r1, r0
   196f8:	movw	r1, #1
   196fc:	strb	r1, [r0]
   19700:	b	19704 <__assert_fail@plt+0x7fb0>
   19704:	b	19708 <__assert_fail@plt+0x7fb4>
   19708:	b	1970c <__assert_fail@plt+0x7fb8>
   1970c:	ldr	r0, [fp, #-168]	; 0xffffff58
   19710:	add	r0, r0, #1
   19714:	str	r0, [fp, #-168]	; 0xffffff58
   19718:	b	19590 <__assert_fail@plt+0x7e3c>
   1971c:	b	19720 <__assert_fail@plt+0x7fcc>
   19720:	b	19788 <__assert_fail@plt+0x8034>
   19724:	ldr	r0, [fp, #-112]	; 0xffffff90
   19728:	cmp	r0, #5
   1972c:	beq	19748 <__assert_fail@plt+0x7ff4>
   19730:	ldr	r0, [fp, #-112]	; 0xffffff90
   19734:	cmp	r0, #7
   19738:	beq	19748 <__assert_fail@plt+0x7ff4>
   1973c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19740:	cmp	r0, #2
   19744:	bne	19784 <__assert_fail@plt+0x8030>
   19748:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1974c:	movw	r1, #1
   19750:	and	r1, r1, #255	; 0xff
   19754:	movw	r2, #256	; 0x100
   19758:	bl	11658 <memset@plt>
   1975c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19760:	cmp	r0, #2
   19764:	bne	19780 <__assert_fail@plt+0x802c>
   19768:	ldr	r0, [fp, #-84]	; 0xffffffac
   1976c:	ldrb	r1, [r0, #28]
   19770:	bic	r1, r1, #1
   19774:	movw	r2, #1
   19778:	orr	r1, r1, r2
   1977c:	strb	r1, [r0, #28]
   19780:	b	197a4 <__assert_fail@plt+0x8050>
   19784:	b	19788 <__assert_fail@plt+0x8034>
   19788:	b	1978c <__assert_fail@plt+0x8038>
   1978c:	b	19790 <__assert_fail@plt+0x803c>
   19790:	b	19794 <__assert_fail@plt+0x8040>
   19794:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19798:	add	r0, r0, #1
   1979c:	str	r0, [fp, #-100]	; 0xffffff9c
   197a0:	b	19094 <__assert_fail@plt+0x7940>
   197a4:	sub	sp, fp, #8
   197a8:	pop	{r4, r5, fp, pc}
   197ac:	push	{fp, lr}
   197b0:	mov	fp, sp
   197b4:	sub	sp, sp, #40	; 0x28
   197b8:	ldr	r3, [pc, #444]	; 1997c <__assert_fail@plt+0x8228>
   197bc:	ldr	ip, [pc, #444]	; 19980 <__assert_fail@plt+0x822c>
   197c0:	str	r0, [fp, #-8]
   197c4:	str	r1, [fp, #-12]
   197c8:	str	r2, [fp, #-16]
   197cc:	ldr	r0, [fp, #-16]
   197d0:	and	r0, r0, #1
   197d4:	cmp	r0, #0
   197d8:	movw	r0, #0
   197dc:	movne	r0, #1
   197e0:	tst	r0, #1
   197e4:	movne	ip, r3
   197e8:	str	ip, [sp, #16]
   197ec:	ldr	r0, [fp, #-8]
   197f0:	movw	r1, #0
   197f4:	str	r1, [r0]
   197f8:	ldr	r0, [fp, #-8]
   197fc:	str	r1, [r0, #4]
   19800:	ldr	r0, [fp, #-8]
   19804:	str	r1, [r0, #8]
   19808:	movw	r0, #256	; 0x100
   1980c:	bl	38a7c <__assert_fail@plt+0x27328>
   19810:	ldr	r1, [fp, #-8]
   19814:	str	r0, [r1, #16]
   19818:	ldr	r0, [fp, #-8]
   1981c:	ldr	r0, [r0, #16]
   19820:	movw	r1, #0
   19824:	cmp	r0, r1
   19828:	bne	19838 <__assert_fail@plt+0x80e4>
   1982c:	movw	r0, #12
   19830:	str	r0, [fp, #-4]
   19834:	b	19970 <__assert_fail@plt+0x821c>
   19838:	ldr	r0, [pc, #324]	; 19984 <__assert_fail@plt+0x8230>
   1983c:	ldr	r1, [fp, #-16]
   19840:	and	r1, r1, #2
   19844:	cmp	r1, #0
   19848:	movw	r1, #0
   1984c:	movne	r1, #1
   19850:	tst	r1, #1
   19854:	moveq	r0, #0
   19858:	ldr	r1, [sp, #16]
   1985c:	orr	r0, r1, r0
   19860:	str	r0, [sp, #16]
   19864:	ldr	r0, [fp, #-16]
   19868:	and	r0, r0, #4
   1986c:	cmp	r0, #0
   19870:	beq	198a8 <__assert_fail@plt+0x8154>
   19874:	ldr	r0, [sp, #16]
   19878:	bic	r0, r0, #64	; 0x40
   1987c:	str	r0, [sp, #16]
   19880:	ldr	r0, [sp, #16]
   19884:	orr	r0, r0, #256	; 0x100
   19888:	str	r0, [sp, #16]
   1988c:	ldr	r0, [fp, #-8]
   19890:	ldrb	r1, [r0, #28]
   19894:	and	r1, r1, #127	; 0x7f
   19898:	movw	r2, #128	; 0x80
   1989c:	orr	r1, r1, r2
   198a0:	strb	r1, [r0, #28]
   198a4:	b	198b8 <__assert_fail@plt+0x8164>
   198a8:	ldr	r0, [fp, #-8]
   198ac:	ldrb	r1, [r0, #28]
   198b0:	and	r1, r1, #127	; 0x7f
   198b4:	strb	r1, [r0, #28]
   198b8:	ldrb	r0, [fp, #-16]
   198bc:	and	r0, r0, #8
   198c0:	ldr	r1, [fp, #-8]
   198c4:	ldrb	r2, [r1, #28]
   198c8:	lsl	r0, r0, #1
   198cc:	bic	r2, r2, #16
   198d0:	orr	r0, r2, r0
   198d4:	strb	r0, [r1, #28]
   198d8:	ldr	r0, [fp, #-8]
   198dc:	movw	r1, #0
   198e0:	str	r1, [r0, #20]
   198e4:	ldr	r0, [fp, #-8]
   198e8:	ldr	r1, [fp, #-12]
   198ec:	ldr	r2, [fp, #-12]
   198f0:	str	r0, [sp, #12]
   198f4:	mov	r0, r2
   198f8:	str	r1, [sp, #8]
   198fc:	bl	11604 <strlen@plt>
   19900:	ldr	r3, [sp, #16]
   19904:	ldr	r1, [sp, #12]
   19908:	str	r0, [sp, #4]
   1990c:	mov	r0, r1
   19910:	ldr	r1, [sp, #8]
   19914:	ldr	r2, [sp, #4]
   19918:	bl	18b2c <__assert_fail@plt+0x73d8>
   1991c:	str	r0, [sp, #20]
   19920:	ldr	r0, [sp, #20]
   19924:	cmp	r0, #16
   19928:	bne	19934 <__assert_fail@plt+0x81e0>
   1992c:	movw	r0, #8
   19930:	str	r0, [sp, #20]
   19934:	ldr	r0, [sp, #20]
   19938:	cmp	r0, #0
   1993c:	bne	19950 <__assert_fail@plt+0x81fc>
   19940:	ldr	r0, [fp, #-8]
   19944:	bl	18f30 <__assert_fail@plt+0x77dc>
   19948:	str	r0, [sp]
   1994c:	b	19968 <__assert_fail@plt+0x8214>
   19950:	ldr	r0, [fp, #-8]
   19954:	ldr	r0, [r0, #16]
   19958:	bl	1604c <__assert_fail@plt+0x48f8>
   1995c:	ldr	r0, [fp, #-8]
   19960:	movw	lr, #0
   19964:	str	lr, [r0, #16]
   19968:	ldr	r0, [sp, #20]
   1996c:	str	r0, [fp, #-4]
   19970:	ldr	r0, [fp, #-4]
   19974:	mov	sp, fp
   19978:	pop	{fp, pc}
   1997c:	strdeq	fp, [r3], -ip
   19980:	smlabteq	r1, r6, r2, r0
   19984:	subeq	r0, r0, r0
   19988:	push	{fp, lr}
   1998c:	mov	fp, sp
   19990:	sub	sp, sp, #40	; 0x28
   19994:	str	r0, [fp, #-4]
   19998:	str	r1, [fp, #-8]
   1999c:	str	r2, [fp, #-12]
   199a0:	str	r3, [fp, #-16]
   199a4:	movw	r0, #17
   199a8:	str	r0, [sp, #12]
   199ac:	ldr	r0, [fp, #-4]
   199b0:	cmp	r0, #0
   199b4:	movw	r0, #1
   199b8:	str	r0, [sp, #4]
   199bc:	blt	199d8 <__assert_fail@plt+0x8284>
   199c0:	ldr	r0, [fp, #-4]
   199c4:	ldr	r1, [sp, #12]
   199c8:	cmp	r0, r1
   199cc:	movw	r0, #0
   199d0:	movge	r0, #1
   199d4:	str	r0, [sp, #4]
   199d8:	ldr	r0, [sp, #4]
   199dc:	tst	r0, #1
   199e0:	beq	199e8 <__assert_fail@plt+0x8294>
   199e4:	bl	1173c <abort@plt>
   199e8:	ldr	r0, [fp, #-4]
   199ec:	movw	r1, #54656	; 0xd580
   199f0:	movt	r1, #3
   199f4:	add	r0, r1, r0, lsl #2
   199f8:	ldr	r0, [r0]
   199fc:	movw	r1, #54272	; 0xd400
   19a00:	movt	r1, #3
   19a04:	add	r0, r1, r0
   19a08:	bl	115f8 <gettext@plt>
   19a0c:	str	r0, [sp, #20]
   19a10:	ldr	r0, [sp, #20]
   19a14:	bl	11604 <strlen@plt>
   19a18:	add	r0, r0, #1
   19a1c:	str	r0, [sp, #16]
   19a20:	ldr	r0, [fp, #-16]
   19a24:	cmp	r0, #0
   19a28:	beq	19a74 <__assert_fail@plt+0x8320>
   19a2c:	ldr	r0, [sp, #16]
   19a30:	str	r0, [sp, #8]
   19a34:	ldr	r0, [sp, #16]
   19a38:	ldr	r1, [fp, #-16]
   19a3c:	cmp	r0, r1
   19a40:	bls	19a64 <__assert_fail@plt+0x8310>
   19a44:	ldr	r0, [fp, #-16]
   19a48:	sub	r0, r0, #1
   19a4c:	str	r0, [sp, #8]
   19a50:	ldr	r0, [fp, #-12]
   19a54:	ldr	r1, [sp, #8]
   19a58:	add	r0, r0, r1
   19a5c:	movw	r1, #0
   19a60:	strb	r1, [r0]
   19a64:	ldr	r0, [fp, #-12]
   19a68:	ldr	r1, [sp, #20]
   19a6c:	ldr	r2, [sp, #8]
   19a70:	bl	11478 <memcpy@plt>
   19a74:	ldr	r0, [sp, #16]
   19a78:	mov	sp, fp
   19a7c:	pop	{fp, pc}
   19a80:	push	{fp, lr}
   19a84:	mov	fp, sp
   19a88:	sub	sp, sp, #16
   19a8c:	str	r0, [fp, #-4]
   19a90:	ldr	r0, [fp, #-4]
   19a94:	ldr	r0, [r0]
   19a98:	str	r0, [sp, #8]
   19a9c:	ldr	r0, [sp, #8]
   19aa0:	movw	r1, #0
   19aa4:	cmp	r0, r1
   19aa8:	beq	19af4 <__assert_fail@plt+0x83a0>
   19aac:	movw	r0, #0
   19ab0:	movt	r0, #0
   19ab4:	cmp	r0, #0
   19ab8:	bne	19ad4 <__assert_fail@plt+0x8380>
   19abc:	b	19ac0 <__assert_fail@plt+0x836c>
   19ac0:	movw	r0, #0
   19ac4:	movt	r0, #0
   19ac8:	cmp	r0, #0
   19acc:	beq	19ae8 <__assert_fail@plt+0x8394>
   19ad0:	b	19ad4 <__assert_fail@plt+0x8380>
   19ad4:	ldr	r0, [sp, #8]
   19ad8:	add	r0, r0, #136	; 0x88
   19adc:	bl	11424 <pthread_mutex_destroy@plt>
   19ae0:	str	r0, [sp, #4]
   19ae4:	b	19aec <__assert_fail@plt+0x8398>
   19ae8:	b	19aec <__assert_fail@plt+0x8398>
   19aec:	ldr	r0, [sp, #8]
   19af0:	bl	19b40 <__assert_fail@plt+0x83ec>
   19af4:	ldr	r0, [fp, #-4]
   19af8:	movw	r1, #0
   19afc:	str	r1, [r0]
   19b00:	ldr	r0, [fp, #-4]
   19b04:	str	r1, [r0, #4]
   19b08:	ldr	r0, [fp, #-4]
   19b0c:	ldr	r0, [r0, #16]
   19b10:	bl	1604c <__assert_fail@plt+0x48f8>
   19b14:	ldr	r0, [fp, #-4]
   19b18:	movw	r1, #0
   19b1c:	str	r1, [r0, #16]
   19b20:	ldr	r0, [fp, #-4]
   19b24:	ldr	r0, [r0, #20]
   19b28:	bl	1604c <__assert_fail@plt+0x48f8>
   19b2c:	ldr	r0, [fp, #-4]
   19b30:	movw	r1, #0
   19b34:	str	r1, [r0, #20]
   19b38:	mov	sp, fp
   19b3c:	pop	{fp, pc}
   19b40:	push	{fp, lr}
   19b44:	mov	fp, sp
   19b48:	sub	sp, sp, #24
   19b4c:	str	r0, [fp, #-4]
   19b50:	ldr	r0, [fp, #-4]
   19b54:	ldr	r0, [r0]
   19b58:	movw	r1, #0
   19b5c:	cmp	r0, r1
   19b60:	beq	19ba8 <__assert_fail@plt+0x8454>
   19b64:	movw	r0, #0
   19b68:	str	r0, [fp, #-8]
   19b6c:	ldr	r0, [fp, #-8]
   19b70:	ldr	r1, [fp, #-4]
   19b74:	ldr	r1, [r1, #8]
   19b78:	cmp	r0, r1
   19b7c:	bcs	19ba4 <__assert_fail@plt+0x8450>
   19b80:	ldr	r0, [fp, #-4]
   19b84:	ldr	r0, [r0]
   19b88:	ldr	r1, [fp, #-8]
   19b8c:	add	r0, r0, r1, lsl #3
   19b90:	bl	1b7c0 <__assert_fail@plt+0xa06c>
   19b94:	ldr	r0, [fp, #-8]
   19b98:	add	r0, r0, #1
   19b9c:	str	r0, [fp, #-8]
   19ba0:	b	19b6c <__assert_fail@plt+0x8418>
   19ba4:	b	19ba8 <__assert_fail@plt+0x8454>
   19ba8:	ldr	r0, [fp, #-4]
   19bac:	ldr	r0, [r0, #12]
   19bb0:	bl	1604c <__assert_fail@plt+0x48f8>
   19bb4:	movw	r0, #0
   19bb8:	str	r0, [fp, #-8]
   19bbc:	ldr	r0, [fp, #-8]
   19bc0:	ldr	r1, [fp, #-4]
   19bc4:	ldr	r1, [r1, #8]
   19bc8:	cmp	r0, r1
   19bcc:	bcs	19c80 <__assert_fail@plt+0x852c>
   19bd0:	ldr	r0, [fp, #-4]
   19bd4:	ldr	r0, [r0, #24]
   19bd8:	movw	r1, #0
   19bdc:	cmp	r0, r1
   19be0:	beq	19c04 <__assert_fail@plt+0x84b0>
   19be4:	ldr	r0, [fp, #-4]
   19be8:	ldr	r0, [r0, #24]
   19bec:	ldr	r1, [fp, #-8]
   19bf0:	movw	r2, #12
   19bf4:	mul	r1, r1, r2
   19bf8:	add	r0, r0, r1
   19bfc:	ldr	r0, [r0, #8]
   19c00:	bl	1604c <__assert_fail@plt+0x48f8>
   19c04:	ldr	r0, [fp, #-4]
   19c08:	ldr	r0, [r0, #28]
   19c0c:	movw	r1, #0
   19c10:	cmp	r0, r1
   19c14:	beq	19c38 <__assert_fail@plt+0x84e4>
   19c18:	ldr	r0, [fp, #-4]
   19c1c:	ldr	r0, [r0, #28]
   19c20:	ldr	r1, [fp, #-8]
   19c24:	movw	r2, #12
   19c28:	mul	r1, r1, r2
   19c2c:	add	r0, r0, r1
   19c30:	ldr	r0, [r0, #8]
   19c34:	bl	1604c <__assert_fail@plt+0x48f8>
   19c38:	ldr	r0, [fp, #-4]
   19c3c:	ldr	r0, [r0, #20]
   19c40:	movw	r1, #0
   19c44:	cmp	r0, r1
   19c48:	beq	19c6c <__assert_fail@plt+0x8518>
   19c4c:	ldr	r0, [fp, #-4]
   19c50:	ldr	r0, [r0, #20]
   19c54:	ldr	r1, [fp, #-8]
   19c58:	movw	r2, #12
   19c5c:	mul	r1, r1, r2
   19c60:	add	r0, r0, r1
   19c64:	ldr	r0, [r0, #8]
   19c68:	bl	1604c <__assert_fail@plt+0x48f8>
   19c6c:	b	19c70 <__assert_fail@plt+0x851c>
   19c70:	ldr	r0, [fp, #-8]
   19c74:	add	r0, r0, #1
   19c78:	str	r0, [fp, #-8]
   19c7c:	b	19bbc <__assert_fail@plt+0x8468>
   19c80:	ldr	r0, [fp, #-4]
   19c84:	ldr	r0, [r0, #20]
   19c88:	bl	1604c <__assert_fail@plt+0x48f8>
   19c8c:	ldr	r0, [fp, #-4]
   19c90:	ldr	r0, [r0, #24]
   19c94:	bl	1604c <__assert_fail@plt+0x48f8>
   19c98:	ldr	r0, [fp, #-4]
   19c9c:	ldr	r0, [r0, #28]
   19ca0:	bl	1604c <__assert_fail@plt+0x48f8>
   19ca4:	ldr	r0, [fp, #-4]
   19ca8:	ldr	r0, [r0]
   19cac:	bl	1604c <__assert_fail@plt+0x48f8>
   19cb0:	ldr	r0, [fp, #-4]
   19cb4:	ldr	r0, [r0, #32]
   19cb8:	movw	lr, #0
   19cbc:	cmp	r0, lr
   19cc0:	beq	19d68 <__assert_fail@plt+0x8614>
   19cc4:	movw	r0, #0
   19cc8:	str	r0, [fp, #-8]
   19ccc:	ldr	r0, [fp, #-8]
   19cd0:	ldr	r1, [fp, #-4]
   19cd4:	ldr	r1, [r1, #68]	; 0x44
   19cd8:	cmp	r0, r1
   19cdc:	bhi	19d64 <__assert_fail@plt+0x8610>
   19ce0:	ldr	r0, [fp, #-4]
   19ce4:	ldr	r0, [r0, #32]
   19ce8:	ldr	r1, [fp, #-8]
   19cec:	movw	r2, #12
   19cf0:	mul	r1, r1, r2
   19cf4:	add	r0, r0, r1
   19cf8:	str	r0, [sp, #8]
   19cfc:	movw	r0, #0
   19d00:	str	r0, [sp, #12]
   19d04:	ldr	r0, [sp, #12]
   19d08:	ldr	r1, [sp, #8]
   19d0c:	ldr	r1, [r1]
   19d10:	cmp	r0, r1
   19d14:	bge	19d48 <__assert_fail@plt+0x85f4>
   19d18:	ldr	r0, [sp, #8]
   19d1c:	ldr	r0, [r0, #8]
   19d20:	ldr	r1, [sp, #12]
   19d24:	add	r0, r0, r1, lsl #2
   19d28:	ldr	r0, [r0]
   19d2c:	str	r0, [sp, #4]
   19d30:	ldr	r0, [sp, #4]
   19d34:	bl	1b850 <__assert_fail@plt+0xa0fc>
   19d38:	ldr	r0, [sp, #12]
   19d3c:	add	r0, r0, #1
   19d40:	str	r0, [sp, #12]
   19d44:	b	19d04 <__assert_fail@plt+0x85b0>
   19d48:	ldr	r0, [sp, #8]
   19d4c:	ldr	r0, [r0, #8]
   19d50:	bl	1604c <__assert_fail@plt+0x48f8>
   19d54:	ldr	r0, [fp, #-8]
   19d58:	add	r0, r0, #1
   19d5c:	str	r0, [fp, #-8]
   19d60:	b	19ccc <__assert_fail@plt+0x8578>
   19d64:	b	19d68 <__assert_fail@plt+0x8614>
   19d68:	ldr	r0, [fp, #-4]
   19d6c:	ldr	r0, [r0, #32]
   19d70:	bl	1604c <__assert_fail@plt+0x48f8>
   19d74:	ldr	r0, [fp, #-4]
   19d78:	ldr	r0, [r0, #60]	; 0x3c
   19d7c:	movw	lr, #54724	; 0xd5c4
   19d80:	movt	lr, #3
   19d84:	cmp	r0, lr
   19d88:	beq	19d98 <__assert_fail@plt+0x8644>
   19d8c:	ldr	r0, [fp, #-4]
   19d90:	ldr	r0, [r0, #60]	; 0x3c
   19d94:	bl	1604c <__assert_fail@plt+0x48f8>
   19d98:	ldr	r0, [fp, #-4]
   19d9c:	ldr	r0, [r0, #132]	; 0x84
   19da0:	bl	1604c <__assert_fail@plt+0x48f8>
   19da4:	ldr	r0, [fp, #-4]
   19da8:	bl	1604c <__assert_fail@plt+0x48f8>
   19dac:	mov	sp, fp
   19db0:	pop	{fp, pc}
   19db4:	push	{r4, r5, r6, sl, fp, lr}
   19db8:	add	fp, sp, #16
   19dbc:	sub	sp, sp, #72	; 0x48
   19dc0:	ldr	ip, [fp, #8]
   19dc4:	str	r0, [fp, #-24]	; 0xffffffe8
   19dc8:	str	r1, [fp, #-28]	; 0xffffffe4
   19dcc:	str	r2, [fp, #-32]	; 0xffffffe0
   19dd0:	str	r3, [fp, #-36]	; 0xffffffdc
   19dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd8:	ldr	r0, [r0]
   19ddc:	str	r0, [sp, #36]	; 0x24
   19de0:	ldr	r0, [fp, #8]
   19de4:	mvn	r1, #7
   19de8:	and	r0, r0, r1
   19dec:	cmp	r0, #0
   19df0:	str	ip, [sp, #32]
   19df4:	beq	19e04 <__assert_fail@plt+0x86b0>
   19df8:	movw	r0, #2
   19dfc:	str	r0, [fp, #-20]	; 0xffffffec
   19e00:	b	19f74 <__assert_fail@plt+0x8820>
   19e04:	ldr	r0, [fp, #8]
   19e08:	and	r0, r0, #4
   19e0c:	cmp	r0, #0
   19e10:	beq	19e30 <__assert_fail@plt+0x86dc>
   19e14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e18:	ldr	r0, [r0]
   19e1c:	str	r0, [sp, #44]	; 0x2c
   19e20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e24:	ldr	r0, [r0, #4]
   19e28:	str	r0, [sp, #40]	; 0x28
   19e2c:	b	19e44 <__assert_fail@plt+0x86f0>
   19e30:	movw	r0, #0
   19e34:	str	r0, [sp, #44]	; 0x2c
   19e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e3c:	bl	11604 <strlen@plt>
   19e40:	str	r0, [sp, #40]	; 0x28
   19e44:	movw	r0, #0
   19e48:	movt	r0, #0
   19e4c:	cmp	r0, #0
   19e50:	bne	19e6c <__assert_fail@plt+0x8718>
   19e54:	b	19e58 <__assert_fail@plt+0x8704>
   19e58:	movw	r0, #0
   19e5c:	movt	r0, #0
   19e60:	cmp	r0, #0
   19e64:	beq	19e80 <__assert_fail@plt+0x872c>
   19e68:	b	19e6c <__assert_fail@plt+0x8718>
   19e6c:	ldr	r0, [sp, #36]	; 0x24
   19e70:	add	r0, r0, #136	; 0x88
   19e74:	bl	11460 <pthread_mutex_lock@plt>
   19e78:	str	r0, [sp, #28]
   19e7c:	b	19e84 <__assert_fail@plt+0x8730>
   19e80:	b	19e84 <__assert_fail@plt+0x8730>
   19e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e88:	ldrb	r0, [r0, #28]
   19e8c:	ubfx	r0, r0, #4, #1
   19e90:	and	r0, r0, #255	; 0xff
   19e94:	cmp	r0, #0
   19e98:	beq	19edc <__assert_fail@plt+0x8788>
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ea4:	ldr	r2, [sp, #40]	; 0x28
   19ea8:	ldr	r3, [sp, #44]	; 0x2c
   19eac:	ldr	ip, [sp, #40]	; 0x28
   19eb0:	ldr	lr, [sp, #40]	; 0x28
   19eb4:	ldr	r4, [fp, #8]
   19eb8:	str	ip, [sp]
   19ebc:	str	lr, [sp, #4]
   19ec0:	movw	ip, #0
   19ec4:	str	ip, [sp, #8]
   19ec8:	str	ip, [sp, #12]
   19ecc:	str	r4, [sp, #16]
   19ed0:	bl	19f80 <__assert_fail@plt+0x882c>
   19ed4:	str	r0, [fp, #-40]	; 0xffffffd8
   19ed8:	b	19f1c <__assert_fail@plt+0x87c8>
   19edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ee4:	ldr	r2, [sp, #40]	; 0x28
   19ee8:	ldr	r3, [sp, #44]	; 0x2c
   19eec:	ldr	ip, [sp, #40]	; 0x28
   19ef0:	ldr	lr, [sp, #40]	; 0x28
   19ef4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19ef8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19efc:	ldr	r6, [fp, #8]
   19f00:	str	ip, [sp]
   19f04:	str	lr, [sp, #4]
   19f08:	str	r4, [sp, #8]
   19f0c:	str	r5, [sp, #12]
   19f10:	str	r6, [sp, #16]
   19f14:	bl	19f80 <__assert_fail@plt+0x882c>
   19f18:	str	r0, [fp, #-40]	; 0xffffffd8
   19f1c:	movw	r0, #0
   19f20:	movt	r0, #0
   19f24:	cmp	r0, #0
   19f28:	bne	19f44 <__assert_fail@plt+0x87f0>
   19f2c:	b	19f30 <__assert_fail@plt+0x87dc>
   19f30:	movw	r0, #0
   19f34:	movt	r0, #0
   19f38:	cmp	r0, #0
   19f3c:	beq	19f58 <__assert_fail@plt+0x8804>
   19f40:	b	19f44 <__assert_fail@plt+0x87f0>
   19f44:	ldr	r0, [sp, #36]	; 0x24
   19f48:	add	r0, r0, #136	; 0x88
   19f4c:	bl	113a0 <pthread_mutex_unlock@plt>
   19f50:	str	r0, [sp, #24]
   19f54:	b	19f5c <__assert_fail@plt+0x8808>
   19f58:	b	19f5c <__assert_fail@plt+0x8808>
   19f5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f60:	cmp	r0, #0
   19f64:	movw	r0, #0
   19f68:	movne	r0, #1
   19f6c:	and	r0, r0, #1
   19f70:	str	r0, [fp, #-20]	; 0xffffffec
   19f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f78:	sub	sp, fp, #16
   19f7c:	pop	{r4, r5, r6, sl, fp, pc}
   19f80:	push	{r4, r5, r6, sl, fp, lr}
   19f84:	add	fp, sp, #16
   19f88:	sub	sp, sp, #384	; 0x180
   19f8c:	ldr	ip, [fp, #24]
   19f90:	ldr	lr, [fp, #20]
   19f94:	ldr	r4, [fp, #16]
   19f98:	ldr	r5, [fp, #12]
   19f9c:	ldr	r6, [fp, #8]
   19fa0:	str	r0, [fp, #-24]	; 0xffffffe8
   19fa4:	str	r1, [fp, #-28]	; 0xffffffe4
   19fa8:	str	r2, [fp, #-32]	; 0xffffffe0
   19fac:	str	r3, [fp, #-36]	; 0xffffffdc
   19fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb4:	ldr	r0, [r0]
   19fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   19fbc:	mvn	r0, #0
   19fc0:	str	r0, [fp, #-72]	; 0xffffffb8
   19fc4:	add	r0, sp, #180	; 0xb4
   19fc8:	mov	r1, #0
   19fcc:	mov	r2, #136	; 0x88
   19fd0:	str	r6, [sp, #156]	; 0x9c
   19fd4:	str	lr, [sp, #152]	; 0x98
   19fd8:	str	r4, [sp, #148]	; 0x94
   19fdc:	str	r5, [sp, #144]	; 0x90
   19fe0:	str	ip, [sp, #140]	; 0x8c
   19fe4:	bl	11658 <memset@plt>
   19fe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fec:	str	r1, [sp, #264]	; 0x108
   19ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ff4:	ldr	r1, [r1, #16]
   19ff8:	movw	r2, #0
   19ffc:	cmp	r1, r2
   1a000:	str	r0, [sp, #136]	; 0x88
   1a004:	beq	1a058 <__assert_fail@plt+0x8904>
   1a008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a00c:	ldrb	r0, [r0, #28]
   1a010:	ubfx	r0, r0, #3, #1
   1a014:	and	r0, r0, #255	; 0xff
   1a018:	cmp	r0, #0
   1a01c:	beq	1a058 <__assert_fail@plt+0x8904>
   1a020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a024:	ldr	r1, [fp, #8]
   1a028:	cmp	r0, r1
   1a02c:	beq	1a058 <__assert_fail@plt+0x8904>
   1a030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a034:	ldrb	r0, [r0, #28]
   1a038:	and	r0, r0, #1
   1a03c:	and	r0, r0, #255	; 0xff
   1a040:	cmp	r0, #0
   1a044:	bne	1a058 <__assert_fail@plt+0x8904>
   1a048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a04c:	ldr	r0, [r0, #16]
   1a050:	str	r0, [sp, #132]	; 0x84
   1a054:	b	1a064 <__assert_fail@plt+0x8910>
   1a058:	movw	r0, #0
   1a05c:	str	r0, [sp, #132]	; 0x84
   1a060:	b	1a064 <__assert_fail@plt+0x8910>
   1a064:	ldr	r0, [sp, #132]	; 0x84
   1a068:	str	r0, [sp, #176]	; 0xb0
   1a06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a070:	ldr	r0, [r0, #20]
   1a074:	str	r0, [sp, #172]	; 0xac
   1a078:	ldr	r0, [fp, #16]
   1a07c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a080:	ldr	r1, [r1, #24]
   1a084:	cmp	r0, r1
   1a088:	bls	1a0a8 <__assert_fail@plt+0x8954>
   1a08c:	ldr	r0, [fp, #16]
   1a090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a094:	ldr	r1, [r1, #24]
   1a098:	add	r1, r1, #1
   1a09c:	sub	r0, r0, r1
   1a0a0:	str	r0, [sp, #128]	; 0x80
   1a0a4:	b	1a0b4 <__assert_fail@plt+0x8960>
   1a0a8:	movw	r0, #0
   1a0ac:	str	r0, [sp, #128]	; 0x80
   1a0b0:	b	1a0b4 <__assert_fail@plt+0x8960>
   1a0b4:	ldr	r0, [sp, #128]	; 0x80
   1a0b8:	str	r0, [fp, #-76]	; 0xffffffb4
   1a0bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a0c0:	ldr	r1, [fp, #16]
   1a0c4:	sub	r0, r1, r0
   1a0c8:	str	r0, [fp, #16]
   1a0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d0:	ldr	r0, [r0, #8]
   1a0d4:	cmp	r0, #0
   1a0d8:	movw	r0, #1
   1a0dc:	str	r0, [sp, #124]	; 0x7c
   1a0e0:	beq	1a154 <__assert_fail@plt+0x8a00>
   1a0e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0e8:	ldr	r0, [r0, #36]	; 0x24
   1a0ec:	movw	r1, #0
   1a0f0:	cmp	r0, r1
   1a0f4:	movw	r0, #1
   1a0f8:	str	r0, [sp, #124]	; 0x7c
   1a0fc:	beq	1a154 <__assert_fail@plt+0x8a00>
   1a100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a104:	ldr	r0, [r0, #40]	; 0x28
   1a108:	movw	r1, #0
   1a10c:	cmp	r0, r1
   1a110:	movw	r0, #1
   1a114:	str	r0, [sp, #124]	; 0x7c
   1a118:	beq	1a154 <__assert_fail@plt+0x8a00>
   1a11c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a120:	ldr	r0, [r0, #44]	; 0x2c
   1a124:	movw	r1, #0
   1a128:	cmp	r0, r1
   1a12c:	movw	r0, #1
   1a130:	str	r0, [sp, #124]	; 0x7c
   1a134:	beq	1a154 <__assert_fail@plt+0x8a00>
   1a138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a13c:	ldr	r0, [r0, #48]	; 0x30
   1a140:	movw	r1, #0
   1a144:	cmp	r0, r1
   1a148:	movw	r0, #0
   1a14c:	moveq	r0, #1
   1a150:	str	r0, [sp, #124]	; 0x7c
   1a154:	ldr	r0, [sp, #124]	; 0x7c
   1a158:	tst	r0, #1
   1a15c:	beq	1a16c <__assert_fail@plt+0x8a18>
   1a160:	movw	r0, #1
   1a164:	str	r0, [fp, #-20]	; 0xffffffec
   1a168:	b	1ae88 <__assert_fail@plt+0x9734>
   1a16c:	ldr	r0, [fp, #8]
   1a170:	movw	r1, #0
   1a174:	cmp	r1, r0
   1a178:	bgt	1a190 <__assert_fail@plt+0x8a3c>
   1a17c:	ldr	r0, [fp, #8]
   1a180:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a184:	cmp	r0, r1
   1a188:	bgt	1a190 <__assert_fail@plt+0x8a3c>
   1a18c:	b	1a190 <__assert_fail@plt+0x8a3c>
   1a190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a194:	ldr	r0, [r0, #36]	; 0x24
   1a198:	ldr	r0, [r0, #8]
   1a19c:	cmp	r0, #0
   1a1a0:	bne	1a214 <__assert_fail@plt+0x8ac0>
   1a1a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1a8:	ldr	r0, [r0, #40]	; 0x28
   1a1ac:	ldr	r0, [r0, #8]
   1a1b0:	cmp	r0, #0
   1a1b4:	bne	1a214 <__assert_fail@plt+0x8ac0>
   1a1b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1bc:	ldr	r0, [r0, #44]	; 0x2c
   1a1c0:	ldr	r0, [r0, #8]
   1a1c4:	cmp	r0, #0
   1a1c8:	beq	1a1e4 <__assert_fail@plt+0x8a90>
   1a1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1d0:	ldrb	r0, [r0, #28]
   1a1d4:	lsr	r0, r0, #7
   1a1d8:	and	r0, r0, #255	; 0xff
   1a1dc:	cmp	r0, #0
   1a1e0:	bne	1a214 <__assert_fail@plt+0x8ac0>
   1a1e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a1e8:	cmp	r0, #0
   1a1ec:	beq	1a208 <__assert_fail@plt+0x8ab4>
   1a1f0:	ldr	r0, [fp, #8]
   1a1f4:	cmp	r0, #0
   1a1f8:	beq	1a208 <__assert_fail@plt+0x8ab4>
   1a1fc:	movw	r0, #1
   1a200:	str	r0, [fp, #-20]	; 0xffffffec
   1a204:	b	1ae88 <__assert_fail@plt+0x9734>
   1a208:	movw	r0, #0
   1a20c:	str	r0, [fp, #8]
   1a210:	str	r0, [fp, #-36]	; 0xffffffdc
   1a214:	ldr	r0, [fp, #16]
   1a218:	cmp	r0, #0
   1a21c:	movw	r0, #1
   1a220:	str	r0, [sp, #120]	; 0x78
   1a224:	bne	1a240 <__assert_fail@plt+0x8aec>
   1a228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a22c:	ldr	r0, [r0, #76]	; 0x4c
   1a230:	cmp	r0, #0
   1a234:	movw	r0, #0
   1a238:	movne	r0, #1
   1a23c:	str	r0, [sp, #120]	; 0x78
   1a240:	ldr	r0, [sp, #120]	; 0x78
   1a244:	add	r1, sp, #180	; 0xb4
   1a248:	and	r0, r0, #1
   1a24c:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a250:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a254:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a25c:	ldr	r3, [r3, #8]
   1a260:	add	r3, r3, #1
   1a264:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1a268:	ldr	ip, [ip, #20]
   1a26c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1a270:	ldr	lr, [lr, #12]
   1a274:	and	lr, lr, #4194304	; 0x400000
   1a278:	cmp	lr, #0
   1a27c:	movw	lr, #0
   1a280:	movne	lr, #1
   1a284:	ldr	r4, [fp, #-44]	; 0xffffffd4
   1a288:	str	r0, [sp, #116]	; 0x74
   1a28c:	mov	r0, r1
   1a290:	ldr	r1, [sp, #116]	; 0x74
   1a294:	str	ip, [sp]
   1a298:	and	ip, lr, #1
   1a29c:	str	ip, [sp, #4]
   1a2a0:	str	r4, [sp, #8]
   1a2a4:	bl	26aa4 <__assert_fail@plt+0x15350>
   1a2a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a2ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a2b0:	cmp	r0, #0
   1a2b4:	beq	1a2bc <__assert_fail@plt+0x8b68>
   1a2b8:	b	1ae58 <__assert_fail@plt+0x9704>
   1a2bc:	ldr	r0, [fp, #12]
   1a2c0:	str	r0, [sp, #236]	; 0xec
   1a2c4:	ldr	r0, [fp, #12]
   1a2c8:	str	r0, [sp, #232]	; 0xe8
   1a2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d0:	ldrb	r0, [r0, #28]
   1a2d4:	lsr	r0, r0, #7
   1a2d8:	strb	r0, [sp, #257]	; 0x101
   1a2dc:	ldr	r1, [fp, #24]
   1a2e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2e4:	ldr	r0, [r0, #76]	; 0x4c
   1a2e8:	lsl	r2, r0, #1
   1a2ec:	add	r0, sp, #180	; 0xb4
   1a2f0:	bl	26c40 <__assert_fail@plt+0x154ec>
   1a2f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a2f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a2fc:	cmp	r0, #0
   1a300:	beq	1a308 <__assert_fail@plt+0x8bb4>
   1a304:	b	1ae58 <__assert_fail@plt+0x9704>
   1a308:	ldr	r0, [fp, #16]
   1a30c:	cmp	r0, #1
   1a310:	bhi	1a32c <__assert_fail@plt+0x8bd8>
   1a314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a318:	ldrb	r0, [r0, #88]	; 0x58
   1a31c:	ubfx	r0, r0, #1, #1
   1a320:	and	r0, r0, #255	; 0xff
   1a324:	cmp	r0, #0
   1a328:	beq	1a37c <__assert_fail@plt+0x8c28>
   1a32c:	ldr	r0, [pc, #2912]	; 1ae94 <__assert_fail@plt+0x9740>
   1a330:	ldr	r1, [sp, #216]	; 0xd8
   1a334:	cmp	r0, r1
   1a338:	bhi	1a348 <__assert_fail@plt+0x8bf4>
   1a33c:	movw	r0, #12
   1a340:	str	r0, [fp, #-40]	; 0xffffffd8
   1a344:	b	1ae58 <__assert_fail@plt+0x9704>
   1a348:	ldr	r0, [sp, #216]	; 0xd8
   1a34c:	add	r0, r0, #1
   1a350:	lsl	r0, r0, #2
   1a354:	bl	38a7c <__assert_fail@plt+0x27328>
   1a358:	str	r0, [sp, #280]	; 0x118
   1a35c:	ldr	r0, [sp, #280]	; 0x118
   1a360:	movw	lr, #0
   1a364:	cmp	r0, lr
   1a368:	bne	1a378 <__assert_fail@plt+0x8c24>
   1a36c:	movw	r0, #12
   1a370:	str	r0, [fp, #-40]	; 0xffffffd8
   1a374:	b	1ae58 <__assert_fail@plt+0x9704>
   1a378:	b	1a37c <__assert_fail@plt+0x8c28>
   1a37c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a380:	str	r0, [fp, #-68]	; 0xffffffbc
   1a384:	ldr	r0, [fp, #24]
   1a388:	and	r0, r0, #1
   1a38c:	cmp	r0, #0
   1a390:	movw	r0, #0
   1a394:	movne	r0, #1
   1a398:	tst	r0, #1
   1a39c:	movw	r0, #4
   1a3a0:	moveq	r0, #6
   1a3a4:	str	r0, [sp, #240]	; 0xf0
   1a3a8:	ldr	r0, [fp, #8]
   1a3ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3b0:	cmp	r0, r1
   1a3b4:	movw	r0, #0
   1a3b8:	movlt	r0, #1
   1a3bc:	tst	r0, #1
   1a3c0:	mvn	r0, #0
   1a3c4:	moveq	r0, #1
   1a3c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a3cc:	ldr	r0, [fp, #8]
   1a3d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3d4:	cmp	r0, r1
   1a3d8:	bge	1a3e8 <__assert_fail@plt+0x8c94>
   1a3dc:	ldr	r0, [fp, #8]
   1a3e0:	str	r0, [sp, #112]	; 0x70
   1a3e4:	b	1a3f0 <__assert_fail@plt+0x8c9c>
   1a3e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a3ec:	str	r0, [sp, #112]	; 0x70
   1a3f0:	ldr	r0, [sp, #112]	; 0x70
   1a3f4:	str	r0, [fp, #-48]	; 0xffffffd0
   1a3f8:	ldr	r0, [fp, #8]
   1a3fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a400:	cmp	r0, r1
   1a404:	bge	1a414 <__assert_fail@plt+0x8cc0>
   1a408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a40c:	str	r0, [sp, #108]	; 0x6c
   1a410:	b	1a41c <__assert_fail@plt+0x8cc8>
   1a414:	ldr	r0, [fp, #8]
   1a418:	str	r0, [sp, #108]	; 0x6c
   1a41c:	ldr	r0, [sp, #108]	; 0x6c
   1a420:	str	r0, [fp, #-52]	; 0xffffffcc
   1a424:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a428:	ldr	r0, [r0, #92]	; 0x5c
   1a42c:	cmp	r0, #1
   1a430:	movw	r0, #0
   1a434:	moveq	r0, #1
   1a438:	and	r0, r0, #1
   1a43c:	strb	r0, [fp, #-77]	; 0xffffffb3
   1a440:	ldr	r0, [sp, #176]	; 0xb0
   1a444:	movw	r1, #0
   1a448:	cmp	r0, r1
   1a44c:	beq	1a508 <__assert_fail@plt+0x8db4>
   1a450:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   1a454:	tst	r0, #1
   1a458:	movw	r0, #1
   1a45c:	str	r0, [sp, #104]	; 0x68
   1a460:	bne	1a4a8 <__assert_fail@plt+0x8d54>
   1a464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a468:	ldr	r0, [r0, #12]
   1a46c:	and	r0, r0, #4194304	; 0x400000
   1a470:	cmp	r0, #0
   1a474:	movw	r0, #1
   1a478:	str	r0, [sp, #100]	; 0x64
   1a47c:	bne	1a498 <__assert_fail@plt+0x8d44>
   1a480:	ldr	r0, [sp, #172]	; 0xac
   1a484:	movw	r1, #0
   1a488:	cmp	r0, r1
   1a48c:	movw	r0, #0
   1a490:	movne	r0, #1
   1a494:	str	r0, [sp, #100]	; 0x64
   1a498:	ldr	r0, [sp, #100]	; 0x64
   1a49c:	mvn	r1, #0
   1a4a0:	eor	r0, r0, r1
   1a4a4:	str	r0, [sp, #104]	; 0x68
   1a4a8:	ldr	r0, [sp, #104]	; 0x68
   1a4ac:	tst	r0, #1
   1a4b0:	movw	r0, #4
   1a4b4:	moveq	r0, #0
   1a4b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a4bc:	ldr	r2, [fp, #8]
   1a4c0:	cmp	r1, r2
   1a4c4:	movw	r1, #0
   1a4c8:	movle	r1, #1
   1a4cc:	tst	r1, #1
   1a4d0:	movw	r1, #2
   1a4d4:	moveq	r1, #0
   1a4d8:	orr	r0, r0, r1
   1a4dc:	ldr	r1, [sp, #172]	; 0xac
   1a4e0:	movw	r2, #0
   1a4e4:	cmp	r1, r2
   1a4e8:	movw	r1, #0
   1a4ec:	movne	r1, #1
   1a4f0:	tst	r1, #1
   1a4f4:	movw	r1, #1
   1a4f8:	moveq	r1, #0
   1a4fc:	orr	r0, r0, r1
   1a500:	str	r0, [sp, #96]	; 0x60
   1a504:	b	1a514 <__assert_fail@plt+0x8dc0>
   1a508:	movw	r0, #8
   1a50c:	str	r0, [sp, #96]	; 0x60
   1a510:	b	1a514 <__assert_fail@plt+0x8dc0>
   1a514:	ldr	r0, [sp, #96]	; 0x60
   1a518:	str	r0, [fp, #-64]	; 0xffffffc0
   1a51c:	movw	r0, #1
   1a520:	str	r0, [fp, #-40]	; 0xffffffd8
   1a524:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a528:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a52c:	cmp	r0, r1
   1a530:	blt	1a544 <__assert_fail@plt+0x8df0>
   1a534:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a538:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a53c:	cmp	r0, r1
   1a540:	bge	1a548 <__assert_fail@plt+0x8df4>
   1a544:	b	1ae58 <__assert_fail@plt+0x9704>
   1a548:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a54c:	sub	r0, r0, #4
   1a550:	cmp	r0, #4
   1a554:	str	r0, [sp, #92]	; 0x5c
   1a558:	bhi	1a7e0 <__assert_fail@plt+0x908c>
   1a55c:	add	r0, pc, #8
   1a560:	ldr	r1, [sp, #92]	; 0x5c
   1a564:	ldr	r0, [r0, r1, lsl #2]
   1a568:	mov	pc, r0
   1a56c:	andeq	sl, r1, r4, lsl r7
   1a570:	andeq	sl, r1, r4, lsl r7
   1a574:	andeq	sl, r1, r0, lsl #12
   1a578:	andeq	sl, r1, r4, lsl #11
   1a57c:	andeq	sl, r1, r0, lsl #11
   1a580:	b	1a8d4 <__assert_fail@plt+0x9180>
   1a584:	b	1a588 <__assert_fail@plt+0x8e34>
   1a588:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a58c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a590:	cmp	r0, r1
   1a594:	movw	r0, #0
   1a598:	str	r0, [sp, #88]	; 0x58
   1a59c:	bge	1a5e0 <__assert_fail@plt+0x8e8c>
   1a5a0:	ldr	r0, [sp, #176]	; 0xb0
   1a5a4:	ldr	r1, [sp, #172]	; 0xac
   1a5a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a5ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a5b0:	add	r2, r2, r3
   1a5b4:	ldrb	r2, [r2]
   1a5b8:	add	r1, r1, r2
   1a5bc:	ldrb	r1, [r1]
   1a5c0:	add	r0, r0, r1
   1a5c4:	ldrsb	r0, [r0]
   1a5c8:	cmp	r0, #0
   1a5cc:	movw	r0, #0
   1a5d0:	movne	r0, #1
   1a5d4:	mvn	r1, #0
   1a5d8:	eor	r0, r0, r1
   1a5dc:	str	r0, [sp, #88]	; 0x58
   1a5e0:	ldr	r0, [sp, #88]	; 0x58
   1a5e4:	tst	r0, #1
   1a5e8:	beq	1a5fc <__assert_fail@plt+0x8ea8>
   1a5ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a5f0:	add	r0, r0, #1
   1a5f4:	str	r0, [fp, #-68]	; 0xffffffbc
   1a5f8:	b	1a588 <__assert_fail@plt+0x8e34>
   1a5fc:	b	1a670 <__assert_fail@plt+0x8f1c>
   1a600:	b	1a604 <__assert_fail@plt+0x8eb0>
   1a604:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a608:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a60c:	cmp	r0, r1
   1a610:	movw	r0, #0
   1a614:	str	r0, [sp, #84]	; 0x54
   1a618:	bge	1a650 <__assert_fail@plt+0x8efc>
   1a61c:	ldr	r0, [sp, #176]	; 0xb0
   1a620:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a624:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a628:	add	r1, r1, r2
   1a62c:	ldrb	r1, [r1]
   1a630:	add	r0, r0, r1
   1a634:	ldrsb	r0, [r0]
   1a638:	cmp	r0, #0
   1a63c:	movw	r0, #0
   1a640:	movne	r0, #1
   1a644:	mvn	r1, #0
   1a648:	eor	r0, r0, r1
   1a64c:	str	r0, [sp, #84]	; 0x54
   1a650:	ldr	r0, [sp, #84]	; 0x54
   1a654:	tst	r0, #1
   1a658:	beq	1a66c <__assert_fail@plt+0x8f18>
   1a65c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a660:	add	r0, r0, #1
   1a664:	str	r0, [fp, #-68]	; 0xffffffbc
   1a668:	b	1a604 <__assert_fail@plt+0x8eb0>
   1a66c:	b	1a670 <__assert_fail@plt+0x8f1c>
   1a670:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a674:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a678:	cmp	r0, r1
   1a67c:	bne	1a710 <__assert_fail@plt+0x8fbc>
   1a680:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a684:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a688:	cmp	r0, r1
   1a68c:	blt	1a69c <__assert_fail@plt+0x8f48>
   1a690:	movw	r0, #0
   1a694:	str	r0, [sp, #80]	; 0x50
   1a698:	b	1a6b0 <__assert_fail@plt+0x8f5c>
   1a69c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a6a4:	add	r0, r0, r1
   1a6a8:	ldrb	r0, [r0]
   1a6ac:	str	r0, [sp, #80]	; 0x50
   1a6b0:	ldr	r0, [sp, #80]	; 0x50
   1a6b4:	str	r0, [fp, #-84]	; 0xffffffac
   1a6b8:	ldr	r0, [sp, #176]	; 0xb0
   1a6bc:	ldr	r1, [sp, #172]	; 0xac
   1a6c0:	movw	r2, #0
   1a6c4:	cmp	r1, r2
   1a6c8:	str	r0, [sp, #76]	; 0x4c
   1a6cc:	beq	1a6e8 <__assert_fail@plt+0x8f94>
   1a6d0:	ldr	r0, [sp, #172]	; 0xac
   1a6d4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a6d8:	add	r0, r0, r1
   1a6dc:	ldrb	r0, [r0]
   1a6e0:	str	r0, [sp, #72]	; 0x48
   1a6e4:	b	1a6f0 <__assert_fail@plt+0x8f9c>
   1a6e8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a6ec:	str	r0, [sp, #72]	; 0x48
   1a6f0:	ldr	r0, [sp, #72]	; 0x48
   1a6f4:	ldr	r1, [sp, #76]	; 0x4c
   1a6f8:	add	r0, r1, r0
   1a6fc:	ldrsb	r0, [r0]
   1a700:	cmp	r0, #0
   1a704:	bne	1a70c <__assert_fail@plt+0x8fb8>
   1a708:	b	1ae58 <__assert_fail@plt+0x9704>
   1a70c:	b	1a710 <__assert_fail@plt+0x8fbc>
   1a710:	b	1a8d4 <__assert_fail@plt+0x9180>
   1a714:	b	1a718 <__assert_fail@plt+0x8fc4>
   1a718:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a71c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a720:	cmp	r0, r1
   1a724:	blt	1a7c8 <__assert_fail@plt+0x9074>
   1a728:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a72c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a730:	cmp	r0, r1
   1a734:	blt	1a744 <__assert_fail@plt+0x8ff0>
   1a738:	movw	r0, #0
   1a73c:	str	r0, [sp, #68]	; 0x44
   1a740:	b	1a758 <__assert_fail@plt+0x9004>
   1a744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a748:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a74c:	add	r0, r0, r1
   1a750:	ldrb	r0, [r0]
   1a754:	str	r0, [sp, #68]	; 0x44
   1a758:	ldr	r0, [sp, #68]	; 0x44
   1a75c:	str	r0, [fp, #-84]	; 0xffffffac
   1a760:	ldr	r0, [sp, #176]	; 0xb0
   1a764:	ldr	r1, [sp, #172]	; 0xac
   1a768:	movw	r2, #0
   1a76c:	cmp	r1, r2
   1a770:	str	r0, [sp, #64]	; 0x40
   1a774:	beq	1a790 <__assert_fail@plt+0x903c>
   1a778:	ldr	r0, [sp, #172]	; 0xac
   1a77c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a780:	add	r0, r0, r1
   1a784:	ldrb	r0, [r0]
   1a788:	str	r0, [sp, #60]	; 0x3c
   1a78c:	b	1a798 <__assert_fail@plt+0x9044>
   1a790:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a794:	str	r0, [sp, #60]	; 0x3c
   1a798:	ldr	r0, [sp, #60]	; 0x3c
   1a79c:	ldr	r1, [sp, #64]	; 0x40
   1a7a0:	add	r0, r1, r0
   1a7a4:	ldrsb	r0, [r0]
   1a7a8:	cmp	r0, #0
   1a7ac:	beq	1a7b4 <__assert_fail@plt+0x9060>
   1a7b0:	b	1a7c8 <__assert_fail@plt+0x9074>
   1a7b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a7b8:	mvn	r1, #0
   1a7bc:	add	r0, r0, r1
   1a7c0:	str	r0, [fp, #-68]	; 0xffffffbc
   1a7c4:	b	1a718 <__assert_fail@plt+0x8fc4>
   1a7c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a7cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a7d0:	cmp	r0, r1
   1a7d4:	bge	1a7dc <__assert_fail@plt+0x9088>
   1a7d8:	b	1ae58 <__assert_fail@plt+0x9704>
   1a7dc:	b	1a8d4 <__assert_fail@plt+0x9180>
   1a7e0:	b	1a7e4 <__assert_fail@plt+0x9090>
   1a7e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a7e8:	ldr	r1, [sp, #204]	; 0xcc
   1a7ec:	sub	r0, r0, r1
   1a7f0:	str	r0, [sp, #168]	; 0xa8
   1a7f4:	ldr	r0, [sp, #168]	; 0xa8
   1a7f8:	ldr	r1, [sp, #212]	; 0xd4
   1a7fc:	cmp	r0, r1
   1a800:	bcc	1a838 <__assert_fail@plt+0x90e4>
   1a804:	add	r0, sp, #180	; 0xb4
   1a808:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a80c:	ldr	r2, [fp, #24]
   1a810:	bl	26d90 <__assert_fail@plt+0x1563c>
   1a814:	str	r0, [fp, #-40]	; 0xffffffd8
   1a818:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a81c:	cmp	r0, #0
   1a820:	beq	1a828 <__assert_fail@plt+0x90d4>
   1a824:	b	1ae58 <__assert_fail@plt+0x9704>
   1a828:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a82c:	ldr	r1, [sp, #204]	; 0xcc
   1a830:	sub	r0, r0, r1
   1a834:	str	r0, [sp, #168]	; 0xa8
   1a838:	ldr	r0, [sp, #168]	; 0xa8
   1a83c:	ldr	r1, [sp, #208]	; 0xd0
   1a840:	cmp	r0, r1
   1a844:	bcs	1a860 <__assert_fail@plt+0x910c>
   1a848:	ldr	r0, [sp, #184]	; 0xb8
   1a84c:	ldr	r1, [sp, #168]	; 0xa8
   1a850:	add	r0, r0, r1
   1a854:	ldrb	r0, [r0]
   1a858:	str	r0, [sp, #56]	; 0x38
   1a85c:	b	1a86c <__assert_fail@plt+0x9118>
   1a860:	movw	r0, #0
   1a864:	str	r0, [sp, #56]	; 0x38
   1a868:	b	1a86c <__assert_fail@plt+0x9118>
   1a86c:	ldr	r0, [sp, #56]	; 0x38
   1a870:	str	r0, [fp, #-84]	; 0xffffffac
   1a874:	ldr	r0, [sp, #176]	; 0xb0
   1a878:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a87c:	add	r0, r0, r1
   1a880:	ldrsb	r0, [r0]
   1a884:	cmp	r0, #0
   1a888:	beq	1a890 <__assert_fail@plt+0x913c>
   1a88c:	b	1a8d0 <__assert_fail@plt+0x917c>
   1a890:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a894:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a898:	add	r0, r1, r0
   1a89c:	str	r0, [fp, #-68]	; 0xffffffbc
   1a8a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a8a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a8a8:	cmp	r0, r1
   1a8ac:	blt	1a8c0 <__assert_fail@plt+0x916c>
   1a8b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a8b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a8b8:	cmp	r0, r1
   1a8bc:	ble	1a8cc <__assert_fail@plt+0x9178>
   1a8c0:	movw	r0, #1
   1a8c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a8c8:	b	1ae58 <__assert_fail@plt+0x9704>
   1a8cc:	b	1a7e4 <__assert_fail@plt+0x9090>
   1a8d0:	b	1a8d4 <__assert_fail@plt+0x9180>
   1a8d4:	add	r0, sp, #180	; 0xb4
   1a8d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a8dc:	ldr	r2, [fp, #24]
   1a8e0:	bl	26d90 <__assert_fail@plt+0x1563c>
   1a8e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a8e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8ec:	cmp	r0, #0
   1a8f0:	beq	1a8f8 <__assert_fail@plt+0x91a4>
   1a8f4:	b	1ae58 <__assert_fail@plt+0x9704>
   1a8f8:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   1a8fc:	tst	r0, #1
   1a900:	bne	1a928 <__assert_fail@plt+0x91d4>
   1a904:	ldr	r0, [sp, #208]	; 0xd0
   1a908:	movw	r1, #0
   1a90c:	cmp	r1, r0
   1a910:	beq	1a928 <__assert_fail@plt+0x91d4>
   1a914:	ldr	r0, [sp, #188]	; 0xbc
   1a918:	ldr	r0, [r0]
   1a91c:	cmn	r0, #1
   1a920:	bne	1a928 <__assert_fail@plt+0x91d4>
   1a924:	b	1aaac <__assert_fail@plt+0x9358>
   1a928:	movw	r0, #0
   1a92c:	str	r0, [sp, #300]	; 0x12c
   1a930:	str	r0, [sp, #288]	; 0x120
   1a934:	str	r0, [sp, #284]	; 0x11c
   1a938:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a93c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a940:	ldr	r2, [fp, #8]
   1a944:	cmp	r1, r2
   1a948:	str	r0, [sp, #52]	; 0x34
   1a94c:	bgt	1a95c <__assert_fail@plt+0x9208>
   1a950:	sub	r0, fp, #68	; 0x44
   1a954:	str	r0, [sp, #48]	; 0x30
   1a958:	b	1a968 <__assert_fail@plt+0x9214>
   1a95c:	movw	r0, #0
   1a960:	str	r0, [sp, #48]	; 0x30
   1a964:	b	1a968 <__assert_fail@plt+0x9214>
   1a968:	ldr	r0, [sp, #48]	; 0x30
   1a96c:	add	r1, sp, #180	; 0xb4
   1a970:	str	r0, [sp, #44]	; 0x2c
   1a974:	mov	r0, r1
   1a978:	ldr	r1, [sp, #52]	; 0x34
   1a97c:	and	r1, r1, #1
   1a980:	ldr	r2, [sp, #44]	; 0x2c
   1a984:	bl	2797c <__assert_fail@plt+0x16228>
   1a988:	str	r0, [fp, #-72]	; 0xffffffb8
   1a98c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a990:	cmn	r0, #1
   1a994:	beq	1aaa4 <__assert_fail@plt+0x9350>
   1a998:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a99c:	cmn	r0, #2
   1a9a0:	bne	1a9b0 <__assert_fail@plt+0x925c>
   1a9a4:	movw	r0, #12
   1a9a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a9ac:	b	1ae58 <__assert_fail@plt+0x9704>
   1a9b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a9b4:	str	r0, [sp, #272]	; 0x110
   1a9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9bc:	ldrb	r0, [r0, #28]
   1a9c0:	ubfx	r0, r0, #4, #1
   1a9c4:	and	r0, r0, #255	; 0xff
   1a9c8:	cmp	r0, #0
   1a9cc:	bne	1a9dc <__assert_fail@plt+0x9288>
   1a9d0:	ldr	r0, [fp, #16]
   1a9d4:	cmp	r0, #1
   1a9d8:	bhi	1a9ec <__assert_fail@plt+0x9298>
   1a9dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9e0:	ldr	r0, [r0, #76]	; 0x4c
   1a9e4:	cmp	r0, #0
   1a9e8:	beq	1aa14 <__assert_fail@plt+0x92c0>
   1a9ec:	ldr	r0, [sp, #280]	; 0x118
   1a9f0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a9f4:	add	r0, r0, r1, lsl #2
   1a9f8:	ldr	r0, [r0]
   1a9fc:	str	r0, [sp, #164]	; 0xa4
   1aa00:	ldr	r1, [sp, #164]	; 0xa4
   1aa04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1aa08:	add	r0, sp, #180	; 0xb4
   1aa0c:	bl	27f08 <__assert_fail@plt+0x167b4>
   1aa10:	str	r0, [sp, #276]	; 0x114
   1aa14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa18:	ldrb	r0, [r0, #28]
   1aa1c:	ubfx	r0, r0, #4, #1
   1aa20:	and	r0, r0, #255	; 0xff
   1aa24:	cmp	r0, #0
   1aa28:	bne	1aa50 <__assert_fail@plt+0x92fc>
   1aa2c:	ldr	r0, [fp, #16]
   1aa30:	cmp	r0, #1
   1aa34:	bls	1aa50 <__assert_fail@plt+0x92fc>
   1aa38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa3c:	ldrb	r0, [r0, #88]	; 0x58
   1aa40:	and	r0, r0, #1
   1aa44:	and	r0, r0, #255	; 0xff
   1aa48:	cmp	r0, #0
   1aa4c:	bne	1aa60 <__assert_fail@plt+0x930c>
   1aa50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa54:	ldr	r0, [r0, #76]	; 0x4c
   1aa58:	cmp	r0, #0
   1aa5c:	beq	1aa98 <__assert_fail@plt+0x9344>
   1aa60:	add	r0, sp, #180	; 0xb4
   1aa64:	bl	27fe0 <__assert_fail@plt+0x1688c>
   1aa68:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa70:	cmp	r0, #0
   1aa74:	bne	1aa7c <__assert_fail@plt+0x9328>
   1aa78:	b	1aac0 <__assert_fail@plt+0x936c>
   1aa7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa80:	cmp	r0, #1
   1aa84:	beq	1aa8c <__assert_fail@plt+0x9338>
   1aa88:	b	1ae58 <__assert_fail@plt+0x9704>
   1aa8c:	mvn	r0, #0
   1aa90:	str	r0, [fp, #-72]	; 0xffffffb8
   1aa94:	b	1aa9c <__assert_fail@plt+0x9348>
   1aa98:	b	1aac0 <__assert_fail@plt+0x936c>
   1aa9c:	b	1aaa0 <__assert_fail@plt+0x934c>
   1aaa0:	b	1aaa4 <__assert_fail@plt+0x9350>
   1aaa4:	add	r0, sp, #180	; 0xb4
   1aaa8:	bl	2832c <__assert_fail@plt+0x16bd8>
   1aaac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aab0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1aab4:	add	r0, r1, r0
   1aab8:	str	r0, [fp, #-68]	; 0xffffffbc
   1aabc:	b	1a51c <__assert_fail@plt+0x8dc8>
   1aac0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aac4:	cmn	r0, #1
   1aac8:	beq	1aad0 <__assert_fail@plt+0x937c>
   1aacc:	b	1aad0 <__assert_fail@plt+0x937c>
   1aad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aad4:	cmp	r0, #0
   1aad8:	bne	1aae0 <__assert_fail@plt+0x938c>
   1aadc:	b	1aae0 <__assert_fail@plt+0x938c>
   1aae0:	ldr	r0, [fp, #16]
   1aae4:	cmp	r0, #0
   1aae8:	bls	1ae54 <__assert_fail@plt+0x9700>
   1aaec:	movw	r0, #1
   1aaf0:	str	r0, [sp, #160]	; 0xa0
   1aaf4:	ldr	r0, [sp, #160]	; 0xa0
   1aaf8:	ldr	r1, [fp, #16]
   1aafc:	cmp	r0, r1
   1ab00:	bcs	1ab3c <__assert_fail@plt+0x93e8>
   1ab04:	ldr	r0, [fp, #20]
   1ab08:	ldr	r1, [sp, #160]	; 0xa0
   1ab0c:	add	r0, r0, r1, lsl #3
   1ab10:	mvn	r1, #0
   1ab14:	str	r1, [r0, #4]
   1ab18:	ldr	r0, [fp, #20]
   1ab1c:	ldr	r1, [sp, #160]	; 0xa0
   1ab20:	add	r0, r0, r1, lsl #3
   1ab24:	mvn	r1, #0
   1ab28:	str	r1, [r0]
   1ab2c:	ldr	r0, [sp, #160]	; 0xa0
   1ab30:	add	r0, r0, #1
   1ab34:	str	r0, [sp, #160]	; 0xa0
   1ab38:	b	1aaf4 <__assert_fail@plt+0x93a0>
   1ab3c:	ldr	r0, [fp, #20]
   1ab40:	mov	r1, #0
   1ab44:	str	r1, [r0]
   1ab48:	ldr	r0, [sp, #272]	; 0x110
   1ab4c:	ldr	r1, [fp, #20]
   1ab50:	str	r0, [r1, #4]
   1ab54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab58:	ldrb	r0, [r0, #28]
   1ab5c:	ubfx	r0, r0, #4, #1
   1ab60:	and	r0, r0, #255	; 0xff
   1ab64:	cmp	r0, #0
   1ab68:	bne	1ac0c <__assert_fail@plt+0x94b8>
   1ab6c:	ldr	r0, [fp, #16]
   1ab70:	cmp	r0, #1
   1ab74:	bls	1ac0c <__assert_fail@plt+0x94b8>
   1ab78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab7c:	ldr	r2, [fp, #16]
   1ab80:	ldr	r3, [fp, #20]
   1ab84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab88:	ldrb	r1, [r1, #88]	; 0x58
   1ab8c:	and	r1, r1, #1
   1ab90:	and	r1, r1, #255	; 0xff
   1ab94:	cmp	r1, #0
   1ab98:	movw	r1, #0
   1ab9c:	str	r0, [sp, #40]	; 0x28
   1aba0:	str	r2, [sp, #36]	; 0x24
   1aba4:	str	r3, [sp, #32]
   1aba8:	str	r1, [sp, #28]
   1abac:	beq	1abc8 <__assert_fail@plt+0x9474>
   1abb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abb4:	ldr	r0, [r0, #76]	; 0x4c
   1abb8:	cmp	r0, #0
   1abbc:	movw	r0, #0
   1abc0:	movgt	r0, #1
   1abc4:	str	r0, [sp, #28]
   1abc8:	ldr	r0, [sp, #28]
   1abcc:	ldr	r1, [sp, #40]	; 0x28
   1abd0:	str	r0, [sp, #24]
   1abd4:	mov	r0, r1
   1abd8:	add	r1, sp, #180	; 0xb4
   1abdc:	ldr	r2, [sp, #36]	; 0x24
   1abe0:	ldr	r3, [sp, #32]
   1abe4:	ldr	ip, [sp, #24]
   1abe8:	and	lr, ip, #1
   1abec:	str	lr, [sp]
   1abf0:	bl	28438 <__assert_fail@plt+0x16ce4>
   1abf4:	str	r0, [fp, #-40]	; 0xffffffd8
   1abf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1abfc:	cmp	r0, #0
   1ac00:	beq	1ac08 <__assert_fail@plt+0x94b4>
   1ac04:	b	1ae58 <__assert_fail@plt+0x9704>
   1ac08:	b	1ac0c <__assert_fail@plt+0x94b8>
   1ac0c:	movw	r0, #0
   1ac10:	str	r0, [sp, #160]	; 0xa0
   1ac14:	ldr	r0, [sp, #160]	; 0xa0
   1ac18:	ldr	r1, [fp, #16]
   1ac1c:	cmp	r0, r1
   1ac20:	bcs	1ad40 <__assert_fail@plt+0x95ec>
   1ac24:	ldr	r0, [fp, #20]
   1ac28:	ldr	r1, [sp, #160]	; 0xa0
   1ac2c:	add	r0, r0, r1, lsl #3
   1ac30:	ldr	r0, [r0]
   1ac34:	cmn	r0, #1
   1ac38:	beq	1ad2c <__assert_fail@plt+0x95d8>
   1ac3c:	ldrb	r0, [sp, #256]	; 0x100
   1ac40:	cmp	r0, #0
   1ac44:	beq	1acf8 <__assert_fail@plt+0x95a4>
   1ac48:	ldr	r0, [fp, #20]
   1ac4c:	ldr	r1, [sp, #160]	; 0xa0
   1ac50:	add	r0, r0, r1, lsl #3
   1ac54:	ldr	r0, [r0]
   1ac58:	ldr	r1, [sp, #208]	; 0xd0
   1ac5c:	cmp	r0, r1
   1ac60:	bne	1ac70 <__assert_fail@plt+0x951c>
   1ac64:	ldr	r0, [sp, #212]	; 0xd4
   1ac68:	str	r0, [sp, #20]
   1ac6c:	b	1ac8c <__assert_fail@plt+0x9538>
   1ac70:	ldr	r0, [sp, #192]	; 0xc0
   1ac74:	ldr	r1, [fp, #20]
   1ac78:	ldr	r2, [sp, #160]	; 0xa0
   1ac7c:	ldr	r1, [r1, r2, lsl #3]
   1ac80:	add	r0, r0, r1, lsl #2
   1ac84:	ldr	r0, [r0]
   1ac88:	str	r0, [sp, #20]
   1ac8c:	ldr	r0, [sp, #20]
   1ac90:	ldr	r1, [fp, #20]
   1ac94:	ldr	r2, [sp, #160]	; 0xa0
   1ac98:	str	r0, [r1, r2, lsl #3]
   1ac9c:	ldr	r0, [fp, #20]
   1aca0:	ldr	r1, [sp, #160]	; 0xa0
   1aca4:	add	r0, r0, r1, lsl #3
   1aca8:	ldr	r0, [r0, #4]
   1acac:	ldr	r1, [sp, #208]	; 0xd0
   1acb0:	cmp	r0, r1
   1acb4:	bne	1acc4 <__assert_fail@plt+0x9570>
   1acb8:	ldr	r0, [sp, #212]	; 0xd4
   1acbc:	str	r0, [sp, #16]
   1acc0:	b	1ace4 <__assert_fail@plt+0x9590>
   1acc4:	ldr	r0, [sp, #192]	; 0xc0
   1acc8:	ldr	r1, [fp, #20]
   1accc:	ldr	r2, [sp, #160]	; 0xa0
   1acd0:	add	r1, r1, r2, lsl #3
   1acd4:	ldr	r1, [r1, #4]
   1acd8:	add	r0, r0, r1, lsl #2
   1acdc:	ldr	r0, [r0]
   1ace0:	str	r0, [sp, #16]
   1ace4:	ldr	r0, [sp, #16]
   1ace8:	ldr	r1, [fp, #20]
   1acec:	ldr	r2, [sp, #160]	; 0xa0
   1acf0:	add	r1, r1, r2, lsl #3
   1acf4:	str	r0, [r1, #4]
   1acf8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1acfc:	ldr	r1, [fp, #20]
   1ad00:	ldr	r2, [sp, #160]	; 0xa0
   1ad04:	ldr	r3, [r1, r2, lsl #3]
   1ad08:	add	r0, r3, r0
   1ad0c:	str	r0, [r1, r2, lsl #3]
   1ad10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ad14:	ldr	r1, [fp, #20]
   1ad18:	ldr	r2, [sp, #160]	; 0xa0
   1ad1c:	add	r1, r1, r2, lsl #3
   1ad20:	ldr	r2, [r1, #4]
   1ad24:	add	r0, r2, r0
   1ad28:	str	r0, [r1, #4]
   1ad2c:	b	1ad30 <__assert_fail@plt+0x95dc>
   1ad30:	ldr	r0, [sp, #160]	; 0xa0
   1ad34:	add	r0, r0, #1
   1ad38:	str	r0, [sp, #160]	; 0xa0
   1ad3c:	b	1ac14 <__assert_fail@plt+0x94c0>
   1ad40:	movw	r0, #0
   1ad44:	str	r0, [sp, #160]	; 0xa0
   1ad48:	ldr	r0, [sp, #160]	; 0xa0
   1ad4c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ad50:	cmp	r0, r1
   1ad54:	bge	1ad9c <__assert_fail@plt+0x9648>
   1ad58:	ldr	r0, [fp, #20]
   1ad5c:	ldr	r1, [fp, #16]
   1ad60:	ldr	r2, [sp, #160]	; 0xa0
   1ad64:	add	r1, r1, r2
   1ad68:	mvn	r2, #0
   1ad6c:	str	r2, [r0, r1, lsl #3]
   1ad70:	ldr	r0, [fp, #20]
   1ad74:	ldr	r1, [fp, #16]
   1ad78:	ldr	r2, [sp, #160]	; 0xa0
   1ad7c:	add	r1, r1, r2
   1ad80:	add	r0, r0, r1, lsl #3
   1ad84:	mvn	r1, #0
   1ad88:	str	r1, [r0, #4]
   1ad8c:	ldr	r0, [sp, #160]	; 0xa0
   1ad90:	add	r0, r0, #1
   1ad94:	str	r0, [sp, #160]	; 0xa0
   1ad98:	b	1ad48 <__assert_fail@plt+0x95f4>
   1ad9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ada0:	ldr	r0, [r0, #132]	; 0x84
   1ada4:	movw	r1, #0
   1ada8:	cmp	r0, r1
   1adac:	beq	1ae50 <__assert_fail@plt+0x96fc>
   1adb0:	movw	r0, #0
   1adb4:	str	r0, [sp, #160]	; 0xa0
   1adb8:	ldr	r0, [sp, #160]	; 0xa0
   1adbc:	add	r0, r0, #1
   1adc0:	ldr	r1, [fp, #16]
   1adc4:	cmp	r0, r1
   1adc8:	bcs	1ae4c <__assert_fail@plt+0x96f8>
   1adcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1add0:	ldr	r0, [r0, #132]	; 0x84
   1add4:	ldr	r1, [sp, #160]	; 0xa0
   1add8:	add	r0, r0, r1, lsl #2
   1addc:	ldr	r0, [r0]
   1ade0:	ldr	r1, [sp, #160]	; 0xa0
   1ade4:	cmp	r0, r1
   1ade8:	beq	1ae38 <__assert_fail@plt+0x96e4>
   1adec:	ldr	r0, [fp, #20]
   1adf0:	ldr	r1, [sp, #160]	; 0xa0
   1adf4:	add	r2, r0, r1, lsl #3
   1adf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1adfc:	ldr	r3, [r3, #132]	; 0x84
   1ae00:	ldr	r1, [r3, r1, lsl #2]
   1ae04:	add	r0, r0, r1, lsl #3
   1ae08:	ldr	r0, [r0, #8]
   1ae0c:	str	r0, [r2, #8]
   1ae10:	ldr	r0, [fp, #20]
   1ae14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ae18:	ldr	r1, [r1, #132]	; 0x84
   1ae1c:	ldr	r2, [sp, #160]	; 0xa0
   1ae20:	ldr	r1, [r1, r2, lsl #2]
   1ae24:	add	r1, r0, r1, lsl #3
   1ae28:	ldr	r1, [r1, #12]
   1ae2c:	add	r2, r2, #1
   1ae30:	add	r0, r0, r2, lsl #3
   1ae34:	str	r1, [r0, #4]
   1ae38:	b	1ae3c <__assert_fail@plt+0x96e8>
   1ae3c:	ldr	r0, [sp, #160]	; 0xa0
   1ae40:	add	r0, r0, #1
   1ae44:	str	r0, [sp, #160]	; 0xa0
   1ae48:	b	1adb8 <__assert_fail@plt+0x9664>
   1ae4c:	b	1ae50 <__assert_fail@plt+0x96fc>
   1ae50:	b	1ae54 <__assert_fail@plt+0x9700>
   1ae54:	b	1ae58 <__assert_fail@plt+0x9704>
   1ae58:	ldr	r0, [sp, #280]	; 0x118
   1ae5c:	bl	1604c <__assert_fail@plt+0x48f8>
   1ae60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae64:	ldr	r0, [r0, #76]	; 0x4c
   1ae68:	cmp	r0, #0
   1ae6c:	beq	1ae78 <__assert_fail@plt+0x9724>
   1ae70:	add	r0, sp, #180	; 0xb4
   1ae74:	bl	2880c <__assert_fail@plt+0x170b8>
   1ae78:	add	r0, sp, #180	; 0xb4
   1ae7c:	bl	1c1e8 <__assert_fail@plt+0xaa94>
   1ae80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae84:	str	r0, [fp, #-20]	; 0xffffffec
   1ae88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae8c:	sub	sp, fp, #16
   1ae90:	pop	{r4, r5, r6, sl, fp, pc}
   1ae94:	svccc	0x00ffffff
   1ae98:	push	{r4, r5, fp, lr}
   1ae9c:	add	fp, sp, #8
   1aea0:	sub	sp, sp, #40	; 0x28
   1aea4:	ldr	ip, [fp, #8]
   1aea8:	str	r0, [fp, #-12]
   1aeac:	str	r1, [fp, #-16]
   1aeb0:	str	r2, [fp, #-20]	; 0xffffffec
   1aeb4:	str	r3, [sp, #24]
   1aeb8:	ldr	r0, [fp, #-12]
   1aebc:	ldr	r1, [fp, #-16]
   1aec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aec4:	ldr	r3, [sp, #24]
   1aec8:	ldr	lr, [fp, #-20]	; 0xffffffec
   1aecc:	ldr	r4, [fp, #8]
   1aed0:	movw	r5, #0
   1aed4:	str	r5, [sp]
   1aed8:	str	lr, [sp, #4]
   1aedc:	str	r4, [sp, #8]
   1aee0:	movw	lr, #1
   1aee4:	and	lr, lr, #1
   1aee8:	str	lr, [sp, #12]
   1aeec:	str	ip, [sp, #20]
   1aef0:	bl	1aefc <__assert_fail@plt+0x97a8>
   1aef4:	sub	sp, fp, #8
   1aef8:	pop	{r4, r5, fp, pc}
   1aefc:	push	{r4, r5, r6, sl, fp, lr}
   1af00:	add	fp, sp, #16
   1af04:	sub	sp, sp, #120	; 0x78
   1af08:	ldr	ip, [fp, #20]
   1af0c:	ldr	lr, [fp, #16]
   1af10:	ldr	r4, [fp, #12]
   1af14:	ldr	r5, [fp, #8]
   1af18:	str	r0, [fp, #-24]	; 0xffffffe8
   1af1c:	str	r1, [fp, #-28]	; 0xffffffe4
   1af20:	str	r2, [fp, #-32]	; 0xffffffe0
   1af24:	str	r3, [fp, #-36]	; 0xffffffdc
   1af28:	and	r0, ip, #1
   1af2c:	strb	r0, [fp, #-37]	; 0xffffffdb
   1af30:	movw	r0, #0
   1af34:	str	r0, [fp, #-60]	; 0xffffffc4
   1af38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af3c:	ldr	r0, [r0]
   1af40:	str	r0, [fp, #-64]	; 0xffffffc0
   1af44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af48:	ldr	r1, [fp, #8]
   1af4c:	add	r0, r0, r1
   1af50:	str	r0, [sp, #68]	; 0x44
   1af54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af58:	cmp	r0, #0
   1af5c:	movw	r0, #1
   1af60:	str	r5, [sp, #64]	; 0x40
   1af64:	str	r4, [sp, #60]	; 0x3c
   1af68:	str	lr, [sp, #56]	; 0x38
   1af6c:	str	r0, [sp, #52]	; 0x34
   1af70:	blt	1af8c <__assert_fail@plt+0x9838>
   1af74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1af7c:	cmp	r0, r1
   1af80:	movw	r0, #0
   1af84:	movgt	r0, #1
   1af88:	str	r0, [sp, #52]	; 0x34
   1af8c:	ldr	r0, [sp, #52]	; 0x34
   1af90:	tst	r0, #1
   1af94:	beq	1afa4 <__assert_fail@plt+0x9850>
   1af98:	mvn	r0, #0
   1af9c:	str	r0, [fp, #-20]	; 0xffffffec
   1afa0:	b	1b3c8 <__assert_fail@plt+0x9c74>
   1afa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1afa8:	ldr	r1, [sp, #68]	; 0x44
   1afac:	cmp	r0, r1
   1afb0:	movw	r0, #1
   1afb4:	str	r0, [sp, #48]	; 0x30
   1afb8:	blt	1aff4 <__assert_fail@plt+0x98a0>
   1afbc:	ldr	r0, [fp, #8]
   1afc0:	movw	r1, #0
   1afc4:	cmp	r1, r0
   1afc8:	movw	r0, #0
   1afcc:	str	r0, [sp, #44]	; 0x2c
   1afd0:	bgt	1afec <__assert_fail@plt+0x9898>
   1afd4:	ldr	r0, [sp, #68]	; 0x44
   1afd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1afdc:	cmp	r0, r1
   1afe0:	movw	r0, #0
   1afe4:	movlt	r0, #1
   1afe8:	str	r0, [sp, #44]	; 0x2c
   1afec:	ldr	r0, [sp, #44]	; 0x2c
   1aff0:	str	r0, [sp, #48]	; 0x30
   1aff4:	ldr	r0, [sp, #48]	; 0x30
   1aff8:	tst	r0, #1
   1affc:	beq	1b00c <__assert_fail@plt+0x98b8>
   1b000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b004:	str	r0, [sp, #68]	; 0x44
   1b008:	b	1b06c <__assert_fail@plt+0x9918>
   1b00c:	ldr	r0, [sp, #68]	; 0x44
   1b010:	cmp	r0, #0
   1b014:	movw	r0, #1
   1b018:	str	r0, [sp, #40]	; 0x28
   1b01c:	blt	1b054 <__assert_fail@plt+0x9900>
   1b020:	ldr	r0, [fp, #8]
   1b024:	cmp	r0, #0
   1b028:	movw	r0, #0
   1b02c:	str	r0, [sp, #36]	; 0x24
   1b030:	bge	1b04c <__assert_fail@plt+0x98f8>
   1b034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b038:	ldr	r1, [sp, #68]	; 0x44
   1b03c:	cmp	r0, r1
   1b040:	movw	r0, #0
   1b044:	movle	r0, #1
   1b048:	str	r0, [sp, #36]	; 0x24
   1b04c:	ldr	r0, [sp, #36]	; 0x24
   1b050:	str	r0, [sp, #40]	; 0x28
   1b054:	ldr	r0, [sp, #40]	; 0x28
   1b058:	tst	r0, #1
   1b05c:	beq	1b068 <__assert_fail@plt+0x9914>
   1b060:	movw	r0, #0
   1b064:	str	r0, [sp, #68]	; 0x44
   1b068:	b	1b06c <__assert_fail@plt+0x9918>
   1b06c:	movw	r0, #0
   1b070:	movt	r0, #0
   1b074:	cmp	r0, #0
   1b078:	bne	1b094 <__assert_fail@plt+0x9940>
   1b07c:	b	1b080 <__assert_fail@plt+0x992c>
   1b080:	movw	r0, #0
   1b084:	movt	r0, #0
   1b088:	cmp	r0, #0
   1b08c:	beq	1b0a8 <__assert_fail@plt+0x9954>
   1b090:	b	1b094 <__assert_fail@plt+0x9940>
   1b094:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b098:	add	r0, r0, #136	; 0x88
   1b09c:	bl	11460 <pthread_mutex_lock@plt>
   1b0a0:	str	r0, [sp, #32]
   1b0a4:	b	1b0ac <__assert_fail@plt+0x9958>
   1b0a8:	b	1b0ac <__assert_fail@plt+0x9958>
   1b0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0b0:	ldrb	r0, [r0, #28]
   1b0b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b0b8:	orr	r2, r1, #1
   1b0bc:	mov	r3, #1
   1b0c0:	tst	r3, r0, lsr #5
   1b0c4:	movne	r1, r2
   1b0c8:	str	r1, [fp, #-60]	; 0xffffffc4
   1b0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0d0:	ldrb	r0, [r0, #28]
   1b0d4:	ubfx	r0, r0, #6, #1
   1b0d8:	and	r0, r0, #255	; 0xff
   1b0dc:	cmp	r0, #0
   1b0e0:	movw	r0, #0
   1b0e4:	movne	r0, #1
   1b0e8:	tst	r0, #1
   1b0ec:	movw	r0, #2
   1b0f0:	moveq	r0, #0
   1b0f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b0f8:	orr	r0, r1, r0
   1b0fc:	str	r0, [fp, #-60]	; 0xffffffc4
   1b100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b104:	ldr	r1, [sp, #68]	; 0x44
   1b108:	cmp	r0, r1
   1b10c:	bge	1b148 <__assert_fail@plt+0x99f4>
   1b110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b114:	ldr	r0, [r0, #16]
   1b118:	movw	r1, #0
   1b11c:	cmp	r0, r1
   1b120:	beq	1b148 <__assert_fail@plt+0x99f4>
   1b124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b128:	ldrb	r0, [r0, #28]
   1b12c:	ubfx	r0, r0, #3, #1
   1b130:	and	r0, r0, #255	; 0xff
   1b134:	cmp	r0, #0
   1b138:	bne	1b148 <__assert_fail@plt+0x99f4>
   1b13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b140:	bl	18f30 <__assert_fail@plt+0x77dc>
   1b144:	str	r0, [sp, #28]
   1b148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b14c:	ldrb	r0, [r0, #28]
   1b150:	ubfx	r0, r0, #4, #1
   1b154:	and	r0, r0, #255	; 0xff
   1b158:	cmp	r0, #0
   1b15c:	beq	1b168 <__assert_fail@plt+0x9a14>
   1b160:	movw	r0, #0
   1b164:	str	r0, [fp, #16]
   1b168:	ldr	r0, [fp, #16]
   1b16c:	movw	r1, #0
   1b170:	cmp	r0, r1
   1b174:	bne	1b184 <__assert_fail@plt+0x9a30>
   1b178:	movw	r0, #1
   1b17c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b180:	b	1b210 <__assert_fail@plt+0x9abc>
   1b184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b188:	ldrb	r0, [r0, #28]
   1b18c:	ubfx	r0, r0, #1, #2
   1b190:	and	r0, r0, #255	; 0xff
   1b194:	cmp	r0, #2
   1b198:	movw	r0, #0
   1b19c:	str	r0, [sp, #24]
   1b1a0:	bne	1b1c4 <__assert_fail@plt+0x9a70>
   1b1a4:	ldr	r0, [fp, #16]
   1b1a8:	ldr	r0, [r0]
   1b1ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1b0:	ldr	r1, [r1, #24]
   1b1b4:	cmp	r0, r1
   1b1b8:	movw	r0, #0
   1b1bc:	movls	r0, #1
   1b1c0:	str	r0, [sp, #24]
   1b1c4:	ldr	r0, [sp, #24]
   1b1c8:	tst	r0, #1
   1b1cc:	beq	1b1fc <__assert_fail@plt+0x9aa8>
   1b1d0:	ldr	r0, [fp, #16]
   1b1d4:	ldr	r0, [r0]
   1b1d8:	str	r0, [fp, #-52]	; 0xffffffcc
   1b1dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b1e0:	cmp	r0, #1
   1b1e4:	bge	1b1f8 <__assert_fail@plt+0x9aa4>
   1b1e8:	movw	r0, #0
   1b1ec:	str	r0, [fp, #16]
   1b1f0:	movw	r0, #1
   1b1f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b1f8:	b	1b20c <__assert_fail@plt+0x9ab8>
   1b1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b200:	ldr	r0, [r0, #24]
   1b204:	add	r0, r0, #1
   1b208:	str	r0, [fp, #-52]	; 0xffffffcc
   1b20c:	b	1b210 <__assert_fail@plt+0x9abc>
   1b210:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b214:	lsl	r0, r0, #3
   1b218:	bl	38a7c <__assert_fail@plt+0x27328>
   1b21c:	str	r0, [fp, #-48]	; 0xffffffd0
   1b220:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b224:	movw	lr, #0
   1b228:	cmp	r0, lr
   1b22c:	bne	1b23c <__assert_fail@plt+0x9ae8>
   1b230:	mvn	r0, #1
   1b234:	str	r0, [fp, #-56]	; 0xffffffc8
   1b238:	b	1b380 <__assert_fail@plt+0x9c2c>
   1b23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b244:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b24c:	ldr	ip, [sp, #68]	; 0x44
   1b250:	ldr	lr, [fp, #12]
   1b254:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1b258:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1b25c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1b260:	str	ip, [sp]
   1b264:	str	lr, [sp, #4]
   1b268:	str	r4, [sp, #8]
   1b26c:	str	r5, [sp, #12]
   1b270:	str	r6, [sp, #16]
   1b274:	bl	19f80 <__assert_fail@plt+0x882c>
   1b278:	str	r0, [fp, #-44]	; 0xffffffd4
   1b27c:	movw	r0, #0
   1b280:	str	r0, [fp, #-56]	; 0xffffffc8
   1b284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b288:	cmp	r0, #0
   1b28c:	beq	1b2b4 <__assert_fail@plt+0x9b60>
   1b290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b294:	cmp	r0, #1
   1b298:	movw	r0, #0
   1b29c:	moveq	r0, #1
   1b2a0:	tst	r0, #1
   1b2a4:	mvn	r0, #0
   1b2a8:	mvneq	r0, #1
   1b2ac:	str	r0, [fp, #-56]	; 0xffffffc8
   1b2b0:	b	1b320 <__assert_fail@plt+0x9bcc>
   1b2b4:	ldr	r0, [fp, #16]
   1b2b8:	movw	r1, #0
   1b2bc:	cmp	r0, r1
   1b2c0:	beq	1b31c <__assert_fail@plt+0x9bc8>
   1b2c4:	ldr	r0, [fp, #16]
   1b2c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b2cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b2d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2d4:	ldrb	r3, [r3, #28]
   1b2d8:	ubfx	r3, r3, #1, #2
   1b2dc:	bl	26830 <__assert_fail@plt+0x150dc>
   1b2e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2e4:	ldrb	r2, [r1, #28]
   1b2e8:	and	r0, r0, #3
   1b2ec:	and	r2, r2, #249	; 0xf9
   1b2f0:	orr	r0, r2, r0, lsl #1
   1b2f4:	strb	r0, [r1, #28]
   1b2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2fc:	ldrb	r0, [r0, #28]
   1b300:	ubfx	r0, r0, #1, #2
   1b304:	and	r0, r0, #255	; 0xff
   1b308:	cmp	r0, #0
   1b30c:	bne	1b318 <__assert_fail@plt+0x9bc4>
   1b310:	mvn	r0, #1
   1b314:	str	r0, [fp, #-56]	; 0xffffffc8
   1b318:	b	1b31c <__assert_fail@plt+0x9bc8>
   1b31c:	b	1b320 <__assert_fail@plt+0x9bcc>
   1b320:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b324:	cmp	r0, #0
   1b328:	bne	1b378 <__assert_fail@plt+0x9c24>
   1b32c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1b330:	tst	r0, #1
   1b334:	beq	1b368 <__assert_fail@plt+0x9c14>
   1b338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b33c:	ldr	r0, [r0]
   1b340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b344:	cmp	r0, r1
   1b348:	bne	1b350 <__assert_fail@plt+0x9bfc>
   1b34c:	b	1b350 <__assert_fail@plt+0x9bfc>
   1b350:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b354:	ldr	r0, [r0, #4]
   1b358:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b35c:	sub	r0, r0, r1
   1b360:	str	r0, [fp, #-56]	; 0xffffffc8
   1b364:	b	1b374 <__assert_fail@plt+0x9c20>
   1b368:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b36c:	ldr	r0, [r0]
   1b370:	str	r0, [fp, #-56]	; 0xffffffc8
   1b374:	b	1b378 <__assert_fail@plt+0x9c24>
   1b378:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b37c:	bl	1604c <__assert_fail@plt+0x48f8>
   1b380:	movw	r0, #0
   1b384:	movt	r0, #0
   1b388:	cmp	r0, #0
   1b38c:	bne	1b3a8 <__assert_fail@plt+0x9c54>
   1b390:	b	1b394 <__assert_fail@plt+0x9c40>
   1b394:	movw	r0, #0
   1b398:	movt	r0, #0
   1b39c:	cmp	r0, #0
   1b3a0:	beq	1b3bc <__assert_fail@plt+0x9c68>
   1b3a4:	b	1b3a8 <__assert_fail@plt+0x9c54>
   1b3a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b3ac:	add	r0, r0, #136	; 0x88
   1b3b0:	bl	113a0 <pthread_mutex_unlock@plt>
   1b3b4:	str	r0, [sp, #20]
   1b3b8:	b	1b3c0 <__assert_fail@plt+0x9c6c>
   1b3bc:	b	1b3c0 <__assert_fail@plt+0x9c6c>
   1b3c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3c4:	str	r0, [fp, #-20]	; 0xffffffec
   1b3c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b3cc:	sub	sp, fp, #16
   1b3d0:	pop	{r4, r5, r6, sl, fp, pc}
   1b3d4:	push	{r4, r5, r6, sl, fp, lr}
   1b3d8:	add	fp, sp, #16
   1b3dc:	sub	sp, sp, #40	; 0x28
   1b3e0:	ldr	ip, [fp, #12]
   1b3e4:	ldr	lr, [fp, #8]
   1b3e8:	str	r0, [fp, #-20]	; 0xffffffec
   1b3ec:	str	r1, [fp, #-24]	; 0xffffffe8
   1b3f0:	str	r2, [sp, #28]
   1b3f4:	str	r3, [sp, #24]
   1b3f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b3fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b400:	ldr	r2, [sp, #28]
   1b404:	ldr	r3, [sp, #24]
   1b408:	ldr	r4, [fp, #8]
   1b40c:	ldr	r5, [sp, #28]
   1b410:	ldr	r6, [fp, #12]
   1b414:	str	r4, [sp]
   1b418:	str	r5, [sp, #4]
   1b41c:	str	r6, [sp, #8]
   1b420:	movw	r4, #0
   1b424:	and	r4, r4, #1
   1b428:	str	r4, [sp, #12]
   1b42c:	str	lr, [sp, #20]
   1b430:	str	ip, [sp, #16]
   1b434:	bl	1aefc <__assert_fail@plt+0x97a8>
   1b438:	sub	sp, fp, #16
   1b43c:	pop	{r4, r5, r6, sl, fp, pc}
   1b440:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b444:	add	fp, sp, #24
   1b448:	sub	sp, sp, #56	; 0x38
   1b44c:	ldr	ip, [fp, #20]
   1b450:	ldr	lr, [fp, #16]
   1b454:	ldr	r4, [fp, #12]
   1b458:	ldr	r5, [fp, #8]
   1b45c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b460:	str	r1, [fp, #-32]	; 0xffffffe0
   1b464:	str	r2, [fp, #-36]	; 0xffffffdc
   1b468:	str	r3, [sp, #40]	; 0x28
   1b46c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b470:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b474:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b478:	ldr	r3, [sp, #40]	; 0x28
   1b47c:	ldr	r6, [fp, #8]
   1b480:	ldr	r7, [fp, #12]
   1b484:	ldr	r8, [fp, #16]
   1b488:	ldr	r9, [fp, #20]
   1b48c:	str	r6, [sp]
   1b490:	str	r7, [sp, #4]
   1b494:	movw	r6, #0
   1b498:	str	r6, [sp, #8]
   1b49c:	str	r8, [sp, #12]
   1b4a0:	str	r9, [sp, #16]
   1b4a4:	movw	r6, #1
   1b4a8:	and	r6, r6, #1
   1b4ac:	str	r6, [sp, #20]
   1b4b0:	str	r5, [sp, #36]	; 0x24
   1b4b4:	str	ip, [sp, #32]
   1b4b8:	str	lr, [sp, #28]
   1b4bc:	str	r4, [sp, #24]
   1b4c0:	bl	1b4cc <__assert_fail@plt+0x9d78>
   1b4c4:	sub	sp, fp, #24
   1b4c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b4cc:	push	{r4, r5, r6, r7, fp, lr}
   1b4d0:	add	fp, sp, #16
   1b4d4:	sub	sp, sp, #88	; 0x58
   1b4d8:	ldr	ip, [fp, #28]
   1b4dc:	ldr	lr, [fp, #24]
   1b4e0:	ldr	r4, [fp, #20]
   1b4e4:	ldr	r5, [fp, #16]
   1b4e8:	ldr	r6, [fp, #12]
   1b4ec:	ldr	r7, [fp, #8]
   1b4f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4f4:	str	r1, [fp, #-28]	; 0xffffffe4
   1b4f8:	str	r2, [fp, #-32]	; 0xffffffe0
   1b4fc:	str	r3, [fp, #-36]	; 0xffffffdc
   1b500:	and	r0, ip, #1
   1b504:	strb	r0, [fp, #-37]	; 0xffffffdb
   1b508:	movw	r0, #0
   1b50c:	str	r0, [sp, #48]	; 0x30
   1b510:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b514:	cmp	r0, #0
   1b518:	movw	r0, #1
   1b51c:	str	r7, [sp, #44]	; 0x2c
   1b520:	str	r4, [sp, #40]	; 0x28
   1b524:	str	r5, [sp, #36]	; 0x24
   1b528:	str	r6, [sp, #32]
   1b52c:	str	lr, [sp, #28]
   1b530:	str	r0, [sp, #24]
   1b534:	blt	1b580 <__assert_fail@plt+0x9e2c>
   1b538:	ldr	r0, [fp, #8]
   1b53c:	cmp	r0, #0
   1b540:	movw	r0, #1
   1b544:	str	r0, [sp, #24]
   1b548:	blt	1b580 <__assert_fail@plt+0x9e2c>
   1b54c:	ldr	r0, [fp, #24]
   1b550:	cmp	r0, #0
   1b554:	movw	r0, #1
   1b558:	str	r0, [sp, #24]
   1b55c:	blt	1b580 <__assert_fail@plt+0x9e2c>
   1b560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b564:	ldr	r1, [fp, #8]
   1b568:	add	r1, r0, r1
   1b56c:	mov	r2, #1
   1b570:	cmp	r1, r0
   1b574:	movwvc	r2, #0
   1b578:	str	r1, [sp, #52]	; 0x34
   1b57c:	str	r2, [sp, #24]
   1b580:	ldr	r0, [sp, #24]
   1b584:	tst	r0, #1
   1b588:	beq	1b598 <__assert_fail@plt+0x9e44>
   1b58c:	mvn	r0, #1
   1b590:	str	r0, [fp, #-20]	; 0xffffffec
   1b594:	b	1b674 <__assert_fail@plt+0x9f20>
   1b598:	ldr	r0, [fp, #8]
   1b59c:	cmp	r0, #0
   1b5a0:	ble	1b620 <__assert_fail@plt+0x9ecc>
   1b5a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b5a8:	cmp	r0, #0
   1b5ac:	ble	1b614 <__assert_fail@plt+0x9ec0>
   1b5b0:	ldr	r0, [sp, #52]	; 0x34
   1b5b4:	mov	r1, r0
   1b5b8:	str	r1, [sp, #20]
   1b5bc:	bl	38a7c <__assert_fail@plt+0x27328>
   1b5c0:	str	r0, [sp, #48]	; 0x30
   1b5c4:	ldr	r0, [sp, #48]	; 0x30
   1b5c8:	movw	r1, #0
   1b5cc:	cmp	r0, r1
   1b5d0:	bne	1b5e0 <__assert_fail@plt+0x9e8c>
   1b5d4:	mvn	r0, #1
   1b5d8:	str	r0, [fp, #-20]	; 0xffffffec
   1b5dc:	b	1b674 <__assert_fail@plt+0x9f20>
   1b5e0:	ldr	r0, [sp, #48]	; 0x30
   1b5e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b5e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b5ec:	bl	11478 <memcpy@plt>
   1b5f0:	ldr	r0, [sp, #48]	; 0x30
   1b5f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b5f8:	add	r0, r0, r1
   1b5fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b600:	ldr	r2, [fp, #8]
   1b604:	bl	11478 <memcpy@plt>
   1b608:	ldr	r0, [sp, #48]	; 0x30
   1b60c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b610:	b	1b61c <__assert_fail@plt+0x9ec8>
   1b614:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b618:	str	r0, [fp, #-44]	; 0xffffffd4
   1b61c:	b	1b628 <__assert_fail@plt+0x9ed4>
   1b620:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b624:	str	r0, [fp, #-44]	; 0xffffffd4
   1b628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b62c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b630:	ldr	r2, [sp, #52]	; 0x34
   1b634:	ldr	r3, [fp, #12]
   1b638:	ldr	ip, [fp, #16]
   1b63c:	ldr	lr, [fp, #24]
   1b640:	ldr	r4, [fp, #20]
   1b644:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   1b648:	str	ip, [sp]
   1b64c:	str	lr, [sp, #4]
   1b650:	str	r4, [sp, #8]
   1b654:	and	ip, r5, #1
   1b658:	str	ip, [sp, #12]
   1b65c:	bl	1aefc <__assert_fail@plt+0x97a8>
   1b660:	str	r0, [fp, #-48]	; 0xffffffd0
   1b664:	ldr	r0, [sp, #48]	; 0x30
   1b668:	bl	1604c <__assert_fail@plt+0x48f8>
   1b66c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b670:	str	r0, [fp, #-20]	; 0xffffffec
   1b674:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b678:	sub	sp, fp, #16
   1b67c:	pop	{r4, r5, r6, r7, fp, pc}
   1b680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b684:	add	fp, sp, #28
   1b688:	sub	sp, sp, #68	; 0x44
   1b68c:	ldr	ip, [fp, #24]
   1b690:	ldr	lr, [fp, #20]
   1b694:	ldr	r4, [fp, #16]
   1b698:	ldr	r5, [fp, #12]
   1b69c:	ldr	r6, [fp, #8]
   1b6a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b6a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1b6a8:	str	r2, [fp, #-40]	; 0xffffffd8
   1b6ac:	str	r3, [fp, #-44]	; 0xffffffd4
   1b6b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b6b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b6b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6c0:	ldr	r7, [fp, #8]
   1b6c4:	ldr	r8, [fp, #12]
   1b6c8:	ldr	r9, [fp, #16]
   1b6cc:	ldr	sl, [fp, #20]
   1b6d0:	str	r0, [sp, #48]	; 0x30
   1b6d4:	ldr	r0, [fp, #24]
   1b6d8:	str	r0, [sp, #44]	; 0x2c
   1b6dc:	ldr	r0, [sp, #48]	; 0x30
   1b6e0:	str	r7, [sp]
   1b6e4:	str	r8, [sp, #4]
   1b6e8:	str	r9, [sp, #8]
   1b6ec:	str	sl, [sp, #12]
   1b6f0:	ldr	r7, [sp, #44]	; 0x2c
   1b6f4:	str	r7, [sp, #16]
   1b6f8:	movw	r8, #0
   1b6fc:	and	r8, r8, #1
   1b700:	str	r8, [sp, #20]
   1b704:	str	r6, [sp, #40]	; 0x28
   1b708:	str	lr, [sp, #36]	; 0x24
   1b70c:	str	r4, [sp, #32]
   1b710:	str	r5, [sp, #28]
   1b714:	str	ip, [sp, #24]
   1b718:	bl	1b4cc <__assert_fail@plt+0x9d78>
   1b71c:	sub	sp, fp, #28
   1b720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b724:	sub	sp, sp, #20
   1b728:	ldr	ip, [sp, #20]
   1b72c:	str	r0, [sp, #16]
   1b730:	str	r1, [sp, #12]
   1b734:	str	r2, [sp, #8]
   1b738:	str	r3, [sp, #4]
   1b73c:	ldr	r0, [sp, #8]
   1b740:	cmp	r0, #0
   1b744:	str	ip, [sp]
   1b748:	beq	1b78c <__assert_fail@plt+0xa038>
   1b74c:	ldr	r0, [sp, #16]
   1b750:	ldrb	r1, [r0, #28]
   1b754:	bic	r1, r1, #6
   1b758:	movw	r2, #2
   1b75c:	orr	r1, r1, r2
   1b760:	strb	r1, [r0, #28]
   1b764:	ldr	r0, [sp, #8]
   1b768:	ldr	r1, [sp, #12]
   1b76c:	str	r0, [r1]
   1b770:	ldr	r0, [sp, #4]
   1b774:	ldr	r1, [sp, #12]
   1b778:	str	r0, [r1, #4]
   1b77c:	ldr	r0, [sp, #20]
   1b780:	ldr	r1, [sp, #12]
   1b784:	str	r0, [r1, #8]
   1b788:	b	1b7b8 <__assert_fail@plt+0xa064>
   1b78c:	ldr	r0, [sp, #16]
   1b790:	ldrb	r1, [r0, #28]
   1b794:	bic	r1, r1, #6
   1b798:	strb	r1, [r0, #28]
   1b79c:	ldr	r0, [sp, #12]
   1b7a0:	movw	r1, #0
   1b7a4:	str	r1, [r0]
   1b7a8:	ldr	r0, [sp, #12]
   1b7ac:	str	r1, [r0, #8]
   1b7b0:	ldr	r0, [sp, #12]
   1b7b4:	str	r1, [r0, #4]
   1b7b8:	add	sp, sp, #20
   1b7bc:	bx	lr
   1b7c0:	push	{fp, lr}
   1b7c4:	mov	fp, sp
   1b7c8:	sub	sp, sp, #8
   1b7cc:	str	r0, [sp, #4]
   1b7d0:	ldr	r0, [sp, #4]
   1b7d4:	ldr	r0, [r0, #4]
   1b7d8:	and	r0, r0, #255	; 0xff
   1b7dc:	cmp	r0, #6
   1b7e0:	bne	1b80c <__assert_fail@plt+0xa0b8>
   1b7e4:	ldr	r0, [sp, #4]
   1b7e8:	ldr	r0, [r0, #4]
   1b7ec:	lsr	r0, r0, #18
   1b7f0:	and	r0, r0, #1
   1b7f4:	cmp	r0, #0
   1b7f8:	bne	1b80c <__assert_fail@plt+0xa0b8>
   1b7fc:	ldr	r0, [sp, #4]
   1b800:	ldr	r0, [r0]
   1b804:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   1b808:	b	1b848 <__assert_fail@plt+0xa0f4>
   1b80c:	ldr	r0, [sp, #4]
   1b810:	ldr	r0, [r0, #4]
   1b814:	and	r0, r0, #255	; 0xff
   1b818:	cmp	r0, #3
   1b81c:	bne	1b844 <__assert_fail@plt+0xa0f0>
   1b820:	ldr	r0, [sp, #4]
   1b824:	ldr	r0, [r0, #4]
   1b828:	lsr	r0, r0, #18
   1b82c:	and	r0, r0, #1
   1b830:	cmp	r0, #0
   1b834:	bne	1b844 <__assert_fail@plt+0xa0f0>
   1b838:	ldr	r0, [sp, #4]
   1b83c:	ldr	r0, [r0]
   1b840:	bl	1604c <__assert_fail@plt+0x48f8>
   1b844:	b	1b848 <__assert_fail@plt+0xa0f4>
   1b848:	mov	sp, fp
   1b84c:	pop	{fp, pc}
   1b850:	push	{fp, lr}
   1b854:	mov	fp, sp
   1b858:	sub	sp, sp, #8
   1b85c:	str	r0, [sp, #4]
   1b860:	ldr	r0, [sp, #4]
   1b864:	ldr	r0, [r0, #24]
   1b868:	bl	1604c <__assert_fail@plt+0x48f8>
   1b86c:	ldr	r0, [sp, #4]
   1b870:	ldr	r0, [r0, #36]	; 0x24
   1b874:	bl	1604c <__assert_fail@plt+0x48f8>
   1b878:	ldr	r0, [sp, #4]
   1b87c:	ldr	r0, [r0, #40]	; 0x28
   1b880:	ldr	lr, [sp, #4]
   1b884:	add	lr, lr, #4
   1b888:	cmp	r0, lr
   1b88c:	beq	1b8ac <__assert_fail@plt+0xa158>
   1b890:	ldr	r0, [sp, #4]
   1b894:	ldr	r0, [r0, #40]	; 0x28
   1b898:	ldr	r0, [r0, #8]
   1b89c:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8a0:	ldr	r0, [sp, #4]
   1b8a4:	ldr	r0, [r0, #40]	; 0x28
   1b8a8:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8ac:	ldr	r0, [sp, #4]
   1b8b0:	ldr	r0, [r0, #12]
   1b8b4:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8b8:	ldr	r0, [sp, #4]
   1b8bc:	ldr	r0, [r0, #48]	; 0x30
   1b8c0:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8c4:	ldr	r0, [sp, #4]
   1b8c8:	ldr	r0, [r0, #44]	; 0x2c
   1b8cc:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8d0:	ldr	r0, [sp, #4]
   1b8d4:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8d8:	mov	sp, fp
   1b8dc:	pop	{fp, pc}
   1b8e0:	push	{fp, lr}
   1b8e4:	mov	fp, sp
   1b8e8:	sub	sp, sp, #8
   1b8ec:	str	r0, [sp, #4]
   1b8f0:	ldr	r0, [sp, #4]
   1b8f4:	ldr	r0, [r0]
   1b8f8:	bl	1604c <__assert_fail@plt+0x48f8>
   1b8fc:	ldr	r0, [sp, #4]
   1b900:	ldr	r0, [r0, #4]
   1b904:	bl	1604c <__assert_fail@plt+0x48f8>
   1b908:	ldr	r0, [sp, #4]
   1b90c:	ldr	r0, [r0, #8]
   1b910:	bl	1604c <__assert_fail@plt+0x48f8>
   1b914:	ldr	r0, [sp, #4]
   1b918:	ldr	r0, [r0, #12]
   1b91c:	bl	1604c <__assert_fail@plt+0x48f8>
   1b920:	ldr	r0, [sp, #4]
   1b924:	bl	1604c <__assert_fail@plt+0x48f8>
   1b928:	mov	sp, fp
   1b92c:	pop	{fp, pc}
   1b930:	push	{fp, lr}
   1b934:	mov	fp, sp
   1b938:	sub	sp, sp, #120	; 0x78
   1b93c:	str	r0, [fp, #-8]
   1b940:	str	r1, [fp, #-12]
   1b944:	movw	r0, #4
   1b948:	str	r0, [fp, #-24]	; 0xffffffe8
   1b94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b950:	movw	r1, #8
   1b954:	cmp	r1, r0
   1b958:	bcs	1b968 <__assert_fail@plt+0xa214>
   1b95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b960:	str	r0, [fp, #-48]	; 0xffffffd0
   1b964:	b	1b974 <__assert_fail@plt+0xa220>
   1b968:	movw	r0, #8
   1b96c:	str	r0, [fp, #-48]	; 0xffffffd0
   1b970:	b	1b974 <__assert_fail@plt+0xa220>
   1b974:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b978:	movw	r1, #12
   1b97c:	cmp	r1, r0
   1b980:	bcs	1b9b8 <__assert_fail@plt+0xa264>
   1b984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b988:	movw	r1, #8
   1b98c:	cmp	r1, r0
   1b990:	bcs	1b9a0 <__assert_fail@plt+0xa24c>
   1b994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b998:	str	r0, [fp, #-52]	; 0xffffffcc
   1b99c:	b	1b9ac <__assert_fail@plt+0xa258>
   1b9a0:	movw	r0, #8
   1b9a4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b9a8:	b	1b9ac <__assert_fail@plt+0xa258>
   1b9ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b9b0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b9b4:	b	1b9c4 <__assert_fail@plt+0xa270>
   1b9b8:	movw	r0, #12
   1b9bc:	str	r0, [fp, #-56]	; 0xffffffc8
   1b9c0:	b	1b9c4 <__assert_fail@plt+0xa270>
   1b9c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b9c8:	movw	r1, #8
   1b9cc:	cmp	r1, r0
   1b9d0:	bcs	1ba58 <__assert_fail@plt+0xa304>
   1b9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9d8:	movw	r1, #8
   1b9dc:	cmp	r1, r0
   1b9e0:	bcs	1b9f0 <__assert_fail@plt+0xa29c>
   1b9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9e8:	str	r0, [sp, #60]	; 0x3c
   1b9ec:	b	1b9fc <__assert_fail@plt+0xa2a8>
   1b9f0:	movw	r0, #8
   1b9f4:	str	r0, [sp, #60]	; 0x3c
   1b9f8:	b	1b9fc <__assert_fail@plt+0xa2a8>
   1b9fc:	ldr	r0, [sp, #60]	; 0x3c
   1ba00:	movw	r1, #12
   1ba04:	cmp	r1, r0
   1ba08:	bcs	1ba40 <__assert_fail@plt+0xa2ec>
   1ba0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba10:	movw	r1, #8
   1ba14:	cmp	r1, r0
   1ba18:	bcs	1ba28 <__assert_fail@plt+0xa2d4>
   1ba1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba20:	str	r0, [sp, #56]	; 0x38
   1ba24:	b	1ba34 <__assert_fail@plt+0xa2e0>
   1ba28:	movw	r0, #8
   1ba2c:	str	r0, [sp, #56]	; 0x38
   1ba30:	b	1ba34 <__assert_fail@plt+0xa2e0>
   1ba34:	ldr	r0, [sp, #56]	; 0x38
   1ba38:	str	r0, [sp, #52]	; 0x34
   1ba3c:	b	1ba4c <__assert_fail@plt+0xa2f8>
   1ba40:	movw	r0, #12
   1ba44:	str	r0, [sp, #52]	; 0x34
   1ba48:	b	1ba4c <__assert_fail@plt+0xa2f8>
   1ba4c:	ldr	r0, [sp, #52]	; 0x34
   1ba50:	str	r0, [sp, #48]	; 0x30
   1ba54:	b	1ba64 <__assert_fail@plt+0xa310>
   1ba58:	movw	r0, #8
   1ba5c:	str	r0, [sp, #48]	; 0x30
   1ba60:	b	1ba64 <__assert_fail@plt+0xa310>
   1ba64:	ldr	r0, [sp, #48]	; 0x30
   1ba68:	movw	r1, #12
   1ba6c:	cmp	r1, r0
   1ba70:	bcs	1bb98 <__assert_fail@plt+0xa444>
   1ba74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba78:	movw	r1, #8
   1ba7c:	cmp	r1, r0
   1ba80:	bcs	1ba90 <__assert_fail@plt+0xa33c>
   1ba84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba88:	str	r0, [sp, #44]	; 0x2c
   1ba8c:	b	1ba9c <__assert_fail@plt+0xa348>
   1ba90:	movw	r0, #8
   1ba94:	str	r0, [sp, #44]	; 0x2c
   1ba98:	b	1ba9c <__assert_fail@plt+0xa348>
   1ba9c:	ldr	r0, [sp, #44]	; 0x2c
   1baa0:	movw	r1, #12
   1baa4:	cmp	r1, r0
   1baa8:	bcs	1bae0 <__assert_fail@plt+0xa38c>
   1baac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bab0:	movw	r1, #8
   1bab4:	cmp	r1, r0
   1bab8:	bcs	1bac8 <__assert_fail@plt+0xa374>
   1babc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bac0:	str	r0, [sp, #40]	; 0x28
   1bac4:	b	1bad4 <__assert_fail@plt+0xa380>
   1bac8:	movw	r0, #8
   1bacc:	str	r0, [sp, #40]	; 0x28
   1bad0:	b	1bad4 <__assert_fail@plt+0xa380>
   1bad4:	ldr	r0, [sp, #40]	; 0x28
   1bad8:	str	r0, [sp, #36]	; 0x24
   1badc:	b	1baec <__assert_fail@plt+0xa398>
   1bae0:	movw	r0, #12
   1bae4:	str	r0, [sp, #36]	; 0x24
   1bae8:	b	1baec <__assert_fail@plt+0xa398>
   1baec:	ldr	r0, [sp, #36]	; 0x24
   1baf0:	movw	r1, #8
   1baf4:	cmp	r1, r0
   1baf8:	bcs	1bb80 <__assert_fail@plt+0xa42c>
   1bafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb00:	movw	r1, #8
   1bb04:	cmp	r1, r0
   1bb08:	bcs	1bb18 <__assert_fail@plt+0xa3c4>
   1bb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb10:	str	r0, [sp, #32]
   1bb14:	b	1bb24 <__assert_fail@plt+0xa3d0>
   1bb18:	movw	r0, #8
   1bb1c:	str	r0, [sp, #32]
   1bb20:	b	1bb24 <__assert_fail@plt+0xa3d0>
   1bb24:	ldr	r0, [sp, #32]
   1bb28:	movw	r1, #12
   1bb2c:	cmp	r1, r0
   1bb30:	bcs	1bb68 <__assert_fail@plt+0xa414>
   1bb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb38:	movw	r1, #8
   1bb3c:	cmp	r1, r0
   1bb40:	bcs	1bb50 <__assert_fail@plt+0xa3fc>
   1bb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb48:	str	r0, [sp, #28]
   1bb4c:	b	1bb5c <__assert_fail@plt+0xa408>
   1bb50:	movw	r0, #8
   1bb54:	str	r0, [sp, #28]
   1bb58:	b	1bb5c <__assert_fail@plt+0xa408>
   1bb5c:	ldr	r0, [sp, #28]
   1bb60:	str	r0, [sp, #24]
   1bb64:	b	1bb74 <__assert_fail@plt+0xa420>
   1bb68:	movw	r0, #12
   1bb6c:	str	r0, [sp, #24]
   1bb70:	b	1bb74 <__assert_fail@plt+0xa420>
   1bb74:	ldr	r0, [sp, #24]
   1bb78:	str	r0, [sp, #20]
   1bb7c:	b	1bb8c <__assert_fail@plt+0xa438>
   1bb80:	movw	r0, #8
   1bb84:	str	r0, [sp, #20]
   1bb88:	b	1bb8c <__assert_fail@plt+0xa438>
   1bb8c:	ldr	r0, [sp, #20]
   1bb90:	str	r0, [sp, #16]
   1bb94:	b	1bba4 <__assert_fail@plt+0xa450>
   1bb98:	movw	r0, #12
   1bb9c:	str	r0, [sp, #16]
   1bba0:	b	1bba4 <__assert_fail@plt+0xa450>
   1bba4:	ldr	r0, [sp, #16]
   1bba8:	ldr	r1, [pc, #904]	; 1bf38 <__assert_fail@plt+0xa7e4>
   1bbac:	str	r0, [fp, #-28]	; 0xffffffe4
   1bbb0:	ldr	r0, [fp, #-8]
   1bbb4:	movw	r2, #0
   1bbb8:	and	r2, r2, #255	; 0xff
   1bbbc:	str	r1, [sp, #12]
   1bbc0:	mov	r1, r2
   1bbc4:	movw	r2, #160	; 0xa0
   1bbc8:	bl	11658 <memset@plt>
   1bbcc:	ldr	r0, [fp, #-8]
   1bbd0:	movw	r1, #31
   1bbd4:	str	r1, [r0, #64]	; 0x40
   1bbd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bbdc:	mvn	r1, #0
   1bbe0:	udiv	r0, r1, r0
   1bbe4:	ldr	r1, [sp, #12]
   1bbe8:	cmp	r1, r0
   1bbec:	bcs	1bbfc <__assert_fail@plt+0xa4a8>
   1bbf0:	ldr	r0, [pc, #832]	; 1bf38 <__assert_fail@plt+0xa7e4>
   1bbf4:	str	r0, [sp, #8]
   1bbf8:	b	1bc0c <__assert_fail@plt+0xa4b8>
   1bbfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bc00:	mvn	r1, #0
   1bc04:	udiv	r0, r1, r0
   1bc08:	str	r0, [sp, #8]
   1bc0c:	ldr	r0, [sp, #8]
   1bc10:	lsr	r0, r0, #1
   1bc14:	ldr	r1, [fp, #-12]
   1bc18:	cmp	r0, r1
   1bc1c:	bhi	1bc2c <__assert_fail@plt+0xa4d8>
   1bc20:	movw	r0, #12
   1bc24:	str	r0, [fp, #-4]
   1bc28:	b	1bf2c <__assert_fail@plt+0xa7d8>
   1bc2c:	ldr	r0, [fp, #-12]
   1bc30:	add	r0, r0, #1
   1bc34:	ldr	r1, [fp, #-8]
   1bc38:	str	r0, [r1, #4]
   1bc3c:	ldr	r0, [fp, #-8]
   1bc40:	ldr	r0, [r0, #4]
   1bc44:	lsl	r0, r0, #3
   1bc48:	bl	38a7c <__assert_fail@plt+0x27328>
   1bc4c:	ldr	r1, [fp, #-8]
   1bc50:	str	r0, [r1]
   1bc54:	movw	r0, #1
   1bc58:	str	r0, [fp, #-16]
   1bc5c:	ldr	r0, [fp, #-16]
   1bc60:	ldr	r1, [fp, #-12]
   1bc64:	cmp	r0, r1
   1bc68:	bls	1bc70 <__assert_fail@plt+0xa51c>
   1bc6c:	b	1bc84 <__assert_fail@plt+0xa530>
   1bc70:	b	1bc74 <__assert_fail@plt+0xa520>
   1bc74:	ldr	r0, [fp, #-16]
   1bc78:	lsl	r0, r0, #1
   1bc7c:	str	r0, [fp, #-16]
   1bc80:	b	1bc5c <__assert_fail@plt+0xa508>
   1bc84:	ldr	r1, [fp, #-16]
   1bc88:	movw	r0, #12
   1bc8c:	bl	389e0 <__assert_fail@plt+0x2728c>
   1bc90:	ldr	r1, [fp, #-8]
   1bc94:	str	r0, [r1, #32]
   1bc98:	ldr	r0, [fp, #-16]
   1bc9c:	sub	r0, r0, #1
   1bca0:	ldr	r1, [fp, #-8]
   1bca4:	str	r0, [r1, #68]	; 0x44
   1bca8:	bl	11544 <__ctype_get_mb_cur_max@plt>
   1bcac:	ldr	r1, [fp, #-8]
   1bcb0:	str	r0, [r1, #92]	; 0x5c
   1bcb4:	movw	r0, #14
   1bcb8:	bl	116e8 <nl_langinfo@plt>
   1bcbc:	str	r0, [fp, #-20]	; 0xffffffec
   1bcc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcc4:	ldrb	r0, [r0]
   1bcc8:	cmp	r0, #85	; 0x55
   1bccc:	beq	1bce0 <__assert_fail@plt+0xa58c>
   1bcd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcd4:	ldrb	r0, [r0]
   1bcd8:	cmp	r0, #117	; 0x75
   1bcdc:	bne	1bd70 <__assert_fail@plt+0xa61c>
   1bce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bce4:	ldrb	r0, [r0, #1]
   1bce8:	cmp	r0, #84	; 0x54
   1bcec:	beq	1bd00 <__assert_fail@plt+0xa5ac>
   1bcf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcf4:	ldrb	r0, [r0, #1]
   1bcf8:	cmp	r0, #116	; 0x74
   1bcfc:	bne	1bd70 <__assert_fail@plt+0xa61c>
   1bd00:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd04:	ldrb	r0, [r0, #2]
   1bd08:	cmp	r0, #70	; 0x46
   1bd0c:	beq	1bd20 <__assert_fail@plt+0xa5cc>
   1bd10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd14:	ldrb	r0, [r0, #2]
   1bd18:	cmp	r0, #102	; 0x66
   1bd1c:	bne	1bd70 <__assert_fail@plt+0xa61c>
   1bd20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd24:	add	r0, r0, #3
   1bd28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd2c:	ldrb	r1, [r1, #3]
   1bd30:	cmp	r1, #45	; 0x2d
   1bd34:	movw	r1, #0
   1bd38:	moveq	r1, #1
   1bd3c:	and	r1, r1, #1
   1bd40:	add	r0, r0, r1
   1bd44:	movw	r1, #54162	; 0xd392
   1bd48:	movt	r1, #3
   1bd4c:	bl	11400 <strcmp@plt>
   1bd50:	cmp	r0, #0
   1bd54:	bne	1bd70 <__assert_fail@plt+0xa61c>
   1bd58:	ldr	r0, [fp, #-8]
   1bd5c:	ldrb	r1, [r0, #88]	; 0x58
   1bd60:	bic	r1, r1, #4
   1bd64:	movw	r2, #4
   1bd68:	orr	r1, r1, r2
   1bd6c:	strb	r1, [r0, #88]	; 0x58
   1bd70:	ldr	r0, [fp, #-8]
   1bd74:	ldrb	r1, [r0, #88]	; 0x58
   1bd78:	bic	r1, r1, #8
   1bd7c:	strb	r1, [r0, #88]	; 0x58
   1bd80:	ldr	r0, [fp, #-8]
   1bd84:	ldr	r0, [r0, #92]	; 0x5c
   1bd88:	cmp	r0, #1
   1bd8c:	ble	1bed4 <__assert_fail@plt+0xa780>
   1bd90:	ldr	r0, [fp, #-8]
   1bd94:	ldrb	r0, [r0, #88]	; 0x58
   1bd98:	ubfx	r0, r0, #2, #1
   1bd9c:	and	r0, r0, #255	; 0xff
   1bda0:	cmp	r0, #0
   1bda4:	beq	1bdbc <__assert_fail@plt+0xa668>
   1bda8:	ldr	r0, [fp, #-8]
   1bdac:	movw	r1, #54724	; 0xd5c4
   1bdb0:	movt	r1, #3
   1bdb4:	str	r1, [r0, #60]	; 0x3c
   1bdb8:	b	1bed0 <__assert_fail@plt+0xa77c>
   1bdbc:	movw	r0, #32
   1bdc0:	movw	r1, #1
   1bdc4:	bl	389e0 <__assert_fail@plt+0x2728c>
   1bdc8:	ldr	r1, [fp, #-8]
   1bdcc:	str	r0, [r1, #60]	; 0x3c
   1bdd0:	ldr	r0, [fp, #-8]
   1bdd4:	ldr	r0, [r0, #60]	; 0x3c
   1bdd8:	movw	r1, #0
   1bddc:	cmp	r0, r1
   1bde0:	bne	1bdf0 <__assert_fail@plt+0xa69c>
   1bde4:	movw	r0, #12
   1bde8:	str	r0, [fp, #-4]
   1bdec:	b	1bf2c <__assert_fail@plt+0xa7d8>
   1bdf0:	movw	r0, #0
   1bdf4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdf8:	str	r0, [fp, #-40]	; 0xffffffd8
   1bdfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be00:	cmp	r0, #8
   1be04:	bge	1becc <__assert_fail@plt+0xa778>
   1be08:	movw	r0, #0
   1be0c:	str	r0, [fp, #-36]	; 0xffffffdc
   1be10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1be14:	cmp	r0, #32
   1be18:	bge	1beb8 <__assert_fail@plt+0xa764>
   1be1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be20:	bl	11664 <btowc@plt>
   1be24:	str	r0, [fp, #-44]	; 0xffffffd4
   1be28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be2c:	cmn	r0, #1
   1be30:	beq	1be5c <__assert_fail@plt+0xa708>
   1be34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1be38:	mov	r1, #1
   1be3c:	lsl	r0, r1, r0
   1be40:	ldr	r1, [fp, #-8]
   1be44:	ldr	r1, [r1, #60]	; 0x3c
   1be48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be4c:	add	r1, r1, r2, lsl #2
   1be50:	ldr	r2, [r1]
   1be54:	orr	r0, r2, r0
   1be58:	str	r0, [r1]
   1be5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be60:	mvn	r1, #127	; 0x7f
   1be64:	and	r0, r0, r1
   1be68:	cmp	r0, #0
   1be6c:	bne	1be98 <__assert_fail@plt+0xa744>
   1be70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1be78:	cmp	r0, r1
   1be7c:	beq	1be98 <__assert_fail@plt+0xa744>
   1be80:	ldr	r0, [fp, #-8]
   1be84:	ldrb	r1, [r0, #88]	; 0x58
   1be88:	bic	r1, r1, #8
   1be8c:	movw	r2, #8
   1be90:	orr	r1, r1, r2
   1be94:	strb	r1, [r0, #88]	; 0x58
   1be98:	b	1be9c <__assert_fail@plt+0xa748>
   1be9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bea0:	add	r0, r0, #1
   1bea4:	str	r0, [fp, #-36]	; 0xffffffdc
   1bea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1beac:	add	r0, r0, #1
   1beb0:	str	r0, [fp, #-40]	; 0xffffffd8
   1beb4:	b	1be10 <__assert_fail@plt+0xa6bc>
   1beb8:	b	1bebc <__assert_fail@plt+0xa768>
   1bebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bec0:	add	r0, r0, #1
   1bec4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bec8:	b	1bdfc <__assert_fail@plt+0xa6a8>
   1becc:	b	1bed0 <__assert_fail@plt+0xa77c>
   1bed0:	b	1bed4 <__assert_fail@plt+0xa780>
   1bed4:	ldr	r0, [fp, #-8]
   1bed8:	ldr	r0, [r0]
   1bedc:	movw	r1, #0
   1bee0:	cmp	r0, r1
   1bee4:	movw	r0, #1
   1bee8:	str	r0, [sp, #4]
   1beec:	beq	1bf0c <__assert_fail@plt+0xa7b8>
   1bef0:	ldr	r0, [fp, #-8]
   1bef4:	ldr	r0, [r0, #32]
   1bef8:	movw	r1, #0
   1befc:	cmp	r0, r1
   1bf00:	movw	r0, #0
   1bf04:	moveq	r0, #1
   1bf08:	str	r0, [sp, #4]
   1bf0c:	ldr	r0, [sp, #4]
   1bf10:	tst	r0, #1
   1bf14:	beq	1bf24 <__assert_fail@plt+0xa7d0>
   1bf18:	movw	r0, #12
   1bf1c:	str	r0, [fp, #-4]
   1bf20:	b	1bf2c <__assert_fail@plt+0xa7d8>
   1bf24:	movw	r0, #0
   1bf28:	str	r0, [fp, #-4]
   1bf2c:	ldr	r0, [fp, #-4]
   1bf30:	mov	sp, fp
   1bf34:	pop	{fp, pc}
   1bf38:	svcvc	0x00ffffff
   1bf3c:	push	{fp, lr}
   1bf40:	mov	fp, sp
   1bf44:	sub	sp, sp, #48	; 0x30
   1bf48:	ldr	ip, [fp, #12]
   1bf4c:	ldr	lr, [fp, #8]
   1bf50:	str	r0, [fp, #-8]
   1bf54:	str	r1, [fp, #-12]
   1bf58:	str	r2, [fp, #-16]
   1bf5c:	str	r3, [fp, #-20]	; 0xffffffec
   1bf60:	and	r0, lr, #1
   1bf64:	strb	r0, [fp, #-21]	; 0xffffffeb
   1bf68:	ldr	r0, [fp, #-8]
   1bf6c:	movw	r1, #0
   1bf70:	and	r1, r1, #255	; 0xff
   1bf74:	movw	r2, #84	; 0x54
   1bf78:	str	ip, [sp, #16]
   1bf7c:	bl	11658 <memset@plt>
   1bf80:	ldr	r0, [fp, #-12]
   1bf84:	ldr	r1, [fp, #-16]
   1bf88:	ldr	r2, [fp, #-8]
   1bf8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf90:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   1bf94:	ldr	lr, [fp, #12]
   1bf98:	and	ip, ip, #1
   1bf9c:	str	ip, [sp]
   1bfa0:	str	lr, [sp, #4]
   1bfa4:	bl	1cdf8 <__assert_fail@plt+0xb6a4>
   1bfa8:	ldr	r0, [fp, #-16]
   1bfac:	cmp	r0, #0
   1bfb0:	ble	1bfe4 <__assert_fail@plt+0xa890>
   1bfb4:	ldr	r0, [fp, #-8]
   1bfb8:	ldr	r1, [fp, #-16]
   1bfbc:	add	r1, r1, #1
   1bfc0:	bl	1cefc <__assert_fail@plt+0xb7a8>
   1bfc4:	str	r0, [sp, #20]
   1bfc8:	ldr	r0, [sp, #20]
   1bfcc:	cmp	r0, #0
   1bfd0:	beq	1bfe0 <__assert_fail@plt+0xa88c>
   1bfd4:	ldr	r0, [sp, #20]
   1bfd8:	str	r0, [fp, #-4]
   1bfdc:	b	1c144 <__assert_fail@plt+0xa9f0>
   1bfe0:	b	1bfe4 <__assert_fail@plt+0xa890>
   1bfe4:	ldr	r0, [fp, #-8]
   1bfe8:	ldrb	r0, [r0, #75]	; 0x4b
   1bfec:	cmp	r0, #0
   1bff0:	beq	1c004 <__assert_fail@plt+0xa8b0>
   1bff4:	ldr	r0, [fp, #-8]
   1bff8:	ldr	r0, [r0, #4]
   1bffc:	str	r0, [sp, #12]
   1c000:	b	1c00c <__assert_fail@plt+0xa8b8>
   1c004:	ldr	r0, [fp, #-12]
   1c008:	str	r0, [sp, #12]
   1c00c:	ldr	r0, [sp, #12]
   1c010:	ldr	r1, [fp, #-8]
   1c014:	str	r0, [r1, #4]
   1c018:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1c01c:	tst	r0, #1
   1c020:	beq	1c0dc <__assert_fail@plt+0xa988>
   1c024:	ldr	r0, [fp, #12]
   1c028:	ldr	r0, [r0, #92]	; 0x5c
   1c02c:	cmp	r0, #1
   1c030:	ble	1c0d0 <__assert_fail@plt+0xa97c>
   1c034:	b	1c038 <__assert_fail@plt+0xa8e4>
   1c038:	ldr	r0, [fp, #-8]
   1c03c:	bl	1d054 <__assert_fail@plt+0xb900>
   1c040:	str	r0, [sp, #20]
   1c044:	ldr	r0, [sp, #20]
   1c048:	cmp	r0, #0
   1c04c:	beq	1c05c <__assert_fail@plt+0xa908>
   1c050:	ldr	r0, [sp, #20]
   1c054:	str	r0, [fp, #-4]
   1c058:	b	1c144 <__assert_fail@plt+0xa9f0>
   1c05c:	ldr	r0, [fp, #-8]
   1c060:	ldr	r0, [r0, #32]
   1c064:	ldr	r1, [fp, #-16]
   1c068:	cmp	r0, r1
   1c06c:	blt	1c074 <__assert_fail@plt+0xa920>
   1c070:	b	1c0cc <__assert_fail@plt+0xa978>
   1c074:	ldr	r0, [fp, #-8]
   1c078:	ldr	r0, [r0, #36]	; 0x24
   1c07c:	ldr	r1, [fp, #-8]
   1c080:	ldr	r1, [r1, #28]
   1c084:	ldr	r2, [fp, #12]
   1c088:	ldr	r2, [r2, #92]	; 0x5c
   1c08c:	add	r1, r1, r2
   1c090:	cmp	r0, r1
   1c094:	ble	1c09c <__assert_fail@plt+0xa948>
   1c098:	b	1c0cc <__assert_fail@plt+0xa978>
   1c09c:	ldr	r0, [fp, #-8]
   1c0a0:	ldr	r1, [r0, #36]	; 0x24
   1c0a4:	lsl	r1, r1, #1
   1c0a8:	bl	1cefc <__assert_fail@plt+0xb7a8>
   1c0ac:	str	r0, [sp, #20]
   1c0b0:	ldr	r0, [sp, #20]
   1c0b4:	cmp	r0, #0
   1c0b8:	beq	1c0c8 <__assert_fail@plt+0xa974>
   1c0bc:	ldr	r0, [sp, #20]
   1c0c0:	str	r0, [fp, #-4]
   1c0c4:	b	1c144 <__assert_fail@plt+0xa9f0>
   1c0c8:	b	1c038 <__assert_fail@plt+0xa8e4>
   1c0cc:	b	1c0d8 <__assert_fail@plt+0xa984>
   1c0d0:	ldr	r0, [fp, #-8]
   1c0d4:	bl	1db00 <__assert_fail@plt+0xc3ac>
   1c0d8:	b	1c13c <__assert_fail@plt+0xa9e8>
   1c0dc:	ldr	r0, [fp, #12]
   1c0e0:	ldr	r0, [r0, #92]	; 0x5c
   1c0e4:	cmp	r0, #1
   1c0e8:	ble	1c0f8 <__assert_fail@plt+0xa9a4>
   1c0ec:	ldr	r0, [fp, #-8]
   1c0f0:	bl	1dc04 <__assert_fail@plt+0xc4b0>
   1c0f4:	b	1c138 <__assert_fail@plt+0xa9e4>
   1c0f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c0fc:	movw	r1, #0
   1c100:	cmp	r0, r1
   1c104:	beq	1c114 <__assert_fail@plt+0xa9c0>
   1c108:	ldr	r0, [fp, #-8]
   1c10c:	bl	1df44 <__assert_fail@plt+0xc7f0>
   1c110:	b	1c134 <__assert_fail@plt+0xa9e0>
   1c114:	ldr	r0, [fp, #-8]
   1c118:	ldr	r0, [r0, #36]	; 0x24
   1c11c:	ldr	r1, [fp, #-8]
   1c120:	str	r0, [r1, #28]
   1c124:	ldr	r0, [fp, #-8]
   1c128:	ldr	r0, [r0, #36]	; 0x24
   1c12c:	ldr	r1, [fp, #-8]
   1c130:	str	r0, [r1, #32]
   1c134:	b	1c138 <__assert_fail@plt+0xa9e4>
   1c138:	b	1c13c <__assert_fail@plt+0xa9e8>
   1c13c:	movw	r0, #0
   1c140:	str	r0, [fp, #-4]
   1c144:	ldr	r0, [fp, #-4]
   1c148:	mov	sp, fp
   1c14c:	pop	{fp, pc}
   1c150:	push	{fp, lr}
   1c154:	mov	fp, sp
   1c158:	sub	sp, sp, #16
   1c15c:	str	r0, [fp, #-4]
   1c160:	ldr	r0, [fp, #-4]
   1c164:	ldr	r0, [r0]
   1c168:	str	r0, [sp, #8]
   1c16c:	ldr	r0, [sp, #8]
   1c170:	ldr	r0, [r0, #56]	; 0x38
   1c174:	str	r0, [sp, #4]
   1c178:	ldr	r0, [sp, #4]
   1c17c:	movw	r1, #0
   1c180:	cmp	r0, r1
   1c184:	beq	1c1a8 <__assert_fail@plt+0xaa54>
   1c188:	ldr	r0, [sp, #4]
   1c18c:	ldr	r0, [r0]
   1c190:	str	r0, [sp]
   1c194:	ldr	r0, [sp, #4]
   1c198:	bl	1604c <__assert_fail@plt+0x48f8>
   1c19c:	ldr	r0, [sp]
   1c1a0:	str	r0, [sp, #4]
   1c1a4:	b	1c178 <__assert_fail@plt+0xaa24>
   1c1a8:	ldr	r0, [sp, #8]
   1c1ac:	movw	r1, #0
   1c1b0:	str	r1, [r0, #56]	; 0x38
   1c1b4:	ldr	r0, [sp, #8]
   1c1b8:	movw	r2, #31
   1c1bc:	str	r2, [r0, #64]	; 0x40
   1c1c0:	ldr	r0, [sp, #8]
   1c1c4:	str	r1, [r0, #52]	; 0x34
   1c1c8:	ldr	r0, [sp, #8]
   1c1cc:	ldr	r0, [r0, #16]
   1c1d0:	bl	1604c <__assert_fail@plt+0x48f8>
   1c1d4:	ldr	r0, [sp, #8]
   1c1d8:	movw	r1, #0
   1c1dc:	str	r1, [r0, #16]
   1c1e0:	mov	sp, fp
   1c1e4:	pop	{fp, pc}
   1c1e8:	push	{fp, lr}
   1c1ec:	mov	fp, sp
   1c1f0:	sub	sp, sp, #8
   1c1f4:	str	r0, [sp, #4]
   1c1f8:	ldr	r0, [sp, #4]
   1c1fc:	ldr	r0, [r0, #8]
   1c200:	bl	1604c <__assert_fail@plt+0x48f8>
   1c204:	ldr	r0, [sp, #4]
   1c208:	ldr	r0, [r0, #12]
   1c20c:	bl	1604c <__assert_fail@plt+0x48f8>
   1c210:	ldr	r0, [sp, #4]
   1c214:	ldrsb	r0, [r0, #75]	; 0x4b
   1c218:	cmp	r0, #0
   1c21c:	beq	1c22c <__assert_fail@plt+0xaad8>
   1c220:	ldr	r0, [sp, #4]
   1c224:	ldr	r0, [r0, #4]
   1c228:	bl	1604c <__assert_fail@plt+0x48f8>
   1c22c:	mov	sp, fp
   1c230:	pop	{fp, pc}
   1c234:	push	{fp, lr}
   1c238:	mov	fp, sp
   1c23c:	sub	sp, sp, #72	; 0x48
   1c240:	str	r0, [fp, #-8]
   1c244:	str	r1, [fp, #-12]
   1c248:	str	r2, [fp, #-16]
   1c24c:	str	r3, [fp, #-20]	; 0xffffffec
   1c250:	ldr	r0, [fp, #-12]
   1c254:	ldr	r0, [r0]
   1c258:	str	r0, [fp, #-24]	; 0xffffffe8
   1c25c:	ldr	r0, [fp, #-16]
   1c260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c264:	str	r0, [r1, #128]	; 0x80
   1c268:	ldr	r1, [fp, #-8]
   1c26c:	ldr	r0, [fp, #-16]
   1c270:	orr	r2, r0, #8388608	; 0x800000
   1c274:	add	r0, sp, #28
   1c278:	bl	1e020 <__assert_fail@plt+0xc8cc>
   1c27c:	ldr	r0, [fp, #-8]
   1c280:	ldr	r1, [fp, #-12]
   1c284:	ldr	r3, [fp, #-16]
   1c288:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c28c:	add	lr, sp, #28
   1c290:	str	r2, [sp, #24]
   1c294:	mov	r2, lr
   1c298:	movw	lr, #0
   1c29c:	str	lr, [sp]
   1c2a0:	ldr	lr, [sp, #24]
   1c2a4:	str	lr, [sp, #4]
   1c2a8:	bl	1e060 <__assert_fail@plt+0xc90c>
   1c2ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2b4:	ldr	r0, [r0]
   1c2b8:	cmp	r0, #0
   1c2bc:	movw	r0, #0
   1c2c0:	str	r0, [sp, #20]
   1c2c4:	beq	1c2e0 <__assert_fail@plt+0xab8c>
   1c2c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2cc:	movw	r1, #0
   1c2d0:	cmp	r0, r1
   1c2d4:	movw	r0, #0
   1c2d8:	moveq	r0, #1
   1c2dc:	str	r0, [sp, #20]
   1c2e0:	ldr	r0, [sp, #20]
   1c2e4:	tst	r0, #1
   1c2e8:	beq	1c2f8 <__assert_fail@plt+0xaba4>
   1c2ec:	movw	r0, #0
   1c2f0:	str	r0, [fp, #-4]
   1c2f4:	b	1c3a4 <__assert_fail@plt+0xac50>
   1c2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2fc:	movw	r1, #0
   1c300:	str	r1, [sp, #16]
   1c304:	ldr	r2, [sp, #16]
   1c308:	movw	r3, #2
   1c30c:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1c310:	str	r0, [fp, #-32]	; 0xffffffe0
   1c314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c318:	movw	r1, #0
   1c31c:	cmp	r0, r1
   1c320:	beq	1c340 <__assert_fail@plt+0xabec>
   1c324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c32c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c330:	movw	r3, #16
   1c334:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1c338:	str	r0, [sp, #36]	; 0x24
   1c33c:	b	1c348 <__assert_fail@plt+0xabf4>
   1c340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c344:	str	r0, [sp, #36]	; 0x24
   1c348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c34c:	movw	r1, #0
   1c350:	cmp	r0, r1
   1c354:	movw	r0, #1
   1c358:	str	r0, [sp, #12]
   1c35c:	beq	1c378 <__assert_fail@plt+0xac24>
   1c360:	ldr	r0, [sp, #36]	; 0x24
   1c364:	movw	r1, #0
   1c368:	cmp	r0, r1
   1c36c:	movw	r0, #0
   1c370:	moveq	r0, #1
   1c374:	str	r0, [sp, #12]
   1c378:	ldr	r0, [sp, #12]
   1c37c:	tst	r0, #1
   1c380:	beq	1c39c <__assert_fail@plt+0xac48>
   1c384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c388:	movw	r1, #12
   1c38c:	str	r1, [r0]
   1c390:	movw	r0, #0
   1c394:	str	r0, [fp, #-4]
   1c398:	b	1c3a4 <__assert_fail@plt+0xac50>
   1c39c:	ldr	r0, [sp, #36]	; 0x24
   1c3a0:	str	r0, [fp, #-4]
   1c3a4:	ldr	r0, [fp, #-4]
   1c3a8:	mov	sp, fp
   1c3ac:	pop	{fp, pc}
   1c3b0:	push	{fp, lr}
   1c3b4:	mov	fp, sp
   1c3b8:	sub	sp, sp, #48	; 0x30
   1c3bc:	str	r0, [fp, #-8]
   1c3c0:	ldr	r0, [fp, #-8]
   1c3c4:	ldr	r0, [r0]
   1c3c8:	str	r0, [fp, #-12]
   1c3cc:	ldr	r0, [fp, #-12]
   1c3d0:	ldr	r0, [r0, #4]
   1c3d4:	lsl	r0, r0, #2
   1c3d8:	bl	38a7c <__assert_fail@plt+0x27328>
   1c3dc:	ldr	lr, [fp, #-12]
   1c3e0:	str	r0, [lr, #12]
   1c3e4:	ldr	r0, [fp, #-12]
   1c3e8:	ldr	r0, [r0, #4]
   1c3ec:	lsl	r0, r0, #2
   1c3f0:	bl	38a7c <__assert_fail@plt+0x27328>
   1c3f4:	ldr	lr, [fp, #-12]
   1c3f8:	str	r0, [lr, #16]
   1c3fc:	ldr	r0, [fp, #-12]
   1c400:	ldr	r0, [r0, #4]
   1c404:	movw	lr, #12
   1c408:	mul	r0, r0, lr
   1c40c:	bl	38a7c <__assert_fail@plt+0x27328>
   1c410:	ldr	lr, [fp, #-12]
   1c414:	str	r0, [lr, #20]
   1c418:	ldr	r0, [fp, #-12]
   1c41c:	ldr	r0, [r0, #4]
   1c420:	movw	lr, #12
   1c424:	mul	r0, r0, lr
   1c428:	bl	38a7c <__assert_fail@plt+0x27328>
   1c42c:	ldr	lr, [fp, #-12]
   1c430:	str	r0, [lr, #24]
   1c434:	ldr	r0, [fp, #-12]
   1c438:	ldr	r0, [r0, #12]
   1c43c:	movw	lr, #0
   1c440:	cmp	r0, lr
   1c444:	movw	r0, #1
   1c448:	str	r0, [sp, #24]
   1c44c:	beq	1c4a4 <__assert_fail@plt+0xad50>
   1c450:	ldr	r0, [fp, #-12]
   1c454:	ldr	r0, [r0, #16]
   1c458:	movw	r1, #0
   1c45c:	cmp	r0, r1
   1c460:	movw	r0, #1
   1c464:	str	r0, [sp, #24]
   1c468:	beq	1c4a4 <__assert_fail@plt+0xad50>
   1c46c:	ldr	r0, [fp, #-12]
   1c470:	ldr	r0, [r0, #20]
   1c474:	movw	r1, #0
   1c478:	cmp	r0, r1
   1c47c:	movw	r0, #1
   1c480:	str	r0, [sp, #24]
   1c484:	beq	1c4a4 <__assert_fail@plt+0xad50>
   1c488:	ldr	r0, [fp, #-12]
   1c48c:	ldr	r0, [r0, #24]
   1c490:	movw	r1, #0
   1c494:	cmp	r0, r1
   1c498:	movw	r0, #0
   1c49c:	moveq	r0, #1
   1c4a0:	str	r0, [sp, #24]
   1c4a4:	ldr	r0, [sp, #24]
   1c4a8:	tst	r0, #1
   1c4ac:	beq	1c4bc <__assert_fail@plt+0xad68>
   1c4b0:	movw	r0, #12
   1c4b4:	str	r0, [fp, #-4]
   1c4b8:	b	1c77c <__assert_fail@plt+0xb028>
   1c4bc:	ldr	r0, [fp, #-8]
   1c4c0:	ldr	r0, [r0, #24]
   1c4c4:	lsl	r0, r0, #2
   1c4c8:	bl	38a7c <__assert_fail@plt+0x27328>
   1c4cc:	ldr	lr, [fp, #-12]
   1c4d0:	str	r0, [lr, #132]	; 0x84
   1c4d4:	ldr	r0, [fp, #-12]
   1c4d8:	ldr	r0, [r0, #132]	; 0x84
   1c4dc:	movw	lr, #0
   1c4e0:	cmp	r0, lr
   1c4e4:	beq	1c5d8 <__assert_fail@plt+0xae84>
   1c4e8:	movw	r0, #0
   1c4ec:	str	r0, [fp, #-20]	; 0xffffffec
   1c4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c4f4:	ldr	r1, [fp, #-8]
   1c4f8:	ldr	r1, [r1, #24]
   1c4fc:	cmp	r0, r1
   1c500:	bcs	1c52c <__assert_fail@plt+0xadd8>
   1c504:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c508:	mov	r1, r0
   1c50c:	ldr	r2, [fp, #-12]
   1c510:	ldr	r2, [r2, #132]	; 0x84
   1c514:	add	r0, r2, r0, lsl #2
   1c518:	str	r1, [r0]
   1c51c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c520:	add	r0, r0, #1
   1c524:	str	r0, [fp, #-20]	; 0xffffffec
   1c528:	b	1c4f0 <__assert_fail@plt+0xad9c>
   1c52c:	ldr	r0, [fp, #-12]
   1c530:	ldr	r0, [r0, #52]	; 0x34
   1c534:	ldr	r1, [fp, #-12]
   1c538:	movw	r2, #15300	; 0x3bc4
   1c53c:	movt	r2, #2
   1c540:	str	r1, [sp, #20]
   1c544:	mov	r1, r2
   1c548:	ldr	r2, [sp, #20]
   1c54c:	bl	23aa8 <__assert_fail@plt+0x12354>
   1c550:	movw	r1, #0
   1c554:	str	r1, [fp, #-20]	; 0xffffffec
   1c558:	str	r0, [sp, #16]
   1c55c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c560:	ldr	r1, [fp, #-8]
   1c564:	ldr	r1, [r1, #24]
   1c568:	cmp	r0, r1
   1c56c:	bcs	1c5a8 <__assert_fail@plt+0xae54>
   1c570:	ldr	r0, [fp, #-12]
   1c574:	ldr	r0, [r0, #132]	; 0x84
   1c578:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c57c:	add	r0, r0, r1, lsl #2
   1c580:	ldr	r0, [r0]
   1c584:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c588:	cmp	r0, r1
   1c58c:	beq	1c594 <__assert_fail@plt+0xae40>
   1c590:	b	1c5a8 <__assert_fail@plt+0xae54>
   1c594:	b	1c598 <__assert_fail@plt+0xae44>
   1c598:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c59c:	add	r0, r0, #1
   1c5a0:	str	r0, [fp, #-20]	; 0xffffffec
   1c5a4:	b	1c55c <__assert_fail@plt+0xae08>
   1c5a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5ac:	ldr	r1, [fp, #-8]
   1c5b0:	ldr	r1, [r1, #24]
   1c5b4:	cmp	r0, r1
   1c5b8:	bne	1c5d4 <__assert_fail@plt+0xae80>
   1c5bc:	ldr	r0, [fp, #-12]
   1c5c0:	ldr	r0, [r0, #132]	; 0x84
   1c5c4:	bl	1604c <__assert_fail@plt+0x48f8>
   1c5c8:	ldr	r0, [fp, #-12]
   1c5cc:	movw	lr, #0
   1c5d0:	str	lr, [r0, #132]	; 0x84
   1c5d4:	b	1c5d8 <__assert_fail@plt+0xae84>
   1c5d8:	ldr	r0, [fp, #-12]
   1c5dc:	ldr	r0, [r0, #52]	; 0x34
   1c5e0:	ldr	r1, [fp, #-8]
   1c5e4:	movw	r2, #15672	; 0x3d38
   1c5e8:	movt	r2, #2
   1c5ec:	str	r1, [sp, #12]
   1c5f0:	mov	r1, r2
   1c5f4:	ldr	r2, [sp, #12]
   1c5f8:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1c5fc:	str	r0, [fp, #-16]
   1c600:	ldr	r0, [fp, #-16]
   1c604:	cmp	r0, #0
   1c608:	beq	1c618 <__assert_fail@plt+0xaec4>
   1c60c:	ldr	r0, [fp, #-16]
   1c610:	str	r0, [fp, #-4]
   1c614:	b	1c77c <__assert_fail@plt+0xb028>
   1c618:	ldr	r0, [fp, #-12]
   1c61c:	ldr	r0, [r0, #52]	; 0x34
   1c620:	ldr	r1, [fp, #-12]
   1c624:	movw	r2, #15940	; 0x3e44
   1c628:	movt	r2, #2
   1c62c:	str	r1, [sp, #8]
   1c630:	mov	r1, r2
   1c634:	ldr	r2, [sp, #8]
   1c638:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1c63c:	str	r0, [fp, #-16]
   1c640:	ldr	r0, [fp, #-16]
   1c644:	cmp	r0, #0
   1c648:	beq	1c658 <__assert_fail@plt+0xaf04>
   1c64c:	ldr	r0, [fp, #-16]
   1c650:	str	r0, [fp, #-4]
   1c654:	b	1c77c <__assert_fail@plt+0xb028>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	ldr	r0, [r0, #52]	; 0x34
   1c660:	ldr	r1, [fp, #-12]
   1c664:	movw	r2, #16212	; 0x3f54
   1c668:	movt	r2, #2
   1c66c:	str	r1, [sp, #4]
   1c670:	mov	r1, r2
   1c674:	ldr	r2, [sp, #4]
   1c678:	bl	23aa8 <__assert_fail@plt+0x12354>
   1c67c:	ldr	r1, [fp, #-12]
   1c680:	ldr	r1, [r1, #52]	; 0x34
   1c684:	ldr	r2, [fp, #-12]
   1c688:	str	r0, [sp]
   1c68c:	mov	r0, r1
   1c690:	movw	r1, #16432	; 0x4030
   1c694:	movt	r1, #2
   1c698:	bl	23aa8 <__assert_fail@plt+0x12354>
   1c69c:	str	r0, [fp, #-16]
   1c6a0:	ldr	r0, [fp, #-16]
   1c6a4:	cmp	r0, #0
   1c6a8:	beq	1c6b8 <__assert_fail@plt+0xaf64>
   1c6ac:	ldr	r0, [fp, #-16]
   1c6b0:	str	r0, [fp, #-4]
   1c6b4:	b	1c77c <__assert_fail@plt+0xb028>
   1c6b8:	ldr	r0, [fp, #-12]
   1c6bc:	bl	24298 <__assert_fail@plt+0x12b44>
   1c6c0:	str	r0, [fp, #-16]
   1c6c4:	ldr	r0, [fp, #-16]
   1c6c8:	cmp	r0, #0
   1c6cc:	beq	1c6dc <__assert_fail@plt+0xaf88>
   1c6d0:	ldr	r0, [fp, #-16]
   1c6d4:	str	r0, [fp, #-4]
   1c6d8:	b	1c77c <__assert_fail@plt+0xb028>
   1c6dc:	ldr	r0, [fp, #-8]
   1c6e0:	ldrb	r0, [r0, #28]
   1c6e4:	ubfx	r0, r0, #4, #1
   1c6e8:	and	r0, r0, #255	; 0xff
   1c6ec:	cmp	r0, #0
   1c6f0:	bne	1c71c <__assert_fail@plt+0xafc8>
   1c6f4:	ldr	r0, [fp, #-8]
   1c6f8:	ldr	r0, [r0, #24]
   1c6fc:	cmp	r0, #0
   1c700:	bls	1c71c <__assert_fail@plt+0xafc8>
   1c704:	ldr	r0, [fp, #-12]
   1c708:	ldrb	r0, [r0, #88]	; 0x58
   1c70c:	and	r0, r0, #1
   1c710:	and	r0, r0, #255	; 0xff
   1c714:	cmp	r0, #0
   1c718:	bne	1c72c <__assert_fail@plt+0xafd8>
   1c71c:	ldr	r0, [fp, #-12]
   1c720:	ldr	r0, [r0, #76]	; 0x4c
   1c724:	cmp	r0, #0
   1c728:	beq	1c774 <__assert_fail@plt+0xb020>
   1c72c:	ldr	r0, [fp, #-12]
   1c730:	ldr	r0, [r0, #8]
   1c734:	movw	r1, #12
   1c738:	mul	r0, r0, r1
   1c73c:	bl	38a7c <__assert_fail@plt+0x27328>
   1c740:	ldr	r1, [fp, #-12]
   1c744:	str	r0, [r1, #28]
   1c748:	ldr	r0, [fp, #-12]
   1c74c:	ldr	r0, [r0, #28]
   1c750:	movw	r1, #0
   1c754:	cmp	r0, r1
   1c758:	bne	1c768 <__assert_fail@plt+0xb014>
   1c75c:	movw	r0, #12
   1c760:	str	r0, [fp, #-4]
   1c764:	b	1c77c <__assert_fail@plt+0xb028>
   1c768:	ldr	r0, [fp, #-12]
   1c76c:	bl	243e0 <__assert_fail@plt+0x12c8c>
   1c770:	str	r0, [fp, #-16]
   1c774:	ldr	r0, [fp, #-16]
   1c778:	str	r0, [fp, #-4]
   1c77c:	ldr	r0, [fp, #-4]
   1c780:	mov	sp, fp
   1c784:	pop	{fp, pc}
   1c788:	push	{fp, lr}
   1c78c:	mov	fp, sp
   1c790:	sub	sp, sp, #32
   1c794:	str	r0, [fp, #-4]
   1c798:	movw	r0, #0
   1c79c:	strb	r0, [fp, #-13]
   1c7a0:	strb	r0, [fp, #-14]
   1c7a4:	movw	r0, #0
   1c7a8:	str	r0, [fp, #-8]
   1c7ac:	ldr	r0, [fp, #-8]
   1c7b0:	ldr	r1, [fp, #-4]
   1c7b4:	ldr	r1, [r1, #8]
   1c7b8:	cmp	r0, r1
   1c7bc:	bcs	1c93c <__assert_fail@plt+0xb1e8>
   1c7c0:	ldr	r0, [fp, #-4]
   1c7c4:	ldr	r0, [r0]
   1c7c8:	ldr	r1, [fp, #-8]
   1c7cc:	add	r0, r0, r1, lsl #3
   1c7d0:	ldrb	r0, [r0, #4]
   1c7d4:	sub	r0, r0, #1
   1c7d8:	cmp	r0, #11
   1c7dc:	str	r0, [sp, #8]
   1c7e0:	bhi	1c924 <__assert_fail@plt+0xb1d0>
   1c7e4:	add	r0, pc, #8
   1c7e8:	ldr	r1, [sp, #8]
   1c7ec:	ldr	r0, [r0, r1, lsl #2]
   1c7f0:	mov	pc, r0
   1c7f4:	andeq	ip, r1, r4, lsr #16
   1c7f8:			; <UNDEFINED> instruction: 0x0001c8b4
   1c7fc:			; <UNDEFINED> instruction: 0x0001c8bc
   1c800:			; <UNDEFINED> instruction: 0x0001c8b4
   1c804:	andeq	ip, r1, r8, lsr #17
   1c808:			; <UNDEFINED> instruction: 0x0001c8b8
   1c80c:	andeq	ip, r1, r4, lsr #18
   1c810:			; <UNDEFINED> instruction: 0x0001c8b4
   1c814:			; <UNDEFINED> instruction: 0x0001c8b4
   1c818:			; <UNDEFINED> instruction: 0x0001c8b4
   1c81c:			; <UNDEFINED> instruction: 0x0001c8b4
   1c820:	andeq	ip, r1, ip, asr #16
   1c824:	ldr	r0, [fp, #-4]
   1c828:	ldr	r0, [r0]
   1c82c:	ldr	r1, [fp, #-8]
   1c830:	add	r0, r0, r1, lsl #3
   1c834:	ldrb	r0, [r0]
   1c838:	cmp	r0, #128	; 0x80
   1c83c:	blt	1c848 <__assert_fail@plt+0xb0f4>
   1c840:	movw	r0, #1
   1c844:	strb	r0, [fp, #-13]
   1c848:	b	1c928 <__assert_fail@plt+0xb1d4>
   1c84c:	ldr	r0, [fp, #-4]
   1c850:	ldr	r0, [r0]
   1c854:	ldr	r1, [fp, #-8]
   1c858:	ldr	r0, [r0, r1, lsl #3]
   1c85c:	cmp	r0, #16
   1c860:	str	r0, [sp, #4]
   1c864:	beq	1c89c <__assert_fail@plt+0xb148>
   1c868:	b	1c86c <__assert_fail@plt+0xb118>
   1c86c:	ldr	r0, [sp, #4]
   1c870:	cmp	r0, #32
   1c874:	beq	1c89c <__assert_fail@plt+0xb148>
   1c878:	b	1c87c <__assert_fail@plt+0xb128>
   1c87c:	ldr	r0, [sp, #4]
   1c880:	cmp	r0, #64	; 0x40
   1c884:	beq	1c89c <__assert_fail@plt+0xb148>
   1c888:	b	1c88c <__assert_fail@plt+0xb138>
   1c88c:	ldr	r0, [sp, #4]
   1c890:	cmp	r0, #128	; 0x80
   1c894:	bne	1c8a0 <__assert_fail@plt+0xb14c>
   1c898:	b	1c89c <__assert_fail@plt+0xb148>
   1c89c:	b	1c8a4 <__assert_fail@plt+0xb150>
   1c8a0:	b	1ca8c <__assert_fail@plt+0xb338>
   1c8a4:	b	1c928 <__assert_fail@plt+0xb1d4>
   1c8a8:	movw	r0, #1
   1c8ac:	strb	r0, [fp, #-14]
   1c8b0:	b	1c928 <__assert_fail@plt+0xb1d4>
   1c8b4:	b	1c928 <__assert_fail@plt+0xb1d4>
   1c8b8:	b	1ca8c <__assert_fail@plt+0xb338>
   1c8bc:	movw	r0, #0
   1c8c0:	str	r0, [sp, #12]
   1c8c4:	movw	r0, #4
   1c8c8:	str	r0, [fp, #-12]
   1c8cc:	ldr	r0, [fp, #-12]
   1c8d0:	cmp	r0, #8
   1c8d4:	bge	1c920 <__assert_fail@plt+0xb1cc>
   1c8d8:	ldr	r0, [fp, #-4]
   1c8dc:	ldr	r0, [r0]
   1c8e0:	ldr	r1, [fp, #-8]
   1c8e4:	ldr	r0, [r0, r1, lsl #3]
   1c8e8:	ldr	r1, [fp, #-12]
   1c8ec:	add	r0, r0, r1, lsl #2
   1c8f0:	ldr	r0, [r0]
   1c8f4:	ldr	r1, [sp, #12]
   1c8f8:	lsr	r0, r0, r1
   1c8fc:	cmp	r0, #0
   1c900:	beq	1c908 <__assert_fail@plt+0xb1b4>
   1c904:	b	1ca8c <__assert_fail@plt+0xb338>
   1c908:	movw	r0, #0
   1c90c:	str	r0, [sp, #12]
   1c910:	ldr	r0, [fp, #-12]
   1c914:	add	r0, r0, #1
   1c918:	str	r0, [fp, #-12]
   1c91c:	b	1c8cc <__assert_fail@plt+0xb178>
   1c920:	b	1c928 <__assert_fail@plt+0xb1d4>
   1c924:	bl	1173c <abort@plt>
   1c928:	b	1c92c <__assert_fail@plt+0xb1d8>
   1c92c:	ldr	r0, [fp, #-8]
   1c930:	add	r0, r0, #1
   1c934:	str	r0, [fp, #-8]
   1c938:	b	1c7ac <__assert_fail@plt+0xb058>
   1c93c:	ldrb	r0, [fp, #-13]
   1c940:	tst	r0, #1
   1c944:	bne	1c954 <__assert_fail@plt+0xb200>
   1c948:	ldrb	r0, [fp, #-14]
   1c94c:	tst	r0, #1
   1c950:	beq	1ca30 <__assert_fail@plt+0xb2dc>
   1c954:	movw	r0, #0
   1c958:	str	r0, [fp, #-8]
   1c95c:	ldr	r0, [fp, #-8]
   1c960:	ldr	r1, [fp, #-4]
   1c964:	ldr	r1, [r1, #8]
   1c968:	cmp	r0, r1
   1c96c:	bcs	1ca2c <__assert_fail@plt+0xb2d8>
   1c970:	ldr	r0, [fp, #-4]
   1c974:	ldr	r0, [r0]
   1c978:	ldr	r1, [fp, #-8]
   1c97c:	add	r0, r0, r1, lsl #3
   1c980:	ldr	r0, [r0, #4]
   1c984:	and	r0, r0, #255	; 0xff
   1c988:	cmp	r0, #1
   1c98c:	bne	1c9d0 <__assert_fail@plt+0xb27c>
   1c990:	ldr	r0, [fp, #-4]
   1c994:	ldr	r0, [r0]
   1c998:	ldr	r1, [fp, #-8]
   1c99c:	add	r0, r0, r1, lsl #3
   1c9a0:	ldrb	r0, [r0]
   1c9a4:	cmp	r0, #128	; 0x80
   1c9a8:	blt	1c9d0 <__assert_fail@plt+0xb27c>
   1c9ac:	ldr	r0, [fp, #-4]
   1c9b0:	ldr	r0, [r0]
   1c9b4:	ldr	r1, [fp, #-8]
   1c9b8:	add	r0, r0, r1, lsl #3
   1c9bc:	ldr	r1, [r0, #4]
   1c9c0:	mvn	r2, #2097152	; 0x200000
   1c9c4:	and	r1, r1, r2
   1c9c8:	str	r1, [r0, #4]
   1c9cc:	b	1ca18 <__assert_fail@plt+0xb2c4>
   1c9d0:	ldr	r0, [fp, #-4]
   1c9d4:	ldr	r0, [r0]
   1c9d8:	ldr	r1, [fp, #-8]
   1c9dc:	add	r0, r0, r1, lsl #3
   1c9e0:	ldr	r0, [r0, #4]
   1c9e4:	and	r0, r0, #255	; 0xff
   1c9e8:	cmp	r0, #5
   1c9ec:	bne	1ca14 <__assert_fail@plt+0xb2c0>
   1c9f0:	ldr	r0, [fp, #-4]
   1c9f4:	ldr	r0, [r0]
   1c9f8:	ldr	r1, [fp, #-8]
   1c9fc:	add	r0, r0, r1, lsl #3
   1ca00:	ldr	r1, [r0, #4]
   1ca04:	mvn	r2, #255	; 0xff
   1ca08:	and	r1, r1, r2
   1ca0c:	orr	r1, r1, #7
   1ca10:	str	r1, [r0, #4]
   1ca14:	b	1ca18 <__assert_fail@plt+0xb2c4>
   1ca18:	b	1ca1c <__assert_fail@plt+0xb2c8>
   1ca1c:	ldr	r0, [fp, #-8]
   1ca20:	add	r0, r0, #1
   1ca24:	str	r0, [fp, #-8]
   1ca28:	b	1c95c <__assert_fail@plt+0xb208>
   1ca2c:	b	1ca30 <__assert_fail@plt+0xb2dc>
   1ca30:	ldr	r0, [fp, #-4]
   1ca34:	mov	r1, #1
   1ca38:	str	r1, [r0, #92]	; 0x5c
   1ca3c:	ldr	r0, [fp, #-4]
   1ca40:	ldrb	r1, [r0, #88]	; 0x58
   1ca44:	bic	r1, r1, #4
   1ca48:	strb	r1, [r0, #88]	; 0x58
   1ca4c:	ldr	r0, [fp, #-4]
   1ca50:	ldr	r0, [r0, #76]	; 0x4c
   1ca54:	cmp	r0, #0
   1ca58:	movw	r0, #1
   1ca5c:	str	r0, [sp]
   1ca60:	bgt	1ca6c <__assert_fail@plt+0xb318>
   1ca64:	ldrb	r0, [fp, #-14]
   1ca68:	str	r0, [sp]
   1ca6c:	ldr	r0, [sp]
   1ca70:	ldr	r1, [fp, #-4]
   1ca74:	and	r0, r0, #1
   1ca78:	ldrb	r2, [r1, #88]	; 0x58
   1ca7c:	lsl	r0, r0, #1
   1ca80:	bic	r2, r2, #2
   1ca84:	orr	r0, r2, r0
   1ca88:	strb	r0, [r1, #88]	; 0x58
   1ca8c:	mov	sp, fp
   1ca90:	pop	{fp, pc}
   1ca94:	push	{fp, lr}
   1ca98:	mov	fp, sp
   1ca9c:	sub	sp, sp, #64	; 0x40
   1caa0:	str	r0, [fp, #-8]
   1caa4:	ldr	r0, [fp, #-8]
   1caa8:	ldr	r0, [r0, #52]	; 0x34
   1caac:	ldr	r0, [r0, #12]
   1cab0:	ldr	r0, [r0, #28]
   1cab4:	str	r0, [fp, #-12]
   1cab8:	ldr	r0, [fp, #-12]
   1cabc:	ldr	r1, [fp, #-8]
   1cac0:	str	r0, [r1, #72]	; 0x48
   1cac4:	ldr	r0, [fp, #-8]
   1cac8:	ldr	r0, [r0, #24]
   1cacc:	ldr	r1, [fp, #-12]
   1cad0:	movw	r2, #12
   1cad4:	mul	r1, r1, r2
   1cad8:	add	r1, r0, r1
   1cadc:	add	r0, sp, #32
   1cae0:	bl	25e30 <__assert_fail@plt+0x146dc>
   1cae4:	str	r0, [fp, #-20]	; 0xffffffec
   1cae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1caec:	cmp	r0, #0
   1caf0:	beq	1cb00 <__assert_fail@plt+0xb3ac>
   1caf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1caf8:	str	r0, [fp, #-4]
   1cafc:	b	1cdec <__assert_fail@plt+0xb698>
   1cb00:	ldr	r0, [fp, #-8]
   1cb04:	ldr	r0, [r0, #76]	; 0x4c
   1cb08:	cmp	r0, #0
   1cb0c:	ble	1cca0 <__assert_fail@plt+0xb54c>
   1cb10:	movw	r0, #0
   1cb14:	str	r0, [fp, #-16]
   1cb18:	ldr	r0, [fp, #-16]
   1cb1c:	ldr	r1, [sp, #36]	; 0x24
   1cb20:	cmp	r0, r1
   1cb24:	bge	1cc9c <__assert_fail@plt+0xb548>
   1cb28:	ldr	r0, [sp, #40]	; 0x28
   1cb2c:	ldr	r1, [fp, #-16]
   1cb30:	ldr	r0, [r0, r1, lsl #2]
   1cb34:	str	r0, [sp, #28]
   1cb38:	ldr	r0, [fp, #-8]
   1cb3c:	ldr	r0, [r0]
   1cb40:	ldr	r1, [sp, #28]
   1cb44:	add	r0, r0, r1, lsl #3
   1cb48:	ldr	r0, [r0, #4]
   1cb4c:	and	r0, r0, #255	; 0xff
   1cb50:	str	r0, [sp, #24]
   1cb54:	ldr	r0, [sp, #24]
   1cb58:	cmp	r0, #4
   1cb5c:	beq	1cb64 <__assert_fail@plt+0xb410>
   1cb60:	b	1cc8c <__assert_fail@plt+0xb538>
   1cb64:	movw	r0, #0
   1cb68:	str	r0, [sp, #20]
   1cb6c:	ldr	r0, [sp, #20]
   1cb70:	ldr	r1, [sp, #36]	; 0x24
   1cb74:	cmp	r0, r1
   1cb78:	bge	1cbe8 <__assert_fail@plt+0xb494>
   1cb7c:	ldr	r0, [fp, #-8]
   1cb80:	ldr	r0, [r0]
   1cb84:	ldr	r1, [sp, #40]	; 0x28
   1cb88:	ldr	r2, [sp, #20]
   1cb8c:	ldr	r1, [r1, r2, lsl #2]
   1cb90:	add	r0, r0, r1, lsl #3
   1cb94:	str	r0, [sp, #16]
   1cb98:	ldr	r0, [sp, #16]
   1cb9c:	ldr	r0, [r0, #4]
   1cba0:	and	r0, r0, #255	; 0xff
   1cba4:	cmp	r0, #9
   1cba8:	bne	1cbd4 <__assert_fail@plt+0xb480>
   1cbac:	ldr	r0, [sp, #16]
   1cbb0:	ldr	r0, [r0]
   1cbb4:	ldr	r1, [fp, #-8]
   1cbb8:	ldr	r1, [r1]
   1cbbc:	ldr	r2, [sp, #28]
   1cbc0:	add	r1, r1, r2, lsl #3
   1cbc4:	ldr	r1, [r1]
   1cbc8:	cmp	r0, r1
   1cbcc:	bne	1cbd4 <__assert_fail@plt+0xb480>
   1cbd0:	b	1cbe8 <__assert_fail@plt+0xb494>
   1cbd4:	b	1cbd8 <__assert_fail@plt+0xb484>
   1cbd8:	ldr	r0, [sp, #20]
   1cbdc:	add	r0, r0, #1
   1cbe0:	str	r0, [sp, #20]
   1cbe4:	b	1cb6c <__assert_fail@plt+0xb418>
   1cbe8:	ldr	r0, [sp, #20]
   1cbec:	ldr	r1, [sp, #36]	; 0x24
   1cbf0:	cmp	r0, r1
   1cbf4:	bne	1cbfc <__assert_fail@plt+0xb4a8>
   1cbf8:	b	1cc8c <__assert_fail@plt+0xb538>
   1cbfc:	ldr	r0, [sp, #24]
   1cc00:	cmp	r0, #4
   1cc04:	bne	1cc88 <__assert_fail@plt+0xb534>
   1cc08:	ldr	r0, [fp, #-8]
   1cc0c:	ldr	r0, [r0, #20]
   1cc10:	ldr	r1, [sp, #28]
   1cc14:	movw	r2, #12
   1cc18:	mul	r1, r1, r2
   1cc1c:	add	r0, r0, r1
   1cc20:	ldr	r0, [r0, #8]
   1cc24:	ldr	r0, [r0]
   1cc28:	str	r0, [sp, #12]
   1cc2c:	ldr	r1, [sp, #12]
   1cc30:	add	r0, sp, #32
   1cc34:	bl	25f04 <__assert_fail@plt+0x147b0>
   1cc38:	cmp	r0, #0
   1cc3c:	bne	1cc84 <__assert_fail@plt+0xb530>
   1cc40:	ldr	r0, [fp, #-8]
   1cc44:	ldr	r0, [r0, #24]
   1cc48:	ldr	r1, [sp, #12]
   1cc4c:	movw	r2, #12
   1cc50:	mul	r1, r1, r2
   1cc54:	add	r1, r0, r1
   1cc58:	add	r0, sp, #32
   1cc5c:	bl	2555c <__assert_fail@plt+0x13e08>
   1cc60:	str	r0, [sp, #8]
   1cc64:	ldr	r0, [sp, #8]
   1cc68:	cmp	r0, #0
   1cc6c:	beq	1cc7c <__assert_fail@plt+0xb528>
   1cc70:	ldr	r0, [sp, #8]
   1cc74:	str	r0, [fp, #-4]
   1cc78:	b	1cdec <__assert_fail@plt+0xb698>
   1cc7c:	movw	r0, #0
   1cc80:	str	r0, [fp, #-16]
   1cc84:	b	1cc88 <__assert_fail@plt+0xb534>
   1cc88:	b	1cc8c <__assert_fail@plt+0xb538>
   1cc8c:	ldr	r0, [fp, #-16]
   1cc90:	add	r0, r0, #1
   1cc94:	str	r0, [fp, #-16]
   1cc98:	b	1cb18 <__assert_fail@plt+0xb3c4>
   1cc9c:	b	1cca0 <__assert_fail@plt+0xb54c>
   1cca0:	ldr	r1, [fp, #-8]
   1cca4:	sub	r0, fp, #20
   1cca8:	add	r2, sp, #32
   1ccac:	movw	r3, #0
   1ccb0:	bl	25ff4 <__assert_fail@plt+0x148a0>
   1ccb4:	ldr	r1, [fp, #-8]
   1ccb8:	str	r0, [r1, #36]	; 0x24
   1ccbc:	ldr	r0, [fp, #-8]
   1ccc0:	ldr	r0, [r0, #36]	; 0x24
   1ccc4:	movw	r1, #0
   1ccc8:	cmp	r0, r1
   1cccc:	bne	1ccdc <__assert_fail@plt+0xb588>
   1ccd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ccd4:	str	r0, [fp, #-4]
   1ccd8:	b	1cdec <__assert_fail@plt+0xb698>
   1ccdc:	ldr	r0, [fp, #-8]
   1cce0:	ldr	r0, [r0, #36]	; 0x24
   1cce4:	ldrb	r0, [r0, #52]	; 0x34
   1cce8:	lsr	r0, r0, #7
   1ccec:	and	r0, r0, #255	; 0xff
   1ccf0:	cmp	r0, #0
   1ccf4:	beq	1cdbc <__assert_fail@plt+0xb668>
   1ccf8:	ldr	r1, [fp, #-8]
   1ccfc:	sub	r0, fp, #20
   1cd00:	add	r2, sp, #32
   1cd04:	movw	r3, #1
   1cd08:	bl	25ff4 <__assert_fail@plt+0x148a0>
   1cd0c:	ldr	r1, [fp, #-8]
   1cd10:	str	r0, [r1, #40]	; 0x28
   1cd14:	ldr	r1, [fp, #-8]
   1cd18:	sub	r0, fp, #20
   1cd1c:	add	r2, sp, #32
   1cd20:	movw	r3, #2
   1cd24:	bl	25ff4 <__assert_fail@plt+0x148a0>
   1cd28:	ldr	r1, [fp, #-8]
   1cd2c:	str	r0, [r1, #44]	; 0x2c
   1cd30:	ldr	r1, [fp, #-8]
   1cd34:	sub	r0, fp, #20
   1cd38:	add	r2, sp, #32
   1cd3c:	movw	r3, #6
   1cd40:	bl	25ff4 <__assert_fail@plt+0x148a0>
   1cd44:	ldr	r1, [fp, #-8]
   1cd48:	str	r0, [r1, #48]	; 0x30
   1cd4c:	ldr	r0, [fp, #-8]
   1cd50:	ldr	r0, [r0, #40]	; 0x28
   1cd54:	movw	r1, #0
   1cd58:	cmp	r0, r1
   1cd5c:	movw	r0, #1
   1cd60:	str	r0, [sp, #4]
   1cd64:	beq	1cda0 <__assert_fail@plt+0xb64c>
   1cd68:	ldr	r0, [fp, #-8]
   1cd6c:	ldr	r0, [r0, #44]	; 0x2c
   1cd70:	movw	r1, #0
   1cd74:	cmp	r0, r1
   1cd78:	movw	r0, #1
   1cd7c:	str	r0, [sp, #4]
   1cd80:	beq	1cda0 <__assert_fail@plt+0xb64c>
   1cd84:	ldr	r0, [fp, #-8]
   1cd88:	ldr	r0, [r0, #48]	; 0x30
   1cd8c:	movw	r1, #0
   1cd90:	cmp	r0, r1
   1cd94:	movw	r0, #0
   1cd98:	moveq	r0, #1
   1cd9c:	str	r0, [sp, #4]
   1cda0:	ldr	r0, [sp, #4]
   1cda4:	tst	r0, #1
   1cda8:	beq	1cdb8 <__assert_fail@plt+0xb664>
   1cdac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cdb0:	str	r0, [fp, #-4]
   1cdb4:	b	1cdec <__assert_fail@plt+0xb698>
   1cdb8:	b	1cddc <__assert_fail@plt+0xb688>
   1cdbc:	ldr	r0, [fp, #-8]
   1cdc0:	ldr	r0, [r0, #36]	; 0x24
   1cdc4:	ldr	r1, [fp, #-8]
   1cdc8:	str	r0, [r1, #48]	; 0x30
   1cdcc:	ldr	r1, [fp, #-8]
   1cdd0:	str	r0, [r1, #44]	; 0x2c
   1cdd4:	ldr	r1, [fp, #-8]
   1cdd8:	str	r0, [r1, #40]	; 0x28
   1cddc:	ldr	r0, [sp, #40]	; 0x28
   1cde0:	bl	1604c <__assert_fail@plt+0x48f8>
   1cde4:	movw	r0, #0
   1cde8:	str	r0, [fp, #-4]
   1cdec:	ldr	r0, [fp, #-4]
   1cdf0:	mov	sp, fp
   1cdf4:	pop	{fp, pc}
   1cdf8:	push	{fp, lr}
   1cdfc:	mov	fp, sp
   1ce00:	sub	sp, sp, #28
   1ce04:	ldr	ip, [fp, #12]
   1ce08:	ldr	lr, [fp, #8]
   1ce0c:	str	r0, [fp, #-4]
   1ce10:	str	r1, [fp, #-8]
   1ce14:	str	r2, [fp, #-12]
   1ce18:	str	r3, [sp, #12]
   1ce1c:	and	r0, lr, #1
   1ce20:	strb	r0, [sp, #11]
   1ce24:	ldr	r0, [fp, #-4]
   1ce28:	ldr	r1, [fp, #-12]
   1ce2c:	str	r0, [r1]
   1ce30:	ldr	r0, [fp, #-8]
   1ce34:	ldr	r1, [fp, #-12]
   1ce38:	str	r0, [r1, #48]	; 0x30
   1ce3c:	ldr	r0, [fp, #-8]
   1ce40:	ldr	r1, [fp, #-12]
   1ce44:	str	r0, [r1, #44]	; 0x2c
   1ce48:	ldr	r0, [sp, #12]
   1ce4c:	ldr	r1, [fp, #-12]
   1ce50:	str	r0, [r1, #64]	; 0x40
   1ce54:	ldrb	r0, [sp, #11]
   1ce58:	and	r0, r0, #1
   1ce5c:	ldr	r1, [fp, #-12]
   1ce60:	strb	r0, [r1, #72]	; 0x48
   1ce64:	ldr	r0, [sp, #12]
   1ce68:	movw	r1, #0
   1ce6c:	cmp	r0, r1
   1ce70:	movw	r0, #1
   1ce74:	str	ip, [sp, #4]
   1ce78:	str	r0, [sp]
   1ce7c:	bne	1ce88 <__assert_fail@plt+0xb734>
   1ce80:	ldrb	r0, [sp, #11]
   1ce84:	str	r0, [sp]
   1ce88:	ldr	r0, [sp]
   1ce8c:	and	r0, r0, #1
   1ce90:	ldr	r1, [fp, #-12]
   1ce94:	strb	r0, [r1, #75]	; 0x4b
   1ce98:	ldr	r0, [fp, #12]
   1ce9c:	ldr	r0, [r0, #92]	; 0x5c
   1cea0:	ldr	r1, [fp, #-12]
   1cea4:	str	r0, [r1, #80]	; 0x50
   1cea8:	ldr	r0, [fp, #12]
   1ceac:	ldrb	r0, [r0, #88]	; 0x58
   1ceb0:	ubfx	r0, r0, #2, #1
   1ceb4:	ldr	r1, [fp, #-12]
   1ceb8:	strb	r0, [r1, #73]	; 0x49
   1cebc:	ldr	r0, [fp, #12]
   1cec0:	ldrb	r0, [r0, #88]	; 0x58
   1cec4:	ubfx	r0, r0, #3, #1
   1cec8:	and	r0, r0, #255	; 0xff
   1cecc:	ldr	r1, [fp, #-12]
   1ced0:	strb	r0, [r1, #74]	; 0x4a
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	ldr	r0, [r0, #48]	; 0x30
   1cedc:	ldr	r1, [fp, #-12]
   1cee0:	str	r0, [r1, #56]	; 0x38
   1cee4:	ldr	r0, [fp, #-12]
   1cee8:	ldr	r0, [r0, #56]	; 0x38
   1ceec:	ldr	r1, [fp, #-12]
   1cef0:	str	r0, [r1, #52]	; 0x34
   1cef4:	mov	sp, fp
   1cef8:	pop	{fp, pc}
   1cefc:	push	{fp, lr}
   1cf00:	mov	fp, sp
   1cf04:	sub	sp, sp, #32
   1cf08:	str	r0, [fp, #-8]
   1cf0c:	str	r1, [fp, #-12]
   1cf10:	ldr	r0, [fp, #-8]
   1cf14:	ldr	r0, [r0, #80]	; 0x50
   1cf18:	cmp	r0, #1
   1cf1c:	ble	1cfdc <__assert_fail@plt+0xb888>
   1cf20:	ldr	r0, [pc, #296]	; 1d050 <__assert_fail@plt+0xb8fc>
   1cf24:	movw	r1, #4
   1cf28:	str	r1, [sp, #12]
   1cf2c:	ldr	r1, [fp, #-12]
   1cf30:	cmp	r0, r1
   1cf34:	bcs	1cf44 <__assert_fail@plt+0xb7f0>
   1cf38:	movw	r0, #12
   1cf3c:	str	r0, [fp, #-4]
   1cf40:	b	1d044 <__assert_fail@plt+0xb8f0>
   1cf44:	ldr	r0, [fp, #-8]
   1cf48:	ldr	r0, [r0, #8]
   1cf4c:	ldr	r1, [fp, #-12]
   1cf50:	lsl	r1, r1, #2
   1cf54:	bl	38aec <__assert_fail@plt+0x27398>
   1cf58:	str	r0, [sp, #16]
   1cf5c:	ldr	r0, [sp, #16]
   1cf60:	movw	r1, #0
   1cf64:	cmp	r0, r1
   1cf68:	bne	1cf78 <__assert_fail@plt+0xb824>
   1cf6c:	movw	r0, #12
   1cf70:	str	r0, [fp, #-4]
   1cf74:	b	1d044 <__assert_fail@plt+0xb8f0>
   1cf78:	ldr	r0, [sp, #16]
   1cf7c:	ldr	r1, [fp, #-8]
   1cf80:	str	r0, [r1, #8]
   1cf84:	ldr	r0, [fp, #-8]
   1cf88:	ldr	r0, [r0, #12]
   1cf8c:	movw	r1, #0
   1cf90:	cmp	r0, r1
   1cf94:	beq	1cfd8 <__assert_fail@plt+0xb884>
   1cf98:	ldr	r0, [fp, #-8]
   1cf9c:	ldr	r0, [r0, #12]
   1cfa0:	ldr	r1, [fp, #-12]
   1cfa4:	lsl	r1, r1, #2
   1cfa8:	bl	38aec <__assert_fail@plt+0x27398>
   1cfac:	str	r0, [sp, #8]
   1cfb0:	ldr	r0, [sp, #8]
   1cfb4:	movw	r1, #0
   1cfb8:	cmp	r0, r1
   1cfbc:	bne	1cfcc <__assert_fail@plt+0xb878>
   1cfc0:	movw	r0, #12
   1cfc4:	str	r0, [fp, #-4]
   1cfc8:	b	1d044 <__assert_fail@plt+0xb8f0>
   1cfcc:	ldr	r0, [sp, #8]
   1cfd0:	ldr	r1, [fp, #-8]
   1cfd4:	str	r0, [r1, #12]
   1cfd8:	b	1cfdc <__assert_fail@plt+0xb888>
   1cfdc:	ldr	r0, [fp, #-8]
   1cfe0:	ldrsb	r0, [r0, #75]	; 0x4b
   1cfe4:	cmp	r0, #0
   1cfe8:	beq	1d030 <__assert_fail@plt+0xb8dc>
   1cfec:	ldr	r0, [fp, #-8]
   1cff0:	ldr	r0, [r0, #4]
   1cff4:	ldr	r1, [fp, #-12]
   1cff8:	mov	r2, r1
   1cffc:	str	r2, [sp]
   1d000:	bl	38aec <__assert_fail@plt+0x27398>
   1d004:	str	r0, [sp, #4]
   1d008:	ldr	r0, [sp, #4]
   1d00c:	movw	r1, #0
   1d010:	cmp	r0, r1
   1d014:	bne	1d024 <__assert_fail@plt+0xb8d0>
   1d018:	movw	r0, #12
   1d01c:	str	r0, [fp, #-4]
   1d020:	b	1d044 <__assert_fail@plt+0xb8f0>
   1d024:	ldr	r0, [sp, #4]
   1d028:	ldr	r1, [fp, #-8]
   1d02c:	str	r0, [r1, #4]
   1d030:	ldr	r0, [fp, #-12]
   1d034:	ldr	r1, [fp, #-8]
   1d038:	str	r0, [r1, #36]	; 0x24
   1d03c:	movw	r0, #0
   1d040:	str	r0, [fp, #-4]
   1d044:	ldr	r0, [fp, #-4]
   1d048:	mov	sp, fp
   1d04c:	pop	{fp, pc}
   1d050:	svccc	0x00ffffff
   1d054:	push	{fp, lr}
   1d058:	mov	fp, sp
   1d05c:	sub	sp, sp, #192	; 0xc0
   1d060:	str	r0, [fp, #-8]
   1d064:	ldr	r0, [fp, #-8]
   1d068:	ldr	r0, [r0, #28]
   1d06c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d070:	ldr	r0, [fp, #-8]
   1d074:	ldr	r0, [r0, #36]	; 0x24
   1d078:	ldr	r1, [fp, #-8]
   1d07c:	ldr	r1, [r1, #48]	; 0x30
   1d080:	cmp	r0, r1
   1d084:	ble	1d098 <__assert_fail@plt+0xb944>
   1d088:	ldr	r0, [fp, #-8]
   1d08c:	ldr	r0, [r0, #48]	; 0x30
   1d090:	str	r0, [sp, #32]
   1d094:	b	1d0a4 <__assert_fail@plt+0xb950>
   1d098:	ldr	r0, [fp, #-8]
   1d09c:	ldr	r0, [r0, #36]	; 0x24
   1d0a0:	str	r0, [sp, #32]
   1d0a4:	ldr	r0, [sp, #32]
   1d0a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0ac:	ldr	r0, [fp, #-8]
   1d0b0:	ldrsb	r0, [r0, #74]	; 0x4a
   1d0b4:	cmp	r0, #0
   1d0b8:	bne	1d418 <__assert_fail@plt+0xbcc4>
   1d0bc:	ldr	r0, [fp, #-8]
   1d0c0:	ldr	r0, [r0, #64]	; 0x40
   1d0c4:	movw	r1, #0
   1d0c8:	cmp	r0, r1
   1d0cc:	bne	1d418 <__assert_fail@plt+0xbcc4>
   1d0d0:	ldr	r0, [fp, #-8]
   1d0d4:	ldrsb	r0, [r0, #76]	; 0x4c
   1d0d8:	cmp	r0, #0
   1d0dc:	bne	1d418 <__assert_fail@plt+0xbcc4>
   1d0e0:	b	1d0e4 <__assert_fail@plt+0xb990>
   1d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d0ec:	cmp	r0, r1
   1d0f0:	bge	1d3f4 <__assert_fail@plt+0xbca0>
   1d0f4:	ldr	r0, [fp, #-8]
   1d0f8:	ldr	r0, [r0]
   1d0fc:	ldr	r1, [fp, #-8]
   1d100:	ldr	r1, [r1, #24]
   1d104:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d108:	add	r1, r1, r2
   1d10c:	add	r0, r0, r1
   1d110:	ldrb	r0, [r0]
   1d114:	strb	r0, [sp, #87]	; 0x57
   1d118:	ldrb	r0, [sp, #87]	; 0x57
   1d11c:	mvn	r1, #127	; 0x7f
   1d120:	and	r0, r0, r1
   1d124:	cmp	r0, #0
   1d128:	bne	1d1a0 <__assert_fail@plt+0xba4c>
   1d12c:	ldr	r0, [fp, #-8]
   1d130:	add	r0, r0, #16
   1d134:	bl	114a8 <mbsinit@plt>
   1d138:	cmp	r0, #0
   1d13c:	beq	1d1a0 <__assert_fail@plt+0xba4c>
   1d140:	ldrb	r0, [sp, #87]	; 0x57
   1d144:	bl	11718 <towupper@plt>
   1d148:	str	r0, [sp, #80]	; 0x50
   1d14c:	ldr	r0, [sp, #80]	; 0x50
   1d150:	mvn	lr, #127	; 0x7f
   1d154:	and	r0, r0, lr
   1d158:	cmp	r0, #0
   1d15c:	bne	1d19c <__assert_fail@plt+0xba48>
   1d160:	ldr	r0, [sp, #80]	; 0x50
   1d164:	ldr	r1, [fp, #-8]
   1d168:	ldr	r1, [r1, #4]
   1d16c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d170:	strb	r0, [r1, r2]
   1d174:	ldr	r0, [sp, #80]	; 0x50
   1d178:	ldr	r1, [fp, #-8]
   1d17c:	ldr	r1, [r1, #8]
   1d180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d184:	add	r1, r1, r2, lsl #2
   1d188:	str	r0, [r1]
   1d18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d190:	add	r0, r0, #1
   1d194:	str	r0, [fp, #-24]	; 0xffffffe8
   1d198:	b	1d0e4 <__assert_fail@plt+0xb990>
   1d19c:	b	1d1a0 <__assert_fail@plt+0xba4c>
   1d1a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d1a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1a8:	sub	r0, r0, r1
   1d1ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1d1b0:	ldr	r0, [fp, #-8]
   1d1b4:	ldr	r1, [r0, #16]
   1d1b8:	str	r1, [fp, #-16]
   1d1bc:	ldr	r0, [r0, #20]
   1d1c0:	str	r0, [fp, #-12]
   1d1c4:	ldr	r0, [fp, #-8]
   1d1c8:	ldr	r0, [r0]
   1d1cc:	ldr	r1, [fp, #-8]
   1d1d0:	ldr	r1, [r1, #24]
   1d1d4:	add	r0, r0, r1
   1d1d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1dc:	add	r1, r0, r1
   1d1e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1e4:	ldr	r0, [fp, #-8]
   1d1e8:	add	r3, r0, #16
   1d1ec:	add	r0, sp, #88	; 0x58
   1d1f0:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   1d1f4:	str	r0, [fp, #-36]	; 0xffffffdc
   1d1f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d1fc:	movw	r1, #0
   1d200:	cmp	r1, r0
   1d204:	movw	r0, #0
   1d208:	str	r0, [sp, #28]
   1d20c:	bcs	1d224 <__assert_fail@plt+0xbad0>
   1d210:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d214:	cmn	r0, #2
   1d218:	movw	r0, #0
   1d21c:	movcc	r0, #1
   1d220:	str	r0, [sp, #28]
   1d224:	ldr	r0, [sp, #28]
   1d228:	tst	r0, #1
   1d22c:	beq	1d340 <__assert_fail@plt+0xbbec>
   1d230:	ldr	r0, [sp, #88]	; 0x58
   1d234:	bl	11718 <towupper@plt>
   1d238:	str	r0, [sp, #76]	; 0x4c
   1d23c:	ldr	r0, [sp, #76]	; 0x4c
   1d240:	ldr	lr, [sp, #88]	; 0x58
   1d244:	cmp	r0, lr
   1d248:	beq	1d2a0 <__assert_fail@plt+0xbb4c>
   1d24c:	add	r0, sp, #92	; 0x5c
   1d250:	ldr	r1, [sp, #76]	; 0x4c
   1d254:	sub	r2, fp, #16
   1d258:	bl	113e8 <wcrtomb@plt>
   1d25c:	str	r0, [sp, #72]	; 0x48
   1d260:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d264:	ldr	r1, [sp, #72]	; 0x48
   1d268:	cmp	r0, r1
   1d26c:	bne	1d290 <__assert_fail@plt+0xbb3c>
   1d270:	add	r1, sp, #92	; 0x5c
   1d274:	ldr	r0, [fp, #-8]
   1d278:	ldr	r0, [r0, #4]
   1d27c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d280:	add	r0, r0, r2
   1d284:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d288:	bl	11478 <memcpy@plt>
   1d28c:	b	1d29c <__assert_fail@plt+0xbb48>
   1d290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d294:	str	r0, [fp, #-20]	; 0xffffffec
   1d298:	b	1d438 <__assert_fail@plt+0xbce4>
   1d29c:	b	1d2d4 <__assert_fail@plt+0xbb80>
   1d2a0:	ldr	r0, [fp, #-8]
   1d2a4:	ldr	r0, [r0, #4]
   1d2a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2ac:	add	r0, r0, r1
   1d2b0:	ldr	r1, [fp, #-8]
   1d2b4:	ldr	r1, [r1]
   1d2b8:	ldr	r2, [fp, #-8]
   1d2bc:	ldr	r2, [r2, #24]
   1d2c0:	add	r1, r1, r2
   1d2c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2c8:	add	r1, r1, r2
   1d2cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d2d0:	bl	11478 <memcpy@plt>
   1d2d4:	ldr	r0, [sp, #76]	; 0x4c
   1d2d8:	ldr	r1, [fp, #-8]
   1d2dc:	ldr	r1, [r1, #8]
   1d2e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2e4:	add	r3, r2, #1
   1d2e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1d2ec:	add	r1, r1, r2, lsl #2
   1d2f0:	str	r0, [r1]
   1d2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d2fc:	add	r0, r0, r1
   1d300:	sub	r0, r0, #1
   1d304:	str	r0, [fp, #-32]	; 0xffffffe0
   1d308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d30c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d310:	cmp	r0, r1
   1d314:	bge	1d33c <__assert_fail@plt+0xbbe8>
   1d318:	ldr	r0, [fp, #-8]
   1d31c:	ldr	r0, [r0, #8]
   1d320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d324:	add	r2, r1, #1
   1d328:	str	r2, [fp, #-24]	; 0xffffffe8
   1d32c:	add	r0, r0, r1, lsl #2
   1d330:	mvn	r1, #0
   1d334:	str	r1, [r0]
   1d338:	b	1d308 <__assert_fail@plt+0xbbb4>
   1d33c:	b	1d3f0 <__assert_fail@plt+0xbc9c>
   1d340:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d344:	cmn	r0, #1
   1d348:	beq	1d37c <__assert_fail@plt+0xbc28>
   1d34c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d350:	cmp	r0, #0
   1d354:	beq	1d37c <__assert_fail@plt+0xbc28>
   1d358:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d35c:	cmn	r0, #2
   1d360:	bne	1d3d4 <__assert_fail@plt+0xbc80>
   1d364:	ldr	r0, [fp, #-8]
   1d368:	ldr	r0, [r0, #36]	; 0x24
   1d36c:	ldr	r1, [fp, #-8]
   1d370:	ldr	r1, [r1, #48]	; 0x30
   1d374:	cmp	r0, r1
   1d378:	blt	1d3d4 <__assert_fail@plt+0xbc80>
   1d37c:	ldrb	r0, [sp, #87]	; 0x57
   1d380:	ldr	r1, [fp, #-8]
   1d384:	ldr	r1, [r1, #4]
   1d388:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d38c:	strb	r0, [r1, r2]
   1d390:	ldrb	r0, [sp, #87]	; 0x57
   1d394:	ldr	r1, [fp, #-8]
   1d398:	ldr	r1, [r1, #8]
   1d39c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d3a0:	add	r3, r2, #1
   1d3a4:	str	r3, [fp, #-24]	; 0xffffffe8
   1d3a8:	add	r1, r1, r2, lsl #2
   1d3ac:	str	r0, [r1]
   1d3b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d3b4:	cmn	r0, #1
   1d3b8:	bne	1d3d0 <__assert_fail@plt+0xbc7c>
   1d3bc:	ldr	r0, [fp, #-8]
   1d3c0:	ldr	r1, [fp, #-16]
   1d3c4:	str	r1, [r0, #16]
   1d3c8:	ldr	r1, [fp, #-12]
   1d3cc:	str	r1, [r0, #20]
   1d3d0:	b	1d3ec <__assert_fail@plt+0xbc98>
   1d3d4:	ldr	r0, [fp, #-8]
   1d3d8:	ldr	r1, [fp, #-16]
   1d3dc:	str	r1, [r0, #16]
   1d3e0:	ldr	r1, [fp, #-12]
   1d3e4:	str	r1, [r0, #20]
   1d3e8:	b	1d3f4 <__assert_fail@plt+0xbca0>
   1d3ec:	b	1d3f0 <__assert_fail@plt+0xbc9c>
   1d3f0:	b	1d0e4 <__assert_fail@plt+0xb990>
   1d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3f8:	ldr	r1, [fp, #-8]
   1d3fc:	str	r0, [r1, #28]
   1d400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d404:	ldr	r1, [fp, #-8]
   1d408:	str	r0, [r1, #32]
   1d40c:	movw	r0, #0
   1d410:	str	r0, [fp, #-4]
   1d414:	b	1daf4 <__assert_fail@plt+0xc3a0>
   1d418:	ldr	r0, [fp, #-8]
   1d41c:	ldr	r0, [r0, #32]
   1d420:	str	r0, [fp, #-20]	; 0xffffffec
   1d424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d428:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d42c:	cmp	r0, r1
   1d430:	bge	1dad0 <__assert_fail@plt+0xc37c>
   1d434:	b	1d438 <__assert_fail@plt+0xbce4>
   1d438:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d43c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d440:	sub	r0, r0, r1
   1d444:	str	r0, [fp, #-32]	; 0xffffffe0
   1d448:	ldr	r0, [fp, #-8]
   1d44c:	ldr	r1, [r0, #16]
   1d450:	str	r1, [fp, #-16]
   1d454:	ldr	r0, [r0, #20]
   1d458:	str	r0, [fp, #-12]
   1d45c:	ldr	r0, [fp, #-8]
   1d460:	ldr	r0, [r0, #64]	; 0x40
   1d464:	movw	r1, #0
   1d468:	cmp	r0, r1
   1d46c:	beq	1d524 <__assert_fail@plt+0xbdd0>
   1d470:	movw	r0, #0
   1d474:	str	r0, [sp, #60]	; 0x3c
   1d478:	ldr	r0, [sp, #60]	; 0x3c
   1d47c:	ldr	r1, [fp, #-8]
   1d480:	ldr	r1, [r1, #80]	; 0x50
   1d484:	cmp	r0, r1
   1d488:	movw	r0, #0
   1d48c:	str	r0, [sp, #24]
   1d490:	bge	1d4ac <__assert_fail@plt+0xbd58>
   1d494:	ldr	r0, [sp, #60]	; 0x3c
   1d498:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d49c:	cmp	r0, r1
   1d4a0:	movw	r0, #0
   1d4a4:	movlt	r0, #1
   1d4a8:	str	r0, [sp, #24]
   1d4ac:	ldr	r0, [sp, #24]
   1d4b0:	tst	r0, #1
   1d4b4:	beq	1d518 <__assert_fail@plt+0xbdc4>
   1d4b8:	ldr	r0, [fp, #-8]
   1d4bc:	ldr	r0, [r0]
   1d4c0:	ldr	r1, [fp, #-8]
   1d4c4:	ldr	r1, [r1, #24]
   1d4c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d4cc:	add	r1, r1, r2
   1d4d0:	ldr	r2, [sp, #60]	; 0x3c
   1d4d4:	add	r1, r1, r2
   1d4d8:	add	r0, r0, r1
   1d4dc:	ldrb	r0, [r0]
   1d4e0:	str	r0, [sp, #56]	; 0x38
   1d4e4:	ldr	r0, [fp, #-8]
   1d4e8:	ldr	r0, [r0, #64]	; 0x40
   1d4ec:	ldr	r1, [sp, #56]	; 0x38
   1d4f0:	add	r0, r0, r1
   1d4f4:	ldrb	r0, [r0]
   1d4f8:	ldr	r1, [sp, #60]	; 0x3c
   1d4fc:	add	r2, sp, #92	; 0x5c
   1d500:	add	r1, r2, r1
   1d504:	strb	r0, [r1]
   1d508:	ldr	r0, [sp, #60]	; 0x3c
   1d50c:	add	r0, r0, #1
   1d510:	str	r0, [sp, #60]	; 0x3c
   1d514:	b	1d478 <__assert_fail@plt+0xbd24>
   1d518:	add	r0, sp, #92	; 0x5c
   1d51c:	str	r0, [sp, #64]	; 0x40
   1d520:	b	1d544 <__assert_fail@plt+0xbdf0>
   1d524:	ldr	r0, [fp, #-8]
   1d528:	ldr	r0, [r0]
   1d52c:	ldr	r1, [fp, #-8]
   1d530:	ldr	r1, [r1, #24]
   1d534:	add	r0, r0, r1
   1d538:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d53c:	add	r0, r0, r1
   1d540:	str	r0, [sp, #64]	; 0x40
   1d544:	ldr	r1, [sp, #64]	; 0x40
   1d548:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d54c:	ldr	r0, [fp, #-8]
   1d550:	add	r3, r0, #16
   1d554:	add	r0, sp, #68	; 0x44
   1d558:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   1d55c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d560:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d564:	movw	r1, #0
   1d568:	cmp	r1, r0
   1d56c:	movw	r0, #0
   1d570:	str	r0, [sp, #20]
   1d574:	bcs	1d58c <__assert_fail@plt+0xbe38>
   1d578:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d57c:	cmn	r0, #2
   1d580:	movw	r0, #0
   1d584:	movcc	r0, #1
   1d588:	str	r0, [sp, #20]
   1d58c:	ldr	r0, [sp, #20]
   1d590:	tst	r0, #1
   1d594:	beq	1d994 <__assert_fail@plt+0xc240>
   1d598:	ldr	r0, [sp, #68]	; 0x44
   1d59c:	bl	11718 <towupper@plt>
   1d5a0:	str	r0, [sp, #52]	; 0x34
   1d5a4:	ldr	r0, [sp, #52]	; 0x34
   1d5a8:	ldr	lr, [sp, #68]	; 0x44
   1d5ac:	cmp	r0, lr
   1d5b0:	beq	1d89c <__assert_fail@plt+0xc148>
   1d5b4:	add	r0, sp, #92	; 0x5c
   1d5b8:	ldr	r1, [sp, #52]	; 0x34
   1d5bc:	sub	r2, fp, #16
   1d5c0:	bl	113e8 <wcrtomb@plt>
   1d5c4:	str	r0, [sp, #48]	; 0x30
   1d5c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d5cc:	ldr	r1, [sp, #48]	; 0x30
   1d5d0:	cmp	r0, r1
   1d5d4:	bne	1d5f8 <__assert_fail@plt+0xbea4>
   1d5d8:	add	r1, sp, #92	; 0x5c
   1d5dc:	ldr	r0, [fp, #-8]
   1d5e0:	ldr	r0, [r0, #4]
   1d5e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d5e8:	add	r0, r0, r2
   1d5ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d5f0:	bl	11478 <memcpy@plt>
   1d5f4:	b	1d898 <__assert_fail@plt+0xc144>
   1d5f8:	ldr	r0, [sp, #48]	; 0x30
   1d5fc:	cmn	r0, #1
   1d600:	beq	1d878 <__assert_fail@plt+0xc124>
   1d604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d608:	ldr	r1, [sp, #48]	; 0x30
   1d60c:	add	r0, r0, r1
   1d610:	ldr	r1, [fp, #-8]
   1d614:	ldr	r1, [r1, #36]	; 0x24
   1d618:	cmp	r0, r1
   1d61c:	bls	1d638 <__assert_fail@plt+0xbee4>
   1d620:	ldr	r0, [fp, #-8]
   1d624:	ldr	r1, [fp, #-16]
   1d628:	str	r1, [r0, #16]
   1d62c:	ldr	r1, [fp, #-12]
   1d630:	str	r1, [r0, #20]
   1d634:	b	1dad0 <__assert_fail@plt+0xc37c>
   1d638:	ldr	r0, [fp, #-8]
   1d63c:	ldr	r0, [r0, #12]
   1d640:	movw	r1, #0
   1d644:	cmp	r0, r1
   1d648:	bne	1d688 <__assert_fail@plt+0xbf34>
   1d64c:	ldr	r0, [fp, #-8]
   1d650:	ldr	r0, [r0, #36]	; 0x24
   1d654:	lsl	r0, r0, #2
   1d658:	bl	38a7c <__assert_fail@plt+0x27328>
   1d65c:	ldr	lr, [fp, #-8]
   1d660:	str	r0, [lr, #12]
   1d664:	ldr	r0, [fp, #-8]
   1d668:	ldr	r0, [r0, #12]
   1d66c:	movw	lr, #0
   1d670:	cmp	r0, lr
   1d674:	bne	1d684 <__assert_fail@plt+0xbf30>
   1d678:	movw	r0, #12
   1d67c:	str	r0, [fp, #-4]
   1d680:	b	1daf4 <__assert_fail@plt+0xc3a0>
   1d684:	b	1d688 <__assert_fail@plt+0xbf34>
   1d688:	ldr	r0, [fp, #-8]
   1d68c:	ldrsb	r0, [r0, #76]	; 0x4c
   1d690:	cmp	r0, #0
   1d694:	bne	1d6e4 <__assert_fail@plt+0xbf90>
   1d698:	movw	r0, #0
   1d69c:	str	r0, [sp, #44]	; 0x2c
   1d6a0:	ldr	r0, [sp, #44]	; 0x2c
   1d6a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6a8:	cmp	r0, r1
   1d6ac:	bcs	1d6d8 <__assert_fail@plt+0xbf84>
   1d6b0:	ldr	r0, [sp, #44]	; 0x2c
   1d6b4:	mov	r1, r0
   1d6b8:	ldr	r2, [fp, #-8]
   1d6bc:	ldr	r2, [r2, #12]
   1d6c0:	add	r0, r2, r0, lsl #2
   1d6c4:	str	r1, [r0]
   1d6c8:	ldr	r0, [sp, #44]	; 0x2c
   1d6cc:	add	r0, r0, #1
   1d6d0:	str	r0, [sp, #44]	; 0x2c
   1d6d4:	b	1d6a0 <__assert_fail@plt+0xbf4c>
   1d6d8:	ldr	r0, [fp, #-8]
   1d6dc:	movw	r1, #1
   1d6e0:	strb	r1, [r0, #76]	; 0x4c
   1d6e4:	ldr	r0, [fp, #-8]
   1d6e8:	ldr	r0, [r0, #4]
   1d6ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6f0:	add	r0, r0, r1
   1d6f4:	ldr	r2, [sp, #48]	; 0x30
   1d6f8:	add	r1, sp, #92	; 0x5c
   1d6fc:	bl	11478 <memcpy@plt>
   1d700:	ldr	r1, [sp, #52]	; 0x34
   1d704:	ldr	r2, [fp, #-8]
   1d708:	ldr	r2, [r2, #8]
   1d70c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1d710:	str	r1, [r2, lr, lsl #2]
   1d714:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d718:	ldr	r2, [fp, #-8]
   1d71c:	ldr	r2, [r2, #12]
   1d720:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1d724:	add	r2, r2, lr, lsl #2
   1d728:	str	r1, [r2]
   1d72c:	movw	r1, #1
   1d730:	str	r1, [sp, #44]	; 0x2c
   1d734:	str	r0, [sp, #16]
   1d738:	ldr	r0, [sp, #44]	; 0x2c
   1d73c:	ldr	r1, [sp, #48]	; 0x30
   1d740:	cmp	r0, r1
   1d744:	bcs	1d7cc <__assert_fail@plt+0xc078>
   1d748:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d74c:	ldr	r1, [sp, #44]	; 0x2c
   1d750:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d754:	cmp	r1, r2
   1d758:	str	r0, [sp, #12]
   1d75c:	bcs	1d76c <__assert_fail@plt+0xc018>
   1d760:	ldr	r0, [sp, #44]	; 0x2c
   1d764:	str	r0, [sp, #8]
   1d768:	b	1d778 <__assert_fail@plt+0xc024>
   1d76c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d770:	sub	r0, r0, #1
   1d774:	str	r0, [sp, #8]
   1d778:	ldr	r0, [sp, #8]
   1d77c:	ldr	r1, [sp, #12]
   1d780:	add	r0, r1, r0
   1d784:	ldr	r2, [fp, #-8]
   1d788:	ldr	r2, [r2, #12]
   1d78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d790:	ldr	ip, [sp, #44]	; 0x2c
   1d794:	add	r3, r3, ip
   1d798:	str	r0, [r2, r3, lsl #2]
   1d79c:	ldr	r0, [fp, #-8]
   1d7a0:	ldr	r0, [r0, #8]
   1d7a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d7a8:	ldr	r3, [sp, #44]	; 0x2c
   1d7ac:	add	r2, r2, r3
   1d7b0:	add	r0, r0, r2, lsl #2
   1d7b4:	mvn	r2, #0
   1d7b8:	str	r2, [r0]
   1d7bc:	ldr	r0, [sp, #44]	; 0x2c
   1d7c0:	add	r0, r0, #1
   1d7c4:	str	r0, [sp, #44]	; 0x2c
   1d7c8:	b	1d738 <__assert_fail@plt+0xbfe4>
   1d7cc:	ldr	r0, [sp, #48]	; 0x30
   1d7d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d7d4:	sub	r0, r0, r1
   1d7d8:	ldr	r1, [fp, #-8]
   1d7dc:	ldr	r2, [r1, #48]	; 0x30
   1d7e0:	add	r0, r2, r0
   1d7e4:	str	r0, [r1, #48]	; 0x30
   1d7e8:	ldr	r0, [fp, #-8]
   1d7ec:	ldr	r0, [r0, #52]	; 0x34
   1d7f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d7f4:	cmp	r0, r1
   1d7f8:	ble	1d818 <__assert_fail@plt+0xc0c4>
   1d7fc:	ldr	r0, [sp, #48]	; 0x30
   1d800:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d804:	sub	r0, r0, r1
   1d808:	ldr	r1, [fp, #-8]
   1d80c:	ldr	r2, [r1, #56]	; 0x38
   1d810:	add	r0, r2, r0
   1d814:	str	r0, [r1, #56]	; 0x38
   1d818:	ldr	r0, [fp, #-8]
   1d81c:	ldr	r0, [r0, #36]	; 0x24
   1d820:	ldr	r1, [fp, #-8]
   1d824:	ldr	r1, [r1, #48]	; 0x30
   1d828:	cmp	r0, r1
   1d82c:	ble	1d840 <__assert_fail@plt+0xc0ec>
   1d830:	ldr	r0, [fp, #-8]
   1d834:	ldr	r0, [r0, #48]	; 0x30
   1d838:	str	r0, [sp, #4]
   1d83c:	b	1d84c <__assert_fail@plt+0xc0f8>
   1d840:	ldr	r0, [fp, #-8]
   1d844:	ldr	r0, [r0, #36]	; 0x24
   1d848:	str	r0, [sp, #4]
   1d84c:	ldr	r0, [sp, #4]
   1d850:	str	r0, [fp, #-28]	; 0xffffffe4
   1d854:	ldr	r0, [sp, #48]	; 0x30
   1d858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d85c:	add	r0, r1, r0
   1d860:	str	r0, [fp, #-24]	; 0xffffffe8
   1d864:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d86c:	add	r0, r1, r0
   1d870:	str	r0, [fp, #-20]	; 0xffffffec
   1d874:	b	1d424 <__assert_fail@plt+0xbcd0>
   1d878:	ldr	r0, [fp, #-8]
   1d87c:	ldr	r0, [r0, #4]
   1d880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d884:	add	r0, r0, r1
   1d888:	ldr	r1, [sp, #64]	; 0x40
   1d88c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d890:	bl	11478 <memcpy@plt>
   1d894:	b	1d898 <__assert_fail@plt+0xc144>
   1d898:	b	1d8b8 <__assert_fail@plt+0xc164>
   1d89c:	ldr	r0, [fp, #-8]
   1d8a0:	ldr	r0, [r0, #4]
   1d8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8a8:	add	r0, r0, r1
   1d8ac:	ldr	r1, [sp, #64]	; 0x40
   1d8b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d8b4:	bl	11478 <memcpy@plt>
   1d8b8:	ldr	r0, [fp, #-8]
   1d8bc:	ldrb	r0, [r0, #76]	; 0x4c
   1d8c0:	cmp	r0, #0
   1d8c4:	beq	1d918 <__assert_fail@plt+0xc1c4>
   1d8c8:	movw	r0, #0
   1d8cc:	str	r0, [sp, #40]	; 0x28
   1d8d0:	ldr	r0, [sp, #40]	; 0x28
   1d8d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d8d8:	cmp	r0, r1
   1d8dc:	bcs	1d914 <__assert_fail@plt+0xc1c0>
   1d8e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8e4:	ldr	r1, [sp, #40]	; 0x28
   1d8e8:	add	r0, r0, r1
   1d8ec:	ldr	r2, [fp, #-8]
   1d8f0:	ldr	r2, [r2, #12]
   1d8f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d8f8:	add	r1, r3, r1
   1d8fc:	add	r1, r2, r1, lsl #2
   1d900:	str	r0, [r1]
   1d904:	ldr	r0, [sp, #40]	; 0x28
   1d908:	add	r0, r0, #1
   1d90c:	str	r0, [sp, #40]	; 0x28
   1d910:	b	1d8d0 <__assert_fail@plt+0xc17c>
   1d914:	b	1d918 <__assert_fail@plt+0xc1c4>
   1d918:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d91c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d920:	add	r0, r1, r0
   1d924:	str	r0, [fp, #-20]	; 0xffffffec
   1d928:	ldr	r0, [sp, #52]	; 0x34
   1d92c:	ldr	r1, [fp, #-8]
   1d930:	ldr	r1, [r1, #8]
   1d934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d938:	add	r3, r2, #1
   1d93c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d940:	add	r1, r1, r2, lsl #2
   1d944:	str	r0, [r1]
   1d948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d94c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d950:	add	r0, r0, r1
   1d954:	sub	r0, r0, #1
   1d958:	str	r0, [fp, #-32]	; 0xffffffe0
   1d95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d964:	cmp	r0, r1
   1d968:	bge	1d990 <__assert_fail@plt+0xc23c>
   1d96c:	ldr	r0, [fp, #-8]
   1d970:	ldr	r0, [r0, #8]
   1d974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d978:	add	r2, r1, #1
   1d97c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d980:	add	r0, r0, r1, lsl #2
   1d984:	mvn	r1, #0
   1d988:	str	r1, [r0]
   1d98c:	b	1d95c <__assert_fail@plt+0xc208>
   1d990:	b	1dacc <__assert_fail@plt+0xc378>
   1d994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d998:	cmn	r0, #1
   1d99c:	beq	1d9d0 <__assert_fail@plt+0xc27c>
   1d9a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d9a4:	cmp	r0, #0
   1d9a8:	beq	1d9d0 <__assert_fail@plt+0xc27c>
   1d9ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d9b0:	cmn	r0, #2
   1d9b4:	bne	1dab0 <__assert_fail@plt+0xc35c>
   1d9b8:	ldr	r0, [fp, #-8]
   1d9bc:	ldr	r0, [r0, #36]	; 0x24
   1d9c0:	ldr	r1, [fp, #-8]
   1d9c4:	ldr	r1, [r1, #48]	; 0x30
   1d9c8:	cmp	r0, r1
   1d9cc:	blt	1dab0 <__assert_fail@plt+0xc35c>
   1d9d0:	ldr	r0, [fp, #-8]
   1d9d4:	ldr	r0, [r0]
   1d9d8:	ldr	r1, [fp, #-8]
   1d9dc:	ldr	r1, [r1, #24]
   1d9e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d9e4:	add	r1, r1, r2
   1d9e8:	add	r0, r0, r1
   1d9ec:	ldrb	r0, [r0]
   1d9f0:	str	r0, [sp, #36]	; 0x24
   1d9f4:	ldr	r0, [fp, #-8]
   1d9f8:	ldr	r0, [r0, #64]	; 0x40
   1d9fc:	movw	r1, #0
   1da00:	cmp	r0, r1
   1da04:	beq	1da20 <__assert_fail@plt+0xc2cc>
   1da08:	ldr	r0, [fp, #-8]
   1da0c:	ldr	r0, [r0, #64]	; 0x40
   1da10:	ldr	r1, [sp, #36]	; 0x24
   1da14:	add	r0, r0, r1
   1da18:	ldrb	r0, [r0]
   1da1c:	str	r0, [sp, #36]	; 0x24
   1da20:	ldr	r0, [sp, #36]	; 0x24
   1da24:	ldr	r1, [fp, #-8]
   1da28:	ldr	r1, [r1, #4]
   1da2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da30:	add	r1, r1, r2
   1da34:	strb	r0, [r1]
   1da38:	ldr	r0, [fp, #-8]
   1da3c:	ldrb	r0, [r0, #76]	; 0x4c
   1da40:	cmp	r0, #0
   1da44:	beq	1da60 <__assert_fail@plt+0xc30c>
   1da48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da4c:	ldr	r1, [fp, #-8]
   1da50:	ldr	r1, [r1, #12]
   1da54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da58:	add	r1, r1, r2, lsl #2
   1da5c:	str	r0, [r1]
   1da60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da64:	add	r0, r0, #1
   1da68:	str	r0, [fp, #-20]	; 0xffffffec
   1da6c:	ldr	r0, [sp, #36]	; 0x24
   1da70:	ldr	r1, [fp, #-8]
   1da74:	ldr	r1, [r1, #8]
   1da78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da7c:	add	r3, r2, #1
   1da80:	str	r3, [fp, #-24]	; 0xffffffe8
   1da84:	add	r1, r1, r2, lsl #2
   1da88:	str	r0, [r1]
   1da8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1da90:	cmn	r0, #1
   1da94:	bne	1daac <__assert_fail@plt+0xc358>
   1da98:	ldr	r0, [fp, #-8]
   1da9c:	ldr	r1, [fp, #-16]
   1daa0:	str	r1, [r0, #16]
   1daa4:	ldr	r1, [fp, #-12]
   1daa8:	str	r1, [r0, #20]
   1daac:	b	1dac8 <__assert_fail@plt+0xc374>
   1dab0:	ldr	r0, [fp, #-8]
   1dab4:	ldr	r1, [fp, #-16]
   1dab8:	str	r1, [r0, #16]
   1dabc:	ldr	r1, [fp, #-12]
   1dac0:	str	r1, [r0, #20]
   1dac4:	b	1dad0 <__assert_fail@plt+0xc37c>
   1dac8:	b	1dacc <__assert_fail@plt+0xc378>
   1dacc:	b	1d424 <__assert_fail@plt+0xbcd0>
   1dad0:	b	1dad4 <__assert_fail@plt+0xc380>
   1dad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dad8:	ldr	r1, [fp, #-8]
   1dadc:	str	r0, [r1, #28]
   1dae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dae4:	ldr	r1, [fp, #-8]
   1dae8:	str	r0, [r1, #32]
   1daec:	movw	r0, #0
   1daf0:	str	r0, [fp, #-4]
   1daf4:	ldr	r0, [fp, #-4]
   1daf8:	mov	sp, fp
   1dafc:	pop	{fp, pc}
   1db00:	push	{fp, lr}
   1db04:	mov	fp, sp
   1db08:	sub	sp, sp, #24
   1db0c:	str	r0, [fp, #-4]
   1db10:	ldr	r0, [fp, #-4]
   1db14:	ldr	r0, [r0, #36]	; 0x24
   1db18:	ldr	r1, [fp, #-4]
   1db1c:	ldr	r1, [r1, #48]	; 0x30
   1db20:	cmp	r0, r1
   1db24:	ble	1db38 <__assert_fail@plt+0xc3e4>
   1db28:	ldr	r0, [fp, #-4]
   1db2c:	ldr	r0, [r0, #48]	; 0x30
   1db30:	str	r0, [sp, #4]
   1db34:	b	1db44 <__assert_fail@plt+0xc3f0>
   1db38:	ldr	r0, [fp, #-4]
   1db3c:	ldr	r0, [r0, #36]	; 0x24
   1db40:	str	r0, [sp, #4]
   1db44:	ldr	r0, [sp, #4]
   1db48:	str	r0, [sp, #12]
   1db4c:	ldr	r0, [fp, #-4]
   1db50:	ldr	r0, [r0, #28]
   1db54:	str	r0, [fp, #-8]
   1db58:	ldr	r0, [fp, #-8]
   1db5c:	ldr	r1, [sp, #12]
   1db60:	cmp	r0, r1
   1db64:	bge	1dbe4 <__assert_fail@plt+0xc490>
   1db68:	ldr	r0, [fp, #-4]
   1db6c:	ldr	r0, [r0]
   1db70:	ldr	r1, [fp, #-4]
   1db74:	ldr	r1, [r1, #24]
   1db78:	ldr	r2, [fp, #-8]
   1db7c:	add	r1, r1, r2
   1db80:	add	r0, r0, r1
   1db84:	ldrb	r0, [r0]
   1db88:	str	r0, [sp, #8]
   1db8c:	ldr	r0, [fp, #-4]
   1db90:	ldr	r0, [r0, #64]	; 0x40
   1db94:	movw	r1, #0
   1db98:	cmp	r0, r1
   1db9c:	beq	1dbb8 <__assert_fail@plt+0xc464>
   1dba0:	ldr	r0, [fp, #-4]
   1dba4:	ldr	r0, [r0, #64]	; 0x40
   1dba8:	ldr	r1, [sp, #8]
   1dbac:	add	r0, r0, r1
   1dbb0:	ldrb	r0, [r0]
   1dbb4:	str	r0, [sp, #8]
   1dbb8:	ldr	r0, [sp, #8]
   1dbbc:	bl	116d0 <toupper@plt>
   1dbc0:	ldr	lr, [fp, #-4]
   1dbc4:	ldr	lr, [lr, #4]
   1dbc8:	ldr	r1, [fp, #-8]
   1dbcc:	add	r1, lr, r1
   1dbd0:	strb	r0, [r1]
   1dbd4:	ldr	r0, [fp, #-8]
   1dbd8:	add	r0, r0, #1
   1dbdc:	str	r0, [fp, #-8]
   1dbe0:	b	1db58 <__assert_fail@plt+0xc404>
   1dbe4:	ldr	r0, [fp, #-8]
   1dbe8:	ldr	r1, [fp, #-4]
   1dbec:	str	r0, [r1, #28]
   1dbf0:	ldr	r0, [fp, #-8]
   1dbf4:	ldr	r1, [fp, #-4]
   1dbf8:	str	r0, [r1, #32]
   1dbfc:	mov	sp, fp
   1dc00:	pop	{fp, pc}
   1dc04:	push	{fp, lr}
   1dc08:	mov	fp, sp
   1dc0c:	sub	sp, sp, #128	; 0x80
   1dc10:	str	r0, [fp, #-4]
   1dc14:	ldr	r0, [fp, #-4]
   1dc18:	ldr	r0, [r0, #36]	; 0x24
   1dc1c:	ldr	r1, [fp, #-4]
   1dc20:	ldr	r1, [r1, #48]	; 0x30
   1dc24:	cmp	r0, r1
   1dc28:	ble	1dc3c <__assert_fail@plt+0xc4e8>
   1dc2c:	ldr	r0, [fp, #-4]
   1dc30:	ldr	r0, [r0, #48]	; 0x30
   1dc34:	str	r0, [sp, #16]
   1dc38:	b	1dc48 <__assert_fail@plt+0xc4f4>
   1dc3c:	ldr	r0, [fp, #-4]
   1dc40:	ldr	r0, [r0, #36]	; 0x24
   1dc44:	str	r0, [sp, #16]
   1dc48:	ldr	r0, [sp, #16]
   1dc4c:	str	r0, [sp, #44]	; 0x2c
   1dc50:	ldr	r0, [fp, #-4]
   1dc54:	ldr	r0, [r0, #28]
   1dc58:	str	r0, [sp, #48]	; 0x30
   1dc5c:	ldr	r0, [sp, #48]	; 0x30
   1dc60:	ldr	r1, [sp, #44]	; 0x2c
   1dc64:	cmp	r0, r1
   1dc68:	bge	1df24 <__assert_fail@plt+0xc7d0>
   1dc6c:	ldr	r0, [sp, #44]	; 0x2c
   1dc70:	ldr	r1, [sp, #48]	; 0x30
   1dc74:	sub	r0, r0, r1
   1dc78:	str	r0, [sp, #40]	; 0x28
   1dc7c:	ldr	r0, [fp, #-4]
   1dc80:	ldr	r1, [r0, #16]
   1dc84:	str	r1, [sp, #52]	; 0x34
   1dc88:	ldr	r0, [r0, #20]
   1dc8c:	str	r0, [sp, #56]	; 0x38
   1dc90:	ldr	r0, [fp, #-4]
   1dc94:	ldr	r0, [r0, #64]	; 0x40
   1dc98:	movw	r1, #0
   1dc9c:	cmp	r0, r1
   1dca0:	beq	1dd74 <__assert_fail@plt+0xc620>
   1dca4:	movw	r0, #0
   1dca8:	str	r0, [sp, #24]
   1dcac:	ldr	r0, [sp, #24]
   1dcb0:	ldr	r1, [fp, #-4]
   1dcb4:	ldr	r1, [r1, #80]	; 0x50
   1dcb8:	cmp	r0, r1
   1dcbc:	movw	r0, #0
   1dcc0:	str	r0, [sp, #12]
   1dcc4:	bge	1dce0 <__assert_fail@plt+0xc58c>
   1dcc8:	ldr	r0, [sp, #24]
   1dccc:	ldr	r1, [sp, #40]	; 0x28
   1dcd0:	cmp	r0, r1
   1dcd4:	movw	r0, #0
   1dcd8:	movlt	r0, #1
   1dcdc:	str	r0, [sp, #12]
   1dce0:	ldr	r0, [sp, #12]
   1dce4:	tst	r0, #1
   1dce8:	beq	1dd68 <__assert_fail@plt+0xc614>
   1dcec:	ldr	r0, [fp, #-4]
   1dcf0:	ldr	r0, [r0]
   1dcf4:	ldr	r1, [fp, #-4]
   1dcf8:	ldr	r1, [r1, #24]
   1dcfc:	ldr	r2, [sp, #48]	; 0x30
   1dd00:	add	r1, r1, r2
   1dd04:	ldr	r2, [sp, #24]
   1dd08:	add	r1, r1, r2
   1dd0c:	add	r0, r0, r1
   1dd10:	ldrb	r0, [r0]
   1dd14:	str	r0, [sp, #20]
   1dd18:	ldr	r0, [fp, #-4]
   1dd1c:	ldr	r0, [r0, #64]	; 0x40
   1dd20:	ldr	r1, [sp, #20]
   1dd24:	add	r0, r0, r1
   1dd28:	ldrb	r0, [r0]
   1dd2c:	ldr	r1, [fp, #-4]
   1dd30:	ldr	r1, [r1, #4]
   1dd34:	ldr	r2, [sp, #48]	; 0x30
   1dd38:	ldr	r3, [sp, #24]
   1dd3c:	add	r2, r2, r3
   1dd40:	add	r1, r1, r2
   1dd44:	strb	r0, [r1]
   1dd48:	ldr	r1, [sp, #24]
   1dd4c:	add	r2, sp, #60	; 0x3c
   1dd50:	add	r1, r2, r1
   1dd54:	strb	r0, [r1]
   1dd58:	ldr	r0, [sp, #24]
   1dd5c:	add	r0, r0, #1
   1dd60:	str	r0, [sp, #24]
   1dd64:	b	1dcac <__assert_fail@plt+0xc558>
   1dd68:	add	r0, sp, #60	; 0x3c
   1dd6c:	str	r0, [sp, #28]
   1dd70:	b	1dd94 <__assert_fail@plt+0xc640>
   1dd74:	ldr	r0, [fp, #-4]
   1dd78:	ldr	r0, [r0]
   1dd7c:	ldr	r1, [fp, #-4]
   1dd80:	ldr	r1, [r1, #24]
   1dd84:	add	r0, r0, r1
   1dd88:	ldr	r1, [sp, #48]	; 0x30
   1dd8c:	add	r0, r0, r1
   1dd90:	str	r0, [sp, #28]
   1dd94:	ldr	r1, [sp, #28]
   1dd98:	ldr	r2, [sp, #40]	; 0x28
   1dd9c:	ldr	r0, [fp, #-4]
   1dda0:	add	r3, r0, #16
   1dda4:	add	r0, sp, #32
   1dda8:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   1ddac:	str	r0, [sp, #36]	; 0x24
   1ddb0:	ldr	r0, [sp, #36]	; 0x24
   1ddb4:	cmn	r0, #1
   1ddb8:	movw	r0, #1
   1ddbc:	str	r0, [sp, #8]
   1ddc0:	beq	1de14 <__assert_fail@plt+0xc6c0>
   1ddc4:	ldr	r0, [sp, #36]	; 0x24
   1ddc8:	cmp	r0, #0
   1ddcc:	movw	r0, #1
   1ddd0:	str	r0, [sp, #8]
   1ddd4:	beq	1de14 <__assert_fail@plt+0xc6c0>
   1ddd8:	ldr	r0, [sp, #36]	; 0x24
   1dddc:	cmn	r0, #2
   1dde0:	movw	r0, #0
   1dde4:	str	r0, [sp, #4]
   1dde8:	bne	1de0c <__assert_fail@plt+0xc6b8>
   1ddec:	ldr	r0, [fp, #-4]
   1ddf0:	ldr	r0, [r0, #36]	; 0x24
   1ddf4:	ldr	r1, [fp, #-4]
   1ddf8:	ldr	r1, [r1, #48]	; 0x30
   1ddfc:	cmp	r0, r1
   1de00:	movw	r0, #0
   1de04:	movge	r0, #1
   1de08:	str	r0, [sp, #4]
   1de0c:	ldr	r0, [sp, #4]
   1de10:	str	r0, [sp, #8]
   1de14:	ldr	r0, [sp, #8]
   1de18:	tst	r0, #1
   1de1c:	beq	1de90 <__assert_fail@plt+0xc73c>
   1de20:	movw	r0, #1
   1de24:	str	r0, [sp, #36]	; 0x24
   1de28:	ldr	r0, [fp, #-4]
   1de2c:	ldr	r0, [r0]
   1de30:	ldr	r1, [fp, #-4]
   1de34:	ldr	r1, [r1, #24]
   1de38:	ldr	r2, [sp, #48]	; 0x30
   1de3c:	add	r1, r1, r2
   1de40:	add	r0, r0, r1
   1de44:	ldrb	r0, [r0]
   1de48:	str	r0, [sp, #32]
   1de4c:	ldr	r0, [fp, #-4]
   1de50:	ldr	r0, [r0, #64]	; 0x40
   1de54:	movw	r1, #0
   1de58:	cmp	r0, r1
   1de5c:	beq	1de78 <__assert_fail@plt+0xc724>
   1de60:	ldr	r0, [fp, #-4]
   1de64:	ldr	r0, [r0, #64]	; 0x40
   1de68:	ldr	r1, [sp, #32]
   1de6c:	add	r0, r0, r1
   1de70:	ldrb	r0, [r0]
   1de74:	str	r0, [sp, #32]
   1de78:	ldr	r0, [fp, #-4]
   1de7c:	ldr	r1, [sp, #52]	; 0x34
   1de80:	str	r1, [r0, #16]
   1de84:	ldr	r1, [sp, #56]	; 0x38
   1de88:	str	r1, [r0, #20]
   1de8c:	b	1deb8 <__assert_fail@plt+0xc764>
   1de90:	ldr	r0, [sp, #36]	; 0x24
   1de94:	cmn	r0, #2
   1de98:	bne	1deb4 <__assert_fail@plt+0xc760>
   1de9c:	ldr	r0, [fp, #-4]
   1dea0:	ldr	r1, [sp, #52]	; 0x34
   1dea4:	str	r1, [r0, #16]
   1dea8:	ldr	r1, [sp, #56]	; 0x38
   1deac:	str	r1, [r0, #20]
   1deb0:	b	1df24 <__assert_fail@plt+0xc7d0>
   1deb4:	b	1deb8 <__assert_fail@plt+0xc764>
   1deb8:	ldr	r0, [sp, #32]
   1debc:	ldr	r1, [fp, #-4]
   1dec0:	ldr	r1, [r1, #8]
   1dec4:	ldr	r2, [sp, #48]	; 0x30
   1dec8:	add	r3, r2, #1
   1decc:	str	r3, [sp, #48]	; 0x30
   1ded0:	add	r1, r1, r2, lsl #2
   1ded4:	str	r0, [r1]
   1ded8:	ldr	r0, [sp, #48]	; 0x30
   1dedc:	ldr	r1, [sp, #36]	; 0x24
   1dee0:	add	r0, r0, r1
   1dee4:	sub	r0, r0, #1
   1dee8:	str	r0, [sp, #40]	; 0x28
   1deec:	ldr	r0, [sp, #48]	; 0x30
   1def0:	ldr	r1, [sp, #40]	; 0x28
   1def4:	cmp	r0, r1
   1def8:	bge	1df20 <__assert_fail@plt+0xc7cc>
   1defc:	ldr	r0, [fp, #-4]
   1df00:	ldr	r0, [r0, #8]
   1df04:	ldr	r1, [sp, #48]	; 0x30
   1df08:	add	r2, r1, #1
   1df0c:	str	r2, [sp, #48]	; 0x30
   1df10:	add	r0, r0, r1, lsl #2
   1df14:	mvn	r1, #0
   1df18:	str	r1, [r0]
   1df1c:	b	1deec <__assert_fail@plt+0xc798>
   1df20:	b	1dc5c <__assert_fail@plt+0xc508>
   1df24:	ldr	r0, [sp, #48]	; 0x30
   1df28:	ldr	r1, [fp, #-4]
   1df2c:	str	r0, [r1, #28]
   1df30:	ldr	r0, [sp, #48]	; 0x30
   1df34:	ldr	r1, [fp, #-4]
   1df38:	str	r0, [r1, #32]
   1df3c:	mov	sp, fp
   1df40:	pop	{fp, pc}
   1df44:	sub	sp, sp, #20
   1df48:	str	r0, [sp, #16]
   1df4c:	ldr	r0, [sp, #16]
   1df50:	ldr	r0, [r0, #36]	; 0x24
   1df54:	ldr	r1, [sp, #16]
   1df58:	ldr	r1, [r1, #48]	; 0x30
   1df5c:	cmp	r0, r1
   1df60:	ble	1df74 <__assert_fail@plt+0xc820>
   1df64:	ldr	r0, [sp, #16]
   1df68:	ldr	r0, [r0, #48]	; 0x30
   1df6c:	str	r0, [sp]
   1df70:	b	1df80 <__assert_fail@plt+0xc82c>
   1df74:	ldr	r0, [sp, #16]
   1df78:	ldr	r0, [r0, #36]	; 0x24
   1df7c:	str	r0, [sp]
   1df80:	ldr	r0, [sp]
   1df84:	str	r0, [sp, #8]
   1df88:	ldr	r0, [sp, #16]
   1df8c:	ldr	r0, [r0, #28]
   1df90:	str	r0, [sp, #12]
   1df94:	ldr	r0, [sp, #12]
   1df98:	ldr	r1, [sp, #8]
   1df9c:	cmp	r0, r1
   1dfa0:	bge	1e000 <__assert_fail@plt+0xc8ac>
   1dfa4:	ldr	r0, [sp, #16]
   1dfa8:	ldr	r0, [r0]
   1dfac:	ldr	r1, [sp, #16]
   1dfb0:	ldr	r1, [r1, #24]
   1dfb4:	ldr	r2, [sp, #12]
   1dfb8:	add	r1, r1, r2
   1dfbc:	add	r0, r0, r1
   1dfc0:	ldrb	r0, [r0]
   1dfc4:	str	r0, [sp, #4]
   1dfc8:	ldr	r0, [sp, #16]
   1dfcc:	ldr	r0, [r0, #64]	; 0x40
   1dfd0:	ldr	r1, [sp, #4]
   1dfd4:	add	r0, r0, r1
   1dfd8:	ldrb	r0, [r0]
   1dfdc:	ldr	r1, [sp, #16]
   1dfe0:	ldr	r1, [r1, #4]
   1dfe4:	ldr	r2, [sp, #12]
   1dfe8:	add	r1, r1, r2
   1dfec:	strb	r0, [r1]
   1dff0:	ldr	r0, [sp, #12]
   1dff4:	add	r0, r0, #1
   1dff8:	str	r0, [sp, #12]
   1dffc:	b	1df94 <__assert_fail@plt+0xc840>
   1e000:	ldr	r0, [sp, #12]
   1e004:	ldr	r1, [sp, #16]
   1e008:	str	r0, [r1, #28]
   1e00c:	ldr	r0, [sp, #12]
   1e010:	ldr	r1, [sp, #16]
   1e014:	str	r0, [r1, #32]
   1e018:	add	sp, sp, #20
   1e01c:	bx	lr
   1e020:	push	{fp, lr}
   1e024:	mov	fp, sp
   1e028:	sub	sp, sp, #16
   1e02c:	str	r0, [fp, #-4]
   1e030:	str	r1, [sp, #8]
   1e034:	str	r2, [sp, #4]
   1e038:	ldr	r0, [fp, #-4]
   1e03c:	ldr	r1, [sp, #8]
   1e040:	ldr	r2, [sp, #4]
   1e044:	bl	1e394 <__assert_fail@plt+0xcc40>
   1e048:	ldr	r1, [sp, #8]
   1e04c:	ldr	r2, [r1, #40]	; 0x28
   1e050:	add	r0, r2, r0
   1e054:	str	r0, [r1, #40]	; 0x28
   1e058:	mov	sp, fp
   1e05c:	pop	{fp, pc}
   1e060:	push	{r4, r5, fp, lr}
   1e064:	add	fp, sp, #8
   1e068:	sub	sp, sp, #72	; 0x48
   1e06c:	ldr	ip, [fp, #12]
   1e070:	ldr	lr, [fp, #8]
   1e074:	str	r0, [fp, #-16]
   1e078:	str	r1, [fp, #-20]	; 0xffffffec
   1e07c:	str	r2, [fp, #-24]	; 0xffffffe8
   1e080:	str	r3, [fp, #-28]	; 0xffffffe4
   1e084:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e088:	ldr	r0, [r0]
   1e08c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e090:	movw	r0, #0
   1e094:	str	r0, [sp, #40]	; 0x28
   1e098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e09c:	ldr	r0, [r0, #84]	; 0x54
   1e0a0:	str	r0, [sp, #36]	; 0x24
   1e0a4:	ldr	r0, [fp, #-16]
   1e0a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e0ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e0b4:	ldr	r4, [fp, #8]
   1e0b8:	ldr	r5, [fp, #12]
   1e0bc:	str	r4, [sp]
   1e0c0:	str	r5, [sp, #4]
   1e0c4:	str	lr, [sp, #28]
   1e0c8:	str	ip, [sp, #24]
   1e0cc:	bl	1f428 <__assert_fail@plt+0xdcd4>
   1e0d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e0d4:	ldr	r0, [fp, #12]
   1e0d8:	ldr	r0, [r0]
   1e0dc:	cmp	r0, #0
   1e0e0:	movw	r0, #0
   1e0e4:	str	r0, [sp, #20]
   1e0e8:	beq	1e104 <__assert_fail@plt+0xc9b0>
   1e0ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e0f0:	movw	r1, #0
   1e0f4:	cmp	r0, r1
   1e0f8:	movw	r0, #0
   1e0fc:	moveq	r0, #1
   1e100:	str	r0, [sp, #20]
   1e104:	ldr	r0, [sp, #20]
   1e108:	tst	r0, #1
   1e10c:	beq	1e11c <__assert_fail@plt+0xc9c8>
   1e110:	movw	r0, #0
   1e114:	str	r0, [fp, #-12]
   1e118:	b	1e2ac <__assert_fail@plt+0xcb58>
   1e11c:	b	1e120 <__assert_fail@plt+0xc9cc>
   1e120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e124:	ldr	r0, [r0, #4]
   1e128:	and	r0, r0, #255	; 0xff
   1e12c:	cmp	r0, #10
   1e130:	bne	1e2a4 <__assert_fail@plt+0xcb50>
   1e134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e138:	ldr	r1, [fp, #-16]
   1e13c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e140:	orr	r2, r2, #8388608	; 0x800000
   1e144:	bl	1e020 <__assert_fail@plt+0xc8cc>
   1e148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e14c:	ldr	r0, [r0, #4]
   1e150:	and	r0, r0, #255	; 0xff
   1e154:	cmp	r0, #10
   1e158:	beq	1e258 <__assert_fail@plt+0xcb04>
   1e15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e160:	ldr	r0, [r0, #4]
   1e164:	and	r0, r0, #255	; 0xff
   1e168:	cmp	r0, #2
   1e16c:	beq	1e258 <__assert_fail@plt+0xcb04>
   1e170:	ldr	r0, [fp, #8]
   1e174:	cmp	r0, #0
   1e178:	beq	1e190 <__assert_fail@plt+0xca3c>
   1e17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e180:	ldr	r0, [r0, #4]
   1e184:	and	r0, r0, #255	; 0xff
   1e188:	cmp	r0, #9
   1e18c:	beq	1e258 <__assert_fail@plt+0xcb04>
   1e190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e194:	ldr	r0, [r0, #84]	; 0x54
   1e198:	str	r0, [sp, #32]
   1e19c:	ldr	r0, [sp, #36]	; 0x24
   1e1a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e1a4:	str	r0, [r1, #84]	; 0x54
   1e1a8:	ldr	r0, [fp, #-16]
   1e1ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e1b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1b8:	ldr	ip, [fp, #8]
   1e1bc:	ldr	lr, [fp, #12]
   1e1c0:	str	ip, [sp]
   1e1c4:	str	lr, [sp, #4]
   1e1c8:	bl	1f428 <__assert_fail@plt+0xdcd4>
   1e1cc:	str	r0, [sp, #40]	; 0x28
   1e1d0:	ldr	r0, [fp, #12]
   1e1d4:	ldr	r0, [r0]
   1e1d8:	cmp	r0, #0
   1e1dc:	movw	r0, #0
   1e1e0:	str	r0, [sp, #16]
   1e1e4:	beq	1e200 <__assert_fail@plt+0xcaac>
   1e1e8:	ldr	r0, [sp, #40]	; 0x28
   1e1ec:	movw	r1, #0
   1e1f0:	cmp	r0, r1
   1e1f4:	movw	r0, #0
   1e1f8:	moveq	r0, #1
   1e1fc:	str	r0, [sp, #16]
   1e200:	ldr	r0, [sp, #16]
   1e204:	tst	r0, #1
   1e208:	beq	1e240 <__assert_fail@plt+0xcaec>
   1e20c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e210:	movw	r1, #0
   1e214:	cmp	r0, r1
   1e218:	beq	1e234 <__assert_fail@plt+0xcae0>
   1e21c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e220:	movw	r1, #63532	; 0xf82c
   1e224:	movt	r1, #1
   1e228:	movw	r2, #0
   1e22c:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1e230:	str	r0, [sp, #12]
   1e234:	movw	r0, #0
   1e238:	str	r0, [fp, #-12]
   1e23c:	b	1e2ac <__assert_fail@plt+0xcb58>
   1e240:	ldr	r0, [sp, #32]
   1e244:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e248:	ldr	r2, [r1, #84]	; 0x54
   1e24c:	orr	r0, r2, r0
   1e250:	str	r0, [r1, #84]	; 0x54
   1e254:	b	1e260 <__assert_fail@plt+0xcb0c>
   1e258:	movw	r0, #0
   1e25c:	str	r0, [sp, #40]	; 0x28
   1e260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e264:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e268:	ldr	r2, [sp, #40]	; 0x28
   1e26c:	movw	r3, #10
   1e270:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1e274:	str	r0, [fp, #-36]	; 0xffffffdc
   1e278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e27c:	movw	r1, #0
   1e280:	cmp	r0, r1
   1e284:	bne	1e2a0 <__assert_fail@plt+0xcb4c>
   1e288:	ldr	r0, [fp, #12]
   1e28c:	movw	r1, #12
   1e290:	str	r1, [r0]
   1e294:	movw	r0, #0
   1e298:	str	r0, [fp, #-12]
   1e29c:	b	1e2ac <__assert_fail@plt+0xcb58>
   1e2a0:	b	1e120 <__assert_fail@plt+0xc9cc>
   1e2a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e2a8:	str	r0, [fp, #-12]
   1e2ac:	ldr	r0, [fp, #-12]
   1e2b0:	sub	sp, fp, #8
   1e2b4:	pop	{r4, r5, fp, pc}
   1e2b8:	push	{fp, lr}
   1e2bc:	mov	fp, sp
   1e2c0:	sub	sp, sp, #32
   1e2c4:	add	ip, sp, #8
   1e2c8:	ldr	lr, [pc, #192]	; 1e390 <__assert_fail@plt+0xcc3c>
   1e2cc:	str	r0, [fp, #-4]
   1e2d0:	str	r1, [fp, #-8]
   1e2d4:	str	r2, [fp, #-12]
   1e2d8:	str	r3, [sp, #16]
   1e2dc:	mov	r0, ip
   1e2e0:	movw	r1, #0
   1e2e4:	and	r1, r1, #255	; 0xff
   1e2e8:	movw	r2, #4
   1e2ec:	str	lr, [sp, #4]
   1e2f0:	str	ip, [sp]
   1e2f4:	bl	11658 <memset@plt>
   1e2f8:	ldr	r0, [sp, #16]
   1e2fc:	ldr	r1, [sp, #12]
   1e300:	and	r0, r0, #255	; 0xff
   1e304:	mvn	r2, #255	; 0xff
   1e308:	and	r1, r1, r2
   1e30c:	orr	r0, r1, r0
   1e310:	str	r0, [sp, #12]
   1e314:	ldr	r0, [sp, #12]
   1e318:	ldr	r1, [sp, #4]
   1e31c:	and	r0, r0, r1
   1e320:	str	r0, [sp, #12]
   1e324:	ldr	r0, [sp, #12]
   1e328:	mvn	r2, #262144	; 0x40000
   1e32c:	and	r0, r0, r2
   1e330:	str	r0, [sp, #12]
   1e334:	ldr	r0, [sp, #12]
   1e338:	mvn	r2, #524288	; 0x80000
   1e33c:	and	r0, r0, r2
   1e340:	str	r0, [sp, #12]
   1e344:	ldr	r0, [sp, #12]
   1e348:	mvn	r2, #1048576	; 0x100000
   1e34c:	and	r0, r0, r2
   1e350:	str	r0, [sp, #12]
   1e354:	ldr	r0, [sp, #12]
   1e358:	mvn	r2, #2097152	; 0x200000
   1e35c:	and	r0, r0, r2
   1e360:	str	r0, [sp, #12]
   1e364:	ldr	r0, [sp, #12]
   1e368:	mvn	r2, #4194304	; 0x400000
   1e36c:	and	r0, r0, r2
   1e370:	str	r0, [sp, #12]
   1e374:	ldr	r0, [fp, #-4]
   1e378:	ldr	r1, [fp, #-8]
   1e37c:	ldr	r2, [fp, #-12]
   1e380:	ldr	r3, [sp]
   1e384:	bl	20348 <__assert_fail@plt+0xebf4>
   1e388:	mov	sp, fp
   1e38c:	pop	{fp, pc}
   1e390:			; <UNDEFINED> instruction: 0xfffc00ff
   1e394:	push	{fp, lr}
   1e398:	mov	fp, sp
   1e39c:	sub	sp, sp, #80	; 0x50
   1e3a0:	str	r0, [fp, #-8]
   1e3a4:	str	r1, [fp, #-12]
   1e3a8:	str	r2, [fp, #-16]
   1e3ac:	ldr	r0, [fp, #-12]
   1e3b0:	ldr	r0, [r0, #56]	; 0x38
   1e3b4:	ldr	r1, [fp, #-12]
   1e3b8:	ldr	r1, [r1, #40]	; 0x28
   1e3bc:	cmp	r0, r1
   1e3c0:	bgt	1e3e8 <__assert_fail@plt+0xcc94>
   1e3c4:	ldr	r0, [fp, #-8]
   1e3c8:	ldr	r1, [r0, #4]
   1e3cc:	mvn	r2, #255	; 0xff
   1e3d0:	and	r1, r1, r2
   1e3d4:	orr	r1, r1, #2
   1e3d8:	str	r1, [r0, #4]
   1e3dc:	movw	r0, #0
   1e3e0:	str	r0, [fp, #-4]
   1e3e4:	b	1f1fc <__assert_fail@plt+0xdaa8>
   1e3e8:	ldr	r0, [fp, #-12]
   1e3ec:	ldr	r0, [r0, #4]
   1e3f0:	ldr	r1, [fp, #-12]
   1e3f4:	ldr	r1, [r1, #40]	; 0x28
   1e3f8:	add	r1, r1, #0
   1e3fc:	add	r0, r0, r1
   1e400:	ldrb	r0, [r0]
   1e404:	strb	r0, [fp, #-17]	; 0xffffffef
   1e408:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1e40c:	ldr	r1, [fp, #-8]
   1e410:	strb	r0, [r1]
   1e414:	ldr	r0, [fp, #-8]
   1e418:	ldr	r1, [r0, #4]
   1e41c:	mvn	r2, #4194304	; 0x400000
   1e420:	and	r1, r1, r2
   1e424:	str	r1, [r0, #4]
   1e428:	ldr	r0, [fp, #-8]
   1e42c:	ldr	r1, [r0, #4]
   1e430:	mvn	r2, #2097152	; 0x200000
   1e434:	and	r1, r1, r2
   1e438:	str	r1, [r0, #4]
   1e43c:	ldr	r0, [fp, #-12]
   1e440:	ldr	r0, [r0, #80]	; 0x50
   1e444:	cmp	r0, #1
   1e448:	ble	1e4bc <__assert_fail@plt+0xcd68>
   1e44c:	ldr	r0, [fp, #-12]
   1e450:	ldr	r0, [r0, #40]	; 0x28
   1e454:	ldr	r1, [fp, #-12]
   1e458:	ldr	r1, [r1, #28]
   1e45c:	cmp	r0, r1
   1e460:	beq	1e4bc <__assert_fail@plt+0xcd68>
   1e464:	ldr	r0, [fp, #-12]
   1e468:	ldr	r1, [r0, #8]
   1e46c:	ldr	r0, [r0, #40]	; 0x28
   1e470:	add	r0, r1, r0, lsl #2
   1e474:	ldr	r0, [r0]
   1e478:	cmn	r0, #1
   1e47c:	bne	1e4bc <__assert_fail@plt+0xcd68>
   1e480:	ldr	r0, [fp, #-8]
   1e484:	ldr	r1, [r0, #4]
   1e488:	mvn	r2, #255	; 0xff
   1e48c:	and	r1, r1, r2
   1e490:	orr	r1, r1, #1
   1e494:	str	r1, [r0, #4]
   1e498:	ldr	r0, [fp, #-8]
   1e49c:	ldr	r1, [r0, #4]
   1e4a0:	mvn	r2, #2097152	; 0x200000
   1e4a4:	and	r1, r1, r2
   1e4a8:	orr	r1, r1, #2097152	; 0x200000
   1e4ac:	str	r1, [r0, #4]
   1e4b0:	movw	r0, #1
   1e4b4:	str	r0, [fp, #-4]
   1e4b8:	b	1f1fc <__assert_fail@plt+0xdaa8>
   1e4bc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1e4c0:	cmp	r0, #92	; 0x5c
   1e4c4:	bne	1eb98 <__assert_fail@plt+0xd444>
   1e4c8:	ldr	r0, [fp, #-12]
   1e4cc:	ldr	r0, [r0, #40]	; 0x28
   1e4d0:	add	r0, r0, #1
   1e4d4:	ldr	r1, [fp, #-12]
   1e4d8:	ldr	r1, [r1, #48]	; 0x30
   1e4dc:	cmp	r0, r1
   1e4e0:	blt	1e508 <__assert_fail@plt+0xcdb4>
   1e4e4:	ldr	r0, [fp, #-8]
   1e4e8:	ldr	r1, [r0, #4]
   1e4ec:	mvn	r2, #255	; 0xff
   1e4f0:	and	r1, r1, r2
   1e4f4:	orr	r1, r1, #36	; 0x24
   1e4f8:	str	r1, [r0, #4]
   1e4fc:	movw	r0, #1
   1e500:	str	r0, [fp, #-4]
   1e504:	b	1f1fc <__assert_fail@plt+0xdaa8>
   1e508:	ldr	r0, [fp, #-12]
   1e50c:	movw	r1, #1
   1e510:	bl	1f20c <__assert_fail@plt+0xdab8>
   1e514:	strb	r0, [fp, #-18]	; 0xffffffee
   1e518:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e51c:	ldr	r1, [fp, #-8]
   1e520:	strb	r0, [r1]
   1e524:	ldr	r0, [fp, #-8]
   1e528:	ldr	r1, [r0, #4]
   1e52c:	mvn	lr, #255	; 0xff
   1e530:	and	r1, r1, lr
   1e534:	orr	r1, r1, #1
   1e538:	str	r1, [r0, #4]
   1e53c:	ldr	r0, [fp, #-12]
   1e540:	ldr	r0, [r0, #80]	; 0x50
   1e544:	cmp	r0, #1
   1e548:	ble	1e5cc <__assert_fail@plt+0xce78>
   1e54c:	ldr	r0, [fp, #-12]
   1e550:	ldr	r1, [fp, #-12]
   1e554:	ldr	r1, [r1, #40]	; 0x28
   1e558:	add	r1, r1, #1
   1e55c:	bl	1f3cc <__assert_fail@plt+0xdc78>
   1e560:	str	r0, [fp, #-24]	; 0xffffffe8
   1e564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e568:	bl	11634 <iswalnum@plt>
   1e56c:	cmp	r0, #0
   1e570:	movw	r0, #1
   1e574:	str	r0, [sp, #36]	; 0x24
   1e578:	bne	1e590 <__assert_fail@plt+0xce3c>
   1e57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e580:	cmp	r0, #95	; 0x5f
   1e584:	movw	r0, #0
   1e588:	moveq	r0, #1
   1e58c:	str	r0, [sp, #36]	; 0x24
   1e590:	ldr	r0, [sp, #36]	; 0x24
   1e594:	and	r0, r0, #1
   1e598:	cmp	r0, #0
   1e59c:	movw	r0, #0
   1e5a0:	movne	r0, #1
   1e5a4:	and	r0, r0, #1
   1e5a8:	ldr	r1, [fp, #-8]
   1e5ac:	ldr	r2, [r1, #4]
   1e5b0:	and	r0, r0, #1
   1e5b4:	lsl	r0, r0, #22
   1e5b8:	mvn	r3, #4194304	; 0x400000
   1e5bc:	and	r2, r2, r3
   1e5c0:	orr	r0, r2, r0
   1e5c4:	str	r0, [r1, #4]
   1e5c8:	b	1e648 <__assert_fail@plt+0xcef4>
   1e5cc:	bl	115e0 <__ctype_b_loc@plt>
   1e5d0:	ldr	r0, [r0]
   1e5d4:	ldrb	lr, [fp, #-18]	; 0xffffffee
   1e5d8:	mov	r1, lr
   1e5dc:	add	r0, r0, lr, lsl #1
   1e5e0:	ldrh	r0, [r0]
   1e5e4:	and	r0, r0, #8
   1e5e8:	cmp	r0, #0
   1e5ec:	movw	r0, #1
   1e5f0:	str	r1, [sp, #32]
   1e5f4:	str	r0, [sp, #28]
   1e5f8:	bne	1e610 <__assert_fail@plt+0xcebc>
   1e5fc:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e600:	cmp	r0, #95	; 0x5f
   1e604:	movw	r0, #0
   1e608:	moveq	r0, #1
   1e60c:	str	r0, [sp, #28]
   1e610:	ldr	r0, [sp, #28]
   1e614:	and	r0, r0, #1
   1e618:	cmp	r0, #0
   1e61c:	movw	r0, #0
   1e620:	movne	r0, #1
   1e624:	and	r0, r0, #1
   1e628:	ldr	r1, [fp, #-8]
   1e62c:	ldr	r2, [r1, #4]
   1e630:	and	r0, r0, #1
   1e634:	lsl	r0, r0, #22
   1e638:	mvn	r3, #4194304	; 0x400000
   1e63c:	and	r2, r2, r3
   1e640:	orr	r0, r2, r0
   1e644:	str	r0, [r1, #4]
   1e648:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e64c:	sub	r0, r0, #39	; 0x27
   1e650:	cmp	r0, #86	; 0x56
   1e654:	str	r0, [sp, #24]
   1e658:	bhi	1eb88 <__assert_fail@plt+0xd434>
   1e65c:	add	r0, pc, #8
   1e660:	ldr	r1, [sp, #24]
   1e664:	ldr	r0, [r0, r1, lsl #2]
   1e668:	mov	pc, r0
   1e66c:	andeq	lr, r1, r8, lsl #20
   1e670:	andeq	lr, r1, r0, asr #20
   1e674:	andeq	lr, r1, ip, ror #20
   1e678:	andeq	lr, r1, r8, lsl #23
   1e67c:	muleq	r1, r8, sl
   1e680:	andeq	lr, r1, r8, lsl #23
   1e684:	andeq	lr, r1, r8, lsl #23
   1e688:	andeq	lr, r1, r8, lsl #23
   1e68c:	andeq	lr, r1, r8, lsl #23
   1e690:	andeq	lr, r1, r8, lsl #23
   1e694:	andeq	lr, r1, r4, lsl #16
   1e698:	andeq	lr, r1, r4, lsl #16
   1e69c:	andeq	lr, r1, r4, lsl #16
   1e6a0:	andeq	lr, r1, r4, lsl #16
   1e6a4:	andeq	lr, r1, r4, lsl #16
   1e6a8:	andeq	lr, r1, r4, lsl #16
   1e6ac:	andeq	lr, r1, r4, lsl #16
   1e6b0:	andeq	lr, r1, r4, lsl #16
   1e6b4:	andeq	lr, r1, r4, lsl #16
   1e6b8:	andeq	lr, r1, r8, lsl #23
   1e6bc:	andeq	lr, r1, r8, lsl #23
   1e6c0:	andeq	lr, r1, r0, asr #16
   1e6c4:	andeq	lr, r1, r8, lsl #23
   1e6c8:	andeq	lr, r1, r8, ror r8
   1e6cc:	ldrdeq	lr, [r1], -r4
   1e6d0:	andeq	lr, r1, r8, lsl #23
   1e6d4:	andeq	lr, r1, r8, lsl #23
   1e6d8:	andeq	lr, r1, r8, ror #17
   1e6dc:	andeq	lr, r1, r8, lsl #23
   1e6e0:	andeq	lr, r1, r8, lsl #23
   1e6e4:	andeq	lr, r1, r8, lsl #23
   1e6e8:	andeq	lr, r1, r8, lsl #23
   1e6ec:	andeq	lr, r1, r8, lsl #23
   1e6f0:	andeq	lr, r1, r8, lsl #23
   1e6f4:	andeq	lr, r1, r8, lsl #23
   1e6f8:	andeq	lr, r1, r8, lsl #23
   1e6fc:	andeq	lr, r1, r8, lsl #23
   1e700:	andeq	lr, r1, r8, lsl #23
   1e704:	andeq	lr, r1, r8, lsl #23
   1e708:	andeq	lr, r1, r8, lsl #23
   1e70c:	andeq	lr, r1, r8, lsl #23
   1e710:	andeq	lr, r1, r8, lsl #23
   1e714:	andeq	lr, r1, r8, lsl #23
   1e718:	andeq	lr, r1, r8, lsl #23
   1e71c:	andeq	lr, r1, r4, lsr #19
   1e720:	andeq	lr, r1, r8, lsl #23
   1e724:	andeq	lr, r1, r8, lsl #23
   1e728:	andeq	lr, r1, r8, lsl #23
   1e72c:	andeq	lr, r1, ip, asr #18
   1e730:	andeq	lr, r1, r8, lsl #23
   1e734:	andeq	lr, r1, r8, lsl #23
   1e738:	andeq	lr, r1, r8, lsl #23
   1e73c:	andeq	lr, r1, r8, lsl #23
   1e740:	andeq	lr, r1, r8, lsl #23
   1e744:	andeq	lr, r1, r8, lsl #23
   1e748:	andeq	lr, r1, r8, lsl #23
   1e74c:	andeq	lr, r1, r8, lsl #23
   1e750:	ldrdeq	lr, [r1], -r0
   1e754:	andeq	lr, r1, r8, lsl #23
   1e758:			; <UNDEFINED> instruction: 0x0001e8b0
   1e75c:	andeq	lr, r1, r8, lsl #23
   1e760:	andeq	lr, r1, r8, lsl #23
   1e764:	andeq	lr, r1, r8, lsl #23
   1e768:	andeq	lr, r1, r8, lsl #23
   1e76c:	andeq	lr, r1, r8, lsl #23
   1e770:	andeq	lr, r1, r8, lsl #23
   1e774:	andeq	lr, r1, r8, lsl #23
   1e778:	andeq	lr, r1, r8, lsl #23
   1e77c:	andeq	lr, r1, r8, lsl #23
   1e780:	andeq	lr, r1, r8, lsl #23
   1e784:	andeq	lr, r1, r8, lsl #23
   1e788:	andeq	lr, r1, r8, lsl #23
   1e78c:	andeq	lr, r1, r8, lsl #23
   1e790:	andeq	lr, r1, r8, lsl #23
   1e794:	andeq	lr, r1, r8, lsl #23
   1e798:	andeq	lr, r1, r8, lsl #23
   1e79c:	andeq	lr, r1, r8, ror r9
   1e7a0:	andeq	lr, r1, r8, lsl #23
   1e7a4:	andeq	lr, r1, r8, lsl #23
   1e7a8:	andeq	lr, r1, r8, lsl #23
   1e7ac:	andeq	lr, r1, r0, lsr #18
   1e7b0:	andeq	lr, r1, r8, lsl #23
   1e7b4:	andeq	lr, r1, r8, lsl #23
   1e7b8:	andeq	lr, r1, r8, lsl #23
   1e7bc:	andeq	lr, r1, r0, lsl fp
   1e7c0:	andeq	lr, r1, r8, asr #15
   1e7c4:	andeq	lr, r1, ip, asr #22
   1e7c8:	ldr	r0, [fp, #-16]
   1e7cc:	and	r0, r0, #1024	; 0x400
   1e7d0:	cmp	r0, #0
   1e7d4:	bne	1e800 <__assert_fail@plt+0xd0ac>
   1e7d8:	ldr	r0, [fp, #-16]
   1e7dc:	and	r0, r0, #32768	; 0x8000
   1e7e0:	cmp	r0, #0
   1e7e4:	bne	1e800 <__assert_fail@plt+0xd0ac>
   1e7e8:	ldr	r0, [fp, #-8]
   1e7ec:	ldr	r1, [r0, #4]
   1e7f0:	mvn	r2, #255	; 0xff
   1e7f4:	and	r1, r1, r2
   1e7f8:	orr	r1, r1, #10
   1e7fc:	str	r1, [r0, #4]
   1e800:	b	1eb8c <__assert_fail@plt+0xd438>
   1e804:	ldr	r0, [fp, #-16]
   1e808:	and	r0, r0, #16384	; 0x4000
   1e80c:	cmp	r0, #0
   1e810:	bne	1e83c <__assert_fail@plt+0xd0e8>
   1e814:	ldr	r0, [fp, #-8]
   1e818:	ldr	r1, [r0, #4]
   1e81c:	mvn	r2, #255	; 0xff
   1e820:	and	r1, r1, r2
   1e824:	orr	r1, r1, #4
   1e828:	str	r1, [r0, #4]
   1e82c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e830:	sub	r0, r0, #49	; 0x31
   1e834:	ldr	r1, [fp, #-8]
   1e838:	str	r0, [r1]
   1e83c:	b	1eb8c <__assert_fail@plt+0xd438>
   1e840:	ldr	r0, [fp, #-16]
   1e844:	and	r0, r0, #524288	; 0x80000
   1e848:	cmp	r0, #0
   1e84c:	bne	1e874 <__assert_fail@plt+0xd120>
   1e850:	ldr	r0, [fp, #-8]
   1e854:	ldr	r1, [r0, #4]
   1e858:	mvn	r2, #255	; 0xff
   1e85c:	and	r1, r1, r2
   1e860:	orr	r1, r1, #12
   1e864:	str	r1, [r0, #4]
   1e868:	ldr	r0, [fp, #-8]
   1e86c:	movw	r1, #6
   1e870:	str	r1, [r0]
   1e874:	b	1eb8c <__assert_fail@plt+0xd438>
   1e878:	ldr	r0, [fp, #-16]
   1e87c:	and	r0, r0, #524288	; 0x80000
   1e880:	cmp	r0, #0
   1e884:	bne	1e8ac <__assert_fail@plt+0xd158>
   1e888:	ldr	r0, [fp, #-8]
   1e88c:	ldr	r1, [r0, #4]
   1e890:	mvn	r2, #255	; 0xff
   1e894:	and	r1, r1, r2
   1e898:	orr	r1, r1, #12
   1e89c:	str	r1, [r0, #4]
   1e8a0:	ldr	r0, [fp, #-8]
   1e8a4:	movw	r1, #9
   1e8a8:	str	r1, [r0]
   1e8ac:	b	1eb8c <__assert_fail@plt+0xd438>
   1e8b0:	ldr	r0, [fp, #-16]
   1e8b4:	and	r0, r0, #524288	; 0x80000
   1e8b8:	cmp	r0, #0
   1e8bc:	bne	1e8e4 <__assert_fail@plt+0xd190>
   1e8c0:	ldr	r0, [fp, #-8]
   1e8c4:	ldr	r1, [r0, #4]
   1e8c8:	mvn	r2, #255	; 0xff
   1e8cc:	and	r1, r1, r2
   1e8d0:	orr	r1, r1, #12
   1e8d4:	str	r1, [r0, #4]
   1e8d8:	ldr	r0, [fp, #-8]
   1e8dc:	movw	r1, #256	; 0x100
   1e8e0:	str	r1, [r0]
   1e8e4:	b	1eb8c <__assert_fail@plt+0xd438>
   1e8e8:	ldr	r0, [fp, #-16]
   1e8ec:	and	r0, r0, #524288	; 0x80000
   1e8f0:	cmp	r0, #0
   1e8f4:	bne	1e91c <__assert_fail@plt+0xd1c8>
   1e8f8:	ldr	r0, [fp, #-8]
   1e8fc:	ldr	r1, [r0, #4]
   1e900:	mvn	r2, #255	; 0xff
   1e904:	and	r1, r1, r2
   1e908:	orr	r1, r1, #12
   1e90c:	str	r1, [r0, #4]
   1e910:	ldr	r0, [fp, #-8]
   1e914:	movw	r1, #512	; 0x200
   1e918:	str	r1, [r0]
   1e91c:	b	1eb8c <__assert_fail@plt+0xd438>
   1e920:	ldr	r0, [fp, #-16]
   1e924:	and	r0, r0, #524288	; 0x80000
   1e928:	cmp	r0, #0
   1e92c:	bne	1e948 <__assert_fail@plt+0xd1f4>
   1e930:	ldr	r0, [fp, #-8]
   1e934:	ldr	r1, [r0, #4]
   1e938:	mvn	r2, #255	; 0xff
   1e93c:	and	r1, r1, r2
   1e940:	orr	r1, r1, #32
   1e944:	str	r1, [r0, #4]
   1e948:	b	1eb8c <__assert_fail@plt+0xd438>
   1e94c:	ldr	r0, [fp, #-16]
   1e950:	and	r0, r0, #524288	; 0x80000
   1e954:	cmp	r0, #0
   1e958:	bne	1e974 <__assert_fail@plt+0xd220>
   1e95c:	ldr	r0, [fp, #-8]
   1e960:	ldr	r1, [r0, #4]
   1e964:	mvn	r2, #255	; 0xff
   1e968:	and	r1, r1, r2
   1e96c:	orr	r1, r1, #33	; 0x21
   1e970:	str	r1, [r0, #4]
   1e974:	b	1eb8c <__assert_fail@plt+0xd438>
   1e978:	ldr	r0, [fp, #-16]
   1e97c:	and	r0, r0, #524288	; 0x80000
   1e980:	cmp	r0, #0
   1e984:	bne	1e9a0 <__assert_fail@plt+0xd24c>
   1e988:	ldr	r0, [fp, #-8]
   1e98c:	ldr	r1, [r0, #4]
   1e990:	mvn	r2, #255	; 0xff
   1e994:	and	r1, r1, r2
   1e998:	orr	r1, r1, #34	; 0x22
   1e99c:	str	r1, [r0, #4]
   1e9a0:	b	1eb8c <__assert_fail@plt+0xd438>
   1e9a4:	ldr	r0, [fp, #-16]
   1e9a8:	and	r0, r0, #524288	; 0x80000
   1e9ac:	cmp	r0, #0
   1e9b0:	bne	1e9cc <__assert_fail@plt+0xd278>
   1e9b4:	ldr	r0, [fp, #-8]
   1e9b8:	ldr	r1, [r0, #4]
   1e9bc:	mvn	r2, #255	; 0xff
   1e9c0:	and	r1, r1, r2
   1e9c4:	orr	r1, r1, #35	; 0x23
   1e9c8:	str	r1, [r0, #4]
   1e9cc:	b	1eb8c <__assert_fail@plt+0xd438>
   1e9d0:	ldr	r0, [fp, #-16]
   1e9d4:	and	r0, r0, #524288	; 0x80000
   1e9d8:	cmp	r0, #0
   1e9dc:	bne	1ea04 <__assert_fail@plt+0xd2b0>
   1e9e0:	ldr	r0, [fp, #-8]
   1e9e4:	ldr	r1, [r0, #4]
   1e9e8:	mvn	r2, #255	; 0xff
   1e9ec:	and	r1, r1, r2
   1e9f0:	orr	r1, r1, #12
   1e9f4:	str	r1, [r0, #4]
   1e9f8:	ldr	r0, [fp, #-8]
   1e9fc:	movw	r1, #64	; 0x40
   1ea00:	str	r1, [r0]
   1ea04:	b	1eb8c <__assert_fail@plt+0xd438>
   1ea08:	ldr	r0, [fp, #-16]
   1ea0c:	and	r0, r0, #524288	; 0x80000
   1ea10:	cmp	r0, #0
   1ea14:	bne	1ea3c <__assert_fail@plt+0xd2e8>
   1ea18:	ldr	r0, [fp, #-8]
   1ea1c:	ldr	r1, [r0, #4]
   1ea20:	mvn	r2, #255	; 0xff
   1ea24:	and	r1, r1, r2
   1ea28:	orr	r1, r1, #12
   1ea2c:	str	r1, [r0, #4]
   1ea30:	ldr	r0, [fp, #-8]
   1ea34:	movw	r1, #128	; 0x80
   1ea38:	str	r1, [r0]
   1ea3c:	b	1eb8c <__assert_fail@plt+0xd438>
   1ea40:	ldr	r0, [fp, #-16]
   1ea44:	and	r0, r0, #8192	; 0x2000
   1ea48:	cmp	r0, #0
   1ea4c:	bne	1ea68 <__assert_fail@plt+0xd314>
   1ea50:	ldr	r0, [fp, #-8]
   1ea54:	ldr	r1, [r0, #4]
   1ea58:	mvn	r2, #255	; 0xff
   1ea5c:	and	r1, r1, r2
   1ea60:	orr	r1, r1, #8
   1ea64:	str	r1, [r0, #4]
   1ea68:	b	1eb8c <__assert_fail@plt+0xd438>
   1ea6c:	ldr	r0, [fp, #-16]
   1ea70:	and	r0, r0, #8192	; 0x2000
   1ea74:	cmp	r0, #0
   1ea78:	bne	1ea94 <__assert_fail@plt+0xd340>
   1ea7c:	ldr	r0, [fp, #-8]
   1ea80:	ldr	r1, [r0, #4]
   1ea84:	mvn	r2, #255	; 0xff
   1ea88:	and	r1, r1, r2
   1ea8c:	orr	r1, r1, #9
   1ea90:	str	r1, [r0, #4]
   1ea94:	b	1eb8c <__assert_fail@plt+0xd438>
   1ea98:	ldr	r0, [fp, #-16]
   1ea9c:	and	r0, r0, #1024	; 0x400
   1eaa0:	cmp	r0, #0
   1eaa4:	bne	1ead0 <__assert_fail@plt+0xd37c>
   1eaa8:	ldr	r0, [fp, #-16]
   1eaac:	and	r0, r0, #2
   1eab0:	cmp	r0, #0
   1eab4:	beq	1ead0 <__assert_fail@plt+0xd37c>
   1eab8:	ldr	r0, [fp, #-8]
   1eabc:	ldr	r1, [r0, #4]
   1eac0:	mvn	r2, #255	; 0xff
   1eac4:	and	r1, r1, r2
   1eac8:	orr	r1, r1, #18
   1eacc:	str	r1, [r0, #4]
   1ead0:	b	1eb8c <__assert_fail@plt+0xd438>
   1ead4:	ldr	r0, [fp, #-16]
   1ead8:	and	r0, r0, #1024	; 0x400
   1eadc:	cmp	r0, #0
   1eae0:	bne	1eb0c <__assert_fail@plt+0xd3b8>
   1eae4:	ldr	r0, [fp, #-16]
   1eae8:	and	r0, r0, #2
   1eaec:	cmp	r0, #0
   1eaf0:	beq	1eb0c <__assert_fail@plt+0xd3b8>
   1eaf4:	ldr	r0, [fp, #-8]
   1eaf8:	ldr	r1, [r0, #4]
   1eafc:	mvn	r2, #255	; 0xff
   1eb00:	and	r1, r1, r2
   1eb04:	orr	r1, r1, #19
   1eb08:	str	r1, [r0, #4]
   1eb0c:	b	1eb8c <__assert_fail@plt+0xd438>
   1eb10:	ldr	r0, [fp, #-16]
   1eb14:	and	r0, r0, #512	; 0x200
   1eb18:	cmp	r0, #0
   1eb1c:	beq	1eb48 <__assert_fail@plt+0xd3f4>
   1eb20:	ldr	r0, [fp, #-16]
   1eb24:	and	r0, r0, #4096	; 0x1000
   1eb28:	cmp	r0, #0
   1eb2c:	bne	1eb48 <__assert_fail@plt+0xd3f4>
   1eb30:	ldr	r0, [fp, #-8]
   1eb34:	ldr	r1, [r0, #4]
   1eb38:	mvn	r2, #255	; 0xff
   1eb3c:	and	r1, r1, r2
   1eb40:	orr	r1, r1, #23
   1eb44:	str	r1, [r0, #4]
   1eb48:	b	1eb8c <__assert_fail@plt+0xd438>
   1eb4c:	ldr	r0, [fp, #-16]
   1eb50:	and	r0, r0, #512	; 0x200
   1eb54:	cmp	r0, #0
   1eb58:	beq	1eb84 <__assert_fail@plt+0xd430>
   1eb5c:	ldr	r0, [fp, #-16]
   1eb60:	and	r0, r0, #4096	; 0x1000
   1eb64:	cmp	r0, #0
   1eb68:	bne	1eb84 <__assert_fail@plt+0xd430>
   1eb6c:	ldr	r0, [fp, #-8]
   1eb70:	ldr	r1, [r0, #4]
   1eb74:	mvn	r2, #255	; 0xff
   1eb78:	and	r1, r1, r2
   1eb7c:	orr	r1, r1, #24
   1eb80:	str	r1, [r0, #4]
   1eb84:	b	1eb8c <__assert_fail@plt+0xd438>
   1eb88:	b	1eb8c <__assert_fail@plt+0xd438>
   1eb8c:	movw	r0, #2
   1eb90:	str	r0, [fp, #-4]
   1eb94:	b	1f1fc <__assert_fail@plt+0xdaa8>
   1eb98:	ldr	r0, [fp, #-8]
   1eb9c:	ldr	r1, [r0, #4]
   1eba0:	mvn	r2, #255	; 0xff
   1eba4:	and	r1, r1, r2
   1eba8:	orr	r1, r1, #1
   1ebac:	str	r1, [r0, #4]
   1ebb0:	ldr	r0, [fp, #-12]
   1ebb4:	ldr	r0, [r0, #80]	; 0x50
   1ebb8:	cmp	r0, #1
   1ebbc:	ble	1ec3c <__assert_fail@plt+0xd4e8>
   1ebc0:	ldr	r0, [fp, #-12]
   1ebc4:	ldr	r1, [fp, #-12]
   1ebc8:	ldr	r1, [r1, #40]	; 0x28
   1ebcc:	bl	1f3cc <__assert_fail@plt+0xdc78>
   1ebd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ebd8:	bl	11634 <iswalnum@plt>
   1ebdc:	cmp	r0, #0
   1ebe0:	movw	r0, #1
   1ebe4:	str	r0, [sp, #20]
   1ebe8:	bne	1ec00 <__assert_fail@plt+0xd4ac>
   1ebec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ebf0:	cmp	r0, #95	; 0x5f
   1ebf4:	movw	r0, #0
   1ebf8:	moveq	r0, #1
   1ebfc:	str	r0, [sp, #20]
   1ec00:	ldr	r0, [sp, #20]
   1ec04:	and	r0, r0, #1
   1ec08:	cmp	r0, #0
   1ec0c:	movw	r0, #0
   1ec10:	movne	r0, #1
   1ec14:	and	r0, r0, #1
   1ec18:	ldr	r1, [fp, #-8]
   1ec1c:	ldr	r2, [r1, #4]
   1ec20:	and	r0, r0, #1
   1ec24:	lsl	r0, r0, #22
   1ec28:	mvn	r3, #4194304	; 0x400000
   1ec2c:	and	r2, r2, r3
   1ec30:	orr	r0, r2, r0
   1ec34:	str	r0, [r1, #4]
   1ec38:	b	1ecb0 <__assert_fail@plt+0xd55c>
   1ec3c:	bl	115e0 <__ctype_b_loc@plt>
   1ec40:	ldr	r0, [r0]
   1ec44:	ldr	lr, [fp, #-8]
   1ec48:	ldrb	lr, [lr]
   1ec4c:	mov	r1, lr
   1ec50:	add	r0, r0, lr, lsl #1
   1ec54:	ldrh	r0, [r0]
   1ec58:	and	r0, r0, #8
   1ec5c:	cmp	r0, #0
   1ec60:	movw	r0, #1
   1ec64:	str	r1, [sp, #16]
   1ec68:	str	r0, [sp, #12]
   1ec6c:	bne	1ec88 <__assert_fail@plt+0xd534>
   1ec70:	ldr	r0, [fp, #-8]
   1ec74:	ldrb	r0, [r0]
   1ec78:	cmp	r0, #95	; 0x5f
   1ec7c:	movw	r0, #0
   1ec80:	moveq	r0, #1
   1ec84:	str	r0, [sp, #12]
   1ec88:	ldr	r0, [sp, #12]
   1ec8c:	and	r0, r0, #1
   1ec90:	ldr	r1, [fp, #-8]
   1ec94:	ldr	r2, [r1, #4]
   1ec98:	and	r0, r0, #1
   1ec9c:	lsl	r0, r0, #22
   1eca0:	mvn	r3, #4194304	; 0x400000
   1eca4:	and	r2, r2, r3
   1eca8:	orr	r0, r2, r0
   1ecac:	str	r0, [r1, #4]
   1ecb0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1ecb4:	sub	r0, r0, #10
   1ecb8:	cmp	r0, #115	; 0x73
   1ecbc:	str	r0, [sp, #8]
   1ecc0:	bhi	1f1f0 <__assert_fail@plt+0xda9c>
   1ecc4:	add	r0, pc, #8
   1ecc8:	ldr	r1, [sp, #8]
   1eccc:	ldr	r0, [r0, r1, lsl #2]
   1ecd0:	mov	pc, r0
   1ecd4:	andeq	lr, r1, r4, lsr #29
   1ecd8:	strdeq	pc, [r1], -r0
   1ecdc:	strdeq	pc, [r1], -r0
   1ece0:	strdeq	pc, [r1], -r0
   1ece4:	strdeq	pc, [r1], -r0
   1ece8:	strdeq	pc, [r1], -r0
   1ecec:	strdeq	pc, [r1], -r0
   1ecf0:	strdeq	pc, [r1], -r0
   1ecf4:	strdeq	pc, [r1], -r0
   1ecf8:	strdeq	pc, [r1], -r0
   1ecfc:	strdeq	pc, [r1], -r0
   1ed00:	strdeq	pc, [r1], -r0
   1ed04:	strdeq	pc, [r1], -r0
   1ed08:	strdeq	pc, [r1], -r0
   1ed0c:	strdeq	pc, [r1], -r0
   1ed10:	strdeq	pc, [r1], -r0
   1ed14:	strdeq	pc, [r1], -r0
   1ed18:	strdeq	pc, [r1], -r0
   1ed1c:	strdeq	pc, [r1], -r0
   1ed20:	strdeq	pc, [r1], -r0
   1ed24:	strdeq	pc, [r1], -r0
   1ed28:	strdeq	pc, [r1], -r0
   1ed2c:	strdeq	pc, [r1], -r0
   1ed30:	strdeq	pc, [r1], -r0
   1ed34:	strdeq	pc, [r1], -r0
   1ed38:	strdeq	pc, [r1], -r0
   1ed3c:	andeq	pc, r1, ip, lsr r1	; <UNPREDICTABLE>
   1ed40:	strdeq	pc, [r1], -r0
   1ed44:	strdeq	pc, [r1], -r0
   1ed48:	strdeq	pc, [r1], -r0
   1ed4c:	andeq	pc, r1, r8, lsl r0	; <UNPREDICTABLE>
   1ed50:	andeq	pc, r1, r4, asr #32
   1ed54:	andeq	lr, r1, ip, lsl #30
   1ed58:	andeq	lr, r1, r8, lsr #30
   1ed5c:	strdeq	pc, [r1], -r0
   1ed60:	strdeq	pc, [r1], -r0
   1ed64:	andeq	pc, r1, ip, lsl #1
   1ed68:	strdeq	pc, [r1], -r0
   1ed6c:	strdeq	pc, [r1], -r0
   1ed70:	strdeq	pc, [r1], -r0
   1ed74:	strdeq	pc, [r1], -r0
   1ed78:	strdeq	pc, [r1], -r0
   1ed7c:	strdeq	pc, [r1], -r0
   1ed80:	strdeq	pc, [r1], -r0
   1ed84:	strdeq	pc, [r1], -r0
   1ed88:	strdeq	pc, [r1], -r0
   1ed8c:	strdeq	pc, [r1], -r0
   1ed90:	strdeq	pc, [r1], -r0
   1ed94:	strdeq	pc, [r1], -r0
   1ed98:	strdeq	pc, [r1], -r0
   1ed9c:	strdeq	pc, [r1], -r0
   1eda0:	strdeq	pc, [r1], -r0
   1eda4:	strdeq	pc, [r1], -r0
   1eda8:	andeq	lr, r1, r4, ror #30
   1edac:	strdeq	pc, [r1], -r0
   1edb0:	strdeq	pc, [r1], -r0
   1edb4:	strdeq	pc, [r1], -r0
   1edb8:	strdeq	pc, [r1], -r0
   1edbc:	strdeq	pc, [r1], -r0
   1edc0:	strdeq	pc, [r1], -r0
   1edc4:	strdeq	pc, [r1], -r0
   1edc8:	strdeq	pc, [r1], -r0
   1edcc:	strdeq	pc, [r1], -r0
   1edd0:	strdeq	pc, [r1], -r0
   1edd4:	strdeq	pc, [r1], -r0
   1edd8:	strdeq	pc, [r1], -r0
   1eddc:	strdeq	pc, [r1], -r0
   1ede0:	strdeq	pc, [r1], -r0
   1ede4:	strdeq	pc, [r1], -r0
   1ede8:	strdeq	pc, [r1], -r0
   1edec:	strdeq	pc, [r1], -r0
   1edf0:	strdeq	pc, [r1], -r0
   1edf4:	strdeq	pc, [r1], -r0
   1edf8:	strdeq	pc, [r1], -r0
   1edfc:	strdeq	pc, [r1], -r0
   1ee00:	strdeq	pc, [r1], -r0
   1ee04:	strdeq	pc, [r1], -r0
   1ee08:	strdeq	pc, [r1], -r0
   1ee0c:	strdeq	pc, [r1], -r0
   1ee10:	strdeq	pc, [r1], -r0
   1ee14:	strdeq	pc, [r1], -r0
   1ee18:	andeq	pc, r1, r0, ror r0	; <UNPREDICTABLE>
   1ee1c:	strdeq	pc, [r1], -r0
   1ee20:	strdeq	pc, [r1], -r0
   1ee24:	andeq	pc, r1, r8, lsr #1
   1ee28:	strdeq	pc, [r1], -r0
   1ee2c:	strdeq	pc, [r1], -r0
   1ee30:	strdeq	pc, [r1], -r0
   1ee34:	strdeq	pc, [r1], -r0
   1ee38:	strdeq	pc, [r1], -r0
   1ee3c:	strdeq	pc, [r1], -r0
   1ee40:	strdeq	pc, [r1], -r0
   1ee44:	strdeq	pc, [r1], -r0
   1ee48:	strdeq	pc, [r1], -r0
   1ee4c:	strdeq	pc, [r1], -r0
   1ee50:	strdeq	pc, [r1], -r0
   1ee54:	strdeq	pc, [r1], -r0
   1ee58:	strdeq	pc, [r1], -r0
   1ee5c:	strdeq	pc, [r1], -r0
   1ee60:	strdeq	pc, [r1], -r0
   1ee64:	strdeq	pc, [r1], -r0
   1ee68:	strdeq	pc, [r1], -r0
   1ee6c:	strdeq	pc, [r1], -r0
   1ee70:	strdeq	pc, [r1], -r0
   1ee74:	strdeq	pc, [r1], -r0
   1ee78:	strdeq	pc, [r1], -r0
   1ee7c:	strdeq	pc, [r1], -r0
   1ee80:	strdeq	pc, [r1], -r0
   1ee84:	strdeq	pc, [r1], -r0
   1ee88:	strdeq	pc, [r1], -r0
   1ee8c:	strdeq	pc, [r1], -r0
   1ee90:	strdeq	pc, [r1], -r0
   1ee94:	strdeq	pc, [r1], -r0
   1ee98:	andeq	lr, r1, r0, lsr #31
   1ee9c:	ldrdeq	lr, [r1], -r0
   1eea0:	ldrdeq	lr, [r1], -ip
   1eea4:	ldr	r0, [fp, #-16]
   1eea8:	and	r0, r0, #2048	; 0x800
   1eeac:	cmp	r0, #0
   1eeb0:	beq	1eecc <__assert_fail@plt+0xd778>
   1eeb4:	ldr	r0, [fp, #-8]
   1eeb8:	ldr	r1, [r0, #4]
   1eebc:	mvn	r2, #255	; 0xff
   1eec0:	and	r1, r1, r2
   1eec4:	orr	r1, r1, #10
   1eec8:	str	r1, [r0, #4]
   1eecc:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1eed0:	ldr	r0, [fp, #-16]
   1eed4:	and	r0, r0, #1024	; 0x400
   1eed8:	cmp	r0, #0
   1eedc:	bne	1ef08 <__assert_fail@plt+0xd7b4>
   1eee0:	ldr	r0, [fp, #-16]
   1eee4:	and	r0, r0, #32768	; 0x8000
   1eee8:	cmp	r0, #0
   1eeec:	beq	1ef08 <__assert_fail@plt+0xd7b4>
   1eef0:	ldr	r0, [fp, #-8]
   1eef4:	ldr	r1, [r0, #4]
   1eef8:	mvn	r2, #255	; 0xff
   1eefc:	and	r1, r1, r2
   1ef00:	orr	r1, r1, #10
   1ef04:	str	r1, [r0, #4]
   1ef08:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1ef0c:	ldr	r0, [fp, #-8]
   1ef10:	ldr	r1, [r0, #4]
   1ef14:	mvn	r2, #255	; 0xff
   1ef18:	and	r1, r1, r2
   1ef1c:	orr	r1, r1, #11
   1ef20:	str	r1, [r0, #4]
   1ef24:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1ef28:	ldr	r0, [fp, #-16]
   1ef2c:	and	r0, r0, #1024	; 0x400
   1ef30:	cmp	r0, #0
   1ef34:	bne	1ef60 <__assert_fail@plt+0xd80c>
   1ef38:	ldr	r0, [fp, #-16]
   1ef3c:	and	r0, r0, #2
   1ef40:	cmp	r0, #0
   1ef44:	bne	1ef60 <__assert_fail@plt+0xd80c>
   1ef48:	ldr	r0, [fp, #-8]
   1ef4c:	ldr	r1, [r0, #4]
   1ef50:	mvn	r2, #255	; 0xff
   1ef54:	and	r1, r1, r2
   1ef58:	orr	r1, r1, #18
   1ef5c:	str	r1, [r0, #4]
   1ef60:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1ef64:	ldr	r0, [fp, #-16]
   1ef68:	and	r0, r0, #1024	; 0x400
   1ef6c:	cmp	r0, #0
   1ef70:	bne	1ef9c <__assert_fail@plt+0xd848>
   1ef74:	ldr	r0, [fp, #-16]
   1ef78:	and	r0, r0, #2
   1ef7c:	cmp	r0, #0
   1ef80:	bne	1ef9c <__assert_fail@plt+0xd848>
   1ef84:	ldr	r0, [fp, #-8]
   1ef88:	ldr	r1, [r0, #4]
   1ef8c:	mvn	r2, #255	; 0xff
   1ef90:	and	r1, r1, r2
   1ef94:	orr	r1, r1, #19
   1ef98:	str	r1, [r0, #4]
   1ef9c:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1efa0:	ldr	r0, [fp, #-16]
   1efa4:	and	r0, r0, #512	; 0x200
   1efa8:	cmp	r0, #0
   1efac:	beq	1efd8 <__assert_fail@plt+0xd884>
   1efb0:	ldr	r0, [fp, #-16]
   1efb4:	and	r0, r0, #4096	; 0x1000
   1efb8:	cmp	r0, #0
   1efbc:	beq	1efd8 <__assert_fail@plt+0xd884>
   1efc0:	ldr	r0, [fp, #-8]
   1efc4:	ldr	r1, [r0, #4]
   1efc8:	mvn	r2, #255	; 0xff
   1efcc:	and	r1, r1, r2
   1efd0:	orr	r1, r1, #23
   1efd4:	str	r1, [r0, #4]
   1efd8:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1efdc:	ldr	r0, [fp, #-16]
   1efe0:	and	r0, r0, #512	; 0x200
   1efe4:	cmp	r0, #0
   1efe8:	beq	1f014 <__assert_fail@plt+0xd8c0>
   1efec:	ldr	r0, [fp, #-16]
   1eff0:	and	r0, r0, #4096	; 0x1000
   1eff4:	cmp	r0, #0
   1eff8:	beq	1f014 <__assert_fail@plt+0xd8c0>
   1effc:	ldr	r0, [fp, #-8]
   1f000:	ldr	r1, [r0, #4]
   1f004:	mvn	r2, #255	; 0xff
   1f008:	and	r1, r1, r2
   1f00c:	orr	r1, r1, #24
   1f010:	str	r1, [r0, #4]
   1f014:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f018:	ldr	r0, [fp, #-16]
   1f01c:	and	r0, r0, #8192	; 0x2000
   1f020:	cmp	r0, #0
   1f024:	beq	1f040 <__assert_fail@plt+0xd8ec>
   1f028:	ldr	r0, [fp, #-8]
   1f02c:	ldr	r1, [r0, #4]
   1f030:	mvn	r2, #255	; 0xff
   1f034:	and	r1, r1, r2
   1f038:	orr	r1, r1, #8
   1f03c:	str	r1, [r0, #4]
   1f040:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f044:	ldr	r0, [fp, #-16]
   1f048:	and	r0, r0, #8192	; 0x2000
   1f04c:	cmp	r0, #0
   1f050:	beq	1f06c <__assert_fail@plt+0xd918>
   1f054:	ldr	r0, [fp, #-8]
   1f058:	ldr	r1, [r0, #4]
   1f05c:	mvn	r2, #255	; 0xff
   1f060:	and	r1, r1, r2
   1f064:	orr	r1, r1, #9
   1f068:	str	r1, [r0, #4]
   1f06c:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f070:	ldr	r0, [fp, #-8]
   1f074:	ldr	r1, [r0, #4]
   1f078:	mvn	r2, #255	; 0xff
   1f07c:	and	r1, r1, r2
   1f080:	orr	r1, r1, #20
   1f084:	str	r1, [r0, #4]
   1f088:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f08c:	ldr	r0, [fp, #-8]
   1f090:	ldr	r1, [r0, #4]
   1f094:	mvn	r2, #255	; 0xff
   1f098:	and	r1, r1, r2
   1f09c:	orr	r1, r1, #5
   1f0a0:	str	r1, [r0, #4]
   1f0a4:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f0a8:	ldr	r0, [pc, #344]	; 1f208 <__assert_fail@plt+0xdab4>
   1f0ac:	ldr	r1, [fp, #-16]
   1f0b0:	and	r0, r1, r0
   1f0b4:	cmp	r0, #0
   1f0b8:	bne	1f114 <__assert_fail@plt+0xd9c0>
   1f0bc:	ldr	r0, [fp, #-12]
   1f0c0:	ldr	r0, [r0, #40]	; 0x28
   1f0c4:	cmp	r0, #0
   1f0c8:	beq	1f114 <__assert_fail@plt+0xd9c0>
   1f0cc:	ldr	r0, [fp, #-12]
   1f0d0:	ldr	r0, [r0, #4]
   1f0d4:	ldr	r1, [fp, #-12]
   1f0d8:	ldr	r1, [r1, #40]	; 0x28
   1f0dc:	mvn	r2, #0
   1f0e0:	add	r1, r1, r2
   1f0e4:	add	r0, r0, r1
   1f0e8:	ldrb	r0, [r0]
   1f0ec:	strb	r0, [fp, #-29]	; 0xffffffe3
   1f0f0:	ldr	r0, [fp, #-16]
   1f0f4:	and	r0, r0, #2048	; 0x800
   1f0f8:	cmp	r0, #0
   1f0fc:	beq	1f10c <__assert_fail@plt+0xd9b8>
   1f100:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1f104:	cmp	r0, #10
   1f108:	beq	1f110 <__assert_fail@plt+0xd9bc>
   1f10c:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f110:	b	1f114 <__assert_fail@plt+0xd9c0>
   1f114:	ldr	r0, [fp, #-8]
   1f118:	ldr	r1, [r0, #4]
   1f11c:	mvn	r2, #255	; 0xff
   1f120:	and	r1, r1, r2
   1f124:	orr	r1, r1, #12
   1f128:	str	r1, [r0, #4]
   1f12c:	ldr	r0, [fp, #-8]
   1f130:	movw	r1, #16
   1f134:	str	r1, [r0]
   1f138:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f13c:	ldr	r0, [fp, #-16]
   1f140:	and	r0, r0, #8
   1f144:	cmp	r0, #0
   1f148:	bne	1f1c8 <__assert_fail@plt+0xda74>
   1f14c:	ldr	r0, [fp, #-12]
   1f150:	ldr	r0, [r0, #40]	; 0x28
   1f154:	add	r0, r0, #1
   1f158:	ldr	r1, [fp, #-12]
   1f15c:	ldr	r1, [r1, #48]	; 0x30
   1f160:	cmp	r0, r1
   1f164:	beq	1f1c8 <__assert_fail@plt+0xda74>
   1f168:	ldr	r0, [fp, #-12]
   1f16c:	ldr	r1, [r0, #40]	; 0x28
   1f170:	add	r1, r1, #1
   1f174:	str	r1, [r0, #40]	; 0x28
   1f178:	ldr	r1, [fp, #-12]
   1f17c:	ldr	r2, [fp, #-16]
   1f180:	add	r0, sp, #40	; 0x28
   1f184:	bl	1e394 <__assert_fail@plt+0xcc40>
   1f188:	ldr	r1, [fp, #-12]
   1f18c:	ldr	r2, [r1, #40]	; 0x28
   1f190:	mvn	lr, #0
   1f194:	add	r2, r2, lr
   1f198:	str	r2, [r1, #40]	; 0x28
   1f19c:	ldr	r1, [sp, #44]	; 0x2c
   1f1a0:	and	r1, r1, #255	; 0xff
   1f1a4:	cmp	r1, #10
   1f1a8:	str	r0, [sp, #4]
   1f1ac:	beq	1f1c4 <__assert_fail@plt+0xda70>
   1f1b0:	ldr	r0, [sp, #44]	; 0x2c
   1f1b4:	and	r0, r0, #255	; 0xff
   1f1b8:	cmp	r0, #9
   1f1bc:	beq	1f1c4 <__assert_fail@plt+0xda70>
   1f1c0:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f1c4:	b	1f1c8 <__assert_fail@plt+0xda74>
   1f1c8:	ldr	r0, [fp, #-8]
   1f1cc:	ldr	r1, [r0, #4]
   1f1d0:	mvn	r2, #255	; 0xff
   1f1d4:	and	r1, r1, r2
   1f1d8:	orr	r1, r1, #12
   1f1dc:	str	r1, [r0, #4]
   1f1e0:	ldr	r0, [fp, #-8]
   1f1e4:	movw	r1, #32
   1f1e8:	str	r1, [r0]
   1f1ec:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f1f0:	b	1f1f4 <__assert_fail@plt+0xdaa0>
   1f1f4:	movw	r0, #1
   1f1f8:	str	r0, [fp, #-4]
   1f1fc:	ldr	r0, [fp, #-4]
   1f200:	mov	sp, fp
   1f204:	pop	{fp, pc}
   1f208:	addeq	r0, r0, r8
   1f20c:	sub	sp, sp, #20
   1f210:	str	r0, [sp, #12]
   1f214:	str	r1, [sp, #8]
   1f218:	ldr	r0, [sp, #12]
   1f21c:	ldrsb	r0, [r0, #75]	; 0x4b
   1f220:	cmp	r0, #0
   1f224:	movw	r0, #0
   1f228:	movne	r0, #1
   1f22c:	mvn	r1, #0
   1f230:	eor	r0, r0, r1
   1f234:	tst	r0, #1
   1f238:	beq	1f264 <__assert_fail@plt+0xdb10>
   1f23c:	ldr	r0, [sp, #12]
   1f240:	ldr	r0, [r0, #4]
   1f244:	ldr	r1, [sp, #12]
   1f248:	ldr	r1, [r1, #40]	; 0x28
   1f24c:	ldr	r2, [sp, #8]
   1f250:	add	r1, r1, r2
   1f254:	add	r0, r0, r1
   1f258:	ldrb	r0, [r0]
   1f25c:	strb	r0, [sp, #19]
   1f260:	b	1f3c0 <__assert_fail@plt+0xdc6c>
   1f264:	ldr	r0, [sp, #12]
   1f268:	ldr	r0, [r0, #80]	; 0x50
   1f26c:	cmp	r0, #1
   1f270:	ble	1f30c <__assert_fail@plt+0xdbb8>
   1f274:	ldr	r0, [sp, #12]
   1f278:	ldr	r1, [r0, #8]
   1f27c:	ldr	r0, [r0, #40]	; 0x28
   1f280:	ldr	r2, [sp, #8]
   1f284:	add	r0, r0, r2
   1f288:	add	r0, r1, r0, lsl #2
   1f28c:	ldr	r0, [r0]
   1f290:	cmn	r0, #1
   1f294:	beq	1f2e4 <__assert_fail@plt+0xdb90>
   1f298:	ldr	r0, [sp, #12]
   1f29c:	ldr	r0, [r0, #28]
   1f2a0:	ldr	r1, [sp, #12]
   1f2a4:	ldr	r1, [r1, #40]	; 0x28
   1f2a8:	ldr	r2, [sp, #8]
   1f2ac:	add	r1, r1, r2
   1f2b0:	add	r1, r1, #1
   1f2b4:	cmp	r0, r1
   1f2b8:	beq	1f30c <__assert_fail@plt+0xdbb8>
   1f2bc:	ldr	r0, [sp, #12]
   1f2c0:	ldr	r1, [r0, #8]
   1f2c4:	ldr	r0, [r0, #40]	; 0x28
   1f2c8:	ldr	r2, [sp, #8]
   1f2cc:	add	r0, r0, r2
   1f2d0:	add	r0, r0, #1
   1f2d4:	add	r0, r1, r0, lsl #2
   1f2d8:	ldr	r0, [r0]
   1f2dc:	cmn	r0, #1
   1f2e0:	bne	1f30c <__assert_fail@plt+0xdbb8>
   1f2e4:	ldr	r0, [sp, #12]
   1f2e8:	ldr	r0, [r0, #4]
   1f2ec:	ldr	r1, [sp, #12]
   1f2f0:	ldr	r1, [r1, #40]	; 0x28
   1f2f4:	ldr	r2, [sp, #8]
   1f2f8:	add	r1, r1, r2
   1f2fc:	add	r0, r0, r1
   1f300:	ldrb	r0, [r0]
   1f304:	strb	r0, [sp, #19]
   1f308:	b	1f3c0 <__assert_fail@plt+0xdc6c>
   1f30c:	ldr	r0, [sp, #12]
   1f310:	ldr	r0, [r0, #40]	; 0x28
   1f314:	ldr	r1, [sp, #8]
   1f318:	add	r0, r0, r1
   1f31c:	str	r0, [sp]
   1f320:	ldr	r0, [sp, #12]
   1f324:	ldrsb	r0, [r0, #76]	; 0x4c
   1f328:	cmp	r0, #0
   1f32c:	beq	1f348 <__assert_fail@plt+0xdbf4>
   1f330:	ldr	r0, [sp, #12]
   1f334:	ldr	r0, [r0, #12]
   1f338:	ldr	r1, [sp]
   1f33c:	add	r0, r0, r1, lsl #2
   1f340:	ldr	r0, [r0]
   1f344:	str	r0, [sp]
   1f348:	ldr	r0, [sp, #12]
   1f34c:	ldr	r0, [r0]
   1f350:	ldr	r1, [sp, #12]
   1f354:	ldr	r1, [r1, #24]
   1f358:	ldr	r2, [sp]
   1f35c:	add	r1, r1, r2
   1f360:	add	r0, r0, r1
   1f364:	ldrb	r0, [r0]
   1f368:	str	r0, [sp, #4]
   1f36c:	ldr	r0, [sp, #12]
   1f370:	ldrb	r0, [r0, #76]	; 0x4c
   1f374:	cmp	r0, #0
   1f378:	beq	1f3b8 <__assert_fail@plt+0xdc64>
   1f37c:	ldr	r0, [sp, #4]
   1f380:	mvn	r1, #127	; 0x7f
   1f384:	and	r0, r0, r1
   1f388:	cmp	r0, #0
   1f38c:	beq	1f3b8 <__assert_fail@plt+0xdc64>
   1f390:	ldr	r0, [sp, #12]
   1f394:	ldr	r0, [r0, #4]
   1f398:	ldr	r1, [sp, #12]
   1f39c:	ldr	r1, [r1, #40]	; 0x28
   1f3a0:	ldr	r2, [sp, #8]
   1f3a4:	add	r1, r1, r2
   1f3a8:	add	r0, r0, r1
   1f3ac:	ldrb	r0, [r0]
   1f3b0:	strb	r0, [sp, #19]
   1f3b4:	b	1f3c0 <__assert_fail@plt+0xdc6c>
   1f3b8:	ldr	r0, [sp, #4]
   1f3bc:	strb	r0, [sp, #19]
   1f3c0:	ldrb	r0, [sp, #19]
   1f3c4:	add	sp, sp, #20
   1f3c8:	bx	lr
   1f3cc:	sub	sp, sp, #12
   1f3d0:	str	r0, [sp, #4]
   1f3d4:	str	r1, [sp]
   1f3d8:	ldr	r0, [sp, #4]
   1f3dc:	ldr	r0, [r0, #80]	; 0x50
   1f3e0:	cmp	r0, #1
   1f3e4:	bne	1f404 <__assert_fail@plt+0xdcb0>
   1f3e8:	ldr	r0, [sp, #4]
   1f3ec:	ldr	r0, [r0, #4]
   1f3f0:	ldr	r1, [sp]
   1f3f4:	add	r0, r0, r1
   1f3f8:	ldrb	r0, [r0]
   1f3fc:	str	r0, [sp, #8]
   1f400:	b	1f41c <__assert_fail@plt+0xdcc8>
   1f404:	ldr	r0, [sp, #4]
   1f408:	ldr	r0, [r0, #8]
   1f40c:	ldr	r1, [sp]
   1f410:	add	r0, r0, r1, lsl #2
   1f414:	ldr	r0, [r0]
   1f418:	str	r0, [sp, #8]
   1f41c:	ldr	r0, [sp, #8]
   1f420:	add	sp, sp, #12
   1f424:	bx	lr
   1f428:	push	{r4, r5, fp, lr}
   1f42c:	add	fp, sp, #8
   1f430:	sub	sp, sp, #80	; 0x50
   1f434:	ldr	ip, [fp, #12]
   1f438:	ldr	lr, [fp, #8]
   1f43c:	str	r0, [fp, #-16]
   1f440:	str	r1, [fp, #-20]	; 0xffffffec
   1f444:	str	r2, [fp, #-24]	; 0xffffffe8
   1f448:	str	r3, [fp, #-28]	; 0xffffffe4
   1f44c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f450:	ldr	r0, [r0]
   1f454:	str	r0, [fp, #-40]	; 0xffffffd8
   1f458:	ldr	r0, [fp, #-16]
   1f45c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f464:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f468:	ldr	r4, [fp, #8]
   1f46c:	ldr	r5, [fp, #12]
   1f470:	str	r4, [sp]
   1f474:	str	r5, [sp, #4]
   1f478:	str	lr, [sp, #40]	; 0x28
   1f47c:	str	ip, [sp, #36]	; 0x24
   1f480:	bl	1f858 <__assert_fail@plt+0xe104>
   1f484:	str	r0, [fp, #-32]	; 0xffffffe0
   1f488:	ldr	r0, [fp, #12]
   1f48c:	ldr	r0, [r0]
   1f490:	cmp	r0, #0
   1f494:	movw	r0, #0
   1f498:	str	r0, [sp, #32]
   1f49c:	beq	1f4b8 <__assert_fail@plt+0xdd64>
   1f4a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f4a4:	movw	r1, #0
   1f4a8:	cmp	r0, r1
   1f4ac:	movw	r0, #0
   1f4b0:	moveq	r0, #1
   1f4b4:	str	r0, [sp, #32]
   1f4b8:	ldr	r0, [sp, #32]
   1f4bc:	tst	r0, #1
   1f4c0:	beq	1f4d0 <__assert_fail@plt+0xdd7c>
   1f4c4:	movw	r0, #0
   1f4c8:	str	r0, [fp, #-12]
   1f4cc:	b	1f6b0 <__assert_fail@plt+0xdf5c>
   1f4d0:	b	1f4d4 <__assert_fail@plt+0xdd80>
   1f4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4d8:	ldr	r0, [r0, #4]
   1f4dc:	and	r0, r0, #255	; 0xff
   1f4e0:	cmp	r0, #10
   1f4e4:	movw	r0, #0
   1f4e8:	str	r0, [sp, #28]
   1f4ec:	beq	1f544 <__assert_fail@plt+0xddf0>
   1f4f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4f4:	ldr	r0, [r0, #4]
   1f4f8:	and	r0, r0, #255	; 0xff
   1f4fc:	cmp	r0, #2
   1f500:	movw	r0, #0
   1f504:	str	r0, [sp, #28]
   1f508:	beq	1f544 <__assert_fail@plt+0xddf0>
   1f50c:	ldr	r0, [fp, #8]
   1f510:	cmp	r0, #0
   1f514:	movw	r0, #1
   1f518:	str	r0, [sp, #24]
   1f51c:	beq	1f53c <__assert_fail@plt+0xdde8>
   1f520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f524:	ldr	r0, [r0, #4]
   1f528:	and	r0, r0, #255	; 0xff
   1f52c:	cmp	r0, #9
   1f530:	movw	r0, #0
   1f534:	movne	r0, #1
   1f538:	str	r0, [sp, #24]
   1f53c:	ldr	r0, [sp, #24]
   1f540:	str	r0, [sp, #28]
   1f544:	ldr	r0, [sp, #28]
   1f548:	tst	r0, #1
   1f54c:	beq	1f6a8 <__assert_fail@plt+0xdf54>
   1f550:	ldr	r0, [fp, #-16]
   1f554:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f55c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f560:	ldr	ip, [fp, #8]
   1f564:	ldr	lr, [fp, #12]
   1f568:	str	ip, [sp]
   1f56c:	str	lr, [sp, #4]
   1f570:	bl	1f858 <__assert_fail@plt+0xe104>
   1f574:	str	r0, [fp, #-36]	; 0xffffffdc
   1f578:	ldr	r0, [fp, #12]
   1f57c:	ldr	r0, [r0]
   1f580:	cmp	r0, #0
   1f584:	movw	r0, #0
   1f588:	str	r0, [sp, #20]
   1f58c:	beq	1f5a8 <__assert_fail@plt+0xde54>
   1f590:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f594:	movw	r1, #0
   1f598:	cmp	r0, r1
   1f59c:	movw	r0, #0
   1f5a0:	moveq	r0, #1
   1f5a4:	str	r0, [sp, #20]
   1f5a8:	ldr	r0, [sp, #20]
   1f5ac:	tst	r0, #1
   1f5b0:	beq	1f5e8 <__assert_fail@plt+0xde94>
   1f5b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f5b8:	movw	r1, #0
   1f5bc:	cmp	r0, r1
   1f5c0:	beq	1f5dc <__assert_fail@plt+0xde88>
   1f5c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f5c8:	movw	r1, #63532	; 0xf82c
   1f5cc:	movt	r1, #1
   1f5d0:	movw	r2, #0
   1f5d4:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1f5d8:	str	r0, [sp, #16]
   1f5dc:	movw	r0, #0
   1f5e0:	str	r0, [fp, #-12]
   1f5e4:	b	1f6b0 <__assert_fail@plt+0xdf5c>
   1f5e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f5ec:	movw	r1, #0
   1f5f0:	cmp	r0, r1
   1f5f4:	beq	1f688 <__assert_fail@plt+0xdf34>
   1f5f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f5fc:	movw	r1, #0
   1f600:	cmp	r0, r1
   1f604:	beq	1f688 <__assert_fail@plt+0xdf34>
   1f608:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f60c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f610:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f614:	movw	r3, #16
   1f618:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1f61c:	str	r0, [sp, #44]	; 0x2c
   1f620:	ldr	r0, [sp, #44]	; 0x2c
   1f624:	movw	r1, #0
   1f628:	cmp	r0, r1
   1f62c:	bne	1f67c <__assert_fail@plt+0xdf28>
   1f630:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f634:	movw	r1, #63532	; 0xf82c
   1f638:	movt	r1, #1
   1f63c:	movw	r2, #0
   1f640:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1f644:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f648:	str	r0, [sp, #12]
   1f64c:	mov	r0, r1
   1f650:	movw	r1, #63532	; 0xf82c
   1f654:	movt	r1, #1
   1f658:	movw	r2, #0
   1f65c:	bl	1f6bc <__assert_fail@plt+0xdf68>
   1f660:	ldr	r1, [fp, #12]
   1f664:	movw	r2, #12
   1f668:	str	r2, [r1]
   1f66c:	movw	r1, #0
   1f670:	str	r1, [fp, #-12]
   1f674:	str	r0, [sp, #8]
   1f678:	b	1f6b0 <__assert_fail@plt+0xdf5c>
   1f67c:	ldr	r0, [sp, #44]	; 0x2c
   1f680:	str	r0, [fp, #-32]	; 0xffffffe0
   1f684:	b	1f6a4 <__assert_fail@plt+0xdf50>
   1f688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f68c:	movw	r1, #0
   1f690:	cmp	r0, r1
   1f694:	bne	1f6a0 <__assert_fail@plt+0xdf4c>
   1f698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f69c:	str	r0, [fp, #-32]	; 0xffffffe0
   1f6a0:	b	1f6a4 <__assert_fail@plt+0xdf50>
   1f6a4:	b	1f4d4 <__assert_fail@plt+0xdd80>
   1f6a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f6ac:	str	r0, [fp, #-12]
   1f6b0:	ldr	r0, [fp, #-12]
   1f6b4:	sub	sp, fp, #8
   1f6b8:	pop	{r4, r5, fp, pc}
   1f6bc:	push	{fp, lr}
   1f6c0:	mov	fp, sp
   1f6c4:	sub	sp, sp, #40	; 0x28
   1f6c8:	str	r0, [fp, #-8]
   1f6cc:	str	r1, [fp, #-12]
   1f6d0:	str	r2, [fp, #-16]
   1f6d4:	ldr	r0, [fp, #-8]
   1f6d8:	str	r0, [sp, #20]
   1f6dc:	b	1f6e0 <__assert_fail@plt+0xdf8c>
   1f6e0:	ldr	r0, [sp, #20]
   1f6e4:	ldr	r0, [r0, #4]
   1f6e8:	movw	r1, #0
   1f6ec:	cmp	r0, r1
   1f6f0:	movw	r0, #1
   1f6f4:	str	r0, [sp, #8]
   1f6f8:	bne	1f718 <__assert_fail@plt+0xdfc4>
   1f6fc:	ldr	r0, [sp, #20]
   1f700:	ldr	r0, [r0, #8]
   1f704:	movw	r1, #0
   1f708:	cmp	r0, r1
   1f70c:	movw	r0, #0
   1f710:	movne	r0, #1
   1f714:	str	r0, [sp, #8]
   1f718:	ldr	r0, [sp, #8]
   1f71c:	tst	r0, #1
   1f720:	beq	1f758 <__assert_fail@plt+0xe004>
   1f724:	ldr	r0, [sp, #20]
   1f728:	ldr	r0, [r0, #4]
   1f72c:	movw	r1, #0
   1f730:	cmp	r0, r1
   1f734:	beq	1f748 <__assert_fail@plt+0xdff4>
   1f738:	ldr	r0, [sp, #20]
   1f73c:	ldr	r0, [r0, #4]
   1f740:	str	r0, [sp, #20]
   1f744:	b	1f754 <__assert_fail@plt+0xe000>
   1f748:	ldr	r0, [sp, #20]
   1f74c:	ldr	r0, [r0, #8]
   1f750:	str	r0, [sp, #20]
   1f754:	b	1f6e0 <__assert_fail@plt+0xdf8c>
   1f758:	b	1f75c <__assert_fail@plt+0xe008>
   1f75c:	ldr	r0, [fp, #-12]
   1f760:	ldr	r1, [fp, #-16]
   1f764:	ldr	r2, [sp, #20]
   1f768:	str	r0, [sp, #4]
   1f76c:	mov	r0, r1
   1f770:	mov	r1, r2
   1f774:	ldr	r2, [sp, #4]
   1f778:	blx	r2
   1f77c:	str	r0, [sp, #12]
   1f780:	ldr	r0, [sp, #12]
   1f784:	cmp	r0, #0
   1f788:	beq	1f798 <__assert_fail@plt+0xe044>
   1f78c:	ldr	r0, [sp, #12]
   1f790:	str	r0, [fp, #-4]
   1f794:	b	1f820 <__assert_fail@plt+0xe0cc>
   1f798:	ldr	r0, [sp, #20]
   1f79c:	ldr	r0, [r0]
   1f7a0:	movw	r1, #0
   1f7a4:	cmp	r0, r1
   1f7a8:	bne	1f7b8 <__assert_fail@plt+0xe064>
   1f7ac:	movw	r0, #0
   1f7b0:	str	r0, [fp, #-4]
   1f7b4:	b	1f820 <__assert_fail@plt+0xe0cc>
   1f7b8:	ldr	r0, [sp, #20]
   1f7bc:	str	r0, [sp, #16]
   1f7c0:	ldr	r0, [sp, #20]
   1f7c4:	ldr	r0, [r0]
   1f7c8:	str	r0, [sp, #20]
   1f7cc:	ldr	r0, [sp, #20]
   1f7d0:	ldr	r0, [r0, #8]
   1f7d4:	ldr	r1, [sp, #16]
   1f7d8:	cmp	r0, r1
   1f7dc:	movw	r0, #1
   1f7e0:	str	r0, [sp]
   1f7e4:	beq	1f804 <__assert_fail@plt+0xe0b0>
   1f7e8:	ldr	r0, [sp, #20]
   1f7ec:	ldr	r0, [r0, #8]
   1f7f0:	movw	r1, #0
   1f7f4:	cmp	r0, r1
   1f7f8:	movw	r0, #0
   1f7fc:	moveq	r0, #1
   1f800:	str	r0, [sp]
   1f804:	ldr	r0, [sp]
   1f808:	tst	r0, #1
   1f80c:	bne	1f75c <__assert_fail@plt+0xe008>
   1f810:	ldr	r0, [sp, #20]
   1f814:	ldr	r0, [r0, #8]
   1f818:	str	r0, [sp, #20]
   1f81c:	b	1f6dc <__assert_fail@plt+0xdf88>
   1f820:	ldr	r0, [fp, #-4]
   1f824:	mov	sp, fp
   1f828:	pop	{fp, pc}
   1f82c:	push	{fp, lr}
   1f830:	mov	fp, sp
   1f834:	sub	sp, sp, #8
   1f838:	str	r0, [sp, #4]
   1f83c:	str	r1, [sp]
   1f840:	ldr	r0, [sp]
   1f844:	add	r0, r0, #20
   1f848:	bl	1b7c0 <__assert_fail@plt+0xa06c>
   1f84c:	movw	r0, #0
   1f850:	mov	sp, fp
   1f854:	pop	{fp, pc}
   1f858:	push	{fp, lr}
   1f85c:	mov	fp, sp
   1f860:	sub	sp, sp, #168	; 0xa8
   1f864:	ldr	ip, [fp, #12]
   1f868:	ldr	lr, [fp, #8]
   1f86c:	str	r0, [fp, #-8]
   1f870:	str	r1, [fp, #-12]
   1f874:	str	r2, [fp, #-16]
   1f878:	str	r3, [fp, #-20]	; 0xffffffec
   1f87c:	ldr	r0, [fp, #-12]
   1f880:	ldr	r0, [r0]
   1f884:	str	r0, [fp, #-24]	; 0xffffffe8
   1f888:	ldr	r0, [fp, #-16]
   1f88c:	ldrb	r0, [r0, #4]
   1f890:	sub	r0, r0, #1
   1f894:	cmp	r0, #35	; 0x23
   1f898:	str	lr, [fp, #-48]	; 0xffffffd0
   1f89c:	str	ip, [fp, #-52]	; 0xffffffcc
   1f8a0:	str	r0, [fp, #-56]	; 0xffffffc8
   1f8a4:	bhi	2018c <__assert_fail@plt+0xea38>
   1f8a8:	add	r0, pc, #8
   1f8ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f8b0:	ldr	r0, [r0, r1, lsl #2]
   1f8b4:	mov	pc, r0
   1f8b8:	andeq	pc, r1, r8, asr #18
   1f8bc:	andeq	r0, r2, r8, ror #2
   1f8c0:	andeq	r0, r2, ip, lsl #3
   1f8c4:	andeq	pc, r1, r8, lsr #23
   1f8c8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1f8cc:	andeq	r0, r2, ip, lsl #3
   1f8d0:	andeq	r0, r2, ip, lsl #3
   1f8d4:	andeq	pc, r1, r4, asr #21
   1f8d8:	andeq	pc, r1, ip, lsl sp	; <UNPREDICTABLE>
   1f8dc:	andeq	r0, r2, r8, ror #2
   1f8e0:	andeq	pc, r1, r0, lsr #25
   1f8e4:			; <UNDEFINED> instruction: 0x0001fdbc
   1f8e8:	andeq	r0, r2, ip, lsl #3
   1f8ec:	andeq	r0, r2, ip, lsl #3
   1f8f0:	andeq	r0, r2, ip, lsl #3
   1f8f4:	andeq	r0, r2, ip, lsl #3
   1f8f8:	andeq	r0, r2, ip, lsl #3
   1f8fc:	andeq	pc, r1, r0, lsr #25
   1f900:	andeq	pc, r1, r0, lsr #25
   1f904:	andeq	pc, r1, ip, lsr fp	; <UNPREDICTABLE>
   1f908:	andeq	r0, r2, ip, lsl #3
   1f90c:	andeq	r0, r2, ip, lsl #3
   1f910:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1f914:	andeq	pc, r1, ip, asr sp	; <UNPREDICTABLE>
   1f918:	andeq	r0, r2, ip, lsl #3
   1f91c:	andeq	r0, r2, ip, lsl #3
   1f920:	andeq	r0, r2, ip, lsl #3
   1f924:	andeq	r0, r2, ip, lsl #3
   1f928:	andeq	r0, r2, ip, lsl #3
   1f92c:	andeq	r0, r2, ip, lsl #3
   1f930:	andeq	r0, r2, ip, lsl #3
   1f934:	andeq	r0, r2, r8
   1f938:	andeq	r0, r2, r8
   1f93c:	strheq	r0, [r2], -r8
   1f940:	strheq	r0, [r2], -r8
   1f944:	andeq	r0, r2, r4, ror r1
   1f948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f94c:	ldr	r3, [fp, #-16]
   1f950:	movw	r1, #0
   1f954:	str	r1, [fp, #-60]	; 0xffffffc4
   1f958:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f95c:	bl	20348 <__assert_fail@plt+0xebf4>
   1f960:	str	r0, [fp, #-28]	; 0xffffffe4
   1f964:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f968:	movw	r1, #0
   1f96c:	cmp	r0, r1
   1f970:	bne	1f98c <__assert_fail@plt+0xe238>
   1f974:	ldr	r0, [fp, #12]
   1f978:	movw	r1, #12
   1f97c:	str	r1, [r0]
   1f980:	movw	r0, #0
   1f984:	str	r0, [fp, #-4]
   1f988:	b	2033c <__assert_fail@plt+0xebe8>
   1f98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f990:	ldr	r0, [r0, #92]	; 0x5c
   1f994:	cmp	r0, #1
   1f998:	ble	1fac0 <__assert_fail@plt+0xe36c>
   1f99c:	b	1f9a0 <__assert_fail@plt+0xe24c>
   1f9a0:	ldr	r0, [fp, #-8]
   1f9a4:	ldr	r0, [r0, #56]	; 0x38
   1f9a8:	ldr	r1, [fp, #-8]
   1f9ac:	ldr	r1, [r1, #40]	; 0x28
   1f9b0:	cmp	r0, r1
   1f9b4:	movw	r0, #0
   1f9b8:	str	r0, [fp, #-64]	; 0xffffffc0
   1f9bc:	ble	1fa14 <__assert_fail@plt+0xe2c0>
   1f9c0:	ldr	r0, [fp, #-8]
   1f9c4:	ldr	r0, [r0, #40]	; 0x28
   1f9c8:	ldr	r1, [fp, #-8]
   1f9cc:	ldr	r1, [r1, #28]
   1f9d0:	cmp	r0, r1
   1f9d4:	movw	r0, #1
   1f9d8:	str	r0, [fp, #-68]	; 0xffffffbc
   1f9dc:	beq	1fa04 <__assert_fail@plt+0xe2b0>
   1f9e0:	ldr	r0, [fp, #-8]
   1f9e4:	ldr	r1, [r0, #8]
   1f9e8:	ldr	r0, [r0, #40]	; 0x28
   1f9ec:	add	r0, r1, r0, lsl #2
   1f9f0:	ldr	r0, [r0]
   1f9f4:	cmn	r0, #1
   1f9f8:	movw	r0, #0
   1f9fc:	movne	r0, #1
   1fa00:	str	r0, [fp, #-68]	; 0xffffffbc
   1fa04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1fa08:	mvn	r1, #0
   1fa0c:	eor	r0, r0, r1
   1fa10:	str	r0, [fp, #-64]	; 0xffffffc0
   1fa14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1fa18:	tst	r0, #1
   1fa1c:	beq	1fabc <__assert_fail@plt+0xe368>
   1fa20:	ldr	r0, [fp, #-16]
   1fa24:	ldr	r1, [fp, #-8]
   1fa28:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fa2c:	bl	1e020 <__assert_fail@plt+0xc8cc>
   1fa30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa34:	ldr	r3, [fp, #-16]
   1fa38:	movw	r1, #0
   1fa3c:	str	r1, [fp, #-72]	; 0xffffffb8
   1fa40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1fa44:	bl	20348 <__assert_fail@plt+0xebf4>
   1fa48:	str	r0, [fp, #-32]	; 0xffffffe0
   1fa4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fa54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa58:	movw	r3, #16
   1fa5c:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1fa60:	str	r0, [fp, #-28]	; 0xffffffe4
   1fa64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fa68:	movw	r1, #0
   1fa6c:	cmp	r0, r1
   1fa70:	movw	r0, #1
   1fa74:	str	r0, [fp, #-76]	; 0xffffffb4
   1fa78:	beq	1fa94 <__assert_fail@plt+0xe340>
   1fa7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fa80:	movw	r1, #0
   1fa84:	cmp	r0, r1
   1fa88:	movw	r0, #0
   1fa8c:	moveq	r0, #1
   1fa90:	str	r0, [fp, #-76]	; 0xffffffb4
   1fa94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1fa98:	tst	r0, #1
   1fa9c:	beq	1fab8 <__assert_fail@plt+0xe364>
   1faa0:	ldr	r0, [fp, #12]
   1faa4:	movw	r1, #12
   1faa8:	str	r1, [r0]
   1faac:	movw	r0, #0
   1fab0:	str	r0, [fp, #-4]
   1fab4:	b	2033c <__assert_fail@plt+0xebe8>
   1fab8:	b	1f9a0 <__assert_fail@plt+0xe24c>
   1fabc:	b	1fac0 <__assert_fail@plt+0xe36c>
   1fac0:	b	2018c <__assert_fail@plt+0xea38>
   1fac4:	ldr	r0, [fp, #-8]
   1fac8:	ldr	r1, [fp, #-12]
   1facc:	ldr	r2, [fp, #-16]
   1fad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fad4:	ldr	ip, [fp, #8]
   1fad8:	add	ip, ip, #1
   1fadc:	ldr	lr, [fp, #12]
   1fae0:	str	ip, [sp]
   1fae4:	str	lr, [sp, #4]
   1fae8:	bl	204ac <__assert_fail@plt+0xed58>
   1faec:	str	r0, [fp, #-28]	; 0xffffffe4
   1faf0:	ldr	r0, [fp, #12]
   1faf4:	ldr	r0, [r0]
   1faf8:	cmp	r0, #0
   1fafc:	movw	r0, #0
   1fb00:	str	r0, [fp, #-80]	; 0xffffffb0
   1fb04:	beq	1fb20 <__assert_fail@plt+0xe3cc>
   1fb08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb0c:	movw	r1, #0
   1fb10:	cmp	r0, r1
   1fb14:	movw	r0, #0
   1fb18:	moveq	r0, #1
   1fb1c:	str	r0, [fp, #-80]	; 0xffffffb0
   1fb20:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1fb24:	tst	r0, #1
   1fb28:	beq	1fb38 <__assert_fail@plt+0xe3e4>
   1fb2c:	movw	r0, #0
   1fb30:	str	r0, [fp, #-4]
   1fb34:	b	2033c <__assert_fail@plt+0xebe8>
   1fb38:	b	2018c <__assert_fail@plt+0xea38>
   1fb3c:	ldr	r0, [fp, #-8]
   1fb40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb44:	ldr	r2, [fp, #-16]
   1fb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb4c:	ldr	ip, [fp, #12]
   1fb50:	str	ip, [sp]
   1fb54:	bl	20670 <__assert_fail@plt+0xef1c>
   1fb58:	str	r0, [fp, #-28]	; 0xffffffe4
   1fb5c:	ldr	r0, [fp, #12]
   1fb60:	ldr	r0, [r0]
   1fb64:	cmp	r0, #0
   1fb68:	movw	r0, #0
   1fb6c:	str	r0, [sp, #84]	; 0x54
   1fb70:	beq	1fb8c <__assert_fail@plt+0xe438>
   1fb74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb78:	movw	r1, #0
   1fb7c:	cmp	r0, r1
   1fb80:	movw	r0, #0
   1fb84:	moveq	r0, #1
   1fb88:	str	r0, [sp, #84]	; 0x54
   1fb8c:	ldr	r0, [sp, #84]	; 0x54
   1fb90:	tst	r0, #1
   1fb94:	beq	1fba4 <__assert_fail@plt+0xe450>
   1fb98:	movw	r0, #0
   1fb9c:	str	r0, [fp, #-4]
   1fba0:	b	2033c <__assert_fail@plt+0xebe8>
   1fba4:	b	2018c <__assert_fail@plt+0xea38>
   1fba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fbac:	ldr	r0, [r0, #84]	; 0x54
   1fbb0:	ldr	r1, [fp, #-16]
   1fbb4:	ldr	r1, [r1]
   1fbb8:	movw	r2, #1
   1fbbc:	lsl	r1, r2, r1
   1fbc0:	and	r0, r0, r1
   1fbc4:	cmp	r0, #0
   1fbc8:	bne	1fbe4 <__assert_fail@plt+0xe490>
   1fbcc:	ldr	r0, [fp, #12]
   1fbd0:	movw	r1, #6
   1fbd4:	str	r1, [r0]
   1fbd8:	movw	r0, #0
   1fbdc:	str	r0, [fp, #-4]
   1fbe0:	b	2033c <__assert_fail@plt+0xebe8>
   1fbe4:	ldr	r0, [fp, #-16]
   1fbe8:	ldr	r0, [r0]
   1fbec:	movw	r1, #1
   1fbf0:	lsl	r0, r1, r0
   1fbf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fbf8:	ldr	r2, [r1, #80]	; 0x50
   1fbfc:	orr	r0, r2, r0
   1fc00:	str	r0, [r1, #80]	; 0x50
   1fc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc08:	ldr	r3, [fp, #-16]
   1fc0c:	movw	r1, #0
   1fc10:	str	r1, [sp, #80]	; 0x50
   1fc14:	ldr	r2, [sp, #80]	; 0x50
   1fc18:	bl	20348 <__assert_fail@plt+0xebf4>
   1fc1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc24:	movw	r1, #0
   1fc28:	cmp	r0, r1
   1fc2c:	bne	1fc48 <__assert_fail@plt+0xe4f4>
   1fc30:	ldr	r0, [fp, #12]
   1fc34:	movw	r1, #12
   1fc38:	str	r1, [r0]
   1fc3c:	movw	r0, #0
   1fc40:	str	r0, [fp, #-4]
   1fc44:	b	2033c <__assert_fail@plt+0xebe8>
   1fc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc4c:	ldr	r1, [r0, #76]	; 0x4c
   1fc50:	add	r1, r1, #1
   1fc54:	str	r1, [r0, #76]	; 0x4c
   1fc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc5c:	ldrb	r1, [r0, #88]	; 0x58
   1fc60:	bic	r1, r1, #2
   1fc64:	movw	r2, #2
   1fc68:	orr	r1, r1, r2
   1fc6c:	strb	r1, [r0, #88]	; 0x58
   1fc70:	b	2018c <__assert_fail@plt+0xea38>
   1fc74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc78:	and	r0, r0, #16777216	; 0x1000000
   1fc7c:	cmp	r0, #0
   1fc80:	beq	1fc9c <__assert_fail@plt+0xe548>
   1fc84:	ldr	r0, [fp, #12]
   1fc88:	movw	r1, #13
   1fc8c:	str	r1, [r0]
   1fc90:	movw	r0, #0
   1fc94:	str	r0, [fp, #-4]
   1fc98:	b	2033c <__assert_fail@plt+0xebe8>
   1fc9c:	b	1fca0 <__assert_fail@plt+0xe54c>
   1fca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fca4:	and	r0, r0, #32
   1fca8:	cmp	r0, #0
   1fcac:	beq	1fcc8 <__assert_fail@plt+0xe574>
   1fcb0:	ldr	r0, [fp, #12]
   1fcb4:	movw	r1, #13
   1fcb8:	str	r1, [r0]
   1fcbc:	movw	r0, #0
   1fcc0:	str	r0, [fp, #-4]
   1fcc4:	b	2033c <__assert_fail@plt+0xebe8>
   1fcc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fccc:	and	r0, r0, #16
   1fcd0:	cmp	r0, #0
   1fcd4:	beq	1fd14 <__assert_fail@plt+0xe5c0>
   1fcd8:	ldr	r0, [fp, #-16]
   1fcdc:	ldr	r1, [fp, #-8]
   1fce0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fce4:	bl	1e020 <__assert_fail@plt+0xc8cc>
   1fce8:	ldr	r0, [fp, #-8]
   1fcec:	ldr	r1, [fp, #-12]
   1fcf0:	ldr	r2, [fp, #-16]
   1fcf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fcf8:	ldr	lr, [fp, #8]
   1fcfc:	ldr	ip, [fp, #12]
   1fd00:	str	lr, [sp]
   1fd04:	str	ip, [sp, #4]
   1fd08:	bl	1f858 <__assert_fail@plt+0xe104>
   1fd0c:	str	r0, [fp, #-4]
   1fd10:	b	2033c <__assert_fail@plt+0xebe8>
   1fd14:	b	1fd18 <__assert_fail@plt+0xe5c4>
   1fd18:	b	1fd1c <__assert_fail@plt+0xe5c8>
   1fd1c:	ldr	r0, [fp, #-16]
   1fd20:	ldr	r0, [r0, #4]
   1fd24:	and	r0, r0, #255	; 0xff
   1fd28:	cmp	r0, #9
   1fd2c:	bne	1fd58 <__assert_fail@plt+0xe604>
   1fd30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd34:	and	r0, r0, #131072	; 0x20000
   1fd38:	cmp	r0, #0
   1fd3c:	bne	1fd58 <__assert_fail@plt+0xe604>
   1fd40:	ldr	r0, [fp, #12]
   1fd44:	movw	r1, #16
   1fd48:	str	r1, [r0]
   1fd4c:	movw	r0, #0
   1fd50:	str	r0, [fp, #-4]
   1fd54:	b	2033c <__assert_fail@plt+0xebe8>
   1fd58:	b	1fd5c <__assert_fail@plt+0xe608>
   1fd5c:	ldr	r0, [fp, #-16]
   1fd60:	ldr	r1, [r0, #4]
   1fd64:	mvn	r2, #255	; 0xff
   1fd68:	and	r1, r1, r2
   1fd6c:	orr	r1, r1, #1
   1fd70:	str	r1, [r0, #4]
   1fd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd78:	ldr	r3, [fp, #-16]
   1fd7c:	movw	r1, #0
   1fd80:	str	r1, [sp, #76]	; 0x4c
   1fd84:	ldr	r2, [sp, #76]	; 0x4c
   1fd88:	bl	20348 <__assert_fail@plt+0xebf4>
   1fd8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fd90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd94:	movw	r1, #0
   1fd98:	cmp	r0, r1
   1fd9c:	bne	1fdb8 <__assert_fail@plt+0xe664>
   1fda0:	ldr	r0, [fp, #12]
   1fda4:	movw	r1, #12
   1fda8:	str	r1, [r0]
   1fdac:	movw	r0, #0
   1fdb0:	str	r0, [fp, #-4]
   1fdb4:	b	2033c <__assert_fail@plt+0xebe8>
   1fdb8:	b	2018c <__assert_fail@plt+0xea38>
   1fdbc:	ldr	r0, [fp, #-16]
   1fdc0:	ldr	r0, [r0]
   1fdc4:	movw	r1, #783	; 0x30f
   1fdc8:	and	r0, r0, r1
   1fdcc:	cmp	r0, #0
   1fdd0:	beq	1fdf4 <__assert_fail@plt+0xe6a0>
   1fdd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fdd8:	ldrb	r0, [r0, #88]	; 0x58
   1fddc:	ubfx	r0, r0, #4, #1
   1fde0:	and	r0, r0, #255	; 0xff
   1fde4:	cmp	r0, #0
   1fde8:	bne	1fdf4 <__assert_fail@plt+0xe6a0>
   1fdec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fdf0:	bl	20fa0 <__assert_fail@plt+0xf84c>
   1fdf4:	ldr	r0, [fp, #-16]
   1fdf8:	ldr	r0, [r0]
   1fdfc:	cmp	r0, #256	; 0x100
   1fe00:	beq	1fe14 <__assert_fail@plt+0xe6c0>
   1fe04:	ldr	r0, [fp, #-16]
   1fe08:	ldr	r0, [r0]
   1fe0c:	cmp	r0, #512	; 0x200
   1fe10:	bne	1ff34 <__assert_fail@plt+0xe7e0>
   1fe14:	ldr	r0, [fp, #-16]
   1fe18:	ldr	r0, [r0]
   1fe1c:	cmp	r0, #256	; 0x100
   1fe20:	bne	1fe5c <__assert_fail@plt+0xe708>
   1fe24:	ldr	r0, [fp, #-16]
   1fe28:	movw	r1, #6
   1fe2c:	str	r1, [r0]
   1fe30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe34:	ldr	r3, [fp, #-16]
   1fe38:	movw	r1, #0
   1fe3c:	str	r1, [sp, #72]	; 0x48
   1fe40:	ldr	r2, [sp, #72]	; 0x48
   1fe44:	bl	20348 <__assert_fail@plt+0xebf4>
   1fe48:	str	r0, [fp, #-36]	; 0xffffffdc
   1fe4c:	ldr	r0, [fp, #-16]
   1fe50:	movw	r1, #9
   1fe54:	str	r1, [r0]
   1fe58:	b	1fe90 <__assert_fail@plt+0xe73c>
   1fe5c:	ldr	r0, [fp, #-16]
   1fe60:	movw	r1, #5
   1fe64:	str	r1, [r0]
   1fe68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe6c:	ldr	r3, [fp, #-16]
   1fe70:	movw	r1, #0
   1fe74:	str	r1, [sp, #68]	; 0x44
   1fe78:	ldr	r2, [sp, #68]	; 0x44
   1fe7c:	bl	20348 <__assert_fail@plt+0xebf4>
   1fe80:	str	r0, [fp, #-36]	; 0xffffffdc
   1fe84:	ldr	r0, [fp, #-16]
   1fe88:	movw	r1, #10
   1fe8c:	str	r1, [r0]
   1fe90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe94:	ldr	r3, [fp, #-16]
   1fe98:	movw	r1, #0
   1fe9c:	str	r1, [sp, #64]	; 0x40
   1fea0:	ldr	r2, [sp, #64]	; 0x40
   1fea4:	bl	20348 <__assert_fail@plt+0xebf4>
   1fea8:	str	r0, [fp, #-40]	; 0xffffffd8
   1feac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1feb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1feb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1feb8:	movw	r3, #10
   1febc:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   1fec0:	str	r0, [fp, #-28]	; 0xffffffe4
   1fec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fec8:	movw	r1, #0
   1fecc:	cmp	r0, r1
   1fed0:	movw	r0, #1
   1fed4:	str	r0, [sp, #60]	; 0x3c
   1fed8:	beq	1ff0c <__assert_fail@plt+0xe7b8>
   1fedc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fee0:	movw	r1, #0
   1fee4:	cmp	r0, r1
   1fee8:	movw	r0, #1
   1feec:	str	r0, [sp, #60]	; 0x3c
   1fef0:	beq	1ff0c <__assert_fail@plt+0xe7b8>
   1fef4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fef8:	movw	r1, #0
   1fefc:	cmp	r0, r1
   1ff00:	movw	r0, #0
   1ff04:	moveq	r0, #1
   1ff08:	str	r0, [sp, #60]	; 0x3c
   1ff0c:	ldr	r0, [sp, #60]	; 0x3c
   1ff10:	tst	r0, #1
   1ff14:	beq	1ff30 <__assert_fail@plt+0xe7dc>
   1ff18:	ldr	r0, [fp, #12]
   1ff1c:	movw	r1, #12
   1ff20:	str	r1, [r0]
   1ff24:	movw	r0, #0
   1ff28:	str	r0, [fp, #-4]
   1ff2c:	b	2033c <__assert_fail@plt+0xebe8>
   1ff30:	b	1ff7c <__assert_fail@plt+0xe828>
   1ff34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff38:	ldr	r3, [fp, #-16]
   1ff3c:	movw	r1, #0
   1ff40:	str	r1, [sp, #56]	; 0x38
   1ff44:	ldr	r2, [sp, #56]	; 0x38
   1ff48:	bl	20348 <__assert_fail@plt+0xebf4>
   1ff4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ff50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff54:	movw	r1, #0
   1ff58:	cmp	r0, r1
   1ff5c:	bne	1ff78 <__assert_fail@plt+0xe824>
   1ff60:	ldr	r0, [fp, #12]
   1ff64:	movw	r1, #12
   1ff68:	str	r1, [r0]
   1ff6c:	movw	r0, #0
   1ff70:	str	r0, [fp, #-4]
   1ff74:	b	2033c <__assert_fail@plt+0xebe8>
   1ff78:	b	1ff7c <__assert_fail@plt+0xe828>
   1ff7c:	ldr	r0, [fp, #-16]
   1ff80:	ldr	r1, [fp, #-8]
   1ff84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ff88:	bl	1e020 <__assert_fail@plt+0xc8cc>
   1ff8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff90:	str	r0, [fp, #-4]
   1ff94:	b	2033c <__assert_fail@plt+0xebe8>
   1ff98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff9c:	ldr	r3, [fp, #-16]
   1ffa0:	movw	r1, #0
   1ffa4:	str	r1, [sp, #52]	; 0x34
   1ffa8:	ldr	r2, [sp, #52]	; 0x34
   1ffac:	bl	20348 <__assert_fail@plt+0xebf4>
   1ffb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ffb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffb8:	movw	r1, #0
   1ffbc:	cmp	r0, r1
   1ffc0:	bne	1ffdc <__assert_fail@plt+0xe888>
   1ffc4:	ldr	r0, [fp, #12]
   1ffc8:	movw	r1, #12
   1ffcc:	str	r1, [r0]
   1ffd0:	movw	r0, #0
   1ffd4:	str	r0, [fp, #-4]
   1ffd8:	b	2033c <__assert_fail@plt+0xebe8>
   1ffdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ffe0:	ldr	r0, [r0, #92]	; 0x5c
   1ffe4:	cmp	r0, #1
   1ffe8:	ble	20004 <__assert_fail@plt+0xe8b0>
   1ffec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fff0:	ldrb	r1, [r0, #88]	; 0x58
   1fff4:	bic	r1, r1, #2
   1fff8:	movw	r2, #2
   1fffc:	orr	r1, r1, r2
   20000:	strb	r1, [r0, #88]	; 0x58
   20004:	b	2018c <__assert_fail@plt+0xea38>
   20008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2000c:	ldr	r1, [fp, #-8]
   20010:	ldr	r1, [r1, #64]	; 0x40
   20014:	ldr	r2, [fp, #-16]
   20018:	ldr	r2, [r2, #4]
   2001c:	and	r2, r2, #255	; 0xff
   20020:	cmp	r2, #33	; 0x21
   20024:	movw	r2, #0
   20028:	moveq	r2, #1
   2002c:	ldr	r3, [fp, #12]
   20030:	movw	ip, #54768	; 0xd5f0
   20034:	movt	ip, #3
   20038:	str	r2, [sp, #48]	; 0x30
   2003c:	mov	r2, ip
   20040:	movw	ip, #53549	; 0xd12d
   20044:	movt	ip, #3
   20048:	str	r3, [sp, #44]	; 0x2c
   2004c:	mov	r3, ip
   20050:	ldr	ip, [sp, #48]	; 0x30
   20054:	and	lr, ip, #1
   20058:	str	lr, [sp]
   2005c:	ldr	lr, [sp, #44]	; 0x2c
   20060:	str	lr, [sp, #4]
   20064:	bl	21150 <__assert_fail@plt+0xf9fc>
   20068:	str	r0, [fp, #-28]	; 0xffffffe4
   2006c:	ldr	r0, [fp, #12]
   20070:	ldr	r0, [r0]
   20074:	cmp	r0, #0
   20078:	movw	r0, #0
   2007c:	str	r0, [sp, #40]	; 0x28
   20080:	beq	2009c <__assert_fail@plt+0xe948>
   20084:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20088:	movw	r1, #0
   2008c:	cmp	r0, r1
   20090:	movw	r0, #0
   20094:	moveq	r0, #1
   20098:	str	r0, [sp, #40]	; 0x28
   2009c:	ldr	r0, [sp, #40]	; 0x28
   200a0:	tst	r0, #1
   200a4:	beq	200b4 <__assert_fail@plt+0xe960>
   200a8:	movw	r0, #0
   200ac:	str	r0, [fp, #-4]
   200b0:	b	2033c <__assert_fail@plt+0xebe8>
   200b4:	b	2018c <__assert_fail@plt+0xea38>
   200b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   200bc:	ldr	r1, [fp, #-8]
   200c0:	ldr	r1, [r1, #64]	; 0x40
   200c4:	ldr	r2, [fp, #-16]
   200c8:	ldr	r2, [r2, #4]
   200cc:	and	r2, r2, #255	; 0xff
   200d0:	cmp	r2, #35	; 0x23
   200d4:	movw	r2, #0
   200d8:	moveq	r2, #1
   200dc:	ldr	r3, [fp, #12]
   200e0:	movw	ip, #54774	; 0xd5f6
   200e4:	movt	ip, #3
   200e8:	str	r2, [sp, #36]	; 0x24
   200ec:	mov	r2, ip
   200f0:	movw	ip, #52343	; 0xcc77
   200f4:	movt	ip, #3
   200f8:	str	r3, [sp, #32]
   200fc:	mov	r3, ip
   20100:	ldr	ip, [sp, #36]	; 0x24
   20104:	and	lr, ip, #1
   20108:	str	lr, [sp]
   2010c:	ldr	lr, [sp, #32]
   20110:	str	lr, [sp, #4]
   20114:	bl	21150 <__assert_fail@plt+0xf9fc>
   20118:	str	r0, [fp, #-28]	; 0xffffffe4
   2011c:	ldr	r0, [fp, #12]
   20120:	ldr	r0, [r0]
   20124:	cmp	r0, #0
   20128:	movw	r0, #0
   2012c:	str	r0, [sp, #28]
   20130:	beq	2014c <__assert_fail@plt+0xe9f8>
   20134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20138:	movw	r1, #0
   2013c:	cmp	r0, r1
   20140:	movw	r0, #0
   20144:	moveq	r0, #1
   20148:	str	r0, [sp, #28]
   2014c:	ldr	r0, [sp, #28]
   20150:	tst	r0, #1
   20154:	beq	20164 <__assert_fail@plt+0xea10>
   20158:	movw	r0, #0
   2015c:	str	r0, [fp, #-4]
   20160:	b	2033c <__assert_fail@plt+0xebe8>
   20164:	b	2018c <__assert_fail@plt+0xea38>
   20168:	movw	r0, #0
   2016c:	str	r0, [fp, #-4]
   20170:	b	2033c <__assert_fail@plt+0xebe8>
   20174:	ldr	r0, [fp, #12]
   20178:	movw	r1, #5
   2017c:	str	r1, [r0]
   20180:	movw	r0, #0
   20184:	str	r0, [fp, #-4]
   20188:	b	2033c <__assert_fail@plt+0xebe8>
   2018c:	ldr	r0, [fp, #-16]
   20190:	ldr	r1, [fp, #-8]
   20194:	ldr	r2, [fp, #-20]	; 0xffffffec
   20198:	bl	1e020 <__assert_fail@plt+0xc8cc>
   2019c:	ldr	r0, [fp, #-16]
   201a0:	ldr	r0, [r0, #4]
   201a4:	and	r0, r0, #255	; 0xff
   201a8:	cmp	r0, #11
   201ac:	movw	r0, #1
   201b0:	str	r0, [sp, #24]
   201b4:	beq	2020c <__assert_fail@plt+0xeab8>
   201b8:	ldr	r0, [fp, #-16]
   201bc:	ldr	r0, [r0, #4]
   201c0:	and	r0, r0, #255	; 0xff
   201c4:	cmp	r0, #18
   201c8:	movw	r0, #1
   201cc:	str	r0, [sp, #24]
   201d0:	beq	2020c <__assert_fail@plt+0xeab8>
   201d4:	ldr	r0, [fp, #-16]
   201d8:	ldr	r0, [r0, #4]
   201dc:	and	r0, r0, #255	; 0xff
   201e0:	cmp	r0, #19
   201e4:	movw	r0, #1
   201e8:	str	r0, [sp, #24]
   201ec:	beq	2020c <__assert_fail@plt+0xeab8>
   201f0:	ldr	r0, [fp, #-16]
   201f4:	ldr	r0, [r0, #4]
   201f8:	and	r0, r0, #255	; 0xff
   201fc:	cmp	r0, #23
   20200:	movw	r0, #0
   20204:	moveq	r0, #1
   20208:	str	r0, [sp, #24]
   2020c:	ldr	r0, [sp, #24]
   20210:	tst	r0, #1
   20214:	beq	20334 <__assert_fail@plt+0xebe0>
   20218:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2021c:	ldr	r1, [fp, #-8]
   20220:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20224:	ldr	r3, [fp, #-16]
   20228:	ldr	ip, [fp, #-20]	; 0xffffffec
   2022c:	ldr	lr, [fp, #12]
   20230:	str	ip, [sp]
   20234:	str	lr, [sp, #4]
   20238:	bl	21484 <__assert_fail@plt+0xfd30>
   2023c:	str	r0, [fp, #-44]	; 0xffffffd4
   20240:	ldr	r0, [fp, #12]
   20244:	ldr	r0, [r0]
   20248:	cmp	r0, #0
   2024c:	movw	r0, #0
   20250:	str	r0, [sp, #20]
   20254:	beq	20270 <__assert_fail@plt+0xeb1c>
   20258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2025c:	movw	r1, #0
   20260:	cmp	r0, r1
   20264:	movw	r0, #0
   20268:	moveq	r0, #1
   2026c:	str	r0, [sp, #20]
   20270:	ldr	r0, [sp, #20]
   20274:	tst	r0, #1
   20278:	beq	202b0 <__assert_fail@plt+0xeb5c>
   2027c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20280:	movw	r1, #0
   20284:	cmp	r0, r1
   20288:	beq	202a4 <__assert_fail@plt+0xeb50>
   2028c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20290:	movw	r1, #63532	; 0xf82c
   20294:	movt	r1, #1
   20298:	movw	r2, #0
   2029c:	bl	1f6bc <__assert_fail@plt+0xdf68>
   202a0:	str	r0, [sp, #16]
   202a4:	movw	r0, #0
   202a8:	str	r0, [fp, #-4]
   202ac:	b	2033c <__assert_fail@plt+0xebe8>
   202b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   202b4:	str	r0, [fp, #-28]	; 0xffffffe4
   202b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   202bc:	and	r0, r0, #16777216	; 0x1000000
   202c0:	cmp	r0, #0
   202c4:	beq	20330 <__assert_fail@plt+0xebdc>
   202c8:	ldr	r0, [fp, #-16]
   202cc:	ldr	r0, [r0, #4]
   202d0:	and	r0, r0, #255	; 0xff
   202d4:	cmp	r0, #11
   202d8:	beq	202f0 <__assert_fail@plt+0xeb9c>
   202dc:	ldr	r0, [fp, #-16]
   202e0:	ldr	r0, [r0, #4]
   202e4:	and	r0, r0, #255	; 0xff
   202e8:	cmp	r0, #23
   202ec:	bne	20330 <__assert_fail@plt+0xebdc>
   202f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   202f4:	movw	r1, #0
   202f8:	cmp	r0, r1
   202fc:	beq	20318 <__assert_fail@plt+0xebc4>
   20300:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20304:	movw	r1, #63532	; 0xf82c
   20308:	movt	r1, #1
   2030c:	movw	r2, #0
   20310:	bl	1f6bc <__assert_fail@plt+0xdf68>
   20314:	str	r0, [sp, #12]
   20318:	ldr	r0, [fp, #12]
   2031c:	movw	r1, #13
   20320:	str	r1, [r0]
   20324:	movw	r0, #0
   20328:	str	r0, [fp, #-4]
   2032c:	b	2033c <__assert_fail@plt+0xebe8>
   20330:	b	2019c <__assert_fail@plt+0xea48>
   20334:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20338:	str	r0, [fp, #-4]
   2033c:	ldr	r0, [fp, #-4]
   20340:	mov	sp, fp
   20344:	pop	{fp, pc}
   20348:	push	{fp, lr}
   2034c:	mov	fp, sp
   20350:	sub	sp, sp, #32
   20354:	str	r0, [fp, #-8]
   20358:	str	r1, [fp, #-12]
   2035c:	str	r2, [sp, #16]
   20360:	str	r3, [sp, #12]
   20364:	ldr	r0, [fp, #-8]
   20368:	ldr	r0, [r0, #64]	; 0x40
   2036c:	cmp	r0, #31
   20370:	bne	203c4 <__assert_fail@plt+0xec70>
   20374:	movw	r0, #996	; 0x3e4
   20378:	bl	38a7c <__assert_fail@plt+0x27328>
   2037c:	str	r0, [sp, #4]
   20380:	ldr	r0, [sp, #4]
   20384:	movw	lr, #0
   20388:	cmp	r0, lr
   2038c:	bne	2039c <__assert_fail@plt+0xec48>
   20390:	movw	r0, #0
   20394:	str	r0, [fp, #-4]
   20398:	b	204a0 <__assert_fail@plt+0xed4c>
   2039c:	ldr	r0, [fp, #-8]
   203a0:	ldr	r0, [r0, #56]	; 0x38
   203a4:	ldr	r1, [sp, #4]
   203a8:	str	r0, [r1]
   203ac:	ldr	r0, [sp, #4]
   203b0:	ldr	r1, [fp, #-8]
   203b4:	str	r0, [r1, #56]	; 0x38
   203b8:	ldr	r0, [fp, #-8]
   203bc:	movw	r1, #0
   203c0:	str	r1, [r0, #64]	; 0x40
   203c4:	ldr	r0, [fp, #-8]
   203c8:	ldr	r1, [r0, #56]	; 0x38
   203cc:	ldr	r2, [r0, #64]	; 0x40
   203d0:	add	r1, r1, #4
   203d4:	add	r3, r2, #1
   203d8:	str	r3, [r0, #64]	; 0x40
   203dc:	add	r0, r1, r2, lsl #5
   203e0:	str	r0, [sp, #8]
   203e4:	ldr	r0, [sp, #8]
   203e8:	movw	r1, #0
   203ec:	str	r1, [r0]
   203f0:	ldr	r0, [fp, #-12]
   203f4:	ldr	r2, [sp, #8]
   203f8:	str	r0, [r2, #4]
   203fc:	ldr	r0, [sp, #16]
   20400:	ldr	r2, [sp, #8]
   20404:	str	r0, [r2, #8]
   20408:	ldr	r0, [sp, #8]
   2040c:	ldr	r2, [sp, #12]
   20410:	ldr	r3, [r2]
   20414:	str	r3, [r0, #20]
   20418:	ldr	r2, [r2, #4]
   2041c:	str	r2, [r0, #24]
   20420:	ldr	r0, [sp, #8]
   20424:	ldr	r2, [r0, #24]
   20428:	mvn	r3, #262144	; 0x40000
   2042c:	and	r2, r2, r3
   20430:	str	r2, [r0, #24]
   20434:	ldr	r0, [sp, #8]
   20438:	ldr	r2, [r0, #24]
   2043c:	mvn	r3, #524288	; 0x80000
   20440:	and	r2, r2, r3
   20444:	str	r2, [r0, #24]
   20448:	ldr	r0, [sp, #8]
   2044c:	str	r1, [r0, #12]
   20450:	ldr	r0, [sp, #8]
   20454:	str	r1, [r0, #16]
   20458:	ldr	r0, [sp, #8]
   2045c:	mvn	r2, #0
   20460:	str	r2, [r0, #28]
   20464:	ldr	r0, [fp, #-12]
   20468:	cmp	r0, r1
   2046c:	beq	2047c <__assert_fail@plt+0xed28>
   20470:	ldr	r0, [sp, #8]
   20474:	ldr	r1, [fp, #-12]
   20478:	str	r0, [r1]
   2047c:	ldr	r0, [sp, #16]
   20480:	movw	r1, #0
   20484:	cmp	r0, r1
   20488:	beq	20498 <__assert_fail@plt+0xed44>
   2048c:	ldr	r0, [sp, #8]
   20490:	ldr	r1, [sp, #16]
   20494:	str	r0, [r1]
   20498:	ldr	r0, [sp, #8]
   2049c:	str	r0, [fp, #-4]
   204a0:	ldr	r0, [fp, #-4]
   204a4:	mov	sp, fp
   204a8:	pop	{fp, pc}
   204ac:	push	{fp, lr}
   204b0:	mov	fp, sp
   204b4:	sub	sp, sp, #56	; 0x38
   204b8:	ldr	ip, [fp, #12]
   204bc:	ldr	lr, [fp, #8]
   204c0:	str	r0, [fp, #-8]
   204c4:	str	r1, [fp, #-12]
   204c8:	str	r2, [fp, #-16]
   204cc:	str	r3, [fp, #-20]	; 0xffffffec
   204d0:	ldr	r0, [fp, #-12]
   204d4:	ldr	r0, [r0]
   204d8:	str	r0, [fp, #-24]	; 0xffffffe8
   204dc:	ldr	r0, [fp, #-12]
   204e0:	ldr	r1, [r0, #24]
   204e4:	add	r2, r1, #1
   204e8:	str	r2, [r0, #24]
   204ec:	str	r1, [sp, #24]
   204f0:	ldr	r0, [fp, #-16]
   204f4:	ldr	r1, [fp, #-8]
   204f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   204fc:	orr	r2, r2, #8388608	; 0x800000
   20500:	str	lr, [sp, #20]
   20504:	str	ip, [sp, #16]
   20508:	bl	1e020 <__assert_fail@plt+0xc8cc>
   2050c:	ldr	r0, [fp, #-16]
   20510:	ldr	r0, [r0, #4]
   20514:	and	r0, r0, #255	; 0xff
   20518:	cmp	r0, #9
   2051c:	bne	2052c <__assert_fail@plt+0xedd8>
   20520:	movw	r0, #0
   20524:	str	r0, [sp, #28]
   20528:	b	205e8 <__assert_fail@plt+0xee94>
   2052c:	ldr	r0, [fp, #-8]
   20530:	ldr	r1, [fp, #-12]
   20534:	ldr	r2, [fp, #-16]
   20538:	ldr	r3, [fp, #-20]	; 0xffffffec
   2053c:	ldr	ip, [fp, #8]
   20540:	ldr	lr, [fp, #12]
   20544:	str	ip, [sp]
   20548:	str	lr, [sp, #4]
   2054c:	bl	1e060 <__assert_fail@plt+0xc90c>
   20550:	str	r0, [sp, #28]
   20554:	ldr	r0, [fp, #12]
   20558:	ldr	r0, [r0]
   2055c:	cmp	r0, #0
   20560:	movw	r0, #0
   20564:	str	r0, [sp, #12]
   20568:	bne	20588 <__assert_fail@plt+0xee34>
   2056c:	ldr	r0, [fp, #-16]
   20570:	ldr	r0, [r0, #4]
   20574:	and	r0, r0, #255	; 0xff
   20578:	cmp	r0, #9
   2057c:	movw	r0, #0
   20580:	movne	r0, #1
   20584:	str	r0, [sp, #12]
   20588:	ldr	r0, [sp, #12]
   2058c:	tst	r0, #1
   20590:	beq	205c8 <__assert_fail@plt+0xee74>
   20594:	ldr	r0, [sp, #28]
   20598:	movw	r1, #0
   2059c:	cmp	r0, r1
   205a0:	beq	205bc <__assert_fail@plt+0xee68>
   205a4:	ldr	r0, [sp, #28]
   205a8:	movw	r1, #63532	; 0xf82c
   205ac:	movt	r1, #1
   205b0:	movw	r2, #0
   205b4:	bl	1f6bc <__assert_fail@plt+0xdf68>
   205b8:	str	r0, [sp, #8]
   205bc:	ldr	r0, [fp, #12]
   205c0:	movw	r1, #8
   205c4:	str	r1, [r0]
   205c8:	ldr	r0, [fp, #12]
   205cc:	ldr	r0, [r0]
   205d0:	cmp	r0, #0
   205d4:	beq	205e4 <__assert_fail@plt+0xee90>
   205d8:	movw	r0, #0
   205dc:	str	r0, [fp, #-4]
   205e0:	b	20664 <__assert_fail@plt+0xef10>
   205e4:	b	205e8 <__assert_fail@plt+0xee94>
   205e8:	ldr	r0, [sp, #24]
   205ec:	cmp	r0, #8
   205f0:	bhi	20610 <__assert_fail@plt+0xeebc>
   205f4:	ldr	r0, [sp, #24]
   205f8:	movw	r1, #1
   205fc:	lsl	r0, r1, r0
   20600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20604:	ldr	r2, [r1, #84]	; 0x54
   20608:	orr	r0, r2, r0
   2060c:	str	r0, [r1, #84]	; 0x54
   20610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20614:	ldr	r1, [sp, #28]
   20618:	movw	r2, #0
   2061c:	movw	r3, #17
   20620:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   20624:	str	r0, [sp, #28]
   20628:	ldr	r0, [sp, #28]
   2062c:	movw	r1, #0
   20630:	cmp	r0, r1
   20634:	bne	20650 <__assert_fail@plt+0xeefc>
   20638:	ldr	r0, [fp, #12]
   2063c:	movw	r1, #12
   20640:	str	r1, [r0]
   20644:	movw	r0, #0
   20648:	str	r0, [fp, #-4]
   2064c:	b	20664 <__assert_fail@plt+0xef10>
   20650:	ldr	r0, [sp, #24]
   20654:	ldr	r1, [sp, #28]
   20658:	str	r0, [r1, #20]
   2065c:	ldr	r0, [sp, #28]
   20660:	str	r0, [fp, #-4]
   20664:	ldr	r0, [fp, #-4]
   20668:	mov	sp, fp
   2066c:	pop	{fp, pc}
   20670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20674:	add	fp, sp, #24
   20678:	sub	sp, sp, #296	; 0x128
   2067c:	ldr	ip, [fp, #8]
   20680:	str	r0, [fp, #-32]	; 0xffffffe0
   20684:	str	r1, [fp, #-36]	; 0xffffffdc
   20688:	str	r2, [fp, #-40]	; 0xffffffd8
   2068c:	str	r3, [fp, #-44]	; 0xffffffd4
   20690:	movw	r0, #0
   20694:	str	r0, [fp, #-48]	; 0xffffffd0
   20698:	str	r0, [fp, #-52]	; 0xffffffcc
   2069c:	str	r0, [fp, #-56]	; 0xffffffc8
   206a0:	str	r0, [fp, #-60]	; 0xffffffc4
   206a4:	str	r0, [fp, #-64]	; 0xffffffc0
   206a8:	str	r0, [fp, #-68]	; 0xffffffbc
   206ac:	str	r0, [fp, #-88]	; 0xffffffa8
   206b0:	str	r0, [fp, #-92]	; 0xffffffa4
   206b4:	str	r0, [fp, #-96]	; 0xffffffa0
   206b8:	str	r0, [fp, #-100]	; 0xffffff9c
   206bc:	str	r0, [fp, #-104]	; 0xffffff98
   206c0:	movw	r0, #0
   206c4:	strb	r0, [fp, #-105]	; 0xffffff97
   206c8:	movw	r0, #1
   206cc:	strb	r0, [fp, #-117]	; 0xffffff8b
   206d0:	movw	r0, #32
   206d4:	movw	r1, #1
   206d8:	str	ip, [sp, #84]	; 0x54
   206dc:	bl	389e0 <__assert_fail@plt+0x2728c>
   206e0:	str	r0, [fp, #-80]	; 0xffffffb0
   206e4:	movw	r0, #40	; 0x28
   206e8:	movw	r1, #1
   206ec:	bl	389e0 <__assert_fail@plt+0x2728c>
   206f0:	str	r0, [fp, #-84]	; 0xffffffac
   206f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   206f8:	movw	r1, #0
   206fc:	cmp	r0, r1
   20700:	movw	r0, #1
   20704:	str	r0, [sp, #80]	; 0x50
   20708:	beq	20724 <__assert_fail@plt+0xefd0>
   2070c:	ldr	r0, [fp, #-84]	; 0xffffffac
   20710:	movw	r1, #0
   20714:	cmp	r0, r1
   20718:	movw	r0, #0
   2071c:	moveq	r0, #1
   20720:	str	r0, [sp, #80]	; 0x50
   20724:	ldr	r0, [sp, #80]	; 0x50
   20728:	tst	r0, #1
   2072c:	beq	20758 <__assert_fail@plt+0xf004>
   20730:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20734:	bl	1604c <__assert_fail@plt+0x48f8>
   20738:	ldr	r0, [fp, #-84]	; 0xffffffac
   2073c:	bl	1604c <__assert_fail@plt+0x48f8>
   20740:	ldr	r0, [fp, #8]
   20744:	movw	lr, #12
   20748:	str	lr, [r0]
   2074c:	movw	r0, #0
   20750:	str	r0, [fp, #-28]	; 0xffffffe4
   20754:	b	20f94 <__assert_fail@plt+0xf840>
   20758:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2075c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20760:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20764:	bl	21ae0 <__assert_fail@plt+0x1038c>
   20768:	str	r0, [fp, #-116]	; 0xffffff8c
   2076c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20770:	ldr	r0, [r0, #4]
   20774:	and	r0, r0, #255	; 0xff
   20778:	cmp	r0, #2
   2077c:	bne	20790 <__assert_fail@plt+0xf03c>
   20780:	ldr	r0, [fp, #8]
   20784:	movw	r1, #2
   20788:	str	r1, [r0]
   2078c:	b	20f7c <__assert_fail@plt+0xf828>
   20790:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20794:	ldr	r0, [r0, #4]
   20798:	and	r0, r0, #255	; 0xff
   2079c:	cmp	r0, #25
   207a0:	bne	2082c <__assert_fail@plt+0xf0d8>
   207a4:	ldr	r0, [fp, #-84]	; 0xffffffac
   207a8:	ldrb	r1, [r0, #16]
   207ac:	bic	r1, r1, #1
   207b0:	movw	r2, #1
   207b4:	orr	r1, r1, r2
   207b8:	strb	r1, [r0, #16]
   207bc:	strb	r2, [fp, #-105]	; 0xffffff97
   207c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   207c4:	and	r0, r0, #256	; 0x100
   207c8:	cmp	r0, #0
   207cc:	beq	207dc <__assert_fail@plt+0xf088>
   207d0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   207d4:	movw	r1, #10
   207d8:	bl	21e50 <__assert_fail@plt+0x106fc>
   207dc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   207e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   207e4:	ldr	r2, [r1, #40]	; 0x28
   207e8:	add	r0, r2, r0
   207ec:	str	r0, [r1, #40]	; 0x28
   207f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   207f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   207f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   207fc:	bl	21ae0 <__assert_fail@plt+0x1038c>
   20800:	str	r0, [fp, #-116]	; 0xffffff8c
   20804:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20808:	ldr	r0, [r0, #4]
   2080c:	and	r0, r0, #255	; 0xff
   20810:	cmp	r0, #2
   20814:	bne	20828 <__assert_fail@plt+0xf0d4>
   20818:	ldr	r0, [fp, #8]
   2081c:	movw	r1, #2
   20820:	str	r1, [r0]
   20824:	b	20f7c <__assert_fail@plt+0xf828>
   20828:	b	2082c <__assert_fail@plt+0xf0d8>
   2082c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20830:	ldr	r0, [r0, #4]
   20834:	and	r0, r0, #255	; 0xff
   20838:	cmp	r0, #21
   2083c:	bne	20858 <__assert_fail@plt+0xf104>
   20840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20844:	ldr	r1, [r0, #4]
   20848:	mvn	r2, #255	; 0xff
   2084c:	and	r1, r1, r2
   20850:	orr	r1, r1, #1
   20854:	str	r1, [r0, #4]
   20858:	b	2085c <__assert_fail@plt+0xf108>
   2085c:	add	r0, sp, #152	; 0x98
   20860:	movw	r1, #0
   20864:	str	r1, [sp, #112]	; 0x70
   20868:	movw	r1, #0
   2086c:	strb	r1, [sp, #111]	; 0x6f
   20870:	str	r0, [fp, #-124]	; 0xffffff84
   20874:	movw	r0, #3
   20878:	str	r0, [fp, #-128]	; 0xffffff80
   2087c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20880:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20884:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20888:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2088c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   20890:	ldrb	lr, [fp, #-117]	; 0xffffff8b
   20894:	sub	r4, fp, #128	; 0x80
   20898:	str	r0, [sp, #76]	; 0x4c
   2089c:	mov	r0, r4
   208a0:	ldr	r4, [sp, #76]	; 0x4c
   208a4:	str	r4, [sp]
   208a8:	str	ip, [sp, #4]
   208ac:	and	ip, lr, #1
   208b0:	str	ip, [sp, #8]
   208b4:	bl	21e98 <__assert_fail@plt+0x10744>
   208b8:	str	r0, [sp, #116]	; 0x74
   208bc:	ldr	r0, [sp, #116]	; 0x74
   208c0:	cmp	r0, #0
   208c4:	beq	208d8 <__assert_fail@plt+0xf184>
   208c8:	ldr	r0, [sp, #116]	; 0x74
   208cc:	ldr	r1, [fp, #8]
   208d0:	str	r0, [r1]
   208d4:	b	20f7c <__assert_fail@plt+0xf828>
   208d8:	movw	r0, #0
   208dc:	strb	r0, [fp, #-117]	; 0xffffff8b
   208e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   208e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   208e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   208ec:	bl	21ae0 <__assert_fail@plt+0x1038c>
   208f0:	str	r0, [fp, #-116]	; 0xffffff8c
   208f4:	ldr	r0, [fp, #-128]	; 0xffffff80
   208f8:	cmp	r0, #4
   208fc:	beq	209e4 <__assert_fail@plt+0xf290>
   20900:	ldr	r0, [fp, #-128]	; 0xffffff80
   20904:	cmp	r0, #2
   20908:	beq	209e4 <__assert_fail@plt+0xf290>
   2090c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20910:	ldr	r0, [r0, #4]
   20914:	and	r0, r0, #255	; 0xff
   20918:	cmp	r0, #2
   2091c:	bne	20930 <__assert_fail@plt+0xf1dc>
   20920:	ldr	r0, [fp, #8]
   20924:	movw	r1, #7
   20928:	str	r1, [r0]
   2092c:	b	20f7c <__assert_fail@plt+0xf828>
   20930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20934:	ldr	r0, [r0, #4]
   20938:	and	r0, r0, #255	; 0xff
   2093c:	cmp	r0, #22
   20940:	bne	209e0 <__assert_fail@plt+0xf28c>
   20944:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20948:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2094c:	ldr	r2, [r1, #40]	; 0x28
   20950:	add	r0, r2, r0
   20954:	str	r0, [r1, #40]	; 0x28
   20958:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2095c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20960:	add	r0, sp, #100	; 0x64
   20964:	bl	21ae0 <__assert_fail@plt+0x1038c>
   20968:	str	r0, [sp, #112]	; 0x70
   2096c:	ldr	r0, [sp, #104]	; 0x68
   20970:	and	r0, r0, #255	; 0xff
   20974:	cmp	r0, #2
   20978:	bne	2098c <__assert_fail@plt+0xf238>
   2097c:	ldr	r0, [fp, #8]
   20980:	movw	r1, #7
   20984:	str	r1, [r0]
   20988:	b	20f7c <__assert_fail@plt+0xf828>
   2098c:	ldr	r0, [sp, #104]	; 0x68
   20990:	and	r0, r0, #255	; 0xff
   20994:	cmp	r0, #21
   20998:	bne	209d4 <__assert_fail@plt+0xf280>
   2099c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   209a0:	movw	r1, #0
   209a4:	sub	r0, r1, r0
   209a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   209ac:	ldr	r2, [r1, #40]	; 0x28
   209b0:	add	r0, r2, r0
   209b4:	str	r0, [r1, #40]	; 0x28
   209b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   209bc:	ldr	r1, [r0, #4]
   209c0:	mvn	r2, #255	; 0xff
   209c4:	and	r1, r1, r2
   209c8:	orr	r1, r1, #1
   209cc:	str	r1, [r0, #4]
   209d0:	b	209dc <__assert_fail@plt+0xf288>
   209d4:	movw	r0, #1
   209d8:	strb	r0, [sp, #111]	; 0x6f
   209dc:	b	209e0 <__assert_fail@plt+0xf28c>
   209e0:	b	209e4 <__assert_fail@plt+0xf290>
   209e4:	ldrb	r0, [sp, #111]	; 0x6f
   209e8:	and	r0, r0, #1
   209ec:	cmp	r0, #1
   209f0:	bne	20b14 <__assert_fail@plt+0xf3c0>
   209f4:	add	r0, sp, #120	; 0x78
   209f8:	str	r0, [fp, #-132]	; 0xffffff7c
   209fc:	movw	r0, #3
   20a00:	str	r0, [fp, #-136]	; 0xffffff78
   20a04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20a08:	ldr	r3, [sp, #112]	; 0x70
   20a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20a10:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20a14:	sub	ip, fp, #136	; 0x88
   20a18:	str	r0, [sp, #72]	; 0x48
   20a1c:	mov	r0, ip
   20a20:	add	ip, sp, #100	; 0x64
   20a24:	str	r2, [sp, #68]	; 0x44
   20a28:	mov	r2, ip
   20a2c:	ldr	ip, [sp, #72]	; 0x48
   20a30:	str	ip, [sp]
   20a34:	ldr	lr, [sp, #68]	; 0x44
   20a38:	str	lr, [sp, #4]
   20a3c:	movw	r4, #1
   20a40:	and	r4, r4, #1
   20a44:	str	r4, [sp, #8]
   20a48:	bl	21e98 <__assert_fail@plt+0x10744>
   20a4c:	str	r0, [sp, #116]	; 0x74
   20a50:	ldr	r0, [sp, #116]	; 0x74
   20a54:	cmp	r0, #0
   20a58:	beq	20a6c <__assert_fail@plt+0xf318>
   20a5c:	ldr	r0, [sp, #116]	; 0x74
   20a60:	ldr	r1, [fp, #8]
   20a64:	str	r0, [r1]
   20a68:	b	20f7c <__assert_fail@plt+0xf828>
   20a6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20a70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20a74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20a78:	bl	21ae0 <__assert_fail@plt+0x1038c>
   20a7c:	str	r0, [fp, #-116]	; 0xffffff8c
   20a80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20a84:	ldr	r1, [fp, #-84]	; 0xffffffac
   20a88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20a8c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   20a90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20a94:	ldr	ip, [fp, #-48]	; 0xffffffd0
   20a98:	ldr	r4, [fp, #-52]	; 0xffffffcc
   20a9c:	ldr	r5, [fp, #-60]	; 0xffffffc4
   20aa0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   20aa4:	ldr	r7, [fp, #-68]	; 0xffffffbc
   20aa8:	sub	r8, fp, #92	; 0x5c
   20aac:	str	r2, [sp, #64]	; 0x40
   20ab0:	mov	r2, r8
   20ab4:	sub	r8, fp, #128	; 0x80
   20ab8:	str	r3, [sp, #60]	; 0x3c
   20abc:	mov	r3, r8
   20ac0:	sub	r8, fp, #136	; 0x88
   20ac4:	str	r8, [sp]
   20ac8:	ldr	r8, [sp, #64]	; 0x40
   20acc:	str	r8, [sp, #4]
   20ad0:	str	lr, [sp, #8]
   20ad4:	ldr	lr, [sp, #60]	; 0x3c
   20ad8:	str	lr, [sp, #12]
   20adc:	str	ip, [sp, #16]
   20ae0:	str	r4, [sp, #20]
   20ae4:	str	r5, [sp, #24]
   20ae8:	str	r6, [sp, #28]
   20aec:	str	r7, [sp, #32]
   20af0:	bl	2201c <__assert_fail@plt+0x108c8>
   20af4:	ldr	r1, [fp, #8]
   20af8:	str	r0, [r1]
   20afc:	ldr	r0, [fp, #8]
   20b00:	ldr	r0, [r0]
   20b04:	cmp	r0, #0
   20b08:	beq	20b10 <__assert_fail@plt+0xf3bc>
   20b0c:	b	20f7c <__assert_fail@plt+0xf828>
   20b10:	b	20cc8 <__assert_fail@plt+0xf574>
   20b14:	ldr	r0, [fp, #-128]	; 0xffffff80
   20b18:	cmp	r0, #4
   20b1c:	str	r0, [sp, #56]	; 0x38
   20b20:	bhi	20cc4 <__assert_fail@plt+0xf570>
   20b24:	add	r0, pc, #8
   20b28:	ldr	r1, [sp, #56]	; 0x38
   20b2c:	ldr	r0, [r0, r1, lsl #2]
   20b30:	mov	pc, r0
   20b34:	andeq	r0, r2, r8, asr #22
   20b38:	andeq	r0, r2, r8, asr fp
   20b3c:	ldrdeq	r0, [r2], -ip
   20b40:	andeq	r0, r2, r0, lsl ip
   20b44:	andeq	r0, r2, r0, ror ip
   20b48:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20b4c:	ldrb	r1, [fp, #-124]	; 0xffffff84
   20b50:	bl	21e50 <__assert_fail@plt+0x106fc>
   20b54:	b	20cc4 <__assert_fail@plt+0xf570>
   20b58:	ldr	r0, [fp, #-96]	; 0xffffffa0
   20b5c:	ldr	r1, [fp, #-84]	; 0xffffffac
   20b60:	ldr	r1, [r1, #20]
   20b64:	cmp	r0, r1
   20b68:	bne	20bb8 <__assert_fail@plt+0xf464>
   20b6c:	ldr	r0, [fp, #-84]	; 0xffffffac
   20b70:	ldr	r0, [r0, #20]
   20b74:	mov	r1, #1
   20b78:	orr	r0, r1, r0, lsl #1
   20b7c:	str	r0, [fp, #-96]	; 0xffffffa0
   20b80:	ldr	r0, [fp, #-84]	; 0xffffffac
   20b84:	ldr	r0, [r0]
   20b88:	ldr	r1, [fp, #-96]	; 0xffffffa0
   20b8c:	lsl	r1, r1, #2
   20b90:	bl	38aec <__assert_fail@plt+0x27398>
   20b94:	str	r0, [sp, #96]	; 0x60
   20b98:	ldr	r0, [sp, #96]	; 0x60
   20b9c:	movw	r1, #0
   20ba0:	cmp	r0, r1
   20ba4:	bne	20bac <__assert_fail@plt+0xf458>
   20ba8:	b	20f70 <__assert_fail@plt+0xf81c>
   20bac:	ldr	r0, [sp, #96]	; 0x60
   20bb0:	ldr	r1, [fp, #-84]	; 0xffffffac
   20bb4:	str	r0, [r1]
   20bb8:	ldr	r0, [fp, #-124]	; 0xffffff84
   20bbc:	ldr	r1, [fp, #-84]	; 0xffffffac
   20bc0:	ldr	r2, [r1]
   20bc4:	ldr	r3, [r1, #20]
   20bc8:	add	ip, r3, #1
   20bcc:	str	ip, [r1, #20]
   20bd0:	add	r1, r2, r3, lsl #2
   20bd4:	str	r0, [r1]
   20bd8:	b	20cc4 <__assert_fail@plt+0xf570>
   20bdc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20be0:	ldr	r1, [fp, #-84]	; 0xffffffac
   20be4:	ldr	r3, [fp, #-124]	; 0xffffff84
   20be8:	sub	r2, fp, #100	; 0x64
   20bec:	bl	224c4 <__assert_fail@plt+0x10d70>
   20bf0:	ldr	r1, [fp, #8]
   20bf4:	str	r0, [r1]
   20bf8:	ldr	r0, [fp, #8]
   20bfc:	ldr	r0, [r0]
   20c00:	cmp	r0, #0
   20c04:	beq	20c0c <__assert_fail@plt+0xf4b8>
   20c08:	b	20f7c <__assert_fail@plt+0xf828>
   20c0c:	b	20cc4 <__assert_fail@plt+0xf570>
   20c10:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20c14:	ldr	r1, [fp, #-84]	; 0xffffffac
   20c18:	ldr	r3, [fp, #-124]	; 0xffffff84
   20c1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20c20:	ldr	ip, [fp, #-60]	; 0xffffffc4
   20c24:	ldr	lr, [fp, #-64]	; 0xffffffc0
   20c28:	ldr	r4, [fp, #-68]	; 0xffffffbc
   20c2c:	sub	r5, fp, #88	; 0x58
   20c30:	str	r2, [sp, #52]	; 0x34
   20c34:	mov	r2, r5
   20c38:	ldr	r5, [sp, #52]	; 0x34
   20c3c:	str	r5, [sp]
   20c40:	str	ip, [sp, #4]
   20c44:	str	lr, [sp, #8]
   20c48:	str	r4, [sp, #12]
   20c4c:	bl	22520 <__assert_fail@plt+0x10dcc>
   20c50:	ldr	r1, [fp, #8]
   20c54:	str	r0, [r1]
   20c58:	ldr	r0, [fp, #8]
   20c5c:	ldr	r0, [r0]
   20c60:	cmp	r0, #0
   20c64:	beq	20c6c <__assert_fail@plt+0xf518>
   20c68:	b	20f7c <__assert_fail@plt+0xf828>
   20c6c:	b	20cc4 <__assert_fail@plt+0xf570>
   20c70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20c74:	ldr	r0, [r0, #64]	; 0x40
   20c78:	ldr	r1, [fp, #-80]	; 0xffffffb0
   20c7c:	ldr	r2, [fp, #-84]	; 0xffffffac
   20c80:	ldr	r3, [fp, #-124]	; 0xffffff84
   20c84:	ldr	ip, [fp, #-44]	; 0xffffffd4
   20c88:	sub	lr, fp, #104	; 0x68
   20c8c:	str	r3, [sp, #48]	; 0x30
   20c90:	mov	r3, lr
   20c94:	ldr	lr, [sp, #48]	; 0x30
   20c98:	str	lr, [sp]
   20c9c:	str	ip, [sp, #4]
   20ca0:	bl	225a4 <__assert_fail@plt+0x10e50>
   20ca4:	ldr	r1, [fp, #8]
   20ca8:	str	r0, [r1]
   20cac:	ldr	r0, [fp, #8]
   20cb0:	ldr	r0, [r0]
   20cb4:	cmp	r0, #0
   20cb8:	beq	20cc0 <__assert_fail@plt+0xf56c>
   20cbc:	b	20f7c <__assert_fail@plt+0xf828>
   20cc0:	b	20cc4 <__assert_fail@plt+0xf570>
   20cc4:	b	20cc8 <__assert_fail@plt+0xf574>
   20cc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20ccc:	ldr	r0, [r0, #4]
   20cd0:	and	r0, r0, #255	; 0xff
   20cd4:	cmp	r0, #2
   20cd8:	bne	20cec <__assert_fail@plt+0xf598>
   20cdc:	ldr	r0, [fp, #8]
   20ce0:	movw	r1, #7
   20ce4:	str	r1, [r0]
   20ce8:	b	20f7c <__assert_fail@plt+0xf828>
   20cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20cf0:	ldr	r0, [r0, #4]
   20cf4:	and	r0, r0, #255	; 0xff
   20cf8:	cmp	r0, #21
   20cfc:	bne	20d04 <__assert_fail@plt+0xf5b0>
   20d00:	b	20d08 <__assert_fail@plt+0xf5b4>
   20d04:	b	2085c <__assert_fail@plt+0xf108>
   20d08:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20d0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20d10:	ldr	r2, [r1, #40]	; 0x28
   20d14:	add	r0, r2, r0
   20d18:	str	r0, [r1, #40]	; 0x28
   20d1c:	ldrb	r0, [fp, #-105]	; 0xffffff97
   20d20:	tst	r0, #1
   20d24:	beq	20d30 <__assert_fail@plt+0xf5dc>
   20d28:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20d2c:	bl	2324c <__assert_fail@plt+0x11af8>
   20d30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20d34:	ldr	r0, [r0, #92]	; 0x5c
   20d38:	cmp	r0, #1
   20d3c:	ble	20d50 <__assert_fail@plt+0xf5fc>
   20d40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20d44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20d48:	ldr	r1, [r1, #60]	; 0x3c
   20d4c:	bl	23294 <__assert_fail@plt+0x11b40>
   20d50:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d54:	ldr	r0, [r0, #20]
   20d58:	cmp	r0, #0
   20d5c:	bne	20dc8 <__assert_fail@plt+0xf674>
   20d60:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d64:	ldr	r0, [r0, #24]
   20d68:	cmp	r0, #0
   20d6c:	bne	20dc8 <__assert_fail@plt+0xf674>
   20d70:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d74:	ldr	r0, [r0, #28]
   20d78:	cmp	r0, #0
   20d7c:	bne	20dc8 <__assert_fail@plt+0xf674>
   20d80:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d84:	ldr	r0, [r0, #32]
   20d88:	cmp	r0, #0
   20d8c:	bne	20dc8 <__assert_fail@plt+0xf674>
   20d90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20d94:	ldr	r0, [r0, #92]	; 0x5c
   20d98:	cmp	r0, #1
   20d9c:	ble	20f0c <__assert_fail@plt+0xf7b8>
   20da0:	ldr	r0, [fp, #-84]	; 0xffffffac
   20da4:	ldr	r0, [r0, #36]	; 0x24
   20da8:	cmp	r0, #0
   20dac:	bne	20dc8 <__assert_fail@plt+0xf674>
   20db0:	ldr	r0, [fp, #-84]	; 0xffffffac
   20db4:	ldrb	r0, [r0, #16]
   20db8:	and	r0, r0, #1
   20dbc:	and	r0, r0, #255	; 0xff
   20dc0:	cmp	r0, #0
   20dc4:	beq	20f0c <__assert_fail@plt+0xf7b8>
   20dc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20dcc:	ldrb	r1, [r0, #88]	; 0x58
   20dd0:	bic	r1, r1, #2
   20dd4:	movw	r2, #2
   20dd8:	orr	r1, r1, r2
   20ddc:	strb	r1, [r0, #88]	; 0x58
   20de0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20de4:	mvn	r1, #255	; 0xff
   20de8:	and	r0, r0, r1
   20dec:	orr	r0, r0, #6
   20df0:	str	r0, [fp, #-72]	; 0xffffffb8
   20df4:	ldr	r0, [fp, #-84]	; 0xffffffac
   20df8:	str	r0, [fp, #-76]	; 0xffffffb4
   20dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20e00:	movw	r1, #0
   20e04:	str	r1, [sp, #44]	; 0x2c
   20e08:	ldr	r2, [sp, #44]	; 0x2c
   20e0c:	sub	r3, fp, #76	; 0x4c
   20e10:	bl	20348 <__assert_fail@plt+0xebf4>
   20e14:	str	r0, [sp, #92]	; 0x5c
   20e18:	ldr	r0, [sp, #92]	; 0x5c
   20e1c:	movw	r1, #0
   20e20:	cmp	r0, r1
   20e24:	bne	20e2c <__assert_fail@plt+0xf6d8>
   20e28:	b	20f70 <__assert_fail@plt+0xf81c>
   20e2c:	movw	r0, #0
   20e30:	str	r0, [sp, #88]	; 0x58
   20e34:	ldr	r0, [sp, #88]	; 0x58
   20e38:	cmp	r0, #8
   20e3c:	bge	20e70 <__assert_fail@plt+0xf71c>
   20e40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20e44:	ldr	r1, [sp, #88]	; 0x58
   20e48:	add	r0, r0, r1, lsl #2
   20e4c:	ldr	r0, [r0]
   20e50:	cmp	r0, #0
   20e54:	beq	20e5c <__assert_fail@plt+0xf708>
   20e58:	b	20e70 <__assert_fail@plt+0xf71c>
   20e5c:	b	20e60 <__assert_fail@plt+0xf70c>
   20e60:	ldr	r0, [sp, #88]	; 0x58
   20e64:	add	r0, r0, #1
   20e68:	str	r0, [sp, #88]	; 0x58
   20e6c:	b	20e34 <__assert_fail@plt+0xf6e0>
   20e70:	ldr	r0, [sp, #88]	; 0x58
   20e74:	cmp	r0, #8
   20e78:	bge	20ef8 <__assert_fail@plt+0xf7a4>
   20e7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20e80:	mvn	r1, #255	; 0xff
   20e84:	and	r0, r0, r1
   20e88:	orr	r0, r0, #3
   20e8c:	str	r0, [fp, #-72]	; 0xffffffb8
   20e90:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20e94:	str	r0, [fp, #-76]	; 0xffffffb4
   20e98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20e9c:	movw	r1, #0
   20ea0:	str	r1, [sp, #40]	; 0x28
   20ea4:	ldr	r2, [sp, #40]	; 0x28
   20ea8:	sub	r3, fp, #76	; 0x4c
   20eac:	bl	20348 <__assert_fail@plt+0xebf4>
   20eb0:	str	r0, [fp, #-112]	; 0xffffff90
   20eb4:	ldr	r0, [fp, #-112]	; 0xffffff90
   20eb8:	movw	r1, #0
   20ebc:	cmp	r0, r1
   20ec0:	bne	20ec8 <__assert_fail@plt+0xf774>
   20ec4:	b	20f70 <__assert_fail@plt+0xf81c>
   20ec8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20ecc:	ldr	r1, [fp, #-112]	; 0xffffff90
   20ed0:	ldr	r2, [sp, #92]	; 0x5c
   20ed4:	movw	r3, #10
   20ed8:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   20edc:	str	r0, [fp, #-112]	; 0xffffff90
   20ee0:	ldr	r0, [fp, #-112]	; 0xffffff90
   20ee4:	movw	r1, #0
   20ee8:	cmp	r0, r1
   20eec:	bne	20ef4 <__assert_fail@plt+0xf7a0>
   20ef0:	b	20f70 <__assert_fail@plt+0xf81c>
   20ef4:	b	20f08 <__assert_fail@plt+0xf7b4>
   20ef8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20efc:	bl	1604c <__assert_fail@plt+0x48f8>
   20f00:	ldr	r0, [sp, #92]	; 0x5c
   20f04:	str	r0, [fp, #-112]	; 0xffffff90
   20f08:	b	20f64 <__assert_fail@plt+0xf810>
   20f0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   20f10:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   20f14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20f18:	mvn	lr, #255	; 0xff
   20f1c:	and	r0, r0, lr
   20f20:	orr	r0, r0, #3
   20f24:	str	r0, [fp, #-72]	; 0xffffffb8
   20f28:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20f2c:	str	r0, [fp, #-76]	; 0xffffffb4
   20f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20f34:	movw	lr, #0
   20f38:	mov	r1, lr
   20f3c:	mov	r2, lr
   20f40:	sub	r3, fp, #76	; 0x4c
   20f44:	bl	20348 <__assert_fail@plt+0xebf4>
   20f48:	str	r0, [fp, #-112]	; 0xffffff90
   20f4c:	ldr	r0, [fp, #-112]	; 0xffffff90
   20f50:	movw	r1, #0
   20f54:	cmp	r0, r1
   20f58:	bne	20f60 <__assert_fail@plt+0xf80c>
   20f5c:	b	20f70 <__assert_fail@plt+0xf81c>
   20f60:	b	20f64 <__assert_fail@plt+0xf810>
   20f64:	ldr	r0, [fp, #-112]	; 0xffffff90
   20f68:	str	r0, [fp, #-28]	; 0xffffffe4
   20f6c:	b	20f94 <__assert_fail@plt+0xf840>
   20f70:	ldr	r0, [fp, #8]
   20f74:	movw	r1, #12
   20f78:	str	r1, [r0]
   20f7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20f80:	bl	1604c <__assert_fail@plt+0x48f8>
   20f84:	ldr	r0, [fp, #-84]	; 0xffffffac
   20f88:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   20f8c:	movw	r0, #0
   20f90:	str	r0, [fp, #-28]	; 0xffffffe4
   20f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f98:	sub	sp, fp, #24
   20f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20fa0:	push	{fp, lr}
   20fa4:	mov	fp, sp
   20fa8:	sub	sp, sp, #32
   20fac:	str	r0, [fp, #-4]
   20fb0:	mov	r0, #0
   20fb4:	str	r0, [fp, #-8]
   20fb8:	str	r0, [sp, #16]
   20fbc:	ldr	r0, [fp, #-4]
   20fc0:	ldrb	r1, [r0, #88]	; 0x58
   20fc4:	orr	r1, r1, #16
   20fc8:	strb	r1, [r0, #88]	; 0x58
   20fcc:	ldr	r0, [fp, #-4]
   20fd0:	ldrb	r0, [r0, #88]	; 0x58
   20fd4:	ubfx	r0, r0, #3, #1
   20fd8:	and	r0, r0, #255	; 0xff
   20fdc:	cmp	r0, #0
   20fe0:	bne	21098 <__assert_fail@plt+0xf944>
   20fe4:	mov	r0, #0
   20fe8:	str	r0, [sp, #12]
   20fec:	movw	r0, #0
   20ff0:	movt	r0, #1023	; 0x3ff
   20ff4:	str	r0, [sp, #8]
   20ff8:	mvn	r0, #2013265921	; 0x78000001
   20ffc:	str	r0, [sp, #4]
   21000:	mvn	r0, #-134217727	; 0xf8000001
   21004:	str	r0, [sp]
   21008:	ldr	r0, [sp, #12]
   2100c:	ldr	r1, [fp, #-4]
   21010:	str	r0, [r1, #96]	; 0x60
   21014:	ldr	r0, [sp, #8]
   21018:	ldr	r1, [fp, #-4]
   2101c:	str	r0, [r1, #100]	; 0x64
   21020:	ldr	r0, [sp, #4]
   21024:	ldr	r1, [fp, #-4]
   21028:	str	r0, [r1, #104]	; 0x68
   2102c:	ldr	r0, [sp]
   21030:	ldr	r1, [fp, #-4]
   21034:	str	r0, [r1, #108]	; 0x6c
   21038:	mov	r0, #4
   2103c:	str	r0, [fp, #-8]
   21040:	mov	r0, #128	; 0x80
   21044:	str	r0, [sp, #16]
   21048:	ldr	r0, [fp, #-4]
   2104c:	ldrb	r0, [r0, #88]	; 0x58
   21050:	ubfx	r0, r0, #2, #1
   21054:	and	r0, r0, #255	; 0xff
   21058:	cmp	r0, #0
   2105c:	beq	21094 <__assert_fail@plt+0xf940>
   21060:	ldr	r0, [fp, #-4]
   21064:	add	r0, r0, #96	; 0x60
   21068:	ldr	r1, [fp, #-8]
   2106c:	add	r0, r0, r1, lsl #2
   21070:	ldr	r1, [sp, #16]
   21074:	movw	r2, #256	; 0x100
   21078:	sub	r1, r2, r1
   2107c:	movw	r2, #8
   21080:	sdiv	r2, r1, r2
   21084:	movw	r1, #0
   21088:	and	r1, r1, #255	; 0xff
   2108c:	bl	11658 <memset@plt>
   21090:	b	21148 <__assert_fail@plt+0xf9f4>
   21094:	b	21098 <__assert_fail@plt+0xf944>
   21098:	b	2109c <__assert_fail@plt+0xf948>
   2109c:	b	210a0 <__assert_fail@plt+0xf94c>
   210a0:	ldr	r0, [fp, #-8]
   210a4:	cmp	r0, #8
   210a8:	bge	21148 <__assert_fail@plt+0xf9f4>
   210ac:	movw	r0, #0
   210b0:	str	r0, [fp, #-12]
   210b4:	ldr	r0, [fp, #-12]
   210b8:	cmp	r0, #32
   210bc:	bge	21134 <__assert_fail@plt+0xf9e0>
   210c0:	bl	115e0 <__ctype_b_loc@plt>
   210c4:	ldr	r0, [r0]
   210c8:	ldr	lr, [sp, #16]
   210cc:	add	r0, r0, lr, lsl #1
   210d0:	ldrh	r0, [r0]
   210d4:	and	r0, r0, #8
   210d8:	cmp	r0, #0
   210dc:	bne	210ec <__assert_fail@plt+0xf998>
   210e0:	ldr	r0, [sp, #16]
   210e4:	cmp	r0, #95	; 0x5f
   210e8:	bne	21114 <__assert_fail@plt+0xf9c0>
   210ec:	ldr	r0, [fp, #-12]
   210f0:	mov	r1, #1
   210f4:	lsl	r0, r1, r0
   210f8:	ldr	r1, [fp, #-4]
   210fc:	add	r1, r1, #96	; 0x60
   21100:	ldr	r2, [fp, #-8]
   21104:	add	r1, r1, r2, lsl #2
   21108:	ldr	r2, [r1]
   2110c:	orr	r0, r2, r0
   21110:	str	r0, [r1]
   21114:	b	21118 <__assert_fail@plt+0xf9c4>
   21118:	ldr	r0, [fp, #-12]
   2111c:	add	r0, r0, #1
   21120:	str	r0, [fp, #-12]
   21124:	ldr	r0, [sp, #16]
   21128:	add	r0, r0, #1
   2112c:	str	r0, [sp, #16]
   21130:	b	210b4 <__assert_fail@plt+0xf960>
   21134:	b	21138 <__assert_fail@plt+0xf9e4>
   21138:	ldr	r0, [fp, #-8]
   2113c:	add	r0, r0, #1
   21140:	str	r0, [fp, #-8]
   21144:	b	210a0 <__assert_fail@plt+0xf94c>
   21148:	mov	sp, fp
   2114c:	pop	{fp, pc}
   21150:	push	{fp, lr}
   21154:	mov	fp, sp
   21158:	sub	sp, sp, #80	; 0x50
   2115c:	ldr	ip, [fp, #12]
   21160:	ldr	lr, [fp, #8]
   21164:	str	r0, [fp, #-8]
   21168:	str	r1, [fp, #-12]
   2116c:	str	r2, [fp, #-16]
   21170:	str	r3, [fp, #-20]	; 0xffffffec
   21174:	and	r0, lr, #1
   21178:	strb	r0, [fp, #-21]	; 0xffffffeb
   2117c:	movw	r0, #0
   21180:	str	r0, [fp, #-36]	; 0xffffffdc
   21184:	movw	r0, #32
   21188:	movw	r1, #1
   2118c:	str	ip, [sp, #20]
   21190:	bl	389e0 <__assert_fail@plt+0x2728c>
   21194:	str	r0, [fp, #-28]	; 0xffffffe4
   21198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2119c:	movw	r1, #0
   211a0:	cmp	r0, r1
   211a4:	bne	211c0 <__assert_fail@plt+0xfa6c>
   211a8:	ldr	r0, [fp, #12]
   211ac:	movw	r1, #12
   211b0:	str	r1, [r0]
   211b4:	movw	r0, #0
   211b8:	str	r0, [fp, #-4]
   211bc:	b	21474 <__assert_fail@plt+0xfd20>
   211c0:	movw	r0, #40	; 0x28
   211c4:	movw	r1, #1
   211c8:	bl	389e0 <__assert_fail@plt+0x2728c>
   211cc:	str	r0, [fp, #-32]	; 0xffffffe0
   211d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   211d4:	movw	r1, #0
   211d8:	cmp	r0, r1
   211dc:	bne	21200 <__assert_fail@plt+0xfaac>
   211e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   211e4:	bl	1604c <__assert_fail@plt+0x48f8>
   211e8:	ldr	r0, [fp, #12]
   211ec:	movw	lr, #12
   211f0:	str	lr, [r0]
   211f4:	movw	r0, #0
   211f8:	str	r0, [fp, #-4]
   211fc:	b	21474 <__assert_fail@plt+0xfd20>
   21200:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   21204:	and	r0, r0, #1
   21208:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2120c:	ldrb	r2, [r1, #16]
   21210:	bic	r2, r2, #1
   21214:	orr	r0, r2, r0
   21218:	strb	r0, [r1, #16]
   2121c:	ldr	r0, [fp, #-12]
   21220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21224:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21228:	ldr	r3, [fp, #-16]
   2122c:	sub	ip, fp, #36	; 0x24
   21230:	str	r3, [sp, #16]
   21234:	mov	r3, ip
   21238:	ldr	ip, [sp, #16]
   2123c:	str	ip, [sp]
   21240:	movw	lr, #0
   21244:	str	lr, [sp, #4]
   21248:	bl	225a4 <__assert_fail@plt+0x10e50>
   2124c:	str	r0, [sp, #40]	; 0x28
   21250:	ldr	r0, [sp, #40]	; 0x28
   21254:	cmp	r0, #0
   21258:	beq	21284 <__assert_fail@plt+0xfb30>
   2125c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21260:	bl	1604c <__assert_fail@plt+0x48f8>
   21264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21268:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   2126c:	ldr	r0, [sp, #40]	; 0x28
   21270:	ldr	lr, [fp, #12]
   21274:	str	r0, [lr]
   21278:	movw	r0, #0
   2127c:	str	r0, [fp, #-4]
   21280:	b	21474 <__assert_fail@plt+0xfd20>
   21284:	b	21288 <__assert_fail@plt+0xfb34>
   21288:	ldr	r0, [fp, #-20]	; 0xffffffec
   2128c:	ldrsb	r0, [r0]
   21290:	cmp	r0, #0
   21294:	beq	212b8 <__assert_fail@plt+0xfb64>
   21298:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2129c:	ldr	r1, [fp, #-20]	; 0xffffffec
   212a0:	ldrb	r1, [r1]
   212a4:	bl	21e50 <__assert_fail@plt+0x106fc>
   212a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   212ac:	add	r0, r0, #1
   212b0:	str	r0, [fp, #-20]	; 0xffffffec
   212b4:	b	21288 <__assert_fail@plt+0xfb34>
   212b8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   212bc:	tst	r0, #1
   212c0:	beq	212cc <__assert_fail@plt+0xfb78>
   212c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   212c8:	bl	2324c <__assert_fail@plt+0x11af8>
   212cc:	ldr	r0, [fp, #-8]
   212d0:	ldr	r0, [r0, #92]	; 0x5c
   212d4:	cmp	r0, #1
   212d8:	ble	212ec <__assert_fail@plt+0xfb98>
   212dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   212e0:	ldr	r1, [fp, #-8]
   212e4:	ldr	r1, [r1, #60]	; 0x3c
   212e8:	bl	23294 <__assert_fail@plt+0x11b40>
   212ec:	ldr	r0, [pc, #396]	; 21480 <__assert_fail@plt+0xfd2c>
   212f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   212f4:	str	r1, [sp, #28]
   212f8:	ldr	r1, [sp, #32]
   212fc:	mvn	r2, #255	; 0xff
   21300:	and	r1, r1, r2
   21304:	orr	r1, r1, #3
   21308:	str	r1, [sp, #32]
   2130c:	ldr	r1, [sp, #32]
   21310:	and	r0, r1, r0
   21314:	str	r0, [sp, #32]
   21318:	ldr	r0, [sp, #32]
   2131c:	mvn	r1, #262144	; 0x40000
   21320:	and	r0, r0, r1
   21324:	str	r0, [sp, #32]
   21328:	ldr	r0, [sp, #32]
   2132c:	mvn	r1, #524288	; 0x80000
   21330:	and	r0, r0, r1
   21334:	str	r0, [sp, #32]
   21338:	ldr	r0, [sp, #32]
   2133c:	mvn	r1, #1048576	; 0x100000
   21340:	and	r0, r0, r1
   21344:	str	r0, [sp, #32]
   21348:	ldr	r0, [sp, #32]
   2134c:	mvn	r1, #2097152	; 0x200000
   21350:	and	r0, r0, r1
   21354:	str	r0, [sp, #32]
   21358:	ldr	r0, [sp, #32]
   2135c:	mvn	r1, #4194304	; 0x400000
   21360:	and	r0, r0, r1
   21364:	str	r0, [sp, #32]
   21368:	ldr	r0, [fp, #-8]
   2136c:	movw	r1, #0
   21370:	str	r1, [sp, #12]
   21374:	ldr	r2, [sp, #12]
   21378:	add	r3, sp, #28
   2137c:	bl	20348 <__assert_fail@plt+0xebf4>
   21380:	str	r0, [sp, #36]	; 0x24
   21384:	ldr	r0, [sp, #36]	; 0x24
   21388:	movw	r1, #0
   2138c:	cmp	r0, r1
   21390:	bne	21398 <__assert_fail@plt+0xfc44>
   21394:	b	21450 <__assert_fail@plt+0xfcfc>
   21398:	ldr	r0, [fp, #-8]
   2139c:	ldr	r0, [r0, #92]	; 0x5c
   213a0:	cmp	r0, #1
   213a4:	ble	21438 <__assert_fail@plt+0xfce4>
   213a8:	mov	r0, #6
   213ac:	strb	r0, [sp, #32]
   213b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   213b4:	str	r0, [sp, #28]
   213b8:	ldr	r0, [fp, #-8]
   213bc:	ldrb	r1, [r0, #88]	; 0x58
   213c0:	bic	r1, r1, #2
   213c4:	movw	r2, #2
   213c8:	orr	r1, r1, r2
   213cc:	strb	r1, [r0, #88]	; 0x58
   213d0:	ldr	r0, [fp, #-8]
   213d4:	movw	r1, #0
   213d8:	str	r1, [sp, #8]
   213dc:	ldr	r2, [sp, #8]
   213e0:	add	r3, sp, #28
   213e4:	bl	20348 <__assert_fail@plt+0xebf4>
   213e8:	str	r0, [sp, #24]
   213ec:	ldr	r0, [sp, #24]
   213f0:	movw	r1, #0
   213f4:	cmp	r0, r1
   213f8:	bne	21400 <__assert_fail@plt+0xfcac>
   213fc:	b	21450 <__assert_fail@plt+0xfcfc>
   21400:	ldr	r0, [fp, #-8]
   21404:	ldr	r1, [sp, #36]	; 0x24
   21408:	ldr	r2, [sp, #24]
   2140c:	movw	r3, #10
   21410:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   21414:	str	r0, [sp, #36]	; 0x24
   21418:	ldr	r0, [sp, #24]
   2141c:	movw	r1, #0
   21420:	cmp	r0, r1
   21424:	beq	21434 <__assert_fail@plt+0xfce0>
   21428:	ldr	r0, [sp, #36]	; 0x24
   2142c:	str	r0, [fp, #-4]
   21430:	b	21474 <__assert_fail@plt+0xfd20>
   21434:	b	2144c <__assert_fail@plt+0xfcf8>
   21438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2143c:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   21440:	ldr	r0, [sp, #36]	; 0x24
   21444:	str	r0, [fp, #-4]
   21448:	b	21474 <__assert_fail@plt+0xfd20>
   2144c:	b	21450 <__assert_fail@plt+0xfcfc>
   21450:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21454:	bl	1604c <__assert_fail@plt+0x48f8>
   21458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2145c:	bl	1b8e0 <__assert_fail@plt+0xa18c>
   21460:	ldr	r0, [fp, #12]
   21464:	movw	lr, #12
   21468:	str	lr, [r0]
   2146c:	movw	r0, #0
   21470:	str	r0, [fp, #-4]
   21474:	ldr	r0, [fp, #-4]
   21478:	mov	sp, fp
   2147c:	pop	{fp, pc}
   21480:			; <UNDEFINED> instruction: 0xfffc00ff
   21484:	push	{fp, lr}
   21488:	mov	fp, sp
   2148c:	sub	sp, sp, #112	; 0x70
   21490:	ldr	ip, [fp, #12]
   21494:	ldr	lr, [fp, #8]
   21498:	str	r0, [fp, #-8]
   2149c:	str	r1, [fp, #-12]
   214a0:	str	r2, [fp, #-16]
   214a4:	str	r3, [fp, #-20]	; 0xffffffec
   214a8:	movw	r0, #0
   214ac:	str	r0, [fp, #-24]	; 0xffffffe8
   214b0:	str	r0, [fp, #-28]	; 0xffffffe4
   214b4:	ldr	r0, [fp, #-12]
   214b8:	ldr	r0, [r0, #40]	; 0x28
   214bc:	str	r0, [fp, #-44]	; 0xffffffd4
   214c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   214c4:	ldr	r1, [r0]
   214c8:	str	r1, [fp, #-52]	; 0xffffffcc
   214cc:	ldr	r0, [r0, #4]
   214d0:	str	r0, [fp, #-48]	; 0xffffffd0
   214d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   214d8:	ldr	r0, [r0, #4]
   214dc:	and	r0, r0, #255	; 0xff
   214e0:	cmp	r0, #23
   214e4:	str	lr, [sp, #52]	; 0x34
   214e8:	str	ip, [sp, #48]	; 0x30
   214ec:	bne	21770 <__assert_fail@plt+0x1001c>
   214f0:	movw	r0, #0
   214f4:	str	r0, [fp, #-40]	; 0xffffffd8
   214f8:	ldr	r0, [fp, #-12]
   214fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   21500:	ldr	r2, [fp, #8]
   21504:	bl	23758 <__assert_fail@plt+0x12004>
   21508:	str	r0, [fp, #-36]	; 0xffffffdc
   2150c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21510:	cmn	r0, #1
   21514:	bne	21564 <__assert_fail@plt+0xfe10>
   21518:	ldr	r0, [fp, #-20]	; 0xffffffec
   2151c:	ldr	r0, [r0, #4]
   21520:	and	r0, r0, #255	; 0xff
   21524:	cmp	r0, #1
   21528:	bne	21548 <__assert_fail@plt+0xfdf4>
   2152c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21530:	ldrb	r0, [r0]
   21534:	cmp	r0, #44	; 0x2c
   21538:	bne	21548 <__assert_fail@plt+0xfdf4>
   2153c:	movw	r0, #0
   21540:	str	r0, [fp, #-36]	; 0xffffffdc
   21544:	b	21560 <__assert_fail@plt+0xfe0c>
   21548:	ldr	r0, [fp, #12]
   2154c:	movw	r1, #10
   21550:	str	r1, [r0]
   21554:	movw	r0, #0
   21558:	str	r0, [fp, #-4]
   2155c:	b	21ad4 <__assert_fail@plt+0x10380>
   21560:	b	21564 <__assert_fail@plt+0xfe10>
   21564:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21568:	cmn	r0, #2
   2156c:	beq	215e8 <__assert_fail@plt+0xfe94>
   21570:	ldr	r0, [fp, #-20]	; 0xffffffec
   21574:	ldr	r0, [r0, #4]
   21578:	and	r0, r0, #255	; 0xff
   2157c:	cmp	r0, #24
   21580:	bne	21590 <__assert_fail@plt+0xfe3c>
   21584:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21588:	str	r0, [sp, #44]	; 0x2c
   2158c:	b	215e0 <__assert_fail@plt+0xfe8c>
   21590:	ldr	r0, [fp, #-20]	; 0xffffffec
   21594:	ldr	r0, [r0, #4]
   21598:	and	r0, r0, #255	; 0xff
   2159c:	cmp	r0, #1
   215a0:	bne	215cc <__assert_fail@plt+0xfe78>
   215a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   215a8:	ldrb	r0, [r0]
   215ac:	cmp	r0, #44	; 0x2c
   215b0:	bne	215cc <__assert_fail@plt+0xfe78>
   215b4:	ldr	r0, [fp, #-12]
   215b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   215bc:	ldr	r2, [fp, #8]
   215c0:	bl	23758 <__assert_fail@plt+0x12004>
   215c4:	str	r0, [sp, #40]	; 0x28
   215c8:	b	215d8 <__assert_fail@plt+0xfe84>
   215cc:	mvn	r0, #1
   215d0:	str	r0, [sp, #40]	; 0x28
   215d4:	b	215d8 <__assert_fail@plt+0xfe84>
   215d8:	ldr	r0, [sp, #40]	; 0x28
   215dc:	str	r0, [sp, #44]	; 0x2c
   215e0:	ldr	r0, [sp, #44]	; 0x2c
   215e4:	str	r0, [fp, #-40]	; 0xffffffd8
   215e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   215ec:	cmn	r0, #2
   215f0:	movw	r0, #1
   215f4:	str	r0, [sp, #36]	; 0x24
   215f8:	beq	21610 <__assert_fail@plt+0xfebc>
   215fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21600:	cmn	r0, #2
   21604:	movw	r0, #0
   21608:	moveq	r0, #1
   2160c:	str	r0, [sp, #36]	; 0x24
   21610:	ldr	r0, [sp, #36]	; 0x24
   21614:	tst	r0, #1
   21618:	beq	216c0 <__assert_fail@plt+0xff6c>
   2161c:	ldr	r0, [fp, #8]
   21620:	and	r0, r0, #2097152	; 0x200000
   21624:	cmp	r0, #0
   21628:	movw	r0, #0
   2162c:	movne	r0, #1
   21630:	mvn	r1, #0
   21634:	eor	r0, r0, r1
   21638:	tst	r0, #1
   2163c:	beq	2167c <__assert_fail@plt+0xff28>
   21640:	ldr	r0, [fp, #-20]	; 0xffffffec
   21644:	ldr	r0, [r0, #4]
   21648:	and	r0, r0, #255	; 0xff
   2164c:	cmp	r0, #2
   21650:	bne	21664 <__assert_fail@plt+0xff10>
   21654:	ldr	r0, [fp, #12]
   21658:	movw	r1, #9
   2165c:	str	r1, [r0]
   21660:	b	21670 <__assert_fail@plt+0xff1c>
   21664:	ldr	r0, [fp, #12]
   21668:	movw	r1, #10
   2166c:	str	r1, [r0]
   21670:	movw	r0, #0
   21674:	str	r0, [fp, #-4]
   21678:	b	21ad4 <__assert_fail@plt+0x10380>
   2167c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21680:	ldr	r1, [fp, #-12]
   21684:	str	r0, [r1, #40]	; 0x28
   21688:	ldr	r0, [fp, #-20]	; 0xffffffec
   2168c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21690:	str	r1, [r0]
   21694:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21698:	str	r1, [r0, #4]
   2169c:	ldr	r0, [fp, #-20]	; 0xffffffec
   216a0:	ldr	r1, [r0, #4]
   216a4:	mvn	r2, #255	; 0xff
   216a8:	and	r1, r1, r2
   216ac:	orr	r1, r1, #1
   216b0:	str	r1, [r0, #4]
   216b4:	ldr	r0, [fp, #-8]
   216b8:	str	r0, [fp, #-4]
   216bc:	b	21ad4 <__assert_fail@plt+0x10380>
   216c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   216c4:	cmn	r0, #1
   216c8:	beq	216e4 <__assert_fail@plt+0xff90>
   216cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   216d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   216d4:	cmp	r0, r1
   216d8:	movw	r0, #1
   216dc:	str	r0, [sp, #32]
   216e0:	bgt	21700 <__assert_fail@plt+0xffac>
   216e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   216e8:	ldr	r0, [r0, #4]
   216ec:	and	r0, r0, #255	; 0xff
   216f0:	cmp	r0, #24
   216f4:	movw	r0, #0
   216f8:	movne	r0, #1
   216fc:	str	r0, [sp, #32]
   21700:	ldr	r0, [sp, #32]
   21704:	tst	r0, #1
   21708:	beq	21724 <__assert_fail@plt+0xffd0>
   2170c:	ldr	r0, [fp, #12]
   21710:	movw	r1, #10
   21714:	str	r1, [r0]
   21718:	movw	r0, #0
   2171c:	str	r0, [fp, #-4]
   21720:	b	21ad4 <__assert_fail@plt+0x10380>
   21724:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21728:	cmn	r0, #1
   2172c:	bne	2173c <__assert_fail@plt+0xffe8>
   21730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21734:	str	r0, [sp, #28]
   21738:	b	21744 <__assert_fail@plt+0xfff0>
   2173c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21740:	str	r0, [sp, #28]
   21744:	ldr	r0, [sp, #28]
   21748:	movw	r1, #32767	; 0x7fff
   2174c:	cmp	r1, r0
   21750:	bge	2176c <__assert_fail@plt+0x10018>
   21754:	ldr	r0, [fp, #12]
   21758:	movw	r1, #15
   2175c:	str	r1, [r0]
   21760:	movw	r0, #0
   21764:	str	r0, [fp, #-4]
   21768:	b	21ad4 <__assert_fail@plt+0x10380>
   2176c:	b	217c0 <__assert_fail@plt+0x1006c>
   21770:	ldr	r0, [fp, #-20]	; 0xffffffec
   21774:	ldr	r0, [r0, #4]
   21778:	and	r0, r0, #255	; 0xff
   2177c:	cmp	r0, #18
   21780:	movw	r0, #0
   21784:	moveq	r0, #1
   21788:	tst	r0, #1
   2178c:	movw	r0, #1
   21790:	mov	r1, r0
   21794:	moveq	r1, #0
   21798:	str	r1, [fp, #-36]	; 0xffffffdc
   2179c:	ldr	r1, [fp, #-20]	; 0xffffffec
   217a0:	ldr	r1, [r1, #4]
   217a4:	and	r1, r1, #255	; 0xff
   217a8:	cmp	r1, #19
   217ac:	movw	r1, #0
   217b0:	moveq	r1, #1
   217b4:	tst	r1, #1
   217b8:	mvneq	r0, #0
   217bc:	str	r0, [fp, #-40]	; 0xffffffd8
   217c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   217c4:	ldr	r1, [fp, #-12]
   217c8:	ldr	r2, [fp, #8]
   217cc:	bl	1e020 <__assert_fail@plt+0xc8cc>
   217d0:	ldr	r0, [fp, #-8]
   217d4:	movw	r1, #0
   217d8:	cmp	r0, r1
   217dc:	bne	217ec <__assert_fail@plt+0x10098>
   217e0:	movw	r0, #0
   217e4:	str	r0, [fp, #-4]
   217e8:	b	21ad4 <__assert_fail@plt+0x10380>
   217ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   217f0:	cmp	r0, #0
   217f4:	movw	r0, #0
   217f8:	str	r0, [sp, #24]
   217fc:	bne	21814 <__assert_fail@plt+0x100c0>
   21800:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21804:	cmp	r0, #0
   21808:	movw	r0, #0
   2180c:	moveq	r0, #1
   21810:	str	r0, [sp, #24]
   21814:	ldr	r0, [sp, #24]
   21818:	tst	r0, #1
   2181c:	beq	21844 <__assert_fail@plt+0x100f0>
   21820:	ldr	r0, [fp, #-8]
   21824:	movw	r1, #63532	; 0xf82c
   21828:	movt	r1, #1
   2182c:	movw	r2, #0
   21830:	bl	1f6bc <__assert_fail@plt+0xdf68>
   21834:	movw	r1, #0
   21838:	str	r1, [fp, #-4]
   2183c:	str	r0, [sp, #20]
   21840:	b	21ad4 <__assert_fail@plt+0x10380>
   21844:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21848:	cmp	r0, #0
   2184c:	ble	21938 <__assert_fail@plt+0x101e4>
   21850:	ldr	r0, [fp, #-8]
   21854:	str	r0, [fp, #-24]	; 0xffffffe8
   21858:	movw	r0, #2
   2185c:	str	r0, [fp, #-32]	; 0xffffffe0
   21860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21864:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21868:	cmp	r0, r1
   2186c:	bgt	218ec <__assert_fail@plt+0x10198>
   21870:	ldr	r0, [fp, #-8]
   21874:	ldr	r1, [fp, #-16]
   21878:	bl	238b8 <__assert_fail@plt+0x12164>
   2187c:	str	r0, [fp, #-8]
   21880:	ldr	r0, [fp, #-16]
   21884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21888:	ldr	r2, [fp, #-8]
   2188c:	movw	r3, #16
   21890:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   21894:	str	r0, [fp, #-24]	; 0xffffffe8
   21898:	ldr	r0, [fp, #-8]
   2189c:	movw	r1, #0
   218a0:	cmp	r0, r1
   218a4:	movw	r0, #1
   218a8:	str	r0, [sp, #16]
   218ac:	beq	218c8 <__assert_fail@plt+0x10174>
   218b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218b4:	movw	r1, #0
   218b8:	cmp	r0, r1
   218bc:	movw	r0, #0
   218c0:	moveq	r0, #1
   218c4:	str	r0, [sp, #16]
   218c8:	ldr	r0, [sp, #16]
   218cc:	tst	r0, #1
   218d0:	beq	218d8 <__assert_fail@plt+0x10184>
   218d4:	b	21ac0 <__assert_fail@plt+0x1036c>
   218d8:	b	218dc <__assert_fail@plt+0x10188>
   218dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   218e0:	add	r0, r0, #1
   218e4:	str	r0, [fp, #-32]	; 0xffffffe0
   218e8:	b	21860 <__assert_fail@plt+0x1010c>
   218ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   218f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   218f4:	cmp	r0, r1
   218f8:	bne	21908 <__assert_fail@plt+0x101b4>
   218fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21900:	str	r0, [fp, #-4]
   21904:	b	21ad4 <__assert_fail@plt+0x10380>
   21908:	ldr	r0, [fp, #-8]
   2190c:	ldr	r1, [fp, #-16]
   21910:	bl	238b8 <__assert_fail@plt+0x12164>
   21914:	str	r0, [fp, #-8]
   21918:	ldr	r0, [fp, #-8]
   2191c:	movw	r1, #0
   21920:	cmp	r0, r1
   21924:	bne	2192c <__assert_fail@plt+0x101d8>
   21928:	b	21ac0 <__assert_fail@plt+0x1036c>
   2192c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21930:	str	r0, [fp, #-28]	; 0xffffffe4
   21934:	b	21940 <__assert_fail@plt+0x101ec>
   21938:	movw	r0, #0
   2193c:	str	r0, [fp, #-28]	; 0xffffffe4
   21940:	ldr	r0, [fp, #-8]
   21944:	ldr	r0, [r0, #24]
   21948:	and	r0, r0, #255	; 0xff
   2194c:	cmp	r0, #17
   21950:	bne	21978 <__assert_fail@plt+0x10224>
   21954:	ldr	r0, [fp, #-8]
   21958:	ldr	r0, [r0, #20]
   2195c:	str	r0, [sp, #56]	; 0x38
   21960:	ldr	r0, [fp, #-8]
   21964:	ldr	r2, [sp, #56]	; 0x38
   21968:	movw	r1, #14920	; 0x3a48
   2196c:	movt	r1, #2
   21970:	bl	1f6bc <__assert_fail@plt+0xdf68>
   21974:	str	r0, [sp, #12]
   21978:	ldr	r0, [fp, #-16]
   2197c:	ldr	r1, [fp, #-8]
   21980:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21984:	cmn	r2, #1
   21988:	movw	r2, #0
   2198c:	moveq	r2, #1
   21990:	tst	r2, #1
   21994:	movw	r2, #11
   21998:	moveq	r2, #10
   2199c:	movw	r3, #0
   219a0:	str	r2, [sp, #8]
   219a4:	mov	r2, r3
   219a8:	ldr	r3, [sp, #8]
   219ac:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   219b0:	str	r0, [fp, #-24]	; 0xffffffe8
   219b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   219b8:	movw	r1, #0
   219bc:	cmp	r0, r1
   219c0:	bne	219c8 <__assert_fail@plt+0x10274>
   219c4:	b	21ac0 <__assert_fail@plt+0x1036c>
   219c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   219cc:	add	r0, r0, #2
   219d0:	str	r0, [fp, #-32]	; 0xffffffe0
   219d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   219dc:	cmp	r0, r1
   219e0:	bgt	21a8c <__assert_fail@plt+0x10338>
   219e4:	ldr	r0, [fp, #-8]
   219e8:	ldr	r1, [fp, #-16]
   219ec:	bl	238b8 <__assert_fail@plt+0x12164>
   219f0:	str	r0, [fp, #-8]
   219f4:	ldr	r0, [fp, #-16]
   219f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   219fc:	ldr	r2, [fp, #-8]
   21a00:	movw	r3, #16
   21a04:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   21a08:	str	r0, [fp, #-24]	; 0xffffffe8
   21a0c:	ldr	r0, [fp, #-8]
   21a10:	movw	r1, #0
   21a14:	cmp	r0, r1
   21a18:	movw	r0, #1
   21a1c:	str	r0, [sp, #4]
   21a20:	beq	21a3c <__assert_fail@plt+0x102e8>
   21a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a28:	movw	r1, #0
   21a2c:	cmp	r0, r1
   21a30:	movw	r0, #0
   21a34:	moveq	r0, #1
   21a38:	str	r0, [sp, #4]
   21a3c:	ldr	r0, [sp, #4]
   21a40:	tst	r0, #1
   21a44:	beq	21a4c <__assert_fail@plt+0x102f8>
   21a48:	b	21ac0 <__assert_fail@plt+0x1036c>
   21a4c:	ldr	r0, [fp, #-16]
   21a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21a54:	movw	r2, #0
   21a58:	movw	r3, #10
   21a5c:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   21a60:	str	r0, [fp, #-24]	; 0xffffffe8
   21a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a68:	movw	r1, #0
   21a6c:	cmp	r0, r1
   21a70:	bne	21a78 <__assert_fail@plt+0x10324>
   21a74:	b	21ac0 <__assert_fail@plt+0x1036c>
   21a78:	b	21a7c <__assert_fail@plt+0x10328>
   21a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21a80:	add	r0, r0, #1
   21a84:	str	r0, [fp, #-32]	; 0xffffffe0
   21a88:	b	219d4 <__assert_fail@plt+0x10280>
   21a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21a90:	movw	r1, #0
   21a94:	cmp	r0, r1
   21a98:	beq	21ab4 <__assert_fail@plt+0x10360>
   21a9c:	ldr	r0, [fp, #-16]
   21aa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21aa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21aa8:	movw	r3, #16
   21aac:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   21ab0:	str	r0, [fp, #-24]	; 0xffffffe8
   21ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ab8:	str	r0, [fp, #-4]
   21abc:	b	21ad4 <__assert_fail@plt+0x10380>
   21ac0:	ldr	r0, [fp, #12]
   21ac4:	movw	r1, #12
   21ac8:	str	r1, [r0]
   21acc:	movw	r0, #0
   21ad0:	str	r0, [fp, #-4]
   21ad4:	ldr	r0, [fp, #-4]
   21ad8:	mov	sp, fp
   21adc:	pop	{fp, pc}
   21ae0:	sub	sp, sp, #32
   21ae4:	str	r0, [sp, #24]
   21ae8:	str	r1, [sp, #20]
   21aec:	str	r2, [sp, #16]
   21af0:	ldr	r0, [sp, #20]
   21af4:	ldr	r0, [r0, #56]	; 0x38
   21af8:	ldr	r1, [sp, #20]
   21afc:	ldr	r1, [r1, #40]	; 0x28
   21b00:	cmp	r0, r1
   21b04:	bgt	21b2c <__assert_fail@plt+0x103d8>
   21b08:	ldr	r0, [sp, #24]
   21b0c:	ldr	r1, [r0, #4]
   21b10:	mvn	r2, #255	; 0xff
   21b14:	and	r1, r1, r2
   21b18:	orr	r1, r1, #2
   21b1c:	str	r1, [r0, #4]
   21b20:	movw	r0, #0
   21b24:	str	r0, [sp, #28]
   21b28:	b	21e44 <__assert_fail@plt+0x106f0>
   21b2c:	ldr	r0, [sp, #20]
   21b30:	ldr	r0, [r0, #4]
   21b34:	ldr	r1, [sp, #20]
   21b38:	ldr	r1, [r1, #40]	; 0x28
   21b3c:	add	r1, r1, #0
   21b40:	add	r0, r0, r1
   21b44:	ldrb	r0, [r0]
   21b48:	strb	r0, [sp, #15]
   21b4c:	ldrb	r0, [sp, #15]
   21b50:	ldr	r1, [sp, #24]
   21b54:	strb	r0, [r1]
   21b58:	ldr	r0, [sp, #20]
   21b5c:	ldr	r0, [r0, #80]	; 0x50
   21b60:	cmp	r0, #1
   21b64:	ble	21bc0 <__assert_fail@plt+0x1046c>
   21b68:	ldr	r0, [sp, #20]
   21b6c:	ldr	r0, [r0, #40]	; 0x28
   21b70:	ldr	r1, [sp, #20]
   21b74:	ldr	r1, [r1, #28]
   21b78:	cmp	r0, r1
   21b7c:	beq	21bc0 <__assert_fail@plt+0x1046c>
   21b80:	ldr	r0, [sp, #20]
   21b84:	ldr	r1, [r0, #8]
   21b88:	ldr	r0, [r0, #40]	; 0x28
   21b8c:	add	r0, r1, r0, lsl #2
   21b90:	ldr	r0, [r0]
   21b94:	cmn	r0, #1
   21b98:	bne	21bc0 <__assert_fail@plt+0x1046c>
   21b9c:	ldr	r0, [sp, #24]
   21ba0:	ldr	r1, [r0, #4]
   21ba4:	mvn	r2, #255	; 0xff
   21ba8:	and	r1, r1, r2
   21bac:	orr	r1, r1, #1
   21bb0:	str	r1, [r0, #4]
   21bb4:	movw	r0, #1
   21bb8:	str	r0, [sp, #28]
   21bbc:	b	21e44 <__assert_fail@plt+0x106f0>
   21bc0:	ldrb	r0, [sp, #15]
   21bc4:	cmp	r0, #92	; 0x5c
   21bc8:	bne	21c58 <__assert_fail@plt+0x10504>
   21bcc:	ldr	r0, [sp, #16]
   21bd0:	and	r0, r0, #1
   21bd4:	cmp	r0, #0
   21bd8:	beq	21c58 <__assert_fail@plt+0x10504>
   21bdc:	ldr	r0, [sp, #20]
   21be0:	ldr	r0, [r0, #40]	; 0x28
   21be4:	add	r0, r0, #1
   21be8:	ldr	r1, [sp, #20]
   21bec:	ldr	r1, [r1, #48]	; 0x30
   21bf0:	cmp	r0, r1
   21bf4:	bge	21c58 <__assert_fail@plt+0x10504>
   21bf8:	ldr	r0, [sp, #20]
   21bfc:	ldr	r1, [r0, #40]	; 0x28
   21c00:	add	r1, r1, #1
   21c04:	str	r1, [r0, #40]	; 0x28
   21c08:	ldr	r0, [sp, #20]
   21c0c:	ldr	r0, [r0, #4]
   21c10:	ldr	r1, [sp, #20]
   21c14:	ldr	r1, [r1, #40]	; 0x28
   21c18:	add	r1, r1, #0
   21c1c:	add	r0, r0, r1
   21c20:	ldrb	r0, [r0]
   21c24:	strb	r0, [sp, #14]
   21c28:	ldrb	r0, [sp, #14]
   21c2c:	ldr	r1, [sp, #24]
   21c30:	strb	r0, [r1]
   21c34:	ldr	r0, [sp, #24]
   21c38:	ldr	r1, [r0, #4]
   21c3c:	mvn	r2, #255	; 0xff
   21c40:	and	r1, r1, r2
   21c44:	orr	r1, r1, #1
   21c48:	str	r1, [r0, #4]
   21c4c:	movw	r0, #1
   21c50:	str	r0, [sp, #28]
   21c54:	b	21e44 <__assert_fail@plt+0x106f0>
   21c58:	ldrb	r0, [sp, #15]
   21c5c:	cmp	r0, #91	; 0x5b
   21c60:	bne	21d98 <__assert_fail@plt+0x10644>
   21c64:	ldr	r0, [sp, #20]
   21c68:	ldr	r0, [r0, #40]	; 0x28
   21c6c:	add	r0, r0, #1
   21c70:	ldr	r1, [sp, #20]
   21c74:	ldr	r1, [r1, #48]	; 0x30
   21c78:	cmp	r0, r1
   21c7c:	bge	21ca4 <__assert_fail@plt+0x10550>
   21c80:	ldr	r0, [sp, #20]
   21c84:	ldr	r0, [r0, #4]
   21c88:	ldr	r1, [sp, #20]
   21c8c:	ldr	r1, [r1, #40]	; 0x28
   21c90:	add	r1, r1, #1
   21c94:	add	r0, r0, r1
   21c98:	ldrb	r0, [r0]
   21c9c:	strb	r0, [sp, #13]
   21ca0:	b	21cac <__assert_fail@plt+0x10558>
   21ca4:	movw	r0, #0
   21ca8:	strb	r0, [sp, #13]
   21cac:	ldrb	r0, [sp, #13]
   21cb0:	ldr	r1, [sp, #24]
   21cb4:	strb	r0, [r1]
   21cb8:	mov	r0, #2
   21cbc:	str	r0, [sp, #8]
   21cc0:	ldrb	r0, [sp, #13]
   21cc4:	mov	r1, r0
   21cc8:	cmp	r0, #46	; 0x2e
   21ccc:	str	r1, [sp, #4]
   21cd0:	beq	21cf8 <__assert_fail@plt+0x105a4>
   21cd4:	b	21cd8 <__assert_fail@plt+0x10584>
   21cd8:	ldr	r0, [sp, #4]
   21cdc:	cmp	r0, #58	; 0x3a
   21ce0:	beq	21d30 <__assert_fail@plt+0x105dc>
   21ce4:	b	21ce8 <__assert_fail@plt+0x10594>
   21ce8:	ldr	r0, [sp, #4]
   21cec:	cmp	r0, #61	; 0x3d
   21cf0:	beq	21d14 <__assert_fail@plt+0x105c0>
   21cf4:	b	21d60 <__assert_fail@plt+0x1060c>
   21cf8:	ldr	r0, [sp, #24]
   21cfc:	ldr	r1, [r0, #4]
   21d00:	mvn	r2, #255	; 0xff
   21d04:	and	r1, r1, r2
   21d08:	orr	r1, r1, #26
   21d0c:	str	r1, [r0, #4]
   21d10:	b	21d8c <__assert_fail@plt+0x10638>
   21d14:	ldr	r0, [sp, #24]
   21d18:	ldr	r1, [r0, #4]
   21d1c:	mvn	r2, #255	; 0xff
   21d20:	and	r1, r1, r2
   21d24:	orr	r1, r1, #28
   21d28:	str	r1, [r0, #4]
   21d2c:	b	21d8c <__assert_fail@plt+0x10638>
   21d30:	ldr	r0, [sp, #16]
   21d34:	and	r0, r0, #4
   21d38:	cmp	r0, #0
   21d3c:	beq	21d5c <__assert_fail@plt+0x10608>
   21d40:	ldr	r0, [sp, #24]
   21d44:	ldr	r1, [r0, #4]
   21d48:	mvn	r2, #255	; 0xff
   21d4c:	and	r1, r1, r2
   21d50:	orr	r1, r1, #30
   21d54:	str	r1, [r0, #4]
   21d58:	b	21d8c <__assert_fail@plt+0x10638>
   21d5c:	b	21d60 <__assert_fail@plt+0x1060c>
   21d60:	ldr	r0, [sp, #24]
   21d64:	ldr	r1, [r0, #4]
   21d68:	mvn	r2, #255	; 0xff
   21d6c:	and	r1, r1, r2
   21d70:	orr	r1, r1, #1
   21d74:	str	r1, [r0, #4]
   21d78:	ldrb	r0, [sp, #15]
   21d7c:	ldr	r1, [sp, #24]
   21d80:	strb	r0, [r1]
   21d84:	movw	r0, #1
   21d88:	str	r0, [sp, #8]
   21d8c:	ldr	r0, [sp, #8]
   21d90:	str	r0, [sp, #28]
   21d94:	b	21e44 <__assert_fail@plt+0x106f0>
   21d98:	ldrb	r0, [sp, #15]
   21d9c:	mov	r1, r0
   21da0:	cmp	r0, #45	; 0x2d
   21da4:	str	r1, [sp]
   21da8:	beq	21dd0 <__assert_fail@plt+0x1067c>
   21dac:	b	21db0 <__assert_fail@plt+0x1065c>
   21db0:	ldr	r0, [sp]
   21db4:	cmp	r0, #93	; 0x5d
   21db8:	beq	21dec <__assert_fail@plt+0x10698>
   21dbc:	b	21dc0 <__assert_fail@plt+0x1066c>
   21dc0:	ldr	r0, [sp]
   21dc4:	cmp	r0, #94	; 0x5e
   21dc8:	beq	21e08 <__assert_fail@plt+0x106b4>
   21dcc:	b	21e24 <__assert_fail@plt+0x106d0>
   21dd0:	ldr	r0, [sp, #24]
   21dd4:	ldr	r1, [r0, #4]
   21dd8:	mvn	r2, #255	; 0xff
   21ddc:	and	r1, r1, r2
   21de0:	orr	r1, r1, #22
   21de4:	str	r1, [r0, #4]
   21de8:	b	21e3c <__assert_fail@plt+0x106e8>
   21dec:	ldr	r0, [sp, #24]
   21df0:	ldr	r1, [r0, #4]
   21df4:	mvn	r2, #255	; 0xff
   21df8:	and	r1, r1, r2
   21dfc:	orr	r1, r1, #21
   21e00:	str	r1, [r0, #4]
   21e04:	b	21e3c <__assert_fail@plt+0x106e8>
   21e08:	ldr	r0, [sp, #24]
   21e0c:	ldr	r1, [r0, #4]
   21e10:	mvn	r2, #255	; 0xff
   21e14:	and	r1, r1, r2
   21e18:	orr	r1, r1, #25
   21e1c:	str	r1, [r0, #4]
   21e20:	b	21e3c <__assert_fail@plt+0x106e8>
   21e24:	ldr	r0, [sp, #24]
   21e28:	ldr	r1, [r0, #4]
   21e2c:	mvn	r2, #255	; 0xff
   21e30:	and	r1, r1, r2
   21e34:	orr	r1, r1, #1
   21e38:	str	r1, [r0, #4]
   21e3c:	movw	r0, #1
   21e40:	str	r0, [sp, #28]
   21e44:	ldr	r0, [sp, #28]
   21e48:	add	sp, sp, #32
   21e4c:	bx	lr
   21e50:	sub	sp, sp, #8
   21e54:	str	r0, [sp, #4]
   21e58:	str	r1, [sp]
   21e5c:	ldr	r0, [sp]
   21e60:	asr	r1, r0, #31
   21e64:	add	r1, r0, r1, lsr #27
   21e68:	bic	r2, r1, #31
   21e6c:	sub	r0, r0, r2
   21e70:	mov	r2, #1
   21e74:	lsl	r0, r2, r0
   21e78:	ldr	r2, [sp, #4]
   21e7c:	asr	r1, r1, #5
   21e80:	add	r1, r2, r1, lsl #2
   21e84:	ldr	r2, [r1]
   21e88:	orr	r0, r2, r0
   21e8c:	str	r0, [r1]
   21e90:	add	sp, sp, #8
   21e94:	bx	lr
   21e98:	push	{r4, sl, fp, lr}
   21e9c:	add	fp, sp, #8
   21ea0:	sub	sp, sp, #48	; 0x30
   21ea4:	ldr	ip, [fp, #16]
   21ea8:	ldr	lr, [fp, #12]
   21eac:	ldr	r4, [fp, #8]
   21eb0:	str	r0, [fp, #-16]
   21eb4:	str	r1, [fp, #-20]	; 0xffffffec
   21eb8:	str	r2, [fp, #-24]	; 0xffffffe8
   21ebc:	str	r3, [sp, #28]
   21ec0:	and	r0, ip, #1
   21ec4:	strb	r0, [sp, #27]
   21ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ecc:	ldr	r1, [fp, #-20]	; 0xffffffec
   21ed0:	ldr	r1, [r1, #40]	; 0x28
   21ed4:	str	r4, [sp, #8]
   21ed8:	str	lr, [sp, #4]
   21edc:	bl	232ec <__assert_fail@plt+0x11b98>
   21ee0:	str	r0, [sp, #20]
   21ee4:	ldr	r0, [sp, #20]
   21ee8:	cmp	r0, #1
   21eec:	ble	21f34 <__assert_fail@plt+0x107e0>
   21ef0:	ldr	r0, [fp, #-16]
   21ef4:	movw	r1, #1
   21ef8:	str	r1, [r0]
   21efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   21f04:	ldr	r1, [r1, #40]	; 0x28
   21f08:	bl	1f3cc <__assert_fail@plt+0xdc78>
   21f0c:	ldr	r1, [fp, #-16]
   21f10:	str	r0, [r1, #4]
   21f14:	ldr	r0, [sp, #20]
   21f18:	ldr	r1, [fp, #-20]	; 0xffffffec
   21f1c:	ldr	lr, [r1, #40]	; 0x28
   21f20:	add	r0, lr, r0
   21f24:	str	r0, [r1, #40]	; 0x28
   21f28:	movw	r0, #0
   21f2c:	str	r0, [fp, #-12]
   21f30:	b	22010 <__assert_fail@plt+0x108bc>
   21f34:	ldr	r0, [sp, #28]
   21f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   21f3c:	ldr	r2, [r1, #40]	; 0x28
   21f40:	add	r0, r2, r0
   21f44:	str	r0, [r1, #40]	; 0x28
   21f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f4c:	ldr	r0, [r0, #4]
   21f50:	and	r0, r0, #255	; 0xff
   21f54:	cmp	r0, #26
   21f58:	beq	21f84 <__assert_fail@plt+0x10830>
   21f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f60:	ldr	r0, [r0, #4]
   21f64:	and	r0, r0, #255	; 0xff
   21f68:	cmp	r0, #30
   21f6c:	beq	21f84 <__assert_fail@plt+0x10830>
   21f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f74:	ldr	r0, [r0, #4]
   21f78:	and	r0, r0, #255	; 0xff
   21f7c:	cmp	r0, #28
   21f80:	bne	21f9c <__assert_fail@plt+0x10848>
   21f84:	ldr	r0, [fp, #-16]
   21f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   21f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21f90:	bl	23388 <__assert_fail@plt+0x11c34>
   21f94:	str	r0, [fp, #-12]
   21f98:	b	22010 <__assert_fail@plt+0x108bc>
   21f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fa0:	ldr	r0, [r0, #4]
   21fa4:	and	r0, r0, #255	; 0xff
   21fa8:	cmp	r0, #22
   21fac:	bne	21ff0 <__assert_fail@plt+0x1089c>
   21fb0:	ldrb	r0, [sp, #27]
   21fb4:	tst	r0, #1
   21fb8:	bne	21ff0 <__assert_fail@plt+0x1089c>
   21fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   21fc0:	ldr	r2, [fp, #12]
   21fc4:	add	r0, sp, #12
   21fc8:	bl	21ae0 <__assert_fail@plt+0x1038c>
   21fcc:	ldr	r1, [sp, #16]
   21fd0:	and	r1, r1, #255	; 0xff
   21fd4:	cmp	r1, #21
   21fd8:	str	r0, [sp]
   21fdc:	beq	21fec <__assert_fail@plt+0x10898>
   21fe0:	movw	r0, #11
   21fe4:	str	r0, [fp, #-12]
   21fe8:	b	22010 <__assert_fail@plt+0x108bc>
   21fec:	b	21ff0 <__assert_fail@plt+0x1089c>
   21ff0:	ldr	r0, [fp, #-16]
   21ff4:	movw	r1, #0
   21ff8:	str	r1, [r0]
   21ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22000:	ldrb	r0, [r0]
   22004:	ldr	r2, [fp, #-16]
   22008:	strb	r0, [r2, #4]
   2200c:	str	r1, [fp, #-12]
   22010:	ldr	r0, [fp, #-12]
   22014:	sub	sp, fp, #8
   22018:	pop	{r4, sl, fp, pc}
   2201c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22020:	add	fp, sp, #28
   22024:	sub	sp, sp, #132	; 0x84
   22028:	ldr	ip, [fp, #40]	; 0x28
   2202c:	ldr	lr, [fp, #36]	; 0x24
   22030:	ldr	r4, [fp, #32]
   22034:	ldr	r5, [fp, #28]
   22038:	ldr	r6, [fp, #24]
   2203c:	ldr	r7, [fp, #20]
   22040:	ldr	r8, [fp, #16]
   22044:	ldr	r9, [fp, #12]
   22048:	ldr	sl, [fp, #8]
   2204c:	str	r0, [fp, #-36]	; 0xffffffdc
   22050:	str	r1, [fp, #-40]	; 0xffffffd8
   22054:	str	r2, [fp, #-44]	; 0xffffffd4
   22058:	str	r3, [fp, #-48]	; 0xffffffd0
   2205c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22060:	ldr	r0, [r0]
   22064:	cmp	r0, #2
   22068:	movw	r0, #1
   2206c:	str	sl, [sp, #76]	; 0x4c
   22070:	str	r7, [sp, #72]	; 0x48
   22074:	str	r8, [sp, #68]	; 0x44
   22078:	str	r9, [sp, #64]	; 0x40
   2207c:	str	ip, [sp, #60]	; 0x3c
   22080:	str	lr, [sp, #56]	; 0x38
   22084:	str	r4, [sp, #52]	; 0x34
   22088:	str	r5, [sp, #48]	; 0x30
   2208c:	str	r6, [sp, #44]	; 0x2c
   22090:	str	r0, [sp, #40]	; 0x28
   22094:	beq	220e0 <__assert_fail@plt+0x1098c>
   22098:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2209c:	ldr	r0, [r0]
   220a0:	cmp	r0, #4
   220a4:	movw	r0, #1
   220a8:	str	r0, [sp, #40]	; 0x28
   220ac:	beq	220e0 <__assert_fail@plt+0x1098c>
   220b0:	ldr	r0, [fp, #8]
   220b4:	ldr	r0, [r0]
   220b8:	cmp	r0, #2
   220bc:	movw	r0, #1
   220c0:	str	r0, [sp, #40]	; 0x28
   220c4:	beq	220e0 <__assert_fail@plt+0x1098c>
   220c8:	ldr	r0, [fp, #8]
   220cc:	ldr	r0, [r0]
   220d0:	cmp	r0, #4
   220d4:	movw	r0, #0
   220d8:	moveq	r0, #1
   220dc:	str	r0, [sp, #40]	; 0x28
   220e0:	ldr	r0, [sp, #40]	; 0x28
   220e4:	tst	r0, #1
   220e8:	beq	220f8 <__assert_fail@plt+0x109a4>
   220ec:	movw	r0, #11
   220f0:	str	r0, [fp, #-32]	; 0xffffffe0
   220f4:	b	224b8 <__assert_fail@plt+0x10d64>
   220f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   220fc:	ldr	r0, [r0]
   22100:	cmp	r0, #3
   22104:	bne	22124 <__assert_fail@plt+0x109d0>
   22108:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2210c:	ldr	r0, [r0, #4]
   22110:	bl	11604 <strlen@plt>
   22114:	cmp	r0, #1
   22118:	movw	r0, #1
   2211c:	str	r0, [sp, #36]	; 0x24
   22120:	bhi	22160 <__assert_fail@plt+0x10a0c>
   22124:	ldr	r0, [fp, #8]
   22128:	ldr	r0, [r0]
   2212c:	cmp	r0, #3
   22130:	movw	r0, #0
   22134:	str	r0, [sp, #32]
   22138:	bne	22158 <__assert_fail@plt+0x10a04>
   2213c:	ldr	r0, [fp, #8]
   22140:	ldr	r0, [r0, #4]
   22144:	bl	11604 <strlen@plt>
   22148:	cmp	r0, #1
   2214c:	movw	r0, #0
   22150:	movhi	r0, #1
   22154:	str	r0, [sp, #32]
   22158:	ldr	r0, [sp, #32]
   2215c:	str	r0, [sp, #36]	; 0x24
   22160:	ldr	r0, [sp, #36]	; 0x24
   22164:	tst	r0, #1
   22168:	beq	22178 <__assert_fail@plt+0x10a24>
   2216c:	movw	r0, #3
   22170:	str	r0, [fp, #-32]	; 0xffffffe0
   22174:	b	224b8 <__assert_fail@plt+0x10d64>
   22178:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2217c:	ldr	r0, [r0]
   22180:	cmp	r0, #0
   22184:	bne	22198 <__assert_fail@plt+0x10a44>
   22188:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2218c:	ldrb	r0, [r0, #4]
   22190:	str	r0, [sp, #28]
   22194:	b	221d0 <__assert_fail@plt+0x10a7c>
   22198:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2219c:	ldr	r0, [r0]
   221a0:	cmp	r0, #3
   221a4:	bne	221bc <__assert_fail@plt+0x10a68>
   221a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   221ac:	ldr	r0, [r0, #4]
   221b0:	ldrb	r0, [r0]
   221b4:	str	r0, [sp, #24]
   221b8:	b	221c8 <__assert_fail@plt+0x10a74>
   221bc:	movw	r0, #0
   221c0:	str	r0, [sp, #24]
   221c4:	b	221c8 <__assert_fail@plt+0x10a74>
   221c8:	ldr	r0, [sp, #24]
   221cc:	str	r0, [sp, #28]
   221d0:	ldr	r0, [sp, #28]
   221d4:	str	r0, [fp, #-52]	; 0xffffffcc
   221d8:	ldr	r0, [fp, #8]
   221dc:	ldr	r0, [r0]
   221e0:	cmp	r0, #0
   221e4:	bne	221f8 <__assert_fail@plt+0x10aa4>
   221e8:	ldr	r0, [fp, #8]
   221ec:	ldrb	r0, [r0, #4]
   221f0:	str	r0, [sp, #20]
   221f4:	b	22230 <__assert_fail@plt+0x10adc>
   221f8:	ldr	r0, [fp, #8]
   221fc:	ldr	r0, [r0]
   22200:	cmp	r0, #3
   22204:	bne	2221c <__assert_fail@plt+0x10ac8>
   22208:	ldr	r0, [fp, #8]
   2220c:	ldr	r0, [r0, #4]
   22210:	ldrb	r0, [r0]
   22214:	str	r0, [sp, #16]
   22218:	b	22228 <__assert_fail@plt+0x10ad4>
   2221c:	movw	r0, #0
   22220:	str	r0, [sp, #16]
   22224:	b	22228 <__assert_fail@plt+0x10ad4>
   22228:	ldr	r0, [sp, #16]
   2222c:	str	r0, [sp, #20]
   22230:	ldr	r0, [sp, #20]
   22234:	str	r0, [fp, #-56]	; 0xffffffc8
   22238:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2223c:	ldr	r0, [r0]
   22240:	cmp	r0, #0
   22244:	beq	22258 <__assert_fail@plt+0x10b04>
   22248:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2224c:	ldr	r0, [r0]
   22250:	cmp	r0, #3
   22254:	bne	22270 <__assert_fail@plt+0x10b1c>
   22258:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2225c:	ldr	r1, [fp, #12]
   22260:	and	r0, r0, #255	; 0xff
   22264:	bl	23710 <__assert_fail@plt+0x11fbc>
   22268:	str	r0, [sp, #12]
   2226c:	b	2227c <__assert_fail@plt+0x10b28>
   22270:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22274:	ldr	r0, [r0, #4]
   22278:	str	r0, [sp, #12]
   2227c:	ldr	r0, [sp, #12]
   22280:	str	r0, [fp, #-60]	; 0xffffffc4
   22284:	ldr	r0, [fp, #8]
   22288:	ldr	r0, [r0]
   2228c:	cmp	r0, #0
   22290:	beq	222a4 <__assert_fail@plt+0x10b50>
   22294:	ldr	r0, [fp, #8]
   22298:	ldr	r0, [r0]
   2229c:	cmp	r0, #3
   222a0:	bne	222bc <__assert_fail@plt+0x10b68>
   222a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   222a8:	ldr	r1, [fp, #12]
   222ac:	and	r0, r0, #255	; 0xff
   222b0:	bl	23710 <__assert_fail@plt+0x11fbc>
   222b4:	str	r0, [sp, #8]
   222b8:	b	222c8 <__assert_fail@plt+0x10b74>
   222bc:	ldr	r0, [fp, #8]
   222c0:	ldr	r0, [r0, #4]
   222c4:	str	r0, [sp, #8]
   222c8:	ldr	r0, [sp, #8]
   222cc:	str	r0, [fp, #-64]	; 0xffffffc0
   222d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   222d4:	cmn	r0, #1
   222d8:	beq	222e8 <__assert_fail@plt+0x10b94>
   222dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   222e0:	cmn	r0, #1
   222e4:	bne	222f4 <__assert_fail@plt+0x10ba0>
   222e8:	movw	r0, #3
   222ec:	str	r0, [fp, #-32]	; 0xffffffe0
   222f0:	b	224b8 <__assert_fail@plt+0x10d64>
   222f4:	ldr	r0, [fp, #16]
   222f8:	and	r0, r0, #65536	; 0x10000
   222fc:	cmp	r0, #0
   22300:	movw	r0, #0
   22304:	str	r0, [sp, #4]
   22308:	beq	22324 <__assert_fail@plt+0x10bd0>
   2230c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22310:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22314:	cmp	r0, r1
   22318:	movw	r0, #0
   2231c:	movhi	r0, #1
   22320:	str	r0, [sp, #4]
   22324:	ldr	r0, [sp, #4]
   22328:	tst	r0, #1
   2232c:	beq	2233c <__assert_fail@plt+0x10be8>
   22330:	movw	r0, #11
   22334:	str	r0, [fp, #-32]	; 0xffffffe0
   22338:	b	224b8 <__assert_fail@plt+0x10d64>
   2233c:	b	22340 <__assert_fail@plt+0x10bec>
   22340:	ldr	r0, [fp, #12]
   22344:	ldr	r0, [r0, #92]	; 0x5c
   22348:	cmp	r0, #1
   2234c:	ble	2245c <__assert_fail@plt+0x10d08>
   22350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22354:	ldr	r0, [r0]
   22358:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2235c:	ldr	r1, [r1, #32]
   22360:	cmp	r0, r1
   22364:	bne	22428 <__assert_fail@plt+0x10cd4>
   22368:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2236c:	ldr	r0, [r0, #32]
   22370:	mov	r1, #1
   22374:	orr	r0, r1, r0, lsl #1
   22378:	str	r0, [fp, #-76]	; 0xffffffb4
   2237c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22380:	ldr	r0, [r0, #4]
   22384:	ldr	r1, [fp, #-76]	; 0xffffffb4
   22388:	lsl	r1, r1, #2
   2238c:	bl	38aec <__assert_fail@plt+0x27398>
   22390:	str	r0, [fp, #-68]	; 0xffffffbc
   22394:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22398:	ldr	r0, [r0, #8]
   2239c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   223a0:	lsl	r1, r1, #2
   223a4:	bl	38aec <__assert_fail@plt+0x27398>
   223a8:	str	r0, [fp, #-72]	; 0xffffffb8
   223ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   223b0:	movw	r1, #0
   223b4:	cmp	r0, r1
   223b8:	movw	r0, #1
   223bc:	str	r0, [sp]
   223c0:	beq	223dc <__assert_fail@plt+0x10c88>
   223c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   223c8:	movw	r1, #0
   223cc:	cmp	r0, r1
   223d0:	movw	r0, #0
   223d4:	moveq	r0, #1
   223d8:	str	r0, [sp]
   223dc:	ldr	r0, [sp]
   223e0:	tst	r0, #1
   223e4:	beq	22404 <__assert_fail@plt+0x10cb0>
   223e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   223ec:	bl	1604c <__assert_fail@plt+0x48f8>
   223f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   223f4:	bl	1604c <__assert_fail@plt+0x48f8>
   223f8:	movw	r0, #12
   223fc:	str	r0, [fp, #-32]	; 0xffffffe0
   22400:	b	224b8 <__assert_fail@plt+0x10d64>
   22404:	ldr	r0, [fp, #-68]	; 0xffffffbc
   22408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2240c:	str	r0, [r1, #4]
   22410:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22414:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22418:	str	r0, [r1, #8]
   2241c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   22420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22424:	str	r0, [r1]
   22428:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2242c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22430:	ldr	r2, [r1, #4]
   22434:	ldr	r1, [r1, #32]
   22438:	str	r0, [r2, r1, lsl #2]
   2243c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22440:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22444:	ldr	r2, [r1, #8]
   22448:	ldr	r3, [r1, #32]
   2244c:	add	ip, r3, #1
   22450:	str	ip, [r1, #32]
   22454:	add	r1, r2, r3, lsl #2
   22458:	str	r0, [r1]
   2245c:	movw	r0, #0
   22460:	str	r0, [sp, #80]	; 0x50
   22464:	ldr	r0, [sp, #80]	; 0x50
   22468:	cmp	r0, #256	; 0x100
   2246c:	bcs	224b0 <__assert_fail@plt+0x10d5c>
   22470:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22474:	ldr	r1, [sp, #80]	; 0x50
   22478:	cmp	r0, r1
   2247c:	bhi	2249c <__assert_fail@plt+0x10d48>
   22480:	ldr	r0, [sp, #80]	; 0x50
   22484:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22488:	cmp	r0, r1
   2248c:	bhi	2249c <__assert_fail@plt+0x10d48>
   22490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22494:	ldr	r1, [sp, #80]	; 0x50
   22498:	bl	21e50 <__assert_fail@plt+0x106fc>
   2249c:	b	224a0 <__assert_fail@plt+0x10d4c>
   224a0:	ldr	r0, [sp, #80]	; 0x50
   224a4:	add	r0, r0, #1
   224a8:	str	r0, [sp, #80]	; 0x50
   224ac:	b	22464 <__assert_fail@plt+0x10d10>
   224b0:	movw	r0, #0
   224b4:	str	r0, [fp, #-32]	; 0xffffffe0
   224b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224bc:	sub	sp, fp, #28
   224c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224c4:	push	{fp, lr}
   224c8:	mov	fp, sp
   224cc:	sub	sp, sp, #24
   224d0:	str	r0, [fp, #-8]
   224d4:	str	r1, [sp, #12]
   224d8:	str	r2, [sp, #8]
   224dc:	str	r3, [sp, #4]
   224e0:	ldr	r0, [sp, #4]
   224e4:	bl	11604 <strlen@plt>
   224e8:	cmp	r0, #1
   224ec:	beq	224fc <__assert_fail@plt+0x10da8>
   224f0:	movw	r0, #3
   224f4:	str	r0, [fp, #-4]
   224f8:	b	22514 <__assert_fail@plt+0x10dc0>
   224fc:	ldr	r0, [fp, #-8]
   22500:	ldr	r1, [sp, #4]
   22504:	ldrb	r1, [r1]
   22508:	bl	21e50 <__assert_fail@plt+0x106fc>
   2250c:	movw	r0, #0
   22510:	str	r0, [fp, #-4]
   22514:	ldr	r0, [fp, #-4]
   22518:	mov	sp, fp
   2251c:	pop	{fp, pc}
   22520:	push	{r4, r5, fp, lr}
   22524:	add	fp, sp, #8
   22528:	sub	sp, sp, #40	; 0x28
   2252c:	ldr	ip, [fp, #20]
   22530:	ldr	lr, [fp, #16]
   22534:	ldr	r4, [fp, #12]
   22538:	ldr	r5, [fp, #8]
   2253c:	str	r0, [fp, #-16]
   22540:	str	r1, [fp, #-20]	; 0xffffffec
   22544:	str	r2, [sp, #24]
   22548:	str	r3, [sp, #20]
   2254c:	ldr	r0, [sp, #20]
   22550:	str	r5, [sp, #12]
   22554:	str	ip, [sp, #8]
   22558:	str	lr, [sp, #4]
   2255c:	str	r4, [sp]
   22560:	bl	11604 <strlen@plt>
   22564:	str	r0, [sp, #16]
   22568:	ldr	r0, [sp, #16]
   2256c:	cmp	r0, #1
   22570:	beq	22580 <__assert_fail@plt+0x10e2c>
   22574:	movw	r0, #3
   22578:	str	r0, [fp, #-12]
   2257c:	b	22598 <__assert_fail@plt+0x10e44>
   22580:	ldr	r0, [fp, #-16]
   22584:	ldr	r1, [sp, #20]
   22588:	ldrb	r1, [r1]
   2258c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22590:	movw	r0, #0
   22594:	str	r0, [fp, #-12]
   22598:	ldr	r0, [fp, #-12]
   2259c:	sub	sp, fp, #8
   225a0:	pop	{r4, r5, fp, pc}
   225a4:	push	{fp, lr}
   225a8:	mov	fp, sp
   225ac:	sub	sp, sp, #48	; 0x30
   225b0:	ldr	ip, [fp, #12]
   225b4:	ldr	lr, [fp, #8]
   225b8:	str	r0, [fp, #-8]
   225bc:	str	r1, [fp, #-12]
   225c0:	str	r2, [fp, #-16]
   225c4:	str	r3, [fp, #-20]	; 0xffffffec
   225c8:	ldr	r0, [fp, #8]
   225cc:	str	r0, [sp, #20]
   225d0:	ldr	r0, [fp, #12]
   225d4:	and	r0, r0, #4194304	; 0x400000
   225d8:	cmp	r0, #0
   225dc:	str	lr, [sp, #8]
   225e0:	str	ip, [sp, #4]
   225e4:	beq	22624 <__assert_fail@plt+0x10ed0>
   225e8:	ldr	r0, [sp, #20]
   225ec:	movw	r1, #54780	; 0xd5fc
   225f0:	movt	r1, #3
   225f4:	bl	11400 <strcmp@plt>
   225f8:	cmp	r0, #0
   225fc:	beq	22618 <__assert_fail@plt+0x10ec4>
   22600:	ldr	r0, [sp, #20]
   22604:	movw	r1, #54786	; 0xd602
   22608:	movt	r1, #3
   2260c:	bl	11400 <strcmp@plt>
   22610:	cmp	r0, #0
   22614:	bne	22624 <__assert_fail@plt+0x10ed0>
   22618:	movw	r0, #54792	; 0xd608
   2261c:	movt	r0, #3
   22620:	str	r0, [sp, #20]
   22624:	ldr	r0, [fp, #-20]	; 0xffffffec
   22628:	ldr	r0, [r0]
   2262c:	ldr	r1, [fp, #-16]
   22630:	ldr	r1, [r1, #36]	; 0x24
   22634:	cmp	r0, r1
   22638:	bne	2269c <__assert_fail@plt+0x10f48>
   2263c:	ldr	r0, [fp, #-16]
   22640:	ldr	r0, [r0, #36]	; 0x24
   22644:	mov	r1, #1
   22648:	orr	r0, r1, r0, lsl #1
   2264c:	str	r0, [sp, #16]
   22650:	ldr	r0, [fp, #-16]
   22654:	ldr	r0, [r0, #12]
   22658:	ldr	r1, [sp, #16]
   2265c:	lsl	r1, r1, #2
   22660:	bl	38aec <__assert_fail@plt+0x27398>
   22664:	str	r0, [sp, #12]
   22668:	ldr	r0, [sp, #12]
   2266c:	movw	r1, #0
   22670:	cmp	r0, r1
   22674:	bne	22684 <__assert_fail@plt+0x10f30>
   22678:	movw	r0, #12
   2267c:	str	r0, [fp, #-4]
   22680:	b	23240 <__assert_fail@plt+0x11aec>
   22684:	ldr	r0, [sp, #12]
   22688:	ldr	r1, [fp, #-16]
   2268c:	str	r0, [r1, #12]
   22690:	ldr	r0, [sp, #16]
   22694:	ldr	r1, [fp, #-20]	; 0xffffffec
   22698:	str	r0, [r1]
   2269c:	ldr	r0, [sp, #20]
   226a0:	bl	113d0 <wctype@plt>
   226a4:	ldr	lr, [fp, #-16]
   226a8:	ldr	r1, [lr, #12]
   226ac:	ldr	r2, [lr, #36]	; 0x24
   226b0:	add	r3, r2, #1
   226b4:	str	r3, [lr, #36]	; 0x24
   226b8:	add	r1, r1, r2, lsl #2
   226bc:	str	r0, [r1]
   226c0:	ldr	r0, [sp, #20]
   226c4:	movw	r1, #54768	; 0xd5f0
   226c8:	movt	r1, #3
   226cc:	bl	11400 <strcmp@plt>
   226d0:	cmp	r0, #0
   226d4:	bne	227b0 <__assert_fail@plt+0x1105c>
   226d8:	b	226dc <__assert_fail@plt+0x10f88>
   226dc:	ldr	r0, [fp, #-8]
   226e0:	movw	r1, #0
   226e4:	cmp	r0, r1
   226e8:	beq	22750 <__assert_fail@plt+0x10ffc>
   226ec:	movw	r0, #0
   226f0:	str	r0, [sp, #24]
   226f4:	ldr	r0, [sp, #24]
   226f8:	cmp	r0, #256	; 0x100
   226fc:	bge	2274c <__assert_fail@plt+0x10ff8>
   22700:	bl	115e0 <__ctype_b_loc@plt>
   22704:	ldr	r0, [r0]
   22708:	ldr	lr, [sp, #24]
   2270c:	add	r0, r0, lr, lsl #1
   22710:	ldrh	r0, [r0]
   22714:	and	r0, r0, #8
   22718:	cmp	r0, #0
   2271c:	beq	22738 <__assert_fail@plt+0x10fe4>
   22720:	ldr	r0, [fp, #-12]
   22724:	ldr	r1, [fp, #-8]
   22728:	ldr	r2, [sp, #24]
   2272c:	add	r1, r1, r2
   22730:	ldrb	r1, [r1]
   22734:	bl	21e50 <__assert_fail@plt+0x106fc>
   22738:	b	2273c <__assert_fail@plt+0x10fe8>
   2273c:	ldr	r0, [sp, #24]
   22740:	add	r0, r0, #1
   22744:	str	r0, [sp, #24]
   22748:	b	226f4 <__assert_fail@plt+0x10fa0>
   2274c:	b	227a8 <__assert_fail@plt+0x11054>
   22750:	movw	r0, #0
   22754:	str	r0, [sp, #24]
   22758:	ldr	r0, [sp, #24]
   2275c:	cmp	r0, #256	; 0x100
   22760:	bge	227a4 <__assert_fail@plt+0x11050>
   22764:	bl	115e0 <__ctype_b_loc@plt>
   22768:	ldr	r0, [r0]
   2276c:	ldr	lr, [sp, #24]
   22770:	add	r0, r0, lr, lsl #1
   22774:	ldrh	r0, [r0]
   22778:	and	r0, r0, #8
   2277c:	cmp	r0, #0
   22780:	beq	22790 <__assert_fail@plt+0x1103c>
   22784:	ldr	r0, [fp, #-12]
   22788:	ldr	r1, [sp, #24]
   2278c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22790:	b	22794 <__assert_fail@plt+0x11040>
   22794:	ldr	r0, [sp, #24]
   22798:	add	r0, r0, #1
   2279c:	str	r0, [sp, #24]
   227a0:	b	22758 <__assert_fail@plt+0x11004>
   227a4:	b	227a8 <__assert_fail@plt+0x11054>
   227a8:	b	227ac <__assert_fail@plt+0x11058>
   227ac:	b	23238 <__assert_fail@plt+0x11ae4>
   227b0:	ldr	r0, [sp, #20]
   227b4:	movw	r1, #54798	; 0xd60e
   227b8:	movt	r1, #3
   227bc:	bl	11400 <strcmp@plt>
   227c0:	cmp	r0, #0
   227c4:	bne	228a0 <__assert_fail@plt+0x1114c>
   227c8:	b	227cc <__assert_fail@plt+0x11078>
   227cc:	ldr	r0, [fp, #-8]
   227d0:	movw	r1, #0
   227d4:	cmp	r0, r1
   227d8:	beq	22840 <__assert_fail@plt+0x110ec>
   227dc:	movw	r0, #0
   227e0:	str	r0, [sp, #24]
   227e4:	ldr	r0, [sp, #24]
   227e8:	cmp	r0, #256	; 0x100
   227ec:	bge	2283c <__assert_fail@plt+0x110e8>
   227f0:	bl	115e0 <__ctype_b_loc@plt>
   227f4:	ldr	r0, [r0]
   227f8:	ldr	lr, [sp, #24]
   227fc:	add	r0, r0, lr, lsl #1
   22800:	ldrh	r0, [r0]
   22804:	and	r0, r0, #2
   22808:	cmp	r0, #0
   2280c:	beq	22828 <__assert_fail@plt+0x110d4>
   22810:	ldr	r0, [fp, #-12]
   22814:	ldr	r1, [fp, #-8]
   22818:	ldr	r2, [sp, #24]
   2281c:	add	r1, r1, r2
   22820:	ldrb	r1, [r1]
   22824:	bl	21e50 <__assert_fail@plt+0x106fc>
   22828:	b	2282c <__assert_fail@plt+0x110d8>
   2282c:	ldr	r0, [sp, #24]
   22830:	add	r0, r0, #1
   22834:	str	r0, [sp, #24]
   22838:	b	227e4 <__assert_fail@plt+0x11090>
   2283c:	b	22898 <__assert_fail@plt+0x11144>
   22840:	movw	r0, #0
   22844:	str	r0, [sp, #24]
   22848:	ldr	r0, [sp, #24]
   2284c:	cmp	r0, #256	; 0x100
   22850:	bge	22894 <__assert_fail@plt+0x11140>
   22854:	bl	115e0 <__ctype_b_loc@plt>
   22858:	ldr	r0, [r0]
   2285c:	ldr	lr, [sp, #24]
   22860:	add	r0, r0, lr, lsl #1
   22864:	ldrh	r0, [r0]
   22868:	and	r0, r0, #2
   2286c:	cmp	r0, #0
   22870:	beq	22880 <__assert_fail@plt+0x1112c>
   22874:	ldr	r0, [fp, #-12]
   22878:	ldr	r1, [sp, #24]
   2287c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22880:	b	22884 <__assert_fail@plt+0x11130>
   22884:	ldr	r0, [sp, #24]
   22888:	add	r0, r0, #1
   2288c:	str	r0, [sp, #24]
   22890:	b	22848 <__assert_fail@plt+0x110f4>
   22894:	b	22898 <__assert_fail@plt+0x11144>
   22898:	b	2289c <__assert_fail@plt+0x11148>
   2289c:	b	23234 <__assert_fail@plt+0x11ae0>
   228a0:	ldr	r0, [sp, #20]
   228a4:	movw	r1, #54786	; 0xd602
   228a8:	movt	r1, #3
   228ac:	bl	11400 <strcmp@plt>
   228b0:	cmp	r0, #0
   228b4:	bne	22990 <__assert_fail@plt+0x1123c>
   228b8:	b	228bc <__assert_fail@plt+0x11168>
   228bc:	ldr	r0, [fp, #-8]
   228c0:	movw	r1, #0
   228c4:	cmp	r0, r1
   228c8:	beq	22930 <__assert_fail@plt+0x111dc>
   228cc:	movw	r0, #0
   228d0:	str	r0, [sp, #24]
   228d4:	ldr	r0, [sp, #24]
   228d8:	cmp	r0, #256	; 0x100
   228dc:	bge	2292c <__assert_fail@plt+0x111d8>
   228e0:	bl	115e0 <__ctype_b_loc@plt>
   228e4:	ldr	r0, [r0]
   228e8:	ldr	lr, [sp, #24]
   228ec:	add	r0, r0, lr, lsl #1
   228f0:	ldrh	r0, [r0]
   228f4:	and	r0, r0, #512	; 0x200
   228f8:	cmp	r0, #0
   228fc:	beq	22918 <__assert_fail@plt+0x111c4>
   22900:	ldr	r0, [fp, #-12]
   22904:	ldr	r1, [fp, #-8]
   22908:	ldr	r2, [sp, #24]
   2290c:	add	r1, r1, r2
   22910:	ldrb	r1, [r1]
   22914:	bl	21e50 <__assert_fail@plt+0x106fc>
   22918:	b	2291c <__assert_fail@plt+0x111c8>
   2291c:	ldr	r0, [sp, #24]
   22920:	add	r0, r0, #1
   22924:	str	r0, [sp, #24]
   22928:	b	228d4 <__assert_fail@plt+0x11180>
   2292c:	b	22988 <__assert_fail@plt+0x11234>
   22930:	movw	r0, #0
   22934:	str	r0, [sp, #24]
   22938:	ldr	r0, [sp, #24]
   2293c:	cmp	r0, #256	; 0x100
   22940:	bge	22984 <__assert_fail@plt+0x11230>
   22944:	bl	115e0 <__ctype_b_loc@plt>
   22948:	ldr	r0, [r0]
   2294c:	ldr	lr, [sp, #24]
   22950:	add	r0, r0, lr, lsl #1
   22954:	ldrh	r0, [r0]
   22958:	and	r0, r0, #512	; 0x200
   2295c:	cmp	r0, #0
   22960:	beq	22970 <__assert_fail@plt+0x1121c>
   22964:	ldr	r0, [fp, #-12]
   22968:	ldr	r1, [sp, #24]
   2296c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22970:	b	22974 <__assert_fail@plt+0x11220>
   22974:	ldr	r0, [sp, #24]
   22978:	add	r0, r0, #1
   2297c:	str	r0, [sp, #24]
   22980:	b	22938 <__assert_fail@plt+0x111e4>
   22984:	b	22988 <__assert_fail@plt+0x11234>
   22988:	b	2298c <__assert_fail@plt+0x11238>
   2298c:	b	23230 <__assert_fail@plt+0x11adc>
   22990:	ldr	r0, [sp, #20]
   22994:	movw	r1, #54774	; 0xd5f6
   22998:	movt	r1, #3
   2299c:	bl	11400 <strcmp@plt>
   229a0:	cmp	r0, #0
   229a4:	bne	22a80 <__assert_fail@plt+0x1132c>
   229a8:	b	229ac <__assert_fail@plt+0x11258>
   229ac:	ldr	r0, [fp, #-8]
   229b0:	movw	r1, #0
   229b4:	cmp	r0, r1
   229b8:	beq	22a20 <__assert_fail@plt+0x112cc>
   229bc:	movw	r0, #0
   229c0:	str	r0, [sp, #24]
   229c4:	ldr	r0, [sp, #24]
   229c8:	cmp	r0, #256	; 0x100
   229cc:	bge	22a1c <__assert_fail@plt+0x112c8>
   229d0:	bl	115e0 <__ctype_b_loc@plt>
   229d4:	ldr	r0, [r0]
   229d8:	ldr	lr, [sp, #24]
   229dc:	add	r0, r0, lr, lsl #1
   229e0:	ldrh	r0, [r0]
   229e4:	and	r0, r0, #8192	; 0x2000
   229e8:	cmp	r0, #0
   229ec:	beq	22a08 <__assert_fail@plt+0x112b4>
   229f0:	ldr	r0, [fp, #-12]
   229f4:	ldr	r1, [fp, #-8]
   229f8:	ldr	r2, [sp, #24]
   229fc:	add	r1, r1, r2
   22a00:	ldrb	r1, [r1]
   22a04:	bl	21e50 <__assert_fail@plt+0x106fc>
   22a08:	b	22a0c <__assert_fail@plt+0x112b8>
   22a0c:	ldr	r0, [sp, #24]
   22a10:	add	r0, r0, #1
   22a14:	str	r0, [sp, #24]
   22a18:	b	229c4 <__assert_fail@plt+0x11270>
   22a1c:	b	22a78 <__assert_fail@plt+0x11324>
   22a20:	movw	r0, #0
   22a24:	str	r0, [sp, #24]
   22a28:	ldr	r0, [sp, #24]
   22a2c:	cmp	r0, #256	; 0x100
   22a30:	bge	22a74 <__assert_fail@plt+0x11320>
   22a34:	bl	115e0 <__ctype_b_loc@plt>
   22a38:	ldr	r0, [r0]
   22a3c:	ldr	lr, [sp, #24]
   22a40:	add	r0, r0, lr, lsl #1
   22a44:	ldrh	r0, [r0]
   22a48:	and	r0, r0, #8192	; 0x2000
   22a4c:	cmp	r0, #0
   22a50:	beq	22a60 <__assert_fail@plt+0x1130c>
   22a54:	ldr	r0, [fp, #-12]
   22a58:	ldr	r1, [sp, #24]
   22a5c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22a60:	b	22a64 <__assert_fail@plt+0x11310>
   22a64:	ldr	r0, [sp, #24]
   22a68:	add	r0, r0, #1
   22a6c:	str	r0, [sp, #24]
   22a70:	b	22a28 <__assert_fail@plt+0x112d4>
   22a74:	b	22a78 <__assert_fail@plt+0x11324>
   22a78:	b	22a7c <__assert_fail@plt+0x11328>
   22a7c:	b	2322c <__assert_fail@plt+0x11ad8>
   22a80:	ldr	r0, [sp, #20]
   22a84:	movw	r1, #54792	; 0xd608
   22a88:	movt	r1, #3
   22a8c:	bl	11400 <strcmp@plt>
   22a90:	cmp	r0, #0
   22a94:	bne	22b70 <__assert_fail@plt+0x1141c>
   22a98:	b	22a9c <__assert_fail@plt+0x11348>
   22a9c:	ldr	r0, [fp, #-8]
   22aa0:	movw	r1, #0
   22aa4:	cmp	r0, r1
   22aa8:	beq	22b10 <__assert_fail@plt+0x113bc>
   22aac:	movw	r0, #0
   22ab0:	str	r0, [sp, #24]
   22ab4:	ldr	r0, [sp, #24]
   22ab8:	cmp	r0, #256	; 0x100
   22abc:	bge	22b0c <__assert_fail@plt+0x113b8>
   22ac0:	bl	115e0 <__ctype_b_loc@plt>
   22ac4:	ldr	r0, [r0]
   22ac8:	ldr	lr, [sp, #24]
   22acc:	add	r0, r0, lr, lsl #1
   22ad0:	ldrh	r0, [r0]
   22ad4:	and	r0, r0, #1024	; 0x400
   22ad8:	cmp	r0, #0
   22adc:	beq	22af8 <__assert_fail@plt+0x113a4>
   22ae0:	ldr	r0, [fp, #-12]
   22ae4:	ldr	r1, [fp, #-8]
   22ae8:	ldr	r2, [sp, #24]
   22aec:	add	r1, r1, r2
   22af0:	ldrb	r1, [r1]
   22af4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22af8:	b	22afc <__assert_fail@plt+0x113a8>
   22afc:	ldr	r0, [sp, #24]
   22b00:	add	r0, r0, #1
   22b04:	str	r0, [sp, #24]
   22b08:	b	22ab4 <__assert_fail@plt+0x11360>
   22b0c:	b	22b68 <__assert_fail@plt+0x11414>
   22b10:	movw	r0, #0
   22b14:	str	r0, [sp, #24]
   22b18:	ldr	r0, [sp, #24]
   22b1c:	cmp	r0, #256	; 0x100
   22b20:	bge	22b64 <__assert_fail@plt+0x11410>
   22b24:	bl	115e0 <__ctype_b_loc@plt>
   22b28:	ldr	r0, [r0]
   22b2c:	ldr	lr, [sp, #24]
   22b30:	add	r0, r0, lr, lsl #1
   22b34:	ldrh	r0, [r0]
   22b38:	and	r0, r0, #1024	; 0x400
   22b3c:	cmp	r0, #0
   22b40:	beq	22b50 <__assert_fail@plt+0x113fc>
   22b44:	ldr	r0, [fp, #-12]
   22b48:	ldr	r1, [sp, #24]
   22b4c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22b50:	b	22b54 <__assert_fail@plt+0x11400>
   22b54:	ldr	r0, [sp, #24]
   22b58:	add	r0, r0, #1
   22b5c:	str	r0, [sp, #24]
   22b60:	b	22b18 <__assert_fail@plt+0x113c4>
   22b64:	b	22b68 <__assert_fail@plt+0x11414>
   22b68:	b	22b6c <__assert_fail@plt+0x11418>
   22b6c:	b	23228 <__assert_fail@plt+0x11ad4>
   22b70:	ldr	r0, [sp, #20]
   22b74:	movw	r1, #54829	; 0xd62d
   22b78:	movt	r1, #3
   22b7c:	bl	11400 <strcmp@plt>
   22b80:	cmp	r0, #0
   22b84:	bne	22c60 <__assert_fail@plt+0x1150c>
   22b88:	b	22b8c <__assert_fail@plt+0x11438>
   22b8c:	ldr	r0, [fp, #-8]
   22b90:	movw	r1, #0
   22b94:	cmp	r0, r1
   22b98:	beq	22c00 <__assert_fail@plt+0x114ac>
   22b9c:	movw	r0, #0
   22ba0:	str	r0, [sp, #24]
   22ba4:	ldr	r0, [sp, #24]
   22ba8:	cmp	r0, #256	; 0x100
   22bac:	bge	22bfc <__assert_fail@plt+0x114a8>
   22bb0:	bl	115e0 <__ctype_b_loc@plt>
   22bb4:	ldr	r0, [r0]
   22bb8:	ldr	lr, [sp, #24]
   22bbc:	add	r0, r0, lr, lsl #1
   22bc0:	ldrh	r0, [r0]
   22bc4:	and	r0, r0, #2048	; 0x800
   22bc8:	cmp	r0, #0
   22bcc:	beq	22be8 <__assert_fail@plt+0x11494>
   22bd0:	ldr	r0, [fp, #-12]
   22bd4:	ldr	r1, [fp, #-8]
   22bd8:	ldr	r2, [sp, #24]
   22bdc:	add	r1, r1, r2
   22be0:	ldrb	r1, [r1]
   22be4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22be8:	b	22bec <__assert_fail@plt+0x11498>
   22bec:	ldr	r0, [sp, #24]
   22bf0:	add	r0, r0, #1
   22bf4:	str	r0, [sp, #24]
   22bf8:	b	22ba4 <__assert_fail@plt+0x11450>
   22bfc:	b	22c58 <__assert_fail@plt+0x11504>
   22c00:	movw	r0, #0
   22c04:	str	r0, [sp, #24]
   22c08:	ldr	r0, [sp, #24]
   22c0c:	cmp	r0, #256	; 0x100
   22c10:	bge	22c54 <__assert_fail@plt+0x11500>
   22c14:	bl	115e0 <__ctype_b_loc@plt>
   22c18:	ldr	r0, [r0]
   22c1c:	ldr	lr, [sp, #24]
   22c20:	add	r0, r0, lr, lsl #1
   22c24:	ldrh	r0, [r0]
   22c28:	and	r0, r0, #2048	; 0x800
   22c2c:	cmp	r0, #0
   22c30:	beq	22c40 <__assert_fail@plt+0x114ec>
   22c34:	ldr	r0, [fp, #-12]
   22c38:	ldr	r1, [sp, #24]
   22c3c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22c40:	b	22c44 <__assert_fail@plt+0x114f0>
   22c44:	ldr	r0, [sp, #24]
   22c48:	add	r0, r0, #1
   22c4c:	str	r0, [sp, #24]
   22c50:	b	22c08 <__assert_fail@plt+0x114b4>
   22c54:	b	22c58 <__assert_fail@plt+0x11504>
   22c58:	b	22c5c <__assert_fail@plt+0x11508>
   22c5c:	b	23224 <__assert_fail@plt+0x11ad0>
   22c60:	ldr	r0, [sp, #20]
   22c64:	movw	r1, #54804	; 0xd614
   22c68:	movt	r1, #3
   22c6c:	bl	11400 <strcmp@plt>
   22c70:	cmp	r0, #0
   22c74:	bne	22d50 <__assert_fail@plt+0x115fc>
   22c78:	b	22c7c <__assert_fail@plt+0x11528>
   22c7c:	ldr	r0, [fp, #-8]
   22c80:	movw	r1, #0
   22c84:	cmp	r0, r1
   22c88:	beq	22cf0 <__assert_fail@plt+0x1159c>
   22c8c:	movw	r0, #0
   22c90:	str	r0, [sp, #24]
   22c94:	ldr	r0, [sp, #24]
   22c98:	cmp	r0, #256	; 0x100
   22c9c:	bge	22cec <__assert_fail@plt+0x11598>
   22ca0:	bl	115e0 <__ctype_b_loc@plt>
   22ca4:	ldr	r0, [r0]
   22ca8:	ldr	lr, [sp, #24]
   22cac:	add	r0, r0, lr, lsl #1
   22cb0:	ldrh	r0, [r0]
   22cb4:	and	r0, r0, #16384	; 0x4000
   22cb8:	cmp	r0, #0
   22cbc:	beq	22cd8 <__assert_fail@plt+0x11584>
   22cc0:	ldr	r0, [fp, #-12]
   22cc4:	ldr	r1, [fp, #-8]
   22cc8:	ldr	r2, [sp, #24]
   22ccc:	add	r1, r1, r2
   22cd0:	ldrb	r1, [r1]
   22cd4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22cd8:	b	22cdc <__assert_fail@plt+0x11588>
   22cdc:	ldr	r0, [sp, #24]
   22ce0:	add	r0, r0, #1
   22ce4:	str	r0, [sp, #24]
   22ce8:	b	22c94 <__assert_fail@plt+0x11540>
   22cec:	b	22d48 <__assert_fail@plt+0x115f4>
   22cf0:	movw	r0, #0
   22cf4:	str	r0, [sp, #24]
   22cf8:	ldr	r0, [sp, #24]
   22cfc:	cmp	r0, #256	; 0x100
   22d00:	bge	22d44 <__assert_fail@plt+0x115f0>
   22d04:	bl	115e0 <__ctype_b_loc@plt>
   22d08:	ldr	r0, [r0]
   22d0c:	ldr	lr, [sp, #24]
   22d10:	add	r0, r0, lr, lsl #1
   22d14:	ldrh	r0, [r0]
   22d18:	and	r0, r0, #16384	; 0x4000
   22d1c:	cmp	r0, #0
   22d20:	beq	22d30 <__assert_fail@plt+0x115dc>
   22d24:	ldr	r0, [fp, #-12]
   22d28:	ldr	r1, [sp, #24]
   22d2c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22d30:	b	22d34 <__assert_fail@plt+0x115e0>
   22d34:	ldr	r0, [sp, #24]
   22d38:	add	r0, r0, #1
   22d3c:	str	r0, [sp, #24]
   22d40:	b	22cf8 <__assert_fail@plt+0x115a4>
   22d44:	b	22d48 <__assert_fail@plt+0x115f4>
   22d48:	b	22d4c <__assert_fail@plt+0x115f8>
   22d4c:	b	23220 <__assert_fail@plt+0x11acc>
   22d50:	ldr	r0, [sp, #20]
   22d54:	movw	r1, #54780	; 0xd5fc
   22d58:	movt	r1, #3
   22d5c:	bl	11400 <strcmp@plt>
   22d60:	cmp	r0, #0
   22d64:	bne	22e40 <__assert_fail@plt+0x116ec>
   22d68:	b	22d6c <__assert_fail@plt+0x11618>
   22d6c:	ldr	r0, [fp, #-8]
   22d70:	movw	r1, #0
   22d74:	cmp	r0, r1
   22d78:	beq	22de0 <__assert_fail@plt+0x1168c>
   22d7c:	movw	r0, #0
   22d80:	str	r0, [sp, #24]
   22d84:	ldr	r0, [sp, #24]
   22d88:	cmp	r0, #256	; 0x100
   22d8c:	bge	22ddc <__assert_fail@plt+0x11688>
   22d90:	bl	115e0 <__ctype_b_loc@plt>
   22d94:	ldr	r0, [r0]
   22d98:	ldr	lr, [sp, #24]
   22d9c:	add	r0, r0, lr, lsl #1
   22da0:	ldrh	r0, [r0]
   22da4:	and	r0, r0, #256	; 0x100
   22da8:	cmp	r0, #0
   22dac:	beq	22dc8 <__assert_fail@plt+0x11674>
   22db0:	ldr	r0, [fp, #-12]
   22db4:	ldr	r1, [fp, #-8]
   22db8:	ldr	r2, [sp, #24]
   22dbc:	add	r1, r1, r2
   22dc0:	ldrb	r1, [r1]
   22dc4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22dc8:	b	22dcc <__assert_fail@plt+0x11678>
   22dcc:	ldr	r0, [sp, #24]
   22dd0:	add	r0, r0, #1
   22dd4:	str	r0, [sp, #24]
   22dd8:	b	22d84 <__assert_fail@plt+0x11630>
   22ddc:	b	22e38 <__assert_fail@plt+0x116e4>
   22de0:	movw	r0, #0
   22de4:	str	r0, [sp, #24]
   22de8:	ldr	r0, [sp, #24]
   22dec:	cmp	r0, #256	; 0x100
   22df0:	bge	22e34 <__assert_fail@plt+0x116e0>
   22df4:	bl	115e0 <__ctype_b_loc@plt>
   22df8:	ldr	r0, [r0]
   22dfc:	ldr	lr, [sp, #24]
   22e00:	add	r0, r0, lr, lsl #1
   22e04:	ldrh	r0, [r0]
   22e08:	and	r0, r0, #256	; 0x100
   22e0c:	cmp	r0, #0
   22e10:	beq	22e20 <__assert_fail@plt+0x116cc>
   22e14:	ldr	r0, [fp, #-12]
   22e18:	ldr	r1, [sp, #24]
   22e1c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22e20:	b	22e24 <__assert_fail@plt+0x116d0>
   22e24:	ldr	r0, [sp, #24]
   22e28:	add	r0, r0, #1
   22e2c:	str	r0, [sp, #24]
   22e30:	b	22de8 <__assert_fail@plt+0x11694>
   22e34:	b	22e38 <__assert_fail@plt+0x116e4>
   22e38:	b	22e3c <__assert_fail@plt+0x116e8>
   22e3c:	b	2321c <__assert_fail@plt+0x11ac8>
   22e40:	ldr	r0, [sp, #20]
   22e44:	movw	r1, #54810	; 0xd61a
   22e48:	movt	r1, #3
   22e4c:	bl	11400 <strcmp@plt>
   22e50:	cmp	r0, #0
   22e54:	bne	22f30 <__assert_fail@plt+0x117dc>
   22e58:	b	22e5c <__assert_fail@plt+0x11708>
   22e5c:	ldr	r0, [fp, #-8]
   22e60:	movw	r1, #0
   22e64:	cmp	r0, r1
   22e68:	beq	22ed0 <__assert_fail@plt+0x1177c>
   22e6c:	movw	r0, #0
   22e70:	str	r0, [sp, #24]
   22e74:	ldr	r0, [sp, #24]
   22e78:	cmp	r0, #256	; 0x100
   22e7c:	bge	22ecc <__assert_fail@plt+0x11778>
   22e80:	bl	115e0 <__ctype_b_loc@plt>
   22e84:	ldr	r0, [r0]
   22e88:	ldr	lr, [sp, #24]
   22e8c:	add	r0, r0, lr, lsl #1
   22e90:	ldrh	r0, [r0]
   22e94:	and	r0, r0, #1
   22e98:	cmp	r0, #0
   22e9c:	beq	22eb8 <__assert_fail@plt+0x11764>
   22ea0:	ldr	r0, [fp, #-12]
   22ea4:	ldr	r1, [fp, #-8]
   22ea8:	ldr	r2, [sp, #24]
   22eac:	add	r1, r1, r2
   22eb0:	ldrb	r1, [r1]
   22eb4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22eb8:	b	22ebc <__assert_fail@plt+0x11768>
   22ebc:	ldr	r0, [sp, #24]
   22ec0:	add	r0, r0, #1
   22ec4:	str	r0, [sp, #24]
   22ec8:	b	22e74 <__assert_fail@plt+0x11720>
   22ecc:	b	22f28 <__assert_fail@plt+0x117d4>
   22ed0:	movw	r0, #0
   22ed4:	str	r0, [sp, #24]
   22ed8:	ldr	r0, [sp, #24]
   22edc:	cmp	r0, #256	; 0x100
   22ee0:	bge	22f24 <__assert_fail@plt+0x117d0>
   22ee4:	bl	115e0 <__ctype_b_loc@plt>
   22ee8:	ldr	r0, [r0]
   22eec:	ldr	lr, [sp, #24]
   22ef0:	add	r0, r0, lr, lsl #1
   22ef4:	ldrh	r0, [r0]
   22ef8:	and	r0, r0, #1
   22efc:	cmp	r0, #0
   22f00:	beq	22f10 <__assert_fail@plt+0x117bc>
   22f04:	ldr	r0, [fp, #-12]
   22f08:	ldr	r1, [sp, #24]
   22f0c:	bl	21e50 <__assert_fail@plt+0x106fc>
   22f10:	b	22f14 <__assert_fail@plt+0x117c0>
   22f14:	ldr	r0, [sp, #24]
   22f18:	add	r0, r0, #1
   22f1c:	str	r0, [sp, #24]
   22f20:	b	22ed8 <__assert_fail@plt+0x11784>
   22f24:	b	22f28 <__assert_fail@plt+0x117d4>
   22f28:	b	22f2c <__assert_fail@plt+0x117d8>
   22f2c:	b	23218 <__assert_fail@plt+0x11ac4>
   22f30:	ldr	r0, [sp, #20]
   22f34:	movw	r1, #54816	; 0xd620
   22f38:	movt	r1, #3
   22f3c:	bl	11400 <strcmp@plt>
   22f40:	cmp	r0, #0
   22f44:	bne	23020 <__assert_fail@plt+0x118cc>
   22f48:	b	22f4c <__assert_fail@plt+0x117f8>
   22f4c:	ldr	r0, [fp, #-8]
   22f50:	movw	r1, #0
   22f54:	cmp	r0, r1
   22f58:	beq	22fc0 <__assert_fail@plt+0x1186c>
   22f5c:	movw	r0, #0
   22f60:	str	r0, [sp, #24]
   22f64:	ldr	r0, [sp, #24]
   22f68:	cmp	r0, #256	; 0x100
   22f6c:	bge	22fbc <__assert_fail@plt+0x11868>
   22f70:	bl	115e0 <__ctype_b_loc@plt>
   22f74:	ldr	r0, [r0]
   22f78:	ldr	lr, [sp, #24]
   22f7c:	add	r0, r0, lr, lsl #1
   22f80:	ldrh	r0, [r0]
   22f84:	and	r0, r0, #32768	; 0x8000
   22f88:	cmp	r0, #0
   22f8c:	beq	22fa8 <__assert_fail@plt+0x11854>
   22f90:	ldr	r0, [fp, #-12]
   22f94:	ldr	r1, [fp, #-8]
   22f98:	ldr	r2, [sp, #24]
   22f9c:	add	r1, r1, r2
   22fa0:	ldrb	r1, [r1]
   22fa4:	bl	21e50 <__assert_fail@plt+0x106fc>
   22fa8:	b	22fac <__assert_fail@plt+0x11858>
   22fac:	ldr	r0, [sp, #24]
   22fb0:	add	r0, r0, #1
   22fb4:	str	r0, [sp, #24]
   22fb8:	b	22f64 <__assert_fail@plt+0x11810>
   22fbc:	b	23018 <__assert_fail@plt+0x118c4>
   22fc0:	movw	r0, #0
   22fc4:	str	r0, [sp, #24]
   22fc8:	ldr	r0, [sp, #24]
   22fcc:	cmp	r0, #256	; 0x100
   22fd0:	bge	23014 <__assert_fail@plt+0x118c0>
   22fd4:	bl	115e0 <__ctype_b_loc@plt>
   22fd8:	ldr	r0, [r0]
   22fdc:	ldr	lr, [sp, #24]
   22fe0:	add	r0, r0, lr, lsl #1
   22fe4:	ldrh	r0, [r0]
   22fe8:	and	r0, r0, #32768	; 0x8000
   22fec:	cmp	r0, #0
   22ff0:	beq	23000 <__assert_fail@plt+0x118ac>
   22ff4:	ldr	r0, [fp, #-12]
   22ff8:	ldr	r1, [sp, #24]
   22ffc:	bl	21e50 <__assert_fail@plt+0x106fc>
   23000:	b	23004 <__assert_fail@plt+0x118b0>
   23004:	ldr	r0, [sp, #24]
   23008:	add	r0, r0, #1
   2300c:	str	r0, [sp, #24]
   23010:	b	22fc8 <__assert_fail@plt+0x11874>
   23014:	b	23018 <__assert_fail@plt+0x118c4>
   23018:	b	2301c <__assert_fail@plt+0x118c8>
   2301c:	b	23214 <__assert_fail@plt+0x11ac0>
   23020:	ldr	r0, [sp, #20]
   23024:	movw	r1, #54822	; 0xd626
   23028:	movt	r1, #3
   2302c:	bl	11400 <strcmp@plt>
   23030:	cmp	r0, #0
   23034:	bne	23110 <__assert_fail@plt+0x119bc>
   23038:	b	2303c <__assert_fail@plt+0x118e8>
   2303c:	ldr	r0, [fp, #-8]
   23040:	movw	r1, #0
   23044:	cmp	r0, r1
   23048:	beq	230b0 <__assert_fail@plt+0x1195c>
   2304c:	movw	r0, #0
   23050:	str	r0, [sp, #24]
   23054:	ldr	r0, [sp, #24]
   23058:	cmp	r0, #256	; 0x100
   2305c:	bge	230ac <__assert_fail@plt+0x11958>
   23060:	bl	115e0 <__ctype_b_loc@plt>
   23064:	ldr	r0, [r0]
   23068:	ldr	lr, [sp, #24]
   2306c:	add	r0, r0, lr, lsl #1
   23070:	ldrh	r0, [r0]
   23074:	and	r0, r0, #4
   23078:	cmp	r0, #0
   2307c:	beq	23098 <__assert_fail@plt+0x11944>
   23080:	ldr	r0, [fp, #-12]
   23084:	ldr	r1, [fp, #-8]
   23088:	ldr	r2, [sp, #24]
   2308c:	add	r1, r1, r2
   23090:	ldrb	r1, [r1]
   23094:	bl	21e50 <__assert_fail@plt+0x106fc>
   23098:	b	2309c <__assert_fail@plt+0x11948>
   2309c:	ldr	r0, [sp, #24]
   230a0:	add	r0, r0, #1
   230a4:	str	r0, [sp, #24]
   230a8:	b	23054 <__assert_fail@plt+0x11900>
   230ac:	b	23108 <__assert_fail@plt+0x119b4>
   230b0:	movw	r0, #0
   230b4:	str	r0, [sp, #24]
   230b8:	ldr	r0, [sp, #24]
   230bc:	cmp	r0, #256	; 0x100
   230c0:	bge	23104 <__assert_fail@plt+0x119b0>
   230c4:	bl	115e0 <__ctype_b_loc@plt>
   230c8:	ldr	r0, [r0]
   230cc:	ldr	lr, [sp, #24]
   230d0:	add	r0, r0, lr, lsl #1
   230d4:	ldrh	r0, [r0]
   230d8:	and	r0, r0, #4
   230dc:	cmp	r0, #0
   230e0:	beq	230f0 <__assert_fail@plt+0x1199c>
   230e4:	ldr	r0, [fp, #-12]
   230e8:	ldr	r1, [sp, #24]
   230ec:	bl	21e50 <__assert_fail@plt+0x106fc>
   230f0:	b	230f4 <__assert_fail@plt+0x119a0>
   230f4:	ldr	r0, [sp, #24]
   230f8:	add	r0, r0, #1
   230fc:	str	r0, [sp, #24]
   23100:	b	230b8 <__assert_fail@plt+0x11964>
   23104:	b	23108 <__assert_fail@plt+0x119b4>
   23108:	b	2310c <__assert_fail@plt+0x119b8>
   2310c:	b	23210 <__assert_fail@plt+0x11abc>
   23110:	ldr	r0, [sp, #20]
   23114:	movw	r1, #54828	; 0xd62c
   23118:	movt	r1, #3
   2311c:	bl	11400 <strcmp@plt>
   23120:	cmp	r0, #0
   23124:	bne	23200 <__assert_fail@plt+0x11aac>
   23128:	b	2312c <__assert_fail@plt+0x119d8>
   2312c:	ldr	r0, [fp, #-8]
   23130:	movw	r1, #0
   23134:	cmp	r0, r1
   23138:	beq	231a0 <__assert_fail@plt+0x11a4c>
   2313c:	movw	r0, #0
   23140:	str	r0, [sp, #24]
   23144:	ldr	r0, [sp, #24]
   23148:	cmp	r0, #256	; 0x100
   2314c:	bge	2319c <__assert_fail@plt+0x11a48>
   23150:	bl	115e0 <__ctype_b_loc@plt>
   23154:	ldr	r0, [r0]
   23158:	ldr	lr, [sp, #24]
   2315c:	add	r0, r0, lr, lsl #1
   23160:	ldrh	r0, [r0]
   23164:	and	r0, r0, #4096	; 0x1000
   23168:	cmp	r0, #0
   2316c:	beq	23188 <__assert_fail@plt+0x11a34>
   23170:	ldr	r0, [fp, #-12]
   23174:	ldr	r1, [fp, #-8]
   23178:	ldr	r2, [sp, #24]
   2317c:	add	r1, r1, r2
   23180:	ldrb	r1, [r1]
   23184:	bl	21e50 <__assert_fail@plt+0x106fc>
   23188:	b	2318c <__assert_fail@plt+0x11a38>
   2318c:	ldr	r0, [sp, #24]
   23190:	add	r0, r0, #1
   23194:	str	r0, [sp, #24]
   23198:	b	23144 <__assert_fail@plt+0x119f0>
   2319c:	b	231f8 <__assert_fail@plt+0x11aa4>
   231a0:	movw	r0, #0
   231a4:	str	r0, [sp, #24]
   231a8:	ldr	r0, [sp, #24]
   231ac:	cmp	r0, #256	; 0x100
   231b0:	bge	231f4 <__assert_fail@plt+0x11aa0>
   231b4:	bl	115e0 <__ctype_b_loc@plt>
   231b8:	ldr	r0, [r0]
   231bc:	ldr	lr, [sp, #24]
   231c0:	add	r0, r0, lr, lsl #1
   231c4:	ldrh	r0, [r0]
   231c8:	and	r0, r0, #4096	; 0x1000
   231cc:	cmp	r0, #0
   231d0:	beq	231e0 <__assert_fail@plt+0x11a8c>
   231d4:	ldr	r0, [fp, #-12]
   231d8:	ldr	r1, [sp, #24]
   231dc:	bl	21e50 <__assert_fail@plt+0x106fc>
   231e0:	b	231e4 <__assert_fail@plt+0x11a90>
   231e4:	ldr	r0, [sp, #24]
   231e8:	add	r0, r0, #1
   231ec:	str	r0, [sp, #24]
   231f0:	b	231a8 <__assert_fail@plt+0x11a54>
   231f4:	b	231f8 <__assert_fail@plt+0x11aa4>
   231f8:	b	231fc <__assert_fail@plt+0x11aa8>
   231fc:	b	2320c <__assert_fail@plt+0x11ab8>
   23200:	movw	r0, #4
   23204:	str	r0, [fp, #-4]
   23208:	b	23240 <__assert_fail@plt+0x11aec>
   2320c:	b	23210 <__assert_fail@plt+0x11abc>
   23210:	b	23214 <__assert_fail@plt+0x11ac0>
   23214:	b	23218 <__assert_fail@plt+0x11ac4>
   23218:	b	2321c <__assert_fail@plt+0x11ac8>
   2321c:	b	23220 <__assert_fail@plt+0x11acc>
   23220:	b	23224 <__assert_fail@plt+0x11ad0>
   23224:	b	23228 <__assert_fail@plt+0x11ad4>
   23228:	b	2322c <__assert_fail@plt+0x11ad8>
   2322c:	b	23230 <__assert_fail@plt+0x11adc>
   23230:	b	23234 <__assert_fail@plt+0x11ae0>
   23234:	b	23238 <__assert_fail@plt+0x11ae4>
   23238:	movw	r0, #0
   2323c:	str	r0, [fp, #-4]
   23240:	ldr	r0, [fp, #-4]
   23244:	mov	sp, fp
   23248:	pop	{fp, pc}
   2324c:	sub	sp, sp, #8
   23250:	str	r0, [sp, #4]
   23254:	movw	r0, #0
   23258:	str	r0, [sp]
   2325c:	ldr	r0, [sp]
   23260:	cmp	r0, #8
   23264:	bge	2328c <__assert_fail@plt+0x11b38>
   23268:	ldr	r0, [sp, #4]
   2326c:	ldr	r1, [sp]
   23270:	ldr	r1, [r0, r1, lsl #2]!
   23274:	mvn	r1, r1
   23278:	str	r1, [r0]
   2327c:	ldr	r0, [sp]
   23280:	add	r0, r0, #1
   23284:	str	r0, [sp]
   23288:	b	2325c <__assert_fail@plt+0x11b08>
   2328c:	add	sp, sp, #8
   23290:	bx	lr
   23294:	sub	sp, sp, #12
   23298:	str	r0, [sp, #8]
   2329c:	str	r1, [sp, #4]
   232a0:	movw	r0, #0
   232a4:	str	r0, [sp]
   232a8:	ldr	r0, [sp]
   232ac:	cmp	r0, #8
   232b0:	bge	232e4 <__assert_fail@plt+0x11b90>
   232b4:	ldr	r0, [sp, #4]
   232b8:	ldr	r1, [sp]
   232bc:	ldr	r0, [r0, r1, lsl #2]
   232c0:	ldr	r2, [sp, #8]
   232c4:	add	r1, r2, r1, lsl #2
   232c8:	ldr	r2, [r1]
   232cc:	and	r0, r2, r0
   232d0:	str	r0, [r1]
   232d4:	ldr	r0, [sp]
   232d8:	add	r0, r0, #1
   232dc:	str	r0, [sp]
   232e0:	b	232a8 <__assert_fail@plt+0x11b54>
   232e4:	add	sp, sp, #12
   232e8:	bx	lr
   232ec:	sub	sp, sp, #16
   232f0:	str	r0, [sp, #8]
   232f4:	str	r1, [sp, #4]
   232f8:	ldr	r0, [sp, #8]
   232fc:	ldr	r0, [r0, #80]	; 0x50
   23300:	cmp	r0, #1
   23304:	bne	23314 <__assert_fail@plt+0x11bc0>
   23308:	movw	r0, #1
   2330c:	str	r0, [sp, #12]
   23310:	b	2337c <__assert_fail@plt+0x11c28>
   23314:	movw	r0, #1
   23318:	str	r0, [sp]
   2331c:	ldr	r0, [sp, #4]
   23320:	ldr	r1, [sp]
   23324:	add	r0, r0, r1
   23328:	ldr	r1, [sp, #8]
   2332c:	ldr	r1, [r1, #28]
   23330:	cmp	r0, r1
   23334:	bge	23374 <__assert_fail@plt+0x11c20>
   23338:	ldr	r0, [sp, #8]
   2333c:	ldr	r0, [r0, #8]
   23340:	ldr	r1, [sp, #4]
   23344:	ldr	r2, [sp]
   23348:	add	r1, r1, r2
   2334c:	add	r0, r0, r1, lsl #2
   23350:	ldr	r0, [r0]
   23354:	cmn	r0, #1
   23358:	beq	23360 <__assert_fail@plt+0x11c0c>
   2335c:	b	23374 <__assert_fail@plt+0x11c20>
   23360:	b	23364 <__assert_fail@plt+0x11c10>
   23364:	ldr	r0, [sp]
   23368:	add	r0, r0, #1
   2336c:	str	r0, [sp]
   23370:	b	2331c <__assert_fail@plt+0x11bc8>
   23374:	ldr	r0, [sp]
   23378:	str	r0, [sp, #12]
   2337c:	ldr	r0, [sp, #12]
   23380:	add	sp, sp, #16
   23384:	bx	lr
   23388:	push	{fp, lr}
   2338c:	mov	fp, sp
   23390:	sub	sp, sp, #32
   23394:	str	r0, [fp, #-8]
   23398:	str	r1, [fp, #-12]
   2339c:	str	r2, [sp, #16]
   233a0:	ldr	r0, [sp, #16]
   233a4:	ldrb	r0, [r0]
   233a8:	strb	r0, [sp, #14]
   233ac:	movw	r0, #0
   233b0:	str	r0, [sp, #8]
   233b4:	ldr	r0, [fp, #-12]
   233b8:	ldr	r0, [r0, #56]	; 0x38
   233bc:	ldr	r1, [fp, #-12]
   233c0:	ldr	r1, [r1, #40]	; 0x28
   233c4:	cmp	r0, r1
   233c8:	bgt	233d8 <__assert_fail@plt+0x11c84>
   233cc:	movw	r0, #7
   233d0:	str	r0, [fp, #-4]
   233d4:	b	2355c <__assert_fail@plt+0x11e08>
   233d8:	b	233dc <__assert_fail@plt+0x11c88>
   233dc:	ldr	r0, [sp, #8]
   233e0:	cmp	r0, #32
   233e4:	blt	233f4 <__assert_fail@plt+0x11ca0>
   233e8:	movw	r0, #7
   233ec:	str	r0, [fp, #-4]
   233f0:	b	2355c <__assert_fail@plt+0x11e08>
   233f4:	ldr	r0, [sp, #16]
   233f8:	ldr	r0, [r0, #4]
   233fc:	and	r0, r0, #255	; 0xff
   23400:	cmp	r0, #30
   23404:	bne	23418 <__assert_fail@plt+0x11cc4>
   23408:	ldr	r0, [fp, #-12]
   2340c:	bl	23568 <__assert_fail@plt+0x11e14>
   23410:	strb	r0, [sp, #15]
   23414:	b	2343c <__assert_fail@plt+0x11ce8>
   23418:	ldr	r0, [fp, #-12]
   2341c:	ldr	r0, [r0, #4]
   23420:	ldr	r1, [fp, #-12]
   23424:	ldr	r2, [r1, #40]	; 0x28
   23428:	add	r3, r2, #1
   2342c:	str	r3, [r1, #40]	; 0x28
   23430:	add	r0, r0, r2
   23434:	ldrb	r0, [r0]
   23438:	strb	r0, [sp, #15]
   2343c:	ldr	r0, [fp, #-12]
   23440:	ldr	r0, [r0, #56]	; 0x38
   23444:	ldr	r1, [fp, #-12]
   23448:	ldr	r1, [r1, #40]	; 0x28
   2344c:	cmp	r0, r1
   23450:	bgt	23460 <__assert_fail@plt+0x11d0c>
   23454:	movw	r0, #7
   23458:	str	r0, [fp, #-4]
   2345c:	b	2355c <__assert_fail@plt+0x11e08>
   23460:	ldrb	r0, [sp, #15]
   23464:	ldrb	r1, [sp, #14]
   23468:	cmp	r0, r1
   2346c:	bne	23498 <__assert_fail@plt+0x11d44>
   23470:	ldr	r0, [fp, #-12]
   23474:	ldr	r0, [r0, #4]
   23478:	ldr	r1, [fp, #-12]
   2347c:	ldr	r1, [r1, #40]	; 0x28
   23480:	add	r1, r1, #0
   23484:	add	r0, r0, r1
   23488:	ldrb	r0, [r0]
   2348c:	cmp	r0, #93	; 0x5d
   23490:	bne	23498 <__assert_fail@plt+0x11d44>
   23494:	b	234c0 <__assert_fail@plt+0x11d6c>
   23498:	ldrb	r0, [sp, #15]
   2349c:	ldr	r1, [fp, #-8]
   234a0:	ldr	r1, [r1, #4]
   234a4:	ldr	r2, [sp, #8]
   234a8:	add	r1, r1, r2
   234ac:	strb	r0, [r1]
   234b0:	ldr	r0, [sp, #8]
   234b4:	add	r0, r0, #1
   234b8:	str	r0, [sp, #8]
   234bc:	b	233dc <__assert_fail@plt+0x11c88>
   234c0:	ldr	r0, [fp, #-12]
   234c4:	ldr	r1, [r0, #40]	; 0x28
   234c8:	add	r1, r1, #1
   234cc:	str	r1, [r0, #40]	; 0x28
   234d0:	ldr	r0, [fp, #-8]
   234d4:	ldr	r0, [r0, #4]
   234d8:	ldr	r1, [sp, #8]
   234dc:	mov	r2, #0
   234e0:	strb	r2, [r0, r1]
   234e4:	ldr	r0, [sp, #16]
   234e8:	ldrb	r0, [r0, #4]
   234ec:	mov	r1, r0
   234f0:	cmp	r0, #26
   234f4:	str	r1, [sp, #4]
   234f8:	beq	23520 <__assert_fail@plt+0x11dcc>
   234fc:	b	23500 <__assert_fail@plt+0x11dac>
   23500:	ldr	r0, [sp, #4]
   23504:	cmp	r0, #28
   23508:	beq	23530 <__assert_fail@plt+0x11ddc>
   2350c:	b	23510 <__assert_fail@plt+0x11dbc>
   23510:	ldr	r0, [sp, #4]
   23514:	cmp	r0, #30
   23518:	beq	23540 <__assert_fail@plt+0x11dec>
   2351c:	b	23550 <__assert_fail@plt+0x11dfc>
   23520:	ldr	r0, [fp, #-8]
   23524:	movw	r1, #3
   23528:	str	r1, [r0]
   2352c:	b	23554 <__assert_fail@plt+0x11e00>
   23530:	ldr	r0, [fp, #-8]
   23534:	movw	r1, #2
   23538:	str	r1, [r0]
   2353c:	b	23554 <__assert_fail@plt+0x11e00>
   23540:	ldr	r0, [fp, #-8]
   23544:	movw	r1, #4
   23548:	str	r1, [r0]
   2354c:	b	23554 <__assert_fail@plt+0x11e00>
   23550:	b	23554 <__assert_fail@plt+0x11e00>
   23554:	movw	r0, #0
   23558:	str	r0, [fp, #-4]
   2355c:	ldr	r0, [fp, #-4]
   23560:	mov	sp, fp
   23564:	pop	{fp, pc}
   23568:	push	{fp, lr}
   2356c:	mov	fp, sp
   23570:	sub	sp, sp, #16
   23574:	str	r0, [sp, #8]
   23578:	ldr	r0, [sp, #8]
   2357c:	ldrsb	r0, [r0, #75]	; 0x4b
   23580:	cmp	r0, #0
   23584:	movw	r0, #0
   23588:	movne	r0, #1
   2358c:	mvn	r1, #0
   23590:	eor	r0, r0, r1
   23594:	tst	r0, #1
   23598:	beq	235c4 <__assert_fail@plt+0x11e70>
   2359c:	ldr	r0, [sp, #8]
   235a0:	ldr	r0, [r0, #4]
   235a4:	ldr	r1, [sp, #8]
   235a8:	ldr	r2, [r1, #40]	; 0x28
   235ac:	add	r3, r2, #1
   235b0:	str	r3, [r1, #40]	; 0x28
   235b4:	add	r0, r0, r2
   235b8:	ldrb	r0, [r0]
   235bc:	strb	r0, [fp, #-1]
   235c0:	b	23704 <__assert_fail@plt+0x11fb0>
   235c4:	ldr	r0, [sp, #8]
   235c8:	ldrsb	r0, [r0, #76]	; 0x4c
   235cc:	cmp	r0, #0
   235d0:	beq	236d4 <__assert_fail@plt+0x11f80>
   235d4:	ldr	r0, [sp, #8]
   235d8:	ldr	r0, [r0, #40]	; 0x28
   235dc:	ldr	r1, [sp, #8]
   235e0:	ldr	r1, [r1, #28]
   235e4:	cmp	r0, r1
   235e8:	beq	23630 <__assert_fail@plt+0x11edc>
   235ec:	ldr	r0, [sp, #8]
   235f0:	ldr	r1, [r0, #8]
   235f4:	ldr	r0, [r0, #40]	; 0x28
   235f8:	add	r0, r1, r0, lsl #2
   235fc:	ldr	r0, [r0]
   23600:	cmn	r0, #1
   23604:	bne	23630 <__assert_fail@plt+0x11edc>
   23608:	ldr	r0, [sp, #8]
   2360c:	ldr	r0, [r0, #4]
   23610:	ldr	r1, [sp, #8]
   23614:	ldr	r2, [r1, #40]	; 0x28
   23618:	add	r3, r2, #1
   2361c:	str	r3, [r1, #40]	; 0x28
   23620:	add	r0, r0, r2
   23624:	ldrb	r0, [r0]
   23628:	strb	r0, [fp, #-1]
   2362c:	b	23704 <__assert_fail@plt+0x11fb0>
   23630:	ldr	r0, [sp, #8]
   23634:	ldr	r1, [r0, #12]
   23638:	ldr	r0, [r0, #40]	; 0x28
   2363c:	add	r0, r1, r0, lsl #2
   23640:	ldr	r0, [r0]
   23644:	str	r0, [sp, #4]
   23648:	ldr	r0, [sp, #8]
   2364c:	ldr	r0, [r0]
   23650:	ldr	r1, [sp, #8]
   23654:	ldr	r1, [r1, #24]
   23658:	ldr	r2, [sp, #4]
   2365c:	add	r1, r1, r2
   23660:	add	r0, r0, r1
   23664:	ldrb	r0, [r0]
   23668:	str	r0, [sp]
   2366c:	ldr	r0, [sp]
   23670:	mvn	r1, #127	; 0x7f
   23674:	and	r0, r0, r1
   23678:	cmp	r0, #0
   2367c:	beq	236a8 <__assert_fail@plt+0x11f54>
   23680:	ldr	r0, [sp, #8]
   23684:	ldr	r0, [r0, #4]
   23688:	ldr	r1, [sp, #8]
   2368c:	ldr	r2, [r1, #40]	; 0x28
   23690:	add	r3, r2, #1
   23694:	str	r3, [r1, #40]	; 0x28
   23698:	add	r0, r0, r2
   2369c:	ldrb	r0, [r0]
   236a0:	strb	r0, [fp, #-1]
   236a4:	b	23704 <__assert_fail@plt+0x11fb0>
   236a8:	ldr	r0, [sp, #8]
   236ac:	ldr	r1, [sp, #8]
   236b0:	ldr	r1, [r1, #40]	; 0x28
   236b4:	bl	232ec <__assert_fail@plt+0x11b98>
   236b8:	ldr	r1, [sp, #8]
   236bc:	ldr	lr, [r1, #40]	; 0x28
   236c0:	add	r0, lr, r0
   236c4:	str	r0, [r1, #40]	; 0x28
   236c8:	ldr	r0, [sp]
   236cc:	strb	r0, [fp, #-1]
   236d0:	b	23704 <__assert_fail@plt+0x11fb0>
   236d4:	ldr	r0, [sp, #8]
   236d8:	ldr	r0, [r0]
   236dc:	ldr	r1, [sp, #8]
   236e0:	ldr	r1, [r1, #24]
   236e4:	ldr	r2, [sp, #8]
   236e8:	ldr	r3, [r2, #40]	; 0x28
   236ec:	add	ip, r3, #1
   236f0:	str	ip, [r2, #40]	; 0x28
   236f4:	add	r1, r1, r3
   236f8:	add	r0, r0, r1
   236fc:	ldrb	r0, [r0]
   23700:	strb	r0, [fp, #-1]
   23704:	ldrb	r0, [fp, #-1]
   23708:	mov	sp, fp
   2370c:	pop	{fp, pc}
   23710:	push	{fp, lr}
   23714:	mov	fp, sp
   23718:	sub	sp, sp, #16
   2371c:	strb	r0, [fp, #-1]
   23720:	str	r1, [sp, #8]
   23724:	ldr	r0, [sp, #8]
   23728:	ldr	r0, [r0, #92]	; 0x5c
   2372c:	cmp	r0, #1
   23730:	ble	23744 <__assert_fail@plt+0x11ff0>
   23734:	ldrb	r0, [fp, #-1]
   23738:	bl	11664 <btowc@plt>
   2373c:	str	r0, [sp, #4]
   23740:	b	2374c <__assert_fail@plt+0x11ff8>
   23744:	ldrb	r0, [fp, #-1]
   23748:	str	r0, [sp, #4]
   2374c:	ldr	r0, [sp, #4]
   23750:	mov	sp, fp
   23754:	pop	{fp, pc}
   23758:	push	{fp, lr}
   2375c:	mov	fp, sp
   23760:	sub	sp, sp, #40	; 0x28
   23764:	str	r0, [fp, #-8]
   23768:	str	r1, [fp, #-12]
   2376c:	str	r2, [fp, #-16]
   23770:	mvn	r0, #0
   23774:	str	r0, [sp, #20]
   23778:	ldr	r0, [fp, #-12]
   2377c:	ldr	r1, [fp, #-8]
   23780:	ldr	r2, [fp, #-16]
   23784:	bl	1e020 <__assert_fail@plt+0xc8cc>
   23788:	ldr	r0, [fp, #-12]
   2378c:	ldrb	r0, [r0]
   23790:	strb	r0, [sp, #19]
   23794:	ldr	r0, [fp, #-12]
   23798:	ldr	r0, [r0, #4]
   2379c:	and	r0, r0, #255	; 0xff
   237a0:	cmp	r0, #2
   237a4:	bne	237b4 <__assert_fail@plt+0x12060>
   237a8:	mvn	r0, #1
   237ac:	str	r0, [fp, #-4]
   237b0:	b	238ac <__assert_fail@plt+0x12158>
   237b4:	ldr	r0, [fp, #-12]
   237b8:	ldr	r0, [r0, #4]
   237bc:	and	r0, r0, #255	; 0xff
   237c0:	cmp	r0, #24
   237c4:	beq	237d4 <__assert_fail@plt+0x12080>
   237c8:	ldrb	r0, [sp, #19]
   237cc:	cmp	r0, #44	; 0x2c
   237d0:	bne	237d8 <__assert_fail@plt+0x12084>
   237d4:	b	238a4 <__assert_fail@plt+0x12150>
   237d8:	ldr	r0, [fp, #-12]
   237dc:	ldr	r0, [r0, #4]
   237e0:	and	r0, r0, #255	; 0xff
   237e4:	cmp	r0, #1
   237e8:	bne	23814 <__assert_fail@plt+0x120c0>
   237ec:	ldrb	r0, [sp, #19]
   237f0:	cmp	r0, #48	; 0x30
   237f4:	blt	23814 <__assert_fail@plt+0x120c0>
   237f8:	ldrb	r0, [sp, #19]
   237fc:	movw	r1, #57	; 0x39
   23800:	cmp	r1, r0
   23804:	blt	23814 <__assert_fail@plt+0x120c0>
   23808:	ldr	r0, [sp, #20]
   2380c:	cmn	r0, #2
   23810:	bne	23820 <__assert_fail@plt+0x120cc>
   23814:	mvn	r0, #1
   23818:	str	r0, [sp, #12]
   2381c:	b	23898 <__assert_fail@plt+0x12144>
   23820:	ldr	r0, [sp, #20]
   23824:	cmn	r0, #1
   23828:	bne	2383c <__assert_fail@plt+0x120e8>
   2382c:	ldrb	r0, [sp, #19]
   23830:	sub	r0, r0, #48	; 0x30
   23834:	str	r0, [sp, #8]
   23838:	b	23890 <__assert_fail@plt+0x1213c>
   2383c:	ldr	r0, [sp, #20]
   23840:	movw	r1, #10
   23844:	mul	r0, r0, r1
   23848:	ldrb	r1, [sp, #19]
   2384c:	add	r0, r0, r1
   23850:	sub	r0, r0, #48	; 0x30
   23854:	movw	r1, #32768	; 0x8000
   23858:	cmp	r1, r0
   2385c:	bge	2386c <__assert_fail@plt+0x12118>
   23860:	movw	r0, #32768	; 0x8000
   23864:	str	r0, [sp, #4]
   23868:	b	23888 <__assert_fail@plt+0x12134>
   2386c:	ldr	r0, [sp, #20]
   23870:	movw	r1, #10
   23874:	mul	r0, r0, r1
   23878:	ldrb	r1, [sp, #19]
   2387c:	add	r0, r0, r1
   23880:	sub	r0, r0, #48	; 0x30
   23884:	str	r0, [sp, #4]
   23888:	ldr	r0, [sp, #4]
   2388c:	str	r0, [sp, #8]
   23890:	ldr	r0, [sp, #8]
   23894:	str	r0, [sp, #12]
   23898:	ldr	r0, [sp, #12]
   2389c:	str	r0, [sp, #20]
   238a0:	b	23778 <__assert_fail@plt+0x12024>
   238a4:	ldr	r0, [sp, #20]
   238a8:	str	r0, [fp, #-4]
   238ac:	ldr	r0, [fp, #-4]
   238b0:	mov	sp, fp
   238b4:	pop	{fp, pc}
   238b8:	push	{fp, lr}
   238bc:	mov	fp, sp
   238c0:	sub	sp, sp, #40	; 0x28
   238c4:	str	r0, [fp, #-8]
   238c8:	str	r1, [fp, #-12]
   238cc:	add	r0, sp, #20
   238d0:	str	r0, [sp, #16]
   238d4:	ldr	r0, [fp, #-8]
   238d8:	ldr	r0, [r0]
   238dc:	str	r0, [sp, #12]
   238e0:	ldr	r0, [fp, #-8]
   238e4:	str	r0, [fp, #-16]
   238e8:	ldr	r0, [fp, #-12]
   238ec:	ldr	r1, [fp, #-16]
   238f0:	add	r3, r1, #20
   238f4:	movw	r1, #0
   238f8:	str	r1, [sp, #4]
   238fc:	ldr	r2, [sp, #4]
   23900:	bl	20348 <__assert_fail@plt+0xebf4>
   23904:	ldr	r1, [sp, #16]
   23908:	str	r0, [r1]
   2390c:	ldr	r0, [sp, #16]
   23910:	ldr	r0, [r0]
   23914:	movw	r1, #0
   23918:	cmp	r0, r1
   2391c:	bne	2392c <__assert_fail@plt+0x121d8>
   23920:	movw	r0, #0
   23924:	str	r0, [fp, #-4]
   23928:	b	23a3c <__assert_fail@plt+0x122e8>
   2392c:	ldr	r0, [sp, #12]
   23930:	ldr	r1, [sp, #16]
   23934:	ldr	r1, [r1]
   23938:	str	r0, [r1]
   2393c:	ldr	r0, [sp, #16]
   23940:	ldr	r0, [r0]
   23944:	ldr	r1, [r0, #24]
   23948:	mvn	r2, #262144	; 0x40000
   2394c:	and	r1, r1, r2
   23950:	orr	r1, r1, #262144	; 0x40000
   23954:	str	r1, [r0, #24]
   23958:	ldr	r0, [sp, #16]
   2395c:	ldr	r0, [r0]
   23960:	str	r0, [sp, #12]
   23964:	ldr	r0, [fp, #-16]
   23968:	ldr	r0, [r0, #4]
   2396c:	movw	r1, #0
   23970:	cmp	r0, r1
   23974:	beq	23994 <__assert_fail@plt+0x12240>
   23978:	ldr	r0, [fp, #-16]
   2397c:	ldr	r0, [r0, #4]
   23980:	str	r0, [fp, #-16]
   23984:	ldr	r0, [sp, #12]
   23988:	add	r0, r0, #4
   2398c:	str	r0, [sp, #16]
   23990:	b	23a38 <__assert_fail@plt+0x122e4>
   23994:	movw	r0, #0
   23998:	str	r0, [sp, #8]
   2399c:	ldr	r0, [fp, #-16]
   239a0:	ldr	r0, [r0, #8]
   239a4:	ldr	r1, [sp, #8]
   239a8:	cmp	r0, r1
   239ac:	movw	r0, #1
   239b0:	str	r0, [sp]
   239b4:	beq	239d4 <__assert_fail@plt+0x12280>
   239b8:	ldr	r0, [fp, #-16]
   239bc:	ldr	r0, [r0, #8]
   239c0:	movw	r1, #0
   239c4:	cmp	r0, r1
   239c8:	movw	r0, #0
   239cc:	moveq	r0, #1
   239d0:	str	r0, [sp]
   239d4:	ldr	r0, [sp]
   239d8:	tst	r0, #1
   239dc:	beq	23a20 <__assert_fail@plt+0x122cc>
   239e0:	ldr	r0, [fp, #-16]
   239e4:	str	r0, [sp, #8]
   239e8:	ldr	r0, [fp, #-16]
   239ec:	ldr	r0, [r0]
   239f0:	str	r0, [fp, #-16]
   239f4:	ldr	r0, [sp, #12]
   239f8:	ldr	r0, [r0]
   239fc:	str	r0, [sp, #12]
   23a00:	ldr	r0, [fp, #-16]
   23a04:	movw	r1, #0
   23a08:	cmp	r0, r1
   23a0c:	bne	23a1c <__assert_fail@plt+0x122c8>
   23a10:	ldr	r0, [sp, #20]
   23a14:	str	r0, [fp, #-4]
   23a18:	b	23a3c <__assert_fail@plt+0x122e8>
   23a1c:	b	2399c <__assert_fail@plt+0x12248>
   23a20:	ldr	r0, [fp, #-16]
   23a24:	ldr	r0, [r0, #8]
   23a28:	str	r0, [fp, #-16]
   23a2c:	ldr	r0, [sp, #12]
   23a30:	add	r0, r0, #8
   23a34:	str	r0, [sp, #16]
   23a38:	b	238e8 <__assert_fail@plt+0x12194>
   23a3c:	ldr	r0, [fp, #-4]
   23a40:	mov	sp, fp
   23a44:	pop	{fp, pc}
   23a48:	sub	sp, sp, #12
   23a4c:	str	r0, [sp, #8]
   23a50:	str	r1, [sp, #4]
   23a54:	ldr	r0, [sp, #8]
   23a58:	str	r0, [sp]
   23a5c:	ldr	r0, [sp, #4]
   23a60:	ldr	r0, [r0, #24]
   23a64:	and	r0, r0, #255	; 0xff
   23a68:	cmp	r0, #17
   23a6c:	bne	23a9c <__assert_fail@plt+0x12348>
   23a70:	ldr	r0, [sp, #4]
   23a74:	ldr	r0, [r0, #20]
   23a78:	ldr	r1, [sp]
   23a7c:	cmp	r0, r1
   23a80:	bne	23a9c <__assert_fail@plt+0x12348>
   23a84:	ldr	r0, [sp, #4]
   23a88:	ldr	r1, [r0, #24]
   23a8c:	mvn	r2, #524288	; 0x80000
   23a90:	and	r1, r1, r2
   23a94:	orr	r1, r1, #524288	; 0x80000
   23a98:	str	r1, [r0, #24]
   23a9c:	movw	r0, #0
   23aa0:	add	sp, sp, #12
   23aa4:	bx	lr
   23aa8:	push	{fp, lr}
   23aac:	mov	fp, sp
   23ab0:	sub	sp, sp, #40	; 0x28
   23ab4:	str	r0, [fp, #-8]
   23ab8:	str	r1, [fp, #-12]
   23abc:	str	r2, [fp, #-16]
   23ac0:	ldr	r0, [fp, #-8]
   23ac4:	str	r0, [sp, #20]
   23ac8:	ldr	r0, [fp, #-12]
   23acc:	ldr	r1, [fp, #-16]
   23ad0:	ldr	r2, [sp, #20]
   23ad4:	str	r0, [sp, #8]
   23ad8:	mov	r0, r1
   23adc:	mov	r1, r2
   23ae0:	ldr	r2, [sp, #8]
   23ae4:	blx	r2
   23ae8:	str	r0, [sp, #16]
   23aec:	ldr	r0, [sp, #16]
   23af0:	cmp	r0, #0
   23af4:	beq	23b04 <__assert_fail@plt+0x123b0>
   23af8:	ldr	r0, [sp, #16]
   23afc:	str	r0, [fp, #-4]
   23b00:	b	23bb8 <__assert_fail@plt+0x12464>
   23b04:	ldr	r0, [sp, #20]
   23b08:	ldr	r0, [r0, #4]
   23b0c:	movw	r1, #0
   23b10:	cmp	r0, r1
   23b14:	beq	23b28 <__assert_fail@plt+0x123d4>
   23b18:	ldr	r0, [sp, #20]
   23b1c:	ldr	r0, [r0, #4]
   23b20:	str	r0, [sp, #20]
   23b24:	b	23bb4 <__assert_fail@plt+0x12460>
   23b28:	movw	r0, #0
   23b2c:	str	r0, [sp, #12]
   23b30:	ldr	r0, [sp, #20]
   23b34:	ldr	r0, [r0, #8]
   23b38:	ldr	r1, [sp, #12]
   23b3c:	cmp	r0, r1
   23b40:	movw	r0, #1
   23b44:	str	r0, [sp, #4]
   23b48:	beq	23b68 <__assert_fail@plt+0x12414>
   23b4c:	ldr	r0, [sp, #20]
   23b50:	ldr	r0, [r0, #8]
   23b54:	movw	r1, #0
   23b58:	cmp	r0, r1
   23b5c:	movw	r0, #0
   23b60:	moveq	r0, #1
   23b64:	str	r0, [sp, #4]
   23b68:	ldr	r0, [sp, #4]
   23b6c:	tst	r0, #1
   23b70:	beq	23ba8 <__assert_fail@plt+0x12454>
   23b74:	ldr	r0, [sp, #20]
   23b78:	str	r0, [sp, #12]
   23b7c:	ldr	r0, [sp, #20]
   23b80:	ldr	r0, [r0]
   23b84:	str	r0, [sp, #20]
   23b88:	ldr	r0, [sp, #20]
   23b8c:	movw	r1, #0
   23b90:	cmp	r0, r1
   23b94:	bne	23ba4 <__assert_fail@plt+0x12450>
   23b98:	movw	r0, #0
   23b9c:	str	r0, [fp, #-4]
   23ba0:	b	23bb8 <__assert_fail@plt+0x12464>
   23ba4:	b	23b30 <__assert_fail@plt+0x123dc>
   23ba8:	ldr	r0, [sp, #20]
   23bac:	ldr	r0, [r0, #8]
   23bb0:	str	r0, [sp, #20]
   23bb4:	b	23ac8 <__assert_fail@plt+0x12374>
   23bb8:	ldr	r0, [fp, #-4]
   23bbc:	mov	sp, fp
   23bc0:	pop	{fp, pc}
   23bc4:	sub	sp, sp, #20
   23bc8:	str	r0, [sp, #16]
   23bcc:	str	r1, [sp, #12]
   23bd0:	ldr	r0, [sp, #16]
   23bd4:	str	r0, [sp, #8]
   23bd8:	ldr	r0, [sp, #12]
   23bdc:	ldr	r0, [r0, #24]
   23be0:	and	r0, r0, #255	; 0xff
   23be4:	cmp	r0, #4
   23be8:	bne	23c4c <__assert_fail@plt+0x124f8>
   23bec:	ldr	r0, [sp, #8]
   23bf0:	ldr	r0, [r0, #132]	; 0x84
   23bf4:	movw	r1, #0
   23bf8:	cmp	r0, r1
   23bfc:	beq	23c4c <__assert_fail@plt+0x124f8>
   23c00:	ldr	r0, [sp, #12]
   23c04:	ldr	r0, [r0, #20]
   23c08:	str	r0, [sp, #4]
   23c0c:	ldr	r0, [sp, #8]
   23c10:	ldr	r0, [r0, #132]	; 0x84
   23c14:	ldr	r1, [sp, #4]
   23c18:	add	r0, r0, r1, lsl #2
   23c1c:	ldr	r0, [r0]
   23c20:	ldr	r1, [sp, #12]
   23c24:	str	r0, [r1, #20]
   23c28:	ldr	r0, [sp, #12]
   23c2c:	ldr	r0, [r0, #20]
   23c30:	movw	r1, #1
   23c34:	lsl	r0, r1, r0
   23c38:	ldr	r1, [sp, #8]
   23c3c:	ldr	r2, [r1, #80]	; 0x50
   23c40:	orr	r0, r2, r0
   23c44:	str	r0, [r1, #80]	; 0x50
   23c48:	b	23d2c <__assert_fail@plt+0x125d8>
   23c4c:	ldr	r0, [sp, #12]
   23c50:	ldr	r0, [r0, #24]
   23c54:	and	r0, r0, #255	; 0xff
   23c58:	cmp	r0, #17
   23c5c:	bne	23d28 <__assert_fail@plt+0x125d4>
   23c60:	ldr	r0, [sp, #12]
   23c64:	ldr	r0, [r0, #4]
   23c68:	movw	r1, #0
   23c6c:	cmp	r0, r1
   23c70:	beq	23d28 <__assert_fail@plt+0x125d4>
   23c74:	ldr	r0, [sp, #12]
   23c78:	ldr	r0, [r0, #4]
   23c7c:	ldr	r0, [r0, #24]
   23c80:	and	r0, r0, #255	; 0xff
   23c84:	cmp	r0, #17
   23c88:	bne	23d28 <__assert_fail@plt+0x125d4>
   23c8c:	ldr	r0, [sp, #12]
   23c90:	ldr	r0, [r0, #4]
   23c94:	ldr	r0, [r0, #20]
   23c98:	str	r0, [sp]
   23c9c:	ldr	r0, [sp, #12]
   23ca0:	ldr	r0, [r0, #4]
   23ca4:	ldr	r0, [r0, #4]
   23ca8:	ldr	r1, [sp, #12]
   23cac:	str	r0, [r1, #4]
   23cb0:	ldr	r0, [sp, #12]
   23cb4:	ldr	r0, [r0, #4]
   23cb8:	movw	r1, #0
   23cbc:	cmp	r0, r1
   23cc0:	beq	23cd4 <__assert_fail@plt+0x12580>
   23cc4:	ldr	r0, [sp, #12]
   23cc8:	ldr	r1, [sp, #12]
   23ccc:	ldr	r1, [r1, #4]
   23cd0:	str	r0, [r1]
   23cd4:	ldr	r0, [sp, #8]
   23cd8:	ldr	r0, [r0, #132]	; 0x84
   23cdc:	ldr	r1, [sp, #12]
   23ce0:	ldr	r1, [r1, #20]
   23ce4:	ldr	r1, [r0, r1, lsl #2]
   23ce8:	ldr	r2, [sp]
   23cec:	add	r0, r0, r2, lsl #2
   23cf0:	str	r1, [r0]
   23cf4:	ldr	r0, [sp]
   23cf8:	cmp	r0, #32
   23cfc:	bge	23d24 <__assert_fail@plt+0x125d0>
   23d00:	ldr	r0, [sp]
   23d04:	movw	r1, #1
   23d08:	lsl	r0, r1, r0
   23d0c:	mvn	r1, #0
   23d10:	eor	r0, r0, r1
   23d14:	ldr	r1, [sp, #8]
   23d18:	ldr	r2, [r1, #80]	; 0x50
   23d1c:	and	r0, r2, r0
   23d20:	str	r0, [r1, #80]	; 0x50
   23d24:	b	23d28 <__assert_fail@plt+0x125d4>
   23d28:	b	23d2c <__assert_fail@plt+0x125d8>
   23d2c:	movw	r0, #0
   23d30:	add	sp, sp, #20
   23d34:	bx	lr
   23d38:	push	{fp, lr}
   23d3c:	mov	fp, sp
   23d40:	sub	sp, sp, #16
   23d44:	str	r0, [fp, #-4]
   23d48:	str	r1, [sp, #8]
   23d4c:	ldr	r0, [fp, #-4]
   23d50:	str	r0, [sp, #4]
   23d54:	movw	r0, #0
   23d58:	str	r0, [sp]
   23d5c:	ldr	r1, [sp, #8]
   23d60:	ldr	r1, [r1, #4]
   23d64:	cmp	r1, r0
   23d68:	beq	23dc8 <__assert_fail@plt+0x12674>
   23d6c:	ldr	r0, [sp, #8]
   23d70:	ldr	r0, [r0, #4]
   23d74:	ldr	r0, [r0, #24]
   23d78:	and	r0, r0, #255	; 0xff
   23d7c:	cmp	r0, #17
   23d80:	bne	23dc8 <__assert_fail@plt+0x12674>
   23d84:	ldr	r1, [sp, #4]
   23d88:	ldr	r0, [sp, #8]
   23d8c:	ldr	r2, [r0, #4]
   23d90:	mov	r0, sp
   23d94:	bl	2453c <__assert_fail@plt+0x12de8>
   23d98:	ldr	r1, [sp, #8]
   23d9c:	str	r0, [r1, #4]
   23da0:	ldr	r0, [sp, #8]
   23da4:	ldr	r0, [r0, #4]
   23da8:	movw	r1, #0
   23dac:	cmp	r0, r1
   23db0:	beq	23dc4 <__assert_fail@plt+0x12670>
   23db4:	ldr	r0, [sp, #8]
   23db8:	ldr	r1, [sp, #8]
   23dbc:	ldr	r1, [r1, #4]
   23dc0:	str	r0, [r1]
   23dc4:	b	23dc8 <__assert_fail@plt+0x12674>
   23dc8:	ldr	r0, [sp, #8]
   23dcc:	ldr	r0, [r0, #8]
   23dd0:	movw	r1, #0
   23dd4:	cmp	r0, r1
   23dd8:	beq	23e38 <__assert_fail@plt+0x126e4>
   23ddc:	ldr	r0, [sp, #8]
   23de0:	ldr	r0, [r0, #8]
   23de4:	ldr	r0, [r0, #24]
   23de8:	and	r0, r0, #255	; 0xff
   23dec:	cmp	r0, #17
   23df0:	bne	23e38 <__assert_fail@plt+0x126e4>
   23df4:	ldr	r1, [sp, #4]
   23df8:	ldr	r0, [sp, #8]
   23dfc:	ldr	r2, [r0, #8]
   23e00:	mov	r0, sp
   23e04:	bl	2453c <__assert_fail@plt+0x12de8>
   23e08:	ldr	r1, [sp, #8]
   23e0c:	str	r0, [r1, #8]
   23e10:	ldr	r0, [sp, #8]
   23e14:	ldr	r0, [r0, #8]
   23e18:	movw	r1, #0
   23e1c:	cmp	r0, r1
   23e20:	beq	23e34 <__assert_fail@plt+0x126e0>
   23e24:	ldr	r0, [sp, #8]
   23e28:	ldr	r1, [sp, #8]
   23e2c:	ldr	r1, [r1, #8]
   23e30:	str	r0, [r1]
   23e34:	b	23e38 <__assert_fail@plt+0x126e4>
   23e38:	ldr	r0, [sp]
   23e3c:	mov	sp, fp
   23e40:	pop	{fp, pc}
   23e44:	push	{fp, lr}
   23e48:	mov	fp, sp
   23e4c:	sub	sp, sp, #24
   23e50:	str	r0, [fp, #-8]
   23e54:	str	r1, [sp, #12]
   23e58:	ldr	r0, [fp, #-8]
   23e5c:	str	r0, [sp, #8]
   23e60:	ldr	r0, [sp, #12]
   23e64:	ldr	r0, [r0, #24]
   23e68:	and	r0, r0, #255	; 0xff
   23e6c:	cmp	r0, #16
   23e70:	bne	23ea0 <__assert_fail@plt+0x1274c>
   23e74:	ldr	r0, [sp, #12]
   23e78:	ldr	r0, [r0, #4]
   23e7c:	ldr	r0, [r0, #12]
   23e80:	ldr	r1, [sp, #12]
   23e84:	str	r0, [r1, #12]
   23e88:	ldr	r0, [sp, #12]
   23e8c:	ldr	r0, [r0, #4]
   23e90:	ldr	r0, [r0, #28]
   23e94:	ldr	r1, [sp, #12]
   23e98:	str	r0, [r1, #28]
   23e9c:	b	23f3c <__assert_fail@plt+0x127e8>
   23ea0:	ldr	r0, [sp, #12]
   23ea4:	str	r0, [r0, #12]
   23ea8:	ldr	r0, [sp, #8]
   23eac:	ldr	r1, [sp, #12]
   23eb0:	ldr	r2, [r1, #20]
   23eb4:	ldr	r1, [r1, #24]
   23eb8:	str	r1, [sp, #4]
   23ebc:	mov	r1, r2
   23ec0:	ldr	r2, [sp, #4]
   23ec4:	bl	24764 <__assert_fail@plt+0x13010>
   23ec8:	ldr	r1, [sp, #12]
   23ecc:	str	r0, [r1, #28]
   23ed0:	ldr	r0, [sp, #12]
   23ed4:	ldr	r0, [r0, #28]
   23ed8:	cmn	r0, #1
   23edc:	bne	23eec <__assert_fail@plt+0x12798>
   23ee0:	movw	r0, #12
   23ee4:	str	r0, [fp, #-4]
   23ee8:	b	23f44 <__assert_fail@plt+0x127f0>
   23eec:	ldr	r0, [sp, #12]
   23ef0:	ldr	r0, [r0, #24]
   23ef4:	and	r0, r0, #255	; 0xff
   23ef8:	cmp	r0, #12
   23efc:	bne	23f38 <__assert_fail@plt+0x127e4>
   23f00:	ldr	r0, [pc, #72]	; 23f50 <__assert_fail@plt+0x127fc>
   23f04:	ldr	r1, [sp, #12]
   23f08:	ldr	r2, [r1, #20]
   23f0c:	ldr	r1, [r1, #28]
   23f10:	ldr	r3, [sp, #8]
   23f14:	ldr	r3, [r3]
   23f18:	add	r1, r3, r1, lsl #3
   23f1c:	ldr	r3, [r1, #4]
   23f20:	movw	ip, #1023	; 0x3ff
   23f24:	and	r2, r2, ip
   23f28:	lsl	r2, r2, #8
   23f2c:	and	r0, r3, r0
   23f30:	orr	r0, r0, r2
   23f34:	str	r0, [r1, #4]
   23f38:	b	23f3c <__assert_fail@plt+0x127e8>
   23f3c:	movw	r0, #0
   23f40:	str	r0, [fp, #-4]
   23f44:	ldr	r0, [fp, #-4]
   23f48:	mov	sp, fp
   23f4c:	pop	{fp, pc}
   23f50:			; <UNDEFINED> instruction: 0xfffc00ff
   23f54:	sub	sp, sp, #12
   23f58:	str	r0, [sp, #8]
   23f5c:	str	r1, [sp, #4]
   23f60:	ldr	r0, [sp, #4]
   23f64:	ldrb	r0, [r0, #24]
   23f68:	mov	r1, r0
   23f6c:	cmp	r0, #11
   23f70:	str	r1, [sp]
   23f74:	beq	23f8c <__assert_fail@plt+0x12838>
   23f78:	b	23f7c <__assert_fail@plt+0x12828>
   23f7c:	ldr	r0, [sp]
   23f80:	cmp	r0, #16
   23f84:	beq	23fa0 <__assert_fail@plt+0x1284c>
   23f88:	b	23fd0 <__assert_fail@plt+0x1287c>
   23f8c:	ldr	r0, [sp, #4]
   23f90:	ldr	r1, [sp, #4]
   23f94:	ldr	r1, [r1, #4]
   23f98:	str	r0, [r1, #16]
   23f9c:	b	24024 <__assert_fail@plt+0x128d0>
   23fa0:	ldr	r0, [sp, #4]
   23fa4:	ldr	r0, [r0, #8]
   23fa8:	ldr	r0, [r0, #12]
   23fac:	ldr	r1, [sp, #4]
   23fb0:	ldr	r1, [r1, #4]
   23fb4:	str	r0, [r1, #16]
   23fb8:	ldr	r0, [sp, #4]
   23fbc:	ldr	r0, [r0, #16]
   23fc0:	ldr	r1, [sp, #4]
   23fc4:	ldr	r1, [r1, #8]
   23fc8:	str	r0, [r1, #16]
   23fcc:	b	24024 <__assert_fail@plt+0x128d0>
   23fd0:	ldr	r0, [sp, #4]
   23fd4:	ldr	r0, [r0, #4]
   23fd8:	movw	r1, #0
   23fdc:	cmp	r0, r1
   23fe0:	beq	23ff8 <__assert_fail@plt+0x128a4>
   23fe4:	ldr	r0, [sp, #4]
   23fe8:	ldr	r0, [r0, #16]
   23fec:	ldr	r1, [sp, #4]
   23ff0:	ldr	r1, [r1, #4]
   23ff4:	str	r0, [r1, #16]
   23ff8:	ldr	r0, [sp, #4]
   23ffc:	ldr	r0, [r0, #8]
   24000:	movw	r1, #0
   24004:	cmp	r0, r1
   24008:	beq	24020 <__assert_fail@plt+0x128cc>
   2400c:	ldr	r0, [sp, #4]
   24010:	ldr	r0, [r0, #16]
   24014:	ldr	r1, [sp, #4]
   24018:	ldr	r1, [r1, #8]
   2401c:	str	r0, [r1, #16]
   24020:	b	24024 <__assert_fail@plt+0x128d0>
   24024:	movw	r0, #0
   24028:	add	sp, sp, #12
   2402c:	bx	lr
   24030:	push	{fp, lr}
   24034:	mov	fp, sp
   24038:	sub	sp, sp, #32
   2403c:	str	r0, [fp, #-4]
   24040:	str	r1, [fp, #-8]
   24044:	ldr	r0, [fp, #-4]
   24048:	str	r0, [fp, #-12]
   2404c:	ldr	r0, [fp, #-8]
   24050:	ldr	r0, [r0, #28]
   24054:	str	r0, [sp, #16]
   24058:	mov	r0, #0
   2405c:	str	r0, [sp, #12]
   24060:	ldr	r0, [fp, #-8]
   24064:	ldrb	r0, [r0, #24]
   24068:	sub	r0, r0, #2
   2406c:	cmp	r0, #14
   24070:	str	r0, [sp]
   24074:	bhi	24250 <__assert_fail@plt+0x12afc>
   24078:	add	r0, pc, #8
   2407c:	ldr	r1, [sp]
   24080:	ldr	r0, [r0, r1, lsl #2]
   24084:	mov	pc, r0
   24088:	andeq	r4, r2, r8, asr #1
   2408c:	andeq	r4, r2, r0, asr r2
   24090:	strdeq	r4, [r2], -r0
   24094:	andeq	r4, r2, r0, asr r2
   24098:	andeq	r4, r2, r0, asr r2
   2409c:	andeq	r4, r2, r0, asr r2
   240a0:	andeq	r4, r2, r0, asr #3
   240a4:	andeq	r4, r2, r0, asr #3
   240a8:	andeq	r4, r2, r4, ror #1
   240ac:	andeq	r4, r2, r4, ror #1
   240b0:	andeq	r4, r2, r0, asr #3
   240b4:	andeq	r4, r2, r0, asr r2
   240b8:	andeq	r4, r2, r0, asr r2
   240bc:	andeq	r4, r2, r0, asr r2
   240c0:	andeq	r4, r2, r4, asr #1
   240c4:	b	2428c <__assert_fail@plt+0x12b38>
   240c8:	ldr	r0, [fp, #-8]
   240cc:	ldr	r0, [r0, #16]
   240d0:	movw	r1, #0
   240d4:	cmp	r0, r1
   240d8:	bne	240e0 <__assert_fail@plt+0x1298c>
   240dc:	b	240e0 <__assert_fail@plt+0x1298c>
   240e0:	b	2428c <__assert_fail@plt+0x12b38>
   240e4:	ldr	r0, [fp, #-12]
   240e8:	ldrb	r1, [r0, #88]	; 0x58
   240ec:	bic	r1, r1, #1
   240f0:	movw	r2, #1
   240f4:	orr	r1, r1, r2
   240f8:	strb	r1, [r0, #88]	; 0x58
   240fc:	ldr	r0, [fp, #-8]
   24100:	ldr	r0, [r0, #4]
   24104:	movw	r1, #0
   24108:	cmp	r0, r1
   2410c:	beq	24128 <__assert_fail@plt+0x129d4>
   24110:	ldr	r0, [fp, #-8]
   24114:	ldr	r0, [r0, #4]
   24118:	ldr	r0, [r0, #12]
   2411c:	ldr	r0, [r0, #28]
   24120:	str	r0, [sp, #8]
   24124:	b	24138 <__assert_fail@plt+0x129e4>
   24128:	ldr	r0, [fp, #-8]
   2412c:	ldr	r0, [r0, #16]
   24130:	ldr	r0, [r0, #28]
   24134:	str	r0, [sp, #8]
   24138:	ldr	r0, [fp, #-8]
   2413c:	ldr	r0, [r0, #8]
   24140:	movw	r1, #0
   24144:	cmp	r0, r1
   24148:	beq	24164 <__assert_fail@plt+0x12a10>
   2414c:	ldr	r0, [fp, #-8]
   24150:	ldr	r0, [r0, #8]
   24154:	ldr	r0, [r0, #12]
   24158:	ldr	r0, [r0, #28]
   2415c:	str	r0, [sp, #4]
   24160:	b	24174 <__assert_fail@plt+0x12a20>
   24164:	ldr	r0, [fp, #-8]
   24168:	ldr	r0, [r0, #16]
   2416c:	ldr	r0, [r0, #28]
   24170:	str	r0, [sp, #4]
   24174:	ldr	r0, [sp, #8]
   24178:	cmn	r0, #1
   2417c:	ble	24184 <__assert_fail@plt+0x12a30>
   24180:	b	24184 <__assert_fail@plt+0x12a30>
   24184:	ldr	r0, [sp, #4]
   24188:	cmn	r0, #1
   2418c:	ble	24194 <__assert_fail@plt+0x12a40>
   24190:	b	24194 <__assert_fail@plt+0x12a40>
   24194:	ldr	r0, [fp, #-12]
   24198:	ldr	r0, [r0, #20]
   2419c:	ldr	r1, [sp, #16]
   241a0:	movw	r2, #12
   241a4:	mul	r1, r1, r2
   241a8:	add	r0, r0, r1
   241ac:	ldr	r1, [sp, #8]
   241b0:	ldr	r2, [sp, #4]
   241b4:	bl	24a80 <__assert_fail@plt+0x1332c>
   241b8:	str	r0, [sp, #12]
   241bc:	b	2428c <__assert_fail@plt+0x12b38>
   241c0:	ldr	r0, [fp, #-12]
   241c4:	ldr	r0, [r0, #20]
   241c8:	ldr	r1, [sp, #16]
   241cc:	movw	r2, #12
   241d0:	mul	r1, r1, r2
   241d4:	add	r0, r0, r1
   241d8:	ldr	r1, [fp, #-8]
   241dc:	ldr	r1, [r1, #16]
   241e0:	ldr	r1, [r1, #28]
   241e4:	bl	24b7c <__assert_fail@plt+0x13428>
   241e8:	str	r0, [sp, #12]
   241ec:	b	2428c <__assert_fail@plt+0x12b38>
   241f0:	ldr	r0, [fp, #-8]
   241f4:	ldr	r0, [r0, #16]
   241f8:	ldr	r0, [r0, #28]
   241fc:	ldr	r1, [fp, #-12]
   24200:	ldr	r1, [r1, #12]
   24204:	ldr	r2, [sp, #16]
   24208:	add	r1, r1, r2, lsl #2
   2420c:	str	r0, [r1]
   24210:	ldr	r0, [fp, #-8]
   24214:	ldr	r0, [r0, #24]
   24218:	and	r0, r0, #255	; 0xff
   2421c:	cmp	r0, #4
   24220:	bne	2424c <__assert_fail@plt+0x12af8>
   24224:	ldr	r0, [fp, #-12]
   24228:	ldr	r1, [r0, #12]
   2422c:	ldr	r0, [r0, #20]
   24230:	ldr	r2, [sp, #16]
   24234:	add	r3, r2, r2, lsl #1
   24238:	add	r0, r0, r3, lsl #2
   2423c:	add	r1, r1, r2, lsl #2
   24240:	ldr	r1, [r1]
   24244:	bl	24b7c <__assert_fail@plt+0x13428>
   24248:	str	r0, [sp, #12]
   2424c:	b	2428c <__assert_fail@plt+0x12b38>
   24250:	ldr	r0, [fp, #-8]
   24254:	ldr	r0, [r0, #24]
   24258:	and	r0, r0, #255	; 0xff
   2425c:	and	r0, r0, #8
   24260:	cmp	r0, #0
   24264:	bne	2426c <__assert_fail@plt+0x12b18>
   24268:	b	2426c <__assert_fail@plt+0x12b18>
   2426c:	ldr	r0, [fp, #-8]
   24270:	ldr	r0, [r0, #16]
   24274:	ldr	r0, [r0, #28]
   24278:	ldr	r1, [fp, #-12]
   2427c:	ldr	r1, [r1, #12]
   24280:	ldr	r2, [sp, #16]
   24284:	add	r1, r1, r2, lsl #2
   24288:	str	r0, [r1]
   2428c:	ldr	r0, [sp, #12]
   24290:	mov	sp, fp
   24294:	pop	{fp, pc}
   24298:	push	{fp, lr}
   2429c:	mov	fp, sp
   242a0:	sub	sp, sp, #32
   242a4:	str	r0, [fp, #-8]
   242a8:	ldr	r0, [fp, #-8]
   242ac:	ldr	r0, [r0, #8]
   242b0:	cmp	r0, #0
   242b4:	bls	242bc <__assert_fail@plt+0x12b68>
   242b8:	b	242bc <__assert_fail@plt+0x12b68>
   242bc:	movw	r0, #0
   242c0:	strb	r0, [fp, #-13]
   242c4:	movw	r0, #0
   242c8:	str	r0, [fp, #-12]
   242cc:	ldr	r0, [fp, #-12]
   242d0:	ldr	r1, [fp, #-8]
   242d4:	ldr	r1, [r1, #8]
   242d8:	cmp	r0, r1
   242dc:	bne	24300 <__assert_fail@plt+0x12bac>
   242e0:	ldrb	r0, [fp, #-13]
   242e4:	tst	r0, #1
   242e8:	bne	242f0 <__assert_fail@plt+0x12b9c>
   242ec:	b	243cc <__assert_fail@plt+0x12c78>
   242f0:	movw	r0, #0
   242f4:	strb	r0, [fp, #-13]
   242f8:	movw	r0, #0
   242fc:	str	r0, [fp, #-12]
   24300:	ldr	r0, [fp, #-8]
   24304:	ldr	r0, [r0, #24]
   24308:	ldr	r1, [fp, #-12]
   2430c:	movw	r2, #12
   24310:	mul	r1, r1, r2
   24314:	add	r0, r0, r1
   24318:	ldr	r0, [r0, #4]
   2431c:	cmn	r0, #1
   24320:	beq	24328 <__assert_fail@plt+0x12bd4>
   24324:	b	24328 <__assert_fail@plt+0x12bd4>
   24328:	ldr	r0, [fp, #-8]
   2432c:	ldr	r0, [r0, #24]
   24330:	ldr	r1, [fp, #-12]
   24334:	movw	r2, #12
   24338:	mul	r1, r1, r2
   2433c:	add	r0, r0, r1
   24340:	ldr	r0, [r0, #4]
   24344:	cmp	r0, #0
   24348:	beq	24350 <__assert_fail@plt+0x12bfc>
   2434c:	b	243bc <__assert_fail@plt+0x12c68>
   24350:	ldr	r1, [fp, #-8]
   24354:	ldr	r2, [fp, #-12]
   24358:	mov	r0, sp
   2435c:	movw	r3, #1
   24360:	and	r3, r3, #1
   24364:	bl	24c0c <__assert_fail@plt+0x134b8>
   24368:	str	r0, [sp, #12]
   2436c:	ldr	r0, [sp, #12]
   24370:	cmp	r0, #0
   24374:	beq	24384 <__assert_fail@plt+0x12c30>
   24378:	ldr	r0, [sp, #12]
   2437c:	str	r0, [fp, #-4]
   24380:	b	243d4 <__assert_fail@plt+0x12c80>
   24384:	ldr	r0, [fp, #-8]
   24388:	ldr	r0, [r0, #24]
   2438c:	ldr	r1, [fp, #-12]
   24390:	movw	r2, #12
   24394:	mul	r1, r1, r2
   24398:	add	r0, r0, r1
   2439c:	ldr	r0, [r0, #4]
   243a0:	cmp	r0, #0
   243a4:	bne	243b8 <__assert_fail@plt+0x12c64>
   243a8:	movw	r0, #1
   243ac:	strb	r0, [fp, #-13]
   243b0:	ldr	r0, [sp, #8]
   243b4:	bl	1604c <__assert_fail@plt+0x48f8>
   243b8:	b	243bc <__assert_fail@plt+0x12c68>
   243bc:	ldr	r0, [fp, #-12]
   243c0:	add	r0, r0, #1
   243c4:	str	r0, [fp, #-12]
   243c8:	b	242cc <__assert_fail@plt+0x12b78>
   243cc:	movw	r0, #0
   243d0:	str	r0, [fp, #-4]
   243d4:	ldr	r0, [fp, #-4]
   243d8:	mov	sp, fp
   243dc:	pop	{fp, pc}
   243e0:	push	{fp, lr}
   243e4:	mov	fp, sp
   243e8:	sub	sp, sp, #24
   243ec:	str	r0, [fp, #-8]
   243f0:	movw	r0, #0
   243f4:	str	r0, [sp, #8]
   243f8:	ldr	r0, [sp, #8]
   243fc:	ldr	r1, [fp, #-8]
   24400:	ldr	r1, [r1, #8]
   24404:	cmp	r0, r1
   24408:	bcs	24440 <__assert_fail@plt+0x12cec>
   2440c:	ldr	r0, [fp, #-8]
   24410:	ldr	r0, [r0, #28]
   24414:	ldr	r1, [sp, #8]
   24418:	movw	r2, #12
   2441c:	mul	r1, r1, r2
   24420:	add	r0, r0, r1
   24424:	movw	r1, #0
   24428:	and	r1, r1, #255	; 0xff
   2442c:	bl	11658 <memset@plt>
   24430:	ldr	r0, [sp, #8]
   24434:	add	r0, r0, #1
   24438:	str	r0, [sp, #8]
   2443c:	b	243f8 <__assert_fail@plt+0x12ca4>
   24440:	movw	r0, #0
   24444:	str	r0, [sp, #12]
   24448:	ldr	r0, [sp, #12]
   2444c:	ldr	r1, [fp, #-8]
   24450:	ldr	r1, [r1, #8]
   24454:	cmp	r0, r1
   24458:	bcs	24528 <__assert_fail@plt+0x12dd4>
   2445c:	ldr	r0, [fp, #-8]
   24460:	ldr	r0, [r0, #24]
   24464:	ldr	r1, [sp, #12]
   24468:	movw	r2, #12
   2446c:	mul	r1, r1, r2
   24470:	add	r0, r0, r1
   24474:	ldr	r0, [r0, #8]
   24478:	str	r0, [sp]
   2447c:	movw	r0, #0
   24480:	str	r0, [sp, #8]
   24484:	ldr	r0, [sp, #8]
   24488:	ldr	r1, [fp, #-8]
   2448c:	ldr	r1, [r1, #24]
   24490:	ldr	r2, [sp, #12]
   24494:	movw	r3, #12
   24498:	mul	r2, r2, r3
   2449c:	add	r1, r1, r2
   244a0:	ldr	r1, [r1, #4]
   244a4:	cmp	r0, r1
   244a8:	bge	24514 <__assert_fail@plt+0x12dc0>
   244ac:	ldr	r0, [fp, #-8]
   244b0:	ldr	r0, [r0, #28]
   244b4:	ldr	r1, [sp]
   244b8:	ldr	r2, [sp, #8]
   244bc:	add	r1, r1, r2, lsl #2
   244c0:	ldr	r1, [r1]
   244c4:	movw	r2, #12
   244c8:	mul	r1, r1, r2
   244cc:	add	r0, r0, r1
   244d0:	ldr	r1, [sp, #12]
   244d4:	bl	25d70 <__assert_fail@plt+0x1461c>
   244d8:	and	r0, r0, #1
   244dc:	strb	r0, [sp, #7]
   244e0:	ldrb	r0, [sp, #7]
   244e4:	mvn	r1, #0
   244e8:	eor	r0, r0, r1
   244ec:	tst	r0, #1
   244f0:	beq	24500 <__assert_fail@plt+0x12dac>
   244f4:	movw	r0, #12
   244f8:	str	r0, [fp, #-4]
   244fc:	b	24530 <__assert_fail@plt+0x12ddc>
   24500:	b	24504 <__assert_fail@plt+0x12db0>
   24504:	ldr	r0, [sp, #8]
   24508:	add	r0, r0, #1
   2450c:	str	r0, [sp, #8]
   24510:	b	24484 <__assert_fail@plt+0x12d30>
   24514:	b	24518 <__assert_fail@plt+0x12dc4>
   24518:	ldr	r0, [sp, #12]
   2451c:	add	r0, r0, #1
   24520:	str	r0, [sp, #12]
   24524:	b	24448 <__assert_fail@plt+0x12cf4>
   24528:	movw	r0, #0
   2452c:	str	r0, [fp, #-4]
   24530:	ldr	r0, [fp, #-4]
   24534:	mov	sp, fp
   24538:	pop	{fp, pc}
   2453c:	push	{fp, lr}
   24540:	mov	fp, sp
   24544:	sub	sp, sp, #56	; 0x38
   24548:	str	r0, [fp, #-8]
   2454c:	str	r1, [fp, #-12]
   24550:	str	r2, [fp, #-16]
   24554:	ldr	r0, [fp, #-12]
   24558:	ldr	r0, [r0]
   2455c:	str	r0, [fp, #-20]	; 0xffffffec
   24560:	ldr	r0, [fp, #-16]
   24564:	ldr	r0, [r0, #4]
   24568:	str	r0, [fp, #-24]	; 0xffffffe8
   2456c:	ldr	r0, [fp, #-12]
   24570:	ldrb	r0, [r0, #28]
   24574:	ubfx	r0, r0, #4, #1
   24578:	and	r0, r0, #255	; 0xff
   2457c:	cmp	r0, #0
   24580:	beq	245dc <__assert_fail@plt+0x12e88>
   24584:	ldr	r0, [fp, #-16]
   24588:	ldr	r0, [r0, #4]
   2458c:	movw	r1, #0
   24590:	cmp	r0, r1
   24594:	beq	245dc <__assert_fail@plt+0x12e88>
   24598:	ldr	r0, [fp, #-16]
   2459c:	ldr	r0, [r0, #20]
   245a0:	cmp	r0, #32
   245a4:	bge	245cc <__assert_fail@plt+0x12e78>
   245a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   245ac:	ldr	r0, [r0, #80]	; 0x50
   245b0:	ldr	r1, [fp, #-16]
   245b4:	ldr	r1, [r1, #20]
   245b8:	movw	r2, #1
   245bc:	lsl	r1, r2, r1
   245c0:	and	r0, r0, r1
   245c4:	cmp	r0, #0
   245c8:	bne	245dc <__assert_fail@plt+0x12e88>
   245cc:	ldr	r0, [fp, #-16]
   245d0:	ldr	r0, [r0, #4]
   245d4:	str	r0, [fp, #-4]
   245d8:	b	24758 <__assert_fail@plt+0x13004>
   245dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   245e0:	movw	r1, #0
   245e4:	str	r1, [sp, #12]
   245e8:	ldr	r2, [sp, #12]
   245ec:	movw	r3, #8
   245f0:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   245f4:	str	r0, [sp, #28]
   245f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   245fc:	movw	r1, #0
   24600:	str	r1, [sp, #8]
   24604:	ldr	r2, [sp, #8]
   24608:	movw	r3, #9
   2460c:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   24610:	str	r0, [sp, #24]
   24614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24618:	movw	r1, #0
   2461c:	cmp	r0, r1
   24620:	beq	24640 <__assert_fail@plt+0x12eec>
   24624:	ldr	r0, [fp, #-20]	; 0xffffffec
   24628:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2462c:	ldr	r2, [sp, #24]
   24630:	movw	r3, #16
   24634:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   24638:	str	r0, [sp, #4]
   2463c:	b	24648 <__assert_fail@plt+0x12ef4>
   24640:	ldr	r0, [sp, #24]
   24644:	str	r0, [sp, #4]
   24648:	ldr	r0, [sp, #4]
   2464c:	str	r0, [sp, #20]
   24650:	ldr	r0, [fp, #-20]	; 0xffffffec
   24654:	ldr	r1, [sp, #28]
   24658:	ldr	r2, [sp, #20]
   2465c:	movw	r3, #16
   24660:	bl	1e2b8 <__assert_fail@plt+0xcb64>
   24664:	str	r0, [sp, #16]
   24668:	ldr	r0, [sp, #16]
   2466c:	movw	r1, #0
   24670:	cmp	r0, r1
   24674:	movw	r0, #1
   24678:	str	r0, [sp]
   2467c:	beq	246c8 <__assert_fail@plt+0x12f74>
   24680:	ldr	r0, [sp, #20]
   24684:	movw	r1, #0
   24688:	cmp	r0, r1
   2468c:	movw	r0, #1
   24690:	str	r0, [sp]
   24694:	beq	246c8 <__assert_fail@plt+0x12f74>
   24698:	ldr	r0, [sp, #28]
   2469c:	movw	r1, #0
   246a0:	cmp	r0, r1
   246a4:	movw	r0, #1
   246a8:	str	r0, [sp]
   246ac:	beq	246c8 <__assert_fail@plt+0x12f74>
   246b0:	ldr	r0, [sp, #24]
   246b4:	movw	r1, #0
   246b8:	cmp	r0, r1
   246bc:	movw	r0, #0
   246c0:	moveq	r0, #1
   246c4:	str	r0, [sp]
   246c8:	ldr	r0, [sp]
   246cc:	tst	r0, #1
   246d0:	beq	246ec <__assert_fail@plt+0x12f98>
   246d4:	ldr	r0, [fp, #-8]
   246d8:	movw	r1, #12
   246dc:	str	r1, [r0]
   246e0:	movw	r0, #0
   246e4:	str	r0, [fp, #-4]
   246e8:	b	24758 <__assert_fail@plt+0x13004>
   246ec:	ldr	r0, [fp, #-16]
   246f0:	ldr	r0, [r0, #20]
   246f4:	ldr	r1, [sp, #24]
   246f8:	str	r0, [r1, #20]
   246fc:	ldr	r1, [sp, #28]
   24700:	str	r0, [r1, #20]
   24704:	ldr	r0, [fp, #-16]
   24708:	ldr	r0, [r0, #24]
   2470c:	lsr	r0, r0, #19
   24710:	and	r0, r0, #1
   24714:	ldr	r1, [sp, #24]
   24718:	ldr	r2, [r1, #24]
   2471c:	and	r0, r0, #1
   24720:	lsl	r3, r0, #19
   24724:	mvn	ip, #524288	; 0x80000
   24728:	and	r2, r2, ip
   2472c:	orr	r2, r2, r3
   24730:	str	r2, [r1, #24]
   24734:	ldr	r1, [sp, #28]
   24738:	ldr	r2, [r1, #24]
   2473c:	and	r0, r0, #1
   24740:	lsl	r0, r0, #19
   24744:	and	r2, r2, ip
   24748:	orr	r0, r2, r0
   2474c:	str	r0, [r1, #24]
   24750:	ldr	r0, [sp, #16]
   24754:	str	r0, [fp, #-4]
   24758:	ldr	r0, [fp, #-4]
   2475c:	mov	sp, fp
   24760:	pop	{fp, pc}
   24764:	push	{fp, lr}
   24768:	mov	fp, sp
   2476c:	sub	sp, sp, #64	; 0x40
   24770:	str	r1, [fp, #-12]
   24774:	str	r2, [fp, #-8]
   24778:	str	r0, [fp, #-16]
   2477c:	ldr	r0, [fp, #-16]
   24780:	ldr	r0, [r0, #8]
   24784:	ldr	r1, [fp, #-16]
   24788:	ldr	r1, [r1, #4]
   2478c:	cmp	r0, r1
   24790:	bcc	24944 <__assert_fail@plt+0x131f0>
   24794:	ldr	r0, [pc, #732]	; 24a78 <__assert_fail@plt+0x13324>
   24798:	ldr	r1, [fp, #-16]
   2479c:	ldr	r1, [r1, #4]
   247a0:	lsl	r1, r1, #1
   247a4:	str	r1, [fp, #-20]	; 0xffffffec
   247a8:	movw	r1, #12
   247ac:	str	r1, [sp, #20]
   247b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   247b4:	cmp	r0, r1
   247b8:	bcs	247c8 <__assert_fail@plt+0x13074>
   247bc:	mvn	r0, #0
   247c0:	str	r0, [fp, #-4]
   247c4:	b	24a6c <__assert_fail@plt+0x13318>
   247c8:	ldr	r0, [fp, #-16]
   247cc:	ldr	r0, [r0]
   247d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   247d4:	lsl	r1, r1, #3
   247d8:	bl	38aec <__assert_fail@plt+0x27398>
   247dc:	str	r0, [sp, #24]
   247e0:	ldr	r0, [sp, #24]
   247e4:	movw	r1, #0
   247e8:	cmp	r0, r1
   247ec:	bne	247fc <__assert_fail@plt+0x130a8>
   247f0:	mvn	r0, #0
   247f4:	str	r0, [fp, #-4]
   247f8:	b	24a6c <__assert_fail@plt+0x13318>
   247fc:	ldr	r0, [sp, #24]
   24800:	ldr	r1, [fp, #-16]
   24804:	str	r0, [r1]
   24808:	ldr	r0, [fp, #-16]
   2480c:	ldr	r0, [r0, #12]
   24810:	ldr	r1, [fp, #-20]	; 0xffffffec
   24814:	lsl	r1, r1, #2
   24818:	bl	38aec <__assert_fail@plt+0x27398>
   2481c:	str	r0, [fp, #-24]	; 0xffffffe8
   24820:	ldr	r0, [fp, #-16]
   24824:	ldr	r0, [r0, #16]
   24828:	ldr	r1, [fp, #-20]	; 0xffffffec
   2482c:	lsl	r1, r1, #2
   24830:	bl	38aec <__assert_fail@plt+0x27398>
   24834:	str	r0, [fp, #-28]	; 0xffffffe4
   24838:	ldr	r0, [fp, #-16]
   2483c:	ldr	r0, [r0, #20]
   24840:	ldr	r1, [fp, #-20]	; 0xffffffec
   24844:	movw	lr, #12
   24848:	mul	r1, r1, lr
   2484c:	bl	38aec <__assert_fail@plt+0x27398>
   24850:	str	r0, [sp, #32]
   24854:	ldr	r0, [fp, #-16]
   24858:	ldr	r0, [r0, #24]
   2485c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24860:	movw	lr, #12
   24864:	mul	r1, r1, lr
   24868:	bl	38aec <__assert_fail@plt+0x27398>
   2486c:	str	r0, [sp, #28]
   24870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24874:	movw	r1, #0
   24878:	cmp	r0, r1
   2487c:	movw	r0, #1
   24880:	str	r0, [sp, #16]
   24884:	beq	248d0 <__assert_fail@plt+0x1317c>
   24888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2488c:	movw	r1, #0
   24890:	cmp	r0, r1
   24894:	movw	r0, #1
   24898:	str	r0, [sp, #16]
   2489c:	beq	248d0 <__assert_fail@plt+0x1317c>
   248a0:	ldr	r0, [sp, #32]
   248a4:	movw	r1, #0
   248a8:	cmp	r0, r1
   248ac:	movw	r0, #1
   248b0:	str	r0, [sp, #16]
   248b4:	beq	248d0 <__assert_fail@plt+0x1317c>
   248b8:	ldr	r0, [sp, #28]
   248bc:	movw	r1, #0
   248c0:	cmp	r0, r1
   248c4:	movw	r0, #0
   248c8:	moveq	r0, #1
   248cc:	str	r0, [sp, #16]
   248d0:	ldr	r0, [sp, #16]
   248d4:	tst	r0, #1
   248d8:	beq	24908 <__assert_fail@plt+0x131b4>
   248dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   248e0:	bl	1604c <__assert_fail@plt+0x48f8>
   248e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   248e8:	bl	1604c <__assert_fail@plt+0x48f8>
   248ec:	ldr	r0, [sp, #32]
   248f0:	bl	1604c <__assert_fail@plt+0x48f8>
   248f4:	ldr	r0, [sp, #28]
   248f8:	bl	1604c <__assert_fail@plt+0x48f8>
   248fc:	mvn	r0, #0
   24900:	str	r0, [fp, #-4]
   24904:	b	24a6c <__assert_fail@plt+0x13318>
   24908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2490c:	ldr	r1, [fp, #-16]
   24910:	str	r0, [r1, #12]
   24914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24918:	ldr	r1, [fp, #-16]
   2491c:	str	r0, [r1, #16]
   24920:	ldr	r0, [sp, #32]
   24924:	ldr	r1, [fp, #-16]
   24928:	str	r0, [r1, #20]
   2492c:	ldr	r0, [sp, #28]
   24930:	ldr	r1, [fp, #-16]
   24934:	str	r0, [r1, #24]
   24938:	ldr	r0, [fp, #-20]	; 0xffffffec
   2493c:	ldr	r1, [fp, #-16]
   24940:	str	r0, [r1, #4]
   24944:	ldr	r0, [pc, #304]	; 24a7c <__assert_fail@plt+0x13328>
   24948:	ldr	r1, [fp, #-16]
   2494c:	ldr	r2, [r1]
   24950:	ldr	r1, [r1, #8]
   24954:	add	r1, r2, r1, lsl #3
   24958:	vldr	d16, [fp, #-12]
   2495c:	vstr	d16, [r1]
   24960:	ldr	r1, [fp, #-16]
   24964:	ldr	r2, [r1]
   24968:	ldr	r1, [r1, #8]
   2496c:	add	r1, r2, r1, lsl #3
   24970:	ldr	r2, [r1, #4]
   24974:	and	r0, r2, r0
   24978:	str	r0, [r1, #4]
   2497c:	ldr	r0, [fp, #-8]
   24980:	and	r0, r0, #255	; 0xff
   24984:	cmp	r0, #5
   24988:	bne	249a4 <__assert_fail@plt+0x13250>
   2498c:	ldr	r0, [fp, #-16]
   24990:	ldr	r0, [r0, #92]	; 0x5c
   24994:	cmp	r0, #1
   24998:	movw	r0, #1
   2499c:	str	r0, [sp, #12]
   249a0:	bgt	249bc <__assert_fail@plt+0x13268>
   249a4:	ldr	r0, [fp, #-8]
   249a8:	and	r0, r0, #255	; 0xff
   249ac:	cmp	r0, #6
   249b0:	movw	r0, #0
   249b4:	moveq	r0, #1
   249b8:	str	r0, [sp, #12]
   249bc:	ldr	r0, [sp, #12]
   249c0:	and	r0, r0, #1
   249c4:	ldr	r1, [fp, #-16]
   249c8:	ldr	r2, [r1]
   249cc:	ldr	r1, [r1, #8]
   249d0:	add	r1, r2, r1, lsl #3
   249d4:	ldr	r2, [r1, #4]
   249d8:	bic	r2, r2, #1048576	; 0x100000
   249dc:	orr	r0, r2, r0, lsl #20
   249e0:	str	r0, [r1, #4]
   249e4:	ldr	r0, [fp, #-16]
   249e8:	ldr	r1, [r0, #8]
   249ec:	ldr	r0, [r0, #12]
   249f0:	add	r0, r0, r1, lsl #2
   249f4:	mvn	r1, #0
   249f8:	str	r1, [r0]
   249fc:	ldr	r0, [fp, #-16]
   24a00:	ldr	r0, [r0, #20]
   24a04:	ldr	r1, [fp, #-16]
   24a08:	ldr	r1, [r1, #8]
   24a0c:	movw	r2, #12
   24a10:	mul	r1, r1, r2
   24a14:	add	r0, r0, r1
   24a18:	movw	r1, #0
   24a1c:	and	r3, r1, #255	; 0xff
   24a20:	str	r1, [sp, #8]
   24a24:	mov	r1, r3
   24a28:	str	r2, [sp, #4]
   24a2c:	bl	11658 <memset@plt>
   24a30:	ldr	r0, [fp, #-16]
   24a34:	ldr	r0, [r0, #24]
   24a38:	ldr	r1, [fp, #-16]
   24a3c:	ldr	r1, [r1, #8]
   24a40:	ldr	r2, [sp, #4]
   24a44:	mul	r1, r1, r2
   24a48:	add	r0, r0, r1
   24a4c:	ldr	r1, [sp, #8]
   24a50:	and	r1, r1, #255	; 0xff
   24a54:	bl	11658 <memset@plt>
   24a58:	ldr	r0, [fp, #-16]
   24a5c:	ldr	r1, [r0, #8]
   24a60:	add	r2, r1, #1
   24a64:	str	r2, [r0, #8]
   24a68:	str	r1, [fp, #-4]
   24a6c:	ldr	r0, [fp, #-4]
   24a70:	mov	sp, fp
   24a74:	pop	{fp, pc}
   24a78:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   24a7c:			; <UNDEFINED> instruction: 0xfffc00ff
   24a80:	push	{fp, lr}
   24a84:	mov	fp, sp
   24a88:	sub	sp, sp, #16
   24a8c:	str	r0, [sp, #8]
   24a90:	str	r1, [sp, #4]
   24a94:	str	r2, [sp]
   24a98:	ldr	r0, [sp, #8]
   24a9c:	movw	r1, #2
   24aa0:	str	r1, [r0]
   24aa4:	movw	r0, #8
   24aa8:	bl	38a7c <__assert_fail@plt+0x27328>
   24aac:	ldr	r1, [sp, #8]
   24ab0:	str	r0, [r1, #8]
   24ab4:	ldr	r0, [sp, #8]
   24ab8:	ldr	r0, [r0, #8]
   24abc:	movw	r1, #0
   24ac0:	cmp	r0, r1
   24ac4:	bne	24ad4 <__assert_fail@plt+0x13380>
   24ac8:	movw	r0, #12
   24acc:	str	r0, [fp, #-4]
   24ad0:	b	24b70 <__assert_fail@plt+0x1341c>
   24ad4:	ldr	r0, [sp, #4]
   24ad8:	ldr	r1, [sp]
   24adc:	cmp	r0, r1
   24ae0:	bne	24b04 <__assert_fail@plt+0x133b0>
   24ae4:	ldr	r0, [sp, #8]
   24ae8:	movw	r1, #1
   24aec:	str	r1, [r0, #4]
   24af0:	ldr	r0, [sp, #4]
   24af4:	ldr	r1, [sp, #8]
   24af8:	ldr	r1, [r1, #8]
   24afc:	str	r0, [r1]
   24b00:	b	24b68 <__assert_fail@plt+0x13414>
   24b04:	ldr	r0, [sp, #8]
   24b08:	movw	r1, #2
   24b0c:	str	r1, [r0, #4]
   24b10:	ldr	r0, [sp, #4]
   24b14:	ldr	r1, [sp]
   24b18:	cmp	r0, r1
   24b1c:	bge	24b44 <__assert_fail@plt+0x133f0>
   24b20:	ldr	r0, [sp, #4]
   24b24:	ldr	r1, [sp, #8]
   24b28:	ldr	r1, [r1, #8]
   24b2c:	str	r0, [r1]
   24b30:	ldr	r0, [sp]
   24b34:	ldr	r1, [sp, #8]
   24b38:	ldr	r1, [r1, #8]
   24b3c:	str	r0, [r1, #4]
   24b40:	b	24b64 <__assert_fail@plt+0x13410>
   24b44:	ldr	r0, [sp]
   24b48:	ldr	r1, [sp, #8]
   24b4c:	ldr	r1, [r1, #8]
   24b50:	str	r0, [r1]
   24b54:	ldr	r0, [sp, #4]
   24b58:	ldr	r1, [sp, #8]
   24b5c:	ldr	r1, [r1, #8]
   24b60:	str	r0, [r1, #4]
   24b64:	b	24b68 <__assert_fail@plt+0x13414>
   24b68:	movw	r0, #0
   24b6c:	str	r0, [fp, #-4]
   24b70:	ldr	r0, [fp, #-4]
   24b74:	mov	sp, fp
   24b78:	pop	{fp, pc}
   24b7c:	push	{fp, lr}
   24b80:	mov	fp, sp
   24b84:	sub	sp, sp, #16
   24b88:	str	r0, [sp, #8]
   24b8c:	str	r1, [sp, #4]
   24b90:	ldr	r0, [sp, #8]
   24b94:	movw	r1, #1
   24b98:	str	r1, [r0]
   24b9c:	ldr	r0, [sp, #8]
   24ba0:	str	r1, [r0, #4]
   24ba4:	movw	r0, #4
   24ba8:	bl	38a7c <__assert_fail@plt+0x27328>
   24bac:	ldr	r1, [sp, #8]
   24bb0:	str	r0, [r1, #8]
   24bb4:	ldr	r0, [sp, #8]
   24bb8:	ldr	r0, [r0, #8]
   24bbc:	movw	r1, #0
   24bc0:	cmp	r0, r1
   24bc4:	bne	24be8 <__assert_fail@plt+0x13494>
   24bc8:	ldr	r0, [sp, #8]
   24bcc:	movw	r1, #0
   24bd0:	str	r1, [r0, #4]
   24bd4:	ldr	r0, [sp, #8]
   24bd8:	str	r1, [r0]
   24bdc:	movw	r0, #12
   24be0:	str	r0, [fp, #-4]
   24be4:	b	24c00 <__assert_fail@plt+0x134ac>
   24be8:	ldr	r0, [sp, #4]
   24bec:	ldr	r1, [sp, #8]
   24bf0:	ldr	r1, [r1, #8]
   24bf4:	str	r0, [r1]
   24bf8:	movw	r0, #0
   24bfc:	str	r0, [fp, #-4]
   24c00:	ldr	r0, [fp, #-4]
   24c04:	mov	sp, fp
   24c08:	pop	{fp, pc}
   24c0c:	push	{fp, lr}
   24c10:	mov	fp, sp
   24c14:	sub	sp, sp, #72	; 0x48
   24c18:	str	r0, [fp, #-8]
   24c1c:	str	r1, [fp, #-12]
   24c20:	str	r2, [fp, #-16]
   24c24:	and	r0, r3, #1
   24c28:	strb	r0, [fp, #-17]	; 0xffffffef
   24c2c:	movw	r0, #0
   24c30:	strb	r0, [sp, #31]
   24c34:	ldr	r0, [fp, #-12]
   24c38:	ldr	r0, [r0, #20]
   24c3c:	ldr	r1, [fp, #-16]
   24c40:	movw	r2, #12
   24c44:	mul	r1, r1, r2
   24c48:	add	r0, r0, r1
   24c4c:	ldr	r0, [r0, #4]
   24c50:	add	r1, r0, #1
   24c54:	add	r0, sp, #32
   24c58:	bl	24fe0 <__assert_fail@plt+0x1388c>
   24c5c:	str	r0, [fp, #-24]	; 0xffffffe8
   24c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c64:	cmp	r0, #0
   24c68:	beq	24c78 <__assert_fail@plt+0x13524>
   24c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c70:	str	r0, [fp, #-4]
   24c74:	b	24fd4 <__assert_fail@plt+0x13880>
   24c78:	ldr	r0, [fp, #-16]
   24c7c:	ldr	r1, [sp, #36]	; 0x24
   24c80:	ldr	r2, [sp, #40]	; 0x28
   24c84:	add	r3, r1, #1
   24c88:	str	r3, [sp, #36]	; 0x24
   24c8c:	str	r0, [r2, r1, lsl #2]
   24c90:	ldr	r0, [fp, #-12]
   24c94:	ldr	r0, [r0, #24]
   24c98:	ldr	r1, [fp, #-16]
   24c9c:	add	r1, r1, r1, lsl #1
   24ca0:	add	r0, r0, r1, lsl #2
   24ca4:	mvn	r1, #0
   24ca8:	str	r1, [r0, #4]
   24cac:	ldr	r0, [fp, #-12]
   24cb0:	ldr	r0, [r0]
   24cb4:	ldr	r1, [fp, #-16]
   24cb8:	add	r0, r0, r1, lsl #3
   24cbc:	ldr	r0, [r0, #4]
   24cc0:	lsr	r0, r0, #8
   24cc4:	movw	r1, #1023	; 0x3ff
   24cc8:	and	r0, r0, r1
   24ccc:	cmp	r0, #0
   24cd0:	beq	24d98 <__assert_fail@plt+0x13644>
   24cd4:	ldr	r0, [fp, #-12]
   24cd8:	ldr	r0, [r0, #20]
   24cdc:	ldr	r1, [fp, #-16]
   24ce0:	movw	r2, #12
   24ce4:	mul	r1, r1, r2
   24ce8:	add	r0, r0, r1
   24cec:	ldr	r0, [r0, #4]
   24cf0:	cmp	r0, #0
   24cf4:	beq	24d98 <__assert_fail@plt+0x13644>
   24cf8:	ldr	r0, [fp, #-12]
   24cfc:	ldr	r1, [r0]
   24d00:	ldr	r0, [r0, #20]
   24d04:	ldr	r2, [fp, #-16]
   24d08:	add	r2, r2, r2, lsl #1
   24d0c:	add	r0, r0, r2, lsl #2
   24d10:	ldr	r0, [r0, #8]
   24d14:	ldr	r0, [r0]
   24d18:	add	r0, r1, r0, lsl #3
   24d1c:	ldr	r0, [r0, #4]
   24d20:	lsr	r0, r0, #18
   24d24:	and	r0, r0, #1
   24d28:	cmp	r0, #0
   24d2c:	bne	24d98 <__assert_fail@plt+0x13644>
   24d30:	ldr	r0, [fp, #-12]
   24d34:	ldr	r1, [fp, #-16]
   24d38:	mov	r2, r1
   24d3c:	mov	r3, r1
   24d40:	mov	ip, r1
   24d44:	ldr	lr, [r0]
   24d48:	add	r1, lr, r1, lsl #3
   24d4c:	ldr	r1, [r1, #4]
   24d50:	lsr	r1, r1, #8
   24d54:	movw	lr, #1023	; 0x3ff
   24d58:	and	r1, r1, lr
   24d5c:	str	r1, [sp, #8]
   24d60:	mov	r1, r2
   24d64:	mov	r2, r3
   24d68:	mov	r3, ip
   24d6c:	ldr	ip, [sp, #8]
   24d70:	str	ip, [sp]
   24d74:	bl	25054 <__assert_fail@plt+0x13900>
   24d78:	str	r0, [fp, #-24]	; 0xffffffe8
   24d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d80:	cmp	r0, #0
   24d84:	beq	24d94 <__assert_fail@plt+0x13640>
   24d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d8c:	str	r0, [fp, #-4]
   24d90:	b	24fd4 <__assert_fail@plt+0x13880>
   24d94:	b	24d98 <__assert_fail@plt+0x13644>
   24d98:	ldr	r0, [fp, #-12]
   24d9c:	ldr	r0, [r0]
   24da0:	ldr	r1, [fp, #-16]
   24da4:	add	r0, r0, r1, lsl #3
   24da8:	ldr	r0, [r0, #4]
   24dac:	and	r0, r0, #255	; 0xff
   24db0:	and	r0, r0, #8
   24db4:	cmp	r0, #0
   24db8:	beq	24f44 <__assert_fail@plt+0x137f0>
   24dbc:	movw	r0, #0
   24dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   24dc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24dc8:	ldr	r1, [fp, #-12]
   24dcc:	ldr	r1, [r1, #20]
   24dd0:	ldr	r2, [fp, #-16]
   24dd4:	movw	r3, #12
   24dd8:	mul	r2, r2, r3
   24ddc:	add	r1, r1, r2
   24de0:	ldr	r1, [r1, #4]
   24de4:	cmp	r0, r1
   24de8:	bge	24f40 <__assert_fail@plt+0x137ec>
   24dec:	ldr	r0, [fp, #-12]
   24df0:	ldr	r0, [r0, #20]
   24df4:	ldr	r1, [fp, #-16]
   24df8:	add	r1, r1, r1, lsl #1
   24dfc:	add	r0, r0, r1, lsl #2
   24e00:	ldr	r0, [r0, #8]
   24e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24e08:	add	r0, r0, r1, lsl #2
   24e0c:	ldr	r0, [r0]
   24e10:	str	r0, [sp, #12]
   24e14:	ldr	r0, [fp, #-12]
   24e18:	ldr	r0, [r0, #24]
   24e1c:	ldr	r1, [sp, #12]
   24e20:	movw	r2, #12
   24e24:	mul	r1, r1, r2
   24e28:	add	r0, r0, r1
   24e2c:	ldr	r0, [r0, #4]
   24e30:	cmn	r0, #1
   24e34:	bne	24e44 <__assert_fail@plt+0x136f0>
   24e38:	movw	r0, #1
   24e3c:	strb	r0, [sp, #31]
   24e40:	b	24f30 <__assert_fail@plt+0x137dc>
   24e44:	ldr	r0, [fp, #-12]
   24e48:	ldr	r0, [r0, #24]
   24e4c:	ldr	r1, [sp, #12]
   24e50:	movw	r2, #12
   24e54:	mul	r1, r1, r2
   24e58:	add	r0, r0, r1
   24e5c:	ldr	r0, [r0, #4]
   24e60:	cmp	r0, #0
   24e64:	bne	24ea0 <__assert_fail@plt+0x1374c>
   24e68:	ldr	r1, [fp, #-12]
   24e6c:	ldr	r2, [sp, #12]
   24e70:	add	r0, sp, #16
   24e74:	movw	r3, #0
   24e78:	and	r3, r3, #1
   24e7c:	bl	24c0c <__assert_fail@plt+0x134b8>
   24e80:	str	r0, [fp, #-24]	; 0xffffffe8
   24e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e88:	cmp	r0, #0
   24e8c:	beq	24e9c <__assert_fail@plt+0x13748>
   24e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e94:	str	r0, [fp, #-4]
   24e98:	b	24fd4 <__assert_fail@plt+0x13880>
   24e9c:	b	24ed0 <__assert_fail@plt+0x1377c>
   24ea0:	ldr	r0, [fp, #-12]
   24ea4:	ldr	r0, [r0, #24]
   24ea8:	ldr	r1, [sp, #12]
   24eac:	movw	r2, #12
   24eb0:	mul	r1, r1, r2
   24eb4:	add	r0, r0, r1
   24eb8:	ldr	r1, [r0]
   24ebc:	str	r1, [sp, #16]
   24ec0:	ldr	r1, [r0, #4]
   24ec4:	str	r1, [sp, #20]
   24ec8:	ldr	r0, [r0, #8]
   24ecc:	str	r0, [sp, #24]
   24ed0:	add	r0, sp, #32
   24ed4:	add	r1, sp, #16
   24ed8:	bl	2555c <__assert_fail@plt+0x13e08>
   24edc:	str	r0, [fp, #-24]	; 0xffffffe8
   24ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ee4:	cmp	r0, #0
   24ee8:	beq	24ef8 <__assert_fail@plt+0x137a4>
   24eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ef0:	str	r0, [fp, #-4]
   24ef4:	b	24fd4 <__assert_fail@plt+0x13880>
   24ef8:	ldr	r0, [fp, #-12]
   24efc:	ldr	r0, [r0, #24]
   24f00:	ldr	r1, [sp, #12]
   24f04:	movw	r2, #12
   24f08:	mul	r1, r1, r2
   24f0c:	add	r0, r0, r1
   24f10:	ldr	r0, [r0, #4]
   24f14:	cmp	r0, #0
   24f18:	bne	24f2c <__assert_fail@plt+0x137d8>
   24f1c:	movw	r0, #1
   24f20:	strb	r0, [sp, #31]
   24f24:	ldr	r0, [sp, #24]
   24f28:	bl	1604c <__assert_fail@plt+0x48f8>
   24f2c:	b	24f30 <__assert_fail@plt+0x137dc>
   24f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24f34:	add	r0, r0, #1
   24f38:	str	r0, [fp, #-28]	; 0xffffffe4
   24f3c:	b	24dc4 <__assert_fail@plt+0x13670>
   24f40:	b	24f44 <__assert_fail@plt+0x137f0>
   24f44:	ldrb	r0, [sp, #31]
   24f48:	tst	r0, #1
   24f4c:	beq	24f80 <__assert_fail@plt+0x1382c>
   24f50:	ldrb	r0, [fp, #-17]	; 0xffffffef
   24f54:	tst	r0, #1
   24f58:	bne	24f80 <__assert_fail@plt+0x1382c>
   24f5c:	ldr	r0, [fp, #-12]
   24f60:	ldr	r0, [r0, #24]
   24f64:	ldr	r1, [fp, #-16]
   24f68:	movw	r2, #12
   24f6c:	mul	r1, r1, r2
   24f70:	add	r0, r0, r1
   24f74:	movw	r1, #0
   24f78:	str	r1, [r0, #4]
   24f7c:	b	24fb0 <__assert_fail@plt+0x1385c>
   24f80:	ldr	r0, [fp, #-12]
   24f84:	ldr	r0, [r0, #24]
   24f88:	ldr	r1, [fp, #-16]
   24f8c:	movw	r2, #12
   24f90:	mul	r1, r1, r2
   24f94:	add	r0, r0, r1
   24f98:	ldr	r1, [sp, #32]
   24f9c:	str	r1, [r0]
   24fa0:	ldr	r1, [sp, #36]	; 0x24
   24fa4:	str	r1, [r0, #4]
   24fa8:	ldr	r1, [sp, #40]	; 0x28
   24fac:	str	r1, [r0, #8]
   24fb0:	ldr	r0, [fp, #-8]
   24fb4:	ldr	r1, [sp, #32]
   24fb8:	str	r1, [r0]
   24fbc:	ldr	r1, [sp, #36]	; 0x24
   24fc0:	str	r1, [r0, #4]
   24fc4:	ldr	r1, [sp, #40]	; 0x28
   24fc8:	str	r1, [r0, #8]
   24fcc:	movw	r0, #0
   24fd0:	str	r0, [fp, #-4]
   24fd4:	ldr	r0, [fp, #-4]
   24fd8:	mov	sp, fp
   24fdc:	pop	{fp, pc}
   24fe0:	push	{fp, lr}
   24fe4:	mov	fp, sp
   24fe8:	sub	sp, sp, #16
   24fec:	str	r0, [sp, #8]
   24ff0:	str	r1, [sp, #4]
   24ff4:	ldr	r0, [sp, #4]
   24ff8:	ldr	r1, [sp, #8]
   24ffc:	str	r0, [r1]
   25000:	ldr	r0, [sp, #8]
   25004:	mov	r1, #0
   25008:	str	r1, [r0, #4]
   2500c:	ldr	r0, [sp, #4]
   25010:	lsl	r0, r0, #2
   25014:	bl	38a7c <__assert_fail@plt+0x27328>
   25018:	ldr	r1, [sp, #8]
   2501c:	str	r0, [r1, #8]
   25020:	ldr	r0, [sp, #8]
   25024:	ldr	r0, [r0, #8]
   25028:	movw	r1, #0
   2502c:	cmp	r0, r1
   25030:	bne	25040 <__assert_fail@plt+0x138ec>
   25034:	movw	r0, #12
   25038:	str	r0, [fp, #-4]
   2503c:	b	25048 <__assert_fail@plt+0x138f4>
   25040:	movw	r0, #0
   25044:	str	r0, [fp, #-4]
   25048:	ldr	r0, [fp, #-4]
   2504c:	mov	sp, fp
   25050:	pop	{fp, pc}
   25054:	push	{fp, lr}
   25058:	mov	fp, sp
   2505c:	sub	sp, sp, #56	; 0x38
   25060:	ldr	ip, [fp, #8]
   25064:	str	r0, [fp, #-8]
   25068:	str	r1, [fp, #-12]
   2506c:	str	r2, [fp, #-16]
   25070:	str	r3, [fp, #-20]	; 0xffffffec
   25074:	ldr	r0, [fp, #8]
   25078:	str	r0, [sp, #20]
   2507c:	ldr	r0, [fp, #-12]
   25080:	str	r0, [fp, #-24]	; 0xffffffe8
   25084:	ldr	r0, [fp, #-16]
   25088:	str	r0, [sp, #28]
   2508c:	str	ip, [sp, #4]
   25090:	ldr	r0, [fp, #-8]
   25094:	ldr	r0, [r0]
   25098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2509c:	add	r0, r0, r1, lsl #3
   250a0:	ldr	r0, [r0, #4]
   250a4:	and	r0, r0, #255	; 0xff
   250a8:	cmp	r0, #4
   250ac:	bne	2517c <__assert_fail@plt+0x13a28>
   250b0:	ldr	r0, [fp, #-8]
   250b4:	ldr	r0, [r0, #12]
   250b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   250bc:	add	r0, r0, r1, lsl #2
   250c0:	ldr	r0, [r0]
   250c4:	str	r0, [sp, #16]
   250c8:	ldr	r0, [fp, #-8]
   250cc:	ldr	r0, [r0, #20]
   250d0:	ldr	r1, [sp, #28]
   250d4:	movw	r2, #12
   250d8:	mul	r1, r1, r2
   250dc:	add	r0, r0, r1
   250e0:	movw	r1, #0
   250e4:	str	r1, [r0, #4]
   250e8:	ldr	r0, [fp, #-8]
   250ec:	ldr	r1, [sp, #16]
   250f0:	ldr	r2, [sp, #20]
   250f4:	bl	25964 <__assert_fail@plt+0x14210>
   250f8:	str	r0, [sp, #12]
   250fc:	ldr	r0, [sp, #12]
   25100:	cmn	r0, #1
   25104:	bne	25114 <__assert_fail@plt+0x139c0>
   25108:	movw	r0, #12
   2510c:	str	r0, [fp, #-4]
   25110:	b	25550 <__assert_fail@plt+0x13dfc>
   25114:	ldr	r0, [fp, #-8]
   25118:	ldr	r0, [r0, #12]
   2511c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25120:	ldr	r1, [r0, r1, lsl #2]
   25124:	ldr	r2, [sp, #28]
   25128:	add	r0, r0, r2, lsl #2
   2512c:	str	r1, [r0]
   25130:	ldr	r0, [fp, #-8]
   25134:	ldr	r0, [r0, #20]
   25138:	ldr	r1, [sp, #28]
   2513c:	movw	r2, #12
   25140:	mul	r1, r1, r2
   25144:	add	r0, r0, r1
   25148:	ldr	r1, [sp, #12]
   2514c:	bl	25a48 <__assert_fail@plt+0x142f4>
   25150:	and	r0, r0, #1
   25154:	strb	r0, [sp, #27]
   25158:	ldrb	r0, [sp, #27]
   2515c:	mvn	r1, #0
   25160:	eor	r0, r0, r1
   25164:	tst	r0, #1
   25168:	beq	25178 <__assert_fail@plt+0x13a24>
   2516c:	movw	r0, #12
   25170:	str	r0, [fp, #-4]
   25174:	b	25550 <__assert_fail@plt+0x13dfc>
   25178:	b	25534 <__assert_fail@plt+0x13de0>
   2517c:	ldr	r0, [fp, #-8]
   25180:	ldr	r0, [r0, #20]
   25184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25188:	movw	r2, #12
   2518c:	mul	r1, r1, r2
   25190:	add	r0, r0, r1
   25194:	ldr	r0, [r0, #4]
   25198:	cmp	r0, #0
   2519c:	bne	251c0 <__assert_fail@plt+0x13a6c>
   251a0:	ldr	r0, [fp, #-8]
   251a4:	ldr	r0, [r0, #12]
   251a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251ac:	ldr	r1, [r0, r1, lsl #2]
   251b0:	ldr	r2, [sp, #28]
   251b4:	add	r0, r0, r2, lsl #2
   251b8:	str	r1, [r0]
   251bc:	b	25548 <__assert_fail@plt+0x13df4>
   251c0:	ldr	r0, [fp, #-8]
   251c4:	ldr	r0, [r0, #20]
   251c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251cc:	movw	r2, #12
   251d0:	mul	r1, r1, r2
   251d4:	add	r0, r0, r1
   251d8:	ldr	r0, [r0, #4]
   251dc:	cmp	r0, #1
   251e0:	bne	25334 <__assert_fail@plt+0x13be0>
   251e4:	ldr	r0, [fp, #-8]
   251e8:	ldr	r0, [r0, #20]
   251ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251f0:	movw	r2, #12
   251f4:	mul	r1, r1, r2
   251f8:	add	r0, r0, r1
   251fc:	ldr	r0, [r0, #8]
   25200:	ldr	r0, [r0]
   25204:	str	r0, [sp, #16]
   25208:	ldr	r0, [fp, #-8]
   2520c:	ldr	r0, [r0, #20]
   25210:	ldr	r1, [sp, #28]
   25214:	mul	r1, r1, r2
   25218:	add	r0, r0, r1
   2521c:	movw	r1, #0
   25220:	str	r1, [r0, #4]
   25224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25228:	ldr	r1, [fp, #-20]	; 0xffffffec
   2522c:	cmp	r0, r1
   25230:	bne	25290 <__assert_fail@plt+0x13b3c>
   25234:	ldr	r0, [sp, #28]
   25238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2523c:	cmp	r0, r1
   25240:	beq	25290 <__assert_fail@plt+0x13b3c>
   25244:	ldr	r0, [fp, #-8]
   25248:	ldr	r0, [r0, #20]
   2524c:	ldr	r1, [sp, #28]
   25250:	movw	r2, #12
   25254:	mul	r1, r1, r2
   25258:	add	r0, r0, r1
   2525c:	ldr	r1, [sp, #16]
   25260:	bl	25a48 <__assert_fail@plt+0x142f4>
   25264:	and	r0, r0, #1
   25268:	strb	r0, [sp, #27]
   2526c:	ldrb	r0, [sp, #27]
   25270:	mvn	r1, #0
   25274:	eor	r0, r0, r1
   25278:	tst	r0, #1
   2527c:	beq	2528c <__assert_fail@plt+0x13b38>
   25280:	movw	r0, #12
   25284:	str	r0, [fp, #-4]
   25288:	b	25550 <__assert_fail@plt+0x13dfc>
   2528c:	b	25548 <__assert_fail@plt+0x13df4>
   25290:	ldr	r0, [fp, #-8]
   25294:	ldr	r0, [r0]
   25298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2529c:	add	r0, r0, r1, lsl #3
   252a0:	ldr	r0, [r0, #4]
   252a4:	lsr	r0, r0, #8
   252a8:	movw	r1, #1023	; 0x3ff
   252ac:	and	r0, r0, r1
   252b0:	ldr	r1, [sp, #20]
   252b4:	orr	r0, r1, r0
   252b8:	str	r0, [sp, #20]
   252bc:	ldr	r0, [fp, #-8]
   252c0:	ldr	r1, [sp, #16]
   252c4:	ldr	r2, [sp, #20]
   252c8:	bl	25964 <__assert_fail@plt+0x14210>
   252cc:	str	r0, [sp, #12]
   252d0:	ldr	r0, [sp, #12]
   252d4:	cmn	r0, #1
   252d8:	bne	252e8 <__assert_fail@plt+0x13b94>
   252dc:	movw	r0, #12
   252e0:	str	r0, [fp, #-4]
   252e4:	b	25550 <__assert_fail@plt+0x13dfc>
   252e8:	ldr	r0, [fp, #-8]
   252ec:	ldr	r0, [r0, #20]
   252f0:	ldr	r1, [sp, #28]
   252f4:	movw	r2, #12
   252f8:	mul	r1, r1, r2
   252fc:	add	r0, r0, r1
   25300:	ldr	r1, [sp, #12]
   25304:	bl	25a48 <__assert_fail@plt+0x142f4>
   25308:	and	r0, r0, #1
   2530c:	strb	r0, [sp, #27]
   25310:	ldrb	r0, [sp, #27]
   25314:	mvn	r1, #0
   25318:	eor	r0, r0, r1
   2531c:	tst	r0, #1
   25320:	beq	25330 <__assert_fail@plt+0x13bdc>
   25324:	movw	r0, #12
   25328:	str	r0, [fp, #-4]
   2532c:	b	25550 <__assert_fail@plt+0x13dfc>
   25330:	b	2552c <__assert_fail@plt+0x13dd8>
   25334:	ldr	r0, [fp, #-8]
   25338:	ldr	r0, [r0, #20]
   2533c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25340:	movw	r2, #12
   25344:	mul	r1, r1, r2
   25348:	add	r0, r0, r1
   2534c:	ldr	r0, [r0, #8]
   25350:	ldr	r0, [r0]
   25354:	str	r0, [sp, #16]
   25358:	ldr	r0, [fp, #-8]
   2535c:	ldr	r0, [r0, #20]
   25360:	ldr	r1, [sp, #28]
   25364:	mul	r1, r1, r2
   25368:	add	r0, r0, r1
   2536c:	movw	r1, #0
   25370:	str	r1, [r0, #4]
   25374:	ldr	r0, [fp, #-8]
   25378:	ldr	r1, [sp, #16]
   2537c:	ldr	r2, [sp, #20]
   25380:	bl	25c80 <__assert_fail@plt+0x1452c>
   25384:	str	r0, [sp, #12]
   25388:	ldr	r0, [sp, #12]
   2538c:	cmn	r0, #1
   25390:	bne	25444 <__assert_fail@plt+0x13cf0>
   25394:	ldr	r0, [fp, #-8]
   25398:	ldr	r1, [sp, #16]
   2539c:	ldr	r2, [sp, #20]
   253a0:	bl	25964 <__assert_fail@plt+0x14210>
   253a4:	str	r0, [sp, #12]
   253a8:	ldr	r0, [sp, #12]
   253ac:	cmn	r0, #1
   253b0:	bne	253c0 <__assert_fail@plt+0x13c6c>
   253b4:	movw	r0, #12
   253b8:	str	r0, [fp, #-4]
   253bc:	b	25550 <__assert_fail@plt+0x13dfc>
   253c0:	ldr	r0, [fp, #-8]
   253c4:	ldr	r0, [r0, #20]
   253c8:	ldr	r1, [sp, #28]
   253cc:	movw	r2, #12
   253d0:	mul	r1, r1, r2
   253d4:	add	r0, r0, r1
   253d8:	ldr	r1, [sp, #12]
   253dc:	bl	25a48 <__assert_fail@plt+0x142f4>
   253e0:	and	r0, r0, #1
   253e4:	strb	r0, [sp, #27]
   253e8:	ldrb	r0, [sp, #27]
   253ec:	mvn	r1, #0
   253f0:	eor	r0, r0, r1
   253f4:	tst	r0, #1
   253f8:	beq	25408 <__assert_fail@plt+0x13cb4>
   253fc:	movw	r0, #12
   25400:	str	r0, [fp, #-4]
   25404:	b	25550 <__assert_fail@plt+0x13dfc>
   25408:	ldr	r0, [fp, #-8]
   2540c:	ldr	r1, [sp, #16]
   25410:	ldr	r2, [sp, #12]
   25414:	ldr	r3, [fp, #-20]	; 0xffffffec
   25418:	ldr	ip, [sp, #20]
   2541c:	str	ip, [sp]
   25420:	bl	25054 <__assert_fail@plt+0x13900>
   25424:	str	r0, [sp, #8]
   25428:	ldr	r0, [sp, #8]
   2542c:	cmp	r0, #0
   25430:	beq	25440 <__assert_fail@plt+0x13cec>
   25434:	ldr	r0, [sp, #8]
   25438:	str	r0, [fp, #-4]
   2543c:	b	25550 <__assert_fail@plt+0x13dfc>
   25440:	b	25490 <__assert_fail@plt+0x13d3c>
   25444:	ldr	r0, [fp, #-8]
   25448:	ldr	r0, [r0, #20]
   2544c:	ldr	r1, [sp, #28]
   25450:	movw	r2, #12
   25454:	mul	r1, r1, r2
   25458:	add	r0, r0, r1
   2545c:	ldr	r1, [sp, #12]
   25460:	bl	25a48 <__assert_fail@plt+0x142f4>
   25464:	and	r0, r0, #1
   25468:	strb	r0, [sp, #27]
   2546c:	ldrb	r0, [sp, #27]
   25470:	mvn	r1, #0
   25474:	eor	r0, r0, r1
   25478:	tst	r0, #1
   2547c:	beq	2548c <__assert_fail@plt+0x13d38>
   25480:	movw	r0, #12
   25484:	str	r0, [fp, #-4]
   25488:	b	25550 <__assert_fail@plt+0x13dfc>
   2548c:	b	25490 <__assert_fail@plt+0x13d3c>
   25490:	ldr	r0, [fp, #-8]
   25494:	ldr	r0, [r0, #20]
   25498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2549c:	movw	r2, #12
   254a0:	mul	r1, r1, r2
   254a4:	add	r0, r0, r1
   254a8:	ldr	r0, [r0, #8]
   254ac:	ldr	r0, [r0, #4]
   254b0:	str	r0, [sp, #16]
   254b4:	ldr	r0, [fp, #-8]
   254b8:	ldr	r1, [sp, #16]
   254bc:	ldr	r2, [sp, #20]
   254c0:	bl	25964 <__assert_fail@plt+0x14210>
   254c4:	str	r0, [sp, #12]
   254c8:	ldr	r0, [sp, #12]
   254cc:	cmn	r0, #1
   254d0:	bne	254e0 <__assert_fail@plt+0x13d8c>
   254d4:	movw	r0, #12
   254d8:	str	r0, [fp, #-4]
   254dc:	b	25550 <__assert_fail@plt+0x13dfc>
   254e0:	ldr	r0, [fp, #-8]
   254e4:	ldr	r0, [r0, #20]
   254e8:	ldr	r1, [sp, #28]
   254ec:	movw	r2, #12
   254f0:	mul	r1, r1, r2
   254f4:	add	r0, r0, r1
   254f8:	ldr	r1, [sp, #12]
   254fc:	bl	25a48 <__assert_fail@plt+0x142f4>
   25500:	and	r0, r0, #1
   25504:	strb	r0, [sp, #27]
   25508:	ldrb	r0, [sp, #27]
   2550c:	mvn	r1, #0
   25510:	eor	r0, r0, r1
   25514:	tst	r0, #1
   25518:	beq	25528 <__assert_fail@plt+0x13dd4>
   2551c:	movw	r0, #12
   25520:	str	r0, [fp, #-4]
   25524:	b	25550 <__assert_fail@plt+0x13dfc>
   25528:	b	2552c <__assert_fail@plt+0x13dd8>
   2552c:	b	25530 <__assert_fail@plt+0x13ddc>
   25530:	b	25534 <__assert_fail@plt+0x13de0>
   25534:	ldr	r0, [sp, #16]
   25538:	str	r0, [fp, #-24]	; 0xffffffe8
   2553c:	ldr	r0, [sp, #12]
   25540:	str	r0, [sp, #28]
   25544:	b	25090 <__assert_fail@plt+0x1393c>
   25548:	movw	r0, #0
   2554c:	str	r0, [fp, #-4]
   25550:	ldr	r0, [fp, #-4]
   25554:	mov	sp, fp
   25558:	pop	{fp, pc}
   2555c:	push	{fp, lr}
   25560:	mov	fp, sp
   25564:	sub	sp, sp, #40	; 0x28
   25568:	str	r0, [fp, #-8]
   2556c:	str	r1, [fp, #-12]
   25570:	ldr	r0, [fp, #-12]
   25574:	movw	r1, #0
   25578:	cmp	r0, r1
   2557c:	beq	25590 <__assert_fail@plt+0x13e3c>
   25580:	ldr	r0, [fp, #-12]
   25584:	ldr	r0, [r0, #4]
   25588:	cmp	r0, #0
   2558c:	bne	2559c <__assert_fail@plt+0x13e48>
   25590:	movw	r0, #0
   25594:	str	r0, [fp, #-4]
   25598:	b	25958 <__assert_fail@plt+0x14204>
   2559c:	ldr	r0, [fp, #-8]
   255a0:	ldr	r0, [r0]
   255a4:	ldr	r1, [fp, #-12]
   255a8:	ldr	r1, [r1, #4]
   255ac:	lsl	r1, r1, #1
   255b0:	ldr	r2, [fp, #-8]
   255b4:	ldr	r2, [r2, #4]
   255b8:	add	r1, r1, r2
   255bc:	cmp	r0, r1
   255c0:	bge	2562c <__assert_fail@plt+0x13ed8>
   255c4:	ldr	r0, [fp, #-12]
   255c8:	ldr	r0, [r0, #4]
   255cc:	ldr	r1, [fp, #-8]
   255d0:	ldr	r1, [r1]
   255d4:	add	r0, r0, r1
   255d8:	lsl	r0, r0, #1
   255dc:	str	r0, [sp, #8]
   255e0:	ldr	r0, [fp, #-8]
   255e4:	ldr	r0, [r0, #8]
   255e8:	ldr	r1, [sp, #8]
   255ec:	lsl	r1, r1, #2
   255f0:	bl	38aec <__assert_fail@plt+0x27398>
   255f4:	str	r0, [sp, #4]
   255f8:	ldr	r0, [sp, #4]
   255fc:	movw	r1, #0
   25600:	cmp	r0, r1
   25604:	bne	25614 <__assert_fail@plt+0x13ec0>
   25608:	movw	r0, #12
   2560c:	str	r0, [fp, #-4]
   25610:	b	25958 <__assert_fail@plt+0x14204>
   25614:	ldr	r0, [sp, #4]
   25618:	ldr	r1, [fp, #-8]
   2561c:	str	r0, [r1, #8]
   25620:	ldr	r0, [sp, #8]
   25624:	ldr	r1, [fp, #-8]
   25628:	str	r0, [r1]
   2562c:	ldr	r0, [fp, #-8]
   25630:	ldr	r0, [r0, #4]
   25634:	cmp	r0, #0
   25638:	bne	2568c <__assert_fail@plt+0x13f38>
   2563c:	ldr	r0, [fp, #-8]
   25640:	ldr	r0, [r0, #8]
   25644:	movw	r1, #0
   25648:	cmp	r0, r1
   2564c:	beq	25654 <__assert_fail@plt+0x13f00>
   25650:	b	25654 <__assert_fail@plt+0x13f00>
   25654:	ldr	r0, [fp, #-12]
   25658:	ldr	r0, [r0, #4]
   2565c:	ldr	r1, [fp, #-8]
   25660:	str	r0, [r1, #4]
   25664:	ldr	r0, [fp, #-8]
   25668:	ldr	r0, [r0, #8]
   2566c:	ldr	r1, [fp, #-12]
   25670:	ldr	r2, [r1, #4]
   25674:	ldr	r1, [r1, #8]
   25678:	lsl	r2, r2, #2
   2567c:	bl	11478 <memcpy@plt>
   25680:	movw	r0, #0
   25684:	str	r0, [fp, #-4]
   25688:	b	25958 <__assert_fail@plt+0x14204>
   2568c:	ldr	r0, [fp, #-8]
   25690:	ldr	r0, [r0, #4]
   25694:	ldr	r1, [fp, #-12]
   25698:	ldr	r1, [r1, #4]
   2569c:	lsl	r1, r1, #1
   256a0:	add	r0, r0, r1
   256a4:	str	r0, [sp, #16]
   256a8:	ldr	r0, [fp, #-12]
   256ac:	ldr	r0, [r0, #4]
   256b0:	sub	r0, r0, #1
   256b4:	str	r0, [fp, #-16]
   256b8:	ldr	r0, [fp, #-8]
   256bc:	ldr	r0, [r0, #4]
   256c0:	sub	r0, r0, #1
   256c4:	str	r0, [sp, #20]
   256c8:	ldr	r0, [fp, #-16]
   256cc:	cmp	r0, #0
   256d0:	movw	r0, #0
   256d4:	str	r0, [sp]
   256d8:	blt	256f0 <__assert_fail@plt+0x13f9c>
   256dc:	ldr	r0, [sp, #20]
   256e0:	cmp	r0, #0
   256e4:	movw	r0, #0
   256e8:	movge	r0, #1
   256ec:	str	r0, [sp]
   256f0:	ldr	r0, [sp]
   256f4:	tst	r0, #1
   256f8:	beq	257c4 <__assert_fail@plt+0x14070>
   256fc:	ldr	r0, [fp, #-8]
   25700:	ldr	r0, [r0, #8]
   25704:	ldr	r1, [sp, #20]
   25708:	ldr	r0, [r0, r1, lsl #2]
   2570c:	ldr	r1, [fp, #-12]
   25710:	ldr	r1, [r1, #8]
   25714:	ldr	r2, [fp, #-16]
   25718:	add	r1, r1, r2, lsl #2
   2571c:	ldr	r1, [r1]
   25720:	cmp	r0, r1
   25724:	bne	25748 <__assert_fail@plt+0x13ff4>
   25728:	ldr	r0, [fp, #-16]
   2572c:	mvn	r1, #0
   25730:	add	r0, r0, r1
   25734:	str	r0, [fp, #-16]
   25738:	ldr	r0, [sp, #20]
   2573c:	add	r0, r0, r1
   25740:	str	r0, [sp, #20]
   25744:	b	257c0 <__assert_fail@plt+0x1406c>
   25748:	ldr	r0, [fp, #-8]
   2574c:	ldr	r0, [r0, #8]
   25750:	ldr	r1, [sp, #20]
   25754:	ldr	r0, [r0, r1, lsl #2]
   25758:	ldr	r1, [fp, #-12]
   2575c:	ldr	r1, [r1, #8]
   25760:	ldr	r2, [fp, #-16]
   25764:	add	r1, r1, r2, lsl #2
   25768:	ldr	r1, [r1]
   2576c:	cmp	r0, r1
   25770:	bge	257ac <__assert_fail@plt+0x14058>
   25774:	ldr	r0, [fp, #-12]
   25778:	ldr	r0, [r0, #8]
   2577c:	ldr	r1, [fp, #-16]
   25780:	sub	r2, r1, #1
   25784:	str	r2, [fp, #-16]
   25788:	ldr	r0, [r0, r1, lsl #2]
   2578c:	ldr	r1, [fp, #-8]
   25790:	ldr	r1, [r1, #8]
   25794:	ldr	r2, [sp, #16]
   25798:	sub	r2, r2, #1
   2579c:	str	r2, [sp, #16]
   257a0:	add	r1, r1, r2, lsl #2
   257a4:	str	r0, [r1]
   257a8:	b	257bc <__assert_fail@plt+0x14068>
   257ac:	ldr	r0, [sp, #20]
   257b0:	mvn	r1, #0
   257b4:	add	r0, r0, r1
   257b8:	str	r0, [sp, #20]
   257bc:	b	257c0 <__assert_fail@plt+0x1406c>
   257c0:	b	256c8 <__assert_fail@plt+0x13f74>
   257c4:	ldr	r0, [fp, #-16]
   257c8:	cmp	r0, #0
   257cc:	blt	2580c <__assert_fail@plt+0x140b8>
   257d0:	ldr	r0, [fp, #-16]
   257d4:	add	r0, r0, #1
   257d8:	ldr	r1, [sp, #16]
   257dc:	sub	r0, r1, r0
   257e0:	str	r0, [sp, #16]
   257e4:	ldr	r0, [fp, #-8]
   257e8:	ldr	r0, [r0, #8]
   257ec:	ldr	r1, [sp, #16]
   257f0:	add	r0, r0, r1, lsl #2
   257f4:	ldr	r1, [fp, #-12]
   257f8:	ldr	r1, [r1, #8]
   257fc:	ldr	r2, [fp, #-16]
   25800:	add	r2, r2, #1
   25804:	lsl	r2, r2, #2
   25808:	bl	11478 <memcpy@plt>
   2580c:	ldr	r0, [fp, #-8]
   25810:	ldr	r0, [r0, #4]
   25814:	sub	r0, r0, #1
   25818:	str	r0, [sp, #20]
   2581c:	ldr	r0, [fp, #-8]
   25820:	ldr	r0, [r0, #4]
   25824:	ldr	r1, [fp, #-12]
   25828:	ldr	r1, [r1, #4]
   2582c:	lsl	r1, r1, #1
   25830:	add	r0, r0, r1
   25834:	sub	r0, r0, #1
   25838:	str	r0, [fp, #-16]
   2583c:	ldr	r0, [fp, #-16]
   25840:	ldr	r1, [sp, #16]
   25844:	sub	r0, r0, r1
   25848:	add	r0, r0, #1
   2584c:	str	r0, [sp, #12]
   25850:	ldr	r0, [sp, #12]
   25854:	cmp	r0, #0
   25858:	bne	25868 <__assert_fail@plt+0x14114>
   2585c:	movw	r0, #0
   25860:	str	r0, [fp, #-4]
   25864:	b	25958 <__assert_fail@plt+0x14204>
   25868:	ldr	r0, [sp, #12]
   2586c:	ldr	r1, [fp, #-8]
   25870:	ldr	r2, [r1, #4]
   25874:	add	r0, r2, r0
   25878:	str	r0, [r1, #4]
   2587c:	ldr	r0, [fp, #-8]
   25880:	ldr	r0, [r0, #8]
   25884:	ldr	r1, [fp, #-16]
   25888:	ldr	r1, [r0, r1, lsl #2]
   2588c:	ldr	r2, [sp, #20]
   25890:	add	r0, r0, r2, lsl #2
   25894:	ldr	r0, [r0]
   25898:	cmp	r1, r0
   2589c:	ble	258f0 <__assert_fail@plt+0x1419c>
   258a0:	ldr	r0, [fp, #-8]
   258a4:	ldr	r0, [r0, #8]
   258a8:	ldr	r1, [fp, #-16]
   258ac:	sub	r2, r1, #1
   258b0:	str	r2, [fp, #-16]
   258b4:	ldr	r0, [r0, r1, lsl #2]
   258b8:	ldr	r1, [fp, #-8]
   258bc:	ldr	r1, [r1, #8]
   258c0:	ldr	r2, [sp, #20]
   258c4:	ldr	r3, [sp, #12]
   258c8:	sub	ip, r3, #1
   258cc:	str	ip, [sp, #12]
   258d0:	add	r2, r2, r3
   258d4:	add	r1, r1, r2, lsl #2
   258d8:	str	r0, [r1]
   258dc:	ldr	r0, [sp, #12]
   258e0:	cmp	r0, #0
   258e4:	bne	258ec <__assert_fail@plt+0x14198>
   258e8:	b	25950 <__assert_fail@plt+0x141fc>
   258ec:	b	2594c <__assert_fail@plt+0x141f8>
   258f0:	ldr	r0, [fp, #-8]
   258f4:	ldr	r0, [r0, #8]
   258f8:	ldr	r1, [sp, #20]
   258fc:	ldr	r2, [r0, r1, lsl #2]
   25900:	ldr	r3, [sp, #12]
   25904:	add	r1, r1, r3
   25908:	add	r0, r0, r1, lsl #2
   2590c:	str	r2, [r0]
   25910:	ldr	r0, [sp, #20]
   25914:	mvn	r1, #0
   25918:	add	r0, r0, r1
   2591c:	str	r0, [sp, #20]
   25920:	cmp	r0, #0
   25924:	bge	25948 <__assert_fail@plt+0x141f4>
   25928:	ldr	r0, [fp, #-8]
   2592c:	ldr	r0, [r0, #8]
   25930:	ldr	r1, [sp, #16]
   25934:	add	r1, r0, r1, lsl #2
   25938:	ldr	r2, [sp, #12]
   2593c:	lsl	r2, r2, #2
   25940:	bl	11478 <memcpy@plt>
   25944:	b	25950 <__assert_fail@plt+0x141fc>
   25948:	b	2594c <__assert_fail@plt+0x141f8>
   2594c:	b	2587c <__assert_fail@plt+0x14128>
   25950:	movw	r0, #0
   25954:	str	r0, [fp, #-4]
   25958:	ldr	r0, [fp, #-4]
   2595c:	mov	sp, fp
   25960:	pop	{fp, pc}
   25964:	push	{fp, lr}
   25968:	mov	fp, sp
   2596c:	sub	sp, sp, #24
   25970:	str	r0, [fp, #-4]
   25974:	str	r1, [fp, #-8]
   25978:	str	r2, [sp, #12]
   2597c:	ldr	r0, [fp, #-4]
   25980:	ldr	r1, [r0]
   25984:	ldr	r2, [fp, #-8]
   25988:	ldr	r2, [r1, r2, lsl #3]!
   2598c:	ldr	r1, [r1, #4]
   25990:	str	r1, [sp, #4]
   25994:	mov	r1, r2
   25998:	ldr	r2, [sp, #4]
   2599c:	bl	24764 <__assert_fail@plt+0x13010>
   259a0:	str	r0, [sp, #8]
   259a4:	ldr	r0, [sp, #8]
   259a8:	cmn	r0, #1
   259ac:	beq	25a3c <__assert_fail@plt+0x142e8>
   259b0:	ldr	r0, [sp, #12]
   259b4:	ldr	r1, [fp, #-4]
   259b8:	ldr	r1, [r1]
   259bc:	ldr	r2, [sp, #8]
   259c0:	add	r1, r1, r2, lsl #3
   259c4:	ldr	r2, [r1, #4]
   259c8:	bfc	r0, #10, #22
   259cc:	bfc	r2, #8, #10
   259d0:	orr	r0, r2, r0, lsl #8
   259d4:	str	r0, [r1, #4]
   259d8:	ldr	r0, [fp, #-4]
   259dc:	ldr	r0, [r0]
   259e0:	ldr	r1, [fp, #-8]
   259e4:	add	r1, r0, r1, lsl #3
   259e8:	ldr	r1, [r1, #4]
   259ec:	ldr	r2, [sp, #8]
   259f0:	add	r0, r0, r2, lsl #3
   259f4:	ldr	r2, [r0, #4]
   259f8:	orr	r1, r2, r1
   259fc:	lsr	r1, r1, #8
   25a00:	bfi	r2, r1, #8, #10
   25a04:	str	r2, [r0, #4]
   25a08:	ldr	r0, [fp, #-4]
   25a0c:	ldr	r0, [r0]
   25a10:	ldr	r1, [sp, #8]
   25a14:	add	r0, r0, r1, lsl #3
   25a18:	ldr	r1, [r0, #4]
   25a1c:	orr	r1, r1, #262144	; 0x40000
   25a20:	str	r1, [r0, #4]
   25a24:	ldr	r0, [fp, #-8]
   25a28:	ldr	r1, [fp, #-4]
   25a2c:	ldr	r1, [r1, #16]
   25a30:	ldr	r2, [sp, #8]
   25a34:	add	r1, r1, r2, lsl #2
   25a38:	str	r0, [r1]
   25a3c:	ldr	r0, [sp, #8]
   25a40:	mov	sp, fp
   25a44:	pop	{fp, pc}
   25a48:	push	{fp, lr}
   25a4c:	mov	fp, sp
   25a50:	sub	sp, sp, #24
   25a54:	str	r0, [fp, #-8]
   25a58:	str	r1, [sp, #12]
   25a5c:	ldr	r0, [fp, #-8]
   25a60:	ldr	r0, [r0]
   25a64:	cmp	r0, #0
   25a68:	bne	25a90 <__assert_fail@plt+0x1433c>
   25a6c:	ldr	r0, [fp, #-8]
   25a70:	ldr	r1, [sp, #12]
   25a74:	bl	24b7c <__assert_fail@plt+0x13428>
   25a78:	cmp	r0, #0
   25a7c:	movw	r0, #0
   25a80:	moveq	r0, #1
   25a84:	and	r0, r0, #1
   25a88:	strb	r0, [fp, #-1]
   25a8c:	b	25c70 <__assert_fail@plt+0x1451c>
   25a90:	ldr	r0, [fp, #-8]
   25a94:	ldr	r0, [r0, #4]
   25a98:	cmp	r0, #0
   25a9c:	bne	25ae8 <__assert_fail@plt+0x14394>
   25aa0:	ldr	r0, [fp, #-8]
   25aa4:	ldr	r0, [r0, #8]
   25aa8:	movw	r1, #0
   25aac:	cmp	r0, r1
   25ab0:	beq	25ab8 <__assert_fail@plt+0x14364>
   25ab4:	b	25ab8 <__assert_fail@plt+0x14364>
   25ab8:	ldr	r0, [sp, #12]
   25abc:	ldr	r1, [fp, #-8]
   25ac0:	ldr	r1, [r1, #8]
   25ac4:	str	r0, [r1]
   25ac8:	ldr	r0, [fp, #-8]
   25acc:	ldr	r1, [r0, #4]
   25ad0:	add	r1, r1, #1
   25ad4:	str	r1, [r0, #4]
   25ad8:	movw	r0, #1
   25adc:	and	r0, r0, #1
   25ae0:	strb	r0, [fp, #-1]
   25ae4:	b	25c70 <__assert_fail@plt+0x1451c>
   25ae8:	ldr	r0, [fp, #-8]
   25aec:	ldr	r0, [r0]
   25af0:	ldr	r1, [fp, #-8]
   25af4:	ldr	r1, [r1, #4]
   25af8:	cmp	r0, r1
   25afc:	bne	25b54 <__assert_fail@plt+0x14400>
   25b00:	ldr	r0, [fp, #-8]
   25b04:	ldr	r1, [r0]
   25b08:	lsl	r1, r1, #1
   25b0c:	str	r1, [r0]
   25b10:	ldr	r0, [fp, #-8]
   25b14:	ldr	r1, [r0]
   25b18:	ldr	r0, [r0, #8]
   25b1c:	lsl	r1, r1, #2
   25b20:	bl	38aec <__assert_fail@plt+0x27398>
   25b24:	str	r0, [sp, #4]
   25b28:	ldr	r0, [sp, #4]
   25b2c:	movw	r1, #0
   25b30:	cmp	r0, r1
   25b34:	bne	25b48 <__assert_fail@plt+0x143f4>
   25b38:	movw	r0, #0
   25b3c:	and	r0, r0, #1
   25b40:	strb	r0, [fp, #-1]
   25b44:	b	25c70 <__assert_fail@plt+0x1451c>
   25b48:	ldr	r0, [sp, #4]
   25b4c:	ldr	r1, [fp, #-8]
   25b50:	str	r0, [r1, #8]
   25b54:	ldr	r0, [sp, #12]
   25b58:	ldr	r1, [fp, #-8]
   25b5c:	ldr	r1, [r1, #8]
   25b60:	ldr	r1, [r1]
   25b64:	cmp	r0, r1
   25b68:	bge	25bb4 <__assert_fail@plt+0x14460>
   25b6c:	ldr	r0, [fp, #-8]
   25b70:	ldr	r0, [r0, #4]
   25b74:	str	r0, [sp, #8]
   25b78:	ldr	r0, [sp, #8]
   25b7c:	cmp	r0, #0
   25b80:	ble	25bb0 <__assert_fail@plt+0x1445c>
   25b84:	ldr	r0, [fp, #-8]
   25b88:	ldr	r0, [r0, #8]
   25b8c:	ldr	r1, [sp, #8]
   25b90:	add	r0, r0, r1, lsl #2
   25b94:	ldr	r1, [r0, #-4]
   25b98:	str	r1, [r0]
   25b9c:	ldr	r0, [sp, #8]
   25ba0:	mvn	r1, #0
   25ba4:	add	r0, r0, r1
   25ba8:	str	r0, [sp, #8]
   25bac:	b	25b78 <__assert_fail@plt+0x14424>
   25bb0:	b	25c3c <__assert_fail@plt+0x144e8>
   25bb4:	ldr	r0, [fp, #-8]
   25bb8:	ldr	r0, [r0, #4]
   25bbc:	str	r0, [sp, #8]
   25bc0:	ldr	r0, [fp, #-8]
   25bc4:	ldr	r0, [r0, #8]
   25bc8:	ldr	r1, [sp, #8]
   25bcc:	sub	r1, r1, #1
   25bd0:	add	r0, r0, r1, lsl #2
   25bd4:	ldr	r0, [r0]
   25bd8:	ldr	r1, [sp, #12]
   25bdc:	cmp	r0, r1
   25be0:	ble	25c10 <__assert_fail@plt+0x144bc>
   25be4:	ldr	r0, [fp, #-8]
   25be8:	ldr	r0, [r0, #8]
   25bec:	ldr	r1, [sp, #8]
   25bf0:	add	r0, r0, r1, lsl #2
   25bf4:	ldr	r1, [r0, #-4]
   25bf8:	str	r1, [r0]
   25bfc:	ldr	r0, [sp, #8]
   25c00:	mvn	r1, #0
   25c04:	add	r0, r0, r1
   25c08:	str	r0, [sp, #8]
   25c0c:	b	25bc0 <__assert_fail@plt+0x1446c>
   25c10:	ldr	r0, [fp, #-8]
   25c14:	ldr	r0, [r0, #8]
   25c18:	ldr	r1, [sp, #8]
   25c1c:	sub	r1, r1, #1
   25c20:	add	r0, r0, r1, lsl #2
   25c24:	ldr	r0, [r0]
   25c28:	ldr	r1, [sp, #12]
   25c2c:	cmp	r0, r1
   25c30:	bge	25c38 <__assert_fail@plt+0x144e4>
   25c34:	b	25c38 <__assert_fail@plt+0x144e4>
   25c38:	b	25c3c <__assert_fail@plt+0x144e8>
   25c3c:	ldr	r0, [sp, #12]
   25c40:	ldr	r1, [fp, #-8]
   25c44:	ldr	r1, [r1, #8]
   25c48:	ldr	r2, [sp, #8]
   25c4c:	add	r1, r1, r2, lsl #2
   25c50:	str	r0, [r1]
   25c54:	ldr	r0, [fp, #-8]
   25c58:	ldr	r1, [r0, #4]
   25c5c:	add	r1, r1, #1
   25c60:	str	r1, [r0, #4]
   25c64:	movw	r0, #1
   25c68:	and	r0, r0, #1
   25c6c:	strb	r0, [fp, #-1]
   25c70:	ldrb	r0, [fp, #-1]
   25c74:	and	r0, r0, #1
   25c78:	mov	sp, fp
   25c7c:	pop	{fp, pc}
   25c80:	sub	sp, sp, #24
   25c84:	str	r0, [sp, #16]
   25c88:	str	r1, [sp, #12]
   25c8c:	str	r2, [sp, #8]
   25c90:	ldr	r0, [sp, #16]
   25c94:	ldr	r0, [r0, #8]
   25c98:	sub	r0, r0, #1
   25c9c:	str	r0, [sp, #4]
   25ca0:	ldr	r0, [sp, #16]
   25ca4:	ldr	r0, [r0]
   25ca8:	ldr	r1, [sp, #4]
   25cac:	add	r0, r0, r1, lsl #3
   25cb0:	ldr	r0, [r0, #4]
   25cb4:	lsr	r0, r0, #18
   25cb8:	and	r0, r0, #1
   25cbc:	cmp	r0, #0
   25cc0:	movw	r0, #0
   25cc4:	str	r0, [sp]
   25cc8:	beq	25ce0 <__assert_fail@plt+0x1458c>
   25ccc:	ldr	r0, [sp, #4]
   25cd0:	cmp	r0, #0
   25cd4:	movw	r0, #0
   25cd8:	movgt	r0, #1
   25cdc:	str	r0, [sp]
   25ce0:	ldr	r0, [sp]
   25ce4:	tst	r0, #1
   25ce8:	beq	25d5c <__assert_fail@plt+0x14608>
   25cec:	ldr	r0, [sp, #12]
   25cf0:	ldr	r1, [sp, #16]
   25cf4:	ldr	r1, [r1, #16]
   25cf8:	ldr	r2, [sp, #4]
   25cfc:	add	r1, r1, r2, lsl #2
   25d00:	ldr	r1, [r1]
   25d04:	cmp	r0, r1
   25d08:	bne	25d44 <__assert_fail@plt+0x145f0>
   25d0c:	ldr	r0, [sp, #8]
   25d10:	ldr	r1, [sp, #16]
   25d14:	ldr	r1, [r1]
   25d18:	ldr	r2, [sp, #4]
   25d1c:	add	r1, r1, r2, lsl #3
   25d20:	ldr	r1, [r1, #4]
   25d24:	lsr	r1, r1, #8
   25d28:	movw	r2, #1023	; 0x3ff
   25d2c:	and	r1, r1, r2
   25d30:	cmp	r0, r1
   25d34:	bne	25d44 <__assert_fail@plt+0x145f0>
   25d38:	ldr	r0, [sp, #4]
   25d3c:	str	r0, [sp, #20]
   25d40:	b	25d64 <__assert_fail@plt+0x14610>
   25d44:	b	25d48 <__assert_fail@plt+0x145f4>
   25d48:	ldr	r0, [sp, #4]
   25d4c:	mvn	r1, #0
   25d50:	add	r0, r0, r1
   25d54:	str	r0, [sp, #4]
   25d58:	b	25ca0 <__assert_fail@plt+0x1454c>
   25d5c:	mvn	r0, #0
   25d60:	str	r0, [sp, #20]
   25d64:	ldr	r0, [sp, #20]
   25d68:	add	sp, sp, #24
   25d6c:	bx	lr
   25d70:	push	{fp, lr}
   25d74:	mov	fp, sp
   25d78:	sub	sp, sp, #16
   25d7c:	str	r0, [sp, #8]
   25d80:	str	r1, [sp, #4]
   25d84:	ldr	r0, [sp, #8]
   25d88:	ldr	r0, [r0]
   25d8c:	ldr	r1, [sp, #8]
   25d90:	ldr	r1, [r1, #4]
   25d94:	cmp	r0, r1
   25d98:	bne	25df4 <__assert_fail@plt+0x146a0>
   25d9c:	ldr	r0, [sp, #8]
   25da0:	ldr	r1, [r0]
   25da4:	mov	r2, #2
   25da8:	add	r1, r2, r1, lsl #1
   25dac:	str	r1, [r0]
   25db0:	ldr	r0, [sp, #8]
   25db4:	ldr	r1, [r0]
   25db8:	ldr	r0, [r0, #8]
   25dbc:	lsl	r1, r1, #2
   25dc0:	bl	38aec <__assert_fail@plt+0x27398>
   25dc4:	str	r0, [sp]
   25dc8:	ldr	r0, [sp]
   25dcc:	movw	r1, #0
   25dd0:	cmp	r0, r1
   25dd4:	bne	25de8 <__assert_fail@plt+0x14694>
   25dd8:	movw	r0, #0
   25ddc:	and	r0, r0, #1
   25de0:	strb	r0, [fp, #-1]
   25de4:	b	25e20 <__assert_fail@plt+0x146cc>
   25de8:	ldr	r0, [sp]
   25dec:	ldr	r1, [sp, #8]
   25df0:	str	r0, [r1, #8]
   25df4:	ldr	r0, [sp, #4]
   25df8:	ldr	r1, [sp, #8]
   25dfc:	ldr	r2, [r1, #4]
   25e00:	ldr	r3, [r1, #8]
   25e04:	add	ip, r2, #1
   25e08:	str	ip, [r1, #4]
   25e0c:	add	r1, r3, r2, lsl #2
   25e10:	str	r0, [r1]
   25e14:	movw	r0, #1
   25e18:	and	r0, r0, #1
   25e1c:	strb	r0, [fp, #-1]
   25e20:	ldrb	r0, [fp, #-1]
   25e24:	and	r0, r0, #1
   25e28:	mov	sp, fp
   25e2c:	pop	{fp, pc}
   25e30:	push	{fp, lr}
   25e34:	mov	fp, sp
   25e38:	sub	sp, sp, #16
   25e3c:	str	r0, [sp, #8]
   25e40:	str	r1, [sp, #4]
   25e44:	ldr	r0, [sp, #4]
   25e48:	ldr	r0, [r0, #4]
   25e4c:	ldr	r1, [sp, #8]
   25e50:	str	r0, [r1, #4]
   25e54:	ldr	r0, [sp, #4]
   25e58:	ldr	r0, [r0, #4]
   25e5c:	cmp	r0, #0
   25e60:	ble	25edc <__assert_fail@plt+0x14788>
   25e64:	ldr	r0, [sp, #8]
   25e68:	ldr	r1, [r0, #4]
   25e6c:	str	r1, [r0]
   25e70:	ldr	r0, [sp, #8]
   25e74:	ldr	r0, [r0]
   25e78:	lsl	r0, r0, #2
   25e7c:	bl	38a7c <__assert_fail@plt+0x27328>
   25e80:	ldr	r1, [sp, #8]
   25e84:	str	r0, [r1, #8]
   25e88:	ldr	r0, [sp, #8]
   25e8c:	ldr	r0, [r0, #8]
   25e90:	movw	r1, #0
   25e94:	cmp	r0, r1
   25e98:	bne	25ebc <__assert_fail@plt+0x14768>
   25e9c:	ldr	r0, [sp, #8]
   25ea0:	movw	r1, #0
   25ea4:	str	r1, [r0, #4]
   25ea8:	ldr	r0, [sp, #8]
   25eac:	str	r1, [r0]
   25eb0:	movw	r0, #12
   25eb4:	str	r0, [fp, #-4]
   25eb8:	b	25ef8 <__assert_fail@plt+0x147a4>
   25ebc:	ldr	r0, [sp, #8]
   25ec0:	ldr	r0, [r0, #8]
   25ec4:	ldr	r1, [sp, #4]
   25ec8:	ldr	r2, [r1, #4]
   25ecc:	ldr	r1, [r1, #8]
   25ed0:	lsl	r2, r2, #2
   25ed4:	bl	11478 <memcpy@plt>
   25ed8:	b	25ef0 <__assert_fail@plt+0x1479c>
   25edc:	ldr	r0, [sp, #8]
   25ee0:	movw	r1, #0
   25ee4:	and	r1, r1, #255	; 0xff
   25ee8:	movw	r2, #12
   25eec:	bl	11658 <memset@plt>
   25ef0:	movw	r0, #0
   25ef4:	str	r0, [fp, #-4]
   25ef8:	ldr	r0, [fp, #-4]
   25efc:	mov	sp, fp
   25f00:	pop	{fp, pc}
   25f04:	sub	sp, sp, #28
   25f08:	str	r0, [sp, #20]
   25f0c:	str	r1, [sp, #16]
   25f10:	ldr	r0, [sp, #20]
   25f14:	ldr	r0, [r0, #4]
   25f18:	cmp	r0, #0
   25f1c:	bgt	25f2c <__assert_fail@plt+0x147d8>
   25f20:	movw	r0, #0
   25f24:	str	r0, [sp, #24]
   25f28:	b	25fe8 <__assert_fail@plt+0x14894>
   25f2c:	movw	r0, #0
   25f30:	str	r0, [sp, #12]
   25f34:	ldr	r0, [sp, #20]
   25f38:	ldr	r0, [r0, #4]
   25f3c:	sub	r0, r0, #1
   25f40:	str	r0, [sp, #8]
   25f44:	ldr	r0, [sp, #12]
   25f48:	ldr	r1, [sp, #8]
   25f4c:	cmp	r0, r1
   25f50:	bcs	25fa4 <__assert_fail@plt+0x14850>
   25f54:	ldr	r0, [sp, #12]
   25f58:	ldr	r1, [sp, #8]
   25f5c:	add	r0, r0, r1
   25f60:	lsr	r0, r0, #1
   25f64:	str	r0, [sp, #4]
   25f68:	ldr	r0, [sp, #20]
   25f6c:	ldr	r0, [r0, #8]
   25f70:	ldr	r1, [sp, #4]
   25f74:	add	r0, r0, r1, lsl #2
   25f78:	ldr	r0, [r0]
   25f7c:	ldr	r1, [sp, #16]
   25f80:	cmp	r0, r1
   25f84:	bge	25f98 <__assert_fail@plt+0x14844>
   25f88:	ldr	r0, [sp, #4]
   25f8c:	add	r0, r0, #1
   25f90:	str	r0, [sp, #12]
   25f94:	b	25fa0 <__assert_fail@plt+0x1484c>
   25f98:	ldr	r0, [sp, #4]
   25f9c:	str	r0, [sp, #8]
   25fa0:	b	25f44 <__assert_fail@plt+0x147f0>
   25fa4:	ldr	r0, [sp, #20]
   25fa8:	ldr	r0, [r0, #8]
   25fac:	ldr	r1, [sp, #12]
   25fb0:	add	r0, r0, r1, lsl #2
   25fb4:	ldr	r0, [r0]
   25fb8:	ldr	r1, [sp, #16]
   25fbc:	cmp	r0, r1
   25fc0:	bne	25fd4 <__assert_fail@plt+0x14880>
   25fc4:	ldr	r0, [sp, #12]
   25fc8:	add	r0, r0, #1
   25fcc:	str	r0, [sp]
   25fd0:	b	25fe0 <__assert_fail@plt+0x1488c>
   25fd4:	movw	r0, #0
   25fd8:	str	r0, [sp]
   25fdc:	b	25fe0 <__assert_fail@plt+0x1488c>
   25fe0:	ldr	r0, [sp]
   25fe4:	str	r0, [sp, #24]
   25fe8:	ldr	r0, [sp, #24]
   25fec:	add	sp, sp, #28
   25ff0:	bx	lr
   25ff4:	push	{fp, lr}
   25ff8:	mov	fp, sp
   25ffc:	sub	sp, sp, #40	; 0x28
   26000:	str	r0, [fp, #-8]
   26004:	str	r1, [fp, #-12]
   26008:	str	r2, [fp, #-16]
   2600c:	str	r3, [sp, #20]
   26010:	ldr	r0, [fp, #-16]
   26014:	ldr	r0, [r0, #4]
   26018:	cmp	r0, #0
   2601c:	bne	26034 <__assert_fail@plt+0x148e0>
   26020:	ldr	r0, [fp, #-8]
   26024:	movw	r1, #0
   26028:	str	r1, [r0]
   2602c:	str	r1, [fp, #-4]
   26030:	b	26144 <__assert_fail@plt+0x149f0>
   26034:	ldr	r0, [fp, #-16]
   26038:	ldr	r1, [sp, #20]
   2603c:	bl	26150 <__assert_fail@plt+0x149fc>
   26040:	str	r0, [sp, #16]
   26044:	ldr	r0, [fp, #-12]
   26048:	ldr	r0, [r0, #32]
   2604c:	ldr	r1, [sp, #16]
   26050:	ldr	lr, [fp, #-12]
   26054:	ldr	lr, [lr, #68]	; 0x44
   26058:	and	r1, r1, lr
   2605c:	movw	lr, #12
   26060:	mul	r1, r1, lr
   26064:	add	r0, r0, r1
   26068:	str	r0, [sp, #8]
   2606c:	movw	r0, #0
   26070:	str	r0, [sp, #4]
   26074:	ldr	r0, [sp, #4]
   26078:	ldr	r1, [sp, #8]
   2607c:	ldr	r1, [r1]
   26080:	cmp	r0, r1
   26084:	bge	26108 <__assert_fail@plt+0x149b4>
   26088:	ldr	r0, [sp, #8]
   2608c:	ldr	r0, [r0, #8]
   26090:	ldr	r1, [sp, #4]
   26094:	add	r0, r0, r1, lsl #2
   26098:	ldr	r0, [r0]
   2609c:	str	r0, [sp]
   260a0:	ldr	r0, [sp]
   260a4:	ldr	r0, [r0]
   260a8:	ldr	r1, [sp, #16]
   260ac:	cmp	r0, r1
   260b0:	bne	260f4 <__assert_fail@plt+0x149a0>
   260b4:	ldr	r0, [sp]
   260b8:	ldrb	r0, [r0, #52]	; 0x34
   260bc:	and	r0, r0, #15
   260c0:	and	r0, r0, #255	; 0xff
   260c4:	ldr	r1, [sp, #20]
   260c8:	cmp	r0, r1
   260cc:	bne	260f4 <__assert_fail@plt+0x149a0>
   260d0:	ldr	r0, [sp]
   260d4:	ldr	r0, [r0, #40]	; 0x28
   260d8:	ldr	r1, [fp, #-16]
   260dc:	bl	261c8 <__assert_fail@plt+0x14a74>
   260e0:	tst	r0, #1
   260e4:	beq	260f4 <__assert_fail@plt+0x149a0>
   260e8:	ldr	r0, [sp]
   260ec:	str	r0, [fp, #-4]
   260f0:	b	26144 <__assert_fail@plt+0x149f0>
   260f4:	b	260f8 <__assert_fail@plt+0x149a4>
   260f8:	ldr	r0, [sp, #4]
   260fc:	add	r0, r0, #1
   26100:	str	r0, [sp, #4]
   26104:	b	26074 <__assert_fail@plt+0x14920>
   26108:	ldr	r0, [fp, #-12]
   2610c:	ldr	r1, [fp, #-16]
   26110:	ldr	r2, [sp, #20]
   26114:	ldr	r3, [sp, #16]
   26118:	bl	26298 <__assert_fail@plt+0x14b44>
   2611c:	str	r0, [sp, #12]
   26120:	ldr	r0, [sp, #12]
   26124:	movw	r1, #0
   26128:	cmp	r0, r1
   2612c:	bne	2613c <__assert_fail@plt+0x149e8>
   26130:	ldr	r0, [fp, #-8]
   26134:	movw	r1, #12
   26138:	str	r1, [r0]
   2613c:	ldr	r0, [sp, #12]
   26140:	str	r0, [fp, #-4]
   26144:	ldr	r0, [fp, #-4]
   26148:	mov	sp, fp
   2614c:	pop	{fp, pc}
   26150:	sub	sp, sp, #16
   26154:	str	r0, [sp, #12]
   26158:	str	r1, [sp, #8]
   2615c:	ldr	r0, [sp, #12]
   26160:	ldr	r0, [r0, #4]
   26164:	ldr	r1, [sp, #8]
   26168:	add	r0, r0, r1
   2616c:	str	r0, [sp, #4]
   26170:	movw	r0, #0
   26174:	str	r0, [sp]
   26178:	ldr	r0, [sp]
   2617c:	ldr	r1, [sp, #12]
   26180:	ldr	r1, [r1, #4]
   26184:	cmp	r0, r1
   26188:	bge	261bc <__assert_fail@plt+0x14a68>
   2618c:	ldr	r0, [sp, #12]
   26190:	ldr	r0, [r0, #8]
   26194:	ldr	r1, [sp]
   26198:	add	r0, r0, r1, lsl #2
   2619c:	ldr	r0, [r0]
   261a0:	ldr	r1, [sp, #4]
   261a4:	add	r0, r1, r0
   261a8:	str	r0, [sp, #4]
   261ac:	ldr	r0, [sp]
   261b0:	add	r0, r0, #1
   261b4:	str	r0, [sp]
   261b8:	b	26178 <__assert_fail@plt+0x14a24>
   261bc:	ldr	r0, [sp, #4]
   261c0:	add	sp, sp, #16
   261c4:	bx	lr
   261c8:	sub	sp, sp, #16
   261cc:	str	r0, [sp, #8]
   261d0:	str	r1, [sp, #4]
   261d4:	ldr	r0, [sp, #8]
   261d8:	movw	r1, #0
   261dc:	cmp	r0, r1
   261e0:	beq	2620c <__assert_fail@plt+0x14ab8>
   261e4:	ldr	r0, [sp, #4]
   261e8:	movw	r1, #0
   261ec:	cmp	r0, r1
   261f0:	beq	2620c <__assert_fail@plt+0x14ab8>
   261f4:	ldr	r0, [sp, #8]
   261f8:	ldr	r0, [r0, #4]
   261fc:	ldr	r1, [sp, #4]
   26200:	ldr	r1, [r1, #4]
   26204:	cmp	r0, r1
   26208:	beq	2621c <__assert_fail@plt+0x14ac8>
   2620c:	movw	r0, #0
   26210:	and	r0, r0, #1
   26214:	strb	r0, [sp, #15]
   26218:	b	26288 <__assert_fail@plt+0x14b34>
   2621c:	ldr	r0, [sp, #8]
   26220:	ldr	r0, [r0, #4]
   26224:	str	r0, [sp]
   26228:	ldr	r0, [sp]
   2622c:	mvn	r1, #0
   26230:	add	r0, r0, r1
   26234:	str	r0, [sp]
   26238:	cmp	r0, #0
   2623c:	blt	2627c <__assert_fail@plt+0x14b28>
   26240:	ldr	r0, [sp, #8]
   26244:	ldr	r0, [r0, #8]
   26248:	ldr	r1, [sp]
   2624c:	ldr	r0, [r0, r1, lsl #2]
   26250:	ldr	r2, [sp, #4]
   26254:	ldr	r2, [r2, #8]
   26258:	add	r1, r2, r1, lsl #2
   2625c:	ldr	r1, [r1]
   26260:	cmp	r0, r1
   26264:	beq	26278 <__assert_fail@plt+0x14b24>
   26268:	movw	r0, #0
   2626c:	and	r0, r0, #1
   26270:	strb	r0, [sp, #15]
   26274:	b	26288 <__assert_fail@plt+0x14b34>
   26278:	b	26228 <__assert_fail@plt+0x14ad4>
   2627c:	movw	r0, #1
   26280:	and	r0, r0, #1
   26284:	strb	r0, [sp, #15]
   26288:	ldrb	r0, [sp, #15]
   2628c:	and	r0, r0, #1
   26290:	add	sp, sp, #16
   26294:	bx	lr
   26298:	push	{fp, lr}
   2629c:	mov	fp, sp
   262a0:	sub	sp, sp, #56	; 0x38
   262a4:	str	r0, [fp, #-8]
   262a8:	str	r1, [fp, #-12]
   262ac:	str	r2, [fp, #-16]
   262b0:	str	r3, [fp, #-20]	; 0xffffffec
   262b4:	movw	r0, #0
   262b8:	str	r0, [sp, #28]
   262bc:	movw	r0, #56	; 0x38
   262c0:	movw	r1, #1
   262c4:	bl	389e0 <__assert_fail@plt+0x2728c>
   262c8:	str	r0, [sp, #20]
   262cc:	ldr	r0, [sp, #20]
   262d0:	movw	r1, #0
   262d4:	cmp	r0, r1
   262d8:	bne	262e8 <__assert_fail@plt+0x14b94>
   262dc:	movw	r0, #0
   262e0:	str	r0, [fp, #-4]
   262e4:	b	265e4 <__assert_fail@plt+0x14e90>
   262e8:	ldr	r0, [sp, #20]
   262ec:	add	r0, r0, #4
   262f0:	ldr	r1, [fp, #-12]
   262f4:	bl	25e30 <__assert_fail@plt+0x146dc>
   262f8:	str	r0, [sp, #24]
   262fc:	ldr	r0, [sp, #24]
   26300:	cmp	r0, #0
   26304:	beq	2631c <__assert_fail@plt+0x14bc8>
   26308:	ldr	r0, [sp, #20]
   2630c:	bl	1604c <__assert_fail@plt+0x48f8>
   26310:	movw	r0, #0
   26314:	str	r0, [fp, #-4]
   26318:	b	265e4 <__assert_fail@plt+0x14e90>
   2631c:	ldr	r0, [fp, #-16]
   26320:	ldr	r1, [sp, #20]
   26324:	ldrb	r2, [r1, #52]	; 0x34
   26328:	and	r0, r0, #15
   2632c:	bic	r2, r2, #15
   26330:	orr	r0, r2, r0
   26334:	strb	r0, [r1, #52]	; 0x34
   26338:	ldr	r0, [sp, #20]
   2633c:	add	r0, r0, #4
   26340:	ldr	r1, [sp, #20]
   26344:	str	r0, [r1, #40]	; 0x28
   26348:	movw	r0, #0
   2634c:	str	r0, [fp, #-24]	; 0xffffffe8
   26350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26354:	ldr	r1, [fp, #-12]
   26358:	ldr	r1, [r1, #4]
   2635c:	cmp	r0, r1
   26360:	bge	265ac <__assert_fail@plt+0x14e58>
   26364:	ldr	r0, [fp, #-8]
   26368:	ldr	r0, [r0]
   2636c:	ldr	r1, [fp, #-12]
   26370:	ldr	r1, [r1, #8]
   26374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26378:	ldr	r1, [r1, r2, lsl #2]
   2637c:	add	r0, r0, r1, lsl #3
   26380:	str	r0, [sp, #16]
   26384:	ldr	r0, [sp, #16]
   26388:	ldr	r0, [r0, #4]
   2638c:	and	r0, r0, #255	; 0xff
   26390:	str	r0, [sp, #12]
   26394:	ldr	r0, [sp, #16]
   26398:	ldr	r0, [r0, #4]
   2639c:	lsr	r0, r0, #8
   263a0:	movw	r1, #1023	; 0x3ff
   263a4:	and	r0, r0, r1
   263a8:	str	r0, [sp, #8]
   263ac:	ldr	r0, [sp, #12]
   263b0:	cmp	r0, #1
   263b4:	bne	263c8 <__assert_fail@plt+0x14c74>
   263b8:	ldr	r0, [sp, #8]
   263bc:	cmp	r0, #0
   263c0:	bne	263c8 <__assert_fail@plt+0x14c74>
   263c4:	b	2659c <__assert_fail@plt+0x14e48>
   263c8:	ldr	r0, [sp, #16]
   263cc:	ldr	r0, [r0, #4]
   263d0:	ldr	r1, [sp, #20]
   263d4:	ldrb	r2, [r1, #52]	; 0x34
   263d8:	lsr	r3, r2, #5
   263dc:	orr	r0, r3, r0, lsr #20
   263e0:	and	r0, r0, #1
   263e4:	lsl	r0, r0, #5
   263e8:	bic	r2, r2, #32
   263ec:	orr	r0, r2, r0
   263f0:	strb	r0, [r1, #52]	; 0x34
   263f4:	ldr	r0, [sp, #12]
   263f8:	cmp	r0, #2
   263fc:	bne	2641c <__assert_fail@plt+0x14cc8>
   26400:	ldr	r0, [sp, #20]
   26404:	ldrb	r1, [r0, #52]	; 0x34
   26408:	bic	r1, r1, #16
   2640c:	movw	r2, #16
   26410:	orr	r1, r1, r2
   26414:	strb	r1, [r0, #52]	; 0x34
   26418:	b	26444 <__assert_fail@plt+0x14cf0>
   2641c:	ldr	r0, [sp, #12]
   26420:	cmp	r0, #4
   26424:	bne	26440 <__assert_fail@plt+0x14cec>
   26428:	ldr	r0, [sp, #20]
   2642c:	ldrb	r1, [r0, #52]	; 0x34
   26430:	bic	r1, r1, #64	; 0x40
   26434:	movw	r2, #64	; 0x40
   26438:	orr	r1, r1, r2
   2643c:	strb	r1, [r0, #52]	; 0x34
   26440:	b	26444 <__assert_fail@plt+0x14cf0>
   26444:	ldr	r0, [sp, #8]
   26448:	cmp	r0, #0
   2644c:	beq	26598 <__assert_fail@plt+0x14e44>
   26450:	ldr	r0, [sp, #20]
   26454:	ldr	r0, [r0, #40]	; 0x28
   26458:	ldr	r1, [sp, #20]
   2645c:	add	r1, r1, #4
   26460:	cmp	r0, r1
   26464:	bne	264f0 <__assert_fail@plt+0x14d9c>
   26468:	movw	r0, #12
   2646c:	bl	38a7c <__assert_fail@plt+0x27328>
   26470:	str	r0, [sp, #4]
   26474:	ldr	r0, [sp, #4]
   26478:	movw	lr, #0
   2647c:	cmp	r0, lr
   26480:	bne	26498 <__assert_fail@plt+0x14d44>
   26484:	ldr	r0, [sp, #20]
   26488:	bl	1b850 <__assert_fail@plt+0xa0fc>
   2648c:	movw	r0, #0
   26490:	str	r0, [fp, #-4]
   26494:	b	265e4 <__assert_fail@plt+0x14e90>
   26498:	ldr	r0, [sp, #4]
   2649c:	ldr	r1, [sp, #20]
   264a0:	str	r0, [r1, #40]	; 0x28
   264a4:	ldr	r0, [sp, #20]
   264a8:	ldr	r0, [r0, #40]	; 0x28
   264ac:	ldr	r1, [fp, #-12]
   264b0:	bl	25e30 <__assert_fail@plt+0x146dc>
   264b4:	cmp	r0, #0
   264b8:	beq	264d0 <__assert_fail@plt+0x14d7c>
   264bc:	ldr	r0, [sp, #20]
   264c0:	bl	1b850 <__assert_fail@plt+0xa0fc>
   264c4:	movw	r0, #0
   264c8:	str	r0, [fp, #-4]
   264cc:	b	265e4 <__assert_fail@plt+0x14e90>
   264d0:	mov	r0, #0
   264d4:	str	r0, [sp, #28]
   264d8:	ldr	r0, [sp, #20]
   264dc:	ldrb	r1, [r0, #52]	; 0x34
   264e0:	and	r1, r1, #127	; 0x7f
   264e4:	movw	r2, #128	; 0x80
   264e8:	orr	r1, r1, r2
   264ec:	strb	r1, [r0, #52]	; 0x34
   264f0:	ldr	r0, [sp, #8]
   264f4:	and	r0, r0, #1
   264f8:	cmp	r0, #0
   264fc:	beq	26510 <__assert_fail@plt+0x14dbc>
   26500:	ldr	r0, [fp, #-16]
   26504:	and	r0, r0, #1
   26508:	cmp	r0, #0
   2650c:	beq	26570 <__assert_fail@plt+0x14e1c>
   26510:	ldr	r0, [sp, #8]
   26514:	and	r0, r0, #2
   26518:	cmp	r0, #0
   2651c:	beq	26530 <__assert_fail@plt+0x14ddc>
   26520:	ldr	r0, [fp, #-16]
   26524:	and	r0, r0, #1
   26528:	cmp	r0, #0
   2652c:	bne	26570 <__assert_fail@plt+0x14e1c>
   26530:	ldr	r0, [sp, #8]
   26534:	and	r0, r0, #16
   26538:	cmp	r0, #0
   2653c:	beq	26550 <__assert_fail@plt+0x14dfc>
   26540:	ldr	r0, [fp, #-16]
   26544:	and	r0, r0, #2
   26548:	cmp	r0, #0
   2654c:	beq	26570 <__assert_fail@plt+0x14e1c>
   26550:	ldr	r0, [sp, #8]
   26554:	and	r0, r0, #64	; 0x40
   26558:	cmp	r0, #0
   2655c:	beq	26594 <__assert_fail@plt+0x14e40>
   26560:	ldr	r0, [fp, #-16]
   26564:	and	r0, r0, #4
   26568:	cmp	r0, #0
   2656c:	bne	26594 <__assert_fail@plt+0x14e40>
   26570:	ldr	r0, [sp, #20]
   26574:	add	r0, r0, #4
   26578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2657c:	ldr	r2, [sp, #28]
   26580:	sub	r1, r1, r2
   26584:	bl	265f0 <__assert_fail@plt+0x14e9c>
   26588:	ldr	r0, [sp, #28]
   2658c:	add	r0, r0, #1
   26590:	str	r0, [sp, #28]
   26594:	b	26598 <__assert_fail@plt+0x14e44>
   26598:	b	2659c <__assert_fail@plt+0x14e48>
   2659c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   265a0:	add	r0, r0, #1
   265a4:	str	r0, [fp, #-24]	; 0xffffffe8
   265a8:	b	26350 <__assert_fail@plt+0x14bfc>
   265ac:	ldr	r0, [fp, #-8]
   265b0:	ldr	r1, [sp, #20]
   265b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   265b8:	bl	26678 <__assert_fail@plt+0x14f24>
   265bc:	str	r0, [sp, #24]
   265c0:	ldr	r0, [sp, #24]
   265c4:	cmp	r0, #0
   265c8:	beq	265dc <__assert_fail@plt+0x14e88>
   265cc:	ldr	r0, [sp, #20]
   265d0:	bl	1b850 <__assert_fail@plt+0xa0fc>
   265d4:	movw	r0, #0
   265d8:	str	r0, [sp, #20]
   265dc:	ldr	r0, [sp, #20]
   265e0:	str	r0, [fp, #-4]
   265e4:	ldr	r0, [fp, #-4]
   265e8:	mov	sp, fp
   265ec:	pop	{fp, pc}
   265f0:	sub	sp, sp, #8
   265f4:	str	r0, [sp, #4]
   265f8:	str	r1, [sp]
   265fc:	ldr	r0, [sp]
   26600:	cmp	r0, #0
   26604:	blt	2661c <__assert_fail@plt+0x14ec8>
   26608:	ldr	r0, [sp]
   2660c:	ldr	r1, [sp, #4]
   26610:	ldr	r1, [r1, #4]
   26614:	cmp	r0, r1
   26618:	blt	26620 <__assert_fail@plt+0x14ecc>
   2661c:	b	26670 <__assert_fail@plt+0x14f1c>
   26620:	ldr	r0, [sp, #4]
   26624:	ldr	r1, [r0, #4]
   26628:	mvn	r2, #0
   2662c:	add	r1, r1, r2
   26630:	str	r1, [r0, #4]
   26634:	ldr	r0, [sp]
   26638:	ldr	r1, [sp, #4]
   2663c:	ldr	r1, [r1, #4]
   26640:	cmp	r0, r1
   26644:	bge	26670 <__assert_fail@plt+0x14f1c>
   26648:	ldr	r0, [sp, #4]
   2664c:	ldr	r0, [r0, #8]
   26650:	ldr	r1, [sp]
   26654:	add	r0, r0, r1, lsl #2
   26658:	ldr	r1, [r0, #4]
   2665c:	str	r1, [r0]
   26660:	ldr	r0, [sp]
   26664:	add	r0, r0, #1
   26668:	str	r0, [sp]
   2666c:	b	26634 <__assert_fail@plt+0x14ee0>
   26670:	add	sp, sp, #8
   26674:	bx	lr
   26678:	push	{fp, lr}
   2667c:	mov	fp, sp
   26680:	sub	sp, sp, #40	; 0x28
   26684:	str	r0, [fp, #-8]
   26688:	str	r1, [fp, #-12]
   2668c:	str	r2, [fp, #-16]
   26690:	ldr	r0, [fp, #-16]
   26694:	ldr	r1, [fp, #-12]
   26698:	str	r0, [r1]
   2669c:	ldr	r0, [fp, #-12]
   266a0:	add	r0, r0, #16
   266a4:	ldr	r1, [fp, #-12]
   266a8:	ldr	r1, [r1, #8]
   266ac:	bl	24fe0 <__assert_fail@plt+0x1388c>
   266b0:	str	r0, [sp, #16]
   266b4:	ldr	r0, [sp, #16]
   266b8:	cmp	r0, #0
   266bc:	beq	266cc <__assert_fail@plt+0x14f78>
   266c0:	movw	r0, #12
   266c4:	str	r0, [fp, #-4]
   266c8:	b	26824 <__assert_fail@plt+0x150d0>
   266cc:	movw	r0, #0
   266d0:	str	r0, [sp, #12]
   266d4:	ldr	r0, [sp, #12]
   266d8:	ldr	r1, [fp, #-12]
   266dc:	ldr	r1, [r1, #8]
   266e0:	cmp	r0, r1
   266e4:	bge	2675c <__assert_fail@plt+0x15008>
   266e8:	ldr	r0, [fp, #-12]
   266ec:	ldr	r0, [r0, #12]
   266f0:	ldr	r1, [sp, #12]
   266f4:	ldr	r0, [r0, r1, lsl #2]
   266f8:	str	r0, [sp, #8]
   266fc:	ldr	r0, [fp, #-8]
   26700:	ldr	r0, [r0]
   26704:	ldr	r1, [sp, #8]
   26708:	add	r0, r0, r1, lsl #3
   2670c:	ldr	r0, [r0, #4]
   26710:	and	r0, r0, #255	; 0xff
   26714:	and	r0, r0, #8
   26718:	cmp	r0, #0
   2671c:	bne	26748 <__assert_fail@plt+0x14ff4>
   26720:	ldr	r0, [fp, #-12]
   26724:	add	r0, r0, #16
   26728:	ldr	r1, [sp, #8]
   2672c:	bl	25d70 <__assert_fail@plt+0x1461c>
   26730:	tst	r0, #1
   26734:	bne	26744 <__assert_fail@plt+0x14ff0>
   26738:	movw	r0, #12
   2673c:	str	r0, [fp, #-4]
   26740:	b	26824 <__assert_fail@plt+0x150d0>
   26744:	b	26748 <__assert_fail@plt+0x14ff4>
   26748:	b	2674c <__assert_fail@plt+0x14ff8>
   2674c:	ldr	r0, [sp, #12]
   26750:	add	r0, r0, #1
   26754:	str	r0, [sp, #12]
   26758:	b	266d4 <__assert_fail@plt+0x14f80>
   2675c:	ldr	r0, [fp, #-8]
   26760:	ldr	r0, [r0, #32]
   26764:	ldr	r1, [fp, #-16]
   26768:	ldr	r2, [fp, #-8]
   2676c:	ldr	r2, [r2, #68]	; 0x44
   26770:	and	r1, r1, r2
   26774:	movw	r2, #12
   26778:	mul	r1, r1, r2
   2677c:	add	r0, r0, r1
   26780:	str	r0, [sp, #20]
   26784:	ldr	r0, [sp, #20]
   26788:	ldr	r0, [r0, #4]
   2678c:	ldr	r1, [sp, #20]
   26790:	ldr	r1, [r1]
   26794:	cmp	r0, r1
   26798:	bgt	267fc <__assert_fail@plt+0x150a8>
   2679c:	ldr	r0, [sp, #20]
   267a0:	ldr	r0, [r0]
   267a4:	mov	r1, #2
   267a8:	add	r0, r1, r0, lsl #1
   267ac:	str	r0, [sp, #4]
   267b0:	ldr	r0, [sp, #20]
   267b4:	ldr	r0, [r0, #8]
   267b8:	ldr	r1, [sp, #4]
   267bc:	lsl	r1, r1, #2
   267c0:	bl	38aec <__assert_fail@plt+0x27398>
   267c4:	str	r0, [sp]
   267c8:	ldr	r0, [sp]
   267cc:	movw	r1, #0
   267d0:	cmp	r0, r1
   267d4:	bne	267e4 <__assert_fail@plt+0x15090>
   267d8:	movw	r0, #12
   267dc:	str	r0, [fp, #-4]
   267e0:	b	26824 <__assert_fail@plt+0x150d0>
   267e4:	ldr	r0, [sp]
   267e8:	ldr	r1, [sp, #20]
   267ec:	str	r0, [r1, #8]
   267f0:	ldr	r0, [sp, #4]
   267f4:	ldr	r1, [sp, #20]
   267f8:	str	r0, [r1, #4]
   267fc:	ldr	r0, [fp, #-12]
   26800:	ldr	r1, [sp, #20]
   26804:	ldr	r2, [r1]
   26808:	ldr	r3, [r1, #8]
   2680c:	add	ip, r2, #1
   26810:	str	ip, [r1]
   26814:	add	r1, r3, r2, lsl #2
   26818:	str	r0, [r1]
   2681c:	movw	r0, #0
   26820:	str	r0, [fp, #-4]
   26824:	ldr	r0, [fp, #-4]
   26828:	mov	sp, fp
   2682c:	pop	{fp, pc}
   26830:	push	{fp, lr}
   26834:	mov	fp, sp
   26838:	sub	sp, sp, #40	; 0x28
   2683c:	str	r0, [fp, #-8]
   26840:	str	r1, [fp, #-12]
   26844:	str	r2, [fp, #-16]
   26848:	str	r3, [sp, #20]
   2684c:	movw	r0, #1
   26850:	str	r0, [sp, #16]
   26854:	ldr	r0, [fp, #-16]
   26858:	add	r0, r0, #1
   2685c:	str	r0, [sp, #8]
   26860:	ldr	r0, [sp, #20]
   26864:	cmp	r0, #0
   26868:	bne	268f0 <__assert_fail@plt+0x1519c>
   2686c:	ldr	r0, [sp, #8]
   26870:	lsl	r0, r0, #2
   26874:	bl	38a7c <__assert_fail@plt+0x27328>
   26878:	ldr	lr, [fp, #-8]
   2687c:	str	r0, [lr, #4]
   26880:	ldr	r0, [fp, #-8]
   26884:	ldr	r0, [r0, #4]
   26888:	movw	lr, #0
   2688c:	cmp	r0, lr
   26890:	bne	268a0 <__assert_fail@plt+0x1514c>
   26894:	movw	r0, #0
   26898:	str	r0, [fp, #-4]
   2689c:	b	26a98 <__assert_fail@plt+0x15344>
   268a0:	ldr	r0, [sp, #8]
   268a4:	lsl	r0, r0, #2
   268a8:	bl	38a7c <__assert_fail@plt+0x27328>
   268ac:	ldr	lr, [fp, #-8]
   268b0:	str	r0, [lr, #8]
   268b4:	ldr	r0, [fp, #-8]
   268b8:	ldr	r0, [r0, #8]
   268bc:	movw	lr, #0
   268c0:	cmp	r0, lr
   268c4:	bne	268e0 <__assert_fail@plt+0x1518c>
   268c8:	ldr	r0, [fp, #-8]
   268cc:	ldr	r0, [r0, #4]
   268d0:	bl	1604c <__assert_fail@plt+0x48f8>
   268d4:	movw	r0, #0
   268d8:	str	r0, [fp, #-4]
   268dc:	b	26a98 <__assert_fail@plt+0x15344>
   268e0:	ldr	r0, [sp, #8]
   268e4:	ldr	r1, [fp, #-8]
   268e8:	str	r0, [r1]
   268ec:	b	269dc <__assert_fail@plt+0x15288>
   268f0:	ldr	r0, [sp, #20]
   268f4:	cmp	r0, #1
   268f8:	bne	269a8 <__assert_fail@plt+0x15254>
   268fc:	ldr	r0, [sp, #8]
   26900:	ldr	r1, [fp, #-8]
   26904:	ldr	r1, [r1]
   26908:	cmp	r0, r1
   2690c:	bls	269a4 <__assert_fail@plt+0x15250>
   26910:	ldr	r0, [fp, #-8]
   26914:	ldr	r0, [r0, #4]
   26918:	ldr	r1, [sp, #8]
   2691c:	lsl	r1, r1, #2
   26920:	bl	38aec <__assert_fail@plt+0x27398>
   26924:	str	r0, [sp, #4]
   26928:	ldr	r0, [sp, #4]
   2692c:	movw	r1, #0
   26930:	cmp	r0, r1
   26934:	bne	26944 <__assert_fail@plt+0x151f0>
   26938:	movw	r0, #0
   2693c:	str	r0, [fp, #-4]
   26940:	b	26a98 <__assert_fail@plt+0x15344>
   26944:	ldr	r0, [fp, #-8]
   26948:	ldr	r0, [r0, #8]
   2694c:	ldr	r1, [sp, #8]
   26950:	lsl	r1, r1, #2
   26954:	bl	38aec <__assert_fail@plt+0x27398>
   26958:	str	r0, [sp]
   2695c:	ldr	r0, [sp]
   26960:	movw	r1, #0
   26964:	cmp	r0, r1
   26968:	bne	26980 <__assert_fail@plt+0x1522c>
   2696c:	ldr	r0, [sp, #4]
   26970:	bl	1604c <__assert_fail@plt+0x48f8>
   26974:	movw	r0, #0
   26978:	str	r0, [fp, #-4]
   2697c:	b	26a98 <__assert_fail@plt+0x15344>
   26980:	ldr	r0, [sp, #4]
   26984:	ldr	r1, [fp, #-8]
   26988:	str	r0, [r1, #4]
   2698c:	ldr	r0, [sp]
   26990:	ldr	r1, [fp, #-8]
   26994:	str	r0, [r1, #8]
   26998:	ldr	r0, [sp, #8]
   2699c:	ldr	r1, [fp, #-8]
   269a0:	str	r0, [r1]
   269a4:	b	269d8 <__assert_fail@plt+0x15284>
   269a8:	ldr	r0, [sp, #20]
   269ac:	cmp	r0, #2
   269b0:	bne	269b8 <__assert_fail@plt+0x15264>
   269b4:	b	269b8 <__assert_fail@plt+0x15264>
   269b8:	ldr	r0, [fp, #-16]
   269bc:	ldr	r1, [fp, #-8]
   269c0:	ldr	r1, [r1]
   269c4:	cmp	r0, r1
   269c8:	bhi	269d0 <__assert_fail@plt+0x1527c>
   269cc:	b	269d0 <__assert_fail@plt+0x1527c>
   269d0:	movw	r0, #2
   269d4:	str	r0, [sp, #16]
   269d8:	b	269dc <__assert_fail@plt+0x15288>
   269dc:	movw	r0, #0
   269e0:	str	r0, [sp, #12]
   269e4:	ldr	r0, [sp, #12]
   269e8:	ldr	r1, [fp, #-16]
   269ec:	cmp	r0, r1
   269f0:	bge	26a3c <__assert_fail@plt+0x152e8>
   269f4:	ldr	r0, [fp, #-12]
   269f8:	ldr	r1, [sp, #12]
   269fc:	ldr	r0, [r0, r1, lsl #3]
   26a00:	ldr	r2, [fp, #-8]
   26a04:	ldr	r2, [r2, #4]
   26a08:	str	r0, [r2, r1, lsl #2]
   26a0c:	ldr	r0, [fp, #-12]
   26a10:	ldr	r1, [sp, #12]
   26a14:	add	r0, r0, r1, lsl #3
   26a18:	ldr	r0, [r0, #4]
   26a1c:	ldr	r2, [fp, #-8]
   26a20:	ldr	r2, [r2, #8]
   26a24:	add	r1, r2, r1, lsl #2
   26a28:	str	r0, [r1]
   26a2c:	ldr	r0, [sp, #12]
   26a30:	add	r0, r0, #1
   26a34:	str	r0, [sp, #12]
   26a38:	b	269e4 <__assert_fail@plt+0x15290>
   26a3c:	b	26a40 <__assert_fail@plt+0x152ec>
   26a40:	ldr	r0, [sp, #12]
   26a44:	ldr	r1, [fp, #-8]
   26a48:	ldr	r1, [r1]
   26a4c:	cmp	r0, r1
   26a50:	bcs	26a90 <__assert_fail@plt+0x1533c>
   26a54:	ldr	r0, [fp, #-8]
   26a58:	ldr	r0, [r0, #8]
   26a5c:	ldr	r1, [sp, #12]
   26a60:	mvn	r2, #0
   26a64:	str	r2, [r0, r1, lsl #2]
   26a68:	ldr	r0, [fp, #-8]
   26a6c:	ldr	r0, [r0, #4]
   26a70:	ldr	r1, [sp, #12]
   26a74:	add	r0, r0, r1, lsl #2
   26a78:	mvn	r1, #0
   26a7c:	str	r1, [r0]
   26a80:	ldr	r0, [sp, #12]
   26a84:	add	r0, r0, #1
   26a88:	str	r0, [sp, #12]
   26a8c:	b	26a40 <__assert_fail@plt+0x152ec>
   26a90:	ldr	r0, [sp, #16]
   26a94:	str	r0, [fp, #-4]
   26a98:	ldr	r0, [fp, #-4]
   26a9c:	mov	sp, fp
   26aa0:	pop	{fp, pc}
   26aa4:	push	{r4, sl, fp, lr}
   26aa8:	add	fp, sp, #8
   26aac:	sub	sp, sp, #64	; 0x40
   26ab0:	ldr	ip, [fp, #16]
   26ab4:	ldr	lr, [fp, #12]
   26ab8:	ldr	r4, [fp, #8]
   26abc:	str	r0, [fp, #-16]
   26ac0:	str	r1, [fp, #-20]	; 0xffffffec
   26ac4:	str	r2, [fp, #-24]	; 0xffffffe8
   26ac8:	str	r3, [fp, #-28]	; 0xffffffe4
   26acc:	and	r0, lr, #1
   26ad0:	strb	r0, [fp, #-29]	; 0xffffffe3
   26ad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26ad8:	ldr	r1, [fp, #16]
   26adc:	ldr	r1, [r1, #92]	; 0x5c
   26ae0:	cmp	r0, r1
   26ae4:	str	r4, [sp, #28]
   26ae8:	str	ip, [sp, #24]
   26aec:	bge	26afc <__assert_fail@plt+0x153a8>
   26af0:	ldr	r0, [fp, #16]
   26af4:	ldr	r0, [r0, #92]	; 0x5c
   26af8:	str	r0, [fp, #-28]	; 0xffffffe4
   26afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26b00:	add	r0, r0, #1
   26b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26b08:	cmp	r0, r1
   26b0c:	bge	26b20 <__assert_fail@plt+0x153cc>
   26b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26b14:	add	r0, r0, #1
   26b18:	str	r0, [sp, #20]
   26b1c:	b	26b28 <__assert_fail@plt+0x153d4>
   26b20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26b24:	str	r0, [sp, #20]
   26b28:	ldr	r0, [sp, #20]
   26b2c:	str	r0, [sp, #32]
   26b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26b38:	ldr	r2, [fp, #-16]
   26b3c:	ldr	r3, [fp, #8]
   26b40:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   26b44:	ldr	lr, [fp, #16]
   26b48:	and	ip, ip, #1
   26b4c:	str	ip, [sp]
   26b50:	str	lr, [sp, #4]
   26b54:	bl	1cdf8 <__assert_fail@plt+0xb6a4>
   26b58:	ldr	r0, [fp, #-16]
   26b5c:	ldr	r1, [sp, #32]
   26b60:	bl	1cefc <__assert_fail@plt+0xb7a8>
   26b64:	str	r0, [sp, #36]	; 0x24
   26b68:	ldr	r0, [sp, #36]	; 0x24
   26b6c:	cmp	r0, #0
   26b70:	beq	26b80 <__assert_fail@plt+0x1542c>
   26b74:	ldr	r0, [sp, #36]	; 0x24
   26b78:	str	r0, [fp, #-12]
   26b7c:	b	26c34 <__assert_fail@plt+0x154e0>
   26b80:	ldr	r0, [fp, #16]
   26b84:	add	r0, r0, #96	; 0x60
   26b88:	ldr	r1, [fp, #-16]
   26b8c:	str	r0, [r1, #68]	; 0x44
   26b90:	ldr	r0, [fp, #16]
   26b94:	ldrb	r0, [r0, #88]	; 0x58
   26b98:	ubfx	r0, r0, #4, #1
   26b9c:	and	r0, r0, #255	; 0xff
   26ba0:	ldr	r1, [fp, #-16]
   26ba4:	strb	r0, [r1, #78]	; 0x4e
   26ba8:	ldr	r0, [fp, #-16]
   26bac:	ldrb	r0, [r0, #75]	; 0x4b
   26bb0:	cmp	r0, #0
   26bb4:	beq	26bc8 <__assert_fail@plt+0x15474>
   26bb8:	ldr	r0, [fp, #-16]
   26bbc:	ldr	r0, [r0, #4]
   26bc0:	str	r0, [sp, #16]
   26bc4:	b	26bd0 <__assert_fail@plt+0x1547c>
   26bc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   26bcc:	str	r0, [sp, #16]
   26bd0:	ldr	r0, [sp, #16]
   26bd4:	ldr	r1, [fp, #-16]
   26bd8:	str	r0, [r1, #4]
   26bdc:	ldr	r0, [fp, #-16]
   26be0:	ldrb	r0, [r0, #75]	; 0x4b
   26be4:	cmp	r0, #0
   26be8:	bne	26bfc <__assert_fail@plt+0x154a8>
   26bec:	ldr	r0, [fp, #16]
   26bf0:	ldr	r0, [r0, #92]	; 0x5c
   26bf4:	cmp	r0, #1
   26bf8:	ble	26c08 <__assert_fail@plt+0x154b4>
   26bfc:	movw	r0, #0
   26c00:	str	r0, [sp, #12]
   26c04:	b	26c10 <__assert_fail@plt+0x154bc>
   26c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26c0c:	str	r0, [sp, #12]
   26c10:	ldr	r0, [sp, #12]
   26c14:	ldr	r1, [fp, #-16]
   26c18:	str	r0, [r1, #28]
   26c1c:	ldr	r0, [fp, #-16]
   26c20:	ldr	r0, [r0, #28]
   26c24:	ldr	r1, [fp, #-16]
   26c28:	str	r0, [r1, #32]
   26c2c:	movw	r0, #0
   26c30:	str	r0, [fp, #-12]
   26c34:	ldr	r0, [fp, #-12]
   26c38:	sub	sp, fp, #8
   26c3c:	pop	{r4, sl, fp, pc}
   26c40:	push	{fp, lr}
   26c44:	mov	fp, sp
   26c48:	sub	sp, sp, #32
   26c4c:	str	r0, [fp, #-8]
   26c50:	str	r1, [fp, #-12]
   26c54:	str	r2, [sp, #16]
   26c58:	ldr	r0, [fp, #-12]
   26c5c:	ldr	r1, [fp, #-8]
   26c60:	str	r0, [r1, #88]	; 0x58
   26c64:	ldr	r0, [fp, #-8]
   26c68:	mvn	r1, #0
   26c6c:	str	r1, [r0, #92]	; 0x5c
   26c70:	ldr	r0, [sp, #16]
   26c74:	cmp	r0, #0
   26c78:	ble	26d54 <__assert_fail@plt+0x15600>
   26c7c:	ldr	r0, [pc, #264]	; 26d8c <__assert_fail@plt+0x15638>
   26c80:	movw	r1, #24
   26c84:	str	r1, [sp, #12]
   26c88:	ldr	r1, [sp, #12]
   26c8c:	mvn	r2, #0
   26c90:	udiv	r1, r2, r1
   26c94:	cmp	r0, r1
   26c98:	bcs	26ca8 <__assert_fail@plt+0x15554>
   26c9c:	ldr	r0, [pc, #232]	; 26d8c <__assert_fail@plt+0x15638>
   26ca0:	str	r0, [sp, #8]
   26ca4:	b	26cb8 <__assert_fail@plt+0x15564>
   26ca8:	ldr	r0, [sp, #12]
   26cac:	mvn	r1, #0
   26cb0:	udiv	r0, r1, r0
   26cb4:	str	r0, [sp, #8]
   26cb8:	ldr	r0, [sp, #8]
   26cbc:	ldr	r1, [sp, #16]
   26cc0:	cmp	r0, r1
   26cc4:	bcs	26cd4 <__assert_fail@plt+0x15580>
   26cc8:	movw	r0, #12
   26ccc:	str	r0, [fp, #-4]
   26cd0:	b	26d80 <__assert_fail@plt+0x1562c>
   26cd4:	ldr	r0, [sp, #16]
   26cd8:	add	r0, r0, r0, lsl #1
   26cdc:	lsl	r0, r0, #3
   26ce0:	bl	38a7c <__assert_fail@plt+0x27328>
   26ce4:	ldr	lr, [fp, #-8]
   26ce8:	str	r0, [lr, #116]	; 0x74
   26cec:	ldr	r0, [sp, #16]
   26cf0:	lsl	r0, r0, #2
   26cf4:	bl	38a7c <__assert_fail@plt+0x27328>
   26cf8:	ldr	lr, [fp, #-8]
   26cfc:	str	r0, [lr, #132]	; 0x84
   26d00:	ldr	r0, [fp, #-8]
   26d04:	ldr	r0, [r0, #116]	; 0x74
   26d08:	movw	lr, #0
   26d0c:	cmp	r0, lr
   26d10:	movw	r0, #1
   26d14:	str	r0, [sp, #4]
   26d18:	beq	26d38 <__assert_fail@plt+0x155e4>
   26d1c:	ldr	r0, [fp, #-8]
   26d20:	ldr	r0, [r0, #132]	; 0x84
   26d24:	movw	r1, #0
   26d28:	cmp	r0, r1
   26d2c:	movw	r0, #0
   26d30:	moveq	r0, #1
   26d34:	str	r0, [sp, #4]
   26d38:	ldr	r0, [sp, #4]
   26d3c:	tst	r0, #1
   26d40:	beq	26d50 <__assert_fail@plt+0x155fc>
   26d44:	movw	r0, #12
   26d48:	str	r0, [fp, #-4]
   26d4c:	b	26d80 <__assert_fail@plt+0x1562c>
   26d50:	b	26d54 <__assert_fail@plt+0x15600>
   26d54:	ldr	r0, [sp, #16]
   26d58:	ldr	r1, [fp, #-8]
   26d5c:	str	r0, [r1, #112]	; 0x70
   26d60:	ldr	r0, [fp, #-8]
   26d64:	movw	r1, #1
   26d68:	str	r1, [r0, #120]	; 0x78
   26d6c:	ldr	r0, [sp, #16]
   26d70:	ldr	r1, [fp, #-8]
   26d74:	str	r0, [r1, #128]	; 0x80
   26d78:	movw	r0, #0
   26d7c:	str	r0, [fp, #-4]
   26d80:	ldr	r0, [fp, #-4]
   26d84:	mov	sp, fp
   26d88:	pop	{fp, pc}
   26d8c:	svcvc	0x00ffffff
   26d90:	push	{fp, lr}
   26d94:	mov	fp, sp
   26d98:	sub	sp, sp, #128	; 0x80
   26d9c:	str	r0, [fp, #-8]
   26da0:	str	r1, [fp, #-12]
   26da4:	str	r2, [fp, #-16]
   26da8:	ldr	r0, [fp, #-8]
   26dac:	ldr	r0, [r0, #24]
   26db0:	ldr	r1, [fp, #-12]
   26db4:	cmp	r0, r1
   26db8:	bgt	26dd4 <__assert_fail@plt+0x15680>
   26dbc:	ldr	r0, [fp, #-12]
   26dc0:	ldr	r1, [fp, #-8]
   26dc4:	ldr	r1, [r1, #24]
   26dc8:	sub	r0, r0, r1
   26dcc:	str	r0, [fp, #-20]	; 0xffffffec
   26dd0:	b	26e94 <__assert_fail@plt+0x15740>
   26dd4:	ldr	r0, [fp, #-8]
   26dd8:	ldr	r0, [r0, #80]	; 0x50
   26ddc:	cmp	r0, #1
   26de0:	ble	26dfc <__assert_fail@plt+0x156a8>
   26de4:	ldr	r0, [fp, #-8]
   26de8:	add	r0, r0, #16
   26dec:	movw	r1, #0
   26df0:	and	r1, r1, #255	; 0xff
   26df4:	movw	r2, #8
   26df8:	bl	11658 <memset@plt>
   26dfc:	ldr	r0, [fp, #-8]
   26e00:	ldr	r0, [r0, #44]	; 0x2c
   26e04:	ldr	r1, [fp, #-8]
   26e08:	str	r0, [r1, #48]	; 0x30
   26e0c:	ldr	r0, [fp, #-8]
   26e10:	ldr	r0, [r0, #52]	; 0x34
   26e14:	ldr	r1, [fp, #-8]
   26e18:	str	r0, [r1, #56]	; 0x38
   26e1c:	ldr	r0, [fp, #-8]
   26e20:	movw	r1, #0
   26e24:	str	r1, [r0, #28]
   26e28:	ldr	r0, [fp, #-8]
   26e2c:	str	r1, [r0, #24]
   26e30:	ldr	r0, [fp, #-8]
   26e34:	str	r1, [r0, #32]
   26e38:	ldr	r0, [fp, #-8]
   26e3c:	movw	r1, #0
   26e40:	strb	r1, [r0, #76]	; 0x4c
   26e44:	ldr	r0, [fp, #-16]
   26e48:	and	r0, r0, #1
   26e4c:	cmp	r0, #0
   26e50:	movw	r0, #0
   26e54:	movne	r0, #1
   26e58:	tst	r0, #1
   26e5c:	movw	r0, #4
   26e60:	moveq	r0, #6
   26e64:	ldr	r1, [fp, #-8]
   26e68:	str	r0, [r1, #60]	; 0x3c
   26e6c:	ldr	r0, [fp, #-8]
   26e70:	ldrsb	r0, [r0, #75]	; 0x4b
   26e74:	cmp	r0, #0
   26e78:	bne	26e8c <__assert_fail@plt+0x15738>
   26e7c:	ldr	r0, [fp, #-8]
   26e80:	ldr	r0, [r0]
   26e84:	ldr	r1, [fp, #-8]
   26e88:	str	r0, [r1, #4]
   26e8c:	ldr	r0, [fp, #-12]
   26e90:	str	r0, [fp, #-20]	; 0xffffffec
   26e94:	ldr	r0, [fp, #-20]	; 0xffffffec
   26e98:	cmp	r0, #0
   26e9c:	beq	27874 <__assert_fail@plt+0x16120>
   26ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
   26ea4:	ldr	r1, [fp, #-8]
   26ea8:	ldr	r1, [r1, #32]
   26eac:	cmp	r0, r1
   26eb0:	bge	2735c <__assert_fail@plt+0x15c08>
   26eb4:	ldr	r0, [fp, #-8]
   26eb8:	ldrb	r0, [r0, #76]	; 0x4c
   26ebc:	cmp	r0, #0
   26ec0:	beq	27288 <__assert_fail@plt+0x15b34>
   26ec4:	movw	r0, #0
   26ec8:	str	r0, [fp, #-24]	; 0xffffffe8
   26ecc:	ldr	r0, [fp, #-8]
   26ed0:	ldr	r0, [r0, #28]
   26ed4:	str	r0, [fp, #-28]	; 0xffffffe4
   26ed8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26ee0:	add	r0, r0, r1
   26ee4:	add	r0, r0, r0, lsr #31
   26ee8:	asr	r0, r0, #1
   26eec:	str	r0, [fp, #-32]	; 0xffffffe0
   26ef0:	ldr	r0, [fp, #-8]
   26ef4:	ldr	r0, [r0, #12]
   26ef8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26efc:	add	r0, r0, r1, lsl #2
   26f00:	ldr	r0, [r0]
   26f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f08:	cmp	r0, r1
   26f0c:	ble	26f1c <__assert_fail@plt+0x157c8>
   26f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f14:	str	r0, [fp, #-28]	; 0xffffffe4
   26f18:	b	26f54 <__assert_fail@plt+0x15800>
   26f1c:	ldr	r0, [fp, #-8]
   26f20:	ldr	r0, [r0, #12]
   26f24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f28:	add	r0, r0, r1, lsl #2
   26f2c:	ldr	r0, [r0]
   26f30:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f34:	cmp	r0, r1
   26f38:	bge	26f4c <__assert_fail@plt+0x157f8>
   26f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f40:	add	r0, r0, #1
   26f44:	str	r0, [fp, #-24]	; 0xffffffe8
   26f48:	b	26f50 <__assert_fail@plt+0x157fc>
   26f4c:	b	26f68 <__assert_fail@plt+0x15814>
   26f50:	b	26f54 <__assert_fail@plt+0x15800>
   26f54:	b	26f58 <__assert_fail@plt+0x15804>
   26f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f60:	cmp	r0, r1
   26f64:	blt	26ed8 <__assert_fail@plt+0x15784>
   26f68:	ldr	r0, [fp, #-8]
   26f6c:	ldr	r0, [r0, #12]
   26f70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f74:	add	r0, r0, r1, lsl #2
   26f78:	ldr	r0, [r0]
   26f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f80:	cmp	r0, r1
   26f84:	bge	26f94 <__assert_fail@plt+0x15840>
   26f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f8c:	add	r0, r0, #1
   26f90:	str	r0, [fp, #-32]	; 0xffffffe0
   26f94:	ldr	r0, [fp, #-8]
   26f98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f9c:	sub	r1, r1, #1
   26fa0:	ldr	r2, [fp, #-16]
   26fa4:	bl	28844 <__assert_fail@plt+0x170f0>
   26fa8:	ldr	r1, [fp, #-8]
   26fac:	str	r0, [r1, #60]	; 0x3c
   26fb0:	ldr	r0, [fp, #-8]
   26fb4:	ldr	r0, [r0, #28]
   26fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   26fbc:	cmp	r0, r1
   26fc0:	ble	270c4 <__assert_fail@plt+0x15970>
   26fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   26fcc:	cmp	r0, r1
   26fd0:	bne	270c4 <__assert_fail@plt+0x15970>
   26fd4:	ldr	r0, [fp, #-8]
   26fd8:	ldr	r0, [r0, #12]
   26fdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26fe0:	add	r0, r0, r1, lsl #2
   26fe4:	ldr	r0, [r0]
   26fe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   26fec:	cmp	r0, r1
   26ff0:	bne	270c4 <__assert_fail@plt+0x15970>
   26ff4:	ldr	r0, [fp, #-8]
   26ff8:	ldr	r1, [r0, #8]
   26ffc:	ldr	r0, [r0, #28]
   27000:	ldr	r2, [fp, #-20]	; 0xffffffec
   27004:	add	r3, r1, r2, lsl #2
   27008:	sub	r0, r0, r2
   2700c:	lsl	r2, r0, #2
   27010:	mov	r0, r1
   27014:	mov	r1, r3
   27018:	bl	11448 <memmove@plt>
   2701c:	ldr	r0, [fp, #-8]
   27020:	ldr	r0, [r0, #4]
   27024:	ldr	r1, [fp, #-8]
   27028:	ldr	r1, [r1, #4]
   2702c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27030:	add	r1, r1, r2
   27034:	ldr	r2, [fp, #-8]
   27038:	ldr	r2, [r2, #28]
   2703c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27040:	sub	r2, r2, r3
   27044:	bl	11448 <memmove@plt>
   27048:	ldr	r0, [fp, #-20]	; 0xffffffec
   2704c:	ldr	r1, [fp, #-8]
   27050:	ldr	r2, [r1, #28]
   27054:	sub	r0, r2, r0
   27058:	str	r0, [r1, #28]
   2705c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27060:	ldr	r1, [fp, #-8]
   27064:	ldr	r2, [r1, #32]
   27068:	sub	r0, r2, r0
   2706c:	str	r0, [r1, #32]
   27070:	movw	r0, #0
   27074:	str	r0, [fp, #-24]	; 0xffffffe8
   27078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2707c:	ldr	r1, [fp, #-8]
   27080:	ldr	r1, [r1, #28]
   27084:	cmp	r0, r1
   27088:	bge	270c0 <__assert_fail@plt+0x1596c>
   2708c:	ldr	r0, [fp, #-8]
   27090:	ldr	r0, [r0, #12]
   27094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27098:	ldr	r2, [fp, #-20]	; 0xffffffec
   2709c:	add	r3, r1, r2
   270a0:	ldr	r3, [r0, r3, lsl #2]
   270a4:	sub	r2, r3, r2
   270a8:	add	r0, r0, r1, lsl #2
   270ac:	str	r2, [r0]
   270b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   270b4:	add	r0, r0, #1
   270b8:	str	r0, [fp, #-24]	; 0xffffffe8
   270bc:	b	27078 <__assert_fail@plt+0x15924>
   270c0:	b	27284 <__assert_fail@plt+0x15b30>
   270c4:	ldr	r0, [fp, #-8]
   270c8:	ldr	r0, [r0, #44]	; 0x2c
   270cc:	ldr	r1, [fp, #-12]
   270d0:	sub	r0, r0, r1
   270d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   270d8:	add	r0, r0, r1
   270dc:	ldr	r1, [fp, #-8]
   270e0:	str	r0, [r1, #48]	; 0x30
   270e4:	ldr	r0, [fp, #-8]
   270e8:	ldr	r0, [r0, #52]	; 0x34
   270ec:	ldr	r1, [fp, #-12]
   270f0:	sub	r0, r0, r1
   270f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   270f8:	add	r0, r0, r1
   270fc:	ldr	r1, [fp, #-8]
   27100:	str	r0, [r1, #56]	; 0x38
   27104:	ldr	r0, [fp, #-8]
   27108:	movw	r1, #0
   2710c:	strb	r1, [r0, #76]	; 0x4c
   27110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27114:	cmp	r0, #0
   27118:	movw	r0, #0
   2711c:	str	r0, [sp, #24]
   27120:	ble	27150 <__assert_fail@plt+0x159fc>
   27124:	ldr	r0, [fp, #-8]
   27128:	ldr	r0, [r0, #12]
   2712c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27130:	sub	r1, r1, #1
   27134:	add	r0, r0, r1, lsl #2
   27138:	ldr	r0, [r0]
   2713c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27140:	cmp	r0, r1
   27144:	movw	r0, #0
   27148:	moveq	r0, #1
   2714c:	str	r0, [sp, #24]
   27150:	ldr	r0, [sp, #24]
   27154:	tst	r0, #1
   27158:	beq	27170 <__assert_fail@plt+0x15a1c>
   2715c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27160:	mvn	r1, #0
   27164:	add	r0, r0, r1
   27168:	str	r0, [fp, #-32]	; 0xffffffe0
   2716c:	b	27110 <__assert_fail@plt+0x159bc>
   27170:	b	27174 <__assert_fail@plt+0x15a20>
   27174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27178:	ldr	r1, [fp, #-8]
   2717c:	ldr	r1, [r1, #28]
   27180:	cmp	r0, r1
   27184:	bge	271b8 <__assert_fail@plt+0x15a64>
   27188:	ldr	r0, [fp, #-8]
   2718c:	ldr	r0, [r0, #8]
   27190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27194:	add	r0, r0, r1, lsl #2
   27198:	ldr	r0, [r0]
   2719c:	cmn	r0, #1
   271a0:	beq	271a8 <__assert_fail@plt+0x15a54>
   271a4:	b	271b8 <__assert_fail@plt+0x15a64>
   271a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   271ac:	add	r0, r0, #1
   271b0:	str	r0, [fp, #-32]	; 0xffffffe0
   271b4:	b	27174 <__assert_fail@plt+0x15a20>
   271b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   271bc:	ldr	r1, [fp, #-8]
   271c0:	ldr	r1, [r1, #28]
   271c4:	cmp	r0, r1
   271c8:	bne	271dc <__assert_fail@plt+0x15a88>
   271cc:	ldr	r0, [fp, #-8]
   271d0:	movw	r1, #0
   271d4:	str	r1, [r0, #28]
   271d8:	b	27274 <__assert_fail@plt+0x15b20>
   271dc:	ldr	r0, [fp, #-8]
   271e0:	ldr	r0, [r0, #12]
   271e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   271e8:	add	r0, r0, r1, lsl #2
   271ec:	ldr	r0, [r0]
   271f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   271f4:	sub	r0, r0, r1
   271f8:	ldr	r1, [fp, #-8]
   271fc:	str	r0, [r1, #28]
   27200:	ldr	r0, [fp, #-8]
   27204:	ldr	r0, [r0, #28]
   27208:	cmp	r0, #0
   2720c:	beq	27270 <__assert_fail@plt+0x15b1c>
   27210:	movw	r0, #0
   27214:	str	r0, [fp, #-24]	; 0xffffffe8
   27218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2721c:	ldr	r1, [fp, #-8]
   27220:	ldr	r1, [r1, #28]
   27224:	cmp	r0, r1
   27228:	bge	27254 <__assert_fail@plt+0x15b00>
   2722c:	ldr	r0, [fp, #-8]
   27230:	ldr	r0, [r0, #8]
   27234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27238:	add	r0, r0, r1, lsl #2
   2723c:	mvn	r1, #0
   27240:	str	r1, [r0]
   27244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27248:	add	r0, r0, #1
   2724c:	str	r0, [fp, #-24]	; 0xffffffe8
   27250:	b	27218 <__assert_fail@plt+0x15ac4>
   27254:	ldr	r0, [fp, #-8]
   27258:	ldr	r0, [r0, #4]
   2725c:	ldr	r1, [fp, #-8]
   27260:	ldr	r2, [r1, #28]
   27264:	movw	r1, #255	; 0xff
   27268:	and	r1, r1, #255	; 0xff
   2726c:	bl	11658 <memset@plt>
   27270:	b	27274 <__assert_fail@plt+0x15b20>
   27274:	ldr	r0, [fp, #-8]
   27278:	ldr	r0, [r0, #28]
   2727c:	ldr	r1, [fp, #-8]
   27280:	str	r0, [r1, #32]
   27284:	b	27358 <__assert_fail@plt+0x15c04>
   27288:	ldr	r0, [fp, #-8]
   2728c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27290:	sub	r1, r1, #1
   27294:	ldr	r2, [fp, #-16]
   27298:	bl	28844 <__assert_fail@plt+0x170f0>
   2729c:	ldr	r1, [fp, #-8]
   272a0:	str	r0, [r1, #60]	; 0x3c
   272a4:	ldr	r0, [fp, #-8]
   272a8:	ldr	r0, [r0, #80]	; 0x50
   272ac:	cmp	r0, #1
   272b0:	ble	272dc <__assert_fail@plt+0x15b88>
   272b4:	ldr	r0, [fp, #-8]
   272b8:	ldr	r1, [r0, #8]
   272bc:	ldr	r0, [r0, #28]
   272c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   272c4:	add	r3, r1, r2, lsl #2
   272c8:	sub	r0, r0, r2
   272cc:	lsl	r2, r0, #2
   272d0:	mov	r0, r1
   272d4:	mov	r1, r3
   272d8:	bl	11448 <memmove@plt>
   272dc:	ldr	r0, [fp, #-8]
   272e0:	ldrb	r0, [r0, #75]	; 0x4b
   272e4:	cmp	r0, #0
   272e8:	beq	27318 <__assert_fail@plt+0x15bc4>
   272ec:	ldr	r0, [fp, #-8]
   272f0:	ldr	r0, [r0, #4]
   272f4:	ldr	r1, [fp, #-8]
   272f8:	ldr	r1, [r1, #4]
   272fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   27300:	add	r1, r1, r2
   27304:	ldr	r2, [fp, #-8]
   27308:	ldr	r2, [r2, #28]
   2730c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27310:	sub	r2, r2, r3
   27314:	bl	11448 <memmove@plt>
   27318:	ldr	r0, [fp, #-20]	; 0xffffffec
   2731c:	ldr	r1, [fp, #-8]
   27320:	ldr	r2, [r1, #28]
   27324:	sub	r0, r2, r0
   27328:	str	r0, [r1, #28]
   2732c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27330:	ldr	r1, [fp, #-8]
   27334:	ldr	r2, [r1, #32]
   27338:	sub	r0, r2, r0
   2733c:	str	r0, [r1, #32]
   27340:	ldr	r0, [fp, #-8]
   27344:	ldr	r0, [r0, #28]
   27348:	cmp	r0, #0
   2734c:	ble	27354 <__assert_fail@plt+0x15c00>
   27350:	b	27354 <__assert_fail@plt+0x15c00>
   27354:	b	27358 <__assert_fail@plt+0x15c04>
   27358:	b	2784c <__assert_fail@plt+0x160f8>
   2735c:	ldr	r0, [fp, #-8]
   27360:	ldr	r0, [r0, #28]
   27364:	str	r0, [fp, #-36]	; 0xffffffdc
   27368:	ldr	r0, [fp, #-8]
   2736c:	ldrb	r0, [r0, #76]	; 0x4c
   27370:	cmp	r0, #0
   27374:	beq	273c4 <__assert_fail@plt+0x15c70>
   27378:	ldr	r0, [fp, #-8]
   2737c:	ldr	r0, [r0, #44]	; 0x2c
   27380:	ldr	r1, [fp, #-12]
   27384:	sub	r0, r0, r1
   27388:	ldr	r1, [fp, #-20]	; 0xffffffec
   2738c:	add	r0, r0, r1
   27390:	ldr	r1, [fp, #-8]
   27394:	str	r0, [r1, #48]	; 0x30
   27398:	ldr	r0, [fp, #-8]
   2739c:	ldr	r0, [r0, #52]	; 0x34
   273a0:	ldr	r1, [fp, #-12]
   273a4:	sub	r0, r0, r1
   273a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   273ac:	add	r0, r0, r1
   273b0:	ldr	r1, [fp, #-8]
   273b4:	str	r0, [r1, #56]	; 0x38
   273b8:	ldr	r0, [fp, #-8]
   273bc:	movw	r1, #0
   273c0:	strb	r1, [r0, #76]	; 0x4c
   273c4:	ldr	r0, [fp, #-8]
   273c8:	movw	r1, #0
   273cc:	str	r1, [r0, #28]
   273d0:	ldr	r0, [fp, #-8]
   273d4:	ldr	r0, [r0, #80]	; 0x50
   273d8:	cmp	r0, #1
   273dc:	ble	2777c <__assert_fail@plt+0x16028>
   273e0:	mvn	r0, #0
   273e4:	str	r0, [fp, #-44]	; 0xffffffd4
   273e8:	ldr	r0, [fp, #-8]
   273ec:	ldrsb	r0, [r0, #73]	; 0x49
   273f0:	cmp	r0, #0
   273f4:	beq	27608 <__assert_fail@plt+0x15eb4>
   273f8:	ldr	r0, [fp, #-8]
   273fc:	ldr	r0, [r0]
   27400:	ldr	r1, [fp, #-8]
   27404:	ldr	r1, [r1, #24]
   27408:	add	r0, r0, r1
   2740c:	str	r0, [fp, #-48]	; 0xffffffd0
   27410:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27414:	ldr	r1, [fp, #-20]	; 0xffffffec
   27418:	ldr	r2, [fp, #-8]
   2741c:	ldr	r2, [r2, #80]	; 0x50
   27420:	sub	r1, r1, r2
   27424:	add	r0, r0, r1
   27428:	str	r0, [fp, #-56]	; 0xffffffc8
   2742c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27430:	ldr	r1, [fp, #-8]
   27434:	ldr	r1, [r1]
   27438:	cmp	r0, r1
   2743c:	bcs	2744c <__assert_fail@plt+0x15cf8>
   27440:	ldr	r0, [fp, #-8]
   27444:	ldr	r0, [r0]
   27448:	str	r0, [fp, #-56]	; 0xffffffc8
   2744c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27450:	ldr	r1, [fp, #-20]	; 0xffffffec
   27454:	add	r0, r0, r1
   27458:	mvn	r1, #0
   2745c:	add	r0, r0, r1
   27460:	str	r0, [fp, #-52]	; 0xffffffcc
   27464:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27468:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2746c:	cmp	r0, r1
   27470:	bcc	27604 <__assert_fail@plt+0x15eb0>
   27474:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27478:	ldrb	r0, [r0]
   2747c:	and	r0, r0, #192	; 0xc0
   27480:	cmp	r0, #128	; 0x80
   27484:	beq	275ec <__assert_fail@plt+0x15e98>
   27488:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2748c:	ldr	r1, [fp, #-8]
   27490:	ldr	r1, [r1, #48]	; 0x30
   27494:	add	r0, r0, r1
   27498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2749c:	sub	r0, r0, r1
   274a0:	str	r0, [sp, #56]	; 0x38
   274a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   274a8:	str	r0, [sp, #40]	; 0x28
   274ac:	ldr	r0, [fp, #-8]
   274b0:	ldr	r0, [r0, #64]	; 0x40
   274b4:	movw	r1, #0
   274b8:	cmp	r0, r1
   274bc:	beq	27540 <__assert_fail@plt+0x15dec>
   274c0:	ldr	r0, [sp, #56]	; 0x38
   274c4:	cmp	r0, #6
   274c8:	bge	274d8 <__assert_fail@plt+0x15d84>
   274cc:	ldr	r0, [sp, #56]	; 0x38
   274d0:	str	r0, [sp, #20]
   274d4:	b	274e4 <__assert_fail@plt+0x15d90>
   274d8:	movw	r0, #6
   274dc:	str	r0, [sp, #20]
   274e0:	b	274e4 <__assert_fail@plt+0x15d90>
   274e4:	ldr	r0, [sp, #20]
   274e8:	str	r0, [sp, #36]	; 0x24
   274ec:	ldr	r0, [sp, #36]	; 0x24
   274f0:	mvn	r1, #0
   274f4:	add	r0, r0, r1
   274f8:	str	r0, [sp, #36]	; 0x24
   274fc:	cmp	r0, #0
   27500:	blt	27538 <__assert_fail@plt+0x15de4>
   27504:	ldr	r0, [fp, #-8]
   27508:	ldr	r0, [r0, #64]	; 0x40
   2750c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27510:	ldr	r2, [sp, #36]	; 0x24
   27514:	add	r1, r1, r2
   27518:	ldrb	r1, [r1]
   2751c:	add	r0, r0, r1
   27520:	ldrb	r0, [r0]
   27524:	ldr	r1, [sp, #36]	; 0x24
   27528:	add	r2, sp, #50	; 0x32
   2752c:	add	r1, r2, r1
   27530:	strb	r0, [r1]
   27534:	b	274ec <__assert_fail@plt+0x15d98>
   27538:	add	r0, sp, #50	; 0x32
   2753c:	str	r0, [sp, #40]	; 0x28
   27540:	add	r0, sp, #64	; 0x40
   27544:	mov	r1, r0
   27548:	str	r0, [sp, #16]
   2754c:	mov	r0, r1
   27550:	movw	r1, #0
   27554:	and	r1, r1, #255	; 0xff
   27558:	movw	r2, #8
   2755c:	bl	11658 <memset@plt>
   27560:	ldr	r1, [sp, #40]	; 0x28
   27564:	ldr	r2, [sp, #56]	; 0x38
   27568:	add	r0, sp, #60	; 0x3c
   2756c:	ldr	r3, [sp, #16]
   27570:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   27574:	str	r0, [sp, #44]	; 0x2c
   27578:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2757c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27580:	add	r0, r0, r1
   27584:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27588:	sub	r0, r0, r1
   2758c:	ldr	r1, [sp, #44]	; 0x2c
   27590:	cmp	r0, r1
   27594:	bhi	275e8 <__assert_fail@plt+0x15e94>
   27598:	ldr	r0, [sp, #44]	; 0x2c
   2759c:	cmn	r0, #2
   275a0:	bcs	275e8 <__assert_fail@plt+0x15e94>
   275a4:	ldr	r0, [fp, #-8]
   275a8:	add	r0, r0, #16
   275ac:	movw	r1, #0
   275b0:	and	r1, r1, #255	; 0xff
   275b4:	movw	r2, #8
   275b8:	bl	11658 <memset@plt>
   275bc:	ldr	r0, [sp, #44]	; 0x2c
   275c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   275c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   275c8:	add	r1, r1, r2
   275cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   275d0:	sub	r1, r1, r2
   275d4:	sub	r0, r0, r1
   275d8:	ldr	r1, [fp, #-8]
   275dc:	str	r0, [r1, #28]
   275e0:	ldr	r0, [sp, #60]	; 0x3c
   275e4:	str	r0, [fp, #-44]	; 0xffffffd4
   275e8:	b	27604 <__assert_fail@plt+0x15eb0>
   275ec:	b	275f0 <__assert_fail@plt+0x15e9c>
   275f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   275f4:	mvn	r1, #0
   275f8:	add	r0, r0, r1
   275fc:	str	r0, [fp, #-52]	; 0xffffffcc
   27600:	b	27464 <__assert_fail@plt+0x15d10>
   27604:	b	27608 <__assert_fail@plt+0x15eb4>
   27608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2760c:	cmn	r0, #1
   27610:	bne	27634 <__assert_fail@plt+0x15ee0>
   27614:	ldr	r0, [fp, #-8]
   27618:	ldr	r1, [fp, #-12]
   2761c:	sub	r2, fp, #44	; 0x2c
   27620:	bl	28a44 <__assert_fail@plt+0x172f0>
   27624:	ldr	r1, [fp, #-12]
   27628:	sub	r0, r0, r1
   2762c:	ldr	r1, [fp, #-8]
   27630:	str	r0, [r1, #28]
   27634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27638:	cmn	r0, #1
   2763c:	bne	27660 <__assert_fail@plt+0x15f0c>
   27640:	ldr	r0, [fp, #-8]
   27644:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27648:	sub	r1, r1, #1
   2764c:	ldr	r2, [fp, #-16]
   27650:	bl	28844 <__assert_fail@plt+0x170f0>
   27654:	ldr	r1, [fp, #-8]
   27658:	str	r0, [r1, #60]	; 0x3c
   2765c:	b	276e4 <__assert_fail@plt+0x15f90>
   27660:	ldr	r0, [fp, #-8]
   27664:	ldrb	r0, [r0, #78]	; 0x4e
   27668:	cmp	r0, #0
   2766c:	beq	27698 <__assert_fail@plt+0x15f44>
   27670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27674:	bl	11634 <iswalnum@plt>
   27678:	cmp	r0, #0
   2767c:	bne	2768c <__assert_fail@plt+0x15f38>
   27680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27684:	cmp	r0, #95	; 0x5f
   27688:	bne	27698 <__assert_fail@plt+0x15f44>
   2768c:	movw	r0, #1
   27690:	str	r0, [sp, #12]
   27694:	b	276d8 <__assert_fail@plt+0x15f84>
   27698:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2769c:	cmp	r0, #10
   276a0:	movw	r0, #0
   276a4:	str	r0, [sp, #8]
   276a8:	bne	276c4 <__assert_fail@plt+0x15f70>
   276ac:	ldr	r0, [fp, #-8]
   276b0:	ldrb	r0, [r0, #77]	; 0x4d
   276b4:	cmp	r0, #0
   276b8:	movw	r0, #0
   276bc:	movne	r0, #1
   276c0:	str	r0, [sp, #8]
   276c4:	ldr	r0, [sp, #8]
   276c8:	tst	r0, #1
   276cc:	movw	r0, #2
   276d0:	moveq	r0, #0
   276d4:	str	r0, [sp, #12]
   276d8:	ldr	r0, [sp, #12]
   276dc:	ldr	r1, [fp, #-8]
   276e0:	str	r0, [r1, #60]	; 0x3c
   276e4:	ldr	r0, [fp, #-8]
   276e8:	ldr	r0, [r0, #28]
   276ec:	cmp	r0, #0
   276f0:	beq	27768 <__assert_fail@plt+0x16014>
   276f4:	movw	r0, #0
   276f8:	str	r0, [fp, #-40]	; 0xffffffd8
   276fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27700:	ldr	r1, [fp, #-8]
   27704:	ldr	r1, [r1, #28]
   27708:	cmp	r0, r1
   2770c:	bge	27738 <__assert_fail@plt+0x15fe4>
   27710:	ldr	r0, [fp, #-8]
   27714:	ldr	r0, [r0, #8]
   27718:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2771c:	add	r0, r0, r1, lsl #2
   27720:	mvn	r1, #0
   27724:	str	r1, [r0]
   27728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2772c:	add	r0, r0, #1
   27730:	str	r0, [fp, #-40]	; 0xffffffd8
   27734:	b	276fc <__assert_fail@plt+0x15fa8>
   27738:	ldr	r0, [fp, #-8]
   2773c:	ldrsb	r0, [r0, #75]	; 0x4b
   27740:	cmp	r0, #0
   27744:	beq	27764 <__assert_fail@plt+0x16010>
   27748:	ldr	r0, [fp, #-8]
   2774c:	ldr	r0, [r0, #4]
   27750:	ldr	r1, [fp, #-8]
   27754:	ldr	r2, [r1, #28]
   27758:	movw	r1, #255	; 0xff
   2775c:	and	r1, r1, #255	; 0xff
   27760:	bl	11658 <memset@plt>
   27764:	b	27768 <__assert_fail@plt+0x16014>
   27768:	ldr	r0, [fp, #-8]
   2776c:	ldr	r0, [r0, #28]
   27770:	ldr	r1, [fp, #-8]
   27774:	str	r0, [r1, #32]
   27778:	b	27848 <__assert_fail@plt+0x160f4>
   2777c:	ldr	r0, [fp, #-8]
   27780:	ldr	r0, [r0]
   27784:	ldr	r1, [fp, #-8]
   27788:	ldr	r1, [r1, #24]
   2778c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27790:	add	r1, r1, r2
   27794:	sub	r1, r1, #1
   27798:	add	r0, r0, r1
   2779c:	ldrb	r0, [r0]
   277a0:	str	r0, [sp, #32]
   277a4:	ldr	r0, [fp, #-8]
   277a8:	movw	r1, #0
   277ac:	str	r1, [r0, #32]
   277b0:	ldr	r0, [fp, #-8]
   277b4:	ldr	r0, [r0, #64]	; 0x40
   277b8:	cmp	r0, r1
   277bc:	beq	277d8 <__assert_fail@plt+0x16084>
   277c0:	ldr	r0, [fp, #-8]
   277c4:	ldr	r0, [r0, #64]	; 0x40
   277c8:	ldr	r1, [sp, #32]
   277cc:	add	r0, r0, r1
   277d0:	ldrb	r0, [r0]
   277d4:	str	r0, [sp, #32]
   277d8:	ldr	r0, [fp, #-8]
   277dc:	ldr	r0, [r0, #68]	; 0x44
   277e0:	ldr	r1, [sp, #32]
   277e4:	bl	28bb4 <__assert_fail@plt+0x17460>
   277e8:	tst	r0, #1
   277ec:	beq	277fc <__assert_fail@plt+0x160a8>
   277f0:	movw	r0, #1
   277f4:	str	r0, [sp, #4]
   277f8:	b	2783c <__assert_fail@plt+0x160e8>
   277fc:	ldr	r0, [sp, #32]
   27800:	cmp	r0, #10
   27804:	movw	r0, #0
   27808:	str	r0, [sp]
   2780c:	bne	27828 <__assert_fail@plt+0x160d4>
   27810:	ldr	r0, [fp, #-8]
   27814:	ldrb	r0, [r0, #77]	; 0x4d
   27818:	cmp	r0, #0
   2781c:	movw	r0, #0
   27820:	movne	r0, #1
   27824:	str	r0, [sp]
   27828:	ldr	r0, [sp]
   2782c:	tst	r0, #1
   27830:	movw	r0, #2
   27834:	moveq	r0, #0
   27838:	str	r0, [sp, #4]
   2783c:	ldr	r0, [sp, #4]
   27840:	ldr	r1, [fp, #-8]
   27844:	str	r0, [r1, #60]	; 0x3c
   27848:	b	2784c <__assert_fail@plt+0x160f8>
   2784c:	ldr	r0, [fp, #-8]
   27850:	ldrb	r0, [r0, #75]	; 0x4b
   27854:	cmp	r0, #0
   27858:	bne	27870 <__assert_fail@plt+0x1611c>
   2785c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27860:	ldr	r1, [fp, #-8]
   27864:	ldr	r2, [r1, #4]
   27868:	add	r0, r2, r0
   2786c:	str	r0, [r1, #4]
   27870:	b	27874 <__assert_fail@plt+0x16120>
   27874:	ldr	r0, [fp, #-12]
   27878:	ldr	r1, [fp, #-8]
   2787c:	str	r0, [r1, #24]
   27880:	ldr	r0, [fp, #-20]	; 0xffffffec
   27884:	ldr	r1, [fp, #-8]
   27888:	ldr	r2, [r1, #48]	; 0x30
   2788c:	sub	r0, r2, r0
   27890:	str	r0, [r1, #48]	; 0x30
   27894:	ldr	r0, [fp, #-20]	; 0xffffffec
   27898:	ldr	r1, [fp, #-8]
   2789c:	ldr	r2, [r1, #56]	; 0x38
   278a0:	sub	r0, r2, r0
   278a4:	str	r0, [r1, #56]	; 0x38
   278a8:	ldr	r0, [fp, #-8]
   278ac:	ldr	r0, [r0, #80]	; 0x50
   278b0:	cmp	r0, #1
   278b4:	ble	278fc <__assert_fail@plt+0x161a8>
   278b8:	ldr	r0, [fp, #-8]
   278bc:	ldrsb	r0, [r0, #72]	; 0x48
   278c0:	cmp	r0, #0
   278c4:	beq	278f0 <__assert_fail@plt+0x1619c>
   278c8:	ldr	r0, [fp, #-8]
   278cc:	bl	1d054 <__assert_fail@plt+0xb900>
   278d0:	str	r0, [sp, #28]
   278d4:	ldr	r0, [sp, #28]
   278d8:	cmp	r0, #0
   278dc:	beq	278ec <__assert_fail@plt+0x16198>
   278e0:	ldr	r0, [sp, #28]
   278e4:	str	r0, [fp, #-4]
   278e8:	b	27970 <__assert_fail@plt+0x1621c>
   278ec:	b	278f8 <__assert_fail@plt+0x161a4>
   278f0:	ldr	r0, [fp, #-8]
   278f4:	bl	1dc04 <__assert_fail@plt+0xc4b0>
   278f8:	b	27960 <__assert_fail@plt+0x1620c>
   278fc:	ldr	r0, [fp, #-8]
   27900:	ldrb	r0, [r0, #75]	; 0x4b
   27904:	cmp	r0, #0
   27908:	beq	2794c <__assert_fail@plt+0x161f8>
   2790c:	ldr	r0, [fp, #-8]
   27910:	ldrsb	r0, [r0, #72]	; 0x48
   27914:	cmp	r0, #0
   27918:	beq	27928 <__assert_fail@plt+0x161d4>
   2791c:	ldr	r0, [fp, #-8]
   27920:	bl	1db00 <__assert_fail@plt+0xc3ac>
   27924:	b	27948 <__assert_fail@plt+0x161f4>
   27928:	ldr	r0, [fp, #-8]
   2792c:	ldr	r0, [r0, #64]	; 0x40
   27930:	movw	r1, #0
   27934:	cmp	r0, r1
   27938:	beq	27944 <__assert_fail@plt+0x161f0>
   2793c:	ldr	r0, [fp, #-8]
   27940:	bl	1df44 <__assert_fail@plt+0xc7f0>
   27944:	b	27948 <__assert_fail@plt+0x161f4>
   27948:	b	2795c <__assert_fail@plt+0x16208>
   2794c:	ldr	r0, [fp, #-8]
   27950:	ldr	r0, [r0, #48]	; 0x30
   27954:	ldr	r1, [fp, #-8]
   27958:	str	r0, [r1, #28]
   2795c:	b	27960 <__assert_fail@plt+0x1620c>
   27960:	ldr	r0, [fp, #-8]
   27964:	movw	r1, #0
   27968:	str	r1, [r0, #40]	; 0x28
   2796c:	str	r1, [fp, #-4]
   27970:	ldr	r0, [fp, #-4]
   27974:	mov	sp, fp
   27978:	pop	{fp, pc}
   2797c:	push	{fp, lr}
   27980:	mov	fp, sp
   27984:	sub	sp, sp, #80	; 0x50
   27988:	str	r0, [fp, #-32]	; 0xffffffe0
   2798c:	and	r0, r1, #1
   27990:	strb	r0, [fp, #-33]	; 0xffffffdf
   27994:	str	r2, [sp, #40]	; 0x28
   27998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2799c:	ldr	r0, [r0, #84]	; 0x54
   279a0:	str	r0, [sp, #36]	; 0x24
   279a4:	mov	r0, #0
   279a8:	str	r0, [sp, #28]
   279ac:	mvn	r1, #0
   279b0:	str	r1, [sp, #24]
   279b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   279b8:	ldr	r1, [r1, #40]	; 0x28
   279bc:	str	r1, [sp, #20]
   279c0:	ldr	r1, [sp, #40]	; 0x28
   279c4:	cmp	r1, #0
   279c8:	movwne	r1, #1
   279cc:	strb	r1, [sp, #15]
   279d0:	ldr	r1, [sp, #20]
   279d4:	str	r1, [sp, #8]
   279d8:	str	r0, [sp, #32]
   279dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   279e0:	ldr	r1, [sp, #20]
   279e4:	add	r2, sp, #32
   279e8:	str	r2, [fp, #-8]
   279ec:	str	r0, [fp, #-12]
   279f0:	str	r1, [fp, #-16]
   279f4:	ldr	r0, [fp, #-12]
   279f8:	ldr	r0, [r0, #84]	; 0x54
   279fc:	str	r0, [fp, #-20]	; 0xffffffec
   27a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a04:	ldr	r0, [r0, #36]	; 0x24
   27a08:	ldrb	r0, [r0, #52]	; 0x34
   27a0c:	lsr	r0, r0, #7
   27a10:	and	r0, r0, #255	; 0xff
   27a14:	cmp	r0, #0
   27a18:	beq	27b08 <__assert_fail@plt+0x163b4>
   27a1c:	ldr	r0, [fp, #-12]
   27a20:	ldr	r1, [fp, #-16]
   27a24:	sub	r1, r1, #1
   27a28:	ldr	r2, [fp, #-12]
   27a2c:	ldr	r2, [r2, #88]	; 0x58
   27a30:	bl	28844 <__assert_fail@plt+0x170f0>
   27a34:	str	r0, [fp, #-24]	; 0xffffffe8
   27a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a3c:	and	r0, r0, #1
   27a40:	cmp	r0, #0
   27a44:	beq	27a58 <__assert_fail@plt+0x16304>
   27a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a4c:	ldr	r0, [r0, #40]	; 0x28
   27a50:	str	r0, [fp, #-4]
   27a54:	b	27b14 <__assert_fail@plt+0x163c0>
   27a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a5c:	cmp	r0, #0
   27a60:	bne	27a74 <__assert_fail@plt+0x16320>
   27a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a68:	ldr	r0, [r0, #36]	; 0x24
   27a6c:	str	r0, [fp, #-4]
   27a70:	b	27b14 <__assert_fail@plt+0x163c0>
   27a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a78:	and	r0, r0, #4
   27a7c:	cmp	r0, #0
   27a80:	beq	27aa4 <__assert_fail@plt+0x16350>
   27a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a88:	and	r0, r0, #2
   27a8c:	cmp	r0, #0
   27a90:	beq	27aa4 <__assert_fail@plt+0x16350>
   27a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a98:	ldr	r0, [r0, #48]	; 0x30
   27a9c:	str	r0, [fp, #-4]
   27aa0:	b	27b14 <__assert_fail@plt+0x163c0>
   27aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27aa8:	and	r0, r0, #2
   27aac:	cmp	r0, #0
   27ab0:	beq	27ac4 <__assert_fail@plt+0x16370>
   27ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27ab8:	ldr	r0, [r0, #44]	; 0x2c
   27abc:	str	r0, [fp, #-4]
   27ac0:	b	27b14 <__assert_fail@plt+0x163c0>
   27ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27ac8:	and	r0, r0, #4
   27acc:	cmp	r0, #0
   27ad0:	beq	27af8 <__assert_fail@plt+0x163a4>
   27ad4:	ldr	r0, [fp, #-8]
   27ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   27adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   27ae0:	ldr	r2, [r2, #36]	; 0x24
   27ae4:	ldr	r2, [r2, #40]	; 0x28
   27ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27aec:	bl	25ff4 <__assert_fail@plt+0x148a0>
   27af0:	str	r0, [fp, #-4]
   27af4:	b	27b14 <__assert_fail@plt+0x163c0>
   27af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   27afc:	ldr	r0, [r0, #36]	; 0x24
   27b00:	str	r0, [fp, #-4]
   27b04:	b	27b14 <__assert_fail@plt+0x163c0>
   27b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   27b0c:	ldr	r0, [r0, #36]	; 0x24
   27b10:	str	r0, [fp, #-4]
   27b14:	ldr	r0, [fp, #-4]
   27b18:	str	r0, [sp, #16]
   27b1c:	ldr	r0, [sp, #16]
   27b20:	movw	r1, #0
   27b24:	cmp	r0, r1
   27b28:	bne	27b48 <__assert_fail@plt+0x163f4>
   27b2c:	ldr	r0, [sp, #32]
   27b30:	cmp	r0, #12
   27b34:	bne	27b3c <__assert_fail@plt+0x163e8>
   27b38:	b	27b3c <__assert_fail@plt+0x163e8>
   27b3c:	mvn	r0, #1
   27b40:	str	r0, [fp, #-28]	; 0xffffffe4
   27b44:	b	27efc <__assert_fail@plt+0x167a8>
   27b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b4c:	ldr	r0, [r0, #100]	; 0x64
   27b50:	movw	r1, #0
   27b54:	cmp	r0, r1
   27b58:	beq	27c0c <__assert_fail@plt+0x164b8>
   27b5c:	ldr	r0, [sp, #16]
   27b60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27b64:	ldr	r1, [r1, #100]	; 0x64
   27b68:	ldr	r2, [sp, #20]
   27b6c:	add	r1, r1, r2, lsl #2
   27b70:	str	r0, [r1]
   27b74:	ldr	r0, [sp, #36]	; 0x24
   27b78:	ldr	r0, [r0, #76]	; 0x4c
   27b7c:	cmp	r0, #0
   27b80:	beq	27c08 <__assert_fail@plt+0x164b4>
   27b84:	movw	r0, #0
   27b88:	strb	r0, [sp, #15]
   27b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b90:	ldr	r1, [sp, #16]
   27b94:	add	r1, r1, #4
   27b98:	movw	r2, #0
   27b9c:	bl	28c00 <__assert_fail@plt+0x174ac>
   27ba0:	str	r0, [sp, #32]
   27ba4:	ldr	r0, [sp, #32]
   27ba8:	cmp	r0, #0
   27bac:	beq	27bbc <__assert_fail@plt+0x16468>
   27bb0:	ldr	r0, [sp, #32]
   27bb4:	str	r0, [fp, #-28]	; 0xffffffe4
   27bb8:	b	27efc <__assert_fail@plt+0x167a8>
   27bbc:	ldr	r0, [sp, #16]
   27bc0:	ldrb	r0, [r0, #52]	; 0x34
   27bc4:	ubfx	r0, r0, #6, #1
   27bc8:	and	r0, r0, #255	; 0xff
   27bcc:	cmp	r0, #0
   27bd0:	beq	27c04 <__assert_fail@plt+0x164b0>
   27bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27bd8:	ldr	r1, [sp, #16]
   27bdc:	add	r1, r1, #4
   27be0:	bl	28d14 <__assert_fail@plt+0x175c0>
   27be4:	str	r0, [sp, #32]
   27be8:	ldr	r0, [sp, #32]
   27bec:	cmp	r0, #0
   27bf0:	beq	27c00 <__assert_fail@plt+0x164ac>
   27bf4:	ldr	r0, [sp, #32]
   27bf8:	str	r0, [fp, #-28]	; 0xffffffe4
   27bfc:	b	27efc <__assert_fail@plt+0x167a8>
   27c00:	b	27c04 <__assert_fail@plt+0x164b0>
   27c04:	b	27c08 <__assert_fail@plt+0x164b4>
   27c08:	b	27c0c <__assert_fail@plt+0x164b8>
   27c0c:	ldr	r0, [sp, #16]
   27c10:	ldrb	r0, [r0, #52]	; 0x34
   27c14:	ubfx	r0, r0, #4, #1
   27c18:	and	r0, r0, #255	; 0xff
   27c1c:	cmp	r0, #0
   27c20:	beq	27c84 <__assert_fail@plt+0x16530>
   27c24:	ldr	r0, [sp, #16]
   27c28:	ldrb	r0, [r0, #52]	; 0x34
   27c2c:	lsr	r0, r0, #7
   27c30:	and	r0, r0, #255	; 0xff
   27c34:	cmp	r0, #0
   27c38:	beq	27c54 <__assert_fail@plt+0x16500>
   27c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27c40:	ldr	r1, [sp, #16]
   27c44:	ldr	r2, [sp, #20]
   27c48:	bl	27f08 <__assert_fail@plt+0x167b4>
   27c4c:	cmp	r0, #0
   27c50:	beq	27c80 <__assert_fail@plt+0x1652c>
   27c54:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27c58:	tst	r0, #1
   27c5c:	bne	27c6c <__assert_fail@plt+0x16518>
   27c60:	ldr	r0, [sp, #20]
   27c64:	str	r0, [fp, #-28]	; 0xffffffe4
   27c68:	b	27efc <__assert_fail@plt+0x167a8>
   27c6c:	ldr	r0, [sp, #20]
   27c70:	str	r0, [sp, #24]
   27c74:	movw	r0, #1
   27c78:	str	r0, [sp, #28]
   27c7c:	b	27c80 <__assert_fail@plt+0x1652c>
   27c80:	b	27c84 <__assert_fail@plt+0x16530>
   27c84:	b	27c88 <__assert_fail@plt+0x16534>
   27c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27c8c:	ldr	r0, [r0, #56]	; 0x38
   27c90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27c94:	ldr	r1, [r1, #40]	; 0x28
   27c98:	cmp	r0, r1
   27c9c:	movw	r0, #0
   27ca0:	movle	r0, #1
   27ca4:	mvn	r1, #0
   27ca8:	eor	r0, r0, r1
   27cac:	tst	r0, #1
   27cb0:	beq	27ed0 <__assert_fail@plt+0x1677c>
   27cb4:	ldr	r0, [sp, #16]
   27cb8:	str	r0, [sp, #4]
   27cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27cc0:	ldr	r0, [r0, #40]	; 0x28
   27cc4:	add	r0, r0, #1
   27cc8:	str	r0, [sp]
   27ccc:	ldr	r0, [sp]
   27cd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27cd4:	ldr	r1, [r1, #36]	; 0x24
   27cd8:	cmp	r0, r1
   27cdc:	blt	27cf8 <__assert_fail@plt+0x165a4>
   27ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ce4:	ldr	r0, [r0, #36]	; 0x24
   27ce8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27cec:	ldr	r1, [r1, #48]	; 0x30
   27cf0:	cmp	r0, r1
   27cf4:	blt	27d24 <__assert_fail@plt+0x165d0>
   27cf8:	ldr	r0, [sp]
   27cfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27d00:	ldr	r1, [r1, #28]
   27d04:	cmp	r0, r1
   27d08:	blt	27d64 <__assert_fail@plt+0x16610>
   27d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d10:	ldr	r0, [r0, #28]
   27d14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27d18:	ldr	r1, [r1, #48]	; 0x30
   27d1c:	cmp	r0, r1
   27d20:	bge	27d64 <__assert_fail@plt+0x16610>
   27d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d28:	ldr	r1, [sp]
   27d2c:	add	r1, r1, #1
   27d30:	bl	29250 <__assert_fail@plt+0x17afc>
   27d34:	str	r0, [sp, #32]
   27d38:	ldr	r0, [sp, #32]
   27d3c:	cmp	r0, #0
   27d40:	beq	27d60 <__assert_fail@plt+0x1660c>
   27d44:	ldr	r0, [sp, #32]
   27d48:	cmp	r0, #12
   27d4c:	bne	27d54 <__assert_fail@plt+0x16600>
   27d50:	b	27d54 <__assert_fail@plt+0x16600>
   27d54:	mvn	r0, #1
   27d58:	str	r0, [fp, #-28]	; 0xffffffe4
   27d5c:	b	27efc <__assert_fail@plt+0x167a8>
   27d60:	b	27d64 <__assert_fail@plt+0x16610>
   27d64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27d68:	ldr	r2, [sp, #16]
   27d6c:	add	r0, sp, #32
   27d70:	bl	29468 <__assert_fail@plt+0x17d14>
   27d74:	str	r0, [sp, #16]
   27d78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d7c:	ldr	r0, [r0, #100]	; 0x64
   27d80:	movw	r1, #0
   27d84:	cmp	r0, r1
   27d88:	beq	27da0 <__assert_fail@plt+0x1664c>
   27d8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27d90:	ldr	r2, [sp, #16]
   27d94:	add	r0, sp, #32
   27d98:	bl	295f4 <__assert_fail@plt+0x17ea0>
   27d9c:	str	r0, [sp, #16]
   27da0:	ldr	r0, [sp, #16]
   27da4:	movw	r1, #0
   27da8:	cmp	r0, r1
   27dac:	bne	27e18 <__assert_fail@plt+0x166c4>
   27db0:	ldr	r0, [sp, #32]
   27db4:	cmp	r0, #0
   27db8:	beq	27dc8 <__assert_fail@plt+0x16674>
   27dbc:	mvn	r0, #1
   27dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   27dc4:	b	27efc <__assert_fail@plt+0x167a8>
   27dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27dcc:	ldr	r0, [r0, #100]	; 0x64
   27dd0:	movw	r1, #0
   27dd4:	cmp	r0, r1
   27dd8:	beq	27e10 <__assert_fail@plt+0x166bc>
   27ddc:	ldr	r0, [sp, #28]
   27de0:	cmp	r0, #0
   27de4:	beq	27df4 <__assert_fail@plt+0x166a0>
   27de8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27dec:	tst	r0, #1
   27df0:	beq	27e10 <__assert_fail@plt+0x166bc>
   27df4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27df8:	add	r0, sp, #32
   27dfc:	bl	29870 <__assert_fail@plt+0x1811c>
   27e00:	str	r0, [sp, #16]
   27e04:	movw	r1, #0
   27e08:	cmp	r0, r1
   27e0c:	bne	27e14 <__assert_fail@plt+0x166c0>
   27e10:	b	27ed0 <__assert_fail@plt+0x1677c>
   27e14:	b	27e18 <__assert_fail@plt+0x166c4>
   27e18:	ldrb	r0, [sp, #15]
   27e1c:	tst	r0, #1
   27e20:	beq	27e4c <__assert_fail@plt+0x166f8>
   27e24:	ldr	r0, [sp, #4]
   27e28:	ldr	r1, [sp, #16]
   27e2c:	cmp	r0, r1
   27e30:	bne	27e40 <__assert_fail@plt+0x166ec>
   27e34:	ldr	r0, [sp]
   27e38:	str	r0, [sp, #8]
   27e3c:	b	27e48 <__assert_fail@plt+0x166f4>
   27e40:	movw	r0, #0
   27e44:	strb	r0, [sp, #15]
   27e48:	b	27e4c <__assert_fail@plt+0x166f8>
   27e4c:	ldr	r0, [sp, #16]
   27e50:	ldrb	r0, [r0, #52]	; 0x34
   27e54:	ubfx	r0, r0, #4, #1
   27e58:	and	r0, r0, #255	; 0xff
   27e5c:	cmp	r0, #0
   27e60:	beq	27ecc <__assert_fail@plt+0x16778>
   27e64:	ldr	r0, [sp, #16]
   27e68:	ldrb	r0, [r0, #52]	; 0x34
   27e6c:	lsr	r0, r0, #7
   27e70:	and	r0, r0, #255	; 0xff
   27e74:	cmp	r0, #0
   27e78:	beq	27e98 <__assert_fail@plt+0x16744>
   27e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27e80:	ldr	r1, [sp, #16]
   27e84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27e88:	ldr	r2, [r2, #40]	; 0x28
   27e8c:	bl	27f08 <__assert_fail@plt+0x167b4>
   27e90:	cmp	r0, #0
   27e94:	beq	27ec8 <__assert_fail@plt+0x16774>
   27e98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27e9c:	ldr	r0, [r0, #40]	; 0x28
   27ea0:	str	r0, [sp, #24]
   27ea4:	movw	r0, #1
   27ea8:	str	r0, [sp, #28]
   27eac:	movw	r0, #0
   27eb0:	str	r0, [sp, #40]	; 0x28
   27eb4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27eb8:	tst	r0, #1
   27ebc:	bne	27ec4 <__assert_fail@plt+0x16770>
   27ec0:	b	27ed0 <__assert_fail@plt+0x1677c>
   27ec4:	b	27ec8 <__assert_fail@plt+0x16774>
   27ec8:	b	27ecc <__assert_fail@plt+0x16778>
   27ecc:	b	27c88 <__assert_fail@plt+0x16534>
   27ed0:	ldr	r0, [sp, #40]	; 0x28
   27ed4:	movw	r1, #0
   27ed8:	cmp	r0, r1
   27edc:	beq	27ef4 <__assert_fail@plt+0x167a0>
   27ee0:	ldr	r0, [sp, #8]
   27ee4:	ldr	r1, [sp, #40]	; 0x28
   27ee8:	ldr	r2, [r1]
   27eec:	add	r0, r2, r0
   27ef0:	str	r0, [r1]
   27ef4:	ldr	r0, [sp, #24]
   27ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   27efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27f00:	mov	sp, fp
   27f04:	pop	{fp, pc}
   27f08:	push	{fp, lr}
   27f0c:	mov	fp, sp
   27f10:	sub	sp, sp, #24
   27f14:	str	r0, [fp, #-8]
   27f18:	str	r1, [sp, #12]
   27f1c:	str	r2, [sp, #8]
   27f20:	ldr	r0, [sp, #12]
   27f24:	ldrb	r0, [r0, #52]	; 0x34
   27f28:	ubfx	r0, r0, #4, #1
   27f2c:	and	r0, r0, #255	; 0xff
   27f30:	cmp	r0, #0
   27f34:	beq	27f3c <__assert_fail@plt+0x167e8>
   27f38:	b	27f3c <__assert_fail@plt+0x167e8>
   27f3c:	ldr	r0, [fp, #-8]
   27f40:	ldr	r1, [sp, #8]
   27f44:	ldr	r2, [fp, #-8]
   27f48:	ldr	r2, [r2, #88]	; 0x58
   27f4c:	bl	28844 <__assert_fail@plt+0x170f0>
   27f50:	str	r0, [sp]
   27f54:	movw	r0, #0
   27f58:	str	r0, [sp, #4]
   27f5c:	ldr	r0, [sp, #4]
   27f60:	ldr	r1, [sp, #12]
   27f64:	ldr	r1, [r1, #8]
   27f68:	cmp	r0, r1
   27f6c:	bge	27fcc <__assert_fail@plt+0x16878>
   27f70:	ldr	r0, [fp, #-8]
   27f74:	ldr	r0, [r0, #84]	; 0x54
   27f78:	ldr	r1, [sp, #12]
   27f7c:	ldr	r1, [r1, #12]
   27f80:	ldr	r2, [sp, #4]
   27f84:	add	r1, r1, r2, lsl #2
   27f88:	ldr	r1, [r1]
   27f8c:	ldr	r2, [sp]
   27f90:	bl	2dd0c <__assert_fail@plt+0x1c5b8>
   27f94:	tst	r0, #1
   27f98:	beq	27fb8 <__assert_fail@plt+0x16864>
   27f9c:	ldr	r0, [sp, #12]
   27fa0:	ldr	r0, [r0, #12]
   27fa4:	ldr	r1, [sp, #4]
   27fa8:	add	r0, r0, r1, lsl #2
   27fac:	ldr	r0, [r0]
   27fb0:	str	r0, [fp, #-4]
   27fb4:	b	27fd4 <__assert_fail@plt+0x16880>
   27fb8:	b	27fbc <__assert_fail@plt+0x16868>
   27fbc:	ldr	r0, [sp, #4]
   27fc0:	add	r0, r0, #1
   27fc4:	str	r0, [sp, #4]
   27fc8:	b	27f5c <__assert_fail@plt+0x16808>
   27fcc:	movw	r0, #0
   27fd0:	str	r0, [fp, #-4]
   27fd4:	ldr	r0, [fp, #-4]
   27fd8:	mov	sp, fp
   27fdc:	pop	{fp, pc}
   27fe0:	push	{fp, lr}
   27fe4:	mov	fp, sp
   27fe8:	sub	sp, sp, #80	; 0x50
   27fec:	str	r0, [fp, #-8]
   27ff0:	ldr	r0, [fp, #-8]
   27ff4:	ldr	r0, [r0, #84]	; 0x54
   27ff8:	str	r0, [fp, #-12]
   27ffc:	movw	r0, #0
   28000:	str	r0, [fp, #-32]	; 0xffffffe0
   28004:	ldr	r1, [fp, #-8]
   28008:	ldr	r1, [r1, #100]	; 0x64
   2800c:	cmp	r1, r0
   28010:	beq	28018 <__assert_fail@plt+0x168c4>
   28014:	b	28018 <__assert_fail@plt+0x168c4>
   28018:	ldr	r0, [pc, #776]	; 28328 <__assert_fail@plt+0x16bd4>
   2801c:	ldr	r1, [fp, #-8]
   28020:	ldr	r1, [r1, #92]	; 0x5c
   28024:	str	r1, [fp, #-20]	; 0xffffffec
   28028:	ldr	r1, [fp, #-8]
   2802c:	ldr	r1, [r1, #96]	; 0x60
   28030:	str	r1, [fp, #-16]
   28034:	ldr	r1, [fp, #-20]	; 0xffffffec
   28038:	cmp	r0, r1
   2803c:	bhi	2804c <__assert_fail@plt+0x168f8>
   28040:	movw	r0, #12
   28044:	str	r0, [fp, #-4]
   28048:	b	2831c <__assert_fail@plt+0x16bc8>
   2804c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28050:	add	r0, r0, #1
   28054:	lsl	r0, r0, #2
   28058:	bl	38a7c <__assert_fail@plt+0x27328>
   2805c:	str	r0, [fp, #-28]	; 0xffffffe4
   28060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28064:	movw	lr, #0
   28068:	cmp	r0, lr
   2806c:	bne	2807c <__assert_fail@plt+0x16928>
   28070:	movw	r0, #12
   28074:	str	r0, [fp, #-24]	; 0xffffffe8
   28078:	b	28304 <__assert_fail@plt+0x16bb0>
   2807c:	ldr	r0, [fp, #-12]
   28080:	ldr	r0, [r0, #76]	; 0x4c
   28084:	cmp	r0, #0
   28088:	beq	28254 <__assert_fail@plt+0x16b00>
   2808c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28090:	add	r0, r0, #1
   28094:	lsl	r0, r0, #2
   28098:	bl	38a7c <__assert_fail@plt+0x27328>
   2809c:	str	r0, [fp, #-32]	; 0xffffffe0
   280a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   280a4:	movw	lr, #0
   280a8:	cmp	r0, lr
   280ac:	bne	280bc <__assert_fail@plt+0x16968>
   280b0:	movw	r0, #12
   280b4:	str	r0, [fp, #-24]	; 0xffffffe8
   280b8:	b	28304 <__assert_fail@plt+0x16bb0>
   280bc:	b	280c0 <__assert_fail@plt+0x1696c>
   280c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   280c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   280c8:	add	r1, r1, #1
   280cc:	lsl	r2, r1, #2
   280d0:	movw	r1, #0
   280d4:	and	r1, r1, #255	; 0xff
   280d8:	bl	11658 <memset@plt>
   280dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   280e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   280e4:	ldr	r3, [fp, #-16]
   280e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   280ec:	add	lr, sp, #20
   280f0:	str	r0, [sp, #16]
   280f4:	mov	r0, lr
   280f8:	ldr	lr, [sp, #16]
   280fc:	str	lr, [sp]
   28100:	bl	2de3c <__assert_fail@plt+0x1c6e8>
   28104:	ldr	r0, [fp, #-8]
   28108:	add	r1, sp, #20
   2810c:	bl	2deb0 <__assert_fail@plt+0x1c75c>
   28110:	str	r0, [fp, #-24]	; 0xffffffe8
   28114:	ldr	r0, [sp, #44]	; 0x2c
   28118:	bl	1604c <__assert_fail@plt+0x48f8>
   2811c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28120:	cmp	r0, #0
   28124:	beq	2812c <__assert_fail@plt+0x169d8>
   28128:	b	28304 <__assert_fail@plt+0x16bb0>
   2812c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28130:	ldr	r0, [r0]
   28134:	movw	r1, #0
   28138:	cmp	r0, r1
   2813c:	bne	28154 <__assert_fail@plt+0x16a00>
   28140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28144:	ldr	r0, [r0]
   28148:	movw	r1, #0
   2814c:	cmp	r0, r1
   28150:	beq	28158 <__assert_fail@plt+0x16a04>
   28154:	b	28214 <__assert_fail@plt+0x16ac0>
   28158:	b	2815c <__assert_fail@plt+0x16a08>
   2815c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28160:	mvn	r1, #0
   28164:	add	r0, r0, r1
   28168:	str	r0, [fp, #-20]	; 0xffffffec
   2816c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28170:	cmp	r0, #0
   28174:	bge	28184 <__assert_fail@plt+0x16a30>
   28178:	movw	r0, #1
   2817c:	str	r0, [fp, #-24]	; 0xffffffe8
   28180:	b	28304 <__assert_fail@plt+0x16bb0>
   28184:	b	28188 <__assert_fail@plt+0x16a34>
   28188:	ldr	r0, [fp, #-8]
   2818c:	ldr	r0, [r0, #100]	; 0x64
   28190:	ldr	r1, [fp, #-20]	; 0xffffffec
   28194:	add	r0, r0, r1, lsl #2
   28198:	ldr	r0, [r0]
   2819c:	movw	r1, #0
   281a0:	cmp	r0, r1
   281a4:	movw	r0, #1
   281a8:	str	r0, [sp, #12]
   281ac:	beq	281e4 <__assert_fail@plt+0x16a90>
   281b0:	ldr	r0, [fp, #-8]
   281b4:	ldr	r0, [r0, #100]	; 0x64
   281b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   281bc:	ldr	r0, [r0, r1, lsl #2]
   281c0:	ldrb	r0, [r0, #52]	; 0x34
   281c4:	ubfx	r0, r0, #4, #1
   281c8:	and	r0, r0, #255	; 0xff
   281cc:	cmp	r0, #0
   281d0:	movw	r0, #0
   281d4:	movne	r0, #1
   281d8:	mvn	r1, #0
   281dc:	eor	r0, r0, r1
   281e0:	str	r0, [sp, #12]
   281e4:	ldr	r0, [sp, #12]
   281e8:	tst	r0, #1
   281ec:	bne	2815c <__assert_fail@plt+0x16a08>
   281f0:	ldr	r0, [fp, #-8]
   281f4:	ldr	r1, [r0, #100]	; 0x64
   281f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   281fc:	add	r1, r1, r2, lsl #2
   28200:	ldr	r1, [r1]
   28204:	ldr	r2, [fp, #-20]	; 0xffffffec
   28208:	bl	27f08 <__assert_fail@plt+0x167b4>
   2820c:	str	r0, [fp, #-16]
   28210:	b	280c0 <__assert_fail@plt+0x1696c>
   28214:	ldr	r0, [fp, #-12]
   28218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2821c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28220:	ldr	r3, [fp, #-20]	; 0xffffffec
   28224:	add	r3, r3, #1
   28228:	bl	2e0a8 <__assert_fail@plt+0x1c954>
   2822c:	str	r0, [fp, #-24]	; 0xffffffe8
   28230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28234:	bl	1604c <__assert_fail@plt+0x48f8>
   28238:	movw	r0, #0
   2823c:	str	r0, [fp, #-32]	; 0xffffffe0
   28240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28244:	cmp	r0, #0
   28248:	beq	28250 <__assert_fail@plt+0x16afc>
   2824c:	b	28304 <__assert_fail@plt+0x16bb0>
   28250:	b	282c8 <__assert_fail@plt+0x16b74>
   28254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2825c:	ldr	r3, [fp, #-16]
   28260:	ldr	r0, [fp, #-20]	; 0xffffffec
   28264:	add	ip, sp, #20
   28268:	str	r0, [sp, #8]
   2826c:	mov	r0, ip
   28270:	ldr	ip, [sp, #8]
   28274:	str	ip, [sp]
   28278:	bl	2de3c <__assert_fail@plt+0x1c6e8>
   2827c:	ldr	r0, [fp, #-8]
   28280:	add	r1, sp, #20
   28284:	bl	2deb0 <__assert_fail@plt+0x1c75c>
   28288:	str	r0, [fp, #-24]	; 0xffffffe8
   2828c:	ldr	r0, [sp, #44]	; 0x2c
   28290:	bl	1604c <__assert_fail@plt+0x48f8>
   28294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28298:	cmp	r0, #0
   2829c:	beq	282a4 <__assert_fail@plt+0x16b50>
   282a0:	b	28304 <__assert_fail@plt+0x16bb0>
   282a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   282a8:	ldr	r0, [r0]
   282ac:	movw	r1, #0
   282b0:	cmp	r0, r1
   282b4:	bne	282c4 <__assert_fail@plt+0x16b70>
   282b8:	movw	r0, #1
   282bc:	str	r0, [fp, #-24]	; 0xffffffe8
   282c0:	b	28304 <__assert_fail@plt+0x16bb0>
   282c4:	b	282c8 <__assert_fail@plt+0x16b74>
   282c8:	ldr	r0, [fp, #-8]
   282cc:	ldr	r0, [r0, #100]	; 0x64
   282d0:	bl	1604c <__assert_fail@plt+0x48f8>
   282d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   282d8:	ldr	lr, [fp, #-8]
   282dc:	str	r0, [lr, #100]	; 0x64
   282e0:	movw	r0, #0
   282e4:	str	r0, [fp, #-28]	; 0xffffffe4
   282e8:	ldr	lr, [fp, #-16]
   282ec:	ldr	r1, [fp, #-8]
   282f0:	str	lr, [r1, #96]	; 0x60
   282f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   282f8:	ldr	lr, [fp, #-8]
   282fc:	str	r1, [lr, #92]	; 0x5c
   28300:	str	r0, [fp, #-24]	; 0xffffffe8
   28304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28308:	bl	1604c <__assert_fail@plt+0x48f8>
   2830c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28310:	bl	1604c <__assert_fail@plt+0x48f8>
   28314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28318:	str	r0, [fp, #-4]
   2831c:	ldr	r0, [fp, #-4]
   28320:	mov	sp, fp
   28324:	pop	{fp, pc}
   28328:	svccc	0x00ffffff
   2832c:	push	{fp, lr}
   28330:	mov	fp, sp
   28334:	sub	sp, sp, #24
   28338:	str	r0, [fp, #-4]
   2833c:	movw	r0, #0
   28340:	str	r0, [fp, #-8]
   28344:	ldr	r0, [fp, #-8]
   28348:	ldr	r1, [fp, #-4]
   2834c:	ldr	r1, [r1, #124]	; 0x7c
   28350:	cmp	r0, r1
   28354:	bge	2841c <__assert_fail@plt+0x16cc8>
   28358:	ldr	r0, [fp, #-4]
   2835c:	ldr	r0, [r0, #132]	; 0x84
   28360:	ldr	r1, [fp, #-8]
   28364:	add	r0, r0, r1, lsl #2
   28368:	ldr	r0, [r0]
   2836c:	str	r0, [sp, #8]
   28370:	movw	r0, #0
   28374:	str	r0, [sp, #12]
   28378:	ldr	r0, [sp, #12]
   2837c:	ldr	r1, [sp, #8]
   28380:	ldr	r1, [r1, #16]
   28384:	cmp	r0, r1
   28388:	bge	283c8 <__assert_fail@plt+0x16c74>
   2838c:	ldr	r0, [sp, #8]
   28390:	ldr	r0, [r0, #20]
   28394:	ldr	r1, [sp, #12]
   28398:	add	r0, r0, r1, lsl #2
   2839c:	ldr	r0, [r0]
   283a0:	str	r0, [sp, #4]
   283a4:	ldr	r0, [sp, #4]
   283a8:	ldr	r0, [r0, #16]
   283ac:	bl	1604c <__assert_fail@plt+0x48f8>
   283b0:	ldr	r0, [sp, #4]
   283b4:	bl	1604c <__assert_fail@plt+0x48f8>
   283b8:	ldr	r0, [sp, #12]
   283bc:	add	r0, r0, #1
   283c0:	str	r0, [sp, #12]
   283c4:	b	28378 <__assert_fail@plt+0x16c24>
   283c8:	ldr	r0, [sp, #8]
   283cc:	ldr	r0, [r0, #20]
   283d0:	bl	1604c <__assert_fail@plt+0x48f8>
   283d4:	ldr	r0, [sp, #8]
   283d8:	ldr	r0, [r0, #8]
   283dc:	movw	lr, #0
   283e0:	cmp	r0, lr
   283e4:	beq	28404 <__assert_fail@plt+0x16cb0>
   283e8:	ldr	r0, [sp, #8]
   283ec:	ldr	r0, [r0, #8]
   283f0:	ldr	r0, [r0, #8]
   283f4:	bl	1604c <__assert_fail@plt+0x48f8>
   283f8:	ldr	r0, [sp, #8]
   283fc:	ldr	r0, [r0, #8]
   28400:	bl	1604c <__assert_fail@plt+0x48f8>
   28404:	ldr	r0, [sp, #8]
   28408:	bl	1604c <__assert_fail@plt+0x48f8>
   2840c:	ldr	r0, [fp, #-8]
   28410:	add	r0, r0, #1
   28414:	str	r0, [fp, #-8]
   28418:	b	28344 <__assert_fail@plt+0x16bf0>
   2841c:	ldr	r0, [fp, #-4]
   28420:	movw	r1, #0
   28424:	str	r1, [r0, #124]	; 0x7c
   28428:	ldr	r0, [fp, #-4]
   2842c:	str	r1, [r0, #108]	; 0x6c
   28430:	mov	sp, fp
   28434:	pop	{fp, pc}
   28438:	push	{r4, sl, fp, lr}
   2843c:	add	fp, sp, #8
   28440:	sub	sp, sp, #248	; 0xf8
   28444:	ldr	ip, [fp, #8]
   28448:	str	r0, [fp, #-16]
   2844c:	str	r1, [fp, #-20]	; 0xffffffec
   28450:	str	r2, [fp, #-24]	; 0xffffffe8
   28454:	str	r3, [fp, #-28]	; 0xffffffe4
   28458:	and	r0, ip, #1
   2845c:	strb	r0, [fp, #-29]	; 0xffffffe3
   28460:	ldr	r0, [fp, #-16]
   28464:	ldr	r0, [r0]
   28468:	str	r0, [fp, #-36]	; 0xffffffdc
   2846c:	movw	r0, #54756	; 0xd5e4
   28470:	movt	r0, #3
   28474:	ldr	r1, [r0]
   28478:	str	r1, [fp, #-72]	; 0xffffffb8
   2847c:	ldr	r1, [r0, #4]
   28480:	str	r1, [fp, #-68]	; 0xffffffbc
   28484:	ldr	r0, [r0, #8]
   28488:	str	r0, [fp, #-64]	; 0xffffffc0
   2848c:	add	r0, sp, #44	; 0x2c
   28490:	bl	2fcc8 <__assert_fail@plt+0x1e574>
   28494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28498:	cmp	r0, #1
   2849c:	bls	284a4 <__assert_fail@plt+0x16d50>
   284a0:	b	284a4 <__assert_fail@plt+0x16d50>
   284a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   284a8:	ldr	r0, [r0, #100]	; 0x64
   284ac:	movw	r1, #0
   284b0:	cmp	r0, r1
   284b4:	beq	284bc <__assert_fail@plt+0x16d68>
   284b8:	b	284bc <__assert_fail@plt+0x16d68>
   284bc:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   284c0:	tst	r0, #1
   284c4:	beq	28510 <__assert_fail@plt+0x16dbc>
   284c8:	sub	r0, fp, #72	; 0x48
   284cc:	str	r0, [fp, #-60]	; 0xffffffc4
   284d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   284d4:	ldr	r0, [r0, #4]
   284d8:	movw	r1, #24
   284dc:	mul	r0, r0, r1
   284e0:	bl	38a7c <__assert_fail@plt+0x27328>
   284e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   284e8:	str	r0, [r1, #8]
   284ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   284f0:	ldr	r0, [r0, #8]
   284f4:	movw	r1, #0
   284f8:	cmp	r0, r1
   284fc:	bne	2850c <__assert_fail@plt+0x16db8>
   28500:	movw	r0, #12
   28504:	str	r0, [fp, #-12]
   28508:	b	28800 <__assert_fail@plt+0x170ac>
   2850c:	b	28518 <__assert_fail@plt+0x16dc4>
   28510:	movw	r0, #0
   28514:	str	r0, [fp, #-60]	; 0xffffffc4
   28518:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2851c:	ldr	r0, [r0, #72]	; 0x48
   28520:	str	r0, [fp, #-44]	; 0xffffffd4
   28524:	sub	r0, fp, #56	; 0x38
   28528:	movw	r1, #0
   2852c:	and	r1, r1, #255	; 0xff
   28530:	movw	r2, #12
   28534:	bl	11658 <memset@plt>
   28538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2853c:	add	r0, sp, #44	; 0x2c
   28540:	bl	2fd00 <__assert_fail@plt+0x1e5ac>
   28544:	tst	r0, #1
   28548:	bne	2856c <__assert_fail@plt+0x16e18>
   2854c:	add	r0, sp, #44	; 0x2c
   28550:	bl	2fdc0 <__assert_fail@plt+0x1e66c>
   28554:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28558:	bl	2fdfc <__assert_fail@plt+0x1e6a8>
   2855c:	movw	lr, #12
   28560:	str	lr, [fp, #-12]
   28564:	str	r0, [sp, #32]
   28568:	b	28800 <__assert_fail@plt+0x170ac>
   2856c:	add	r0, sp, #44	; 0x2c
   28570:	bl	2fea0 <__assert_fail@plt+0x1e74c>
   28574:	str	r0, [sp, #40]	; 0x28
   28578:	ldr	r0, [sp, #40]	; 0x28
   2857c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28580:	ldr	lr, [fp, #-24]	; 0xffffffe8
   28584:	lsl	r2, lr, #3
   28588:	bl	11478 <memcpy@plt>
   2858c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28590:	ldr	r0, [r0]
   28594:	str	r0, [fp, #-40]	; 0xffffffd8
   28598:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2859c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   285a0:	ldr	r1, [r1, #4]
   285a4:	cmp	r0, r1
   285a8:	bgt	287e4 <__assert_fail@plt+0x17090>
   285ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   285b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   285b4:	ldr	r2, [sp, #40]	; 0x28
   285b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   285bc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   285c0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   285c4:	str	ip, [sp]
   285c8:	str	lr, [sp, #4]
   285cc:	bl	2feb8 <__assert_fail@plt+0x1e764>
   285d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   285d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   285d8:	ldr	r1, [r1, #4]
   285dc:	cmp	r0, r1
   285e0:	bne	285f8 <__assert_fail@plt+0x16ea4>
   285e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   285e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   285ec:	ldr	r1, [r1, #96]	; 0x60
   285f0:	cmp	r0, r1
   285f4:	beq	2861c <__assert_fail@plt+0x16ec8>
   285f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   285fc:	movw	r1, #0
   28600:	cmp	r0, r1
   28604:	beq	286fc <__assert_fail@plt+0x16fa8>
   28608:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2860c:	sub	r0, fp, #56	; 0x38
   28610:	bl	25f04 <__assert_fail@plt+0x147b0>
   28614:	cmp	r0, #0
   28618:	beq	286fc <__assert_fail@plt+0x16fa8>
   2861c:	mvn	r0, #0
   28620:	str	r0, [fp, #-44]	; 0xffffffd4
   28624:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28628:	movw	r1, #0
   2862c:	cmp	r0, r1
   28630:	beq	286cc <__assert_fail@plt+0x16f78>
   28634:	movw	r0, #0
   28638:	str	r0, [sp, #36]	; 0x24
   2863c:	ldr	r0, [sp, #36]	; 0x24
   28640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28644:	cmp	r0, r1
   28648:	bcs	286c8 <__assert_fail@plt+0x16f74>
   2864c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28650:	ldr	r1, [sp, #36]	; 0x24
   28654:	add	r0, r0, r1, lsl #3
   28658:	ldr	r0, [r0]
   2865c:	cmn	r0, #1
   28660:	ble	286b4 <__assert_fail@plt+0x16f60>
   28664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28668:	ldr	r1, [sp, #36]	; 0x24
   2866c:	add	r0, r0, r1, lsl #3
   28670:	ldr	r0, [r0, #4]
   28674:	cmn	r0, #1
   28678:	bne	286b4 <__assert_fail@plt+0x16f60>
   2867c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28680:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28688:	ldr	r1, [sp, #40]	; 0x28
   2868c:	sub	ip, fp, #40	; 0x28
   28690:	str	r1, [sp, #28]
   28694:	mov	r1, ip
   28698:	ldr	ip, [sp, #28]
   2869c:	str	ip, [sp]
   286a0:	sub	lr, fp, #56	; 0x38
   286a4:	str	lr, [sp, #4]
   286a8:	bl	30060 <__assert_fail@plt+0x1e90c>
   286ac:	str	r0, [fp, #-44]	; 0xffffffd4
   286b0:	b	286c8 <__assert_fail@plt+0x16f74>
   286b4:	b	286b8 <__assert_fail@plt+0x16f64>
   286b8:	ldr	r0, [sp, #36]	; 0x24
   286bc:	add	r0, r0, #1
   286c0:	str	r0, [sp, #36]	; 0x24
   286c4:	b	2863c <__assert_fail@plt+0x16ee8>
   286c8:	b	286cc <__assert_fail@plt+0x16f78>
   286cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   286d0:	cmp	r0, #0
   286d4:	bge	286f8 <__assert_fail@plt+0x16fa4>
   286d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   286dc:	bl	1604c <__assert_fail@plt+0x48f8>
   286e0:	add	r0, sp, #44	; 0x2c
   286e4:	bl	2fdc0 <__assert_fail@plt+0x1e66c>
   286e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   286ec:	bl	2fdfc <__assert_fail@plt+0x1e6a8>
   286f0:	str	r0, [fp, #-12]
   286f4:	b	28800 <__assert_fail@plt+0x170ac>
   286f8:	b	286fc <__assert_fail@plt+0x16fa8>
   286fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   28700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28704:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28708:	ldr	r3, [sp, #40]	; 0x28
   2870c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   28710:	ldr	lr, [fp, #-60]	; 0xffffffc4
   28714:	sub	r4, fp, #40	; 0x28
   28718:	str	r4, [sp]
   2871c:	str	ip, [sp, #4]
   28720:	sub	ip, fp, #56	; 0x38
   28724:	str	ip, [sp, #8]
   28728:	str	lr, [sp, #12]
   2872c:	bl	30200 <__assert_fail@plt+0x1eaac>
   28730:	str	r0, [fp, #-44]	; 0xffffffd4
   28734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28738:	cmp	r0, #0
   2873c:	bge	287e0 <__assert_fail@plt+0x1708c>
   28740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28744:	cmn	r0, #2
   28748:	bne	28774 <__assert_fail@plt+0x17020>
   2874c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28750:	bl	1604c <__assert_fail@plt+0x48f8>
   28754:	add	r0, sp, #44	; 0x2c
   28758:	bl	2fdc0 <__assert_fail@plt+0x1e66c>
   2875c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28760:	bl	2fdfc <__assert_fail@plt+0x1e6a8>
   28764:	movw	lr, #12
   28768:	str	lr, [fp, #-12]
   2876c:	str	r0, [sp, #24]
   28770:	b	28800 <__assert_fail@plt+0x170ac>
   28774:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28778:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2877c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28780:	ldr	r1, [sp, #40]	; 0x28
   28784:	sub	ip, fp, #40	; 0x28
   28788:	str	r1, [sp, #20]
   2878c:	mov	r1, ip
   28790:	ldr	ip, [sp, #20]
   28794:	str	ip, [sp]
   28798:	sub	lr, fp, #56	; 0x38
   2879c:	str	lr, [sp, #4]
   287a0:	bl	30060 <__assert_fail@plt+0x1e90c>
   287a4:	str	r0, [fp, #-44]	; 0xffffffd4
   287a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   287ac:	cmp	r0, #0
   287b0:	bge	287dc <__assert_fail@plt+0x17088>
   287b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   287b8:	bl	1604c <__assert_fail@plt+0x48f8>
   287bc:	add	r0, sp, #44	; 0x2c
   287c0:	bl	2fdc0 <__assert_fail@plt+0x1e66c>
   287c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   287c8:	bl	2fdfc <__assert_fail@plt+0x1e6a8>
   287cc:	movw	lr, #1
   287d0:	str	lr, [fp, #-12]
   287d4:	str	r0, [sp, #16]
   287d8:	b	28800 <__assert_fail@plt+0x170ac>
   287dc:	b	287e0 <__assert_fail@plt+0x1708c>
   287e0:	b	28598 <__assert_fail@plt+0x16e44>
   287e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   287e8:	bl	1604c <__assert_fail@plt+0x48f8>
   287ec:	add	r0, sp, #44	; 0x2c
   287f0:	bl	2fdc0 <__assert_fail@plt+0x1e66c>
   287f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   287f8:	bl	2fdfc <__assert_fail@plt+0x1e6a8>
   287fc:	str	r0, [fp, #-12]
   28800:	ldr	r0, [fp, #-12]
   28804:	sub	sp, fp, #8
   28808:	pop	{r4, sl, fp, pc}
   2880c:	push	{fp, lr}
   28810:	mov	fp, sp
   28814:	sub	sp, sp, #8
   28818:	str	r0, [sp, #4]
   2881c:	ldr	r0, [sp, #4]
   28820:	bl	2832c <__assert_fail@plt+0x16bd8>
   28824:	ldr	r0, [sp, #4]
   28828:	ldr	r0, [r0, #132]	; 0x84
   2882c:	bl	1604c <__assert_fail@plt+0x48f8>
   28830:	ldr	r0, [sp, #4]
   28834:	ldr	r0, [r0, #116]	; 0x74
   28838:	bl	1604c <__assert_fail@plt+0x48f8>
   2883c:	mov	sp, fp
   28840:	pop	{fp, pc}
   28844:	push	{fp, lr}
   28848:	mov	fp, sp
   2884c:	sub	sp, sp, #40	; 0x28
   28850:	str	r0, [fp, #-8]
   28854:	str	r1, [fp, #-12]
   28858:	str	r2, [fp, #-16]
   2885c:	ldr	r0, [fp, #-12]
   28860:	cmp	r0, #0
   28864:	bge	28878 <__assert_fail@plt+0x17124>
   28868:	ldr	r0, [fp, #-8]
   2886c:	ldr	r0, [r0, #60]	; 0x3c
   28870:	str	r0, [fp, #-4]
   28874:	b	28a38 <__assert_fail@plt+0x172e4>
   28878:	ldr	r0, [fp, #-12]
   2887c:	ldr	r1, [fp, #-8]
   28880:	ldr	r1, [r1, #48]	; 0x30
   28884:	cmp	r0, r1
   28888:	bne	288b4 <__assert_fail@plt+0x17160>
   2888c:	ldr	r0, [fp, #-16]
   28890:	and	r0, r0, #2
   28894:	cmp	r0, #0
   28898:	movw	r0, #0
   2889c:	movne	r0, #1
   288a0:	tst	r0, #1
   288a4:	movw	r0, #8
   288a8:	moveq	r0, #10
   288ac:	str	r0, [fp, #-4]
   288b0:	b	28a38 <__assert_fail@plt+0x172e4>
   288b4:	ldr	r0, [fp, #-8]
   288b8:	ldr	r0, [r0, #80]	; 0x50
   288bc:	cmp	r0, #1
   288c0:	ble	289bc <__assert_fail@plt+0x17268>
   288c4:	ldr	r0, [fp, #-12]
   288c8:	str	r0, [sp, #12]
   288cc:	ldr	r0, [fp, #-8]
   288d0:	ldr	r0, [r0, #8]
   288d4:	ldr	r1, [sp, #12]
   288d8:	add	r0, r0, r1, lsl #2
   288dc:	ldr	r0, [r0]
   288e0:	cmn	r0, #1
   288e4:	bne	28928 <__assert_fail@plt+0x171d4>
   288e8:	ldr	r0, [sp, #12]
   288ec:	cmp	r0, #0
   288f0:	blt	288f8 <__assert_fail@plt+0x171a4>
   288f4:	b	288f8 <__assert_fail@plt+0x171a4>
   288f8:	ldr	r0, [sp, #12]
   288fc:	mvn	r1, #0
   28900:	add	r0, r0, r1
   28904:	str	r0, [sp, #12]
   28908:	ldr	r0, [sp, #12]
   2890c:	cmp	r0, #0
   28910:	bge	28924 <__assert_fail@plt+0x171d0>
   28914:	ldr	r0, [fp, #-8]
   28918:	ldr	r0, [r0, #60]	; 0x3c
   2891c:	str	r0, [fp, #-4]
   28920:	b	28a38 <__assert_fail@plt+0x172e4>
   28924:	b	288cc <__assert_fail@plt+0x17178>
   28928:	ldr	r0, [fp, #-8]
   2892c:	ldr	r0, [r0, #8]
   28930:	ldr	r1, [sp, #12]
   28934:	add	r0, r0, r1, lsl #2
   28938:	ldr	r0, [r0]
   2893c:	str	r0, [sp, #16]
   28940:	ldr	r0, [fp, #-8]
   28944:	ldrb	r0, [r0, #78]	; 0x4e
   28948:	cmp	r0, #0
   2894c:	beq	28978 <__assert_fail@plt+0x17224>
   28950:	ldr	r0, [sp, #16]
   28954:	bl	11634 <iswalnum@plt>
   28958:	cmp	r0, #0
   2895c:	bne	2896c <__assert_fail@plt+0x17218>
   28960:	ldr	r0, [sp, #16]
   28964:	cmp	r0, #95	; 0x5f
   28968:	bne	28978 <__assert_fail@plt+0x17224>
   2896c:	movw	r0, #1
   28970:	str	r0, [fp, #-4]
   28974:	b	28a38 <__assert_fail@plt+0x172e4>
   28978:	ldr	r0, [sp, #16]
   2897c:	cmp	r0, #10
   28980:	movw	r0, #0
   28984:	str	r0, [sp, #8]
   28988:	bne	289a4 <__assert_fail@plt+0x17250>
   2898c:	ldr	r0, [fp, #-8]
   28990:	ldrb	r0, [r0, #77]	; 0x4d
   28994:	cmp	r0, #0
   28998:	movw	r0, #0
   2899c:	movne	r0, #1
   289a0:	str	r0, [sp, #8]
   289a4:	ldr	r0, [sp, #8]
   289a8:	tst	r0, #1
   289ac:	movw	r0, #2
   289b0:	moveq	r0, #0
   289b4:	str	r0, [fp, #-4]
   289b8:	b	28a38 <__assert_fail@plt+0x172e4>
   289bc:	ldr	r0, [fp, #-8]
   289c0:	ldr	r0, [r0, #4]
   289c4:	ldr	r1, [fp, #-12]
   289c8:	add	r0, r0, r1
   289cc:	ldrb	r0, [r0]
   289d0:	str	r0, [sp, #20]
   289d4:	ldr	r0, [fp, #-8]
   289d8:	ldr	r0, [r0, #68]	; 0x44
   289dc:	ldr	r1, [sp, #20]
   289e0:	bl	28bb4 <__assert_fail@plt+0x17460>
   289e4:	tst	r0, #1
   289e8:	beq	289f8 <__assert_fail@plt+0x172a4>
   289ec:	movw	r0, #1
   289f0:	str	r0, [fp, #-4]
   289f4:	b	28a38 <__assert_fail@plt+0x172e4>
   289f8:	ldr	r0, [sp, #20]
   289fc:	cmp	r0, #10
   28a00:	movw	r0, #0
   28a04:	str	r0, [sp, #4]
   28a08:	bne	28a24 <__assert_fail@plt+0x172d0>
   28a0c:	ldr	r0, [fp, #-8]
   28a10:	ldrb	r0, [r0, #77]	; 0x4d
   28a14:	cmp	r0, #0
   28a18:	movw	r0, #0
   28a1c:	movne	r0, #1
   28a20:	str	r0, [sp, #4]
   28a24:	ldr	r0, [sp, #4]
   28a28:	tst	r0, #1
   28a2c:	movw	r0, #2
   28a30:	moveq	r0, #0
   28a34:	str	r0, [fp, #-4]
   28a38:	ldr	r0, [fp, #-4]
   28a3c:	mov	sp, fp
   28a40:	pop	{fp, pc}
   28a44:	push	{fp, lr}
   28a48:	mov	fp, sp
   28a4c:	sub	sp, sp, #48	; 0x30
   28a50:	str	r0, [fp, #-4]
   28a54:	str	r1, [fp, #-8]
   28a58:	str	r2, [fp, #-12]
   28a5c:	mvn	r0, #0
   28a60:	str	r0, [sp, #16]
   28a64:	ldr	r0, [fp, #-4]
   28a68:	ldr	r0, [r0, #24]
   28a6c:	ldr	r1, [fp, #-4]
   28a70:	ldr	r1, [r1, #32]
   28a74:	add	r0, r0, r1
   28a78:	str	r0, [sp, #24]
   28a7c:	ldr	r0, [sp, #24]
   28a80:	ldr	r1, [fp, #-8]
   28a84:	cmp	r0, r1
   28a88:	bge	28b9c <__assert_fail@plt+0x17448>
   28a8c:	ldr	r0, [fp, #-4]
   28a90:	ldr	r0, [r0, #44]	; 0x2c
   28a94:	ldr	r1, [sp, #24]
   28a98:	sub	r0, r0, r1
   28a9c:	str	r0, [sp, #8]
   28aa0:	ldr	r0, [fp, #-4]
   28aa4:	ldr	r1, [r0, #16]
   28aa8:	str	r1, [fp, #-20]	; 0xffffffec
   28aac:	ldr	r0, [r0, #20]
   28ab0:	str	r0, [fp, #-16]
   28ab4:	ldr	r0, [fp, #-4]
   28ab8:	ldr	r0, [r0]
   28abc:	ldr	r1, [sp, #24]
   28ac0:	add	r1, r0, r1
   28ac4:	ldr	r2, [sp, #8]
   28ac8:	ldr	r0, [fp, #-4]
   28acc:	add	r3, r0, #16
   28ad0:	add	r0, sp, #12
   28ad4:	bl	3a7b0 <__assert_fail@plt+0x2905c>
   28ad8:	str	r0, [sp, #20]
   28adc:	ldr	r0, [sp, #20]
   28ae0:	cmn	r0, #2
   28ae4:	movw	r0, #1
   28ae8:	str	r0, [sp, #4]
   28aec:	beq	28b18 <__assert_fail@plt+0x173c4>
   28af0:	ldr	r0, [sp, #20]
   28af4:	cmn	r0, #1
   28af8:	movw	r0, #1
   28afc:	str	r0, [sp, #4]
   28b00:	beq	28b18 <__assert_fail@plt+0x173c4>
   28b04:	ldr	r0, [sp, #20]
   28b08:	cmp	r0, #0
   28b0c:	movw	r0, #0
   28b10:	moveq	r0, #1
   28b14:	str	r0, [sp, #4]
   28b18:	ldr	r0, [sp, #4]
   28b1c:	tst	r0, #1
   28b20:	beq	28b80 <__assert_fail@plt+0x1742c>
   28b24:	ldr	r0, [sp, #20]
   28b28:	cmp	r0, #0
   28b2c:	beq	28b3c <__assert_fail@plt+0x173e8>
   28b30:	ldr	r0, [sp, #8]
   28b34:	cmp	r0, #0
   28b38:	bne	28b48 <__assert_fail@plt+0x173f4>
   28b3c:	movw	r0, #0
   28b40:	str	r0, [sp, #16]
   28b44:	b	28b60 <__assert_fail@plt+0x1740c>
   28b48:	ldr	r0, [fp, #-4]
   28b4c:	ldr	r0, [r0]
   28b50:	ldr	r1, [sp, #24]
   28b54:	add	r0, r0, r1
   28b58:	ldrb	r0, [r0]
   28b5c:	str	r0, [sp, #16]
   28b60:	movw	r0, #1
   28b64:	str	r0, [sp, #20]
   28b68:	ldr	r0, [fp, #-4]
   28b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28b70:	str	r1, [r0, #16]
   28b74:	ldr	r1, [fp, #-16]
   28b78:	str	r1, [r0, #20]
   28b7c:	b	28b88 <__assert_fail@plt+0x17434>
   28b80:	ldr	r0, [sp, #12]
   28b84:	str	r0, [sp, #16]
   28b88:	ldr	r0, [sp, #20]
   28b8c:	ldr	r1, [sp, #24]
   28b90:	add	r0, r1, r0
   28b94:	str	r0, [sp, #24]
   28b98:	b	28a7c <__assert_fail@plt+0x17328>
   28b9c:	ldr	r0, [sp, #16]
   28ba0:	ldr	r1, [fp, #-12]
   28ba4:	str	r0, [r1]
   28ba8:	ldr	r0, [sp, #24]
   28bac:	mov	sp, fp
   28bb0:	pop	{fp, pc}
   28bb4:	sub	sp, sp, #8
   28bb8:	str	r0, [sp, #4]
   28bbc:	str	r1, [sp]
   28bc0:	ldr	r0, [sp, #4]
   28bc4:	ldr	r1, [sp]
   28bc8:	asr	r2, r1, #31
   28bcc:	add	r2, r1, r2, lsr #27
   28bd0:	asr	r3, r2, #5
   28bd4:	ldr	r0, [r0, r3, lsl #2]
   28bd8:	bic	r2, r2, #31
   28bdc:	sub	r1, r1, r2
   28be0:	lsr	r0, r0, r1
   28be4:	and	r0, r0, #1
   28be8:	cmp	r0, #0
   28bec:	movw	r0, #0
   28bf0:	movne	r0, #1
   28bf4:	and	r0, r0, #1
   28bf8:	add	sp, sp, #8
   28bfc:	bx	lr
   28c00:	push	{fp, lr}
   28c04:	mov	fp, sp
   28c08:	sub	sp, sp, #32
   28c0c:	str	r0, [fp, #-8]
   28c10:	str	r1, [fp, #-12]
   28c14:	str	r2, [sp, #16]
   28c18:	ldr	r0, [fp, #-8]
   28c1c:	ldr	r0, [r0, #84]	; 0x54
   28c20:	str	r0, [sp, #12]
   28c24:	movw	r0, #0
   28c28:	str	r0, [sp, #8]
   28c2c:	ldr	r0, [sp, #8]
   28c30:	ldr	r1, [fp, #-12]
   28c34:	ldr	r1, [r1, #4]
   28c38:	cmp	r0, r1
   28c3c:	bge	28d00 <__assert_fail@plt+0x175ac>
   28c40:	ldr	r0, [fp, #-12]
   28c44:	ldr	r0, [r0, #8]
   28c48:	ldr	r1, [sp, #8]
   28c4c:	ldr	r0, [r0, r1, lsl #2]
   28c50:	str	r0, [sp]
   28c54:	ldr	r0, [sp, #12]
   28c58:	ldr	r0, [r0]
   28c5c:	ldr	r1, [sp]
   28c60:	add	r0, r0, r1, lsl #3
   28c64:	ldr	r0, [r0, #4]
   28c68:	and	r0, r0, #255	; 0xff
   28c6c:	cmp	r0, #8
   28c70:	bne	28cec <__assert_fail@plt+0x17598>
   28c74:	ldr	r0, [sp, #12]
   28c78:	ldr	r0, [r0]
   28c7c:	ldr	r1, [sp]
   28c80:	add	r0, r0, r1, lsl #3
   28c84:	ldr	r0, [r0]
   28c88:	cmp	r0, #32
   28c8c:	bge	28cec <__assert_fail@plt+0x17598>
   28c90:	ldr	r0, [sp, #12]
   28c94:	ldr	r1, [r0]
   28c98:	ldr	r0, [r0, #80]	; 0x50
   28c9c:	ldr	r2, [sp]
   28ca0:	add	r1, r1, r2, lsl #3
   28ca4:	ldr	r1, [r1]
   28ca8:	movw	r2, #1
   28cac:	lsl	r1, r2, r1
   28cb0:	and	r0, r0, r1
   28cb4:	cmp	r0, #0
   28cb8:	beq	28cec <__assert_fail@plt+0x17598>
   28cbc:	ldr	r0, [fp, #-8]
   28cc0:	ldr	r1, [sp]
   28cc4:	ldr	r2, [sp, #16]
   28cc8:	bl	29954 <__assert_fail@plt+0x18200>
   28ccc:	str	r0, [sp, #4]
   28cd0:	ldr	r0, [sp, #4]
   28cd4:	cmp	r0, #0
   28cd8:	beq	28ce8 <__assert_fail@plt+0x17594>
   28cdc:	ldr	r0, [sp, #4]
   28ce0:	str	r0, [fp, #-4]
   28ce4:	b	28d08 <__assert_fail@plt+0x175b4>
   28ce8:	b	28cec <__assert_fail@plt+0x17598>
   28cec:	b	28cf0 <__assert_fail@plt+0x1759c>
   28cf0:	ldr	r0, [sp, #8]
   28cf4:	add	r0, r0, #1
   28cf8:	str	r0, [sp, #8]
   28cfc:	b	28c2c <__assert_fail@plt+0x174d8>
   28d00:	movw	r0, #0
   28d04:	str	r0, [fp, #-4]
   28d08:	ldr	r0, [fp, #-4]
   28d0c:	mov	sp, fp
   28d10:	pop	{fp, pc}
   28d14:	push	{fp, lr}
   28d18:	mov	fp, sp
   28d1c:	sub	sp, sp, #96	; 0x60
   28d20:	str	r0, [fp, #-4]
   28d24:	str	r1, [fp, #-8]
   28d28:	ldr	r0, [fp, #-4]
   28d2c:	ldr	r0, [r0, #84]	; 0x54
   28d30:	str	r0, [fp, #-12]
   28d34:	ldr	r0, [fp, #-4]
   28d38:	ldr	r0, [r0, #40]	; 0x28
   28d3c:	str	r0, [fp, #-24]	; 0xffffffe8
   28d40:	movw	r0, #0
   28d44:	str	r0, [fp, #-20]	; 0xffffffec
   28d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   28d4c:	ldr	r1, [fp, #-8]
   28d50:	ldr	r1, [r1, #4]
   28d54:	cmp	r0, r1
   28d58:	bge	2923c <__assert_fail@plt+0x17ae8>
   28d5c:	ldr	r0, [fp, #-8]
   28d60:	ldr	r0, [r0, #8]
   28d64:	ldr	r1, [fp, #-20]	; 0xffffffec
   28d68:	ldr	r0, [r0, r1, lsl #2]
   28d6c:	str	r0, [fp, #-40]	; 0xffffffd8
   28d70:	ldr	r0, [fp, #-12]
   28d74:	ldr	r0, [r0]
   28d78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28d7c:	add	r0, r0, r1, lsl #3
   28d80:	str	r0, [sp, #48]	; 0x30
   28d84:	ldr	r0, [sp, #48]	; 0x30
   28d88:	ldr	r0, [r0, #4]
   28d8c:	and	r0, r0, #255	; 0xff
   28d90:	cmp	r0, #4
   28d94:	beq	28d9c <__assert_fail@plt+0x17648>
   28d98:	b	2922c <__assert_fail@plt+0x17ad8>
   28d9c:	ldr	r0, [sp, #48]	; 0x30
   28da0:	ldr	r0, [r0, #4]
   28da4:	lsr	r0, r0, #8
   28da8:	movw	r1, #1023	; 0x3ff
   28dac:	and	r0, r0, r1
   28db0:	cmp	r0, #0
   28db4:	beq	28e98 <__assert_fail@plt+0x17744>
   28db8:	ldr	r0, [fp, #-4]
   28dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28dc0:	ldr	r2, [fp, #-4]
   28dc4:	ldr	r2, [r2, #88]	; 0x58
   28dc8:	bl	28844 <__assert_fail@plt+0x170f0>
   28dcc:	str	r0, [fp, #-44]	; 0xffffffd4
   28dd0:	ldr	r0, [sp, #48]	; 0x30
   28dd4:	ldr	r0, [r0, #4]
   28dd8:	lsr	r0, r0, #8
   28ddc:	movw	r1, #1023	; 0x3ff
   28de0:	and	r0, r0, r1
   28de4:	and	r0, r0, #4
   28de8:	cmp	r0, #0
   28dec:	beq	28e00 <__assert_fail@plt+0x176ac>
   28df0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28df4:	and	r0, r0, #1
   28df8:	cmp	r0, #0
   28dfc:	beq	28e90 <__assert_fail@plt+0x1773c>
   28e00:	ldr	r0, [sp, #48]	; 0x30
   28e04:	ldr	r0, [r0, #4]
   28e08:	lsr	r0, r0, #8
   28e0c:	movw	r1, #1023	; 0x3ff
   28e10:	and	r0, r0, r1
   28e14:	and	r0, r0, #8
   28e18:	cmp	r0, #0
   28e1c:	beq	28e30 <__assert_fail@plt+0x176dc>
   28e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e24:	and	r0, r0, #1
   28e28:	cmp	r0, #0
   28e2c:	bne	28e90 <__assert_fail@plt+0x1773c>
   28e30:	ldr	r0, [sp, #48]	; 0x30
   28e34:	ldr	r0, [r0, #4]
   28e38:	lsr	r0, r0, #8
   28e3c:	movw	r1, #1023	; 0x3ff
   28e40:	and	r0, r0, r1
   28e44:	and	r0, r0, #32
   28e48:	cmp	r0, #0
   28e4c:	beq	28e60 <__assert_fail@plt+0x1770c>
   28e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e54:	and	r0, r0, #2
   28e58:	cmp	r0, #0
   28e5c:	beq	28e90 <__assert_fail@plt+0x1773c>
   28e60:	ldr	r0, [sp, #48]	; 0x30
   28e64:	ldr	r0, [r0, #4]
   28e68:	lsr	r0, r0, #8
   28e6c:	movw	r1, #1023	; 0x3ff
   28e70:	and	r0, r0, r1
   28e74:	and	r0, r0, #128	; 0x80
   28e78:	cmp	r0, #0
   28e7c:	beq	28e94 <__assert_fail@plt+0x17740>
   28e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e84:	and	r0, r0, #8
   28e88:	cmp	r0, #0
   28e8c:	bne	28e94 <__assert_fail@plt+0x17740>
   28e90:	b	2922c <__assert_fail@plt+0x17ad8>
   28e94:	b	28e98 <__assert_fail@plt+0x17744>
   28e98:	ldr	r0, [fp, #-4]
   28e9c:	ldr	r0, [r0, #108]	; 0x6c
   28ea0:	str	r0, [fp, #-36]	; 0xffffffdc
   28ea4:	ldr	r0, [fp, #-4]
   28ea8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28eb0:	bl	29aa4 <__assert_fail@plt+0x18350>
   28eb4:	str	r0, [fp, #-16]
   28eb8:	ldr	r0, [fp, #-16]
   28ebc:	cmp	r0, #0
   28ec0:	beq	28ec8 <__assert_fail@plt+0x17774>
   28ec4:	b	29244 <__assert_fail@plt+0x17af0>
   28ec8:	ldr	r0, [fp, #-12]
   28ecc:	ldr	r0, [r0, #12]
   28ed0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28ed4:	add	r0, r0, r1, lsl #2
   28ed8:	ldr	r0, [r0]
   28edc:	cmn	r0, #1
   28ee0:	beq	28ee8 <__assert_fail@plt+0x17794>
   28ee4:	b	28ee8 <__assert_fail@plt+0x17794>
   28ee8:	b	28eec <__assert_fail@plt+0x17798>
   28eec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ef0:	ldr	r1, [fp, #-4]
   28ef4:	ldr	r1, [r1, #108]	; 0x6c
   28ef8:	cmp	r0, r1
   28efc:	bge	29228 <__assert_fail@plt+0x17ad4>
   28f00:	ldr	r0, [fp, #-4]
   28f04:	ldr	r0, [r0, #116]	; 0x74
   28f08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28f0c:	movw	r2, #24
   28f10:	mul	r1, r1, r2
   28f14:	add	r0, r0, r1
   28f18:	str	r0, [sp, #32]
   28f1c:	ldr	r0, [sp, #32]
   28f20:	ldr	r0, [r0]
   28f24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28f28:	cmp	r0, r1
   28f2c:	bne	28f44 <__assert_fail@plt+0x177f0>
   28f30:	ldr	r0, [sp, #32]
   28f34:	ldr	r0, [r0, #4]
   28f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28f3c:	cmp	r0, r1
   28f40:	beq	28f48 <__assert_fail@plt+0x177f4>
   28f44:	b	29218 <__assert_fail@plt+0x17ac4>
   28f48:	ldr	r0, [sp, #32]
   28f4c:	ldr	r0, [r0, #12]
   28f50:	ldr	r1, [sp, #32]
   28f54:	ldr	r1, [r1, #8]
   28f58:	sub	r0, r0, r1
   28f5c:	str	r0, [sp, #40]	; 0x28
   28f60:	ldr	r0, [sp, #40]	; 0x28
   28f64:	cmp	r0, #0
   28f68:	bne	28fa4 <__assert_fail@plt+0x17850>
   28f6c:	ldr	r0, [fp, #-12]
   28f70:	ldr	r0, [r0, #24]
   28f74:	ldr	r1, [fp, #-12]
   28f78:	ldr	r1, [r1, #20]
   28f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28f80:	movw	r3, #12
   28f84:	mul	r2, r2, r3
   28f88:	add	r1, r1, r2
   28f8c:	ldr	r1, [r1, #8]
   28f90:	ldr	r1, [r1]
   28f94:	mul	r1, r1, r3
   28f98:	add	r0, r0, r1
   28f9c:	str	r0, [sp, #16]
   28fa0:	b	28fcc <__assert_fail@plt+0x17878>
   28fa4:	ldr	r0, [fp, #-12]
   28fa8:	ldr	r1, [r0, #12]
   28fac:	ldr	r0, [r0, #24]
   28fb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28fb4:	add	r1, r1, r2, lsl #2
   28fb8:	ldr	r1, [r1]
   28fbc:	movw	r2, #12
   28fc0:	mul	r1, r1, r2
   28fc4:	add	r0, r0, r1
   28fc8:	str	r0, [sp, #16]
   28fcc:	ldr	r0, [sp, #16]
   28fd0:	str	r0, [sp, #44]	; 0x2c
   28fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28fd8:	ldr	r1, [sp, #32]
   28fdc:	ldr	r2, [r1, #8]
   28fe0:	ldr	r1, [r1, #12]
   28fe4:	add	r0, r0, r1
   28fe8:	sub	r0, r0, r2
   28fec:	str	r0, [fp, #-28]	; 0xffffffe4
   28ff0:	ldr	r0, [fp, #-4]
   28ff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28ff8:	sub	r1, r1, #1
   28ffc:	ldr	r2, [r0, #88]	; 0x58
   29000:	bl	28844 <__assert_fail@plt+0x170f0>
   29004:	str	r0, [fp, #-44]	; 0xffffffd4
   29008:	ldr	r0, [fp, #-4]
   2900c:	ldr	r0, [r0, #100]	; 0x64
   29010:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29014:	ldr	r0, [r0, r1, lsl #2]
   29018:	str	r0, [sp, #36]	; 0x24
   2901c:	ldr	r0, [fp, #-4]
   29020:	ldr	r0, [r0, #100]	; 0x64
   29024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29028:	add	r0, r0, r1, lsl #2
   2902c:	ldr	r0, [r0]
   29030:	movw	r1, #0
   29034:	cmp	r0, r1
   29038:	bne	29048 <__assert_fail@plt+0x178f4>
   2903c:	movw	r0, #0
   29040:	str	r0, [sp, #12]
   29044:	b	29064 <__assert_fail@plt+0x17910>
   29048:	ldr	r0, [fp, #-4]
   2904c:	ldr	r0, [r0, #100]	; 0x64
   29050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29054:	add	r0, r0, r1, lsl #2
   29058:	ldr	r0, [r0]
   2905c:	ldr	r0, [r0, #8]
   29060:	str	r0, [sp, #12]
   29064:	ldr	r0, [sp, #12]
   29068:	str	r0, [fp, #-32]	; 0xffffffe0
   2906c:	ldr	r0, [sp, #36]	; 0x24
   29070:	movw	r1, #0
   29074:	cmp	r0, r1
   29078:	bne	290f0 <__assert_fail@plt+0x1799c>
   2907c:	ldr	r1, [fp, #-12]
   29080:	ldr	r2, [sp, #44]	; 0x2c
   29084:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29088:	sub	r0, fp, #16
   2908c:	bl	25ff4 <__assert_fail@plt+0x148a0>
   29090:	ldr	r1, [fp, #-4]
   29094:	ldr	r1, [r1, #100]	; 0x64
   29098:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2909c:	str	r0, [r1, r2, lsl #2]
   290a0:	ldr	r0, [fp, #-4]
   290a4:	ldr	r0, [r0, #100]	; 0x64
   290a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   290ac:	add	r0, r0, r1, lsl #2
   290b0:	ldr	r0, [r0]
   290b4:	movw	r1, #0
   290b8:	cmp	r0, r1
   290bc:	movw	r0, #0
   290c0:	str	r0, [sp, #8]
   290c4:	bne	290dc <__assert_fail@plt+0x17988>
   290c8:	ldr	r0, [fp, #-16]
   290cc:	cmp	r0, #0
   290d0:	movw	r0, #0
   290d4:	movne	r0, #1
   290d8:	str	r0, [sp, #8]
   290dc:	ldr	r0, [sp, #8]
   290e0:	tst	r0, #1
   290e4:	beq	290ec <__assert_fail@plt+0x17998>
   290e8:	b	29244 <__assert_fail@plt+0x17af0>
   290ec:	b	2919c <__assert_fail@plt+0x17a48>
   290f0:	ldr	r0, [sp, #36]	; 0x24
   290f4:	ldr	r1, [r0, #40]	; 0x28
   290f8:	ldr	r2, [sp, #44]	; 0x2c
   290fc:	add	r0, sp, #20
   29100:	bl	2a040 <__assert_fail@plt+0x188ec>
   29104:	str	r0, [fp, #-16]
   29108:	ldr	r0, [fp, #-16]
   2910c:	cmp	r0, #0
   29110:	beq	29120 <__assert_fail@plt+0x179cc>
   29114:	ldr	r0, [sp, #28]
   29118:	bl	1604c <__assert_fail@plt+0x48f8>
   2911c:	b	29244 <__assert_fail@plt+0x17af0>
   29120:	ldr	r1, [fp, #-12]
   29124:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29128:	sub	r0, fp, #16
   2912c:	add	r2, sp, #20
   29130:	bl	25ff4 <__assert_fail@plt+0x148a0>
   29134:	ldr	r1, [fp, #-4]
   29138:	ldr	r1, [r1, #100]	; 0x64
   2913c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29140:	str	r0, [r1, r2, lsl #2]
   29144:	ldr	r0, [sp, #28]
   29148:	bl	1604c <__assert_fail@plt+0x48f8>
   2914c:	ldr	r0, [fp, #-4]
   29150:	ldr	r0, [r0, #100]	; 0x64
   29154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29158:	add	r0, r0, r1, lsl #2
   2915c:	ldr	r0, [r0]
   29160:	movw	r1, #0
   29164:	cmp	r0, r1
   29168:	movw	r0, #0
   2916c:	str	r0, [sp, #4]
   29170:	bne	29188 <__assert_fail@plt+0x17a34>
   29174:	ldr	r0, [fp, #-16]
   29178:	cmp	r0, #0
   2917c:	movw	r0, #0
   29180:	movne	r0, #1
   29184:	str	r0, [sp, #4]
   29188:	ldr	r0, [sp, #4]
   2918c:	tst	r0, #1
   29190:	beq	29198 <__assert_fail@plt+0x17a44>
   29194:	b	29244 <__assert_fail@plt+0x17af0>
   29198:	b	2919c <__assert_fail@plt+0x17a48>
   2919c:	ldr	r0, [sp, #40]	; 0x28
   291a0:	cmp	r0, #0
   291a4:	bne	29214 <__assert_fail@plt+0x17ac0>
   291a8:	ldr	r0, [fp, #-4]
   291ac:	ldr	r0, [r0, #100]	; 0x64
   291b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   291b4:	add	r0, r0, r1, lsl #2
   291b8:	ldr	r0, [r0]
   291bc:	ldr	r0, [r0, #8]
   291c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   291c4:	cmp	r0, r1
   291c8:	ble	29214 <__assert_fail@plt+0x17ac0>
   291cc:	ldr	r0, [fp, #-4]
   291d0:	ldr	r1, [sp, #44]	; 0x2c
   291d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   291d8:	bl	28c00 <__assert_fail@plt+0x174ac>
   291dc:	str	r0, [fp, #-16]
   291e0:	ldr	r0, [fp, #-16]
   291e4:	cmp	r0, #0
   291e8:	beq	291f0 <__assert_fail@plt+0x17a9c>
   291ec:	b	29244 <__assert_fail@plt+0x17af0>
   291f0:	ldr	r0, [fp, #-4]
   291f4:	ldr	r1, [sp, #44]	; 0x2c
   291f8:	bl	28d14 <__assert_fail@plt+0x175c0>
   291fc:	str	r0, [fp, #-16]
   29200:	ldr	r0, [fp, #-16]
   29204:	cmp	r0, #0
   29208:	beq	29210 <__assert_fail@plt+0x17abc>
   2920c:	b	29244 <__assert_fail@plt+0x17af0>
   29210:	b	29214 <__assert_fail@plt+0x17ac0>
   29214:	b	29218 <__assert_fail@plt+0x17ac4>
   29218:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2921c:	add	r0, r0, #1
   29220:	str	r0, [fp, #-36]	; 0xffffffdc
   29224:	b	28eec <__assert_fail@plt+0x17798>
   29228:	b	2922c <__assert_fail@plt+0x17ad8>
   2922c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29230:	add	r0, r0, #1
   29234:	str	r0, [fp, #-20]	; 0xffffffec
   29238:	b	28d48 <__assert_fail@plt+0x175f4>
   2923c:	movw	r0, #0
   29240:	str	r0, [fp, #-16]
   29244:	ldr	r0, [fp, #-16]
   29248:	mov	sp, fp
   2924c:	pop	{fp, pc}
   29250:	push	{fp, lr}
   29254:	mov	fp, sp
   29258:	sub	sp, sp, #48	; 0x30
   2925c:	ldr	r2, [pc, #512]	; 29464 <__assert_fail@plt+0x17d10>
   29260:	str	r0, [fp, #-8]
   29264:	str	r1, [fp, #-12]
   29268:	ldr	r0, [fp, #-8]
   2926c:	str	r0, [fp, #-20]	; 0xffffffec
   29270:	ldr	r0, [fp, #-20]	; 0xffffffec
   29274:	ldr	r0, [r0, #36]	; 0x24
   29278:	cmp	r2, r0
   2927c:	bhi	2928c <__assert_fail@plt+0x17b38>
   29280:	movw	r0, #12
   29284:	str	r0, [fp, #-4]
   29288:	b	29458 <__assert_fail@plt+0x17d04>
   2928c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29290:	ldr	r1, [fp, #-12]
   29294:	ldr	r2, [r0, #36]	; 0x24
   29298:	ldr	r3, [r0, #48]	; 0x30
   2929c:	lsl	r2, r2, #1
   292a0:	cmp	r3, r2
   292a4:	str	r0, [sp, #20]
   292a8:	str	r1, [sp, #16]
   292ac:	bge	292c0 <__assert_fail@plt+0x17b6c>
   292b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   292b4:	ldr	r0, [r0, #48]	; 0x30
   292b8:	str	r0, [sp, #12]
   292bc:	b	292d0 <__assert_fail@plt+0x17b7c>
   292c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   292c4:	ldr	r0, [r0, #36]	; 0x24
   292c8:	lsl	r0, r0, #1
   292cc:	str	r0, [sp, #12]
   292d0:	ldr	r0, [sp, #12]
   292d4:	ldr	r1, [sp, #16]
   292d8:	cmp	r1, r0
   292dc:	bge	29324 <__assert_fail@plt+0x17bd0>
   292e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   292e4:	ldr	r1, [r0, #36]	; 0x24
   292e8:	ldr	r0, [r0, #48]	; 0x30
   292ec:	lsl	r1, r1, #1
   292f0:	cmp	r0, r1
   292f4:	bge	29308 <__assert_fail@plt+0x17bb4>
   292f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   292fc:	ldr	r0, [r0, #48]	; 0x30
   29300:	str	r0, [sp, #8]
   29304:	b	29318 <__assert_fail@plt+0x17bc4>
   29308:	ldr	r0, [fp, #-20]	; 0xffffffec
   2930c:	ldr	r0, [r0, #36]	; 0x24
   29310:	lsl	r0, r0, #1
   29314:	str	r0, [sp, #8]
   29318:	ldr	r0, [sp, #8]
   2931c:	str	r0, [sp, #4]
   29320:	b	2932c <__assert_fail@plt+0x17bd8>
   29324:	ldr	r0, [fp, #-12]
   29328:	str	r0, [sp, #4]
   2932c:	ldr	r0, [sp, #4]
   29330:	ldr	r1, [sp, #20]
   29334:	str	r0, [sp]
   29338:	mov	r0, r1
   2933c:	ldr	r1, [sp]
   29340:	bl	1cefc <__assert_fail@plt+0xb7a8>
   29344:	str	r0, [fp, #-16]
   29348:	ldr	r0, [fp, #-16]
   2934c:	cmp	r0, #0
   29350:	beq	29360 <__assert_fail@plt+0x17c0c>
   29354:	ldr	r0, [fp, #-16]
   29358:	str	r0, [fp, #-4]
   2935c:	b	29458 <__assert_fail@plt+0x17d04>
   29360:	ldr	r0, [fp, #-8]
   29364:	ldr	r0, [r0, #100]	; 0x64
   29368:	movw	r1, #0
   2936c:	cmp	r0, r1
   29370:	beq	293bc <__assert_fail@plt+0x17c68>
   29374:	ldr	r0, [fp, #-8]
   29378:	ldr	r0, [r0, #100]	; 0x64
   2937c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29380:	ldr	r1, [r1, #36]	; 0x24
   29384:	add	r1, r1, #1
   29388:	lsl	r1, r1, #2
   2938c:	bl	38aec <__assert_fail@plt+0x27398>
   29390:	str	r0, [sp, #24]
   29394:	ldr	r0, [sp, #24]
   29398:	movw	r1, #0
   2939c:	cmp	r0, r1
   293a0:	bne	293b0 <__assert_fail@plt+0x17c5c>
   293a4:	movw	r0, #12
   293a8:	str	r0, [fp, #-4]
   293ac:	b	29458 <__assert_fail@plt+0x17d04>
   293b0:	ldr	r0, [sp, #24]
   293b4:	ldr	r1, [fp, #-8]
   293b8:	str	r0, [r1, #100]	; 0x64
   293bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   293c0:	ldrsb	r0, [r0, #72]	; 0x48
   293c4:	cmp	r0, #0
   293c8:	beq	29410 <__assert_fail@plt+0x17cbc>
   293cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   293d0:	ldr	r0, [r0, #80]	; 0x50
   293d4:	cmp	r0, #1
   293d8:	ble	29404 <__assert_fail@plt+0x17cb0>
   293dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   293e0:	bl	1d054 <__assert_fail@plt+0xb900>
   293e4:	str	r0, [fp, #-16]
   293e8:	ldr	r0, [fp, #-16]
   293ec:	cmp	r0, #0
   293f0:	beq	29400 <__assert_fail@plt+0x17cac>
   293f4:	ldr	r0, [fp, #-16]
   293f8:	str	r0, [fp, #-4]
   293fc:	b	29458 <__assert_fail@plt+0x17d04>
   29400:	b	2940c <__assert_fail@plt+0x17cb8>
   29404:	ldr	r0, [fp, #-20]	; 0xffffffec
   29408:	bl	1db00 <__assert_fail@plt+0xc3ac>
   2940c:	b	29450 <__assert_fail@plt+0x17cfc>
   29410:	ldr	r0, [fp, #-20]	; 0xffffffec
   29414:	ldr	r0, [r0, #80]	; 0x50
   29418:	cmp	r0, #1
   2941c:	ble	2942c <__assert_fail@plt+0x17cd8>
   29420:	ldr	r0, [fp, #-20]	; 0xffffffec
   29424:	bl	1dc04 <__assert_fail@plt+0xc4b0>
   29428:	b	2944c <__assert_fail@plt+0x17cf8>
   2942c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29430:	ldr	r0, [r0, #64]	; 0x40
   29434:	movw	r1, #0
   29438:	cmp	r0, r1
   2943c:	beq	29448 <__assert_fail@plt+0x17cf4>
   29440:	ldr	r0, [fp, #-20]	; 0xffffffec
   29444:	bl	1df44 <__assert_fail@plt+0xc7f0>
   29448:	b	2944c <__assert_fail@plt+0x17cf8>
   2944c:	b	29450 <__assert_fail@plt+0x17cfc>
   29450:	movw	r0, #0
   29454:	str	r0, [fp, #-4]
   29458:	ldr	r0, [fp, #-4]
   2945c:	mov	sp, fp
   29460:	pop	{fp, pc}
   29464:	svcne	0x00ffffff
   29468:	push	{fp, lr}
   2946c:	mov	fp, sp
   29470:	sub	sp, sp, #40	; 0x28
   29474:	str	r0, [fp, #-8]
   29478:	str	r1, [fp, #-12]
   2947c:	str	r2, [fp, #-16]
   29480:	ldr	r0, [fp, #-16]
   29484:	ldrb	r0, [r0, #52]	; 0x34
   29488:	ubfx	r0, r0, #5, #1
   2948c:	and	r0, r0, #255	; 0xff
   29490:	cmp	r0, #0
   29494:	beq	294cc <__assert_fail@plt+0x17d78>
   29498:	ldr	r0, [fp, #-12]
   2949c:	ldr	r1, [fp, #-16]
   294a0:	bl	2c804 <__assert_fail@plt+0x1b0b0>
   294a4:	ldr	r1, [fp, #-8]
   294a8:	str	r0, [r1]
   294ac:	ldr	r0, [fp, #-8]
   294b0:	ldr	r0, [r0]
   294b4:	cmp	r0, #0
   294b8:	beq	294c8 <__assert_fail@plt+0x17d74>
   294bc:	movw	r0, #0
   294c0:	str	r0, [fp, #-4]
   294c4:	b	295e8 <__assert_fail@plt+0x17e94>
   294c8:	b	294cc <__assert_fail@plt+0x17d78>
   294cc:	ldr	r0, [fp, #-12]
   294d0:	ldr	r0, [r0, #4]
   294d4:	ldr	r1, [fp, #-12]
   294d8:	ldr	r2, [r1, #40]	; 0x28
   294dc:	add	r3, r2, #1
   294e0:	str	r3, [r1, #40]	; 0x28
   294e4:	add	r0, r0, r2
   294e8:	ldrb	r0, [r0]
   294ec:	strb	r0, [sp, #19]
   294f0:	ldr	r0, [fp, #-16]
   294f4:	ldr	r0, [r0, #44]	; 0x2c
   294f8:	str	r0, [sp, #20]
   294fc:	ldr	r0, [sp, #20]
   29500:	movw	r1, #0
   29504:	cmp	r0, r1
   29508:	beq	2952c <__assert_fail@plt+0x17dd8>
   2950c:	ldr	r0, [sp, #20]
   29510:	ldrb	r1, [sp, #19]
   29514:	mov	r2, r1
   29518:	add	r0, r0, r1, lsl #2
   2951c:	ldr	r0, [r0]
   29520:	str	r0, [fp, #-4]
   29524:	str	r2, [sp, #8]
   29528:	b	295e8 <__assert_fail@plt+0x17e94>
   2952c:	ldr	r0, [fp, #-16]
   29530:	ldr	r0, [r0, #48]	; 0x30
   29534:	str	r0, [sp, #20]
   29538:	ldr	r0, [sp, #20]
   2953c:	movw	r1, #0
   29540:	cmp	r0, r1
   29544:	beq	295b4 <__assert_fail@plt+0x17e60>
   29548:	ldr	r0, [fp, #-12]
   2954c:	ldr	r1, [fp, #-12]
   29550:	ldr	r1, [r1, #40]	; 0x28
   29554:	sub	r1, r1, #1
   29558:	ldr	r2, [fp, #-12]
   2955c:	ldr	r2, [r2, #88]	; 0x58
   29560:	bl	28844 <__assert_fail@plt+0x170f0>
   29564:	str	r0, [sp, #12]
   29568:	ldr	r0, [sp, #12]
   2956c:	and	r0, r0, #1
   29570:	cmp	r0, #0
   29574:	beq	29594 <__assert_fail@plt+0x17e40>
   29578:	ldr	r0, [sp, #20]
   2957c:	ldrb	r1, [sp, #19]
   29580:	orr	r1, r1, #256	; 0x100
   29584:	add	r0, r0, r1, lsl #2
   29588:	ldr	r0, [r0]
   2958c:	str	r0, [fp, #-4]
   29590:	b	295e8 <__assert_fail@plt+0x17e94>
   29594:	ldr	r0, [sp, #20]
   29598:	ldrb	r1, [sp, #19]
   2959c:	mov	r2, r1
   295a0:	add	r0, r0, r1, lsl #2
   295a4:	ldr	r0, [r0]
   295a8:	str	r0, [fp, #-4]
   295ac:	str	r2, [sp, #4]
   295b0:	b	295e8 <__assert_fail@plt+0x17e94>
   295b4:	ldr	r0, [fp, #-12]
   295b8:	ldr	r0, [r0, #84]	; 0x54
   295bc:	ldr	r1, [fp, #-16]
   295c0:	bl	2cbe0 <__assert_fail@plt+0x1b48c>
   295c4:	tst	r0, #1
   295c8:	bne	295e4 <__assert_fail@plt+0x17e90>
   295cc:	ldr	r0, [fp, #-8]
   295d0:	movw	r1, #12
   295d4:	str	r1, [r0]
   295d8:	movw	r0, #0
   295dc:	str	r0, [fp, #-4]
   295e0:	b	295e8 <__assert_fail@plt+0x17e94>
   295e4:	b	294f0 <__assert_fail@plt+0x17d9c>
   295e8:	ldr	r0, [fp, #-4]
   295ec:	mov	sp, fp
   295f0:	pop	{fp, pc}
   295f4:	push	{fp, lr}
   295f8:	mov	fp, sp
   295fc:	sub	sp, sp, #56	; 0x38
   29600:	str	r0, [fp, #-8]
   29604:	str	r1, [fp, #-12]
   29608:	str	r2, [fp, #-16]
   2960c:	ldr	r0, [fp, #-12]
   29610:	ldr	r0, [r0, #84]	; 0x54
   29614:	str	r0, [fp, #-20]	; 0xffffffec
   29618:	ldr	r0, [fp, #-12]
   2961c:	ldr	r0, [r0, #40]	; 0x28
   29620:	str	r0, [fp, #-24]	; 0xffffffe8
   29624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29628:	ldr	r1, [fp, #-12]
   2962c:	ldr	r1, [r1, #104]	; 0x68
   29630:	cmp	r0, r1
   29634:	ble	29660 <__assert_fail@plt+0x17f0c>
   29638:	ldr	r0, [fp, #-16]
   2963c:	ldr	r1, [fp, #-12]
   29640:	ldr	r1, [r1, #100]	; 0x64
   29644:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29648:	add	r1, r1, r2, lsl #2
   2964c:	str	r0, [r1]
   29650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29654:	ldr	r1, [fp, #-12]
   29658:	str	r0, [r1, #104]	; 0x68
   2965c:	b	2979c <__assert_fail@plt+0x18048>
   29660:	ldr	r0, [fp, #-12]
   29664:	ldr	r0, [r0, #100]	; 0x64
   29668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2966c:	add	r0, r0, r1, lsl #2
   29670:	ldr	r0, [r0]
   29674:	movw	r1, #0
   29678:	cmp	r0, r1
   2967c:	bne	2969c <__assert_fail@plt+0x17f48>
   29680:	ldr	r0, [fp, #-16]
   29684:	ldr	r1, [fp, #-12]
   29688:	ldr	r1, [r1, #100]	; 0x64
   2968c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29690:	add	r1, r1, r2, lsl #2
   29694:	str	r0, [r1]
   29698:	b	29798 <__assert_fail@plt+0x18044>
   2969c:	mov	r0, #0
   296a0:	str	r0, [sp, #4]
   296a4:	ldr	r0, [fp, #-12]
   296a8:	ldr	r0, [r0, #100]	; 0x64
   296ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   296b0:	add	r0, r0, r1, lsl #2
   296b4:	ldr	r0, [r0]
   296b8:	str	r0, [sp, #28]
   296bc:	ldr	r0, [sp, #28]
   296c0:	ldr	r0, [r0, #40]	; 0x28
   296c4:	str	r0, [sp, #8]
   296c8:	ldr	r0, [fp, #-16]
   296cc:	movw	r1, #0
   296d0:	cmp	r0, r1
   296d4:	beq	2971c <__assert_fail@plt+0x17fc8>
   296d8:	ldr	r0, [fp, #-16]
   296dc:	ldr	r0, [r0, #40]	; 0x28
   296e0:	str	r0, [sp, #4]
   296e4:	ldr	r1, [sp, #4]
   296e8:	ldr	r2, [sp, #8]
   296ec:	add	r0, sp, #12
   296f0:	bl	2a040 <__assert_fail@plt+0x188ec>
   296f4:	ldr	r1, [fp, #-8]
   296f8:	str	r0, [r1]
   296fc:	ldr	r0, [fp, #-8]
   29700:	ldr	r0, [r0]
   29704:	cmp	r0, #0
   29708:	beq	29718 <__assert_fail@plt+0x17fc4>
   2970c:	movw	r0, #0
   29710:	str	r0, [fp, #-4]
   29714:	b	29864 <__assert_fail@plt+0x18110>
   29718:	b	29738 <__assert_fail@plt+0x17fe4>
   2971c:	ldr	r0, [sp, #8]
   29720:	ldr	r1, [r0]
   29724:	str	r1, [sp, #12]
   29728:	ldr	r1, [r0, #4]
   2972c:	str	r1, [sp, #16]
   29730:	ldr	r0, [r0, #8]
   29734:	str	r0, [sp, #20]
   29738:	ldr	r0, [fp, #-12]
   2973c:	ldr	r1, [r0, #40]	; 0x28
   29740:	ldr	r2, [r0, #88]	; 0x58
   29744:	sub	r1, r1, #1
   29748:	bl	28844 <__assert_fail@plt+0x170f0>
   2974c:	str	r0, [sp, #24]
   29750:	ldr	r0, [fp, #-8]
   29754:	ldr	r1, [fp, #-20]	; 0xffffffec
   29758:	ldr	r3, [sp, #24]
   2975c:	add	r2, sp, #12
   29760:	bl	25ff4 <__assert_fail@plt+0x148a0>
   29764:	ldr	r1, [fp, #-12]
   29768:	ldr	r1, [r1, #100]	; 0x64
   2976c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29770:	add	r1, r1, r2, lsl #2
   29774:	str	r0, [r1]
   29778:	str	r0, [fp, #-16]
   2977c:	ldr	r0, [sp, #4]
   29780:	movw	r1, #0
   29784:	cmp	r0, r1
   29788:	beq	29794 <__assert_fail@plt+0x18040>
   2978c:	ldr	r0, [sp, #20]
   29790:	bl	1604c <__assert_fail@plt+0x48f8>
   29794:	b	29798 <__assert_fail@plt+0x18044>
   29798:	b	2979c <__assert_fail@plt+0x18048>
   2979c:	ldr	r0, [fp, #-20]	; 0xffffffec
   297a0:	ldr	r0, [r0, #76]	; 0x4c
   297a4:	cmp	r0, #0
   297a8:	beq	2985c <__assert_fail@plt+0x18108>
   297ac:	ldr	r0, [fp, #-16]
   297b0:	movw	r1, #0
   297b4:	cmp	r0, r1
   297b8:	beq	2985c <__assert_fail@plt+0x18108>
   297bc:	ldr	r0, [fp, #-12]
   297c0:	ldr	r1, [fp, #-16]
   297c4:	add	r1, r1, #4
   297c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   297cc:	bl	28c00 <__assert_fail@plt+0x174ac>
   297d0:	ldr	r1, [fp, #-8]
   297d4:	str	r0, [r1]
   297d8:	ldr	r0, [fp, #-8]
   297dc:	ldr	r0, [r0]
   297e0:	cmp	r0, #0
   297e4:	beq	297f4 <__assert_fail@plt+0x180a0>
   297e8:	movw	r0, #0
   297ec:	str	r0, [fp, #-4]
   297f0:	b	29864 <__assert_fail@plt+0x18110>
   297f4:	ldr	r0, [fp, #-16]
   297f8:	ldrb	r0, [r0, #52]	; 0x34
   297fc:	ubfx	r0, r0, #6, #1
   29800:	and	r0, r0, #255	; 0xff
   29804:	cmp	r0, #0
   29808:	beq	29858 <__assert_fail@plt+0x18104>
   2980c:	ldr	r0, [fp, #-12]
   29810:	ldr	r1, [fp, #-16]
   29814:	add	r1, r1, #4
   29818:	bl	28d14 <__assert_fail@plt+0x175c0>
   2981c:	ldr	r1, [fp, #-8]
   29820:	str	r0, [r1]
   29824:	ldr	r0, [fp, #-8]
   29828:	ldr	r0, [r0]
   2982c:	cmp	r0, #0
   29830:	beq	29840 <__assert_fail@plt+0x180ec>
   29834:	movw	r0, #0
   29838:	str	r0, [fp, #-4]
   2983c:	b	29864 <__assert_fail@plt+0x18110>
   29840:	ldr	r0, [fp, #-12]
   29844:	ldr	r0, [r0, #100]	; 0x64
   29848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2984c:	add	r0, r0, r1, lsl #2
   29850:	ldr	r0, [r0]
   29854:	str	r0, [fp, #-16]
   29858:	b	2985c <__assert_fail@plt+0x18108>
   2985c:	ldr	r0, [fp, #-16]
   29860:	str	r0, [fp, #-4]
   29864:	ldr	r0, [fp, #-4]
   29868:	mov	sp, fp
   2986c:	pop	{fp, pc}
   29870:	push	{fp, lr}
   29874:	mov	fp, sp
   29878:	sub	sp, sp, #32
   2987c:	str	r0, [fp, #-8]
   29880:	str	r1, [fp, #-12]
   29884:	ldr	r0, [fp, #-12]
   29888:	ldr	r0, [r0, #104]	; 0x68
   2988c:	str	r0, [sp, #12]
   29890:	ldr	r0, [fp, #-12]
   29894:	ldr	r0, [r0, #40]	; 0x28
   29898:	str	r0, [sp, #8]
   2989c:	ldr	r0, [sp, #8]
   298a0:	add	r0, r0, #1
   298a4:	str	r0, [sp, #8]
   298a8:	ldr	r1, [sp, #12]
   298ac:	cmp	r0, r1
   298b0:	ble	298c0 <__assert_fail@plt+0x1816c>
   298b4:	movw	r0, #0
   298b8:	str	r0, [fp, #-4]
   298bc:	b	29948 <__assert_fail@plt+0x181f4>
   298c0:	ldr	r0, [fp, #-12]
   298c4:	ldr	r1, [r0, #40]	; 0x28
   298c8:	add	r1, r1, #1
   298cc:	str	r1, [r0, #40]	; 0x28
   298d0:	ldr	r0, [fp, #-12]
   298d4:	ldr	r0, [r0, #100]	; 0x64
   298d8:	ldr	r1, [sp, #8]
   298dc:	add	r0, r0, r1, lsl #2
   298e0:	ldr	r0, [r0]
   298e4:	movw	r1, #0
   298e8:	cmp	r0, r1
   298ec:	beq	2989c <__assert_fail@plt+0x18148>
   298f0:	ldr	r0, [fp, #-8]
   298f4:	ldr	r1, [fp, #-12]
   298f8:	movw	r2, #0
   298fc:	bl	295f4 <__assert_fail@plt+0x17ea0>
   29900:	str	r0, [sp, #16]
   29904:	ldr	r0, [fp, #-8]
   29908:	ldr	r0, [r0]
   2990c:	cmp	r0, #0
   29910:	movw	r0, #0
   29914:	str	r0, [sp, #4]
   29918:	bne	29934 <__assert_fail@plt+0x181e0>
   2991c:	ldr	r0, [sp, #16]
   29920:	movw	r1, #0
   29924:	cmp	r0, r1
   29928:	movw	r0, #0
   2992c:	moveq	r0, #1
   29930:	str	r0, [sp, #4]
   29934:	ldr	r0, [sp, #4]
   29938:	tst	r0, #1
   2993c:	bne	29884 <__assert_fail@plt+0x18130>
   29940:	ldr	r0, [sp, #16]
   29944:	str	r0, [fp, #-4]
   29948:	ldr	r0, [fp, #-4]
   2994c:	mov	sp, fp
   29950:	pop	{fp, pc}
   29954:	push	{fp, lr}
   29958:	mov	fp, sp
   2995c:	sub	sp, sp, #24
   29960:	str	r0, [fp, #-8]
   29964:	str	r1, [sp, #12]
   29968:	str	r2, [sp, #8]
   2996c:	ldr	r0, [fp, #-8]
   29970:	ldr	r0, [r0, #132]	; 0x84
   29974:	movw	r1, #0
   29978:	cmp	r0, r1
   2997c:	beq	29984 <__assert_fail@plt+0x18230>
   29980:	b	29984 <__assert_fail@plt+0x18230>
   29984:	ldr	r0, [fp, #-8]
   29988:	ldr	r0, [r0, #128]	; 0x80
   2998c:	cmp	r0, #0
   29990:	ble	29998 <__assert_fail@plt+0x18244>
   29994:	b	29998 <__assert_fail@plt+0x18244>
   29998:	ldr	r0, [fp, #-8]
   2999c:	ldr	r0, [r0, #124]	; 0x7c
   299a0:	ldr	r1, [fp, #-8]
   299a4:	ldr	r1, [r1, #128]	; 0x80
   299a8:	cmp	r0, r1
   299ac:	bne	29a0c <__assert_fail@plt+0x182b8>
   299b0:	ldr	r0, [fp, #-8]
   299b4:	ldr	r0, [r0, #128]	; 0x80
   299b8:	lsl	r0, r0, #1
   299bc:	str	r0, [sp, #4]
   299c0:	ldr	r0, [fp, #-8]
   299c4:	ldr	r0, [r0, #132]	; 0x84
   299c8:	ldr	r1, [sp, #4]
   299cc:	lsl	r1, r1, #2
   299d0:	bl	38aec <__assert_fail@plt+0x27398>
   299d4:	str	r0, [sp]
   299d8:	ldr	r0, [sp]
   299dc:	movw	r1, #0
   299e0:	cmp	r0, r1
   299e4:	bne	299f4 <__assert_fail@plt+0x182a0>
   299e8:	movw	r0, #12
   299ec:	str	r0, [fp, #-4]
   299f0:	b	29a98 <__assert_fail@plt+0x18344>
   299f4:	ldr	r0, [sp]
   299f8:	ldr	r1, [fp, #-8]
   299fc:	str	r0, [r1, #132]	; 0x84
   29a00:	ldr	r0, [sp, #4]
   29a04:	ldr	r1, [fp, #-8]
   29a08:	str	r0, [r1, #128]	; 0x80
   29a0c:	mov	r0, #1
   29a10:	mov	r1, #24
   29a14:	bl	389e0 <__assert_fail@plt+0x2728c>
   29a18:	ldr	r1, [fp, #-8]
   29a1c:	ldr	lr, [r1, #124]	; 0x7c
   29a20:	ldr	r1, [r1, #132]	; 0x84
   29a24:	str	r0, [r1, lr, lsl #2]
   29a28:	ldr	r0, [fp, #-8]
   29a2c:	ldr	r1, [r0, #124]	; 0x7c
   29a30:	ldr	r0, [r0, #132]	; 0x84
   29a34:	add	r0, r0, r1, lsl #2
   29a38:	ldr	r0, [r0]
   29a3c:	movw	r1, #0
   29a40:	cmp	r0, r1
   29a44:	bne	29a54 <__assert_fail@plt+0x18300>
   29a48:	movw	r0, #12
   29a4c:	str	r0, [fp, #-4]
   29a50:	b	29a98 <__assert_fail@plt+0x18344>
   29a54:	ldr	r0, [sp, #12]
   29a58:	ldr	r1, [fp, #-8]
   29a5c:	ldr	r2, [r1, #124]	; 0x7c
   29a60:	ldr	r1, [r1, #132]	; 0x84
   29a64:	ldr	r1, [r1, r2, lsl #2]
   29a68:	str	r0, [r1, #4]
   29a6c:	ldr	r0, [sp, #8]
   29a70:	ldr	r1, [fp, #-8]
   29a74:	ldr	r2, [r1, #124]	; 0x7c
   29a78:	ldr	r3, [r1, #132]	; 0x84
   29a7c:	add	ip, r2, #1
   29a80:	str	ip, [r1, #124]	; 0x7c
   29a84:	add	r1, r3, r2, lsl #2
   29a88:	ldr	r1, [r1]
   29a8c:	str	r0, [r1]
   29a90:	movw	r0, #0
   29a94:	str	r0, [fp, #-4]
   29a98:	ldr	r0, [fp, #-4]
   29a9c:	mov	sp, fp
   29aa0:	pop	{fp, pc}
   29aa4:	push	{fp, lr}
   29aa8:	mov	fp, sp
   29aac:	sub	sp, sp, #96	; 0x60
   29ab0:	str	r0, [fp, #-8]
   29ab4:	str	r1, [fp, #-12]
   29ab8:	str	r2, [fp, #-16]
   29abc:	ldr	r0, [fp, #-8]
   29ac0:	ldr	r0, [r0, #84]	; 0x54
   29ac4:	str	r0, [fp, #-20]	; 0xffffffec
   29ac8:	ldr	r0, [fp, #-8]
   29acc:	ldr	r0, [r0, #4]
   29ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   29ad4:	ldr	r0, [fp, #-8]
   29ad8:	ldr	r1, [fp, #-16]
   29adc:	bl	2a38c <__assert_fail@plt+0x18c38>
   29ae0:	str	r0, [fp, #-36]	; 0xffffffdc
   29ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29ae8:	cmn	r0, #1
   29aec:	beq	29b4c <__assert_fail@plt+0x183f8>
   29af0:	ldr	r0, [fp, #-8]
   29af4:	ldr	r0, [r0, #116]	; 0x74
   29af8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29afc:	movw	r2, #24
   29b00:	mul	r1, r1, r2
   29b04:	add	r0, r0, r1
   29b08:	str	r0, [fp, #-40]	; 0xffffffd8
   29b0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29b10:	ldr	r0, [r0]
   29b14:	ldr	r1, [fp, #-12]
   29b18:	cmp	r0, r1
   29b1c:	bne	29b2c <__assert_fail@plt+0x183d8>
   29b20:	movw	r0, #0
   29b24:	str	r0, [fp, #-4]
   29b28:	b	2a034 <__assert_fail@plt+0x188e0>
   29b2c:	b	29b30 <__assert_fail@plt+0x183dc>
   29b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29b34:	add	r1, r0, #24
   29b38:	str	r1, [fp, #-40]	; 0xffffffd8
   29b3c:	ldrsb	r0, [r0, #20]
   29b40:	cmp	r0, #0
   29b44:	bne	29b0c <__assert_fail@plt+0x183b8>
   29b48:	b	29b4c <__assert_fail@plt+0x183f8>
   29b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29b50:	ldr	r0, [r0]
   29b54:	ldr	r1, [fp, #-12]
   29b58:	add	r0, r0, r1, lsl #3
   29b5c:	ldr	r0, [r0]
   29b60:	str	r0, [fp, #-24]	; 0xffffffe8
   29b64:	movw	r0, #0
   29b68:	str	r0, [fp, #-28]	; 0xffffffe4
   29b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29b70:	ldr	r1, [fp, #-8]
   29b74:	ldr	r1, [r1, #124]	; 0x7c
   29b78:	cmp	r0, r1
   29b7c:	bge	2a02c <__assert_fail@plt+0x188d8>
   29b80:	ldr	r0, [fp, #-8]
   29b84:	ldr	r0, [r0, #132]	; 0x84
   29b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29b8c:	ldr	r0, [r0, r1, lsl #2]
   29b90:	str	r0, [sp, #48]	; 0x30
   29b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   29b98:	ldr	r0, [r0]
   29b9c:	ldr	r1, [sp, #48]	; 0x30
   29ba0:	ldr	r1, [r1, #4]
   29ba4:	add	r0, r0, r1, lsl #3
   29ba8:	ldr	r0, [r0]
   29bac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29bb0:	cmp	r0, r1
   29bb4:	beq	29bbc <__assert_fail@plt+0x18468>
   29bb8:	b	2a01c <__assert_fail@plt+0x188c8>
   29bbc:	ldr	r0, [sp, #48]	; 0x30
   29bc0:	ldr	r0, [r0]
   29bc4:	str	r0, [sp, #36]	; 0x24
   29bc8:	ldr	r0, [fp, #-16]
   29bcc:	str	r0, [sp, #32]
   29bd0:	movw	r0, #0
   29bd4:	str	r0, [sp, #40]	; 0x28
   29bd8:	ldr	r0, [sp, #40]	; 0x28
   29bdc:	ldr	r1, [sp, #48]	; 0x30
   29be0:	ldr	r1, [r1, #16]
   29be4:	cmp	r0, r1
   29be8:	bge	29d54 <__assert_fail@plt+0x18600>
   29bec:	ldr	r0, [sp, #48]	; 0x30
   29bf0:	ldr	r0, [r0, #20]
   29bf4:	ldr	r1, [sp, #40]	; 0x28
   29bf8:	add	r0, r0, r1, lsl #2
   29bfc:	ldr	r0, [r0]
   29c00:	str	r0, [sp, #44]	; 0x2c
   29c04:	ldr	r0, [sp, #44]	; 0x2c
   29c08:	ldr	r0, [r0, #4]
   29c0c:	ldr	r1, [sp, #36]	; 0x24
   29c10:	sub	r0, r0, r1
   29c14:	str	r0, [sp, #28]
   29c18:	ldr	r0, [sp, #28]
   29c1c:	cmp	r0, #0
   29c20:	ble	29ccc <__assert_fail@plt+0x18578>
   29c24:	ldr	r0, [sp, #32]
   29c28:	ldr	r1, [sp, #28]
   29c2c:	add	r0, r0, r1
   29c30:	ldr	r1, [fp, #-8]
   29c34:	ldr	r1, [r1, #28]
   29c38:	cmp	r0, r1
   29c3c:	ble	29c9c <__assert_fail@plt+0x18548>
   29c40:	ldr	r0, [sp, #32]
   29c44:	ldr	r1, [sp, #28]
   29c48:	add	r0, r0, r1
   29c4c:	ldr	r1, [fp, #-8]
   29c50:	ldr	r1, [r1, #48]	; 0x30
   29c54:	cmp	r0, r1
   29c58:	ble	29c60 <__assert_fail@plt+0x1850c>
   29c5c:	b	29d54 <__assert_fail@plt+0x18600>
   29c60:	ldr	r0, [fp, #-8]
   29c64:	ldr	r1, [sp, #32]
   29c68:	ldr	r2, [sp, #28]
   29c6c:	add	r1, r1, r2
   29c70:	bl	2a474 <__assert_fail@plt+0x18d20>
   29c74:	str	r0, [fp, #-44]	; 0xffffffd4
   29c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c7c:	cmp	r0, #0
   29c80:	beq	29c90 <__assert_fail@plt+0x1853c>
   29c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c88:	str	r0, [fp, #-4]
   29c8c:	b	2a034 <__assert_fail@plt+0x188e0>
   29c90:	ldr	r0, [fp, #-8]
   29c94:	ldr	r0, [r0, #4]
   29c98:	str	r0, [fp, #-32]	; 0xffffffe0
   29c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ca0:	ldr	r1, [sp, #32]
   29ca4:	add	r0, r0, r1
   29ca8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29cac:	ldr	r2, [sp, #36]	; 0x24
   29cb0:	add	r1, r1, r2
   29cb4:	ldr	r2, [sp, #28]
   29cb8:	bl	114cc <memcmp@plt>
   29cbc:	cmp	r0, #0
   29cc0:	beq	29cc8 <__assert_fail@plt+0x18574>
   29cc4:	b	29d54 <__assert_fail@plt+0x18600>
   29cc8:	b	29ccc <__assert_fail@plt+0x18578>
   29ccc:	ldr	r0, [sp, #28]
   29cd0:	ldr	r1, [sp, #32]
   29cd4:	add	r0, r1, r0
   29cd8:	str	r0, [sp, #32]
   29cdc:	ldr	r0, [sp, #28]
   29ce0:	ldr	r1, [sp, #36]	; 0x24
   29ce4:	add	r0, r1, r0
   29ce8:	str	r0, [sp, #36]	; 0x24
   29cec:	ldr	r0, [fp, #-8]
   29cf0:	ldr	r1, [sp, #48]	; 0x30
   29cf4:	ldr	r2, [sp, #44]	; 0x2c
   29cf8:	ldr	r3, [fp, #-12]
   29cfc:	ldr	ip, [fp, #-16]
   29d00:	str	ip, [sp]
   29d04:	bl	2a590 <__assert_fail@plt+0x18e3c>
   29d08:	str	r0, [fp, #-44]	; 0xffffffd4
   29d0c:	ldr	r0, [fp, #-8]
   29d10:	ldr	r0, [r0, #4]
   29d14:	str	r0, [fp, #-32]	; 0xffffffe0
   29d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d1c:	cmp	r0, #1
   29d20:	bne	29d28 <__assert_fail@plt+0x185d4>
   29d24:	b	29d44 <__assert_fail@plt+0x185f0>
   29d28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d2c:	cmp	r0, #0
   29d30:	beq	29d40 <__assert_fail@plt+0x185ec>
   29d34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d38:	str	r0, [fp, #-4]
   29d3c:	b	2a034 <__assert_fail@plt+0x188e0>
   29d40:	b	29d44 <__assert_fail@plt+0x185f0>
   29d44:	ldr	r0, [sp, #40]	; 0x28
   29d48:	add	r0, r0, #1
   29d4c:	str	r0, [sp, #40]	; 0x28
   29d50:	b	29bd8 <__assert_fail@plt+0x18484>
   29d54:	ldr	r0, [sp, #40]	; 0x28
   29d58:	ldr	r1, [sp, #48]	; 0x30
   29d5c:	ldr	r1, [r1, #16]
   29d60:	cmp	r0, r1
   29d64:	bge	29d6c <__assert_fail@plt+0x18618>
   29d68:	b	2a01c <__assert_fail@plt+0x188c8>
   29d6c:	ldr	r0, [sp, #40]	; 0x28
   29d70:	cmp	r0, #0
   29d74:	ble	29d84 <__assert_fail@plt+0x18630>
   29d78:	ldr	r0, [sp, #36]	; 0x24
   29d7c:	add	r0, r0, #1
   29d80:	str	r0, [sp, #36]	; 0x24
   29d84:	b	29d88 <__assert_fail@plt+0x18634>
   29d88:	ldr	r0, [sp, #36]	; 0x24
   29d8c:	ldr	r1, [fp, #-16]
   29d90:	cmp	r0, r1
   29d94:	bgt	2a018 <__assert_fail@plt+0x188c4>
   29d98:	ldr	r0, [sp, #36]	; 0x24
   29d9c:	ldr	r1, [sp, #48]	; 0x30
   29da0:	ldr	r1, [r1]
   29da4:	sub	r0, r0, r1
   29da8:	str	r0, [sp, #20]
   29dac:	ldr	r0, [sp, #20]
   29db0:	cmp	r0, #0
   29db4:	ble	29e58 <__assert_fail@plt+0x18704>
   29db8:	ldr	r0, [sp, #32]
   29dbc:	ldr	r1, [fp, #-8]
   29dc0:	ldr	r1, [r1, #28]
   29dc4:	cmp	r0, r1
   29dc8:	blt	29e1c <__assert_fail@plt+0x186c8>
   29dcc:	ldr	r0, [sp, #32]
   29dd0:	ldr	r1, [fp, #-8]
   29dd4:	ldr	r1, [r1, #48]	; 0x30
   29dd8:	cmp	r0, r1
   29ddc:	blt	29de4 <__assert_fail@plt+0x18690>
   29de0:	b	2a018 <__assert_fail@plt+0x188c4>
   29de4:	ldr	r0, [fp, #-8]
   29de8:	ldr	r1, [sp, #32]
   29dec:	add	r1, r1, #1
   29df0:	bl	29250 <__assert_fail@plt+0x17afc>
   29df4:	str	r0, [fp, #-44]	; 0xffffffd4
   29df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29dfc:	cmp	r0, #0
   29e00:	beq	29e10 <__assert_fail@plt+0x186bc>
   29e04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e08:	str	r0, [fp, #-4]
   29e0c:	b	2a034 <__assert_fail@plt+0x188e0>
   29e10:	ldr	r0, [fp, #-8]
   29e14:	ldr	r0, [r0, #4]
   29e18:	str	r0, [fp, #-32]	; 0xffffffe0
   29e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e20:	ldr	r1, [sp, #32]
   29e24:	add	r2, r1, #1
   29e28:	str	r2, [sp, #32]
   29e2c:	add	r0, r0, r1
   29e30:	ldrb	r0, [r0]
   29e34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29e38:	ldr	r2, [sp, #36]	; 0x24
   29e3c:	sub	r2, r2, #1
   29e40:	add	r1, r1, r2
   29e44:	ldrb	r1, [r1]
   29e48:	cmp	r0, r1
   29e4c:	beq	29e54 <__assert_fail@plt+0x18700>
   29e50:	b	2a018 <__assert_fail@plt+0x188c4>
   29e54:	b	29e58 <__assert_fail@plt+0x18704>
   29e58:	ldr	r0, [fp, #-8]
   29e5c:	ldr	r0, [r0, #100]	; 0x64
   29e60:	ldr	r1, [sp, #36]	; 0x24
   29e64:	add	r0, r0, r1, lsl #2
   29e68:	ldr	r0, [r0]
   29e6c:	movw	r1, #0
   29e70:	cmp	r0, r1
   29e74:	bne	29e7c <__assert_fail@plt+0x18728>
   29e78:	b	2a008 <__assert_fail@plt+0x188b4>
   29e7c:	ldr	r0, [fp, #-8]
   29e80:	ldr	r0, [r0, #100]	; 0x64
   29e84:	ldr	r1, [sp, #36]	; 0x24
   29e88:	add	r0, r0, r1, lsl #2
   29e8c:	ldr	r0, [r0]
   29e90:	add	r0, r0, #4
   29e94:	str	r0, [sp, #16]
   29e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   29e9c:	ldr	r1, [sp, #16]
   29ea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29ea4:	movw	r3, #9
   29ea8:	bl	2a684 <__assert_fail@plt+0x18f30>
   29eac:	str	r0, [sp, #24]
   29eb0:	ldr	r0, [sp, #24]
   29eb4:	cmn	r0, #1
   29eb8:	bne	29ec0 <__assert_fail@plt+0x1876c>
   29ebc:	b	2a008 <__assert_fail@plt+0x188b4>
   29ec0:	ldr	r0, [sp, #48]	; 0x30
   29ec4:	ldr	r0, [r0, #8]
   29ec8:	movw	r1, #0
   29ecc:	cmp	r0, r1
   29ed0:	bne	29f1c <__assert_fail@plt+0x187c8>
   29ed4:	ldr	r0, [sp, #36]	; 0x24
   29ed8:	ldr	r1, [sp, #48]	; 0x30
   29edc:	ldr	r1, [r1]
   29ee0:	sub	r0, r0, r1
   29ee4:	add	r1, r0, #1
   29ee8:	movw	r0, #12
   29eec:	bl	389e0 <__assert_fail@plt+0x2728c>
   29ef0:	ldr	r1, [sp, #48]	; 0x30
   29ef4:	str	r0, [r1, #8]
   29ef8:	ldr	r0, [sp, #48]	; 0x30
   29efc:	ldr	r0, [r0, #8]
   29f00:	movw	r1, #0
   29f04:	cmp	r0, r1
   29f08:	bne	29f18 <__assert_fail@plt+0x187c4>
   29f0c:	movw	r0, #12
   29f10:	str	r0, [fp, #-4]
   29f14:	b	2a034 <__assert_fail@plt+0x188e0>
   29f18:	b	29f1c <__assert_fail@plt+0x187c8>
   29f1c:	ldr	r0, [fp, #-8]
   29f20:	ldr	r1, [sp, #48]	; 0x30
   29f24:	ldr	r1, [r1, #8]
   29f28:	ldr	r2, [sp, #48]	; 0x30
   29f2c:	ldr	r2, [r2, #4]
   29f30:	ldr	r3, [sp, #48]	; 0x30
   29f34:	ldr	r3, [r3]
   29f38:	ldr	ip, [sp, #24]
   29f3c:	ldr	lr, [sp, #36]	; 0x24
   29f40:	str	ip, [sp]
   29f44:	str	lr, [sp, #4]
   29f48:	movw	ip, #9
   29f4c:	str	ip, [sp, #8]
   29f50:	bl	2a73c <__assert_fail@plt+0x18fe8>
   29f54:	str	r0, [fp, #-44]	; 0xffffffd4
   29f58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f5c:	cmp	r0, #1
   29f60:	bne	29f68 <__assert_fail@plt+0x18814>
   29f64:	b	2a008 <__assert_fail@plt+0x188b4>
   29f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f6c:	cmp	r0, #0
   29f70:	beq	29f80 <__assert_fail@plt+0x1882c>
   29f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f78:	str	r0, [fp, #-4]
   29f7c:	b	2a034 <__assert_fail@plt+0x188e0>
   29f80:	ldr	r0, [sp, #48]	; 0x30
   29f84:	ldr	r1, [sp, #24]
   29f88:	ldr	r2, [sp, #36]	; 0x24
   29f8c:	bl	2ae80 <__assert_fail@plt+0x1972c>
   29f90:	str	r0, [sp, #44]	; 0x2c
   29f94:	ldr	r0, [sp, #44]	; 0x2c
   29f98:	movw	r1, #0
   29f9c:	cmp	r0, r1
   29fa0:	bne	29fb0 <__assert_fail@plt+0x1885c>
   29fa4:	movw	r0, #12
   29fa8:	str	r0, [fp, #-4]
   29fac:	b	2a034 <__assert_fail@plt+0x188e0>
   29fb0:	ldr	r0, [fp, #-8]
   29fb4:	ldr	r1, [sp, #48]	; 0x30
   29fb8:	ldr	r2, [sp, #44]	; 0x2c
   29fbc:	ldr	r3, [fp, #-12]
   29fc0:	ldr	ip, [fp, #-16]
   29fc4:	str	ip, [sp]
   29fc8:	bl	2a590 <__assert_fail@plt+0x18e3c>
   29fcc:	str	r0, [fp, #-44]	; 0xffffffd4
   29fd0:	ldr	r0, [fp, #-8]
   29fd4:	ldr	r0, [r0, #4]
   29fd8:	str	r0, [fp, #-32]	; 0xffffffe0
   29fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29fe0:	cmp	r0, #1
   29fe4:	bne	29fec <__assert_fail@plt+0x18898>
   29fe8:	b	2a008 <__assert_fail@plt+0x188b4>
   29fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29ff0:	cmp	r0, #0
   29ff4:	beq	2a004 <__assert_fail@plt+0x188b0>
   29ff8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29ffc:	str	r0, [fp, #-4]
   2a000:	b	2a034 <__assert_fail@plt+0x188e0>
   2a004:	b	2a008 <__assert_fail@plt+0x188b4>
   2a008:	ldr	r0, [sp, #36]	; 0x24
   2a00c:	add	r0, r0, #1
   2a010:	str	r0, [sp, #36]	; 0x24
   2a014:	b	29d88 <__assert_fail@plt+0x18634>
   2a018:	b	2a01c <__assert_fail@plt+0x188c8>
   2a01c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a020:	add	r0, r0, #1
   2a024:	str	r0, [fp, #-28]	; 0xffffffe4
   2a028:	b	29b6c <__assert_fail@plt+0x18418>
   2a02c:	movw	r0, #0
   2a030:	str	r0, [fp, #-4]
   2a034:	ldr	r0, [fp, #-4]
   2a038:	mov	sp, fp
   2a03c:	pop	{fp, pc}
   2a040:	push	{fp, lr}
   2a044:	mov	fp, sp
   2a048:	sub	sp, sp, #32
   2a04c:	str	r0, [fp, #-8]
   2a050:	str	r1, [fp, #-12]
   2a054:	str	r2, [sp, #16]
   2a058:	ldr	r0, [fp, #-12]
   2a05c:	movw	r1, #0
   2a060:	cmp	r0, r1
   2a064:	beq	2a0f0 <__assert_fail@plt+0x1899c>
   2a068:	ldr	r0, [fp, #-12]
   2a06c:	ldr	r0, [r0, #4]
   2a070:	cmp	r0, #0
   2a074:	ble	2a0f0 <__assert_fail@plt+0x1899c>
   2a078:	ldr	r0, [sp, #16]
   2a07c:	movw	r1, #0
   2a080:	cmp	r0, r1
   2a084:	beq	2a0f0 <__assert_fail@plt+0x1899c>
   2a088:	ldr	r0, [sp, #16]
   2a08c:	ldr	r0, [r0, #4]
   2a090:	cmp	r0, #0
   2a094:	ble	2a0f0 <__assert_fail@plt+0x1899c>
   2a098:	ldr	r0, [fp, #-12]
   2a09c:	ldr	r0, [r0, #4]
   2a0a0:	ldr	r1, [sp, #16]
   2a0a4:	ldr	r1, [r1, #4]
   2a0a8:	add	r0, r0, r1
   2a0ac:	ldr	r1, [fp, #-8]
   2a0b0:	str	r0, [r1]
   2a0b4:	ldr	r0, [fp, #-8]
   2a0b8:	ldr	r0, [r0]
   2a0bc:	lsl	r0, r0, #2
   2a0c0:	bl	38a7c <__assert_fail@plt+0x27328>
   2a0c4:	ldr	r1, [fp, #-8]
   2a0c8:	str	r0, [r1, #8]
   2a0cc:	ldr	r0, [fp, #-8]
   2a0d0:	ldr	r0, [r0, #8]
   2a0d4:	movw	r1, #0
   2a0d8:	cmp	r0, r1
   2a0dc:	bne	2a0ec <__assert_fail@plt+0x18998>
   2a0e0:	movw	r0, #12
   2a0e4:	str	r0, [fp, #-4]
   2a0e8:	b	2a380 <__assert_fail@plt+0x18c2c>
   2a0ec:	b	2a17c <__assert_fail@plt+0x18a28>
   2a0f0:	ldr	r0, [fp, #-12]
   2a0f4:	movw	r1, #0
   2a0f8:	cmp	r0, r1
   2a0fc:	beq	2a124 <__assert_fail@plt+0x189d0>
   2a100:	ldr	r0, [fp, #-12]
   2a104:	ldr	r0, [r0, #4]
   2a108:	cmp	r0, #0
   2a10c:	ble	2a124 <__assert_fail@plt+0x189d0>
   2a110:	ldr	r0, [fp, #-8]
   2a114:	ldr	r1, [fp, #-12]
   2a118:	bl	25e30 <__assert_fail@plt+0x146dc>
   2a11c:	str	r0, [fp, #-4]
   2a120:	b	2a380 <__assert_fail@plt+0x18c2c>
   2a124:	ldr	r0, [sp, #16]
   2a128:	movw	r1, #0
   2a12c:	cmp	r0, r1
   2a130:	beq	2a158 <__assert_fail@plt+0x18a04>
   2a134:	ldr	r0, [sp, #16]
   2a138:	ldr	r0, [r0, #4]
   2a13c:	cmp	r0, #0
   2a140:	ble	2a158 <__assert_fail@plt+0x18a04>
   2a144:	ldr	r0, [fp, #-8]
   2a148:	ldr	r1, [sp, #16]
   2a14c:	bl	25e30 <__assert_fail@plt+0x146dc>
   2a150:	str	r0, [fp, #-4]
   2a154:	b	2a380 <__assert_fail@plt+0x18c2c>
   2a158:	ldr	r0, [fp, #-8]
   2a15c:	movw	r1, #0
   2a160:	and	r1, r1, #255	; 0xff
   2a164:	movw	r2, #12
   2a168:	bl	11658 <memset@plt>
   2a16c:	b	2a170 <__assert_fail@plt+0x18a1c>
   2a170:	movw	r0, #0
   2a174:	str	r0, [fp, #-4]
   2a178:	b	2a380 <__assert_fail@plt+0x18c2c>
   2a17c:	movw	r0, #0
   2a180:	str	r0, [sp, #4]
   2a184:	str	r0, [sp, #8]
   2a188:	str	r0, [sp, #12]
   2a18c:	ldr	r0, [sp, #12]
   2a190:	ldr	r1, [fp, #-12]
   2a194:	ldr	r1, [r1, #4]
   2a198:	cmp	r0, r1
   2a19c:	movw	r0, #0
   2a1a0:	str	r0, [sp]
   2a1a4:	bge	2a1c4 <__assert_fail@plt+0x18a70>
   2a1a8:	ldr	r0, [sp, #8]
   2a1ac:	ldr	r1, [sp, #16]
   2a1b0:	ldr	r1, [r1, #4]
   2a1b4:	cmp	r0, r1
   2a1b8:	movw	r0, #0
   2a1bc:	movlt	r0, #1
   2a1c0:	str	r0, [sp]
   2a1c4:	ldr	r0, [sp]
   2a1c8:	tst	r0, #1
   2a1cc:	beq	2a2a4 <__assert_fail@plt+0x18b50>
   2a1d0:	ldr	r0, [fp, #-12]
   2a1d4:	ldr	r0, [r0, #8]
   2a1d8:	ldr	r1, [sp, #12]
   2a1dc:	ldr	r0, [r0, r1, lsl #2]
   2a1e0:	ldr	r1, [sp, #16]
   2a1e4:	ldr	r1, [r1, #8]
   2a1e8:	ldr	r2, [sp, #8]
   2a1ec:	add	r1, r1, r2, lsl #2
   2a1f0:	ldr	r1, [r1]
   2a1f4:	cmp	r0, r1
   2a1f8:	ble	2a234 <__assert_fail@plt+0x18ae0>
   2a1fc:	ldr	r0, [sp, #16]
   2a200:	ldr	r0, [r0, #8]
   2a204:	ldr	r1, [sp, #8]
   2a208:	add	r2, r1, #1
   2a20c:	str	r2, [sp, #8]
   2a210:	ldr	r0, [r0, r1, lsl #2]
   2a214:	ldr	r1, [fp, #-8]
   2a218:	ldr	r1, [r1, #8]
   2a21c:	ldr	r2, [sp, #4]
   2a220:	add	r3, r2, #1
   2a224:	str	r3, [sp, #4]
   2a228:	add	r1, r1, r2, lsl #2
   2a22c:	str	r0, [r1]
   2a230:	b	2a18c <__assert_fail@plt+0x18a38>
   2a234:	ldr	r0, [fp, #-12]
   2a238:	ldr	r0, [r0, #8]
   2a23c:	ldr	r1, [sp, #12]
   2a240:	ldr	r0, [r0, r1, lsl #2]
   2a244:	ldr	r1, [sp, #16]
   2a248:	ldr	r1, [r1, #8]
   2a24c:	ldr	r2, [sp, #8]
   2a250:	add	r1, r1, r2, lsl #2
   2a254:	ldr	r1, [r1]
   2a258:	cmp	r0, r1
   2a25c:	bne	2a26c <__assert_fail@plt+0x18b18>
   2a260:	ldr	r0, [sp, #8]
   2a264:	add	r0, r0, #1
   2a268:	str	r0, [sp, #8]
   2a26c:	ldr	r0, [fp, #-12]
   2a270:	ldr	r0, [r0, #8]
   2a274:	ldr	r1, [sp, #12]
   2a278:	add	r2, r1, #1
   2a27c:	str	r2, [sp, #12]
   2a280:	ldr	r0, [r0, r1, lsl #2]
   2a284:	ldr	r1, [fp, #-8]
   2a288:	ldr	r1, [r1, #8]
   2a28c:	ldr	r2, [sp, #4]
   2a290:	add	r3, r2, #1
   2a294:	str	r3, [sp, #4]
   2a298:	add	r1, r1, r2, lsl #2
   2a29c:	str	r0, [r1]
   2a2a0:	b	2a18c <__assert_fail@plt+0x18a38>
   2a2a4:	ldr	r0, [sp, #12]
   2a2a8:	ldr	r1, [fp, #-12]
   2a2ac:	ldr	r1, [r1, #4]
   2a2b0:	cmp	r0, r1
   2a2b4:	bge	2a308 <__assert_fail@plt+0x18bb4>
   2a2b8:	ldr	r0, [fp, #-8]
   2a2bc:	ldr	r0, [r0, #8]
   2a2c0:	ldr	r1, [sp, #4]
   2a2c4:	add	r0, r0, r1, lsl #2
   2a2c8:	ldr	r1, [fp, #-12]
   2a2cc:	ldr	r2, [r1, #4]
   2a2d0:	ldr	r1, [r1, #8]
   2a2d4:	ldr	r3, [sp, #12]
   2a2d8:	add	r1, r1, r3, lsl #2
   2a2dc:	sub	r2, r2, r3
   2a2e0:	lsl	r2, r2, #2
   2a2e4:	bl	11478 <memcpy@plt>
   2a2e8:	ldr	r0, [fp, #-12]
   2a2ec:	ldr	r0, [r0, #4]
   2a2f0:	ldr	r1, [sp, #12]
   2a2f4:	sub	r0, r0, r1
   2a2f8:	ldr	r1, [sp, #4]
   2a2fc:	add	r0, r1, r0
   2a300:	str	r0, [sp, #4]
   2a304:	b	2a36c <__assert_fail@plt+0x18c18>
   2a308:	ldr	r0, [sp, #8]
   2a30c:	ldr	r1, [sp, #16]
   2a310:	ldr	r1, [r1, #4]
   2a314:	cmp	r0, r1
   2a318:	bge	2a368 <__assert_fail@plt+0x18c14>
   2a31c:	ldr	r0, [fp, #-8]
   2a320:	ldr	r0, [r0, #8]
   2a324:	ldr	r1, [sp, #4]
   2a328:	add	r0, r0, r1, lsl #2
   2a32c:	ldr	r1, [sp, #16]
   2a330:	ldr	r2, [r1, #4]
   2a334:	ldr	r1, [r1, #8]
   2a338:	ldr	r3, [sp, #8]
   2a33c:	add	r1, r1, r3, lsl #2
   2a340:	sub	r2, r2, r3
   2a344:	lsl	r2, r2, #2
   2a348:	bl	11478 <memcpy@plt>
   2a34c:	ldr	r0, [sp, #16]
   2a350:	ldr	r0, [r0, #4]
   2a354:	ldr	r1, [sp, #8]
   2a358:	sub	r0, r0, r1
   2a35c:	ldr	r1, [sp, #4]
   2a360:	add	r0, r1, r0
   2a364:	str	r0, [sp, #4]
   2a368:	b	2a36c <__assert_fail@plt+0x18c18>
   2a36c:	ldr	r0, [sp, #4]
   2a370:	ldr	r1, [fp, #-8]
   2a374:	str	r0, [r1, #4]
   2a378:	movw	r0, #0
   2a37c:	str	r0, [fp, #-4]
   2a380:	ldr	r0, [fp, #-4]
   2a384:	mov	sp, fp
   2a388:	pop	{fp, pc}
   2a38c:	sub	sp, sp, #28
   2a390:	str	r0, [sp, #20]
   2a394:	str	r1, [sp, #16]
   2a398:	ldr	r0, [sp, #20]
   2a39c:	ldr	r0, [r0, #108]	; 0x6c
   2a3a0:	str	r0, [sp, #8]
   2a3a4:	str	r0, [sp]
   2a3a8:	movw	r0, #0
   2a3ac:	str	r0, [sp, #12]
   2a3b0:	ldr	r0, [sp, #12]
   2a3b4:	ldr	r1, [sp, #8]
   2a3b8:	cmp	r0, r1
   2a3bc:	bge	2a41c <__assert_fail@plt+0x18cc8>
   2a3c0:	ldr	r0, [sp, #12]
   2a3c4:	ldr	r1, [sp, #8]
   2a3c8:	add	r0, r0, r1
   2a3cc:	movw	r1, #2
   2a3d0:	sdiv	r0, r0, r1
   2a3d4:	str	r0, [sp, #4]
   2a3d8:	ldr	r0, [sp, #20]
   2a3dc:	ldr	r0, [r0, #116]	; 0x74
   2a3e0:	ldr	r1, [sp, #4]
   2a3e4:	movw	r2, #24
   2a3e8:	mul	r1, r1, r2
   2a3ec:	add	r0, r0, r1
   2a3f0:	ldr	r0, [r0, #4]
   2a3f4:	ldr	r1, [sp, #16]
   2a3f8:	cmp	r0, r1
   2a3fc:	bge	2a410 <__assert_fail@plt+0x18cbc>
   2a400:	ldr	r0, [sp, #4]
   2a404:	add	r0, r0, #1
   2a408:	str	r0, [sp, #12]
   2a40c:	b	2a418 <__assert_fail@plt+0x18cc4>
   2a410:	ldr	r0, [sp, #4]
   2a414:	str	r0, [sp, #8]
   2a418:	b	2a3b0 <__assert_fail@plt+0x18c5c>
   2a41c:	ldr	r0, [sp, #12]
   2a420:	ldr	r1, [sp]
   2a424:	cmp	r0, r1
   2a428:	bge	2a460 <__assert_fail@plt+0x18d0c>
   2a42c:	ldr	r0, [sp, #20]
   2a430:	ldr	r0, [r0, #116]	; 0x74
   2a434:	ldr	r1, [sp, #12]
   2a438:	movw	r2, #24
   2a43c:	mul	r1, r1, r2
   2a440:	add	r0, r0, r1
   2a444:	ldr	r0, [r0, #4]
   2a448:	ldr	r1, [sp, #16]
   2a44c:	cmp	r0, r1
   2a450:	bne	2a460 <__assert_fail@plt+0x18d0c>
   2a454:	ldr	r0, [sp, #12]
   2a458:	str	r0, [sp, #24]
   2a45c:	b	2a468 <__assert_fail@plt+0x18d14>
   2a460:	mvn	r0, #0
   2a464:	str	r0, [sp, #24]
   2a468:	ldr	r0, [sp, #24]
   2a46c:	add	sp, sp, #28
   2a470:	bx	lr
   2a474:	push	{fp, lr}
   2a478:	mov	fp, sp
   2a47c:	sub	sp, sp, #24
   2a480:	str	r0, [fp, #-8]
   2a484:	str	r1, [sp, #12]
   2a488:	ldr	r0, [fp, #-8]
   2a48c:	ldr	r0, [r0, #104]	; 0x68
   2a490:	str	r0, [sp, #8]
   2a494:	ldr	r0, [sp, #12]
   2a498:	ldr	r1, [fp, #-8]
   2a49c:	ldr	r1, [r1, #36]	; 0x24
   2a4a0:	cmp	r0, r1
   2a4a4:	blt	2a4c0 <__assert_fail@plt+0x18d6c>
   2a4a8:	ldr	r0, [fp, #-8]
   2a4ac:	ldr	r0, [r0, #36]	; 0x24
   2a4b0:	ldr	r1, [fp, #-8]
   2a4b4:	ldr	r1, [r1, #48]	; 0x30
   2a4b8:	cmp	r0, r1
   2a4bc:	blt	2a4ec <__assert_fail@plt+0x18d98>
   2a4c0:	ldr	r0, [sp, #12]
   2a4c4:	ldr	r1, [fp, #-8]
   2a4c8:	ldr	r1, [r1, #28]
   2a4cc:	cmp	r0, r1
   2a4d0:	blt	2a51c <__assert_fail@plt+0x18dc8>
   2a4d4:	ldr	r0, [fp, #-8]
   2a4d8:	ldr	r0, [r0, #28]
   2a4dc:	ldr	r1, [fp, #-8]
   2a4e0:	ldr	r1, [r1, #48]	; 0x30
   2a4e4:	cmp	r0, r1
   2a4e8:	bge	2a51c <__assert_fail@plt+0x18dc8>
   2a4ec:	ldr	r0, [fp, #-8]
   2a4f0:	ldr	r1, [sp, #12]
   2a4f4:	add	r1, r1, #1
   2a4f8:	bl	29250 <__assert_fail@plt+0x17afc>
   2a4fc:	str	r0, [sp, #4]
   2a500:	ldr	r0, [sp, #4]
   2a504:	cmp	r0, #0
   2a508:	beq	2a518 <__assert_fail@plt+0x18dc4>
   2a50c:	ldr	r0, [sp, #4]
   2a510:	str	r0, [fp, #-4]
   2a514:	b	2a584 <__assert_fail@plt+0x18e30>
   2a518:	b	2a51c <__assert_fail@plt+0x18dc8>
   2a51c:	ldr	r0, [sp, #8]
   2a520:	ldr	r1, [sp, #12]
   2a524:	cmp	r0, r1
   2a528:	bge	2a57c <__assert_fail@plt+0x18e28>
   2a52c:	ldr	r0, [fp, #-8]
   2a530:	ldr	r0, [r0, #100]	; 0x64
   2a534:	movw	r1, #0
   2a538:	cmp	r0, r1
   2a53c:	beq	2a544 <__assert_fail@plt+0x18df0>
   2a540:	b	2a544 <__assert_fail@plt+0x18df0>
   2a544:	ldr	r0, [fp, #-8]
   2a548:	ldr	r0, [r0, #100]	; 0x64
   2a54c:	ldr	r1, [sp, #8]
   2a550:	add	r0, r0, r1, lsl #2
   2a554:	add	r0, r0, #4
   2a558:	ldr	r2, [sp, #12]
   2a55c:	sub	r1, r2, r1
   2a560:	lsl	r2, r1, #2
   2a564:	movw	r1, #0
   2a568:	and	r1, r1, #255	; 0xff
   2a56c:	bl	11658 <memset@plt>
   2a570:	ldr	r0, [sp, #12]
   2a574:	ldr	r1, [fp, #-8]
   2a578:	str	r0, [r1, #104]	; 0x68
   2a57c:	movw	r0, #0
   2a580:	str	r0, [fp, #-4]
   2a584:	ldr	r0, [fp, #-4]
   2a588:	mov	sp, fp
   2a58c:	pop	{fp, pc}
   2a590:	push	{r4, sl, fp, lr}
   2a594:	add	fp, sp, #8
   2a598:	sub	sp, sp, #48	; 0x30
   2a59c:	ldr	ip, [fp, #8]
   2a5a0:	str	r0, [fp, #-16]
   2a5a4:	str	r1, [fp, #-20]	; 0xffffffec
   2a5a8:	str	r2, [fp, #-24]	; 0xffffffe8
   2a5ac:	str	r3, [sp, #28]
   2a5b0:	ldr	r0, [fp, #-16]
   2a5b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a5b8:	add	r1, r1, #8
   2a5bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a5c0:	ldr	r2, [r2]
   2a5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a5c8:	ldr	r3, [r3, #4]
   2a5cc:	ldr	lr, [sp, #28]
   2a5d0:	ldr	r4, [fp, #8]
   2a5d4:	str	lr, [sp]
   2a5d8:	str	r4, [sp, #4]
   2a5dc:	movw	lr, #8
   2a5e0:	str	lr, [sp, #8]
   2a5e4:	str	ip, [sp, #16]
   2a5e8:	bl	2a73c <__assert_fail@plt+0x18fe8>
   2a5ec:	str	r0, [sp, #24]
   2a5f0:	ldr	r0, [sp, #24]
   2a5f4:	cmp	r0, #0
   2a5f8:	beq	2a608 <__assert_fail@plt+0x18eb4>
   2a5fc:	ldr	r0, [sp, #24]
   2a600:	str	r0, [fp, #-12]
   2a604:	b	2a678 <__assert_fail@plt+0x18f24>
   2a608:	ldr	r0, [fp, #-16]
   2a60c:	ldr	r1, [sp, #28]
   2a610:	ldr	r2, [fp, #8]
   2a614:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a618:	ldr	r3, [r3]
   2a61c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2a620:	ldr	ip, [ip, #4]
   2a624:	str	ip, [sp]
   2a628:	bl	2af84 <__assert_fail@plt+0x19830>
   2a62c:	str	r0, [sp, #24]
   2a630:	ldr	r0, [sp, #24]
   2a634:	cmp	r0, #0
   2a638:	beq	2a648 <__assert_fail@plt+0x18ef4>
   2a63c:	ldr	r0, [sp, #24]
   2a640:	str	r0, [fp, #-12]
   2a644:	b	2a678 <__assert_fail@plt+0x18f24>
   2a648:	ldr	r0, [fp, #8]
   2a64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a650:	ldr	r1, [r1, #4]
   2a654:	add	r0, r0, r1
   2a658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a65c:	ldr	r1, [r1]
   2a660:	sub	r0, r0, r1
   2a664:	str	r0, [sp, #20]
   2a668:	ldr	r0, [fp, #-16]
   2a66c:	ldr	r1, [sp, #20]
   2a670:	bl	2a474 <__assert_fail@plt+0x18d20>
   2a674:	str	r0, [fp, #-12]
   2a678:	ldr	r0, [fp, #-12]
   2a67c:	sub	sp, fp, #8
   2a680:	pop	{r4, sl, fp, pc}
   2a684:	sub	sp, sp, #32
   2a688:	str	r0, [sp, #24]
   2a68c:	str	r1, [sp, #20]
   2a690:	str	r2, [sp, #16]
   2a694:	str	r3, [sp, #12]
   2a698:	movw	r0, #0
   2a69c:	str	r0, [sp, #8]
   2a6a0:	ldr	r0, [sp, #8]
   2a6a4:	ldr	r1, [sp, #20]
   2a6a8:	ldr	r1, [r1, #4]
   2a6ac:	cmp	r0, r1
   2a6b0:	bge	2a728 <__assert_fail@plt+0x18fd4>
   2a6b4:	ldr	r0, [sp, #20]
   2a6b8:	ldr	r0, [r0, #8]
   2a6bc:	ldr	r1, [sp, #8]
   2a6c0:	ldr	r0, [r0, r1, lsl #2]
   2a6c4:	str	r0, [sp, #4]
   2a6c8:	ldr	r0, [sp, #24]
   2a6cc:	ldr	r0, [r0]
   2a6d0:	ldr	r1, [sp, #4]
   2a6d4:	add	r0, r0, r1, lsl #3
   2a6d8:	str	r0, [sp]
   2a6dc:	ldr	r0, [sp]
   2a6e0:	ldr	r0, [r0, #4]
   2a6e4:	and	r0, r0, #255	; 0xff
   2a6e8:	ldr	r1, [sp, #12]
   2a6ec:	cmp	r0, r1
   2a6f0:	bne	2a714 <__assert_fail@plt+0x18fc0>
   2a6f4:	ldr	r0, [sp]
   2a6f8:	ldr	r0, [r0]
   2a6fc:	ldr	r1, [sp, #16]
   2a700:	cmp	r0, r1
   2a704:	bne	2a714 <__assert_fail@plt+0x18fc0>
   2a708:	ldr	r0, [sp, #4]
   2a70c:	str	r0, [sp, #28]
   2a710:	b	2a730 <__assert_fail@plt+0x18fdc>
   2a714:	b	2a718 <__assert_fail@plt+0x18fc4>
   2a718:	ldr	r0, [sp, #8]
   2a71c:	add	r0, r0, #1
   2a720:	str	r0, [sp, #8]
   2a724:	b	2a6a0 <__assert_fail@plt+0x18f4c>
   2a728:	mvn	r0, #0
   2a72c:	str	r0, [sp, #28]
   2a730:	ldr	r0, [sp, #28]
   2a734:	add	sp, sp, #32
   2a738:	bx	lr
   2a73c:	push	{r4, sl, fp, lr}
   2a740:	add	fp, sp, #8
   2a744:	sub	sp, sp, #136	; 0x88
   2a748:	ldr	ip, [fp, #16]
   2a74c:	ldr	lr, [fp, #12]
   2a750:	ldr	r4, [fp, #8]
   2a754:	str	r0, [fp, #-16]
   2a758:	str	r1, [fp, #-20]	; 0xffffffec
   2a75c:	str	r2, [fp, #-24]	; 0xffffffe8
   2a760:	str	r3, [fp, #-28]	; 0xffffffe4
   2a764:	ldr	r0, [fp, #-16]
   2a768:	ldr	r0, [r0, #84]	; 0x54
   2a76c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a770:	mov	r0, #0
   2a774:	str	r0, [fp, #-36]	; 0xffffffdc
   2a778:	str	r0, [fp, #-56]	; 0xffffffc8
   2a77c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a780:	ldr	r0, [r0]
   2a784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a788:	add	r0, r0, r1, lsl #3
   2a78c:	ldr	r0, [r0]
   2a790:	str	r0, [fp, #-40]	; 0xffffffd8
   2a794:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a798:	ldr	r0, [r0, #4]
   2a79c:	ldr	r1, [fp, #12]
   2a7a0:	ldr	r2, [fp, #-16]
   2a7a4:	ldr	r2, [r2, #120]	; 0x78
   2a7a8:	add	r1, r1, r2
   2a7ac:	add	r1, r1, #1
   2a7b0:	cmp	r0, r1
   2a7b4:	str	r4, [sp, #44]	; 0x2c
   2a7b8:	str	lr, [sp, #40]	; 0x28
   2a7bc:	str	ip, [sp, #36]	; 0x24
   2a7c0:	bge	2a8ac <__assert_fail@plt+0x19158>
   2a7c4:	ldr	r0, [pc, #1708]	; 2ae78 <__assert_fail@plt+0x19724>
   2a7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a7cc:	ldr	r1, [r1, #4]
   2a7d0:	str	r1, [sp, #56]	; 0x38
   2a7d4:	ldr	r1, [fp, #12]
   2a7d8:	ldr	r2, [fp, #-16]
   2a7dc:	ldr	r2, [r2, #120]	; 0x78
   2a7e0:	add	r1, r1, r2
   2a7e4:	add	r1, r1, #1
   2a7e8:	str	r1, [sp, #52]	; 0x34
   2a7ec:	ldr	r1, [sp, #56]	; 0x38
   2a7f0:	sub	r0, r0, r1
   2a7f4:	ldr	r1, [sp, #52]	; 0x34
   2a7f8:	cmp	r0, r1
   2a7fc:	bge	2a80c <__assert_fail@plt+0x190b8>
   2a800:	movw	r0, #12
   2a804:	str	r0, [fp, #-12]
   2a808:	b	2ae6c <__assert_fail@plt+0x19718>
   2a80c:	ldr	r0, [pc, #1640]	; 2ae7c <__assert_fail@plt+0x19728>
   2a810:	ldr	r1, [sp, #56]	; 0x38
   2a814:	ldr	r2, [sp, #52]	; 0x34
   2a818:	add	r1, r1, r2
   2a81c:	str	r1, [sp, #48]	; 0x30
   2a820:	ldr	r1, [sp, #48]	; 0x30
   2a824:	cmp	r0, r1
   2a828:	bcs	2a838 <__assert_fail@plt+0x190e4>
   2a82c:	movw	r0, #12
   2a830:	str	r0, [fp, #-12]
   2a834:	b	2ae6c <__assert_fail@plt+0x19718>
   2a838:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a83c:	ldr	r0, [r0, #8]
   2a840:	ldr	r1, [sp, #48]	; 0x30
   2a844:	lsl	r1, r1, #2
   2a848:	bl	38aec <__assert_fail@plt+0x27398>
   2a84c:	str	r0, [sp, #60]	; 0x3c
   2a850:	ldr	r0, [sp, #60]	; 0x3c
   2a854:	movw	r1, #0
   2a858:	cmp	r0, r1
   2a85c:	bne	2a86c <__assert_fail@plt+0x19118>
   2a860:	movw	r0, #12
   2a864:	str	r0, [fp, #-12]
   2a868:	b	2ae6c <__assert_fail@plt+0x19718>
   2a86c:	ldr	r0, [sp, #60]	; 0x3c
   2a870:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a874:	str	r0, [r1, #8]
   2a878:	ldr	r0, [sp, #48]	; 0x30
   2a87c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a880:	str	r0, [r1, #4]
   2a884:	ldr	r0, [sp, #60]	; 0x3c
   2a888:	ldr	r1, [sp, #56]	; 0x38
   2a88c:	add	r0, r0, r1, lsl #2
   2a890:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a894:	ldr	r2, [r2, #4]
   2a898:	sub	r1, r2, r1
   2a89c:	lsl	r2, r1, #2
   2a8a0:	movw	r1, #0
   2a8a4:	and	r1, r1, #255	; 0xff
   2a8a8:	bl	11658 <memset@plt>
   2a8ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a8b0:	ldr	r0, [r0]
   2a8b4:	cmp	r0, #0
   2a8b8:	beq	2a8cc <__assert_fail@plt+0x19178>
   2a8bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a8c0:	ldr	r0, [r0]
   2a8c4:	str	r0, [sp, #32]
   2a8c8:	b	2a8d4 <__assert_fail@plt+0x19180>
   2a8cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a8d0:	str	r0, [sp, #32]
   2a8d4:	ldr	r0, [sp, #32]
   2a8d8:	str	r0, [fp, #-48]	; 0xffffffd0
   2a8dc:	ldr	r0, [fp, #-16]
   2a8e0:	ldr	r0, [r0, #100]	; 0x64
   2a8e4:	str	r0, [sp, #68]	; 0x44
   2a8e8:	ldr	r0, [fp, #-16]
   2a8ec:	ldr	r0, [r0, #40]	; 0x28
   2a8f0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a8f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a8f8:	ldr	r0, [r0, #8]
   2a8fc:	ldr	r1, [fp, #-16]
   2a900:	str	r0, [r1, #100]	; 0x64
   2a904:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a908:	ldr	r1, [fp, #-16]
   2a90c:	str	r0, [r1, #40]	; 0x28
   2a910:	ldr	r0, [fp, #-16]
   2a914:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a918:	sub	r1, r1, #1
   2a91c:	ldr	r2, [fp, #-16]
   2a920:	ldr	r2, [r2, #88]	; 0x58
   2a924:	bl	28844 <__assert_fail@plt+0x170f0>
   2a928:	str	r0, [sp, #64]	; 0x40
   2a92c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a934:	cmp	r0, r1
   2a938:	bne	2a9a0 <__assert_fail@plt+0x1924c>
   2a93c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a940:	add	r0, sp, #72	; 0x48
   2a944:	bl	24b7c <__assert_fail@plt+0x13428>
   2a948:	str	r0, [fp, #-36]	; 0xffffffdc
   2a94c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a950:	cmp	r0, #0
   2a954:	beq	2a964 <__assert_fail@plt+0x19210>
   2a958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a95c:	str	r0, [fp, #-12]
   2a960:	b	2ae6c <__assert_fail@plt+0x19718>
   2a964:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a968:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a96c:	ldr	r3, [fp, #16]
   2a970:	add	r1, sp, #72	; 0x48
   2a974:	bl	2b1e4 <__assert_fail@plt+0x19a90>
   2a978:	str	r0, [fp, #-36]	; 0xffffffdc
   2a97c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a980:	cmp	r0, #0
   2a984:	beq	2a99c <__assert_fail@plt+0x19248>
   2a988:	ldr	r0, [sp, #80]	; 0x50
   2a98c:	bl	1604c <__assert_fail@plt+0x48f8>
   2a990:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a994:	str	r0, [fp, #-12]
   2a998:	b	2ae6c <__assert_fail@plt+0x19718>
   2a99c:	b	2aa28 <__assert_fail@plt+0x192d4>
   2a9a0:	ldr	r0, [fp, #-16]
   2a9a4:	ldr	r0, [r0, #100]	; 0x64
   2a9a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a9ac:	add	r0, r0, r1, lsl #2
   2a9b0:	ldr	r0, [r0]
   2a9b4:	str	r0, [fp, #-56]	; 0xffffffc8
   2a9b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a9bc:	movw	r1, #0
   2a9c0:	cmp	r0, r1
   2a9c4:	beq	2aa10 <__assert_fail@plt+0x192bc>
   2a9c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a9cc:	ldrb	r0, [r0, #52]	; 0x34
   2a9d0:	ubfx	r0, r0, #6, #1
   2a9d4:	and	r0, r0, #255	; 0xff
   2a9d8:	cmp	r0, #0
   2a9dc:	beq	2aa10 <__assert_fail@plt+0x192bc>
   2a9e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a9e4:	add	r1, r0, #4
   2a9e8:	add	r0, sp, #72	; 0x48
   2a9ec:	bl	25e30 <__assert_fail@plt+0x146dc>
   2a9f0:	str	r0, [fp, #-36]	; 0xffffffdc
   2a9f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a9f8:	cmp	r0, #0
   2a9fc:	beq	2aa0c <__assert_fail@plt+0x192b8>
   2aa00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa04:	str	r0, [fp, #-12]
   2aa08:	b	2ae6c <__assert_fail@plt+0x19718>
   2aa0c:	b	2aa24 <__assert_fail@plt+0x192d0>
   2aa10:	add	r0, sp, #72	; 0x48
   2aa14:	movw	r1, #0
   2aa18:	and	r1, r1, #255	; 0xff
   2aa1c:	movw	r2, #12
   2aa20:	bl	11658 <memset@plt>
   2aa24:	b	2aa28 <__assert_fail@plt+0x192d4>
   2aa28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2aa2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2aa30:	cmp	r0, r1
   2aa34:	beq	2aa60 <__assert_fail@plt+0x1930c>
   2aa38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2aa3c:	movw	r1, #0
   2aa40:	cmp	r0, r1
   2aa44:	beq	2ab38 <__assert_fail@plt+0x193e4>
   2aa48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2aa4c:	ldrb	r0, [r0, #52]	; 0x34
   2aa50:	ubfx	r0, r0, #6, #1
   2aa54:	and	r0, r0, #255	; 0xff
   2aa58:	cmp	r0, #0
   2aa5c:	beq	2ab38 <__assert_fail@plt+0x193e4>
   2aa60:	ldr	r0, [sp, #76]	; 0x4c
   2aa64:	cmp	r0, #0
   2aa68:	beq	2aabc <__assert_fail@plt+0x19368>
   2aa6c:	ldr	r0, [fp, #-16]
   2aa70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aa74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa78:	ldr	r1, [fp, #16]
   2aa7c:	add	ip, sp, #72	; 0x48
   2aa80:	str	r1, [sp, #28]
   2aa84:	mov	r1, ip
   2aa88:	ldr	ip, [sp, #28]
   2aa8c:	str	ip, [sp]
   2aa90:	bl	2b388 <__assert_fail@plt+0x19c34>
   2aa94:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa9c:	cmp	r0, #0
   2aaa0:	beq	2aab8 <__assert_fail@plt+0x19364>
   2aaa4:	ldr	r0, [sp, #80]	; 0x50
   2aaa8:	bl	1604c <__assert_fail@plt+0x48f8>
   2aaac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aab0:	str	r0, [fp, #-12]
   2aab4:	b	2ae6c <__assert_fail@plt+0x19718>
   2aab8:	b	2aabc <__assert_fail@plt+0x19368>
   2aabc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2aac0:	ldr	r3, [sp, #64]	; 0x40
   2aac4:	sub	r0, fp, #36	; 0x24
   2aac8:	add	r2, sp, #72	; 0x48
   2aacc:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2aad0:	str	r0, [fp, #-56]	; 0xffffffc8
   2aad4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2aad8:	movw	r1, #0
   2aadc:	cmp	r0, r1
   2aae0:	movw	r0, #0
   2aae4:	str	r0, [sp, #24]
   2aae8:	bne	2ab00 <__assert_fail@plt+0x193ac>
   2aaec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aaf0:	cmp	r0, #0
   2aaf4:	movw	r0, #0
   2aaf8:	movne	r0, #1
   2aafc:	str	r0, [sp, #24]
   2ab00:	ldr	r0, [sp, #24]
   2ab04:	tst	r0, #1
   2ab08:	beq	2ab20 <__assert_fail@plt+0x193cc>
   2ab0c:	ldr	r0, [sp, #80]	; 0x50
   2ab10:	bl	1604c <__assert_fail@plt+0x48f8>
   2ab14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab18:	str	r0, [fp, #-12]
   2ab1c:	b	2ae6c <__assert_fail@plt+0x19718>
   2ab20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ab24:	ldr	r1, [fp, #-16]
   2ab28:	ldr	r1, [r1, #100]	; 0x64
   2ab2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ab30:	add	r1, r1, r2, lsl #2
   2ab34:	str	r0, [r1]
   2ab38:	movw	r0, #0
   2ab3c:	str	r0, [fp, #-52]	; 0xffffffcc
   2ab40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ab44:	ldr	r1, [fp, #12]
   2ab48:	cmp	r0, r1
   2ab4c:	movw	r0, #0
   2ab50:	str	r0, [sp, #20]
   2ab54:	bge	2ab74 <__assert_fail@plt+0x19420>
   2ab58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ab5c:	ldr	r1, [fp, #-16]
   2ab60:	ldr	r1, [r1, #120]	; 0x78
   2ab64:	cmp	r0, r1
   2ab68:	movw	r0, #0
   2ab6c:	movle	r0, #1
   2ab70:	str	r0, [sp, #20]
   2ab74:	ldr	r0, [sp, #20]
   2ab78:	tst	r0, #1
   2ab7c:	beq	2adb8 <__assert_fail@plt+0x19664>
   2ab80:	mov	r0, #0
   2ab84:	str	r0, [sp, #76]	; 0x4c
   2ab88:	ldr	r0, [fp, #-16]
   2ab8c:	ldr	r0, [r0, #100]	; 0x64
   2ab90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ab94:	add	r1, r1, #1
   2ab98:	add	r0, r0, r1, lsl #2
   2ab9c:	ldr	r0, [r0]
   2aba0:	movw	r1, #0
   2aba4:	cmp	r0, r1
   2aba8:	beq	2abf8 <__assert_fail@plt+0x194a4>
   2abac:	ldr	r0, [fp, #-16]
   2abb0:	ldr	r0, [r0, #100]	; 0x64
   2abb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2abb8:	add	r1, r1, #1
   2abbc:	add	r0, r0, r1, lsl #2
   2abc0:	ldr	r0, [r0]
   2abc4:	add	r1, r0, #4
   2abc8:	add	r0, sp, #72	; 0x48
   2abcc:	bl	2555c <__assert_fail@plt+0x13e08>
   2abd0:	str	r0, [fp, #-36]	; 0xffffffdc
   2abd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2abd8:	cmp	r0, #0
   2abdc:	beq	2abf4 <__assert_fail@plt+0x194a0>
   2abe0:	ldr	r0, [sp, #80]	; 0x50
   2abe4:	bl	1604c <__assert_fail@plt+0x48f8>
   2abe8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2abec:	str	r0, [fp, #-12]
   2abf0:	b	2ae6c <__assert_fail@plt+0x19718>
   2abf4:	b	2abf8 <__assert_fail@plt+0x194a4>
   2abf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2abfc:	movw	r1, #0
   2ac00:	cmp	r0, r1
   2ac04:	beq	2ac48 <__assert_fail@plt+0x194f4>
   2ac08:	ldr	r0, [fp, #-16]
   2ac0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ac10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ac14:	add	r2, r2, #16
   2ac18:	add	r3, sp, #72	; 0x48
   2ac1c:	bl	2b758 <__assert_fail@plt+0x1a004>
   2ac20:	str	r0, [fp, #-36]	; 0xffffffdc
   2ac24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ac28:	cmp	r0, #0
   2ac2c:	beq	2ac44 <__assert_fail@plt+0x194f0>
   2ac30:	ldr	r0, [sp, #80]	; 0x50
   2ac34:	bl	1604c <__assert_fail@plt+0x48f8>
   2ac38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ac3c:	str	r0, [fp, #-12]
   2ac40:	b	2ae6c <__assert_fail@plt+0x19718>
   2ac44:	b	2ac48 <__assert_fail@plt+0x194f4>
   2ac48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ac4c:	add	r0, r0, #1
   2ac50:	str	r0, [fp, #-48]	; 0xffffffd0
   2ac54:	ldr	r0, [sp, #76]	; 0x4c
   2ac58:	cmp	r0, #0
   2ac5c:	beq	2ace8 <__assert_fail@plt+0x19594>
   2ac60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ac68:	ldr	r3, [fp, #16]
   2ac6c:	add	r1, sp, #72	; 0x48
   2ac70:	bl	2b1e4 <__assert_fail@plt+0x19a90>
   2ac74:	str	r0, [fp, #-36]	; 0xffffffdc
   2ac78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ac7c:	cmp	r0, #0
   2ac80:	beq	2ac98 <__assert_fail@plt+0x19544>
   2ac84:	ldr	r0, [sp, #80]	; 0x50
   2ac88:	bl	1604c <__assert_fail@plt+0x48f8>
   2ac8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ac90:	str	r0, [fp, #-12]
   2ac94:	b	2ae6c <__assert_fail@plt+0x19718>
   2ac98:	ldr	r0, [fp, #-16]
   2ac9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aca0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aca4:	ldr	r1, [fp, #16]
   2aca8:	add	ip, sp, #72	; 0x48
   2acac:	str	r1, [sp, #16]
   2acb0:	mov	r1, ip
   2acb4:	ldr	ip, [sp, #16]
   2acb8:	str	ip, [sp]
   2acbc:	bl	2b388 <__assert_fail@plt+0x19c34>
   2acc0:	str	r0, [fp, #-36]	; 0xffffffdc
   2acc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acc8:	cmp	r0, #0
   2accc:	beq	2ace4 <__assert_fail@plt+0x19590>
   2acd0:	ldr	r0, [sp, #80]	; 0x50
   2acd4:	bl	1604c <__assert_fail@plt+0x48f8>
   2acd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acdc:	str	r0, [fp, #-12]
   2ace0:	b	2ae6c <__assert_fail@plt+0x19718>
   2ace4:	b	2ace8 <__assert_fail@plt+0x19594>
   2ace8:	ldr	r0, [fp, #-16]
   2acec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2acf0:	sub	r1, r1, #1
   2acf4:	ldr	r2, [fp, #-16]
   2acf8:	ldr	r2, [r2, #88]	; 0x58
   2acfc:	bl	28844 <__assert_fail@plt+0x170f0>
   2ad00:	str	r0, [sp, #64]	; 0x40
   2ad04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ad08:	ldr	r3, [sp, #64]	; 0x40
   2ad0c:	sub	r0, fp, #36	; 0x24
   2ad10:	add	r2, sp, #72	; 0x48
   2ad14:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2ad18:	str	r0, [fp, #-56]	; 0xffffffc8
   2ad1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ad20:	movw	r1, #0
   2ad24:	cmp	r0, r1
   2ad28:	movw	r0, #0
   2ad2c:	str	r0, [sp, #12]
   2ad30:	bne	2ad48 <__assert_fail@plt+0x195f4>
   2ad34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ad38:	cmp	r0, #0
   2ad3c:	movw	r0, #0
   2ad40:	movne	r0, #1
   2ad44:	str	r0, [sp, #12]
   2ad48:	ldr	r0, [sp, #12]
   2ad4c:	tst	r0, #1
   2ad50:	beq	2ad68 <__assert_fail@plt+0x19614>
   2ad54:	ldr	r0, [sp, #80]	; 0x50
   2ad58:	bl	1604c <__assert_fail@plt+0x48f8>
   2ad5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ad60:	str	r0, [fp, #-12]
   2ad64:	b	2ae6c <__assert_fail@plt+0x19718>
   2ad68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ad6c:	ldr	r1, [fp, #-16]
   2ad70:	ldr	r1, [r1, #100]	; 0x64
   2ad74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ad78:	add	r1, r1, r2, lsl #2
   2ad7c:	str	r0, [r1]
   2ad80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ad84:	movw	r1, #0
   2ad88:	cmp	r0, r1
   2ad8c:	bne	2ada0 <__assert_fail@plt+0x1964c>
   2ad90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ad94:	add	r0, r0, #1
   2ad98:	str	r0, [sp, #8]
   2ad9c:	b	2adac <__assert_fail@plt+0x19658>
   2ada0:	movw	r0, #0
   2ada4:	str	r0, [sp, #8]
   2ada8:	b	2adac <__assert_fail@plt+0x19658>
   2adac:	ldr	r0, [sp, #8]
   2adb0:	str	r0, [fp, #-52]	; 0xffffffcc
   2adb4:	b	2ab40 <__assert_fail@plt+0x193ec>
   2adb8:	ldr	r0, [sp, #80]	; 0x50
   2adbc:	bl	1604c <__assert_fail@plt+0x48f8>
   2adc0:	ldr	r0, [fp, #-16]
   2adc4:	ldr	r0, [r0, #100]	; 0x64
   2adc8:	ldr	lr, [fp, #12]
   2adcc:	add	r0, r0, lr, lsl #2
   2add0:	ldr	r0, [r0]
   2add4:	movw	lr, #0
   2add8:	cmp	r0, lr
   2addc:	bne	2adec <__assert_fail@plt+0x19698>
   2ade0:	movw	r0, #0
   2ade4:	str	r0, [sp, #4]
   2ade8:	b	2ae08 <__assert_fail@plt+0x196b4>
   2adec:	ldr	r0, [fp, #-16]
   2adf0:	ldr	r0, [r0, #100]	; 0x64
   2adf4:	ldr	r1, [fp, #12]
   2adf8:	add	r0, r0, r1, lsl #2
   2adfc:	ldr	r0, [r0]
   2ae00:	add	r0, r0, #4
   2ae04:	str	r0, [sp, #4]
   2ae08:	ldr	r0, [sp, #4]
   2ae0c:	str	r0, [fp, #-60]	; 0xffffffc4
   2ae10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ae14:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ae18:	str	r0, [r1]
   2ae1c:	ldr	r0, [sp, #68]	; 0x44
   2ae20:	ldr	r1, [fp, #-16]
   2ae24:	str	r0, [r1, #100]	; 0x64
   2ae28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ae2c:	ldr	r1, [fp, #-16]
   2ae30:	str	r0, [r1, #40]	; 0x28
   2ae34:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ae38:	movw	r1, #0
   2ae3c:	cmp	r0, r1
   2ae40:	beq	2ae64 <__assert_fail@plt+0x19710>
   2ae44:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ae48:	ldr	r1, [fp, #8]
   2ae4c:	bl	25f04 <__assert_fail@plt+0x147b0>
   2ae50:	cmp	r0, #0
   2ae54:	beq	2ae64 <__assert_fail@plt+0x19710>
   2ae58:	movw	r0, #0
   2ae5c:	str	r0, [fp, #-12]
   2ae60:	b	2ae6c <__assert_fail@plt+0x19718>
   2ae64:	movw	r0, #1
   2ae68:	str	r0, [fp, #-12]
   2ae6c:	ldr	r0, [fp, #-12]
   2ae70:	sub	sp, fp, #8
   2ae74:	pop	{r4, sl, fp, pc}
   2ae78:	svcvc	0x00ffffff
   2ae7c:	svccc	0x00ffffff
   2ae80:	push	{fp, lr}
   2ae84:	mov	fp, sp
   2ae88:	sub	sp, sp, #32
   2ae8c:	str	r0, [fp, #-8]
   2ae90:	str	r1, [fp, #-12]
   2ae94:	str	r2, [sp, #16]
   2ae98:	ldr	r0, [fp, #-8]
   2ae9c:	ldr	r0, [r0, #16]
   2aea0:	ldr	r1, [fp, #-8]
   2aea4:	ldr	r1, [r1, #12]
   2aea8:	cmp	r0, r1
   2aeac:	bne	2af10 <__assert_fail@plt+0x197bc>
   2aeb0:	ldr	r0, [fp, #-8]
   2aeb4:	ldr	r0, [r0, #12]
   2aeb8:	mov	r1, #1
   2aebc:	orr	r0, r1, r0, lsl #1
   2aec0:	str	r0, [sp, #8]
   2aec4:	ldr	r0, [fp, #-8]
   2aec8:	ldr	r0, [r0, #20]
   2aecc:	ldr	r1, [sp, #8]
   2aed0:	lsl	r1, r1, #2
   2aed4:	bl	38aec <__assert_fail@plt+0x27398>
   2aed8:	str	r0, [sp, #4]
   2aedc:	ldr	r0, [sp, #4]
   2aee0:	movw	r1, #0
   2aee4:	cmp	r0, r1
   2aee8:	bne	2aef8 <__assert_fail@plt+0x197a4>
   2aeec:	movw	r0, #0
   2aef0:	str	r0, [fp, #-4]
   2aef4:	b	2af78 <__assert_fail@plt+0x19824>
   2aef8:	ldr	r0, [sp, #4]
   2aefc:	ldr	r1, [fp, #-8]
   2af00:	str	r0, [r1, #20]
   2af04:	ldr	r0, [sp, #8]
   2af08:	ldr	r1, [fp, #-8]
   2af0c:	str	r0, [r1, #12]
   2af10:	movw	r0, #1
   2af14:	movw	r1, #20
   2af18:	bl	389e0 <__assert_fail@plt+0x2728c>
   2af1c:	str	r0, [sp, #12]
   2af20:	ldr	r0, [sp, #12]
   2af24:	movw	r1, #0
   2af28:	cmp	r0, r1
   2af2c:	beq	2af70 <__assert_fail@plt+0x1981c>
   2af30:	ldr	r0, [sp, #12]
   2af34:	ldr	r1, [fp, #-8]
   2af38:	ldr	r2, [r1, #16]
   2af3c:	ldr	r1, [r1, #20]
   2af40:	add	r1, r1, r2, lsl #2
   2af44:	str	r0, [r1]
   2af48:	ldr	r0, [fp, #-12]
   2af4c:	ldr	r1, [sp, #12]
   2af50:	str	r0, [r1]
   2af54:	ldr	r0, [sp, #16]
   2af58:	ldr	r1, [sp, #12]
   2af5c:	str	r0, [r1, #4]
   2af60:	ldr	r0, [fp, #-8]
   2af64:	ldr	r1, [r0, #16]
   2af68:	add	r1, r1, #1
   2af6c:	str	r1, [r0, #16]
   2af70:	ldr	r0, [sp, #12]
   2af74:	str	r0, [fp, #-4]
   2af78:	ldr	r0, [fp, #-4]
   2af7c:	mov	sp, fp
   2af80:	pop	{fp, pc}
   2af84:	push	{fp, lr}
   2af88:	mov	fp, sp
   2af8c:	sub	sp, sp, #32
   2af90:	ldr	ip, [fp, #8]
   2af94:	str	r0, [fp, #-8]
   2af98:	str	r1, [fp, #-12]
   2af9c:	str	r2, [sp, #16]
   2afa0:	str	r3, [sp, #12]
   2afa4:	ldr	r0, [fp, #-8]
   2afa8:	ldr	r0, [r0, #108]	; 0x6c
   2afac:	ldr	r1, [fp, #-8]
   2afb0:	ldr	r1, [r1, #112]	; 0x70
   2afb4:	cmp	r0, r1
   2afb8:	str	ip, [sp, #4]
   2afbc:	blt	2b050 <__assert_fail@plt+0x198fc>
   2afc0:	ldr	r0, [fp, #-8]
   2afc4:	ldr	r1, [r0, #112]	; 0x70
   2afc8:	ldr	r0, [r0, #116]	; 0x74
   2afcc:	lsl	r1, r1, #1
   2afd0:	movw	r2, #24
   2afd4:	mul	r1, r1, r2
   2afd8:	bl	38aec <__assert_fail@plt+0x27398>
   2afdc:	str	r0, [sp, #8]
   2afe0:	ldr	r0, [sp, #8]
   2afe4:	movw	r1, #0
   2afe8:	cmp	r0, r1
   2afec:	bne	2b008 <__assert_fail@plt+0x198b4>
   2aff0:	ldr	r0, [fp, #-8]
   2aff4:	ldr	r0, [r0, #116]	; 0x74
   2aff8:	bl	1604c <__assert_fail@plt+0x48f8>
   2affc:	movw	r0, #12
   2b000:	str	r0, [fp, #-4]
   2b004:	b	2b1d8 <__assert_fail@plt+0x19a84>
   2b008:	ldr	r0, [sp, #8]
   2b00c:	ldr	r1, [fp, #-8]
   2b010:	str	r0, [r1, #116]	; 0x74
   2b014:	ldr	r0, [fp, #-8]
   2b018:	ldr	r1, [r0, #108]	; 0x6c
   2b01c:	ldr	r2, [r0, #112]	; 0x70
   2b020:	ldr	r0, [r0, #116]	; 0x74
   2b024:	add	r1, r1, r1, lsl #1
   2b028:	add	r0, r0, r1, lsl #3
   2b02c:	add	r1, r2, r2, lsl #1
   2b030:	lsl	r2, r1, #3
   2b034:	mov	r1, #0
   2b038:	bl	11658 <memset@plt>
   2b03c:	ldr	r1, [fp, #-8]
   2b040:	ldr	r2, [r1, #112]	; 0x70
   2b044:	lsl	r2, r2, #1
   2b048:	str	r2, [r1, #112]	; 0x70
   2b04c:	str	r0, [sp]
   2b050:	ldr	r0, [fp, #-8]
   2b054:	ldr	r0, [r0, #108]	; 0x6c
   2b058:	cmp	r0, #0
   2b05c:	ble	2b0b8 <__assert_fail@plt+0x19964>
   2b060:	ldr	r0, [fp, #-8]
   2b064:	ldr	r0, [r0, #116]	; 0x74
   2b068:	ldr	r1, [fp, #-8]
   2b06c:	ldr	r1, [r1, #108]	; 0x6c
   2b070:	sub	r1, r1, #1
   2b074:	movw	r2, #24
   2b078:	mul	r1, r1, r2
   2b07c:	add	r0, r0, r1
   2b080:	ldr	r0, [r0, #4]
   2b084:	ldr	r1, [sp, #16]
   2b088:	cmp	r0, r1
   2b08c:	bne	2b0b8 <__assert_fail@plt+0x19964>
   2b090:	ldr	r0, [fp, #-8]
   2b094:	ldr	r0, [r0, #116]	; 0x74
   2b098:	ldr	r1, [fp, #-8]
   2b09c:	ldr	r1, [r1, #108]	; 0x6c
   2b0a0:	sub	r1, r1, #1
   2b0a4:	movw	r2, #24
   2b0a8:	mul	r1, r1, r2
   2b0ac:	add	r0, r0, r1
   2b0b0:	movw	r1, #1
   2b0b4:	strb	r1, [r0, #20]
   2b0b8:	ldr	r0, [fp, #-12]
   2b0bc:	ldr	r1, [fp, #-8]
   2b0c0:	ldr	r1, [r1, #116]	; 0x74
   2b0c4:	ldr	r2, [fp, #-8]
   2b0c8:	ldr	r2, [r2, #108]	; 0x6c
   2b0cc:	movw	r3, #24
   2b0d0:	mul	r2, r2, r3
   2b0d4:	add	r1, r1, r2
   2b0d8:	str	r0, [r1]
   2b0dc:	ldr	r0, [sp, #16]
   2b0e0:	ldr	r1, [fp, #-8]
   2b0e4:	ldr	r1, [r1, #116]	; 0x74
   2b0e8:	ldr	r2, [fp, #-8]
   2b0ec:	ldr	r2, [r2, #108]	; 0x6c
   2b0f0:	mul	r2, r2, r3
   2b0f4:	add	r1, r1, r2
   2b0f8:	str	r0, [r1, #4]
   2b0fc:	ldr	r0, [sp, #12]
   2b100:	ldr	r1, [fp, #-8]
   2b104:	ldr	r1, [r1, #116]	; 0x74
   2b108:	ldr	r2, [fp, #-8]
   2b10c:	ldr	r2, [r2, #108]	; 0x6c
   2b110:	mul	r2, r2, r3
   2b114:	add	r1, r1, r2
   2b118:	str	r0, [r1, #8]
   2b11c:	ldr	r0, [fp, #8]
   2b120:	ldr	r1, [fp, #-8]
   2b124:	ldr	r1, [r1, #116]	; 0x74
   2b128:	ldr	r2, [fp, #-8]
   2b12c:	ldr	r2, [r2, #108]	; 0x6c
   2b130:	mul	r2, r2, r3
   2b134:	add	r1, r1, r2
   2b138:	str	r0, [r1, #12]
   2b13c:	ldr	r0, [sp, #12]
   2b140:	ldr	r1, [fp, #8]
   2b144:	cmp	r0, r1
   2b148:	movw	r0, #0
   2b14c:	moveq	r0, #1
   2b150:	tst	r0, #1
   2b154:	mvn	r0, #0
   2b158:	moveq	r0, #0
   2b15c:	ldr	r1, [fp, #-8]
   2b160:	ldr	r1, [r1, #116]	; 0x74
   2b164:	ldr	r2, [fp, #-8]
   2b168:	ldr	r2, [r2, #108]	; 0x6c
   2b16c:	mul	r2, r2, r3
   2b170:	add	r1, r1, r2
   2b174:	str	r0, [r1, #16]
   2b178:	ldr	r0, [fp, #-8]
   2b17c:	ldr	r0, [r0, #116]	; 0x74
   2b180:	ldr	r1, [fp, #-8]
   2b184:	ldr	r2, [r1, #108]	; 0x6c
   2b188:	add	ip, r2, #1
   2b18c:	str	ip, [r1, #108]	; 0x6c
   2b190:	mul	r1, r2, r3
   2b194:	add	r0, r0, r1
   2b198:	movw	r1, #0
   2b19c:	strb	r1, [r0, #20]
   2b1a0:	ldr	r0, [fp, #-8]
   2b1a4:	ldr	r0, [r0, #120]	; 0x78
   2b1a8:	ldr	r1, [fp, #8]
   2b1ac:	ldr	r2, [sp, #12]
   2b1b0:	sub	r1, r1, r2
   2b1b4:	cmp	r0, r1
   2b1b8:	bge	2b1d0 <__assert_fail@plt+0x19a7c>
   2b1bc:	ldr	r0, [fp, #8]
   2b1c0:	ldr	r1, [sp, #12]
   2b1c4:	sub	r0, r0, r1
   2b1c8:	ldr	r1, [fp, #-8]
   2b1cc:	str	r0, [r1, #120]	; 0x78
   2b1d0:	movw	r0, #0
   2b1d4:	str	r0, [fp, #-4]
   2b1d8:	ldr	r0, [fp, #-4]
   2b1dc:	mov	sp, fp
   2b1e0:	pop	{fp, pc}
   2b1e4:	push	{fp, lr}
   2b1e8:	mov	fp, sp
   2b1ec:	sub	sp, sp, #64	; 0x40
   2b1f0:	str	r0, [fp, #-8]
   2b1f4:	str	r1, [fp, #-12]
   2b1f8:	str	r2, [fp, #-16]
   2b1fc:	str	r3, [fp, #-20]	; 0xffffffec
   2b200:	ldr	r0, [fp, #-12]
   2b204:	ldr	r0, [r0, #4]
   2b208:	cmp	r0, #0
   2b20c:	beq	2b214 <__assert_fail@plt+0x19ac0>
   2b210:	b	2b214 <__assert_fail@plt+0x19ac0>
   2b214:	ldr	r0, [fp, #-12]
   2b218:	ldr	r1, [r0, #4]
   2b21c:	add	r0, sp, #20
   2b220:	bl	24fe0 <__assert_fail@plt+0x1388c>
   2b224:	str	r0, [fp, #-24]	; 0xffffffe8
   2b228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b22c:	cmp	r0, #0
   2b230:	beq	2b240 <__assert_fail@plt+0x19aec>
   2b234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b238:	str	r0, [fp, #-4]
   2b23c:	b	2b37c <__assert_fail@plt+0x19c28>
   2b240:	movw	r0, #0
   2b244:	str	r0, [fp, #-28]	; 0xffffffe4
   2b248:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b24c:	ldr	r1, [fp, #-12]
   2b250:	ldr	r1, [r1, #4]
   2b254:	cmp	r0, r1
   2b258:	bge	2b34c <__assert_fail@plt+0x19bf8>
   2b25c:	ldr	r0, [fp, #-12]
   2b260:	ldr	r0, [r0, #8]
   2b264:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b268:	add	r0, r0, r1, lsl #2
   2b26c:	ldr	r0, [r0]
   2b270:	str	r0, [sp, #16]
   2b274:	ldr	r0, [fp, #-8]
   2b278:	ldr	r0, [r0, #24]
   2b27c:	ldr	r1, [sp, #16]
   2b280:	movw	r2, #12
   2b284:	mul	r1, r1, r2
   2b288:	add	r0, r0, r1
   2b28c:	str	r0, [sp, #12]
   2b290:	ldr	r0, [fp, #-8]
   2b294:	ldr	r1, [sp, #12]
   2b298:	ldr	r2, [fp, #-16]
   2b29c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b2a0:	bl	2a684 <__assert_fail@plt+0x18f30>
   2b2a4:	str	r0, [sp, #32]
   2b2a8:	ldr	r0, [sp, #32]
   2b2ac:	cmn	r0, #1
   2b2b0:	bne	2b2e8 <__assert_fail@plt+0x19b94>
   2b2b4:	ldr	r1, [sp, #12]
   2b2b8:	add	r0, sp, #20
   2b2bc:	bl	2555c <__assert_fail@plt+0x13e08>
   2b2c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2b2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b2c8:	cmp	r0, #0
   2b2cc:	beq	2b2e4 <__assert_fail@plt+0x19b90>
   2b2d0:	ldr	r0, [sp, #28]
   2b2d4:	bl	1604c <__assert_fail@plt+0x48f8>
   2b2d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b2dc:	str	r0, [fp, #-4]
   2b2e0:	b	2b37c <__assert_fail@plt+0x19c28>
   2b2e4:	b	2b338 <__assert_fail@plt+0x19be4>
   2b2e8:	ldr	r0, [fp, #-8]
   2b2ec:	ldr	r2, [sp, #16]
   2b2f0:	ldr	r3, [fp, #-16]
   2b2f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b2f8:	add	ip, sp, #20
   2b2fc:	str	r1, [sp, #8]
   2b300:	mov	r1, ip
   2b304:	ldr	ip, [sp, #8]
   2b308:	str	ip, [sp]
   2b30c:	bl	2ba44 <__assert_fail@plt+0x1a2f0>
   2b310:	str	r0, [fp, #-24]	; 0xffffffe8
   2b314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b318:	cmp	r0, #0
   2b31c:	beq	2b334 <__assert_fail@plt+0x19be0>
   2b320:	ldr	r0, [sp, #28]
   2b324:	bl	1604c <__assert_fail@plt+0x48f8>
   2b328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b32c:	str	r0, [fp, #-4]
   2b330:	b	2b37c <__assert_fail@plt+0x19c28>
   2b334:	b	2b338 <__assert_fail@plt+0x19be4>
   2b338:	b	2b33c <__assert_fail@plt+0x19be8>
   2b33c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b340:	add	r0, r0, #1
   2b344:	str	r0, [fp, #-28]	; 0xffffffe4
   2b348:	b	2b248 <__assert_fail@plt+0x19af4>
   2b34c:	ldr	r0, [fp, #-12]
   2b350:	ldr	r0, [r0, #8]
   2b354:	bl	1604c <__assert_fail@plt+0x48f8>
   2b358:	ldr	r0, [fp, #-12]
   2b35c:	ldr	lr, [sp, #20]
   2b360:	str	lr, [r0]
   2b364:	ldr	lr, [sp, #24]
   2b368:	str	lr, [r0, #4]
   2b36c:	ldr	lr, [sp, #28]
   2b370:	str	lr, [r0, #8]
   2b374:	movw	r0, #0
   2b378:	str	r0, [fp, #-4]
   2b37c:	ldr	r0, [fp, #-4]
   2b380:	mov	sp, fp
   2b384:	pop	{fp, pc}
   2b388:	push	{fp, lr}
   2b38c:	mov	fp, sp
   2b390:	sub	sp, sp, #112	; 0x70
   2b394:	ldr	ip, [fp, #8]
   2b398:	str	r0, [fp, #-8]
   2b39c:	str	r1, [fp, #-12]
   2b3a0:	str	r2, [fp, #-16]
   2b3a4:	str	r3, [fp, #-20]	; 0xffffffec
   2b3a8:	ldr	r0, [fp, #-8]
   2b3ac:	ldr	r0, [r0, #84]	; 0x54
   2b3b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2b3b4:	ldr	r0, [fp, #-8]
   2b3b8:	ldr	r1, [fp, #-16]
   2b3bc:	str	ip, [sp, #28]
   2b3c0:	bl	2a38c <__assert_fail@plt+0x18c38>
   2b3c4:	str	r0, [fp, #-32]	; 0xffffffe0
   2b3c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b3cc:	cmn	r0, #1
   2b3d0:	bne	2b3e0 <__assert_fail@plt+0x19c8c>
   2b3d4:	movw	r0, #0
   2b3d8:	str	r0, [fp, #-4]
   2b3dc:	b	2b74c <__assert_fail@plt+0x19ff8>
   2b3e0:	b	2b3e4 <__assert_fail@plt+0x19c90>
   2b3e4:	ldr	r0, [fp, #-8]
   2b3e8:	ldr	r0, [r0, #116]	; 0x74
   2b3ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b3f0:	movw	r2, #24
   2b3f4:	mul	r1, r1, r2
   2b3f8:	add	r0, r0, r1
   2b3fc:	str	r0, [fp, #-36]	; 0xffffffdc
   2b400:	ldr	r0, [fp, #-12]
   2b404:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b408:	ldr	r1, [r1]
   2b40c:	bl	25f04 <__assert_fail@plt+0x147b0>
   2b410:	cmp	r0, #0
   2b414:	bne	2b41c <__assert_fail@plt+0x19cc8>
   2b418:	b	2b72c <__assert_fail@plt+0x19fd8>
   2b41c:	ldr	r0, [fp, #-16]
   2b420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b424:	ldr	r1, [r1, #12]
   2b428:	add	r0, r0, r1
   2b42c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b430:	ldr	r1, [r1, #8]
   2b434:	sub	r0, r0, r1
   2b438:	str	r0, [fp, #-40]	; 0xffffffd8
   2b43c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b440:	ldr	r1, [fp, #-16]
   2b444:	cmp	r0, r1
   2b448:	bne	2b56c <__assert_fail@plt+0x19e18>
   2b44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b450:	ldr	r0, [r0, #20]
   2b454:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b458:	ldr	r1, [r1]
   2b45c:	movw	r2, #12
   2b460:	mul	r1, r1, r2
   2b464:	add	r0, r0, r1
   2b468:	ldr	r0, [r0, #8]
   2b46c:	ldr	r0, [r0]
   2b470:	str	r0, [fp, #-44]	; 0xffffffd4
   2b474:	ldr	r0, [fp, #-12]
   2b478:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b47c:	bl	25f04 <__assert_fail@plt+0x147b0>
   2b480:	cmp	r0, #0
   2b484:	beq	2b48c <__assert_fail@plt+0x19d38>
   2b488:	b	2b72c <__assert_fail@plt+0x19fd8>
   2b48c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b490:	add	r0, sp, #56	; 0x38
   2b494:	bl	24b7c <__assert_fail@plt+0x13428>
   2b498:	str	r0, [fp, #-28]	; 0xffffffe4
   2b49c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b4a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b4a4:	ldr	r3, [fp, #8]
   2b4a8:	add	r1, sp, #56	; 0x38
   2b4ac:	bl	2b1e4 <__assert_fail@plt+0x19a90>
   2b4b0:	str	r0, [sp, #52]	; 0x34
   2b4b4:	ldr	r0, [fp, #-12]
   2b4b8:	add	r1, sp, #56	; 0x38
   2b4bc:	bl	2555c <__assert_fail@plt+0x13e08>
   2b4c0:	str	r0, [sp, #48]	; 0x30
   2b4c4:	ldr	r0, [sp, #64]	; 0x40
   2b4c8:	bl	1604c <__assert_fail@plt+0x48f8>
   2b4cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b4d0:	cmp	r0, #0
   2b4d4:	movw	r0, #1
   2b4d8:	str	r0, [sp, #24]
   2b4dc:	bne	2b508 <__assert_fail@plt+0x19db4>
   2b4e0:	ldr	r0, [sp, #52]	; 0x34
   2b4e4:	cmp	r0, #0
   2b4e8:	movw	r0, #1
   2b4ec:	str	r0, [sp, #24]
   2b4f0:	bne	2b508 <__assert_fail@plt+0x19db4>
   2b4f4:	ldr	r0, [sp, #48]	; 0x30
   2b4f8:	cmp	r0, #0
   2b4fc:	movw	r0, #0
   2b500:	movne	r0, #1
   2b504:	str	r0, [sp, #24]
   2b508:	ldr	r0, [sp, #24]
   2b50c:	tst	r0, #1
   2b510:	beq	2b568 <__assert_fail@plt+0x19e14>
   2b514:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b518:	cmp	r0, #0
   2b51c:	beq	2b52c <__assert_fail@plt+0x19dd8>
   2b520:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b524:	str	r0, [sp, #20]
   2b528:	b	2b554 <__assert_fail@plt+0x19e00>
   2b52c:	ldr	r0, [sp, #52]	; 0x34
   2b530:	cmp	r0, #0
   2b534:	beq	2b544 <__assert_fail@plt+0x19df0>
   2b538:	ldr	r0, [sp, #52]	; 0x34
   2b53c:	str	r0, [sp, #16]
   2b540:	b	2b54c <__assert_fail@plt+0x19df8>
   2b544:	ldr	r0, [sp, #48]	; 0x30
   2b548:	str	r0, [sp, #16]
   2b54c:	ldr	r0, [sp, #16]
   2b550:	str	r0, [sp, #20]
   2b554:	ldr	r0, [sp, #20]
   2b558:	str	r0, [fp, #-28]	; 0xffffffe4
   2b55c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b560:	str	r0, [fp, #-4]
   2b564:	b	2b74c <__assert_fail@plt+0x19ff8>
   2b568:	b	2b3e4 <__assert_fail@plt+0x19c90>
   2b56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b570:	ldr	r0, [r0, #12]
   2b574:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b578:	ldr	r1, [r1]
   2b57c:	ldr	r0, [r0, r1, lsl #2]
   2b580:	str	r0, [fp, #-44]	; 0xffffffd4
   2b584:	ldr	r0, [fp, #-8]
   2b588:	ldr	r0, [r0, #100]	; 0x64
   2b58c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b590:	add	r0, r0, r1, lsl #2
   2b594:	ldr	r0, [r0]
   2b598:	movw	r1, #0
   2b59c:	cmp	r0, r1
   2b5a0:	beq	2b67c <__assert_fail@plt+0x19f28>
   2b5a4:	ldr	r0, [fp, #-8]
   2b5a8:	ldr	r0, [r0, #100]	; 0x64
   2b5ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b5b0:	add	r0, r0, r1, lsl #2
   2b5b4:	ldr	r0, [r0]
   2b5b8:	add	r0, r0, #4
   2b5bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b5c0:	bl	25f04 <__assert_fail@plt+0x147b0>
   2b5c4:	cmp	r0, #0
   2b5c8:	beq	2b5d0 <__assert_fail@plt+0x19e7c>
   2b5cc:	b	2b72c <__assert_fail@plt+0x19fd8>
   2b5d0:	ldr	r0, [fp, #-8]
   2b5d4:	ldr	r0, [r0, #100]	; 0x64
   2b5d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b5dc:	add	r0, r0, r1, lsl #2
   2b5e0:	ldr	r0, [r0]
   2b5e4:	add	r1, r0, #4
   2b5e8:	add	r0, sp, #36	; 0x24
   2b5ec:	bl	25e30 <__assert_fail@plt+0x146dc>
   2b5f0:	str	r0, [fp, #-28]	; 0xffffffe4
   2b5f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b5f8:	add	r0, sp, #36	; 0x24
   2b5fc:	bl	25a48 <__assert_fail@plt+0x142f4>
   2b600:	and	r0, r0, #1
   2b604:	strb	r0, [sp, #35]	; 0x23
   2b608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b60c:	cmp	r0, #0
   2b610:	movw	r0, #1
   2b614:	str	r0, [sp, #12]
   2b618:	bne	2b62c <__assert_fail@plt+0x19ed8>
   2b61c:	ldrb	r0, [sp, #35]	; 0x23
   2b620:	mvn	r1, #0
   2b624:	eor	r0, r0, r1
   2b628:	str	r0, [sp, #12]
   2b62c:	ldr	r0, [sp, #12]
   2b630:	tst	r0, #1
   2b634:	beq	2b678 <__assert_fail@plt+0x19f24>
   2b638:	ldr	r0, [sp, #44]	; 0x2c
   2b63c:	bl	1604c <__assert_fail@plt+0x48f8>
   2b640:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b644:	cmp	r0, #0
   2b648:	beq	2b658 <__assert_fail@plt+0x19f04>
   2b64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b650:	str	r0, [sp, #8]
   2b654:	b	2b664 <__assert_fail@plt+0x19f10>
   2b658:	movw	r0, #12
   2b65c:	str	r0, [sp, #8]
   2b660:	b	2b664 <__assert_fail@plt+0x19f10>
   2b664:	ldr	r0, [sp, #8]
   2b668:	str	r0, [fp, #-28]	; 0xffffffe4
   2b66c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b670:	str	r0, [fp, #-4]
   2b674:	b	2b74c <__assert_fail@plt+0x19ff8>
   2b678:	b	2b6a8 <__assert_fail@plt+0x19f54>
   2b67c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b680:	add	r0, sp, #36	; 0x24
   2b684:	bl	24b7c <__assert_fail@plt+0x13428>
   2b688:	str	r0, [fp, #-28]	; 0xffffffe4
   2b68c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b690:	cmp	r0, #0
   2b694:	beq	2b6a4 <__assert_fail@plt+0x19f50>
   2b698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b69c:	str	r0, [fp, #-4]
   2b6a0:	b	2b74c <__assert_fail@plt+0x19ff8>
   2b6a4:	b	2b6a8 <__assert_fail@plt+0x19f54>
   2b6a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b6ac:	sub	r0, fp, #28
   2b6b0:	add	r2, sp, #36	; 0x24
   2b6b4:	bl	2bc38 <__assert_fail@plt+0x1a4e4>
   2b6b8:	ldr	r1, [fp, #-8]
   2b6bc:	ldr	r1, [r1, #100]	; 0x64
   2b6c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b6c4:	str	r0, [r1, r2, lsl #2]
   2b6c8:	ldr	r0, [sp, #44]	; 0x2c
   2b6cc:	bl	1604c <__assert_fail@plt+0x48f8>
   2b6d0:	ldr	r0, [fp, #-8]
   2b6d4:	ldr	r0, [r0, #100]	; 0x64
   2b6d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b6dc:	add	r0, r0, r1, lsl #2
   2b6e0:	ldr	r0, [r0]
   2b6e4:	movw	r1, #0
   2b6e8:	cmp	r0, r1
   2b6ec:	movw	r0, #0
   2b6f0:	str	r0, [sp, #4]
   2b6f4:	bne	2b70c <__assert_fail@plt+0x19fb8>
   2b6f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b6fc:	cmp	r0, #0
   2b700:	movw	r0, #0
   2b704:	movne	r0, #1
   2b708:	str	r0, [sp, #4]
   2b70c:	ldr	r0, [sp, #4]
   2b710:	tst	r0, #1
   2b714:	beq	2b724 <__assert_fail@plt+0x19fd0>
   2b718:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b71c:	str	r0, [fp, #-4]
   2b720:	b	2b74c <__assert_fail@plt+0x19ff8>
   2b724:	b	2b728 <__assert_fail@plt+0x19fd4>
   2b728:	b	2b72c <__assert_fail@plt+0x19fd8>
   2b72c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b730:	add	r1, r0, #24
   2b734:	str	r1, [fp, #-36]	; 0xffffffdc
   2b738:	ldrsb	r0, [r0, #20]
   2b73c:	cmp	r0, #0
   2b740:	bne	2b400 <__assert_fail@plt+0x19cac>
   2b744:	movw	r0, #0
   2b748:	str	r0, [fp, #-4]
   2b74c:	ldr	r0, [fp, #-4]
   2b750:	mov	sp, fp
   2b754:	pop	{fp, pc}
   2b758:	push	{fp, lr}
   2b75c:	mov	fp, sp
   2b760:	sub	sp, sp, #80	; 0x50
   2b764:	str	r0, [fp, #-8]
   2b768:	str	r1, [fp, #-12]
   2b76c:	str	r2, [fp, #-16]
   2b770:	str	r3, [fp, #-20]	; 0xffffffec
   2b774:	ldr	r0, [fp, #-8]
   2b778:	ldr	r0, [r0, #84]	; 0x54
   2b77c:	str	r0, [fp, #-24]	; 0xffffffe8
   2b780:	movw	r0, #0
   2b784:	str	r0, [fp, #-36]	; 0xffffffdc
   2b788:	add	r1, sp, #32
   2b78c:	str	r0, [sp, #8]
   2b790:	mov	r0, r1
   2b794:	movw	r1, #0
   2b798:	and	r1, r1, #255	; 0xff
   2b79c:	movw	r2, #12
   2b7a0:	bl	11658 <memset@plt>
   2b7a4:	ldr	r0, [sp, #8]
   2b7a8:	str	r0, [fp, #-32]	; 0xffffffe0
   2b7ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b7b0:	ldr	r1, [fp, #-16]
   2b7b4:	ldr	r1, [r1, #4]
   2b7b8:	cmp	r0, r1
   2b7bc:	bge	2ba28 <__assert_fail@plt+0x1a2d4>
   2b7c0:	mov	r0, #0
   2b7c4:	str	r0, [sp, #28]
   2b7c8:	ldr	r0, [fp, #-16]
   2b7cc:	ldr	r0, [r0, #8]
   2b7d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b7d4:	ldr	r0, [r0, r1, lsl #2]
   2b7d8:	str	r0, [sp, #24]
   2b7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b7e0:	ldr	r0, [r0]
   2b7e4:	ldr	r1, [sp, #24]
   2b7e8:	add	r0, r0, r1, lsl #3
   2b7ec:	ldr	r0, [r0, #4]
   2b7f0:	and	r0, r0, #255	; 0xff
   2b7f4:	and	r0, r0, #8
   2b7f8:	cmp	r0, #0
   2b7fc:	bne	2b804 <__assert_fail@plt+0x1a0b0>
   2b800:	b	2b804 <__assert_fail@plt+0x1a0b0>
   2b804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b808:	ldr	r0, [r0]
   2b80c:	ldr	r1, [sp, #24]
   2b810:	add	r0, r0, r1, lsl #3
   2b814:	ldr	r0, [r0, #4]
   2b818:	lsr	r0, r0, #20
   2b81c:	and	r0, r0, #1
   2b820:	cmp	r0, #0
   2b824:	beq	2b994 <__assert_fail@plt+0x1a240>
   2b828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b82c:	ldr	r1, [sp, #24]
   2b830:	ldr	r2, [fp, #-8]
   2b834:	ldr	r3, [fp, #-12]
   2b838:	bl	2bf90 <__assert_fail@plt+0x1a83c>
   2b83c:	str	r0, [sp, #28]
   2b840:	ldr	r0, [sp, #28]
   2b844:	cmp	r0, #1
   2b848:	ble	2b990 <__assert_fail@plt+0x1a23c>
   2b84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b850:	ldr	r0, [r0, #12]
   2b854:	ldr	r1, [sp, #24]
   2b858:	ldr	r0, [r0, r1, lsl #2]
   2b85c:	str	r0, [sp, #16]
   2b860:	ldr	r0, [fp, #-12]
   2b864:	ldr	r1, [sp, #28]
   2b868:	add	r0, r0, r1
   2b86c:	str	r0, [sp, #12]
   2b870:	ldr	r0, [fp, #-8]
   2b874:	ldr	r0, [r0, #100]	; 0x64
   2b878:	ldr	r1, [sp, #12]
   2b87c:	add	r0, r0, r1, lsl #2
   2b880:	ldr	r0, [r0]
   2b884:	str	r0, [sp, #20]
   2b888:	movw	r0, #0
   2b88c:	str	r0, [sp, #36]	; 0x24
   2b890:	ldr	r1, [sp, #20]
   2b894:	cmp	r1, r0
   2b898:	beq	2b8d4 <__assert_fail@plt+0x1a180>
   2b89c:	ldr	r0, [sp, #20]
   2b8a0:	add	r1, r0, #4
   2b8a4:	add	r0, sp, #32
   2b8a8:	bl	2555c <__assert_fail@plt+0x13e08>
   2b8ac:	str	r0, [fp, #-36]	; 0xffffffdc
   2b8b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2b8d0 <__assert_fail@plt+0x1a17c>
   2b8bc:	ldr	r0, [sp, #40]	; 0x28
   2b8c0:	bl	1604c <__assert_fail@plt+0x48f8>
   2b8c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b8c8:	str	r0, [fp, #-4]
   2b8cc:	b	2ba38 <__assert_fail@plt+0x1a2e4>
   2b8d0:	b	2b8d4 <__assert_fail@plt+0x1a180>
   2b8d4:	ldr	r1, [sp, #16]
   2b8d8:	add	r0, sp, #32
   2b8dc:	bl	25a48 <__assert_fail@plt+0x142f4>
   2b8e0:	and	r0, r0, #1
   2b8e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   2b8e8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2b8ec:	mvn	r1, #0
   2b8f0:	eor	r0, r0, r1
   2b8f4:	tst	r0, #1
   2b8f8:	beq	2b910 <__assert_fail@plt+0x1a1bc>
   2b8fc:	ldr	r0, [sp, #40]	; 0x28
   2b900:	bl	1604c <__assert_fail@plt+0x48f8>
   2b904:	movw	r0, #12
   2b908:	str	r0, [fp, #-4]
   2b90c:	b	2ba38 <__assert_fail@plt+0x1a2e4>
   2b910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b914:	sub	r0, fp, #36	; 0x24
   2b918:	add	r2, sp, #32
   2b91c:	bl	2bc38 <__assert_fail@plt+0x1a4e4>
   2b920:	ldr	r1, [fp, #-8]
   2b924:	ldr	r1, [r1, #100]	; 0x64
   2b928:	ldr	r2, [sp, #12]
   2b92c:	str	r0, [r1, r2, lsl #2]
   2b930:	ldr	r0, [fp, #-8]
   2b934:	ldr	r0, [r0, #100]	; 0x64
   2b938:	ldr	r1, [sp, #12]
   2b93c:	add	r0, r0, r1, lsl #2
   2b940:	ldr	r0, [r0]
   2b944:	movw	r1, #0
   2b948:	cmp	r0, r1
   2b94c:	movw	r0, #0
   2b950:	str	r0, [sp, #4]
   2b954:	bne	2b96c <__assert_fail@plt+0x1a218>
   2b958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b95c:	cmp	r0, #0
   2b960:	movw	r0, #0
   2b964:	movne	r0, #1
   2b968:	str	r0, [sp, #4]
   2b96c:	ldr	r0, [sp, #4]
   2b970:	tst	r0, #1
   2b974:	beq	2b98c <__assert_fail@plt+0x1a238>
   2b978:	ldr	r0, [sp, #40]	; 0x28
   2b97c:	bl	1604c <__assert_fail@plt+0x48f8>
   2b980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b984:	str	r0, [fp, #-4]
   2b988:	b	2ba38 <__assert_fail@plt+0x1a2e4>
   2b98c:	b	2b990 <__assert_fail@plt+0x1a23c>
   2b990:	b	2b994 <__assert_fail@plt+0x1a240>
   2b994:	ldr	r0, [sp, #28]
   2b998:	cmp	r0, #0
   2b99c:	bne	2b9c4 <__assert_fail@plt+0x1a270>
   2b9a0:	ldr	r0, [fp, #-8]
   2b9a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b9a8:	ldr	r1, [r1]
   2b9ac:	ldr	r2, [sp, #24]
   2b9b0:	add	r1, r1, r2, lsl #3
   2b9b4:	ldr	r2, [fp, #-12]
   2b9b8:	bl	2c578 <__assert_fail@plt+0x1ae24>
   2b9bc:	tst	r0, #1
   2b9c0:	beq	2ba14 <__assert_fail@plt+0x1a2c0>
   2b9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b9c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b9cc:	ldr	r1, [r1, #12]
   2b9d0:	ldr	r2, [sp, #24]
   2b9d4:	add	r1, r1, r2, lsl #2
   2b9d8:	ldr	r1, [r1]
   2b9dc:	bl	25a48 <__assert_fail@plt+0x142f4>
   2b9e0:	and	r0, r0, #1
   2b9e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   2b9e8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2b9ec:	mvn	r1, #0
   2b9f0:	eor	r0, r0, r1
   2b9f4:	tst	r0, #1
   2b9f8:	beq	2ba10 <__assert_fail@plt+0x1a2bc>
   2b9fc:	ldr	r0, [sp, #40]	; 0x28
   2ba00:	bl	1604c <__assert_fail@plt+0x48f8>
   2ba04:	movw	r0, #12
   2ba08:	str	r0, [fp, #-4]
   2ba0c:	b	2ba38 <__assert_fail@plt+0x1a2e4>
   2ba10:	b	2ba14 <__assert_fail@plt+0x1a2c0>
   2ba14:	b	2ba18 <__assert_fail@plt+0x1a2c4>
   2ba18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ba1c:	add	r0, r0, #1
   2ba20:	str	r0, [fp, #-32]	; 0xffffffe0
   2ba24:	b	2b7ac <__assert_fail@plt+0x1a058>
   2ba28:	ldr	r0, [sp, #40]	; 0x28
   2ba2c:	bl	1604c <__assert_fail@plt+0x48f8>
   2ba30:	movw	r0, #0
   2ba34:	str	r0, [fp, #-4]
   2ba38:	ldr	r0, [fp, #-4]
   2ba3c:	mov	sp, fp
   2ba40:	pop	{fp, pc}
   2ba44:	push	{fp, lr}
   2ba48:	mov	fp, sp
   2ba4c:	sub	sp, sp, #40	; 0x28
   2ba50:	ldr	ip, [fp, #8]
   2ba54:	str	r0, [fp, #-8]
   2ba58:	str	r1, [fp, #-12]
   2ba5c:	str	r2, [fp, #-16]
   2ba60:	str	r3, [sp, #20]
   2ba64:	ldr	r0, [fp, #-16]
   2ba68:	str	r0, [sp, #16]
   2ba6c:	str	ip, [sp, #4]
   2ba70:	ldr	r0, [fp, #-12]
   2ba74:	ldr	r1, [sp, #16]
   2ba78:	bl	25f04 <__assert_fail@plt+0x147b0>
   2ba7c:	cmp	r0, #0
   2ba80:	movw	r0, #0
   2ba84:	movne	r0, #1
   2ba88:	mvn	r1, #0
   2ba8c:	eor	r0, r0, r1
   2ba90:	tst	r0, #1
   2ba94:	beq	2bc24 <__assert_fail@plt+0x1a4d0>
   2ba98:	ldr	r0, [fp, #-8]
   2ba9c:	ldr	r0, [r0]
   2baa0:	ldr	r1, [sp, #16]
   2baa4:	add	r0, r0, r1, lsl #3
   2baa8:	ldr	r0, [r0, #4]
   2baac:	and	r0, r0, #255	; 0xff
   2bab0:	ldr	r1, [fp, #8]
   2bab4:	cmp	r0, r1
   2bab8:	bne	2bb24 <__assert_fail@plt+0x1a3d0>
   2babc:	ldr	r0, [fp, #-8]
   2bac0:	ldr	r0, [r0]
   2bac4:	ldr	r1, [sp, #16]
   2bac8:	add	r0, r0, r1, lsl #3
   2bacc:	ldr	r0, [r0]
   2bad0:	ldr	r1, [sp, #20]
   2bad4:	cmp	r0, r1
   2bad8:	bne	2bb24 <__assert_fail@plt+0x1a3d0>
   2badc:	ldr	r0, [fp, #8]
   2bae0:	cmp	r0, #9
   2bae4:	bne	2bb20 <__assert_fail@plt+0x1a3cc>
   2bae8:	ldr	r0, [fp, #-12]
   2baec:	ldr	r1, [sp, #16]
   2baf0:	bl	25a48 <__assert_fail@plt+0x142f4>
   2baf4:	and	r0, r0, #1
   2baf8:	strb	r0, [sp, #15]
   2bafc:	ldrb	r0, [sp, #15]
   2bb00:	mvn	r1, #0
   2bb04:	eor	r0, r0, r1
   2bb08:	tst	r0, #1
   2bb0c:	beq	2bb1c <__assert_fail@plt+0x1a3c8>
   2bb10:	movw	r0, #12
   2bb14:	str	r0, [fp, #-4]
   2bb18:	b	2bc2c <__assert_fail@plt+0x1a4d8>
   2bb1c:	b	2bb20 <__assert_fail@plt+0x1a3cc>
   2bb20:	b	2bc24 <__assert_fail@plt+0x1a4d0>
   2bb24:	ldr	r0, [fp, #-12]
   2bb28:	ldr	r1, [sp, #16]
   2bb2c:	bl	25a48 <__assert_fail@plt+0x142f4>
   2bb30:	and	r0, r0, #1
   2bb34:	strb	r0, [sp, #15]
   2bb38:	ldrb	r0, [sp, #15]
   2bb3c:	mvn	r1, #0
   2bb40:	eor	r0, r0, r1
   2bb44:	tst	r0, #1
   2bb48:	beq	2bb58 <__assert_fail@plt+0x1a404>
   2bb4c:	movw	r0, #12
   2bb50:	str	r0, [fp, #-4]
   2bb54:	b	2bc2c <__assert_fail@plt+0x1a4d8>
   2bb58:	ldr	r0, [fp, #-8]
   2bb5c:	ldr	r0, [r0, #20]
   2bb60:	ldr	r1, [sp, #16]
   2bb64:	movw	r2, #12
   2bb68:	mul	r1, r1, r2
   2bb6c:	add	r0, r0, r1
   2bb70:	ldr	r0, [r0, #4]
   2bb74:	cmp	r0, #0
   2bb78:	bne	2bb80 <__assert_fail@plt+0x1a42c>
   2bb7c:	b	2bc24 <__assert_fail@plt+0x1a4d0>
   2bb80:	ldr	r0, [fp, #-8]
   2bb84:	ldr	r0, [r0, #20]
   2bb88:	ldr	r1, [sp, #16]
   2bb8c:	movw	r2, #12
   2bb90:	mul	r1, r1, r2
   2bb94:	add	r0, r0, r1
   2bb98:	ldr	r0, [r0, #4]
   2bb9c:	cmp	r0, #2
   2bba0:	bne	2bbfc <__assert_fail@plt+0x1a4a8>
   2bba4:	ldr	r0, [fp, #-8]
   2bba8:	ldr	r1, [fp, #-12]
   2bbac:	ldr	r2, [fp, #-8]
   2bbb0:	ldr	r2, [r2, #20]
   2bbb4:	ldr	r3, [sp, #16]
   2bbb8:	movw	ip, #12
   2bbbc:	mul	r3, r3, ip
   2bbc0:	add	r2, r2, r3
   2bbc4:	ldr	r2, [r2, #8]
   2bbc8:	ldr	r2, [r2, #4]
   2bbcc:	ldr	r3, [sp, #20]
   2bbd0:	ldr	ip, [fp, #8]
   2bbd4:	str	ip, [sp]
   2bbd8:	bl	2ba44 <__assert_fail@plt+0x1a2f0>
   2bbdc:	str	r0, [sp, #8]
   2bbe0:	ldr	r0, [sp, #8]
   2bbe4:	cmp	r0, #0
   2bbe8:	beq	2bbf8 <__assert_fail@plt+0x1a4a4>
   2bbec:	ldr	r0, [sp, #8]
   2bbf0:	str	r0, [fp, #-4]
   2bbf4:	b	2bc2c <__assert_fail@plt+0x1a4d8>
   2bbf8:	b	2bbfc <__assert_fail@plt+0x1a4a8>
   2bbfc:	ldr	r0, [fp, #-8]
   2bc00:	ldr	r0, [r0, #20]
   2bc04:	ldr	r1, [sp, #16]
   2bc08:	movw	r2, #12
   2bc0c:	mul	r1, r1, r2
   2bc10:	add	r0, r0, r1
   2bc14:	ldr	r0, [r0, #8]
   2bc18:	ldr	r0, [r0]
   2bc1c:	str	r0, [sp, #16]
   2bc20:	b	2ba70 <__assert_fail@plt+0x1a31c>
   2bc24:	movw	r0, #0
   2bc28:	str	r0, [fp, #-4]
   2bc2c:	ldr	r0, [fp, #-4]
   2bc30:	mov	sp, fp
   2bc34:	pop	{fp, pc}
   2bc38:	push	{fp, lr}
   2bc3c:	mov	fp, sp
   2bc40:	sub	sp, sp, #40	; 0x28
   2bc44:	str	r0, [fp, #-8]
   2bc48:	str	r1, [fp, #-12]
   2bc4c:	str	r2, [fp, #-16]
   2bc50:	ldr	r0, [fp, #-16]
   2bc54:	ldr	r0, [r0, #4]
   2bc58:	cmp	r0, #0
   2bc5c:	bne	2bc74 <__assert_fail@plt+0x1a520>
   2bc60:	ldr	r0, [fp, #-8]
   2bc64:	movw	r1, #0
   2bc68:	str	r1, [r0]
   2bc6c:	str	r1, [fp, #-4]
   2bc70:	b	2bd68 <__assert_fail@plt+0x1a614>
   2bc74:	ldr	r0, [fp, #-16]
   2bc78:	movw	r1, #0
   2bc7c:	bl	26150 <__assert_fail@plt+0x149fc>
   2bc80:	str	r0, [sp, #20]
   2bc84:	ldr	r0, [fp, #-12]
   2bc88:	ldr	r0, [r0, #32]
   2bc8c:	ldr	r1, [sp, #20]
   2bc90:	ldr	lr, [fp, #-12]
   2bc94:	ldr	lr, [lr, #68]	; 0x44
   2bc98:	and	r1, r1, lr
   2bc9c:	movw	lr, #12
   2bca0:	mul	r1, r1, lr
   2bca4:	add	r0, r0, r1
   2bca8:	str	r0, [sp, #12]
   2bcac:	movw	r0, #0
   2bcb0:	str	r0, [sp, #8]
   2bcb4:	ldr	r0, [sp, #8]
   2bcb8:	ldr	r1, [sp, #12]
   2bcbc:	ldr	r1, [r1]
   2bcc0:	cmp	r0, r1
   2bcc4:	bge	2bd30 <__assert_fail@plt+0x1a5dc>
   2bcc8:	ldr	r0, [sp, #12]
   2bccc:	ldr	r0, [r0, #8]
   2bcd0:	ldr	r1, [sp, #8]
   2bcd4:	add	r0, r0, r1, lsl #2
   2bcd8:	ldr	r0, [r0]
   2bcdc:	str	r0, [sp, #4]
   2bce0:	ldr	r0, [sp, #20]
   2bce4:	ldr	r1, [sp, #4]
   2bce8:	ldr	r1, [r1]
   2bcec:	cmp	r0, r1
   2bcf0:	beq	2bcf8 <__assert_fail@plt+0x1a5a4>
   2bcf4:	b	2bd20 <__assert_fail@plt+0x1a5cc>
   2bcf8:	ldr	r0, [sp, #4]
   2bcfc:	add	r0, r0, #4
   2bd00:	ldr	r1, [fp, #-16]
   2bd04:	bl	261c8 <__assert_fail@plt+0x14a74>
   2bd08:	tst	r0, #1
   2bd0c:	beq	2bd1c <__assert_fail@plt+0x1a5c8>
   2bd10:	ldr	r0, [sp, #4]
   2bd14:	str	r0, [fp, #-4]
   2bd18:	b	2bd68 <__assert_fail@plt+0x1a614>
   2bd1c:	b	2bd20 <__assert_fail@plt+0x1a5cc>
   2bd20:	ldr	r0, [sp, #8]
   2bd24:	add	r0, r0, #1
   2bd28:	str	r0, [sp, #8]
   2bd2c:	b	2bcb4 <__assert_fail@plt+0x1a560>
   2bd30:	ldr	r0, [fp, #-12]
   2bd34:	ldr	r1, [fp, #-16]
   2bd38:	ldr	r2, [sp, #20]
   2bd3c:	bl	2bd74 <__assert_fail@plt+0x1a620>
   2bd40:	str	r0, [sp, #16]
   2bd44:	ldr	r0, [sp, #16]
   2bd48:	movw	r1, #0
   2bd4c:	cmp	r0, r1
   2bd50:	bne	2bd60 <__assert_fail@plt+0x1a60c>
   2bd54:	ldr	r0, [fp, #-8]
   2bd58:	movw	r1, #12
   2bd5c:	str	r1, [r0]
   2bd60:	ldr	r0, [sp, #16]
   2bd64:	str	r0, [fp, #-4]
   2bd68:	ldr	r0, [fp, #-4]
   2bd6c:	mov	sp, fp
   2bd70:	pop	{fp, pc}
   2bd74:	push	{fp, lr}
   2bd78:	mov	fp, sp
   2bd7c:	sub	sp, sp, #40	; 0x28
   2bd80:	str	r0, [fp, #-8]
   2bd84:	str	r1, [fp, #-12]
   2bd88:	str	r2, [fp, #-16]
   2bd8c:	movw	r0, #56	; 0x38
   2bd90:	movw	r1, #1
   2bd94:	bl	389e0 <__assert_fail@plt+0x2728c>
   2bd98:	str	r0, [sp, #12]
   2bd9c:	ldr	r0, [sp, #12]
   2bda0:	movw	r1, #0
   2bda4:	cmp	r0, r1
   2bda8:	bne	2bdb8 <__assert_fail@plt+0x1a664>
   2bdac:	movw	r0, #0
   2bdb0:	str	r0, [fp, #-4]
   2bdb4:	b	2bf84 <__assert_fail@plt+0x1a830>
   2bdb8:	ldr	r0, [sp, #12]
   2bdbc:	add	r0, r0, #4
   2bdc0:	ldr	r1, [fp, #-12]
   2bdc4:	bl	25e30 <__assert_fail@plt+0x146dc>
   2bdc8:	str	r0, [sp, #16]
   2bdcc:	ldr	r0, [sp, #16]
   2bdd0:	cmp	r0, #0
   2bdd4:	beq	2bdec <__assert_fail@plt+0x1a698>
   2bdd8:	ldr	r0, [sp, #12]
   2bddc:	bl	1604c <__assert_fail@plt+0x48f8>
   2bde0:	movw	r0, #0
   2bde4:	str	r0, [fp, #-4]
   2bde8:	b	2bf84 <__assert_fail@plt+0x1a830>
   2bdec:	ldr	r0, [sp, #12]
   2bdf0:	add	r0, r0, #4
   2bdf4:	ldr	r1, [sp, #12]
   2bdf8:	str	r0, [r1, #40]	; 0x28
   2bdfc:	movw	r0, #0
   2be00:	str	r0, [sp, #20]
   2be04:	ldr	r0, [sp, #20]
   2be08:	ldr	r1, [fp, #-12]
   2be0c:	ldr	r1, [r1, #4]
   2be10:	cmp	r0, r1
   2be14:	bge	2bf4c <__assert_fail@plt+0x1a7f8>
   2be18:	ldr	r0, [fp, #-8]
   2be1c:	ldr	r0, [r0]
   2be20:	ldr	r1, [fp, #-12]
   2be24:	ldr	r1, [r1, #8]
   2be28:	ldr	r2, [sp, #20]
   2be2c:	ldr	r1, [r1, r2, lsl #2]
   2be30:	add	r0, r0, r1, lsl #3
   2be34:	str	r0, [sp, #8]
   2be38:	ldr	r0, [sp, #8]
   2be3c:	ldr	r0, [r0, #4]
   2be40:	and	r0, r0, #255	; 0xff
   2be44:	str	r0, [sp, #4]
   2be48:	ldr	r0, [sp, #4]
   2be4c:	cmp	r0, #1
   2be50:	bne	2be74 <__assert_fail@plt+0x1a720>
   2be54:	ldr	r0, [sp, #8]
   2be58:	ldr	r0, [r0, #4]
   2be5c:	lsr	r0, r0, #8
   2be60:	movw	r1, #1023	; 0x3ff
   2be64:	and	r0, r0, r1
   2be68:	cmp	r0, #0
   2be6c:	bne	2be74 <__assert_fail@plt+0x1a720>
   2be70:	b	2bf3c <__assert_fail@plt+0x1a7e8>
   2be74:	ldr	r0, [sp, #8]
   2be78:	ldr	r0, [r0, #4]
   2be7c:	ldr	r1, [sp, #12]
   2be80:	ldrb	r2, [r1, #52]	; 0x34
   2be84:	lsr	r3, r2, #5
   2be88:	orr	r0, r3, r0, lsr #20
   2be8c:	and	r0, r0, #1
   2be90:	lsl	r0, r0, #5
   2be94:	bic	r2, r2, #32
   2be98:	orr	r0, r2, r0
   2be9c:	strb	r0, [r1, #52]	; 0x34
   2bea0:	ldr	r0, [sp, #4]
   2bea4:	cmp	r0, #2
   2bea8:	bne	2bec8 <__assert_fail@plt+0x1a774>
   2beac:	ldr	r0, [sp, #12]
   2beb0:	ldrb	r1, [r0, #52]	; 0x34
   2beb4:	bic	r1, r1, #16
   2beb8:	movw	r2, #16
   2bebc:	orr	r1, r1, r2
   2bec0:	strb	r1, [r0, #52]	; 0x34
   2bec4:	b	2bf38 <__assert_fail@plt+0x1a7e4>
   2bec8:	ldr	r0, [sp, #4]
   2becc:	cmp	r0, #4
   2bed0:	bne	2bef0 <__assert_fail@plt+0x1a79c>
   2bed4:	ldr	r0, [sp, #12]
   2bed8:	ldrb	r1, [r0, #52]	; 0x34
   2bedc:	bic	r1, r1, #64	; 0x40
   2bee0:	movw	r2, #64	; 0x40
   2bee4:	orr	r1, r1, r2
   2bee8:	strb	r1, [r0, #52]	; 0x34
   2beec:	b	2bf34 <__assert_fail@plt+0x1a7e0>
   2bef0:	ldr	r0, [sp, #4]
   2bef4:	cmp	r0, #12
   2bef8:	beq	2bf18 <__assert_fail@plt+0x1a7c4>
   2befc:	ldr	r0, [sp, #8]
   2bf00:	ldr	r0, [r0, #4]
   2bf04:	lsr	r0, r0, #8
   2bf08:	movw	r1, #1023	; 0x3ff
   2bf0c:	and	r0, r0, r1
   2bf10:	cmp	r0, #0
   2bf14:	beq	2bf30 <__assert_fail@plt+0x1a7dc>
   2bf18:	ldr	r0, [sp, #12]
   2bf1c:	ldrb	r1, [r0, #52]	; 0x34
   2bf20:	and	r1, r1, #127	; 0x7f
   2bf24:	movw	r2, #128	; 0x80
   2bf28:	orr	r1, r1, r2
   2bf2c:	strb	r1, [r0, #52]	; 0x34
   2bf30:	b	2bf34 <__assert_fail@plt+0x1a7e0>
   2bf34:	b	2bf38 <__assert_fail@plt+0x1a7e4>
   2bf38:	b	2bf3c <__assert_fail@plt+0x1a7e8>
   2bf3c:	ldr	r0, [sp, #20]
   2bf40:	add	r0, r0, #1
   2bf44:	str	r0, [sp, #20]
   2bf48:	b	2be04 <__assert_fail@plt+0x1a6b0>
   2bf4c:	ldr	r0, [fp, #-8]
   2bf50:	ldr	r1, [sp, #12]
   2bf54:	ldr	r2, [fp, #-16]
   2bf58:	bl	26678 <__assert_fail@plt+0x14f24>
   2bf5c:	str	r0, [sp, #16]
   2bf60:	ldr	r0, [sp, #16]
   2bf64:	cmp	r0, #0
   2bf68:	beq	2bf7c <__assert_fail@plt+0x1a828>
   2bf6c:	ldr	r0, [sp, #12]
   2bf70:	bl	1b850 <__assert_fail@plt+0xa0fc>
   2bf74:	movw	r0, #0
   2bf78:	str	r0, [sp, #12]
   2bf7c:	ldr	r0, [sp, #12]
   2bf80:	str	r0, [fp, #-4]
   2bf84:	ldr	r0, [fp, #-4]
   2bf88:	mov	sp, fp
   2bf8c:	pop	{fp, pc}
   2bf90:	push	{fp, lr}
   2bf94:	mov	fp, sp
   2bf98:	sub	sp, sp, #72	; 0x48
   2bf9c:	str	r0, [fp, #-8]
   2bfa0:	str	r1, [fp, #-12]
   2bfa4:	str	r2, [fp, #-16]
   2bfa8:	str	r3, [fp, #-20]	; 0xffffffec
   2bfac:	ldr	r0, [fp, #-8]
   2bfb0:	ldr	r0, [r0]
   2bfb4:	ldr	r1, [fp, #-12]
   2bfb8:	add	r0, r0, r1, lsl #3
   2bfbc:	str	r0, [fp, #-24]	; 0xffffffe8
   2bfc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bfc4:	ldr	r0, [r0, #4]
   2bfc8:	and	r0, r0, #255	; 0xff
   2bfcc:	cmp	r0, #7
   2bfd0:	bne	2c240 <__assert_fail@plt+0x1aaec>
   2bfd4:	ldr	r0, [fp, #-16]
   2bfd8:	ldr	r0, [r0, #4]
   2bfdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bfe0:	add	r0, r0, r1
   2bfe4:	ldrb	r0, [r0]
   2bfe8:	strb	r0, [sp, #35]	; 0x23
   2bfec:	ldrb	r0, [sp, #35]	; 0x23
   2bff0:	cmp	r0, #194	; 0xc2
   2bff4:	bge	2c004 <__assert_fail@plt+0x1a8b0>
   2bff8:	movw	r0, #0
   2bffc:	str	r0, [fp, #-4]
   2c000:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c004:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c008:	add	r0, r0, #2
   2c00c:	ldr	r1, [fp, #-16]
   2c010:	ldr	r1, [r1, #48]	; 0x30
   2c014:	cmp	r0, r1
   2c018:	ble	2c028 <__assert_fail@plt+0x1a8d4>
   2c01c:	movw	r0, #0
   2c020:	str	r0, [fp, #-4]
   2c024:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c028:	ldr	r0, [fp, #-16]
   2c02c:	ldr	r0, [r0, #4]
   2c030:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c034:	add	r1, r1, #1
   2c038:	add	r0, r0, r1
   2c03c:	ldrb	r0, [r0]
   2c040:	strb	r0, [sp, #34]	; 0x22
   2c044:	ldrb	r0, [sp, #35]	; 0x23
   2c048:	cmp	r0, #224	; 0xe0
   2c04c:	bge	2c090 <__assert_fail@plt+0x1a93c>
   2c050:	ldrb	r0, [sp, #34]	; 0x22
   2c054:	cmp	r0, #128	; 0x80
   2c058:	movw	r0, #1
   2c05c:	str	r0, [sp, #12]
   2c060:	blt	2c078 <__assert_fail@plt+0x1a924>
   2c064:	ldrb	r0, [sp, #34]	; 0x22
   2c068:	cmp	r0, #191	; 0xbf
   2c06c:	movw	r0, #0
   2c070:	movgt	r0, #1
   2c074:	str	r0, [sp, #12]
   2c078:	ldr	r0, [sp, #12]
   2c07c:	tst	r0, #1
   2c080:	movw	r0, #0
   2c084:	moveq	r0, #2
   2c088:	str	r0, [fp, #-4]
   2c08c:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c090:	ldrb	r0, [sp, #35]	; 0x23
   2c094:	cmp	r0, #240	; 0xf0
   2c098:	bge	2c0cc <__assert_fail@plt+0x1a978>
   2c09c:	movw	r0, #3
   2c0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   2c0a4:	ldrb	r0, [sp, #35]	; 0x23
   2c0a8:	cmp	r0, #224	; 0xe0
   2c0ac:	bne	2c0c8 <__assert_fail@plt+0x1a974>
   2c0b0:	ldrb	r0, [sp, #34]	; 0x22
   2c0b4:	cmp	r0, #160	; 0xa0
   2c0b8:	bge	2c0c8 <__assert_fail@plt+0x1a974>
   2c0bc:	movw	r0, #0
   2c0c0:	str	r0, [fp, #-4]
   2c0c4:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c0c8:	b	2c198 <__assert_fail@plt+0x1aa44>
   2c0cc:	ldrb	r0, [sp, #35]	; 0x23
   2c0d0:	cmp	r0, #248	; 0xf8
   2c0d4:	bge	2c108 <__assert_fail@plt+0x1a9b4>
   2c0d8:	movw	r0, #4
   2c0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2c0e0:	ldrb	r0, [sp, #35]	; 0x23
   2c0e4:	cmp	r0, #240	; 0xf0
   2c0e8:	bne	2c104 <__assert_fail@plt+0x1a9b0>
   2c0ec:	ldrb	r0, [sp, #34]	; 0x22
   2c0f0:	cmp	r0, #144	; 0x90
   2c0f4:	bge	2c104 <__assert_fail@plt+0x1a9b0>
   2c0f8:	movw	r0, #0
   2c0fc:	str	r0, [fp, #-4]
   2c100:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c104:	b	2c194 <__assert_fail@plt+0x1aa40>
   2c108:	ldrb	r0, [sp, #35]	; 0x23
   2c10c:	cmp	r0, #252	; 0xfc
   2c110:	bge	2c144 <__assert_fail@plt+0x1a9f0>
   2c114:	movw	r0, #5
   2c118:	str	r0, [fp, #-28]	; 0xffffffe4
   2c11c:	ldrb	r0, [sp, #35]	; 0x23
   2c120:	cmp	r0, #248	; 0xf8
   2c124:	bne	2c140 <__assert_fail@plt+0x1a9ec>
   2c128:	ldrb	r0, [sp, #34]	; 0x22
   2c12c:	cmp	r0, #136	; 0x88
   2c130:	bge	2c140 <__assert_fail@plt+0x1a9ec>
   2c134:	movw	r0, #0
   2c138:	str	r0, [fp, #-4]
   2c13c:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c140:	b	2c190 <__assert_fail@plt+0x1aa3c>
   2c144:	ldrb	r0, [sp, #35]	; 0x23
   2c148:	cmp	r0, #254	; 0xfe
   2c14c:	bge	2c180 <__assert_fail@plt+0x1aa2c>
   2c150:	movw	r0, #6
   2c154:	str	r0, [fp, #-28]	; 0xffffffe4
   2c158:	ldrb	r0, [sp, #35]	; 0x23
   2c15c:	cmp	r0, #252	; 0xfc
   2c160:	bne	2c17c <__assert_fail@plt+0x1aa28>
   2c164:	ldrb	r0, [sp, #34]	; 0x22
   2c168:	cmp	r0, #132	; 0x84
   2c16c:	bge	2c17c <__assert_fail@plt+0x1aa28>
   2c170:	movw	r0, #0
   2c174:	str	r0, [fp, #-4]
   2c178:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c17c:	b	2c18c <__assert_fail@plt+0x1aa38>
   2c180:	movw	r0, #0
   2c184:	str	r0, [fp, #-4]
   2c188:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c18c:	b	2c190 <__assert_fail@plt+0x1aa3c>
   2c190:	b	2c194 <__assert_fail@plt+0x1aa40>
   2c194:	b	2c198 <__assert_fail@plt+0x1aa44>
   2c198:	b	2c19c <__assert_fail@plt+0x1aa48>
   2c19c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c1a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c1a4:	add	r0, r0, r1
   2c1a8:	ldr	r1, [fp, #-16]
   2c1ac:	ldr	r1, [r1, #48]	; 0x30
   2c1b0:	cmp	r0, r1
   2c1b4:	ble	2c1c4 <__assert_fail@plt+0x1aa70>
   2c1b8:	movw	r0, #0
   2c1bc:	str	r0, [fp, #-4]
   2c1c0:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c1c4:	movw	r0, #1
   2c1c8:	str	r0, [sp, #36]	; 0x24
   2c1cc:	ldr	r0, [sp, #36]	; 0x24
   2c1d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c1d4:	cmp	r0, r1
   2c1d8:	bge	2c234 <__assert_fail@plt+0x1aae0>
   2c1dc:	ldr	r0, [fp, #-16]
   2c1e0:	ldr	r0, [r0, #4]
   2c1e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c1e8:	ldr	r2, [sp, #36]	; 0x24
   2c1ec:	add	r1, r1, r2
   2c1f0:	add	r0, r0, r1
   2c1f4:	ldrb	r0, [r0]
   2c1f8:	strb	r0, [sp, #34]	; 0x22
   2c1fc:	ldrb	r0, [sp, #34]	; 0x22
   2c200:	cmp	r0, #128	; 0x80
   2c204:	blt	2c214 <__assert_fail@plt+0x1aac0>
   2c208:	ldrb	r0, [sp, #34]	; 0x22
   2c20c:	cmp	r0, #191	; 0xbf
   2c210:	ble	2c220 <__assert_fail@plt+0x1aacc>
   2c214:	movw	r0, #0
   2c218:	str	r0, [fp, #-4]
   2c21c:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c220:	b	2c224 <__assert_fail@plt+0x1aad0>
   2c224:	ldr	r0, [sp, #36]	; 0x24
   2c228:	add	r0, r0, #1
   2c22c:	str	r0, [sp, #36]	; 0x24
   2c230:	b	2c1cc <__assert_fail@plt+0x1aa78>
   2c234:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c238:	str	r0, [fp, #-4]
   2c23c:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c240:	ldr	r0, [fp, #-16]
   2c244:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c248:	bl	232ec <__assert_fail@plt+0x11b98>
   2c24c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c254:	ldr	r0, [r0, #4]
   2c258:	and	r0, r0, #255	; 0xff
   2c25c:	cmp	r0, #5
   2c260:	bne	2c2f4 <__assert_fail@plt+0x1aba0>
   2c264:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c268:	cmp	r0, #1
   2c26c:	bgt	2c27c <__assert_fail@plt+0x1ab28>
   2c270:	movw	r0, #0
   2c274:	str	r0, [fp, #-4]
   2c278:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c27c:	ldr	r0, [fp, #-8]
   2c280:	ldr	r0, [r0, #128]	; 0x80
   2c284:	and	r0, r0, #64	; 0x40
   2c288:	cmp	r0, #0
   2c28c:	bne	2c2ac <__assert_fail@plt+0x1ab58>
   2c290:	ldr	r0, [fp, #-16]
   2c294:	ldr	r0, [r0, #4]
   2c298:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c29c:	add	r0, r0, r1
   2c2a0:	ldrb	r0, [r0]
   2c2a4:	cmp	r0, #10
   2c2a8:	beq	2c2dc <__assert_fail@plt+0x1ab88>
   2c2ac:	ldr	r0, [fp, #-8]
   2c2b0:	ldr	r0, [r0, #128]	; 0x80
   2c2b4:	and	r0, r0, #128	; 0x80
   2c2b8:	cmp	r0, #0
   2c2bc:	beq	2c2e8 <__assert_fail@plt+0x1ab94>
   2c2c0:	ldr	r0, [fp, #-16]
   2c2c4:	ldr	r0, [r0, #4]
   2c2c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c2cc:	add	r0, r0, r1
   2c2d0:	ldrb	r0, [r0]
   2c2d4:	cmp	r0, #0
   2c2d8:	bne	2c2e8 <__assert_fail@plt+0x1ab94>
   2c2dc:	movw	r0, #0
   2c2e0:	str	r0, [fp, #-4]
   2c2e4:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c2e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c2ec:	str	r0, [fp, #-4]
   2c2f0:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c2f4:	ldr	r0, [fp, #-16]
   2c2f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c2fc:	bl	2c7ec <__assert_fail@plt+0x1b098>
   2c300:	str	r0, [fp, #-32]	; 0xffffffe0
   2c304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c308:	cmp	r0, #1
   2c30c:	bgt	2c31c <__assert_fail@plt+0x1abc8>
   2c310:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c314:	cmp	r0, #1
   2c318:	ble	2c328 <__assert_fail@plt+0x1abd4>
   2c31c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c320:	cmp	r0, #0
   2c324:	bne	2c334 <__assert_fail@plt+0x1abe0>
   2c328:	movw	r0, #0
   2c32c:	str	r0, [fp, #-4]
   2c330:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c338:	ldr	r0, [r0, #4]
   2c33c:	and	r0, r0, #255	; 0xff
   2c340:	cmp	r0, #6
   2c344:	bne	2c564 <__assert_fail@plt+0x1ae10>
   2c348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c34c:	ldr	r0, [r0]
   2c350:	str	r0, [sp, #28]
   2c354:	movw	r0, #0
   2c358:	str	r0, [sp, #24]
   2c35c:	ldr	r0, [sp, #28]
   2c360:	ldr	r0, [r0, #32]
   2c364:	cmp	r0, #0
   2c368:	bne	2c38c <__assert_fail@plt+0x1ac38>
   2c36c:	ldr	r0, [sp, #28]
   2c370:	ldr	r0, [r0, #36]	; 0x24
   2c374:	cmp	r0, #0
   2c378:	bne	2c38c <__assert_fail@plt+0x1ac38>
   2c37c:	ldr	r0, [sp, #28]
   2c380:	ldr	r0, [r0, #20]
   2c384:	cmp	r0, #0
   2c388:	beq	2c3a0 <__assert_fail@plt+0x1ac4c>
   2c38c:	ldr	r0, [fp, #-16]
   2c390:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c394:	bl	1f3cc <__assert_fail@plt+0xdc78>
   2c398:	str	r0, [sp, #8]
   2c39c:	b	2c3ac <__assert_fail@plt+0x1ac58>
   2c3a0:	movw	r0, #0
   2c3a4:	str	r0, [sp, #8]
   2c3a8:	b	2c3ac <__assert_fail@plt+0x1ac58>
   2c3ac:	ldr	r0, [sp, #8]
   2c3b0:	str	r0, [sp, #20]
   2c3b4:	movw	r0, #0
   2c3b8:	str	r0, [sp, #36]	; 0x24
   2c3bc:	ldr	r0, [sp, #36]	; 0x24
   2c3c0:	ldr	r1, [sp, #28]
   2c3c4:	ldr	r1, [r1, #20]
   2c3c8:	cmp	r0, r1
   2c3cc:	bge	2c410 <__assert_fail@plt+0x1acbc>
   2c3d0:	ldr	r0, [sp, #20]
   2c3d4:	ldr	r1, [sp, #28]
   2c3d8:	ldr	r1, [r1]
   2c3dc:	ldr	r2, [sp, #36]	; 0x24
   2c3e0:	add	r1, r1, r2, lsl #2
   2c3e4:	ldr	r1, [r1]
   2c3e8:	cmp	r0, r1
   2c3ec:	bne	2c3fc <__assert_fail@plt+0x1aca8>
   2c3f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c3f4:	str	r0, [sp, #24]
   2c3f8:	b	2c4f8 <__assert_fail@plt+0x1ada4>
   2c3fc:	b	2c400 <__assert_fail@plt+0x1acac>
   2c400:	ldr	r0, [sp, #36]	; 0x24
   2c404:	add	r0, r0, #1
   2c408:	str	r0, [sp, #36]	; 0x24
   2c40c:	b	2c3bc <__assert_fail@plt+0x1ac68>
   2c410:	movw	r0, #0
   2c414:	str	r0, [sp, #36]	; 0x24
   2c418:	ldr	r0, [sp, #36]	; 0x24
   2c41c:	ldr	r1, [sp, #28]
   2c420:	ldr	r1, [r1, #36]	; 0x24
   2c424:	cmp	r0, r1
   2c428:	bge	2c478 <__assert_fail@plt+0x1ad24>
   2c42c:	ldr	r0, [sp, #28]
   2c430:	ldr	r0, [r0, #12]
   2c434:	ldr	r1, [sp, #36]	; 0x24
   2c438:	add	r0, r0, r1, lsl #2
   2c43c:	ldr	r0, [r0]
   2c440:	str	r0, [sp, #16]
   2c444:	ldr	r0, [sp, #20]
   2c448:	ldr	r1, [sp, #16]
   2c44c:	bl	113f4 <iswctype@plt>
   2c450:	cmp	r0, #0
   2c454:	beq	2c464 <__assert_fail@plt+0x1ad10>
   2c458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c45c:	str	r0, [sp, #24]
   2c460:	b	2c4f8 <__assert_fail@plt+0x1ada4>
   2c464:	b	2c468 <__assert_fail@plt+0x1ad14>
   2c468:	ldr	r0, [sp, #36]	; 0x24
   2c46c:	add	r0, r0, #1
   2c470:	str	r0, [sp, #36]	; 0x24
   2c474:	b	2c418 <__assert_fail@plt+0x1acc4>
   2c478:	movw	r0, #0
   2c47c:	str	r0, [sp, #36]	; 0x24
   2c480:	ldr	r0, [sp, #36]	; 0x24
   2c484:	ldr	r1, [sp, #28]
   2c488:	ldr	r1, [r1, #32]
   2c48c:	cmp	r0, r1
   2c490:	bge	2c4f4 <__assert_fail@plt+0x1ada0>
   2c494:	ldr	r0, [sp, #28]
   2c498:	ldr	r0, [r0, #4]
   2c49c:	ldr	r1, [sp, #36]	; 0x24
   2c4a0:	add	r0, r0, r1, lsl #2
   2c4a4:	ldr	r0, [r0]
   2c4a8:	ldr	r1, [sp, #20]
   2c4ac:	cmp	r0, r1
   2c4b0:	bhi	2c4e0 <__assert_fail@plt+0x1ad8c>
   2c4b4:	ldr	r0, [sp, #20]
   2c4b8:	ldr	r1, [sp, #28]
   2c4bc:	ldr	r1, [r1, #8]
   2c4c0:	ldr	r2, [sp, #36]	; 0x24
   2c4c4:	add	r1, r1, r2, lsl #2
   2c4c8:	ldr	r1, [r1]
   2c4cc:	cmp	r0, r1
   2c4d0:	bhi	2c4e0 <__assert_fail@plt+0x1ad8c>
   2c4d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c4d8:	str	r0, [sp, #24]
   2c4dc:	b	2c4f8 <__assert_fail@plt+0x1ada4>
   2c4e0:	b	2c4e4 <__assert_fail@plt+0x1ad90>
   2c4e4:	ldr	r0, [sp, #36]	; 0x24
   2c4e8:	add	r0, r0, #1
   2c4ec:	str	r0, [sp, #36]	; 0x24
   2c4f0:	b	2c480 <__assert_fail@plt+0x1ad2c>
   2c4f4:	b	2c4f8 <__assert_fail@plt+0x1ada4>
   2c4f8:	ldr	r0, [sp, #28]
   2c4fc:	ldrb	r0, [r0, #16]
   2c500:	and	r0, r0, #1
   2c504:	and	r0, r0, #255	; 0xff
   2c508:	cmp	r0, #0
   2c50c:	bne	2c51c <__assert_fail@plt+0x1adc8>
   2c510:	ldr	r0, [sp, #24]
   2c514:	str	r0, [fp, #-4]
   2c518:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c51c:	ldr	r0, [sp, #24]
   2c520:	cmp	r0, #0
   2c524:	ble	2c534 <__assert_fail@plt+0x1ade0>
   2c528:	movw	r0, #0
   2c52c:	str	r0, [fp, #-4]
   2c530:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c538:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c53c:	cmp	r0, r1
   2c540:	ble	2c550 <__assert_fail@plt+0x1adfc>
   2c544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c548:	str	r0, [sp, #4]
   2c54c:	b	2c558 <__assert_fail@plt+0x1ae04>
   2c550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c554:	str	r0, [sp, #4]
   2c558:	ldr	r0, [sp, #4]
   2c55c:	str	r0, [fp, #-4]
   2c560:	b	2c56c <__assert_fail@plt+0x1ae18>
   2c564:	movw	r0, #0
   2c568:	str	r0, [fp, #-4]
   2c56c:	ldr	r0, [fp, #-4]
   2c570:	mov	sp, fp
   2c574:	pop	{fp, pc}
   2c578:	push	{fp, lr}
   2c57c:	mov	fp, sp
   2c580:	sub	sp, sp, #32
   2c584:	str	r0, [fp, #-8]
   2c588:	str	r1, [fp, #-12]
   2c58c:	str	r2, [sp, #16]
   2c590:	ldr	r0, [fp, #-8]
   2c594:	ldr	r0, [r0, #4]
   2c598:	ldr	r1, [sp, #16]
   2c59c:	ldrb	r0, [r0, r1]
   2c5a0:	strb	r0, [sp, #15]
   2c5a4:	ldr	r0, [fp, #-12]
   2c5a8:	ldrb	r0, [r0, #4]
   2c5ac:	sub	r0, r0, #1
   2c5b0:	cmp	r0, #6
   2c5b4:	str	r0, [sp, #4]
   2c5b8:	bhi	2c6b8 <__assert_fail@plt+0x1af64>
   2c5bc:	add	r0, pc, #8
   2c5c0:	ldr	r1, [sp, #4]
   2c5c4:	ldr	r0, [r0, r1, lsl #2]
   2c5c8:	mov	pc, r0
   2c5cc:	andeq	ip, r2, r8, ror #11
   2c5d0:			; <UNDEFINED> instruction: 0x0002c6b8
   2c5d4:	andeq	ip, r2, r0, lsl r6
   2c5d8:			; <UNDEFINED> instruction: 0x0002c6b8
   2c5dc:	andeq	ip, r2, ip, asr r6
   2c5e0:			; <UNDEFINED> instruction: 0x0002c6b8
   2c5e4:	andeq	ip, r2, ip, lsr r6
   2c5e8:	ldr	r0, [fp, #-12]
   2c5ec:	ldrb	r0, [r0]
   2c5f0:	ldrb	r1, [sp, #15]
   2c5f4:	cmp	r0, r1
   2c5f8:	beq	2c60c <__assert_fail@plt+0x1aeb8>
   2c5fc:	movw	r0, #0
   2c600:	and	r0, r0, #1
   2c604:	strb	r0, [fp, #-1]
   2c608:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c60c:	b	2c6c8 <__assert_fail@plt+0x1af74>
   2c610:	ldr	r0, [fp, #-12]
   2c614:	ldr	r0, [r0]
   2c618:	ldrb	r1, [sp, #15]
   2c61c:	bl	28bb4 <__assert_fail@plt+0x17460>
   2c620:	tst	r0, #1
   2c624:	bne	2c638 <__assert_fail@plt+0x1aee4>
   2c628:	movw	r0, #0
   2c62c:	and	r0, r0, #1
   2c630:	strb	r0, [fp, #-1]
   2c634:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c638:	b	2c6c8 <__assert_fail@plt+0x1af74>
   2c63c:	ldrb	r0, [sp, #15]
   2c640:	cmp	r0, #128	; 0x80
   2c644:	blt	2c658 <__assert_fail@plt+0x1af04>
   2c648:	movw	r0, #0
   2c64c:	and	r0, r0, #1
   2c650:	strb	r0, [fp, #-1]
   2c654:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c658:	b	2c65c <__assert_fail@plt+0x1af08>
   2c65c:	ldrb	r0, [sp, #15]
   2c660:	cmp	r0, #10
   2c664:	bne	2c680 <__assert_fail@plt+0x1af2c>
   2c668:	ldr	r0, [fp, #-8]
   2c66c:	ldr	r0, [r0, #84]	; 0x54
   2c670:	ldr	r0, [r0, #128]	; 0x80
   2c674:	and	r0, r0, #64	; 0x40
   2c678:	cmp	r0, #0
   2c67c:	beq	2c6a4 <__assert_fail@plt+0x1af50>
   2c680:	ldrb	r0, [sp, #15]
   2c684:	cmp	r0, #0
   2c688:	bne	2c6b4 <__assert_fail@plt+0x1af60>
   2c68c:	ldr	r0, [fp, #-8]
   2c690:	ldr	r0, [r0, #84]	; 0x54
   2c694:	ldr	r0, [r0, #128]	; 0x80
   2c698:	and	r0, r0, #128	; 0x80
   2c69c:	cmp	r0, #0
   2c6a0:	beq	2c6b4 <__assert_fail@plt+0x1af60>
   2c6a4:	movw	r0, #0
   2c6a8:	and	r0, r0, #1
   2c6ac:	strb	r0, [fp, #-1]
   2c6b0:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c6b4:	b	2c6c8 <__assert_fail@plt+0x1af74>
   2c6b8:	movw	r0, #0
   2c6bc:	and	r0, r0, #1
   2c6c0:	strb	r0, [fp, #-1]
   2c6c4:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c6c8:	ldr	r0, [fp, #-12]
   2c6cc:	ldr	r0, [r0, #4]
   2c6d0:	lsr	r0, r0, #8
   2c6d4:	movw	r1, #1023	; 0x3ff
   2c6d8:	and	r0, r0, r1
   2c6dc:	cmp	r0, #0
   2c6e0:	beq	2c7d0 <__assert_fail@plt+0x1b07c>
   2c6e4:	ldr	r0, [fp, #-8]
   2c6e8:	ldr	r1, [sp, #16]
   2c6ec:	ldr	r2, [fp, #-8]
   2c6f0:	ldr	r2, [r2, #88]	; 0x58
   2c6f4:	bl	28844 <__assert_fail@plt+0x170f0>
   2c6f8:	str	r0, [sp, #8]
   2c6fc:	ldr	r0, [fp, #-12]
   2c700:	ldr	r0, [r0, #4]
   2c704:	lsr	r0, r0, #8
   2c708:	movw	r1, #1023	; 0x3ff
   2c70c:	and	r0, r0, r1
   2c710:	and	r0, r0, #4
   2c714:	cmp	r0, #0
   2c718:	beq	2c72c <__assert_fail@plt+0x1afd8>
   2c71c:	ldr	r0, [sp, #8]
   2c720:	and	r0, r0, #1
   2c724:	cmp	r0, #0
   2c728:	beq	2c7bc <__assert_fail@plt+0x1b068>
   2c72c:	ldr	r0, [fp, #-12]
   2c730:	ldr	r0, [r0, #4]
   2c734:	lsr	r0, r0, #8
   2c738:	movw	r1, #1023	; 0x3ff
   2c73c:	and	r0, r0, r1
   2c740:	and	r0, r0, #8
   2c744:	cmp	r0, #0
   2c748:	beq	2c75c <__assert_fail@plt+0x1b008>
   2c74c:	ldr	r0, [sp, #8]
   2c750:	and	r0, r0, #1
   2c754:	cmp	r0, #0
   2c758:	bne	2c7bc <__assert_fail@plt+0x1b068>
   2c75c:	ldr	r0, [fp, #-12]
   2c760:	ldr	r0, [r0, #4]
   2c764:	lsr	r0, r0, #8
   2c768:	movw	r1, #1023	; 0x3ff
   2c76c:	and	r0, r0, r1
   2c770:	and	r0, r0, #32
   2c774:	cmp	r0, #0
   2c778:	beq	2c78c <__assert_fail@plt+0x1b038>
   2c77c:	ldr	r0, [sp, #8]
   2c780:	and	r0, r0, #2
   2c784:	cmp	r0, #0
   2c788:	beq	2c7bc <__assert_fail@plt+0x1b068>
   2c78c:	ldr	r0, [fp, #-12]
   2c790:	ldr	r0, [r0, #4]
   2c794:	lsr	r0, r0, #8
   2c798:	movw	r1, #1023	; 0x3ff
   2c79c:	and	r0, r0, r1
   2c7a0:	and	r0, r0, #128	; 0x80
   2c7a4:	cmp	r0, #0
   2c7a8:	beq	2c7cc <__assert_fail@plt+0x1b078>
   2c7ac:	ldr	r0, [sp, #8]
   2c7b0:	and	r0, r0, #8
   2c7b4:	cmp	r0, #0
   2c7b8:	bne	2c7cc <__assert_fail@plt+0x1b078>
   2c7bc:	movw	r0, #0
   2c7c0:	and	r0, r0, #1
   2c7c4:	strb	r0, [fp, #-1]
   2c7c8:	b	2c7dc <__assert_fail@plt+0x1b088>
   2c7cc:	b	2c7d0 <__assert_fail@plt+0x1b07c>
   2c7d0:	movw	r0, #1
   2c7d4:	and	r0, r0, #1
   2c7d8:	strb	r0, [fp, #-1]
   2c7dc:	ldrb	r0, [fp, #-1]
   2c7e0:	and	r0, r0, #1
   2c7e4:	mov	sp, fp
   2c7e8:	pop	{fp, pc}
   2c7ec:	sub	sp, sp, #8
   2c7f0:	str	r0, [sp, #4]
   2c7f4:	str	r1, [sp]
   2c7f8:	movw	r0, #1
   2c7fc:	add	sp, sp, #8
   2c800:	bx	lr
   2c804:	push	{fp, lr}
   2c808:	mov	fp, sp
   2c80c:	sub	sp, sp, #72	; 0x48
   2c810:	str	r0, [fp, #-8]
   2c814:	str	r1, [fp, #-12]
   2c818:	ldr	r0, [fp, #-8]
   2c81c:	ldr	r0, [r0, #84]	; 0x54
   2c820:	str	r0, [fp, #-16]
   2c824:	movw	r0, #0
   2c828:	str	r0, [fp, #-24]	; 0xffffffe8
   2c82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c830:	ldr	r1, [fp, #-12]
   2c834:	ldr	r1, [r1, #8]
   2c838:	cmp	r0, r1
   2c83c:	bge	2cbcc <__assert_fail@plt+0x1b478>
   2c840:	ldr	r0, [fp, #-12]
   2c844:	ldr	r0, [r0, #12]
   2c848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c84c:	ldr	r0, [r0, r1, lsl #2]
   2c850:	str	r0, [sp, #28]
   2c854:	ldr	r0, [fp, #-16]
   2c858:	ldr	r0, [r0]
   2c85c:	ldr	r1, [sp, #28]
   2c860:	add	r0, r0, r1, lsl #3
   2c864:	ldr	r0, [r0, #4]
   2c868:	lsr	r0, r0, #20
   2c86c:	and	r0, r0, #1
   2c870:	cmp	r0, #0
   2c874:	bne	2c87c <__assert_fail@plt+0x1b128>
   2c878:	b	2cbbc <__assert_fail@plt+0x1b468>
   2c87c:	ldr	r0, [fp, #-16]
   2c880:	ldr	r0, [r0]
   2c884:	ldr	r1, [sp, #28]
   2c888:	add	r0, r0, r1, lsl #3
   2c88c:	ldr	r0, [r0, #4]
   2c890:	lsr	r0, r0, #8
   2c894:	movw	r1, #1023	; 0x3ff
   2c898:	and	r0, r0, r1
   2c89c:	cmp	r0, #0
   2c8a0:	beq	2c9b0 <__assert_fail@plt+0x1b25c>
   2c8a4:	ldr	r0, [fp, #-8]
   2c8a8:	ldr	r1, [r0, #40]	; 0x28
   2c8ac:	ldr	r2, [r0, #88]	; 0x58
   2c8b0:	bl	28844 <__assert_fail@plt+0x170f0>
   2c8b4:	str	r0, [sp, #16]
   2c8b8:	ldr	r0, [fp, #-16]
   2c8bc:	ldr	r0, [r0]
   2c8c0:	ldr	r1, [sp, #28]
   2c8c4:	add	r0, r0, r1, lsl #3
   2c8c8:	ldr	r0, [r0, #4]
   2c8cc:	lsr	r0, r0, #8
   2c8d0:	movw	r1, #1023	; 0x3ff
   2c8d4:	and	r0, r0, r1
   2c8d8:	and	r0, r0, #4
   2c8dc:	cmp	r0, #0
   2c8e0:	beq	2c8f4 <__assert_fail@plt+0x1b1a0>
   2c8e4:	ldr	r0, [sp, #16]
   2c8e8:	and	r0, r0, #1
   2c8ec:	cmp	r0, #0
   2c8f0:	beq	2c9a8 <__assert_fail@plt+0x1b254>
   2c8f4:	ldr	r0, [fp, #-16]
   2c8f8:	ldr	r0, [r0]
   2c8fc:	ldr	r1, [sp, #28]
   2c900:	add	r0, r0, r1, lsl #3
   2c904:	ldr	r0, [r0, #4]
   2c908:	lsr	r0, r0, #8
   2c90c:	movw	r1, #1023	; 0x3ff
   2c910:	and	r0, r0, r1
   2c914:	and	r0, r0, #8
   2c918:	cmp	r0, #0
   2c91c:	beq	2c930 <__assert_fail@plt+0x1b1dc>
   2c920:	ldr	r0, [sp, #16]
   2c924:	and	r0, r0, #1
   2c928:	cmp	r0, #0
   2c92c:	bne	2c9a8 <__assert_fail@plt+0x1b254>
   2c930:	ldr	r0, [fp, #-16]
   2c934:	ldr	r0, [r0]
   2c938:	ldr	r1, [sp, #28]
   2c93c:	add	r0, r0, r1, lsl #3
   2c940:	ldr	r0, [r0, #4]
   2c944:	lsr	r0, r0, #8
   2c948:	movw	r1, #1023	; 0x3ff
   2c94c:	and	r0, r0, r1
   2c950:	and	r0, r0, #32
   2c954:	cmp	r0, #0
   2c958:	beq	2c96c <__assert_fail@plt+0x1b218>
   2c95c:	ldr	r0, [sp, #16]
   2c960:	and	r0, r0, #2
   2c964:	cmp	r0, #0
   2c968:	beq	2c9a8 <__assert_fail@plt+0x1b254>
   2c96c:	ldr	r0, [fp, #-16]
   2c970:	ldr	r0, [r0]
   2c974:	ldr	r1, [sp, #28]
   2c978:	add	r0, r0, r1, lsl #3
   2c97c:	ldr	r0, [r0, #4]
   2c980:	lsr	r0, r0, #8
   2c984:	movw	r1, #1023	; 0x3ff
   2c988:	and	r0, r0, r1
   2c98c:	and	r0, r0, #128	; 0x80
   2c990:	cmp	r0, #0
   2c994:	beq	2c9ac <__assert_fail@plt+0x1b258>
   2c998:	ldr	r0, [sp, #16]
   2c99c:	and	r0, r0, #8
   2c9a0:	cmp	r0, #0
   2c9a4:	bne	2c9ac <__assert_fail@plt+0x1b258>
   2c9a8:	b	2cbbc <__assert_fail@plt+0x1b468>
   2c9ac:	b	2c9b0 <__assert_fail@plt+0x1b25c>
   2c9b0:	ldr	r0, [fp, #-16]
   2c9b4:	ldr	r1, [sp, #28]
   2c9b8:	ldr	r2, [fp, #-8]
   2c9bc:	ldr	r3, [fp, #-8]
   2c9c0:	ldr	r3, [r3, #40]	; 0x28
   2c9c4:	bl	2bf90 <__assert_fail@plt+0x1a83c>
   2c9c8:	str	r0, [sp, #24]
   2c9cc:	ldr	r0, [sp, #24]
   2c9d0:	cmp	r0, #0
   2c9d4:	bne	2c9dc <__assert_fail@plt+0x1b288>
   2c9d8:	b	2cbbc <__assert_fail@plt+0x1b468>
   2c9dc:	ldr	r0, [fp, #-8]
   2c9e0:	ldr	r0, [r0, #40]	; 0x28
   2c9e4:	ldr	r1, [sp, #24]
   2c9e8:	add	r0, r0, r1
   2c9ec:	str	r0, [sp, #20]
   2c9f0:	ldr	r0, [fp, #-8]
   2c9f4:	ldr	r0, [r0, #120]	; 0x78
   2c9f8:	ldr	r1, [sp, #24]
   2c9fc:	cmp	r0, r1
   2ca00:	bge	2ca10 <__assert_fail@plt+0x1b2bc>
   2ca04:	ldr	r0, [sp, #24]
   2ca08:	str	r0, [sp, #8]
   2ca0c:	b	2ca1c <__assert_fail@plt+0x1b2c8>
   2ca10:	ldr	r0, [fp, #-8]
   2ca14:	ldr	r0, [r0, #120]	; 0x78
   2ca18:	str	r0, [sp, #8]
   2ca1c:	ldr	r0, [sp, #8]
   2ca20:	ldr	r1, [fp, #-8]
   2ca24:	str	r0, [r1, #120]	; 0x78
   2ca28:	ldr	r0, [fp, #-8]
   2ca2c:	ldr	r1, [sp, #20]
   2ca30:	bl	2a474 <__assert_fail@plt+0x18d20>
   2ca34:	str	r0, [fp, #-20]	; 0xffffffec
   2ca38:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca3c:	cmp	r0, #0
   2ca40:	beq	2ca50 <__assert_fail@plt+0x1b2fc>
   2ca44:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca48:	str	r0, [fp, #-4]
   2ca4c:	b	2cbd4 <__assert_fail@plt+0x1b480>
   2ca50:	ldr	r0, [fp, #-16]
   2ca54:	ldr	r0, [r0, #12]
   2ca58:	ldr	r1, [sp, #28]
   2ca5c:	add	r0, r0, r1, lsl #2
   2ca60:	ldr	r0, [r0]
   2ca64:	cmn	r0, #1
   2ca68:	beq	2ca70 <__assert_fail@plt+0x1b31c>
   2ca6c:	b	2ca70 <__assert_fail@plt+0x1b31c>
   2ca70:	ldr	r0, [fp, #-16]
   2ca74:	ldr	r1, [r0, #12]
   2ca78:	ldr	r0, [r0, #24]
   2ca7c:	ldr	r2, [sp, #28]
   2ca80:	ldr	r1, [r1, r2, lsl #2]
   2ca84:	add	r1, r1, r1, lsl #1
   2ca88:	add	r0, r0, r1, lsl #2
   2ca8c:	str	r0, [sp, #32]
   2ca90:	ldr	r0, [fp, #-8]
   2ca94:	ldr	r0, [r0, #100]	; 0x64
   2ca98:	ldr	r1, [sp, #20]
   2ca9c:	add	r0, r0, r1, lsl #2
   2caa0:	ldr	r0, [r0]
   2caa4:	str	r0, [sp, #12]
   2caa8:	ldr	r0, [sp, #12]
   2caac:	movw	r1, #0
   2cab0:	cmp	r0, r1
   2cab4:	bne	2cad8 <__assert_fail@plt+0x1b384>
   2cab8:	ldr	r0, [sp, #32]
   2cabc:	ldr	r1, [r0]
   2cac0:	str	r1, [sp, #36]	; 0x24
   2cac4:	ldr	r1, [r0, #4]
   2cac8:	str	r1, [sp, #40]	; 0x28
   2cacc:	ldr	r0, [r0, #8]
   2cad0:	str	r0, [sp, #44]	; 0x2c
   2cad4:	b	2cb0c <__assert_fail@plt+0x1b3b8>
   2cad8:	ldr	r0, [sp, #12]
   2cadc:	ldr	r1, [r0, #40]	; 0x28
   2cae0:	ldr	r2, [sp, #32]
   2cae4:	add	r0, sp, #36	; 0x24
   2cae8:	bl	2a040 <__assert_fail@plt+0x188ec>
   2caec:	str	r0, [fp, #-20]	; 0xffffffec
   2caf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2caf4:	cmp	r0, #0
   2caf8:	beq	2cb08 <__assert_fail@plt+0x1b3b4>
   2cafc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cb00:	str	r0, [fp, #-4]
   2cb04:	b	2cbd4 <__assert_fail@plt+0x1b480>
   2cb08:	b	2cb0c <__assert_fail@plt+0x1b3b8>
   2cb0c:	ldr	r0, [fp, #-8]
   2cb10:	ldr	r1, [sp, #20]
   2cb14:	sub	r1, r1, #1
   2cb18:	ldr	r2, [r0, #88]	; 0x58
   2cb1c:	bl	28844 <__assert_fail@plt+0x170f0>
   2cb20:	str	r0, [sp, #16]
   2cb24:	ldr	r1, [fp, #-16]
   2cb28:	ldr	r3, [sp, #16]
   2cb2c:	sub	r0, fp, #20
   2cb30:	add	r2, sp, #36	; 0x24
   2cb34:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2cb38:	ldr	r1, [fp, #-8]
   2cb3c:	ldr	r1, [r1, #100]	; 0x64
   2cb40:	ldr	r2, [sp, #20]
   2cb44:	add	r1, r1, r2, lsl #2
   2cb48:	str	r0, [r1]
   2cb4c:	ldr	r0, [sp, #12]
   2cb50:	movw	r1, #0
   2cb54:	cmp	r0, r1
   2cb58:	beq	2cb64 <__assert_fail@plt+0x1b410>
   2cb5c:	ldr	r0, [sp, #44]	; 0x2c
   2cb60:	bl	1604c <__assert_fail@plt+0x48f8>
   2cb64:	ldr	r0, [fp, #-8]
   2cb68:	ldr	r0, [r0, #100]	; 0x64
   2cb6c:	ldr	r1, [sp, #20]
   2cb70:	add	r0, r0, r1, lsl #2
   2cb74:	ldr	r0, [r0]
   2cb78:	movw	r1, #0
   2cb7c:	cmp	r0, r1
   2cb80:	movw	r0, #0
   2cb84:	str	r0, [sp, #4]
   2cb88:	bne	2cba0 <__assert_fail@plt+0x1b44c>
   2cb8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cb90:	cmp	r0, #0
   2cb94:	movw	r0, #0
   2cb98:	movne	r0, #1
   2cb9c:	str	r0, [sp, #4]
   2cba0:	ldr	r0, [sp, #4]
   2cba4:	tst	r0, #1
   2cba8:	beq	2cbb8 <__assert_fail@plt+0x1b464>
   2cbac:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cbb0:	str	r0, [fp, #-4]
   2cbb4:	b	2cbd4 <__assert_fail@plt+0x1b480>
   2cbb8:	b	2cbbc <__assert_fail@plt+0x1b468>
   2cbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbc0:	add	r0, r0, #1
   2cbc4:	str	r0, [fp, #-24]	; 0xffffffe8
   2cbc8:	b	2c82c <__assert_fail@plt+0x1b0d8>
   2cbcc:	movw	r0, #0
   2cbd0:	str	r0, [fp, #-4]
   2cbd4:	ldr	r0, [fp, #-4]
   2cbd8:	mov	sp, fp
   2cbdc:	pop	{fp, pc}
   2cbe0:	push	{r4, r5, fp, lr}
   2cbe4:	add	fp, sp, #8
   2cbe8:	sub	sp, sp, #2160	; 0x870
   2cbec:	sub	sp, sp, #12288	; 0x3000
   2cbf0:	add	r3, sp, #20
   2cbf4:	sub	lr, fp, #6144	; 0x1800
   2cbf8:	sub	r2, lr, #100	; 0x64
   2cbfc:	str	r0, [fp, #-16]
   2cc00:	str	r1, [fp, #-20]	; 0xffffffec
   2cc04:	movw	r0, #0
   2cc08:	strb	r0, [fp, #-37]	; 0xffffffdb
   2cc0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc10:	movw	r1, #0
   2cc14:	str	r1, [r0, #44]	; 0x2c
   2cc18:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc1c:	str	r1, [r0, #48]	; 0x30
   2cc20:	ldr	r0, [fp, #-16]
   2cc24:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cc28:	bl	2d408 <__assert_fail@plt+0x1bcb4>
   2cc2c:	str	r0, [fp, #-52]	; 0xffffffcc
   2cc30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2cc34:	cmp	r0, #0
   2cc38:	bgt	2cca0 <__assert_fail@plt+0x1b54c>
   2cc3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2cc40:	cmp	r0, #0
   2cc44:	bne	2cc90 <__assert_fail@plt+0x1b53c>
   2cc48:	movw	r0, #4
   2cc4c:	movw	r1, #256	; 0x100
   2cc50:	bl	389e0 <__assert_fail@plt+0x2728c>
   2cc54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cc58:	str	r0, [r1, #44]	; 0x2c
   2cc5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc60:	ldr	r0, [r0, #44]	; 0x2c
   2cc64:	movw	r1, #0
   2cc68:	cmp	r0, r1
   2cc6c:	bne	2cc80 <__assert_fail@plt+0x1b52c>
   2cc70:	movw	r0, #0
   2cc74:	and	r0, r0, #1
   2cc78:	strb	r0, [fp, #-9]
   2cc7c:	b	2d3f8 <__assert_fail@plt+0x1bca4>
   2cc80:	movw	r0, #1
   2cc84:	and	r0, r0, #1
   2cc88:	strb	r0, [fp, #-9]
   2cc8c:	b	2d3f8 <__assert_fail@plt+0x1bca4>
   2cc90:	movw	r0, #0
   2cc94:	and	r0, r0, #1
   2cc98:	strb	r0, [fp, #-9]
   2cc9c:	b	2d3f8 <__assert_fail@plt+0x1bca4>
   2cca0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2cca4:	add	r1, r0, #1
   2cca8:	sub	lr, fp, #3072	; 0xc00
   2ccac:	sub	r0, lr, #68	; 0x44
   2ccb0:	bl	24fe0 <__assert_fail@plt+0x1388c>
   2ccb4:	str	r0, [fp, #-24]	; 0xffffffe8
   2ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ccbc:	cmp	r0, #0
   2ccc0:	beq	2cd28 <__assert_fail@plt+0x1b5d4>
   2ccc4:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2ccc8:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2cccc:	bl	1604c <__assert_fail@plt+0x48f8>
   2ccd0:	movw	r0, #0
   2ccd4:	str	r0, [fp, #-28]	; 0xffffffe4
   2ccd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ccdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2cce0:	cmp	r0, r1
   2cce4:	bge	2cd18 <__assert_fail@plt+0x1b5c4>
   2cce8:	sub	lr, fp, #6144	; 0x1800
   2ccec:	sub	r0, lr, #100	; 0x64
   2ccf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ccf4:	movw	r2, #12
   2ccf8:	mul	r1, r1, r2
   2ccfc:	add	r0, r0, r1
   2cd00:	ldr	r0, [r0, #8]
   2cd04:	bl	1604c <__assert_fail@plt+0x48f8>
   2cd08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cd0c:	add	r0, r0, #1
   2cd10:	str	r0, [fp, #-28]	; 0xffffffe4
   2cd14:	b	2ccd8 <__assert_fail@plt+0x1b584>
   2cd18:	movw	r0, #0
   2cd1c:	and	r0, r0, #1
   2cd20:	strb	r0, [fp, #-9]
   2cd24:	b	2d3f8 <__assert_fail@plt+0x1bca4>
   2cd28:	sub	lr, fp, #3072	; 0xc00
   2cd2c:	sub	r0, lr, #100	; 0x64
   2cd30:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2cd34:	movw	r0, #0
   2cd38:	str	r0, [fp, #-28]	; 0xffffffe4
   2cd3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cd40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2cd44:	cmp	r0, r1
   2cd48:	bge	2d018 <__assert_fail@plt+0x1b8c4>
   2cd4c:	movw	r0, #0
   2cd50:	str	r0, [fp, #-3136]	; 0xfffff3c0
   2cd54:	str	r0, [fp, #-32]	; 0xffffffe0
   2cd58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cd5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cd60:	movw	r2, #12
   2cd64:	mul	r1, r1, r2
   2cd68:	sub	lr, fp, #6144	; 0x1800
   2cd6c:	sub	r2, lr, #100	; 0x64
   2cd70:	add	r1, r2, r1
   2cd74:	ldr	r1, [r1, #4]
   2cd78:	cmp	r0, r1
   2cd7c:	bge	2ce10 <__assert_fail@plt+0x1b6bc>
   2cd80:	ldr	r0, [fp, #-16]
   2cd84:	ldr	r0, [r0, #12]
   2cd88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cd8c:	add	r1, r1, r1, lsl #1
   2cd90:	sub	lr, fp, #6144	; 0x1800
   2cd94:	sub	r2, lr, #100	; 0x64
   2cd98:	add	r1, r2, r1, lsl #2
   2cd9c:	ldr	r1, [r1, #8]
   2cda0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cda4:	ldr	r1, [r1, r2, lsl #2]
   2cda8:	add	r0, r0, r1, lsl #2
   2cdac:	ldr	r0, [r0]
   2cdb0:	str	r0, [sp, #16]
   2cdb4:	ldr	r0, [sp, #16]
   2cdb8:	cmn	r0, #1
   2cdbc:	beq	2cdfc <__assert_fail@plt+0x1b6a8>
   2cdc0:	ldr	r0, [fp, #-16]
   2cdc4:	ldr	r0, [r0, #24]
   2cdc8:	ldr	r1, [sp, #16]
   2cdcc:	movw	r2, #12
   2cdd0:	mul	r1, r1, r2
   2cdd4:	add	r1, r0, r1
   2cdd8:	sub	lr, fp, #3072	; 0xc00
   2cddc:	sub	r0, lr, #68	; 0x44
   2cde0:	bl	2555c <__assert_fail@plt+0x13e08>
   2cde4:	str	r0, [fp, #-24]	; 0xffffffe8
   2cde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cdec:	cmp	r0, #0
   2cdf0:	beq	2cdf8 <__assert_fail@plt+0x1b6a4>
   2cdf4:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2cdf8:	b	2cdfc <__assert_fail@plt+0x1b6a8>
   2cdfc:	b	2ce00 <__assert_fail@plt+0x1b6ac>
   2ce00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ce04:	add	r0, r0, #1
   2ce08:	str	r0, [fp, #-32]	; 0xffffffe0
   2ce0c:	b	2cd58 <__assert_fail@plt+0x1b604>
   2ce10:	ldr	r1, [fp, #-16]
   2ce14:	sub	r0, fp, #24
   2ce18:	sub	lr, fp, #3072	; 0xc00
   2ce1c:	sub	r2, lr, #68	; 0x44
   2ce20:	mov	r3, #0
   2ce24:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2ce28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ce2c:	sub	lr, fp, #1024	; 0x400
   2ce30:	sub	r2, lr, #56	; 0x38
   2ce34:	str	r0, [r2, r1, lsl #2]
   2ce38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce3c:	add	r0, r2, r0, lsl #2
   2ce40:	ldr	r0, [r0]
   2ce44:	movw	r1, #0
   2ce48:	cmp	r0, r1
   2ce4c:	movw	r0, #0
   2ce50:	str	r0, [sp, #12]
   2ce54:	bne	2ce6c <__assert_fail@plt+0x1b718>
   2ce58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce5c:	cmp	r0, #0
   2ce60:	movw	r0, #0
   2ce64:	movne	r0, #1
   2ce68:	str	r0, [sp, #12]
   2ce6c:	ldr	r0, [sp, #12]
   2ce70:	tst	r0, #1
   2ce74:	beq	2ce7c <__assert_fail@plt+0x1b728>
   2ce78:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2ce7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce80:	sub	lr, fp, #1024	; 0x400
   2ce84:	sub	r1, lr, #56	; 0x38
   2ce88:	ldr	r0, [r1, r0, lsl #2]
   2ce8c:	ldrb	r0, [r0, #52]	; 0x34
   2ce90:	lsr	r0, r0, #7
   2ce94:	and	r0, r0, #255	; 0xff
   2ce98:	cmp	r0, #0
   2ce9c:	beq	2cfbc <__assert_fail@plt+0x1b868>
   2cea0:	ldr	r1, [fp, #-16]
   2cea4:	sub	r0, fp, #24
   2cea8:	sub	lr, fp, #3072	; 0xc00
   2ceac:	sub	r2, lr, #68	; 0x44
   2ceb0:	mov	r3, #1
   2ceb4:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2ceb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cebc:	sub	lr, fp, #2048	; 0x800
   2cec0:	sub	r2, lr, #56	; 0x38
   2cec4:	str	r0, [r2, r1, lsl #2]
   2cec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cecc:	add	r0, r2, r0, lsl #2
   2ced0:	ldr	r0, [r0]
   2ced4:	movw	r1, #0
   2ced8:	cmp	r0, r1
   2cedc:	movw	r0, #0
   2cee0:	str	r0, [sp, #8]
   2cee4:	bne	2cefc <__assert_fail@plt+0x1b7a8>
   2cee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ceec:	cmp	r0, #0
   2cef0:	movw	r0, #0
   2cef4:	movne	r0, #1
   2cef8:	str	r0, [sp, #8]
   2cefc:	ldr	r0, [sp, #8]
   2cf00:	tst	r0, #1
   2cf04:	beq	2cf0c <__assert_fail@plt+0x1b7b8>
   2cf08:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2cf0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cf10:	sub	lr, fp, #1024	; 0x400
   2cf14:	sub	r1, lr, #56	; 0x38
   2cf18:	ldr	r1, [r1, r0, lsl #2]
   2cf1c:	sub	lr, fp, #2048	; 0x800
   2cf20:	sub	r2, lr, #56	; 0x38
   2cf24:	add	r0, r2, r0, lsl #2
   2cf28:	ldr	r0, [r0]
   2cf2c:	cmp	r1, r0
   2cf30:	beq	2cf4c <__assert_fail@plt+0x1b7f8>
   2cf34:	ldr	r0, [fp, #-16]
   2cf38:	ldr	r0, [r0, #92]	; 0x5c
   2cf3c:	cmp	r0, #1
   2cf40:	ble	2cf4c <__assert_fail@plt+0x1b7f8>
   2cf44:	movw	r0, #1
   2cf48:	strb	r0, [fp, #-37]	; 0xffffffdb
   2cf4c:	ldr	r1, [fp, #-16]
   2cf50:	sub	r0, fp, #24
   2cf54:	sub	lr, fp, #3072	; 0xc00
   2cf58:	sub	r2, lr, #68	; 0x44
   2cf5c:	mov	r3, #2
   2cf60:	bl	25ff4 <__assert_fail@plt+0x148a0>
   2cf64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cf68:	sub	lr, fp, #3072	; 0xc00
   2cf6c:	sub	r2, lr, #56	; 0x38
   2cf70:	str	r0, [r2, r1, lsl #2]
   2cf74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cf78:	add	r0, r2, r0, lsl #2
   2cf7c:	ldr	r0, [r0]
   2cf80:	movw	r1, #0
   2cf84:	cmp	r0, r1
   2cf88:	movw	r0, #0
   2cf8c:	str	r0, [sp, #4]
   2cf90:	bne	2cfa8 <__assert_fail@plt+0x1b854>
   2cf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf98:	cmp	r0, #0
   2cf9c:	movw	r0, #0
   2cfa0:	movne	r0, #1
   2cfa4:	str	r0, [sp, #4]
   2cfa8:	ldr	r0, [sp, #4]
   2cfac:	tst	r0, #1
   2cfb0:	beq	2cfb8 <__assert_fail@plt+0x1b864>
   2cfb4:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2cfb8:	b	2cff0 <__assert_fail@plt+0x1b89c>
   2cfbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfc0:	sub	lr, fp, #1024	; 0x400
   2cfc4:	sub	r1, lr, #56	; 0x38
   2cfc8:	ldr	r2, [r1, r0, lsl #2]
   2cfcc:	sub	lr, fp, #2048	; 0x800
   2cfd0:	sub	r3, lr, #56	; 0x38
   2cfd4:	str	r2, [r3, r0, lsl #2]
   2cfd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfdc:	ldr	r1, [r1, r0, lsl #2]
   2cfe0:	sub	lr, fp, #3072	; 0xc00
   2cfe4:	sub	r2, lr, #56	; 0x38
   2cfe8:	add	r0, r2, r0, lsl #2
   2cfec:	str	r1, [r0]
   2cff0:	sub	lr, fp, #3072	; 0xc00
   2cff4:	sub	r0, lr, #100	; 0x64
   2cff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cffc:	add	r2, sp, #20
   2d000:	add	r1, r2, r1, lsl #5
   2d004:	bl	2dc14 <__assert_fail@plt+0x1c4c0>
   2d008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d00c:	add	r0, r0, #1
   2d010:	str	r0, [fp, #-28]	; 0xffffffe4
   2d014:	b	2cd3c <__assert_fail@plt+0x1b5e8>
   2d018:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2d01c:	tst	r0, #1
   2d020:	bne	2d1a0 <__assert_fail@plt+0x1ba4c>
   2d024:	movw	r0, #4
   2d028:	movw	r1, #256	; 0x100
   2d02c:	bl	389e0 <__assert_fail@plt+0x2728c>
   2d030:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d034:	str	r0, [r1, #44]	; 0x2c
   2d038:	str	r0, [fp, #-56]	; 0xffffffc8
   2d03c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d040:	movw	r1, #0
   2d044:	cmp	r0, r1
   2d048:	bne	2d050 <__assert_fail@plt+0x1b8fc>
   2d04c:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2d050:	movw	r0, #0
   2d054:	str	r0, [fp, #-28]	; 0xffffffe4
   2d058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d05c:	cmp	r0, #8
   2d060:	bge	2d19c <__assert_fail@plt+0x1ba48>
   2d064:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d068:	lsl	r0, r0, #5
   2d06c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d070:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d074:	sub	lr, fp, #3072	; 0xc00
   2d078:	sub	r1, lr, #100	; 0x64
   2d07c:	add	r0, r1, r0, lsl #2
   2d080:	ldr	r0, [r0]
   2d084:	str	r0, [fp, #-44]	; 0xffffffd4
   2d088:	movw	r0, #1
   2d08c:	str	r0, [fp, #-48]	; 0xffffffd0
   2d090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d094:	cmp	r0, #0
   2d098:	beq	2d188 <__assert_fail@plt+0x1ba34>
   2d09c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d0a0:	and	r0, r0, #1
   2d0a4:	cmp	r0, #0
   2d0a8:	beq	2d15c <__assert_fail@plt+0x1ba08>
   2d0ac:	movw	r0, #0
   2d0b0:	str	r0, [fp, #-32]	; 0xffffffe0
   2d0b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d0b8:	add	r1, sp, #20
   2d0bc:	add	r0, r1, r0, lsl #5
   2d0c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d0c4:	add	r0, r0, r1, lsl #2
   2d0c8:	ldr	r0, [r0]
   2d0cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d0d0:	and	r0, r0, r1
   2d0d4:	cmp	r0, #0
   2d0d8:	bne	2d0f0 <__assert_fail@plt+0x1b99c>
   2d0dc:	b	2d0e0 <__assert_fail@plt+0x1b98c>
   2d0e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d0e4:	add	r0, r0, #1
   2d0e8:	str	r0, [fp, #-32]	; 0xffffffe0
   2d0ec:	b	2d0b4 <__assert_fail@plt+0x1b960>
   2d0f0:	ldr	r0, [fp, #-16]
   2d0f4:	add	r0, r0, #96	; 0x60
   2d0f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d0fc:	add	r0, r0, r1, lsl #2
   2d100:	ldr	r0, [r0]
   2d104:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d108:	and	r0, r0, r1
   2d10c:	cmp	r0, #0
   2d110:	beq	2d138 <__assert_fail@plt+0x1b9e4>
   2d114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d118:	sub	lr, fp, #2048	; 0x800
   2d11c:	sub	r1, lr, #56	; 0x38
   2d120:	ldr	r0, [r1, r0, lsl #2]
   2d124:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d128:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d12c:	add	r1, r1, r2, lsl #2
   2d130:	str	r0, [r1]
   2d134:	b	2d158 <__assert_fail@plt+0x1ba04>
   2d138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d13c:	sub	lr, fp, #1024	; 0x400
   2d140:	sub	r1, lr, #56	; 0x38
   2d144:	ldr	r0, [r1, r0, lsl #2]
   2d148:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d14c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d150:	add	r1, r1, r2, lsl #2
   2d154:	str	r0, [r1]
   2d158:	b	2d15c <__assert_fail@plt+0x1ba08>
   2d15c:	b	2d160 <__assert_fail@plt+0x1ba0c>
   2d160:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d164:	lsl	r0, r0, #1
   2d168:	str	r0, [fp, #-48]	; 0xffffffd0
   2d16c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d170:	lsr	r0, r0, #1
   2d174:	str	r0, [fp, #-44]	; 0xffffffd4
   2d178:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d17c:	add	r0, r0, #1
   2d180:	str	r0, [fp, #-36]	; 0xffffffdc
   2d184:	b	2d090 <__assert_fail@plt+0x1b93c>
   2d188:	b	2d18c <__assert_fail@plt+0x1ba38>
   2d18c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d190:	add	r0, r0, #1
   2d194:	str	r0, [fp, #-28]	; 0xffffffe4
   2d198:	b	2d058 <__assert_fail@plt+0x1b904>
   2d19c:	b	2d2f0 <__assert_fail@plt+0x1bb9c>
   2d1a0:	movw	r0, #4
   2d1a4:	movw	r1, #512	; 0x200
   2d1a8:	bl	389e0 <__assert_fail@plt+0x2728c>
   2d1ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d1b0:	str	r0, [r1, #48]	; 0x30
   2d1b4:	str	r0, [fp, #-56]	; 0xffffffc8
   2d1b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d1bc:	movw	r1, #0
   2d1c0:	cmp	r0, r1
   2d1c4:	bne	2d1cc <__assert_fail@plt+0x1ba78>
   2d1c8:	b	2ccc8 <__assert_fail@plt+0x1b574>
   2d1cc:	movw	r0, #0
   2d1d0:	str	r0, [fp, #-28]	; 0xffffffe4
   2d1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d1d8:	cmp	r0, #8
   2d1dc:	bge	2d2ec <__assert_fail@plt+0x1bb98>
   2d1e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d1e4:	lsl	r0, r0, #5
   2d1e8:	str	r0, [fp, #-36]	; 0xffffffdc
   2d1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d1f0:	sub	lr, fp, #3072	; 0xc00
   2d1f4:	sub	r1, lr, #100	; 0x64
   2d1f8:	add	r0, r1, r0, lsl #2
   2d1fc:	ldr	r0, [r0]
   2d200:	str	r0, [fp, #-44]	; 0xffffffd4
   2d204:	movw	r0, #1
   2d208:	str	r0, [fp, #-48]	; 0xffffffd0
   2d20c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d210:	cmp	r0, #0
   2d214:	beq	2d2d8 <__assert_fail@plt+0x1bb84>
   2d218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d21c:	and	r0, r0, #1
   2d220:	cmp	r0, #0
   2d224:	beq	2d2ac <__assert_fail@plt+0x1bb58>
   2d228:	movw	r0, #0
   2d22c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d234:	add	r1, sp, #20
   2d238:	add	r0, r1, r0, lsl #5
   2d23c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d240:	add	r0, r0, r1, lsl #2
   2d244:	ldr	r0, [r0]
   2d248:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d24c:	and	r0, r0, r1
   2d250:	cmp	r0, #0
   2d254:	bne	2d26c <__assert_fail@plt+0x1bb18>
   2d258:	b	2d25c <__assert_fail@plt+0x1bb08>
   2d25c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d260:	add	r0, r0, #1
   2d264:	str	r0, [fp, #-32]	; 0xffffffe0
   2d268:	b	2d230 <__assert_fail@plt+0x1badc>
   2d26c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d270:	sub	lr, fp, #1024	; 0x400
   2d274:	sub	r1, lr, #56	; 0x38
   2d278:	ldr	r0, [r1, r0, lsl #2]
   2d27c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d280:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d284:	str	r0, [r1, r2, lsl #2]
   2d288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d28c:	sub	lr, fp, #2048	; 0x800
   2d290:	sub	r1, lr, #56	; 0x38
   2d294:	ldr	r0, [r1, r0, lsl #2]
   2d298:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d29c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d2a0:	add	r2, r2, #256	; 0x100
   2d2a4:	add	r1, r1, r2, lsl #2
   2d2a8:	str	r0, [r1]
   2d2ac:	b	2d2b0 <__assert_fail@plt+0x1bb5c>
   2d2b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d2b4:	lsl	r0, r0, #1
   2d2b8:	str	r0, [fp, #-48]	; 0xffffffd0
   2d2bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d2c0:	lsr	r0, r0, #1
   2d2c4:	str	r0, [fp, #-44]	; 0xffffffd4
   2d2c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d2cc:	add	r0, r0, #1
   2d2d0:	str	r0, [fp, #-36]	; 0xffffffdc
   2d2d4:	b	2d20c <__assert_fail@plt+0x1bab8>
   2d2d8:	b	2d2dc <__assert_fail@plt+0x1bb88>
   2d2dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d2e0:	add	r0, r0, #1
   2d2e4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d2e8:	b	2d1d4 <__assert_fail@plt+0x1ba80>
   2d2ec:	b	2d2f0 <__assert_fail@plt+0x1bb9c>
   2d2f0:	sub	lr, fp, #3072	; 0xc00
   2d2f4:	sub	r0, lr, #100	; 0x64
   2d2f8:	movw	r1, #10
   2d2fc:	bl	28bb4 <__assert_fail@plt+0x17460>
   2d300:	tst	r0, #1
   2d304:	beq	2d39c <__assert_fail@plt+0x1bc48>
   2d308:	movw	r0, #0
   2d30c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d314:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d318:	cmp	r0, r1
   2d31c:	bge	2d398 <__assert_fail@plt+0x1bc44>
   2d320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d324:	add	r1, sp, #20
   2d328:	add	r0, r1, r0, lsl #5
   2d32c:	movw	r1, #10
   2d330:	bl	28bb4 <__assert_fail@plt+0x17460>
   2d334:	tst	r0, #1
   2d338:	beq	2d384 <__assert_fail@plt+0x1bc30>
   2d33c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d340:	sub	lr, fp, #3072	; 0xc00
   2d344:	sub	r1, lr, #56	; 0x38
   2d348:	add	r0, r1, r0, lsl #2
   2d34c:	ldr	r0, [r0]
   2d350:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d354:	str	r0, [r1, #40]	; 0x28
   2d358:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2d35c:	tst	r0, #1
   2d360:	beq	2d380 <__assert_fail@plt+0x1bc2c>
   2d364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d368:	sub	lr, fp, #3072	; 0xc00
   2d36c:	sub	r1, lr, #56	; 0x38
   2d370:	add	r0, r1, r0, lsl #2
   2d374:	ldr	r0, [r0]
   2d378:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d37c:	str	r0, [r1, #1064]	; 0x428
   2d380:	b	2d398 <__assert_fail@plt+0x1bc44>
   2d384:	b	2d388 <__assert_fail@plt+0x1bc34>
   2d388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d38c:	add	r0, r0, #1
   2d390:	str	r0, [fp, #-32]	; 0xffffffe0
   2d394:	b	2d310 <__assert_fail@plt+0x1bbbc>
   2d398:	b	2d39c <__assert_fail@plt+0x1bc48>
   2d39c:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2d3a0:	bl	1604c <__assert_fail@plt+0x48f8>
   2d3a4:	movw	r0, #0
   2d3a8:	str	r0, [fp, #-28]	; 0xffffffe4
   2d3ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d3b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d3b4:	cmp	r0, r1
   2d3b8:	bge	2d3ec <__assert_fail@plt+0x1bc98>
   2d3bc:	sub	lr, fp, #6144	; 0x1800
   2d3c0:	sub	r0, lr, #100	; 0x64
   2d3c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d3c8:	movw	r2, #12
   2d3cc:	mul	r1, r1, r2
   2d3d0:	add	r0, r0, r1
   2d3d4:	ldr	r0, [r0, #8]
   2d3d8:	bl	1604c <__assert_fail@plt+0x48f8>
   2d3dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d3e0:	add	r0, r0, #1
   2d3e4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d3e8:	b	2d3ac <__assert_fail@plt+0x1bc58>
   2d3ec:	movw	r0, #1
   2d3f0:	and	r0, r0, #1
   2d3f4:	strb	r0, [fp, #-9]
   2d3f8:	ldrb	r0, [fp, #-9]
   2d3fc:	and	r0, r0, #1
   2d400:	sub	sp, fp, #8
   2d404:	pop	{r4, r5, fp, pc}
   2d408:	push	{fp, lr}
   2d40c:	mov	fp, sp
   2d410:	sub	sp, sp, #184	; 0xb8
   2d414:	sub	ip, fp, #76	; 0x4c
   2d418:	str	r0, [fp, #-8]
   2d41c:	str	r1, [fp, #-12]
   2d420:	str	r2, [fp, #-16]
   2d424:	str	r3, [fp, #-20]	; 0xffffffec
   2d428:	ldr	r0, [fp, #-12]
   2d42c:	add	r0, r0, #4
   2d430:	str	r0, [fp, #-80]	; 0xffffffb0
   2d434:	mov	r0, ip
   2d438:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2d43c:	movw	r0, #0
   2d440:	str	r0, [fp, #-44]	; 0xffffffd4
   2d444:	str	r0, [fp, #-32]	; 0xffffffe0
   2d448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d44c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d450:	ldr	r1, [r1, #4]
   2d454:	cmp	r0, r1
   2d458:	bge	2db74 <__assert_fail@plt+0x1c420>
   2d45c:	ldr	r0, [fp, #-8]
   2d460:	ldr	r0, [r0]
   2d464:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d468:	ldr	r1, [r1, #8]
   2d46c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d470:	ldr	r1, [r1, r2, lsl #2]
   2d474:	add	r0, r0, r1, lsl #3
   2d478:	str	r0, [fp, #-84]	; 0xffffffac
   2d47c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d480:	ldr	r0, [r0, #4]
   2d484:	and	r0, r0, #255	; 0xff
   2d488:	str	r0, [fp, #-88]	; 0xffffffa8
   2d48c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d490:	ldr	r0, [r0, #4]
   2d494:	lsr	r0, r0, #8
   2d498:	movw	r1, #1023	; 0x3ff
   2d49c:	and	r0, r0, r1
   2d4a0:	str	r0, [sp, #92]	; 0x5c
   2d4a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d4a8:	cmp	r0, #1
   2d4ac:	bne	2d4c4 <__assert_fail@plt+0x1bd70>
   2d4b0:	sub	r0, fp, #76	; 0x4c
   2d4b4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d4b8:	ldrb	r1, [r1]
   2d4bc:	bl	21e50 <__assert_fail@plt+0x106fc>
   2d4c0:	b	2d5d4 <__assert_fail@plt+0x1be80>
   2d4c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d4c8:	cmp	r0, #3
   2d4cc:	bne	2d4e4 <__assert_fail@plt+0x1bd90>
   2d4d0:	sub	r0, fp, #76	; 0x4c
   2d4d4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d4d8:	ldr	r1, [r1]
   2d4dc:	bl	2dc14 <__assert_fail@plt+0x1c4c0>
   2d4e0:	b	2d5d0 <__assert_fail@plt+0x1be7c>
   2d4e4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d4e8:	cmp	r0, #5
   2d4ec:	bne	2d560 <__assert_fail@plt+0x1be0c>
   2d4f0:	ldr	r0, [fp, #-8]
   2d4f4:	ldr	r0, [r0, #92]	; 0x5c
   2d4f8:	cmp	r0, #1
   2d4fc:	ble	2d514 <__assert_fail@plt+0x1bdc0>
   2d500:	sub	r0, fp, #76	; 0x4c
   2d504:	ldr	r1, [fp, #-8]
   2d508:	ldr	r1, [r1, #60]	; 0x3c
   2d50c:	bl	2dc14 <__assert_fail@plt+0x1c4c0>
   2d510:	b	2d51c <__assert_fail@plt+0x1bdc8>
   2d514:	sub	r0, fp, #76	; 0x4c
   2d518:	bl	2dc6c <__assert_fail@plt+0x1c518>
   2d51c:	ldr	r0, [fp, #-8]
   2d520:	ldr	r0, [r0, #128]	; 0x80
   2d524:	and	r0, r0, #64	; 0x40
   2d528:	cmp	r0, #0
   2d52c:	bne	2d53c <__assert_fail@plt+0x1bde8>
   2d530:	sub	r0, fp, #76	; 0x4c
   2d534:	movw	r1, #10
   2d538:	bl	2dc98 <__assert_fail@plt+0x1c544>
   2d53c:	ldr	r0, [fp, #-8]
   2d540:	ldr	r0, [r0, #128]	; 0x80
   2d544:	and	r0, r0, #128	; 0x80
   2d548:	cmp	r0, #0
   2d54c:	beq	2d55c <__assert_fail@plt+0x1be08>
   2d550:	sub	r0, fp, #76	; 0x4c
   2d554:	movw	r1, #0
   2d558:	bl	2dc98 <__assert_fail@plt+0x1c544>
   2d55c:	b	2d5cc <__assert_fail@plt+0x1be78>
   2d560:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d564:	cmp	r0, #7
   2d568:	bne	2d5c4 <__assert_fail@plt+0x1be70>
   2d56c:	sub	r0, fp, #76	; 0x4c
   2d570:	movw	r1, #255	; 0xff
   2d574:	and	r1, r1, #255	; 0xff
   2d578:	movw	r2, #16
   2d57c:	bl	11658 <memset@plt>
   2d580:	ldr	r0, [fp, #-8]
   2d584:	ldr	r0, [r0, #128]	; 0x80
   2d588:	and	r0, r0, #64	; 0x40
   2d58c:	cmp	r0, #0
   2d590:	bne	2d5a0 <__assert_fail@plt+0x1be4c>
   2d594:	sub	r0, fp, #76	; 0x4c
   2d598:	movw	r1, #10
   2d59c:	bl	2dc98 <__assert_fail@plt+0x1c544>
   2d5a0:	ldr	r0, [fp, #-8]
   2d5a4:	ldr	r0, [r0, #128]	; 0x80
   2d5a8:	and	r0, r0, #128	; 0x80
   2d5ac:	cmp	r0, #0
   2d5b0:	beq	2d5c0 <__assert_fail@plt+0x1be6c>
   2d5b4:	sub	r0, fp, #76	; 0x4c
   2d5b8:	movw	r1, #0
   2d5bc:	bl	2dc98 <__assert_fail@plt+0x1c544>
   2d5c0:	b	2d5c8 <__assert_fail@plt+0x1be74>
   2d5c4:	b	2db64 <__assert_fail@plt+0x1c410>
   2d5c8:	b	2d5cc <__assert_fail@plt+0x1be78>
   2d5cc:	b	2d5d0 <__assert_fail@plt+0x1be7c>
   2d5d0:	b	2d5d4 <__assert_fail@plt+0x1be80>
   2d5d4:	ldr	r0, [sp, #92]	; 0x5c
   2d5d8:	cmp	r0, #0
   2d5dc:	beq	2d8b0 <__assert_fail@plt+0x1c15c>
   2d5e0:	ldr	r0, [sp, #92]	; 0x5c
   2d5e4:	and	r0, r0, #32
   2d5e8:	cmp	r0, #0
   2d5ec:	beq	2d634 <__assert_fail@plt+0x1bee0>
   2d5f0:	sub	r0, fp, #76	; 0x4c
   2d5f4:	movw	r1, #10
   2d5f8:	bl	28bb4 <__assert_fail@plt+0x17460>
   2d5fc:	sub	r1, fp, #76	; 0x4c
   2d600:	and	r0, r0, #1
   2d604:	strb	r0, [sp, #91]	; 0x5b
   2d608:	mov	r0, r1
   2d60c:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2d610:	ldrb	r0, [sp, #91]	; 0x5b
   2d614:	tst	r0, #1
   2d618:	beq	2d62c <__assert_fail@plt+0x1bed8>
   2d61c:	sub	r0, fp, #76	; 0x4c
   2d620:	movw	r1, #10
   2d624:	bl	21e50 <__assert_fail@plt+0x106fc>
   2d628:	b	2d630 <__assert_fail@plt+0x1bedc>
   2d62c:	b	2db64 <__assert_fail@plt+0x1c410>
   2d630:	b	2d634 <__assert_fail@plt+0x1bee0>
   2d634:	ldr	r0, [sp, #92]	; 0x5c
   2d638:	and	r0, r0, #128	; 0x80
   2d63c:	cmp	r0, #0
   2d640:	beq	2d650 <__assert_fail@plt+0x1befc>
   2d644:	sub	r0, fp, #76	; 0x4c
   2d648:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2d64c:	b	2db64 <__assert_fail@plt+0x1c410>
   2d650:	ldr	r0, [sp, #92]	; 0x5c
   2d654:	and	r0, r0, #4
   2d658:	cmp	r0, #0
   2d65c:	beq	2d77c <__assert_fail@plt+0x1c028>
   2d660:	movw	r0, #0
   2d664:	str	r0, [sp, #84]	; 0x54
   2d668:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d66c:	cmp	r0, #1
   2d670:	bne	2d698 <__assert_fail@plt+0x1bf44>
   2d674:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d678:	ldr	r0, [r0, #4]
   2d67c:	lsr	r0, r0, #22
   2d680:	and	r0, r0, #1
   2d684:	cmp	r0, #0
   2d688:	bne	2d698 <__assert_fail@plt+0x1bf44>
   2d68c:	sub	r0, fp, #76	; 0x4c
   2d690:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2d694:	b	2db64 <__assert_fail@plt+0x1c410>
   2d698:	ldr	r0, [fp, #-8]
   2d69c:	ldr	r0, [r0, #92]	; 0x5c
   2d6a0:	cmp	r0, #1
   2d6a4:	ble	2d710 <__assert_fail@plt+0x1bfbc>
   2d6a8:	movw	r0, #0
   2d6ac:	str	r0, [fp, #-36]	; 0xffffffdc
   2d6b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d6b4:	cmp	r0, #8
   2d6b8:	bge	2d70c <__assert_fail@plt+0x1bfb8>
   2d6bc:	ldr	r0, [fp, #-8]
   2d6c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d6c4:	add	r2, r0, r1, lsl #2
   2d6c8:	ldr	r2, [r2, #96]	; 0x60
   2d6cc:	ldr	r0, [r0, #60]	; 0x3c
   2d6d0:	ldr	r0, [r0, r1, lsl #2]
   2d6d4:	mvn	r0, r0
   2d6d8:	orr	r0, r2, r0
   2d6dc:	sub	r2, fp, #76	; 0x4c
   2d6e0:	add	r1, r2, r1, lsl #2
   2d6e4:	ldr	r2, [r1]
   2d6e8:	and	r0, r2, r0
   2d6ec:	str	r0, [r1]
   2d6f0:	ldr	r1, [sp, #84]	; 0x54
   2d6f4:	orr	r0, r1, r0
   2d6f8:	str	r0, [sp, #84]	; 0x54
   2d6fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d700:	add	r0, r0, #1
   2d704:	str	r0, [fp, #-36]	; 0xffffffdc
   2d708:	b	2d6b0 <__assert_fail@plt+0x1bf5c>
   2d70c:	b	2d768 <__assert_fail@plt+0x1c014>
   2d710:	movw	r0, #0
   2d714:	str	r0, [fp, #-36]	; 0xffffffdc
   2d718:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d71c:	cmp	r0, #8
   2d720:	bge	2d764 <__assert_fail@plt+0x1c010>
   2d724:	ldr	r0, [fp, #-8]
   2d728:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d72c:	add	r0, r0, r1, lsl #2
   2d730:	ldr	r0, [r0, #96]	; 0x60
   2d734:	sub	r2, fp, #76	; 0x4c
   2d738:	add	r1, r2, r1, lsl #2
   2d73c:	ldr	r2, [r1]
   2d740:	and	r0, r2, r0
   2d744:	str	r0, [r1]
   2d748:	ldr	r1, [sp, #84]	; 0x54
   2d74c:	orr	r0, r1, r0
   2d750:	str	r0, [sp, #84]	; 0x54
   2d754:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d758:	add	r0, r0, #1
   2d75c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d760:	b	2d718 <__assert_fail@plt+0x1bfc4>
   2d764:	b	2d768 <__assert_fail@plt+0x1c014>
   2d768:	ldr	r0, [sp, #84]	; 0x54
   2d76c:	cmp	r0, #0
   2d770:	bne	2d778 <__assert_fail@plt+0x1c024>
   2d774:	b	2db64 <__assert_fail@plt+0x1c410>
   2d778:	b	2d77c <__assert_fail@plt+0x1c028>
   2d77c:	ldr	r0, [sp, #92]	; 0x5c
   2d780:	and	r0, r0, #8
   2d784:	cmp	r0, #0
   2d788:	beq	2d8ac <__assert_fail@plt+0x1c158>
   2d78c:	movw	r0, #0
   2d790:	str	r0, [sp, #80]	; 0x50
   2d794:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d798:	cmp	r0, #1
   2d79c:	bne	2d7c4 <__assert_fail@plt+0x1c070>
   2d7a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d7a4:	ldr	r0, [r0, #4]
   2d7a8:	lsr	r0, r0, #22
   2d7ac:	and	r0, r0, #1
   2d7b0:	cmp	r0, #0
   2d7b4:	beq	2d7c4 <__assert_fail@plt+0x1c070>
   2d7b8:	sub	r0, fp, #76	; 0x4c
   2d7bc:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2d7c0:	b	2db64 <__assert_fail@plt+0x1c410>
   2d7c4:	ldr	r0, [fp, #-8]
   2d7c8:	ldr	r0, [r0, #92]	; 0x5c
   2d7cc:	cmp	r0, #1
   2d7d0:	ble	2d83c <__assert_fail@plt+0x1c0e8>
   2d7d4:	movw	r0, #0
   2d7d8:	str	r0, [fp, #-36]	; 0xffffffdc
   2d7dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d7e0:	cmp	r0, #8
   2d7e4:	bge	2d838 <__assert_fail@plt+0x1c0e4>
   2d7e8:	ldr	r0, [fp, #-8]
   2d7ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d7f0:	add	r2, r0, r1, lsl #2
   2d7f4:	ldr	r2, [r2, #96]	; 0x60
   2d7f8:	ldr	r0, [r0, #60]	; 0x3c
   2d7fc:	ldr	r0, [r0, r1, lsl #2]
   2d800:	and	r0, r2, r0
   2d804:	mvn	r0, r0
   2d808:	sub	r2, fp, #76	; 0x4c
   2d80c:	add	r1, r2, r1, lsl #2
   2d810:	ldr	r2, [r1]
   2d814:	and	r0, r2, r0
   2d818:	str	r0, [r1]
   2d81c:	ldr	r1, [sp, #80]	; 0x50
   2d820:	orr	r0, r1, r0
   2d824:	str	r0, [sp, #80]	; 0x50
   2d828:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d82c:	add	r0, r0, #1
   2d830:	str	r0, [fp, #-36]	; 0xffffffdc
   2d834:	b	2d7dc <__assert_fail@plt+0x1c088>
   2d838:	b	2d898 <__assert_fail@plt+0x1c144>
   2d83c:	movw	r0, #0
   2d840:	str	r0, [fp, #-36]	; 0xffffffdc
   2d844:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d848:	cmp	r0, #8
   2d84c:	bge	2d894 <__assert_fail@plt+0x1c140>
   2d850:	ldr	r0, [fp, #-8]
   2d854:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d858:	add	r0, r0, r1, lsl #2
   2d85c:	ldr	r0, [r0, #96]	; 0x60
   2d860:	mvn	r0, r0
   2d864:	sub	r2, fp, #76	; 0x4c
   2d868:	add	r1, r2, r1, lsl #2
   2d86c:	ldr	r2, [r1]
   2d870:	and	r0, r2, r0
   2d874:	str	r0, [r1]
   2d878:	ldr	r1, [sp, #80]	; 0x50
   2d87c:	orr	r0, r1, r0
   2d880:	str	r0, [sp, #80]	; 0x50
   2d884:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d888:	add	r0, r0, #1
   2d88c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d890:	b	2d844 <__assert_fail@plt+0x1c0f0>
   2d894:	b	2d898 <__assert_fail@plt+0x1c144>
   2d898:	ldr	r0, [sp, #80]	; 0x50
   2d89c:	cmp	r0, #0
   2d8a0:	bne	2d8a8 <__assert_fail@plt+0x1c154>
   2d8a4:	b	2db64 <__assert_fail@plt+0x1c410>
   2d8a8:	b	2d8ac <__assert_fail@plt+0x1c158>
   2d8ac:	b	2d8b0 <__assert_fail@plt+0x1c15c>
   2d8b0:	movw	r0, #0
   2d8b4:	str	r0, [fp, #-36]	; 0xffffffdc
   2d8b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d8bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d8c0:	cmp	r0, r1
   2d8c4:	bge	2daec <__assert_fail@plt+0x1c398>
   2d8c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d8cc:	cmp	r0, #1
   2d8d0:	bne	2d8f8 <__assert_fail@plt+0x1c1a4>
   2d8d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d8d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d8dc:	add	r0, r0, r1, lsl #5
   2d8e0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d8e4:	ldrb	r1, [r1]
   2d8e8:	bl	28bb4 <__assert_fail@plt+0x17460>
   2d8ec:	tst	r0, #1
   2d8f0:	bne	2d8f8 <__assert_fail@plt+0x1c1a4>
   2d8f4:	b	2dadc <__assert_fail@plt+0x1c388>
   2d8f8:	movw	r0, #0
   2d8fc:	str	r0, [sp, #12]
   2d900:	str	r0, [fp, #-40]	; 0xffffffd8
   2d904:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d908:	cmp	r0, #8
   2d90c:	bge	2d958 <__assert_fail@plt+0x1c204>
   2d910:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d914:	sub	r1, fp, #76	; 0x4c
   2d918:	ldr	r1, [r1, r0, lsl #2]
   2d91c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d924:	add	r2, r2, r3, lsl #5
   2d928:	ldr	r2, [r2, r0, lsl #2]
   2d92c:	and	r1, r1, r2
   2d930:	add	r2, sp, #48	; 0x30
   2d934:	add	r0, r2, r0, lsl #2
   2d938:	str	r1, [r0]
   2d93c:	ldr	r0, [sp, #12]
   2d940:	orr	r0, r0, r1
   2d944:	str	r0, [sp, #12]
   2d948:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d94c:	add	r0, r0, #1
   2d950:	str	r0, [fp, #-40]	; 0xffffffd8
   2d954:	b	2d904 <__assert_fail@plt+0x1c1b0>
   2d958:	ldr	r0, [sp, #12]
   2d95c:	cmp	r0, #0
   2d960:	bne	2d968 <__assert_fail@plt+0x1c214>
   2d964:	b	2dadc <__assert_fail@plt+0x1c388>
   2d968:	movw	r0, #0
   2d96c:	str	r0, [sp, #4]
   2d970:	str	r0, [sp, #8]
   2d974:	str	r0, [fp, #-40]	; 0xffffffd8
   2d978:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d97c:	cmp	r0, #8
   2d980:	bge	2d9f8 <__assert_fail@plt+0x1c2a4>
   2d984:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d988:	sub	r1, fp, #76	; 0x4c
   2d98c:	ldr	r2, [r1, r0, lsl #2]
   2d990:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d994:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2d998:	add	r3, r3, ip, lsl #5
   2d99c:	ldr	r3, [r3, r0, lsl #2]
   2d9a0:	bic	r2, r3, r2
   2d9a4:	add	r3, sp, #16
   2d9a8:	str	r2, [r3, r0, lsl #2]
   2d9ac:	ldr	r0, [sp, #8]
   2d9b0:	orr	r0, r0, r2
   2d9b4:	str	r0, [sp, #8]
   2d9b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d9bc:	add	r2, r1, r0, lsl #2
   2d9c0:	ldr	r1, [r1, r0, lsl #2]
   2d9c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9c8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2d9cc:	add	r3, r3, ip, lsl #5
   2d9d0:	ldr	r0, [r3, r0, lsl #2]
   2d9d4:	bic	r0, r1, r0
   2d9d8:	str	r0, [r2]
   2d9dc:	ldr	r1, [sp, #4]
   2d9e0:	orr	r0, r1, r0
   2d9e4:	str	r0, [sp, #4]
   2d9e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d9ec:	add	r0, r0, #1
   2d9f0:	str	r0, [fp, #-40]	; 0xffffffd8
   2d9f4:	b	2d978 <__assert_fail@plt+0x1c224>
   2d9f8:	ldr	r0, [sp, #8]
   2d9fc:	cmp	r0, #0
   2da00:	beq	2da80 <__assert_fail@plt+0x1c32c>
   2da04:	add	r1, sp, #48	; 0x30
   2da08:	ldr	r0, [fp, #-20]	; 0xffffffec
   2da0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2da10:	add	r0, r0, r2, lsl #5
   2da14:	add	r2, sp, #16
   2da18:	str	r1, [sp]
   2da1c:	mov	r1, r2
   2da20:	bl	2dce0 <__assert_fail@plt+0x1c58c>
   2da24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2da28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2da2c:	add	r0, r0, r1, lsl #5
   2da30:	ldr	r1, [sp]
   2da34:	bl	2dce0 <__assert_fail@plt+0x1c58c>
   2da38:	ldr	r0, [fp, #-16]
   2da3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2da40:	movw	r2, #12
   2da44:	mul	r1, r1, r2
   2da48:	add	r0, r0, r1
   2da4c:	ldr	r1, [fp, #-16]
   2da50:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2da54:	mul	r2, lr, r2
   2da58:	add	r1, r1, r2
   2da5c:	bl	25e30 <__assert_fail@plt+0x146dc>
   2da60:	str	r0, [fp, #-24]	; 0xffffffe8
   2da64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da68:	cmp	r0, #0
   2da6c:	beq	2da74 <__assert_fail@plt+0x1c320>
   2da70:	b	2db90 <__assert_fail@plt+0x1c43c>
   2da74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2da78:	add	r0, r0, #1
   2da7c:	str	r0, [fp, #-44]	; 0xffffffd4
   2da80:	ldr	r0, [fp, #-16]
   2da84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2da88:	add	r1, r1, r1, lsl #1
   2da8c:	add	r0, r0, r1, lsl #2
   2da90:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2da94:	ldr	r1, [r1, #8]
   2da98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2da9c:	add	r1, r1, r2, lsl #2
   2daa0:	ldr	r1, [r1]
   2daa4:	bl	25a48 <__assert_fail@plt+0x142f4>
   2daa8:	and	r0, r0, #1
   2daac:	strb	r0, [fp, #-25]	; 0xffffffe7
   2dab0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2dab4:	mvn	r1, #0
   2dab8:	eor	r0, r0, r1
   2dabc:	tst	r0, #1
   2dac0:	beq	2dac8 <__assert_fail@plt+0x1c374>
   2dac4:	b	2db90 <__assert_fail@plt+0x1c43c>
   2dac8:	ldr	r0, [sp, #4]
   2dacc:	cmp	r0, #0
   2dad0:	bne	2dad8 <__assert_fail@plt+0x1c384>
   2dad4:	b	2daec <__assert_fail@plt+0x1c398>
   2dad8:	b	2dadc <__assert_fail@plt+0x1c388>
   2dadc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2dae0:	add	r0, r0, #1
   2dae4:	str	r0, [fp, #-36]	; 0xffffffdc
   2dae8:	b	2d8b8 <__assert_fail@plt+0x1c164>
   2daec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2daf0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2daf4:	cmp	r0, r1
   2daf8:	bne	2db60 <__assert_fail@plt+0x1c40c>
   2dafc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2db00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2db04:	add	r0, r0, r1, lsl #5
   2db08:	sub	r1, fp, #76	; 0x4c
   2db0c:	bl	2dce0 <__assert_fail@plt+0x1c58c>
   2db10:	ldr	r0, [fp, #-16]
   2db14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2db18:	add	r1, r1, r1, lsl #1
   2db1c:	add	r0, r0, r1, lsl #2
   2db20:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2db24:	ldr	r1, [r1, #8]
   2db28:	ldr	lr, [fp, #-32]	; 0xffffffe0
   2db2c:	add	r1, r1, lr, lsl #2
   2db30:	ldr	r1, [r1]
   2db34:	bl	24b7c <__assert_fail@plt+0x13428>
   2db38:	str	r0, [fp, #-24]	; 0xffffffe8
   2db3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db40:	cmp	r0, #0
   2db44:	beq	2db4c <__assert_fail@plt+0x1c3f8>
   2db48:	b	2db90 <__assert_fail@plt+0x1c43c>
   2db4c:	sub	r0, fp, #76	; 0x4c
   2db50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2db54:	add	r1, r1, #1
   2db58:	str	r1, [fp, #-44]	; 0xffffffd4
   2db5c:	bl	2dbe8 <__assert_fail@plt+0x1c494>
   2db60:	b	2db64 <__assert_fail@plt+0x1c410>
   2db64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2db68:	add	r0, r0, #1
   2db6c:	str	r0, [fp, #-32]	; 0xffffffe0
   2db70:	b	2d448 <__assert_fail@plt+0x1bcf4>
   2db74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2db78:	cmp	r0, #256	; 0x100
   2db7c:	bgt	2db84 <__assert_fail@plt+0x1c430>
   2db80:	b	2db84 <__assert_fail@plt+0x1c430>
   2db84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2db88:	str	r0, [fp, #-4]
   2db8c:	b	2dbdc <__assert_fail@plt+0x1c488>
   2db90:	movw	r0, #0
   2db94:	str	r0, [fp, #-36]	; 0xffffffdc
   2db98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2db9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2dba0:	cmp	r0, r1
   2dba4:	bge	2dbd4 <__assert_fail@plt+0x1c480>
   2dba8:	ldr	r0, [fp, #-16]
   2dbac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dbb0:	movw	r2, #12
   2dbb4:	mul	r1, r1, r2
   2dbb8:	add	r0, r0, r1
   2dbbc:	ldr	r0, [r0, #8]
   2dbc0:	bl	1604c <__assert_fail@plt+0x48f8>
   2dbc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2dbc8:	add	r0, r0, #1
   2dbcc:	str	r0, [fp, #-36]	; 0xffffffdc
   2dbd0:	b	2db98 <__assert_fail@plt+0x1c444>
   2dbd4:	mvn	r0, #0
   2dbd8:	str	r0, [fp, #-4]
   2dbdc:	ldr	r0, [fp, #-4]
   2dbe0:	mov	sp, fp
   2dbe4:	pop	{fp, pc}
   2dbe8:	push	{fp, lr}
   2dbec:	mov	fp, sp
   2dbf0:	sub	sp, sp, #8
   2dbf4:	str	r0, [sp, #4]
   2dbf8:	ldr	r0, [sp, #4]
   2dbfc:	movw	r1, #0
   2dc00:	and	r1, r1, #255	; 0xff
   2dc04:	movw	r2, #32
   2dc08:	bl	11658 <memset@plt>
   2dc0c:	mov	sp, fp
   2dc10:	pop	{fp, pc}
   2dc14:	sub	sp, sp, #12
   2dc18:	str	r0, [sp, #8]
   2dc1c:	str	r1, [sp, #4]
   2dc20:	movw	r0, #0
   2dc24:	str	r0, [sp]
   2dc28:	ldr	r0, [sp]
   2dc2c:	cmp	r0, #8
   2dc30:	bge	2dc64 <__assert_fail@plt+0x1c510>
   2dc34:	ldr	r0, [sp, #4]
   2dc38:	ldr	r1, [sp]
   2dc3c:	ldr	r0, [r0, r1, lsl #2]
   2dc40:	ldr	r2, [sp, #8]
   2dc44:	add	r1, r2, r1, lsl #2
   2dc48:	ldr	r2, [r1]
   2dc4c:	orr	r0, r2, r0
   2dc50:	str	r0, [r1]
   2dc54:	ldr	r0, [sp]
   2dc58:	add	r0, r0, #1
   2dc5c:	str	r0, [sp]
   2dc60:	b	2dc28 <__assert_fail@plt+0x1c4d4>
   2dc64:	add	sp, sp, #12
   2dc68:	bx	lr
   2dc6c:	push	{fp, lr}
   2dc70:	mov	fp, sp
   2dc74:	sub	sp, sp, #8
   2dc78:	str	r0, [sp, #4]
   2dc7c:	ldr	r0, [sp, #4]
   2dc80:	movw	r1, #255	; 0xff
   2dc84:	and	r1, r1, #255	; 0xff
   2dc88:	movw	r2, #32
   2dc8c:	bl	11658 <memset@plt>
   2dc90:	mov	sp, fp
   2dc94:	pop	{fp, pc}
   2dc98:	sub	sp, sp, #8
   2dc9c:	str	r0, [sp, #4]
   2dca0:	str	r1, [sp]
   2dca4:	ldr	r0, [sp]
   2dca8:	asr	r1, r0, #31
   2dcac:	add	r1, r0, r1, lsr #27
   2dcb0:	bic	r2, r1, #31
   2dcb4:	sub	r0, r0, r2
   2dcb8:	mov	r2, #1
   2dcbc:	mvn	r0, r2, lsl r0
   2dcc0:	ldr	r2, [sp, #4]
   2dcc4:	asr	r1, r1, #5
   2dcc8:	add	r1, r2, r1, lsl #2
   2dccc:	ldr	r2, [r1]
   2dcd0:	and	r0, r2, r0
   2dcd4:	str	r0, [r1]
   2dcd8:	add	sp, sp, #8
   2dcdc:	bx	lr
   2dce0:	push	{fp, lr}
   2dce4:	mov	fp, sp
   2dce8:	sub	sp, sp, #8
   2dcec:	str	r0, [sp, #4]
   2dcf0:	str	r1, [sp]
   2dcf4:	ldr	r0, [sp, #4]
   2dcf8:	ldr	r1, [sp]
   2dcfc:	movw	r2, #32
   2dd00:	bl	11478 <memcpy@plt>
   2dd04:	mov	sp, fp
   2dd08:	pop	{fp, pc}
   2dd0c:	sub	sp, sp, #24
   2dd10:	str	r0, [sp, #16]
   2dd14:	str	r1, [sp, #12]
   2dd18:	str	r2, [sp, #8]
   2dd1c:	ldr	r0, [sp, #16]
   2dd20:	ldr	r0, [r0]
   2dd24:	ldr	r1, [sp, #12]
   2dd28:	add	r0, r0, r1, lsl #3
   2dd2c:	ldrb	r0, [r0, #4]
   2dd30:	str	r0, [sp, #4]
   2dd34:	ldr	r0, [sp, #16]
   2dd38:	ldr	r0, [r0]
   2dd3c:	ldr	r1, [sp, #12]
   2dd40:	add	r0, r0, r1, lsl #3
   2dd44:	ldr	r0, [r0, #4]
   2dd48:	lsr	r0, r0, #8
   2dd4c:	movw	r1, #1023	; 0x3ff
   2dd50:	and	r0, r0, r1
   2dd54:	str	r0, [sp]
   2dd58:	ldr	r0, [sp, #4]
   2dd5c:	cmp	r0, #2
   2dd60:	beq	2dd74 <__assert_fail@plt+0x1c620>
   2dd64:	movw	r0, #0
   2dd68:	and	r0, r0, #1
   2dd6c:	strb	r0, [sp, #23]
   2dd70:	b	2de2c <__assert_fail@plt+0x1c6d8>
   2dd74:	ldr	r0, [sp]
   2dd78:	cmp	r0, #0
   2dd7c:	bne	2dd90 <__assert_fail@plt+0x1c63c>
   2dd80:	movw	r0, #1
   2dd84:	and	r0, r0, #1
   2dd88:	strb	r0, [sp, #23]
   2dd8c:	b	2de2c <__assert_fail@plt+0x1c6d8>
   2dd90:	ldr	r0, [sp]
   2dd94:	and	r0, r0, #4
   2dd98:	cmp	r0, #0
   2dd9c:	beq	2ddb0 <__assert_fail@plt+0x1c65c>
   2dda0:	ldr	r0, [sp, #8]
   2dda4:	and	r0, r0, #1
   2dda8:	cmp	r0, #0
   2ddac:	beq	2de10 <__assert_fail@plt+0x1c6bc>
   2ddb0:	ldr	r0, [sp]
   2ddb4:	and	r0, r0, #8
   2ddb8:	cmp	r0, #0
   2ddbc:	beq	2ddd0 <__assert_fail@plt+0x1c67c>
   2ddc0:	ldr	r0, [sp, #8]
   2ddc4:	and	r0, r0, #1
   2ddc8:	cmp	r0, #0
   2ddcc:	bne	2de10 <__assert_fail@plt+0x1c6bc>
   2ddd0:	ldr	r0, [sp]
   2ddd4:	and	r0, r0, #32
   2ddd8:	cmp	r0, #0
   2dddc:	beq	2ddf0 <__assert_fail@plt+0x1c69c>
   2dde0:	ldr	r0, [sp, #8]
   2dde4:	and	r0, r0, #2
   2dde8:	cmp	r0, #0
   2ddec:	beq	2de10 <__assert_fail@plt+0x1c6bc>
   2ddf0:	ldr	r0, [sp]
   2ddf4:	and	r0, r0, #128	; 0x80
   2ddf8:	cmp	r0, #0
   2ddfc:	beq	2de20 <__assert_fail@plt+0x1c6cc>
   2de00:	ldr	r0, [sp, #8]
   2de04:	and	r0, r0, #8
   2de08:	cmp	r0, #0
   2de0c:	bne	2de20 <__assert_fail@plt+0x1c6cc>
   2de10:	movw	r0, #0
   2de14:	and	r0, r0, #1
   2de18:	strb	r0, [sp, #23]
   2de1c:	b	2de2c <__assert_fail@plt+0x1c6d8>
   2de20:	movw	r0, #1
   2de24:	and	r0, r0, #1
   2de28:	strb	r0, [sp, #23]
   2de2c:	ldrb	r0, [sp, #23]
   2de30:	and	r0, r0, #1
   2de34:	add	sp, sp, #24
   2de38:	bx	lr
   2de3c:	push	{fp, lr}
   2de40:	mov	fp, sp
   2de44:	sub	sp, sp, #24
   2de48:	ldr	ip, [fp, #8]
   2de4c:	str	r0, [fp, #-4]
   2de50:	str	r1, [fp, #-8]
   2de54:	str	r2, [sp, #12]
   2de58:	str	r3, [sp, #8]
   2de5c:	ldr	r0, [fp, #-8]
   2de60:	ldr	r1, [fp, #-4]
   2de64:	str	r0, [r1]
   2de68:	ldr	r0, [sp, #12]
   2de6c:	ldr	r1, [fp, #-4]
   2de70:	str	r0, [r1, #4]
   2de74:	ldr	r0, [sp, #8]
   2de78:	ldr	r1, [fp, #-4]
   2de7c:	str	r0, [r1, #8]
   2de80:	ldr	r0, [fp, #8]
   2de84:	ldr	r1, [fp, #-4]
   2de88:	str	r0, [r1, #12]
   2de8c:	ldr	r0, [fp, #-4]
   2de90:	add	r0, r0, #16
   2de94:	movw	r1, #0
   2de98:	and	r1, r1, #255	; 0xff
   2de9c:	movw	r2, #12
   2dea0:	str	ip, [sp, #4]
   2dea4:	bl	11658 <memset@plt>
   2dea8:	mov	sp, fp
   2deac:	pop	{fp, pc}
   2deb0:	push	{fp, lr}
   2deb4:	mov	fp, sp
   2deb8:	sub	sp, sp, #40	; 0x28
   2debc:	str	r0, [fp, #-8]
   2dec0:	str	r1, [fp, #-12]
   2dec4:	movw	r0, #0
   2dec8:	str	r0, [sp, #20]
   2decc:	ldr	r1, [fp, #-12]
   2ded0:	ldr	r1, [r1, #12]
   2ded4:	str	r1, [sp, #16]
   2ded8:	ldr	r1, [fp, #-8]
   2dedc:	ldr	r1, [r1, #100]	; 0x64
   2dee0:	cmp	r1, r0
   2dee4:	beq	2df0c <__assert_fail@plt+0x1c7b8>
   2dee8:	ldr	r0, [fp, #-8]
   2deec:	ldr	r0, [r0, #100]	; 0x64
   2def0:	ldr	r1, [sp, #16]
   2def4:	add	r0, r0, r1, lsl #2
   2def8:	ldr	r0, [r0]
   2defc:	movw	r1, #0
   2df00:	cmp	r0, r1
   2df04:	beq	2df0c <__assert_fail@plt+0x1c7b8>
   2df08:	b	2df0c <__assert_fail@plt+0x1c7b8>
   2df0c:	ldr	r0, [fp, #-12]
   2df10:	ldr	r1, [r0, #8]
   2df14:	add	r0, sp, #4
   2df18:	bl	24b7c <__assert_fail@plt+0x13428>
   2df1c:	str	r0, [fp, #-16]
   2df20:	ldr	r0, [fp, #-16]
   2df24:	cmp	r0, #0
   2df28:	beq	2df38 <__assert_fail@plt+0x1c7e4>
   2df2c:	ldr	r0, [fp, #-16]
   2df30:	str	r0, [fp, #-4]
   2df34:	b	2e09c <__assert_fail@plt+0x1c948>
   2df38:	ldr	r0, [fp, #-8]
   2df3c:	ldr	r1, [fp, #-12]
   2df40:	ldr	r2, [sp, #16]
   2df44:	add	r3, sp, #4
   2df48:	bl	2e1f0 <__assert_fail@plt+0x1ca9c>
   2df4c:	str	r0, [fp, #-16]
   2df50:	ldr	r0, [fp, #-16]
   2df54:	cmp	r0, #0
   2df58:	beq	2df60 <__assert_fail@plt+0x1c80c>
   2df5c:	b	2e08c <__assert_fail@plt+0x1c938>
   2df60:	b	2df64 <__assert_fail@plt+0x1c810>
   2df64:	ldr	r0, [sp, #16]
   2df68:	cmp	r0, #0
   2df6c:	ble	2e084 <__assert_fail@plt+0x1c930>
   2df70:	ldr	r0, [fp, #-12]
   2df74:	ldr	r0, [r0]
   2df78:	ldr	r1, [sp, #16]
   2df7c:	add	r0, r0, r1, lsl #2
   2df80:	ldr	r0, [r0]
   2df84:	movw	r1, #0
   2df88:	cmp	r0, r1
   2df8c:	bne	2dfa0 <__assert_fail@plt+0x1c84c>
   2df90:	ldr	r0, [sp, #20]
   2df94:	add	r0, r0, #1
   2df98:	str	r0, [sp]
   2df9c:	b	2dfac <__assert_fail@plt+0x1c858>
   2dfa0:	movw	r0, #0
   2dfa4:	str	r0, [sp]
   2dfa8:	b	2dfac <__assert_fail@plt+0x1c858>
   2dfac:	ldr	r0, [sp]
   2dfb0:	str	r0, [sp, #20]
   2dfb4:	ldr	r0, [sp, #20]
   2dfb8:	ldr	r1, [fp, #-8]
   2dfbc:	ldr	r1, [r1, #120]	; 0x78
   2dfc0:	cmp	r0, r1
   2dfc4:	ble	2dff8 <__assert_fail@plt+0x1c8a4>
   2dfc8:	ldr	r0, [fp, #-12]
   2dfcc:	ldr	r0, [r0]
   2dfd0:	ldr	r1, [sp, #16]
   2dfd4:	lsl	r2, r1, #2
   2dfd8:	movw	r1, #0
   2dfdc:	and	r1, r1, #255	; 0xff
   2dfe0:	bl	11658 <memset@plt>
   2dfe4:	ldr	r0, [sp, #12]
   2dfe8:	bl	1604c <__assert_fail@plt+0x48f8>
   2dfec:	movw	r0, #0
   2dff0:	str	r0, [fp, #-4]
   2dff4:	b	2e09c <__assert_fail@plt+0x1c948>
   2dff8:	mov	r0, #0
   2dffc:	str	r0, [sp, #8]
   2e000:	ldr	r0, [sp, #16]
   2e004:	sub	r0, r0, #1
   2e008:	str	r0, [sp, #16]
   2e00c:	ldr	r0, [fp, #-8]
   2e010:	ldr	r0, [r0, #100]	; 0x64
   2e014:	ldr	r1, [sp, #16]
   2e018:	add	r0, r0, r1, lsl #2
   2e01c:	ldr	r0, [r0]
   2e020:	movw	r1, #0
   2e024:	cmp	r0, r1
   2e028:	beq	2e058 <__assert_fail@plt+0x1c904>
   2e02c:	ldr	r0, [fp, #-8]
   2e030:	ldr	r1, [fp, #-12]
   2e034:	ldr	r2, [sp, #16]
   2e038:	add	r3, sp, #4
   2e03c:	bl	2e3f4 <__assert_fail@plt+0x1cca0>
   2e040:	str	r0, [fp, #-16]
   2e044:	ldr	r0, [fp, #-16]
   2e048:	cmp	r0, #0
   2e04c:	beq	2e054 <__assert_fail@plt+0x1c900>
   2e050:	b	2e08c <__assert_fail@plt+0x1c938>
   2e054:	b	2e058 <__assert_fail@plt+0x1c904>
   2e058:	ldr	r0, [fp, #-8]
   2e05c:	ldr	r1, [fp, #-12]
   2e060:	ldr	r2, [sp, #16]
   2e064:	add	r3, sp, #4
   2e068:	bl	2e1f0 <__assert_fail@plt+0x1ca9c>
   2e06c:	str	r0, [fp, #-16]
   2e070:	ldr	r0, [fp, #-16]
   2e074:	cmp	r0, #0
   2e078:	beq	2e080 <__assert_fail@plt+0x1c92c>
   2e07c:	b	2e08c <__assert_fail@plt+0x1c938>
   2e080:	b	2df64 <__assert_fail@plt+0x1c810>
   2e084:	movw	r0, #0
   2e088:	str	r0, [fp, #-16]
   2e08c:	ldr	r0, [sp, #12]
   2e090:	bl	1604c <__assert_fail@plt+0x48f8>
   2e094:	ldr	r0, [fp, #-16]
   2e098:	str	r0, [fp, #-4]
   2e09c:	ldr	r0, [fp, #-4]
   2e0a0:	mov	sp, fp
   2e0a4:	pop	{fp, pc}
   2e0a8:	push	{fp, lr}
   2e0ac:	mov	fp, sp
   2e0b0:	sub	sp, sp, #48	; 0x30
   2e0b4:	str	r0, [fp, #-8]
   2e0b8:	str	r1, [fp, #-12]
   2e0bc:	str	r2, [fp, #-16]
   2e0c0:	str	r3, [fp, #-20]	; 0xffffffec
   2e0c4:	movw	r0, #0
   2e0c8:	str	r0, [sp, #24]
   2e0cc:	ldr	r0, [sp, #24]
   2e0d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e0d4:	cmp	r0, r1
   2e0d8:	bge	2e1dc <__assert_fail@plt+0x1ca88>
   2e0dc:	ldr	r0, [fp, #-12]
   2e0e0:	ldr	r1, [sp, #24]
   2e0e4:	add	r0, r0, r1, lsl #2
   2e0e8:	ldr	r0, [r0]
   2e0ec:	movw	r1, #0
   2e0f0:	cmp	r0, r1
   2e0f4:	bne	2e114 <__assert_fail@plt+0x1c9c0>
   2e0f8:	ldr	r0, [fp, #-16]
   2e0fc:	ldr	r1, [sp, #24]
   2e100:	ldr	r0, [r0, r1, lsl #2]
   2e104:	ldr	r2, [fp, #-12]
   2e108:	add	r1, r2, r1, lsl #2
   2e10c:	str	r0, [r1]
   2e110:	b	2e1c8 <__assert_fail@plt+0x1ca74>
   2e114:	ldr	r0, [fp, #-16]
   2e118:	ldr	r1, [sp, #24]
   2e11c:	add	r0, r0, r1, lsl #2
   2e120:	ldr	r0, [r0]
   2e124:	movw	r1, #0
   2e128:	cmp	r0, r1
   2e12c:	beq	2e1c4 <__assert_fail@plt+0x1ca70>
   2e130:	ldr	r0, [fp, #-12]
   2e134:	ldr	r1, [sp, #24]
   2e138:	ldr	r0, [r0, r1, lsl #2]
   2e13c:	add	r0, r0, #4
   2e140:	ldr	r2, [fp, #-16]
   2e144:	add	r1, r2, r1, lsl #2
   2e148:	ldr	r1, [r1]
   2e14c:	add	r2, r1, #4
   2e150:	add	r1, sp, #8
   2e154:	str	r0, [sp, #4]
   2e158:	mov	r0, r1
   2e15c:	ldr	r1, [sp, #4]
   2e160:	bl	2a040 <__assert_fail@plt+0x188ec>
   2e164:	str	r0, [sp, #20]
   2e168:	ldr	r0, [sp, #20]
   2e16c:	cmp	r0, #0
   2e170:	beq	2e180 <__assert_fail@plt+0x1ca2c>
   2e174:	ldr	r0, [sp, #20]
   2e178:	str	r0, [fp, #-4]
   2e17c:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e180:	ldr	r1, [fp, #-8]
   2e184:	add	r0, sp, #20
   2e188:	add	r2, sp, #8
   2e18c:	bl	2bc38 <__assert_fail@plt+0x1a4e4>
   2e190:	ldr	r1, [fp, #-12]
   2e194:	ldr	r2, [sp, #24]
   2e198:	add	r1, r1, r2, lsl #2
   2e19c:	str	r0, [r1]
   2e1a0:	ldr	r0, [sp, #16]
   2e1a4:	bl	1604c <__assert_fail@plt+0x48f8>
   2e1a8:	ldr	r0, [sp, #20]
   2e1ac:	cmp	r0, #0
   2e1b0:	beq	2e1c0 <__assert_fail@plt+0x1ca6c>
   2e1b4:	ldr	r0, [sp, #20]
   2e1b8:	str	r0, [fp, #-4]
   2e1bc:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e1c0:	b	2e1c4 <__assert_fail@plt+0x1ca70>
   2e1c4:	b	2e1c8 <__assert_fail@plt+0x1ca74>
   2e1c8:	b	2e1cc <__assert_fail@plt+0x1ca78>
   2e1cc:	ldr	r0, [sp, #24]
   2e1d0:	add	r0, r0, #1
   2e1d4:	str	r0, [sp, #24]
   2e1d8:	b	2e0cc <__assert_fail@plt+0x1c978>
   2e1dc:	movw	r0, #0
   2e1e0:	str	r0, [fp, #-4]
   2e1e4:	ldr	r0, [fp, #-4]
   2e1e8:	mov	sp, fp
   2e1ec:	pop	{fp, pc}
   2e1f0:	push	{fp, lr}
   2e1f4:	mov	fp, sp
   2e1f8:	sub	sp, sp, #48	; 0x30
   2e1fc:	str	r0, [fp, #-8]
   2e200:	str	r1, [fp, #-12]
   2e204:	str	r2, [fp, #-16]
   2e208:	str	r3, [fp, #-20]	; 0xffffffec
   2e20c:	ldr	r0, [fp, #-8]
   2e210:	ldr	r0, [r0, #84]	; 0x54
   2e214:	str	r0, [sp, #24]
   2e218:	mov	r0, #0
   2e21c:	str	r0, [sp, #20]
   2e220:	ldr	r0, [fp, #-8]
   2e224:	ldr	r0, [r0, #100]	; 0x64
   2e228:	ldr	r1, [fp, #-16]
   2e22c:	add	r0, r0, r1, lsl #2
   2e230:	ldr	r0, [r0]
   2e234:	movw	r1, #0
   2e238:	cmp	r0, r1
   2e23c:	bne	2e24c <__assert_fail@plt+0x1caf8>
   2e240:	movw	r0, #0
   2e244:	str	r0, [sp, #12]
   2e248:	b	2e268 <__assert_fail@plt+0x1cb14>
   2e24c:	ldr	r0, [fp, #-8]
   2e250:	ldr	r0, [r0, #100]	; 0x64
   2e254:	ldr	r1, [fp, #-16]
   2e258:	add	r0, r0, r1, lsl #2
   2e25c:	ldr	r0, [r0]
   2e260:	add	r0, r0, #4
   2e264:	str	r0, [sp, #12]
   2e268:	ldr	r0, [sp, #12]
   2e26c:	str	r0, [sp, #16]
   2e270:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e274:	ldr	r0, [r0, #4]
   2e278:	cmp	r0, #0
   2e27c:	bne	2e29c <__assert_fail@plt+0x1cb48>
   2e280:	ldr	r0, [fp, #-12]
   2e284:	ldr	r0, [r0]
   2e288:	ldr	r1, [fp, #-16]
   2e28c:	add	r0, r0, r1, lsl #2
   2e290:	movw	r1, #0
   2e294:	str	r1, [r0]
   2e298:	b	2e378 <__assert_fail@plt+0x1cc24>
   2e29c:	ldr	r0, [sp, #16]
   2e2a0:	movw	r1, #0
   2e2a4:	cmp	r0, r1
   2e2a8:	beq	2e338 <__assert_fail@plt+0x1cbe4>
   2e2ac:	ldr	r0, [sp, #24]
   2e2b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2b4:	ldr	r2, [sp, #16]
   2e2b8:	bl	2e648 <__assert_fail@plt+0x1cef4>
   2e2bc:	str	r0, [sp, #20]
   2e2c0:	ldr	r0, [sp, #20]
   2e2c4:	cmp	r0, #0
   2e2c8:	beq	2e2d8 <__assert_fail@plt+0x1cb84>
   2e2cc:	ldr	r0, [sp, #20]
   2e2d0:	str	r0, [fp, #-4]
   2e2d4:	b	2e3e8 <__assert_fail@plt+0x1cc94>
   2e2d8:	ldr	r0, [fp, #-12]
   2e2dc:	ldr	r0, [r0, #20]
   2e2e0:	cmp	r0, #0
   2e2e4:	beq	2e334 <__assert_fail@plt+0x1cbe0>
   2e2e8:	ldr	r0, [sp, #24]
   2e2ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2f0:	ldr	r2, [sp, #16]
   2e2f4:	ldr	r3, [fp, #-12]
   2e2f8:	add	r3, r3, #16
   2e2fc:	ldr	ip, [fp, #-8]
   2e300:	ldr	ip, [ip, #116]	; 0x74
   2e304:	ldr	lr, [fp, #-16]
   2e308:	str	ip, [sp]
   2e30c:	str	lr, [sp, #4]
   2e310:	bl	2e77c <__assert_fail@plt+0x1d028>
   2e314:	str	r0, [sp, #20]
   2e318:	ldr	r0, [sp, #20]
   2e31c:	cmp	r0, #0
   2e320:	beq	2e330 <__assert_fail@plt+0x1cbdc>
   2e324:	ldr	r0, [sp, #20]
   2e328:	str	r0, [fp, #-4]
   2e32c:	b	2e3e8 <__assert_fail@plt+0x1cc94>
   2e330:	b	2e334 <__assert_fail@plt+0x1cbe0>
   2e334:	b	2e338 <__assert_fail@plt+0x1cbe4>
   2e338:	ldr	r1, [sp, #24]
   2e33c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e340:	add	r0, sp, #20
   2e344:	bl	2bc38 <__assert_fail@plt+0x1a4e4>
   2e348:	ldr	r1, [fp, #-12]
   2e34c:	ldr	r1, [r1]
   2e350:	ldr	r2, [fp, #-16]
   2e354:	add	r1, r1, r2, lsl #2
   2e358:	str	r0, [r1]
   2e35c:	ldr	r0, [sp, #20]
   2e360:	cmp	r0, #0
   2e364:	beq	2e374 <__assert_fail@plt+0x1cc20>
   2e368:	ldr	r0, [sp, #20]
   2e36c:	str	r0, [fp, #-4]
   2e370:	b	2e3e8 <__assert_fail@plt+0x1cc94>
   2e374:	b	2e378 <__assert_fail@plt+0x1cc24>
   2e378:	ldr	r0, [sp, #16]
   2e37c:	movw	r1, #0
   2e380:	cmp	r0, r1
   2e384:	beq	2e3e0 <__assert_fail@plt+0x1cc8c>
   2e388:	ldr	r0, [fp, #-8]
   2e38c:	ldr	r0, [r0, #100]	; 0x64
   2e390:	ldr	r1, [fp, #-16]
   2e394:	ldr	r0, [r0, r1, lsl #2]
   2e398:	ldrb	r0, [r0, #52]	; 0x34
   2e39c:	ubfx	r0, r0, #6, #1
   2e3a0:	and	r0, r0, #255	; 0xff
   2e3a4:	cmp	r0, #0
   2e3a8:	beq	2e3e0 <__assert_fail@plt+0x1cc8c>
   2e3ac:	ldr	r0, [fp, #-8]
   2e3b0:	ldr	r1, [fp, #-12]
   2e3b4:	ldr	r2, [fp, #-16]
   2e3b8:	ldr	r3, [sp, #16]
   2e3bc:	bl	2eb4c <__assert_fail@plt+0x1d3f8>
   2e3c0:	str	r0, [sp, #20]
   2e3c4:	ldr	r0, [sp, #20]
   2e3c8:	cmp	r0, #0
   2e3cc:	beq	2e3dc <__assert_fail@plt+0x1cc88>
   2e3d0:	ldr	r0, [sp, #20]
   2e3d4:	str	r0, [fp, #-4]
   2e3d8:	b	2e3e8 <__assert_fail@plt+0x1cc94>
   2e3dc:	b	2e3e0 <__assert_fail@plt+0x1cc8c>
   2e3e0:	movw	r0, #0
   2e3e4:	str	r0, [fp, #-4]
   2e3e8:	ldr	r0, [fp, #-4]
   2e3ec:	mov	sp, fp
   2e3f0:	pop	{fp, pc}
   2e3f4:	push	{fp, lr}
   2e3f8:	mov	fp, sp
   2e3fc:	sub	sp, sp, #56	; 0x38
   2e400:	str	r0, [fp, #-8]
   2e404:	str	r1, [fp, #-12]
   2e408:	str	r2, [fp, #-16]
   2e40c:	str	r3, [fp, #-20]	; 0xffffffec
   2e410:	ldr	r0, [fp, #-8]
   2e414:	ldr	r0, [r0, #84]	; 0x54
   2e418:	str	r0, [fp, #-24]	; 0xffffffe8
   2e41c:	ldr	r0, [fp, #-8]
   2e420:	ldr	r0, [r0, #100]	; 0x64
   2e424:	ldr	r1, [fp, #-16]
   2e428:	add	r0, r0, r1, lsl #2
   2e42c:	ldr	r0, [r0]
   2e430:	add	r0, r0, #16
   2e434:	str	r0, [sp, #28]
   2e438:	movw	r0, #0
   2e43c:	str	r0, [sp, #24]
   2e440:	ldr	r0, [sp, #24]
   2e444:	ldr	r1, [sp, #28]
   2e448:	ldr	r1, [r1, #4]
   2e44c:	cmp	r0, r1
   2e450:	bge	2e634 <__assert_fail@plt+0x1cee0>
   2e454:	ldr	r0, [sp, #28]
   2e458:	ldr	r0, [r0, #8]
   2e45c:	ldr	r1, [sp, #24]
   2e460:	ldr	r0, [r0, r1, lsl #2]
   2e464:	str	r0, [sp, #20]
   2e468:	mov	r0, #0
   2e46c:	str	r0, [sp, #16]
   2e470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e474:	ldr	r0, [r0]
   2e478:	ldr	r1, [sp, #20]
   2e47c:	add	r0, r0, r1, lsl #3
   2e480:	ldr	r0, [r0, #4]
   2e484:	and	r0, r0, #255	; 0xff
   2e488:	and	r0, r0, #8
   2e48c:	cmp	r0, #0
   2e490:	bne	2e498 <__assert_fail@plt+0x1cd44>
   2e494:	b	2e498 <__assert_fail@plt+0x1cd44>
   2e498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e49c:	ldr	r0, [r0]
   2e4a0:	ldr	r1, [sp, #20]
   2e4a4:	add	r0, r0, r1, lsl #3
   2e4a8:	ldr	r0, [r0, #4]
   2e4ac:	lsr	r0, r0, #20
   2e4b0:	and	r0, r0, #1
   2e4b4:	cmp	r0, #0
   2e4b8:	beq	2e4e0 <__assert_fail@plt+0x1cd8c>
   2e4bc:	ldr	r0, [fp, #-8]
   2e4c0:	ldr	r1, [fp, #-12]
   2e4c4:	ldr	r2, [sp, #20]
   2e4c8:	ldr	r3, [fp, #-16]
   2e4cc:	ldr	ip, [fp, #-12]
   2e4d0:	ldr	ip, [ip, #12]
   2e4d4:	str	ip, [sp]
   2e4d8:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   2e4dc:	str	r0, [sp, #16]
   2e4e0:	ldr	r0, [sp, #16]
   2e4e4:	cmp	r0, #0
   2e4e8:	bne	2e574 <__assert_fail@plt+0x1ce20>
   2e4ec:	ldr	r0, [fp, #-8]
   2e4f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e4f4:	ldr	r1, [r1]
   2e4f8:	ldr	r2, [sp, #20]
   2e4fc:	add	r1, r1, r2, lsl #3
   2e500:	ldr	r2, [fp, #-16]
   2e504:	bl	2c578 <__assert_fail@plt+0x1ae24>
   2e508:	tst	r0, #1
   2e50c:	beq	2e574 <__assert_fail@plt+0x1ce20>
   2e510:	ldr	r0, [fp, #-12]
   2e514:	ldr	r0, [r0]
   2e518:	ldr	r1, [fp, #-16]
   2e51c:	add	r1, r1, #1
   2e520:	add	r0, r0, r1, lsl #2
   2e524:	ldr	r0, [r0]
   2e528:	movw	r1, #0
   2e52c:	cmp	r0, r1
   2e530:	beq	2e574 <__assert_fail@plt+0x1ce20>
   2e534:	ldr	r0, [fp, #-12]
   2e538:	ldr	r0, [r0]
   2e53c:	ldr	r1, [fp, #-16]
   2e540:	add	r0, r0, r1, lsl #2
   2e544:	ldr	r0, [r0, #4]
   2e548:	add	r0, r0, #4
   2e54c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e550:	ldr	r1, [r1, #12]
   2e554:	ldr	r2, [sp, #20]
   2e558:	add	r1, r1, r2, lsl #2
   2e55c:	ldr	r1, [r1]
   2e560:	bl	25f04 <__assert_fail@plt+0x147b0>
   2e564:	cmp	r0, #0
   2e568:	beq	2e574 <__assert_fail@plt+0x1ce20>
   2e56c:	movw	r0, #1
   2e570:	str	r0, [sp, #16]
   2e574:	ldr	r0, [sp, #16]
   2e578:	cmp	r0, #0
   2e57c:	bne	2e584 <__assert_fail@plt+0x1ce30>
   2e580:	b	2e624 <__assert_fail@plt+0x1ced0>
   2e584:	ldr	r0, [fp, #-12]
   2e588:	ldr	r0, [r0, #20]
   2e58c:	cmp	r0, #0
   2e590:	beq	2e5ec <__assert_fail@plt+0x1ce98>
   2e594:	ldr	r0, [fp, #-16]
   2e598:	ldr	r1, [sp, #16]
   2e59c:	add	r0, r0, r1
   2e5a0:	str	r0, [sp, #8]
   2e5a4:	ldr	r0, [fp, #-8]
   2e5a8:	ldr	r1, [fp, #-12]
   2e5ac:	add	r1, r1, #16
   2e5b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e5b4:	ldr	r2, [r2, #12]
   2e5b8:	ldr	r3, [sp, #20]
   2e5bc:	add	r2, r2, r3, lsl #2
   2e5c0:	ldr	r2, [r2]
   2e5c4:	ldr	r3, [sp, #8]
   2e5c8:	ldr	ip, [sp, #20]
   2e5cc:	ldr	lr, [fp, #-16]
   2e5d0:	str	ip, [sp]
   2e5d4:	str	lr, [sp, #4]
   2e5d8:	bl	2f650 <__assert_fail@plt+0x1defc>
   2e5dc:	tst	r0, #1
   2e5e0:	beq	2e5e8 <__assert_fail@plt+0x1ce94>
   2e5e4:	b	2e624 <__assert_fail@plt+0x1ced0>
   2e5e8:	b	2e5ec <__assert_fail@plt+0x1ce98>
   2e5ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e5f0:	ldr	r1, [sp, #20]
   2e5f4:	bl	25a48 <__assert_fail@plt+0x142f4>
   2e5f8:	and	r0, r0, #1
   2e5fc:	strb	r0, [sp, #15]
   2e600:	ldrb	r0, [sp, #15]
   2e604:	mvn	r1, #0
   2e608:	eor	r0, r0, r1
   2e60c:	tst	r0, #1
   2e610:	beq	2e620 <__assert_fail@plt+0x1cecc>
   2e614:	movw	r0, #12
   2e618:	str	r0, [fp, #-4]
   2e61c:	b	2e63c <__assert_fail@plt+0x1cee8>
   2e620:	b	2e624 <__assert_fail@plt+0x1ced0>
   2e624:	ldr	r0, [sp, #24]
   2e628:	add	r0, r0, #1
   2e62c:	str	r0, [sp, #24]
   2e630:	b	2e440 <__assert_fail@plt+0x1ccec>
   2e634:	movw	r0, #0
   2e638:	str	r0, [fp, #-4]
   2e63c:	ldr	r0, [fp, #-4]
   2e640:	mov	sp, fp
   2e644:	pop	{fp, pc}
   2e648:	push	{fp, lr}
   2e64c:	mov	fp, sp
   2e650:	sub	sp, sp, #32
   2e654:	str	r0, [fp, #-8]
   2e658:	str	r1, [fp, #-12]
   2e65c:	str	r2, [sp, #16]
   2e660:	movw	r0, #0
   2e664:	str	r0, [sp, #12]
   2e668:	ldr	r1, [fp, #-8]
   2e66c:	ldr	r2, [fp, #-12]
   2e670:	add	r0, sp, #12
   2e674:	bl	2bc38 <__assert_fail@plt+0x1a4e4>
   2e678:	str	r0, [sp, #4]
   2e67c:	ldr	r0, [sp, #12]
   2e680:	cmp	r0, #0
   2e684:	beq	2e694 <__assert_fail@plt+0x1cf40>
   2e688:	ldr	r0, [sp, #12]
   2e68c:	str	r0, [fp, #-4]
   2e690:	b	2e770 <__assert_fail@plt+0x1d01c>
   2e694:	ldr	r0, [sp, #4]
   2e698:	ldr	r0, [r0, #28]
   2e69c:	cmp	r0, #0
   2e6a0:	bne	2e758 <__assert_fail@plt+0x1d004>
   2e6a4:	ldr	r0, [sp, #4]
   2e6a8:	add	r0, r0, #28
   2e6ac:	ldr	r1, [fp, #-12]
   2e6b0:	ldr	r1, [r1, #4]
   2e6b4:	bl	24fe0 <__assert_fail@plt+0x1388c>
   2e6b8:	str	r0, [sp, #12]
   2e6bc:	ldr	r0, [sp, #12]
   2e6c0:	cmp	r0, #0
   2e6c4:	beq	2e6d4 <__assert_fail@plt+0x1cf80>
   2e6c8:	movw	r0, #12
   2e6cc:	str	r0, [fp, #-4]
   2e6d0:	b	2e770 <__assert_fail@plt+0x1d01c>
   2e6d4:	movw	r0, #0
   2e6d8:	str	r0, [sp, #8]
   2e6dc:	ldr	r0, [sp, #8]
   2e6e0:	ldr	r1, [fp, #-12]
   2e6e4:	ldr	r1, [r1, #4]
   2e6e8:	cmp	r0, r1
   2e6ec:	bge	2e754 <__assert_fail@plt+0x1d000>
   2e6f0:	ldr	r0, [sp, #4]
   2e6f4:	add	r0, r0, #28
   2e6f8:	ldr	r1, [fp, #-8]
   2e6fc:	ldr	r1, [r1, #28]
   2e700:	ldr	r2, [fp, #-12]
   2e704:	ldr	r2, [r2, #8]
   2e708:	ldr	r3, [sp, #8]
   2e70c:	add	r2, r2, r3, lsl #2
   2e710:	ldr	r2, [r2]
   2e714:	movw	r3, #12
   2e718:	mul	r2, r2, r3
   2e71c:	add	r1, r1, r2
   2e720:	bl	2555c <__assert_fail@plt+0x13e08>
   2e724:	str	r0, [sp, #12]
   2e728:	ldr	r0, [sp, #12]
   2e72c:	cmp	r0, #0
   2e730:	beq	2e740 <__assert_fail@plt+0x1cfec>
   2e734:	movw	r0, #12
   2e738:	str	r0, [fp, #-4]
   2e73c:	b	2e770 <__assert_fail@plt+0x1d01c>
   2e740:	b	2e744 <__assert_fail@plt+0x1cff0>
   2e744:	ldr	r0, [sp, #8]
   2e748:	add	r0, r0, #1
   2e74c:	str	r0, [sp, #8]
   2e750:	b	2e6dc <__assert_fail@plt+0x1cf88>
   2e754:	b	2e758 <__assert_fail@plt+0x1d004>
   2e758:	ldr	r0, [fp, #-12]
   2e75c:	ldr	r1, [sp, #16]
   2e760:	ldr	r2, [sp, #4]
   2e764:	add	r2, r2, #28
   2e768:	bl	2ef7c <__assert_fail@plt+0x1d828>
   2e76c:	str	r0, [fp, #-4]
   2e770:	ldr	r0, [fp, #-4]
   2e774:	mov	sp, fp
   2e778:	pop	{fp, pc}
   2e77c:	push	{fp, lr}
   2e780:	mov	fp, sp
   2e784:	sub	sp, sp, #80	; 0x50
   2e788:	ldr	ip, [fp, #12]
   2e78c:	ldr	lr, [fp, #8]
   2e790:	str	r0, [fp, #-8]
   2e794:	str	r1, [fp, #-12]
   2e798:	str	r2, [fp, #-16]
   2e79c:	str	r3, [fp, #-20]	; 0xffffffec
   2e7a0:	movw	r0, #0
   2e7a4:	str	r0, [fp, #-32]	; 0xffffffe0
   2e7a8:	str	lr, [sp, #8]
   2e7ac:	str	ip, [sp, #4]
   2e7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e7b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e7b8:	ldr	r1, [r1, #4]
   2e7bc:	cmp	r0, r1
   2e7c0:	bge	2eb38 <__assert_fail@plt+0x1d3e4>
   2e7c4:	ldr	r0, [fp, #8]
   2e7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e7cc:	ldr	r1, [r1, #8]
   2e7d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e7d4:	add	r1, r1, r2, lsl #2
   2e7d8:	ldr	r1, [r1]
   2e7dc:	movw	r2, #24
   2e7e0:	mul	r1, r1, r2
   2e7e4:	add	r0, r0, r1
   2e7e8:	str	r0, [sp, #40]	; 0x28
   2e7ec:	ldr	r0, [fp, #12]
   2e7f0:	ldr	r1, [sp, #40]	; 0x28
   2e7f4:	ldr	r1, [r1, #8]
   2e7f8:	cmp	r0, r1
   2e7fc:	ble	2e814 <__assert_fail@plt+0x1d0c0>
   2e800:	ldr	r0, [sp, #40]	; 0x28
   2e804:	ldr	r0, [r0, #4]
   2e808:	ldr	r1, [fp, #12]
   2e80c:	cmp	r0, r1
   2e810:	bge	2e818 <__assert_fail@plt+0x1d0c4>
   2e814:	b	2eb28 <__assert_fail@plt+0x1d3d4>
   2e818:	ldr	r0, [fp, #-8]
   2e81c:	ldr	r0, [r0]
   2e820:	ldr	r1, [sp, #40]	; 0x28
   2e824:	ldr	r1, [r1]
   2e828:	add	r0, r0, r1, lsl #3
   2e82c:	ldr	r0, [r0]
   2e830:	str	r0, [fp, #-36]	; 0xffffffdc
   2e834:	ldr	r0, [sp, #40]	; 0x28
   2e838:	ldr	r0, [r0, #12]
   2e83c:	ldr	r1, [fp, #12]
   2e840:	cmp	r0, r1
   2e844:	bne	2ea50 <__assert_fail@plt+0x1d2fc>
   2e848:	mvn	r0, #0
   2e84c:	str	r0, [sp, #36]	; 0x24
   2e850:	str	r0, [sp, #32]
   2e854:	movw	r0, #0
   2e858:	str	r0, [fp, #-28]	; 0xffffffe4
   2e85c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e860:	ldr	r1, [fp, #-12]
   2e864:	ldr	r1, [r1, #4]
   2e868:	cmp	r0, r1
   2e86c:	bge	2e924 <__assert_fail@plt+0x1d1d0>
   2e870:	ldr	r0, [fp, #-12]
   2e874:	ldr	r0, [r0, #8]
   2e878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e87c:	ldr	r0, [r0, r1, lsl #2]
   2e880:	str	r0, [sp, #28]
   2e884:	ldr	r0, [fp, #-8]
   2e888:	ldr	r0, [r0]
   2e88c:	ldr	r1, [sp, #28]
   2e890:	add	r0, r0, r1, lsl #3
   2e894:	ldr	r0, [r0, #4]
   2e898:	and	r0, r0, #255	; 0xff
   2e89c:	str	r0, [sp, #24]
   2e8a0:	ldr	r0, [sp, #24]
   2e8a4:	cmp	r0, #8
   2e8a8:	bne	2e8d8 <__assert_fail@plt+0x1d184>
   2e8ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e8b0:	ldr	r1, [fp, #-8]
   2e8b4:	ldr	r1, [r1]
   2e8b8:	ldr	r2, [sp, #28]
   2e8bc:	add	r1, r1, r2, lsl #3
   2e8c0:	ldr	r1, [r1]
   2e8c4:	cmp	r0, r1
   2e8c8:	bne	2e8d8 <__assert_fail@plt+0x1d184>
   2e8cc:	ldr	r0, [sp, #28]
   2e8d0:	str	r0, [sp, #36]	; 0x24
   2e8d4:	b	2e910 <__assert_fail@plt+0x1d1bc>
   2e8d8:	ldr	r0, [sp, #24]
   2e8dc:	cmp	r0, #9
   2e8e0:	bne	2e90c <__assert_fail@plt+0x1d1b8>
   2e8e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e8e8:	ldr	r1, [fp, #-8]
   2e8ec:	ldr	r1, [r1]
   2e8f0:	ldr	r2, [sp, #28]
   2e8f4:	add	r1, r1, r2, lsl #3
   2e8f8:	ldr	r1, [r1]
   2e8fc:	cmp	r0, r1
   2e900:	bne	2e90c <__assert_fail@plt+0x1d1b8>
   2e904:	ldr	r0, [sp, #28]
   2e908:	str	r0, [sp, #32]
   2e90c:	b	2e910 <__assert_fail@plt+0x1d1bc>
   2e910:	b	2e914 <__assert_fail@plt+0x1d1c0>
   2e914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e918:	add	r0, r0, #1
   2e91c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e920:	b	2e85c <__assert_fail@plt+0x1d108>
   2e924:	ldr	r0, [sp, #36]	; 0x24
   2e928:	cmp	r0, #0
   2e92c:	blt	2e964 <__assert_fail@plt+0x1d210>
   2e930:	ldr	r0, [fp, #-8]
   2e934:	ldr	r1, [sp, #36]	; 0x24
   2e938:	ldr	r2, [fp, #-12]
   2e93c:	ldr	r3, [fp, #-16]
   2e940:	bl	2f3c4 <__assert_fail@plt+0x1dc70>
   2e944:	str	r0, [fp, #-24]	; 0xffffffe8
   2e948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e94c:	cmp	r0, #0
   2e950:	beq	2e960 <__assert_fail@plt+0x1d20c>
   2e954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e958:	str	r0, [fp, #-4]
   2e95c:	b	2eb40 <__assert_fail@plt+0x1d3ec>
   2e960:	b	2e964 <__assert_fail@plt+0x1d210>
   2e964:	ldr	r0, [sp, #32]
   2e968:	cmp	r0, #0
   2e96c:	blt	2ea4c <__assert_fail@plt+0x1d2f8>
   2e970:	movw	r0, #0
   2e974:	str	r0, [fp, #-28]	; 0xffffffe4
   2e978:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e97c:	ldr	r1, [fp, #-12]
   2e980:	ldr	r1, [r1, #4]
   2e984:	cmp	r0, r1
   2e988:	bge	2ea48 <__assert_fail@plt+0x1d2f4>
   2e98c:	ldr	r0, [fp, #-12]
   2e990:	ldr	r0, [r0, #8]
   2e994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e998:	add	r0, r0, r1, lsl #2
   2e99c:	ldr	r0, [r0]
   2e9a0:	str	r0, [sp, #20]
   2e9a4:	ldr	r0, [fp, #-8]
   2e9a8:	ldr	r0, [r0, #28]
   2e9ac:	ldr	r1, [sp, #20]
   2e9b0:	movw	r2, #12
   2e9b4:	mul	r1, r1, r2
   2e9b8:	add	r0, r0, r1
   2e9bc:	ldr	r1, [sp, #32]
   2e9c0:	bl	25f04 <__assert_fail@plt+0x147b0>
   2e9c4:	cmp	r0, #0
   2e9c8:	bne	2ea34 <__assert_fail@plt+0x1d2e0>
   2e9cc:	ldr	r0, [fp, #-8]
   2e9d0:	ldr	r0, [r0, #24]
   2e9d4:	ldr	r1, [sp, #20]
   2e9d8:	movw	r2, #12
   2e9dc:	mul	r1, r1, r2
   2e9e0:	add	r0, r0, r1
   2e9e4:	ldr	r1, [sp, #32]
   2e9e8:	bl	25f04 <__assert_fail@plt+0x147b0>
   2e9ec:	cmp	r0, #0
   2e9f0:	bne	2ea34 <__assert_fail@plt+0x1d2e0>
   2e9f4:	ldr	r0, [fp, #-8]
   2e9f8:	ldr	r1, [sp, #20]
   2e9fc:	ldr	r2, [fp, #-12]
   2ea00:	ldr	r3, [fp, #-16]
   2ea04:	bl	2f3c4 <__assert_fail@plt+0x1dc70>
   2ea08:	str	r0, [fp, #-24]	; 0xffffffe8
   2ea0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea10:	cmp	r0, #0
   2ea14:	beq	2ea24 <__assert_fail@plt+0x1d2d0>
   2ea18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea1c:	str	r0, [fp, #-4]
   2ea20:	b	2eb40 <__assert_fail@plt+0x1d3ec>
   2ea24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ea28:	mvn	r1, #0
   2ea2c:	add	r0, r0, r1
   2ea30:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea34:	b	2ea38 <__assert_fail@plt+0x1d2e4>
   2ea38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ea3c:	add	r0, r0, #1
   2ea40:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea44:	b	2e978 <__assert_fail@plt+0x1d224>
   2ea48:	b	2ea4c <__assert_fail@plt+0x1d2f8>
   2ea4c:	b	2eb24 <__assert_fail@plt+0x1d3d0>
   2ea50:	movw	r0, #0
   2ea54:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ea5c:	ldr	r1, [fp, #-12]
   2ea60:	ldr	r1, [r1, #4]
   2ea64:	cmp	r0, r1
   2ea68:	bge	2eb20 <__assert_fail@plt+0x1d3cc>
   2ea6c:	ldr	r0, [fp, #-12]
   2ea70:	ldr	r0, [r0, #8]
   2ea74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ea78:	ldr	r0, [r0, r1, lsl #2]
   2ea7c:	str	r0, [sp, #16]
   2ea80:	ldr	r0, [fp, #-8]
   2ea84:	ldr	r0, [r0]
   2ea88:	ldr	r1, [sp, #16]
   2ea8c:	add	r0, r0, r1, lsl #3
   2ea90:	ldr	r0, [r0, #4]
   2ea94:	and	r0, r0, #255	; 0xff
   2ea98:	str	r0, [sp, #12]
   2ea9c:	ldr	r0, [sp, #12]
   2eaa0:	cmp	r0, #9
   2eaa4:	beq	2eab4 <__assert_fail@plt+0x1d360>
   2eaa8:	ldr	r0, [sp, #12]
   2eaac:	cmp	r0, #8
   2eab0:	bne	2eb0c <__assert_fail@plt+0x1d3b8>
   2eab4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2eab8:	ldr	r1, [fp, #-8]
   2eabc:	ldr	r1, [r1]
   2eac0:	ldr	r2, [sp, #16]
   2eac4:	add	r1, r1, r2, lsl #3
   2eac8:	ldr	r1, [r1]
   2eacc:	cmp	r0, r1
   2ead0:	beq	2ead8 <__assert_fail@plt+0x1d384>
   2ead4:	b	2eb10 <__assert_fail@plt+0x1d3bc>
   2ead8:	ldr	r0, [fp, #-8]
   2eadc:	ldr	r1, [sp, #16]
   2eae0:	ldr	r2, [fp, #-12]
   2eae4:	ldr	r3, [fp, #-16]
   2eae8:	bl	2f3c4 <__assert_fail@plt+0x1dc70>
   2eaec:	str	r0, [fp, #-24]	; 0xffffffe8
   2eaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eaf4:	cmp	r0, #0
   2eaf8:	beq	2eb08 <__assert_fail@plt+0x1d3b4>
   2eafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb00:	str	r0, [fp, #-4]
   2eb04:	b	2eb40 <__assert_fail@plt+0x1d3ec>
   2eb08:	b	2eb0c <__assert_fail@plt+0x1d3b8>
   2eb0c:	b	2eb10 <__assert_fail@plt+0x1d3bc>
   2eb10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2eb14:	add	r0, r0, #1
   2eb18:	str	r0, [fp, #-28]	; 0xffffffe4
   2eb1c:	b	2ea58 <__assert_fail@plt+0x1d304>
   2eb20:	b	2eb24 <__assert_fail@plt+0x1d3d0>
   2eb24:	b	2eb28 <__assert_fail@plt+0x1d3d4>
   2eb28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eb2c:	add	r0, r0, #1
   2eb30:	str	r0, [fp, #-32]	; 0xffffffe0
   2eb34:	b	2e7b0 <__assert_fail@plt+0x1d05c>
   2eb38:	movw	r0, #0
   2eb3c:	str	r0, [fp, #-4]
   2eb40:	ldr	r0, [fp, #-4]
   2eb44:	mov	sp, fp
   2eb48:	pop	{fp, pc}
   2eb4c:	push	{fp, lr}
   2eb50:	mov	fp, sp
   2eb54:	sub	sp, sp, #128	; 0x80
   2eb58:	str	r0, [fp, #-8]
   2eb5c:	str	r1, [fp, #-12]
   2eb60:	str	r2, [fp, #-16]
   2eb64:	str	r3, [fp, #-20]	; 0xffffffec
   2eb68:	ldr	r0, [fp, #-8]
   2eb6c:	ldr	r0, [r0, #84]	; 0x54
   2eb70:	str	r0, [fp, #-24]	; 0xffffffe8
   2eb74:	ldr	r0, [fp, #-8]
   2eb78:	ldr	r1, [fp, #-16]
   2eb7c:	bl	2a38c <__assert_fail@plt+0x18c38>
   2eb80:	str	r0, [sp, #60]	; 0x3c
   2eb84:	ldr	r0, [sp, #60]	; 0x3c
   2eb88:	cmn	r0, #1
   2eb8c:	bne	2eb9c <__assert_fail@plt+0x1d448>
   2eb90:	movw	r0, #0
   2eb94:	str	r0, [fp, #-4]
   2eb98:	b	2ef70 <__assert_fail@plt+0x1d81c>
   2eb9c:	movw	r0, #0
   2eba0:	str	r0, [sp, #64]	; 0x40
   2eba4:	str	r0, [fp, #-32]	; 0xffffffe0
   2eba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ebac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ebb0:	ldr	r1, [r1, #4]
   2ebb4:	cmp	r0, r1
   2ebb8:	bge	2ef48 <__assert_fail@plt+0x1d7f4>
   2ebbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ebc0:	ldr	r0, [r0, #8]
   2ebc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ebc8:	ldr	r0, [r0, r1, lsl #2]
   2ebcc:	str	r0, [fp, #-36]	; 0xffffffdc
   2ebd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebd4:	ldr	r0, [r0]
   2ebd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ebdc:	add	r0, r0, r1, lsl #3
   2ebe0:	ldr	r0, [r0, #4]
   2ebe4:	and	r0, r0, #255	; 0xff
   2ebe8:	str	r0, [sp, #52]	; 0x34
   2ebec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ebf0:	ldr	r1, [fp, #-12]
   2ebf4:	ldr	r1, [r1, #8]
   2ebf8:	cmp	r0, r1
   2ebfc:	bne	2ec18 <__assert_fail@plt+0x1d4c4>
   2ec00:	ldr	r0, [fp, #-16]
   2ec04:	ldr	r1, [fp, #-12]
   2ec08:	ldr	r1, [r1, #12]
   2ec0c:	cmp	r0, r1
   2ec10:	bne	2ec18 <__assert_fail@plt+0x1d4c4>
   2ec14:	b	2ef38 <__assert_fail@plt+0x1d7e4>
   2ec18:	ldr	r0, [sp, #52]	; 0x34
   2ec1c:	cmp	r0, #4
   2ec20:	beq	2ec28 <__assert_fail@plt+0x1d4d4>
   2ec24:	b	2ef38 <__assert_fail@plt+0x1d7e4>
   2ec28:	ldr	r0, [fp, #-8]
   2ec2c:	ldr	r0, [r0, #116]	; 0x74
   2ec30:	ldr	r1, [sp, #60]	; 0x3c
   2ec34:	movw	r2, #24
   2ec38:	mul	r1, r1, r2
   2ec3c:	add	r0, r0, r1
   2ec40:	str	r0, [sp, #48]	; 0x30
   2ec44:	ldr	r0, [sp, #60]	; 0x3c
   2ec48:	str	r0, [sp, #56]	; 0x38
   2ec4c:	ldr	r0, [sp, #48]	; 0x30
   2ec50:	ldr	r0, [r0]
   2ec54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ec58:	cmp	r0, r1
   2ec5c:	beq	2ec64 <__assert_fail@plt+0x1d510>
   2ec60:	b	2ef10 <__assert_fail@plt+0x1d7bc>
   2ec64:	ldr	r0, [sp, #48]	; 0x30
   2ec68:	ldr	r0, [r0, #12]
   2ec6c:	ldr	r1, [sp, #48]	; 0x30
   2ec70:	ldr	r1, [r1, #8]
   2ec74:	sub	r0, r0, r1
   2ec78:	str	r0, [sp, #44]	; 0x2c
   2ec7c:	ldr	r0, [fp, #-16]
   2ec80:	ldr	r1, [sp, #44]	; 0x2c
   2ec84:	add	r0, r0, r1
   2ec88:	str	r0, [sp, #40]	; 0x28
   2ec8c:	ldr	r0, [sp, #44]	; 0x2c
   2ec90:	cmp	r0, #0
   2ec94:	beq	2ecb4 <__assert_fail@plt+0x1d560>
   2ec98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec9c:	ldr	r0, [r0, #12]
   2eca0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eca4:	add	r0, r0, r1, lsl #2
   2eca8:	ldr	r0, [r0]
   2ecac:	str	r0, [sp, #24]
   2ecb0:	b	2ecd8 <__assert_fail@plt+0x1d584>
   2ecb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecb8:	ldr	r0, [r0, #20]
   2ecbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ecc0:	movw	r2, #12
   2ecc4:	mul	r1, r1, r2
   2ecc8:	add	r0, r0, r1
   2eccc:	ldr	r0, [r0, #8]
   2ecd0:	ldr	r0, [r0]
   2ecd4:	str	r0, [sp, #24]
   2ecd8:	ldr	r0, [sp, #24]
   2ecdc:	str	r0, [sp, #36]	; 0x24
   2ece0:	ldr	r0, [sp, #40]	; 0x28
   2ece4:	ldr	r1, [fp, #-12]
   2ece8:	ldr	r1, [r1, #12]
   2ecec:	cmp	r0, r1
   2ecf0:	bgt	2ed8c <__assert_fail@plt+0x1d638>
   2ecf4:	ldr	r0, [fp, #-12]
   2ecf8:	ldr	r0, [r0]
   2ecfc:	ldr	r1, [sp, #40]	; 0x28
   2ed00:	add	r0, r0, r1, lsl #2
   2ed04:	ldr	r0, [r0]
   2ed08:	movw	r1, #0
   2ed0c:	cmp	r0, r1
   2ed10:	beq	2ed8c <__assert_fail@plt+0x1d638>
   2ed14:	ldr	r0, [fp, #-12]
   2ed18:	ldr	r0, [r0]
   2ed1c:	ldr	r1, [sp, #40]	; 0x28
   2ed20:	add	r0, r0, r1, lsl #2
   2ed24:	ldr	r0, [r0]
   2ed28:	movw	r1, #0
   2ed2c:	cmp	r0, r1
   2ed30:	beq	2ed8c <__assert_fail@plt+0x1d638>
   2ed34:	ldr	r0, [fp, #-12]
   2ed38:	ldr	r0, [r0]
   2ed3c:	ldr	r1, [sp, #40]	; 0x28
   2ed40:	add	r0, r0, r1, lsl #2
   2ed44:	ldr	r0, [r0]
   2ed48:	add	r0, r0, #4
   2ed4c:	ldr	r1, [sp, #36]	; 0x24
   2ed50:	bl	25f04 <__assert_fail@plt+0x147b0>
   2ed54:	cmp	r0, #0
   2ed58:	beq	2ed8c <__assert_fail@plt+0x1d638>
   2ed5c:	ldr	r0, [fp, #-8]
   2ed60:	ldr	r1, [fp, #-12]
   2ed64:	add	r1, r1, #16
   2ed68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ed6c:	ldr	r3, [fp, #-16]
   2ed70:	ldr	ip, [sp, #36]	; 0x24
   2ed74:	ldr	lr, [sp, #40]	; 0x28
   2ed78:	str	ip, [sp]
   2ed7c:	str	lr, [sp, #4]
   2ed80:	bl	2f650 <__assert_fail@plt+0x1defc>
   2ed84:	tst	r0, #1
   2ed88:	beq	2ed90 <__assert_fail@plt+0x1d63c>
   2ed8c:	b	2ef10 <__assert_fail@plt+0x1d7bc>
   2ed90:	ldr	r0, [sp, #64]	; 0x40
   2ed94:	movw	r1, #0
   2ed98:	cmp	r0, r1
   2ed9c:	bne	2edf4 <__assert_fail@plt+0x1d6a0>
   2eda0:	ldr	r0, [fp, #-12]
   2eda4:	add	r1, sp, #64	; 0x40
   2eda8:	mov	r2, r1
   2edac:	str	r0, [sp, #20]
   2edb0:	mov	r0, r2
   2edb4:	ldr	r2, [sp, #20]
   2edb8:	str	r1, [sp, #16]
   2edbc:	mov	r1, r2
   2edc0:	movw	r2, #28
   2edc4:	bl	11478 <memcpy@plt>
   2edc8:	ldr	r0, [sp, #16]
   2edcc:	add	r0, r0, #16
   2edd0:	ldr	r1, [fp, #-12]
   2edd4:	add	r1, r1, #16
   2edd8:	bl	25e30 <__assert_fail@plt+0x146dc>
   2eddc:	str	r0, [fp, #-28]	; 0xffffffe4
   2ede0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ede4:	cmp	r0, #0
   2ede8:	beq	2edf0 <__assert_fail@plt+0x1d69c>
   2edec:	b	2ef50 <__assert_fail@plt+0x1d7fc>
   2edf0:	b	2edf4 <__assert_fail@plt+0x1d6a0>
   2edf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2edf8:	str	r0, [sp, #72]	; 0x48
   2edfc:	ldr	r0, [fp, #-16]
   2ee00:	str	r0, [sp, #76]	; 0x4c
   2ee04:	add	r0, sp, #64	; 0x40
   2ee08:	add	r0, r0, #16
   2ee0c:	ldr	r1, [sp, #56]	; 0x38
   2ee10:	bl	25a48 <__assert_fail@plt+0x142f4>
   2ee14:	and	r0, r0, #1
   2ee18:	strb	r0, [sp, #35]	; 0x23
   2ee1c:	ldrb	r0, [sp, #35]	; 0x23
   2ee20:	mvn	r1, #0
   2ee24:	eor	r0, r0, r1
   2ee28:	tst	r0, #1
   2ee2c:	beq	2ee3c <__assert_fail@plt+0x1d6e8>
   2ee30:	movw	r0, #12
   2ee34:	str	r0, [fp, #-28]	; 0xffffffe4
   2ee38:	b	2ef50 <__assert_fail@plt+0x1d7fc>
   2ee3c:	ldr	r0, [sp, #64]	; 0x40
   2ee40:	ldr	r1, [fp, #-16]
   2ee44:	add	r0, r0, r1, lsl #2
   2ee48:	ldr	r0, [r0]
   2ee4c:	str	r0, [sp, #28]
   2ee50:	ldr	r0, [fp, #-8]
   2ee54:	add	r1, sp, #64	; 0x40
   2ee58:	bl	2deb0 <__assert_fail@plt+0x1c75c>
   2ee5c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ee60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ee64:	cmp	r0, #0
   2ee68:	beq	2ee70 <__assert_fail@plt+0x1d71c>
   2ee6c:	b	2ef50 <__assert_fail@plt+0x1d7fc>
   2ee70:	ldr	r0, [fp, #-12]
   2ee74:	ldr	r0, [r0, #4]
   2ee78:	movw	r1, #0
   2ee7c:	cmp	r0, r1
   2ee80:	beq	2eeb8 <__assert_fail@plt+0x1d764>
   2ee84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee88:	ldr	r1, [fp, #-12]
   2ee8c:	ldr	r1, [r1, #4]
   2ee90:	ldr	r2, [sp, #64]	; 0x40
   2ee94:	ldr	r3, [fp, #-16]
   2ee98:	add	r3, r3, #1
   2ee9c:	bl	2e0a8 <__assert_fail@plt+0x1c954>
   2eea0:	str	r0, [fp, #-28]	; 0xffffffe4
   2eea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2eea8:	cmp	r0, #0
   2eeac:	beq	2eeb4 <__assert_fail@plt+0x1d760>
   2eeb0:	b	2ef50 <__assert_fail@plt+0x1d7fc>
   2eeb4:	b	2eeb8 <__assert_fail@plt+0x1d764>
   2eeb8:	ldr	r0, [sp, #28]
   2eebc:	ldr	r1, [sp, #64]	; 0x40
   2eec0:	ldr	r2, [fp, #-16]
   2eec4:	add	r1, r1, r2, lsl #2
   2eec8:	str	r0, [r1]
   2eecc:	add	r0, sp, #64	; 0x40
   2eed0:	add	r1, r0, #16
   2eed4:	add	r0, r0, #16
   2eed8:	ldr	r2, [sp, #56]	; 0x38
   2eedc:	str	r1, [sp, #12]
   2eee0:	mov	r1, r2
   2eee4:	bl	25f04 <__assert_fail@plt+0x147b0>
   2eee8:	sub	r1, r0, #1
   2eeec:	ldr	r0, [sp, #12]
   2eef0:	bl	265f0 <__assert_fail@plt+0x14e9c>
   2eef4:	ldr	r0, [fp, #-8]
   2eef8:	ldr	r0, [r0, #116]	; 0x74
   2eefc:	ldr	r1, [sp, #56]	; 0x38
   2ef00:	movw	r2, #24
   2ef04:	mul	r1, r1, r2
   2ef08:	add	r0, r0, r1
   2ef0c:	str	r0, [sp, #48]	; 0x30
   2ef10:	ldr	r0, [sp, #56]	; 0x38
   2ef14:	add	r0, r0, #1
   2ef18:	str	r0, [sp, #56]	; 0x38
   2ef1c:	ldr	r0, [sp, #48]	; 0x30
   2ef20:	add	r1, r0, #24
   2ef24:	str	r1, [sp, #48]	; 0x30
   2ef28:	ldrsb	r0, [r0, #20]
   2ef2c:	cmp	r0, #0
   2ef30:	bne	2ec4c <__assert_fail@plt+0x1d4f8>
   2ef34:	b	2ef38 <__assert_fail@plt+0x1d7e4>
   2ef38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ef3c:	add	r0, r0, #1
   2ef40:	str	r0, [fp, #-32]	; 0xffffffe0
   2ef44:	b	2eba8 <__assert_fail@plt+0x1d454>
   2ef48:	movw	r0, #0
   2ef4c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef50:	ldr	r0, [sp, #64]	; 0x40
   2ef54:	movw	r1, #0
   2ef58:	cmp	r0, r1
   2ef5c:	beq	2ef68 <__assert_fail@plt+0x1d814>
   2ef60:	ldr	r0, [sp, #88]	; 0x58
   2ef64:	bl	1604c <__assert_fail@plt+0x48f8>
   2ef68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ef6c:	str	r0, [fp, #-4]
   2ef70:	ldr	r0, [fp, #-4]
   2ef74:	mov	sp, fp
   2ef78:	pop	{fp, pc}
   2ef7c:	push	{fp, lr}
   2ef80:	mov	fp, sp
   2ef84:	sub	sp, sp, #56	; 0x38
   2ef88:	str	r0, [fp, #-8]
   2ef8c:	str	r1, [fp, #-12]
   2ef90:	str	r2, [fp, #-16]
   2ef94:	ldr	r0, [fp, #-12]
   2ef98:	ldr	r0, [r0, #4]
   2ef9c:	cmp	r0, #0
   2efa0:	beq	2efb4 <__assert_fail@plt+0x1d860>
   2efa4:	ldr	r0, [fp, #-16]
   2efa8:	ldr	r0, [r0, #4]
   2efac:	cmp	r0, #0
   2efb0:	bne	2efc0 <__assert_fail@plt+0x1d86c>
   2efb4:	movw	r0, #0
   2efb8:	str	r0, [fp, #-4]
   2efbc:	b	2f3b8 <__assert_fail@plt+0x1dc64>
   2efc0:	ldr	r0, [fp, #-12]
   2efc4:	ldr	r0, [r0, #4]
   2efc8:	ldr	r1, [fp, #-16]
   2efcc:	ldr	r1, [r1, #4]
   2efd0:	add	r0, r0, r1
   2efd4:	ldr	r1, [fp, #-8]
   2efd8:	ldr	r1, [r1, #4]
   2efdc:	add	r0, r0, r1
   2efe0:	ldr	r1, [fp, #-8]
   2efe4:	ldr	r1, [r1]
   2efe8:	cmp	r0, r1
   2efec:	ble	2f060 <__assert_fail@plt+0x1d90c>
   2eff0:	ldr	r0, [fp, #-12]
   2eff4:	ldr	r0, [r0, #4]
   2eff8:	ldr	r1, [fp, #-16]
   2effc:	ldr	r1, [r1, #4]
   2f000:	add	r0, r0, r1
   2f004:	ldr	r1, [fp, #-8]
   2f008:	ldr	r1, [r1]
   2f00c:	add	r0, r0, r1
   2f010:	str	r0, [sp, #12]
   2f014:	ldr	r0, [fp, #-8]
   2f018:	ldr	r0, [r0, #8]
   2f01c:	ldr	r1, [sp, #12]
   2f020:	lsl	r1, r1, #2
   2f024:	bl	38aec <__assert_fail@plt+0x27398>
   2f028:	str	r0, [sp, #8]
   2f02c:	ldr	r0, [sp, #8]
   2f030:	movw	r1, #0
   2f034:	cmp	r0, r1
   2f038:	bne	2f048 <__assert_fail@plt+0x1d8f4>
   2f03c:	movw	r0, #12
   2f040:	str	r0, [fp, #-4]
   2f044:	b	2f3b8 <__assert_fail@plt+0x1dc64>
   2f048:	ldr	r0, [sp, #8]
   2f04c:	ldr	r1, [fp, #-8]
   2f050:	str	r0, [r1, #8]
   2f054:	ldr	r0, [sp, #12]
   2f058:	ldr	r1, [fp, #-8]
   2f05c:	str	r0, [r1]
   2f060:	ldr	r0, [fp, #-8]
   2f064:	ldr	r0, [r0, #4]
   2f068:	ldr	r1, [fp, #-12]
   2f06c:	ldr	r1, [r1, #4]
   2f070:	add	r0, r0, r1
   2f074:	ldr	r1, [fp, #-16]
   2f078:	ldr	r1, [r1, #4]
   2f07c:	add	r0, r0, r1
   2f080:	str	r0, [sp, #16]
   2f084:	ldr	r0, [fp, #-12]
   2f088:	ldr	r0, [r0, #4]
   2f08c:	sub	r0, r0, #1
   2f090:	str	r0, [fp, #-20]	; 0xffffffec
   2f094:	ldr	r0, [fp, #-16]
   2f098:	ldr	r0, [r0, #4]
   2f09c:	sub	r0, r0, #1
   2f0a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f0a4:	ldr	r0, [fp, #-8]
   2f0a8:	ldr	r0, [r0, #4]
   2f0ac:	sub	r0, r0, #1
   2f0b0:	str	r0, [sp, #24]
   2f0b4:	ldr	r0, [fp, #-12]
   2f0b8:	ldr	r0, [r0, #8]
   2f0bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f0c0:	ldr	r0, [r0, r1, lsl #2]
   2f0c4:	ldr	r1, [fp, #-16]
   2f0c8:	ldr	r1, [r1, #8]
   2f0cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f0d0:	add	r1, r1, r2, lsl #2
   2f0d4:	ldr	r1, [r1]
   2f0d8:	cmp	r0, r1
   2f0dc:	bne	2f1e8 <__assert_fail@plt+0x1da94>
   2f0e0:	b	2f0e4 <__assert_fail@plt+0x1d990>
   2f0e4:	ldr	r0, [sp, #24]
   2f0e8:	cmp	r0, #0
   2f0ec:	movw	r0, #0
   2f0f0:	str	r0, [sp, #4]
   2f0f4:	blt	2f12c <__assert_fail@plt+0x1d9d8>
   2f0f8:	ldr	r0, [fp, #-8]
   2f0fc:	ldr	r0, [r0, #8]
   2f100:	ldr	r1, [sp, #24]
   2f104:	ldr	r0, [r0, r1, lsl #2]
   2f108:	ldr	r1, [fp, #-12]
   2f10c:	ldr	r1, [r1, #8]
   2f110:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f114:	add	r1, r1, r2, lsl #2
   2f118:	ldr	r1, [r1]
   2f11c:	cmp	r0, r1
   2f120:	movw	r0, #0
   2f124:	movgt	r0, #1
   2f128:	str	r0, [sp, #4]
   2f12c:	ldr	r0, [sp, #4]
   2f130:	tst	r0, #1
   2f134:	beq	2f14c <__assert_fail@plt+0x1d9f8>
   2f138:	ldr	r0, [sp, #24]
   2f13c:	mvn	r1, #0
   2f140:	add	r0, r0, r1
   2f144:	str	r0, [sp, #24]
   2f148:	b	2f0e4 <__assert_fail@plt+0x1d990>
   2f14c:	ldr	r0, [sp, #24]
   2f150:	cmp	r0, #0
   2f154:	blt	2f184 <__assert_fail@plt+0x1da30>
   2f158:	ldr	r0, [fp, #-8]
   2f15c:	ldr	r0, [r0, #8]
   2f160:	ldr	r1, [sp, #24]
   2f164:	ldr	r0, [r0, r1, lsl #2]
   2f168:	ldr	r1, [fp, #-12]
   2f16c:	ldr	r1, [r1, #8]
   2f170:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f174:	add	r1, r1, r2, lsl #2
   2f178:	ldr	r1, [r1]
   2f17c:	cmp	r0, r1
   2f180:	beq	2f1b0 <__assert_fail@plt+0x1da5c>
   2f184:	ldr	r0, [fp, #-12]
   2f188:	ldr	r0, [r0, #8]
   2f18c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f190:	ldr	r0, [r0, r1, lsl #2]
   2f194:	ldr	r1, [fp, #-8]
   2f198:	ldr	r1, [r1, #8]
   2f19c:	ldr	r2, [sp, #16]
   2f1a0:	sub	r2, r2, #1
   2f1a4:	str	r2, [sp, #16]
   2f1a8:	add	r1, r1, r2, lsl #2
   2f1ac:	str	r0, [r1]
   2f1b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f1b4:	mvn	r1, #0
   2f1b8:	add	r0, r0, r1
   2f1bc:	str	r0, [fp, #-20]	; 0xffffffec
   2f1c0:	cmp	r0, #0
   2f1c4:	blt	2f1e0 <__assert_fail@plt+0x1da8c>
   2f1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1cc:	mvn	r1, #0
   2f1d0:	add	r0, r0, r1
   2f1d4:	str	r0, [fp, #-24]	; 0xffffffe8
   2f1d8:	cmp	r0, #0
   2f1dc:	bge	2f1e4 <__assert_fail@plt+0x1da90>
   2f1e0:	b	2f25c <__assert_fail@plt+0x1db08>
   2f1e4:	b	2f258 <__assert_fail@plt+0x1db04>
   2f1e8:	ldr	r0, [fp, #-12]
   2f1ec:	ldr	r0, [r0, #8]
   2f1f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f1f4:	ldr	r0, [r0, r1, lsl #2]
   2f1f8:	ldr	r1, [fp, #-16]
   2f1fc:	ldr	r1, [r1, #8]
   2f200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f204:	add	r1, r1, r2, lsl #2
   2f208:	ldr	r1, [r1]
   2f20c:	cmp	r0, r1
   2f210:	bge	2f234 <__assert_fail@plt+0x1dae0>
   2f214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f218:	mvn	r1, #0
   2f21c:	add	r0, r0, r1
   2f220:	str	r0, [fp, #-24]	; 0xffffffe8
   2f224:	cmp	r0, #0
   2f228:	bge	2f230 <__assert_fail@plt+0x1dadc>
   2f22c:	b	2f25c <__assert_fail@plt+0x1db08>
   2f230:	b	2f254 <__assert_fail@plt+0x1db00>
   2f234:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f238:	mvn	r1, #0
   2f23c:	add	r0, r0, r1
   2f240:	str	r0, [fp, #-20]	; 0xffffffec
   2f244:	cmp	r0, #0
   2f248:	bge	2f250 <__assert_fail@plt+0x1dafc>
   2f24c:	b	2f25c <__assert_fail@plt+0x1db08>
   2f250:	b	2f254 <__assert_fail@plt+0x1db00>
   2f254:	b	2f258 <__assert_fail@plt+0x1db04>
   2f258:	b	2f0b4 <__assert_fail@plt+0x1d960>
   2f25c:	ldr	r0, [fp, #-8]
   2f260:	ldr	r0, [r0, #4]
   2f264:	sub	r0, r0, #1
   2f268:	str	r0, [sp, #24]
   2f26c:	ldr	r0, [fp, #-8]
   2f270:	ldr	r0, [r0, #4]
   2f274:	ldr	r1, [fp, #-12]
   2f278:	ldr	r1, [r1, #4]
   2f27c:	add	r0, r0, r1
   2f280:	ldr	r1, [fp, #-16]
   2f284:	ldr	r1, [r1, #4]
   2f288:	add	r0, r0, r1
   2f28c:	sub	r0, r0, #1
   2f290:	str	r0, [sp, #28]
   2f294:	ldr	r0, [sp, #28]
   2f298:	ldr	r1, [sp, #16]
   2f29c:	sub	r0, r0, r1
   2f2a0:	add	r0, r0, #1
   2f2a4:	str	r0, [sp, #20]
   2f2a8:	ldr	r0, [sp, #20]
   2f2ac:	ldr	r1, [fp, #-8]
   2f2b0:	ldr	r2, [r1, #4]
   2f2b4:	add	r0, r2, r0
   2f2b8:	str	r0, [r1, #4]
   2f2bc:	ldr	r0, [sp, #20]
   2f2c0:	cmp	r0, #0
   2f2c4:	ble	2f394 <__assert_fail@plt+0x1dc40>
   2f2c8:	ldr	r0, [sp, #24]
   2f2cc:	cmp	r0, #0
   2f2d0:	blt	2f394 <__assert_fail@plt+0x1dc40>
   2f2d4:	b	2f2d8 <__assert_fail@plt+0x1db84>
   2f2d8:	ldr	r0, [fp, #-8]
   2f2dc:	ldr	r0, [r0, #8]
   2f2e0:	ldr	r1, [sp, #28]
   2f2e4:	ldr	r1, [r0, r1, lsl #2]
   2f2e8:	ldr	r2, [sp, #24]
   2f2ec:	add	r0, r0, r2, lsl #2
   2f2f0:	ldr	r0, [r0]
   2f2f4:	cmp	r1, r0
   2f2f8:	ble	2f34c <__assert_fail@plt+0x1dbf8>
   2f2fc:	ldr	r0, [fp, #-8]
   2f300:	ldr	r0, [r0, #8]
   2f304:	ldr	r1, [sp, #28]
   2f308:	sub	r2, r1, #1
   2f30c:	str	r2, [sp, #28]
   2f310:	ldr	r0, [r0, r1, lsl #2]
   2f314:	ldr	r1, [fp, #-8]
   2f318:	ldr	r1, [r1, #8]
   2f31c:	ldr	r2, [sp, #24]
   2f320:	ldr	r3, [sp, #20]
   2f324:	sub	ip, r3, #1
   2f328:	str	ip, [sp, #20]
   2f32c:	add	r2, r2, r3
   2f330:	add	r1, r1, r2, lsl #2
   2f334:	str	r0, [r1]
   2f338:	ldr	r0, [sp, #20]
   2f33c:	cmp	r0, #0
   2f340:	bne	2f348 <__assert_fail@plt+0x1dbf4>
   2f344:	b	2f390 <__assert_fail@plt+0x1dc3c>
   2f348:	b	2f38c <__assert_fail@plt+0x1dc38>
   2f34c:	ldr	r0, [fp, #-8]
   2f350:	ldr	r0, [r0, #8]
   2f354:	ldr	r1, [sp, #24]
   2f358:	ldr	r2, [r0, r1, lsl #2]
   2f35c:	ldr	r3, [sp, #20]
   2f360:	add	r1, r1, r3
   2f364:	add	r0, r0, r1, lsl #2
   2f368:	str	r2, [r0]
   2f36c:	ldr	r0, [sp, #24]
   2f370:	mvn	r1, #0
   2f374:	add	r0, r0, r1
   2f378:	str	r0, [sp, #24]
   2f37c:	cmp	r0, #0
   2f380:	bge	2f388 <__assert_fail@plt+0x1dc34>
   2f384:	b	2f390 <__assert_fail@plt+0x1dc3c>
   2f388:	b	2f38c <__assert_fail@plt+0x1dc38>
   2f38c:	b	2f2d8 <__assert_fail@plt+0x1db84>
   2f390:	b	2f394 <__assert_fail@plt+0x1dc40>
   2f394:	ldr	r0, [fp, #-8]
   2f398:	ldr	r0, [r0, #8]
   2f39c:	ldr	r1, [sp, #16]
   2f3a0:	add	r1, r0, r1, lsl #2
   2f3a4:	ldr	r2, [sp, #20]
   2f3a8:	lsl	r2, r2, #2
   2f3ac:	bl	11478 <memcpy@plt>
   2f3b0:	movw	r0, #0
   2f3b4:	str	r0, [fp, #-4]
   2f3b8:	ldr	r0, [fp, #-4]
   2f3bc:	mov	sp, fp
   2f3c0:	pop	{fp, pc}
   2f3c4:	push	{fp, lr}
   2f3c8:	mov	fp, sp
   2f3cc:	sub	sp, sp, #72	; 0x48
   2f3d0:	str	r0, [fp, #-8]
   2f3d4:	str	r1, [fp, #-12]
   2f3d8:	str	r2, [fp, #-16]
   2f3dc:	str	r3, [fp, #-20]	; 0xffffffec
   2f3e0:	ldr	r0, [fp, #-8]
   2f3e4:	ldr	r0, [r0, #28]
   2f3e8:	ldr	r1, [fp, #-12]
   2f3ec:	movw	r2, #12
   2f3f0:	mul	r1, r1, r2
   2f3f4:	add	r0, r0, r1
   2f3f8:	str	r0, [fp, #-32]	; 0xffffffe0
   2f3fc:	add	r0, sp, #28
   2f400:	movw	r1, #0
   2f404:	and	r1, r1, #255	; 0xff
   2f408:	bl	11658 <memset@plt>
   2f40c:	movw	r0, #0
   2f410:	str	r0, [fp, #-24]	; 0xffffffe8
   2f414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f418:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f41c:	ldr	r1, [r1, #4]
   2f420:	cmp	r0, r1
   2f424:	bge	2f5b8 <__assert_fail@plt+0x1de64>
   2f428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f42c:	ldr	r0, [r0, #8]
   2f430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f434:	add	r0, r0, r1, lsl #2
   2f438:	ldr	r0, [r0]
   2f43c:	str	r0, [sp, #24]
   2f440:	ldr	r0, [sp, #24]
   2f444:	ldr	r1, [fp, #-12]
   2f448:	cmp	r0, r1
   2f44c:	bne	2f454 <__assert_fail@plt+0x1dd00>
   2f450:	b	2f5a8 <__assert_fail@plt+0x1de54>
   2f454:	ldr	r0, [fp, #-8]
   2f458:	ldr	r0, [r0]
   2f45c:	ldr	r1, [sp, #24]
   2f460:	add	r0, r0, r1, lsl #3
   2f464:	ldr	r0, [r0, #4]
   2f468:	and	r0, r0, #255	; 0xff
   2f46c:	and	r0, r0, #8
   2f470:	cmp	r0, #0
   2f474:	beq	2f5a4 <__assert_fail@plt+0x1de50>
   2f478:	ldr	r0, [fp, #-8]
   2f47c:	ldr	r0, [r0, #20]
   2f480:	ldr	r1, [sp, #24]
   2f484:	movw	r2, #12
   2f488:	mul	r1, r1, r2
   2f48c:	add	r0, r0, r1
   2f490:	ldr	r0, [r0, #8]
   2f494:	ldr	r0, [r0]
   2f498:	str	r0, [sp, #20]
   2f49c:	ldr	r0, [fp, #-8]
   2f4a0:	ldr	r0, [r0, #20]
   2f4a4:	ldr	r1, [sp, #24]
   2f4a8:	mul	r1, r1, r2
   2f4ac:	add	r0, r0, r1
   2f4b0:	ldr	r0, [r0, #4]
   2f4b4:	cmp	r0, #1
   2f4b8:	ble	2f4e4 <__assert_fail@plt+0x1dd90>
   2f4bc:	ldr	r0, [fp, #-8]
   2f4c0:	ldr	r0, [r0, #20]
   2f4c4:	ldr	r1, [sp, #24]
   2f4c8:	movw	r2, #12
   2f4cc:	mul	r1, r1, r2
   2f4d0:	add	r0, r0, r1
   2f4d4:	ldr	r0, [r0, #8]
   2f4d8:	ldr	r0, [r0, #4]
   2f4dc:	str	r0, [sp, #4]
   2f4e0:	b	2f4f0 <__assert_fail@plt+0x1dd9c>
   2f4e4:	mvn	r0, #0
   2f4e8:	str	r0, [sp, #4]
   2f4ec:	b	2f4f0 <__assert_fail@plt+0x1dd9c>
   2f4f0:	ldr	r0, [sp, #4]
   2f4f4:	str	r0, [sp, #16]
   2f4f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f4fc:	ldr	r1, [sp, #20]
   2f500:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f504:	cmp	r0, #0
   2f508:	bne	2f520 <__assert_fail@plt+0x1ddcc>
   2f50c:	ldr	r0, [fp, #-16]
   2f510:	ldr	r1, [sp, #20]
   2f514:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f518:	cmp	r0, #0
   2f51c:	bne	2f554 <__assert_fail@plt+0x1de00>
   2f520:	ldr	r0, [sp, #16]
   2f524:	cmp	r0, #0
   2f528:	ble	2f5a0 <__assert_fail@plt+0x1de4c>
   2f52c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f530:	ldr	r1, [sp, #16]
   2f534:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f538:	cmp	r0, #0
   2f53c:	bne	2f5a0 <__assert_fail@plt+0x1de4c>
   2f540:	ldr	r0, [fp, #-16]
   2f544:	ldr	r1, [sp, #16]
   2f548:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f54c:	cmp	r0, #0
   2f550:	beq	2f5a0 <__assert_fail@plt+0x1de4c>
   2f554:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f558:	ldr	r0, [fp, #-8]
   2f55c:	ldr	r0, [r0, #28]
   2f560:	ldr	r2, [sp, #24]
   2f564:	movw	r3, #12
   2f568:	mul	r2, r2, r3
   2f56c:	add	r2, r0, r2
   2f570:	add	r0, sp, #28
   2f574:	bl	2ef7c <__assert_fail@plt+0x1d828>
   2f578:	str	r0, [fp, #-28]	; 0xffffffe4
   2f57c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f580:	cmp	r0, #0
   2f584:	beq	2f59c <__assert_fail@plt+0x1de48>
   2f588:	ldr	r0, [sp, #36]	; 0x24
   2f58c:	bl	1604c <__assert_fail@plt+0x48f8>
   2f590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f594:	str	r0, [fp, #-4]
   2f598:	b	2f644 <__assert_fail@plt+0x1def0>
   2f59c:	b	2f5a0 <__assert_fail@plt+0x1de4c>
   2f5a0:	b	2f5a4 <__assert_fail@plt+0x1de50>
   2f5a4:	b	2f5a8 <__assert_fail@plt+0x1de54>
   2f5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5ac:	add	r0, r0, #1
   2f5b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f5b4:	b	2f414 <__assert_fail@plt+0x1dcc0>
   2f5b8:	movw	r0, #0
   2f5bc:	str	r0, [fp, #-24]	; 0xffffffe8
   2f5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f5c8:	ldr	r1, [r1, #4]
   2f5cc:	cmp	r0, r1
   2f5d0:	bge	2f634 <__assert_fail@plt+0x1dee0>
   2f5d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f5d8:	ldr	r0, [r0, #8]
   2f5dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5e0:	add	r0, r0, r1, lsl #2
   2f5e4:	ldr	r0, [r0]
   2f5e8:	str	r0, [sp, #12]
   2f5ec:	ldr	r1, [sp, #12]
   2f5f0:	add	r0, sp, #28
   2f5f4:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f5f8:	cmp	r0, #0
   2f5fc:	bne	2f620 <__assert_fail@plt+0x1decc>
   2f600:	ldr	r0, [fp, #-16]
   2f604:	ldr	r1, [sp, #12]
   2f608:	bl	25f04 <__assert_fail@plt+0x147b0>
   2f60c:	sub	r0, r0, #1
   2f610:	str	r0, [sp, #8]
   2f614:	ldr	r0, [fp, #-16]
   2f618:	ldr	r1, [sp, #8]
   2f61c:	bl	265f0 <__assert_fail@plt+0x14e9c>
   2f620:	b	2f624 <__assert_fail@plt+0x1ded0>
   2f624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f628:	add	r0, r0, #1
   2f62c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f630:	b	2f5c0 <__assert_fail@plt+0x1de6c>
   2f634:	ldr	r0, [sp, #36]	; 0x24
   2f638:	bl	1604c <__assert_fail@plt+0x48f8>
   2f63c:	movw	r0, #0
   2f640:	str	r0, [fp, #-4]
   2f644:	ldr	r0, [fp, #-4]
   2f648:	mov	sp, fp
   2f64c:	pop	{fp, pc}
   2f650:	push	{r4, sl, fp, lr}
   2f654:	add	fp, sp, #8
   2f658:	sub	sp, sp, #72	; 0x48
   2f65c:	ldr	ip, [fp, #12]
   2f660:	ldr	lr, [fp, #8]
   2f664:	str	r0, [fp, #-16]
   2f668:	str	r1, [fp, #-20]	; 0xffffffec
   2f66c:	str	r2, [fp, #-24]	; 0xffffffe8
   2f670:	str	r3, [fp, #-28]	; 0xffffffe4
   2f674:	ldr	r0, [fp, #-16]
   2f678:	ldr	r0, [r0, #84]	; 0x54
   2f67c:	str	r0, [fp, #-32]	; 0xffffffe0
   2f680:	ldr	r0, [fp, #-16]
   2f684:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f688:	str	lr, [sp, #16]
   2f68c:	str	ip, [sp, #12]
   2f690:	bl	2a38c <__assert_fail@plt+0x18c38>
   2f694:	str	r0, [sp, #32]
   2f698:	ldr	r0, [fp, #-16]
   2f69c:	ldr	r1, [fp, #12]
   2f6a0:	bl	2a38c <__assert_fail@plt+0x18c38>
   2f6a4:	str	r0, [sp, #28]
   2f6a8:	movw	r0, #0
   2f6ac:	str	r0, [fp, #-36]	; 0xffffffdc
   2f6b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f6b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6b8:	ldr	r1, [r1, #4]
   2f6bc:	cmp	r0, r1
   2f6c0:	bge	2f7a4 <__assert_fail@plt+0x1e050>
   2f6c4:	ldr	r0, [fp, #-16]
   2f6c8:	ldr	r0, [r0, #116]	; 0x74
   2f6cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6d0:	ldr	r1, [r1, #8]
   2f6d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f6d8:	ldr	r1, [r1, r2, lsl #2]
   2f6dc:	add	r1, r1, r1, lsl #1
   2f6e0:	add	r0, r0, r1, lsl #3
   2f6e4:	str	r0, [sp, #20]
   2f6e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f6ec:	ldr	r0, [r0]
   2f6f0:	ldr	r1, [sp, #20]
   2f6f4:	ldr	r1, [r1]
   2f6f8:	ldr	r0, [r0, r1, lsl #3]
   2f6fc:	str	r0, [sp, #24]
   2f700:	ldr	r0, [fp, #-16]
   2f704:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f708:	ldr	r1, [r1, #8]
   2f70c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f710:	ldr	r1, [r1, r2, lsl #2]
   2f714:	ldr	r2, [sp, #24]
   2f718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f71c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f720:	ldr	lr, [sp, #32]
   2f724:	mov	r4, sp
   2f728:	str	lr, [r4, #4]
   2f72c:	str	ip, [r4]
   2f730:	bl	2f7c0 <__assert_fail@plt+0x1e06c>
   2f734:	str	r0, [sp, #36]	; 0x24
   2f738:	ldr	r0, [fp, #-16]
   2f73c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f740:	ldr	r1, [r1, #8]
   2f744:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f748:	add	r1, r1, r2, lsl #2
   2f74c:	ldr	r1, [r1]
   2f750:	ldr	r2, [sp, #24]
   2f754:	ldr	r3, [fp, #8]
   2f758:	ldr	ip, [fp, #12]
   2f75c:	ldr	lr, [sp, #28]
   2f760:	str	ip, [sp]
   2f764:	str	lr, [sp, #4]
   2f768:	bl	2f7c0 <__assert_fail@plt+0x1e06c>
   2f76c:	str	r0, [sp, #40]	; 0x28
   2f770:	ldr	r0, [sp, #40]	; 0x28
   2f774:	ldr	r1, [sp, #36]	; 0x24
   2f778:	cmp	r0, r1
   2f77c:	bne	2f784 <__assert_fail@plt+0x1e030>
   2f780:	b	2f794 <__assert_fail@plt+0x1e040>
   2f784:	movw	r0, #1
   2f788:	and	r0, r0, #1
   2f78c:	strb	r0, [fp, #-9]
   2f790:	b	2f7b0 <__assert_fail@plt+0x1e05c>
   2f794:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f798:	add	r0, r0, #1
   2f79c:	str	r0, [fp, #-36]	; 0xffffffdc
   2f7a0:	b	2f6b0 <__assert_fail@plt+0x1df5c>
   2f7a4:	movw	r0, #0
   2f7a8:	and	r0, r0, #1
   2f7ac:	strb	r0, [fp, #-9]
   2f7b0:	ldrb	r0, [fp, #-9]
   2f7b4:	and	r0, r0, #1
   2f7b8:	sub	sp, fp, #8
   2f7bc:	pop	{r4, sl, fp, pc}
   2f7c0:	push	{fp, lr}
   2f7c4:	mov	fp, sp
   2f7c8:	sub	sp, sp, #40	; 0x28
   2f7cc:	ldr	ip, [fp, #12]
   2f7d0:	ldr	lr, [fp, #8]
   2f7d4:	str	r0, [fp, #-8]
   2f7d8:	str	r1, [fp, #-12]
   2f7dc:	str	r2, [fp, #-16]
   2f7e0:	str	r3, [sp, #20]
   2f7e4:	ldr	r0, [fp, #-8]
   2f7e8:	ldr	r0, [r0, #116]	; 0x74
   2f7ec:	ldr	r1, [fp, #-12]
   2f7f0:	movw	r2, #24
   2f7f4:	mul	r1, r1, r2
   2f7f8:	add	r0, r0, r1
   2f7fc:	str	r0, [sp, #16]
   2f800:	ldr	r0, [fp, #8]
   2f804:	ldr	r1, [sp, #16]
   2f808:	ldr	r1, [r1, #8]
   2f80c:	cmp	r0, r1
   2f810:	str	lr, [sp, #8]
   2f814:	str	ip, [sp, #4]
   2f818:	bge	2f828 <__assert_fail@plt+0x1e0d4>
   2f81c:	mvn	r0, #0
   2f820:	str	r0, [fp, #-4]
   2f824:	b	2f8cc <__assert_fail@plt+0x1e178>
   2f828:	ldr	r0, [sp, #16]
   2f82c:	ldr	r0, [r0, #12]
   2f830:	ldr	r1, [fp, #8]
   2f834:	cmp	r0, r1
   2f838:	bge	2f848 <__assert_fail@plt+0x1e0f4>
   2f83c:	movw	r0, #1
   2f840:	str	r0, [fp, #-4]
   2f844:	b	2f8cc <__assert_fail@plt+0x1e178>
   2f848:	ldr	r0, [fp, #8]
   2f84c:	ldr	r1, [sp, #16]
   2f850:	ldr	r1, [r1, #8]
   2f854:	cmp	r0, r1
   2f858:	movw	r0, #0
   2f85c:	moveq	r0, #1
   2f860:	and	r0, r0, #1
   2f864:	str	r0, [sp, #12]
   2f868:	ldr	r0, [fp, #8]
   2f86c:	ldr	r1, [sp, #16]
   2f870:	ldr	r1, [r1, #12]
   2f874:	cmp	r0, r1
   2f878:	movw	r0, #0
   2f87c:	moveq	r0, #1
   2f880:	and	r0, r0, #1
   2f884:	lsl	r0, r0, #1
   2f888:	ldr	r1, [sp, #12]
   2f88c:	orr	r0, r1, r0
   2f890:	str	r0, [sp, #12]
   2f894:	ldr	r0, [sp, #12]
   2f898:	cmp	r0, #0
   2f89c:	bne	2f8ac <__assert_fail@plt+0x1e158>
   2f8a0:	movw	r0, #0
   2f8a4:	str	r0, [fp, #-4]
   2f8a8:	b	2f8cc <__assert_fail@plt+0x1e178>
   2f8ac:	ldr	r0, [fp, #-8]
   2f8b0:	ldr	r1, [sp, #12]
   2f8b4:	ldr	r2, [fp, #-16]
   2f8b8:	ldr	r3, [sp, #20]
   2f8bc:	ldr	ip, [fp, #12]
   2f8c0:	str	ip, [sp]
   2f8c4:	bl	2f8d8 <__assert_fail@plt+0x1e184>
   2f8c8:	str	r0, [fp, #-4]
   2f8cc:	ldr	r0, [fp, #-4]
   2f8d0:	mov	sp, fp
   2f8d4:	pop	{fp, pc}
   2f8d8:	push	{fp, lr}
   2f8dc:	mov	fp, sp
   2f8e0:	sub	sp, sp, #64	; 0x40
   2f8e4:	ldr	ip, [fp, #8]
   2f8e8:	str	r0, [fp, #-8]
   2f8ec:	str	r1, [fp, #-12]
   2f8f0:	str	r2, [fp, #-16]
   2f8f4:	str	r3, [fp, #-20]	; 0xffffffec
   2f8f8:	ldr	r0, [fp, #-8]
   2f8fc:	ldr	r0, [r0, #84]	; 0x54
   2f900:	str	r0, [fp, #-24]	; 0xffffffe8
   2f904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f908:	ldr	r0, [r0, #24]
   2f90c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f910:	movw	r2, #12
   2f914:	mul	r1, r1, r2
   2f918:	add	r0, r0, r1
   2f91c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f920:	movw	r0, #0
   2f924:	str	r0, [sp, #32]
   2f928:	str	ip, [sp, #12]
   2f92c:	ldr	r0, [sp, #32]
   2f930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f934:	ldr	r1, [r1, #4]
   2f938:	cmp	r0, r1
   2f93c:	bge	2fbb4 <__assert_fail@plt+0x1e460>
   2f940:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f944:	ldr	r0, [r0, #8]
   2f948:	ldr	r1, [sp, #32]
   2f94c:	ldr	r0, [r0, r1, lsl #2]
   2f950:	str	r0, [sp, #28]
   2f954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f958:	ldr	r0, [r0]
   2f95c:	ldr	r1, [sp, #28]
   2f960:	add	r0, r0, r1, lsl #3
   2f964:	ldrb	r0, [r0, #4]
   2f968:	mov	r1, r0
   2f96c:	cmp	r0, #4
   2f970:	str	r1, [sp, #8]
   2f974:	beq	2f99c <__assert_fail@plt+0x1e248>
   2f978:	b	2f97c <__assert_fail@plt+0x1e228>
   2f97c:	ldr	r0, [sp, #8]
   2f980:	cmp	r0, #8
   2f984:	beq	2fb1c <__assert_fail@plt+0x1e3c8>
   2f988:	b	2f98c <__assert_fail@plt+0x1e238>
   2f98c:	ldr	r0, [sp, #8]
   2f990:	cmp	r0, #9
   2f994:	beq	2fb5c <__assert_fail@plt+0x1e408>
   2f998:	b	2fb9c <__assert_fail@plt+0x1e448>
   2f99c:	ldr	r0, [fp, #8]
   2f9a0:	cmn	r0, #1
   2f9a4:	beq	2fb18 <__assert_fail@plt+0x1e3c4>
   2f9a8:	ldr	r0, [fp, #-8]
   2f9ac:	ldr	r0, [r0, #116]	; 0x74
   2f9b0:	ldr	r1, [fp, #8]
   2f9b4:	movw	r2, #24
   2f9b8:	mul	r1, r1, r2
   2f9bc:	add	r0, r0, r1
   2f9c0:	str	r0, [sp, #24]
   2f9c4:	ldr	r0, [sp, #24]
   2f9c8:	ldr	r0, [r0]
   2f9cc:	ldr	r1, [sp, #28]
   2f9d0:	cmp	r0, r1
   2f9d4:	beq	2f9dc <__assert_fail@plt+0x1e288>
   2f9d8:	b	2fafc <__assert_fail@plt+0x1e3a8>
   2f9dc:	ldr	r0, [fp, #-16]
   2f9e0:	cmp	r0, #32
   2f9e4:	bge	2fa0c <__assert_fail@plt+0x1e2b8>
   2f9e8:	ldr	r0, [sp, #24]
   2f9ec:	ldr	r0, [r0, #16]
   2f9f0:	ldr	r1, [fp, #-16]
   2f9f4:	movw	r2, #1
   2f9f8:	lsl	r1, r2, r1
   2f9fc:	and	r0, r0, r1
   2fa00:	cmp	r0, #0
   2fa04:	bne	2fa0c <__assert_fail@plt+0x1e2b8>
   2fa08:	b	2fafc <__assert_fail@plt+0x1e3a8>
   2fa0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa10:	ldr	r0, [r0, #20]
   2fa14:	ldr	r1, [sp, #28]
   2fa18:	movw	r2, #12
   2fa1c:	mul	r1, r1, r2
   2fa20:	add	r0, r0, r1
   2fa24:	ldr	r0, [r0, #8]
   2fa28:	ldr	r0, [r0]
   2fa2c:	str	r0, [sp, #20]
   2fa30:	ldr	r0, [sp, #20]
   2fa34:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fa38:	cmp	r0, r1
   2fa3c:	bne	2fa68 <__assert_fail@plt+0x1e314>
   2fa40:	ldr	r0, [fp, #-12]
   2fa44:	and	r0, r0, #1
   2fa48:	cmp	r0, #0
   2fa4c:	beq	2fa5c <__assert_fail@plt+0x1e308>
   2fa50:	mvn	r0, #0
   2fa54:	str	r0, [fp, #-4]
   2fa58:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2fa5c:	movw	r0, #0
   2fa60:	str	r0, [fp, #-4]
   2fa64:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2fa68:	ldr	r0, [fp, #-8]
   2fa6c:	ldr	r1, [fp, #-12]
   2fa70:	ldr	r2, [fp, #-16]
   2fa74:	ldr	r3, [sp, #20]
   2fa78:	ldr	ip, [fp, #8]
   2fa7c:	str	ip, [sp]
   2fa80:	bl	2f8d8 <__assert_fail@plt+0x1e184>
   2fa84:	str	r0, [sp, #16]
   2fa88:	ldr	r0, [sp, #16]
   2fa8c:	cmn	r0, #1
   2fa90:	bne	2faa0 <__assert_fail@plt+0x1e34c>
   2fa94:	mvn	r0, #0
   2fa98:	str	r0, [fp, #-4]
   2fa9c:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2faa0:	ldr	r0, [sp, #16]
   2faa4:	cmp	r0, #0
   2faa8:	bne	2fac8 <__assert_fail@plt+0x1e374>
   2faac:	ldr	r0, [fp, #-12]
   2fab0:	and	r0, r0, #2
   2fab4:	cmp	r0, #0
   2fab8:	beq	2fac8 <__assert_fail@plt+0x1e374>
   2fabc:	movw	r0, #0
   2fac0:	str	r0, [fp, #-4]
   2fac4:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2fac8:	ldr	r0, [fp, #-16]
   2facc:	cmp	r0, #32
   2fad0:	bge	2faf8 <__assert_fail@plt+0x1e3a4>
   2fad4:	ldr	r0, [fp, #-16]
   2fad8:	movw	r1, #1
   2fadc:	lsl	r0, r1, r0
   2fae0:	mvn	r1, #0
   2fae4:	eor	r0, r0, r1
   2fae8:	ldr	r1, [sp, #24]
   2faec:	ldr	r2, [r1, #16]
   2faf0:	and	r0, r2, r0
   2faf4:	str	r0, [r1, #16]
   2faf8:	b	2fafc <__assert_fail@plt+0x1e3a8>
   2fafc:	ldr	r0, [sp, #24]
   2fb00:	add	r1, r0, #24
   2fb04:	str	r1, [sp, #24]
   2fb08:	ldrsb	r0, [r0, #20]
   2fb0c:	cmp	r0, #0
   2fb10:	bne	2f9c4 <__assert_fail@plt+0x1e270>
   2fb14:	b	2fb18 <__assert_fail@plt+0x1e3c4>
   2fb18:	b	2fba0 <__assert_fail@plt+0x1e44c>
   2fb1c:	ldr	r0, [fp, #-12]
   2fb20:	and	r0, r0, #1
   2fb24:	cmp	r0, #0
   2fb28:	beq	2fb58 <__assert_fail@plt+0x1e404>
   2fb2c:	ldr	r0, [fp, #-16]
   2fb30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fb34:	ldr	r1, [r1]
   2fb38:	ldr	r2, [sp, #28]
   2fb3c:	add	r1, r1, r2, lsl #3
   2fb40:	ldr	r1, [r1]
   2fb44:	cmp	r0, r1
   2fb48:	bne	2fb58 <__assert_fail@plt+0x1e404>
   2fb4c:	mvn	r0, #0
   2fb50:	str	r0, [fp, #-4]
   2fb54:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2fb58:	b	2fba0 <__assert_fail@plt+0x1e44c>
   2fb5c:	ldr	r0, [fp, #-12]
   2fb60:	and	r0, r0, #2
   2fb64:	cmp	r0, #0
   2fb68:	beq	2fb98 <__assert_fail@plt+0x1e444>
   2fb6c:	ldr	r0, [fp, #-16]
   2fb70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fb74:	ldr	r1, [r1]
   2fb78:	ldr	r2, [sp, #28]
   2fb7c:	add	r1, r1, r2, lsl #3
   2fb80:	ldr	r1, [r1]
   2fb84:	cmp	r0, r1
   2fb88:	bne	2fb98 <__assert_fail@plt+0x1e444>
   2fb8c:	movw	r0, #0
   2fb90:	str	r0, [fp, #-4]
   2fb94:	b	2fbd8 <__assert_fail@plt+0x1e484>
   2fb98:	b	2fba0 <__assert_fail@plt+0x1e44c>
   2fb9c:	b	2fba0 <__assert_fail@plt+0x1e44c>
   2fba0:	b	2fba4 <__assert_fail@plt+0x1e450>
   2fba4:	ldr	r0, [sp, #32]
   2fba8:	add	r0, r0, #1
   2fbac:	str	r0, [sp, #32]
   2fbb0:	b	2f92c <__assert_fail@plt+0x1e1d8>
   2fbb4:	ldr	r0, [fp, #-12]
   2fbb8:	and	r0, r0, #2
   2fbbc:	cmp	r0, #0
   2fbc0:	movw	r0, #0
   2fbc4:	movne	r0, #1
   2fbc8:	tst	r0, #1
   2fbcc:	movw	r0, #1
   2fbd0:	moveq	r0, #0
   2fbd4:	str	r0, [fp, #-4]
   2fbd8:	ldr	r0, [fp, #-4]
   2fbdc:	mov	sp, fp
   2fbe0:	pop	{fp, pc}
   2fbe4:	push	{fp, lr}
   2fbe8:	mov	fp, sp
   2fbec:	sub	sp, sp, #32
   2fbf0:	ldr	ip, [fp, #8]
   2fbf4:	str	r0, [fp, #-4]
   2fbf8:	str	r1, [fp, #-8]
   2fbfc:	str	r2, [fp, #-12]
   2fc00:	str	r3, [sp, #16]
   2fc04:	ldr	r0, [fp, #-4]
   2fc08:	ldr	r0, [r0, #84]	; 0x54
   2fc0c:	str	r0, [sp, #12]
   2fc10:	ldr	r0, [sp, #12]
   2fc14:	ldr	r1, [fp, #-12]
   2fc18:	ldr	r2, [fp, #-4]
   2fc1c:	ldr	r3, [sp, #16]
   2fc20:	str	ip, [sp, #4]
   2fc24:	bl	2bf90 <__assert_fail@plt+0x1a83c>
   2fc28:	str	r0, [sp, #8]
   2fc2c:	ldr	r0, [sp, #8]
   2fc30:	cmp	r0, #0
   2fc34:	ble	2fcbc <__assert_fail@plt+0x1e568>
   2fc38:	ldr	r0, [sp, #16]
   2fc3c:	ldr	r1, [sp, #8]
   2fc40:	add	r0, r0, r1
   2fc44:	ldr	r1, [fp, #8]
   2fc48:	cmp	r0, r1
   2fc4c:	bgt	2fcbc <__assert_fail@plt+0x1e568>
   2fc50:	ldr	r0, [fp, #-8]
   2fc54:	ldr	r0, [r0]
   2fc58:	ldr	r1, [sp, #16]
   2fc5c:	ldr	r2, [sp, #8]
   2fc60:	add	r1, r1, r2
   2fc64:	add	r0, r0, r1, lsl #2
   2fc68:	ldr	r0, [r0]
   2fc6c:	movw	r1, #0
   2fc70:	cmp	r0, r1
   2fc74:	beq	2fcb4 <__assert_fail@plt+0x1e560>
   2fc78:	ldr	r0, [fp, #-8]
   2fc7c:	ldr	r0, [r0]
   2fc80:	ldr	r1, [sp, #16]
   2fc84:	ldr	r2, [sp, #8]
   2fc88:	add	r1, r1, r2
   2fc8c:	ldr	r0, [r0, r1, lsl #2]
   2fc90:	add	r0, r0, #4
   2fc94:	ldr	r1, [sp, #12]
   2fc98:	ldr	r1, [r1, #12]
   2fc9c:	ldr	r2, [fp, #-12]
   2fca0:	add	r1, r1, r2, lsl #2
   2fca4:	ldr	r1, [r1]
   2fca8:	bl	25f04 <__assert_fail@plt+0x147b0>
   2fcac:	cmp	r0, #0
   2fcb0:	bne	2fcbc <__assert_fail@plt+0x1e568>
   2fcb4:	movw	r0, #0
   2fcb8:	str	r0, [sp, #8]
   2fcbc:	ldr	r0, [sp, #8]
   2fcc0:	mov	sp, fp
   2fcc4:	pop	{fp, pc}
   2fcc8:	sub	sp, sp, #4
   2fccc:	str	r0, [sp]
   2fcd0:	ldr	r0, [sp]
   2fcd4:	movw	r1, #0
   2fcd8:	str	r1, [r0]
   2fcdc:	ldr	r0, [sp]
   2fce0:	movw	r1, #16
   2fce4:	str	r1, [r0, #4]
   2fce8:	ldr	r0, [sp]
   2fcec:	add	r0, r0, #12
   2fcf0:	ldr	r1, [sp]
   2fcf4:	str	r0, [r1, #8]
   2fcf8:	add	sp, sp, #4
   2fcfc:	bx	lr
   2fd00:	push	{fp, lr}
   2fd04:	mov	fp, sp
   2fd08:	sub	sp, sp, #16
   2fd0c:	str	r0, [sp, #8]
   2fd10:	str	r1, [sp, #4]
   2fd14:	ldr	r0, [sp, #4]
   2fd18:	ldr	r1, [sp, #8]
   2fd1c:	ldr	r1, [r1]
   2fd20:	cmp	r0, r1
   2fd24:	bls	2fd74 <__assert_fail@plt+0x1e620>
   2fd28:	ldr	r0, [sp, #8]
   2fd2c:	ldr	r1, [sp, #4]
   2fd30:	ldr	r2, [sp, #8]
   2fd34:	add	r2, r2, #12
   2fd38:	movw	r3, #8
   2fd3c:	bl	38d18 <__assert_fail@plt+0x275c4>
   2fd40:	and	r0, r0, #1
   2fd44:	strb	r0, [sp, #3]
   2fd48:	ldrb	r0, [sp, #3]
   2fd4c:	mvn	r1, #0
   2fd50:	eor	r0, r0, r1
   2fd54:	tst	r0, #1
   2fd58:	beq	2fd64 <__assert_fail@plt+0x1e610>
   2fd5c:	ldr	r0, [sp, #8]
   2fd60:	bl	3077c <__assert_fail@plt+0x1f028>
   2fd64:	ldrb	r0, [sp, #3]
   2fd68:	and	r0, r0, #1
   2fd6c:	strb	r0, [fp, #-1]
   2fd70:	b	2fdb0 <__assert_fail@plt+0x1e65c>
   2fd74:	ldr	r0, [sp, #8]
   2fd78:	ldr	r0, [r0, #8]
   2fd7c:	ldr	r1, [sp, #4]
   2fd80:	add	r0, r0, r1, lsl #3
   2fd84:	ldr	r1, [sp, #8]
   2fd88:	ldr	r1, [r1]
   2fd8c:	ldr	r2, [sp, #4]
   2fd90:	sub	r1, r1, r2
   2fd94:	bl	307d8 <__assert_fail@plt+0x1f084>
   2fd98:	ldr	r0, [sp, #4]
   2fd9c:	ldr	r1, [sp, #8]
   2fda0:	str	r0, [r1]
   2fda4:	movw	r0, #1
   2fda8:	and	r0, r0, #1
   2fdac:	strb	r0, [fp, #-1]
   2fdb0:	ldrb	r0, [fp, #-1]
   2fdb4:	and	r0, r0, #1
   2fdb8:	mov	sp, fp
   2fdbc:	pop	{fp, pc}
   2fdc0:	push	{fp, lr}
   2fdc4:	mov	fp, sp
   2fdc8:	sub	sp, sp, #8
   2fdcc:	str	r0, [sp, #4]
   2fdd0:	ldr	r0, [sp, #4]
   2fdd4:	ldr	r0, [r0, #8]
   2fdd8:	ldr	r1, [sp, #4]
   2fddc:	ldr	r1, [r1]
   2fde0:	bl	307d8 <__assert_fail@plt+0x1f084>
   2fde4:	ldr	r0, [sp, #4]
   2fde8:	bl	307ec <__assert_fail@plt+0x1f098>
   2fdec:	ldr	r0, [sp, #4]
   2fdf0:	bl	2fcc8 <__assert_fail@plt+0x1e574>
   2fdf4:	mov	sp, fp
   2fdf8:	pop	{fp, pc}
   2fdfc:	push	{fp, lr}
   2fe00:	mov	fp, sp
   2fe04:	sub	sp, sp, #8
   2fe08:	str	r0, [sp, #4]
   2fe0c:	ldr	r0, [sp, #4]
   2fe10:	movw	r1, #0
   2fe14:	cmp	r0, r1
   2fe18:	beq	2fe94 <__assert_fail@plt+0x1e740>
   2fe1c:	movw	r0, #0
   2fe20:	str	r0, [sp]
   2fe24:	ldr	r0, [sp]
   2fe28:	ldr	r1, [sp, #4]
   2fe2c:	ldr	r1, [r1]
   2fe30:	cmp	r0, r1
   2fe34:	bge	2fe88 <__assert_fail@plt+0x1e734>
   2fe38:	ldr	r0, [sp, #4]
   2fe3c:	ldr	r0, [r0, #8]
   2fe40:	ldr	r1, [sp]
   2fe44:	movw	r2, #24
   2fe48:	mul	r1, r1, r2
   2fe4c:	add	r0, r0, r1
   2fe50:	ldr	r0, [r0, #20]
   2fe54:	bl	1604c <__assert_fail@plt+0x48f8>
   2fe58:	ldr	r0, [sp, #4]
   2fe5c:	ldr	r0, [r0, #8]
   2fe60:	ldr	r1, [sp]
   2fe64:	movw	r2, #24
   2fe68:	mul	r1, r1, r2
   2fe6c:	add	r0, r0, r1
   2fe70:	ldr	r0, [r0, #8]
   2fe74:	bl	1604c <__assert_fail@plt+0x48f8>
   2fe78:	ldr	r0, [sp]
   2fe7c:	add	r0, r0, #1
   2fe80:	str	r0, [sp]
   2fe84:	b	2fe24 <__assert_fail@plt+0x1e6d0>
   2fe88:	ldr	r0, [sp, #4]
   2fe8c:	ldr	r0, [r0, #8]
   2fe90:	bl	1604c <__assert_fail@plt+0x48f8>
   2fe94:	movw	r0, #0
   2fe98:	mov	sp, fp
   2fe9c:	pop	{fp, pc}
   2fea0:	sub	sp, sp, #4
   2fea4:	str	r0, [sp]
   2fea8:	ldr	r0, [sp]
   2feac:	ldr	r0, [r0, #8]
   2feb0:	add	sp, sp, #4
   2feb4:	bx	lr
   2feb8:	push	{fp, lr}
   2febc:	mov	fp, sp
   2fec0:	sub	sp, sp, #40	; 0x28
   2fec4:	ldr	ip, [fp, #12]
   2fec8:	ldr	lr, [fp, #8]
   2fecc:	str	r0, [fp, #-4]
   2fed0:	str	r1, [fp, #-8]
   2fed4:	str	r2, [fp, #-12]
   2fed8:	str	r3, [fp, #-16]
   2fedc:	ldr	r0, [fp, #-4]
   2fee0:	ldr	r0, [r0]
   2fee4:	ldr	r1, [fp, #-16]
   2fee8:	add	r0, r0, r1, lsl #3
   2feec:	ldr	r0, [r0, #4]
   2fef0:	and	r0, r0, #255	; 0xff
   2fef4:	str	r0, [sp, #20]
   2fef8:	ldr	r0, [sp, #20]
   2fefc:	cmp	r0, #8
   2ff00:	str	lr, [sp, #8]
   2ff04:	str	ip, [sp, #4]
   2ff08:	bne	2ff60 <__assert_fail@plt+0x1e80c>
   2ff0c:	ldr	r0, [fp, #-4]
   2ff10:	ldr	r0, [r0]
   2ff14:	ldr	r1, [fp, #-16]
   2ff18:	add	r0, r0, r1, lsl #3
   2ff1c:	ldr	r0, [r0]
   2ff20:	add	r0, r0, #1
   2ff24:	str	r0, [sp, #16]
   2ff28:	ldr	r0, [sp, #16]
   2ff2c:	ldr	r1, [fp, #12]
   2ff30:	cmp	r0, r1
   2ff34:	bge	2ff5c <__assert_fail@plt+0x1e808>
   2ff38:	ldr	r0, [fp, #8]
   2ff3c:	ldr	r1, [fp, #-8]
   2ff40:	ldr	r2, [sp, #16]
   2ff44:	str	r0, [r1, r2, lsl #3]
   2ff48:	ldr	r0, [fp, #-8]
   2ff4c:	ldr	r1, [sp, #16]
   2ff50:	add	r0, r0, r1, lsl #3
   2ff54:	mvn	r1, #0
   2ff58:	str	r1, [r0, #4]
   2ff5c:	b	30058 <__assert_fail@plt+0x1e904>
   2ff60:	ldr	r0, [sp, #20]
   2ff64:	cmp	r0, #9
   2ff68:	bne	30054 <__assert_fail@plt+0x1e900>
   2ff6c:	ldr	r0, [fp, #-4]
   2ff70:	ldr	r0, [r0]
   2ff74:	ldr	r1, [fp, #-16]
   2ff78:	add	r0, r0, r1, lsl #3
   2ff7c:	ldr	r0, [r0]
   2ff80:	add	r0, r0, #1
   2ff84:	str	r0, [sp, #12]
   2ff88:	ldr	r0, [sp, #12]
   2ff8c:	ldr	r1, [fp, #12]
   2ff90:	cmp	r0, r1
   2ff94:	bge	30050 <__assert_fail@plt+0x1e8fc>
   2ff98:	ldr	r0, [fp, #-8]
   2ff9c:	ldr	r1, [sp, #12]
   2ffa0:	add	r0, r0, r1, lsl #3
   2ffa4:	ldr	r0, [r0]
   2ffa8:	ldr	r1, [fp, #8]
   2ffac:	cmp	r0, r1
   2ffb0:	bge	2ffe0 <__assert_fail@plt+0x1e88c>
   2ffb4:	ldr	r0, [fp, #8]
   2ffb8:	ldr	r1, [fp, #-8]
   2ffbc:	ldr	r2, [sp, #12]
   2ffc0:	add	r1, r1, r2, lsl #3
   2ffc4:	str	r0, [r1, #4]
   2ffc8:	ldr	r0, [fp, #-12]
   2ffcc:	ldr	r1, [fp, #-8]
   2ffd0:	ldr	r2, [fp, #12]
   2ffd4:	lsl	r2, r2, #3
   2ffd8:	bl	11478 <memcpy@plt>
   2ffdc:	b	3004c <__assert_fail@plt+0x1e8f8>
   2ffe0:	ldr	r0, [fp, #-4]
   2ffe4:	ldr	r0, [r0]
   2ffe8:	ldr	r1, [fp, #-16]
   2ffec:	add	r0, r0, r1, lsl #3
   2fff0:	ldr	r0, [r0, #4]
   2fff4:	lsr	r0, r0, #19
   2fff8:	and	r0, r0, #1
   2fffc:	cmp	r0, #0
   30000:	beq	30034 <__assert_fail@plt+0x1e8e0>
   30004:	ldr	r0, [fp, #-12]
   30008:	ldr	r1, [sp, #12]
   3000c:	add	r0, r0, r1, lsl #3
   30010:	ldr	r0, [r0]
   30014:	cmn	r0, #1
   30018:	beq	30034 <__assert_fail@plt+0x1e8e0>
   3001c:	ldr	r0, [fp, #-8]
   30020:	ldr	r1, [fp, #-12]
   30024:	ldr	r2, [fp, #12]
   30028:	lsl	r2, r2, #3
   3002c:	bl	11478 <memcpy@plt>
   30030:	b	30048 <__assert_fail@plt+0x1e8f4>
   30034:	ldr	r0, [fp, #8]
   30038:	ldr	r1, [fp, #-8]
   3003c:	ldr	r2, [sp, #12]
   30040:	add	r1, r1, r2, lsl #3
   30044:	str	r0, [r1, #4]
   30048:	b	3004c <__assert_fail@plt+0x1e8f8>
   3004c:	b	30050 <__assert_fail@plt+0x1e8fc>
   30050:	b	30054 <__assert_fail@plt+0x1e900>
   30054:	b	30058 <__assert_fail@plt+0x1e904>
   30058:	mov	sp, fp
   3005c:	pop	{fp, pc}
   30060:	push	{fp, lr}
   30064:	mov	fp, sp
   30068:	sub	sp, sp, #40	; 0x28
   3006c:	ldr	ip, [fp, #12]
   30070:	ldr	lr, [fp, #8]
   30074:	str	r0, [fp, #-8]
   30078:	str	r1, [fp, #-12]
   3007c:	str	r2, [fp, #-16]
   30080:	str	r3, [sp, #20]
   30084:	ldr	r0, [fp, #-8]
   30088:	movw	r1, #0
   3008c:	cmp	r0, r1
   30090:	str	lr, [sp, #12]
   30094:	str	ip, [sp, #8]
   30098:	beq	300ac <__assert_fail@plt+0x1e958>
   3009c:	ldr	r0, [fp, #-8]
   300a0:	ldr	r0, [r0]
   300a4:	cmp	r0, #0
   300a8:	bne	300b8 <__assert_fail@plt+0x1e964>
   300ac:	mvn	r0, #0
   300b0:	str	r0, [fp, #-4]
   300b4:	b	301f4 <__assert_fail@plt+0x1eaa0>
   300b8:	ldr	r0, [fp, #-8]
   300bc:	ldr	r1, [r0]
   300c0:	sub	r1, r1, #1
   300c4:	str	r1, [r0]
   300c8:	str	r1, [sp, #16]
   300cc:	ldr	r0, [fp, #-8]
   300d0:	ldr	r0, [r0, #8]
   300d4:	ldr	r1, [sp, #16]
   300d8:	add	r1, r1, r1, lsl #1
   300dc:	ldr	r0, [r0, r1, lsl #3]
   300e0:	ldr	r1, [fp, #-12]
   300e4:	str	r0, [r1]
   300e8:	ldr	r0, [sp, #20]
   300ec:	ldr	r1, [fp, #-8]
   300f0:	ldr	r1, [r1, #8]
   300f4:	ldr	r2, [sp, #16]
   300f8:	add	r2, r2, r2, lsl #1
   300fc:	add	r1, r1, r2, lsl #3
   30100:	ldr	r1, [r1, #8]
   30104:	ldr	r2, [fp, #-16]
   30108:	lsl	r2, r2, #3
   3010c:	bl	11478 <memcpy@plt>
   30110:	ldr	r1, [fp, #8]
   30114:	ldr	r2, [fp, #-8]
   30118:	ldr	r2, [r2, #8]
   3011c:	ldr	lr, [sp, #16]
   30120:	add	lr, lr, lr, lsl #1
   30124:	add	r2, r2, lr, lsl #3
   30128:	ldr	r2, [r2, #8]
   3012c:	ldr	lr, [fp, #-16]
   30130:	add	r2, r2, lr, lsl #3
   30134:	lsl	lr, lr, #3
   30138:	str	r0, [sp, #4]
   3013c:	mov	r0, r1
   30140:	mov	r1, r2
   30144:	mov	r2, lr
   30148:	bl	11478 <memcpy@plt>
   3014c:	ldr	r0, [fp, #12]
   30150:	ldr	r0, [r0, #8]
   30154:	bl	1604c <__assert_fail@plt+0x48f8>
   30158:	ldr	r0, [fp, #-8]
   3015c:	ldr	r0, [r0, #8]
   30160:	ldr	r1, [sp, #16]
   30164:	movw	r2, #24
   30168:	mul	r1, r1, r2
   3016c:	add	r0, r0, r1
   30170:	ldr	r0, [r0, #8]
   30174:	bl	1604c <__assert_fail@plt+0x48f8>
   30178:	ldr	r0, [fp, #12]
   3017c:	ldr	r1, [fp, #-8]
   30180:	ldr	r1, [r1, #8]
   30184:	ldr	r2, [sp, #16]
   30188:	movw	lr, #24
   3018c:	mul	r2, r2, lr
   30190:	add	r1, r1, r2
   30194:	ldr	r2, [r1, #12]
   30198:	str	r2, [r0]
   3019c:	ldr	r2, [r1, #16]
   301a0:	str	r2, [r0, #4]
   301a4:	ldr	r1, [r1, #20]
   301a8:	str	r1, [r0, #8]
   301ac:	ldr	r0, [fp, #-8]
   301b0:	ldr	r0, [r0, #8]
   301b4:	ldr	r1, [sp, #16]
   301b8:	mul	r1, r1, lr
   301bc:	add	r0, r0, r1
   301c0:	ldr	r0, [r0, #4]
   301c4:	movw	r1, #0
   301c8:	cmp	r1, r0
   301cc:	bgt	301d4 <__assert_fail@plt+0x1ea80>
   301d0:	b	301d4 <__assert_fail@plt+0x1ea80>
   301d4:	ldr	r0, [fp, #-8]
   301d8:	ldr	r0, [r0, #8]
   301dc:	ldr	r1, [sp, #16]
   301e0:	movw	r2, #24
   301e4:	mul	r1, r1, r2
   301e8:	add	r0, r0, r1
   301ec:	ldr	r0, [r0, #4]
   301f0:	str	r0, [fp, #-4]
   301f4:	ldr	r0, [fp, #-4]
   301f8:	mov	sp, fp
   301fc:	pop	{fp, pc}
   30200:	push	{r4, r5, fp, lr}
   30204:	add	fp, sp, #8
   30208:	sub	sp, sp, #112	; 0x70
   3020c:	ldr	ip, [fp, #20]
   30210:	ldr	lr, [fp, #16]
   30214:	ldr	r4, [fp, #12]
   30218:	ldr	r5, [fp, #8]
   3021c:	str	r0, [fp, #-16]
   30220:	str	r1, [fp, #-20]	; 0xffffffec
   30224:	str	r2, [fp, #-24]	; 0xffffffe8
   30228:	str	r3, [fp, #-28]	; 0xffffffe4
   3022c:	ldr	r0, [fp, #-16]
   30230:	ldr	r0, [r0, #84]	; 0x54
   30234:	str	r0, [fp, #-32]	; 0xffffffe0
   30238:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3023c:	ldr	r0, [r0]
   30240:	ldr	r1, [fp, #12]
   30244:	add	r0, r0, r1, lsl #3
   30248:	ldr	r0, [r0, #4]
   3024c:	and	r0, r0, #255	; 0xff
   30250:	and	r0, r0, #8
   30254:	cmp	r0, #0
   30258:	str	r5, [sp, #32]
   3025c:	str	ip, [sp, #28]
   30260:	str	lr, [sp, #24]
   30264:	str	r4, [sp, #20]
   30268:	beq	303fc <__assert_fail@plt+0x1eca8>
   3026c:	ldr	r0, [fp, #-16]
   30270:	ldr	r0, [r0, #100]	; 0x64
   30274:	ldr	r1, [fp, #8]
   30278:	ldr	r1, [r1]
   3027c:	add	r0, r0, r1, lsl #2
   30280:	ldr	r0, [r0]
   30284:	add	r0, r0, #4
   30288:	str	r0, [fp, #-36]	; 0xffffffdc
   3028c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30290:	ldr	r0, [r0, #20]
   30294:	ldr	r1, [fp, #12]
   30298:	movw	r2, #12
   3029c:	mul	r1, r1, r2
   302a0:	add	r0, r0, r1
   302a4:	str	r0, [fp, #-40]	; 0xffffffd8
   302a8:	ldr	r0, [fp, #16]
   302ac:	ldr	r1, [fp, #12]
   302b0:	bl	25f04 <__assert_fail@plt+0x147b0>
   302b4:	cmp	r0, #0
   302b8:	bne	302f4 <__assert_fail@plt+0x1eba0>
   302bc:	ldr	r0, [fp, #16]
   302c0:	ldr	r1, [fp, #12]
   302c4:	bl	25a48 <__assert_fail@plt+0x142f4>
   302c8:	and	r0, r0, #1
   302cc:	strb	r0, [fp, #-41]	; 0xffffffd7
   302d0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   302d4:	mvn	r1, #0
   302d8:	eor	r0, r0, r1
   302dc:	tst	r0, #1
   302e0:	beq	302f0 <__assert_fail@plt+0x1eb9c>
   302e4:	mvn	r0, #1
   302e8:	str	r0, [fp, #-12]
   302ec:	b	30770 <__assert_fail@plt+0x1f01c>
   302f0:	b	302f4 <__assert_fail@plt+0x1eba0>
   302f4:	mvn	r0, #0
   302f8:	str	r0, [fp, #-48]	; 0xffffffd0
   302fc:	movw	r0, #0
   30300:	str	r0, [fp, #-52]	; 0xffffffcc
   30304:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30308:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3030c:	ldr	r1, [r1, #4]
   30310:	cmp	r0, r1
   30314:	bge	303f0 <__assert_fail@plt+0x1ec9c>
   30318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3031c:	ldr	r0, [r0, #8]
   30320:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30324:	add	r0, r0, r1, lsl #2
   30328:	ldr	r0, [r0]
   3032c:	str	r0, [fp, #-56]	; 0xffffffc8
   30330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30334:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30338:	bl	25f04 <__assert_fail@plt+0x147b0>
   3033c:	cmp	r0, #0
   30340:	bne	30348 <__assert_fail@plt+0x1ebf4>
   30344:	b	303e0 <__assert_fail@plt+0x1ec8c>
   30348:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3034c:	cmn	r0, #1
   30350:	bne	30360 <__assert_fail@plt+0x1ec0c>
   30354:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30358:	str	r0, [fp, #-48]	; 0xffffffd0
   3035c:	b	303dc <__assert_fail@plt+0x1ec88>
   30360:	ldr	r0, [fp, #16]
   30364:	ldr	r1, [fp, #-48]	; 0xffffffd0
   30368:	bl	25f04 <__assert_fail@plt+0x147b0>
   3036c:	cmp	r0, #0
   30370:	beq	30380 <__assert_fail@plt+0x1ec2c>
   30374:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30378:	str	r0, [fp, #-12]
   3037c:	b	30770 <__assert_fail@plt+0x1f01c>
   30380:	ldr	r0, [fp, #20]
   30384:	movw	r1, #0
   30388:	cmp	r0, r1
   3038c:	beq	303d4 <__assert_fail@plt+0x1ec80>
   30390:	ldr	r0, [fp, #20]
   30394:	ldr	r1, [fp, #8]
   30398:	ldr	r1, [r1]
   3039c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   303a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   303a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   303a8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   303ac:	ldr	r4, [fp, #16]
   303b0:	str	ip, [sp]
   303b4:	str	lr, [sp, #4]
   303b8:	str	r4, [sp, #8]
   303bc:	bl	30830 <__assert_fail@plt+0x1f0dc>
   303c0:	cmp	r0, #0
   303c4:	beq	303d4 <__assert_fail@plt+0x1ec80>
   303c8:	mvn	r0, #1
   303cc:	str	r0, [fp, #-12]
   303d0:	b	30770 <__assert_fail@plt+0x1f01c>
   303d4:	b	303d8 <__assert_fail@plt+0x1ec84>
   303d8:	b	303f0 <__assert_fail@plt+0x1ec9c>
   303dc:	b	303e0 <__assert_fail@plt+0x1ec8c>
   303e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   303e4:	add	r0, r0, #1
   303e8:	str	r0, [fp, #-52]	; 0xffffffcc
   303ec:	b	30304 <__assert_fail@plt+0x1ebb0>
   303f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   303f4:	str	r0, [fp, #-12]
   303f8:	b	30770 <__assert_fail@plt+0x1f01c>
   303fc:	mov	r0, #0
   30400:	str	r0, [sp, #60]	; 0x3c
   30404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30408:	ldr	r0, [r0]
   3040c:	ldr	r1, [fp, #12]
   30410:	add	r0, r0, r1, lsl #3
   30414:	ldrb	r0, [r0, #4]
   30418:	str	r0, [sp, #56]	; 0x38
   3041c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30420:	ldr	r0, [r0]
   30424:	ldr	r1, [fp, #12]
   30428:	add	r0, r0, r1, lsl #3
   3042c:	ldr	r0, [r0, #4]
   30430:	lsr	r0, r0, #20
   30434:	and	r0, r0, #1
   30438:	cmp	r0, #0
   3043c:	beq	30460 <__assert_fail@plt+0x1ed0c>
   30440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30444:	ldr	r1, [fp, #12]
   30448:	ldr	r2, [fp, #-16]
   3044c:	ldr	r3, [fp, #8]
   30450:	ldr	r3, [r3]
   30454:	bl	2bf90 <__assert_fail@plt+0x1a83c>
   30458:	str	r0, [sp, #60]	; 0x3c
   3045c:	b	3063c <__assert_fail@plt+0x1eee8>
   30460:	ldr	r0, [sp, #56]	; 0x38
   30464:	cmp	r0, #4
   30468:	bne	30638 <__assert_fail@plt+0x1eee4>
   3046c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30470:	ldr	r0, [r0]
   30474:	ldr	r1, [fp, #12]
   30478:	add	r0, r0, r1, lsl #3
   3047c:	ldr	r0, [r0]
   30480:	add	r0, r0, #1
   30484:	str	r0, [sp, #52]	; 0x34
   30488:	ldr	r0, [sp, #52]	; 0x34
   3048c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30490:	cmp	r0, r1
   30494:	bge	304b4 <__assert_fail@plt+0x1ed60>
   30498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3049c:	ldr	r1, [sp, #52]	; 0x34
   304a0:	add	r0, r0, r1, lsl #3
   304a4:	ldr	r1, [r0, #4]
   304a8:	ldr	r0, [r0]
   304ac:	sub	r0, r1, r0
   304b0:	str	r0, [sp, #60]	; 0x3c
   304b4:	ldr	r0, [fp, #20]
   304b8:	movw	r1, #0
   304bc:	cmp	r0, r1
   304c0:	beq	30598 <__assert_fail@plt+0x1ee44>
   304c4:	ldr	r0, [sp, #52]	; 0x34
   304c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   304cc:	cmp	r0, r1
   304d0:	bge	30504 <__assert_fail@plt+0x1edb0>
   304d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   304d8:	ldr	r1, [sp, #52]	; 0x34
   304dc:	add	r0, r0, r1, lsl #3
   304e0:	ldr	r0, [r0]
   304e4:	cmn	r0, #1
   304e8:	beq	30504 <__assert_fail@plt+0x1edb0>
   304ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   304f0:	ldr	r1, [sp, #52]	; 0x34
   304f4:	add	r0, r0, r1, lsl #3
   304f8:	ldr	r0, [r0, #4]
   304fc:	cmn	r0, #1
   30500:	bne	30510 <__assert_fail@plt+0x1edbc>
   30504:	mvn	r0, #0
   30508:	str	r0, [fp, #-12]
   3050c:	b	30770 <__assert_fail@plt+0x1f01c>
   30510:	ldr	r0, [sp, #60]	; 0x3c
   30514:	cmp	r0, #0
   30518:	beq	30590 <__assert_fail@plt+0x1ee3c>
   3051c:	ldr	r0, [fp, #-16]
   30520:	ldr	r0, [r0, #4]
   30524:	str	r0, [sp, #48]	; 0x30
   30528:	ldr	r0, [fp, #-16]
   3052c:	ldr	r0, [r0, #28]
   30530:	ldr	r1, [fp, #8]
   30534:	ldr	r1, [r1]
   30538:	sub	r0, r0, r1
   3053c:	ldr	r1, [sp, #60]	; 0x3c
   30540:	cmp	r0, r1
   30544:	blt	30580 <__assert_fail@plt+0x1ee2c>
   30548:	ldr	r0, [sp, #48]	; 0x30
   3054c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30550:	ldr	r2, [sp, #52]	; 0x34
   30554:	add	r1, r1, r2, lsl #3
   30558:	ldr	r1, [r1]
   3055c:	add	r0, r0, r1
   30560:	ldr	r1, [sp, #48]	; 0x30
   30564:	ldr	r2, [fp, #8]
   30568:	ldr	r2, [r2]
   3056c:	add	r1, r1, r2
   30570:	ldr	r2, [sp, #60]	; 0x3c
   30574:	bl	114cc <memcmp@plt>
   30578:	cmp	r0, #0
   3057c:	beq	3058c <__assert_fail@plt+0x1ee38>
   30580:	mvn	r0, #0
   30584:	str	r0, [fp, #-12]
   30588:	b	30770 <__assert_fail@plt+0x1f01c>
   3058c:	b	30590 <__assert_fail@plt+0x1ee3c>
   30590:	b	30594 <__assert_fail@plt+0x1ee40>
   30594:	b	30598 <__assert_fail@plt+0x1ee44>
   30598:	ldr	r0, [sp, #60]	; 0x3c
   3059c:	cmp	r0, #0
   305a0:	bne	30634 <__assert_fail@plt+0x1eee0>
   305a4:	ldr	r0, [fp, #16]
   305a8:	ldr	r1, [fp, #12]
   305ac:	bl	25a48 <__assert_fail@plt+0x142f4>
   305b0:	and	r0, r0, #1
   305b4:	strb	r0, [sp, #43]	; 0x2b
   305b8:	ldrb	r0, [sp, #43]	; 0x2b
   305bc:	mvn	r1, #0
   305c0:	eor	r0, r0, r1
   305c4:	tst	r0, #1
   305c8:	beq	305d8 <__assert_fail@plt+0x1ee84>
   305cc:	mvn	r0, #1
   305d0:	str	r0, [fp, #-12]
   305d4:	b	30770 <__assert_fail@plt+0x1f01c>
   305d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   305dc:	ldr	r0, [r0, #20]
   305e0:	ldr	r1, [fp, #12]
   305e4:	add	r1, r1, r1, lsl #1
   305e8:	add	r0, r0, r1, lsl #2
   305ec:	ldr	r0, [r0, #8]
   305f0:	ldr	r0, [r0]
   305f4:	str	r0, [sp, #44]	; 0x2c
   305f8:	ldr	r0, [fp, #-16]
   305fc:	ldr	r0, [r0, #100]	; 0x64
   30600:	ldr	r1, [fp, #8]
   30604:	ldr	r1, [r1]
   30608:	add	r0, r0, r1, lsl #2
   3060c:	ldr	r0, [r0]
   30610:	add	r0, r0, #4
   30614:	ldr	r1, [sp, #44]	; 0x2c
   30618:	bl	25f04 <__assert_fail@plt+0x147b0>
   3061c:	cmp	r0, #0
   30620:	beq	30630 <__assert_fail@plt+0x1eedc>
   30624:	ldr	r0, [sp, #44]	; 0x2c
   30628:	str	r0, [fp, #-12]
   3062c:	b	30770 <__assert_fail@plt+0x1f01c>
   30630:	b	30634 <__assert_fail@plt+0x1eee0>
   30634:	b	30638 <__assert_fail@plt+0x1eee4>
   30638:	b	3063c <__assert_fail@plt+0x1eee8>
   3063c:	ldr	r0, [sp, #60]	; 0x3c
   30640:	cmp	r0, #0
   30644:	bne	30670 <__assert_fail@plt+0x1ef1c>
   30648:	ldr	r0, [fp, #-16]
   3064c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30650:	ldr	r1, [r1]
   30654:	ldr	r2, [fp, #12]
   30658:	add	r1, r1, r2, lsl #3
   3065c:	ldr	r2, [fp, #8]
   30660:	ldr	r2, [r2]
   30664:	bl	2c578 <__assert_fail@plt+0x1ae24>
   30668:	tst	r0, #1
   3066c:	beq	30764 <__assert_fail@plt+0x1f010>
   30670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30674:	ldr	r0, [r0, #12]
   30678:	ldr	r1, [fp, #12]
   3067c:	add	r0, r0, r1, lsl #2
   30680:	ldr	r0, [r0]
   30684:	str	r0, [sp, #36]	; 0x24
   30688:	ldr	r0, [sp, #60]	; 0x3c
   3068c:	cmp	r0, #0
   30690:	bne	306a8 <__assert_fail@plt+0x1ef54>
   30694:	ldr	r0, [fp, #8]
   30698:	ldr	r0, [r0]
   3069c:	add	r0, r0, #1
   306a0:	str	r0, [sp, #16]
   306a4:	b	306bc <__assert_fail@plt+0x1ef68>
   306a8:	ldr	r0, [fp, #8]
   306ac:	ldr	r0, [r0]
   306b0:	ldr	r1, [sp, #60]	; 0x3c
   306b4:	add	r0, r0, r1
   306b8:	str	r0, [sp, #16]
   306bc:	ldr	r0, [sp, #16]
   306c0:	ldr	r1, [fp, #8]
   306c4:	str	r0, [r1]
   306c8:	ldr	r0, [fp, #20]
   306cc:	movw	r1, #0
   306d0:	cmp	r0, r1
   306d4:	beq	3074c <__assert_fail@plt+0x1eff8>
   306d8:	ldr	r0, [fp, #8]
   306dc:	ldr	r0, [r0]
   306e0:	ldr	r1, [fp, #-16]
   306e4:	ldr	r1, [r1, #92]	; 0x5c
   306e8:	cmp	r0, r1
   306ec:	bgt	30740 <__assert_fail@plt+0x1efec>
   306f0:	ldr	r0, [fp, #-16]
   306f4:	ldr	r0, [r0, #100]	; 0x64
   306f8:	ldr	r1, [fp, #8]
   306fc:	ldr	r1, [r1]
   30700:	add	r0, r0, r1, lsl #2
   30704:	ldr	r0, [r0]
   30708:	movw	r1, #0
   3070c:	cmp	r0, r1
   30710:	beq	30740 <__assert_fail@plt+0x1efec>
   30714:	ldr	r0, [fp, #-16]
   30718:	ldr	r0, [r0, #100]	; 0x64
   3071c:	ldr	r1, [fp, #8]
   30720:	ldr	r1, [r1]
   30724:	add	r0, r0, r1, lsl #2
   30728:	ldr	r0, [r0]
   3072c:	add	r0, r0, #4
   30730:	ldr	r1, [sp, #36]	; 0x24
   30734:	bl	25f04 <__assert_fail@plt+0x147b0>
   30738:	cmp	r0, #0
   3073c:	bne	3074c <__assert_fail@plt+0x1eff8>
   30740:	mvn	r0, #0
   30744:	str	r0, [fp, #-12]
   30748:	b	30770 <__assert_fail@plt+0x1f01c>
   3074c:	ldr	r0, [fp, #16]
   30750:	movw	r1, #0
   30754:	str	r1, [r0, #4]
   30758:	ldr	r0, [sp, #36]	; 0x24
   3075c:	str	r0, [fp, #-12]
   30760:	b	30770 <__assert_fail@plt+0x1f01c>
   30764:	b	30768 <__assert_fail@plt+0x1f014>
   30768:	mvn	r0, #0
   3076c:	str	r0, [fp, #-12]
   30770:	ldr	r0, [fp, #-12]
   30774:	sub	sp, fp, #8
   30778:	pop	{r4, r5, fp, pc}
   3077c:	push	{fp, lr}
   30780:	mov	fp, sp
   30784:	sub	sp, sp, #8
   30788:	str	r0, [sp, #4]
   3078c:	ldr	r0, [sp, #4]
   30790:	ldr	r0, [r0, #8]
   30794:	ldr	r1, [sp, #4]
   30798:	ldr	r1, [r1]
   3079c:	bl	307d8 <__assert_fail@plt+0x1f084>
   307a0:	ldr	r0, [sp, #4]
   307a4:	bl	307ec <__assert_fail@plt+0x1f098>
   307a8:	ldr	r0, [sp, #4]
   307ac:	add	r0, r0, #12
   307b0:	ldr	r1, [sp, #4]
   307b4:	str	r0, [r1, #8]
   307b8:	ldr	r0, [sp, #4]
   307bc:	movw	r1, #0
   307c0:	str	r1, [r0]
   307c4:	bl	30828 <__assert_fail@plt+0x1f0d4>
   307c8:	ldr	r1, [sp, #4]
   307cc:	str	r0, [r1, #4]
   307d0:	mov	sp, fp
   307d4:	pop	{fp, pc}
   307d8:	sub	sp, sp, #8
   307dc:	str	r0, [sp, #4]
   307e0:	str	r1, [sp]
   307e4:	add	sp, sp, #8
   307e8:	bx	lr
   307ec:	push	{fp, lr}
   307f0:	mov	fp, sp
   307f4:	sub	sp, sp, #8
   307f8:	str	r0, [sp, #4]
   307fc:	ldr	r0, [sp, #4]
   30800:	ldr	r0, [r0, #8]
   30804:	ldr	r1, [sp, #4]
   30808:	add	r1, r1, #12
   3080c:	cmp	r0, r1
   30810:	beq	30820 <__assert_fail@plt+0x1f0cc>
   30814:	ldr	r0, [sp, #4]
   30818:	ldr	r0, [r0, #8]
   3081c:	bl	1604c <__assert_fail@plt+0x48f8>
   30820:	mov	sp, fp
   30824:	pop	{fp, pc}
   30828:	mvn	r0, #0
   3082c:	bx	lr
   30830:	push	{r4, sl, fp, lr}
   30834:	add	fp, sp, #8
   30838:	sub	sp, sp, #56	; 0x38
   3083c:	ldr	ip, [fp, #16]
   30840:	ldr	lr, [fp, #12]
   30844:	ldr	r4, [fp, #8]
   30848:	str	r0, [fp, #-16]
   3084c:	str	r1, [fp, #-20]	; 0xffffffec
   30850:	str	r2, [fp, #-24]	; 0xffffffe8
   30854:	str	r3, [fp, #-28]	; 0xffffffe4
   30858:	ldr	r0, [fp, #-16]
   3085c:	ldr	r1, [r0]
   30860:	add	r2, r1, #1
   30864:	str	r2, [r0]
   30868:	str	r1, [sp, #28]
   3086c:	ldr	r0, [fp, #-16]
   30870:	ldr	r0, [r0]
   30874:	ldr	r1, [fp, #-16]
   30878:	ldr	r1, [r1, #4]
   3087c:	cmp	r0, r1
   30880:	str	r4, [sp, #20]
   30884:	str	lr, [sp, #16]
   30888:	str	ip, [sp, #12]
   3088c:	bne	308e8 <__assert_fail@plt+0x1f194>
   30890:	ldr	r0, [fp, #-16]
   30894:	ldr	r1, [r0, #4]
   30898:	ldr	r0, [r0, #8]
   3089c:	lsl	r1, r1, #1
   308a0:	movw	r2, #24
   308a4:	mul	r1, r1, r2
   308a8:	bl	38aec <__assert_fail@plt+0x27398>
   308ac:	str	r0, [sp, #24]
   308b0:	ldr	r0, [sp, #24]
   308b4:	movw	r1, #0
   308b8:	cmp	r0, r1
   308bc:	bne	308cc <__assert_fail@plt+0x1f178>
   308c0:	movw	r0, #12
   308c4:	str	r0, [fp, #-12]
   308c8:	b	30a0c <__assert_fail@plt+0x1f2b8>
   308cc:	ldr	r0, [fp, #-16]
   308d0:	ldr	r1, [r0, #4]
   308d4:	lsl	r1, r1, #1
   308d8:	str	r1, [r0, #4]
   308dc:	ldr	r0, [sp, #24]
   308e0:	ldr	r1, [fp, #-16]
   308e4:	str	r0, [r1, #8]
   308e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   308ec:	ldr	r1, [fp, #-16]
   308f0:	ldr	r1, [r1, #8]
   308f4:	ldr	r2, [sp, #28]
   308f8:	add	r2, r2, r2, lsl #1
   308fc:	str	r0, [r1, r2, lsl #3]
   30900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30904:	ldr	r1, [fp, #-16]
   30908:	ldr	r1, [r1, #8]
   3090c:	ldr	r2, [sp, #28]
   30910:	add	r2, r2, r2, lsl #1
   30914:	add	r1, r1, r2, lsl #3
   30918:	str	r0, [r1, #4]
   3091c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30920:	lsl	r1, r0, #1
   30924:	lsl	r0, r0, #4
   30928:	str	r1, [sp, #8]
   3092c:	bl	38a7c <__assert_fail@plt+0x27328>
   30930:	ldr	r1, [fp, #-16]
   30934:	ldr	r1, [r1, #8]
   30938:	ldr	r2, [sp, #28]
   3093c:	movw	lr, #24
   30940:	mul	r2, r2, lr
   30944:	add	r1, r1, r2
   30948:	str	r0, [r1, #8]
   3094c:	ldr	r0, [fp, #-16]
   30950:	ldr	r0, [r0, #8]
   30954:	ldr	r1, [sp, #28]
   30958:	mul	r1, r1, lr
   3095c:	add	r0, r0, r1
   30960:	ldr	r0, [r0, #8]
   30964:	movw	r1, #0
   30968:	cmp	r0, r1
   3096c:	bne	3097c <__assert_fail@plt+0x1f228>
   30970:	movw	r0, #12
   30974:	str	r0, [fp, #-12]
   30978:	b	30a0c <__assert_fail@plt+0x1f2b8>
   3097c:	ldr	r0, [fp, #-16]
   30980:	ldr	r0, [r0, #8]
   30984:	ldr	r1, [sp, #28]
   30988:	add	r1, r1, r1, lsl #1
   3098c:	add	r0, r0, r1, lsl #3
   30990:	ldr	r0, [r0, #8]
   30994:	ldr	r1, [fp, #8]
   30998:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3099c:	lsl	r2, r2, #3
   309a0:	bl	11478 <memcpy@plt>
   309a4:	ldr	r1, [fp, #-16]
   309a8:	ldr	r1, [r1, #8]
   309ac:	ldr	r2, [sp, #28]
   309b0:	add	r2, r2, r2, lsl #1
   309b4:	add	r1, r1, r2, lsl #3
   309b8:	ldr	r1, [r1, #8]
   309bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   309c0:	add	r1, r1, r2, lsl #3
   309c4:	lsl	r2, r2, #3
   309c8:	ldr	lr, [fp, #12]
   309cc:	str	r0, [sp, #4]
   309d0:	mov	r0, r1
   309d4:	mov	r1, lr
   309d8:	bl	11478 <memcpy@plt>
   309dc:	ldr	r0, [fp, #-16]
   309e0:	ldr	r0, [r0, #8]
   309e4:	ldr	r1, [sp, #28]
   309e8:	movw	r2, #24
   309ec:	mul	r1, r1, r2
   309f0:	add	r0, r0, r1
   309f4:	add	r0, r0, #12
   309f8:	ldr	r1, [fp, #16]
   309fc:	bl	25e30 <__assert_fail@plt+0x146dc>
   30a00:	str	r0, [sp, #32]
   30a04:	ldr	r0, [sp, #32]
   30a08:	str	r0, [fp, #-12]
   30a0c:	ldr	r0, [fp, #-12]
   30a10:	sub	sp, fp, #8
   30a14:	pop	{r4, sl, fp, pc}
   30a18:	push	{fp, lr}
   30a1c:	mov	fp, sp
   30a20:	sub	sp, sp, #24
   30a24:	str	r0, [fp, #-8]
   30a28:	str	r1, [sp, #12]
   30a2c:	str	r2, [sp, #8]
   30a30:	ldr	r0, [fp, #-8]
   30a34:	ldr	r1, [sp, #12]
   30a38:	ldr	r2, [sp, #8]
   30a3c:	bl	11418 <read@plt>
   30a40:	str	r0, [sp, #4]
   30a44:	ldr	r0, [sp, #4]
   30a48:	movw	r1, #0
   30a4c:	cmp	r1, r0
   30a50:	bgt	30a60 <__assert_fail@plt+0x1f30c>
   30a54:	ldr	r0, [sp, #4]
   30a58:	str	r0, [fp, #-4]
   30a5c:	b	30ab8 <__assert_fail@plt+0x1f364>
   30a60:	bl	11628 <__errno_location@plt>
   30a64:	ldr	r0, [r0]
   30a68:	cmp	r0, #4
   30a6c:	bne	30a74 <__assert_fail@plt+0x1f320>
   30a70:	b	30a30 <__assert_fail@plt+0x1f2dc>
   30a74:	bl	11628 <__errno_location@plt>
   30a78:	ldr	r0, [r0]
   30a7c:	cmp	r0, #22
   30a80:	bne	30aa0 <__assert_fail@plt+0x1f34c>
   30a84:	ldr	r0, [pc, #56]	; 30ac4 <__assert_fail@plt+0x1f370>
   30a88:	ldr	r1, [sp, #8]
   30a8c:	cmp	r0, r1
   30a90:	bcs	30aa0 <__assert_fail@plt+0x1f34c>
   30a94:	ldr	r0, [pc, #40]	; 30ac4 <__assert_fail@plt+0x1f370>
   30a98:	str	r0, [sp, #8]
   30a9c:	b	30aac <__assert_fail@plt+0x1f358>
   30aa0:	ldr	r0, [sp, #4]
   30aa4:	str	r0, [fp, #-4]
   30aa8:	b	30ab8 <__assert_fail@plt+0x1f364>
   30aac:	b	30ab0 <__assert_fail@plt+0x1f35c>
   30ab0:	b	30ab4 <__assert_fail@plt+0x1f360>
   30ab4:	b	30a30 <__assert_fail@plt+0x1f2dc>
   30ab8:	ldr	r0, [fp, #-4]
   30abc:	mov	sp, fp
   30ac0:	pop	{fp, pc}
   30ac4:	svcvc	0x00f00000	; IMB
   30ac8:	push	{fp, lr}
   30acc:	mov	fp, sp
   30ad0:	sub	sp, sp, #8
   30ad4:	str	r0, [sp, #4]
   30ad8:	ldr	r0, [sp, #4]
   30adc:	movw	r1, #0
   30ae0:	movw	r2, #3
   30ae4:	bl	3a1a0 <__assert_fail@plt+0x28a4c>
   30ae8:	mov	sp, fp
   30aec:	pop	{fp, pc}
   30af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30af4:	add	fp, sp, #28
   30af8:	sub	sp, sp, #260	; 0x104
   30afc:	ldr	ip, [fp, #12]
   30b00:	ldr	lr, [fp, #8]
   30b04:	str	r0, [fp, #-32]	; 0xffffffe0
   30b08:	str	r1, [fp, #-36]	; 0xffffffdc
   30b0c:	str	r2, [fp, #-40]	; 0xffffffd8
   30b10:	str	r3, [fp, #-44]	; 0xffffffd4
   30b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30b18:	movw	r1, #0
   30b1c:	cmp	r0, r1
   30b20:	str	lr, [fp, #-48]	; 0xffffffd0
   30b24:	str	ip, [fp, #-52]	; 0xffffffcc
   30b28:	beq	30b60 <__assert_fail@plt+0x1f40c>
   30b2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30b34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30b38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30b3c:	movw	ip, #54835	; 0xd633
   30b40:	movt	ip, #3
   30b44:	str	r1, [fp, #-56]	; 0xffffffc8
   30b48:	mov	r1, ip
   30b4c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   30b50:	str	ip, [sp]
   30b54:	bl	1161c <fprintf@plt>
   30b58:	str	r0, [fp, #-60]	; 0xffffffc4
   30b5c:	b	30b7c <__assert_fail@plt+0x1f428>
   30b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30b68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30b6c:	movw	r1, #54847	; 0xd63f
   30b70:	movt	r1, #3
   30b74:	bl	1161c <fprintf@plt>
   30b78:	str	r0, [fp, #-64]	; 0xffffffc0
   30b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b80:	movw	r1, #54854	; 0xd646
   30b84:	movt	r1, #3
   30b88:	str	r0, [fp, #-68]	; 0xffffffbc
   30b8c:	mov	r0, r1
   30b90:	bl	115f8 <gettext@plt>
   30b94:	movw	r1, #55572	; 0xd914
   30b98:	movt	r1, #3
   30b9c:	movw	r3, #2022	; 0x7e6
   30ba0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   30ba4:	str	r0, [fp, #-72]	; 0xffffffb8
   30ba8:	mov	r0, lr
   30bac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   30bb0:	bl	1161c <fprintf@plt>
   30bb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30bb8:	movw	r2, #52342	; 0xcc76
   30bbc:	movt	r2, #3
   30bc0:	str	r0, [fp, #-76]	; 0xffffffb4
   30bc4:	mov	r0, r2
   30bc8:	str	r2, [fp, #-80]	; 0xffffffb0
   30bcc:	bl	113c4 <fputs_unlocked@plt>
   30bd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30bd4:	movw	r2, #54858	; 0xd64a
   30bd8:	movt	r2, #3
   30bdc:	str	r0, [fp, #-84]	; 0xffffffac
   30be0:	mov	r0, r2
   30be4:	str	r1, [fp, #-88]	; 0xffffffa8
   30be8:	bl	115f8 <gettext@plt>
   30bec:	movw	r2, #55029	; 0xd6f5
   30bf0:	movt	r2, #3
   30bf4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   30bf8:	str	r0, [fp, #-92]	; 0xffffffa4
   30bfc:	mov	r0, r1
   30c00:	ldr	r1, [fp, #-92]	; 0xffffffa4
   30c04:	bl	1161c <fprintf@plt>
   30c08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30c0c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   30c10:	str	r0, [fp, #-96]	; 0xffffffa0
   30c14:	mov	r0, r2
   30c18:	bl	113c4 <fputs_unlocked@plt>
   30c1c:	ldr	r1, [fp, #12]
   30c20:	cmp	r1, #9
   30c24:	str	r0, [fp, #-100]	; 0xffffff9c
   30c28:	str	r1, [fp, #-104]	; 0xffffff98
   30c2c:	bhi	3106c <__assert_fail@plt+0x1f918>
   30c30:	add	r0, pc, #8
   30c34:	ldr	r1, [fp, #-104]	; 0xffffff98
   30c38:	ldr	r0, [r0, r1, lsl #2]
   30c3c:	mov	pc, r0
   30c40:	andeq	r0, r3, r8, ror #24
   30c44:	andeq	r0, r3, ip, ror #24
   30c48:	andeq	r0, r3, r8, lsr #25
   30c4c:	andeq	r0, r3, ip, ror #25
   30c50:	andeq	r0, r3, r8, asr #26
   30c54:			; <UNDEFINED> instruction: 0x00030db0
   30c58:	andeq	r0, r3, r4, lsr #28
   30c5c:	andeq	r0, r3, r4, lsr #29
   30c60:	andeq	r0, r3, r0, lsr pc
   30c64:	andeq	r0, r3, r8, asr #31
   30c68:	b	3110c <__assert_fail@plt+0x1f9b8>
   30c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30c70:	movw	r1, #55063	; 0xd717
   30c74:	movt	r1, #3
   30c78:	str	r0, [fp, #-108]	; 0xffffff94
   30c7c:	mov	r0, r1
   30c80:	bl	115f8 <gettext@plt>
   30c84:	ldr	r1, [fp, #8]
   30c88:	ldr	r2, [r1]
   30c8c:	ldr	r1, [fp, #-108]	; 0xffffff94
   30c90:	str	r0, [fp, #-112]	; 0xffffff90
   30c94:	mov	r0, r1
   30c98:	ldr	r1, [fp, #-112]	; 0xffffff90
   30c9c:	bl	1161c <fprintf@plt>
   30ca0:	str	r0, [fp, #-116]	; 0xffffff8c
   30ca4:	b	3110c <__assert_fail@plt+0x1f9b8>
   30ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30cac:	movw	r1, #55079	; 0xd727
   30cb0:	movt	r1, #3
   30cb4:	str	r0, [fp, #-120]	; 0xffffff88
   30cb8:	mov	r0, r1
   30cbc:	bl	115f8 <gettext@plt>
   30cc0:	ldr	r1, [fp, #8]
   30cc4:	ldr	r2, [r1]
   30cc8:	ldr	r1, [fp, #8]
   30ccc:	ldr	r3, [r1, #4]
   30cd0:	ldr	r1, [fp, #-120]	; 0xffffff88
   30cd4:	str	r0, [fp, #-124]	; 0xffffff84
   30cd8:	mov	r0, r1
   30cdc:	ldr	r1, [fp, #-124]	; 0xffffff84
   30ce0:	bl	1161c <fprintf@plt>
   30ce4:	str	r0, [fp, #-128]	; 0xffffff80
   30ce8:	b	3110c <__assert_fail@plt+0x1f9b8>
   30cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30cf0:	movw	r1, #55102	; 0xd73e
   30cf4:	movt	r1, #3
   30cf8:	str	r0, [fp, #-132]	; 0xffffff7c
   30cfc:	mov	r0, r1
   30d00:	bl	115f8 <gettext@plt>
   30d04:	ldr	r1, [fp, #8]
   30d08:	ldr	r2, [r1]
   30d0c:	ldr	r1, [fp, #8]
   30d10:	ldr	r3, [r1, #4]
   30d14:	ldr	r1, [fp, #8]
   30d18:	ldr	r1, [r1, #8]
   30d1c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   30d20:	str	r0, [fp, #-136]	; 0xffffff78
   30d24:	mov	r0, lr
   30d28:	ldr	ip, [fp, #-136]	; 0xffffff78
   30d2c:	str	r1, [fp, #-140]	; 0xffffff74
   30d30:	mov	r1, ip
   30d34:	ldr	r4, [fp, #-140]	; 0xffffff74
   30d38:	str	r4, [sp]
   30d3c:	bl	1161c <fprintf@plt>
   30d40:	str	r0, [sp, #144]	; 0x90
   30d44:	b	3110c <__assert_fail@plt+0x1f9b8>
   30d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d4c:	movw	r1, #55130	; 0xd75a
   30d50:	movt	r1, #3
   30d54:	str	r0, [sp, #140]	; 0x8c
   30d58:	mov	r0, r1
   30d5c:	bl	115f8 <gettext@plt>
   30d60:	ldr	r1, [fp, #8]
   30d64:	ldr	r2, [r1]
   30d68:	ldr	r1, [fp, #8]
   30d6c:	ldr	r3, [r1, #4]
   30d70:	ldr	r1, [fp, #8]
   30d74:	ldr	r1, [r1, #8]
   30d78:	ldr	lr, [fp, #8]
   30d7c:	ldr	lr, [lr, #12]
   30d80:	ldr	ip, [sp, #140]	; 0x8c
   30d84:	str	r0, [sp, #136]	; 0x88
   30d88:	mov	r0, ip
   30d8c:	ldr	r4, [sp, #136]	; 0x88
   30d90:	str	r1, [sp, #132]	; 0x84
   30d94:	mov	r1, r4
   30d98:	ldr	r5, [sp, #132]	; 0x84
   30d9c:	str	r5, [sp]
   30da0:	str	lr, [sp, #4]
   30da4:	bl	1161c <fprintf@plt>
   30da8:	str	r0, [sp, #128]	; 0x80
   30dac:	b	3110c <__assert_fail@plt+0x1f9b8>
   30db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30db4:	movw	r1, #55162	; 0xd77a
   30db8:	movt	r1, #3
   30dbc:	str	r0, [sp, #124]	; 0x7c
   30dc0:	mov	r0, r1
   30dc4:	bl	115f8 <gettext@plt>
   30dc8:	ldr	r1, [fp, #8]
   30dcc:	ldr	r2, [r1]
   30dd0:	ldr	r1, [fp, #8]
   30dd4:	ldr	r3, [r1, #4]
   30dd8:	ldr	r1, [fp, #8]
   30ddc:	ldr	r1, [r1, #8]
   30de0:	ldr	lr, [fp, #8]
   30de4:	ldr	lr, [lr, #12]
   30de8:	ldr	ip, [fp, #8]
   30dec:	ldr	ip, [ip, #16]
   30df0:	ldr	r4, [sp, #124]	; 0x7c
   30df4:	str	r0, [sp, #120]	; 0x78
   30df8:	mov	r0, r4
   30dfc:	ldr	r5, [sp, #120]	; 0x78
   30e00:	str	r1, [sp, #116]	; 0x74
   30e04:	mov	r1, r5
   30e08:	ldr	r6, [sp, #116]	; 0x74
   30e0c:	str	r6, [sp]
   30e10:	str	lr, [sp, #4]
   30e14:	str	ip, [sp, #8]
   30e18:	bl	1161c <fprintf@plt>
   30e1c:	str	r0, [sp, #112]	; 0x70
   30e20:	b	3110c <__assert_fail@plt+0x1f9b8>
   30e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30e28:	movw	r1, #55198	; 0xd79e
   30e2c:	movt	r1, #3
   30e30:	str	r0, [sp, #108]	; 0x6c
   30e34:	mov	r0, r1
   30e38:	bl	115f8 <gettext@plt>
   30e3c:	ldr	r1, [fp, #8]
   30e40:	ldr	r2, [r1]
   30e44:	ldr	r1, [fp, #8]
   30e48:	ldr	r3, [r1, #4]
   30e4c:	ldr	r1, [fp, #8]
   30e50:	ldr	r1, [r1, #8]
   30e54:	ldr	lr, [fp, #8]
   30e58:	ldr	lr, [lr, #12]
   30e5c:	ldr	ip, [fp, #8]
   30e60:	ldr	ip, [ip, #16]
   30e64:	ldr	r4, [fp, #8]
   30e68:	ldr	r4, [r4, #20]
   30e6c:	ldr	r5, [sp, #108]	; 0x6c
   30e70:	str	r0, [sp, #104]	; 0x68
   30e74:	mov	r0, r5
   30e78:	ldr	r6, [sp, #104]	; 0x68
   30e7c:	str	r1, [sp, #100]	; 0x64
   30e80:	mov	r1, r6
   30e84:	ldr	r7, [sp, #100]	; 0x64
   30e88:	str	r7, [sp]
   30e8c:	str	lr, [sp, #4]
   30e90:	str	ip, [sp, #8]
   30e94:	str	r4, [sp, #12]
   30e98:	bl	1161c <fprintf@plt>
   30e9c:	str	r0, [sp, #96]	; 0x60
   30ea0:	b	3110c <__assert_fail@plt+0x1f9b8>
   30ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ea8:	movw	r1, #55238	; 0xd7c6
   30eac:	movt	r1, #3
   30eb0:	str	r0, [sp, #92]	; 0x5c
   30eb4:	mov	r0, r1
   30eb8:	bl	115f8 <gettext@plt>
   30ebc:	ldr	r1, [fp, #8]
   30ec0:	ldr	r2, [r1]
   30ec4:	ldr	r1, [fp, #8]
   30ec8:	ldr	r3, [r1, #4]
   30ecc:	ldr	r1, [fp, #8]
   30ed0:	ldr	r1, [r1, #8]
   30ed4:	ldr	lr, [fp, #8]
   30ed8:	ldr	lr, [lr, #12]
   30edc:	ldr	ip, [fp, #8]
   30ee0:	ldr	ip, [ip, #16]
   30ee4:	ldr	r4, [fp, #8]
   30ee8:	ldr	r4, [r4, #20]
   30eec:	ldr	r5, [fp, #8]
   30ef0:	ldr	r5, [r5, #24]
   30ef4:	ldr	r6, [sp, #92]	; 0x5c
   30ef8:	str	r0, [sp, #88]	; 0x58
   30efc:	mov	r0, r6
   30f00:	ldr	r7, [sp, #88]	; 0x58
   30f04:	str	r1, [sp, #84]	; 0x54
   30f08:	mov	r1, r7
   30f0c:	ldr	r8, [sp, #84]	; 0x54
   30f10:	str	r8, [sp]
   30f14:	str	lr, [sp, #4]
   30f18:	str	ip, [sp, #8]
   30f1c:	str	r4, [sp, #12]
   30f20:	str	r5, [sp, #16]
   30f24:	bl	1161c <fprintf@plt>
   30f28:	str	r0, [sp, #80]	; 0x50
   30f2c:	b	3110c <__assert_fail@plt+0x1f9b8>
   30f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30f34:	movw	r1, #55282	; 0xd7f2
   30f38:	movt	r1, #3
   30f3c:	str	r0, [sp, #76]	; 0x4c
   30f40:	mov	r0, r1
   30f44:	bl	115f8 <gettext@plt>
   30f48:	ldr	r1, [fp, #8]
   30f4c:	ldr	r2, [r1]
   30f50:	ldr	r1, [fp, #8]
   30f54:	ldr	r3, [r1, #4]
   30f58:	ldr	r1, [fp, #8]
   30f5c:	ldr	r1, [r1, #8]
   30f60:	ldr	lr, [fp, #8]
   30f64:	ldr	lr, [lr, #12]
   30f68:	ldr	ip, [fp, #8]
   30f6c:	ldr	ip, [ip, #16]
   30f70:	ldr	r4, [fp, #8]
   30f74:	ldr	r4, [r4, #20]
   30f78:	ldr	r5, [fp, #8]
   30f7c:	ldr	r5, [r5, #24]
   30f80:	ldr	r6, [fp, #8]
   30f84:	ldr	r6, [r6, #28]
   30f88:	ldr	r7, [sp, #76]	; 0x4c
   30f8c:	str	r0, [sp, #72]	; 0x48
   30f90:	mov	r0, r7
   30f94:	ldr	r8, [sp, #72]	; 0x48
   30f98:	str	r1, [sp, #68]	; 0x44
   30f9c:	mov	r1, r8
   30fa0:	ldr	r9, [sp, #68]	; 0x44
   30fa4:	str	r9, [sp]
   30fa8:	str	lr, [sp, #4]
   30fac:	str	ip, [sp, #8]
   30fb0:	str	r4, [sp, #12]
   30fb4:	str	r5, [sp, #16]
   30fb8:	str	r6, [sp, #20]
   30fbc:	bl	1161c <fprintf@plt>
   30fc0:	str	r0, [sp, #64]	; 0x40
   30fc4:	b	3110c <__assert_fail@plt+0x1f9b8>
   30fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30fcc:	movw	r1, #55330	; 0xd822
   30fd0:	movt	r1, #3
   30fd4:	str	r0, [sp, #60]	; 0x3c
   30fd8:	mov	r0, r1
   30fdc:	bl	115f8 <gettext@plt>
   30fe0:	ldr	r1, [fp, #8]
   30fe4:	ldr	r2, [r1]
   30fe8:	ldr	r1, [fp, #8]
   30fec:	ldr	r3, [r1, #4]
   30ff0:	ldr	r1, [fp, #8]
   30ff4:	ldr	r1, [r1, #8]
   30ff8:	ldr	lr, [fp, #8]
   30ffc:	ldr	lr, [lr, #12]
   31000:	ldr	ip, [fp, #8]
   31004:	ldr	ip, [ip, #16]
   31008:	ldr	r4, [fp, #8]
   3100c:	ldr	r4, [r4, #20]
   31010:	ldr	r5, [fp, #8]
   31014:	ldr	r5, [r5, #24]
   31018:	ldr	r6, [fp, #8]
   3101c:	ldr	r6, [r6, #28]
   31020:	ldr	r7, [fp, #8]
   31024:	ldr	r7, [r7, #32]
   31028:	ldr	r8, [sp, #60]	; 0x3c
   3102c:	str	r0, [sp, #56]	; 0x38
   31030:	mov	r0, r8
   31034:	ldr	r9, [sp, #56]	; 0x38
   31038:	str	r1, [sp, #52]	; 0x34
   3103c:	mov	r1, r9
   31040:	ldr	sl, [sp, #52]	; 0x34
   31044:	str	sl, [sp]
   31048:	str	lr, [sp, #4]
   3104c:	str	ip, [sp, #8]
   31050:	str	r4, [sp, #12]
   31054:	str	r5, [sp, #16]
   31058:	str	r6, [sp, #20]
   3105c:	str	r7, [sp, #24]
   31060:	bl	1161c <fprintf@plt>
   31064:	str	r0, [sp, #48]	; 0x30
   31068:	b	3110c <__assert_fail@plt+0x1f9b8>
   3106c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31070:	movw	r1, #55382	; 0xd856
   31074:	movt	r1, #3
   31078:	str	r0, [sp, #44]	; 0x2c
   3107c:	mov	r0, r1
   31080:	bl	115f8 <gettext@plt>
   31084:	ldr	r1, [fp, #8]
   31088:	ldr	r2, [r1]
   3108c:	ldr	r1, [fp, #8]
   31090:	ldr	r3, [r1, #4]
   31094:	ldr	r1, [fp, #8]
   31098:	ldr	r1, [r1, #8]
   3109c:	ldr	lr, [fp, #8]
   310a0:	ldr	lr, [lr, #12]
   310a4:	ldr	ip, [fp, #8]
   310a8:	ldr	ip, [ip, #16]
   310ac:	ldr	r4, [fp, #8]
   310b0:	ldr	r4, [r4, #20]
   310b4:	ldr	r5, [fp, #8]
   310b8:	ldr	r5, [r5, #24]
   310bc:	ldr	r6, [fp, #8]
   310c0:	ldr	r6, [r6, #28]
   310c4:	ldr	r7, [fp, #8]
   310c8:	ldr	r7, [r7, #32]
   310cc:	ldr	r8, [sp, #44]	; 0x2c
   310d0:	str	r0, [sp, #40]	; 0x28
   310d4:	mov	r0, r8
   310d8:	ldr	r9, [sp, #40]	; 0x28
   310dc:	str	r1, [sp, #36]	; 0x24
   310e0:	mov	r1, r9
   310e4:	ldr	sl, [sp, #36]	; 0x24
   310e8:	str	sl, [sp]
   310ec:	str	lr, [sp, #4]
   310f0:	str	ip, [sp, #8]
   310f4:	str	r4, [sp, #12]
   310f8:	str	r5, [sp, #16]
   310fc:	str	r6, [sp, #20]
   31100:	str	r7, [sp, #24]
   31104:	bl	1161c <fprintf@plt>
   31108:	str	r0, [sp, #32]
   3110c:	sub	sp, fp, #28
   31110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31114:	push	{fp, lr}
   31118:	mov	fp, sp
   3111c:	sub	sp, sp, #32
   31120:	ldr	ip, [fp, #8]
   31124:	str	r0, [fp, #-4]
   31128:	str	r1, [fp, #-8]
   3112c:	str	r2, [fp, #-12]
   31130:	str	r3, [sp, #16]
   31134:	movw	r0, #0
   31138:	str	r0, [sp, #12]
   3113c:	str	ip, [sp, #8]
   31140:	ldr	r0, [fp, #8]
   31144:	ldr	r1, [sp, #12]
   31148:	add	r0, r0, r1, lsl #2
   3114c:	ldr	r0, [r0]
   31150:	movw	r1, #0
   31154:	cmp	r0, r1
   31158:	beq	31170 <__assert_fail@plt+0x1fa1c>
   3115c:	b	31160 <__assert_fail@plt+0x1fa0c>
   31160:	ldr	r0, [sp, #12]
   31164:	add	r0, r0, #1
   31168:	str	r0, [sp, #12]
   3116c:	b	31140 <__assert_fail@plt+0x1f9ec>
   31170:	ldr	r0, [fp, #-4]
   31174:	ldr	r1, [fp, #-8]
   31178:	ldr	r2, [fp, #-12]
   3117c:	ldr	r3, [sp, #16]
   31180:	ldr	ip, [fp, #8]
   31184:	ldr	lr, [sp, #12]
   31188:	str	ip, [sp]
   3118c:	str	lr, [sp, #4]
   31190:	bl	30af0 <__assert_fail@plt+0x1f39c>
   31194:	mov	sp, fp
   31198:	pop	{fp, pc}
   3119c:	push	{fp, lr}
   311a0:	mov	fp, sp
   311a4:	sub	sp, sp, #80	; 0x50
   311a8:	ldr	ip, [fp, #8]
   311ac:	str	ip, [fp, #-4]
   311b0:	str	r0, [fp, #-8]
   311b4:	str	r1, [fp, #-12]
   311b8:	str	r2, [fp, #-16]
   311bc:	str	r3, [fp, #-20]	; 0xffffffec
   311c0:	movw	r0, #0
   311c4:	str	r0, [fp, #-24]	; 0xffffffe8
   311c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   311cc:	cmp	r0, #10
   311d0:	movw	r0, #0
   311d4:	str	r0, [sp, #12]
   311d8:	bcs	31210 <__assert_fail@plt+0x1fabc>
   311dc:	ldr	r0, [fp, #-4]
   311e0:	add	r1, r0, #4
   311e4:	str	r1, [fp, #-4]
   311e8:	ldr	r0, [r0]
   311ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   311f0:	add	r2, sp, #16
   311f4:	add	r1, r2, r1, lsl #2
   311f8:	str	r0, [r1]
   311fc:	movw	r1, #0
   31200:	cmp	r0, r1
   31204:	movw	r0, #0
   31208:	movne	r0, #1
   3120c:	str	r0, [sp, #12]
   31210:	ldr	r0, [sp, #12]
   31214:	tst	r0, #1
   31218:	beq	31230 <__assert_fail@plt+0x1fadc>
   3121c:	b	31220 <__assert_fail@plt+0x1facc>
   31220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31224:	add	r0, r0, #1
   31228:	str	r0, [fp, #-24]	; 0xffffffe8
   3122c:	b	311c8 <__assert_fail@plt+0x1fa74>
   31230:	add	r0, sp, #16
   31234:	ldr	r1, [fp, #-8]
   31238:	ldr	r2, [fp, #-12]
   3123c:	ldr	r3, [fp, #-16]
   31240:	ldr	ip, [fp, #-20]	; 0xffffffec
   31244:	ldr	lr, [fp, #-24]	; 0xffffffe8
   31248:	str	r0, [sp, #8]
   3124c:	mov	r0, r1
   31250:	mov	r1, r2
   31254:	mov	r2, r3
   31258:	mov	r3, ip
   3125c:	ldr	ip, [sp, #8]
   31260:	str	ip, [sp]
   31264:	str	lr, [sp, #4]
   31268:	bl	30af0 <__assert_fail@plt+0x1f39c>
   3126c:	mov	sp, fp
   31270:	pop	{fp, pc}
   31274:	push	{fp, lr}
   31278:	mov	fp, sp
   3127c:	sub	sp, sp, #32
   31280:	str	r0, [fp, #-4]
   31284:	str	r1, [fp, #-8]
   31288:	str	r2, [fp, #-12]
   3128c:	str	r3, [sp, #16]
   31290:	add	r0, fp, #8
   31294:	str	r0, [sp, #12]
   31298:	ldr	r0, [fp, #-4]
   3129c:	ldr	r1, [fp, #-8]
   312a0:	ldr	r2, [fp, #-12]
   312a4:	ldr	r3, [sp, #16]
   312a8:	ldr	ip, [sp, #12]
   312ac:	mov	lr, sp
   312b0:	str	ip, [lr]
   312b4:	bl	3119c <__assert_fail@plt+0x1fa48>
   312b8:	add	r0, sp, #12
   312bc:	str	r0, [sp, #8]
   312c0:	mov	sp, fp
   312c4:	pop	{fp, pc}
   312c8:	push	{fp, lr}
   312cc:	mov	fp, sp
   312d0:	sub	sp, sp, #16
   312d4:	movw	r0, #57788	; 0xe1bc
   312d8:	movt	r0, #4
   312dc:	ldr	r1, [r0]
   312e0:	movw	r0, #52342	; 0xcc76
   312e4:	movt	r0, #3
   312e8:	bl	113c4 <fputs_unlocked@plt>
   312ec:	movw	r1, #55442	; 0xd892
   312f0:	movt	r1, #3
   312f4:	str	r0, [fp, #-4]
   312f8:	mov	r0, r1
   312fc:	bl	115f8 <gettext@plt>
   31300:	movw	r1, #55462	; 0xd8a6
   31304:	movt	r1, #3
   31308:	bl	1140c <printf@plt>
   3130c:	movw	r1, #55484	; 0xd8bc
   31310:	movt	r1, #3
   31314:	str	r0, [sp, #8]
   31318:	mov	r0, r1
   3131c:	bl	115f8 <gettext@plt>
   31320:	movw	r1, #51013	; 0xc745
   31324:	movt	r1, #3
   31328:	movw	r2, #53507	; 0xd103
   3132c:	movt	r2, #3
   31330:	bl	1140c <printf@plt>
   31334:	movw	r1, #55504	; 0xd8d0
   31338:	movt	r1, #3
   3133c:	str	r0, [sp, #4]
   31340:	mov	r0, r1
   31344:	bl	115f8 <gettext@plt>
   31348:	movw	r1, #55543	; 0xd8f7
   3134c:	movt	r1, #3
   31350:	bl	1140c <printf@plt>
   31354:	str	r0, [sp]
   31358:	mov	sp, fp
   3135c:	pop	{fp, pc}
   31360:	push	{fp, lr}
   31364:	mov	fp, sp
   31368:	sub	sp, sp, #16
   3136c:	str	r0, [fp, #-4]
   31370:	str	r1, [sp, #8]
   31374:	str	r2, [sp, #4]
   31378:	ldr	r0, [fp, #-4]
   3137c:	ldr	r1, [sp, #8]
   31380:	ldr	r2, [sp, #4]
   31384:	bl	31390 <__assert_fail@plt+0x1fc3c>
   31388:	mov	sp, fp
   3138c:	pop	{fp, pc}
   31390:	push	{fp, lr}
   31394:	mov	fp, sp
   31398:	sub	sp, sp, #16
   3139c:	str	r0, [fp, #-4]
   313a0:	str	r1, [sp, #8]
   313a4:	str	r2, [sp, #4]
   313a8:	ldr	r0, [fp, #-4]
   313ac:	ldr	r1, [sp, #8]
   313b0:	ldr	r2, [sp, #4]
   313b4:	bl	3a860 <__assert_fail@plt+0x2910c>
   313b8:	str	r0, [sp]
   313bc:	ldr	r0, [sp]
   313c0:	movw	r1, #0
   313c4:	cmp	r0, r1
   313c8:	bne	313f8 <__assert_fail@plt+0x1fca4>
   313cc:	ldr	r0, [fp, #-4]
   313d0:	movw	r1, #0
   313d4:	cmp	r0, r1
   313d8:	beq	313f4 <__assert_fail@plt+0x1fca0>
   313dc:	ldr	r0, [sp, #8]
   313e0:	cmp	r0, #0
   313e4:	beq	313f8 <__assert_fail@plt+0x1fca4>
   313e8:	ldr	r0, [sp, #4]
   313ec:	cmp	r0, #0
   313f0:	beq	313f8 <__assert_fail@plt+0x1fca4>
   313f4:	bl	11850 <__assert_fail@plt+0xfc>
   313f8:	ldr	r0, [sp]
   313fc:	mov	sp, fp
   31400:	pop	{fp, pc}
   31404:	push	{fp, lr}
   31408:	mov	fp, sp
   3140c:	sub	sp, sp, #8
   31410:	str	r0, [sp, #4]
   31414:	ldr	r0, [sp, #4]
   31418:	bl	38a7c <__assert_fail@plt+0x27328>
   3141c:	bl	31428 <__assert_fail@plt+0x1fcd4>
   31420:	mov	sp, fp
   31424:	pop	{fp, pc}
   31428:	push	{fp, lr}
   3142c:	mov	fp, sp
   31430:	sub	sp, sp, #8
   31434:	str	r0, [sp, #4]
   31438:	ldr	r0, [sp, #4]
   3143c:	movw	r1, #0
   31440:	cmp	r0, r1
   31444:	bne	3144c <__assert_fail@plt+0x1fcf8>
   31448:	bl	11850 <__assert_fail@plt+0xfc>
   3144c:	ldr	r0, [sp, #4]
   31450:	mov	sp, fp
   31454:	pop	{fp, pc}
   31458:	push	{fp, lr}
   3145c:	mov	fp, sp
   31460:	sub	sp, sp, #8
   31464:	str	r0, [sp, #4]
   31468:	ldr	r0, [sp, #4]
   3146c:	bl	3a59c <__assert_fail@plt+0x28e48>
   31470:	bl	31428 <__assert_fail@plt+0x1fcd4>
   31474:	mov	sp, fp
   31478:	pop	{fp, pc}
   3147c:	push	{fp, lr}
   31480:	mov	fp, sp
   31484:	sub	sp, sp, #8
   31488:	str	r0, [sp, #4]
   3148c:	ldr	r0, [sp, #4]
   31490:	bl	31404 <__assert_fail@plt+0x1fcb0>
   31494:	mov	sp, fp
   31498:	pop	{fp, pc}
   3149c:	push	{fp, lr}
   314a0:	mov	fp, sp
   314a4:	sub	sp, sp, #16
   314a8:	str	r0, [fp, #-4]
   314ac:	str	r1, [sp, #8]
   314b0:	ldr	r0, [fp, #-4]
   314b4:	ldr	r1, [sp, #8]
   314b8:	bl	38aec <__assert_fail@plt+0x27398>
   314bc:	str	r0, [sp, #4]
   314c0:	ldr	r0, [sp, #4]
   314c4:	movw	r1, #0
   314c8:	cmp	r0, r1
   314cc:	bne	314f0 <__assert_fail@plt+0x1fd9c>
   314d0:	ldr	r0, [fp, #-4]
   314d4:	movw	r1, #0
   314d8:	cmp	r0, r1
   314dc:	beq	314ec <__assert_fail@plt+0x1fd98>
   314e0:	ldr	r0, [sp, #8]
   314e4:	cmp	r0, #0
   314e8:	beq	314f0 <__assert_fail@plt+0x1fd9c>
   314ec:	bl	11850 <__assert_fail@plt+0xfc>
   314f0:	ldr	r0, [sp, #4]
   314f4:	mov	sp, fp
   314f8:	pop	{fp, pc}
   314fc:	push	{fp, lr}
   31500:	mov	fp, sp
   31504:	sub	sp, sp, #8
   31508:	str	r0, [sp, #4]
   3150c:	str	r1, [sp]
   31510:	ldr	r0, [sp, #4]
   31514:	ldr	r1, [sp]
   31518:	bl	3a5dc <__assert_fail@plt+0x28e88>
   3151c:	bl	31428 <__assert_fail@plt+0x1fcd4>
   31520:	mov	sp, fp
   31524:	pop	{fp, pc}
   31528:	push	{fp, lr}
   3152c:	mov	fp, sp
   31530:	sub	sp, sp, #16
   31534:	str	r0, [fp, #-4]
   31538:	str	r1, [sp, #8]
   3153c:	str	r2, [sp, #4]
   31540:	ldr	r0, [fp, #-4]
   31544:	ldr	r1, [sp, #8]
   31548:	ldr	r2, [sp, #4]
   3154c:	bl	3a6d4 <__assert_fail@plt+0x28f80>
   31550:	bl	31428 <__assert_fail@plt+0x1fcd4>
   31554:	mov	sp, fp
   31558:	pop	{fp, pc}
   3155c:	push	{fp, lr}
   31560:	mov	fp, sp
   31564:	sub	sp, sp, #8
   31568:	str	r0, [sp, #4]
   3156c:	str	r1, [sp]
   31570:	ldr	r1, [sp, #4]
   31574:	ldr	r2, [sp]
   31578:	movw	r0, #0
   3157c:	bl	31390 <__assert_fail@plt+0x1fc3c>
   31580:	mov	sp, fp
   31584:	pop	{fp, pc}
   31588:	push	{fp, lr}
   3158c:	mov	fp, sp
   31590:	sub	sp, sp, #8
   31594:	str	r0, [sp, #4]
   31598:	str	r1, [sp]
   3159c:	ldr	r1, [sp, #4]
   315a0:	ldr	r2, [sp]
   315a4:	movw	r0, #0
   315a8:	bl	31528 <__assert_fail@plt+0x1fdd4>
   315ac:	mov	sp, fp
   315b0:	pop	{fp, pc}
   315b4:	push	{fp, lr}
   315b8:	mov	fp, sp
   315bc:	sub	sp, sp, #8
   315c0:	str	r0, [sp, #4]
   315c4:	str	r1, [sp]
   315c8:	ldr	r0, [sp, #4]
   315cc:	ldr	r1, [sp]
   315d0:	movw	r2, #1
   315d4:	bl	315e0 <__assert_fail@plt+0x1fe8c>
   315d8:	mov	sp, fp
   315dc:	pop	{fp, pc}
   315e0:	push	{fp, lr}
   315e4:	mov	fp, sp
   315e8:	sub	sp, sp, #16
   315ec:	str	r0, [fp, #-4]
   315f0:	str	r1, [sp, #8]
   315f4:	str	r2, [sp, #4]
   315f8:	ldr	r0, [sp, #8]
   315fc:	ldr	r0, [r0]
   31600:	str	r0, [sp]
   31604:	ldr	r0, [fp, #-4]
   31608:	movw	r1, #0
   3160c:	cmp	r0, r1
   31610:	bne	3165c <__assert_fail@plt+0x1ff08>
   31614:	ldr	r0, [sp]
   31618:	cmp	r0, #0
   3161c:	bne	31658 <__assert_fail@plt+0x1ff04>
   31620:	ldr	r0, [sp, #4]
   31624:	movw	r1, #64	; 0x40
   31628:	udiv	r0, r1, r0
   3162c:	str	r0, [sp]
   31630:	ldr	r0, [sp]
   31634:	cmp	r0, #0
   31638:	movw	r0, #0
   3163c:	movne	r0, #1
   31640:	mvn	r1, #0
   31644:	eor	r0, r0, r1
   31648:	and	r0, r0, #1
   3164c:	ldr	r1, [sp]
   31650:	add	r0, r1, r0
   31654:	str	r0, [sp]
   31658:	b	3168c <__assert_fail@plt+0x1ff38>
   3165c:	ldr	r0, [sp]
   31660:	ldr	r1, [sp]
   31664:	lsr	r1, r1, #1
   31668:	add	r1, r1, #1
   3166c:	adds	r0, r0, r1
   31670:	mov	r1, #0
   31674:	adc	r1, r1, #0
   31678:	str	r0, [sp]
   3167c:	tst	r1, #1
   31680:	beq	31688 <__assert_fail@plt+0x1ff34>
   31684:	bl	11850 <__assert_fail@plt+0xfc>
   31688:	b	3168c <__assert_fail@plt+0x1ff38>
   3168c:	ldr	r0, [fp, #-4]
   31690:	ldr	r1, [sp]
   31694:	ldr	r2, [sp, #4]
   31698:	bl	31390 <__assert_fail@plt+0x1fc3c>
   3169c:	str	r0, [fp, #-4]
   316a0:	ldr	r0, [sp]
   316a4:	ldr	r1, [sp, #8]
   316a8:	str	r0, [r1]
   316ac:	ldr	r0, [fp, #-4]
   316b0:	mov	sp, fp
   316b4:	pop	{fp, pc}
   316b8:	push	{fp, lr}
   316bc:	mov	fp, sp
   316c0:	sub	sp, sp, #376	; 0x178
   316c4:	ldr	ip, [fp, #8]
   316c8:	str	r0, [fp, #-4]
   316cc:	str	r1, [fp, #-8]
   316d0:	str	r2, [fp, #-12]
   316d4:	str	r3, [fp, #-16]
   316d8:	ldr	r0, [fp, #-8]
   316dc:	ldr	r0, [r0]
   316e0:	str	r0, [fp, #-20]	; 0xffffffec
   316e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   316e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   316ec:	asr	r1, r1, #1
   316f0:	add	r1, r0, r1
   316f4:	mov	r2, #1
   316f8:	cmp	r1, r0
   316fc:	movwvc	r2, #0
   31700:	str	r1, [fp, #-24]	; 0xffffffe8
   31704:	tst	r2, #1
   31708:	str	ip, [fp, #-36]	; 0xffffffdc
   3170c:	beq	31718 <__assert_fail@plt+0x1ffc4>
   31710:	ldr	r0, [pc, #4044]	; 326e4 <__assert_fail@plt+0x20f90>
   31714:	str	r0, [fp, #-24]	; 0xffffffe8
   31718:	ldr	r0, [fp, #-16]
   3171c:	movw	r1, #0
   31720:	cmp	r1, r0
   31724:	bgt	31740 <__assert_fail@plt+0x1ffec>
   31728:	ldr	r0, [fp, #-16]
   3172c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31730:	cmp	r0, r1
   31734:	bge	31740 <__assert_fail@plt+0x1ffec>
   31738:	ldr	r0, [fp, #-16]
   3173c:	str	r0, [fp, #-24]	; 0xffffffe8
   31740:	b	31b18 <__assert_fail@plt+0x203c4>
   31744:	b	31748 <__assert_fail@plt+0x1fff4>
   31748:	ldr	r0, [fp, #8]
   3174c:	cmp	r0, #0
   31750:	bge	31864 <__assert_fail@plt+0x20110>
   31754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31758:	cmp	r0, #0
   3175c:	bge	317e8 <__assert_fail@plt+0x20094>
   31760:	b	31764 <__assert_fail@plt+0x20010>
   31764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31768:	ldr	r1, [fp, #8]
   3176c:	movw	r2, #127	; 0x7f
   31770:	sdiv	r1, r2, r1
   31774:	cmp	r0, r1
   31778:	blt	31904 <__assert_fail@plt+0x201b0>
   3177c:	b	3191c <__assert_fail@plt+0x201c8>
   31780:	b	31784 <__assert_fail@plt+0x20030>
   31784:	ldr	r0, [pc, #4076]	; 32778 <__assert_fail@plt+0x21024>
   31788:	ldr	r1, [fp, #8]
   3178c:	cmp	r1, r0
   31790:	blt	317a8 <__assert_fail@plt+0x20054>
   31794:	b	317b4 <__assert_fail@plt+0x20060>
   31798:	ldr	r0, [fp, #8]
   3179c:	movw	r1, #0
   317a0:	cmp	r1, r0
   317a4:	bge	317b4 <__assert_fail@plt+0x20060>
   317a8:	movw	r0, #0
   317ac:	str	r0, [fp, #-40]	; 0xffffffd8
   317b0:	b	317cc <__assert_fail@plt+0x20078>
   317b4:	ldr	r0, [fp, #8]
   317b8:	movw	r1, #0
   317bc:	sub	r0, r1, r0
   317c0:	movw	r1, #127	; 0x7f
   317c4:	sdiv	r0, r1, r0
   317c8:	str	r0, [fp, #-40]	; 0xffffffd8
   317cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   317d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   317d4:	mvn	r2, #0
   317d8:	sub	r1, r2, r1
   317dc:	cmp	r0, r1
   317e0:	ble	31904 <__assert_fail@plt+0x201b0>
   317e4:	b	3191c <__assert_fail@plt+0x201c8>
   317e8:	b	317ec <__assert_fail@plt+0x20098>
   317ec:	b	31848 <__assert_fail@plt+0x200f4>
   317f0:	b	31848 <__assert_fail@plt+0x200f4>
   317f4:	ldr	r0, [fp, #8]
   317f8:	cmn	r0, #1
   317fc:	bne	31848 <__assert_fail@plt+0x200f4>
   31800:	b	31804 <__assert_fail@plt+0x200b0>
   31804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31808:	mvn	r1, #127	; 0x7f
   3180c:	add	r0, r0, r1
   31810:	movw	r1, #0
   31814:	cmp	r1, r0
   31818:	blt	31904 <__assert_fail@plt+0x201b0>
   3181c:	b	3191c <__assert_fail@plt+0x201c8>
   31820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31824:	movw	r1, #0
   31828:	cmp	r1, r0
   3182c:	bge	3191c <__assert_fail@plt+0x201c8>
   31830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31834:	sub	r0, r0, #1
   31838:	movw	r1, #127	; 0x7f
   3183c:	cmp	r1, r0
   31840:	blt	31904 <__assert_fail@plt+0x201b0>
   31844:	b	3191c <__assert_fail@plt+0x201c8>
   31848:	ldr	r0, [fp, #8]
   3184c:	mvn	r1, #127	; 0x7f
   31850:	sdiv	r0, r1, r0
   31854:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31858:	cmp	r0, r1
   3185c:	blt	31904 <__assert_fail@plt+0x201b0>
   31860:	b	3191c <__assert_fail@plt+0x201c8>
   31864:	ldr	r0, [fp, #8]
   31868:	cmp	r0, #0
   3186c:	bne	31874 <__assert_fail@plt+0x20120>
   31870:	b	3191c <__assert_fail@plt+0x201c8>
   31874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31878:	cmp	r0, #0
   3187c:	bge	318ec <__assert_fail@plt+0x20198>
   31880:	b	31884 <__assert_fail@plt+0x20130>
   31884:	b	318d0 <__assert_fail@plt+0x2017c>
   31888:	b	318d0 <__assert_fail@plt+0x2017c>
   3188c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31890:	cmn	r0, #1
   31894:	bne	318d0 <__assert_fail@plt+0x2017c>
   31898:	b	3189c <__assert_fail@plt+0x20148>
   3189c:	ldr	r0, [fp, #8]
   318a0:	mvn	r1, #127	; 0x7f
   318a4:	add	r0, r0, r1
   318a8:	movw	r1, #0
   318ac:	cmp	r1, r0
   318b0:	blt	31904 <__assert_fail@plt+0x201b0>
   318b4:	b	3191c <__assert_fail@plt+0x201c8>
   318b8:	ldr	r0, [fp, #8]
   318bc:	sub	r0, r0, #1
   318c0:	movw	r1, #127	; 0x7f
   318c4:	cmp	r1, r0
   318c8:	blt	31904 <__assert_fail@plt+0x201b0>
   318cc:	b	3191c <__assert_fail@plt+0x201c8>
   318d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318d4:	mvn	r1, #127	; 0x7f
   318d8:	sdiv	r0, r1, r0
   318dc:	ldr	r1, [fp, #8]
   318e0:	cmp	r0, r1
   318e4:	blt	31904 <__assert_fail@plt+0x201b0>
   318e8:	b	3191c <__assert_fail@plt+0x201c8>
   318ec:	ldr	r0, [fp, #8]
   318f0:	movw	r1, #127	; 0x7f
   318f4:	sdiv	r0, r1, r0
   318f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   318fc:	cmp	r0, r1
   31900:	bge	3191c <__assert_fail@plt+0x201c8>
   31904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31908:	ldr	r1, [fp, #8]
   3190c:	mul	r0, r0, r1
   31910:	sxtb	r0, r0
   31914:	str	r0, [fp, #-28]	; 0xffffffe4
   31918:	b	32b30 <__assert_fail@plt+0x213dc>
   3191c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31920:	ldr	r1, [fp, #8]
   31924:	mul	r0, r0, r1
   31928:	sxtb	r0, r0
   3192c:	str	r0, [fp, #-28]	; 0xffffffe4
   31930:	b	32b40 <__assert_fail@plt+0x213ec>
   31934:	ldr	r0, [fp, #8]
   31938:	cmp	r0, #0
   3193c:	bge	31a4c <__assert_fail@plt+0x202f8>
   31940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31944:	cmp	r0, #0
   31948:	bge	319d4 <__assert_fail@plt+0x20280>
   3194c:	b	31950 <__assert_fail@plt+0x201fc>
   31950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31954:	ldr	r1, [fp, #8]
   31958:	movw	r2, #255	; 0xff
   3195c:	sdiv	r1, r2, r1
   31960:	cmp	r0, r1
   31964:	blt	31ae8 <__assert_fail@plt+0x20394>
   31968:	b	31b00 <__assert_fail@plt+0x203ac>
   3196c:	b	31970 <__assert_fail@plt+0x2021c>
   31970:	ldr	r0, [pc, #3584]	; 32778 <__assert_fail@plt+0x21024>
   31974:	ldr	r1, [fp, #8]
   31978:	cmp	r1, r0
   3197c:	blt	31994 <__assert_fail@plt+0x20240>
   31980:	b	319a0 <__assert_fail@plt+0x2024c>
   31984:	ldr	r0, [fp, #8]
   31988:	movw	r1, #0
   3198c:	cmp	r1, r0
   31990:	bge	319a0 <__assert_fail@plt+0x2024c>
   31994:	movw	r0, #0
   31998:	str	r0, [fp, #-44]	; 0xffffffd4
   3199c:	b	319b8 <__assert_fail@plt+0x20264>
   319a0:	ldr	r0, [fp, #8]
   319a4:	movw	r1, #0
   319a8:	sub	r0, r1, r0
   319ac:	movw	r1, #255	; 0xff
   319b0:	sdiv	r0, r1, r0
   319b4:	str	r0, [fp, #-44]	; 0xffffffd4
   319b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   319bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   319c0:	mvn	r2, #0
   319c4:	sub	r1, r2, r1
   319c8:	cmp	r0, r1
   319cc:	ble	31ae8 <__assert_fail@plt+0x20394>
   319d0:	b	31b00 <__assert_fail@plt+0x203ac>
   319d4:	b	319d8 <__assert_fail@plt+0x20284>
   319d8:	b	31a30 <__assert_fail@plt+0x202dc>
   319dc:	b	31a30 <__assert_fail@plt+0x202dc>
   319e0:	ldr	r0, [fp, #8]
   319e4:	cmn	r0, #1
   319e8:	bne	31a30 <__assert_fail@plt+0x202dc>
   319ec:	b	319f0 <__assert_fail@plt+0x2029c>
   319f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319f4:	add	r0, r0, #0
   319f8:	movw	r1, #0
   319fc:	cmp	r1, r0
   31a00:	blt	31ae8 <__assert_fail@plt+0x20394>
   31a04:	b	31b00 <__assert_fail@plt+0x203ac>
   31a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a0c:	movw	r1, #0
   31a10:	cmp	r1, r0
   31a14:	bge	31b00 <__assert_fail@plt+0x203ac>
   31a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a1c:	sub	r0, r0, #1
   31a20:	mvn	r1, #0
   31a24:	cmp	r1, r0
   31a28:	blt	31ae8 <__assert_fail@plt+0x20394>
   31a2c:	b	31b00 <__assert_fail@plt+0x203ac>
   31a30:	ldr	r0, [fp, #8]
   31a34:	movw	r1, #0
   31a38:	sdiv	r0, r1, r0
   31a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31a40:	cmp	r0, r1
   31a44:	blt	31ae8 <__assert_fail@plt+0x20394>
   31a48:	b	31b00 <__assert_fail@plt+0x203ac>
   31a4c:	ldr	r0, [fp, #8]
   31a50:	cmp	r0, #0
   31a54:	bne	31a5c <__assert_fail@plt+0x20308>
   31a58:	b	31b00 <__assert_fail@plt+0x203ac>
   31a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a60:	cmp	r0, #0
   31a64:	bge	31ad0 <__assert_fail@plt+0x2037c>
   31a68:	b	31a6c <__assert_fail@plt+0x20318>
   31a6c:	b	31ab4 <__assert_fail@plt+0x20360>
   31a70:	b	31ab4 <__assert_fail@plt+0x20360>
   31a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a78:	cmn	r0, #1
   31a7c:	bne	31ab4 <__assert_fail@plt+0x20360>
   31a80:	b	31a84 <__assert_fail@plt+0x20330>
   31a84:	ldr	r0, [fp, #8]
   31a88:	add	r0, r0, #0
   31a8c:	movw	r1, #0
   31a90:	cmp	r1, r0
   31a94:	blt	31ae8 <__assert_fail@plt+0x20394>
   31a98:	b	31b00 <__assert_fail@plt+0x203ac>
   31a9c:	ldr	r0, [fp, #8]
   31aa0:	sub	r0, r0, #1
   31aa4:	mvn	r1, #0
   31aa8:	cmp	r1, r0
   31aac:	blt	31ae8 <__assert_fail@plt+0x20394>
   31ab0:	b	31b00 <__assert_fail@plt+0x203ac>
   31ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ab8:	movw	r1, #0
   31abc:	sdiv	r0, r1, r0
   31ac0:	ldr	r1, [fp, #8]
   31ac4:	cmp	r0, r1
   31ac8:	blt	31ae8 <__assert_fail@plt+0x20394>
   31acc:	b	31b00 <__assert_fail@plt+0x203ac>
   31ad0:	ldr	r0, [fp, #8]
   31ad4:	movw	r1, #255	; 0xff
   31ad8:	sdiv	r0, r1, r0
   31adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31ae0:	cmp	r0, r1
   31ae4:	bge	31b00 <__assert_fail@plt+0x203ac>
   31ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31aec:	ldr	r1, [fp, #8]
   31af0:	mul	r0, r0, r1
   31af4:	and	r0, r0, #255	; 0xff
   31af8:	str	r0, [fp, #-28]	; 0xffffffe4
   31afc:	b	32b30 <__assert_fail@plt+0x213dc>
   31b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b04:	ldr	r1, [fp, #8]
   31b08:	mul	r0, r0, r1
   31b0c:	and	r0, r0, #255	; 0xff
   31b10:	str	r0, [fp, #-28]	; 0xffffffe4
   31b14:	b	32b40 <__assert_fail@plt+0x213ec>
   31b18:	b	31ef0 <__assert_fail@plt+0x2079c>
   31b1c:	b	31b20 <__assert_fail@plt+0x203cc>
   31b20:	ldr	r0, [fp, #8]
   31b24:	cmp	r0, #0
   31b28:	bge	31c3c <__assert_fail@plt+0x204e8>
   31b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b30:	cmp	r0, #0
   31b34:	bge	31bc0 <__assert_fail@plt+0x2046c>
   31b38:	b	31b3c <__assert_fail@plt+0x203e8>
   31b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b40:	ldr	r1, [fp, #8]
   31b44:	movw	r2, #32767	; 0x7fff
   31b48:	sdiv	r1, r2, r1
   31b4c:	cmp	r0, r1
   31b50:	blt	31cdc <__assert_fail@plt+0x20588>
   31b54:	b	31cf4 <__assert_fail@plt+0x205a0>
   31b58:	b	31b5c <__assert_fail@plt+0x20408>
   31b5c:	ldr	r0, [pc, #3092]	; 32778 <__assert_fail@plt+0x21024>
   31b60:	ldr	r1, [fp, #8]
   31b64:	cmp	r1, r0
   31b68:	blt	31b80 <__assert_fail@plt+0x2042c>
   31b6c:	b	31b8c <__assert_fail@plt+0x20438>
   31b70:	ldr	r0, [fp, #8]
   31b74:	movw	r1, #0
   31b78:	cmp	r1, r0
   31b7c:	bge	31b8c <__assert_fail@plt+0x20438>
   31b80:	movw	r0, #0
   31b84:	str	r0, [fp, #-48]	; 0xffffffd0
   31b88:	b	31ba4 <__assert_fail@plt+0x20450>
   31b8c:	ldr	r0, [fp, #8]
   31b90:	movw	r1, #0
   31b94:	sub	r0, r1, r0
   31b98:	movw	r1, #32767	; 0x7fff
   31b9c:	sdiv	r0, r1, r0
   31ba0:	str	r0, [fp, #-48]	; 0xffffffd0
   31ba4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31bac:	mvn	r2, #0
   31bb0:	sub	r1, r2, r1
   31bb4:	cmp	r0, r1
   31bb8:	ble	31cdc <__assert_fail@plt+0x20588>
   31bbc:	b	31cf4 <__assert_fail@plt+0x205a0>
   31bc0:	b	31bc4 <__assert_fail@plt+0x20470>
   31bc4:	b	31c20 <__assert_fail@plt+0x204cc>
   31bc8:	b	31c20 <__assert_fail@plt+0x204cc>
   31bcc:	ldr	r0, [fp, #8]
   31bd0:	cmn	r0, #1
   31bd4:	bne	31c20 <__assert_fail@plt+0x204cc>
   31bd8:	b	31bdc <__assert_fail@plt+0x20488>
   31bdc:	ldr	r0, [pc, #3928]	; 32b3c <__assert_fail@plt+0x213e8>
   31be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31be4:	add	r0, r1, r0
   31be8:	movw	r1, #0
   31bec:	cmp	r1, r0
   31bf0:	blt	31cdc <__assert_fail@plt+0x20588>
   31bf4:	b	31cf4 <__assert_fail@plt+0x205a0>
   31bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31bfc:	movw	r1, #0
   31c00:	cmp	r1, r0
   31c04:	bge	31cf4 <__assert_fail@plt+0x205a0>
   31c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c0c:	sub	r0, r0, #1
   31c10:	movw	r1, #32767	; 0x7fff
   31c14:	cmp	r1, r0
   31c18:	blt	31cdc <__assert_fail@plt+0x20588>
   31c1c:	b	31cf4 <__assert_fail@plt+0x205a0>
   31c20:	ldr	r0, [pc, #3860]	; 32b3c <__assert_fail@plt+0x213e8>
   31c24:	ldr	r1, [fp, #8]
   31c28:	sdiv	r0, r0, r1
   31c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31c30:	cmp	r0, r1
   31c34:	blt	31cdc <__assert_fail@plt+0x20588>
   31c38:	b	31cf4 <__assert_fail@plt+0x205a0>
   31c3c:	ldr	r0, [fp, #8]
   31c40:	cmp	r0, #0
   31c44:	bne	31c4c <__assert_fail@plt+0x204f8>
   31c48:	b	31cf4 <__assert_fail@plt+0x205a0>
   31c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c50:	cmp	r0, #0
   31c54:	bge	31cc4 <__assert_fail@plt+0x20570>
   31c58:	b	31c5c <__assert_fail@plt+0x20508>
   31c5c:	b	31ca8 <__assert_fail@plt+0x20554>
   31c60:	b	31ca8 <__assert_fail@plt+0x20554>
   31c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c68:	cmn	r0, #1
   31c6c:	bne	31ca8 <__assert_fail@plt+0x20554>
   31c70:	b	31c74 <__assert_fail@plt+0x20520>
   31c74:	ldr	r0, [pc, #3776]	; 32b3c <__assert_fail@plt+0x213e8>
   31c78:	ldr	r1, [fp, #8]
   31c7c:	add	r0, r1, r0
   31c80:	movw	r1, #0
   31c84:	cmp	r1, r0
   31c88:	blt	31cdc <__assert_fail@plt+0x20588>
   31c8c:	b	31cf4 <__assert_fail@plt+0x205a0>
   31c90:	ldr	r0, [fp, #8]
   31c94:	sub	r0, r0, #1
   31c98:	movw	r1, #32767	; 0x7fff
   31c9c:	cmp	r1, r0
   31ca0:	blt	31cdc <__assert_fail@plt+0x20588>
   31ca4:	b	31cf4 <__assert_fail@plt+0x205a0>
   31ca8:	ldr	r0, [pc, #3724]	; 32b3c <__assert_fail@plt+0x213e8>
   31cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31cb0:	sdiv	r0, r0, r1
   31cb4:	ldr	r1, [fp, #8]
   31cb8:	cmp	r0, r1
   31cbc:	blt	31cdc <__assert_fail@plt+0x20588>
   31cc0:	b	31cf4 <__assert_fail@plt+0x205a0>
   31cc4:	ldr	r0, [fp, #8]
   31cc8:	movw	r1, #32767	; 0x7fff
   31ccc:	sdiv	r0, r1, r0
   31cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31cd4:	cmp	r0, r1
   31cd8:	bge	31cf4 <__assert_fail@plt+0x205a0>
   31cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ce0:	ldr	r1, [fp, #8]
   31ce4:	mul	r0, r0, r1
   31ce8:	sxth	r0, r0
   31cec:	str	r0, [fp, #-28]	; 0xffffffe4
   31cf0:	b	32b30 <__assert_fail@plt+0x213dc>
   31cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31cf8:	ldr	r1, [fp, #8]
   31cfc:	mul	r0, r0, r1
   31d00:	sxth	r0, r0
   31d04:	str	r0, [fp, #-28]	; 0xffffffe4
   31d08:	b	32b40 <__assert_fail@plt+0x213ec>
   31d0c:	ldr	r0, [fp, #8]
   31d10:	cmp	r0, #0
   31d14:	bge	31e24 <__assert_fail@plt+0x206d0>
   31d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d1c:	cmp	r0, #0
   31d20:	bge	31dac <__assert_fail@plt+0x20658>
   31d24:	b	31d28 <__assert_fail@plt+0x205d4>
   31d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d2c:	ldr	r1, [fp, #8]
   31d30:	movw	r2, #65535	; 0xffff
   31d34:	sdiv	r1, r2, r1
   31d38:	cmp	r0, r1
   31d3c:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31d40:	b	31ed8 <__assert_fail@plt+0x20784>
   31d44:	b	31d48 <__assert_fail@plt+0x205f4>
   31d48:	ldr	r0, [pc, #2600]	; 32778 <__assert_fail@plt+0x21024>
   31d4c:	ldr	r1, [fp, #8]
   31d50:	cmp	r1, r0
   31d54:	blt	31d6c <__assert_fail@plt+0x20618>
   31d58:	b	31d78 <__assert_fail@plt+0x20624>
   31d5c:	ldr	r0, [fp, #8]
   31d60:	movw	r1, #0
   31d64:	cmp	r1, r0
   31d68:	bge	31d78 <__assert_fail@plt+0x20624>
   31d6c:	movw	r0, #0
   31d70:	str	r0, [fp, #-52]	; 0xffffffcc
   31d74:	b	31d90 <__assert_fail@plt+0x2063c>
   31d78:	ldr	r0, [fp, #8]
   31d7c:	movw	r1, #0
   31d80:	sub	r0, r1, r0
   31d84:	movw	r1, #65535	; 0xffff
   31d88:	sdiv	r0, r1, r0
   31d8c:	str	r0, [fp, #-52]	; 0xffffffcc
   31d90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31d98:	mvn	r2, #0
   31d9c:	sub	r1, r2, r1
   31da0:	cmp	r0, r1
   31da4:	ble	31ec0 <__assert_fail@plt+0x2076c>
   31da8:	b	31ed8 <__assert_fail@plt+0x20784>
   31dac:	b	31db0 <__assert_fail@plt+0x2065c>
   31db0:	b	31e08 <__assert_fail@plt+0x206b4>
   31db4:	b	31e08 <__assert_fail@plt+0x206b4>
   31db8:	ldr	r0, [fp, #8]
   31dbc:	cmn	r0, #1
   31dc0:	bne	31e08 <__assert_fail@plt+0x206b4>
   31dc4:	b	31dc8 <__assert_fail@plt+0x20674>
   31dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31dcc:	add	r0, r0, #0
   31dd0:	movw	r1, #0
   31dd4:	cmp	r1, r0
   31dd8:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31ddc:	b	31ed8 <__assert_fail@plt+0x20784>
   31de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31de4:	movw	r1, #0
   31de8:	cmp	r1, r0
   31dec:	bge	31ed8 <__assert_fail@plt+0x20784>
   31df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31df4:	sub	r0, r0, #1
   31df8:	mvn	r1, #0
   31dfc:	cmp	r1, r0
   31e00:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31e04:	b	31ed8 <__assert_fail@plt+0x20784>
   31e08:	ldr	r0, [fp, #8]
   31e0c:	movw	r1, #0
   31e10:	sdiv	r0, r1, r0
   31e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31e18:	cmp	r0, r1
   31e1c:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31e20:	b	31ed8 <__assert_fail@plt+0x20784>
   31e24:	ldr	r0, [fp, #8]
   31e28:	cmp	r0, #0
   31e2c:	bne	31e34 <__assert_fail@plt+0x206e0>
   31e30:	b	31ed8 <__assert_fail@plt+0x20784>
   31e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e38:	cmp	r0, #0
   31e3c:	bge	31ea8 <__assert_fail@plt+0x20754>
   31e40:	b	31e44 <__assert_fail@plt+0x206f0>
   31e44:	b	31e8c <__assert_fail@plt+0x20738>
   31e48:	b	31e8c <__assert_fail@plt+0x20738>
   31e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e50:	cmn	r0, #1
   31e54:	bne	31e8c <__assert_fail@plt+0x20738>
   31e58:	b	31e5c <__assert_fail@plt+0x20708>
   31e5c:	ldr	r0, [fp, #8]
   31e60:	add	r0, r0, #0
   31e64:	movw	r1, #0
   31e68:	cmp	r1, r0
   31e6c:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31e70:	b	31ed8 <__assert_fail@plt+0x20784>
   31e74:	ldr	r0, [fp, #8]
   31e78:	sub	r0, r0, #1
   31e7c:	mvn	r1, #0
   31e80:	cmp	r1, r0
   31e84:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31e88:	b	31ed8 <__assert_fail@plt+0x20784>
   31e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e90:	movw	r1, #0
   31e94:	sdiv	r0, r1, r0
   31e98:	ldr	r1, [fp, #8]
   31e9c:	cmp	r0, r1
   31ea0:	blt	31ec0 <__assert_fail@plt+0x2076c>
   31ea4:	b	31ed8 <__assert_fail@plt+0x20784>
   31ea8:	ldr	r0, [fp, #8]
   31eac:	movw	r1, #65535	; 0xffff
   31eb0:	sdiv	r0, r1, r0
   31eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31eb8:	cmp	r0, r1
   31ebc:	bge	31ed8 <__assert_fail@plt+0x20784>
   31ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ec4:	ldr	r1, [fp, #8]
   31ec8:	mul	r0, r0, r1
   31ecc:	uxth	r0, r0
   31ed0:	str	r0, [fp, #-28]	; 0xffffffe4
   31ed4:	b	32b30 <__assert_fail@plt+0x213dc>
   31ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31edc:	ldr	r1, [fp, #8]
   31ee0:	mul	r0, r0, r1
   31ee4:	uxth	r0, r0
   31ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   31eec:	b	32b40 <__assert_fail@plt+0x213ec>
   31ef0:	b	31ef4 <__assert_fail@plt+0x207a0>
   31ef4:	b	31ef8 <__assert_fail@plt+0x207a4>
   31ef8:	ldr	r0, [fp, #8]
   31efc:	cmp	r0, #0
   31f00:	bge	32004 <__assert_fail@plt+0x208b0>
   31f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f08:	cmp	r0, #0
   31f0c:	bge	31f98 <__assert_fail@plt+0x20844>
   31f10:	b	31f14 <__assert_fail@plt+0x207c0>
   31f14:	ldr	r0, [pc, #1992]	; 326e4 <__assert_fail@plt+0x20f90>
   31f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31f1c:	ldr	r2, [fp, #8]
   31f20:	sdiv	r0, r0, r2
   31f24:	cmp	r1, r0
   31f28:	blt	32094 <__assert_fail@plt+0x20940>
   31f2c:	b	320a8 <__assert_fail@plt+0x20954>
   31f30:	b	31f34 <__assert_fail@plt+0x207e0>
   31f34:	ldr	r0, [pc, #2108]	; 32778 <__assert_fail@plt+0x21024>
   31f38:	ldr	r1, [fp, #8]
   31f3c:	cmp	r1, r0
   31f40:	blt	31f58 <__assert_fail@plt+0x20804>
   31f44:	b	31f64 <__assert_fail@plt+0x20810>
   31f48:	ldr	r0, [fp, #8]
   31f4c:	movw	r1, #0
   31f50:	cmp	r1, r0
   31f54:	bge	31f64 <__assert_fail@plt+0x20810>
   31f58:	movw	r0, #0
   31f5c:	str	r0, [fp, #-56]	; 0xffffffc8
   31f60:	b	31f7c <__assert_fail@plt+0x20828>
   31f64:	ldr	r0, [pc, #1912]	; 326e4 <__assert_fail@plt+0x20f90>
   31f68:	ldr	r1, [fp, #8]
   31f6c:	movw	r2, #0
   31f70:	sub	r1, r2, r1
   31f74:	sdiv	r0, r0, r1
   31f78:	str	r0, [fp, #-56]	; 0xffffffc8
   31f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31f84:	mvn	r2, #0
   31f88:	sub	r1, r2, r1
   31f8c:	cmp	r0, r1
   31f90:	ble	32094 <__assert_fail@plt+0x20940>
   31f94:	b	320a8 <__assert_fail@plt+0x20954>
   31f98:	ldr	r0, [fp, #8]
   31f9c:	cmn	r0, #1
   31fa0:	bne	31fe8 <__assert_fail@plt+0x20894>
   31fa4:	b	31fa8 <__assert_fail@plt+0x20854>
   31fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fac:	add	r0, r0, #-2147483648	; 0x80000000
   31fb0:	movw	r1, #0
   31fb4:	cmp	r1, r0
   31fb8:	blt	32094 <__assert_fail@plt+0x20940>
   31fbc:	b	320a8 <__assert_fail@plt+0x20954>
   31fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fc4:	movw	r1, #0
   31fc8:	cmp	r1, r0
   31fcc:	bge	320a8 <__assert_fail@plt+0x20954>
   31fd0:	ldr	r0, [pc, #1804]	; 326e4 <__assert_fail@plt+0x20f90>
   31fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31fd8:	sub	r1, r1, #1
   31fdc:	cmp	r0, r1
   31fe0:	blt	32094 <__assert_fail@plt+0x20940>
   31fe4:	b	320a8 <__assert_fail@plt+0x20954>
   31fe8:	ldr	r0, [pc, #4072]	; 32fd8 <__assert_fail@plt+0x21884>
   31fec:	ldr	r1, [fp, #8]
   31ff0:	sdiv	r0, r0, r1
   31ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31ff8:	cmp	r0, r1
   31ffc:	blt	32094 <__assert_fail@plt+0x20940>
   32000:	b	320a8 <__assert_fail@plt+0x20954>
   32004:	ldr	r0, [fp, #8]
   32008:	cmp	r0, #0
   3200c:	bne	32014 <__assert_fail@plt+0x208c0>
   32010:	b	320a8 <__assert_fail@plt+0x20954>
   32014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32018:	cmp	r0, #0
   3201c:	bge	3207c <__assert_fail@plt+0x20928>
   32020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32024:	cmn	r0, #1
   32028:	bne	32060 <__assert_fail@plt+0x2090c>
   3202c:	b	32030 <__assert_fail@plt+0x208dc>
   32030:	ldr	r0, [fp, #8]
   32034:	add	r0, r0, #-2147483648	; 0x80000000
   32038:	movw	r1, #0
   3203c:	cmp	r1, r0
   32040:	blt	32094 <__assert_fail@plt+0x20940>
   32044:	b	320a8 <__assert_fail@plt+0x20954>
   32048:	ldr	r0, [pc, #1684]	; 326e4 <__assert_fail@plt+0x20f90>
   3204c:	ldr	r1, [fp, #8]
   32050:	sub	r1, r1, #1
   32054:	cmp	r0, r1
   32058:	blt	32094 <__assert_fail@plt+0x20940>
   3205c:	b	320a8 <__assert_fail@plt+0x20954>
   32060:	ldr	r0, [pc, #3952]	; 32fd8 <__assert_fail@plt+0x21884>
   32064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32068:	sdiv	r0, r0, r1
   3206c:	ldr	r1, [fp, #8]
   32070:	cmp	r0, r1
   32074:	blt	32094 <__assert_fail@plt+0x20940>
   32078:	b	320a8 <__assert_fail@plt+0x20954>
   3207c:	ldr	r0, [pc, #1632]	; 326e4 <__assert_fail@plt+0x20f90>
   32080:	ldr	r1, [fp, #8]
   32084:	sdiv	r0, r0, r1
   32088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3208c:	cmp	r0, r1
   32090:	bge	320a8 <__assert_fail@plt+0x20954>
   32094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32098:	ldr	r1, [fp, #8]
   3209c:	mul	r0, r0, r1
   320a0:	str	r0, [fp, #-28]	; 0xffffffe4
   320a4:	b	32b30 <__assert_fail@plt+0x213dc>
   320a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   320ac:	ldr	r1, [fp, #8]
   320b0:	mul	r0, r0, r1
   320b4:	str	r0, [fp, #-28]	; 0xffffffe4
   320b8:	b	32b40 <__assert_fail@plt+0x213ec>
   320bc:	ldr	r0, [fp, #8]
   320c0:	cmp	r0, #0
   320c4:	bge	321d4 <__assert_fail@plt+0x20a80>
   320c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   320cc:	cmp	r0, #0
   320d0:	bge	3215c <__assert_fail@plt+0x20a08>
   320d4:	b	320f4 <__assert_fail@plt+0x209a0>
   320d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   320dc:	ldr	r1, [fp, #8]
   320e0:	mvn	r2, #0
   320e4:	udiv	r1, r2, r1
   320e8:	cmp	r0, r1
   320ec:	bcc	32270 <__assert_fail@plt+0x20b1c>
   320f0:	b	32284 <__assert_fail@plt+0x20b30>
   320f4:	b	320f8 <__assert_fail@plt+0x209a4>
   320f8:	ldr	r0, [pc, #1656]	; 32778 <__assert_fail@plt+0x21024>
   320fc:	ldr	r1, [fp, #8]
   32100:	cmp	r1, r0
   32104:	blt	3211c <__assert_fail@plt+0x209c8>
   32108:	b	32128 <__assert_fail@plt+0x209d4>
   3210c:	ldr	r0, [fp, #8]
   32110:	movw	r1, #0
   32114:	cmp	r1, r0
   32118:	bge	32128 <__assert_fail@plt+0x209d4>
   3211c:	movw	r0, #1
   32120:	str	r0, [fp, #-60]	; 0xffffffc4
   32124:	b	32140 <__assert_fail@plt+0x209ec>
   32128:	ldr	r0, [fp, #8]
   3212c:	movw	r1, #0
   32130:	sub	r0, r1, r0
   32134:	mvn	r1, #0
   32138:	udiv	r0, r1, r0
   3213c:	str	r0, [fp, #-60]	; 0xffffffc4
   32140:	ldr	r0, [fp, #-60]	; 0xffffffc4
   32144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32148:	mvn	r2, #0
   3214c:	sub	r1, r2, r1
   32150:	cmp	r0, r1
   32154:	bls	32270 <__assert_fail@plt+0x20b1c>
   32158:	b	32284 <__assert_fail@plt+0x20b30>
   3215c:	b	32160 <__assert_fail@plt+0x20a0c>
   32160:	b	321b8 <__assert_fail@plt+0x20a64>
   32164:	b	321b8 <__assert_fail@plt+0x20a64>
   32168:	ldr	r0, [fp, #8]
   3216c:	cmn	r0, #1
   32170:	bne	321b8 <__assert_fail@plt+0x20a64>
   32174:	b	32178 <__assert_fail@plt+0x20a24>
   32178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3217c:	add	r0, r0, #0
   32180:	movw	r1, #0
   32184:	cmp	r1, r0
   32188:	blt	32270 <__assert_fail@plt+0x20b1c>
   3218c:	b	32284 <__assert_fail@plt+0x20b30>
   32190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32194:	movw	r1, #0
   32198:	cmp	r1, r0
   3219c:	bge	32284 <__assert_fail@plt+0x20b30>
   321a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321a4:	sub	r0, r0, #1
   321a8:	mvn	r1, #0
   321ac:	cmp	r1, r0
   321b0:	blt	32270 <__assert_fail@plt+0x20b1c>
   321b4:	b	32284 <__assert_fail@plt+0x20b30>
   321b8:	ldr	r0, [fp, #8]
   321bc:	movw	r1, #0
   321c0:	sdiv	r0, r1, r0
   321c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   321c8:	cmp	r0, r1
   321cc:	blt	32270 <__assert_fail@plt+0x20b1c>
   321d0:	b	32284 <__assert_fail@plt+0x20b30>
   321d4:	ldr	r0, [fp, #8]
   321d8:	cmp	r0, #0
   321dc:	bne	321e4 <__assert_fail@plt+0x20a90>
   321e0:	b	32284 <__assert_fail@plt+0x20b30>
   321e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321e8:	cmp	r0, #0
   321ec:	bge	32258 <__assert_fail@plt+0x20b04>
   321f0:	b	321f4 <__assert_fail@plt+0x20aa0>
   321f4:	b	3223c <__assert_fail@plt+0x20ae8>
   321f8:	b	3223c <__assert_fail@plt+0x20ae8>
   321fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32200:	cmn	r0, #1
   32204:	bne	3223c <__assert_fail@plt+0x20ae8>
   32208:	b	3220c <__assert_fail@plt+0x20ab8>
   3220c:	ldr	r0, [fp, #8]
   32210:	add	r0, r0, #0
   32214:	movw	r1, #0
   32218:	cmp	r1, r0
   3221c:	blt	32270 <__assert_fail@plt+0x20b1c>
   32220:	b	32284 <__assert_fail@plt+0x20b30>
   32224:	ldr	r0, [fp, #8]
   32228:	sub	r0, r0, #1
   3222c:	mvn	r1, #0
   32230:	cmp	r1, r0
   32234:	blt	32270 <__assert_fail@plt+0x20b1c>
   32238:	b	32284 <__assert_fail@plt+0x20b30>
   3223c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32240:	movw	r1, #0
   32244:	sdiv	r0, r1, r0
   32248:	ldr	r1, [fp, #8]
   3224c:	cmp	r0, r1
   32250:	blt	32270 <__assert_fail@plt+0x20b1c>
   32254:	b	32284 <__assert_fail@plt+0x20b30>
   32258:	ldr	r0, [fp, #8]
   3225c:	mvn	r1, #0
   32260:	udiv	r0, r1, r0
   32264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32268:	cmp	r0, r1
   3226c:	bcs	32284 <__assert_fail@plt+0x20b30>
   32270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32274:	ldr	r1, [fp, #8]
   32278:	mul	r0, r0, r1
   3227c:	str	r0, [fp, #-28]	; 0xffffffe4
   32280:	b	32b30 <__assert_fail@plt+0x213dc>
   32284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32288:	ldr	r1, [fp, #8]
   3228c:	mul	r0, r0, r1
   32290:	str	r0, [fp, #-28]	; 0xffffffe4
   32294:	b	32b40 <__assert_fail@plt+0x213ec>
   32298:	b	3229c <__assert_fail@plt+0x20b48>
   3229c:	b	322a0 <__assert_fail@plt+0x20b4c>
   322a0:	ldr	r0, [fp, #8]
   322a4:	cmp	r0, #0
   322a8:	bge	323ac <__assert_fail@plt+0x20c58>
   322ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   322b0:	cmp	r0, #0
   322b4:	bge	32340 <__assert_fail@plt+0x20bec>
   322b8:	b	322bc <__assert_fail@plt+0x20b68>
   322bc:	ldr	r0, [pc, #1056]	; 326e4 <__assert_fail@plt+0x20f90>
   322c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   322c4:	ldr	r2, [fp, #8]
   322c8:	sdiv	r0, r0, r2
   322cc:	cmp	r1, r0
   322d0:	blt	3243c <__assert_fail@plt+0x20ce8>
   322d4:	b	32450 <__assert_fail@plt+0x20cfc>
   322d8:	b	322dc <__assert_fail@plt+0x20b88>
   322dc:	ldr	r0, [pc, #1172]	; 32778 <__assert_fail@plt+0x21024>
   322e0:	ldr	r1, [fp, #8]
   322e4:	cmp	r1, r0
   322e8:	blt	32300 <__assert_fail@plt+0x20bac>
   322ec:	b	3230c <__assert_fail@plt+0x20bb8>
   322f0:	ldr	r0, [fp, #8]
   322f4:	movw	r1, #0
   322f8:	cmp	r1, r0
   322fc:	bge	3230c <__assert_fail@plt+0x20bb8>
   32300:	movw	r0, #0
   32304:	str	r0, [fp, #-64]	; 0xffffffc0
   32308:	b	32324 <__assert_fail@plt+0x20bd0>
   3230c:	ldr	r0, [pc, #976]	; 326e4 <__assert_fail@plt+0x20f90>
   32310:	ldr	r1, [fp, #8]
   32314:	movw	r2, #0
   32318:	sub	r1, r2, r1
   3231c:	sdiv	r0, r0, r1
   32320:	str	r0, [fp, #-64]	; 0xffffffc0
   32324:	ldr	r0, [fp, #-64]	; 0xffffffc0
   32328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3232c:	mvn	r2, #0
   32330:	sub	r1, r2, r1
   32334:	cmp	r0, r1
   32338:	ble	3243c <__assert_fail@plt+0x20ce8>
   3233c:	b	32450 <__assert_fail@plt+0x20cfc>
   32340:	ldr	r0, [fp, #8]
   32344:	cmn	r0, #1
   32348:	bne	32390 <__assert_fail@plt+0x20c3c>
   3234c:	b	32350 <__assert_fail@plt+0x20bfc>
   32350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32354:	add	r0, r0, #-2147483648	; 0x80000000
   32358:	movw	r1, #0
   3235c:	cmp	r1, r0
   32360:	blt	3243c <__assert_fail@plt+0x20ce8>
   32364:	b	32450 <__assert_fail@plt+0x20cfc>
   32368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3236c:	movw	r1, #0
   32370:	cmp	r1, r0
   32374:	bge	32450 <__assert_fail@plt+0x20cfc>
   32378:	ldr	r0, [pc, #868]	; 326e4 <__assert_fail@plt+0x20f90>
   3237c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32380:	sub	r1, r1, #1
   32384:	cmp	r0, r1
   32388:	blt	3243c <__assert_fail@plt+0x20ce8>
   3238c:	b	32450 <__assert_fail@plt+0x20cfc>
   32390:	ldr	r0, [pc, #3136]	; 32fd8 <__assert_fail@plt+0x21884>
   32394:	ldr	r1, [fp, #8]
   32398:	sdiv	r0, r0, r1
   3239c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   323a0:	cmp	r0, r1
   323a4:	blt	3243c <__assert_fail@plt+0x20ce8>
   323a8:	b	32450 <__assert_fail@plt+0x20cfc>
   323ac:	ldr	r0, [fp, #8]
   323b0:	cmp	r0, #0
   323b4:	bne	323bc <__assert_fail@plt+0x20c68>
   323b8:	b	32450 <__assert_fail@plt+0x20cfc>
   323bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   323c0:	cmp	r0, #0
   323c4:	bge	32424 <__assert_fail@plt+0x20cd0>
   323c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   323cc:	cmn	r0, #1
   323d0:	bne	32408 <__assert_fail@plt+0x20cb4>
   323d4:	b	323d8 <__assert_fail@plt+0x20c84>
   323d8:	ldr	r0, [fp, #8]
   323dc:	add	r0, r0, #-2147483648	; 0x80000000
   323e0:	movw	r1, #0
   323e4:	cmp	r1, r0
   323e8:	blt	3243c <__assert_fail@plt+0x20ce8>
   323ec:	b	32450 <__assert_fail@plt+0x20cfc>
   323f0:	ldr	r0, [pc, #748]	; 326e4 <__assert_fail@plt+0x20f90>
   323f4:	ldr	r1, [fp, #8]
   323f8:	sub	r1, r1, #1
   323fc:	cmp	r0, r1
   32400:	blt	3243c <__assert_fail@plt+0x20ce8>
   32404:	b	32450 <__assert_fail@plt+0x20cfc>
   32408:	ldr	r0, [pc, #3016]	; 32fd8 <__assert_fail@plt+0x21884>
   3240c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32410:	sdiv	r0, r0, r1
   32414:	ldr	r1, [fp, #8]
   32418:	cmp	r0, r1
   3241c:	blt	3243c <__assert_fail@plt+0x20ce8>
   32420:	b	32450 <__assert_fail@plt+0x20cfc>
   32424:	ldr	r0, [pc, #696]	; 326e4 <__assert_fail@plt+0x20f90>
   32428:	ldr	r1, [fp, #8]
   3242c:	sdiv	r0, r0, r1
   32430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32434:	cmp	r0, r1
   32438:	bge	32450 <__assert_fail@plt+0x20cfc>
   3243c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32440:	ldr	r1, [fp, #8]
   32444:	mul	r0, r0, r1
   32448:	str	r0, [fp, #-28]	; 0xffffffe4
   3244c:	b	32b30 <__assert_fail@plt+0x213dc>
   32450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32454:	ldr	r1, [fp, #8]
   32458:	mul	r0, r0, r1
   3245c:	str	r0, [fp, #-28]	; 0xffffffe4
   32460:	b	32b40 <__assert_fail@plt+0x213ec>
   32464:	ldr	r0, [fp, #8]
   32468:	cmp	r0, #0
   3246c:	bge	3257c <__assert_fail@plt+0x20e28>
   32470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32474:	cmp	r0, #0
   32478:	bge	32504 <__assert_fail@plt+0x20db0>
   3247c:	b	3249c <__assert_fail@plt+0x20d48>
   32480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32484:	ldr	r1, [fp, #8]
   32488:	mvn	r2, #0
   3248c:	udiv	r1, r2, r1
   32490:	cmp	r0, r1
   32494:	bcc	32618 <__assert_fail@plt+0x20ec4>
   32498:	b	3262c <__assert_fail@plt+0x20ed8>
   3249c:	b	324a0 <__assert_fail@plt+0x20d4c>
   324a0:	ldr	r0, [pc, #720]	; 32778 <__assert_fail@plt+0x21024>
   324a4:	ldr	r1, [fp, #8]
   324a8:	cmp	r1, r0
   324ac:	blt	324c4 <__assert_fail@plt+0x20d70>
   324b0:	b	324d0 <__assert_fail@plt+0x20d7c>
   324b4:	ldr	r0, [fp, #8]
   324b8:	movw	r1, #0
   324bc:	cmp	r1, r0
   324c0:	bge	324d0 <__assert_fail@plt+0x20d7c>
   324c4:	movw	r0, #1
   324c8:	str	r0, [fp, #-68]	; 0xffffffbc
   324cc:	b	324e8 <__assert_fail@plt+0x20d94>
   324d0:	ldr	r0, [fp, #8]
   324d4:	movw	r1, #0
   324d8:	sub	r0, r1, r0
   324dc:	mvn	r1, #0
   324e0:	udiv	r0, r1, r0
   324e4:	str	r0, [fp, #-68]	; 0xffffffbc
   324e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   324ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   324f0:	mvn	r2, #0
   324f4:	sub	r1, r2, r1
   324f8:	cmp	r0, r1
   324fc:	bls	32618 <__assert_fail@plt+0x20ec4>
   32500:	b	3262c <__assert_fail@plt+0x20ed8>
   32504:	b	32508 <__assert_fail@plt+0x20db4>
   32508:	b	32560 <__assert_fail@plt+0x20e0c>
   3250c:	b	32560 <__assert_fail@plt+0x20e0c>
   32510:	ldr	r0, [fp, #8]
   32514:	cmn	r0, #1
   32518:	bne	32560 <__assert_fail@plt+0x20e0c>
   3251c:	b	32520 <__assert_fail@plt+0x20dcc>
   32520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32524:	add	r0, r0, #0
   32528:	movw	r1, #0
   3252c:	cmp	r1, r0
   32530:	blt	32618 <__assert_fail@plt+0x20ec4>
   32534:	b	3262c <__assert_fail@plt+0x20ed8>
   32538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3253c:	movw	r1, #0
   32540:	cmp	r1, r0
   32544:	bge	3262c <__assert_fail@plt+0x20ed8>
   32548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3254c:	sub	r0, r0, #1
   32550:	mvn	r1, #0
   32554:	cmp	r1, r0
   32558:	blt	32618 <__assert_fail@plt+0x20ec4>
   3255c:	b	3262c <__assert_fail@plt+0x20ed8>
   32560:	ldr	r0, [fp, #8]
   32564:	movw	r1, #0
   32568:	sdiv	r0, r1, r0
   3256c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32570:	cmp	r0, r1
   32574:	blt	32618 <__assert_fail@plt+0x20ec4>
   32578:	b	3262c <__assert_fail@plt+0x20ed8>
   3257c:	ldr	r0, [fp, #8]
   32580:	cmp	r0, #0
   32584:	bne	3258c <__assert_fail@plt+0x20e38>
   32588:	b	3262c <__assert_fail@plt+0x20ed8>
   3258c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32590:	cmp	r0, #0
   32594:	bge	32600 <__assert_fail@plt+0x20eac>
   32598:	b	3259c <__assert_fail@plt+0x20e48>
   3259c:	b	325e4 <__assert_fail@plt+0x20e90>
   325a0:	b	325e4 <__assert_fail@plt+0x20e90>
   325a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   325a8:	cmn	r0, #1
   325ac:	bne	325e4 <__assert_fail@plt+0x20e90>
   325b0:	b	325b4 <__assert_fail@plt+0x20e60>
   325b4:	ldr	r0, [fp, #8]
   325b8:	add	r0, r0, #0
   325bc:	movw	r1, #0
   325c0:	cmp	r1, r0
   325c4:	blt	32618 <__assert_fail@plt+0x20ec4>
   325c8:	b	3262c <__assert_fail@plt+0x20ed8>
   325cc:	ldr	r0, [fp, #8]
   325d0:	sub	r0, r0, #1
   325d4:	mvn	r1, #0
   325d8:	cmp	r1, r0
   325dc:	blt	32618 <__assert_fail@plt+0x20ec4>
   325e0:	b	3262c <__assert_fail@plt+0x20ed8>
   325e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   325e8:	movw	r1, #0
   325ec:	sdiv	r0, r1, r0
   325f0:	ldr	r1, [fp, #8]
   325f4:	cmp	r0, r1
   325f8:	blt	32618 <__assert_fail@plt+0x20ec4>
   325fc:	b	3262c <__assert_fail@plt+0x20ed8>
   32600:	ldr	r0, [fp, #8]
   32604:	mvn	r1, #0
   32608:	udiv	r0, r1, r0
   3260c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32610:	cmp	r0, r1
   32614:	bcs	3262c <__assert_fail@plt+0x20ed8>
   32618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3261c:	ldr	r1, [fp, #8]
   32620:	mul	r0, r0, r1
   32624:	str	r0, [fp, #-28]	; 0xffffffe4
   32628:	b	32b30 <__assert_fail@plt+0x213dc>
   3262c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32630:	ldr	r1, [fp, #8]
   32634:	mul	r0, r0, r1
   32638:	str	r0, [fp, #-28]	; 0xffffffe4
   3263c:	b	32b40 <__assert_fail@plt+0x213ec>
   32640:	b	32644 <__assert_fail@plt+0x20ef0>
   32644:	ldr	r0, [fp, #8]
   32648:	cmp	r0, #0
   3264c:	bge	327dc <__assert_fail@plt+0x21088>
   32650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32654:	cmp	r0, #0
   32658:	bge	32744 <__assert_fail@plt+0x20ff0>
   3265c:	b	32660 <__assert_fail@plt+0x20f0c>
   32660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32664:	ldr	r1, [fp, #8]
   32668:	asr	r3, r1, #31
   3266c:	mvn	r2, #0
   32670:	mvn	ip, #-2147483648	; 0x80000000
   32674:	str	r0, [fp, #-72]	; 0xffffffb8
   32678:	mov	r0, r2
   3267c:	str	r1, [fp, #-76]	; 0xffffffb4
   32680:	mov	r1, ip
   32684:	ldr	r2, [fp, #-76]	; 0xffffffb4
   32688:	bl	3c428 <__assert_fail@plt+0x2acd4>
   3268c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32690:	subs	r0, r2, r0
   32694:	rscs	r1, r1, r2, asr #31
   32698:	str	r0, [fp, #-80]	; 0xffffffb0
   3269c:	str	r1, [fp, #-84]	; 0xffffffac
   326a0:	blt	328bc <__assert_fail@plt+0x21168>
   326a4:	b	328d0 <__assert_fail@plt+0x2117c>
   326a8:	b	326ac <__assert_fail@plt+0x20f58>
   326ac:	ldr	r0, [pc, #196]	; 32778 <__assert_fail@plt+0x21024>
   326b0:	ldr	r1, [fp, #8]
   326b4:	cmp	r1, r0
   326b8:	blt	326d0 <__assert_fail@plt+0x20f7c>
   326bc:	b	326e8 <__assert_fail@plt+0x20f94>
   326c0:	ldr	r0, [fp, #8]
   326c4:	movw	r1, #0
   326c8:	cmp	r1, r0
   326cc:	bge	326e8 <__assert_fail@plt+0x20f94>
   326d0:	mov	r0, #0
   326d4:	mvn	r1, #0
   326d8:	str	r1, [fp, #-88]	; 0xffffffa8
   326dc:	str	r0, [fp, #-92]	; 0xffffffa4
   326e0:	b	3271c <__assert_fail@plt+0x20fc8>
   326e4:	svcvc	0x00ffffff
   326e8:	ldr	r0, [fp, #8]
   326ec:	rsb	r0, r0, #0
   326f0:	asr	r3, r0, #31
   326f4:	mvn	r1, #0
   326f8:	mvn	r2, #-2147483648	; 0x80000000
   326fc:	str	r0, [fp, #-96]	; 0xffffffa0
   32700:	mov	r0, r1
   32704:	mov	r1, r2
   32708:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3270c:	bl	3c428 <__assert_fail@plt+0x2acd4>
   32710:	str	r0, [fp, #-88]	; 0xffffffa8
   32714:	str	r1, [fp, #-92]	; 0xffffffa4
   32718:	b	3271c <__assert_fail@plt+0x20fc8>
   3271c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   32720:	ldr	r1, [fp, #-88]	; 0xffffffa8
   32724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32728:	mvn	r2, r2
   3272c:	subs	r1, r2, r1
   32730:	rscs	r0, r0, r2, asr #31
   32734:	str	r1, [fp, #-100]	; 0xffffff9c
   32738:	str	r0, [fp, #-104]	; 0xffffff98
   3273c:	bge	328bc <__assert_fail@plt+0x21168>
   32740:	b	328d0 <__assert_fail@plt+0x2117c>
   32744:	ldr	r0, [fp, #8]
   32748:	cmn	r0, #1
   3274c:	bne	3279c <__assert_fail@plt+0x21048>
   32750:	b	32754 <__assert_fail@plt+0x21000>
   32754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32758:	mov	r1, #-2147483648	; 0x80000000
   3275c:	add	r1, r1, r0, asr #31
   32760:	rsbs	r0, r0, #0
   32764:	rscs	r1, r1, #0
   32768:	str	r0, [fp, #-108]	; 0xffffff94
   3276c:	str	r1, [fp, #-112]	; 0xffffff90
   32770:	blt	328bc <__assert_fail@plt+0x21168>
   32774:	b	328d0 <__assert_fail@plt+0x2117c>
   32778:	andhi	r0, r0, r1
   3277c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32780:	movw	r1, #0
   32784:	cmp	r1, r0
   32788:	bge	328d0 <__assert_fail@plt+0x2117c>
   3278c:	mov	r0, #0
   32790:	cmp	r0, #0
   32794:	bne	328bc <__assert_fail@plt+0x21168>
   32798:	b	328d0 <__assert_fail@plt+0x2117c>
   3279c:	ldr	r0, [fp, #8]
   327a0:	asr	r3, r0, #31
   327a4:	mov	r1, #0
   327a8:	mov	r2, #-2147483648	; 0x80000000
   327ac:	str	r0, [fp, #-116]	; 0xffffff8c
   327b0:	mov	r0, r1
   327b4:	mov	r1, r2
   327b8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   327bc:	bl	3c428 <__assert_fail@plt+0x2acd4>
   327c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   327c4:	subs	r0, r0, r2
   327c8:	sbcs	r1, r1, r2, asr #31
   327cc:	str	r0, [fp, #-120]	; 0xffffff88
   327d0:	str	r1, [fp, #-124]	; 0xffffff84
   327d4:	blt	328bc <__assert_fail@plt+0x21168>
   327d8:	b	328d0 <__assert_fail@plt+0x2117c>
   327dc:	ldr	r0, [fp, #8]
   327e0:	cmp	r0, #0
   327e4:	bne	327ec <__assert_fail@plt+0x21098>
   327e8:	b	328d0 <__assert_fail@plt+0x2117c>
   327ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   327f0:	cmp	r0, #0
   327f4:	bge	3287c <__assert_fail@plt+0x21128>
   327f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   327fc:	cmn	r0, #1
   32800:	bne	3283c <__assert_fail@plt+0x210e8>
   32804:	b	32808 <__assert_fail@plt+0x210b4>
   32808:	ldr	r0, [fp, #8]
   3280c:	mov	r1, #-2147483648	; 0x80000000
   32810:	add	r1, r1, r0, asr #31
   32814:	rsbs	r0, r0, #0
   32818:	rscs	r1, r1, #0
   3281c:	str	r0, [fp, #-128]	; 0xffffff80
   32820:	str	r1, [fp, #-132]	; 0xffffff7c
   32824:	blt	328bc <__assert_fail@plt+0x21168>
   32828:	b	328d0 <__assert_fail@plt+0x2117c>
   3282c:	mov	r0, #0
   32830:	cmp	r0, #0
   32834:	bne	328bc <__assert_fail@plt+0x21168>
   32838:	b	328d0 <__assert_fail@plt+0x2117c>
   3283c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32840:	asr	r3, r0, #31
   32844:	mov	r1, #0
   32848:	mov	r2, #-2147483648	; 0x80000000
   3284c:	str	r0, [fp, #-136]	; 0xffffff78
   32850:	mov	r0, r1
   32854:	mov	r1, r2
   32858:	ldr	r2, [fp, #-136]	; 0xffffff78
   3285c:	bl	3c428 <__assert_fail@plt+0x2acd4>
   32860:	ldr	r2, [fp, #8]
   32864:	subs	r0, r0, r2
   32868:	sbcs	r1, r1, r2, asr #31
   3286c:	str	r0, [fp, #-140]	; 0xffffff74
   32870:	str	r1, [fp, #-144]	; 0xffffff70
   32874:	blt	328bc <__assert_fail@plt+0x21168>
   32878:	b	328d0 <__assert_fail@plt+0x2117c>
   3287c:	ldr	r0, [fp, #8]
   32880:	asr	r3, r0, #31
   32884:	mvn	r1, #0
   32888:	mvn	r2, #-2147483648	; 0x80000000
   3288c:	str	r0, [fp, #-148]	; 0xffffff6c
   32890:	mov	r0, r1
   32894:	mov	r1, r2
   32898:	ldr	r2, [fp, #-148]	; 0xffffff6c
   3289c:	bl	3c428 <__assert_fail@plt+0x2acd4>
   328a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   328a4:	subs	r0, r0, r2
   328a8:	sbcs	r1, r1, r2, asr #31
   328ac:	str	r0, [fp, #-152]	; 0xffffff68
   328b0:	str	r1, [fp, #-156]	; 0xffffff64
   328b4:	bge	328d0 <__assert_fail@plt+0x2117c>
   328b8:	b	328bc <__assert_fail@plt+0x21168>
   328bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   328c0:	ldr	r1, [fp, #8]
   328c4:	mul	r0, r0, r1
   328c8:	str	r0, [fp, #-28]	; 0xffffffe4
   328cc:	b	32b30 <__assert_fail@plt+0x213dc>
   328d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   328d4:	ldr	r1, [fp, #8]
   328d8:	mul	r0, r0, r1
   328dc:	str	r0, [fp, #-28]	; 0xffffffe4
   328e0:	b	32b40 <__assert_fail@plt+0x213ec>
   328e4:	ldr	r0, [fp, #8]
   328e8:	cmp	r0, #0
   328ec:	bge	32a4c <__assert_fail@plt+0x212f8>
   328f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   328f4:	cmp	r0, #0
   328f8:	bge	329d4 <__assert_fail@plt+0x21280>
   328fc:	b	32944 <__assert_fail@plt+0x211f0>
   32900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32904:	ldr	r1, [fp, #8]
   32908:	asr	r3, r1, #31
   3290c:	mvn	r2, #0
   32910:	str	r0, [fp, #-160]	; 0xffffff60
   32914:	mov	r0, r2
   32918:	str	r1, [fp, #-164]	; 0xffffff5c
   3291c:	mov	r1, r2
   32920:	ldr	r2, [fp, #-164]	; 0xffffff5c
   32924:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   32928:	ldr	r2, [fp, #-160]	; 0xffffff60
   3292c:	subs	r0, r2, r0
   32930:	rscs	r1, r1, r2, asr #31
   32934:	str	r0, [fp, #-168]	; 0xffffff58
   32938:	str	r1, [fp, #-172]	; 0xffffff54
   3293c:	bcc	32b08 <__assert_fail@plt+0x213b4>
   32940:	b	32b1c <__assert_fail@plt+0x213c8>
   32944:	b	32948 <__assert_fail@plt+0x211f4>
   32948:	ldr	r0, [pc, #-472]	; 32778 <__assert_fail@plt+0x21024>
   3294c:	ldr	r1, [fp, #8]
   32950:	cmp	r1, r0
   32954:	blt	3296c <__assert_fail@plt+0x21218>
   32958:	b	32980 <__assert_fail@plt+0x2122c>
   3295c:	ldr	r0, [fp, #8]
   32960:	movw	r1, #0
   32964:	cmp	r1, r0
   32968:	bge	32980 <__assert_fail@plt+0x2122c>
   3296c:	mov	r0, #1
   32970:	mvn	r1, #0
   32974:	str	r1, [fp, #-176]	; 0xffffff50
   32978:	str	r0, [fp, #-180]	; 0xffffff4c
   3297c:	b	329ac <__assert_fail@plt+0x21258>
   32980:	ldr	r0, [fp, #8]
   32984:	rsb	r0, r0, #0
   32988:	asr	r3, r0, #31
   3298c:	mvn	r1, #0
   32990:	str	r0, [fp, #-184]	; 0xffffff48
   32994:	mov	r0, r1
   32998:	ldr	r2, [fp, #-184]	; 0xffffff48
   3299c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   329a0:	str	r0, [fp, #-176]	; 0xffffff50
   329a4:	str	r1, [fp, #-180]	; 0xffffff4c
   329a8:	b	329ac <__assert_fail@plt+0x21258>
   329ac:	ldr	r0, [fp, #-180]	; 0xffffff4c
   329b0:	ldr	r1, [fp, #-176]	; 0xffffff50
   329b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   329b8:	mvn	r2, r2
   329bc:	subs	r1, r2, r1
   329c0:	rscs	r0, r0, r2, asr #31
   329c4:	str	r1, [sp, #188]	; 0xbc
   329c8:	str	r0, [sp, #184]	; 0xb8
   329cc:	bcs	32b08 <__assert_fail@plt+0x213b4>
   329d0:	b	32b1c <__assert_fail@plt+0x213c8>
   329d4:	b	329d8 <__assert_fail@plt+0x21284>
   329d8:	b	32a30 <__assert_fail@plt+0x212dc>
   329dc:	b	32a30 <__assert_fail@plt+0x212dc>
   329e0:	ldr	r0, [fp, #8]
   329e4:	cmn	r0, #1
   329e8:	bne	32a30 <__assert_fail@plt+0x212dc>
   329ec:	b	329f0 <__assert_fail@plt+0x2129c>
   329f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329f4:	add	r0, r0, #0
   329f8:	movw	r1, #0
   329fc:	cmp	r1, r0
   32a00:	blt	32b08 <__assert_fail@plt+0x213b4>
   32a04:	b	32b1c <__assert_fail@plt+0x213c8>
   32a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a0c:	movw	r1, #0
   32a10:	cmp	r1, r0
   32a14:	bge	32b1c <__assert_fail@plt+0x213c8>
   32a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a1c:	sub	r0, r0, #1
   32a20:	mvn	r1, #0
   32a24:	cmp	r1, r0
   32a28:	blt	32b08 <__assert_fail@plt+0x213b4>
   32a2c:	b	32b1c <__assert_fail@plt+0x213c8>
   32a30:	ldr	r0, [fp, #8]
   32a34:	movw	r1, #0
   32a38:	sdiv	r0, r1, r0
   32a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32a40:	cmp	r0, r1
   32a44:	blt	32b08 <__assert_fail@plt+0x213b4>
   32a48:	b	32b1c <__assert_fail@plt+0x213c8>
   32a4c:	ldr	r0, [fp, #8]
   32a50:	cmp	r0, #0
   32a54:	bne	32a5c <__assert_fail@plt+0x21308>
   32a58:	b	32b1c <__assert_fail@plt+0x213c8>
   32a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a60:	cmp	r0, #0
   32a64:	bge	32ad0 <__assert_fail@plt+0x2137c>
   32a68:	b	32a6c <__assert_fail@plt+0x21318>
   32a6c:	b	32ab4 <__assert_fail@plt+0x21360>
   32a70:	b	32ab4 <__assert_fail@plt+0x21360>
   32a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a78:	cmn	r0, #1
   32a7c:	bne	32ab4 <__assert_fail@plt+0x21360>
   32a80:	b	32a84 <__assert_fail@plt+0x21330>
   32a84:	ldr	r0, [fp, #8]
   32a88:	add	r0, r0, #0
   32a8c:	movw	r1, #0
   32a90:	cmp	r1, r0
   32a94:	blt	32b08 <__assert_fail@plt+0x213b4>
   32a98:	b	32b1c <__assert_fail@plt+0x213c8>
   32a9c:	ldr	r0, [fp, #8]
   32aa0:	sub	r0, r0, #1
   32aa4:	mvn	r1, #0
   32aa8:	cmp	r1, r0
   32aac:	blt	32b08 <__assert_fail@plt+0x213b4>
   32ab0:	b	32b1c <__assert_fail@plt+0x213c8>
   32ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ab8:	movw	r1, #0
   32abc:	sdiv	r0, r1, r0
   32ac0:	ldr	r1, [fp, #8]
   32ac4:	cmp	r0, r1
   32ac8:	blt	32b08 <__assert_fail@plt+0x213b4>
   32acc:	b	32b1c <__assert_fail@plt+0x213c8>
   32ad0:	ldr	r0, [fp, #8]
   32ad4:	asr	r3, r0, #31
   32ad8:	mvn	r1, #0
   32adc:	str	r0, [sp, #180]	; 0xb4
   32ae0:	mov	r0, r1
   32ae4:	ldr	r2, [sp, #180]	; 0xb4
   32ae8:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   32aec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32af0:	subs	r0, r0, r2
   32af4:	sbcs	r1, r1, r2, asr #31
   32af8:	str	r0, [sp, #176]	; 0xb0
   32afc:	str	r1, [sp, #172]	; 0xac
   32b00:	bcs	32b1c <__assert_fail@plt+0x213c8>
   32b04:	b	32b08 <__assert_fail@plt+0x213b4>
   32b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b0c:	ldr	r1, [fp, #8]
   32b10:	mul	r0, r0, r1
   32b14:	str	r0, [fp, #-28]	; 0xffffffe4
   32b18:	b	32b30 <__assert_fail@plt+0x213dc>
   32b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b20:	ldr	r1, [fp, #8]
   32b24:	mul	r0, r0, r1
   32b28:	str	r0, [fp, #-28]	; 0xffffffe4
   32b2c:	b	32b40 <__assert_fail@plt+0x213ec>
   32b30:	ldr	r0, [pc, #-1108]	; 326e4 <__assert_fail@plt+0x20f90>
   32b34:	str	r0, [sp, #168]	; 0xa8
   32b38:	b	32b60 <__assert_fail@plt+0x2140c>
   32b3c:			; <UNDEFINED> instruction: 0xffff8000
   32b40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32b44:	cmp	r0, #64	; 0x40
   32b48:	movw	r0, #0
   32b4c:	movlt	r0, #1
   32b50:	tst	r0, #1
   32b54:	movw	r0, #64	; 0x40
   32b58:	moveq	r0, #0
   32b5c:	str	r0, [sp, #168]	; 0xa8
   32b60:	ldr	r0, [sp, #168]	; 0xa8
   32b64:	str	r0, [fp, #-32]	; 0xffffffe0
   32b68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b6c:	cmp	r0, #0
   32b70:	beq	32ba0 <__assert_fail@plt+0x2144c>
   32b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b78:	ldr	r1, [fp, #8]
   32b7c:	sdiv	r0, r0, r1
   32b80:	str	r0, [fp, #-24]	; 0xffffffe8
   32b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b88:	mov	r1, r0
   32b8c:	ldr	r2, [fp, #8]
   32b90:	sdiv	r3, r0, r2
   32b94:	mls	r0, r3, r2, r0
   32b98:	sub	r0, r1, r0
   32b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   32ba0:	ldr	r0, [fp, #-4]
   32ba4:	movw	r1, #0
   32ba8:	cmp	r0, r1
   32bac:	bne	32bbc <__assert_fail@plt+0x21468>
   32bb0:	ldr	r0, [fp, #-8]
   32bb4:	movw	r1, #0
   32bb8:	str	r1, [r0]
   32bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   32bc4:	sub	r0, r0, r1
   32bc8:	ldr	r1, [fp, #-12]
   32bcc:	cmp	r0, r1
   32bd0:	bge	34008 <__assert_fail@plt+0x228b4>
   32bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   32bd8:	ldr	r1, [fp, #-12]
   32bdc:	add	r1, r0, r1
   32be0:	mov	r2, #1
   32be4:	cmp	r1, r0
   32be8:	movwvc	r2, #0
   32bec:	str	r1, [fp, #-24]	; 0xffffffe8
   32bf0:	tst	r2, #1
   32bf4:	bne	34004 <__assert_fail@plt+0x228b0>
   32bf8:	ldr	r0, [fp, #-16]
   32bfc:	movw	r1, #0
   32c00:	cmp	r1, r0
   32c04:	bgt	32c18 <__assert_fail@plt+0x214c4>
   32c08:	ldr	r0, [fp, #-16]
   32c0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32c10:	cmp	r0, r1
   32c14:	blt	34004 <__assert_fail@plt+0x228b0>
   32c18:	b	32ff4 <__assert_fail@plt+0x218a0>
   32c1c:	b	32c20 <__assert_fail@plt+0x214cc>
   32c20:	ldr	r0, [fp, #8]
   32c24:	cmp	r0, #0
   32c28:	bge	32d3c <__assert_fail@plt+0x215e8>
   32c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c30:	cmp	r0, #0
   32c34:	bge	32cc0 <__assert_fail@plt+0x2156c>
   32c38:	b	32c3c <__assert_fail@plt+0x214e8>
   32c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c40:	ldr	r1, [fp, #8]
   32c44:	movw	r2, #127	; 0x7f
   32c48:	sdiv	r1, r2, r1
   32c4c:	cmp	r0, r1
   32c50:	blt	32ddc <__assert_fail@plt+0x21688>
   32c54:	b	32df4 <__assert_fail@plt+0x216a0>
   32c58:	b	32c5c <__assert_fail@plt+0x21508>
   32c5c:	ldr	r0, [pc, #-1260]	; 32778 <__assert_fail@plt+0x21024>
   32c60:	ldr	r1, [fp, #8]
   32c64:	cmp	r1, r0
   32c68:	blt	32c80 <__assert_fail@plt+0x2152c>
   32c6c:	b	32c8c <__assert_fail@plt+0x21538>
   32c70:	ldr	r0, [fp, #8]
   32c74:	movw	r1, #0
   32c78:	cmp	r1, r0
   32c7c:	bge	32c8c <__assert_fail@plt+0x21538>
   32c80:	movw	r0, #0
   32c84:	str	r0, [sp, #164]	; 0xa4
   32c88:	b	32ca4 <__assert_fail@plt+0x21550>
   32c8c:	ldr	r0, [fp, #8]
   32c90:	movw	r1, #0
   32c94:	sub	r0, r1, r0
   32c98:	movw	r1, #127	; 0x7f
   32c9c:	sdiv	r0, r1, r0
   32ca0:	str	r0, [sp, #164]	; 0xa4
   32ca4:	ldr	r0, [sp, #164]	; 0xa4
   32ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32cac:	mvn	r2, #0
   32cb0:	sub	r1, r2, r1
   32cb4:	cmp	r0, r1
   32cb8:	ble	32ddc <__assert_fail@plt+0x21688>
   32cbc:	b	32df4 <__assert_fail@plt+0x216a0>
   32cc0:	b	32cc4 <__assert_fail@plt+0x21570>
   32cc4:	b	32d20 <__assert_fail@plt+0x215cc>
   32cc8:	b	32d20 <__assert_fail@plt+0x215cc>
   32ccc:	ldr	r0, [fp, #8]
   32cd0:	cmn	r0, #1
   32cd4:	bne	32d20 <__assert_fail@plt+0x215cc>
   32cd8:	b	32cdc <__assert_fail@plt+0x21588>
   32cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ce0:	mvn	r1, #127	; 0x7f
   32ce4:	add	r0, r0, r1
   32ce8:	movw	r1, #0
   32cec:	cmp	r1, r0
   32cf0:	blt	32ddc <__assert_fail@plt+0x21688>
   32cf4:	b	32df4 <__assert_fail@plt+0x216a0>
   32cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32cfc:	movw	r1, #0
   32d00:	cmp	r1, r0
   32d04:	bge	32df4 <__assert_fail@plt+0x216a0>
   32d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d0c:	sub	r0, r0, #1
   32d10:	movw	r1, #127	; 0x7f
   32d14:	cmp	r1, r0
   32d18:	blt	32ddc <__assert_fail@plt+0x21688>
   32d1c:	b	32df4 <__assert_fail@plt+0x216a0>
   32d20:	ldr	r0, [fp, #8]
   32d24:	mvn	r1, #127	; 0x7f
   32d28:	sdiv	r0, r1, r0
   32d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32d30:	cmp	r0, r1
   32d34:	blt	32ddc <__assert_fail@plt+0x21688>
   32d38:	b	32df4 <__assert_fail@plt+0x216a0>
   32d3c:	ldr	r0, [fp, #8]
   32d40:	cmp	r0, #0
   32d44:	bne	32d4c <__assert_fail@plt+0x215f8>
   32d48:	b	32df4 <__assert_fail@plt+0x216a0>
   32d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d50:	cmp	r0, #0
   32d54:	bge	32dc4 <__assert_fail@plt+0x21670>
   32d58:	b	32d5c <__assert_fail@plt+0x21608>
   32d5c:	b	32da8 <__assert_fail@plt+0x21654>
   32d60:	b	32da8 <__assert_fail@plt+0x21654>
   32d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d68:	cmn	r0, #1
   32d6c:	bne	32da8 <__assert_fail@plt+0x21654>
   32d70:	b	32d74 <__assert_fail@plt+0x21620>
   32d74:	ldr	r0, [fp, #8]
   32d78:	mvn	r1, #127	; 0x7f
   32d7c:	add	r0, r0, r1
   32d80:	movw	r1, #0
   32d84:	cmp	r1, r0
   32d88:	blt	32ddc <__assert_fail@plt+0x21688>
   32d8c:	b	32df4 <__assert_fail@plt+0x216a0>
   32d90:	ldr	r0, [fp, #8]
   32d94:	sub	r0, r0, #1
   32d98:	movw	r1, #127	; 0x7f
   32d9c:	cmp	r1, r0
   32da0:	blt	32ddc <__assert_fail@plt+0x21688>
   32da4:	b	32df4 <__assert_fail@plt+0x216a0>
   32da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32dac:	mvn	r1, #127	; 0x7f
   32db0:	sdiv	r0, r1, r0
   32db4:	ldr	r1, [fp, #8]
   32db8:	cmp	r0, r1
   32dbc:	blt	32ddc <__assert_fail@plt+0x21688>
   32dc0:	b	32df4 <__assert_fail@plt+0x216a0>
   32dc4:	ldr	r0, [fp, #8]
   32dc8:	movw	r1, #127	; 0x7f
   32dcc:	sdiv	r0, r1, r0
   32dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32dd4:	cmp	r0, r1
   32dd8:	bge	32df4 <__assert_fail@plt+0x216a0>
   32ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32de0:	ldr	r1, [fp, #8]
   32de4:	mul	r0, r0, r1
   32de8:	sxtb	r0, r0
   32dec:	str	r0, [fp, #-28]	; 0xffffffe4
   32df0:	b	34004 <__assert_fail@plt+0x228b0>
   32df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32df8:	ldr	r1, [fp, #8]
   32dfc:	mul	r0, r0, r1
   32e00:	sxtb	r0, r0
   32e04:	str	r0, [fp, #-28]	; 0xffffffe4
   32e08:	b	34008 <__assert_fail@plt+0x228b4>
   32e0c:	ldr	r0, [fp, #8]
   32e10:	cmp	r0, #0
   32e14:	bge	32f24 <__assert_fail@plt+0x217d0>
   32e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32e1c:	cmp	r0, #0
   32e20:	bge	32eac <__assert_fail@plt+0x21758>
   32e24:	b	32e28 <__assert_fail@plt+0x216d4>
   32e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32e2c:	ldr	r1, [fp, #8]
   32e30:	movw	r2, #255	; 0xff
   32e34:	sdiv	r1, r2, r1
   32e38:	cmp	r0, r1
   32e3c:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32e40:	b	32fdc <__assert_fail@plt+0x21888>
   32e44:	b	32e48 <__assert_fail@plt+0x216f4>
   32e48:	ldr	r0, [pc, #-1752]	; 32778 <__assert_fail@plt+0x21024>
   32e4c:	ldr	r1, [fp, #8]
   32e50:	cmp	r1, r0
   32e54:	blt	32e6c <__assert_fail@plt+0x21718>
   32e58:	b	32e78 <__assert_fail@plt+0x21724>
   32e5c:	ldr	r0, [fp, #8]
   32e60:	movw	r1, #0
   32e64:	cmp	r1, r0
   32e68:	bge	32e78 <__assert_fail@plt+0x21724>
   32e6c:	movw	r0, #0
   32e70:	str	r0, [sp, #160]	; 0xa0
   32e74:	b	32e90 <__assert_fail@plt+0x2173c>
   32e78:	ldr	r0, [fp, #8]
   32e7c:	movw	r1, #0
   32e80:	sub	r0, r1, r0
   32e84:	movw	r1, #255	; 0xff
   32e88:	sdiv	r0, r1, r0
   32e8c:	str	r0, [sp, #160]	; 0xa0
   32e90:	ldr	r0, [sp, #160]	; 0xa0
   32e94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32e98:	mvn	r2, #0
   32e9c:	sub	r1, r2, r1
   32ea0:	cmp	r0, r1
   32ea4:	ble	32fc0 <__assert_fail@plt+0x2186c>
   32ea8:	b	32fdc <__assert_fail@plt+0x21888>
   32eac:	b	32eb0 <__assert_fail@plt+0x2175c>
   32eb0:	b	32f08 <__assert_fail@plt+0x217b4>
   32eb4:	b	32f08 <__assert_fail@plt+0x217b4>
   32eb8:	ldr	r0, [fp, #8]
   32ebc:	cmn	r0, #1
   32ec0:	bne	32f08 <__assert_fail@plt+0x217b4>
   32ec4:	b	32ec8 <__assert_fail@plt+0x21774>
   32ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ecc:	add	r0, r0, #0
   32ed0:	movw	r1, #0
   32ed4:	cmp	r1, r0
   32ed8:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32edc:	b	32fdc <__assert_fail@plt+0x21888>
   32ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ee4:	movw	r1, #0
   32ee8:	cmp	r1, r0
   32eec:	bge	32fdc <__assert_fail@plt+0x21888>
   32ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ef4:	sub	r0, r0, #1
   32ef8:	mvn	r1, #0
   32efc:	cmp	r1, r0
   32f00:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32f04:	b	32fdc <__assert_fail@plt+0x21888>
   32f08:	ldr	r0, [fp, #8]
   32f0c:	movw	r1, #0
   32f10:	sdiv	r0, r1, r0
   32f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32f18:	cmp	r0, r1
   32f1c:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32f20:	b	32fdc <__assert_fail@plt+0x21888>
   32f24:	ldr	r0, [fp, #8]
   32f28:	cmp	r0, #0
   32f2c:	bne	32f34 <__assert_fail@plt+0x217e0>
   32f30:	b	32fdc <__assert_fail@plt+0x21888>
   32f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f38:	cmp	r0, #0
   32f3c:	bge	32fa8 <__assert_fail@plt+0x21854>
   32f40:	b	32f44 <__assert_fail@plt+0x217f0>
   32f44:	b	32f8c <__assert_fail@plt+0x21838>
   32f48:	b	32f8c <__assert_fail@plt+0x21838>
   32f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f50:	cmn	r0, #1
   32f54:	bne	32f8c <__assert_fail@plt+0x21838>
   32f58:	b	32f5c <__assert_fail@plt+0x21808>
   32f5c:	ldr	r0, [fp, #8]
   32f60:	add	r0, r0, #0
   32f64:	movw	r1, #0
   32f68:	cmp	r1, r0
   32f6c:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32f70:	b	32fdc <__assert_fail@plt+0x21888>
   32f74:	ldr	r0, [fp, #8]
   32f78:	sub	r0, r0, #1
   32f7c:	mvn	r1, #0
   32f80:	cmp	r1, r0
   32f84:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32f88:	b	32fdc <__assert_fail@plt+0x21888>
   32f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f90:	movw	r1, #0
   32f94:	sdiv	r0, r1, r0
   32f98:	ldr	r1, [fp, #8]
   32f9c:	cmp	r0, r1
   32fa0:	blt	32fc0 <__assert_fail@plt+0x2186c>
   32fa4:	b	32fdc <__assert_fail@plt+0x21888>
   32fa8:	ldr	r0, [fp, #8]
   32fac:	movw	r1, #255	; 0xff
   32fb0:	sdiv	r0, r1, r0
   32fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32fb8:	cmp	r0, r1
   32fbc:	bge	32fdc <__assert_fail@plt+0x21888>
   32fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32fc4:	ldr	r1, [fp, #8]
   32fc8:	mul	r0, r0, r1
   32fcc:	and	r0, r0, #255	; 0xff
   32fd0:	str	r0, [fp, #-28]	; 0xffffffe4
   32fd4:	b	34004 <__assert_fail@plt+0x228b0>
   32fd8:	andhi	r0, r0, r0
   32fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32fe0:	ldr	r1, [fp, #8]
   32fe4:	mul	r0, r0, r1
   32fe8:	and	r0, r0, #255	; 0xff
   32fec:	str	r0, [fp, #-28]	; 0xffffffe4
   32ff0:	b	34008 <__assert_fail@plt+0x228b4>
   32ff4:	b	333cc <__assert_fail@plt+0x21c78>
   32ff8:	b	32ffc <__assert_fail@plt+0x218a8>
   32ffc:	ldr	r0, [fp, #8]
   33000:	cmp	r0, #0
   33004:	bge	33118 <__assert_fail@plt+0x219c4>
   33008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3300c:	cmp	r0, #0
   33010:	bge	3309c <__assert_fail@plt+0x21948>
   33014:	b	33018 <__assert_fail@plt+0x218c4>
   33018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3301c:	ldr	r1, [fp, #8]
   33020:	movw	r2, #32767	; 0x7fff
   33024:	sdiv	r1, r2, r1
   33028:	cmp	r0, r1
   3302c:	blt	331b8 <__assert_fail@plt+0x21a64>
   33030:	b	331d0 <__assert_fail@plt+0x21a7c>
   33034:	b	33038 <__assert_fail@plt+0x218e4>
   33038:	ldr	r0, [pc, #4084]	; 34034 <__assert_fail@plt+0x228e0>
   3303c:	ldr	r1, [fp, #8]
   33040:	cmp	r1, r0
   33044:	blt	3305c <__assert_fail@plt+0x21908>
   33048:	b	33068 <__assert_fail@plt+0x21914>
   3304c:	ldr	r0, [fp, #8]
   33050:	movw	r1, #0
   33054:	cmp	r1, r0
   33058:	bge	33068 <__assert_fail@plt+0x21914>
   3305c:	movw	r0, #0
   33060:	str	r0, [sp, #156]	; 0x9c
   33064:	b	33080 <__assert_fail@plt+0x2192c>
   33068:	ldr	r0, [fp, #8]
   3306c:	movw	r1, #0
   33070:	sub	r0, r1, r0
   33074:	movw	r1, #32767	; 0x7fff
   33078:	sdiv	r0, r1, r0
   3307c:	str	r0, [sp, #156]	; 0x9c
   33080:	ldr	r0, [sp, #156]	; 0x9c
   33084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33088:	mvn	r2, #0
   3308c:	sub	r1, r2, r1
   33090:	cmp	r0, r1
   33094:	ble	331b8 <__assert_fail@plt+0x21a64>
   33098:	b	331d0 <__assert_fail@plt+0x21a7c>
   3309c:	b	330a0 <__assert_fail@plt+0x2194c>
   330a0:	b	330fc <__assert_fail@plt+0x219a8>
   330a4:	b	330fc <__assert_fail@plt+0x219a8>
   330a8:	ldr	r0, [fp, #8]
   330ac:	cmn	r0, #1
   330b0:	bne	330fc <__assert_fail@plt+0x219a8>
   330b4:	b	330b8 <__assert_fail@plt+0x21964>
   330b8:	ldr	r0, [pc, #3964]	; 3403c <__assert_fail@plt+0x228e8>
   330bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   330c0:	add	r0, r1, r0
   330c4:	movw	r1, #0
   330c8:	cmp	r1, r0
   330cc:	blt	331b8 <__assert_fail@plt+0x21a64>
   330d0:	b	331d0 <__assert_fail@plt+0x21a7c>
   330d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   330d8:	movw	r1, #0
   330dc:	cmp	r1, r0
   330e0:	bge	331d0 <__assert_fail@plt+0x21a7c>
   330e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   330e8:	sub	r0, r0, #1
   330ec:	movw	r1, #32767	; 0x7fff
   330f0:	cmp	r1, r0
   330f4:	blt	331b8 <__assert_fail@plt+0x21a64>
   330f8:	b	331d0 <__assert_fail@plt+0x21a7c>
   330fc:	ldr	r0, [pc, #3896]	; 3403c <__assert_fail@plt+0x228e8>
   33100:	ldr	r1, [fp, #8]
   33104:	sdiv	r0, r0, r1
   33108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3310c:	cmp	r0, r1
   33110:	blt	331b8 <__assert_fail@plt+0x21a64>
   33114:	b	331d0 <__assert_fail@plt+0x21a7c>
   33118:	ldr	r0, [fp, #8]
   3311c:	cmp	r0, #0
   33120:	bne	33128 <__assert_fail@plt+0x219d4>
   33124:	b	331d0 <__assert_fail@plt+0x21a7c>
   33128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3312c:	cmp	r0, #0
   33130:	bge	331a0 <__assert_fail@plt+0x21a4c>
   33134:	b	33138 <__assert_fail@plt+0x219e4>
   33138:	b	33184 <__assert_fail@plt+0x21a30>
   3313c:	b	33184 <__assert_fail@plt+0x21a30>
   33140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33144:	cmn	r0, #1
   33148:	bne	33184 <__assert_fail@plt+0x21a30>
   3314c:	b	33150 <__assert_fail@plt+0x219fc>
   33150:	ldr	r0, [pc, #3812]	; 3403c <__assert_fail@plt+0x228e8>
   33154:	ldr	r1, [fp, #8]
   33158:	add	r0, r1, r0
   3315c:	movw	r1, #0
   33160:	cmp	r1, r0
   33164:	blt	331b8 <__assert_fail@plt+0x21a64>
   33168:	b	331d0 <__assert_fail@plt+0x21a7c>
   3316c:	ldr	r0, [fp, #8]
   33170:	sub	r0, r0, #1
   33174:	movw	r1, #32767	; 0x7fff
   33178:	cmp	r1, r0
   3317c:	blt	331b8 <__assert_fail@plt+0x21a64>
   33180:	b	331d0 <__assert_fail@plt+0x21a7c>
   33184:	ldr	r0, [pc, #3760]	; 3403c <__assert_fail@plt+0x228e8>
   33188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3318c:	sdiv	r0, r0, r1
   33190:	ldr	r1, [fp, #8]
   33194:	cmp	r0, r1
   33198:	blt	331b8 <__assert_fail@plt+0x21a64>
   3319c:	b	331d0 <__assert_fail@plt+0x21a7c>
   331a0:	ldr	r0, [fp, #8]
   331a4:	movw	r1, #32767	; 0x7fff
   331a8:	sdiv	r0, r1, r0
   331ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   331b0:	cmp	r0, r1
   331b4:	bge	331d0 <__assert_fail@plt+0x21a7c>
   331b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331bc:	ldr	r1, [fp, #8]
   331c0:	mul	r0, r0, r1
   331c4:	sxth	r0, r0
   331c8:	str	r0, [fp, #-28]	; 0xffffffe4
   331cc:	b	34004 <__assert_fail@plt+0x228b0>
   331d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331d4:	ldr	r1, [fp, #8]
   331d8:	mul	r0, r0, r1
   331dc:	sxth	r0, r0
   331e0:	str	r0, [fp, #-28]	; 0xffffffe4
   331e4:	b	34008 <__assert_fail@plt+0x228b4>
   331e8:	ldr	r0, [fp, #8]
   331ec:	cmp	r0, #0
   331f0:	bge	33300 <__assert_fail@plt+0x21bac>
   331f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331f8:	cmp	r0, #0
   331fc:	bge	33288 <__assert_fail@plt+0x21b34>
   33200:	b	33204 <__assert_fail@plt+0x21ab0>
   33204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33208:	ldr	r1, [fp, #8]
   3320c:	movw	r2, #65535	; 0xffff
   33210:	sdiv	r1, r2, r1
   33214:	cmp	r0, r1
   33218:	blt	3339c <__assert_fail@plt+0x21c48>
   3321c:	b	333b4 <__assert_fail@plt+0x21c60>
   33220:	b	33224 <__assert_fail@plt+0x21ad0>
   33224:	ldr	r0, [pc, #3592]	; 34034 <__assert_fail@plt+0x228e0>
   33228:	ldr	r1, [fp, #8]
   3322c:	cmp	r1, r0
   33230:	blt	33248 <__assert_fail@plt+0x21af4>
   33234:	b	33254 <__assert_fail@plt+0x21b00>
   33238:	ldr	r0, [fp, #8]
   3323c:	movw	r1, #0
   33240:	cmp	r1, r0
   33244:	bge	33254 <__assert_fail@plt+0x21b00>
   33248:	movw	r0, #0
   3324c:	str	r0, [sp, #152]	; 0x98
   33250:	b	3326c <__assert_fail@plt+0x21b18>
   33254:	ldr	r0, [fp, #8]
   33258:	movw	r1, #0
   3325c:	sub	r0, r1, r0
   33260:	movw	r1, #65535	; 0xffff
   33264:	sdiv	r0, r1, r0
   33268:	str	r0, [sp, #152]	; 0x98
   3326c:	ldr	r0, [sp, #152]	; 0x98
   33270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33274:	mvn	r2, #0
   33278:	sub	r1, r2, r1
   3327c:	cmp	r0, r1
   33280:	ble	3339c <__assert_fail@plt+0x21c48>
   33284:	b	333b4 <__assert_fail@plt+0x21c60>
   33288:	b	3328c <__assert_fail@plt+0x21b38>
   3328c:	b	332e4 <__assert_fail@plt+0x21b90>
   33290:	b	332e4 <__assert_fail@plt+0x21b90>
   33294:	ldr	r0, [fp, #8]
   33298:	cmn	r0, #1
   3329c:	bne	332e4 <__assert_fail@plt+0x21b90>
   332a0:	b	332a4 <__assert_fail@plt+0x21b50>
   332a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332a8:	add	r0, r0, #0
   332ac:	movw	r1, #0
   332b0:	cmp	r1, r0
   332b4:	blt	3339c <__assert_fail@plt+0x21c48>
   332b8:	b	333b4 <__assert_fail@plt+0x21c60>
   332bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332c0:	movw	r1, #0
   332c4:	cmp	r1, r0
   332c8:	bge	333b4 <__assert_fail@plt+0x21c60>
   332cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332d0:	sub	r0, r0, #1
   332d4:	mvn	r1, #0
   332d8:	cmp	r1, r0
   332dc:	blt	3339c <__assert_fail@plt+0x21c48>
   332e0:	b	333b4 <__assert_fail@plt+0x21c60>
   332e4:	ldr	r0, [fp, #8]
   332e8:	movw	r1, #0
   332ec:	sdiv	r0, r1, r0
   332f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   332f4:	cmp	r0, r1
   332f8:	blt	3339c <__assert_fail@plt+0x21c48>
   332fc:	b	333b4 <__assert_fail@plt+0x21c60>
   33300:	ldr	r0, [fp, #8]
   33304:	cmp	r0, #0
   33308:	bne	33310 <__assert_fail@plt+0x21bbc>
   3330c:	b	333b4 <__assert_fail@plt+0x21c60>
   33310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33314:	cmp	r0, #0
   33318:	bge	33384 <__assert_fail@plt+0x21c30>
   3331c:	b	33320 <__assert_fail@plt+0x21bcc>
   33320:	b	33368 <__assert_fail@plt+0x21c14>
   33324:	b	33368 <__assert_fail@plt+0x21c14>
   33328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3332c:	cmn	r0, #1
   33330:	bne	33368 <__assert_fail@plt+0x21c14>
   33334:	b	33338 <__assert_fail@plt+0x21be4>
   33338:	ldr	r0, [fp, #8]
   3333c:	add	r0, r0, #0
   33340:	movw	r1, #0
   33344:	cmp	r1, r0
   33348:	blt	3339c <__assert_fail@plt+0x21c48>
   3334c:	b	333b4 <__assert_fail@plt+0x21c60>
   33350:	ldr	r0, [fp, #8]
   33354:	sub	r0, r0, #1
   33358:	mvn	r1, #0
   3335c:	cmp	r1, r0
   33360:	blt	3339c <__assert_fail@plt+0x21c48>
   33364:	b	333b4 <__assert_fail@plt+0x21c60>
   33368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3336c:	movw	r1, #0
   33370:	sdiv	r0, r1, r0
   33374:	ldr	r1, [fp, #8]
   33378:	cmp	r0, r1
   3337c:	blt	3339c <__assert_fail@plt+0x21c48>
   33380:	b	333b4 <__assert_fail@plt+0x21c60>
   33384:	ldr	r0, [fp, #8]
   33388:	movw	r1, #65535	; 0xffff
   3338c:	sdiv	r0, r1, r0
   33390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33394:	cmp	r0, r1
   33398:	bge	333b4 <__assert_fail@plt+0x21c60>
   3339c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333a0:	ldr	r1, [fp, #8]
   333a4:	mul	r0, r0, r1
   333a8:	uxth	r0, r0
   333ac:	str	r0, [fp, #-28]	; 0xffffffe4
   333b0:	b	34004 <__assert_fail@plt+0x228b0>
   333b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333b8:	ldr	r1, [fp, #8]
   333bc:	mul	r0, r0, r1
   333c0:	uxth	r0, r0
   333c4:	str	r0, [fp, #-28]	; 0xffffffe4
   333c8:	b	34008 <__assert_fail@plt+0x228b4>
   333cc:	b	333d0 <__assert_fail@plt+0x21c7c>
   333d0:	b	333d4 <__assert_fail@plt+0x21c80>
   333d4:	ldr	r0, [fp, #8]
   333d8:	cmp	r0, #0
   333dc:	bge	334e0 <__assert_fail@plt+0x21d8c>
   333e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333e4:	cmp	r0, #0
   333e8:	bge	33474 <__assert_fail@plt+0x21d20>
   333ec:	b	333f0 <__assert_fail@plt+0x21c9c>
   333f0:	ldr	r0, [pc, #3128]	; 34030 <__assert_fail@plt+0x228dc>
   333f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   333f8:	ldr	r2, [fp, #8]
   333fc:	sdiv	r0, r0, r2
   33400:	cmp	r1, r0
   33404:	blt	33570 <__assert_fail@plt+0x21e1c>
   33408:	b	33584 <__assert_fail@plt+0x21e30>
   3340c:	b	33410 <__assert_fail@plt+0x21cbc>
   33410:	ldr	r0, [pc, #3100]	; 34034 <__assert_fail@plt+0x228e0>
   33414:	ldr	r1, [fp, #8]
   33418:	cmp	r1, r0
   3341c:	blt	33434 <__assert_fail@plt+0x21ce0>
   33420:	b	33440 <__assert_fail@plt+0x21cec>
   33424:	ldr	r0, [fp, #8]
   33428:	movw	r1, #0
   3342c:	cmp	r1, r0
   33430:	bge	33440 <__assert_fail@plt+0x21cec>
   33434:	movw	r0, #0
   33438:	str	r0, [sp, #148]	; 0x94
   3343c:	b	33458 <__assert_fail@plt+0x21d04>
   33440:	ldr	r0, [pc, #3048]	; 34030 <__assert_fail@plt+0x228dc>
   33444:	ldr	r1, [fp, #8]
   33448:	movw	r2, #0
   3344c:	sub	r1, r2, r1
   33450:	sdiv	r0, r0, r1
   33454:	str	r0, [sp, #148]	; 0x94
   33458:	ldr	r0, [sp, #148]	; 0x94
   3345c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33460:	mvn	r2, #0
   33464:	sub	r1, r2, r1
   33468:	cmp	r0, r1
   3346c:	ble	33570 <__assert_fail@plt+0x21e1c>
   33470:	b	33584 <__assert_fail@plt+0x21e30>
   33474:	ldr	r0, [fp, #8]
   33478:	cmn	r0, #1
   3347c:	bne	334c4 <__assert_fail@plt+0x21d70>
   33480:	b	33484 <__assert_fail@plt+0x21d30>
   33484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33488:	add	r0, r0, #-2147483648	; 0x80000000
   3348c:	movw	r1, #0
   33490:	cmp	r1, r0
   33494:	blt	33570 <__assert_fail@plt+0x21e1c>
   33498:	b	33584 <__assert_fail@plt+0x21e30>
   3349c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   334a0:	movw	r1, #0
   334a4:	cmp	r1, r0
   334a8:	bge	33584 <__assert_fail@plt+0x21e30>
   334ac:	ldr	r0, [pc, #2940]	; 34030 <__assert_fail@plt+0x228dc>
   334b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   334b4:	sub	r1, r1, #1
   334b8:	cmp	r0, r1
   334bc:	blt	33570 <__assert_fail@plt+0x21e1c>
   334c0:	b	33584 <__assert_fail@plt+0x21e30>
   334c4:	ldr	r0, [pc, #2924]	; 34038 <__assert_fail@plt+0x228e4>
   334c8:	ldr	r1, [fp, #8]
   334cc:	sdiv	r0, r0, r1
   334d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   334d4:	cmp	r0, r1
   334d8:	blt	33570 <__assert_fail@plt+0x21e1c>
   334dc:	b	33584 <__assert_fail@plt+0x21e30>
   334e0:	ldr	r0, [fp, #8]
   334e4:	cmp	r0, #0
   334e8:	bne	334f0 <__assert_fail@plt+0x21d9c>
   334ec:	b	33584 <__assert_fail@plt+0x21e30>
   334f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   334f4:	cmp	r0, #0
   334f8:	bge	33558 <__assert_fail@plt+0x21e04>
   334fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33500:	cmn	r0, #1
   33504:	bne	3353c <__assert_fail@plt+0x21de8>
   33508:	b	3350c <__assert_fail@plt+0x21db8>
   3350c:	ldr	r0, [fp, #8]
   33510:	add	r0, r0, #-2147483648	; 0x80000000
   33514:	movw	r1, #0
   33518:	cmp	r1, r0
   3351c:	blt	33570 <__assert_fail@plt+0x21e1c>
   33520:	b	33584 <__assert_fail@plt+0x21e30>
   33524:	ldr	r0, [pc, #2820]	; 34030 <__assert_fail@plt+0x228dc>
   33528:	ldr	r1, [fp, #8]
   3352c:	sub	r1, r1, #1
   33530:	cmp	r0, r1
   33534:	blt	33570 <__assert_fail@plt+0x21e1c>
   33538:	b	33584 <__assert_fail@plt+0x21e30>
   3353c:	ldr	r0, [pc, #2804]	; 34038 <__assert_fail@plt+0x228e4>
   33540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33544:	sdiv	r0, r0, r1
   33548:	ldr	r1, [fp, #8]
   3354c:	cmp	r0, r1
   33550:	blt	33570 <__assert_fail@plt+0x21e1c>
   33554:	b	33584 <__assert_fail@plt+0x21e30>
   33558:	ldr	r0, [pc, #2768]	; 34030 <__assert_fail@plt+0x228dc>
   3355c:	ldr	r1, [fp, #8]
   33560:	sdiv	r0, r0, r1
   33564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33568:	cmp	r0, r1
   3356c:	bge	33584 <__assert_fail@plt+0x21e30>
   33570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33574:	ldr	r1, [fp, #8]
   33578:	mul	r0, r0, r1
   3357c:	str	r0, [fp, #-28]	; 0xffffffe4
   33580:	b	34004 <__assert_fail@plt+0x228b0>
   33584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33588:	ldr	r1, [fp, #8]
   3358c:	mul	r0, r0, r1
   33590:	str	r0, [fp, #-28]	; 0xffffffe4
   33594:	b	34008 <__assert_fail@plt+0x228b4>
   33598:	ldr	r0, [fp, #8]
   3359c:	cmp	r0, #0
   335a0:	bge	336b0 <__assert_fail@plt+0x21f5c>
   335a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   335a8:	cmp	r0, #0
   335ac:	bge	33638 <__assert_fail@plt+0x21ee4>
   335b0:	b	335d0 <__assert_fail@plt+0x21e7c>
   335b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   335b8:	ldr	r1, [fp, #8]
   335bc:	mvn	r2, #0
   335c0:	udiv	r1, r2, r1
   335c4:	cmp	r0, r1
   335c8:	bcc	3374c <__assert_fail@plt+0x21ff8>
   335cc:	b	33760 <__assert_fail@plt+0x2200c>
   335d0:	b	335d4 <__assert_fail@plt+0x21e80>
   335d4:	ldr	r0, [pc, #2648]	; 34034 <__assert_fail@plt+0x228e0>
   335d8:	ldr	r1, [fp, #8]
   335dc:	cmp	r1, r0
   335e0:	blt	335f8 <__assert_fail@plt+0x21ea4>
   335e4:	b	33604 <__assert_fail@plt+0x21eb0>
   335e8:	ldr	r0, [fp, #8]
   335ec:	movw	r1, #0
   335f0:	cmp	r1, r0
   335f4:	bge	33604 <__assert_fail@plt+0x21eb0>
   335f8:	movw	r0, #1
   335fc:	str	r0, [sp, #144]	; 0x90
   33600:	b	3361c <__assert_fail@plt+0x21ec8>
   33604:	ldr	r0, [fp, #8]
   33608:	movw	r1, #0
   3360c:	sub	r0, r1, r0
   33610:	mvn	r1, #0
   33614:	udiv	r0, r1, r0
   33618:	str	r0, [sp, #144]	; 0x90
   3361c:	ldr	r0, [sp, #144]	; 0x90
   33620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33624:	mvn	r2, #0
   33628:	sub	r1, r2, r1
   3362c:	cmp	r0, r1
   33630:	bls	3374c <__assert_fail@plt+0x21ff8>
   33634:	b	33760 <__assert_fail@plt+0x2200c>
   33638:	b	3363c <__assert_fail@plt+0x21ee8>
   3363c:	b	33694 <__assert_fail@plt+0x21f40>
   33640:	b	33694 <__assert_fail@plt+0x21f40>
   33644:	ldr	r0, [fp, #8]
   33648:	cmn	r0, #1
   3364c:	bne	33694 <__assert_fail@plt+0x21f40>
   33650:	b	33654 <__assert_fail@plt+0x21f00>
   33654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33658:	add	r0, r0, #0
   3365c:	movw	r1, #0
   33660:	cmp	r1, r0
   33664:	blt	3374c <__assert_fail@plt+0x21ff8>
   33668:	b	33760 <__assert_fail@plt+0x2200c>
   3366c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33670:	movw	r1, #0
   33674:	cmp	r1, r0
   33678:	bge	33760 <__assert_fail@plt+0x2200c>
   3367c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33680:	sub	r0, r0, #1
   33684:	mvn	r1, #0
   33688:	cmp	r1, r0
   3368c:	blt	3374c <__assert_fail@plt+0x21ff8>
   33690:	b	33760 <__assert_fail@plt+0x2200c>
   33694:	ldr	r0, [fp, #8]
   33698:	movw	r1, #0
   3369c:	sdiv	r0, r1, r0
   336a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   336a4:	cmp	r0, r1
   336a8:	blt	3374c <__assert_fail@plt+0x21ff8>
   336ac:	b	33760 <__assert_fail@plt+0x2200c>
   336b0:	ldr	r0, [fp, #8]
   336b4:	cmp	r0, #0
   336b8:	bne	336c0 <__assert_fail@plt+0x21f6c>
   336bc:	b	33760 <__assert_fail@plt+0x2200c>
   336c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   336c4:	cmp	r0, #0
   336c8:	bge	33734 <__assert_fail@plt+0x21fe0>
   336cc:	b	336d0 <__assert_fail@plt+0x21f7c>
   336d0:	b	33718 <__assert_fail@plt+0x21fc4>
   336d4:	b	33718 <__assert_fail@plt+0x21fc4>
   336d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   336dc:	cmn	r0, #1
   336e0:	bne	33718 <__assert_fail@plt+0x21fc4>
   336e4:	b	336e8 <__assert_fail@plt+0x21f94>
   336e8:	ldr	r0, [fp, #8]
   336ec:	add	r0, r0, #0
   336f0:	movw	r1, #0
   336f4:	cmp	r1, r0
   336f8:	blt	3374c <__assert_fail@plt+0x21ff8>
   336fc:	b	33760 <__assert_fail@plt+0x2200c>
   33700:	ldr	r0, [fp, #8]
   33704:	sub	r0, r0, #1
   33708:	mvn	r1, #0
   3370c:	cmp	r1, r0
   33710:	blt	3374c <__assert_fail@plt+0x21ff8>
   33714:	b	33760 <__assert_fail@plt+0x2200c>
   33718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3371c:	movw	r1, #0
   33720:	sdiv	r0, r1, r0
   33724:	ldr	r1, [fp, #8]
   33728:	cmp	r0, r1
   3372c:	blt	3374c <__assert_fail@plt+0x21ff8>
   33730:	b	33760 <__assert_fail@plt+0x2200c>
   33734:	ldr	r0, [fp, #8]
   33738:	mvn	r1, #0
   3373c:	udiv	r0, r1, r0
   33740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33744:	cmp	r0, r1
   33748:	bcs	33760 <__assert_fail@plt+0x2200c>
   3374c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33750:	ldr	r1, [fp, #8]
   33754:	mul	r0, r0, r1
   33758:	str	r0, [fp, #-28]	; 0xffffffe4
   3375c:	b	34004 <__assert_fail@plt+0x228b0>
   33760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33764:	ldr	r1, [fp, #8]
   33768:	mul	r0, r0, r1
   3376c:	str	r0, [fp, #-28]	; 0xffffffe4
   33770:	b	34008 <__assert_fail@plt+0x228b4>
   33774:	b	33778 <__assert_fail@plt+0x22024>
   33778:	b	3377c <__assert_fail@plt+0x22028>
   3377c:	ldr	r0, [fp, #8]
   33780:	cmp	r0, #0
   33784:	bge	33888 <__assert_fail@plt+0x22134>
   33788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3378c:	cmp	r0, #0
   33790:	bge	3381c <__assert_fail@plt+0x220c8>
   33794:	b	33798 <__assert_fail@plt+0x22044>
   33798:	ldr	r0, [pc, #2192]	; 34030 <__assert_fail@plt+0x228dc>
   3379c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   337a0:	ldr	r2, [fp, #8]
   337a4:	sdiv	r0, r0, r2
   337a8:	cmp	r1, r0
   337ac:	blt	33918 <__assert_fail@plt+0x221c4>
   337b0:	b	3392c <__assert_fail@plt+0x221d8>
   337b4:	b	337b8 <__assert_fail@plt+0x22064>
   337b8:	ldr	r0, [pc, #2164]	; 34034 <__assert_fail@plt+0x228e0>
   337bc:	ldr	r1, [fp, #8]
   337c0:	cmp	r1, r0
   337c4:	blt	337dc <__assert_fail@plt+0x22088>
   337c8:	b	337e8 <__assert_fail@plt+0x22094>
   337cc:	ldr	r0, [fp, #8]
   337d0:	movw	r1, #0
   337d4:	cmp	r1, r0
   337d8:	bge	337e8 <__assert_fail@plt+0x22094>
   337dc:	movw	r0, #0
   337e0:	str	r0, [sp, #140]	; 0x8c
   337e4:	b	33800 <__assert_fail@plt+0x220ac>
   337e8:	ldr	r0, [pc, #2112]	; 34030 <__assert_fail@plt+0x228dc>
   337ec:	ldr	r1, [fp, #8]
   337f0:	movw	r2, #0
   337f4:	sub	r1, r2, r1
   337f8:	sdiv	r0, r0, r1
   337fc:	str	r0, [sp, #140]	; 0x8c
   33800:	ldr	r0, [sp, #140]	; 0x8c
   33804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33808:	mvn	r2, #0
   3380c:	sub	r1, r2, r1
   33810:	cmp	r0, r1
   33814:	ble	33918 <__assert_fail@plt+0x221c4>
   33818:	b	3392c <__assert_fail@plt+0x221d8>
   3381c:	ldr	r0, [fp, #8]
   33820:	cmn	r0, #1
   33824:	bne	3386c <__assert_fail@plt+0x22118>
   33828:	b	3382c <__assert_fail@plt+0x220d8>
   3382c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33830:	add	r0, r0, #-2147483648	; 0x80000000
   33834:	movw	r1, #0
   33838:	cmp	r1, r0
   3383c:	blt	33918 <__assert_fail@plt+0x221c4>
   33840:	b	3392c <__assert_fail@plt+0x221d8>
   33844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33848:	movw	r1, #0
   3384c:	cmp	r1, r0
   33850:	bge	3392c <__assert_fail@plt+0x221d8>
   33854:	ldr	r0, [pc, #2004]	; 34030 <__assert_fail@plt+0x228dc>
   33858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3385c:	sub	r1, r1, #1
   33860:	cmp	r0, r1
   33864:	blt	33918 <__assert_fail@plt+0x221c4>
   33868:	b	3392c <__assert_fail@plt+0x221d8>
   3386c:	ldr	r0, [pc, #1988]	; 34038 <__assert_fail@plt+0x228e4>
   33870:	ldr	r1, [fp, #8]
   33874:	sdiv	r0, r0, r1
   33878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3387c:	cmp	r0, r1
   33880:	blt	33918 <__assert_fail@plt+0x221c4>
   33884:	b	3392c <__assert_fail@plt+0x221d8>
   33888:	ldr	r0, [fp, #8]
   3388c:	cmp	r0, #0
   33890:	bne	33898 <__assert_fail@plt+0x22144>
   33894:	b	3392c <__assert_fail@plt+0x221d8>
   33898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3389c:	cmp	r0, #0
   338a0:	bge	33900 <__assert_fail@plt+0x221ac>
   338a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   338a8:	cmn	r0, #1
   338ac:	bne	338e4 <__assert_fail@plt+0x22190>
   338b0:	b	338b4 <__assert_fail@plt+0x22160>
   338b4:	ldr	r0, [fp, #8]
   338b8:	add	r0, r0, #-2147483648	; 0x80000000
   338bc:	movw	r1, #0
   338c0:	cmp	r1, r0
   338c4:	blt	33918 <__assert_fail@plt+0x221c4>
   338c8:	b	3392c <__assert_fail@plt+0x221d8>
   338cc:	ldr	r0, [pc, #1884]	; 34030 <__assert_fail@plt+0x228dc>
   338d0:	ldr	r1, [fp, #8]
   338d4:	sub	r1, r1, #1
   338d8:	cmp	r0, r1
   338dc:	blt	33918 <__assert_fail@plt+0x221c4>
   338e0:	b	3392c <__assert_fail@plt+0x221d8>
   338e4:	ldr	r0, [pc, #1868]	; 34038 <__assert_fail@plt+0x228e4>
   338e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   338ec:	sdiv	r0, r0, r1
   338f0:	ldr	r1, [fp, #8]
   338f4:	cmp	r0, r1
   338f8:	blt	33918 <__assert_fail@plt+0x221c4>
   338fc:	b	3392c <__assert_fail@plt+0x221d8>
   33900:	ldr	r0, [pc, #1832]	; 34030 <__assert_fail@plt+0x228dc>
   33904:	ldr	r1, [fp, #8]
   33908:	sdiv	r0, r0, r1
   3390c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33910:	cmp	r0, r1
   33914:	bge	3392c <__assert_fail@plt+0x221d8>
   33918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3391c:	ldr	r1, [fp, #8]
   33920:	mul	r0, r0, r1
   33924:	str	r0, [fp, #-28]	; 0xffffffe4
   33928:	b	34004 <__assert_fail@plt+0x228b0>
   3392c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33930:	ldr	r1, [fp, #8]
   33934:	mul	r0, r0, r1
   33938:	str	r0, [fp, #-28]	; 0xffffffe4
   3393c:	b	34008 <__assert_fail@plt+0x228b4>
   33940:	ldr	r0, [fp, #8]
   33944:	cmp	r0, #0
   33948:	bge	33a58 <__assert_fail@plt+0x22304>
   3394c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33950:	cmp	r0, #0
   33954:	bge	339e0 <__assert_fail@plt+0x2228c>
   33958:	b	33978 <__assert_fail@plt+0x22224>
   3395c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33960:	ldr	r1, [fp, #8]
   33964:	mvn	r2, #0
   33968:	udiv	r1, r2, r1
   3396c:	cmp	r0, r1
   33970:	bcc	33af4 <__assert_fail@plt+0x223a0>
   33974:	b	33b08 <__assert_fail@plt+0x223b4>
   33978:	b	3397c <__assert_fail@plt+0x22228>
   3397c:	ldr	r0, [pc, #1712]	; 34034 <__assert_fail@plt+0x228e0>
   33980:	ldr	r1, [fp, #8]
   33984:	cmp	r1, r0
   33988:	blt	339a0 <__assert_fail@plt+0x2224c>
   3398c:	b	339ac <__assert_fail@plt+0x22258>
   33990:	ldr	r0, [fp, #8]
   33994:	movw	r1, #0
   33998:	cmp	r1, r0
   3399c:	bge	339ac <__assert_fail@plt+0x22258>
   339a0:	movw	r0, #1
   339a4:	str	r0, [sp, #136]	; 0x88
   339a8:	b	339c4 <__assert_fail@plt+0x22270>
   339ac:	ldr	r0, [fp, #8]
   339b0:	movw	r1, #0
   339b4:	sub	r0, r1, r0
   339b8:	mvn	r1, #0
   339bc:	udiv	r0, r1, r0
   339c0:	str	r0, [sp, #136]	; 0x88
   339c4:	ldr	r0, [sp, #136]	; 0x88
   339c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   339cc:	mvn	r2, #0
   339d0:	sub	r1, r2, r1
   339d4:	cmp	r0, r1
   339d8:	bls	33af4 <__assert_fail@plt+0x223a0>
   339dc:	b	33b08 <__assert_fail@plt+0x223b4>
   339e0:	b	339e4 <__assert_fail@plt+0x22290>
   339e4:	b	33a3c <__assert_fail@plt+0x222e8>
   339e8:	b	33a3c <__assert_fail@plt+0x222e8>
   339ec:	ldr	r0, [fp, #8]
   339f0:	cmn	r0, #1
   339f4:	bne	33a3c <__assert_fail@plt+0x222e8>
   339f8:	b	339fc <__assert_fail@plt+0x222a8>
   339fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a00:	add	r0, r0, #0
   33a04:	movw	r1, #0
   33a08:	cmp	r1, r0
   33a0c:	blt	33af4 <__assert_fail@plt+0x223a0>
   33a10:	b	33b08 <__assert_fail@plt+0x223b4>
   33a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a18:	movw	r1, #0
   33a1c:	cmp	r1, r0
   33a20:	bge	33b08 <__assert_fail@plt+0x223b4>
   33a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a28:	sub	r0, r0, #1
   33a2c:	mvn	r1, #0
   33a30:	cmp	r1, r0
   33a34:	blt	33af4 <__assert_fail@plt+0x223a0>
   33a38:	b	33b08 <__assert_fail@plt+0x223b4>
   33a3c:	ldr	r0, [fp, #8]
   33a40:	movw	r1, #0
   33a44:	sdiv	r0, r1, r0
   33a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33a4c:	cmp	r0, r1
   33a50:	blt	33af4 <__assert_fail@plt+0x223a0>
   33a54:	b	33b08 <__assert_fail@plt+0x223b4>
   33a58:	ldr	r0, [fp, #8]
   33a5c:	cmp	r0, #0
   33a60:	bne	33a68 <__assert_fail@plt+0x22314>
   33a64:	b	33b08 <__assert_fail@plt+0x223b4>
   33a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a6c:	cmp	r0, #0
   33a70:	bge	33adc <__assert_fail@plt+0x22388>
   33a74:	b	33a78 <__assert_fail@plt+0x22324>
   33a78:	b	33ac0 <__assert_fail@plt+0x2236c>
   33a7c:	b	33ac0 <__assert_fail@plt+0x2236c>
   33a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a84:	cmn	r0, #1
   33a88:	bne	33ac0 <__assert_fail@plt+0x2236c>
   33a8c:	b	33a90 <__assert_fail@plt+0x2233c>
   33a90:	ldr	r0, [fp, #8]
   33a94:	add	r0, r0, #0
   33a98:	movw	r1, #0
   33a9c:	cmp	r1, r0
   33aa0:	blt	33af4 <__assert_fail@plt+0x223a0>
   33aa4:	b	33b08 <__assert_fail@plt+0x223b4>
   33aa8:	ldr	r0, [fp, #8]
   33aac:	sub	r0, r0, #1
   33ab0:	mvn	r1, #0
   33ab4:	cmp	r1, r0
   33ab8:	blt	33af4 <__assert_fail@plt+0x223a0>
   33abc:	b	33b08 <__assert_fail@plt+0x223b4>
   33ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ac4:	movw	r1, #0
   33ac8:	sdiv	r0, r1, r0
   33acc:	ldr	r1, [fp, #8]
   33ad0:	cmp	r0, r1
   33ad4:	blt	33af4 <__assert_fail@plt+0x223a0>
   33ad8:	b	33b08 <__assert_fail@plt+0x223b4>
   33adc:	ldr	r0, [fp, #8]
   33ae0:	mvn	r1, #0
   33ae4:	udiv	r0, r1, r0
   33ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33aec:	cmp	r0, r1
   33af0:	bcs	33b08 <__assert_fail@plt+0x223b4>
   33af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33af8:	ldr	r1, [fp, #8]
   33afc:	mul	r0, r0, r1
   33b00:	str	r0, [fp, #-28]	; 0xffffffe4
   33b04:	b	34004 <__assert_fail@plt+0x228b0>
   33b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33b0c:	ldr	r1, [fp, #8]
   33b10:	mul	r0, r0, r1
   33b14:	str	r0, [fp, #-28]	; 0xffffffe4
   33b18:	b	34008 <__assert_fail@plt+0x228b4>
   33b1c:	b	33b20 <__assert_fail@plt+0x223cc>
   33b20:	ldr	r0, [fp, #8]
   33b24:	cmp	r0, #0
   33b28:	bge	33cb0 <__assert_fail@plt+0x2255c>
   33b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33b30:	cmp	r0, #0
   33b34:	bge	33c1c <__assert_fail@plt+0x224c8>
   33b38:	b	33b3c <__assert_fail@plt+0x223e8>
   33b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33b40:	ldr	r1, [fp, #8]
   33b44:	asr	r3, r1, #31
   33b48:	mvn	r2, #0
   33b4c:	mvn	ip, #-2147483648	; 0x80000000
   33b50:	str	r0, [sp, #132]	; 0x84
   33b54:	mov	r0, r2
   33b58:	str	r1, [sp, #128]	; 0x80
   33b5c:	mov	r1, ip
   33b60:	ldr	r2, [sp, #128]	; 0x80
   33b64:	bl	3c428 <__assert_fail@plt+0x2acd4>
   33b68:	ldr	r2, [sp, #132]	; 0x84
   33b6c:	subs	r0, r2, r0
   33b70:	rscs	r1, r1, r2, asr #31
   33b74:	str	r0, [sp, #124]	; 0x7c
   33b78:	str	r1, [sp, #120]	; 0x78
   33b7c:	blt	33d90 <__assert_fail@plt+0x2263c>
   33b80:	b	33da4 <__assert_fail@plt+0x22650>
   33b84:	b	33b88 <__assert_fail@plt+0x22434>
   33b88:	ldr	r0, [pc, #1188]	; 34034 <__assert_fail@plt+0x228e0>
   33b8c:	ldr	r1, [fp, #8]
   33b90:	cmp	r1, r0
   33b94:	blt	33bac <__assert_fail@plt+0x22458>
   33b98:	b	33bc0 <__assert_fail@plt+0x2246c>
   33b9c:	ldr	r0, [fp, #8]
   33ba0:	movw	r1, #0
   33ba4:	cmp	r1, r0
   33ba8:	bge	33bc0 <__assert_fail@plt+0x2246c>
   33bac:	mov	r0, #0
   33bb0:	mvn	r1, #0
   33bb4:	str	r1, [sp, #116]	; 0x74
   33bb8:	str	r0, [sp, #112]	; 0x70
   33bbc:	b	33bf4 <__assert_fail@plt+0x224a0>
   33bc0:	ldr	r0, [fp, #8]
   33bc4:	rsb	r0, r0, #0
   33bc8:	asr	r3, r0, #31
   33bcc:	mvn	r1, #0
   33bd0:	mvn	r2, #-2147483648	; 0x80000000
   33bd4:	str	r0, [sp, #108]	; 0x6c
   33bd8:	mov	r0, r1
   33bdc:	mov	r1, r2
   33be0:	ldr	r2, [sp, #108]	; 0x6c
   33be4:	bl	3c428 <__assert_fail@plt+0x2acd4>
   33be8:	str	r0, [sp, #116]	; 0x74
   33bec:	str	r1, [sp, #112]	; 0x70
   33bf0:	b	33bf4 <__assert_fail@plt+0x224a0>
   33bf4:	ldr	r0, [sp, #112]	; 0x70
   33bf8:	ldr	r1, [sp, #116]	; 0x74
   33bfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c00:	mvn	r2, r2
   33c04:	subs	r1, r2, r1
   33c08:	rscs	r0, r0, r2, asr #31
   33c0c:	str	r1, [sp, #104]	; 0x68
   33c10:	str	r0, [sp, #100]	; 0x64
   33c14:	bge	33d90 <__assert_fail@plt+0x2263c>
   33c18:	b	33da4 <__assert_fail@plt+0x22650>
   33c1c:	ldr	r0, [fp, #8]
   33c20:	cmn	r0, #1
   33c24:	bne	33c70 <__assert_fail@plt+0x2251c>
   33c28:	b	33c2c <__assert_fail@plt+0x224d8>
   33c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c30:	mov	r1, #-2147483648	; 0x80000000
   33c34:	add	r1, r1, r0, asr #31
   33c38:	rsbs	r0, r0, #0
   33c3c:	rscs	r1, r1, #0
   33c40:	str	r0, [sp, #96]	; 0x60
   33c44:	str	r1, [sp, #92]	; 0x5c
   33c48:	blt	33d90 <__assert_fail@plt+0x2263c>
   33c4c:	b	33da4 <__assert_fail@plt+0x22650>
   33c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c54:	movw	r1, #0
   33c58:	cmp	r1, r0
   33c5c:	bge	33da4 <__assert_fail@plt+0x22650>
   33c60:	mov	r0, #0
   33c64:	cmp	r0, #0
   33c68:	bne	33d90 <__assert_fail@plt+0x2263c>
   33c6c:	b	33da4 <__assert_fail@plt+0x22650>
   33c70:	ldr	r0, [fp, #8]
   33c74:	asr	r3, r0, #31
   33c78:	mov	r1, #0
   33c7c:	mov	r2, #-2147483648	; 0x80000000
   33c80:	str	r0, [sp, #88]	; 0x58
   33c84:	mov	r0, r1
   33c88:	mov	r1, r2
   33c8c:	ldr	r2, [sp, #88]	; 0x58
   33c90:	bl	3c428 <__assert_fail@plt+0x2acd4>
   33c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c98:	subs	r0, r0, r2
   33c9c:	sbcs	r1, r1, r2, asr #31
   33ca0:	str	r0, [sp, #84]	; 0x54
   33ca4:	str	r1, [sp, #80]	; 0x50
   33ca8:	blt	33d90 <__assert_fail@plt+0x2263c>
   33cac:	b	33da4 <__assert_fail@plt+0x22650>
   33cb0:	ldr	r0, [fp, #8]
   33cb4:	cmp	r0, #0
   33cb8:	bne	33cc0 <__assert_fail@plt+0x2256c>
   33cbc:	b	33da4 <__assert_fail@plt+0x22650>
   33cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cc4:	cmp	r0, #0
   33cc8:	bge	33d50 <__assert_fail@plt+0x225fc>
   33ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cd0:	cmn	r0, #1
   33cd4:	bne	33d10 <__assert_fail@plt+0x225bc>
   33cd8:	b	33cdc <__assert_fail@plt+0x22588>
   33cdc:	ldr	r0, [fp, #8]
   33ce0:	mov	r1, #-2147483648	; 0x80000000
   33ce4:	add	r1, r1, r0, asr #31
   33ce8:	rsbs	r0, r0, #0
   33cec:	rscs	r1, r1, #0
   33cf0:	str	r0, [sp, #76]	; 0x4c
   33cf4:	str	r1, [sp, #72]	; 0x48
   33cf8:	blt	33d90 <__assert_fail@plt+0x2263c>
   33cfc:	b	33da4 <__assert_fail@plt+0x22650>
   33d00:	mov	r0, #0
   33d04:	cmp	r0, #0
   33d08:	bne	33d90 <__assert_fail@plt+0x2263c>
   33d0c:	b	33da4 <__assert_fail@plt+0x22650>
   33d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33d14:	asr	r3, r0, #31
   33d18:	mov	r1, #0
   33d1c:	mov	r2, #-2147483648	; 0x80000000
   33d20:	str	r0, [sp, #68]	; 0x44
   33d24:	mov	r0, r1
   33d28:	mov	r1, r2
   33d2c:	ldr	r2, [sp, #68]	; 0x44
   33d30:	bl	3c428 <__assert_fail@plt+0x2acd4>
   33d34:	ldr	r2, [fp, #8]
   33d38:	subs	r0, r0, r2
   33d3c:	sbcs	r1, r1, r2, asr #31
   33d40:	str	r0, [sp, #64]	; 0x40
   33d44:	str	r1, [sp, #60]	; 0x3c
   33d48:	blt	33d90 <__assert_fail@plt+0x2263c>
   33d4c:	b	33da4 <__assert_fail@plt+0x22650>
   33d50:	ldr	r0, [fp, #8]
   33d54:	asr	r3, r0, #31
   33d58:	mvn	r1, #0
   33d5c:	mvn	r2, #-2147483648	; 0x80000000
   33d60:	str	r0, [sp, #56]	; 0x38
   33d64:	mov	r0, r1
   33d68:	mov	r1, r2
   33d6c:	ldr	r2, [sp, #56]	; 0x38
   33d70:	bl	3c428 <__assert_fail@plt+0x2acd4>
   33d74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33d78:	subs	r0, r0, r2
   33d7c:	sbcs	r1, r1, r2, asr #31
   33d80:	str	r0, [sp, #52]	; 0x34
   33d84:	str	r1, [sp, #48]	; 0x30
   33d88:	bge	33da4 <__assert_fail@plt+0x22650>
   33d8c:	b	33d90 <__assert_fail@plt+0x2263c>
   33d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33d94:	ldr	r1, [fp, #8]
   33d98:	mul	r0, r0, r1
   33d9c:	str	r0, [fp, #-28]	; 0xffffffe4
   33da0:	b	34004 <__assert_fail@plt+0x228b0>
   33da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33da8:	ldr	r1, [fp, #8]
   33dac:	mul	r0, r0, r1
   33db0:	str	r0, [fp, #-28]	; 0xffffffe4
   33db4:	b	34008 <__assert_fail@plt+0x228b4>
   33db8:	ldr	r0, [fp, #8]
   33dbc:	cmp	r0, #0
   33dc0:	bge	33f20 <__assert_fail@plt+0x227cc>
   33dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33dc8:	cmp	r0, #0
   33dcc:	bge	33ea8 <__assert_fail@plt+0x22754>
   33dd0:	b	33e18 <__assert_fail@plt+0x226c4>
   33dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33dd8:	ldr	r1, [fp, #8]
   33ddc:	asr	r3, r1, #31
   33de0:	mvn	r2, #0
   33de4:	str	r0, [sp, #44]	; 0x2c
   33de8:	mov	r0, r2
   33dec:	str	r1, [sp, #40]	; 0x28
   33df0:	mov	r1, r2
   33df4:	ldr	r2, [sp, #40]	; 0x28
   33df8:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   33dfc:	ldr	r2, [sp, #44]	; 0x2c
   33e00:	subs	r0, r2, r0
   33e04:	rscs	r1, r1, r2, asr #31
   33e08:	str	r0, [sp, #36]	; 0x24
   33e0c:	str	r1, [sp, #32]
   33e10:	bcc	33fdc <__assert_fail@plt+0x22888>
   33e14:	b	33ff0 <__assert_fail@plt+0x2289c>
   33e18:	b	33e1c <__assert_fail@plt+0x226c8>
   33e1c:	ldr	r0, [pc, #528]	; 34034 <__assert_fail@plt+0x228e0>
   33e20:	ldr	r1, [fp, #8]
   33e24:	cmp	r1, r0
   33e28:	blt	33e40 <__assert_fail@plt+0x226ec>
   33e2c:	b	33e54 <__assert_fail@plt+0x22700>
   33e30:	ldr	r0, [fp, #8]
   33e34:	movw	r1, #0
   33e38:	cmp	r1, r0
   33e3c:	bge	33e54 <__assert_fail@plt+0x22700>
   33e40:	mov	r0, #1
   33e44:	mvn	r1, #0
   33e48:	str	r1, [sp, #28]
   33e4c:	str	r0, [sp, #24]
   33e50:	b	33e80 <__assert_fail@plt+0x2272c>
   33e54:	ldr	r0, [fp, #8]
   33e58:	rsb	r0, r0, #0
   33e5c:	asr	r3, r0, #31
   33e60:	mvn	r1, #0
   33e64:	str	r0, [sp, #20]
   33e68:	mov	r0, r1
   33e6c:	ldr	r2, [sp, #20]
   33e70:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   33e74:	str	r0, [sp, #28]
   33e78:	str	r1, [sp, #24]
   33e7c:	b	33e80 <__assert_fail@plt+0x2272c>
   33e80:	ldr	r0, [sp, #24]
   33e84:	ldr	r1, [sp, #28]
   33e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33e8c:	mvn	r2, r2
   33e90:	subs	r1, r2, r1
   33e94:	rscs	r0, r0, r2, asr #31
   33e98:	str	r1, [sp, #16]
   33e9c:	str	r0, [sp, #12]
   33ea0:	bcs	33fdc <__assert_fail@plt+0x22888>
   33ea4:	b	33ff0 <__assert_fail@plt+0x2289c>
   33ea8:	b	33eac <__assert_fail@plt+0x22758>
   33eac:	b	33f04 <__assert_fail@plt+0x227b0>
   33eb0:	b	33f04 <__assert_fail@plt+0x227b0>
   33eb4:	ldr	r0, [fp, #8]
   33eb8:	cmn	r0, #1
   33ebc:	bne	33f04 <__assert_fail@plt+0x227b0>
   33ec0:	b	33ec4 <__assert_fail@plt+0x22770>
   33ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ec8:	add	r0, r0, #0
   33ecc:	movw	r1, #0
   33ed0:	cmp	r1, r0
   33ed4:	blt	33fdc <__assert_fail@plt+0x22888>
   33ed8:	b	33ff0 <__assert_fail@plt+0x2289c>
   33edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ee0:	movw	r1, #0
   33ee4:	cmp	r1, r0
   33ee8:	bge	33ff0 <__assert_fail@plt+0x2289c>
   33eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ef0:	sub	r0, r0, #1
   33ef4:	mvn	r1, #0
   33ef8:	cmp	r1, r0
   33efc:	blt	33fdc <__assert_fail@plt+0x22888>
   33f00:	b	33ff0 <__assert_fail@plt+0x2289c>
   33f04:	ldr	r0, [fp, #8]
   33f08:	movw	r1, #0
   33f0c:	sdiv	r0, r1, r0
   33f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33f14:	cmp	r0, r1
   33f18:	blt	33fdc <__assert_fail@plt+0x22888>
   33f1c:	b	33ff0 <__assert_fail@plt+0x2289c>
   33f20:	ldr	r0, [fp, #8]
   33f24:	cmp	r0, #0
   33f28:	bne	33f30 <__assert_fail@plt+0x227dc>
   33f2c:	b	33ff0 <__assert_fail@plt+0x2289c>
   33f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33f34:	cmp	r0, #0
   33f38:	bge	33fa4 <__assert_fail@plt+0x22850>
   33f3c:	b	33f40 <__assert_fail@plt+0x227ec>
   33f40:	b	33f88 <__assert_fail@plt+0x22834>
   33f44:	b	33f88 <__assert_fail@plt+0x22834>
   33f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33f4c:	cmn	r0, #1
   33f50:	bne	33f88 <__assert_fail@plt+0x22834>
   33f54:	b	33f58 <__assert_fail@plt+0x22804>
   33f58:	ldr	r0, [fp, #8]
   33f5c:	add	r0, r0, #0
   33f60:	movw	r1, #0
   33f64:	cmp	r1, r0
   33f68:	blt	33fdc <__assert_fail@plt+0x22888>
   33f6c:	b	33ff0 <__assert_fail@plt+0x2289c>
   33f70:	ldr	r0, [fp, #8]
   33f74:	sub	r0, r0, #1
   33f78:	mvn	r1, #0
   33f7c:	cmp	r1, r0
   33f80:	blt	33fdc <__assert_fail@plt+0x22888>
   33f84:	b	33ff0 <__assert_fail@plt+0x2289c>
   33f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33f8c:	movw	r1, #0
   33f90:	sdiv	r0, r1, r0
   33f94:	ldr	r1, [fp, #8]
   33f98:	cmp	r0, r1
   33f9c:	blt	33fdc <__assert_fail@plt+0x22888>
   33fa0:	b	33ff0 <__assert_fail@plt+0x2289c>
   33fa4:	ldr	r0, [fp, #8]
   33fa8:	asr	r3, r0, #31
   33fac:	mvn	r1, #0
   33fb0:	str	r0, [sp, #8]
   33fb4:	mov	r0, r1
   33fb8:	ldr	r2, [sp, #8]
   33fbc:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   33fc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33fc4:	subs	r0, r0, r2
   33fc8:	sbcs	r1, r1, r2, asr #31
   33fcc:	str	r0, [sp, #4]
   33fd0:	str	r1, [sp]
   33fd4:	bcs	33ff0 <__assert_fail@plt+0x2289c>
   33fd8:	b	33fdc <__assert_fail@plt+0x22888>
   33fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33fe0:	ldr	r1, [fp, #8]
   33fe4:	mul	r0, r0, r1
   33fe8:	str	r0, [fp, #-28]	; 0xffffffe4
   33fec:	b	34004 <__assert_fail@plt+0x228b0>
   33ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ff4:	ldr	r1, [fp, #8]
   33ff8:	mul	r0, r0, r1
   33ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   34000:	b	34008 <__assert_fail@plt+0x228b4>
   34004:	bl	11850 <__assert_fail@plt+0xfc>
   34008:	ldr	r0, [fp, #-4]
   3400c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34010:	bl	3149c <__assert_fail@plt+0x1fd48>
   34014:	str	r0, [fp, #-4]
   34018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3401c:	ldr	r1, [fp, #-8]
   34020:	str	r0, [r1]
   34024:	ldr	r0, [fp, #-4]
   34028:	mov	sp, fp
   3402c:	pop	{fp, pc}
   34030:	svcvc	0x00ffffff
   34034:	andhi	r0, r0, r1
   34038:	andhi	r0, r0, r0
   3403c:			; <UNDEFINED> instruction: 0xffff8000
   34040:	push	{fp, lr}
   34044:	mov	fp, sp
   34048:	sub	sp, sp, #8
   3404c:	str	r0, [sp, #4]
   34050:	ldr	r0, [sp, #4]
   34054:	movw	r1, #1
   34058:	bl	34064 <__assert_fail@plt+0x22910>
   3405c:	mov	sp, fp
   34060:	pop	{fp, pc}
   34064:	push	{fp, lr}
   34068:	mov	fp, sp
   3406c:	sub	sp, sp, #8
   34070:	str	r0, [sp, #4]
   34074:	str	r1, [sp]
   34078:	ldr	r0, [sp, #4]
   3407c:	ldr	r1, [sp]
   34080:	bl	389e0 <__assert_fail@plt+0x2728c>
   34084:	bl	31428 <__assert_fail@plt+0x1fcd4>
   34088:	mov	sp, fp
   3408c:	pop	{fp, pc}
   34090:	push	{fp, lr}
   34094:	mov	fp, sp
   34098:	sub	sp, sp, #8
   3409c:	str	r0, [sp, #4]
   340a0:	ldr	r0, [sp, #4]
   340a4:	movw	r1, #1
   340a8:	bl	340b4 <__assert_fail@plt+0x22960>
   340ac:	mov	sp, fp
   340b0:	pop	{fp, pc}
   340b4:	push	{fp, lr}
   340b8:	mov	fp, sp
   340bc:	sub	sp, sp, #8
   340c0:	str	r0, [sp, #4]
   340c4:	str	r1, [sp]
   340c8:	ldr	r0, [sp, #4]
   340cc:	ldr	r1, [sp]
   340d0:	bl	3a644 <__assert_fail@plt+0x28ef0>
   340d4:	bl	31428 <__assert_fail@plt+0x1fcd4>
   340d8:	mov	sp, fp
   340dc:	pop	{fp, pc}
   340e0:	push	{fp, lr}
   340e4:	mov	fp, sp
   340e8:	sub	sp, sp, #16
   340ec:	str	r0, [fp, #-4]
   340f0:	str	r1, [sp, #8]
   340f4:	ldr	r0, [sp, #8]
   340f8:	bl	31404 <__assert_fail@plt+0x1fcb0>
   340fc:	ldr	r1, [fp, #-4]
   34100:	ldr	r2, [sp, #8]
   34104:	str	r0, [sp, #4]
   34108:	bl	11478 <memcpy@plt>
   3410c:	ldr	r0, [sp, #4]
   34110:	mov	sp, fp
   34114:	pop	{fp, pc}
   34118:	push	{fp, lr}
   3411c:	mov	fp, sp
   34120:	sub	sp, sp, #16
   34124:	str	r0, [fp, #-4]
   34128:	str	r1, [sp, #8]
   3412c:	ldr	r0, [sp, #8]
   34130:	bl	31458 <__assert_fail@plt+0x1fd04>
   34134:	ldr	r1, [fp, #-4]
   34138:	ldr	r2, [sp, #8]
   3413c:	str	r0, [sp, #4]
   34140:	bl	11478 <memcpy@plt>
   34144:	ldr	r0, [sp, #4]
   34148:	mov	sp, fp
   3414c:	pop	{fp, pc}
   34150:	push	{fp, lr}
   34154:	mov	fp, sp
   34158:	sub	sp, sp, #16
   3415c:	str	r0, [fp, #-4]
   34160:	str	r1, [sp, #8]
   34164:	ldr	r0, [sp, #8]
   34168:	add	r0, r0, #1
   3416c:	bl	31458 <__assert_fail@plt+0x1fd04>
   34170:	str	r0, [sp, #4]
   34174:	ldr	r0, [sp, #4]
   34178:	ldr	r1, [sp, #8]
   3417c:	add	r0, r0, r1
   34180:	movw	r1, #0
   34184:	strb	r1, [r0]
   34188:	ldr	r0, [sp, #4]
   3418c:	ldr	r1, [fp, #-4]
   34190:	ldr	r2, [sp, #8]
   34194:	str	r0, [sp]
   34198:	bl	11478 <memcpy@plt>
   3419c:	ldr	r0, [sp]
   341a0:	mov	sp, fp
   341a4:	pop	{fp, pc}
   341a8:	push	{fp, lr}
   341ac:	mov	fp, sp
   341b0:	sub	sp, sp, #8
   341b4:	str	r0, [sp, #4]
   341b8:	ldr	r0, [sp, #4]
   341bc:	ldr	r1, [sp, #4]
   341c0:	str	r0, [sp]
   341c4:	mov	r0, r1
   341c8:	bl	11604 <strlen@plt>
   341cc:	add	r1, r0, #1
   341d0:	ldr	r0, [sp]
   341d4:	bl	340e0 <__assert_fail@plt+0x2298c>
   341d8:	mov	sp, fp
   341dc:	pop	{fp, pc}
   341e0:	push	{r4, r5, r6, sl, fp, lr}
   341e4:	add	fp, sp, #16
   341e8:	sub	sp, sp, #120	; 0x78
   341ec:	ldr	ip, [fp, #12]
   341f0:	ldr	lr, [fp, #8]
   341f4:	ldr	r4, [fp, #24]
   341f8:	ldr	r5, [fp, #20]
   341fc:	ldr	r6, [fp, #16]
   34200:	str	r0, [fp, #-20]	; 0xffffffec
   34204:	str	r1, [fp, #-24]	; 0xffffffe8
   34208:	str	r3, [fp, #-28]	; 0xffffffe4
   3420c:	str	r2, [fp, #-32]	; 0xffffffe0
   34210:	str	ip, [fp, #-36]	; 0xffffffdc
   34214:	str	lr, [fp, #-40]	; 0xffffffd8
   34218:	ldr	r0, [fp, #-20]	; 0xffffffec
   3421c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34220:	ldr	r1, [fp, #16]
   34224:	movw	r3, #0
   34228:	str	r1, [fp, #-60]	; 0xffffffc4
   3422c:	mov	r1, r3
   34230:	sub	r3, fp, #56	; 0x38
   34234:	ldr	ip, [fp, #-60]	; 0xffffffc4
   34238:	str	ip, [sp]
   3423c:	str	r5, [fp, #-64]	; 0xffffffc0
   34240:	str	r4, [sp, #68]	; 0x44
   34244:	str	r6, [sp, #64]	; 0x40
   34248:	bl	344ac <__assert_fail@plt+0x22d58>
   3424c:	str	r0, [fp, #-44]	; 0xffffffd4
   34250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34254:	cmp	r0, #0
   34258:	bne	34334 <__assert_fail@plt+0x22be0>
   3425c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34260:	ldr	r1, [fp, #-52]	; 0xffffffcc
   34264:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3426c:	subs	r0, r0, r2
   34270:	sbcs	r1, r1, r3
   34274:	str	r0, [sp, #60]	; 0x3c
   34278:	str	r1, [sp, #56]	; 0x38
   3427c:	blt	342ac <__assert_fail@plt+0x22b58>
   34280:	b	34284 <__assert_fail@plt+0x22b30>
   34284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34288:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3428c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   34290:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34294:	subs	r0, r0, r2
   34298:	sbcs	r1, r1, r3
   3429c:	str	r0, [sp, #52]	; 0x34
   342a0:	str	r1, [sp, #48]	; 0x30
   342a4:	bge	34330 <__assert_fail@plt+0x22bdc>
   342a8:	b	342ac <__assert_fail@plt+0x22b58>
   342ac:	mov	r0, #1
   342b0:	str	r0, [fp, #-44]	; 0xffffffd4
   342b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   342b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   342bc:	subs	r0, r0, #1073741824	; 0x40000000
   342c0:	sbcs	r1, r1, #0
   342c4:	str	r0, [sp, #44]	; 0x2c
   342c8:	str	r1, [sp, #40]	; 0x28
   342cc:	blt	342e4 <__assert_fail@plt+0x22b90>
   342d0:	b	342d4 <__assert_fail@plt+0x22b80>
   342d4:	bl	11628 <__errno_location@plt>
   342d8:	movw	lr, #75	; 0x4b
   342dc:	str	lr, [r0]
   342e0:	b	3432c <__assert_fail@plt+0x22bd8>
   342e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   342e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   342ec:	mvn	r2, #1073741824	; 0x40000000
   342f0:	subs	r0, r2, r0
   342f4:	mvn	r2, #0
   342f8:	sbcs	r1, r2, r1
   342fc:	str	r0, [sp, #36]	; 0x24
   34300:	str	r1, [sp, #32]
   34304:	blt	3431c <__assert_fail@plt+0x22bc8>
   34308:	b	3430c <__assert_fail@plt+0x22bb8>
   3430c:	bl	11628 <__errno_location@plt>
   34310:	movw	lr, #75	; 0x4b
   34314:	str	lr, [r0]
   34318:	b	34328 <__assert_fail@plt+0x22bd4>
   3431c:	bl	11628 <__errno_location@plt>
   34320:	movw	lr, #34	; 0x22
   34324:	str	lr, [r0]
   34328:	b	3432c <__assert_fail@plt+0x22bd8>
   3432c:	b	34330 <__assert_fail@plt+0x22bdc>
   34330:	b	34370 <__assert_fail@plt+0x22c1c>
   34334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34338:	cmp	r0, #1
   3433c:	bne	34350 <__assert_fail@plt+0x22bfc>
   34340:	bl	11628 <__errno_location@plt>
   34344:	movw	lr, #75	; 0x4b
   34348:	str	lr, [r0]
   3434c:	b	3436c <__assert_fail@plt+0x22c18>
   34350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34354:	cmp	r0, #3
   34358:	bne	34368 <__assert_fail@plt+0x22c14>
   3435c:	bl	11628 <__errno_location@plt>
   34360:	movw	lr, #0
   34364:	str	lr, [r0]
   34368:	b	3436c <__assert_fail@plt+0x22c18>
   3436c:	b	34370 <__assert_fail@plt+0x22c1c>
   34370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34374:	cmp	r0, #0
   34378:	beq	34414 <__assert_fail@plt+0x22cc0>
   3437c:	ldr	r0, [fp, #24]
   34380:	cmp	r0, #0
   34384:	beq	34394 <__assert_fail@plt+0x22c40>
   34388:	ldr	r0, [fp, #24]
   3438c:	str	r0, [sp, #28]
   34390:	b	343a0 <__assert_fail@plt+0x22c4c>
   34394:	movw	r0, #1
   34398:	str	r0, [sp, #28]
   3439c:	b	343a0 <__assert_fail@plt+0x22c4c>
   343a0:	ldr	r0, [sp, #28]
   343a4:	str	r0, [sp, #24]
   343a8:	bl	11628 <__errno_location@plt>
   343ac:	ldr	r0, [r0]
   343b0:	cmp	r0, #22
   343b4:	bne	343c4 <__assert_fail@plt+0x22c70>
   343b8:	movw	r0, #0
   343bc:	str	r0, [sp, #20]
   343c0:	b	343d0 <__assert_fail@plt+0x22c7c>
   343c4:	bl	11628 <__errno_location@plt>
   343c8:	ldr	r0, [r0]
   343cc:	str	r0, [sp, #20]
   343d0:	ldr	r0, [sp, #20]
   343d4:	ldr	r3, [fp, #20]
   343d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343dc:	str	r0, [sp, #16]
   343e0:	mov	r0, r1
   343e4:	str	r3, [sp, #12]
   343e8:	bl	18934 <__assert_fail@plt+0x71e0>
   343ec:	ldr	r1, [sp, #24]
   343f0:	str	r0, [sp, #8]
   343f4:	mov	r0, r1
   343f8:	ldr	r1, [sp, #16]
   343fc:	movw	r2, #54003	; 0xd2f3
   34400:	movt	r2, #3
   34404:	ldr	r3, [sp, #12]
   34408:	ldr	lr, [sp, #8]
   3440c:	str	lr, [sp]
   34410:	bl	11580 <error@plt>
   34414:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3441c:	sub	sp, fp, #16
   34420:	pop	{r4, r5, r6, sl, fp, pc}
   34424:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   34428:	add	fp, sp, #24
   3442c:	sub	sp, sp, #56	; 0x38
   34430:	ldr	r1, [fp, #12]
   34434:	ldr	ip, [fp, #8]
   34438:	ldr	lr, [fp, #24]
   3443c:	ldr	r4, [fp, #20]
   34440:	ldr	r5, [fp, #16]
   34444:	str	r0, [fp, #-28]	; 0xffffffe4
   34448:	str	r3, [sp, #44]	; 0x2c
   3444c:	str	r2, [sp, #40]	; 0x28
   34450:	str	r1, [sp, #36]	; 0x24
   34454:	str	ip, [sp, #32]
   34458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3445c:	ldr	r2, [sp, #40]	; 0x28
   34460:	ldr	r3, [sp, #44]	; 0x2c
   34464:	ldr	r1, [sp, #32]
   34468:	ldr	ip, [sp, #36]	; 0x24
   3446c:	ldr	r6, [fp, #16]
   34470:	ldr	r7, [fp, #20]
   34474:	ldr	r8, [fp, #24]
   34478:	mov	r9, sp
   3447c:	str	r8, [r9, #16]
   34480:	str	r7, [r9, #12]
   34484:	str	r6, [r9, #8]
   34488:	str	ip, [r9, #4]
   3448c:	str	r1, [r9]
   34490:	mov	r1, #10
   34494:	str	lr, [sp, #28]
   34498:	str	r4, [sp, #24]
   3449c:	str	r5, [sp, #20]
   344a0:	bl	341e0 <__assert_fail@plt+0x22a8c>
   344a4:	sub	sp, fp, #24
   344a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   344ac:	push	{fp, lr}
   344b0:	mov	fp, sp
   344b4:	sub	sp, sp, #80	; 0x50
   344b8:	ldr	ip, [fp, #8]
   344bc:	str	r0, [fp, #-8]
   344c0:	str	r1, [fp, #-12]
   344c4:	str	r2, [fp, #-16]
   344c8:	str	r3, [fp, #-20]	; 0xffffffec
   344cc:	movw	r0, #0
   344d0:	str	r0, [sp, #36]	; 0x24
   344d4:	ldr	r1, [fp, #-16]
   344d8:	cmp	r0, r1
   344dc:	str	ip, [sp, #20]
   344e0:	bgt	344f4 <__assert_fail@plt+0x22da0>
   344e4:	ldr	r0, [fp, #-16]
   344e8:	cmp	r0, #36	; 0x24
   344ec:	bgt	344f4 <__assert_fail@plt+0x22da0>
   344f0:	b	34514 <__assert_fail@plt+0x22dc0>
   344f4:	movw	r0, #55619	; 0xd943
   344f8:	movt	r0, #3
   344fc:	movw	r1, #55657	; 0xd969
   34500:	movt	r1, #3
   34504:	movw	r2, #85	; 0x55
   34508:	movw	r3, #55673	; 0xd979
   3450c:	movt	r3, #3
   34510:	bl	11754 <__assert_fail@plt>
   34514:	ldr	r0, [fp, #-12]
   34518:	movw	r1, #0
   3451c:	cmp	r0, r1
   34520:	beq	34530 <__assert_fail@plt+0x22ddc>
   34524:	ldr	r0, [fp, #-12]
   34528:	str	r0, [sp, #16]
   3452c:	b	3453c <__assert_fail@plt+0x22de8>
   34530:	sub	r0, fp, #24
   34534:	str	r0, [sp, #16]
   34538:	b	3453c <__assert_fail@plt+0x22de8>
   3453c:	ldr	r0, [sp, #16]
   34540:	str	r0, [fp, #-28]	; 0xffffffe4
   34544:	bl	11628 <__errno_location@plt>
   34548:	mov	lr, #0
   3454c:	str	lr, [r0]
   34550:	ldr	r0, [fp, #-8]
   34554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34558:	ldr	r2, [fp, #-16]
   3455c:	bl	11688 <strtoimax@plt>
   34560:	str	r1, [sp, #44]	; 0x2c
   34564:	str	r0, [sp, #40]	; 0x28
   34568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3456c:	ldr	r0, [r0]
   34570:	ldr	r1, [fp, #-8]
   34574:	cmp	r0, r1
   34578:	bne	345e4 <__assert_fail@plt+0x22e90>
   3457c:	ldr	r0, [fp, #8]
   34580:	movw	r1, #0
   34584:	cmp	r0, r1
   34588:	beq	345d4 <__assert_fail@plt+0x22e80>
   3458c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34590:	ldr	r0, [r0]
   34594:	ldrb	r0, [r0]
   34598:	cmp	r0, #0
   3459c:	beq	345d4 <__assert_fail@plt+0x22e80>
   345a0:	ldr	r0, [fp, #8]
   345a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   345a8:	ldr	r1, [r1]
   345ac:	ldrb	r1, [r1]
   345b0:	bl	11610 <strchr@plt>
   345b4:	movw	r1, #0
   345b8:	cmp	r0, r1
   345bc:	beq	345d4 <__assert_fail@plt+0x22e80>
   345c0:	mov	r0, #0
   345c4:	str	r0, [sp, #44]	; 0x2c
   345c8:	mov	r0, #1
   345cc:	str	r0, [sp, #40]	; 0x28
   345d0:	b	345e0 <__assert_fail@plt+0x22e8c>
   345d4:	movw	r0, #4
   345d8:	str	r0, [fp, #-4]
   345dc:	b	34acc <__assert_fail@plt+0x23378>
   345e0:	b	3461c <__assert_fail@plt+0x22ec8>
   345e4:	bl	11628 <__errno_location@plt>
   345e8:	ldr	r0, [r0]
   345ec:	cmp	r0, #0
   345f0:	beq	34618 <__assert_fail@plt+0x22ec4>
   345f4:	bl	11628 <__errno_location@plt>
   345f8:	ldr	r0, [r0]
   345fc:	cmp	r0, #34	; 0x22
   34600:	beq	34610 <__assert_fail@plt+0x22ebc>
   34604:	movw	r0, #4
   34608:	str	r0, [fp, #-4]
   3460c:	b	34acc <__assert_fail@plt+0x23378>
   34610:	movw	r0, #1
   34614:	str	r0, [sp, #36]	; 0x24
   34618:	b	3461c <__assert_fail@plt+0x22ec8>
   3461c:	ldr	r0, [fp, #8]
   34620:	movw	r1, #0
   34624:	cmp	r0, r1
   34628:	bne	3464c <__assert_fail@plt+0x22ef8>
   3462c:	ldr	r0, [sp, #40]	; 0x28
   34630:	ldr	r1, [sp, #44]	; 0x2c
   34634:	ldr	r2, [fp, #-20]	; 0xffffffec
   34638:	str	r1, [r2, #4]
   3463c:	str	r0, [r2]
   34640:	ldr	r0, [sp, #36]	; 0x24
   34644:	str	r0, [fp, #-4]
   34648:	b	34acc <__assert_fail@plt+0x23378>
   3464c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34650:	ldr	r0, [r0]
   34654:	ldrb	r0, [r0]
   34658:	cmp	r0, #0
   3465c:	beq	34ab0 <__assert_fail@plt+0x2335c>
   34660:	movw	r0, #1024	; 0x400
   34664:	str	r0, [sp, #32]
   34668:	movw	r0, #1
   3466c:	str	r0, [sp, #28]
   34670:	ldr	r0, [fp, #8]
   34674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34678:	ldr	r1, [r1]
   3467c:	ldrb	r1, [r1]
   34680:	bl	11610 <strchr@plt>
   34684:	movw	r1, #0
   34688:	cmp	r0, r1
   3468c:	bne	346b4 <__assert_fail@plt+0x22f60>
   34690:	ldr	r0, [sp, #40]	; 0x28
   34694:	ldr	r1, [sp, #44]	; 0x2c
   34698:	ldr	r2, [fp, #-20]	; 0xffffffec
   3469c:	str	r1, [r2, #4]
   346a0:	str	r0, [r2]
   346a4:	ldr	r0, [sp, #36]	; 0x24
   346a8:	orr	r0, r0, #2
   346ac:	str	r0, [fp, #-4]
   346b0:	b	34acc <__assert_fail@plt+0x23378>
   346b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   346b8:	ldr	r0, [r0]
   346bc:	ldrb	r0, [r0]
   346c0:	sub	r0, r0, #69	; 0x45
   346c4:	cmp	r0, #47	; 0x2f
   346c8:	str	r0, [sp, #12]
   346cc:	bhi	34838 <__assert_fail@plt+0x230e4>
   346d0:	add	r0, pc, #8
   346d4:	ldr	r1, [sp, #12]
   346d8:	ldr	r0, [r0, r1, lsl #2]
   346dc:	mov	pc, r0
   346e0:	andeq	r4, r3, r0, lsr #15
   346e4:	andeq	r4, r3, r8, lsr r8
   346e8:	andeq	r4, r3, r0, lsr #15
   346ec:	andeq	r4, r3, r8, lsr r8
   346f0:	andeq	r4, r3, r8, lsr r8
   346f4:	andeq	r4, r3, r8, lsr r8
   346f8:	andeq	r4, r3, r0, lsr #15
   346fc:	andeq	r4, r3, r8, lsr r8
   34700:	andeq	r4, r3, r0, lsr #15
   34704:	andeq	r4, r3, r8, lsr r8
   34708:	andeq	r4, r3, r8, lsr r8
   3470c:	andeq	r4, r3, r0, lsr #15
   34710:	andeq	r4, r3, r8, lsr r8
   34714:	andeq	r4, r3, r8, lsr r8
   34718:	andeq	r4, r3, r8, lsr r8
   3471c:	andeq	r4, r3, r0, lsr #15
   34720:	andeq	r4, r3, r8, lsr r8
   34724:	andeq	r4, r3, r8, lsr r8
   34728:	andeq	r4, r3, r8, lsr r8
   3472c:	andeq	r4, r3, r8, lsr r8
   34730:	andeq	r4, r3, r0, lsr #15
   34734:	andeq	r4, r3, r0, lsr #15
   34738:	andeq	r4, r3, r8, lsr r8
   3473c:	andeq	r4, r3, r8, lsr r8
   34740:	andeq	r4, r3, r8, lsr r8
   34744:	andeq	r4, r3, r8, lsr r8
   34748:	andeq	r4, r3, r8, lsr r8
   3474c:	andeq	r4, r3, r8, lsr r8
   34750:	andeq	r4, r3, r8, lsr r8
   34754:	andeq	r4, r3, r8, lsr r8
   34758:	andeq	r4, r3, r8, lsr r8
   3475c:	andeq	r4, r3, r8, lsr r8
   34760:	andeq	r4, r3, r8, lsr r8
   34764:	andeq	r4, r3, r8, lsr r8
   34768:	andeq	r4, r3, r0, lsr #15
   3476c:	andeq	r4, r3, r8, lsr r8
   34770:	andeq	r4, r3, r8, lsr r8
   34774:	andeq	r4, r3, r8, lsr r8
   34778:	andeq	r4, r3, r0, lsr #15
   3477c:	andeq	r4, r3, r8, lsr r8
   34780:	andeq	r4, r3, r0, lsr #15
   34784:	andeq	r4, r3, r8, lsr r8
   34788:	andeq	r4, r3, r8, lsr r8
   3478c:	andeq	r4, r3, r8, lsr r8
   34790:	andeq	r4, r3, r8, lsr r8
   34794:	andeq	r4, r3, r8, lsr r8
   34798:	andeq	r4, r3, r8, lsr r8
   3479c:	andeq	r4, r3, r0, lsr #15
   347a0:	ldr	r0, [fp, #8]
   347a4:	movw	r1, #48	; 0x30
   347a8:	bl	11610 <strchr@plt>
   347ac:	movw	r1, #0
   347b0:	cmp	r0, r1
   347b4:	beq	34834 <__assert_fail@plt+0x230e0>
   347b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   347bc:	ldr	r0, [r0]
   347c0:	ldrb	r0, [r0, #1]
   347c4:	mov	r1, r0
   347c8:	cmp	r0, #66	; 0x42
   347cc:	str	r1, [sp, #8]
   347d0:	beq	3481c <__assert_fail@plt+0x230c8>
   347d4:	b	347d8 <__assert_fail@plt+0x23084>
   347d8:	ldr	r0, [sp, #8]
   347dc:	cmp	r0, #68	; 0x44
   347e0:	beq	3481c <__assert_fail@plt+0x230c8>
   347e4:	b	347e8 <__assert_fail@plt+0x23094>
   347e8:	ldr	r0, [sp, #8]
   347ec:	cmp	r0, #105	; 0x69
   347f0:	bne	34830 <__assert_fail@plt+0x230dc>
   347f4:	b	347f8 <__assert_fail@plt+0x230a4>
   347f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   347fc:	ldr	r0, [r0]
   34800:	ldrb	r0, [r0, #2]
   34804:	cmp	r0, #66	; 0x42
   34808:	bne	34818 <__assert_fail@plt+0x230c4>
   3480c:	ldr	r0, [sp, #28]
   34810:	add	r0, r0, #2
   34814:	str	r0, [sp, #28]
   34818:	b	34830 <__assert_fail@plt+0x230dc>
   3481c:	movw	r0, #1000	; 0x3e8
   34820:	str	r0, [sp, #32]
   34824:	ldr	r0, [sp, #28]
   34828:	add	r0, r0, #1
   3482c:	str	r0, [sp, #28]
   34830:	b	34834 <__assert_fail@plt+0x230e0>
   34834:	b	34838 <__assert_fail@plt+0x230e4>
   34838:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3483c:	ldr	r0, [r0]
   34840:	ldrb	r0, [r0]
   34844:	sub	r0, r0, #66	; 0x42
   34848:	cmp	r0, #53	; 0x35
   3484c:	str	r0, [sp, #4]
   34850:	bhi	34a44 <__assert_fail@plt+0x232f0>
   34854:	add	r0, pc, #8
   34858:	ldr	r1, [sp, #4]
   3485c:	ldr	r0, [r0, r1, lsl #2]
   34860:	mov	pc, r0
   34864:	andeq	r4, r3, r0, asr r9
   34868:	andeq	r4, r3, r4, asr #20
   3486c:	andeq	r4, r3, r4, asr #20
   34870:	andeq	r4, r3, r0, ror r9
   34874:	andeq	r4, r3, r4, asr #20
   34878:	andeq	r4, r3, r8, lsl #19
   3487c:	andeq	r4, r3, r4, asr #20
   34880:	andeq	r4, r3, r4, asr #20
   34884:	andeq	r4, r3, r4, asr #20
   34888:	andeq	r4, r3, r0, lsr #19
   3488c:	andeq	r4, r3, r4, asr #20
   34890:			; <UNDEFINED> instruction: 0x000349b8
   34894:	andeq	r4, r3, r4, asr #20
   34898:	andeq	r4, r3, r4, asr #20
   3489c:	ldrdeq	r4, [r3], -r0
   348a0:	andeq	r4, r3, r4, asr #20
   348a4:	andeq	r4, r3, r4, asr #20
   348a8:	andeq	r4, r3, r4, asr #20
   348ac:	andeq	r4, r3, r8, ror #19
   348b0:	andeq	r4, r3, r4, asr #20
   348b4:	andeq	r4, r3, r4, asr #20
   348b8:	andeq	r4, r3, r4, asr #20
   348bc:	andeq	r4, r3, r4, asr #20
   348c0:	andeq	r4, r3, r4, lsl sl
   348c4:	andeq	r4, r3, ip, lsr #20
   348c8:	andeq	r4, r3, r4, asr #20
   348cc:	andeq	r4, r3, r4, asr #20
   348d0:	andeq	r4, r3, r4, asr #20
   348d4:	andeq	r4, r3, r4, asr #20
   348d8:	andeq	r4, r3, r4, asr #20
   348dc:	andeq	r4, r3, r4, asr #20
   348e0:	andeq	r4, r3, r4, asr #20
   348e4:	andeq	r4, r3, ip, lsr r9
   348e8:	andeq	r4, r3, r4, ror #18
   348ec:	andeq	r4, r3, r4, asr #20
   348f0:	andeq	r4, r3, r4, asr #20
   348f4:	andeq	r4, r3, r4, asr #20
   348f8:	andeq	r4, r3, r8, lsl #19
   348fc:	andeq	r4, r3, r4, asr #20
   34900:	andeq	r4, r3, r4, asr #20
   34904:	andeq	r4, r3, r4, asr #20
   34908:	andeq	r4, r3, r0, lsr #19
   3490c:	andeq	r4, r3, r4, asr #20
   34910:			; <UNDEFINED> instruction: 0x000349b8
   34914:	andeq	r4, r3, r4, asr #20
   34918:	andeq	r4, r3, r4, asr #20
   3491c:	andeq	r4, r3, r4, asr #20
   34920:	andeq	r4, r3, r4, asr #20
   34924:	andeq	r4, r3, r4, asr #20
   34928:	andeq	r4, r3, r4, asr #20
   3492c:	andeq	r4, r3, r8, ror #19
   34930:	andeq	r4, r3, r4, asr #20
   34934:	andeq	r4, r3, r4, asr #20
   34938:	andeq	r4, r3, r0, lsl #20
   3493c:	add	r0, sp, #40	; 0x28
   34940:	movw	r1, #512	; 0x200
   34944:	bl	34ad8 <__assert_fail@plt+0x23384>
   34948:	str	r0, [sp, #24]
   3494c:	b	34a68 <__assert_fail@plt+0x23314>
   34950:	add	r0, sp, #40	; 0x28
   34954:	movw	r1, #1024	; 0x400
   34958:	bl	34ad8 <__assert_fail@plt+0x23384>
   3495c:	str	r0, [sp, #24]
   34960:	b	34a68 <__assert_fail@plt+0x23314>
   34964:	movw	r0, #0
   34968:	str	r0, [sp, #24]
   3496c:	b	34a68 <__assert_fail@plt+0x23314>
   34970:	ldr	r1, [sp, #32]
   34974:	add	r0, sp, #40	; 0x28
   34978:	movw	r2, #6
   3497c:	bl	36780 <__assert_fail@plt+0x2502c>
   34980:	str	r0, [sp, #24]
   34984:	b	34a68 <__assert_fail@plt+0x23314>
   34988:	ldr	r1, [sp, #32]
   3498c:	add	r0, sp, #40	; 0x28
   34990:	movw	r2, #3
   34994:	bl	36780 <__assert_fail@plt+0x2502c>
   34998:	str	r0, [sp, #24]
   3499c:	b	34a68 <__assert_fail@plt+0x23314>
   349a0:	ldr	r1, [sp, #32]
   349a4:	add	r0, sp, #40	; 0x28
   349a8:	movw	r2, #1
   349ac:	bl	36780 <__assert_fail@plt+0x2502c>
   349b0:	str	r0, [sp, #24]
   349b4:	b	34a68 <__assert_fail@plt+0x23314>
   349b8:	ldr	r1, [sp, #32]
   349bc:	add	r0, sp, #40	; 0x28
   349c0:	movw	r2, #2
   349c4:	bl	36780 <__assert_fail@plt+0x2502c>
   349c8:	str	r0, [sp, #24]
   349cc:	b	34a68 <__assert_fail@plt+0x23314>
   349d0:	ldr	r1, [sp, #32]
   349d4:	add	r0, sp, #40	; 0x28
   349d8:	movw	r2, #5
   349dc:	bl	36780 <__assert_fail@plt+0x2502c>
   349e0:	str	r0, [sp, #24]
   349e4:	b	34a68 <__assert_fail@plt+0x23314>
   349e8:	ldr	r1, [sp, #32]
   349ec:	add	r0, sp, #40	; 0x28
   349f0:	movw	r2, #4
   349f4:	bl	36780 <__assert_fail@plt+0x2502c>
   349f8:	str	r0, [sp, #24]
   349fc:	b	34a68 <__assert_fail@plt+0x23314>
   34a00:	add	r0, sp, #40	; 0x28
   34a04:	movw	r1, #2
   34a08:	bl	34ad8 <__assert_fail@plt+0x23384>
   34a0c:	str	r0, [sp, #24]
   34a10:	b	34a68 <__assert_fail@plt+0x23314>
   34a14:	ldr	r1, [sp, #32]
   34a18:	add	r0, sp, #40	; 0x28
   34a1c:	movw	r2, #8
   34a20:	bl	36780 <__assert_fail@plt+0x2502c>
   34a24:	str	r0, [sp, #24]
   34a28:	b	34a68 <__assert_fail@plt+0x23314>
   34a2c:	ldr	r1, [sp, #32]
   34a30:	add	r0, sp, #40	; 0x28
   34a34:	movw	r2, #7
   34a38:	bl	36780 <__assert_fail@plt+0x2502c>
   34a3c:	str	r0, [sp, #24]
   34a40:	b	34a68 <__assert_fail@plt+0x23314>
   34a44:	ldr	r0, [sp, #40]	; 0x28
   34a48:	ldr	r1, [sp, #44]	; 0x2c
   34a4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   34a50:	str	r1, [r2, #4]
   34a54:	str	r0, [r2]
   34a58:	ldr	r0, [sp, #36]	; 0x24
   34a5c:	orr	r0, r0, #2
   34a60:	str	r0, [fp, #-4]
   34a64:	b	34acc <__assert_fail@plt+0x23378>
   34a68:	ldr	r0, [sp, #24]
   34a6c:	ldr	r1, [sp, #36]	; 0x24
   34a70:	orr	r0, r1, r0
   34a74:	str	r0, [sp, #36]	; 0x24
   34a78:	ldr	r0, [sp, #28]
   34a7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34a80:	ldr	r2, [r1]
   34a84:	add	r0, r2, r0
   34a88:	str	r0, [r1]
   34a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34a90:	ldr	r0, [r0]
   34a94:	ldrsb	r0, [r0]
   34a98:	cmp	r0, #0
   34a9c:	beq	34aac <__assert_fail@plt+0x23358>
   34aa0:	ldr	r0, [sp, #36]	; 0x24
   34aa4:	orr	r0, r0, #2
   34aa8:	str	r0, [sp, #36]	; 0x24
   34aac:	b	34ab0 <__assert_fail@plt+0x2335c>
   34ab0:	ldr	r0, [sp, #40]	; 0x28
   34ab4:	ldr	r1, [sp, #44]	; 0x2c
   34ab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   34abc:	str	r1, [r2, #4]
   34ac0:	str	r0, [r2]
   34ac4:	ldr	r0, [sp, #36]	; 0x24
   34ac8:	str	r0, [fp, #-4]
   34acc:	ldr	r0, [fp, #-4]
   34ad0:	mov	sp, fp
   34ad4:	pop	{fp, pc}
   34ad8:	push	{fp, lr}
   34adc:	mov	fp, sp
   34ae0:	sub	sp, sp, #752	; 0x2f0
   34ae4:	str	r0, [fp, #-8]
   34ae8:	str	r1, [fp, #-12]
   34aec:	b	35074 <__assert_fail@plt+0x23920>
   34af0:	b	34af4 <__assert_fail@plt+0x233a0>
   34af4:	ldr	r0, [fp, #-12]
   34af8:	cmp	r0, #0
   34afc:	bge	34c8c <__assert_fail@plt+0x23538>
   34b00:	ldr	r0, [fp, #-8]
   34b04:	ldr	r0, [r0, #4]
   34b08:	cmn	r0, #1
   34b0c:	bgt	34bc4 <__assert_fail@plt+0x23470>
   34b10:	b	34b14 <__assert_fail@plt+0x233c0>
   34b14:	b	34b18 <__assert_fail@plt+0x233c4>
   34b18:	ldr	r0, [fp, #-8]
   34b1c:	ldr	r1, [r0]
   34b20:	ldr	r0, [r0, #4]
   34b24:	ldr	r2, [fp, #-12]
   34b28:	mov	r3, #127	; 0x7f
   34b2c:	sdiv	r2, r3, r2
   34b30:	subs	r1, r1, r2
   34b34:	sbcs	r0, r0, r2, asr #31
   34b38:	str	r1, [fp, #-28]	; 0xffffffe4
   34b3c:	str	r0, [fp, #-32]	; 0xffffffe0
   34b40:	blt	34d74 <__assert_fail@plt+0x23620>
   34b44:	b	34d98 <__assert_fail@plt+0x23644>
   34b48:	b	34b4c <__assert_fail@plt+0x233f8>
   34b4c:	ldr	r0, [pc, #4064]	; 35b34 <__assert_fail@plt+0x243e0>
   34b50:	ldr	r1, [fp, #-12]
   34b54:	cmp	r1, r0
   34b58:	blt	34b70 <__assert_fail@plt+0x2341c>
   34b5c:	b	34b7c <__assert_fail@plt+0x23428>
   34b60:	ldr	r0, [fp, #-12]
   34b64:	movw	r1, #0
   34b68:	cmp	r1, r0
   34b6c:	bge	34b7c <__assert_fail@plt+0x23428>
   34b70:	movw	r0, #0
   34b74:	str	r0, [fp, #-36]	; 0xffffffdc
   34b78:	b	34b94 <__assert_fail@plt+0x23440>
   34b7c:	ldr	r0, [fp, #-12]
   34b80:	movw	r1, #0
   34b84:	sub	r0, r1, r0
   34b88:	movw	r1, #127	; 0x7f
   34b8c:	sdiv	r0, r1, r0
   34b90:	str	r0, [fp, #-36]	; 0xffffffdc
   34b94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34b98:	ldr	r1, [fp, #-8]
   34b9c:	ldr	r2, [r1]
   34ba0:	ldr	r1, [r1, #4]
   34ba4:	mvn	r1, r1
   34ba8:	mvn	r2, r2
   34bac:	subs	r2, r2, r0
   34bb0:	sbcs	r0, r1, r0, asr #31
   34bb4:	str	r2, [fp, #-40]	; 0xffffffd8
   34bb8:	str	r0, [fp, #-44]	; 0xffffffd4
   34bbc:	bge	34d74 <__assert_fail@plt+0x23620>
   34bc0:	b	34d98 <__assert_fail@plt+0x23644>
   34bc4:	b	34bc8 <__assert_fail@plt+0x23474>
   34bc8:	b	34c5c <__assert_fail@plt+0x23508>
   34bcc:	b	34c5c <__assert_fail@plt+0x23508>
   34bd0:	ldr	r0, [fp, #-12]
   34bd4:	cmn	r0, #1
   34bd8:	bne	34c5c <__assert_fail@plt+0x23508>
   34bdc:	b	34be0 <__assert_fail@plt+0x2348c>
   34be0:	ldr	r0, [fp, #-8]
   34be4:	ldr	r1, [r0]
   34be8:	ldr	r0, [r0, #4]
   34bec:	subs	r1, r1, #128	; 0x80
   34bf0:	sbc	r0, r0, #0
   34bf4:	rsbs	r1, r1, #0
   34bf8:	rscs	r0, r0, #0
   34bfc:	str	r1, [fp, #-48]	; 0xffffffd0
   34c00:	str	r0, [fp, #-52]	; 0xffffffcc
   34c04:	blt	34d74 <__assert_fail@plt+0x23620>
   34c08:	b	34d98 <__assert_fail@plt+0x23644>
   34c0c:	ldr	r0, [fp, #-8]
   34c10:	ldr	r1, [r0]
   34c14:	ldr	r0, [r0, #4]
   34c18:	subs	r1, r1, #1
   34c1c:	sbcs	r0, r0, #0
   34c20:	str	r1, [fp, #-56]	; 0xffffffc8
   34c24:	str	r0, [fp, #-60]	; 0xffffffc4
   34c28:	blt	34d98 <__assert_fail@plt+0x23644>
   34c2c:	b	34c30 <__assert_fail@plt+0x234dc>
   34c30:	ldr	r0, [fp, #-8]
   34c34:	ldr	r1, [r0]
   34c38:	ldr	r0, [r0, #4]
   34c3c:	subs	r1, r1, #1
   34c40:	sbc	r0, r0, #0
   34c44:	rsbs	r1, r1, #127	; 0x7f
   34c48:	rscs	r0, r0, #0
   34c4c:	str	r1, [fp, #-64]	; 0xffffffc0
   34c50:	str	r0, [fp, #-68]	; 0xffffffbc
   34c54:	blt	34d74 <__assert_fail@plt+0x23620>
   34c58:	b	34d98 <__assert_fail@plt+0x23644>
   34c5c:	ldr	r0, [fp, #-12]
   34c60:	mvn	r1, #127	; 0x7f
   34c64:	sdiv	r0, r1, r0
   34c68:	ldr	r1, [fp, #-8]
   34c6c:	ldr	r2, [r1]
   34c70:	ldr	r1, [r1, #4]
   34c74:	subs	r2, r0, r2
   34c78:	rscs	r0, r1, r0, asr #31
   34c7c:	str	r2, [fp, #-72]	; 0xffffffb8
   34c80:	str	r0, [fp, #-76]	; 0xffffffb4
   34c84:	blt	34d74 <__assert_fail@plt+0x23620>
   34c88:	b	34d98 <__assert_fail@plt+0x23644>
   34c8c:	ldr	r0, [fp, #-12]
   34c90:	cmp	r0, #0
   34c94:	bne	34c9c <__assert_fail@plt+0x23548>
   34c98:	b	34d98 <__assert_fail@plt+0x23644>
   34c9c:	ldr	r0, [fp, #-8]
   34ca0:	ldr	r0, [r0, #4]
   34ca4:	cmn	r0, #1
   34ca8:	bgt	34d44 <__assert_fail@plt+0x235f0>
   34cac:	b	34cb0 <__assert_fail@plt+0x2355c>
   34cb0:	b	34cb4 <__assert_fail@plt+0x23560>
   34cb4:	b	34d10 <__assert_fail@plt+0x235bc>
   34cb8:	b	34d10 <__assert_fail@plt+0x235bc>
   34cbc:	ldr	r0, [fp, #-8]
   34cc0:	ldr	r1, [r0]
   34cc4:	ldr	r0, [r0, #4]
   34cc8:	and	r0, r1, r0
   34ccc:	cmn	r0, #1
   34cd0:	bne	34d10 <__assert_fail@plt+0x235bc>
   34cd4:	b	34cd8 <__assert_fail@plt+0x23584>
   34cd8:	b	34cdc <__assert_fail@plt+0x23588>
   34cdc:	ldr	r0, [fp, #-12]
   34ce0:	mvn	r1, #127	; 0x7f
   34ce4:	add	r0, r0, r1
   34ce8:	movw	r1, #0
   34cec:	cmp	r1, r0
   34cf0:	blt	34d74 <__assert_fail@plt+0x23620>
   34cf4:	b	34d98 <__assert_fail@plt+0x23644>
   34cf8:	ldr	r0, [fp, #-12]
   34cfc:	sub	r0, r0, #1
   34d00:	movw	r1, #127	; 0x7f
   34d04:	cmp	r1, r0
   34d08:	blt	34d74 <__assert_fail@plt+0x23620>
   34d0c:	b	34d98 <__assert_fail@plt+0x23644>
   34d10:	ldr	r0, [fp, #-8]
   34d14:	ldr	r2, [r0]
   34d18:	ldr	r3, [r0, #4]
   34d1c:	mvn	r0, #127	; 0x7f
   34d20:	mvn	r1, #0
   34d24:	bl	3c428 <__assert_fail@plt+0x2acd4>
   34d28:	ldr	r2, [fp, #-12]
   34d2c:	subs	r0, r0, r2
   34d30:	sbcs	r1, r1, r2, asr #31
   34d34:	str	r0, [fp, #-80]	; 0xffffffb0
   34d38:	str	r1, [fp, #-84]	; 0xffffffac
   34d3c:	blt	34d74 <__assert_fail@plt+0x23620>
   34d40:	b	34d98 <__assert_fail@plt+0x23644>
   34d44:	ldr	r0, [fp, #-12]
   34d48:	mov	r1, #127	; 0x7f
   34d4c:	sdiv	r0, r1, r0
   34d50:	ldr	r1, [fp, #-8]
   34d54:	ldr	r2, [r1]
   34d58:	ldr	r1, [r1, #4]
   34d5c:	subs	r2, r0, r2
   34d60:	rscs	r0, r1, r0, asr #31
   34d64:	str	r2, [fp, #-88]	; 0xffffffa8
   34d68:	str	r0, [fp, #-92]	; 0xffffffa4
   34d6c:	bge	34d98 <__assert_fail@plt+0x23644>
   34d70:	b	34d74 <__assert_fail@plt+0x23620>
   34d74:	ldr	r0, [fp, #-8]
   34d78:	ldr	r0, [r0]
   34d7c:	ldr	r1, [fp, #-12]
   34d80:	mul	r0, r0, r1
   34d84:	sxtb	r0, r0
   34d88:	asr	r1, r0, #31
   34d8c:	str	r0, [fp, #-24]	; 0xffffffe8
   34d90:	str	r1, [fp, #-20]	; 0xffffffec
   34d94:	b	3671c <__assert_fail@plt+0x24fc8>
   34d98:	ldr	r0, [fp, #-8]
   34d9c:	ldr	r0, [r0]
   34da0:	ldr	r1, [fp, #-12]
   34da4:	mul	r0, r0, r1
   34da8:	sxtb	r0, r0
   34dac:	asr	r1, r0, #31
   34db0:	str	r0, [fp, #-24]	; 0xffffffe8
   34db4:	str	r1, [fp, #-20]	; 0xffffffec
   34db8:	b	36750 <__assert_fail@plt+0x24ffc>
   34dbc:	ldr	r0, [fp, #-12]
   34dc0:	cmp	r0, #0
   34dc4:	bge	34f44 <__assert_fail@plt+0x237f0>
   34dc8:	ldr	r0, [fp, #-8]
   34dcc:	ldr	r0, [r0, #4]
   34dd0:	cmn	r0, #1
   34dd4:	bgt	34e8c <__assert_fail@plt+0x23738>
   34dd8:	b	34ddc <__assert_fail@plt+0x23688>
   34ddc:	b	34de0 <__assert_fail@plt+0x2368c>
   34de0:	ldr	r0, [fp, #-8]
   34de4:	ldr	r1, [r0]
   34de8:	ldr	r0, [r0, #4]
   34dec:	ldr	r2, [fp, #-12]
   34df0:	mov	r3, #255	; 0xff
   34df4:	sdiv	r2, r3, r2
   34df8:	subs	r1, r1, r2
   34dfc:	sbcs	r0, r0, r2, asr #31
   34e00:	str	r1, [fp, #-96]	; 0xffffffa0
   34e04:	str	r0, [fp, #-100]	; 0xffffff9c
   34e08:	blt	3502c <__assert_fail@plt+0x238d8>
   34e0c:	b	35050 <__assert_fail@plt+0x238fc>
   34e10:	b	34e14 <__assert_fail@plt+0x236c0>
   34e14:	ldr	r0, [pc, #3352]	; 35b34 <__assert_fail@plt+0x243e0>
   34e18:	ldr	r1, [fp, #-12]
   34e1c:	cmp	r1, r0
   34e20:	blt	34e38 <__assert_fail@plt+0x236e4>
   34e24:	b	34e44 <__assert_fail@plt+0x236f0>
   34e28:	ldr	r0, [fp, #-12]
   34e2c:	movw	r1, #0
   34e30:	cmp	r1, r0
   34e34:	bge	34e44 <__assert_fail@plt+0x236f0>
   34e38:	movw	r0, #0
   34e3c:	str	r0, [fp, #-104]	; 0xffffff98
   34e40:	b	34e5c <__assert_fail@plt+0x23708>
   34e44:	ldr	r0, [fp, #-12]
   34e48:	movw	r1, #0
   34e4c:	sub	r0, r1, r0
   34e50:	movw	r1, #255	; 0xff
   34e54:	sdiv	r0, r1, r0
   34e58:	str	r0, [fp, #-104]	; 0xffffff98
   34e5c:	ldr	r0, [fp, #-104]	; 0xffffff98
   34e60:	ldr	r1, [fp, #-8]
   34e64:	ldr	r2, [r1]
   34e68:	ldr	r1, [r1, #4]
   34e6c:	mvn	r1, r1
   34e70:	mvn	r2, r2
   34e74:	subs	r2, r2, r0
   34e78:	sbcs	r0, r1, r0, asr #31
   34e7c:	str	r2, [fp, #-108]	; 0xffffff94
   34e80:	str	r0, [fp, #-112]	; 0xffffff90
   34e84:	bge	3502c <__assert_fail@plt+0x238d8>
   34e88:	b	35050 <__assert_fail@plt+0x238fc>
   34e8c:	b	34e90 <__assert_fail@plt+0x2373c>
   34e90:	b	34f14 <__assert_fail@plt+0x237c0>
   34e94:	b	34f14 <__assert_fail@plt+0x237c0>
   34e98:	ldr	r0, [fp, #-12]
   34e9c:	cmn	r0, #1
   34ea0:	bne	34f14 <__assert_fail@plt+0x237c0>
   34ea4:	b	34ea8 <__assert_fail@plt+0x23754>
   34ea8:	ldr	r0, [fp, #-8]
   34eac:	ldr	r1, [r0]
   34eb0:	ldr	r0, [r0, #4]
   34eb4:	rsbs	r1, r1, #0
   34eb8:	rscs	r0, r0, #0
   34ebc:	str	r1, [fp, #-116]	; 0xffffff8c
   34ec0:	str	r0, [fp, #-120]	; 0xffffff88
   34ec4:	blt	3502c <__assert_fail@plt+0x238d8>
   34ec8:	b	35050 <__assert_fail@plt+0x238fc>
   34ecc:	ldr	r0, [fp, #-8]
   34ed0:	ldr	r1, [r0]
   34ed4:	ldr	r0, [r0, #4]
   34ed8:	subs	r1, r1, #1
   34edc:	sbcs	r0, r0, #0
   34ee0:	str	r1, [fp, #-124]	; 0xffffff84
   34ee4:	str	r0, [fp, #-128]	; 0xffffff80
   34ee8:	blt	35050 <__assert_fail@plt+0x238fc>
   34eec:	b	34ef0 <__assert_fail@plt+0x2379c>
   34ef0:	ldr	r0, [fp, #-8]
   34ef4:	ldr	r1, [r0]
   34ef8:	ldr	r0, [r0, #4]
   34efc:	subs	r1, r1, #1
   34f00:	sbc	r0, r0, #0
   34f04:	cmn	r0, #1
   34f08:	str	r1, [fp, #-132]	; 0xffffff7c
   34f0c:	bgt	3502c <__assert_fail@plt+0x238d8>
   34f10:	b	35050 <__assert_fail@plt+0x238fc>
   34f14:	ldr	r0, [fp, #-12]
   34f18:	mov	r1, #0
   34f1c:	sdiv	r0, r1, r0
   34f20:	ldr	r1, [fp, #-8]
   34f24:	ldr	r2, [r1]
   34f28:	ldr	r1, [r1, #4]
   34f2c:	subs	r2, r0, r2
   34f30:	rscs	r0, r1, r0, asr #31
   34f34:	str	r2, [fp, #-136]	; 0xffffff78
   34f38:	str	r0, [fp, #-140]	; 0xffffff74
   34f3c:	blt	3502c <__assert_fail@plt+0x238d8>
   34f40:	b	35050 <__assert_fail@plt+0x238fc>
   34f44:	ldr	r0, [fp, #-12]
   34f48:	cmp	r0, #0
   34f4c:	bne	34f54 <__assert_fail@plt+0x23800>
   34f50:	b	35050 <__assert_fail@plt+0x238fc>
   34f54:	ldr	r0, [fp, #-8]
   34f58:	ldr	r0, [r0, #4]
   34f5c:	cmn	r0, #1
   34f60:	bgt	34ffc <__assert_fail@plt+0x238a8>
   34f64:	b	34f68 <__assert_fail@plt+0x23814>
   34f68:	b	34f6c <__assert_fail@plt+0x23818>
   34f6c:	b	34fc4 <__assert_fail@plt+0x23870>
   34f70:	b	34fc4 <__assert_fail@plt+0x23870>
   34f74:	ldr	r0, [fp, #-8]
   34f78:	ldr	r1, [r0]
   34f7c:	ldr	r0, [r0, #4]
   34f80:	and	r0, r1, r0
   34f84:	cmn	r0, #1
   34f88:	bne	34fc4 <__assert_fail@plt+0x23870>
   34f8c:	b	34f90 <__assert_fail@plt+0x2383c>
   34f90:	b	34f94 <__assert_fail@plt+0x23840>
   34f94:	ldr	r0, [fp, #-12]
   34f98:	add	r0, r0, #0
   34f9c:	movw	r1, #0
   34fa0:	cmp	r1, r0
   34fa4:	blt	3502c <__assert_fail@plt+0x238d8>
   34fa8:	b	35050 <__assert_fail@plt+0x238fc>
   34fac:	ldr	r0, [fp, #-12]
   34fb0:	sub	r0, r0, #1
   34fb4:	mvn	r1, #0
   34fb8:	cmp	r1, r0
   34fbc:	blt	3502c <__assert_fail@plt+0x238d8>
   34fc0:	b	35050 <__assert_fail@plt+0x238fc>
   34fc4:	ldr	r0, [fp, #-8]
   34fc8:	ldr	r2, [r0]
   34fcc:	ldr	r3, [r0, #4]
   34fd0:	mov	r0, #0
   34fd4:	str	r0, [fp, #-144]	; 0xffffff70
   34fd8:	ldr	r1, [fp, #-144]	; 0xffffff70
   34fdc:	bl	3c428 <__assert_fail@plt+0x2acd4>
   34fe0:	ldr	r2, [fp, #-12]
   34fe4:	subs	r0, r0, r2
   34fe8:	sbcs	r1, r1, r2, asr #31
   34fec:	str	r0, [fp, #-148]	; 0xffffff6c
   34ff0:	str	r1, [fp, #-152]	; 0xffffff68
   34ff4:	blt	3502c <__assert_fail@plt+0x238d8>
   34ff8:	b	35050 <__assert_fail@plt+0x238fc>
   34ffc:	ldr	r0, [fp, #-12]
   35000:	mov	r1, #255	; 0xff
   35004:	sdiv	r0, r1, r0
   35008:	ldr	r1, [fp, #-8]
   3500c:	ldr	r2, [r1]
   35010:	ldr	r1, [r1, #4]
   35014:	subs	r2, r0, r2
   35018:	rscs	r0, r1, r0, asr #31
   3501c:	str	r2, [fp, #-156]	; 0xffffff64
   35020:	str	r0, [fp, #-160]	; 0xffffff60
   35024:	bge	35050 <__assert_fail@plt+0x238fc>
   35028:	b	3502c <__assert_fail@plt+0x238d8>
   3502c:	ldr	r0, [fp, #-8]
   35030:	ldr	r0, [r0]
   35034:	ldr	r1, [fp, #-12]
   35038:	mul	r0, r0, r1
   3503c:	uxtb	r0, r0
   35040:	mov	r1, #0
   35044:	str	r1, [fp, #-20]	; 0xffffffec
   35048:	str	r0, [fp, #-24]	; 0xffffffe8
   3504c:	b	3671c <__assert_fail@plt+0x24fc8>
   35050:	ldr	r0, [fp, #-8]
   35054:	ldr	r0, [r0]
   35058:	ldr	r1, [fp, #-12]
   3505c:	mul	r0, r0, r1
   35060:	uxtb	r0, r0
   35064:	mov	r1, #0
   35068:	str	r1, [fp, #-20]	; 0xffffffec
   3506c:	str	r0, [fp, #-24]	; 0xffffffe8
   35070:	b	36750 <__assert_fail@plt+0x24ffc>
   35074:	b	35608 <__assert_fail@plt+0x23eb4>
   35078:	b	3507c <__assert_fail@plt+0x23928>
   3507c:	ldr	r0, [fp, #-12]
   35080:	cmp	r0, #0
   35084:	bge	3521c <__assert_fail@plt+0x23ac8>
   35088:	ldr	r0, [fp, #-8]
   3508c:	ldr	r0, [r0, #4]
   35090:	cmn	r0, #1
   35094:	bgt	3514c <__assert_fail@plt+0x239f8>
   35098:	b	3509c <__assert_fail@plt+0x23948>
   3509c:	b	350a0 <__assert_fail@plt+0x2394c>
   350a0:	ldr	r0, [fp, #-8]
   350a4:	ldr	r1, [r0]
   350a8:	ldr	r0, [r0, #4]
   350ac:	ldr	r2, [fp, #-12]
   350b0:	movw	r3, #32767	; 0x7fff
   350b4:	sdiv	r2, r3, r2
   350b8:	subs	r1, r1, r2
   350bc:	sbcs	r0, r0, r2, asr #31
   350c0:	str	r1, [fp, #-164]	; 0xffffff5c
   350c4:	str	r0, [fp, #-168]	; 0xffffff58
   350c8:	blt	35308 <__assert_fail@plt+0x23bb4>
   350cc:	b	3532c <__assert_fail@plt+0x23bd8>
   350d0:	b	350d4 <__assert_fail@plt+0x23980>
   350d4:	ldr	r0, [pc, #2648]	; 35b34 <__assert_fail@plt+0x243e0>
   350d8:	ldr	r1, [fp, #-12]
   350dc:	cmp	r1, r0
   350e0:	blt	350f8 <__assert_fail@plt+0x239a4>
   350e4:	b	35104 <__assert_fail@plt+0x239b0>
   350e8:	ldr	r0, [fp, #-12]
   350ec:	movw	r1, #0
   350f0:	cmp	r1, r0
   350f4:	bge	35104 <__assert_fail@plt+0x239b0>
   350f8:	movw	r0, #0
   350fc:	str	r0, [fp, #-172]	; 0xffffff54
   35100:	b	3511c <__assert_fail@plt+0x239c8>
   35104:	ldr	r0, [fp, #-12]
   35108:	movw	r1, #0
   3510c:	sub	r0, r1, r0
   35110:	movw	r1, #32767	; 0x7fff
   35114:	sdiv	r0, r1, r0
   35118:	str	r0, [fp, #-172]	; 0xffffff54
   3511c:	ldr	r0, [fp, #-172]	; 0xffffff54
   35120:	ldr	r1, [fp, #-8]
   35124:	ldr	r2, [r1]
   35128:	ldr	r1, [r1, #4]
   3512c:	mvn	r1, r1
   35130:	mvn	r2, r2
   35134:	subs	r2, r2, r0
   35138:	sbcs	r0, r1, r0, asr #31
   3513c:	str	r2, [fp, #-176]	; 0xffffff50
   35140:	str	r0, [fp, #-180]	; 0xffffff4c
   35144:	bge	35308 <__assert_fail@plt+0x23bb4>
   35148:	b	3532c <__assert_fail@plt+0x23bd8>
   3514c:	b	35150 <__assert_fail@plt+0x239fc>
   35150:	b	351e8 <__assert_fail@plt+0x23a94>
   35154:	b	351e8 <__assert_fail@plt+0x23a94>
   35158:	ldr	r0, [fp, #-12]
   3515c:	cmn	r0, #1
   35160:	bne	351e8 <__assert_fail@plt+0x23a94>
   35164:	b	35168 <__assert_fail@plt+0x23a14>
   35168:	ldr	r0, [fp, #-8]
   3516c:	ldr	r1, [r0]
   35170:	ldr	r0, [r0, #4]
   35174:	subs	r1, r1, #32768	; 0x8000
   35178:	sbc	r0, r0, #0
   3517c:	rsbs	r1, r1, #0
   35180:	rscs	r0, r0, #0
   35184:	str	r1, [fp, #-184]	; 0xffffff48
   35188:	str	r0, [fp, #-188]	; 0xffffff44
   3518c:	blt	35308 <__assert_fail@plt+0x23bb4>
   35190:	b	3532c <__assert_fail@plt+0x23bd8>
   35194:	ldr	r0, [fp, #-8]
   35198:	ldr	r1, [r0]
   3519c:	ldr	r0, [r0, #4]
   351a0:	subs	r1, r1, #1
   351a4:	sbcs	r0, r0, #0
   351a8:	str	r1, [fp, #-192]	; 0xffffff40
   351ac:	str	r0, [fp, #-196]	; 0xffffff3c
   351b0:	blt	3532c <__assert_fail@plt+0x23bd8>
   351b4:	b	351b8 <__assert_fail@plt+0x23a64>
   351b8:	ldr	r0, [fp, #-8]
   351bc:	ldr	r1, [r0]
   351c0:	ldr	r0, [r0, #4]
   351c4:	subs	r1, r1, #1
   351c8:	sbc	r0, r0, #0
   351cc:	movw	r2, #32767	; 0x7fff
   351d0:	subs	r1, r2, r1
   351d4:	rscs	r0, r0, #0
   351d8:	str	r1, [fp, #-200]	; 0xffffff38
   351dc:	str	r0, [fp, #-204]	; 0xffffff34
   351e0:	blt	35308 <__assert_fail@plt+0x23bb4>
   351e4:	b	3532c <__assert_fail@plt+0x23bd8>
   351e8:	ldr	r0, [fp, #-12]
   351ec:	movw	r1, #32768	; 0x8000
   351f0:	movt	r1, #65535	; 0xffff
   351f4:	sdiv	r0, r1, r0
   351f8:	ldr	r1, [fp, #-8]
   351fc:	ldr	r2, [r1]
   35200:	ldr	r1, [r1, #4]
   35204:	subs	r2, r0, r2
   35208:	rscs	r0, r1, r0, asr #31
   3520c:	str	r2, [fp, #-208]	; 0xffffff30
   35210:	str	r0, [fp, #-212]	; 0xffffff2c
   35214:	blt	35308 <__assert_fail@plt+0x23bb4>
   35218:	b	3532c <__assert_fail@plt+0x23bd8>
   3521c:	ldr	r0, [fp, #-12]
   35220:	cmp	r0, #0
   35224:	bne	3522c <__assert_fail@plt+0x23ad8>
   35228:	b	3532c <__assert_fail@plt+0x23bd8>
   3522c:	ldr	r0, [fp, #-8]
   35230:	ldr	r0, [r0, #4]
   35234:	cmn	r0, #1
   35238:	bgt	352d8 <__assert_fail@plt+0x23b84>
   3523c:	b	35240 <__assert_fail@plt+0x23aec>
   35240:	b	35244 <__assert_fail@plt+0x23af0>
   35244:	b	352a0 <__assert_fail@plt+0x23b4c>
   35248:	b	352a0 <__assert_fail@plt+0x23b4c>
   3524c:	ldr	r0, [fp, #-8]
   35250:	ldr	r1, [r0]
   35254:	ldr	r0, [r0, #4]
   35258:	and	r0, r1, r0
   3525c:	cmn	r0, #1
   35260:	bne	352a0 <__assert_fail@plt+0x23b4c>
   35264:	b	35268 <__assert_fail@plt+0x23b14>
   35268:	b	3526c <__assert_fail@plt+0x23b18>
   3526c:	ldr	r0, [pc, #4088]	; 3626c <__assert_fail@plt+0x24b18>
   35270:	ldr	r1, [fp, #-12]
   35274:	add	r0, r1, r0
   35278:	movw	r1, #0
   3527c:	cmp	r1, r0
   35280:	blt	35308 <__assert_fail@plt+0x23bb4>
   35284:	b	3532c <__assert_fail@plt+0x23bd8>
   35288:	ldr	r0, [fp, #-12]
   3528c:	sub	r0, r0, #1
   35290:	movw	r1, #32767	; 0x7fff
   35294:	cmp	r1, r0
   35298:	blt	35308 <__assert_fail@plt+0x23bb4>
   3529c:	b	3532c <__assert_fail@plt+0x23bd8>
   352a0:	ldr	r0, [fp, #-8]
   352a4:	ldr	r2, [r0]
   352a8:	ldr	r3, [r0, #4]
   352ac:	movw	r0, #32768	; 0x8000
   352b0:	movt	r0, #65535	; 0xffff
   352b4:	mvn	r1, #0
   352b8:	bl	3c428 <__assert_fail@plt+0x2acd4>
   352bc:	ldr	r2, [fp, #-12]
   352c0:	subs	r0, r0, r2
   352c4:	sbcs	r1, r1, r2, asr #31
   352c8:	str	r0, [fp, #-216]	; 0xffffff28
   352cc:	str	r1, [fp, #-220]	; 0xffffff24
   352d0:	blt	35308 <__assert_fail@plt+0x23bb4>
   352d4:	b	3532c <__assert_fail@plt+0x23bd8>
   352d8:	ldr	r0, [fp, #-12]
   352dc:	movw	r1, #32767	; 0x7fff
   352e0:	sdiv	r0, r1, r0
   352e4:	ldr	r1, [fp, #-8]
   352e8:	ldr	r2, [r1]
   352ec:	ldr	r1, [r1, #4]
   352f0:	subs	r2, r0, r2
   352f4:	rscs	r0, r1, r0, asr #31
   352f8:	str	r2, [fp, #-224]	; 0xffffff20
   352fc:	str	r0, [fp, #-228]	; 0xffffff1c
   35300:	bge	3532c <__assert_fail@plt+0x23bd8>
   35304:	b	35308 <__assert_fail@plt+0x23bb4>
   35308:	ldr	r0, [fp, #-8]
   3530c:	ldr	r0, [r0]
   35310:	ldr	r1, [fp, #-12]
   35314:	mul	r0, r0, r1
   35318:	sxth	r0, r0
   3531c:	asr	r1, r0, #31
   35320:	str	r0, [fp, #-24]	; 0xffffffe8
   35324:	str	r1, [fp, #-20]	; 0xffffffec
   35328:	b	3671c <__assert_fail@plt+0x24fc8>
   3532c:	ldr	r0, [fp, #-8]
   35330:	ldr	r0, [r0]
   35334:	ldr	r1, [fp, #-12]
   35338:	mul	r0, r0, r1
   3533c:	sxth	r0, r0
   35340:	asr	r1, r0, #31
   35344:	str	r0, [fp, #-24]	; 0xffffffe8
   35348:	str	r1, [fp, #-20]	; 0xffffffec
   3534c:	b	36750 <__assert_fail@plt+0x24ffc>
   35350:	ldr	r0, [fp, #-12]
   35354:	cmp	r0, #0
   35358:	bge	354d8 <__assert_fail@plt+0x23d84>
   3535c:	ldr	r0, [fp, #-8]
   35360:	ldr	r0, [r0, #4]
   35364:	cmn	r0, #1
   35368:	bgt	35420 <__assert_fail@plt+0x23ccc>
   3536c:	b	35370 <__assert_fail@plt+0x23c1c>
   35370:	b	35374 <__assert_fail@plt+0x23c20>
   35374:	ldr	r0, [fp, #-8]
   35378:	ldr	r1, [r0]
   3537c:	ldr	r0, [r0, #4]
   35380:	ldr	r2, [fp, #-12]
   35384:	movw	r3, #65535	; 0xffff
   35388:	sdiv	r2, r3, r2
   3538c:	subs	r1, r1, r2
   35390:	sbcs	r0, r0, r2, asr #31
   35394:	str	r1, [fp, #-232]	; 0xffffff18
   35398:	str	r0, [fp, #-236]	; 0xffffff14
   3539c:	blt	355c0 <__assert_fail@plt+0x23e6c>
   353a0:	b	355e4 <__assert_fail@plt+0x23e90>
   353a4:	b	353a8 <__assert_fail@plt+0x23c54>
   353a8:	ldr	r0, [pc, #1924]	; 35b34 <__assert_fail@plt+0x243e0>
   353ac:	ldr	r1, [fp, #-12]
   353b0:	cmp	r1, r0
   353b4:	blt	353cc <__assert_fail@plt+0x23c78>
   353b8:	b	353d8 <__assert_fail@plt+0x23c84>
   353bc:	ldr	r0, [fp, #-12]
   353c0:	movw	r1, #0
   353c4:	cmp	r1, r0
   353c8:	bge	353d8 <__assert_fail@plt+0x23c84>
   353cc:	movw	r0, #0
   353d0:	str	r0, [fp, #-240]	; 0xffffff10
   353d4:	b	353f0 <__assert_fail@plt+0x23c9c>
   353d8:	ldr	r0, [fp, #-12]
   353dc:	movw	r1, #0
   353e0:	sub	r0, r1, r0
   353e4:	movw	r1, #65535	; 0xffff
   353e8:	sdiv	r0, r1, r0
   353ec:	str	r0, [fp, #-240]	; 0xffffff10
   353f0:	ldr	r0, [fp, #-240]	; 0xffffff10
   353f4:	ldr	r1, [fp, #-8]
   353f8:	ldr	r2, [r1]
   353fc:	ldr	r1, [r1, #4]
   35400:	mvn	r1, r1
   35404:	mvn	r2, r2
   35408:	subs	r2, r2, r0
   3540c:	sbcs	r0, r1, r0, asr #31
   35410:	str	r2, [fp, #-244]	; 0xffffff0c
   35414:	str	r0, [fp, #-248]	; 0xffffff08
   35418:	bge	355c0 <__assert_fail@plt+0x23e6c>
   3541c:	b	355e4 <__assert_fail@plt+0x23e90>
   35420:	b	35424 <__assert_fail@plt+0x23cd0>
   35424:	b	354a8 <__assert_fail@plt+0x23d54>
   35428:	b	354a8 <__assert_fail@plt+0x23d54>
   3542c:	ldr	r0, [fp, #-12]
   35430:	cmn	r0, #1
   35434:	bne	354a8 <__assert_fail@plt+0x23d54>
   35438:	b	3543c <__assert_fail@plt+0x23ce8>
   3543c:	ldr	r0, [fp, #-8]
   35440:	ldr	r1, [r0]
   35444:	ldr	r0, [r0, #4]
   35448:	rsbs	r1, r1, #0
   3544c:	rscs	r0, r0, #0
   35450:	str	r1, [fp, #-252]	; 0xffffff04
   35454:	str	r0, [fp, #-256]	; 0xffffff00
   35458:	blt	355c0 <__assert_fail@plt+0x23e6c>
   3545c:	b	355e4 <__assert_fail@plt+0x23e90>
   35460:	ldr	r0, [fp, #-8]
   35464:	ldr	r1, [r0]
   35468:	ldr	r0, [r0, #4]
   3546c:	subs	r1, r1, #1
   35470:	sbcs	r0, r0, #0
   35474:	str	r1, [fp, #-260]	; 0xfffffefc
   35478:	str	r0, [fp, #-264]	; 0xfffffef8
   3547c:	blt	355e4 <__assert_fail@plt+0x23e90>
   35480:	b	35484 <__assert_fail@plt+0x23d30>
   35484:	ldr	r0, [fp, #-8]
   35488:	ldr	r1, [r0]
   3548c:	ldr	r0, [r0, #4]
   35490:	subs	r1, r1, #1
   35494:	sbc	r0, r0, #0
   35498:	cmn	r0, #1
   3549c:	str	r1, [fp, #-268]	; 0xfffffef4
   354a0:	bgt	355c0 <__assert_fail@plt+0x23e6c>
   354a4:	b	355e4 <__assert_fail@plt+0x23e90>
   354a8:	ldr	r0, [fp, #-12]
   354ac:	mov	r1, #0
   354b0:	sdiv	r0, r1, r0
   354b4:	ldr	r1, [fp, #-8]
   354b8:	ldr	r2, [r1]
   354bc:	ldr	r1, [r1, #4]
   354c0:	subs	r2, r0, r2
   354c4:	rscs	r0, r1, r0, asr #31
   354c8:	str	r2, [fp, #-272]	; 0xfffffef0
   354cc:	str	r0, [fp, #-276]	; 0xfffffeec
   354d0:	blt	355c0 <__assert_fail@plt+0x23e6c>
   354d4:	b	355e4 <__assert_fail@plt+0x23e90>
   354d8:	ldr	r0, [fp, #-12]
   354dc:	cmp	r0, #0
   354e0:	bne	354e8 <__assert_fail@plt+0x23d94>
   354e4:	b	355e4 <__assert_fail@plt+0x23e90>
   354e8:	ldr	r0, [fp, #-8]
   354ec:	ldr	r0, [r0, #4]
   354f0:	cmn	r0, #1
   354f4:	bgt	35590 <__assert_fail@plt+0x23e3c>
   354f8:	b	354fc <__assert_fail@plt+0x23da8>
   354fc:	b	35500 <__assert_fail@plt+0x23dac>
   35500:	b	35558 <__assert_fail@plt+0x23e04>
   35504:	b	35558 <__assert_fail@plt+0x23e04>
   35508:	ldr	r0, [fp, #-8]
   3550c:	ldr	r1, [r0]
   35510:	ldr	r0, [r0, #4]
   35514:	and	r0, r1, r0
   35518:	cmn	r0, #1
   3551c:	bne	35558 <__assert_fail@plt+0x23e04>
   35520:	b	35524 <__assert_fail@plt+0x23dd0>
   35524:	b	35528 <__assert_fail@plt+0x23dd4>
   35528:	ldr	r0, [fp, #-12]
   3552c:	add	r0, r0, #0
   35530:	movw	r1, #0
   35534:	cmp	r1, r0
   35538:	blt	355c0 <__assert_fail@plt+0x23e6c>
   3553c:	b	355e4 <__assert_fail@plt+0x23e90>
   35540:	ldr	r0, [fp, #-12]
   35544:	sub	r0, r0, #1
   35548:	mvn	r1, #0
   3554c:	cmp	r1, r0
   35550:	blt	355c0 <__assert_fail@plt+0x23e6c>
   35554:	b	355e4 <__assert_fail@plt+0x23e90>
   35558:	ldr	r0, [fp, #-8]
   3555c:	ldr	r2, [r0]
   35560:	ldr	r3, [r0, #4]
   35564:	mov	r0, #0
   35568:	str	r0, [fp, #-280]	; 0xfffffee8
   3556c:	ldr	r1, [fp, #-280]	; 0xfffffee8
   35570:	bl	3c428 <__assert_fail@plt+0x2acd4>
   35574:	ldr	r2, [fp, #-12]
   35578:	subs	r0, r0, r2
   3557c:	sbcs	r1, r1, r2, asr #31
   35580:	str	r0, [fp, #-284]	; 0xfffffee4
   35584:	str	r1, [fp, #-288]	; 0xfffffee0
   35588:	blt	355c0 <__assert_fail@plt+0x23e6c>
   3558c:	b	355e4 <__assert_fail@plt+0x23e90>
   35590:	ldr	r0, [fp, #-12]
   35594:	movw	r1, #65535	; 0xffff
   35598:	sdiv	r0, r1, r0
   3559c:	ldr	r1, [fp, #-8]
   355a0:	ldr	r2, [r1]
   355a4:	ldr	r1, [r1, #4]
   355a8:	subs	r2, r0, r2
   355ac:	rscs	r0, r1, r0, asr #31
   355b0:	str	r2, [fp, #-292]	; 0xfffffedc
   355b4:	str	r0, [fp, #-296]	; 0xfffffed8
   355b8:	bge	355e4 <__assert_fail@plt+0x23e90>
   355bc:	b	355c0 <__assert_fail@plt+0x23e6c>
   355c0:	ldr	r0, [fp, #-8]
   355c4:	ldr	r0, [r0]
   355c8:	ldr	r1, [fp, #-12]
   355cc:	mul	r0, r0, r1
   355d0:	uxth	r0, r0
   355d4:	mov	r1, #0
   355d8:	str	r1, [fp, #-20]	; 0xffffffec
   355dc:	str	r0, [fp, #-24]	; 0xffffffe8
   355e0:	b	3671c <__assert_fail@plt+0x24fc8>
   355e4:	ldr	r0, [fp, #-8]
   355e8:	ldr	r0, [r0]
   355ec:	ldr	r1, [fp, #-12]
   355f0:	mul	r0, r0, r1
   355f4:	uxth	r0, r0
   355f8:	mov	r1, #0
   355fc:	str	r1, [fp, #-20]	; 0xffffffec
   35600:	str	r0, [fp, #-24]	; 0xffffffe8
   35604:	b	36750 <__assert_fail@plt+0x24ffc>
   35608:	b	35b78 <__assert_fail@plt+0x24424>
   3560c:	b	35610 <__assert_fail@plt+0x23ebc>
   35610:	ldr	r0, [fp, #-12]
   35614:	cmp	r0, #0
   35618:	bge	357a0 <__assert_fail@plt+0x2404c>
   3561c:	ldr	r0, [fp, #-8]
   35620:	ldr	r0, [r0, #4]
   35624:	cmn	r0, #1
   35628:	bgt	356e0 <__assert_fail@plt+0x23f8c>
   3562c:	b	35630 <__assert_fail@plt+0x23edc>
   35630:	b	35634 <__assert_fail@plt+0x23ee0>
   35634:	ldr	r0, [fp, #-8]
   35638:	ldr	r1, [r0]
   3563c:	ldr	r0, [r0, #4]
   35640:	ldr	r2, [fp, #-12]
   35644:	mvn	r3, #-2147483648	; 0x80000000
   35648:	sdiv	r2, r3, r2
   3564c:	subs	r1, r1, r2
   35650:	sbcs	r0, r0, r2, asr #31
   35654:	str	r1, [fp, #-300]	; 0xfffffed4
   35658:	str	r0, [fp, #-304]	; 0xfffffed0
   3565c:	blt	35884 <__assert_fail@plt+0x24130>
   35660:	b	358a4 <__assert_fail@plt+0x24150>
   35664:	b	35668 <__assert_fail@plt+0x23f14>
   35668:	ldr	r0, [pc, #1220]	; 35b34 <__assert_fail@plt+0x243e0>
   3566c:	ldr	r1, [fp, #-12]
   35670:	cmp	r1, r0
   35674:	blt	3568c <__assert_fail@plt+0x23f38>
   35678:	b	35698 <__assert_fail@plt+0x23f44>
   3567c:	ldr	r0, [fp, #-12]
   35680:	movw	r1, #0
   35684:	cmp	r1, r0
   35688:	bge	35698 <__assert_fail@plt+0x23f44>
   3568c:	movw	r0, #0
   35690:	str	r0, [fp, #-308]	; 0xfffffecc
   35694:	b	356b0 <__assert_fail@plt+0x23f5c>
   35698:	ldr	r0, [pc, #4064]	; 36680 <__assert_fail@plt+0x24f2c>
   3569c:	ldr	r1, [fp, #-12]
   356a0:	movw	r2, #0
   356a4:	sub	r1, r2, r1
   356a8:	sdiv	r0, r0, r1
   356ac:	str	r0, [fp, #-308]	; 0xfffffecc
   356b0:	ldr	r0, [fp, #-308]	; 0xfffffecc
   356b4:	ldr	r1, [fp, #-8]
   356b8:	ldr	r2, [r1]
   356bc:	ldr	r1, [r1, #4]
   356c0:	mvn	r1, r1
   356c4:	mvn	r2, r2
   356c8:	subs	r2, r2, r0
   356cc:	sbcs	r0, r1, r0, asr #31
   356d0:	str	r2, [fp, #-312]	; 0xfffffec8
   356d4:	str	r0, [fp, #-316]	; 0xfffffec4
   356d8:	bge	35884 <__assert_fail@plt+0x24130>
   356dc:	b	358a4 <__assert_fail@plt+0x24150>
   356e0:	ldr	r0, [fp, #-12]
   356e4:	cmn	r0, #1
   356e8:	bne	35770 <__assert_fail@plt+0x2401c>
   356ec:	b	356f0 <__assert_fail@plt+0x23f9c>
   356f0:	ldr	r0, [fp, #-8]
   356f4:	ldr	r1, [r0]
   356f8:	ldr	r0, [r0, #4]
   356fc:	adds	r1, r1, #-2147483648	; 0x80000000
   35700:	sbc	r0, r0, #0
   35704:	rsbs	r1, r1, #0
   35708:	rscs	r0, r0, #0
   3570c:	str	r1, [fp, #-320]	; 0xfffffec0
   35710:	str	r0, [fp, #-324]	; 0xfffffebc
   35714:	blt	35884 <__assert_fail@plt+0x24130>
   35718:	b	358a4 <__assert_fail@plt+0x24150>
   3571c:	ldr	r0, [fp, #-8]
   35720:	ldr	r1, [r0]
   35724:	ldr	r0, [r0, #4]
   35728:	subs	r1, r1, #1
   3572c:	sbcs	r0, r0, #0
   35730:	str	r1, [fp, #-328]	; 0xfffffeb8
   35734:	str	r0, [fp, #-332]	; 0xfffffeb4
   35738:	blt	358a4 <__assert_fail@plt+0x24150>
   3573c:	b	35740 <__assert_fail@plt+0x23fec>
   35740:	ldr	r0, [fp, #-8]
   35744:	ldr	r1, [r0]
   35748:	ldr	r0, [r0, #4]
   3574c:	subs	r1, r1, #1
   35750:	sbc	r0, r0, #0
   35754:	mvn	r2, #-2147483648	; 0x80000000
   35758:	subs	r1, r2, r1
   3575c:	rscs	r0, r0, #0
   35760:	str	r1, [fp, #-336]	; 0xfffffeb0
   35764:	str	r0, [fp, #-340]	; 0xfffffeac
   35768:	blt	35884 <__assert_fail@plt+0x24130>
   3576c:	b	358a4 <__assert_fail@plt+0x24150>
   35770:	ldr	r0, [fp, #-12]
   35774:	mov	r1, #-2147483648	; 0x80000000
   35778:	sdiv	r0, r1, r0
   3577c:	ldr	r1, [fp, #-8]
   35780:	ldr	r2, [r1]
   35784:	ldr	r1, [r1, #4]
   35788:	subs	r2, r0, r2
   3578c:	rscs	r0, r1, r0, asr #31
   35790:	str	r2, [fp, #-344]	; 0xfffffea8
   35794:	str	r0, [fp, #-348]	; 0xfffffea4
   35798:	blt	35884 <__assert_fail@plt+0x24130>
   3579c:	b	358a4 <__assert_fail@plt+0x24150>
   357a0:	ldr	r0, [fp, #-12]
   357a4:	cmp	r0, #0
   357a8:	bne	357b0 <__assert_fail@plt+0x2405c>
   357ac:	b	358a4 <__assert_fail@plt+0x24150>
   357b0:	ldr	r0, [fp, #-8]
   357b4:	ldr	r0, [r0, #4]
   357b8:	cmn	r0, #1
   357bc:	bgt	35854 <__assert_fail@plt+0x24100>
   357c0:	b	357c4 <__assert_fail@plt+0x24070>
   357c4:	b	357c8 <__assert_fail@plt+0x24074>
   357c8:	b	35820 <__assert_fail@plt+0x240cc>
   357cc:	b	35820 <__assert_fail@plt+0x240cc>
   357d0:	ldr	r0, [fp, #-8]
   357d4:	ldr	r1, [r0]
   357d8:	ldr	r0, [r0, #4]
   357dc:	and	r0, r1, r0
   357e0:	cmn	r0, #1
   357e4:	bne	35820 <__assert_fail@plt+0x240cc>
   357e8:	b	357ec <__assert_fail@plt+0x24098>
   357ec:	b	357f0 <__assert_fail@plt+0x2409c>
   357f0:	ldr	r0, [fp, #-12]
   357f4:	add	r0, r0, #-2147483648	; 0x80000000
   357f8:	movw	r1, #0
   357fc:	cmp	r1, r0
   35800:	blt	35884 <__assert_fail@plt+0x24130>
   35804:	b	358a4 <__assert_fail@plt+0x24150>
   35808:	ldr	r0, [pc, #3948]	; 3677c <__assert_fail@plt+0x25028>
   3580c:	ldr	r1, [fp, #-12]
   35810:	sub	r1, r1, #1
   35814:	cmp	r0, r1
   35818:	blt	35884 <__assert_fail@plt+0x24130>
   3581c:	b	358a4 <__assert_fail@plt+0x24150>
   35820:	ldr	r0, [fp, #-8]
   35824:	ldr	r2, [r0]
   35828:	ldr	r3, [r0, #4]
   3582c:	mov	r0, #-2147483648	; 0x80000000
   35830:	mvn	r1, #0
   35834:	bl	3c428 <__assert_fail@plt+0x2acd4>
   35838:	ldr	r2, [fp, #-12]
   3583c:	subs	r0, r0, r2
   35840:	sbcs	r1, r1, r2, asr #31
   35844:	str	r0, [fp, #-352]	; 0xfffffea0
   35848:	str	r1, [fp, #-356]	; 0xfffffe9c
   3584c:	blt	35884 <__assert_fail@plt+0x24130>
   35850:	b	358a4 <__assert_fail@plt+0x24150>
   35854:	ldr	r0, [fp, #-12]
   35858:	mvn	r1, #-2147483648	; 0x80000000
   3585c:	sdiv	r0, r1, r0
   35860:	ldr	r1, [fp, #-8]
   35864:	ldr	r2, [r1]
   35868:	ldr	r1, [r1, #4]
   3586c:	subs	r2, r0, r2
   35870:	rscs	r0, r1, r0, asr #31
   35874:	str	r2, [fp, #-360]	; 0xfffffe98
   35878:	str	r0, [fp, #-364]	; 0xfffffe94
   3587c:	bge	358a4 <__assert_fail@plt+0x24150>
   35880:	b	35884 <__assert_fail@plt+0x24130>
   35884:	ldr	r0, [fp, #-8]
   35888:	ldr	r0, [r0]
   3588c:	ldr	r1, [fp, #-12]
   35890:	mul	r0, r0, r1
   35894:	asr	r1, r0, #31
   35898:	str	r0, [fp, #-24]	; 0xffffffe8
   3589c:	str	r1, [fp, #-20]	; 0xffffffec
   358a0:	b	3671c <__assert_fail@plt+0x24fc8>
   358a4:	ldr	r0, [fp, #-8]
   358a8:	ldr	r0, [r0]
   358ac:	ldr	r1, [fp, #-12]
   358b0:	mul	r0, r0, r1
   358b4:	asr	r1, r0, #31
   358b8:	str	r0, [fp, #-24]	; 0xffffffe8
   358bc:	str	r1, [fp, #-20]	; 0xffffffec
   358c0:	b	36750 <__assert_fail@plt+0x24ffc>
   358c4:	ldr	r0, [fp, #-12]
   358c8:	cmp	r0, #0
   358cc:	bge	35a4c <__assert_fail@plt+0x242f8>
   358d0:	ldr	r0, [fp, #-8]
   358d4:	ldr	r0, [r0, #4]
   358d8:	cmn	r0, #1
   358dc:	bgt	35994 <__assert_fail@plt+0x24240>
   358e0:	b	358e4 <__assert_fail@plt+0x24190>
   358e4:	b	35918 <__assert_fail@plt+0x241c4>
   358e8:	ldr	r0, [fp, #-8]
   358ec:	ldr	r1, [r0]
   358f0:	ldr	r0, [r0, #4]
   358f4:	ldr	r2, [fp, #-12]
   358f8:	mvn	r3, #0
   358fc:	udiv	r2, r3, r2
   35900:	subs	r1, r1, r2
   35904:	sbcs	r0, r0, #0
   35908:	str	r1, [fp, #-368]	; 0xfffffe90
   3590c:	str	r0, [fp, #-372]	; 0xfffffe8c
   35910:	blt	35b38 <__assert_fail@plt+0x243e4>
   35914:	b	35b58 <__assert_fail@plt+0x24404>
   35918:	b	3591c <__assert_fail@plt+0x241c8>
   3591c:	ldr	r0, [pc, #3668]	; 36778 <__assert_fail@plt+0x25024>
   35920:	ldr	r1, [fp, #-12]
   35924:	cmp	r1, r0
   35928:	blt	35940 <__assert_fail@plt+0x241ec>
   3592c:	b	3594c <__assert_fail@plt+0x241f8>
   35930:	ldr	r0, [fp, #-12]
   35934:	movw	r1, #0
   35938:	cmp	r1, r0
   3593c:	bge	3594c <__assert_fail@plt+0x241f8>
   35940:	movw	r0, #1
   35944:	str	r0, [sp, #376]	; 0x178
   35948:	b	35964 <__assert_fail@plt+0x24210>
   3594c:	ldr	r0, [fp, #-12]
   35950:	movw	r1, #0
   35954:	sub	r0, r1, r0
   35958:	mvn	r1, #0
   3595c:	udiv	r0, r1, r0
   35960:	str	r0, [sp, #376]	; 0x178
   35964:	ldr	r0, [sp, #376]	; 0x178
   35968:	ldr	r1, [fp, #-8]
   3596c:	ldr	r2, [r1]
   35970:	ldr	r1, [r1, #4]
   35974:	mvn	r1, r1
   35978:	mvn	r2, r2
   3597c:	subs	r0, r2, r0
   35980:	sbcs	r1, r1, #0
   35984:	str	r0, [sp, #372]	; 0x174
   35988:	str	r1, [sp, #368]	; 0x170
   3598c:	bge	35b38 <__assert_fail@plt+0x243e4>
   35990:	b	35b58 <__assert_fail@plt+0x24404>
   35994:	b	35998 <__assert_fail@plt+0x24244>
   35998:	b	35a1c <__assert_fail@plt+0x242c8>
   3599c:	b	35a1c <__assert_fail@plt+0x242c8>
   359a0:	ldr	r0, [fp, #-12]
   359a4:	cmn	r0, #1
   359a8:	bne	35a1c <__assert_fail@plt+0x242c8>
   359ac:	b	359b0 <__assert_fail@plt+0x2425c>
   359b0:	ldr	r0, [fp, #-8]
   359b4:	ldr	r1, [r0]
   359b8:	ldr	r0, [r0, #4]
   359bc:	rsbs	r1, r1, #0
   359c0:	rscs	r0, r0, #0
   359c4:	str	r1, [sp, #364]	; 0x16c
   359c8:	str	r0, [sp, #360]	; 0x168
   359cc:	blt	35b38 <__assert_fail@plt+0x243e4>
   359d0:	b	35b58 <__assert_fail@plt+0x24404>
   359d4:	ldr	r0, [fp, #-8]
   359d8:	ldr	r1, [r0]
   359dc:	ldr	r0, [r0, #4]
   359e0:	subs	r1, r1, #1
   359e4:	sbcs	r0, r0, #0
   359e8:	str	r1, [sp, #356]	; 0x164
   359ec:	str	r0, [sp, #352]	; 0x160
   359f0:	blt	35b58 <__assert_fail@plt+0x24404>
   359f4:	b	359f8 <__assert_fail@plt+0x242a4>
   359f8:	ldr	r0, [fp, #-8]
   359fc:	ldr	r1, [r0]
   35a00:	ldr	r0, [r0, #4]
   35a04:	subs	r1, r1, #1
   35a08:	sbc	r0, r0, #0
   35a0c:	cmn	r0, #1
   35a10:	str	r1, [sp, #348]	; 0x15c
   35a14:	bgt	35b38 <__assert_fail@plt+0x243e4>
   35a18:	b	35b58 <__assert_fail@plt+0x24404>
   35a1c:	ldr	r0, [fp, #-12]
   35a20:	mov	r1, #0
   35a24:	sdiv	r0, r1, r0
   35a28:	ldr	r1, [fp, #-8]
   35a2c:	ldr	r2, [r1]
   35a30:	ldr	r1, [r1, #4]
   35a34:	subs	r2, r0, r2
   35a38:	rscs	r0, r1, r0, asr #31
   35a3c:	str	r2, [sp, #344]	; 0x158
   35a40:	str	r0, [sp, #340]	; 0x154
   35a44:	blt	35b38 <__assert_fail@plt+0x243e4>
   35a48:	b	35b58 <__assert_fail@plt+0x24404>
   35a4c:	ldr	r0, [fp, #-12]
   35a50:	cmp	r0, #0
   35a54:	bne	35a5c <__assert_fail@plt+0x24308>
   35a58:	b	35b58 <__assert_fail@plt+0x24404>
   35a5c:	ldr	r0, [fp, #-8]
   35a60:	ldr	r0, [r0, #4]
   35a64:	cmn	r0, #1
   35a68:	bgt	35b04 <__assert_fail@plt+0x243b0>
   35a6c:	b	35a70 <__assert_fail@plt+0x2431c>
   35a70:	b	35a74 <__assert_fail@plt+0x24320>
   35a74:	b	35acc <__assert_fail@plt+0x24378>
   35a78:	b	35acc <__assert_fail@plt+0x24378>
   35a7c:	ldr	r0, [fp, #-8]
   35a80:	ldr	r1, [r0]
   35a84:	ldr	r0, [r0, #4]
   35a88:	and	r0, r1, r0
   35a8c:	cmn	r0, #1
   35a90:	bne	35acc <__assert_fail@plt+0x24378>
   35a94:	b	35a98 <__assert_fail@plt+0x24344>
   35a98:	b	35a9c <__assert_fail@plt+0x24348>
   35a9c:	ldr	r0, [fp, #-12]
   35aa0:	add	r0, r0, #0
   35aa4:	movw	r1, #0
   35aa8:	cmp	r1, r0
   35aac:	blt	35b38 <__assert_fail@plt+0x243e4>
   35ab0:	b	35b58 <__assert_fail@plt+0x24404>
   35ab4:	ldr	r0, [fp, #-12]
   35ab8:	sub	r0, r0, #1
   35abc:	mvn	r1, #0
   35ac0:	cmp	r1, r0
   35ac4:	blt	35b38 <__assert_fail@plt+0x243e4>
   35ac8:	b	35b58 <__assert_fail@plt+0x24404>
   35acc:	ldr	r0, [fp, #-8]
   35ad0:	ldr	r2, [r0]
   35ad4:	ldr	r3, [r0, #4]
   35ad8:	mov	r0, #0
   35adc:	str	r0, [sp, #336]	; 0x150
   35ae0:	ldr	r1, [sp, #336]	; 0x150
   35ae4:	bl	3c428 <__assert_fail@plt+0x2acd4>
   35ae8:	ldr	r2, [fp, #-12]
   35aec:	subs	r0, r0, r2
   35af0:	sbcs	r1, r1, r2, asr #31
   35af4:	str	r0, [sp, #332]	; 0x14c
   35af8:	str	r1, [sp, #328]	; 0x148
   35afc:	blt	35b38 <__assert_fail@plt+0x243e4>
   35b00:	b	35b58 <__assert_fail@plt+0x24404>
   35b04:	ldr	r0, [fp, #-12]
   35b08:	mvn	r1, #0
   35b0c:	udiv	r0, r1, r0
   35b10:	ldr	r1, [fp, #-8]
   35b14:	ldr	r2, [r1]
   35b18:	ldr	r1, [r1, #4]
   35b1c:	subs	r0, r0, r2
   35b20:	rscs	r1, r1, #0
   35b24:	str	r0, [sp, #324]	; 0x144
   35b28:	str	r1, [sp, #320]	; 0x140
   35b2c:	bge	35b58 <__assert_fail@plt+0x24404>
   35b30:	b	35b38 <__assert_fail@plt+0x243e4>
   35b34:	andhi	r0, r0, r1
   35b38:	ldr	r0, [fp, #-8]
   35b3c:	ldr	r0, [r0]
   35b40:	ldr	r1, [fp, #-12]
   35b44:	mul	r0, r0, r1
   35b48:	mov	r1, #0
   35b4c:	str	r1, [fp, #-20]	; 0xffffffec
   35b50:	str	r0, [fp, #-24]	; 0xffffffe8
   35b54:	b	3671c <__assert_fail@plt+0x24fc8>
   35b58:	ldr	r0, [fp, #-8]
   35b5c:	ldr	r0, [r0]
   35b60:	ldr	r1, [fp, #-12]
   35b64:	mul	r0, r0, r1
   35b68:	mov	r1, #0
   35b6c:	str	r1, [fp, #-20]	; 0xffffffec
   35b70:	str	r0, [fp, #-24]	; 0xffffffe8
   35b74:	b	36750 <__assert_fail@plt+0x24ffc>
   35b78:	b	360e4 <__assert_fail@plt+0x24990>
   35b7c:	b	35b80 <__assert_fail@plt+0x2442c>
   35b80:	ldr	r0, [fp, #-12]
   35b84:	cmp	r0, #0
   35b88:	bge	35d10 <__assert_fail@plt+0x245bc>
   35b8c:	ldr	r0, [fp, #-8]
   35b90:	ldr	r0, [r0, #4]
   35b94:	cmn	r0, #1
   35b98:	bgt	35c50 <__assert_fail@plt+0x244fc>
   35b9c:	b	35ba0 <__assert_fail@plt+0x2444c>
   35ba0:	b	35ba4 <__assert_fail@plt+0x24450>
   35ba4:	ldr	r0, [fp, #-8]
   35ba8:	ldr	r1, [r0]
   35bac:	ldr	r0, [r0, #4]
   35bb0:	ldr	r2, [fp, #-12]
   35bb4:	mvn	r3, #-2147483648	; 0x80000000
   35bb8:	sdiv	r2, r3, r2
   35bbc:	subs	r1, r1, r2
   35bc0:	sbcs	r0, r0, r2, asr #31
   35bc4:	str	r1, [sp, #316]	; 0x13c
   35bc8:	str	r0, [sp, #312]	; 0x138
   35bcc:	blt	35df4 <__assert_fail@plt+0x246a0>
   35bd0:	b	35e14 <__assert_fail@plt+0x246c0>
   35bd4:	b	35bd8 <__assert_fail@plt+0x24484>
   35bd8:	ldr	r0, [pc, #2968]	; 36778 <__assert_fail@plt+0x25024>
   35bdc:	ldr	r1, [fp, #-12]
   35be0:	cmp	r1, r0
   35be4:	blt	35bfc <__assert_fail@plt+0x244a8>
   35be8:	b	35c08 <__assert_fail@plt+0x244b4>
   35bec:	ldr	r0, [fp, #-12]
   35bf0:	movw	r1, #0
   35bf4:	cmp	r1, r0
   35bf8:	bge	35c08 <__assert_fail@plt+0x244b4>
   35bfc:	movw	r0, #0
   35c00:	str	r0, [sp, #308]	; 0x134
   35c04:	b	35c20 <__assert_fail@plt+0x244cc>
   35c08:	ldr	r0, [pc, #2924]	; 3677c <__assert_fail@plt+0x25028>
   35c0c:	ldr	r1, [fp, #-12]
   35c10:	movw	r2, #0
   35c14:	sub	r1, r2, r1
   35c18:	sdiv	r0, r0, r1
   35c1c:	str	r0, [sp, #308]	; 0x134
   35c20:	ldr	r0, [sp, #308]	; 0x134
   35c24:	ldr	r1, [fp, #-8]
   35c28:	ldr	r2, [r1]
   35c2c:	ldr	r1, [r1, #4]
   35c30:	mvn	r1, r1
   35c34:	mvn	r2, r2
   35c38:	subs	r2, r2, r0
   35c3c:	sbcs	r0, r1, r0, asr #31
   35c40:	str	r2, [sp, #304]	; 0x130
   35c44:	str	r0, [sp, #300]	; 0x12c
   35c48:	bge	35df4 <__assert_fail@plt+0x246a0>
   35c4c:	b	35e14 <__assert_fail@plt+0x246c0>
   35c50:	ldr	r0, [fp, #-12]
   35c54:	cmn	r0, #1
   35c58:	bne	35ce0 <__assert_fail@plt+0x2458c>
   35c5c:	b	35c60 <__assert_fail@plt+0x2450c>
   35c60:	ldr	r0, [fp, #-8]
   35c64:	ldr	r1, [r0]
   35c68:	ldr	r0, [r0, #4]
   35c6c:	adds	r1, r1, #-2147483648	; 0x80000000
   35c70:	sbc	r0, r0, #0
   35c74:	rsbs	r1, r1, #0
   35c78:	rscs	r0, r0, #0
   35c7c:	str	r1, [sp, #296]	; 0x128
   35c80:	str	r0, [sp, #292]	; 0x124
   35c84:	blt	35df4 <__assert_fail@plt+0x246a0>
   35c88:	b	35e14 <__assert_fail@plt+0x246c0>
   35c8c:	ldr	r0, [fp, #-8]
   35c90:	ldr	r1, [r0]
   35c94:	ldr	r0, [r0, #4]
   35c98:	subs	r1, r1, #1
   35c9c:	sbcs	r0, r0, #0
   35ca0:	str	r1, [sp, #288]	; 0x120
   35ca4:	str	r0, [sp, #284]	; 0x11c
   35ca8:	blt	35e14 <__assert_fail@plt+0x246c0>
   35cac:	b	35cb0 <__assert_fail@plt+0x2455c>
   35cb0:	ldr	r0, [fp, #-8]
   35cb4:	ldr	r1, [r0]
   35cb8:	ldr	r0, [r0, #4]
   35cbc:	subs	r1, r1, #1
   35cc0:	sbc	r0, r0, #0
   35cc4:	mvn	r2, #-2147483648	; 0x80000000
   35cc8:	subs	r1, r2, r1
   35ccc:	rscs	r0, r0, #0
   35cd0:	str	r1, [sp, #280]	; 0x118
   35cd4:	str	r0, [sp, #276]	; 0x114
   35cd8:	blt	35df4 <__assert_fail@plt+0x246a0>
   35cdc:	b	35e14 <__assert_fail@plt+0x246c0>
   35ce0:	ldr	r0, [fp, #-12]
   35ce4:	mov	r1, #-2147483648	; 0x80000000
   35ce8:	sdiv	r0, r1, r0
   35cec:	ldr	r1, [fp, #-8]
   35cf0:	ldr	r2, [r1]
   35cf4:	ldr	r1, [r1, #4]
   35cf8:	subs	r2, r0, r2
   35cfc:	rscs	r0, r1, r0, asr #31
   35d00:	str	r2, [sp, #272]	; 0x110
   35d04:	str	r0, [sp, #268]	; 0x10c
   35d08:	blt	35df4 <__assert_fail@plt+0x246a0>
   35d0c:	b	35e14 <__assert_fail@plt+0x246c0>
   35d10:	ldr	r0, [fp, #-12]
   35d14:	cmp	r0, #0
   35d18:	bne	35d20 <__assert_fail@plt+0x245cc>
   35d1c:	b	35e14 <__assert_fail@plt+0x246c0>
   35d20:	ldr	r0, [fp, #-8]
   35d24:	ldr	r0, [r0, #4]
   35d28:	cmn	r0, #1
   35d2c:	bgt	35dc4 <__assert_fail@plt+0x24670>
   35d30:	b	35d34 <__assert_fail@plt+0x245e0>
   35d34:	b	35d38 <__assert_fail@plt+0x245e4>
   35d38:	b	35d90 <__assert_fail@plt+0x2463c>
   35d3c:	b	35d90 <__assert_fail@plt+0x2463c>
   35d40:	ldr	r0, [fp, #-8]
   35d44:	ldr	r1, [r0]
   35d48:	ldr	r0, [r0, #4]
   35d4c:	and	r0, r1, r0
   35d50:	cmn	r0, #1
   35d54:	bne	35d90 <__assert_fail@plt+0x2463c>
   35d58:	b	35d5c <__assert_fail@plt+0x24608>
   35d5c:	b	35d60 <__assert_fail@plt+0x2460c>
   35d60:	ldr	r0, [fp, #-12]
   35d64:	add	r0, r0, #-2147483648	; 0x80000000
   35d68:	movw	r1, #0
   35d6c:	cmp	r1, r0
   35d70:	blt	35df4 <__assert_fail@plt+0x246a0>
   35d74:	b	35e14 <__assert_fail@plt+0x246c0>
   35d78:	ldr	r0, [pc, #2556]	; 3677c <__assert_fail@plt+0x25028>
   35d7c:	ldr	r1, [fp, #-12]
   35d80:	sub	r1, r1, #1
   35d84:	cmp	r0, r1
   35d88:	blt	35df4 <__assert_fail@plt+0x246a0>
   35d8c:	b	35e14 <__assert_fail@plt+0x246c0>
   35d90:	ldr	r0, [fp, #-8]
   35d94:	ldr	r2, [r0]
   35d98:	ldr	r3, [r0, #4]
   35d9c:	mov	r0, #-2147483648	; 0x80000000
   35da0:	mvn	r1, #0
   35da4:	bl	3c428 <__assert_fail@plt+0x2acd4>
   35da8:	ldr	r2, [fp, #-12]
   35dac:	subs	r0, r0, r2
   35db0:	sbcs	r1, r1, r2, asr #31
   35db4:	str	r0, [sp, #264]	; 0x108
   35db8:	str	r1, [sp, #260]	; 0x104
   35dbc:	blt	35df4 <__assert_fail@plt+0x246a0>
   35dc0:	b	35e14 <__assert_fail@plt+0x246c0>
   35dc4:	ldr	r0, [fp, #-12]
   35dc8:	mvn	r1, #-2147483648	; 0x80000000
   35dcc:	sdiv	r0, r1, r0
   35dd0:	ldr	r1, [fp, #-8]
   35dd4:	ldr	r2, [r1]
   35dd8:	ldr	r1, [r1, #4]
   35ddc:	subs	r2, r0, r2
   35de0:	rscs	r0, r1, r0, asr #31
   35de4:	str	r2, [sp, #256]	; 0x100
   35de8:	str	r0, [sp, #252]	; 0xfc
   35dec:	bge	35e14 <__assert_fail@plt+0x246c0>
   35df0:	b	35df4 <__assert_fail@plt+0x246a0>
   35df4:	ldr	r0, [fp, #-8]
   35df8:	ldr	r0, [r0]
   35dfc:	ldr	r1, [fp, #-12]
   35e00:	mul	r0, r0, r1
   35e04:	asr	r1, r0, #31
   35e08:	str	r0, [fp, #-24]	; 0xffffffe8
   35e0c:	str	r1, [fp, #-20]	; 0xffffffec
   35e10:	b	3671c <__assert_fail@plt+0x24fc8>
   35e14:	ldr	r0, [fp, #-8]
   35e18:	ldr	r0, [r0]
   35e1c:	ldr	r1, [fp, #-12]
   35e20:	mul	r0, r0, r1
   35e24:	asr	r1, r0, #31
   35e28:	str	r0, [fp, #-24]	; 0xffffffe8
   35e2c:	str	r1, [fp, #-20]	; 0xffffffec
   35e30:	b	36750 <__assert_fail@plt+0x24ffc>
   35e34:	ldr	r0, [fp, #-12]
   35e38:	cmp	r0, #0
   35e3c:	bge	35fbc <__assert_fail@plt+0x24868>
   35e40:	ldr	r0, [fp, #-8]
   35e44:	ldr	r0, [r0, #4]
   35e48:	cmn	r0, #1
   35e4c:	bgt	35f04 <__assert_fail@plt+0x247b0>
   35e50:	b	35e54 <__assert_fail@plt+0x24700>
   35e54:	b	35e88 <__assert_fail@plt+0x24734>
   35e58:	ldr	r0, [fp, #-8]
   35e5c:	ldr	r1, [r0]
   35e60:	ldr	r0, [r0, #4]
   35e64:	ldr	r2, [fp, #-12]
   35e68:	mvn	r3, #0
   35e6c:	udiv	r2, r3, r2
   35e70:	subs	r1, r1, r2
   35e74:	sbcs	r0, r0, #0
   35e78:	str	r1, [sp, #248]	; 0xf8
   35e7c:	str	r0, [sp, #244]	; 0xf4
   35e80:	blt	360a4 <__assert_fail@plt+0x24950>
   35e84:	b	360c4 <__assert_fail@plt+0x24970>
   35e88:	b	35e8c <__assert_fail@plt+0x24738>
   35e8c:	ldr	r0, [pc, #2276]	; 36778 <__assert_fail@plt+0x25024>
   35e90:	ldr	r1, [fp, #-12]
   35e94:	cmp	r1, r0
   35e98:	blt	35eb0 <__assert_fail@plt+0x2475c>
   35e9c:	b	35ebc <__assert_fail@plt+0x24768>
   35ea0:	ldr	r0, [fp, #-12]
   35ea4:	movw	r1, #0
   35ea8:	cmp	r1, r0
   35eac:	bge	35ebc <__assert_fail@plt+0x24768>
   35eb0:	movw	r0, #1
   35eb4:	str	r0, [sp, #240]	; 0xf0
   35eb8:	b	35ed4 <__assert_fail@plt+0x24780>
   35ebc:	ldr	r0, [fp, #-12]
   35ec0:	movw	r1, #0
   35ec4:	sub	r0, r1, r0
   35ec8:	mvn	r1, #0
   35ecc:	udiv	r0, r1, r0
   35ed0:	str	r0, [sp, #240]	; 0xf0
   35ed4:	ldr	r0, [sp, #240]	; 0xf0
   35ed8:	ldr	r1, [fp, #-8]
   35edc:	ldr	r2, [r1]
   35ee0:	ldr	r1, [r1, #4]
   35ee4:	mvn	r1, r1
   35ee8:	mvn	r2, r2
   35eec:	subs	r0, r2, r0
   35ef0:	sbcs	r1, r1, #0
   35ef4:	str	r0, [sp, #236]	; 0xec
   35ef8:	str	r1, [sp, #232]	; 0xe8
   35efc:	bge	360a4 <__assert_fail@plt+0x24950>
   35f00:	b	360c4 <__assert_fail@plt+0x24970>
   35f04:	b	35f08 <__assert_fail@plt+0x247b4>
   35f08:	b	35f8c <__assert_fail@plt+0x24838>
   35f0c:	b	35f8c <__assert_fail@plt+0x24838>
   35f10:	ldr	r0, [fp, #-12]
   35f14:	cmn	r0, #1
   35f18:	bne	35f8c <__assert_fail@plt+0x24838>
   35f1c:	b	35f20 <__assert_fail@plt+0x247cc>
   35f20:	ldr	r0, [fp, #-8]
   35f24:	ldr	r1, [r0]
   35f28:	ldr	r0, [r0, #4]
   35f2c:	rsbs	r1, r1, #0
   35f30:	rscs	r0, r0, #0
   35f34:	str	r1, [sp, #228]	; 0xe4
   35f38:	str	r0, [sp, #224]	; 0xe0
   35f3c:	blt	360a4 <__assert_fail@plt+0x24950>
   35f40:	b	360c4 <__assert_fail@plt+0x24970>
   35f44:	ldr	r0, [fp, #-8]
   35f48:	ldr	r1, [r0]
   35f4c:	ldr	r0, [r0, #4]
   35f50:	subs	r1, r1, #1
   35f54:	sbcs	r0, r0, #0
   35f58:	str	r1, [sp, #220]	; 0xdc
   35f5c:	str	r0, [sp, #216]	; 0xd8
   35f60:	blt	360c4 <__assert_fail@plt+0x24970>
   35f64:	b	35f68 <__assert_fail@plt+0x24814>
   35f68:	ldr	r0, [fp, #-8]
   35f6c:	ldr	r1, [r0]
   35f70:	ldr	r0, [r0, #4]
   35f74:	subs	r1, r1, #1
   35f78:	sbc	r0, r0, #0
   35f7c:	cmn	r0, #1
   35f80:	str	r1, [sp, #212]	; 0xd4
   35f84:	bgt	360a4 <__assert_fail@plt+0x24950>
   35f88:	b	360c4 <__assert_fail@plt+0x24970>
   35f8c:	ldr	r0, [fp, #-12]
   35f90:	mov	r1, #0
   35f94:	sdiv	r0, r1, r0
   35f98:	ldr	r1, [fp, #-8]
   35f9c:	ldr	r2, [r1]
   35fa0:	ldr	r1, [r1, #4]
   35fa4:	subs	r2, r0, r2
   35fa8:	rscs	r0, r1, r0, asr #31
   35fac:	str	r2, [sp, #208]	; 0xd0
   35fb0:	str	r0, [sp, #204]	; 0xcc
   35fb4:	blt	360a4 <__assert_fail@plt+0x24950>
   35fb8:	b	360c4 <__assert_fail@plt+0x24970>
   35fbc:	ldr	r0, [fp, #-12]
   35fc0:	cmp	r0, #0
   35fc4:	bne	35fcc <__assert_fail@plt+0x24878>
   35fc8:	b	360c4 <__assert_fail@plt+0x24970>
   35fcc:	ldr	r0, [fp, #-8]
   35fd0:	ldr	r0, [r0, #4]
   35fd4:	cmn	r0, #1
   35fd8:	bgt	36074 <__assert_fail@plt+0x24920>
   35fdc:	b	35fe0 <__assert_fail@plt+0x2488c>
   35fe0:	b	35fe4 <__assert_fail@plt+0x24890>
   35fe4:	b	3603c <__assert_fail@plt+0x248e8>
   35fe8:	b	3603c <__assert_fail@plt+0x248e8>
   35fec:	ldr	r0, [fp, #-8]
   35ff0:	ldr	r1, [r0]
   35ff4:	ldr	r0, [r0, #4]
   35ff8:	and	r0, r1, r0
   35ffc:	cmn	r0, #1
   36000:	bne	3603c <__assert_fail@plt+0x248e8>
   36004:	b	36008 <__assert_fail@plt+0x248b4>
   36008:	b	3600c <__assert_fail@plt+0x248b8>
   3600c:	ldr	r0, [fp, #-12]
   36010:	add	r0, r0, #0
   36014:	movw	r1, #0
   36018:	cmp	r1, r0
   3601c:	blt	360a4 <__assert_fail@plt+0x24950>
   36020:	b	360c4 <__assert_fail@plt+0x24970>
   36024:	ldr	r0, [fp, #-12]
   36028:	sub	r0, r0, #1
   3602c:	mvn	r1, #0
   36030:	cmp	r1, r0
   36034:	blt	360a4 <__assert_fail@plt+0x24950>
   36038:	b	360c4 <__assert_fail@plt+0x24970>
   3603c:	ldr	r0, [fp, #-8]
   36040:	ldr	r2, [r0]
   36044:	ldr	r3, [r0, #4]
   36048:	mov	r0, #0
   3604c:	str	r0, [sp, #200]	; 0xc8
   36050:	ldr	r1, [sp, #200]	; 0xc8
   36054:	bl	3c428 <__assert_fail@plt+0x2acd4>
   36058:	ldr	r2, [fp, #-12]
   3605c:	subs	r0, r0, r2
   36060:	sbcs	r1, r1, r2, asr #31
   36064:	str	r0, [sp, #196]	; 0xc4
   36068:	str	r1, [sp, #192]	; 0xc0
   3606c:	blt	360a4 <__assert_fail@plt+0x24950>
   36070:	b	360c4 <__assert_fail@plt+0x24970>
   36074:	ldr	r0, [fp, #-12]
   36078:	mvn	r1, #0
   3607c:	udiv	r0, r1, r0
   36080:	ldr	r1, [fp, #-8]
   36084:	ldr	r2, [r1]
   36088:	ldr	r1, [r1, #4]
   3608c:	subs	r0, r0, r2
   36090:	rscs	r1, r1, #0
   36094:	str	r0, [sp, #188]	; 0xbc
   36098:	str	r1, [sp, #184]	; 0xb8
   3609c:	bge	360c4 <__assert_fail@plt+0x24970>
   360a0:	b	360a4 <__assert_fail@plt+0x24950>
   360a4:	ldr	r0, [fp, #-8]
   360a8:	ldr	r0, [r0]
   360ac:	ldr	r1, [fp, #-12]
   360b0:	mul	r0, r0, r1
   360b4:	mov	r1, #0
   360b8:	str	r1, [fp, #-20]	; 0xffffffec
   360bc:	str	r0, [fp, #-24]	; 0xffffffe8
   360c0:	b	3671c <__assert_fail@plt+0x24fc8>
   360c4:	ldr	r0, [fp, #-8]
   360c8:	ldr	r0, [r0]
   360cc:	ldr	r1, [fp, #-12]
   360d0:	mul	r0, r0, r1
   360d4:	mov	r1, #0
   360d8:	str	r1, [fp, #-20]	; 0xffffffec
   360dc:	str	r0, [fp, #-24]	; 0xffffffe8
   360e0:	b	36750 <__assert_fail@plt+0x24ffc>
   360e4:	b	360e8 <__assert_fail@plt+0x24994>
   360e8:	ldr	r0, [fp, #-12]
   360ec:	cmp	r0, #0
   360f0:	bge	362b8 <__assert_fail@plt+0x24b64>
   360f4:	ldr	r0, [fp, #-8]
   360f8:	ldr	r0, [r0, #4]
   360fc:	cmn	r0, #1
   36100:	bgt	36200 <__assert_fail@plt+0x24aac>
   36104:	b	36108 <__assert_fail@plt+0x249b4>
   36108:	b	3610c <__assert_fail@plt+0x249b8>
   3610c:	ldr	r0, [fp, #-8]
   36110:	ldr	r1, [r0]
   36114:	ldr	r0, [r0, #4]
   36118:	ldr	r2, [fp, #-12]
   3611c:	asr	r3, r2, #31
   36120:	mvn	ip, #0
   36124:	mvn	lr, #-2147483648	; 0x80000000
   36128:	str	r0, [sp, #180]	; 0xb4
   3612c:	mov	r0, ip
   36130:	str	r1, [sp, #176]	; 0xb0
   36134:	mov	r1, lr
   36138:	bl	3c428 <__assert_fail@plt+0x2acd4>
   3613c:	ldr	r2, [sp, #176]	; 0xb0
   36140:	subs	r0, r2, r0
   36144:	ldr	r2, [sp, #180]	; 0xb4
   36148:	sbcs	r1, r2, r1
   3614c:	str	r0, [sp, #172]	; 0xac
   36150:	str	r1, [sp, #168]	; 0xa8
   36154:	blt	363ac <__assert_fail@plt+0x24c58>
   36158:	b	363d8 <__assert_fail@plt+0x24c84>
   3615c:	b	36160 <__assert_fail@plt+0x24a0c>
   36160:	ldr	r0, [pc, #1552]	; 36778 <__assert_fail@plt+0x25024>
   36164:	ldr	r1, [fp, #-12]
   36168:	cmp	r1, r0
   3616c:	blt	36184 <__assert_fail@plt+0x24a30>
   36170:	b	36198 <__assert_fail@plt+0x24a44>
   36174:	ldr	r0, [fp, #-12]
   36178:	movw	r1, #0
   3617c:	cmp	r1, r0
   36180:	bge	36198 <__assert_fail@plt+0x24a44>
   36184:	mov	r0, #0
   36188:	mvn	r1, #0
   3618c:	str	r1, [sp, #164]	; 0xa4
   36190:	str	r0, [sp, #160]	; 0xa0
   36194:	b	361cc <__assert_fail@plt+0x24a78>
   36198:	ldr	r0, [fp, #-12]
   3619c:	rsb	r0, r0, #0
   361a0:	asr	r3, r0, #31
   361a4:	mvn	r1, #0
   361a8:	mvn	r2, #-2147483648	; 0x80000000
   361ac:	str	r0, [sp, #156]	; 0x9c
   361b0:	mov	r0, r1
   361b4:	mov	r1, r2
   361b8:	ldr	r2, [sp, #156]	; 0x9c
   361bc:	bl	3c428 <__assert_fail@plt+0x2acd4>
   361c0:	str	r0, [sp, #164]	; 0xa4
   361c4:	str	r1, [sp, #160]	; 0xa0
   361c8:	b	361cc <__assert_fail@plt+0x24a78>
   361cc:	ldr	r0, [sp, #160]	; 0xa0
   361d0:	ldr	r1, [sp, #164]	; 0xa4
   361d4:	ldr	r2, [fp, #-8]
   361d8:	ldr	r3, [r2]
   361dc:	ldr	r2, [r2, #4]
   361e0:	mvn	r2, r2
   361e4:	mvn	r3, r3
   361e8:	subs	r1, r3, r1
   361ec:	sbcs	r0, r2, r0
   361f0:	str	r1, [sp, #152]	; 0x98
   361f4:	str	r0, [sp, #148]	; 0x94
   361f8:	bge	363ac <__assert_fail@plt+0x24c58>
   361fc:	b	363d8 <__assert_fail@plt+0x24c84>
   36200:	ldr	r0, [fp, #-12]
   36204:	cmn	r0, #1
   36208:	bne	36270 <__assert_fail@plt+0x24b1c>
   3620c:	b	36210 <__assert_fail@plt+0x24abc>
   36210:	ldr	r0, [fp, #-8]
   36214:	ldr	r1, [r0]
   36218:	ldr	r0, [r0, #4]
   3621c:	add	r0, r0, #-2147483648	; 0x80000000
   36220:	rsbs	r1, r1, #0
   36224:	rscs	r0, r0, #0
   36228:	str	r1, [sp, #144]	; 0x90
   3622c:	str	r0, [sp, #140]	; 0x8c
   36230:	blt	363ac <__assert_fail@plt+0x24c58>
   36234:	b	363d8 <__assert_fail@plt+0x24c84>
   36238:	ldr	r0, [fp, #-8]
   3623c:	ldr	r1, [r0]
   36240:	ldr	r0, [r0, #4]
   36244:	subs	r1, r1, #1
   36248:	sbcs	r0, r0, #0
   3624c:	str	r1, [sp, #136]	; 0x88
   36250:	str	r0, [sp, #132]	; 0x84
   36254:	blt	363d8 <__assert_fail@plt+0x24c84>
   36258:	b	3625c <__assert_fail@plt+0x24b08>
   3625c:	mov	r0, #0
   36260:	cmp	r0, #0
   36264:	bne	363ac <__assert_fail@plt+0x24c58>
   36268:	b	363d8 <__assert_fail@plt+0x24c84>
   3626c:			; <UNDEFINED> instruction: 0xffff8000
   36270:	ldr	r0, [fp, #-12]
   36274:	asr	r3, r0, #31
   36278:	mov	r1, #0
   3627c:	mov	r2, #-2147483648	; 0x80000000
   36280:	str	r0, [sp, #128]	; 0x80
   36284:	mov	r0, r1
   36288:	mov	r1, r2
   3628c:	ldr	r2, [sp, #128]	; 0x80
   36290:	bl	3c428 <__assert_fail@plt+0x2acd4>
   36294:	ldr	r2, [fp, #-8]
   36298:	ldr	r3, [r2]
   3629c:	ldr	r2, [r2, #4]
   362a0:	subs	r0, r0, r3
   362a4:	sbcs	r1, r1, r2
   362a8:	str	r0, [sp, #124]	; 0x7c
   362ac:	str	r1, [sp, #120]	; 0x78
   362b0:	blt	363ac <__assert_fail@plt+0x24c58>
   362b4:	b	363d8 <__assert_fail@plt+0x24c84>
   362b8:	ldr	r0, [fp, #-12]
   362bc:	cmp	r0, #0
   362c0:	bne	362c8 <__assert_fail@plt+0x24b74>
   362c4:	b	363d8 <__assert_fail@plt+0x24c84>
   362c8:	ldr	r0, [fp, #-8]
   362cc:	ldr	r0, [r0, #4]
   362d0:	cmn	r0, #1
   362d4:	bgt	36364 <__assert_fail@plt+0x24c10>
   362d8:	b	362dc <__assert_fail@plt+0x24b88>
   362dc:	ldr	r0, [fp, #-8]
   362e0:	ldr	r1, [r0]
   362e4:	ldr	r0, [r0, #4]
   362e8:	and	r0, r1, r0
   362ec:	cmn	r0, #1
   362f0:	bne	36330 <__assert_fail@plt+0x24bdc>
   362f4:	b	362f8 <__assert_fail@plt+0x24ba4>
   362f8:	b	362fc <__assert_fail@plt+0x24ba8>
   362fc:	ldr	r0, [fp, #-12]
   36300:	mov	r1, #-2147483648	; 0x80000000
   36304:	add	r1, r1, r0, asr #31
   36308:	rsbs	r0, r0, #0
   3630c:	rscs	r1, r1, #0
   36310:	str	r0, [sp, #116]	; 0x74
   36314:	str	r1, [sp, #112]	; 0x70
   36318:	blt	363ac <__assert_fail@plt+0x24c58>
   3631c:	b	363d8 <__assert_fail@plt+0x24c84>
   36320:	mov	r0, #0
   36324:	cmp	r0, #0
   36328:	bne	363ac <__assert_fail@plt+0x24c58>
   3632c:	b	363d8 <__assert_fail@plt+0x24c84>
   36330:	ldr	r0, [fp, #-8]
   36334:	ldr	r2, [r0]
   36338:	ldr	r3, [r0, #4]
   3633c:	mov	r0, #0
   36340:	mov	r1, #-2147483648	; 0x80000000
   36344:	bl	3c428 <__assert_fail@plt+0x2acd4>
   36348:	ldr	r2, [fp, #-12]
   3634c:	subs	r0, r0, r2
   36350:	sbcs	r1, r1, r2, asr #31
   36354:	str	r0, [sp, #108]	; 0x6c
   36358:	str	r1, [sp, #104]	; 0x68
   3635c:	blt	363ac <__assert_fail@plt+0x24c58>
   36360:	b	363d8 <__assert_fail@plt+0x24c84>
   36364:	ldr	r0, [fp, #-12]
   36368:	asr	r3, r0, #31
   3636c:	mvn	r1, #0
   36370:	mvn	r2, #-2147483648	; 0x80000000
   36374:	str	r0, [sp, #100]	; 0x64
   36378:	mov	r0, r1
   3637c:	mov	r1, r2
   36380:	ldr	r2, [sp, #100]	; 0x64
   36384:	bl	3c428 <__assert_fail@plt+0x2acd4>
   36388:	ldr	r2, [fp, #-8]
   3638c:	ldr	r3, [r2]
   36390:	ldr	r2, [r2, #4]
   36394:	subs	r0, r0, r3
   36398:	sbcs	r1, r1, r2
   3639c:	str	r0, [sp, #96]	; 0x60
   363a0:	str	r1, [sp, #92]	; 0x5c
   363a4:	bge	363d8 <__assert_fail@plt+0x24c84>
   363a8:	b	363ac <__assert_fail@plt+0x24c58>
   363ac:	ldr	r0, [fp, #-8]
   363b0:	ldr	r1, [r0]
   363b4:	ldr	r0, [r0, #4]
   363b8:	ldr	r2, [fp, #-12]
   363bc:	asr	r3, r2, #31
   363c0:	umull	ip, lr, r1, r2
   363c4:	mla	r1, r1, r3, lr
   363c8:	mla	r0, r0, r2, r1
   363cc:	str	ip, [fp, #-24]	; 0xffffffe8
   363d0:	str	r0, [fp, #-20]	; 0xffffffec
   363d4:	b	3671c <__assert_fail@plt+0x24fc8>
   363d8:	ldr	r0, [fp, #-8]
   363dc:	ldr	r1, [r0]
   363e0:	ldr	r0, [r0, #4]
   363e4:	ldr	r2, [fp, #-12]
   363e8:	asr	r3, r2, #31
   363ec:	umull	ip, lr, r1, r2
   363f0:	mla	r1, r1, r3, lr
   363f4:	mla	r0, r0, r2, r1
   363f8:	str	ip, [fp, #-24]	; 0xffffffe8
   363fc:	str	r0, [fp, #-20]	; 0xffffffec
   36400:	b	36750 <__assert_fail@plt+0x24ffc>
   36404:	ldr	r0, [fp, #-12]
   36408:	cmp	r0, #0
   3640c:	bge	365c8 <__assert_fail@plt+0x24e74>
   36410:	ldr	r0, [fp, #-8]
   36414:	ldr	r0, [r0, #4]
   36418:	cmn	r0, #1
   3641c:	bgt	36510 <__assert_fail@plt+0x24dbc>
   36420:	b	36424 <__assert_fail@plt+0x24cd0>
   36424:	b	36474 <__assert_fail@plt+0x24d20>
   36428:	ldr	r0, [fp, #-8]
   3642c:	ldr	r1, [r0]
   36430:	ldr	r0, [r0, #4]
   36434:	ldr	r2, [fp, #-12]
   36438:	asr	r3, r2, #31
   3643c:	mvn	ip, #0
   36440:	str	r0, [sp, #88]	; 0x58
   36444:	mov	r0, ip
   36448:	str	r1, [sp, #84]	; 0x54
   3644c:	mov	r1, ip
   36450:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   36454:	ldr	r2, [sp, #84]	; 0x54
   36458:	subs	r0, r2, r0
   3645c:	ldr	r2, [sp, #88]	; 0x58
   36460:	sbcs	r1, r2, r1
   36464:	str	r0, [sp, #80]	; 0x50
   36468:	str	r1, [sp, #76]	; 0x4c
   3646c:	bcc	366c4 <__assert_fail@plt+0x24f70>
   36470:	b	366f0 <__assert_fail@plt+0x24f9c>
   36474:	b	36478 <__assert_fail@plt+0x24d24>
   36478:	ldr	r0, [pc, #760]	; 36778 <__assert_fail@plt+0x25024>
   3647c:	ldr	r1, [fp, #-12]
   36480:	cmp	r1, r0
   36484:	blt	3649c <__assert_fail@plt+0x24d48>
   36488:	b	364b0 <__assert_fail@plt+0x24d5c>
   3648c:	ldr	r0, [fp, #-12]
   36490:	movw	r1, #0
   36494:	cmp	r1, r0
   36498:	bge	364b0 <__assert_fail@plt+0x24d5c>
   3649c:	mov	r0, #1
   364a0:	mvn	r1, #0
   364a4:	str	r1, [sp, #72]	; 0x48
   364a8:	str	r0, [sp, #68]	; 0x44
   364ac:	b	364dc <__assert_fail@plt+0x24d88>
   364b0:	ldr	r0, [fp, #-12]
   364b4:	rsb	r0, r0, #0
   364b8:	asr	r3, r0, #31
   364bc:	mvn	r1, #0
   364c0:	str	r0, [sp, #64]	; 0x40
   364c4:	mov	r0, r1
   364c8:	ldr	r2, [sp, #64]	; 0x40
   364cc:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   364d0:	str	r0, [sp, #72]	; 0x48
   364d4:	str	r1, [sp, #68]	; 0x44
   364d8:	b	364dc <__assert_fail@plt+0x24d88>
   364dc:	ldr	r0, [sp, #68]	; 0x44
   364e0:	ldr	r1, [sp, #72]	; 0x48
   364e4:	ldr	r2, [fp, #-8]
   364e8:	ldr	r3, [r2]
   364ec:	ldr	r2, [r2, #4]
   364f0:	mvn	r2, r2
   364f4:	mvn	r3, r3
   364f8:	subs	r1, r3, r1
   364fc:	sbcs	r0, r2, r0
   36500:	str	r1, [sp, #60]	; 0x3c
   36504:	str	r0, [sp, #56]	; 0x38
   36508:	bcs	366c4 <__assert_fail@plt+0x24f70>
   3650c:	b	366f0 <__assert_fail@plt+0x24f9c>
   36510:	b	36514 <__assert_fail@plt+0x24dc0>
   36514:	b	36598 <__assert_fail@plt+0x24e44>
   36518:	b	36598 <__assert_fail@plt+0x24e44>
   3651c:	ldr	r0, [fp, #-12]
   36520:	cmn	r0, #1
   36524:	bne	36598 <__assert_fail@plt+0x24e44>
   36528:	b	3652c <__assert_fail@plt+0x24dd8>
   3652c:	ldr	r0, [fp, #-8]
   36530:	ldr	r1, [r0]
   36534:	ldr	r0, [r0, #4]
   36538:	rsbs	r1, r1, #0
   3653c:	rscs	r0, r0, #0
   36540:	str	r1, [sp, #52]	; 0x34
   36544:	str	r0, [sp, #48]	; 0x30
   36548:	blt	366c4 <__assert_fail@plt+0x24f70>
   3654c:	b	366f0 <__assert_fail@plt+0x24f9c>
   36550:	ldr	r0, [fp, #-8]
   36554:	ldr	r1, [r0]
   36558:	ldr	r0, [r0, #4]
   3655c:	subs	r1, r1, #1
   36560:	sbcs	r0, r0, #0
   36564:	str	r1, [sp, #44]	; 0x2c
   36568:	str	r0, [sp, #40]	; 0x28
   3656c:	blt	366f0 <__assert_fail@plt+0x24f9c>
   36570:	b	36574 <__assert_fail@plt+0x24e20>
   36574:	ldr	r0, [fp, #-8]
   36578:	ldr	r1, [r0]
   3657c:	ldr	r0, [r0, #4]
   36580:	subs	r1, r1, #1
   36584:	sbc	r0, r0, #0
   36588:	cmn	r0, #1
   3658c:	str	r1, [sp, #36]	; 0x24
   36590:	bgt	366c4 <__assert_fail@plt+0x24f70>
   36594:	b	366f0 <__assert_fail@plt+0x24f9c>
   36598:	ldr	r0, [fp, #-12]
   3659c:	mov	r1, #0
   365a0:	sdiv	r0, r1, r0
   365a4:	ldr	r1, [fp, #-8]
   365a8:	ldr	r2, [r1]
   365ac:	ldr	r1, [r1, #4]
   365b0:	subs	r2, r0, r2
   365b4:	rscs	r0, r1, r0, asr #31
   365b8:	str	r2, [sp, #32]
   365bc:	str	r0, [sp, #28]
   365c0:	blt	366c4 <__assert_fail@plt+0x24f70>
   365c4:	b	366f0 <__assert_fail@plt+0x24f9c>
   365c8:	ldr	r0, [fp, #-12]
   365cc:	cmp	r0, #0
   365d0:	bne	365d8 <__assert_fail@plt+0x24e84>
   365d4:	b	366f0 <__assert_fail@plt+0x24f9c>
   365d8:	ldr	r0, [fp, #-8]
   365dc:	ldr	r0, [r0, #4]
   365e0:	cmn	r0, #1
   365e4:	bgt	36684 <__assert_fail@plt+0x24f30>
   365e8:	b	365ec <__assert_fail@plt+0x24e98>
   365ec:	b	365f0 <__assert_fail@plt+0x24e9c>
   365f0:	b	36648 <__assert_fail@plt+0x24ef4>
   365f4:	b	36648 <__assert_fail@plt+0x24ef4>
   365f8:	ldr	r0, [fp, #-8]
   365fc:	ldr	r1, [r0]
   36600:	ldr	r0, [r0, #4]
   36604:	and	r0, r1, r0
   36608:	cmn	r0, #1
   3660c:	bne	36648 <__assert_fail@plt+0x24ef4>
   36610:	b	36614 <__assert_fail@plt+0x24ec0>
   36614:	b	36618 <__assert_fail@plt+0x24ec4>
   36618:	ldr	r0, [fp, #-12]
   3661c:	add	r0, r0, #0
   36620:	movw	r1, #0
   36624:	cmp	r1, r0
   36628:	blt	366c4 <__assert_fail@plt+0x24f70>
   3662c:	b	366f0 <__assert_fail@plt+0x24f9c>
   36630:	ldr	r0, [fp, #-12]
   36634:	sub	r0, r0, #1
   36638:	mvn	r1, #0
   3663c:	cmp	r1, r0
   36640:	blt	366c4 <__assert_fail@plt+0x24f70>
   36644:	b	366f0 <__assert_fail@plt+0x24f9c>
   36648:	ldr	r0, [fp, #-8]
   3664c:	ldr	r2, [r0]
   36650:	ldr	r3, [r0, #4]
   36654:	mov	r0, #0
   36658:	str	r0, [sp, #24]
   3665c:	ldr	r1, [sp, #24]
   36660:	bl	3c428 <__assert_fail@plt+0x2acd4>
   36664:	ldr	r2, [fp, #-12]
   36668:	subs	r0, r0, r2
   3666c:	sbcs	r1, r1, r2, asr #31
   36670:	str	r0, [sp, #20]
   36674:	str	r1, [sp, #16]
   36678:	blt	366c4 <__assert_fail@plt+0x24f70>
   3667c:	b	366f0 <__assert_fail@plt+0x24f9c>
   36680:	svcvc	0x00ffffff
   36684:	ldr	r0, [fp, #-12]
   36688:	asr	r3, r0, #31
   3668c:	mvn	r1, #0
   36690:	str	r0, [sp, #12]
   36694:	mov	r0, r1
   36698:	ldr	r2, [sp, #12]
   3669c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   366a0:	ldr	r2, [fp, #-8]
   366a4:	ldr	r3, [r2]
   366a8:	ldr	r2, [r2, #4]
   366ac:	subs	r0, r0, r3
   366b0:	sbcs	r1, r1, r2
   366b4:	str	r0, [sp, #8]
   366b8:	str	r1, [sp, #4]
   366bc:	bcs	366f0 <__assert_fail@plt+0x24f9c>
   366c0:	b	366c4 <__assert_fail@plt+0x24f70>
   366c4:	ldr	r0, [fp, #-8]
   366c8:	ldr	r1, [r0]
   366cc:	ldr	r0, [r0, #4]
   366d0:	ldr	r2, [fp, #-12]
   366d4:	asr	r3, r2, #31
   366d8:	umull	ip, lr, r1, r2
   366dc:	mla	r1, r1, r3, lr
   366e0:	mla	r0, r0, r2, r1
   366e4:	str	ip, [fp, #-24]	; 0xffffffe8
   366e8:	str	r0, [fp, #-20]	; 0xffffffec
   366ec:	b	3671c <__assert_fail@plt+0x24fc8>
   366f0:	ldr	r0, [fp, #-8]
   366f4:	ldr	r1, [r0]
   366f8:	ldr	r0, [r0, #4]
   366fc:	ldr	r2, [fp, #-12]
   36700:	asr	r3, r2, #31
   36704:	umull	ip, lr, r1, r2
   36708:	mla	r1, r1, r3, lr
   3670c:	mla	r0, r0, r2, r1
   36710:	str	ip, [fp, #-24]	; 0xffffffe8
   36714:	str	r0, [fp, #-20]	; 0xffffffec
   36718:	b	36750 <__assert_fail@plt+0x24ffc>
   3671c:	ldr	r0, [fp, #-8]
   36720:	ldr	r1, [r0, #4]
   36724:	mvn	r2, #0
   36728:	cmp	r1, #0
   3672c:	movwlt	r2, #0
   36730:	mvn	r3, #-2147483648	; 0x80000000
   36734:	cmp	r1, #0
   36738:	movlt	r3, #-2147483648	; 0x80000000
   3673c:	str	r3, [r0, #4]
   36740:	str	r2, [r0]
   36744:	movw	r0, #1
   36748:	str	r0, [fp, #-4]
   3674c:	b	3676c <__assert_fail@plt+0x25018>
   36750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36754:	ldr	r1, [fp, #-20]	; 0xffffffec
   36758:	ldr	r2, [fp, #-8]
   3675c:	str	r1, [r2, #4]
   36760:	str	r0, [r2]
   36764:	movw	r0, #0
   36768:	str	r0, [fp, #-4]
   3676c:	ldr	r0, [fp, #-4]
   36770:	mov	sp, fp
   36774:	pop	{fp, pc}
   36778:	andhi	r0, r0, r1
   3677c:	svcvc	0x00ffffff
   36780:	push	{fp, lr}
   36784:	mov	fp, sp
   36788:	sub	sp, sp, #16
   3678c:	str	r0, [fp, #-4]
   36790:	str	r1, [sp, #8]
   36794:	str	r2, [sp, #4]
   36798:	movw	r0, #0
   3679c:	str	r0, [sp]
   367a0:	ldr	r0, [sp, #4]
   367a4:	mvn	r1, #0
   367a8:	add	r1, r0, r1
   367ac:	str	r1, [sp, #4]
   367b0:	cmp	r0, #0
   367b4:	beq	367d4 <__assert_fail@plt+0x25080>
   367b8:	ldr	r0, [fp, #-4]
   367bc:	ldr	r1, [sp, #8]
   367c0:	bl	34ad8 <__assert_fail@plt+0x23384>
   367c4:	ldr	r1, [sp]
   367c8:	orr	r0, r1, r0
   367cc:	str	r0, [sp]
   367d0:	b	367a0 <__assert_fail@plt+0x2504c>
   367d4:	ldr	r0, [sp]
   367d8:	mov	sp, fp
   367dc:	pop	{fp, pc}
   367e0:	push	{fp, lr}
   367e4:	mov	fp, sp
   367e8:	sub	sp, sp, #88	; 0x58
   367ec:	ldr	ip, [fp, #8]
   367f0:	str	r0, [fp, #-8]
   367f4:	str	r1, [fp, #-12]
   367f8:	str	r2, [fp, #-16]
   367fc:	str	r3, [fp, #-20]	; 0xffffffec
   36800:	movw	r0, #0
   36804:	str	r0, [sp, #44]	; 0x2c
   36808:	ldr	r1, [fp, #-16]
   3680c:	cmp	r0, r1
   36810:	str	ip, [sp, #20]
   36814:	bgt	36828 <__assert_fail@plt+0x250d4>
   36818:	ldr	r0, [fp, #-16]
   3681c:	cmp	r0, #36	; 0x24
   36820:	bgt	36828 <__assert_fail@plt+0x250d4>
   36824:	b	36848 <__assert_fail@plt+0x250f4>
   36828:	movw	r0, #55619	; 0xd943
   3682c:	movt	r0, #3
   36830:	movw	r1, #55657	; 0xd969
   36834:	movt	r1, #3
   36838:	movw	r2, #85	; 0x55
   3683c:	movw	r3, #55751	; 0xd9c7
   36840:	movt	r3, #3
   36844:	bl	11754 <__assert_fail@plt>
   36848:	ldr	r0, [fp, #-12]
   3684c:	movw	r1, #0
   36850:	cmp	r0, r1
   36854:	beq	36864 <__assert_fail@plt+0x25110>
   36858:	ldr	r0, [fp, #-12]
   3685c:	str	r0, [sp, #16]
   36860:	b	36870 <__assert_fail@plt+0x2511c>
   36864:	sub	r0, fp, #24
   36868:	str	r0, [sp, #16]
   3686c:	b	36870 <__assert_fail@plt+0x2511c>
   36870:	ldr	r0, [sp, #16]
   36874:	str	r0, [fp, #-28]	; 0xffffffe4
   36878:	bl	11628 <__errno_location@plt>
   3687c:	movw	lr, #0
   36880:	str	lr, [r0]
   36884:	ldr	r0, [fp, #-8]
   36888:	str	r0, [sp, #40]	; 0x28
   3688c:	ldr	r0, [sp, #40]	; 0x28
   36890:	ldrb	r0, [r0]
   36894:	strb	r0, [sp, #39]	; 0x27
   36898:	bl	115e0 <__ctype_b_loc@plt>
   3689c:	ldr	r0, [r0]
   368a0:	ldrb	lr, [sp, #39]	; 0x27
   368a4:	mov	r1, lr
   368a8:	add	r0, r0, lr, lsl #1
   368ac:	ldrh	r0, [r0]
   368b0:	and	r0, r0, #8192	; 0x2000
   368b4:	cmp	r0, #0
   368b8:	str	r1, [sp, #12]
   368bc:	beq	368d8 <__assert_fail@plt+0x25184>
   368c0:	ldr	r0, [sp, #40]	; 0x28
   368c4:	add	r1, r0, #1
   368c8:	str	r1, [sp, #40]	; 0x28
   368cc:	ldrb	r0, [r0, #1]
   368d0:	strb	r0, [sp, #39]	; 0x27
   368d4:	b	36898 <__assert_fail@plt+0x25144>
   368d8:	ldrb	r0, [sp, #39]	; 0x27
   368dc:	cmp	r0, #45	; 0x2d
   368e0:	bne	368f0 <__assert_fail@plt+0x2519c>
   368e4:	movw	r0, #4
   368e8:	str	r0, [fp, #-4]
   368ec:	b	36e6c <__assert_fail@plt+0x25718>
   368f0:	ldr	r0, [fp, #-8]
   368f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   368f8:	ldr	r2, [fp, #-16]
   368fc:	bl	1167c <strtoumax@plt>
   36900:	str	r1, [fp, #-36]	; 0xffffffdc
   36904:	str	r0, [fp, #-40]	; 0xffffffd8
   36908:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3690c:	ldr	r0, [r0]
   36910:	ldr	r1, [fp, #-8]
   36914:	cmp	r0, r1
   36918:	bne	36984 <__assert_fail@plt+0x25230>
   3691c:	ldr	r0, [fp, #8]
   36920:	movw	r1, #0
   36924:	cmp	r0, r1
   36928:	beq	36974 <__assert_fail@plt+0x25220>
   3692c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36930:	ldr	r0, [r0]
   36934:	ldrb	r0, [r0]
   36938:	cmp	r0, #0
   3693c:	beq	36974 <__assert_fail@plt+0x25220>
   36940:	ldr	r0, [fp, #8]
   36944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36948:	ldr	r1, [r1]
   3694c:	ldrb	r1, [r1]
   36950:	bl	11610 <strchr@plt>
   36954:	movw	r1, #0
   36958:	cmp	r0, r1
   3695c:	beq	36974 <__assert_fail@plt+0x25220>
   36960:	mov	r0, #0
   36964:	str	r0, [fp, #-36]	; 0xffffffdc
   36968:	mov	r0, #1
   3696c:	str	r0, [fp, #-40]	; 0xffffffd8
   36970:	b	36980 <__assert_fail@plt+0x2522c>
   36974:	movw	r0, #4
   36978:	str	r0, [fp, #-4]
   3697c:	b	36e6c <__assert_fail@plt+0x25718>
   36980:	b	369bc <__assert_fail@plt+0x25268>
   36984:	bl	11628 <__errno_location@plt>
   36988:	ldr	r0, [r0]
   3698c:	cmp	r0, #0
   36990:	beq	369b8 <__assert_fail@plt+0x25264>
   36994:	bl	11628 <__errno_location@plt>
   36998:	ldr	r0, [r0]
   3699c:	cmp	r0, #34	; 0x22
   369a0:	beq	369b0 <__assert_fail@plt+0x2525c>
   369a4:	movw	r0, #4
   369a8:	str	r0, [fp, #-4]
   369ac:	b	36e6c <__assert_fail@plt+0x25718>
   369b0:	movw	r0, #1
   369b4:	str	r0, [sp, #44]	; 0x2c
   369b8:	b	369bc <__assert_fail@plt+0x25268>
   369bc:	ldr	r0, [fp, #8]
   369c0:	movw	r1, #0
   369c4:	cmp	r0, r1
   369c8:	bne	369ec <__assert_fail@plt+0x25298>
   369cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   369d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   369d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   369d8:	str	r1, [r2, #4]
   369dc:	str	r0, [r2]
   369e0:	ldr	r0, [sp, #44]	; 0x2c
   369e4:	str	r0, [fp, #-4]
   369e8:	b	36e6c <__assert_fail@plt+0x25718>
   369ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   369f0:	ldr	r0, [r0]
   369f4:	ldrb	r0, [r0]
   369f8:	cmp	r0, #0
   369fc:	beq	36e50 <__assert_fail@plt+0x256fc>
   36a00:	movw	r0, #1024	; 0x400
   36a04:	str	r0, [sp, #32]
   36a08:	movw	r0, #1
   36a0c:	str	r0, [sp, #28]
   36a10:	ldr	r0, [fp, #8]
   36a14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36a18:	ldr	r1, [r1]
   36a1c:	ldrb	r1, [r1]
   36a20:	bl	11610 <strchr@plt>
   36a24:	movw	r1, #0
   36a28:	cmp	r0, r1
   36a2c:	bne	36a54 <__assert_fail@plt+0x25300>
   36a30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36a38:	ldr	r2, [fp, #-20]	; 0xffffffec
   36a3c:	str	r1, [r2, #4]
   36a40:	str	r0, [r2]
   36a44:	ldr	r0, [sp, #44]	; 0x2c
   36a48:	orr	r0, r0, #2
   36a4c:	str	r0, [fp, #-4]
   36a50:	b	36e6c <__assert_fail@plt+0x25718>
   36a54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36a58:	ldr	r0, [r0]
   36a5c:	ldrb	r0, [r0]
   36a60:	sub	r0, r0, #69	; 0x45
   36a64:	cmp	r0, #47	; 0x2f
   36a68:	str	r0, [sp, #8]
   36a6c:	bhi	36bd8 <__assert_fail@plt+0x25484>
   36a70:	add	r0, pc, #8
   36a74:	ldr	r1, [sp, #8]
   36a78:	ldr	r0, [r0, r1, lsl #2]
   36a7c:	mov	pc, r0
   36a80:	andeq	r6, r3, r0, asr #22
   36a84:	ldrdeq	r6, [r3], -r8
   36a88:	andeq	r6, r3, r0, asr #22
   36a8c:	ldrdeq	r6, [r3], -r8
   36a90:	ldrdeq	r6, [r3], -r8
   36a94:	ldrdeq	r6, [r3], -r8
   36a98:	andeq	r6, r3, r0, asr #22
   36a9c:	ldrdeq	r6, [r3], -r8
   36aa0:	andeq	r6, r3, r0, asr #22
   36aa4:	ldrdeq	r6, [r3], -r8
   36aa8:	ldrdeq	r6, [r3], -r8
   36aac:	andeq	r6, r3, r0, asr #22
   36ab0:	ldrdeq	r6, [r3], -r8
   36ab4:	ldrdeq	r6, [r3], -r8
   36ab8:	ldrdeq	r6, [r3], -r8
   36abc:	andeq	r6, r3, r0, asr #22
   36ac0:	ldrdeq	r6, [r3], -r8
   36ac4:	ldrdeq	r6, [r3], -r8
   36ac8:	ldrdeq	r6, [r3], -r8
   36acc:	ldrdeq	r6, [r3], -r8
   36ad0:	andeq	r6, r3, r0, asr #22
   36ad4:	andeq	r6, r3, r0, asr #22
   36ad8:	ldrdeq	r6, [r3], -r8
   36adc:	ldrdeq	r6, [r3], -r8
   36ae0:	ldrdeq	r6, [r3], -r8
   36ae4:	ldrdeq	r6, [r3], -r8
   36ae8:	ldrdeq	r6, [r3], -r8
   36aec:	ldrdeq	r6, [r3], -r8
   36af0:	ldrdeq	r6, [r3], -r8
   36af4:	ldrdeq	r6, [r3], -r8
   36af8:	ldrdeq	r6, [r3], -r8
   36afc:	ldrdeq	r6, [r3], -r8
   36b00:	ldrdeq	r6, [r3], -r8
   36b04:	ldrdeq	r6, [r3], -r8
   36b08:	andeq	r6, r3, r0, asr #22
   36b0c:	ldrdeq	r6, [r3], -r8
   36b10:	ldrdeq	r6, [r3], -r8
   36b14:	ldrdeq	r6, [r3], -r8
   36b18:	andeq	r6, r3, r0, asr #22
   36b1c:	ldrdeq	r6, [r3], -r8
   36b20:	andeq	r6, r3, r0, asr #22
   36b24:	ldrdeq	r6, [r3], -r8
   36b28:	ldrdeq	r6, [r3], -r8
   36b2c:	ldrdeq	r6, [r3], -r8
   36b30:	ldrdeq	r6, [r3], -r8
   36b34:	ldrdeq	r6, [r3], -r8
   36b38:	ldrdeq	r6, [r3], -r8
   36b3c:	andeq	r6, r3, r0, asr #22
   36b40:	ldr	r0, [fp, #8]
   36b44:	movw	r1, #48	; 0x30
   36b48:	bl	11610 <strchr@plt>
   36b4c:	movw	r1, #0
   36b50:	cmp	r0, r1
   36b54:	beq	36bd4 <__assert_fail@plt+0x25480>
   36b58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36b5c:	ldr	r0, [r0]
   36b60:	ldrb	r0, [r0, #1]
   36b64:	mov	r1, r0
   36b68:	cmp	r0, #66	; 0x42
   36b6c:	str	r1, [sp, #4]
   36b70:	beq	36bbc <__assert_fail@plt+0x25468>
   36b74:	b	36b78 <__assert_fail@plt+0x25424>
   36b78:	ldr	r0, [sp, #4]
   36b7c:	cmp	r0, #68	; 0x44
   36b80:	beq	36bbc <__assert_fail@plt+0x25468>
   36b84:	b	36b88 <__assert_fail@plt+0x25434>
   36b88:	ldr	r0, [sp, #4]
   36b8c:	cmp	r0, #105	; 0x69
   36b90:	bne	36bd0 <__assert_fail@plt+0x2547c>
   36b94:	b	36b98 <__assert_fail@plt+0x25444>
   36b98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36b9c:	ldr	r0, [r0]
   36ba0:	ldrb	r0, [r0, #2]
   36ba4:	cmp	r0, #66	; 0x42
   36ba8:	bne	36bb8 <__assert_fail@plt+0x25464>
   36bac:	ldr	r0, [sp, #28]
   36bb0:	add	r0, r0, #2
   36bb4:	str	r0, [sp, #28]
   36bb8:	b	36bd0 <__assert_fail@plt+0x2547c>
   36bbc:	movw	r0, #1000	; 0x3e8
   36bc0:	str	r0, [sp, #32]
   36bc4:	ldr	r0, [sp, #28]
   36bc8:	add	r0, r0, #1
   36bcc:	str	r0, [sp, #28]
   36bd0:	b	36bd4 <__assert_fail@plt+0x25480>
   36bd4:	b	36bd8 <__assert_fail@plt+0x25484>
   36bd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36bdc:	ldr	r0, [r0]
   36be0:	ldrb	r0, [r0]
   36be4:	sub	r0, r0, #66	; 0x42
   36be8:	cmp	r0, #53	; 0x35
   36bec:	str	r0, [sp]
   36bf0:	bhi	36de4 <__assert_fail@plt+0x25690>
   36bf4:	add	r0, pc, #8
   36bf8:	ldr	r1, [sp]
   36bfc:	ldr	r0, [r0, r1, lsl #2]
   36c00:	mov	pc, r0
   36c04:	strdeq	r6, [r3], -r0
   36c08:	andeq	r6, r3, r4, ror #27
   36c0c:	andeq	r6, r3, r4, ror #27
   36c10:	andeq	r6, r3, r0, lsl sp
   36c14:	andeq	r6, r3, r4, ror #27
   36c18:	andeq	r6, r3, r8, lsr #26
   36c1c:	andeq	r6, r3, r4, ror #27
   36c20:	andeq	r6, r3, r4, ror #27
   36c24:	andeq	r6, r3, r4, ror #27
   36c28:	andeq	r6, r3, r0, asr #26
   36c2c:	andeq	r6, r3, r4, ror #27
   36c30:	andeq	r6, r3, r8, asr sp
   36c34:	andeq	r6, r3, r4, ror #27
   36c38:	andeq	r6, r3, r4, ror #27
   36c3c:	andeq	r6, r3, r0, ror sp
   36c40:	andeq	r6, r3, r4, ror #27
   36c44:	andeq	r6, r3, r4, ror #27
   36c48:	andeq	r6, r3, r4, ror #27
   36c4c:	andeq	r6, r3, r8, lsl #27
   36c50:	andeq	r6, r3, r4, ror #27
   36c54:	andeq	r6, r3, r4, ror #27
   36c58:	andeq	r6, r3, r4, ror #27
   36c5c:	andeq	r6, r3, r4, ror #27
   36c60:			; <UNDEFINED> instruction: 0x00036db4
   36c64:	andeq	r6, r3, ip, asr #27
   36c68:	andeq	r6, r3, r4, ror #27
   36c6c:	andeq	r6, r3, r4, ror #27
   36c70:	andeq	r6, r3, r4, ror #27
   36c74:	andeq	r6, r3, r4, ror #27
   36c78:	andeq	r6, r3, r4, ror #27
   36c7c:	andeq	r6, r3, r4, ror #27
   36c80:	andeq	r6, r3, r4, ror #27
   36c84:	ldrdeq	r6, [r3], -ip
   36c88:	andeq	r6, r3, r4, lsl #26
   36c8c:	andeq	r6, r3, r4, ror #27
   36c90:	andeq	r6, r3, r4, ror #27
   36c94:	andeq	r6, r3, r4, ror #27
   36c98:	andeq	r6, r3, r8, lsr #26
   36c9c:	andeq	r6, r3, r4, ror #27
   36ca0:	andeq	r6, r3, r4, ror #27
   36ca4:	andeq	r6, r3, r4, ror #27
   36ca8:	andeq	r6, r3, r0, asr #26
   36cac:	andeq	r6, r3, r4, ror #27
   36cb0:	andeq	r6, r3, r8, asr sp
   36cb4:	andeq	r6, r3, r4, ror #27
   36cb8:	andeq	r6, r3, r4, ror #27
   36cbc:	andeq	r6, r3, r4, ror #27
   36cc0:	andeq	r6, r3, r4, ror #27
   36cc4:	andeq	r6, r3, r4, ror #27
   36cc8:	andeq	r6, r3, r4, ror #27
   36ccc:	andeq	r6, r3, r8, lsl #27
   36cd0:	andeq	r6, r3, r4, ror #27
   36cd4:	andeq	r6, r3, r4, ror #27
   36cd8:	andeq	r6, r3, r0, lsr #27
   36cdc:	sub	r0, fp, #40	; 0x28
   36ce0:	movw	r1, #512	; 0x200
   36ce4:	bl	36e78 <__assert_fail@plt+0x25724>
   36ce8:	str	r0, [sp, #24]
   36cec:	b	36e08 <__assert_fail@plt+0x256b4>
   36cf0:	sub	r0, fp, #40	; 0x28
   36cf4:	movw	r1, #1024	; 0x400
   36cf8:	bl	36e78 <__assert_fail@plt+0x25724>
   36cfc:	str	r0, [sp, #24]
   36d00:	b	36e08 <__assert_fail@plt+0x256b4>
   36d04:	movw	r0, #0
   36d08:	str	r0, [sp, #24]
   36d0c:	b	36e08 <__assert_fail@plt+0x256b4>
   36d10:	ldr	r1, [sp, #32]
   36d14:	sub	r0, fp, #40	; 0x28
   36d18:	movw	r2, #6
   36d1c:	bl	38980 <__assert_fail@plt+0x2722c>
   36d20:	str	r0, [sp, #24]
   36d24:	b	36e08 <__assert_fail@plt+0x256b4>
   36d28:	ldr	r1, [sp, #32]
   36d2c:	sub	r0, fp, #40	; 0x28
   36d30:	movw	r2, #3
   36d34:	bl	38980 <__assert_fail@plt+0x2722c>
   36d38:	str	r0, [sp, #24]
   36d3c:	b	36e08 <__assert_fail@plt+0x256b4>
   36d40:	ldr	r1, [sp, #32]
   36d44:	sub	r0, fp, #40	; 0x28
   36d48:	movw	r2, #1
   36d4c:	bl	38980 <__assert_fail@plt+0x2722c>
   36d50:	str	r0, [sp, #24]
   36d54:	b	36e08 <__assert_fail@plt+0x256b4>
   36d58:	ldr	r1, [sp, #32]
   36d5c:	sub	r0, fp, #40	; 0x28
   36d60:	movw	r2, #2
   36d64:	bl	38980 <__assert_fail@plt+0x2722c>
   36d68:	str	r0, [sp, #24]
   36d6c:	b	36e08 <__assert_fail@plt+0x256b4>
   36d70:	ldr	r1, [sp, #32]
   36d74:	sub	r0, fp, #40	; 0x28
   36d78:	movw	r2, #5
   36d7c:	bl	38980 <__assert_fail@plt+0x2722c>
   36d80:	str	r0, [sp, #24]
   36d84:	b	36e08 <__assert_fail@plt+0x256b4>
   36d88:	ldr	r1, [sp, #32]
   36d8c:	sub	r0, fp, #40	; 0x28
   36d90:	movw	r2, #4
   36d94:	bl	38980 <__assert_fail@plt+0x2722c>
   36d98:	str	r0, [sp, #24]
   36d9c:	b	36e08 <__assert_fail@plt+0x256b4>
   36da0:	sub	r0, fp, #40	; 0x28
   36da4:	movw	r1, #2
   36da8:	bl	36e78 <__assert_fail@plt+0x25724>
   36dac:	str	r0, [sp, #24]
   36db0:	b	36e08 <__assert_fail@plt+0x256b4>
   36db4:	ldr	r1, [sp, #32]
   36db8:	sub	r0, fp, #40	; 0x28
   36dbc:	movw	r2, #8
   36dc0:	bl	38980 <__assert_fail@plt+0x2722c>
   36dc4:	str	r0, [sp, #24]
   36dc8:	b	36e08 <__assert_fail@plt+0x256b4>
   36dcc:	ldr	r1, [sp, #32]
   36dd0:	sub	r0, fp, #40	; 0x28
   36dd4:	movw	r2, #7
   36dd8:	bl	38980 <__assert_fail@plt+0x2722c>
   36ddc:	str	r0, [sp, #24]
   36de0:	b	36e08 <__assert_fail@plt+0x256b4>
   36de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36dec:	ldr	r2, [fp, #-20]	; 0xffffffec
   36df0:	str	r1, [r2, #4]
   36df4:	str	r0, [r2]
   36df8:	ldr	r0, [sp, #44]	; 0x2c
   36dfc:	orr	r0, r0, #2
   36e00:	str	r0, [fp, #-4]
   36e04:	b	36e6c <__assert_fail@plt+0x25718>
   36e08:	ldr	r0, [sp, #24]
   36e0c:	ldr	r1, [sp, #44]	; 0x2c
   36e10:	orr	r0, r1, r0
   36e14:	str	r0, [sp, #44]	; 0x2c
   36e18:	ldr	r0, [sp, #28]
   36e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e20:	ldr	r2, [r1]
   36e24:	add	r0, r2, r0
   36e28:	str	r0, [r1]
   36e2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36e30:	ldr	r0, [r0]
   36e34:	ldrsb	r0, [r0]
   36e38:	cmp	r0, #0
   36e3c:	beq	36e4c <__assert_fail@plt+0x256f8>
   36e40:	ldr	r0, [sp, #44]	; 0x2c
   36e44:	orr	r0, r0, #2
   36e48:	str	r0, [sp, #44]	; 0x2c
   36e4c:	b	36e50 <__assert_fail@plt+0x256fc>
   36e50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36e54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36e58:	ldr	r2, [fp, #-20]	; 0xffffffec
   36e5c:	str	r1, [r2, #4]
   36e60:	str	r0, [r2]
   36e64:	ldr	r0, [sp, #44]	; 0x2c
   36e68:	str	r0, [fp, #-4]
   36e6c:	ldr	r0, [fp, #-4]
   36e70:	mov	sp, fp
   36e74:	pop	{fp, pc}
   36e78:	push	{fp, lr}
   36e7c:	mov	fp, sp
   36e80:	sub	sp, sp, #568	; 0x238
   36e84:	str	r0, [fp, #-8]
   36e88:	str	r1, [fp, #-12]
   36e8c:	b	373c0 <__assert_fail@plt+0x25c6c>
   36e90:	b	37134 <__assert_fail@plt+0x259e0>
   36e94:	ldr	r0, [fp, #-12]
   36e98:	cmp	r0, #0
   36e9c:	bge	37014 <__assert_fail@plt+0x258c0>
   36ea0:	mov	r0, #1
   36ea4:	cmp	r0, #0
   36ea8:	bne	36f60 <__assert_fail@plt+0x2580c>
   36eac:	b	36eb0 <__assert_fail@plt+0x2575c>
   36eb0:	b	36eb4 <__assert_fail@plt+0x25760>
   36eb4:	ldr	r0, [fp, #-8]
   36eb8:	ldr	r1, [r0]
   36ebc:	ldr	r0, [r0, #4]
   36ec0:	ldr	r2, [fp, #-12]
   36ec4:	mov	r3, #127	; 0x7f
   36ec8:	sdiv	r2, r3, r2
   36ecc:	subs	r1, r1, r2
   36ed0:	sbcs	r0, r0, r2, asr #31
   36ed4:	str	r1, [fp, #-28]	; 0xffffffe4
   36ed8:	str	r0, [fp, #-32]	; 0xffffffe0
   36edc:	bcc	370ec <__assert_fail@plt+0x25998>
   36ee0:	b	37110 <__assert_fail@plt+0x259bc>
   36ee4:	b	36ee8 <__assert_fail@plt+0x25794>
   36ee8:	ldr	r0, [pc, #4088]	; 37ee8 <__assert_fail@plt+0x26794>
   36eec:	ldr	r1, [fp, #-12]
   36ef0:	cmp	r1, r0
   36ef4:	blt	36f0c <__assert_fail@plt+0x257b8>
   36ef8:	b	36f18 <__assert_fail@plt+0x257c4>
   36efc:	ldr	r0, [fp, #-12]
   36f00:	movw	r1, #0
   36f04:	cmp	r1, r0
   36f08:	bge	36f18 <__assert_fail@plt+0x257c4>
   36f0c:	movw	r0, #0
   36f10:	str	r0, [fp, #-36]	; 0xffffffdc
   36f14:	b	36f30 <__assert_fail@plt+0x257dc>
   36f18:	ldr	r0, [fp, #-12]
   36f1c:	movw	r1, #0
   36f20:	sub	r0, r1, r0
   36f24:	movw	r1, #127	; 0x7f
   36f28:	sdiv	r0, r1, r0
   36f2c:	str	r0, [fp, #-36]	; 0xffffffdc
   36f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36f34:	ldr	r1, [fp, #-8]
   36f38:	ldr	r2, [r1]
   36f3c:	ldr	r1, [r1, #4]
   36f40:	mvn	r1, r1
   36f44:	mvn	r2, r2
   36f48:	subs	r2, r2, r0
   36f4c:	sbcs	r0, r1, r0, asr #31
   36f50:	str	r2, [fp, #-40]	; 0xffffffd8
   36f54:	str	r0, [fp, #-44]	; 0xffffffd4
   36f58:	bcs	370ec <__assert_fail@plt+0x25998>
   36f5c:	b	37110 <__assert_fail@plt+0x259bc>
   36f60:	b	36f64 <__assert_fail@plt+0x25810>
   36f64:	b	36fe4 <__assert_fail@plt+0x25890>
   36f68:	b	36fe4 <__assert_fail@plt+0x25890>
   36f6c:	ldr	r0, [fp, #-12]
   36f70:	cmn	r0, #1
   36f74:	bne	36fe4 <__assert_fail@plt+0x25890>
   36f78:	b	36f9c <__assert_fail@plt+0x25848>
   36f7c:	ldr	r0, [fp, #-8]
   36f80:	ldr	r1, [r0]
   36f84:	ldr	r0, [r0, #4]
   36f88:	eor	r1, r1, #128	; 0x80
   36f8c:	orr	r0, r1, r0
   36f90:	cmp	r0, #0
   36f94:	bne	370ec <__assert_fail@plt+0x25998>
   36f98:	b	37110 <__assert_fail@plt+0x259bc>
   36f9c:	ldr	r0, [fp, #-8]
   36fa0:	ldr	r1, [r0]
   36fa4:	ldr	r0, [r0, #4]
   36fa8:	orr	r0, r1, r0
   36fac:	cmp	r0, #0
   36fb0:	beq	37110 <__assert_fail@plt+0x259bc>
   36fb4:	b	36fb8 <__assert_fail@plt+0x25864>
   36fb8:	ldr	r0, [fp, #-8]
   36fbc:	ldr	r1, [r0]
   36fc0:	ldr	r0, [r0, #4]
   36fc4:	subs	r1, r1, #1
   36fc8:	sbc	r0, r0, #0
   36fcc:	rsbs	r1, r1, #127	; 0x7f
   36fd0:	rscs	r0, r0, #0
   36fd4:	str	r1, [fp, #-48]	; 0xffffffd0
   36fd8:	str	r0, [fp, #-52]	; 0xffffffcc
   36fdc:	bcc	370ec <__assert_fail@plt+0x25998>
   36fe0:	b	37110 <__assert_fail@plt+0x259bc>
   36fe4:	ldr	r0, [fp, #-12]
   36fe8:	mvn	r1, #127	; 0x7f
   36fec:	sdiv	r0, r1, r0
   36ff0:	ldr	r1, [fp, #-8]
   36ff4:	ldr	r2, [r1]
   36ff8:	ldr	r1, [r1, #4]
   36ffc:	subs	r2, r0, r2
   37000:	rscs	r0, r1, r0, asr #31
   37004:	str	r2, [fp, #-56]	; 0xffffffc8
   37008:	str	r0, [fp, #-60]	; 0xffffffc4
   3700c:	bcc	370ec <__assert_fail@plt+0x25998>
   37010:	b	37110 <__assert_fail@plt+0x259bc>
   37014:	ldr	r0, [fp, #-12]
   37018:	cmp	r0, #0
   3701c:	bne	37024 <__assert_fail@plt+0x258d0>
   37020:	b	37110 <__assert_fail@plt+0x259bc>
   37024:	mov	r0, #1
   37028:	cmp	r0, #0
   3702c:	bne	370bc <__assert_fail@plt+0x25968>
   37030:	b	37034 <__assert_fail@plt+0x258e0>
   37034:	ldr	r0, [fp, #-8]
   37038:	ldr	r1, [r0]
   3703c:	ldr	r0, [r0, #4]
   37040:	and	r0, r1, r0
   37044:	cmn	r0, #1
   37048:	bne	37088 <__assert_fail@plt+0x25934>
   3704c:	b	37050 <__assert_fail@plt+0x258fc>
   37050:	b	37054 <__assert_fail@plt+0x25900>
   37054:	ldr	r0, [fp, #-12]
   37058:	mvn	r1, #127	; 0x7f
   3705c:	add	r0, r0, r1
   37060:	movw	r1, #0
   37064:	cmp	r1, r0
   37068:	blt	370ec <__assert_fail@plt+0x25998>
   3706c:	b	37110 <__assert_fail@plt+0x259bc>
   37070:	ldr	r0, [fp, #-12]
   37074:	sub	r0, r0, #1
   37078:	movw	r1, #127	; 0x7f
   3707c:	cmp	r1, r0
   37080:	blt	370ec <__assert_fail@plt+0x25998>
   37084:	b	37110 <__assert_fail@plt+0x259bc>
   37088:	ldr	r0, [fp, #-8]
   3708c:	ldr	r2, [r0]
   37090:	ldr	r3, [r0, #4]
   37094:	mvn	r0, #127	; 0x7f
   37098:	mvn	r1, #0
   3709c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   370a0:	ldr	r2, [fp, #-12]
   370a4:	subs	r0, r0, r2
   370a8:	sbcs	r1, r1, r2, asr #31
   370ac:	str	r0, [fp, #-64]	; 0xffffffc0
   370b0:	str	r1, [fp, #-68]	; 0xffffffbc
   370b4:	bcc	370ec <__assert_fail@plt+0x25998>
   370b8:	b	37110 <__assert_fail@plt+0x259bc>
   370bc:	ldr	r0, [fp, #-12]
   370c0:	mov	r1, #127	; 0x7f
   370c4:	sdiv	r0, r1, r0
   370c8:	ldr	r1, [fp, #-8]
   370cc:	ldr	r2, [r1]
   370d0:	ldr	r1, [r1, #4]
   370d4:	subs	r2, r0, r2
   370d8:	rscs	r0, r1, r0, asr #31
   370dc:	str	r2, [fp, #-72]	; 0xffffffb8
   370e0:	str	r0, [fp, #-76]	; 0xffffffb4
   370e4:	bcs	37110 <__assert_fail@plt+0x259bc>
   370e8:	b	370ec <__assert_fail@plt+0x25998>
   370ec:	ldr	r0, [fp, #-8]
   370f0:	ldr	r0, [r0]
   370f4:	ldr	r1, [fp, #-12]
   370f8:	mul	r0, r0, r1
   370fc:	sxtb	r0, r0
   37100:	asr	r1, r0, #31
   37104:	str	r0, [fp, #-24]	; 0xffffffe8
   37108:	str	r1, [fp, #-20]	; 0xffffffec
   3710c:	b	38934 <__assert_fail@plt+0x271e0>
   37110:	ldr	r0, [fp, #-8]
   37114:	ldr	r0, [r0]
   37118:	ldr	r1, [fp, #-12]
   3711c:	mul	r0, r0, r1
   37120:	sxtb	r0, r0
   37124:	asr	r1, r0, #31
   37128:	str	r0, [fp, #-24]	; 0xffffffe8
   3712c:	str	r1, [fp, #-20]	; 0xffffffec
   37130:	b	38950 <__assert_fail@plt+0x271fc>
   37134:	ldr	r0, [fp, #-12]
   37138:	cmp	r0, #0
   3713c:	bge	37294 <__assert_fail@plt+0x25b40>
   37140:	mov	r0, #1
   37144:	cmp	r0, #0
   37148:	bne	37200 <__assert_fail@plt+0x25aac>
   3714c:	b	37150 <__assert_fail@plt+0x259fc>
   37150:	b	37154 <__assert_fail@plt+0x25a00>
   37154:	ldr	r0, [fp, #-8]
   37158:	ldr	r1, [r0]
   3715c:	ldr	r0, [r0, #4]
   37160:	ldr	r2, [fp, #-12]
   37164:	mov	r3, #255	; 0xff
   37168:	sdiv	r2, r3, r2
   3716c:	subs	r1, r1, r2
   37170:	sbcs	r0, r0, r2, asr #31
   37174:	str	r1, [fp, #-80]	; 0xffffffb0
   37178:	str	r0, [fp, #-84]	; 0xffffffac
   3717c:	bcc	37378 <__assert_fail@plt+0x25c24>
   37180:	b	3739c <__assert_fail@plt+0x25c48>
   37184:	b	37188 <__assert_fail@plt+0x25a34>
   37188:	ldr	r0, [pc, #3416]	; 37ee8 <__assert_fail@plt+0x26794>
   3718c:	ldr	r1, [fp, #-12]
   37190:	cmp	r1, r0
   37194:	blt	371ac <__assert_fail@plt+0x25a58>
   37198:	b	371b8 <__assert_fail@plt+0x25a64>
   3719c:	ldr	r0, [fp, #-12]
   371a0:	movw	r1, #0
   371a4:	cmp	r1, r0
   371a8:	bge	371b8 <__assert_fail@plt+0x25a64>
   371ac:	movw	r0, #0
   371b0:	str	r0, [fp, #-88]	; 0xffffffa8
   371b4:	b	371d0 <__assert_fail@plt+0x25a7c>
   371b8:	ldr	r0, [fp, #-12]
   371bc:	movw	r1, #0
   371c0:	sub	r0, r1, r0
   371c4:	movw	r1, #255	; 0xff
   371c8:	sdiv	r0, r1, r0
   371cc:	str	r0, [fp, #-88]	; 0xffffffa8
   371d0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   371d4:	ldr	r1, [fp, #-8]
   371d8:	ldr	r2, [r1]
   371dc:	ldr	r1, [r1, #4]
   371e0:	mvn	r1, r1
   371e4:	mvn	r2, r2
   371e8:	subs	r2, r2, r0
   371ec:	sbcs	r0, r1, r0, asr #31
   371f0:	str	r2, [fp, #-92]	; 0xffffffa4
   371f4:	str	r0, [fp, #-96]	; 0xffffffa0
   371f8:	bcs	37378 <__assert_fail@plt+0x25c24>
   371fc:	b	3739c <__assert_fail@plt+0x25c48>
   37200:	b	37204 <__assert_fail@plt+0x25ab0>
   37204:	b	37264 <__assert_fail@plt+0x25b10>
   37208:	b	37264 <__assert_fail@plt+0x25b10>
   3720c:	ldr	r0, [fp, #-12]
   37210:	cmn	r0, #1
   37214:	bne	37264 <__assert_fail@plt+0x25b10>
   37218:	b	37238 <__assert_fail@plt+0x25ae4>
   3721c:	ldr	r0, [fp, #-8]
   37220:	ldr	r1, [r0]
   37224:	ldr	r0, [r0, #4]
   37228:	orr	r0, r1, r0
   3722c:	cmp	r0, #0
   37230:	bne	37378 <__assert_fail@plt+0x25c24>
   37234:	b	3739c <__assert_fail@plt+0x25c48>
   37238:	ldr	r0, [fp, #-8]
   3723c:	ldr	r1, [r0]
   37240:	ldr	r0, [r0, #4]
   37244:	orr	r0, r1, r0
   37248:	cmp	r0, #0
   3724c:	beq	3739c <__assert_fail@plt+0x25c48>
   37250:	b	37254 <__assert_fail@plt+0x25b00>
   37254:	mov	r0, #0
   37258:	cmp	r0, #0
   3725c:	bne	37378 <__assert_fail@plt+0x25c24>
   37260:	b	3739c <__assert_fail@plt+0x25c48>
   37264:	ldr	r0, [fp, #-12]
   37268:	mov	r1, #0
   3726c:	sdiv	r0, r1, r0
   37270:	ldr	r1, [fp, #-8]
   37274:	ldr	r2, [r1]
   37278:	ldr	r1, [r1, #4]
   3727c:	subs	r2, r0, r2
   37280:	rscs	r0, r1, r0, asr #31
   37284:	str	r2, [fp, #-100]	; 0xffffff9c
   37288:	str	r0, [fp, #-104]	; 0xffffff98
   3728c:	bcc	37378 <__assert_fail@plt+0x25c24>
   37290:	b	3739c <__assert_fail@plt+0x25c48>
   37294:	ldr	r0, [fp, #-12]
   37298:	cmp	r0, #0
   3729c:	bne	372a4 <__assert_fail@plt+0x25b50>
   372a0:	b	3739c <__assert_fail@plt+0x25c48>
   372a4:	mov	r0, #1
   372a8:	cmp	r0, #0
   372ac:	bne	37348 <__assert_fail@plt+0x25bf4>
   372b0:	b	372b4 <__assert_fail@plt+0x25b60>
   372b4:	b	372bc <__assert_fail@plt+0x25b68>
   372b8:	b	372c0 <__assert_fail@plt+0x25b6c>
   372bc:	b	37310 <__assert_fail@plt+0x25bbc>
   372c0:	ldr	r0, [fp, #-8]
   372c4:	ldr	r1, [r0]
   372c8:	ldr	r0, [r0, #4]
   372cc:	and	r0, r1, r0
   372d0:	cmn	r0, #1
   372d4:	bne	37310 <__assert_fail@plt+0x25bbc>
   372d8:	b	372dc <__assert_fail@plt+0x25b88>
   372dc:	b	372e0 <__assert_fail@plt+0x25b8c>
   372e0:	ldr	r0, [fp, #-12]
   372e4:	add	r0, r0, #0
   372e8:	movw	r1, #0
   372ec:	cmp	r1, r0
   372f0:	blt	37378 <__assert_fail@plt+0x25c24>
   372f4:	b	3739c <__assert_fail@plt+0x25c48>
   372f8:	ldr	r0, [fp, #-12]
   372fc:	sub	r0, r0, #1
   37300:	mvn	r1, #0
   37304:	cmp	r1, r0
   37308:	blt	37378 <__assert_fail@plt+0x25c24>
   3730c:	b	3739c <__assert_fail@plt+0x25c48>
   37310:	ldr	r0, [fp, #-8]
   37314:	ldr	r2, [r0]
   37318:	ldr	r3, [r0, #4]
   3731c:	mov	r0, #0
   37320:	str	r0, [fp, #-108]	; 0xffffff94
   37324:	ldr	r1, [fp, #-108]	; 0xffffff94
   37328:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3732c:	ldr	r2, [fp, #-12]
   37330:	subs	r0, r0, r2
   37334:	sbcs	r1, r1, r2, asr #31
   37338:	str	r0, [fp, #-112]	; 0xffffff90
   3733c:	str	r1, [fp, #-116]	; 0xffffff8c
   37340:	bcc	37378 <__assert_fail@plt+0x25c24>
   37344:	b	3739c <__assert_fail@plt+0x25c48>
   37348:	ldr	r0, [fp, #-12]
   3734c:	mov	r1, #255	; 0xff
   37350:	sdiv	r0, r1, r0
   37354:	ldr	r1, [fp, #-8]
   37358:	ldr	r2, [r1]
   3735c:	ldr	r1, [r1, #4]
   37360:	subs	r2, r0, r2
   37364:	rscs	r0, r1, r0, asr #31
   37368:	str	r2, [fp, #-120]	; 0xffffff88
   3736c:	str	r0, [fp, #-124]	; 0xffffff84
   37370:	bcs	3739c <__assert_fail@plt+0x25c48>
   37374:	b	37378 <__assert_fail@plt+0x25c24>
   37378:	ldr	r0, [fp, #-8]
   3737c:	ldr	r0, [r0]
   37380:	ldr	r1, [fp, #-12]
   37384:	mul	r0, r0, r1
   37388:	uxtb	r0, r0
   3738c:	mov	r1, #0
   37390:	str	r1, [fp, #-20]	; 0xffffffec
   37394:	str	r0, [fp, #-24]	; 0xffffffe8
   37398:	b	38934 <__assert_fail@plt+0x271e0>
   3739c:	ldr	r0, [fp, #-8]
   373a0:	ldr	r0, [r0]
   373a4:	ldr	r1, [fp, #-12]
   373a8:	mul	r0, r0, r1
   373ac:	uxtb	r0, r0
   373b0:	mov	r1, #0
   373b4:	str	r1, [fp, #-20]	; 0xffffffec
   373b8:	str	r0, [fp, #-24]	; 0xffffffe8
   373bc:	b	38950 <__assert_fail@plt+0x271fc>
   373c0:	b	378fc <__assert_fail@plt+0x261a8>
   373c4:	b	37670 <__assert_fail@plt+0x25f1c>
   373c8:	ldr	r0, [fp, #-12]
   373cc:	cmp	r0, #0
   373d0:	bge	3754c <__assert_fail@plt+0x25df8>
   373d4:	mov	r0, #1
   373d8:	cmp	r0, #0
   373dc:	bne	37494 <__assert_fail@plt+0x25d40>
   373e0:	b	373e4 <__assert_fail@plt+0x25c90>
   373e4:	b	373e8 <__assert_fail@plt+0x25c94>
   373e8:	ldr	r0, [fp, #-8]
   373ec:	ldr	r1, [r0]
   373f0:	ldr	r0, [r0, #4]
   373f4:	ldr	r2, [fp, #-12]
   373f8:	movw	r3, #32767	; 0x7fff
   373fc:	sdiv	r2, r3, r2
   37400:	subs	r1, r1, r2
   37404:	sbcs	r0, r0, r2, asr #31
   37408:	str	r1, [fp, #-128]	; 0xffffff80
   3740c:	str	r0, [fp, #-132]	; 0xffffff7c
   37410:	bcc	37628 <__assert_fail@plt+0x25ed4>
   37414:	b	3764c <__assert_fail@plt+0x25ef8>
   37418:	b	3741c <__assert_fail@plt+0x25cc8>
   3741c:	ldr	r0, [pc, #2756]	; 37ee8 <__assert_fail@plt+0x26794>
   37420:	ldr	r1, [fp, #-12]
   37424:	cmp	r1, r0
   37428:	blt	37440 <__assert_fail@plt+0x25cec>
   3742c:	b	3744c <__assert_fail@plt+0x25cf8>
   37430:	ldr	r0, [fp, #-12]
   37434:	movw	r1, #0
   37438:	cmp	r1, r0
   3743c:	bge	3744c <__assert_fail@plt+0x25cf8>
   37440:	movw	r0, #0
   37444:	str	r0, [fp, #-136]	; 0xffffff78
   37448:	b	37464 <__assert_fail@plt+0x25d10>
   3744c:	ldr	r0, [fp, #-12]
   37450:	movw	r1, #0
   37454:	sub	r0, r1, r0
   37458:	movw	r1, #32767	; 0x7fff
   3745c:	sdiv	r0, r1, r0
   37460:	str	r0, [fp, #-136]	; 0xffffff78
   37464:	ldr	r0, [fp, #-136]	; 0xffffff78
   37468:	ldr	r1, [fp, #-8]
   3746c:	ldr	r2, [r1]
   37470:	ldr	r1, [r1, #4]
   37474:	mvn	r1, r1
   37478:	mvn	r2, r2
   3747c:	subs	r2, r2, r0
   37480:	sbcs	r0, r1, r0, asr #31
   37484:	str	r2, [fp, #-140]	; 0xffffff74
   37488:	str	r0, [fp, #-144]	; 0xffffff70
   3748c:	bcs	37628 <__assert_fail@plt+0x25ed4>
   37490:	b	3764c <__assert_fail@plt+0x25ef8>
   37494:	b	37498 <__assert_fail@plt+0x25d44>
   37498:	b	37518 <__assert_fail@plt+0x25dc4>
   3749c:	b	37518 <__assert_fail@plt+0x25dc4>
   374a0:	ldr	r0, [fp, #-12]
   374a4:	cmn	r0, #1
   374a8:	bne	37518 <__assert_fail@plt+0x25dc4>
   374ac:	b	374d0 <__assert_fail@plt+0x25d7c>
   374b0:	ldr	r0, [fp, #-8]
   374b4:	ldr	r1, [r0]
   374b8:	ldr	r0, [r0, #4]
   374bc:	eor	r1, r1, #32768	; 0x8000
   374c0:	orr	r0, r1, r0
   374c4:	cmp	r0, #0
   374c8:	bne	37628 <__assert_fail@plt+0x25ed4>
   374cc:	b	3764c <__assert_fail@plt+0x25ef8>
   374d0:	ldr	r0, [fp, #-8]
   374d4:	ldr	r1, [r0]
   374d8:	ldr	r0, [r0, #4]
   374dc:	orr	r0, r1, r0
   374e0:	cmp	r0, #0
   374e4:	beq	3764c <__assert_fail@plt+0x25ef8>
   374e8:	b	374ec <__assert_fail@plt+0x25d98>
   374ec:	ldr	r0, [fp, #-8]
   374f0:	ldr	r1, [r0]
   374f4:	ldr	r0, [r0, #4]
   374f8:	subs	r1, r1, #1
   374fc:	sbc	r0, r0, #0
   37500:	lsr	r1, r1, #15
   37504:	orr	r1, r1, r0, lsl #17
   37508:	orr	r0, r1, r0, lsr #15
   3750c:	cmp	r0, #0
   37510:	bne	37628 <__assert_fail@plt+0x25ed4>
   37514:	b	3764c <__assert_fail@plt+0x25ef8>
   37518:	ldr	r0, [fp, #-12]
   3751c:	movw	r1, #32768	; 0x8000
   37520:	movt	r1, #65535	; 0xffff
   37524:	sdiv	r0, r1, r0
   37528:	ldr	r1, [fp, #-8]
   3752c:	ldr	r2, [r1]
   37530:	ldr	r1, [r1, #4]
   37534:	subs	r2, r0, r2
   37538:	rscs	r0, r1, r0, asr #31
   3753c:	str	r2, [fp, #-148]	; 0xffffff6c
   37540:	str	r0, [fp, #-152]	; 0xffffff68
   37544:	bcc	37628 <__assert_fail@plt+0x25ed4>
   37548:	b	3764c <__assert_fail@plt+0x25ef8>
   3754c:	ldr	r0, [fp, #-12]
   37550:	cmp	r0, #0
   37554:	bne	3755c <__assert_fail@plt+0x25e08>
   37558:	b	3764c <__assert_fail@plt+0x25ef8>
   3755c:	mov	r0, #1
   37560:	cmp	r0, #0
   37564:	bne	375f8 <__assert_fail@plt+0x25ea4>
   37568:	b	3756c <__assert_fail@plt+0x25e18>
   3756c:	ldr	r0, [fp, #-8]
   37570:	ldr	r1, [r0]
   37574:	ldr	r0, [r0, #4]
   37578:	and	r0, r1, r0
   3757c:	cmn	r0, #1
   37580:	bne	375c0 <__assert_fail@plt+0x25e6c>
   37584:	b	37588 <__assert_fail@plt+0x25e34>
   37588:	b	3758c <__assert_fail@plt+0x25e38>
   3758c:	ldr	r0, [pc, #4064]	; 38574 <__assert_fail@plt+0x26e20>
   37590:	ldr	r1, [fp, #-12]
   37594:	add	r0, r1, r0
   37598:	movw	r1, #0
   3759c:	cmp	r1, r0
   375a0:	blt	37628 <__assert_fail@plt+0x25ed4>
   375a4:	b	3764c <__assert_fail@plt+0x25ef8>
   375a8:	ldr	r0, [fp, #-12]
   375ac:	sub	r0, r0, #1
   375b0:	movw	r1, #32767	; 0x7fff
   375b4:	cmp	r1, r0
   375b8:	blt	37628 <__assert_fail@plt+0x25ed4>
   375bc:	b	3764c <__assert_fail@plt+0x25ef8>
   375c0:	ldr	r0, [fp, #-8]
   375c4:	ldr	r2, [r0]
   375c8:	ldr	r3, [r0, #4]
   375cc:	movw	r0, #32768	; 0x8000
   375d0:	movt	r0, #65535	; 0xffff
   375d4:	mvn	r1, #0
   375d8:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   375dc:	ldr	r2, [fp, #-12]
   375e0:	subs	r0, r0, r2
   375e4:	sbcs	r1, r1, r2, asr #31
   375e8:	str	r0, [fp, #-156]	; 0xffffff64
   375ec:	str	r1, [fp, #-160]	; 0xffffff60
   375f0:	bcc	37628 <__assert_fail@plt+0x25ed4>
   375f4:	b	3764c <__assert_fail@plt+0x25ef8>
   375f8:	ldr	r0, [fp, #-12]
   375fc:	movw	r1, #32767	; 0x7fff
   37600:	sdiv	r0, r1, r0
   37604:	ldr	r1, [fp, #-8]
   37608:	ldr	r2, [r1]
   3760c:	ldr	r1, [r1, #4]
   37610:	subs	r2, r0, r2
   37614:	rscs	r0, r1, r0, asr #31
   37618:	str	r2, [fp, #-164]	; 0xffffff5c
   3761c:	str	r0, [fp, #-168]	; 0xffffff58
   37620:	bcs	3764c <__assert_fail@plt+0x25ef8>
   37624:	b	37628 <__assert_fail@plt+0x25ed4>
   37628:	ldr	r0, [fp, #-8]
   3762c:	ldr	r0, [r0]
   37630:	ldr	r1, [fp, #-12]
   37634:	mul	r0, r0, r1
   37638:	sxth	r0, r0
   3763c:	asr	r1, r0, #31
   37640:	str	r0, [fp, #-24]	; 0xffffffe8
   37644:	str	r1, [fp, #-20]	; 0xffffffec
   37648:	b	38934 <__assert_fail@plt+0x271e0>
   3764c:	ldr	r0, [fp, #-8]
   37650:	ldr	r0, [r0]
   37654:	ldr	r1, [fp, #-12]
   37658:	mul	r0, r0, r1
   3765c:	sxth	r0, r0
   37660:	asr	r1, r0, #31
   37664:	str	r0, [fp, #-24]	; 0xffffffe8
   37668:	str	r1, [fp, #-20]	; 0xffffffec
   3766c:	b	38950 <__assert_fail@plt+0x271fc>
   37670:	ldr	r0, [fp, #-12]
   37674:	cmp	r0, #0
   37678:	bge	377d0 <__assert_fail@plt+0x2607c>
   3767c:	mov	r0, #1
   37680:	cmp	r0, #0
   37684:	bne	3773c <__assert_fail@plt+0x25fe8>
   37688:	b	3768c <__assert_fail@plt+0x25f38>
   3768c:	b	37690 <__assert_fail@plt+0x25f3c>
   37690:	ldr	r0, [fp, #-8]
   37694:	ldr	r1, [r0]
   37698:	ldr	r0, [r0, #4]
   3769c:	ldr	r2, [fp, #-12]
   376a0:	movw	r3, #65535	; 0xffff
   376a4:	sdiv	r2, r3, r2
   376a8:	subs	r1, r1, r2
   376ac:	sbcs	r0, r0, r2, asr #31
   376b0:	str	r1, [fp, #-172]	; 0xffffff54
   376b4:	str	r0, [fp, #-176]	; 0xffffff50
   376b8:	bcc	378b4 <__assert_fail@plt+0x26160>
   376bc:	b	378d8 <__assert_fail@plt+0x26184>
   376c0:	b	376c4 <__assert_fail@plt+0x25f70>
   376c4:	ldr	r0, [pc, #2076]	; 37ee8 <__assert_fail@plt+0x26794>
   376c8:	ldr	r1, [fp, #-12]
   376cc:	cmp	r1, r0
   376d0:	blt	376e8 <__assert_fail@plt+0x25f94>
   376d4:	b	376f4 <__assert_fail@plt+0x25fa0>
   376d8:	ldr	r0, [fp, #-12]
   376dc:	movw	r1, #0
   376e0:	cmp	r1, r0
   376e4:	bge	376f4 <__assert_fail@plt+0x25fa0>
   376e8:	movw	r0, #0
   376ec:	str	r0, [fp, #-180]	; 0xffffff4c
   376f0:	b	3770c <__assert_fail@plt+0x25fb8>
   376f4:	ldr	r0, [fp, #-12]
   376f8:	movw	r1, #0
   376fc:	sub	r0, r1, r0
   37700:	movw	r1, #65535	; 0xffff
   37704:	sdiv	r0, r1, r0
   37708:	str	r0, [fp, #-180]	; 0xffffff4c
   3770c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   37710:	ldr	r1, [fp, #-8]
   37714:	ldr	r2, [r1]
   37718:	ldr	r1, [r1, #4]
   3771c:	mvn	r1, r1
   37720:	mvn	r2, r2
   37724:	subs	r2, r2, r0
   37728:	sbcs	r0, r1, r0, asr #31
   3772c:	str	r2, [fp, #-184]	; 0xffffff48
   37730:	str	r0, [fp, #-188]	; 0xffffff44
   37734:	bcs	378b4 <__assert_fail@plt+0x26160>
   37738:	b	378d8 <__assert_fail@plt+0x26184>
   3773c:	b	37740 <__assert_fail@plt+0x25fec>
   37740:	b	377a0 <__assert_fail@plt+0x2604c>
   37744:	b	377a0 <__assert_fail@plt+0x2604c>
   37748:	ldr	r0, [fp, #-12]
   3774c:	cmn	r0, #1
   37750:	bne	377a0 <__assert_fail@plt+0x2604c>
   37754:	b	37774 <__assert_fail@plt+0x26020>
   37758:	ldr	r0, [fp, #-8]
   3775c:	ldr	r1, [r0]
   37760:	ldr	r0, [r0, #4]
   37764:	orr	r0, r1, r0
   37768:	cmp	r0, #0
   3776c:	bne	378b4 <__assert_fail@plt+0x26160>
   37770:	b	378d8 <__assert_fail@plt+0x26184>
   37774:	ldr	r0, [fp, #-8]
   37778:	ldr	r1, [r0]
   3777c:	ldr	r0, [r0, #4]
   37780:	orr	r0, r1, r0
   37784:	cmp	r0, #0
   37788:	beq	378d8 <__assert_fail@plt+0x26184>
   3778c:	b	37790 <__assert_fail@plt+0x2603c>
   37790:	mov	r0, #0
   37794:	cmp	r0, #0
   37798:	bne	378b4 <__assert_fail@plt+0x26160>
   3779c:	b	378d8 <__assert_fail@plt+0x26184>
   377a0:	ldr	r0, [fp, #-12]
   377a4:	mov	r1, #0
   377a8:	sdiv	r0, r1, r0
   377ac:	ldr	r1, [fp, #-8]
   377b0:	ldr	r2, [r1]
   377b4:	ldr	r1, [r1, #4]
   377b8:	subs	r2, r0, r2
   377bc:	rscs	r0, r1, r0, asr #31
   377c0:	str	r2, [fp, #-192]	; 0xffffff40
   377c4:	str	r0, [fp, #-196]	; 0xffffff3c
   377c8:	bcc	378b4 <__assert_fail@plt+0x26160>
   377cc:	b	378d8 <__assert_fail@plt+0x26184>
   377d0:	ldr	r0, [fp, #-12]
   377d4:	cmp	r0, #0
   377d8:	bne	377e0 <__assert_fail@plt+0x2608c>
   377dc:	b	378d8 <__assert_fail@plt+0x26184>
   377e0:	mov	r0, #1
   377e4:	cmp	r0, #0
   377e8:	bne	37884 <__assert_fail@plt+0x26130>
   377ec:	b	377f0 <__assert_fail@plt+0x2609c>
   377f0:	b	377f8 <__assert_fail@plt+0x260a4>
   377f4:	b	377fc <__assert_fail@plt+0x260a8>
   377f8:	b	3784c <__assert_fail@plt+0x260f8>
   377fc:	ldr	r0, [fp, #-8]
   37800:	ldr	r1, [r0]
   37804:	ldr	r0, [r0, #4]
   37808:	and	r0, r1, r0
   3780c:	cmn	r0, #1
   37810:	bne	3784c <__assert_fail@plt+0x260f8>
   37814:	b	37818 <__assert_fail@plt+0x260c4>
   37818:	b	3781c <__assert_fail@plt+0x260c8>
   3781c:	ldr	r0, [fp, #-12]
   37820:	add	r0, r0, #0
   37824:	movw	r1, #0
   37828:	cmp	r1, r0
   3782c:	blt	378b4 <__assert_fail@plt+0x26160>
   37830:	b	378d8 <__assert_fail@plt+0x26184>
   37834:	ldr	r0, [fp, #-12]
   37838:	sub	r0, r0, #1
   3783c:	mvn	r1, #0
   37840:	cmp	r1, r0
   37844:	blt	378b4 <__assert_fail@plt+0x26160>
   37848:	b	378d8 <__assert_fail@plt+0x26184>
   3784c:	ldr	r0, [fp, #-8]
   37850:	ldr	r2, [r0]
   37854:	ldr	r3, [r0, #4]
   37858:	mov	r0, #0
   3785c:	str	r0, [fp, #-200]	; 0xffffff38
   37860:	ldr	r1, [fp, #-200]	; 0xffffff38
   37864:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   37868:	ldr	r2, [fp, #-12]
   3786c:	subs	r0, r0, r2
   37870:	sbcs	r1, r1, r2, asr #31
   37874:	str	r0, [fp, #-204]	; 0xffffff34
   37878:	str	r1, [fp, #-208]	; 0xffffff30
   3787c:	bcc	378b4 <__assert_fail@plt+0x26160>
   37880:	b	378d8 <__assert_fail@plt+0x26184>
   37884:	ldr	r0, [fp, #-12]
   37888:	movw	r1, #65535	; 0xffff
   3788c:	sdiv	r0, r1, r0
   37890:	ldr	r1, [fp, #-8]
   37894:	ldr	r2, [r1]
   37898:	ldr	r1, [r1, #4]
   3789c:	subs	r2, r0, r2
   378a0:	rscs	r0, r1, r0, asr #31
   378a4:	str	r2, [fp, #-212]	; 0xffffff2c
   378a8:	str	r0, [fp, #-216]	; 0xffffff28
   378ac:	bcs	378d8 <__assert_fail@plt+0x26184>
   378b0:	b	378b4 <__assert_fail@plt+0x26160>
   378b4:	ldr	r0, [fp, #-8]
   378b8:	ldr	r0, [r0]
   378bc:	ldr	r1, [fp, #-12]
   378c0:	mul	r0, r0, r1
   378c4:	uxth	r0, r0
   378c8:	mov	r1, #0
   378cc:	str	r1, [fp, #-20]	; 0xffffffec
   378d0:	str	r0, [fp, #-24]	; 0xffffffe8
   378d4:	b	38934 <__assert_fail@plt+0x271e0>
   378d8:	ldr	r0, [fp, #-8]
   378dc:	ldr	r0, [r0]
   378e0:	ldr	r1, [fp, #-12]
   378e4:	mul	r0, r0, r1
   378e8:	uxth	r0, r0
   378ec:	mov	r1, #0
   378f0:	str	r1, [fp, #-20]	; 0xffffffec
   378f4:	str	r0, [fp, #-24]	; 0xffffffe8
   378f8:	b	38950 <__assert_fail@plt+0x271fc>
   378fc:	b	37e14 <__assert_fail@plt+0x266c0>
   37900:	b	37b90 <__assert_fail@plt+0x2643c>
   37904:	ldr	r0, [fp, #-12]
   37908:	cmp	r0, #0
   3790c:	bge	37a7c <__assert_fail@plt+0x26328>
   37910:	mov	r0, #1
   37914:	cmp	r0, #0
   37918:	bne	379d0 <__assert_fail@plt+0x2627c>
   3791c:	b	37920 <__assert_fail@plt+0x261cc>
   37920:	b	37924 <__assert_fail@plt+0x261d0>
   37924:	ldr	r0, [fp, #-8]
   37928:	ldr	r1, [r0]
   3792c:	ldr	r0, [r0, #4]
   37930:	ldr	r2, [fp, #-12]
   37934:	mvn	r3, #-2147483648	; 0x80000000
   37938:	sdiv	r2, r3, r2
   3793c:	subs	r1, r1, r2
   37940:	sbcs	r0, r0, r2, asr #31
   37944:	str	r1, [fp, #-220]	; 0xffffff24
   37948:	str	r0, [fp, #-224]	; 0xffffff20
   3794c:	bcc	37b50 <__assert_fail@plt+0x263fc>
   37950:	b	37b70 <__assert_fail@plt+0x2641c>
   37954:	b	37958 <__assert_fail@plt+0x26204>
   37958:	ldr	r0, [pc, #1416]	; 37ee8 <__assert_fail@plt+0x26794>
   3795c:	ldr	r1, [fp, #-12]
   37960:	cmp	r1, r0
   37964:	blt	3797c <__assert_fail@plt+0x26228>
   37968:	b	37988 <__assert_fail@plt+0x26234>
   3796c:	ldr	r0, [fp, #-12]
   37970:	movw	r1, #0
   37974:	cmp	r1, r0
   37978:	bge	37988 <__assert_fail@plt+0x26234>
   3797c:	movw	r0, #0
   37980:	str	r0, [fp, #-228]	; 0xffffff1c
   37984:	b	379a0 <__assert_fail@plt+0x2624c>
   37988:	ldr	r0, [pc, #4076]	; 3897c <__assert_fail@plt+0x27228>
   3798c:	ldr	r1, [fp, #-12]
   37990:	movw	r2, #0
   37994:	sub	r1, r2, r1
   37998:	sdiv	r0, r0, r1
   3799c:	str	r0, [fp, #-228]	; 0xffffff1c
   379a0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   379a4:	ldr	r1, [fp, #-8]
   379a8:	ldr	r2, [r1]
   379ac:	ldr	r1, [r1, #4]
   379b0:	mvn	r1, r1
   379b4:	mvn	r2, r2
   379b8:	subs	r2, r2, r0
   379bc:	sbcs	r0, r1, r0, asr #31
   379c0:	str	r2, [fp, #-232]	; 0xffffff18
   379c4:	str	r0, [fp, #-236]	; 0xffffff14
   379c8:	bcs	37b50 <__assert_fail@plt+0x263fc>
   379cc:	b	37b70 <__assert_fail@plt+0x2641c>
   379d0:	ldr	r0, [fp, #-12]
   379d4:	cmn	r0, #1
   379d8:	bne	37a4c <__assert_fail@plt+0x262f8>
   379dc:	b	37a00 <__assert_fail@plt+0x262ac>
   379e0:	ldr	r0, [fp, #-8]
   379e4:	ldr	r1, [r0]
   379e8:	ldr	r0, [r0, #4]
   379ec:	eor	r1, r1, #-2147483648	; 0x80000000
   379f0:	orr	r0, r1, r0
   379f4:	cmp	r0, #0
   379f8:	bne	37b50 <__assert_fail@plt+0x263fc>
   379fc:	b	37b70 <__assert_fail@plt+0x2641c>
   37a00:	ldr	r0, [fp, #-8]
   37a04:	ldr	r1, [r0]
   37a08:	ldr	r0, [r0, #4]
   37a0c:	orr	r0, r1, r0
   37a10:	cmp	r0, #0
   37a14:	beq	37b70 <__assert_fail@plt+0x2641c>
   37a18:	b	37a1c <__assert_fail@plt+0x262c8>
   37a1c:	ldr	r0, [fp, #-8]
   37a20:	ldr	r1, [r0]
   37a24:	ldr	r0, [r0, #4]
   37a28:	subs	r1, r1, #1
   37a2c:	sbc	r0, r0, #0
   37a30:	mvn	r2, #-2147483648	; 0x80000000
   37a34:	subs	r1, r2, r1
   37a38:	rscs	r0, r0, #0
   37a3c:	str	r1, [fp, #-240]	; 0xffffff10
   37a40:	str	r0, [fp, #-244]	; 0xffffff0c
   37a44:	bcc	37b50 <__assert_fail@plt+0x263fc>
   37a48:	b	37b70 <__assert_fail@plt+0x2641c>
   37a4c:	ldr	r0, [fp, #-12]
   37a50:	mov	r1, #-2147483648	; 0x80000000
   37a54:	sdiv	r0, r1, r0
   37a58:	ldr	r1, [fp, #-8]
   37a5c:	ldr	r2, [r1]
   37a60:	ldr	r1, [r1, #4]
   37a64:	subs	r2, r0, r2
   37a68:	rscs	r0, r1, r0, asr #31
   37a6c:	str	r2, [fp, #-248]	; 0xffffff08
   37a70:	str	r0, [fp, #-252]	; 0xffffff04
   37a74:	bcc	37b50 <__assert_fail@plt+0x263fc>
   37a78:	b	37b70 <__assert_fail@plt+0x2641c>
   37a7c:	ldr	r0, [fp, #-12]
   37a80:	cmp	r0, #0
   37a84:	bne	37a8c <__assert_fail@plt+0x26338>
   37a88:	b	37b70 <__assert_fail@plt+0x2641c>
   37a8c:	mov	r0, #1
   37a90:	cmp	r0, #0
   37a94:	bne	37b20 <__assert_fail@plt+0x263cc>
   37a98:	b	37a9c <__assert_fail@plt+0x26348>
   37a9c:	ldr	r0, [fp, #-8]
   37aa0:	ldr	r1, [r0]
   37aa4:	ldr	r0, [r0, #4]
   37aa8:	and	r0, r1, r0
   37aac:	cmn	r0, #1
   37ab0:	bne	37aec <__assert_fail@plt+0x26398>
   37ab4:	b	37ab8 <__assert_fail@plt+0x26364>
   37ab8:	b	37abc <__assert_fail@plt+0x26368>
   37abc:	ldr	r0, [fp, #-12]
   37ac0:	add	r0, r0, #-2147483648	; 0x80000000
   37ac4:	movw	r1, #0
   37ac8:	cmp	r1, r0
   37acc:	blt	37b50 <__assert_fail@plt+0x263fc>
   37ad0:	b	37b70 <__assert_fail@plt+0x2641c>
   37ad4:	ldr	r0, [pc, #3744]	; 3897c <__assert_fail@plt+0x27228>
   37ad8:	ldr	r1, [fp, #-12]
   37adc:	sub	r1, r1, #1
   37ae0:	cmp	r0, r1
   37ae4:	blt	37b50 <__assert_fail@plt+0x263fc>
   37ae8:	b	37b70 <__assert_fail@plt+0x2641c>
   37aec:	ldr	r0, [fp, #-8]
   37af0:	ldr	r2, [r0]
   37af4:	ldr	r3, [r0, #4]
   37af8:	mov	r0, #-2147483648	; 0x80000000
   37afc:	mvn	r1, #0
   37b00:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   37b04:	ldr	r2, [fp, #-12]
   37b08:	subs	r0, r0, r2
   37b0c:	sbcs	r1, r1, r2, asr #31
   37b10:	str	r0, [fp, #-256]	; 0xffffff00
   37b14:	str	r1, [fp, #-260]	; 0xfffffefc
   37b18:	bcc	37b50 <__assert_fail@plt+0x263fc>
   37b1c:	b	37b70 <__assert_fail@plt+0x2641c>
   37b20:	ldr	r0, [fp, #-12]
   37b24:	mvn	r1, #-2147483648	; 0x80000000
   37b28:	sdiv	r0, r1, r0
   37b2c:	ldr	r1, [fp, #-8]
   37b30:	ldr	r2, [r1]
   37b34:	ldr	r1, [r1, #4]
   37b38:	subs	r2, r0, r2
   37b3c:	rscs	r0, r1, r0, asr #31
   37b40:	str	r2, [fp, #-264]	; 0xfffffef8
   37b44:	str	r0, [fp, #-268]	; 0xfffffef4
   37b48:	bcs	37b70 <__assert_fail@plt+0x2641c>
   37b4c:	b	37b50 <__assert_fail@plt+0x263fc>
   37b50:	ldr	r0, [fp, #-8]
   37b54:	ldr	r0, [r0]
   37b58:	ldr	r1, [fp, #-12]
   37b5c:	mul	r0, r0, r1
   37b60:	asr	r1, r0, #31
   37b64:	str	r0, [fp, #-24]	; 0xffffffe8
   37b68:	str	r1, [fp, #-20]	; 0xffffffec
   37b6c:	b	38934 <__assert_fail@plt+0x271e0>
   37b70:	ldr	r0, [fp, #-8]
   37b74:	ldr	r0, [r0]
   37b78:	ldr	r1, [fp, #-12]
   37b7c:	mul	r0, r0, r1
   37b80:	asr	r1, r0, #31
   37b84:	str	r0, [fp, #-24]	; 0xffffffe8
   37b88:	str	r1, [fp, #-20]	; 0xffffffec
   37b8c:	b	38950 <__assert_fail@plt+0x271fc>
   37b90:	ldr	r0, [fp, #-12]
   37b94:	cmp	r0, #0
   37b98:	bge	37cf0 <__assert_fail@plt+0x2659c>
   37b9c:	mov	r0, #1
   37ba0:	cmp	r0, #0
   37ba4:	bne	37c5c <__assert_fail@plt+0x26508>
   37ba8:	b	37bac <__assert_fail@plt+0x26458>
   37bac:	b	37be0 <__assert_fail@plt+0x2648c>
   37bb0:	ldr	r0, [fp, #-8]
   37bb4:	ldr	r1, [r0]
   37bb8:	ldr	r0, [r0, #4]
   37bbc:	ldr	r2, [fp, #-12]
   37bc0:	mvn	r3, #0
   37bc4:	udiv	r2, r3, r2
   37bc8:	subs	r1, r1, r2
   37bcc:	sbcs	r0, r0, #0
   37bd0:	str	r1, [fp, #-272]	; 0xfffffef0
   37bd4:	str	r0, [fp, #-276]	; 0xfffffeec
   37bd8:	bcc	37dd4 <__assert_fail@plt+0x26680>
   37bdc:	b	37df4 <__assert_fail@plt+0x266a0>
   37be0:	b	37be4 <__assert_fail@plt+0x26490>
   37be4:	ldr	r0, [pc, #3468]	; 38978 <__assert_fail@plt+0x27224>
   37be8:	ldr	r1, [fp, #-12]
   37bec:	cmp	r1, r0
   37bf0:	blt	37c08 <__assert_fail@plt+0x264b4>
   37bf4:	b	37c14 <__assert_fail@plt+0x264c0>
   37bf8:	ldr	r0, [fp, #-12]
   37bfc:	movw	r1, #0
   37c00:	cmp	r1, r0
   37c04:	bge	37c14 <__assert_fail@plt+0x264c0>
   37c08:	movw	r0, #1
   37c0c:	str	r0, [fp, #-280]	; 0xfffffee8
   37c10:	b	37c2c <__assert_fail@plt+0x264d8>
   37c14:	ldr	r0, [fp, #-12]
   37c18:	movw	r1, #0
   37c1c:	sub	r0, r1, r0
   37c20:	mvn	r1, #0
   37c24:	udiv	r0, r1, r0
   37c28:	str	r0, [fp, #-280]	; 0xfffffee8
   37c2c:	ldr	r0, [fp, #-280]	; 0xfffffee8
   37c30:	ldr	r1, [fp, #-8]
   37c34:	ldr	r2, [r1]
   37c38:	ldr	r1, [r1, #4]
   37c3c:	mvn	r1, r1
   37c40:	mvn	r2, r2
   37c44:	subs	r0, r2, r0
   37c48:	sbcs	r1, r1, #0
   37c4c:	str	r0, [sp, #284]	; 0x11c
   37c50:	str	r1, [sp, #280]	; 0x118
   37c54:	bcs	37dd4 <__assert_fail@plt+0x26680>
   37c58:	b	37df4 <__assert_fail@plt+0x266a0>
   37c5c:	b	37c60 <__assert_fail@plt+0x2650c>
   37c60:	b	37cc0 <__assert_fail@plt+0x2656c>
   37c64:	b	37cc0 <__assert_fail@plt+0x2656c>
   37c68:	ldr	r0, [fp, #-12]
   37c6c:	cmn	r0, #1
   37c70:	bne	37cc0 <__assert_fail@plt+0x2656c>
   37c74:	b	37c94 <__assert_fail@plt+0x26540>
   37c78:	ldr	r0, [fp, #-8]
   37c7c:	ldr	r1, [r0]
   37c80:	ldr	r0, [r0, #4]
   37c84:	orr	r0, r1, r0
   37c88:	cmp	r0, #0
   37c8c:	bne	37dd4 <__assert_fail@plt+0x26680>
   37c90:	b	37df4 <__assert_fail@plt+0x266a0>
   37c94:	ldr	r0, [fp, #-8]
   37c98:	ldr	r1, [r0]
   37c9c:	ldr	r0, [r0, #4]
   37ca0:	orr	r0, r1, r0
   37ca4:	cmp	r0, #0
   37ca8:	beq	37df4 <__assert_fail@plt+0x266a0>
   37cac:	b	37cb0 <__assert_fail@plt+0x2655c>
   37cb0:	mov	r0, #0
   37cb4:	cmp	r0, #0
   37cb8:	bne	37dd4 <__assert_fail@plt+0x26680>
   37cbc:	b	37df4 <__assert_fail@plt+0x266a0>
   37cc0:	ldr	r0, [fp, #-12]
   37cc4:	mov	r1, #0
   37cc8:	sdiv	r0, r1, r0
   37ccc:	ldr	r1, [fp, #-8]
   37cd0:	ldr	r2, [r1]
   37cd4:	ldr	r1, [r1, #4]
   37cd8:	subs	r2, r0, r2
   37cdc:	rscs	r0, r1, r0, asr #31
   37ce0:	str	r2, [sp, #276]	; 0x114
   37ce4:	str	r0, [sp, #272]	; 0x110
   37ce8:	bcc	37dd4 <__assert_fail@plt+0x26680>
   37cec:	b	37df4 <__assert_fail@plt+0x266a0>
   37cf0:	ldr	r0, [fp, #-12]
   37cf4:	cmp	r0, #0
   37cf8:	bne	37d00 <__assert_fail@plt+0x265ac>
   37cfc:	b	37df4 <__assert_fail@plt+0x266a0>
   37d00:	mov	r0, #1
   37d04:	cmp	r0, #0
   37d08:	bne	37da4 <__assert_fail@plt+0x26650>
   37d0c:	b	37d10 <__assert_fail@plt+0x265bc>
   37d10:	b	37d18 <__assert_fail@plt+0x265c4>
   37d14:	b	37d1c <__assert_fail@plt+0x265c8>
   37d18:	b	37d6c <__assert_fail@plt+0x26618>
   37d1c:	ldr	r0, [fp, #-8]
   37d20:	ldr	r1, [r0]
   37d24:	ldr	r0, [r0, #4]
   37d28:	and	r0, r1, r0
   37d2c:	cmn	r0, #1
   37d30:	bne	37d6c <__assert_fail@plt+0x26618>
   37d34:	b	37d38 <__assert_fail@plt+0x265e4>
   37d38:	b	37d3c <__assert_fail@plt+0x265e8>
   37d3c:	ldr	r0, [fp, #-12]
   37d40:	add	r0, r0, #0
   37d44:	movw	r1, #0
   37d48:	cmp	r1, r0
   37d4c:	blt	37dd4 <__assert_fail@plt+0x26680>
   37d50:	b	37df4 <__assert_fail@plt+0x266a0>
   37d54:	ldr	r0, [fp, #-12]
   37d58:	sub	r0, r0, #1
   37d5c:	mvn	r1, #0
   37d60:	cmp	r1, r0
   37d64:	blt	37dd4 <__assert_fail@plt+0x26680>
   37d68:	b	37df4 <__assert_fail@plt+0x266a0>
   37d6c:	ldr	r0, [fp, #-8]
   37d70:	ldr	r2, [r0]
   37d74:	ldr	r3, [r0, #4]
   37d78:	mov	r0, #0
   37d7c:	str	r0, [sp, #268]	; 0x10c
   37d80:	ldr	r1, [sp, #268]	; 0x10c
   37d84:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   37d88:	ldr	r2, [fp, #-12]
   37d8c:	subs	r0, r0, r2
   37d90:	sbcs	r1, r1, r2, asr #31
   37d94:	str	r0, [sp, #264]	; 0x108
   37d98:	str	r1, [sp, #260]	; 0x104
   37d9c:	bcc	37dd4 <__assert_fail@plt+0x26680>
   37da0:	b	37df4 <__assert_fail@plt+0x266a0>
   37da4:	ldr	r0, [fp, #-12]
   37da8:	mvn	r1, #0
   37dac:	udiv	r0, r1, r0
   37db0:	ldr	r1, [fp, #-8]
   37db4:	ldr	r2, [r1]
   37db8:	ldr	r1, [r1, #4]
   37dbc:	subs	r0, r0, r2
   37dc0:	rscs	r1, r1, #0
   37dc4:	str	r0, [sp, #256]	; 0x100
   37dc8:	str	r1, [sp, #252]	; 0xfc
   37dcc:	bcs	37df4 <__assert_fail@plt+0x266a0>
   37dd0:	b	37dd4 <__assert_fail@plt+0x26680>
   37dd4:	ldr	r0, [fp, #-8]
   37dd8:	ldr	r0, [r0]
   37ddc:	ldr	r1, [fp, #-12]
   37de0:	mul	r0, r0, r1
   37de4:	mov	r1, #0
   37de8:	str	r1, [fp, #-20]	; 0xffffffec
   37dec:	str	r0, [fp, #-24]	; 0xffffffe8
   37df0:	b	38934 <__assert_fail@plt+0x271e0>
   37df4:	ldr	r0, [fp, #-8]
   37df8:	ldr	r0, [r0]
   37dfc:	ldr	r1, [fp, #-12]
   37e00:	mul	r0, r0, r1
   37e04:	mov	r1, #0
   37e08:	str	r1, [fp, #-20]	; 0xffffffec
   37e0c:	str	r0, [fp, #-24]	; 0xffffffe8
   37e10:	b	38950 <__assert_fail@plt+0x271fc>
   37e14:	b	38330 <__assert_fail@plt+0x26bdc>
   37e18:	b	380ac <__assert_fail@plt+0x26958>
   37e1c:	ldr	r0, [fp, #-12]
   37e20:	cmp	r0, #0
   37e24:	bge	37f98 <__assert_fail@plt+0x26844>
   37e28:	mov	r0, #1
   37e2c:	cmp	r0, #0
   37e30:	bne	37eec <__assert_fail@plt+0x26798>
   37e34:	b	37e38 <__assert_fail@plt+0x266e4>
   37e38:	b	37e3c <__assert_fail@plt+0x266e8>
   37e3c:	ldr	r0, [fp, #-8]
   37e40:	ldr	r1, [r0]
   37e44:	ldr	r0, [r0, #4]
   37e48:	ldr	r2, [fp, #-12]
   37e4c:	mvn	r3, #-2147483648	; 0x80000000
   37e50:	sdiv	r2, r3, r2
   37e54:	subs	r1, r1, r2
   37e58:	sbcs	r0, r0, r2, asr #31
   37e5c:	str	r1, [sp, #248]	; 0xf8
   37e60:	str	r0, [sp, #244]	; 0xf4
   37e64:	bcc	3806c <__assert_fail@plt+0x26918>
   37e68:	b	3808c <__assert_fail@plt+0x26938>
   37e6c:	b	37e70 <__assert_fail@plt+0x2671c>
   37e70:	ldr	r0, [pc, #2816]	; 38978 <__assert_fail@plt+0x27224>
   37e74:	ldr	r1, [fp, #-12]
   37e78:	cmp	r1, r0
   37e7c:	blt	37e94 <__assert_fail@plt+0x26740>
   37e80:	b	37ea0 <__assert_fail@plt+0x2674c>
   37e84:	ldr	r0, [fp, #-12]
   37e88:	movw	r1, #0
   37e8c:	cmp	r1, r0
   37e90:	bge	37ea0 <__assert_fail@plt+0x2674c>
   37e94:	movw	r0, #0
   37e98:	str	r0, [sp, #240]	; 0xf0
   37e9c:	b	37eb8 <__assert_fail@plt+0x26764>
   37ea0:	ldr	r0, [pc, #2772]	; 3897c <__assert_fail@plt+0x27228>
   37ea4:	ldr	r1, [fp, #-12]
   37ea8:	movw	r2, #0
   37eac:	sub	r1, r2, r1
   37eb0:	sdiv	r0, r0, r1
   37eb4:	str	r0, [sp, #240]	; 0xf0
   37eb8:	ldr	r0, [sp, #240]	; 0xf0
   37ebc:	ldr	r1, [fp, #-8]
   37ec0:	ldr	r2, [r1]
   37ec4:	ldr	r1, [r1, #4]
   37ec8:	mvn	r1, r1
   37ecc:	mvn	r2, r2
   37ed0:	subs	r2, r2, r0
   37ed4:	sbcs	r0, r1, r0, asr #31
   37ed8:	str	r2, [sp, #236]	; 0xec
   37edc:	str	r0, [sp, #232]	; 0xe8
   37ee0:	bcs	3806c <__assert_fail@plt+0x26918>
   37ee4:	b	3808c <__assert_fail@plt+0x26938>
   37ee8:	andhi	r0, r0, r1
   37eec:	ldr	r0, [fp, #-12]
   37ef0:	cmn	r0, #1
   37ef4:	bne	37f68 <__assert_fail@plt+0x26814>
   37ef8:	b	37f1c <__assert_fail@plt+0x267c8>
   37efc:	ldr	r0, [fp, #-8]
   37f00:	ldr	r1, [r0]
   37f04:	ldr	r0, [r0, #4]
   37f08:	eor	r1, r1, #-2147483648	; 0x80000000
   37f0c:	orr	r0, r1, r0
   37f10:	cmp	r0, #0
   37f14:	bne	3806c <__assert_fail@plt+0x26918>
   37f18:	b	3808c <__assert_fail@plt+0x26938>
   37f1c:	ldr	r0, [fp, #-8]
   37f20:	ldr	r1, [r0]
   37f24:	ldr	r0, [r0, #4]
   37f28:	orr	r0, r1, r0
   37f2c:	cmp	r0, #0
   37f30:	beq	3808c <__assert_fail@plt+0x26938>
   37f34:	b	37f38 <__assert_fail@plt+0x267e4>
   37f38:	ldr	r0, [fp, #-8]
   37f3c:	ldr	r1, [r0]
   37f40:	ldr	r0, [r0, #4]
   37f44:	subs	r1, r1, #1
   37f48:	sbc	r0, r0, #0
   37f4c:	mvn	r2, #-2147483648	; 0x80000000
   37f50:	subs	r1, r2, r1
   37f54:	rscs	r0, r0, #0
   37f58:	str	r1, [sp, #228]	; 0xe4
   37f5c:	str	r0, [sp, #224]	; 0xe0
   37f60:	bcc	3806c <__assert_fail@plt+0x26918>
   37f64:	b	3808c <__assert_fail@plt+0x26938>
   37f68:	ldr	r0, [fp, #-12]
   37f6c:	mov	r1, #-2147483648	; 0x80000000
   37f70:	sdiv	r0, r1, r0
   37f74:	ldr	r1, [fp, #-8]
   37f78:	ldr	r2, [r1]
   37f7c:	ldr	r1, [r1, #4]
   37f80:	subs	r2, r0, r2
   37f84:	rscs	r0, r1, r0, asr #31
   37f88:	str	r2, [sp, #220]	; 0xdc
   37f8c:	str	r0, [sp, #216]	; 0xd8
   37f90:	bcc	3806c <__assert_fail@plt+0x26918>
   37f94:	b	3808c <__assert_fail@plt+0x26938>
   37f98:	ldr	r0, [fp, #-12]
   37f9c:	cmp	r0, #0
   37fa0:	bne	37fa8 <__assert_fail@plt+0x26854>
   37fa4:	b	3808c <__assert_fail@plt+0x26938>
   37fa8:	mov	r0, #1
   37fac:	cmp	r0, #0
   37fb0:	bne	3803c <__assert_fail@plt+0x268e8>
   37fb4:	b	37fb8 <__assert_fail@plt+0x26864>
   37fb8:	ldr	r0, [fp, #-8]
   37fbc:	ldr	r1, [r0]
   37fc0:	ldr	r0, [r0, #4]
   37fc4:	and	r0, r1, r0
   37fc8:	cmn	r0, #1
   37fcc:	bne	38008 <__assert_fail@plt+0x268b4>
   37fd0:	b	37fd4 <__assert_fail@plt+0x26880>
   37fd4:	b	37fd8 <__assert_fail@plt+0x26884>
   37fd8:	ldr	r0, [fp, #-12]
   37fdc:	add	r0, r0, #-2147483648	; 0x80000000
   37fe0:	movw	r1, #0
   37fe4:	cmp	r1, r0
   37fe8:	blt	3806c <__assert_fail@plt+0x26918>
   37fec:	b	3808c <__assert_fail@plt+0x26938>
   37ff0:	ldr	r0, [pc, #2436]	; 3897c <__assert_fail@plt+0x27228>
   37ff4:	ldr	r1, [fp, #-12]
   37ff8:	sub	r1, r1, #1
   37ffc:	cmp	r0, r1
   38000:	blt	3806c <__assert_fail@plt+0x26918>
   38004:	b	3808c <__assert_fail@plt+0x26938>
   38008:	ldr	r0, [fp, #-8]
   3800c:	ldr	r2, [r0]
   38010:	ldr	r3, [r0, #4]
   38014:	mov	r0, #-2147483648	; 0x80000000
   38018:	mvn	r1, #0
   3801c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   38020:	ldr	r2, [fp, #-12]
   38024:	subs	r0, r0, r2
   38028:	sbcs	r1, r1, r2, asr #31
   3802c:	str	r0, [sp, #212]	; 0xd4
   38030:	str	r1, [sp, #208]	; 0xd0
   38034:	bcc	3806c <__assert_fail@plt+0x26918>
   38038:	b	3808c <__assert_fail@plt+0x26938>
   3803c:	ldr	r0, [fp, #-12]
   38040:	mvn	r1, #-2147483648	; 0x80000000
   38044:	sdiv	r0, r1, r0
   38048:	ldr	r1, [fp, #-8]
   3804c:	ldr	r2, [r1]
   38050:	ldr	r1, [r1, #4]
   38054:	subs	r2, r0, r2
   38058:	rscs	r0, r1, r0, asr #31
   3805c:	str	r2, [sp, #204]	; 0xcc
   38060:	str	r0, [sp, #200]	; 0xc8
   38064:	bcs	3808c <__assert_fail@plt+0x26938>
   38068:	b	3806c <__assert_fail@plt+0x26918>
   3806c:	ldr	r0, [fp, #-8]
   38070:	ldr	r0, [r0]
   38074:	ldr	r1, [fp, #-12]
   38078:	mul	r0, r0, r1
   3807c:	asr	r1, r0, #31
   38080:	str	r0, [fp, #-24]	; 0xffffffe8
   38084:	str	r1, [fp, #-20]	; 0xffffffec
   38088:	b	38934 <__assert_fail@plt+0x271e0>
   3808c:	ldr	r0, [fp, #-8]
   38090:	ldr	r0, [r0]
   38094:	ldr	r1, [fp, #-12]
   38098:	mul	r0, r0, r1
   3809c:	asr	r1, r0, #31
   380a0:	str	r0, [fp, #-24]	; 0xffffffe8
   380a4:	str	r1, [fp, #-20]	; 0xffffffec
   380a8:	b	38950 <__assert_fail@plt+0x271fc>
   380ac:	ldr	r0, [fp, #-12]
   380b0:	cmp	r0, #0
   380b4:	bge	3820c <__assert_fail@plt+0x26ab8>
   380b8:	mov	r0, #1
   380bc:	cmp	r0, #0
   380c0:	bne	38178 <__assert_fail@plt+0x26a24>
   380c4:	b	380c8 <__assert_fail@plt+0x26974>
   380c8:	b	380fc <__assert_fail@plt+0x269a8>
   380cc:	ldr	r0, [fp, #-8]
   380d0:	ldr	r1, [r0]
   380d4:	ldr	r0, [r0, #4]
   380d8:	ldr	r2, [fp, #-12]
   380dc:	mvn	r3, #0
   380e0:	udiv	r2, r3, r2
   380e4:	subs	r1, r1, r2
   380e8:	sbcs	r0, r0, #0
   380ec:	str	r1, [sp, #196]	; 0xc4
   380f0:	str	r0, [sp, #192]	; 0xc0
   380f4:	bcc	382f0 <__assert_fail@plt+0x26b9c>
   380f8:	b	38310 <__assert_fail@plt+0x26bbc>
   380fc:	b	38100 <__assert_fail@plt+0x269ac>
   38100:	ldr	r0, [pc, #2160]	; 38978 <__assert_fail@plt+0x27224>
   38104:	ldr	r1, [fp, #-12]
   38108:	cmp	r1, r0
   3810c:	blt	38124 <__assert_fail@plt+0x269d0>
   38110:	b	38130 <__assert_fail@plt+0x269dc>
   38114:	ldr	r0, [fp, #-12]
   38118:	movw	r1, #0
   3811c:	cmp	r1, r0
   38120:	bge	38130 <__assert_fail@plt+0x269dc>
   38124:	movw	r0, #1
   38128:	str	r0, [sp, #188]	; 0xbc
   3812c:	b	38148 <__assert_fail@plt+0x269f4>
   38130:	ldr	r0, [fp, #-12]
   38134:	movw	r1, #0
   38138:	sub	r0, r1, r0
   3813c:	mvn	r1, #0
   38140:	udiv	r0, r1, r0
   38144:	str	r0, [sp, #188]	; 0xbc
   38148:	ldr	r0, [sp, #188]	; 0xbc
   3814c:	ldr	r1, [fp, #-8]
   38150:	ldr	r2, [r1]
   38154:	ldr	r1, [r1, #4]
   38158:	mvn	r1, r1
   3815c:	mvn	r2, r2
   38160:	subs	r0, r2, r0
   38164:	sbcs	r1, r1, #0
   38168:	str	r0, [sp, #184]	; 0xb8
   3816c:	str	r1, [sp, #180]	; 0xb4
   38170:	bcs	382f0 <__assert_fail@plt+0x26b9c>
   38174:	b	38310 <__assert_fail@plt+0x26bbc>
   38178:	b	3817c <__assert_fail@plt+0x26a28>
   3817c:	b	381dc <__assert_fail@plt+0x26a88>
   38180:	b	381dc <__assert_fail@plt+0x26a88>
   38184:	ldr	r0, [fp, #-12]
   38188:	cmn	r0, #1
   3818c:	bne	381dc <__assert_fail@plt+0x26a88>
   38190:	b	381b0 <__assert_fail@plt+0x26a5c>
   38194:	ldr	r0, [fp, #-8]
   38198:	ldr	r1, [r0]
   3819c:	ldr	r0, [r0, #4]
   381a0:	orr	r0, r1, r0
   381a4:	cmp	r0, #0
   381a8:	bne	382f0 <__assert_fail@plt+0x26b9c>
   381ac:	b	38310 <__assert_fail@plt+0x26bbc>
   381b0:	ldr	r0, [fp, #-8]
   381b4:	ldr	r1, [r0]
   381b8:	ldr	r0, [r0, #4]
   381bc:	orr	r0, r1, r0
   381c0:	cmp	r0, #0
   381c4:	beq	38310 <__assert_fail@plt+0x26bbc>
   381c8:	b	381cc <__assert_fail@plt+0x26a78>
   381cc:	mov	r0, #0
   381d0:	cmp	r0, #0
   381d4:	bne	382f0 <__assert_fail@plt+0x26b9c>
   381d8:	b	38310 <__assert_fail@plt+0x26bbc>
   381dc:	ldr	r0, [fp, #-12]
   381e0:	mov	r1, #0
   381e4:	sdiv	r0, r1, r0
   381e8:	ldr	r1, [fp, #-8]
   381ec:	ldr	r2, [r1]
   381f0:	ldr	r1, [r1, #4]
   381f4:	subs	r2, r0, r2
   381f8:	rscs	r0, r1, r0, asr #31
   381fc:	str	r2, [sp, #176]	; 0xb0
   38200:	str	r0, [sp, #172]	; 0xac
   38204:	bcc	382f0 <__assert_fail@plt+0x26b9c>
   38208:	b	38310 <__assert_fail@plt+0x26bbc>
   3820c:	ldr	r0, [fp, #-12]
   38210:	cmp	r0, #0
   38214:	bne	3821c <__assert_fail@plt+0x26ac8>
   38218:	b	38310 <__assert_fail@plt+0x26bbc>
   3821c:	mov	r0, #1
   38220:	cmp	r0, #0
   38224:	bne	382c0 <__assert_fail@plt+0x26b6c>
   38228:	b	3822c <__assert_fail@plt+0x26ad8>
   3822c:	b	38234 <__assert_fail@plt+0x26ae0>
   38230:	b	38238 <__assert_fail@plt+0x26ae4>
   38234:	b	38288 <__assert_fail@plt+0x26b34>
   38238:	ldr	r0, [fp, #-8]
   3823c:	ldr	r1, [r0]
   38240:	ldr	r0, [r0, #4]
   38244:	and	r0, r1, r0
   38248:	cmn	r0, #1
   3824c:	bne	38288 <__assert_fail@plt+0x26b34>
   38250:	b	38254 <__assert_fail@plt+0x26b00>
   38254:	b	38258 <__assert_fail@plt+0x26b04>
   38258:	ldr	r0, [fp, #-12]
   3825c:	add	r0, r0, #0
   38260:	movw	r1, #0
   38264:	cmp	r1, r0
   38268:	blt	382f0 <__assert_fail@plt+0x26b9c>
   3826c:	b	38310 <__assert_fail@plt+0x26bbc>
   38270:	ldr	r0, [fp, #-12]
   38274:	sub	r0, r0, #1
   38278:	mvn	r1, #0
   3827c:	cmp	r1, r0
   38280:	blt	382f0 <__assert_fail@plt+0x26b9c>
   38284:	b	38310 <__assert_fail@plt+0x26bbc>
   38288:	ldr	r0, [fp, #-8]
   3828c:	ldr	r2, [r0]
   38290:	ldr	r3, [r0, #4]
   38294:	mov	r0, #0
   38298:	str	r0, [sp, #168]	; 0xa8
   3829c:	ldr	r1, [sp, #168]	; 0xa8
   382a0:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   382a4:	ldr	r2, [fp, #-12]
   382a8:	subs	r0, r0, r2
   382ac:	sbcs	r1, r1, r2, asr #31
   382b0:	str	r0, [sp, #164]	; 0xa4
   382b4:	str	r1, [sp, #160]	; 0xa0
   382b8:	bcc	382f0 <__assert_fail@plt+0x26b9c>
   382bc:	b	38310 <__assert_fail@plt+0x26bbc>
   382c0:	ldr	r0, [fp, #-12]
   382c4:	mvn	r1, #0
   382c8:	udiv	r0, r1, r0
   382cc:	ldr	r1, [fp, #-8]
   382d0:	ldr	r2, [r1]
   382d4:	ldr	r1, [r1, #4]
   382d8:	subs	r0, r0, r2
   382dc:	rscs	r1, r1, #0
   382e0:	str	r0, [sp, #156]	; 0x9c
   382e4:	str	r1, [sp, #152]	; 0x98
   382e8:	bcs	38310 <__assert_fail@plt+0x26bbc>
   382ec:	b	382f0 <__assert_fail@plt+0x26b9c>
   382f0:	ldr	r0, [fp, #-8]
   382f4:	ldr	r0, [r0]
   382f8:	ldr	r1, [fp, #-12]
   382fc:	mul	r0, r0, r1
   38300:	mov	r1, #0
   38304:	str	r1, [fp, #-20]	; 0xffffffec
   38308:	str	r0, [fp, #-24]	; 0xffffffe8
   3830c:	b	38934 <__assert_fail@plt+0x271e0>
   38310:	ldr	r0, [fp, #-8]
   38314:	ldr	r0, [r0]
   38318:	ldr	r1, [fp, #-12]
   3831c:	mul	r0, r0, r1
   38320:	mov	r1, #0
   38324:	str	r1, [fp, #-20]	; 0xffffffec
   38328:	str	r0, [fp, #-24]	; 0xffffffe8
   3832c:	b	38950 <__assert_fail@plt+0x271fc>
   38330:	b	3864c <__assert_fail@plt+0x26ef8>
   38334:	ldr	r0, [fp, #-12]
   38338:	cmp	r0, #0
   3833c:	bge	38500 <__assert_fail@plt+0x26dac>
   38340:	mov	r0, #1
   38344:	cmp	r0, #0
   38348:	bne	38448 <__assert_fail@plt+0x26cf4>
   3834c:	b	38350 <__assert_fail@plt+0x26bfc>
   38350:	b	38354 <__assert_fail@plt+0x26c00>
   38354:	ldr	r0, [fp, #-8]
   38358:	ldr	r1, [r0]
   3835c:	ldr	r0, [r0, #4]
   38360:	ldr	r2, [fp, #-12]
   38364:	asr	r3, r2, #31
   38368:	mvn	ip, #0
   3836c:	mvn	lr, #-2147483648	; 0x80000000
   38370:	str	r0, [sp, #148]	; 0x94
   38374:	mov	r0, ip
   38378:	str	r1, [sp, #144]	; 0x90
   3837c:	mov	r1, lr
   38380:	bl	3c428 <__assert_fail@plt+0x2acd4>
   38384:	ldr	r2, [sp, #144]	; 0x90
   38388:	subs	r0, r2, r0
   3838c:	ldr	r2, [sp, #148]	; 0x94
   38390:	sbcs	r1, r2, r1
   38394:	str	r0, [sp, #140]	; 0x8c
   38398:	str	r1, [sp, #136]	; 0x88
   3839c:	bcc	385f4 <__assert_fail@plt+0x26ea0>
   383a0:	b	38620 <__assert_fail@plt+0x26ecc>
   383a4:	b	383a8 <__assert_fail@plt+0x26c54>
   383a8:	ldr	r0, [pc, #1480]	; 38978 <__assert_fail@plt+0x27224>
   383ac:	ldr	r1, [fp, #-12]
   383b0:	cmp	r1, r0
   383b4:	blt	383cc <__assert_fail@plt+0x26c78>
   383b8:	b	383e0 <__assert_fail@plt+0x26c8c>
   383bc:	ldr	r0, [fp, #-12]
   383c0:	movw	r1, #0
   383c4:	cmp	r1, r0
   383c8:	bge	383e0 <__assert_fail@plt+0x26c8c>
   383cc:	mov	r0, #0
   383d0:	mvn	r1, #0
   383d4:	str	r1, [sp, #132]	; 0x84
   383d8:	str	r0, [sp, #128]	; 0x80
   383dc:	b	38414 <__assert_fail@plt+0x26cc0>
   383e0:	ldr	r0, [fp, #-12]
   383e4:	rsb	r0, r0, #0
   383e8:	asr	r3, r0, #31
   383ec:	mvn	r1, #0
   383f0:	mvn	r2, #-2147483648	; 0x80000000
   383f4:	str	r0, [sp, #124]	; 0x7c
   383f8:	mov	r0, r1
   383fc:	mov	r1, r2
   38400:	ldr	r2, [sp, #124]	; 0x7c
   38404:	bl	3c428 <__assert_fail@plt+0x2acd4>
   38408:	str	r0, [sp, #132]	; 0x84
   3840c:	str	r1, [sp, #128]	; 0x80
   38410:	b	38414 <__assert_fail@plt+0x26cc0>
   38414:	ldr	r0, [sp, #128]	; 0x80
   38418:	ldr	r1, [sp, #132]	; 0x84
   3841c:	ldr	r2, [fp, #-8]
   38420:	ldr	r3, [r2]
   38424:	ldr	r2, [r2, #4]
   38428:	mvn	r2, r2
   3842c:	mvn	r3, r3
   38430:	subs	r1, r3, r1
   38434:	sbcs	r0, r2, r0
   38438:	str	r1, [sp, #120]	; 0x78
   3843c:	str	r0, [sp, #116]	; 0x74
   38440:	bcs	385f4 <__assert_fail@plt+0x26ea0>
   38444:	b	38620 <__assert_fail@plt+0x26ecc>
   38448:	ldr	r0, [fp, #-12]
   3844c:	cmn	r0, #1
   38450:	bne	384b8 <__assert_fail@plt+0x26d64>
   38454:	b	38478 <__assert_fail@plt+0x26d24>
   38458:	ldr	r0, [fp, #-8]
   3845c:	ldr	r1, [r0]
   38460:	ldr	r0, [r0, #4]
   38464:	eor	r0, r0, #-2147483648	; 0x80000000
   38468:	orr	r0, r1, r0
   3846c:	cmp	r0, #0
   38470:	bne	385f4 <__assert_fail@plt+0x26ea0>
   38474:	b	38620 <__assert_fail@plt+0x26ecc>
   38478:	ldr	r0, [fp, #-8]
   3847c:	ldr	r1, [r0]
   38480:	ldr	r0, [r0, #4]
   38484:	orr	r0, r1, r0
   38488:	cmp	r0, #0
   3848c:	beq	38620 <__assert_fail@plt+0x26ecc>
   38490:	b	38494 <__assert_fail@plt+0x26d40>
   38494:	ldr	r0, [fp, #-8]
   38498:	ldr	r1, [r0]
   3849c:	ldr	r0, [r0, #4]
   384a0:	subs	r1, r1, #1
   384a4:	sbc	r0, r0, #0
   384a8:	cmp	r0, #0
   384ac:	str	r1, [sp, #112]	; 0x70
   384b0:	blt	385f4 <__assert_fail@plt+0x26ea0>
   384b4:	b	38620 <__assert_fail@plt+0x26ecc>
   384b8:	ldr	r0, [fp, #-12]
   384bc:	asr	r3, r0, #31
   384c0:	mov	r1, #0
   384c4:	mov	r2, #-2147483648	; 0x80000000
   384c8:	str	r0, [sp, #108]	; 0x6c
   384cc:	mov	r0, r1
   384d0:	mov	r1, r2
   384d4:	ldr	r2, [sp, #108]	; 0x6c
   384d8:	bl	3c428 <__assert_fail@plt+0x2acd4>
   384dc:	ldr	r2, [fp, #-8]
   384e0:	ldr	r3, [r2]
   384e4:	ldr	r2, [r2, #4]
   384e8:	subs	r0, r0, r3
   384ec:	sbcs	r1, r1, r2
   384f0:	str	r0, [sp, #104]	; 0x68
   384f4:	str	r1, [sp, #100]	; 0x64
   384f8:	bcc	385f4 <__assert_fail@plt+0x26ea0>
   384fc:	b	38620 <__assert_fail@plt+0x26ecc>
   38500:	ldr	r0, [fp, #-12]
   38504:	cmp	r0, #0
   38508:	bne	38510 <__assert_fail@plt+0x26dbc>
   3850c:	b	38620 <__assert_fail@plt+0x26ecc>
   38510:	mov	r0, #1
   38514:	cmp	r0, #0
   38518:	bne	385ac <__assert_fail@plt+0x26e58>
   3851c:	b	38520 <__assert_fail@plt+0x26dcc>
   38520:	ldr	r0, [fp, #-8]
   38524:	ldr	r1, [r0]
   38528:	ldr	r0, [r0, #4]
   3852c:	and	r0, r1, r0
   38530:	cmn	r0, #1
   38534:	bne	38578 <__assert_fail@plt+0x26e24>
   38538:	b	3853c <__assert_fail@plt+0x26de8>
   3853c:	b	38540 <__assert_fail@plt+0x26dec>
   38540:	ldr	r0, [fp, #-12]
   38544:	mov	r1, #-2147483648	; 0x80000000
   38548:	add	r1, r1, r0, asr #31
   3854c:	rsbs	r0, r0, #0
   38550:	rscs	r1, r1, #0
   38554:	str	r0, [sp, #96]	; 0x60
   38558:	str	r1, [sp, #92]	; 0x5c
   3855c:	blt	385f4 <__assert_fail@plt+0x26ea0>
   38560:	b	38620 <__assert_fail@plt+0x26ecc>
   38564:	mov	r0, #0
   38568:	cmp	r0, #0
   3856c:	bne	385f4 <__assert_fail@plt+0x26ea0>
   38570:	b	38620 <__assert_fail@plt+0x26ecc>
   38574:			; <UNDEFINED> instruction: 0xffff8000
   38578:	ldr	r0, [fp, #-8]
   3857c:	ldr	r2, [r0]
   38580:	ldr	r3, [r0, #4]
   38584:	mov	r0, #0
   38588:	mov	r1, #-2147483648	; 0x80000000
   3858c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   38590:	ldr	r2, [fp, #-12]
   38594:	subs	r0, r0, r2
   38598:	sbcs	r1, r1, r2, asr #31
   3859c:	str	r0, [sp, #88]	; 0x58
   385a0:	str	r1, [sp, #84]	; 0x54
   385a4:	bcc	385f4 <__assert_fail@plt+0x26ea0>
   385a8:	b	38620 <__assert_fail@plt+0x26ecc>
   385ac:	ldr	r0, [fp, #-12]
   385b0:	asr	r3, r0, #31
   385b4:	mvn	r1, #0
   385b8:	mvn	r2, #-2147483648	; 0x80000000
   385bc:	str	r0, [sp, #80]	; 0x50
   385c0:	mov	r0, r1
   385c4:	mov	r1, r2
   385c8:	ldr	r2, [sp, #80]	; 0x50
   385cc:	bl	3c428 <__assert_fail@plt+0x2acd4>
   385d0:	ldr	r2, [fp, #-8]
   385d4:	ldr	r3, [r2]
   385d8:	ldr	r2, [r2, #4]
   385dc:	subs	r0, r0, r3
   385e0:	sbcs	r1, r1, r2
   385e4:	str	r0, [sp, #76]	; 0x4c
   385e8:	str	r1, [sp, #72]	; 0x48
   385ec:	bcs	38620 <__assert_fail@plt+0x26ecc>
   385f0:	b	385f4 <__assert_fail@plt+0x26ea0>
   385f4:	ldr	r0, [fp, #-8]
   385f8:	ldr	r1, [r0]
   385fc:	ldr	r0, [r0, #4]
   38600:	ldr	r2, [fp, #-12]
   38604:	asr	r3, r2, #31
   38608:	umull	ip, lr, r1, r2
   3860c:	mla	r1, r1, r3, lr
   38610:	mla	r0, r0, r2, r1
   38614:	str	ip, [fp, #-24]	; 0xffffffe8
   38618:	str	r0, [fp, #-20]	; 0xffffffec
   3861c:	b	38934 <__assert_fail@plt+0x271e0>
   38620:	ldr	r0, [fp, #-8]
   38624:	ldr	r1, [r0]
   38628:	ldr	r0, [r0, #4]
   3862c:	ldr	r2, [fp, #-12]
   38630:	asr	r3, r2, #31
   38634:	umull	ip, lr, r1, r2
   38638:	mla	r1, r1, r3, lr
   3863c:	mla	r0, r0, r2, r1
   38640:	str	ip, [fp, #-24]	; 0xffffffe8
   38644:	str	r0, [fp, #-20]	; 0xffffffec
   38648:	b	38950 <__assert_fail@plt+0x271fc>
   3864c:	ldr	r0, [fp, #-12]
   38650:	cmp	r0, #0
   38654:	bge	387e8 <__assert_fail@plt+0x27094>
   38658:	mov	r0, #1
   3865c:	cmp	r0, #0
   38660:	bne	38754 <__assert_fail@plt+0x27000>
   38664:	b	38668 <__assert_fail@plt+0x26f14>
   38668:	b	386b8 <__assert_fail@plt+0x26f64>
   3866c:	ldr	r0, [fp, #-8]
   38670:	ldr	r1, [r0]
   38674:	ldr	r0, [r0, #4]
   38678:	ldr	r2, [fp, #-12]
   3867c:	asr	r3, r2, #31
   38680:	mvn	ip, #0
   38684:	str	r0, [sp, #68]	; 0x44
   38688:	mov	r0, ip
   3868c:	str	r1, [sp, #64]	; 0x40
   38690:	mov	r1, ip
   38694:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   38698:	ldr	r2, [sp, #64]	; 0x40
   3869c:	subs	r0, r2, r0
   386a0:	ldr	r2, [sp, #68]	; 0x44
   386a4:	sbcs	r1, r2, r1
   386a8:	str	r0, [sp, #60]	; 0x3c
   386ac:	str	r1, [sp, #56]	; 0x38
   386b0:	bcc	388dc <__assert_fail@plt+0x27188>
   386b4:	b	38908 <__assert_fail@plt+0x271b4>
   386b8:	b	386bc <__assert_fail@plt+0x26f68>
   386bc:	ldr	r0, [pc, #692]	; 38978 <__assert_fail@plt+0x27224>
   386c0:	ldr	r1, [fp, #-12]
   386c4:	cmp	r1, r0
   386c8:	blt	386e0 <__assert_fail@plt+0x26f8c>
   386cc:	b	386f4 <__assert_fail@plt+0x26fa0>
   386d0:	ldr	r0, [fp, #-12]
   386d4:	movw	r1, #0
   386d8:	cmp	r1, r0
   386dc:	bge	386f4 <__assert_fail@plt+0x26fa0>
   386e0:	mov	r0, #1
   386e4:	mvn	r1, #0
   386e8:	str	r1, [sp, #52]	; 0x34
   386ec:	str	r0, [sp, #48]	; 0x30
   386f0:	b	38720 <__assert_fail@plt+0x26fcc>
   386f4:	ldr	r0, [fp, #-12]
   386f8:	rsb	r0, r0, #0
   386fc:	asr	r3, r0, #31
   38700:	mvn	r1, #0
   38704:	str	r0, [sp, #44]	; 0x2c
   38708:	mov	r0, r1
   3870c:	ldr	r2, [sp, #44]	; 0x2c
   38710:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   38714:	str	r0, [sp, #52]	; 0x34
   38718:	str	r1, [sp, #48]	; 0x30
   3871c:	b	38720 <__assert_fail@plt+0x26fcc>
   38720:	ldr	r0, [sp, #48]	; 0x30
   38724:	ldr	r1, [sp, #52]	; 0x34
   38728:	ldr	r2, [fp, #-8]
   3872c:	ldr	r3, [r2]
   38730:	ldr	r2, [r2, #4]
   38734:	mvn	r2, r2
   38738:	mvn	r3, r3
   3873c:	subs	r1, r3, r1
   38740:	sbcs	r0, r2, r0
   38744:	str	r1, [sp, #40]	; 0x28
   38748:	str	r0, [sp, #36]	; 0x24
   3874c:	bcs	388dc <__assert_fail@plt+0x27188>
   38750:	b	38908 <__assert_fail@plt+0x271b4>
   38754:	b	38758 <__assert_fail@plt+0x27004>
   38758:	b	387b8 <__assert_fail@plt+0x27064>
   3875c:	b	387b8 <__assert_fail@plt+0x27064>
   38760:	ldr	r0, [fp, #-12]
   38764:	cmn	r0, #1
   38768:	bne	387b8 <__assert_fail@plt+0x27064>
   3876c:	b	3878c <__assert_fail@plt+0x27038>
   38770:	ldr	r0, [fp, #-8]
   38774:	ldr	r1, [r0]
   38778:	ldr	r0, [r0, #4]
   3877c:	orr	r0, r1, r0
   38780:	cmp	r0, #0
   38784:	bne	388dc <__assert_fail@plt+0x27188>
   38788:	b	38908 <__assert_fail@plt+0x271b4>
   3878c:	ldr	r0, [fp, #-8]
   38790:	ldr	r1, [r0]
   38794:	ldr	r0, [r0, #4]
   38798:	orr	r0, r1, r0
   3879c:	cmp	r0, #0
   387a0:	beq	38908 <__assert_fail@plt+0x271b4>
   387a4:	b	387a8 <__assert_fail@plt+0x27054>
   387a8:	mov	r0, #0
   387ac:	cmp	r0, #0
   387b0:	bne	388dc <__assert_fail@plt+0x27188>
   387b4:	b	38908 <__assert_fail@plt+0x271b4>
   387b8:	ldr	r0, [fp, #-12]
   387bc:	mov	r1, #0
   387c0:	sdiv	r0, r1, r0
   387c4:	ldr	r1, [fp, #-8]
   387c8:	ldr	r2, [r1]
   387cc:	ldr	r1, [r1, #4]
   387d0:	subs	r2, r0, r2
   387d4:	rscs	r0, r1, r0, asr #31
   387d8:	str	r2, [sp, #32]
   387dc:	str	r0, [sp, #28]
   387e0:	bcc	388dc <__assert_fail@plt+0x27188>
   387e4:	b	38908 <__assert_fail@plt+0x271b4>
   387e8:	ldr	r0, [fp, #-12]
   387ec:	cmp	r0, #0
   387f0:	bne	387f8 <__assert_fail@plt+0x270a4>
   387f4:	b	38908 <__assert_fail@plt+0x271b4>
   387f8:	mov	r0, #1
   387fc:	cmp	r0, #0
   38800:	bne	3889c <__assert_fail@plt+0x27148>
   38804:	b	38808 <__assert_fail@plt+0x270b4>
   38808:	b	38810 <__assert_fail@plt+0x270bc>
   3880c:	b	38814 <__assert_fail@plt+0x270c0>
   38810:	b	38864 <__assert_fail@plt+0x27110>
   38814:	ldr	r0, [fp, #-8]
   38818:	ldr	r1, [r0]
   3881c:	ldr	r0, [r0, #4]
   38820:	and	r0, r1, r0
   38824:	cmn	r0, #1
   38828:	bne	38864 <__assert_fail@plt+0x27110>
   3882c:	b	38830 <__assert_fail@plt+0x270dc>
   38830:	b	38834 <__assert_fail@plt+0x270e0>
   38834:	ldr	r0, [fp, #-12]
   38838:	add	r0, r0, #0
   3883c:	movw	r1, #0
   38840:	cmp	r1, r0
   38844:	blt	388dc <__assert_fail@plt+0x27188>
   38848:	b	38908 <__assert_fail@plt+0x271b4>
   3884c:	ldr	r0, [fp, #-12]
   38850:	sub	r0, r0, #1
   38854:	mvn	r1, #0
   38858:	cmp	r1, r0
   3885c:	blt	388dc <__assert_fail@plt+0x27188>
   38860:	b	38908 <__assert_fail@plt+0x271b4>
   38864:	ldr	r0, [fp, #-8]
   38868:	ldr	r2, [r0]
   3886c:	ldr	r3, [r0, #4]
   38870:	mov	r0, #0
   38874:	str	r0, [sp, #24]
   38878:	ldr	r1, [sp, #24]
   3887c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   38880:	ldr	r2, [fp, #-12]
   38884:	subs	r0, r0, r2
   38888:	sbcs	r1, r1, r2, asr #31
   3888c:	str	r0, [sp, #20]
   38890:	str	r1, [sp, #16]
   38894:	bcc	388dc <__assert_fail@plt+0x27188>
   38898:	b	38908 <__assert_fail@plt+0x271b4>
   3889c:	ldr	r0, [fp, #-12]
   388a0:	asr	r3, r0, #31
   388a4:	mvn	r1, #0
   388a8:	str	r0, [sp, #12]
   388ac:	mov	r0, r1
   388b0:	ldr	r2, [sp, #12]
   388b4:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   388b8:	ldr	r2, [fp, #-8]
   388bc:	ldr	r3, [r2]
   388c0:	ldr	r2, [r2, #4]
   388c4:	subs	r0, r0, r3
   388c8:	sbcs	r1, r1, r2
   388cc:	str	r0, [sp, #8]
   388d0:	str	r1, [sp, #4]
   388d4:	bcs	38908 <__assert_fail@plt+0x271b4>
   388d8:	b	388dc <__assert_fail@plt+0x27188>
   388dc:	ldr	r0, [fp, #-8]
   388e0:	ldr	r1, [r0]
   388e4:	ldr	r0, [r0, #4]
   388e8:	ldr	r2, [fp, #-12]
   388ec:	asr	r3, r2, #31
   388f0:	umull	ip, lr, r1, r2
   388f4:	mla	r1, r1, r3, lr
   388f8:	mla	r0, r0, r2, r1
   388fc:	str	ip, [fp, #-24]	; 0xffffffe8
   38900:	str	r0, [fp, #-20]	; 0xffffffec
   38904:	b	38934 <__assert_fail@plt+0x271e0>
   38908:	ldr	r0, [fp, #-8]
   3890c:	ldr	r1, [r0]
   38910:	ldr	r0, [r0, #4]
   38914:	ldr	r2, [fp, #-12]
   38918:	asr	r3, r2, #31
   3891c:	umull	ip, lr, r1, r2
   38920:	mla	r1, r1, r3, lr
   38924:	mla	r0, r0, r2, r1
   38928:	str	ip, [fp, #-24]	; 0xffffffe8
   3892c:	str	r0, [fp, #-20]	; 0xffffffec
   38930:	b	38950 <__assert_fail@plt+0x271fc>
   38934:	ldr	r0, [fp, #-8]
   38938:	mvn	r1, #0
   3893c:	str	r1, [r0, #4]
   38940:	str	r1, [r0]
   38944:	movw	r0, #1
   38948:	str	r0, [fp, #-4]
   3894c:	b	3896c <__assert_fail@plt+0x27218>
   38950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38954:	ldr	r1, [fp, #-20]	; 0xffffffec
   38958:	ldr	r2, [fp, #-8]
   3895c:	str	r1, [r2, #4]
   38960:	str	r0, [r2]
   38964:	movw	r0, #0
   38968:	str	r0, [fp, #-4]
   3896c:	ldr	r0, [fp, #-4]
   38970:	mov	sp, fp
   38974:	pop	{fp, pc}
   38978:	andhi	r0, r0, r1
   3897c:	svcvc	0x00ffffff
   38980:	push	{fp, lr}
   38984:	mov	fp, sp
   38988:	sub	sp, sp, #16
   3898c:	str	r0, [fp, #-4]
   38990:	str	r1, [sp, #8]
   38994:	str	r2, [sp, #4]
   38998:	movw	r0, #0
   3899c:	str	r0, [sp]
   389a0:	ldr	r0, [sp, #4]
   389a4:	mvn	r1, #0
   389a8:	add	r1, r0, r1
   389ac:	str	r1, [sp, #4]
   389b0:	cmp	r0, #0
   389b4:	beq	389d4 <__assert_fail@plt+0x27280>
   389b8:	ldr	r0, [fp, #-4]
   389bc:	ldr	r1, [sp, #8]
   389c0:	bl	36e78 <__assert_fail@plt+0x25724>
   389c4:	ldr	r1, [sp]
   389c8:	orr	r0, r1, r0
   389cc:	str	r0, [sp]
   389d0:	b	389a0 <__assert_fail@plt+0x2724c>
   389d4:	ldr	r0, [sp]
   389d8:	mov	sp, fp
   389dc:	pop	{fp, pc}
   389e0:	push	{fp, lr}
   389e4:	mov	fp, sp
   389e8:	sub	sp, sp, #16
   389ec:	str	r0, [sp, #8]
   389f0:	str	r1, [sp, #4]
   389f4:	ldr	r0, [sp, #8]
   389f8:	cmp	r0, #0
   389fc:	beq	38a0c <__assert_fail@plt+0x272b8>
   38a00:	ldr	r0, [sp, #4]
   38a04:	cmp	r0, #0
   38a08:	bne	38a18 <__assert_fail@plt+0x272c4>
   38a0c:	movw	r0, #1
   38a10:	str	r0, [sp, #4]
   38a14:	str	r0, [sp, #8]
   38a18:	ldr	r0, [sp, #4]
   38a1c:	cmp	r0, #0
   38a20:	beq	38a54 <__assert_fail@plt+0x27300>
   38a24:	ldr	r0, [pc, #76]	; 38a78 <__assert_fail@plt+0x27324>
   38a28:	ldr	r1, [sp, #4]
   38a2c:	udiv	r0, r0, r1
   38a30:	ldr	r1, [sp, #8]
   38a34:	cmp	r0, r1
   38a38:	bcs	38a54 <__assert_fail@plt+0x27300>
   38a3c:	bl	11628 <__errno_location@plt>
   38a40:	movw	lr, #12
   38a44:	str	lr, [r0]
   38a48:	movw	r0, #0
   38a4c:	str	r0, [fp, #-4]
   38a50:	b	38a6c <__assert_fail@plt+0x27318>
   38a54:	ldr	r0, [sp, #8]
   38a58:	ldr	r1, [sp, #4]
   38a5c:	bl	113b8 <calloc@plt>
   38a60:	str	r0, [sp]
   38a64:	ldr	r0, [sp]
   38a68:	str	r0, [fp, #-4]
   38a6c:	ldr	r0, [fp, #-4]
   38a70:	mov	sp, fp
   38a74:	pop	{fp, pc}
   38a78:	svcvc	0x00ffffff
   38a7c:	push	{fp, lr}
   38a80:	mov	fp, sp
   38a84:	sub	sp, sp, #16
   38a88:	str	r0, [sp, #8]
   38a8c:	ldr	r0, [sp, #8]
   38a90:	cmp	r0, #0
   38a94:	bne	38aa0 <__assert_fail@plt+0x2734c>
   38a98:	movw	r0, #1
   38a9c:	str	r0, [sp, #8]
   38aa0:	ldr	r0, [pc, #64]	; 38ae8 <__assert_fail@plt+0x27394>
   38aa4:	ldr	r1, [sp, #8]
   38aa8:	cmp	r0, r1
   38aac:	bcs	38ac8 <__assert_fail@plt+0x27374>
   38ab0:	bl	11628 <__errno_location@plt>
   38ab4:	movw	lr, #12
   38ab8:	str	lr, [r0]
   38abc:	movw	r0, #0
   38ac0:	str	r0, [fp, #-4]
   38ac4:	b	38adc <__assert_fail@plt+0x27388>
   38ac8:	ldr	r0, [sp, #8]
   38acc:	bl	11598 <malloc@plt>
   38ad0:	str	r0, [sp, #4]
   38ad4:	ldr	r0, [sp, #4]
   38ad8:	str	r0, [fp, #-4]
   38adc:	ldr	r0, [fp, #-4]
   38ae0:	mov	sp, fp
   38ae4:	pop	{fp, pc}
   38ae8:	svcvc	0x00ffffff
   38aec:	push	{fp, lr}
   38af0:	mov	fp, sp
   38af4:	sub	sp, sp, #16
   38af8:	str	r0, [sp, #8]
   38afc:	str	r1, [sp, #4]
   38b00:	ldr	r0, [sp, #8]
   38b04:	movw	r1, #0
   38b08:	cmp	r0, r1
   38b0c:	bne	38b20 <__assert_fail@plt+0x273cc>
   38b10:	ldr	r0, [sp, #4]
   38b14:	bl	38a7c <__assert_fail@plt+0x27328>
   38b18:	str	r0, [fp, #-4]
   38b1c:	b	38b80 <__assert_fail@plt+0x2742c>
   38b20:	ldr	r0, [sp, #4]
   38b24:	cmp	r0, #0
   38b28:	bne	38b40 <__assert_fail@plt+0x273ec>
   38b2c:	ldr	r0, [sp, #8]
   38b30:	bl	1604c <__assert_fail@plt+0x48f8>
   38b34:	movw	r0, #0
   38b38:	str	r0, [fp, #-4]
   38b3c:	b	38b80 <__assert_fail@plt+0x2742c>
   38b40:	ldr	r0, [pc, #68]	; 38b8c <__assert_fail@plt+0x27438>
   38b44:	ldr	r1, [sp, #4]
   38b48:	cmp	r0, r1
   38b4c:	bcs	38b68 <__assert_fail@plt+0x27414>
   38b50:	bl	11628 <__errno_location@plt>
   38b54:	movw	lr, #12
   38b58:	str	lr, [r0]
   38b5c:	movw	r0, #0
   38b60:	str	r0, [fp, #-4]
   38b64:	b	38b80 <__assert_fail@plt+0x2742c>
   38b68:	ldr	r0, [sp, #8]
   38b6c:	ldr	r1, [sp, #4]
   38b70:	bl	114f0 <realloc@plt>
   38b74:	str	r0, [sp]
   38b78:	ldr	r0, [sp]
   38b7c:	str	r0, [fp, #-4]
   38b80:	ldr	r0, [fp, #-4]
   38b84:	mov	sp, fp
   38b88:	pop	{fp, pc}
   38b8c:	svcvc	0x00ffffff
   38b90:	push	{fp, lr}
   38b94:	mov	fp, sp
   38b98:	sub	sp, sp, #24
   38b9c:	str	r0, [fp, #-8]
   38ba0:	str	r1, [sp, #12]
   38ba4:	ldr	r0, [fp, #-8]
   38ba8:	str	r0, [sp, #8]
   38bac:	ldr	r0, [sp, #12]
   38bb0:	str	r0, [sp, #4]
   38bb4:	ldr	r0, [sp, #8]
   38bb8:	ldr	r1, [sp, #4]
   38bbc:	cmp	r0, r1
   38bc0:	bne	38bd0 <__assert_fail@plt+0x2747c>
   38bc4:	movw	r0, #0
   38bc8:	str	r0, [fp, #-4]
   38bcc:	b	38c3c <__assert_fail@plt+0x274e8>
   38bd0:	b	38bd4 <__assert_fail@plt+0x27480>
   38bd4:	ldr	r0, [sp, #8]
   38bd8:	ldrb	r0, [r0]
   38bdc:	bl	3c1a8 <__assert_fail@plt+0x2aa54>
   38be0:	strb	r0, [sp, #3]
   38be4:	ldr	r0, [sp, #4]
   38be8:	ldrb	r0, [r0]
   38bec:	bl	3c1a8 <__assert_fail@plt+0x2aa54>
   38bf0:	strb	r0, [sp, #2]
   38bf4:	ldrb	r0, [sp, #3]
   38bf8:	cmp	r0, #0
   38bfc:	bne	38c04 <__assert_fail@plt+0x274b0>
   38c00:	b	38c2c <__assert_fail@plt+0x274d8>
   38c04:	ldr	r0, [sp, #8]
   38c08:	add	r0, r0, #1
   38c0c:	str	r0, [sp, #8]
   38c10:	ldr	r0, [sp, #4]
   38c14:	add	r0, r0, #1
   38c18:	str	r0, [sp, #4]
   38c1c:	ldrb	r0, [sp, #3]
   38c20:	ldrb	r1, [sp, #2]
   38c24:	cmp	r0, r1
   38c28:	beq	38bd4 <__assert_fail@plt+0x27480>
   38c2c:	ldrb	r0, [sp, #3]
   38c30:	ldrb	r1, [sp, #2]
   38c34:	sub	r0, r0, r1
   38c38:	str	r0, [fp, #-4]
   38c3c:	ldr	r0, [fp, #-4]
   38c40:	mov	sp, fp
   38c44:	pop	{fp, pc}
   38c48:	push	{fp, lr}
   38c4c:	mov	fp, sp
   38c50:	sub	sp, sp, #16
   38c54:	str	r0, [sp, #8]
   38c58:	ldr	r0, [sp, #8]
   38c5c:	bl	1155c <__fpending@plt>
   38c60:	cmp	r0, #0
   38c64:	movw	r0, #0
   38c68:	movne	r0, #1
   38c6c:	and	r0, r0, #1
   38c70:	strb	r0, [sp, #7]
   38c74:	ldr	r0, [sp, #8]
   38c78:	bl	11568 <ferror_unlocked@plt>
   38c7c:	cmp	r0, #0
   38c80:	movw	r0, #0
   38c84:	movne	r0, #1
   38c88:	and	r0, r0, #1
   38c8c:	strb	r0, [sp, #6]
   38c90:	ldr	r0, [sp, #8]
   38c94:	bl	15cdc <__assert_fail@plt+0x4588>
   38c98:	cmp	r0, #0
   38c9c:	movw	r0, #0
   38ca0:	movne	r0, #1
   38ca4:	and	r0, r0, #1
   38ca8:	strb	r0, [sp, #5]
   38cac:	ldrb	r0, [sp, #6]
   38cb0:	tst	r0, #1
   38cb4:	bne	38ce0 <__assert_fail@plt+0x2758c>
   38cb8:	ldrb	r0, [sp, #5]
   38cbc:	tst	r0, #1
   38cc0:	beq	38d04 <__assert_fail@plt+0x275b0>
   38cc4:	ldrb	r0, [sp, #7]
   38cc8:	tst	r0, #1
   38ccc:	bne	38ce0 <__assert_fail@plt+0x2758c>
   38cd0:	bl	11628 <__errno_location@plt>
   38cd4:	ldr	r0, [r0]
   38cd8:	cmp	r0, #9
   38cdc:	beq	38d04 <__assert_fail@plt+0x275b0>
   38ce0:	ldrb	r0, [sp, #5]
   38ce4:	tst	r0, #1
   38ce8:	bne	38cf8 <__assert_fail@plt+0x275a4>
   38cec:	bl	11628 <__errno_location@plt>
   38cf0:	movw	lr, #0
   38cf4:	str	lr, [r0]
   38cf8:	mvn	r0, #0
   38cfc:	str	r0, [fp, #-4]
   38d00:	b	38d0c <__assert_fail@plt+0x275b8>
   38d04:	movw	r0, #0
   38d08:	str	r0, [fp, #-4]
   38d0c:	ldr	r0, [fp, #-4]
   38d10:	mov	sp, fp
   38d14:	pop	{fp, pc}
   38d18:	push	{fp, lr}
   38d1c:	mov	fp, sp
   38d20:	sub	sp, sp, #184	; 0xb8
   38d24:	str	r0, [fp, #-8]
   38d28:	str	r1, [fp, #-12]
   38d2c:	str	r2, [fp, #-16]
   38d30:	str	r3, [fp, #-20]	; 0xffffffec
   38d34:	ldr	r0, [fp, #-12]
   38d38:	ldr	r1, [fp, #-8]
   38d3c:	ldr	r1, [r1, #4]
   38d40:	cmp	r0, r1
   38d44:	bhi	38d64 <__assert_fail@plt+0x27610>
   38d48:	ldr	r0, [fp, #-12]
   38d4c:	ldr	r1, [fp, #-8]
   38d50:	str	r0, [r1]
   38d54:	movw	r0, #1
   38d58:	and	r0, r0, #1
   38d5c:	strb	r0, [fp, #-1]
   38d60:	b	3a184 <__assert_fail@plt+0x28a30>
   38d64:	b	3911c <__assert_fail@plt+0x279c8>
   38d68:	b	38f3c <__assert_fail@plt+0x277e8>
   38d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38d70:	cmp	r0, #0
   38d74:	bcs	38e78 <__assert_fail@plt+0x27724>
   38d78:	ldr	r0, [fp, #-12]
   38d7c:	cmp	r0, #0
   38d80:	bcs	38e08 <__assert_fail@plt+0x276b4>
   38d84:	b	38da4 <__assert_fail@plt+0x27650>
   38d88:	ldr	r0, [fp, #-12]
   38d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d90:	movw	r2, #127	; 0x7f
   38d94:	udiv	r1, r2, r1
   38d98:	cmp	r0, r1
   38d9c:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38da0:	b	38f24 <__assert_fail@plt+0x277d0>
   38da4:	b	38db8 <__assert_fail@plt+0x27664>
   38da8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38dac:	cmp	r0, #1
   38db0:	bcc	38dc8 <__assert_fail@plt+0x27674>
   38db4:	b	38dd4 <__assert_fail@plt+0x27680>
   38db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38dbc:	movw	r1, #0
   38dc0:	cmp	r1, r0
   38dc4:	bcs	38dd4 <__assert_fail@plt+0x27680>
   38dc8:	movw	r0, #0
   38dcc:	str	r0, [fp, #-32]	; 0xffffffe0
   38dd0:	b	38dec <__assert_fail@plt+0x27698>
   38dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38dd8:	movw	r1, #0
   38ddc:	sub	r0, r1, r0
   38de0:	movw	r1, #127	; 0x7f
   38de4:	udiv	r0, r1, r0
   38de8:	str	r0, [fp, #-32]	; 0xffffffe0
   38dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38df0:	ldr	r1, [fp, #-12]
   38df4:	mvn	r2, #0
   38df8:	sub	r1, r2, r1
   38dfc:	cmp	r0, r1
   38e00:	bls	38f0c <__assert_fail@plt+0x277b8>
   38e04:	b	38f24 <__assert_fail@plt+0x277d0>
   38e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   38e0c:	cmn	r0, #1
   38e10:	bne	38e5c <__assert_fail@plt+0x27708>
   38e14:	b	38e34 <__assert_fail@plt+0x276e0>
   38e18:	ldr	r0, [fp, #-12]
   38e1c:	mvn	r1, #127	; 0x7f
   38e20:	add	r0, r0, r1
   38e24:	movw	r1, #0
   38e28:	cmp	r1, r0
   38e2c:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38e30:	b	38f24 <__assert_fail@plt+0x277d0>
   38e34:	ldr	r0, [fp, #-12]
   38e38:	movw	r1, #0
   38e3c:	cmp	r1, r0
   38e40:	bcs	38f24 <__assert_fail@plt+0x277d0>
   38e44:	ldr	r0, [fp, #-12]
   38e48:	sub	r0, r0, #1
   38e4c:	movw	r1, #127	; 0x7f
   38e50:	cmp	r1, r0
   38e54:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38e58:	b	38f24 <__assert_fail@plt+0x277d0>
   38e5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38e60:	mvn	r1, #127	; 0x7f
   38e64:	udiv	r0, r1, r0
   38e68:	ldr	r1, [fp, #-12]
   38e6c:	cmp	r0, r1
   38e70:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38e74:	b	38f24 <__assert_fail@plt+0x277d0>
   38e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   38e7c:	cmp	r0, #0
   38e80:	bne	38e88 <__assert_fail@plt+0x27734>
   38e84:	b	38f24 <__assert_fail@plt+0x277d0>
   38e88:	ldr	r0, [fp, #-12]
   38e8c:	cmp	r0, #0
   38e90:	bcs	38ef4 <__assert_fail@plt+0x277a0>
   38e94:	ldr	r0, [fp, #-12]
   38e98:	cmn	r0, #1
   38e9c:	bne	38ed8 <__assert_fail@plt+0x27784>
   38ea0:	b	38ec0 <__assert_fail@plt+0x2776c>
   38ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ea8:	mvn	r1, #127	; 0x7f
   38eac:	add	r0, r0, r1
   38eb0:	movw	r1, #0
   38eb4:	cmp	r1, r0
   38eb8:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38ebc:	b	38f24 <__assert_fail@plt+0x277d0>
   38ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ec4:	sub	r0, r0, #1
   38ec8:	movw	r1, #127	; 0x7f
   38ecc:	cmp	r1, r0
   38ed0:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38ed4:	b	38f24 <__assert_fail@plt+0x277d0>
   38ed8:	ldr	r0, [fp, #-12]
   38edc:	mvn	r1, #127	; 0x7f
   38ee0:	udiv	r0, r1, r0
   38ee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   38ee8:	cmp	r0, r1
   38eec:	bcc	38f0c <__assert_fail@plt+0x277b8>
   38ef0:	b	38f24 <__assert_fail@plt+0x277d0>
   38ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ef8:	movw	r1, #127	; 0x7f
   38efc:	udiv	r0, r1, r0
   38f00:	ldr	r1, [fp, #-12]
   38f04:	cmp	r0, r1
   38f08:	bcs	38f24 <__assert_fail@plt+0x277d0>
   38f0c:	ldr	r0, [fp, #-12]
   38f10:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f14:	mul	r0, r0, r1
   38f18:	sxtb	r0, r0
   38f1c:	str	r0, [fp, #-24]	; 0xffffffe8
   38f20:	b	3a09c <__assert_fail@plt+0x28948>
   38f24:	ldr	r0, [fp, #-12]
   38f28:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f2c:	mul	r0, r0, r1
   38f30:	sxtb	r0, r0
   38f34:	str	r0, [fp, #-24]	; 0xffffffe8
   38f38:	b	3a0b8 <__assert_fail@plt+0x28964>
   38f3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f40:	cmp	r0, #0
   38f44:	bcs	39050 <__assert_fail@plt+0x278fc>
   38f48:	ldr	r0, [fp, #-12]
   38f4c:	cmp	r0, #0
   38f50:	bcs	38fd8 <__assert_fail@plt+0x27884>
   38f54:	b	38f74 <__assert_fail@plt+0x27820>
   38f58:	ldr	r0, [fp, #-12]
   38f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f60:	movw	r2, #255	; 0xff
   38f64:	udiv	r1, r2, r1
   38f68:	cmp	r0, r1
   38f6c:	bcc	390ec <__assert_fail@plt+0x27998>
   38f70:	b	39104 <__assert_fail@plt+0x279b0>
   38f74:	b	38f88 <__assert_fail@plt+0x27834>
   38f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f7c:	cmp	r0, #1
   38f80:	bcc	38f98 <__assert_fail@plt+0x27844>
   38f84:	b	38fa4 <__assert_fail@plt+0x27850>
   38f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f8c:	movw	r1, #0
   38f90:	cmp	r1, r0
   38f94:	bcs	38fa4 <__assert_fail@plt+0x27850>
   38f98:	movw	r0, #0
   38f9c:	str	r0, [fp, #-36]	; 0xffffffdc
   38fa0:	b	38fbc <__assert_fail@plt+0x27868>
   38fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38fa8:	movw	r1, #0
   38fac:	sub	r0, r1, r0
   38fb0:	movw	r1, #255	; 0xff
   38fb4:	udiv	r0, r1, r0
   38fb8:	str	r0, [fp, #-36]	; 0xffffffdc
   38fbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38fc0:	ldr	r1, [fp, #-12]
   38fc4:	mvn	r2, #0
   38fc8:	sub	r1, r2, r1
   38fcc:	cmp	r0, r1
   38fd0:	bls	390ec <__assert_fail@plt+0x27998>
   38fd4:	b	39104 <__assert_fail@plt+0x279b0>
   38fd8:	b	38fe0 <__assert_fail@plt+0x2788c>
   38fdc:	b	38fe4 <__assert_fail@plt+0x27890>
   38fe0:	b	39034 <__assert_fail@plt+0x278e0>
   38fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38fe8:	cmn	r0, #1
   38fec:	bne	39034 <__assert_fail@plt+0x278e0>
   38ff0:	b	3900c <__assert_fail@plt+0x278b8>
   38ff4:	ldr	r0, [fp, #-12]
   38ff8:	add	r0, r0, #0
   38ffc:	movw	r1, #0
   39000:	cmp	r1, r0
   39004:	bcc	390ec <__assert_fail@plt+0x27998>
   39008:	b	39104 <__assert_fail@plt+0x279b0>
   3900c:	ldr	r0, [fp, #-12]
   39010:	movw	r1, #0
   39014:	cmp	r1, r0
   39018:	bcs	39104 <__assert_fail@plt+0x279b0>
   3901c:	ldr	r0, [fp, #-12]
   39020:	sub	r0, r0, #1
   39024:	mvn	r1, #0
   39028:	cmp	r1, r0
   3902c:	bcc	390ec <__assert_fail@plt+0x27998>
   39030:	b	39104 <__assert_fail@plt+0x279b0>
   39034:	ldr	r0, [fp, #-20]	; 0xffffffec
   39038:	movw	r1, #0
   3903c:	udiv	r0, r1, r0
   39040:	ldr	r1, [fp, #-12]
   39044:	cmp	r0, r1
   39048:	bcc	390ec <__assert_fail@plt+0x27998>
   3904c:	b	39104 <__assert_fail@plt+0x279b0>
   39050:	ldr	r0, [fp, #-20]	; 0xffffffec
   39054:	cmp	r0, #0
   39058:	bne	39060 <__assert_fail@plt+0x2790c>
   3905c:	b	39104 <__assert_fail@plt+0x279b0>
   39060:	ldr	r0, [fp, #-12]
   39064:	cmp	r0, #0
   39068:	bcs	390d4 <__assert_fail@plt+0x27980>
   3906c:	b	39074 <__assert_fail@plt+0x27920>
   39070:	b	39078 <__assert_fail@plt+0x27924>
   39074:	b	390b8 <__assert_fail@plt+0x27964>
   39078:	ldr	r0, [fp, #-12]
   3907c:	cmn	r0, #1
   39080:	bne	390b8 <__assert_fail@plt+0x27964>
   39084:	b	390a0 <__assert_fail@plt+0x2794c>
   39088:	ldr	r0, [fp, #-20]	; 0xffffffec
   3908c:	add	r0, r0, #0
   39090:	movw	r1, #0
   39094:	cmp	r1, r0
   39098:	bcc	390ec <__assert_fail@plt+0x27998>
   3909c:	b	39104 <__assert_fail@plt+0x279b0>
   390a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   390a4:	sub	r0, r0, #1
   390a8:	mvn	r1, #0
   390ac:	cmp	r1, r0
   390b0:	bcc	390ec <__assert_fail@plt+0x27998>
   390b4:	b	39104 <__assert_fail@plt+0x279b0>
   390b8:	ldr	r0, [fp, #-12]
   390bc:	movw	r1, #0
   390c0:	udiv	r0, r1, r0
   390c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   390c8:	cmp	r0, r1
   390cc:	bcc	390ec <__assert_fail@plt+0x27998>
   390d0:	b	39104 <__assert_fail@plt+0x279b0>
   390d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   390d8:	movw	r1, #255	; 0xff
   390dc:	udiv	r0, r1, r0
   390e0:	ldr	r1, [fp, #-12]
   390e4:	cmp	r0, r1
   390e8:	bcs	39104 <__assert_fail@plt+0x279b0>
   390ec:	ldr	r0, [fp, #-12]
   390f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   390f4:	mul	r0, r0, r1
   390f8:	and	r0, r0, #255	; 0xff
   390fc:	str	r0, [fp, #-24]	; 0xffffffe8
   39100:	b	3a09c <__assert_fail@plt+0x28948>
   39104:	ldr	r0, [fp, #-12]
   39108:	ldr	r1, [fp, #-20]	; 0xffffffec
   3910c:	mul	r0, r0, r1
   39110:	and	r0, r0, #255	; 0xff
   39114:	str	r0, [fp, #-24]	; 0xffffffe8
   39118:	b	3a0b8 <__assert_fail@plt+0x28964>
   3911c:	b	394d4 <__assert_fail@plt+0x27d80>
   39120:	b	392f4 <__assert_fail@plt+0x27ba0>
   39124:	ldr	r0, [fp, #-20]	; 0xffffffec
   39128:	cmp	r0, #0
   3912c:	bcs	39230 <__assert_fail@plt+0x27adc>
   39130:	ldr	r0, [fp, #-12]
   39134:	cmp	r0, #0
   39138:	bcs	391c0 <__assert_fail@plt+0x27a6c>
   3913c:	b	3915c <__assert_fail@plt+0x27a08>
   39140:	ldr	r0, [fp, #-12]
   39144:	ldr	r1, [fp, #-20]	; 0xffffffec
   39148:	movw	r2, #32767	; 0x7fff
   3914c:	udiv	r1, r2, r1
   39150:	cmp	r0, r1
   39154:	bcc	392c4 <__assert_fail@plt+0x27b70>
   39158:	b	392dc <__assert_fail@plt+0x27b88>
   3915c:	b	39170 <__assert_fail@plt+0x27a1c>
   39160:	ldr	r0, [fp, #-20]	; 0xffffffec
   39164:	cmp	r0, #1
   39168:	bcc	39180 <__assert_fail@plt+0x27a2c>
   3916c:	b	3918c <__assert_fail@plt+0x27a38>
   39170:	ldr	r0, [fp, #-20]	; 0xffffffec
   39174:	movw	r1, #0
   39178:	cmp	r1, r0
   3917c:	bcs	3918c <__assert_fail@plt+0x27a38>
   39180:	movw	r0, #0
   39184:	str	r0, [fp, #-40]	; 0xffffffd8
   39188:	b	391a4 <__assert_fail@plt+0x27a50>
   3918c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39190:	movw	r1, #0
   39194:	sub	r0, r1, r0
   39198:	movw	r1, #32767	; 0x7fff
   3919c:	udiv	r0, r1, r0
   391a0:	str	r0, [fp, #-40]	; 0xffffffd8
   391a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   391a8:	ldr	r1, [fp, #-12]
   391ac:	mvn	r2, #0
   391b0:	sub	r1, r2, r1
   391b4:	cmp	r0, r1
   391b8:	bls	392c4 <__assert_fail@plt+0x27b70>
   391bc:	b	392dc <__assert_fail@plt+0x27b88>
   391c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   391c4:	cmn	r0, #1
   391c8:	bne	39214 <__assert_fail@plt+0x27ac0>
   391cc:	b	391ec <__assert_fail@plt+0x27a98>
   391d0:	ldr	r0, [pc, #4036]	; 3a19c <__assert_fail@plt+0x28a48>
   391d4:	ldr	r1, [fp, #-12]
   391d8:	add	r0, r1, r0
   391dc:	movw	r1, #0
   391e0:	cmp	r1, r0
   391e4:	bcc	392c4 <__assert_fail@plt+0x27b70>
   391e8:	b	392dc <__assert_fail@plt+0x27b88>
   391ec:	ldr	r0, [fp, #-12]
   391f0:	movw	r1, #0
   391f4:	cmp	r1, r0
   391f8:	bcs	392dc <__assert_fail@plt+0x27b88>
   391fc:	ldr	r0, [fp, #-12]
   39200:	sub	r0, r0, #1
   39204:	movw	r1, #32767	; 0x7fff
   39208:	cmp	r1, r0
   3920c:	bcc	392c4 <__assert_fail@plt+0x27b70>
   39210:	b	392dc <__assert_fail@plt+0x27b88>
   39214:	ldr	r0, [pc, #3968]	; 3a19c <__assert_fail@plt+0x28a48>
   39218:	ldr	r1, [fp, #-20]	; 0xffffffec
   3921c:	udiv	r0, r0, r1
   39220:	ldr	r1, [fp, #-12]
   39224:	cmp	r0, r1
   39228:	bcc	392c4 <__assert_fail@plt+0x27b70>
   3922c:	b	392dc <__assert_fail@plt+0x27b88>
   39230:	ldr	r0, [fp, #-20]	; 0xffffffec
   39234:	cmp	r0, #0
   39238:	bne	39240 <__assert_fail@plt+0x27aec>
   3923c:	b	392dc <__assert_fail@plt+0x27b88>
   39240:	ldr	r0, [fp, #-12]
   39244:	cmp	r0, #0
   39248:	bcs	392ac <__assert_fail@plt+0x27b58>
   3924c:	ldr	r0, [fp, #-12]
   39250:	cmn	r0, #1
   39254:	bne	39290 <__assert_fail@plt+0x27b3c>
   39258:	b	39278 <__assert_fail@plt+0x27b24>
   3925c:	ldr	r0, [pc, #3896]	; 3a19c <__assert_fail@plt+0x28a48>
   39260:	ldr	r1, [fp, #-20]	; 0xffffffec
   39264:	add	r0, r1, r0
   39268:	movw	r1, #0
   3926c:	cmp	r1, r0
   39270:	bcc	392c4 <__assert_fail@plt+0x27b70>
   39274:	b	392dc <__assert_fail@plt+0x27b88>
   39278:	ldr	r0, [fp, #-20]	; 0xffffffec
   3927c:	sub	r0, r0, #1
   39280:	movw	r1, #32767	; 0x7fff
   39284:	cmp	r1, r0
   39288:	bcc	392c4 <__assert_fail@plt+0x27b70>
   3928c:	b	392dc <__assert_fail@plt+0x27b88>
   39290:	ldr	r0, [pc, #3844]	; 3a19c <__assert_fail@plt+0x28a48>
   39294:	ldr	r1, [fp, #-12]
   39298:	udiv	r0, r0, r1
   3929c:	ldr	r1, [fp, #-20]	; 0xffffffec
   392a0:	cmp	r0, r1
   392a4:	bcc	392c4 <__assert_fail@plt+0x27b70>
   392a8:	b	392dc <__assert_fail@plt+0x27b88>
   392ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   392b0:	movw	r1, #32767	; 0x7fff
   392b4:	udiv	r0, r1, r0
   392b8:	ldr	r1, [fp, #-12]
   392bc:	cmp	r0, r1
   392c0:	bcs	392dc <__assert_fail@plt+0x27b88>
   392c4:	ldr	r0, [fp, #-12]
   392c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   392cc:	mul	r0, r0, r1
   392d0:	sxth	r0, r0
   392d4:	str	r0, [fp, #-24]	; 0xffffffe8
   392d8:	b	3a09c <__assert_fail@plt+0x28948>
   392dc:	ldr	r0, [fp, #-12]
   392e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   392e4:	mul	r0, r0, r1
   392e8:	sxth	r0, r0
   392ec:	str	r0, [fp, #-24]	; 0xffffffe8
   392f0:	b	3a0b8 <__assert_fail@plt+0x28964>
   392f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   392f8:	cmp	r0, #0
   392fc:	bcs	39408 <__assert_fail@plt+0x27cb4>
   39300:	ldr	r0, [fp, #-12]
   39304:	cmp	r0, #0
   39308:	bcs	39390 <__assert_fail@plt+0x27c3c>
   3930c:	b	3932c <__assert_fail@plt+0x27bd8>
   39310:	ldr	r0, [fp, #-12]
   39314:	ldr	r1, [fp, #-20]	; 0xffffffec
   39318:	movw	r2, #65535	; 0xffff
   3931c:	udiv	r1, r2, r1
   39320:	cmp	r0, r1
   39324:	bcc	394a4 <__assert_fail@plt+0x27d50>
   39328:	b	394bc <__assert_fail@plt+0x27d68>
   3932c:	b	39340 <__assert_fail@plt+0x27bec>
   39330:	ldr	r0, [fp, #-20]	; 0xffffffec
   39334:	cmp	r0, #1
   39338:	bcc	39350 <__assert_fail@plt+0x27bfc>
   3933c:	b	3935c <__assert_fail@plt+0x27c08>
   39340:	ldr	r0, [fp, #-20]	; 0xffffffec
   39344:	movw	r1, #0
   39348:	cmp	r1, r0
   3934c:	bcs	3935c <__assert_fail@plt+0x27c08>
   39350:	movw	r0, #0
   39354:	str	r0, [fp, #-44]	; 0xffffffd4
   39358:	b	39374 <__assert_fail@plt+0x27c20>
   3935c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39360:	movw	r1, #0
   39364:	sub	r0, r1, r0
   39368:	movw	r1, #65535	; 0xffff
   3936c:	udiv	r0, r1, r0
   39370:	str	r0, [fp, #-44]	; 0xffffffd4
   39374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39378:	ldr	r1, [fp, #-12]
   3937c:	mvn	r2, #0
   39380:	sub	r1, r2, r1
   39384:	cmp	r0, r1
   39388:	bls	394a4 <__assert_fail@plt+0x27d50>
   3938c:	b	394bc <__assert_fail@plt+0x27d68>
   39390:	b	39398 <__assert_fail@plt+0x27c44>
   39394:	b	3939c <__assert_fail@plt+0x27c48>
   39398:	b	393ec <__assert_fail@plt+0x27c98>
   3939c:	ldr	r0, [fp, #-20]	; 0xffffffec
   393a0:	cmn	r0, #1
   393a4:	bne	393ec <__assert_fail@plt+0x27c98>
   393a8:	b	393c4 <__assert_fail@plt+0x27c70>
   393ac:	ldr	r0, [fp, #-12]
   393b0:	add	r0, r0, #0
   393b4:	movw	r1, #0
   393b8:	cmp	r1, r0
   393bc:	bcc	394a4 <__assert_fail@plt+0x27d50>
   393c0:	b	394bc <__assert_fail@plt+0x27d68>
   393c4:	ldr	r0, [fp, #-12]
   393c8:	movw	r1, #0
   393cc:	cmp	r1, r0
   393d0:	bcs	394bc <__assert_fail@plt+0x27d68>
   393d4:	ldr	r0, [fp, #-12]
   393d8:	sub	r0, r0, #1
   393dc:	mvn	r1, #0
   393e0:	cmp	r1, r0
   393e4:	bcc	394a4 <__assert_fail@plt+0x27d50>
   393e8:	b	394bc <__assert_fail@plt+0x27d68>
   393ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   393f0:	movw	r1, #0
   393f4:	udiv	r0, r1, r0
   393f8:	ldr	r1, [fp, #-12]
   393fc:	cmp	r0, r1
   39400:	bcc	394a4 <__assert_fail@plt+0x27d50>
   39404:	b	394bc <__assert_fail@plt+0x27d68>
   39408:	ldr	r0, [fp, #-20]	; 0xffffffec
   3940c:	cmp	r0, #0
   39410:	bne	39418 <__assert_fail@plt+0x27cc4>
   39414:	b	394bc <__assert_fail@plt+0x27d68>
   39418:	ldr	r0, [fp, #-12]
   3941c:	cmp	r0, #0
   39420:	bcs	3948c <__assert_fail@plt+0x27d38>
   39424:	b	3942c <__assert_fail@plt+0x27cd8>
   39428:	b	39430 <__assert_fail@plt+0x27cdc>
   3942c:	b	39470 <__assert_fail@plt+0x27d1c>
   39430:	ldr	r0, [fp, #-12]
   39434:	cmn	r0, #1
   39438:	bne	39470 <__assert_fail@plt+0x27d1c>
   3943c:	b	39458 <__assert_fail@plt+0x27d04>
   39440:	ldr	r0, [fp, #-20]	; 0xffffffec
   39444:	add	r0, r0, #0
   39448:	movw	r1, #0
   3944c:	cmp	r1, r0
   39450:	bcc	394a4 <__assert_fail@plt+0x27d50>
   39454:	b	394bc <__assert_fail@plt+0x27d68>
   39458:	ldr	r0, [fp, #-20]	; 0xffffffec
   3945c:	sub	r0, r0, #1
   39460:	mvn	r1, #0
   39464:	cmp	r1, r0
   39468:	bcc	394a4 <__assert_fail@plt+0x27d50>
   3946c:	b	394bc <__assert_fail@plt+0x27d68>
   39470:	ldr	r0, [fp, #-12]
   39474:	movw	r1, #0
   39478:	udiv	r0, r1, r0
   3947c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39480:	cmp	r0, r1
   39484:	bcc	394a4 <__assert_fail@plt+0x27d50>
   39488:	b	394bc <__assert_fail@plt+0x27d68>
   3948c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39490:	movw	r1, #65535	; 0xffff
   39494:	udiv	r0, r1, r0
   39498:	ldr	r1, [fp, #-12]
   3949c:	cmp	r0, r1
   394a0:	bcs	394bc <__assert_fail@plt+0x27d68>
   394a4:	ldr	r0, [fp, #-12]
   394a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   394ac:	mul	r0, r0, r1
   394b0:	uxth	r0, r0
   394b4:	str	r0, [fp, #-24]	; 0xffffffe8
   394b8:	b	3a09c <__assert_fail@plt+0x28948>
   394bc:	ldr	r0, [fp, #-12]
   394c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   394c4:	mul	r0, r0, r1
   394c8:	uxth	r0, r0
   394cc:	str	r0, [fp, #-24]	; 0xffffffe8
   394d0:	b	3a0b8 <__assert_fail@plt+0x28964>
   394d4:	b	394d8 <__assert_fail@plt+0x27d84>
   394d8:	b	3969c <__assert_fail@plt+0x27f48>
   394dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   394e0:	cmp	r0, #0
   394e4:	bcs	395e4 <__assert_fail@plt+0x27e90>
   394e8:	ldr	r0, [fp, #-12]
   394ec:	cmp	r0, #0
   394f0:	bcs	39578 <__assert_fail@plt+0x27e24>
   394f4:	b	39514 <__assert_fail@plt+0x27dc0>
   394f8:	ldr	r0, [pc, #3220]	; 3a194 <__assert_fail@plt+0x28a40>
   394fc:	ldr	r1, [fp, #-12]
   39500:	ldr	r2, [fp, #-20]	; 0xffffffec
   39504:	udiv	r0, r0, r2
   39508:	cmp	r1, r0
   3950c:	bcc	39674 <__assert_fail@plt+0x27f20>
   39510:	b	39688 <__assert_fail@plt+0x27f34>
   39514:	b	39528 <__assert_fail@plt+0x27dd4>
   39518:	ldr	r0, [fp, #-20]	; 0xffffffec
   3951c:	cmp	r0, #1
   39520:	bcc	39538 <__assert_fail@plt+0x27de4>
   39524:	b	39544 <__assert_fail@plt+0x27df0>
   39528:	ldr	r0, [fp, #-20]	; 0xffffffec
   3952c:	movw	r1, #0
   39530:	cmp	r1, r0
   39534:	bcs	39544 <__assert_fail@plt+0x27df0>
   39538:	movw	r0, #0
   3953c:	str	r0, [fp, #-48]	; 0xffffffd0
   39540:	b	3955c <__assert_fail@plt+0x27e08>
   39544:	ldr	r0, [pc, #3144]	; 3a194 <__assert_fail@plt+0x28a40>
   39548:	ldr	r1, [fp, #-20]	; 0xffffffec
   3954c:	movw	r2, #0
   39550:	sub	r1, r2, r1
   39554:	udiv	r0, r0, r1
   39558:	str	r0, [fp, #-48]	; 0xffffffd0
   3955c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   39560:	ldr	r1, [fp, #-12]
   39564:	mvn	r2, #0
   39568:	sub	r1, r2, r1
   3956c:	cmp	r0, r1
   39570:	bls	39674 <__assert_fail@plt+0x27f20>
   39574:	b	39688 <__assert_fail@plt+0x27f34>
   39578:	ldr	r0, [fp, #-20]	; 0xffffffec
   3957c:	cmn	r0, #1
   39580:	bne	395c8 <__assert_fail@plt+0x27e74>
   39584:	b	395a0 <__assert_fail@plt+0x27e4c>
   39588:	ldr	r0, [fp, #-12]
   3958c:	add	r0, r0, #-2147483648	; 0x80000000
   39590:	movw	r1, #0
   39594:	cmp	r1, r0
   39598:	bcc	39674 <__assert_fail@plt+0x27f20>
   3959c:	b	39688 <__assert_fail@plt+0x27f34>
   395a0:	ldr	r0, [fp, #-12]
   395a4:	movw	r1, #0
   395a8:	cmp	r1, r0
   395ac:	bcs	39688 <__assert_fail@plt+0x27f34>
   395b0:	ldr	r0, [pc, #3036]	; 3a194 <__assert_fail@plt+0x28a40>
   395b4:	ldr	r1, [fp, #-12]
   395b8:	sub	r1, r1, #1
   395bc:	cmp	r0, r1
   395c0:	bcc	39674 <__assert_fail@plt+0x27f20>
   395c4:	b	39688 <__assert_fail@plt+0x27f34>
   395c8:	ldr	r0, [pc, #3016]	; 3a198 <__assert_fail@plt+0x28a44>
   395cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   395d0:	udiv	r0, r0, r1
   395d4:	ldr	r1, [fp, #-12]
   395d8:	cmp	r0, r1
   395dc:	bcc	39674 <__assert_fail@plt+0x27f20>
   395e0:	b	39688 <__assert_fail@plt+0x27f34>
   395e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   395e8:	cmp	r0, #0
   395ec:	bne	395f4 <__assert_fail@plt+0x27ea0>
   395f0:	b	39688 <__assert_fail@plt+0x27f34>
   395f4:	ldr	r0, [fp, #-12]
   395f8:	cmp	r0, #0
   395fc:	bcs	3965c <__assert_fail@plt+0x27f08>
   39600:	ldr	r0, [fp, #-12]
   39604:	cmn	r0, #1
   39608:	bne	39640 <__assert_fail@plt+0x27eec>
   3960c:	b	39628 <__assert_fail@plt+0x27ed4>
   39610:	ldr	r0, [fp, #-20]	; 0xffffffec
   39614:	add	r0, r0, #-2147483648	; 0x80000000
   39618:	movw	r1, #0
   3961c:	cmp	r1, r0
   39620:	bcc	39674 <__assert_fail@plt+0x27f20>
   39624:	b	39688 <__assert_fail@plt+0x27f34>
   39628:	ldr	r0, [pc, #2916]	; 3a194 <__assert_fail@plt+0x28a40>
   3962c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39630:	sub	r1, r1, #1
   39634:	cmp	r0, r1
   39638:	bcc	39674 <__assert_fail@plt+0x27f20>
   3963c:	b	39688 <__assert_fail@plt+0x27f34>
   39640:	ldr	r0, [pc, #2896]	; 3a198 <__assert_fail@plt+0x28a44>
   39644:	ldr	r1, [fp, #-12]
   39648:	udiv	r0, r0, r1
   3964c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39650:	cmp	r0, r1
   39654:	bcc	39674 <__assert_fail@plt+0x27f20>
   39658:	b	39688 <__assert_fail@plt+0x27f34>
   3965c:	ldr	r0, [pc, #2864]	; 3a194 <__assert_fail@plt+0x28a40>
   39660:	ldr	r1, [fp, #-20]	; 0xffffffec
   39664:	udiv	r0, r0, r1
   39668:	ldr	r1, [fp, #-12]
   3966c:	cmp	r0, r1
   39670:	bcs	39688 <__assert_fail@plt+0x27f34>
   39674:	ldr	r0, [fp, #-12]
   39678:	ldr	r1, [fp, #-20]	; 0xffffffec
   3967c:	mul	r0, r0, r1
   39680:	str	r0, [fp, #-24]	; 0xffffffe8
   39684:	b	3a09c <__assert_fail@plt+0x28948>
   39688:	ldr	r0, [fp, #-12]
   3968c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39690:	mul	r0, r0, r1
   39694:	str	r0, [fp, #-24]	; 0xffffffe8
   39698:	b	3a0b8 <__assert_fail@plt+0x28964>
   3969c:	ldr	r0, [fp, #-20]	; 0xffffffec
   396a0:	cmp	r0, #0
   396a4:	bcs	397b0 <__assert_fail@plt+0x2805c>
   396a8:	ldr	r0, [fp, #-12]
   396ac:	cmp	r0, #0
   396b0:	bcs	39738 <__assert_fail@plt+0x27fe4>
   396b4:	b	396d4 <__assert_fail@plt+0x27f80>
   396b8:	ldr	r0, [fp, #-12]
   396bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   396c0:	mvn	r2, #0
   396c4:	udiv	r1, r2, r1
   396c8:	cmp	r0, r1
   396cc:	bcc	3984c <__assert_fail@plt+0x280f8>
   396d0:	b	39860 <__assert_fail@plt+0x2810c>
   396d4:	b	396e8 <__assert_fail@plt+0x27f94>
   396d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   396dc:	cmp	r0, #1
   396e0:	bcc	396f8 <__assert_fail@plt+0x27fa4>
   396e4:	b	39704 <__assert_fail@plt+0x27fb0>
   396e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   396ec:	movw	r1, #0
   396f0:	cmp	r1, r0
   396f4:	bcs	39704 <__assert_fail@plt+0x27fb0>
   396f8:	movw	r0, #1
   396fc:	str	r0, [fp, #-52]	; 0xffffffcc
   39700:	b	3971c <__assert_fail@plt+0x27fc8>
   39704:	ldr	r0, [fp, #-20]	; 0xffffffec
   39708:	movw	r1, #0
   3970c:	sub	r0, r1, r0
   39710:	mvn	r1, #0
   39714:	udiv	r0, r1, r0
   39718:	str	r0, [fp, #-52]	; 0xffffffcc
   3971c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   39720:	ldr	r1, [fp, #-12]
   39724:	mvn	r2, #0
   39728:	sub	r1, r2, r1
   3972c:	cmp	r0, r1
   39730:	bls	3984c <__assert_fail@plt+0x280f8>
   39734:	b	39860 <__assert_fail@plt+0x2810c>
   39738:	b	39740 <__assert_fail@plt+0x27fec>
   3973c:	b	39744 <__assert_fail@plt+0x27ff0>
   39740:	b	39794 <__assert_fail@plt+0x28040>
   39744:	ldr	r0, [fp, #-20]	; 0xffffffec
   39748:	cmn	r0, #1
   3974c:	bne	39794 <__assert_fail@plt+0x28040>
   39750:	b	3976c <__assert_fail@plt+0x28018>
   39754:	ldr	r0, [fp, #-12]
   39758:	add	r0, r0, #0
   3975c:	movw	r1, #0
   39760:	cmp	r1, r0
   39764:	bcc	3984c <__assert_fail@plt+0x280f8>
   39768:	b	39860 <__assert_fail@plt+0x2810c>
   3976c:	ldr	r0, [fp, #-12]
   39770:	movw	r1, #0
   39774:	cmp	r1, r0
   39778:	bcs	39860 <__assert_fail@plt+0x2810c>
   3977c:	ldr	r0, [fp, #-12]
   39780:	sub	r0, r0, #1
   39784:	mvn	r1, #0
   39788:	cmp	r1, r0
   3978c:	bcc	3984c <__assert_fail@plt+0x280f8>
   39790:	b	39860 <__assert_fail@plt+0x2810c>
   39794:	ldr	r0, [fp, #-20]	; 0xffffffec
   39798:	movw	r1, #0
   3979c:	udiv	r0, r1, r0
   397a0:	ldr	r1, [fp, #-12]
   397a4:	cmp	r0, r1
   397a8:	bcc	3984c <__assert_fail@plt+0x280f8>
   397ac:	b	39860 <__assert_fail@plt+0x2810c>
   397b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   397b4:	cmp	r0, #0
   397b8:	bne	397c0 <__assert_fail@plt+0x2806c>
   397bc:	b	39860 <__assert_fail@plt+0x2810c>
   397c0:	ldr	r0, [fp, #-12]
   397c4:	cmp	r0, #0
   397c8:	bcs	39834 <__assert_fail@plt+0x280e0>
   397cc:	b	397d4 <__assert_fail@plt+0x28080>
   397d0:	b	397d8 <__assert_fail@plt+0x28084>
   397d4:	b	39818 <__assert_fail@plt+0x280c4>
   397d8:	ldr	r0, [fp, #-12]
   397dc:	cmn	r0, #1
   397e0:	bne	39818 <__assert_fail@plt+0x280c4>
   397e4:	b	39800 <__assert_fail@plt+0x280ac>
   397e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   397ec:	add	r0, r0, #0
   397f0:	movw	r1, #0
   397f4:	cmp	r1, r0
   397f8:	bcc	3984c <__assert_fail@plt+0x280f8>
   397fc:	b	39860 <__assert_fail@plt+0x2810c>
   39800:	ldr	r0, [fp, #-20]	; 0xffffffec
   39804:	sub	r0, r0, #1
   39808:	mvn	r1, #0
   3980c:	cmp	r1, r0
   39810:	bcc	3984c <__assert_fail@plt+0x280f8>
   39814:	b	39860 <__assert_fail@plt+0x2810c>
   39818:	ldr	r0, [fp, #-12]
   3981c:	movw	r1, #0
   39820:	udiv	r0, r1, r0
   39824:	ldr	r1, [fp, #-20]	; 0xffffffec
   39828:	cmp	r0, r1
   3982c:	bcc	3984c <__assert_fail@plt+0x280f8>
   39830:	b	39860 <__assert_fail@plt+0x2810c>
   39834:	ldr	r0, [fp, #-20]	; 0xffffffec
   39838:	mvn	r1, #0
   3983c:	udiv	r0, r1, r0
   39840:	ldr	r1, [fp, #-12]
   39844:	cmp	r0, r1
   39848:	bcs	39860 <__assert_fail@plt+0x2810c>
   3984c:	ldr	r0, [fp, #-12]
   39850:	ldr	r1, [fp, #-20]	; 0xffffffec
   39854:	mul	r0, r0, r1
   39858:	str	r0, [fp, #-24]	; 0xffffffe8
   3985c:	b	3a09c <__assert_fail@plt+0x28948>
   39860:	ldr	r0, [fp, #-12]
   39864:	ldr	r1, [fp, #-20]	; 0xffffffec
   39868:	mul	r0, r0, r1
   3986c:	str	r0, [fp, #-24]	; 0xffffffe8
   39870:	b	3a0b8 <__assert_fail@plt+0x28964>
   39874:	b	39878 <__assert_fail@plt+0x28124>
   39878:	b	39a3c <__assert_fail@plt+0x282e8>
   3987c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39880:	cmp	r0, #0
   39884:	bcs	39984 <__assert_fail@plt+0x28230>
   39888:	ldr	r0, [fp, #-12]
   3988c:	cmp	r0, #0
   39890:	bcs	39918 <__assert_fail@plt+0x281c4>
   39894:	b	398b4 <__assert_fail@plt+0x28160>
   39898:	ldr	r0, [pc, #2292]	; 3a194 <__assert_fail@plt+0x28a40>
   3989c:	ldr	r1, [fp, #-12]
   398a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   398a4:	udiv	r0, r0, r2
   398a8:	cmp	r1, r0
   398ac:	bcc	39a14 <__assert_fail@plt+0x282c0>
   398b0:	b	39a28 <__assert_fail@plt+0x282d4>
   398b4:	b	398c8 <__assert_fail@plt+0x28174>
   398b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   398bc:	cmp	r0, #1
   398c0:	bcc	398d8 <__assert_fail@plt+0x28184>
   398c4:	b	398e4 <__assert_fail@plt+0x28190>
   398c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   398cc:	movw	r1, #0
   398d0:	cmp	r1, r0
   398d4:	bcs	398e4 <__assert_fail@plt+0x28190>
   398d8:	movw	r0, #0
   398dc:	str	r0, [fp, #-56]	; 0xffffffc8
   398e0:	b	398fc <__assert_fail@plt+0x281a8>
   398e4:	ldr	r0, [pc, #2216]	; 3a194 <__assert_fail@plt+0x28a40>
   398e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   398ec:	movw	r2, #0
   398f0:	sub	r1, r2, r1
   398f4:	udiv	r0, r0, r1
   398f8:	str	r0, [fp, #-56]	; 0xffffffc8
   398fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   39900:	ldr	r1, [fp, #-12]
   39904:	mvn	r2, #0
   39908:	sub	r1, r2, r1
   3990c:	cmp	r0, r1
   39910:	bls	39a14 <__assert_fail@plt+0x282c0>
   39914:	b	39a28 <__assert_fail@plt+0x282d4>
   39918:	ldr	r0, [fp, #-20]	; 0xffffffec
   3991c:	cmn	r0, #1
   39920:	bne	39968 <__assert_fail@plt+0x28214>
   39924:	b	39940 <__assert_fail@plt+0x281ec>
   39928:	ldr	r0, [fp, #-12]
   3992c:	add	r0, r0, #-2147483648	; 0x80000000
   39930:	movw	r1, #0
   39934:	cmp	r1, r0
   39938:	bcc	39a14 <__assert_fail@plt+0x282c0>
   3993c:	b	39a28 <__assert_fail@plt+0x282d4>
   39940:	ldr	r0, [fp, #-12]
   39944:	movw	r1, #0
   39948:	cmp	r1, r0
   3994c:	bcs	39a28 <__assert_fail@plt+0x282d4>
   39950:	ldr	r0, [pc, #2108]	; 3a194 <__assert_fail@plt+0x28a40>
   39954:	ldr	r1, [fp, #-12]
   39958:	sub	r1, r1, #1
   3995c:	cmp	r0, r1
   39960:	bcc	39a14 <__assert_fail@plt+0x282c0>
   39964:	b	39a28 <__assert_fail@plt+0x282d4>
   39968:	ldr	r0, [pc, #2088]	; 3a198 <__assert_fail@plt+0x28a44>
   3996c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39970:	udiv	r0, r0, r1
   39974:	ldr	r1, [fp, #-12]
   39978:	cmp	r0, r1
   3997c:	bcc	39a14 <__assert_fail@plt+0x282c0>
   39980:	b	39a28 <__assert_fail@plt+0x282d4>
   39984:	ldr	r0, [fp, #-20]	; 0xffffffec
   39988:	cmp	r0, #0
   3998c:	bne	39994 <__assert_fail@plt+0x28240>
   39990:	b	39a28 <__assert_fail@plt+0x282d4>
   39994:	ldr	r0, [fp, #-12]
   39998:	cmp	r0, #0
   3999c:	bcs	399fc <__assert_fail@plt+0x282a8>
   399a0:	ldr	r0, [fp, #-12]
   399a4:	cmn	r0, #1
   399a8:	bne	399e0 <__assert_fail@plt+0x2828c>
   399ac:	b	399c8 <__assert_fail@plt+0x28274>
   399b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   399b4:	add	r0, r0, #-2147483648	; 0x80000000
   399b8:	movw	r1, #0
   399bc:	cmp	r1, r0
   399c0:	bcc	39a14 <__assert_fail@plt+0x282c0>
   399c4:	b	39a28 <__assert_fail@plt+0x282d4>
   399c8:	ldr	r0, [pc, #1988]	; 3a194 <__assert_fail@plt+0x28a40>
   399cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   399d0:	sub	r1, r1, #1
   399d4:	cmp	r0, r1
   399d8:	bcc	39a14 <__assert_fail@plt+0x282c0>
   399dc:	b	39a28 <__assert_fail@plt+0x282d4>
   399e0:	ldr	r0, [pc, #1968]	; 3a198 <__assert_fail@plt+0x28a44>
   399e4:	ldr	r1, [fp, #-12]
   399e8:	udiv	r0, r0, r1
   399ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   399f0:	cmp	r0, r1
   399f4:	bcc	39a14 <__assert_fail@plt+0x282c0>
   399f8:	b	39a28 <__assert_fail@plt+0x282d4>
   399fc:	ldr	r0, [pc, #1936]	; 3a194 <__assert_fail@plt+0x28a40>
   39a00:	ldr	r1, [fp, #-20]	; 0xffffffec
   39a04:	udiv	r0, r0, r1
   39a08:	ldr	r1, [fp, #-12]
   39a0c:	cmp	r0, r1
   39a10:	bcs	39a28 <__assert_fail@plt+0x282d4>
   39a14:	ldr	r0, [fp, #-12]
   39a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   39a1c:	mul	r0, r0, r1
   39a20:	str	r0, [fp, #-24]	; 0xffffffe8
   39a24:	b	3a09c <__assert_fail@plt+0x28948>
   39a28:	ldr	r0, [fp, #-12]
   39a2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39a30:	mul	r0, r0, r1
   39a34:	str	r0, [fp, #-24]	; 0xffffffe8
   39a38:	b	3a0b8 <__assert_fail@plt+0x28964>
   39a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39a40:	cmp	r0, #0
   39a44:	bcs	39b50 <__assert_fail@plt+0x283fc>
   39a48:	ldr	r0, [fp, #-12]
   39a4c:	cmp	r0, #0
   39a50:	bcs	39ad8 <__assert_fail@plt+0x28384>
   39a54:	b	39a74 <__assert_fail@plt+0x28320>
   39a58:	ldr	r0, [fp, #-12]
   39a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39a60:	mvn	r2, #0
   39a64:	udiv	r1, r2, r1
   39a68:	cmp	r0, r1
   39a6c:	bcc	39bec <__assert_fail@plt+0x28498>
   39a70:	b	39c00 <__assert_fail@plt+0x284ac>
   39a74:	b	39a88 <__assert_fail@plt+0x28334>
   39a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   39a7c:	cmp	r0, #1
   39a80:	bcc	39a98 <__assert_fail@plt+0x28344>
   39a84:	b	39aa4 <__assert_fail@plt+0x28350>
   39a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   39a8c:	movw	r1, #0
   39a90:	cmp	r1, r0
   39a94:	bcs	39aa4 <__assert_fail@plt+0x28350>
   39a98:	movw	r0, #1
   39a9c:	str	r0, [fp, #-60]	; 0xffffffc4
   39aa0:	b	39abc <__assert_fail@plt+0x28368>
   39aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   39aa8:	movw	r1, #0
   39aac:	sub	r0, r1, r0
   39ab0:	mvn	r1, #0
   39ab4:	udiv	r0, r1, r0
   39ab8:	str	r0, [fp, #-60]	; 0xffffffc4
   39abc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   39ac0:	ldr	r1, [fp, #-12]
   39ac4:	mvn	r2, #0
   39ac8:	sub	r1, r2, r1
   39acc:	cmp	r0, r1
   39ad0:	bls	39bec <__assert_fail@plt+0x28498>
   39ad4:	b	39c00 <__assert_fail@plt+0x284ac>
   39ad8:	b	39ae0 <__assert_fail@plt+0x2838c>
   39adc:	b	39ae4 <__assert_fail@plt+0x28390>
   39ae0:	b	39b34 <__assert_fail@plt+0x283e0>
   39ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ae8:	cmn	r0, #1
   39aec:	bne	39b34 <__assert_fail@plt+0x283e0>
   39af0:	b	39b0c <__assert_fail@plt+0x283b8>
   39af4:	ldr	r0, [fp, #-12]
   39af8:	add	r0, r0, #0
   39afc:	movw	r1, #0
   39b00:	cmp	r1, r0
   39b04:	bcc	39bec <__assert_fail@plt+0x28498>
   39b08:	b	39c00 <__assert_fail@plt+0x284ac>
   39b0c:	ldr	r0, [fp, #-12]
   39b10:	movw	r1, #0
   39b14:	cmp	r1, r0
   39b18:	bcs	39c00 <__assert_fail@plt+0x284ac>
   39b1c:	ldr	r0, [fp, #-12]
   39b20:	sub	r0, r0, #1
   39b24:	mvn	r1, #0
   39b28:	cmp	r1, r0
   39b2c:	bcc	39bec <__assert_fail@plt+0x28498>
   39b30:	b	39c00 <__assert_fail@plt+0x284ac>
   39b34:	ldr	r0, [fp, #-20]	; 0xffffffec
   39b38:	movw	r1, #0
   39b3c:	udiv	r0, r1, r0
   39b40:	ldr	r1, [fp, #-12]
   39b44:	cmp	r0, r1
   39b48:	bcc	39bec <__assert_fail@plt+0x28498>
   39b4c:	b	39c00 <__assert_fail@plt+0x284ac>
   39b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   39b54:	cmp	r0, #0
   39b58:	bne	39b60 <__assert_fail@plt+0x2840c>
   39b5c:	b	39c00 <__assert_fail@plt+0x284ac>
   39b60:	ldr	r0, [fp, #-12]
   39b64:	cmp	r0, #0
   39b68:	bcs	39bd4 <__assert_fail@plt+0x28480>
   39b6c:	b	39b74 <__assert_fail@plt+0x28420>
   39b70:	b	39b78 <__assert_fail@plt+0x28424>
   39b74:	b	39bb8 <__assert_fail@plt+0x28464>
   39b78:	ldr	r0, [fp, #-12]
   39b7c:	cmn	r0, #1
   39b80:	bne	39bb8 <__assert_fail@plt+0x28464>
   39b84:	b	39ba0 <__assert_fail@plt+0x2844c>
   39b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   39b8c:	add	r0, r0, #0
   39b90:	movw	r1, #0
   39b94:	cmp	r1, r0
   39b98:	bcc	39bec <__assert_fail@plt+0x28498>
   39b9c:	b	39c00 <__assert_fail@plt+0x284ac>
   39ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ba4:	sub	r0, r0, #1
   39ba8:	mvn	r1, #0
   39bac:	cmp	r1, r0
   39bb0:	bcc	39bec <__assert_fail@plt+0x28498>
   39bb4:	b	39c00 <__assert_fail@plt+0x284ac>
   39bb8:	ldr	r0, [fp, #-12]
   39bbc:	movw	r1, #0
   39bc0:	udiv	r0, r1, r0
   39bc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   39bc8:	cmp	r0, r1
   39bcc:	bcc	39bec <__assert_fail@plt+0x28498>
   39bd0:	b	39c00 <__assert_fail@plt+0x284ac>
   39bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   39bd8:	mvn	r1, #0
   39bdc:	udiv	r0, r1, r0
   39be0:	ldr	r1, [fp, #-12]
   39be4:	cmp	r0, r1
   39be8:	bcs	39c00 <__assert_fail@plt+0x284ac>
   39bec:	ldr	r0, [fp, #-12]
   39bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   39bf4:	mul	r0, r0, r1
   39bf8:	str	r0, [fp, #-24]	; 0xffffffe8
   39bfc:	b	3a09c <__assert_fail@plt+0x28948>
   39c00:	ldr	r0, [fp, #-12]
   39c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   39c08:	mul	r0, r0, r1
   39c0c:	str	r0, [fp, #-24]	; 0xffffffe8
   39c10:	b	3a0b8 <__assert_fail@plt+0x28964>
   39c14:	b	39e68 <__assert_fail@plt+0x28714>
   39c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   39c1c:	cmp	r0, #0
   39c20:	bcs	39d80 <__assert_fail@plt+0x2862c>
   39c24:	ldr	r0, [fp, #-12]
   39c28:	cmp	r0, #0
   39c2c:	bcs	39cfc <__assert_fail@plt+0x285a8>
   39c30:	b	39c34 <__assert_fail@plt+0x284e0>
   39c34:	ldr	r0, [fp, #-12]
   39c38:	ldr	r2, [fp, #-20]	; 0xffffffec
   39c3c:	mvn	r1, #0
   39c40:	mvn	r3, #-2147483648	; 0x80000000
   39c44:	mov	ip, #0
   39c48:	str	r0, [fp, #-64]	; 0xffffffc0
   39c4c:	mov	r0, r1
   39c50:	mov	r1, r3
   39c54:	mov	r3, ip
   39c58:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   39c5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   39c60:	subs	r0, r2, r0
   39c64:	rscs	r1, r1, #0
   39c68:	str	r0, [fp, #-68]	; 0xffffffbc
   39c6c:	str	r1, [fp, #-72]	; 0xffffffb8
   39c70:	blt	39e40 <__assert_fail@plt+0x286ec>
   39c74:	b	39e54 <__assert_fail@plt+0x28700>
   39c78:	b	39c8c <__assert_fail@plt+0x28538>
   39c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39c80:	cmp	r0, #1
   39c84:	bcc	39c9c <__assert_fail@plt+0x28548>
   39c88:	b	39cb0 <__assert_fail@plt+0x2855c>
   39c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39c90:	movw	r1, #0
   39c94:	cmp	r1, r0
   39c98:	bcs	39cb0 <__assert_fail@plt+0x2855c>
   39c9c:	mov	r0, #0
   39ca0:	mvn	r1, #0
   39ca4:	str	r1, [fp, #-76]	; 0xffffffb4
   39ca8:	str	r0, [fp, #-80]	; 0xffffffb0
   39cac:	b	39cd4 <__assert_fail@plt+0x28580>
   39cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39cb4:	rsb	r2, r0, #0
   39cb8:	mvn	r0, #0
   39cbc:	mvn	r1, #-2147483648	; 0x80000000
   39cc0:	mov	r3, #0
   39cc4:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   39cc8:	str	r0, [fp, #-76]	; 0xffffffb4
   39ccc:	str	r1, [fp, #-80]	; 0xffffffb0
   39cd0:	b	39cd4 <__assert_fail@plt+0x28580>
   39cd4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39cd8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   39cdc:	ldr	r2, [fp, #-12]
   39ce0:	mvn	r2, r2
   39ce4:	subs	r1, r2, r1
   39ce8:	rscs	r0, r0, #0
   39cec:	str	r1, [fp, #-84]	; 0xffffffac
   39cf0:	str	r0, [fp, #-88]	; 0xffffffa8
   39cf4:	bge	39e40 <__assert_fail@plt+0x286ec>
   39cf8:	b	39e54 <__assert_fail@plt+0x28700>
   39cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   39d00:	cmn	r0, #1
   39d04:	bne	39d4c <__assert_fail@plt+0x285f8>
   39d08:	b	39d2c <__assert_fail@plt+0x285d8>
   39d0c:	ldr	r0, [fp, #-12]
   39d10:	rsbs	r0, r0, #0
   39d14:	mov	r1, #0
   39d18:	sbcs	r1, r1, #-2147483648	; 0x80000000
   39d1c:	str	r0, [sp, #92]	; 0x5c
   39d20:	str	r1, [sp, #88]	; 0x58
   39d24:	blt	39e40 <__assert_fail@plt+0x286ec>
   39d28:	b	39e54 <__assert_fail@plt+0x28700>
   39d2c:	ldr	r0, [fp, #-12]
   39d30:	movw	r1, #0
   39d34:	cmp	r1, r0
   39d38:	bcs	39e54 <__assert_fail@plt+0x28700>
   39d3c:	mov	r0, #0
   39d40:	cmp	r0, #0
   39d44:	bne	39e40 <__assert_fail@plt+0x286ec>
   39d48:	b	39e54 <__assert_fail@plt+0x28700>
   39d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   39d50:	mov	r1, #-2147483648	; 0x80000000
   39d54:	mov	r0, #0
   39d58:	str	r0, [sp, #84]	; 0x54
   39d5c:	ldr	r3, [sp, #84]	; 0x54
   39d60:	bl	3c428 <__assert_fail@plt+0x2acd4>
   39d64:	ldr	r2, [fp, #-12]
   39d68:	subs	r0, r0, r2
   39d6c:	sbcs	r1, r1, #0
   39d70:	str	r0, [sp, #80]	; 0x50
   39d74:	str	r1, [sp, #76]	; 0x4c
   39d78:	blt	39e40 <__assert_fail@plt+0x286ec>
   39d7c:	b	39e54 <__assert_fail@plt+0x28700>
   39d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   39d84:	cmp	r0, #0
   39d88:	bne	39d90 <__assert_fail@plt+0x2863c>
   39d8c:	b	39e54 <__assert_fail@plt+0x28700>
   39d90:	ldr	r0, [fp, #-12]
   39d94:	cmp	r0, #0
   39d98:	bcs	39e10 <__assert_fail@plt+0x286bc>
   39d9c:	ldr	r0, [fp, #-12]
   39da0:	cmn	r0, #1
   39da4:	bne	39ddc <__assert_fail@plt+0x28688>
   39da8:	b	39dcc <__assert_fail@plt+0x28678>
   39dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   39db0:	rsbs	r0, r0, #0
   39db4:	mov	r1, #0
   39db8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   39dbc:	str	r0, [sp, #72]	; 0x48
   39dc0:	str	r1, [sp, #68]	; 0x44
   39dc4:	blt	39e40 <__assert_fail@plt+0x286ec>
   39dc8:	b	39e54 <__assert_fail@plt+0x28700>
   39dcc:	mov	r0, #0
   39dd0:	cmp	r0, #0
   39dd4:	bne	39e40 <__assert_fail@plt+0x286ec>
   39dd8:	b	39e54 <__assert_fail@plt+0x28700>
   39ddc:	ldr	r2, [fp, #-12]
   39de0:	mov	r1, #-2147483648	; 0x80000000
   39de4:	mov	r0, #0
   39de8:	str	r0, [sp, #64]	; 0x40
   39dec:	ldr	r3, [sp, #64]	; 0x40
   39df0:	bl	3c428 <__assert_fail@plt+0x2acd4>
   39df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   39df8:	subs	r0, r0, r2
   39dfc:	sbcs	r1, r1, #0
   39e00:	str	r0, [sp, #60]	; 0x3c
   39e04:	str	r1, [sp, #56]	; 0x38
   39e08:	blt	39e40 <__assert_fail@plt+0x286ec>
   39e0c:	b	39e54 <__assert_fail@plt+0x28700>
   39e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   39e14:	mvn	r0, #0
   39e18:	mvn	r1, #-2147483648	; 0x80000000
   39e1c:	mov	r3, #0
   39e20:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   39e24:	ldr	r2, [fp, #-12]
   39e28:	subs	r0, r0, r2
   39e2c:	sbcs	r1, r1, #0
   39e30:	str	r0, [sp, #52]	; 0x34
   39e34:	str	r1, [sp, #48]	; 0x30
   39e38:	bge	39e54 <__assert_fail@plt+0x28700>
   39e3c:	b	39e40 <__assert_fail@plt+0x286ec>
   39e40:	ldr	r0, [fp, #-12]
   39e44:	ldr	r1, [fp, #-20]	; 0xffffffec
   39e48:	mul	r0, r0, r1
   39e4c:	str	r0, [fp, #-24]	; 0xffffffe8
   39e50:	b	3a09c <__assert_fail@plt+0x28948>
   39e54:	ldr	r0, [fp, #-12]
   39e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   39e5c:	mul	r0, r0, r1
   39e60:	str	r0, [fp, #-24]	; 0xffffffe8
   39e64:	b	3a0b8 <__assert_fail@plt+0x28964>
   39e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   39e6c:	cmp	r0, #0
   39e70:	bcs	39fbc <__assert_fail@plt+0x28868>
   39e74:	ldr	r0, [fp, #-12]
   39e78:	cmp	r0, #0
   39e7c:	bcs	39f44 <__assert_fail@plt+0x287f0>
   39e80:	b	39ebc <__assert_fail@plt+0x28768>
   39e84:	ldr	r0, [fp, #-12]
   39e88:	ldr	r2, [fp, #-20]	; 0xffffffec
   39e8c:	mvn	r1, #0
   39e90:	mov	r3, #0
   39e94:	str	r0, [sp, #44]	; 0x2c
   39e98:	mov	r0, r1
   39e9c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   39ea0:	ldr	r2, [sp, #44]	; 0x2c
   39ea4:	subs	r0, r2, r0
   39ea8:	rscs	r1, r1, #0
   39eac:	str	r0, [sp, #40]	; 0x28
   39eb0:	str	r1, [sp, #36]	; 0x24
   39eb4:	bcc	3a074 <__assert_fail@plt+0x28920>
   39eb8:	b	3a088 <__assert_fail@plt+0x28934>
   39ebc:	b	39ed0 <__assert_fail@plt+0x2877c>
   39ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ec4:	cmp	r0, #1
   39ec8:	bcc	39ee0 <__assert_fail@plt+0x2878c>
   39ecc:	b	39ef4 <__assert_fail@plt+0x287a0>
   39ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ed4:	movw	r1, #0
   39ed8:	cmp	r1, r0
   39edc:	bcs	39ef4 <__assert_fail@plt+0x287a0>
   39ee0:	mov	r0, #1
   39ee4:	mvn	r1, #0
   39ee8:	str	r1, [sp, #32]
   39eec:	str	r0, [sp, #28]
   39ef0:	b	39f1c <__assert_fail@plt+0x287c8>
   39ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ef8:	rsb	r2, r0, #0
   39efc:	mvn	r0, #0
   39f00:	mov	r3, #0
   39f04:	str	r0, [sp, #24]
   39f08:	ldr	r1, [sp, #24]
   39f0c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   39f10:	str	r0, [sp, #32]
   39f14:	str	r1, [sp, #28]
   39f18:	b	39f1c <__assert_fail@plt+0x287c8>
   39f1c:	ldr	r0, [sp, #28]
   39f20:	ldr	r1, [sp, #32]
   39f24:	ldr	r2, [fp, #-12]
   39f28:	mvn	r2, r2
   39f2c:	subs	r1, r2, r1
   39f30:	rscs	r0, r0, #0
   39f34:	str	r1, [sp, #20]
   39f38:	str	r0, [sp, #16]
   39f3c:	bcs	3a074 <__assert_fail@plt+0x28920>
   39f40:	b	3a088 <__assert_fail@plt+0x28934>
   39f44:	b	39f4c <__assert_fail@plt+0x287f8>
   39f48:	b	39f50 <__assert_fail@plt+0x287fc>
   39f4c:	b	39fa0 <__assert_fail@plt+0x2884c>
   39f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   39f54:	cmn	r0, #1
   39f58:	bne	39fa0 <__assert_fail@plt+0x2884c>
   39f5c:	b	39f78 <__assert_fail@plt+0x28824>
   39f60:	ldr	r0, [fp, #-12]
   39f64:	add	r0, r0, #0
   39f68:	movw	r1, #0
   39f6c:	cmp	r1, r0
   39f70:	bcc	3a074 <__assert_fail@plt+0x28920>
   39f74:	b	3a088 <__assert_fail@plt+0x28934>
   39f78:	ldr	r0, [fp, #-12]
   39f7c:	movw	r1, #0
   39f80:	cmp	r1, r0
   39f84:	bcs	3a088 <__assert_fail@plt+0x28934>
   39f88:	ldr	r0, [fp, #-12]
   39f8c:	sub	r0, r0, #1
   39f90:	mvn	r1, #0
   39f94:	cmp	r1, r0
   39f98:	bcc	3a074 <__assert_fail@plt+0x28920>
   39f9c:	b	3a088 <__assert_fail@plt+0x28934>
   39fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39fa4:	movw	r1, #0
   39fa8:	udiv	r0, r1, r0
   39fac:	ldr	r1, [fp, #-12]
   39fb0:	cmp	r0, r1
   39fb4:	bcc	3a074 <__assert_fail@plt+0x28920>
   39fb8:	b	3a088 <__assert_fail@plt+0x28934>
   39fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   39fc0:	cmp	r0, #0
   39fc4:	bne	39fcc <__assert_fail@plt+0x28878>
   39fc8:	b	3a088 <__assert_fail@plt+0x28934>
   39fcc:	ldr	r0, [fp, #-12]
   39fd0:	cmp	r0, #0
   39fd4:	bcs	3a040 <__assert_fail@plt+0x288ec>
   39fd8:	b	39fe0 <__assert_fail@plt+0x2888c>
   39fdc:	b	39fe4 <__assert_fail@plt+0x28890>
   39fe0:	b	3a024 <__assert_fail@plt+0x288d0>
   39fe4:	ldr	r0, [fp, #-12]
   39fe8:	cmn	r0, #1
   39fec:	bne	3a024 <__assert_fail@plt+0x288d0>
   39ff0:	b	3a00c <__assert_fail@plt+0x288b8>
   39ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
   39ff8:	add	r0, r0, #0
   39ffc:	movw	r1, #0
   3a000:	cmp	r1, r0
   3a004:	bcc	3a074 <__assert_fail@plt+0x28920>
   3a008:	b	3a088 <__assert_fail@plt+0x28934>
   3a00c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a010:	sub	r0, r0, #1
   3a014:	mvn	r1, #0
   3a018:	cmp	r1, r0
   3a01c:	bcc	3a074 <__assert_fail@plt+0x28920>
   3a020:	b	3a088 <__assert_fail@plt+0x28934>
   3a024:	ldr	r0, [fp, #-12]
   3a028:	movw	r1, #0
   3a02c:	udiv	r0, r1, r0
   3a030:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a034:	cmp	r0, r1
   3a038:	bcc	3a074 <__assert_fail@plt+0x28920>
   3a03c:	b	3a088 <__assert_fail@plt+0x28934>
   3a040:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a044:	mvn	r0, #0
   3a048:	mov	r3, #0
   3a04c:	str	r0, [sp, #12]
   3a050:	ldr	r1, [sp, #12]
   3a054:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3a058:	ldr	r2, [fp, #-12]
   3a05c:	subs	r0, r0, r2
   3a060:	sbcs	r1, r1, #0
   3a064:	str	r0, [sp, #8]
   3a068:	str	r1, [sp, #4]
   3a06c:	bcs	3a088 <__assert_fail@plt+0x28934>
   3a070:	b	3a074 <__assert_fail@plt+0x28920>
   3a074:	ldr	r0, [fp, #-12]
   3a078:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a07c:	mul	r0, r0, r1
   3a080:	str	r0, [fp, #-24]	; 0xffffffe8
   3a084:	b	3a09c <__assert_fail@plt+0x28948>
   3a088:	ldr	r0, [fp, #-12]
   3a08c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a090:	mul	r0, r0, r1
   3a094:	str	r0, [fp, #-24]	; 0xffffffe8
   3a098:	b	3a0b8 <__assert_fail@plt+0x28964>
   3a09c:	bl	11628 <__errno_location@plt>
   3a0a0:	movw	lr, #12
   3a0a4:	str	lr, [r0]
   3a0a8:	movw	r0, #0
   3a0ac:	and	r0, r0, #1
   3a0b0:	strb	r0, [fp, #-1]
   3a0b4:	b	3a184 <__assert_fail@plt+0x28a30>
   3a0b8:	ldr	r0, [fp, #-8]
   3a0bc:	ldr	r0, [r0, #8]
   3a0c0:	ldr	r1, [fp, #-16]
   3a0c4:	cmp	r0, r1
   3a0c8:	bne	3a120 <__assert_fail@plt+0x289cc>
   3a0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a0d0:	bl	38a7c <__assert_fail@plt+0x27328>
   3a0d4:	str	r0, [fp, #-28]	; 0xffffffe4
   3a0d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a0dc:	movw	lr, #0
   3a0e0:	cmp	r0, lr
   3a0e4:	beq	3a11c <__assert_fail@plt+0x289c8>
   3a0e8:	ldr	r0, [fp, #-8]
   3a0ec:	ldr	r0, [r0, #8]
   3a0f0:	movw	r1, #0
   3a0f4:	cmp	r0, r1
   3a0f8:	beq	3a11c <__assert_fail@plt+0x289c8>
   3a0fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a100:	ldr	r1, [fp, #-8]
   3a104:	ldr	r1, [r1, #8]
   3a108:	ldr	r2, [fp, #-8]
   3a10c:	ldr	r2, [r2]
   3a110:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a114:	mul	r2, r2, r3
   3a118:	bl	11478 <memcpy@plt>
   3a11c:	b	3a134 <__assert_fail@plt+0x289e0>
   3a120:	ldr	r0, [fp, #-8]
   3a124:	ldr	r0, [r0, #8]
   3a128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a12c:	bl	38aec <__assert_fail@plt+0x27398>
   3a130:	str	r0, [fp, #-28]	; 0xffffffe4
   3a134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a138:	movw	r1, #0
   3a13c:	cmp	r0, r1
   3a140:	bne	3a154 <__assert_fail@plt+0x28a00>
   3a144:	movw	r0, #0
   3a148:	and	r0, r0, #1
   3a14c:	strb	r0, [fp, #-1]
   3a150:	b	3a184 <__assert_fail@plt+0x28a30>
   3a154:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a158:	ldr	r1, [fp, #-8]
   3a15c:	str	r0, [r1, #8]
   3a160:	ldr	r0, [fp, #-12]
   3a164:	ldr	r1, [fp, #-8]
   3a168:	str	r0, [r1, #4]
   3a16c:	ldr	r0, [fp, #-12]
   3a170:	ldr	r1, [fp, #-8]
   3a174:	str	r0, [r1]
   3a178:	movw	r0, #1
   3a17c:	and	r0, r0, #1
   3a180:	strb	r0, [fp, #-1]
   3a184:	ldrb	r0, [fp, #-1]
   3a188:	and	r0, r0, #1
   3a18c:	mov	sp, fp
   3a190:	pop	{fp, pc}
   3a194:	svcvc	0x00ffffff
   3a198:	andhi	r0, r0, r0
   3a19c:			; <UNDEFINED> instruction: 0xffff8000
   3a1a0:	sub	sp, sp, #8
   3a1a4:	push	{fp, lr}
   3a1a8:	mov	fp, sp
   3a1ac:	sub	sp, sp, #48	; 0x30
   3a1b0:	str	r3, [fp, #12]
   3a1b4:	str	r2, [fp, #8]
   3a1b8:	str	r0, [fp, #-4]
   3a1bc:	str	r1, [fp, #-8]
   3a1c0:	mvn	r0, #0
   3a1c4:	str	r0, [fp, #-16]
   3a1c8:	add	r0, fp, #8
   3a1cc:	str	r0, [fp, #-12]
   3a1d0:	ldr	r0, [fp, #-8]
   3a1d4:	cmp	r0, #0
   3a1d8:	str	r0, [sp, #12]
   3a1dc:	beq	3a1f8 <__assert_fail@plt+0x28aa4>
   3a1e0:	b	3a1e4 <__assert_fail@plt+0x28a90>
   3a1e4:	movw	r0, #1030	; 0x406
   3a1e8:	ldr	r1, [sp, #12]
   3a1ec:	cmp	r1, r0
   3a1f0:	beq	3a220 <__assert_fail@plt+0x28acc>
   3a1f4:	b	3a248 <__assert_fail@plt+0x28af4>
   3a1f8:	ldr	r0, [fp, #-12]
   3a1fc:	add	r1, r0, #4
   3a200:	str	r1, [fp, #-12]
   3a204:	ldr	r0, [r0]
   3a208:	str	r0, [fp, #-20]	; 0xffffffec
   3a20c:	ldr	r0, [fp, #-4]
   3a210:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a214:	bl	3a3f4 <__assert_fail@plt+0x28ca0>
   3a218:	str	r0, [fp, #-16]
   3a21c:	b	3a3d4 <__assert_fail@plt+0x28c80>
   3a220:	ldr	r0, [fp, #-12]
   3a224:	add	r1, r0, #4
   3a228:	str	r1, [fp, #-12]
   3a22c:	ldr	r0, [r0]
   3a230:	str	r0, [sp, #24]
   3a234:	ldr	r0, [fp, #-4]
   3a238:	ldr	r1, [sp, #24]
   3a23c:	bl	3a428 <__assert_fail@plt+0x28cd4>
   3a240:	str	r0, [fp, #-16]
   3a244:	b	3a3d4 <__assert_fail@plt+0x28c80>
   3a248:	ldr	r0, [fp, #-8]
   3a24c:	cmp	r0, #0
   3a250:	str	r0, [sp, #8]
   3a254:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a258:	b	3a25c <__assert_fail@plt+0x28b08>
   3a25c:	ldr	r0, [sp, #8]
   3a260:	cmp	r0, #1
   3a264:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a268:	b	3a26c <__assert_fail@plt+0x28b18>
   3a26c:	ldr	r0, [sp, #8]
   3a270:	cmp	r0, #2
   3a274:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a278:	b	3a27c <__assert_fail@plt+0x28b28>
   3a27c:	ldr	r0, [sp, #8]
   3a280:	cmp	r0, #3
   3a284:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a288:	b	3a28c <__assert_fail@plt+0x28b38>
   3a28c:	ldr	r0, [sp, #8]
   3a290:	cmp	r0, #4
   3a294:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a298:	b	3a29c <__assert_fail@plt+0x28b48>
   3a29c:	ldr	r0, [sp, #8]
   3a2a0:	cmp	r0, #8
   3a2a4:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a2a8:	b	3a2ac <__assert_fail@plt+0x28b58>
   3a2ac:	ldr	r0, [sp, #8]
   3a2b0:	cmp	r0, #9
   3a2b4:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a2b8:	b	3a2bc <__assert_fail@plt+0x28b68>
   3a2bc:	ldr	r0, [sp, #8]
   3a2c0:	cmp	r0, #10
   3a2c4:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a2c8:	b	3a2cc <__assert_fail@plt+0x28b78>
   3a2cc:	ldr	r0, [sp, #8]
   3a2d0:	cmp	r0, #11
   3a2d4:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a2d8:	b	3a2dc <__assert_fail@plt+0x28b88>
   3a2dc:	ldr	r0, [sp, #8]
   3a2e0:	cmp	r0, #1024	; 0x400
   3a2e4:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a2e8:	b	3a2ec <__assert_fail@plt+0x28b98>
   3a2ec:	movw	r0, #1025	; 0x401
   3a2f0:	ldr	r1, [sp, #8]
   3a2f4:	cmp	r1, r0
   3a2f8:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a2fc:	b	3a300 <__assert_fail@plt+0x28bac>
   3a300:	movw	r0, #1026	; 0x402
   3a304:	ldr	r1, [sp, #8]
   3a308:	cmp	r1, r0
   3a30c:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a310:	b	3a314 <__assert_fail@plt+0x28bc0>
   3a314:	movw	r0, #1030	; 0x406
   3a318:	ldr	r1, [sp, #8]
   3a31c:	sub	r0, r1, r0
   3a320:	cmp	r0, #2
   3a324:	bcc	3a37c <__assert_fail@plt+0x28c28>
   3a328:	b	3a32c <__assert_fail@plt+0x28bd8>
   3a32c:	movw	r0, #1032	; 0x408
   3a330:	ldr	r1, [sp, #8]
   3a334:	cmp	r1, r0
   3a338:	beq	3a368 <__assert_fail@plt+0x28c14>
   3a33c:	b	3a340 <__assert_fail@plt+0x28bec>
   3a340:	movw	r0, #1033	; 0x409
   3a344:	ldr	r1, [sp, #8]
   3a348:	cmp	r1, r0
   3a34c:	beq	3a37c <__assert_fail@plt+0x28c28>
   3a350:	b	3a354 <__assert_fail@plt+0x28c00>
   3a354:	movw	r0, #1034	; 0x40a
   3a358:	ldr	r1, [sp, #8]
   3a35c:	cmp	r1, r0
   3a360:	bne	3a3a8 <__assert_fail@plt+0x28c54>
   3a364:	b	3a368 <__assert_fail@plt+0x28c14>
   3a368:	ldr	r0, [fp, #-4]
   3a36c:	ldr	r1, [fp, #-8]
   3a370:	bl	116ac <fcntl64@plt>
   3a374:	str	r0, [fp, #-16]
   3a378:	b	3a3d0 <__assert_fail@plt+0x28c7c>
   3a37c:	ldr	r0, [fp, #-12]
   3a380:	add	r1, r0, #4
   3a384:	str	r1, [fp, #-12]
   3a388:	ldr	r0, [r0]
   3a38c:	str	r0, [sp, #20]
   3a390:	ldr	r0, [fp, #-4]
   3a394:	ldr	r1, [fp, #-8]
   3a398:	ldr	r2, [sp, #20]
   3a39c:	bl	116ac <fcntl64@plt>
   3a3a0:	str	r0, [fp, #-16]
   3a3a4:	b	3a3d0 <__assert_fail@plt+0x28c7c>
   3a3a8:	ldr	r0, [fp, #-12]
   3a3ac:	add	r1, r0, #4
   3a3b0:	str	r1, [fp, #-12]
   3a3b4:	ldr	r0, [r0]
   3a3b8:	str	r0, [sp, #16]
   3a3bc:	ldr	r0, [fp, #-4]
   3a3c0:	ldr	r1, [fp, #-8]
   3a3c4:	ldr	r2, [sp, #16]
   3a3c8:	bl	116ac <fcntl64@plt>
   3a3cc:	str	r0, [fp, #-16]
   3a3d0:	b	3a3d4 <__assert_fail@plt+0x28c80>
   3a3d4:	sub	r0, fp, #12
   3a3d8:	ldr	r1, [fp, #-16]
   3a3dc:	str	r0, [sp, #4]
   3a3e0:	mov	r0, r1
   3a3e4:	mov	sp, fp
   3a3e8:	pop	{fp, lr}
   3a3ec:	add	sp, sp, #8
   3a3f0:	bx	lr
   3a3f4:	push	{fp, lr}
   3a3f8:	mov	fp, sp
   3a3fc:	sub	sp, sp, #16
   3a400:	str	r0, [fp, #-4]
   3a404:	str	r1, [sp, #8]
   3a408:	ldr	r0, [fp, #-4]
   3a40c:	ldr	r2, [sp, #8]
   3a410:	movw	r1, #0
   3a414:	bl	116ac <fcntl64@plt>
   3a418:	str	r0, [sp, #4]
   3a41c:	ldr	r0, [sp, #4]
   3a420:	mov	sp, fp
   3a424:	pop	{fp, pc}
   3a428:	push	{fp, lr}
   3a42c:	mov	fp, sp
   3a430:	sub	sp, sp, #32
   3a434:	str	r0, [fp, #-4]
   3a438:	str	r1, [fp, #-8]
   3a43c:	movw	r0, #58352	; 0xe3f0
   3a440:	movt	r0, #4
   3a444:	ldr	r0, [r0]
   3a448:	movw	r1, #0
   3a44c:	cmp	r1, r0
   3a450:	bgt	3a4d0 <__assert_fail@plt+0x28d7c>
   3a454:	ldr	r0, [fp, #-4]
   3a458:	ldr	r2, [fp, #-8]
   3a45c:	movw	r1, #1030	; 0x406
   3a460:	bl	116ac <fcntl64@plt>
   3a464:	str	r0, [fp, #-12]
   3a468:	ldr	r0, [fp, #-12]
   3a46c:	movw	r1, #0
   3a470:	cmp	r1, r0
   3a474:	ble	3a488 <__assert_fail@plt+0x28d34>
   3a478:	bl	11628 <__errno_location@plt>
   3a47c:	ldr	r0, [r0]
   3a480:	cmp	r0, #22
   3a484:	beq	3a49c <__assert_fail@plt+0x28d48>
   3a488:	movw	r0, #58352	; 0xe3f0
   3a48c:	movt	r0, #4
   3a490:	movw	r1, #1
   3a494:	str	r1, [r0]
   3a498:	b	3a4cc <__assert_fail@plt+0x28d78>
   3a49c:	ldr	r0, [fp, #-4]
   3a4a0:	ldr	r1, [fp, #-8]
   3a4a4:	bl	3a3f4 <__assert_fail@plt+0x28ca0>
   3a4a8:	str	r0, [fp, #-12]
   3a4ac:	ldr	r0, [fp, #-12]
   3a4b0:	cmp	r0, #0
   3a4b4:	blt	3a4c8 <__assert_fail@plt+0x28d74>
   3a4b8:	movw	r0, #58352	; 0xe3f0
   3a4bc:	movt	r0, #4
   3a4c0:	mvn	r1, #0
   3a4c4:	str	r1, [r0]
   3a4c8:	b	3a4cc <__assert_fail@plt+0x28d78>
   3a4cc:	b	3a4e0 <__assert_fail@plt+0x28d8c>
   3a4d0:	ldr	r0, [fp, #-4]
   3a4d4:	ldr	r1, [fp, #-8]
   3a4d8:	bl	3a3f4 <__assert_fail@plt+0x28ca0>
   3a4dc:	str	r0, [fp, #-12]
   3a4e0:	ldr	r0, [fp, #-12]
   3a4e4:	movw	r1, #0
   3a4e8:	cmp	r1, r0
   3a4ec:	bgt	3a574 <__assert_fail@plt+0x28e20>
   3a4f0:	movw	r0, #58352	; 0xe3f0
   3a4f4:	movt	r0, #4
   3a4f8:	ldr	r0, [r0]
   3a4fc:	cmn	r0, #1
   3a500:	bne	3a574 <__assert_fail@plt+0x28e20>
   3a504:	ldr	r0, [fp, #-12]
   3a508:	movw	r1, #1
   3a50c:	bl	116ac <fcntl64@plt>
   3a510:	str	r0, [sp, #16]
   3a514:	ldr	r0, [sp, #16]
   3a518:	cmp	r0, #0
   3a51c:	blt	3a53c <__assert_fail@plt+0x28de8>
   3a520:	ldr	r0, [fp, #-12]
   3a524:	ldr	r1, [sp, #16]
   3a528:	orr	r2, r1, #1
   3a52c:	movw	r1, #2
   3a530:	bl	116ac <fcntl64@plt>
   3a534:	cmn	r0, #1
   3a538:	bne	3a570 <__assert_fail@plt+0x28e1c>
   3a53c:	bl	11628 <__errno_location@plt>
   3a540:	ldr	r0, [r0]
   3a544:	str	r0, [sp, #12]
   3a548:	ldr	r0, [fp, #-12]
   3a54c:	bl	11748 <close@plt>
   3a550:	ldr	lr, [sp, #12]
   3a554:	str	r0, [sp, #8]
   3a558:	str	lr, [sp, #4]
   3a55c:	bl	11628 <__errno_location@plt>
   3a560:	ldr	lr, [sp, #4]
   3a564:	str	lr, [r0]
   3a568:	mvn	r0, #0
   3a56c:	str	r0, [fp, #-12]
   3a570:	b	3a574 <__assert_fail@plt+0x28e20>
   3a574:	ldr	r0, [fp, #-12]
   3a578:	mov	sp, fp
   3a57c:	pop	{fp, pc}
   3a580:	push	{fp, lr}
   3a584:	mov	fp, sp
   3a588:	bl	11628 <__errno_location@plt>
   3a58c:	movw	lr, #12
   3a590:	str	lr, [r0]
   3a594:	movw	r0, #0
   3a598:	pop	{fp, pc}
   3a59c:	push	{fp, lr}
   3a5a0:	mov	fp, sp
   3a5a4:	sub	sp, sp, #8
   3a5a8:	str	r0, [sp, #4]
   3a5ac:	ldr	r0, [sp, #4]
   3a5b0:	cmn	r0, #1
   3a5b4:	bhi	3a5c8 <__assert_fail@plt+0x28e74>
   3a5b8:	ldr	r0, [sp, #4]
   3a5bc:	bl	38a7c <__assert_fail@plt+0x27328>
   3a5c0:	str	r0, [sp]
   3a5c4:	b	3a5d0 <__assert_fail@plt+0x28e7c>
   3a5c8:	bl	3a580 <__assert_fail@plt+0x28e2c>
   3a5cc:	str	r0, [sp]
   3a5d0:	ldr	r0, [sp]
   3a5d4:	mov	sp, fp
   3a5d8:	pop	{fp, pc}
   3a5dc:	push	{fp, lr}
   3a5e0:	mov	fp, sp
   3a5e4:	sub	sp, sp, #16
   3a5e8:	str	r0, [fp, #-4]
   3a5ec:	str	r1, [sp, #8]
   3a5f0:	ldr	r0, [sp, #8]
   3a5f4:	cmn	r0, #1
   3a5f8:	bhi	3a630 <__assert_fail@plt+0x28edc>
   3a5fc:	ldr	r0, [fp, #-4]
   3a600:	ldr	r1, [sp, #8]
   3a604:	ldr	r2, [sp, #8]
   3a608:	cmp	r2, #0
   3a60c:	movw	r2, #0
   3a610:	movne	r2, #1
   3a614:	mvn	r3, #0
   3a618:	eor	r2, r2, r3
   3a61c:	and	r2, r2, #1
   3a620:	orr	r1, r1, r2
   3a624:	bl	38aec <__assert_fail@plt+0x27398>
   3a628:	str	r0, [sp, #4]
   3a62c:	b	3a638 <__assert_fail@plt+0x28ee4>
   3a630:	bl	3a580 <__assert_fail@plt+0x28e2c>
   3a634:	str	r0, [sp, #4]
   3a638:	ldr	r0, [sp, #4]
   3a63c:	mov	sp, fp
   3a640:	pop	{fp, pc}
   3a644:	push	{fp, lr}
   3a648:	mov	fp, sp
   3a64c:	sub	sp, sp, #16
   3a650:	str	r0, [sp, #8]
   3a654:	str	r1, [sp, #4]
   3a658:	ldr	r0, [sp, #8]
   3a65c:	mvn	r1, #0
   3a660:	cmp	r1, r0
   3a664:	bcs	3a688 <__assert_fail@plt+0x28f34>
   3a668:	ldr	r0, [sp, #4]
   3a66c:	cmp	r0, #0
   3a670:	beq	3a680 <__assert_fail@plt+0x28f2c>
   3a674:	bl	3a580 <__assert_fail@plt+0x28e2c>
   3a678:	str	r0, [fp, #-4]
   3a67c:	b	3a6c8 <__assert_fail@plt+0x28f74>
   3a680:	movw	r0, #0
   3a684:	str	r0, [sp, #8]
   3a688:	ldr	r0, [sp, #4]
   3a68c:	mvn	r1, #0
   3a690:	cmp	r1, r0
   3a694:	bcs	3a6b8 <__assert_fail@plt+0x28f64>
   3a698:	ldr	r0, [sp, #8]
   3a69c:	cmp	r0, #0
   3a6a0:	beq	3a6b0 <__assert_fail@plt+0x28f5c>
   3a6a4:	bl	3a580 <__assert_fail@plt+0x28e2c>
   3a6a8:	str	r0, [fp, #-4]
   3a6ac:	b	3a6c8 <__assert_fail@plt+0x28f74>
   3a6b0:	movw	r0, #0
   3a6b4:	str	r0, [sp, #4]
   3a6b8:	ldr	r0, [sp, #8]
   3a6bc:	ldr	r1, [sp, #4]
   3a6c0:	bl	389e0 <__assert_fail@plt+0x2728c>
   3a6c4:	str	r0, [fp, #-4]
   3a6c8:	ldr	r0, [fp, #-4]
   3a6cc:	mov	sp, fp
   3a6d0:	pop	{fp, pc}
   3a6d4:	push	{fp, lr}
   3a6d8:	mov	fp, sp
   3a6dc:	sub	sp, sp, #16
   3a6e0:	str	r0, [fp, #-4]
   3a6e4:	str	r1, [sp, #8]
   3a6e8:	str	r2, [sp, #4]
   3a6ec:	ldr	r0, [sp, #8]
   3a6f0:	cmp	r0, #0
   3a6f4:	beq	3a704 <__assert_fail@plt+0x28fb0>
   3a6f8:	ldr	r0, [sp, #4]
   3a6fc:	cmp	r0, #0
   3a700:	bne	3a710 <__assert_fail@plt+0x28fbc>
   3a704:	movw	r0, #1
   3a708:	str	r0, [sp, #4]
   3a70c:	str	r0, [sp, #8]
   3a710:	ldr	r0, [sp, #8]
   3a714:	cmn	r0, #1
   3a718:	bhi	3a740 <__assert_fail@plt+0x28fec>
   3a71c:	ldr	r0, [sp, #4]
   3a720:	cmn	r0, #1
   3a724:	bhi	3a740 <__assert_fail@plt+0x28fec>
   3a728:	ldr	r0, [fp, #-4]
   3a72c:	ldr	r1, [sp, #8]
   3a730:	ldr	r2, [sp, #4]
   3a734:	bl	3a860 <__assert_fail@plt+0x2910c>
   3a738:	str	r0, [sp]
   3a73c:	b	3a748 <__assert_fail@plt+0x28ff4>
   3a740:	bl	3a580 <__assert_fail@plt+0x28e2c>
   3a744:	str	r0, [sp]
   3a748:	ldr	r0, [sp]
   3a74c:	mov	sp, fp
   3a750:	pop	{fp, pc}
   3a754:	push	{fp, lr}
   3a758:	mov	fp, sp
   3a75c:	sub	sp, sp, #8
   3a760:	movw	r0, #14
   3a764:	bl	116e8 <nl_langinfo@plt>
   3a768:	str	r0, [sp, #4]
   3a76c:	ldr	r0, [sp, #4]
   3a770:	movw	lr, #0
   3a774:	cmp	r0, lr
   3a778:	bne	3a788 <__assert_fail@plt+0x29034>
   3a77c:	movw	r0, #52343	; 0xcc77
   3a780:	movt	r0, #3
   3a784:	str	r0, [sp, #4]
   3a788:	ldr	r0, [sp, #4]
   3a78c:	ldrb	r0, [r0]
   3a790:	cmp	r0, #0
   3a794:	bne	3a7a4 <__assert_fail@plt+0x29050>
   3a798:	movw	r0, #55830	; 0xda16
   3a79c:	movt	r0, #3
   3a7a0:	str	r0, [sp, #4]
   3a7a4:	ldr	r0, [sp, #4]
   3a7a8:	mov	sp, fp
   3a7ac:	pop	{fp, pc}
   3a7b0:	push	{fp, lr}
   3a7b4:	mov	fp, sp
   3a7b8:	sub	sp, sp, #32
   3a7bc:	str	r0, [fp, #-8]
   3a7c0:	str	r1, [fp, #-12]
   3a7c4:	str	r2, [sp, #16]
   3a7c8:	str	r3, [sp, #12]
   3a7cc:	ldr	r0, [fp, #-8]
   3a7d0:	movw	r1, #0
   3a7d4:	cmp	r0, r1
   3a7d8:	bne	3a7e4 <__assert_fail@plt+0x29090>
   3a7dc:	add	r0, sp, #4
   3a7e0:	str	r0, [fp, #-8]
   3a7e4:	ldr	r0, [fp, #-8]
   3a7e8:	ldr	r1, [fp, #-12]
   3a7ec:	ldr	r2, [sp, #16]
   3a7f0:	ldr	r3, [sp, #12]
   3a7f4:	bl	11574 <mbrtowc@plt>
   3a7f8:	str	r0, [sp, #8]
   3a7fc:	ldr	r0, [sp, #8]
   3a800:	mvn	r1, #1
   3a804:	cmp	r1, r0
   3a808:	bhi	3a84c <__assert_fail@plt+0x290f8>
   3a80c:	ldr	r0, [sp, #16]
   3a810:	cmp	r0, #0
   3a814:	beq	3a84c <__assert_fail@plt+0x290f8>
   3a818:	movw	r0, #0
   3a81c:	bl	3c230 <__assert_fail@plt+0x2aadc>
   3a820:	tst	r0, #1
   3a824:	bne	3a84c <__assert_fail@plt+0x290f8>
   3a828:	ldr	r0, [fp, #-12]
   3a82c:	ldrb	r0, [r0]
   3a830:	strb	r0, [sp, #3]
   3a834:	ldrb	r0, [sp, #3]
   3a838:	ldr	r1, [fp, #-8]
   3a83c:	str	r0, [r1]
   3a840:	movw	r0, #1
   3a844:	str	r0, [fp, #-4]
   3a848:	b	3a854 <__assert_fail@plt+0x29100>
   3a84c:	ldr	r0, [sp, #8]
   3a850:	str	r0, [fp, #-4]
   3a854:	ldr	r0, [fp, #-4]
   3a858:	mov	sp, fp
   3a85c:	pop	{fp, pc}
   3a860:	push	{fp, lr}
   3a864:	mov	fp, sp
   3a868:	sub	sp, sp, #176	; 0xb0
   3a86c:	str	r0, [fp, #-8]
   3a870:	str	r1, [fp, #-12]
   3a874:	str	r2, [fp, #-16]
   3a878:	b	3ac30 <__assert_fail@plt+0x294dc>
   3a87c:	b	3aa50 <__assert_fail@plt+0x292fc>
   3a880:	ldr	r0, [fp, #-16]
   3a884:	cmp	r0, #0
   3a888:	bcs	3a98c <__assert_fail@plt+0x29238>
   3a88c:	ldr	r0, [fp, #-12]
   3a890:	cmp	r0, #0
   3a894:	bcs	3a91c <__assert_fail@plt+0x291c8>
   3a898:	b	3a8b8 <__assert_fail@plt+0x29164>
   3a89c:	ldr	r0, [fp, #-12]
   3a8a0:	ldr	r1, [fp, #-16]
   3a8a4:	movw	r2, #127	; 0x7f
   3a8a8:	udiv	r1, r2, r1
   3a8ac:	cmp	r0, r1
   3a8b0:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a8b4:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a8b8:	b	3a8cc <__assert_fail@plt+0x29178>
   3a8bc:	ldr	r0, [fp, #-16]
   3a8c0:	cmp	r0, #1
   3a8c4:	bcc	3a8dc <__assert_fail@plt+0x29188>
   3a8c8:	b	3a8e8 <__assert_fail@plt+0x29194>
   3a8cc:	ldr	r0, [fp, #-16]
   3a8d0:	movw	r1, #0
   3a8d4:	cmp	r1, r0
   3a8d8:	bcs	3a8e8 <__assert_fail@plt+0x29194>
   3a8dc:	movw	r0, #0
   3a8e0:	str	r0, [fp, #-24]	; 0xffffffe8
   3a8e4:	b	3a900 <__assert_fail@plt+0x291ac>
   3a8e8:	ldr	r0, [fp, #-16]
   3a8ec:	movw	r1, #0
   3a8f0:	sub	r0, r1, r0
   3a8f4:	movw	r1, #127	; 0x7f
   3a8f8:	udiv	r0, r1, r0
   3a8fc:	str	r0, [fp, #-24]	; 0xffffffe8
   3a900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a904:	ldr	r1, [fp, #-12]
   3a908:	mvn	r2, #0
   3a90c:	sub	r1, r2, r1
   3a910:	cmp	r0, r1
   3a914:	bls	3aa20 <__assert_fail@plt+0x292cc>
   3a918:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a91c:	ldr	r0, [fp, #-16]
   3a920:	cmn	r0, #1
   3a924:	bne	3a970 <__assert_fail@plt+0x2921c>
   3a928:	b	3a948 <__assert_fail@plt+0x291f4>
   3a92c:	ldr	r0, [fp, #-12]
   3a930:	mvn	r1, #127	; 0x7f
   3a934:	add	r0, r0, r1
   3a938:	movw	r1, #0
   3a93c:	cmp	r1, r0
   3a940:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a944:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a948:	ldr	r0, [fp, #-12]
   3a94c:	movw	r1, #0
   3a950:	cmp	r1, r0
   3a954:	bcs	3aa38 <__assert_fail@plt+0x292e4>
   3a958:	ldr	r0, [fp, #-12]
   3a95c:	sub	r0, r0, #1
   3a960:	movw	r1, #127	; 0x7f
   3a964:	cmp	r1, r0
   3a968:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a96c:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a970:	ldr	r0, [fp, #-16]
   3a974:	mvn	r1, #127	; 0x7f
   3a978:	udiv	r0, r1, r0
   3a97c:	ldr	r1, [fp, #-12]
   3a980:	cmp	r0, r1
   3a984:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a988:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a98c:	ldr	r0, [fp, #-16]
   3a990:	cmp	r0, #0
   3a994:	bne	3a99c <__assert_fail@plt+0x29248>
   3a998:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a99c:	ldr	r0, [fp, #-12]
   3a9a0:	cmp	r0, #0
   3a9a4:	bcs	3aa08 <__assert_fail@plt+0x292b4>
   3a9a8:	ldr	r0, [fp, #-12]
   3a9ac:	cmn	r0, #1
   3a9b0:	bne	3a9ec <__assert_fail@plt+0x29298>
   3a9b4:	b	3a9d4 <__assert_fail@plt+0x29280>
   3a9b8:	ldr	r0, [fp, #-16]
   3a9bc:	mvn	r1, #127	; 0x7f
   3a9c0:	add	r0, r0, r1
   3a9c4:	movw	r1, #0
   3a9c8:	cmp	r1, r0
   3a9cc:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a9d0:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a9d4:	ldr	r0, [fp, #-16]
   3a9d8:	sub	r0, r0, #1
   3a9dc:	movw	r1, #127	; 0x7f
   3a9e0:	cmp	r1, r0
   3a9e4:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3a9e8:	b	3aa38 <__assert_fail@plt+0x292e4>
   3a9ec:	ldr	r0, [fp, #-12]
   3a9f0:	mvn	r1, #127	; 0x7f
   3a9f4:	udiv	r0, r1, r0
   3a9f8:	ldr	r1, [fp, #-16]
   3a9fc:	cmp	r0, r1
   3aa00:	bcc	3aa20 <__assert_fail@plt+0x292cc>
   3aa04:	b	3aa38 <__assert_fail@plt+0x292e4>
   3aa08:	ldr	r0, [fp, #-16]
   3aa0c:	movw	r1, #127	; 0x7f
   3aa10:	udiv	r0, r1, r0
   3aa14:	ldr	r1, [fp, #-12]
   3aa18:	cmp	r0, r1
   3aa1c:	bcs	3aa38 <__assert_fail@plt+0x292e4>
   3aa20:	ldr	r0, [fp, #-12]
   3aa24:	ldr	r1, [fp, #-16]
   3aa28:	mul	r0, r0, r1
   3aa2c:	sxtb	r0, r0
   3aa30:	str	r0, [fp, #-20]	; 0xffffffec
   3aa34:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3aa38:	ldr	r0, [fp, #-12]
   3aa3c:	ldr	r1, [fp, #-16]
   3aa40:	mul	r0, r0, r1
   3aa44:	sxtb	r0, r0
   3aa48:	str	r0, [fp, #-20]	; 0xffffffec
   3aa4c:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3aa50:	ldr	r0, [fp, #-16]
   3aa54:	cmp	r0, #0
   3aa58:	bcs	3ab64 <__assert_fail@plt+0x29410>
   3aa5c:	ldr	r0, [fp, #-12]
   3aa60:	cmp	r0, #0
   3aa64:	bcs	3aaec <__assert_fail@plt+0x29398>
   3aa68:	b	3aa88 <__assert_fail@plt+0x29334>
   3aa6c:	ldr	r0, [fp, #-12]
   3aa70:	ldr	r1, [fp, #-16]
   3aa74:	movw	r2, #255	; 0xff
   3aa78:	udiv	r1, r2, r1
   3aa7c:	cmp	r0, r1
   3aa80:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3aa84:	b	3ac18 <__assert_fail@plt+0x294c4>
   3aa88:	b	3aa9c <__assert_fail@plt+0x29348>
   3aa8c:	ldr	r0, [fp, #-16]
   3aa90:	cmp	r0, #1
   3aa94:	bcc	3aaac <__assert_fail@plt+0x29358>
   3aa98:	b	3aab8 <__assert_fail@plt+0x29364>
   3aa9c:	ldr	r0, [fp, #-16]
   3aaa0:	movw	r1, #0
   3aaa4:	cmp	r1, r0
   3aaa8:	bcs	3aab8 <__assert_fail@plt+0x29364>
   3aaac:	movw	r0, #0
   3aab0:	str	r0, [fp, #-28]	; 0xffffffe4
   3aab4:	b	3aad0 <__assert_fail@plt+0x2937c>
   3aab8:	ldr	r0, [fp, #-16]
   3aabc:	movw	r1, #0
   3aac0:	sub	r0, r1, r0
   3aac4:	movw	r1, #255	; 0xff
   3aac8:	udiv	r0, r1, r0
   3aacc:	str	r0, [fp, #-28]	; 0xffffffe4
   3aad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aad4:	ldr	r1, [fp, #-12]
   3aad8:	mvn	r2, #0
   3aadc:	sub	r1, r2, r1
   3aae0:	cmp	r0, r1
   3aae4:	bls	3ac00 <__assert_fail@plt+0x294ac>
   3aae8:	b	3ac18 <__assert_fail@plt+0x294c4>
   3aaec:	b	3aaf4 <__assert_fail@plt+0x293a0>
   3aaf0:	b	3aaf8 <__assert_fail@plt+0x293a4>
   3aaf4:	b	3ab48 <__assert_fail@plt+0x293f4>
   3aaf8:	ldr	r0, [fp, #-16]
   3aafc:	cmn	r0, #1
   3ab00:	bne	3ab48 <__assert_fail@plt+0x293f4>
   3ab04:	b	3ab20 <__assert_fail@plt+0x293cc>
   3ab08:	ldr	r0, [fp, #-12]
   3ab0c:	add	r0, r0, #0
   3ab10:	movw	r1, #0
   3ab14:	cmp	r1, r0
   3ab18:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3ab1c:	b	3ac18 <__assert_fail@plt+0x294c4>
   3ab20:	ldr	r0, [fp, #-12]
   3ab24:	movw	r1, #0
   3ab28:	cmp	r1, r0
   3ab2c:	bcs	3ac18 <__assert_fail@plt+0x294c4>
   3ab30:	ldr	r0, [fp, #-12]
   3ab34:	sub	r0, r0, #1
   3ab38:	mvn	r1, #0
   3ab3c:	cmp	r1, r0
   3ab40:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3ab44:	b	3ac18 <__assert_fail@plt+0x294c4>
   3ab48:	ldr	r0, [fp, #-16]
   3ab4c:	movw	r1, #0
   3ab50:	udiv	r0, r1, r0
   3ab54:	ldr	r1, [fp, #-12]
   3ab58:	cmp	r0, r1
   3ab5c:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3ab60:	b	3ac18 <__assert_fail@plt+0x294c4>
   3ab64:	ldr	r0, [fp, #-16]
   3ab68:	cmp	r0, #0
   3ab6c:	bne	3ab74 <__assert_fail@plt+0x29420>
   3ab70:	b	3ac18 <__assert_fail@plt+0x294c4>
   3ab74:	ldr	r0, [fp, #-12]
   3ab78:	cmp	r0, #0
   3ab7c:	bcs	3abe8 <__assert_fail@plt+0x29494>
   3ab80:	b	3ab88 <__assert_fail@plt+0x29434>
   3ab84:	b	3ab8c <__assert_fail@plt+0x29438>
   3ab88:	b	3abcc <__assert_fail@plt+0x29478>
   3ab8c:	ldr	r0, [fp, #-12]
   3ab90:	cmn	r0, #1
   3ab94:	bne	3abcc <__assert_fail@plt+0x29478>
   3ab98:	b	3abb4 <__assert_fail@plt+0x29460>
   3ab9c:	ldr	r0, [fp, #-16]
   3aba0:	add	r0, r0, #0
   3aba4:	movw	r1, #0
   3aba8:	cmp	r1, r0
   3abac:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3abb0:	b	3ac18 <__assert_fail@plt+0x294c4>
   3abb4:	ldr	r0, [fp, #-16]
   3abb8:	sub	r0, r0, #1
   3abbc:	mvn	r1, #0
   3abc0:	cmp	r1, r0
   3abc4:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3abc8:	b	3ac18 <__assert_fail@plt+0x294c4>
   3abcc:	ldr	r0, [fp, #-12]
   3abd0:	movw	r1, #0
   3abd4:	udiv	r0, r1, r0
   3abd8:	ldr	r1, [fp, #-16]
   3abdc:	cmp	r0, r1
   3abe0:	bcc	3ac00 <__assert_fail@plt+0x294ac>
   3abe4:	b	3ac18 <__assert_fail@plt+0x294c4>
   3abe8:	ldr	r0, [fp, #-16]
   3abec:	movw	r1, #255	; 0xff
   3abf0:	udiv	r0, r1, r0
   3abf4:	ldr	r1, [fp, #-12]
   3abf8:	cmp	r0, r1
   3abfc:	bcs	3ac18 <__assert_fail@plt+0x294c4>
   3ac00:	ldr	r0, [fp, #-12]
   3ac04:	ldr	r1, [fp, #-16]
   3ac08:	mul	r0, r0, r1
   3ac0c:	and	r0, r0, #255	; 0xff
   3ac10:	str	r0, [fp, #-20]	; 0xffffffec
   3ac14:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3ac18:	ldr	r0, [fp, #-12]
   3ac1c:	ldr	r1, [fp, #-16]
   3ac20:	mul	r0, r0, r1
   3ac24:	and	r0, r0, #255	; 0xff
   3ac28:	str	r0, [fp, #-20]	; 0xffffffec
   3ac2c:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3ac30:	b	3afe8 <__assert_fail@plt+0x29894>
   3ac34:	b	3ae08 <__assert_fail@plt+0x296b4>
   3ac38:	ldr	r0, [fp, #-16]
   3ac3c:	cmp	r0, #0
   3ac40:	bcs	3ad44 <__assert_fail@plt+0x295f0>
   3ac44:	ldr	r0, [fp, #-12]
   3ac48:	cmp	r0, #0
   3ac4c:	bcs	3acd4 <__assert_fail@plt+0x29580>
   3ac50:	b	3ac70 <__assert_fail@plt+0x2951c>
   3ac54:	ldr	r0, [fp, #-12]
   3ac58:	ldr	r1, [fp, #-16]
   3ac5c:	movw	r2, #32767	; 0x7fff
   3ac60:	udiv	r1, r2, r1
   3ac64:	cmp	r0, r1
   3ac68:	bcc	3add8 <__assert_fail@plt+0x29684>
   3ac6c:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ac70:	b	3ac84 <__assert_fail@plt+0x29530>
   3ac74:	ldr	r0, [fp, #-16]
   3ac78:	cmp	r0, #1
   3ac7c:	bcc	3ac94 <__assert_fail@plt+0x29540>
   3ac80:	b	3aca0 <__assert_fail@plt+0x2954c>
   3ac84:	ldr	r0, [fp, #-16]
   3ac88:	movw	r1, #0
   3ac8c:	cmp	r1, r0
   3ac90:	bcs	3aca0 <__assert_fail@plt+0x2954c>
   3ac94:	movw	r0, #0
   3ac98:	str	r0, [fp, #-32]	; 0xffffffe0
   3ac9c:	b	3acb8 <__assert_fail@plt+0x29564>
   3aca0:	ldr	r0, [fp, #-16]
   3aca4:	movw	r1, #0
   3aca8:	sub	r0, r1, r0
   3acac:	movw	r1, #32767	; 0x7fff
   3acb0:	udiv	r0, r1, r0
   3acb4:	str	r0, [fp, #-32]	; 0xffffffe0
   3acb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3acbc:	ldr	r1, [fp, #-12]
   3acc0:	mvn	r2, #0
   3acc4:	sub	r1, r2, r1
   3acc8:	cmp	r0, r1
   3accc:	bls	3add8 <__assert_fail@plt+0x29684>
   3acd0:	b	3adf0 <__assert_fail@plt+0x2969c>
   3acd4:	ldr	r0, [fp, #-16]
   3acd8:	cmn	r0, #1
   3acdc:	bne	3ad28 <__assert_fail@plt+0x295d4>
   3ace0:	b	3ad00 <__assert_fail@plt+0x295ac>
   3ace4:	ldr	r0, [pc, #3840]	; 3bbec <__assert_fail@plt+0x2a498>
   3ace8:	ldr	r1, [fp, #-12]
   3acec:	add	r0, r1, r0
   3acf0:	movw	r1, #0
   3acf4:	cmp	r1, r0
   3acf8:	bcc	3add8 <__assert_fail@plt+0x29684>
   3acfc:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ad00:	ldr	r0, [fp, #-12]
   3ad04:	movw	r1, #0
   3ad08:	cmp	r1, r0
   3ad0c:	bcs	3adf0 <__assert_fail@plt+0x2969c>
   3ad10:	ldr	r0, [fp, #-12]
   3ad14:	sub	r0, r0, #1
   3ad18:	movw	r1, #32767	; 0x7fff
   3ad1c:	cmp	r1, r0
   3ad20:	bcc	3add8 <__assert_fail@plt+0x29684>
   3ad24:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ad28:	ldr	r0, [pc, #3772]	; 3bbec <__assert_fail@plt+0x2a498>
   3ad2c:	ldr	r1, [fp, #-16]
   3ad30:	udiv	r0, r0, r1
   3ad34:	ldr	r1, [fp, #-12]
   3ad38:	cmp	r0, r1
   3ad3c:	bcc	3add8 <__assert_fail@plt+0x29684>
   3ad40:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ad44:	ldr	r0, [fp, #-16]
   3ad48:	cmp	r0, #0
   3ad4c:	bne	3ad54 <__assert_fail@plt+0x29600>
   3ad50:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ad54:	ldr	r0, [fp, #-12]
   3ad58:	cmp	r0, #0
   3ad5c:	bcs	3adc0 <__assert_fail@plt+0x2966c>
   3ad60:	ldr	r0, [fp, #-12]
   3ad64:	cmn	r0, #1
   3ad68:	bne	3ada4 <__assert_fail@plt+0x29650>
   3ad6c:	b	3ad8c <__assert_fail@plt+0x29638>
   3ad70:	ldr	r0, [pc, #3700]	; 3bbec <__assert_fail@plt+0x2a498>
   3ad74:	ldr	r1, [fp, #-16]
   3ad78:	add	r0, r1, r0
   3ad7c:	movw	r1, #0
   3ad80:	cmp	r1, r0
   3ad84:	bcc	3add8 <__assert_fail@plt+0x29684>
   3ad88:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ad8c:	ldr	r0, [fp, #-16]
   3ad90:	sub	r0, r0, #1
   3ad94:	movw	r1, #32767	; 0x7fff
   3ad98:	cmp	r1, r0
   3ad9c:	bcc	3add8 <__assert_fail@plt+0x29684>
   3ada0:	b	3adf0 <__assert_fail@plt+0x2969c>
   3ada4:	ldr	r0, [pc, #3648]	; 3bbec <__assert_fail@plt+0x2a498>
   3ada8:	ldr	r1, [fp, #-12]
   3adac:	udiv	r0, r0, r1
   3adb0:	ldr	r1, [fp, #-16]
   3adb4:	cmp	r0, r1
   3adb8:	bcc	3add8 <__assert_fail@plt+0x29684>
   3adbc:	b	3adf0 <__assert_fail@plt+0x2969c>
   3adc0:	ldr	r0, [fp, #-16]
   3adc4:	movw	r1, #32767	; 0x7fff
   3adc8:	udiv	r0, r1, r0
   3adcc:	ldr	r1, [fp, #-12]
   3add0:	cmp	r0, r1
   3add4:	bcs	3adf0 <__assert_fail@plt+0x2969c>
   3add8:	ldr	r0, [fp, #-12]
   3addc:	ldr	r1, [fp, #-16]
   3ade0:	mul	r0, r0, r1
   3ade4:	sxth	r0, r0
   3ade8:	str	r0, [fp, #-20]	; 0xffffffec
   3adec:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3adf0:	ldr	r0, [fp, #-12]
   3adf4:	ldr	r1, [fp, #-16]
   3adf8:	mul	r0, r0, r1
   3adfc:	sxth	r0, r0
   3ae00:	str	r0, [fp, #-20]	; 0xffffffec
   3ae04:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3ae08:	ldr	r0, [fp, #-16]
   3ae0c:	cmp	r0, #0
   3ae10:	bcs	3af1c <__assert_fail@plt+0x297c8>
   3ae14:	ldr	r0, [fp, #-12]
   3ae18:	cmp	r0, #0
   3ae1c:	bcs	3aea4 <__assert_fail@plt+0x29750>
   3ae20:	b	3ae40 <__assert_fail@plt+0x296ec>
   3ae24:	ldr	r0, [fp, #-12]
   3ae28:	ldr	r1, [fp, #-16]
   3ae2c:	movw	r2, #65535	; 0xffff
   3ae30:	udiv	r1, r2, r1
   3ae34:	cmp	r0, r1
   3ae38:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3ae3c:	b	3afd0 <__assert_fail@plt+0x2987c>
   3ae40:	b	3ae54 <__assert_fail@plt+0x29700>
   3ae44:	ldr	r0, [fp, #-16]
   3ae48:	cmp	r0, #1
   3ae4c:	bcc	3ae64 <__assert_fail@plt+0x29710>
   3ae50:	b	3ae70 <__assert_fail@plt+0x2971c>
   3ae54:	ldr	r0, [fp, #-16]
   3ae58:	movw	r1, #0
   3ae5c:	cmp	r1, r0
   3ae60:	bcs	3ae70 <__assert_fail@plt+0x2971c>
   3ae64:	movw	r0, #0
   3ae68:	str	r0, [fp, #-36]	; 0xffffffdc
   3ae6c:	b	3ae88 <__assert_fail@plt+0x29734>
   3ae70:	ldr	r0, [fp, #-16]
   3ae74:	movw	r1, #0
   3ae78:	sub	r0, r1, r0
   3ae7c:	movw	r1, #65535	; 0xffff
   3ae80:	udiv	r0, r1, r0
   3ae84:	str	r0, [fp, #-36]	; 0xffffffdc
   3ae88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ae8c:	ldr	r1, [fp, #-12]
   3ae90:	mvn	r2, #0
   3ae94:	sub	r1, r2, r1
   3ae98:	cmp	r0, r1
   3ae9c:	bls	3afb8 <__assert_fail@plt+0x29864>
   3aea0:	b	3afd0 <__assert_fail@plt+0x2987c>
   3aea4:	b	3aeac <__assert_fail@plt+0x29758>
   3aea8:	b	3aeb0 <__assert_fail@plt+0x2975c>
   3aeac:	b	3af00 <__assert_fail@plt+0x297ac>
   3aeb0:	ldr	r0, [fp, #-16]
   3aeb4:	cmn	r0, #1
   3aeb8:	bne	3af00 <__assert_fail@plt+0x297ac>
   3aebc:	b	3aed8 <__assert_fail@plt+0x29784>
   3aec0:	ldr	r0, [fp, #-12]
   3aec4:	add	r0, r0, #0
   3aec8:	movw	r1, #0
   3aecc:	cmp	r1, r0
   3aed0:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3aed4:	b	3afd0 <__assert_fail@plt+0x2987c>
   3aed8:	ldr	r0, [fp, #-12]
   3aedc:	movw	r1, #0
   3aee0:	cmp	r1, r0
   3aee4:	bcs	3afd0 <__assert_fail@plt+0x2987c>
   3aee8:	ldr	r0, [fp, #-12]
   3aeec:	sub	r0, r0, #1
   3aef0:	mvn	r1, #0
   3aef4:	cmp	r1, r0
   3aef8:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3aefc:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af00:	ldr	r0, [fp, #-16]
   3af04:	movw	r1, #0
   3af08:	udiv	r0, r1, r0
   3af0c:	ldr	r1, [fp, #-12]
   3af10:	cmp	r0, r1
   3af14:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3af18:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af1c:	ldr	r0, [fp, #-16]
   3af20:	cmp	r0, #0
   3af24:	bne	3af2c <__assert_fail@plt+0x297d8>
   3af28:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af2c:	ldr	r0, [fp, #-12]
   3af30:	cmp	r0, #0
   3af34:	bcs	3afa0 <__assert_fail@plt+0x2984c>
   3af38:	b	3af40 <__assert_fail@plt+0x297ec>
   3af3c:	b	3af44 <__assert_fail@plt+0x297f0>
   3af40:	b	3af84 <__assert_fail@plt+0x29830>
   3af44:	ldr	r0, [fp, #-12]
   3af48:	cmn	r0, #1
   3af4c:	bne	3af84 <__assert_fail@plt+0x29830>
   3af50:	b	3af6c <__assert_fail@plt+0x29818>
   3af54:	ldr	r0, [fp, #-16]
   3af58:	add	r0, r0, #0
   3af5c:	movw	r1, #0
   3af60:	cmp	r1, r0
   3af64:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3af68:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af6c:	ldr	r0, [fp, #-16]
   3af70:	sub	r0, r0, #1
   3af74:	mvn	r1, #0
   3af78:	cmp	r1, r0
   3af7c:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3af80:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af84:	ldr	r0, [fp, #-12]
   3af88:	movw	r1, #0
   3af8c:	udiv	r0, r1, r0
   3af90:	ldr	r1, [fp, #-16]
   3af94:	cmp	r0, r1
   3af98:	bcc	3afb8 <__assert_fail@plt+0x29864>
   3af9c:	b	3afd0 <__assert_fail@plt+0x2987c>
   3afa0:	ldr	r0, [fp, #-16]
   3afa4:	movw	r1, #65535	; 0xffff
   3afa8:	udiv	r0, r1, r0
   3afac:	ldr	r1, [fp, #-12]
   3afb0:	cmp	r0, r1
   3afb4:	bcs	3afd0 <__assert_fail@plt+0x2987c>
   3afb8:	ldr	r0, [fp, #-12]
   3afbc:	ldr	r1, [fp, #-16]
   3afc0:	mul	r0, r0, r1
   3afc4:	uxth	r0, r0
   3afc8:	str	r0, [fp, #-20]	; 0xffffffec
   3afcc:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3afd0:	ldr	r0, [fp, #-12]
   3afd4:	ldr	r1, [fp, #-16]
   3afd8:	mul	r0, r0, r1
   3afdc:	uxth	r0, r0
   3afe0:	str	r0, [fp, #-20]	; 0xffffffec
   3afe4:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3afe8:	b	3afec <__assert_fail@plt+0x29898>
   3afec:	b	3b1b0 <__assert_fail@plt+0x29a5c>
   3aff0:	ldr	r0, [fp, #-16]
   3aff4:	cmp	r0, #0
   3aff8:	bcs	3b0f8 <__assert_fail@plt+0x299a4>
   3affc:	ldr	r0, [fp, #-12]
   3b000:	cmp	r0, #0
   3b004:	bcs	3b08c <__assert_fail@plt+0x29938>
   3b008:	b	3b028 <__assert_fail@plt+0x298d4>
   3b00c:	ldr	r0, [pc, #3024]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b010:	ldr	r1, [fp, #-12]
   3b014:	ldr	r2, [fp, #-16]
   3b018:	udiv	r0, r0, r2
   3b01c:	cmp	r1, r0
   3b020:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b024:	b	3b19c <__assert_fail@plt+0x29a48>
   3b028:	b	3b03c <__assert_fail@plt+0x298e8>
   3b02c:	ldr	r0, [fp, #-16]
   3b030:	cmp	r0, #1
   3b034:	bcc	3b04c <__assert_fail@plt+0x298f8>
   3b038:	b	3b058 <__assert_fail@plt+0x29904>
   3b03c:	ldr	r0, [fp, #-16]
   3b040:	movw	r1, #0
   3b044:	cmp	r1, r0
   3b048:	bcs	3b058 <__assert_fail@plt+0x29904>
   3b04c:	movw	r0, #0
   3b050:	str	r0, [fp, #-40]	; 0xffffffd8
   3b054:	b	3b070 <__assert_fail@plt+0x2991c>
   3b058:	ldr	r0, [pc, #2948]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b05c:	ldr	r1, [fp, #-16]
   3b060:	movw	r2, #0
   3b064:	sub	r1, r2, r1
   3b068:	udiv	r0, r0, r1
   3b06c:	str	r0, [fp, #-40]	; 0xffffffd8
   3b070:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b074:	ldr	r1, [fp, #-12]
   3b078:	mvn	r2, #0
   3b07c:	sub	r1, r2, r1
   3b080:	cmp	r0, r1
   3b084:	bls	3b188 <__assert_fail@plt+0x29a34>
   3b088:	b	3b19c <__assert_fail@plt+0x29a48>
   3b08c:	ldr	r0, [fp, #-16]
   3b090:	cmn	r0, #1
   3b094:	bne	3b0dc <__assert_fail@plt+0x29988>
   3b098:	b	3b0b4 <__assert_fail@plt+0x29960>
   3b09c:	ldr	r0, [fp, #-12]
   3b0a0:	add	r0, r0, #-2147483648	; 0x80000000
   3b0a4:	movw	r1, #0
   3b0a8:	cmp	r1, r0
   3b0ac:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b0b0:	b	3b19c <__assert_fail@plt+0x29a48>
   3b0b4:	ldr	r0, [fp, #-12]
   3b0b8:	movw	r1, #0
   3b0bc:	cmp	r1, r0
   3b0c0:	bcs	3b19c <__assert_fail@plt+0x29a48>
   3b0c4:	ldr	r0, [pc, #2840]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b0c8:	ldr	r1, [fp, #-12]
   3b0cc:	sub	r1, r1, #1
   3b0d0:	cmp	r0, r1
   3b0d4:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b0d8:	b	3b19c <__assert_fail@plt+0x29a48>
   3b0dc:	ldr	r0, [pc, #2820]	; 3bbe8 <__assert_fail@plt+0x2a494>
   3b0e0:	ldr	r1, [fp, #-16]
   3b0e4:	udiv	r0, r0, r1
   3b0e8:	ldr	r1, [fp, #-12]
   3b0ec:	cmp	r0, r1
   3b0f0:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b0f4:	b	3b19c <__assert_fail@plt+0x29a48>
   3b0f8:	ldr	r0, [fp, #-16]
   3b0fc:	cmp	r0, #0
   3b100:	bne	3b108 <__assert_fail@plt+0x299b4>
   3b104:	b	3b19c <__assert_fail@plt+0x29a48>
   3b108:	ldr	r0, [fp, #-12]
   3b10c:	cmp	r0, #0
   3b110:	bcs	3b170 <__assert_fail@plt+0x29a1c>
   3b114:	ldr	r0, [fp, #-12]
   3b118:	cmn	r0, #1
   3b11c:	bne	3b154 <__assert_fail@plt+0x29a00>
   3b120:	b	3b13c <__assert_fail@plt+0x299e8>
   3b124:	ldr	r0, [fp, #-16]
   3b128:	add	r0, r0, #-2147483648	; 0x80000000
   3b12c:	movw	r1, #0
   3b130:	cmp	r1, r0
   3b134:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b138:	b	3b19c <__assert_fail@plt+0x29a48>
   3b13c:	ldr	r0, [pc, #2720]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b140:	ldr	r1, [fp, #-16]
   3b144:	sub	r1, r1, #1
   3b148:	cmp	r0, r1
   3b14c:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b150:	b	3b19c <__assert_fail@plt+0x29a48>
   3b154:	ldr	r0, [pc, #2700]	; 3bbe8 <__assert_fail@plt+0x2a494>
   3b158:	ldr	r1, [fp, #-12]
   3b15c:	udiv	r0, r0, r1
   3b160:	ldr	r1, [fp, #-16]
   3b164:	cmp	r0, r1
   3b168:	bcc	3b188 <__assert_fail@plt+0x29a34>
   3b16c:	b	3b19c <__assert_fail@plt+0x29a48>
   3b170:	ldr	r0, [pc, #2668]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b174:	ldr	r1, [fp, #-16]
   3b178:	udiv	r0, r0, r1
   3b17c:	ldr	r1, [fp, #-12]
   3b180:	cmp	r0, r1
   3b184:	bcs	3b19c <__assert_fail@plt+0x29a48>
   3b188:	ldr	r0, [fp, #-12]
   3b18c:	ldr	r1, [fp, #-16]
   3b190:	mul	r0, r0, r1
   3b194:	str	r0, [fp, #-20]	; 0xffffffec
   3b198:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3b19c:	ldr	r0, [fp, #-12]
   3b1a0:	ldr	r1, [fp, #-16]
   3b1a4:	mul	r0, r0, r1
   3b1a8:	str	r0, [fp, #-20]	; 0xffffffec
   3b1ac:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3b1b0:	ldr	r0, [fp, #-16]
   3b1b4:	cmp	r0, #0
   3b1b8:	bcs	3b2c4 <__assert_fail@plt+0x29b70>
   3b1bc:	ldr	r0, [fp, #-12]
   3b1c0:	cmp	r0, #0
   3b1c4:	bcs	3b24c <__assert_fail@plt+0x29af8>
   3b1c8:	b	3b1e8 <__assert_fail@plt+0x29a94>
   3b1cc:	ldr	r0, [fp, #-12]
   3b1d0:	ldr	r1, [fp, #-16]
   3b1d4:	mvn	r2, #0
   3b1d8:	udiv	r1, r2, r1
   3b1dc:	cmp	r0, r1
   3b1e0:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b1e4:	b	3b374 <__assert_fail@plt+0x29c20>
   3b1e8:	b	3b1fc <__assert_fail@plt+0x29aa8>
   3b1ec:	ldr	r0, [fp, #-16]
   3b1f0:	cmp	r0, #1
   3b1f4:	bcc	3b20c <__assert_fail@plt+0x29ab8>
   3b1f8:	b	3b218 <__assert_fail@plt+0x29ac4>
   3b1fc:	ldr	r0, [fp, #-16]
   3b200:	movw	r1, #0
   3b204:	cmp	r1, r0
   3b208:	bcs	3b218 <__assert_fail@plt+0x29ac4>
   3b20c:	movw	r0, #1
   3b210:	str	r0, [fp, #-44]	; 0xffffffd4
   3b214:	b	3b230 <__assert_fail@plt+0x29adc>
   3b218:	ldr	r0, [fp, #-16]
   3b21c:	movw	r1, #0
   3b220:	sub	r0, r1, r0
   3b224:	mvn	r1, #0
   3b228:	udiv	r0, r1, r0
   3b22c:	str	r0, [fp, #-44]	; 0xffffffd4
   3b230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b234:	ldr	r1, [fp, #-12]
   3b238:	mvn	r2, #0
   3b23c:	sub	r1, r2, r1
   3b240:	cmp	r0, r1
   3b244:	bls	3b360 <__assert_fail@plt+0x29c0c>
   3b248:	b	3b374 <__assert_fail@plt+0x29c20>
   3b24c:	b	3b254 <__assert_fail@plt+0x29b00>
   3b250:	b	3b258 <__assert_fail@plt+0x29b04>
   3b254:	b	3b2a8 <__assert_fail@plt+0x29b54>
   3b258:	ldr	r0, [fp, #-16]
   3b25c:	cmn	r0, #1
   3b260:	bne	3b2a8 <__assert_fail@plt+0x29b54>
   3b264:	b	3b280 <__assert_fail@plt+0x29b2c>
   3b268:	ldr	r0, [fp, #-12]
   3b26c:	add	r0, r0, #0
   3b270:	movw	r1, #0
   3b274:	cmp	r1, r0
   3b278:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b27c:	b	3b374 <__assert_fail@plt+0x29c20>
   3b280:	ldr	r0, [fp, #-12]
   3b284:	movw	r1, #0
   3b288:	cmp	r1, r0
   3b28c:	bcs	3b374 <__assert_fail@plt+0x29c20>
   3b290:	ldr	r0, [fp, #-12]
   3b294:	sub	r0, r0, #1
   3b298:	mvn	r1, #0
   3b29c:	cmp	r1, r0
   3b2a0:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b2a4:	b	3b374 <__assert_fail@plt+0x29c20>
   3b2a8:	ldr	r0, [fp, #-16]
   3b2ac:	movw	r1, #0
   3b2b0:	udiv	r0, r1, r0
   3b2b4:	ldr	r1, [fp, #-12]
   3b2b8:	cmp	r0, r1
   3b2bc:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b2c0:	b	3b374 <__assert_fail@plt+0x29c20>
   3b2c4:	ldr	r0, [fp, #-16]
   3b2c8:	cmp	r0, #0
   3b2cc:	bne	3b2d4 <__assert_fail@plt+0x29b80>
   3b2d0:	b	3b374 <__assert_fail@plt+0x29c20>
   3b2d4:	ldr	r0, [fp, #-12]
   3b2d8:	cmp	r0, #0
   3b2dc:	bcs	3b348 <__assert_fail@plt+0x29bf4>
   3b2e0:	b	3b2e8 <__assert_fail@plt+0x29b94>
   3b2e4:	b	3b2ec <__assert_fail@plt+0x29b98>
   3b2e8:	b	3b32c <__assert_fail@plt+0x29bd8>
   3b2ec:	ldr	r0, [fp, #-12]
   3b2f0:	cmn	r0, #1
   3b2f4:	bne	3b32c <__assert_fail@plt+0x29bd8>
   3b2f8:	b	3b314 <__assert_fail@plt+0x29bc0>
   3b2fc:	ldr	r0, [fp, #-16]
   3b300:	add	r0, r0, #0
   3b304:	movw	r1, #0
   3b308:	cmp	r1, r0
   3b30c:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b310:	b	3b374 <__assert_fail@plt+0x29c20>
   3b314:	ldr	r0, [fp, #-16]
   3b318:	sub	r0, r0, #1
   3b31c:	mvn	r1, #0
   3b320:	cmp	r1, r0
   3b324:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b328:	b	3b374 <__assert_fail@plt+0x29c20>
   3b32c:	ldr	r0, [fp, #-12]
   3b330:	movw	r1, #0
   3b334:	udiv	r0, r1, r0
   3b338:	ldr	r1, [fp, #-16]
   3b33c:	cmp	r0, r1
   3b340:	bcc	3b360 <__assert_fail@plt+0x29c0c>
   3b344:	b	3b374 <__assert_fail@plt+0x29c20>
   3b348:	ldr	r0, [fp, #-16]
   3b34c:	mvn	r1, #0
   3b350:	udiv	r0, r1, r0
   3b354:	ldr	r1, [fp, #-12]
   3b358:	cmp	r0, r1
   3b35c:	bcs	3b374 <__assert_fail@plt+0x29c20>
   3b360:	ldr	r0, [fp, #-12]
   3b364:	ldr	r1, [fp, #-16]
   3b368:	mul	r0, r0, r1
   3b36c:	str	r0, [fp, #-20]	; 0xffffffec
   3b370:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3b374:	ldr	r0, [fp, #-12]
   3b378:	ldr	r1, [fp, #-16]
   3b37c:	mul	r0, r0, r1
   3b380:	str	r0, [fp, #-20]	; 0xffffffec
   3b384:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3b388:	b	3b38c <__assert_fail@plt+0x29c38>
   3b38c:	b	3b550 <__assert_fail@plt+0x29dfc>
   3b390:	ldr	r0, [fp, #-16]
   3b394:	cmp	r0, #0
   3b398:	bcs	3b498 <__assert_fail@plt+0x29d44>
   3b39c:	ldr	r0, [fp, #-12]
   3b3a0:	cmp	r0, #0
   3b3a4:	bcs	3b42c <__assert_fail@plt+0x29cd8>
   3b3a8:	b	3b3c8 <__assert_fail@plt+0x29c74>
   3b3ac:	ldr	r0, [pc, #2096]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b3b0:	ldr	r1, [fp, #-12]
   3b3b4:	ldr	r2, [fp, #-16]
   3b3b8:	udiv	r0, r0, r2
   3b3bc:	cmp	r1, r0
   3b3c0:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b3c4:	b	3b53c <__assert_fail@plt+0x29de8>
   3b3c8:	b	3b3dc <__assert_fail@plt+0x29c88>
   3b3cc:	ldr	r0, [fp, #-16]
   3b3d0:	cmp	r0, #1
   3b3d4:	bcc	3b3ec <__assert_fail@plt+0x29c98>
   3b3d8:	b	3b3f8 <__assert_fail@plt+0x29ca4>
   3b3dc:	ldr	r0, [fp, #-16]
   3b3e0:	movw	r1, #0
   3b3e4:	cmp	r1, r0
   3b3e8:	bcs	3b3f8 <__assert_fail@plt+0x29ca4>
   3b3ec:	movw	r0, #0
   3b3f0:	str	r0, [fp, #-48]	; 0xffffffd0
   3b3f4:	b	3b410 <__assert_fail@plt+0x29cbc>
   3b3f8:	ldr	r0, [pc, #2020]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b3fc:	ldr	r1, [fp, #-16]
   3b400:	movw	r2, #0
   3b404:	sub	r1, r2, r1
   3b408:	udiv	r0, r0, r1
   3b40c:	str	r0, [fp, #-48]	; 0xffffffd0
   3b410:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b414:	ldr	r1, [fp, #-12]
   3b418:	mvn	r2, #0
   3b41c:	sub	r1, r2, r1
   3b420:	cmp	r0, r1
   3b424:	bls	3b528 <__assert_fail@plt+0x29dd4>
   3b428:	b	3b53c <__assert_fail@plt+0x29de8>
   3b42c:	ldr	r0, [fp, #-16]
   3b430:	cmn	r0, #1
   3b434:	bne	3b47c <__assert_fail@plt+0x29d28>
   3b438:	b	3b454 <__assert_fail@plt+0x29d00>
   3b43c:	ldr	r0, [fp, #-12]
   3b440:	add	r0, r0, #-2147483648	; 0x80000000
   3b444:	movw	r1, #0
   3b448:	cmp	r1, r0
   3b44c:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b450:	b	3b53c <__assert_fail@plt+0x29de8>
   3b454:	ldr	r0, [fp, #-12]
   3b458:	movw	r1, #0
   3b45c:	cmp	r1, r0
   3b460:	bcs	3b53c <__assert_fail@plt+0x29de8>
   3b464:	ldr	r0, [pc, #1912]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b468:	ldr	r1, [fp, #-12]
   3b46c:	sub	r1, r1, #1
   3b470:	cmp	r0, r1
   3b474:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b478:	b	3b53c <__assert_fail@plt+0x29de8>
   3b47c:	ldr	r0, [pc, #1892]	; 3bbe8 <__assert_fail@plt+0x2a494>
   3b480:	ldr	r1, [fp, #-16]
   3b484:	udiv	r0, r0, r1
   3b488:	ldr	r1, [fp, #-12]
   3b48c:	cmp	r0, r1
   3b490:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b494:	b	3b53c <__assert_fail@plt+0x29de8>
   3b498:	ldr	r0, [fp, #-16]
   3b49c:	cmp	r0, #0
   3b4a0:	bne	3b4a8 <__assert_fail@plt+0x29d54>
   3b4a4:	b	3b53c <__assert_fail@plt+0x29de8>
   3b4a8:	ldr	r0, [fp, #-12]
   3b4ac:	cmp	r0, #0
   3b4b0:	bcs	3b510 <__assert_fail@plt+0x29dbc>
   3b4b4:	ldr	r0, [fp, #-12]
   3b4b8:	cmn	r0, #1
   3b4bc:	bne	3b4f4 <__assert_fail@plt+0x29da0>
   3b4c0:	b	3b4dc <__assert_fail@plt+0x29d88>
   3b4c4:	ldr	r0, [fp, #-16]
   3b4c8:	add	r0, r0, #-2147483648	; 0x80000000
   3b4cc:	movw	r1, #0
   3b4d0:	cmp	r1, r0
   3b4d4:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b4d8:	b	3b53c <__assert_fail@plt+0x29de8>
   3b4dc:	ldr	r0, [pc, #1792]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b4e0:	ldr	r1, [fp, #-16]
   3b4e4:	sub	r1, r1, #1
   3b4e8:	cmp	r0, r1
   3b4ec:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b4f0:	b	3b53c <__assert_fail@plt+0x29de8>
   3b4f4:	ldr	r0, [pc, #1772]	; 3bbe8 <__assert_fail@plt+0x2a494>
   3b4f8:	ldr	r1, [fp, #-12]
   3b4fc:	udiv	r0, r0, r1
   3b500:	ldr	r1, [fp, #-16]
   3b504:	cmp	r0, r1
   3b508:	bcc	3b528 <__assert_fail@plt+0x29dd4>
   3b50c:	b	3b53c <__assert_fail@plt+0x29de8>
   3b510:	ldr	r0, [pc, #1740]	; 3bbe4 <__assert_fail@plt+0x2a490>
   3b514:	ldr	r1, [fp, #-16]
   3b518:	udiv	r0, r0, r1
   3b51c:	ldr	r1, [fp, #-12]
   3b520:	cmp	r0, r1
   3b524:	bcs	3b53c <__assert_fail@plt+0x29de8>
   3b528:	ldr	r0, [fp, #-12]
   3b52c:	ldr	r1, [fp, #-16]
   3b530:	mul	r0, r0, r1
   3b534:	str	r0, [fp, #-20]	; 0xffffffec
   3b538:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3b53c:	ldr	r0, [fp, #-12]
   3b540:	ldr	r1, [fp, #-16]
   3b544:	mul	r0, r0, r1
   3b548:	str	r0, [fp, #-20]	; 0xffffffec
   3b54c:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3b550:	ldr	r0, [fp, #-16]
   3b554:	cmp	r0, #0
   3b558:	bcs	3b664 <__assert_fail@plt+0x29f10>
   3b55c:	ldr	r0, [fp, #-12]
   3b560:	cmp	r0, #0
   3b564:	bcs	3b5ec <__assert_fail@plt+0x29e98>
   3b568:	b	3b588 <__assert_fail@plt+0x29e34>
   3b56c:	ldr	r0, [fp, #-12]
   3b570:	ldr	r1, [fp, #-16]
   3b574:	mvn	r2, #0
   3b578:	udiv	r1, r2, r1
   3b57c:	cmp	r0, r1
   3b580:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b584:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b588:	b	3b59c <__assert_fail@plt+0x29e48>
   3b58c:	ldr	r0, [fp, #-16]
   3b590:	cmp	r0, #1
   3b594:	bcc	3b5ac <__assert_fail@plt+0x29e58>
   3b598:	b	3b5b8 <__assert_fail@plt+0x29e64>
   3b59c:	ldr	r0, [fp, #-16]
   3b5a0:	movw	r1, #0
   3b5a4:	cmp	r1, r0
   3b5a8:	bcs	3b5b8 <__assert_fail@plt+0x29e64>
   3b5ac:	movw	r0, #1
   3b5b0:	str	r0, [fp, #-52]	; 0xffffffcc
   3b5b4:	b	3b5d0 <__assert_fail@plt+0x29e7c>
   3b5b8:	ldr	r0, [fp, #-16]
   3b5bc:	movw	r1, #0
   3b5c0:	sub	r0, r1, r0
   3b5c4:	mvn	r1, #0
   3b5c8:	udiv	r0, r1, r0
   3b5cc:	str	r0, [fp, #-52]	; 0xffffffcc
   3b5d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b5d4:	ldr	r1, [fp, #-12]
   3b5d8:	mvn	r2, #0
   3b5dc:	sub	r1, r2, r1
   3b5e0:	cmp	r0, r1
   3b5e4:	bls	3b700 <__assert_fail@plt+0x29fac>
   3b5e8:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b5ec:	b	3b5f4 <__assert_fail@plt+0x29ea0>
   3b5f0:	b	3b5f8 <__assert_fail@plt+0x29ea4>
   3b5f4:	b	3b648 <__assert_fail@plt+0x29ef4>
   3b5f8:	ldr	r0, [fp, #-16]
   3b5fc:	cmn	r0, #1
   3b600:	bne	3b648 <__assert_fail@plt+0x29ef4>
   3b604:	b	3b620 <__assert_fail@plt+0x29ecc>
   3b608:	ldr	r0, [fp, #-12]
   3b60c:	add	r0, r0, #0
   3b610:	movw	r1, #0
   3b614:	cmp	r1, r0
   3b618:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b61c:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b620:	ldr	r0, [fp, #-12]
   3b624:	movw	r1, #0
   3b628:	cmp	r1, r0
   3b62c:	bcs	3b714 <__assert_fail@plt+0x29fc0>
   3b630:	ldr	r0, [fp, #-12]
   3b634:	sub	r0, r0, #1
   3b638:	mvn	r1, #0
   3b63c:	cmp	r1, r0
   3b640:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b644:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b648:	ldr	r0, [fp, #-16]
   3b64c:	movw	r1, #0
   3b650:	udiv	r0, r1, r0
   3b654:	ldr	r1, [fp, #-12]
   3b658:	cmp	r0, r1
   3b65c:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b660:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b664:	ldr	r0, [fp, #-16]
   3b668:	cmp	r0, #0
   3b66c:	bne	3b674 <__assert_fail@plt+0x29f20>
   3b670:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b674:	ldr	r0, [fp, #-12]
   3b678:	cmp	r0, #0
   3b67c:	bcs	3b6e8 <__assert_fail@plt+0x29f94>
   3b680:	b	3b688 <__assert_fail@plt+0x29f34>
   3b684:	b	3b68c <__assert_fail@plt+0x29f38>
   3b688:	b	3b6cc <__assert_fail@plt+0x29f78>
   3b68c:	ldr	r0, [fp, #-12]
   3b690:	cmn	r0, #1
   3b694:	bne	3b6cc <__assert_fail@plt+0x29f78>
   3b698:	b	3b6b4 <__assert_fail@plt+0x29f60>
   3b69c:	ldr	r0, [fp, #-16]
   3b6a0:	add	r0, r0, #0
   3b6a4:	movw	r1, #0
   3b6a8:	cmp	r1, r0
   3b6ac:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b6b0:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b6b4:	ldr	r0, [fp, #-16]
   3b6b8:	sub	r0, r0, #1
   3b6bc:	mvn	r1, #0
   3b6c0:	cmp	r1, r0
   3b6c4:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b6c8:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b6cc:	ldr	r0, [fp, #-12]
   3b6d0:	movw	r1, #0
   3b6d4:	udiv	r0, r1, r0
   3b6d8:	ldr	r1, [fp, #-16]
   3b6dc:	cmp	r0, r1
   3b6e0:	bcc	3b700 <__assert_fail@plt+0x29fac>
   3b6e4:	b	3b714 <__assert_fail@plt+0x29fc0>
   3b6e8:	ldr	r0, [fp, #-16]
   3b6ec:	mvn	r1, #0
   3b6f0:	udiv	r0, r1, r0
   3b6f4:	ldr	r1, [fp, #-12]
   3b6f8:	cmp	r0, r1
   3b6fc:	bcs	3b714 <__assert_fail@plt+0x29fc0>
   3b700:	ldr	r0, [fp, #-12]
   3b704:	ldr	r1, [fp, #-16]
   3b708:	mul	r0, r0, r1
   3b70c:	str	r0, [fp, #-20]	; 0xffffffec
   3b710:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3b714:	ldr	r0, [fp, #-12]
   3b718:	ldr	r1, [fp, #-16]
   3b71c:	mul	r0, r0, r1
   3b720:	str	r0, [fp, #-20]	; 0xffffffec
   3b724:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3b728:	b	3b97c <__assert_fail@plt+0x2a228>
   3b72c:	ldr	r0, [fp, #-16]
   3b730:	cmp	r0, #0
   3b734:	bcs	3b894 <__assert_fail@plt+0x2a140>
   3b738:	ldr	r0, [fp, #-12]
   3b73c:	cmp	r0, #0
   3b740:	bcs	3b810 <__assert_fail@plt+0x2a0bc>
   3b744:	b	3b748 <__assert_fail@plt+0x29ff4>
   3b748:	ldr	r0, [fp, #-12]
   3b74c:	ldr	r2, [fp, #-16]
   3b750:	mvn	r1, #0
   3b754:	mvn	r3, #-2147483648	; 0x80000000
   3b758:	mov	ip, #0
   3b75c:	str	r0, [fp, #-56]	; 0xffffffc8
   3b760:	mov	r0, r1
   3b764:	mov	r1, r3
   3b768:	mov	r3, ip
   3b76c:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3b770:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3b774:	subs	r0, r2, r0
   3b778:	rscs	r1, r1, #0
   3b77c:	str	r0, [fp, #-60]	; 0xffffffc4
   3b780:	str	r1, [fp, #-64]	; 0xffffffc0
   3b784:	blt	3b954 <__assert_fail@plt+0x2a200>
   3b788:	b	3b968 <__assert_fail@plt+0x2a214>
   3b78c:	b	3b7a0 <__assert_fail@plt+0x2a04c>
   3b790:	ldr	r0, [fp, #-16]
   3b794:	cmp	r0, #1
   3b798:	bcc	3b7b0 <__assert_fail@plt+0x2a05c>
   3b79c:	b	3b7c4 <__assert_fail@plt+0x2a070>
   3b7a0:	ldr	r0, [fp, #-16]
   3b7a4:	movw	r1, #0
   3b7a8:	cmp	r1, r0
   3b7ac:	bcs	3b7c4 <__assert_fail@plt+0x2a070>
   3b7b0:	mov	r0, #0
   3b7b4:	mvn	r1, #0
   3b7b8:	str	r1, [fp, #-68]	; 0xffffffbc
   3b7bc:	str	r0, [fp, #-72]	; 0xffffffb8
   3b7c0:	b	3b7e8 <__assert_fail@plt+0x2a094>
   3b7c4:	ldr	r0, [fp, #-16]
   3b7c8:	rsb	r2, r0, #0
   3b7cc:	mvn	r0, #0
   3b7d0:	mvn	r1, #-2147483648	; 0x80000000
   3b7d4:	mov	r3, #0
   3b7d8:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3b7dc:	str	r0, [fp, #-68]	; 0xffffffbc
   3b7e0:	str	r1, [fp, #-72]	; 0xffffffb8
   3b7e4:	b	3b7e8 <__assert_fail@plt+0x2a094>
   3b7e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3b7ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3b7f0:	ldr	r2, [fp, #-12]
   3b7f4:	mvn	r2, r2
   3b7f8:	subs	r1, r2, r1
   3b7fc:	rscs	r0, r0, #0
   3b800:	str	r1, [fp, #-76]	; 0xffffffb4
   3b804:	str	r0, [fp, #-80]	; 0xffffffb0
   3b808:	bge	3b954 <__assert_fail@plt+0x2a200>
   3b80c:	b	3b968 <__assert_fail@plt+0x2a214>
   3b810:	ldr	r0, [fp, #-16]
   3b814:	cmn	r0, #1
   3b818:	bne	3b860 <__assert_fail@plt+0x2a10c>
   3b81c:	b	3b840 <__assert_fail@plt+0x2a0ec>
   3b820:	ldr	r0, [fp, #-12]
   3b824:	rsbs	r0, r0, #0
   3b828:	mov	r1, #0
   3b82c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3b830:	str	r0, [fp, #-84]	; 0xffffffac
   3b834:	str	r1, [sp, #88]	; 0x58
   3b838:	blt	3b954 <__assert_fail@plt+0x2a200>
   3b83c:	b	3b968 <__assert_fail@plt+0x2a214>
   3b840:	ldr	r0, [fp, #-12]
   3b844:	movw	r1, #0
   3b848:	cmp	r1, r0
   3b84c:	bcs	3b968 <__assert_fail@plt+0x2a214>
   3b850:	mov	r0, #0
   3b854:	cmp	r0, #0
   3b858:	bne	3b954 <__assert_fail@plt+0x2a200>
   3b85c:	b	3b968 <__assert_fail@plt+0x2a214>
   3b860:	ldr	r2, [fp, #-16]
   3b864:	mov	r1, #-2147483648	; 0x80000000
   3b868:	mov	r0, #0
   3b86c:	str	r0, [sp, #84]	; 0x54
   3b870:	ldr	r3, [sp, #84]	; 0x54
   3b874:	bl	3c428 <__assert_fail@plt+0x2acd4>
   3b878:	ldr	r2, [fp, #-12]
   3b87c:	subs	r0, r0, r2
   3b880:	sbcs	r1, r1, #0
   3b884:	str	r0, [sp, #80]	; 0x50
   3b888:	str	r1, [sp, #76]	; 0x4c
   3b88c:	blt	3b954 <__assert_fail@plt+0x2a200>
   3b890:	b	3b968 <__assert_fail@plt+0x2a214>
   3b894:	ldr	r0, [fp, #-16]
   3b898:	cmp	r0, #0
   3b89c:	bne	3b8a4 <__assert_fail@plt+0x2a150>
   3b8a0:	b	3b968 <__assert_fail@plt+0x2a214>
   3b8a4:	ldr	r0, [fp, #-12]
   3b8a8:	cmp	r0, #0
   3b8ac:	bcs	3b924 <__assert_fail@plt+0x2a1d0>
   3b8b0:	ldr	r0, [fp, #-12]
   3b8b4:	cmn	r0, #1
   3b8b8:	bne	3b8f0 <__assert_fail@plt+0x2a19c>
   3b8bc:	b	3b8e0 <__assert_fail@plt+0x2a18c>
   3b8c0:	ldr	r0, [fp, #-16]
   3b8c4:	rsbs	r0, r0, #0
   3b8c8:	mov	r1, #0
   3b8cc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3b8d0:	str	r0, [sp, #72]	; 0x48
   3b8d4:	str	r1, [sp, #68]	; 0x44
   3b8d8:	blt	3b954 <__assert_fail@plt+0x2a200>
   3b8dc:	b	3b968 <__assert_fail@plt+0x2a214>
   3b8e0:	mov	r0, #0
   3b8e4:	cmp	r0, #0
   3b8e8:	bne	3b954 <__assert_fail@plt+0x2a200>
   3b8ec:	b	3b968 <__assert_fail@plt+0x2a214>
   3b8f0:	ldr	r2, [fp, #-12]
   3b8f4:	mov	r1, #-2147483648	; 0x80000000
   3b8f8:	mov	r0, #0
   3b8fc:	str	r0, [sp, #64]	; 0x40
   3b900:	ldr	r3, [sp, #64]	; 0x40
   3b904:	bl	3c428 <__assert_fail@plt+0x2acd4>
   3b908:	ldr	r2, [fp, #-16]
   3b90c:	subs	r0, r0, r2
   3b910:	sbcs	r1, r1, #0
   3b914:	str	r0, [sp, #60]	; 0x3c
   3b918:	str	r1, [sp, #56]	; 0x38
   3b91c:	blt	3b954 <__assert_fail@plt+0x2a200>
   3b920:	b	3b968 <__assert_fail@plt+0x2a214>
   3b924:	ldr	r2, [fp, #-16]
   3b928:	mvn	r0, #0
   3b92c:	mvn	r1, #-2147483648	; 0x80000000
   3b930:	mov	r3, #0
   3b934:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3b938:	ldr	r2, [fp, #-12]
   3b93c:	subs	r0, r0, r2
   3b940:	sbcs	r1, r1, #0
   3b944:	str	r0, [sp, #52]	; 0x34
   3b948:	str	r1, [sp, #48]	; 0x30
   3b94c:	bge	3b968 <__assert_fail@plt+0x2a214>
   3b950:	b	3b954 <__assert_fail@plt+0x2a200>
   3b954:	ldr	r0, [fp, #-12]
   3b958:	ldr	r1, [fp, #-16]
   3b95c:	mul	r0, r0, r1
   3b960:	str	r0, [fp, #-20]	; 0xffffffec
   3b964:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3b968:	ldr	r0, [fp, #-12]
   3b96c:	ldr	r1, [fp, #-16]
   3b970:	mul	r0, r0, r1
   3b974:	str	r0, [fp, #-20]	; 0xffffffec
   3b978:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3b97c:	ldr	r0, [fp, #-16]
   3b980:	cmp	r0, #0
   3b984:	bcs	3bad0 <__assert_fail@plt+0x2a37c>
   3b988:	ldr	r0, [fp, #-12]
   3b98c:	cmp	r0, #0
   3b990:	bcs	3ba58 <__assert_fail@plt+0x2a304>
   3b994:	b	3b9d0 <__assert_fail@plt+0x2a27c>
   3b998:	ldr	r0, [fp, #-12]
   3b99c:	ldr	r2, [fp, #-16]
   3b9a0:	mvn	r1, #0
   3b9a4:	mov	r3, #0
   3b9a8:	str	r0, [sp, #44]	; 0x2c
   3b9ac:	mov	r0, r1
   3b9b0:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3b9b4:	ldr	r2, [sp, #44]	; 0x2c
   3b9b8:	subs	r0, r2, r0
   3b9bc:	rscs	r1, r1, #0
   3b9c0:	str	r0, [sp, #40]	; 0x28
   3b9c4:	str	r1, [sp, #36]	; 0x24
   3b9c8:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3b9cc:	b	3bb9c <__assert_fail@plt+0x2a448>
   3b9d0:	b	3b9e4 <__assert_fail@plt+0x2a290>
   3b9d4:	ldr	r0, [fp, #-16]
   3b9d8:	cmp	r0, #1
   3b9dc:	bcc	3b9f4 <__assert_fail@plt+0x2a2a0>
   3b9e0:	b	3ba08 <__assert_fail@plt+0x2a2b4>
   3b9e4:	ldr	r0, [fp, #-16]
   3b9e8:	movw	r1, #0
   3b9ec:	cmp	r1, r0
   3b9f0:	bcs	3ba08 <__assert_fail@plt+0x2a2b4>
   3b9f4:	mov	r0, #1
   3b9f8:	mvn	r1, #0
   3b9fc:	str	r1, [sp, #32]
   3ba00:	str	r0, [sp, #28]
   3ba04:	b	3ba30 <__assert_fail@plt+0x2a2dc>
   3ba08:	ldr	r0, [fp, #-16]
   3ba0c:	rsb	r2, r0, #0
   3ba10:	mvn	r0, #0
   3ba14:	mov	r3, #0
   3ba18:	str	r0, [sp, #24]
   3ba1c:	ldr	r1, [sp, #24]
   3ba20:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3ba24:	str	r0, [sp, #32]
   3ba28:	str	r1, [sp, #28]
   3ba2c:	b	3ba30 <__assert_fail@plt+0x2a2dc>
   3ba30:	ldr	r0, [sp, #28]
   3ba34:	ldr	r1, [sp, #32]
   3ba38:	ldr	r2, [fp, #-12]
   3ba3c:	mvn	r2, r2
   3ba40:	subs	r1, r2, r1
   3ba44:	rscs	r0, r0, #0
   3ba48:	str	r1, [sp, #20]
   3ba4c:	str	r0, [sp, #16]
   3ba50:	bcs	3bb88 <__assert_fail@plt+0x2a434>
   3ba54:	b	3bb9c <__assert_fail@plt+0x2a448>
   3ba58:	b	3ba60 <__assert_fail@plt+0x2a30c>
   3ba5c:	b	3ba64 <__assert_fail@plt+0x2a310>
   3ba60:	b	3bab4 <__assert_fail@plt+0x2a360>
   3ba64:	ldr	r0, [fp, #-16]
   3ba68:	cmn	r0, #1
   3ba6c:	bne	3bab4 <__assert_fail@plt+0x2a360>
   3ba70:	b	3ba8c <__assert_fail@plt+0x2a338>
   3ba74:	ldr	r0, [fp, #-12]
   3ba78:	add	r0, r0, #0
   3ba7c:	movw	r1, #0
   3ba80:	cmp	r1, r0
   3ba84:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3ba88:	b	3bb9c <__assert_fail@plt+0x2a448>
   3ba8c:	ldr	r0, [fp, #-12]
   3ba90:	movw	r1, #0
   3ba94:	cmp	r1, r0
   3ba98:	bcs	3bb9c <__assert_fail@plt+0x2a448>
   3ba9c:	ldr	r0, [fp, #-12]
   3baa0:	sub	r0, r0, #1
   3baa4:	mvn	r1, #0
   3baa8:	cmp	r1, r0
   3baac:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3bab0:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bab4:	ldr	r0, [fp, #-16]
   3bab8:	movw	r1, #0
   3babc:	udiv	r0, r1, r0
   3bac0:	ldr	r1, [fp, #-12]
   3bac4:	cmp	r0, r1
   3bac8:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3bacc:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bad0:	ldr	r0, [fp, #-16]
   3bad4:	cmp	r0, #0
   3bad8:	bne	3bae0 <__assert_fail@plt+0x2a38c>
   3badc:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bae0:	ldr	r0, [fp, #-12]
   3bae4:	cmp	r0, #0
   3bae8:	bcs	3bb54 <__assert_fail@plt+0x2a400>
   3baec:	b	3baf4 <__assert_fail@plt+0x2a3a0>
   3baf0:	b	3baf8 <__assert_fail@plt+0x2a3a4>
   3baf4:	b	3bb38 <__assert_fail@plt+0x2a3e4>
   3baf8:	ldr	r0, [fp, #-12]
   3bafc:	cmn	r0, #1
   3bb00:	bne	3bb38 <__assert_fail@plt+0x2a3e4>
   3bb04:	b	3bb20 <__assert_fail@plt+0x2a3cc>
   3bb08:	ldr	r0, [fp, #-16]
   3bb0c:	add	r0, r0, #0
   3bb10:	movw	r1, #0
   3bb14:	cmp	r1, r0
   3bb18:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3bb1c:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bb20:	ldr	r0, [fp, #-16]
   3bb24:	sub	r0, r0, #1
   3bb28:	mvn	r1, #0
   3bb2c:	cmp	r1, r0
   3bb30:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3bb34:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bb38:	ldr	r0, [fp, #-12]
   3bb3c:	movw	r1, #0
   3bb40:	udiv	r0, r1, r0
   3bb44:	ldr	r1, [fp, #-16]
   3bb48:	cmp	r0, r1
   3bb4c:	bcc	3bb88 <__assert_fail@plt+0x2a434>
   3bb50:	b	3bb9c <__assert_fail@plt+0x2a448>
   3bb54:	ldr	r2, [fp, #-16]
   3bb58:	mvn	r0, #0
   3bb5c:	mov	r3, #0
   3bb60:	str	r0, [sp, #12]
   3bb64:	ldr	r1, [sp, #12]
   3bb68:	bl	3c4fc <__assert_fail@plt+0x2ada8>
   3bb6c:	ldr	r2, [fp, #-12]
   3bb70:	subs	r0, r0, r2
   3bb74:	sbcs	r1, r1, #0
   3bb78:	str	r0, [sp, #8]
   3bb7c:	str	r1, [sp, #4]
   3bb80:	bcs	3bb9c <__assert_fail@plt+0x2a448>
   3bb84:	b	3bb88 <__assert_fail@plt+0x2a434>
   3bb88:	ldr	r0, [fp, #-12]
   3bb8c:	ldr	r1, [fp, #-16]
   3bb90:	mul	r0, r0, r1
   3bb94:	str	r0, [fp, #-20]	; 0xffffffec
   3bb98:	b	3bbb0 <__assert_fail@plt+0x2a45c>
   3bb9c:	ldr	r0, [fp, #-12]
   3bba0:	ldr	r1, [fp, #-16]
   3bba4:	mul	r0, r0, r1
   3bba8:	str	r0, [fp, #-20]	; 0xffffffec
   3bbac:	b	3bbc8 <__assert_fail@plt+0x2a474>
   3bbb0:	bl	11628 <__errno_location@plt>
   3bbb4:	movw	lr, #12
   3bbb8:	str	lr, [r0]
   3bbbc:	movw	r0, #0
   3bbc0:	str	r0, [fp, #-4]
   3bbc4:	b	3bbd8 <__assert_fail@plt+0x2a484>
   3bbc8:	ldr	r0, [fp, #-8]
   3bbcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bbd0:	bl	38aec <__assert_fail@plt+0x27398>
   3bbd4:	str	r0, [fp, #-4]
   3bbd8:	ldr	r0, [fp, #-4]
   3bbdc:	mov	sp, fp
   3bbe0:	pop	{fp, pc}
   3bbe4:	svcvc	0x00ffffff
   3bbe8:	andhi	r0, r0, r0
   3bbec:			; <UNDEFINED> instruction: 0xffff8000
   3bbf0:	sub	sp, sp, #12
   3bbf4:	str	r0, [sp, #4]
   3bbf8:	ldr	r0, [sp, #4]
   3bbfc:	sub	r1, r0, #48	; 0x30
   3bc00:	cmp	r1, #10
   3bc04:	str	r0, [sp]
   3bc08:	bcc	3bc38 <__assert_fail@plt+0x2a4e4>
   3bc0c:	b	3bc10 <__assert_fail@plt+0x2a4bc>
   3bc10:	ldr	r0, [sp]
   3bc14:	sub	r1, r0, #65	; 0x41
   3bc18:	cmp	r1, #26
   3bc1c:	bcc	3bc38 <__assert_fail@plt+0x2a4e4>
   3bc20:	b	3bc24 <__assert_fail@plt+0x2a4d0>
   3bc24:	ldr	r0, [sp]
   3bc28:	sub	r1, r0, #97	; 0x61
   3bc2c:	cmp	r1, #25
   3bc30:	bhi	3bc48 <__assert_fail@plt+0x2a4f4>
   3bc34:	b	3bc38 <__assert_fail@plt+0x2a4e4>
   3bc38:	movw	r0, #1
   3bc3c:	and	r0, r0, #1
   3bc40:	strb	r0, [sp, #11]
   3bc44:	b	3bc54 <__assert_fail@plt+0x2a500>
   3bc48:	movw	r0, #0
   3bc4c:	and	r0, r0, #1
   3bc50:	strb	r0, [sp, #11]
   3bc54:	ldrb	r0, [sp, #11]
   3bc58:	and	r0, r0, #1
   3bc5c:	add	sp, sp, #12
   3bc60:	bx	lr
   3bc64:	sub	sp, sp, #12
   3bc68:	str	r0, [sp, #4]
   3bc6c:	ldr	r0, [sp, #4]
   3bc70:	sub	r1, r0, #65	; 0x41
   3bc74:	cmp	r1, #26
   3bc78:	str	r0, [sp]
   3bc7c:	bcc	3bc98 <__assert_fail@plt+0x2a544>
   3bc80:	b	3bc84 <__assert_fail@plt+0x2a530>
   3bc84:	ldr	r0, [sp]
   3bc88:	sub	r1, r0, #97	; 0x61
   3bc8c:	cmp	r1, #25
   3bc90:	bhi	3bca8 <__assert_fail@plt+0x2a554>
   3bc94:	b	3bc98 <__assert_fail@plt+0x2a544>
   3bc98:	movw	r0, #1
   3bc9c:	and	r0, r0, #1
   3bca0:	strb	r0, [sp, #11]
   3bca4:	b	3bcb4 <__assert_fail@plt+0x2a560>
   3bca8:	movw	r0, #0
   3bcac:	and	r0, r0, #1
   3bcb0:	strb	r0, [sp, #11]
   3bcb4:	ldrb	r0, [sp, #11]
   3bcb8:	and	r0, r0, #1
   3bcbc:	add	sp, sp, #12
   3bcc0:	bx	lr
   3bcc4:	sub	sp, sp, #8
   3bcc8:	str	r0, [sp]
   3bccc:	ldr	r0, [sp]
   3bcd0:	cmp	r0, #127	; 0x7f
   3bcd4:	bhi	3bcec <__assert_fail@plt+0x2a598>
   3bcd8:	b	3bcdc <__assert_fail@plt+0x2a588>
   3bcdc:	movw	r0, #1
   3bce0:	and	r0, r0, #1
   3bce4:	strb	r0, [sp, #7]
   3bce8:	b	3bcf8 <__assert_fail@plt+0x2a5a4>
   3bcec:	movw	r0, #0
   3bcf0:	and	r0, r0, #1
   3bcf4:	strb	r0, [sp, #7]
   3bcf8:	ldrb	r0, [sp, #7]
   3bcfc:	and	r0, r0, #1
   3bd00:	add	sp, sp, #8
   3bd04:	bx	lr
   3bd08:	sub	sp, sp, #8
   3bd0c:	str	r0, [sp, #4]
   3bd10:	ldr	r0, [sp, #4]
   3bd14:	cmp	r0, #32
   3bd18:	movw	r0, #1
   3bd1c:	str	r0, [sp]
   3bd20:	beq	3bd38 <__assert_fail@plt+0x2a5e4>
   3bd24:	ldr	r0, [sp, #4]
   3bd28:	cmp	r0, #9
   3bd2c:	movw	r0, #0
   3bd30:	moveq	r0, #1
   3bd34:	str	r0, [sp]
   3bd38:	ldr	r0, [sp]
   3bd3c:	and	r0, r0, #1
   3bd40:	add	sp, sp, #8
   3bd44:	bx	lr
   3bd48:	sub	sp, sp, #12
   3bd4c:	str	r0, [sp, #4]
   3bd50:	ldr	r0, [sp, #4]
   3bd54:	cmp	r0, #32
   3bd58:	str	r0, [sp]
   3bd5c:	bcc	3bd74 <__assert_fail@plt+0x2a620>
   3bd60:	b	3bd64 <__assert_fail@plt+0x2a610>
   3bd64:	ldr	r0, [sp]
   3bd68:	cmp	r0, #127	; 0x7f
   3bd6c:	bne	3bd84 <__assert_fail@plt+0x2a630>
   3bd70:	b	3bd74 <__assert_fail@plt+0x2a620>
   3bd74:	movw	r0, #1
   3bd78:	and	r0, r0, #1
   3bd7c:	strb	r0, [sp, #11]
   3bd80:	b	3bd90 <__assert_fail@plt+0x2a63c>
   3bd84:	movw	r0, #0
   3bd88:	and	r0, r0, #1
   3bd8c:	strb	r0, [sp, #11]
   3bd90:	ldrb	r0, [sp, #11]
   3bd94:	and	r0, r0, #1
   3bd98:	add	sp, sp, #12
   3bd9c:	bx	lr
   3bda0:	sub	sp, sp, #8
   3bda4:	str	r0, [sp]
   3bda8:	ldr	r0, [sp]
   3bdac:	sub	r0, r0, #48	; 0x30
   3bdb0:	cmp	r0, #9
   3bdb4:	bhi	3bdcc <__assert_fail@plt+0x2a678>
   3bdb8:	b	3bdbc <__assert_fail@plt+0x2a668>
   3bdbc:	movw	r0, #1
   3bdc0:	and	r0, r0, #1
   3bdc4:	strb	r0, [sp, #7]
   3bdc8:	b	3bdd8 <__assert_fail@plt+0x2a684>
   3bdcc:	movw	r0, #0
   3bdd0:	and	r0, r0, #1
   3bdd4:	strb	r0, [sp, #7]
   3bdd8:	ldrb	r0, [sp, #7]
   3bddc:	and	r0, r0, #1
   3bde0:	add	sp, sp, #8
   3bde4:	bx	lr
   3bde8:	sub	sp, sp, #8
   3bdec:	str	r0, [sp]
   3bdf0:	ldr	r0, [sp]
   3bdf4:	sub	r0, r0, #33	; 0x21
   3bdf8:	cmp	r0, #93	; 0x5d
   3bdfc:	bhi	3be14 <__assert_fail@plt+0x2a6c0>
   3be00:	b	3be04 <__assert_fail@plt+0x2a6b0>
   3be04:	movw	r0, #1
   3be08:	and	r0, r0, #1
   3be0c:	strb	r0, [sp, #7]
   3be10:	b	3be20 <__assert_fail@plt+0x2a6cc>
   3be14:	movw	r0, #0
   3be18:	and	r0, r0, #1
   3be1c:	strb	r0, [sp, #7]
   3be20:	ldrb	r0, [sp, #7]
   3be24:	and	r0, r0, #1
   3be28:	add	sp, sp, #8
   3be2c:	bx	lr
   3be30:	sub	sp, sp, #8
   3be34:	str	r0, [sp]
   3be38:	ldr	r0, [sp]
   3be3c:	sub	r0, r0, #97	; 0x61
   3be40:	cmp	r0, #25
   3be44:	bhi	3be5c <__assert_fail@plt+0x2a708>
   3be48:	b	3be4c <__assert_fail@plt+0x2a6f8>
   3be4c:	movw	r0, #1
   3be50:	and	r0, r0, #1
   3be54:	strb	r0, [sp, #7]
   3be58:	b	3be68 <__assert_fail@plt+0x2a714>
   3be5c:	movw	r0, #0
   3be60:	and	r0, r0, #1
   3be64:	strb	r0, [sp, #7]
   3be68:	ldrb	r0, [sp, #7]
   3be6c:	and	r0, r0, #1
   3be70:	add	sp, sp, #8
   3be74:	bx	lr
   3be78:	sub	sp, sp, #8
   3be7c:	str	r0, [sp]
   3be80:	ldr	r0, [sp]
   3be84:	sub	r0, r0, #32
   3be88:	cmp	r0, #94	; 0x5e
   3be8c:	bhi	3bea4 <__assert_fail@plt+0x2a750>
   3be90:	b	3be94 <__assert_fail@plt+0x2a740>
   3be94:	movw	r0, #1
   3be98:	and	r0, r0, #1
   3be9c:	strb	r0, [sp, #7]
   3bea0:	b	3beb0 <__assert_fail@plt+0x2a75c>
   3bea4:	movw	r0, #0
   3bea8:	and	r0, r0, #1
   3beac:	strb	r0, [sp, #7]
   3beb0:	ldrb	r0, [sp, #7]
   3beb4:	and	r0, r0, #1
   3beb8:	add	sp, sp, #8
   3bebc:	bx	lr
   3bec0:	sub	sp, sp, #12
   3bec4:	str	r0, [sp, #4]
   3bec8:	ldr	r0, [sp, #4]
   3becc:	sub	r0, r0, #33	; 0x21
   3bed0:	cmp	r0, #93	; 0x5d
   3bed4:	str	r0, [sp]
   3bed8:	bhi	3c074 <__assert_fail@plt+0x2a920>
   3bedc:	add	r0, pc, #8
   3bee0:	ldr	r1, [sp]
   3bee4:	ldr	r0, [r0, r1, lsl #2]
   3bee8:	mov	pc, r0
   3beec:	andeq	ip, r3, r4, rrx
   3bef0:	andeq	ip, r3, r4, rrx
   3bef4:	andeq	ip, r3, r4, rrx
   3bef8:	andeq	ip, r3, r4, rrx
   3befc:	andeq	ip, r3, r4, rrx
   3bf00:	andeq	ip, r3, r4, rrx
   3bf04:	andeq	ip, r3, r4, rrx
   3bf08:	andeq	ip, r3, r4, rrx
   3bf0c:	andeq	ip, r3, r4, rrx
   3bf10:	andeq	ip, r3, r4, rrx
   3bf14:	andeq	ip, r3, r4, rrx
   3bf18:	andeq	ip, r3, r4, rrx
   3bf1c:	andeq	ip, r3, r4, rrx
   3bf20:	andeq	ip, r3, r4, rrx
   3bf24:	andeq	ip, r3, r4, rrx
   3bf28:	andeq	ip, r3, r4, ror r0
   3bf2c:	andeq	ip, r3, r4, ror r0
   3bf30:	andeq	ip, r3, r4, ror r0
   3bf34:	andeq	ip, r3, r4, ror r0
   3bf38:	andeq	ip, r3, r4, ror r0
   3bf3c:	andeq	ip, r3, r4, ror r0
   3bf40:	andeq	ip, r3, r4, ror r0
   3bf44:	andeq	ip, r3, r4, ror r0
   3bf48:	andeq	ip, r3, r4, ror r0
   3bf4c:	andeq	ip, r3, r4, ror r0
   3bf50:	andeq	ip, r3, r4, rrx
   3bf54:	andeq	ip, r3, r4, rrx
   3bf58:	andeq	ip, r3, r4, rrx
   3bf5c:	andeq	ip, r3, r4, rrx
   3bf60:	andeq	ip, r3, r4, rrx
   3bf64:	andeq	ip, r3, r4, rrx
   3bf68:	andeq	ip, r3, r4, rrx
   3bf6c:	andeq	ip, r3, r4, ror r0
   3bf70:	andeq	ip, r3, r4, ror r0
   3bf74:	andeq	ip, r3, r4, ror r0
   3bf78:	andeq	ip, r3, r4, ror r0
   3bf7c:	andeq	ip, r3, r4, ror r0
   3bf80:	andeq	ip, r3, r4, ror r0
   3bf84:	andeq	ip, r3, r4, ror r0
   3bf88:	andeq	ip, r3, r4, ror r0
   3bf8c:	andeq	ip, r3, r4, ror r0
   3bf90:	andeq	ip, r3, r4, ror r0
   3bf94:	andeq	ip, r3, r4, ror r0
   3bf98:	andeq	ip, r3, r4, ror r0
   3bf9c:	andeq	ip, r3, r4, ror r0
   3bfa0:	andeq	ip, r3, r4, ror r0
   3bfa4:	andeq	ip, r3, r4, ror r0
   3bfa8:	andeq	ip, r3, r4, ror r0
   3bfac:	andeq	ip, r3, r4, ror r0
   3bfb0:	andeq	ip, r3, r4, ror r0
   3bfb4:	andeq	ip, r3, r4, ror r0
   3bfb8:	andeq	ip, r3, r4, ror r0
   3bfbc:	andeq	ip, r3, r4, ror r0
   3bfc0:	andeq	ip, r3, r4, ror r0
   3bfc4:	andeq	ip, r3, r4, ror r0
   3bfc8:	andeq	ip, r3, r4, ror r0
   3bfcc:	andeq	ip, r3, r4, ror r0
   3bfd0:	andeq	ip, r3, r4, ror r0
   3bfd4:	andeq	ip, r3, r4, rrx
   3bfd8:	andeq	ip, r3, r4, rrx
   3bfdc:	andeq	ip, r3, r4, rrx
   3bfe0:	andeq	ip, r3, r4, rrx
   3bfe4:	andeq	ip, r3, r4, rrx
   3bfe8:	andeq	ip, r3, r4, rrx
   3bfec:	andeq	ip, r3, r4, ror r0
   3bff0:	andeq	ip, r3, r4, ror r0
   3bff4:	andeq	ip, r3, r4, ror r0
   3bff8:	andeq	ip, r3, r4, ror r0
   3bffc:	andeq	ip, r3, r4, ror r0
   3c000:	andeq	ip, r3, r4, ror r0
   3c004:	andeq	ip, r3, r4, ror r0
   3c008:	andeq	ip, r3, r4, ror r0
   3c00c:	andeq	ip, r3, r4, ror r0
   3c010:	andeq	ip, r3, r4, ror r0
   3c014:	andeq	ip, r3, r4, ror r0
   3c018:	andeq	ip, r3, r4, ror r0
   3c01c:	andeq	ip, r3, r4, ror r0
   3c020:	andeq	ip, r3, r4, ror r0
   3c024:	andeq	ip, r3, r4, ror r0
   3c028:	andeq	ip, r3, r4, ror r0
   3c02c:	andeq	ip, r3, r4, ror r0
   3c030:	andeq	ip, r3, r4, ror r0
   3c034:	andeq	ip, r3, r4, ror r0
   3c038:	andeq	ip, r3, r4, ror r0
   3c03c:	andeq	ip, r3, r4, ror r0
   3c040:	andeq	ip, r3, r4, ror r0
   3c044:	andeq	ip, r3, r4, ror r0
   3c048:	andeq	ip, r3, r4, ror r0
   3c04c:	andeq	ip, r3, r4, ror r0
   3c050:	andeq	ip, r3, r4, ror r0
   3c054:	andeq	ip, r3, r4, rrx
   3c058:	andeq	ip, r3, r4, rrx
   3c05c:	andeq	ip, r3, r4, rrx
   3c060:	andeq	ip, r3, r4, rrx
   3c064:	movw	r0, #1
   3c068:	and	r0, r0, #1
   3c06c:	strb	r0, [sp, #11]
   3c070:	b	3c080 <__assert_fail@plt+0x2a92c>
   3c074:	movw	r0, #0
   3c078:	and	r0, r0, #1
   3c07c:	strb	r0, [sp, #11]
   3c080:	ldrb	r0, [sp, #11]
   3c084:	and	r0, r0, #1
   3c088:	add	sp, sp, #12
   3c08c:	bx	lr
   3c090:	sub	sp, sp, #12
   3c094:	str	r0, [sp, #4]
   3c098:	ldr	r0, [sp, #4]
   3c09c:	sub	r1, r0, #9
   3c0a0:	cmp	r1, #5
   3c0a4:	str	r0, [sp]
   3c0a8:	bcc	3c0c0 <__assert_fail@plt+0x2a96c>
   3c0ac:	b	3c0b0 <__assert_fail@plt+0x2a95c>
   3c0b0:	ldr	r0, [sp]
   3c0b4:	cmp	r0, #32
   3c0b8:	bne	3c0d0 <__assert_fail@plt+0x2a97c>
   3c0bc:	b	3c0c0 <__assert_fail@plt+0x2a96c>
   3c0c0:	movw	r0, #1
   3c0c4:	and	r0, r0, #1
   3c0c8:	strb	r0, [sp, #11]
   3c0cc:	b	3c0dc <__assert_fail@plt+0x2a988>
   3c0d0:	movw	r0, #0
   3c0d4:	and	r0, r0, #1
   3c0d8:	strb	r0, [sp, #11]
   3c0dc:	ldrb	r0, [sp, #11]
   3c0e0:	and	r0, r0, #1
   3c0e4:	add	sp, sp, #12
   3c0e8:	bx	lr
   3c0ec:	sub	sp, sp, #8
   3c0f0:	str	r0, [sp]
   3c0f4:	ldr	r0, [sp]
   3c0f8:	sub	r0, r0, #65	; 0x41
   3c0fc:	cmp	r0, #25
   3c100:	bhi	3c118 <__assert_fail@plt+0x2a9c4>
   3c104:	b	3c108 <__assert_fail@plt+0x2a9b4>
   3c108:	movw	r0, #1
   3c10c:	and	r0, r0, #1
   3c110:	strb	r0, [sp, #7]
   3c114:	b	3c124 <__assert_fail@plt+0x2a9d0>
   3c118:	movw	r0, #0
   3c11c:	and	r0, r0, #1
   3c120:	strb	r0, [sp, #7]
   3c124:	ldrb	r0, [sp, #7]
   3c128:	and	r0, r0, #1
   3c12c:	add	sp, sp, #8
   3c130:	bx	lr
   3c134:	sub	sp, sp, #12
   3c138:	str	r0, [sp, #4]
   3c13c:	ldr	r0, [sp, #4]
   3c140:	sub	r1, r0, #48	; 0x30
   3c144:	cmp	r1, #10
   3c148:	str	r0, [sp]
   3c14c:	bcc	3c17c <__assert_fail@plt+0x2aa28>
   3c150:	b	3c154 <__assert_fail@plt+0x2aa00>
   3c154:	ldr	r0, [sp]
   3c158:	sub	r1, r0, #65	; 0x41
   3c15c:	cmp	r1, #6
   3c160:	bcc	3c17c <__assert_fail@plt+0x2aa28>
   3c164:	b	3c168 <__assert_fail@plt+0x2aa14>
   3c168:	ldr	r0, [sp]
   3c16c:	sub	r1, r0, #97	; 0x61
   3c170:	cmp	r1, #5
   3c174:	bhi	3c18c <__assert_fail@plt+0x2aa38>
   3c178:	b	3c17c <__assert_fail@plt+0x2aa28>
   3c17c:	movw	r0, #1
   3c180:	and	r0, r0, #1
   3c184:	strb	r0, [sp, #11]
   3c188:	b	3c198 <__assert_fail@plt+0x2aa44>
   3c18c:	movw	r0, #0
   3c190:	and	r0, r0, #1
   3c194:	strb	r0, [sp, #11]
   3c198:	ldrb	r0, [sp, #11]
   3c19c:	and	r0, r0, #1
   3c1a0:	add	sp, sp, #12
   3c1a4:	bx	lr
   3c1a8:	sub	sp, sp, #8
   3c1ac:	str	r0, [sp]
   3c1b0:	ldr	r0, [sp]
   3c1b4:	sub	r0, r0, #65	; 0x41
   3c1b8:	cmp	r0, #25
   3c1bc:	bhi	3c1d8 <__assert_fail@plt+0x2aa84>
   3c1c0:	b	3c1c4 <__assert_fail@plt+0x2aa70>
   3c1c4:	ldr	r0, [sp]
   3c1c8:	sub	r0, r0, #65	; 0x41
   3c1cc:	add	r0, r0, #97	; 0x61
   3c1d0:	str	r0, [sp, #4]
   3c1d4:	b	3c1e0 <__assert_fail@plt+0x2aa8c>
   3c1d8:	ldr	r0, [sp]
   3c1dc:	str	r0, [sp, #4]
   3c1e0:	ldr	r0, [sp, #4]
   3c1e4:	add	sp, sp, #8
   3c1e8:	bx	lr
   3c1ec:	sub	sp, sp, #8
   3c1f0:	str	r0, [sp]
   3c1f4:	ldr	r0, [sp]
   3c1f8:	sub	r0, r0, #97	; 0x61
   3c1fc:	cmp	r0, #25
   3c200:	bhi	3c21c <__assert_fail@plt+0x2aac8>
   3c204:	b	3c208 <__assert_fail@plt+0x2aab4>
   3c208:	ldr	r0, [sp]
   3c20c:	sub	r0, r0, #97	; 0x61
   3c210:	add	r0, r0, #65	; 0x41
   3c214:	str	r0, [sp, #4]
   3c218:	b	3c224 <__assert_fail@plt+0x2aad0>
   3c21c:	ldr	r0, [sp]
   3c220:	str	r0, [sp, #4]
   3c224:	ldr	r0, [sp, #4]
   3c228:	add	sp, sp, #8
   3c22c:	bx	lr
   3c230:	push	{r4, r5, fp, lr}
   3c234:	add	fp, sp, #8
   3c238:	sub	sp, sp, #272	; 0x110
   3c23c:	add	r1, sp, #7
   3c240:	str	r0, [fp, #-16]
   3c244:	ldr	r0, [fp, #-16]
   3c248:	movw	r2, #257	; 0x101
   3c24c:	bl	3c2cc <__assert_fail@plt+0x2ab78>
   3c250:	cmp	r0, #0
   3c254:	beq	3c268 <__assert_fail@plt+0x2ab14>
   3c258:	movw	r0, #0
   3c25c:	and	r0, r0, #1
   3c260:	strb	r0, [fp, #-9]
   3c264:	b	3c2bc <__assert_fail@plt+0x2ab68>
   3c268:	add	r0, sp, #7
   3c26c:	movw	r1, #55836	; 0xda1c
   3c270:	movt	r1, #3
   3c274:	bl	11400 <strcmp@plt>
   3c278:	cmp	r0, #0
   3c27c:	movw	r0, #1
   3c280:	str	r0, [sp]
   3c284:	beq	3c2a8 <__assert_fail@plt+0x2ab54>
   3c288:	add	r0, sp, #7
   3c28c:	movw	r1, #55838	; 0xda1e
   3c290:	movt	r1, #3
   3c294:	bl	11400 <strcmp@plt>
   3c298:	cmp	r0, #0
   3c29c:	movw	r0, #0
   3c2a0:	moveq	r0, #1
   3c2a4:	str	r0, [sp]
   3c2a8:	ldr	r0, [sp]
   3c2ac:	mvn	r1, #0
   3c2b0:	eor	r0, r0, r1
   3c2b4:	and	r0, r0, #1
   3c2b8:	strb	r0, [fp, #-9]
   3c2bc:	ldrb	r0, [fp, #-9]
   3c2c0:	and	r0, r0, #1
   3c2c4:	sub	sp, fp, #8
   3c2c8:	pop	{r4, r5, fp, pc}
   3c2cc:	push	{fp, lr}
   3c2d0:	mov	fp, sp
   3c2d4:	sub	sp, sp, #16
   3c2d8:	str	r0, [fp, #-4]
   3c2dc:	str	r1, [sp, #8]
   3c2e0:	str	r2, [sp, #4]
   3c2e4:	ldr	r0, [fp, #-4]
   3c2e8:	ldr	r1, [sp, #8]
   3c2ec:	ldr	r2, [sp, #4]
   3c2f0:	bl	3c2fc <__assert_fail@plt+0x2aba8>
   3c2f4:	mov	sp, fp
   3c2f8:	pop	{fp, pc}
   3c2fc:	push	{fp, lr}
   3c300:	mov	fp, sp
   3c304:	sub	sp, sp, #24
   3c308:	str	r0, [fp, #-8]
   3c30c:	str	r1, [sp, #12]
   3c310:	str	r2, [sp, #8]
   3c314:	ldr	r0, [fp, #-8]
   3c318:	bl	3c3fc <__assert_fail@plt+0x2aca8>
   3c31c:	str	r0, [sp, #4]
   3c320:	ldr	r0, [sp, #4]
   3c324:	movw	r1, #0
   3c328:	cmp	r0, r1
   3c32c:	bne	3c354 <__assert_fail@plt+0x2ac00>
   3c330:	ldr	r0, [sp, #8]
   3c334:	cmp	r0, #0
   3c338:	bls	3c348 <__assert_fail@plt+0x2abf4>
   3c33c:	ldr	r0, [sp, #12]
   3c340:	movw	r1, #0
   3c344:	strb	r1, [r0]
   3c348:	movw	r0, #22
   3c34c:	str	r0, [fp, #-4]
   3c350:	b	3c3d0 <__assert_fail@plt+0x2ac7c>
   3c354:	ldr	r0, [sp, #4]
   3c358:	bl	11604 <strlen@plt>
   3c35c:	str	r0, [sp]
   3c360:	ldr	r0, [sp]
   3c364:	ldr	lr, [sp, #8]
   3c368:	cmp	r0, lr
   3c36c:	bcs	3c390 <__assert_fail@plt+0x2ac3c>
   3c370:	ldr	r0, [sp, #12]
   3c374:	ldr	r1, [sp, #4]
   3c378:	ldr	r2, [sp]
   3c37c:	add	r2, r2, #1
   3c380:	bl	11478 <memcpy@plt>
   3c384:	movw	r0, #0
   3c388:	str	r0, [fp, #-4]
   3c38c:	b	3c3d0 <__assert_fail@plt+0x2ac7c>
   3c390:	ldr	r0, [sp, #8]
   3c394:	cmp	r0, #0
   3c398:	bls	3c3c8 <__assert_fail@plt+0x2ac74>
   3c39c:	ldr	r0, [sp, #12]
   3c3a0:	ldr	r1, [sp, #4]
   3c3a4:	ldr	r2, [sp, #8]
   3c3a8:	sub	r2, r2, #1
   3c3ac:	bl	11478 <memcpy@plt>
   3c3b0:	ldr	r0, [sp, #12]
   3c3b4:	ldr	r1, [sp, #8]
   3c3b8:	sub	r1, r1, #1
   3c3bc:	add	r0, r0, r1
   3c3c0:	movw	r1, #0
   3c3c4:	strb	r1, [r0]
   3c3c8:	movw	r0, #34	; 0x22
   3c3cc:	str	r0, [fp, #-4]
   3c3d0:	ldr	r0, [fp, #-4]
   3c3d4:	mov	sp, fp
   3c3d8:	pop	{fp, pc}
   3c3dc:	push	{fp, lr}
   3c3e0:	mov	fp, sp
   3c3e4:	sub	sp, sp, #8
   3c3e8:	str	r0, [sp, #4]
   3c3ec:	ldr	r0, [sp, #4]
   3c3f0:	bl	3c3fc <__assert_fail@plt+0x2aca8>
   3c3f4:	mov	sp, fp
   3c3f8:	pop	{fp, pc}
   3c3fc:	push	{fp, lr}
   3c400:	mov	fp, sp
   3c404:	sub	sp, sp, #8
   3c408:	str	r0, [sp, #4]
   3c40c:	ldr	r0, [sp, #4]
   3c410:	movw	r1, #0
   3c414:	bl	116b8 <setlocale@plt>
   3c418:	str	r0, [sp]
   3c41c:	ldr	r0, [sp]
   3c420:	mov	sp, fp
   3c424:	pop	{fp, pc}
   3c428:	cmp	r3, #0
   3c42c:	cmpeq	r2, #0
   3c430:	bne	3c454 <__assert_fail@plt+0x2ad00>
   3c434:	cmp	r1, #0
   3c438:	movlt	r1, #-2147483648	; 0x80000000
   3c43c:	movlt	r0, #0
   3c440:	blt	3c450 <__assert_fail@plt+0x2acfc>
   3c444:	cmpeq	r0, #0
   3c448:	mvnne	r1, #-2147483648	; 0x80000000
   3c44c:	mvnne	r0, #0
   3c450:	b	3c538 <__assert_fail@plt+0x2ade4>
   3c454:	sub	sp, sp, #8
   3c458:	push	{sp, lr}
   3c45c:	cmp	r1, #0
   3c460:	blt	3c480 <__assert_fail@plt+0x2ad2c>
   3c464:	cmp	r3, #0
   3c468:	blt	3c4b4 <__assert_fail@plt+0x2ad60>
   3c46c:	bl	3c548 <__assert_fail@plt+0x2adf4>
   3c470:	ldr	lr, [sp, #4]
   3c474:	add	sp, sp, #8
   3c478:	pop	{r2, r3}
   3c47c:	bx	lr
   3c480:	rsbs	r0, r0, #0
   3c484:	sbc	r1, r1, r1, lsl #1
   3c488:	cmp	r3, #0
   3c48c:	blt	3c4d8 <__assert_fail@plt+0x2ad84>
   3c490:	bl	3c548 <__assert_fail@plt+0x2adf4>
   3c494:	ldr	lr, [sp, #4]
   3c498:	add	sp, sp, #8
   3c49c:	pop	{r2, r3}
   3c4a0:	rsbs	r0, r0, #0
   3c4a4:	sbc	r1, r1, r1, lsl #1
   3c4a8:	rsbs	r2, r2, #0
   3c4ac:	sbc	r3, r3, r3, lsl #1
   3c4b0:	bx	lr
   3c4b4:	rsbs	r2, r2, #0
   3c4b8:	sbc	r3, r3, r3, lsl #1
   3c4bc:	bl	3c548 <__assert_fail@plt+0x2adf4>
   3c4c0:	ldr	lr, [sp, #4]
   3c4c4:	add	sp, sp, #8
   3c4c8:	pop	{r2, r3}
   3c4cc:	rsbs	r0, r0, #0
   3c4d0:	sbc	r1, r1, r1, lsl #1
   3c4d4:	bx	lr
   3c4d8:	rsbs	r2, r2, #0
   3c4dc:	sbc	r3, r3, r3, lsl #1
   3c4e0:	bl	3c548 <__assert_fail@plt+0x2adf4>
   3c4e4:	ldr	lr, [sp, #4]
   3c4e8:	add	sp, sp, #8
   3c4ec:	pop	{r2, r3}
   3c4f0:	rsbs	r2, r2, #0
   3c4f4:	sbc	r3, r3, r3, lsl #1
   3c4f8:	bx	lr
   3c4fc:	cmp	r3, #0
   3c500:	cmpeq	r2, #0
   3c504:	bne	3c51c <__assert_fail@plt+0x2adc8>
   3c508:	cmp	r1, #0
   3c50c:	cmpeq	r0, #0
   3c510:	mvnne	r1, #0
   3c514:	mvnne	r0, #0
   3c518:	b	3c538 <__assert_fail@plt+0x2ade4>
   3c51c:	sub	sp, sp, #8
   3c520:	push	{sp, lr}
   3c524:	bl	3c548 <__assert_fail@plt+0x2adf4>
   3c528:	ldr	lr, [sp, #4]
   3c52c:	add	sp, sp, #8
   3c530:	pop	{r2, r3}
   3c534:	bx	lr
   3c538:	push	{r1, lr}
   3c53c:	mov	r0, #8
   3c540:	bl	113dc <raise@plt>
   3c544:	pop	{r1, pc}
   3c548:	cmp	r1, r3
   3c54c:	cmpeq	r0, r2
   3c550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c554:	mov	r4, r0
   3c558:	movcc	r0, #0
   3c55c:	mov	r5, r1
   3c560:	ldr	lr, [sp, #36]	; 0x24
   3c564:	movcc	r1, r0
   3c568:	bcc	3c664 <__assert_fail@plt+0x2af10>
   3c56c:	cmp	r3, #0
   3c570:	clzeq	ip, r2
   3c574:	clzne	ip, r3
   3c578:	addeq	ip, ip, #32
   3c57c:	cmp	r5, #0
   3c580:	clzeq	r1, r4
   3c584:	addeq	r1, r1, #32
   3c588:	clzne	r1, r5
   3c58c:	sub	ip, ip, r1
   3c590:	sub	sl, ip, #32
   3c594:	lsl	r9, r3, ip
   3c598:	rsb	fp, ip, #32
   3c59c:	orr	r9, r9, r2, lsl sl
   3c5a0:	orr	r9, r9, r2, lsr fp
   3c5a4:	lsl	r8, r2, ip
   3c5a8:	cmp	r5, r9
   3c5ac:	cmpeq	r4, r8
   3c5b0:	movcc	r0, #0
   3c5b4:	movcc	r1, r0
   3c5b8:	bcc	3c5d4 <__assert_fail@plt+0x2ae80>
   3c5bc:	mov	r0, #1
   3c5c0:	subs	r4, r4, r8
   3c5c4:	lsl	r1, r0, sl
   3c5c8:	orr	r1, r1, r0, lsr fp
   3c5cc:	lsl	r0, r0, ip
   3c5d0:	sbc	r5, r5, r9
   3c5d4:	cmp	ip, #0
   3c5d8:	beq	3c664 <__assert_fail@plt+0x2af10>
   3c5dc:	lsr	r6, r8, #1
   3c5e0:	orr	r6, r6, r9, lsl #31
   3c5e4:	lsr	r7, r9, #1
   3c5e8:	mov	r2, ip
   3c5ec:	b	3c610 <__assert_fail@plt+0x2aebc>
   3c5f0:	subs	r3, r4, r6
   3c5f4:	sbc	r8, r5, r7
   3c5f8:	adds	r3, r3, r3
   3c5fc:	adc	r8, r8, r8
   3c600:	adds	r4, r3, #1
   3c604:	adc	r5, r8, #0
   3c608:	subs	r2, r2, #1
   3c60c:	beq	3c62c <__assert_fail@plt+0x2aed8>
   3c610:	cmp	r5, r7
   3c614:	cmpeq	r4, r6
   3c618:	bcs	3c5f0 <__assert_fail@plt+0x2ae9c>
   3c61c:	adds	r4, r4, r4
   3c620:	adc	r5, r5, r5
   3c624:	subs	r2, r2, #1
   3c628:	bne	3c610 <__assert_fail@plt+0x2aebc>
   3c62c:	lsr	r3, r4, ip
   3c630:	orr	r3, r3, r5, lsl fp
   3c634:	lsr	r2, r5, ip
   3c638:	orr	r3, r3, r5, lsr sl
   3c63c:	adds	r0, r0, r4
   3c640:	mov	r4, r3
   3c644:	lsl	r3, r2, ip
   3c648:	orr	r3, r3, r4, lsl sl
   3c64c:	lsl	ip, r4, ip
   3c650:	orr	r3, r3, r4, lsr fp
   3c654:	adc	r1, r1, r5
   3c658:	subs	r0, r0, ip
   3c65c:	mov	r5, r2
   3c660:	sbc	r1, r1, r3
   3c664:	cmp	lr, #0
   3c668:	strdne	r4, [lr]
   3c66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c670:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3c674:	mov	r7, r0
   3c678:	ldr	r6, [pc, #72]	; 3c6c8 <__assert_fail@plt+0x2af74>
   3c67c:	ldr	r5, [pc, #72]	; 3c6cc <__assert_fail@plt+0x2af78>
   3c680:	add	r6, pc, r6
   3c684:	add	r5, pc, r5
   3c688:	sub	r6, r6, r5
   3c68c:	mov	r8, r1
   3c690:	mov	r9, r2
   3c694:	bl	11380 <pthread_mutex_unlock@plt-0x20>
   3c698:	asrs	r6, r6, #2
   3c69c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3c6a0:	mov	r4, #0
   3c6a4:	add	r4, r4, #1
   3c6a8:	ldr	r3, [r5], #4
   3c6ac:	mov	r2, r9
   3c6b0:	mov	r1, r8
   3c6b4:	mov	r0, r7
   3c6b8:	blx	r3
   3c6bc:	cmp	r6, r4
   3c6c0:	bne	3c6a4 <__assert_fail@plt+0x2af50>
   3c6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3c6c8:	andeq	r1, r1, r4, lsl #17
   3c6cc:	andeq	r1, r1, ip, ror r8
   3c6d0:	bx	lr
   3c6d4:	ldr	r3, [pc, #12]	; 3c6e8 <__assert_fail@plt+0x2af94>
   3c6d8:	mov	r1, #0
   3c6dc:	add	r3, pc, r3
   3c6e0:	ldr	r2, [r3]
   3c6e4:	b	1164c <__cxa_atexit@plt>
   3c6e8:	andeq	r1, r1, r0, ror sl

Disassembly of section .fini:

0003c6ec <.fini>:
   3c6ec:	push	{r3, lr}
   3c6f0:	pop	{r3, pc}
