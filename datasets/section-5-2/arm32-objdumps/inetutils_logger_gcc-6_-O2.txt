
../repos/inetutils/src/logger:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	117cc <__assert_fail@plt+0x4d8>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <calloc@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <calloc@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	r9, r1, r4

00011000 <calloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #4]!

0001100c <fputs_unlocked@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <raise@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <__getdelim@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #24, 20	; 0x18000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <strcmp@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #24, 20	; 0x18000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <strtol@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #24, 20	; 0x18000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <getpwuid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #24, 20	; 0x18000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <printf@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #24, 20	; 0x18000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <getuid@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #24, 20	; 0x18000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <memmove@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <strchrnul@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <free@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <gai_strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <strndup@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <time@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <fwrite_unlocked@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <sleep@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <ctime@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <realloc@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <strcasecmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <funlockfile@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <fwrite@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <__ctype_tolower_loc@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <__gmon_start__@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <freopen64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <mempcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <__ctype_b_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <getpid@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <exit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <strtoul@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <__errno_location@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <strerror_r@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <bind@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <memset@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #24, 20	; 0x18000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <fileno@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #24, 20	; 0x18000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <asprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #24, 20	; 0x18000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #24, 20	; 0x18000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <writev@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #24, 20	; 0x18000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #24, 20	; 0x18000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <strrchr@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <vfprintf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <fputc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <flockfile@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <vsnprintf@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <qsort@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <freeaddrinfo@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <getaddrinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <socket@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <send@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <connect@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #24, 20	; 0x18000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <__assert_fail@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #24, 20	; 0x18000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

00011300 <argp_parse@@Base-0x10b8>:
   11300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11304:	sub	sp, sp, #180	; 0xb4
   11308:	mov	r4, #0
   1130c:	mov	r8, r0
   11310:	ldr	r0, [r1]
   11314:	mov	r5, r1
   11318:	str	r4, [sp, #20]
   1131c:	bl	133c0 <argp_parse@@Base+0x1008>
   11320:	ldr	r3, [pc, #1060]	; 1174c <__assert_fail@plt+0x458>
   11324:	ldr	r2, [pc, #1060]	; 11750 <__assert_fail@plt+0x45c>
   11328:	ldr	r1, [pc, #1060]	; 11754 <__assert_fail@plt+0x460>
   1132c:	ldr	r0, [pc, #1060]	; 11758 <__assert_fail@plt+0x464>
   11330:	ldr	r6, [pc, #1060]	; 1175c <__assert_fail@plt+0x468>
   11334:	str	r2, [r3]
   11338:	bl	1317c <argp_parse@@Base+0xdc4>
   1133c:	add	r0, sp, #16
   11340:	mov	r3, r4
   11344:	mov	r1, r8
   11348:	str	r0, [sp]
   1134c:	str	r4, [sp, #4]
   11350:	mov	r2, r5
   11354:	ldr	r0, [pc, #1028]	; 11760 <__assert_fail@plt+0x46c>
   11358:	bl	123b8 <argp_parse@@Base>
   1135c:	ldr	r3, [r6, #8]
   11360:	ldr	fp, [sp, #16]
   11364:	cmp	r3, r4
   11368:	sub	r8, r8, fp
   1136c:	beq	11640 <__assert_fail@plt+0x34c>
   11370:	ldr	r7, [pc, #1004]	; 11764 <__assert_fail@plt+0x470>
   11374:	ldr	r4, [r6, #16]
   11378:	ldr	r9, [r7, #292]	; 0x124
   1137c:	cmp	r9, #0
   11380:	beq	114d8 <__assert_fail@plt+0x1e4>
   11384:	mov	r1, #47	; 0x2f
   11388:	mov	r0, r9
   1138c:	bl	111c8 <strchr@plt>
   11390:	cmp	r0, #0
   11394:	beq	114d8 <__assert_fail@plt+0x1e4>
   11398:	cmp	r4, #0
   1139c:	moveq	r4, r9
   113a0:	beq	113a8 <__assert_fail@plt+0xb4>
   113a4:	str	r4, [r7, #292]	; 0x124
   113a8:	mov	r0, r4
   113ac:	bl	111bc <strlen@plt>
   113b0:	cmp	r0, #107	; 0x6b
   113b4:	bhi	114a8 <__assert_fail@plt+0x1b4>
   113b8:	mov	r1, r4
   113bc:	add	r0, sp, #66	; 0x42
   113c0:	mov	r4, #1
   113c4:	bl	11114 <strcpy@plt>
   113c8:	mov	r0, r4
   113cc:	mov	r2, #0
   113d0:	mov	r1, #2
   113d4:	strh	r4, [sp, #64]	; 0x40
   113d8:	bl	112ac <socket@plt>
   113dc:	ldr	r6, [pc, #900]	; 11768 <__assert_fail@plt+0x474>
   113e0:	cmp	r0, #0
   113e4:	str	r0, [r6]
   113e8:	blt	11624 <__assert_fail@plt+0x330>
   113ec:	mov	r2, #110	; 0x6e
   113f0:	add	r1, sp, #64	; 0x40
   113f4:	bl	112e8 <connect@plt>
   113f8:	cmp	r0, #0
   113fc:	bne	114c0 <__assert_fail@plt+0x1cc>
   11400:	cmp	r8, #0
   11404:	ble	115e4 <__assert_fail@plt+0x2f0>
   11408:	add	fp, r5, fp, lsl #2
   1140c:	mov	r4, fp
   11410:	add	r6, fp, r8, lsl #2
   11414:	mov	r5, #0
   11418:	ldr	r0, [r4], #4
   1141c:	bl	111bc <strlen@plt>
   11420:	cmp	r6, r4
   11424:	add	r0, r0, #1
   11428:	add	r5, r5, r0
   1142c:	bne	11418 <__assert_fail@plt+0x124>
   11430:	mov	r0, r5
   11434:	bl	13868 <argp_parse@@Base+0x14b0>
   11438:	sub	fp, fp, #4
   1143c:	mov	r5, #0
   11440:	mov	r9, #32
   11444:	mov	sl, r0
   11448:	mov	r6, r0
   1144c:	str	r0, [sp, #20]
   11450:	ldr	r7, [fp, #4]!
   11454:	add	r5, r5, #1
   11458:	mov	r0, r7
   1145c:	bl	111bc <strlen@plt>
   11460:	mov	r1, r7
   11464:	mov	r2, r0
   11468:	mov	r4, r0
   1146c:	mov	r0, r6
   11470:	bl	110a8 <memcpy@plt>
   11474:	add	r2, r6, r4
   11478:	cmp	r8, r5
   1147c:	strb	r9, [r2]
   11480:	add	r6, r2, #1
   11484:	bne	11450 <__assert_fail@plt+0x15c>
   11488:	mov	r3, #0
   1148c:	mov	r0, sl
   11490:	strb	r3, [r2]
   11494:	bl	118b8 <__assert_fail@plt+0x5c4>
   11498:	ldr	r0, [sp, #20]
   1149c:	bl	13250 <argp_parse@@Base+0xe98>
   114a0:	mov	r0, #0
   114a4:	bl	111a4 <exit@plt>
   114a8:	ldr	r2, [pc, #700]	; 1176c <__assert_fail@plt+0x478>
   114ac:	mov	r1, #0
   114b0:	mov	r0, #1
   114b4:	bl	11120 <error@plt>
   114b8:	ldr	r4, [r7, #292]	; 0x124
   114bc:	b	113b8 <__assert_fail@plt+0xc4>
   114c0:	bl	111e0 <__errno_location@plt>
   114c4:	ldr	r2, [pc, #676]	; 11770 <__assert_fail@plt+0x47c>
   114c8:	ldr	r1, [r0]
   114cc:	mov	r0, #1
   114d0:	bl	11120 <error@plt>
   114d4:	b	11400 <__assert_fail@plt+0x10c>
   114d8:	cmp	r4, #0
   114dc:	bne	113a4 <__assert_fail@plt+0xb0>
   114e0:	ldrb	r3, [r9]
   114e4:	cmp	r3, #91	; 0x5b
   114e8:	beq	116b0 <__assert_fail@plt+0x3bc>
   114ec:	mov	r0, r9
   114f0:	mov	r1, #58	; 0x3a
   114f4:	bl	1124c <strrchr@plt>
   114f8:	cmp	r0, #0
   114fc:	beq	116e4 <__assert_fail@plt+0x3f0>
   11500:	adds	r3, r0, #1
   11504:	str	r3, [sp, #12]
   11508:	strb	r4, [r0]
   1150c:	beq	116e4 <__assert_fail@plt+0x3f0>
   11510:	mov	r2, #32
   11514:	mov	r1, #0
   11518:	add	r0, sp, #32
   1151c:	bl	11204 <memset@plt>
   11520:	ldr	r0, [r6, #12]
   11524:	mov	ip, #2
   11528:	str	r0, [sp, #36]	; 0x24
   1152c:	add	r2, sp, #32
   11530:	add	r3, sp, #24
   11534:	ldr	r1, [sp, #12]
   11538:	ldr	r0, [r7, #292]	; 0x124
   1153c:	str	ip, [sp, #40]	; 0x28
   11540:	bl	112a0 <getaddrinfo@plt>
   11544:	cmp	r0, #0
   11548:	blt	11720 <__assert_fail@plt+0x42c>
   1154c:	ldr	r4, [sp, #24]
   11550:	ldr	sl, [pc, #528]	; 11768 <__assert_fail@plt+0x474>
   11554:	cmp	r4, #0
   11558:	beq	116f0 <__assert_fail@plt+0x3fc>
   1155c:	ldmib	r4, {r0, r1, r2}
   11560:	bl	112ac <socket@plt>
   11564:	cmp	r0, #0
   11568:	str	r0, [sl]
   1156c:	blt	115dc <__assert_fail@plt+0x2e8>
   11570:	ldr	r9, [r6, #20]
   11574:	cmp	r9, #0
   11578:	beq	11684 <__assert_fail@plt+0x390>
   1157c:	mov	r2, #32
   11580:	mov	r1, #0
   11584:	add	r0, sp, #64	; 0x40
   11588:	bl	11204 <memset@plt>
   1158c:	ldr	ip, [r4, #4]
   11590:	mov	r0, r9
   11594:	add	r3, sp, #28
   11598:	add	r2, sp, #64	; 0x40
   1159c:	mov	r1, #0
   115a0:	str	ip, [sp, #68]	; 0x44
   115a4:	bl	112a0 <getaddrinfo@plt>
   115a8:	cmp	r0, #0
   115ac:	bne	11674 <__assert_fail@plt+0x380>
   115b0:	ldr	r3, [sp, #28]
   115b4:	ldr	r0, [sl]
   115b8:	ldr	r2, [r3, #16]
   115bc:	ldr	r1, [r3, #20]
   115c0:	bl	111f8 <bind@plt>
   115c4:	cmp	r0, #0
   115c8:	ldr	r0, [sp, #28]
   115cc:	beq	11680 <__assert_fail@plt+0x38c>
   115d0:	bl	11294 <freeaddrinfo@plt>
   115d4:	ldr	r0, [sl]
   115d8:	bl	112d0 <close@plt>
   115dc:	ldr	r4, [r4, #28]
   115e0:	b	11554 <__assert_fail@plt+0x260>
   115e4:	add	r4, sp, #176	; 0xb0
   115e8:	mov	r3, #0
   115ec:	str	r3, [r4, #-112]!	; 0xffffff90
   115f0:	ldr	r6, [pc, #380]	; 11774 <__assert_fail@plt+0x480>
   115f4:	mov	r5, #10
   115f8:	b	11604 <__assert_fail@plt+0x310>
   115fc:	ldr	r0, [sp, #20]
   11600:	bl	118b8 <__assert_fail@plt+0x5c4>
   11604:	ldr	r3, [r6]
   11608:	mov	r2, r5
   1160c:	mov	r1, r4
   11610:	add	r0, sp, #20
   11614:	bl	11024 <__getdelim@plt>
   11618:	cmp	r0, #0
   1161c:	bgt	115fc <__assert_fail@plt+0x308>
   11620:	b	11498 <__assert_fail@plt+0x1a4>
   11624:	bl	111e0 <__errno_location@plt>
   11628:	ldr	r2, [pc, #328]	; 11778 <__assert_fail@plt+0x484>
   1162c:	ldr	r1, [r0]
   11630:	mov	r0, r4
   11634:	bl	11120 <error@plt>
   11638:	ldr	r0, [r6]
   1163c:	b	113ec <__assert_fail@plt+0xf8>
   11640:	ldr	r0, [pc, #308]	; 1177c <__assert_fail@plt+0x488>
   11644:	bl	1112c <getenv@plt>
   11648:	cmp	r0, r4
   1164c:	str	r0, [r6, #8]
   11650:	bne	11370 <__assert_fail@plt+0x7c>
   11654:	bl	11060 <getuid@plt>
   11658:	bl	11048 <getpwuid@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r0, [r0]
   11664:	ldreq	r0, [pc, #276]	; 11780 <__assert_fail@plt+0x48c>
   11668:	bl	13d94 <argp_parse@@Base+0x19dc>
   1166c:	str	r0, [r6, #8]
   11670:	b	11370 <__assert_fail@plt+0x7c>
   11674:	ldr	r0, [sl]
   11678:	bl	112d0 <close@plt>
   1167c:	b	115dc <__assert_fail@plt+0x2e8>
   11680:	bl	11294 <freeaddrinfo@plt>
   11684:	ldr	r2, [r4, #16]
   11688:	ldr	r1, [r4, #20]
   1168c:	ldr	r0, [sl]
   11690:	bl	112e8 <connect@plt>
   11694:	cmp	r0, #0
   11698:	bne	11674 <__assert_fail@plt+0x380>
   1169c:	ldr	r0, [sp, #24]
   116a0:	cmp	r0, #0
   116a4:	beq	11400 <__assert_fail@plt+0x10c>
   116a8:	bl	11294 <freeaddrinfo@plt>
   116ac:	b	11400 <__assert_fail@plt+0x10c>
   116b0:	add	r9, r9, #1
   116b4:	mov	r0, r9
   116b8:	mov	r1, #93	; 0x5d
   116bc:	str	r9, [r7, #292]	; 0x124
   116c0:	bl	111c8 <strchr@plt>
   116c4:	cmp	r0, #0
   116c8:	beq	116e4 <__assert_fail@plt+0x3f0>
   116cc:	ldrb	r3, [r0, #1]
   116d0:	strb	r4, [r0]
   116d4:	cmp	r3, #58	; 0x3a
   116d8:	addeq	r3, r0, #2
   116dc:	streq	r3, [sp, #12]
   116e0:	beq	11510 <__assert_fail@plt+0x21c>
   116e4:	ldr	r3, [pc, #152]	; 11784 <__assert_fail@plt+0x490>
   116e8:	str	r3, [sp, #12]
   116ec:	b	11510 <__assert_fail@plt+0x21c>
   116f0:	ldr	r0, [sp, #24]
   116f4:	cmp	r0, #0
   116f8:	beq	11700 <__assert_fail@plt+0x40c>
   116fc:	bl	11294 <freeaddrinfo@plt>
   11700:	ldr	r3, [sp, #12]
   11704:	ldr	r2, [pc, #124]	; 11788 <__assert_fail@plt+0x494>
   11708:	str	r3, [sp]
   1170c:	mov	r1, #99	; 0x63
   11710:	ldr	r3, [r7, #292]	; 0x124
   11714:	mov	r0, #1
   11718:	bl	11120 <error@plt>
   1171c:	b	11400 <__assert_fail@plt+0x10c>
   11720:	ldr	r4, [r7, #292]	; 0x124
   11724:	bl	11090 <gai_strerror@plt>
   11728:	ldr	r2, [sp, #12]
   1172c:	mov	r3, r4
   11730:	str	r2, [sp]
   11734:	mov	r1, #0
   11738:	ldr	r2, [pc, #76]	; 1178c <__assert_fail@plt+0x498>
   1173c:	str	r0, [sp, #4]
   11740:	mov	r0, #1
   11744:	bl	11120 <error@plt>
   11748:	b	1154c <__assert_fail@plt+0x258>
   1174c:	andeq	sl, r2, r8, lsl r4
   11750:	andeq	r8, r1, ip, lsl sp
   11754:	andeq	sl, r2, r0, asr #4
   11758:	andeq	r8, r1, r4, lsr sp
   1175c:	andeq	sl, r2, r4, asr #7
   11760:	andeq	sl, r2, r8, asr #4
   11764:	andeq	sl, r2, r8, lsl r1
   11768:	andeq	sl, r2, r4, lsl r4
   1176c:	andeq	r8, r1, ip, asr #26
   11770:	muleq	r1, r4, sp
   11774:			; <UNDEFINED> instruction: 0x0002a3b8
   11778:	andeq	r8, r1, ip, ror sp
   1177c:	andeq	r8, r1, ip, lsr sp
   11780:	andeq	r8, r1, r4, asr #26
   11784:	andeq	r8, r1, r4, lsl sp
   11788:	andeq	r8, r1, r4, ror sp
   1178c:	andeq	r8, r1, r8, ror #26
   11790:	mov	fp, #0
   11794:	mov	lr, #0
   11798:	pop	{r1}		; (ldr r1, [sp], #4)
   1179c:	mov	r2, sp
   117a0:	push	{r2}		; (str r2, [sp, #-4]!)
   117a4:	push	{r0}		; (str r0, [sp, #-4]!)
   117a8:	ldr	ip, [pc, #16]	; 117c0 <__assert_fail@plt+0x4cc>
   117ac:	push	{ip}		; (str ip, [sp, #-4]!)
   117b0:	ldr	r0, [pc, #12]	; 117c4 <__assert_fail@plt+0x4d0>
   117b4:	ldr	r3, [pc, #12]	; 117c8 <__assert_fail@plt+0x4d4>
   117b8:	bl	11144 <__libc_start_main@plt>
   117bc:	bl	112c4 <abort@plt>
   117c0:	andeq	r8, r1, r4, lsl ip
   117c4:	andeq	r1, r1, r0, lsl #6
   117c8:			; <UNDEFINED> instruction: 0x00018bb4
   117cc:	ldr	r3, [pc, #20]	; 117e8 <__assert_fail@plt+0x4f4>
   117d0:	ldr	r2, [pc, #20]	; 117ec <__assert_fail@plt+0x4f8>
   117d4:	add	r3, pc, r3
   117d8:	ldr	r2, [r3, r2]
   117dc:	cmp	r2, #0
   117e0:	bxeq	lr
   117e4:	b	11168 <__gmon_start__@plt>
   117e8:	andeq	r8, r1, r4, lsr #16
   117ec:	andeq	r0, r0, ip, lsl #2
   117f0:	ldr	r3, [pc, #28]	; 11814 <__assert_fail@plt+0x520>
   117f4:	ldr	r0, [pc, #28]	; 11818 <__assert_fail@plt+0x524>
   117f8:	sub	r3, r3, r0
   117fc:	cmp	r3, #6
   11800:	bxls	lr
   11804:	ldr	r3, [pc, #16]	; 1181c <__assert_fail@plt+0x528>
   11808:	cmp	r3, #0
   1180c:	bxeq	lr
   11810:	bx	r3
   11814:	andeq	sl, r2, fp, lsr #7
   11818:	andeq	sl, r2, r8, lsr #7
   1181c:	andeq	r0, r0, r0
   11820:	ldr	r1, [pc, #36]	; 1184c <__assert_fail@plt+0x558>
   11824:	ldr	r0, [pc, #36]	; 11850 <__assert_fail@plt+0x55c>
   11828:	sub	r1, r1, r0
   1182c:	asr	r1, r1, #2
   11830:	add	r1, r1, r1, lsr #31
   11834:	asrs	r1, r1, #1
   11838:	bxeq	lr
   1183c:	ldr	r3, [pc, #16]	; 11854 <__assert_fail@plt+0x560>
   11840:	cmp	r3, #0
   11844:	bxeq	lr
   11848:	bx	r3
   1184c:	andeq	sl, r2, r8, lsr #7
   11850:	andeq	sl, r2, r8, lsr #7
   11854:	andeq	r0, r0, r0
   11858:	push	{r4, lr}
   1185c:	ldr	r4, [pc, #24]	; 1187c <__assert_fail@plt+0x588>
   11860:	ldrb	r3, [r4]
   11864:	cmp	r3, #0
   11868:	popne	{r4, pc}
   1186c:	bl	117f0 <__assert_fail@plt+0x4fc>
   11870:	mov	r3, #1
   11874:	strb	r3, [r4]
   11878:	pop	{r4, pc}
   1187c:	andeq	sl, r2, r0, asr #7
   11880:	ldr	r0, [pc, #40]	; 118b0 <__assert_fail@plt+0x5bc>
   11884:	ldr	r3, [r0]
   11888:	cmp	r3, #0
   1188c:	bne	11894 <__assert_fail@plt+0x5a0>
   11890:	b	11820 <__assert_fail@plt+0x52c>
   11894:	ldr	r3, [pc, #24]	; 118b4 <__assert_fail@plt+0x5c0>
   11898:	cmp	r3, #0
   1189c:	beq	11890 <__assert_fail@plt+0x59c>
   118a0:	push	{r4, lr}
   118a4:	blx	r3
   118a8:	pop	{r4, lr}
   118ac:	b	11820 <__assert_fail@plt+0x52c>
   118b0:	andeq	r9, r2, ip, lsl #30
   118b4:	andeq	r0, r0, r0
   118b8:	push	{r4, r5, r6, r7, lr}
   118bc:	mov	r6, r0
   118c0:	sub	sp, sp, #44	; 0x2c
   118c4:	mov	r0, #0
   118c8:	bl	110b4 <time@plt>
   118cc:	ldr	r4, [pc, #352]	; 11a34 <__assert_fail@plt+0x740>
   118d0:	ldr	r3, [r4]
   118d4:	tst	r3, #1
   118d8:	ldr	r3, [pc, #344]	; 11a38 <__assert_fail@plt+0x744>
   118dc:	ldr	r5, [r3]
   118e0:	str	r0, [sp, #20]
   118e4:	add	r0, sp, #20
   118e8:	beq	119dc <__assert_fail@plt+0x6e8>
   118ec:	bl	110d8 <ctime@plt>
   118f0:	ldmib	r4, {r1, r3}
   118f4:	mov	r2, r5
   118f8:	stmib	sp, {r1, r6}
   118fc:	str	r3, [sp]
   11900:	ldr	r1, [pc, #308]	; 11a3c <__assert_fail@plt+0x748>
   11904:	add	r3, r0, #4
   11908:	add	r0, sp, #16
   1190c:	bl	1121c <asprintf@plt>
   11910:	cmn	r0, #1
   11914:	beq	11a04 <__assert_fail@plt+0x710>
   11918:	ldr	r5, [sp, #16]
   1191c:	mov	r0, r5
   11920:	bl	111bc <strlen@plt>
   11924:	ldr	r3, [r4]
   11928:	tst	r3, #32
   1192c:	mov	r7, r0
   11930:	beq	11984 <__assert_fail@plt+0x690>
   11934:	mov	r0, r6
   11938:	bl	111bc <strlen@plt>
   1193c:	str	r6, [sp, #24]
   11940:	add	r3, r6, r0
   11944:	str	r0, [sp, #28]
   11948:	ldrb	r3, [r3, #-1]
   1194c:	cmp	r3, #10
   11950:	movne	r3, #1
   11954:	strne	r3, [sp, #36]	; 0x24
   11958:	ldr	r3, [pc, #224]	; 11a40 <__assert_fail@plt+0x74c>
   1195c:	ldrne	r2, [pc, #224]	; 11a44 <__assert_fail@plt+0x750>
   11960:	movne	r4, #2
   11964:	moveq	r4, #1
   11968:	ldr	r0, [r3]
   1196c:	strne	r2, [sp, #32]
   11970:	bl	11210 <fileno@plt>
   11974:	mov	r2, r4
   11978:	add	r1, sp, #24
   1197c:	bl	11234 <writev@plt>
   11980:	ldr	r5, [sp, #16]
   11984:	ldr	r2, [pc, #188]	; 11a48 <__assert_fail@plt+0x754>
   11988:	mov	r1, r5
   1198c:	mov	r3, #0
   11990:	ldr	r0, [r2]
   11994:	mov	r2, r7
   11998:	bl	112dc <send@plt>
   1199c:	mov	r4, r0
   119a0:	ldr	r0, [sp, #16]
   119a4:	bl	13250 <argp_parse@@Base+0xe98>
   119a8:	cmn	r4, #1
   119ac:	beq	11a1c <__assert_fail@plt+0x728>
   119b0:	cmp	r4, r7
   119b4:	beq	119d4 <__assert_fail@plt+0x6e0>
   119b8:	bl	111e0 <__errno_location@plt>
   119bc:	mov	r3, r4
   119c0:	ldr	r2, [pc, #132]	; 11a4c <__assert_fail@plt+0x758>
   119c4:	ldr	r1, [r0]
   119c8:	str	r7, [sp]
   119cc:	mov	r0, #0
   119d0:	bl	11120 <error@plt>
   119d4:	add	sp, sp, #44	; 0x2c
   119d8:	pop	{r4, r5, r6, r7, pc}
   119dc:	bl	110d8 <ctime@plt>
   119e0:	ldr	r3, [r4, #8]
   119e4:	mov	r2, r5
   119e8:	ldr	r1, [pc, #96]	; 11a50 <__assert_fail@plt+0x75c>
   119ec:	stm	sp, {r3, r6}
   119f0:	add	r3, r0, #4
   119f4:	add	r0, sp, #16
   119f8:	bl	1121c <asprintf@plt>
   119fc:	cmn	r0, #1
   11a00:	bne	11918 <__assert_fail@plt+0x624>
   11a04:	bl	111e0 <__errno_location@plt>
   11a08:	ldr	r2, [pc, #68]	; 11a54 <__assert_fail@plt+0x760>
   11a0c:	ldr	r1, [r0]
   11a10:	mov	r0, #1
   11a14:	bl	11120 <error@plt>
   11a18:	b	11918 <__assert_fail@plt+0x624>
   11a1c:	bl	111e0 <__errno_location@plt>
   11a20:	ldr	r2, [pc, #48]	; 11a58 <__assert_fail@plt+0x764>
   11a24:	ldr	r1, [r0]
   11a28:	mov	r0, #0
   11a2c:	bl	11120 <error@plt>
   11a30:	b	119d4 <__assert_fail@plt+0x6e0>
   11a34:	andeq	sl, r2, r4, asr #7
   11a38:	andeq	sl, r2, r8, lsl r1
   11a3c:	andeq	r8, r1, r8, asr #24
   11a40:			; <UNDEFINED> instruction: 0x0002a3b0
   11a44:	andeq	r8, r1, ip, lsl #25
   11a48:	andeq	sl, r2, r4, lsl r4
   11a4c:	muleq	r1, ip, ip
   11a50:	andeq	r8, r1, r0, ror #24
   11a54:	andeq	r8, r1, r4, ror ip
   11a58:	muleq	r1, r0, ip
   11a5c:	push	{r4, r5, r6, lr}
   11a60:	sub	sp, sp, #16
   11a64:	mov	r5, r0
   11a68:	mov	r6, r2
   11a6c:	mov	r4, r1
   11a70:	bl	1118c <__ctype_b_loc@plt>
   11a74:	ldrb	r3, [r5]
   11a78:	lsl	r3, r3, #1
   11a7c:	ldr	r2, [r0]
   11a80:	ldrh	r3, [r2, r3]
   11a84:	tst	r3, #2048	; 0x800
   11a88:	bne	11ae8 <__assert_fail@plt+0x7f4>
   11a8c:	ldr	r1, [r4]
   11a90:	cmp	r1, #0
   11a94:	bne	11aa8 <__assert_fail@plt+0x7b4>
   11a98:	b	11ac4 <__assert_fail@plt+0x7d0>
   11a9c:	ldr	r1, [r4, #8]!
   11aa0:	cmp	r1, #0
   11aa4:	beq	11ac4 <__assert_fail@plt+0x7d0>
   11aa8:	mov	r0, r5
   11aac:	bl	110f0 <strcasecmp@plt>
   11ab0:	cmp	r0, #0
   11ab4:	bne	11a9c <__assert_fail@plt+0x7a8>
   11ab8:	ldr	r0, [r4, #4]
   11abc:	add	sp, sp, #16
   11ac0:	pop	{r4, r5, r6, pc}
   11ac4:	str	r5, [sp]
   11ac8:	mov	r3, r6
   11acc:	ldr	r2, [pc, #96]	; 11b34 <__assert_fail@plt+0x840>
   11ad0:	mov	r1, #0
   11ad4:	mov	r0, #1
   11ad8:	bl	11120 <error@plt>
   11adc:	mvn	r0, #0
   11ae0:	add	sp, sp, #16
   11ae4:	pop	{r4, r5, r6, pc}
   11ae8:	mov	r2, #0
   11aec:	add	r1, sp, #12
   11af0:	mov	r0, r5
   11af4:	bl	111b0 <strtoul@plt>
   11af8:	ldr	r3, [sp, #12]
   11afc:	ldrb	r3, [r3]
   11b00:	cmp	r0, #1016	; 0x3f8
   11b04:	cmpls	r3, #0
   11b08:	mov	r4, r0
   11b0c:	beq	11b28 <__assert_fail@plt+0x834>
   11b10:	str	r5, [sp]
   11b14:	mov	r3, r6
   11b18:	ldr	r2, [pc, #24]	; 11b38 <__assert_fail@plt+0x844>
   11b1c:	mov	r1, #0
   11b20:	mov	r0, #1
   11b24:	bl	11120 <error@plt>
   11b28:	mov	r0, r4
   11b2c:	add	sp, sp, #16
   11b30:	pop	{r4, r5, r6, pc}
   11b34:	andeq	r8, r1, r0, ror #25
   11b38:	andeq	r8, r1, r8, asr #25
   11b3c:	push	{r4, r5, r6, lr}
   11b40:	mov	r1, #46	; 0x2e
   11b44:	mov	r4, r0
   11b48:	bl	111c8 <strchr@plt>
   11b4c:	subs	r5, r0, #0
   11b50:	beq	11b9c <__assert_fail@plt+0x8a8>
   11b54:	mov	r2, #0
   11b58:	strb	r2, [r5]
   11b5c:	mov	r0, r4
   11b60:	ldr	r2, [pc, #80]	; 11bb8 <__assert_fail@plt+0x8c4>
   11b64:	ldr	r1, [pc, #80]	; 11bbc <__assert_fail@plt+0x8c8>
   11b68:	bl	11a5c <__assert_fail@plt+0x768>
   11b6c:	add	r5, r5, #1
   11b70:	cmp	r5, #0
   11b74:	mov	r4, r0
   11b78:	beq	11bb0 <__assert_fail@plt+0x8bc>
   11b7c:	mov	r0, r5
   11b80:	ldr	r2, [pc, #56]	; 11bc0 <__assert_fail@plt+0x8cc>
   11b84:	ldr	r1, [pc, #56]	; 11bc4 <__assert_fail@plt+0x8d0>
   11b88:	bl	11a5c <__assert_fail@plt+0x768>
   11b8c:	and	r0, r0, #7
   11b90:	and	r4, r4, #1016	; 0x3f8
   11b94:	orr	r0, r4, r0
   11b98:	pop	{r4, r5, r6, pc}
   11b9c:	mov	r0, r4
   11ba0:	ldr	r2, [pc, #16]	; 11bb8 <__assert_fail@plt+0x8c4>
   11ba4:	ldr	r1, [pc, #16]	; 11bbc <__assert_fail@plt+0x8c8>
   11ba8:	bl	11a5c <__assert_fail@plt+0x768>
   11bac:	mov	r4, r0
   11bb0:	mov	r0, #5
   11bb4:	b	11b90 <__assert_fail@plt+0x89c>
   11bb8:	strdeq	r8, [r1], -r4
   11bbc:	andeq	sl, r2, ip, lsl r1
   11bc0:	andeq	r8, r1, r0, lsl #26
   11bc4:	ldrdeq	sl, [r2], -r4
   11bc8:	sub	r0, r0, #52	; 0x34
   11bcc:	push	{r4, r5, lr}
   11bd0:	mov	r5, r1
   11bd4:	sub	sp, sp, #28
   11bd8:	cmp	r0, #65	; 0x41
   11bdc:	ldrls	pc, [pc, r0, lsl #2]
   11be0:	b	11ddc <__assert_fail@plt+0xae8>
   11be4:	andeq	r1, r1, ip, lsl #26
   11be8:	ldrdeq	r1, [r1], -ip
   11bec:	andeq	r1, r1, r0, lsr #26
   11bf0:	ldrdeq	r1, [r1], -ip
   11bf4:	ldrdeq	r1, [r1], -ip
   11bf8:	ldrdeq	r1, [r1], -ip
   11bfc:	ldrdeq	r1, [r1], -ip
   11c00:	ldrdeq	r1, [r1], -ip
   11c04:	ldrdeq	r1, [r1], -ip
   11c08:	ldrdeq	r1, [r1], -ip
   11c0c:	ldrdeq	r1, [r1], -ip
   11c10:	ldrdeq	r1, [r1], -ip
   11c14:	ldrdeq	r1, [r1], -ip
   11c18:	ldrdeq	r1, [r1], -ip
   11c1c:	ldrdeq	r1, [r1], -ip
   11c20:	ldrdeq	r1, [r1], -ip
   11c24:	ldrdeq	r1, [r1], -ip
   11c28:	ldrdeq	r1, [r1], -ip
   11c2c:	ldrdeq	r1, [r1], -ip
   11c30:	ldrdeq	r1, [r1], -ip
   11c34:	ldrdeq	r1, [r1], -ip
   11c38:	ldrdeq	r1, [r1], -ip
   11c3c:	ldrdeq	r1, [r1], -ip
   11c40:	ldrdeq	r1, [r1], -ip
   11c44:	ldrdeq	r1, [r1], -ip
   11c48:	ldrdeq	r1, [r1], -ip
   11c4c:	ldrdeq	r1, [r1], -ip
   11c50:	ldrdeq	r1, [r1], -ip
   11c54:	ldrdeq	r1, [r1], -ip
   11c58:	ldrdeq	r1, [r1], -ip
   11c5c:	ldrdeq	r1, [r1], -ip
   11c60:	andeq	r1, r1, r4, lsr sp
   11c64:	ldrdeq	r1, [r1], -ip
   11c68:	ldrdeq	r1, [r1], -ip
   11c6c:	ldrdeq	r1, [r1], -ip
   11c70:	ldrdeq	r1, [r1], -ip
   11c74:	ldrdeq	r1, [r1], -ip
   11c78:	ldrdeq	r1, [r1], -ip
   11c7c:	ldrdeq	r1, [r1], -ip
   11c80:	ldrdeq	r1, [r1], -ip
   11c84:	ldrdeq	r1, [r1], -ip
   11c88:	ldrdeq	r1, [r1], -ip
   11c8c:	ldrdeq	r1, [r1], -ip
   11c90:	ldrdeq	r1, [r1], -ip
   11c94:	ldrdeq	r1, [r1], -ip
   11c98:	ldrdeq	r1, [r1], -ip
   11c9c:	ldrdeq	r1, [r1], -ip
   11ca0:	ldrdeq	r1, [r1], -ip
   11ca4:	ldrdeq	r1, [r1], -ip
   11ca8:	ldrdeq	r1, [r1], -ip
   11cac:	andeq	r1, r1, r4, asr #26
   11cb0:	ldrdeq	r1, [r1], -ip
   11cb4:	andeq	r1, r1, r0, ror #26
   11cb8:	andeq	r1, r1, r8, ror sp
   11cbc:	ldrdeq	r1, [r1], -ip
   11cc0:	ldrdeq	r1, [r1], -ip
   11cc4:	ldrdeq	r1, [r1], -ip
   11cc8:	ldrdeq	r1, [r1], -ip
   11ccc:	ldrdeq	r1, [r1], -ip
   11cd0:	ldrdeq	r1, [r1], -ip
   11cd4:	muleq	r1, ip, sp
   11cd8:	ldrdeq	r1, [r1], -ip
   11cdc:	ldrdeq	r1, [r1], -ip
   11ce0:			; <UNDEFINED> instruction: 0x00011db4
   11ce4:	andeq	r1, r1, ip, asr #27
   11ce8:	andeq	r1, r1, ip, ror #25
   11cec:	ldr	r1, [pc, #332]	; 11e40 <__assert_fail@plt+0xb4c>
   11cf0:	ldr	r3, [pc, #332]	; 11e44 <__assert_fail@plt+0xb50>
   11cf4:	mov	r2, #0
   11cf8:	str	r5, [r1, #16]
   11cfc:	str	r2, [r3, #292]	; 0x124
   11d00:	mov	r0, r2
   11d04:	add	sp, sp, #28
   11d08:	pop	{r4, r5, pc}
   11d0c:	ldr	r3, [pc, #300]	; 11e40 <__assert_fail@plt+0xb4c>
   11d10:	mov	r1, #2
   11d14:	mov	r2, #0
   11d18:	str	r1, [r3, #12]
   11d1c:	b	11d00 <__assert_fail@plt+0xa0c>
   11d20:	ldr	r3, [pc, #280]	; 11e40 <__assert_fail@plt+0xb4c>
   11d24:	mov	r1, #10
   11d28:	mov	r2, #0
   11d2c:	str	r1, [r3, #12]
   11d30:	b	11d00 <__assert_fail@plt+0xa0c>
   11d34:	ldr	r3, [pc, #260]	; 11e40 <__assert_fail@plt+0xb4c>
   11d38:	mov	r2, #0
   11d3c:	str	r1, [r3, #20]
   11d40:	b	11d00 <__assert_fail@plt+0xa0c>
   11d44:	ldr	r1, [pc, #252]	; 11e48 <__assert_fail@plt+0xb54>
   11d48:	mov	r0, r5
   11d4c:	bl	11030 <strcmp@plt>
   11d50:	cmp	r0, #0
   11d54:	bne	11de4 <__assert_fail@plt+0xaf0>
   11d58:	mov	r2, #0
   11d5c:	b	11d00 <__assert_fail@plt+0xa0c>
   11d60:	ldr	r1, [pc, #220]	; 11e44 <__assert_fail@plt+0xb50>
   11d64:	ldr	r3, [pc, #212]	; 11e40 <__assert_fail@plt+0xb4c>
   11d68:	mov	r2, #0
   11d6c:	str	r5, [r1, #292]	; 0x124
   11d70:	str	r2, [r3, #16]
   11d74:	b	11d00 <__assert_fail@plt+0xa0c>
   11d78:	ldr	r4, [pc, #192]	; 11e40 <__assert_fail@plt+0xb4c>
   11d7c:	cmp	r1, #0
   11d80:	ldr	r3, [r4]
   11d84:	orr	r3, r3, #1
   11d88:	str	r3, [r4]
   11d8c:	beq	11e20 <__assert_fail@plt+0xb2c>
   11d90:	str	r1, [r4, #4]
   11d94:	mov	r2, #0
   11d98:	b	11d00 <__assert_fail@plt+0xa0c>
   11d9c:	mov	r0, r1
   11da0:	bl	11b3c <__assert_fail@plt+0x848>
   11da4:	ldr	r3, [pc, #152]	; 11e44 <__assert_fail@plt+0xb50>
   11da8:	mov	r2, #0
   11dac:	str	r0, [r3]
   11db0:	b	11d00 <__assert_fail@plt+0xa0c>
   11db4:	ldr	r1, [pc, #132]	; 11e40 <__assert_fail@plt+0xb4c>
   11db8:	mov	r2, #0
   11dbc:	ldr	r3, [r1]
   11dc0:	orr	r3, r3, #32
   11dc4:	str	r3, [r1]
   11dc8:	b	11d00 <__assert_fail@plt+0xa0c>
   11dcc:	ldr	r3, [pc, #108]	; 11e40 <__assert_fail@plt+0xb4c>
   11dd0:	mov	r2, #0
   11dd4:	str	r1, [r3, #8]
   11dd8:	b	11d00 <__assert_fail@plt+0xa0c>
   11ddc:	mov	r2, #7
   11de0:	b	11d00 <__assert_fail@plt+0xa0c>
   11de4:	ldr	r3, [pc, #96]	; 11e4c <__assert_fail@plt+0xb58>
   11de8:	ldr	r1, [pc, #96]	; 11e50 <__assert_fail@plt+0xb5c>
   11dec:	mov	r0, r5
   11df0:	ldr	r2, [r3]
   11df4:	bl	11174 <freopen64@plt>
   11df8:	subs	r4, r0, #0
   11dfc:	bne	11d58 <__assert_fail@plt+0xa64>
   11e00:	bl	111e0 <__errno_location@plt>
   11e04:	ldr	r2, [pc, #72]	; 11e54 <__assert_fail@plt+0xb60>
   11e08:	mov	r3, r5
   11e0c:	ldr	r1, [r0]
   11e10:	mov	r0, #1
   11e14:	bl	11120 <error@plt>
   11e18:	mov	r2, r4
   11e1c:	b	11d00 <__assert_fail@plt+0xa0c>
   11e20:	bl	11198 <getpid@plt>
   11e24:	mov	r2, sp
   11e28:	asr	r1, r0, #31
   11e2c:	bl	13358 <argp_parse@@Base+0xfa0>
   11e30:	bl	13d94 <argp_parse@@Base+0x19dc>
   11e34:	mov	r2, r5
   11e38:	str	r0, [r4, #4]
   11e3c:	b	11d00 <__assert_fail@plt+0xa0c>
   11e40:	andeq	sl, r2, r4, asr #7
   11e44:	andeq	sl, r2, r8, lsl r1
   11e48:	andeq	r8, r1, ip, lsl #26
   11e4c:			; <UNDEFINED> instruction: 0x0002a3b8
   11e50:	muleq	r1, r0, r8
   11e54:	andeq	r8, r1, r0, lsl sp
   11e58:	ldr	r3, [r0]
   11e5c:	push	{r4, r5, r6, lr}
   11e60:	cmp	r3, #0
   11e64:	ldr	r5, [r0, #16]
   11e68:	beq	11ed0 <__assert_fail@plt+0xbdc>
   11e6c:	ldr	r0, [r1, #8]
   11e70:	mov	r2, #0
   11e74:	add	r0, r0, #1
   11e78:	str	r0, [r1, #8]
   11e7c:	b	11e84 <__assert_fail@plt+0xb90>
   11e80:	add	r2, r2, #1
   11e84:	add	r3, r3, #24
   11e88:	ldr	r0, [r3, #-20]	; 0xffffffec
   11e8c:	cmp	r0, #0
   11e90:	bne	11e80 <__assert_fail@plt+0xb8c>
   11e94:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11e98:	cmp	r0, #0
   11e9c:	bne	11e80 <__assert_fail@plt+0xb8c>
   11ea0:	ldr	r0, [r3, #-8]
   11ea4:	cmp	r0, #0
   11ea8:	bne	11e80 <__assert_fail@plt+0xb8c>
   11eac:	ldr	r0, [r3, #-4]
   11eb0:	cmp	r0, #0
   11eb4:	bne	11e80 <__assert_fail@plt+0xb8c>
   11eb8:	ldm	r1, {r0, r3}
   11ebc:	add	ip, r2, r2, lsl #1
   11ec0:	add	r0, r0, ip
   11ec4:	add	r2, r3, r2
   11ec8:	stm	r1, {r0, r2}
   11ecc:	b	11ee4 <__assert_fail@plt+0xbf0>
   11ed0:	ldr	r3, [r0, #4]
   11ed4:	cmp	r3, #0
   11ed8:	ldrne	r3, [r1, #8]
   11edc:	addne	r3, r3, #1
   11ee0:	strne	r3, [r1, #8]
   11ee4:	cmp	r5, #0
   11ee8:	popeq	{r4, r5, r6, pc}
   11eec:	ldr	r0, [r5]
   11ef0:	cmp	r0, #0
   11ef4:	popeq	{r4, r5, r6, pc}
   11ef8:	mov	r4, r1
   11efc:	mov	r1, r4
   11f00:	bl	11e58 <__assert_fail@plt+0xb64>
   11f04:	ldr	r3, [r4, #12]
   11f08:	ldr	r0, [r5, #16]!
   11f0c:	add	r3, r3, #1
   11f10:	cmp	r0, #0
   11f14:	str	r3, [r4, #12]
   11f18:	bne	11efc <__assert_fail@plt+0xc08>
   11f1c:	pop	{r4, r5, r6, pc}
   11f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f24:	sub	sp, sp, #36	; 0x24
   11f28:	ldr	sl, [r0]
   11f2c:	str	r0, [sp, #12]
   11f30:	cmp	sl, #0
   11f34:	str	r1, [sp, #16]
   11f38:	str	r2, [sp, #20]
   11f3c:	mov	r9, r3
   11f40:	ldr	r8, [r0, #16]
   11f44:	ldr	r7, [sp, #72]	; 0x48
   11f48:	beq	12114 <__assert_fail@plt+0xe20>
   11f4c:	add	fp, sl, #24
   11f50:	str	r8, [sp, #28]
   11f54:	str	r3, [sp, #24]
   11f58:	ldr	r4, [fp, #-20]	; 0xffffffec
   11f5c:	sub	r1, fp, #24
   11f60:	cmp	r4, #0
   11f64:	bne	11f74 <__assert_fail@plt+0xc80>
   11f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f6c:	cmp	r3, #0
   11f70:	beq	120e8 <__assert_fail@plt+0xdf4>
   11f74:	ldr	r3, [fp, #-12]
   11f78:	tst	r3, #4
   11f7c:	moveq	sl, r1
   11f80:	moveq	r5, r3
   11f84:	ldrne	r5, [sl, #12]
   11f88:	ands	r5, r5, #8
   11f8c:	bne	120d0 <__assert_fail@plt+0xddc>
   11f90:	tst	r3, #8
   11f94:	bne	12010 <__assert_fail@plt+0xd1c>
   11f98:	sub	r3, r4, #1
   11f9c:	cmp	r3, #254	; 0xfe
   11fa0:	bhi	12010 <__assert_fail@plt+0xd1c>
   11fa4:	bl	1118c <__ctype_b_loc@plt>
   11fa8:	lsl	r3, r4, #1
   11fac:	ldr	r1, [r0]
   11fb0:	ldrh	r3, [r1, r3]
   11fb4:	tst	r3, #16384	; 0x4000
   11fb8:	beq	12010 <__assert_fail@plt+0xd1c>
   11fbc:	ldr	r3, [r7, #4]
   11fc0:	add	r1, r3, #1
   11fc4:	str	r1, [r7, #4]
   11fc8:	strb	r4, [r3]
   11fcc:	ldr	r3, [sl, #8]
   11fd0:	cmp	r3, #0
   11fd4:	beq	12004 <__assert_fail@plt+0xd10>
   11fd8:	ldr	r3, [r7, #4]
   11fdc:	mov	r2, #58	; 0x3a
   11fe0:	add	r1, r3, #1
   11fe4:	str	r1, [r7, #4]
   11fe8:	strb	r2, [r3]
   11fec:	ldr	r3, [sl, #12]
   11ff0:	tst	r3, #1
   11ff4:	ldrne	r3, [r7, #4]
   11ff8:	addne	r1, r3, #1
   11ffc:	strne	r1, [r7, #4]
   12000:	strbne	r2, [r3]
   12004:	ldr	r3, [r7, #4]
   12008:	mov	r2, #0
   1200c:	strb	r2, [r3]
   12010:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12014:	cmp	r4, #0
   12018:	beq	120d0 <__assert_fail@plt+0xddc>
   1201c:	ldr	r8, [r7]
   12020:	ldr	r6, [r8, #8]
   12024:	ldr	r0, [r6]
   12028:	cmp	r0, #0
   1202c:	beq	12050 <__assert_fail@plt+0xd5c>
   12030:	mov	r9, r6
   12034:	mov	r1, r4
   12038:	bl	11030 <strcmp@plt>
   1203c:	cmp	r0, #0
   12040:	beq	120d8 <__assert_fail@plt+0xde4>
   12044:	ldr	r0, [r9, #16]!
   12048:	cmp	r0, #0
   1204c:	bne	12034 <__assert_fail@plt+0xd40>
   12050:	ldr	r3, [sl, #8]
   12054:	ldr	r1, [r7, #8]
   12058:	cmp	r3, #0
   1205c:	str	r4, [r1]
   12060:	beq	12074 <__assert_fail@plt+0xd80>
   12064:	ldr	r3, [sl, #12]
   12068:	tst	r3, #1
   1206c:	moveq	r5, #1
   12070:	movne	r5, #2
   12074:	str	r5, [r1, #4]
   12078:	ldr	ip, [fp, #-20]	; 0xffffffec
   1207c:	mov	r3, #0
   12080:	cmp	ip, r3
   12084:	str	r3, [r1, #8]
   12088:	ldr	r2, [sp, #24]
   1208c:	ldr	r3, [r8, #48]	; 0x30
   12090:	ldreq	ip, [sl, #4]
   12094:	sub	r3, r2, r3
   12098:	bic	ip, ip, #-16777216	; 0xff000000
   1209c:	asr	r3, r3, #2
   120a0:	add	lr, r1, #16
   120a4:	rsb	r0, r3, r3, lsl #3
   120a8:	add	r0, r0, r0, lsl #6
   120ac:	add	r0, r3, r0, lsl #3
   120b0:	rsb	r0, r0, r0, lsl #15
   120b4:	add	r3, r3, r0, lsl #3
   120b8:	add	r3, r3, #1
   120bc:	add	r3, ip, r3, lsl #24
   120c0:	str	r3, [r1, #12]
   120c4:	mov	r3, #0
   120c8:	str	lr, [r7, #8]
   120cc:	str	r3, [r1, #16]
   120d0:	add	fp, fp, #24
   120d4:	b	11f58 <__assert_fail@plt+0xc64>
   120d8:	sub	r6, r9, r6
   120dc:	cmn	r6, #15
   120e0:	bge	120d0 <__assert_fail@plt+0xddc>
   120e4:	b	12050 <__assert_fail@plt+0xd5c>
   120e8:	ldr	r3, [fp, #-8]
   120ec:	cmp	r3, #0
   120f0:	bne	11f74 <__assert_fail@plt+0xc80>
   120f4:	ldr	r3, [fp, #-4]
   120f8:	cmp	r3, #0
   120fc:	bne	11f74 <__assert_fail@plt+0xc80>
   12100:	ldr	r3, [sp, #12]
   12104:	ldr	r8, [sp, #28]
   12108:	ldr	r9, [sp, #24]
   1210c:	ldr	r3, [r3, #4]
   12110:	b	1212c <__assert_fail@plt+0xe38>
   12114:	ldr	r3, [sp, #12]
   12118:	ldr	r3, [r3, #4]
   1211c:	cmp	r3, #0
   12120:	moveq	r0, r9
   12124:	moveq	r9, r3
   12128:	beq	1219c <__assert_fail@plt+0xea8>
   1212c:	ldr	r2, [r7, #4]
   12130:	ldr	r1, [sp, #12]
   12134:	str	r3, [r9]
   12138:	cmp	r8, #0
   1213c:	stmib	r9, {r1, r2}
   12140:	ldr	r2, [sp, #16]
   12144:	mov	r3, #0
   12148:	str	r2, [r9, #16]
   1214c:	ldr	r2, [sp, #20]
   12150:	str	r3, [r9, #12]
   12154:	str	r2, [r9, #20]
   12158:	str	r3, [r9, #24]
   1215c:	str	r3, [r9, #32]
   12160:	str	r3, [r9, #28]
   12164:	beq	12198 <__assert_fail@plt+0xea4>
   12168:	ldr	r2, [r8]
   1216c:	cmp	r2, r3
   12170:	beq	121e4 <__assert_fail@plt+0xef0>
   12174:	add	r3, r3, #1
   12178:	ldr	r2, [r8, r3, lsl #4]
   1217c:	cmp	r2, #0
   12180:	bne	12174 <__assert_fail@plt+0xe80>
   12184:	lsl	r3, r3, #2
   12188:	ldr	r2, [r7, #12]
   1218c:	add	r3, r2, r3
   12190:	str	r2, [r9, #28]
   12194:	str	r3, [r7, #12]
   12198:	add	r0, r9, #36	; 0x24
   1219c:	cmp	r8, #0
   121a0:	beq	121dc <__assert_fail@plt+0xee8>
   121a4:	ldr	r1, [r8]
   121a8:	cmp	r1, #0
   121ac:	beq	121dc <__assert_fail@plt+0xee8>
   121b0:	mov	r2, #0
   121b4:	add	r4, r2, #1
   121b8:	mov	r3, r0
   121bc:	str	r7, [sp]
   121c0:	mov	r0, r1
   121c4:	mov	r1, r9
   121c8:	bl	11f20 <__assert_fail@plt+0xc2c>
   121cc:	ldr	r1, [r8, r4, lsl #4]
   121d0:	mov	r2, r4
   121d4:	cmp	r1, #0
   121d8:	bne	121b4 <__assert_fail@plt+0xec0>
   121dc:	add	sp, sp, #36	; 0x24
   121e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121e4:	mov	r3, r2
   121e8:	b	12188 <__assert_fail@plt+0xe94>
   121ec:	cmp	r0, #86	; 0x56
   121f0:	beq	121fc <__assert_fail@plt+0xf08>
   121f4:	mov	r0, #7
   121f8:	bx	lr
   121fc:	ldr	r3, [pc, #104]	; 1226c <__assert_fail@plt+0xf78>
   12200:	push	{r4, lr}
   12204:	mov	r4, r2
   12208:	ldr	r3, [r3]
   1220c:	cmp	r3, #0
   12210:	beq	12234 <__assert_fail@plt+0xf40>
   12214:	mov	r1, r2
   12218:	ldr	r0, [r2, #48]	; 0x30
   1221c:	blx	r3
   12220:	ldr	r0, [r4, #16]
   12224:	ands	r0, r0, #32
   12228:	beq	12268 <__assert_fail@plt+0xf74>
   1222c:	mov	r0, #0
   12230:	pop	{r4, pc}
   12234:	ldr	r3, [pc, #52]	; 12270 <__assert_fail@plt+0xf7c>
   12238:	ldr	r2, [r3]
   1223c:	cmp	r2, #0
   12240:	beq	12254 <__assert_fail@plt+0xf60>
   12244:	ldr	r1, [pc, #40]	; 12274 <__assert_fail@plt+0xf80>
   12248:	ldr	r0, [r4, #48]	; 0x30
   1224c:	bl	111d4 <fprintf@plt>
   12250:	b	12220 <__assert_fail@plt+0xf2c>
   12254:	ldr	r2, [pc, #28]	; 12278 <__assert_fail@plt+0xf84>
   12258:	ldr	r1, [pc, #28]	; 1227c <__assert_fail@plt+0xf88>
   1225c:	mov	r0, r4
   12260:	bl	170a8 <argp_error@@Base>
   12264:	b	12220 <__assert_fail@plt+0xf2c>
   12268:	bl	111a4 <exit@plt>
   1226c:	andeq	sl, r2, r0, ror #7
   12270:	andeq	sl, r2, ip, lsl r4
   12274:	andeq	r9, r1, r4, lsl #6
   12278:	andeq	r9, r1, r8, ror #2
   1227c:	andeq	r8, r1, r0, lsl sp
   12280:	cmn	r0, #3
   12284:	push	{r4, r5, lr}
   12288:	mov	r4, r2
   1228c:	sub	sp, sp, #12
   12290:	beq	12374 <__assert_fail@plt+0x1080>
   12294:	ble	12304 <__assert_fail@plt+0x1010>
   12298:	cmn	r0, #2
   1229c:	beq	122c4 <__assert_fail@plt+0xfd0>
   122a0:	cmp	r0, #63	; 0x3f
   122a4:	bne	12368 <__assert_fail@plt+0x1074>
   122a8:	mov	r0, r4
   122ac:	ldr	r2, [pc, #236]	; 123a0 <__assert_fail@plt+0x10ac>
   122b0:	ldr	r1, [r4, #48]	; 0x30
   122b4:	bl	16ff8 <argp_state_help@@Base>
   122b8:	mov	r0, #0
   122bc:	add	sp, sp, #12
   122c0:	pop	{r4, r5, pc}
   122c4:	ldr	r3, [pc, #216]	; 123a4 <__assert_fail@plt+0x10b0>
   122c8:	mov	r0, r1
   122cc:	str	r1, [sp, #4]
   122d0:	str	r1, [r3]
   122d4:	bl	131a4 <argp_parse@@Base+0xdec>
   122d8:	ldr	r3, [r4, #16]
   122dc:	ldr	r2, [pc, #196]	; 123a8 <__assert_fail@plt+0x10b4>
   122e0:	and	r3, r3, #3
   122e4:	cmp	r3, #1
   122e8:	ldr	r1, [sp, #4]
   122ec:	str	r0, [r4, #40]	; 0x28
   122f0:	str	r0, [r2]
   122f4:	beq	12390 <__assert_fail@plt+0x109c>
   122f8:	mov	r0, #0
   122fc:	add	sp, sp, #12
   12300:	pop	{r4, r5, pc}
   12304:	cmn	r0, #4
   12308:	bne	12368 <__assert_fail@plt+0x1074>
   1230c:	cmp	r1, #0
   12310:	ldr	r0, [pc, #148]	; 123ac <__assert_fail@plt+0x10b8>
   12314:	mov	r2, #10
   12318:	movne	r0, r1
   1231c:	mov	r1, #0
   12320:	bl	1103c <strtol@plt>
   12324:	ldr	r4, [pc, #132]	; 123b0 <__assert_fail@plt+0x10bc>
   12328:	str	r0, [r4]
   1232c:	ldr	r3, [r4]
   12330:	cmp	r3, #0
   12334:	sub	r3, r3, #1
   12338:	str	r3, [r4]
   1233c:	ble	122f8 <__assert_fail@plt+0x1004>
   12340:	mov	r5, #1
   12344:	mov	r0, r5
   12348:	bl	110cc <sleep@plt>
   1234c:	ldr	r3, [r4]
   12350:	cmp	r3, #0
   12354:	sub	r3, r3, #1
   12358:	str	r3, [r4]
   1235c:	bgt	12344 <__assert_fail@plt+0x1050>
   12360:	mov	r0, #0
   12364:	b	122fc <__assert_fail@plt+0x1008>
   12368:	mov	r0, #7
   1236c:	add	sp, sp, #12
   12370:	pop	{r4, r5, pc}
   12374:	mov	r0, r4
   12378:	ldr	r2, [pc, #52]	; 123b4 <__assert_fail@plt+0x10c0>
   1237c:	ldr	r1, [r4, #48]	; 0x30
   12380:	bl	16ff8 <argp_state_help@@Base>
   12384:	mov	r0, #0
   12388:	add	sp, sp, #12
   1238c:	pop	{r4, r5, pc}
   12390:	ldr	r3, [r4, #8]
   12394:	mov	r0, #0
   12398:	str	r1, [r3]
   1239c:	b	122bc <__assert_fail@plt+0xfc8>
   123a0:	andeq	r0, r0, sl, ror r2
   123a4:	andeq	sl, r2, ip, lsr #7
   123a8:	andeq	sl, r2, r8, lsr #7
   123ac:	andeq	r9, r1, ip, lsl #3
   123b0:	ldrdeq	sl, [r2], -ip
   123b4:	andeq	r0, r0, r1, lsl #4

000123b8 <argp_parse@@Base>:
   123b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123bc:	add	fp, sp, #32
   123c0:	tst	r3, #1
   123c4:	sub	sp, sp, #228	; 0xe4
   123c8:	mov	r6, r3
   123cc:	mov	r7, r0
   123d0:	str	r1, [fp, #-240]	; 0xffffff10
   123d4:	str	r2, [fp, #-232]	; 0xffffff18
   123d8:	bne	12404 <argp_parse@@Base+0x4c>
   123dc:	ldr	r3, [pc, #3260]	; 130a0 <argp_parse@@Base+0xce8>
   123e0:	ldr	r4, [pc, #3260]	; 130a4 <argp_parse@@Base+0xcec>
   123e4:	ldr	r2, [r3]
   123e8:	cmp	r2, #0
   123ec:	ldreq	r2, [fp, #-232]	; 0xffffff18
   123f0:	ldreq	r2, [r2]
   123f4:	streq	r2, [r3]
   123f8:	ldr	r3, [r4]
   123fc:	cmp	r3, #0
   12400:	beq	12aa4 <argp_parse@@Base+0x6ec>
   12404:	ands	r3, r6, #16
   12408:	beq	129ac <argp_parse@@Base+0x5f4>
   1240c:	sub	r4, fp, #196	; 0xc4
   12410:	mov	r0, r4
   12414:	mov	r2, #36	; 0x24
   12418:	mov	r1, #0
   1241c:	bl	11204 <memset@plt>
   12420:	ands	r3, r6, #4
   12424:	str	r3, [fp, #-244]	; 0xffffff0c
   12428:	mov	r3, #0
   1242c:	moveq	r0, #1
   12430:	movne	r0, #0
   12434:	cmp	r7, r3
   12438:	str	r3, [fp, #-224]	; 0xffffff20
   1243c:	str	r3, [fp, #-220]	; 0xffffff24
   12440:	str	r3, [fp, #-216]	; 0xffffff28
   12444:	str	r0, [fp, #-228]	; 0xffffff1c
   12448:	beq	128b0 <argp_parse@@Base+0x4f8>
   1244c:	mov	r0, r7
   12450:	sub	r1, fp, #228	; 0xe4
   12454:	bl	11e58 <__assert_fail@plt+0xb64>
   12458:	ldr	r5, [fp, #-220]	; 0xffffff24
   1245c:	ldr	r9, [fp, #-216]	; 0xffffff28
   12460:	add	r5, r5, #1
   12464:	ldr	r3, [fp, #-224]	; 0xffffff20
   12468:	add	r5, r5, r5, lsl #3
   1246c:	lsl	r2, r9, #2
   12470:	lsl	r5, r5, #2
   12474:	add	r3, r3, #1
   12478:	add	sl, r2, r5
   1247c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12480:	add	r9, sl, r3, lsl #4
   12484:	str	r2, [fp, #-236]	; 0xffffff14
   12488:	add	r0, r9, r0
   1248c:	add	r0, r0, #1
   12490:	bl	13e24 <argp_parse@@Base+0x1a6c>
   12494:	cmp	r0, #0
   12498:	mov	r8, r0
   1249c:	str	r0, [fp, #-40]	; 0xffffffd8
   124a0:	moveq	r5, #12
   124a4:	beq	128a4 <argp_parse@@Base+0x4ec>
   124a8:	mov	r3, #1
   124ac:	str	r3, [fp, #-196]	; 0xffffff3c
   124b0:	str	r3, [fp, #-192]	; 0xffffff40
   124b4:	ldm	r4!, {r0, r1, r2, r3}
   124b8:	sub	ip, fp, #148	; 0x94
   124bc:	add	r5, r8, r5
   124c0:	str	r5, [fp, #-104]	; 0xffffff98
   124c4:	stmia	ip!, {r0, r1, r2, r3}
   124c8:	add	r3, r8, sl
   124cc:	mov	lr, r3
   124d0:	ldm	r4!, {r0, r1, r2, r3}
   124d4:	add	sl, r8, r9
   124d8:	str	lr, [fp, #-248]	; 0xffffff08
   124dc:	str	lr, [fp, #-152]	; 0xffffff68
   124e0:	ldr	lr, [r4]
   124e4:	stmia	ip!, {r0, r1, r2, r3}
   124e8:	mov	r0, r5
   124ec:	ldr	r2, [fp, #-236]	; 0xffffff14
   124f0:	mov	r1, #0
   124f4:	str	lr, [ip]
   124f8:	str	r8, [fp, #-112]	; 0xffffff90
   124fc:	str	sl, [fp, #-156]	; 0xffffff64
   12500:	bl	11204 <memset@plt>
   12504:	ldr	lr, [fp, #-248]	; 0xffffff08
   12508:	sub	r4, fp, #160	; 0xa0
   1250c:	tst	r6, #8
   12510:	str	lr, [fp, #-204]	; 0xffffff34
   12514:	str	sl, [fp, #-208]	; 0xffffff30
   12518:	str	r5, [fp, #-200]	; 0xffffff38
   1251c:	str	r4, [fp, #-212]	; 0xffffff2c
   12520:	bne	128c4 <argp_parse@@Base+0x50c>
   12524:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12528:	cmp	r3, #0
   1252c:	addne	r3, sl, #1
   12530:	movne	r2, #43	; 0x2b
   12534:	strbne	r2, [sl]
   12538:	movne	sl, r3
   1253c:	strne	r3, [fp, #-208]	; 0xffffff30
   12540:	mov	r2, #0
   12544:	strb	r2, [sl]
   12548:	ldr	r3, [fp, #-204]	; 0xffffff34
   1254c:	cmp	r7, r2
   12550:	str	r2, [r3]
   12554:	str	r7, [fp, #-160]	; 0xffffff60
   12558:	beq	12a6c <argp_parse@@Base+0x6b4>
   1255c:	sub	r1, fp, #212	; 0xd4
   12560:	mov	r0, r7
   12564:	str	r1, [sp]
   12568:	ldr	r3, [fp, #-112]	; 0xffffff90
   1256c:	mov	r1, r2
   12570:	bl	11f20 <__assert_fail@plt+0xc2c>
   12574:	ldr	r7, [fp, #-160]	; 0xffffff60
   12578:	ldr	r5, [fp, #-112]	; 0xffffff90
   1257c:	mov	r8, r0
   12580:	str	r0, [fp, #-108]	; 0xffffff94
   12584:	mov	r2, #56	; 0x38
   12588:	mov	r1, #0
   1258c:	sub	r0, fp, #96	; 0x60
   12590:	bl	11204 <memset@plt>
   12594:	ldr	r2, [pc, #2828]	; 130a8 <argp_parse@@Base+0xcf0>
   12598:	ldr	r3, [pc, #2828]	; 130ac <argp_parse@@Base+0xcf4>
   1259c:	ldr	r0, [fp, #-240]	; 0xffffff10
   125a0:	ldr	r1, [r2]
   125a4:	str	r0, [fp, #-92]	; 0xffffffa4
   125a8:	ldr	r2, [r3]
   125ac:	ldr	r0, [fp, #-232]	; 0xffffff18
   125b0:	mov	r3, #1
   125b4:	cmp	r5, r8
   125b8:	str	r7, [fp, #-96]	; 0xffffffa0
   125bc:	str	r0, [fp, #-88]	; 0xffffffa8
   125c0:	str	r6, [fp, #-80]	; 0xffffffb0
   125c4:	str	r4, [fp, #-44]	; 0xffffffd4
   125c8:	str	r1, [fp, #-52]	; 0xffffffcc
   125cc:	str	r2, [fp, #-48]	; 0xffffffd0
   125d0:	str	r3, [fp, #-100]	; 0xffffff9c
   125d4:	bcc	128d8 <argp_parse@@Base+0x520>
   125d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   125dc:	tst	r3, #2
   125e0:	bne	12a7c <argp_parse@@Base+0x6c4>
   125e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   125e8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   125ec:	mov	r2, #1
   125f0:	str	r2, [fp, #-144]	; 0xffffff70
   125f4:	ldr	r2, [fp, #-232]	; 0xffffff18
   125f8:	cmp	r2, r3
   125fc:	beq	12f7c <argp_parse@@Base+0xbc4>
   12600:	ldr	r3, [pc, #2716]	; 130a4 <argp_parse@@Base+0xcec>
   12604:	ldr	r3, [r3]
   12608:	str	r3, [fp, #-56]	; 0xffffffc8
   1260c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12610:	ldr	r5, [fp, #-84]	; 0xffffffac
   12614:	ldr	sl, [pc, #2708]	; 130b0 <argp_parse@@Base+0xcf8>
   12618:	mov	r0, r4
   1261c:	mov	r6, #0
   12620:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12624:	cmp	r3, #0
   12628:	beq	12ab8 <argp_parse@@Base+0x700>
   1262c:	cmp	r3, r5
   12630:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12634:	bgt	12ab8 <argp_parse@@Base+0x700>
   12638:	cmp	r5, r0
   1263c:	blt	12e54 <argp_parse@@Base+0xa9c>
   12640:	cmp	r5, r0
   12644:	bne	12e60 <argp_parse@@Base+0xaa8>
   12648:	ldr	r3, [fp, #-112]	; 0xffffff90
   1264c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12650:	cmp	r3, ip
   12654:	bcs	13044 <argp_parse@@Base+0xc8c>
   12658:	mov	r5, #0
   1265c:	add	r4, r3, #36	; 0x24
   12660:	mov	r7, r5
   12664:	ldr	r6, [pc, #2632]	; 130b4 <argp_parse@@Base+0xcfc>
   12668:	mov	r0, r5
   1266c:	b	126b4 <argp_parse@@Base+0x2fc>
   12670:	ldr	ip, [r4, #-4]
   12674:	str	ip, [fp, #-60]	; 0xffffffc4
   12678:	ldr	ip, [r4, #-12]
   1267c:	str	ip, [fp, #-68]	; 0xffffffbc
   12680:	ldr	ip, [r4, #-8]
   12684:	str	r3, [fp, #-76]	; 0xffffffb4
   12688:	str	ip, [fp, #-64]	; 0xffffffc0
   1268c:	blx	r5
   12690:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12694:	str	r3, [r4, #-4]
   12698:	ldr	ip, [fp, #-108]	; 0xffffff94
   1269c:	cmp	ip, r4
   126a0:	bls	12fec <argp_parse@@Base+0xc34>
   126a4:	cmp	r0, #7
   126a8:	cmpne	r0, #0
   126ac:	bne	12fc8 <argp_parse@@Base+0xc10>
   126b0:	add	r4, r4, #36	; 0x24
   126b4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   126b8:	cmp	r3, #0
   126bc:	bne	1269c <argp_parse@@Base+0x2e4>
   126c0:	ldr	r5, [r4, #-36]	; 0xffffffdc
   126c4:	sub	r2, fp, #96	; 0x60
   126c8:	cmp	r5, #0
   126cc:	mov	r1, r7
   126d0:	mov	r0, r6
   126d4:	bne	12670 <argp_parse@@Base+0x2b8>
   126d8:	cmp	ip, r4
   126dc:	mov	r0, #7
   126e0:	bhi	126b0 <argp_parse@@Base+0x2f8>
   126e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   126e8:	sub	r4, ip, #36	; 0x24
   126ec:	cmp	r4, r3
   126f0:	movcs	r5, #7
   126f4:	bcc	1277c <argp_parse@@Base+0x3c4>
   126f8:	cmp	r5, #7
   126fc:	cmpne	r5, #0
   12700:	bne	12fdc <argp_parse@@Base+0xc24>
   12704:	sub	r4, r4, #36	; 0x24
   12708:	mov	r7, #0
   1270c:	ldr	r6, [pc, #2468]	; 130b8 <argp_parse@@Base+0xd00>
   12710:	b	1275c <argp_parse@@Base+0x3a4>
   12714:	ldr	r3, [r4, #68]	; 0x44
   12718:	ldr	ip, [r4, #48]	; 0x30
   1271c:	str	r3, [fp, #-60]	; 0xffffffc4
   12720:	ldr	r3, [r4, #60]	; 0x3c
   12724:	str	r3, [fp, #-68]	; 0xffffffbc
   12728:	ldr	r3, [r4, #64]	; 0x40
   1272c:	str	ip, [fp, #-76]	; 0xffffffb4
   12730:	str	r3, [fp, #-64]	; 0xffffffc0
   12734:	blx	r5
   12738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1273c:	str	r3, [r4, #68]	; 0x44
   12740:	ldr	r3, [fp, #-112]	; 0xffffff90
   12744:	cmp	r4, r3
   12748:	bcc	1303c <argp_parse@@Base+0xc84>
   1274c:	cmp	r0, #7
   12750:	cmpne	r0, #0
   12754:	bne	12fac <argp_parse@@Base+0xbf4>
   12758:	sub	r4, r4, #36	; 0x24
   1275c:	ldr	r5, [r4, #36]	; 0x24
   12760:	sub	r2, fp, #96	; 0x60
   12764:	cmp	r5, #0
   12768:	mov	r1, r7
   1276c:	mov	r0, r6
   12770:	bne	12714 <argp_parse@@Base+0x35c>
   12774:	cmp	r4, r3
   12778:	bcs	12758 <argp_parse@@Base+0x3a0>
   1277c:	ldr	r2, [fp, #4]
   12780:	cmp	r2, #0
   12784:	beq	127a0 <argp_parse@@Base+0x3e8>
   12788:	mov	r5, #0
   1278c:	ldr	r1, [fp, #4]
   12790:	ldr	r2, [fp, #-84]	; 0xffffffac
   12794:	str	r2, [r1]
   12798:	cmp	r5, #0
   1279c:	bne	12fbc <argp_parse@@Base+0xc04>
   127a0:	ldr	ip, [fp, #-108]	; 0xffffff94
   127a4:	b	12e78 <argp_parse@@Base+0xac0>
   127a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   127ac:	mov	r5, r0
   127b0:	ldr	ip, [fp, #-108]	; 0xffffff94
   127b4:	cmp	ip, r3
   127b8:	bls	12f74 <argp_parse@@Base+0xbbc>
   127bc:	ldr	r7, [pc, #2296]	; 130bc <argp_parse@@Base+0xd04>
   127c0:	add	r4, r3, #36	; 0x24
   127c4:	mov	r8, #0
   127c8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   127cc:	sub	r2, fp, #96	; 0x60
   127d0:	cmp	r3, #0
   127d4:	mov	r1, r8
   127d8:	mov	r0, r7
   127dc:	mov	r6, r4
   127e0:	beq	12814 <argp_parse@@Base+0x45c>
   127e4:	ldr	ip, [r4, #-4]
   127e8:	ldr	lr, [r4, #-24]	; 0xffffffe8
   127ec:	str	ip, [fp, #-60]	; 0xffffffc4
   127f0:	ldr	ip, [r4, #-12]
   127f4:	str	ip, [fp, #-68]	; 0xffffffbc
   127f8:	ldr	ip, [r4, #-8]
   127fc:	str	lr, [fp, #-76]	; 0xffffffb4
   12800:	str	ip, [fp, #-64]	; 0xffffffc0
   12804:	blx	r3
   12808:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1280c:	str	r3, [r4, #-4]
   12810:	ldr	ip, [fp, #-108]	; 0xffffff94
   12814:	cmp	ip, r6
   12818:	add	r4, r4, #36	; 0x24
   1281c:	bhi	127c8 <argp_parse@@Base+0x410>
   12820:	ldr	r3, [fp, #-112]	; 0xffffff90
   12824:	sub	ip, ip, #36	; 0x24
   12828:	cmp	r3, ip
   1282c:	bhi	12894 <argp_parse@@Base+0x4dc>
   12830:	ldr	r8, [pc, #2184]	; 130c0 <argp_parse@@Base+0xd08>
   12834:	sub	r4, ip, #36	; 0x24
   12838:	mov	r9, #0
   1283c:	ldr	r6, [r4, #36]	; 0x24
   12840:	sub	r2, fp, #96	; 0x60
   12844:	cmp	r6, #0
   12848:	mov	r1, r9
   1284c:	mov	r0, r8
   12850:	mov	r7, r4
   12854:	beq	12888 <argp_parse@@Base+0x4d0>
   12858:	ldr	r3, [r4, #68]	; 0x44
   1285c:	ldr	ip, [r4, #48]	; 0x30
   12860:	str	r3, [fp, #-60]	; 0xffffffc4
   12864:	ldr	r3, [r4, #60]	; 0x3c
   12868:	str	r3, [fp, #-68]	; 0xffffffbc
   1286c:	ldr	r3, [r4, #64]	; 0x40
   12870:	str	ip, [fp, #-76]	; 0xffffffb4
   12874:	str	r3, [fp, #-64]	; 0xffffffc0
   12878:	blx	r6
   1287c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12880:	str	r3, [r4, #68]	; 0x44
   12884:	ldr	r3, [fp, #-112]	; 0xffffff90
   12888:	cmp	r3, r7
   1288c:	sub	r4, r4, #36	; 0x24
   12890:	bls	1283c <argp_parse@@Base+0x484>
   12894:	cmp	r5, #7
   12898:	moveq	r5, #22
   1289c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128a0:	bl	13250 <argp_parse@@Base+0xe98>
   128a4:	mov	r0, r5
   128a8:	sub	sp, fp, #32
   128ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128b0:	mov	sl, #36	; 0x24
   128b4:	mov	r5, sl
   128b8:	mov	r9, #52	; 0x34
   128bc:	str	r7, [fp, #-236]	; 0xffffff14
   128c0:	b	12488 <argp_parse@@Base+0xd0>
   128c4:	add	sl, sl, #1
   128c8:	mov	r3, #45	; 0x2d
   128cc:	str	sl, [fp, #-208]	; 0xffffff30
   128d0:	strb	r3, [r8, r9]
   128d4:	b	12540 <argp_parse@@Base+0x188>
   128d8:	ldr	r3, [fp, #8]
   128dc:	add	r4, r5, #36	; 0x24
   128e0:	str	r3, [r5, #24]
   128e4:	mov	r7, #0
   128e8:	ldr	r6, [pc, #2004]	; 130c4 <argp_parse@@Base+0xd0c>
   128ec:	b	12944 <argp_parse@@Base+0x58c>
   128f0:	ldr	r2, [r4, #-4]
   128f4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   128f8:	str	r2, [fp, #-60]	; 0xffffffc4
   128fc:	ldr	r1, [r4, #-12]
   12900:	sub	r2, fp, #96	; 0x60
   12904:	str	r1, [fp, #-68]	; 0xffffffbc
   12908:	ldr	ip, [r4, #-8]
   1290c:	mov	r1, r7
   12910:	str	r0, [fp, #-76]	; 0xffffffb4
   12914:	str	ip, [fp, #-64]	; 0xffffffc0
   12918:	mov	r0, r6
   1291c:	blx	r3
   12920:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12924:	str	r3, [r4, #-4]
   12928:	ldr	r3, [fp, #-108]	; 0xffffff94
   1292c:	cmp	r3, r4
   12930:	bls	13060 <argp_parse@@Base+0xca8>
   12934:	cmp	r0, #7
   12938:	cmpne	r0, #0
   1293c:	bne	12a5c <argp_parse@@Base+0x6a4>
   12940:	add	r4, r4, #36	; 0x24
   12944:	ldr	r3, [r4, #-20]	; 0xffffffec
   12948:	cmp	r3, #0
   1294c:	ldrne	r3, [r3, #28]
   12950:	ldrne	r2, [r4, #-16]
   12954:	ldrne	r3, [r3, r2, lsl #2]
   12958:	strne	r3, [r4, #-12]
   1295c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12960:	cmp	r3, #0
   12964:	bne	128f0 <argp_parse@@Base+0x538>
   12968:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1296c:	ldr	r3, [r3, #16]
   12970:	cmp	r3, #0
   12974:	beq	1299c <argp_parse@@Base+0x5e4>
   12978:	ldr	r3, [r3]
   1297c:	cmp	r3, #0
   12980:	beq	1299c <argp_parse@@Base+0x5e4>
   12984:	ldr	r3, [r4, #-8]
   12988:	ldr	r2, [r4, #-12]
   1298c:	str	r2, [r3]
   12990:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12994:	cmp	r3, #0
   12998:	bne	128f0 <argp_parse@@Base+0x538>
   1299c:	ldr	r3, [fp, #-108]	; 0xffffff94
   129a0:	cmp	r3, r4
   129a4:	bhi	12940 <argp_parse@@Base+0x588>
   129a8:	b	125d8 <argp_parse@@Base+0x220>
   129ac:	sub	sp, sp, #72	; 0x48
   129b0:	add	r4, sp, #8
   129b4:	sub	sp, sp, #40	; 0x28
   129b8:	add	r5, sp, #8
   129bc:	mov	r1, r3
   129c0:	mov	r0, r4
   129c4:	mov	r2, #64	; 0x40
   129c8:	str	r3, [r5]
   129cc:	str	r3, [r5, #4]
   129d0:	str	r3, [r5, #8]
   129d4:	str	r3, [r5, #12]
   129d8:	str	r3, [r5, #20]
   129dc:	str	r3, [r5, #24]
   129e0:	str	r4, [r5, #16]
   129e4:	bl	11204 <memset@plt>
   129e8:	ldr	r3, [pc, #1752]	; 130c8 <argp_parse@@Base+0xd10>
   129ec:	cmp	r7, #0
   129f0:	strne	r7, [r4]
   129f4:	ldr	r3, [r3]
   129f8:	addne	r4, r4, #16
   129fc:	ldr	r2, [pc, #1736]	; 130cc <argp_parse@@Base+0xd14>
   12a00:	cmp	r3, #0
   12a04:	str	r2, [r4]
   12a08:	beq	12f94 <argp_parse@@Base+0xbdc>
   12a0c:	ldr	r2, [pc, #1724]	; 130d0 <argp_parse@@Base+0xd18>
   12a10:	add	r3, r4, #32
   12a14:	str	r2, [r4, #16]
   12a18:	mov	r8, #0
   12a1c:	sub	r4, fp, #196	; 0xc4
   12a20:	str	r8, [r3]
   12a24:	mov	r1, r8
   12a28:	mov	r0, r4
   12a2c:	mov	r2, #36	; 0x24
   12a30:	bl	11204 <memset@plt>
   12a34:	ands	r3, r6, #4
   12a38:	str	r3, [fp, #-244]	; 0xffffff0c
   12a3c:	moveq	r3, #1
   12a40:	movne	r3, r8
   12a44:	mov	r7, r5
   12a48:	str	r8, [fp, #-224]	; 0xffffff20
   12a4c:	str	r8, [fp, #-220]	; 0xffffff24
   12a50:	str	r8, [fp, #-216]	; 0xffffff28
   12a54:	str	r3, [fp, #-228]	; 0xffffff1c
   12a58:	b	1244c <argp_parse@@Base+0x94>
   12a5c:	mov	r5, r0
   12a60:	mov	r0, r5
   12a64:	sub	sp, fp, #32
   12a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a6c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12a70:	mov	r8, r5
   12a74:	str	r5, [fp, #-108]	; 0xffffff94
   12a78:	b	12584 <argp_parse@@Base+0x1cc>
   12a7c:	tst	r3, #1
   12a80:	mov	r3, #0
   12a84:	str	r3, [fp, #-144]	; 0xffffff70
   12a88:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12a8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a90:	subne	r3, r3, #4
   12a94:	addne	r4, r4, #1
   12a98:	strne	r3, [fp, #-88]	; 0xffffffa8
   12a9c:	strne	r4, [fp, #-92]	; 0xffffffa4
   12aa0:	b	125f4 <argp_parse@@Base+0x23c>
   12aa4:	ldr	r3, [fp, #-232]	; 0xffffff18
   12aa8:	ldr	r0, [r3]
   12aac:	bl	131a4 <argp_parse@@Base+0xdec>
   12ab0:	str	r0, [r4]
   12ab4:	b	12404 <argp_parse@@Base+0x4c>
   12ab8:	cmp	r2, #0
   12abc:	beq	12638 <argp_parse@@Base+0x280>
   12ac0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12ac4:	str	r5, [fp, #-148]	; 0xffffff6c
   12ac8:	ands	ip, r3, #64	; 0x40
   12acc:	mvn	r3, #0
   12ad0:	str	r3, [fp, #-140]	; 0xffffff74
   12ad4:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ad8:	ldr	r3, [fp, #-152]	; 0xffffff68
   12adc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ae0:	beq	12e00 <argp_parse@@Base+0xa48>
   12ae4:	sub	ip, fp, #148	; 0x94
   12ae8:	stm	sp, {r6, ip}
   12aec:	bl	13324 <argp_parse@@Base+0xf6c>
   12af0:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12af4:	str	r5, [fp, #-84]	; 0xffffffac
   12af8:	mov	r7, r0
   12afc:	cmn	r7, #1
   12b00:	beq	12e20 <argp_parse@@Base+0xa68>
   12b04:	cmp	r7, #63	; 0x3f
   12b08:	beq	12f24 <argp_parse@@Base+0xb6c>
   12b0c:	cmp	r7, #1
   12b10:	beq	12c68 <argp_parse@@Base+0x8b0>
   12b14:	asrs	r8, r7, #24
   12b18:	bne	12bc4 <argp_parse@@Base+0x80c>
   12b1c:	mov	r1, r7
   12b20:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b24:	bl	111c8 <strchr@plt>
   12b28:	cmp	r0, #0
   12b2c:	beq	12c34 <argp_parse@@Base+0x87c>
   12b30:	ldr	r4, [fp, #-112]	; 0xffffff90
   12b34:	ldr	r2, [fp, #-108]	; 0xffffff94
   12b38:	cmp	r4, r2
   12b3c:	bcc	12b50 <argp_parse@@Base+0x798>
   12b40:	b	12c34 <argp_parse@@Base+0x87c>
   12b44:	add	r4, r4, #36	; 0x24
   12b48:	cmp	r4, r2
   12b4c:	bcs	12c34 <argp_parse@@Base+0x87c>
   12b50:	ldr	r3, [r4, #8]
   12b54:	cmp	r0, r3
   12b58:	bcs	12b44 <argp_parse@@Base+0x78c>
   12b5c:	ldr	r3, [r4]
   12b60:	cmp	r3, #0
   12b64:	beq	12c34 <argp_parse@@Base+0x87c>
   12b68:	ldr	r2, [r4, #32]
   12b6c:	ldr	r0, [r4, #28]
   12b70:	ldr	ip, [r4, #24]
   12b74:	str	r2, [fp, #-60]	; 0xffffffc4
   12b78:	ldr	r2, [r4, #12]
   12b7c:	ldr	r1, [fp, #-136]	; 0xffffff78
   12b80:	str	r0, [fp, #-64]	; 0xffffffc0
   12b84:	str	r2, [fp, #-76]	; 0xffffffb4
   12b88:	str	ip, [fp, #-68]	; 0xffffffbc
   12b8c:	sub	r2, fp, #96	; 0x60
   12b90:	mov	r0, r7
   12b94:	blx	r3
   12b98:	mov	r8, r6
   12b9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ba0:	str	r3, [r4, #32]
   12ba4:	cmp	r0, #7
   12ba8:	beq	12c2c <argp_parse@@Base+0x874>
   12bac:	cmp	r0, #0
   12bb0:	bne	127a8 <argp_parse@@Base+0x3f0>
   12bb4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12bb8:	ldr	r5, [fp, #-84]	; 0xffffffac
   12bbc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12bc0:	b	12620 <argp_parse@@Base+0x268>
   12bc4:	add	r3, r8, r8, lsl #3
   12bc8:	ldr	r2, [fp, #-112]	; 0xffffff90
   12bcc:	lsl	r3, r3, #2
   12bd0:	sub	r3, r3, #36	; 0x24
   12bd4:	add	r4, r2, r3
   12bd8:	ldr	r5, [r2, r3]
   12bdc:	ands	r3, r7, #8388608	; 0x800000
   12be0:	movne	r3, #-16777216	; 0xff000000
   12be4:	cmp	r5, #0
   12be8:	beq	12db8 <argp_parse@@Base+0xa00>
   12bec:	ldr	r0, [r4, #32]
   12bf0:	ldr	r2, [r4, #24]
   12bf4:	str	r0, [fp, #-60]	; 0xffffffc4
   12bf8:	ldr	r0, [r4, #28]
   12bfc:	str	r2, [fp, #-68]	; 0xffffffbc
   12c00:	ldr	r2, [r4, #12]
   12c04:	str	r0, [fp, #-64]	; 0xffffffc0
   12c08:	bic	r0, r7, #-16777216	; 0xff000000
   12c0c:	str	r2, [fp, #-76]	; 0xffffffb4
   12c10:	orr	r0, r0, r3
   12c14:	ldr	r1, [fp, #-136]	; 0xffffff78
   12c18:	sub	r2, fp, #96	; 0x60
   12c1c:	blx	r5
   12c20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12c24:	str	r3, [r4, #32]
   12c28:	b	12ba4 <argp_parse@@Base+0x7ec>
   12c2c:	cmp	r8, #0
   12c30:	bne	12db8 <argp_parse@@Base+0xa00>
   12c34:	mov	r2, r7
   12c38:	ldr	r3, [pc, #1172]	; 130d4 <argp_parse@@Base+0xd1c>
   12c3c:	ldr	r1, [pc, #1172]	; 130d8 <argp_parse@@Base+0xd20>
   12c40:	sub	r0, fp, #96	; 0x60
   12c44:	bl	170a8 <argp_error@@Base>
   12c48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c4c:	mov	r2, #260	; 0x104
   12c50:	sub	r0, fp, #96	; 0x60
   12c54:	bl	16ff8 <argp_state_help@@Base>
   12c58:	mov	r5, #7
   12c5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c60:	ldr	ip, [fp, #-108]	; 0xffffff94
   12c64:	b	127b4 <argp_parse@@Base+0x3fc>
   12c68:	ldr	r7, [fp, #-136]	; 0xffffff78
   12c6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c70:	ldr	ip, [fp, #-108]	; 0xffffff94
   12c74:	sub	r8, r5, #1
   12c78:	cmp	r3, ip
   12c7c:	str	r8, [fp, #-84]	; 0xffffffac
   12c80:	bcs	12dac <argp_parse@@Base+0x9f4>
   12c84:	mov	lr, r8
   12c88:	add	r4, r3, #36	; 0x24
   12c8c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12c90:	add	r5, lr, #1
   12c94:	cmp	r3, #0
   12c98:	str	r5, [fp, #-84]	; 0xffffffac
   12c9c:	sub	r2, fp, #96	; 0x60
   12ca0:	mov	r1, r7
   12ca4:	mov	r0, r6
   12ca8:	sub	r5, r4, #36	; 0x24
   12cac:	mov	r9, r4
   12cb0:	streq	lr, [fp, #-84]	; 0xffffffac
   12cb4:	beq	12da0 <argp_parse@@Base+0x9e8>
   12cb8:	ldr	ip, [r4, #-4]
   12cbc:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12cc0:	str	ip, [fp, #-60]	; 0xffffffc4
   12cc4:	ldr	ip, [r4, #-12]
   12cc8:	str	ip, [fp, #-68]	; 0xffffffbc
   12ccc:	ldr	ip, [r4, #-8]
   12cd0:	str	lr, [fp, #-76]	; 0xffffffb4
   12cd4:	str	ip, [fp, #-64]	; 0xffffffc0
   12cd8:	blx	r3
   12cdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ce0:	str	r3, [r4, #-4]
   12ce4:	cmp	r0, #7
   12ce8:	beq	12d24 <argp_parse@@Base+0x96c>
   12cec:	cmp	r0, #0
   12cf0:	bne	127a8 <argp_parse@@Base+0x3f0>
   12cf4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12cf8:	ldr	r5, [fp, #-84]	; 0xffffffac
   12cfc:	cmp	r8, r5
   12d00:	sublt	r8, r5, r8
   12d04:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   12d08:	movge	r3, #1
   12d0c:	addlt	r8, r3, r8
   12d10:	strlt	r8, [r4, #-24]	; 0xffffffe8
   12d14:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   12d18:	strge	r3, [fp, #-100]	; 0xffffff9c
   12d1c:	movge	r2, r3
   12d20:	b	12620 <argp_parse@@Base+0x268>
   12d24:	ldr	lr, [fp, #-84]	; 0xffffffac
   12d28:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12d2c:	sub	lr, lr, #1
   12d30:	cmp	r3, #0
   12d34:	str	lr, [fp, #-84]	; 0xffffffac
   12d38:	beq	12d9c <argp_parse@@Base+0x9e4>
   12d3c:	add	r0, r5, #24
   12d40:	ldr	r2, [r5, #12]
   12d44:	ldm	r0, {r0, r1, ip}
   12d48:	str	r2, [fp, #-76]	; 0xffffffb4
   12d4c:	sub	r2, fp, #96	; 0x60
   12d50:	str	ip, [fp, #-60]	; 0xffffffc4
   12d54:	str	r0, [fp, #-68]	; 0xffffffbc
   12d58:	str	r1, [fp, #-64]	; 0xffffffc0
   12d5c:	mov	r0, sl
   12d60:	mov	r1, r6
   12d64:	blx	r3
   12d68:	ldr	ip, [fp, #-108]	; 0xffffff94
   12d6c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12d70:	cmp	r4, ip
   12d74:	movcs	r1, #0
   12d78:	movcc	r1, #1
   12d7c:	mov	r3, r4
   12d80:	str	r2, [r5, #32]
   12d84:	cmp	r0, #7
   12d88:	movne	r1, #0
   12d8c:	cmp	r1, #0
   12d90:	beq	13078 <argp_parse@@Base+0xcc0>
   12d94:	ldr	lr, [fp, #-84]	; 0xffffffac
   12d98:	b	12c88 <argp_parse@@Base+0x8d0>
   12d9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12da0:	cmp	r9, ip
   12da4:	add	r4, r4, #36	; 0x24
   12da8:	bcc	12c8c <argp_parse@@Base+0x8d4>
   12dac:	ldr	r5, [fp, #-84]	; 0xffffffac
   12db0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12db4:	b	12640 <argp_parse@@Base+0x288>
   12db8:	ldr	r3, [fp, #-152]	; 0xffffff68
   12dbc:	ldr	r2, [r3, #12]
   12dc0:	cmp	r2, r7
   12dc4:	bne	12ddc <argp_parse@@Base+0xa24>
   12dc8:	b	12f10 <argp_parse@@Base+0xb58>
   12dcc:	add	r3, r3, #16
   12dd0:	ldr	r2, [r3, #12]
   12dd4:	cmp	r2, r7
   12dd8:	beq	12f10 <argp_parse@@Base+0xb58>
   12ddc:	ldr	r2, [r3]
   12de0:	cmp	r2, #0
   12de4:	bne	12dcc <argp_parse@@Base+0xa14>
   12de8:	ldr	r2, [pc, #748]	; 130dc <argp_parse@@Base+0xd24>
   12dec:	ldr	r3, [pc, #736]	; 130d4 <argp_parse@@Base+0xd1c>
   12df0:	ldr	r1, [pc, #744]	; 130e0 <argp_parse@@Base+0xd28>
   12df4:	sub	r0, fp, #96	; 0x60
   12df8:	bl	170a8 <argp_error@@Base>
   12dfc:	b	12c48 <argp_parse@@Base+0x890>
   12e00:	sub	lr, fp, #148	; 0x94
   12e04:	stm	sp, {ip, lr}
   12e08:	bl	132d0 <argp_parse@@Base+0xf18>
   12e0c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12e10:	str	r5, [fp, #-84]	; 0xffffffac
   12e14:	mov	r7, r0
   12e18:	cmn	r7, #1
   12e1c:	bne	12b04 <argp_parse@@Base+0x74c>
   12e20:	cmp	r5, #1
   12e24:	str	r6, [fp, #-100]	; 0xffffff9c
   12e28:	ble	12e48 <argp_parse@@Base+0xa90>
   12e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e30:	sub	r3, r5, #-1073741823	; 0xc0000001
   12e34:	ldr	r1, [pc, #680]	; 130e4 <argp_parse@@Base+0xd2c>
   12e38:	ldr	r0, [r2, r3, lsl #2]
   12e3c:	bl	11030 <strcmp@plt>
   12e40:	cmp	r0, #0
   12e44:	streq	r5, [fp, #-72]	; 0xffffffb8
   12e48:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12e4c:	cmp	r5, r0
   12e50:	bge	12640 <argp_parse@@Base+0x288>
   12e54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e58:	tst	r3, #4
   12e5c:	beq	12f34 <argp_parse@@Base+0xb7c>
   12e60:	ldr	r3, [fp, #4]
   12e64:	cmp	r3, #0
   12e68:	beq	1300c <argp_parse@@Base+0xc54>
   12e6c:	str	r5, [r3]
   12e70:	ldr	ip, [fp, #-108]	; 0xffffff94
   12e74:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e78:	sub	r2, ip, #36	; 0x24
   12e7c:	cmp	r3, r2
   12e80:	bhi	12f68 <argp_parse@@Base+0xbb0>
   12e84:	ldr	r6, [pc, #604]	; 130e8 <argp_parse@@Base+0xd30>
   12e88:	sub	r4, ip, #72	; 0x48
   12e8c:	mov	r7, #0
   12e90:	ldr	r5, [r4, #36]	; 0x24
   12e94:	sub	r2, fp, #96	; 0x60
   12e98:	cmp	r5, #0
   12e9c:	mov	r1, r7
   12ea0:	mov	r0, r6
   12ea4:	beq	12f00 <argp_parse@@Base+0xb48>
   12ea8:	ldr	r3, [r4, #68]	; 0x44
   12eac:	ldr	ip, [r4, #48]	; 0x30
   12eb0:	str	r3, [fp, #-60]	; 0xffffffc4
   12eb4:	ldr	r3, [r4, #60]	; 0x3c
   12eb8:	str	r3, [fp, #-68]	; 0xffffffbc
   12ebc:	ldr	r3, [r4, #64]	; 0x40
   12ec0:	str	ip, [fp, #-76]	; 0xffffffb4
   12ec4:	str	r3, [fp, #-64]	; 0xffffffc0
   12ec8:	blx	r5
   12ecc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ed0:	str	r3, [r4, #68]	; 0x44
   12ed4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ed8:	cmp	r4, r3
   12edc:	bcc	12f48 <argp_parse@@Base+0xb90>
   12ee0:	cmp	r0, #7
   12ee4:	cmpne	r0, #0
   12ee8:	sub	r4, r4, #36	; 0x24
   12eec:	beq	12e90 <argp_parse@@Base+0xad8>
   12ef0:	ldr	ip, [fp, #-108]	; 0xffffff94
   12ef4:	mov	r5, r0
   12ef8:	sub	ip, ip, #36	; 0x24
   12efc:	b	12828 <argp_parse@@Base+0x470>
   12f00:	cmp	r4, r3
   12f04:	bcc	12f54 <argp_parse@@Base+0xb9c>
   12f08:	sub	r4, r4, #36	; 0x24
   12f0c:	b	12e90 <argp_parse@@Base+0xad8>
   12f10:	ldr	r2, [r3]
   12f14:	ldr	r3, [pc, #448]	; 130dc <argp_parse@@Base+0xd24>
   12f18:	cmp	r2, #0
   12f1c:	moveq	r2, r3
   12f20:	b	12dec <argp_parse@@Base+0xa34>
   12f24:	ldr	r3, [fp, #-140]	; 0xffffff74
   12f28:	cmn	r3, #1
   12f2c:	bne	12c48 <argp_parse@@Base+0x890>
   12f30:	b	12b1c <argp_parse@@Base+0x764>
   12f34:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12f38:	ldr	r7, [r3, r5, lsl #2]
   12f3c:	add	r5, r5, #1
   12f40:	str	r7, [fp, #-136]	; 0xffffff78
   12f44:	b	12c6c <argp_parse@@Base+0x8b4>
   12f48:	cmp	r0, #7
   12f4c:	mov	r5, r0
   12f50:	bne	12f70 <argp_parse@@Base+0xbb8>
   12f54:	ldr	ip, [fp, #-108]	; 0xffffff94
   12f58:	sub	ip, ip, #36	; 0x24
   12f5c:	cmp	ip, r3
   12f60:	movcs	r5, #0
   12f64:	bcs	12830 <argp_parse@@Base+0x478>
   12f68:	mov	r5, #0
   12f6c:	b	1289c <argp_parse@@Base+0x4e4>
   12f70:	ldr	ip, [fp, #-108]	; 0xffffff94
   12f74:	sub	ip, ip, #36	; 0x24
   12f78:	b	12828 <argp_parse@@Base+0x470>
   12f7c:	ldr	r0, [r2]
   12f80:	cmp	r0, #0
   12f84:	beq	12600 <argp_parse@@Base+0x248>
   12f88:	bl	131a4 <argp_parse@@Base+0xdec>
   12f8c:	str	r0, [fp, #-56]	; 0xffffffc8
   12f90:	b	1260c <argp_parse@@Base+0x254>
   12f94:	ldr	r3, [pc, #336]	; 130ec <argp_parse@@Base+0xd34>
   12f98:	ldr	r3, [r3]
   12f9c:	cmp	r3, #0
   12fa0:	addeq	r3, r4, #16
   12fa4:	bne	12a0c <argp_parse@@Base+0x654>
   12fa8:	b	12a18 <argp_parse@@Base+0x660>
   12fac:	mov	r5, r0
   12fb0:	ldr	r2, [fp, #4]
   12fb4:	cmp	r2, #0
   12fb8:	bne	1278c <argp_parse@@Base+0x3d4>
   12fbc:	cmp	r5, #7
   12fc0:	bne	127b0 <argp_parse@@Base+0x3f8>
   12fc4:	b	12c48 <argp_parse@@Base+0x890>
   12fc8:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fcc:	sub	ip, ip, #36	; 0x24
   12fd0:	cmp	r3, ip
   12fd4:	mov	r5, r0
   12fd8:	bls	12fb0 <argp_parse@@Base+0xbf8>
   12fdc:	ldr	r2, [fp, #4]
   12fe0:	cmp	r2, #0
   12fe4:	bne	1278c <argp_parse@@Base+0x3d4>
   12fe8:	b	12798 <argp_parse@@Base+0x3e0>
   12fec:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ff0:	sub	r4, ip, #36	; 0x24
   12ff4:	cmp	r4, r3
   12ff8:	mov	r5, r0
   12ffc:	bcs	126f8 <argp_parse@@Base+0x340>
   13000:	cmp	r5, #7
   13004:	beq	1277c <argp_parse@@Base+0x3c4>
   13008:	b	12fdc <argp_parse@@Base+0xc24>
   1300c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13010:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13014:	tst	r3, #2
   13018:	bne	12c4c <argp_parse@@Base+0x894>
   1301c:	cmp	r1, #0
   13020:	beq	12c4c <argp_parse@@Base+0x894>
   13024:	mov	r0, r1
   13028:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1302c:	ldr	r1, [pc, #188]	; 130f0 <argp_parse@@Base+0xd38>
   13030:	bl	111d4 <fprintf@plt>
   13034:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13038:	b	12c4c <argp_parse@@Base+0x894>
   1303c:	mov	r5, r0
   13040:	b	13000 <argp_parse@@Base+0xc48>
   13044:	sub	r4, ip, #36	; 0x24
   13048:	cmp	r3, r4
   1304c:	bls	12704 <argp_parse@@Base+0x34c>
   13050:	ldr	r2, [fp, #4]
   13054:	cmp	r2, #0
   13058:	bne	12788 <argp_parse@@Base+0x3d0>
   1305c:	b	12e78 <argp_parse@@Base+0xac0>
   13060:	cmp	r0, #7
   13064:	mov	r5, r0
   13068:	beq	125d8 <argp_parse@@Base+0x220>
   1306c:	cmp	r0, #0
   13070:	beq	125d8 <argp_parse@@Base+0x220>
   13074:	b	128a4 <argp_parse@@Base+0x4ec>
   13078:	cmp	r0, #0
   1307c:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   13080:	moveq	r5, r0
   13084:	streq	r0, [fp, #-84]	; 0xffffffac
   13088:	beq	12cfc <argp_parse@@Base+0x944>
   1308c:	cmp	r0, #7
   13090:	mov	r5, r0
   13094:	beq	12dac <argp_parse@@Base+0x9f4>
   13098:	ldr	r3, [fp, #-112]	; 0xffffff90
   1309c:	b	127b4 <argp_parse@@Base+0x3fc>
   130a0:	andeq	sl, r2, ip, lsr #7
   130a4:	andeq	sl, r2, r8, lsr #7
   130a8:			; <UNDEFINED> instruction: 0x0002a3b0
   130ac:			; <UNDEFINED> instruction: 0x0002a3bc
   130b0:	tsteq	r0, r6
   130b4:	tsteq	r0, r2
   130b8:	tsteq	r0, r1
   130bc:	tsteq	r0, r5
   130c0:	tsteq	r0, r7
   130c4:	tsteq	r0, r3
   130c8:	andeq	sl, r2, ip, lsl r4
   130cc:	andeq	r9, r1, r0, asr r0
   130d0:	andeq	r9, r1, ip, rrx
   130d4:	andeq	r9, r1, r8, lsl #1
   130d8:	muleq	r1, ip, r1
   130dc:	muleq	r1, r4, r1
   130e0:	andeq	r9, r1, r4, lsr #3
   130e4:	muleq	r1, r8, r1
   130e8:	tsteq	r0, r4
   130ec:	andeq	sl, r2, r0, ror #7
   130f0:			; <UNDEFINED> instruction: 0x000191b0
   130f4:	cmp	r1, #0
   130f8:	beq	13138 <argp_parse@@Base+0xd80>
   130fc:	ldr	r2, [r1, #52]	; 0x34
   13100:	ldr	r3, [r2, #48]	; 0x30
   13104:	ldr	r1, [r2, #52]	; 0x34
   13108:	cmp	r3, r1
   1310c:	bcs	13138 <argp_parse@@Base+0xd80>
   13110:	ldr	r2, [r3, #4]
   13114:	cmp	r0, r2
   13118:	bne	1312c <argp_parse@@Base+0xd74>
   1311c:	b	13140 <argp_parse@@Base+0xd88>
   13120:	ldr	r2, [r3, #4]
   13124:	cmp	r2, r0
   13128:	beq	13140 <argp_parse@@Base+0xd88>
   1312c:	add	r3, r3, #36	; 0x24
   13130:	cmp	r3, r1
   13134:	bcc	13120 <argp_parse@@Base+0xd68>
   13138:	mov	r0, #0
   1313c:	bx	lr
   13140:	ldr	r0, [r3, #24]
   13144:	bx	lr
   13148:	ldr	ip, [pc, #32]	; 13170 <argp_parse@@Base+0xdb8>
   1314c:	push	{lr}		; (str lr, [sp, #-4]!)
   13150:	sub	sp, sp, #12
   13154:	ldm	ip, {r1, ip}
   13158:	ldr	r3, [pc, #20]	; 13174 <argp_parse@@Base+0xdbc>
   1315c:	ldr	r2, [pc, #20]	; 13178 <argp_parse@@Base+0xdc0>
   13160:	str	ip, [sp]
   13164:	bl	1371c <argp_parse@@Base+0x1364>
   13168:	add	sp, sp, #12
   1316c:	pop	{pc}		; (ldr pc, [sp], #4)
   13170:	andeq	sl, r2, r4, ror #7
   13174:	muleq	r1, r8, r2
   13178:	andeq	r9, r1, r8, lsr #5
   1317c:	ldr	r3, [pc, #20]	; 13198 <argp_parse@@Base+0xde0>
   13180:	ldr	r2, [pc, #20]	; 1319c <argp_parse@@Base+0xde4>
   13184:	ldr	ip, [pc, #20]	; 131a0 <argp_parse@@Base+0xde8>
   13188:	str	r0, [r3]
   1318c:	str	ip, [r2]
   13190:	str	r1, [r3, #4]
   13194:	bx	lr
   13198:	andeq	sl, r2, r4, ror #7
   1319c:	andeq	sl, r2, r0, ror #7
   131a0:	andeq	r3, r1, r8, asr #2
   131a4:	ldrb	r3, [r0]
   131a8:	cmp	r3, #47	; 0x2f
   131ac:	bne	131bc <argp_parse@@Base+0xe04>
   131b0:	ldrb	r3, [r0, #1]!
   131b4:	cmp	r3, #47	; 0x2f
   131b8:	beq	131b0 <argp_parse@@Base+0xdf8>
   131bc:	cmp	r3, #0
   131c0:	bxeq	lr
   131c4:	mov	r2, #0
   131c8:	push	{lr}		; (str lr, [sp, #-4]!)
   131cc:	mov	ip, r2
   131d0:	mov	r1, r0
   131d4:	mov	lr, #1
   131d8:	cmp	r3, #47	; 0x2f
   131dc:	moveq	r2, lr
   131e0:	beq	131f0 <argp_parse@@Base+0xe38>
   131e4:	cmp	r2, #0
   131e8:	movne	r0, r1
   131ec:	movne	r2, ip
   131f0:	ldrb	r3, [r1, #1]!
   131f4:	cmp	r3, #0
   131f8:	bne	131d8 <argp_parse@@Base+0xe20>
   131fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13200:	push	{r4, lr}
   13204:	mov	r4, r0
   13208:	bl	111bc <strlen@plt>
   1320c:	cmp	r0, #1
   13210:	popls	{r4, pc}
   13214:	sub	r3, r0, #1
   13218:	add	r2, r4, r3
   1321c:	ldrb	r1, [r4, r3]
   13220:	cmp	r1, #47	; 0x2f
   13224:	popne	{r4, pc}
   13228:	cmp	r3, #1
   1322c:	beq	13240 <argp_parse@@Base+0xe88>
   13230:	ldrb	r1, [r2, #-1]!
   13234:	sub	r0, r3, #1
   13238:	cmp	r1, #47	; 0x2f
   1323c:	beq	13248 <argp_parse@@Base+0xe90>
   13240:	mov	r0, r3
   13244:	pop	{r4, pc}
   13248:	mov	r3, r0
   1324c:	b	13228 <argp_parse@@Base+0xe70>
   13250:	push	{r4, r5, lr}
   13254:	sub	sp, sp, #12
   13258:	mov	r5, r0
   1325c:	bl	111e0 <__errno_location@plt>
   13260:	mov	r2, #0
   13264:	mov	r4, r0
   13268:	ldr	r3, [r0]
   1326c:	str	r2, [r4]
   13270:	mov	r0, r5
   13274:	str	r3, [sp]
   13278:	str	r3, [sp, #4]
   1327c:	bl	11084 <free@plt>
   13280:	ldr	r3, [r4]
   13284:	add	r2, sp, #8
   13288:	cmp	r3, #0
   1328c:	moveq	r3, #4
   13290:	movne	r3, #0
   13294:	add	r3, r2, r3
   13298:	ldr	r3, [r3, #-8]
   1329c:	str	r3, [r4]
   132a0:	add	sp, sp, #12
   132a4:	pop	{r4, r5, pc}
   132a8:	push	{lr}		; (str lr, [sp, #-4]!)
   132ac:	sub	sp, sp, #20
   132b0:	mov	ip, #0
   132b4:	ldr	lr, [sp, #24]
   132b8:	str	ip, [sp, #8]
   132bc:	str	lr, [sp]
   132c0:	str	ip, [sp, #4]
   132c4:	bl	17d4c <argp_error@@Base+0xca4>
   132c8:	add	sp, sp, #20
   132cc:	pop	{pc}		; (ldr pc, [sp], #4)
   132d0:	push	{r4, lr}
   132d4:	sub	sp, sp, #16
   132d8:	mov	ip, #0
   132dc:	ldr	r4, [sp, #24]
   132e0:	ldr	lr, [sp, #28]
   132e4:	str	r4, [sp]
   132e8:	str	lr, [sp, #8]
   132ec:	str	ip, [sp, #12]
   132f0:	str	ip, [sp, #4]
   132f4:	bl	177ec <argp_error@@Base+0x744>
   132f8:	add	sp, sp, #16
   132fc:	pop	{r4, pc}
   13300:	push	{r4, lr}
   13304:	sub	sp, sp, #16
   13308:	mov	lr, #0
   1330c:	ldr	r4, [sp, #24]
   13310:	mov	ip, #1
   13314:	stm	sp, {r4, ip, lr}
   13318:	bl	17d4c <argp_error@@Base+0xca4>
   1331c:	add	sp, sp, #16
   13320:	pop	{r4, pc}
   13324:	push	{r4, r5, lr}
   13328:	sub	sp, sp, #20
   1332c:	mov	lr, #0
   13330:	ldr	r5, [sp, #32]
   13334:	ldr	r4, [sp, #36]	; 0x24
   13338:	mov	ip, #1
   1333c:	str	r5, [sp]
   13340:	str	r4, [sp, #8]
   13344:	str	lr, [sp, #12]
   13348:	str	ip, [sp, #4]
   1334c:	bl	177ec <argp_error@@Base+0x744>
   13350:	add	sp, sp, #20
   13354:	pop	{r4, r5, pc}
   13358:	push	{r4, r5, r6, r8, r9, lr}
   1335c:	mov	r4, r0
   13360:	mov	r5, r1
   13364:	add	r6, r2, #20
   13368:	mov	r8, #10
   1336c:	mov	r9, #0
   13370:	mov	r3, #0
   13374:	strb	r3, [r2, #20]
   13378:	mov	r0, r4
   1337c:	mov	r1, r5
   13380:	mov	r2, r8
   13384:	mov	r3, r9
   13388:	bl	18a40 <argp_error@@Base+0x1998>
   1338c:	mov	r0, r4
   13390:	mov	r1, r5
   13394:	mov	r3, r9
   13398:	add	r2, r2, #48	; 0x30
   1339c:	strb	r2, [r6, #-1]!
   133a0:	mov	r2, r8
   133a4:	bl	18a40 <argp_error@@Base+0x1998>
   133a8:	mov	r4, r0
   133ac:	mov	r5, r1
   133b0:	orrs	r3, r4, r5
   133b4:	bne	13378 <argp_parse@@Base+0xfc0>
   133b8:	mov	r0, r6
   133bc:	pop	{r4, r5, r6, r8, r9, pc}
   133c0:	push	{r4, r5, r6, lr}
   133c4:	subs	r4, r0, #0
   133c8:	beq	1343c <argp_parse@@Base+0x1084>
   133cc:	mov	r1, #47	; 0x2f
   133d0:	bl	1124c <strrchr@plt>
   133d4:	subs	r5, r0, #0
   133d8:	beq	13428 <argp_parse@@Base+0x1070>
   133dc:	add	r6, r5, #1
   133e0:	sub	r3, r6, r4
   133e4:	cmp	r3, #6
   133e8:	ble	13428 <argp_parse@@Base+0x1070>
   133ec:	mov	r2, #7
   133f0:	ldr	r1, [pc, #96]	; 13458 <argp_parse@@Base+0x10a0>
   133f4:	sub	r0, r5, #6
   133f8:	bl	112b8 <strncmp@plt>
   133fc:	cmp	r0, #0
   13400:	bne	13428 <argp_parse@@Base+0x1070>
   13404:	mov	r2, #3
   13408:	ldr	r1, [pc, #76]	; 1345c <argp_parse@@Base+0x10a4>
   1340c:	mov	r0, r6
   13410:	bl	112b8 <strncmp@plt>
   13414:	cmp	r0, #0
   13418:	movne	r4, r6
   1341c:	ldreq	r3, [pc, #60]	; 13460 <argp_parse@@Base+0x10a8>
   13420:	addeq	r4, r5, #4
   13424:	streq	r4, [r3]
   13428:	ldr	r2, [pc, #52]	; 13464 <argp_parse@@Base+0x10ac>
   1342c:	ldr	r3, [pc, #52]	; 13468 <argp_parse@@Base+0x10b0>
   13430:	str	r4, [r2]
   13434:	str	r4, [r3]
   13438:	pop	{r4, r5, r6, pc}
   1343c:	ldr	r3, [pc, #40]	; 1346c <argp_parse@@Base+0x10b4>
   13440:	mov	r2, #55	; 0x37
   13444:	mov	r1, #1
   13448:	ldr	r3, [r3]
   1344c:	ldr	r0, [pc, #28]	; 13470 <argp_parse@@Base+0x10b8>
   13450:	bl	11108 <fwrite@plt>
   13454:	bl	112c4 <abort@plt>
   13458:	strdeq	r9, [r1], -r0
   1345c:	strdeq	r9, [r1], -r8
   13460:	andeq	sl, r2, r8, lsr #7
   13464:	andeq	sl, r2, ip, ror #7
   13468:	andeq	sl, r2, ip, lsr #7
   1346c:			; <UNDEFINED> instruction: 0x0002a3b0
   13470:			; <UNDEFINED> instruction: 0x000192b8
   13474:	push	{r4, r5, r6, r7, lr}
   13478:	sub	sp, sp, #36	; 0x24
   1347c:	cmp	r1, #0
   13480:	mov	r4, r0
   13484:	ldr	r5, [sp, #56]	; 0x38
   13488:	ldr	r6, [sp, #60]	; 0x3c
   1348c:	beq	136cc <argp_parse@@Base+0x1314>
   13490:	str	r3, [sp]
   13494:	mov	r3, r2
   13498:	mov	r2, r1
   1349c:	ldr	r1, [pc, #564]	; 136d8 <argp_parse@@Base+0x1320>
   134a0:	bl	111d4 <fprintf@plt>
   134a4:	ldr	r3, [pc, #560]	; 136dc <argp_parse@@Base+0x1324>
   134a8:	ldr	r2, [pc, #560]	; 136e0 <argp_parse@@Base+0x1328>
   134ac:	ldr	r1, [pc, #560]	; 136e4 <argp_parse@@Base+0x132c>
   134b0:	mov	r0, r4
   134b4:	bl	111d4 <fprintf@plt>
   134b8:	mov	r1, r4
   134bc:	mov	r0, #10
   134c0:	bl	11264 <fputc@plt>
   134c4:	ldr	r1, [pc, #540]	; 136e8 <argp_parse@@Base+0x1330>
   134c8:	ldr	r2, [pc, #540]	; 136ec <argp_parse@@Base+0x1334>
   134cc:	mov	r0, r4
   134d0:	bl	111d4 <fprintf@plt>
   134d4:	mov	r1, r4
   134d8:	mov	r0, #10
   134dc:	bl	11264 <fputc@plt>
   134e0:	cmp	r6, #9
   134e4:	ldrls	pc, [pc, r6, lsl #2]
   134e8:	b	13514 <argp_parse@@Base+0x115c>
   134ec:	andeq	r3, r1, r4, asr r5
   134f0:	andeq	r3, r1, r0, lsr #11
   134f4:			; <UNDEFINED> instruction: 0x000135b8
   134f8:	ldrdeq	r3, [r1], -r0
   134fc:	strdeq	r3, [r1], -r0
   13500:	andeq	r3, r1, r8, lsl r6
   13504:	andeq	r3, r1, r8, lsr r6
   13508:	andeq	r3, r1, r0, ror #12
   1350c:	muleq	r1, r0, r6
   13510:	andeq	r3, r1, ip, asr r5
   13514:	ldr	ip, [r5, #32]
   13518:	ldr	r1, [r5, #28]
   1351c:	ldm	r5, {r2, r3}
   13520:	ldr	r7, [r5, #24]
   13524:	ldr	r6, [r5, #20]
   13528:	str	ip, [sp, #24]
   1352c:	ldr	lr, [r5, #16]
   13530:	str	r1, [sp, #20]
   13534:	ldr	r1, [r5, #8]
   13538:	ldr	ip, [r5, #12]
   1353c:	mov	r0, r4
   13540:	str	r7, [sp, #16]
   13544:	stm	sp, {r1, ip, lr}
   13548:	str	r6, [sp, #12]
   1354c:	ldr	r1, [pc, #412]	; 136f0 <argp_parse@@Base+0x1338>
   13550:	bl	111d4 <fprintf@plt>
   13554:	add	sp, sp, #36	; 0x24
   13558:	pop	{r4, r5, r6, r7, pc}
   1355c:	ldr	ip, [r5, #32]
   13560:	ldr	r1, [r5, #28]
   13564:	ldm	r5, {r2, r3}
   13568:	ldr	r7, [r5, #24]
   1356c:	ldr	r6, [r5, #20]
   13570:	str	ip, [sp, #24]
   13574:	ldr	lr, [r5, #16]
   13578:	str	r1, [sp, #20]
   1357c:	ldr	r1, [r5, #8]
   13580:	ldr	ip, [r5, #12]
   13584:	mov	r0, r4
   13588:	str	r7, [sp, #16]
   1358c:	stm	sp, {r1, ip, lr}
   13590:	str	r6, [sp, #12]
   13594:	ldr	r1, [pc, #344]	; 136f4 <argp_parse@@Base+0x133c>
   13598:	bl	111d4 <fprintf@plt>
   1359c:	b	13554 <argp_parse@@Base+0x119c>
   135a0:	ldr	r2, [r5]
   135a4:	mov	r0, r4
   135a8:	ldr	r1, [pc, #328]	; 136f8 <argp_parse@@Base+0x1340>
   135ac:	add	sp, sp, #36	; 0x24
   135b0:	pop	{r4, r5, r6, r7, lr}
   135b4:	b	111d4 <fprintf@plt>
   135b8:	mov	r0, r4
   135bc:	ldm	r5, {r2, r3}
   135c0:	ldr	r1, [pc, #308]	; 136fc <argp_parse@@Base+0x1344>
   135c4:	add	sp, sp, #36	; 0x24
   135c8:	pop	{r4, r5, r6, r7, lr}
   135cc:	b	111d4 <fprintf@plt>
   135d0:	ldr	r1, [r5, #8]
   135d4:	ldm	r5, {r2, r3}
   135d8:	mov	r0, r4
   135dc:	str	r1, [sp, #56]	; 0x38
   135e0:	ldr	r1, [pc, #280]	; 13700 <argp_parse@@Base+0x1348>
   135e4:	add	sp, sp, #36	; 0x24
   135e8:	pop	{r4, r5, r6, r7, lr}
   135ec:	b	111d4 <fprintf@plt>
   135f0:	ldr	r1, [r5, #8]
   135f4:	ldr	ip, [r5, #12]
   135f8:	ldm	r5, {r2, r3}
   135fc:	mov	r0, r4
   13600:	str	r1, [sp, #56]	; 0x38
   13604:	str	ip, [sp, #60]	; 0x3c
   13608:	ldr	r1, [pc, #244]	; 13704 <argp_parse@@Base+0x134c>
   1360c:	add	sp, sp, #36	; 0x24
   13610:	pop	{r4, r5, r6, r7, lr}
   13614:	b	111d4 <fprintf@plt>
   13618:	add	r1, r5, #8
   1361c:	ldm	r5, {r2, r3}
   13620:	ldm	r1, {r1, ip, lr}
   13624:	mov	r0, r4
   13628:	stm	sp, {r1, ip, lr}
   1362c:	ldr	r1, [pc, #212]	; 13708 <argp_parse@@Base+0x1350>
   13630:	bl	111d4 <fprintf@plt>
   13634:	b	13554 <argp_parse@@Base+0x119c>
   13638:	add	r1, r5, #8
   1363c:	ldr	r6, [r5, #20]
   13640:	ldm	r1, {r1, ip, lr}
   13644:	mov	r0, r4
   13648:	ldm	r5, {r2, r3}
   1364c:	str	r6, [sp, #12]
   13650:	stm	sp, {r1, ip, lr}
   13654:	ldr	r1, [pc, #176]	; 1370c <argp_parse@@Base+0x1354>
   13658:	bl	111d4 <fprintf@plt>
   1365c:	b	13554 <argp_parse@@Base+0x119c>
   13660:	add	r1, r5, #8
   13664:	ldr	r7, [r5, #24]
   13668:	ldm	r1, {r1, ip, lr}
   1366c:	mov	r0, r4
   13670:	ldr	r6, [r5, #20]
   13674:	ldm	r5, {r2, r3}
   13678:	stm	sp, {r1, ip, lr}
   1367c:	str	r7, [sp, #16]
   13680:	str	r6, [sp, #12]
   13684:	ldr	r1, [pc, #132]	; 13710 <argp_parse@@Base+0x1358>
   13688:	bl	111d4 <fprintf@plt>
   1368c:	b	13554 <argp_parse@@Base+0x119c>
   13690:	ldr	r1, [r5, #28]
   13694:	ldm	r5, {r2, r3}
   13698:	ldr	r7, [r5, #24]
   1369c:	ldr	r6, [r5, #20]
   136a0:	ldr	lr, [r5, #16]
   136a4:	str	r1, [sp, #20]
   136a8:	ldr	r1, [r5, #8]
   136ac:	ldr	ip, [r5, #12]
   136b0:	mov	r0, r4
   136b4:	str	r7, [sp, #16]
   136b8:	stm	sp, {r1, ip, lr}
   136bc:	str	r6, [sp, #12]
   136c0:	ldr	r1, [pc, #76]	; 13714 <argp_parse@@Base+0x135c>
   136c4:	bl	111d4 <fprintf@plt>
   136c8:	b	13554 <argp_parse@@Base+0x119c>
   136cc:	ldr	r1, [pc, #68]	; 13718 <argp_parse@@Base+0x1360>
   136d0:	bl	111d4 <fprintf@plt>
   136d4:	b	134a4 <argp_parse@@Base+0x10ec>
   136d8:	strdeq	r9, [r1], -ip
   136dc:	andeq	r0, r0, r6, ror #15
   136e0:	andeq	r9, r1, r0, lsl r3
   136e4:	andeq	r9, r1, r0, lsl r6
   136e8:	andeq	r9, r1, r8, lsr r3
   136ec:	andeq	r9, r1, r4, lsl r3
   136f0:	andeq	r9, r1, r4, lsr #10
   136f4:	strdeq	r9, [r1], -r0
   136f8:	andeq	r9, r1, r4, ror #7
   136fc:	strdeq	r9, [r1], -r4
   13700:	andeq	r9, r1, ip, lsl #8
   13704:	andeq	r9, r1, r8, lsr #8
   13708:	andeq	r9, r1, r8, asr #8
   1370c:	andeq	r9, r1, ip, ror #8
   13710:	muleq	r1, r4, r4
   13714:	andeq	r9, r1, r0, asr #9
   13718:	andeq	r9, r1, r8, lsl #6
   1371c:	push	{r4, r5, lr}
   13720:	sub	sp, sp, #12
   13724:	ldr	r5, [sp, #24]
   13728:	ldr	ip, [r5]
   1372c:	cmp	ip, #0
   13730:	beq	1374c <argp_parse@@Base+0x1394>
   13734:	mov	lr, r5
   13738:	mov	ip, #0
   1373c:	ldr	r4, [lr, #4]!
   13740:	add	ip, ip, #1
   13744:	cmp	r4, #0
   13748:	bne	1373c <argp_parse@@Base+0x1384>
   1374c:	stm	sp, {r5, ip}
   13750:	bl	13474 <argp_parse@@Base+0x10bc>
   13754:	add	sp, sp, #12
   13758:	pop	{r4, r5, pc}
   1375c:	push	{r4, r5, lr}
   13760:	sub	sp, sp, #52	; 0x34
   13764:	add	r5, sp, #4
   13768:	ldr	r4, [sp, #64]	; 0x40
   1376c:	mov	ip, #0
   13770:	sub	r4, r4, #4
   13774:	ldr	lr, [r4, #4]!
   13778:	cmp	lr, #0
   1377c:	str	lr, [r5, #4]!
   13780:	beq	13790 <argp_parse@@Base+0x13d8>
   13784:	add	ip, ip, #1
   13788:	cmp	ip, #10
   1378c:	bne	13774 <argp_parse@@Base+0x13bc>
   13790:	add	lr, sp, #8
   13794:	str	ip, [sp, #4]
   13798:	str	lr, [sp]
   1379c:	bl	13474 <argp_parse@@Base+0x10bc>
   137a0:	add	sp, sp, #52	; 0x34
   137a4:	pop	{r4, r5, pc}
   137a8:	push	{r3}		; (str r3, [sp, #-4]!)
   137ac:	push	{r4, lr}
   137b0:	sub	sp, sp, #60	; 0x3c
   137b4:	add	lr, sp, #56	; 0x38
   137b8:	add	r3, sp, #72	; 0x48
   137bc:	str	r3, [lr, #-44]!	; 0xffffffd4
   137c0:	add	r4, sp, #68	; 0x44
   137c4:	mov	r3, #0
   137c8:	ldr	ip, [r4, #4]!
   137cc:	cmp	ip, #0
   137d0:	str	ip, [lr, #4]!
   137d4:	beq	137e4 <argp_parse@@Base+0x142c>
   137d8:	add	r3, r3, #1
   137dc:	cmp	r3, #10
   137e0:	bne	137c8 <argp_parse@@Base+0x1410>
   137e4:	add	ip, sp, #16
   137e8:	str	r3, [sp, #4]
   137ec:	str	ip, [sp]
   137f0:	ldr	r3, [sp, #68]	; 0x44
   137f4:	bl	13474 <argp_parse@@Base+0x10bc>
   137f8:	add	sp, sp, #60	; 0x3c
   137fc:	pop	{r4, lr}
   13800:	add	sp, sp, #4
   13804:	bx	lr
   13808:	ldr	r3, [pc, #56]	; 13848 <argp_parse@@Base+0x1490>
   1380c:	push	{r4, lr}
   13810:	mov	r0, #10
   13814:	ldr	r1, [r3]
   13818:	bl	11264 <fputc@plt>
   1381c:	ldr	r1, [pc, #40]	; 1384c <argp_parse@@Base+0x1494>
   13820:	ldr	r0, [pc, #40]	; 13850 <argp_parse@@Base+0x1498>
   13824:	bl	11054 <printf@plt>
   13828:	ldr	r1, [pc, #36]	; 13854 <argp_parse@@Base+0x149c>
   1382c:	ldr	r2, [pc, #36]	; 13858 <argp_parse@@Base+0x14a0>
   13830:	ldr	r0, [pc, #36]	; 1385c <argp_parse@@Base+0x14a4>
   13834:	bl	11054 <printf@plt>
   13838:	ldr	r1, [pc, #32]	; 13860 <argp_parse@@Base+0x14a8>
   1383c:	ldr	r0, [pc, #32]	; 13864 <argp_parse@@Base+0x14ac>
   13840:	pop	{r4, lr}
   13844:	b	11054 <printf@plt>
   13848:			; <UNDEFINED> instruction: 0x0002a3bc
   1384c:	andeq	r9, r1, r0, ror #10
   13850:	andeq	r9, r1, r8, ror r5
   13854:	andeq	r9, r1, r8, lsr #5
   13858:	andeq	r9, r1, ip, lsl #11
   1385c:			; <UNDEFINED> instruction: 0x000195b4
   13860:	andeq	r9, r1, r8, asr #11
   13864:	andeq	r9, r1, r8, ror #11
   13868:	push	{r4, lr}
   1386c:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13870:	cmp	r0, #0
   13874:	popne	{r4, pc}
   13878:	bl	13db0 <argp_parse@@Base+0x19f8>
   1387c:	push	{r4, lr}
   13880:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13884:	cmp	r0, #0
   13888:	popne	{r4, pc}
   1388c:	bl	13db0 <argp_parse@@Base+0x19f8>
   13890:	push	{r4, lr}
   13894:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13898:	cmp	r0, #0
   1389c:	popne	{r4, pc}
   138a0:	bl	13db0 <argp_parse@@Base+0x19f8>
   138a4:	push	{r4, r5, r6, lr}
   138a8:	mov	r5, r0
   138ac:	mov	r4, r1
   138b0:	bl	13e50 <argp_parse@@Base+0x1a98>
   138b4:	cmp	r0, #0
   138b8:	popne	{r4, r5, r6, pc}
   138bc:	adds	r4, r4, #0
   138c0:	movne	r4, #1
   138c4:	cmp	r5, #0
   138c8:	orreq	r4, r4, #1
   138cc:	cmp	r4, #0
   138d0:	popeq	{r4, r5, r6, pc}
   138d4:	bl	13db0 <argp_parse@@Base+0x19f8>
   138d8:	push	{r4, lr}
   138dc:	cmp	r1, #0
   138e0:	orreq	r1, r1, #1
   138e4:	bl	13e50 <argp_parse@@Base+0x1a98>
   138e8:	cmp	r0, #0
   138ec:	popne	{r4, pc}
   138f0:	bl	13db0 <argp_parse@@Base+0x19f8>
   138f4:	push	{r4, r5, r6, lr}
   138f8:	mov	r6, r0
   138fc:	mov	r5, r1
   13900:	mov	r4, r2
   13904:	bl	17de0 <argp_error@@Base+0xd38>
   13908:	cmp	r0, #0
   1390c:	popne	{r4, r5, r6, pc}
   13910:	cmp	r6, #0
   13914:	beq	13924 <argp_parse@@Base+0x156c>
   13918:	cmp	r5, #0
   1391c:	cmpne	r4, #0
   13920:	popeq	{r4, r5, r6, pc}
   13924:	bl	13db0 <argp_parse@@Base+0x19f8>
   13928:	b	138f4 <argp_parse@@Base+0x153c>
   1392c:	cmp	r2, #0
   13930:	cmpne	r1, #0
   13934:	moveq	r2, #1
   13938:	moveq	r1, r2
   1393c:	push	{r4, lr}
   13940:	bl	17de0 <argp_error@@Base+0xd38>
   13944:	cmp	r0, #0
   13948:	popne	{r4, pc}
   1394c:	bl	13db0 <argp_parse@@Base+0x19f8>
   13950:	mov	r2, r1
   13954:	mov	r1, r0
   13958:	mov	r0, #0
   1395c:	b	138f4 <argp_parse@@Base+0x153c>
   13960:	mov	r2, r1
   13964:	mov	r1, r0
   13968:	mov	r0, #0
   1396c:	b	1392c <argp_parse@@Base+0x1574>
   13970:	push	{r4, r5, r6, lr}
   13974:	subs	r6, r0, #0
   13978:	sub	sp, sp, #8
   1397c:	mov	r5, r1
   13980:	ldr	r4, [r1]
   13984:	beq	139c0 <argp_parse@@Base+0x1608>
   13988:	lsr	r1, r4, #1
   1398c:	add	r3, r1, #1
   13990:	mvn	r3, r3
   13994:	cmp	r4, r3
   13998:	bhi	139bc <argp_parse@@Base+0x1604>
   1399c:	add	r4, r4, #1
   139a0:	add	r4, r4, r1
   139a4:	mov	r0, r6
   139a8:	mov	r1, r4
   139ac:	bl	138f4 <argp_parse@@Base+0x153c>
   139b0:	str	r4, [r5]
   139b4:	add	sp, sp, #8
   139b8:	pop	{r4, r5, r6, pc}
   139bc:	bl	13db0 <argp_parse@@Base+0x19f8>
   139c0:	cmp	r4, #0
   139c4:	bne	139a4 <argp_parse@@Base+0x15ec>
   139c8:	mov	r1, r2
   139cc:	mov	r0, #64	; 0x40
   139d0:	str	r2, [sp, #4]
   139d4:	bl	185f4 <argp_error@@Base+0x154c>
   139d8:	ldr	r2, [sp, #4]
   139dc:	cmp	r0, #0
   139e0:	movne	r4, r0
   139e4:	addeq	r4, r0, #1
   139e8:	b	139a4 <argp_parse@@Base+0x15ec>
   139ec:	mov	r2, #1
   139f0:	b	13970 <argp_parse@@Base+0x15b8>
   139f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139f8:	sub	sp, sp, #12
   139fc:	ldr	r6, [r1]
   13a00:	mov	sl, r1
   13a04:	mov	r9, r0
   13a08:	asrs	r4, r6, #1
   13a0c:	mov	r5, r2
   13a10:	mov	fp, r3
   13a14:	ldr	r7, [sp, #48]	; 0x30
   13a18:	bmi	13b84 <argp_parse@@Base+0x17cc>
   13a1c:	mvn	r3, #-2147483648	; 0x80000000
   13a20:	sub	r3, r3, r4
   13a24:	cmp	r6, r3
   13a28:	movle	r3, #0
   13a2c:	movgt	r3, #1
   13a30:	mvn	r8, fp
   13a34:	cmp	r3, #0
   13a38:	addeq	r4, r4, r6
   13a3c:	mvnne	r4, #-2147483648	; 0x80000000
   13a40:	lsr	r8, r8, #31
   13a44:	cmp	fp, r4
   13a48:	movge	r3, #0
   13a4c:	andlt	r3, r8, #1
   13a50:	cmp	r3, #0
   13a54:	beq	13b3c <argp_parse@@Base+0x1784>
   13a58:	cmp	r7, #0
   13a5c:	blt	13c0c <argp_parse@@Base+0x1854>
   13a60:	bne	13c04 <argp_parse@@Base+0x184c>
   13a64:	mov	r2, #64	; 0x40
   13a68:	mov	r1, r7
   13a6c:	mov	r0, r2
   13a70:	str	r2, [sp, #4]
   13a74:	bl	18800 <argp_error@@Base+0x1758>
   13a78:	ldr	r2, [sp, #4]
   13a7c:	mov	r1, r7
   13a80:	mov	r4, r0
   13a84:	mov	r0, r2
   13a88:	bl	18a20 <argp_error@@Base+0x1978>
   13a8c:	ldr	r2, [sp, #4]
   13a90:	sub	r1, r2, r1
   13a94:	cmp	r9, #0
   13a98:	sub	r3, r4, r6
   13a9c:	streq	r9, [sl]
   13aa0:	cmp	r3, r5
   13aa4:	bge	13b28 <argp_parse@@Base+0x1770>
   13aa8:	cmp	r5, #0
   13aac:	blt	13b98 <argp_parse@@Base+0x17e0>
   13ab0:	cmp	r6, #0
   13ab4:	blt	13ad4 <argp_parse@@Base+0x171c>
   13ab8:	mvn	r3, #-2147483648	; 0x80000000
   13abc:	sub	r3, r3, r5
   13ac0:	cmp	r6, r3
   13ac4:	movle	r3, #0
   13ac8:	movgt	r3, #1
   13acc:	cmp	r3, #0
   13ad0:	bne	13c94 <argp_parse@@Base+0x18dc>
   13ad4:	add	r5, r6, r5
   13ad8:	cmp	fp, r5
   13adc:	movge	r8, #0
   13ae0:	andlt	r8, r8, #1
   13ae4:	cmp	r8, #0
   13ae8:	mov	r4, r5
   13aec:	bne	13c94 <argp_parse@@Base+0x18dc>
   13af0:	cmp	r7, #0
   13af4:	blt	13bac <argp_parse@@Base+0x17f4>
   13af8:	beq	13b24 <argp_parse@@Base+0x176c>
   13afc:	cmp	r5, #0
   13b00:	blt	13c54 <argp_parse@@Base+0x189c>
   13b04:	mov	r1, r7
   13b08:	mvn	r0, #-2147483648	; 0x80000000
   13b0c:	bl	18800 <argp_error@@Base+0x1758>
   13b10:	cmp	r5, r0
   13b14:	movle	r0, #0
   13b18:	movgt	r0, #1
   13b1c:	cmp	r0, #0
   13b20:	bne	13c94 <argp_parse@@Base+0x18dc>
   13b24:	mul	r1, r5, r7
   13b28:	mov	r0, r9
   13b2c:	bl	138a4 <argp_parse@@Base+0x14ec>
   13b30:	str	r4, [sl]
   13b34:	add	sp, sp, #12
   13b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b3c:	cmp	r7, #0
   13b40:	blt	13bd8 <argp_parse@@Base+0x1820>
   13b44:	beq	13a64 <argp_parse@@Base+0x16ac>
   13b48:	cmp	r4, #0
   13b4c:	blt	13c14 <argp_parse@@Base+0x185c>
   13b50:	mov	r1, r7
   13b54:	mvn	r0, #-2147483648	; 0x80000000
   13b58:	bl	18800 <argp_error@@Base+0x1758>
   13b5c:	cmp	r0, r4
   13b60:	movge	r0, #0
   13b64:	movlt	r0, #1
   13b68:	cmp	r0, #0
   13b6c:	mvnne	r2, #-2147483648	; 0x80000000
   13b70:	bne	13a68 <argp_parse@@Base+0x16b0>
   13b74:	mul	r1, r7, r4
   13b78:	cmp	r1, #63	; 0x3f
   13b7c:	bgt	13a94 <argp_parse@@Base+0x16dc>
   13b80:	b	13a64 <argp_parse@@Base+0x16ac>
   13b84:	rsb	r3, r4, #-2147483648	; 0x80000000
   13b88:	cmp	r6, r3
   13b8c:	movge	r3, #0
   13b90:	movlt	r3, #1
   13b94:	b	13a30 <argp_parse@@Base+0x1678>
   13b98:	rsb	r3, r5, #-2147483648	; 0x80000000
   13b9c:	cmp	r6, r3
   13ba0:	movge	r3, #0
   13ba4:	movlt	r3, #1
   13ba8:	b	13acc <argp_parse@@Base+0x1714>
   13bac:	cmp	r5, #0
   13bb0:	blt	13c38 <argp_parse@@Base+0x1880>
   13bb4:	cmn	r7, #1
   13bb8:	beq	13b24 <argp_parse@@Base+0x176c>
   13bbc:	mov	r1, r7
   13bc0:	mov	r0, #-2147483648	; 0x80000000
   13bc4:	bl	18800 <argp_error@@Base+0x1758>
   13bc8:	cmp	r5, r0
   13bcc:	movle	r0, #0
   13bd0:	movgt	r0, #1
   13bd4:	b	13b1c <argp_parse@@Base+0x1764>
   13bd8:	cmp	r4, #0
   13bdc:	blt	13c78 <argp_parse@@Base+0x18c0>
   13be0:	cmn	r7, #1
   13be4:	beq	13b74 <argp_parse@@Base+0x17bc>
   13be8:	mov	r1, r7
   13bec:	mov	r0, #-2147483648	; 0x80000000
   13bf0:	bl	18800 <argp_error@@Base+0x1758>
   13bf4:	cmp	r0, r4
   13bf8:	movge	r0, #0
   13bfc:	movlt	r0, #1
   13c00:	b	13b68 <argp_parse@@Base+0x17b0>
   13c04:	mov	r4, fp
   13c08:	b	13b50 <argp_parse@@Base+0x1798>
   13c0c:	mov	r4, fp
   13c10:	b	13be0 <argp_parse@@Base+0x1828>
   13c14:	cmn	r4, #1
   13c18:	beq	13b74 <argp_parse@@Base+0x17bc>
   13c1c:	mov	r1, r4
   13c20:	mov	r0, #-2147483648	; 0x80000000
   13c24:	bl	18800 <argp_error@@Base+0x1758>
   13c28:	cmp	r7, r0
   13c2c:	movle	r0, #0
   13c30:	movgt	r0, #1
   13c34:	b	13b68 <argp_parse@@Base+0x17b0>
   13c38:	mov	r1, r7
   13c3c:	mvn	r0, #-2147483648	; 0x80000000
   13c40:	bl	18800 <argp_error@@Base+0x1758>
   13c44:	cmp	r5, r0
   13c48:	movge	r0, #0
   13c4c:	movlt	r0, #1
   13c50:	b	13b1c <argp_parse@@Base+0x1764>
   13c54:	cmn	r5, #1
   13c58:	beq	13b24 <argp_parse@@Base+0x176c>
   13c5c:	mov	r1, r5
   13c60:	mov	r0, #-2147483648	; 0x80000000
   13c64:	bl	18800 <argp_error@@Base+0x1758>
   13c68:	cmp	r7, r0
   13c6c:	movle	r0, #0
   13c70:	movgt	r0, #1
   13c74:	b	13b1c <argp_parse@@Base+0x1764>
   13c78:	mov	r1, r7
   13c7c:	mvn	r0, #-2147483648	; 0x80000000
   13c80:	bl	18800 <argp_error@@Base+0x1758>
   13c84:	cmp	r0, r4
   13c88:	movle	r0, #0
   13c8c:	movgt	r0, #1
   13c90:	b	13b68 <argp_parse@@Base+0x17b0>
   13c94:	bl	13db0 <argp_parse@@Base+0x19f8>
   13c98:	push	{r4, lr}
   13c9c:	mov	r1, #1
   13ca0:	bl	13ddc <argp_parse@@Base+0x1a24>
   13ca4:	cmp	r0, #0
   13ca8:	popne	{r4, pc}
   13cac:	bl	13db0 <argp_parse@@Base+0x19f8>
   13cb0:	push	{r4, lr}
   13cb4:	mov	r1, #1
   13cb8:	bl	13ddc <argp_parse@@Base+0x1a24>
   13cbc:	cmp	r0, #0
   13cc0:	popne	{r4, pc}
   13cc4:	bl	13db0 <argp_parse@@Base+0x19f8>
   13cc8:	push	{r4, lr}
   13ccc:	bl	13ddc <argp_parse@@Base+0x1a24>
   13cd0:	cmp	r0, #0
   13cd4:	popne	{r4, pc}
   13cd8:	bl	13db0 <argp_parse@@Base+0x19f8>
   13cdc:	push	{r4, lr}
   13ce0:	bl	13ddc <argp_parse@@Base+0x1a24>
   13ce4:	cmp	r0, #0
   13ce8:	popne	{r4, pc}
   13cec:	bl	13db0 <argp_parse@@Base+0x19f8>
   13cf0:	push	{r4, r5, r6, lr}
   13cf4:	mov	r6, r0
   13cf8:	mov	r0, r1
   13cfc:	mov	r4, r1
   13d00:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13d04:	subs	r5, r0, #0
   13d08:	beq	13d20 <argp_parse@@Base+0x1968>
   13d0c:	mov	r2, r4
   13d10:	mov	r1, r6
   13d14:	bl	110a8 <memcpy@plt>
   13d18:	mov	r0, r5
   13d1c:	pop	{r4, r5, r6, pc}
   13d20:	bl	13db0 <argp_parse@@Base+0x19f8>
   13d24:	push	{r4, r5, r6, lr}
   13d28:	mov	r6, r0
   13d2c:	mov	r0, r1
   13d30:	mov	r4, r1
   13d34:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13d38:	subs	r5, r0, #0
   13d3c:	beq	13d54 <argp_parse@@Base+0x199c>
   13d40:	mov	r2, r4
   13d44:	mov	r1, r6
   13d48:	bl	110a8 <memcpy@plt>
   13d4c:	mov	r0, r5
   13d50:	pop	{r4, r5, r6, pc}
   13d54:	bl	13db0 <argp_parse@@Base+0x19f8>
   13d58:	push	{r4, r5, r6, lr}
   13d5c:	mov	r6, r0
   13d60:	add	r0, r1, #1
   13d64:	mov	r4, r1
   13d68:	bl	13e24 <argp_parse@@Base+0x1a6c>
   13d6c:	subs	r5, r0, #0
   13d70:	beq	13d90 <argp_parse@@Base+0x19d8>
   13d74:	mov	r3, #0
   13d78:	mov	r1, r6
   13d7c:	strb	r3, [r5, r4]
   13d80:	mov	r2, r4
   13d84:	bl	110a8 <memcpy@plt>
   13d88:	mov	r0, r5
   13d8c:	pop	{r4, r5, r6, pc}
   13d90:	bl	13db0 <argp_parse@@Base+0x19f8>
   13d94:	push	{r4, lr}
   13d98:	mov	r4, r0
   13d9c:	bl	111bc <strlen@plt>
   13da0:	add	r1, r0, #1
   13da4:	mov	r0, r4
   13da8:	pop	{r4, lr}
   13dac:	b	13cf0 <argp_parse@@Base+0x1938>
   13db0:	ldr	r1, [pc, #24]	; 13dd0 <argp_parse@@Base+0x1a18>
   13db4:	push	{r4, lr}
   13db8:	ldr	r0, [r1]
   13dbc:	ldr	r3, [pc, #16]	; 13dd4 <argp_parse@@Base+0x1a1c>
   13dc0:	ldr	r2, [pc, #16]	; 13dd8 <argp_parse@@Base+0x1a20>
   13dc4:	mov	r1, #0
   13dc8:	bl	11120 <error@plt>
   13dcc:	bl	112c4 <abort@plt>
   13dd0:	muleq	r2, r4, r3
   13dd4:	andeq	r9, r1, r0, asr #12
   13dd8:	andeq	r8, r1, r0, lsl sp
   13ddc:	cmp	r1, #0
   13de0:	cmpne	r0, #0
   13de4:	moveq	r1, #1
   13de8:	moveq	r0, r1
   13dec:	umull	r2, r3, r0, r1
   13df0:	adds	r3, r3, #0
   13df4:	movne	r3, #1
   13df8:	cmp	r2, #0
   13dfc:	blt	13e0c <argp_parse@@Base+0x1a54>
   13e00:	cmp	r3, #0
   13e04:	bne	13e0c <argp_parse@@Base+0x1a54>
   13e08:	b	11000 <calloc@plt>
   13e0c:	push	{r4, lr}
   13e10:	bl	111e0 <__errno_location@plt>
   13e14:	mov	r3, #12
   13e18:	str	r3, [r0]
   13e1c:	mov	r0, #0
   13e20:	pop	{r4, pc}
   13e24:	cmp	r0, #0
   13e28:	moveq	r0, #1
   13e2c:	cmp	r0, #0
   13e30:	blt	13e38 <argp_parse@@Base+0x1a80>
   13e34:	b	11138 <malloc@plt>
   13e38:	push	{r4, lr}
   13e3c:	bl	111e0 <__errno_location@plt>
   13e40:	mov	r3, #12
   13e44:	str	r3, [r0]
   13e48:	mov	r0, #0
   13e4c:	pop	{r4, pc}
   13e50:	cmp	r0, #0
   13e54:	beq	13e78 <argp_parse@@Base+0x1ac0>
   13e58:	cmp	r1, #0
   13e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e60:	sub	sp, sp, #12
   13e64:	beq	13e80 <argp_parse@@Base+0x1ac8>
   13e68:	blt	13e98 <argp_parse@@Base+0x1ae0>
   13e6c:	add	sp, sp, #12
   13e70:	pop	{lr}		; (ldr lr, [sp], #4)
   13e74:	b	110e4 <realloc@plt>
   13e78:	mov	r0, r1
   13e7c:	b	13e24 <argp_parse@@Base+0x1a6c>
   13e80:	str	r1, [sp, #4]
   13e84:	bl	13250 <argp_parse@@Base+0xe98>
   13e88:	ldr	r3, [sp, #4]
   13e8c:	mov	r0, r3
   13e90:	add	sp, sp, #12
   13e94:	pop	{pc}		; (ldr pc, [sp], #4)
   13e98:	bl	111e0 <__errno_location@plt>
   13e9c:	mov	r2, #12
   13ea0:	mov	r3, #0
   13ea4:	str	r2, [r0]
   13ea8:	b	13e8c <argp_parse@@Base+0x1ad4>
   13eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb0:	sub	sp, sp, #20
   13eb4:	ldr	r5, [r0, #4]
   13eb8:	ldr	r4, [r0]
   13ebc:	cmp	r5, #0
   13ec0:	ldr	r7, [r0, #8]
   13ec4:	beq	13f9c <argp_parse@@Base+0x1be4>
   13ec8:	stmib	sp, {r1, r2, r3}
   13ecc:	mov	r6, #1
   13ed0:	str	r4, [sp]
   13ed4:	mov	r8, #0
   13ed8:	b	13ef8 <argp_parse@@Base+0x1b40>
   13edc:	mov	r3, r6
   13ee0:	subs	r5, r5, #1
   13ee4:	moveq	r3, #0
   13ee8:	andne	r3, r3, #1
   13eec:	cmp	r3, #0
   13ef0:	add	r4, r4, #24
   13ef4:	beq	13f64 <argp_parse@@Base+0x1bac>
   13ef8:	ldr	fp, [r4, #12]
   13efc:	ands	r9, fp, #8
   13f00:	movne	r3, r6
   13f04:	movne	r9, r8
   13f08:	bne	13ee0 <argp_parse@@Base+0x1b28>
   13f0c:	ldr	sl, [r4, #4]
   13f10:	sub	r3, sl, #1
   13f14:	cmp	r3, #254	; 0xfe
   13f18:	bhi	13edc <argp_parse@@Base+0x1b24>
   13f1c:	bl	1118c <__ctype_b_loc@plt>
   13f20:	lsl	r3, sl, #1
   13f24:	ldr	r1, [r0]
   13f28:	ldrh	r3, [r1, r3]
   13f2c:	tst	r3, #16384	; 0x4000
   13f30:	beq	13edc <argp_parse@@Base+0x1b24>
   13f34:	ldrb	r3, [r7]
   13f38:	cmp	r3, sl
   13f3c:	bne	13edc <argp_parse@@Base+0x1b24>
   13f40:	ldr	r3, [sp]
   13f44:	tst	fp, #4
   13f48:	moveq	r3, r4
   13f4c:	tst	fp, #2
   13f50:	str	r3, [sp]
   13f54:	movne	r3, r6
   13f58:	beq	13f74 <argp_parse@@Base+0x1bbc>
   13f5c:	add	r7, r7, #1
   13f60:	b	13ee0 <argp_parse@@Base+0x1b28>
   13f64:	mov	sl, r9
   13f68:	mov	r0, sl
   13f6c:	add	sp, sp, #20
   13f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f74:	ldr	r3, [sp, #12]
   13f78:	ldr	r2, [sp, #8]
   13f7c:	ldr	r1, [sp]
   13f80:	mov	r0, r4
   13f84:	ldr	ip, [sp, #4]
   13f88:	blx	ip
   13f8c:	clz	r3, r0
   13f90:	mov	r9, r0
   13f94:	lsr	r3, r3, #5
   13f98:	b	13f5c <argp_parse@@Base+0x1ba4>
   13f9c:	mov	sl, r5
   13fa0:	b	13f68 <argp_parse@@Base+0x1bb0>
   13fa4:	push	{r4, r5, r6, lr}
   13fa8:	ldr	r4, [r0, #12]
   13fac:	ands	r4, r4, #8
   13fb0:	movne	r4, #0
   13fb4:	bne	13fe0 <argp_parse@@Base+0x1c28>
   13fb8:	ldr	r5, [r0, #4]
   13fbc:	sub	r3, r5, #1
   13fc0:	cmp	r3, #254	; 0xfe
   13fc4:	bhi	13fe0 <argp_parse@@Base+0x1c28>
   13fc8:	bl	1118c <__ctype_b_loc@plt>
   13fcc:	lsl	r3, r5, #1
   13fd0:	ldr	r2, [r0]
   13fd4:	ldrh	r3, [r2, r3]
   13fd8:	tst	r3, #16384	; 0x4000
   13fdc:	movne	r4, r5
   13fe0:	mov	r0, r4
   13fe4:	pop	{r4, r5, r6, pc}
   13fe8:	push	{r4, lr}
   13fec:	mov	r4, r0
   13ff0:	bl	1118c <__ctype_b_loc@plt>
   13ff4:	ldr	r2, [r4]
   13ff8:	ldr	lr, [r0]
   13ffc:	b	14004 <argp_parse@@Base+0x1c4c>
   14000:	str	r2, [r4]
   14004:	ldrb	r1, [r2]
   14008:	mov	r3, r2
   1400c:	add	r2, r2, #1
   14010:	lsl	r0, r1, #1
   14014:	ldrh	ip, [lr, r0]
   14018:	tst	ip, #8192	; 0x2000
   1401c:	bne	14000 <argp_parse@@Base+0x1c48>
   14020:	subs	r0, r1, #45	; 0x2d
   14024:	movne	r0, #1
   14028:	cmp	r1, #0
   1402c:	popeq	{r4, pc}
   14030:	tst	ip, #8
   14034:	popne	{r4, pc}
   14038:	add	r3, r3, #1
   1403c:	str	r3, [r4]
   14040:	ldrb	r2, [r3]
   14044:	cmp	r2, #0
   14048:	lsl	r2, r2, #1
   1404c:	popeq	{r4, pc}
   14050:	ldrh	r2, [lr, r2]
   14054:	tst	r2, #8
   14058:	beq	14038 <argp_parse@@Base+0x1c80>
   1405c:	pop	{r4, pc}
   14060:	push	{r4, r5, r6, lr}
   14064:	mov	r5, r0
   14068:	ldr	r0, [r0, #12]
   1406c:	cmp	r0, #0
   14070:	beq	14084 <argp_parse@@Base+0x1ccc>
   14074:	ldr	r4, [r0, #24]
   14078:	bl	13250 <argp_parse@@Base+0xe98>
   1407c:	subs	r0, r4, #0
   14080:	bne	14074 <argp_parse@@Base+0x1cbc>
   14084:	ldr	r3, [r5, #4]
   14088:	cmp	r3, #0
   1408c:	beq	140a0 <argp_parse@@Base+0x1ce8>
   14090:	ldr	r0, [r5]
   14094:	bl	13250 <argp_parse@@Base+0xe98>
   14098:	ldr	r0, [r5, #8]
   1409c:	bl	13250 <argp_parse@@Base+0xe98>
   140a0:	mov	r0, r5
   140a4:	pop	{r4, r5, r6, lr}
   140a8:	b	13250 <argp_parse@@Base+0xe98>
   140ac:	push	{r4, r5, r6, r7, r8, lr}
   140b0:	mov	r5, r1
   140b4:	ldr	r3, [r0, #28]
   140b8:	ldr	r1, [r0, #24]
   140bc:	ldr	r2, [r0, #16]
   140c0:	sub	r3, r3, r1
   140c4:	cmp	r3, r2
   140c8:	mov	r4, r0
   140cc:	bhi	14138 <argp_parse@@Base+0x1d80>
   140d0:	ldr	r1, [r4, #20]
   140d4:	mov	r6, #32
   140d8:	cmp	r1, #0
   140dc:	subge	r5, r5, r1
   140e0:	mov	r7, #1
   140e4:	cmp	r5, #0
   140e8:	sub	r5, r5, #1
   140ec:	ble	14118 <argp_parse@@Base+0x1d60>
   140f0:	ldr	r3, [r4, #28]
   140f4:	ldr	r2, [r4, #32]
   140f8:	cmp	r3, r2
   140fc:	bcs	1411c <argp_parse@@Base+0x1d64>
   14100:	add	r2, r3, #1
   14104:	cmp	r5, #0
   14108:	str	r2, [r4, #28]
   1410c:	sub	r5, r5, #1
   14110:	strb	r6, [r3]
   14114:	bgt	140f0 <argp_parse@@Base+0x1d38>
   14118:	pop	{r4, r5, r6, r7, r8, pc}
   1411c:	mov	r1, r7
   14120:	mov	r0, r4
   14124:	bl	18538 <argp_error@@Base+0x1490>
   14128:	cmp	r0, #0
   1412c:	beq	140e4 <argp_parse@@Base+0x1d2c>
   14130:	ldr	r3, [r4, #28]
   14134:	b	14100 <argp_parse@@Base+0x1d48>
   14138:	bl	17ea8 <argp_error@@Base+0xe00>
   1413c:	b	140d0 <argp_parse@@Base+0x1d18>
   14140:	push	{r4, r5, r6, lr}
   14144:	subs	r4, r2, #0
   14148:	popeq	{r4, r5, r6, pc}
   1414c:	ldr	ip, [r4, #20]
   14150:	cmp	ip, #0
   14154:	popeq	{r4, r5, r6, pc}
   14158:	mov	r6, r1
   1415c:	mov	r5, r0
   14160:	mov	r1, r3
   14164:	mov	r0, r4
   14168:	bl	130f4 <argp_parse@@Base+0xd3c>
   1416c:	ldr	r3, [r4, #20]
   14170:	mov	r1, r5
   14174:	mov	r2, r0
   14178:	mov	r0, r6
   1417c:	pop	{r4, r5, r6, lr}
   14180:	bx	r3
   14184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14188:	mov	r5, r2
   1418c:	sub	sp, sp, #12
   14190:	mov	r2, r1
   14194:	ldr	r3, [r5, #16]
   14198:	ldr	r1, [pc, #488]	; 14388 <argp_parse@@Base+0x1fd0>
   1419c:	mov	r8, r0
   141a0:	bl	14140 <argp_parse@@Base+0x1d88>
   141a4:	subs	r6, r0, #0
   141a8:	beq	142b4 <argp_parse@@Base+0x1efc>
   141ac:	ldrb	r3, [r6]
   141b0:	cmp	r3, #0
   141b4:	beq	142a8 <argp_parse@@Base+0x1ef0>
   141b8:	ldr	r3, [r5, #8]
   141bc:	ldr	r3, [r3]
   141c0:	cmp	r3, #0
   141c4:	beq	141ec <argp_parse@@Base+0x1e34>
   141c8:	ldr	r4, [r5, #4]
   141cc:	ldr	r3, [r4, #28]
   141d0:	ldr	r2, [r4, #32]
   141d4:	cmp	r3, r2
   141d8:	bcs	1436c <argp_parse@@Base+0x1fb4>
   141dc:	add	r1, r3, #1
   141e0:	mov	r2, #10
   141e4:	str	r1, [r4, #28]
   141e8:	strb	r2, [r3]
   141ec:	ldr	sl, [pc, #408]	; 1438c <argp_parse@@Base+0x1fd4>
   141f0:	ldr	r0, [r5, #4]
   141f4:	ldr	r1, [sl, #24]
   141f8:	bl	140ac <argp_parse@@Base+0x1cf4>
   141fc:	ldr	r4, [r5, #4]
   14200:	ldr	r9, [sl, #24]
   14204:	ldr	r7, [r4, #28]
   14208:	ldr	r3, [r4, #24]
   1420c:	ldr	r2, [r4, #16]
   14210:	sub	r3, r7, r3
   14214:	cmp	r3, r2
   14218:	strls	r9, [r4, #4]
   1421c:	movls	fp, r4
   14220:	bhi	142f0 <argp_parse@@Base+0x1f38>
   14224:	str	r9, [fp, #12]
   14228:	mov	r0, r6
   1422c:	bl	111bc <strlen@plt>
   14230:	subs	r9, r0, #0
   14234:	beq	1426c <argp_parse@@Base+0x1eb4>
   14238:	ldr	r2, [r4, #32]
   1423c:	add	r3, r7, r9
   14240:	cmp	r2, r3
   14244:	bcc	142d4 <argp_parse@@Base+0x1f1c>
   14248:	mov	r2, r9
   1424c:	mov	r0, r7
   14250:	mov	r1, r6
   14254:	bl	110a8 <memcpy@plt>
   14258:	ldr	r3, [r4, #28]
   1425c:	add	r9, r3, r9
   14260:	str	r9, [r4, #28]
   14264:	ldr	r4, [r5, #4]
   14268:	ldr	r7, [r4, #28]
   1426c:	ldr	r3, [r4, #24]
   14270:	ldr	r2, [r4, #16]
   14274:	sub	r3, r7, r3
   14278:	cmp	r3, r2
   1427c:	movls	r9, r4
   14280:	bhi	1433c <argp_parse@@Base+0x1f84>
   14284:	ldr	r2, [r9, #32]
   14288:	mov	r3, #0
   1428c:	cmp	r2, r7
   14290:	str	r3, [r4, #4]
   14294:	bls	14350 <argp_parse@@Base+0x1f98>
   14298:	add	r2, r7, #1
   1429c:	mov	r3, #10
   142a0:	str	r2, [r9, #28]
   142a4:	strb	r3, [r7]
   142a8:	ldr	r3, [r5, #8]
   142ac:	mov	r2, #1
   142b0:	str	r2, [r3, #4]
   142b4:	cmp	r8, r6
   142b8:	beq	142cc <argp_parse@@Base+0x1f14>
   142bc:	mov	r0, r6
   142c0:	add	sp, sp, #12
   142c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142c8:	b	13250 <argp_parse@@Base+0xe98>
   142cc:	add	sp, sp, #12
   142d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d4:	mov	r1, r9
   142d8:	mov	r0, r4
   142dc:	bl	18538 <argp_error@@Base+0x1490>
   142e0:	cmp	r0, #0
   142e4:	beq	14264 <argp_parse@@Base+0x1eac>
   142e8:	ldr	r7, [r4, #28]
   142ec:	b	14248 <argp_parse@@Base+0x1e90>
   142f0:	mov	r0, r4
   142f4:	str	r9, [sp, #4]
   142f8:	bl	17ea8 <argp_error@@Base+0xe00>
   142fc:	ldr	fp, [r5, #4]
   14300:	ldr	r3, [sp, #4]
   14304:	ldr	r9, [sl, #24]
   14308:	ldr	r7, [fp, #28]
   1430c:	ldr	r2, [fp, #24]
   14310:	ldr	r1, [fp, #16]
   14314:	sub	r2, r7, r2
   14318:	cmp	r2, r1
   1431c:	str	r3, [r4, #4]
   14320:	movls	r4, fp
   14324:	bls	14224 <argp_parse@@Base+0x1e6c>
   14328:	mov	r0, fp
   1432c:	bl	17ea8 <argp_error@@Base+0xe00>
   14330:	ldr	r4, [r5, #4]
   14334:	ldr	r7, [r4, #28]
   14338:	b	14224 <argp_parse@@Base+0x1e6c>
   1433c:	mov	r0, r4
   14340:	bl	17ea8 <argp_error@@Base+0xe00>
   14344:	ldr	r9, [r5, #4]
   14348:	ldr	r7, [r9, #28]
   1434c:	b	14284 <argp_parse@@Base+0x1ecc>
   14350:	mov	r1, #1
   14354:	mov	r0, r9
   14358:	bl	18538 <argp_error@@Base+0x1490>
   1435c:	cmp	r0, #0
   14360:	beq	142a8 <argp_parse@@Base+0x1ef0>
   14364:	ldr	r7, [r9, #28]
   14368:	b	14298 <argp_parse@@Base+0x1ee0>
   1436c:	mov	r1, #1
   14370:	mov	r0, r4
   14374:	bl	18538 <argp_error@@Base+0x1490>
   14378:	cmp	r0, #0
   1437c:	beq	141ec <argp_parse@@Base+0x1e34>
   14380:	ldr	r3, [r4, #28]
   14384:	b	141dc <argp_parse@@Base+0x1e24>
   14388:	andeq	r0, r0, #3
   1438c:	andeq	sl, r2, ip, ror #6
   14390:	ldr	r3, [r1, #12]
   14394:	push	{r4, r5, r6, r7, r8, lr}
   14398:	cmp	r3, #0
   1439c:	mov	r4, r1
   143a0:	mov	r6, r0
   143a4:	beq	1448c <argp_parse@@Base+0x20d4>
   143a8:	ldr	r3, [r1, #8]
   143ac:	ldr	r2, [r1]
   143b0:	ldr	r7, [r3]
   143b4:	ldr	r3, [r3, #4]
   143b8:	ldr	r5, [r2, #16]
   143bc:	cmp	r3, #0
   143c0:	cmpne	r7, #0
   143c4:	beq	143fc <argp_parse@@Base+0x2044>
   143c8:	ldr	r2, [r2, #12]
   143cc:	ldr	r3, [r7, #12]
   143d0:	cmp	r2, r3
   143d4:	beq	143fc <argp_parse@@Base+0x2044>
   143d8:	ldr	r8, [r1, #4]
   143dc:	ldr	r3, [r8, #28]
   143e0:	ldr	r2, [r8, #32]
   143e4:	cmp	r3, r2
   143e8:	bcs	1451c <argp_parse@@Base+0x2164>
   143ec:	add	r1, r3, #1
   143f0:	mov	r2, #10
   143f4:	str	r1, [r8, #28]
   143f8:	strb	r2, [r3]
   143fc:	cmp	r5, #0
   14400:	beq	144e8 <argp_parse@@Base+0x2130>
   14404:	ldr	r0, [r5]
   14408:	cmp	r0, #0
   1440c:	beq	144e8 <argp_parse@@Base+0x2130>
   14410:	ldrb	r3, [r0]
   14414:	cmp	r3, #0
   14418:	beq	144e8 <argp_parse@@Base+0x2130>
   1441c:	cmp	r7, #0
   14420:	beq	14450 <argp_parse@@Base+0x2098>
   14424:	ldr	r3, [r7, #16]
   14428:	cmp	r5, r3
   1442c:	beq	144e8 <argp_parse@@Base+0x2130>
   14430:	cmp	r3, #0
   14434:	beq	14450 <argp_parse@@Base+0x2098>
   14438:	ldr	r3, [r3, #12]
   1443c:	cmp	r3, #0
   14440:	cmpne	r5, r3
   14444:	bne	14438 <argp_parse@@Base+0x2080>
   14448:	cmp	r5, r3
   1444c:	beq	144e8 <argp_parse@@Base+0x2130>
   14450:	ldr	r3, [r4, #4]
   14454:	ldr	r1, [r5, #16]
   14458:	mov	r2, r4
   1445c:	ldr	r7, [r3, #12]
   14460:	bl	14184 <argp_parse@@Base+0x1dcc>
   14464:	ldr	r5, [r4, #4]
   14468:	mov	r0, r5
   1446c:	ldr	r3, [r5, #28]
   14470:	ldr	r1, [r5, #24]
   14474:	ldr	r2, [r5, #16]
   14478:	sub	r3, r3, r1
   1447c:	cmp	r3, r2
   14480:	bhi	14510 <argp_parse@@Base+0x2158>
   14484:	str	r7, [r5, #12]
   14488:	b	144ec <argp_parse@@Base+0x2134>
   1448c:	ldr	r5, [r1, #4]
   14490:	ldr	r3, [r5, #28]
   14494:	ldr	r1, [r5, #32]
   14498:	add	r2, r3, #2
   1449c:	cmp	r1, r2
   144a0:	bcc	144cc <argp_parse@@Base+0x2114>
   144a4:	ldr	r2, [pc, #140]	; 14538 <argp_parse@@Base+0x2180>
   144a8:	mov	r1, r6
   144ac:	ldrh	r2, [r2]
   144b0:	strh	r2, [r3]
   144b4:	ldr	r3, [r5, #28]
   144b8:	ldr	r0, [r4, #4]
   144bc:	add	r3, r3, #2
   144c0:	str	r3, [r5, #28]
   144c4:	pop	{r4, r5, r6, r7, r8, lr}
   144c8:	b	140ac <argp_parse@@Base+0x1cf4>
   144cc:	mov	r1, #2
   144d0:	mov	r0, r5
   144d4:	bl	18538 <argp_error@@Base+0x1490>
   144d8:	cmp	r0, #0
   144dc:	beq	14500 <argp_parse@@Base+0x2148>
   144e0:	ldr	r3, [r5, #28]
   144e4:	b	144a4 <argp_parse@@Base+0x20ec>
   144e8:	ldr	r0, [r4, #4]
   144ec:	mov	r3, #0
   144f0:	str	r3, [r4, #12]
   144f4:	mov	r1, r6
   144f8:	pop	{r4, r5, r6, r7, r8, lr}
   144fc:	b	140ac <argp_parse@@Base+0x1cf4>
   14500:	ldr	r0, [r4, #4]
   14504:	mov	r1, r6
   14508:	pop	{r4, r5, r6, r7, r8, lr}
   1450c:	b	140ac <argp_parse@@Base+0x1cf4>
   14510:	bl	17ea8 <argp_error@@Base+0xe00>
   14514:	ldr	r0, [r4, #4]
   14518:	b	14484 <argp_parse@@Base+0x20cc>
   1451c:	mov	r1, #1
   14520:	mov	r0, r8
   14524:	bl	18538 <argp_error@@Base+0x1490>
   14528:	cmp	r0, #0
   1452c:	beq	143fc <argp_parse@@Base+0x2044>
   14530:	ldr	r3, [r8, #28]
   14534:	b	143ec <argp_parse@@Base+0x2034>
   14538:	strdeq	r9, [r1], -ip
   1453c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14540:	mov	r7, r3
   14544:	ldr	sl, [r0, #12]
   14548:	sub	sp, sp, #36	; 0x24
   1454c:	ldr	r3, [r0, #16]
   14550:	cmp	sl, #0
   14554:	mov	fp, r0
   14558:	mov	r6, r2
   1455c:	str	r3, [sp, #16]
   14560:	mov	r9, r1
   14564:	ldr	r8, [sp, #72]	; 0x48
   14568:	ldr	r5, [sp, #76]	; 0x4c
   1456c:	beq	1493c <argp_parse@@Base+0x2584>
   14570:	mov	r1, #11
   14574:	mov	r0, sl
   14578:	bl	111c8 <strchr@plt>
   1457c:	cmp	r6, #0
   14580:	bne	14858 <argp_parse@@Base+0x24a0>
   14584:	cmp	r0, #0
   14588:	ldr	r3, [fp, #20]
   1458c:	beq	14a94 <argp_parse@@Base+0x26dc>
   14590:	cmp	r3, #0
   14594:	sub	r4, r0, sl
   14598:	beq	14a2c <argp_parse@@Base+0x2674>
   1459c:	cmp	r4, #0
   145a0:	beq	149cc <argp_parse@@Base+0x2614>
   145a4:	mov	r0, sl
   145a8:	mov	r1, r4
   145ac:	bl	1109c <strndup@plt>
   145b0:	mov	r3, #1
   145b4:	str	r3, [sp, #24]
   145b8:	mov	sl, r0
   145bc:	adds	r3, r0, #0
   145c0:	movne	r3, #1
   145c4:	str	r3, [sp, #20]
   145c8:	mov	r1, r9
   145cc:	mov	r0, fp
   145d0:	bl	130f4 <argp_parse@@Base+0xd3c>
   145d4:	ldr	r3, [fp, #20]
   145d8:	str	r0, [sp, #12]
   145dc:	ldr	r0, [pc, #1272]	; 14adc <argp_parse@@Base+0x2724>
   145e0:	ldr	r2, [sp, #12]
   145e4:	mov	r1, sl
   145e8:	blx	r3
   145ec:	subs	r3, r0, #0
   145f0:	beq	1497c <argp_parse@@Base+0x25c4>
   145f4:	cmp	r7, #0
   145f8:	beq	1461c <argp_parse@@Base+0x2264>
   145fc:	ldr	r2, [r5, #28]
   14600:	ldr	r1, [r5, #32]
   14604:	cmp	r2, r1
   14608:	bcs	14984 <argp_parse@@Base+0x25cc>
   1460c:	add	r0, r2, #1
   14610:	mov	r1, #10
   14614:	str	r0, [r5, #28]
   14618:	strb	r1, [r2]
   1461c:	ldr	r2, [sp, #24]
   14620:	cmp	r3, sl
   14624:	movne	r2, #0
   14628:	andeq	r2, r2, #1
   1462c:	cmp	r2, #0
   14630:	beq	1489c <argp_parse@@Base+0x24e4>
   14634:	ldr	r0, [r5, #28]
   14638:	ldr	r1, [r5, #32]
   1463c:	add	r2, r0, r4
   14640:	cmp	r1, r2
   14644:	bcs	148fc <argp_parse@@Base+0x2544>
   14648:	mov	r1, r4
   1464c:	mov	r0, r5
   14650:	str	r3, [sp, #24]
   14654:	bl	18538 <argp_error@@Base+0x1490>
   14658:	ldr	r3, [sp, #24]
   1465c:	cmp	r0, #0
   14660:	bne	148f8 <argp_parse@@Base+0x2540>
   14664:	ldr	r4, [r5, #28]
   14668:	ldr	r1, [r5, #24]
   1466c:	ldr	r2, [r5, #16]
   14670:	sub	r4, r4, r1
   14674:	cmp	r4, r2
   14678:	bhi	14920 <argp_parse@@Base+0x2568>
   1467c:	ldr	r2, [r5, #20]
   14680:	ldr	r1, [r5, #4]
   14684:	bic	r2, r2, r2, asr #31
   14688:	cmp	r1, r2
   1468c:	bcs	146b0 <argp_parse@@Base+0x22f8>
   14690:	ldr	r2, [r5, #28]
   14694:	ldr	r1, [r5, #32]
   14698:	cmp	r2, r1
   1469c:	bcs	149a8 <argp_parse@@Base+0x25f0>
   146a0:	add	r0, r2, #1
   146a4:	mov	r1, #10
   146a8:	str	r0, [r5, #28]
   146ac:	strb	r1, [r2]
   146b0:	cmp	r3, sl
   146b4:	moveq	r4, #1
   146b8:	beq	146c8 <argp_parse@@Base+0x2310>
   146bc:	mov	r0, r3
   146c0:	bl	13250 <argp_parse@@Base+0xe98>
   146c4:	mov	r4, #1
   146c8:	ldr	r3, [sp, #20]
   146cc:	cmp	r3, #0
   146d0:	beq	146e8 <argp_parse@@Base+0x2330>
   146d4:	ldr	r3, [fp, #20]
   146d8:	cmp	r3, #0
   146dc:	beq	147cc <argp_parse@@Base+0x2414>
   146e0:	mov	r0, sl
   146e4:	bl	13250 <argp_parse@@Base+0xe98>
   146e8:	cmp	r6, #0
   146ec:	beq	147cc <argp_parse@@Base+0x2414>
   146f0:	ldr	r3, [fp, #20]
   146f4:	cmp	r3, #0
   146f8:	beq	147cc <argp_parse@@Base+0x2414>
   146fc:	ldr	r2, [sp, #12]
   14700:	mov	r1, #0
   14704:	ldr	r0, [pc, #980]	; 14ae0 <argp_parse@@Base+0x2728>
   14708:	blx	r3
   1470c:	subs	sl, r0, #0
   14710:	beq	147cc <argp_parse@@Base+0x2414>
   14714:	orrs	r3, r7, r4
   14718:	beq	1473c <argp_parse@@Base+0x2384>
   1471c:	ldr	r3, [r5, #28]
   14720:	ldr	r2, [r5, #32]
   14724:	cmp	r3, r2
   14728:	bcs	14a64 <argp_parse@@Base+0x26ac>
   1472c:	add	r1, r3, #1
   14730:	mov	r2, #10
   14734:	str	r1, [r5, #28]
   14738:	strb	r2, [r3]
   1473c:	mov	r0, sl
   14740:	bl	111bc <strlen@plt>
   14744:	subs	r4, r0, #0
   14748:	beq	14774 <argp_parse@@Base+0x23bc>
   1474c:	ldr	r0, [r5, #28]
   14750:	ldr	r2, [r5, #32]
   14754:	add	r3, r0, r4
   14758:	cmp	r2, r3
   1475c:	bcs	149dc <argp_parse@@Base+0x2624>
   14760:	mov	r1, r4
   14764:	mov	r0, r5
   14768:	bl	18538 <argp_error@@Base+0x1490>
   1476c:	cmp	r0, #0
   14770:	bne	149d8 <argp_parse@@Base+0x2620>
   14774:	mov	r0, sl
   14778:	bl	13250 <argp_parse@@Base+0xe98>
   1477c:	ldr	r3, [r5, #28]
   14780:	ldr	r1, [r5, #24]
   14784:	ldr	r2, [r5, #16]
   14788:	sub	r3, r3, r1
   1478c:	cmp	r3, r2
   14790:	bhi	149f8 <argp_parse@@Base+0x2640>
   14794:	ldr	r3, [r5, #20]
   14798:	ldr	r2, [r5, #4]
   1479c:	bic	r3, r3, r3, asr #31
   147a0:	cmp	r2, r3
   147a4:	bcs	14934 <argp_parse@@Base+0x257c>
   147a8:	ldr	r3, [r5, #28]
   147ac:	ldr	r2, [r5, #32]
   147b0:	cmp	r3, r2
   147b4:	bcs	14a48 <argp_parse@@Base+0x2690>
   147b8:	mov	r4, #1
   147bc:	add	r2, r3, r4
   147c0:	str	r2, [r5, #28]
   147c4:	mov	r2, #10
   147c8:	strb	r2, [r3]
   147cc:	ldr	fp, [sp, #16]
   147d0:	cmp	fp, #0
   147d4:	beq	1484c <argp_parse@@Base+0x2494>
   147d8:	ldr	r3, [fp]
   147dc:	cmp	r3, #0
   147e0:	beq	1484c <argp_parse@@Base+0x2494>
   147e4:	eor	r2, r4, #1
   147e8:	and	r2, r2, #1
   147ec:	clz	sl, r8
   147f0:	lsr	sl, sl, #5
   147f4:	orrs	r2, sl, r2
   147f8:	bne	14814 <argp_parse@@Base+0x245c>
   147fc:	b	14a80 <argp_parse@@Base+0x26c8>
   14800:	cmp	r4, #0
   14804:	movne	r2, sl
   14808:	orreq	r2, sl, #1
   1480c:	cmp	r2, #0
   14810:	beq	1484c <argp_parse@@Base+0x2494>
   14814:	orrs	r2, r7, r4
   14818:	mov	r0, r3
   1481c:	str	r5, [sp, #4]
   14820:	movne	r3, #1
   14824:	moveq	r3, #0
   14828:	str	r8, [sp]
   1482c:	mov	r2, r6
   14830:	mov	r1, r9
   14834:	bl	1453c <argp_parse@@Base+0x2184>
   14838:	ldr	r3, [fp, #16]
   1483c:	add	fp, fp, #16
   14840:	cmp	r3, #0
   14844:	orr	r4, r4, r0
   14848:	bne	14800 <argp_parse@@Base+0x2448>
   1484c:	mov	r0, r4
   14850:	add	sp, sp, #36	; 0x24
   14854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14858:	cmp	r0, #0
   1485c:	addne	sl, r0, #1
   14860:	beq	14a24 <argp_parse@@Base+0x266c>
   14864:	ldr	r3, [fp, #20]
   14868:	cmp	r3, #0
   1486c:	beq	14a04 <argp_parse@@Base+0x264c>
   14870:	mov	r3, #0
   14874:	mov	r1, r9
   14878:	mov	r0, fp
   1487c:	mov	r4, r3
   14880:	str	r3, [sp, #20]
   14884:	bl	130f4 <argp_parse@@Base+0xd3c>
   14888:	str	r4, [sp, #24]
   1488c:	ldr	r3, [fp, #20]
   14890:	str	r0, [sp, #12]
   14894:	ldr	r0, [pc, #584]	; 14ae4 <argp_parse@@Base+0x272c>
   14898:	b	145e0 <argp_parse@@Base+0x2228>
   1489c:	mov	r0, r3
   148a0:	str	r3, [sp, #24]
   148a4:	bl	111bc <strlen@plt>
   148a8:	ldr	r3, [sp, #24]
   148ac:	subs	r4, r0, #0
   148b0:	beq	14664 <argp_parse@@Base+0x22ac>
   148b4:	ldr	r0, [r5, #28]
   148b8:	ldr	r1, [r5, #32]
   148bc:	add	r2, r0, r4
   148c0:	cmp	r1, r2
   148c4:	bcs	148e8 <argp_parse@@Base+0x2530>
   148c8:	mov	r1, r4
   148cc:	mov	r0, r5
   148d0:	str	r3, [sp, #24]
   148d4:	bl	18538 <argp_error@@Base+0x1490>
   148d8:	ldr	r3, [sp, #24]
   148dc:	cmp	r0, #0
   148e0:	beq	14664 <argp_parse@@Base+0x22ac>
   148e4:	ldr	r0, [r5, #28]
   148e8:	mov	r2, r4
   148ec:	mov	r1, r3
   148f0:	str	r3, [sp, #24]
   148f4:	b	14908 <argp_parse@@Base+0x2550>
   148f8:	ldr	r0, [r5, #28]
   148fc:	mov	r2, r4
   14900:	mov	r1, sl
   14904:	str	r3, [sp, #24]
   14908:	bl	110a8 <memcpy@plt>
   1490c:	ldr	r2, [r5, #28]
   14910:	ldr	r3, [sp, #24]
   14914:	add	r4, r2, r4
   14918:	str	r4, [r5, #28]
   1491c:	b	14668 <argp_parse@@Base+0x22b0>
   14920:	mov	r0, r5
   14924:	str	r3, [sp, #24]
   14928:	bl	17ea8 <argp_error@@Base+0xe00>
   1492c:	ldr	r3, [sp, #24]
   14930:	b	1467c <argp_parse@@Base+0x22c4>
   14934:	mov	r4, #1
   14938:	b	147cc <argp_parse@@Base+0x2414>
   1493c:	ldr	r4, [r0, #20]
   14940:	cmp	r4, #0
   14944:	beq	14a8c <argp_parse@@Base+0x26d4>
   14948:	bl	130f4 <argp_parse@@Base+0xd3c>
   1494c:	cmp	r6, #0
   14950:	ldr	r3, [fp, #20]
   14954:	strne	sl, [sp, #20]
   14958:	strne	sl, [sp, #24]
   1495c:	movne	r4, sl
   14960:	streq	r6, [sp, #20]
   14964:	streq	r6, [sp, #24]
   14968:	moveq	r4, r6
   1496c:	str	r0, [sp, #12]
   14970:	ldrne	r0, [pc, #364]	; 14ae4 <argp_parse@@Base+0x272c>
   14974:	ldreq	r0, [pc, #352]	; 14adc <argp_parse@@Base+0x2724>
   14978:	b	145e0 <argp_parse@@Base+0x2228>
   1497c:	mov	r4, r3
   14980:	b	146c8 <argp_parse@@Base+0x2310>
   14984:	mov	r1, #1
   14988:	mov	r0, r5
   1498c:	str	r3, [sp, #28]
   14990:	bl	18538 <argp_error@@Base+0x1490>
   14994:	ldr	r3, [sp, #28]
   14998:	cmp	r0, #0
   1499c:	beq	1461c <argp_parse@@Base+0x2264>
   149a0:	ldr	r2, [r5, #28]
   149a4:	b	1460c <argp_parse@@Base+0x2254>
   149a8:	mov	r1, #1
   149ac:	mov	r0, r5
   149b0:	str	r3, [sp, #24]
   149b4:	bl	18538 <argp_error@@Base+0x1490>
   149b8:	ldr	r3, [sp, #24]
   149bc:	cmp	r0, #0
   149c0:	beq	146b0 <argp_parse@@Base+0x22f8>
   149c4:	ldr	r2, [r5, #28]
   149c8:	b	146a0 <argp_parse@@Base+0x22e8>
   149cc:	str	r4, [sp, #20]
   149d0:	str	r4, [sp, #24]
   149d4:	b	145c8 <argp_parse@@Base+0x2210>
   149d8:	ldr	r0, [r5, #28]
   149dc:	mov	r2, r4
   149e0:	mov	r1, sl
   149e4:	bl	110a8 <memcpy@plt>
   149e8:	ldr	r3, [r5, #28]
   149ec:	add	r4, r3, r4
   149f0:	str	r4, [r5, #28]
   149f4:	b	14774 <argp_parse@@Base+0x23bc>
   149f8:	mov	r0, r5
   149fc:	bl	17ea8 <argp_error@@Base+0xe00>
   14a00:	b	14794 <argp_parse@@Base+0x23dc>
   14a04:	cmp	sl, #0
   14a08:	beq	14a88 <argp_parse@@Base+0x26d0>
   14a0c:	str	r3, [sp, #20]
   14a10:	str	r3, [sp, #24]
   14a14:	mov	r4, r3
   14a18:	str	r3, [sp, #12]
   14a1c:	mov	r3, sl
   14a20:	b	145f4 <argp_parse@@Base+0x223c>
   14a24:	mov	sl, r0
   14a28:	b	14864 <argp_parse@@Base+0x24ac>
   14a2c:	adds	r3, r4, #0
   14a30:	movne	r3, #1
   14a34:	str	r3, [sp, #24]
   14a38:	str	r3, [sp, #20]
   14a3c:	str	r6, [sp, #12]
   14a40:	mov	r3, sl
   14a44:	b	145f4 <argp_parse@@Base+0x223c>
   14a48:	mov	r1, #1
   14a4c:	mov	r0, r5
   14a50:	bl	18538 <argp_error@@Base+0x1490>
   14a54:	cmp	r0, #0
   14a58:	beq	14934 <argp_parse@@Base+0x257c>
   14a5c:	ldr	r3, [r5, #28]
   14a60:	b	147b8 <argp_parse@@Base+0x2400>
   14a64:	mov	r1, #1
   14a68:	mov	r0, r5
   14a6c:	bl	18538 <argp_error@@Base+0x1490>
   14a70:	cmp	r0, #0
   14a74:	beq	1473c <argp_parse@@Base+0x2384>
   14a78:	ldr	r3, [r5, #28]
   14a7c:	b	1472c <argp_parse@@Base+0x2374>
   14a80:	mov	r4, #1
   14a84:	b	1484c <argp_parse@@Base+0x2494>
   14a88:	mov	r4, sl
   14a8c:	str	r4, [sp, #12]
   14a90:	b	146e8 <argp_parse@@Base+0x2330>
   14a94:	cmp	r3, #0
   14a98:	beq	14ac4 <argp_parse@@Base+0x270c>
   14a9c:	mov	r1, r9
   14aa0:	mov	r0, fp
   14aa4:	bl	130f4 <argp_parse@@Base+0xd3c>
   14aa8:	mov	r4, r6
   14aac:	ldr	r3, [fp, #20]
   14ab0:	str	r6, [sp, #20]
   14ab4:	str	r6, [sp, #24]
   14ab8:	str	r0, [sp, #12]
   14abc:	ldr	r0, [pc, #24]	; 14adc <argp_parse@@Base+0x2724>
   14ac0:	b	145e0 <argp_parse@@Base+0x2228>
   14ac4:	mov	r3, sl
   14ac8:	str	r6, [sp, #20]
   14acc:	str	r6, [sp, #24]
   14ad0:	mov	r4, r6
   14ad4:	str	r6, [sp, #12]
   14ad8:	b	145f4 <argp_parse@@Base+0x223c>
   14adc:	andeq	r0, r0, #1
   14ae0:	andeq	r0, r0, #4
   14ae4:	andeq	r0, r0, #2
   14ae8:	ldr	r3, [r0, #12]
   14aec:	ldr	r2, [r1, #12]
   14af0:	push	{r4, r5, r6, lr}
   14af4:	cmp	r3, r2
   14af8:	beq	14b48 <argp_parse@@Base+0x2790>
   14afc:	mov	r5, r1
   14b00:	mov	r4, r0
   14b04:	mov	r1, r2
   14b08:	mov	r0, r3
   14b0c:	bl	14ae8 <argp_parse@@Base+0x2730>
   14b10:	cmp	r0, #0
   14b14:	popne	{r4, r5, r6, pc}
   14b18:	ldr	r3, [r5, #8]
   14b1c:	ldr	r0, [r4, #8]
   14b20:	mvn	r2, r3
   14b24:	lsr	r2, r2, #31
   14b28:	cmp	r2, r0, lsr #31
   14b2c:	subne	r0, r0, r3
   14b30:	subeq	r0, r3, r0
   14b34:	cmp	r0, #0
   14b38:	ldreq	r3, [r5, #4]
   14b3c:	ldreq	r0, [r4, #4]
   14b40:	subeq	r0, r3, r0
   14b44:	pop	{r4, r5, r6, pc}
   14b48:	ldr	r3, [r1, #8]
   14b4c:	ldr	r2, [r0, #8]
   14b50:	mvn	ip, r3
   14b54:	ldr	lr, [r1, #4]
   14b58:	lsr	ip, ip, #31
   14b5c:	cmp	ip, r2, lsr #31
   14b60:	ldr	r1, [r0, #4]
   14b64:	subne	r0, r2, r3
   14b68:	subeq	r0, r3, r2
   14b6c:	cmp	r0, #0
   14b70:	subeq	r0, lr, r1
   14b74:	pop	{r4, r5, r6, pc}
   14b78:	push	{r4, r5, r6, r7, r8, r9, lr}
   14b7c:	sub	sp, sp, #12
   14b80:	ldr	lr, [r0, #16]
   14b84:	cmp	lr, #0
   14b88:	movne	r2, lr
   14b8c:	bne	14b98 <argp_parse@@Base+0x27e0>
   14b90:	b	14e5c <argp_parse@@Base+0x2aa4>
   14b94:	mov	r2, r3
   14b98:	ldr	r3, [r2, #12]
   14b9c:	cmp	r3, #0
   14ba0:	bne	14b94 <argp_parse@@Base+0x27dc>
   14ba4:	ldr	ip, [r1, #16]
   14ba8:	ldr	r4, [r2, #8]
   14bac:	cmp	ip, #0
   14bb0:	movne	r2, ip
   14bb4:	bne	14bc0 <argp_parse@@Base+0x2808>
   14bb8:	b	14e70 <argp_parse@@Base+0x2ab8>
   14bbc:	mov	r2, r3
   14bc0:	ldr	r3, [r2, #12]
   14bc4:	cmp	r3, #0
   14bc8:	bne	14bbc <argp_parse@@Base+0x2804>
   14bcc:	ldr	r3, [r2, #8]
   14bd0:	mvn	r2, r3
   14bd4:	lsr	r2, r2, #31
   14bd8:	cmp	r2, r4, lsr #31
   14bdc:	subne	r4, r4, r3
   14be0:	subeq	r4, r3, r4
   14be4:	cmp	r4, #0
   14be8:	bne	14c50 <argp_parse@@Base+0x2898>
   14bec:	adds	r4, ip, #0
   14bf0:	movne	r4, #1
   14bf4:	cmp	lr, #0
   14bf8:	rsbeq	r4, r4, #0
   14bfc:	rsbne	r4, r4, #1
   14c00:	cmp	r4, #0
   14c04:	bne	14c50 <argp_parse@@Base+0x2898>
   14c08:	cmp	lr, #0
   14c0c:	mov	r5, r1
   14c10:	mov	r6, r0
   14c14:	beq	14c6c <argp_parse@@Base+0x28b4>
   14c18:	ldr	r0, [lr, #20]
   14c1c:	ldr	r2, [ip, #20]
   14c20:	cmp	r0, r2
   14c24:	ble	14e30 <argp_parse@@Base+0x2a78>
   14c28:	mov	r0, lr
   14c2c:	ldr	r0, [r0, #12]
   14c30:	ldr	r3, [r0, #20]
   14c34:	cmp	r2, r3
   14c38:	blt	14c2c <argp_parse@@Base+0x2874>
   14c3c:	mov	r1, ip
   14c40:	bl	14ae8 <argp_parse@@Base+0x2730>
   14c44:	cmp	r0, #0
   14c48:	movne	r4, r0
   14c4c:	moveq	r4, #1
   14c50:	mov	r0, r4
   14c54:	add	sp, sp, #12
   14c58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c5c:	mov	r0, lr
   14c60:	bl	14ae8 <argp_parse@@Base+0x2730>
   14c64:	subs	r4, r0, #0
   14c68:	bne	14c50 <argp_parse@@Base+0x2898>
   14c6c:	ldr	r4, [r5, #12]
   14c70:	ldr	r3, [r6, #12]
   14c74:	mvn	r2, r4
   14c78:	lsr	r2, r2, #31
   14c7c:	cmp	r2, r3, lsr #31
   14c80:	subne	r4, r3, r4
   14c84:	subeq	r4, r4, r3
   14c88:	cmp	r4, #0
   14c8c:	bne	14c50 <argp_parse@@Base+0x2898>
   14c90:	ldr	r2, [r6, #4]
   14c94:	ldr	lr, [r6]
   14c98:	cmp	r2, #0
   14c9c:	beq	14cc8 <argp_parse@@Base+0x2910>
   14ca0:	add	r3, lr, #24
   14ca4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14ca8:	cmp	r1, #0
   14cac:	beq	14cbc <argp_parse@@Base+0x2904>
   14cb0:	ldr	r0, [r3, #-12]
   14cb4:	tst	r0, #2
   14cb8:	beq	14e78 <argp_parse@@Base+0x2ac0>
   14cbc:	subs	r2, r2, #1
   14cc0:	add	r3, r3, #24
   14cc4:	bne	14ca4 <argp_parse@@Base+0x28ec>
   14cc8:	ldr	r2, [r5, #4]
   14ccc:	mov	ip, #0
   14cd0:	cmp	r2, ip
   14cd4:	str	ip, [sp]
   14cd8:	ldr	r3, [r5]
   14cdc:	beq	14ee8 <argp_parse@@Base+0x2b30>
   14ce0:	add	r3, r3, #24
   14ce4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14ce8:	cmp	r1, #0
   14cec:	beq	14cfc <argp_parse@@Base+0x2944>
   14cf0:	ldr	r0, [r3, #-12]
   14cf4:	tst	r0, #2
   14cf8:	beq	14d0c <argp_parse@@Base+0x2954>
   14cfc:	subs	r2, r2, #1
   14d00:	add	r3, r3, #24
   14d04:	bne	14ce4 <argp_parse@@Base+0x292c>
   14d08:	mov	r1, r2
   14d0c:	ldr	r3, [lr, #12]
   14d10:	str	r1, [sp, #4]
   14d14:	ands	r3, ip, r3, lsr #3
   14d18:	beq	14ee0 <argp_parse@@Base+0x2b28>
   14d1c:	mov	r0, sp
   14d20:	bl	13fe8 <argp_parse@@Base+0x1c30>
   14d24:	ldr	r3, [r5]
   14d28:	cmp	r0, #0
   14d2c:	bne	14ecc <argp_parse@@Base+0x2b14>
   14d30:	ldr	r3, [r3, #12]
   14d34:	tst	r3, #8
   14d38:	beq	14d60 <argp_parse@@Base+0x29a8>
   14d3c:	ldr	r3, [sp, #4]
   14d40:	cmp	r3, #0
   14d44:	beq	14d60 <argp_parse@@Base+0x29a8>
   14d48:	add	r0, sp, #4
   14d4c:	bl	13fe8 <argp_parse@@Base+0x1c30>
   14d50:	cmp	r0, #0
   14d54:	subne	r4, r4, #1
   14d58:	cmp	r4, #0
   14d5c:	bne	14c50 <argp_parse@@Base+0x2898>
   14d60:	ldr	r2, [r6, #20]
   14d64:	mov	r0, r6
   14d68:	mov	r3, #0
   14d6c:	ldr	r2, [r2, #24]
   14d70:	ldr	r1, [pc, #408]	; 14f10 <argp_parse@@Base+0x2b58>
   14d74:	bl	13eac <argp_parse@@Base+0x1af4>
   14d78:	ldr	r2, [r5, #20]
   14d7c:	mov	r3, #0
   14d80:	ldr	r1, [pc, #392]	; 14f10 <argp_parse@@Base+0x2b58>
   14d84:	ldr	r2, [r2, #24]
   14d88:	uxtb	r6, r0
   14d8c:	mov	r0, r5
   14d90:	bl	13eac <argp_parse@@Base+0x1af4>
   14d94:	cmp	r6, #0
   14d98:	lslne	r4, r6, #2
   14d9c:	movne	r7, r6
   14da0:	uxtb	r5, r0
   14da4:	beq	14eb0 <argp_parse@@Base+0x2af8>
   14da8:	cmp	r5, #0
   14dac:	lslne	r9, r5, #2
   14db0:	movne	r8, r5
   14db4:	beq	14e94 <argp_parse@@Base+0x2adc>
   14db8:	bl	1115c <__ctype_tolower_loc@plt>
   14dbc:	ldr	r3, [r0]
   14dc0:	ldr	r4, [r3, r4]
   14dc4:	ldr	r3, [r3, r9]
   14dc8:	subs	r4, r4, r3
   14dcc:	bne	14c50 <argp_parse@@Base+0x2898>
   14dd0:	subs	r4, r8, r7
   14dd4:	bne	14c50 <argp_parse@@Base+0x2898>
   14dd8:	adds	r4, r5, #0
   14ddc:	movne	r4, #1
   14de0:	cmp	r6, #0
   14de4:	rsbeq	r4, r4, #0
   14de8:	rsbne	r4, r4, #1
   14dec:	cmp	r4, #0
   14df0:	bne	14c50 <argp_parse@@Base+0x2898>
   14df4:	cmp	r6, #0
   14df8:	bne	14c50 <argp_parse@@Base+0x2898>
   14dfc:	ldm	sp, {r0, r1}
   14e00:	adds	r4, r1, #0
   14e04:	movne	r4, #1
   14e08:	cmp	r0, #0
   14e0c:	rsbeq	r4, r4, #0
   14e10:	rsbne	r4, r4, #1
   14e14:	cmp	r4, #0
   14e18:	bne	14c50 <argp_parse@@Base+0x2898>
   14e1c:	cmp	r0, #0
   14e20:	beq	14c50 <argp_parse@@Base+0x2898>
   14e24:	bl	110f0 <strcasecmp@plt>
   14e28:	mov	r4, r0
   14e2c:	b	14c50 <argp_parse@@Base+0x2898>
   14e30:	mov	r1, ip
   14e34:	bge	14c5c <argp_parse@@Base+0x28a4>
   14e38:	ldr	r1, [r1, #12]
   14e3c:	ldr	r3, [r1, #20]
   14e40:	cmp	r0, r3
   14e44:	blt	14e38 <argp_parse@@Base+0x2a80>
   14e48:	mov	r0, lr
   14e4c:	bl	14ae8 <argp_parse@@Base+0x2730>
   14e50:	subs	r4, r0, #0
   14e54:	mvneq	r4, #0
   14e58:	b	14c50 <argp_parse@@Base+0x2898>
   14e5c:	ldr	ip, [r1, #16]
   14e60:	ldr	r4, [r0, #12]
   14e64:	cmp	ip, #0
   14e68:	movne	r2, ip
   14e6c:	bne	14bc0 <argp_parse@@Base+0x2808>
   14e70:	ldr	r3, [r1, #12]
   14e74:	b	14bd0 <argp_parse@@Base+0x2818>
   14e78:	ldr	r2, [r5, #4]
   14e7c:	str	r1, [sp]
   14e80:	cmp	r2, #0
   14e84:	ldr	r3, [r5]
   14e88:	beq	14ef0 <argp_parse@@Base+0x2b38>
   14e8c:	mov	ip, #1
   14e90:	b	14ce0 <argp_parse@@Base+0x2928>
   14e94:	ldr	r3, [sp, #4]
   14e98:	cmp	r3, #0
   14e9c:	moveq	r9, r5
   14ea0:	ldrbne	r8, [r3]
   14ea4:	moveq	r8, r5
   14ea8:	lslne	r9, r8, #2
   14eac:	b	14db8 <argp_parse@@Base+0x2a00>
   14eb0:	ldr	r3, [sp]
   14eb4:	cmp	r3, #0
   14eb8:	moveq	r4, r6
   14ebc:	ldrbne	r7, [r3]
   14ec0:	moveq	r7, r6
   14ec4:	lslne	r4, r7, #2
   14ec8:	b	14da8 <argp_parse@@Base+0x29f0>
   14ecc:	ldr	r3, [r3, #12]
   14ed0:	tst	r3, #8
   14ed4:	bne	14efc <argp_parse@@Base+0x2b44>
   14ed8:	mov	r4, #1
   14edc:	b	14c50 <argp_parse@@Base+0x2898>
   14ee0:	ldr	r3, [r5]
   14ee4:	b	14d30 <argp_parse@@Base+0x2978>
   14ee8:	str	r2, [sp, #4]
   14eec:	b	14d60 <argp_parse@@Base+0x29a8>
   14ef0:	mov	r1, r2
   14ef4:	mov	ip, #1
   14ef8:	b	14d0c <argp_parse@@Base+0x2954>
   14efc:	ldr	r3, [sp, #4]
   14f00:	mov	r4, #1
   14f04:	cmp	r3, #0
   14f08:	bne	14d48 <argp_parse@@Base+0x2990>
   14f0c:	b	14c50 <argp_parse@@Base+0x2898>
   14f10:	andeq	r3, r1, r4, lsr #31
   14f14:	ldr	r3, [r0, #28]
   14f18:	ldr	r2, [r0, #24]
   14f1c:	push	{r4, r5, r6, lr}
   14f20:	mov	r5, r1
   14f24:	ldr	r1, [r0, #16]
   14f28:	sub	r2, r3, r2
   14f2c:	cmp	r2, r1
   14f30:	mov	r4, r0
   14f34:	movls	r2, r3
   14f38:	bhi	14f94 <argp_parse@@Base+0x2bdc>
   14f3c:	ldr	r1, [r4, #20]
   14f40:	ldr	r0, [r4, #8]
   14f44:	cmp	r1, #0
   14f48:	addge	r5, r5, r1
   14f4c:	cmp	r5, r0
   14f50:	bcc	14f74 <argp_parse@@Base+0x2bbc>
   14f54:	ldr	r1, [r4, #32]
   14f58:	cmp	r1, r3
   14f5c:	bls	14fa4 <argp_parse@@Base+0x2bec>
   14f60:	add	r1, r2, #1
   14f64:	mov	r3, #10
   14f68:	str	r1, [r4, #28]
   14f6c:	strb	r3, [r2]
   14f70:	pop	{r4, r5, r6, pc}
   14f74:	ldr	r2, [r4, #32]
   14f78:	cmp	r2, r3
   14f7c:	bls	14fc0 <argp_parse@@Base+0x2c08>
   14f80:	add	r1, r3, #1
   14f84:	mov	r2, #32
   14f88:	str	r1, [r4, #28]
   14f8c:	strb	r2, [r3]
   14f90:	pop	{r4, r5, r6, pc}
   14f94:	bl	17ea8 <argp_error@@Base+0xe00>
   14f98:	ldr	r3, [r4, #28]
   14f9c:	mov	r2, r3
   14fa0:	b	14f3c <argp_parse@@Base+0x2b84>
   14fa4:	mov	r1, #1
   14fa8:	mov	r0, r4
   14fac:	bl	18538 <argp_error@@Base+0x1490>
   14fb0:	cmp	r0, #0
   14fb4:	popeq	{r4, r5, r6, pc}
   14fb8:	ldr	r2, [r4, #28]
   14fbc:	b	14f60 <argp_parse@@Base+0x2ba8>
   14fc0:	mov	r1, #1
   14fc4:	mov	r0, r4
   14fc8:	bl	18538 <argp_error@@Base+0x1490>
   14fcc:	cmp	r0, #0
   14fd0:	popeq	{r4, r5, r6, pc}
   14fd4:	ldr	r3, [r4, #28]
   14fd8:	b	14f80 <argp_parse@@Base+0x2bc8>
   14fdc:	push	{r4, r5, r6, lr}
   14fe0:	ldr	r5, [r0, #8]
   14fe4:	ldr	r2, [r0, #12]
   14fe8:	ldr	ip, [r1, #12]
   14fec:	cmp	r5, #0
   14ff0:	orr	r2, r2, ip
   14ff4:	beq	1505c <argp_parse@@Base+0x2ca4>
   14ff8:	tst	r2, #16
   14ffc:	bne	15038 <argp_parse@@Base+0x2c80>
   15000:	tst	r2, #1
   15004:	mov	r6, r3
   15008:	mov	r4, r0
   1500c:	bne	15040 <argp_parse@@Base+0x2c88>
   15010:	mov	r0, r5
   15014:	bl	111bc <strlen@plt>
   15018:	add	r1, r0, #6
   1501c:	mov	r0, r6
   15020:	bl	14f14 <argp_parse@@Base+0x2b5c>
   15024:	mov	r3, r5
   15028:	ldr	r2, [r4, #4]
   1502c:	mov	r0, r6
   15030:	ldr	r1, [pc, #56]	; 15070 <argp_parse@@Base+0x2cb8>
   15034:	bl	18558 <argp_error@@Base+0x14b0>
   15038:	mov	r0, #0
   1503c:	pop	{r4, r5, r6, pc}
   15040:	ldr	r2, [r0, #4]
   15044:	mov	r3, r5
   15048:	mov	r0, r6
   1504c:	ldr	r1, [pc, #32]	; 15074 <argp_parse@@Base+0x2cbc>
   15050:	bl	18558 <argp_error@@Base+0x14b0>
   15054:	mov	r0, #0
   15058:	pop	{r4, r5, r6, pc}
   1505c:	ldr	r5, [r1, #8]
   15060:	cmp	r5, #0
   15064:	bne	14ff8 <argp_parse@@Base+0x2c40>
   15068:	mov	r0, #0
   1506c:	pop	{r4, r5, r6, pc}
   15070:	andeq	r9, r1, ip, lsl #14
   15074:	andeq	r9, r1, r0, lsl #14
   15078:	mov	ip, r0
   1507c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15080:	mov	r8, r2
   15084:	sub	sp, sp, #28
   15088:	mov	r2, ip
   1508c:	ldr	ip, [ip, #16]
   15090:	mov	r9, r1
   15094:	ldr	r1, [r0, #8]
   15098:	str	ip, [sp, #8]
   1509c:	ldr	ip, [r8]
   150a0:	str	r1, [sp, #16]
   150a4:	mov	r0, r1
   150a8:	mov	r4, r3
   150ac:	ldr	r1, [pc, #456]	; 1527c <argp_parse@@Base+0x2ec4>
   150b0:	mov	r3, r9
   150b4:	mov	r5, ip
   150b8:	str	ip, [sp, #20]
   150bc:	ldr	r6, [sp, #64]	; 0x40
   150c0:	bl	14140 <argp_parse@@Base+0x1d88>
   150c4:	subs	r3, r0, #0
   150c8:	str	r3, [sp, #12]
   150cc:	beq	15228 <argp_parse@@Base+0x2e70>
   150d0:	mov	r1, #10
   150d4:	bl	11078 <strchrnul@plt>
   150d8:	ldrb	sl, [r0]
   150dc:	mov	r7, r0
   150e0:	cmp	sl, #0
   150e4:	bne	151e4 <argp_parse@@Base+0x2e2c>
   150e8:	ldr	r5, [sp, #12]
   150ec:	add	r1, r7, #1
   150f0:	sub	r1, r1, r5
   150f4:	mov	r0, r6
   150f8:	bl	14f14 <argp_parse@@Base+0x2b5c>
   150fc:	ldr	r0, [r6, #28]
   15100:	sub	fp, r7, r5
   15104:	ldr	r1, [r6, #32]
   15108:	add	r2, r0, fp
   1510c:	cmp	r1, r2
   15110:	bcs	1512c <argp_parse@@Base+0x2d74>
   15114:	mov	r1, fp
   15118:	mov	r0, r6
   1511c:	bl	18538 <argp_error@@Base+0x1490>
   15120:	cmp	r0, #0
   15124:	beq	15144 <argp_parse@@Base+0x2d8c>
   15128:	ldr	r0, [r6, #28]
   1512c:	mov	r2, fp
   15130:	mov	r1, r5
   15134:	bl	110a8 <memcpy@plt>
   15138:	ldr	r3, [r6, #28]
   1513c:	add	fp, r3, fp
   15140:	str	fp, [r6, #28]
   15144:	ldr	r3, [sp, #16]
   15148:	ldr	r2, [sp, #12]
   1514c:	cmp	r3, r2
   15150:	beq	1515c <argp_parse@@Base+0x2da4>
   15154:	mov	r0, r2
   15158:	bl	13250 <argp_parse@@Base+0xe98>
   1515c:	ldr	r3, [sp, #8]
   15160:	cmp	r3, #0
   15164:	beq	151a8 <argp_parse@@Base+0x2df0>
   15168:	ldr	r2, [r3]
   1516c:	cmp	r2, #0
   15170:	beq	151a8 <argp_parse@@Base+0x2df0>
   15174:	ldr	r5, [sp, #8]
   15178:	mov	r3, r4
   1517c:	mov	r0, r2
   15180:	str	r6, [sp]
   15184:	mov	r2, r8
   15188:	mov	r1, r9
   1518c:	bl	15078 <argp_parse@@Base+0x2cc0>
   15190:	ldr	r2, [r5, #16]!
   15194:	cmp	r2, #0
   15198:	clz	r3, r0
   1519c:	lsr	r3, r3, #5
   151a0:	bne	1517c <argp_parse@@Base+0x2dc4>
   151a4:	mov	r4, r3
   151a8:	cmp	r4, #0
   151ac:	moveq	sl, #0
   151b0:	andne	sl, sl, #1
   151b4:	cmp	sl, #0
   151b8:	beq	15248 <argp_parse@@Base+0x2e90>
   151bc:	ldrb	r0, [r7]
   151c0:	cmp	r0, #0
   151c4:	bne	15258 <argp_parse@@Base+0x2ea0>
   151c8:	ldr	r3, [sp, #20]
   151cc:	ldrb	r4, [r3]
   151d0:	cmp	r4, #0
   151d4:	moveq	r0, r4
   151d8:	strbne	r0, [r3]
   151dc:	add	sp, sp, #28
   151e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151e4:	ldrb	sl, [r5]
   151e8:	cmp	sl, #0
   151ec:	beq	15274 <argp_parse@@Base+0x2ebc>
   151f0:	mov	fp, #0
   151f4:	add	r5, r0, #1
   151f8:	add	fp, fp, #1
   151fc:	mov	r0, r5
   15200:	mov	r1, #10
   15204:	bl	11078 <strchrnul@plt>
   15208:	cmp	fp, sl
   1520c:	bne	151f4 <argp_parse@@Base+0x2e3c>
   15210:	mov	r7, r0
   15214:	ldr	r2, [r8]
   15218:	mov	sl, #1
   1521c:	add	r2, r2, sl
   15220:	str	r2, [r8]
   15224:	b	150ec <argp_parse@@Base+0x2d34>
   15228:	ldr	r3, [sp, #8]
   1522c:	cmp	r3, #0
   15230:	beq	15248 <argp_parse@@Base+0x2e90>
   15234:	ldr	r2, [r3]
   15238:	cmp	r2, #0
   1523c:	ldrne	r7, [sp, #12]
   15240:	movne	sl, r7
   15244:	bne	15174 <argp_parse@@Base+0x2dbc>
   15248:	clz	r0, r4
   1524c:	lsr	r0, r0, #5
   15250:	add	sp, sp, #28
   15254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15258:	ldr	r2, [sp, #20]
   1525c:	mov	r0, #1
   15260:	ldrb	r3, [r2]
   15264:	add	r3, r3, r0
   15268:	strb	r3, [r2]
   1526c:	add	sp, sp, #28
   15270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15274:	ldr	r5, [sp, #12]
   15278:	b	15214 <argp_parse@@Base+0x2e5c>
   1527c:	andeq	r0, r0, #6
   15280:	ldr	r2, [r0, #8]
   15284:	cmp	r2, #0
   15288:	beq	15294 <argp_parse@@Base+0x2edc>
   1528c:	mov	r0, #0
   15290:	bx	lr
   15294:	ldr	r2, [r1, #8]
   15298:	cmp	r2, #0
   1529c:	bne	1528c <argp_parse@@Base+0x2ed4>
   152a0:	ldr	r1, [r1, #12]
   152a4:	ldr	r2, [r0, #12]
   152a8:	orr	r2, r2, r1
   152ac:	tst	r2, #16
   152b0:	ldreq	r2, [r3]
   152b4:	ldreq	r1, [r0, #4]
   152b8:	addeq	r0, r2, #1
   152bc:	streq	r0, [r3]
   152c0:	strbeq	r1, [r2]
   152c4:	b	1528c <argp_parse@@Base+0x2ed4>
   152c8:	mov	r3, r0
   152cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152d0:	sub	sp, sp, #52	; 0x34
   152d4:	ldr	r2, [r3, #16]
   152d8:	str	r0, [sp, #24]
   152dc:	mov	r0, #16
   152e0:	ldr	r4, [r3]
   152e4:	str	r1, [sp, #28]
   152e8:	str	r2, [sp, #8]
   152ec:	bl	13e24 <argp_parse@@Base+0x1a6c>
   152f0:	subs	r3, r0, #0
   152f4:	str	r3, [sp, #20]
   152f8:	beq	1595c <argp_parse@@Base+0x35a4>
   152fc:	ldr	r2, [sp, #20]
   15300:	mov	r3, #0
   15304:	cmp	r4, #0
   15308:	str	r3, [r2, #4]
   1530c:	str	r3, [r2, #12]
   15310:	beq	15514 <argp_parse@@Base+0x315c>
   15314:	ldr	r5, [r4, #12]
   15318:	ands	r5, r5, #4
   1531c:	bne	15970 <argp_parse@@Base+0x35b8>
   15320:	add	r6, r4, #24
   15324:	mov	r9, r5
   15328:	mov	sl, r5
   1532c:	mov	fp, r2
   15330:	b	15374 <argp_parse@@Base+0x2fbc>
   15334:	ldr	r3, [r6, #-12]
   15338:	tst	r3, #4
   1533c:	addeq	r9, r9, #1
   15340:	streq	r9, [fp, #4]
   15344:	tst	r3, #8
   15348:	bne	15370 <argp_parse@@Base+0x2fb8>
   1534c:	sub	r3, r8, #1
   15350:	cmp	r3, #254	; 0xfe
   15354:	bhi	15370 <argp_parse@@Base+0x2fb8>
   15358:	bl	1118c <__ctype_b_loc@plt>
   1535c:	lsl	r8, r8, #1
   15360:	ldr	r3, [r0]
   15364:	ldrh	r3, [r3, r8]
   15368:	tst	r3, #16384	; 0x4000
   1536c:	addne	sl, sl, #1
   15370:	add	r6, r6, #24
   15374:	ldr	r8, [r6, #-20]	; 0xffffffec
   15378:	cmp	r8, #0
   1537c:	bne	15334 <argp_parse@@Base+0x2f7c>
   15380:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15384:	cmp	r3, #0
   15388:	bne	15334 <argp_parse@@Base+0x2f7c>
   1538c:	ldr	r3, [r6, #-8]
   15390:	cmp	r3, #0
   15394:	bne	15334 <argp_parse@@Base+0x2f7c>
   15398:	ldr	r7, [r6, #-4]
   1539c:	cmp	r7, #0
   153a0:	bne	15334 <argp_parse@@Base+0x2f7c>
   153a4:	rsb	r9, r9, r9, lsl #3
   153a8:	lsl	r0, r9, #2
   153ac:	bl	13e24 <argp_parse@@Base+0x1a6c>
   153b0:	ldr	r6, [sp, #20]
   153b4:	str	r0, [r6]
   153b8:	add	r0, sl, #1
   153bc:	bl	13e24 <argp_parse@@Base+0x1a6c>
   153c0:	ldr	r8, [r6]
   153c4:	mov	r3, r6
   153c8:	cmp	r0, #0
   153cc:	cmpne	r8, #0
   153d0:	mov	sl, r0
   153d4:	str	r0, [r3, #8]
   153d8:	beq	15920 <argp_parse@@Base+0x3568>
   153dc:	ldr	r2, [sp, #20]
   153e0:	ldr	r3, [pc, #1436]	; 15984 <argp_parse@@Base+0x35cc>
   153e4:	ldr	r2, [r2, #4]
   153e8:	cmp	r2, r3
   153ec:	bhi	1590c <argp_parse@@Base+0x3554>
   153f0:	add	r8, r8, #28
   153f4:	mov	r2, r8
   153f8:	ldr	r3, [r4, #4]
   153fc:	mov	r8, sl
   15400:	mov	r9, r2
   15404:	cmp	r3, #0
   15408:	bne	15418 <argp_parse@@Base+0x3060>
   1540c:	ldr	r2, [r4]
   15410:	cmp	r2, #0
   15414:	beq	158c4 <argp_parse@@Base+0x350c>
   15418:	str	r7, [r9, #-24]	; 0xffffffe8
   1541c:	ldr	r6, [r4, #20]
   15420:	str	r4, [r9, #-28]	; 0xffffffe4
   15424:	cmp	r6, #0
   15428:	str	sl, [r9, #-20]	; 0xffffffec
   1542c:	bne	15444 <argp_parse@@Base+0x308c>
   15430:	ldr	r2, [r4]
   15434:	cmp	r2, #0
   15438:	cmpeq	r3, #0
   1543c:	movne	r6, r5
   15440:	beq	158e8 <argp_parse@@Base+0x3530>
   15444:	ldr	r1, [sp, #28]
   15448:	str	r6, [r9, #-16]
   1544c:	mov	r5, r4
   15450:	ldr	r2, [r4, #12]
   15454:	mov	r3, r7
   15458:	str	r1, [r9, #-12]
   1545c:	ldr	r1, [sp, #24]
   15460:	str	r1, [r9, #-8]
   15464:	add	r3, r3, #1
   15468:	tst	r2, #8
   1546c:	str	r3, [r9, #-24]	; 0xffffffe8
   15470:	bne	154dc <argp_parse@@Base+0x3124>
   15474:	ldr	fp, [r4, #4]
   15478:	sub	r3, fp, #1
   1547c:	cmp	r3, #254	; 0xfe
   15480:	bhi	154dc <argp_parse@@Base+0x3124>
   15484:	bl	1118c <__ctype_b_loc@plt>
   15488:	lsl	r3, fp, #1
   1548c:	ldr	r2, [r0]
   15490:	ldrh	r3, [r2, r3]
   15494:	tst	r3, #16384	; 0x4000
   15498:	beq	154dc <argp_parse@@Base+0x3124>
   1549c:	cmp	r8, sl
   154a0:	uxtb	r1, fp
   154a4:	bcs	154d4 <argp_parse@@Base+0x311c>
   154a8:	ldrb	r3, [r8]
   154ac:	cmp	r3, r1
   154b0:	movne	r3, r8
   154b4:	subne	r0, sl, #1
   154b8:	bne	154cc <argp_parse@@Base+0x3114>
   154bc:	b	154dc <argp_parse@@Base+0x3124>
   154c0:	ldrb	r2, [r3, #1]!
   154c4:	cmp	r2, r1
   154c8:	beq	154dc <argp_parse@@Base+0x3124>
   154cc:	cmp	r0, r3
   154d0:	bne	154c0 <argp_parse@@Base+0x3108>
   154d4:	strb	r1, [sl]
   154d8:	add	sl, sl, #1
   154dc:	ldr	r3, [r5, #28]
   154e0:	add	r4, r4, #24
   154e4:	cmp	r3, #0
   154e8:	bne	154f8 <argp_parse@@Base+0x3140>
   154ec:	ldr	r2, [r5, #24]
   154f0:	cmp	r2, #0
   154f4:	beq	158a0 <argp_parse@@Base+0x34e8>
   154f8:	ldr	r2, [r5, #36]	; 0x24
   154fc:	tst	r2, #4
   15500:	beq	158b8 <argp_parse@@Base+0x3500>
   15504:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15508:	mov	r5, r4
   1550c:	b	15464 <argp_parse@@Base+0x30ac>
   15510:	strb	r3, [sl]
   15514:	ldr	r3, [sp, #8]
   15518:	cmp	r3, #0
   1551c:	beq	15658 <argp_parse@@Base+0x32a0>
   15520:	ldr	r3, [r3]
   15524:	cmp	r3, #0
   15528:	beq	15658 <argp_parse@@Base+0x32a0>
   1552c:	ldr	r3, [sp, #20]
   15530:	add	r3, r3, #12
   15534:	str	r3, [sp, #44]	; 0x2c
   15538:	ldr	r3, [sp, #8]
   1553c:	ldr	r5, [r3, #12]
   15540:	cmp	r5, #0
   15544:	ldrne	r6, [r3, #8]
   15548:	bne	1555c <argp_parse@@Base+0x31a4>
   1554c:	ldr	r3, [sp, #8]
   15550:	ldr	r6, [r3, #8]
   15554:	cmp	r6, #0
   15558:	beq	15880 <argp_parse@@Base+0x34c8>
   1555c:	ldr	r7, [sp, #24]
   15560:	ldr	r2, [sp, #8]
   15564:	mov	r0, #28
   15568:	ldr	r3, [r7, #16]
   1556c:	sub	r3, r2, r3
   15570:	asr	r4, r3, #4
   15574:	bl	13e24 <argp_parse@@Base+0x1a6c>
   15578:	subs	r1, r0, #0
   1557c:	beq	155bc <argp_parse@@Base+0x3204>
   15580:	ldr	r3, [sp, #28]
   15584:	ldr	r0, [sp, #20]
   15588:	cmp	r3, #0
   1558c:	str	r3, [r1, #12]
   15590:	ldrne	r3, [r3, #20]
   15594:	ldr	r2, [r0, #12]
   15598:	addne	r3, r3, #1
   1559c:	moveq	r3, #0
   155a0:	str	r5, [r1, #8]
   155a4:	str	r6, [r1]
   155a8:	str	r4, [r1, #4]
   155ac:	str	r7, [r1, #16]
   155b0:	str	r3, [r1, #20]
   155b4:	str	r2, [r1, #24]
   155b8:	str	r1, [r0, #12]
   155bc:	ldr	r3, [sp, #8]
   155c0:	ldr	r0, [r3]
   155c4:	bl	152c8 <argp_parse@@Base+0x2f10>
   155c8:	ldr	r3, [sp, #20]
   155cc:	ldr	r2, [r3, #12]
   155d0:	cmp	r2, #0
   155d4:	str	r0, [sp, #16]
   155d8:	bne	155e4 <argp_parse@@Base+0x322c>
   155dc:	b	15888 <argp_parse@@Base+0x34d0>
   155e0:	mov	r2, r3
   155e4:	ldr	r3, [r2, #24]
   155e8:	cmp	r3, #0
   155ec:	bne	155e0 <argp_parse@@Base+0x3228>
   155f0:	add	r2, r2, #24
   155f4:	ldr	r0, [sp, #16]
   155f8:	mov	ip, r0
   155fc:	ldr	r3, [r0, #4]
   15600:	ldr	r1, [r0, #12]
   15604:	cmp	r3, #0
   15608:	str	r1, [r2]
   1560c:	mov	r2, #0
   15610:	str	r2, [r0, #12]
   15614:	beq	1563c <argp_parse@@Base+0x3284>
   15618:	ldr	lr, [sp, #20]
   1561c:	ldr	r2, [lr, #4]
   15620:	cmp	r2, #0
   15624:	bne	15664 <argp_parse@@Base+0x32ac>
   15628:	ldr	r0, [r0]
   1562c:	ldr	r1, [ip, #8]
   15630:	stm	lr, {r0, r3}
   15634:	str	r1, [lr, #8]
   15638:	str	r2, [ip, #4]
   1563c:	ldr	r0, [sp, #16]
   15640:	bl	14060 <argp_parse@@Base+0x1ca8>
   15644:	ldr	r2, [sp, #8]
   15648:	ldr	r3, [r2, #16]!
   1564c:	cmp	r3, #0
   15650:	str	r2, [sp, #8]
   15654:	bne	15538 <argp_parse@@Base+0x3180>
   15658:	ldr	r0, [sp, #20]
   1565c:	add	sp, sp, #52	; 0x34
   15660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15664:	add	r3, r3, r2
   15668:	str	r3, [sp, #36]	; 0x24
   1566c:	rsb	r0, r3, r3, lsl #3
   15670:	lsl	r0, r0, #2
   15674:	bl	13e24 <argp_parse@@Base+0x1a6c>
   15678:	ldr	r3, [sp, #20]
   1567c:	mov	r4, r0
   15680:	str	r0, [sp, #32]
   15684:	ldr	r0, [r3, #8]
   15688:	bl	111bc <strlen@plt>
   1568c:	ldr	r3, [sp, #16]
   15690:	mov	r8, r0
   15694:	ldr	r0, [r3, #8]
   15698:	bl	111bc <strlen@plt>
   1569c:	add	r0, r8, r0
   156a0:	add	r0, r0, #1
   156a4:	bl	13e24 <argp_parse@@Base+0x1a6c>
   156a8:	cmp	r4, #0
   156ac:	cmpne	r0, #0
   156b0:	mov	r7, r0
   156b4:	beq	15934 <argp_parse@@Base+0x357c>
   156b8:	ldr	r3, [sp, #36]	; 0x24
   156bc:	ldr	r2, [pc, #704]	; 15984 <argp_parse@@Base+0x35cc>
   156c0:	cmp	r3, r2
   156c4:	bhi	15948 <argp_parse@@Base+0x3590>
   156c8:	ldr	r5, [sp, #20]
   156cc:	ldr	r9, [sp, #32]
   156d0:	ldm	r5, {r3, r4}
   156d4:	mov	r0, r9
   156d8:	rsb	r6, r4, r4, lsl #3
   156dc:	mov	r1, r3
   156e0:	lsl	r6, r6, #2
   156e4:	mov	r2, r6
   156e8:	str	r3, [sp, #40]	; 0x28
   156ec:	bl	11180 <mempcpy@plt>
   156f0:	ldr	r3, [sp, #16]
   156f4:	ldr	r1, [r3, #4]
   156f8:	mov	ip, r1
   156fc:	str	r1, [sp, #4]
   15700:	rsb	r2, ip, ip, lsl #3
   15704:	ldr	r1, [r3]
   15708:	lsl	r2, r2, #2
   1570c:	bl	110a8 <memcpy@plt>
   15710:	ldr	r5, [r5, #8]
   15714:	mov	r2, r8
   15718:	mov	r1, r5
   1571c:	mov	r0, r7
   15720:	bl	110a8 <memcpy@plt>
   15724:	cmp	r4, #0
   15728:	beq	15898 <argp_parse@@Base+0x34e0>
   1572c:	mov	r2, r9
   15730:	ldr	r3, [r2, #8]
   15734:	subs	r4, r4, #1
   15738:	sub	r3, r3, r5
   1573c:	add	r3, r7, r3
   15740:	str	r3, [r2, #8]
   15744:	add	r2, r2, #28
   15748:	bne	15730 <argp_parse@@Base+0x3378>
   1574c:	ldr	r3, [sp, #32]
   15750:	add	r1, r3, r6
   15754:	ldr	r3, [sp, #4]
   15758:	ldr	r2, [sp, #16]
   1575c:	cmp	r3, #0
   15760:	add	r3, r7, r8
   15764:	str	r3, [sp, #12]
   15768:	ldr	sl, [r2, #8]
   1576c:	beq	15890 <argp_parse@@Base+0x34d8>
   15770:	sub	r8, r3, #1
   15774:	add	fp, r1, #28
   15778:	mov	r9, r3
   1577c:	mov	r3, r8
   15780:	mov	r8, fp
   15784:	mov	fp, sl
   15788:	mov	sl, r3
   1578c:	ldr	r5, [r8, #-24]	; 0xffffffe8
   15790:	str	r9, [r8, #-20]	; 0xffffffec
   15794:	cmp	r5, #0
   15798:	ldr	r4, [r8, #-28]	; 0xffffffe4
   1579c:	bne	157b0 <argp_parse@@Base+0x33f8>
   157a0:	b	1583c <argp_parse@@Base+0x3484>
   157a4:	subs	r5, r5, #1
   157a8:	add	r4, r4, #24
   157ac:	beq	1583c <argp_parse@@Base+0x3484>
   157b0:	ldr	r3, [r4, #12]
   157b4:	tst	r3, #8
   157b8:	bne	157a4 <argp_parse@@Base+0x33ec>
   157bc:	ldr	r6, [r4, #4]
   157c0:	sub	r3, r6, #1
   157c4:	cmp	r3, #254	; 0xfe
   157c8:	bhi	157a4 <argp_parse@@Base+0x33ec>
   157cc:	bl	1118c <__ctype_b_loc@plt>
   157d0:	lsl	r3, r6, #1
   157d4:	ldr	r2, [r0]
   157d8:	ldrh	r3, [r2, r3]
   157dc:	tst	r3, #16384	; 0x4000
   157e0:	beq	157a4 <argp_parse@@Base+0x33ec>
   157e4:	ldrb	r1, [fp]
   157e8:	cmp	r1, r6
   157ec:	bne	157a4 <argp_parse@@Base+0x33ec>
   157f0:	ldr	r3, [sp, #12]
   157f4:	cmp	r7, r3
   157f8:	bcs	15824 <argp_parse@@Base+0x346c>
   157fc:	ldrb	r3, [r7]
   15800:	cmp	r3, r1
   15804:	movne	r3, r7
   15808:	bne	1581c <argp_parse@@Base+0x3464>
   1580c:	b	1582c <argp_parse@@Base+0x3474>
   15810:	ldrb	r2, [r3, #1]!
   15814:	cmp	r2, r1
   15818:	beq	1582c <argp_parse@@Base+0x3474>
   1581c:	cmp	sl, r3
   15820:	bne	15810 <argp_parse@@Base+0x3458>
   15824:	strb	r1, [r9]
   15828:	add	r9, r9, #1
   1582c:	subs	r5, r5, #1
   15830:	add	fp, fp, #1
   15834:	add	r4, r4, #24
   15838:	bne	157b0 <argp_parse@@Base+0x33f8>
   1583c:	ldr	r3, [sp, #4]
   15840:	add	r8, r8, #28
   15844:	subs	r3, r3, #1
   15848:	str	r3, [sp, #4]
   1584c:	bne	1578c <argp_parse@@Base+0x33d4>
   15850:	mov	r3, #0
   15854:	strb	r3, [r9]
   15858:	ldr	r0, [sp, #40]	; 0x28
   1585c:	bl	13250 <argp_parse@@Base+0xe98>
   15860:	ldr	r4, [sp, #20]
   15864:	ldr	r0, [r4, #8]
   15868:	bl	13250 <argp_parse@@Base+0xe98>
   1586c:	ldr	r2, [sp, #32]
   15870:	str	r2, [r4]
   15874:	ldr	r2, [sp, #36]	; 0x24
   15878:	stmib	r4, {r2, r7}
   1587c:	b	1563c <argp_parse@@Base+0x3284>
   15880:	ldr	r1, [sp, #28]
   15884:	b	155bc <argp_parse@@Base+0x3204>
   15888:	ldr	r2, [sp, #44]	; 0x2c
   1588c:	b	155f4 <argp_parse@@Base+0x323c>
   15890:	ldr	r9, [sp, #12]
   15894:	b	15850 <argp_parse@@Base+0x3498>
   15898:	ldr	r1, [sp, #32]
   1589c:	b	15754 <argp_parse@@Base+0x339c>
   158a0:	ldr	r2, [r5, #40]	; 0x28
   158a4:	cmp	r2, #0
   158a8:	bne	154f8 <argp_parse@@Base+0x3140>
   158ac:	ldr	r2, [r5, #44]	; 0x2c
   158b0:	cmp	r2, #0
   158b4:	bne	154f8 <argp_parse@@Base+0x3140>
   158b8:	add	r9, r9, #28
   158bc:	mov	r5, r6
   158c0:	b	15404 <argp_parse@@Base+0x304c>
   158c4:	ldr	r2, [r4, #16]
   158c8:	cmp	r2, #0
   158cc:	beq	158f0 <argp_parse@@Base+0x3538>
   158d0:	str	r3, [r9, #-24]	; 0xffffffe8
   158d4:	ldr	r6, [r4, #20]
   158d8:	str	r4, [r9, #-28]	; 0xffffffe4
   158dc:	cmp	r6, #0
   158e0:	str	sl, [r9, #-20]	; 0xffffffec
   158e4:	bne	15444 <argp_parse@@Base+0x308c>
   158e8:	add	r6, r5, #1
   158ec:	b	15444 <argp_parse@@Base+0x308c>
   158f0:	ldr	r6, [r4, #20]
   158f4:	cmp	r6, #0
   158f8:	beq	15510 <argp_parse@@Base+0x3158>
   158fc:	str	r4, [r9, #-28]	; 0xffffffe4
   15900:	str	r3, [r9, #-24]	; 0xffffffe8
   15904:	str	sl, [r9, #-20]	; 0xffffffec
   15908:	b	15444 <argp_parse@@Base+0x308c>
   1590c:	ldr	r3, [pc, #116]	; 15988 <argp_parse@@Base+0x35d0>
   15910:	mov	r2, #476	; 0x1dc
   15914:	ldr	r1, [pc, #112]	; 1598c <argp_parse@@Base+0x35d4>
   15918:	ldr	r0, [pc, #112]	; 15990 <argp_parse@@Base+0x35d8>
   1591c:	bl	112f4 <__assert_fail@plt>
   15920:	ldr	r3, [pc, #96]	; 15988 <argp_parse@@Base+0x35d0>
   15924:	ldr	r2, [pc, #104]	; 15994 <argp_parse@@Base+0x35dc>
   15928:	ldr	r1, [pc, #92]	; 1598c <argp_parse@@Base+0x35d4>
   1592c:	ldr	r0, [pc, #100]	; 15998 <argp_parse@@Base+0x35e0>
   15930:	bl	112f4 <__assert_fail@plt>
   15934:	ldr	r3, [pc, #96]	; 1599c <argp_parse@@Base+0x35e4>
   15938:	ldr	r2, [pc, #96]	; 159a0 <argp_parse@@Base+0x35e8>
   1593c:	ldr	r1, [pc, #72]	; 1598c <argp_parse@@Base+0x35d4>
   15940:	ldr	r0, [pc, #92]	; 159a4 <argp_parse@@Base+0x35ec>
   15944:	bl	112f4 <__assert_fail@plt>
   15948:	ldr	r3, [pc, #76]	; 1599c <argp_parse@@Base+0x35e4>
   1594c:	mov	r2, #972	; 0x3cc
   15950:	ldr	r1, [pc, #52]	; 1598c <argp_parse@@Base+0x35d4>
   15954:	ldr	r0, [pc, #76]	; 159a8 <argp_parse@@Base+0x35f0>
   15958:	bl	112f4 <__assert_fail@plt>
   1595c:	ldr	r3, [pc, #36]	; 15988 <argp_parse@@Base+0x35d0>
   15960:	ldr	r2, [pc, #68]	; 159ac <argp_parse@@Base+0x35f4>
   15964:	ldr	r1, [pc, #32]	; 1598c <argp_parse@@Base+0x35d4>
   15968:	ldr	r0, [pc, #64]	; 159b0 <argp_parse@@Base+0x35f8>
   1596c:	bl	112f4 <__assert_fail@plt>
   15970:	ldr	r3, [pc, #16]	; 15988 <argp_parse@@Base+0x35d0>
   15974:	mov	r2, #460	; 0x1cc
   15978:	ldr	r1, [pc, #12]	; 1598c <argp_parse@@Base+0x35d4>
   1597c:	ldr	r0, [pc, #48]	; 159b4 <argp_parse@@Base+0x35fc>
   15980:	bl	112f4 <__assert_fail@plt>
   15984:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15988:	andeq	r9, r1, r4, asr r6
   1598c:	andeq	r9, r1, r8, lsl r7
   15990:	andeq	r9, r1, ip, asr r7
   15994:	ldrdeq	r0, [r0], -sl
   15998:	andeq	r9, r1, r8, lsr r7
   1599c:	andeq	r9, r1, r0, ror #12
   159a0:	andeq	r0, r0, sl, asr #7
   159a4:	muleq	r1, r8, r7
   159a8:			; <UNDEFINED> instruction: 0x000197b4
   159ac:	andeq	r0, r0, r2, asr #3
   159b0:	andeq	r9, r1, r4, lsr #14
   159b4:	andeq	r9, r1, r8, lsr #14
   159b8:	cmp	r1, #0
   159bc:	push	{r4, r5, r6, r7, r8, lr}
   159c0:	beq	15a38 <argp_parse@@Base+0x3680>
   159c4:	sub	r7, r1, #1
   159c8:	mov	r8, r2
   159cc:	mov	r6, r0
   159d0:	ldm	r6, {r4, r5}
   159d4:	cmp	r5, #0
   159d8:	sub	r5, r5, #1
   159dc:	beq	15a1c <argp_parse@@Base+0x3664>
   159e0:	add	r4, r4, #24
   159e4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   159e8:	mov	r1, r8
   159ec:	subs	r0, r3, #0
   159f0:	sub	r5, r5, #1
   159f4:	beq	15a10 <argp_parse@@Base+0x3658>
   159f8:	ldr	r3, [r4, #-12]
   159fc:	tst	r3, #2
   15a00:	bne	15a10 <argp_parse@@Base+0x3658>
   15a04:	bl	11030 <strcmp@plt>
   15a08:	cmp	r0, #0
   15a0c:	beq	15a30 <argp_parse@@Base+0x3678>
   15a10:	cmn	r5, #1
   15a14:	add	r4, r4, #24
   15a18:	bne	159e4 <argp_parse@@Base+0x362c>
   15a1c:	sub	r7, r7, #1
   15a20:	cmn	r7, #1
   15a24:	add	r6, r6, #28
   15a28:	bne	159d0 <argp_parse@@Base+0x3618>
   15a2c:	mov	r6, #0
   15a30:	mov	r0, r6
   15a34:	pop	{r4, r5, r6, r7, r8, pc}
   15a38:	mov	r6, r1
   15a3c:	b	15a30 <argp_parse@@Base+0x3678>
   15a40:	push	{r4, r5, r6, lr}
   15a44:	subs	r4, r0, #0
   15a48:	mov	r5, r1
   15a4c:	beq	15a60 <argp_parse@@Base+0x36a8>
   15a50:	mov	r1, #10
   15a54:	bl	111c8 <strchr@plt>
   15a58:	adds	r4, r0, #0
   15a5c:	movne	r4, #1
   15a60:	cmp	r5, #0
   15a64:	beq	15a90 <argp_parse@@Base+0x36d8>
   15a68:	ldr	r3, [r5]
   15a6c:	cmp	r3, #0
   15a70:	beq	15a90 <argp_parse@@Base+0x36d8>
   15a74:	ldr	r1, [r3, #16]
   15a78:	ldr	r0, [r3, #8]
   15a7c:	bl	15a40 <argp_parse@@Base+0x3688>
   15a80:	ldr	r3, [r5, #16]!
   15a84:	cmp	r3, #0
   15a88:	add	r4, r4, r0
   15a8c:	bne	15a74 <argp_parse@@Base+0x36bc>
   15a90:	mov	r0, r4
   15a94:	pop	{r4, r5, r6, pc}
   15a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a9c:	add	fp, sp, #32
   15aa0:	sub	sp, sp, #12
   15aa4:	ldr	r5, [r0, #4]
   15aa8:	cmp	r5, #0
   15aac:	bne	15ab8 <argp_parse@@Base+0x3700>
   15ab0:	sub	sp, fp, #32
   15ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ab8:	mov	r6, r0
   15abc:	ldr	r0, [r0, #8]
   15ac0:	mov	r9, r1
   15ac4:	bl	111bc <strlen@plt>
   15ac8:	ldr	r8, [pc, #360]	; 15c38 <argp_parse@@Base+0x3880>
   15acc:	ldr	r4, [r6]
   15ad0:	sub	r7, fp, #36	; 0x24
   15ad4:	add	r3, r0, #15
   15ad8:	bic	r3, r3, #7
   15adc:	sub	sp, sp, r3
   15ae0:	mov	sl, sp
   15ae4:	str	sp, [r7, #-4]!
   15ae8:	ldr	r2, [r4, #20]
   15aec:	mov	r0, r4
   15af0:	mov	r3, r7
   15af4:	mov	r1, r8
   15af8:	ldr	r2, [r2, #24]
   15afc:	bl	13eac <argp_parse@@Base+0x1af4>
   15b00:	subs	r5, r5, #1
   15b04:	add	r4, r4, #28
   15b08:	bne	15ae8 <argp_parse@@Base+0x3730>
   15b0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b10:	cmp	sl, r3
   15b14:	bcc	15c18 <argp_parse@@Base+0x3860>
   15b18:	ldm	r6, {r4, r5}
   15b1c:	cmp	r5, #0
   15b20:	beq	15ab0 <argp_parse@@Base+0x36f8>
   15b24:	ldr	r7, [pc, #272]	; 15c3c <argp_parse@@Base+0x3884>
   15b28:	ldr	r2, [r4, #20]
   15b2c:	mov	r0, r4
   15b30:	mov	r3, r9
   15b34:	mov	r1, r7
   15b38:	ldr	r2, [r2, #24]
   15b3c:	bl	13eac <argp_parse@@Base+0x1af4>
   15b40:	subs	r5, r5, #1
   15b44:	add	r4, r4, #28
   15b48:	bne	15b28 <argp_parse@@Base+0x3770>
   15b4c:	ldm	r6, {r7, r8}
   15b50:	cmp	r8, #0
   15b54:	beq	15ab0 <argp_parse@@Base+0x36f8>
   15b58:	ldr	sl, [pc, #224]	; 15c40 <argp_parse@@Base+0x3888>
   15b5c:	add	r7, r7, #28
   15b60:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15b64:	ldr	r4, [r7, #-28]	; 0xffffffe4
   15b68:	cmp	r5, #0
   15b6c:	movne	r6, r4
   15b70:	bne	15b84 <argp_parse@@Base+0x37cc>
   15b74:	b	15be0 <argp_parse@@Base+0x3828>
   15b78:	subs	r5, r5, #1
   15b7c:	add	r4, r4, #24
   15b80:	beq	15be0 <argp_parse@@Base+0x3828>
   15b84:	ldr	r2, [r4]
   15b88:	cmp	r2, #0
   15b8c:	beq	15b78 <argp_parse@@Base+0x37c0>
   15b90:	ldr	r1, [r4, #12]
   15b94:	tst	r1, #4
   15b98:	moveq	r6, r4
   15b9c:	tst	r1, #2
   15ba0:	bne	15b78 <argp_parse@@Base+0x37c0>
   15ba4:	ldr	r3, [r4, #8]
   15ba8:	ldr	r0, [r6, #12]
   15bac:	cmp	r3, #0
   15bb0:	orr	r1, r1, r0
   15bb4:	beq	15bf4 <argp_parse@@Base+0x383c>
   15bb8:	tst	r1, #16
   15bbc:	bne	15b78 <argp_parse@@Base+0x37c0>
   15bc0:	tst	r1, #1
   15bc4:	moveq	r1, sl
   15bc8:	ldrne	r1, [pc, #116]	; 15c44 <argp_parse@@Base+0x388c>
   15bcc:	mov	r0, r9
   15bd0:	bl	18558 <argp_error@@Base+0x14b0>
   15bd4:	subs	r5, r5, #1
   15bd8:	add	r4, r4, #24
   15bdc:	bne	15b84 <argp_parse@@Base+0x37cc>
   15be0:	subs	r8, r8, #1
   15be4:	add	r7, r7, #28
   15be8:	bne	15b60 <argp_parse@@Base+0x37a8>
   15bec:	sub	sp, fp, #32
   15bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bf4:	tst	r1, #16
   15bf8:	bne	15b78 <argp_parse@@Base+0x37c0>
   15bfc:	ldr	r3, [r6, #8]
   15c00:	cmp	r3, #0
   15c04:	bne	15bc0 <argp_parse@@Base+0x3808>
   15c08:	ldr	r1, [pc, #56]	; 15c48 <argp_parse@@Base+0x3890>
   15c0c:	mov	r0, r9
   15c10:	bl	18558 <argp_error@@Base+0x14b0>
   15c14:	b	15b78 <argp_parse@@Base+0x37c0>
   15c18:	add	r1, r3, #1
   15c1c:	str	r1, [fp, #-40]	; 0xffffffd8
   15c20:	mov	r2, sl
   15c24:	ldr	r1, [pc, #32]	; 15c4c <argp_parse@@Base+0x3894>
   15c28:	strb	r5, [r3]
   15c2c:	mov	r0, r9
   15c30:	bl	18558 <argp_error@@Base+0x14b0>
   15c34:	b	15b18 <argp_parse@@Base+0x3760>
   15c38:	andeq	r5, r1, r0, lsl #5
   15c3c:	ldrdeq	r4, [r1], -ip
   15c40:	andeq	r9, r1, r0, lsl #16
   15c44:	strdeq	r9, [r1], -r0
   15c48:	andeq	r9, r1, ip, lsl #16
   15c4c:	andeq	r9, r1, r8, ror #15

00015c50 <argp_failure@@Base>:
   15c50:	push	{r3}		; (str r3, [sp, #-4]!)
   15c54:	push	{r4, r5, r6, r7, lr}
   15c58:	subs	r5, r0, #0
   15c5c:	sub	sp, sp, #200	; 0xc8
   15c60:	mov	r7, r1
   15c64:	mov	r6, r2
   15c68:	beq	15db8 <argp_failure@@Base+0x168>
   15c6c:	ldr	r3, [r5, #16]
   15c70:	tst	r3, #2
   15c74:	bne	15da8 <argp_failure@@Base+0x158>
   15c78:	ldr	r4, [r5, #44]	; 0x2c
   15c7c:	cmp	r4, #0
   15c80:	beq	15da8 <argp_failure@@Base+0x158>
   15c84:	mov	r0, r4
   15c88:	bl	11270 <flockfile@plt>
   15c8c:	ldr	r0, [r5, #40]	; 0x28
   15c90:	mov	r1, r4
   15c94:	bl	1100c <fputs_unlocked@plt>
   15c98:	ldr	r3, [sp, #220]	; 0xdc
   15c9c:	cmp	r3, #0
   15ca0:	beq	15cfc <argp_failure@@Base+0xac>
   15ca4:	ldr	r3, [r4, #20]
   15ca8:	ldr	r1, [r4, #24]
   15cac:	add	r2, sp, #224	; 0xe0
   15cb0:	cmp	r3, r1
   15cb4:	str	r2, [sp]
   15cb8:	addcc	r1, r3, #1
   15cbc:	movcc	r2, #58	; 0x3a
   15cc0:	strcc	r1, [r4, #20]
   15cc4:	strbcc	r2, [r3]
   15cc8:	bcs	15e04 <argp_failure@@Base+0x1b4>
   15ccc:	ldr	r3, [r4, #20]
   15cd0:	ldr	r2, [r4, #24]
   15cd4:	cmp	r3, r2
   15cd8:	addcc	r1, r3, #1
   15cdc:	movcc	r2, #32
   15ce0:	strcc	r1, [r4, #20]
   15ce4:	strbcc	r2, [r3]
   15ce8:	bcs	15df4 <argp_failure@@Base+0x1a4>
   15cec:	ldr	r2, [sp]
   15cf0:	ldr	r1, [sp, #220]	; 0xdc
   15cf4:	mov	r0, r4
   15cf8:	bl	11258 <vfprintf@plt>
   15cfc:	cmp	r6, #0
   15d00:	beq	15d64 <argp_failure@@Base+0x114>
   15d04:	ldr	r3, [r4, #20]
   15d08:	ldr	r2, [r4, #24]
   15d0c:	cmp	r3, r2
   15d10:	addcc	r1, r3, #1
   15d14:	movcc	r2, #58	; 0x3a
   15d18:	strcc	r1, [r4, #20]
   15d1c:	strbcc	r2, [r3]
   15d20:	bcs	15e24 <argp_failure@@Base+0x1d4>
   15d24:	ldr	r3, [r4, #20]
   15d28:	ldr	r2, [r4, #24]
   15d2c:	cmp	r3, r2
   15d30:	addcc	r1, r3, #1
   15d34:	movcc	r2, #32
   15d38:	strcc	r1, [r4, #20]
   15d3c:	strbcc	r2, [r3]
   15d40:	bcs	15e14 <argp_failure@@Base+0x1c4>
   15d44:	mov	r2, #200	; 0xc8
   15d48:	mov	r1, sp
   15d4c:	mov	r0, r6
   15d50:	bl	111ec <strerror_r@plt>
   15d54:	cmp	r0, #0
   15d58:	beq	15e34 <argp_failure@@Base+0x1e4>
   15d5c:	mov	r1, r4
   15d60:	bl	1100c <fputs_unlocked@plt>
   15d64:	ldr	r3, [r4, #20]
   15d68:	ldr	r2, [r4, #24]
   15d6c:	cmp	r3, r2
   15d70:	addcc	r1, r3, #1
   15d74:	movcc	r2, #10
   15d78:	strcc	r1, [r4, #20]
   15d7c:	strbcc	r2, [r3]
   15d80:	bcs	15ddc <argp_failure@@Base+0x18c>
   15d84:	mov	r0, r4
   15d88:	bl	110fc <funlockfile@plt>
   15d8c:	cmp	r7, #0
   15d90:	beq	15da8 <argp_failure@@Base+0x158>
   15d94:	cmp	r5, #0
   15d98:	beq	15dec <argp_failure@@Base+0x19c>
   15d9c:	ldr	r3, [r5, #16]
   15da0:	tst	r3, #32
   15da4:	beq	15dec <argp_failure@@Base+0x19c>
   15da8:	add	sp, sp, #200	; 0xc8
   15dac:	pop	{r4, r5, r6, r7, lr}
   15db0:	add	sp, sp, #4
   15db4:	bx	lr
   15db8:	ldr	r3, [pc, #140]	; 15e4c <argp_failure@@Base+0x1fc>
   15dbc:	ldr	r4, [r3]
   15dc0:	cmp	r4, #0
   15dc4:	beq	15da8 <argp_failure@@Base+0x158>
   15dc8:	mov	r0, r4
   15dcc:	bl	11270 <flockfile@plt>
   15dd0:	ldr	r3, [pc, #120]	; 15e50 <argp_failure@@Base+0x200>
   15dd4:	ldr	r0, [r3]
   15dd8:	b	15c90 <argp_failure@@Base+0x40>
   15ddc:	mov	r1, #10
   15de0:	mov	r0, r4
   15de4:	bl	11240 <__overflow@plt>
   15de8:	b	15d84 <argp_failure@@Base+0x134>
   15dec:	mov	r0, r7
   15df0:	bl	111a4 <exit@plt>
   15df4:	mov	r1, #32
   15df8:	mov	r0, r4
   15dfc:	bl	11240 <__overflow@plt>
   15e00:	b	15cec <argp_failure@@Base+0x9c>
   15e04:	mov	r1, #58	; 0x3a
   15e08:	mov	r0, r4
   15e0c:	bl	11240 <__overflow@plt>
   15e10:	b	15ccc <argp_failure@@Base+0x7c>
   15e14:	mov	r1, #32
   15e18:	mov	r0, r4
   15e1c:	bl	11240 <__overflow@plt>
   15e20:	b	15d44 <argp_failure@@Base+0xf4>
   15e24:	mov	r1, #58	; 0x3a
   15e28:	mov	r0, r4
   15e2c:	bl	11240 <__overflow@plt>
   15e30:	b	15d24 <argp_failure@@Base+0xd4>
   15e34:	mov	r0, r6
   15e38:	bl	11150 <strerror@plt>
   15e3c:	ldr	r3, [pc, #16]	; 15e54 <argp_failure@@Base+0x204>
   15e40:	cmp	r0, #0
   15e44:	moveq	r0, r3
   15e48:	b	15d5c <argp_failure@@Base+0x10c>
   15e4c:			; <UNDEFINED> instruction: 0x0002a3b0
   15e50:	andeq	sl, r2, r8, lsr #7
   15e54:	andeq	r9, r1, r4, lsl r8
   15e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e5c:	add	fp, sp, #32
   15e60:	cmp	r2, #0
   15e64:	sub	sp, sp, #116	; 0x74
   15e68:	str	r2, [fp, #-132]	; 0xffffff7c
   15e6c:	str	r0, [fp, #-112]	; 0xffffff90
   15e70:	str	r1, [fp, #-104]	; 0xffffff98
   15e74:	str	r3, [fp, #-96]	; 0xffffffa0
   15e78:	beq	15f30 <argp_failure@@Base+0x2e0>
   15e7c:	ldr	sl, [pc, #4064]	; 16e64 <argp_failure@@Base+0x1214>
   15e80:	mov	r0, r2
   15e84:	bl	11270 <flockfile@plt>
   15e88:	ldr	r3, [sl, #36]	; 0x24
   15e8c:	cmp	r3, #0
   15e90:	str	r3, [fp, #-108]	; 0xffffff94
   15e94:	beq	163e0 <argp_failure@@Base+0x790>
   15e98:	mov	r3, #0
   15e9c:	mov	r1, r3
   15ea0:	ldr	r2, [sl, #32]
   15ea4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15ea8:	bl	17e2c <argp_error@@Base+0xd84>
   15eac:	subs	r9, r0, #0
   15eb0:	beq	16f24 <argp_failure@@Base+0x12d4>
   15eb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15eb8:	ands	r3, r3, #11
   15ebc:	streq	r3, [fp, #-136]	; 0xffffff78
   15ec0:	bne	1683c <argp_failure@@Base+0xbec>
   15ec4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ec8:	ands	r4, r3, #3
   15ecc:	bne	16630 <argp_failure@@Base+0x9e0>
   15ed0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ed4:	tst	r3, #16
   15ed8:	bne	1660c <argp_failure@@Base+0x9bc>
   15edc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ee0:	tst	r3, #4
   15ee4:	bne	165f0 <argp_failure@@Base+0x9a0>
   15ee8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15eec:	tst	r3, #8
   15ef0:	bne	15f84 <argp_failure@@Base+0x334>
   15ef4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ef8:	tst	r3, #32
   15efc:	bne	163b8 <argp_failure@@Base+0x768>
   15f00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f04:	tst	r3, #64	; 0x40
   15f08:	bne	15f38 <argp_failure@@Base+0x2e8>
   15f0c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15f10:	bl	110fc <funlockfile@plt>
   15f14:	ldr	r3, [fp, #-136]	; 0xffffff78
   15f18:	cmp	r3, #0
   15f1c:	beq	15f28 <argp_failure@@Base+0x2d8>
   15f20:	mov	r0, r3
   15f24:	bl	14060 <argp_parse@@Base+0x1ca8>
   15f28:	mov	r0, r9
   15f2c:	bl	18418 <argp_error@@Base+0x1370>
   15f30:	sub	sp, fp, #32
   15f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f38:	ldr	r5, [pc, #3880]	; 16e68 <argp_failure@@Base+0x1218>
   15f3c:	ldr	r2, [r5]
   15f40:	cmp	r2, #0
   15f44:	beq	15f0c <argp_failure@@Base+0x2bc>
   15f48:	cmp	r4, #0
   15f4c:	beq	15f74 <argp_failure@@Base+0x324>
   15f50:	ldr	r3, [r9, #28]
   15f54:	ldr	r2, [r9, #32]
   15f58:	cmp	r3, r2
   15f5c:	bcs	16f08 <argp_failure@@Base+0x12b8>
   15f60:	add	r1, r3, #1
   15f64:	mov	r2, #10
   15f68:	str	r1, [r9, #28]
   15f6c:	strb	r2, [r3]
   15f70:	ldr	r2, [r5]
   15f74:	ldr	r1, [pc, #3824]	; 16e6c <argp_failure@@Base+0x121c>
   15f78:	mov	r0, r9
   15f7c:	bl	18558 <argp_error@@Base+0x14b0>
   15f80:	b	15f0c <argp_failure@@Base+0x2bc>
   15f84:	ldr	r3, [fp, #-136]	; 0xffffff78
   15f88:	ldr	r3, [r3, #4]
   15f8c:	cmp	r3, #0
   15f90:	str	r3, [fp, #-108]	; 0xffffff94
   15f94:	beq	15ef4 <argp_failure@@Base+0x2a4>
   15f98:	cmp	r4, #0
   15f9c:	beq	16db8 <argp_failure@@Base+0x1168>
   15fa0:	ldr	r3, [r9, #28]
   15fa4:	ldr	r2, [r9, #32]
   15fa8:	cmp	r3, r2
   15fac:	bcs	16f5c <argp_failure@@Base+0x130c>
   15fb0:	add	r1, r3, #1
   15fb4:	mov	r2, #10
   15fb8:	str	r1, [r9, #28]
   15fbc:	strb	r2, [r3]
   15fc0:	ldr	r3, [fp, #-136]	; 0xffffff78
   15fc4:	ldr	r2, [fp, #-136]	; 0xffffff78
   15fc8:	ldr	r3, [r3, #4]
   15fcc:	ldr	r8, [r2]
   15fd0:	str	r3, [fp, #-108]	; 0xffffff94
   15fd4:	ldr	r3, [fp, #-108]	; 0xffffff94
   15fd8:	cmp	r3, #0
   15fdc:	mov	r3, #0
   15fe0:	str	r3, [fp, #-88]	; 0xffffffa8
   15fe4:	str	r3, [fp, #-84]	; 0xffffffac
   15fe8:	str	r3, [fp, #-80]	; 0xffffffb0
   15fec:	beq	163a8 <argp_failure@@Base+0x758>
   15ff0:	str	sl, [fp, #-100]	; 0xffffff9c
   15ff4:	ldr	lr, [r9, #28]
   15ff8:	ldr	r3, [r9, #24]
   15ffc:	ldr	r5, [r9, #16]
   16000:	sub	lr, lr, r3
   16004:	cmp	lr, r5
   16008:	ldr	r6, [r8]
   1600c:	ldr	sl, [r8, #8]
   16010:	bhi	16b10 <argp_failure@@Base+0xec0>
   16014:	ldr	r1, [r9, #4]
   16018:	ldr	r7, [r6, #12]
   1601c:	str	r1, [fp, #-116]	; 0xffffff8c
   16020:	ldr	r1, [r9, #12]
   16024:	mov	r3, #0
   16028:	str	r1, [fp, #-120]	; 0xffffff88
   1602c:	sub	r1, fp, #88	; 0x58
   16030:	str	r3, [r9, #4]
   16034:	and	r2, r7, #8
   16038:	str	r1, [fp, #-68]	; 0xffffffbc
   1603c:	ldr	r1, [fp, #-104]	; 0xffffff98
   16040:	mov	r0, #1
   16044:	cmp	r2, r3
   16048:	mov	r4, r2
   1604c:	str	r0, [fp, #-64]	; 0xffffffc0
   16050:	str	r8, [fp, #-76]	; 0xffffffb4
   16054:	str	r9, [fp, #-72]	; 0xffffffb8
   16058:	str	r1, [fp, #-60]	; 0xffffffc4
   1605c:	bne	1699c <argp_failure@@Base+0xd4c>
   16060:	ldr	ip, [r8, #4]
   16064:	cmp	ip, r3
   16068:	beq	16094 <argp_failure@@Base+0x444>
   1606c:	add	r0, r6, #24
   16070:	ldr	r3, [r0, #-24]	; 0xffffffe8
   16074:	cmp	r3, #0
   16078:	beq	16088 <argp_failure@@Base+0x438>
   1607c:	ldr	r3, [r0, #-12]
   16080:	tst	r3, #2
   16084:	beq	16998 <argp_failure@@Base+0xd48>
   16088:	subs	ip, ip, #1
   1608c:	add	r0, r0, #24
   16090:	bne	16070 <argp_failure@@Base+0x420>
   16094:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16098:	cmp	lr, r5
   1609c:	str	r2, [fp, #-128]	; 0xffffff80
   160a0:	ldr	r5, [r3, #8]
   160a4:	bhi	169b0 <argp_failure@@Base+0xd60>
   160a8:	str	r5, [r9, #12]
   160ac:	ldr	r5, [r8, #4]
   160b0:	cmp	r5, #0
   160b4:	beq	16138 <argp_failure@@Base+0x4e8>
   160b8:	mov	r4, r6
   160bc:	str	r8, [fp, #-124]	; 0xffffff84
   160c0:	b	160d8 <argp_failure@@Base+0x488>
   160c4:	subs	r5, r5, #1
   160c8:	add	r4, r4, #24
   160cc:	beq	1612c <argp_failure@@Base+0x4dc>
   160d0:	ldr	r7, [r4, #12]
   160d4:	and	r2, r7, #8
   160d8:	cmp	r2, #0
   160dc:	bne	160c4 <argp_failure@@Base+0x474>
   160e0:	ldr	r8, [r4, #4]
   160e4:	sub	r2, r8, #1
   160e8:	cmp	r2, #254	; 0xfe
   160ec:	bhi	160c4 <argp_failure@@Base+0x474>
   160f0:	bl	1118c <__ctype_b_loc@plt>
   160f4:	lsl	r2, r8, #1
   160f8:	ldr	r1, [r0]
   160fc:	ldrh	r2, [r1, r2]
   16100:	tst	r2, #16384	; 0x4000
   16104:	beq	160c4 <argp_failure@@Base+0x474>
   16108:	ldrb	r2, [sl]
   1610c:	cmp	r8, r2
   16110:	bne	160c4 <argp_failure@@Base+0x474>
   16114:	tst	r7, #2
   16118:	beq	16a5c <argp_failure@@Base+0xe0c>
   1611c:	subs	r5, r5, #1
   16120:	add	sl, sl, #1
   16124:	add	r4, r4, #24
   16128:	bne	160d0 <argp_failure@@Base+0x480>
   1612c:	ldr	r4, [r6, #12]
   16130:	ldr	r8, [fp, #-124]	; 0xffffff84
   16134:	and	r4, r4, #8
   16138:	ldr	r3, [r9, #28]
   1613c:	ldr	r1, [r9, #24]
   16140:	cmp	r4, #0
   16144:	ldr	r2, [r9, #16]
   16148:	sub	r3, r3, r1
   1614c:	beq	169c8 <argp_failure@@Base+0xd78>
   16150:	cmp	r3, r2
   16154:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16158:	ldr	r4, [r3, #16]
   1615c:	bhi	16c90 <argp_failure@@Base+0x1040>
   16160:	str	r4, [r9, #12]
   16164:	ldr	r5, [r8, #4]
   16168:	cmp	r5, #0
   1616c:	addne	r4, r6, #24
   16170:	bne	16184 <argp_failure@@Base+0x534>
   16174:	b	16214 <argp_failure@@Base+0x5c4>
   16178:	subs	r5, r5, #1
   1617c:	add	r4, r4, #24
   16180:	beq	16214 <argp_failure@@Base+0x5c4>
   16184:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16188:	cmp	r3, #0
   1618c:	beq	16178 <argp_failure@@Base+0x528>
   16190:	ldr	r3, [r4, #-12]
   16194:	tst	r3, #2
   16198:	bne	16178 <argp_failure@@Base+0x528>
   1619c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   161a0:	sub	r1, fp, #76	; 0x4c
   161a4:	ldr	r0, [r3, #16]
   161a8:	bl	14390 <argp_parse@@Base+0x1fd8>
   161ac:	ldr	sl, [r4, #-24]	; 0xffffffe8
   161b0:	mov	r0, sl
   161b4:	bl	111bc <strlen@plt>
   161b8:	subs	r7, r0, #0
   161bc:	beq	16178 <argp_failure@@Base+0x528>
   161c0:	ldr	r2, [r9, #28]
   161c4:	ldr	lr, [r9, #32]
   161c8:	add	ip, r2, r7
   161cc:	cmp	lr, ip
   161d0:	mov	r1, r7
   161d4:	mov	r0, r9
   161d8:	bcs	161ec <argp_failure@@Base+0x59c>
   161dc:	bl	18538 <argp_error@@Base+0x1490>
   161e0:	cmp	r0, #0
   161e4:	beq	16178 <argp_failure@@Base+0x528>
   161e8:	ldr	r2, [r9, #28]
   161ec:	mov	r0, r2
   161f0:	mov	r1, sl
   161f4:	mov	r2, r7
   161f8:	bl	110a8 <memcpy@plt>
   161fc:	ldr	r2, [r9, #28]
   16200:	subs	r5, r5, #1
   16204:	add	r3, r2, r7
   16208:	str	r3, [r9, #28]
   1620c:	add	r4, r4, #24
   16210:	bne	16184 <argp_failure@@Base+0x534>
   16214:	ldr	r3, [r9, #28]
   16218:	ldr	r1, [r9, #24]
   1621c:	ldr	r2, [r9, #16]
   16220:	sub	r3, r3, r1
   16224:	cmp	r3, r2
   16228:	bhi	16c44 <argp_failure@@Base+0xff4>
   1622c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16230:	mov	r3, #0
   16234:	cmp	r2, r3
   16238:	str	r3, [r9, #4]
   1623c:	beq	16b2c <argp_failure@@Base+0xedc>
   16240:	ldr	r3, [r6, #12]
   16244:	tst	r3, #8
   16248:	bne	16274 <argp_failure@@Base+0x624>
   1624c:	ldr	r4, [r6, #4]
   16250:	sub	r3, r4, #1
   16254:	cmp	r3, #254	; 0xfe
   16258:	bhi	16274 <argp_failure@@Base+0x624>
   1625c:	bl	1118c <__ctype_b_loc@plt>
   16260:	lsl	r4, r4, #1
   16264:	ldr	r3, [r0]
   16268:	ldrh	r3, [r3, r4]
   1626c:	tst	r3, #16384	; 0x4000
   16270:	bne	16280 <argp_failure@@Base+0x630>
   16274:	ldr	r3, [r6]
   16278:	cmp	r3, #0
   1627c:	beq	16ef4 <argp_failure@@Base+0x12a4>
   16280:	ldr	r3, [r9, #28]
   16284:	ldr	r1, [r9, #24]
   16288:	ldr	r2, [r9, #16]
   1628c:	sub	r3, r3, r1
   16290:	cmp	r3, r2
   16294:	bhi	16adc <argp_failure@@Base+0xe8c>
   16298:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1629c:	str	r3, [r9, #4]
   162a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   162a4:	add	r8, r8, #28
   162a8:	subs	r3, r3, #1
   162ac:	str	r3, [fp, #-108]	; 0xffffff94
   162b0:	ldr	r3, [fp, #-120]	; 0xffffff88
   162b4:	str	r3, [r9, #12]
   162b8:	bne	15ff4 <argp_failure@@Base+0x3a4>
   162bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   162c0:	ldr	sl, [fp, #-100]	; 0xffffff9c
   162c4:	cmp	r3, #0
   162c8:	beq	163a8 <argp_failure@@Base+0x758>
   162cc:	ldr	r3, [sl, #4]
   162d0:	cmp	r3, #0
   162d4:	beq	163a8 <argp_failure@@Base+0x758>
   162d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   162dc:	ldr	r1, [pc, #2956]	; 16e70 <argp_failure@@Base+0x1220>
   162e0:	cmp	r3, #0
   162e4:	ldr	r0, [pc, #2952]	; 16e74 <argp_failure@@Base+0x1224>
   162e8:	ldrne	r2, [r3]
   162ec:	ldreq	r2, [fp, #-104]	; 0xffffff98
   162f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   162f4:	bl	14140 <argp_parse@@Base+0x1d88>
   162f8:	subs	r4, r0, #0
   162fc:	beq	163a8 <argp_failure@@Base+0x758>
   16300:	ldrb	r3, [r4]
   16304:	cmp	r3, #0
   16308:	beq	1639c <argp_failure@@Base+0x74c>
   1630c:	ldr	r3, [r9, #28]
   16310:	ldr	r2, [r9, #32]
   16314:	cmp	r3, r2
   16318:	bcs	16fb8 <argp_failure@@Base+0x1368>
   1631c:	add	r1, r3, #1
   16320:	mov	r2, #10
   16324:	str	r1, [r9, #28]
   16328:	strb	r2, [r3]
   1632c:	mov	r0, r4
   16330:	bl	111bc <strlen@plt>
   16334:	subs	r5, r0, #0
   16338:	beq	16f94 <argp_failure@@Base+0x1344>
   1633c:	ldr	r0, [r9, #28]
   16340:	ldr	r2, [r9, #32]
   16344:	add	r3, r0, r5
   16348:	cmp	r2, r3
   1634c:	bcs	16368 <argp_failure@@Base+0x718>
   16350:	mov	r1, r5
   16354:	mov	r0, r9
   16358:	bl	18538 <argp_error@@Base+0x1490>
   1635c:	cmp	r0, #0
   16360:	beq	16f94 <argp_failure@@Base+0x1344>
   16364:	ldr	r0, [r9, #28]
   16368:	mov	r2, r5
   1636c:	mov	r1, r4
   16370:	bl	110a8 <memcpy@plt>
   16374:	ldr	r3, [r9, #28]
   16378:	add	r3, r3, r5
   1637c:	str	r3, [r9, #28]
   16380:	ldr	r2, [r9, #32]
   16384:	cmp	r2, r3
   16388:	bls	16f9c <argp_failure@@Base+0x134c>
   1638c:	add	r1, r3, #1
   16390:	mov	r2, #10
   16394:	str	r1, [r9, #28]
   16398:	strb	r2, [r3]
   1639c:	ldr	r3, [pc, #2768]	; 16e74 <argp_failure@@Base+0x1224>
   163a0:	cmp	r4, r3
   163a4:	bne	16ee8 <argp_failure@@Base+0x1298>
   163a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   163ac:	mov	r4, #1
   163b0:	tst	r3, #32
   163b4:	beq	15f00 <argp_failure@@Base+0x2b0>
   163b8:	mov	r3, #0
   163bc:	str	r3, [sp]
   163c0:	str	r9, [sp, #4]
   163c4:	mov	r3, r4
   163c8:	ldr	r1, [fp, #-104]	; 0xffffff98
   163cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   163d0:	mov	r2, #1
   163d4:	bl	1453c <argp_parse@@Base+0x2184>
   163d8:	orr	r4, r4, r0
   163dc:	b	15f00 <argp_failure@@Base+0x2b0>
   163e0:	ldr	r0, [pc, #2704]	; 16e78 <argp_failure@@Base+0x1228>
   163e4:	bl	1112c <getenv@plt>
   163e8:	mov	lr, sl
   163ec:	sub	r3, fp, #76	; 0x4c
   163f0:	mov	ip, r3
   163f4:	str	r3, [fp, #-100]	; 0xffffff9c
   163f8:	mov	r6, r0
   163fc:	ldm	lr!, {r0, r1, r2, r3}
   16400:	cmp	r6, #0
   16404:	stmia	ip!, {r0, r1, r2, r3}
   16408:	ldm	lr!, {r0, r1, r2, r3}
   1640c:	stmia	ip!, {r0, r1, r2, r3}
   16410:	ldm	lr, {r0, r1}
   16414:	stm	ip, {r0, r1}
   16418:	beq	15e98 <argp_failure@@Base+0x248>
   1641c:	ldrb	r9, [r6]
   16420:	ldr	r8, [pc, #2644]	; 16e7c <argp_failure@@Base+0x122c>
   16424:	cmp	r9, #0
   16428:	beq	1657c <argp_failure@@Base+0x92c>
   1642c:	bl	1118c <__ctype_b_loc@plt>
   16430:	mov	r5, r0
   16434:	ldr	r1, [r0]
   16438:	b	16440 <argp_failure@@Base+0x7f0>
   1643c:	ldrb	r9, [r6, #1]!
   16440:	lsl	r3, r9, #1
   16444:	ldrh	r3, [r1, r3]
   16448:	tst	r3, #8192	; 0x2000
   1644c:	bne	1643c <argp_failure@@Base+0x7ec>
   16450:	ands	r2, r3, #1024	; 0x400
   16454:	beq	16574 <argp_failure@@Base+0x924>
   16458:	cmp	r9, #95	; 0x5f
   1645c:	cmpne	r9, #45	; 0x2d
   16460:	lsl	r3, r3, #28
   16464:	moveq	r7, #1
   16468:	movne	r7, #0
   1646c:	orrs	r3, r7, r3, lsr #31
   16470:	beq	16d30 <argp_failure@@Base+0x10e0>
   16474:	mov	r4, r6
   16478:	ldrb	r3, [r4, #1]!
   1647c:	cmp	r3, #95	; 0x5f
   16480:	cmpne	r3, #45	; 0x2d
   16484:	lsl	r2, r3, #1
   16488:	moveq	r0, #1
   1648c:	ldrh	r2, [r1, r2]
   16490:	movne	r0, #0
   16494:	lsl	ip, r2, #28
   16498:	orrs	r0, r0, ip, lsr #31
   1649c:	bne	16478 <argp_failure@@Base+0x828>
   164a0:	tst	r2, #8192	; 0x2000
   164a4:	sub	r7, r4, r6
   164a8:	beq	164c0 <argp_failure@@Base+0x870>
   164ac:	ldrb	r3, [r4, #1]!
   164b0:	lsl	r2, r3, #1
   164b4:	ldrh	r2, [r1, r2]
   164b8:	tst	r2, #8192	; 0x2000
   164bc:	bne	164ac <argp_failure@@Base+0x85c>
   164c0:	cmp	r3, #44	; 0x2c
   164c4:	cmpne	r3, #0
   164c8:	beq	165dc <argp_failure@@Base+0x98c>
   164cc:	cmp	r3, #61	; 0x3d
   164d0:	beq	16938 <argp_failure@@Base+0xce8>
   164d4:	ldrb	r3, [r4]
   164d8:	lsl	r3, r3, #1
   164dc:	ldrh	r3, [r1, r3]
   164e0:	tst	r3, #2048	; 0x800
   164e4:	bne	168d8 <argp_failure@@Base+0xc88>
   164e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   164ec:	mov	r9, r3
   164f0:	str	r3, [fp, #-116]	; 0xffffff8c
   164f4:	ldr	r5, [pc, #2436]	; 16e80 <argp_failure@@Base+0x1230>
   164f8:	b	16508 <argp_failure@@Base+0x8b8>
   164fc:	add	r5, r5, #16
   16500:	cmp	r5, r8
   16504:	beq	16d98 <argp_failure@@Base+0x1148>
   16508:	mov	r0, r5
   1650c:	bl	111bc <strlen@plt>
   16510:	cmp	r0, r7
   16514:	bne	164fc <argp_failure@@Base+0x8ac>
   16518:	mov	r2, r7
   1651c:	mov	r1, r5
   16520:	mov	r0, r6
   16524:	bl	112b8 <strncmp@plt>
   16528:	cmp	r0, #0
   1652c:	bne	164fc <argp_failure@@Base+0x8ac>
   16530:	cmp	r9, #0
   16534:	beq	16544 <argp_failure@@Base+0x8f4>
   16538:	ldrb	r1, [r5, #14]
   1653c:	cmp	r1, #0
   16540:	beq	16f78 <argp_failure@@Base+0x1328>
   16544:	ldrb	r3, [r5, #15]
   16548:	sub	r2, fp, #36	; 0x24
   1654c:	add	r3, r2, r3
   16550:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16554:	str	r2, [r3, #-40]	; 0xffffffd8
   16558:	cmp	r5, r8
   1655c:	beq	16d98 <argp_failure@@Base+0x1148>
   16560:	ldrb	r9, [r4]
   16564:	cmp	r9, #44	; 0x2c
   16568:	beq	16c78 <argp_failure@@Base+0x1028>
   1656c:	mov	r6, r4
   16570:	b	16424 <argp_failure@@Base+0x7d4>
   16574:	cmp	r9, #0
   16578:	bne	16ed0 <argp_failure@@Base+0x1280>
   1657c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16580:	ldr	r1, [pc, #2296]	; 16e80 <argp_failure@@Base+0x1230>
   16584:	add	r3, r1, #16
   16588:	cmp	r3, r8
   1658c:	mov	r1, r3
   16590:	beq	16cd4 <argp_failure@@Base+0x1084>
   16594:	ldrb	r2, [r3, #14]
   16598:	cmp	r2, #0
   1659c:	bne	16584 <argp_failure@@Base+0x934>
   165a0:	ldrb	r0, [r3, #15]
   165a4:	sub	ip, fp, #36	; 0x24
   165a8:	cmp	r0, #32
   165ac:	add	ip, ip, r0
   165b0:	beq	16584 <argp_failure@@Base+0x934>
   165b4:	ldr	r0, [ip, #-40]	; 0xffffffd8
   165b8:	cmp	r0, lr
   165bc:	blt	16584 <argp_failure@@Base+0x934>
   165c0:	ldr	r1, [pc, #2236]	; 16e84 <argp_failure@@Base+0x1234>
   165c4:	ldr	r0, [fp, #-104]	; 0xffffff98
   165c8:	stm	sp, {r1, r3}
   165cc:	ldr	r3, [pc, #2228]	; 16e88 <argp_failure@@Base+0x1238>
   165d0:	mov	r1, r2
   165d4:	bl	15c50 <argp_failure@@Base>
   165d8:	b	15e98 <argp_failure@@Base+0x248>
   165dc:	cmp	r9, #110	; 0x6e
   165e0:	beq	16968 <argp_failure@@Base+0xd18>
   165e4:	mov	r9, #1
   165e8:	str	r9, [fp, #-116]	; 0xffffff8c
   165ec:	b	164f4 <argp_failure@@Base+0x8a4>
   165f0:	ldr	r3, [fp, #4]
   165f4:	ldr	r1, [pc, #2192]	; 16e8c <argp_failure@@Base+0x123c>
   165f8:	mov	r2, r3
   165fc:	mov	r0, r9
   16600:	bl	18558 <argp_error@@Base+0x14b0>
   16604:	mov	r4, #1
   16608:	b	15ee8 <argp_failure@@Base+0x298>
   1660c:	mov	r2, #1
   16610:	mov	r3, #0
   16614:	stm	sp, {r2, r9}
   16618:	ldr	r1, [fp, #-104]	; 0xffffff98
   1661c:	mov	r2, r3
   16620:	ldr	r0, [fp, #-112]	; 0xffffff90
   16624:	bl	1453c <argp_parse@@Base+0x2184>
   16628:	orr	r4, r4, r0
   1662c:	b	15edc <argp_failure@@Base+0x28c>
   16630:	ldr	r3, [fp, #-112]	; 0xffffff90
   16634:	mov	r4, #1
   16638:	mov	r6, r4
   1663c:	ldr	r1, [r3, #16]
   16640:	ldr	r0, [r3, #8]
   16644:	bl	15a40 <argp_parse@@Base+0x3688>
   16648:	mov	r1, #0
   1664c:	add	r3, r0, #14
   16650:	bic	r3, r3, #7
   16654:	sub	sp, sp, r3
   16658:	add	r7, sp, #8
   1665c:	mov	r2, r0
   16660:	mov	r0, r7
   16664:	bl	11204 <memset@plt>
   16668:	sub	r3, fp, #76	; 0x4c
   1666c:	str	r3, [fp, #-100]	; 0xffffff9c
   16670:	ldr	r8, [fp, #-136]	; 0xffffff78
   16674:	str	r7, [fp, #-108]	; 0xffffff94
   16678:	b	16794 <argp_failure@@Base+0xb44>
   1667c:	cmp	r4, #0
   16680:	ldr	r3, [fp, #-108]	; 0xffffff94
   16684:	ldr	r5, [r9, #12]
   16688:	ldrne	r2, [pc, #2048]	; 16e90 <argp_failure@@Base+0x1240>
   1668c:	str	r7, [r9, #12]
   16690:	ldreq	r2, [pc, #2044]	; 16e94 <argp_failure@@Base+0x1244>
   16694:	str	r3, [fp, #-76]	; 0xffffffb4
   16698:	ldr	r1, [pc, #2040]	; 16e98 <argp_failure@@Base+0x1248>
   1669c:	ldr	r3, [fp, #4]
   166a0:	mov	r0, r9
   166a4:	bl	18558 <argp_error@@Base+0x14b0>
   166a8:	ldr	r3, [r9, #28]
   166ac:	ldr	r1, [r9, #24]
   166b0:	ldr	r2, [r9, #16]
   166b4:	sub	r3, r3, r1
   166b8:	cmp	r3, r2
   166bc:	ldr	r7, [sl, #28]
   166c0:	bhi	16828 <argp_failure@@Base+0xbd8>
   166c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166c8:	ldr	r4, [r9, #4]
   166cc:	tst	r3, #2
   166d0:	str	r7, [r9, #4]
   166d4:	beq	1680c <argp_failure@@Base+0xbbc>
   166d8:	ldr	r3, [r8, #4]
   166dc:	cmp	r3, #0
   166e0:	beq	16730 <argp_failure@@Base+0xae0>
   166e4:	ldr	ip, [r9, #28]
   166e8:	ldr	r2, [r9, #32]
   166ec:	add	r3, ip, #12
   166f0:	cmp	r2, r3
   166f4:	bcs	16710 <argp_failure@@Base+0xac0>
   166f8:	mov	r1, #12
   166fc:	mov	r0, r9
   16700:	bl	18538 <argp_error@@Base+0x1490>
   16704:	cmp	r0, #0
   16708:	beq	16730 <argp_failure@@Base+0xae0>
   1670c:	ldr	ip, [r9, #28]
   16710:	ldr	r3, [pc, #1924]	; 16e9c <argp_failure@@Base+0x124c>
   16714:	ldm	r3!, {r0, r1, r2}
   16718:	str	r0, [ip]
   1671c:	str	r1, [ip, #4]
   16720:	str	r2, [ip, #8]
   16724:	ldr	r3, [r9, #28]
   16728:	add	r3, r3, #12
   1672c:	str	r3, [r9, #28]
   16730:	mov	r3, r6
   16734:	ldr	r1, [fp, #-104]	; 0xffffff98
   16738:	str	r9, [sp]
   1673c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16740:	ldr	r0, [fp, #-112]	; 0xffffff90
   16744:	bl	15078 <argp_parse@@Base+0x2cc0>
   16748:	ldr	r3, [r9, #28]
   1674c:	ldr	r1, [r9, #24]
   16750:	sub	r1, r3, r1
   16754:	mov	r7, r0
   16758:	ldr	r0, [r9, #16]
   1675c:	cmp	r1, r0
   16760:	strls	r5, [r9, #12]
   16764:	bhi	167d8 <argp_failure@@Base+0xb88>
   16768:	ldr	r1, [r9, #32]
   1676c:	str	r4, [r9, #4]
   16770:	cmp	r1, r3
   16774:	bls	167bc <argp_failure@@Base+0xb6c>
   16778:	add	r1, r3, #1
   1677c:	mov	r2, #10
   16780:	str	r1, [r9, #28]
   16784:	strb	r2, [r3]
   16788:	cmp	r7, #0
   1678c:	mov	r4, #0
   16790:	beq	16834 <argp_failure@@Base+0xbe4>
   16794:	ldr	r3, [r9, #28]
   16798:	ldr	r1, [r9, #24]
   1679c:	ldr	r2, [r9, #16]
   167a0:	sub	r3, r3, r1
   167a4:	cmp	r3, r2
   167a8:	ldr	r7, [sl, #28]
   167ac:	bls	1667c <argp_failure@@Base+0xa2c>
   167b0:	mov	r0, r9
   167b4:	bl	17ea8 <argp_error@@Base+0xe00>
   167b8:	b	1667c <argp_failure@@Base+0xa2c>
   167bc:	mov	r1, r6
   167c0:	mov	r0, r9
   167c4:	bl	18538 <argp_error@@Base+0x1490>
   167c8:	cmp	r0, #0
   167cc:	beq	16788 <argp_failure@@Base+0xb38>
   167d0:	ldr	r3, [r9, #28]
   167d4:	b	16778 <argp_failure@@Base+0xb28>
   167d8:	mov	r0, r9
   167dc:	bl	17ea8 <argp_error@@Base+0xe00>
   167e0:	ldr	r3, [r9, #28]
   167e4:	ldr	r1, [r9, #24]
   167e8:	ldr	r0, [r9, #16]
   167ec:	sub	r1, r3, r1
   167f0:	cmp	r1, r0
   167f4:	str	r5, [r9, #12]
   167f8:	bls	16768 <argp_failure@@Base+0xb18>
   167fc:	mov	r0, r9
   16800:	bl	17ea8 <argp_error@@Base+0xe00>
   16804:	ldr	r3, [r9, #28]
   16808:	b	16768 <argp_failure@@Base+0xb18>
   1680c:	mov	r1, r9
   16810:	mov	r0, r8
   16814:	bl	15a98 <argp_parse@@Base+0x36e0>
   16818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1681c:	orr	r3, r3, #2
   16820:	str	r3, [fp, #-96]	; 0xffffffa0
   16824:	b	16730 <argp_failure@@Base+0xae0>
   16828:	mov	r0, r9
   1682c:	bl	17ea8 <argp_error@@Base+0xe00>
   16830:	b	166c4 <argp_failure@@Base+0xa74>
   16834:	mov	r4, #1
   16838:	b	15ed0 <argp_failure@@Base+0x280>
   1683c:	mov	r1, #0
   16840:	ldr	r0, [fp, #-112]	; 0xffffff90
   16844:	bl	152c8 <argp_parse@@Base+0x2f10>
   16848:	ldr	r2, [pc, #1616]	; 16ea0 <argp_failure@@Base+0x1250>
   1684c:	ldr	r4, [r0, #4]
   16850:	ldr	r5, [r0]
   16854:	mov	r1, r4
   16858:	mov	r6, r0
   1685c:	str	r0, [fp, #-136]	; 0xffffff78
   16860:	mov	r0, r5
   16864:	bl	159b8 <argp_parse@@Base+0x3600>
   16868:	ldr	r2, [pc, #1588]	; 16ea4 <argp_failure@@Base+0x1254>
   1686c:	cmp	r0, #0
   16870:	mvnne	r3, #0
   16874:	strne	r3, [r0, #12]
   16878:	movne	r3, r6
   1687c:	mov	r0, r5
   16880:	ldrne	r4, [r3, #4]
   16884:	mov	r1, r4
   16888:	bl	159b8 <argp_parse@@Base+0x3600>
   1688c:	cmp	r0, #0
   16890:	mvnne	r3, #0
   16894:	strne	r3, [r0, #12]
   16898:	ldrne	r3, [fp, #-136]	; 0xffffff78
   1689c:	ldrne	r4, [r3, #4]
   168a0:	cmp	r4, #0
   168a4:	beq	15ec4 <argp_failure@@Base+0x274>
   168a8:	mov	r3, r5
   168ac:	mov	r1, #0
   168b0:	str	r1, [r3, #24]
   168b4:	add	r1, r1, #1
   168b8:	cmp	r1, r4
   168bc:	add	r3, r3, #28
   168c0:	bne	168b0 <argp_failure@@Base+0xc60>
   168c4:	mov	r0, r5
   168c8:	ldr	r3, [pc, #1496]	; 16ea8 <argp_failure@@Base+0x1258>
   168cc:	mov	r2, #28
   168d0:	bl	11288 <qsort@plt>
   168d4:	b	15ec4 <argp_failure@@Base+0x274>
   168d8:	mov	r2, #10
   168dc:	mov	r1, #0
   168e0:	mov	r0, r4
   168e4:	bl	1103c <strtol@plt>
   168e8:	ldrb	r3, [r4]
   168ec:	ldr	r2, [r5]
   168f0:	lsl	r3, r3, #1
   168f4:	ldrh	r3, [r2, r3]
   168f8:	tst	r3, #2048	; 0x800
   168fc:	str	r0, [fp, #-116]	; 0xffffff8c
   16900:	beq	16928 <argp_failure@@Base+0xcd8>
   16904:	ldrb	r3, [r4, #1]!
   16908:	lsl	r3, r3, #1
   1690c:	ldrh	r3, [r2, r3]
   16910:	tst	r3, #2048	; 0x800
   16914:	bne	16904 <argp_failure@@Base+0xcb4>
   16918:	b	16928 <argp_failure@@Base+0xcd8>
   1691c:	ldrb	r3, [r4, #1]!
   16920:	lsl	r3, r3, #1
   16924:	ldrh	r3, [r2, r3]
   16928:	tst	r3, #8192	; 0x2000
   1692c:	bne	1691c <argp_failure@@Base+0xccc>
   16930:	ldr	r9, [fp, #-108]	; 0xffffff94
   16934:	b	164f4 <argp_failure@@Base+0x8a4>
   16938:	ldrb	r3, [r4, #1]
   1693c:	add	r4, r4, #1
   16940:	lsl	r3, r3, #1
   16944:	ldrh	r3, [r1, r3]
   16948:	tst	r3, #8192	; 0x2000
   1694c:	beq	164e0 <argp_failure@@Base+0x890>
   16950:	ldrb	r3, [r4, #1]!
   16954:	lsl	r3, r3, #1
   16958:	ldrh	r3, [r1, r3]
   1695c:	tst	r3, #8192	; 0x2000
   16960:	bne	16950 <argp_failure@@Base+0xd00>
   16964:	b	164e0 <argp_failure@@Base+0x890>
   16968:	ldrb	r3, [r6, #1]
   1696c:	cmp	r3, #111	; 0x6f
   16970:	bne	165e4 <argp_failure@@Base+0x994>
   16974:	ldrb	r3, [r6, #2]
   16978:	cmp	r3, #45	; 0x2d
   1697c:	bne	165e4 <argp_failure@@Base+0x994>
   16980:	ldr	r3, [fp, #-108]	; 0xffffff94
   16984:	add	r6, r6, #3
   16988:	sub	r7, r7, #3
   1698c:	str	r3, [fp, #-116]	; 0xffffff8c
   16990:	mov	r9, #1
   16994:	b	164f4 <argp_failure@@Base+0x8a4>
   16998:	mov	r3, #1
   1699c:	str	r3, [fp, #-128]	; 0xffffff80
   169a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169a4:	cmp	lr, r5
   169a8:	ldr	r5, [r3, #8]
   169ac:	bls	160a8 <argp_failure@@Base+0x458>
   169b0:	mov	r0, r9
   169b4:	bl	17ea8 <argp_error@@Base+0xe00>
   169b8:	ldr	r7, [r6, #12]
   169bc:	and	r2, r7, #8
   169c0:	mov	r4, r2
   169c4:	b	160a8 <argp_failure@@Base+0x458>
   169c8:	cmp	r3, r2
   169cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169d0:	ldr	r4, [r3, #12]
   169d4:	bhi	16c84 <argp_failure@@Base+0x1034>
   169d8:	str	r4, [r9, #12]
   169dc:	ldr	r5, [r8, #4]
   169e0:	cmp	r5, #0
   169e4:	beq	16214 <argp_failure@@Base+0x5c4>
   169e8:	add	r4, r6, #24
   169ec:	ldr	r7, [fp, #-100]	; 0xffffff9c
   169f0:	b	16a00 <argp_failure@@Base+0xdb0>
   169f4:	subs	r5, r5, #1
   169f8:	add	r4, r4, #24
   169fc:	beq	16214 <argp_failure@@Base+0x5c4>
   16a00:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16a04:	cmp	r3, #0
   16a08:	beq	169f4 <argp_failure@@Base+0xda4>
   16a0c:	ldr	r3, [r4, #-12]
   16a10:	tst	r3, #2
   16a14:	bne	169f4 <argp_failure@@Base+0xda4>
   16a18:	sub	r1, fp, #76	; 0x4c
   16a1c:	ldr	r0, [r7, #12]
   16a20:	bl	14390 <argp_parse@@Base+0x1fd8>
   16a24:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16a28:	ldr	r1, [pc, #1148]	; 16eac <argp_failure@@Base+0x125c>
   16a2c:	mov	r0, r9
   16a30:	bl	18558 <argp_error@@Base+0x14b0>
   16a34:	ldr	r3, [r6, #8]
   16a38:	ldr	r1, [pc, #1136]	; 16eb0 <argp_failure@@Base+0x1260>
   16a3c:	subs	r2, r3, #0
   16a40:	mov	r0, r9
   16a44:	beq	169f4 <argp_failure@@Base+0xda4>
   16a48:	ldr	ip, [r6, #12]
   16a4c:	tst	ip, #1
   16a50:	ldrne	r1, [pc, #1116]	; 16eb4 <argp_failure@@Base+0x1264>
   16a54:	bl	18558 <argp_error@@Base+0x14b0>
   16a58:	b	169f4 <argp_failure@@Base+0xda4>
   16a5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a60:	sub	r1, fp, #76	; 0x4c
   16a64:	ldr	r0, [r3, #8]
   16a68:	bl	14390 <argp_parse@@Base+0x1fd8>
   16a6c:	ldr	r3, [r9, #28]
   16a70:	ldr	r2, [r9, #32]
   16a74:	cmp	r3, r2
   16a78:	bcs	16cb8 <argp_failure@@Base+0x1068>
   16a7c:	add	r2, r3, #1
   16a80:	str	r2, [r9, #28]
   16a84:	mov	r2, #45	; 0x2d
   16a88:	strb	r2, [r3]
   16a8c:	ldr	r3, [r9, #28]
   16a90:	ldr	r2, [r9, #32]
   16a94:	ldrb	r7, [sl]
   16a98:	cmp	r3, r2
   16a9c:	bcs	16c9c <argp_failure@@Base+0x104c>
   16aa0:	add	r2, r3, #1
   16aa4:	str	r2, [r9, #28]
   16aa8:	strb	r7, [r3]
   16aac:	ldr	r3, [fp, #-128]	; 0xffffff80
   16ab0:	cmp	r3, #0
   16ab4:	beq	16c50 <argp_failure@@Base+0x1000>
   16ab8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16abc:	ldr	r3, [r3]
   16ac0:	cmp	r3, #0
   16ac4:	bne	16c50 <argp_failure@@Base+0x1000>
   16ac8:	ldr	r3, [r6, #8]
   16acc:	cmp	r3, #0
   16ad0:	movne	r3, #1
   16ad4:	strne	r3, [fp, #-80]	; 0xffffffb0
   16ad8:	b	1611c <argp_failure@@Base+0x4cc>
   16adc:	mov	r0, r9
   16ae0:	bl	17ea8 <argp_error@@Base+0xe00>
   16ae4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16ae8:	ldr	r3, [r9, #28]
   16aec:	ldr	r1, [r9, #24]
   16af0:	str	r2, [r9, #4]
   16af4:	ldr	r2, [r9, #16]
   16af8:	sub	r3, r3, r1
   16afc:	cmp	r3, r2
   16b00:	bls	162a0 <argp_failure@@Base+0x650>
   16b04:	mov	r0, r9
   16b08:	bl	17ea8 <argp_error@@Base+0xe00>
   16b0c:	b	162a0 <argp_failure@@Base+0x650>
   16b10:	mov	r0, r9
   16b14:	bl	17ea8 <argp_error@@Base+0xe00>
   16b18:	ldr	lr, [r9, #28]
   16b1c:	ldr	r2, [r9, #24]
   16b20:	ldr	r5, [r9, #16]
   16b24:	sub	lr, lr, r2
   16b28:	b	16014 <argp_failure@@Base+0x3c4>
   16b2c:	ldr	r4, [r6, #16]
   16b30:	ldr	r1, [r6, #4]
   16b34:	mov	r0, r4
   16b38:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b3c:	ldr	r2, [r8, #20]
   16b40:	bl	14140 <argp_parse@@Base+0x1d88>
   16b44:	subs	r5, r0, #0
   16b48:	beq	16c00 <argp_failure@@Base+0xfb0>
   16b4c:	ldrb	r3, [r5]
   16b50:	cmp	r3, #0
   16b54:	beq	16bf0 <argp_failure@@Base+0xfa0>
   16b58:	ldr	r3, [r9, #28]
   16b5c:	ldr	r1, [r9, #24]
   16b60:	ldr	r2, [r9, #16]
   16b64:	sub	r3, r3, r1
   16b68:	cmp	r3, r2
   16b6c:	bhi	16df0 <argp_failure@@Base+0x11a0>
   16b70:	ldr	r7, [r9, #20]
   16b74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b78:	bic	r7, r7, r7, asr #31
   16b7c:	ldr	r6, [r3, #20]
   16b80:	mov	r3, r6
   16b84:	str	r6, [r9, #4]
   16b88:	add	r2, r6, #3
   16b8c:	cmp	r2, r7
   16b90:	str	r3, [r9, #12]
   16b94:	bcs	16d40 <argp_failure@@Base+0x10f0>
   16b98:	ldr	r3, [r9, #28]
   16b9c:	ldr	r2, [r9, #32]
   16ba0:	cmp	r3, r2
   16ba4:	bcs	16f40 <argp_failure@@Base+0x12f0>
   16ba8:	add	r1, r3, #1
   16bac:	mov	r2, #10
   16bb0:	str	r1, [r9, #28]
   16bb4:	strb	r2, [r3]
   16bb8:	mov	r0, r5
   16bbc:	bl	111bc <strlen@plt>
   16bc0:	subs	r6, r0, #0
   16bc4:	beq	16bf0 <argp_failure@@Base+0xfa0>
   16bc8:	ldr	r0, [r9, #28]
   16bcc:	ldr	r2, [r9, #32]
   16bd0:	add	r3, r0, r6
   16bd4:	cmp	r2, r3
   16bd8:	bcs	16dd4 <argp_failure@@Base+0x1184>
   16bdc:	mov	r1, r6
   16be0:	mov	r0, r9
   16be4:	bl	18538 <argp_error@@Base+0x1490>
   16be8:	cmp	r0, #0
   16bec:	bne	16dd0 <argp_failure@@Base+0x1180>
   16bf0:	cmp	r4, r5
   16bf4:	beq	16c00 <argp_failure@@Base+0xfb0>
   16bf8:	mov	r0, r5
   16bfc:	bl	13250 <argp_parse@@Base+0xe98>
   16c00:	ldr	r3, [r9, #28]
   16c04:	ldr	r2, [r9, #24]
   16c08:	ldr	r1, [r9, #16]
   16c0c:	sub	r2, r3, r2
   16c10:	cmp	r2, r1
   16c14:	bhi	16d20 <argp_failure@@Base+0x10d0>
   16c18:	ldr	r1, [r9, #32]
   16c1c:	mov	r2, #0
   16c20:	cmp	r1, r3
   16c24:	str	r2, [r9, #4]
   16c28:	bls	16d04 <argp_failure@@Base+0x10b4>
   16c2c:	add	r1, r3, #1
   16c30:	mov	r2, #10
   16c34:	str	r1, [r9, #28]
   16c38:	strb	r2, [r3]
   16c3c:	str	r8, [fp, #-88]	; 0xffffffa8
   16c40:	b	16280 <argp_failure@@Base+0x630>
   16c44:	mov	r0, r9
   16c48:	bl	17ea8 <argp_error@@Base+0xe00>
   16c4c:	b	1622c <argp_failure@@Base+0x5dc>
   16c50:	ldr	r2, [r6, #8]
   16c54:	cmp	r2, #0
   16c58:	beq	1611c <argp_failure@@Base+0x4cc>
   16c5c:	ldr	r3, [r6, #12]
   16c60:	mov	r0, r9
   16c64:	tst	r3, #1
   16c68:	ldrne	r1, [pc, #584]	; 16eb8 <argp_failure@@Base+0x1268>
   16c6c:	ldreq	r1, [pc, #584]	; 16ebc <argp_failure@@Base+0x126c>
   16c70:	bl	18558 <argp_error@@Base+0x14b0>
   16c74:	b	1611c <argp_failure@@Base+0x4cc>
   16c78:	ldrb	r9, [r4, #1]
   16c7c:	add	r4, r4, #1
   16c80:	b	1656c <argp_failure@@Base+0x91c>
   16c84:	mov	r0, r9
   16c88:	bl	17ea8 <argp_error@@Base+0xe00>
   16c8c:	b	169d8 <argp_failure@@Base+0xd88>
   16c90:	mov	r0, r9
   16c94:	bl	17ea8 <argp_error@@Base+0xe00>
   16c98:	b	16160 <argp_failure@@Base+0x510>
   16c9c:	mov	r1, #1
   16ca0:	mov	r0, r9
   16ca4:	bl	18538 <argp_error@@Base+0x1490>
   16ca8:	cmp	r0, #0
   16cac:	beq	16aac <argp_failure@@Base+0xe5c>
   16cb0:	ldr	r3, [r9, #28]
   16cb4:	b	16aa0 <argp_failure@@Base+0xe50>
   16cb8:	mov	r1, #1
   16cbc:	mov	r0, r9
   16cc0:	bl	18538 <argp_error@@Base+0x1490>
   16cc4:	cmp	r0, #0
   16cc8:	beq	16a8c <argp_failure@@Base+0xe3c>
   16ccc:	ldr	r3, [r9, #28]
   16cd0:	b	16a7c <argp_failure@@Base+0xe2c>
   16cd4:	ldr	lr, [fp, #-100]	; 0xffffff9c
   16cd8:	ldr	sl, [pc, #388]	; 16e64 <argp_failure@@Base+0x1214>
   16cdc:	mov	r4, #1
   16ce0:	ldm	lr!, {r0, r1, r2, r3}
   16ce4:	mov	ip, sl
   16ce8:	stmia	ip!, {r0, r1, r2, r3}
   16cec:	ldm	lr!, {r0, r1, r2, r3}
   16cf0:	stmia	ip!, {r0, r1, r2, r3}
   16cf4:	ldm	lr, {r0, r1}
   16cf8:	stm	ip, {r0, r1}
   16cfc:	str	r4, [sl, #36]	; 0x24
   16d00:	b	15e98 <argp_failure@@Base+0x248>
   16d04:	mov	r1, #1
   16d08:	mov	r0, r9
   16d0c:	bl	18538 <argp_error@@Base+0x1490>
   16d10:	cmp	r0, #0
   16d14:	beq	16c3c <argp_failure@@Base+0xfec>
   16d18:	ldr	r3, [r9, #28]
   16d1c:	b	16c2c <argp_failure@@Base+0xfdc>
   16d20:	mov	r0, r9
   16d24:	bl	17ea8 <argp_error@@Base+0xe00>
   16d28:	ldr	r3, [r9, #28]
   16d2c:	b	16c18 <argp_failure@@Base+0xfc8>
   16d30:	mov	r7, r3
   16d34:	mov	r4, r6
   16d38:	mov	r3, r9
   16d3c:	b	164c0 <argp_failure@@Base+0x870>
   16d40:	cmp	r6, r7
   16d44:	bhi	16f30 <argp_failure@@Base+0x12e0>
   16d48:	ldr	r3, [r9, #28]
   16d4c:	ldr	r1, [r9, #32]
   16d50:	add	r2, r3, #3
   16d54:	cmp	r1, r2
   16d58:	bcs	16d74 <argp_failure@@Base+0x1124>
   16d5c:	mov	r1, #3
   16d60:	mov	r0, r9
   16d64:	bl	18538 <argp_error@@Base+0x1490>
   16d68:	cmp	r0, #0
   16d6c:	beq	16bb8 <argp_failure@@Base+0xf68>
   16d70:	ldr	r3, [r9, #28]
   16d74:	ldr	r2, [pc, #324]	; 16ec0 <argp_failure@@Base+0x1270>
   16d78:	ldrh	r1, [r2]
   16d7c:	ldrb	r2, [r2, #2]
   16d80:	strh	r1, [r3]
   16d84:	strb	r2, [r3, #2]
   16d88:	ldr	r3, [r9, #28]
   16d8c:	add	r3, r3, #3
   16d90:	str	r3, [r9, #28]
   16d94:	b	16bb8 <argp_failure@@Base+0xf68>
   16d98:	mov	r2, #0
   16d9c:	str	r6, [sp, #4]
   16da0:	str	r7, [sp]
   16da4:	ldr	r3, [pc, #280]	; 16ec4 <argp_failure@@Base+0x1274>
   16da8:	mov	r1, r2
   16dac:	ldr	r0, [fp, #-104]	; 0xffffff98
   16db0:	bl	15c50 <argp_failure@@Base>
   16db4:	b	16560 <argp_failure@@Base+0x910>
   16db8:	ldr	r3, [fp, #-136]	; 0xffffff78
   16dbc:	ldr	r8, [r3]
   16dc0:	str	r4, [fp, #-88]	; 0xffffffa8
   16dc4:	str	r4, [fp, #-84]	; 0xffffffac
   16dc8:	str	r4, [fp, #-80]	; 0xffffffb0
   16dcc:	b	15ff0 <argp_failure@@Base+0x3a0>
   16dd0:	ldr	r0, [r9, #28]
   16dd4:	mov	r2, r6
   16dd8:	mov	r1, r5
   16ddc:	bl	110a8 <memcpy@plt>
   16de0:	ldr	r3, [r9, #28]
   16de4:	add	r6, r3, r6
   16de8:	str	r6, [r9, #28]
   16dec:	b	16bf0 <argp_failure@@Base+0xfa0>
   16df0:	mov	r0, r9
   16df4:	bl	17ea8 <argp_error@@Base+0xe00>
   16df8:	ldr	r3, [r9, #28]
   16dfc:	ldr	r1, [r9, #24]
   16e00:	ldr	r2, [r9, #16]
   16e04:	ldr	r7, [r9, #20]
   16e08:	ldr	sl, [fp, #-100]	; 0xffffff9c
   16e0c:	sub	r3, r3, r1
   16e10:	cmp	r3, r2
   16e14:	ldr	r6, [sl, #20]
   16e18:	bic	r7, r7, r7, asr #31
   16e1c:	bls	16b80 <argp_failure@@Base+0xf30>
   16e20:	mov	r0, r9
   16e24:	bl	17ea8 <argp_error@@Base+0xe00>
   16e28:	ldr	r3, [r9, #28]
   16e2c:	ldr	r1, [r9, #24]
   16e30:	ldr	r2, [r9, #16]
   16e34:	sub	r3, r3, r1
   16e38:	cmp	r3, r2
   16e3c:	ldr	r3, [sl, #20]
   16e40:	str	r6, [r9, #4]
   16e44:	movls	r6, r3
   16e48:	bls	16b88 <argp_failure@@Base+0xf38>
   16e4c:	mov	r0, r9
   16e50:	str	r3, [fp, #-124]	; 0xffffff84
   16e54:	bl	17ea8 <argp_error@@Base+0xe00>
   16e58:	ldr	r6, [sl, #20]
   16e5c:	ldr	r3, [fp, #-124]	; 0xffffff84
   16e60:	b	16b88 <argp_failure@@Base+0xf38>
   16e64:	andeq	sl, r2, ip, ror #6
   16e68:	andeq	sl, r2, r8, lsl r4
   16e6c:	andeq	r9, r1, r4, ror #19
   16e70:	andeq	r0, r0, #5
   16e74:	andeq	r9, r1, r0, ror r9
   16e78:	andeq	r9, r1, ip, lsr #16
   16e7c:	strdeq	r9, [r1], -ip
   16e80:	andeq	r9, r1, ip, ror #12
   16e84:	andeq	r9, r1, r8, ror #17
   16e88:			; <UNDEFINED> instruction: 0x000198b4
   16e8c:	andeq	r9, r1, r8, lsl r9
   16e90:	strdeq	r9, [r1], -r0
   16e94:	andeq	r9, r1, r0, lsl #18
   16e98:	strdeq	r9, [r1], -r8
   16e9c:	andeq	r9, r1, r8, lsl #18
   16ea0:	strdeq	r9, [r1], -r0
   16ea4:	ldrdeq	r9, [r1], -r0
   16ea8:	andeq	r4, r1, r8, ror fp
   16eac:	andeq	r9, r1, r8, asr r9
   16eb0:	andeq	r9, r1, r8, ror #18
   16eb4:	andeq	r9, r1, r0, ror #18
   16eb8:	andeq	r9, r1, r0, asr r9
   16ebc:	andeq	r9, r1, r0, lsr #3
   16ec0:	andeq	r9, r1, ip, ror #18
   16ec4:	andeq	r9, r1, ip, ror #16
   16ec8:	muleq	r1, r4, r8
   16ecc:	andeq	r9, r1, ip, lsr r8
   16ed0:	str	r6, [sp]
   16ed4:	ldr	r3, [pc, #-20]	; 16ec8 <argp_failure@@Base+0x1278>
   16ed8:	mov	r1, r2
   16edc:	ldr	r0, [fp, #-104]	; 0xffffff98
   16ee0:	bl	15c50 <argp_failure@@Base>
   16ee4:	b	1657c <argp_failure@@Base+0x92c>
   16ee8:	mov	r0, r4
   16eec:	bl	13250 <argp_parse@@Base+0xe98>
   16ef0:	b	163a8 <argp_failure@@Base+0x758>
   16ef4:	ldr	r0, [r6, #16]
   16ef8:	sub	r2, fp, #76	; 0x4c
   16efc:	ldr	r1, [r8, #20]
   16f00:	bl	14184 <argp_parse@@Base+0x1dcc>
   16f04:	b	16c3c <argp_failure@@Base+0xfec>
   16f08:	mov	r1, #1
   16f0c:	mov	r0, r9
   16f10:	bl	18538 <argp_error@@Base+0x1490>
   16f14:	cmp	r0, #0
   16f18:	beq	15f70 <argp_failure@@Base+0x320>
   16f1c:	ldr	r3, [r9, #28]
   16f20:	b	15f60 <argp_failure@@Base+0x310>
   16f24:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16f28:	bl	110fc <funlockfile@plt>
   16f2c:	b	15f30 <argp_failure@@Base+0x2e0>
   16f30:	mov	r1, r6
   16f34:	mov	r0, r9
   16f38:	bl	140ac <argp_parse@@Base+0x1cf4>
   16f3c:	b	16bb8 <argp_failure@@Base+0xf68>
   16f40:	mov	r1, #1
   16f44:	mov	r0, r9
   16f48:	bl	18538 <argp_error@@Base+0x1490>
   16f4c:	cmp	r0, #0
   16f50:	beq	16bb8 <argp_failure@@Base+0xf68>
   16f54:	ldr	r3, [r9, #28]
   16f58:	b	16ba8 <argp_failure@@Base+0xf58>
   16f5c:	mov	r1, #1
   16f60:	mov	r0, r9
   16f64:	bl	18538 <argp_error@@Base+0x1490>
   16f68:	cmp	r0, #0
   16f6c:	beq	15fc0 <argp_failure@@Base+0x370>
   16f70:	ldr	r3, [r9, #28]
   16f74:	b	15fb0 <argp_failure@@Base+0x360>
   16f78:	str	r6, [sp, #4]
   16f7c:	str	r7, [sp]
   16f80:	ldr	r3, [pc, #-188]	; 16ecc <argp_failure@@Base+0x127c>
   16f84:	mov	r2, #0
   16f88:	ldr	r0, [fp, #-104]	; 0xffffff98
   16f8c:	bl	15c50 <argp_failure@@Base>
   16f90:	b	16558 <argp_failure@@Base+0x908>
   16f94:	ldr	r3, [r9, #28]
   16f98:	b	16380 <argp_failure@@Base+0x730>
   16f9c:	mov	r1, #1
   16fa0:	mov	r0, r9
   16fa4:	bl	18538 <argp_error@@Base+0x1490>
   16fa8:	cmp	r0, #0
   16fac:	beq	1639c <argp_failure@@Base+0x74c>
   16fb0:	ldr	r3, [r9, #28]
   16fb4:	b	1638c <argp_failure@@Base+0x73c>
   16fb8:	mov	r1, #1
   16fbc:	mov	r0, r9
   16fc0:	bl	18538 <argp_error@@Base+0x1490>
   16fc4:	cmp	r0, #0
   16fc8:	beq	1632c <argp_failure@@Base+0x6dc>
   16fcc:	ldr	r3, [r9, #28]
   16fd0:	b	1631c <argp_failure@@Base+0x6cc>

00016fd4 <argp_help@@Base>:
   16fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   16fd8:	sub	sp, sp, #12
   16fdc:	str	r3, [sp]
   16fe0:	mov	r3, r2
   16fe4:	mov	r2, r1
   16fe8:	mov	r1, #0
   16fec:	bl	15e58 <argp_failure@@Base+0x208>
   16ff0:	add	sp, sp, #12
   16ff4:	pop	{pc}		; (ldr pc, [sp], #4)

00016ff8 <argp_state_help@@Base>:
   16ff8:	push	{r4, r5, lr}
   16ffc:	subs	r4, r0, #0
   17000:	sub	sp, sp, #12
   17004:	mov	r5, r2
   17008:	beq	17068 <argp_state_help@@Base+0x70>
   1700c:	ldr	r3, [r4, #16]
   17010:	tst	r3, #2
   17014:	bne	17060 <argp_state_help@@Base+0x68>
   17018:	cmp	r1, #0
   1701c:	beq	17060 <argp_state_help@@Base+0x68>
   17020:	tst	r3, #64	; 0x40
   17024:	ldr	r3, [r4, #40]	; 0x28
   17028:	orrne	r5, r5, #128	; 0x80
   1702c:	ldr	r0, [r4]
   17030:	mov	r2, r1
   17034:	str	r3, [sp]
   17038:	mov	r1, r4
   1703c:	mov	r3, r5
   17040:	bl	15e58 <argp_failure@@Base+0x208>
   17044:	ldr	r3, [r4, #16]
   17048:	tst	r3, #32
   1704c:	bne	17060 <argp_state_help@@Base+0x68>
   17050:	ands	r0, r5, #256	; 0x100
   17054:	bne	17094 <argp_state_help@@Base+0x9c>
   17058:	tst	r5, #512	; 0x200
   1705c:	bne	17090 <argp_state_help@@Base+0x98>
   17060:	add	sp, sp, #12
   17064:	pop	{r4, r5, pc}
   17068:	cmp	r1, #0
   1706c:	beq	17060 <argp_state_help@@Base+0x68>
   17070:	ldr	r3, [pc, #40]	; 170a0 <argp_state_help@@Base+0xa8>
   17074:	mov	r2, r1
   17078:	mov	r1, r4
   1707c:	ldr	ip, [r3]
   17080:	mov	r3, r5
   17084:	str	ip, [sp]
   17088:	bl	15e58 <argp_failure@@Base+0x208>
   1708c:	b	17050 <argp_state_help@@Base+0x58>
   17090:	bl	111a4 <exit@plt>
   17094:	ldr	r3, [pc, #8]	; 170a4 <argp_state_help@@Base+0xac>
   17098:	ldr	r0, [r3]
   1709c:	bl	111a4 <exit@plt>
   170a0:	andeq	sl, r2, r8, lsr #7
   170a4:	andeq	sl, r2, r4, lsr #7

000170a8 <argp_error@@Base>:
   170a8:	push	{r1, r2, r3}
   170ac:	push	{r4, r5, lr}
   170b0:	subs	r5, r0, #0
   170b4:	sub	sp, sp, #8
   170b8:	beq	17188 <argp_error@@Base+0xe0>
   170bc:	ldr	r3, [r5, #16]
   170c0:	tst	r3, #2
   170c4:	bne	17178 <argp_error@@Base+0xd0>
   170c8:	ldr	r4, [r5, #44]	; 0x2c
   170cc:	cmp	r4, #0
   170d0:	beq	17178 <argp_error@@Base+0xd0>
   170d4:	mov	r0, r4
   170d8:	bl	11270 <flockfile@plt>
   170dc:	ldr	r0, [r5, #40]	; 0x28
   170e0:	add	r3, sp, #24
   170e4:	str	r3, [sp, #4]
   170e8:	mov	r1, r4
   170ec:	bl	1100c <fputs_unlocked@plt>
   170f0:	ldr	r3, [r4, #20]
   170f4:	ldr	r2, [r4, #24]
   170f8:	cmp	r3, r2
   170fc:	addcc	r1, r3, #1
   17100:	movcc	r2, #58	; 0x3a
   17104:	strcc	r1, [r4, #20]
   17108:	strbcc	r2, [r3]
   1710c:	bcs	171d4 <argp_error@@Base+0x12c>
   17110:	ldr	r3, [r4, #20]
   17114:	ldr	r2, [r4, #24]
   17118:	cmp	r3, r2
   1711c:	addcc	r1, r3, #1
   17120:	movcc	r2, #32
   17124:	strcc	r1, [r4, #20]
   17128:	strbcc	r2, [r3]
   1712c:	bcs	171c4 <argp_error@@Base+0x11c>
   17130:	ldr	r1, [sp, #20]
   17134:	ldr	r2, [sp, #4]
   17138:	mov	r0, r4
   1713c:	bl	11258 <vfprintf@plt>
   17140:	ldr	r3, [r4, #20]
   17144:	ldr	r2, [r4, #24]
   17148:	cmp	r3, r2
   1714c:	addcc	r1, r3, #1
   17150:	movcc	r2, #10
   17154:	strcc	r1, [r4, #20]
   17158:	strbcc	r2, [r3]
   1715c:	bcs	171b4 <argp_error@@Base+0x10c>
   17160:	mov	r0, r5
   17164:	mov	r2, #260	; 0x104
   17168:	mov	r1, r4
   1716c:	bl	16ff8 <argp_state_help@@Base>
   17170:	mov	r0, r4
   17174:	bl	110fc <funlockfile@plt>
   17178:	add	sp, sp, #8
   1717c:	pop	{r4, r5, lr}
   17180:	add	sp, sp, #12
   17184:	bx	lr
   17188:	ldr	r3, [pc, #84]	; 171e4 <argp_error@@Base+0x13c>
   1718c:	ldr	r4, [r3]
   17190:	cmp	r4, #0
   17194:	beq	17178 <argp_error@@Base+0xd0>
   17198:	mov	r0, r4
   1719c:	bl	11270 <flockfile@plt>
   171a0:	ldr	r2, [pc, #64]	; 171e8 <argp_error@@Base+0x140>
   171a4:	add	r3, sp, #24
   171a8:	str	r3, [sp, #4]
   171ac:	ldr	r0, [r2]
   171b0:	b	170e8 <argp_error@@Base+0x40>
   171b4:	mov	r1, #10
   171b8:	mov	r0, r4
   171bc:	bl	11240 <__overflow@plt>
   171c0:	b	17160 <argp_error@@Base+0xb8>
   171c4:	mov	r1, #32
   171c8:	mov	r0, r4
   171cc:	bl	11240 <__overflow@plt>
   171d0:	b	17130 <argp_error@@Base+0x88>
   171d4:	mov	r1, #58	; 0x3a
   171d8:	mov	r0, r4
   171dc:	bl	11240 <__overflow@plt>
   171e0:	b	17110 <argp_error@@Base+0x68>
   171e4:			; <UNDEFINED> instruction: 0x0002a3b0
   171e8:	andeq	sl, r2, r8, lsr #7
   171ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   171f0:	ldr	r4, [r1, #32]
   171f4:	ldr	r8, [r1, #28]
   171f8:	ldr	r7, [r1]
   171fc:	add	r6, r0, r4, lsl #2
   17200:	mov	r2, r8
   17204:	mov	r5, r7
   17208:	cmp	r5, r4
   1720c:	movle	r3, #0
   17210:	movgt	r3, #1
   17214:	cmp	r2, r4
   17218:	movge	r3, #0
   1721c:	cmp	r3, #0
   17220:	beq	17294 <argp_error@@Base+0x1ec>
   17224:	sub	r3, r5, r4
   17228:	sub	sl, r4, r2
   1722c:	cmp	r3, sl
   17230:	ble	17264 <argp_error@@Base+0x1bc>
   17234:	sub	r5, r5, sl
   17238:	add	sl, sl, r2
   1723c:	add	ip, r0, r5, lsl #2
   17240:	add	sl, r0, sl, lsl #2
   17244:	add	r3, r0, r2, lsl #2
   17248:	ldr	r9, [ip]
   1724c:	ldr	lr, [r3]
   17250:	str	r9, [r3], #4
   17254:	cmp	sl, r3
   17258:	str	lr, [ip], #4
   1725c:	bne	17248 <argp_error@@Base+0x1a0>
   17260:	b	17208 <argp_error@@Base+0x160>
   17264:	add	sl, r3, r2
   17268:	add	r3, r0, r2, lsl #2
   1726c:	add	r9, r0, sl, lsl #2
   17270:	mov	r2, r6
   17274:	ldr	lr, [r2]
   17278:	ldr	ip, [r3]
   1727c:	str	lr, [r3], #4
   17280:	cmp	r3, r9
   17284:	str	ip, [r2], #4
   17288:	bne	17274 <argp_error@@Base+0x1cc>
   1728c:	mov	r2, sl
   17290:	b	17208 <argp_error@@Base+0x160>
   17294:	sub	r4, r7, r4
   17298:	add	r8, r4, r8
   1729c:	str	r8, [r1, #28]
   172a0:	str	r7, [r1, #32]
   172a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   172a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172ac:	sub	sp, sp, #44	; 0x2c
   172b0:	str	r1, [sp, #20]
   172b4:	ldr	r1, [sp, #88]	; 0x58
   172b8:	str	r0, [sp, #24]
   172bc:	str	r2, [sp, #28]
   172c0:	ldr	r8, [r1, #20]
   172c4:	str	r3, [sp, #12]
   172c8:	mov	r7, r8
   172cc:	ldrb	r5, [r8]
   172d0:	cmp	r5, #61	; 0x3d
   172d4:	cmpne	r5, #0
   172d8:	movne	r5, #1
   172dc:	moveq	r5, #0
   172e0:	beq	172f8 <argp_error@@Base+0x250>
   172e4:	ldrb	r3, [r7, #1]!
   172e8:	cmp	r3, #0
   172ec:	cmpne	r3, #61	; 0x3d
   172f0:	bne	172e4 <argp_error@@Base+0x23c>
   172f4:	sub	r5, r7, r8
   172f8:	ldr	r3, [sp, #12]
   172fc:	ldr	sl, [r3]
   17300:	cmp	sl, #0
   17304:	beq	175b8 <argp_error@@Base+0x510>
   17308:	mov	fp, r3
   1730c:	mov	r4, sl
   17310:	mov	r6, #0
   17314:	mov	r2, r5
   17318:	mov	r1, r8
   1731c:	mov	r0, r4
   17320:	bl	112b8 <strncmp@plt>
   17324:	mov	r9, fp
   17328:	cmp	r0, #0
   1732c:	mov	r0, r4
   17330:	bne	17340 <argp_error@@Base+0x298>
   17334:	bl	111bc <strlen@plt>
   17338:	cmp	r0, r5
   1733c:	beq	173cc <argp_error@@Base+0x324>
   17340:	ldr	r4, [fp, #16]!
   17344:	add	r6, r6, #1
   17348:	cmp	r4, #0
   1734c:	bne	17314 <argp_error@@Base+0x26c>
   17350:	ldr	r3, [sp, #12]
   17354:	ldr	fp, [sp, #88]	; 0x58
   17358:	mov	r0, sl
   1735c:	mov	r1, r8
   17360:	mov	r9, r4
   17364:	mov	sl, r4
   17368:	mov	r8, r3
   1736c:	mvn	r2, #0
   17370:	str	r4, [sp, #36]	; 0x24
   17374:	str	r4, [sp, #16]
   17378:	str	r2, [sp, #32]
   1737c:	mov	r2, r5
   17380:	bl	112b8 <strncmp@plt>
   17384:	cmp	r0, #0
   17388:	bne	173a8 <argp_error@@Base+0x300>
   1738c:	cmp	r9, #0
   17390:	beq	17628 <argp_error@@Base+0x580>
   17394:	ldr	r3, [sp, #84]	; 0x54
   17398:	cmp	r3, #0
   1739c:	beq	17470 <argp_error@@Base+0x3c8>
   173a0:	cmp	r4, #0
   173a4:	beq	174a4 <argp_error@@Base+0x3fc>
   173a8:	ldr	r0, [r8, #16]!
   173ac:	add	sl, sl, #1
   173b0:	cmp	r0, #0
   173b4:	beq	174d8 <argp_error@@Base+0x430>
   173b8:	ldr	r1, [fp, #20]
   173bc:	b	1737c <argp_error@@Base+0x2d4>
   173c0:	cmp	r9, #0
   173c4:	beq	175b8 <argp_error@@Base+0x510>
   173c8:	ldr	r6, [sp, #32]
   173cc:	ldr	r3, [sp, #88]	; 0x58
   173d0:	ldr	r0, [sp, #88]	; 0x58
   173d4:	mov	r1, #0
   173d8:	ldr	r2, [r3]
   173dc:	str	r1, [r0, #20]
   173e0:	add	r3, r2, #1
   173e4:	str	r3, [r0]
   173e8:	ldrb	r1, [r7]
   173ec:	cmp	r1, #0
   173f0:	bne	17430 <argp_error@@Base+0x388>
   173f4:	ldr	r1, [r9, #4]
   173f8:	cmp	r1, #1
   173fc:	beq	17634 <argp_error@@Base+0x58c>
   17400:	ldr	r3, [sp, #80]	; 0x50
   17404:	ldr	r2, [r9, #8]
   17408:	cmp	r3, #0
   1740c:	strne	r6, [r3]
   17410:	cmp	r2, #0
   17414:	movne	r3, #0
   17418:	ldreq	r3, [r9, #12]
   1741c:	ldrne	r1, [r9, #12]
   17420:	strne	r1, [r2]
   17424:	mov	r0, r3
   17428:	add	sp, sp, #44	; 0x2c
   1742c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17430:	ldr	r3, [r9, #4]
   17434:	cmp	r3, #0
   17438:	movne	r3, r0
   1743c:	addne	r7, r7, #1
   17440:	strne	r7, [r3, #12]
   17444:	bne	17400 <argp_error@@Base+0x358>
   17448:	ldr	r3, [sp, #92]	; 0x5c
   1744c:	cmp	r3, #0
   17450:	bne	17580 <argp_error@@Base+0x4d8>
   17454:	ldr	r1, [sp, #88]	; 0x58
   17458:	ldr	r2, [r9, #12]
   1745c:	mov	r3, #63	; 0x3f
   17460:	str	r2, [r1, #8]
   17464:	mov	r0, r3
   17468:	add	sp, sp, #44	; 0x2c
   1746c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17470:	ldr	r2, [r9, #4]
   17474:	ldr	r3, [r8, #4]
   17478:	cmp	r2, r3
   1747c:	bne	173a0 <argp_error@@Base+0x2f8>
   17480:	ldr	r2, [r9, #8]
   17484:	ldr	r3, [r8, #8]
   17488:	cmp	r2, r3
   1748c:	bne	173a0 <argp_error@@Base+0x2f8>
   17490:	ldr	r2, [r9, #12]
   17494:	ldr	r3, [r8, #12]
   17498:	cmp	r2, r3
   1749c:	bne	173a0 <argp_error@@Base+0x2f8>
   174a0:	b	173a8 <argp_error@@Base+0x300>
   174a4:	ldr	r3, [sp, #92]	; 0x5c
   174a8:	cmp	r3, #0
   174ac:	ldr	r3, [sp, #16]
   174b0:	beq	17570 <argp_error@@Base+0x4c8>
   174b4:	cmp	r3, #0
   174b8:	beq	1778c <argp_error@@Base+0x6e4>
   174bc:	ldr	r3, [sp, #16]
   174c0:	ldr	r0, [r8, #16]!
   174c4:	mov	r2, #1
   174c8:	cmp	r0, #0
   174cc:	strb	r2, [r3, sl]
   174d0:	add	sl, sl, #1
   174d4:	bne	173b8 <argp_error@@Base+0x310>
   174d8:	ldr	r3, [sp, #16]
   174dc:	cmp	r3, #0
   174e0:	cmpeq	r4, #0
   174e4:	beq	173c0 <argp_error@@Base+0x318>
   174e8:	ldr	r3, [sp, #92]	; 0x5c
   174ec:	cmp	r3, #0
   174f0:	beq	17670 <argp_error@@Base+0x5c8>
   174f4:	cmp	r4, #0
   174f8:	bne	176f8 <argp_error@@Base+0x650>
   174fc:	ldr	r5, [pc, #716]	; 177d0 <argp_error@@Base+0x728>
   17500:	ldr	r8, [sp, #16]
   17504:	ldr	r7, [pc, #712]	; 177d4 <argp_error@@Base+0x72c>
   17508:	ldr	r0, [r5]
   1750c:	bl	11270 <flockfile@plt>
   17510:	ldr	r3, [sp, #20]
   17514:	ldr	r0, [r5]
   17518:	ldr	r1, [pc, #696]	; 177d8 <argp_error@@Base+0x730>
   1751c:	ldr	r2, [r3]
   17520:	ldr	r3, [sp, #88]	; 0x58
   17524:	add	r6, r8, r6
   17528:	ldr	r3, [r3, #20]
   1752c:	str	r3, [sp]
   17530:	ldr	r3, [sp, #96]	; 0x60
   17534:	bl	111d4 <fprintf@plt>
   17538:	ldr	r9, [sp, #12]
   1753c:	b	1754c <argp_error@@Base+0x4a4>
   17540:	cmp	r8, r6
   17544:	add	r4, r4, #1
   17548:	beq	1765c <argp_error@@Base+0x5b4>
   1754c:	ldrb	r3, [r8], #1
   17550:	cmp	r3, #0
   17554:	beq	17540 <argp_error@@Base+0x498>
   17558:	ldr	r3, [r9, r4, lsl #4]
   1755c:	ldr	r2, [sp, #96]	; 0x60
   17560:	mov	r1, r7
   17564:	ldr	r0, [r5]
   17568:	bl	111d4 <fprintf@plt>
   1756c:	b	17540 <argp_error@@Base+0x498>
   17570:	cmp	r3, #0
   17574:	mov	r4, #1
   17578:	bne	174bc <argp_error@@Base+0x414>
   1757c:	b	173a8 <argp_error@@Base+0x300>
   17580:	ldr	r3, [sp, #20]
   17584:	ldr	r1, [pc, #580]	; 177d0 <argp_error@@Base+0x728>
   17588:	ldr	r2, [r3]
   1758c:	ldr	r3, [r9]
   17590:	ldr	r0, [r1]
   17594:	str	r3, [sp]
   17598:	ldr	r1, [pc, #572]	; 177dc <argp_error@@Base+0x734>
   1759c:	ldr	r3, [sp, #96]	; 0x60
   175a0:	bl	111d4 <fprintf@plt>
   175a4:	ldr	r1, [sp, #88]	; 0x58
   175a8:	ldr	r2, [r9, #12]
   175ac:	mov	r3, #63	; 0x3f
   175b0:	str	r2, [r1, #8]
   175b4:	b	17464 <argp_error@@Base+0x3bc>
   175b8:	ldr	r3, [sp, #84]	; 0x54
   175bc:	cmp	r3, #0
   175c0:	bne	1774c <argp_error@@Base+0x6a4>
   175c4:	ldr	r3, [sp, #92]	; 0x5c
   175c8:	cmp	r3, #0
   175cc:	beq	175f8 <argp_error@@Base+0x550>
   175d0:	ldr	r3, [sp, #20]
   175d4:	ldr	r1, [pc, #500]	; 177d0 <argp_error@@Base+0x728>
   175d8:	ldr	r2, [r3]
   175dc:	ldr	r3, [sp, #88]	; 0x58
   175e0:	ldr	r0, [r1]
   175e4:	ldr	r1, [pc, #500]	; 177e0 <argp_error@@Base+0x738>
   175e8:	ldr	r3, [r3, #20]
   175ec:	str	r3, [sp]
   175f0:	ldr	r3, [sp, #96]	; 0x60
   175f4:	bl	111d4 <fprintf@plt>
   175f8:	ldr	r3, [sp, #88]	; 0x58
   175fc:	ldr	r1, [sp, #88]	; 0x58
   17600:	mov	r2, #0
   17604:	ldr	r3, [r3]
   17608:	str	r2, [r1, #20]
   1760c:	add	r3, r3, #1
   17610:	str	r3, [r1]
   17614:	mov	r3, #63	; 0x3f
   17618:	mov	r0, r3
   1761c:	str	r2, [r1, #8]
   17620:	add	sp, sp, #44	; 0x2c
   17624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17628:	str	sl, [sp, #32]
   1762c:	mov	r9, r8
   17630:	b	173a8 <argp_error@@Base+0x300>
   17634:	ldr	r1, [sp, #24]
   17638:	cmp	r3, r1
   1763c:	bge	176c8 <argp_error@@Base+0x620>
   17640:	ldr	r1, [sp, #20]
   17644:	add	r2, r2, #2
   17648:	ldr	r3, [r1, r3, lsl #2]
   1764c:	ldr	r1, [sp, #88]	; 0x58
   17650:	str	r3, [r1, #12]
   17654:	str	r2, [r1]
   17658:	b	17400 <argp_error@@Base+0x358>
   1765c:	ldr	r1, [r5]
   17660:	mov	r0, #10
   17664:	bl	11264 <fputc@plt>
   17668:	ldr	r0, [r5]
   1766c:	bl	110fc <funlockfile@plt>
   17670:	ldr	r3, [sp, #36]	; 0x24
   17674:	cmp	r3, #0
   17678:	beq	17684 <argp_error@@Base+0x5dc>
   1767c:	ldr	r0, [sp, #16]
   17680:	bl	13250 <argp_parse@@Base+0xe98>
   17684:	ldr	r3, [sp, #88]	; 0x58
   17688:	ldr	r4, [r3, #20]
   1768c:	mov	r0, r4
   17690:	bl	111bc <strlen@plt>
   17694:	ldr	r3, [sp, #88]	; 0x58
   17698:	ldr	r1, [sp, #88]	; 0x58
   1769c:	mov	r2, #0
   176a0:	ldr	r3, [r3]
   176a4:	str	r2, [r1, #8]
   176a8:	add	r3, r3, #1
   176ac:	str	r3, [r1]
   176b0:	mov	r3, #63	; 0x3f
   176b4:	add	r0, r4, r0
   176b8:	str	r0, [r1, #20]
   176bc:	mov	r0, r3
   176c0:	add	sp, sp, #44	; 0x2c
   176c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176c8:	ldr	r3, [sp, #92]	; 0x5c
   176cc:	cmp	r3, #0
   176d0:	bne	17724 <argp_error@@Base+0x67c>
   176d4:	ldr	r2, [sp, #88]	; 0x58
   176d8:	ldr	r3, [r9, #12]
   176dc:	str	r3, [r2, #8]
   176e0:	ldr	r3, [sp, #28]
   176e4:	ldrb	r3, [r3]
   176e8:	cmp	r3, #58	; 0x3a
   176ec:	movne	r3, #63	; 0x3f
   176f0:	moveq	r3, #58	; 0x3a
   176f4:	b	17424 <argp_error@@Base+0x37c>
   176f8:	ldr	r3, [sp, #20]
   176fc:	ldr	r1, [pc, #204]	; 177d0 <argp_error@@Base+0x728>
   17700:	ldr	r2, [r3]
   17704:	ldr	r3, [sp, #88]	; 0x58
   17708:	ldr	r0, [r1]
   1770c:	ldr	r1, [pc, #208]	; 177e4 <argp_error@@Base+0x73c>
   17710:	ldr	r3, [r3, #20]
   17714:	str	r3, [sp]
   17718:	ldr	r3, [sp, #96]	; 0x60
   1771c:	bl	111d4 <fprintf@plt>
   17720:	b	17670 <argp_error@@Base+0x5c8>
   17724:	ldr	r3, [sp, #20]
   17728:	ldr	r1, [pc, #160]	; 177d0 <argp_error@@Base+0x728>
   1772c:	ldr	r2, [r3]
   17730:	ldr	r3, [r9]
   17734:	ldr	r0, [r1]
   17738:	str	r3, [sp]
   1773c:	ldr	r1, [pc, #164]	; 177e8 <argp_error@@Base+0x740>
   17740:	ldr	r3, [sp, #96]	; 0x60
   17744:	bl	111d4 <fprintf@plt>
   17748:	b	176d4 <argp_error@@Base+0x62c>
   1774c:	ldr	r3, [sp, #88]	; 0x58
   17750:	ldr	r2, [sp, #20]
   17754:	ldr	r3, [r3]
   17758:	ldr	r3, [r2, r3, lsl #2]
   1775c:	ldrb	r3, [r3, #1]
   17760:	cmp	r3, #45	; 0x2d
   17764:	beq	175c4 <argp_error@@Base+0x51c>
   17768:	ldr	r3, [sp, #88]	; 0x58
   1776c:	ldr	r0, [sp, #28]
   17770:	ldr	r3, [r3, #20]
   17774:	ldrb	r1, [r3]
   17778:	bl	111c8 <strchr@plt>
   1777c:	cmp	r0, #0
   17780:	beq	175c4 <argp_error@@Base+0x51c>
   17784:	mvn	r3, #0
   17788:	b	17424 <argp_error@@Base+0x37c>
   1778c:	mov	r0, r6
   17790:	bl	13e24 <argp_parse@@Base+0x1a6c>
   17794:	subs	r3, r0, #0
   17798:	str	r3, [sp, #16]
   1779c:	beq	177c8 <argp_error@@Base+0x720>
   177a0:	mov	r2, r6
   177a4:	mov	r1, #0
   177a8:	bl	11204 <memset@plt>
   177ac:	mov	r3, #1
   177b0:	str	r3, [sp, #36]	; 0x24
   177b4:	ldr	r2, [sp, #32]
   177b8:	ldr	r3, [sp, #16]
   177bc:	mov	r1, #1
   177c0:	strb	r1, [r3, r2]
   177c4:	b	174bc <argp_error@@Base+0x414>
   177c8:	mov	r4, #1
   177cc:	b	173a8 <argp_error@@Base+0x300>
   177d0:			; <UNDEFINED> instruction: 0x0002a3b0
   177d4:	andeq	r9, r1, r8, asr #20
   177d8:	andeq	r9, r1, r8, lsl sl
   177dc:	andeq	r9, r1, r0, ror sl
   177e0:	andeq	r9, r1, r0, asr sl
   177e4:	strdeq	r9, [r1], -r8
   177e8:	andeq	r9, r1, r0, lsr #21
   177ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177f0:	sub	sp, sp, #36	; 0x24
   177f4:	subs	r6, r0, #0
   177f8:	ldr	r4, [sp, #80]	; 0x50
   177fc:	ldr	r8, [r4, #4]
   17800:	ble	179dc <argp_error@@Base+0x934>
   17804:	mov	sl, r3
   17808:	ldr	r3, [r4]
   1780c:	mov	r7, r2
   17810:	mov	r2, #0
   17814:	cmp	r3, r2
   17818:	mov	r9, r1
   1781c:	str	r2, [r4, #12]
   17820:	beq	17a64 <argp_error@@Base+0x9bc>
   17824:	ldr	r2, [r4, #16]
   17828:	cmp	r2, #0
   1782c:	bne	179e8 <argp_error@@Base+0x940>
   17830:	mov	r5, #0
   17834:	str	r3, [r4, #32]
   17838:	str	r3, [r4, #28]
   1783c:	str	r5, [r4, #20]
   17840:	ldrb	r3, [r7]
   17844:	cmp	r3, #45	; 0x2d
   17848:	moveq	r3, #2
   1784c:	addeq	r7, r7, #1
   17850:	streq	r3, [r4, #24]
   17854:	beq	1787c <argp_error@@Base+0x7d4>
   17858:	cmp	r3, #43	; 0x2b
   1785c:	streq	r5, [r4, #24]
   17860:	addeq	r7, r7, #1
   17864:	beq	1787c <argp_error@@Base+0x7d4>
   17868:	ldr	r3, [sp, #84]	; 0x54
   1786c:	cmp	r3, #0
   17870:	beq	17b04 <argp_error@@Base+0xa5c>
   17874:	mov	r3, #0
   17878:	str	r3, [r4, #24]
   1787c:	mov	r3, #1
   17880:	str	r3, [r4, #16]
   17884:	ldrb	r3, [r7]
   17888:	cmp	r3, #58	; 0x3a
   1788c:	moveq	r8, #0
   17890:	cmp	r5, #0
   17894:	beq	17948 <argp_error@@Base+0x8a0>
   17898:	ldrb	r3, [r5]
   1789c:	cmp	r3, #0
   178a0:	beq	17948 <argp_error@@Base+0x8a0>
   178a4:	add	r3, r5, #1
   178a8:	str	r3, [r4, #20]
   178ac:	ldrb	fp, [r5]
   178b0:	mov	r0, r7
   178b4:	str	r3, [sp, #28]
   178b8:	mov	r1, fp
   178bc:	bl	111c8 <strchr@plt>
   178c0:	ldrb	r1, [r5, #1]
   178c4:	ldr	r3, [sp, #28]
   178c8:	cmp	r1, #0
   178cc:	ldreq	r1, [r4]
   178d0:	addeq	r1, r1, #1
   178d4:	streq	r1, [r4]
   178d8:	sub	r1, fp, #58	; 0x3a
   178dc:	mov	r2, r0
   178e0:	cmp	r2, #0
   178e4:	cmpne	r1, #1
   178e8:	mov	r0, fp
   178ec:	bls	17a34 <argp_error@@Base+0x98c>
   178f0:	ldrb	r1, [r2]
   178f4:	cmp	r1, #87	; 0x57
   178f8:	ldrb	r1, [r2, #1]
   178fc:	beq	17b88 <argp_error@@Base+0xae0>
   17900:	cmp	r1, #58	; 0x3a
   17904:	bne	17a2c <argp_error@@Base+0x984>
   17908:	ldrb	r2, [r2, #2]
   1790c:	cmp	r2, #58	; 0x3a
   17910:	ldrb	r2, [r5, #1]
   17914:	beq	17c10 <argp_error@@Base+0xb68>
   17918:	cmp	r2, #0
   1791c:	bne	17c1c <argp_error@@Base+0xb74>
   17920:	ldr	r3, [r4]
   17924:	cmp	r6, r3
   17928:	beq	17cbc <argp_error@@Base+0xc14>
   1792c:	ldr	r2, [r9, r3, lsl #2]
   17930:	add	r3, r3, #1
   17934:	str	r2, [r4, #12]
   17938:	str	r3, [r4]
   1793c:	mov	r3, #0
   17940:	str	r3, [r4, #20]
   17944:	b	17a2c <argp_error@@Base+0x984>
   17948:	ldr	fp, [r4]
   1794c:	ldr	r3, [r4, #32]
   17950:	cmp	r3, fp
   17954:	ldr	r3, [r4, #28]
   17958:	strgt	fp, [r4, #32]
   1795c:	cmp	fp, r3
   17960:	ldr	r3, [r4, #24]
   17964:	strlt	fp, [r4, #28]
   17968:	cmp	r3, #1
   1796c:	beq	17a74 <argp_error@@Base+0x9cc>
   17970:	cmp	r6, fp
   17974:	beq	17aec <argp_error@@Base+0xa44>
   17978:	ldr	r3, [pc, #944]	; 17d30 <argp_error@@Base+0xc88>
   1797c:	ldr	r5, [r9, fp, lsl #2]
   17980:	mov	r1, r3
   17984:	mov	r0, r5
   17988:	str	r3, [sp, #28]
   1798c:	bl	11030 <strcmp@plt>
   17990:	ldr	r3, [sp, #28]
   17994:	cmp	r0, #0
   17998:	bne	17a04 <argp_error@@Base+0x95c>
   1799c:	ldr	r3, [r4, #28]
   179a0:	ldr	r2, [r4, #32]
   179a4:	add	fp, fp, #1
   179a8:	cmp	r3, r2
   179ac:	str	fp, [r4]
   179b0:	beq	17b7c <argp_error@@Base+0xad4>
   179b4:	cmp	fp, r2
   179b8:	beq	179cc <argp_error@@Base+0x924>
   179bc:	mov	r0, r9
   179c0:	mov	r1, r4
   179c4:	bl	171ec <argp_error@@Base+0x144>
   179c8:	ldr	r3, [r4, #28]
   179cc:	cmp	r3, r6
   179d0:	str	r6, [r4]
   179d4:	str	r6, [r4, #32]
   179d8:	strne	r3, [r4]
   179dc:	mvn	r0, #0
   179e0:	add	sp, sp, #36	; 0x24
   179e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179e8:	ldrb	r3, [r7]
   179ec:	ldr	r5, [r4, #20]
   179f0:	sub	r2, r3, #43	; 0x2b
   179f4:	tst	r2, #253	; 0xfd
   179f8:	ldrbeq	r3, [r7, #1]
   179fc:	addeq	r7, r7, #1
   17a00:	b	17888 <argp_error@@Base+0x7e0>
   17a04:	ldrb	r2, [r5]
   17a08:	cmp	r2, #45	; 0x2d
   17a0c:	beq	17b30 <argp_error@@Base+0xa88>
   17a10:	ldr	r3, [r4, #24]
   17a14:	cmp	r3, #0
   17a18:	beq	179dc <argp_error@@Base+0x934>
   17a1c:	mov	r0, #1
   17a20:	add	fp, fp, #1
   17a24:	str	fp, [r4]
   17a28:	str	r5, [r4, #12]
   17a2c:	add	sp, sp, #36	; 0x24
   17a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a34:	cmp	r8, #0
   17a38:	beq	17a54 <argp_error@@Base+0x9ac>
   17a3c:	ldr	r1, [pc, #752]	; 17d34 <argp_error@@Base+0xc8c>
   17a40:	ldr	r2, [r9]
   17a44:	mov	r3, fp
   17a48:	ldr	r0, [r1]
   17a4c:	ldr	r1, [pc, #740]	; 17d38 <argp_error@@Base+0xc90>
   17a50:	bl	111d4 <fprintf@plt>
   17a54:	mov	r0, #63	; 0x3f
   17a58:	str	fp, [r4, #8]
   17a5c:	add	sp, sp, #36	; 0x24
   17a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a64:	mov	r2, #1
   17a68:	mov	r3, r2
   17a6c:	str	r2, [r4]
   17a70:	b	17830 <argp_error@@Base+0x788>
   17a74:	ldr	r2, [r4, #28]
   17a78:	ldr	r3, [r4, #32]
   17a7c:	cmp	r2, r3
   17a80:	beq	17c00 <argp_error@@Base+0xb58>
   17a84:	cmp	fp, r3
   17a88:	beq	17a9c <argp_error@@Base+0x9f4>
   17a8c:	mov	r1, r4
   17a90:	mov	r0, r9
   17a94:	bl	171ec <argp_error@@Base+0x144>
   17a98:	ldr	r3, [r4]
   17a9c:	cmp	r6, r3
   17aa0:	movle	fp, r3
   17aa4:	ble	17ae0 <argp_error@@Base+0xa38>
   17aa8:	add	r1, r9, r3, lsl #2
   17aac:	b	17ac0 <argp_error@@Base+0xa18>
   17ab0:	add	r3, r3, #1
   17ab4:	cmp	r6, r3
   17ab8:	str	r3, [r4]
   17abc:	beq	17b24 <argp_error@@Base+0xa7c>
   17ac0:	ldr	r2, [r1], #4
   17ac4:	ldrb	r0, [r2]
   17ac8:	cmp	r0, #45	; 0x2d
   17acc:	bne	17ab0 <argp_error@@Base+0xa08>
   17ad0:	ldrb	r2, [r2, #1]
   17ad4:	cmp	r2, #0
   17ad8:	beq	17ab0 <argp_error@@Base+0xa08>
   17adc:	ldr	fp, [r4]
   17ae0:	str	r3, [r4, #32]
   17ae4:	cmp	r6, fp
   17ae8:	bne	17978 <argp_error@@Base+0x8d0>
   17aec:	ldr	r3, [r4, #28]
   17af0:	ldr	r6, [r4, #32]
   17af4:	mvn	r0, #0
   17af8:	cmp	r3, r6
   17afc:	strne	r3, [r4]
   17b00:	b	179e0 <argp_error@@Base+0x938>
   17b04:	ldr	r0, [pc, #560]	; 17d3c <argp_error@@Base+0xc94>
   17b08:	bl	1112c <getenv@plt>
   17b0c:	ldr	r5, [r4, #20]
   17b10:	cmp	r0, #0
   17b14:	bne	17874 <argp_error@@Base+0x7cc>
   17b18:	mov	r3, #1
   17b1c:	str	r3, [r4, #24]
   17b20:	b	1787c <argp_error@@Base+0x7d4>
   17b24:	mov	fp, r6
   17b28:	str	r3, [r4, #32]
   17b2c:	b	17ae4 <argp_error@@Base+0xa3c>
   17b30:	ldrb	r1, [r5, #1]
   17b34:	cmp	r1, #0
   17b38:	beq	17a10 <argp_error@@Base+0x968>
   17b3c:	cmp	sl, #0
   17b40:	beq	17b74 <argp_error@@Base+0xacc>
   17b44:	cmp	r1, #45	; 0x2d
   17b48:	beq	17c80 <argp_error@@Base+0xbd8>
   17b4c:	ldr	r3, [sp, #76]	; 0x4c
   17b50:	cmp	r3, #0
   17b54:	beq	17b74 <argp_error@@Base+0xacc>
   17b58:	ldrb	r3, [r5, #2]
   17b5c:	cmp	r3, #0
   17b60:	bne	17c30 <argp_error@@Base+0xb88>
   17b64:	mov	r0, r7
   17b68:	bl	111c8 <strchr@plt>
   17b6c:	cmp	r0, #0
   17b70:	beq	17c30 <argp_error@@Base+0xb88>
   17b74:	add	r5, r5, #1
   17b78:	b	178a4 <argp_error@@Base+0x7fc>
   17b7c:	mov	r3, fp
   17b80:	str	fp, [r4, #28]
   17b84:	b	179cc <argp_error@@Base+0x924>
   17b88:	cmp	sl, #0
   17b8c:	sub	ip, r1, #59	; 0x3b
   17b90:	clz	ip, ip
   17b94:	lsr	ip, ip, #5
   17b98:	moveq	ip, #0
   17b9c:	cmp	ip, #0
   17ba0:	beq	17900 <argp_error@@Base+0x858>
   17ba4:	ldrb	r2, [r5, #1]
   17ba8:	cmp	r2, #0
   17bac:	bne	17bc0 <argp_error@@Base+0xb18>
   17bb0:	ldr	r3, [r4]
   17bb4:	cmp	r6, r3
   17bb8:	ldrne	r3, [r9, r3, lsl #2]
   17bbc:	beq	17cdc <argp_error@@Base+0xc34>
   17bc0:	str	r3, [r4, #20]
   17bc4:	ldr	lr, [pc, #372]	; 17d40 <argp_error@@Base+0xc98>
   17bc8:	ldr	r3, [sp, #72]	; 0x48
   17bcc:	mov	ip, #0
   17bd0:	str	r3, [sp]
   17bd4:	str	r8, [sp, #12]
   17bd8:	str	r4, [sp, #8]
   17bdc:	str	lr, [sp, #16]
   17be0:	mov	r3, sl
   17be4:	str	ip, [r4, #12]
   17be8:	mov	r2, r7
   17bec:	mov	r1, r9
   17bf0:	mov	r0, r6
   17bf4:	str	ip, [sp, #4]
   17bf8:	bl	172a8 <argp_error@@Base+0x200>
   17bfc:	b	17a2c <argp_error@@Base+0x984>
   17c00:	cmp	fp, r3
   17c04:	movne	r3, fp
   17c08:	strne	fp, [r4, #28]
   17c0c:	b	17a9c <argp_error@@Base+0x9f4>
   17c10:	cmp	r2, #0
   17c14:	streq	r2, [r4, #12]
   17c18:	beq	1793c <argp_error@@Base+0x894>
   17c1c:	ldr	r2, [r4]
   17c20:	str	r3, [r4, #12]
   17c24:	add	r3, r2, #1
   17c28:	str	r3, [r4]
   17c2c:	b	1793c <argp_error@@Base+0x894>
   17c30:	ldr	r2, [sp, #76]	; 0x4c
   17c34:	add	r5, r5, #1
   17c38:	str	r5, [r4, #20]
   17c3c:	ldr	r3, [pc, #256]	; 17d44 <argp_error@@Base+0xc9c>
   17c40:	str	r2, [sp, #4]
   17c44:	ldr	r2, [sp, #72]	; 0x48
   17c48:	str	r3, [sp, #16]
   17c4c:	str	r2, [sp]
   17c50:	str	r8, [sp, #12]
   17c54:	str	r4, [sp, #8]
   17c58:	mov	r3, sl
   17c5c:	mov	r2, r7
   17c60:	mov	r1, r9
   17c64:	mov	r0, r6
   17c68:	bl	172a8 <argp_error@@Base+0x200>
   17c6c:	cmn	r0, #1
   17c70:	bne	17a2c <argp_error@@Base+0x984>
   17c74:	ldr	r3, [r4]
   17c78:	ldr	r5, [r9, r3, lsl #2]
   17c7c:	b	17b74 <argp_error@@Base+0xacc>
   17c80:	add	r5, r5, #2
   17c84:	str	r5, [r4, #20]
   17c88:	str	r3, [sp, #16]
   17c8c:	ldr	r3, [sp, #76]	; 0x4c
   17c90:	str	r8, [sp, #12]
   17c94:	str	r3, [sp, #4]
   17c98:	ldr	r3, [sp, #72]	; 0x48
   17c9c:	str	r4, [sp, #8]
   17ca0:	str	r3, [sp]
   17ca4:	mov	r2, r7
   17ca8:	mov	r3, sl
   17cac:	mov	r1, r9
   17cb0:	mov	r0, r6
   17cb4:	bl	172a8 <argp_error@@Base+0x200>
   17cb8:	b	17a2c <argp_error@@Base+0x984>
   17cbc:	cmp	r8, #0
   17cc0:	bne	17d14 <argp_error@@Base+0xc6c>
   17cc4:	str	fp, [r4, #8]
   17cc8:	ldrb	r0, [r7]
   17ccc:	cmp	r0, #58	; 0x3a
   17cd0:	movne	r0, #63	; 0x3f
   17cd4:	moveq	r0, #58	; 0x3a
   17cd8:	b	1793c <argp_error@@Base+0x894>
   17cdc:	cmp	r8, #0
   17ce0:	beq	17cfc <argp_error@@Base+0xc54>
   17ce4:	ldr	r1, [pc, #72]	; 17d34 <argp_error@@Base+0xc8c>
   17ce8:	ldr	r2, [r9]
   17cec:	mov	r3, fp
   17cf0:	ldr	r0, [r1]
   17cf4:	ldr	r1, [pc, #76]	; 17d48 <argp_error@@Base+0xca0>
   17cf8:	bl	111d4 <fprintf@plt>
   17cfc:	str	fp, [r4, #8]
   17d00:	ldrb	r0, [r7]
   17d04:	cmp	r0, #58	; 0x3a
   17d08:	movne	r0, #63	; 0x3f
   17d0c:	moveq	r0, #58	; 0x3a
   17d10:	b	17a2c <argp_error@@Base+0x984>
   17d14:	ldr	r1, [pc, #24]	; 17d34 <argp_error@@Base+0xc8c>
   17d18:	ldr	r2, [r9]
   17d1c:	mov	r3, fp
   17d20:	ldr	r0, [r1]
   17d24:	ldr	r1, [pc, #28]	; 17d48 <argp_error@@Base+0xca0>
   17d28:	bl	111d4 <fprintf@plt>
   17d2c:	b	17cc4 <argp_error@@Base+0xc1c>
   17d30:	muleq	r1, r8, r1
   17d34:			; <UNDEFINED> instruction: 0x0002a3b0
   17d38:	ldrdeq	r9, [r1], -r8
   17d3c:	andeq	r9, r1, r8, asr #21
   17d40:	andeq	r9, r1, r0, lsr #22
   17d44:	andeq	r8, r1, ip, lsl #26
   17d48:	strdeq	r9, [r1], -r4
   17d4c:	push	{r4, r5, r6, lr}
   17d50:	sub	sp, sp, #16
   17d54:	ldr	r5, [pc, #84]	; 17db0 <argp_error@@Base+0xd08>
   17d58:	ldr	ip, [sp, #32]
   17d5c:	ldr	r4, [pc, #80]	; 17db4 <argp_error@@Base+0xd0c>
   17d60:	str	ip, [sp]
   17d64:	ldr	ip, [sp, #40]	; 0x28
   17d68:	ldr	r6, [sp, #36]	; 0x24
   17d6c:	ldr	lr, [r5]
   17d70:	str	ip, [sp, #12]
   17d74:	ldr	ip, [r5, #4]
   17d78:	str	r4, [sp, #8]
   17d7c:	str	r6, [sp, #4]
   17d80:	str	ip, [r4, #4]
   17d84:	str	lr, [r4]
   17d88:	bl	177ec <argp_error@@Base+0x744>
   17d8c:	ldr	r3, [pc, #36]	; 17db8 <argp_error@@Base+0xd10>
   17d90:	ldr	ip, [r4]
   17d94:	ldr	r1, [r4, #8]
   17d98:	ldr	r2, [r4, #12]
   17d9c:	str	ip, [r5]
   17da0:	str	r1, [r5, #8]
   17da4:	str	r2, [r3]
   17da8:	add	sp, sp, #16
   17dac:	pop	{r4, r5, r6, pc}
   17db0:	muleq	r2, r8, r3
   17db4:	strdeq	sl, [r2], -r0
   17db8:	andeq	sl, r2, r0, lsr #8
   17dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   17dc0:	mov	r3, #0
   17dc4:	sub	sp, sp, #20
   17dc8:	mov	ip, #1
   17dcc:	str	r3, [sp]
   17dd0:	stmib	sp, {r3, ip}
   17dd4:	bl	17d4c <argp_error@@Base+0xca4>
   17dd8:	add	sp, sp, #20
   17ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   17de0:	push	{r4, r5, r6, lr}
   17de4:	subs	r4, r2, #0
   17de8:	mov	r6, r0
   17dec:	mov	r5, r1
   17df0:	beq	17e1c <argp_error@@Base+0xd74>
   17df4:	mov	r1, r4
   17df8:	mvn	r0, #0
   17dfc:	bl	185f4 <argp_error@@Base+0x154c>
   17e00:	cmp	r0, r5
   17e04:	bcs	17e1c <argp_error@@Base+0xd74>
   17e08:	bl	111e0 <__errno_location@plt>
   17e0c:	mov	r3, #12
   17e10:	str	r3, [r0]
   17e14:	mov	r0, #0
   17e18:	pop	{r4, r5, r6, pc}
   17e1c:	mul	r1, r5, r4
   17e20:	mov	r0, r6
   17e24:	pop	{r4, r5, r6, lr}
   17e28:	b	13e50 <argp_parse@@Base+0x1a98>
   17e2c:	push	{r4, r5, r6, r7, r8, lr}
   17e30:	mov	r8, r0
   17e34:	mov	r0, #36	; 0x24
   17e38:	mov	r7, r1
   17e3c:	mov	r6, r2
   17e40:	mov	r5, r3
   17e44:	bl	13e24 <argp_parse@@Base+0x1a6c>
   17e48:	subs	r4, r0, #0
   17e4c:	beq	17e90 <argp_error@@Base+0xde8>
   17e50:	mov	r0, #0
   17e54:	str	r5, [r4, #12]
   17e58:	str	r0, [r4, #20]
   17e5c:	str	r0, [r4, #16]
   17e60:	str	r8, [r4]
   17e64:	str	r7, [r4, #4]
   17e68:	str	r6, [r4, #8]
   17e6c:	mov	r0, #200	; 0xc8
   17e70:	bl	13e24 <argp_parse@@Base+0x1a6c>
   17e74:	cmp	r0, #0
   17e78:	addne	r3, r0, #200	; 0xc8
   17e7c:	mov	r5, r0
   17e80:	str	r0, [r4, #24]
   17e84:	strne	r0, [r4, #28]
   17e88:	strne	r3, [r4, #32]
   17e8c:	beq	17e98 <argp_error@@Base+0xdf0>
   17e90:	mov	r0, r4
   17e94:	pop	{r4, r5, r6, r7, r8, pc}
   17e98:	mov	r0, r4
   17e9c:	bl	13250 <argp_parse@@Base+0xe98>
   17ea0:	mov	r4, r5
   17ea4:	b	17e90 <argp_error@@Base+0xde8>
   17ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17eac:	mov	r7, r0
   17eb0:	ldr	r6, [r0, #24]
   17eb4:	ldr	r3, [r0, #16]
   17eb8:	ldr	fp, [r0, #28]
   17ebc:	sub	sp, sp, #12
   17ec0:	add	r6, r6, r3
   17ec4:	mov	r9, #32
   17ec8:	cmp	r6, fp
   17ecc:	bcs	17fa8 <argp_error@@Base+0xf00>
   17ed0:	ldr	r8, [r7, #20]
   17ed4:	cmp	r8, #0
   17ed8:	bne	17f48 <argp_error@@Base+0xea0>
   17edc:	ldr	r4, [r7, #4]
   17ee0:	cmp	r4, #0
   17ee4:	beq	181ec <argp_error@@Base+0x1144>
   17ee8:	ldr	r2, [r7, #32]
   17eec:	add	r3, fp, r4
   17ef0:	cmp	r2, r3
   17ef4:	bls	17f08 <argp_error@@Base+0xe60>
   17ef8:	b	18334 <argp_error@@Base+0x128c>
   17efc:	add	r8, r8, #1
   17f00:	cmp	r4, r8
   17f04:	beq	17f3c <argp_error@@Base+0xe94>
   17f08:	ldr	r0, [r7]
   17f0c:	ldr	r3, [r0, #20]
   17f10:	ldr	r2, [r0, #24]
   17f14:	add	r1, r3, #1
   17f18:	cmp	r3, r2
   17f1c:	strcc	r1, [r0, #20]
   17f20:	strbcc	r9, [r3]
   17f24:	bcc	17efc <argp_error@@Base+0xe54>
   17f28:	mov	r1, r9
   17f2c:	add	r8, r8, #1
   17f30:	bl	11240 <__overflow@plt>
   17f34:	cmp	r4, r8
   17f38:	bne	17f08 <argp_error@@Base+0xe60>
   17f3c:	ldr	fp, [r7, #28]
   17f40:	mov	r8, r4
   17f44:	str	r4, [r7, #20]
   17f48:	sub	sl, fp, r6
   17f4c:	mov	r2, sl
   17f50:	mov	r1, #10
   17f54:	mov	r0, r6
   17f58:	bl	11228 <memchr@plt>
   17f5c:	cmp	r8, #0
   17f60:	movlt	r8, #0
   17f64:	movlt	r3, r8
   17f68:	str	r6, [sp]
   17f6c:	mov	r4, r0
   17f70:	strlt	r3, [r7, #20]
   17f74:	cmp	r4, #0
   17f78:	beq	18210 <argp_error@@Base+0x1168>
   17f7c:	sub	r2, r4, r6
   17f80:	ldr	r3, [r7, #8]
   17f84:	add	r2, r2, r8
   17f88:	cmp	r2, r3
   17f8c:	bge	17fbc <argp_error@@Base+0xf14>
   17f90:	ldr	fp, [r7, #28]
   17f94:	add	r6, r4, #1
   17f98:	mov	r3, #0
   17f9c:	cmp	r6, fp
   17fa0:	str	r3, [r7, #20]
   17fa4:	bcc	17ed0 <argp_error@@Base+0xe28>
   17fa8:	ldr	r3, [r7, #24]
   17fac:	sub	r3, fp, r3
   17fb0:	str	r3, [r7, #16]
   17fb4:	add	sp, sp, #12
   17fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fbc:	ldr	r2, [r7, #12]
   17fc0:	sub	r5, r3, #1
   17fc4:	cmp	r2, #0
   17fc8:	str	r2, [sp, #4]
   17fcc:	blt	182c8 <argp_error@@Base+0x1220>
   17fd0:	add	r5, r5, #1
   17fd4:	sub	r8, r5, r8
   17fd8:	adds	r8, r6, r8
   17fdc:	bcs	18248 <argp_error@@Base+0x11a0>
   17fe0:	bl	1118c <__ctype_b_loc@plt>
   17fe4:	mov	r3, r8
   17fe8:	ldr	r0, [r0]
   17fec:	b	17ff8 <argp_error@@Base+0xf50>
   17ff0:	cmp	r3, r6
   17ff4:	bcc	1824c <argp_error@@Base+0x11a4>
   17ff8:	mov	r1, r3
   17ffc:	sub	r3, r3, #1
   18000:	ldrb	r2, [r1]
   18004:	mov	r5, r3
   18008:	lsl	r2, r2, #1
   1800c:	ldrh	r2, [r0, r2]
   18010:	tst	r2, #1
   18014:	beq	17ff0 <argp_error@@Base+0xf48>
   18018:	add	r5, r1, #1
   1801c:	cmp	r5, r6
   18020:	bls	18260 <argp_error@@Base+0x11b8>
   18024:	cmp	r1, r6
   18028:	bcc	18258 <argp_error@@Base+0x11b0>
   1802c:	mov	r1, r3
   18030:	sub	r8, r6, #1
   18034:	b	18050 <argp_error@@Base+0xfa8>
   18038:	ldrb	r3, [r1]
   1803c:	sub	r1, r1, #1
   18040:	lsl	r3, r3, #1
   18044:	ldrh	r3, [r0, r3]
   18048:	tst	r3, #1
   1804c:	beq	18378 <argp_error@@Base+0x12d0>
   18050:	cmp	r8, r1
   18054:	mov	r2, r1
   18058:	bne	18038 <argp_error@@Base+0xf90>
   1805c:	add	r8, r8, #1
   18060:	add	r3, sl, #1
   18064:	add	r3, r6, r3
   18068:	cmp	r5, r3
   1806c:	beq	18154 <argp_error@@Base+0x10ac>
   18070:	add	r3, r8, #1
   18074:	ldr	r1, [sp, #4]
   18078:	sub	r2, r5, r3
   1807c:	cmp	r2, r1
   18080:	bge	18170 <argp_error@@Base+0x10c8>
   18084:	cmp	r5, fp
   18088:	bcs	18168 <argp_error@@Base+0x10c0>
   1808c:	ldr	r3, [r7, #32]
   18090:	ldr	r2, [sp, #4]
   18094:	sub	r3, r3, fp
   18098:	add	r0, r2, #1
   1809c:	cmp	r3, r0
   180a0:	bgt	183a8 <argp_error@@Base+0x1300>
   180a4:	ldr	r0, [r7, #24]
   180a8:	cmp	r8, r0
   180ac:	bls	180c0 <argp_error@@Base+0x1018>
   180b0:	sub	r2, r8, r0
   180b4:	ldr	r3, [r7]
   180b8:	mov	r1, #1
   180bc:	bl	110c0 <fwrite_unlocked@plt>
   180c0:	ldr	r0, [r7]
   180c4:	ldr	r2, [r0, #24]
   180c8:	ldr	r3, [r0, #20]
   180cc:	cmp	r3, r2
   180d0:	addcc	r2, r3, #1
   180d4:	strcc	r2, [r0, #20]
   180d8:	movcc	r2, #10
   180dc:	strbcc	r2, [r3]
   180e0:	bcs	183e8 <argp_error@@Base+0x1340>
   180e4:	ldr	r6, [r7, #24]
   180e8:	ldr	r3, [sp]
   180ec:	sub	r2, r5, r6
   180f0:	sub	r3, r3, r6
   180f4:	add	sl, sl, r3
   180f8:	mov	fp, r2
   180fc:	mov	r4, r6
   18100:	ldr	r3, [r7, #12]
   18104:	cmp	r3, r2
   18108:	bgt	18190 <argp_error@@Base+0x10e8>
   1810c:	cmp	r3, #0
   18110:	movgt	r2, r6
   18114:	ble	18130 <argp_error@@Base+0x1088>
   18118:	strb	r9, [r2], #1
   1811c:	ldr	r3, [r7, #12]
   18120:	sub	r1, r2, r6
   18124:	cmp	r3, r1
   18128:	bgt	18118 <argp_error@@Base+0x1070>
   1812c:	mov	r6, r2
   18130:	cmp	r6, r5
   18134:	bcc	18318 <argp_error@@Base+0x1270>
   18138:	sub	fp, sl, fp
   1813c:	cmp	r3, #0
   18140:	add	fp, r6, fp
   18144:	mvneq	r3, #0
   18148:	str	fp, [r7, #28]
   1814c:	str	r3, [r7, #20]
   18150:	b	17ec8 <argp_error@@Base+0xe20>
   18154:	ldr	r3, [r7, #32]
   18158:	ldr	r2, [sp, #4]
   1815c:	sub	r3, r3, r8
   18160:	cmp	r3, r2
   18164:	ble	18084 <argp_error@@Base+0xfdc>
   18168:	add	r3, r8, #1
   1816c:	sub	r2, r5, r3
   18170:	sub	fp, r5, r6
   18174:	mov	r4, r6
   18178:	mov	r6, r3
   1817c:	mov	r3, #10
   18180:	strb	r3, [r8]
   18184:	ldr	r3, [r7, #12]
   18188:	cmp	r3, r2
   1818c:	ble	1810c <argp_error@@Base+0x1064>
   18190:	add	r2, sl, #1
   18194:	add	r2, r4, r2
   18198:	cmp	r5, r2
   1819c:	beq	18394 <argp_error@@Base+0x12ec>
   181a0:	cmp	r3, #0
   181a4:	movgt	r8, #0
   181a8:	bgt	181c0 <argp_error@@Base+0x1118>
   181ac:	b	18130 <argp_error@@Base+0x1088>
   181b0:	ldr	r3, [r7, #12]
   181b4:	add	r8, r8, #1
   181b8:	cmp	r3, r8
   181bc:	ble	18130 <argp_error@@Base+0x1088>
   181c0:	ldr	r0, [r7]
   181c4:	ldr	r3, [r0, #20]
   181c8:	ldr	r2, [r0, #24]
   181cc:	add	r1, r3, #1
   181d0:	cmp	r3, r2
   181d4:	strcc	r1, [r0, #20]
   181d8:	strbcc	r9, [r3]
   181dc:	bcc	181b0 <argp_error@@Base+0x1108>
   181e0:	mov	r1, r9
   181e4:	bl	11240 <__overflow@plt>
   181e8:	b	181b0 <argp_error@@Base+0x1108>
   181ec:	sub	sl, fp, r6
   181f0:	mov	r2, sl
   181f4:	mov	r1, #10
   181f8:	mov	r0, r6
   181fc:	bl	11228 <memchr@plt>
   18200:	str	r6, [sp]
   18204:	mov	r4, r0
   18208:	cmp	r4, #0
   1820c:	bne	17f7c <argp_error@@Base+0xed4>
   18210:	ldr	r5, [r7, #8]
   18214:	add	r3, r8, sl
   18218:	cmp	r3, r5
   1821c:	bcc	1840c <argp_error@@Base+0x1364>
   18220:	ldr	r2, [r7, #12]
   18224:	sub	r5, r5, #1
   18228:	cmp	r2, #0
   1822c:	str	r2, [sp, #4]
   18230:	blt	183f8 <argp_error@@Base+0x1350>
   18234:	add	r5, r5, #1
   18238:	sub	r8, r5, r8
   1823c:	adds	r8, r6, r8
   18240:	mov	r4, fp
   18244:	bcc	17fe0 <argp_error@@Base+0xf38>
   18248:	mov	r5, r8
   1824c:	add	r5, r5, #1
   18250:	cmp	r5, r6
   18254:	bls	18260 <argp_error@@Base+0x11b8>
   18258:	mov	r8, r5
   1825c:	b	18060 <argp_error@@Base+0xfb8>
   18260:	cmp	r8, r4
   18264:	bcs	1829c <argp_error@@Base+0x11f4>
   18268:	add	r5, r8, #1
   1826c:	b	18290 <argp_error@@Base+0x11e8>
   18270:	bl	1118c <__ctype_b_loc@plt>
   18274:	ldrb	r3, [r5]
   18278:	add	r5, r5, #1
   1827c:	lsl	r3, r3, #1
   18280:	ldr	r2, [r0]
   18284:	ldrh	r3, [r2, r3]
   18288:	tst	r3, #1
   1828c:	bne	182ac <argp_error@@Base+0x1204>
   18290:	cmp	r5, r4
   18294:	mov	r8, r5
   18298:	bne	18270 <argp_error@@Base+0x11c8>
   1829c:	cmp	r8, r4
   182a0:	beq	18380 <argp_error@@Base+0x12d8>
   182a4:	bl	1118c <__ctype_b_loc@plt>
   182a8:	ldr	r2, [r0]
   182ac:	mov	r5, r8
   182b0:	ldrb	r3, [r5, #1]!
   182b4:	lsl	r3, r3, #1
   182b8:	ldrh	r3, [r2, r3]
   182bc:	tst	r3, #1
   182c0:	bne	182b0 <argp_error@@Base+0x1208>
   182c4:	b	18060 <argp_error@@Base+0xfb8>
   182c8:	cmp	r4, fp
   182cc:	str	r3, [sp]
   182d0:	bcs	183f4 <argp_error@@Base+0x134c>
   182d4:	sub	r0, r5, r8
   182d8:	sub	r2, fp, r4
   182dc:	add	r0, r6, r0
   182e0:	mov	r1, r4
   182e4:	bl	1106c <memmove@plt>
   182e8:	ldr	r2, [r7, #20]
   182ec:	ldr	fp, [r7, #28]
   182f0:	sub	r5, r5, r2
   182f4:	add	r5, r6, r5
   182f8:	mov	r3, #0
   182fc:	sub	r4, r5, r4
   18300:	str	r3, [r7, #20]
   18304:	ldr	r3, [sp]
   18308:	sub	fp, fp, r4
   1830c:	add	r6, r6, r3
   18310:	str	fp, [r7, #28]
   18314:	b	17ec8 <argp_error@@Base+0xe20>
   18318:	add	r2, r4, sl
   1831c:	sub	r2, r2, r5
   18320:	mov	r1, r5
   18324:	mov	r0, r6
   18328:	bl	1106c <memmove@plt>
   1832c:	ldr	r3, [r7, #12]
   18330:	b	18138 <argp_error@@Base+0x1090>
   18334:	add	r5, r6, r4
   18338:	sub	r2, fp, r6
   1833c:	mov	r1, r6
   18340:	mov	r0, r5
   18344:	bl	1106c <memmove@plt>
   18348:	ldr	r3, [r7, #28]
   1834c:	mov	r0, r6
   18350:	add	r3, r3, r4
   18354:	str	r3, [r7, #28]
   18358:	mov	r2, r4
   1835c:	mov	r1, r9
   18360:	bl	11204 <memset@plt>
   18364:	mov	r6, r5
   18368:	ldr	fp, [r7, #28]
   1836c:	mov	r8, r4
   18370:	str	r4, [r7, #20]
   18374:	b	17f48 <argp_error@@Base+0xea0>
   18378:	add	r8, r2, #1
   1837c:	b	18060 <argp_error@@Base+0xfb8>
   18380:	mov	r3, #0
   18384:	str	r3, [r7, #20]
   18388:	add	r6, r8, #1
   1838c:	ldr	fp, [r7, #28]
   18390:	b	17ec8 <argp_error@@Base+0xe20>
   18394:	ldr	r2, [r7, #32]
   18398:	sub	r2, r2, r5
   1839c:	cmp	r3, r2
   183a0:	ble	1810c <argp_error@@Base+0x1064>
   183a4:	b	181a0 <argp_error@@Base+0x10f8>
   183a8:	sub	fp, fp, r5
   183ac:	mov	r2, fp
   183b0:	mov	r1, r5
   183b4:	add	r0, r8, r0
   183b8:	bl	1106c <memmove@plt>
   183bc:	ldr	r2, [r7, #12]
   183c0:	mov	r3, #10
   183c4:	add	r5, r2, #1
   183c8:	add	r5, r8, r5
   183cc:	add	fp, r5, fp
   183d0:	sub	sl, fp, r6
   183d4:	mov	r4, r6
   183d8:	sub	fp, r5, r6
   183dc:	strb	r3, [r8]
   183e0:	add	r6, r8, #1
   183e4:	b	18100 <argp_error@@Base+0x1058>
   183e8:	mov	r1, #10
   183ec:	bl	11240 <__overflow@plt>
   183f0:	b	180e4 <argp_error@@Base+0x103c>
   183f4:	add	r3, r8, sl
   183f8:	sub	r5, r5, r3
   183fc:	add	fp, fp, r5
   18400:	str	fp, [r7, #28]
   18404:	str	r3, [r7, #20]
   18408:	b	17fa8 <argp_error@@Base+0xf00>
   1840c:	str	r3, [r7, #20]
   18410:	ldr	fp, [r7, #28]
   18414:	b	17fa8 <argp_error@@Base+0xf00>
   18418:	push	{r4, lr}
   1841c:	mov	r4, r0
   18420:	bl	17ea8 <argp_error@@Base+0xe00>
   18424:	ldr	r2, [r4, #28]
   18428:	ldr	r0, [r4, #24]
   1842c:	cmp	r2, r0
   18430:	bls	18448 <argp_error@@Base+0x13a0>
   18434:	sub	r2, r2, r0
   18438:	ldr	r3, [r4]
   1843c:	mov	r1, #1
   18440:	bl	110c0 <fwrite_unlocked@plt>
   18444:	ldr	r0, [r4, #24]
   18448:	bl	13250 <argp_parse@@Base+0xe98>
   1844c:	mov	r0, r4
   18450:	pop	{r4, lr}
   18454:	b	13250 <argp_parse@@Base+0xe98>
   18458:	push	{r4, r5, r6, lr}
   1845c:	mov	r4, r0
   18460:	mov	r5, r1
   18464:	bl	17ea8 <argp_error@@Base+0xe00>
   18468:	ldr	r3, [r4, #24]
   1846c:	ldr	r2, [r4, #28]
   18470:	mov	r0, r3
   18474:	sub	r2, r2, r3
   18478:	mov	r1, #1
   1847c:	ldr	r3, [r4]
   18480:	bl	110c0 <fwrite_unlocked@plt>
   18484:	ldr	r2, [r4, #28]
   18488:	ldr	r3, [r4, #24]
   1848c:	sub	r1, r2, r3
   18490:	cmp	r0, r1
   18494:	bne	184d8 <argp_error@@Base+0x1430>
   18498:	ldr	r1, [r4, #32]
   1849c:	mov	r2, #0
   184a0:	sub	r1, r1, r3
   184a4:	cmp	r1, r5
   184a8:	str	r3, [r4, #28]
   184ac:	str	r2, [r4, #16]
   184b0:	movcs	r3, #1
   184b4:	bcs	184d0 <argp_error@@Base+0x1428>
   184b8:	adds	r5, r1, r5
   184bc:	bcc	18508 <argp_error@@Base+0x1460>
   184c0:	bl	111e0 <__errno_location@plt>
   184c4:	mov	r3, #0
   184c8:	mov	r2, #12
   184cc:	str	r2, [r0]
   184d0:	mov	r0, r3
   184d4:	pop	{r4, r5, r6, pc}
   184d8:	ldr	r1, [r4, #16]
   184dc:	sub	r2, r2, r0
   184e0:	sub	r1, r1, r0
   184e4:	str	r2, [r4, #28]
   184e8:	str	r1, [r4, #16]
   184ec:	sub	r2, r2, r3
   184f0:	add	r1, r3, r0
   184f4:	mov	r0, r3
   184f8:	bl	1106c <memmove@plt>
   184fc:	mov	r3, #0
   18500:	mov	r0, r3
   18504:	pop	{r4, r5, r6, pc}
   18508:	mov	r0, r3
   1850c:	mov	r1, r5
   18510:	bl	13e50 <argp_parse@@Base+0x1a98>
   18514:	cmp	r0, #0
   18518:	beq	184c0 <argp_error@@Base+0x1418>
   1851c:	add	r1, r0, r5
   18520:	mov	r3, #1
   18524:	str	r0, [r4, #24]
   18528:	str	r0, [r4, #28]
   1852c:	str	r1, [r4, #32]
   18530:	mov	r0, r3
   18534:	pop	{r4, r5, r6, pc}
   18538:	ldr	r3, [r0, #32]
   1853c:	ldr	r2, [r0, #28]
   18540:	sub	r3, r3, r2
   18544:	cmp	r3, r1
   18548:	bcc	18554 <argp_error@@Base+0x14ac>
   1854c:	mov	r0, #1
   18550:	bx	lr
   18554:	b	18458 <argp_error@@Base+0x13b0>
   18558:	push	{r1, r2, r3}
   1855c:	mov	r1, #150	; 0x96
   18560:	push	{r4, r5, r6, r7, lr}
   18564:	sub	sp, sp, #8
   18568:	mov	r5, r0
   1856c:	ldr	r7, [sp, #28]
   18570:	add	r6, sp, #32
   18574:	ldr	r3, [r5, #32]
   18578:	ldr	r0, [r5, #28]
   1857c:	sub	r2, r3, r0
   18580:	cmp	r1, r2
   18584:	bhi	185c8 <argp_error@@Base+0x1520>
   18588:	sub	r4, r3, r0
   1858c:	mov	r1, r4
   18590:	mov	r3, r6
   18594:	mov	r2, r7
   18598:	str	r6, [sp, #4]
   1859c:	bl	1127c <vsnprintf@plt>
   185a0:	cmp	r4, r0
   185a4:	addls	r1, r0, #1
   185a8:	bls	18574 <argp_error@@Base+0x14cc>
   185ac:	ldr	r3, [r5, #28]
   185b0:	add	r3, r3, r0
   185b4:	str	r3, [r5, #28]
   185b8:	add	sp, sp, #8
   185bc:	pop	{r4, r5, r6, r7, lr}
   185c0:	add	sp, sp, #12
   185c4:	bx	lr
   185c8:	mov	r0, r5
   185cc:	bl	18458 <argp_error@@Base+0x13b0>
   185d0:	cmp	r0, #0
   185d4:	ldrne	r3, [r5, #32]
   185d8:	ldrne	r0, [r5, #28]
   185dc:	bne	18588 <argp_error@@Base+0x14e0>
   185e0:	mvn	r0, #0
   185e4:	add	sp, sp, #8
   185e8:	pop	{r4, r5, r6, r7, lr}
   185ec:	add	sp, sp, #12
   185f0:	bx	lr
   185f4:	subs	r2, r1, #1
   185f8:	bxeq	lr
   185fc:	bcc	187d4 <argp_error@@Base+0x172c>
   18600:	cmp	r0, r1
   18604:	bls	187b8 <argp_error@@Base+0x1710>
   18608:	tst	r1, r2
   1860c:	beq	187c4 <argp_error@@Base+0x171c>
   18610:	clz	r3, r0
   18614:	clz	r2, r1
   18618:	sub	r3, r2, r3
   1861c:	rsbs	r3, r3, #31
   18620:	addne	r3, r3, r3, lsl #1
   18624:	mov	r2, #0
   18628:	addne	pc, pc, r3, lsl #2
   1862c:	nop			; (mov r0, r0)
   18630:	cmp	r0, r1, lsl #31
   18634:	adc	r2, r2, r2
   18638:	subcs	r0, r0, r1, lsl #31
   1863c:	cmp	r0, r1, lsl #30
   18640:	adc	r2, r2, r2
   18644:	subcs	r0, r0, r1, lsl #30
   18648:	cmp	r0, r1, lsl #29
   1864c:	adc	r2, r2, r2
   18650:	subcs	r0, r0, r1, lsl #29
   18654:	cmp	r0, r1, lsl #28
   18658:	adc	r2, r2, r2
   1865c:	subcs	r0, r0, r1, lsl #28
   18660:	cmp	r0, r1, lsl #27
   18664:	adc	r2, r2, r2
   18668:	subcs	r0, r0, r1, lsl #27
   1866c:	cmp	r0, r1, lsl #26
   18670:	adc	r2, r2, r2
   18674:	subcs	r0, r0, r1, lsl #26
   18678:	cmp	r0, r1, lsl #25
   1867c:	adc	r2, r2, r2
   18680:	subcs	r0, r0, r1, lsl #25
   18684:	cmp	r0, r1, lsl #24
   18688:	adc	r2, r2, r2
   1868c:	subcs	r0, r0, r1, lsl #24
   18690:	cmp	r0, r1, lsl #23
   18694:	adc	r2, r2, r2
   18698:	subcs	r0, r0, r1, lsl #23
   1869c:	cmp	r0, r1, lsl #22
   186a0:	adc	r2, r2, r2
   186a4:	subcs	r0, r0, r1, lsl #22
   186a8:	cmp	r0, r1, lsl #21
   186ac:	adc	r2, r2, r2
   186b0:	subcs	r0, r0, r1, lsl #21
   186b4:	cmp	r0, r1, lsl #20
   186b8:	adc	r2, r2, r2
   186bc:	subcs	r0, r0, r1, lsl #20
   186c0:	cmp	r0, r1, lsl #19
   186c4:	adc	r2, r2, r2
   186c8:	subcs	r0, r0, r1, lsl #19
   186cc:	cmp	r0, r1, lsl #18
   186d0:	adc	r2, r2, r2
   186d4:	subcs	r0, r0, r1, lsl #18
   186d8:	cmp	r0, r1, lsl #17
   186dc:	adc	r2, r2, r2
   186e0:	subcs	r0, r0, r1, lsl #17
   186e4:	cmp	r0, r1, lsl #16
   186e8:	adc	r2, r2, r2
   186ec:	subcs	r0, r0, r1, lsl #16
   186f0:	cmp	r0, r1, lsl #15
   186f4:	adc	r2, r2, r2
   186f8:	subcs	r0, r0, r1, lsl #15
   186fc:	cmp	r0, r1, lsl #14
   18700:	adc	r2, r2, r2
   18704:	subcs	r0, r0, r1, lsl #14
   18708:	cmp	r0, r1, lsl #13
   1870c:	adc	r2, r2, r2
   18710:	subcs	r0, r0, r1, lsl #13
   18714:	cmp	r0, r1, lsl #12
   18718:	adc	r2, r2, r2
   1871c:	subcs	r0, r0, r1, lsl #12
   18720:	cmp	r0, r1, lsl #11
   18724:	adc	r2, r2, r2
   18728:	subcs	r0, r0, r1, lsl #11
   1872c:	cmp	r0, r1, lsl #10
   18730:	adc	r2, r2, r2
   18734:	subcs	r0, r0, r1, lsl #10
   18738:	cmp	r0, r1, lsl #9
   1873c:	adc	r2, r2, r2
   18740:	subcs	r0, r0, r1, lsl #9
   18744:	cmp	r0, r1, lsl #8
   18748:	adc	r2, r2, r2
   1874c:	subcs	r0, r0, r1, lsl #8
   18750:	cmp	r0, r1, lsl #7
   18754:	adc	r2, r2, r2
   18758:	subcs	r0, r0, r1, lsl #7
   1875c:	cmp	r0, r1, lsl #6
   18760:	adc	r2, r2, r2
   18764:	subcs	r0, r0, r1, lsl #6
   18768:	cmp	r0, r1, lsl #5
   1876c:	adc	r2, r2, r2
   18770:	subcs	r0, r0, r1, lsl #5
   18774:	cmp	r0, r1, lsl #4
   18778:	adc	r2, r2, r2
   1877c:	subcs	r0, r0, r1, lsl #4
   18780:	cmp	r0, r1, lsl #3
   18784:	adc	r2, r2, r2
   18788:	subcs	r0, r0, r1, lsl #3
   1878c:	cmp	r0, r1, lsl #2
   18790:	adc	r2, r2, r2
   18794:	subcs	r0, r0, r1, lsl #2
   18798:	cmp	r0, r1, lsl #1
   1879c:	adc	r2, r2, r2
   187a0:	subcs	r0, r0, r1, lsl #1
   187a4:	cmp	r0, r1
   187a8:	adc	r2, r2, r2
   187ac:	subcs	r0, r0, r1
   187b0:	mov	r0, r2
   187b4:	bx	lr
   187b8:	moveq	r0, #1
   187bc:	movne	r0, #0
   187c0:	bx	lr
   187c4:	clz	r2, r1
   187c8:	rsb	r2, r2, #31
   187cc:	lsr	r0, r0, r2
   187d0:	bx	lr
   187d4:	cmp	r0, #0
   187d8:	mvnne	r0, #0
   187dc:	b	18a7c <argp_error@@Base+0x19d4>
   187e0:	cmp	r1, #0
   187e4:	beq	187d4 <argp_error@@Base+0x172c>
   187e8:	push	{r0, r1, lr}
   187ec:	bl	185f4 <argp_error@@Base+0x154c>
   187f0:	pop	{r1, r2, lr}
   187f4:	mul	r3, r2, r0
   187f8:	sub	r1, r1, r3
   187fc:	bx	lr
   18800:	cmp	r1, #0
   18804:	beq	18a10 <argp_error@@Base+0x1968>
   18808:	eor	ip, r0, r1
   1880c:	rsbmi	r1, r1, #0
   18810:	subs	r2, r1, #1
   18814:	beq	189dc <argp_error@@Base+0x1934>
   18818:	movs	r3, r0
   1881c:	rsbmi	r3, r0, #0
   18820:	cmp	r3, r1
   18824:	bls	189e8 <argp_error@@Base+0x1940>
   18828:	tst	r1, r2
   1882c:	beq	189f8 <argp_error@@Base+0x1950>
   18830:	clz	r2, r3
   18834:	clz	r0, r1
   18838:	sub	r2, r0, r2
   1883c:	rsbs	r2, r2, #31
   18840:	addne	r2, r2, r2, lsl #1
   18844:	mov	r0, #0
   18848:	addne	pc, pc, r2, lsl #2
   1884c:	nop			; (mov r0, r0)
   18850:	cmp	r3, r1, lsl #31
   18854:	adc	r0, r0, r0
   18858:	subcs	r3, r3, r1, lsl #31
   1885c:	cmp	r3, r1, lsl #30
   18860:	adc	r0, r0, r0
   18864:	subcs	r3, r3, r1, lsl #30
   18868:	cmp	r3, r1, lsl #29
   1886c:	adc	r0, r0, r0
   18870:	subcs	r3, r3, r1, lsl #29
   18874:	cmp	r3, r1, lsl #28
   18878:	adc	r0, r0, r0
   1887c:	subcs	r3, r3, r1, lsl #28
   18880:	cmp	r3, r1, lsl #27
   18884:	adc	r0, r0, r0
   18888:	subcs	r3, r3, r1, lsl #27
   1888c:	cmp	r3, r1, lsl #26
   18890:	adc	r0, r0, r0
   18894:	subcs	r3, r3, r1, lsl #26
   18898:	cmp	r3, r1, lsl #25
   1889c:	adc	r0, r0, r0
   188a0:	subcs	r3, r3, r1, lsl #25
   188a4:	cmp	r3, r1, lsl #24
   188a8:	adc	r0, r0, r0
   188ac:	subcs	r3, r3, r1, lsl #24
   188b0:	cmp	r3, r1, lsl #23
   188b4:	adc	r0, r0, r0
   188b8:	subcs	r3, r3, r1, lsl #23
   188bc:	cmp	r3, r1, lsl #22
   188c0:	adc	r0, r0, r0
   188c4:	subcs	r3, r3, r1, lsl #22
   188c8:	cmp	r3, r1, lsl #21
   188cc:	adc	r0, r0, r0
   188d0:	subcs	r3, r3, r1, lsl #21
   188d4:	cmp	r3, r1, lsl #20
   188d8:	adc	r0, r0, r0
   188dc:	subcs	r3, r3, r1, lsl #20
   188e0:	cmp	r3, r1, lsl #19
   188e4:	adc	r0, r0, r0
   188e8:	subcs	r3, r3, r1, lsl #19
   188ec:	cmp	r3, r1, lsl #18
   188f0:	adc	r0, r0, r0
   188f4:	subcs	r3, r3, r1, lsl #18
   188f8:	cmp	r3, r1, lsl #17
   188fc:	adc	r0, r0, r0
   18900:	subcs	r3, r3, r1, lsl #17
   18904:	cmp	r3, r1, lsl #16
   18908:	adc	r0, r0, r0
   1890c:	subcs	r3, r3, r1, lsl #16
   18910:	cmp	r3, r1, lsl #15
   18914:	adc	r0, r0, r0
   18918:	subcs	r3, r3, r1, lsl #15
   1891c:	cmp	r3, r1, lsl #14
   18920:	adc	r0, r0, r0
   18924:	subcs	r3, r3, r1, lsl #14
   18928:	cmp	r3, r1, lsl #13
   1892c:	adc	r0, r0, r0
   18930:	subcs	r3, r3, r1, lsl #13
   18934:	cmp	r3, r1, lsl #12
   18938:	adc	r0, r0, r0
   1893c:	subcs	r3, r3, r1, lsl #12
   18940:	cmp	r3, r1, lsl #11
   18944:	adc	r0, r0, r0
   18948:	subcs	r3, r3, r1, lsl #11
   1894c:	cmp	r3, r1, lsl #10
   18950:	adc	r0, r0, r0
   18954:	subcs	r3, r3, r1, lsl #10
   18958:	cmp	r3, r1, lsl #9
   1895c:	adc	r0, r0, r0
   18960:	subcs	r3, r3, r1, lsl #9
   18964:	cmp	r3, r1, lsl #8
   18968:	adc	r0, r0, r0
   1896c:	subcs	r3, r3, r1, lsl #8
   18970:	cmp	r3, r1, lsl #7
   18974:	adc	r0, r0, r0
   18978:	subcs	r3, r3, r1, lsl #7
   1897c:	cmp	r3, r1, lsl #6
   18980:	adc	r0, r0, r0
   18984:	subcs	r3, r3, r1, lsl #6
   18988:	cmp	r3, r1, lsl #5
   1898c:	adc	r0, r0, r0
   18990:	subcs	r3, r3, r1, lsl #5
   18994:	cmp	r3, r1, lsl #4
   18998:	adc	r0, r0, r0
   1899c:	subcs	r3, r3, r1, lsl #4
   189a0:	cmp	r3, r1, lsl #3
   189a4:	adc	r0, r0, r0
   189a8:	subcs	r3, r3, r1, lsl #3
   189ac:	cmp	r3, r1, lsl #2
   189b0:	adc	r0, r0, r0
   189b4:	subcs	r3, r3, r1, lsl #2
   189b8:	cmp	r3, r1, lsl #1
   189bc:	adc	r0, r0, r0
   189c0:	subcs	r3, r3, r1, lsl #1
   189c4:	cmp	r3, r1
   189c8:	adc	r0, r0, r0
   189cc:	subcs	r3, r3, r1
   189d0:	cmp	ip, #0
   189d4:	rsbmi	r0, r0, #0
   189d8:	bx	lr
   189dc:	teq	ip, r0
   189e0:	rsbmi	r0, r0, #0
   189e4:	bx	lr
   189e8:	movcc	r0, #0
   189ec:	asreq	r0, ip, #31
   189f0:	orreq	r0, r0, #1
   189f4:	bx	lr
   189f8:	clz	r2, r1
   189fc:	rsb	r2, r2, #31
   18a00:	cmp	ip, #0
   18a04:	lsr	r0, r3, r2
   18a08:	rsbmi	r0, r0, #0
   18a0c:	bx	lr
   18a10:	cmp	r0, #0
   18a14:	mvngt	r0, #-2147483648	; 0x80000000
   18a18:	movlt	r0, #-2147483648	; 0x80000000
   18a1c:	b	18a7c <argp_error@@Base+0x19d4>
   18a20:	cmp	r1, #0
   18a24:	beq	18a10 <argp_error@@Base+0x1968>
   18a28:	push	{r0, r1, lr}
   18a2c:	bl	18808 <argp_error@@Base+0x1760>
   18a30:	pop	{r1, r2, lr}
   18a34:	mul	r3, r2, r0
   18a38:	sub	r1, r1, r3
   18a3c:	bx	lr
   18a40:	cmp	r3, #0
   18a44:	cmpeq	r2, #0
   18a48:	bne	18a60 <argp_error@@Base+0x19b8>
   18a4c:	cmp	r1, #0
   18a50:	cmpeq	r0, #0
   18a54:	mvnne	r1, #0
   18a58:	mvnne	r0, #0
   18a5c:	b	18a7c <argp_error@@Base+0x19d4>
   18a60:	sub	sp, sp, #8
   18a64:	push	{sp, lr}
   18a68:	bl	18a8c <argp_error@@Base+0x19e4>
   18a6c:	ldr	lr, [sp, #4]
   18a70:	add	sp, sp, #8
   18a74:	pop	{r2, r3}
   18a78:	bx	lr
   18a7c:	push	{r1, lr}
   18a80:	mov	r0, #8
   18a84:	bl	11018 <raise@plt>
   18a88:	pop	{r1, pc}
   18a8c:	cmp	r1, r3
   18a90:	push	{r4, r5, r6, r7, r8, r9, lr}
   18a94:	cmpeq	r0, r2
   18a98:	mov	r4, r0
   18a9c:	mov	r5, r1
   18aa0:	ldr	r9, [sp, #28]
   18aa4:	movcc	r0, #0
   18aa8:	movcc	r1, #0
   18aac:	bcc	18ba4 <argp_error@@Base+0x1afc>
   18ab0:	cmp	r3, #0
   18ab4:	clzeq	ip, r2
   18ab8:	clzne	ip, r3
   18abc:	addeq	ip, ip, #32
   18ac0:	cmp	r5, #0
   18ac4:	clzeq	r1, r4
   18ac8:	addeq	r1, r1, #32
   18acc:	clzne	r1, r5
   18ad0:	sub	ip, ip, r1
   18ad4:	sub	lr, ip, #32
   18ad8:	lsl	r7, r3, ip
   18adc:	rsb	r8, ip, #32
   18ae0:	orr	r7, r7, r2, lsl lr
   18ae4:	orr	r7, r7, r2, lsr r8
   18ae8:	lsl	r6, r2, ip
   18aec:	cmp	r5, r7
   18af0:	cmpeq	r4, r6
   18af4:	movcc	r0, #0
   18af8:	movcc	r1, #0
   18afc:	bcc	18b18 <argp_error@@Base+0x1a70>
   18b00:	mov	r3, #1
   18b04:	subs	r4, r4, r6
   18b08:	lsl	r1, r3, lr
   18b0c:	lsl	r0, r3, ip
   18b10:	orr	r1, r1, r3, lsr r8
   18b14:	sbc	r5, r5, r7
   18b18:	cmp	ip, #0
   18b1c:	beq	18ba4 <argp_error@@Base+0x1afc>
   18b20:	lsrs	r3, r7, #1
   18b24:	rrx	r2, r6
   18b28:	mov	r6, ip
   18b2c:	b	18b50 <argp_error@@Base+0x1aa8>
   18b30:	subs	r4, r4, r2
   18b34:	sbc	r5, r5, r3
   18b38:	adds	r4, r4, r4
   18b3c:	adc	r5, r5, r5
   18b40:	adds	r4, r4, #1
   18b44:	adc	r5, r5, #0
   18b48:	subs	r6, r6, #1
   18b4c:	beq	18b6c <argp_error@@Base+0x1ac4>
   18b50:	cmp	r5, r3
   18b54:	cmpeq	r4, r2
   18b58:	bcs	18b30 <argp_error@@Base+0x1a88>
   18b5c:	adds	r4, r4, r4
   18b60:	adc	r5, r5, r5
   18b64:	subs	r6, r6, #1
   18b68:	bne	18b50 <argp_error@@Base+0x1aa8>
   18b6c:	lsr	r6, r4, ip
   18b70:	lsr	r7, r5, ip
   18b74:	orr	r6, r6, r5, lsl r8
   18b78:	adds	r2, r0, r4
   18b7c:	orr	r6, r6, r5, lsr lr
   18b80:	adc	r3, r1, r5
   18b84:	lsl	r1, r7, ip
   18b88:	orr	r1, r1, r6, lsl lr
   18b8c:	lsl	r0, r6, ip
   18b90:	orr	r1, r1, r6, lsr r8
   18b94:	subs	r0, r2, r0
   18b98:	mov	r4, r6
   18b9c:	mov	r5, r7
   18ba0:	sbc	r1, r3, r1
   18ba4:	cmp	r9, #0
   18ba8:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   18bac:	strd	r4, [r9]
   18bb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18bb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18bb8:	mov	r7, r0
   18bbc:	ldr	r6, [pc, #72]	; 18c0c <argp_error@@Base+0x1b64>
   18bc0:	ldr	r5, [pc, #72]	; 18c10 <argp_error@@Base+0x1b68>
   18bc4:	add	r6, pc, r6
   18bc8:	add	r5, pc, r5
   18bcc:	sub	r6, r6, r5
   18bd0:	mov	r8, r1
   18bd4:	mov	r9, r2
   18bd8:	bl	10fe0 <calloc@plt-0x20>
   18bdc:	asrs	r6, r6, #2
   18be0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18be4:	mov	r4, #0
   18be8:	add	r4, r4, #1
   18bec:	ldr	r3, [r5], #4
   18bf0:	mov	r2, r9
   18bf4:	mov	r1, r8
   18bf8:	mov	r0, r7
   18bfc:	blx	r3
   18c00:	cmp	r6, r4
   18c04:	bne	18be8 <argp_error@@Base+0x1b40>
   18c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c0c:	andeq	r1, r1, ip, lsr r3
   18c10:	andeq	r1, r1, r4, lsr r3
   18c14:	bx	lr

Disassembly of section .fini:

00018c18 <.fini>:
   18c18:	push	{r3, lr}
   18c1c:	pop	{r3, pc}
