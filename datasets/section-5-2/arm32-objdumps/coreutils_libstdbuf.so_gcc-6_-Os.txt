
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

0000042c <.init>:
 42c:	push	{r3, lr}
 430:	bl	7b4 <__fprintf_chk@plt+0x2fc>
 434:	pop	{r3, pc}

Disassembly of section .plt:

00000438 <__cxa_finalize@plt-0x14>:
 438:	push	{lr}		; (str lr, [sp, #-4]!)
 43c:	ldr	lr, [pc, #4]	; 448 <__cxa_finalize@plt-0x4>
 440:	add	lr, pc, lr
 444:	ldr	pc, [lr, #8]!
 448:			; <UNDEFINED> instruction: 0x00010bb8

0000044c <__cxa_finalize@plt>:
 44c:	add	ip, pc, #0, 12
 450:	add	ip, ip, #16, 20	; 0x10000
 454:	ldr	pc, [ip, #3000]!	; 0xbb8

00000458 <free@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2992]!	; 0xbb0

00000464 <dcgettext@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2984]!	; 0xba8

00000470 <getenv@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2976]!	; 0xba0

0000047c <malloc@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2968]!	; 0xb98

00000488 <__gmon_start__@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2960]!	; 0xb90

00000494 <setvbuf@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2952]!	; 0xb88

000004a0 <fileno@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2944]!	; 0xb80

000004ac <strtoumax@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2936]!	; 0xb78

000004b8 <__fprintf_chk@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2928]!	; 0xb70

Disassembly of section .text:

000004c4 <.text>:
 4c4:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 4c8:	mov	sl, r0
 4cc:	ldrb	r3, [r1]
 4d0:	ldr	r9, [pc, #504]	; 6d0 <__fprintf_chk@plt+0x218>
 4d4:	mov	r8, r1
 4d8:	cmp	r3, #48	; 0x30
 4dc:	add	r9, pc, r9
 4e0:	beq	670 <__fprintf_chk@plt+0x1b8>
 4e4:	cmp	r3, #76	; 0x4c
 4e8:	beq	680 <__fprintf_chk@plt+0x1c8>
 4ec:	mov	r2, #10
 4f0:	add	r1, sp, #12
 4f4:	mov	r0, r8
 4f8:	bl	4ac <strtoumax@plt>
 4fc:	mov	r4, r0
 500:	mov	r5, r1
 504:	orrs	r3, r4, r5
 508:	beq	51c <__fprintf_chk@plt+0x64>
 50c:	ldr	r3, [sp, #12]
 510:	ldrb	r6, [r3]
 514:	cmp	r6, #0
 518:	beq	5ac <__fprintf_chk@plt+0xf4>
 51c:	ldr	r3, [pc, #432]	; 6d4 <__fprintf_chk@plt+0x21c>
 520:	ldr	r1, [pc, #432]	; 6d8 <__fprintf_chk@plt+0x220>
 524:	mov	r2, #5
 528:	ldr	r3, [r9, r3]
 52c:	add	r1, pc, r1
 530:	mov	r0, #0
 534:	ldr	r4, [r3]
 538:	bl	464 <dcgettext@plt>
 53c:	mov	r5, r0
 540:	mov	r0, sl
 544:	bl	4a0 <fileno@plt>
 548:	cmp	r0, #1
 54c:	beq	56c <__fprintf_chk@plt+0xb4>
 550:	cmp	r0, #2
 554:	beq	594 <__fprintf_chk@plt+0xdc>
 558:	cmp	r0, #0
 55c:	bne	5a0 <__fprintf_chk@plt+0xe8>
 560:	ldr	r3, [pc, #372]	; 6dc <__fprintf_chk@plt+0x224>
 564:	add	r3, pc, r3
 568:	b	574 <__fprintf_chk@plt+0xbc>
 56c:	ldr	r3, [pc, #364]	; 6e0 <__fprintf_chk@plt+0x228>
 570:	add	r3, pc, r3
 574:	str	r3, [sp]
 578:	mov	r2, r5
 57c:	mov	r3, r8
 580:	mov	r1, #1
 584:	mov	r0, r4
 588:	bl	4b8 <__fprintf_chk@plt>
 58c:	add	sp, sp, #16
 590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 594:	ldr	r3, [pc, #328]	; 6e4 <__fprintf_chk@plt+0x22c>
 598:	add	r3, pc, r3
 59c:	b	574 <__fprintf_chk@plt+0xbc>
 5a0:	ldr	r3, [pc, #320]	; 6e8 <__fprintf_chk@plt+0x230>
 5a4:	add	r3, pc, r3
 5a8:	b	574 <__fprintf_chk@plt+0xbc>
 5ac:	mov	r3, #0
 5b0:	mvn	r2, #0
 5b4:	cmp	r1, r3
 5b8:	cmpeq	r0, r2
 5bc:	bls	5f8 <__fprintf_chk@plt+0x140>
 5c0:	ldr	r3, [pc, #268]	; 6d4 <__fprintf_chk@plt+0x21c>
 5c4:	ldr	r1, [pc, #288]	; 6ec <__fprintf_chk@plt+0x234>
 5c8:	mov	r2, #5
 5cc:	ldr	r3, [r9, r3]
 5d0:	add	r1, pc, r1
 5d4:	mov	r0, #0
 5d8:	ldr	r6, [r3]
 5dc:	bl	464 <dcgettext@plt>
 5e0:	strd	r4, [sp]
 5e4:	mov	r1, #1
 5e8:	mov	r2, r0
 5ec:	mov	r0, r6
 5f0:	bl	4b8 <__fprintf_chk@plt>
 5f4:	b	58c <__fprintf_chk@plt+0xd4>
 5f8:	bl	47c <malloc@plt>
 5fc:	subs	r7, r0, #0
 600:	movne	r2, r6
 604:	beq	5c0 <__fprintf_chk@plt+0x108>
 608:	mov	r3, r4
 60c:	mov	r1, r7
 610:	mov	r0, sl
 614:	bl	494 <setvbuf@plt>
 618:	cmp	r0, #0
 61c:	beq	58c <__fprintf_chk@plt+0xd4>
 620:	ldr	r3, [pc, #172]	; 6d4 <__fprintf_chk@plt+0x21c>
 624:	ldr	r1, [pc, #196]	; 6f0 <__fprintf_chk@plt+0x238>
 628:	mov	r2, #5
 62c:	ldr	r3, [r9, r3]
 630:	add	r1, pc, r1
 634:	mov	r0, #0
 638:	ldr	r4, [r3]
 63c:	bl	464 <dcgettext@plt>
 640:	mov	r5, r0
 644:	mov	r0, sl
 648:	bl	4a0 <fileno@plt>
 64c:	cmp	r0, #1
 650:	beq	68c <__fprintf_chk@plt+0x1d4>
 654:	cmp	r0, #2
 658:	beq	6b8 <__fprintf_chk@plt+0x200>
 65c:	cmp	r0, #0
 660:	bne	6c4 <__fprintf_chk@plt+0x20c>
 664:	ldr	r3, [pc, #136]	; 6f4 <__fprintf_chk@plt+0x23c>
 668:	add	r3, pc, r3
 66c:	b	694 <__fprintf_chk@plt+0x1dc>
 670:	mov	r4, #0
 674:	mov	r2, #2
 678:	mov	r7, #0
 67c:	b	608 <__fprintf_chk@plt+0x150>
 680:	mov	r4, #0
 684:	mov	r2, #1
 688:	b	678 <__fprintf_chk@plt+0x1c0>
 68c:	ldr	r3, [pc, #100]	; 6f8 <__fprintf_chk@plt+0x240>
 690:	add	r3, pc, r3
 694:	str	r8, [sp]
 698:	mov	r2, r5
 69c:	mov	r1, #1
 6a0:	mov	r0, r4
 6a4:	bl	4b8 <__fprintf_chk@plt>
 6a8:	mov	r0, r7
 6ac:	add	sp, sp, #16
 6b0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 6b4:	b	458 <free@plt>
 6b8:	ldr	r3, [pc, #60]	; 6fc <__fprintf_chk@plt+0x244>
 6bc:	add	r3, pc, r3
 6c0:	b	694 <__fprintf_chk@plt+0x1dc>
 6c4:	ldr	r3, [pc, #52]	; 700 <__fprintf_chk@plt+0x248>
 6c8:	add	r3, pc, r3
 6cc:	b	694 <__fprintf_chk@plt+0x1dc>
 6d0:	andeq	r0, r1, ip, lsl fp
 6d4:	andeq	r0, r0, ip, lsr r0
 6d8:	andeq	r0, r0, r8, lsl r4
 6dc:	andeq	r0, r0, r4, asr #7
 6e0:			; <UNDEFINED> instruction: 0x000003be
 6e4:	muleq	r0, sp, r3
 6e8:	muleq	r0, r8, r3
 6ec:	muleq	r0, r6, r3
 6f0:	andeq	r0, r0, r3, ror #6
 6f4:	andeq	r0, r0, r0, asr #5
 6f8:	muleq	r0, lr, r2
 6fc:	andeq	r0, r0, r9, ror r2
 700:	andeq	r0, r0, r4, ror r2
 704:	ldr	r0, [pc, #140]	; 798 <__fprintf_chk@plt+0x2e0>
 708:	push	{r4, r5, r6, r7, r8, lr}
 70c:	add	r0, pc, r0
 710:	bl	470 <getenv@plt>
 714:	ldr	r4, [pc, #128]	; 79c <__fprintf_chk@plt+0x2e4>
 718:	add	r4, pc, r4
 71c:	mov	r7, r0
 720:	ldr	r0, [pc, #120]	; 7a0 <__fprintf_chk@plt+0x2e8>
 724:	add	r0, pc, r0
 728:	bl	470 <getenv@plt>
 72c:	mov	r6, r0
 730:	ldr	r0, [pc, #108]	; 7a4 <__fprintf_chk@plt+0x2ec>
 734:	add	r0, pc, r0
 738:	bl	470 <getenv@plt>
 73c:	cmp	r7, #0
 740:	mov	r5, r0
 744:	beq	75c <__fprintf_chk@plt+0x2a4>
 748:	ldr	r3, [pc, #88]	; 7a8 <__fprintf_chk@plt+0x2f0>
 74c:	mov	r1, r7
 750:	ldr	r3, [r4, r3]
 754:	ldr	r0, [r3]
 758:	bl	4c4 <__fprintf_chk@plt+0xc>
 75c:	cmp	r6, #0
 760:	beq	778 <__fprintf_chk@plt+0x2c0>
 764:	ldr	r3, [pc, #64]	; 7ac <__fprintf_chk@plt+0x2f4>
 768:	mov	r1, r6
 76c:	ldr	r3, [r4, r3]
 770:	ldr	r0, [r3]
 774:	bl	4c4 <__fprintf_chk@plt+0xc>
 778:	cmp	r5, #0
 77c:	popeq	{r4, r5, r6, r7, r8, pc}
 780:	ldr	r3, [pc, #40]	; 7b0 <__fprintf_chk@plt+0x2f8>
 784:	mov	r1, r5
 788:	ldr	r3, [r4, r3]
 78c:	pop	{r4, r5, r6, r7, r8, lr}
 790:	ldr	r0, [r3]
 794:	b	4c4 <__fprintf_chk@plt+0xc>
 798:			; <UNDEFINED> instruction: 0x000002b1
 79c:	andeq	r0, r1, r0, ror #17
 7a0:	andeq	r0, r0, r3, lsr #5
 7a4:	muleq	r0, sp, r2
 7a8:	andeq	r0, r0, ip, lsr r0
 7ac:	andeq	r0, r0, r4, asr #32
 7b0:	andeq	r0, r0, r8, asr #32
 7b4:	ldr	r3, [pc, #20]	; 7d0 <__fprintf_chk@plt+0x318>
 7b8:	ldr	r2, [pc, #20]	; 7d4 <__fprintf_chk@plt+0x31c>
 7bc:	add	r3, pc, r3
 7c0:	ldr	r2, [r3, r2]
 7c4:	cmp	r2, #0
 7c8:	bxeq	lr
 7cc:	b	488 <__gmon_start__@plt>
 7d0:	andeq	r0, r1, ip, lsr r8
 7d4:	andeq	r0, r0, r0, asr #32
 7d8:	ldr	r3, [pc, #52]	; 814 <__fprintf_chk@plt+0x35c>
 7dc:	ldr	r0, [pc, #52]	; 818 <__fprintf_chk@plt+0x360>
 7e0:	add	r3, pc, r3
 7e4:	add	r0, pc, r0
 7e8:	add	r3, r3, #3
 7ec:	sub	r3, r3, r0
 7f0:	cmp	r3, #6
 7f4:	ldr	r3, [pc, #32]	; 81c <__fprintf_chk@plt+0x364>
 7f8:	add	r3, pc, r3
 7fc:	bxls	lr
 800:	ldr	r2, [pc, #24]	; 820 <__fprintf_chk@plt+0x368>
 804:	ldr	r3, [r3, r2]
 808:	cmp	r3, #0
 80c:	bxeq	lr
 810:	bx	r3
 814:	andeq	r0, r1, r0, ror r8
 818:	andeq	r0, r1, ip, ror #16
 81c:	andeq	r0, r1, r0, lsl #16
 820:	andeq	r0, r0, r8, lsr r0
 824:	ldr	r1, [pc, #56]	; 864 <__fprintf_chk@plt+0x3ac>
 828:	ldr	r0, [pc, #56]	; 868 <__fprintf_chk@plt+0x3b0>
 82c:	add	r1, pc, r1
 830:	add	r0, pc, r0
 834:	sub	r1, r1, r0
 838:	ldr	r3, [pc, #44]	; 86c <__fprintf_chk@plt+0x3b4>
 83c:	asr	r1, r1, #2
 840:	add	r3, pc, r3
 844:	add	r1, r1, r1, lsr #31
 848:	asrs	r1, r1, #1
 84c:	bxeq	lr
 850:	ldr	r2, [pc, #24]	; 870 <__fprintf_chk@plt+0x3b8>
 854:	ldr	r3, [r3, r2]
 858:	cmp	r3, #0
 85c:	bxeq	lr
 860:	bx	r3
 864:	andeq	r0, r1, r4, lsr #16
 868:	andeq	r0, r1, r0, lsr #16
 86c:			; <UNDEFINED> instruction: 0x000107b8
 870:	andeq	r0, r0, r0, asr r0
 874:	ldr	r3, [pc, #76]	; 8c8 <__fprintf_chk@plt+0x410>
 878:	ldr	r2, [pc, #76]	; 8cc <__fprintf_chk@plt+0x414>
 87c:	add	r3, pc, r3
 880:	add	r2, pc, r2
 884:	ldrb	r3, [r3]
 888:	cmp	r3, #0
 88c:	bxne	lr
 890:	ldr	r3, [pc, #56]	; 8d0 <__fprintf_chk@plt+0x418>
 894:	push	{r4, lr}
 898:	ldr	r3, [r2, r3]
 89c:	cmp	r3, #0
 8a0:	beq	8b0 <__fprintf_chk@plt+0x3f8>
 8a4:	ldr	r3, [pc, #40]	; 8d4 <__fprintf_chk@plt+0x41c>
 8a8:	ldr	r0, [pc, r3]
 8ac:	bl	44c <__cxa_finalize@plt>
 8b0:	bl	7d8 <__fprintf_chk@plt+0x320>
 8b4:	ldr	r3, [pc, #28]	; 8d8 <__fprintf_chk@plt+0x420>
 8b8:	mov	r2, #1
 8bc:	add	r3, pc, r3
 8c0:	strb	r2, [r3]
 8c4:	pop	{r4, pc}
 8c8:	ldrdeq	r0, [r1], -r4
 8cc:	andeq	r0, r1, r8, ror r7
 8d0:	andeq	r0, r0, r4, lsr r0
 8d4:	andeq	r0, r1, r4, lsr #15
 8d8:	muleq	r1, r4, r7
 8dc:	ldr	r0, [pc, #56]	; 91c <__fprintf_chk@plt+0x464>
 8e0:	ldr	r3, [pc, #56]	; 920 <__fprintf_chk@plt+0x468>
 8e4:	add	r0, pc, r0
 8e8:	ldr	r2, [r0]
 8ec:	add	r3, pc, r3
 8f0:	cmp	r2, #0
 8f4:	bne	8fc <__fprintf_chk@plt+0x444>
 8f8:	b	824 <__fprintf_chk@plt+0x36c>
 8fc:	ldr	r2, [pc, #32]	; 924 <__fprintf_chk@plt+0x46c>
 900:	ldr	r3, [r3, r2]
 904:	cmp	r3, #0
 908:	beq	8f8 <__fprintf_chk@plt+0x440>
 90c:	push	{r4, lr}
 910:	blx	r3
 914:	pop	{r4, lr}
 918:	b	824 <__fprintf_chk@plt+0x36c>
 91c:	andeq	r0, r1, r0, lsr r6
 920:	andeq	r0, r1, ip, lsl #14
 924:	andeq	r0, r0, ip, asr #32

Disassembly of section .fini:

00000928 <.fini>:
 928:	push	{r3, lr}
 92c:	pop	{r3, pc}
