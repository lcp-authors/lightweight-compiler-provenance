
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000550 <_init>:
 550:	push	{r3, lr}
 554:	bl	630 <call_weak_fn>
 558:	pop	{r3, pc}

Disassembly of section .plt:

0000055c <.plt>:
 55c:	push	{lr}		; (str lr, [sp, #-4]!)
 560:	ldr	lr, [pc, #4]	; 56c <.plt+0x10>
 564:	add	lr, pc, lr
 568:	ldr	pc, [lr, #8]!
 56c:	.word	0x00010a94

00000570 <calloc@plt>:
 570:	add	ip, pc, #0, 12
 574:	add	ip, ip, #16, 20	; 0x10000
 578:	ldr	pc, [ip, #2708]!	; 0xa94

0000057c <strcmp@plt>:
 57c:	add	ip, pc, #0, 12
 580:	add	ip, ip, #16, 20	; 0x10000
 584:	ldr	pc, [ip, #2700]!	; 0xa8c

00000588 <__cxa_finalize@plt>:
 588:	add	ip, pc, #0, 12
 58c:	add	ip, ip, #16, 20	; 0x10000
 590:	ldr	pc, [ip, #2692]!	; 0xa84

00000594 <free@plt>:
 594:	add	ip, pc, #0, 12
 598:	add	ip, ip, #16, 20	; 0x10000
 59c:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a0 <ferror@plt>:
 5a0:	add	ip, pc, #0, 12
 5a4:	add	ip, ip, #16, 20	; 0x10000
 5a8:	ldr	pc, [ip, #2676]!	; 0xa74

000005ac <strdup@plt>:
 5ac:	add	ip, pc, #0, 12
 5b0:	add	ip, ip, #16, 20	; 0x10000
 5b4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b8 <pcap_close@plt>:
 5b8:	add	ip, pc, #0, 12
 5bc:	add	ip, ip, #16, 20	; 0x10000
 5c0:	ldr	pc, [ip, #2660]!	; 0xa64

000005c4 <strcasecmp@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #16, 20	; 0x10000
 5cc:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d0 <pcap_open_dead@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2644]!	; 0xa54

000005dc <pcap_dump@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e8 <__gmon_start__@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2628]!	; 0xa44

000005f4 <snprintf@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2620]!	; 0xa3c

00000600 <pcap_dump_file@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2612]!	; 0xa34

0000060c <memset@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2604]!	; 0xa2c

00000618 <pcap_dump_close@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2596]!	; 0xa24

00000624 <pcap_dump_open@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2588]!	; 0xa1c

Disassembly of section .text:

00000630 <call_weak_fn>:
 630:	ldr	r3, [pc, #20]	; 64c <call_weak_fn+0x1c>
 634:	ldr	r2, [pc, #20]	; 650 <call_weak_fn+0x20>
 638:	add	r3, pc, r3
 63c:	ldr	r2, [r3, r2]
 640:	cmp	r2, #0
 644:	bxeq	lr
 648:	b	5e8 <__gmon_start__@plt>
 64c:	.word	0x000109c0
 650:	.word	0x00000054

00000654 <deregister_tm_clones>:
 654:	ldr	r0, [pc, #44]	; 688 <deregister_tm_clones+0x34>
 658:	ldr	r3, [pc, #44]	; 68c <deregister_tm_clones+0x38>
 65c:	add	r0, pc, r0
 660:	add	r3, pc, r3
 664:	cmp	r3, r0
 668:	ldr	r3, [pc, #32]	; 690 <deregister_tm_clones+0x3c>
 66c:	add	r3, pc, r3
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <deregister_tm_clones+0x40>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00010a64
 68c:	.word	0x00010a60
 690:	.word	0x0001098c
 694:	.word	0x00000050

00000698 <register_tm_clones>:
 698:	ldr	r0, [pc, #56]	; 6d8 <register_tm_clones+0x40>
 69c:	ldr	r3, [pc, #56]	; 6dc <register_tm_clones+0x44>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	sub	r1, r3, r0
 6ac:	ldr	r3, [pc, #44]	; 6e0 <register_tm_clones+0x48>
 6b0:	asr	r1, r1, #2
 6b4:	add	r3, pc, r3
 6b8:	add	r1, r1, r1, lsr #31
 6bc:	asrs	r1, r1, #1
 6c0:	bxeq	lr
 6c4:	ldr	r2, [pc, #24]	; 6e4 <register_tm_clones+0x4c>
 6c8:	ldr	r3, [r3, r2]
 6cc:	cmp	r3, #0
 6d0:	bxeq	lr
 6d4:	bx	r3
 6d8:	.word	0x00010a20
 6dc:	.word	0x00010a1c
 6e0:	.word	0x00010944
 6e4:	.word	0x00000058

000006e8 <__do_global_dtors_aux>:
 6e8:	ldr	r3, [pc, #76]	; 73c <__do_global_dtors_aux+0x54>
 6ec:	ldr	r2, [pc, #76]	; 740 <__do_global_dtors_aux+0x58>
 6f0:	add	r3, pc, r3
 6f4:	add	r2, pc, r2
 6f8:	ldrb	r3, [r3]
 6fc:	cmp	r3, #0
 700:	bxne	lr
 704:	ldr	r3, [pc, #56]	; 744 <__do_global_dtors_aux+0x5c>
 708:	push	{r4, lr}
 70c:	ldr	r3, [r2, r3]
 710:	cmp	r3, #0
 714:	beq	724 <__do_global_dtors_aux+0x3c>
 718:	ldr	r3, [pc, #40]	; 748 <__do_global_dtors_aux+0x60>
 71c:	ldr	r0, [pc, r3]
 720:	bl	588 <__cxa_finalize@plt>
 724:	bl	654 <deregister_tm_clones>
 728:	ldr	r3, [pc, #28]	; 74c <__do_global_dtors_aux+0x64>
 72c:	mov	r2, #1
 730:	add	r3, pc, r3
 734:	strb	r2, [r3]
 738:	pop	{r4, pc}
 73c:	.word	0x000109d0
 740:	.word	0x00010904
 744:	.word	0x0000004c
 748:	.word	0x00010938
 74c:	.word	0x00010990

00000750 <frame_dummy>:
 750:	b	698 <register_tm_clones>

00000754 <dump_daq_acquire>:
 754:	push	{lr}		; (str lr, [sp, #-4]!)
 758:	str	r2, [r0, #16]
 75c:	ldr	r2, [sp, #4]
 760:	str	r2, [r0, #20]
 764:	ldr	r2, [r0]
 768:	str	r0, [sp, #4]
 76c:	ldr	r0, [r0, #4]
 770:	ldr	lr, [r2, #28]
 774:	ldr	r2, [pc, #12]	; 788 <dump_daq_acquire+0x34>
 778:	mov	ip, lr
 77c:	pop	{lr}		; (ldr lr, [sp], #4)
 780:	add	r2, pc, r2
 784:	bx	ip
 788:	.word	0x00000154

0000078c <dump_daq_set_filter>:
 78c:	ldr	r3, [r0]
 790:	ldr	r0, [r0, #4]
 794:	ldr	r3, [r3, #20]
 798:	bx	r3

0000079c <dump_daq_breakloop>:
 79c:	ldr	r3, [r0]
 7a0:	ldr	r0, [r0, #4]
 7a4:	ldr	r3, [r3, #36]	; 0x24
 7a8:	bx	r3

000007ac <dump_daq_check_status>:
 7ac:	ldr	r3, [r0]
 7b0:	ldr	r0, [r0, #4]
 7b4:	ldr	r3, [r3, #48]	; 0x30
 7b8:	bx	r3

000007bc <dump_daq_get_stats>:
 7bc:	push	{r4, r5, r6, r7, r8, lr}
 7c0:	mov	r4, r0
 7c4:	mov	r5, r1
 7c8:	ldr	r3, [r0]
 7cc:	ldr	r0, [r0, #4]
 7d0:	ldr	r3, [r3, #52]	; 0x34
 7d4:	blx	r3
 7d8:	add	r3, r4, #64	; 0x40
 7dc:	add	r2, r5, #40	; 0x28
 7e0:	add	r1, r4, #120	; 0x78
 7e4:	ldrd	r6, [r3], #8
 7e8:	cmp	r3, r1
 7ec:	strd	r6, [r2], #8
 7f0:	bne	7e4 <dump_daq_get_stats+0x28>
 7f4:	ldrd	r2, [r4, #56]	; 0x38
 7f8:	strd	r2, [r5, #32]
 7fc:	pop	{r4, r5, r6, r7, r8, pc}

00000800 <dump_daq_get_snaplen>:
 800:	ldr	r3, [r0]
 804:	ldr	r0, [r0, #4]
 808:	ldr	r3, [r3, #60]	; 0x3c
 80c:	bx	r3

00000810 <dump_daq_get_capabilities>:
 810:	push	{r4, lr}
 814:	ldr	r3, [r0]
 818:	ldr	r0, [r0, #4]
 81c:	ldr	r3, [r3, #64]	; 0x40
 820:	blx	r3
 824:	orr	r0, r0, #7
 828:	pop	{r4, pc}

0000082c <dump_daq_get_datalink_type>:
 82c:	ldr	r3, [r0]
 830:	ldr	r0, [r0, #4]
 834:	ldr	r3, [r3, #68]	; 0x44
 838:	bx	r3

0000083c <dump_daq_get_errbuf>:
 83c:	ldr	r3, [r0]
 840:	ldr	r0, [r0, #4]
 844:	ldr	r3, [r3, #72]	; 0x48
 848:	bx	r3

0000084c <dump_daq_set_errbuf>:
 84c:	ldr	r3, [r0]
 850:	cmp	r1, #0
 854:	ldr	r0, [r0, #4]
 858:	ldr	r3, [r3, #76]	; 0x4c
 85c:	ldreq	r1, [pc, #4]	; 868 <dump_daq_set_errbuf+0x1c>
 860:	addeq	r1, pc, r1
 864:	bx	r3
 868:	.word	0x0000059c

0000086c <dump_daq_get_device_index>:
 86c:	ldr	r3, [r0]
 870:	ldr	r0, [r0, #4]
 874:	ldr	r3, [r3, #80]	; 0x50
 878:	bx	r3

0000087c <dump_daq_reset_stats>:
 87c:	push	{r4, lr}
 880:	mov	r4, r0
 884:	ldr	r3, [r0]
 888:	ldr	r0, [r0, #4]
 88c:	ldr	r3, [r3, #56]	; 0x38
 890:	blx	r3
 894:	add	r0, r4, #24
 898:	mov	r2, #96	; 0x60
 89c:	pop	{r4, lr}
 8a0:	mov	r1, #0
 8a4:	b	60c <memset@plt>

000008a8 <dump_daq_shutdown>:
 8a8:	push	{r4, lr}
 8ac:	mov	r4, r0
 8b0:	ldr	r3, [r0]
 8b4:	ldr	r0, [r0, #4]
 8b8:	ldr	r3, [r3, #44]	; 0x2c
 8bc:	blx	r3
 8c0:	ldr	r0, [r4, #12]
 8c4:	cmp	r0, #0
 8c8:	beq	8d0 <dump_daq_shutdown+0x28>
 8cc:	bl	594 <free@plt>
 8d0:	mov	r0, r4
 8d4:	pop	{r4, lr}
 8d8:	b	594 <free@plt>

000008dc <daq_dump_capture>:
 8dc:	push	{r4, r5, r6, r7, r8, lr}
 8e0:	mov	r4, r0
 8e4:	mov	r6, r1
 8e8:	mov	r7, r2
 8ec:	ldr	r3, [r0, #16]
 8f0:	ldr	r0, [r0, #20]
 8f4:	blx	r3
 8f8:	cmp	r0, #6
 8fc:	movls	r5, r0
 900:	movhi	r5, #1
 904:	add	r2, r4, r5, lsl #3
 908:	ldr	r3, [r2, #64]	; 0x40
 90c:	ldr	r1, [r2, #68]	; 0x44
 910:	adds	r3, r3, #1
 914:	str	r3, [r2, #64]	; 0x40
 918:	adc	r1, r1, #0
 91c:	ldr	r3, [pc, #40]	; 94c <daq_dump_capture+0x70>
 920:	str	r1, [r2, #68]	; 0x44
 924:	add	r3, pc, r3
 928:	ldr	r3, [r3, r5, lsl #2]
 92c:	cmp	r3, #0
 930:	beq	944 <daq_dump_capture+0x68>
 934:	mov	r2, r7
 938:	mov	r1, r6
 93c:	ldr	r0, [r4, #8]
 940:	bl	5dc <pcap_dump@plt>
 944:	mov	r0, r5
 948:	pop	{r4, r5, r6, r7, r8, pc}
 94c:	.word	0x000003d8

00000950 <dump_daq_start>:
 950:	push	{r4, r5, r6, r7, r8, lr}
 954:	mov	r4, r0
 958:	ldr	r5, [r0, #12]
 95c:	cmp	r5, #0
 960:	ldreq	r5, [pc, #168]	; a10 <dump_daq_start+0xc0>
 964:	addeq	r5, pc, r5
 968:	ldr	r3, [r4]
 96c:	ldr	r0, [r4, #4]
 970:	ldr	r3, [r3, #24]
 974:	blx	r3
 978:	subs	r6, r0, #0
 97c:	bne	9fc <dump_daq_start+0xac>
 980:	ldr	r3, [r4]
 984:	ldr	r0, [r4, #4]
 988:	ldr	r3, [r3, #68]	; 0x44
 98c:	blx	r3
 990:	ldr	r3, [r4]
 994:	mov	r7, r0
 998:	ldr	r0, [r4, #4]
 99c:	ldr	r3, [r3, #60]	; 0x3c
 9a0:	blx	r3
 9a4:	mov	r1, r0
 9a8:	mov	r0, r7
 9ac:	bl	5d0 <pcap_open_dead@plt>
 9b0:	subs	r7, r0, #0
 9b4:	streq	r7, [r4, #8]
 9b8:	beq	9d0 <dump_daq_start+0x80>
 9bc:	mov	r1, r5
 9c0:	bl	624 <pcap_dump_open@plt>
 9c4:	cmp	r0, #0
 9c8:	str	r0, [r4, #8]
 9cc:	bne	a04 <dump_daq_start+0xb4>
 9d0:	ldr	r3, [r4]
 9d4:	mvn	r6, #0
 9d8:	ldr	r0, [r4, #4]
 9dc:	ldr	r3, [r3, #40]	; 0x28
 9e0:	blx	r3
 9e4:	ldr	r1, [pc, #40]	; a14 <dump_daq_start+0xc4>
 9e8:	ldr	r3, [r4]
 9ec:	ldr	r0, [r4, #4]
 9f0:	add	r1, pc, r1
 9f4:	ldr	r3, [r3, #76]	; 0x4c
 9f8:	blx	r3
 9fc:	mov	r0, r6
 a00:	pop	{r4, r5, r6, r7, r8, pc}
 a04:	mov	r0, r7
 a08:	bl	5b8 <pcap_close@plt>
 a0c:	b	9fc <dump_daq_start+0xac>
 a10:	.word	0x000003c8
 a14:	.word	0x0000034c

00000a18 <dump_daq_stop>:
 a18:	push	{r4, r5, r6, lr}
 a1c:	mov	r4, r0
 a20:	ldr	r3, [r0]
 a24:	ldr	r0, [r0, #4]
 a28:	ldr	r3, [r3, #40]	; 0x28
 a2c:	blx	r3
 a30:	subs	r5, r0, #0
 a34:	bne	a4c <dump_daq_stop+0x34>
 a38:	ldr	r0, [r4, #8]
 a3c:	cmp	r0, #0
 a40:	beq	a4c <dump_daq_stop+0x34>
 a44:	bl	618 <pcap_dump_close@plt>
 a48:	str	r5, [r4, #8]
 a4c:	mov	r0, r5
 a50:	pop	{r4, r5, r6, pc}

00000a54 <dump_daq_inject>:
 a54:	push	{r4, r5, r6, lr}
 a58:	mov	lr, r1
 a5c:	mov	r4, r0
 a60:	mov	r5, r3
 a64:	mov	r6, r2
 a68:	sub	sp, sp, #56	; 0x38
 a6c:	ldm	lr!, {r0, r1, r2, r3}
 a70:	add	ip, sp, #4
 a74:	stmia	ip!, {r0, r1, r2, r3}
 a78:	ldm	lr!, {r0, r1, r2, r3}
 a7c:	str	r5, [sp, #12]
 a80:	str	r5, [sp, #16]
 a84:	stmia	ip!, {r0, r1, r2, r3}
 a88:	ldm	lr!, {r0, r1, r2, r3}
 a8c:	stmia	ip!, {r0, r1, r2, r3}
 a90:	mov	r2, r6
 a94:	add	r1, sp, #4
 a98:	ldr	r3, [lr]
 a9c:	ldr	r0, [r4, #8]
 aa0:	str	r3, [ip]
 aa4:	bl	5dc <pcap_dump@plt>
 aa8:	ldr	r0, [r4, #8]
 aac:	bl	600 <pcap_dump_file@plt>
 ab0:	bl	5a0 <ferror@plt>
 ab4:	cmp	r0, #0
 ab8:	beq	ae0 <dump_daq_inject+0x8c>
 abc:	ldr	r1, [pc, #56]	; afc <dump_daq_inject+0xa8>
 ac0:	ldr	r3, [r4]
 ac4:	ldr	r0, [r4, #4]
 ac8:	add	r1, pc, r1
 acc:	ldr	r3, [r3, #76]	; 0x4c
 ad0:	blx	r3
 ad4:	mvn	r0, #0
 ad8:	add	sp, sp, #56	; 0x38
 adc:	pop	{r4, r5, r6, pc}
 ae0:	ldr	r3, [r4, #56]	; 0x38
 ae4:	ldr	r2, [r4, #60]	; 0x3c
 ae8:	adds	r3, r3, #1
 aec:	adc	r2, r2, #0
 af0:	str	r3, [r4, #56]	; 0x38
 af4:	str	r2, [r4, #60]	; 0x3c
 af8:	b	ad8 <dump_daq_inject+0x84>
 afc:	.word	0x00000289

00000b00 <dump_daq_initialize>:
 b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b04:	mov	r5, r0
 b08:	sub	sp, sp, #44	; 0x2c
 b0c:	mov	sl, r1
 b10:	mov	r0, #1
 b14:	mov	r1, #120	; 0x78
 b18:	mov	r8, r2
 b1c:	mov	r9, r3
 b20:	bl	570 <calloc@plt>
 b24:	mov	ip, r5
 b28:	mov	r4, r0
 b2c:	ldr	r7, [r5, #24]
 b30:	ldm	ip!, {r0, r1, r2, r3}
 b34:	add	lr, sp, #12
 b38:	cmp	r4, #0
 b3c:	stmia	lr!, {r0, r1, r2, r3}
 b40:	ldm	ip, {r0, r1, r2}
 b44:	stm	lr, {r0, r1, r2}
 b48:	bne	b7c <dump_daq_initialize+0x7c>
 b4c:	ldr	r3, [pc, #384]	; cd4 <dump_daq_initialize+0x1d4>
 b50:	mov	r1, r9
 b54:	mov	r0, r8
 b58:	mvn	r5, #1
 b5c:	ldr	r2, [pc, #372]	; cd8 <dump_daq_initialize+0x1d8>
 b60:	add	r3, pc, r3
 b64:	add	r3, r3, #28
 b68:	add	r2, pc, r2
 b6c:	bl	5f4 <snprintf@plt>
 b70:	mov	r0, r5
 b74:	add	sp, sp, #44	; 0x2c
 b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 b7c:	cmp	r7, #0
 b80:	beq	b90 <dump_daq_initialize+0x90>
 b84:	ldr	r3, [r7, #12]
 b88:	tst	r3, #1
 b8c:	bne	bc0 <dump_daq_initialize+0xc0>
 b90:	ldr	r3, [pc, #324]	; cdc <dump_daq_initialize+0x1dc>
 b94:	ldr	r2, [pc, #324]	; ce0 <dump_daq_initialize+0x1e0>
 b98:	add	r3, pc, r3
 b9c:	add	r3, r3, #28
 ba0:	add	r2, pc, r2
 ba4:	mov	r1, r9
 ba8:	mov	r0, r8
 bac:	bl	5f4 <snprintf@plt>
 bb0:	mov	r0, r4
 bb4:	mvn	r5, #0
 bb8:	bl	594 <free@plt>
 bbc:	b	b70 <dump_daq_initialize+0x70>
 bc0:	ldr	r3, [pc, #284]	; ce4 <dump_daq_initialize+0x1e4>
 bc4:	mov	r6, #0
 bc8:	ldr	fp, [pc, #280]	; ce8 <dump_daq_initialize+0x1e8>
 bcc:	ldr	r5, [sp, #32]
 bd0:	add	r3, pc, r3
 bd4:	add	fp, pc, fp
 bd8:	str	r3, [sp]
 bdc:	cmp	r5, #0
 be0:	bne	c78 <dump_daq_initialize+0x178>
 be4:	cmp	r6, #0
 be8:	beq	c44 <dump_daq_initialize+0x144>
 bec:	ldr	r1, [pc, #248]	; cec <dump_daq_initialize+0x1ec>
 bf0:	mov	r0, r6
 bf4:	add	r1, pc, r1
 bf8:	bl	5c4 <strcasecmp@plt>
 bfc:	cmp	r0, #0
 c00:	moveq	r3, #2
 c04:	beq	c40 <dump_daq_initialize+0x140>
 c08:	ldr	r1, [pc, #224]	; cf0 <dump_daq_initialize+0x1f0>
 c0c:	mov	r0, r6
 c10:	add	r1, pc, r1
 c14:	bl	5c4 <strcasecmp@plt>
 c18:	cmp	r0, #0
 c1c:	streq	r5, [sp, #24]
 c20:	beq	c44 <dump_daq_initialize+0x144>
 c24:	ldr	r1, [pc, #200]	; cf4 <dump_daq_initialize+0x1f4>
 c28:	mov	r0, r6
 c2c:	add	r1, pc, r1
 c30:	bl	5c4 <strcasecmp@plt>
 c34:	cmp	r0, #0
 c38:	bne	cc4 <dump_daq_initialize+0x1c4>
 c3c:	mov	r3, #1
 c40:	str	r3, [sp, #24]
 c44:	mov	r3, r9
 c48:	mov	r2, r8
 c4c:	ldr	r5, [r7, #16]
 c50:	add	r1, r4, #4
 c54:	add	r0, sp, #12
 c58:	blx	r5
 c5c:	subs	r5, r0, #0
 c60:	streq	r7, [r4]
 c64:	streq	r4, [sl]
 c68:	beq	b70 <dump_daq_initialize+0x70>
 c6c:	mov	r0, r4
 c70:	bl	594 <free@plt>
 c74:	b	b70 <dump_daq_initialize+0x70>
 c78:	ldr	r3, [r5]
 c7c:	ldr	r1, [sp]
 c80:	mov	r0, r3
 c84:	str	r3, [sp, #4]
 c88:	bl	57c <strcmp@plt>
 c8c:	cmp	r0, #0
 c90:	ldr	r3, [sp, #4]
 c94:	ldreq	r6, [r5, #4]
 c98:	beq	cbc <dump_daq_initialize+0x1bc>
 c9c:	mov	r1, fp
 ca0:	mov	r0, r3
 ca4:	bl	57c <strcmp@plt>
 ca8:	cmp	r0, #0
 cac:	bne	cbc <dump_daq_initialize+0x1bc>
 cb0:	ldr	r0, [r5, #4]
 cb4:	bl	5ac <strdup@plt>
 cb8:	str	r0, [r4, #12]
 cbc:	ldr	r5, [r5, #8]
 cc0:	b	bdc <dump_daq_initialize+0xdc>
 cc4:	ldr	r2, [pc, #44]	; cf8 <dump_daq_initialize+0x1f8>
 cc8:	mov	r3, r6
 ccc:	add	r2, pc, r2
 cd0:	b	ba4 <dump_daq_initialize+0xa4>
 cd4:	.word	0x0000019c
 cd8:	.word	0x00000209
 cdc:	.word	0x00000164
 ce0:	.word	0x00000202
 ce4:	.word	0x000001f3
 ce8:	.word	0x00000178
 cec:	.word	0x000001d9
 cf0:	.word	0x000001c7
 cf4:	.word	0x000001b3
 cf8:	.word	0x0000011a

Disassembly of section .fini:

00000cfc <_fini>:
 cfc:	push	{r3, lr}
 d00:	pop	{r3, pc}
