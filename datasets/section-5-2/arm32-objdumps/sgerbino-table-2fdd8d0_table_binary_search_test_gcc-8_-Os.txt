
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

000128e0 <.init>:
   128e0:	push	{r3, lr}
   128e4:	bl	12b88 <_start@@Base+0x3c>
   128e8:	pop	{r3, pc}

Disassembly of section .plt:

000128ec <strcmp@plt-0x14>:
   128ec:	push	{lr}		; (str lr, [sp, #-4]!)
   128f0:	ldr	lr, [pc, #4]	; 128fc <strcmp@plt-0x4>
   128f4:	add	lr, pc, lr
   128f8:	ldr	pc, [lr, #8]!
   128fc:	andeq	r3, r1, r4, lsl #14

00012900 <strcmp@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #77824	; 0x13000
   12908:	ldr	pc, [ip, #1796]!	; 0x704

0001290c <printf@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #77824	; 0x13000
   12914:	ldr	pc, [ip, #1788]!	; 0x6fc

00012918 <free@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #77824	; 0x13000
   12920:	ldr	pc, [ip, #1780]!	; 0x6f4

00012924 <realloc@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #77824	; 0x13000
   1292c:	ldr	pc, [ip, #1772]!	; 0x6ec

00012930 <strcpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #77824	; 0x13000
   12938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001293c <malloc@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #77824	; 0x13000
   12944:	ldr	pc, [ip, #1756]!	; 0x6dc

00012948 <__libc_start_main@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #77824	; 0x13000
   12950:	ldr	pc, [ip, #1748]!	; 0x6d4

00012954 <__gmon_start__@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #77824	; 0x13000
   1295c:	ldr	pc, [ip, #1740]!	; 0x6cc

00012960 <strlen@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #77824	; 0x13000
   12968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001296c <snprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #77824	; 0x13000
   12974:	ldr	pc, [ip, #1724]!	; 0x6bc

00012978 <__isoc99_sscanf@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #77824	; 0x13000
   12980:	ldr	pc, [ip, #1716]!	; 0x6b4

00012984 <abort@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #77824	; 0x13000
   1298c:	ldr	pc, [ip, #1708]!	; 0x6ac

Disassembly of section .text:

00012990 <main@@Base>:
   12990:	push	{r4, r5, r6, r7, r8, lr}
   12994:	mov	r4, #0
   12998:	mov	r8, #10
   1299c:	mov	r5, r4
   129a0:	vpush	{d8}
   129a4:	sub	sp, sp, #64	; 0x40
   129a8:	add	r0, sp, #8
   129ac:	vldr	s16, [pc, #372]	; 12b28 <main@@Base+0x198>
   129b0:	bl	12c3c <table_init@@Base>
   129b4:	vldr	s17, [pc, #368]	; 12b2c <main@@Base+0x19c>
   129b8:	mov	r2, #0
   129bc:	add	r0, sp, #8
   129c0:	ldr	r1, [pc, #364]	; 12b34 <main@@Base+0x1a4>
   129c4:	bl	135ac <table_add_column@@Base>
   129c8:	mov	r6, r0
   129cc:	mov	r2, #16
   129d0:	ldr	r1, [pc, #352]	; 12b38 <main@@Base+0x1a8>
   129d4:	add	r0, sp, #8
   129d8:	bl	135ac <table_add_column@@Base>
   129dc:	mov	r7, r0
   129e0:	add	r0, sp, #8
   129e4:	bl	14a18 <table_add_row@@Base>
   129e8:	mov	r1, r4
   129ec:	mov	r3, r5
   129f0:	mov	r2, r6
   129f4:	add	r0, sp, #8
   129f8:	bl	14ec8 <table_set_int@@Base>
   129fc:	mov	r1, r4
   12a00:	vmov.f32	s0, s16
   12a04:	mov	r2, r7
   12a08:	add	r0, sp, #8
   12a0c:	add	r4, r4, #1
   12a10:	bl	150b8 <table_set_float@@Base>
   12a14:	cmp	r4, #100	; 0x64
   12a18:	bne	12b08 <main@@Base+0x178>
   12a1c:	mov	r1, r6
   12a20:	mov	r3, #0
   12a24:	mov	r2, #4
   12a28:	add	r0, sp, #8
   12a2c:	bl	14318 <table_sorted_find_int@@Base>
   12a30:	mov	r5, r0
   12a34:	mov	r1, r6
   12a38:	mov	r3, #1
   12a3c:	mov	r2, #4
   12a40:	add	r0, sp, #8
   12a44:	bl	14318 <table_sorted_find_int@@Base>
   12a48:	cmp	r5, #40	; 0x28
   12a4c:	mov	r6, r0
   12a50:	moveq	r4, #0
   12a54:	beq	12a68 <main@@Base+0xd8>
   12a58:	mov	r1, r5
   12a5c:	ldr	r0, [pc, #216]	; 12b3c <main@@Base+0x1ac>
   12a60:	mvn	r4, #0
   12a64:	bl	1290c <printf@plt>
   12a68:	cmp	r6, #49	; 0x31
   12a6c:	beq	12a80 <main@@Base+0xf0>
   12a70:	mov	r1, r6
   12a74:	ldr	r0, [pc, #196]	; 12b40 <main@@Base+0x1b0>
   12a78:	mvn	r4, #0
   12a7c:	bl	1290c <printf@plt>
   12a80:	mov	r3, r5
   12a84:	mov	r2, #0
   12a88:	vldr	s0, [pc, #160]	; 12b30 <main@@Base+0x1a0>
   12a8c:	mov	r1, r7
   12a90:	add	r0, sp, #8
   12a94:	str	r6, [sp]
   12a98:	bl	147c4 <table_sorted_subset_find_float@@Base>
   12a9c:	mov	r8, r0
   12aa0:	mov	r3, r5
   12aa4:	vldr	s0, [pc, #132]	; 12b30 <main@@Base+0x1a0>
   12aa8:	mov	r2, #1
   12aac:	mov	r1, r7
   12ab0:	str	r6, [sp]
   12ab4:	add	r0, sp, #8
   12ab8:	bl	147c4 <table_sorted_subset_find_float@@Base>
   12abc:	cmp	r8, #42	; 0x2a
   12ac0:	mov	r5, r0
   12ac4:	beq	12ad8 <main@@Base+0x148>
   12ac8:	mov	r1, r8
   12acc:	ldr	r0, [pc, #112]	; 12b44 <main@@Base+0x1b4>
   12ad0:	mvn	r4, #0
   12ad4:	bl	1290c <printf@plt>
   12ad8:	cmp	r5, #43	; 0x2b
   12adc:	beq	12af0 <main@@Base+0x160>
   12ae0:	mov	r1, r5
   12ae4:	ldr	r0, [pc, #92]	; 12b48 <main@@Base+0x1b8>
   12ae8:	mvn	r4, #0
   12aec:	bl	1290c <printf@plt>
   12af0:	add	r0, sp, #8
   12af4:	bl	12c94 <table_destroy@@Base>
   12af8:	mov	r0, r4
   12afc:	add	sp, sp, #64	; 0x40
   12b00:	vpop	{d8}
   12b04:	pop	{r4, r5, r6, r7, r8, pc}
   12b08:	udiv	r3, r4, r8
   12b0c:	mls	r3, r8, r3, r4
   12b10:	cmp	r3, #0
   12b14:	addeq	r5, r5, #1
   12b18:	vldreq	s16, [pc, #8]	; 12b28 <main@@Base+0x198>
   12b1c:	tst	r4, #1
   12b20:	vaddeq.f32	s16, s16, s17
   12b24:	b	129e0 <main@@Base+0x50>
   12b28:	andeq	r0, r0, r0
   12b2c:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12b30:	svccc	0x00000000
   12b34:	andeq	r5, r1, r4, lsl fp
   12b38:	andeq	r5, r1, r6, lsl fp
   12b3c:	andeq	r5, r1, r8, lsl fp
   12b40:	andeq	r5, r1, r0, asr fp
   12b44:	andeq	r5, r1, r7, lsl #23
   12b48:	andeq	r5, r1, r5, asr #23

00012b4c <_start@@Base>:
   12b4c:	mov	fp, #0
   12b50:	mov	lr, #0
   12b54:	pop	{r1}		; (ldr r1, [sp], #4)
   12b58:	mov	r2, sp
   12b5c:	push	{r2}		; (str r2, [sp, #-4]!)
   12b60:	push	{r0}		; (str r0, [sp, #-4]!)
   12b64:	ldr	ip, [pc, #16]	; 12b7c <_start@@Base+0x30>
   12b68:	push	{ip}		; (str ip, [sp, #-4]!)
   12b6c:	ldr	r0, [pc, #12]	; 12b80 <_start@@Base+0x34>
   12b70:	ldr	r3, [pc, #12]	; 12b84 <_start@@Base+0x38>
   12b74:	bl	12948 <__libc_start_main@plt>
   12b78:	bl	12984 <abort@plt>
   12b7c:	andeq	r5, r1, r4, lsl #22
   12b80:	muleq	r1, r0, r9
   12b84:	andeq	r5, r1, r4, lsr #21
   12b88:	ldr	r3, [pc, #20]	; 12ba4 <_start@@Base+0x58>
   12b8c:	ldr	r2, [pc, #20]	; 12ba8 <_start@@Base+0x5c>
   12b90:	add	r3, pc, r3
   12b94:	ldr	r2, [r3, r2]
   12b98:	cmp	r2, #0
   12b9c:	bxeq	lr
   12ba0:	b	12954 <__gmon_start__@plt>
   12ba4:	andeq	r3, r1, r8, ror #8
   12ba8:	andeq	r0, r0, ip, lsr r0
   12bac:	ldr	r0, [pc, #24]	; 12bcc <_start@@Base+0x80>
   12bb0:	ldr	r3, [pc, #24]	; 12bd0 <_start@@Base+0x84>
   12bb4:	cmp	r3, r0
   12bb8:	bxeq	lr
   12bbc:	ldr	r3, [pc, #16]	; 12bd4 <_start@@Base+0x88>
   12bc0:	cmp	r3, #0
   12bc4:	bxeq	lr
   12bc8:	bx	r3
   12bcc:	andeq	r6, r2, r8, asr #32
   12bd0:	andeq	r6, r2, r8, asr #32
   12bd4:	andeq	r0, r0, r0
   12bd8:	ldr	r0, [pc, #36]	; 12c04 <_start@@Base+0xb8>
   12bdc:	ldr	r1, [pc, #36]	; 12c08 <_start@@Base+0xbc>
   12be0:	sub	r1, r1, r0
   12be4:	asr	r1, r1, #2
   12be8:	add	r1, r1, r1, lsr #31
   12bec:	asrs	r1, r1, #1
   12bf0:	bxeq	lr
   12bf4:	ldr	r3, [pc, #16]	; 12c0c <_start@@Base+0xc0>
   12bf8:	cmp	r3, #0
   12bfc:	bxeq	lr
   12c00:	bx	r3
   12c04:	andeq	r6, r2, r8, asr #32
   12c08:	andeq	r6, r2, r8, asr #32
   12c0c:	andeq	r0, r0, r0
   12c10:	push	{r4, lr}
   12c14:	ldr	r4, [pc, #24]	; 12c34 <_start@@Base+0xe8>
   12c18:	ldrb	r3, [r4]
   12c1c:	cmp	r3, #0
   12c20:	popne	{r4, pc}
   12c24:	bl	12bac <_start@@Base+0x60>
   12c28:	mov	r3, #1
   12c2c:	strb	r3, [r4]
   12c30:	pop	{r4, pc}
   12c34:	andeq	r6, r2, r8, asr #32
   12c38:	b	12bd8 <_start@@Base+0x8c>

00012c3c <table_init@@Base>:
   12c3c:	mov	r3, #0
   12c40:	mov	r2, #10
   12c44:	mov	r1, #20
   12c48:	str	r3, [r0]
   12c4c:	str	r3, [r0, #4]
   12c50:	strd	r2, [r0, #8]
   12c54:	str	r3, [r0, #16]
   12c58:	str	r3, [r0, #20]
   12c5c:	str	r1, [r0, #24]
   12c60:	str	r3, [r0, #28]
   12c64:	str	r3, [r0, #32]
   12c68:	str	r3, [r0, #36]	; 0x24
   12c6c:	str	r3, [r0, #40]	; 0x28
   12c70:	str	r3, [r0, #44]	; 0x2c
   12c74:	strd	r2, [r0, #48]	; 0x30
   12c78:	bx	lr

00012c7c <table_new@@Base>:
   12c7c:	push	{r4, lr}
   12c80:	mov	r0, #56	; 0x38
   12c84:	bl	1293c <malloc@plt>
   12c88:	mov	r4, r0
   12c8c:	bl	12c3c <table_init@@Base>
   12c90:	pop	{r4, pc}

00012c94 <table_destroy@@Base>:
   12c94:	push	{r4, r5, r6, lr}
   12c98:	subs	r4, r0, #0
   12c9c:	popeq	{r4, r5, r6, pc}
   12ca0:	mvn	r2, #0
   12ca4:	mov	r3, #64	; 0x40
   12ca8:	mov	r1, r2
   12cac:	mov	r5, #0
   12cb0:	bl	13468 <table_notify@@Base>
   12cb4:	mov	r0, r4
   12cb8:	bl	14a10 <table_get_row_length@@Base>
   12cbc:	mov	r6, r0
   12cc0:	cmp	r6, r5
   12cc4:	bgt	12d34 <table_destroy@@Base+0xa0>
   12cc8:	ldr	r0, [r4, #16]
   12ccc:	cmp	r0, #0
   12cd0:	beq	12cd8 <table_destroy@@Base+0x44>
   12cd4:	bl	12918 <free@plt>
   12cd8:	mov	r0, r4
   12cdc:	mov	r5, #0
   12ce0:	bl	13540 <table_get_column_length@@Base>
   12ce4:	mov	r6, r0
   12ce8:	cmp	r6, r5
   12cec:	bgt	12d48 <table_destroy@@Base+0xb4>
   12cf0:	ldr	r0, [r4]
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d00 <table_destroy@@Base+0x6c>
   12cfc:	bl	12918 <free@plt>
   12d00:	ldr	r0, [r4, #36]	; 0x24
   12d04:	cmp	r0, #0
   12d08:	beq	12d10 <table_destroy@@Base+0x7c>
   12d0c:	bl	12918 <free@plt>
   12d10:	ldr	r0, [r4, #40]	; 0x28
   12d14:	cmp	r0, #0
   12d18:	beq	12d20 <table_destroy@@Base+0x8c>
   12d1c:	bl	12918 <free@plt>
   12d20:	ldr	r0, [r4, #44]	; 0x2c
   12d24:	cmp	r0, #0
   12d28:	popeq	{r4, r5, r6, pc}
   12d2c:	pop	{r4, r5, r6, lr}
   12d30:	b	12918 <free@plt>
   12d34:	mov	r1, r5
   12d38:	mov	r0, r4
   12d3c:	bl	149c0 <table_row_destroy@@Base>
   12d40:	add	r5, r5, #1
   12d44:	b	12cc0 <table_destroy@@Base+0x2c>
   12d48:	mov	r1, r5
   12d4c:	mov	r0, r4
   12d50:	bl	13524 <table_column_destroy@@Base>
   12d54:	add	r5, r5, #1
   12d58:	b	12ce8 <table_destroy@@Base+0x54>

00012d5c <table_delete@@Base>:
   12d5c:	push	{r4, lr}
   12d60:	mov	r4, r0
   12d64:	bl	12c94 <table_destroy@@Base>
   12d68:	mov	r0, r4
   12d6c:	pop	{r4, lr}
   12d70:	b	12918 <free@plt>

00012d74 <table_dupe@@Base>:
   12d74:	push	{r4, r5, r6, r7, r8, r9, lr}
   12d78:	sub	sp, sp, #20
   12d7c:	mov	r6, r0
   12d80:	mov	r4, #0
   12d84:	bl	14a10 <table_get_row_length@@Base>
   12d88:	mov	r9, r0
   12d8c:	mov	r0, r6
   12d90:	bl	13540 <table_get_column_length@@Base>
   12d94:	mov	r8, r0
   12d98:	bl	12c7c <table_new@@Base>
   12d9c:	mov	r7, r0
   12da0:	cmp	r4, r8
   12da4:	blt	12dc0 <table_dupe@@Base+0x4c>
   12da8:	mov	r5, #0
   12dac:	cmp	r5, r9
   12db0:	mov	r0, r7
   12db4:	blt	12df4 <table_dupe@@Base+0x80>
   12db8:	add	sp, sp, #20
   12dbc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12dc0:	mov	r1, r4
   12dc4:	mov	r0, r6
   12dc8:	bl	13804 <table_get_column_name@@Base>
   12dcc:	mov	r5, r0
   12dd0:	mov	r1, r4
   12dd4:	mov	r0, r6
   12dd8:	add	r4, r4, #1
   12ddc:	bl	13598 <table_get_column_data_type@@Base>
   12de0:	mov	r2, r0
   12de4:	mov	r1, r5
   12de8:	mov	r0, r7
   12dec:	bl	135ac <table_add_column@@Base>
   12df0:	b	12da0 <table_dupe@@Base+0x2c>
   12df4:	mov	r4, #0
   12df8:	bl	14a18 <table_add_row@@Base>
   12dfc:	cmp	r4, r8
   12e00:	addge	r5, r5, #1
   12e04:	bge	12dac <table_dupe@@Base+0x38>
   12e08:	mov	r1, r4
   12e0c:	mov	r0, r6
   12e10:	bl	13598 <table_get_column_data_type@@Base>
   12e14:	cmp	r0, #23
   12e18:	ldrls	pc, [pc, r0, lsl #2]
   12e1c:	b	12ea4 <table_dupe@@Base+0x130>
   12e20:	andeq	r2, r1, r0, lsl #29
   12e24:	andeq	r2, r1, ip, lsr #29
   12e28:	ldrdeq	r2, [r1], -r4
   12e2c:	strdeq	r2, [r1], -ip
   12e30:	andeq	r2, r1, r4, lsr #30
   12e34:	andeq	r2, r1, ip, asr #30
   12e38:	andeq	r2, r1, r4, ror pc
   12e3c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12e40:	andeq	r2, r1, r4, asr #31
   12e44:	andeq	r2, r1, ip, ror #31
   12e48:	andeq	r3, r1, r4, lsl r0
   12e4c:	andeq	r3, r1, ip, lsr r0
   12e50:	andeq	r3, r1, r4, rrx
   12e54:	andeq	r3, r1, ip, lsl #1
   12e58:	strheq	r3, [r1], -r4
   12e5c:	ldrdeq	r3, [r1], -ip
   12e60:	andeq	r3, r1, ip, lsr #2
   12e64:	andeq	r3, r1, r0, asr r1
   12e68:	andeq	r3, r1, r4, ror r1
   12e6c:	andeq	r3, r1, r0, asr #3
   12e70:	andeq	r3, r1, r8, ror #3
   12e74:	andeq	r3, r1, r4, lsl #2
   12e78:	muleq	r1, r8, r1
   12e7c:	andeq	r3, r1, r0, lsl r2
   12e80:	mov	r2, r4
   12e84:	mov	r1, r5
   12e88:	mov	r0, r6
   12e8c:	bl	148a8 <table_get_int@@Base>
   12e90:	mov	r3, r0
   12e94:	mov	r2, r4
   12e98:	mov	r1, r5
   12e9c:	mov	r0, r7
   12ea0:	bl	14ec8 <table_set_int@@Base>
   12ea4:	add	r4, r4, #1
   12ea8:	b	12dfc <table_dupe@@Base+0x88>
   12eac:	mov	r2, r4
   12eb0:	mov	r1, r5
   12eb4:	mov	r0, r6
   12eb8:	bl	148b8 <table_get_uint@@Base>
   12ebc:	mov	r3, r0
   12ec0:	mov	r2, r4
   12ec4:	mov	r1, r5
   12ec8:	mov	r0, r7
   12ecc:	bl	14ee8 <table_set_uint@@Base>
   12ed0:	b	12ea4 <table_dupe@@Base+0x130>
   12ed4:	mov	r2, r4
   12ed8:	mov	r1, r5
   12edc:	mov	r0, r6
   12ee0:	bl	148c8 <table_get_int8@@Base>
   12ee4:	mov	r3, r0
   12ee8:	mov	r2, r4
   12eec:	mov	r1, r5
   12ef0:	mov	r0, r7
   12ef4:	bl	14f08 <table_set_int8@@Base>
   12ef8:	b	12ea4 <table_dupe@@Base+0x130>
   12efc:	mov	r2, r4
   12f00:	mov	r1, r5
   12f04:	mov	r0, r6
   12f08:	bl	148d8 <table_get_uint8@@Base>
   12f0c:	mov	r3, r0
   12f10:	mov	r2, r4
   12f14:	mov	r1, r5
   12f18:	mov	r0, r7
   12f1c:	bl	14f28 <table_set_uint8@@Base>
   12f20:	b	12ea4 <table_dupe@@Base+0x130>
   12f24:	mov	r2, r4
   12f28:	mov	r1, r5
   12f2c:	mov	r0, r6
   12f30:	bl	148e8 <table_get_int16@@Base>
   12f34:	mov	r3, r0
   12f38:	mov	r2, r4
   12f3c:	mov	r1, r5
   12f40:	mov	r0, r7
   12f44:	bl	14f48 <table_set_int16@@Base>
   12f48:	b	12ea4 <table_dupe@@Base+0x130>
   12f4c:	mov	r2, r4
   12f50:	mov	r1, r5
   12f54:	mov	r0, r6
   12f58:	bl	148f8 <table_get_uint16@@Base>
   12f5c:	mov	r3, r0
   12f60:	mov	r2, r4
   12f64:	mov	r1, r5
   12f68:	mov	r0, r7
   12f6c:	bl	14f68 <table_set_uint16@@Base>
   12f70:	b	12ea4 <table_dupe@@Base+0x130>
   12f74:	mov	r2, r4
   12f78:	mov	r1, r5
   12f7c:	mov	r0, r6
   12f80:	bl	14908 <table_get_int32@@Base>
   12f84:	mov	r3, r0
   12f88:	mov	r2, r4
   12f8c:	mov	r1, r5
   12f90:	mov	r0, r7
   12f94:	bl	14f88 <table_set_int32@@Base>
   12f98:	b	12ea4 <table_dupe@@Base+0x130>
   12f9c:	mov	r2, r4
   12fa0:	mov	r1, r5
   12fa4:	mov	r0, r6
   12fa8:	bl	1490c <table_get_uint32@@Base>
   12fac:	mov	r3, r0
   12fb0:	mov	r2, r4
   12fb4:	mov	r1, r5
   12fb8:	mov	r0, r7
   12fbc:	bl	14fa8 <table_set_uint32@@Base>
   12fc0:	b	12ea4 <table_dupe@@Base+0x130>
   12fc4:	mov	r2, r4
   12fc8:	mov	r1, r5
   12fcc:	mov	r0, r6
   12fd0:	bl	14910 <table_get_int64@@Base>
   12fd4:	mov	r2, r4
   12fd8:	strd	r0, [sp]
   12fdc:	mov	r1, r5
   12fe0:	mov	r0, r7
   12fe4:	bl	14fc8 <table_set_int64@@Base>
   12fe8:	b	12ea4 <table_dupe@@Base+0x130>
   12fec:	mov	r2, r4
   12ff0:	mov	r1, r5
   12ff4:	mov	r0, r6
   12ff8:	bl	14920 <table_get_uint64@@Base>
   12ffc:	mov	r2, r4
   13000:	strd	r0, [sp]
   13004:	mov	r1, r5
   13008:	mov	r0, r7
   1300c:	bl	14fe4 <table_set_uint64@@Base>
   13010:	b	12ea4 <table_dupe@@Base+0x130>
   13014:	mov	r2, r4
   13018:	mov	r1, r5
   1301c:	mov	r0, r6
   13020:	bl	14930 <table_get_short@@Base>
   13024:	mov	r3, r0
   13028:	mov	r2, r4
   1302c:	mov	r1, r5
   13030:	mov	r0, r7
   13034:	bl	15000 <table_set_short@@Base>
   13038:	b	12ea4 <table_dupe@@Base+0x130>
   1303c:	mov	r2, r4
   13040:	mov	r1, r5
   13044:	mov	r0, r6
   13048:	bl	14934 <table_get_ushort@@Base>
   1304c:	mov	r3, r0
   13050:	mov	r2, r4
   13054:	mov	r1, r5
   13058:	mov	r0, r7
   1305c:	bl	15020 <table_set_ushort@@Base>
   13060:	b	12ea4 <table_dupe@@Base+0x130>
   13064:	mov	r2, r4
   13068:	mov	r1, r5
   1306c:	mov	r0, r6
   13070:	bl	14938 <table_get_long@@Base>
   13074:	mov	r3, r0
   13078:	mov	r2, r4
   1307c:	mov	r1, r5
   13080:	mov	r0, r7
   13084:	bl	15040 <table_set_long@@Base>
   13088:	b	12ea4 <table_dupe@@Base+0x130>
   1308c:	mov	r2, r4
   13090:	mov	r1, r5
   13094:	mov	r0, r6
   13098:	bl	14948 <table_get_ulong@@Base>
   1309c:	mov	r3, r0
   130a0:	mov	r2, r4
   130a4:	mov	r1, r5
   130a8:	mov	r0, r7
   130ac:	bl	15060 <table_set_ulong@@Base>
   130b0:	b	12ea4 <table_dupe@@Base+0x130>
   130b4:	mov	r2, r4
   130b8:	mov	r1, r5
   130bc:	mov	r0, r6
   130c0:	bl	14958 <table_get_llong@@Base>
   130c4:	mov	r2, r4
   130c8:	strd	r0, [sp]
   130cc:	mov	r1, r5
   130d0:	mov	r0, r7
   130d4:	bl	15080 <table_set_llong@@Base>
   130d8:	b	12ea4 <table_dupe@@Base+0x130>
   130dc:	mov	r2, r4
   130e0:	mov	r1, r5
   130e4:	mov	r0, r6
   130e8:	bl	1495c <table_get_ullong@@Base>
   130ec:	mov	r2, r4
   130f0:	strd	r0, [sp]
   130f4:	mov	r1, r5
   130f8:	mov	r0, r7
   130fc:	bl	1509c <table_set_ullong@@Base>
   13100:	b	12ea4 <table_dupe@@Base+0x130>
   13104:	mov	r2, r4
   13108:	mov	r1, r5
   1310c:	mov	r0, r6
   13110:	bl	14998 <table_get_string@@Base>
   13114:	mov	r3, r0
   13118:	mov	r2, r4
   1311c:	mov	r1, r5
   13120:	mov	r0, r7
   13124:	bl	15118 <table_set_string@@Base>
   13128:	b	12ea4 <table_dupe@@Base+0x130>
   1312c:	mov	r2, r4
   13130:	mov	r1, r5
   13134:	mov	r0, r6
   13138:	bl	14960 <table_get_float@@Base>
   1313c:	mov	r2, r4
   13140:	mov	r1, r5
   13144:	mov	r0, r7
   13148:	bl	150b8 <table_set_float@@Base>
   1314c:	b	12ea4 <table_dupe@@Base+0x130>
   13150:	mov	r2, r4
   13154:	mov	r1, r5
   13158:	mov	r0, r6
   1315c:	bl	14970 <table_get_double@@Base>
   13160:	mov	r2, r4
   13164:	mov	r1, r5
   13168:	mov	r0, r7
   1316c:	bl	150d8 <table_set_double@@Base>
   13170:	b	12ea4 <table_dupe@@Base+0x130>
   13174:	mov	r2, r4
   13178:	mov	r1, r5
   1317c:	mov	r0, r6
   13180:	bl	14980 <table_get_ldouble@@Base>
   13184:	mov	r2, r4
   13188:	mov	r1, r5
   1318c:	mov	r0, r7
   13190:	bl	150f8 <table_set_ldouble@@Base>
   13194:	b	12ea4 <table_dupe@@Base+0x130>
   13198:	mov	r2, r4
   1319c:	mov	r1, r5
   131a0:	mov	r0, r6
   131a4:	bl	14898 <table_get_bool@@Base>
   131a8:	mov	r3, r0
   131ac:	mov	r2, r4
   131b0:	mov	r1, r5
   131b4:	mov	r0, r7
   131b8:	bl	14ea8 <table_set_bool@@Base>
   131bc:	b	12ea4 <table_dupe@@Base+0x130>
   131c0:	mov	r2, r4
   131c4:	mov	r1, r5
   131c8:	mov	r0, r6
   131cc:	bl	14990 <table_get_char@@Base>
   131d0:	mov	r3, r0
   131d4:	mov	r2, r4
   131d8:	mov	r1, r5
   131dc:	mov	r0, r7
   131e0:	bl	15130 <table_set_char@@Base>
   131e4:	b	12ea4 <table_dupe@@Base+0x130>
   131e8:	mov	r2, r4
   131ec:	mov	r1, r5
   131f0:	mov	r0, r6
   131f4:	bl	14994 <table_get_uchar@@Base>
   131f8:	mov	r3, r0
   131fc:	mov	r2, r4
   13200:	mov	r1, r5
   13204:	mov	r0, r7
   13208:	bl	15150 <table_set_uchar@@Base>
   1320c:	b	12ea4 <table_dupe@@Base+0x130>
   13210:	mov	r2, r4
   13214:	mov	r1, r5
   13218:	mov	r0, r6
   1321c:	bl	1499c <table_get_ptr@@Base>
   13220:	add	r3, sp, #12
   13224:	mov	r2, r4
   13228:	str	r0, [sp, #12]
   1322c:	mov	r1, r5
   13230:	mov	r0, r7
   13234:	bl	15170 <table_set_ptr@@Base>
   13238:	b	12ea4 <table_dupe@@Base+0x130>

0001323c <table_get_major_version@@Base>:
   1323c:	mov	r0, #0
   13240:	bx	lr

00013244 <table_get_minor_version@@Base>:
   13244:	mov	r0, #0
   13248:	bx	lr

0001324c <table_get_patch_version@@Base>:
   1324c:	mov	r0, #0
   13250:	bx	lr

00013254 <table_get_version@@Base>:
   13254:	ldr	r0, [pc]	; 1325c <table_get_version@@Base+0x8>
   13258:	bx	lr
   1325c:	andeq	r5, r1, r5, lsl fp

00013260 <table_get_callback_length@@Base>:
   13260:	ldr	r0, [r0, #32]
   13264:	bx	lr

00013268 <table_register_callback@@Base>:
   13268:	push	{r4, r5, r6, r7, r8, lr}
   1326c:	mov	r4, r0
   13270:	mov	ip, #0
   13274:	ldr	lr, [r0, #32]
   13278:	ldr	r0, [r0, #36]	; 0x24
   1327c:	cmp	ip, lr
   13280:	blt	13310 <table_register_callback@@Base+0xa8>
   13284:	ldr	ip, [r4, #48]	; 0x30
   13288:	mov	r5, r3
   1328c:	mov	r6, r2
   13290:	mov	r7, r1
   13294:	udiv	r3, lr, ip
   13298:	mls	r3, ip, r3, lr
   1329c:	cmp	r3, #0
   132a0:	bne	132e4 <table_register_callback@@Base+0x7c>
   132a4:	ldr	r1, [r4, #52]	; 0x34
   132a8:	add	r1, ip, r1
   132ac:	str	r1, [r4, #52]	; 0x34
   132b0:	lsl	r1, r1, #2
   132b4:	bl	12924 <realloc@plt>
   132b8:	ldr	r1, [r4, #52]	; 0x34
   132bc:	str	r0, [r4, #36]	; 0x24
   132c0:	ldr	r0, [r4, #40]	; 0x28
   132c4:	lsl	r1, r1, #2
   132c8:	bl	12924 <realloc@plt>
   132cc:	ldr	r1, [r4, #52]	; 0x34
   132d0:	str	r0, [r4, #40]	; 0x28
   132d4:	ldr	r0, [r4, #44]	; 0x2c
   132d8:	lsl	r1, r1, #2
   132dc:	bl	12924 <realloc@plt>
   132e0:	str	r0, [r4, #44]	; 0x2c
   132e4:	ldr	r3, [r4, #32]
   132e8:	ldr	r2, [r4, #36]	; 0x24
   132ec:	str	r7, [r2, r3, lsl #2]
   132f0:	ldr	r2, [r4, #40]	; 0x28
   132f4:	str	r6, [r2, r3, lsl #2]
   132f8:	ldr	r2, [r4, #44]	; 0x2c
   132fc:	str	r5, [r2, r3, lsl #2]
   13300:	ldr	r3, [r4, #32]
   13304:	add	r3, r3, #1
   13308:	str	r3, [r4, #32]
   1330c:	pop	{r4, r5, r6, r7, r8, pc}
   13310:	ldr	r6, [r0, ip, lsl #2]
   13314:	lsl	r5, ip, #2
   13318:	cmp	r1, r6
   1331c:	bne	13330 <table_register_callback@@Base+0xc8>
   13320:	ldr	r6, [r4, #40]	; 0x28
   13324:	ldr	r6, [r6, ip, lsl #2]
   13328:	cmp	r2, r6
   1332c:	beq	13338 <table_register_callback@@Base+0xd0>
   13330:	add	ip, ip, #1
   13334:	b	1327c <table_register_callback@@Base+0x14>
   13338:	cmp	ip, #0
   1333c:	ble	13284 <table_register_callback@@Base+0x1c>
   13340:	ldr	r1, [r4, #44]	; 0x2c
   13344:	ldr	r2, [r1, r5]
   13348:	orr	r2, r2, r3
   1334c:	str	r2, [r1, r5]
   13350:	pop	{r4, r5, r6, r7, r8, pc}

00013354 <table_unregister_callback@@Base>:
   13354:	ldr	ip, [r0, #32]
   13358:	mov	r3, #0
   1335c:	cmp	r3, ip
   13360:	bxge	lr
   13364:	push	{r4, r5, r6, lr}
   13368:	ldr	lr, [r0, #36]	; 0x24
   1336c:	ldr	lr, [lr, r3, lsl #2]
   13370:	cmp	r1, lr
   13374:	bne	13388 <table_unregister_callback@@Base+0x34>
   13378:	ldr	lr, [r0, #40]	; 0x28
   1337c:	ldr	lr, [lr, r3, lsl #2]
   13380:	cmp	r2, lr
   13384:	beq	133c8 <table_unregister_callback@@Base+0x74>
   13388:	add	r3, r3, #1
   1338c:	cmp	r3, ip
   13390:	blt	13368 <table_unregister_callback@@Base+0x14>
   13394:	pop	{r4, r5, r6, pc}
   13398:	ldr	r1, [r0, #36]	; 0x24
   1339c:	add	r2, r3, #1
   133a0:	lsl	r3, r3, #2
   133a4:	ldr	ip, [r1, r2, lsl #2]
   133a8:	str	ip, [r1, r3]
   133ac:	ldr	r1, [r0, #40]	; 0x28
   133b0:	ldr	ip, [r1, r2, lsl #2]
   133b4:	str	ip, [r1, r3]
   133b8:	ldr	r1, [r0, #44]	; 0x2c
   133bc:	ldr	ip, [r1, r2, lsl #2]
   133c0:	str	ip, [r1, r3]
   133c4:	mov	r3, r2
   133c8:	ldr	r2, [r0, #32]
   133cc:	sub	r2, r2, #1
   133d0:	cmp	r2, r3
   133d4:	bgt	13398 <table_unregister_callback@@Base+0x44>
   133d8:	ldr	r1, [r0, #48]	; 0x30
   133dc:	str	r2, [r0, #32]
   133e0:	udiv	r3, r2, r1
   133e4:	mls	r2, r1, r3, r2
   133e8:	cmp	r2, #0
   133ec:	popne	{r4, r5, r6, pc}
   133f0:	mov	r4, r0
   133f4:	ldr	r5, [r4, #52]	; 0x34
   133f8:	ldr	r0, [r0, #36]	; 0x24
   133fc:	sub	r5, r5, r1
   13400:	cmp	r5, #0
   13404:	str	r5, [r4, #52]	; 0x34
   13408:	beq	13444 <table_unregister_callback@@Base+0xf0>
   1340c:	lsl	r1, r5, #2
   13410:	bl	12924 <realloc@plt>
   13414:	ldr	r1, [r4, #52]	; 0x34
   13418:	str	r0, [r4, #36]	; 0x24
   1341c:	ldr	r0, [r4, #40]	; 0x28
   13420:	lsl	r1, r1, #2
   13424:	bl	12924 <realloc@plt>
   13428:	ldr	r1, [r4, #52]	; 0x34
   1342c:	str	r0, [r4, #40]	; 0x28
   13430:	ldr	r0, [r4, #44]	; 0x2c
   13434:	lsl	r1, r1, #2
   13438:	bl	12924 <realloc@plt>
   1343c:	str	r0, [r4, #44]	; 0x2c
   13440:	pop	{r4, r5, r6, pc}
   13444:	bl	12918 <free@plt>
   13448:	ldr	r0, [r4, #40]	; 0x28
   1344c:	bl	12918 <free@plt>
   13450:	ldr	r0, [r4, #44]	; 0x2c
   13454:	bl	12918 <free@plt>
   13458:	str	r5, [r4, #36]	; 0x24
   1345c:	str	r5, [r4, #40]	; 0x28
   13460:	str	r5, [r4, #44]	; 0x2c
   13464:	pop	{r4, r5, r6, pc}

00013468 <table_notify@@Base>:
   13468:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1346c:	mov	r5, r0
   13470:	mov	r7, r1
   13474:	mov	r8, r2
   13478:	mov	r6, r3
   1347c:	mov	r4, #0
   13480:	ldr	r3, [r5, #32]
   13484:	cmp	r3, r4
   13488:	bgt	13494 <table_notify@@Base+0x2c>
   1348c:	add	sp, sp, #12
   13490:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13494:	ldr	r3, [r5, #44]	; 0x2c
   13498:	ldr	r3, [r3, r4, lsl #2]
   1349c:	tst	r6, r3
   134a0:	beq	134cc <table_notify@@Base+0x64>
   134a4:	ldr	r3, [r5, #36]	; 0x24
   134a8:	mov	r1, r7
   134ac:	mov	r0, r5
   134b0:	ldr	r2, [r5, #40]	; 0x28
   134b4:	ldr	r2, [r2, r4, lsl #2]
   134b8:	str	r2, [sp]
   134bc:	mov	r2, r8
   134c0:	ldr	r9, [r3, r4, lsl #2]
   134c4:	mov	r3, r6
   134c8:	blx	r9
   134cc:	add	r4, r4, #1
   134d0:	b	13480 <table_notify@@Base+0x18>

000134d4 <table_column_init@@Base>:
   134d4:	push	{r4, r5, r6, r7, r8, lr}
   134d8:	mov	r4, #12
   134dc:	mov	r6, r2
   134e0:	mov	r8, r3
   134e4:	mul	r4, r4, r1
   134e8:	ldr	r7, [r0]
   134ec:	mov	r0, r2
   134f0:	bl	12960 <strlen@plt>
   134f4:	add	r0, r0, #1
   134f8:	bl	1293c <malloc@plt>
   134fc:	cmp	r0, #0
   13500:	add	r5, r7, r4
   13504:	str	r0, [r7, r4]
   13508:	beq	13514 <table_column_init@@Base+0x40>
   1350c:	mov	r1, r6
   13510:	bl	12930 <strcpy@plt>
   13514:	ldr	r3, [sp, #24]
   13518:	str	r8, [r5, #4]
   1351c:	str	r3, [r5, #8]
   13520:	pop	{r4, r5, r6, r7, r8, pc}

00013524 <table_column_destroy@@Base>:
   13524:	mov	r3, #12
   13528:	ldr	r2, [r0]
   1352c:	mul	r1, r3, r1
   13530:	ldr	r0, [r2, r1]
   13534:	cmp	r0, #0
   13538:	bxeq	lr
   1353c:	b	12918 <free@plt>

00013540 <table_get_column_length@@Base>:
   13540:	ldr	r0, [r0, #4]
   13544:	bx	lr

00013548 <table_get_column@@Base>:
   13548:	push	{r4, r5, r6, r7, r8, lr}
   1354c:	mov	r5, r0
   13550:	mov	r7, r1
   13554:	mov	r4, #0
   13558:	mov	r8, #12
   1355c:	ldr	r6, [r0, #4]
   13560:	cmp	r4, r6
   13564:	blt	13574 <table_get_column@@Base+0x2c>
   13568:	mvneq	r4, #0
   1356c:	mov	r0, r4
   13570:	pop	{r4, r5, r6, r7, r8, pc}
   13574:	ldr	r2, [r5]
   13578:	mul	r3, r8, r4
   1357c:	mov	r1, r7
   13580:	ldr	r0, [r2, r3]
   13584:	bl	12900 <strcmp@plt>
   13588:	cmp	r0, #0
   1358c:	beq	1356c <table_get_column@@Base+0x24>
   13590:	add	r4, r4, #1
   13594:	b	13560 <table_get_column@@Base+0x18>

00013598 <table_get_column_data_type@@Base>:
   13598:	ldr	r2, [r0]
   1359c:	mov	r3, #12
   135a0:	mla	r1, r3, r1, r2
   135a4:	ldr	r0, [r1, #4]
   135a8:	bx	lr

000135ac <table_add_column@@Base>:
   135ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   135b0:	mov	r7, r1
   135b4:	mov	r4, r0
   135b8:	mov	r6, r2
   135bc:	ldr	r3, [r0, #4]
   135c0:	ldr	r1, [r0, #8]
   135c4:	udiv	r5, r3, r1
   135c8:	mls	r5, r1, r5, r3
   135cc:	cmp	r5, #0
   135d0:	beq	13638 <table_add_column@@Base+0x8c>
   135d4:	mov	r0, r4
   135d8:	mov	r5, #0
   135dc:	bl	14a10 <table_get_row_length@@Base>
   135e0:	ldr	r8, [r4, #4]
   135e4:	mov	r9, r0
   135e8:	mov	r0, r6
   135ec:	bl	13ebc <table_get_default_compare_function_for_data_type@@Base>
   135f0:	mov	r3, r6
   135f4:	mov	r2, r7
   135f8:	str	r0, [sp]
   135fc:	mov	r0, r4
   13600:	mov	r1, r8
   13604:	bl	134d4 <table_column_init@@Base>
   13608:	cmp	r9, r5
   1360c:	bgt	13698 <table_add_column@@Base+0xec>
   13610:	mov	r0, r4
   13614:	mov	r3, #8
   13618:	ldr	r2, [r4, #4]
   1361c:	mvn	r1, #0
   13620:	bl	13468 <table_notify@@Base>
   13624:	ldr	r0, [r4, #4]
   13628:	add	r3, r0, #1
   1362c:	str	r3, [r4, #4]
   13630:	add	sp, sp, #12
   13634:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13638:	ldr	r3, [r4, #12]
   1363c:	ldr	r0, [r0]
   13640:	add	r1, r1, r3
   13644:	mov	r3, #12
   13648:	str	r1, [r4, #12]
   1364c:	mul	r1, r3, r1
   13650:	bl	12924 <realloc@plt>
   13654:	str	r0, [r4]
   13658:	mov	r0, r4
   1365c:	bl	14a10 <table_get_row_length@@Base>
   13660:	mov	r9, r0
   13664:	cmp	r9, r5
   13668:	ble	135d4 <table_add_column@@Base+0x28>
   1366c:	mov	r1, r5
   13670:	mov	r0, r4
   13674:	bl	14bac <table_get_row_ptr@@Base>
   13678:	ldr	r1, [r4, #12]
   1367c:	mov	r8, r0
   13680:	add	r5, r5, #1
   13684:	ldr	r0, [r0]
   13688:	lsl	r1, r1, #2
   1368c:	bl	12924 <realloc@plt>
   13690:	str	r0, [r8]
   13694:	b	13664 <table_add_column@@Base+0xb8>
   13698:	mov	r1, r5
   1369c:	mov	r2, r8
   136a0:	mov	r0, r4
   136a4:	add	r5, r5, #1
   136a8:	bl	15a20 <table_cell_init@@Base>
   136ac:	b	13608 <table_add_column@@Base+0x5c>

000136b0 <table_remove_column@@Base>:
   136b0:	push	{r4, r5, r6, r7, r8, lr}
   136b4:	mov	r4, r0
   136b8:	mov	r6, r1
   136bc:	mov	r5, #12
   136c0:	bl	13524 <table_column_destroy@@Base>
   136c4:	ldr	r7, [r4, #4]
   136c8:	mov	r1, r6
   136cc:	sub	r7, r7, #1
   136d0:	cmp	r1, r7
   136d4:	blt	13760 <table_remove_column@@Base+0xb0>
   136d8:	mov	r0, r4
   136dc:	mov	r5, #0
   136e0:	bl	14a10 <table_get_row_length@@Base>
   136e4:	mov	r8, r0
   136e8:	cmp	r8, r5
   136ec:	bgt	13794 <table_remove_column@@Base+0xe4>
   136f0:	ldr	r5, [r4, #4]
   136f4:	ldr	r1, [r4, #8]
   136f8:	sub	r3, r5, #1
   136fc:	udiv	r5, r3, r1
   13700:	str	r3, [r4, #4]
   13704:	mls	r5, r1, r5, r3
   13708:	cmp	r5, #0
   1370c:	bne	13744 <table_remove_column@@Base+0x94>
   13710:	ldr	r0, [r4]
   13714:	ldr	r3, [r4, #12]
   13718:	sub	r3, r3, r1
   1371c:	mov	r1, #12
   13720:	mul	r1, r1, r3
   13724:	str	r3, [r4, #12]
   13728:	bl	12924 <realloc@plt>
   1372c:	str	r0, [r4]
   13730:	mov	r0, r4
   13734:	bl	14a10 <table_get_row_length@@Base>
   13738:	mov	r8, r0
   1373c:	cmp	r8, r5
   13740:	bgt	137d8 <table_remove_column@@Base+0x128>
   13744:	mov	r0, r4
   13748:	mov	r3, #16
   1374c:	mov	r2, r6
   13750:	mvn	r1, #0
   13754:	bl	13468 <table_notify@@Base>
   13758:	mov	r0, #0
   1375c:	pop	{r4, r5, r6, r7, r8, pc}
   13760:	ldr	ip, [r4]
   13764:	mul	r0, r5, r1
   13768:	add	r1, r1, #1
   1376c:	add	r2, r0, #12
   13770:	add	r2, ip, r2
   13774:	add	lr, ip, r0
   13778:	ldr	r3, [r2]
   1377c:	str	r3, [ip, r0]
   13780:	ldr	r3, [r2, #4]
   13784:	str	r3, [lr, #4]
   13788:	ldr	r3, [r2, #8]
   1378c:	str	r3, [lr, #8]
   13790:	b	136d0 <table_remove_column@@Base+0x20>
   13794:	mov	r2, r6
   13798:	mov	r1, r5
   1379c:	mov	r0, r4
   137a0:	bl	15a34 <table_cell_destroy@@Base>
   137a4:	mov	r1, r5
   137a8:	mov	r0, r4
   137ac:	bl	14bac <table_get_row_ptr@@Base>
   137b0:	mov	r3, r6
   137b4:	cmp	r7, r3
   137b8:	addle	r5, r5, #1
   137bc:	ble	136e8 <table_remove_column@@Base+0x38>
   137c0:	ldr	r2, [r0]
   137c4:	add	r1, r2, r3, lsl #2
   137c8:	ldr	r1, [r1, #4]
   137cc:	str	r1, [r2, r3, lsl #2]
   137d0:	add	r3, r3, #1
   137d4:	b	137b4 <table_remove_column@@Base+0x104>
   137d8:	mov	r1, r5
   137dc:	mov	r0, r4
   137e0:	bl	14bac <table_get_row_ptr@@Base>
   137e4:	ldr	r1, [r4, #12]
   137e8:	mov	r7, r0
   137ec:	add	r5, r5, #1
   137f0:	ldr	r0, [r0]
   137f4:	lsl	r1, r1, #2
   137f8:	bl	12924 <realloc@plt>
   137fc:	str	r0, [r7]
   13800:	b	1373c <table_remove_column@@Base+0x8c>

00013804 <table_get_column_name@@Base>:
   13804:	mov	r3, #12
   13808:	ldr	r2, [r0]
   1380c:	mul	r1, r3, r1
   13810:	ldr	r0, [r2, r1]
   13814:	bx	lr

00013818 <table_get_col_ptr@@Base>:
   13818:	ldr	r3, [r0]
   1381c:	mov	r0, #12
   13820:	mla	r0, r0, r1, r3
   13824:	bx	lr

00013828 <table_get_column_compare_function@@Base>:
   13828:	ldr	r2, [r0]
   1382c:	mov	r3, #12
   13830:	mla	r1, r3, r1, r2
   13834:	ldr	r0, [r1, #8]
   13838:	bx	lr

0001383c <table_set_column_compare_function@@Base>:
   1383c:	ldr	r0, [r0]
   13840:	mov	r3, #12
   13844:	mla	r1, r3, r1, r0
   13848:	str	r2, [r1, #8]
   1384c:	bx	lr

00013850 <table_compare_ptr@@Base>:
   13850:	cmp	r0, r1
   13854:	bhi	13864 <table_compare_ptr@@Base+0x14>
   13858:	mvncc	r0, #0
   1385c:	movcs	r0, #0
   13860:	bx	lr
   13864:	mov	r0, #1
   13868:	bx	lr

0001386c <table_compare_string@@Base>:
   1386c:	cmp	r0, #0
   13870:	bne	13884 <table_compare_string@@Base+0x18>
   13874:	adds	r0, r1, #0
   13878:	movne	r0, #1
   1387c:	rsb	r0, r0, #0
   13880:	bx	lr
   13884:	cmp	r1, #0
   13888:	beq	13890 <table_compare_string@@Base+0x24>
   1388c:	b	12900 <strcmp@plt>
   13890:	mov	r0, #1
   13894:	bx	lr

00013898 <table_compare_bool@@Base>:
   13898:	cmp	r0, #0
   1389c:	bne	138b0 <table_compare_bool@@Base+0x18>
   138a0:	adds	r0, r1, #0
   138a4:	movne	r0, #1
   138a8:	rsb	r0, r0, #0
   138ac:	bx	lr
   138b0:	cmp	r1, #0
   138b4:	beq	138d4 <table_compare_bool@@Base+0x3c>
   138b8:	ldrb	r2, [r0]
   138bc:	ldrb	r3, [r1]
   138c0:	cmp	r2, r3
   138c4:	bhi	138d4 <table_compare_bool@@Base+0x3c>
   138c8:	mvncc	r0, #0
   138cc:	movcs	r0, #0
   138d0:	bx	lr
   138d4:	mov	r0, #1
   138d8:	bx	lr

000138dc <table_compare_int32@@Base>:
   138dc:	cmp	r0, #0
   138e0:	bne	138f4 <table_compare_int32@@Base+0x18>
   138e4:	adds	r0, r1, #0
   138e8:	movne	r0, #1
   138ec:	rsb	r0, r0, #0
   138f0:	bx	lr
   138f4:	cmp	r1, #0
   138f8:	beq	13918 <table_compare_int32@@Base+0x3c>
   138fc:	ldr	r2, [r0]
   13900:	ldr	r3, [r1]
   13904:	cmp	r2, r3
   13908:	bgt	13918 <table_compare_int32@@Base+0x3c>
   1390c:	mvnlt	r0, #0
   13910:	movge	r0, #0
   13914:	bx	lr
   13918:	mov	r0, #1
   1391c:	bx	lr

00013920 <table_compare_uint32@@Base>:
   13920:	cmp	r0, #0
   13924:	bne	13938 <table_compare_uint32@@Base+0x18>
   13928:	adds	r0, r1, #0
   1392c:	movne	r0, #1
   13930:	rsb	r0, r0, #0
   13934:	bx	lr
   13938:	cmp	r1, #0
   1393c:	beq	1395c <table_compare_uint32@@Base+0x3c>
   13940:	ldr	r2, [r0]
   13944:	ldr	r3, [r1]
   13948:	cmp	r2, r3
   1394c:	bhi	1395c <table_compare_uint32@@Base+0x3c>
   13950:	mvncc	r0, #0
   13954:	movcs	r0, #0
   13958:	bx	lr
   1395c:	mov	r0, #1
   13960:	bx	lr

00013964 <table_compare_int8@@Base>:
   13964:	cmp	r0, #0
   13968:	bne	1397c <table_compare_int8@@Base+0x18>
   1396c:	adds	r0, r1, #0
   13970:	movne	r0, #1
   13974:	rsb	r0, r0, #0
   13978:	bx	lr
   1397c:	cmp	r1, #0
   13980:	beq	139a0 <table_compare_int8@@Base+0x3c>
   13984:	ldrsb	r2, [r0]
   13988:	ldrsb	r3, [r1]
   1398c:	cmp	r2, r3
   13990:	bgt	139a0 <table_compare_int8@@Base+0x3c>
   13994:	mvnlt	r0, #0
   13998:	movge	r0, #0
   1399c:	bx	lr
   139a0:	mov	r0, #1
   139a4:	bx	lr

000139a8 <table_compare_char@@Base>:
   139a8:	cmp	r0, #0
   139ac:	bne	139c0 <table_compare_char@@Base+0x18>
   139b0:	adds	r0, r1, #0
   139b4:	movne	r0, #1
   139b8:	rsb	r0, r0, #0
   139bc:	bx	lr
   139c0:	cmp	r1, #0
   139c4:	beq	139e4 <table_compare_char@@Base+0x3c>
   139c8:	ldrb	r2, [r0]
   139cc:	ldrb	r3, [r1]
   139d0:	cmp	r2, r3
   139d4:	bhi	139e4 <table_compare_char@@Base+0x3c>
   139d8:	mvncc	r0, #0
   139dc:	movcs	r0, #0
   139e0:	bx	lr
   139e4:	mov	r0, #1
   139e8:	bx	lr

000139ec <table_compare_short@@Base>:
   139ec:	cmp	r0, #0
   139f0:	bne	13a04 <table_compare_short@@Base+0x18>
   139f4:	adds	r0, r1, #0
   139f8:	movne	r0, #1
   139fc:	rsb	r0, r0, #0
   13a00:	bx	lr
   13a04:	cmp	r1, #0
   13a08:	beq	13a28 <table_compare_short@@Base+0x3c>
   13a0c:	ldrsh	r2, [r0]
   13a10:	ldrsh	r3, [r1]
   13a14:	cmp	r2, r3
   13a18:	bgt	13a28 <table_compare_short@@Base+0x3c>
   13a1c:	mvnlt	r0, #0
   13a20:	movge	r0, #0
   13a24:	bx	lr
   13a28:	mov	r0, #1
   13a2c:	bx	lr

00013a30 <table_compare_ushort@@Base>:
   13a30:	cmp	r0, #0
   13a34:	bne	13a48 <table_compare_ushort@@Base+0x18>
   13a38:	adds	r0, r1, #0
   13a3c:	movne	r0, #1
   13a40:	rsb	r0, r0, #0
   13a44:	bx	lr
   13a48:	cmp	r1, #0
   13a4c:	beq	13a6c <table_compare_ushort@@Base+0x3c>
   13a50:	ldrh	r2, [r0]
   13a54:	ldrh	r3, [r1]
   13a58:	cmp	r2, r3
   13a5c:	bhi	13a6c <table_compare_ushort@@Base+0x3c>
   13a60:	mvncc	r0, #0
   13a64:	movcs	r0, #0
   13a68:	bx	lr
   13a6c:	mov	r0, #1
   13a70:	bx	lr

00013a74 <table_compare_llong@@Base>:
   13a74:	cmp	r0, #0
   13a78:	bne	13a8c <table_compare_llong@@Base+0x18>
   13a7c:	adds	r0, r1, #0
   13a80:	movne	r0, #1
   13a84:	rsb	r0, r0, #0
   13a88:	bx	lr
   13a8c:	cmp	r1, #0
   13a90:	beq	13ac0 <table_compare_llong@@Base+0x4c>
   13a94:	push	{r4, r5, lr}
   13a98:	ldrd	r2, [r1]
   13a9c:	ldrd	r4, [r0]
   13aa0:	cmp	r2, r4
   13aa4:	sbcs	r1, r3, r5
   13aa8:	blt	13ac8 <table_compare_llong@@Base+0x54>
   13aac:	cmp	r4, r2
   13ab0:	sbcs	r3, r5, r3
   13ab4:	mvnlt	r0, #0
   13ab8:	movge	r0, #0
   13abc:	pop	{r4, r5, pc}
   13ac0:	mov	r0, #1
   13ac4:	bx	lr
   13ac8:	mov	r0, #1
   13acc:	pop	{r4, r5, pc}

00013ad0 <table_compare_uint64@@Base>:
   13ad0:	cmp	r0, #0
   13ad4:	bne	13ae8 <table_compare_uint64@@Base+0x18>
   13ad8:	adds	r0, r1, #0
   13adc:	movne	r0, #1
   13ae0:	rsb	r0, r0, #0
   13ae4:	bx	lr
   13ae8:	cmp	r1, #0
   13aec:	beq	13b14 <table_compare_uint64@@Base+0x44>
   13af0:	push	{r4, r5, lr}
   13af4:	ldrd	r2, [r1]
   13af8:	ldrd	r4, [r0]
   13afc:	cmp	r5, r3
   13b00:	cmpeq	r4, r2
   13b04:	bhi	13b1c <table_compare_uint64@@Base+0x4c>
   13b08:	mvncc	r0, #0
   13b0c:	movcs	r0, #0
   13b10:	pop	{r4, r5, pc}
   13b14:	mov	r0, #1
   13b18:	bx	lr
   13b1c:	mov	r0, #1
   13b20:	pop	{r4, r5, pc}

00013b24 <table_compare_long@@Base>:
   13b24:	cmp	r0, #0
   13b28:	bne	13b3c <table_compare_long@@Base+0x18>
   13b2c:	adds	r0, r1, #0
   13b30:	movne	r0, #1
   13b34:	rsb	r0, r0, #0
   13b38:	bx	lr
   13b3c:	cmp	r1, #0
   13b40:	beq	13b60 <table_compare_long@@Base+0x3c>
   13b44:	ldr	r2, [r0]
   13b48:	ldr	r3, [r1]
   13b4c:	cmp	r2, r3
   13b50:	bgt	13b60 <table_compare_long@@Base+0x3c>
   13b54:	mvnlt	r0, #0
   13b58:	movge	r0, #0
   13b5c:	bx	lr
   13b60:	mov	r0, #1
   13b64:	bx	lr

00013b68 <table_compare_ullong@@Base>:
   13b68:	cmp	r0, #0
   13b6c:	bne	13b80 <table_compare_ullong@@Base+0x18>
   13b70:	adds	r0, r1, #0
   13b74:	movne	r0, #1
   13b78:	rsb	r0, r0, #0
   13b7c:	bx	lr
   13b80:	cmp	r1, #0
   13b84:	beq	13ba4 <table_compare_ullong@@Base+0x3c>
   13b88:	ldr	r2, [r0]
   13b8c:	ldr	r3, [r1]
   13b90:	cmp	r2, r3
   13b94:	bhi	13ba4 <table_compare_ullong@@Base+0x3c>
   13b98:	mvncc	r0, #0
   13b9c:	movcs	r0, #0
   13ba0:	bx	lr
   13ba4:	mov	r0, #1
   13ba8:	bx	lr

00013bac <table_compare_float@@Base>:
   13bac:	cmp	r0, #0
   13bb0:	bne	13bc4 <table_compare_float@@Base+0x18>
   13bb4:	adds	r0, r1, #0
   13bb8:	movne	r0, #1
   13bbc:	rsb	r0, r0, #0
   13bc0:	bx	lr
   13bc4:	cmp	r1, #0
   13bc8:	beq	13bec <table_compare_float@@Base+0x40>
   13bcc:	vldr	s14, [r0]
   13bd0:	vldr	s15, [r1]
   13bd4:	vcmpe.f32	s14, s15
   13bd8:	vmrs	APSR_nzcv, fpscr
   13bdc:	bgt	13bec <table_compare_float@@Base+0x40>
   13be0:	mvnmi	r0, #0
   13be4:	movpl	r0, #0
   13be8:	bx	lr
   13bec:	mov	r0, #1
   13bf0:	bx	lr

00013bf4 <table_compare_double@@Base>:
   13bf4:	cmp	r0, #0
   13bf8:	bne	13c0c <table_compare_double@@Base+0x18>
   13bfc:	adds	r0, r1, #0
   13c00:	movne	r0, #1
   13c04:	rsb	r0, r0, #0
   13c08:	bx	lr
   13c0c:	cmp	r1, #0
   13c10:	beq	13c34 <table_compare_double@@Base+0x40>
   13c14:	vldr	d6, [r0]
   13c18:	vldr	d7, [r1]
   13c1c:	vcmpe.f64	d6, d7
   13c20:	vmrs	APSR_nzcv, fpscr
   13c24:	bgt	13c34 <table_compare_double@@Base+0x40>
   13c28:	mvnmi	r0, #0
   13c2c:	movpl	r0, #0
   13c30:	bx	lr
   13c34:	mov	r0, #1
   13c38:	bx	lr

00013c3c <table_compare_ldouble@@Base>:
   13c3c:	cmp	r0, #0
   13c40:	bne	13c54 <table_compare_ldouble@@Base+0x18>
   13c44:	adds	r0, r1, #0
   13c48:	movne	r0, #1
   13c4c:	rsb	r0, r0, #0
   13c50:	bx	lr
   13c54:	cmp	r1, #0
   13c58:	beq	13c7c <table_compare_ldouble@@Base+0x40>
   13c5c:	vldr	d6, [r0]
   13c60:	vldr	d7, [r1]
   13c64:	vcmpe.f64	d6, d7
   13c68:	vmrs	APSR_nzcv, fpscr
   13c6c:	bgt	13c7c <table_compare_ldouble@@Base+0x40>
   13c70:	mvnmi	r0, #0
   13c74:	movpl	r0, #0
   13c78:	bx	lr
   13c7c:	mov	r0, #1
   13c80:	bx	lr

00013c84 <table_compare_uchar@@Base>:
   13c84:	cmp	r0, #0
   13c88:	bne	13c9c <table_compare_uchar@@Base+0x18>
   13c8c:	adds	r0, r1, #0
   13c90:	movne	r0, #1
   13c94:	rsb	r0, r0, #0
   13c98:	bx	lr
   13c9c:	cmp	r1, #0
   13ca0:	beq	13cc0 <table_compare_uchar@@Base+0x3c>
   13ca4:	ldrb	r2, [r0]
   13ca8:	ldrb	r3, [r1]
   13cac:	cmp	r2, r3
   13cb0:	bhi	13cc0 <table_compare_uchar@@Base+0x3c>
   13cb4:	mvncc	r0, #0
   13cb8:	movcs	r0, #0
   13cbc:	bx	lr
   13cc0:	mov	r0, #1
   13cc4:	bx	lr

00013cc8 <table_compare_int@@Base>:
   13cc8:	cmp	r0, #0
   13ccc:	bne	13ce0 <table_compare_int@@Base+0x18>
   13cd0:	adds	r0, r1, #0
   13cd4:	movne	r0, #1
   13cd8:	rsb	r0, r0, #0
   13cdc:	bx	lr
   13ce0:	cmp	r1, #0
   13ce4:	beq	13d04 <table_compare_int@@Base+0x3c>
   13ce8:	ldr	r2, [r0]
   13cec:	ldr	r3, [r1]
   13cf0:	cmp	r2, r3
   13cf4:	bgt	13d04 <table_compare_int@@Base+0x3c>
   13cf8:	mvnlt	r0, #0
   13cfc:	movge	r0, #0
   13d00:	bx	lr
   13d04:	mov	r0, #1
   13d08:	bx	lr

00013d0c <table_compare_uint@@Base>:
   13d0c:	cmp	r0, #0
   13d10:	bne	13d24 <table_compare_uint@@Base+0x18>
   13d14:	adds	r0, r1, #0
   13d18:	movne	r0, #1
   13d1c:	rsb	r0, r0, #0
   13d20:	bx	lr
   13d24:	cmp	r1, #0
   13d28:	beq	13d48 <table_compare_uint@@Base+0x3c>
   13d2c:	ldr	r2, [r0]
   13d30:	ldr	r3, [r1]
   13d34:	cmp	r2, r3
   13d38:	bhi	13d48 <table_compare_uint@@Base+0x3c>
   13d3c:	mvncc	r0, #0
   13d40:	movcs	r0, #0
   13d44:	bx	lr
   13d48:	mov	r0, #1
   13d4c:	bx	lr

00013d50 <table_compare_uint8@@Base>:
   13d50:	cmp	r0, #0
   13d54:	bne	13d68 <table_compare_uint8@@Base+0x18>
   13d58:	adds	r0, r1, #0
   13d5c:	movne	r0, #1
   13d60:	rsb	r0, r0, #0
   13d64:	bx	lr
   13d68:	cmp	r1, #0
   13d6c:	beq	13d8c <table_compare_uint8@@Base+0x3c>
   13d70:	ldrb	r2, [r0]
   13d74:	ldrb	r3, [r1]
   13d78:	cmp	r2, r3
   13d7c:	bhi	13d8c <table_compare_uint8@@Base+0x3c>
   13d80:	mvncc	r0, #0
   13d84:	movcs	r0, #0
   13d88:	bx	lr
   13d8c:	mov	r0, #1
   13d90:	bx	lr

00013d94 <table_compare_int16@@Base>:
   13d94:	cmp	r0, #0
   13d98:	bne	13dac <table_compare_int16@@Base+0x18>
   13d9c:	adds	r0, r1, #0
   13da0:	movne	r0, #1
   13da4:	rsb	r0, r0, #0
   13da8:	bx	lr
   13dac:	cmp	r1, #0
   13db0:	beq	13dd0 <table_compare_int16@@Base+0x3c>
   13db4:	ldrsh	r2, [r0]
   13db8:	ldrsh	r3, [r1]
   13dbc:	cmp	r2, r3
   13dc0:	bgt	13dd0 <table_compare_int16@@Base+0x3c>
   13dc4:	mvnlt	r0, #0
   13dc8:	movge	r0, #0
   13dcc:	bx	lr
   13dd0:	mov	r0, #1
   13dd4:	bx	lr

00013dd8 <table_compare_uint16@@Base>:
   13dd8:	cmp	r0, #0
   13ddc:	bne	13df0 <table_compare_uint16@@Base+0x18>
   13de0:	adds	r0, r1, #0
   13de4:	movne	r0, #1
   13de8:	rsb	r0, r0, #0
   13dec:	bx	lr
   13df0:	cmp	r1, #0
   13df4:	beq	13e14 <table_compare_uint16@@Base+0x3c>
   13df8:	ldrh	r2, [r0]
   13dfc:	ldrh	r3, [r1]
   13e00:	cmp	r2, r3
   13e04:	bhi	13e14 <table_compare_uint16@@Base+0x3c>
   13e08:	mvncc	r0, #0
   13e0c:	movcs	r0, #0
   13e10:	bx	lr
   13e14:	mov	r0, #1
   13e18:	bx	lr

00013e1c <table_compare_ulong@@Base>:
   13e1c:	cmp	r0, #0
   13e20:	bne	13e34 <table_compare_ulong@@Base+0x18>
   13e24:	adds	r0, r1, #0
   13e28:	movne	r0, #1
   13e2c:	rsb	r0, r0, #0
   13e30:	bx	lr
   13e34:	cmp	r1, #0
   13e38:	beq	13e58 <table_compare_ulong@@Base+0x3c>
   13e3c:	ldr	r2, [r0]
   13e40:	ldr	r3, [r1]
   13e44:	cmp	r2, r3
   13e48:	bhi	13e58 <table_compare_ulong@@Base+0x3c>
   13e4c:	mvncc	r0, #0
   13e50:	movcs	r0, #0
   13e54:	bx	lr
   13e58:	mov	r0, #1
   13e5c:	bx	lr

00013e60 <table_compare_int64@@Base>:
   13e60:	cmp	r0, #0
   13e64:	bne	13e78 <table_compare_int64@@Base+0x18>
   13e68:	adds	r0, r1, #0
   13e6c:	movne	r0, #1
   13e70:	rsb	r0, r0, #0
   13e74:	bx	lr
   13e78:	cmp	r1, #0
   13e7c:	beq	13eac <table_compare_int64@@Base+0x4c>
   13e80:	push	{r4, r5, lr}
   13e84:	ldrd	r2, [r1]
   13e88:	ldrd	r4, [r0]
   13e8c:	cmp	r2, r4
   13e90:	sbcs	r1, r3, r5
   13e94:	blt	13eb4 <table_compare_int64@@Base+0x54>
   13e98:	cmp	r4, r2
   13e9c:	sbcs	r3, r5, r3
   13ea0:	mvnlt	r0, #0
   13ea4:	movge	r0, #0
   13ea8:	pop	{r4, r5, pc}
   13eac:	mov	r0, #1
   13eb0:	bx	lr
   13eb4:	mov	r0, #1
   13eb8:	pop	{r4, r5, pc}

00013ebc <table_get_default_compare_function_for_data_type@@Base>:
   13ebc:	cmp	r0, #23
   13ec0:	ldrls	r3, [pc, #8]	; 13ed0 <table_get_default_compare_function_for_data_type@@Base+0x14>
   13ec4:	ldrls	r0, [r3, r0, lsl #2]
   13ec8:	movhi	r0, #0
   13ecc:	bx	lr
   13ed0:	andeq	r5, r1, r4, lsl #24

00013ed4 <table_subset_find@@Base>:
   13ed4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ed8:	mov	r4, r3
   13edc:	mov	r7, r0
   13ee0:	mov	r8, r1
   13ee4:	mov	r9, r2
   13ee8:	ldr	r5, [sp, #32]
   13eec:	ldr	sl, [sp, #36]	; 0x24
   13ef0:	bl	13828 <table_get_column_compare_function@@Base>
   13ef4:	cmp	r4, #0
   13ef8:	mov	r6, r0
   13efc:	movne	r4, sl
   13f00:	bne	13f70 <table_subset_find@@Base+0x9c>
   13f04:	mov	r4, r5
   13f08:	b	13f34 <table_subset_find@@Base+0x60>
   13f0c:	mov	r2, r8
   13f10:	mov	r1, r4
   13f14:	mov	r0, r7
   13f18:	bl	14888 <table_get@@Base>
   13f1c:	mov	r1, r0
   13f20:	mov	r0, r9
   13f24:	blx	r6
   13f28:	cmp	r0, #0
   13f2c:	beq	13f40 <table_subset_find@@Base+0x6c>
   13f30:	add	r4, r4, #1
   13f34:	cmp	r4, sl
   13f38:	ble	13f0c <table_subset_find@@Base+0x38>
   13f3c:	mvn	r4, #0
   13f40:	mov	r0, r4
   13f44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f48:	mov	r2, r8
   13f4c:	mov	r1, r4
   13f50:	mov	r0, r7
   13f54:	bl	14888 <table_get@@Base>
   13f58:	mov	r1, r0
   13f5c:	mov	r0, r9
   13f60:	blx	r6
   13f64:	cmp	r0, #0
   13f68:	beq	13f40 <table_subset_find@@Base+0x6c>
   13f6c:	sub	r4, r4, #1
   13f70:	cmp	r4, r5
   13f74:	bge	13f48 <table_subset_find@@Base+0x74>
   13f78:	b	13f3c <table_subset_find@@Base+0x68>

00013f7c <table_find@@Base>:
   13f7c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13f80:	mov	r7, r3
   13f84:	mov	r4, r0
   13f88:	mov	r5, r1
   13f8c:	mov	r6, r2
   13f90:	bl	14a10 <table_get_row_length@@Base>
   13f94:	sub	r0, r0, #1
   13f98:	mov	r3, #0
   13f9c:	mov	r2, r6
   13fa0:	mov	r1, r5
   13fa4:	str	r3, [sp]
   13fa8:	mov	r3, r7
   13fac:	str	r0, [sp, #4]
   13fb0:	mov	r0, r4
   13fb4:	bl	13ed4 <table_subset_find@@Base>
   13fb8:	add	sp, sp, #12
   13fbc:	pop	{r4, r5, r6, r7, pc}

00013fc0 <table_find_bool@@Base>:
   13fc0:	push	{r0, r1, r2, lr}
   13fc4:	strb	r2, [sp, #7]
   13fc8:	add	r2, sp, #7
   13fcc:	bl	13f7c <table_find@@Base>
   13fd0:	add	sp, sp, #12
   13fd4:	pop	{pc}		; (ldr pc, [sp], #4)

00013fd8 <table_find_int@@Base>:
   13fd8:	push	{r0, r1, r2, lr}
   13fdc:	str	r2, [sp, #4]
   13fe0:	add	r2, sp, #4
   13fe4:	bl	13f7c <table_find@@Base>
   13fe8:	add	sp, sp, #12
   13fec:	pop	{pc}		; (ldr pc, [sp], #4)

00013ff0 <table_find_uint@@Base>:
   13ff0:	push	{r0, r1, r2, lr}
   13ff4:	str	r2, [sp, #4]
   13ff8:	add	r2, sp, #4
   13ffc:	bl	13f7c <table_find@@Base>
   14000:	add	sp, sp, #12
   14004:	pop	{pc}		; (ldr pc, [sp], #4)

00014008 <table_find_int8@@Base>:
   14008:	push	{r0, r1, r2, lr}
   1400c:	strb	r2, [sp, #7]
   14010:	add	r2, sp, #7
   14014:	bl	13f7c <table_find@@Base>
   14018:	add	sp, sp, #12
   1401c:	pop	{pc}		; (ldr pc, [sp], #4)

00014020 <table_find_uint8@@Base>:
   14020:	push	{r0, r1, r2, lr}
   14024:	strb	r2, [sp, #7]
   14028:	add	r2, sp, #7
   1402c:	bl	13f7c <table_find@@Base>
   14030:	add	sp, sp, #12
   14034:	pop	{pc}		; (ldr pc, [sp], #4)

00014038 <table_find_int16@@Base>:
   14038:	push	{r0, r1, r2, lr}
   1403c:	strh	r2, [sp, #6]
   14040:	add	r2, sp, #6
   14044:	bl	13f7c <table_find@@Base>
   14048:	add	sp, sp, #12
   1404c:	pop	{pc}		; (ldr pc, [sp], #4)

00014050 <table_find_uint16@@Base>:
   14050:	push	{r0, r1, r2, lr}
   14054:	strh	r2, [sp, #6]
   14058:	add	r2, sp, #6
   1405c:	bl	13f7c <table_find@@Base>
   14060:	add	sp, sp, #12
   14064:	pop	{pc}		; (ldr pc, [sp], #4)

00014068 <table_find_int32@@Base>:
   14068:	push	{r0, r1, r2, lr}
   1406c:	str	r2, [sp, #4]
   14070:	add	r2, sp, #4
   14074:	bl	13f7c <table_find@@Base>
   14078:	add	sp, sp, #12
   1407c:	pop	{pc}		; (ldr pc, [sp], #4)

00014080 <table_find_uint32@@Base>:
   14080:	push	{r0, r1, r2, lr}
   14084:	str	r2, [sp, #4]
   14088:	add	r2, sp, #4
   1408c:	bl	13f7c <table_find@@Base>
   14090:	add	sp, sp, #12
   14094:	pop	{pc}		; (ldr pc, [sp], #4)

00014098 <table_find_int64@@Base>:
   14098:	push	{r0, r1, r2, lr}
   1409c:	strd	r2, [sp]
   140a0:	mov	r2, sp
   140a4:	ldr	r3, [sp, #16]
   140a8:	bl	13f7c <table_find@@Base>
   140ac:	add	sp, sp, #12
   140b0:	pop	{pc}		; (ldr pc, [sp], #4)

000140b4 <table_find_uint64@@Base>:
   140b4:	push	{r0, r1, r2, lr}
   140b8:	strd	r2, [sp]
   140bc:	mov	r2, sp
   140c0:	ldr	r3, [sp, #16]
   140c4:	bl	13f7c <table_find@@Base>
   140c8:	add	sp, sp, #12
   140cc:	pop	{pc}		; (ldr pc, [sp], #4)

000140d0 <table_find_short@@Base>:
   140d0:	push	{r0, r1, r2, lr}
   140d4:	strh	r2, [sp, #6]
   140d8:	add	r2, sp, #6
   140dc:	bl	13f7c <table_find@@Base>
   140e0:	add	sp, sp, #12
   140e4:	pop	{pc}		; (ldr pc, [sp], #4)

000140e8 <table_find_ushort@@Base>:
   140e8:	push	{r0, r1, r2, lr}
   140ec:	strh	r2, [sp, #6]
   140f0:	add	r2, sp, #6
   140f4:	bl	13f7c <table_find@@Base>
   140f8:	add	sp, sp, #12
   140fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014100 <table_find_long@@Base>:
   14100:	push	{r0, r1, r2, lr}
   14104:	str	r2, [sp, #4]
   14108:	add	r2, sp, #4
   1410c:	bl	13f7c <table_find@@Base>
   14110:	add	sp, sp, #12
   14114:	pop	{pc}		; (ldr pc, [sp], #4)

00014118 <table_find_ulong@@Base>:
   14118:	push	{r0, r1, r2, lr}
   1411c:	str	r2, [sp, #4]
   14120:	add	r2, sp, #4
   14124:	bl	13f7c <table_find@@Base>
   14128:	add	sp, sp, #12
   1412c:	pop	{pc}		; (ldr pc, [sp], #4)

00014130 <table_find_llong@@Base>:
   14130:	push	{r0, r1, r2, lr}
   14134:	strd	r2, [sp]
   14138:	mov	r2, sp
   1413c:	ldr	r3, [sp, #16]
   14140:	bl	13f7c <table_find@@Base>
   14144:	add	sp, sp, #12
   14148:	pop	{pc}		; (ldr pc, [sp], #4)

0001414c <table_find_ullong@@Base>:
   1414c:	push	{r0, r1, r2, lr}
   14150:	strd	r2, [sp]
   14154:	mov	r2, sp
   14158:	ldr	r3, [sp, #16]
   1415c:	bl	13f7c <table_find@@Base>
   14160:	add	sp, sp, #12
   14164:	pop	{pc}		; (ldr pc, [sp], #4)

00014168 <table_find_float@@Base>:
   14168:	push	{r0, r1, r2, lr}
   1416c:	mov	r3, r2
   14170:	add	r2, sp, #4
   14174:	vstr	s0, [sp, #4]
   14178:	bl	13f7c <table_find@@Base>
   1417c:	add	sp, sp, #12
   14180:	pop	{pc}		; (ldr pc, [sp], #4)

00014184 <table_find_double@@Base>:
   14184:	push	{r0, r1, r2, lr}
   14188:	mov	r3, r2
   1418c:	mov	r2, sp
   14190:	vstr	d0, [sp]
   14194:	bl	13f7c <table_find@@Base>
   14198:	add	sp, sp, #12
   1419c:	pop	{pc}		; (ldr pc, [sp], #4)

000141a0 <table_find_ldouble@@Base>:
   141a0:	push	{r0, r1, r2, lr}
   141a4:	mov	r3, r2
   141a8:	mov	r2, sp
   141ac:	vstr	d0, [sp]
   141b0:	bl	13f7c <table_find@@Base>
   141b4:	add	sp, sp, #12
   141b8:	pop	{pc}		; (ldr pc, [sp], #4)

000141bc <table_find_char@@Base>:
   141bc:	push	{r0, r1, r2, lr}
   141c0:	strb	r2, [sp, #7]
   141c4:	add	r2, sp, #7
   141c8:	bl	13f7c <table_find@@Base>
   141cc:	add	sp, sp, #12
   141d0:	pop	{pc}		; (ldr pc, [sp], #4)

000141d4 <table_find_uchar@@Base>:
   141d4:	push	{r0, r1, r2, lr}
   141d8:	strb	r2, [sp, #7]
   141dc:	add	r2, sp, #7
   141e0:	bl	13f7c <table_find@@Base>
   141e4:	add	sp, sp, #12
   141e8:	pop	{pc}		; (ldr pc, [sp], #4)

000141ec <table_find_string@@Base>:
   141ec:	push	{r0, r1, r2, lr}
   141f0:	str	r2, [sp, #4]
   141f4:	add	r2, sp, #4
   141f8:	bl	13f7c <table_find@@Base>
   141fc:	add	sp, sp, #12
   14200:	pop	{pc}		; (ldr pc, [sp], #4)

00014204 <table_find_ptr@@Base>:
   14204:	b	13f7c <table_find@@Base>

00014208 <table_sorted_subset_find@@Base>:
   14208:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1420c:	mov	r5, r0
   14210:	mov	r6, r1
   14214:	mov	r8, r2
   14218:	mov	sl, r3
   1421c:	ldr	fp, [sp, #40]	; 0x28
   14220:	ldr	r7, [sp, #44]	; 0x2c
   14224:	sub	r4, r7, fp
   14228:	mov	r1, r6
   1422c:	add	r4, r4, r4, lsr #31
   14230:	mov	r0, r5
   14234:	bl	13828 <table_get_column_compare_function@@Base>
   14238:	add	r4, fp, r4, asr #1
   1423c:	mov	r9, r0
   14240:	mov	r2, r6
   14244:	mov	r0, r5
   14248:	mov	r1, r4
   1424c:	bl	14888 <table_get@@Base>
   14250:	mov	r1, r0
   14254:	mov	r0, r8
   14258:	blx	r9
   1425c:	cmp	r7, fp
   14260:	bge	1426c <table_sorted_subset_find@@Base+0x64>
   14264:	rsb	r0, r4, #0
   14268:	b	142cc <table_sorted_subset_find@@Base+0xc4>
   1426c:	cmp	r0, #0
   14270:	beq	14294 <table_sorted_subset_find@@Base+0x8c>
   14274:	cmp	r0, #1
   14278:	beq	1428c <table_sorted_subset_find@@Base+0x84>
   1427c:	cmn	r0, #1
   14280:	bne	14264 <table_sorted_subset_find@@Base+0x5c>
   14284:	sub	r7, r4, #1
   14288:	mov	r4, fp
   1428c:	mov	fp, r4
   14290:	b	14224 <table_sorted_subset_find@@Base+0x1c>
   14294:	cmp	sl, #0
   14298:	mov	r2, r6
   1429c:	subeq	r4, r4, #1
   142a0:	addne	r4, r4, #1
   142a4:	mov	r1, r4
   142a8:	mov	r0, r5
   142ac:	bl	14888 <table_get@@Base>
   142b0:	mov	r1, r8
   142b4:	blx	r9
   142b8:	cmp	r0, #0
   142bc:	beq	14294 <table_sorted_subset_find@@Base+0x8c>
   142c0:	cmp	sl, #0
   142c4:	addeq	r0, r4, #1
   142c8:	subne	r0, r4, #1
   142cc:	add	sp, sp, #4
   142d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000142d4 <table_sorted_find@@Base>:
   142d4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   142d8:	mov	r7, r3
   142dc:	mov	r4, r0
   142e0:	mov	r5, r1
   142e4:	mov	r6, r2
   142e8:	bl	14a10 <table_get_row_length@@Base>
   142ec:	sub	r0, r0, #1
   142f0:	mov	r3, #0
   142f4:	mov	r2, r6
   142f8:	mov	r1, r5
   142fc:	str	r3, [sp]
   14300:	mov	r3, r7
   14304:	str	r0, [sp, #4]
   14308:	mov	r0, r4
   1430c:	bl	14208 <table_sorted_subset_find@@Base>
   14310:	add	sp, sp, #12
   14314:	pop	{r4, r5, r6, r7, pc}

00014318 <table_sorted_find_int@@Base>:
   14318:	push	{r0, r1, r2, lr}
   1431c:	str	r2, [sp, #4]
   14320:	add	r2, sp, #4
   14324:	bl	142d4 <table_sorted_find@@Base>
   14328:	add	sp, sp, #12
   1432c:	pop	{pc}		; (ldr pc, [sp], #4)

00014330 <table_sorted_find_uint@@Base>:
   14330:	push	{r0, r1, r2, lr}
   14334:	str	r2, [sp, #4]
   14338:	add	r2, sp, #4
   1433c:	bl	142d4 <table_sorted_find@@Base>
   14340:	add	sp, sp, #12
   14344:	pop	{pc}		; (ldr pc, [sp], #4)

00014348 <table_sorted_find_int8@@Base>:
   14348:	push	{r0, r1, r2, lr}
   1434c:	strb	r2, [sp, #7]
   14350:	add	r2, sp, #7
   14354:	bl	142d4 <table_sorted_find@@Base>
   14358:	add	sp, sp, #12
   1435c:	pop	{pc}		; (ldr pc, [sp], #4)

00014360 <table_sorted_find_uint8@@Base>:
   14360:	push	{r0, r1, r2, lr}
   14364:	strb	r2, [sp, #7]
   14368:	add	r2, sp, #7
   1436c:	bl	142d4 <table_sorted_find@@Base>
   14370:	add	sp, sp, #12
   14374:	pop	{pc}		; (ldr pc, [sp], #4)

00014378 <table_sorted_find_int16@@Base>:
   14378:	push	{r0, r1, r2, lr}
   1437c:	strh	r2, [sp, #6]
   14380:	add	r2, sp, #6
   14384:	bl	142d4 <table_sorted_find@@Base>
   14388:	add	sp, sp, #12
   1438c:	pop	{pc}		; (ldr pc, [sp], #4)

00014390 <table_sorted_find_uint16@@Base>:
   14390:	push	{r0, r1, r2, lr}
   14394:	strh	r2, [sp, #6]
   14398:	add	r2, sp, #6
   1439c:	bl	142d4 <table_sorted_find@@Base>
   143a0:	add	sp, sp, #12
   143a4:	pop	{pc}		; (ldr pc, [sp], #4)

000143a8 <table_sorted_find_int32@@Base>:
   143a8:	push	{r0, r1, r2, lr}
   143ac:	str	r2, [sp, #4]
   143b0:	add	r2, sp, #4
   143b4:	bl	142d4 <table_sorted_find@@Base>
   143b8:	add	sp, sp, #12
   143bc:	pop	{pc}		; (ldr pc, [sp], #4)

000143c0 <table_sorted_find_uint32@@Base>:
   143c0:	push	{r0, r1, r2, lr}
   143c4:	str	r2, [sp, #4]
   143c8:	add	r2, sp, #4
   143cc:	bl	142d4 <table_sorted_find@@Base>
   143d0:	add	sp, sp, #12
   143d4:	pop	{pc}		; (ldr pc, [sp], #4)

000143d8 <table_sorted_find_int64@@Base>:
   143d8:	push	{r0, r1, r2, lr}
   143dc:	strd	r2, [sp]
   143e0:	mov	r2, sp
   143e4:	ldr	r3, [sp, #16]
   143e8:	bl	142d4 <table_sorted_find@@Base>
   143ec:	add	sp, sp, #12
   143f0:	pop	{pc}		; (ldr pc, [sp], #4)

000143f4 <table_sorted_find_uint64@@Base>:
   143f4:	push	{r0, r1, r2, lr}
   143f8:	strd	r2, [sp]
   143fc:	mov	r2, sp
   14400:	ldr	r3, [sp, #16]
   14404:	bl	142d4 <table_sorted_find@@Base>
   14408:	add	sp, sp, #12
   1440c:	pop	{pc}		; (ldr pc, [sp], #4)

00014410 <table_sorted_find_short@@Base>:
   14410:	push	{r0, r1, r2, lr}
   14414:	strh	r2, [sp, #6]
   14418:	add	r2, sp, #6
   1441c:	bl	142d4 <table_sorted_find@@Base>
   14420:	add	sp, sp, #12
   14424:	pop	{pc}		; (ldr pc, [sp], #4)

00014428 <table_sorted_find_ushort@@Base>:
   14428:	push	{r0, r1, r2, lr}
   1442c:	strh	r2, [sp, #6]
   14430:	add	r2, sp, #6
   14434:	bl	142d4 <table_sorted_find@@Base>
   14438:	add	sp, sp, #12
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)

00014440 <table_sorted_find_long@@Base>:
   14440:	push	{r0, r1, r2, lr}
   14444:	str	r2, [sp, #4]
   14448:	add	r2, sp, #4
   1444c:	bl	142d4 <table_sorted_find@@Base>
   14450:	add	sp, sp, #12
   14454:	pop	{pc}		; (ldr pc, [sp], #4)

00014458 <table_sorted_find_ulong@@Base>:
   14458:	push	{r0, r1, r2, lr}
   1445c:	str	r2, [sp, #4]
   14460:	add	r2, sp, #4
   14464:	bl	142d4 <table_sorted_find@@Base>
   14468:	add	sp, sp, #12
   1446c:	pop	{pc}		; (ldr pc, [sp], #4)

00014470 <table_sorted_find_llong@@Base>:
   14470:	push	{r0, r1, r2, lr}
   14474:	strd	r2, [sp]
   14478:	mov	r2, sp
   1447c:	ldr	r3, [sp, #16]
   14480:	bl	142d4 <table_sorted_find@@Base>
   14484:	add	sp, sp, #12
   14488:	pop	{pc}		; (ldr pc, [sp], #4)

0001448c <table_sorted_find_ullong@@Base>:
   1448c:	push	{r0, r1, r2, lr}
   14490:	strd	r2, [sp]
   14494:	mov	r2, sp
   14498:	ldr	r3, [sp, #16]
   1449c:	bl	142d4 <table_sorted_find@@Base>
   144a0:	add	sp, sp, #12
   144a4:	pop	{pc}		; (ldr pc, [sp], #4)

000144a8 <table_sorted_find_float@@Base>:
   144a8:	push	{r0, r1, r2, lr}
   144ac:	mov	r3, r2
   144b0:	add	r2, sp, #4
   144b4:	vstr	s0, [sp, #4]
   144b8:	bl	142d4 <table_sorted_find@@Base>
   144bc:	add	sp, sp, #12
   144c0:	pop	{pc}		; (ldr pc, [sp], #4)

000144c4 <table_sorted_find_double@@Base>:
   144c4:	push	{r0, r1, r2, lr}
   144c8:	mov	r3, r2
   144cc:	mov	r2, sp
   144d0:	vstr	d0, [sp]
   144d4:	bl	142d4 <table_sorted_find@@Base>
   144d8:	add	sp, sp, #12
   144dc:	pop	{pc}		; (ldr pc, [sp], #4)

000144e0 <table_sorted_find_ldouble@@Base>:
   144e0:	push	{r0, r1, r2, lr}
   144e4:	mov	r3, r2
   144e8:	mov	r2, sp
   144ec:	vstr	d0, [sp]
   144f0:	bl	142d4 <table_sorted_find@@Base>
   144f4:	add	sp, sp, #12
   144f8:	pop	{pc}		; (ldr pc, [sp], #4)

000144fc <table_sorted_find_char@@Base>:
   144fc:	push	{r0, r1, r2, lr}
   14500:	strb	r2, [sp, #7]
   14504:	add	r2, sp, #7
   14508:	bl	142d4 <table_sorted_find@@Base>
   1450c:	add	sp, sp, #12
   14510:	pop	{pc}		; (ldr pc, [sp], #4)

00014514 <table_sorted_find_uchar@@Base>:
   14514:	push	{r0, r1, r2, lr}
   14518:	strb	r2, [sp, #7]
   1451c:	add	r2, sp, #7
   14520:	bl	142d4 <table_sorted_find@@Base>
   14524:	add	sp, sp, #12
   14528:	pop	{pc}		; (ldr pc, [sp], #4)

0001452c <table_sorted_find_string@@Base>:
   1452c:	b	142d4 <table_sorted_find@@Base>

00014530 <table_sorted_find_ptr@@Base>:
   14530:	b	142d4 <table_sorted_find@@Base>

00014534 <table_sorted_subset_find_int@@Base>:
   14534:	push	{r0, r1, r2, r3, r4, lr}
   14538:	str	r2, [sp, #12]
   1453c:	ldr	r2, [sp, #28]
   14540:	str	r2, [sp, #4]
   14544:	ldr	r2, [sp, #24]
   14548:	str	r2, [sp]
   1454c:	add	r2, sp, #12
   14550:	bl	14208 <table_sorted_subset_find@@Base>
   14554:	add	sp, sp, #20
   14558:	pop	{pc}		; (ldr pc, [sp], #4)

0001455c <table_sorted_subset_find_uint@@Base>:
   1455c:	push	{r0, r1, r2, r3, r4, lr}
   14560:	str	r2, [sp, #12]
   14564:	ldr	r2, [sp, #28]
   14568:	str	r2, [sp, #4]
   1456c:	ldr	r2, [sp, #24]
   14570:	str	r2, [sp]
   14574:	add	r2, sp, #12
   14578:	bl	14208 <table_sorted_subset_find@@Base>
   1457c:	add	sp, sp, #20
   14580:	pop	{pc}		; (ldr pc, [sp], #4)

00014584 <table_sorted_subset_find_int8@@Base>:
   14584:	push	{r0, r1, r2, r3, r4, lr}
   14588:	strb	r2, [sp, #15]
   1458c:	ldr	r2, [sp, #28]
   14590:	str	r2, [sp, #4]
   14594:	ldr	r2, [sp, #24]
   14598:	str	r2, [sp]
   1459c:	add	r2, sp, #15
   145a0:	bl	14208 <table_sorted_subset_find@@Base>
   145a4:	add	sp, sp, #20
   145a8:	pop	{pc}		; (ldr pc, [sp], #4)

000145ac <table_sorted_subset_find_uint8@@Base>:
   145ac:	push	{r0, r1, r2, r3, r4, lr}
   145b0:	strb	r2, [sp, #15]
   145b4:	ldr	r2, [sp, #28]
   145b8:	str	r2, [sp, #4]
   145bc:	ldr	r2, [sp, #24]
   145c0:	str	r2, [sp]
   145c4:	add	r2, sp, #15
   145c8:	bl	14208 <table_sorted_subset_find@@Base>
   145cc:	add	sp, sp, #20
   145d0:	pop	{pc}		; (ldr pc, [sp], #4)

000145d4 <table_sorted_subset_find_int16@@Base>:
   145d4:	push	{r0, r1, r2, r3, r4, lr}
   145d8:	strh	r2, [sp, #14]
   145dc:	ldr	r2, [sp, #28]
   145e0:	str	r2, [sp, #4]
   145e4:	ldr	r2, [sp, #24]
   145e8:	str	r2, [sp]
   145ec:	add	r2, sp, #14
   145f0:	bl	14208 <table_sorted_subset_find@@Base>
   145f4:	add	sp, sp, #20
   145f8:	pop	{pc}		; (ldr pc, [sp], #4)

000145fc <table_sorted_subset_find_uint16@@Base>:
   145fc:	push	{r0, r1, r2, r3, r4, lr}
   14600:	strh	r2, [sp, #14]
   14604:	ldr	r2, [sp, #28]
   14608:	str	r2, [sp, #4]
   1460c:	ldr	r2, [sp, #24]
   14610:	str	r2, [sp]
   14614:	add	r2, sp, #14
   14618:	bl	14208 <table_sorted_subset_find@@Base>
   1461c:	add	sp, sp, #20
   14620:	pop	{pc}		; (ldr pc, [sp], #4)

00014624 <table_sorted_subset_find_int32@@Base>:
   14624:	push	{r0, r1, r2, r3, r4, lr}
   14628:	str	r2, [sp, #12]
   1462c:	ldr	r2, [sp, #28]
   14630:	str	r2, [sp, #4]
   14634:	ldr	r2, [sp, #24]
   14638:	str	r2, [sp]
   1463c:	add	r2, sp, #12
   14640:	bl	14208 <table_sorted_subset_find@@Base>
   14644:	add	sp, sp, #20
   14648:	pop	{pc}		; (ldr pc, [sp], #4)

0001464c <table_sorted_subset_find_uint32@@Base>:
   1464c:	push	{r0, r1, r2, r3, r4, lr}
   14650:	str	r2, [sp, #12]
   14654:	ldr	r2, [sp, #28]
   14658:	str	r2, [sp, #4]
   1465c:	ldr	r2, [sp, #24]
   14660:	str	r2, [sp]
   14664:	add	r2, sp, #12
   14668:	bl	14208 <table_sorted_subset_find@@Base>
   1466c:	add	sp, sp, #20
   14670:	pop	{pc}		; (ldr pc, [sp], #4)

00014674 <table_sorted_subset_find_int64@@Base>:
   14674:	push	{r0, r1, r2, r3, r4, lr}
   14678:	strd	r2, [sp, #8]
   1467c:	add	r2, sp, #8
   14680:	ldr	r3, [sp, #32]
   14684:	str	r3, [sp, #4]
   14688:	ldr	r3, [sp, #28]
   1468c:	str	r3, [sp]
   14690:	ldr	r3, [sp, #24]
   14694:	bl	14208 <table_sorted_subset_find@@Base>
   14698:	add	sp, sp, #20
   1469c:	pop	{pc}		; (ldr pc, [sp], #4)

000146a0 <table_sorted_subset_find_uint64@@Base>:
   146a0:	push	{r0, r1, r2, r3, r4, lr}
   146a4:	strd	r2, [sp, #8]
   146a8:	add	r2, sp, #8
   146ac:	ldr	r3, [sp, #32]
   146b0:	str	r3, [sp, #4]
   146b4:	ldr	r3, [sp, #28]
   146b8:	str	r3, [sp]
   146bc:	ldr	r3, [sp, #24]
   146c0:	bl	14208 <table_sorted_subset_find@@Base>
   146c4:	add	sp, sp, #20
   146c8:	pop	{pc}		; (ldr pc, [sp], #4)

000146cc <table_sorted_subset_find_short@@Base>:
   146cc:	push	{r0, r1, r2, r3, r4, lr}
   146d0:	strh	r2, [sp, #14]
   146d4:	ldr	r2, [sp, #28]
   146d8:	str	r2, [sp, #4]
   146dc:	ldr	r2, [sp, #24]
   146e0:	str	r2, [sp]
   146e4:	add	r2, sp, #14
   146e8:	bl	14208 <table_sorted_subset_find@@Base>
   146ec:	add	sp, sp, #20
   146f0:	pop	{pc}		; (ldr pc, [sp], #4)

000146f4 <table_sorted_subset_find_ushort@@Base>:
   146f4:	push	{r0, r1, r2, r3, r4, lr}
   146f8:	strh	r2, [sp, #14]
   146fc:	ldr	r2, [sp, #28]
   14700:	str	r2, [sp, #4]
   14704:	ldr	r2, [sp, #24]
   14708:	str	r2, [sp]
   1470c:	add	r2, sp, #14
   14710:	bl	14208 <table_sorted_subset_find@@Base>
   14714:	add	sp, sp, #20
   14718:	pop	{pc}		; (ldr pc, [sp], #4)

0001471c <table_sorted_subset_find_long@@Base>:
   1471c:	push	{r0, r1, r2, r3, r4, lr}
   14720:	str	r2, [sp, #12]
   14724:	ldr	r2, [sp, #28]
   14728:	str	r2, [sp, #4]
   1472c:	ldr	r2, [sp, #24]
   14730:	str	r2, [sp]
   14734:	add	r2, sp, #12
   14738:	bl	14208 <table_sorted_subset_find@@Base>
   1473c:	add	sp, sp, #20
   14740:	pop	{pc}		; (ldr pc, [sp], #4)

00014744 <table_sorted_subset_find_ulong@@Base>:
   14744:	push	{r0, r1, r2, r3, r4, lr}
   14748:	str	r2, [sp, #12]
   1474c:	ldr	r2, [sp, #28]
   14750:	str	r2, [sp, #4]
   14754:	ldr	r2, [sp, #24]
   14758:	str	r2, [sp]
   1475c:	add	r2, sp, #12
   14760:	bl	14208 <table_sorted_subset_find@@Base>
   14764:	add	sp, sp, #20
   14768:	pop	{pc}		; (ldr pc, [sp], #4)

0001476c <table_sorted_subset_find_llong@@Base>:
   1476c:	push	{r0, r1, r2, r3, r4, lr}
   14770:	strd	r2, [sp, #8]
   14774:	add	r2, sp, #8
   14778:	ldr	r3, [sp, #32]
   1477c:	str	r3, [sp, #4]
   14780:	ldr	r3, [sp, #28]
   14784:	str	r3, [sp]
   14788:	ldr	r3, [sp, #24]
   1478c:	bl	14208 <table_sorted_subset_find@@Base>
   14790:	add	sp, sp, #20
   14794:	pop	{pc}		; (ldr pc, [sp], #4)

00014798 <table_sorted_subset_find_ullong@@Base>:
   14798:	push	{r0, r1, r2, r3, r4, lr}
   1479c:	strd	r2, [sp, #8]
   147a0:	add	r2, sp, #8
   147a4:	ldr	r3, [sp, #32]
   147a8:	str	r3, [sp, #4]
   147ac:	ldr	r3, [sp, #28]
   147b0:	str	r3, [sp]
   147b4:	ldr	r3, [sp, #24]
   147b8:	bl	14208 <table_sorted_subset_find@@Base>
   147bc:	add	sp, sp, #20
   147c0:	pop	{pc}		; (ldr pc, [sp], #4)

000147c4 <table_sorted_subset_find_float@@Base>:
   147c4:	push	{r0, r1, r2, r3, r4, lr}
   147c8:	ldr	ip, [sp, #24]
   147cc:	stm	sp, {r3, ip}
   147d0:	mov	r3, r2
   147d4:	add	r2, sp, #12
   147d8:	vstr	s0, [sp, #12]
   147dc:	bl	14208 <table_sorted_subset_find@@Base>
   147e0:	add	sp, sp, #20
   147e4:	pop	{pc}		; (ldr pc, [sp], #4)

000147e8 <table_sorted_subset_find_double@@Base>:
   147e8:	push	{r0, r1, r2, r3, r4, lr}
   147ec:	ldr	ip, [sp, #24]
   147f0:	stm	sp, {r3, ip}
   147f4:	mov	r3, r2
   147f8:	add	r2, sp, #8
   147fc:	vstr	d0, [sp, #8]
   14800:	bl	14208 <table_sorted_subset_find@@Base>
   14804:	add	sp, sp, #20
   14808:	pop	{pc}		; (ldr pc, [sp], #4)

0001480c <table_sorted_subset_find_ldouble@@Base>:
   1480c:	push	{r0, r1, r2, r3, r4, lr}
   14810:	ldr	ip, [sp, #24]
   14814:	stm	sp, {r3, ip}
   14818:	mov	r3, r2
   1481c:	add	r2, sp, #8
   14820:	vstr	d0, [sp, #8]
   14824:	bl	14208 <table_sorted_subset_find@@Base>
   14828:	add	sp, sp, #20
   1482c:	pop	{pc}		; (ldr pc, [sp], #4)

00014830 <table_sorted_subset_find_char@@Base>:
   14830:	push	{r0, r1, r2, r3, r4, lr}
   14834:	strb	r2, [sp, #15]
   14838:	ldr	r2, [sp, #28]
   1483c:	str	r2, [sp, #4]
   14840:	ldr	r2, [sp, #24]
   14844:	str	r2, [sp]
   14848:	add	r2, sp, #15
   1484c:	bl	14208 <table_sorted_subset_find@@Base>
   14850:	add	sp, sp, #20
   14854:	pop	{pc}		; (ldr pc, [sp], #4)

00014858 <table_sorted_subset_find_uchar@@Base>:
   14858:	push	{r0, r1, r2, r3, r4, lr}
   1485c:	strb	r2, [sp, #15]
   14860:	ldr	r2, [sp, #28]
   14864:	str	r2, [sp, #4]
   14868:	ldr	r2, [sp, #24]
   1486c:	str	r2, [sp]
   14870:	add	r2, sp, #15
   14874:	bl	14208 <table_sorted_subset_find@@Base>
   14878:	add	sp, sp, #20
   1487c:	pop	{pc}		; (ldr pc, [sp], #4)

00014880 <table_sorted_subset_find_string@@Base>:
   14880:	b	14208 <table_sorted_subset_find@@Base>

00014884 <table_sorted_subset_find_ptr@@Base>:
   14884:	b	14208 <table_sorted_subset_find@@Base>

00014888 <table_get@@Base>:
   14888:	push	{r4, lr}
   1488c:	bl	15a08 <table_get_cell_ptr@@Base>
   14890:	ldr	r0, [r0]
   14894:	pop	{r4, pc}

00014898 <table_get_bool@@Base>:
   14898:	push	{r4, lr}
   1489c:	bl	14888 <table_get@@Base>
   148a0:	ldrb	r0, [r0]
   148a4:	pop	{r4, pc}

000148a8 <table_get_int@@Base>:
   148a8:	push	{r4, lr}
   148ac:	bl	14888 <table_get@@Base>
   148b0:	ldr	r0, [r0]
   148b4:	pop	{r4, pc}

000148b8 <table_get_uint@@Base>:
   148b8:	push	{r4, lr}
   148bc:	bl	14888 <table_get@@Base>
   148c0:	ldr	r0, [r0]
   148c4:	pop	{r4, pc}

000148c8 <table_get_int8@@Base>:
   148c8:	push	{r4, lr}
   148cc:	bl	14888 <table_get@@Base>
   148d0:	ldrsb	r0, [r0]
   148d4:	pop	{r4, pc}

000148d8 <table_get_uint8@@Base>:
   148d8:	push	{r4, lr}
   148dc:	bl	14888 <table_get@@Base>
   148e0:	ldrb	r0, [r0]
   148e4:	pop	{r4, pc}

000148e8 <table_get_int16@@Base>:
   148e8:	push	{r4, lr}
   148ec:	bl	14888 <table_get@@Base>
   148f0:	ldrsh	r0, [r0]
   148f4:	pop	{r4, pc}

000148f8 <table_get_uint16@@Base>:
   148f8:	push	{r4, lr}
   148fc:	bl	14888 <table_get@@Base>
   14900:	ldrh	r0, [r0]
   14904:	pop	{r4, pc}

00014908 <table_get_int32@@Base>:
   14908:	b	148a8 <table_get_int@@Base>

0001490c <table_get_uint32@@Base>:
   1490c:	b	148b8 <table_get_uint@@Base>

00014910 <table_get_int64@@Base>:
   14910:	push	{r4, lr}
   14914:	bl	14888 <table_get@@Base>
   14918:	ldrd	r0, [r0]
   1491c:	pop	{r4, pc}

00014920 <table_get_uint64@@Base>:
   14920:	push	{r4, lr}
   14924:	bl	14888 <table_get@@Base>
   14928:	ldrd	r0, [r0]
   1492c:	pop	{r4, pc}

00014930 <table_get_short@@Base>:
   14930:	b	148e8 <table_get_int16@@Base>

00014934 <table_get_ushort@@Base>:
   14934:	b	148f8 <table_get_uint16@@Base>

00014938 <table_get_long@@Base>:
   14938:	push	{r4, lr}
   1493c:	bl	14888 <table_get@@Base>
   14940:	ldr	r0, [r0]
   14944:	pop	{r4, pc}

00014948 <table_get_ulong@@Base>:
   14948:	push	{r4, lr}
   1494c:	bl	14888 <table_get@@Base>
   14950:	ldr	r0, [r0]
   14954:	pop	{r4, pc}

00014958 <table_get_llong@@Base>:
   14958:	b	14910 <table_get_int64@@Base>

0001495c <table_get_ullong@@Base>:
   1495c:	b	14920 <table_get_uint64@@Base>

00014960 <table_get_float@@Base>:
   14960:	push	{r4, lr}
   14964:	bl	14888 <table_get@@Base>
   14968:	vldr	s0, [r0]
   1496c:	pop	{r4, pc}

00014970 <table_get_double@@Base>:
   14970:	push	{r4, lr}
   14974:	bl	14888 <table_get@@Base>
   14978:	vldr	d0, [r0]
   1497c:	pop	{r4, pc}

00014980 <table_get_ldouble@@Base>:
   14980:	push	{r4, lr}
   14984:	bl	14888 <table_get@@Base>
   14988:	vldr	d0, [r0]
   1498c:	pop	{r4, pc}

00014990 <table_get_char@@Base>:
   14990:	b	148d8 <table_get_uint8@@Base>

00014994 <table_get_uchar@@Base>:
   14994:	b	148d8 <table_get_uint8@@Base>

00014998 <table_get_string@@Base>:
   14998:	b	14888 <table_get@@Base>

0001499c <table_get_ptr@@Base>:
   1499c:	b	14888 <table_get@@Base>

000149a0 <table_row_init@@Base>:
   149a0:	push	{r4, r5, r6, lr}
   149a4:	mov	r5, r1
   149a8:	ldr	r4, [r0, #16]
   149ac:	ldr	r0, [r0, #12]
   149b0:	lsl	r0, r0, #2
   149b4:	bl	1293c <malloc@plt>
   149b8:	str	r0, [r4, r5, lsl #2]
   149bc:	pop	{r4, r5, r6, pc}

000149c0 <table_row_destroy@@Base>:
   149c0:	push	{r4, r5, r6, r7, r8, lr}
   149c4:	mov	r6, r0
   149c8:	mov	r5, r1
   149cc:	mov	r4, #0
   149d0:	bl	13540 <table_get_column_length@@Base>
   149d4:	ldr	r7, [r6, #16]
   149d8:	mov	r8, r0
   149dc:	cmp	r4, r8
   149e0:	blt	149f8 <table_row_destroy@@Base+0x38>
   149e4:	ldr	r0, [r7, r5, lsl #2]
   149e8:	cmp	r0, #0
   149ec:	popeq	{r4, r5, r6, r7, r8, pc}
   149f0:	pop	{r4, r5, r6, r7, r8, lr}
   149f4:	b	12918 <free@plt>
   149f8:	mov	r2, r4
   149fc:	mov	r1, r5
   14a00:	mov	r0, r6
   14a04:	add	r4, r4, #1
   14a08:	bl	15a34 <table_cell_destroy@@Base>
   14a0c:	b	149dc <table_row_destroy@@Base+0x1c>

00014a10 <table_get_row_length@@Base>:
   14a10:	ldr	r0, [r0, #20]
   14a14:	bx	lr

00014a18 <table_add_row@@Base>:
   14a18:	ldr	r2, [r0, #20]
   14a1c:	push	{r4, r5, r6, r7, r8, lr}
   14a20:	mov	r4, r0
   14a24:	ldr	r1, [r0, #24]
   14a28:	udiv	r3, r2, r1
   14a2c:	mls	r3, r1, r3, r2
   14a30:	cmp	r3, #0
   14a34:	bne	14a54 <table_add_row@@Base+0x3c>
   14a38:	ldr	r3, [r4, #28]
   14a3c:	ldr	r0, [r0, #16]
   14a40:	add	r1, r1, r3
   14a44:	str	r1, [r4, #28]
   14a48:	lsl	r1, r1, #2
   14a4c:	bl	12924 <realloc@plt>
   14a50:	str	r0, [r4, #16]
   14a54:	ldr	r6, [r4, #20]
   14a58:	mov	r0, r4
   14a5c:	mov	r5, #0
   14a60:	bl	13540 <table_get_column_length@@Base>
   14a64:	mov	r7, r0
   14a68:	mov	r0, r4
   14a6c:	mov	r1, r6
   14a70:	bl	149a0 <table_row_init@@Base>
   14a74:	cmp	r7, r5
   14a78:	bgt	14aa0 <table_add_row@@Base+0x88>
   14a7c:	mov	r0, r4
   14a80:	mov	r3, #2
   14a84:	ldr	r1, [r4, #20]
   14a88:	mvn	r2, #0
   14a8c:	bl	13468 <table_notify@@Base>
   14a90:	ldr	r0, [r4, #20]
   14a94:	add	r3, r0, #1
   14a98:	str	r3, [r4, #20]
   14a9c:	pop	{r4, r5, r6, r7, r8, pc}
   14aa0:	mov	r2, r5
   14aa4:	mov	r1, r6
   14aa8:	mov	r0, r4
   14aac:	add	r5, r5, #1
   14ab0:	bl	15a20 <table_cell_init@@Base>
   14ab4:	b	14a74 <table_add_row@@Base+0x5c>

00014ab8 <table_remove_row@@Base>:
   14ab8:	push	{r4, r5, r6, r7, r8, lr}
   14abc:	mov	r4, r0
   14ac0:	mov	r6, r1
   14ac4:	mov	r5, #0
   14ac8:	ldr	r7, [r0, #20]
   14acc:	bl	13540 <table_get_column_length@@Base>
   14ad0:	mov	r8, r0
   14ad4:	cmp	r8, r5
   14ad8:	bgt	14b58 <table_remove_row@@Base+0xa0>
   14adc:	ldr	r3, [r4, #16]
   14ae0:	ldr	r0, [r3, r6, lsl #2]
   14ae4:	cmp	r0, #0
   14ae8:	beq	14af0 <table_remove_row@@Base+0x38>
   14aec:	bl	12918 <free@plt>
   14af0:	mov	r3, r6
   14af4:	sub	r7, r7, #1
   14af8:	cmp	r3, r7
   14afc:	blt	14b94 <table_remove_row@@Base+0xdc>
   14b00:	ldr	r3, [r4, #20]
   14b04:	ldr	r2, [r4, #24]
   14b08:	sub	r3, r3, #1
   14b0c:	udiv	r1, r3, r2
   14b10:	str	r3, [r4, #20]
   14b14:	mls	r3, r2, r1, r3
   14b18:	cmp	r3, #0
   14b1c:	bne	14b3c <table_remove_row@@Base+0x84>
   14b20:	ldr	r0, [r4, #16]
   14b24:	ldr	r1, [r4, #28]
   14b28:	sub	r1, r1, r2
   14b2c:	str	r1, [r4, #28]
   14b30:	lsl	r1, r1, #2
   14b34:	bl	12924 <realloc@plt>
   14b38:	str	r0, [r4, #16]
   14b3c:	mov	r0, r4
   14b40:	mov	r3, #4
   14b44:	mvn	r2, #0
   14b48:	mov	r1, r6
   14b4c:	bl	13468 <table_notify@@Base>
   14b50:	mov	r0, #0
   14b54:	pop	{r4, r5, r6, r7, r8, pc}
   14b58:	mov	r1, r5
   14b5c:	mov	r0, r4
   14b60:	bl	13598 <table_get_column_data_type@@Base>
   14b64:	cmp	r0, #23
   14b68:	beq	14b8c <table_remove_row@@Base+0xd4>
   14b6c:	mov	r2, r5
   14b70:	mov	r1, r6
   14b74:	mov	r0, r4
   14b78:	bl	15a08 <table_get_cell_ptr@@Base>
   14b7c:	ldr	r0, [r0]
   14b80:	cmp	r0, #0
   14b84:	beq	14b8c <table_remove_row@@Base+0xd4>
   14b88:	bl	12918 <free@plt>
   14b8c:	add	r5, r5, #1
   14b90:	b	14ad4 <table_remove_row@@Base+0x1c>
   14b94:	ldr	r2, [r4, #16]
   14b98:	add	r1, r2, r3, lsl #2
   14b9c:	ldr	r1, [r1, #4]
   14ba0:	str	r1, [r2, r3, lsl #2]
   14ba4:	add	r3, r3, #1
   14ba8:	b	14af8 <table_remove_row@@Base+0x40>

00014bac <table_get_row_ptr@@Base>:
   14bac:	ldr	r0, [r0, #16]
   14bb0:	add	r0, r0, r1, lsl #2
   14bb4:	bx	lr

00014bb8 <table_set_row_ptr@@Base>:
   14bb8:	ldr	r2, [r2]
   14bbc:	ldr	r3, [r0, #16]
   14bc0:	str	r2, [r3, r1, lsl #2]
   14bc4:	bx	lr

00014bc8 <table_set@@Base>:
   14bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bcc:	mov	r6, r0
   14bd0:	mov	r8, r1
   14bd4:	mov	r7, r2
   14bd8:	mov	r5, r3
   14bdc:	ldr	r9, [sp, #32]
   14be0:	bl	15a08 <table_get_cell_ptr@@Base>
   14be4:	mov	r4, r0
   14be8:	mov	r1, r7
   14bec:	mov	r0, r6
   14bf0:	bl	13818 <table_get_col_ptr@@Base>
   14bf4:	cmp	r9, #23
   14bf8:	ldrls	pc, [pc, r9, lsl #2]
   14bfc:	b	14d4c <table_set@@Base+0x184>
   14c00:	muleq	r1, ip, ip
   14c04:	strdeq	r4, [r1], -r0
   14c08:	strdeq	r4, [r1], -ip
   14c0c:	andeq	r4, r1, r8, lsl #26
   14c10:	andeq	r4, r1, r4, lsl sp
   14c14:	andeq	r4, r1, r4, asr sp
   14c18:	andeq	r4, r1, r0, ror #26
   14c1c:	andeq	r4, r1, ip, ror #26
   14c20:	andeq	r4, r1, r8, ror sp
   14c24:			; <UNDEFINED> instruction: 0x00014db8
   14c28:	ldrdeq	r4, [r1], -r8
   14c2c:	andeq	r4, r1, r4, ror #27
   14c30:	strdeq	r4, [r1], -r0
   14c34:	strdeq	r4, [r1], -ip
   14c38:	andeq	r4, r1, r8, lsl #28
   14c3c:	andeq	r4, r1, r4, lsl lr
   14c40:	andeq	r4, r1, r0, lsr #28
   14c44:	andeq	r4, r1, ip, lsr #28
   14c48:	andeq	r4, r1, r8, lsr lr
   14c4c:	andeq	r4, r1, ip, ror lr
   14c50:	andeq	r4, r1, r8, lsl #29
   14c54:	andeq	r4, r1, r4, asr #28
   14c58:	andeq	r4, r1, r0, ror #24
   14c5c:	muleq	r1, r4, lr
   14c60:	ldr	r3, [r0, #4]
   14c64:	cmp	r3, #22
   14c68:	bne	14d4c <table_set@@Base+0x184>
   14c6c:	ldr	r3, [r4]
   14c70:	cmp	r3, #0
   14c74:	bne	14c84 <table_set@@Base+0xbc>
   14c78:	mov	r0, #1
   14c7c:	bl	1293c <malloc@plt>
   14c80:	str	r0, [r4]
   14c84:	ldr	r3, [r4]
   14c88:	cmp	r3, #0
   14c8c:	ldrbne	r2, [r5]
   14c90:	strbne	r2, [r3]
   14c94:	bne	14cd4 <table_set@@Base+0x10c>
   14c98:	b	14d4c <table_set@@Base+0x184>
   14c9c:	ldr	r3, [r0, #4]
   14ca0:	cmp	r3, #0
   14ca4:	bne	14d4c <table_set@@Base+0x184>
   14ca8:	ldr	r3, [r4]
   14cac:	cmp	r3, #0
   14cb0:	bne	14cc0 <table_set@@Base+0xf8>
   14cb4:	mov	r0, #4
   14cb8:	bl	1293c <malloc@plt>
   14cbc:	str	r0, [r4]
   14cc0:	ldr	r3, [r4]
   14cc4:	cmp	r3, #0
   14cc8:	ldrne	r2, [r5]
   14ccc:	strne	r2, [r3]
   14cd0:	beq	14d4c <table_set@@Base+0x184>
   14cd4:	mov	r0, r6
   14cd8:	mov	r3, #1
   14cdc:	mov	r2, r7
   14ce0:	mov	r1, r8
   14ce4:	bl	13468 <table_notify@@Base>
   14ce8:	mov	r0, #0
   14cec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cf0:	ldr	r3, [r0, #4]
   14cf4:	cmp	r3, #1
   14cf8:	b	14ca4 <table_set@@Base+0xdc>
   14cfc:	ldr	r3, [r0, #4]
   14d00:	cmp	r3, #2
   14d04:	b	14c68 <table_set@@Base+0xa0>
   14d08:	ldr	r3, [r0, #4]
   14d0c:	cmp	r3, #3
   14d10:	b	14c68 <table_set@@Base+0xa0>
   14d14:	ldr	r3, [r0, #4]
   14d18:	cmp	r3, #4
   14d1c:	bne	14d4c <table_set@@Base+0x184>
   14d20:	ldr	r3, [r4]
   14d24:	cmp	r3, #0
   14d28:	bne	14d38 <table_set@@Base+0x170>
   14d2c:	mov	r0, #2
   14d30:	bl	1293c <malloc@plt>
   14d34:	str	r0, [r4]
   14d38:	ldr	r3, [r4]
   14d3c:	cmp	r3, #0
   14d40:	ldrhne	r2, [r5]
   14d44:	strhne	r2, [r3]
   14d48:	bne	14cd4 <table_set@@Base+0x10c>
   14d4c:	mvn	r0, #0
   14d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d54:	ldr	r3, [r0, #4]
   14d58:	cmp	r3, #5
   14d5c:	b	14d1c <table_set@@Base+0x154>
   14d60:	ldr	r3, [r0, #4]
   14d64:	cmp	r3, #6
   14d68:	b	14ca4 <table_set@@Base+0xdc>
   14d6c:	ldr	r3, [r0, #4]
   14d70:	cmp	r3, #7
   14d74:	b	14ca4 <table_set@@Base+0xdc>
   14d78:	ldr	r0, [r0, #4]
   14d7c:	cmp	r0, #8
   14d80:	bne	14d4c <table_set@@Base+0x184>
   14d84:	ldr	r3, [r4]
   14d88:	cmp	r3, #0
   14d8c:	bne	14d98 <table_set@@Base+0x1d0>
   14d90:	bl	1293c <malloc@plt>
   14d94:	str	r0, [r4]
   14d98:	ldr	r3, [r4]
   14d9c:	cmp	r3, #0
   14da0:	beq	14d4c <table_set@@Base+0x184>
   14da4:	ldr	r2, [r5]
   14da8:	str	r2, [r3]
   14dac:	ldr	r2, [r5, #4]
   14db0:	str	r2, [r3, #4]
   14db4:	b	14cd4 <table_set@@Base+0x10c>
   14db8:	ldr	r3, [r0, #4]
   14dbc:	cmp	r3, #9
   14dc0:	bne	14d4c <table_set@@Base+0x184>
   14dc4:	ldr	r3, [r4]
   14dc8:	cmp	r3, #0
   14dcc:	bne	14d98 <table_set@@Base+0x1d0>
   14dd0:	mov	r0, #8
   14dd4:	b	14d90 <table_set@@Base+0x1c8>
   14dd8:	ldr	r3, [r0, #4]
   14ddc:	cmp	r3, #10
   14de0:	b	14d1c <table_set@@Base+0x154>
   14de4:	ldr	r3, [r0, #4]
   14de8:	cmp	r3, #11
   14dec:	b	14d1c <table_set@@Base+0x154>
   14df0:	ldr	r3, [r0, #4]
   14df4:	cmp	r3, #12
   14df8:	b	14ca4 <table_set@@Base+0xdc>
   14dfc:	ldr	r3, [r0, #4]
   14e00:	cmp	r3, #13
   14e04:	b	14ca4 <table_set@@Base+0xdc>
   14e08:	ldr	r3, [r0, #4]
   14e0c:	cmp	r3, #14
   14e10:	b	14dc0 <table_set@@Base+0x1f8>
   14e14:	ldr	r3, [r0, #4]
   14e18:	cmp	r3, #15
   14e1c:	b	14dc0 <table_set@@Base+0x1f8>
   14e20:	ldr	r3, [r0, #4]
   14e24:	cmp	r3, #16
   14e28:	b	14ca4 <table_set@@Base+0xdc>
   14e2c:	ldr	r3, [r0, #4]
   14e30:	cmp	r3, #17
   14e34:	b	14dc0 <table_set@@Base+0x1f8>
   14e38:	ldr	r3, [r0, #4]
   14e3c:	cmp	r3, #18
   14e40:	b	14dc0 <table_set@@Base+0x1f8>
   14e44:	ldr	r3, [r0, #4]
   14e48:	cmp	r3, #21
   14e4c:	bne	14d4c <table_set@@Base+0x184>
   14e50:	mov	r0, r5
   14e54:	bl	12960 <strlen@plt>
   14e58:	add	r1, r0, #1
   14e5c:	ldr	r0, [r4]
   14e60:	bl	12924 <realloc@plt>
   14e64:	cmp	r0, #0
   14e68:	str	r0, [r4]
   14e6c:	beq	14d4c <table_set@@Base+0x184>
   14e70:	mov	r1, r5
   14e74:	bl	12930 <strcpy@plt>
   14e78:	b	14cd4 <table_set@@Base+0x10c>
   14e7c:	ldr	r3, [r0, #4]
   14e80:	cmp	r3, #19
   14e84:	b	14c68 <table_set@@Base+0xa0>
   14e88:	ldr	r3, [r0, #4]
   14e8c:	cmp	r3, #20
   14e90:	b	14c68 <table_set@@Base+0xa0>
   14e94:	ldr	r3, [r0, #4]
   14e98:	cmp	r3, #23
   14e9c:	bne	14d4c <table_set@@Base+0x184>
   14ea0:	str	r5, [r4]
   14ea4:	b	14cd4 <table_set@@Base+0x10c>

00014ea8 <table_set_bool@@Base>:
   14ea8:	push	{r0, r1, r2, r3, r4, lr}
   14eac:	strb	r3, [sp, #15]
   14eb0:	mov	r3, #22
   14eb4:	str	r3, [sp]
   14eb8:	add	r3, sp, #15
   14ebc:	bl	14bc8 <table_set@@Base>
   14ec0:	add	sp, sp, #20
   14ec4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec8 <table_set_int@@Base>:
   14ec8:	push	{r0, r1, r2, r3, r4, lr}
   14ecc:	str	r3, [sp, #12]
   14ed0:	mov	r3, #0
   14ed4:	str	r3, [sp]
   14ed8:	add	r3, sp, #12
   14edc:	bl	14bc8 <table_set@@Base>
   14ee0:	add	sp, sp, #20
   14ee4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ee8 <table_set_uint@@Base>:
   14ee8:	push	{r0, r1, r2, r3, r4, lr}
   14eec:	str	r3, [sp, #12]
   14ef0:	mov	r3, #1
   14ef4:	str	r3, [sp]
   14ef8:	add	r3, sp, #12
   14efc:	bl	14bc8 <table_set@@Base>
   14f00:	add	sp, sp, #20
   14f04:	pop	{pc}		; (ldr pc, [sp], #4)

00014f08 <table_set_int8@@Base>:
   14f08:	push	{r0, r1, r2, r3, r4, lr}
   14f0c:	strb	r3, [sp, #15]
   14f10:	mov	r3, #2
   14f14:	str	r3, [sp]
   14f18:	add	r3, sp, #15
   14f1c:	bl	14bc8 <table_set@@Base>
   14f20:	add	sp, sp, #20
   14f24:	pop	{pc}		; (ldr pc, [sp], #4)

00014f28 <table_set_uint8@@Base>:
   14f28:	push	{r0, r1, r2, r3, r4, lr}
   14f2c:	strb	r3, [sp, #15]
   14f30:	mov	r3, #3
   14f34:	str	r3, [sp]
   14f38:	add	r3, sp, #15
   14f3c:	bl	14bc8 <table_set@@Base>
   14f40:	add	sp, sp, #20
   14f44:	pop	{pc}		; (ldr pc, [sp], #4)

00014f48 <table_set_int16@@Base>:
   14f48:	push	{r0, r1, r2, r3, r4, lr}
   14f4c:	strh	r3, [sp, #14]
   14f50:	mov	r3, #4
   14f54:	str	r3, [sp]
   14f58:	add	r3, sp, #14
   14f5c:	bl	14bc8 <table_set@@Base>
   14f60:	add	sp, sp, #20
   14f64:	pop	{pc}		; (ldr pc, [sp], #4)

00014f68 <table_set_uint16@@Base>:
   14f68:	push	{r0, r1, r2, r3, r4, lr}
   14f6c:	strh	r3, [sp, #14]
   14f70:	mov	r3, #5
   14f74:	str	r3, [sp]
   14f78:	add	r3, sp, #14
   14f7c:	bl	14bc8 <table_set@@Base>
   14f80:	add	sp, sp, #20
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)

00014f88 <table_set_int32@@Base>:
   14f88:	push	{r0, r1, r2, r3, r4, lr}
   14f8c:	str	r3, [sp, #12]
   14f90:	mov	r3, #6
   14f94:	str	r3, [sp]
   14f98:	add	r3, sp, #12
   14f9c:	bl	14bc8 <table_set@@Base>
   14fa0:	add	sp, sp, #20
   14fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fa8 <table_set_uint32@@Base>:
   14fa8:	push	{r0, r1, r2, r3, r4, lr}
   14fac:	str	r3, [sp, #12]
   14fb0:	mov	r3, #7
   14fb4:	str	r3, [sp]
   14fb8:	add	r3, sp, #12
   14fbc:	bl	14bc8 <table_set@@Base>
   14fc0:	add	sp, sp, #20
   14fc4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fc8 <table_set_int64@@Base>:
   14fc8:	mov	r3, #8
   14fcc:	push	{r0, r1, r2, lr}
   14fd0:	str	r3, [sp]
   14fd4:	add	r3, sp, #16
   14fd8:	bl	14bc8 <table_set@@Base>
   14fdc:	add	sp, sp, #12
   14fe0:	pop	{pc}		; (ldr pc, [sp], #4)

00014fe4 <table_set_uint64@@Base>:
   14fe4:	mov	r3, #9
   14fe8:	push	{r0, r1, r2, lr}
   14fec:	str	r3, [sp]
   14ff0:	add	r3, sp, #16
   14ff4:	bl	14bc8 <table_set@@Base>
   14ff8:	add	sp, sp, #12
   14ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00015000 <table_set_short@@Base>:
   15000:	push	{r0, r1, r2, r3, r4, lr}
   15004:	strh	r3, [sp, #14]
   15008:	mov	r3, #10
   1500c:	str	r3, [sp]
   15010:	add	r3, sp, #14
   15014:	bl	14bc8 <table_set@@Base>
   15018:	add	sp, sp, #20
   1501c:	pop	{pc}		; (ldr pc, [sp], #4)

00015020 <table_set_ushort@@Base>:
   15020:	push	{r0, r1, r2, r3, r4, lr}
   15024:	strh	r3, [sp, #14]
   15028:	mov	r3, #11
   1502c:	str	r3, [sp]
   15030:	add	r3, sp, #14
   15034:	bl	14bc8 <table_set@@Base>
   15038:	add	sp, sp, #20
   1503c:	pop	{pc}		; (ldr pc, [sp], #4)

00015040 <table_set_long@@Base>:
   15040:	push	{r0, r1, r2, r3, r4, lr}
   15044:	str	r3, [sp, #12]
   15048:	mov	r3, #12
   1504c:	str	r3, [sp]
   15050:	add	r3, sp, r3
   15054:	bl	14bc8 <table_set@@Base>
   15058:	add	sp, sp, #20
   1505c:	pop	{pc}		; (ldr pc, [sp], #4)

00015060 <table_set_ulong@@Base>:
   15060:	push	{r0, r1, r2, r3, r4, lr}
   15064:	str	r3, [sp, #12]
   15068:	mov	r3, #13
   1506c:	str	r3, [sp]
   15070:	add	r3, sp, #12
   15074:	bl	14bc8 <table_set@@Base>
   15078:	add	sp, sp, #20
   1507c:	pop	{pc}		; (ldr pc, [sp], #4)

00015080 <table_set_llong@@Base>:
   15080:	mov	r3, #14
   15084:	push	{r0, r1, r2, lr}
   15088:	str	r3, [sp]
   1508c:	add	r3, sp, #16
   15090:	bl	14bc8 <table_set@@Base>
   15094:	add	sp, sp, #12
   15098:	pop	{pc}		; (ldr pc, [sp], #4)

0001509c <table_set_ullong@@Base>:
   1509c:	mov	r3, #15
   150a0:	push	{r0, r1, r2, lr}
   150a4:	str	r3, [sp]
   150a8:	add	r3, sp, #16
   150ac:	bl	14bc8 <table_set@@Base>
   150b0:	add	sp, sp, #12
   150b4:	pop	{pc}		; (ldr pc, [sp], #4)

000150b8 <table_set_float@@Base>:
   150b8:	push	{r0, r1, r2, r3, r4, lr}
   150bc:	mov	r3, #16
   150c0:	str	r3, [sp]
   150c4:	add	r3, sp, #12
   150c8:	vstr	s0, [sp, #12]
   150cc:	bl	14bc8 <table_set@@Base>
   150d0:	add	sp, sp, #20
   150d4:	pop	{pc}		; (ldr pc, [sp], #4)

000150d8 <table_set_double@@Base>:
   150d8:	push	{r0, r1, r2, r3, r4, lr}
   150dc:	mov	r3, #17
   150e0:	str	r3, [sp]
   150e4:	add	r3, sp, #8
   150e8:	vstr	d0, [sp, #8]
   150ec:	bl	14bc8 <table_set@@Base>
   150f0:	add	sp, sp, #20
   150f4:	pop	{pc}		; (ldr pc, [sp], #4)

000150f8 <table_set_ldouble@@Base>:
   150f8:	push	{r0, r1, r2, r3, r4, lr}
   150fc:	mov	r3, #18
   15100:	str	r3, [sp]
   15104:	add	r3, sp, #8
   15108:	vstr	d0, [sp, #8]
   1510c:	bl	14bc8 <table_set@@Base>
   15110:	add	sp, sp, #20
   15114:	pop	{pc}		; (ldr pc, [sp], #4)

00015118 <table_set_string@@Base>:
   15118:	mov	ip, #21
   1511c:	push	{r0, r1, r2, lr}
   15120:	str	ip, [sp]
   15124:	bl	14bc8 <table_set@@Base>
   15128:	add	sp, sp, #12
   1512c:	pop	{pc}		; (ldr pc, [sp], #4)

00015130 <table_set_char@@Base>:
   15130:	push	{r0, r1, r2, r3, r4, lr}
   15134:	strb	r3, [sp, #15]
   15138:	mov	r3, #19
   1513c:	str	r3, [sp]
   15140:	add	r3, sp, #15
   15144:	bl	14bc8 <table_set@@Base>
   15148:	add	sp, sp, #20
   1514c:	pop	{pc}		; (ldr pc, [sp], #4)

00015150 <table_set_uchar@@Base>:
   15150:	push	{r0, r1, r2, r3, r4, lr}
   15154:	strb	r3, [sp, #15]
   15158:	mov	r3, #20
   1515c:	str	r3, [sp]
   15160:	add	r3, sp, #15
   15164:	bl	14bc8 <table_set@@Base>
   15168:	add	sp, sp, #20
   1516c:	pop	{pc}		; (ldr pc, [sp], #4)

00015170 <table_set_ptr@@Base>:
   15170:	mov	ip, #23
   15174:	push	{r0, r1, r2, lr}
   15178:	str	ip, [sp]
   1517c:	bl	14bc8 <table_set@@Base>
   15180:	add	sp, sp, #12
   15184:	pop	{pc}		; (ldr pc, [sp], #4)

00015188 <table_cell_to_buffer@@Base>:
   15188:	push	{r4, r5, r6, r7, lr}
   1518c:	sub	sp, sp, #20
   15190:	mov	r7, r1
   15194:	mov	r1, r2
   15198:	mov	r6, r0
   1519c:	mov	r4, r3
   151a0:	str	r2, [sp, #12]
   151a4:	ldr	r5, [sp, #40]	; 0x28
   151a8:	bl	13598 <table_get_column_data_type@@Base>
   151ac:	ldr	r2, [sp, #12]
   151b0:	cmp	r0, #23
   151b4:	ldrls	pc, [pc, r0, lsl #2]
   151b8:	b	152d8 <table_cell_to_buffer@@Base+0x150>
   151bc:	andeq	r5, r1, ip, lsl r2
   151c0:	andeq	r5, r1, r4, lsr r2
   151c4:	andeq	r5, r1, r8, asr r2
   151c8:	andeq	r5, r1, r8, ror #4
   151cc:	andeq	r5, r1, r8, ror r2
   151d0:	andeq	r5, r1, r8, lsl #5
   151d4:	muleq	r1, r8, r2
   151d8:	andeq	r5, r1, r8, lsr #5
   151dc:			; <UNDEFINED> instruction: 0x000152b8
   151e0:	andeq	r5, r1, r4, ror #5
   151e4:	strdeq	r5, [r1], -ip
   151e8:	andeq	r5, r1, r4, lsl r3
   151ec:	andeq	r5, r1, ip, lsr #6
   151f0:	andeq	r5, r1, r4, asr #6
   151f4:	andeq	r5, r1, ip, asr r3
   151f8:	andeq	r5, r1, ip, ror #6
   151fc:	muleq	r1, r4, r3
   15200:			; <UNDEFINED> instruction: 0x000153bc
   15204:	ldrdeq	r5, [r1], -r4
   15208:	strdeq	r5, [r1], -ip
   1520c:	andeq	r5, r1, r4, lsl r4
   15210:	andeq	r5, r1, ip, ror r3
   15214:	andeq	r5, r1, ip, ror #7
   15218:	andeq	r5, r1, r4, lsr #8
   1521c:	mov	r1, r7
   15220:	mov	r0, r6
   15224:	bl	148a8 <table_get_int@@Base>
   15228:	mov	r3, r0
   1522c:	ldr	r2, [pc, #520]	; 1543c <table_cell_to_buffer@@Base+0x2b4>
   15230:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   15234:	mov	r1, r7
   15238:	mov	r0, r6
   1523c:	bl	148b8 <table_get_uint@@Base>
   15240:	ldr	r2, [pc, #504]	; 15440 <table_cell_to_buffer@@Base+0x2b8>
   15244:	mov	r3, r0
   15248:	mov	r1, r5
   1524c:	mov	r0, r4
   15250:	bl	1296c <snprintf@plt>
   15254:	b	152d8 <table_cell_to_buffer@@Base+0x150>
   15258:	mov	r1, r7
   1525c:	mov	r0, r6
   15260:	bl	148c8 <table_get_int8@@Base>
   15264:	b	15228 <table_cell_to_buffer@@Base+0xa0>
   15268:	mov	r1, r7
   1526c:	mov	r0, r6
   15270:	bl	148d8 <table_get_uint8@@Base>
   15274:	b	15240 <table_cell_to_buffer@@Base+0xb8>
   15278:	mov	r1, r7
   1527c:	mov	r0, r6
   15280:	bl	148e8 <table_get_int16@@Base>
   15284:	b	15228 <table_cell_to_buffer@@Base+0xa0>
   15288:	mov	r1, r7
   1528c:	mov	r0, r6
   15290:	bl	148f8 <table_get_uint16@@Base>
   15294:	b	15240 <table_cell_to_buffer@@Base+0xb8>
   15298:	mov	r1, r7
   1529c:	mov	r0, r6
   152a0:	bl	14908 <table_get_int32@@Base>
   152a4:	b	15228 <table_cell_to_buffer@@Base+0xa0>
   152a8:	mov	r1, r7
   152ac:	mov	r0, r6
   152b0:	bl	1490c <table_get_uint32@@Base>
   152b4:	b	15240 <table_cell_to_buffer@@Base+0xb8>
   152b8:	mov	r1, r7
   152bc:	mov	r0, r6
   152c0:	bl	14910 <table_get_int64@@Base>
   152c4:	ldr	r2, [pc, #376]	; 15444 <table_cell_to_buffer@@Base+0x2bc>
   152c8:	strd	r0, [sp]
   152cc:	mov	r1, r5
   152d0:	mov	r0, r4
   152d4:	bl	1296c <snprintf@plt>
   152d8:	mov	r0, #0
   152dc:	add	sp, sp, #20
   152e0:	pop	{r4, r5, r6, r7, pc}
   152e4:	mov	r1, r7
   152e8:	mov	r0, r6
   152ec:	bl	14920 <table_get_uint64@@Base>
   152f0:	ldr	r2, [pc, #336]	; 15448 <table_cell_to_buffer@@Base+0x2c0>
   152f4:	strd	r0, [sp]
   152f8:	b	152cc <table_cell_to_buffer@@Base+0x144>
   152fc:	mov	r1, r7
   15300:	mov	r0, r6
   15304:	bl	14930 <table_get_short@@Base>
   15308:	mov	r3, r0
   1530c:	ldr	r2, [pc, #312]	; 1544c <table_cell_to_buffer@@Base+0x2c4>
   15310:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   15314:	mov	r1, r7
   15318:	mov	r0, r6
   1531c:	bl	14934 <table_get_ushort@@Base>
   15320:	mov	r3, r0
   15324:	ldr	r2, [pc, #292]	; 15450 <table_cell_to_buffer@@Base+0x2c8>
   15328:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   1532c:	mov	r1, r7
   15330:	mov	r0, r6
   15334:	bl	14938 <table_get_long@@Base>
   15338:	mov	r3, r0
   1533c:	ldr	r2, [pc, #272]	; 15454 <table_cell_to_buffer@@Base+0x2cc>
   15340:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   15344:	mov	r1, r7
   15348:	mov	r0, r6
   1534c:	bl	14948 <table_get_ulong@@Base>
   15350:	mov	r3, r0
   15354:	ldr	r2, [pc, #252]	; 15458 <table_cell_to_buffer@@Base+0x2d0>
   15358:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   1535c:	mov	r1, r7
   15360:	mov	r0, r6
   15364:	bl	14958 <table_get_llong@@Base>
   15368:	b	152c4 <table_cell_to_buffer@@Base+0x13c>
   1536c:	mov	r1, r7
   15370:	mov	r0, r6
   15374:	bl	1495c <table_get_ullong@@Base>
   15378:	b	152f0 <table_cell_to_buffer@@Base+0x168>
   1537c:	mov	r1, r7
   15380:	mov	r0, r6
   15384:	bl	14998 <table_get_string@@Base>
   15388:	mov	r3, r0
   1538c:	ldr	r2, [pc, #200]	; 1545c <table_cell_to_buffer@@Base+0x2d4>
   15390:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   15394:	mov	r1, r7
   15398:	mov	r0, r6
   1539c:	bl	14960 <table_get_float@@Base>
   153a0:	vcvt.f64.f32	d0, s0
   153a4:	ldr	r2, [pc, #180]	; 15460 <table_cell_to_buffer@@Base+0x2d8>
   153a8:	vstr	d0, [sp]
   153ac:	mov	r1, r5
   153b0:	mov	r0, r4
   153b4:	bl	1296c <snprintf@plt>
   153b8:	b	152d8 <table_cell_to_buffer@@Base+0x150>
   153bc:	mov	r1, r7
   153c0:	mov	r0, r6
   153c4:	bl	14970 <table_get_double@@Base>
   153c8:	ldr	r2, [pc, #148]	; 15464 <table_cell_to_buffer@@Base+0x2dc>
   153cc:	vstr	d0, [sp]
   153d0:	b	153ac <table_cell_to_buffer@@Base+0x224>
   153d4:	mov	r1, r7
   153d8:	mov	r0, r6
   153dc:	bl	14980 <table_get_ldouble@@Base>
   153e0:	ldr	r2, [pc, #128]	; 15468 <table_cell_to_buffer@@Base+0x2e0>
   153e4:	vstr	d0, [sp]
   153e8:	b	153ac <table_cell_to_buffer@@Base+0x224>
   153ec:	mov	r1, r7
   153f0:	mov	r0, r6
   153f4:	bl	14898 <table_get_bool@@Base>
   153f8:	b	15228 <table_cell_to_buffer@@Base+0xa0>
   153fc:	mov	r1, r7
   15400:	mov	r0, r6
   15404:	bl	14990 <table_get_char@@Base>
   15408:	mov	r3, r0
   1540c:	ldr	r2, [pc, #88]	; 1546c <table_cell_to_buffer@@Base+0x2e4>
   15410:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   15414:	mov	r1, r7
   15418:	mov	r0, r6
   1541c:	bl	14994 <table_get_uchar@@Base>
   15420:	b	15408 <table_cell_to_buffer@@Base+0x280>
   15424:	mov	r1, r7
   15428:	mov	r0, r6
   1542c:	bl	1499c <table_get_ptr@@Base>
   15430:	mov	r3, r0
   15434:	ldr	r2, [pc, #52]	; 15470 <table_cell_to_buffer@@Base+0x2e8>
   15438:	b	15248 <table_cell_to_buffer@@Base+0xc0>
   1543c:	andeq	r5, r1, sp, asr #22
   15440:	andeq	r5, r1, r4, ror #24
   15444:	andeq	r5, r1, r7, ror #24
   15448:	andeq	r5, r1, ip, ror #24
   1544c:	andeq	r5, r1, r1, ror ip
   15450:	andeq	r5, r1, r5, ror ip
   15454:	andeq	r5, r1, r9, ror ip
   15458:	andeq	r5, r1, sp, ror ip
   1545c:	andeq	r5, r1, r1, lsl #25
   15460:	andeq	r5, r1, r4, lsl #25
   15464:	andeq	r5, r1, r7, lsl #25
   15468:	andeq	r5, r1, fp, lsl #25
   1546c:	andeq	r5, r1, pc, lsl #25
   15470:	muleq	r1, r2, ip

00015474 <table_cell_from_buffer@@Base>:
   15474:	push	{r4, r5, r6, r7, lr}
   15478:	mov	r7, r1
   1547c:	sub	sp, sp, #268	; 0x10c
   15480:	mov	r1, r2
   15484:	mov	r6, r0
   15488:	mov	r5, r2
   1548c:	mov	r4, r3
   15490:	bl	13598 <table_get_column_data_type@@Base>
   15494:	cmp	r0, #23
   15498:	ldrls	pc, [pc, r0, lsl #2]
   1549c:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   154a0:	andeq	r5, r1, r0, lsl #10
   154a4:	andeq	r5, r1, r4, lsr r5
   154a8:	andeq	r5, r1, r4, ror #10
   154ac:	muleq	r1, r4, r5
   154b0:	andeq	r5, r1, r4, asr #11
   154b4:	strdeq	r5, [r1], -r4
   154b8:	andeq	r5, r1, r4, lsr #12
   154bc:	andeq	r5, r1, r4, asr r6
   154c0:	andeq	r5, r1, r4, lsl #13
   154c4:			; <UNDEFINED> instruction: 0x000156b8
   154c8:	andeq	r5, r1, ip, ror #13
   154cc:	andeq	r5, r1, ip, lsl r7
   154d0:	andeq	r5, r1, ip, asr #14
   154d4:	andeq	r5, r1, ip, ror r7
   154d8:	andeq	r5, r1, ip, lsr #15
   154dc:	andeq	r5, r1, r0, ror #15
   154e0:	andeq	r5, r1, r4, asr #16
   154e4:	andeq	r5, r1, r4, ror r8
   154e8:	andeq	r5, r1, r4, lsr #17
   154ec:	andeq	r5, r1, r0, lsr r9
   154f0:	andeq	r5, r1, r0, ror #18
   154f4:	andeq	r5, r1, r4, lsl r8
   154f8:	ldrdeq	r5, [r1], -r4
   154fc:	muleq	r1, r0, r9
   15500:	add	r2, sp, #8
   15504:	ldr	r1, [pc, #1212]	; 159c8 <table_cell_from_buffer@@Base+0x554>
   15508:	mov	r0, r4
   1550c:	bl	12978 <__isoc99_sscanf@plt>
   15510:	cmp	r0, #1
   15514:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15518:	mov	r2, r5
   1551c:	mov	r1, r7
   15520:	ldr	r3, [sp, #8]
   15524:	mov	r0, r6
   15528:	bl	14ec8 <table_set_int@@Base>
   1552c:	mov	r4, #0
   15530:	b	15924 <table_cell_from_buffer@@Base+0x4b0>
   15534:	add	r2, sp, #8
   15538:	ldr	r1, [pc, #1164]	; 159cc <table_cell_from_buffer@@Base+0x558>
   1553c:	mov	r0, r4
   15540:	bl	12978 <__isoc99_sscanf@plt>
   15544:	cmp	r0, #1
   15548:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1554c:	mov	r2, r5
   15550:	mov	r1, r7
   15554:	ldr	r3, [sp, #8]
   15558:	mov	r0, r6
   1555c:	bl	14ee8 <table_set_uint@@Base>
   15560:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15564:	add	r2, sp, #8
   15568:	ldr	r1, [pc, #1120]	; 159d0 <table_cell_from_buffer@@Base+0x55c>
   1556c:	mov	r0, r4
   15570:	bl	12978 <__isoc99_sscanf@plt>
   15574:	cmp	r0, #1
   15578:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1557c:	ldrsb	r3, [sp, #8]
   15580:	mov	r2, r5
   15584:	mov	r1, r7
   15588:	mov	r0, r6
   1558c:	bl	14f08 <table_set_int8@@Base>
   15590:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15594:	add	r2, sp, #8
   15598:	ldr	r1, [pc, #1076]	; 159d4 <table_cell_from_buffer@@Base+0x560>
   1559c:	mov	r0, r4
   155a0:	bl	12978 <__isoc99_sscanf@plt>
   155a4:	cmp	r0, #1
   155a8:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   155ac:	ldrb	r3, [sp, #8]
   155b0:	mov	r2, r5
   155b4:	mov	r1, r7
   155b8:	mov	r0, r6
   155bc:	bl	14f28 <table_set_uint8@@Base>
   155c0:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   155c4:	add	r2, sp, #8
   155c8:	ldr	r1, [pc, #1032]	; 159d8 <table_cell_from_buffer@@Base+0x564>
   155cc:	mov	r0, r4
   155d0:	bl	12978 <__isoc99_sscanf@plt>
   155d4:	cmp	r0, #1
   155d8:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   155dc:	ldrsh	r3, [sp, #8]
   155e0:	mov	r2, r5
   155e4:	mov	r1, r7
   155e8:	mov	r0, r6
   155ec:	bl	14f48 <table_set_int16@@Base>
   155f0:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   155f4:	add	r2, sp, #8
   155f8:	ldr	r1, [pc, #988]	; 159dc <table_cell_from_buffer@@Base+0x568>
   155fc:	mov	r0, r4
   15600:	bl	12978 <__isoc99_sscanf@plt>
   15604:	cmp	r0, #1
   15608:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1560c:	ldrh	r3, [sp, #8]
   15610:	mov	r2, r5
   15614:	mov	r1, r7
   15618:	mov	r0, r6
   1561c:	bl	14f68 <table_set_uint16@@Base>
   15620:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15624:	add	r2, sp, #8
   15628:	ldr	r1, [pc, #920]	; 159c8 <table_cell_from_buffer@@Base+0x554>
   1562c:	mov	r0, r4
   15630:	bl	12978 <__isoc99_sscanf@plt>
   15634:	cmp	r0, #1
   15638:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1563c:	mov	r2, r5
   15640:	mov	r1, r7
   15644:	ldr	r3, [sp, #8]
   15648:	mov	r0, r6
   1564c:	bl	14f88 <table_set_int32@@Base>
   15650:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15654:	add	r2, sp, #8
   15658:	ldr	r1, [pc, #876]	; 159cc <table_cell_from_buffer@@Base+0x558>
   1565c:	mov	r0, r4
   15660:	bl	12978 <__isoc99_sscanf@plt>
   15664:	cmp	r0, #1
   15668:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1566c:	mov	r2, r5
   15670:	mov	r1, r7
   15674:	ldr	r3, [sp, #8]
   15678:	mov	r0, r6
   1567c:	bl	14fa8 <table_set_uint32@@Base>
   15680:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15684:	add	r2, sp, #8
   15688:	ldr	r1, [pc, #848]	; 159e0 <table_cell_from_buffer@@Base+0x56c>
   1568c:	mov	r0, r4
   15690:	bl	12978 <__isoc99_sscanf@plt>
   15694:	cmp	r0, #1
   15698:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1569c:	ldrd	r2, [sp, #8]
   156a0:	mov	r1, r7
   156a4:	mov	r0, r6
   156a8:	strd	r2, [sp]
   156ac:	mov	r2, r5
   156b0:	bl	14fc8 <table_set_int64@@Base>
   156b4:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   156b8:	add	r2, sp, #8
   156bc:	ldr	r1, [pc, #800]	; 159e4 <table_cell_from_buffer@@Base+0x570>
   156c0:	mov	r0, r4
   156c4:	bl	12978 <__isoc99_sscanf@plt>
   156c8:	cmp	r0, #1
   156cc:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   156d0:	ldrd	r2, [sp, #8]
   156d4:	mov	r1, r7
   156d8:	mov	r0, r6
   156dc:	strd	r2, [sp]
   156e0:	mov	r2, r5
   156e4:	bl	14fe4 <table_set_uint64@@Base>
   156e8:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   156ec:	add	r2, sp, #8
   156f0:	ldr	r1, [pc, #736]	; 159d8 <table_cell_from_buffer@@Base+0x564>
   156f4:	mov	r0, r4
   156f8:	bl	12978 <__isoc99_sscanf@plt>
   156fc:	cmp	r0, #1
   15700:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15704:	ldrsh	r3, [sp, #8]
   15708:	mov	r2, r5
   1570c:	mov	r1, r7
   15710:	mov	r0, r6
   15714:	bl	15000 <table_set_short@@Base>
   15718:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   1571c:	add	r2, sp, #8
   15720:	ldr	r1, [pc, #692]	; 159dc <table_cell_from_buffer@@Base+0x568>
   15724:	mov	r0, r4
   15728:	bl	12978 <__isoc99_sscanf@plt>
   1572c:	cmp	r0, #1
   15730:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15734:	ldrh	r3, [sp, #8]
   15738:	mov	r2, r5
   1573c:	mov	r1, r7
   15740:	mov	r0, r6
   15744:	bl	15020 <table_set_ushort@@Base>
   15748:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   1574c:	add	r2, sp, #8
   15750:	ldr	r1, [pc, #656]	; 159e8 <table_cell_from_buffer@@Base+0x574>
   15754:	mov	r0, r4
   15758:	bl	12978 <__isoc99_sscanf@plt>
   1575c:	cmp	r0, #1
   15760:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15764:	mov	r2, r5
   15768:	mov	r1, r7
   1576c:	ldr	r3, [sp, #8]
   15770:	mov	r0, r6
   15774:	bl	15040 <table_set_long@@Base>
   15778:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   1577c:	add	r2, sp, #8
   15780:	ldr	r1, [pc, #612]	; 159ec <table_cell_from_buffer@@Base+0x578>
   15784:	mov	r0, r4
   15788:	bl	12978 <__isoc99_sscanf@plt>
   1578c:	cmp	r0, #1
   15790:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15794:	mov	r2, r5
   15798:	mov	r1, r7
   1579c:	ldr	r3, [sp, #8]
   157a0:	mov	r0, r6
   157a4:	bl	15060 <table_set_ulong@@Base>
   157a8:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   157ac:	add	r2, sp, #8
   157b0:	ldr	r1, [pc, #552]	; 159e0 <table_cell_from_buffer@@Base+0x56c>
   157b4:	mov	r0, r4
   157b8:	bl	12978 <__isoc99_sscanf@plt>
   157bc:	cmp	r0, #1
   157c0:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   157c4:	ldrd	r2, [sp, #8]
   157c8:	mov	r1, r7
   157cc:	mov	r0, r6
   157d0:	strd	r2, [sp]
   157d4:	mov	r2, r5
   157d8:	bl	15080 <table_set_llong@@Base>
   157dc:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   157e0:	add	r2, sp, #8
   157e4:	ldr	r1, [pc, #504]	; 159e4 <table_cell_from_buffer@@Base+0x570>
   157e8:	mov	r0, r4
   157ec:	bl	12978 <__isoc99_sscanf@plt>
   157f0:	cmp	r0, #1
   157f4:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   157f8:	ldrd	r2, [sp, #8]
   157fc:	mov	r1, r7
   15800:	mov	r0, r6
   15804:	strd	r2, [sp]
   15808:	mov	r2, r5
   1580c:	bl	1509c <table_set_ullong@@Base>
   15810:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15814:	add	r2, sp, #8
   15818:	ldr	r1, [pc, #464]	; 159f0 <table_cell_from_buffer@@Base+0x57c>
   1581c:	mov	r0, r4
   15820:	bl	12978 <__isoc99_sscanf@plt>
   15824:	cmp	r0, #1
   15828:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1582c:	add	r3, sp, #8
   15830:	mov	r2, r5
   15834:	mov	r1, r7
   15838:	mov	r0, r6
   1583c:	bl	15118 <table_set_string@@Base>
   15840:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15844:	add	r2, sp, #8
   15848:	ldr	r1, [pc, #420]	; 159f4 <table_cell_from_buffer@@Base+0x580>
   1584c:	mov	r0, r4
   15850:	bl	12978 <__isoc99_sscanf@plt>
   15854:	cmp	r0, #1
   15858:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1585c:	mov	r2, r5
   15860:	mov	r1, r7
   15864:	vldr	s0, [sp, #8]
   15868:	mov	r0, r6
   1586c:	bl	150b8 <table_set_float@@Base>
   15870:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15874:	add	r2, sp, #8
   15878:	ldr	r1, [pc, #376]	; 159f8 <table_cell_from_buffer@@Base+0x584>
   1587c:	mov	r0, r4
   15880:	bl	12978 <__isoc99_sscanf@plt>
   15884:	cmp	r0, #1
   15888:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   1588c:	mov	r2, r5
   15890:	mov	r1, r7
   15894:	vldr	d0, [sp, #8]
   15898:	mov	r0, r6
   1589c:	bl	150d8 <table_set_double@@Base>
   158a0:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   158a4:	add	r2, sp, #8
   158a8:	ldr	r1, [pc, #332]	; 159fc <table_cell_from_buffer@@Base+0x588>
   158ac:	mov	r0, r4
   158b0:	bl	12978 <__isoc99_sscanf@plt>
   158b4:	cmp	r0, #1
   158b8:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   158bc:	mov	r2, r5
   158c0:	mov	r1, r7
   158c4:	vldr	d0, [sp, #8]
   158c8:	mov	r0, r6
   158cc:	bl	150f8 <table_set_ldouble@@Base>
   158d0:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   158d4:	add	r2, sp, #8
   158d8:	ldr	r1, [pc, #232]	; 159c8 <table_cell_from_buffer@@Base+0x554>
   158dc:	mov	r0, r4
   158e0:	bl	12978 <__isoc99_sscanf@plt>
   158e4:	cmp	r0, #1
   158e8:	mov	r3, r0
   158ec:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   158f0:	ldr	r4, [sp, #8]
   158f4:	cmp	r4, #0
   158f8:	beq	15910 <table_cell_from_buffer@@Base+0x49c>
   158fc:	mov	r2, r5
   15900:	mov	r1, r7
   15904:	mov	r0, r6
   15908:	bl	14ea8 <table_set_bool@@Base>
   1590c:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15910:	mov	r3, r4
   15914:	mov	r2, r5
   15918:	mov	r1, r7
   1591c:	mov	r0, r6
   15920:	bl	14ea8 <table_set_bool@@Base>
   15924:	mov	r0, r4
   15928:	add	sp, sp, #268	; 0x10c
   1592c:	pop	{r4, r5, r6, r7, pc}
   15930:	add	r2, sp, #8
   15934:	ldr	r1, [pc, #196]	; 15a00 <table_cell_from_buffer@@Base+0x58c>
   15938:	mov	r0, r4
   1593c:	bl	12978 <__isoc99_sscanf@plt>
   15940:	cmp	r0, #1
   15944:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15948:	ldrb	r3, [sp, #8]
   1594c:	mov	r2, r5
   15950:	mov	r1, r7
   15954:	mov	r0, r6
   15958:	bl	15130 <table_set_char@@Base>
   1595c:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15960:	add	r2, sp, #8
   15964:	ldr	r1, [pc, #148]	; 15a00 <table_cell_from_buffer@@Base+0x58c>
   15968:	mov	r0, r4
   1596c:	bl	12978 <__isoc99_sscanf@plt>
   15970:	cmp	r0, #1
   15974:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   15978:	ldrb	r3, [sp, #8]
   1597c:	mov	r2, r5
   15980:	mov	r1, r7
   15984:	mov	r0, r6
   15988:	bl	15150 <table_set_uchar@@Base>
   1598c:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   15990:	add	r2, sp, #8
   15994:	ldr	r1, [pc, #104]	; 15a04 <table_cell_from_buffer@@Base+0x590>
   15998:	mov	r0, r4
   1599c:	bl	12978 <__isoc99_sscanf@plt>
   159a0:	cmp	r0, #1
   159a4:	bne	159c0 <table_cell_from_buffer@@Base+0x54c>
   159a8:	mov	r2, r5
   159ac:	mov	r1, r7
   159b0:	ldr	r3, [sp, #8]
   159b4:	mov	r0, r6
   159b8:	bl	15170 <table_set_ptr@@Base>
   159bc:	b	1552c <table_cell_from_buffer@@Base+0xb8>
   159c0:	mvn	r4, #0
   159c4:	b	15924 <table_cell_from_buffer@@Base+0x4b0>
   159c8:	andeq	r5, r1, sp, asr #22
   159cc:	andeq	r5, r1, r4, ror #24
   159d0:	muleq	r1, r5, ip
   159d4:	muleq	r1, sl, ip
   159d8:	andeq	r5, r1, r1, ror ip
   159dc:	andeq	r5, r1, r5, ror ip
   159e0:	andeq	r5, r1, r7, ror #24
   159e4:	andeq	r5, r1, ip, ror #24
   159e8:	andeq	r5, r1, r9, ror ip
   159ec:	andeq	r5, r1, sp, ror ip
   159f0:	andeq	r5, r1, r1, lsl #25
   159f4:	andeq	r5, r1, r4, lsl #25
   159f8:	andeq	r5, r1, r7, lsl #25
   159fc:	andeq	r5, r1, fp, lsl #25
   15a00:	andeq	r5, r1, pc, lsl #25
   15a04:	muleq	r1, r2, ip

00015a08 <table_get_cell_ptr@@Base>:
   15a08:	push	{r4, lr}
   15a0c:	mov	r4, r2
   15a10:	bl	14bac <table_get_row_ptr@@Base>
   15a14:	ldr	r0, [r0]
   15a18:	add	r0, r0, r4, lsl #2
   15a1c:	pop	{r4, pc}

00015a20 <table_cell_init@@Base>:
   15a20:	push	{r4, lr}
   15a24:	bl	15a08 <table_get_cell_ptr@@Base>
   15a28:	mov	r3, #0
   15a2c:	str	r3, [r0]
   15a30:	pop	{r4, pc}

00015a34 <table_cell_destroy@@Base>:
   15a34:	push	{r4, r5, r6, lr}
   15a38:	mov	r6, r1
   15a3c:	mov	r1, r2
   15a40:	mov	r5, r0
   15a44:	mov	r4, r2
   15a48:	bl	13598 <table_get_column_data_type@@Base>
   15a4c:	cmp	r0, #23
   15a50:	popeq	{r4, r5, r6, pc}
   15a54:	mov	r2, r4
   15a58:	mov	r1, r6
   15a5c:	mov	r0, r5
   15a60:	bl	15a08 <table_get_cell_ptr@@Base>
   15a64:	ldr	r0, [r0]
   15a68:	cmp	r0, #0
   15a6c:	popeq	{r4, r5, r6, pc}
   15a70:	pop	{r4, r5, r6, lr}
   15a74:	b	12918 <free@plt>

00015a78 <table_cell_nullify@@Base>:
   15a78:	push	{r4, lr}
   15a7c:	bl	15a08 <table_get_cell_ptr@@Base>
   15a80:	mov	r4, r0
   15a84:	ldr	r0, [r0]
   15a88:	cmp	r0, #0
   15a8c:	beq	15a9c <table_cell_nullify@@Base+0x24>
   15a90:	bl	12918 <free@plt>
   15a94:	mov	r3, #0
   15a98:	str	r3, [r4]
   15a9c:	mov	r0, #0
   15aa0:	pop	{r4, pc}

00015aa4 <__libc_csu_init@@Base>:
   15aa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15aa8:	mov	r7, r0
   15aac:	ldr	r6, [pc, #72]	; 15afc <__libc_csu_init@@Base+0x58>
   15ab0:	ldr	r5, [pc, #72]	; 15b00 <__libc_csu_init@@Base+0x5c>
   15ab4:	add	r6, pc, r6
   15ab8:	add	r5, pc, r5
   15abc:	sub	r6, r6, r5
   15ac0:	mov	r8, r1
   15ac4:	mov	r9, r2
   15ac8:	bl	128e0 <strcmp@plt-0x20>
   15acc:	asrs	r6, r6, #2
   15ad0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ad4:	mov	r4, #0
   15ad8:	add	r4, r4, #1
   15adc:	ldr	r3, [r5], #4
   15ae0:	mov	r2, r9
   15ae4:	mov	r1, r8
   15ae8:	mov	r0, r7
   15aec:	blx	r3
   15af0:	cmp	r6, r4
   15af4:	bne	15ad8 <__libc_csu_init@@Base+0x34>
   15af8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15afc:	andeq	r0, r1, r8, asr r4
   15b00:	andeq	r0, r1, r0, asr r4

00015b04 <__libc_csu_fini@@Base>:
   15b04:	bx	lr

Disassembly of section .fini:

00015b08 <.fini>:
   15b08:	push	{r3, lr}
   15b0c:	pop	{r3, pc}
