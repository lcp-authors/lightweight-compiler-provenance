
../repos/coreutils/src/who:     file format elf32-littlearm


Disassembly of section .init:

00011064 <.init>:
   11064:	push	{r3, lr}
   11068:	bl	113c0 <__assert_fail@plt+0x48>
   1106c:	pop	{r3, pc}

Disassembly of section .plt:

00011070 <calloc@plt-0x14>:
   11070:	push	{lr}		; (str lr, [sp, #-4]!)
   11074:	ldr	lr, [pc, #4]	; 11080 <calloc@plt-0x4>
   11078:	add	lr, pc, lr
   1107c:	ldr	pc, [lr, #8]!
   11080:	andeq	ip, r1, r0, lsl #31

00011084 <calloc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #28, 20	; 0x1c000
   1108c:	ldr	pc, [ip, #3968]!	; 0xf80

00011090 <fputs_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #28, 20	; 0x1c000
   11098:	ldr	pc, [ip, #3960]!	; 0xf78

0001109c <raise@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #28, 20	; 0x1c000
   110a4:	ldr	pc, [ip, #3952]!	; 0xf70

000110a8 <strcmp@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #28, 20	; 0x1c000
   110b0:	ldr	pc, [ip, #3944]!	; 0xf68

000110b4 <printf@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #28, 20	; 0x1c000
   110bc:	ldr	pc, [ip, #3936]!	; 0xf60

000110c0 <fflush@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #28, 20	; 0x1c000
   110c8:	ldr	pc, [ip, #3928]!	; 0xf58

000110cc <utmpxname@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #28, 20	; 0x1c000
   110d4:	ldr	pc, [ip, #3920]!	; 0xf50

000110d8 <free@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #28, 20	; 0x1c000
   110e0:	ldr	pc, [ip, #3912]!	; 0xf48

000110e4 <gai_strerror@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #28, 20	; 0x1c000
   110ec:	ldr	pc, [ip, #3904]!	; 0xf40

000110f0 <_exit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #28, 20	; 0x1c000
   110f8:	ldr	pc, [ip, #3896]!	; 0xf38

000110fc <memcpy@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #28, 20	; 0x1c000
   11104:	ldr	pc, [ip, #3888]!	; 0xf30

00011108 <mbsinit@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #28, 20	; 0x1c000
   11110:	ldr	pc, [ip, #3880]!	; 0xf28

00011114 <time@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #28, 20	; 0x1c000
   1111c:	ldr	pc, [ip, #3872]!	; 0xf20

00011120 <memcmp@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #28, 20	; 0x1c000
   11128:	ldr	pc, [ip, #3864]!	; 0xf18

0001112c <stpcpy@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #28, 20	; 0x1c000
   11134:	ldr	pc, [ip, #3856]!	; 0xf10

00011138 <strdup@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #28, 20	; 0x1c000
   11140:	ldr	pc, [ip, #3848]!	; 0xf08

00011144 <setutxent@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #28, 20	; 0x1c000
   1114c:	ldr	pc, [ip, #3840]!	; 0xf00

00011150 <realloc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #28, 20	; 0x1c000
   11158:	ldr	pc, [ip, #3832]!	; 0xef8

0001115c <textdomain@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #28, 20	; 0x1c000
   11164:	ldr	pc, [ip, #3824]!	; 0xef0

00011168 <iswprint@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #28, 20	; 0x1c000
   11170:	ldr	pc, [ip, #3816]!	; 0xee8

00011174 <lseek64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #28, 20	; 0x1c000
   1117c:	ldr	pc, [ip, #3808]!	; 0xee0

00011180 <__ctype_get_mb_cur_max@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #28, 20	; 0x1c000
   11188:	ldr	pc, [ip, #3800]!	; 0xed8

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #28, 20	; 0x1c000
   11194:	ldr	pc, [ip, #3792]!	; 0xed0

00011198 <ferror_unlocked@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #28, 20	; 0x1c000
   111a0:	ldr	pc, [ip, #3784]!	; 0xec8

000111a4 <mbrtowc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #28, 20	; 0x1c000
   111ac:	ldr	pc, [ip, #3776]!	; 0xec0

000111b0 <error@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #28, 20	; 0x1c000
   111b8:	ldr	pc, [ip, #3768]!	; 0xeb8

000111bc <puts@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #28, 20	; 0x1c000
   111c4:	ldr	pc, [ip, #3760]!	; 0xeb0

000111c8 <malloc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #28, 20	; 0x1c000
   111d0:	ldr	pc, [ip, #3752]!	; 0xea8

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #28, 20	; 0x1c000
   111dc:	ldr	pc, [ip, #3744]!	; 0xea0

000111e0 <strftime@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #28, 20	; 0x1c000
   111e8:	ldr	pc, [ip, #3736]!	; 0xe98

000111ec <__freading@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #28, 20	; 0x1c000
   111f4:	ldr	pc, [ip, #3728]!	; 0xe90

000111f8 <localtime@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #28, 20	; 0x1c000
   11200:	ldr	pc, [ip, #3720]!	; 0xe88

00011204 <__gmon_start__@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #28, 20	; 0x1c000
   1120c:	ldr	pc, [ip, #3712]!	; 0xe80

00011210 <getopt_long@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #28, 20	; 0x1c000
   11218:	ldr	pc, [ip, #3704]!	; 0xe78

0001121c <kill@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #28, 20	; 0x1c000
   11224:	ldr	pc, [ip, #3696]!	; 0xe70

00011228 <__ctype_b_loc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #28, 20	; 0x1c000
   11230:	ldr	pc, [ip, #3688]!	; 0xe68

00011234 <exit@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #28, 20	; 0x1c000
   1123c:	ldr	pc, [ip, #3680]!	; 0xe60

00011240 <gettext@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #28, 20	; 0x1c000
   11248:	ldr	pc, [ip, #3672]!	; 0xe58

0001124c <ttyname@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #28, 20	; 0x1c000
   11254:	ldr	pc, [ip, #3664]!	; 0xe50

00011258 <strlen@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #28, 20	; 0x1c000
   11260:	ldr	pc, [ip, #3656]!	; 0xe48

00011264 <strchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #28, 20	; 0x1c000
   1126c:	ldr	pc, [ip, #3648]!	; 0xe40

00011270 <fprintf@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #28, 20	; 0x1c000
   11278:	ldr	pc, [ip, #3640]!	; 0xe38

0001127c <__errno_location@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #28, 20	; 0x1c000
   11284:	ldr	pc, [ip, #3632]!	; 0xe30

00011288 <__cxa_atexit@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #28, 20	; 0x1c000
   11290:	ldr	pc, [ip, #3624]!	; 0xe28

00011294 <memset@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #28, 20	; 0x1c000
   1129c:	ldr	pc, [ip, #3616]!	; 0xe20

000112a0 <strncpy@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #28, 20	; 0x1c000
   112a8:	ldr	pc, [ip, #3608]!	; 0xe18

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #28, 20	; 0x1c000
   112b4:	ldr	pc, [ip, #3600]!	; 0xe10

000112b8 <asprintf@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #28, 20	; 0x1c000
   112c0:	ldr	pc, [ip, #3592]!	; 0xe08

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #28, 20	; 0x1c000
   112cc:	ldr	pc, [ip, #3584]!	; 0xe00

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #28, 20	; 0x1c000
   112d8:	ldr	pc, [ip, #3576]!	; 0xdf8

000112dc <endutxent@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #28, 20	; 0x1c000
   112e4:	ldr	pc, [ip, #3568]!	; 0xdf0

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #28, 20	; 0x1c000
   112f0:	ldr	pc, [ip, #3560]!	; 0xde8

000112f4 <strrchr@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #28, 20	; 0x1c000
   112fc:	ldr	pc, [ip, #3552]!	; 0xde0

00011300 <nl_langinfo@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #28, 20	; 0x1c000
   11308:	ldr	pc, [ip, #3544]!	; 0xdd8

0001130c <sprintf@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #28, 20	; 0x1c000
   11314:	ldr	pc, [ip, #3536]!	; 0xdd0

00011318 <freeaddrinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #28, 20	; 0x1c000
   11320:	ldr	pc, [ip, #3528]!	; 0xdc8

00011324 <getaddrinfo@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #28, 20	; 0x1c000
   1132c:	ldr	pc, [ip, #3520]!	; 0xdc0

00011330 <bindtextdomain@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #28, 20	; 0x1c000
   11338:	ldr	pc, [ip, #3512]!	; 0xdb8

0001133c <__xstat64@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #28, 20	; 0x1c000
   11344:	ldr	pc, [ip, #3504]!	; 0xdb0

00011348 <fputs@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #28, 20	; 0x1c000
   11350:	ldr	pc, [ip, #3496]!	; 0xda8

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #28, 20	; 0x1c000
   1135c:	ldr	pc, [ip, #3488]!	; 0xda0

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #28, 20	; 0x1c000
   11368:	ldr	pc, [ip, #3480]!	; 0xd98

0001136c <getutxent@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #28, 20	; 0x1c000
   11374:	ldr	pc, [ip, #3472]!	; 0xd90

00011378 <__assert_fail@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #28, 20	; 0x1c000
   11380:	ldr	pc, [ip, #3464]!	; 0xd88

Disassembly of section .text:

00011384 <.text>:
   11384:	mov	fp, #0
   11388:	mov	lr, #0
   1138c:	pop	{r1}		; (ldr r1, [sp], #4)
   11390:	mov	r2, sp
   11394:	push	{r2}		; (str r2, [sp, #-4]!)
   11398:	push	{r0}		; (str r0, [sp, #-4]!)
   1139c:	ldr	ip, [pc, #16]	; 113b4 <__assert_fail@plt+0x3c>
   113a0:	push	{ip}		; (str ip, [sp, #-4]!)
   113a4:	ldr	r0, [pc, #12]	; 113b8 <__assert_fail@plt+0x40>
   113a8:	ldr	r3, [pc, #12]	; 113bc <__assert_fail@plt+0x44>
   113ac:	bl	111d4 <__libc_start_main@plt>
   113b0:	bl	11360 <abort@plt>
   113b4:	andeq	ip, r1, ip, asr #3
   113b8:	andeq	r1, r1, r0, lsl r8
   113bc:	andeq	ip, r1, ip, ror #2
   113c0:	ldr	r3, [pc, #20]	; 113dc <__assert_fail@plt+0x64>
   113c4:	ldr	r2, [pc, #20]	; 113e0 <__assert_fail@plt+0x68>
   113c8:	add	r3, pc, r3
   113cc:	ldr	r2, [r3, r2]
   113d0:	cmp	r2, #0
   113d4:	bxeq	lr
   113d8:	b	11204 <__gmon_start__@plt>
   113dc:	andeq	ip, r1, r0, lsr ip
   113e0:	andeq	r0, r0, ip, lsl #2
   113e4:	ldr	r0, [pc, #24]	; 11404 <__assert_fail@plt+0x8c>
   113e8:	ldr	r3, [pc, #24]	; 11408 <__assert_fail@plt+0x90>
   113ec:	cmp	r3, r0
   113f0:	bxeq	lr
   113f4:	ldr	r3, [pc, #16]	; 1140c <__assert_fail@plt+0x94>
   113f8:	cmp	r3, #0
   113fc:	bxeq	lr
   11400:	bx	r3
   11404:	andeq	lr, r2, r8, ror #2
   11408:	andeq	lr, r2, r8, ror #2
   1140c:	andeq	r0, r0, r0
   11410:	ldr	r0, [pc, #36]	; 1143c <__assert_fail@plt+0xc4>
   11414:	ldr	r1, [pc, #36]	; 11440 <__assert_fail@plt+0xc8>
   11418:	sub	r1, r1, r0
   1141c:	asr	r1, r1, #2
   11420:	add	r1, r1, r1, lsr #31
   11424:	asrs	r1, r1, #1
   11428:	bxeq	lr
   1142c:	ldr	r3, [pc, #16]	; 11444 <__assert_fail@plt+0xcc>
   11430:	cmp	r3, #0
   11434:	bxeq	lr
   11438:	bx	r3
   1143c:	andeq	lr, r2, r8, ror #2
   11440:	andeq	lr, r2, r8, ror #2
   11444:	andeq	r0, r0, r0
   11448:	push	{r4, lr}
   1144c:	ldr	r4, [pc, #24]	; 1146c <__assert_fail@plt+0xf4>
   11450:	ldrb	r3, [r4]
   11454:	cmp	r3, #0
   11458:	popne	{r4, pc}
   1145c:	bl	113e4 <__assert_fail@plt+0x6c>
   11460:	mov	r3, #1
   11464:	strb	r3, [r4]
   11468:	pop	{r4, pc}
   1146c:	andeq	lr, r2, r0, lsl #3
   11470:	b	11410 <__assert_fail@plt+0x98>
   11474:	push	{fp, lr}
   11478:	mov	fp, sp
   1147c:	sub	sp, sp, #56	; 0x38
   11480:	str	r0, [fp, #-4]
   11484:	ldr	r0, [fp, #-4]
   11488:	cmp	r0, #0
   1148c:	beq	114dc <__assert_fail@plt+0x164>
   11490:	b	11494 <__assert_fail@plt+0x11c>
   11494:	movw	r0, #57720	; 0xe178
   11498:	movt	r0, #2
   1149c:	ldr	r0, [r0]
   114a0:	movw	r1, #49668	; 0xc204
   114a4:	movt	r1, #1
   114a8:	str	r0, [fp, #-8]
   114ac:	mov	r0, r1
   114b0:	bl	11240 <gettext@plt>
   114b4:	movw	r1, #57860	; 0xe204
   114b8:	movt	r1, #2
   114bc:	ldr	r2, [r1]
   114c0:	ldr	r1, [fp, #-8]
   114c4:	str	r0, [fp, #-12]
   114c8:	mov	r0, r1
   114cc:	ldr	r1, [fp, #-12]
   114d0:	bl	11270 <fprintf@plt>
   114d4:	str	r0, [fp, #-16]
   114d8:	b	11654 <__assert_fail@plt+0x2dc>
   114dc:	movw	r0, #49707	; 0xc22b
   114e0:	movt	r0, #1
   114e4:	bl	11240 <gettext@plt>
   114e8:	movw	lr, #57860	; 0xe204
   114ec:	movt	lr, #2
   114f0:	ldr	r1, [lr]
   114f4:	bl	110b4 <printf@plt>
   114f8:	movw	r1, #49751	; 0xc257
   114fc:	movt	r1, #1
   11500:	str	r0, [fp, #-20]	; 0xffffffec
   11504:	mov	r0, r1
   11508:	bl	11240 <gettext@plt>
   1150c:	movw	r1, #57724	; 0xe17c
   11510:	movt	r1, #2
   11514:	ldr	r1, [r1]
   11518:	bl	11090 <fputs_unlocked@plt>
   1151c:	movw	r1, #49811	; 0xc293
   11520:	movt	r1, #1
   11524:	str	r0, [fp, #-24]	; 0xffffffe8
   11528:	mov	r0, r1
   1152c:	bl	11240 <gettext@plt>
   11530:	movw	r1, #57724	; 0xe17c
   11534:	movt	r1, #2
   11538:	ldr	r1, [r1]
   1153c:	bl	11090 <fputs_unlocked@plt>
   11540:	movw	r1, #50006	; 0xc356
   11544:	movt	r1, #1
   11548:	str	r0, [sp, #28]
   1154c:	mov	r0, r1
   11550:	bl	11240 <gettext@plt>
   11554:	movw	r1, #57724	; 0xe17c
   11558:	movt	r1, #2
   1155c:	ldr	r1, [r1]
   11560:	bl	11090 <fputs_unlocked@plt>
   11564:	movw	r1, #50056	; 0xc388
   11568:	movt	r1, #1
   1156c:	str	r0, [sp, #24]
   11570:	mov	r0, r1
   11574:	bl	11240 <gettext@plt>
   11578:	movw	r1, #57724	; 0xe17c
   1157c:	movt	r1, #2
   11580:	ldr	r1, [r1]
   11584:	bl	11090 <fputs_unlocked@plt>
   11588:	movw	r1, #50243	; 0xc443
   1158c:	movt	r1, #1
   11590:	str	r0, [sp, #20]
   11594:	mov	r0, r1
   11598:	bl	11240 <gettext@plt>
   1159c:	movw	r1, #57724	; 0xe17c
   115a0:	movt	r1, #2
   115a4:	ldr	r1, [r1]
   115a8:	bl	11090 <fputs_unlocked@plt>
   115ac:	movw	r1, #50466	; 0xc522
   115b0:	movt	r1, #1
   115b4:	str	r0, [sp, #16]
   115b8:	mov	r0, r1
   115bc:	bl	11240 <gettext@plt>
   115c0:	movw	r1, #57724	; 0xe17c
   115c4:	movt	r1, #2
   115c8:	ldr	r1, [r1]
   115cc:	bl	11090 <fputs_unlocked@plt>
   115d0:	movw	r1, #50629	; 0xc5c5
   115d4:	movt	r1, #1
   115d8:	str	r0, [sp, #12]
   115dc:	mov	r0, r1
   115e0:	bl	11240 <gettext@plt>
   115e4:	movw	r1, #57724	; 0xe17c
   115e8:	movt	r1, #2
   115ec:	ldr	r1, [r1]
   115f0:	bl	11090 <fputs_unlocked@plt>
   115f4:	movw	r1, #50674	; 0xc5f2
   115f8:	movt	r1, #1
   115fc:	str	r0, [sp, #8]
   11600:	mov	r0, r1
   11604:	bl	11240 <gettext@plt>
   11608:	movw	r1, #57724	; 0xe17c
   1160c:	movt	r1, #2
   11610:	ldr	r1, [r1]
   11614:	bl	11090 <fputs_unlocked@plt>
   11618:	movw	r1, #50728	; 0xc628
   1161c:	movt	r1, #1
   11620:	str	r0, [sp, #4]
   11624:	mov	r0, r1
   11628:	bl	11240 <gettext@plt>
   1162c:	movw	r1, #50853	; 0xc6a5
   11630:	movt	r1, #1
   11634:	movw	r2, #50867	; 0xc6b3
   11638:	movt	r2, #1
   1163c:	bl	110b4 <printf@plt>
   11640:	movw	r1, #50881	; 0xc6c1
   11644:	movt	r1, #1
   11648:	str	r0, [sp]
   1164c:	mov	r0, r1
   11650:	bl	1165c <__assert_fail@plt+0x2e4>
   11654:	ldr	r0, [fp, #-4]
   11658:	bl	11234 <exit@plt>
   1165c:	push	{fp, lr}
   11660:	mov	fp, sp
   11664:	sub	sp, sp, #96	; 0x60
   11668:	add	r1, sp, #36	; 0x24
   1166c:	movw	r2, #52064	; 0xcb60
   11670:	movt	r2, #1
   11674:	str	r0, [fp, #-4]
   11678:	mov	r0, r1
   1167c:	str	r1, [sp, #20]
   11680:	mov	r1, r2
   11684:	movw	r2, #56	; 0x38
   11688:	bl	110fc <memcpy@plt>
   1168c:	ldr	r0, [fp, #-4]
   11690:	str	r0, [sp, #32]
   11694:	ldr	r0, [sp, #20]
   11698:	str	r0, [sp, #28]
   1169c:	ldr	r0, [sp, #28]
   116a0:	ldr	r0, [r0]
   116a4:	movw	r1, #0
   116a8:	cmp	r0, r1
   116ac:	movw	r0, #0
   116b0:	str	r0, [sp, #16]
   116b4:	beq	116e0 <__assert_fail@plt+0x368>
   116b8:	ldr	r0, [fp, #-4]
   116bc:	ldr	r1, [sp, #28]
   116c0:	ldr	r1, [r1]
   116c4:	bl	110a8 <strcmp@plt>
   116c8:	cmp	r0, #0
   116cc:	movw	r0, #0
   116d0:	moveq	r0, #1
   116d4:	mvn	r1, #0
   116d8:	eor	r0, r0, r1
   116dc:	str	r0, [sp, #16]
   116e0:	ldr	r0, [sp, #16]
   116e4:	tst	r0, #1
   116e8:	beq	116fc <__assert_fail@plt+0x384>
   116ec:	ldr	r0, [sp, #28]
   116f0:	add	r0, r0, #8
   116f4:	str	r0, [sp, #28]
   116f8:	b	1169c <__assert_fail@plt+0x324>
   116fc:	ldr	r0, [sp, #28]
   11700:	ldr	r0, [r0, #4]
   11704:	movw	r1, #0
   11708:	cmp	r0, r1
   1170c:	beq	1171c <__assert_fail@plt+0x3a4>
   11710:	ldr	r0, [sp, #28]
   11714:	ldr	r0, [r0, #4]
   11718:	str	r0, [sp, #32]
   1171c:	movw	r0, #51124	; 0xc7b4
   11720:	movt	r0, #1
   11724:	bl	11240 <gettext@plt>
   11728:	movw	r1, #50924	; 0xc6ec
   1172c:	movt	r1, #1
   11730:	movw	r2, #51147	; 0xc7cb
   11734:	movt	r2, #1
   11738:	bl	110b4 <printf@plt>
   1173c:	movw	r1, #5
   11740:	str	r0, [sp, #12]
   11744:	mov	r0, r1
   11748:	movw	r1, #0
   1174c:	bl	112e8 <setlocale@plt>
   11750:	str	r0, [sp, #24]
   11754:	ldr	r0, [sp, #24]
   11758:	movw	r1, #0
   1175c:	cmp	r0, r1
   11760:	beq	117a0 <__assert_fail@plt+0x428>
   11764:	ldr	r0, [sp, #24]
   11768:	movw	r1, #51187	; 0xc7f3
   1176c:	movt	r1, #1
   11770:	movw	r2, #3
   11774:	bl	11354 <strncmp@plt>
   11778:	cmp	r0, #0
   1177c:	beq	117a0 <__assert_fail@plt+0x428>
   11780:	movw	r0, #51191	; 0xc7f7
   11784:	movt	r0, #1
   11788:	bl	11240 <gettext@plt>
   1178c:	movw	lr, #57724	; 0xe17c
   11790:	movt	lr, #2
   11794:	ldr	r1, [lr]
   11798:	bl	11090 <fputs_unlocked@plt>
   1179c:	str	r0, [sp, #8]
   117a0:	movw	r0, #51262	; 0xc83e
   117a4:	movt	r0, #1
   117a8:	bl	11240 <gettext@plt>
   117ac:	ldr	r2, [fp, #-4]
   117b0:	movw	r1, #51147	; 0xc7cb
   117b4:	movt	r1, #1
   117b8:	bl	110b4 <printf@plt>
   117bc:	movw	r1, #51289	; 0xc859
   117c0:	movt	r1, #1
   117c4:	str	r0, [sp, #4]
   117c8:	mov	r0, r1
   117cc:	bl	11240 <gettext@plt>
   117d0:	ldr	r1, [sp, #32]
   117d4:	ldr	r2, [sp, #32]
   117d8:	ldr	lr, [fp, #-4]
   117dc:	cmp	r2, lr
   117e0:	movw	r2, #0
   117e4:	moveq	r2, #1
   117e8:	tst	r2, #1
   117ec:	movw	r2, #51339	; 0xc88b
   117f0:	movt	r2, #1
   117f4:	movw	lr, #51057	; 0xc771
   117f8:	movt	lr, #1
   117fc:	movne	r2, lr
   11800:	bl	110b4 <printf@plt>
   11804:	str	r0, [sp]
   11808:	mov	sp, fp
   1180c:	pop	{fp, pc}
   11810:	push	{fp, lr}
   11814:	mov	fp, sp
   11818:	sub	sp, sp, #72	; 0x48
   1181c:	movw	r2, #0
   11820:	str	r2, [fp, #-4]
   11824:	str	r0, [fp, #-8]
   11828:	str	r1, [fp, #-12]
   1182c:	movw	r0, #1
   11830:	strb	r0, [fp, #-17]	; 0xffffffef
   11834:	ldr	r0, [fp, #-12]
   11838:	ldr	r0, [r0]
   1183c:	bl	13fd8 <__assert_fail@plt+0x2c60>
   11840:	movw	r0, #6
   11844:	movw	r1, #51339	; 0xc88b
   11848:	movt	r1, #1
   1184c:	bl	112e8 <setlocale@plt>
   11850:	movw	r1, #50928	; 0xc6f0
   11854:	movt	r1, #1
   11858:	str	r0, [fp, #-24]	; 0xffffffe8
   1185c:	mov	r0, r1
   11860:	movw	r1, #50885	; 0xc6c5
   11864:	movt	r1, #1
   11868:	bl	11330 <bindtextdomain@plt>
   1186c:	movw	r1, #50928	; 0xc6f0
   11870:	movt	r1, #1
   11874:	str	r0, [fp, #-28]	; 0xffffffe4
   11878:	mov	r0, r1
   1187c:	bl	1115c <textdomain@plt>
   11880:	movw	r1, #15516	; 0x3c9c
   11884:	movt	r1, #1
   11888:	str	r0, [fp, #-32]	; 0xffffffe0
   1188c:	mov	r0, r1
   11890:	bl	1c1d0 <__assert_fail@plt+0xae58>
   11894:	str	r0, [sp, #36]	; 0x24
   11898:	ldr	r0, [fp, #-8]
   1189c:	ldr	r1, [fp, #-12]
   118a0:	movw	r2, #50909	; 0xc6dd
   118a4:	movt	r2, #1
   118a8:	movw	r3, #51776	; 0xca40
   118ac:	movt	r3, #1
   118b0:	movw	ip, #0
   118b4:	str	ip, [sp]
   118b8:	bl	11210 <getopt_long@plt>
   118bc:	str	r0, [fp, #-16]
   118c0:	cmn	r0, #1
   118c4:	beq	11c50 <__assert_fail@plt+0x8d8>
   118c8:	ldr	r0, [fp, #-16]
   118cc:	cmn	r0, #3
   118d0:	str	r0, [sp, #32]
   118d4:	beq	11be4 <__assert_fail@plt+0x86c>
   118d8:	b	118dc <__assert_fail@plt+0x564>
   118dc:	ldr	r0, [sp, #32]
   118e0:	cmn	r0, #2
   118e4:	beq	11bdc <__assert_fail@plt+0x864>
   118e8:	b	118ec <__assert_fail@plt+0x574>
   118ec:	ldr	r0, [sp, #32]
   118f0:	cmp	r0, #72	; 0x48
   118f4:	beq	11ab4 <__assert_fail@plt+0x73c>
   118f8:	b	118fc <__assert_fail@plt+0x584>
   118fc:	ldr	r0, [sp, #32]
   11900:	cmp	r0, #84	; 0x54
   11904:	beq	11b8c <__assert_fail@plt+0x814>
   11908:	b	1190c <__assert_fail@plt+0x594>
   1190c:	ldr	r0, [sp, #32]
   11910:	cmp	r0, #97	; 0x61
   11914:	beq	119dc <__assert_fail@plt+0x664>
   11918:	b	1191c <__assert_fail@plt+0x5a4>
   1191c:	ldr	r0, [sp, #32]
   11920:	cmp	r0, #98	; 0x62
   11924:	beq	11a64 <__assert_fail@plt+0x6ec>
   11928:	b	1192c <__assert_fail@plt+0x5b4>
   1192c:	ldr	r0, [sp, #32]
   11930:	cmp	r0, #100	; 0x64
   11934:	beq	11a80 <__assert_fail@plt+0x708>
   11938:	b	1193c <__assert_fail@plt+0x5c4>
   1193c:	ldr	r0, [sp, #32]
   11940:	cmp	r0, #108	; 0x6c
   11944:	beq	11ac8 <__assert_fail@plt+0x750>
   11948:	b	1194c <__assert_fail@plt+0x5d4>
   1194c:	ldr	r0, [sp, #32]
   11950:	cmp	r0, #109	; 0x6d
   11954:	beq	11af0 <__assert_fail@plt+0x778>
   11958:	b	1195c <__assert_fail@plt+0x5e4>
   1195c:	ldr	r0, [sp, #32]
   11960:	cmp	r0, #112	; 0x70
   11964:	beq	11b04 <__assert_fail@plt+0x78c>
   11968:	b	1196c <__assert_fail@plt+0x5f4>
   1196c:	ldr	r0, [sp, #32]
   11970:	cmp	r0, #113	; 0x71
   11974:	beq	11b20 <__assert_fail@plt+0x7a8>
   11978:	b	1197c <__assert_fail@plt+0x604>
   1197c:	ldr	r0, [sp, #32]
   11980:	cmp	r0, #114	; 0x72
   11984:	beq	11b34 <__assert_fail@plt+0x7bc>
   11988:	b	1198c <__assert_fail@plt+0x614>
   1198c:	ldr	r0, [sp, #32]
   11990:	cmp	r0, #115	; 0x73
   11994:	beq	11b5c <__assert_fail@plt+0x7e4>
   11998:	b	1199c <__assert_fail@plt+0x624>
   1199c:	ldr	r0, [sp, #32]
   119a0:	cmp	r0, #116	; 0x74
   119a4:	beq	11b70 <__assert_fail@plt+0x7f8>
   119a8:	b	119ac <__assert_fail@plt+0x634>
   119ac:	ldr	r0, [sp, #32]
   119b0:	cmp	r0, #117	; 0x75
   119b4:	beq	11ba0 <__assert_fail@plt+0x828>
   119b8:	b	119bc <__assert_fail@plt+0x644>
   119bc:	ldr	r0, [sp, #32]
   119c0:	cmp	r0, #119	; 0x77
   119c4:	beq	11b8c <__assert_fail@plt+0x814>
   119c8:	b	119cc <__assert_fail@plt+0x654>
   119cc:	ldr	r0, [sp, #32]
   119d0:	cmp	r0, #256	; 0x100
   119d4:	beq	11bc8 <__assert_fail@plt+0x850>
   119d8:	b	11c44 <__assert_fail@plt+0x8cc>
   119dc:	movw	r0, #57732	; 0xe184
   119e0:	movt	r0, #2
   119e4:	movw	r1, #1
   119e8:	strb	r1, [r0]
   119ec:	movw	r0, #57733	; 0xe185
   119f0:	movt	r0, #2
   119f4:	strb	r1, [r0]
   119f8:	movw	r0, #57734	; 0xe186
   119fc:	movt	r0, #2
   11a00:	strb	r1, [r0]
   11a04:	movw	r0, #57735	; 0xe187
   11a08:	movt	r0, #2
   11a0c:	strb	r1, [r0]
   11a10:	movw	r0, #57736	; 0xe188
   11a14:	movt	r0, #2
   11a18:	strb	r1, [r0]
   11a1c:	movw	r0, #57737	; 0xe189
   11a20:	movt	r0, #2
   11a24:	strb	r1, [r0]
   11a28:	movw	r0, #57738	; 0xe18a
   11a2c:	movt	r0, #2
   11a30:	strb	r1, [r0]
   11a34:	movw	r0, #57739	; 0xe18b
   11a38:	movt	r0, #2
   11a3c:	strb	r1, [r0]
   11a40:	movw	r0, #57740	; 0xe18c
   11a44:	movt	r0, #2
   11a48:	strb	r1, [r0]
   11a4c:	movw	r0, #57741	; 0xe18d
   11a50:	movt	r0, #2
   11a54:	strb	r1, [r0]
   11a58:	movw	r0, #0
   11a5c:	strb	r0, [fp, #-17]	; 0xffffffef
   11a60:	b	11c4c <__assert_fail@plt+0x8d4>
   11a64:	movw	r0, #57732	; 0xe184
   11a68:	movt	r0, #2
   11a6c:	movw	r1, #1
   11a70:	strb	r1, [r0]
   11a74:	movw	r0, #0
   11a78:	strb	r0, [fp, #-17]	; 0xffffffef
   11a7c:	b	11c4c <__assert_fail@plt+0x8d4>
   11a80:	movw	r0, #57733	; 0xe185
   11a84:	movt	r0, #2
   11a88:	movw	r1, #1
   11a8c:	strb	r1, [r0]
   11a90:	movw	r0, #57740	; 0xe18c
   11a94:	movt	r0, #2
   11a98:	strb	r1, [r0]
   11a9c:	movw	r0, #57741	; 0xe18d
   11aa0:	movt	r0, #2
   11aa4:	strb	r1, [r0]
   11aa8:	movw	r0, #0
   11aac:	strb	r0, [fp, #-17]	; 0xffffffef
   11ab0:	b	11c4c <__assert_fail@plt+0x8d4>
   11ab4:	movw	r0, #57742	; 0xe18e
   11ab8:	movt	r0, #2
   11abc:	movw	r1, #1
   11ac0:	strb	r1, [r0]
   11ac4:	b	11c4c <__assert_fail@plt+0x8d4>
   11ac8:	movw	r0, #57734	; 0xe186
   11acc:	movt	r0, #2
   11ad0:	movw	r1, #1
   11ad4:	strb	r1, [r0]
   11ad8:	movw	r0, #57740	; 0xe18c
   11adc:	movt	r0, #2
   11ae0:	strb	r1, [r0]
   11ae4:	movw	r0, #0
   11ae8:	strb	r0, [fp, #-17]	; 0xffffffef
   11aec:	b	11c4c <__assert_fail@plt+0x8d4>
   11af0:	movw	r0, #57743	; 0xe18f
   11af4:	movt	r0, #2
   11af8:	movw	r1, #1
   11afc:	strb	r1, [r0]
   11b00:	b	11c4c <__assert_fail@plt+0x8d4>
   11b04:	movw	r0, #57735	; 0xe187
   11b08:	movt	r0, #2
   11b0c:	movw	r1, #1
   11b10:	strb	r1, [r0]
   11b14:	movw	r0, #0
   11b18:	strb	r0, [fp, #-17]	; 0xffffffef
   11b1c:	b	11c4c <__assert_fail@plt+0x8d4>
   11b20:	movw	r0, #57744	; 0xe190
   11b24:	movt	r0, #2
   11b28:	movw	r1, #1
   11b2c:	strb	r1, [r0]
   11b30:	b	11c4c <__assert_fail@plt+0x8d4>
   11b34:	movw	r0, #57736	; 0xe188
   11b38:	movt	r0, #2
   11b3c:	movw	r1, #1
   11b40:	strb	r1, [r0]
   11b44:	movw	r0, #57740	; 0xe18c
   11b48:	movt	r0, #2
   11b4c:	strb	r1, [r0]
   11b50:	movw	r0, #0
   11b54:	strb	r0, [fp, #-17]	; 0xffffffef
   11b58:	b	11c4c <__assert_fail@plt+0x8d4>
   11b5c:	movw	r0, #57745	; 0xe191
   11b60:	movt	r0, #2
   11b64:	movw	r1, #1
   11b68:	strb	r1, [r0]
   11b6c:	b	11c4c <__assert_fail@plt+0x8d4>
   11b70:	movw	r0, #57737	; 0xe189
   11b74:	movt	r0, #2
   11b78:	movw	r1, #1
   11b7c:	strb	r1, [r0]
   11b80:	movw	r0, #0
   11b84:	strb	r0, [fp, #-17]	; 0xffffffef
   11b88:	b	11c4c <__assert_fail@plt+0x8d4>
   11b8c:	movw	r0, #57739	; 0xe18b
   11b90:	movt	r0, #2
   11b94:	movw	r1, #1
   11b98:	strb	r1, [r0]
   11b9c:	b	11c4c <__assert_fail@plt+0x8d4>
   11ba0:	movw	r0, #57738	; 0xe18a
   11ba4:	movt	r0, #2
   11ba8:	movw	r1, #1
   11bac:	strb	r1, [r0]
   11bb0:	movw	r0, #57740	; 0xe18c
   11bb4:	movt	r0, #2
   11bb8:	strb	r1, [r0]
   11bbc:	movw	r0, #0
   11bc0:	strb	r0, [fp, #-17]	; 0xffffffef
   11bc4:	b	11c4c <__assert_fail@plt+0x8d4>
   11bc8:	movw	r0, #57746	; 0xe192
   11bcc:	movt	r0, #2
   11bd0:	movw	r1, #1
   11bd4:	strb	r1, [r0]
   11bd8:	b	11c4c <__assert_fail@plt+0x8d4>
   11bdc:	movw	r0, #0
   11be0:	bl	11474 <__assert_fail@plt+0xfc>
   11be4:	movw	r0, #57724	; 0xe17c
   11be8:	movt	r0, #2
   11bec:	ldr	r0, [r0]
   11bf0:	movw	r1, #57632	; 0xe120
   11bf4:	movt	r1, #2
   11bf8:	ldr	r3, [r1]
   11bfc:	movw	r1, #50881	; 0xc6c1
   11c00:	movt	r1, #1
   11c04:	movw	r2, #50924	; 0xc6ec
   11c08:	movt	r2, #1
   11c0c:	movw	ip, #50938	; 0xc6fa
   11c10:	movt	ip, #1
   11c14:	str	ip, [sp]
   11c18:	movw	ip, #50955	; 0xc70b
   11c1c:	movt	ip, #1
   11c20:	str	ip, [sp, #4]
   11c24:	movw	ip, #50971	; 0xc71b
   11c28:	movt	ip, #1
   11c2c:	str	ip, [sp, #8]
   11c30:	movw	ip, #0
   11c34:	str	ip, [sp, #12]
   11c38:	bl	17318 <__assert_fail@plt+0x5fa0>
   11c3c:	movw	r0, #0
   11c40:	bl	11234 <exit@plt>
   11c44:	movw	r0, #1
   11c48:	bl	11474 <__assert_fail@plt+0xfc>
   11c4c:	b	11898 <__assert_fail@plt+0x520>
   11c50:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11c54:	tst	r0, #1
   11c58:	beq	11c78 <__assert_fail@plt+0x900>
   11c5c:	movw	r0, #57738	; 0xe18a
   11c60:	movt	r0, #2
   11c64:	movw	r1, #1
   11c68:	strb	r1, [r0]
   11c6c:	movw	r0, #57745	; 0xe191
   11c70:	movt	r0, #2
   11c74:	strb	r1, [r0]
   11c78:	movw	r0, #57741	; 0xe18d
   11c7c:	movt	r0, #2
   11c80:	ldrb	r0, [r0]
   11c84:	tst	r0, #1
   11c88:	beq	11c9c <__assert_fail@plt+0x924>
   11c8c:	movw	r0, #57745	; 0xe191
   11c90:	movt	r0, #2
   11c94:	movw	r1, #0
   11c98:	strb	r1, [r0]
   11c9c:	movw	r0, #2
   11ca0:	bl	13dfc <__assert_fail@plt+0x2a84>
   11ca4:	tst	r0, #1
   11ca8:	beq	11cd4 <__assert_fail@plt+0x95c>
   11cac:	movw	r0, #57748	; 0xe194
   11cb0:	movt	r0, #2
   11cb4:	movw	r1, #50985	; 0xc729
   11cb8:	movt	r1, #1
   11cbc:	str	r1, [r0]
   11cc0:	movw	r0, #57752	; 0xe198
   11cc4:	movt	r0, #2
   11cc8:	movw	r1, #16
   11ccc:	str	r1, [r0]
   11cd0:	b	11cf8 <__assert_fail@plt+0x980>
   11cd4:	movw	r0, #57748	; 0xe194
   11cd8:	movt	r0, #2
   11cdc:	movw	r1, #51000	; 0xc738
   11ce0:	movt	r1, #1
   11ce4:	str	r1, [r0]
   11ce8:	movw	r0, #57752	; 0xe198
   11cec:	movt	r0, #2
   11cf0:	movw	r1, #12
   11cf4:	str	r1, [r0]
   11cf8:	ldr	r0, [fp, #-8]
   11cfc:	movw	r1, #57712	; 0xe170
   11d00:	movt	r1, #2
   11d04:	ldr	r1, [r1]
   11d08:	sub	r0, r0, r1
   11d0c:	add	r1, r0, #1
   11d10:	cmp	r1, #2
   11d14:	str	r0, [sp, #28]
   11d18:	bcc	11d50 <__assert_fail@plt+0x9d8>
   11d1c:	b	11d20 <__assert_fail@plt+0x9a8>
   11d20:	ldr	r0, [sp, #28]
   11d24:	cmp	r0, #1
   11d28:	beq	11d64 <__assert_fail@plt+0x9ec>
   11d2c:	b	11d30 <__assert_fail@plt+0x9b8>
   11d30:	ldr	r0, [sp, #28]
   11d34:	cmp	r0, #2
   11d38:	bne	11d88 <__assert_fail@plt+0xa10>
   11d3c:	b	11d40 <__assert_fail@plt+0x9c8>
   11d40:	movw	r0, #57743	; 0xe18f
   11d44:	movt	r0, #2
   11d48:	movw	r1, #1
   11d4c:	strb	r1, [r0]
   11d50:	movw	r0, #50853	; 0xc6a5
   11d54:	movt	r0, #1
   11d58:	movw	r1, #1
   11d5c:	bl	11de8 <__assert_fail@plt+0xa70>
   11d60:	b	11ddc <__assert_fail@plt+0xa64>
   11d64:	ldr	r0, [fp, #-12]
   11d68:	movw	r1, #57712	; 0xe170
   11d6c:	movt	r1, #2
   11d70:	ldr	r1, [r1]
   11d74:	add	r0, r0, r1, lsl #2
   11d78:	ldr	r0, [r0]
   11d7c:	movw	r1, #0
   11d80:	bl	11de8 <__assert_fail@plt+0xa70>
   11d84:	b	11ddc <__assert_fail@plt+0xa64>
   11d88:	movw	r0, #51012	; 0xc744
   11d8c:	movt	r0, #1
   11d90:	bl	11240 <gettext@plt>
   11d94:	ldr	lr, [fp, #-12]
   11d98:	movw	r1, #57712	; 0xe170
   11d9c:	movt	r1, #2
   11da0:	ldr	r1, [r1]
   11da4:	add	r1, r1, #2
   11da8:	add	r1, lr, r1, lsl #2
   11dac:	ldr	r1, [r1]
   11db0:	str	r0, [sp, #24]
   11db4:	mov	r0, r1
   11db8:	bl	16634 <__assert_fail@plt+0x52bc>
   11dbc:	movw	r1, #0
   11dc0:	str	r0, [sp, #20]
   11dc4:	mov	r0, r1
   11dc8:	ldr	r2, [sp, #24]
   11dcc:	ldr	r3, [sp, #20]
   11dd0:	bl	111b0 <error@plt>
   11dd4:	movw	r0, #1
   11dd8:	bl	11474 <__assert_fail@plt+0xfc>
   11ddc:	movw	r0, #0
   11de0:	mov	sp, fp
   11de4:	pop	{fp, pc}
   11de8:	push	{fp, lr}
   11dec:	mov	fp, sp
   11df0:	sub	sp, sp, #24
   11df4:	str	r0, [fp, #-4]
   11df8:	str	r1, [fp, #-8]
   11dfc:	ldr	r0, [fp, #-4]
   11e00:	ldr	r3, [fp, #-8]
   11e04:	add	r1, sp, #12
   11e08:	add	r2, sp, #8
   11e0c:	bl	16840 <__assert_fail@plt+0x54c8>
   11e10:	cmp	r0, #0
   11e14:	beq	11e58 <__assert_fail@plt+0xae0>
   11e18:	bl	1127c <__errno_location@plt>
   11e1c:	ldr	r1, [r0]
   11e20:	ldr	r2, [fp, #-4]
   11e24:	movw	r0, #0
   11e28:	movw	lr, #3
   11e2c:	str	r1, [sp, #4]
   11e30:	mov	r1, lr
   11e34:	bl	163f0 <__assert_fail@plt+0x5078>
   11e38:	movw	r1, #1
   11e3c:	str	r0, [sp]
   11e40:	mov	r0, r1
   11e44:	ldr	r1, [sp, #4]
   11e48:	movw	r2, #52151	; 0xcbb7
   11e4c:	movt	r2, #1
   11e50:	ldr	r3, [sp]
   11e54:	bl	111b0 <error@plt>
   11e58:	movw	r0, #57744	; 0xe190
   11e5c:	movt	r0, #2
   11e60:	ldrb	r0, [r0]
   11e64:	tst	r0, #1
   11e68:	beq	11e7c <__assert_fail@plt+0xb04>
   11e6c:	ldr	r0, [sp, #12]
   11e70:	ldr	r1, [sp, #8]
   11e74:	bl	11e98 <__assert_fail@plt+0xb20>
   11e78:	b	11e88 <__assert_fail@plt+0xb10>
   11e7c:	ldr	r0, [sp, #12]
   11e80:	ldr	r1, [sp, #8]
   11e84:	bl	11f70 <__assert_fail@plt+0xbf8>
   11e88:	ldr	r0, [sp, #8]
   11e8c:	bl	13dbc <__assert_fail@plt+0x2a44>
   11e90:	mov	sp, fp
   11e94:	pop	{fp, pc}
   11e98:	push	{fp, lr}
   11e9c:	mov	fp, sp
   11ea0:	sub	sp, sp, #32
   11ea4:	str	r0, [fp, #-4]
   11ea8:	str	r1, [fp, #-8]
   11eac:	movw	r0, #0
   11eb0:	str	r0, [fp, #-12]
   11eb4:	movw	r0, #51339	; 0xc88b
   11eb8:	movt	r0, #1
   11ebc:	str	r0, [sp, #16]
   11ec0:	ldr	r0, [fp, #-4]
   11ec4:	mvn	r1, #0
   11ec8:	add	r1, r0, r1
   11ecc:	str	r1, [fp, #-4]
   11ed0:	cmp	r0, #0
   11ed4:	beq	11f50 <__assert_fail@plt+0xbd8>
   11ed8:	ldr	r0, [fp, #-8]
   11edc:	ldrb	r0, [r0, #44]	; 0x2c
   11ee0:	cmp	r0, #0
   11ee4:	beq	11f40 <__assert_fail@plt+0xbc8>
   11ee8:	ldr	r0, [fp, #-8]
   11eec:	ldrsh	r0, [r0]
   11ef0:	cmp	r0, #7
   11ef4:	bne	11f40 <__assert_fail@plt+0xbc8>
   11ef8:	ldr	r0, [fp, #-8]
   11efc:	bl	1676c <__assert_fail@plt+0x53f4>
   11f00:	str	r0, [sp, #12]
   11f04:	ldr	r1, [sp, #16]
   11f08:	ldr	r2, [sp, #12]
   11f0c:	movw	r0, #51445	; 0xc8f5
   11f10:	movt	r0, #1
   11f14:	bl	110b4 <printf@plt>
   11f18:	ldr	r1, [sp, #12]
   11f1c:	str	r0, [sp, #8]
   11f20:	mov	r0, r1
   11f24:	bl	13dbc <__assert_fail@plt+0x2a44>
   11f28:	movw	r0, #51594	; 0xc98a
   11f2c:	movt	r0, #1
   11f30:	str	r0, [sp, #16]
   11f34:	ldr	r0, [fp, #-12]
   11f38:	add	r0, r0, #1
   11f3c:	str	r0, [fp, #-12]
   11f40:	ldr	r0, [fp, #-8]
   11f44:	add	r0, r0, #384	; 0x180
   11f48:	str	r0, [fp, #-8]
   11f4c:	b	11ec0 <__assert_fail@plt+0xb48>
   11f50:	movw	r0, #51450	; 0xc8fa
   11f54:	movt	r0, #1
   11f58:	bl	11240 <gettext@plt>
   11f5c:	ldr	r1, [fp, #-12]
   11f60:	bl	110b4 <printf@plt>
   11f64:	str	r0, [sp, #4]
   11f68:	mov	sp, fp
   11f6c:	pop	{fp, pc}
   11f70:	push	{fp, lr}
   11f74:	mov	fp, sp
   11f78:	sub	sp, sp, #16
   11f7c:	ldr	r2, [pc, #636]	; 12200 <__assert_fail@plt+0xe88>
   11f80:	str	r0, [fp, #-4]
   11f84:	str	r1, [sp, #8]
   11f88:	str	r2, [sp]
   11f8c:	movw	r0, #57742	; 0xe18e
   11f90:	movt	r0, #2
   11f94:	ldrb	r0, [r0]
   11f98:	tst	r0, #1
   11f9c:	beq	11fa4 <__assert_fail@plt+0xc2c>
   11fa0:	bl	12204 <__assert_fail@plt+0xe8c>
   11fa4:	movw	r0, #57743	; 0xe18f
   11fa8:	movt	r0, #2
   11fac:	ldrb	r0, [r0]
   11fb0:	tst	r0, #1
   11fb4:	beq	12004 <__assert_fail@plt+0xc8c>
   11fb8:	movw	r0, #0
   11fbc:	bl	1124c <ttyname@plt>
   11fc0:	str	r0, [sp, #4]
   11fc4:	ldr	r0, [sp, #4]
   11fc8:	movw	lr, #0
   11fcc:	cmp	r0, lr
   11fd0:	bne	11fd8 <__assert_fail@plt+0xc60>
   11fd4:	b	121f8 <__assert_fail@plt+0xe80>
   11fd8:	ldr	r0, [sp, #4]
   11fdc:	movw	r1, #51464	; 0xc908
   11fe0:	movt	r1, #1
   11fe4:	movw	r2, #5
   11fe8:	bl	11354 <strncmp@plt>
   11fec:	cmp	r0, #0
   11ff0:	bne	12000 <__assert_fail@plt+0xc88>
   11ff4:	ldr	r0, [sp, #4]
   11ff8:	add	r0, r0, #5
   11ffc:	str	r0, [sp, #4]
   12000:	b	12004 <__assert_fail@plt+0xc8c>
   12004:	b	12008 <__assert_fail@plt+0xc90>
   12008:	ldr	r0, [fp, #-4]
   1200c:	mvn	r1, #0
   12010:	add	r1, r0, r1
   12014:	str	r1, [fp, #-4]
   12018:	cmp	r0, #0
   1201c:	beq	121f8 <__assert_fail@plt+0xe80>
   12020:	movw	r0, #57743	; 0xe18f
   12024:	movt	r0, #2
   12028:	ldrb	r0, [r0]
   1202c:	tst	r0, #1
   12030:	beq	12050 <__assert_fail@plt+0xcd8>
   12034:	ldr	r0, [sp, #4]
   12038:	ldr	r1, [sp, #8]
   1203c:	add	r1, r1, #8
   12040:	movw	r2, #32
   12044:	bl	11354 <strncmp@plt>
   12048:	cmp	r0, #0
   1204c:	bne	121cc <__assert_fail@plt+0xe54>
   12050:	movw	r0, #57738	; 0xe18a
   12054:	movt	r0, #2
   12058:	ldrb	r0, [r0]
   1205c:	tst	r0, #1
   12060:	beq	12094 <__assert_fail@plt+0xd1c>
   12064:	ldr	r0, [sp, #8]
   12068:	ldrb	r0, [r0, #44]	; 0x2c
   1206c:	cmp	r0, #0
   12070:	beq	12094 <__assert_fail@plt+0xd1c>
   12074:	ldr	r0, [sp, #8]
   12078:	ldrsh	r0, [r0]
   1207c:	cmp	r0, #7
   12080:	bne	12094 <__assert_fail@plt+0xd1c>
   12084:	ldr	r0, [sp, #8]
   12088:	ldr	r1, [sp]
   1208c:	bl	122ec <__assert_fail@plt+0xf74>
   12090:	b	121c8 <__assert_fail@plt+0xe50>
   12094:	movw	r0, #57736	; 0xe188
   12098:	movt	r0, #2
   1209c:	ldrb	r0, [r0]
   120a0:	tst	r0, #1
   120a4:	beq	120c4 <__assert_fail@plt+0xd4c>
   120a8:	ldr	r0, [sp, #8]
   120ac:	ldrsh	r0, [r0]
   120b0:	cmp	r0, #1
   120b4:	bne	120c4 <__assert_fail@plt+0xd4c>
   120b8:	ldr	r0, [sp, #8]
   120bc:	bl	12798 <__assert_fail@plt+0x1420>
   120c0:	b	121c4 <__assert_fail@plt+0xe4c>
   120c4:	movw	r0, #57732	; 0xe184
   120c8:	movt	r0, #2
   120cc:	ldrb	r0, [r0]
   120d0:	tst	r0, #1
   120d4:	beq	120f4 <__assert_fail@plt+0xd7c>
   120d8:	ldr	r0, [sp, #8]
   120dc:	ldrsh	r0, [r0]
   120e0:	cmp	r0, #2
   120e4:	bne	120f4 <__assert_fail@plt+0xd7c>
   120e8:	ldr	r0, [sp, #8]
   120ec:	bl	129c4 <__assert_fail@plt+0x164c>
   120f0:	b	121c0 <__assert_fail@plt+0xe48>
   120f4:	movw	r0, #57737	; 0xe189
   120f8:	movt	r0, #2
   120fc:	ldrb	r0, [r0]
   12100:	tst	r0, #1
   12104:	beq	12124 <__assert_fail@plt+0xdac>
   12108:	ldr	r0, [sp, #8]
   1210c:	ldrsh	r0, [r0]
   12110:	cmp	r0, #3
   12114:	bne	12124 <__assert_fail@plt+0xdac>
   12118:	ldr	r0, [sp, #8]
   1211c:	bl	12a44 <__assert_fail@plt+0x16cc>
   12120:	b	121bc <__assert_fail@plt+0xe44>
   12124:	movw	r0, #57735	; 0xe187
   12128:	movt	r0, #2
   1212c:	ldrb	r0, [r0]
   12130:	tst	r0, #1
   12134:	beq	12154 <__assert_fail@plt+0xddc>
   12138:	ldr	r0, [sp, #8]
   1213c:	ldrsh	r0, [r0]
   12140:	cmp	r0, #5
   12144:	bne	12154 <__assert_fail@plt+0xddc>
   12148:	ldr	r0, [sp, #8]
   1214c:	bl	12ac4 <__assert_fail@plt+0x174c>
   12150:	b	121b8 <__assert_fail@plt+0xe40>
   12154:	movw	r0, #57734	; 0xe186
   12158:	movt	r0, #2
   1215c:	ldrb	r0, [r0]
   12160:	tst	r0, #1
   12164:	beq	12184 <__assert_fail@plt+0xe0c>
   12168:	ldr	r0, [sp, #8]
   1216c:	ldrsh	r0, [r0]
   12170:	cmp	r0, #6
   12174:	bne	12184 <__assert_fail@plt+0xe0c>
   12178:	ldr	r0, [sp, #8]
   1217c:	bl	12b8c <__assert_fail@plt+0x1814>
   12180:	b	121b4 <__assert_fail@plt+0xe3c>
   12184:	movw	r0, #57733	; 0xe185
   12188:	movt	r0, #2
   1218c:	ldrb	r0, [r0]
   12190:	tst	r0, #1
   12194:	beq	121b0 <__assert_fail@plt+0xe38>
   12198:	ldr	r0, [sp, #8]
   1219c:	ldrsh	r0, [r0]
   121a0:	cmp	r0, #8
   121a4:	bne	121b0 <__assert_fail@plt+0xe38>
   121a8:	ldr	r0, [sp, #8]
   121ac:	bl	12c6c <__assert_fail@plt+0x18f4>
   121b0:	b	121b4 <__assert_fail@plt+0xe3c>
   121b4:	b	121b8 <__assert_fail@plt+0xe40>
   121b8:	b	121bc <__assert_fail@plt+0xe44>
   121bc:	b	121c0 <__assert_fail@plt+0xe48>
   121c0:	b	121c4 <__assert_fail@plt+0xe4c>
   121c4:	b	121c8 <__assert_fail@plt+0xe50>
   121c8:	b	121cc <__assert_fail@plt+0xe54>
   121cc:	ldr	r0, [sp, #8]
   121d0:	ldrsh	r0, [r0]
   121d4:	cmp	r0, #2
   121d8:	bne	121e8 <__assert_fail@plt+0xe70>
   121dc:	ldr	r0, [sp, #8]
   121e0:	ldr	r0, [r0, #340]	; 0x154
   121e4:	str	r0, [sp]
   121e8:	ldr	r0, [sp, #8]
   121ec:	add	r0, r0, #384	; 0x180
   121f0:	str	r0, [sp, #8]
   121f4:	b	12008 <__assert_fail@plt+0xc90>
   121f8:	mov	sp, fp
   121fc:	pop	{fp, pc}
   12200:	andhi	r0, r0, r0
   12204:	push	{r4, r5, r6, r7, fp, lr}
   12208:	add	fp, sp, #16
   1220c:	sub	sp, sp, #56	; 0x38
   12210:	movw	r0, #51470	; 0xc90e
   12214:	movt	r0, #1
   12218:	bl	11240 <gettext@plt>
   1221c:	movw	lr, #51475	; 0xc913
   12220:	movt	lr, #1
   12224:	str	r0, [fp, #-20]	; 0xffffffec
   12228:	mov	r0, lr
   1222c:	bl	11240 <gettext@plt>
   12230:	movw	lr, #51480	; 0xc918
   12234:	movt	lr, #1
   12238:	str	r0, [fp, #-24]	; 0xffffffe8
   1223c:	mov	r0, lr
   12240:	bl	11240 <gettext@plt>
   12244:	movw	lr, #51485	; 0xc91d
   12248:	movt	lr, #1
   1224c:	str	r0, [fp, #-28]	; 0xffffffe4
   12250:	mov	r0, lr
   12254:	bl	11240 <gettext@plt>
   12258:	movw	lr, #51490	; 0xc922
   1225c:	movt	lr, #1
   12260:	str	r0, [fp, #-32]	; 0xffffffe0
   12264:	mov	r0, lr
   12268:	bl	11240 <gettext@plt>
   1226c:	movw	lr, #51494	; 0xc926
   12270:	movt	lr, #1
   12274:	str	r0, [sp, #36]	; 0x24
   12278:	mov	r0, lr
   1227c:	bl	11240 <gettext@plt>
   12280:	movw	lr, #51502	; 0xc92e
   12284:	movt	lr, #1
   12288:	str	r0, [sp, #32]
   1228c:	mov	r0, lr
   12290:	bl	11240 <gettext@plt>
   12294:	mvn	lr, #0
   12298:	str	r0, [sp, #28]
   1229c:	mov	r0, lr
   122a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   122a4:	movw	r2, #32
   122a8:	and	r2, r2, #255	; 0xff
   122ac:	mov	r3, lr
   122b0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   122b4:	str	lr, [sp]
   122b8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   122bc:	str	ip, [sp, #4]
   122c0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   122c4:	str	r4, [sp, #8]
   122c8:	ldr	r5, [sp, #36]	; 0x24
   122cc:	str	r5, [sp, #12]
   122d0:	ldr	r6, [sp, #32]
   122d4:	str	r6, [sp, #16]
   122d8:	ldr	r7, [sp, #28]
   122dc:	str	r7, [sp, #20]
   122e0:	bl	12e44 <__assert_fail@plt+0x1acc>
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}
   122ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122f0:	add	fp, sp, #24
   122f4:	sub	sp, sp, #568	; 0x238
   122f8:	sub	r2, fp, #204	; 0xcc
   122fc:	sub	r3, fp, #186	; 0xba
   12300:	str	r0, [fp, #-28]	; 0xffffffe4
   12304:	str	r1, [fp, #-32]	; 0xffffffe0
   12308:	str	r3, [fp, #-192]	; 0xffffff40
   1230c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12310:	ldr	r0, [r0, #4]
   12314:	str	r0, [sp, #116]	; 0x74
   12318:	mov	r0, r2
   1231c:	movw	r1, #51564	; 0xc96c
   12320:	movt	r1, #1
   12324:	ldr	r2, [sp, #116]	; 0x74
   12328:	bl	1130c <sprintf@plt>
   1232c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12330:	ldrb	r1, [r1, #8]
   12334:	cmp	r1, #47	; 0x2f
   12338:	str	r0, [sp, #112]	; 0x70
   1233c:	beq	12354 <__assert_fail@plt+0xfdc>
   12340:	ldr	r0, [fp, #-192]	; 0xffffff40
   12344:	movw	r1, #51464	; 0xc908
   12348:	movt	r1, #1
   1234c:	bl	1112c <stpcpy@plt>
   12350:	str	r0, [fp, #-192]	; 0xffffff40
   12354:	ldr	r0, [fp, #-192]	; 0xffffff40
   12358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1235c:	add	r1, r1, #8
   12360:	movw	r2, #32
   12364:	bl	13164 <__assert_fail@plt+0x1dec>
   12368:	sub	r1, fp, #186	; 0xba
   1236c:	str	r0, [sp, #108]	; 0x6c
   12370:	mov	r0, r1
   12374:	sub	r1, fp, #136	; 0x88
   12378:	bl	1c1e8 <__assert_fail@plt+0xae70>
   1237c:	cmp	r0, #0
   12380:	bne	123a8 <__assert_fail@plt+0x1030>
   12384:	sub	r0, fp, #136	; 0x88
   12388:	bl	131fc <__assert_fail@plt+0x1e84>
   1238c:	tst	r0, #1
   12390:	movw	r0, #43	; 0x2b
   12394:	moveq	r0, #45	; 0x2d
   12398:	strb	r0, [fp, #-141]	; 0xffffff73
   1239c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   123a0:	str	r0, [fp, #-140]	; 0xffffff74
   123a4:	b	123b8 <__assert_fail@plt+0x1040>
   123a8:	movw	r0, #63	; 0x3f
   123ac:	strb	r0, [fp, #-141]	; 0xffffff73
   123b0:	movw	r0, #0
   123b4:	str	r0, [fp, #-140]	; 0xffffff74
   123b8:	ldr	r0, [fp, #-140]	; 0xffffff74
   123bc:	cmp	r0, #0
   123c0:	beq	12408 <__assert_fail@plt+0x1090>
   123c4:	sub	r0, fp, #148	; 0x94
   123c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   123cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   123d0:	str	r0, [sp, #104]	; 0x68
   123d4:	mov	r0, r1
   123d8:	mov	r1, r2
   123dc:	bl	13228 <__assert_fail@plt+0x1eb0>
   123e0:	ldr	r1, [sp, #104]	; 0x68
   123e4:	str	r0, [sp, #100]	; 0x64
   123e8:	mov	r0, r1
   123ec:	movw	r1, #51568	; 0xc970
   123f0:	movt	r1, #1
   123f4:	movw	r2, #6
   123f8:	ldr	r3, [sp, #100]	; 0x64
   123fc:	bl	1130c <sprintf@plt>
   12400:	str	r0, [sp, #96]	; 0x60
   12404:	b	1241c <__assert_fail@plt+0x10a4>
   12408:	sub	r0, fp, #148	; 0x94
   1240c:	movw	r1, #51573	; 0xc975
   12410:	movt	r1, #1
   12414:	bl	1130c <sprintf@plt>
   12418:	str	r0, [sp, #92]	; 0x5c
   1241c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12420:	ldrsb	r0, [r0, #76]	; 0x4c
   12424:	cmp	r0, #0
   12428:	beq	12650 <__assert_fail@plt+0x12d8>
   1242c:	add	r0, sp, #131	; 0x83
   12430:	movw	r1, #0
   12434:	str	r1, [sp, #124]	; 0x7c
   12438:	str	r1, [sp, #120]	; 0x78
   1243c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12440:	add	r1, r1, #76	; 0x4c
   12444:	movw	r2, #256	; 0x100
   12448:	bl	13164 <__assert_fail@plt+0x1dec>
   1244c:	add	r1, sp, #131	; 0x83
   12450:	str	r0, [sp, #88]	; 0x58
   12454:	mov	r0, r1
   12458:	movw	r1, #58	; 0x3a
   1245c:	bl	11264 <strchr@plt>
   12460:	str	r0, [sp, #120]	; 0x78
   12464:	ldr	r0, [sp, #120]	; 0x78
   12468:	movw	r1, #0
   1246c:	cmp	r0, r1
   12470:	beq	12488 <__assert_fail@plt+0x1110>
   12474:	ldr	r0, [sp, #120]	; 0x78
   12478:	add	r1, r0, #1
   1247c:	str	r1, [sp, #120]	; 0x78
   12480:	movw	r1, #0
   12484:	strb	r1, [r0]
   12488:	ldrb	r0, [sp, #131]	; 0x83
   1248c:	cmp	r0, #0
   12490:	beq	124b4 <__assert_fail@plt+0x113c>
   12494:	movw	r0, #57746	; 0xe192
   12498:	movt	r0, #2
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	beq	124b4 <__assert_fail@plt+0x113c>
   124a8:	add	r0, sp, #131	; 0x83
   124ac:	bl	13b1c <__assert_fail@plt+0x27a4>
   124b0:	str	r0, [sp, #124]	; 0x7c
   124b4:	ldr	r0, [sp, #124]	; 0x7c
   124b8:	movw	r1, #0
   124bc:	cmp	r0, r1
   124c0:	bne	124cc <__assert_fail@plt+0x1154>
   124c4:	add	r0, sp, #131	; 0x83
   124c8:	str	r0, [sp, #124]	; 0x7c
   124cc:	ldr	r0, [sp, #120]	; 0x78
   124d0:	movw	r1, #0
   124d4:	cmp	r0, r1
   124d8:	beq	125a4 <__assert_fail@plt+0x122c>
   124dc:	movw	r0, #57760	; 0xe1a0
   124e0:	movt	r0, #2
   124e4:	ldr	r0, [r0]
   124e8:	ldr	r1, [sp, #124]	; 0x7c
   124ec:	str	r0, [sp, #84]	; 0x54
   124f0:	mov	r0, r1
   124f4:	bl	11258 <strlen@plt>
   124f8:	ldr	r1, [sp, #120]	; 0x78
   124fc:	str	r0, [sp, #80]	; 0x50
   12500:	mov	r0, r1
   12504:	bl	11258 <strlen@plt>
   12508:	ldr	r1, [sp, #80]	; 0x50
   1250c:	add	r0, r1, r0
   12510:	add	r0, r0, #4
   12514:	ldr	r1, [sp, #84]	; 0x54
   12518:	cmp	r1, r0
   1251c:	bcs	1257c <__assert_fail@plt+0x1204>
   12520:	ldr	r0, [sp, #124]	; 0x7c
   12524:	bl	11258 <strlen@plt>
   12528:	ldr	lr, [sp, #120]	; 0x78
   1252c:	str	r0, [sp, #76]	; 0x4c
   12530:	mov	r0, lr
   12534:	bl	11258 <strlen@plt>
   12538:	ldr	lr, [sp, #76]	; 0x4c
   1253c:	add	r0, lr, r0
   12540:	add	r0, r0, #4
   12544:	movw	lr, #57760	; 0xe1a0
   12548:	movt	lr, #2
   1254c:	str	r0, [lr]
   12550:	movw	r0, #57756	; 0xe19c
   12554:	movt	r0, #2
   12558:	ldr	r0, [r0]
   1255c:	bl	13dbc <__assert_fail@plt+0x2a44>
   12560:	movw	r0, #57760	; 0xe1a0
   12564:	movt	r0, #2
   12568:	ldr	r0, [r0]
   1256c:	bl	174a8 <__assert_fail@plt+0x6130>
   12570:	movw	lr, #57756	; 0xe19c
   12574:	movt	lr, #2
   12578:	str	r0, [lr]
   1257c:	movw	r0, #57756	; 0xe19c
   12580:	movt	r0, #2
   12584:	ldr	r0, [r0]
   12588:	ldr	r2, [sp, #124]	; 0x7c
   1258c:	ldr	r3, [sp, #120]	; 0x78
   12590:	movw	r1, #51577	; 0xc979
   12594:	movt	r1, #1
   12598:	bl	1130c <sprintf@plt>
   1259c:	str	r0, [sp, #72]	; 0x48
   125a0:	b	12634 <__assert_fail@plt+0x12bc>
   125a4:	movw	r0, #57760	; 0xe1a0
   125a8:	movt	r0, #2
   125ac:	ldr	r0, [r0]
   125b0:	ldr	r1, [sp, #124]	; 0x7c
   125b4:	str	r0, [sp, #68]	; 0x44
   125b8:	mov	r0, r1
   125bc:	bl	11258 <strlen@plt>
   125c0:	add	r0, r0, #3
   125c4:	ldr	r1, [sp, #68]	; 0x44
   125c8:	cmp	r1, r0
   125cc:	bcs	12614 <__assert_fail@plt+0x129c>
   125d0:	ldr	r0, [sp, #124]	; 0x7c
   125d4:	bl	11258 <strlen@plt>
   125d8:	add	r0, r0, #3
   125dc:	movw	lr, #57760	; 0xe1a0
   125e0:	movt	lr, #2
   125e4:	str	r0, [lr]
   125e8:	movw	r0, #57756	; 0xe19c
   125ec:	movt	r0, #2
   125f0:	ldr	r0, [r0]
   125f4:	bl	13dbc <__assert_fail@plt+0x2a44>
   125f8:	movw	r0, #57760	; 0xe1a0
   125fc:	movt	r0, #2
   12600:	ldr	r0, [r0]
   12604:	bl	174a8 <__assert_fail@plt+0x6130>
   12608:	movw	lr, #57756	; 0xe19c
   1260c:	movt	lr, #2
   12610:	str	r0, [lr]
   12614:	movw	r0, #57756	; 0xe19c
   12618:	movt	r0, #2
   1261c:	ldr	r0, [r0]
   12620:	ldr	r2, [sp, #124]	; 0x7c
   12624:	movw	r1, #51585	; 0xc981
   12628:	movt	r1, #1
   1262c:	bl	1130c <sprintf@plt>
   12630:	str	r0, [sp, #64]	; 0x40
   12634:	add	r0, sp, #131	; 0x83
   12638:	ldr	r1, [sp, #124]	; 0x7c
   1263c:	cmp	r1, r0
   12640:	beq	1264c <__assert_fail@plt+0x12d4>
   12644:	ldr	r0, [sp, #124]	; 0x7c
   12648:	bl	13dbc <__assert_fail@plt+0x2a44>
   1264c:	b	126b4 <__assert_fail@plt+0x133c>
   12650:	movw	r0, #57760	; 0xe1a0
   12654:	movt	r0, #2
   12658:	ldr	r0, [r0]
   1265c:	cmp	r0, #1
   12660:	bcs	126a0 <__assert_fail@plt+0x1328>
   12664:	movw	r0, #57760	; 0xe1a0
   12668:	movt	r0, #2
   1266c:	movw	r1, #1
   12670:	str	r1, [r0]
   12674:	movw	r0, #57756	; 0xe19c
   12678:	movt	r0, #2
   1267c:	ldr	r0, [r0]
   12680:	bl	13dbc <__assert_fail@plt+0x2a44>
   12684:	movw	r0, #57760	; 0xe1a0
   12688:	movt	r0, #2
   1268c:	ldr	r0, [r0]
   12690:	bl	174a8 <__assert_fail@plt+0x6130>
   12694:	movw	r1, #57756	; 0xe19c
   12698:	movt	r1, #2
   1269c:	str	r0, [r1]
   126a0:	movw	r0, #57756	; 0xe19c
   126a4:	movt	r0, #2
   126a8:	ldr	r0, [r0]
   126ac:	movw	r1, #0
   126b0:	strb	r1, [r0]
   126b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   126b8:	add	r1, r0, #44	; 0x2c
   126bc:	ldrb	r0, [fp, #-141]	; 0xffffff73
   126c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   126c4:	add	r2, r2, #8
   126c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126cc:	str	r0, [sp, #60]	; 0x3c
   126d0:	mov	r0, r3
   126d4:	str	r1, [sp, #56]	; 0x38
   126d8:	str	r2, [sp, #52]	; 0x34
   126dc:	bl	13390 <__assert_fail@plt+0x2018>
   126e0:	sub	r1, fp, #204	; 0xcc
   126e4:	sub	r2, fp, #148	; 0x94
   126e8:	movw	r3, #57756	; 0xe19c
   126ec:	movt	r3, #2
   126f0:	ldr	r3, [r3]
   126f4:	movw	lr, #0
   126f8:	cmp	r3, lr
   126fc:	str	r0, [sp, #48]	; 0x30
   12700:	str	r1, [sp, #44]	; 0x2c
   12704:	str	r2, [sp, #40]	; 0x28
   12708:	beq	12720 <__assert_fail@plt+0x13a8>
   1270c:	movw	r0, #57756	; 0xe19c
   12710:	movt	r0, #2
   12714:	ldr	r0, [r0]
   12718:	str	r0, [sp, #36]	; 0x24
   1271c:	b	12730 <__assert_fail@plt+0x13b8>
   12720:	movw	r0, #51339	; 0xc88b
   12724:	movt	r0, #1
   12728:	str	r0, [sp, #36]	; 0x24
   1272c:	b	12730 <__assert_fail@plt+0x13b8>
   12730:	ldr	r0, [sp, #36]	; 0x24
   12734:	movw	r1, #32
   12738:	str	r0, [sp, #32]
   1273c:	mov	r0, r1
   12740:	ldr	r2, [sp, #56]	; 0x38
   12744:	str	r1, [sp, #28]
   12748:	mov	r1, r2
   1274c:	ldr	r3, [sp, #60]	; 0x3c
   12750:	and	r2, r3, #255	; 0xff
   12754:	ldr	r3, [sp, #28]
   12758:	ldr	ip, [sp, #52]	; 0x34
   1275c:	str	ip, [sp]
   12760:	ldr	lr, [sp, #48]	; 0x30
   12764:	str	lr, [sp, #4]
   12768:	ldr	r4, [sp, #40]	; 0x28
   1276c:	str	r4, [sp, #8]
   12770:	ldr	r5, [sp, #44]	; 0x2c
   12774:	str	r5, [sp, #12]
   12778:	ldr	r6, [sp, #32]
   1277c:	str	r6, [sp, #16]
   12780:	movw	r7, #51339	; 0xc88b
   12784:	movt	r7, #1
   12788:	str	r7, [sp, #20]
   1278c:	bl	12e44 <__assert_fail@plt+0x1acc>
   12790:	sub	sp, fp, #24
   12794:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12798:	push	{r4, r5, fp, lr}
   1279c:	add	fp, sp, #8
   127a0:	sub	sp, sp, #88	; 0x58
   127a4:	str	r0, [fp, #-12]
   127a8:	ldr	r0, [fp, #-12]
   127ac:	ldr	r0, [r0, #4]
   127b0:	asr	r1, r0, #31
   127b4:	add	r0, r0, r1, lsr #24
   127b8:	lsr	r0, r0, #8
   127bc:	strb	r0, [fp, #-13]
   127c0:	ldr	r0, [fp, #-12]
   127c4:	ldr	r0, [r0, #4]
   127c8:	asr	r1, r0, #31
   127cc:	add	r1, r0, r1, lsr #24
   127d0:	bic	r1, r1, #255	; 0xff
   127d4:	sub	r0, r0, r1
   127d8:	strb	r0, [fp, #-14]
   127dc:	movw	r0, #57804	; 0xe1cc
   127e0:	movt	r0, #2
   127e4:	ldr	r0, [r0]
   127e8:	movw	r1, #0
   127ec:	cmp	r0, r1
   127f0:	bne	12818 <__assert_fail@plt+0x14a0>
   127f4:	movw	r0, #51692	; 0xc9ec
   127f8:	movt	r0, #1
   127fc:	bl	11240 <gettext@plt>
   12800:	bl	11258 <strlen@plt>
   12804:	add	r0, r0, #3
   12808:	bl	174a8 <__assert_fail@plt+0x6130>
   1280c:	movw	lr, #57804	; 0xe1cc
   12810:	movt	lr, #2
   12814:	str	r0, [lr]
   12818:	movw	r0, #57804	; 0xe1cc
   1281c:	movt	r0, #2
   12820:	ldr	r0, [r0]
   12824:	movw	r1, #51692	; 0xc9ec
   12828:	movt	r1, #1
   1282c:	str	r0, [fp, #-20]	; 0xffffffec
   12830:	mov	r0, r1
   12834:	bl	11240 <gettext@plt>
   12838:	ldrb	r3, [fp, #-14]
   1283c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12840:	str	r0, [fp, #-24]	; 0xffffffe8
   12844:	mov	r0, r1
   12848:	movw	r1, #51702	; 0xc9f6
   1284c:	movt	r1, #1
   12850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12854:	bl	1130c <sprintf@plt>
   12858:	movw	r1, #57808	; 0xe1d0
   1285c:	movt	r1, #2
   12860:	ldr	r1, [r1]
   12864:	movw	r2, #0
   12868:	cmp	r1, r2
   1286c:	str	r0, [fp, #-28]	; 0xffffffe4
   12870:	bne	12898 <__assert_fail@plt+0x1520>
   12874:	movw	r0, #51708	; 0xc9fc
   12878:	movt	r0, #1
   1287c:	bl	11240 <gettext@plt>
   12880:	bl	11258 <strlen@plt>
   12884:	add	r0, r0, #2
   12888:	bl	174a8 <__assert_fail@plt+0x6130>
   1288c:	movw	lr, #57808	; 0xe1d0
   12890:	movt	lr, #2
   12894:	str	r0, [lr]
   12898:	movw	r0, #57808	; 0xe1d0
   1289c:	movt	r0, #2
   128a0:	ldr	r0, [r0]
   128a4:	movw	r1, #51708	; 0xc9fc
   128a8:	movt	r1, #1
   128ac:	str	r0, [fp, #-32]	; 0xffffffe0
   128b0:	mov	r0, r1
   128b4:	bl	11240 <gettext@plt>
   128b8:	ldrb	r1, [fp, #-13]
   128bc:	cmp	r1, #78	; 0x4e
   128c0:	str	r0, [fp, #-36]	; 0xffffffdc
   128c4:	bne	128d4 <__assert_fail@plt+0x155c>
   128c8:	movw	r0, #83	; 0x53
   128cc:	str	r0, [fp, #-40]	; 0xffffffd8
   128d0:	b	128dc <__assert_fail@plt+0x1564>
   128d4:	ldrb	r0, [fp, #-13]
   128d8:	str	r0, [fp, #-40]	; 0xffffffd8
   128dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   128e4:	str	r0, [fp, #-44]	; 0xffffffd4
   128e8:	mov	r0, r1
   128ec:	movw	r1, #51714	; 0xca02
   128f0:	movt	r1, #1
   128f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   128f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   128fc:	bl	1130c <sprintf@plt>
   12900:	movw	r1, #57804	; 0xe1cc
   12904:	movt	r1, #2
   12908:	ldr	r1, [r1]
   1290c:	ldr	r2, [fp, #-12]
   12910:	str	r0, [sp, #48]	; 0x30
   12914:	mov	r0, r2
   12918:	str	r1, [sp, #44]	; 0x2c
   1291c:	bl	13390 <__assert_fail@plt+0x2018>
   12920:	ldrb	r1, [fp, #-13]
   12924:	str	r0, [sp, #40]	; 0x28
   12928:	mov	r0, r1
   1292c:	bl	13764 <__assert_fail@plt+0x23ec>
   12930:	tst	r0, #1
   12934:	beq	1294c <__assert_fail@plt+0x15d4>
   12938:	movw	r0, #57808	; 0xe1d0
   1293c:	movt	r0, #2
   12940:	ldr	r0, [r0]
   12944:	str	r0, [sp, #36]	; 0x24
   12948:	b	1295c <__assert_fail@plt+0x15e4>
   1294c:	movw	r0, #51339	; 0xc88b
   12950:	movt	r0, #1
   12954:	str	r0, [sp, #36]	; 0x24
   12958:	b	1295c <__assert_fail@plt+0x15e4>
   1295c:	ldr	r0, [sp, #36]	; 0x24
   12960:	mvn	r1, #0
   12964:	str	r0, [sp, #32]
   12968:	mov	r0, r1
   1296c:	movw	r2, #51339	; 0xc88b
   12970:	movt	r2, #1
   12974:	str	r1, [sp, #28]
   12978:	mov	r1, r2
   1297c:	movw	r3, #32
   12980:	and	r3, r3, #255	; 0xff
   12984:	str	r2, [sp, #24]
   12988:	mov	r2, r3
   1298c:	ldr	r3, [sp, #28]
   12990:	ldr	ip, [sp, #44]	; 0x2c
   12994:	str	ip, [sp]
   12998:	ldr	lr, [sp, #40]	; 0x28
   1299c:	str	lr, [sp, #4]
   129a0:	ldr	r4, [sp, #24]
   129a4:	str	r4, [sp, #8]
   129a8:	str	r4, [sp, #12]
   129ac:	ldr	r5, [sp, #32]
   129b0:	str	r5, [sp, #16]
   129b4:	str	r4, [sp, #20]
   129b8:	bl	12e44 <__assert_fail@plt+0x1acc>
   129bc:	sub	sp, fp, #8
   129c0:	pop	{r4, r5, fp, pc}
   129c4:	push	{r4, sl, fp, lr}
   129c8:	add	fp, sp, #8
   129cc:	sub	sp, sp, #40	; 0x28
   129d0:	str	r0, [fp, #-12]
   129d4:	movw	r0, #51719	; 0xca07
   129d8:	movt	r0, #1
   129dc:	bl	11240 <gettext@plt>
   129e0:	ldr	lr, [fp, #-12]
   129e4:	str	r0, [fp, #-16]
   129e8:	mov	r0, lr
   129ec:	bl	13390 <__assert_fail@plt+0x2018>
   129f0:	mvn	lr, #0
   129f4:	str	r0, [fp, #-20]	; 0xffffffec
   129f8:	mov	r0, lr
   129fc:	movw	r1, #51339	; 0xc88b
   12a00:	movt	r1, #1
   12a04:	str	r1, [sp, #24]
   12a08:	movw	r2, #32
   12a0c:	and	r2, r2, #255	; 0xff
   12a10:	mov	r3, lr
   12a14:	ldr	lr, [fp, #-16]
   12a18:	str	lr, [sp]
   12a1c:	ldr	ip, [fp, #-20]	; 0xffffffec
   12a20:	str	ip, [sp, #4]
   12a24:	ldr	r4, [sp, #24]
   12a28:	str	r4, [sp, #8]
   12a2c:	str	r4, [sp, #12]
   12a30:	str	r4, [sp, #16]
   12a34:	str	r4, [sp, #20]
   12a38:	bl	12e44 <__assert_fail@plt+0x1acc>
   12a3c:	sub	sp, fp, #8
   12a40:	pop	{r4, sl, fp, pc}
   12a44:	push	{r4, sl, fp, lr}
   12a48:	add	fp, sp, #8
   12a4c:	sub	sp, sp, #40	; 0x28
   12a50:	str	r0, [fp, #-12]
   12a54:	movw	r0, #51731	; 0xca13
   12a58:	movt	r0, #1
   12a5c:	bl	11240 <gettext@plt>
   12a60:	ldr	lr, [fp, #-12]
   12a64:	str	r0, [fp, #-16]
   12a68:	mov	r0, lr
   12a6c:	bl	13390 <__assert_fail@plt+0x2018>
   12a70:	mvn	lr, #0
   12a74:	str	r0, [fp, #-20]	; 0xffffffec
   12a78:	mov	r0, lr
   12a7c:	movw	r1, #51339	; 0xc88b
   12a80:	movt	r1, #1
   12a84:	str	r1, [sp, #24]
   12a88:	movw	r2, #32
   12a8c:	and	r2, r2, #255	; 0xff
   12a90:	mov	r3, lr
   12a94:	ldr	lr, [fp, #-16]
   12a98:	str	lr, [sp]
   12a9c:	ldr	ip, [fp, #-20]	; 0xffffffec
   12aa0:	str	ip, [sp, #4]
   12aa4:	ldr	r4, [sp, #24]
   12aa8:	str	r4, [sp, #8]
   12aac:	str	r4, [sp, #12]
   12ab0:	str	r4, [sp, #16]
   12ab4:	str	r4, [sp, #20]
   12ab8:	bl	12e44 <__assert_fail@plt+0x1acc>
   12abc:	sub	sp, fp, #8
   12ac0:	pop	{r4, sl, fp, pc}
   12ac4:	push	{r4, r5, r6, sl, fp, lr}
   12ac8:	add	fp, sp, #16
   12acc:	sub	sp, sp, #64	; 0x40
   12ad0:	str	r0, [fp, #-20]	; 0xffffffec
   12ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ad8:	bl	13448 <__assert_fail@plt+0x20d0>
   12adc:	sub	lr, fp, #36	; 0x24
   12ae0:	str	r0, [fp, #-24]	; 0xffffffe8
   12ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ae8:	ldr	r2, [r0, #4]
   12aec:	mov	r0, lr
   12af0:	movw	r1, #51564	; 0xc96c
   12af4:	movt	r1, #1
   12af8:	bl	1130c <sprintf@plt>
   12afc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b00:	add	r1, r1, #8
   12b04:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b08:	str	r0, [sp, #40]	; 0x28
   12b0c:	mov	r0, r2
   12b10:	str	r1, [sp, #36]	; 0x24
   12b14:	bl	13390 <__assert_fail@plt+0x2018>
   12b18:	sub	r1, fp, #36	; 0x24
   12b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12b20:	mvn	lr, #0
   12b24:	str	r0, [sp, #32]
   12b28:	mov	r0, lr
   12b2c:	movw	lr, #51339	; 0xc88b
   12b30:	movt	lr, #1
   12b34:	str	r1, [sp, #28]
   12b38:	mov	r1, lr
   12b3c:	movw	r3, #32
   12b40:	and	r3, r3, #255	; 0xff
   12b44:	str	r2, [sp, #24]
   12b48:	mov	r2, r3
   12b4c:	movw	r3, #32
   12b50:	ldr	ip, [sp, #36]	; 0x24
   12b54:	str	ip, [sp]
   12b58:	ldr	r4, [sp, #32]
   12b5c:	str	r4, [sp, #4]
   12b60:	str	lr, [sp, #8]
   12b64:	ldr	r5, [sp, #28]
   12b68:	str	r5, [sp, #12]
   12b6c:	ldr	r6, [sp, #24]
   12b70:	str	r6, [sp, #16]
   12b74:	str	lr, [sp, #20]
   12b78:	bl	12e44 <__assert_fail@plt+0x1acc>
   12b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b80:	bl	13dbc <__assert_fail@plt+0x2a44>
   12b84:	sub	sp, fp, #16
   12b88:	pop	{r4, r5, r6, sl, fp, pc}
   12b8c:	push	{r4, r5, r6, r7, fp, lr}
   12b90:	add	fp, sp, #16
   12b94:	sub	sp, sp, #72	; 0x48
   12b98:	str	r0, [fp, #-20]	; 0xffffffec
   12b9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ba0:	bl	13448 <__assert_fail@plt+0x20d0>
   12ba4:	sub	lr, fp, #36	; 0x24
   12ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   12bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bb0:	ldr	r2, [r0, #4]
   12bb4:	mov	r0, lr
   12bb8:	movw	r1, #51564	; 0xc96c
   12bbc:	movt	r1, #1
   12bc0:	bl	1130c <sprintf@plt>
   12bc4:	movw	r1, #51748	; 0xca24
   12bc8:	movt	r1, #1
   12bcc:	str	r0, [fp, #-40]	; 0xffffffd8
   12bd0:	mov	r0, r1
   12bd4:	bl	11240 <gettext@plt>
   12bd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12bdc:	add	r1, r1, #8
   12be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12be4:	str	r0, [sp, #44]	; 0x2c
   12be8:	mov	r0, r2
   12bec:	str	r1, [sp, #40]	; 0x28
   12bf0:	bl	13390 <__assert_fail@plt+0x2018>
   12bf4:	sub	r1, fp, #36	; 0x24
   12bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12bfc:	mvn	lr, #0
   12c00:	str	r0, [sp, #36]	; 0x24
   12c04:	mov	r0, lr
   12c08:	ldr	lr, [sp, #44]	; 0x2c
   12c0c:	str	r1, [sp, #32]
   12c10:	mov	r1, lr
   12c14:	movw	r3, #32
   12c18:	and	r3, r3, #255	; 0xff
   12c1c:	str	r2, [sp, #28]
   12c20:	mov	r2, r3
   12c24:	movw	r3, #32
   12c28:	ldr	ip, [sp, #40]	; 0x28
   12c2c:	str	ip, [sp]
   12c30:	ldr	r4, [sp, #36]	; 0x24
   12c34:	str	r4, [sp, #4]
   12c38:	movw	r5, #51339	; 0xc88b
   12c3c:	movt	r5, #1
   12c40:	str	r5, [sp, #8]
   12c44:	ldr	r6, [sp, #32]
   12c48:	str	r6, [sp, #12]
   12c4c:	ldr	r7, [sp, #28]
   12c50:	str	r7, [sp, #16]
   12c54:	str	r5, [sp, #20]
   12c58:	bl	12e44 <__assert_fail@plt+0x1acc>
   12c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c60:	bl	13dbc <__assert_fail@plt+0x2a44>
   12c64:	sub	sp, fp, #16
   12c68:	pop	{r4, r5, r6, r7, fp, pc}
   12c6c:	push	{r4, r5, r6, sl, fp, lr}
   12c70:	add	fp, sp, #16
   12c74:	sub	sp, sp, #96	; 0x60
   12c78:	str	r0, [fp, #-20]	; 0xffffffec
   12c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c80:	bl	13448 <__assert_fail@plt+0x20d0>
   12c84:	sub	lr, fp, #36	; 0x24
   12c88:	str	r0, [fp, #-24]	; 0xffffffe8
   12c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c90:	ldr	r2, [r0, #4]
   12c94:	mov	r0, lr
   12c98:	movw	r1, #51564	; 0xc96c
   12c9c:	movt	r1, #1
   12ca0:	bl	1130c <sprintf@plt>
   12ca4:	movw	r1, #57812	; 0xe1d4
   12ca8:	movt	r1, #2
   12cac:	ldr	r1, [r1]
   12cb0:	movw	r2, #0
   12cb4:	cmp	r1, r2
   12cb8:	str	r0, [fp, #-40]	; 0xffffffd8
   12cbc:	bne	12d10 <__assert_fail@plt+0x1998>
   12cc0:	movw	r0, #51754	; 0xca2a
   12cc4:	movt	r0, #1
   12cc8:	bl	11240 <gettext@plt>
   12ccc:	bl	11258 <strlen@plt>
   12cd0:	add	r0, r0, #6
   12cd4:	add	r0, r0, #1
   12cd8:	movw	lr, #51760	; 0xca30
   12cdc:	movt	lr, #1
   12ce0:	str	r0, [fp, #-44]	; 0xffffffd4
   12ce4:	mov	r0, lr
   12ce8:	bl	11240 <gettext@plt>
   12cec:	bl	11258 <strlen@plt>
   12cf0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   12cf4:	add	r0, lr, r0
   12cf8:	add	r0, r0, #6
   12cfc:	add	r0, r0, #1
   12d00:	bl	174a8 <__assert_fail@plt+0x6130>
   12d04:	movw	lr, #57812	; 0xe1d4
   12d08:	movt	lr, #2
   12d0c:	str	r0, [lr]
   12d10:	movw	r0, #57812	; 0xe1d4
   12d14:	movt	r0, #2
   12d18:	ldr	r0, [r0]
   12d1c:	movw	r1, #51754	; 0xca2a
   12d20:	movt	r1, #1
   12d24:	str	r0, [fp, #-48]	; 0xffffffd0
   12d28:	mov	r0, r1
   12d2c:	bl	11240 <gettext@plt>
   12d30:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d34:	add	r1, r1, #332	; 0x14c
   12d38:	ldrsh	r3, [r1]
   12d3c:	movw	r1, #51760	; 0xca30
   12d40:	movt	r1, #1
   12d44:	str	r0, [fp, #-52]	; 0xffffffcc
   12d48:	mov	r0, r1
   12d4c:	str	r3, [sp, #56]	; 0x38
   12d50:	bl	11240 <gettext@plt>
   12d54:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d58:	movw	r3, #334	; 0x14e
   12d5c:	add	r1, r1, r3
   12d60:	ldrsh	r1, [r1]
   12d64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d68:	str	r0, [sp, #52]	; 0x34
   12d6c:	mov	r0, r3
   12d70:	movw	lr, #51766	; 0xca36
   12d74:	movt	lr, #1
   12d78:	str	r1, [sp, #48]	; 0x30
   12d7c:	mov	r1, lr
   12d80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12d84:	ldr	r3, [sp, #56]	; 0x38
   12d88:	ldr	lr, [sp, #52]	; 0x34
   12d8c:	str	lr, [sp]
   12d90:	ldr	ip, [sp, #48]	; 0x30
   12d94:	str	ip, [sp, #4]
   12d98:	bl	1130c <sprintf@plt>
   12d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12da0:	add	r1, r1, #8
   12da4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12da8:	str	r0, [sp, #44]	; 0x2c
   12dac:	mov	r0, r2
   12db0:	str	r1, [sp, #40]	; 0x28
   12db4:	bl	13390 <__assert_fail@plt+0x2018>
   12db8:	sub	r1, fp, #36	; 0x24
   12dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dc0:	movw	r3, #57812	; 0xe1d4
   12dc4:	movt	r3, #2
   12dc8:	ldr	r3, [r3]
   12dcc:	mvn	ip, #0
   12dd0:	str	r0, [sp, #36]	; 0x24
   12dd4:	mov	r0, ip
   12dd8:	movw	ip, #51339	; 0xc88b
   12ddc:	movt	ip, #1
   12de0:	str	r1, [sp, #32]
   12de4:	mov	r1, ip
   12de8:	movw	lr, #32
   12dec:	and	lr, lr, #255	; 0xff
   12df0:	str	r2, [sp, #28]
   12df4:	mov	r2, lr
   12df8:	movw	lr, #32
   12dfc:	str	r3, [sp, #24]
   12e00:	mov	r3, lr
   12e04:	ldr	lr, [sp, #40]	; 0x28
   12e08:	str	lr, [sp]
   12e0c:	ldr	r4, [sp, #36]	; 0x24
   12e10:	str	r4, [sp, #4]
   12e14:	str	ip, [sp, #8]
   12e18:	ldr	ip, [sp, #32]
   12e1c:	str	ip, [sp, #12]
   12e20:	ldr	r5, [sp, #28]
   12e24:	str	r5, [sp, #16]
   12e28:	ldr	r6, [sp, #24]
   12e2c:	str	r6, [sp, #20]
   12e30:	bl	12e44 <__assert_fail@plt+0x1acc>
   12e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e38:	bl	13dbc <__assert_fail@plt+0x2a44>
   12e3c:	sub	sp, fp, #16
   12e40:	pop	{r4, r5, r6, sl, fp, pc}
   12e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e48:	add	fp, sp, #28
   12e4c:	sub	sp, sp, #172	; 0xac
   12e50:	ldr	ip, [fp, #28]
   12e54:	ldr	lr, [fp, #24]
   12e58:	ldr	r4, [fp, #20]
   12e5c:	ldr	r5, [fp, #16]
   12e60:	ldr	r6, [fp, #12]
   12e64:	ldr	r7, [fp, #8]
   12e68:	str	r0, [fp, #-32]	; 0xffffffe0
   12e6c:	str	r1, [fp, #-36]	; 0xffffffdc
   12e70:	strb	r2, [fp, #-37]	; 0xffffffdb
   12e74:	str	r3, [fp, #-44]	; 0xffffffd4
   12e78:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12e7c:	movw	r1, #57624	; 0xe118
   12e80:	movt	r1, #2
   12e84:	strb	r0, [r1, #1]
   12e88:	movw	r0, #57740	; 0xe18c
   12e8c:	movt	r0, #2
   12e90:	ldrb	r0, [r0]
   12e94:	tst	r0, #1
   12e98:	str	r7, [fp, #-88]	; 0xffffffa8
   12e9c:	str	r4, [fp, #-92]	; 0xffffffa4
   12ea0:	str	r5, [fp, #-96]	; 0xffffffa0
   12ea4:	str	r6, [sp, #100]	; 0x64
   12ea8:	str	ip, [sp, #96]	; 0x60
   12eac:	str	lr, [sp, #92]	; 0x5c
   12eb0:	beq	12ef4 <__assert_fail@plt+0x1b7c>
   12eb4:	movw	r0, #57745	; 0xe191
   12eb8:	movt	r0, #2
   12ebc:	ldrb	r0, [r0]
   12ec0:	tst	r0, #1
   12ec4:	bne	12ef4 <__assert_fail@plt+0x1b7c>
   12ec8:	ldr	r0, [fp, #16]
   12ecc:	bl	11258 <strlen@plt>
   12ed0:	cmp	r0, #7
   12ed4:	bcs	12ef4 <__assert_fail@plt+0x1b7c>
   12ed8:	sub	r0, fp, #56	; 0x38
   12edc:	ldr	r2, [fp, #16]
   12ee0:	movw	r1, #51507	; 0xc933
   12ee4:	movt	r1, #1
   12ee8:	bl	1130c <sprintf@plt>
   12eec:	str	r0, [sp, #88]	; 0x58
   12ef0:	b	12efc <__assert_fail@plt+0x1b84>
   12ef4:	movw	r0, #0
   12ef8:	strb	r0, [fp, #-56]	; 0xffffffc8
   12efc:	movw	r0, #57745	; 0xe191
   12f00:	movt	r0, #2
   12f04:	ldrb	r0, [r0]
   12f08:	tst	r0, #1
   12f0c:	bne	12f3c <__assert_fail@plt+0x1bc4>
   12f10:	ldr	r0, [fp, #20]
   12f14:	bl	11258 <strlen@plt>
   12f18:	cmp	r0, #12
   12f1c:	bcs	12f3c <__assert_fail@plt+0x1bc4>
   12f20:	sub	r0, fp, #69	; 0x45
   12f24:	ldr	r2, [fp, #20]
   12f28:	movw	r1, #51513	; 0xc939
   12f2c:	movt	r1, #1
   12f30:	bl	1130c <sprintf@plt>
   12f34:	str	r0, [sp, #84]	; 0x54
   12f38:	b	12f44 <__assert_fail@plt+0x1bcc>
   12f3c:	movw	r0, #0
   12f40:	strb	r0, [fp, #-69]	; 0xffffffbb
   12f44:	movw	r0, #57741	; 0xe18d
   12f48:	movt	r0, #2
   12f4c:	ldrb	r0, [r0]
   12f50:	tst	r0, #1
   12f54:	beq	12f98 <__assert_fail@plt+0x1c20>
   12f58:	ldr	r0, [fp, #28]
   12f5c:	bl	11258 <strlen@plt>
   12f60:	movw	lr, #12
   12f64:	cmp	lr, r0
   12f68:	bls	12f78 <__assert_fail@plt+0x1c00>
   12f6c:	movw	r0, #12
   12f70:	str	r0, [sp, #80]	; 0x50
   12f74:	b	12f84 <__assert_fail@plt+0x1c0c>
   12f78:	ldr	r0, [fp, #28]
   12f7c:	bl	11258 <strlen@plt>
   12f80:	str	r0, [sp, #80]	; 0x50
   12f84:	ldr	r0, [sp, #80]	; 0x50
   12f88:	add	r0, r0, #1
   12f8c:	add	r0, r0, #1
   12f90:	str	r0, [sp, #76]	; 0x4c
   12f94:	b	12fa4 <__assert_fail@plt+0x1c2c>
   12f98:	movw	r0, #1
   12f9c:	str	r0, [sp, #76]	; 0x4c
   12fa0:	b	12fa4 <__assert_fail@plt+0x1c2c>
   12fa4:	ldr	r0, [sp, #76]	; 0x4c
   12fa8:	bl	174a8 <__assert_fail@plt+0x6130>
   12fac:	str	r0, [fp, #-76]	; 0xffffffb4
   12fb0:	movw	r0, #57741	; 0xe18d
   12fb4:	movt	r0, #2
   12fb8:	ldrb	r0, [r0]
   12fbc:	tst	r0, #1
   12fc0:	beq	12fe0 <__assert_fail@plt+0x1c68>
   12fc4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fc8:	ldr	r2, [fp, #28]
   12fcc:	movw	r1, #51519	; 0xc93f
   12fd0:	movt	r1, #1
   12fd4:	bl	1130c <sprintf@plt>
   12fd8:	str	r0, [sp, #72]	; 0x48
   12fdc:	b	12fec <__assert_fail@plt+0x1c74>
   12fe0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fe4:	movw	r1, #0
   12fe8:	strb	r1, [r0]
   12fec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ff0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ff4:	movw	r1, #0
   12ff8:	cmp	r0, r1
   12ffc:	str	r2, [sp, #68]	; 0x44
   13000:	beq	13010 <__assert_fail@plt+0x1c98>
   13004:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13008:	str	r0, [sp, #64]	; 0x40
   1300c:	b	13020 <__assert_fail@plt+0x1ca8>
   13010:	movw	r0, #51559	; 0xc967
   13014:	movt	r0, #1
   13018:	str	r0, [sp, #64]	; 0x40
   1301c:	b	13020 <__assert_fail@plt+0x1ca8>
   13020:	ldr	r0, [sp, #64]	; 0x40
   13024:	sub	r1, fp, #69	; 0x45
   13028:	sub	r2, fp, #56	; 0x38
   1302c:	movw	r3, #57739	; 0xe18b
   13030:	movt	r3, #2
   13034:	ldrb	r3, [r3]
   13038:	tst	r3, #1
   1303c:	movw	r3, #51339	; 0xc88b
   13040:	movt	r3, #1
   13044:	movw	ip, #57624	; 0xe118
   13048:	movt	ip, #2
   1304c:	movne	r3, ip
   13050:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13054:	ldr	lr, [fp, #8]
   13058:	movw	r4, #57752	; 0xe198
   1305c:	movt	r4, #2
   13060:	ldr	r4, [r4]
   13064:	ldr	r5, [fp, #12]
   13068:	ldr	r6, [fp, #24]
   1306c:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13070:	sub	r8, fp, #48	; 0x30
   13074:	str	r0, [sp, #60]	; 0x3c
   13078:	mov	r0, r8
   1307c:	movw	r8, #51526	; 0xc946
   13080:	movt	r8, #1
   13084:	str	r1, [sp, #56]	; 0x38
   13088:	mov	r1, r8
   1308c:	ldr	r8, [sp, #68]	; 0x44
   13090:	str	r2, [sp, #52]	; 0x34
   13094:	mov	r2, r8
   13098:	ldr	r9, [sp, #60]	; 0x3c
   1309c:	str	r3, [sp, #48]	; 0x30
   130a0:	mov	r3, r9
   130a4:	ldr	sl, [sp, #48]	; 0x30
   130a8:	str	sl, [sp]
   130ac:	str	ip, [sp, #4]
   130b0:	str	lr, [sp, #8]
   130b4:	str	r4, [sp, #12]
   130b8:	str	r5, [sp, #16]
   130bc:	ldr	ip, [sp, #52]	; 0x34
   130c0:	str	ip, [sp, #20]
   130c4:	ldr	lr, [sp, #56]	; 0x38
   130c8:	str	lr, [sp, #24]
   130cc:	str	r6, [sp, #28]
   130d0:	str	r7, [sp, #32]
   130d4:	bl	112b8 <asprintf@plt>
   130d8:	str	r0, [fp, #-80]	; 0xffffffb0
   130dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   130e0:	cmn	r0, #1
   130e4:	bne	130ec <__assert_fail@plt+0x1d74>
   130e8:	bl	1a284 <__assert_fail@plt+0x8f0c>
   130ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   130f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   130f4:	str	r0, [sp, #44]	; 0x2c
   130f8:	mov	r0, r1
   130fc:	bl	11258 <strlen@plt>
   13100:	ldr	r1, [sp, #44]	; 0x2c
   13104:	add	r0, r1, r0
   13108:	str	r0, [fp, #-84]	; 0xffffffac
   1310c:	ldr	r0, [fp, #-84]	; 0xffffffac
   13110:	mvn	r1, #0
   13114:	add	r2, r0, r1
   13118:	str	r2, [fp, #-84]	; 0xffffffac
   1311c:	add	r0, r0, r1
   13120:	ldrb	r0, [r0]
   13124:	cmp	r0, #32
   13128:	bne	13130 <__assert_fail@plt+0x1db8>
   1312c:	b	1310c <__assert_fail@plt+0x1d94>
   13130:	ldr	r0, [fp, #-84]	; 0xffffffac
   13134:	movw	r1, #0
   13138:	strb	r1, [r0, #1]
   1313c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13140:	bl	111bc <puts@plt>
   13144:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13148:	str	r0, [sp, #40]	; 0x28
   1314c:	mov	r0, r1
   13150:	bl	13dbc <__assert_fail@plt+0x2a44>
   13154:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13158:	bl	13dbc <__assert_fail@plt+0x2a44>
   1315c:	sub	sp, fp, #28
   13160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13164:	sub	sp, sp, #20
   13168:	str	r0, [sp, #16]
   1316c:	str	r1, [sp, #12]
   13170:	str	r2, [sp, #8]
   13174:	ldr	r0, [sp, #12]
   13178:	ldr	r1, [sp, #8]
   1317c:	add	r0, r0, r1
   13180:	str	r0, [sp, #4]
   13184:	ldr	r0, [sp, #12]
   13188:	ldr	r1, [sp, #4]
   1318c:	cmp	r0, r1
   13190:	movw	r0, #0
   13194:	str	r0, [sp]
   13198:	bcs	131b4 <__assert_fail@plt+0x1e3c>
   1319c:	ldr	r0, [sp, #12]
   131a0:	ldrb	r0, [r0]
   131a4:	cmp	r0, #0
   131a8:	movw	r0, #0
   131ac:	movne	r0, #1
   131b0:	str	r0, [sp]
   131b4:	ldr	r0, [sp]
   131b8:	tst	r0, #1
   131bc:	beq	131e4 <__assert_fail@plt+0x1e6c>
   131c0:	ldr	r0, [sp, #12]
   131c4:	add	r1, r0, #1
   131c8:	str	r1, [sp, #12]
   131cc:	ldrb	r0, [r0]
   131d0:	ldr	r1, [sp, #16]
   131d4:	add	r2, r1, #1
   131d8:	str	r2, [sp, #16]
   131dc:	strb	r0, [r1]
   131e0:	b	13184 <__assert_fail@plt+0x1e0c>
   131e4:	ldr	r0, [sp, #16]
   131e8:	movw	r1, #0
   131ec:	strb	r1, [r0]
   131f0:	ldr	r0, [sp, #16]
   131f4:	add	sp, sp, #20
   131f8:	bx	lr
   131fc:	sub	sp, sp, #4
   13200:	str	r0, [sp]
   13204:	ldr	r0, [sp]
   13208:	ldr	r0, [r0, #16]
   1320c:	and	r0, r0, #16
   13210:	cmp	r0, #0
   13214:	movw	r0, #0
   13218:	movne	r0, #1
   1321c:	and	r0, r0, #1
   13220:	add	sp, sp, #4
   13224:	bx	lr
   13228:	push	{fp, lr}
   1322c:	mov	fp, sp
   13230:	sub	sp, sp, #32
   13234:	str	r0, [fp, #-8]
   13238:	str	r1, [fp, #-12]
   1323c:	movw	r0, #57628	; 0xe11c
   13240:	movt	r0, #2
   13244:	ldr	r0, [r0]
   13248:	cmp	r0, #-2147483648	; 0x80000000
   1324c:	bne	13260 <__assert_fail@plt+0x1ee8>
   13250:	movw	r0, #57628	; 0xe11c
   13254:	movt	r0, #2
   13258:	bl	11114 <time@plt>
   1325c:	str	r0, [sp, #12]
   13260:	ldr	r0, [fp, #-12]
   13264:	ldr	r1, [fp, #-8]
   13268:	cmp	r0, r1
   1326c:	bge	13370 <__assert_fail@plt+0x1ff8>
   13270:	ldr	r0, [pc, #276]	; 1338c <__assert_fail@plt+0x2014>
   13274:	movw	r1, #57628	; 0xe11c
   13278:	movt	r1, #2
   1327c:	ldr	r1, [r1]
   13280:	sub	r0, r1, r0
   13284:	ldr	r1, [fp, #-8]
   13288:	cmp	r0, r1
   1328c:	bge	13370 <__assert_fail@plt+0x1ff8>
   13290:	ldr	r0, [fp, #-8]
   13294:	movw	r1, #57628	; 0xe11c
   13298:	movt	r1, #2
   1329c:	ldr	r1, [r1]
   132a0:	cmp	r0, r1
   132a4:	bgt	13370 <__assert_fail@plt+0x1ff8>
   132a8:	movw	r0, #57628	; 0xe11c
   132ac:	movt	r0, #2
   132b0:	ldr	r0, [r0]
   132b4:	ldr	r1, [fp, #-8]
   132b8:	sub	r0, r0, r1
   132bc:	str	r0, [sp, #16]
   132c0:	ldr	r0, [sp, #16]
   132c4:	cmp	r0, #60	; 0x3c
   132c8:	bge	132dc <__assert_fail@plt+0x1f64>
   132cc:	movw	r0, #51590	; 0xc986
   132d0:	movt	r0, #1
   132d4:	str	r0, [fp, #-4]
   132d8:	b	13380 <__assert_fail@plt+0x2008>
   132dc:	ldr	r0, [sp, #16]
   132e0:	movw	r1, #3600	; 0xe10
   132e4:	sdiv	r0, r0, r1
   132e8:	cmp	r0, #24
   132ec:	bge	132f4 <__assert_fail@plt+0x1f7c>
   132f0:	b	13314 <__assert_fail@plt+0x1f9c>
   132f4:	movw	r0, #51596	; 0xc98c
   132f8:	movt	r0, #1
   132fc:	movw	r1, #51626	; 0xc9aa
   13300:	movt	r1, #1
   13304:	movw	r2, #205	; 0xcd
   13308:	movw	r3, #51636	; 0xc9b4
   1330c:	movt	r3, #1
   13310:	bl	11378 <__assert_fail@plt>
   13314:	ldr	r0, [sp, #16]
   13318:	movw	r1, #46021	; 0xb3c5
   1331c:	movt	r1, #37282	; 0x91a2
   13320:	smmla	r1, r0, r1, r0
   13324:	asr	r2, r1, #11
   13328:	add	r1, r2, r1, lsr #31
   1332c:	mov	r2, #3600	; 0xe10
   13330:	mls	r0, r1, r2, r0
   13334:	movw	r2, #60	; 0x3c
   13338:	sdiv	r3, r0, r2
   1333c:	movw	r0, #57764	; 0xe1a4
   13340:	movt	r0, #2
   13344:	movw	r2, #51676	; 0xc9dc
   13348:	movt	r2, #1
   1334c:	str	r1, [sp, #8]
   13350:	mov	r1, r2
   13354:	ldr	r2, [sp, #8]
   13358:	bl	1130c <sprintf@plt>
   1335c:	movw	r1, #57764	; 0xe1a4
   13360:	movt	r1, #2
   13364:	str	r1, [fp, #-4]
   13368:	str	r0, [sp, #4]
   1336c:	b	13380 <__assert_fail@plt+0x2008>
   13370:	movw	r0, #51686	; 0xc9e6
   13374:	movt	r0, #1
   13378:	bl	11240 <gettext@plt>
   1337c:	str	r0, [fp, #-4]
   13380:	ldr	r0, [fp, #-4]
   13384:	mov	sp, fp
   13388:	pop	{fp, pc}
   1338c:	andeq	r5, r1, r0, lsl #3
   13390:	push	{fp, lr}
   13394:	mov	fp, sp
   13398:	sub	sp, sp, #24
   1339c:	str	r0, [fp, #-8]
   133a0:	ldr	r0, [fp, #-8]
   133a4:	ldr	r0, [r0, #340]	; 0x154
   133a8:	str	r0, [sp, #12]
   133ac:	add	r0, sp, #12
   133b0:	bl	111f8 <localtime@plt>
   133b4:	str	r0, [sp, #8]
   133b8:	ldr	r0, [sp, #8]
   133bc:	movw	lr, #0
   133c0:	cmp	r0, lr
   133c4:	beq	133fc <__assert_fail@plt+0x2084>
   133c8:	movw	r0, #57748	; 0xe194
   133cc:	movt	r0, #2
   133d0:	ldr	r2, [r0]
   133d4:	ldr	r3, [sp, #8]
   133d8:	movw	r0, #57770	; 0xe1aa
   133dc:	movt	r0, #2
   133e0:	movw	r1, #33	; 0x21
   133e4:	bl	111e0 <strftime@plt>
   133e8:	movw	r1, #57770	; 0xe1aa
   133ec:	movt	r1, #2
   133f0:	str	r1, [fp, #-4]
   133f4:	str	r0, [sp, #4]
   133f8:	b	13410 <__assert_fail@plt+0x2098>
   133fc:	ldr	r0, [sp, #12]
   13400:	movw	r1, #57770	; 0xe1aa
   13404:	movt	r1, #2
   13408:	bl	1341c <__assert_fail@plt+0x20a4>
   1340c:	str	r0, [fp, #-4]
   13410:	ldr	r0, [fp, #-4]
   13414:	mov	sp, fp
   13418:	pop	{fp, pc}
   1341c:	push	{fp, lr}
   13420:	mov	fp, sp
   13424:	sub	sp, sp, #8
   13428:	str	r0, [sp, #4]
   1342c:	str	r1, [sp]
   13430:	ldr	r0, [sp, #4]
   13434:	asr	r1, r0, #31
   13438:	ldr	r2, [sp]
   1343c:	bl	13e98 <__assert_fail@plt+0x2b20>
   13440:	mov	sp, fp
   13444:	pop	{fp, pc}
   13448:	push	{fp, lr}
   1344c:	mov	fp, sp
   13450:	sub	sp, sp, #32
   13454:	str	r0, [fp, #-4]
   13458:	movw	r0, #4
   1345c:	str	r0, [fp, #-8]
   13460:	movw	r0, #51744	; 0xca20
   13464:	movt	r0, #1
   13468:	bl	11240 <gettext@plt>
   1346c:	bl	11258 <strlen@plt>
   13470:	ldr	lr, [fp, #-8]
   13474:	add	r0, r0, lr
   13478:	add	r0, r0, #1
   1347c:	bl	174a8 <__assert_fail@plt+0x6130>
   13480:	str	r0, [fp, #-12]
   13484:	ldr	r0, [fp, #-12]
   13488:	movw	lr, #51744	; 0xca20
   1348c:	movt	lr, #1
   13490:	str	r0, [sp, #12]
   13494:	mov	r0, lr
   13498:	bl	11240 <gettext@plt>
   1349c:	ldr	lr, [sp, #12]
   134a0:	str	r0, [sp, #8]
   134a4:	mov	r0, lr
   134a8:	ldr	r1, [sp, #8]
   134ac:	bl	1112c <stpcpy@plt>
   134b0:	str	r0, [sp, #16]
   134b4:	ldr	r0, [sp, #16]
   134b8:	ldr	r1, [fp, #-4]
   134bc:	add	r1, r1, #40	; 0x28
   134c0:	ldr	r2, [fp, #-8]
   134c4:	bl	13164 <__assert_fail@plt+0x1dec>
   134c8:	ldr	r1, [fp, #-12]
   134cc:	str	r0, [sp, #4]
   134d0:	mov	r0, r1
   134d4:	mov	sp, fp
   134d8:	pop	{fp, pc}
   134dc:	sub	sp, sp, #12
   134e0:	str	r0, [sp, #4]
   134e4:	ldr	r0, [sp, #4]
   134e8:	sub	r1, r0, #48	; 0x30
   134ec:	cmp	r1, #10
   134f0:	str	r0, [sp]
   134f4:	bcc	13524 <__assert_fail@plt+0x21ac>
   134f8:	b	134fc <__assert_fail@plt+0x2184>
   134fc:	ldr	r0, [sp]
   13500:	sub	r1, r0, #65	; 0x41
   13504:	cmp	r1, #26
   13508:	bcc	13524 <__assert_fail@plt+0x21ac>
   1350c:	b	13510 <__assert_fail@plt+0x2198>
   13510:	ldr	r0, [sp]
   13514:	sub	r1, r0, #97	; 0x61
   13518:	cmp	r1, #25
   1351c:	bhi	13534 <__assert_fail@plt+0x21bc>
   13520:	b	13524 <__assert_fail@plt+0x21ac>
   13524:	movw	r0, #1
   13528:	and	r0, r0, #1
   1352c:	strb	r0, [sp, #11]
   13530:	b	13540 <__assert_fail@plt+0x21c8>
   13534:	movw	r0, #0
   13538:	and	r0, r0, #1
   1353c:	strb	r0, [sp, #11]
   13540:	ldrb	r0, [sp, #11]
   13544:	and	r0, r0, #1
   13548:	add	sp, sp, #12
   1354c:	bx	lr
   13550:	sub	sp, sp, #12
   13554:	str	r0, [sp, #4]
   13558:	ldr	r0, [sp, #4]
   1355c:	sub	r1, r0, #65	; 0x41
   13560:	cmp	r1, #26
   13564:	str	r0, [sp]
   13568:	bcc	13584 <__assert_fail@plt+0x220c>
   1356c:	b	13570 <__assert_fail@plt+0x21f8>
   13570:	ldr	r0, [sp]
   13574:	sub	r1, r0, #97	; 0x61
   13578:	cmp	r1, #25
   1357c:	bhi	13594 <__assert_fail@plt+0x221c>
   13580:	b	13584 <__assert_fail@plt+0x220c>
   13584:	movw	r0, #1
   13588:	and	r0, r0, #1
   1358c:	strb	r0, [sp, #11]
   13590:	b	135a0 <__assert_fail@plt+0x2228>
   13594:	movw	r0, #0
   13598:	and	r0, r0, #1
   1359c:	strb	r0, [sp, #11]
   135a0:	ldrb	r0, [sp, #11]
   135a4:	and	r0, r0, #1
   135a8:	add	sp, sp, #12
   135ac:	bx	lr
   135b0:	sub	sp, sp, #8
   135b4:	str	r0, [sp]
   135b8:	ldr	r0, [sp]
   135bc:	cmp	r0, #127	; 0x7f
   135c0:	bhi	135d8 <__assert_fail@plt+0x2260>
   135c4:	b	135c8 <__assert_fail@plt+0x2250>
   135c8:	movw	r0, #1
   135cc:	and	r0, r0, #1
   135d0:	strb	r0, [sp, #7]
   135d4:	b	135e4 <__assert_fail@plt+0x226c>
   135d8:	movw	r0, #0
   135dc:	and	r0, r0, #1
   135e0:	strb	r0, [sp, #7]
   135e4:	ldrb	r0, [sp, #7]
   135e8:	and	r0, r0, #1
   135ec:	add	sp, sp, #8
   135f0:	bx	lr
   135f4:	sub	sp, sp, #8
   135f8:	str	r0, [sp, #4]
   135fc:	ldr	r0, [sp, #4]
   13600:	cmp	r0, #32
   13604:	movw	r0, #1
   13608:	str	r0, [sp]
   1360c:	beq	13624 <__assert_fail@plt+0x22ac>
   13610:	ldr	r0, [sp, #4]
   13614:	cmp	r0, #9
   13618:	movw	r0, #0
   1361c:	moveq	r0, #1
   13620:	str	r0, [sp]
   13624:	ldr	r0, [sp]
   13628:	and	r0, r0, #1
   1362c:	add	sp, sp, #8
   13630:	bx	lr
   13634:	sub	sp, sp, #12
   13638:	str	r0, [sp, #4]
   1363c:	ldr	r0, [sp, #4]
   13640:	cmp	r0, #32
   13644:	str	r0, [sp]
   13648:	bcc	13660 <__assert_fail@plt+0x22e8>
   1364c:	b	13650 <__assert_fail@plt+0x22d8>
   13650:	ldr	r0, [sp]
   13654:	cmp	r0, #127	; 0x7f
   13658:	bne	13670 <__assert_fail@plt+0x22f8>
   1365c:	b	13660 <__assert_fail@plt+0x22e8>
   13660:	movw	r0, #1
   13664:	and	r0, r0, #1
   13668:	strb	r0, [sp, #11]
   1366c:	b	1367c <__assert_fail@plt+0x2304>
   13670:	movw	r0, #0
   13674:	and	r0, r0, #1
   13678:	strb	r0, [sp, #11]
   1367c:	ldrb	r0, [sp, #11]
   13680:	and	r0, r0, #1
   13684:	add	sp, sp, #12
   13688:	bx	lr
   1368c:	sub	sp, sp, #8
   13690:	str	r0, [sp]
   13694:	ldr	r0, [sp]
   13698:	sub	r0, r0, #48	; 0x30
   1369c:	cmp	r0, #9
   136a0:	bhi	136b8 <__assert_fail@plt+0x2340>
   136a4:	b	136a8 <__assert_fail@plt+0x2330>
   136a8:	movw	r0, #1
   136ac:	and	r0, r0, #1
   136b0:	strb	r0, [sp, #7]
   136b4:	b	136c4 <__assert_fail@plt+0x234c>
   136b8:	movw	r0, #0
   136bc:	and	r0, r0, #1
   136c0:	strb	r0, [sp, #7]
   136c4:	ldrb	r0, [sp, #7]
   136c8:	and	r0, r0, #1
   136cc:	add	sp, sp, #8
   136d0:	bx	lr
   136d4:	sub	sp, sp, #8
   136d8:	str	r0, [sp]
   136dc:	ldr	r0, [sp]
   136e0:	sub	r0, r0, #33	; 0x21
   136e4:	cmp	r0, #93	; 0x5d
   136e8:	bhi	13700 <__assert_fail@plt+0x2388>
   136ec:	b	136f0 <__assert_fail@plt+0x2378>
   136f0:	movw	r0, #1
   136f4:	and	r0, r0, #1
   136f8:	strb	r0, [sp, #7]
   136fc:	b	1370c <__assert_fail@plt+0x2394>
   13700:	movw	r0, #0
   13704:	and	r0, r0, #1
   13708:	strb	r0, [sp, #7]
   1370c:	ldrb	r0, [sp, #7]
   13710:	and	r0, r0, #1
   13714:	add	sp, sp, #8
   13718:	bx	lr
   1371c:	sub	sp, sp, #8
   13720:	str	r0, [sp]
   13724:	ldr	r0, [sp]
   13728:	sub	r0, r0, #97	; 0x61
   1372c:	cmp	r0, #25
   13730:	bhi	13748 <__assert_fail@plt+0x23d0>
   13734:	b	13738 <__assert_fail@plt+0x23c0>
   13738:	movw	r0, #1
   1373c:	and	r0, r0, #1
   13740:	strb	r0, [sp, #7]
   13744:	b	13754 <__assert_fail@plt+0x23dc>
   13748:	movw	r0, #0
   1374c:	and	r0, r0, #1
   13750:	strb	r0, [sp, #7]
   13754:	ldrb	r0, [sp, #7]
   13758:	and	r0, r0, #1
   1375c:	add	sp, sp, #8
   13760:	bx	lr
   13764:	sub	sp, sp, #8
   13768:	str	r0, [sp]
   1376c:	ldr	r0, [sp]
   13770:	sub	r0, r0, #32
   13774:	cmp	r0, #94	; 0x5e
   13778:	bhi	13790 <__assert_fail@plt+0x2418>
   1377c:	b	13780 <__assert_fail@plt+0x2408>
   13780:	movw	r0, #1
   13784:	and	r0, r0, #1
   13788:	strb	r0, [sp, #7]
   1378c:	b	1379c <__assert_fail@plt+0x2424>
   13790:	movw	r0, #0
   13794:	and	r0, r0, #1
   13798:	strb	r0, [sp, #7]
   1379c:	ldrb	r0, [sp, #7]
   137a0:	and	r0, r0, #1
   137a4:	add	sp, sp, #8
   137a8:	bx	lr
   137ac:	sub	sp, sp, #12
   137b0:	str	r0, [sp, #4]
   137b4:	ldr	r0, [sp, #4]
   137b8:	sub	r0, r0, #33	; 0x21
   137bc:	cmp	r0, #93	; 0x5d
   137c0:	str	r0, [sp]
   137c4:	bhi	13960 <__assert_fail@plt+0x25e8>
   137c8:	add	r0, pc, #8
   137cc:	ldr	r1, [sp]
   137d0:	ldr	r0, [r0, r1, lsl #2]
   137d4:	mov	pc, r0
   137d8:	andeq	r3, r1, r0, asr r9
   137dc:	andeq	r3, r1, r0, asr r9
   137e0:	andeq	r3, r1, r0, asr r9
   137e4:	andeq	r3, r1, r0, asr r9
   137e8:	andeq	r3, r1, r0, asr r9
   137ec:	andeq	r3, r1, r0, asr r9
   137f0:	andeq	r3, r1, r0, asr r9
   137f4:	andeq	r3, r1, r0, asr r9
   137f8:	andeq	r3, r1, r0, asr r9
   137fc:	andeq	r3, r1, r0, asr r9
   13800:	andeq	r3, r1, r0, asr r9
   13804:	andeq	r3, r1, r0, asr r9
   13808:	andeq	r3, r1, r0, asr r9
   1380c:	andeq	r3, r1, r0, asr r9
   13810:	andeq	r3, r1, r0, asr r9
   13814:	andeq	r3, r1, r0, ror #18
   13818:	andeq	r3, r1, r0, ror #18
   1381c:	andeq	r3, r1, r0, ror #18
   13820:	andeq	r3, r1, r0, ror #18
   13824:	andeq	r3, r1, r0, ror #18
   13828:	andeq	r3, r1, r0, ror #18
   1382c:	andeq	r3, r1, r0, ror #18
   13830:	andeq	r3, r1, r0, ror #18
   13834:	andeq	r3, r1, r0, ror #18
   13838:	andeq	r3, r1, r0, ror #18
   1383c:	andeq	r3, r1, r0, asr r9
   13840:	andeq	r3, r1, r0, asr r9
   13844:	andeq	r3, r1, r0, asr r9
   13848:	andeq	r3, r1, r0, asr r9
   1384c:	andeq	r3, r1, r0, asr r9
   13850:	andeq	r3, r1, r0, asr r9
   13854:	andeq	r3, r1, r0, asr r9
   13858:	andeq	r3, r1, r0, ror #18
   1385c:	andeq	r3, r1, r0, ror #18
   13860:	andeq	r3, r1, r0, ror #18
   13864:	andeq	r3, r1, r0, ror #18
   13868:	andeq	r3, r1, r0, ror #18
   1386c:	andeq	r3, r1, r0, ror #18
   13870:	andeq	r3, r1, r0, ror #18
   13874:	andeq	r3, r1, r0, ror #18
   13878:	andeq	r3, r1, r0, ror #18
   1387c:	andeq	r3, r1, r0, ror #18
   13880:	andeq	r3, r1, r0, ror #18
   13884:	andeq	r3, r1, r0, ror #18
   13888:	andeq	r3, r1, r0, ror #18
   1388c:	andeq	r3, r1, r0, ror #18
   13890:	andeq	r3, r1, r0, ror #18
   13894:	andeq	r3, r1, r0, ror #18
   13898:	andeq	r3, r1, r0, ror #18
   1389c:	andeq	r3, r1, r0, ror #18
   138a0:	andeq	r3, r1, r0, ror #18
   138a4:	andeq	r3, r1, r0, ror #18
   138a8:	andeq	r3, r1, r0, ror #18
   138ac:	andeq	r3, r1, r0, ror #18
   138b0:	andeq	r3, r1, r0, ror #18
   138b4:	andeq	r3, r1, r0, ror #18
   138b8:	andeq	r3, r1, r0, ror #18
   138bc:	andeq	r3, r1, r0, ror #18
   138c0:	andeq	r3, r1, r0, asr r9
   138c4:	andeq	r3, r1, r0, asr r9
   138c8:	andeq	r3, r1, r0, asr r9
   138cc:	andeq	r3, r1, r0, asr r9
   138d0:	andeq	r3, r1, r0, asr r9
   138d4:	andeq	r3, r1, r0, asr r9
   138d8:	andeq	r3, r1, r0, ror #18
   138dc:	andeq	r3, r1, r0, ror #18
   138e0:	andeq	r3, r1, r0, ror #18
   138e4:	andeq	r3, r1, r0, ror #18
   138e8:	andeq	r3, r1, r0, ror #18
   138ec:	andeq	r3, r1, r0, ror #18
   138f0:	andeq	r3, r1, r0, ror #18
   138f4:	andeq	r3, r1, r0, ror #18
   138f8:	andeq	r3, r1, r0, ror #18
   138fc:	andeq	r3, r1, r0, ror #18
   13900:	andeq	r3, r1, r0, ror #18
   13904:	andeq	r3, r1, r0, ror #18
   13908:	andeq	r3, r1, r0, ror #18
   1390c:	andeq	r3, r1, r0, ror #18
   13910:	andeq	r3, r1, r0, ror #18
   13914:	andeq	r3, r1, r0, ror #18
   13918:	andeq	r3, r1, r0, ror #18
   1391c:	andeq	r3, r1, r0, ror #18
   13920:	andeq	r3, r1, r0, ror #18
   13924:	andeq	r3, r1, r0, ror #18
   13928:	andeq	r3, r1, r0, ror #18
   1392c:	andeq	r3, r1, r0, ror #18
   13930:	andeq	r3, r1, r0, ror #18
   13934:	andeq	r3, r1, r0, ror #18
   13938:	andeq	r3, r1, r0, ror #18
   1393c:	andeq	r3, r1, r0, ror #18
   13940:	andeq	r3, r1, r0, asr r9
   13944:	andeq	r3, r1, r0, asr r9
   13948:	andeq	r3, r1, r0, asr r9
   1394c:	andeq	r3, r1, r0, asr r9
   13950:	movw	r0, #1
   13954:	and	r0, r0, #1
   13958:	strb	r0, [sp, #11]
   1395c:	b	1396c <__assert_fail@plt+0x25f4>
   13960:	movw	r0, #0
   13964:	and	r0, r0, #1
   13968:	strb	r0, [sp, #11]
   1396c:	ldrb	r0, [sp, #11]
   13970:	and	r0, r0, #1
   13974:	add	sp, sp, #12
   13978:	bx	lr
   1397c:	sub	sp, sp, #12
   13980:	str	r0, [sp, #4]
   13984:	ldr	r0, [sp, #4]
   13988:	sub	r1, r0, #9
   1398c:	cmp	r1, #5
   13990:	str	r0, [sp]
   13994:	bcc	139ac <__assert_fail@plt+0x2634>
   13998:	b	1399c <__assert_fail@plt+0x2624>
   1399c:	ldr	r0, [sp]
   139a0:	cmp	r0, #32
   139a4:	bne	139bc <__assert_fail@plt+0x2644>
   139a8:	b	139ac <__assert_fail@plt+0x2634>
   139ac:	movw	r0, #1
   139b0:	and	r0, r0, #1
   139b4:	strb	r0, [sp, #11]
   139b8:	b	139c8 <__assert_fail@plt+0x2650>
   139bc:	movw	r0, #0
   139c0:	and	r0, r0, #1
   139c4:	strb	r0, [sp, #11]
   139c8:	ldrb	r0, [sp, #11]
   139cc:	and	r0, r0, #1
   139d0:	add	sp, sp, #12
   139d4:	bx	lr
   139d8:	sub	sp, sp, #8
   139dc:	str	r0, [sp]
   139e0:	ldr	r0, [sp]
   139e4:	sub	r0, r0, #65	; 0x41
   139e8:	cmp	r0, #25
   139ec:	bhi	13a04 <__assert_fail@plt+0x268c>
   139f0:	b	139f4 <__assert_fail@plt+0x267c>
   139f4:	movw	r0, #1
   139f8:	and	r0, r0, #1
   139fc:	strb	r0, [sp, #7]
   13a00:	b	13a10 <__assert_fail@plt+0x2698>
   13a04:	movw	r0, #0
   13a08:	and	r0, r0, #1
   13a0c:	strb	r0, [sp, #7]
   13a10:	ldrb	r0, [sp, #7]
   13a14:	and	r0, r0, #1
   13a18:	add	sp, sp, #8
   13a1c:	bx	lr
   13a20:	sub	sp, sp, #12
   13a24:	str	r0, [sp, #4]
   13a28:	ldr	r0, [sp, #4]
   13a2c:	sub	r1, r0, #48	; 0x30
   13a30:	cmp	r1, #10
   13a34:	str	r0, [sp]
   13a38:	bcc	13a68 <__assert_fail@plt+0x26f0>
   13a3c:	b	13a40 <__assert_fail@plt+0x26c8>
   13a40:	ldr	r0, [sp]
   13a44:	sub	r1, r0, #65	; 0x41
   13a48:	cmp	r1, #6
   13a4c:	bcc	13a68 <__assert_fail@plt+0x26f0>
   13a50:	b	13a54 <__assert_fail@plt+0x26dc>
   13a54:	ldr	r0, [sp]
   13a58:	sub	r1, r0, #97	; 0x61
   13a5c:	cmp	r1, #5
   13a60:	bhi	13a78 <__assert_fail@plt+0x2700>
   13a64:	b	13a68 <__assert_fail@plt+0x26f0>
   13a68:	movw	r0, #1
   13a6c:	and	r0, r0, #1
   13a70:	strb	r0, [sp, #11]
   13a74:	b	13a84 <__assert_fail@plt+0x270c>
   13a78:	movw	r0, #0
   13a7c:	and	r0, r0, #1
   13a80:	strb	r0, [sp, #11]
   13a84:	ldrb	r0, [sp, #11]
   13a88:	and	r0, r0, #1
   13a8c:	add	sp, sp, #12
   13a90:	bx	lr
   13a94:	sub	sp, sp, #8
   13a98:	str	r0, [sp]
   13a9c:	ldr	r0, [sp]
   13aa0:	sub	r0, r0, #65	; 0x41
   13aa4:	cmp	r0, #25
   13aa8:	bhi	13ac4 <__assert_fail@plt+0x274c>
   13aac:	b	13ab0 <__assert_fail@plt+0x2738>
   13ab0:	ldr	r0, [sp]
   13ab4:	sub	r0, r0, #65	; 0x41
   13ab8:	add	r0, r0, #97	; 0x61
   13abc:	str	r0, [sp, #4]
   13ac0:	b	13acc <__assert_fail@plt+0x2754>
   13ac4:	ldr	r0, [sp]
   13ac8:	str	r0, [sp, #4]
   13acc:	ldr	r0, [sp, #4]
   13ad0:	add	sp, sp, #8
   13ad4:	bx	lr
   13ad8:	sub	sp, sp, #8
   13adc:	str	r0, [sp]
   13ae0:	ldr	r0, [sp]
   13ae4:	sub	r0, r0, #97	; 0x61
   13ae8:	cmp	r0, #25
   13aec:	bhi	13b08 <__assert_fail@plt+0x2790>
   13af0:	b	13af4 <__assert_fail@plt+0x277c>
   13af4:	ldr	r0, [sp]
   13af8:	sub	r0, r0, #97	; 0x61
   13afc:	add	r0, r0, #65	; 0x41
   13b00:	str	r0, [sp, #4]
   13b04:	b	13b10 <__assert_fail@plt+0x2798>
   13b08:	ldr	r0, [sp]
   13b0c:	str	r0, [sp, #4]
   13b10:	ldr	r0, [sp, #4]
   13b14:	add	sp, sp, #8
   13b18:	bx	lr
   13b1c:	push	{fp, lr}
   13b20:	mov	fp, sp
   13b24:	sub	sp, sp, #8
   13b28:	str	r0, [sp, #4]
   13b2c:	ldr	r0, [sp, #4]
   13b30:	movw	r1, #57816	; 0xe1d8
   13b34:	movt	r1, #2
   13b38:	bl	13b44 <__assert_fail@plt+0x27cc>
   13b3c:	mov	sp, fp
   13b40:	pop	{fp, pc}
   13b44:	push	{fp, lr}
   13b48:	mov	fp, sp
   13b4c:	sub	sp, sp, #32
   13b50:	str	r0, [fp, #-4]
   13b54:	str	r1, [fp, #-8]
   13b58:	movw	r0, #0
   13b5c:	str	r0, [fp, #-12]
   13b60:	str	r0, [sp, #16]
   13b64:	movw	r1, #2
   13b68:	movw	r2, #57820	; 0xe1dc
   13b6c:	movt	r2, #2
   13b70:	str	r1, [r2]
   13b74:	ldr	r1, [fp, #-4]
   13b78:	str	r0, [sp, #8]
   13b7c:	mov	r0, r1
   13b80:	ldr	r1, [sp, #8]
   13b84:	add	r3, sp, #16
   13b88:	bl	11324 <getaddrinfo@plt>
   13b8c:	str	r0, [sp, #12]
   13b90:	ldr	r0, [sp, #12]
   13b94:	cmp	r0, #0
   13b98:	bne	13c0c <__assert_fail@plt+0x2894>
   13b9c:	ldr	r0, [sp, #16]
   13ba0:	ldr	r0, [r0, #24]
   13ba4:	movw	r1, #0
   13ba8:	cmp	r0, r1
   13bac:	beq	13bc0 <__assert_fail@plt+0x2848>
   13bb0:	ldr	r0, [sp, #16]
   13bb4:	ldr	r0, [r0, #24]
   13bb8:	str	r0, [sp, #4]
   13bbc:	b	13bc8 <__assert_fail@plt+0x2850>
   13bc0:	ldr	r0, [fp, #-4]
   13bc4:	str	r0, [sp, #4]
   13bc8:	ldr	r0, [sp, #4]
   13bcc:	bl	11138 <strdup@plt>
   13bd0:	str	r0, [fp, #-12]
   13bd4:	ldr	r0, [fp, #-12]
   13bd8:	movw	lr, #0
   13bdc:	cmp	r0, lr
   13be0:	bne	13c00 <__assert_fail@plt+0x2888>
   13be4:	ldr	r0, [fp, #-8]
   13be8:	movw	r1, #0
   13bec:	cmp	r0, r1
   13bf0:	beq	13c00 <__assert_fail@plt+0x2888>
   13bf4:	ldr	r0, [fp, #-8]
   13bf8:	mvn	r1, #9
   13bfc:	str	r1, [r0]
   13c00:	ldr	r0, [sp, #16]
   13c04:	bl	11318 <freeaddrinfo@plt>
   13c08:	b	13c2c <__assert_fail@plt+0x28b4>
   13c0c:	ldr	r0, [fp, #-8]
   13c10:	movw	r1, #0
   13c14:	cmp	r0, r1
   13c18:	beq	13c28 <__assert_fail@plt+0x28b0>
   13c1c:	ldr	r0, [sp, #12]
   13c20:	ldr	r1, [fp, #-8]
   13c24:	str	r0, [r1]
   13c28:	b	13c2c <__assert_fail@plt+0x28b4>
   13c2c:	ldr	r0, [fp, #-12]
   13c30:	mov	sp, fp
   13c34:	pop	{fp, pc}
   13c38:	push	{fp, lr}
   13c3c:	mov	fp, sp
   13c40:	movw	r0, #57816	; 0xe1d8
   13c44:	movt	r0, #2
   13c48:	ldr	r0, [r0]
   13c4c:	bl	110e4 <gai_strerror@plt>
   13c50:	pop	{fp, pc}
   13c54:	sub	sp, sp, #4
   13c58:	str	r0, [sp]
   13c5c:	ldr	r0, [sp]
   13c60:	movw	r1, #57852	; 0xe1fc
   13c64:	movt	r1, #2
   13c68:	str	r0, [r1]
   13c6c:	add	sp, sp, #4
   13c70:	bx	lr
   13c74:	sub	sp, sp, #4
   13c78:	and	r0, r0, #1
   13c7c:	strb	r0, [sp, #3]
   13c80:	ldrb	r0, [sp, #3]
   13c84:	and	r0, r0, #1
   13c88:	movw	r1, #57856	; 0xe200
   13c8c:	movt	r1, #2
   13c90:	strb	r0, [r1]
   13c94:	add	sp, sp, #4
   13c98:	bx	lr
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #24
   13ca8:	movw	r0, #57724	; 0xe17c
   13cac:	movt	r0, #2
   13cb0:	ldr	r0, [r0]
   13cb4:	bl	1a53c <__assert_fail@plt+0x91c4>
   13cb8:	cmp	r0, #0
   13cbc:	beq	13d8c <__assert_fail@plt+0x2a14>
   13cc0:	movw	r0, #57856	; 0xe200
   13cc4:	movt	r0, #2
   13cc8:	ldrb	r0, [r0]
   13ccc:	tst	r0, #1
   13cd0:	beq	13ce4 <__assert_fail@plt+0x296c>
   13cd4:	bl	1127c <__errno_location@plt>
   13cd8:	ldr	r0, [r0]
   13cdc:	cmp	r0, #32
   13ce0:	beq	13d8c <__assert_fail@plt+0x2a14>
   13ce4:	movw	r0, #52135	; 0xcba7
   13ce8:	movt	r0, #1
   13cec:	bl	11240 <gettext@plt>
   13cf0:	str	r0, [fp, #-4]
   13cf4:	movw	r0, #57852	; 0xe1fc
   13cf8:	movt	r0, #2
   13cfc:	ldr	r0, [r0]
   13d00:	movw	lr, #0
   13d04:	cmp	r0, lr
   13d08:	beq	13d60 <__assert_fail@plt+0x29e8>
   13d0c:	bl	1127c <__errno_location@plt>
   13d10:	ldr	r1, [r0]
   13d14:	movw	r0, #57852	; 0xe1fc
   13d18:	movt	r0, #2
   13d1c:	ldr	r0, [r0]
   13d20:	str	r1, [fp, #-8]
   13d24:	bl	16398 <__assert_fail@plt+0x5020>
   13d28:	ldr	r1, [fp, #-4]
   13d2c:	movw	lr, #0
   13d30:	str	r0, [sp, #12]
   13d34:	mov	r0, lr
   13d38:	ldr	lr, [fp, #-8]
   13d3c:	str	r1, [sp, #8]
   13d40:	mov	r1, lr
   13d44:	movw	r2, #52147	; 0xcbb3
   13d48:	movt	r2, #1
   13d4c:	ldr	r3, [sp, #12]
   13d50:	ldr	ip, [sp, #8]
   13d54:	str	ip, [sp]
   13d58:	bl	111b0 <error@plt>
   13d5c:	b	13d7c <__assert_fail@plt+0x2a04>
   13d60:	bl	1127c <__errno_location@plt>
   13d64:	ldr	r1, [r0]
   13d68:	ldr	r3, [fp, #-4]
   13d6c:	movw	r0, #0
   13d70:	movw	r2, #52151	; 0xcbb7
   13d74:	movt	r2, #1
   13d78:	bl	111b0 <error@plt>
   13d7c:	movw	r0, #57636	; 0xe124
   13d80:	movt	r0, #2
   13d84:	ldr	r0, [r0]
   13d88:	bl	110f0 <_exit@plt>
   13d8c:	movw	r0, #57720	; 0xe178
   13d90:	movt	r0, #2
   13d94:	ldr	r0, [r0]
   13d98:	bl	1a53c <__assert_fail@plt+0x91c4>
   13d9c:	cmp	r0, #0
   13da0:	beq	13db4 <__assert_fail@plt+0x2a3c>
   13da4:	movw	r0, #57636	; 0xe124
   13da8:	movt	r0, #2
   13dac:	ldr	r0, [r0]
   13db0:	bl	110f0 <_exit@plt>
   13db4:	mov	sp, fp
   13db8:	pop	{fp, pc}
   13dbc:	push	{fp, lr}
   13dc0:	mov	fp, sp
   13dc4:	sub	sp, sp, #16
   13dc8:	str	r0, [fp, #-4]
   13dcc:	bl	1127c <__errno_location@plt>
   13dd0:	ldr	r0, [r0]
   13dd4:	str	r0, [sp, #8]
   13dd8:	ldr	r0, [fp, #-4]
   13ddc:	bl	110d8 <free@plt>
   13de0:	ldr	r0, [sp, #8]
   13de4:	str	r0, [sp, #4]
   13de8:	bl	1127c <__errno_location@plt>
   13dec:	ldr	lr, [sp, #4]
   13df0:	str	lr, [r0]
   13df4:	mov	sp, fp
   13df8:	pop	{fp, pc}
   13dfc:	push	{r4, r5, fp, lr}
   13e00:	add	fp, sp, #8
   13e04:	sub	sp, sp, #272	; 0x110
   13e08:	add	r1, sp, #7
   13e0c:	str	r0, [fp, #-16]
   13e10:	ldr	r0, [fp, #-16]
   13e14:	movw	r2, #257	; 0x101
   13e18:	bl	16a38 <__assert_fail@plt+0x56c0>
   13e1c:	cmp	r0, #0
   13e20:	beq	13e34 <__assert_fail@plt+0x2abc>
   13e24:	movw	r0, #0
   13e28:	and	r0, r0, #1
   13e2c:	strb	r0, [fp, #-9]
   13e30:	b	13e88 <__assert_fail@plt+0x2b10>
   13e34:	add	r0, sp, #7
   13e38:	movw	r1, #52154	; 0xcbba
   13e3c:	movt	r1, #1
   13e40:	bl	110a8 <strcmp@plt>
   13e44:	cmp	r0, #0
   13e48:	movw	r0, #1
   13e4c:	str	r0, [sp]
   13e50:	beq	13e74 <__assert_fail@plt+0x2afc>
   13e54:	add	r0, sp, #7
   13e58:	movw	r1, #52156	; 0xcbbc
   13e5c:	movt	r1, #1
   13e60:	bl	110a8 <strcmp@plt>
   13e64:	cmp	r0, #0
   13e68:	movw	r0, #0
   13e6c:	moveq	r0, #1
   13e70:	str	r0, [sp]
   13e74:	ldr	r0, [sp]
   13e78:	mvn	r1, #0
   13e7c:	eor	r0, r0, r1
   13e80:	and	r0, r0, #1
   13e84:	strb	r0, [fp, #-9]
   13e88:	ldrb	r0, [fp, #-9]
   13e8c:	and	r0, r0, #1
   13e90:	sub	sp, fp, #8
   13e94:	pop	{r4, r5, fp, pc}
   13e98:	push	{fp, lr}
   13e9c:	mov	fp, sp
   13ea0:	sub	sp, sp, #32
   13ea4:	str	r0, [fp, #-8]
   13ea8:	str	r1, [fp, #-4]
   13eac:	str	r2, [fp, #-12]
   13eb0:	ldr	r0, [fp, #-12]
   13eb4:	add	r0, r0, #20
   13eb8:	str	r0, [sp, #16]
   13ebc:	ldr	r0, [sp, #16]
   13ec0:	mov	r1, #0
   13ec4:	strb	r1, [r0]
   13ec8:	ldr	r0, [fp, #-4]
   13ecc:	cmn	r0, #1
   13ed0:	bgt	13f60 <__assert_fail@plt+0x2be8>
   13ed4:	b	13ed8 <__assert_fail@plt+0x2b60>
   13ed8:	b	13edc <__assert_fail@plt+0x2b64>
   13edc:	ldr	r0, [fp, #-8]
   13ee0:	ldr	r1, [fp, #-4]
   13ee4:	mov	r2, #10
   13ee8:	mov	r3, #0
   13eec:	bl	1bf24 <__assert_fail@plt+0xabac>
   13ef0:	rsb	r2, r2, #48	; 0x30
   13ef4:	ldr	r3, [sp, #16]
   13ef8:	mvn	lr, #0
   13efc:	add	ip, r3, lr
   13f00:	str	ip, [sp, #16]
   13f04:	add	r3, r3, lr
   13f08:	strb	r2, [r3]
   13f0c:	str	r0, [sp, #12]
   13f10:	str	r1, [sp, #8]
   13f14:	ldr	r0, [fp, #-8]
   13f18:	ldr	r1, [fp, #-4]
   13f1c:	mov	r2, #10
   13f20:	mov	r3, #0
   13f24:	bl	1bf24 <__assert_fail@plt+0xabac>
   13f28:	str	r1, [fp, #-4]
   13f2c:	str	r0, [fp, #-8]
   13f30:	orr	r0, r0, r1
   13f34:	cmp	r0, #0
   13f38:	bne	13edc <__assert_fail@plt+0x2b64>
   13f3c:	b	13f40 <__assert_fail@plt+0x2bc8>
   13f40:	ldr	r0, [sp, #16]
   13f44:	mvn	r1, #0
   13f48:	add	r2, r0, r1
   13f4c:	str	r2, [sp, #16]
   13f50:	add	r0, r0, r1
   13f54:	movw	r1, #45	; 0x2d
   13f58:	strb	r1, [r0]
   13f5c:	b	13fcc <__assert_fail@plt+0x2c54>
   13f60:	b	13f64 <__assert_fail@plt+0x2bec>
   13f64:	ldr	r0, [fp, #-8]
   13f68:	ldr	r1, [fp, #-4]
   13f6c:	mov	r2, #10
   13f70:	mov	r3, #0
   13f74:	bl	1bf24 <__assert_fail@plt+0xabac>
   13f78:	add	r2, r2, #48	; 0x30
   13f7c:	ldr	r3, [sp, #16]
   13f80:	mvn	lr, #0
   13f84:	add	ip, r3, lr
   13f88:	str	ip, [sp, #16]
   13f8c:	add	r3, r3, lr
   13f90:	strb	r2, [r3]
   13f94:	str	r0, [sp, #4]
   13f98:	str	r1, [sp]
   13f9c:	ldr	r0, [fp, #-8]
   13fa0:	ldr	r1, [fp, #-4]
   13fa4:	mov	r2, #10
   13fa8:	mov	r3, #0
   13fac:	bl	1bf24 <__assert_fail@plt+0xabac>
   13fb0:	str	r1, [fp, #-4]
   13fb4:	str	r0, [fp, #-8]
   13fb8:	orr	r0, r0, r1
   13fbc:	cmp	r0, #0
   13fc0:	bne	13f64 <__assert_fail@plt+0x2bec>
   13fc4:	b	13fc8 <__assert_fail@plt+0x2c50>
   13fc8:	b	13fcc <__assert_fail@plt+0x2c54>
   13fcc:	ldr	r0, [sp, #16]
   13fd0:	mov	sp, fp
   13fd4:	pop	{fp, pc}
   13fd8:	push	{fp, lr}
   13fdc:	mov	fp, sp
   13fe0:	sub	sp, sp, #24
   13fe4:	str	r0, [fp, #-4]
   13fe8:	ldr	r0, [fp, #-4]
   13fec:	movw	r1, #0
   13ff0:	cmp	r0, r1
   13ff4:	bne	14018 <__assert_fail@plt+0x2ca0>
   13ff8:	movw	r0, #57720	; 0xe178
   13ffc:	movt	r0, #2
   14000:	ldr	r1, [r0]
   14004:	movw	r0, #52162	; 0xcbc2
   14008:	movt	r0, #1
   1400c:	bl	11348 <fputs@plt>
   14010:	str	r0, [sp, #8]
   14014:	bl	11360 <abort@plt>
   14018:	ldr	r0, [fp, #-4]
   1401c:	movw	r1, #47	; 0x2f
   14020:	bl	112f4 <strrchr@plt>
   14024:	str	r0, [fp, #-8]
   14028:	ldr	r0, [fp, #-8]
   1402c:	movw	r1, #0
   14030:	cmp	r0, r1
   14034:	beq	14048 <__assert_fail@plt+0x2cd0>
   14038:	ldr	r0, [fp, #-8]
   1403c:	add	r0, r0, #1
   14040:	str	r0, [sp, #4]
   14044:	b	14050 <__assert_fail@plt+0x2cd8>
   14048:	ldr	r0, [fp, #-4]
   1404c:	str	r0, [sp, #4]
   14050:	ldr	r0, [sp, #4]
   14054:	str	r0, [sp, #12]
   14058:	ldr	r0, [sp, #12]
   1405c:	ldr	r1, [fp, #-4]
   14060:	sub	r0, r0, r1
   14064:	cmp	r0, #7
   14068:	blt	140d4 <__assert_fail@plt+0x2d5c>
   1406c:	ldr	r0, [sp, #12]
   14070:	mvn	r1, #6
   14074:	add	r0, r0, r1
   14078:	movw	r1, #52218	; 0xcbfa
   1407c:	movt	r1, #1
   14080:	movw	r2, #7
   14084:	bl	11354 <strncmp@plt>
   14088:	cmp	r0, #0
   1408c:	bne	140d4 <__assert_fail@plt+0x2d5c>
   14090:	ldr	r0, [sp, #12]
   14094:	str	r0, [fp, #-4]
   14098:	ldr	r0, [sp, #12]
   1409c:	movw	r1, #52226	; 0xcc02
   140a0:	movt	r1, #1
   140a4:	movw	r2, #3
   140a8:	bl	11354 <strncmp@plt>
   140ac:	cmp	r0, #0
   140b0:	bne	140d0 <__assert_fail@plt+0x2d58>
   140b4:	ldr	r0, [sp, #12]
   140b8:	add	r0, r0, #3
   140bc:	str	r0, [fp, #-4]
   140c0:	ldr	r0, [fp, #-4]
   140c4:	movw	r1, #57704	; 0xe168
   140c8:	movt	r1, #2
   140cc:	str	r0, [r1]
   140d0:	b	140d4 <__assert_fail@plt+0x2d5c>
   140d4:	ldr	r0, [fp, #-4]
   140d8:	movw	r1, #57860	; 0xe204
   140dc:	movt	r1, #2
   140e0:	str	r0, [r1]
   140e4:	ldr	r0, [fp, #-4]
   140e8:	movw	r1, #57708	; 0xe16c
   140ec:	movt	r1, #2
   140f0:	str	r0, [r1]
   140f4:	mov	sp, fp
   140f8:	pop	{fp, pc}
   140fc:	push	{fp, lr}
   14100:	mov	fp, sp
   14104:	sub	sp, sp, #24
   14108:	str	r0, [fp, #-4]
   1410c:	bl	1127c <__errno_location@plt>
   14110:	ldr	r0, [r0]
   14114:	str	r0, [fp, #-8]
   14118:	ldr	r0, [fp, #-4]
   1411c:	movw	lr, #0
   14120:	cmp	r0, lr
   14124:	beq	14134 <__assert_fail@plt+0x2dbc>
   14128:	ldr	r0, [fp, #-4]
   1412c:	str	r0, [sp, #8]
   14130:	b	14144 <__assert_fail@plt+0x2dcc>
   14134:	movw	r0, #57864	; 0xe208
   14138:	movt	r0, #2
   1413c:	str	r0, [sp, #8]
   14140:	b	14144 <__assert_fail@plt+0x2dcc>
   14144:	ldr	r0, [sp, #8]
   14148:	movw	r1, #48	; 0x30
   1414c:	bl	1a184 <__assert_fail@plt+0x8e0c>
   14150:	str	r0, [sp, #12]
   14154:	ldr	r0, [fp, #-8]
   14158:	str	r0, [sp, #4]
   1415c:	bl	1127c <__errno_location@plt>
   14160:	ldr	r1, [sp, #4]
   14164:	str	r1, [r0]
   14168:	ldr	r0, [sp, #12]
   1416c:	mov	sp, fp
   14170:	pop	{fp, pc}
   14174:	sub	sp, sp, #8
   14178:	str	r0, [sp, #4]
   1417c:	ldr	r0, [sp, #4]
   14180:	movw	r1, #0
   14184:	cmp	r0, r1
   14188:	beq	14198 <__assert_fail@plt+0x2e20>
   1418c:	ldr	r0, [sp, #4]
   14190:	str	r0, [sp]
   14194:	b	141a8 <__assert_fail@plt+0x2e30>
   14198:	movw	r0, #57864	; 0xe208
   1419c:	movt	r0, #2
   141a0:	str	r0, [sp]
   141a4:	b	141a8 <__assert_fail@plt+0x2e30>
   141a8:	ldr	r0, [sp]
   141ac:	ldr	r0, [r0]
   141b0:	add	sp, sp, #8
   141b4:	bx	lr
   141b8:	sub	sp, sp, #16
   141bc:	str	r0, [sp, #12]
   141c0:	str	r1, [sp, #8]
   141c4:	ldr	r0, [sp, #8]
   141c8:	ldr	r1, [sp, #12]
   141cc:	movw	r2, #0
   141d0:	cmp	r1, r2
   141d4:	str	r0, [sp, #4]
   141d8:	beq	141e8 <__assert_fail@plt+0x2e70>
   141dc:	ldr	r0, [sp, #12]
   141e0:	str	r0, [sp]
   141e4:	b	141f8 <__assert_fail@plt+0x2e80>
   141e8:	movw	r0, #57864	; 0xe208
   141ec:	movt	r0, #2
   141f0:	str	r0, [sp]
   141f4:	b	141f8 <__assert_fail@plt+0x2e80>
   141f8:	ldr	r0, [sp]
   141fc:	ldr	r1, [sp, #4]
   14200:	str	r1, [r0]
   14204:	add	sp, sp, #16
   14208:	bx	lr
   1420c:	sub	sp, sp, #32
   14210:	str	r0, [sp, #28]
   14214:	strb	r1, [sp, #27]
   14218:	str	r2, [sp, #20]
   1421c:	ldrb	r0, [sp, #27]
   14220:	strb	r0, [sp, #19]
   14224:	ldr	r0, [sp, #28]
   14228:	movw	r1, #0
   1422c:	cmp	r0, r1
   14230:	beq	14240 <__assert_fail@plt+0x2ec8>
   14234:	ldr	r0, [sp, #28]
   14238:	str	r0, [sp]
   1423c:	b	14250 <__assert_fail@plt+0x2ed8>
   14240:	movw	r0, #57864	; 0xe208
   14244:	movt	r0, #2
   14248:	str	r0, [sp]
   1424c:	b	14250 <__assert_fail@plt+0x2ed8>
   14250:	ldr	r0, [sp]
   14254:	add	r0, r0, #8
   14258:	ldrb	r1, [sp, #19]
   1425c:	lsr	r1, r1, #5
   14260:	add	r0, r0, r1, lsl #2
   14264:	str	r0, [sp, #12]
   14268:	ldrb	r0, [sp, #19]
   1426c:	and	r0, r0, #31
   14270:	str	r0, [sp, #8]
   14274:	ldr	r0, [sp, #12]
   14278:	ldr	r0, [r0]
   1427c:	ldr	r1, [sp, #8]
   14280:	lsr	r0, r0, r1
   14284:	and	r0, r0, #1
   14288:	str	r0, [sp, #4]
   1428c:	ldr	r0, [sp, #20]
   14290:	and	r0, r0, #1
   14294:	ldr	r1, [sp, #4]
   14298:	eor	r0, r0, r1
   1429c:	ldr	r1, [sp, #8]
   142a0:	lsl	r0, r0, r1
   142a4:	ldr	r1, [sp, #12]
   142a8:	ldr	r2, [r1]
   142ac:	eor	r0, r2, r0
   142b0:	str	r0, [r1]
   142b4:	ldr	r0, [sp, #4]
   142b8:	add	sp, sp, #32
   142bc:	bx	lr
   142c0:	sub	sp, sp, #12
   142c4:	str	r0, [sp, #8]
   142c8:	str	r1, [sp, #4]
   142cc:	ldr	r0, [sp, #8]
   142d0:	movw	r1, #0
   142d4:	cmp	r0, r1
   142d8:	bne	142e8 <__assert_fail@plt+0x2f70>
   142dc:	movw	r0, #57864	; 0xe208
   142e0:	movt	r0, #2
   142e4:	str	r0, [sp, #8]
   142e8:	ldr	r0, [sp, #8]
   142ec:	ldr	r0, [r0, #4]
   142f0:	str	r0, [sp]
   142f4:	ldr	r0, [sp, #4]
   142f8:	ldr	r1, [sp, #8]
   142fc:	str	r0, [r1, #4]
   14300:	ldr	r0, [sp]
   14304:	add	sp, sp, #12
   14308:	bx	lr
   1430c:	push	{fp, lr}
   14310:	mov	fp, sp
   14314:	sub	sp, sp, #16
   14318:	str	r0, [fp, #-4]
   1431c:	str	r1, [sp, #8]
   14320:	str	r2, [sp, #4]
   14324:	ldr	r0, [fp, #-4]
   14328:	movw	r1, #0
   1432c:	cmp	r0, r1
   14330:	bne	14340 <__assert_fail@plt+0x2fc8>
   14334:	movw	r0, #57864	; 0xe208
   14338:	movt	r0, #2
   1433c:	str	r0, [fp, #-4]
   14340:	ldr	r0, [fp, #-4]
   14344:	movw	r1, #10
   14348:	str	r1, [r0]
   1434c:	ldr	r0, [sp, #8]
   14350:	movw	r1, #0
   14354:	cmp	r0, r1
   14358:	beq	1436c <__assert_fail@plt+0x2ff4>
   1435c:	ldr	r0, [sp, #4]
   14360:	movw	r1, #0
   14364:	cmp	r0, r1
   14368:	bne	14370 <__assert_fail@plt+0x2ff8>
   1436c:	bl	11360 <abort@plt>
   14370:	ldr	r0, [sp, #8]
   14374:	ldr	r1, [fp, #-4]
   14378:	str	r0, [r1, #40]	; 0x28
   1437c:	ldr	r0, [sp, #4]
   14380:	ldr	r1, [fp, #-4]
   14384:	str	r0, [r1, #44]	; 0x2c
   14388:	mov	sp, fp
   1438c:	pop	{fp, pc}
   14390:	push	{r4, r5, r6, sl, fp, lr}
   14394:	add	fp, sp, #16
   14398:	sub	sp, sp, #64	; 0x40
   1439c:	ldr	ip, [fp, #8]
   143a0:	str	r0, [fp, #-20]	; 0xffffffec
   143a4:	str	r1, [fp, #-24]	; 0xffffffe8
   143a8:	str	r2, [fp, #-28]	; 0xffffffe4
   143ac:	str	r3, [fp, #-32]	; 0xffffffe0
   143b0:	ldr	r0, [fp, #8]
   143b4:	movw	r1, #0
   143b8:	cmp	r0, r1
   143bc:	str	ip, [sp, #32]
   143c0:	beq	143d0 <__assert_fail@plt+0x3058>
   143c4:	ldr	r0, [fp, #8]
   143c8:	str	r0, [sp, #28]
   143cc:	b	143e0 <__assert_fail@plt+0x3068>
   143d0:	movw	r0, #57864	; 0xe208
   143d4:	movt	r0, #2
   143d8:	str	r0, [sp, #28]
   143dc:	b	143e0 <__assert_fail@plt+0x3068>
   143e0:	ldr	r0, [sp, #28]
   143e4:	str	r0, [fp, #-36]	; 0xffffffdc
   143e8:	bl	1127c <__errno_location@plt>
   143ec:	ldr	r0, [r0]
   143f0:	str	r0, [sp, #40]	; 0x28
   143f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   143f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   143fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14404:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14408:	ldr	lr, [lr]
   1440c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14410:	ldr	ip, [ip, #4]
   14414:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14418:	add	r4, r4, #8
   1441c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14420:	ldr	r5, [r5, #40]	; 0x28
   14424:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14428:	ldr	r6, [r6, #44]	; 0x2c
   1442c:	str	lr, [sp]
   14430:	str	ip, [sp, #4]
   14434:	str	r4, [sp, #8]
   14438:	str	r5, [sp, #12]
   1443c:	str	r6, [sp, #16]
   14440:	bl	14468 <__assert_fail@plt+0x30f0>
   14444:	str	r0, [sp, #36]	; 0x24
   14448:	ldr	r0, [sp, #40]	; 0x28
   1444c:	str	r0, [sp, #24]
   14450:	bl	1127c <__errno_location@plt>
   14454:	ldr	r1, [sp, #24]
   14458:	str	r1, [r0]
   1445c:	ldr	r0, [sp, #36]	; 0x24
   14460:	sub	sp, fp, #16
   14464:	pop	{r4, r5, r6, sl, fp, pc}
   14468:	push	{r4, r5, r6, sl, fp, lr}
   1446c:	add	fp, sp, #16
   14470:	sub	sp, sp, #168	; 0xa8
   14474:	ldr	ip, [fp, #24]
   14478:	ldr	lr, [fp, #20]
   1447c:	ldr	r4, [fp, #16]
   14480:	ldr	r5, [fp, #12]
   14484:	ldr	r6, [fp, #8]
   14488:	str	r0, [fp, #-24]	; 0xffffffe8
   1448c:	str	r1, [fp, #-28]	; 0xffffffe4
   14490:	str	r2, [fp, #-32]	; 0xffffffe0
   14494:	str	r3, [fp, #-36]	; 0xffffffdc
   14498:	movw	r0, #0
   1449c:	str	r0, [fp, #-44]	; 0xffffffd4
   144a0:	str	r0, [fp, #-48]	; 0xffffffd0
   144a4:	str	r0, [fp, #-52]	; 0xffffffcc
   144a8:	str	r0, [fp, #-56]	; 0xffffffc8
   144ac:	movw	r0, #0
   144b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   144b4:	str	r6, [sp, #80]	; 0x50
   144b8:	str	lr, [sp, #76]	; 0x4c
   144bc:	str	r4, [sp, #72]	; 0x48
   144c0:	str	r5, [sp, #68]	; 0x44
   144c4:	str	ip, [sp, #64]	; 0x40
   144c8:	bl	11180 <__ctype_get_mb_cur_max@plt>
   144cc:	cmp	r0, #1
   144d0:	movw	r0, #0
   144d4:	moveq	r0, #1
   144d8:	and	r0, r0, #1
   144dc:	strb	r0, [fp, #-58]	; 0xffffffc6
   144e0:	ldr	r0, [fp, #12]
   144e4:	and	r0, r0, #2
   144e8:	cmp	r0, #0
   144ec:	movw	r0, #0
   144f0:	movne	r0, #1
   144f4:	and	r0, r0, #1
   144f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   144fc:	movw	r0, #0
   14500:	strb	r0, [fp, #-60]	; 0xffffffc4
   14504:	strb	r0, [fp, #-61]	; 0xffffffc3
   14508:	movw	r0, #1
   1450c:	strb	r0, [fp, #-62]	; 0xffffffc2
   14510:	ldr	r0, [fp, #8]
   14514:	cmp	r0, #10
   14518:	str	r0, [sp, #60]	; 0x3c
   1451c:	bhi	14744 <__assert_fail@plt+0x33cc>
   14520:	add	r0, pc, #8
   14524:	ldr	r1, [sp, #60]	; 0x3c
   14528:	ldr	r0, [r0, r1, lsl #2]
   1452c:	mov	pc, r0
   14530:	andeq	r4, r1, r8, lsr r7
   14534:			; <UNDEFINED> instruction: 0x000146b4
   14538:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1453c:	andeq	r4, r1, ip, lsr #13
   14540:			; <UNDEFINED> instruction: 0x000146bc
   14544:	andeq	r4, r1, ip, ror #10
   14548:	andeq	r4, r1, ip, asr r5
   1454c:	ldrdeq	r4, [r1], -r0
   14550:	andeq	r4, r1, r4, ror #11
   14554:	andeq	r4, r1, r4, ror #11
   14558:	andeq	r4, r1, r4, ror #11
   1455c:	movw	r0, #5
   14560:	str	r0, [fp, #8]
   14564:	movw	r0, #1
   14568:	strb	r0, [fp, #-59]	; 0xffffffc5
   1456c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14570:	tst	r0, #1
   14574:	bne	145b0 <__assert_fail@plt+0x3238>
   14578:	b	1457c <__assert_fail@plt+0x3204>
   1457c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14584:	cmp	r0, r1
   14588:	bcs	145a0 <__assert_fail@plt+0x3228>
   1458c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14590:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14594:	add	r0, r0, r1
   14598:	movw	r1, #34	; 0x22
   1459c:	strb	r1, [r0]
   145a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145a4:	add	r0, r0, #1
   145a8:	str	r0, [fp, #-44]	; 0xffffffd4
   145ac:	b	145b0 <__assert_fail@plt+0x3238>
   145b0:	movw	r0, #1
   145b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   145b8:	movw	r0, #52306	; 0xcc52
   145bc:	movt	r0, #1
   145c0:	str	r0, [fp, #-52]	; 0xffffffcc
   145c4:	movw	r0, #1
   145c8:	str	r0, [fp, #-56]	; 0xffffffc8
   145cc:	b	14748 <__assert_fail@plt+0x33d0>
   145d0:	movw	r0, #1
   145d4:	strb	r0, [fp, #-57]	; 0xffffffc7
   145d8:	movw	r0, #0
   145dc:	strb	r0, [fp, #-59]	; 0xffffffc5
   145e0:	b	14748 <__assert_fail@plt+0x33d0>
   145e4:	ldr	r0, [fp, #8]
   145e8:	cmp	r0, #10
   145ec:	beq	14618 <__assert_fail@plt+0x32a0>
   145f0:	ldr	r1, [fp, #8]
   145f4:	movw	r0, #52308	; 0xcc54
   145f8:	movt	r0, #1
   145fc:	bl	16658 <__assert_fail@plt+0x52e0>
   14600:	str	r0, [fp, #20]
   14604:	ldr	r1, [fp, #8]
   14608:	movw	r0, #52310	; 0xcc56
   1460c:	movt	r0, #1
   14610:	bl	16658 <__assert_fail@plt+0x52e0>
   14614:	str	r0, [fp, #24]
   14618:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1461c:	tst	r0, #1
   14620:	bne	1468c <__assert_fail@plt+0x3314>
   14624:	ldr	r0, [fp, #20]
   14628:	str	r0, [fp, #-52]	; 0xffffffcc
   1462c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14630:	ldrsb	r0, [r0]
   14634:	cmp	r0, #0
   14638:	beq	14688 <__assert_fail@plt+0x3310>
   1463c:	b	14640 <__assert_fail@plt+0x32c8>
   14640:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14648:	cmp	r0, r1
   1464c:	bcs	14668 <__assert_fail@plt+0x32f0>
   14650:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14654:	ldrb	r0, [r0]
   14658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1465c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14660:	add	r1, r1, r2
   14664:	strb	r0, [r1]
   14668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1466c:	add	r0, r0, #1
   14670:	str	r0, [fp, #-44]	; 0xffffffd4
   14674:	b	14678 <__assert_fail@plt+0x3300>
   14678:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1467c:	add	r0, r0, #1
   14680:	str	r0, [fp, #-52]	; 0xffffffcc
   14684:	b	1462c <__assert_fail@plt+0x32b4>
   14688:	b	1468c <__assert_fail@plt+0x3314>
   1468c:	movw	r0, #1
   14690:	strb	r0, [fp, #-57]	; 0xffffffc7
   14694:	ldr	r0, [fp, #24]
   14698:	str	r0, [fp, #-52]	; 0xffffffcc
   1469c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   146a0:	bl	11258 <strlen@plt>
   146a4:	str	r0, [fp, #-56]	; 0xffffffc8
   146a8:	b	14748 <__assert_fail@plt+0x33d0>
   146ac:	movw	r0, #1
   146b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   146b4:	movw	r0, #1
   146b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   146bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146c0:	tst	r0, #1
   146c4:	bne	146d0 <__assert_fail@plt+0x3358>
   146c8:	movw	r0, #1
   146cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   146d0:	b	146d4 <__assert_fail@plt+0x335c>
   146d4:	movw	r0, #2
   146d8:	str	r0, [fp, #8]
   146dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146e0:	tst	r0, #1
   146e4:	bne	14720 <__assert_fail@plt+0x33a8>
   146e8:	b	146ec <__assert_fail@plt+0x3374>
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f4:	cmp	r0, r1
   146f8:	bcs	14710 <__assert_fail@plt+0x3398>
   146fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14704:	add	r0, r0, r1
   14708:	movw	r1, #39	; 0x27
   1470c:	strb	r1, [r0]
   14710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14714:	add	r0, r0, #1
   14718:	str	r0, [fp, #-44]	; 0xffffffd4
   1471c:	b	14720 <__assert_fail@plt+0x33a8>
   14720:	movw	r0, #52310	; 0xcc56
   14724:	movt	r0, #1
   14728:	str	r0, [fp, #-52]	; 0xffffffcc
   1472c:	movw	r0, #1
   14730:	str	r0, [fp, #-56]	; 0xffffffc8
   14734:	b	14748 <__assert_fail@plt+0x33d0>
   14738:	movw	r0, #0
   1473c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14740:	b	14748 <__assert_fail@plt+0x33d0>
   14744:	bl	11360 <abort@plt>
   14748:	movw	r0, #0
   1474c:	str	r0, [fp, #-40]	; 0xffffffd8
   14750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14754:	cmn	r0, #1
   14758:	bne	14784 <__assert_fail@plt+0x340c>
   1475c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14760:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14764:	add	r0, r0, r1
   14768:	ldrb	r0, [r0]
   1476c:	cmp	r0, #0
   14770:	movw	r0, #0
   14774:	moveq	r0, #1
   14778:	and	r0, r0, #1
   1477c:	str	r0, [sp, #56]	; 0x38
   14780:	b	147a0 <__assert_fail@plt+0x3428>
   14784:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14788:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1478c:	cmp	r0, r1
   14790:	movw	r0, #0
   14794:	moveq	r0, #1
   14798:	and	r0, r0, #1
   1479c:	str	r0, [sp, #56]	; 0x38
   147a0:	ldr	r0, [sp, #56]	; 0x38
   147a4:	cmp	r0, #0
   147a8:	movw	r0, #0
   147ac:	movne	r0, #1
   147b0:	mvn	r1, #0
   147b4:	eor	r0, r0, r1
   147b8:	tst	r0, #1
   147bc:	beq	159ac <__assert_fail@plt+0x4634>
   147c0:	movw	r0, #0
   147c4:	strb	r0, [fp, #-65]	; 0xffffffbf
   147c8:	strb	r0, [fp, #-66]	; 0xffffffbe
   147cc:	strb	r0, [fp, #-67]	; 0xffffffbd
   147d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   147d4:	tst	r0, #1
   147d8:	beq	14884 <__assert_fail@plt+0x350c>
   147dc:	ldr	r0, [fp, #8]
   147e0:	cmp	r0, #2
   147e4:	beq	14884 <__assert_fail@plt+0x350c>
   147e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147ec:	cmp	r0, #0
   147f0:	beq	14884 <__assert_fail@plt+0x350c>
   147f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   147fc:	add	r0, r0, r1
   14800:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14804:	cmn	r1, #1
   14808:	str	r0, [sp, #52]	; 0x34
   1480c:	bne	14834 <__assert_fail@plt+0x34bc>
   14810:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14814:	movw	r1, #1
   14818:	cmp	r1, r0
   1481c:	bcs	14834 <__assert_fail@plt+0x34bc>
   14820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14824:	bl	11258 <strlen@plt>
   14828:	str	r0, [fp, #-36]	; 0xffffffdc
   1482c:	str	r0, [sp, #48]	; 0x30
   14830:	b	1483c <__assert_fail@plt+0x34c4>
   14834:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14838:	str	r0, [sp, #48]	; 0x30
   1483c:	ldr	r0, [sp, #48]	; 0x30
   14840:	ldr	r1, [sp, #52]	; 0x34
   14844:	cmp	r1, r0
   14848:	bhi	14884 <__assert_fail@plt+0x350c>
   1484c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14850:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14854:	add	r0, r0, r1
   14858:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1485c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14860:	bl	11120 <memcmp@plt>
   14864:	cmp	r0, #0
   14868:	bne	14884 <__assert_fail@plt+0x350c>
   1486c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14870:	tst	r0, #1
   14874:	beq	1487c <__assert_fail@plt+0x3504>
   14878:	b	15b2c <__assert_fail@plt+0x47b4>
   1487c:	movw	r0, #1
   14880:	strb	r0, [fp, #-65]	; 0xffffffbf
   14884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14888:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1488c:	ldrb	r0, [r0, r1]
   14890:	strb	r0, [fp, #-63]	; 0xffffffc1
   14894:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14898:	mov	r1, r0
   1489c:	cmp	r0, #126	; 0x7e
   148a0:	str	r1, [sp, #44]	; 0x2c
   148a4:	bhi	15114 <__assert_fail@plt+0x3d9c>
   148a8:	add	r0, pc, #8
   148ac:	ldr	r1, [sp, #44]	; 0x2c
   148b0:	ldr	r0, [r0, r1, lsl #2]
   148b4:	mov	pc, r0
   148b8:			; <UNDEFINED> instruction: 0x00014ab4
   148bc:	andeq	r5, r1, r4, lsl r1
   148c0:	andeq	r5, r1, r4, lsl r1
   148c4:	andeq	r5, r1, r4, lsl r1
   148c8:	andeq	r5, r1, r4, lsl r1
   148cc:	andeq	r5, r1, r4, lsl r1
   148d0:	andeq	r5, r1, r4, lsl r1
   148d4:			; <UNDEFINED> instruction: 0x00014ebc
   148d8:	andeq	r4, r1, r8, asr #29
   148dc:	strdeq	r4, [r1], -r8
   148e0:	andeq	r4, r1, r0, ror #29
   148e4:	andeq	r4, r1, r4, lsl #30
   148e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148ec:	andeq	r4, r1, ip, ror #29
   148f0:	andeq	r5, r1, r4, lsl r1
   148f4:	andeq	r5, r1, r4, lsl r1
   148f8:	andeq	r5, r1, r4, lsl r1
   148fc:	andeq	r5, r1, r4, lsl r1
   14900:	andeq	r5, r1, r4, lsl r1
   14904:	andeq	r5, r1, r4, lsl r1
   14908:	andeq	r5, r1, r4, lsl r1
   1490c:	andeq	r5, r1, r4, lsl r1
   14910:	andeq	r5, r1, r4, lsl r1
   14914:	andeq	r5, r1, r4, lsl r1
   14918:	andeq	r5, r1, r4, lsl r1
   1491c:	andeq	r5, r1, r4, lsl r1
   14920:	andeq	r5, r1, r4, lsl r1
   14924:	andeq	r5, r1, r4, lsl r1
   14928:	andeq	r5, r1, r4, lsl r1
   1492c:	andeq	r5, r1, r4, lsl r1
   14930:	andeq	r5, r1, r4, lsl r1
   14934:	andeq	r5, r1, r4, lsl r1
   14938:	andeq	r4, r1, r8, ror #31
   1493c:	strdeq	r4, [r1], -r0
   14940:	strdeq	r4, [r1], -r0
   14944:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14948:	strdeq	r4, [r1], -r0
   1494c:	andeq	r5, r1, r8, lsl #2
   14950:	strdeq	r4, [r1], -r0
   14954:	andeq	r5, r1, r0, lsl r0
   14958:	strdeq	r4, [r1], -r0
   1495c:	strdeq	r4, [r1], -r0
   14960:	strdeq	r4, [r1], -r0
   14964:	andeq	r5, r1, r8, lsl #2
   14968:	andeq	r5, r1, r8, lsl #2
   1496c:	andeq	r5, r1, r8, lsl #2
   14970:	andeq	r5, r1, r8, lsl #2
   14974:	andeq	r5, r1, r8, lsl #2
   14978:	andeq	r5, r1, r8, lsl #2
   1497c:	andeq	r5, r1, r8, lsl #2
   14980:	andeq	r5, r1, r8, lsl #2
   14984:	andeq	r5, r1, r8, lsl #2
   14988:	andeq	r5, r1, r8, lsl #2
   1498c:	andeq	r5, r1, r8, lsl #2
   14990:	andeq	r5, r1, r8, lsl #2
   14994:	andeq	r5, r1, r8, lsl #2
   14998:	andeq	r5, r1, r8, lsl #2
   1499c:	andeq	r5, r1, r8, lsl #2
   149a0:	andeq	r5, r1, r8, lsl #2
   149a4:	strdeq	r4, [r1], -r0
   149a8:	strdeq	r4, [r1], -r0
   149ac:	strdeq	r4, [r1], -r0
   149b0:	strdeq	r4, [r1], -r0
   149b4:	andeq	r4, r1, r0, asr #25
   149b8:	andeq	r5, r1, r4, lsl r1
   149bc:	andeq	r5, r1, r8, lsl #2
   149c0:	andeq	r5, r1, r8, lsl #2
   149c4:	andeq	r5, r1, r8, lsl #2
   149c8:	andeq	r5, r1, r8, lsl #2
   149cc:	andeq	r5, r1, r8, lsl #2
   149d0:	andeq	r5, r1, r8, lsl #2
   149d4:	andeq	r5, r1, r8, lsl #2
   149d8:	andeq	r5, r1, r8, lsl #2
   149dc:	andeq	r5, r1, r8, lsl #2
   149e0:	andeq	r5, r1, r8, lsl #2
   149e4:	andeq	r5, r1, r8, lsl #2
   149e8:	andeq	r5, r1, r8, lsl #2
   149ec:	andeq	r5, r1, r8, lsl #2
   149f0:	andeq	r5, r1, r8, lsl #2
   149f4:	andeq	r5, r1, r8, lsl #2
   149f8:	andeq	r5, r1, r8, lsl #2
   149fc:	andeq	r5, r1, r8, lsl #2
   14a00:	andeq	r5, r1, r8, lsl #2
   14a04:	andeq	r5, r1, r8, lsl #2
   14a08:	andeq	r5, r1, r8, lsl #2
   14a0c:	andeq	r5, r1, r8, lsl #2
   14a10:	andeq	r5, r1, r8, lsl #2
   14a14:	andeq	r5, r1, r8, lsl #2
   14a18:	andeq	r5, r1, r8, lsl #2
   14a1c:	andeq	r5, r1, r8, lsl #2
   14a20:	andeq	r5, r1, r8, lsl #2
   14a24:	strdeq	r4, [r1], -r0
   14a28:	andeq	r4, r1, r0, lsl pc
   14a2c:	andeq	r5, r1, r8, lsl #2
   14a30:	strdeq	r4, [r1], -r0
   14a34:	andeq	r5, r1, r8, lsl #2
   14a38:	strdeq	r4, [r1], -r0
   14a3c:	andeq	r5, r1, r8, lsl #2
   14a40:	andeq	r5, r1, r8, lsl #2
   14a44:	andeq	r5, r1, r8, lsl #2
   14a48:	andeq	r5, r1, r8, lsl #2
   14a4c:	andeq	r5, r1, r8, lsl #2
   14a50:	andeq	r5, r1, r8, lsl #2
   14a54:	andeq	r5, r1, r8, lsl #2
   14a58:	andeq	r5, r1, r8, lsl #2
   14a5c:	andeq	r5, r1, r8, lsl #2
   14a60:	andeq	r5, r1, r8, lsl #2
   14a64:	andeq	r5, r1, r8, lsl #2
   14a68:	andeq	r5, r1, r8, lsl #2
   14a6c:	andeq	r5, r1, r8, lsl #2
   14a70:	andeq	r5, r1, r8, lsl #2
   14a74:	andeq	r5, r1, r8, lsl #2
   14a78:	andeq	r5, r1, r8, lsl #2
   14a7c:	andeq	r5, r1, r8, lsl #2
   14a80:	andeq	r5, r1, r8, lsl #2
   14a84:	andeq	r5, r1, r8, lsl #2
   14a88:	andeq	r5, r1, r8, lsl #2
   14a8c:	andeq	r5, r1, r8, lsl #2
   14a90:	andeq	r5, r1, r8, lsl #2
   14a94:	andeq	r5, r1, r8, lsl #2
   14a98:	andeq	r5, r1, r8, lsl #2
   14a9c:	andeq	r5, r1, r8, lsl #2
   14aa0:	andeq	r5, r1, r8, lsl #2
   14aa4:	andeq	r4, r1, r0, lsr #31
   14aa8:	strdeq	r4, [r1], -r0
   14aac:	andeq	r4, r1, r0, lsr #31
   14ab0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ab4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14ab8:	tst	r0, #1
   14abc:	beq	14ca4 <__assert_fail@plt+0x392c>
   14ac0:	b	14ac4 <__assert_fail@plt+0x374c>
   14ac4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ac8:	tst	r0, #1
   14acc:	beq	14ad4 <__assert_fail@plt+0x375c>
   14ad0:	b	15b2c <__assert_fail@plt+0x47b4>
   14ad4:	movw	r0, #1
   14ad8:	strb	r0, [fp, #-66]	; 0xffffffbe
   14adc:	ldr	r0, [fp, #8]
   14ae0:	cmp	r0, #2
   14ae4:	bne	14b98 <__assert_fail@plt+0x3820>
   14ae8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14aec:	tst	r0, #1
   14af0:	bne	14b98 <__assert_fail@plt+0x3820>
   14af4:	b	14af8 <__assert_fail@plt+0x3780>
   14af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14afc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b00:	cmp	r0, r1
   14b04:	bcs	14b1c <__assert_fail@plt+0x37a4>
   14b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b10:	add	r0, r0, r1
   14b14:	movw	r1, #39	; 0x27
   14b18:	strb	r1, [r0]
   14b1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b20:	add	r0, r0, #1
   14b24:	str	r0, [fp, #-44]	; 0xffffffd4
   14b28:	b	14b2c <__assert_fail@plt+0x37b4>
   14b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b34:	cmp	r0, r1
   14b38:	bcs	14b50 <__assert_fail@plt+0x37d8>
   14b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b44:	add	r0, r0, r1
   14b48:	movw	r1, #36	; 0x24
   14b4c:	strb	r1, [r0]
   14b50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b54:	add	r0, r0, #1
   14b58:	str	r0, [fp, #-44]	; 0xffffffd4
   14b5c:	b	14b60 <__assert_fail@plt+0x37e8>
   14b60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b68:	cmp	r0, r1
   14b6c:	bcs	14b84 <__assert_fail@plt+0x380c>
   14b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b78:	add	r0, r0, r1
   14b7c:	movw	r1, #39	; 0x27
   14b80:	strb	r1, [r0]
   14b84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b88:	add	r0, r0, #1
   14b8c:	str	r0, [fp, #-44]	; 0xffffffd4
   14b90:	movw	r0, #1
   14b94:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b98:	b	14b9c <__assert_fail@plt+0x3824>
   14b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ba4:	cmp	r0, r1
   14ba8:	bcs	14bc0 <__assert_fail@plt+0x3848>
   14bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14bb4:	add	r0, r0, r1
   14bb8:	movw	r1, #92	; 0x5c
   14bbc:	strb	r1, [r0]
   14bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bc4:	add	r0, r0, #1
   14bc8:	str	r0, [fp, #-44]	; 0xffffffd4
   14bcc:	b	14bd0 <__assert_fail@plt+0x3858>
   14bd0:	ldr	r0, [fp, #8]
   14bd4:	cmp	r0, #2
   14bd8:	beq	14c98 <__assert_fail@plt+0x3920>
   14bdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14be0:	add	r0, r0, #1
   14be4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14be8:	cmp	r0, r1
   14bec:	bcs	14c98 <__assert_fail@plt+0x3920>
   14bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bf8:	add	r1, r1, #1
   14bfc:	add	r0, r0, r1
   14c00:	ldrb	r0, [r0]
   14c04:	movw	r1, #48	; 0x30
   14c08:	cmp	r1, r0
   14c0c:	bgt	14c98 <__assert_fail@plt+0x3920>
   14c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c18:	add	r1, r1, #1
   14c1c:	add	r0, r0, r1
   14c20:	ldrb	r0, [r0]
   14c24:	cmp	r0, #57	; 0x39
   14c28:	bgt	14c98 <__assert_fail@plt+0x3920>
   14c2c:	b	14c30 <__assert_fail@plt+0x38b8>
   14c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c38:	cmp	r0, r1
   14c3c:	bcs	14c54 <__assert_fail@plt+0x38dc>
   14c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c48:	add	r0, r0, r1
   14c4c:	movw	r1, #48	; 0x30
   14c50:	strb	r1, [r0]
   14c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c58:	add	r0, r0, #1
   14c5c:	str	r0, [fp, #-44]	; 0xffffffd4
   14c60:	b	14c64 <__assert_fail@plt+0x38ec>
   14c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c6c:	cmp	r0, r1
   14c70:	bcs	14c88 <__assert_fail@plt+0x3910>
   14c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c7c:	add	r0, r0, r1
   14c80:	movw	r1, #48	; 0x30
   14c84:	strb	r1, [r0]
   14c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c8c:	add	r0, r0, #1
   14c90:	str	r0, [fp, #-44]	; 0xffffffd4
   14c94:	b	14c98 <__assert_fail@plt+0x3920>
   14c98:	movw	r0, #48	; 0x30
   14c9c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14ca0:	b	14cbc <__assert_fail@plt+0x3944>
   14ca4:	ldr	r0, [fp, #12]
   14ca8:	and	r0, r0, #1
   14cac:	cmp	r0, #0
   14cb0:	beq	14cb8 <__assert_fail@plt+0x3940>
   14cb4:	b	1599c <__assert_fail@plt+0x4624>
   14cb8:	b	14cbc <__assert_fail@plt+0x3944>
   14cbc:	b	15738 <__assert_fail@plt+0x43c0>
   14cc0:	ldr	r0, [fp, #8]
   14cc4:	cmp	r0, #2
   14cc8:	str	r0, [sp, #40]	; 0x28
   14ccc:	beq	14ce4 <__assert_fail@plt+0x396c>
   14cd0:	b	14cd4 <__assert_fail@plt+0x395c>
   14cd4:	ldr	r0, [sp, #40]	; 0x28
   14cd8:	cmp	r0, #5
   14cdc:	beq	14cf8 <__assert_fail@plt+0x3980>
   14ce0:	b	14eb4 <__assert_fail@plt+0x3b3c>
   14ce4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ce8:	tst	r0, #1
   14cec:	beq	14cf4 <__assert_fail@plt+0x397c>
   14cf0:	b	15b2c <__assert_fail@plt+0x47b4>
   14cf4:	b	14eb8 <__assert_fail@plt+0x3b40>
   14cf8:	ldr	r0, [fp, #12]
   14cfc:	and	r0, r0, #4
   14d00:	cmp	r0, #0
   14d04:	beq	14eb0 <__assert_fail@plt+0x3b38>
   14d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d0c:	add	r0, r0, #2
   14d10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d14:	cmp	r0, r1
   14d18:	bcs	14eb0 <__assert_fail@plt+0x3b38>
   14d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d24:	add	r1, r1, #1
   14d28:	add	r0, r0, r1
   14d2c:	ldrb	r0, [r0]
   14d30:	cmp	r0, #63	; 0x3f
   14d34:	bne	14eb0 <__assert_fail@plt+0x3b38>
   14d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d40:	add	r0, r0, r1
   14d44:	ldrb	r0, [r0, #2]
   14d48:	mov	r1, r0
   14d4c:	cmp	r0, #33	; 0x21
   14d50:	str	r1, [sp, #36]	; 0x24
   14d54:	beq	14da4 <__assert_fail@plt+0x3a2c>
   14d58:	b	14d5c <__assert_fail@plt+0x39e4>
   14d5c:	ldr	r0, [sp, #36]	; 0x24
   14d60:	sub	r1, r0, #39	; 0x27
   14d64:	cmp	r1, #3
   14d68:	bcc	14da4 <__assert_fail@plt+0x3a2c>
   14d6c:	b	14d70 <__assert_fail@plt+0x39f8>
   14d70:	ldr	r0, [sp, #36]	; 0x24
   14d74:	cmp	r0, #45	; 0x2d
   14d78:	beq	14da4 <__assert_fail@plt+0x3a2c>
   14d7c:	b	14d80 <__assert_fail@plt+0x3a08>
   14d80:	ldr	r0, [sp, #36]	; 0x24
   14d84:	cmp	r0, #47	; 0x2f
   14d88:	beq	14da4 <__assert_fail@plt+0x3a2c>
   14d8c:	b	14d90 <__assert_fail@plt+0x3a18>
   14d90:	ldr	r0, [sp, #36]	; 0x24
   14d94:	sub	r1, r0, #60	; 0x3c
   14d98:	cmp	r1, #2
   14d9c:	bhi	14ea8 <__assert_fail@plt+0x3b30>
   14da0:	b	14da4 <__assert_fail@plt+0x3a2c>
   14da4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14da8:	tst	r0, #1
   14dac:	beq	14db4 <__assert_fail@plt+0x3a3c>
   14db0:	b	15b2c <__assert_fail@plt+0x47b4>
   14db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14db8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14dbc:	add	r1, r1, #2
   14dc0:	add	r0, r0, r1
   14dc4:	ldrb	r0, [r0]
   14dc8:	strb	r0, [fp, #-63]	; 0xffffffc1
   14dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dd0:	add	r0, r0, #2
   14dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   14dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14de0:	cmp	r0, r1
   14de4:	bcs	14dfc <__assert_fail@plt+0x3a84>
   14de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14df0:	add	r0, r0, r1
   14df4:	movw	r1, #63	; 0x3f
   14df8:	strb	r1, [r0]
   14dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e00:	add	r0, r0, #1
   14e04:	str	r0, [fp, #-44]	; 0xffffffd4
   14e08:	b	14e0c <__assert_fail@plt+0x3a94>
   14e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e14:	cmp	r0, r1
   14e18:	bcs	14e30 <__assert_fail@plt+0x3ab8>
   14e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e24:	add	r0, r0, r1
   14e28:	movw	r1, #34	; 0x22
   14e2c:	strb	r1, [r0]
   14e30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e34:	add	r0, r0, #1
   14e38:	str	r0, [fp, #-44]	; 0xffffffd4
   14e3c:	b	14e40 <__assert_fail@plt+0x3ac8>
   14e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e48:	cmp	r0, r1
   14e4c:	bcs	14e64 <__assert_fail@plt+0x3aec>
   14e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e58:	add	r0, r0, r1
   14e5c:	movw	r1, #34	; 0x22
   14e60:	strb	r1, [r0]
   14e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e68:	add	r0, r0, #1
   14e6c:	str	r0, [fp, #-44]	; 0xffffffd4
   14e70:	b	14e74 <__assert_fail@plt+0x3afc>
   14e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e7c:	cmp	r0, r1
   14e80:	bcs	14e98 <__assert_fail@plt+0x3b20>
   14e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e8c:	add	r0, r0, r1
   14e90:	movw	r1, #63	; 0x3f
   14e94:	strb	r1, [r0]
   14e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e9c:	add	r0, r0, #1
   14ea0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ea4:	b	14eac <__assert_fail@plt+0x3b34>
   14ea8:	b	14eac <__assert_fail@plt+0x3b34>
   14eac:	b	14eb0 <__assert_fail@plt+0x3b38>
   14eb0:	b	14eb8 <__assert_fail@plt+0x3b40>
   14eb4:	b	14eb8 <__assert_fail@plt+0x3b40>
   14eb8:	b	15738 <__assert_fail@plt+0x43c0>
   14ebc:	movw	r0, #97	; 0x61
   14ec0:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ec4:	b	14f84 <__assert_fail@plt+0x3c0c>
   14ec8:	movw	r0, #98	; 0x62
   14ecc:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ed0:	b	14f84 <__assert_fail@plt+0x3c0c>
   14ed4:	movw	r0, #102	; 0x66
   14ed8:	strb	r0, [fp, #-64]	; 0xffffffc0
   14edc:	b	14f84 <__assert_fail@plt+0x3c0c>
   14ee0:	movw	r0, #110	; 0x6e
   14ee4:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ee8:	b	14f64 <__assert_fail@plt+0x3bec>
   14eec:	movw	r0, #114	; 0x72
   14ef0:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ef4:	b	14f64 <__assert_fail@plt+0x3bec>
   14ef8:	movw	r0, #116	; 0x74
   14efc:	strb	r0, [fp, #-64]	; 0xffffffc0
   14f00:	b	14f64 <__assert_fail@plt+0x3bec>
   14f04:	movw	r0, #118	; 0x76
   14f08:	strb	r0, [fp, #-64]	; 0xffffffc0
   14f0c:	b	14f84 <__assert_fail@plt+0x3c0c>
   14f10:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14f14:	strb	r0, [fp, #-64]	; 0xffffffc0
   14f18:	ldr	r0, [fp, #8]
   14f1c:	cmp	r0, #2
   14f20:	bne	14f38 <__assert_fail@plt+0x3bc0>
   14f24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f28:	tst	r0, #1
   14f2c:	beq	14f34 <__assert_fail@plt+0x3bbc>
   14f30:	b	15b2c <__assert_fail@plt+0x47b4>
   14f34:	b	158c0 <__assert_fail@plt+0x4548>
   14f38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14f3c:	tst	r0, #1
   14f40:	beq	14f60 <__assert_fail@plt+0x3be8>
   14f44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f48:	tst	r0, #1
   14f4c:	beq	14f60 <__assert_fail@plt+0x3be8>
   14f50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14f54:	cmp	r0, #0
   14f58:	beq	14f60 <__assert_fail@plt+0x3be8>
   14f5c:	b	158c0 <__assert_fail@plt+0x4548>
   14f60:	b	14f64 <__assert_fail@plt+0x3bec>
   14f64:	ldr	r0, [fp, #8]
   14f68:	cmp	r0, #2
   14f6c:	bne	14f80 <__assert_fail@plt+0x3c08>
   14f70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f74:	tst	r0, #1
   14f78:	beq	14f80 <__assert_fail@plt+0x3c08>
   14f7c:	b	15b2c <__assert_fail@plt+0x47b4>
   14f80:	b	14f84 <__assert_fail@plt+0x3c0c>
   14f84:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14f88:	tst	r0, #1
   14f8c:	beq	14f9c <__assert_fail@plt+0x3c24>
   14f90:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14f94:	strb	r0, [fp, #-63]	; 0xffffffc1
   14f98:	b	157ac <__assert_fail@plt+0x4434>
   14f9c:	b	15738 <__assert_fail@plt+0x43c0>
   14fa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14fa4:	cmn	r0, #1
   14fa8:	bne	14fc0 <__assert_fail@plt+0x3c48>
   14fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fb0:	ldrb	r0, [r0, #1]
   14fb4:	cmp	r0, #0
   14fb8:	beq	14fd0 <__assert_fail@plt+0x3c58>
   14fbc:	b	14fcc <__assert_fail@plt+0x3c54>
   14fc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14fc4:	cmp	r0, #1
   14fc8:	beq	14fd0 <__assert_fail@plt+0x3c58>
   14fcc:	b	15738 <__assert_fail@plt+0x43c0>
   14fd0:	b	14fd4 <__assert_fail@plt+0x3c5c>
   14fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fd8:	cmp	r0, #0
   14fdc:	beq	14fe4 <__assert_fail@plt+0x3c6c>
   14fe0:	b	15738 <__assert_fail@plt+0x43c0>
   14fe4:	b	14fe8 <__assert_fail@plt+0x3c70>
   14fe8:	movw	r0, #1
   14fec:	strb	r0, [fp, #-67]	; 0xffffffbd
   14ff0:	ldr	r0, [fp, #8]
   14ff4:	cmp	r0, #2
   14ff8:	bne	1500c <__assert_fail@plt+0x3c94>
   14ffc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15000:	tst	r0, #1
   15004:	beq	1500c <__assert_fail@plt+0x3c94>
   15008:	b	15b2c <__assert_fail@plt+0x47b4>
   1500c:	b	15738 <__assert_fail@plt+0x43c0>
   15010:	movw	r0, #1
   15014:	strb	r0, [fp, #-61]	; 0xffffffc3
   15018:	strb	r0, [fp, #-67]	; 0xffffffbd
   1501c:	ldr	r0, [fp, #8]
   15020:	cmp	r0, #2
   15024:	bne	15104 <__assert_fail@plt+0x3d8c>
   15028:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1502c:	tst	r0, #1
   15030:	beq	15038 <__assert_fail@plt+0x3cc0>
   15034:	b	15b2c <__assert_fail@plt+0x47b4>
   15038:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1503c:	cmp	r0, #0
   15040:	beq	15060 <__assert_fail@plt+0x3ce8>
   15044:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15048:	cmp	r0, #0
   1504c:	bne	15060 <__assert_fail@plt+0x3ce8>
   15050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15054:	str	r0, [fp, #-48]	; 0xffffffd0
   15058:	movw	r0, #0
   1505c:	str	r0, [fp, #-28]	; 0xffffffe4
   15060:	b	15064 <__assert_fail@plt+0x3cec>
   15064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1506c:	cmp	r0, r1
   15070:	bcs	15088 <__assert_fail@plt+0x3d10>
   15074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15078:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1507c:	add	r0, r0, r1
   15080:	movw	r1, #39	; 0x27
   15084:	strb	r1, [r0]
   15088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1508c:	add	r0, r0, #1
   15090:	str	r0, [fp, #-44]	; 0xffffffd4
   15094:	b	15098 <__assert_fail@plt+0x3d20>
   15098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1509c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150a0:	cmp	r0, r1
   150a4:	bcs	150bc <__assert_fail@plt+0x3d44>
   150a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150b0:	add	r0, r0, r1
   150b4:	movw	r1, #92	; 0x5c
   150b8:	strb	r1, [r0]
   150bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150c0:	add	r0, r0, #1
   150c4:	str	r0, [fp, #-44]	; 0xffffffd4
   150c8:	b	150cc <__assert_fail@plt+0x3d54>
   150cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150d4:	cmp	r0, r1
   150d8:	bcs	150f0 <__assert_fail@plt+0x3d78>
   150dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150e4:	add	r0, r0, r1
   150e8:	movw	r1, #39	; 0x27
   150ec:	strb	r1, [r0]
   150f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150f4:	add	r0, r0, #1
   150f8:	str	r0, [fp, #-44]	; 0xffffffd4
   150fc:	movw	r0, #0
   15100:	strb	r0, [fp, #-60]	; 0xffffffc4
   15104:	b	15738 <__assert_fail@plt+0x43c0>
   15108:	movw	r0, #1
   1510c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15110:	b	15738 <__assert_fail@plt+0x43c0>
   15114:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15118:	tst	r0, #1
   1511c:	beq	15160 <__assert_fail@plt+0x3de8>
   15120:	mov	r0, #1
   15124:	str	r0, [fp, #-72]	; 0xffffffb8
   15128:	bl	11228 <__ctype_b_loc@plt>
   1512c:	ldr	r0, [r0]
   15130:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15134:	mov	r1, lr
   15138:	add	r0, r0, lr, lsl #1
   1513c:	ldrh	r0, [r0]
   15140:	and	r0, r0, #16384	; 0x4000
   15144:	cmp	r0, #0
   15148:	movw	r0, #0
   1514c:	movne	r0, #1
   15150:	and	r0, r0, #1
   15154:	strb	r0, [fp, #-73]	; 0xffffffb7
   15158:	str	r1, [sp, #32]
   1515c:	b	153ec <__assert_fail@plt+0x4074>
   15160:	sub	r0, fp, #84	; 0x54
   15164:	movw	r1, #0
   15168:	and	r1, r1, #255	; 0xff
   1516c:	movw	r2, #8
   15170:	bl	11294 <memset@plt>
   15174:	movw	r0, #0
   15178:	str	r0, [fp, #-72]	; 0xffffffb8
   1517c:	movw	r0, #1
   15180:	strb	r0, [fp, #-73]	; 0xffffffb7
   15184:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15188:	cmn	r0, #1
   1518c:	bne	1519c <__assert_fail@plt+0x3e24>
   15190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15194:	bl	11258 <strlen@plt>
   15198:	str	r0, [fp, #-36]	; 0xffffffdc
   1519c:	b	151a0 <__assert_fail@plt+0x3e28>
   151a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   151ac:	add	r1, r1, r2
   151b0:	add	r1, r0, r1
   151b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   151bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   151c0:	add	r2, r2, r3
   151c4:	sub	r2, r0, r2
   151c8:	sub	r0, fp, #88	; 0x58
   151cc:	sub	r3, fp, #84	; 0x54
   151d0:	bl	1aae4 <__assert_fail@plt+0x976c>
   151d4:	str	r0, [sp, #92]	; 0x5c
   151d8:	ldr	r0, [sp, #92]	; 0x5c
   151dc:	cmp	r0, #0
   151e0:	bne	151e8 <__assert_fail@plt+0x3e70>
   151e4:	b	153e8 <__assert_fail@plt+0x4070>
   151e8:	ldr	r0, [sp, #92]	; 0x5c
   151ec:	cmn	r0, #1
   151f0:	bne	15200 <__assert_fail@plt+0x3e88>
   151f4:	movw	r0, #0
   151f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   151fc:	b	153e8 <__assert_fail@plt+0x4070>
   15200:	ldr	r0, [sp, #92]	; 0x5c
   15204:	cmn	r0, #2
   15208:	bne	1527c <__assert_fail@plt+0x3f04>
   1520c:	movw	r0, #0
   15210:	strb	r0, [fp, #-73]	; 0xffffffb7
   15214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15218:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1521c:	add	r0, r0, r1
   15220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15224:	cmp	r0, r1
   15228:	movw	r0, #0
   1522c:	str	r0, [sp, #28]
   15230:	bcs	1525c <__assert_fail@plt+0x3ee4>
   15234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15238:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1523c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15240:	add	r1, r1, r2
   15244:	add	r0, r0, r1
   15248:	ldrb	r0, [r0]
   1524c:	cmp	r0, #0
   15250:	movw	r0, #0
   15254:	movne	r0, #1
   15258:	str	r0, [sp, #28]
   1525c:	ldr	r0, [sp, #28]
   15260:	tst	r0, #1
   15264:	beq	15278 <__assert_fail@plt+0x3f00>
   15268:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1526c:	add	r0, r0, #1
   15270:	str	r0, [fp, #-72]	; 0xffffffb8
   15274:	b	15214 <__assert_fail@plt+0x3e9c>
   15278:	b	153e8 <__assert_fail@plt+0x4070>
   1527c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15280:	tst	r0, #1
   15284:	beq	15390 <__assert_fail@plt+0x4018>
   15288:	ldr	r0, [fp, #8]
   1528c:	cmp	r0, #2
   15290:	bne	15390 <__assert_fail@plt+0x4018>
   15294:	movw	r0, #1
   15298:	str	r0, [sp, #88]	; 0x58
   1529c:	ldr	r0, [sp, #88]	; 0x58
   152a0:	ldr	r1, [sp, #92]	; 0x5c
   152a4:	cmp	r0, r1
   152a8:	bcs	1538c <__assert_fail@plt+0x4014>
   152ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   152b8:	add	r1, r1, r2
   152bc:	ldr	r2, [sp, #88]	; 0x58
   152c0:	add	r1, r1, r2
   152c4:	ldrb	r0, [r0, r1]
   152c8:	sub	r0, r0, #91	; 0x5b
   152cc:	cmp	r0, #33	; 0x21
   152d0:	str	r0, [sp, #24]
   152d4:	bhi	15374 <__assert_fail@plt+0x3ffc>
   152d8:	add	r0, pc, #8
   152dc:	ldr	r1, [sp, #24]
   152e0:	ldr	r0, [r0, r1, lsl #2]
   152e4:	mov	pc, r0
   152e8:	andeq	r5, r1, r0, ror r3
   152ec:	andeq	r5, r1, r0, ror r3
   152f0:	andeq	r5, r1, r4, ror r3
   152f4:	andeq	r5, r1, r0, ror r3
   152f8:	andeq	r5, r1, r4, ror r3
   152fc:	andeq	r5, r1, r0, ror r3
   15300:	andeq	r5, r1, r4, ror r3
   15304:	andeq	r5, r1, r4, ror r3
   15308:	andeq	r5, r1, r4, ror r3
   1530c:	andeq	r5, r1, r4, ror r3
   15310:	andeq	r5, r1, r4, ror r3
   15314:	andeq	r5, r1, r4, ror r3
   15318:	andeq	r5, r1, r4, ror r3
   1531c:	andeq	r5, r1, r4, ror r3
   15320:	andeq	r5, r1, r4, ror r3
   15324:	andeq	r5, r1, r4, ror r3
   15328:	andeq	r5, r1, r4, ror r3
   1532c:	andeq	r5, r1, r4, ror r3
   15330:	andeq	r5, r1, r4, ror r3
   15334:	andeq	r5, r1, r4, ror r3
   15338:	andeq	r5, r1, r4, ror r3
   1533c:	andeq	r5, r1, r4, ror r3
   15340:	andeq	r5, r1, r4, ror r3
   15344:	andeq	r5, r1, r4, ror r3
   15348:	andeq	r5, r1, r4, ror r3
   1534c:	andeq	r5, r1, r4, ror r3
   15350:	andeq	r5, r1, r4, ror r3
   15354:	andeq	r5, r1, r4, ror r3
   15358:	andeq	r5, r1, r4, ror r3
   1535c:	andeq	r5, r1, r4, ror r3
   15360:	andeq	r5, r1, r4, ror r3
   15364:	andeq	r5, r1, r4, ror r3
   15368:	andeq	r5, r1, r4, ror r3
   1536c:	andeq	r5, r1, r0, ror r3
   15370:	b	15b2c <__assert_fail@plt+0x47b4>
   15374:	b	15378 <__assert_fail@plt+0x4000>
   15378:	b	1537c <__assert_fail@plt+0x4004>
   1537c:	ldr	r0, [sp, #88]	; 0x58
   15380:	add	r0, r0, #1
   15384:	str	r0, [sp, #88]	; 0x58
   15388:	b	1529c <__assert_fail@plt+0x3f24>
   1538c:	b	15390 <__assert_fail@plt+0x4018>
   15390:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15394:	bl	11168 <iswprint@plt>
   15398:	cmp	r0, #0
   1539c:	bne	153a8 <__assert_fail@plt+0x4030>
   153a0:	movw	r0, #0
   153a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   153a8:	ldr	r0, [sp, #92]	; 0x5c
   153ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   153b0:	add	r0, r1, r0
   153b4:	str	r0, [fp, #-72]	; 0xffffffb8
   153b8:	b	153bc <__assert_fail@plt+0x4044>
   153bc:	b	153c0 <__assert_fail@plt+0x4048>
   153c0:	b	153c4 <__assert_fail@plt+0x404c>
   153c4:	sub	r0, fp, #84	; 0x54
   153c8:	bl	11108 <mbsinit@plt>
   153cc:	cmp	r0, #0
   153d0:	movw	r0, #0
   153d4:	movne	r0, #1
   153d8:	mvn	lr, #0
   153dc:	eor	r0, r0, lr
   153e0:	tst	r0, #1
   153e4:	bne	151a0 <__assert_fail@plt+0x3e28>
   153e8:	b	153ec <__assert_fail@plt+0x4074>
   153ec:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   153f0:	and	r0, r0, #1
   153f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   153f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   153fc:	movw	r1, #1
   15400:	cmp	r1, r0
   15404:	bcc	15420 <__assert_fail@plt+0x40a8>
   15408:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1540c:	tst	r0, #1
   15410:	beq	15734 <__assert_fail@plt+0x43bc>
   15414:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15418:	tst	r0, #1
   1541c:	bne	15734 <__assert_fail@plt+0x43bc>
   15420:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15424:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15428:	add	r0, r0, r1
   1542c:	str	r0, [sp, #84]	; 0x54
   15430:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15434:	tst	r0, #1
   15438:	beq	155e8 <__assert_fail@plt+0x4270>
   1543c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15440:	tst	r0, #1
   15444:	bne	155e8 <__assert_fail@plt+0x4270>
   15448:	b	1544c <__assert_fail@plt+0x40d4>
   1544c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15450:	tst	r0, #1
   15454:	beq	1545c <__assert_fail@plt+0x40e4>
   15458:	b	15b2c <__assert_fail@plt+0x47b4>
   1545c:	movw	r0, #1
   15460:	strb	r0, [fp, #-66]	; 0xffffffbe
   15464:	ldr	r0, [fp, #8]
   15468:	cmp	r0, #2
   1546c:	bne	15520 <__assert_fail@plt+0x41a8>
   15470:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15474:	tst	r0, #1
   15478:	bne	15520 <__assert_fail@plt+0x41a8>
   1547c:	b	15480 <__assert_fail@plt+0x4108>
   15480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15488:	cmp	r0, r1
   1548c:	bcs	154a4 <__assert_fail@plt+0x412c>
   15490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15498:	add	r0, r0, r1
   1549c:	movw	r1, #39	; 0x27
   154a0:	strb	r1, [r0]
   154a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154a8:	add	r0, r0, #1
   154ac:	str	r0, [fp, #-44]	; 0xffffffd4
   154b0:	b	154b4 <__assert_fail@plt+0x413c>
   154b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154bc:	cmp	r0, r1
   154c0:	bcs	154d8 <__assert_fail@plt+0x4160>
   154c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154cc:	add	r0, r0, r1
   154d0:	movw	r1, #36	; 0x24
   154d4:	strb	r1, [r0]
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	add	r0, r0, #1
   154e0:	str	r0, [fp, #-44]	; 0xffffffd4
   154e4:	b	154e8 <__assert_fail@plt+0x4170>
   154e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154f0:	cmp	r0, r1
   154f4:	bcs	1550c <__assert_fail@plt+0x4194>
   154f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15500:	add	r0, r0, r1
   15504:	movw	r1, #39	; 0x27
   15508:	strb	r1, [r0]
   1550c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15510:	add	r0, r0, #1
   15514:	str	r0, [fp, #-44]	; 0xffffffd4
   15518:	movw	r0, #1
   1551c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15520:	b	15524 <__assert_fail@plt+0x41ac>
   15524:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15528:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1552c:	cmp	r0, r1
   15530:	bcs	15548 <__assert_fail@plt+0x41d0>
   15534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15538:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1553c:	add	r0, r0, r1
   15540:	movw	r1, #92	; 0x5c
   15544:	strb	r1, [r0]
   15548:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1554c:	add	r0, r0, #1
   15550:	str	r0, [fp, #-44]	; 0xffffffd4
   15554:	b	15558 <__assert_fail@plt+0x41e0>
   15558:	b	1555c <__assert_fail@plt+0x41e4>
   1555c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15560:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15564:	cmp	r0, r1
   15568:	bcs	15588 <__assert_fail@plt+0x4210>
   1556c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15570:	asr	r0, r0, #6
   15574:	add	r0, r0, #48	; 0x30
   15578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1557c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15580:	add	r1, r1, r2
   15584:	strb	r0, [r1]
   15588:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1558c:	add	r0, r0, #1
   15590:	str	r0, [fp, #-44]	; 0xffffffd4
   15594:	b	15598 <__assert_fail@plt+0x4220>
   15598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1559c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155a0:	cmp	r0, r1
   155a4:	bcs	155c8 <__assert_fail@plt+0x4250>
   155a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   155ac:	asr	r0, r0, #3
   155b0:	and	r0, r0, #7
   155b4:	add	r0, r0, #48	; 0x30
   155b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   155c0:	add	r1, r1, r2
   155c4:	strb	r0, [r1]
   155c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155cc:	add	r0, r0, #1
   155d0:	str	r0, [fp, #-44]	; 0xffffffd4
   155d4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   155d8:	and	r0, r0, #7
   155dc:	add	r0, r0, #48	; 0x30
   155e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   155e4:	b	15634 <__assert_fail@plt+0x42bc>
   155e8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   155ec:	tst	r0, #1
   155f0:	beq	15630 <__assert_fail@plt+0x42b8>
   155f4:	b	155f8 <__assert_fail@plt+0x4280>
   155f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15600:	cmp	r0, r1
   15604:	bcs	1561c <__assert_fail@plt+0x42a4>
   15608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1560c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15610:	add	r0, r0, r1
   15614:	movw	r1, #92	; 0x5c
   15618:	strb	r1, [r0]
   1561c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15620:	add	r0, r0, #1
   15624:	str	r0, [fp, #-44]	; 0xffffffd4
   15628:	movw	r0, #0
   1562c:	strb	r0, [fp, #-65]	; 0xffffffbf
   15630:	b	15634 <__assert_fail@plt+0x42bc>
   15634:	ldr	r0, [sp, #84]	; 0x54
   15638:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1563c:	add	r1, r1, #1
   15640:	cmp	r0, r1
   15644:	bhi	1564c <__assert_fail@plt+0x42d4>
   15648:	b	15730 <__assert_fail@plt+0x43b8>
   1564c:	b	15650 <__assert_fail@plt+0x42d8>
   15650:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15654:	tst	r0, #1
   15658:	beq	156d8 <__assert_fail@plt+0x4360>
   1565c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15660:	tst	r0, #1
   15664:	bne	156d8 <__assert_fail@plt+0x4360>
   15668:	b	1566c <__assert_fail@plt+0x42f4>
   1566c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15674:	cmp	r0, r1
   15678:	bcs	15690 <__assert_fail@plt+0x4318>
   1567c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15684:	add	r0, r0, r1
   15688:	movw	r1, #39	; 0x27
   1568c:	strb	r1, [r0]
   15690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15694:	add	r0, r0, #1
   15698:	str	r0, [fp, #-44]	; 0xffffffd4
   1569c:	b	156a0 <__assert_fail@plt+0x4328>
   156a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156a8:	cmp	r0, r1
   156ac:	bcs	156c4 <__assert_fail@plt+0x434c>
   156b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156b8:	add	r0, r0, r1
   156bc:	movw	r1, #39	; 0x27
   156c0:	strb	r1, [r0]
   156c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156c8:	add	r0, r0, #1
   156cc:	str	r0, [fp, #-44]	; 0xffffffd4
   156d0:	movw	r0, #0
   156d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   156d8:	b	156dc <__assert_fail@plt+0x4364>
   156dc:	b	156e0 <__assert_fail@plt+0x4368>
   156e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156e8:	cmp	r0, r1
   156ec:	bcs	15704 <__assert_fail@plt+0x438c>
   156f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   156f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   156fc:	add	r1, r1, r2
   15700:	strb	r0, [r1]
   15704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15708:	add	r0, r0, #1
   1570c:	str	r0, [fp, #-44]	; 0xffffffd4
   15710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15714:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15718:	add	r1, r1, #1
   1571c:	str	r1, [fp, #-40]	; 0xffffffd8
   15720:	add	r0, r0, r1
   15724:	ldrb	r0, [r0]
   15728:	strb	r0, [fp, #-63]	; 0xffffffc1
   1572c:	b	15430 <__assert_fail@plt+0x40b8>
   15730:	b	158c0 <__assert_fail@plt+0x4548>
   15734:	b	15738 <__assert_fail@plt+0x43c0>
   15738:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1573c:	tst	r0, #1
   15740:	beq	15750 <__assert_fail@plt+0x43d8>
   15744:	ldr	r0, [fp, #8]
   15748:	cmp	r0, #2
   1574c:	bne	1575c <__assert_fail@plt+0x43e4>
   15750:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15754:	tst	r0, #1
   15758:	beq	15798 <__assert_fail@plt+0x4420>
   1575c:	ldr	r0, [fp, #16]
   15760:	movw	r1, #0
   15764:	cmp	r0, r1
   15768:	beq	15798 <__assert_fail@plt+0x4420>
   1576c:	ldr	r0, [fp, #16]
   15770:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15774:	lsr	r1, r1, #5
   15778:	add	r0, r0, r1, lsl #2
   1577c:	ldr	r0, [r0]
   15780:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15784:	and	r1, r1, #31
   15788:	lsr	r0, r0, r1
   1578c:	and	r0, r0, #1
   15790:	cmp	r0, #0
   15794:	bne	157a8 <__assert_fail@plt+0x4430>
   15798:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1579c:	tst	r0, #1
   157a0:	bne	157a8 <__assert_fail@plt+0x4430>
   157a4:	b	158c0 <__assert_fail@plt+0x4548>
   157a8:	b	157ac <__assert_fail@plt+0x4434>
   157ac:	b	157b0 <__assert_fail@plt+0x4438>
   157b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   157b4:	tst	r0, #1
   157b8:	beq	157c0 <__assert_fail@plt+0x4448>
   157bc:	b	15b2c <__assert_fail@plt+0x47b4>
   157c0:	movw	r0, #1
   157c4:	strb	r0, [fp, #-66]	; 0xffffffbe
   157c8:	ldr	r0, [fp, #8]
   157cc:	cmp	r0, #2
   157d0:	bne	15884 <__assert_fail@plt+0x450c>
   157d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   157d8:	tst	r0, #1
   157dc:	bne	15884 <__assert_fail@plt+0x450c>
   157e0:	b	157e4 <__assert_fail@plt+0x446c>
   157e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157ec:	cmp	r0, r1
   157f0:	bcs	15808 <__assert_fail@plt+0x4490>
   157f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157fc:	add	r0, r0, r1
   15800:	movw	r1, #39	; 0x27
   15804:	strb	r1, [r0]
   15808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1580c:	add	r0, r0, #1
   15810:	str	r0, [fp, #-44]	; 0xffffffd4
   15814:	b	15818 <__assert_fail@plt+0x44a0>
   15818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1581c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15820:	cmp	r0, r1
   15824:	bcs	1583c <__assert_fail@plt+0x44c4>
   15828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1582c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15830:	add	r0, r0, r1
   15834:	movw	r1, #36	; 0x24
   15838:	strb	r1, [r0]
   1583c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15840:	add	r0, r0, #1
   15844:	str	r0, [fp, #-44]	; 0xffffffd4
   15848:	b	1584c <__assert_fail@plt+0x44d4>
   1584c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15854:	cmp	r0, r1
   15858:	bcs	15870 <__assert_fail@plt+0x44f8>
   1585c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15864:	add	r0, r0, r1
   15868:	movw	r1, #39	; 0x27
   1586c:	strb	r1, [r0]
   15870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15874:	add	r0, r0, #1
   15878:	str	r0, [fp, #-44]	; 0xffffffd4
   1587c:	movw	r0, #1
   15880:	strb	r0, [fp, #-60]	; 0xffffffc4
   15884:	b	15888 <__assert_fail@plt+0x4510>
   15888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1588c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15890:	cmp	r0, r1
   15894:	bcs	158ac <__assert_fail@plt+0x4534>
   15898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1589c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158a0:	add	r0, r0, r1
   158a4:	movw	r1, #92	; 0x5c
   158a8:	strb	r1, [r0]
   158ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b0:	add	r0, r0, #1
   158b4:	str	r0, [fp, #-44]	; 0xffffffd4
   158b8:	b	158bc <__assert_fail@plt+0x4544>
   158bc:	b	158c0 <__assert_fail@plt+0x4548>
   158c0:	b	158c4 <__assert_fail@plt+0x454c>
   158c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   158c8:	tst	r0, #1
   158cc:	beq	1594c <__assert_fail@plt+0x45d4>
   158d0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   158d4:	tst	r0, #1
   158d8:	bne	1594c <__assert_fail@plt+0x45d4>
   158dc:	b	158e0 <__assert_fail@plt+0x4568>
   158e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158e8:	cmp	r0, r1
   158ec:	bcs	15904 <__assert_fail@plt+0x458c>
   158f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158f8:	add	r0, r0, r1
   158fc:	movw	r1, #39	; 0x27
   15900:	strb	r1, [r0]
   15904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15908:	add	r0, r0, #1
   1590c:	str	r0, [fp, #-44]	; 0xffffffd4
   15910:	b	15914 <__assert_fail@plt+0x459c>
   15914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1591c:	cmp	r0, r1
   15920:	bcs	15938 <__assert_fail@plt+0x45c0>
   15924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15928:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1592c:	add	r0, r0, r1
   15930:	movw	r1, #39	; 0x27
   15934:	strb	r1, [r0]
   15938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1593c:	add	r0, r0, #1
   15940:	str	r0, [fp, #-44]	; 0xffffffd4
   15944:	movw	r0, #0
   15948:	strb	r0, [fp, #-60]	; 0xffffffc4
   1594c:	b	15950 <__assert_fail@plt+0x45d8>
   15950:	b	15954 <__assert_fail@plt+0x45dc>
   15954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1595c:	cmp	r0, r1
   15960:	bcs	15978 <__assert_fail@plt+0x4600>
   15964:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1596c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15970:	add	r1, r1, r2
   15974:	strb	r0, [r1]
   15978:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1597c:	add	r0, r0, #1
   15980:	str	r0, [fp, #-44]	; 0xffffffd4
   15984:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15988:	tst	r0, #1
   1598c:	bne	15998 <__assert_fail@plt+0x4620>
   15990:	movw	r0, #0
   15994:	strb	r0, [fp, #-62]	; 0xffffffc2
   15998:	b	1599c <__assert_fail@plt+0x4624>
   1599c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   159a0:	add	r0, r0, #1
   159a4:	str	r0, [fp, #-40]	; 0xffffffd8
   159a8:	b	14750 <__assert_fail@plt+0x33d8>
   159ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159b0:	cmp	r0, #0
   159b4:	bne	159d4 <__assert_fail@plt+0x465c>
   159b8:	ldr	r0, [fp, #8]
   159bc:	cmp	r0, #2
   159c0:	bne	159d4 <__assert_fail@plt+0x465c>
   159c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   159c8:	tst	r0, #1
   159cc:	beq	159d4 <__assert_fail@plt+0x465c>
   159d0:	b	15b2c <__assert_fail@plt+0x47b4>
   159d4:	ldr	r0, [fp, #8]
   159d8:	cmp	r0, #2
   159dc:	bne	15a7c <__assert_fail@plt+0x4704>
   159e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   159e4:	tst	r0, #1
   159e8:	bne	15a7c <__assert_fail@plt+0x4704>
   159ec:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   159f0:	tst	r0, #1
   159f4:	beq	15a7c <__assert_fail@plt+0x4704>
   159f8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   159fc:	tst	r0, #1
   15a00:	beq	15a48 <__assert_fail@plt+0x46d0>
   15a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15a14:	ldr	ip, [fp, #12]
   15a18:	ldr	lr, [fp, #16]
   15a1c:	ldr	r4, [fp, #20]
   15a20:	ldr	r5, [fp, #24]
   15a24:	movw	r6, #5
   15a28:	str	r6, [sp]
   15a2c:	str	ip, [sp, #4]
   15a30:	str	lr, [sp, #8]
   15a34:	str	r4, [sp, #12]
   15a38:	str	r5, [sp, #16]
   15a3c:	bl	14468 <__assert_fail@plt+0x30f0>
   15a40:	str	r0, [fp, #-20]	; 0xffffffec
   15a44:	b	15b94 <__assert_fail@plt+0x481c>
   15a48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15a4c:	cmp	r0, #0
   15a50:	bne	15a74 <__assert_fail@plt+0x46fc>
   15a54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a58:	cmp	r0, #0
   15a5c:	beq	15a74 <__assert_fail@plt+0x46fc>
   15a60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a64:	str	r0, [fp, #-28]	; 0xffffffe4
   15a68:	movw	r0, #0
   15a6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15a70:	b	14510 <__assert_fail@plt+0x3198>
   15a74:	b	15a78 <__assert_fail@plt+0x4700>
   15a78:	b	15a7c <__assert_fail@plt+0x4704>
   15a7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15a80:	movw	r1, #0
   15a84:	cmp	r0, r1
   15a88:	beq	15afc <__assert_fail@plt+0x4784>
   15a8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a90:	tst	r0, #1
   15a94:	bne	15afc <__assert_fail@plt+0x4784>
   15a98:	b	15a9c <__assert_fail@plt+0x4724>
   15a9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15aa0:	ldrsb	r0, [r0]
   15aa4:	cmp	r0, #0
   15aa8:	beq	15af8 <__assert_fail@plt+0x4780>
   15aac:	b	15ab0 <__assert_fail@plt+0x4738>
   15ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ab8:	cmp	r0, r1
   15abc:	bcs	15ad8 <__assert_fail@plt+0x4760>
   15ac0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ac4:	ldrb	r0, [r0]
   15ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15acc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15ad0:	add	r1, r1, r2
   15ad4:	strb	r0, [r1]
   15ad8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15adc:	add	r0, r0, #1
   15ae0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ae4:	b	15ae8 <__assert_fail@plt+0x4770>
   15ae8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15aec:	add	r0, r0, #1
   15af0:	str	r0, [fp, #-52]	; 0xffffffcc
   15af4:	b	15a9c <__assert_fail@plt+0x4724>
   15af8:	b	15afc <__assert_fail@plt+0x4784>
   15afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b04:	cmp	r0, r1
   15b08:	bcs	15b20 <__assert_fail@plt+0x47a8>
   15b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b14:	add	r0, r0, r1
   15b18:	movw	r1, #0
   15b1c:	strb	r1, [r0]
   15b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b24:	str	r0, [fp, #-20]	; 0xffffffec
   15b28:	b	15b94 <__assert_fail@plt+0x481c>
   15b2c:	ldr	r0, [fp, #8]
   15b30:	cmp	r0, #2
   15b34:	bne	15b4c <__assert_fail@plt+0x47d4>
   15b38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15b3c:	tst	r0, #1
   15b40:	beq	15b4c <__assert_fail@plt+0x47d4>
   15b44:	movw	r0, #4
   15b48:	str	r0, [fp, #8]
   15b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15b5c:	ldr	ip, [fp, #8]
   15b60:	ldr	lr, [fp, #12]
   15b64:	mvn	r4, #2
   15b68:	and	lr, lr, r4
   15b6c:	ldr	r4, [fp, #20]
   15b70:	ldr	r5, [fp, #24]
   15b74:	str	ip, [sp]
   15b78:	str	lr, [sp, #4]
   15b7c:	movw	ip, #0
   15b80:	str	ip, [sp, #8]
   15b84:	str	r4, [sp, #12]
   15b88:	str	r5, [sp, #16]
   15b8c:	bl	14468 <__assert_fail@plt+0x30f0>
   15b90:	str	r0, [fp, #-20]	; 0xffffffec
   15b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b98:	sub	sp, fp, #16
   15b9c:	pop	{r4, r5, r6, sl, fp, pc}
   15ba0:	push	{fp, lr}
   15ba4:	mov	fp, sp
   15ba8:	sub	sp, sp, #16
   15bac:	str	r0, [fp, #-4]
   15bb0:	str	r1, [sp, #8]
   15bb4:	str	r2, [sp, #4]
   15bb8:	ldr	r0, [fp, #-4]
   15bbc:	ldr	r1, [sp, #8]
   15bc0:	ldr	r3, [sp, #4]
   15bc4:	movw	r2, #0
   15bc8:	bl	15bd4 <__assert_fail@plt+0x485c>
   15bcc:	mov	sp, fp
   15bd0:	pop	{fp, pc}
   15bd4:	push	{r4, r5, r6, sl, fp, lr}
   15bd8:	add	fp, sp, #16
   15bdc:	sub	sp, sp, #72	; 0x48
   15be0:	str	r0, [fp, #-20]	; 0xffffffec
   15be4:	str	r1, [fp, #-24]	; 0xffffffe8
   15be8:	str	r2, [fp, #-28]	; 0xffffffe4
   15bec:	str	r3, [fp, #-32]	; 0xffffffe0
   15bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bf4:	movw	r1, #0
   15bf8:	cmp	r0, r1
   15bfc:	beq	15c0c <__assert_fail@plt+0x4894>
   15c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c04:	str	r0, [sp, #32]
   15c08:	b	15c1c <__assert_fail@plt+0x48a4>
   15c0c:	movw	r0, #57864	; 0xe208
   15c10:	movt	r0, #2
   15c14:	str	r0, [sp, #32]
   15c18:	b	15c1c <__assert_fail@plt+0x48a4>
   15c1c:	ldr	r0, [sp, #32]
   15c20:	str	r0, [fp, #-36]	; 0xffffffdc
   15c24:	bl	1127c <__errno_location@plt>
   15c28:	ldr	r0, [r0]
   15c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   15c30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c34:	ldr	r0, [r0, #4]
   15c38:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15c3c:	movw	r1, #0
   15c40:	cmp	lr, r1
   15c44:	movw	lr, #0
   15c48:	movne	lr, #1
   15c4c:	tst	lr, #1
   15c50:	mov	lr, r1
   15c54:	moveq	lr, #1
   15c58:	orr	r0, r0, lr
   15c5c:	str	r0, [sp, #44]	; 0x2c
   15c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c6c:	ldr	r0, [r0]
   15c70:	ldr	lr, [sp, #44]	; 0x2c
   15c74:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15c78:	add	ip, ip, #8
   15c7c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15c80:	ldr	r4, [r4, #40]	; 0x28
   15c84:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15c88:	ldr	r5, [r5, #44]	; 0x2c
   15c8c:	str	r0, [sp, #28]
   15c90:	mov	r0, r1
   15c94:	ldr	r6, [sp, #28]
   15c98:	str	r6, [sp]
   15c9c:	str	lr, [sp, #4]
   15ca0:	str	ip, [sp, #8]
   15ca4:	str	r4, [sp, #12]
   15ca8:	str	r5, [sp, #16]
   15cac:	bl	14468 <__assert_fail@plt+0x30f0>
   15cb0:	add	r0, r0, #1
   15cb4:	str	r0, [sp, #40]	; 0x28
   15cb8:	ldr	r0, [sp, #40]	; 0x28
   15cbc:	bl	17520 <__assert_fail@plt+0x61a8>
   15cc0:	str	r0, [sp, #36]	; 0x24
   15cc4:	ldr	r0, [sp, #36]	; 0x24
   15cc8:	ldr	r1, [sp, #40]	; 0x28
   15ccc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cd4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15cd8:	ldr	ip, [ip]
   15cdc:	ldr	lr, [sp, #44]	; 0x2c
   15ce0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15ce4:	add	r4, r4, #8
   15ce8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15cec:	ldr	r5, [r5, #40]	; 0x28
   15cf0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15cf4:	ldr	r6, [r6, #44]	; 0x2c
   15cf8:	str	ip, [sp]
   15cfc:	str	lr, [sp, #4]
   15d00:	str	r4, [sp, #8]
   15d04:	str	r5, [sp, #12]
   15d08:	str	r6, [sp, #16]
   15d0c:	bl	14468 <__assert_fail@plt+0x30f0>
   15d10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d14:	str	r0, [sp, #24]
   15d18:	str	r1, [sp, #20]
   15d1c:	bl	1127c <__errno_location@plt>
   15d20:	ldr	r1, [sp, #20]
   15d24:	str	r1, [r0]
   15d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d2c:	movw	r2, #0
   15d30:	cmp	r0, r2
   15d34:	beq	15d48 <__assert_fail@plt+0x49d0>
   15d38:	ldr	r0, [sp, #40]	; 0x28
   15d3c:	sub	r0, r0, #1
   15d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d44:	str	r0, [r1]
   15d48:	ldr	r0, [sp, #36]	; 0x24
   15d4c:	sub	sp, fp, #16
   15d50:	pop	{r4, r5, r6, sl, fp, pc}
   15d54:	push	{fp, lr}
   15d58:	mov	fp, sp
   15d5c:	sub	sp, sp, #8
   15d60:	movw	r0, #57640	; 0xe128
   15d64:	movt	r0, #2
   15d68:	ldr	r0, [r0]
   15d6c:	str	r0, [sp, #4]
   15d70:	movw	r0, #1
   15d74:	str	r0, [sp]
   15d78:	ldr	r0, [sp]
   15d7c:	movw	r1, #57644	; 0xe12c
   15d80:	movt	r1, #2
   15d84:	ldr	r1, [r1]
   15d88:	cmp	r0, r1
   15d8c:	bge	15db4 <__assert_fail@plt+0x4a3c>
   15d90:	ldr	r0, [sp, #4]
   15d94:	ldr	r1, [sp]
   15d98:	add	r0, r0, r1, lsl #3
   15d9c:	ldr	r0, [r0, #4]
   15da0:	bl	13dbc <__assert_fail@plt+0x2a44>
   15da4:	ldr	r0, [sp]
   15da8:	add	r0, r0, #1
   15dac:	str	r0, [sp]
   15db0:	b	15d78 <__assert_fail@plt+0x4a00>
   15db4:	ldr	r0, [sp, #4]
   15db8:	ldr	r0, [r0, #4]
   15dbc:	movw	r1, #57912	; 0xe238
   15dc0:	movt	r1, #2
   15dc4:	cmp	r0, r1
   15dc8:	beq	15df4 <__assert_fail@plt+0x4a7c>
   15dcc:	ldr	r0, [sp, #4]
   15dd0:	ldr	r0, [r0, #4]
   15dd4:	bl	13dbc <__assert_fail@plt+0x2a44>
   15dd8:	movw	r0, #256	; 0x100
   15ddc:	movw	lr, #57648	; 0xe130
   15de0:	movt	lr, #2
   15de4:	str	r0, [lr]
   15de8:	movw	r0, #57912	; 0xe238
   15dec:	movt	r0, #2
   15df0:	str	r0, [lr, #4]
   15df4:	ldr	r0, [sp, #4]
   15df8:	movw	r1, #57648	; 0xe130
   15dfc:	movt	r1, #2
   15e00:	cmp	r0, r1
   15e04:	beq	15e24 <__assert_fail@plt+0x4aac>
   15e08:	ldr	r0, [sp, #4]
   15e0c:	bl	13dbc <__assert_fail@plt+0x2a44>
   15e10:	movw	r0, #57640	; 0xe128
   15e14:	movt	r0, #2
   15e18:	movw	lr, #57648	; 0xe130
   15e1c:	movt	lr, #2
   15e20:	str	lr, [r0]
   15e24:	movw	r0, #57644	; 0xe12c
   15e28:	movt	r0, #2
   15e2c:	movw	r1, #1
   15e30:	str	r1, [r0]
   15e34:	mov	sp, fp
   15e38:	pop	{fp, pc}
   15e3c:	push	{fp, lr}
   15e40:	mov	fp, sp
   15e44:	sub	sp, sp, #8
   15e48:	str	r0, [sp, #4]
   15e4c:	str	r1, [sp]
   15e50:	ldr	r0, [sp, #4]
   15e54:	ldr	r1, [sp]
   15e58:	mvn	r2, #0
   15e5c:	movw	r3, #57864	; 0xe208
   15e60:	movt	r3, #2
   15e64:	bl	15e70 <__assert_fail@plt+0x4af8>
   15e68:	mov	sp, fp
   15e6c:	pop	{fp, pc}
   15e70:	push	{r4, r5, r6, sl, fp, lr}
   15e74:	add	fp, sp, #16
   15e78:	sub	sp, sp, #88	; 0x58
   15e7c:	str	r0, [fp, #-20]	; 0xffffffec
   15e80:	str	r1, [fp, #-24]	; 0xffffffe8
   15e84:	str	r2, [fp, #-28]	; 0xffffffe4
   15e88:	str	r3, [fp, #-32]	; 0xffffffe0
   15e8c:	bl	1127c <__errno_location@plt>
   15e90:	ldr	r1, [pc, #676]	; 1613c <__assert_fail@plt+0x4dc4>
   15e94:	ldr	r0, [r0]
   15e98:	str	r0, [fp, #-36]	; 0xffffffdc
   15e9c:	movw	r0, #57640	; 0xe128
   15ea0:	movt	r0, #2
   15ea4:	ldr	r0, [r0]
   15ea8:	str	r0, [fp, #-40]	; 0xffffffd8
   15eac:	str	r1, [fp, #-44]	; 0xffffffd4
   15eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15eb4:	movw	r1, #0
   15eb8:	cmp	r1, r0
   15ebc:	bgt	15ed0 <__assert_fail@plt+0x4b58>
   15ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ec8:	cmp	r0, r1
   15ecc:	blt	15ed4 <__assert_fail@plt+0x4b5c>
   15ed0:	bl	11360 <abort@plt>
   15ed4:	movw	r0, #57644	; 0xe12c
   15ed8:	movt	r0, #2
   15edc:	ldr	r0, [r0]
   15ee0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ee4:	cmp	r0, r1
   15ee8:	bgt	15fe0 <__assert_fail@plt+0x4c68>
   15eec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ef0:	movw	r1, #57648	; 0xe130
   15ef4:	movt	r1, #2
   15ef8:	cmp	r0, r1
   15efc:	movw	r0, #0
   15f00:	moveq	r0, #1
   15f04:	and	r0, r0, #1
   15f08:	strb	r0, [fp, #-45]	; 0xffffffd3
   15f0c:	movw	r0, #57644	; 0xe12c
   15f10:	movt	r0, #2
   15f14:	ldr	r0, [r0]
   15f18:	str	r0, [sp, #52]	; 0x34
   15f1c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15f20:	tst	r0, #1
   15f24:	beq	15f34 <__assert_fail@plt+0x4bbc>
   15f28:	movw	r0, #0
   15f2c:	str	r0, [sp, #32]
   15f30:	b	15f3c <__assert_fail@plt+0x4bc4>
   15f34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f38:	str	r0, [sp, #32]
   15f3c:	ldr	r0, [sp, #32]
   15f40:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f44:	movw	r2, #57644	; 0xe12c
   15f48:	movt	r2, #2
   15f4c:	ldr	r2, [r2]
   15f50:	sub	r1, r1, r2
   15f54:	add	r2, r1, #1
   15f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f5c:	add	r1, sp, #52	; 0x34
   15f60:	movw	ip, #8
   15f64:	str	ip, [sp]
   15f68:	bl	1775c <__assert_fail@plt+0x63e4>
   15f6c:	str	r0, [fp, #-40]	; 0xffffffd8
   15f70:	movw	r1, #57640	; 0xe128
   15f74:	movt	r1, #2
   15f78:	str	r0, [r1]
   15f7c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15f80:	tst	r0, #1
   15f84:	beq	15fa4 <__assert_fail@plt+0x4c2c>
   15f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f8c:	movw	r1, #57648	; 0xe130
   15f90:	movt	r1, #2
   15f94:	ldr	r2, [r1]
   15f98:	str	r2, [r0]
   15f9c:	ldr	r1, [r1, #4]
   15fa0:	str	r1, [r0, #4]
   15fa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15fa8:	movw	r1, #57644	; 0xe12c
   15fac:	movt	r1, #2
   15fb0:	ldr	r1, [r1]
   15fb4:	add	r0, r0, r1, lsl #3
   15fb8:	ldr	r2, [sp, #52]	; 0x34
   15fbc:	sub	r1, r2, r1
   15fc0:	lsl	r2, r1, #3
   15fc4:	movw	r1, #0
   15fc8:	and	r1, r1, #255	; 0xff
   15fcc:	bl	11294 <memset@plt>
   15fd0:	ldr	r0, [sp, #52]	; 0x34
   15fd4:	movw	r1, #57644	; 0xe12c
   15fd8:	movt	r1, #2
   15fdc:	str	r0, [r1]
   15fe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fe8:	ldr	r0, [r0, r1, lsl #3]
   15fec:	str	r0, [sp, #48]	; 0x30
   15ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ff8:	add	r0, r0, r1, lsl #3
   15ffc:	ldr	r0, [r0, #4]
   16000:	str	r0, [sp, #44]	; 0x2c
   16004:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16008:	ldr	r0, [r0, #4]
   1600c:	orr	r0, r0, #1
   16010:	str	r0, [sp, #40]	; 0x28
   16014:	ldr	r0, [sp, #44]	; 0x2c
   16018:	ldr	r1, [sp, #48]	; 0x30
   1601c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16024:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16028:	ldr	ip, [ip]
   1602c:	ldr	lr, [sp, #40]	; 0x28
   16030:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16034:	add	r4, r4, #8
   16038:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1603c:	ldr	r5, [r5, #40]	; 0x28
   16040:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16044:	ldr	r6, [r6, #44]	; 0x2c
   16048:	str	ip, [sp]
   1604c:	str	lr, [sp, #4]
   16050:	str	r4, [sp, #8]
   16054:	str	r5, [sp, #12]
   16058:	str	r6, [sp, #16]
   1605c:	bl	14468 <__assert_fail@plt+0x30f0>
   16060:	str	r0, [sp, #36]	; 0x24
   16064:	ldr	r0, [sp, #48]	; 0x30
   16068:	ldr	r1, [sp, #36]	; 0x24
   1606c:	cmp	r0, r1
   16070:	bhi	1611c <__assert_fail@plt+0x4da4>
   16074:	ldr	r0, [sp, #36]	; 0x24
   16078:	add	r0, r0, #1
   1607c:	str	r0, [sp, #48]	; 0x30
   16080:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16084:	ldr	r2, [fp, #-20]	; 0xffffffec
   16088:	add	r1, r1, r2, lsl #3
   1608c:	str	r0, [r1]
   16090:	ldr	r0, [sp, #44]	; 0x2c
   16094:	movw	r1, #57912	; 0xe238
   16098:	movt	r1, #2
   1609c:	cmp	r0, r1
   160a0:	beq	160ac <__assert_fail@plt+0x4d34>
   160a4:	ldr	r0, [sp, #44]	; 0x2c
   160a8:	bl	13dbc <__assert_fail@plt+0x2a44>
   160ac:	ldr	r0, [sp, #48]	; 0x30
   160b0:	bl	17520 <__assert_fail@plt+0x61a8>
   160b4:	mov	lr, r0
   160b8:	str	r0, [sp, #44]	; 0x2c
   160bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   160c4:	add	r0, r0, r1, lsl #3
   160c8:	str	lr, [r0, #4]
   160cc:	ldr	r0, [sp, #44]	; 0x2c
   160d0:	ldr	r1, [sp, #48]	; 0x30
   160d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   160dc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   160e0:	ldr	lr, [lr]
   160e4:	ldr	ip, [sp, #40]	; 0x28
   160e8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   160ec:	add	r4, r4, #8
   160f0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   160f4:	ldr	r5, [r5, #40]	; 0x28
   160f8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   160fc:	ldr	r6, [r6, #44]	; 0x2c
   16100:	str	lr, [sp]
   16104:	str	ip, [sp, #4]
   16108:	str	r4, [sp, #8]
   1610c:	str	r5, [sp, #12]
   16110:	str	r6, [sp, #16]
   16114:	bl	14468 <__assert_fail@plt+0x30f0>
   16118:	str	r0, [sp, #28]
   1611c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16120:	str	r0, [sp, #24]
   16124:	bl	1127c <__errno_location@plt>
   16128:	ldr	lr, [sp, #24]
   1612c:	str	lr, [r0]
   16130:	ldr	r0, [sp, #44]	; 0x2c
   16134:	sub	sp, fp, #16
   16138:	pop	{r4, r5, r6, sl, fp, pc}
   1613c:	svcvc	0x00ffffff
   16140:	push	{fp, lr}
   16144:	mov	fp, sp
   16148:	sub	sp, sp, #16
   1614c:	str	r0, [fp, #-4]
   16150:	str	r1, [sp, #8]
   16154:	str	r2, [sp, #4]
   16158:	ldr	r0, [fp, #-4]
   1615c:	ldr	r1, [sp, #8]
   16160:	ldr	r2, [sp, #4]
   16164:	movw	r3, #57864	; 0xe208
   16168:	movt	r3, #2
   1616c:	bl	15e70 <__assert_fail@plt+0x4af8>
   16170:	mov	sp, fp
   16174:	pop	{fp, pc}
   16178:	push	{fp, lr}
   1617c:	mov	fp, sp
   16180:	sub	sp, sp, #8
   16184:	str	r0, [sp, #4]
   16188:	ldr	r1, [sp, #4]
   1618c:	movw	r0, #0
   16190:	bl	15e3c <__assert_fail@plt+0x4ac4>
   16194:	mov	sp, fp
   16198:	pop	{fp, pc}
   1619c:	push	{fp, lr}
   161a0:	mov	fp, sp
   161a4:	sub	sp, sp, #8
   161a8:	str	r0, [sp, #4]
   161ac:	str	r1, [sp]
   161b0:	ldr	r1, [sp, #4]
   161b4:	ldr	r2, [sp]
   161b8:	movw	r0, #0
   161bc:	bl	16140 <__assert_fail@plt+0x4dc8>
   161c0:	mov	sp, fp
   161c4:	pop	{fp, pc}
   161c8:	push	{fp, lr}
   161cc:	mov	fp, sp
   161d0:	sub	sp, sp, #64	; 0x40
   161d4:	str	r0, [fp, #-4]
   161d8:	str	r1, [fp, #-8]
   161dc:	str	r2, [fp, #-12]
   161e0:	ldr	r1, [fp, #-8]
   161e4:	add	r0, sp, #4
   161e8:	bl	16208 <__assert_fail@plt+0x4e90>
   161ec:	ldr	r0, [fp, #-4]
   161f0:	ldr	r1, [fp, #-12]
   161f4:	mvn	r2, #0
   161f8:	add	r3, sp, #4
   161fc:	bl	15e70 <__assert_fail@plt+0x4af8>
   16200:	mov	sp, fp
   16204:	pop	{fp, pc}
   16208:	push	{fp, lr}
   1620c:	mov	fp, sp
   16210:	sub	sp, sp, #8
   16214:	str	r1, [sp, #4]
   16218:	mov	r1, r0
   1621c:	str	r0, [sp]
   16220:	mov	r0, r1
   16224:	movw	r1, #0
   16228:	and	r1, r1, #255	; 0xff
   1622c:	movw	r2, #48	; 0x30
   16230:	bl	11294 <memset@plt>
   16234:	ldr	r0, [sp, #4]
   16238:	cmp	r0, #10
   1623c:	bne	16244 <__assert_fail@plt+0x4ecc>
   16240:	bl	11360 <abort@plt>
   16244:	ldr	r0, [sp, #4]
   16248:	ldr	r1, [sp]
   1624c:	str	r0, [r1]
   16250:	mov	sp, fp
   16254:	pop	{fp, pc}
   16258:	push	{fp, lr}
   1625c:	mov	fp, sp
   16260:	sub	sp, sp, #64	; 0x40
   16264:	str	r0, [fp, #-4]
   16268:	str	r1, [fp, #-8]
   1626c:	str	r2, [fp, #-12]
   16270:	str	r3, [fp, #-16]
   16274:	ldr	r1, [fp, #-8]
   16278:	mov	r0, sp
   1627c:	bl	16208 <__assert_fail@plt+0x4e90>
   16280:	ldr	r0, [fp, #-4]
   16284:	ldr	r1, [fp, #-12]
   16288:	ldr	r2, [fp, #-16]
   1628c:	mov	r3, sp
   16290:	bl	15e70 <__assert_fail@plt+0x4af8>
   16294:	mov	sp, fp
   16298:	pop	{fp, pc}
   1629c:	push	{fp, lr}
   162a0:	mov	fp, sp
   162a4:	sub	sp, sp, #8
   162a8:	str	r0, [sp, #4]
   162ac:	str	r1, [sp]
   162b0:	ldr	r1, [sp, #4]
   162b4:	ldr	r2, [sp]
   162b8:	movw	r0, #0
   162bc:	bl	161c8 <__assert_fail@plt+0x4e50>
   162c0:	mov	sp, fp
   162c4:	pop	{fp, pc}
   162c8:	push	{fp, lr}
   162cc:	mov	fp, sp
   162d0:	sub	sp, sp, #16
   162d4:	str	r0, [fp, #-4]
   162d8:	str	r1, [sp, #8]
   162dc:	str	r2, [sp, #4]
   162e0:	ldr	r1, [fp, #-4]
   162e4:	ldr	r2, [sp, #8]
   162e8:	ldr	r3, [sp, #4]
   162ec:	movw	r0, #0
   162f0:	bl	16258 <__assert_fail@plt+0x4ee0>
   162f4:	mov	sp, fp
   162f8:	pop	{fp, pc}
   162fc:	push	{fp, lr}
   16300:	mov	fp, sp
   16304:	sub	sp, sp, #72	; 0x48
   16308:	movw	r3, #57864	; 0xe208
   1630c:	movt	r3, #2
   16310:	str	r0, [fp, #-4]
   16314:	str	r1, [fp, #-8]
   16318:	strb	r2, [fp, #-9]
   1631c:	add	r0, sp, #12
   16320:	mov	r1, r0
   16324:	str	r0, [sp, #8]
   16328:	mov	r0, r1
   1632c:	mov	r1, r3
   16330:	movw	r2, #48	; 0x30
   16334:	bl	110fc <memcpy@plt>
   16338:	ldr	r0, [sp, #8]
   1633c:	ldrb	r1, [fp, #-9]
   16340:	movw	r2, #1
   16344:	bl	1420c <__assert_fail@plt+0x2e94>
   16348:	ldr	r1, [fp, #-4]
   1634c:	ldr	r2, [fp, #-8]
   16350:	movw	r3, #0
   16354:	str	r0, [sp, #4]
   16358:	mov	r0, r3
   1635c:	add	r3, sp, #12
   16360:	bl	15e70 <__assert_fail@plt+0x4af8>
   16364:	mov	sp, fp
   16368:	pop	{fp, pc}
   1636c:	push	{fp, lr}
   16370:	mov	fp, sp
   16374:	sub	sp, sp, #8
   16378:	str	r0, [sp, #4]
   1637c:	strb	r1, [sp, #3]
   16380:	ldr	r0, [sp, #4]
   16384:	mvn	r1, #0
   16388:	ldrb	r2, [sp, #3]
   1638c:	bl	162fc <__assert_fail@plt+0x4f84>
   16390:	mov	sp, fp
   16394:	pop	{fp, pc}
   16398:	push	{fp, lr}
   1639c:	mov	fp, sp
   163a0:	sub	sp, sp, #8
   163a4:	str	r0, [sp, #4]
   163a8:	ldr	r0, [sp, #4]
   163ac:	movw	r1, #58	; 0x3a
   163b0:	and	r1, r1, #255	; 0xff
   163b4:	bl	1636c <__assert_fail@plt+0x4ff4>
   163b8:	mov	sp, fp
   163bc:	pop	{fp, pc}
   163c0:	push	{fp, lr}
   163c4:	mov	fp, sp
   163c8:	sub	sp, sp, #8
   163cc:	str	r0, [sp, #4]
   163d0:	str	r1, [sp]
   163d4:	ldr	r0, [sp, #4]
   163d8:	ldr	r1, [sp]
   163dc:	movw	r2, #58	; 0x3a
   163e0:	and	r2, r2, #255	; 0xff
   163e4:	bl	162fc <__assert_fail@plt+0x4f84>
   163e8:	mov	sp, fp
   163ec:	pop	{fp, pc}
   163f0:	push	{fp, lr}
   163f4:	mov	fp, sp
   163f8:	sub	sp, sp, #120	; 0x78
   163fc:	str	r0, [fp, #-4]
   16400:	str	r1, [fp, #-8]
   16404:	str	r2, [fp, #-12]
   16408:	ldr	r1, [fp, #-8]
   1640c:	add	r0, sp, #12
   16410:	bl	16208 <__assert_fail@plt+0x4e90>
   16414:	add	r0, sp, #60	; 0x3c
   16418:	mov	r1, r0
   1641c:	add	r2, sp, #12
   16420:	str	r0, [sp, #8]
   16424:	mov	r0, r1
   16428:	mov	r1, r2
   1642c:	movw	r2, #48	; 0x30
   16430:	bl	110fc <memcpy@plt>
   16434:	ldr	r0, [sp, #8]
   16438:	movw	r1, #58	; 0x3a
   1643c:	and	r1, r1, #255	; 0xff
   16440:	movw	r2, #1
   16444:	bl	1420c <__assert_fail@plt+0x2e94>
   16448:	ldr	r1, [fp, #-4]
   1644c:	ldr	r2, [fp, #-12]
   16450:	str	r0, [sp, #4]
   16454:	mov	r0, r1
   16458:	mov	r1, r2
   1645c:	mvn	r2, #0
   16460:	add	r3, sp, #60	; 0x3c
   16464:	bl	15e70 <__assert_fail@plt+0x4af8>
   16468:	mov	sp, fp
   1646c:	pop	{fp, pc}
   16470:	push	{fp, lr}
   16474:	mov	fp, sp
   16478:	sub	sp, sp, #24
   1647c:	str	r0, [fp, #-4]
   16480:	str	r1, [fp, #-8]
   16484:	str	r2, [sp, #12]
   16488:	str	r3, [sp, #8]
   1648c:	ldr	r0, [fp, #-4]
   16490:	ldr	r1, [fp, #-8]
   16494:	ldr	r2, [sp, #12]
   16498:	ldr	r3, [sp, #8]
   1649c:	mvn	ip, #0
   164a0:	str	ip, [sp]
   164a4:	bl	164b0 <__assert_fail@plt+0x5138>
   164a8:	mov	sp, fp
   164ac:	pop	{fp, pc}
   164b0:	push	{fp, lr}
   164b4:	mov	fp, sp
   164b8:	sub	sp, sp, #72	; 0x48
   164bc:	ldr	ip, [fp, #8]
   164c0:	movw	lr, #57864	; 0xe208
   164c4:	movt	lr, #2
   164c8:	str	r0, [fp, #-4]
   164cc:	str	r1, [fp, #-8]
   164d0:	str	r2, [fp, #-12]
   164d4:	str	r3, [fp, #-16]
   164d8:	add	r0, sp, #8
   164dc:	mov	r1, r0
   164e0:	str	r0, [sp, #4]
   164e4:	mov	r0, r1
   164e8:	mov	r1, lr
   164ec:	movw	r2, #48	; 0x30
   164f0:	str	ip, [sp]
   164f4:	bl	110fc <memcpy@plt>
   164f8:	ldr	r1, [fp, #-8]
   164fc:	ldr	r2, [fp, #-12]
   16500:	ldr	r0, [sp, #4]
   16504:	bl	1430c <__assert_fail@plt+0x2f94>
   16508:	ldr	r0, [fp, #-4]
   1650c:	ldr	r1, [fp, #-16]
   16510:	ldr	r2, [fp, #8]
   16514:	add	r3, sp, #8
   16518:	bl	15e70 <__assert_fail@plt+0x4af8>
   1651c:	mov	sp, fp
   16520:	pop	{fp, pc}
   16524:	push	{fp, lr}
   16528:	mov	fp, sp
   1652c:	sub	sp, sp, #16
   16530:	str	r0, [fp, #-4]
   16534:	str	r1, [sp, #8]
   16538:	str	r2, [sp, #4]
   1653c:	ldr	r1, [fp, #-4]
   16540:	ldr	r2, [sp, #8]
   16544:	ldr	r3, [sp, #4]
   16548:	movw	r0, #0
   1654c:	bl	16470 <__assert_fail@plt+0x50f8>
   16550:	mov	sp, fp
   16554:	pop	{fp, pc}
   16558:	push	{fp, lr}
   1655c:	mov	fp, sp
   16560:	sub	sp, sp, #24
   16564:	str	r0, [fp, #-4]
   16568:	str	r1, [fp, #-8]
   1656c:	str	r2, [sp, #12]
   16570:	str	r3, [sp, #8]
   16574:	ldr	r1, [fp, #-4]
   16578:	ldr	r2, [fp, #-8]
   1657c:	ldr	r3, [sp, #12]
   16580:	ldr	r0, [sp, #8]
   16584:	movw	ip, #0
   16588:	str	r0, [sp, #4]
   1658c:	mov	r0, ip
   16590:	ldr	ip, [sp, #4]
   16594:	str	ip, [sp]
   16598:	bl	164b0 <__assert_fail@plt+0x5138>
   1659c:	mov	sp, fp
   165a0:	pop	{fp, pc}
   165a4:	push	{fp, lr}
   165a8:	mov	fp, sp
   165ac:	sub	sp, sp, #16
   165b0:	str	r0, [fp, #-4]
   165b4:	str	r1, [sp, #8]
   165b8:	str	r2, [sp, #4]
   165bc:	ldr	r0, [fp, #-4]
   165c0:	ldr	r1, [sp, #8]
   165c4:	ldr	r2, [sp, #4]
   165c8:	movw	r3, #57656	; 0xe138
   165cc:	movt	r3, #2
   165d0:	bl	15e70 <__assert_fail@plt+0x4af8>
   165d4:	mov	sp, fp
   165d8:	pop	{fp, pc}
   165dc:	push	{fp, lr}
   165e0:	mov	fp, sp
   165e4:	sub	sp, sp, #8
   165e8:	str	r0, [sp, #4]
   165ec:	str	r1, [sp]
   165f0:	ldr	r1, [sp, #4]
   165f4:	ldr	r2, [sp]
   165f8:	movw	r0, #0
   165fc:	bl	165a4 <__assert_fail@plt+0x522c>
   16600:	mov	sp, fp
   16604:	pop	{fp, pc}
   16608:	push	{fp, lr}
   1660c:	mov	fp, sp
   16610:	sub	sp, sp, #8
   16614:	str	r0, [sp, #4]
   16618:	str	r1, [sp]
   1661c:	ldr	r0, [sp, #4]
   16620:	ldr	r1, [sp]
   16624:	mvn	r2, #0
   16628:	bl	165a4 <__assert_fail@plt+0x522c>
   1662c:	mov	sp, fp
   16630:	pop	{fp, pc}
   16634:	push	{fp, lr}
   16638:	mov	fp, sp
   1663c:	sub	sp, sp, #8
   16640:	str	r0, [sp, #4]
   16644:	ldr	r1, [sp, #4]
   16648:	movw	r0, #0
   1664c:	bl	16608 <__assert_fail@plt+0x5290>
   16650:	mov	sp, fp
   16654:	pop	{fp, pc}
   16658:	push	{fp, lr}
   1665c:	mov	fp, sp
   16660:	sub	sp, sp, #24
   16664:	str	r0, [fp, #-8]
   16668:	str	r1, [sp, #12]
   1666c:	ldr	r0, [fp, #-8]
   16670:	bl	11240 <gettext@plt>
   16674:	str	r0, [sp, #8]
   16678:	ldr	r0, [sp, #8]
   1667c:	ldr	r1, [fp, #-8]
   16680:	cmp	r0, r1
   16684:	beq	16694 <__assert_fail@plt+0x531c>
   16688:	ldr	r0, [sp, #8]
   1668c:	str	r0, [fp, #-4]
   16690:	b	16760 <__assert_fail@plt+0x53e8>
   16694:	bl	1aa88 <__assert_fail@plt+0x9710>
   16698:	str	r0, [sp, #4]
   1669c:	ldr	r0, [sp, #4]
   166a0:	movw	r1, #52312	; 0xcc58
   166a4:	movt	r1, #1
   166a8:	bl	1a484 <__assert_fail@plt+0x910c>
   166ac:	cmp	r0, #0
   166b0:	bne	166e8 <__assert_fail@plt+0x5370>
   166b4:	ldr	r0, [fp, #-8]
   166b8:	ldrb	r0, [r0]
   166bc:	cmp	r0, #96	; 0x60
   166c0:	movw	r0, #0
   166c4:	moveq	r0, #1
   166c8:	tst	r0, #1
   166cc:	movw	r0, #52322	; 0xcc62
   166d0:	movt	r0, #1
   166d4:	movw	r1, #52318	; 0xcc5e
   166d8:	movt	r1, #1
   166dc:	movne	r0, r1
   166e0:	str	r0, [fp, #-4]
   166e4:	b	16760 <__assert_fail@plt+0x53e8>
   166e8:	ldr	r0, [sp, #4]
   166ec:	movw	r1, #52326	; 0xcc66
   166f0:	movt	r1, #1
   166f4:	bl	1a484 <__assert_fail@plt+0x910c>
   166f8:	cmp	r0, #0
   166fc:	bne	16734 <__assert_fail@plt+0x53bc>
   16700:	ldr	r0, [fp, #-8]
   16704:	ldrb	r0, [r0]
   16708:	cmp	r0, #96	; 0x60
   1670c:	movw	r0, #0
   16710:	moveq	r0, #1
   16714:	tst	r0, #1
   16718:	movw	r0, #52338	; 0xcc72
   1671c:	movt	r0, #1
   16720:	movw	r1, #52334	; 0xcc6e
   16724:	movt	r1, #1
   16728:	movne	r0, r1
   1672c:	str	r0, [fp, #-4]
   16730:	b	16760 <__assert_fail@plt+0x53e8>
   16734:	ldr	r0, [sp, #12]
   16738:	cmp	r0, #9
   1673c:	movw	r0, #0
   16740:	moveq	r0, #1
   16744:	tst	r0, #1
   16748:	movw	r0, #52310	; 0xcc56
   1674c:	movt	r0, #1
   16750:	movw	r1, #52306	; 0xcc52
   16754:	movt	r1, #1
   16758:	movne	r0, r1
   1675c:	str	r0, [fp, #-4]
   16760:	ldr	r0, [fp, #-4]
   16764:	mov	sp, fp
   16768:	pop	{fp, pc}
   1676c:	push	{fp, lr}
   16770:	mov	fp, sp
   16774:	sub	sp, sp, #24
   16778:	str	r0, [fp, #-4]
   1677c:	movw	r0, #33	; 0x21
   16780:	bl	174a8 <__assert_fail@plt+0x6130>
   16784:	str	r0, [sp, #12]
   16788:	ldr	r0, [sp, #12]
   1678c:	ldr	lr, [fp, #-4]
   16790:	add	r1, lr, #44	; 0x2c
   16794:	movw	r2, #32
   16798:	bl	112a0 <strncpy@plt>
   1679c:	ldr	r1, [sp, #12]
   167a0:	movw	r2, #0
   167a4:	strb	r2, [r1, #32]
   167a8:	ldr	r1, [sp, #12]
   167ac:	ldr	r2, [sp, #12]
   167b0:	str	r0, [sp, #8]
   167b4:	mov	r0, r2
   167b8:	str	r1, [sp, #4]
   167bc:	bl	11258 <strlen@plt>
   167c0:	ldr	r1, [sp, #4]
   167c4:	add	r0, r1, r0
   167c8:	str	r0, [fp, #-8]
   167cc:	ldr	r0, [sp, #12]
   167d0:	ldr	r1, [fp, #-8]
   167d4:	cmp	r0, r1
   167d8:	movw	r0, #0
   167dc:	str	r0, [sp]
   167e0:	bcs	16804 <__assert_fail@plt+0x548c>
   167e4:	ldr	r0, [fp, #-8]
   167e8:	mvn	r1, #0
   167ec:	add	r0, r0, r1
   167f0:	ldrb	r0, [r0]
   167f4:	cmp	r0, #32
   167f8:	movw	r0, #0
   167fc:	moveq	r0, #1
   16800:	str	r0, [sp]
   16804:	ldr	r0, [sp]
   16808:	tst	r0, #1
   1680c:	beq	16834 <__assert_fail@plt+0x54bc>
   16810:	b	16814 <__assert_fail@plt+0x549c>
   16814:	ldr	r0, [fp, #-8]
   16818:	mvn	r1, #0
   1681c:	add	r2, r0, r1
   16820:	str	r2, [fp, #-8]
   16824:	add	r0, r0, r1
   16828:	movw	r1, #0
   1682c:	strb	r1, [r0]
   16830:	b	167cc <__assert_fail@plt+0x5454>
   16834:	ldr	r0, [sp, #12]
   16838:	mov	sp, fp
   1683c:	pop	{fp, pc}
   16840:	push	{fp, lr}
   16844:	mov	fp, sp
   16848:	sub	sp, sp, #40	; 0x28
   1684c:	str	r0, [fp, #-4]
   16850:	str	r1, [fp, #-8]
   16854:	str	r2, [fp, #-12]
   16858:	str	r3, [fp, #-16]
   1685c:	movw	r0, #0
   16860:	str	r0, [sp, #20]
   16864:	str	r0, [sp, #16]
   16868:	str	r0, [sp, #12]
   1686c:	ldr	r0, [fp, #-4]
   16870:	bl	110cc <utmpxname@plt>
   16874:	str	r0, [sp, #4]
   16878:	bl	11144 <setutxent@plt>
   1687c:	bl	1136c <getutxent@plt>
   16880:	str	r0, [sp, #8]
   16884:	movw	lr, #0
   16888:	cmp	r0, lr
   1688c:	beq	168fc <__assert_fail@plt+0x5584>
   16890:	ldr	r0, [sp, #8]
   16894:	ldr	r1, [fp, #-16]
   16898:	bl	16924 <__assert_fail@plt+0x55ac>
   1689c:	tst	r0, #1
   168a0:	beq	168f8 <__assert_fail@plt+0x5580>
   168a4:	ldr	r0, [sp, #20]
   168a8:	ldr	r1, [sp, #16]
   168ac:	cmp	r0, r1
   168b0:	bne	168d4 <__assert_fail@plt+0x555c>
   168b4:	ldr	r0, [sp, #12]
   168b8:	add	r1, sp, #16
   168bc:	movw	r2, #1
   168c0:	mvn	r3, #0
   168c4:	movw	ip, #384	; 0x180
   168c8:	str	ip, [sp]
   168cc:	bl	1775c <__assert_fail@plt+0x63e4>
   168d0:	str	r0, [sp, #12]
   168d4:	ldr	r0, [sp, #12]
   168d8:	ldr	r1, [sp, #20]
   168dc:	add	r2, r1, #1
   168e0:	str	r2, [sp, #20]
   168e4:	movw	r2, #384	; 0x180
   168e8:	mul	r1, r1, r2
   168ec:	add	r0, r0, r1
   168f0:	ldr	r1, [sp, #8]
   168f4:	bl	110fc <memcpy@plt>
   168f8:	b	1687c <__assert_fail@plt+0x5504>
   168fc:	bl	112dc <endutxent@plt>
   16900:	ldr	lr, [sp, #20]
   16904:	ldr	r0, [fp, #-8]
   16908:	str	lr, [r0]
   1690c:	ldr	r0, [sp, #12]
   16910:	ldr	lr, [fp, #-12]
   16914:	str	r0, [lr]
   16918:	movw	r0, #0
   1691c:	mov	sp, fp
   16920:	pop	{fp, pc}
   16924:	push	{fp, lr}
   16928:	mov	fp, sp
   1692c:	sub	sp, sp, #24
   16930:	str	r0, [fp, #-8]
   16934:	str	r1, [sp, #12]
   16938:	ldr	r0, [fp, #-8]
   1693c:	ldrb	r0, [r0, #44]	; 0x2c
   16940:	cmp	r0, #0
   16944:	movw	r0, #0
   16948:	str	r0, [sp, #4]
   1694c:	beq	1697c <__assert_fail@plt+0x5604>
   16950:	ldr	r0, [fp, #-8]
   16954:	ldrsh	r0, [r0]
   16958:	cmp	r0, #7
   1695c:	movw	r0, #1
   16960:	str	r0, [sp]
   16964:	beq	16974 <__assert_fail@plt+0x55fc>
   16968:	movw	r0, #0
   1696c:	str	r0, [sp]
   16970:	b	16974 <__assert_fail@plt+0x55fc>
   16974:	ldr	r0, [sp]
   16978:	str	r0, [sp, #4]
   1697c:	ldr	r0, [sp, #4]
   16980:	and	r0, r0, #1
   16984:	strb	r0, [sp, #11]
   16988:	ldr	r0, [sp, #12]
   1698c:	and	r0, r0, #2
   16990:	cmp	r0, #0
   16994:	beq	169b4 <__assert_fail@plt+0x563c>
   16998:	ldrb	r0, [sp, #11]
   1699c:	tst	r0, #1
   169a0:	bne	169b4 <__assert_fail@plt+0x563c>
   169a4:	movw	r0, #0
   169a8:	and	r0, r0, #1
   169ac:	strb	r0, [fp, #-1]
   169b0:	b	16a28 <__assert_fail@plt+0x56b0>
   169b4:	ldr	r0, [sp, #12]
   169b8:	and	r0, r0, #1
   169bc:	cmp	r0, #0
   169c0:	beq	16a1c <__assert_fail@plt+0x56a4>
   169c4:	ldrb	r0, [sp, #11]
   169c8:	tst	r0, #1
   169cc:	beq	16a1c <__assert_fail@plt+0x56a4>
   169d0:	ldr	r0, [fp, #-8]
   169d4:	ldr	r0, [r0, #4]
   169d8:	movw	r1, #0
   169dc:	cmp	r1, r0
   169e0:	bge	16a1c <__assert_fail@plt+0x56a4>
   169e4:	ldr	r0, [fp, #-8]
   169e8:	ldr	r0, [r0, #4]
   169ec:	movw	r1, #0
   169f0:	bl	1121c <kill@plt>
   169f4:	cmp	r0, #0
   169f8:	bge	16a1c <__assert_fail@plt+0x56a4>
   169fc:	bl	1127c <__errno_location@plt>
   16a00:	ldr	r0, [r0]
   16a04:	cmp	r0, #3
   16a08:	bne	16a1c <__assert_fail@plt+0x56a4>
   16a0c:	movw	r0, #0
   16a10:	and	r0, r0, #1
   16a14:	strb	r0, [fp, #-1]
   16a18:	b	16a28 <__assert_fail@plt+0x56b0>
   16a1c:	movw	r0, #1
   16a20:	and	r0, r0, #1
   16a24:	strb	r0, [fp, #-1]
   16a28:	ldrb	r0, [fp, #-1]
   16a2c:	and	r0, r0, #1
   16a30:	mov	sp, fp
   16a34:	pop	{fp, pc}
   16a38:	push	{fp, lr}
   16a3c:	mov	fp, sp
   16a40:	sub	sp, sp, #16
   16a44:	str	r0, [fp, #-4]
   16a48:	str	r1, [sp, #8]
   16a4c:	str	r2, [sp, #4]
   16a50:	ldr	r0, [fp, #-4]
   16a54:	ldr	r1, [sp, #8]
   16a58:	ldr	r2, [sp, #4]
   16a5c:	bl	16a68 <__assert_fail@plt+0x56f0>
   16a60:	mov	sp, fp
   16a64:	pop	{fp, pc}
   16a68:	push	{fp, lr}
   16a6c:	mov	fp, sp
   16a70:	sub	sp, sp, #24
   16a74:	str	r0, [fp, #-8]
   16a78:	str	r1, [sp, #12]
   16a7c:	str	r2, [sp, #8]
   16a80:	ldr	r0, [fp, #-8]
   16a84:	bl	16b68 <__assert_fail@plt+0x57f0>
   16a88:	str	r0, [sp, #4]
   16a8c:	ldr	r0, [sp, #4]
   16a90:	movw	r1, #0
   16a94:	cmp	r0, r1
   16a98:	bne	16ac0 <__assert_fail@plt+0x5748>
   16a9c:	ldr	r0, [sp, #8]
   16aa0:	cmp	r0, #0
   16aa4:	bls	16ab4 <__assert_fail@plt+0x573c>
   16aa8:	ldr	r0, [sp, #12]
   16aac:	movw	r1, #0
   16ab0:	strb	r1, [r0]
   16ab4:	movw	r0, #22
   16ab8:	str	r0, [fp, #-4]
   16abc:	b	16b3c <__assert_fail@plt+0x57c4>
   16ac0:	ldr	r0, [sp, #4]
   16ac4:	bl	11258 <strlen@plt>
   16ac8:	str	r0, [sp]
   16acc:	ldr	r0, [sp]
   16ad0:	ldr	lr, [sp, #8]
   16ad4:	cmp	r0, lr
   16ad8:	bcs	16afc <__assert_fail@plt+0x5784>
   16adc:	ldr	r0, [sp, #12]
   16ae0:	ldr	r1, [sp, #4]
   16ae4:	ldr	r2, [sp]
   16ae8:	add	r2, r2, #1
   16aec:	bl	110fc <memcpy@plt>
   16af0:	movw	r0, #0
   16af4:	str	r0, [fp, #-4]
   16af8:	b	16b3c <__assert_fail@plt+0x57c4>
   16afc:	ldr	r0, [sp, #8]
   16b00:	cmp	r0, #0
   16b04:	bls	16b34 <__assert_fail@plt+0x57bc>
   16b08:	ldr	r0, [sp, #12]
   16b0c:	ldr	r1, [sp, #4]
   16b10:	ldr	r2, [sp, #8]
   16b14:	sub	r2, r2, #1
   16b18:	bl	110fc <memcpy@plt>
   16b1c:	ldr	r0, [sp, #12]
   16b20:	ldr	r1, [sp, #8]
   16b24:	sub	r1, r1, #1
   16b28:	add	r0, r0, r1
   16b2c:	movw	r1, #0
   16b30:	strb	r1, [r0]
   16b34:	movw	r0, #34	; 0x22
   16b38:	str	r0, [fp, #-4]
   16b3c:	ldr	r0, [fp, #-4]
   16b40:	mov	sp, fp
   16b44:	pop	{fp, pc}
   16b48:	push	{fp, lr}
   16b4c:	mov	fp, sp
   16b50:	sub	sp, sp, #8
   16b54:	str	r0, [sp, #4]
   16b58:	ldr	r0, [sp, #4]
   16b5c:	bl	16b68 <__assert_fail@plt+0x57f0>
   16b60:	mov	sp, fp
   16b64:	pop	{fp, pc}
   16b68:	push	{fp, lr}
   16b6c:	mov	fp, sp
   16b70:	sub	sp, sp, #8
   16b74:	str	r0, [sp, #4]
   16b78:	ldr	r0, [sp, #4]
   16b7c:	movw	r1, #0
   16b80:	bl	112e8 <setlocale@plt>
   16b84:	str	r0, [sp]
   16b88:	ldr	r0, [sp]
   16b8c:	mov	sp, fp
   16b90:	pop	{fp, pc}
   16b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b98:	add	fp, sp, #28
   16b9c:	sub	sp, sp, #260	; 0x104
   16ba0:	ldr	ip, [fp, #12]
   16ba4:	ldr	lr, [fp, #8]
   16ba8:	str	r0, [fp, #-32]	; 0xffffffe0
   16bac:	str	r1, [fp, #-36]	; 0xffffffdc
   16bb0:	str	r2, [fp, #-40]	; 0xffffffd8
   16bb4:	str	r3, [fp, #-44]	; 0xffffffd4
   16bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bbc:	movw	r1, #0
   16bc0:	cmp	r0, r1
   16bc4:	str	lr, [fp, #-48]	; 0xffffffd0
   16bc8:	str	ip, [fp, #-52]	; 0xffffffcc
   16bcc:	beq	16c04 <__assert_fail@plt+0x588c>
   16bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16be0:	movw	ip, #52428	; 0xcccc
   16be4:	movt	ip, #1
   16be8:	str	r1, [fp, #-56]	; 0xffffffc8
   16bec:	mov	r1, ip
   16bf0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16bf4:	str	ip, [sp]
   16bf8:	bl	11270 <fprintf@plt>
   16bfc:	str	r0, [fp, #-60]	; 0xffffffc4
   16c00:	b	16c20 <__assert_fail@plt+0x58a8>
   16c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16c0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c10:	movw	r1, #52440	; 0xccd8
   16c14:	movt	r1, #1
   16c18:	bl	11270 <fprintf@plt>
   16c1c:	str	r0, [fp, #-64]	; 0xffffffc0
   16c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c24:	movw	r1, #52447	; 0xccdf
   16c28:	movt	r1, #1
   16c2c:	str	r0, [fp, #-68]	; 0xffffffbc
   16c30:	mov	r0, r1
   16c34:	bl	11240 <gettext@plt>
   16c38:	movw	r1, #53165	; 0xcfad
   16c3c:	movt	r1, #1
   16c40:	movw	r3, #2022	; 0x7e6
   16c44:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16c48:	str	r0, [fp, #-72]	; 0xffffffb8
   16c4c:	mov	r0, lr
   16c50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16c54:	bl	11270 <fprintf@plt>
   16c58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16c5c:	movw	r2, #51338	; 0xc88a
   16c60:	movt	r2, #1
   16c64:	str	r0, [fp, #-76]	; 0xffffffb4
   16c68:	mov	r0, r2
   16c6c:	str	r2, [fp, #-80]	; 0xffffffb0
   16c70:	bl	11090 <fputs_unlocked@plt>
   16c74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16c78:	movw	r2, #52451	; 0xcce3
   16c7c:	movt	r2, #1
   16c80:	str	r0, [fp, #-84]	; 0xffffffac
   16c84:	mov	r0, r2
   16c88:	str	r1, [fp, #-88]	; 0xffffffa8
   16c8c:	bl	11240 <gettext@plt>
   16c90:	movw	r2, #52622	; 0xcd8e
   16c94:	movt	r2, #1
   16c98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16c9c:	str	r0, [fp, #-92]	; 0xffffffa4
   16ca0:	mov	r0, r1
   16ca4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16ca8:	bl	11270 <fprintf@plt>
   16cac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16cb0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16cb4:	str	r0, [fp, #-96]	; 0xffffffa0
   16cb8:	mov	r0, r2
   16cbc:	bl	11090 <fputs_unlocked@plt>
   16cc0:	ldr	r1, [fp, #12]
   16cc4:	cmp	r1, #9
   16cc8:	str	r0, [fp, #-100]	; 0xffffff9c
   16ccc:	str	r1, [fp, #-104]	; 0xffffff98
   16cd0:	bhi	17110 <__assert_fail@plt+0x5d98>
   16cd4:	add	r0, pc, #8
   16cd8:	ldr	r1, [fp, #-104]	; 0xffffff98
   16cdc:	ldr	r0, [r0, r1, lsl #2]
   16ce0:	mov	pc, r0
   16ce4:	andeq	r6, r1, ip, lsl #26
   16ce8:	andeq	r6, r1, r0, lsl sp
   16cec:	andeq	r6, r1, ip, asr #26
   16cf0:	muleq	r1, r0, sp
   16cf4:	andeq	r6, r1, ip, ror #27
   16cf8:	andeq	r6, r1, r4, asr lr
   16cfc:	andeq	r6, r1, r8, asr #29
   16d00:	andeq	r6, r1, r8, asr #30
   16d04:	ldrdeq	r6, [r1], -r4
   16d08:	andeq	r7, r1, ip, rrx
   16d0c:	b	171b0 <__assert_fail@plt+0x5e38>
   16d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d14:	movw	r1, #52656	; 0xcdb0
   16d18:	movt	r1, #1
   16d1c:	str	r0, [fp, #-108]	; 0xffffff94
   16d20:	mov	r0, r1
   16d24:	bl	11240 <gettext@plt>
   16d28:	ldr	r1, [fp, #8]
   16d2c:	ldr	r2, [r1]
   16d30:	ldr	r1, [fp, #-108]	; 0xffffff94
   16d34:	str	r0, [fp, #-112]	; 0xffffff90
   16d38:	mov	r0, r1
   16d3c:	ldr	r1, [fp, #-112]	; 0xffffff90
   16d40:	bl	11270 <fprintf@plt>
   16d44:	str	r0, [fp, #-116]	; 0xffffff8c
   16d48:	b	171b0 <__assert_fail@plt+0x5e38>
   16d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d50:	movw	r1, #52672	; 0xcdc0
   16d54:	movt	r1, #1
   16d58:	str	r0, [fp, #-120]	; 0xffffff88
   16d5c:	mov	r0, r1
   16d60:	bl	11240 <gettext@plt>
   16d64:	ldr	r1, [fp, #8]
   16d68:	ldr	r2, [r1]
   16d6c:	ldr	r1, [fp, #8]
   16d70:	ldr	r3, [r1, #4]
   16d74:	ldr	r1, [fp, #-120]	; 0xffffff88
   16d78:	str	r0, [fp, #-124]	; 0xffffff84
   16d7c:	mov	r0, r1
   16d80:	ldr	r1, [fp, #-124]	; 0xffffff84
   16d84:	bl	11270 <fprintf@plt>
   16d88:	str	r0, [fp, #-128]	; 0xffffff80
   16d8c:	b	171b0 <__assert_fail@plt+0x5e38>
   16d90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d94:	movw	r1, #52695	; 0xcdd7
   16d98:	movt	r1, #1
   16d9c:	str	r0, [fp, #-132]	; 0xffffff7c
   16da0:	mov	r0, r1
   16da4:	bl	11240 <gettext@plt>
   16da8:	ldr	r1, [fp, #8]
   16dac:	ldr	r2, [r1]
   16db0:	ldr	r1, [fp, #8]
   16db4:	ldr	r3, [r1, #4]
   16db8:	ldr	r1, [fp, #8]
   16dbc:	ldr	r1, [r1, #8]
   16dc0:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16dc4:	str	r0, [fp, #-136]	; 0xffffff78
   16dc8:	mov	r0, lr
   16dcc:	ldr	ip, [fp, #-136]	; 0xffffff78
   16dd0:	str	r1, [fp, #-140]	; 0xffffff74
   16dd4:	mov	r1, ip
   16dd8:	ldr	r4, [fp, #-140]	; 0xffffff74
   16ddc:	str	r4, [sp]
   16de0:	bl	11270 <fprintf@plt>
   16de4:	str	r0, [sp, #144]	; 0x90
   16de8:	b	171b0 <__assert_fail@plt+0x5e38>
   16dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16df0:	movw	r1, #52723	; 0xcdf3
   16df4:	movt	r1, #1
   16df8:	str	r0, [sp, #140]	; 0x8c
   16dfc:	mov	r0, r1
   16e00:	bl	11240 <gettext@plt>
   16e04:	ldr	r1, [fp, #8]
   16e08:	ldr	r2, [r1]
   16e0c:	ldr	r1, [fp, #8]
   16e10:	ldr	r3, [r1, #4]
   16e14:	ldr	r1, [fp, #8]
   16e18:	ldr	r1, [r1, #8]
   16e1c:	ldr	lr, [fp, #8]
   16e20:	ldr	lr, [lr, #12]
   16e24:	ldr	ip, [sp, #140]	; 0x8c
   16e28:	str	r0, [sp, #136]	; 0x88
   16e2c:	mov	r0, ip
   16e30:	ldr	r4, [sp, #136]	; 0x88
   16e34:	str	r1, [sp, #132]	; 0x84
   16e38:	mov	r1, r4
   16e3c:	ldr	r5, [sp, #132]	; 0x84
   16e40:	str	r5, [sp]
   16e44:	str	lr, [sp, #4]
   16e48:	bl	11270 <fprintf@plt>
   16e4c:	str	r0, [sp, #128]	; 0x80
   16e50:	b	171b0 <__assert_fail@plt+0x5e38>
   16e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e58:	movw	r1, #52755	; 0xce13
   16e5c:	movt	r1, #1
   16e60:	str	r0, [sp, #124]	; 0x7c
   16e64:	mov	r0, r1
   16e68:	bl	11240 <gettext@plt>
   16e6c:	ldr	r1, [fp, #8]
   16e70:	ldr	r2, [r1]
   16e74:	ldr	r1, [fp, #8]
   16e78:	ldr	r3, [r1, #4]
   16e7c:	ldr	r1, [fp, #8]
   16e80:	ldr	r1, [r1, #8]
   16e84:	ldr	lr, [fp, #8]
   16e88:	ldr	lr, [lr, #12]
   16e8c:	ldr	ip, [fp, #8]
   16e90:	ldr	ip, [ip, #16]
   16e94:	ldr	r4, [sp, #124]	; 0x7c
   16e98:	str	r0, [sp, #120]	; 0x78
   16e9c:	mov	r0, r4
   16ea0:	ldr	r5, [sp, #120]	; 0x78
   16ea4:	str	r1, [sp, #116]	; 0x74
   16ea8:	mov	r1, r5
   16eac:	ldr	r6, [sp, #116]	; 0x74
   16eb0:	str	r6, [sp]
   16eb4:	str	lr, [sp, #4]
   16eb8:	str	ip, [sp, #8]
   16ebc:	bl	11270 <fprintf@plt>
   16ec0:	str	r0, [sp, #112]	; 0x70
   16ec4:	b	171b0 <__assert_fail@plt+0x5e38>
   16ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ecc:	movw	r1, #52791	; 0xce37
   16ed0:	movt	r1, #1
   16ed4:	str	r0, [sp, #108]	; 0x6c
   16ed8:	mov	r0, r1
   16edc:	bl	11240 <gettext@plt>
   16ee0:	ldr	r1, [fp, #8]
   16ee4:	ldr	r2, [r1]
   16ee8:	ldr	r1, [fp, #8]
   16eec:	ldr	r3, [r1, #4]
   16ef0:	ldr	r1, [fp, #8]
   16ef4:	ldr	r1, [r1, #8]
   16ef8:	ldr	lr, [fp, #8]
   16efc:	ldr	lr, [lr, #12]
   16f00:	ldr	ip, [fp, #8]
   16f04:	ldr	ip, [ip, #16]
   16f08:	ldr	r4, [fp, #8]
   16f0c:	ldr	r4, [r4, #20]
   16f10:	ldr	r5, [sp, #108]	; 0x6c
   16f14:	str	r0, [sp, #104]	; 0x68
   16f18:	mov	r0, r5
   16f1c:	ldr	r6, [sp, #104]	; 0x68
   16f20:	str	r1, [sp, #100]	; 0x64
   16f24:	mov	r1, r6
   16f28:	ldr	r7, [sp, #100]	; 0x64
   16f2c:	str	r7, [sp]
   16f30:	str	lr, [sp, #4]
   16f34:	str	ip, [sp, #8]
   16f38:	str	r4, [sp, #12]
   16f3c:	bl	11270 <fprintf@plt>
   16f40:	str	r0, [sp, #96]	; 0x60
   16f44:	b	171b0 <__assert_fail@plt+0x5e38>
   16f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f4c:	movw	r1, #52831	; 0xce5f
   16f50:	movt	r1, #1
   16f54:	str	r0, [sp, #92]	; 0x5c
   16f58:	mov	r0, r1
   16f5c:	bl	11240 <gettext@plt>
   16f60:	ldr	r1, [fp, #8]
   16f64:	ldr	r2, [r1]
   16f68:	ldr	r1, [fp, #8]
   16f6c:	ldr	r3, [r1, #4]
   16f70:	ldr	r1, [fp, #8]
   16f74:	ldr	r1, [r1, #8]
   16f78:	ldr	lr, [fp, #8]
   16f7c:	ldr	lr, [lr, #12]
   16f80:	ldr	ip, [fp, #8]
   16f84:	ldr	ip, [ip, #16]
   16f88:	ldr	r4, [fp, #8]
   16f8c:	ldr	r4, [r4, #20]
   16f90:	ldr	r5, [fp, #8]
   16f94:	ldr	r5, [r5, #24]
   16f98:	ldr	r6, [sp, #92]	; 0x5c
   16f9c:	str	r0, [sp, #88]	; 0x58
   16fa0:	mov	r0, r6
   16fa4:	ldr	r7, [sp, #88]	; 0x58
   16fa8:	str	r1, [sp, #84]	; 0x54
   16fac:	mov	r1, r7
   16fb0:	ldr	r8, [sp, #84]	; 0x54
   16fb4:	str	r8, [sp]
   16fb8:	str	lr, [sp, #4]
   16fbc:	str	ip, [sp, #8]
   16fc0:	str	r4, [sp, #12]
   16fc4:	str	r5, [sp, #16]
   16fc8:	bl	11270 <fprintf@plt>
   16fcc:	str	r0, [sp, #80]	; 0x50
   16fd0:	b	171b0 <__assert_fail@plt+0x5e38>
   16fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fd8:	movw	r1, #52875	; 0xce8b
   16fdc:	movt	r1, #1
   16fe0:	str	r0, [sp, #76]	; 0x4c
   16fe4:	mov	r0, r1
   16fe8:	bl	11240 <gettext@plt>
   16fec:	ldr	r1, [fp, #8]
   16ff0:	ldr	r2, [r1]
   16ff4:	ldr	r1, [fp, #8]
   16ff8:	ldr	r3, [r1, #4]
   16ffc:	ldr	r1, [fp, #8]
   17000:	ldr	r1, [r1, #8]
   17004:	ldr	lr, [fp, #8]
   17008:	ldr	lr, [lr, #12]
   1700c:	ldr	ip, [fp, #8]
   17010:	ldr	ip, [ip, #16]
   17014:	ldr	r4, [fp, #8]
   17018:	ldr	r4, [r4, #20]
   1701c:	ldr	r5, [fp, #8]
   17020:	ldr	r5, [r5, #24]
   17024:	ldr	r6, [fp, #8]
   17028:	ldr	r6, [r6, #28]
   1702c:	ldr	r7, [sp, #76]	; 0x4c
   17030:	str	r0, [sp, #72]	; 0x48
   17034:	mov	r0, r7
   17038:	ldr	r8, [sp, #72]	; 0x48
   1703c:	str	r1, [sp, #68]	; 0x44
   17040:	mov	r1, r8
   17044:	ldr	r9, [sp, #68]	; 0x44
   17048:	str	r9, [sp]
   1704c:	str	lr, [sp, #4]
   17050:	str	ip, [sp, #8]
   17054:	str	r4, [sp, #12]
   17058:	str	r5, [sp, #16]
   1705c:	str	r6, [sp, #20]
   17060:	bl	11270 <fprintf@plt>
   17064:	str	r0, [sp, #64]	; 0x40
   17068:	b	171b0 <__assert_fail@plt+0x5e38>
   1706c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17070:	movw	r1, #52923	; 0xcebb
   17074:	movt	r1, #1
   17078:	str	r0, [sp, #60]	; 0x3c
   1707c:	mov	r0, r1
   17080:	bl	11240 <gettext@plt>
   17084:	ldr	r1, [fp, #8]
   17088:	ldr	r2, [r1]
   1708c:	ldr	r1, [fp, #8]
   17090:	ldr	r3, [r1, #4]
   17094:	ldr	r1, [fp, #8]
   17098:	ldr	r1, [r1, #8]
   1709c:	ldr	lr, [fp, #8]
   170a0:	ldr	lr, [lr, #12]
   170a4:	ldr	ip, [fp, #8]
   170a8:	ldr	ip, [ip, #16]
   170ac:	ldr	r4, [fp, #8]
   170b0:	ldr	r4, [r4, #20]
   170b4:	ldr	r5, [fp, #8]
   170b8:	ldr	r5, [r5, #24]
   170bc:	ldr	r6, [fp, #8]
   170c0:	ldr	r6, [r6, #28]
   170c4:	ldr	r7, [fp, #8]
   170c8:	ldr	r7, [r7, #32]
   170cc:	ldr	r8, [sp, #60]	; 0x3c
   170d0:	str	r0, [sp, #56]	; 0x38
   170d4:	mov	r0, r8
   170d8:	ldr	r9, [sp, #56]	; 0x38
   170dc:	str	r1, [sp, #52]	; 0x34
   170e0:	mov	r1, r9
   170e4:	ldr	sl, [sp, #52]	; 0x34
   170e8:	str	sl, [sp]
   170ec:	str	lr, [sp, #4]
   170f0:	str	ip, [sp, #8]
   170f4:	str	r4, [sp, #12]
   170f8:	str	r5, [sp, #16]
   170fc:	str	r6, [sp, #20]
   17100:	str	r7, [sp, #24]
   17104:	bl	11270 <fprintf@plt>
   17108:	str	r0, [sp, #48]	; 0x30
   1710c:	b	171b0 <__assert_fail@plt+0x5e38>
   17110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17114:	movw	r1, #52975	; 0xceef
   17118:	movt	r1, #1
   1711c:	str	r0, [sp, #44]	; 0x2c
   17120:	mov	r0, r1
   17124:	bl	11240 <gettext@plt>
   17128:	ldr	r1, [fp, #8]
   1712c:	ldr	r2, [r1]
   17130:	ldr	r1, [fp, #8]
   17134:	ldr	r3, [r1, #4]
   17138:	ldr	r1, [fp, #8]
   1713c:	ldr	r1, [r1, #8]
   17140:	ldr	lr, [fp, #8]
   17144:	ldr	lr, [lr, #12]
   17148:	ldr	ip, [fp, #8]
   1714c:	ldr	ip, [ip, #16]
   17150:	ldr	r4, [fp, #8]
   17154:	ldr	r4, [r4, #20]
   17158:	ldr	r5, [fp, #8]
   1715c:	ldr	r5, [r5, #24]
   17160:	ldr	r6, [fp, #8]
   17164:	ldr	r6, [r6, #28]
   17168:	ldr	r7, [fp, #8]
   1716c:	ldr	r7, [r7, #32]
   17170:	ldr	r8, [sp, #44]	; 0x2c
   17174:	str	r0, [sp, #40]	; 0x28
   17178:	mov	r0, r8
   1717c:	ldr	r9, [sp, #40]	; 0x28
   17180:	str	r1, [sp, #36]	; 0x24
   17184:	mov	r1, r9
   17188:	ldr	sl, [sp, #36]	; 0x24
   1718c:	str	sl, [sp]
   17190:	str	lr, [sp, #4]
   17194:	str	ip, [sp, #8]
   17198:	str	r4, [sp, #12]
   1719c:	str	r5, [sp, #16]
   171a0:	str	r6, [sp, #20]
   171a4:	str	r7, [sp, #24]
   171a8:	bl	11270 <fprintf@plt>
   171ac:	str	r0, [sp, #32]
   171b0:	sub	sp, fp, #28
   171b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171b8:	push	{fp, lr}
   171bc:	mov	fp, sp
   171c0:	sub	sp, sp, #32
   171c4:	ldr	ip, [fp, #8]
   171c8:	str	r0, [fp, #-4]
   171cc:	str	r1, [fp, #-8]
   171d0:	str	r2, [fp, #-12]
   171d4:	str	r3, [sp, #16]
   171d8:	movw	r0, #0
   171dc:	str	r0, [sp, #12]
   171e0:	str	ip, [sp, #8]
   171e4:	ldr	r0, [fp, #8]
   171e8:	ldr	r1, [sp, #12]
   171ec:	add	r0, r0, r1, lsl #2
   171f0:	ldr	r0, [r0]
   171f4:	movw	r1, #0
   171f8:	cmp	r0, r1
   171fc:	beq	17214 <__assert_fail@plt+0x5e9c>
   17200:	b	17204 <__assert_fail@plt+0x5e8c>
   17204:	ldr	r0, [sp, #12]
   17208:	add	r0, r0, #1
   1720c:	str	r0, [sp, #12]
   17210:	b	171e4 <__assert_fail@plt+0x5e6c>
   17214:	ldr	r0, [fp, #-4]
   17218:	ldr	r1, [fp, #-8]
   1721c:	ldr	r2, [fp, #-12]
   17220:	ldr	r3, [sp, #16]
   17224:	ldr	ip, [fp, #8]
   17228:	ldr	lr, [sp, #12]
   1722c:	str	ip, [sp]
   17230:	str	lr, [sp, #4]
   17234:	bl	16b94 <__assert_fail@plt+0x581c>
   17238:	mov	sp, fp
   1723c:	pop	{fp, pc}
   17240:	push	{fp, lr}
   17244:	mov	fp, sp
   17248:	sub	sp, sp, #80	; 0x50
   1724c:	ldr	ip, [fp, #8]
   17250:	str	ip, [fp, #-4]
   17254:	str	r0, [fp, #-8]
   17258:	str	r1, [fp, #-12]
   1725c:	str	r2, [fp, #-16]
   17260:	str	r3, [fp, #-20]	; 0xffffffec
   17264:	movw	r0, #0
   17268:	str	r0, [fp, #-24]	; 0xffffffe8
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	cmp	r0, #10
   17274:	movw	r0, #0
   17278:	str	r0, [sp, #12]
   1727c:	bcs	172b4 <__assert_fail@plt+0x5f3c>
   17280:	ldr	r0, [fp, #-4]
   17284:	add	r1, r0, #4
   17288:	str	r1, [fp, #-4]
   1728c:	ldr	r0, [r0]
   17290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17294:	add	r2, sp, #16
   17298:	add	r1, r2, r1, lsl #2
   1729c:	str	r0, [r1]
   172a0:	movw	r1, #0
   172a4:	cmp	r0, r1
   172a8:	movw	r0, #0
   172ac:	movne	r0, #1
   172b0:	str	r0, [sp, #12]
   172b4:	ldr	r0, [sp, #12]
   172b8:	tst	r0, #1
   172bc:	beq	172d4 <__assert_fail@plt+0x5f5c>
   172c0:	b	172c4 <__assert_fail@plt+0x5f4c>
   172c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c8:	add	r0, r0, #1
   172cc:	str	r0, [fp, #-24]	; 0xffffffe8
   172d0:	b	1726c <__assert_fail@plt+0x5ef4>
   172d4:	add	r0, sp, #16
   172d8:	ldr	r1, [fp, #-8]
   172dc:	ldr	r2, [fp, #-12]
   172e0:	ldr	r3, [fp, #-16]
   172e4:	ldr	ip, [fp, #-20]	; 0xffffffec
   172e8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   172ec:	str	r0, [sp, #8]
   172f0:	mov	r0, r1
   172f4:	mov	r1, r2
   172f8:	mov	r2, r3
   172fc:	mov	r3, ip
   17300:	ldr	ip, [sp, #8]
   17304:	str	ip, [sp]
   17308:	str	lr, [sp, #4]
   1730c:	bl	16b94 <__assert_fail@plt+0x581c>
   17310:	mov	sp, fp
   17314:	pop	{fp, pc}
   17318:	push	{fp, lr}
   1731c:	mov	fp, sp
   17320:	sub	sp, sp, #32
   17324:	str	r0, [fp, #-4]
   17328:	str	r1, [fp, #-8]
   1732c:	str	r2, [fp, #-12]
   17330:	str	r3, [sp, #16]
   17334:	add	r0, fp, #8
   17338:	str	r0, [sp, #12]
   1733c:	ldr	r0, [fp, #-4]
   17340:	ldr	r1, [fp, #-8]
   17344:	ldr	r2, [fp, #-12]
   17348:	ldr	r3, [sp, #16]
   1734c:	ldr	ip, [sp, #12]
   17350:	mov	lr, sp
   17354:	str	ip, [lr]
   17358:	bl	17240 <__assert_fail@plt+0x5ec8>
   1735c:	add	r0, sp, #12
   17360:	str	r0, [sp, #8]
   17364:	mov	sp, fp
   17368:	pop	{fp, pc}
   1736c:	push	{fp, lr}
   17370:	mov	fp, sp
   17374:	sub	sp, sp, #16
   17378:	movw	r0, #57724	; 0xe17c
   1737c:	movt	r0, #2
   17380:	ldr	r1, [r0]
   17384:	movw	r0, #51338	; 0xc88a
   17388:	movt	r0, #1
   1738c:	bl	11090 <fputs_unlocked@plt>
   17390:	movw	r1, #53035	; 0xcf2b
   17394:	movt	r1, #1
   17398:	str	r0, [fp, #-4]
   1739c:	mov	r0, r1
   173a0:	bl	11240 <gettext@plt>
   173a4:	movw	r1, #53055	; 0xcf3f
   173a8:	movt	r1, #1
   173ac:	bl	110b4 <printf@plt>
   173b0:	movw	r1, #53077	; 0xcf55
   173b4:	movt	r1, #1
   173b8:	str	r0, [sp, #8]
   173bc:	mov	r0, r1
   173c0:	bl	11240 <gettext@plt>
   173c4:	movw	r1, #50924	; 0xc6ec
   173c8:	movt	r1, #1
   173cc:	movw	r2, #51147	; 0xc7cb
   173d0:	movt	r2, #1
   173d4:	bl	110b4 <printf@plt>
   173d8:	movw	r1, #53097	; 0xcf69
   173dc:	movt	r1, #1
   173e0:	str	r0, [sp, #4]
   173e4:	mov	r0, r1
   173e8:	bl	11240 <gettext@plt>
   173ec:	movw	r1, #53136	; 0xcf90
   173f0:	movt	r1, #1
   173f4:	bl	110b4 <printf@plt>
   173f8:	str	r0, [sp]
   173fc:	mov	sp, fp
   17400:	pop	{fp, pc}
   17404:	push	{fp, lr}
   17408:	mov	fp, sp
   1740c:	sub	sp, sp, #16
   17410:	str	r0, [fp, #-4]
   17414:	str	r1, [sp, #8]
   17418:	str	r2, [sp, #4]
   1741c:	ldr	r0, [fp, #-4]
   17420:	ldr	r1, [sp, #8]
   17424:	ldr	r2, [sp, #4]
   17428:	bl	17434 <__assert_fail@plt+0x60bc>
   1742c:	mov	sp, fp
   17430:	pop	{fp, pc}
   17434:	push	{fp, lr}
   17438:	mov	fp, sp
   1743c:	sub	sp, sp, #16
   17440:	str	r0, [fp, #-4]
   17444:	str	r1, [sp, #8]
   17448:	str	r2, [sp, #4]
   1744c:	ldr	r0, [fp, #-4]
   17450:	ldr	r1, [sp, #8]
   17454:	ldr	r2, [sp, #4]
   17458:	bl	1ab94 <__assert_fail@plt+0x981c>
   1745c:	str	r0, [sp]
   17460:	ldr	r0, [sp]
   17464:	movw	r1, #0
   17468:	cmp	r0, r1
   1746c:	bne	1749c <__assert_fail@plt+0x6124>
   17470:	ldr	r0, [fp, #-4]
   17474:	movw	r1, #0
   17478:	cmp	r0, r1
   1747c:	beq	17498 <__assert_fail@plt+0x6120>
   17480:	ldr	r0, [sp, #8]
   17484:	cmp	r0, #0
   17488:	beq	1749c <__assert_fail@plt+0x6124>
   1748c:	ldr	r0, [sp, #4]
   17490:	cmp	r0, #0
   17494:	beq	1749c <__assert_fail@plt+0x6124>
   17498:	bl	1a284 <__assert_fail@plt+0x8f0c>
   1749c:	ldr	r0, [sp]
   174a0:	mov	sp, fp
   174a4:	pop	{fp, pc}
   174a8:	push	{fp, lr}
   174ac:	mov	fp, sp
   174b0:	sub	sp, sp, #8
   174b4:	str	r0, [sp, #4]
   174b8:	ldr	r0, [sp, #4]
   174bc:	bl	1a370 <__assert_fail@plt+0x8ff8>
   174c0:	bl	174cc <__assert_fail@plt+0x6154>
   174c4:	mov	sp, fp
   174c8:	pop	{fp, pc}
   174cc:	push	{fp, lr}
   174d0:	mov	fp, sp
   174d4:	sub	sp, sp, #8
   174d8:	str	r0, [sp, #4]
   174dc:	ldr	r0, [sp, #4]
   174e0:	movw	r1, #0
   174e4:	cmp	r0, r1
   174e8:	bne	174f0 <__assert_fail@plt+0x6178>
   174ec:	bl	1a284 <__assert_fail@plt+0x8f0c>
   174f0:	ldr	r0, [sp, #4]
   174f4:	mov	sp, fp
   174f8:	pop	{fp, pc}
   174fc:	push	{fp, lr}
   17500:	mov	fp, sp
   17504:	sub	sp, sp, #8
   17508:	str	r0, [sp, #4]
   1750c:	ldr	r0, [sp, #4]
   17510:	bl	1a8d0 <__assert_fail@plt+0x9558>
   17514:	bl	174cc <__assert_fail@plt+0x6154>
   17518:	mov	sp, fp
   1751c:	pop	{fp, pc}
   17520:	push	{fp, lr}
   17524:	mov	fp, sp
   17528:	sub	sp, sp, #8
   1752c:	str	r0, [sp, #4]
   17530:	ldr	r0, [sp, #4]
   17534:	bl	174a8 <__assert_fail@plt+0x6130>
   17538:	mov	sp, fp
   1753c:	pop	{fp, pc}
   17540:	push	{fp, lr}
   17544:	mov	fp, sp
   17548:	sub	sp, sp, #16
   1754c:	str	r0, [fp, #-4]
   17550:	str	r1, [sp, #8]
   17554:	ldr	r0, [fp, #-4]
   17558:	ldr	r1, [sp, #8]
   1755c:	bl	1a3e0 <__assert_fail@plt+0x9068>
   17560:	str	r0, [sp, #4]
   17564:	ldr	r0, [sp, #4]
   17568:	movw	r1, #0
   1756c:	cmp	r0, r1
   17570:	bne	17594 <__assert_fail@plt+0x621c>
   17574:	ldr	r0, [fp, #-4]
   17578:	movw	r1, #0
   1757c:	cmp	r0, r1
   17580:	beq	17590 <__assert_fail@plt+0x6218>
   17584:	ldr	r0, [sp, #8]
   17588:	cmp	r0, #0
   1758c:	beq	17594 <__assert_fail@plt+0x621c>
   17590:	bl	1a284 <__assert_fail@plt+0x8f0c>
   17594:	ldr	r0, [sp, #4]
   17598:	mov	sp, fp
   1759c:	pop	{fp, pc}
   175a0:	push	{fp, lr}
   175a4:	mov	fp, sp
   175a8:	sub	sp, sp, #8
   175ac:	str	r0, [sp, #4]
   175b0:	str	r1, [sp]
   175b4:	ldr	r0, [sp, #4]
   175b8:	ldr	r1, [sp]
   175bc:	bl	1a910 <__assert_fail@plt+0x9598>
   175c0:	bl	174cc <__assert_fail@plt+0x6154>
   175c4:	mov	sp, fp
   175c8:	pop	{fp, pc}
   175cc:	push	{fp, lr}
   175d0:	mov	fp, sp
   175d4:	sub	sp, sp, #16
   175d8:	str	r0, [fp, #-4]
   175dc:	str	r1, [sp, #8]
   175e0:	str	r2, [sp, #4]
   175e4:	ldr	r0, [fp, #-4]
   175e8:	ldr	r1, [sp, #8]
   175ec:	ldr	r2, [sp, #4]
   175f0:	bl	1aa08 <__assert_fail@plt+0x9690>
   175f4:	bl	174cc <__assert_fail@plt+0x6154>
   175f8:	mov	sp, fp
   175fc:	pop	{fp, pc}
   17600:	push	{fp, lr}
   17604:	mov	fp, sp
   17608:	sub	sp, sp, #8
   1760c:	str	r0, [sp, #4]
   17610:	str	r1, [sp]
   17614:	ldr	r1, [sp, #4]
   17618:	ldr	r2, [sp]
   1761c:	movw	r0, #0
   17620:	bl	17434 <__assert_fail@plt+0x60bc>
   17624:	mov	sp, fp
   17628:	pop	{fp, pc}
   1762c:	push	{fp, lr}
   17630:	mov	fp, sp
   17634:	sub	sp, sp, #8
   17638:	str	r0, [sp, #4]
   1763c:	str	r1, [sp]
   17640:	ldr	r1, [sp, #4]
   17644:	ldr	r2, [sp]
   17648:	movw	r0, #0
   1764c:	bl	175cc <__assert_fail@plt+0x6254>
   17650:	mov	sp, fp
   17654:	pop	{fp, pc}
   17658:	push	{fp, lr}
   1765c:	mov	fp, sp
   17660:	sub	sp, sp, #8
   17664:	str	r0, [sp, #4]
   17668:	str	r1, [sp]
   1766c:	ldr	r0, [sp, #4]
   17670:	ldr	r1, [sp]
   17674:	movw	r2, #1
   17678:	bl	17684 <__assert_fail@plt+0x630c>
   1767c:	mov	sp, fp
   17680:	pop	{fp, pc}
   17684:	push	{fp, lr}
   17688:	mov	fp, sp
   1768c:	sub	sp, sp, #16
   17690:	str	r0, [fp, #-4]
   17694:	str	r1, [sp, #8]
   17698:	str	r2, [sp, #4]
   1769c:	ldr	r0, [sp, #8]
   176a0:	ldr	r0, [r0]
   176a4:	str	r0, [sp]
   176a8:	ldr	r0, [fp, #-4]
   176ac:	movw	r1, #0
   176b0:	cmp	r0, r1
   176b4:	bne	17700 <__assert_fail@plt+0x6388>
   176b8:	ldr	r0, [sp]
   176bc:	cmp	r0, #0
   176c0:	bne	176fc <__assert_fail@plt+0x6384>
   176c4:	ldr	r0, [sp, #4]
   176c8:	movw	r1, #64	; 0x40
   176cc:	udiv	r0, r1, r0
   176d0:	str	r0, [sp]
   176d4:	ldr	r0, [sp]
   176d8:	cmp	r0, #0
   176dc:	movw	r0, #0
   176e0:	movne	r0, #1
   176e4:	mvn	r1, #0
   176e8:	eor	r0, r0, r1
   176ec:	and	r0, r0, #1
   176f0:	ldr	r1, [sp]
   176f4:	add	r0, r1, r0
   176f8:	str	r0, [sp]
   176fc:	b	17730 <__assert_fail@plt+0x63b8>
   17700:	ldr	r0, [sp]
   17704:	ldr	r1, [sp]
   17708:	lsr	r1, r1, #1
   1770c:	add	r1, r1, #1
   17710:	adds	r0, r0, r1
   17714:	mov	r1, #0
   17718:	adc	r1, r1, #0
   1771c:	str	r0, [sp]
   17720:	tst	r1, #1
   17724:	beq	1772c <__assert_fail@plt+0x63b4>
   17728:	bl	1a284 <__assert_fail@plt+0x8f0c>
   1772c:	b	17730 <__assert_fail@plt+0x63b8>
   17730:	ldr	r0, [fp, #-4]
   17734:	ldr	r1, [sp]
   17738:	ldr	r2, [sp, #4]
   1773c:	bl	17434 <__assert_fail@plt+0x60bc>
   17740:	str	r0, [fp, #-4]
   17744:	ldr	r0, [sp]
   17748:	ldr	r1, [sp, #8]
   1774c:	str	r0, [r1]
   17750:	ldr	r0, [fp, #-4]
   17754:	mov	sp, fp
   17758:	pop	{fp, pc}
   1775c:	push	{fp, lr}
   17760:	mov	fp, sp
   17764:	sub	sp, sp, #376	; 0x178
   17768:	ldr	ip, [fp, #8]
   1776c:	str	r0, [fp, #-4]
   17770:	str	r1, [fp, #-8]
   17774:	str	r2, [fp, #-12]
   17778:	str	r3, [fp, #-16]
   1777c:	ldr	r0, [fp, #-8]
   17780:	ldr	r0, [r0]
   17784:	str	r0, [fp, #-20]	; 0xffffffec
   17788:	ldr	r0, [fp, #-20]	; 0xffffffec
   1778c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17790:	asr	r1, r1, #1
   17794:	add	r1, r0, r1
   17798:	mov	r2, #1
   1779c:	cmp	r1, r0
   177a0:	movwvc	r2, #0
   177a4:	str	r1, [fp, #-24]	; 0xffffffe8
   177a8:	tst	r2, #1
   177ac:	str	ip, [fp, #-36]	; 0xffffffdc
   177b0:	beq	177bc <__assert_fail@plt+0x6444>
   177b4:	ldr	r0, [pc, #4044]	; 18788 <__assert_fail@plt+0x7410>
   177b8:	str	r0, [fp, #-24]	; 0xffffffe8
   177bc:	ldr	r0, [fp, #-16]
   177c0:	movw	r1, #0
   177c4:	cmp	r1, r0
   177c8:	bgt	177e4 <__assert_fail@plt+0x646c>
   177cc:	ldr	r0, [fp, #-16]
   177d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177d4:	cmp	r0, r1
   177d8:	bge	177e4 <__assert_fail@plt+0x646c>
   177dc:	ldr	r0, [fp, #-16]
   177e0:	str	r0, [fp, #-24]	; 0xffffffe8
   177e4:	b	17bbc <__assert_fail@plt+0x6844>
   177e8:	b	177ec <__assert_fail@plt+0x6474>
   177ec:	ldr	r0, [fp, #8]
   177f0:	cmp	r0, #0
   177f4:	bge	17908 <__assert_fail@plt+0x6590>
   177f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177fc:	cmp	r0, #0
   17800:	bge	1788c <__assert_fail@plt+0x6514>
   17804:	b	17808 <__assert_fail@plt+0x6490>
   17808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r1, [fp, #8]
   17810:	movw	r2, #127	; 0x7f
   17814:	sdiv	r1, r2, r1
   17818:	cmp	r0, r1
   1781c:	blt	179a8 <__assert_fail@plt+0x6630>
   17820:	b	179c0 <__assert_fail@plt+0x6648>
   17824:	b	17828 <__assert_fail@plt+0x64b0>
   17828:	ldr	r0, [pc, #4076]	; 1881c <__assert_fail@plt+0x74a4>
   1782c:	ldr	r1, [fp, #8]
   17830:	cmp	r1, r0
   17834:	blt	1784c <__assert_fail@plt+0x64d4>
   17838:	b	17858 <__assert_fail@plt+0x64e0>
   1783c:	ldr	r0, [fp, #8]
   17840:	movw	r1, #0
   17844:	cmp	r1, r0
   17848:	bge	17858 <__assert_fail@plt+0x64e0>
   1784c:	movw	r0, #0
   17850:	str	r0, [fp, #-40]	; 0xffffffd8
   17854:	b	17870 <__assert_fail@plt+0x64f8>
   17858:	ldr	r0, [fp, #8]
   1785c:	movw	r1, #0
   17860:	sub	r0, r1, r0
   17864:	movw	r1, #127	; 0x7f
   17868:	sdiv	r0, r1, r0
   1786c:	str	r0, [fp, #-40]	; 0xffffffd8
   17870:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17878:	mvn	r2, #0
   1787c:	sub	r1, r2, r1
   17880:	cmp	r0, r1
   17884:	ble	179a8 <__assert_fail@plt+0x6630>
   17888:	b	179c0 <__assert_fail@plt+0x6648>
   1788c:	b	17890 <__assert_fail@plt+0x6518>
   17890:	b	178ec <__assert_fail@plt+0x6574>
   17894:	b	178ec <__assert_fail@plt+0x6574>
   17898:	ldr	r0, [fp, #8]
   1789c:	cmn	r0, #1
   178a0:	bne	178ec <__assert_fail@plt+0x6574>
   178a4:	b	178a8 <__assert_fail@plt+0x6530>
   178a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178ac:	mvn	r1, #127	; 0x7f
   178b0:	add	r0, r0, r1
   178b4:	movw	r1, #0
   178b8:	cmp	r1, r0
   178bc:	blt	179a8 <__assert_fail@plt+0x6630>
   178c0:	b	179c0 <__assert_fail@plt+0x6648>
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	movw	r1, #0
   178cc:	cmp	r1, r0
   178d0:	bge	179c0 <__assert_fail@plt+0x6648>
   178d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178d8:	sub	r0, r0, #1
   178dc:	movw	r1, #127	; 0x7f
   178e0:	cmp	r1, r0
   178e4:	blt	179a8 <__assert_fail@plt+0x6630>
   178e8:	b	179c0 <__assert_fail@plt+0x6648>
   178ec:	ldr	r0, [fp, #8]
   178f0:	mvn	r1, #127	; 0x7f
   178f4:	sdiv	r0, r1, r0
   178f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178fc:	cmp	r0, r1
   17900:	blt	179a8 <__assert_fail@plt+0x6630>
   17904:	b	179c0 <__assert_fail@plt+0x6648>
   17908:	ldr	r0, [fp, #8]
   1790c:	cmp	r0, #0
   17910:	bne	17918 <__assert_fail@plt+0x65a0>
   17914:	b	179c0 <__assert_fail@plt+0x6648>
   17918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1791c:	cmp	r0, #0
   17920:	bge	17990 <__assert_fail@plt+0x6618>
   17924:	b	17928 <__assert_fail@plt+0x65b0>
   17928:	b	17974 <__assert_fail@plt+0x65fc>
   1792c:	b	17974 <__assert_fail@plt+0x65fc>
   17930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17934:	cmn	r0, #1
   17938:	bne	17974 <__assert_fail@plt+0x65fc>
   1793c:	b	17940 <__assert_fail@plt+0x65c8>
   17940:	ldr	r0, [fp, #8]
   17944:	mvn	r1, #127	; 0x7f
   17948:	add	r0, r0, r1
   1794c:	movw	r1, #0
   17950:	cmp	r1, r0
   17954:	blt	179a8 <__assert_fail@plt+0x6630>
   17958:	b	179c0 <__assert_fail@plt+0x6648>
   1795c:	ldr	r0, [fp, #8]
   17960:	sub	r0, r0, #1
   17964:	movw	r1, #127	; 0x7f
   17968:	cmp	r1, r0
   1796c:	blt	179a8 <__assert_fail@plt+0x6630>
   17970:	b	179c0 <__assert_fail@plt+0x6648>
   17974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17978:	mvn	r1, #127	; 0x7f
   1797c:	sdiv	r0, r1, r0
   17980:	ldr	r1, [fp, #8]
   17984:	cmp	r0, r1
   17988:	blt	179a8 <__assert_fail@plt+0x6630>
   1798c:	b	179c0 <__assert_fail@plt+0x6648>
   17990:	ldr	r0, [fp, #8]
   17994:	movw	r1, #127	; 0x7f
   17998:	sdiv	r0, r1, r0
   1799c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179a0:	cmp	r0, r1
   179a4:	bge	179c0 <__assert_fail@plt+0x6648>
   179a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179ac:	ldr	r1, [fp, #8]
   179b0:	mul	r0, r0, r1
   179b4:	sxtb	r0, r0
   179b8:	str	r0, [fp, #-28]	; 0xffffffe4
   179bc:	b	18bd4 <__assert_fail@plt+0x785c>
   179c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179c4:	ldr	r1, [fp, #8]
   179c8:	mul	r0, r0, r1
   179cc:	sxtb	r0, r0
   179d0:	str	r0, [fp, #-28]	; 0xffffffe4
   179d4:	b	18be4 <__assert_fail@plt+0x786c>
   179d8:	ldr	r0, [fp, #8]
   179dc:	cmp	r0, #0
   179e0:	bge	17af0 <__assert_fail@plt+0x6778>
   179e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e8:	cmp	r0, #0
   179ec:	bge	17a78 <__assert_fail@plt+0x6700>
   179f0:	b	179f4 <__assert_fail@plt+0x667c>
   179f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179f8:	ldr	r1, [fp, #8]
   179fc:	movw	r2, #255	; 0xff
   17a00:	sdiv	r1, r2, r1
   17a04:	cmp	r0, r1
   17a08:	blt	17b8c <__assert_fail@plt+0x6814>
   17a0c:	b	17ba4 <__assert_fail@plt+0x682c>
   17a10:	b	17a14 <__assert_fail@plt+0x669c>
   17a14:	ldr	r0, [pc, #3584]	; 1881c <__assert_fail@plt+0x74a4>
   17a18:	ldr	r1, [fp, #8]
   17a1c:	cmp	r1, r0
   17a20:	blt	17a38 <__assert_fail@plt+0x66c0>
   17a24:	b	17a44 <__assert_fail@plt+0x66cc>
   17a28:	ldr	r0, [fp, #8]
   17a2c:	movw	r1, #0
   17a30:	cmp	r1, r0
   17a34:	bge	17a44 <__assert_fail@plt+0x66cc>
   17a38:	movw	r0, #0
   17a3c:	str	r0, [fp, #-44]	; 0xffffffd4
   17a40:	b	17a5c <__assert_fail@plt+0x66e4>
   17a44:	ldr	r0, [fp, #8]
   17a48:	movw	r1, #0
   17a4c:	sub	r0, r1, r0
   17a50:	movw	r1, #255	; 0xff
   17a54:	sdiv	r0, r1, r0
   17a58:	str	r0, [fp, #-44]	; 0xffffffd4
   17a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a64:	mvn	r2, #0
   17a68:	sub	r1, r2, r1
   17a6c:	cmp	r0, r1
   17a70:	ble	17b8c <__assert_fail@plt+0x6814>
   17a74:	b	17ba4 <__assert_fail@plt+0x682c>
   17a78:	b	17a7c <__assert_fail@plt+0x6704>
   17a7c:	b	17ad4 <__assert_fail@plt+0x675c>
   17a80:	b	17ad4 <__assert_fail@plt+0x675c>
   17a84:	ldr	r0, [fp, #8]
   17a88:	cmn	r0, #1
   17a8c:	bne	17ad4 <__assert_fail@plt+0x675c>
   17a90:	b	17a94 <__assert_fail@plt+0x671c>
   17a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a98:	add	r0, r0, #0
   17a9c:	movw	r1, #0
   17aa0:	cmp	r1, r0
   17aa4:	blt	17b8c <__assert_fail@plt+0x6814>
   17aa8:	b	17ba4 <__assert_fail@plt+0x682c>
   17aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab0:	movw	r1, #0
   17ab4:	cmp	r1, r0
   17ab8:	bge	17ba4 <__assert_fail@plt+0x682c>
   17abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac0:	sub	r0, r0, #1
   17ac4:	mvn	r1, #0
   17ac8:	cmp	r1, r0
   17acc:	blt	17b8c <__assert_fail@plt+0x6814>
   17ad0:	b	17ba4 <__assert_fail@plt+0x682c>
   17ad4:	ldr	r0, [fp, #8]
   17ad8:	movw	r1, #0
   17adc:	sdiv	r0, r1, r0
   17ae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ae4:	cmp	r0, r1
   17ae8:	blt	17b8c <__assert_fail@plt+0x6814>
   17aec:	b	17ba4 <__assert_fail@plt+0x682c>
   17af0:	ldr	r0, [fp, #8]
   17af4:	cmp	r0, #0
   17af8:	bne	17b00 <__assert_fail@plt+0x6788>
   17afc:	b	17ba4 <__assert_fail@plt+0x682c>
   17b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b04:	cmp	r0, #0
   17b08:	bge	17b74 <__assert_fail@plt+0x67fc>
   17b0c:	b	17b10 <__assert_fail@plt+0x6798>
   17b10:	b	17b58 <__assert_fail@plt+0x67e0>
   17b14:	b	17b58 <__assert_fail@plt+0x67e0>
   17b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b1c:	cmn	r0, #1
   17b20:	bne	17b58 <__assert_fail@plt+0x67e0>
   17b24:	b	17b28 <__assert_fail@plt+0x67b0>
   17b28:	ldr	r0, [fp, #8]
   17b2c:	add	r0, r0, #0
   17b30:	movw	r1, #0
   17b34:	cmp	r1, r0
   17b38:	blt	17b8c <__assert_fail@plt+0x6814>
   17b3c:	b	17ba4 <__assert_fail@plt+0x682c>
   17b40:	ldr	r0, [fp, #8]
   17b44:	sub	r0, r0, #1
   17b48:	mvn	r1, #0
   17b4c:	cmp	r1, r0
   17b50:	blt	17b8c <__assert_fail@plt+0x6814>
   17b54:	b	17ba4 <__assert_fail@plt+0x682c>
   17b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b5c:	movw	r1, #0
   17b60:	sdiv	r0, r1, r0
   17b64:	ldr	r1, [fp, #8]
   17b68:	cmp	r0, r1
   17b6c:	blt	17b8c <__assert_fail@plt+0x6814>
   17b70:	b	17ba4 <__assert_fail@plt+0x682c>
   17b74:	ldr	r0, [fp, #8]
   17b78:	movw	r1, #255	; 0xff
   17b7c:	sdiv	r0, r1, r0
   17b80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b84:	cmp	r0, r1
   17b88:	bge	17ba4 <__assert_fail@plt+0x682c>
   17b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b90:	ldr	r1, [fp, #8]
   17b94:	mul	r0, r0, r1
   17b98:	and	r0, r0, #255	; 0xff
   17b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   17ba0:	b	18bd4 <__assert_fail@plt+0x785c>
   17ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ba8:	ldr	r1, [fp, #8]
   17bac:	mul	r0, r0, r1
   17bb0:	and	r0, r0, #255	; 0xff
   17bb4:	str	r0, [fp, #-28]	; 0xffffffe4
   17bb8:	b	18be4 <__assert_fail@plt+0x786c>
   17bbc:	b	17f94 <__assert_fail@plt+0x6c1c>
   17bc0:	b	17bc4 <__assert_fail@plt+0x684c>
   17bc4:	ldr	r0, [fp, #8]
   17bc8:	cmp	r0, #0
   17bcc:	bge	17ce0 <__assert_fail@plt+0x6968>
   17bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd4:	cmp	r0, #0
   17bd8:	bge	17c64 <__assert_fail@plt+0x68ec>
   17bdc:	b	17be0 <__assert_fail@plt+0x6868>
   17be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be4:	ldr	r1, [fp, #8]
   17be8:	movw	r2, #32767	; 0x7fff
   17bec:	sdiv	r1, r2, r1
   17bf0:	cmp	r0, r1
   17bf4:	blt	17d80 <__assert_fail@plt+0x6a08>
   17bf8:	b	17d98 <__assert_fail@plt+0x6a20>
   17bfc:	b	17c00 <__assert_fail@plt+0x6888>
   17c00:	ldr	r0, [pc, #3092]	; 1881c <__assert_fail@plt+0x74a4>
   17c04:	ldr	r1, [fp, #8]
   17c08:	cmp	r1, r0
   17c0c:	blt	17c24 <__assert_fail@plt+0x68ac>
   17c10:	b	17c30 <__assert_fail@plt+0x68b8>
   17c14:	ldr	r0, [fp, #8]
   17c18:	movw	r1, #0
   17c1c:	cmp	r1, r0
   17c20:	bge	17c30 <__assert_fail@plt+0x68b8>
   17c24:	movw	r0, #0
   17c28:	str	r0, [fp, #-48]	; 0xffffffd0
   17c2c:	b	17c48 <__assert_fail@plt+0x68d0>
   17c30:	ldr	r0, [fp, #8]
   17c34:	movw	r1, #0
   17c38:	sub	r0, r1, r0
   17c3c:	movw	r1, #32767	; 0x7fff
   17c40:	sdiv	r0, r1, r0
   17c44:	str	r0, [fp, #-48]	; 0xffffffd0
   17c48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c50:	mvn	r2, #0
   17c54:	sub	r1, r2, r1
   17c58:	cmp	r0, r1
   17c5c:	ble	17d80 <__assert_fail@plt+0x6a08>
   17c60:	b	17d98 <__assert_fail@plt+0x6a20>
   17c64:	b	17c68 <__assert_fail@plt+0x68f0>
   17c68:	b	17cc4 <__assert_fail@plt+0x694c>
   17c6c:	b	17cc4 <__assert_fail@plt+0x694c>
   17c70:	ldr	r0, [fp, #8]
   17c74:	cmn	r0, #1
   17c78:	bne	17cc4 <__assert_fail@plt+0x694c>
   17c7c:	b	17c80 <__assert_fail@plt+0x6908>
   17c80:	ldr	r0, [pc, #3928]	; 18be0 <__assert_fail@plt+0x7868>
   17c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c88:	add	r0, r1, r0
   17c8c:	movw	r1, #0
   17c90:	cmp	r1, r0
   17c94:	blt	17d80 <__assert_fail@plt+0x6a08>
   17c98:	b	17d98 <__assert_fail@plt+0x6a20>
   17c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca0:	movw	r1, #0
   17ca4:	cmp	r1, r0
   17ca8:	bge	17d98 <__assert_fail@plt+0x6a20>
   17cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb0:	sub	r0, r0, #1
   17cb4:	movw	r1, #32767	; 0x7fff
   17cb8:	cmp	r1, r0
   17cbc:	blt	17d80 <__assert_fail@plt+0x6a08>
   17cc0:	b	17d98 <__assert_fail@plt+0x6a20>
   17cc4:	ldr	r0, [pc, #3860]	; 18be0 <__assert_fail@plt+0x7868>
   17cc8:	ldr	r1, [fp, #8]
   17ccc:	sdiv	r0, r0, r1
   17cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cd4:	cmp	r0, r1
   17cd8:	blt	17d80 <__assert_fail@plt+0x6a08>
   17cdc:	b	17d98 <__assert_fail@plt+0x6a20>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	cmp	r0, #0
   17ce8:	bne	17cf0 <__assert_fail@plt+0x6978>
   17cec:	b	17d98 <__assert_fail@plt+0x6a20>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	cmp	r0, #0
   17cf8:	bge	17d68 <__assert_fail@plt+0x69f0>
   17cfc:	b	17d00 <__assert_fail@plt+0x6988>
   17d00:	b	17d4c <__assert_fail@plt+0x69d4>
   17d04:	b	17d4c <__assert_fail@plt+0x69d4>
   17d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	cmn	r0, #1
   17d10:	bne	17d4c <__assert_fail@plt+0x69d4>
   17d14:	b	17d18 <__assert_fail@plt+0x69a0>
   17d18:	ldr	r0, [pc, #3776]	; 18be0 <__assert_fail@plt+0x7868>
   17d1c:	ldr	r1, [fp, #8]
   17d20:	add	r0, r1, r0
   17d24:	movw	r1, #0
   17d28:	cmp	r1, r0
   17d2c:	blt	17d80 <__assert_fail@plt+0x6a08>
   17d30:	b	17d98 <__assert_fail@plt+0x6a20>
   17d34:	ldr	r0, [fp, #8]
   17d38:	sub	r0, r0, #1
   17d3c:	movw	r1, #32767	; 0x7fff
   17d40:	cmp	r1, r0
   17d44:	blt	17d80 <__assert_fail@plt+0x6a08>
   17d48:	b	17d98 <__assert_fail@plt+0x6a20>
   17d4c:	ldr	r0, [pc, #3724]	; 18be0 <__assert_fail@plt+0x7868>
   17d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d54:	sdiv	r0, r0, r1
   17d58:	ldr	r1, [fp, #8]
   17d5c:	cmp	r0, r1
   17d60:	blt	17d80 <__assert_fail@plt+0x6a08>
   17d64:	b	17d98 <__assert_fail@plt+0x6a20>
   17d68:	ldr	r0, [fp, #8]
   17d6c:	movw	r1, #32767	; 0x7fff
   17d70:	sdiv	r0, r1, r0
   17d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d78:	cmp	r0, r1
   17d7c:	bge	17d98 <__assert_fail@plt+0x6a20>
   17d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d84:	ldr	r1, [fp, #8]
   17d88:	mul	r0, r0, r1
   17d8c:	sxth	r0, r0
   17d90:	str	r0, [fp, #-28]	; 0xffffffe4
   17d94:	b	18bd4 <__assert_fail@plt+0x785c>
   17d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d9c:	ldr	r1, [fp, #8]
   17da0:	mul	r0, r0, r1
   17da4:	sxth	r0, r0
   17da8:	str	r0, [fp, #-28]	; 0xffffffe4
   17dac:	b	18be4 <__assert_fail@plt+0x786c>
   17db0:	ldr	r0, [fp, #8]
   17db4:	cmp	r0, #0
   17db8:	bge	17ec8 <__assert_fail@plt+0x6b50>
   17dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc0:	cmp	r0, #0
   17dc4:	bge	17e50 <__assert_fail@plt+0x6ad8>
   17dc8:	b	17dcc <__assert_fail@plt+0x6a54>
   17dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dd0:	ldr	r1, [fp, #8]
   17dd4:	movw	r2, #65535	; 0xffff
   17dd8:	sdiv	r1, r2, r1
   17ddc:	cmp	r0, r1
   17de0:	blt	17f64 <__assert_fail@plt+0x6bec>
   17de4:	b	17f7c <__assert_fail@plt+0x6c04>
   17de8:	b	17dec <__assert_fail@plt+0x6a74>
   17dec:	ldr	r0, [pc, #2600]	; 1881c <__assert_fail@plt+0x74a4>
   17df0:	ldr	r1, [fp, #8]
   17df4:	cmp	r1, r0
   17df8:	blt	17e10 <__assert_fail@plt+0x6a98>
   17dfc:	b	17e1c <__assert_fail@plt+0x6aa4>
   17e00:	ldr	r0, [fp, #8]
   17e04:	movw	r1, #0
   17e08:	cmp	r1, r0
   17e0c:	bge	17e1c <__assert_fail@plt+0x6aa4>
   17e10:	movw	r0, #0
   17e14:	str	r0, [fp, #-52]	; 0xffffffcc
   17e18:	b	17e34 <__assert_fail@plt+0x6abc>
   17e1c:	ldr	r0, [fp, #8]
   17e20:	movw	r1, #0
   17e24:	sub	r0, r1, r0
   17e28:	movw	r1, #65535	; 0xffff
   17e2c:	sdiv	r0, r1, r0
   17e30:	str	r0, [fp, #-52]	; 0xffffffcc
   17e34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e3c:	mvn	r2, #0
   17e40:	sub	r1, r2, r1
   17e44:	cmp	r0, r1
   17e48:	ble	17f64 <__assert_fail@plt+0x6bec>
   17e4c:	b	17f7c <__assert_fail@plt+0x6c04>
   17e50:	b	17e54 <__assert_fail@plt+0x6adc>
   17e54:	b	17eac <__assert_fail@plt+0x6b34>
   17e58:	b	17eac <__assert_fail@plt+0x6b34>
   17e5c:	ldr	r0, [fp, #8]
   17e60:	cmn	r0, #1
   17e64:	bne	17eac <__assert_fail@plt+0x6b34>
   17e68:	b	17e6c <__assert_fail@plt+0x6af4>
   17e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e70:	add	r0, r0, #0
   17e74:	movw	r1, #0
   17e78:	cmp	r1, r0
   17e7c:	blt	17f64 <__assert_fail@plt+0x6bec>
   17e80:	b	17f7c <__assert_fail@plt+0x6c04>
   17e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e88:	movw	r1, #0
   17e8c:	cmp	r1, r0
   17e90:	bge	17f7c <__assert_fail@plt+0x6c04>
   17e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e98:	sub	r0, r0, #1
   17e9c:	mvn	r1, #0
   17ea0:	cmp	r1, r0
   17ea4:	blt	17f64 <__assert_fail@plt+0x6bec>
   17ea8:	b	17f7c <__assert_fail@plt+0x6c04>
   17eac:	ldr	r0, [fp, #8]
   17eb0:	movw	r1, #0
   17eb4:	sdiv	r0, r1, r0
   17eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ebc:	cmp	r0, r1
   17ec0:	blt	17f64 <__assert_fail@plt+0x6bec>
   17ec4:	b	17f7c <__assert_fail@plt+0x6c04>
   17ec8:	ldr	r0, [fp, #8]
   17ecc:	cmp	r0, #0
   17ed0:	bne	17ed8 <__assert_fail@plt+0x6b60>
   17ed4:	b	17f7c <__assert_fail@plt+0x6c04>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	cmp	r0, #0
   17ee0:	bge	17f4c <__assert_fail@plt+0x6bd4>
   17ee4:	b	17ee8 <__assert_fail@plt+0x6b70>
   17ee8:	b	17f30 <__assert_fail@plt+0x6bb8>
   17eec:	b	17f30 <__assert_fail@plt+0x6bb8>
   17ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef4:	cmn	r0, #1
   17ef8:	bne	17f30 <__assert_fail@plt+0x6bb8>
   17efc:	b	17f00 <__assert_fail@plt+0x6b88>
   17f00:	ldr	r0, [fp, #8]
   17f04:	add	r0, r0, #0
   17f08:	movw	r1, #0
   17f0c:	cmp	r1, r0
   17f10:	blt	17f64 <__assert_fail@plt+0x6bec>
   17f14:	b	17f7c <__assert_fail@plt+0x6c04>
   17f18:	ldr	r0, [fp, #8]
   17f1c:	sub	r0, r0, #1
   17f20:	mvn	r1, #0
   17f24:	cmp	r1, r0
   17f28:	blt	17f64 <__assert_fail@plt+0x6bec>
   17f2c:	b	17f7c <__assert_fail@plt+0x6c04>
   17f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f34:	movw	r1, #0
   17f38:	sdiv	r0, r1, r0
   17f3c:	ldr	r1, [fp, #8]
   17f40:	cmp	r0, r1
   17f44:	blt	17f64 <__assert_fail@plt+0x6bec>
   17f48:	b	17f7c <__assert_fail@plt+0x6c04>
   17f4c:	ldr	r0, [fp, #8]
   17f50:	movw	r1, #65535	; 0xffff
   17f54:	sdiv	r0, r1, r0
   17f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f5c:	cmp	r0, r1
   17f60:	bge	17f7c <__assert_fail@plt+0x6c04>
   17f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f68:	ldr	r1, [fp, #8]
   17f6c:	mul	r0, r0, r1
   17f70:	uxth	r0, r0
   17f74:	str	r0, [fp, #-28]	; 0xffffffe4
   17f78:	b	18bd4 <__assert_fail@plt+0x785c>
   17f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f80:	ldr	r1, [fp, #8]
   17f84:	mul	r0, r0, r1
   17f88:	uxth	r0, r0
   17f8c:	str	r0, [fp, #-28]	; 0xffffffe4
   17f90:	b	18be4 <__assert_fail@plt+0x786c>
   17f94:	b	17f98 <__assert_fail@plt+0x6c20>
   17f98:	b	17f9c <__assert_fail@plt+0x6c24>
   17f9c:	ldr	r0, [fp, #8]
   17fa0:	cmp	r0, #0
   17fa4:	bge	180a8 <__assert_fail@plt+0x6d30>
   17fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fac:	cmp	r0, #0
   17fb0:	bge	1803c <__assert_fail@plt+0x6cc4>
   17fb4:	b	17fb8 <__assert_fail@plt+0x6c40>
   17fb8:	ldr	r0, [pc, #1992]	; 18788 <__assert_fail@plt+0x7410>
   17fbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fc0:	ldr	r2, [fp, #8]
   17fc4:	sdiv	r0, r0, r2
   17fc8:	cmp	r1, r0
   17fcc:	blt	18138 <__assert_fail@plt+0x6dc0>
   17fd0:	b	1814c <__assert_fail@plt+0x6dd4>
   17fd4:	b	17fd8 <__assert_fail@plt+0x6c60>
   17fd8:	ldr	r0, [pc, #2108]	; 1881c <__assert_fail@plt+0x74a4>
   17fdc:	ldr	r1, [fp, #8]
   17fe0:	cmp	r1, r0
   17fe4:	blt	17ffc <__assert_fail@plt+0x6c84>
   17fe8:	b	18008 <__assert_fail@plt+0x6c90>
   17fec:	ldr	r0, [fp, #8]
   17ff0:	movw	r1, #0
   17ff4:	cmp	r1, r0
   17ff8:	bge	18008 <__assert_fail@plt+0x6c90>
   17ffc:	movw	r0, #0
   18000:	str	r0, [fp, #-56]	; 0xffffffc8
   18004:	b	18020 <__assert_fail@plt+0x6ca8>
   18008:	ldr	r0, [pc, #1912]	; 18788 <__assert_fail@plt+0x7410>
   1800c:	ldr	r1, [fp, #8]
   18010:	movw	r2, #0
   18014:	sub	r1, r2, r1
   18018:	sdiv	r0, r0, r1
   1801c:	str	r0, [fp, #-56]	; 0xffffffc8
   18020:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18028:	mvn	r2, #0
   1802c:	sub	r1, r2, r1
   18030:	cmp	r0, r1
   18034:	ble	18138 <__assert_fail@plt+0x6dc0>
   18038:	b	1814c <__assert_fail@plt+0x6dd4>
   1803c:	ldr	r0, [fp, #8]
   18040:	cmn	r0, #1
   18044:	bne	1808c <__assert_fail@plt+0x6d14>
   18048:	b	1804c <__assert_fail@plt+0x6cd4>
   1804c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18050:	add	r0, r0, #-2147483648	; 0x80000000
   18054:	movw	r1, #0
   18058:	cmp	r1, r0
   1805c:	blt	18138 <__assert_fail@plt+0x6dc0>
   18060:	b	1814c <__assert_fail@plt+0x6dd4>
   18064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18068:	movw	r1, #0
   1806c:	cmp	r1, r0
   18070:	bge	1814c <__assert_fail@plt+0x6dd4>
   18074:	ldr	r0, [pc, #1804]	; 18788 <__assert_fail@plt+0x7410>
   18078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1807c:	sub	r1, r1, #1
   18080:	cmp	r0, r1
   18084:	blt	18138 <__assert_fail@plt+0x6dc0>
   18088:	b	1814c <__assert_fail@plt+0x6dd4>
   1808c:	ldr	r0, [pc, #4072]	; 1907c <__assert_fail@plt+0x7d04>
   18090:	ldr	r1, [fp, #8]
   18094:	sdiv	r0, r0, r1
   18098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1809c:	cmp	r0, r1
   180a0:	blt	18138 <__assert_fail@plt+0x6dc0>
   180a4:	b	1814c <__assert_fail@plt+0x6dd4>
   180a8:	ldr	r0, [fp, #8]
   180ac:	cmp	r0, #0
   180b0:	bne	180b8 <__assert_fail@plt+0x6d40>
   180b4:	b	1814c <__assert_fail@plt+0x6dd4>
   180b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180bc:	cmp	r0, #0
   180c0:	bge	18120 <__assert_fail@plt+0x6da8>
   180c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c8:	cmn	r0, #1
   180cc:	bne	18104 <__assert_fail@plt+0x6d8c>
   180d0:	b	180d4 <__assert_fail@plt+0x6d5c>
   180d4:	ldr	r0, [fp, #8]
   180d8:	add	r0, r0, #-2147483648	; 0x80000000
   180dc:	movw	r1, #0
   180e0:	cmp	r1, r0
   180e4:	blt	18138 <__assert_fail@plt+0x6dc0>
   180e8:	b	1814c <__assert_fail@plt+0x6dd4>
   180ec:	ldr	r0, [pc, #1684]	; 18788 <__assert_fail@plt+0x7410>
   180f0:	ldr	r1, [fp, #8]
   180f4:	sub	r1, r1, #1
   180f8:	cmp	r0, r1
   180fc:	blt	18138 <__assert_fail@plt+0x6dc0>
   18100:	b	1814c <__assert_fail@plt+0x6dd4>
   18104:	ldr	r0, [pc, #3952]	; 1907c <__assert_fail@plt+0x7d04>
   18108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1810c:	sdiv	r0, r0, r1
   18110:	ldr	r1, [fp, #8]
   18114:	cmp	r0, r1
   18118:	blt	18138 <__assert_fail@plt+0x6dc0>
   1811c:	b	1814c <__assert_fail@plt+0x6dd4>
   18120:	ldr	r0, [pc, #1632]	; 18788 <__assert_fail@plt+0x7410>
   18124:	ldr	r1, [fp, #8]
   18128:	sdiv	r0, r0, r1
   1812c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18130:	cmp	r0, r1
   18134:	bge	1814c <__assert_fail@plt+0x6dd4>
   18138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1813c:	ldr	r1, [fp, #8]
   18140:	mul	r0, r0, r1
   18144:	str	r0, [fp, #-28]	; 0xffffffe4
   18148:	b	18bd4 <__assert_fail@plt+0x785c>
   1814c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18150:	ldr	r1, [fp, #8]
   18154:	mul	r0, r0, r1
   18158:	str	r0, [fp, #-28]	; 0xffffffe4
   1815c:	b	18be4 <__assert_fail@plt+0x786c>
   18160:	ldr	r0, [fp, #8]
   18164:	cmp	r0, #0
   18168:	bge	18278 <__assert_fail@plt+0x6f00>
   1816c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18170:	cmp	r0, #0
   18174:	bge	18200 <__assert_fail@plt+0x6e88>
   18178:	b	18198 <__assert_fail@plt+0x6e20>
   1817c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18180:	ldr	r1, [fp, #8]
   18184:	mvn	r2, #0
   18188:	udiv	r1, r2, r1
   1818c:	cmp	r0, r1
   18190:	bcc	18314 <__assert_fail@plt+0x6f9c>
   18194:	b	18328 <__assert_fail@plt+0x6fb0>
   18198:	b	1819c <__assert_fail@plt+0x6e24>
   1819c:	ldr	r0, [pc, #1656]	; 1881c <__assert_fail@plt+0x74a4>
   181a0:	ldr	r1, [fp, #8]
   181a4:	cmp	r1, r0
   181a8:	blt	181c0 <__assert_fail@plt+0x6e48>
   181ac:	b	181cc <__assert_fail@plt+0x6e54>
   181b0:	ldr	r0, [fp, #8]
   181b4:	movw	r1, #0
   181b8:	cmp	r1, r0
   181bc:	bge	181cc <__assert_fail@plt+0x6e54>
   181c0:	movw	r0, #1
   181c4:	str	r0, [fp, #-60]	; 0xffffffc4
   181c8:	b	181e4 <__assert_fail@plt+0x6e6c>
   181cc:	ldr	r0, [fp, #8]
   181d0:	movw	r1, #0
   181d4:	sub	r0, r1, r0
   181d8:	mvn	r1, #0
   181dc:	udiv	r0, r1, r0
   181e0:	str	r0, [fp, #-60]	; 0xffffffc4
   181e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   181e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181ec:	mvn	r2, #0
   181f0:	sub	r1, r2, r1
   181f4:	cmp	r0, r1
   181f8:	bls	18314 <__assert_fail@plt+0x6f9c>
   181fc:	b	18328 <__assert_fail@plt+0x6fb0>
   18200:	b	18204 <__assert_fail@plt+0x6e8c>
   18204:	b	1825c <__assert_fail@plt+0x6ee4>
   18208:	b	1825c <__assert_fail@plt+0x6ee4>
   1820c:	ldr	r0, [fp, #8]
   18210:	cmn	r0, #1
   18214:	bne	1825c <__assert_fail@plt+0x6ee4>
   18218:	b	1821c <__assert_fail@plt+0x6ea4>
   1821c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18220:	add	r0, r0, #0
   18224:	movw	r1, #0
   18228:	cmp	r1, r0
   1822c:	blt	18314 <__assert_fail@plt+0x6f9c>
   18230:	b	18328 <__assert_fail@plt+0x6fb0>
   18234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18238:	movw	r1, #0
   1823c:	cmp	r1, r0
   18240:	bge	18328 <__assert_fail@plt+0x6fb0>
   18244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18248:	sub	r0, r0, #1
   1824c:	mvn	r1, #0
   18250:	cmp	r1, r0
   18254:	blt	18314 <__assert_fail@plt+0x6f9c>
   18258:	b	18328 <__assert_fail@plt+0x6fb0>
   1825c:	ldr	r0, [fp, #8]
   18260:	movw	r1, #0
   18264:	sdiv	r0, r1, r0
   18268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1826c:	cmp	r0, r1
   18270:	blt	18314 <__assert_fail@plt+0x6f9c>
   18274:	b	18328 <__assert_fail@plt+0x6fb0>
   18278:	ldr	r0, [fp, #8]
   1827c:	cmp	r0, #0
   18280:	bne	18288 <__assert_fail@plt+0x6f10>
   18284:	b	18328 <__assert_fail@plt+0x6fb0>
   18288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1828c:	cmp	r0, #0
   18290:	bge	182fc <__assert_fail@plt+0x6f84>
   18294:	b	18298 <__assert_fail@plt+0x6f20>
   18298:	b	182e0 <__assert_fail@plt+0x6f68>
   1829c:	b	182e0 <__assert_fail@plt+0x6f68>
   182a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a4:	cmn	r0, #1
   182a8:	bne	182e0 <__assert_fail@plt+0x6f68>
   182ac:	b	182b0 <__assert_fail@plt+0x6f38>
   182b0:	ldr	r0, [fp, #8]
   182b4:	add	r0, r0, #0
   182b8:	movw	r1, #0
   182bc:	cmp	r1, r0
   182c0:	blt	18314 <__assert_fail@plt+0x6f9c>
   182c4:	b	18328 <__assert_fail@plt+0x6fb0>
   182c8:	ldr	r0, [fp, #8]
   182cc:	sub	r0, r0, #1
   182d0:	mvn	r1, #0
   182d4:	cmp	r1, r0
   182d8:	blt	18314 <__assert_fail@plt+0x6f9c>
   182dc:	b	18328 <__assert_fail@plt+0x6fb0>
   182e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e4:	movw	r1, #0
   182e8:	sdiv	r0, r1, r0
   182ec:	ldr	r1, [fp, #8]
   182f0:	cmp	r0, r1
   182f4:	blt	18314 <__assert_fail@plt+0x6f9c>
   182f8:	b	18328 <__assert_fail@plt+0x6fb0>
   182fc:	ldr	r0, [fp, #8]
   18300:	mvn	r1, #0
   18304:	udiv	r0, r1, r0
   18308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1830c:	cmp	r0, r1
   18310:	bcs	18328 <__assert_fail@plt+0x6fb0>
   18314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18318:	ldr	r1, [fp, #8]
   1831c:	mul	r0, r0, r1
   18320:	str	r0, [fp, #-28]	; 0xffffffe4
   18324:	b	18bd4 <__assert_fail@plt+0x785c>
   18328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1832c:	ldr	r1, [fp, #8]
   18330:	mul	r0, r0, r1
   18334:	str	r0, [fp, #-28]	; 0xffffffe4
   18338:	b	18be4 <__assert_fail@plt+0x786c>
   1833c:	b	18340 <__assert_fail@plt+0x6fc8>
   18340:	b	18344 <__assert_fail@plt+0x6fcc>
   18344:	ldr	r0, [fp, #8]
   18348:	cmp	r0, #0
   1834c:	bge	18450 <__assert_fail@plt+0x70d8>
   18350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18354:	cmp	r0, #0
   18358:	bge	183e4 <__assert_fail@plt+0x706c>
   1835c:	b	18360 <__assert_fail@plt+0x6fe8>
   18360:	ldr	r0, [pc, #1056]	; 18788 <__assert_fail@plt+0x7410>
   18364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18368:	ldr	r2, [fp, #8]
   1836c:	sdiv	r0, r0, r2
   18370:	cmp	r1, r0
   18374:	blt	184e0 <__assert_fail@plt+0x7168>
   18378:	b	184f4 <__assert_fail@plt+0x717c>
   1837c:	b	18380 <__assert_fail@plt+0x7008>
   18380:	ldr	r0, [pc, #1172]	; 1881c <__assert_fail@plt+0x74a4>
   18384:	ldr	r1, [fp, #8]
   18388:	cmp	r1, r0
   1838c:	blt	183a4 <__assert_fail@plt+0x702c>
   18390:	b	183b0 <__assert_fail@plt+0x7038>
   18394:	ldr	r0, [fp, #8]
   18398:	movw	r1, #0
   1839c:	cmp	r1, r0
   183a0:	bge	183b0 <__assert_fail@plt+0x7038>
   183a4:	movw	r0, #0
   183a8:	str	r0, [fp, #-64]	; 0xffffffc0
   183ac:	b	183c8 <__assert_fail@plt+0x7050>
   183b0:	ldr	r0, [pc, #976]	; 18788 <__assert_fail@plt+0x7410>
   183b4:	ldr	r1, [fp, #8]
   183b8:	movw	r2, #0
   183bc:	sub	r1, r2, r1
   183c0:	sdiv	r0, r0, r1
   183c4:	str	r0, [fp, #-64]	; 0xffffffc0
   183c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   183cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d0:	mvn	r2, #0
   183d4:	sub	r1, r2, r1
   183d8:	cmp	r0, r1
   183dc:	ble	184e0 <__assert_fail@plt+0x7168>
   183e0:	b	184f4 <__assert_fail@plt+0x717c>
   183e4:	ldr	r0, [fp, #8]
   183e8:	cmn	r0, #1
   183ec:	bne	18434 <__assert_fail@plt+0x70bc>
   183f0:	b	183f4 <__assert_fail@plt+0x707c>
   183f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f8:	add	r0, r0, #-2147483648	; 0x80000000
   183fc:	movw	r1, #0
   18400:	cmp	r1, r0
   18404:	blt	184e0 <__assert_fail@plt+0x7168>
   18408:	b	184f4 <__assert_fail@plt+0x717c>
   1840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18410:	movw	r1, #0
   18414:	cmp	r1, r0
   18418:	bge	184f4 <__assert_fail@plt+0x717c>
   1841c:	ldr	r0, [pc, #868]	; 18788 <__assert_fail@plt+0x7410>
   18420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18424:	sub	r1, r1, #1
   18428:	cmp	r0, r1
   1842c:	blt	184e0 <__assert_fail@plt+0x7168>
   18430:	b	184f4 <__assert_fail@plt+0x717c>
   18434:	ldr	r0, [pc, #3136]	; 1907c <__assert_fail@plt+0x7d04>
   18438:	ldr	r1, [fp, #8]
   1843c:	sdiv	r0, r0, r1
   18440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18444:	cmp	r0, r1
   18448:	blt	184e0 <__assert_fail@plt+0x7168>
   1844c:	b	184f4 <__assert_fail@plt+0x717c>
   18450:	ldr	r0, [fp, #8]
   18454:	cmp	r0, #0
   18458:	bne	18460 <__assert_fail@plt+0x70e8>
   1845c:	b	184f4 <__assert_fail@plt+0x717c>
   18460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18464:	cmp	r0, #0
   18468:	bge	184c8 <__assert_fail@plt+0x7150>
   1846c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18470:	cmn	r0, #1
   18474:	bne	184ac <__assert_fail@plt+0x7134>
   18478:	b	1847c <__assert_fail@plt+0x7104>
   1847c:	ldr	r0, [fp, #8]
   18480:	add	r0, r0, #-2147483648	; 0x80000000
   18484:	movw	r1, #0
   18488:	cmp	r1, r0
   1848c:	blt	184e0 <__assert_fail@plt+0x7168>
   18490:	b	184f4 <__assert_fail@plt+0x717c>
   18494:	ldr	r0, [pc, #748]	; 18788 <__assert_fail@plt+0x7410>
   18498:	ldr	r1, [fp, #8]
   1849c:	sub	r1, r1, #1
   184a0:	cmp	r0, r1
   184a4:	blt	184e0 <__assert_fail@plt+0x7168>
   184a8:	b	184f4 <__assert_fail@plt+0x717c>
   184ac:	ldr	r0, [pc, #3016]	; 1907c <__assert_fail@plt+0x7d04>
   184b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184b4:	sdiv	r0, r0, r1
   184b8:	ldr	r1, [fp, #8]
   184bc:	cmp	r0, r1
   184c0:	blt	184e0 <__assert_fail@plt+0x7168>
   184c4:	b	184f4 <__assert_fail@plt+0x717c>
   184c8:	ldr	r0, [pc, #696]	; 18788 <__assert_fail@plt+0x7410>
   184cc:	ldr	r1, [fp, #8]
   184d0:	sdiv	r0, r0, r1
   184d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184d8:	cmp	r0, r1
   184dc:	bge	184f4 <__assert_fail@plt+0x717c>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	ldr	r1, [fp, #8]
   184e8:	mul	r0, r0, r1
   184ec:	str	r0, [fp, #-28]	; 0xffffffe4
   184f0:	b	18bd4 <__assert_fail@plt+0x785c>
   184f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184f8:	ldr	r1, [fp, #8]
   184fc:	mul	r0, r0, r1
   18500:	str	r0, [fp, #-28]	; 0xffffffe4
   18504:	b	18be4 <__assert_fail@plt+0x786c>
   18508:	ldr	r0, [fp, #8]
   1850c:	cmp	r0, #0
   18510:	bge	18620 <__assert_fail@plt+0x72a8>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	cmp	r0, #0
   1851c:	bge	185a8 <__assert_fail@plt+0x7230>
   18520:	b	18540 <__assert_fail@plt+0x71c8>
   18524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18528:	ldr	r1, [fp, #8]
   1852c:	mvn	r2, #0
   18530:	udiv	r1, r2, r1
   18534:	cmp	r0, r1
   18538:	bcc	186bc <__assert_fail@plt+0x7344>
   1853c:	b	186d0 <__assert_fail@plt+0x7358>
   18540:	b	18544 <__assert_fail@plt+0x71cc>
   18544:	ldr	r0, [pc, #720]	; 1881c <__assert_fail@plt+0x74a4>
   18548:	ldr	r1, [fp, #8]
   1854c:	cmp	r1, r0
   18550:	blt	18568 <__assert_fail@plt+0x71f0>
   18554:	b	18574 <__assert_fail@plt+0x71fc>
   18558:	ldr	r0, [fp, #8]
   1855c:	movw	r1, #0
   18560:	cmp	r1, r0
   18564:	bge	18574 <__assert_fail@plt+0x71fc>
   18568:	movw	r0, #1
   1856c:	str	r0, [fp, #-68]	; 0xffffffbc
   18570:	b	1858c <__assert_fail@plt+0x7214>
   18574:	ldr	r0, [fp, #8]
   18578:	movw	r1, #0
   1857c:	sub	r0, r1, r0
   18580:	mvn	r1, #0
   18584:	udiv	r0, r1, r0
   18588:	str	r0, [fp, #-68]	; 0xffffffbc
   1858c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18594:	mvn	r2, #0
   18598:	sub	r1, r2, r1
   1859c:	cmp	r0, r1
   185a0:	bls	186bc <__assert_fail@plt+0x7344>
   185a4:	b	186d0 <__assert_fail@plt+0x7358>
   185a8:	b	185ac <__assert_fail@plt+0x7234>
   185ac:	b	18604 <__assert_fail@plt+0x728c>
   185b0:	b	18604 <__assert_fail@plt+0x728c>
   185b4:	ldr	r0, [fp, #8]
   185b8:	cmn	r0, #1
   185bc:	bne	18604 <__assert_fail@plt+0x728c>
   185c0:	b	185c4 <__assert_fail@plt+0x724c>
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	add	r0, r0, #0
   185cc:	movw	r1, #0
   185d0:	cmp	r1, r0
   185d4:	blt	186bc <__assert_fail@plt+0x7344>
   185d8:	b	186d0 <__assert_fail@plt+0x7358>
   185dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e0:	movw	r1, #0
   185e4:	cmp	r1, r0
   185e8:	bge	186d0 <__assert_fail@plt+0x7358>
   185ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185f0:	sub	r0, r0, #1
   185f4:	mvn	r1, #0
   185f8:	cmp	r1, r0
   185fc:	blt	186bc <__assert_fail@plt+0x7344>
   18600:	b	186d0 <__assert_fail@plt+0x7358>
   18604:	ldr	r0, [fp, #8]
   18608:	movw	r1, #0
   1860c:	sdiv	r0, r1, r0
   18610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18614:	cmp	r0, r1
   18618:	blt	186bc <__assert_fail@plt+0x7344>
   1861c:	b	186d0 <__assert_fail@plt+0x7358>
   18620:	ldr	r0, [fp, #8]
   18624:	cmp	r0, #0
   18628:	bne	18630 <__assert_fail@plt+0x72b8>
   1862c:	b	186d0 <__assert_fail@plt+0x7358>
   18630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18634:	cmp	r0, #0
   18638:	bge	186a4 <__assert_fail@plt+0x732c>
   1863c:	b	18640 <__assert_fail@plt+0x72c8>
   18640:	b	18688 <__assert_fail@plt+0x7310>
   18644:	b	18688 <__assert_fail@plt+0x7310>
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	cmn	r0, #1
   18650:	bne	18688 <__assert_fail@plt+0x7310>
   18654:	b	18658 <__assert_fail@plt+0x72e0>
   18658:	ldr	r0, [fp, #8]
   1865c:	add	r0, r0, #0
   18660:	movw	r1, #0
   18664:	cmp	r1, r0
   18668:	blt	186bc <__assert_fail@plt+0x7344>
   1866c:	b	186d0 <__assert_fail@plt+0x7358>
   18670:	ldr	r0, [fp, #8]
   18674:	sub	r0, r0, #1
   18678:	mvn	r1, #0
   1867c:	cmp	r1, r0
   18680:	blt	186bc <__assert_fail@plt+0x7344>
   18684:	b	186d0 <__assert_fail@plt+0x7358>
   18688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1868c:	movw	r1, #0
   18690:	sdiv	r0, r1, r0
   18694:	ldr	r1, [fp, #8]
   18698:	cmp	r0, r1
   1869c:	blt	186bc <__assert_fail@plt+0x7344>
   186a0:	b	186d0 <__assert_fail@plt+0x7358>
   186a4:	ldr	r0, [fp, #8]
   186a8:	mvn	r1, #0
   186ac:	udiv	r0, r1, r0
   186b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186b4:	cmp	r0, r1
   186b8:	bcs	186d0 <__assert_fail@plt+0x7358>
   186bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186c0:	ldr	r1, [fp, #8]
   186c4:	mul	r0, r0, r1
   186c8:	str	r0, [fp, #-28]	; 0xffffffe4
   186cc:	b	18bd4 <__assert_fail@plt+0x785c>
   186d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186d4:	ldr	r1, [fp, #8]
   186d8:	mul	r0, r0, r1
   186dc:	str	r0, [fp, #-28]	; 0xffffffe4
   186e0:	b	18be4 <__assert_fail@plt+0x786c>
   186e4:	b	186e8 <__assert_fail@plt+0x7370>
   186e8:	ldr	r0, [fp, #8]
   186ec:	cmp	r0, #0
   186f0:	bge	18880 <__assert_fail@plt+0x7508>
   186f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f8:	cmp	r0, #0
   186fc:	bge	187e8 <__assert_fail@plt+0x7470>
   18700:	b	18704 <__assert_fail@plt+0x738c>
   18704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18708:	ldr	r1, [fp, #8]
   1870c:	asr	r3, r1, #31
   18710:	mvn	r2, #0
   18714:	mvn	ip, #-2147483648	; 0x80000000
   18718:	str	r0, [fp, #-72]	; 0xffffffb8
   1871c:	mov	r0, r2
   18720:	str	r1, [fp, #-76]	; 0xffffffb4
   18724:	mov	r1, ip
   18728:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1872c:	bl	1bf24 <__assert_fail@plt+0xabac>
   18730:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18734:	subs	r0, r2, r0
   18738:	rscs	r1, r1, r2, asr #31
   1873c:	str	r0, [fp, #-80]	; 0xffffffb0
   18740:	str	r1, [fp, #-84]	; 0xffffffac
   18744:	blt	18960 <__assert_fail@plt+0x75e8>
   18748:	b	18974 <__assert_fail@plt+0x75fc>
   1874c:	b	18750 <__assert_fail@plt+0x73d8>
   18750:	ldr	r0, [pc, #196]	; 1881c <__assert_fail@plt+0x74a4>
   18754:	ldr	r1, [fp, #8]
   18758:	cmp	r1, r0
   1875c:	blt	18774 <__assert_fail@plt+0x73fc>
   18760:	b	1878c <__assert_fail@plt+0x7414>
   18764:	ldr	r0, [fp, #8]
   18768:	movw	r1, #0
   1876c:	cmp	r1, r0
   18770:	bge	1878c <__assert_fail@plt+0x7414>
   18774:	mov	r0, #0
   18778:	mvn	r1, #0
   1877c:	str	r1, [fp, #-88]	; 0xffffffa8
   18780:	str	r0, [fp, #-92]	; 0xffffffa4
   18784:	b	187c0 <__assert_fail@plt+0x7448>
   18788:	svcvc	0x00ffffff
   1878c:	ldr	r0, [fp, #8]
   18790:	rsb	r0, r0, #0
   18794:	asr	r3, r0, #31
   18798:	mvn	r1, #0
   1879c:	mvn	r2, #-2147483648	; 0x80000000
   187a0:	str	r0, [fp, #-96]	; 0xffffffa0
   187a4:	mov	r0, r1
   187a8:	mov	r1, r2
   187ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   187b0:	bl	1bf24 <__assert_fail@plt+0xabac>
   187b4:	str	r0, [fp, #-88]	; 0xffffffa8
   187b8:	str	r1, [fp, #-92]	; 0xffffffa4
   187bc:	b	187c0 <__assert_fail@plt+0x7448>
   187c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   187c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   187c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187cc:	mvn	r2, r2
   187d0:	subs	r1, r2, r1
   187d4:	rscs	r0, r0, r2, asr #31
   187d8:	str	r1, [fp, #-100]	; 0xffffff9c
   187dc:	str	r0, [fp, #-104]	; 0xffffff98
   187e0:	bge	18960 <__assert_fail@plt+0x75e8>
   187e4:	b	18974 <__assert_fail@plt+0x75fc>
   187e8:	ldr	r0, [fp, #8]
   187ec:	cmn	r0, #1
   187f0:	bne	18840 <__assert_fail@plt+0x74c8>
   187f4:	b	187f8 <__assert_fail@plt+0x7480>
   187f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187fc:	mov	r1, #-2147483648	; 0x80000000
   18800:	add	r1, r1, r0, asr #31
   18804:	rsbs	r0, r0, #0
   18808:	rscs	r1, r1, #0
   1880c:	str	r0, [fp, #-108]	; 0xffffff94
   18810:	str	r1, [fp, #-112]	; 0xffffff90
   18814:	blt	18960 <__assert_fail@plt+0x75e8>
   18818:	b	18974 <__assert_fail@plt+0x75fc>
   1881c:	andhi	r0, r0, r1
   18820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18824:	movw	r1, #0
   18828:	cmp	r1, r0
   1882c:	bge	18974 <__assert_fail@plt+0x75fc>
   18830:	mov	r0, #0
   18834:	cmp	r0, #0
   18838:	bne	18960 <__assert_fail@plt+0x75e8>
   1883c:	b	18974 <__assert_fail@plt+0x75fc>
   18840:	ldr	r0, [fp, #8]
   18844:	asr	r3, r0, #31
   18848:	mov	r1, #0
   1884c:	mov	r2, #-2147483648	; 0x80000000
   18850:	str	r0, [fp, #-116]	; 0xffffff8c
   18854:	mov	r0, r1
   18858:	mov	r1, r2
   1885c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18860:	bl	1bf24 <__assert_fail@plt+0xabac>
   18864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18868:	subs	r0, r0, r2
   1886c:	sbcs	r1, r1, r2, asr #31
   18870:	str	r0, [fp, #-120]	; 0xffffff88
   18874:	str	r1, [fp, #-124]	; 0xffffff84
   18878:	blt	18960 <__assert_fail@plt+0x75e8>
   1887c:	b	18974 <__assert_fail@plt+0x75fc>
   18880:	ldr	r0, [fp, #8]
   18884:	cmp	r0, #0
   18888:	bne	18890 <__assert_fail@plt+0x7518>
   1888c:	b	18974 <__assert_fail@plt+0x75fc>
   18890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18894:	cmp	r0, #0
   18898:	bge	18920 <__assert_fail@plt+0x75a8>
   1889c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a0:	cmn	r0, #1
   188a4:	bne	188e0 <__assert_fail@plt+0x7568>
   188a8:	b	188ac <__assert_fail@plt+0x7534>
   188ac:	ldr	r0, [fp, #8]
   188b0:	mov	r1, #-2147483648	; 0x80000000
   188b4:	add	r1, r1, r0, asr #31
   188b8:	rsbs	r0, r0, #0
   188bc:	rscs	r1, r1, #0
   188c0:	str	r0, [fp, #-128]	; 0xffffff80
   188c4:	str	r1, [fp, #-132]	; 0xffffff7c
   188c8:	blt	18960 <__assert_fail@plt+0x75e8>
   188cc:	b	18974 <__assert_fail@plt+0x75fc>
   188d0:	mov	r0, #0
   188d4:	cmp	r0, #0
   188d8:	bne	18960 <__assert_fail@plt+0x75e8>
   188dc:	b	18974 <__assert_fail@plt+0x75fc>
   188e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e4:	asr	r3, r0, #31
   188e8:	mov	r1, #0
   188ec:	mov	r2, #-2147483648	; 0x80000000
   188f0:	str	r0, [fp, #-136]	; 0xffffff78
   188f4:	mov	r0, r1
   188f8:	mov	r1, r2
   188fc:	ldr	r2, [fp, #-136]	; 0xffffff78
   18900:	bl	1bf24 <__assert_fail@plt+0xabac>
   18904:	ldr	r2, [fp, #8]
   18908:	subs	r0, r0, r2
   1890c:	sbcs	r1, r1, r2, asr #31
   18910:	str	r0, [fp, #-140]	; 0xffffff74
   18914:	str	r1, [fp, #-144]	; 0xffffff70
   18918:	blt	18960 <__assert_fail@plt+0x75e8>
   1891c:	b	18974 <__assert_fail@plt+0x75fc>
   18920:	ldr	r0, [fp, #8]
   18924:	asr	r3, r0, #31
   18928:	mvn	r1, #0
   1892c:	mvn	r2, #-2147483648	; 0x80000000
   18930:	str	r0, [fp, #-148]	; 0xffffff6c
   18934:	mov	r0, r1
   18938:	mov	r1, r2
   1893c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   18940:	bl	1bf24 <__assert_fail@plt+0xabac>
   18944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18948:	subs	r0, r0, r2
   1894c:	sbcs	r1, r1, r2, asr #31
   18950:	str	r0, [fp, #-152]	; 0xffffff68
   18954:	str	r1, [fp, #-156]	; 0xffffff64
   18958:	bge	18974 <__assert_fail@plt+0x75fc>
   1895c:	b	18960 <__assert_fail@plt+0x75e8>
   18960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18964:	ldr	r1, [fp, #8]
   18968:	mul	r0, r0, r1
   1896c:	str	r0, [fp, #-28]	; 0xffffffe4
   18970:	b	18bd4 <__assert_fail@plt+0x785c>
   18974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18978:	ldr	r1, [fp, #8]
   1897c:	mul	r0, r0, r1
   18980:	str	r0, [fp, #-28]	; 0xffffffe4
   18984:	b	18be4 <__assert_fail@plt+0x786c>
   18988:	ldr	r0, [fp, #8]
   1898c:	cmp	r0, #0
   18990:	bge	18af0 <__assert_fail@plt+0x7778>
   18994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18998:	cmp	r0, #0
   1899c:	bge	18a78 <__assert_fail@plt+0x7700>
   189a0:	b	189e8 <__assert_fail@plt+0x7670>
   189a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a8:	ldr	r1, [fp, #8]
   189ac:	asr	r3, r1, #31
   189b0:	mvn	r2, #0
   189b4:	str	r0, [fp, #-160]	; 0xffffff60
   189b8:	mov	r0, r2
   189bc:	str	r1, [fp, #-164]	; 0xffffff5c
   189c0:	mov	r1, r2
   189c4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   189c8:	bl	1bff8 <__assert_fail@plt+0xac80>
   189cc:	ldr	r2, [fp, #-160]	; 0xffffff60
   189d0:	subs	r0, r2, r0
   189d4:	rscs	r1, r1, r2, asr #31
   189d8:	str	r0, [fp, #-168]	; 0xffffff58
   189dc:	str	r1, [fp, #-172]	; 0xffffff54
   189e0:	bcc	18bac <__assert_fail@plt+0x7834>
   189e4:	b	18bc0 <__assert_fail@plt+0x7848>
   189e8:	b	189ec <__assert_fail@plt+0x7674>
   189ec:	ldr	r0, [pc, #-472]	; 1881c <__assert_fail@plt+0x74a4>
   189f0:	ldr	r1, [fp, #8]
   189f4:	cmp	r1, r0
   189f8:	blt	18a10 <__assert_fail@plt+0x7698>
   189fc:	b	18a24 <__assert_fail@plt+0x76ac>
   18a00:	ldr	r0, [fp, #8]
   18a04:	movw	r1, #0
   18a08:	cmp	r1, r0
   18a0c:	bge	18a24 <__assert_fail@plt+0x76ac>
   18a10:	mov	r0, #1
   18a14:	mvn	r1, #0
   18a18:	str	r1, [fp, #-176]	; 0xffffff50
   18a1c:	str	r0, [fp, #-180]	; 0xffffff4c
   18a20:	b	18a50 <__assert_fail@plt+0x76d8>
   18a24:	ldr	r0, [fp, #8]
   18a28:	rsb	r0, r0, #0
   18a2c:	asr	r3, r0, #31
   18a30:	mvn	r1, #0
   18a34:	str	r0, [fp, #-184]	; 0xffffff48
   18a38:	mov	r0, r1
   18a3c:	ldr	r2, [fp, #-184]	; 0xffffff48
   18a40:	bl	1bff8 <__assert_fail@plt+0xac80>
   18a44:	str	r0, [fp, #-176]	; 0xffffff50
   18a48:	str	r1, [fp, #-180]	; 0xffffff4c
   18a4c:	b	18a50 <__assert_fail@plt+0x76d8>
   18a50:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18a54:	ldr	r1, [fp, #-176]	; 0xffffff50
   18a58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a5c:	mvn	r2, r2
   18a60:	subs	r1, r2, r1
   18a64:	rscs	r0, r0, r2, asr #31
   18a68:	str	r1, [sp, #188]	; 0xbc
   18a6c:	str	r0, [sp, #184]	; 0xb8
   18a70:	bcs	18bac <__assert_fail@plt+0x7834>
   18a74:	b	18bc0 <__assert_fail@plt+0x7848>
   18a78:	b	18a7c <__assert_fail@plt+0x7704>
   18a7c:	b	18ad4 <__assert_fail@plt+0x775c>
   18a80:	b	18ad4 <__assert_fail@plt+0x775c>
   18a84:	ldr	r0, [fp, #8]
   18a88:	cmn	r0, #1
   18a8c:	bne	18ad4 <__assert_fail@plt+0x775c>
   18a90:	b	18a94 <__assert_fail@plt+0x771c>
   18a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a98:	add	r0, r0, #0
   18a9c:	movw	r1, #0
   18aa0:	cmp	r1, r0
   18aa4:	blt	18bac <__assert_fail@plt+0x7834>
   18aa8:	b	18bc0 <__assert_fail@plt+0x7848>
   18aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab0:	movw	r1, #0
   18ab4:	cmp	r1, r0
   18ab8:	bge	18bc0 <__assert_fail@plt+0x7848>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	sub	r0, r0, #1
   18ac4:	mvn	r1, #0
   18ac8:	cmp	r1, r0
   18acc:	blt	18bac <__assert_fail@plt+0x7834>
   18ad0:	b	18bc0 <__assert_fail@plt+0x7848>
   18ad4:	ldr	r0, [fp, #8]
   18ad8:	movw	r1, #0
   18adc:	sdiv	r0, r1, r0
   18ae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ae4:	cmp	r0, r1
   18ae8:	blt	18bac <__assert_fail@plt+0x7834>
   18aec:	b	18bc0 <__assert_fail@plt+0x7848>
   18af0:	ldr	r0, [fp, #8]
   18af4:	cmp	r0, #0
   18af8:	bne	18b00 <__assert_fail@plt+0x7788>
   18afc:	b	18bc0 <__assert_fail@plt+0x7848>
   18b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b04:	cmp	r0, #0
   18b08:	bge	18b74 <__assert_fail@plt+0x77fc>
   18b0c:	b	18b10 <__assert_fail@plt+0x7798>
   18b10:	b	18b58 <__assert_fail@plt+0x77e0>
   18b14:	b	18b58 <__assert_fail@plt+0x77e0>
   18b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b1c:	cmn	r0, #1
   18b20:	bne	18b58 <__assert_fail@plt+0x77e0>
   18b24:	b	18b28 <__assert_fail@plt+0x77b0>
   18b28:	ldr	r0, [fp, #8]
   18b2c:	add	r0, r0, #0
   18b30:	movw	r1, #0
   18b34:	cmp	r1, r0
   18b38:	blt	18bac <__assert_fail@plt+0x7834>
   18b3c:	b	18bc0 <__assert_fail@plt+0x7848>
   18b40:	ldr	r0, [fp, #8]
   18b44:	sub	r0, r0, #1
   18b48:	mvn	r1, #0
   18b4c:	cmp	r1, r0
   18b50:	blt	18bac <__assert_fail@plt+0x7834>
   18b54:	b	18bc0 <__assert_fail@plt+0x7848>
   18b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b5c:	movw	r1, #0
   18b60:	sdiv	r0, r1, r0
   18b64:	ldr	r1, [fp, #8]
   18b68:	cmp	r0, r1
   18b6c:	blt	18bac <__assert_fail@plt+0x7834>
   18b70:	b	18bc0 <__assert_fail@plt+0x7848>
   18b74:	ldr	r0, [fp, #8]
   18b78:	asr	r3, r0, #31
   18b7c:	mvn	r1, #0
   18b80:	str	r0, [sp, #180]	; 0xb4
   18b84:	mov	r0, r1
   18b88:	ldr	r2, [sp, #180]	; 0xb4
   18b8c:	bl	1bff8 <__assert_fail@plt+0xac80>
   18b90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b94:	subs	r0, r0, r2
   18b98:	sbcs	r1, r1, r2, asr #31
   18b9c:	str	r0, [sp, #176]	; 0xb0
   18ba0:	str	r1, [sp, #172]	; 0xac
   18ba4:	bcs	18bc0 <__assert_fail@plt+0x7848>
   18ba8:	b	18bac <__assert_fail@plt+0x7834>
   18bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb0:	ldr	r1, [fp, #8]
   18bb4:	mul	r0, r0, r1
   18bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   18bbc:	b	18bd4 <__assert_fail@plt+0x785c>
   18bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc4:	ldr	r1, [fp, #8]
   18bc8:	mul	r0, r0, r1
   18bcc:	str	r0, [fp, #-28]	; 0xffffffe4
   18bd0:	b	18be4 <__assert_fail@plt+0x786c>
   18bd4:	ldr	r0, [pc, #-1108]	; 18788 <__assert_fail@plt+0x7410>
   18bd8:	str	r0, [sp, #168]	; 0xa8
   18bdc:	b	18c04 <__assert_fail@plt+0x788c>
   18be0:			; <UNDEFINED> instruction: 0xffff8000
   18be4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18be8:	cmp	r0, #64	; 0x40
   18bec:	movw	r0, #0
   18bf0:	movlt	r0, #1
   18bf4:	tst	r0, #1
   18bf8:	movw	r0, #64	; 0x40
   18bfc:	moveq	r0, #0
   18c00:	str	r0, [sp, #168]	; 0xa8
   18c04:	ldr	r0, [sp, #168]	; 0xa8
   18c08:	str	r0, [fp, #-32]	; 0xffffffe0
   18c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c10:	cmp	r0, #0
   18c14:	beq	18c44 <__assert_fail@plt+0x78cc>
   18c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c1c:	ldr	r1, [fp, #8]
   18c20:	sdiv	r0, r0, r1
   18c24:	str	r0, [fp, #-24]	; 0xffffffe8
   18c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c2c:	mov	r1, r0
   18c30:	ldr	r2, [fp, #8]
   18c34:	sdiv	r3, r0, r2
   18c38:	mls	r0, r3, r2, r0
   18c3c:	sub	r0, r1, r0
   18c40:	str	r0, [fp, #-28]	; 0xffffffe4
   18c44:	ldr	r0, [fp, #-4]
   18c48:	movw	r1, #0
   18c4c:	cmp	r0, r1
   18c50:	bne	18c60 <__assert_fail@plt+0x78e8>
   18c54:	ldr	r0, [fp, #-8]
   18c58:	movw	r1, #0
   18c5c:	str	r1, [r0]
   18c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c64:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c68:	sub	r0, r0, r1
   18c6c:	ldr	r1, [fp, #-12]
   18c70:	cmp	r0, r1
   18c74:	bge	1a0ac <__assert_fail@plt+0x8d34>
   18c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c7c:	ldr	r1, [fp, #-12]
   18c80:	add	r1, r0, r1
   18c84:	mov	r2, #1
   18c88:	cmp	r1, r0
   18c8c:	movwvc	r2, #0
   18c90:	str	r1, [fp, #-24]	; 0xffffffe8
   18c94:	tst	r2, #1
   18c98:	bne	1a0a8 <__assert_fail@plt+0x8d30>
   18c9c:	ldr	r0, [fp, #-16]
   18ca0:	movw	r1, #0
   18ca4:	cmp	r1, r0
   18ca8:	bgt	18cbc <__assert_fail@plt+0x7944>
   18cac:	ldr	r0, [fp, #-16]
   18cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cb4:	cmp	r0, r1
   18cb8:	blt	1a0a8 <__assert_fail@plt+0x8d30>
   18cbc:	b	19098 <__assert_fail@plt+0x7d20>
   18cc0:	b	18cc4 <__assert_fail@plt+0x794c>
   18cc4:	ldr	r0, [fp, #8]
   18cc8:	cmp	r0, #0
   18ccc:	bge	18de0 <__assert_fail@plt+0x7a68>
   18cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd4:	cmp	r0, #0
   18cd8:	bge	18d64 <__assert_fail@plt+0x79ec>
   18cdc:	b	18ce0 <__assert_fail@plt+0x7968>
   18ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce4:	ldr	r1, [fp, #8]
   18ce8:	movw	r2, #127	; 0x7f
   18cec:	sdiv	r1, r2, r1
   18cf0:	cmp	r0, r1
   18cf4:	blt	18e80 <__assert_fail@plt+0x7b08>
   18cf8:	b	18e98 <__assert_fail@plt+0x7b20>
   18cfc:	b	18d00 <__assert_fail@plt+0x7988>
   18d00:	ldr	r0, [pc, #-1260]	; 1881c <__assert_fail@plt+0x74a4>
   18d04:	ldr	r1, [fp, #8]
   18d08:	cmp	r1, r0
   18d0c:	blt	18d24 <__assert_fail@plt+0x79ac>
   18d10:	b	18d30 <__assert_fail@plt+0x79b8>
   18d14:	ldr	r0, [fp, #8]
   18d18:	movw	r1, #0
   18d1c:	cmp	r1, r0
   18d20:	bge	18d30 <__assert_fail@plt+0x79b8>
   18d24:	movw	r0, #0
   18d28:	str	r0, [sp, #164]	; 0xa4
   18d2c:	b	18d48 <__assert_fail@plt+0x79d0>
   18d30:	ldr	r0, [fp, #8]
   18d34:	movw	r1, #0
   18d38:	sub	r0, r1, r0
   18d3c:	movw	r1, #127	; 0x7f
   18d40:	sdiv	r0, r1, r0
   18d44:	str	r0, [sp, #164]	; 0xa4
   18d48:	ldr	r0, [sp, #164]	; 0xa4
   18d4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d50:	mvn	r2, #0
   18d54:	sub	r1, r2, r1
   18d58:	cmp	r0, r1
   18d5c:	ble	18e80 <__assert_fail@plt+0x7b08>
   18d60:	b	18e98 <__assert_fail@plt+0x7b20>
   18d64:	b	18d68 <__assert_fail@plt+0x79f0>
   18d68:	b	18dc4 <__assert_fail@plt+0x7a4c>
   18d6c:	b	18dc4 <__assert_fail@plt+0x7a4c>
   18d70:	ldr	r0, [fp, #8]
   18d74:	cmn	r0, #1
   18d78:	bne	18dc4 <__assert_fail@plt+0x7a4c>
   18d7c:	b	18d80 <__assert_fail@plt+0x7a08>
   18d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d84:	mvn	r1, #127	; 0x7f
   18d88:	add	r0, r0, r1
   18d8c:	movw	r1, #0
   18d90:	cmp	r1, r0
   18d94:	blt	18e80 <__assert_fail@plt+0x7b08>
   18d98:	b	18e98 <__assert_fail@plt+0x7b20>
   18d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18da0:	movw	r1, #0
   18da4:	cmp	r1, r0
   18da8:	bge	18e98 <__assert_fail@plt+0x7b20>
   18dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db0:	sub	r0, r0, #1
   18db4:	movw	r1, #127	; 0x7f
   18db8:	cmp	r1, r0
   18dbc:	blt	18e80 <__assert_fail@plt+0x7b08>
   18dc0:	b	18e98 <__assert_fail@plt+0x7b20>
   18dc4:	ldr	r0, [fp, #8]
   18dc8:	mvn	r1, #127	; 0x7f
   18dcc:	sdiv	r0, r1, r0
   18dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dd4:	cmp	r0, r1
   18dd8:	blt	18e80 <__assert_fail@plt+0x7b08>
   18ddc:	b	18e98 <__assert_fail@plt+0x7b20>
   18de0:	ldr	r0, [fp, #8]
   18de4:	cmp	r0, #0
   18de8:	bne	18df0 <__assert_fail@plt+0x7a78>
   18dec:	b	18e98 <__assert_fail@plt+0x7b20>
   18df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df4:	cmp	r0, #0
   18df8:	bge	18e68 <__assert_fail@plt+0x7af0>
   18dfc:	b	18e00 <__assert_fail@plt+0x7a88>
   18e00:	b	18e4c <__assert_fail@plt+0x7ad4>
   18e04:	b	18e4c <__assert_fail@plt+0x7ad4>
   18e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e0c:	cmn	r0, #1
   18e10:	bne	18e4c <__assert_fail@plt+0x7ad4>
   18e14:	b	18e18 <__assert_fail@plt+0x7aa0>
   18e18:	ldr	r0, [fp, #8]
   18e1c:	mvn	r1, #127	; 0x7f
   18e20:	add	r0, r0, r1
   18e24:	movw	r1, #0
   18e28:	cmp	r1, r0
   18e2c:	blt	18e80 <__assert_fail@plt+0x7b08>
   18e30:	b	18e98 <__assert_fail@plt+0x7b20>
   18e34:	ldr	r0, [fp, #8]
   18e38:	sub	r0, r0, #1
   18e3c:	movw	r1, #127	; 0x7f
   18e40:	cmp	r1, r0
   18e44:	blt	18e80 <__assert_fail@plt+0x7b08>
   18e48:	b	18e98 <__assert_fail@plt+0x7b20>
   18e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e50:	mvn	r1, #127	; 0x7f
   18e54:	sdiv	r0, r1, r0
   18e58:	ldr	r1, [fp, #8]
   18e5c:	cmp	r0, r1
   18e60:	blt	18e80 <__assert_fail@plt+0x7b08>
   18e64:	b	18e98 <__assert_fail@plt+0x7b20>
   18e68:	ldr	r0, [fp, #8]
   18e6c:	movw	r1, #127	; 0x7f
   18e70:	sdiv	r0, r1, r0
   18e74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e78:	cmp	r0, r1
   18e7c:	bge	18e98 <__assert_fail@plt+0x7b20>
   18e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e84:	ldr	r1, [fp, #8]
   18e88:	mul	r0, r0, r1
   18e8c:	sxtb	r0, r0
   18e90:	str	r0, [fp, #-28]	; 0xffffffe4
   18e94:	b	1a0a8 <__assert_fail@plt+0x8d30>
   18e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e9c:	ldr	r1, [fp, #8]
   18ea0:	mul	r0, r0, r1
   18ea4:	sxtb	r0, r0
   18ea8:	str	r0, [fp, #-28]	; 0xffffffe4
   18eac:	b	1a0ac <__assert_fail@plt+0x8d34>
   18eb0:	ldr	r0, [fp, #8]
   18eb4:	cmp	r0, #0
   18eb8:	bge	18fc8 <__assert_fail@plt+0x7c50>
   18ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec0:	cmp	r0, #0
   18ec4:	bge	18f50 <__assert_fail@plt+0x7bd8>
   18ec8:	b	18ecc <__assert_fail@plt+0x7b54>
   18ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed0:	ldr	r1, [fp, #8]
   18ed4:	movw	r2, #255	; 0xff
   18ed8:	sdiv	r1, r2, r1
   18edc:	cmp	r0, r1
   18ee0:	blt	19064 <__assert_fail@plt+0x7cec>
   18ee4:	b	19080 <__assert_fail@plt+0x7d08>
   18ee8:	b	18eec <__assert_fail@plt+0x7b74>
   18eec:	ldr	r0, [pc, #-1752]	; 1881c <__assert_fail@plt+0x74a4>
   18ef0:	ldr	r1, [fp, #8]
   18ef4:	cmp	r1, r0
   18ef8:	blt	18f10 <__assert_fail@plt+0x7b98>
   18efc:	b	18f1c <__assert_fail@plt+0x7ba4>
   18f00:	ldr	r0, [fp, #8]
   18f04:	movw	r1, #0
   18f08:	cmp	r1, r0
   18f0c:	bge	18f1c <__assert_fail@plt+0x7ba4>
   18f10:	movw	r0, #0
   18f14:	str	r0, [sp, #160]	; 0xa0
   18f18:	b	18f34 <__assert_fail@plt+0x7bbc>
   18f1c:	ldr	r0, [fp, #8]
   18f20:	movw	r1, #0
   18f24:	sub	r0, r1, r0
   18f28:	movw	r1, #255	; 0xff
   18f2c:	sdiv	r0, r1, r0
   18f30:	str	r0, [sp, #160]	; 0xa0
   18f34:	ldr	r0, [sp, #160]	; 0xa0
   18f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f3c:	mvn	r2, #0
   18f40:	sub	r1, r2, r1
   18f44:	cmp	r0, r1
   18f48:	ble	19064 <__assert_fail@plt+0x7cec>
   18f4c:	b	19080 <__assert_fail@plt+0x7d08>
   18f50:	b	18f54 <__assert_fail@plt+0x7bdc>
   18f54:	b	18fac <__assert_fail@plt+0x7c34>
   18f58:	b	18fac <__assert_fail@plt+0x7c34>
   18f5c:	ldr	r0, [fp, #8]
   18f60:	cmn	r0, #1
   18f64:	bne	18fac <__assert_fail@plt+0x7c34>
   18f68:	b	18f6c <__assert_fail@plt+0x7bf4>
   18f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f70:	add	r0, r0, #0
   18f74:	movw	r1, #0
   18f78:	cmp	r1, r0
   18f7c:	blt	19064 <__assert_fail@plt+0x7cec>
   18f80:	b	19080 <__assert_fail@plt+0x7d08>
   18f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f88:	movw	r1, #0
   18f8c:	cmp	r1, r0
   18f90:	bge	19080 <__assert_fail@plt+0x7d08>
   18f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f98:	sub	r0, r0, #1
   18f9c:	mvn	r1, #0
   18fa0:	cmp	r1, r0
   18fa4:	blt	19064 <__assert_fail@plt+0x7cec>
   18fa8:	b	19080 <__assert_fail@plt+0x7d08>
   18fac:	ldr	r0, [fp, #8]
   18fb0:	movw	r1, #0
   18fb4:	sdiv	r0, r1, r0
   18fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fbc:	cmp	r0, r1
   18fc0:	blt	19064 <__assert_fail@plt+0x7cec>
   18fc4:	b	19080 <__assert_fail@plt+0x7d08>
   18fc8:	ldr	r0, [fp, #8]
   18fcc:	cmp	r0, #0
   18fd0:	bne	18fd8 <__assert_fail@plt+0x7c60>
   18fd4:	b	19080 <__assert_fail@plt+0x7d08>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	cmp	r0, #0
   18fe0:	bge	1904c <__assert_fail@plt+0x7cd4>
   18fe4:	b	18fe8 <__assert_fail@plt+0x7c70>
   18fe8:	b	19030 <__assert_fail@plt+0x7cb8>
   18fec:	b	19030 <__assert_fail@plt+0x7cb8>
   18ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff4:	cmn	r0, #1
   18ff8:	bne	19030 <__assert_fail@plt+0x7cb8>
   18ffc:	b	19000 <__assert_fail@plt+0x7c88>
   19000:	ldr	r0, [fp, #8]
   19004:	add	r0, r0, #0
   19008:	movw	r1, #0
   1900c:	cmp	r1, r0
   19010:	blt	19064 <__assert_fail@plt+0x7cec>
   19014:	b	19080 <__assert_fail@plt+0x7d08>
   19018:	ldr	r0, [fp, #8]
   1901c:	sub	r0, r0, #1
   19020:	mvn	r1, #0
   19024:	cmp	r1, r0
   19028:	blt	19064 <__assert_fail@plt+0x7cec>
   1902c:	b	19080 <__assert_fail@plt+0x7d08>
   19030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19034:	movw	r1, #0
   19038:	sdiv	r0, r1, r0
   1903c:	ldr	r1, [fp, #8]
   19040:	cmp	r0, r1
   19044:	blt	19064 <__assert_fail@plt+0x7cec>
   19048:	b	19080 <__assert_fail@plt+0x7d08>
   1904c:	ldr	r0, [fp, #8]
   19050:	movw	r1, #255	; 0xff
   19054:	sdiv	r0, r1, r0
   19058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1905c:	cmp	r0, r1
   19060:	bge	19080 <__assert_fail@plt+0x7d08>
   19064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19068:	ldr	r1, [fp, #8]
   1906c:	mul	r0, r0, r1
   19070:	and	r0, r0, #255	; 0xff
   19074:	str	r0, [fp, #-28]	; 0xffffffe4
   19078:	b	1a0a8 <__assert_fail@plt+0x8d30>
   1907c:	andhi	r0, r0, r0
   19080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19084:	ldr	r1, [fp, #8]
   19088:	mul	r0, r0, r1
   1908c:	and	r0, r0, #255	; 0xff
   19090:	str	r0, [fp, #-28]	; 0xffffffe4
   19094:	b	1a0ac <__assert_fail@plt+0x8d34>
   19098:	b	19470 <__assert_fail@plt+0x80f8>
   1909c:	b	190a0 <__assert_fail@plt+0x7d28>
   190a0:	ldr	r0, [fp, #8]
   190a4:	cmp	r0, #0
   190a8:	bge	191bc <__assert_fail@plt+0x7e44>
   190ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b0:	cmp	r0, #0
   190b4:	bge	19140 <__assert_fail@plt+0x7dc8>
   190b8:	b	190bc <__assert_fail@plt+0x7d44>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	ldr	r1, [fp, #8]
   190c4:	movw	r2, #32767	; 0x7fff
   190c8:	sdiv	r1, r2, r1
   190cc:	cmp	r0, r1
   190d0:	blt	1925c <__assert_fail@plt+0x7ee4>
   190d4:	b	19274 <__assert_fail@plt+0x7efc>
   190d8:	b	190dc <__assert_fail@plt+0x7d64>
   190dc:	ldr	r0, [pc, #4084]	; 1a0d8 <__assert_fail@plt+0x8d60>
   190e0:	ldr	r1, [fp, #8]
   190e4:	cmp	r1, r0
   190e8:	blt	19100 <__assert_fail@plt+0x7d88>
   190ec:	b	1910c <__assert_fail@plt+0x7d94>
   190f0:	ldr	r0, [fp, #8]
   190f4:	movw	r1, #0
   190f8:	cmp	r1, r0
   190fc:	bge	1910c <__assert_fail@plt+0x7d94>
   19100:	movw	r0, #0
   19104:	str	r0, [sp, #156]	; 0x9c
   19108:	b	19124 <__assert_fail@plt+0x7dac>
   1910c:	ldr	r0, [fp, #8]
   19110:	movw	r1, #0
   19114:	sub	r0, r1, r0
   19118:	movw	r1, #32767	; 0x7fff
   1911c:	sdiv	r0, r1, r0
   19120:	str	r0, [sp, #156]	; 0x9c
   19124:	ldr	r0, [sp, #156]	; 0x9c
   19128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1912c:	mvn	r2, #0
   19130:	sub	r1, r2, r1
   19134:	cmp	r0, r1
   19138:	ble	1925c <__assert_fail@plt+0x7ee4>
   1913c:	b	19274 <__assert_fail@plt+0x7efc>
   19140:	b	19144 <__assert_fail@plt+0x7dcc>
   19144:	b	191a0 <__assert_fail@plt+0x7e28>
   19148:	b	191a0 <__assert_fail@plt+0x7e28>
   1914c:	ldr	r0, [fp, #8]
   19150:	cmn	r0, #1
   19154:	bne	191a0 <__assert_fail@plt+0x7e28>
   19158:	b	1915c <__assert_fail@plt+0x7de4>
   1915c:	ldr	r0, [pc, #3964]	; 1a0e0 <__assert_fail@plt+0x8d68>
   19160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19164:	add	r0, r1, r0
   19168:	movw	r1, #0
   1916c:	cmp	r1, r0
   19170:	blt	1925c <__assert_fail@plt+0x7ee4>
   19174:	b	19274 <__assert_fail@plt+0x7efc>
   19178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1917c:	movw	r1, #0
   19180:	cmp	r1, r0
   19184:	bge	19274 <__assert_fail@plt+0x7efc>
   19188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1918c:	sub	r0, r0, #1
   19190:	movw	r1, #32767	; 0x7fff
   19194:	cmp	r1, r0
   19198:	blt	1925c <__assert_fail@plt+0x7ee4>
   1919c:	b	19274 <__assert_fail@plt+0x7efc>
   191a0:	ldr	r0, [pc, #3896]	; 1a0e0 <__assert_fail@plt+0x8d68>
   191a4:	ldr	r1, [fp, #8]
   191a8:	sdiv	r0, r0, r1
   191ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191b0:	cmp	r0, r1
   191b4:	blt	1925c <__assert_fail@plt+0x7ee4>
   191b8:	b	19274 <__assert_fail@plt+0x7efc>
   191bc:	ldr	r0, [fp, #8]
   191c0:	cmp	r0, #0
   191c4:	bne	191cc <__assert_fail@plt+0x7e54>
   191c8:	b	19274 <__assert_fail@plt+0x7efc>
   191cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d0:	cmp	r0, #0
   191d4:	bge	19244 <__assert_fail@plt+0x7ecc>
   191d8:	b	191dc <__assert_fail@plt+0x7e64>
   191dc:	b	19228 <__assert_fail@plt+0x7eb0>
   191e0:	b	19228 <__assert_fail@plt+0x7eb0>
   191e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e8:	cmn	r0, #1
   191ec:	bne	19228 <__assert_fail@plt+0x7eb0>
   191f0:	b	191f4 <__assert_fail@plt+0x7e7c>
   191f4:	ldr	r0, [pc, #3812]	; 1a0e0 <__assert_fail@plt+0x8d68>
   191f8:	ldr	r1, [fp, #8]
   191fc:	add	r0, r1, r0
   19200:	movw	r1, #0
   19204:	cmp	r1, r0
   19208:	blt	1925c <__assert_fail@plt+0x7ee4>
   1920c:	b	19274 <__assert_fail@plt+0x7efc>
   19210:	ldr	r0, [fp, #8]
   19214:	sub	r0, r0, #1
   19218:	movw	r1, #32767	; 0x7fff
   1921c:	cmp	r1, r0
   19220:	blt	1925c <__assert_fail@plt+0x7ee4>
   19224:	b	19274 <__assert_fail@plt+0x7efc>
   19228:	ldr	r0, [pc, #3760]	; 1a0e0 <__assert_fail@plt+0x8d68>
   1922c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19230:	sdiv	r0, r0, r1
   19234:	ldr	r1, [fp, #8]
   19238:	cmp	r0, r1
   1923c:	blt	1925c <__assert_fail@plt+0x7ee4>
   19240:	b	19274 <__assert_fail@plt+0x7efc>
   19244:	ldr	r0, [fp, #8]
   19248:	movw	r1, #32767	; 0x7fff
   1924c:	sdiv	r0, r1, r0
   19250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19254:	cmp	r0, r1
   19258:	bge	19274 <__assert_fail@plt+0x7efc>
   1925c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19260:	ldr	r1, [fp, #8]
   19264:	mul	r0, r0, r1
   19268:	sxth	r0, r0
   1926c:	str	r0, [fp, #-28]	; 0xffffffe4
   19270:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19278:	ldr	r1, [fp, #8]
   1927c:	mul	r0, r0, r1
   19280:	sxth	r0, r0
   19284:	str	r0, [fp, #-28]	; 0xffffffe4
   19288:	b	1a0ac <__assert_fail@plt+0x8d34>
   1928c:	ldr	r0, [fp, #8]
   19290:	cmp	r0, #0
   19294:	bge	193a4 <__assert_fail@plt+0x802c>
   19298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1929c:	cmp	r0, #0
   192a0:	bge	1932c <__assert_fail@plt+0x7fb4>
   192a4:	b	192a8 <__assert_fail@plt+0x7f30>
   192a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192ac:	ldr	r1, [fp, #8]
   192b0:	movw	r2, #65535	; 0xffff
   192b4:	sdiv	r1, r2, r1
   192b8:	cmp	r0, r1
   192bc:	blt	19440 <__assert_fail@plt+0x80c8>
   192c0:	b	19458 <__assert_fail@plt+0x80e0>
   192c4:	b	192c8 <__assert_fail@plt+0x7f50>
   192c8:	ldr	r0, [pc, #3592]	; 1a0d8 <__assert_fail@plt+0x8d60>
   192cc:	ldr	r1, [fp, #8]
   192d0:	cmp	r1, r0
   192d4:	blt	192ec <__assert_fail@plt+0x7f74>
   192d8:	b	192f8 <__assert_fail@plt+0x7f80>
   192dc:	ldr	r0, [fp, #8]
   192e0:	movw	r1, #0
   192e4:	cmp	r1, r0
   192e8:	bge	192f8 <__assert_fail@plt+0x7f80>
   192ec:	movw	r0, #0
   192f0:	str	r0, [sp, #152]	; 0x98
   192f4:	b	19310 <__assert_fail@plt+0x7f98>
   192f8:	ldr	r0, [fp, #8]
   192fc:	movw	r1, #0
   19300:	sub	r0, r1, r0
   19304:	movw	r1, #65535	; 0xffff
   19308:	sdiv	r0, r1, r0
   1930c:	str	r0, [sp, #152]	; 0x98
   19310:	ldr	r0, [sp, #152]	; 0x98
   19314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19318:	mvn	r2, #0
   1931c:	sub	r1, r2, r1
   19320:	cmp	r0, r1
   19324:	ble	19440 <__assert_fail@plt+0x80c8>
   19328:	b	19458 <__assert_fail@plt+0x80e0>
   1932c:	b	19330 <__assert_fail@plt+0x7fb8>
   19330:	b	19388 <__assert_fail@plt+0x8010>
   19334:	b	19388 <__assert_fail@plt+0x8010>
   19338:	ldr	r0, [fp, #8]
   1933c:	cmn	r0, #1
   19340:	bne	19388 <__assert_fail@plt+0x8010>
   19344:	b	19348 <__assert_fail@plt+0x7fd0>
   19348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1934c:	add	r0, r0, #0
   19350:	movw	r1, #0
   19354:	cmp	r1, r0
   19358:	blt	19440 <__assert_fail@plt+0x80c8>
   1935c:	b	19458 <__assert_fail@plt+0x80e0>
   19360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19364:	movw	r1, #0
   19368:	cmp	r1, r0
   1936c:	bge	19458 <__assert_fail@plt+0x80e0>
   19370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19374:	sub	r0, r0, #1
   19378:	mvn	r1, #0
   1937c:	cmp	r1, r0
   19380:	blt	19440 <__assert_fail@plt+0x80c8>
   19384:	b	19458 <__assert_fail@plt+0x80e0>
   19388:	ldr	r0, [fp, #8]
   1938c:	movw	r1, #0
   19390:	sdiv	r0, r1, r0
   19394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19398:	cmp	r0, r1
   1939c:	blt	19440 <__assert_fail@plt+0x80c8>
   193a0:	b	19458 <__assert_fail@plt+0x80e0>
   193a4:	ldr	r0, [fp, #8]
   193a8:	cmp	r0, #0
   193ac:	bne	193b4 <__assert_fail@plt+0x803c>
   193b0:	b	19458 <__assert_fail@plt+0x80e0>
   193b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b8:	cmp	r0, #0
   193bc:	bge	19428 <__assert_fail@plt+0x80b0>
   193c0:	b	193c4 <__assert_fail@plt+0x804c>
   193c4:	b	1940c <__assert_fail@plt+0x8094>
   193c8:	b	1940c <__assert_fail@plt+0x8094>
   193cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193d0:	cmn	r0, #1
   193d4:	bne	1940c <__assert_fail@plt+0x8094>
   193d8:	b	193dc <__assert_fail@plt+0x8064>
   193dc:	ldr	r0, [fp, #8]
   193e0:	add	r0, r0, #0
   193e4:	movw	r1, #0
   193e8:	cmp	r1, r0
   193ec:	blt	19440 <__assert_fail@plt+0x80c8>
   193f0:	b	19458 <__assert_fail@plt+0x80e0>
   193f4:	ldr	r0, [fp, #8]
   193f8:	sub	r0, r0, #1
   193fc:	mvn	r1, #0
   19400:	cmp	r1, r0
   19404:	blt	19440 <__assert_fail@plt+0x80c8>
   19408:	b	19458 <__assert_fail@plt+0x80e0>
   1940c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19410:	movw	r1, #0
   19414:	sdiv	r0, r1, r0
   19418:	ldr	r1, [fp, #8]
   1941c:	cmp	r0, r1
   19420:	blt	19440 <__assert_fail@plt+0x80c8>
   19424:	b	19458 <__assert_fail@plt+0x80e0>
   19428:	ldr	r0, [fp, #8]
   1942c:	movw	r1, #65535	; 0xffff
   19430:	sdiv	r0, r1, r0
   19434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19438:	cmp	r0, r1
   1943c:	bge	19458 <__assert_fail@plt+0x80e0>
   19440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19444:	ldr	r1, [fp, #8]
   19448:	mul	r0, r0, r1
   1944c:	uxth	r0, r0
   19450:	str	r0, [fp, #-28]	; 0xffffffe4
   19454:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1945c:	ldr	r1, [fp, #8]
   19460:	mul	r0, r0, r1
   19464:	uxth	r0, r0
   19468:	str	r0, [fp, #-28]	; 0xffffffe4
   1946c:	b	1a0ac <__assert_fail@plt+0x8d34>
   19470:	b	19474 <__assert_fail@plt+0x80fc>
   19474:	b	19478 <__assert_fail@plt+0x8100>
   19478:	ldr	r0, [fp, #8]
   1947c:	cmp	r0, #0
   19480:	bge	19584 <__assert_fail@plt+0x820c>
   19484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19488:	cmp	r0, #0
   1948c:	bge	19518 <__assert_fail@plt+0x81a0>
   19490:	b	19494 <__assert_fail@plt+0x811c>
   19494:	ldr	r0, [pc, #3128]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1949c:	ldr	r2, [fp, #8]
   194a0:	sdiv	r0, r0, r2
   194a4:	cmp	r1, r0
   194a8:	blt	19614 <__assert_fail@plt+0x829c>
   194ac:	b	19628 <__assert_fail@plt+0x82b0>
   194b0:	b	194b4 <__assert_fail@plt+0x813c>
   194b4:	ldr	r0, [pc, #3100]	; 1a0d8 <__assert_fail@plt+0x8d60>
   194b8:	ldr	r1, [fp, #8]
   194bc:	cmp	r1, r0
   194c0:	blt	194d8 <__assert_fail@plt+0x8160>
   194c4:	b	194e4 <__assert_fail@plt+0x816c>
   194c8:	ldr	r0, [fp, #8]
   194cc:	movw	r1, #0
   194d0:	cmp	r1, r0
   194d4:	bge	194e4 <__assert_fail@plt+0x816c>
   194d8:	movw	r0, #0
   194dc:	str	r0, [sp, #148]	; 0x94
   194e0:	b	194fc <__assert_fail@plt+0x8184>
   194e4:	ldr	r0, [pc, #3048]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   194e8:	ldr	r1, [fp, #8]
   194ec:	movw	r2, #0
   194f0:	sub	r1, r2, r1
   194f4:	sdiv	r0, r0, r1
   194f8:	str	r0, [sp, #148]	; 0x94
   194fc:	ldr	r0, [sp, #148]	; 0x94
   19500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19504:	mvn	r2, #0
   19508:	sub	r1, r2, r1
   1950c:	cmp	r0, r1
   19510:	ble	19614 <__assert_fail@plt+0x829c>
   19514:	b	19628 <__assert_fail@plt+0x82b0>
   19518:	ldr	r0, [fp, #8]
   1951c:	cmn	r0, #1
   19520:	bne	19568 <__assert_fail@plt+0x81f0>
   19524:	b	19528 <__assert_fail@plt+0x81b0>
   19528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1952c:	add	r0, r0, #-2147483648	; 0x80000000
   19530:	movw	r1, #0
   19534:	cmp	r1, r0
   19538:	blt	19614 <__assert_fail@plt+0x829c>
   1953c:	b	19628 <__assert_fail@plt+0x82b0>
   19540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19544:	movw	r1, #0
   19548:	cmp	r1, r0
   1954c:	bge	19628 <__assert_fail@plt+0x82b0>
   19550:	ldr	r0, [pc, #2940]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19558:	sub	r1, r1, #1
   1955c:	cmp	r0, r1
   19560:	blt	19614 <__assert_fail@plt+0x829c>
   19564:	b	19628 <__assert_fail@plt+0x82b0>
   19568:	ldr	r0, [pc, #2924]	; 1a0dc <__assert_fail@plt+0x8d64>
   1956c:	ldr	r1, [fp, #8]
   19570:	sdiv	r0, r0, r1
   19574:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19578:	cmp	r0, r1
   1957c:	blt	19614 <__assert_fail@plt+0x829c>
   19580:	b	19628 <__assert_fail@plt+0x82b0>
   19584:	ldr	r0, [fp, #8]
   19588:	cmp	r0, #0
   1958c:	bne	19594 <__assert_fail@plt+0x821c>
   19590:	b	19628 <__assert_fail@plt+0x82b0>
   19594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19598:	cmp	r0, #0
   1959c:	bge	195fc <__assert_fail@plt+0x8284>
   195a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195a4:	cmn	r0, #1
   195a8:	bne	195e0 <__assert_fail@plt+0x8268>
   195ac:	b	195b0 <__assert_fail@plt+0x8238>
   195b0:	ldr	r0, [fp, #8]
   195b4:	add	r0, r0, #-2147483648	; 0x80000000
   195b8:	movw	r1, #0
   195bc:	cmp	r1, r0
   195c0:	blt	19614 <__assert_fail@plt+0x829c>
   195c4:	b	19628 <__assert_fail@plt+0x82b0>
   195c8:	ldr	r0, [pc, #2820]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   195cc:	ldr	r1, [fp, #8]
   195d0:	sub	r1, r1, #1
   195d4:	cmp	r0, r1
   195d8:	blt	19614 <__assert_fail@plt+0x829c>
   195dc:	b	19628 <__assert_fail@plt+0x82b0>
   195e0:	ldr	r0, [pc, #2804]	; 1a0dc <__assert_fail@plt+0x8d64>
   195e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195e8:	sdiv	r0, r0, r1
   195ec:	ldr	r1, [fp, #8]
   195f0:	cmp	r0, r1
   195f4:	blt	19614 <__assert_fail@plt+0x829c>
   195f8:	b	19628 <__assert_fail@plt+0x82b0>
   195fc:	ldr	r0, [pc, #2768]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19600:	ldr	r1, [fp, #8]
   19604:	sdiv	r0, r0, r1
   19608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1960c:	cmp	r0, r1
   19610:	bge	19628 <__assert_fail@plt+0x82b0>
   19614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19618:	ldr	r1, [fp, #8]
   1961c:	mul	r0, r0, r1
   19620:	str	r0, [fp, #-28]	; 0xffffffe4
   19624:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1962c:	ldr	r1, [fp, #8]
   19630:	mul	r0, r0, r1
   19634:	str	r0, [fp, #-28]	; 0xffffffe4
   19638:	b	1a0ac <__assert_fail@plt+0x8d34>
   1963c:	ldr	r0, [fp, #8]
   19640:	cmp	r0, #0
   19644:	bge	19754 <__assert_fail@plt+0x83dc>
   19648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1964c:	cmp	r0, #0
   19650:	bge	196dc <__assert_fail@plt+0x8364>
   19654:	b	19674 <__assert_fail@plt+0x82fc>
   19658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1965c:	ldr	r1, [fp, #8]
   19660:	mvn	r2, #0
   19664:	udiv	r1, r2, r1
   19668:	cmp	r0, r1
   1966c:	bcc	197f0 <__assert_fail@plt+0x8478>
   19670:	b	19804 <__assert_fail@plt+0x848c>
   19674:	b	19678 <__assert_fail@plt+0x8300>
   19678:	ldr	r0, [pc, #2648]	; 1a0d8 <__assert_fail@plt+0x8d60>
   1967c:	ldr	r1, [fp, #8]
   19680:	cmp	r1, r0
   19684:	blt	1969c <__assert_fail@plt+0x8324>
   19688:	b	196a8 <__assert_fail@plt+0x8330>
   1968c:	ldr	r0, [fp, #8]
   19690:	movw	r1, #0
   19694:	cmp	r1, r0
   19698:	bge	196a8 <__assert_fail@plt+0x8330>
   1969c:	movw	r0, #1
   196a0:	str	r0, [sp, #144]	; 0x90
   196a4:	b	196c0 <__assert_fail@plt+0x8348>
   196a8:	ldr	r0, [fp, #8]
   196ac:	movw	r1, #0
   196b0:	sub	r0, r1, r0
   196b4:	mvn	r1, #0
   196b8:	udiv	r0, r1, r0
   196bc:	str	r0, [sp, #144]	; 0x90
   196c0:	ldr	r0, [sp, #144]	; 0x90
   196c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c8:	mvn	r2, #0
   196cc:	sub	r1, r2, r1
   196d0:	cmp	r0, r1
   196d4:	bls	197f0 <__assert_fail@plt+0x8478>
   196d8:	b	19804 <__assert_fail@plt+0x848c>
   196dc:	b	196e0 <__assert_fail@plt+0x8368>
   196e0:	b	19738 <__assert_fail@plt+0x83c0>
   196e4:	b	19738 <__assert_fail@plt+0x83c0>
   196e8:	ldr	r0, [fp, #8]
   196ec:	cmn	r0, #1
   196f0:	bne	19738 <__assert_fail@plt+0x83c0>
   196f4:	b	196f8 <__assert_fail@plt+0x8380>
   196f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196fc:	add	r0, r0, #0
   19700:	movw	r1, #0
   19704:	cmp	r1, r0
   19708:	blt	197f0 <__assert_fail@plt+0x8478>
   1970c:	b	19804 <__assert_fail@plt+0x848c>
   19710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19714:	movw	r1, #0
   19718:	cmp	r1, r0
   1971c:	bge	19804 <__assert_fail@plt+0x848c>
   19720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19724:	sub	r0, r0, #1
   19728:	mvn	r1, #0
   1972c:	cmp	r1, r0
   19730:	blt	197f0 <__assert_fail@plt+0x8478>
   19734:	b	19804 <__assert_fail@plt+0x848c>
   19738:	ldr	r0, [fp, #8]
   1973c:	movw	r1, #0
   19740:	sdiv	r0, r1, r0
   19744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19748:	cmp	r0, r1
   1974c:	blt	197f0 <__assert_fail@plt+0x8478>
   19750:	b	19804 <__assert_fail@plt+0x848c>
   19754:	ldr	r0, [fp, #8]
   19758:	cmp	r0, #0
   1975c:	bne	19764 <__assert_fail@plt+0x83ec>
   19760:	b	19804 <__assert_fail@plt+0x848c>
   19764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19768:	cmp	r0, #0
   1976c:	bge	197d8 <__assert_fail@plt+0x8460>
   19770:	b	19774 <__assert_fail@plt+0x83fc>
   19774:	b	197bc <__assert_fail@plt+0x8444>
   19778:	b	197bc <__assert_fail@plt+0x8444>
   1977c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19780:	cmn	r0, #1
   19784:	bne	197bc <__assert_fail@plt+0x8444>
   19788:	b	1978c <__assert_fail@plt+0x8414>
   1978c:	ldr	r0, [fp, #8]
   19790:	add	r0, r0, #0
   19794:	movw	r1, #0
   19798:	cmp	r1, r0
   1979c:	blt	197f0 <__assert_fail@plt+0x8478>
   197a0:	b	19804 <__assert_fail@plt+0x848c>
   197a4:	ldr	r0, [fp, #8]
   197a8:	sub	r0, r0, #1
   197ac:	mvn	r1, #0
   197b0:	cmp	r1, r0
   197b4:	blt	197f0 <__assert_fail@plt+0x8478>
   197b8:	b	19804 <__assert_fail@plt+0x848c>
   197bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c0:	movw	r1, #0
   197c4:	sdiv	r0, r1, r0
   197c8:	ldr	r1, [fp, #8]
   197cc:	cmp	r0, r1
   197d0:	blt	197f0 <__assert_fail@plt+0x8478>
   197d4:	b	19804 <__assert_fail@plt+0x848c>
   197d8:	ldr	r0, [fp, #8]
   197dc:	mvn	r1, #0
   197e0:	udiv	r0, r1, r0
   197e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197e8:	cmp	r0, r1
   197ec:	bcs	19804 <__assert_fail@plt+0x848c>
   197f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f4:	ldr	r1, [fp, #8]
   197f8:	mul	r0, r0, r1
   197fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19800:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19808:	ldr	r1, [fp, #8]
   1980c:	mul	r0, r0, r1
   19810:	str	r0, [fp, #-28]	; 0xffffffe4
   19814:	b	1a0ac <__assert_fail@plt+0x8d34>
   19818:	b	1981c <__assert_fail@plt+0x84a4>
   1981c:	b	19820 <__assert_fail@plt+0x84a8>
   19820:	ldr	r0, [fp, #8]
   19824:	cmp	r0, #0
   19828:	bge	1992c <__assert_fail@plt+0x85b4>
   1982c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19830:	cmp	r0, #0
   19834:	bge	198c0 <__assert_fail@plt+0x8548>
   19838:	b	1983c <__assert_fail@plt+0x84c4>
   1983c:	ldr	r0, [pc, #2192]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19844:	ldr	r2, [fp, #8]
   19848:	sdiv	r0, r0, r2
   1984c:	cmp	r1, r0
   19850:	blt	199bc <__assert_fail@plt+0x8644>
   19854:	b	199d0 <__assert_fail@plt+0x8658>
   19858:	b	1985c <__assert_fail@plt+0x84e4>
   1985c:	ldr	r0, [pc, #2164]	; 1a0d8 <__assert_fail@plt+0x8d60>
   19860:	ldr	r1, [fp, #8]
   19864:	cmp	r1, r0
   19868:	blt	19880 <__assert_fail@plt+0x8508>
   1986c:	b	1988c <__assert_fail@plt+0x8514>
   19870:	ldr	r0, [fp, #8]
   19874:	movw	r1, #0
   19878:	cmp	r1, r0
   1987c:	bge	1988c <__assert_fail@plt+0x8514>
   19880:	movw	r0, #0
   19884:	str	r0, [sp, #140]	; 0x8c
   19888:	b	198a4 <__assert_fail@plt+0x852c>
   1988c:	ldr	r0, [pc, #2112]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19890:	ldr	r1, [fp, #8]
   19894:	movw	r2, #0
   19898:	sub	r1, r2, r1
   1989c:	sdiv	r0, r0, r1
   198a0:	str	r0, [sp, #140]	; 0x8c
   198a4:	ldr	r0, [sp, #140]	; 0x8c
   198a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198ac:	mvn	r2, #0
   198b0:	sub	r1, r2, r1
   198b4:	cmp	r0, r1
   198b8:	ble	199bc <__assert_fail@plt+0x8644>
   198bc:	b	199d0 <__assert_fail@plt+0x8658>
   198c0:	ldr	r0, [fp, #8]
   198c4:	cmn	r0, #1
   198c8:	bne	19910 <__assert_fail@plt+0x8598>
   198cc:	b	198d0 <__assert_fail@plt+0x8558>
   198d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d4:	add	r0, r0, #-2147483648	; 0x80000000
   198d8:	movw	r1, #0
   198dc:	cmp	r1, r0
   198e0:	blt	199bc <__assert_fail@plt+0x8644>
   198e4:	b	199d0 <__assert_fail@plt+0x8658>
   198e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198ec:	movw	r1, #0
   198f0:	cmp	r1, r0
   198f4:	bge	199d0 <__assert_fail@plt+0x8658>
   198f8:	ldr	r0, [pc, #2004]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   198fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19900:	sub	r1, r1, #1
   19904:	cmp	r0, r1
   19908:	blt	199bc <__assert_fail@plt+0x8644>
   1990c:	b	199d0 <__assert_fail@plt+0x8658>
   19910:	ldr	r0, [pc, #1988]	; 1a0dc <__assert_fail@plt+0x8d64>
   19914:	ldr	r1, [fp, #8]
   19918:	sdiv	r0, r0, r1
   1991c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19920:	cmp	r0, r1
   19924:	blt	199bc <__assert_fail@plt+0x8644>
   19928:	b	199d0 <__assert_fail@plt+0x8658>
   1992c:	ldr	r0, [fp, #8]
   19930:	cmp	r0, #0
   19934:	bne	1993c <__assert_fail@plt+0x85c4>
   19938:	b	199d0 <__assert_fail@plt+0x8658>
   1993c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19940:	cmp	r0, #0
   19944:	bge	199a4 <__assert_fail@plt+0x862c>
   19948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1994c:	cmn	r0, #1
   19950:	bne	19988 <__assert_fail@plt+0x8610>
   19954:	b	19958 <__assert_fail@plt+0x85e0>
   19958:	ldr	r0, [fp, #8]
   1995c:	add	r0, r0, #-2147483648	; 0x80000000
   19960:	movw	r1, #0
   19964:	cmp	r1, r0
   19968:	blt	199bc <__assert_fail@plt+0x8644>
   1996c:	b	199d0 <__assert_fail@plt+0x8658>
   19970:	ldr	r0, [pc, #1884]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   19974:	ldr	r1, [fp, #8]
   19978:	sub	r1, r1, #1
   1997c:	cmp	r0, r1
   19980:	blt	199bc <__assert_fail@plt+0x8644>
   19984:	b	199d0 <__assert_fail@plt+0x8658>
   19988:	ldr	r0, [pc, #1868]	; 1a0dc <__assert_fail@plt+0x8d64>
   1998c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19990:	sdiv	r0, r0, r1
   19994:	ldr	r1, [fp, #8]
   19998:	cmp	r0, r1
   1999c:	blt	199bc <__assert_fail@plt+0x8644>
   199a0:	b	199d0 <__assert_fail@plt+0x8658>
   199a4:	ldr	r0, [pc, #1832]	; 1a0d4 <__assert_fail@plt+0x8d5c>
   199a8:	ldr	r1, [fp, #8]
   199ac:	sdiv	r0, r0, r1
   199b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199b4:	cmp	r0, r1
   199b8:	bge	199d0 <__assert_fail@plt+0x8658>
   199bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c0:	ldr	r1, [fp, #8]
   199c4:	mul	r0, r0, r1
   199c8:	str	r0, [fp, #-28]	; 0xffffffe4
   199cc:	b	1a0a8 <__assert_fail@plt+0x8d30>
   199d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d4:	ldr	r1, [fp, #8]
   199d8:	mul	r0, r0, r1
   199dc:	str	r0, [fp, #-28]	; 0xffffffe4
   199e0:	b	1a0ac <__assert_fail@plt+0x8d34>
   199e4:	ldr	r0, [fp, #8]
   199e8:	cmp	r0, #0
   199ec:	bge	19afc <__assert_fail@plt+0x8784>
   199f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f4:	cmp	r0, #0
   199f8:	bge	19a84 <__assert_fail@plt+0x870c>
   199fc:	b	19a1c <__assert_fail@plt+0x86a4>
   19a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a04:	ldr	r1, [fp, #8]
   19a08:	mvn	r2, #0
   19a0c:	udiv	r1, r2, r1
   19a10:	cmp	r0, r1
   19a14:	bcc	19b98 <__assert_fail@plt+0x8820>
   19a18:	b	19bac <__assert_fail@plt+0x8834>
   19a1c:	b	19a20 <__assert_fail@plt+0x86a8>
   19a20:	ldr	r0, [pc, #1712]	; 1a0d8 <__assert_fail@plt+0x8d60>
   19a24:	ldr	r1, [fp, #8]
   19a28:	cmp	r1, r0
   19a2c:	blt	19a44 <__assert_fail@plt+0x86cc>
   19a30:	b	19a50 <__assert_fail@plt+0x86d8>
   19a34:	ldr	r0, [fp, #8]
   19a38:	movw	r1, #0
   19a3c:	cmp	r1, r0
   19a40:	bge	19a50 <__assert_fail@plt+0x86d8>
   19a44:	movw	r0, #1
   19a48:	str	r0, [sp, #136]	; 0x88
   19a4c:	b	19a68 <__assert_fail@plt+0x86f0>
   19a50:	ldr	r0, [fp, #8]
   19a54:	movw	r1, #0
   19a58:	sub	r0, r1, r0
   19a5c:	mvn	r1, #0
   19a60:	udiv	r0, r1, r0
   19a64:	str	r0, [sp, #136]	; 0x88
   19a68:	ldr	r0, [sp, #136]	; 0x88
   19a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a70:	mvn	r2, #0
   19a74:	sub	r1, r2, r1
   19a78:	cmp	r0, r1
   19a7c:	bls	19b98 <__assert_fail@plt+0x8820>
   19a80:	b	19bac <__assert_fail@plt+0x8834>
   19a84:	b	19a88 <__assert_fail@plt+0x8710>
   19a88:	b	19ae0 <__assert_fail@plt+0x8768>
   19a8c:	b	19ae0 <__assert_fail@plt+0x8768>
   19a90:	ldr	r0, [fp, #8]
   19a94:	cmn	r0, #1
   19a98:	bne	19ae0 <__assert_fail@plt+0x8768>
   19a9c:	b	19aa0 <__assert_fail@plt+0x8728>
   19aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa4:	add	r0, r0, #0
   19aa8:	movw	r1, #0
   19aac:	cmp	r1, r0
   19ab0:	blt	19b98 <__assert_fail@plt+0x8820>
   19ab4:	b	19bac <__assert_fail@plt+0x8834>
   19ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19abc:	movw	r1, #0
   19ac0:	cmp	r1, r0
   19ac4:	bge	19bac <__assert_fail@plt+0x8834>
   19ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19acc:	sub	r0, r0, #1
   19ad0:	mvn	r1, #0
   19ad4:	cmp	r1, r0
   19ad8:	blt	19b98 <__assert_fail@plt+0x8820>
   19adc:	b	19bac <__assert_fail@plt+0x8834>
   19ae0:	ldr	r0, [fp, #8]
   19ae4:	movw	r1, #0
   19ae8:	sdiv	r0, r1, r0
   19aec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19af0:	cmp	r0, r1
   19af4:	blt	19b98 <__assert_fail@plt+0x8820>
   19af8:	b	19bac <__assert_fail@plt+0x8834>
   19afc:	ldr	r0, [fp, #8]
   19b00:	cmp	r0, #0
   19b04:	bne	19b0c <__assert_fail@plt+0x8794>
   19b08:	b	19bac <__assert_fail@plt+0x8834>
   19b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b10:	cmp	r0, #0
   19b14:	bge	19b80 <__assert_fail@plt+0x8808>
   19b18:	b	19b1c <__assert_fail@plt+0x87a4>
   19b1c:	b	19b64 <__assert_fail@plt+0x87ec>
   19b20:	b	19b64 <__assert_fail@plt+0x87ec>
   19b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b28:	cmn	r0, #1
   19b2c:	bne	19b64 <__assert_fail@plt+0x87ec>
   19b30:	b	19b34 <__assert_fail@plt+0x87bc>
   19b34:	ldr	r0, [fp, #8]
   19b38:	add	r0, r0, #0
   19b3c:	movw	r1, #0
   19b40:	cmp	r1, r0
   19b44:	blt	19b98 <__assert_fail@plt+0x8820>
   19b48:	b	19bac <__assert_fail@plt+0x8834>
   19b4c:	ldr	r0, [fp, #8]
   19b50:	sub	r0, r0, #1
   19b54:	mvn	r1, #0
   19b58:	cmp	r1, r0
   19b5c:	blt	19b98 <__assert_fail@plt+0x8820>
   19b60:	b	19bac <__assert_fail@plt+0x8834>
   19b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b68:	movw	r1, #0
   19b6c:	sdiv	r0, r1, r0
   19b70:	ldr	r1, [fp, #8]
   19b74:	cmp	r0, r1
   19b78:	blt	19b98 <__assert_fail@plt+0x8820>
   19b7c:	b	19bac <__assert_fail@plt+0x8834>
   19b80:	ldr	r0, [fp, #8]
   19b84:	mvn	r1, #0
   19b88:	udiv	r0, r1, r0
   19b8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b90:	cmp	r0, r1
   19b94:	bcs	19bac <__assert_fail@plt+0x8834>
   19b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b9c:	ldr	r1, [fp, #8]
   19ba0:	mul	r0, r0, r1
   19ba4:	str	r0, [fp, #-28]	; 0xffffffe4
   19ba8:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb0:	ldr	r1, [fp, #8]
   19bb4:	mul	r0, r0, r1
   19bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   19bbc:	b	1a0ac <__assert_fail@plt+0x8d34>
   19bc0:	b	19bc4 <__assert_fail@plt+0x884c>
   19bc4:	ldr	r0, [fp, #8]
   19bc8:	cmp	r0, #0
   19bcc:	bge	19d54 <__assert_fail@plt+0x89dc>
   19bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bd4:	cmp	r0, #0
   19bd8:	bge	19cc0 <__assert_fail@plt+0x8948>
   19bdc:	b	19be0 <__assert_fail@plt+0x8868>
   19be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be4:	ldr	r1, [fp, #8]
   19be8:	asr	r3, r1, #31
   19bec:	mvn	r2, #0
   19bf0:	mvn	ip, #-2147483648	; 0x80000000
   19bf4:	str	r0, [sp, #132]	; 0x84
   19bf8:	mov	r0, r2
   19bfc:	str	r1, [sp, #128]	; 0x80
   19c00:	mov	r1, ip
   19c04:	ldr	r2, [sp, #128]	; 0x80
   19c08:	bl	1bf24 <__assert_fail@plt+0xabac>
   19c0c:	ldr	r2, [sp, #132]	; 0x84
   19c10:	subs	r0, r2, r0
   19c14:	rscs	r1, r1, r2, asr #31
   19c18:	str	r0, [sp, #124]	; 0x7c
   19c1c:	str	r1, [sp, #120]	; 0x78
   19c20:	blt	19e34 <__assert_fail@plt+0x8abc>
   19c24:	b	19e48 <__assert_fail@plt+0x8ad0>
   19c28:	b	19c2c <__assert_fail@plt+0x88b4>
   19c2c:	ldr	r0, [pc, #1188]	; 1a0d8 <__assert_fail@plt+0x8d60>
   19c30:	ldr	r1, [fp, #8]
   19c34:	cmp	r1, r0
   19c38:	blt	19c50 <__assert_fail@plt+0x88d8>
   19c3c:	b	19c64 <__assert_fail@plt+0x88ec>
   19c40:	ldr	r0, [fp, #8]
   19c44:	movw	r1, #0
   19c48:	cmp	r1, r0
   19c4c:	bge	19c64 <__assert_fail@plt+0x88ec>
   19c50:	mov	r0, #0
   19c54:	mvn	r1, #0
   19c58:	str	r1, [sp, #116]	; 0x74
   19c5c:	str	r0, [sp, #112]	; 0x70
   19c60:	b	19c98 <__assert_fail@plt+0x8920>
   19c64:	ldr	r0, [fp, #8]
   19c68:	rsb	r0, r0, #0
   19c6c:	asr	r3, r0, #31
   19c70:	mvn	r1, #0
   19c74:	mvn	r2, #-2147483648	; 0x80000000
   19c78:	str	r0, [sp, #108]	; 0x6c
   19c7c:	mov	r0, r1
   19c80:	mov	r1, r2
   19c84:	ldr	r2, [sp, #108]	; 0x6c
   19c88:	bl	1bf24 <__assert_fail@plt+0xabac>
   19c8c:	str	r0, [sp, #116]	; 0x74
   19c90:	str	r1, [sp, #112]	; 0x70
   19c94:	b	19c98 <__assert_fail@plt+0x8920>
   19c98:	ldr	r0, [sp, #112]	; 0x70
   19c9c:	ldr	r1, [sp, #116]	; 0x74
   19ca0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ca4:	mvn	r2, r2
   19ca8:	subs	r1, r2, r1
   19cac:	rscs	r0, r0, r2, asr #31
   19cb0:	str	r1, [sp, #104]	; 0x68
   19cb4:	str	r0, [sp, #100]	; 0x64
   19cb8:	bge	19e34 <__assert_fail@plt+0x8abc>
   19cbc:	b	19e48 <__assert_fail@plt+0x8ad0>
   19cc0:	ldr	r0, [fp, #8]
   19cc4:	cmn	r0, #1
   19cc8:	bne	19d14 <__assert_fail@plt+0x899c>
   19ccc:	b	19cd0 <__assert_fail@plt+0x8958>
   19cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd4:	mov	r1, #-2147483648	; 0x80000000
   19cd8:	add	r1, r1, r0, asr #31
   19cdc:	rsbs	r0, r0, #0
   19ce0:	rscs	r1, r1, #0
   19ce4:	str	r0, [sp, #96]	; 0x60
   19ce8:	str	r1, [sp, #92]	; 0x5c
   19cec:	blt	19e34 <__assert_fail@plt+0x8abc>
   19cf0:	b	19e48 <__assert_fail@plt+0x8ad0>
   19cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cf8:	movw	r1, #0
   19cfc:	cmp	r1, r0
   19d00:	bge	19e48 <__assert_fail@plt+0x8ad0>
   19d04:	mov	r0, #0
   19d08:	cmp	r0, #0
   19d0c:	bne	19e34 <__assert_fail@plt+0x8abc>
   19d10:	b	19e48 <__assert_fail@plt+0x8ad0>
   19d14:	ldr	r0, [fp, #8]
   19d18:	asr	r3, r0, #31
   19d1c:	mov	r1, #0
   19d20:	mov	r2, #-2147483648	; 0x80000000
   19d24:	str	r0, [sp, #88]	; 0x58
   19d28:	mov	r0, r1
   19d2c:	mov	r1, r2
   19d30:	ldr	r2, [sp, #88]	; 0x58
   19d34:	bl	1bf24 <__assert_fail@plt+0xabac>
   19d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d3c:	subs	r0, r0, r2
   19d40:	sbcs	r1, r1, r2, asr #31
   19d44:	str	r0, [sp, #84]	; 0x54
   19d48:	str	r1, [sp, #80]	; 0x50
   19d4c:	blt	19e34 <__assert_fail@plt+0x8abc>
   19d50:	b	19e48 <__assert_fail@plt+0x8ad0>
   19d54:	ldr	r0, [fp, #8]
   19d58:	cmp	r0, #0
   19d5c:	bne	19d64 <__assert_fail@plt+0x89ec>
   19d60:	b	19e48 <__assert_fail@plt+0x8ad0>
   19d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d68:	cmp	r0, #0
   19d6c:	bge	19df4 <__assert_fail@plt+0x8a7c>
   19d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d74:	cmn	r0, #1
   19d78:	bne	19db4 <__assert_fail@plt+0x8a3c>
   19d7c:	b	19d80 <__assert_fail@plt+0x8a08>
   19d80:	ldr	r0, [fp, #8]
   19d84:	mov	r1, #-2147483648	; 0x80000000
   19d88:	add	r1, r1, r0, asr #31
   19d8c:	rsbs	r0, r0, #0
   19d90:	rscs	r1, r1, #0
   19d94:	str	r0, [sp, #76]	; 0x4c
   19d98:	str	r1, [sp, #72]	; 0x48
   19d9c:	blt	19e34 <__assert_fail@plt+0x8abc>
   19da0:	b	19e48 <__assert_fail@plt+0x8ad0>
   19da4:	mov	r0, #0
   19da8:	cmp	r0, #0
   19dac:	bne	19e34 <__assert_fail@plt+0x8abc>
   19db0:	b	19e48 <__assert_fail@plt+0x8ad0>
   19db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db8:	asr	r3, r0, #31
   19dbc:	mov	r1, #0
   19dc0:	mov	r2, #-2147483648	; 0x80000000
   19dc4:	str	r0, [sp, #68]	; 0x44
   19dc8:	mov	r0, r1
   19dcc:	mov	r1, r2
   19dd0:	ldr	r2, [sp, #68]	; 0x44
   19dd4:	bl	1bf24 <__assert_fail@plt+0xabac>
   19dd8:	ldr	r2, [fp, #8]
   19ddc:	subs	r0, r0, r2
   19de0:	sbcs	r1, r1, r2, asr #31
   19de4:	str	r0, [sp, #64]	; 0x40
   19de8:	str	r1, [sp, #60]	; 0x3c
   19dec:	blt	19e34 <__assert_fail@plt+0x8abc>
   19df0:	b	19e48 <__assert_fail@plt+0x8ad0>
   19df4:	ldr	r0, [fp, #8]
   19df8:	asr	r3, r0, #31
   19dfc:	mvn	r1, #0
   19e00:	mvn	r2, #-2147483648	; 0x80000000
   19e04:	str	r0, [sp, #56]	; 0x38
   19e08:	mov	r0, r1
   19e0c:	mov	r1, r2
   19e10:	ldr	r2, [sp, #56]	; 0x38
   19e14:	bl	1bf24 <__assert_fail@plt+0xabac>
   19e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e1c:	subs	r0, r0, r2
   19e20:	sbcs	r1, r1, r2, asr #31
   19e24:	str	r0, [sp, #52]	; 0x34
   19e28:	str	r1, [sp, #48]	; 0x30
   19e2c:	bge	19e48 <__assert_fail@plt+0x8ad0>
   19e30:	b	19e34 <__assert_fail@plt+0x8abc>
   19e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e38:	ldr	r1, [fp, #8]
   19e3c:	mul	r0, r0, r1
   19e40:	str	r0, [fp, #-28]	; 0xffffffe4
   19e44:	b	1a0a8 <__assert_fail@plt+0x8d30>
   19e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e4c:	ldr	r1, [fp, #8]
   19e50:	mul	r0, r0, r1
   19e54:	str	r0, [fp, #-28]	; 0xffffffe4
   19e58:	b	1a0ac <__assert_fail@plt+0x8d34>
   19e5c:	ldr	r0, [fp, #8]
   19e60:	cmp	r0, #0
   19e64:	bge	19fc4 <__assert_fail@plt+0x8c4c>
   19e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e6c:	cmp	r0, #0
   19e70:	bge	19f4c <__assert_fail@plt+0x8bd4>
   19e74:	b	19ebc <__assert_fail@plt+0x8b44>
   19e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e7c:	ldr	r1, [fp, #8]
   19e80:	asr	r3, r1, #31
   19e84:	mvn	r2, #0
   19e88:	str	r0, [sp, #44]	; 0x2c
   19e8c:	mov	r0, r2
   19e90:	str	r1, [sp, #40]	; 0x28
   19e94:	mov	r1, r2
   19e98:	ldr	r2, [sp, #40]	; 0x28
   19e9c:	bl	1bff8 <__assert_fail@plt+0xac80>
   19ea0:	ldr	r2, [sp, #44]	; 0x2c
   19ea4:	subs	r0, r2, r0
   19ea8:	rscs	r1, r1, r2, asr #31
   19eac:	str	r0, [sp, #36]	; 0x24
   19eb0:	str	r1, [sp, #32]
   19eb4:	bcc	1a080 <__assert_fail@plt+0x8d08>
   19eb8:	b	1a094 <__assert_fail@plt+0x8d1c>
   19ebc:	b	19ec0 <__assert_fail@plt+0x8b48>
   19ec0:	ldr	r0, [pc, #528]	; 1a0d8 <__assert_fail@plt+0x8d60>
   19ec4:	ldr	r1, [fp, #8]
   19ec8:	cmp	r1, r0
   19ecc:	blt	19ee4 <__assert_fail@plt+0x8b6c>
   19ed0:	b	19ef8 <__assert_fail@plt+0x8b80>
   19ed4:	ldr	r0, [fp, #8]
   19ed8:	movw	r1, #0
   19edc:	cmp	r1, r0
   19ee0:	bge	19ef8 <__assert_fail@plt+0x8b80>
   19ee4:	mov	r0, #1
   19ee8:	mvn	r1, #0
   19eec:	str	r1, [sp, #28]
   19ef0:	str	r0, [sp, #24]
   19ef4:	b	19f24 <__assert_fail@plt+0x8bac>
   19ef8:	ldr	r0, [fp, #8]
   19efc:	rsb	r0, r0, #0
   19f00:	asr	r3, r0, #31
   19f04:	mvn	r1, #0
   19f08:	str	r0, [sp, #20]
   19f0c:	mov	r0, r1
   19f10:	ldr	r2, [sp, #20]
   19f14:	bl	1bff8 <__assert_fail@plt+0xac80>
   19f18:	str	r0, [sp, #28]
   19f1c:	str	r1, [sp, #24]
   19f20:	b	19f24 <__assert_fail@plt+0x8bac>
   19f24:	ldr	r0, [sp, #24]
   19f28:	ldr	r1, [sp, #28]
   19f2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f30:	mvn	r2, r2
   19f34:	subs	r1, r2, r1
   19f38:	rscs	r0, r0, r2, asr #31
   19f3c:	str	r1, [sp, #16]
   19f40:	str	r0, [sp, #12]
   19f44:	bcs	1a080 <__assert_fail@plt+0x8d08>
   19f48:	b	1a094 <__assert_fail@plt+0x8d1c>
   19f4c:	b	19f50 <__assert_fail@plt+0x8bd8>
   19f50:	b	19fa8 <__assert_fail@plt+0x8c30>
   19f54:	b	19fa8 <__assert_fail@plt+0x8c30>
   19f58:	ldr	r0, [fp, #8]
   19f5c:	cmn	r0, #1
   19f60:	bne	19fa8 <__assert_fail@plt+0x8c30>
   19f64:	b	19f68 <__assert_fail@plt+0x8bf0>
   19f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f6c:	add	r0, r0, #0
   19f70:	movw	r1, #0
   19f74:	cmp	r1, r0
   19f78:	blt	1a080 <__assert_fail@plt+0x8d08>
   19f7c:	b	1a094 <__assert_fail@plt+0x8d1c>
   19f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f84:	movw	r1, #0
   19f88:	cmp	r1, r0
   19f8c:	bge	1a094 <__assert_fail@plt+0x8d1c>
   19f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f94:	sub	r0, r0, #1
   19f98:	mvn	r1, #0
   19f9c:	cmp	r1, r0
   19fa0:	blt	1a080 <__assert_fail@plt+0x8d08>
   19fa4:	b	1a094 <__assert_fail@plt+0x8d1c>
   19fa8:	ldr	r0, [fp, #8]
   19fac:	movw	r1, #0
   19fb0:	sdiv	r0, r1, r0
   19fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fb8:	cmp	r0, r1
   19fbc:	blt	1a080 <__assert_fail@plt+0x8d08>
   19fc0:	b	1a094 <__assert_fail@plt+0x8d1c>
   19fc4:	ldr	r0, [fp, #8]
   19fc8:	cmp	r0, #0
   19fcc:	bne	19fd4 <__assert_fail@plt+0x8c5c>
   19fd0:	b	1a094 <__assert_fail@plt+0x8d1c>
   19fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fd8:	cmp	r0, #0
   19fdc:	bge	1a048 <__assert_fail@plt+0x8cd0>
   19fe0:	b	19fe4 <__assert_fail@plt+0x8c6c>
   19fe4:	b	1a02c <__assert_fail@plt+0x8cb4>
   19fe8:	b	1a02c <__assert_fail@plt+0x8cb4>
   19fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ff0:	cmn	r0, #1
   19ff4:	bne	1a02c <__assert_fail@plt+0x8cb4>
   19ff8:	b	19ffc <__assert_fail@plt+0x8c84>
   19ffc:	ldr	r0, [fp, #8]
   1a000:	add	r0, r0, #0
   1a004:	movw	r1, #0
   1a008:	cmp	r1, r0
   1a00c:	blt	1a080 <__assert_fail@plt+0x8d08>
   1a010:	b	1a094 <__assert_fail@plt+0x8d1c>
   1a014:	ldr	r0, [fp, #8]
   1a018:	sub	r0, r0, #1
   1a01c:	mvn	r1, #0
   1a020:	cmp	r1, r0
   1a024:	blt	1a080 <__assert_fail@plt+0x8d08>
   1a028:	b	1a094 <__assert_fail@plt+0x8d1c>
   1a02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a030:	movw	r1, #0
   1a034:	sdiv	r0, r1, r0
   1a038:	ldr	r1, [fp, #8]
   1a03c:	cmp	r0, r1
   1a040:	blt	1a080 <__assert_fail@plt+0x8d08>
   1a044:	b	1a094 <__assert_fail@plt+0x8d1c>
   1a048:	ldr	r0, [fp, #8]
   1a04c:	asr	r3, r0, #31
   1a050:	mvn	r1, #0
   1a054:	str	r0, [sp, #8]
   1a058:	mov	r0, r1
   1a05c:	ldr	r2, [sp, #8]
   1a060:	bl	1bff8 <__assert_fail@plt+0xac80>
   1a064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a068:	subs	r0, r0, r2
   1a06c:	sbcs	r1, r1, r2, asr #31
   1a070:	str	r0, [sp, #4]
   1a074:	str	r1, [sp]
   1a078:	bcs	1a094 <__assert_fail@plt+0x8d1c>
   1a07c:	b	1a080 <__assert_fail@plt+0x8d08>
   1a080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a084:	ldr	r1, [fp, #8]
   1a088:	mul	r0, r0, r1
   1a08c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a090:	b	1a0a8 <__assert_fail@plt+0x8d30>
   1a094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a098:	ldr	r1, [fp, #8]
   1a09c:	mul	r0, r0, r1
   1a0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0a4:	b	1a0ac <__assert_fail@plt+0x8d34>
   1a0a8:	bl	1a284 <__assert_fail@plt+0x8f0c>
   1a0ac:	ldr	r0, [fp, #-4]
   1a0b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0b4:	bl	17540 <__assert_fail@plt+0x61c8>
   1a0b8:	str	r0, [fp, #-4]
   1a0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0c0:	ldr	r1, [fp, #-8]
   1a0c4:	str	r0, [r1]
   1a0c8:	ldr	r0, [fp, #-4]
   1a0cc:	mov	sp, fp
   1a0d0:	pop	{fp, pc}
   1a0d4:	svcvc	0x00ffffff
   1a0d8:	andhi	r0, r0, r1
   1a0dc:	andhi	r0, r0, r0
   1a0e0:			; <UNDEFINED> instruction: 0xffff8000
   1a0e4:	push	{fp, lr}
   1a0e8:	mov	fp, sp
   1a0ec:	sub	sp, sp, #8
   1a0f0:	str	r0, [sp, #4]
   1a0f4:	ldr	r0, [sp, #4]
   1a0f8:	movw	r1, #1
   1a0fc:	bl	1a108 <__assert_fail@plt+0x8d90>
   1a100:	mov	sp, fp
   1a104:	pop	{fp, pc}
   1a108:	push	{fp, lr}
   1a10c:	mov	fp, sp
   1a110:	sub	sp, sp, #8
   1a114:	str	r0, [sp, #4]
   1a118:	str	r1, [sp]
   1a11c:	ldr	r0, [sp, #4]
   1a120:	ldr	r1, [sp]
   1a124:	bl	1a2d4 <__assert_fail@plt+0x8f5c>
   1a128:	bl	174cc <__assert_fail@plt+0x6154>
   1a12c:	mov	sp, fp
   1a130:	pop	{fp, pc}
   1a134:	push	{fp, lr}
   1a138:	mov	fp, sp
   1a13c:	sub	sp, sp, #8
   1a140:	str	r0, [sp, #4]
   1a144:	ldr	r0, [sp, #4]
   1a148:	movw	r1, #1
   1a14c:	bl	1a158 <__assert_fail@plt+0x8de0>
   1a150:	mov	sp, fp
   1a154:	pop	{fp, pc}
   1a158:	push	{fp, lr}
   1a15c:	mov	fp, sp
   1a160:	sub	sp, sp, #8
   1a164:	str	r0, [sp, #4]
   1a168:	str	r1, [sp]
   1a16c:	ldr	r0, [sp, #4]
   1a170:	ldr	r1, [sp]
   1a174:	bl	1a978 <__assert_fail@plt+0x9600>
   1a178:	bl	174cc <__assert_fail@plt+0x6154>
   1a17c:	mov	sp, fp
   1a180:	pop	{fp, pc}
   1a184:	push	{fp, lr}
   1a188:	mov	fp, sp
   1a18c:	sub	sp, sp, #16
   1a190:	str	r0, [fp, #-4]
   1a194:	str	r1, [sp, #8]
   1a198:	ldr	r0, [sp, #8]
   1a19c:	bl	174a8 <__assert_fail@plt+0x6130>
   1a1a0:	ldr	r1, [fp, #-4]
   1a1a4:	ldr	r2, [sp, #8]
   1a1a8:	str	r0, [sp, #4]
   1a1ac:	bl	110fc <memcpy@plt>
   1a1b0:	ldr	r0, [sp, #4]
   1a1b4:	mov	sp, fp
   1a1b8:	pop	{fp, pc}
   1a1bc:	push	{fp, lr}
   1a1c0:	mov	fp, sp
   1a1c4:	sub	sp, sp, #16
   1a1c8:	str	r0, [fp, #-4]
   1a1cc:	str	r1, [sp, #8]
   1a1d0:	ldr	r0, [sp, #8]
   1a1d4:	bl	174fc <__assert_fail@plt+0x6184>
   1a1d8:	ldr	r1, [fp, #-4]
   1a1dc:	ldr	r2, [sp, #8]
   1a1e0:	str	r0, [sp, #4]
   1a1e4:	bl	110fc <memcpy@plt>
   1a1e8:	ldr	r0, [sp, #4]
   1a1ec:	mov	sp, fp
   1a1f0:	pop	{fp, pc}
   1a1f4:	push	{fp, lr}
   1a1f8:	mov	fp, sp
   1a1fc:	sub	sp, sp, #16
   1a200:	str	r0, [fp, #-4]
   1a204:	str	r1, [sp, #8]
   1a208:	ldr	r0, [sp, #8]
   1a20c:	add	r0, r0, #1
   1a210:	bl	174fc <__assert_fail@plt+0x6184>
   1a214:	str	r0, [sp, #4]
   1a218:	ldr	r0, [sp, #4]
   1a21c:	ldr	r1, [sp, #8]
   1a220:	add	r0, r0, r1
   1a224:	movw	r1, #0
   1a228:	strb	r1, [r0]
   1a22c:	ldr	r0, [sp, #4]
   1a230:	ldr	r1, [fp, #-4]
   1a234:	ldr	r2, [sp, #8]
   1a238:	str	r0, [sp]
   1a23c:	bl	110fc <memcpy@plt>
   1a240:	ldr	r0, [sp]
   1a244:	mov	sp, fp
   1a248:	pop	{fp, pc}
   1a24c:	push	{fp, lr}
   1a250:	mov	fp, sp
   1a254:	sub	sp, sp, #8
   1a258:	str	r0, [sp, #4]
   1a25c:	ldr	r0, [sp, #4]
   1a260:	ldr	r1, [sp, #4]
   1a264:	str	r0, [sp]
   1a268:	mov	r0, r1
   1a26c:	bl	11258 <strlen@plt>
   1a270:	add	r1, r0, #1
   1a274:	ldr	r0, [sp]
   1a278:	bl	1a184 <__assert_fail@plt+0x8e0c>
   1a27c:	mov	sp, fp
   1a280:	pop	{fp, pc}
   1a284:	push	{fp, lr}
   1a288:	mov	fp, sp
   1a28c:	sub	sp, sp, #8
   1a290:	movw	r0, #57636	; 0xe124
   1a294:	movt	r0, #2
   1a298:	ldr	r0, [r0]
   1a29c:	movw	r1, #53212	; 0xcfdc
   1a2a0:	movt	r1, #1
   1a2a4:	str	r0, [sp, #4]
   1a2a8:	mov	r0, r1
   1a2ac:	bl	11240 <gettext@plt>
   1a2b0:	ldr	r1, [sp, #4]
   1a2b4:	str	r0, [sp]
   1a2b8:	mov	r0, r1
   1a2bc:	movw	r1, #0
   1a2c0:	movw	r2, #52151	; 0xcbb7
   1a2c4:	movt	r2, #1
   1a2c8:	ldr	r3, [sp]
   1a2cc:	bl	111b0 <error@plt>
   1a2d0:	bl	11360 <abort@plt>
   1a2d4:	push	{fp, lr}
   1a2d8:	mov	fp, sp
   1a2dc:	sub	sp, sp, #16
   1a2e0:	str	r0, [sp, #8]
   1a2e4:	str	r1, [sp, #4]
   1a2e8:	ldr	r0, [sp, #8]
   1a2ec:	cmp	r0, #0
   1a2f0:	beq	1a300 <__assert_fail@plt+0x8f88>
   1a2f4:	ldr	r0, [sp, #4]
   1a2f8:	cmp	r0, #0
   1a2fc:	bne	1a30c <__assert_fail@plt+0x8f94>
   1a300:	movw	r0, #1
   1a304:	str	r0, [sp, #4]
   1a308:	str	r0, [sp, #8]
   1a30c:	ldr	r0, [sp, #4]
   1a310:	cmp	r0, #0
   1a314:	beq	1a348 <__assert_fail@plt+0x8fd0>
   1a318:	ldr	r0, [pc, #76]	; 1a36c <__assert_fail@plt+0x8ff4>
   1a31c:	ldr	r1, [sp, #4]
   1a320:	udiv	r0, r0, r1
   1a324:	ldr	r1, [sp, #8]
   1a328:	cmp	r0, r1
   1a32c:	bcs	1a348 <__assert_fail@plt+0x8fd0>
   1a330:	bl	1127c <__errno_location@plt>
   1a334:	movw	lr, #12
   1a338:	str	lr, [r0]
   1a33c:	movw	r0, #0
   1a340:	str	r0, [fp, #-4]
   1a344:	b	1a360 <__assert_fail@plt+0x8fe8>
   1a348:	ldr	r0, [sp, #8]
   1a34c:	ldr	r1, [sp, #4]
   1a350:	bl	11084 <calloc@plt>
   1a354:	str	r0, [sp]
   1a358:	ldr	r0, [sp]
   1a35c:	str	r0, [fp, #-4]
   1a360:	ldr	r0, [fp, #-4]
   1a364:	mov	sp, fp
   1a368:	pop	{fp, pc}
   1a36c:	svcvc	0x00ffffff
   1a370:	push	{fp, lr}
   1a374:	mov	fp, sp
   1a378:	sub	sp, sp, #16
   1a37c:	str	r0, [sp, #8]
   1a380:	ldr	r0, [sp, #8]
   1a384:	cmp	r0, #0
   1a388:	bne	1a394 <__assert_fail@plt+0x901c>
   1a38c:	movw	r0, #1
   1a390:	str	r0, [sp, #8]
   1a394:	ldr	r0, [pc, #64]	; 1a3dc <__assert_fail@plt+0x9064>
   1a398:	ldr	r1, [sp, #8]
   1a39c:	cmp	r0, r1
   1a3a0:	bcs	1a3bc <__assert_fail@plt+0x9044>
   1a3a4:	bl	1127c <__errno_location@plt>
   1a3a8:	movw	lr, #12
   1a3ac:	str	lr, [r0]
   1a3b0:	movw	r0, #0
   1a3b4:	str	r0, [fp, #-4]
   1a3b8:	b	1a3d0 <__assert_fail@plt+0x9058>
   1a3bc:	ldr	r0, [sp, #8]
   1a3c0:	bl	111c8 <malloc@plt>
   1a3c4:	str	r0, [sp, #4]
   1a3c8:	ldr	r0, [sp, #4]
   1a3cc:	str	r0, [fp, #-4]
   1a3d0:	ldr	r0, [fp, #-4]
   1a3d4:	mov	sp, fp
   1a3d8:	pop	{fp, pc}
   1a3dc:	svcvc	0x00ffffff
   1a3e0:	push	{fp, lr}
   1a3e4:	mov	fp, sp
   1a3e8:	sub	sp, sp, #16
   1a3ec:	str	r0, [sp, #8]
   1a3f0:	str	r1, [sp, #4]
   1a3f4:	ldr	r0, [sp, #8]
   1a3f8:	movw	r1, #0
   1a3fc:	cmp	r0, r1
   1a400:	bne	1a414 <__assert_fail@plt+0x909c>
   1a404:	ldr	r0, [sp, #4]
   1a408:	bl	1a370 <__assert_fail@plt+0x8ff8>
   1a40c:	str	r0, [fp, #-4]
   1a410:	b	1a474 <__assert_fail@plt+0x90fc>
   1a414:	ldr	r0, [sp, #4]
   1a418:	cmp	r0, #0
   1a41c:	bne	1a434 <__assert_fail@plt+0x90bc>
   1a420:	ldr	r0, [sp, #8]
   1a424:	bl	13dbc <__assert_fail@plt+0x2a44>
   1a428:	movw	r0, #0
   1a42c:	str	r0, [fp, #-4]
   1a430:	b	1a474 <__assert_fail@plt+0x90fc>
   1a434:	ldr	r0, [pc, #68]	; 1a480 <__assert_fail@plt+0x9108>
   1a438:	ldr	r1, [sp, #4]
   1a43c:	cmp	r0, r1
   1a440:	bcs	1a45c <__assert_fail@plt+0x90e4>
   1a444:	bl	1127c <__errno_location@plt>
   1a448:	movw	lr, #12
   1a44c:	str	lr, [r0]
   1a450:	movw	r0, #0
   1a454:	str	r0, [fp, #-4]
   1a458:	b	1a474 <__assert_fail@plt+0x90fc>
   1a45c:	ldr	r0, [sp, #8]
   1a460:	ldr	r1, [sp, #4]
   1a464:	bl	11150 <realloc@plt>
   1a468:	str	r0, [sp]
   1a46c:	ldr	r0, [sp]
   1a470:	str	r0, [fp, #-4]
   1a474:	ldr	r0, [fp, #-4]
   1a478:	mov	sp, fp
   1a47c:	pop	{fp, pc}
   1a480:	svcvc	0x00ffffff
   1a484:	push	{fp, lr}
   1a488:	mov	fp, sp
   1a48c:	sub	sp, sp, #24
   1a490:	str	r0, [fp, #-8]
   1a494:	str	r1, [sp, #12]
   1a498:	ldr	r0, [fp, #-8]
   1a49c:	str	r0, [sp, #8]
   1a4a0:	ldr	r0, [sp, #12]
   1a4a4:	str	r0, [sp, #4]
   1a4a8:	ldr	r0, [sp, #8]
   1a4ac:	ldr	r1, [sp, #4]
   1a4b0:	cmp	r0, r1
   1a4b4:	bne	1a4c4 <__assert_fail@plt+0x914c>
   1a4b8:	movw	r0, #0
   1a4bc:	str	r0, [fp, #-4]
   1a4c0:	b	1a530 <__assert_fail@plt+0x91b8>
   1a4c4:	b	1a4c8 <__assert_fail@plt+0x9150>
   1a4c8:	ldr	r0, [sp, #8]
   1a4cc:	ldrb	r0, [r0]
   1a4d0:	bl	13a94 <__assert_fail@plt+0x271c>
   1a4d4:	strb	r0, [sp, #3]
   1a4d8:	ldr	r0, [sp, #4]
   1a4dc:	ldrb	r0, [r0]
   1a4e0:	bl	13a94 <__assert_fail@plt+0x271c>
   1a4e4:	strb	r0, [sp, #2]
   1a4e8:	ldrb	r0, [sp, #3]
   1a4ec:	cmp	r0, #0
   1a4f0:	bne	1a4f8 <__assert_fail@plt+0x9180>
   1a4f4:	b	1a520 <__assert_fail@plt+0x91a8>
   1a4f8:	ldr	r0, [sp, #8]
   1a4fc:	add	r0, r0, #1
   1a500:	str	r0, [sp, #8]
   1a504:	ldr	r0, [sp, #4]
   1a508:	add	r0, r0, #1
   1a50c:	str	r0, [sp, #4]
   1a510:	ldrb	r0, [sp, #3]
   1a514:	ldrb	r1, [sp, #2]
   1a518:	cmp	r0, r1
   1a51c:	beq	1a4c8 <__assert_fail@plt+0x9150>
   1a520:	ldrb	r0, [sp, #3]
   1a524:	ldrb	r1, [sp, #2]
   1a528:	sub	r0, r0, r1
   1a52c:	str	r0, [fp, #-4]
   1a530:	ldr	r0, [fp, #-4]
   1a534:	mov	sp, fp
   1a538:	pop	{fp, pc}
   1a53c:	push	{fp, lr}
   1a540:	mov	fp, sp
   1a544:	sub	sp, sp, #16
   1a548:	str	r0, [sp, #8]
   1a54c:	ldr	r0, [sp, #8]
   1a550:	bl	1118c <__fpending@plt>
   1a554:	cmp	r0, #0
   1a558:	movw	r0, #0
   1a55c:	movne	r0, #1
   1a560:	and	r0, r0, #1
   1a564:	strb	r0, [sp, #7]
   1a568:	ldr	r0, [sp, #8]
   1a56c:	bl	11198 <ferror_unlocked@plt>
   1a570:	cmp	r0, #0
   1a574:	movw	r0, #0
   1a578:	movne	r0, #1
   1a57c:	and	r0, r0, #1
   1a580:	strb	r0, [sp, #6]
   1a584:	ldr	r0, [sp, #8]
   1a588:	bl	1a60c <__assert_fail@plt+0x9294>
   1a58c:	cmp	r0, #0
   1a590:	movw	r0, #0
   1a594:	movne	r0, #1
   1a598:	and	r0, r0, #1
   1a59c:	strb	r0, [sp, #5]
   1a5a0:	ldrb	r0, [sp, #6]
   1a5a4:	tst	r0, #1
   1a5a8:	bne	1a5d4 <__assert_fail@plt+0x925c>
   1a5ac:	ldrb	r0, [sp, #5]
   1a5b0:	tst	r0, #1
   1a5b4:	beq	1a5f8 <__assert_fail@plt+0x9280>
   1a5b8:	ldrb	r0, [sp, #7]
   1a5bc:	tst	r0, #1
   1a5c0:	bne	1a5d4 <__assert_fail@plt+0x925c>
   1a5c4:	bl	1127c <__errno_location@plt>
   1a5c8:	ldr	r0, [r0]
   1a5cc:	cmp	r0, #9
   1a5d0:	beq	1a5f8 <__assert_fail@plt+0x9280>
   1a5d4:	ldrb	r0, [sp, #5]
   1a5d8:	tst	r0, #1
   1a5dc:	bne	1a5ec <__assert_fail@plt+0x9274>
   1a5e0:	bl	1127c <__errno_location@plt>
   1a5e4:	movw	lr, #0
   1a5e8:	str	lr, [r0]
   1a5ec:	mvn	r0, #0
   1a5f0:	str	r0, [fp, #-4]
   1a5f4:	b	1a600 <__assert_fail@plt+0x9288>
   1a5f8:	movw	r0, #0
   1a5fc:	str	r0, [fp, #-4]
   1a600:	ldr	r0, [fp, #-4]
   1a604:	mov	sp, fp
   1a608:	pop	{fp, pc}
   1a60c:	push	{fp, lr}
   1a610:	mov	fp, sp
   1a614:	sub	sp, sp, #32
   1a618:	str	r0, [fp, #-8]
   1a61c:	movw	r0, #0
   1a620:	str	r0, [fp, #-12]
   1a624:	str	r0, [sp, #12]
   1a628:	ldr	r0, [fp, #-8]
   1a62c:	bl	112ac <fileno@plt>
   1a630:	str	r0, [sp, #16]
   1a634:	ldr	r0, [sp, #16]
   1a638:	cmp	r0, #0
   1a63c:	bge	1a650 <__assert_fail@plt+0x92d8>
   1a640:	ldr	r0, [fp, #-8]
   1a644:	bl	112c4 <fclose@plt>
   1a648:	str	r0, [fp, #-4]
   1a64c:	b	1a6ec <__assert_fail@plt+0x9374>
   1a650:	ldr	r0, [fp, #-8]
   1a654:	bl	111ec <__freading@plt>
   1a658:	cmp	r0, #0
   1a65c:	beq	1a694 <__assert_fail@plt+0x931c>
   1a660:	ldr	r0, [fp, #-8]
   1a664:	bl	112ac <fileno@plt>
   1a668:	mov	lr, sp
   1a66c:	mov	r1, #1
   1a670:	str	r1, [lr]
   1a674:	mov	r1, #0
   1a678:	mov	r2, r1
   1a67c:	mov	r3, r1
   1a680:	bl	11174 <lseek64@plt>
   1a684:	and	r0, r0, r1
   1a688:	cmn	r0, #1
   1a68c:	beq	1a6b0 <__assert_fail@plt+0x9338>
   1a690:	b	1a694 <__assert_fail@plt+0x931c>
   1a694:	ldr	r0, [fp, #-8]
   1a698:	bl	1a6f8 <__assert_fail@plt+0x9380>
   1a69c:	cmp	r0, #0
   1a6a0:	beq	1a6b0 <__assert_fail@plt+0x9338>
   1a6a4:	bl	1127c <__errno_location@plt>
   1a6a8:	ldr	r0, [r0]
   1a6ac:	str	r0, [fp, #-12]
   1a6b0:	ldr	r0, [fp, #-8]
   1a6b4:	bl	112c4 <fclose@plt>
   1a6b8:	str	r0, [sp, #12]
   1a6bc:	ldr	r0, [fp, #-12]
   1a6c0:	cmp	r0, #0
   1a6c4:	beq	1a6e4 <__assert_fail@plt+0x936c>
   1a6c8:	ldr	r0, [fp, #-12]
   1a6cc:	str	r0, [sp, #8]
   1a6d0:	bl	1127c <__errno_location@plt>
   1a6d4:	ldr	lr, [sp, #8]
   1a6d8:	str	lr, [r0]
   1a6dc:	mvn	r0, #0
   1a6e0:	str	r0, [sp, #12]
   1a6e4:	ldr	r0, [sp, #12]
   1a6e8:	str	r0, [fp, #-4]
   1a6ec:	ldr	r0, [fp, #-4]
   1a6f0:	mov	sp, fp
   1a6f4:	pop	{fp, pc}
   1a6f8:	push	{fp, lr}
   1a6fc:	mov	fp, sp
   1a700:	sub	sp, sp, #8
   1a704:	str	r0, [sp]
   1a708:	ldr	r0, [sp]
   1a70c:	movw	r1, #0
   1a710:	cmp	r0, r1
   1a714:	beq	1a728 <__assert_fail@plt+0x93b0>
   1a718:	ldr	r0, [sp]
   1a71c:	bl	111ec <__freading@plt>
   1a720:	cmp	r0, #0
   1a724:	bne	1a738 <__assert_fail@plt+0x93c0>
   1a728:	ldr	r0, [sp]
   1a72c:	bl	110c0 <fflush@plt>
   1a730:	str	r0, [sp, #4]
   1a734:	b	1a74c <__assert_fail@plt+0x93d4>
   1a738:	ldr	r0, [sp]
   1a73c:	bl	1a758 <__assert_fail@plt+0x93e0>
   1a740:	ldr	r0, [sp]
   1a744:	bl	110c0 <fflush@plt>
   1a748:	str	r0, [sp, #4]
   1a74c:	ldr	r0, [sp, #4]
   1a750:	mov	sp, fp
   1a754:	pop	{fp, pc}
   1a758:	push	{fp, lr}
   1a75c:	mov	fp, sp
   1a760:	sub	sp, sp, #16
   1a764:	str	r0, [fp, #-4]
   1a768:	ldr	r0, [fp, #-4]
   1a76c:	ldr	r0, [r0]
   1a770:	and	r0, r0, #256	; 0x100
   1a774:	cmp	r0, #0
   1a778:	beq	1a7a0 <__assert_fail@plt+0x9428>
   1a77c:	ldr	r0, [fp, #-4]
   1a780:	mov	r1, sp
   1a784:	mov	r2, #1
   1a788:	str	r2, [r1]
   1a78c:	mov	r1, #0
   1a790:	mov	r2, r1
   1a794:	mov	r3, r1
   1a798:	bl	1a7a8 <__assert_fail@plt+0x9430>
   1a79c:	str	r0, [sp, #8]
   1a7a0:	mov	sp, fp
   1a7a4:	pop	{fp, pc}
   1a7a8:	push	{fp, lr}
   1a7ac:	mov	fp, sp
   1a7b0:	sub	sp, sp, #32
   1a7b4:	ldr	r1, [fp, #8]
   1a7b8:	str	r0, [fp, #-8]
   1a7bc:	str	r3, [sp, #20]
   1a7c0:	str	r2, [sp, #16]
   1a7c4:	ldr	r0, [fp, #-8]
   1a7c8:	ldr	r0, [r0, #8]
   1a7cc:	ldr	r2, [fp, #-8]
   1a7d0:	ldr	r2, [r2, #4]
   1a7d4:	cmp	r0, r2
   1a7d8:	str	r1, [sp, #4]
   1a7dc:	bne	1a888 <__assert_fail@plt+0x9510>
   1a7e0:	ldr	r0, [fp, #-8]
   1a7e4:	ldr	r0, [r0, #20]
   1a7e8:	ldr	r1, [fp, #-8]
   1a7ec:	ldr	r1, [r1, #16]
   1a7f0:	cmp	r0, r1
   1a7f4:	bne	1a888 <__assert_fail@plt+0x9510>
   1a7f8:	ldr	r0, [fp, #-8]
   1a7fc:	ldr	r0, [r0, #36]	; 0x24
   1a800:	movw	r1, #0
   1a804:	cmp	r0, r1
   1a808:	bne	1a888 <__assert_fail@plt+0x9510>
   1a80c:	ldr	r0, [fp, #-8]
   1a810:	bl	112ac <fileno@plt>
   1a814:	ldr	r2, [sp, #16]
   1a818:	ldr	r3, [sp, #20]
   1a81c:	ldr	lr, [fp, #8]
   1a820:	mov	r1, sp
   1a824:	str	lr, [r1]
   1a828:	bl	11174 <lseek64@plt>
   1a82c:	str	r1, [sp, #12]
   1a830:	str	r0, [sp, #8]
   1a834:	ldr	r0, [sp, #8]
   1a838:	ldr	r1, [sp, #12]
   1a83c:	and	r0, r0, r1
   1a840:	cmn	r0, #1
   1a844:	bne	1a858 <__assert_fail@plt+0x94e0>
   1a848:	b	1a84c <__assert_fail@plt+0x94d4>
   1a84c:	mvn	r0, #0
   1a850:	str	r0, [fp, #-4]
   1a854:	b	1a8a8 <__assert_fail@plt+0x9530>
   1a858:	ldr	r0, [fp, #-8]
   1a85c:	ldr	r1, [r0]
   1a860:	bic	r1, r1, #16
   1a864:	str	r1, [r0]
   1a868:	ldr	r0, [sp, #8]
   1a86c:	ldr	r1, [sp, #12]
   1a870:	ldr	r2, [fp, #-8]
   1a874:	str	r1, [r2, #84]	; 0x54
   1a878:	str	r0, [r2, #80]	; 0x50
   1a87c:	movw	r0, #0
   1a880:	str	r0, [fp, #-4]
   1a884:	b	1a8a8 <__assert_fail@plt+0x9530>
   1a888:	ldr	r0, [fp, #-8]
   1a88c:	ldr	r2, [sp, #16]
   1a890:	ldr	r3, [sp, #20]
   1a894:	ldr	r1, [fp, #8]
   1a898:	mov	ip, sp
   1a89c:	str	r1, [ip]
   1a8a0:	bl	112d0 <fseeko64@plt>
   1a8a4:	str	r0, [fp, #-4]
   1a8a8:	ldr	r0, [fp, #-4]
   1a8ac:	mov	sp, fp
   1a8b0:	pop	{fp, pc}
   1a8b4:	push	{fp, lr}
   1a8b8:	mov	fp, sp
   1a8bc:	bl	1127c <__errno_location@plt>
   1a8c0:	movw	lr, #12
   1a8c4:	str	lr, [r0]
   1a8c8:	movw	r0, #0
   1a8cc:	pop	{fp, pc}
   1a8d0:	push	{fp, lr}
   1a8d4:	mov	fp, sp
   1a8d8:	sub	sp, sp, #8
   1a8dc:	str	r0, [sp, #4]
   1a8e0:	ldr	r0, [sp, #4]
   1a8e4:	cmn	r0, #1
   1a8e8:	bhi	1a8fc <__assert_fail@plt+0x9584>
   1a8ec:	ldr	r0, [sp, #4]
   1a8f0:	bl	1a370 <__assert_fail@plt+0x8ff8>
   1a8f4:	str	r0, [sp]
   1a8f8:	b	1a904 <__assert_fail@plt+0x958c>
   1a8fc:	bl	1a8b4 <__assert_fail@plt+0x953c>
   1a900:	str	r0, [sp]
   1a904:	ldr	r0, [sp]
   1a908:	mov	sp, fp
   1a90c:	pop	{fp, pc}
   1a910:	push	{fp, lr}
   1a914:	mov	fp, sp
   1a918:	sub	sp, sp, #16
   1a91c:	str	r0, [fp, #-4]
   1a920:	str	r1, [sp, #8]
   1a924:	ldr	r0, [sp, #8]
   1a928:	cmn	r0, #1
   1a92c:	bhi	1a964 <__assert_fail@plt+0x95ec>
   1a930:	ldr	r0, [fp, #-4]
   1a934:	ldr	r1, [sp, #8]
   1a938:	ldr	r2, [sp, #8]
   1a93c:	cmp	r2, #0
   1a940:	movw	r2, #0
   1a944:	movne	r2, #1
   1a948:	mvn	r3, #0
   1a94c:	eor	r2, r2, r3
   1a950:	and	r2, r2, #1
   1a954:	orr	r1, r1, r2
   1a958:	bl	1a3e0 <__assert_fail@plt+0x9068>
   1a95c:	str	r0, [sp, #4]
   1a960:	b	1a96c <__assert_fail@plt+0x95f4>
   1a964:	bl	1a8b4 <__assert_fail@plt+0x953c>
   1a968:	str	r0, [sp, #4]
   1a96c:	ldr	r0, [sp, #4]
   1a970:	mov	sp, fp
   1a974:	pop	{fp, pc}
   1a978:	push	{fp, lr}
   1a97c:	mov	fp, sp
   1a980:	sub	sp, sp, #16
   1a984:	str	r0, [sp, #8]
   1a988:	str	r1, [sp, #4]
   1a98c:	ldr	r0, [sp, #8]
   1a990:	mvn	r1, #0
   1a994:	cmp	r1, r0
   1a998:	bcs	1a9bc <__assert_fail@plt+0x9644>
   1a99c:	ldr	r0, [sp, #4]
   1a9a0:	cmp	r0, #0
   1a9a4:	beq	1a9b4 <__assert_fail@plt+0x963c>
   1a9a8:	bl	1a8b4 <__assert_fail@plt+0x953c>
   1a9ac:	str	r0, [fp, #-4]
   1a9b0:	b	1a9fc <__assert_fail@plt+0x9684>
   1a9b4:	movw	r0, #0
   1a9b8:	str	r0, [sp, #8]
   1a9bc:	ldr	r0, [sp, #4]
   1a9c0:	mvn	r1, #0
   1a9c4:	cmp	r1, r0
   1a9c8:	bcs	1a9ec <__assert_fail@plt+0x9674>
   1a9cc:	ldr	r0, [sp, #8]
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1a9e4 <__assert_fail@plt+0x966c>
   1a9d8:	bl	1a8b4 <__assert_fail@plt+0x953c>
   1a9dc:	str	r0, [fp, #-4]
   1a9e0:	b	1a9fc <__assert_fail@plt+0x9684>
   1a9e4:	movw	r0, #0
   1a9e8:	str	r0, [sp, #4]
   1a9ec:	ldr	r0, [sp, #8]
   1a9f0:	ldr	r1, [sp, #4]
   1a9f4:	bl	1a2d4 <__assert_fail@plt+0x8f5c>
   1a9f8:	str	r0, [fp, #-4]
   1a9fc:	ldr	r0, [fp, #-4]
   1aa00:	mov	sp, fp
   1aa04:	pop	{fp, pc}
   1aa08:	push	{fp, lr}
   1aa0c:	mov	fp, sp
   1aa10:	sub	sp, sp, #16
   1aa14:	str	r0, [fp, #-4]
   1aa18:	str	r1, [sp, #8]
   1aa1c:	str	r2, [sp, #4]
   1aa20:	ldr	r0, [sp, #8]
   1aa24:	cmp	r0, #0
   1aa28:	beq	1aa38 <__assert_fail@plt+0x96c0>
   1aa2c:	ldr	r0, [sp, #4]
   1aa30:	cmp	r0, #0
   1aa34:	bne	1aa44 <__assert_fail@plt+0x96cc>
   1aa38:	movw	r0, #1
   1aa3c:	str	r0, [sp, #4]
   1aa40:	str	r0, [sp, #8]
   1aa44:	ldr	r0, [sp, #8]
   1aa48:	cmn	r0, #1
   1aa4c:	bhi	1aa74 <__assert_fail@plt+0x96fc>
   1aa50:	ldr	r0, [sp, #4]
   1aa54:	cmn	r0, #1
   1aa58:	bhi	1aa74 <__assert_fail@plt+0x96fc>
   1aa5c:	ldr	r0, [fp, #-4]
   1aa60:	ldr	r1, [sp, #8]
   1aa64:	ldr	r2, [sp, #4]
   1aa68:	bl	1ab94 <__assert_fail@plt+0x981c>
   1aa6c:	str	r0, [sp]
   1aa70:	b	1aa7c <__assert_fail@plt+0x9704>
   1aa74:	bl	1a8b4 <__assert_fail@plt+0x953c>
   1aa78:	str	r0, [sp]
   1aa7c:	ldr	r0, [sp]
   1aa80:	mov	sp, fp
   1aa84:	pop	{fp, pc}
   1aa88:	push	{fp, lr}
   1aa8c:	mov	fp, sp
   1aa90:	sub	sp, sp, #8
   1aa94:	movw	r0, #14
   1aa98:	bl	11300 <nl_langinfo@plt>
   1aa9c:	str	r0, [sp, #4]
   1aaa0:	ldr	r0, [sp, #4]
   1aaa4:	movw	lr, #0
   1aaa8:	cmp	r0, lr
   1aaac:	bne	1aabc <__assert_fail@plt+0x9744>
   1aab0:	movw	r0, #51339	; 0xc88b
   1aab4:	movt	r0, #1
   1aab8:	str	r0, [sp, #4]
   1aabc:	ldr	r0, [sp, #4]
   1aac0:	ldrb	r0, [r0]
   1aac4:	cmp	r0, #0
   1aac8:	bne	1aad8 <__assert_fail@plt+0x9760>
   1aacc:	movw	r0, #53229	; 0xcfed
   1aad0:	movt	r0, #1
   1aad4:	str	r0, [sp, #4]
   1aad8:	ldr	r0, [sp, #4]
   1aadc:	mov	sp, fp
   1aae0:	pop	{fp, pc}
   1aae4:	push	{fp, lr}
   1aae8:	mov	fp, sp
   1aaec:	sub	sp, sp, #32
   1aaf0:	str	r0, [fp, #-8]
   1aaf4:	str	r1, [fp, #-12]
   1aaf8:	str	r2, [sp, #16]
   1aafc:	str	r3, [sp, #12]
   1ab00:	ldr	r0, [fp, #-8]
   1ab04:	movw	r1, #0
   1ab08:	cmp	r0, r1
   1ab0c:	bne	1ab18 <__assert_fail@plt+0x97a0>
   1ab10:	add	r0, sp, #4
   1ab14:	str	r0, [fp, #-8]
   1ab18:	ldr	r0, [fp, #-8]
   1ab1c:	ldr	r1, [fp, #-12]
   1ab20:	ldr	r2, [sp, #16]
   1ab24:	ldr	r3, [sp, #12]
   1ab28:	bl	111a4 <mbrtowc@plt>
   1ab2c:	str	r0, [sp, #8]
   1ab30:	ldr	r0, [sp, #8]
   1ab34:	mvn	r1, #1
   1ab38:	cmp	r1, r0
   1ab3c:	bhi	1ab80 <__assert_fail@plt+0x9808>
   1ab40:	ldr	r0, [sp, #16]
   1ab44:	cmp	r0, #0
   1ab48:	beq	1ab80 <__assert_fail@plt+0x9808>
   1ab4c:	movw	r0, #0
   1ab50:	bl	13dfc <__assert_fail@plt+0x2a84>
   1ab54:	tst	r0, #1
   1ab58:	bne	1ab80 <__assert_fail@plt+0x9808>
   1ab5c:	ldr	r0, [fp, #-12]
   1ab60:	ldrb	r0, [r0]
   1ab64:	strb	r0, [sp, #3]
   1ab68:	ldrb	r0, [sp, #3]
   1ab6c:	ldr	r1, [fp, #-8]
   1ab70:	str	r0, [r1]
   1ab74:	movw	r0, #1
   1ab78:	str	r0, [fp, #-4]
   1ab7c:	b	1ab88 <__assert_fail@plt+0x9810>
   1ab80:	ldr	r0, [sp, #8]
   1ab84:	str	r0, [fp, #-4]
   1ab88:	ldr	r0, [fp, #-4]
   1ab8c:	mov	sp, fp
   1ab90:	pop	{fp, pc}
   1ab94:	push	{fp, lr}
   1ab98:	mov	fp, sp
   1ab9c:	sub	sp, sp, #176	; 0xb0
   1aba0:	str	r0, [fp, #-8]
   1aba4:	str	r1, [fp, #-12]
   1aba8:	str	r2, [fp, #-16]
   1abac:	b	1af64 <__assert_fail@plt+0x9bec>
   1abb0:	b	1ad84 <__assert_fail@plt+0x9a0c>
   1abb4:	ldr	r0, [fp, #-16]
   1abb8:	cmp	r0, #0
   1abbc:	bcs	1acc0 <__assert_fail@plt+0x9948>
   1abc0:	ldr	r0, [fp, #-12]
   1abc4:	cmp	r0, #0
   1abc8:	bcs	1ac50 <__assert_fail@plt+0x98d8>
   1abcc:	b	1abec <__assert_fail@plt+0x9874>
   1abd0:	ldr	r0, [fp, #-12]
   1abd4:	ldr	r1, [fp, #-16]
   1abd8:	movw	r2, #127	; 0x7f
   1abdc:	udiv	r1, r2, r1
   1abe0:	cmp	r0, r1
   1abe4:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1abe8:	b	1ad6c <__assert_fail@plt+0x99f4>
   1abec:	b	1ac00 <__assert_fail@plt+0x9888>
   1abf0:	ldr	r0, [fp, #-16]
   1abf4:	cmp	r0, #1
   1abf8:	bcc	1ac10 <__assert_fail@plt+0x9898>
   1abfc:	b	1ac1c <__assert_fail@plt+0x98a4>
   1ac00:	ldr	r0, [fp, #-16]
   1ac04:	movw	r1, #0
   1ac08:	cmp	r1, r0
   1ac0c:	bcs	1ac1c <__assert_fail@plt+0x98a4>
   1ac10:	movw	r0, #0
   1ac14:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac18:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ac1c:	ldr	r0, [fp, #-16]
   1ac20:	movw	r1, #0
   1ac24:	sub	r0, r1, r0
   1ac28:	movw	r1, #127	; 0x7f
   1ac2c:	udiv	r0, r1, r0
   1ac30:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac38:	ldr	r1, [fp, #-12]
   1ac3c:	mvn	r2, #0
   1ac40:	sub	r1, r2, r1
   1ac44:	cmp	r0, r1
   1ac48:	bls	1ad54 <__assert_fail@plt+0x99dc>
   1ac4c:	b	1ad6c <__assert_fail@plt+0x99f4>
   1ac50:	ldr	r0, [fp, #-16]
   1ac54:	cmn	r0, #1
   1ac58:	bne	1aca4 <__assert_fail@plt+0x992c>
   1ac5c:	b	1ac7c <__assert_fail@plt+0x9904>
   1ac60:	ldr	r0, [fp, #-12]
   1ac64:	mvn	r1, #127	; 0x7f
   1ac68:	add	r0, r0, r1
   1ac6c:	movw	r1, #0
   1ac70:	cmp	r1, r0
   1ac74:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1ac78:	b	1ad6c <__assert_fail@plt+0x99f4>
   1ac7c:	ldr	r0, [fp, #-12]
   1ac80:	movw	r1, #0
   1ac84:	cmp	r1, r0
   1ac88:	bcs	1ad6c <__assert_fail@plt+0x99f4>
   1ac8c:	ldr	r0, [fp, #-12]
   1ac90:	sub	r0, r0, #1
   1ac94:	movw	r1, #127	; 0x7f
   1ac98:	cmp	r1, r0
   1ac9c:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1aca0:	b	1ad6c <__assert_fail@plt+0x99f4>
   1aca4:	ldr	r0, [fp, #-16]
   1aca8:	mvn	r1, #127	; 0x7f
   1acac:	udiv	r0, r1, r0
   1acb0:	ldr	r1, [fp, #-12]
   1acb4:	cmp	r0, r1
   1acb8:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1acbc:	b	1ad6c <__assert_fail@plt+0x99f4>
   1acc0:	ldr	r0, [fp, #-16]
   1acc4:	cmp	r0, #0
   1acc8:	bne	1acd0 <__assert_fail@plt+0x9958>
   1accc:	b	1ad6c <__assert_fail@plt+0x99f4>
   1acd0:	ldr	r0, [fp, #-12]
   1acd4:	cmp	r0, #0
   1acd8:	bcs	1ad3c <__assert_fail@plt+0x99c4>
   1acdc:	ldr	r0, [fp, #-12]
   1ace0:	cmn	r0, #1
   1ace4:	bne	1ad20 <__assert_fail@plt+0x99a8>
   1ace8:	b	1ad08 <__assert_fail@plt+0x9990>
   1acec:	ldr	r0, [fp, #-16]
   1acf0:	mvn	r1, #127	; 0x7f
   1acf4:	add	r0, r0, r1
   1acf8:	movw	r1, #0
   1acfc:	cmp	r1, r0
   1ad00:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1ad04:	b	1ad6c <__assert_fail@plt+0x99f4>
   1ad08:	ldr	r0, [fp, #-16]
   1ad0c:	sub	r0, r0, #1
   1ad10:	movw	r1, #127	; 0x7f
   1ad14:	cmp	r1, r0
   1ad18:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1ad1c:	b	1ad6c <__assert_fail@plt+0x99f4>
   1ad20:	ldr	r0, [fp, #-12]
   1ad24:	mvn	r1, #127	; 0x7f
   1ad28:	udiv	r0, r1, r0
   1ad2c:	ldr	r1, [fp, #-16]
   1ad30:	cmp	r0, r1
   1ad34:	bcc	1ad54 <__assert_fail@plt+0x99dc>
   1ad38:	b	1ad6c <__assert_fail@plt+0x99f4>
   1ad3c:	ldr	r0, [fp, #-16]
   1ad40:	movw	r1, #127	; 0x7f
   1ad44:	udiv	r0, r1, r0
   1ad48:	ldr	r1, [fp, #-12]
   1ad4c:	cmp	r0, r1
   1ad50:	bcs	1ad6c <__assert_fail@plt+0x99f4>
   1ad54:	ldr	r0, [fp, #-12]
   1ad58:	ldr	r1, [fp, #-16]
   1ad5c:	mul	r0, r0, r1
   1ad60:	sxtb	r0, r0
   1ad64:	str	r0, [fp, #-20]	; 0xffffffec
   1ad68:	b	1bee4 <__assert_fail@plt+0xab6c>
   1ad6c:	ldr	r0, [fp, #-12]
   1ad70:	ldr	r1, [fp, #-16]
   1ad74:	mul	r0, r0, r1
   1ad78:	sxtb	r0, r0
   1ad7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ad80:	b	1befc <__assert_fail@plt+0xab84>
   1ad84:	ldr	r0, [fp, #-16]
   1ad88:	cmp	r0, #0
   1ad8c:	bcs	1ae98 <__assert_fail@plt+0x9b20>
   1ad90:	ldr	r0, [fp, #-12]
   1ad94:	cmp	r0, #0
   1ad98:	bcs	1ae20 <__assert_fail@plt+0x9aa8>
   1ad9c:	b	1adbc <__assert_fail@plt+0x9a44>
   1ada0:	ldr	r0, [fp, #-12]
   1ada4:	ldr	r1, [fp, #-16]
   1ada8:	movw	r2, #255	; 0xff
   1adac:	udiv	r1, r2, r1
   1adb0:	cmp	r0, r1
   1adb4:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1adb8:	b	1af4c <__assert_fail@plt+0x9bd4>
   1adbc:	b	1add0 <__assert_fail@plt+0x9a58>
   1adc0:	ldr	r0, [fp, #-16]
   1adc4:	cmp	r0, #1
   1adc8:	bcc	1ade0 <__assert_fail@plt+0x9a68>
   1adcc:	b	1adec <__assert_fail@plt+0x9a74>
   1add0:	ldr	r0, [fp, #-16]
   1add4:	movw	r1, #0
   1add8:	cmp	r1, r0
   1addc:	bcs	1adec <__assert_fail@plt+0x9a74>
   1ade0:	movw	r0, #0
   1ade4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ade8:	b	1ae04 <__assert_fail@plt+0x9a8c>
   1adec:	ldr	r0, [fp, #-16]
   1adf0:	movw	r1, #0
   1adf4:	sub	r0, r1, r0
   1adf8:	movw	r1, #255	; 0xff
   1adfc:	udiv	r0, r1, r0
   1ae00:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ae08:	ldr	r1, [fp, #-12]
   1ae0c:	mvn	r2, #0
   1ae10:	sub	r1, r2, r1
   1ae14:	cmp	r0, r1
   1ae18:	bls	1af34 <__assert_fail@plt+0x9bbc>
   1ae1c:	b	1af4c <__assert_fail@plt+0x9bd4>
   1ae20:	b	1ae28 <__assert_fail@plt+0x9ab0>
   1ae24:	b	1ae2c <__assert_fail@plt+0x9ab4>
   1ae28:	b	1ae7c <__assert_fail@plt+0x9b04>
   1ae2c:	ldr	r0, [fp, #-16]
   1ae30:	cmn	r0, #1
   1ae34:	bne	1ae7c <__assert_fail@plt+0x9b04>
   1ae38:	b	1ae54 <__assert_fail@plt+0x9adc>
   1ae3c:	ldr	r0, [fp, #-12]
   1ae40:	add	r0, r0, #0
   1ae44:	movw	r1, #0
   1ae48:	cmp	r1, r0
   1ae4c:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1ae50:	b	1af4c <__assert_fail@plt+0x9bd4>
   1ae54:	ldr	r0, [fp, #-12]
   1ae58:	movw	r1, #0
   1ae5c:	cmp	r1, r0
   1ae60:	bcs	1af4c <__assert_fail@plt+0x9bd4>
   1ae64:	ldr	r0, [fp, #-12]
   1ae68:	sub	r0, r0, #1
   1ae6c:	mvn	r1, #0
   1ae70:	cmp	r1, r0
   1ae74:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1ae78:	b	1af4c <__assert_fail@plt+0x9bd4>
   1ae7c:	ldr	r0, [fp, #-16]
   1ae80:	movw	r1, #0
   1ae84:	udiv	r0, r1, r0
   1ae88:	ldr	r1, [fp, #-12]
   1ae8c:	cmp	r0, r1
   1ae90:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1ae94:	b	1af4c <__assert_fail@plt+0x9bd4>
   1ae98:	ldr	r0, [fp, #-16]
   1ae9c:	cmp	r0, #0
   1aea0:	bne	1aea8 <__assert_fail@plt+0x9b30>
   1aea4:	b	1af4c <__assert_fail@plt+0x9bd4>
   1aea8:	ldr	r0, [fp, #-12]
   1aeac:	cmp	r0, #0
   1aeb0:	bcs	1af1c <__assert_fail@plt+0x9ba4>
   1aeb4:	b	1aebc <__assert_fail@plt+0x9b44>
   1aeb8:	b	1aec0 <__assert_fail@plt+0x9b48>
   1aebc:	b	1af00 <__assert_fail@plt+0x9b88>
   1aec0:	ldr	r0, [fp, #-12]
   1aec4:	cmn	r0, #1
   1aec8:	bne	1af00 <__assert_fail@plt+0x9b88>
   1aecc:	b	1aee8 <__assert_fail@plt+0x9b70>
   1aed0:	ldr	r0, [fp, #-16]
   1aed4:	add	r0, r0, #0
   1aed8:	movw	r1, #0
   1aedc:	cmp	r1, r0
   1aee0:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1aee4:	b	1af4c <__assert_fail@plt+0x9bd4>
   1aee8:	ldr	r0, [fp, #-16]
   1aeec:	sub	r0, r0, #1
   1aef0:	mvn	r1, #0
   1aef4:	cmp	r1, r0
   1aef8:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1aefc:	b	1af4c <__assert_fail@plt+0x9bd4>
   1af00:	ldr	r0, [fp, #-12]
   1af04:	movw	r1, #0
   1af08:	udiv	r0, r1, r0
   1af0c:	ldr	r1, [fp, #-16]
   1af10:	cmp	r0, r1
   1af14:	bcc	1af34 <__assert_fail@plt+0x9bbc>
   1af18:	b	1af4c <__assert_fail@plt+0x9bd4>
   1af1c:	ldr	r0, [fp, #-16]
   1af20:	movw	r1, #255	; 0xff
   1af24:	udiv	r0, r1, r0
   1af28:	ldr	r1, [fp, #-12]
   1af2c:	cmp	r0, r1
   1af30:	bcs	1af4c <__assert_fail@plt+0x9bd4>
   1af34:	ldr	r0, [fp, #-12]
   1af38:	ldr	r1, [fp, #-16]
   1af3c:	mul	r0, r0, r1
   1af40:	and	r0, r0, #255	; 0xff
   1af44:	str	r0, [fp, #-20]	; 0xffffffec
   1af48:	b	1bee4 <__assert_fail@plt+0xab6c>
   1af4c:	ldr	r0, [fp, #-12]
   1af50:	ldr	r1, [fp, #-16]
   1af54:	mul	r0, r0, r1
   1af58:	and	r0, r0, #255	; 0xff
   1af5c:	str	r0, [fp, #-20]	; 0xffffffec
   1af60:	b	1befc <__assert_fail@plt+0xab84>
   1af64:	b	1b31c <__assert_fail@plt+0x9fa4>
   1af68:	b	1b13c <__assert_fail@plt+0x9dc4>
   1af6c:	ldr	r0, [fp, #-16]
   1af70:	cmp	r0, #0
   1af74:	bcs	1b078 <__assert_fail@plt+0x9d00>
   1af78:	ldr	r0, [fp, #-12]
   1af7c:	cmp	r0, #0
   1af80:	bcs	1b008 <__assert_fail@plt+0x9c90>
   1af84:	b	1afa4 <__assert_fail@plt+0x9c2c>
   1af88:	ldr	r0, [fp, #-12]
   1af8c:	ldr	r1, [fp, #-16]
   1af90:	movw	r2, #32767	; 0x7fff
   1af94:	udiv	r1, r2, r1
   1af98:	cmp	r0, r1
   1af9c:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1afa0:	b	1b124 <__assert_fail@plt+0x9dac>
   1afa4:	b	1afb8 <__assert_fail@plt+0x9c40>
   1afa8:	ldr	r0, [fp, #-16]
   1afac:	cmp	r0, #1
   1afb0:	bcc	1afc8 <__assert_fail@plt+0x9c50>
   1afb4:	b	1afd4 <__assert_fail@plt+0x9c5c>
   1afb8:	ldr	r0, [fp, #-16]
   1afbc:	movw	r1, #0
   1afc0:	cmp	r1, r0
   1afc4:	bcs	1afd4 <__assert_fail@plt+0x9c5c>
   1afc8:	movw	r0, #0
   1afcc:	str	r0, [fp, #-32]	; 0xffffffe0
   1afd0:	b	1afec <__assert_fail@plt+0x9c74>
   1afd4:	ldr	r0, [fp, #-16]
   1afd8:	movw	r1, #0
   1afdc:	sub	r0, r1, r0
   1afe0:	movw	r1, #32767	; 0x7fff
   1afe4:	udiv	r0, r1, r0
   1afe8:	str	r0, [fp, #-32]	; 0xffffffe0
   1afec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aff0:	ldr	r1, [fp, #-12]
   1aff4:	mvn	r2, #0
   1aff8:	sub	r1, r2, r1
   1affc:	cmp	r0, r1
   1b000:	bls	1b10c <__assert_fail@plt+0x9d94>
   1b004:	b	1b124 <__assert_fail@plt+0x9dac>
   1b008:	ldr	r0, [fp, #-16]
   1b00c:	cmn	r0, #1
   1b010:	bne	1b05c <__assert_fail@plt+0x9ce4>
   1b014:	b	1b034 <__assert_fail@plt+0x9cbc>
   1b018:	ldr	r0, [pc, #3840]	; 1bf20 <__assert_fail@plt+0xaba8>
   1b01c:	ldr	r1, [fp, #-12]
   1b020:	add	r0, r1, r0
   1b024:	movw	r1, #0
   1b028:	cmp	r1, r0
   1b02c:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b030:	b	1b124 <__assert_fail@plt+0x9dac>
   1b034:	ldr	r0, [fp, #-12]
   1b038:	movw	r1, #0
   1b03c:	cmp	r1, r0
   1b040:	bcs	1b124 <__assert_fail@plt+0x9dac>
   1b044:	ldr	r0, [fp, #-12]
   1b048:	sub	r0, r0, #1
   1b04c:	movw	r1, #32767	; 0x7fff
   1b050:	cmp	r1, r0
   1b054:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b058:	b	1b124 <__assert_fail@plt+0x9dac>
   1b05c:	ldr	r0, [pc, #3772]	; 1bf20 <__assert_fail@plt+0xaba8>
   1b060:	ldr	r1, [fp, #-16]
   1b064:	udiv	r0, r0, r1
   1b068:	ldr	r1, [fp, #-12]
   1b06c:	cmp	r0, r1
   1b070:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b074:	b	1b124 <__assert_fail@plt+0x9dac>
   1b078:	ldr	r0, [fp, #-16]
   1b07c:	cmp	r0, #0
   1b080:	bne	1b088 <__assert_fail@plt+0x9d10>
   1b084:	b	1b124 <__assert_fail@plt+0x9dac>
   1b088:	ldr	r0, [fp, #-12]
   1b08c:	cmp	r0, #0
   1b090:	bcs	1b0f4 <__assert_fail@plt+0x9d7c>
   1b094:	ldr	r0, [fp, #-12]
   1b098:	cmn	r0, #1
   1b09c:	bne	1b0d8 <__assert_fail@plt+0x9d60>
   1b0a0:	b	1b0c0 <__assert_fail@plt+0x9d48>
   1b0a4:	ldr	r0, [pc, #3700]	; 1bf20 <__assert_fail@plt+0xaba8>
   1b0a8:	ldr	r1, [fp, #-16]
   1b0ac:	add	r0, r1, r0
   1b0b0:	movw	r1, #0
   1b0b4:	cmp	r1, r0
   1b0b8:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b0bc:	b	1b124 <__assert_fail@plt+0x9dac>
   1b0c0:	ldr	r0, [fp, #-16]
   1b0c4:	sub	r0, r0, #1
   1b0c8:	movw	r1, #32767	; 0x7fff
   1b0cc:	cmp	r1, r0
   1b0d0:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b0d4:	b	1b124 <__assert_fail@plt+0x9dac>
   1b0d8:	ldr	r0, [pc, #3648]	; 1bf20 <__assert_fail@plt+0xaba8>
   1b0dc:	ldr	r1, [fp, #-12]
   1b0e0:	udiv	r0, r0, r1
   1b0e4:	ldr	r1, [fp, #-16]
   1b0e8:	cmp	r0, r1
   1b0ec:	bcc	1b10c <__assert_fail@plt+0x9d94>
   1b0f0:	b	1b124 <__assert_fail@plt+0x9dac>
   1b0f4:	ldr	r0, [fp, #-16]
   1b0f8:	movw	r1, #32767	; 0x7fff
   1b0fc:	udiv	r0, r1, r0
   1b100:	ldr	r1, [fp, #-12]
   1b104:	cmp	r0, r1
   1b108:	bcs	1b124 <__assert_fail@plt+0x9dac>
   1b10c:	ldr	r0, [fp, #-12]
   1b110:	ldr	r1, [fp, #-16]
   1b114:	mul	r0, r0, r1
   1b118:	sxth	r0, r0
   1b11c:	str	r0, [fp, #-20]	; 0xffffffec
   1b120:	b	1bee4 <__assert_fail@plt+0xab6c>
   1b124:	ldr	r0, [fp, #-12]
   1b128:	ldr	r1, [fp, #-16]
   1b12c:	mul	r0, r0, r1
   1b130:	sxth	r0, r0
   1b134:	str	r0, [fp, #-20]	; 0xffffffec
   1b138:	b	1befc <__assert_fail@plt+0xab84>
   1b13c:	ldr	r0, [fp, #-16]
   1b140:	cmp	r0, #0
   1b144:	bcs	1b250 <__assert_fail@plt+0x9ed8>
   1b148:	ldr	r0, [fp, #-12]
   1b14c:	cmp	r0, #0
   1b150:	bcs	1b1d8 <__assert_fail@plt+0x9e60>
   1b154:	b	1b174 <__assert_fail@plt+0x9dfc>
   1b158:	ldr	r0, [fp, #-12]
   1b15c:	ldr	r1, [fp, #-16]
   1b160:	movw	r2, #65535	; 0xffff
   1b164:	udiv	r1, r2, r1
   1b168:	cmp	r0, r1
   1b16c:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b170:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b174:	b	1b188 <__assert_fail@plt+0x9e10>
   1b178:	ldr	r0, [fp, #-16]
   1b17c:	cmp	r0, #1
   1b180:	bcc	1b198 <__assert_fail@plt+0x9e20>
   1b184:	b	1b1a4 <__assert_fail@plt+0x9e2c>
   1b188:	ldr	r0, [fp, #-16]
   1b18c:	movw	r1, #0
   1b190:	cmp	r1, r0
   1b194:	bcs	1b1a4 <__assert_fail@plt+0x9e2c>
   1b198:	movw	r0, #0
   1b19c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b1a0:	b	1b1bc <__assert_fail@plt+0x9e44>
   1b1a4:	ldr	r0, [fp, #-16]
   1b1a8:	movw	r1, #0
   1b1ac:	sub	r0, r1, r0
   1b1b0:	movw	r1, #65535	; 0xffff
   1b1b4:	udiv	r0, r1, r0
   1b1b8:	str	r0, [fp, #-36]	; 0xffffffdc
   1b1bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b1c0:	ldr	r1, [fp, #-12]
   1b1c4:	mvn	r2, #0
   1b1c8:	sub	r1, r2, r1
   1b1cc:	cmp	r0, r1
   1b1d0:	bls	1b2ec <__assert_fail@plt+0x9f74>
   1b1d4:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b1d8:	b	1b1e0 <__assert_fail@plt+0x9e68>
   1b1dc:	b	1b1e4 <__assert_fail@plt+0x9e6c>
   1b1e0:	b	1b234 <__assert_fail@plt+0x9ebc>
   1b1e4:	ldr	r0, [fp, #-16]
   1b1e8:	cmn	r0, #1
   1b1ec:	bne	1b234 <__assert_fail@plt+0x9ebc>
   1b1f0:	b	1b20c <__assert_fail@plt+0x9e94>
   1b1f4:	ldr	r0, [fp, #-12]
   1b1f8:	add	r0, r0, #0
   1b1fc:	movw	r1, #0
   1b200:	cmp	r1, r0
   1b204:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b208:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b20c:	ldr	r0, [fp, #-12]
   1b210:	movw	r1, #0
   1b214:	cmp	r1, r0
   1b218:	bcs	1b304 <__assert_fail@plt+0x9f8c>
   1b21c:	ldr	r0, [fp, #-12]
   1b220:	sub	r0, r0, #1
   1b224:	mvn	r1, #0
   1b228:	cmp	r1, r0
   1b22c:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b230:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b234:	ldr	r0, [fp, #-16]
   1b238:	movw	r1, #0
   1b23c:	udiv	r0, r1, r0
   1b240:	ldr	r1, [fp, #-12]
   1b244:	cmp	r0, r1
   1b248:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b24c:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b250:	ldr	r0, [fp, #-16]
   1b254:	cmp	r0, #0
   1b258:	bne	1b260 <__assert_fail@plt+0x9ee8>
   1b25c:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b260:	ldr	r0, [fp, #-12]
   1b264:	cmp	r0, #0
   1b268:	bcs	1b2d4 <__assert_fail@plt+0x9f5c>
   1b26c:	b	1b274 <__assert_fail@plt+0x9efc>
   1b270:	b	1b278 <__assert_fail@plt+0x9f00>
   1b274:	b	1b2b8 <__assert_fail@plt+0x9f40>
   1b278:	ldr	r0, [fp, #-12]
   1b27c:	cmn	r0, #1
   1b280:	bne	1b2b8 <__assert_fail@plt+0x9f40>
   1b284:	b	1b2a0 <__assert_fail@plt+0x9f28>
   1b288:	ldr	r0, [fp, #-16]
   1b28c:	add	r0, r0, #0
   1b290:	movw	r1, #0
   1b294:	cmp	r1, r0
   1b298:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b29c:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b2a0:	ldr	r0, [fp, #-16]
   1b2a4:	sub	r0, r0, #1
   1b2a8:	mvn	r1, #0
   1b2ac:	cmp	r1, r0
   1b2b0:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b2b4:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b2b8:	ldr	r0, [fp, #-12]
   1b2bc:	movw	r1, #0
   1b2c0:	udiv	r0, r1, r0
   1b2c4:	ldr	r1, [fp, #-16]
   1b2c8:	cmp	r0, r1
   1b2cc:	bcc	1b2ec <__assert_fail@plt+0x9f74>
   1b2d0:	b	1b304 <__assert_fail@plt+0x9f8c>
   1b2d4:	ldr	r0, [fp, #-16]
   1b2d8:	movw	r1, #65535	; 0xffff
   1b2dc:	udiv	r0, r1, r0
   1b2e0:	ldr	r1, [fp, #-12]
   1b2e4:	cmp	r0, r1
   1b2e8:	bcs	1b304 <__assert_fail@plt+0x9f8c>
   1b2ec:	ldr	r0, [fp, #-12]
   1b2f0:	ldr	r1, [fp, #-16]
   1b2f4:	mul	r0, r0, r1
   1b2f8:	uxth	r0, r0
   1b2fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b300:	b	1bee4 <__assert_fail@plt+0xab6c>
   1b304:	ldr	r0, [fp, #-12]
   1b308:	ldr	r1, [fp, #-16]
   1b30c:	mul	r0, r0, r1
   1b310:	uxth	r0, r0
   1b314:	str	r0, [fp, #-20]	; 0xffffffec
   1b318:	b	1befc <__assert_fail@plt+0xab84>
   1b31c:	b	1b320 <__assert_fail@plt+0x9fa8>
   1b320:	b	1b4e4 <__assert_fail@plt+0xa16c>
   1b324:	ldr	r0, [fp, #-16]
   1b328:	cmp	r0, #0
   1b32c:	bcs	1b42c <__assert_fail@plt+0xa0b4>
   1b330:	ldr	r0, [fp, #-12]
   1b334:	cmp	r0, #0
   1b338:	bcs	1b3c0 <__assert_fail@plt+0xa048>
   1b33c:	b	1b35c <__assert_fail@plt+0x9fe4>
   1b340:	ldr	r0, [pc, #3024]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b344:	ldr	r1, [fp, #-12]
   1b348:	ldr	r2, [fp, #-16]
   1b34c:	udiv	r0, r0, r2
   1b350:	cmp	r1, r0
   1b354:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b358:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b35c:	b	1b370 <__assert_fail@plt+0x9ff8>
   1b360:	ldr	r0, [fp, #-16]
   1b364:	cmp	r0, #1
   1b368:	bcc	1b380 <__assert_fail@plt+0xa008>
   1b36c:	b	1b38c <__assert_fail@plt+0xa014>
   1b370:	ldr	r0, [fp, #-16]
   1b374:	movw	r1, #0
   1b378:	cmp	r1, r0
   1b37c:	bcs	1b38c <__assert_fail@plt+0xa014>
   1b380:	movw	r0, #0
   1b384:	str	r0, [fp, #-40]	; 0xffffffd8
   1b388:	b	1b3a4 <__assert_fail@plt+0xa02c>
   1b38c:	ldr	r0, [pc, #2948]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b390:	ldr	r1, [fp, #-16]
   1b394:	movw	r2, #0
   1b398:	sub	r1, r2, r1
   1b39c:	udiv	r0, r0, r1
   1b3a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1b3a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3a8:	ldr	r1, [fp, #-12]
   1b3ac:	mvn	r2, #0
   1b3b0:	sub	r1, r2, r1
   1b3b4:	cmp	r0, r1
   1b3b8:	bls	1b4bc <__assert_fail@plt+0xa144>
   1b3bc:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b3c0:	ldr	r0, [fp, #-16]
   1b3c4:	cmn	r0, #1
   1b3c8:	bne	1b410 <__assert_fail@plt+0xa098>
   1b3cc:	b	1b3e8 <__assert_fail@plt+0xa070>
   1b3d0:	ldr	r0, [fp, #-12]
   1b3d4:	add	r0, r0, #-2147483648	; 0x80000000
   1b3d8:	movw	r1, #0
   1b3dc:	cmp	r1, r0
   1b3e0:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b3e4:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b3e8:	ldr	r0, [fp, #-12]
   1b3ec:	movw	r1, #0
   1b3f0:	cmp	r1, r0
   1b3f4:	bcs	1b4d0 <__assert_fail@plt+0xa158>
   1b3f8:	ldr	r0, [pc, #2840]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b3fc:	ldr	r1, [fp, #-12]
   1b400:	sub	r1, r1, #1
   1b404:	cmp	r0, r1
   1b408:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b40c:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b410:	ldr	r0, [pc, #2820]	; 1bf1c <__assert_fail@plt+0xaba4>
   1b414:	ldr	r1, [fp, #-16]
   1b418:	udiv	r0, r0, r1
   1b41c:	ldr	r1, [fp, #-12]
   1b420:	cmp	r0, r1
   1b424:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b428:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b42c:	ldr	r0, [fp, #-16]
   1b430:	cmp	r0, #0
   1b434:	bne	1b43c <__assert_fail@plt+0xa0c4>
   1b438:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b43c:	ldr	r0, [fp, #-12]
   1b440:	cmp	r0, #0
   1b444:	bcs	1b4a4 <__assert_fail@plt+0xa12c>
   1b448:	ldr	r0, [fp, #-12]
   1b44c:	cmn	r0, #1
   1b450:	bne	1b488 <__assert_fail@plt+0xa110>
   1b454:	b	1b470 <__assert_fail@plt+0xa0f8>
   1b458:	ldr	r0, [fp, #-16]
   1b45c:	add	r0, r0, #-2147483648	; 0x80000000
   1b460:	movw	r1, #0
   1b464:	cmp	r1, r0
   1b468:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b46c:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b470:	ldr	r0, [pc, #2720]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b474:	ldr	r1, [fp, #-16]
   1b478:	sub	r1, r1, #1
   1b47c:	cmp	r0, r1
   1b480:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b484:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b488:	ldr	r0, [pc, #2700]	; 1bf1c <__assert_fail@plt+0xaba4>
   1b48c:	ldr	r1, [fp, #-12]
   1b490:	udiv	r0, r0, r1
   1b494:	ldr	r1, [fp, #-16]
   1b498:	cmp	r0, r1
   1b49c:	bcc	1b4bc <__assert_fail@plt+0xa144>
   1b4a0:	b	1b4d0 <__assert_fail@plt+0xa158>
   1b4a4:	ldr	r0, [pc, #2668]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b4a8:	ldr	r1, [fp, #-16]
   1b4ac:	udiv	r0, r0, r1
   1b4b0:	ldr	r1, [fp, #-12]
   1b4b4:	cmp	r0, r1
   1b4b8:	bcs	1b4d0 <__assert_fail@plt+0xa158>
   1b4bc:	ldr	r0, [fp, #-12]
   1b4c0:	ldr	r1, [fp, #-16]
   1b4c4:	mul	r0, r0, r1
   1b4c8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4cc:	b	1bee4 <__assert_fail@plt+0xab6c>
   1b4d0:	ldr	r0, [fp, #-12]
   1b4d4:	ldr	r1, [fp, #-16]
   1b4d8:	mul	r0, r0, r1
   1b4dc:	str	r0, [fp, #-20]	; 0xffffffec
   1b4e0:	b	1befc <__assert_fail@plt+0xab84>
   1b4e4:	ldr	r0, [fp, #-16]
   1b4e8:	cmp	r0, #0
   1b4ec:	bcs	1b5f8 <__assert_fail@plt+0xa280>
   1b4f0:	ldr	r0, [fp, #-12]
   1b4f4:	cmp	r0, #0
   1b4f8:	bcs	1b580 <__assert_fail@plt+0xa208>
   1b4fc:	b	1b51c <__assert_fail@plt+0xa1a4>
   1b500:	ldr	r0, [fp, #-12]
   1b504:	ldr	r1, [fp, #-16]
   1b508:	mvn	r2, #0
   1b50c:	udiv	r1, r2, r1
   1b510:	cmp	r0, r1
   1b514:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b518:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b51c:	b	1b530 <__assert_fail@plt+0xa1b8>
   1b520:	ldr	r0, [fp, #-16]
   1b524:	cmp	r0, #1
   1b528:	bcc	1b540 <__assert_fail@plt+0xa1c8>
   1b52c:	b	1b54c <__assert_fail@plt+0xa1d4>
   1b530:	ldr	r0, [fp, #-16]
   1b534:	movw	r1, #0
   1b538:	cmp	r1, r0
   1b53c:	bcs	1b54c <__assert_fail@plt+0xa1d4>
   1b540:	movw	r0, #1
   1b544:	str	r0, [fp, #-44]	; 0xffffffd4
   1b548:	b	1b564 <__assert_fail@plt+0xa1ec>
   1b54c:	ldr	r0, [fp, #-16]
   1b550:	movw	r1, #0
   1b554:	sub	r0, r1, r0
   1b558:	mvn	r1, #0
   1b55c:	udiv	r0, r1, r0
   1b560:	str	r0, [fp, #-44]	; 0xffffffd4
   1b564:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b568:	ldr	r1, [fp, #-12]
   1b56c:	mvn	r2, #0
   1b570:	sub	r1, r2, r1
   1b574:	cmp	r0, r1
   1b578:	bls	1b694 <__assert_fail@plt+0xa31c>
   1b57c:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b580:	b	1b588 <__assert_fail@plt+0xa210>
   1b584:	b	1b58c <__assert_fail@plt+0xa214>
   1b588:	b	1b5dc <__assert_fail@plt+0xa264>
   1b58c:	ldr	r0, [fp, #-16]
   1b590:	cmn	r0, #1
   1b594:	bne	1b5dc <__assert_fail@plt+0xa264>
   1b598:	b	1b5b4 <__assert_fail@plt+0xa23c>
   1b59c:	ldr	r0, [fp, #-12]
   1b5a0:	add	r0, r0, #0
   1b5a4:	movw	r1, #0
   1b5a8:	cmp	r1, r0
   1b5ac:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b5b0:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b5b4:	ldr	r0, [fp, #-12]
   1b5b8:	movw	r1, #0
   1b5bc:	cmp	r1, r0
   1b5c0:	bcs	1b6a8 <__assert_fail@plt+0xa330>
   1b5c4:	ldr	r0, [fp, #-12]
   1b5c8:	sub	r0, r0, #1
   1b5cc:	mvn	r1, #0
   1b5d0:	cmp	r1, r0
   1b5d4:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b5d8:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b5dc:	ldr	r0, [fp, #-16]
   1b5e0:	movw	r1, #0
   1b5e4:	udiv	r0, r1, r0
   1b5e8:	ldr	r1, [fp, #-12]
   1b5ec:	cmp	r0, r1
   1b5f0:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b5f4:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b5f8:	ldr	r0, [fp, #-16]
   1b5fc:	cmp	r0, #0
   1b600:	bne	1b608 <__assert_fail@plt+0xa290>
   1b604:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b608:	ldr	r0, [fp, #-12]
   1b60c:	cmp	r0, #0
   1b610:	bcs	1b67c <__assert_fail@plt+0xa304>
   1b614:	b	1b61c <__assert_fail@plt+0xa2a4>
   1b618:	b	1b620 <__assert_fail@plt+0xa2a8>
   1b61c:	b	1b660 <__assert_fail@plt+0xa2e8>
   1b620:	ldr	r0, [fp, #-12]
   1b624:	cmn	r0, #1
   1b628:	bne	1b660 <__assert_fail@plt+0xa2e8>
   1b62c:	b	1b648 <__assert_fail@plt+0xa2d0>
   1b630:	ldr	r0, [fp, #-16]
   1b634:	add	r0, r0, #0
   1b638:	movw	r1, #0
   1b63c:	cmp	r1, r0
   1b640:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b644:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b648:	ldr	r0, [fp, #-16]
   1b64c:	sub	r0, r0, #1
   1b650:	mvn	r1, #0
   1b654:	cmp	r1, r0
   1b658:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b65c:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b660:	ldr	r0, [fp, #-12]
   1b664:	movw	r1, #0
   1b668:	udiv	r0, r1, r0
   1b66c:	ldr	r1, [fp, #-16]
   1b670:	cmp	r0, r1
   1b674:	bcc	1b694 <__assert_fail@plt+0xa31c>
   1b678:	b	1b6a8 <__assert_fail@plt+0xa330>
   1b67c:	ldr	r0, [fp, #-16]
   1b680:	mvn	r1, #0
   1b684:	udiv	r0, r1, r0
   1b688:	ldr	r1, [fp, #-12]
   1b68c:	cmp	r0, r1
   1b690:	bcs	1b6a8 <__assert_fail@plt+0xa330>
   1b694:	ldr	r0, [fp, #-12]
   1b698:	ldr	r1, [fp, #-16]
   1b69c:	mul	r0, r0, r1
   1b6a0:	str	r0, [fp, #-20]	; 0xffffffec
   1b6a4:	b	1bee4 <__assert_fail@plt+0xab6c>
   1b6a8:	ldr	r0, [fp, #-12]
   1b6ac:	ldr	r1, [fp, #-16]
   1b6b0:	mul	r0, r0, r1
   1b6b4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6b8:	b	1befc <__assert_fail@plt+0xab84>
   1b6bc:	b	1b6c0 <__assert_fail@plt+0xa348>
   1b6c0:	b	1b884 <__assert_fail@plt+0xa50c>
   1b6c4:	ldr	r0, [fp, #-16]
   1b6c8:	cmp	r0, #0
   1b6cc:	bcs	1b7cc <__assert_fail@plt+0xa454>
   1b6d0:	ldr	r0, [fp, #-12]
   1b6d4:	cmp	r0, #0
   1b6d8:	bcs	1b760 <__assert_fail@plt+0xa3e8>
   1b6dc:	b	1b6fc <__assert_fail@plt+0xa384>
   1b6e0:	ldr	r0, [pc, #2096]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b6e4:	ldr	r1, [fp, #-12]
   1b6e8:	ldr	r2, [fp, #-16]
   1b6ec:	udiv	r0, r0, r2
   1b6f0:	cmp	r1, r0
   1b6f4:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b6f8:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b6fc:	b	1b710 <__assert_fail@plt+0xa398>
   1b700:	ldr	r0, [fp, #-16]
   1b704:	cmp	r0, #1
   1b708:	bcc	1b720 <__assert_fail@plt+0xa3a8>
   1b70c:	b	1b72c <__assert_fail@plt+0xa3b4>
   1b710:	ldr	r0, [fp, #-16]
   1b714:	movw	r1, #0
   1b718:	cmp	r1, r0
   1b71c:	bcs	1b72c <__assert_fail@plt+0xa3b4>
   1b720:	movw	r0, #0
   1b724:	str	r0, [fp, #-48]	; 0xffffffd0
   1b728:	b	1b744 <__assert_fail@plt+0xa3cc>
   1b72c:	ldr	r0, [pc, #2020]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b730:	ldr	r1, [fp, #-16]
   1b734:	movw	r2, #0
   1b738:	sub	r1, r2, r1
   1b73c:	udiv	r0, r0, r1
   1b740:	str	r0, [fp, #-48]	; 0xffffffd0
   1b744:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b748:	ldr	r1, [fp, #-12]
   1b74c:	mvn	r2, #0
   1b750:	sub	r1, r2, r1
   1b754:	cmp	r0, r1
   1b758:	bls	1b85c <__assert_fail@plt+0xa4e4>
   1b75c:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b760:	ldr	r0, [fp, #-16]
   1b764:	cmn	r0, #1
   1b768:	bne	1b7b0 <__assert_fail@plt+0xa438>
   1b76c:	b	1b788 <__assert_fail@plt+0xa410>
   1b770:	ldr	r0, [fp, #-12]
   1b774:	add	r0, r0, #-2147483648	; 0x80000000
   1b778:	movw	r1, #0
   1b77c:	cmp	r1, r0
   1b780:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b784:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b788:	ldr	r0, [fp, #-12]
   1b78c:	movw	r1, #0
   1b790:	cmp	r1, r0
   1b794:	bcs	1b870 <__assert_fail@plt+0xa4f8>
   1b798:	ldr	r0, [pc, #1912]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b79c:	ldr	r1, [fp, #-12]
   1b7a0:	sub	r1, r1, #1
   1b7a4:	cmp	r0, r1
   1b7a8:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b7ac:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b7b0:	ldr	r0, [pc, #1892]	; 1bf1c <__assert_fail@plt+0xaba4>
   1b7b4:	ldr	r1, [fp, #-16]
   1b7b8:	udiv	r0, r0, r1
   1b7bc:	ldr	r1, [fp, #-12]
   1b7c0:	cmp	r0, r1
   1b7c4:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b7c8:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b7cc:	ldr	r0, [fp, #-16]
   1b7d0:	cmp	r0, #0
   1b7d4:	bne	1b7dc <__assert_fail@plt+0xa464>
   1b7d8:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b7dc:	ldr	r0, [fp, #-12]
   1b7e0:	cmp	r0, #0
   1b7e4:	bcs	1b844 <__assert_fail@plt+0xa4cc>
   1b7e8:	ldr	r0, [fp, #-12]
   1b7ec:	cmn	r0, #1
   1b7f0:	bne	1b828 <__assert_fail@plt+0xa4b0>
   1b7f4:	b	1b810 <__assert_fail@plt+0xa498>
   1b7f8:	ldr	r0, [fp, #-16]
   1b7fc:	add	r0, r0, #-2147483648	; 0x80000000
   1b800:	movw	r1, #0
   1b804:	cmp	r1, r0
   1b808:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b80c:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b810:	ldr	r0, [pc, #1792]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b814:	ldr	r1, [fp, #-16]
   1b818:	sub	r1, r1, #1
   1b81c:	cmp	r0, r1
   1b820:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b824:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b828:	ldr	r0, [pc, #1772]	; 1bf1c <__assert_fail@plt+0xaba4>
   1b82c:	ldr	r1, [fp, #-12]
   1b830:	udiv	r0, r0, r1
   1b834:	ldr	r1, [fp, #-16]
   1b838:	cmp	r0, r1
   1b83c:	bcc	1b85c <__assert_fail@plt+0xa4e4>
   1b840:	b	1b870 <__assert_fail@plt+0xa4f8>
   1b844:	ldr	r0, [pc, #1740]	; 1bf18 <__assert_fail@plt+0xaba0>
   1b848:	ldr	r1, [fp, #-16]
   1b84c:	udiv	r0, r0, r1
   1b850:	ldr	r1, [fp, #-12]
   1b854:	cmp	r0, r1
   1b858:	bcs	1b870 <__assert_fail@plt+0xa4f8>
   1b85c:	ldr	r0, [fp, #-12]
   1b860:	ldr	r1, [fp, #-16]
   1b864:	mul	r0, r0, r1
   1b868:	str	r0, [fp, #-20]	; 0xffffffec
   1b86c:	b	1bee4 <__assert_fail@plt+0xab6c>
   1b870:	ldr	r0, [fp, #-12]
   1b874:	ldr	r1, [fp, #-16]
   1b878:	mul	r0, r0, r1
   1b87c:	str	r0, [fp, #-20]	; 0xffffffec
   1b880:	b	1befc <__assert_fail@plt+0xab84>
   1b884:	ldr	r0, [fp, #-16]
   1b888:	cmp	r0, #0
   1b88c:	bcs	1b998 <__assert_fail@plt+0xa620>
   1b890:	ldr	r0, [fp, #-12]
   1b894:	cmp	r0, #0
   1b898:	bcs	1b920 <__assert_fail@plt+0xa5a8>
   1b89c:	b	1b8bc <__assert_fail@plt+0xa544>
   1b8a0:	ldr	r0, [fp, #-12]
   1b8a4:	ldr	r1, [fp, #-16]
   1b8a8:	mvn	r2, #0
   1b8ac:	udiv	r1, r2, r1
   1b8b0:	cmp	r0, r1
   1b8b4:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b8b8:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b8bc:	b	1b8d0 <__assert_fail@plt+0xa558>
   1b8c0:	ldr	r0, [fp, #-16]
   1b8c4:	cmp	r0, #1
   1b8c8:	bcc	1b8e0 <__assert_fail@plt+0xa568>
   1b8cc:	b	1b8ec <__assert_fail@plt+0xa574>
   1b8d0:	ldr	r0, [fp, #-16]
   1b8d4:	movw	r1, #0
   1b8d8:	cmp	r1, r0
   1b8dc:	bcs	1b8ec <__assert_fail@plt+0xa574>
   1b8e0:	movw	r0, #1
   1b8e4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b8e8:	b	1b904 <__assert_fail@plt+0xa58c>
   1b8ec:	ldr	r0, [fp, #-16]
   1b8f0:	movw	r1, #0
   1b8f4:	sub	r0, r1, r0
   1b8f8:	mvn	r1, #0
   1b8fc:	udiv	r0, r1, r0
   1b900:	str	r0, [fp, #-52]	; 0xffffffcc
   1b904:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b908:	ldr	r1, [fp, #-12]
   1b90c:	mvn	r2, #0
   1b910:	sub	r1, r2, r1
   1b914:	cmp	r0, r1
   1b918:	bls	1ba34 <__assert_fail@plt+0xa6bc>
   1b91c:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b920:	b	1b928 <__assert_fail@plt+0xa5b0>
   1b924:	b	1b92c <__assert_fail@plt+0xa5b4>
   1b928:	b	1b97c <__assert_fail@plt+0xa604>
   1b92c:	ldr	r0, [fp, #-16]
   1b930:	cmn	r0, #1
   1b934:	bne	1b97c <__assert_fail@plt+0xa604>
   1b938:	b	1b954 <__assert_fail@plt+0xa5dc>
   1b93c:	ldr	r0, [fp, #-12]
   1b940:	add	r0, r0, #0
   1b944:	movw	r1, #0
   1b948:	cmp	r1, r0
   1b94c:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b950:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b954:	ldr	r0, [fp, #-12]
   1b958:	movw	r1, #0
   1b95c:	cmp	r1, r0
   1b960:	bcs	1ba48 <__assert_fail@plt+0xa6d0>
   1b964:	ldr	r0, [fp, #-12]
   1b968:	sub	r0, r0, #1
   1b96c:	mvn	r1, #0
   1b970:	cmp	r1, r0
   1b974:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b978:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b97c:	ldr	r0, [fp, #-16]
   1b980:	movw	r1, #0
   1b984:	udiv	r0, r1, r0
   1b988:	ldr	r1, [fp, #-12]
   1b98c:	cmp	r0, r1
   1b990:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b994:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b998:	ldr	r0, [fp, #-16]
   1b99c:	cmp	r0, #0
   1b9a0:	bne	1b9a8 <__assert_fail@plt+0xa630>
   1b9a4:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b9a8:	ldr	r0, [fp, #-12]
   1b9ac:	cmp	r0, #0
   1b9b0:	bcs	1ba1c <__assert_fail@plt+0xa6a4>
   1b9b4:	b	1b9bc <__assert_fail@plt+0xa644>
   1b9b8:	b	1b9c0 <__assert_fail@plt+0xa648>
   1b9bc:	b	1ba00 <__assert_fail@plt+0xa688>
   1b9c0:	ldr	r0, [fp, #-12]
   1b9c4:	cmn	r0, #1
   1b9c8:	bne	1ba00 <__assert_fail@plt+0xa688>
   1b9cc:	b	1b9e8 <__assert_fail@plt+0xa670>
   1b9d0:	ldr	r0, [fp, #-16]
   1b9d4:	add	r0, r0, #0
   1b9d8:	movw	r1, #0
   1b9dc:	cmp	r1, r0
   1b9e0:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b9e4:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1b9e8:	ldr	r0, [fp, #-16]
   1b9ec:	sub	r0, r0, #1
   1b9f0:	mvn	r1, #0
   1b9f4:	cmp	r1, r0
   1b9f8:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1b9fc:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1ba00:	ldr	r0, [fp, #-12]
   1ba04:	movw	r1, #0
   1ba08:	udiv	r0, r1, r0
   1ba0c:	ldr	r1, [fp, #-16]
   1ba10:	cmp	r0, r1
   1ba14:	bcc	1ba34 <__assert_fail@plt+0xa6bc>
   1ba18:	b	1ba48 <__assert_fail@plt+0xa6d0>
   1ba1c:	ldr	r0, [fp, #-16]
   1ba20:	mvn	r1, #0
   1ba24:	udiv	r0, r1, r0
   1ba28:	ldr	r1, [fp, #-12]
   1ba2c:	cmp	r0, r1
   1ba30:	bcs	1ba48 <__assert_fail@plt+0xa6d0>
   1ba34:	ldr	r0, [fp, #-12]
   1ba38:	ldr	r1, [fp, #-16]
   1ba3c:	mul	r0, r0, r1
   1ba40:	str	r0, [fp, #-20]	; 0xffffffec
   1ba44:	b	1bee4 <__assert_fail@plt+0xab6c>
   1ba48:	ldr	r0, [fp, #-12]
   1ba4c:	ldr	r1, [fp, #-16]
   1ba50:	mul	r0, r0, r1
   1ba54:	str	r0, [fp, #-20]	; 0xffffffec
   1ba58:	b	1befc <__assert_fail@plt+0xab84>
   1ba5c:	b	1bcb0 <__assert_fail@plt+0xa938>
   1ba60:	ldr	r0, [fp, #-16]
   1ba64:	cmp	r0, #0
   1ba68:	bcs	1bbc8 <__assert_fail@plt+0xa850>
   1ba6c:	ldr	r0, [fp, #-12]
   1ba70:	cmp	r0, #0
   1ba74:	bcs	1bb44 <__assert_fail@plt+0xa7cc>
   1ba78:	b	1ba7c <__assert_fail@plt+0xa704>
   1ba7c:	ldr	r0, [fp, #-12]
   1ba80:	ldr	r2, [fp, #-16]
   1ba84:	mvn	r1, #0
   1ba88:	mvn	r3, #-2147483648	; 0x80000000
   1ba8c:	mov	ip, #0
   1ba90:	str	r0, [fp, #-56]	; 0xffffffc8
   1ba94:	mov	r0, r1
   1ba98:	mov	r1, r3
   1ba9c:	mov	r3, ip
   1baa0:	bl	1bff8 <__assert_fail@plt+0xac80>
   1baa4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1baa8:	subs	r0, r2, r0
   1baac:	rscs	r1, r1, #0
   1bab0:	str	r0, [fp, #-60]	; 0xffffffc4
   1bab4:	str	r1, [fp, #-64]	; 0xffffffc0
   1bab8:	blt	1bc88 <__assert_fail@plt+0xa910>
   1babc:	b	1bc9c <__assert_fail@plt+0xa924>
   1bac0:	b	1bad4 <__assert_fail@plt+0xa75c>
   1bac4:	ldr	r0, [fp, #-16]
   1bac8:	cmp	r0, #1
   1bacc:	bcc	1bae4 <__assert_fail@plt+0xa76c>
   1bad0:	b	1baf8 <__assert_fail@plt+0xa780>
   1bad4:	ldr	r0, [fp, #-16]
   1bad8:	movw	r1, #0
   1badc:	cmp	r1, r0
   1bae0:	bcs	1baf8 <__assert_fail@plt+0xa780>
   1bae4:	mov	r0, #0
   1bae8:	mvn	r1, #0
   1baec:	str	r1, [fp, #-68]	; 0xffffffbc
   1baf0:	str	r0, [fp, #-72]	; 0xffffffb8
   1baf4:	b	1bb1c <__assert_fail@plt+0xa7a4>
   1baf8:	ldr	r0, [fp, #-16]
   1bafc:	rsb	r2, r0, #0
   1bb00:	mvn	r0, #0
   1bb04:	mvn	r1, #-2147483648	; 0x80000000
   1bb08:	mov	r3, #0
   1bb0c:	bl	1bff8 <__assert_fail@plt+0xac80>
   1bb10:	str	r0, [fp, #-68]	; 0xffffffbc
   1bb14:	str	r1, [fp, #-72]	; 0xffffffb8
   1bb18:	b	1bb1c <__assert_fail@plt+0xa7a4>
   1bb1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1bb20:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bb24:	ldr	r2, [fp, #-12]
   1bb28:	mvn	r2, r2
   1bb2c:	subs	r1, r2, r1
   1bb30:	rscs	r0, r0, #0
   1bb34:	str	r1, [fp, #-76]	; 0xffffffb4
   1bb38:	str	r0, [fp, #-80]	; 0xffffffb0
   1bb3c:	bge	1bc88 <__assert_fail@plt+0xa910>
   1bb40:	b	1bc9c <__assert_fail@plt+0xa924>
   1bb44:	ldr	r0, [fp, #-16]
   1bb48:	cmn	r0, #1
   1bb4c:	bne	1bb94 <__assert_fail@plt+0xa81c>
   1bb50:	b	1bb74 <__assert_fail@plt+0xa7fc>
   1bb54:	ldr	r0, [fp, #-12]
   1bb58:	rsbs	r0, r0, #0
   1bb5c:	mov	r1, #0
   1bb60:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bb64:	str	r0, [fp, #-84]	; 0xffffffac
   1bb68:	str	r1, [sp, #88]	; 0x58
   1bb6c:	blt	1bc88 <__assert_fail@plt+0xa910>
   1bb70:	b	1bc9c <__assert_fail@plt+0xa924>
   1bb74:	ldr	r0, [fp, #-12]
   1bb78:	movw	r1, #0
   1bb7c:	cmp	r1, r0
   1bb80:	bcs	1bc9c <__assert_fail@plt+0xa924>
   1bb84:	mov	r0, #0
   1bb88:	cmp	r0, #0
   1bb8c:	bne	1bc88 <__assert_fail@plt+0xa910>
   1bb90:	b	1bc9c <__assert_fail@plt+0xa924>
   1bb94:	ldr	r2, [fp, #-16]
   1bb98:	mov	r1, #-2147483648	; 0x80000000
   1bb9c:	mov	r0, #0
   1bba0:	str	r0, [sp, #84]	; 0x54
   1bba4:	ldr	r3, [sp, #84]	; 0x54
   1bba8:	bl	1bf24 <__assert_fail@plt+0xabac>
   1bbac:	ldr	r2, [fp, #-12]
   1bbb0:	subs	r0, r0, r2
   1bbb4:	sbcs	r1, r1, #0
   1bbb8:	str	r0, [sp, #80]	; 0x50
   1bbbc:	str	r1, [sp, #76]	; 0x4c
   1bbc0:	blt	1bc88 <__assert_fail@plt+0xa910>
   1bbc4:	b	1bc9c <__assert_fail@plt+0xa924>
   1bbc8:	ldr	r0, [fp, #-16]
   1bbcc:	cmp	r0, #0
   1bbd0:	bne	1bbd8 <__assert_fail@plt+0xa860>
   1bbd4:	b	1bc9c <__assert_fail@plt+0xa924>
   1bbd8:	ldr	r0, [fp, #-12]
   1bbdc:	cmp	r0, #0
   1bbe0:	bcs	1bc58 <__assert_fail@plt+0xa8e0>
   1bbe4:	ldr	r0, [fp, #-12]
   1bbe8:	cmn	r0, #1
   1bbec:	bne	1bc24 <__assert_fail@plt+0xa8ac>
   1bbf0:	b	1bc14 <__assert_fail@plt+0xa89c>
   1bbf4:	ldr	r0, [fp, #-16]
   1bbf8:	rsbs	r0, r0, #0
   1bbfc:	mov	r1, #0
   1bc00:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bc04:	str	r0, [sp, #72]	; 0x48
   1bc08:	str	r1, [sp, #68]	; 0x44
   1bc0c:	blt	1bc88 <__assert_fail@plt+0xa910>
   1bc10:	b	1bc9c <__assert_fail@plt+0xa924>
   1bc14:	mov	r0, #0
   1bc18:	cmp	r0, #0
   1bc1c:	bne	1bc88 <__assert_fail@plt+0xa910>
   1bc20:	b	1bc9c <__assert_fail@plt+0xa924>
   1bc24:	ldr	r2, [fp, #-12]
   1bc28:	mov	r1, #-2147483648	; 0x80000000
   1bc2c:	mov	r0, #0
   1bc30:	str	r0, [sp, #64]	; 0x40
   1bc34:	ldr	r3, [sp, #64]	; 0x40
   1bc38:	bl	1bf24 <__assert_fail@plt+0xabac>
   1bc3c:	ldr	r2, [fp, #-16]
   1bc40:	subs	r0, r0, r2
   1bc44:	sbcs	r1, r1, #0
   1bc48:	str	r0, [sp, #60]	; 0x3c
   1bc4c:	str	r1, [sp, #56]	; 0x38
   1bc50:	blt	1bc88 <__assert_fail@plt+0xa910>
   1bc54:	b	1bc9c <__assert_fail@plt+0xa924>
   1bc58:	ldr	r2, [fp, #-16]
   1bc5c:	mvn	r0, #0
   1bc60:	mvn	r1, #-2147483648	; 0x80000000
   1bc64:	mov	r3, #0
   1bc68:	bl	1bff8 <__assert_fail@plt+0xac80>
   1bc6c:	ldr	r2, [fp, #-12]
   1bc70:	subs	r0, r0, r2
   1bc74:	sbcs	r1, r1, #0
   1bc78:	str	r0, [sp, #52]	; 0x34
   1bc7c:	str	r1, [sp, #48]	; 0x30
   1bc80:	bge	1bc9c <__assert_fail@plt+0xa924>
   1bc84:	b	1bc88 <__assert_fail@plt+0xa910>
   1bc88:	ldr	r0, [fp, #-12]
   1bc8c:	ldr	r1, [fp, #-16]
   1bc90:	mul	r0, r0, r1
   1bc94:	str	r0, [fp, #-20]	; 0xffffffec
   1bc98:	b	1bee4 <__assert_fail@plt+0xab6c>
   1bc9c:	ldr	r0, [fp, #-12]
   1bca0:	ldr	r1, [fp, #-16]
   1bca4:	mul	r0, r0, r1
   1bca8:	str	r0, [fp, #-20]	; 0xffffffec
   1bcac:	b	1befc <__assert_fail@plt+0xab84>
   1bcb0:	ldr	r0, [fp, #-16]
   1bcb4:	cmp	r0, #0
   1bcb8:	bcs	1be04 <__assert_fail@plt+0xaa8c>
   1bcbc:	ldr	r0, [fp, #-12]
   1bcc0:	cmp	r0, #0
   1bcc4:	bcs	1bd8c <__assert_fail@plt+0xaa14>
   1bcc8:	b	1bd04 <__assert_fail@plt+0xa98c>
   1bccc:	ldr	r0, [fp, #-12]
   1bcd0:	ldr	r2, [fp, #-16]
   1bcd4:	mvn	r1, #0
   1bcd8:	mov	r3, #0
   1bcdc:	str	r0, [sp, #44]	; 0x2c
   1bce0:	mov	r0, r1
   1bce4:	bl	1bff8 <__assert_fail@plt+0xac80>
   1bce8:	ldr	r2, [sp, #44]	; 0x2c
   1bcec:	subs	r0, r2, r0
   1bcf0:	rscs	r1, r1, #0
   1bcf4:	str	r0, [sp, #40]	; 0x28
   1bcf8:	str	r1, [sp, #36]	; 0x24
   1bcfc:	bcc	1bebc <__assert_fail@plt+0xab44>
   1bd00:	b	1bed0 <__assert_fail@plt+0xab58>
   1bd04:	b	1bd18 <__assert_fail@plt+0xa9a0>
   1bd08:	ldr	r0, [fp, #-16]
   1bd0c:	cmp	r0, #1
   1bd10:	bcc	1bd28 <__assert_fail@plt+0xa9b0>
   1bd14:	b	1bd3c <__assert_fail@plt+0xa9c4>
   1bd18:	ldr	r0, [fp, #-16]
   1bd1c:	movw	r1, #0
   1bd20:	cmp	r1, r0
   1bd24:	bcs	1bd3c <__assert_fail@plt+0xa9c4>
   1bd28:	mov	r0, #1
   1bd2c:	mvn	r1, #0
   1bd30:	str	r1, [sp, #32]
   1bd34:	str	r0, [sp, #28]
   1bd38:	b	1bd64 <__assert_fail@plt+0xa9ec>
   1bd3c:	ldr	r0, [fp, #-16]
   1bd40:	rsb	r2, r0, #0
   1bd44:	mvn	r0, #0
   1bd48:	mov	r3, #0
   1bd4c:	str	r0, [sp, #24]
   1bd50:	ldr	r1, [sp, #24]
   1bd54:	bl	1bff8 <__assert_fail@plt+0xac80>
   1bd58:	str	r0, [sp, #32]
   1bd5c:	str	r1, [sp, #28]
   1bd60:	b	1bd64 <__assert_fail@plt+0xa9ec>
   1bd64:	ldr	r0, [sp, #28]
   1bd68:	ldr	r1, [sp, #32]
   1bd6c:	ldr	r2, [fp, #-12]
   1bd70:	mvn	r2, r2
   1bd74:	subs	r1, r2, r1
   1bd78:	rscs	r0, r0, #0
   1bd7c:	str	r1, [sp, #20]
   1bd80:	str	r0, [sp, #16]
   1bd84:	bcs	1bebc <__assert_fail@plt+0xab44>
   1bd88:	b	1bed0 <__assert_fail@plt+0xab58>
   1bd8c:	b	1bd94 <__assert_fail@plt+0xaa1c>
   1bd90:	b	1bd98 <__assert_fail@plt+0xaa20>
   1bd94:	b	1bde8 <__assert_fail@plt+0xaa70>
   1bd98:	ldr	r0, [fp, #-16]
   1bd9c:	cmn	r0, #1
   1bda0:	bne	1bde8 <__assert_fail@plt+0xaa70>
   1bda4:	b	1bdc0 <__assert_fail@plt+0xaa48>
   1bda8:	ldr	r0, [fp, #-12]
   1bdac:	add	r0, r0, #0
   1bdb0:	movw	r1, #0
   1bdb4:	cmp	r1, r0
   1bdb8:	bcc	1bebc <__assert_fail@plt+0xab44>
   1bdbc:	b	1bed0 <__assert_fail@plt+0xab58>
   1bdc0:	ldr	r0, [fp, #-12]
   1bdc4:	movw	r1, #0
   1bdc8:	cmp	r1, r0
   1bdcc:	bcs	1bed0 <__assert_fail@plt+0xab58>
   1bdd0:	ldr	r0, [fp, #-12]
   1bdd4:	sub	r0, r0, #1
   1bdd8:	mvn	r1, #0
   1bddc:	cmp	r1, r0
   1bde0:	bcc	1bebc <__assert_fail@plt+0xab44>
   1bde4:	b	1bed0 <__assert_fail@plt+0xab58>
   1bde8:	ldr	r0, [fp, #-16]
   1bdec:	movw	r1, #0
   1bdf0:	udiv	r0, r1, r0
   1bdf4:	ldr	r1, [fp, #-12]
   1bdf8:	cmp	r0, r1
   1bdfc:	bcc	1bebc <__assert_fail@plt+0xab44>
   1be00:	b	1bed0 <__assert_fail@plt+0xab58>
   1be04:	ldr	r0, [fp, #-16]
   1be08:	cmp	r0, #0
   1be0c:	bne	1be14 <__assert_fail@plt+0xaa9c>
   1be10:	b	1bed0 <__assert_fail@plt+0xab58>
   1be14:	ldr	r0, [fp, #-12]
   1be18:	cmp	r0, #0
   1be1c:	bcs	1be88 <__assert_fail@plt+0xab10>
   1be20:	b	1be28 <__assert_fail@plt+0xaab0>
   1be24:	b	1be2c <__assert_fail@plt+0xaab4>
   1be28:	b	1be6c <__assert_fail@plt+0xaaf4>
   1be2c:	ldr	r0, [fp, #-12]
   1be30:	cmn	r0, #1
   1be34:	bne	1be6c <__assert_fail@plt+0xaaf4>
   1be38:	b	1be54 <__assert_fail@plt+0xaadc>
   1be3c:	ldr	r0, [fp, #-16]
   1be40:	add	r0, r0, #0
   1be44:	movw	r1, #0
   1be48:	cmp	r1, r0
   1be4c:	bcc	1bebc <__assert_fail@plt+0xab44>
   1be50:	b	1bed0 <__assert_fail@plt+0xab58>
   1be54:	ldr	r0, [fp, #-16]
   1be58:	sub	r0, r0, #1
   1be5c:	mvn	r1, #0
   1be60:	cmp	r1, r0
   1be64:	bcc	1bebc <__assert_fail@plt+0xab44>
   1be68:	b	1bed0 <__assert_fail@plt+0xab58>
   1be6c:	ldr	r0, [fp, #-12]
   1be70:	movw	r1, #0
   1be74:	udiv	r0, r1, r0
   1be78:	ldr	r1, [fp, #-16]
   1be7c:	cmp	r0, r1
   1be80:	bcc	1bebc <__assert_fail@plt+0xab44>
   1be84:	b	1bed0 <__assert_fail@plt+0xab58>
   1be88:	ldr	r2, [fp, #-16]
   1be8c:	mvn	r0, #0
   1be90:	mov	r3, #0
   1be94:	str	r0, [sp, #12]
   1be98:	ldr	r1, [sp, #12]
   1be9c:	bl	1bff8 <__assert_fail@plt+0xac80>
   1bea0:	ldr	r2, [fp, #-12]
   1bea4:	subs	r0, r0, r2
   1bea8:	sbcs	r1, r1, #0
   1beac:	str	r0, [sp, #8]
   1beb0:	str	r1, [sp, #4]
   1beb4:	bcs	1bed0 <__assert_fail@plt+0xab58>
   1beb8:	b	1bebc <__assert_fail@plt+0xab44>
   1bebc:	ldr	r0, [fp, #-12]
   1bec0:	ldr	r1, [fp, #-16]
   1bec4:	mul	r0, r0, r1
   1bec8:	str	r0, [fp, #-20]	; 0xffffffec
   1becc:	b	1bee4 <__assert_fail@plt+0xab6c>
   1bed0:	ldr	r0, [fp, #-12]
   1bed4:	ldr	r1, [fp, #-16]
   1bed8:	mul	r0, r0, r1
   1bedc:	str	r0, [fp, #-20]	; 0xffffffec
   1bee0:	b	1befc <__assert_fail@plt+0xab84>
   1bee4:	bl	1127c <__errno_location@plt>
   1bee8:	movw	lr, #12
   1beec:	str	lr, [r0]
   1bef0:	movw	r0, #0
   1bef4:	str	r0, [fp, #-4]
   1bef8:	b	1bf0c <__assert_fail@plt+0xab94>
   1befc:	ldr	r0, [fp, #-8]
   1bf00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bf04:	bl	1a3e0 <__assert_fail@plt+0x9068>
   1bf08:	str	r0, [fp, #-4]
   1bf0c:	ldr	r0, [fp, #-4]
   1bf10:	mov	sp, fp
   1bf14:	pop	{fp, pc}
   1bf18:	svcvc	0x00ffffff
   1bf1c:	andhi	r0, r0, r0
   1bf20:			; <UNDEFINED> instruction: 0xffff8000
   1bf24:	cmp	r3, #0
   1bf28:	cmpeq	r2, #0
   1bf2c:	bne	1bf50 <__assert_fail@plt+0xabd8>
   1bf30:	cmp	r1, #0
   1bf34:	movlt	r1, #-2147483648	; 0x80000000
   1bf38:	movlt	r0, #0
   1bf3c:	blt	1bf4c <__assert_fail@plt+0xabd4>
   1bf40:	cmpeq	r0, #0
   1bf44:	mvnne	r1, #-2147483648	; 0x80000000
   1bf48:	mvnne	r0, #0
   1bf4c:	b	1c034 <__assert_fail@plt+0xacbc>
   1bf50:	sub	sp, sp, #8
   1bf54:	push	{sp, lr}
   1bf58:	cmp	r1, #0
   1bf5c:	blt	1bf7c <__assert_fail@plt+0xac04>
   1bf60:	cmp	r3, #0
   1bf64:	blt	1bfb0 <__assert_fail@plt+0xac38>
   1bf68:	bl	1c044 <__assert_fail@plt+0xaccc>
   1bf6c:	ldr	lr, [sp, #4]
   1bf70:	add	sp, sp, #8
   1bf74:	pop	{r2, r3}
   1bf78:	bx	lr
   1bf7c:	rsbs	r0, r0, #0
   1bf80:	sbc	r1, r1, r1, lsl #1
   1bf84:	cmp	r3, #0
   1bf88:	blt	1bfd4 <__assert_fail@plt+0xac5c>
   1bf8c:	bl	1c044 <__assert_fail@plt+0xaccc>
   1bf90:	ldr	lr, [sp, #4]
   1bf94:	add	sp, sp, #8
   1bf98:	pop	{r2, r3}
   1bf9c:	rsbs	r0, r0, #0
   1bfa0:	sbc	r1, r1, r1, lsl #1
   1bfa4:	rsbs	r2, r2, #0
   1bfa8:	sbc	r3, r3, r3, lsl #1
   1bfac:	bx	lr
   1bfb0:	rsbs	r2, r2, #0
   1bfb4:	sbc	r3, r3, r3, lsl #1
   1bfb8:	bl	1c044 <__assert_fail@plt+0xaccc>
   1bfbc:	ldr	lr, [sp, #4]
   1bfc0:	add	sp, sp, #8
   1bfc4:	pop	{r2, r3}
   1bfc8:	rsbs	r0, r0, #0
   1bfcc:	sbc	r1, r1, r1, lsl #1
   1bfd0:	bx	lr
   1bfd4:	rsbs	r2, r2, #0
   1bfd8:	sbc	r3, r3, r3, lsl #1
   1bfdc:	bl	1c044 <__assert_fail@plt+0xaccc>
   1bfe0:	ldr	lr, [sp, #4]
   1bfe4:	add	sp, sp, #8
   1bfe8:	pop	{r2, r3}
   1bfec:	rsbs	r2, r2, #0
   1bff0:	sbc	r3, r3, r3, lsl #1
   1bff4:	bx	lr
   1bff8:	cmp	r3, #0
   1bffc:	cmpeq	r2, #0
   1c000:	bne	1c018 <__assert_fail@plt+0xaca0>
   1c004:	cmp	r1, #0
   1c008:	cmpeq	r0, #0
   1c00c:	mvnne	r1, #0
   1c010:	mvnne	r0, #0
   1c014:	b	1c034 <__assert_fail@plt+0xacbc>
   1c018:	sub	sp, sp, #8
   1c01c:	push	{sp, lr}
   1c020:	bl	1c044 <__assert_fail@plt+0xaccc>
   1c024:	ldr	lr, [sp, #4]
   1c028:	add	sp, sp, #8
   1c02c:	pop	{r2, r3}
   1c030:	bx	lr
   1c034:	push	{r1, lr}
   1c038:	mov	r0, #8
   1c03c:	bl	1109c <raise@plt>
   1c040:	pop	{r1, pc}
   1c044:	cmp	r1, r3
   1c048:	cmpeq	r0, r2
   1c04c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c050:	mov	r4, r0
   1c054:	movcc	r0, #0
   1c058:	mov	r5, r1
   1c05c:	ldr	lr, [sp, #36]	; 0x24
   1c060:	movcc	r1, r0
   1c064:	bcc	1c160 <__assert_fail@plt+0xade8>
   1c068:	cmp	r3, #0
   1c06c:	clzeq	ip, r2
   1c070:	clzne	ip, r3
   1c074:	addeq	ip, ip, #32
   1c078:	cmp	r5, #0
   1c07c:	clzeq	r1, r4
   1c080:	addeq	r1, r1, #32
   1c084:	clzne	r1, r5
   1c088:	sub	ip, ip, r1
   1c08c:	sub	sl, ip, #32
   1c090:	lsl	r9, r3, ip
   1c094:	rsb	fp, ip, #32
   1c098:	orr	r9, r9, r2, lsl sl
   1c09c:	orr	r9, r9, r2, lsr fp
   1c0a0:	lsl	r8, r2, ip
   1c0a4:	cmp	r5, r9
   1c0a8:	cmpeq	r4, r8
   1c0ac:	movcc	r0, #0
   1c0b0:	movcc	r1, r0
   1c0b4:	bcc	1c0d0 <__assert_fail@plt+0xad58>
   1c0b8:	mov	r0, #1
   1c0bc:	subs	r4, r4, r8
   1c0c0:	lsl	r1, r0, sl
   1c0c4:	orr	r1, r1, r0, lsr fp
   1c0c8:	lsl	r0, r0, ip
   1c0cc:	sbc	r5, r5, r9
   1c0d0:	cmp	ip, #0
   1c0d4:	beq	1c160 <__assert_fail@plt+0xade8>
   1c0d8:	lsr	r6, r8, #1
   1c0dc:	orr	r6, r6, r9, lsl #31
   1c0e0:	lsr	r7, r9, #1
   1c0e4:	mov	r2, ip
   1c0e8:	b	1c10c <__assert_fail@plt+0xad94>
   1c0ec:	subs	r3, r4, r6
   1c0f0:	sbc	r8, r5, r7
   1c0f4:	adds	r3, r3, r3
   1c0f8:	adc	r8, r8, r8
   1c0fc:	adds	r4, r3, #1
   1c100:	adc	r5, r8, #0
   1c104:	subs	r2, r2, #1
   1c108:	beq	1c128 <__assert_fail@plt+0xadb0>
   1c10c:	cmp	r5, r7
   1c110:	cmpeq	r4, r6
   1c114:	bcs	1c0ec <__assert_fail@plt+0xad74>
   1c118:	adds	r4, r4, r4
   1c11c:	adc	r5, r5, r5
   1c120:	subs	r2, r2, #1
   1c124:	bne	1c10c <__assert_fail@plt+0xad94>
   1c128:	lsr	r3, r4, ip
   1c12c:	orr	r3, r3, r5, lsl fp
   1c130:	lsr	r2, r5, ip
   1c134:	orr	r3, r3, r5, lsr sl
   1c138:	adds	r0, r0, r4
   1c13c:	mov	r4, r3
   1c140:	lsl	r3, r2, ip
   1c144:	orr	r3, r3, r4, lsl sl
   1c148:	lsl	ip, r4, ip
   1c14c:	orr	r3, r3, r4, lsr fp
   1c150:	adc	r1, r1, r5
   1c154:	subs	r0, r0, ip
   1c158:	mov	r5, r2
   1c15c:	sbc	r1, r1, r3
   1c160:	cmp	lr, #0
   1c164:	strdne	r4, [lr]
   1c168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c16c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c170:	mov	r7, r0
   1c174:	ldr	r6, [pc, #72]	; 1c1c4 <__assert_fail@plt+0xae4c>
   1c178:	ldr	r5, [pc, #72]	; 1c1c8 <__assert_fail@plt+0xae50>
   1c17c:	add	r6, pc, r6
   1c180:	add	r5, pc, r5
   1c184:	sub	r6, r6, r5
   1c188:	mov	r8, r1
   1c18c:	mov	r9, r2
   1c190:	bl	11064 <calloc@plt-0x20>
   1c194:	asrs	r6, r6, #2
   1c198:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c19c:	mov	r4, #0
   1c1a0:	add	r4, r4, #1
   1c1a4:	ldr	r3, [r5], #4
   1c1a8:	mov	r2, r9
   1c1ac:	mov	r1, r8
   1c1b0:	mov	r0, r7
   1c1b4:	blx	r3
   1c1b8:	cmp	r6, r4
   1c1bc:	bne	1c1a0 <__assert_fail@plt+0xae28>
   1c1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c1c4:	andeq	r1, r1, r8, lsl #27
   1c1c8:	andeq	r1, r1, r0, lsl #27
   1c1cc:	bx	lr
   1c1d0:	ldr	r3, [pc, #12]	; 1c1e4 <__assert_fail@plt+0xae6c>
   1c1d4:	mov	r1, #0
   1c1d8:	add	r3, pc, r3
   1c1dc:	ldr	r2, [r3]
   1c1e0:	b	11288 <__cxa_atexit@plt>
   1c1e4:	andeq	r1, r1, r4, lsr pc
   1c1e8:	mov	r2, r1
   1c1ec:	mov	r1, r0
   1c1f0:	mov	r0, #3
   1c1f4:	b	1133c <__xstat64@plt>

Disassembly of section .fini:

0001c1f8 <.fini>:
   1c1f8:	push	{r3, lr}
   1c1fc:	pop	{r3, pc}
