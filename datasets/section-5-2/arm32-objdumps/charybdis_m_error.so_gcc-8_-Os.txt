
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000530 <_init>:
 530:	push	{r3, lr}
 534:	bl	5e0 <call_weak_fn>
 538:	pop	{r3, pc}

Disassembly of section .plt:

0000053c <.plt>:
 53c:	push	{lr}		; (str lr, [sp, #-4]!)
 540:	ldr	lr, [pc, #4]	; 54c <.plt+0x10>
 544:	add	lr, pc, lr
 548:	ldr	pc, [lr, #8]!
 54c:	.word	0x00010ab4

00000550 <__cxa_finalize@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2740]!	; 0xab4

0000055c <rb_strncasecmp@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2732]!	; 0xaac

00000568 <sendto_realops_snomask@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2724]!	; 0xaa4

00000574 <__gmon_start__@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2716]!	; 0xa9c

00000580 <strlen@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2708]!	; 0xa94

0000058c <strchr@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2700]!	; 0xa8c

00000598 <snprintf@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2692]!	; 0xa84

000005a4 <is_remote_connect@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000005b0 <ilog@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2676]!	; 0xa74

000005bc <log_client_name@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005c8 <exit_client@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2660]!	; 0xa64

000005d4 <strncmp@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2652]!	; 0xa5c

Disassembly of section .text:

000005e0 <call_weak_fn>:
 5e0:	ldr	r3, [pc, #20]	; 5fc <call_weak_fn+0x1c>
 5e4:	ldr	r2, [pc, #20]	; 600 <call_weak_fn+0x20>
 5e8:	add	r3, pc, r3
 5ec:	ldr	r2, [r3, r2]
 5f0:	cmp	r2, #0
 5f4:	bxeq	lr
 5f8:	b	574 <__gmon_start__@plt>
 5fc:	.word	0x00010a10
 600:	.word	0x00000044

00000604 <deregister_tm_clones>:
 604:	ldr	r0, [pc, #44]	; 638 <deregister_tm_clones+0x34>
 608:	ldr	r3, [pc, #44]	; 63c <deregister_tm_clones+0x38>
 60c:	add	r0, pc, r0
 610:	add	r3, pc, r3
 614:	cmp	r3, r0
 618:	ldr	r3, [pc, #32]	; 640 <deregister_tm_clones+0x3c>
 61c:	add	r3, pc, r3
 620:	bxeq	lr
 624:	ldr	r2, [pc, #24]	; 644 <deregister_tm_clones+0x40>
 628:	ldr	r3, [r3, r2]
 62c:	cmp	r3, #0
 630:	bxeq	lr
 634:	bx	r3
 638:	.word	0x00010ab8
 63c:	.word	0x00010ab4
 640:	.word	0x000109dc
 644:	.word	0x00000040

00000648 <register_tm_clones>:
 648:	ldr	r0, [pc, #56]	; 688 <register_tm_clones+0x40>
 64c:	ldr	r3, [pc, #56]	; 68c <register_tm_clones+0x44>
 650:	add	r0, pc, r0
 654:	add	r3, pc, r3
 658:	sub	r1, r3, r0
 65c:	ldr	r3, [pc, #44]	; 690 <register_tm_clones+0x48>
 660:	asr	r1, r1, #2
 664:	add	r3, pc, r3
 668:	add	r1, r1, r1, lsr #31
 66c:	asrs	r1, r1, #1
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <register_tm_clones+0x4c>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00010a74
 68c:	.word	0x00010a70
 690:	.word	0x00010994
 694:	.word	0x00000048

00000698 <__do_global_dtors_aux>:
 698:	ldr	r3, [pc, #76]	; 6ec <__do_global_dtors_aux+0x54>
 69c:	ldr	r2, [pc, #76]	; 6f0 <__do_global_dtors_aux+0x58>
 6a0:	add	r3, pc, r3
 6a4:	add	r2, pc, r2
 6a8:	ldrb	r3, [r3]
 6ac:	cmp	r3, #0
 6b0:	bxne	lr
 6b4:	ldr	r3, [pc, #56]	; 6f4 <__do_global_dtors_aux+0x5c>
 6b8:	push	{r4, lr}
 6bc:	ldr	r3, [r2, r3]
 6c0:	cmp	r3, #0
 6c4:	beq	6d4 <__do_global_dtors_aux+0x3c>
 6c8:	ldr	r3, [pc, #40]	; 6f8 <__do_global_dtors_aux+0x60>
 6cc:	ldr	r0, [pc, r3]
 6d0:	bl	550 <__cxa_finalize@plt>
 6d4:	bl	604 <deregister_tm_clones>
 6d8:	ldr	r3, [pc, #28]	; 6fc <__do_global_dtors_aux+0x64>
 6dc:	mov	r2, #1
 6e0:	add	r3, pc, r3
 6e4:	strb	r2, [r3]
 6e8:	pop	{r4, pc}
 6ec:	.word	0x00010a24
 6f0:	.word	0x00010954
 6f4:	.word	0x0000003c
 6f8:	.word	0x00010980
 6fc:	.word	0x000109e4

00000700 <frame_dummy>:
 700:	b	648 <register_tm_clones>

00000704 <is_safe_error>:
 704:	ldr	r1, [pc, #284]	; 828 <is_safe_error+0x124>
 708:	mov	r2, #25
 70c:	push	{r4, r5, lr}
 710:	sub	sp, sp, #108	; 0x6c
 714:	mov	r5, r0
 718:	ldr	r4, [pc, #268]	; 82c <is_safe_error+0x128>
 71c:	add	r1, pc, r1
 720:	bl	5d4 <strncmp@plt>
 724:	cmp	r0, #0
 728:	add	r4, pc, r4
 72c:	bne	73c <is_safe_error+0x38>
 730:	mov	r0, #1
 734:	add	sp, sp, #108	; 0x6c
 738:	pop	{r4, r5, pc}
 73c:	ldr	r3, [pc, #236]	; 830 <is_safe_error+0x12c>
 740:	mov	r1, #100	; 0x64
 744:	ldr	r2, [pc, #232]	; 834 <is_safe_error+0x130>
 748:	ldr	r3, [r4, r3]
 74c:	add	r4, sp, #4
 750:	mov	r0, r4
 754:	add	r2, pc, r2
 758:	add	r3, r3, #88	; 0x58
 75c:	bl	598 <snprintf@plt>
 760:	mov	r0, r4
 764:	bl	580 <strlen@plt>
 768:	mov	r2, r0
 76c:	mov	r1, r4
 770:	mov	r0, r5
 774:	bl	5d4 <strncmp@plt>
 778:	cmp	r0, #0
 77c:	beq	730 <is_safe_error+0x2c>
 780:	ldr	r1, [pc, #176]	; 838 <is_safe_error+0x134>
 784:	mov	r2, #11
 788:	mov	r0, r5
 78c:	add	r1, pc, r1
 790:	bl	5d4 <strncmp@plt>
 794:	cmp	r0, #0
 798:	beq	730 <is_safe_error+0x2c>
 79c:	ldr	r1, [pc, #152]	; 83c <is_safe_error+0x138>
 7a0:	mov	r2, #14
 7a4:	mov	r0, r5
 7a8:	add	r1, pc, r1
 7ac:	bl	5d4 <strncmp@plt>
 7b0:	cmp	r0, #0
 7b4:	beq	730 <is_safe_error+0x2c>
 7b8:	ldr	r1, [pc, #128]	; 840 <is_safe_error+0x13c>
 7bc:	mov	r2, #12
 7c0:	mov	r0, r5
 7c4:	add	r1, pc, r1
 7c8:	bl	55c <rb_strncasecmp@plt>
 7cc:	cmp	r0, #0
 7d0:	beq	734 <is_safe_error+0x30>
 7d4:	mov	r1, #91	; 0x5b
 7d8:	mov	r0, r5
 7dc:	bl	58c <strchr@plt>
 7e0:	subs	r4, r0, #0
 7e4:	movne	r0, #0
 7e8:	bne	734 <is_safe_error+0x30>
 7ec:	mov	r1, #46	; 0x2e
 7f0:	mov	r0, r5
 7f4:	bl	58c <strchr@plt>
 7f8:	cmp	r0, #0
 7fc:	beq	810 <is_safe_error+0x10c>
 800:	ldrb	r3, [r0, #1]
 804:	cmp	r3, #0
 808:	movne	r0, r4
 80c:	bne	734 <is_safe_error+0x30>
 810:	mov	r1, #58	; 0x3a
 814:	mov	r0, r5
 818:	bl	58c <strchr@plt>
 81c:	clz	r0, r0
 820:	lsr	r0, r0, #5
 824:	b	734 <is_safe_error+0x30>
 828:	.word	0x000003df
 82c:	.word	0x000108d0
 830:	.word	0x0000004c
 834:	.word	0x000003c1
 838:	.word	0x000003a6
 83c:	.word	0x00000396
 840:	.word	0x00000389

00000844 <ms_error>:
 844:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 848:	mov	r7, r2
 84c:	cmp	r3, #1
 850:	mov	r6, r1
 854:	ldr	r2, [pc, #224]	; 93c <ms_error+0xf8>
 858:	ldr	r0, [pc, #224]	; 940 <ms_error+0xfc>
 85c:	ldr	r1, [sp, #32]
 860:	add	r2, pc, r2
 864:	ldr	r2, [r2, r0]
 868:	ldr	r4, [r2, #208]	; 0xd0
 86c:	ble	8f0 <ms_error+0xac>
 870:	ldr	r5, [r1, #4]
 874:	ldrb	r3, [r5]
 878:	cmp	r3, #0
 87c:	beq	8fc <ms_error+0xb8>
 880:	mov	r1, #1
 884:	mov	r0, r7
 888:	bl	5bc <log_client_name@plt>
 88c:	ldr	r1, [pc, #176]	; 944 <ms_error+0x100>
 890:	mov	r2, r0
 894:	mov	r3, r5
 898:	mov	r0, #5
 89c:	add	r1, pc, r1
 8a0:	bl	5b0 <ilog@plt>
 8a4:	mov	r0, r5
 8a8:	bl	704 <is_safe_error>
 8ac:	cmp	r0, #0
 8b0:	bne	934 <ms_error+0xf0>
 8b4:	cmp	r4, #2
 8b8:	beq	92c <ms_error+0xe8>
 8bc:	cmp	r4, #0
 8c0:	movne	r4, #2
 8c4:	cmp	r7, r6
 8c8:	bne	908 <ms_error+0xc4>
 8cc:	ldr	r2, [pc, #116]	; 948 <ms_error+0x104>
 8d0:	add	r3, r6, #88	; 0x58
 8d4:	mov	r1, r4
 8d8:	mov	r0, #256	; 0x100
 8dc:	str	r5, [sp, #32]
 8e0:	add	r2, pc, r2
 8e4:	add	sp, sp, #12
 8e8:	pop	{r4, r5, r6, r7, lr}
 8ec:	b	568 <sendto_realops_snomask@plt>
 8f0:	ldr	r5, [pc, #84]	; 94c <ms_error+0x108>
 8f4:	add	r5, pc, r5
 8f8:	b	880 <ms_error+0x3c>
 8fc:	ldr	r5, [pc, #76]	; 950 <ms_error+0x10c>
 900:	add	r5, pc, r5
 904:	b	880 <ms_error+0x3c>
 908:	ldr	r2, [pc, #68]	; 954 <ms_error+0x110>
 90c:	add	r6, r6, #88	; 0x58
 910:	add	r3, r7, #88	; 0x58
 914:	mov	r1, r4
 918:	mov	r0, #256	; 0x100
 91c:	str	r6, [sp]
 920:	str	r5, [sp, #4]
 924:	add	r2, pc, r2
 928:	bl	568 <sendto_realops_snomask@plt>
 92c:	add	sp, sp, #12
 930:	pop	{r4, r5, r6, r7, pc}
 934:	mov	r4, #0
 938:	b	8c4 <ms_error+0x80>
 93c:	.word	0x00010798
 940:	.word	0x00000050
 944:	.word	0x000002c1
 948:	.word	0x000002a0
 94c:	.word	0x00000266
 950:	.word	0x0000025a
 954:	.word	0x00000271

00000958 <m_error>:
 958:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
 95c:	mov	r7, r2
 960:	cmp	r3, #1
 964:	mov	r5, r1
 968:	ldr	r2, [pc, #312]	; aa8 <m_error+0x150>
 96c:	ldr	r0, [pc, #312]	; aac <m_error+0x154>
 970:	ldr	r1, [sp, #32]
 974:	add	r2, pc, r2
 978:	ldr	r2, [r2, r0]
 97c:	ldr	r4, [r2, #208]	; 0xd0
 980:	ble	a50 <m_error+0xf8>
 984:	ldr	r6, [r1, #4]
 988:	ldrb	r3, [r6]
 98c:	cmp	r3, #0
 990:	beq	a5c <m_error+0x104>
 994:	ldrh	r3, [r5, #80]	; 0x50
 998:	sub	r2, r3, #1
 99c:	cmp	r3, #32
 9a0:	cmpne	r2, #1
 9a4:	bhi	9cc <m_error+0x74>
 9a8:	mov	r1, #1
 9ac:	mov	r0, r7
 9b0:	bl	5bc <log_client_name@plt>
 9b4:	ldr	r1, [pc, #244]	; ab0 <m_error+0x158>
 9b8:	mov	r2, r0
 9bc:	mov	r3, r6
 9c0:	mov	r0, #5
 9c4:	add	r1, pc, r1
 9c8:	bl	5b0 <ilog@plt>
 9cc:	mov	r0, r6
 9d0:	bl	704 <is_safe_error>
 9d4:	ldrh	r3, [r5, #80]	; 0x50
 9d8:	cmp	r0, #0
 9dc:	movne	r4, #0
 9e0:	sub	r2, r3, #1
 9e4:	cmp	r3, #32
 9e8:	cmpne	r2, #1
 9ec:	bhi	a30 <m_error+0xd8>
 9f0:	cmp	r4, #1
 9f4:	add	r8, r5, #88	; 0x58
 9f8:	ble	a68 <m_error+0x110>
 9fc:	mov	r0, r5
 a00:	sub	r4, r4, #1
 a04:	bl	5a4 <is_remote_connect@plt>
 a08:	ldr	r2, [pc, #164]	; ab4 <m_error+0x15c>
 a0c:	clz	r4, r4
 a10:	cmp	r0, #0
 a14:	lsr	r4, r4, #5
 a18:	movne	r0, #256	; 0x100
 a1c:	mov	r3, r8
 a20:	orr	r1, r4, r0
 a24:	mov	r0, #256	; 0x100
 a28:	add	r2, pc, r2
 a2c:	bl	568 <sendto_realops_snomask@plt>
 a30:	ldr	r3, [pc, #128]	; ab8 <m_error+0x160>
 a34:	mov	r2, r7
 a38:	mov	r1, r7
 a3c:	mov	r0, r5
 a40:	add	r3, pc, r3
 a44:	add	sp, sp, #8
 a48:	pop	{r4, r5, r6, r7, r8, lr}
 a4c:	b	5c8 <exit_client@plt>
 a50:	ldr	r6, [pc, #100]	; abc <m_error+0x164>
 a54:	add	r6, pc, r6
 a58:	b	994 <m_error+0x3c>
 a5c:	ldr	r6, [pc, #92]	; ac0 <m_error+0x168>
 a60:	add	r6, pc, r6
 a64:	b	994 <m_error+0x3c>
 a68:	cmp	r4, #0
 a6c:	movne	r1, #2
 a70:	bne	a84 <m_error+0x12c>
 a74:	mov	r0, r5
 a78:	bl	5a4 <is_remote_connect@plt>
 a7c:	subs	r1, r0, #0
 a80:	movne	r1, #256	; 0x100
 a84:	ldr	r2, [pc, #56]	; ac4 <m_error+0x16c>
 a88:	mov	r3, r8
 a8c:	mov	r0, #256	; 0x100
 a90:	str	r6, [sp]
 a94:	add	r2, pc, r2
 a98:	bl	568 <sendto_realops_snomask@plt>
 a9c:	cmp	r4, #1
 aa0:	bne	a30 <m_error+0xd8>
 aa4:	b	9fc <m_error+0xa4>
 aa8:	.word	0x00010684
 aac:	.word	0x00000050
 ab0:	.word	0x00000199
 ab4:	.word	0x00000189
 ab8:	.word	0x0000018c
 abc:	.word	0x00000106
 ac0:	.word	0x000000fa
 ac4:	.word	0x000000ec

Disassembly of section .fini:

00000ac8 <_fini>:
 ac8:	push	{r3, lr}
 acc:	pop	{r3, pc}
