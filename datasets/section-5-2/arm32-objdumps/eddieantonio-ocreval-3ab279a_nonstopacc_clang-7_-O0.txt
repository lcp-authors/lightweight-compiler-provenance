
../repos/eddieantonio-ocreval-3ab279a/nonstopacc/nonstopacc:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10c84 <__assert_fail@plt+0x4c>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <calloc@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <calloc@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r8, r1, r8, asr r5

00010aac <calloc@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #24, 20	; 0x18000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #24, 20	; 0x18000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <printf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #24, 20	; 0x18000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <fopen@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #24, 20	; 0x18000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #24, 20	; 0x18000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <utf8proc_get_property@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #24, 20	; 0x18000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <fgets@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #24, 20	; 0x18000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <utf8proc_encode_char@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #24, 20	; 0x18000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <strdup@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #24, 20	; 0x18000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <rewind@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #24, 20	; 0x18000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <utf8proc_tolower@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #24, 20	; 0x18000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <__xstat@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #24, 20	; 0x18000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <fread@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #24, 20	; 0x18000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <utf8proc_iterate@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #24, 20	; 0x18000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <malloc@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #24, 20	; 0x18000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <__libc_start_main@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #24, 20	; 0x18000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <__sysv_signal@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #24, 20	; 0x18000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <__gmon_start__@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #24, 20	; 0x18000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <exit@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #24, 20	; 0x18000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <utf8proc_category@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #24, 20	; 0x18000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <strlen@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #24, 20	; 0x18000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <fprintf@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #24, 20	; 0x18000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <__isoc99_sscanf@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #24, 20	; 0x18000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <fclose@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #24, 20	; 0x18000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <utf8proc_NFC@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #24, 20	; 0x18000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <fputc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #24, 20	; 0x18000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <sprintf@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #24, 20	; 0x18000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <atoi@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #24, 20	; 0x18000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

00010bfc <utf8proc_errmsg@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #24, 20	; 0x18000
   10c04:	ldr	pc, [ip, #1144]!	; 0x478

00010c08 <fputs@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #24, 20	; 0x18000
   10c10:	ldr	pc, [ip, #1136]!	; 0x470

00010c14 <strncmp@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #24, 20	; 0x18000
   10c1c:	ldr	pc, [ip, #1128]!	; 0x468

00010c20 <abort@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #24, 20	; 0x18000
   10c28:	ldr	pc, [ip, #1120]!	; 0x460

00010c2c <getc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #24, 20	; 0x18000
   10c34:	ldr	pc, [ip, #1112]!	; 0x458

00010c38 <__assert_fail@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #24, 20	; 0x18000
   10c40:	ldr	pc, [ip, #1104]!	; 0x450

Disassembly of section .text:

00010c48 <error@@Base-0xfd4>:
   10c48:	mov	fp, #0
   10c4c:	mov	lr, #0
   10c50:	pop	{r1}		; (ldr r1, [sp], #4)
   10c54:	mov	r2, sp
   10c58:	push	{r2}		; (str r2, [sp, #-4]!)
   10c5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c60:	ldr	ip, [pc, #16]	; 10c78 <__assert_fail@plt+0x40>
   10c64:	push	{ip}		; (str ip, [sp, #-4]!)
   10c68:	ldr	r0, [pc, #12]	; 10c7c <__assert_fail@plt+0x44>
   10c6c:	ldr	r3, [pc, #12]	; 10c80 <__assert_fail@plt+0x48>
   10c70:	bl	10b60 <__libc_start_main@plt>
   10c74:	bl	10c20 <abort@plt>
   10c78:	muleq	r1, ip, ip
   10c7c:	andeq	r0, r1, r4, asr #30
   10c80:	andeq	r4, r1, ip, lsr ip
   10c84:	ldr	r3, [pc, #20]	; 10ca0 <__assert_fail@plt+0x68>
   10c88:	ldr	r2, [pc, #20]	; 10ca4 <__assert_fail@plt+0x6c>
   10c8c:	add	r3, pc, r3
   10c90:	ldr	r2, [r3, r2]
   10c94:	cmp	r2, #0
   10c98:	bxeq	lr
   10c9c:	b	10b78 <__gmon_start__@plt>
   10ca0:	andeq	r8, r1, ip, ror #6
   10ca4:	andeq	r0, r0, r0, ror #1
   10ca8:	ldr	r0, [pc, #24]	; 10cc8 <__assert_fail@plt+0x90>
   10cac:	ldr	r3, [pc, #24]	; 10ccc <__assert_fail@plt+0x94>
   10cb0:	cmp	r3, r0
   10cb4:	bxeq	lr
   10cb8:	ldr	r3, [pc, #16]	; 10cd0 <__assert_fail@plt+0x98>
   10cbc:	cmp	r3, #0
   10cc0:	bxeq	lr
   10cc4:	bx	r3
   10cc8:	andeq	r9, r2, r8, asr #2
   10ccc:	andeq	r9, r2, r8, asr #2
   10cd0:	andeq	r0, r0, r0
   10cd4:	ldr	r0, [pc, #36]	; 10d00 <__assert_fail@plt+0xc8>
   10cd8:	ldr	r1, [pc, #36]	; 10d04 <__assert_fail@plt+0xcc>
   10cdc:	sub	r1, r1, r0
   10ce0:	asr	r1, r1, #2
   10ce4:	add	r1, r1, r1, lsr #31
   10ce8:	asrs	r1, r1, #1
   10cec:	bxeq	lr
   10cf0:	ldr	r3, [pc, #16]	; 10d08 <__assert_fail@plt+0xd0>
   10cf4:	cmp	r3, #0
   10cf8:	bxeq	lr
   10cfc:	bx	r3
   10d00:	andeq	r9, r2, r8, asr #2
   10d04:	andeq	r9, r2, r8, asr #2
   10d08:	andeq	r0, r0, r0
   10d0c:	push	{r4, lr}
   10d10:	ldr	r4, [pc, #24]	; 10d30 <__assert_fail@plt+0xf8>
   10d14:	ldrb	r3, [r4]
   10d18:	cmp	r3, #0
   10d1c:	popne	{r4, pc}
   10d20:	bl	10ca8 <__assert_fail@plt+0x70>
   10d24:	mov	r3, #1
   10d28:	strb	r3, [r4]
   10d2c:	pop	{r4, pc}
   10d30:	andeq	r9, r2, r8, asr #2
   10d34:	b	10cd4 <__assert_fail@plt+0x9c>
   10d38:	push	{fp, lr}
   10d3c:	mov	fp, sp
   10d40:	sub	sp, sp, #16
   10d44:	ldr	r2, [pc, #104]	; 10db4 <__assert_fail@plt+0x17c>
   10d48:	ldr	r2, [pc, r2]
   10d4c:	str	r0, [fp, #-4]
   10d50:	str	r1, [sp, #8]
   10d54:	ldr	r0, [fp, #-4]
   10d58:	ldr	r1, [sp, #8]
   10d5c:	blx	r2
   10d60:	str	r0, [sp, #4]
   10d64:	ldr	r0, [sp, #4]
   10d68:	movw	r1, #0
   10d6c:	cmp	r0, r1
   10d70:	beq	10dac <__assert_fail@plt+0x174>
   10d74:	ldr	r0, [pc, #60]	; 10db8 <__assert_fail@plt+0x180>
   10d78:	ldr	r0, [pc, r0]
   10d7c:	ldr	r1, [pc, #56]	; 10dbc <__assert_fail@plt+0x184>
   10d80:	ldr	r1, [pc, r1]
   10d84:	ldr	r2, [sp, #4]
   10d88:	ldr	r2, [r2, #12]
   10d8c:	ldr	r3, [r1]
   10d90:	sub	r2, r3, r2
   10d94:	str	r2, [r1]
   10d98:	ldr	r1, [sp, #4]
   10d9c:	ldr	r1, [r1, #16]
   10da0:	ldr	r2, [r0]
   10da4:	sub	r1, r2, r1
   10da8:	str	r1, [r0]
   10dac:	mov	sp, fp
   10db0:	pop	{fp, pc}
   10db4:	andeq	r8, r1, ip, lsl #7
   10db8:	muleq	r1, r0, r3
   10dbc:	andeq	r8, r1, r0, lsl r3
   10dc0:	push	{fp, lr}
   10dc4:	mov	fp, sp
   10dc8:	sub	sp, sp, #8
   10dcc:	ldr	r0, [pc, #116]	; 10e48 <__assert_fail@plt+0x210>
   10dd0:	add	r0, pc, r0
   10dd4:	ldr	r1, [pc, #112]	; 10e4c <__assert_fail@plt+0x214>
   10dd8:	ldr	r1, [pc, r1]
   10ddc:	vldr	d16, [pc, #92]	; 10e40 <__assert_fail@plt+0x208>
   10de0:	ldr	r2, [pc, #104]	; 10e50 <__assert_fail@plt+0x218>
   10de4:	ldr	r2, [pc, r2]
   10de8:	ldr	r3, [pc, #100]	; 10e54 <__assert_fail@plt+0x21c>
   10dec:	add	r3, pc, r3
   10df0:	ldr	ip, [r3]
   10df4:	add	lr, ip, #1
   10df8:	str	lr, [r3]
   10dfc:	ldr	r3, [r1]
   10e00:	ldr	r2, [r2]
   10e04:	sub	r2, r3, r2
   10e08:	vmov	s0, r2
   10e0c:	vcvt.f64.s32	d17, s0
   10e10:	vmul.f64	d16, d16, d17
   10e14:	ldr	r1, [r1]
   10e18:	vmov	s0, r1
   10e1c:	vcvt.f64.s32	d17, s0
   10e20:	vdiv.f64	d16, d16, d17
   10e24:	mov	r1, ip
   10e28:	vmov	r2, r3, d16
   10e2c:	bl	10ac4 <printf@plt>
   10e30:	str	r0, [sp, #4]
   10e34:	mov	sp, fp
   10e38:	pop	{fp, pc}
   10e3c:	nop	{0}
   10e40:	andeq	r0, r0, r0
   10e44:	subsmi	r0, r9, r0
   10e48:	andeq	r3, r0, r4, ror #29
   10e4c:			; <UNDEFINED> instruction: 0x000182b8
   10e50:	andeq	r8, r1, r4, lsr #6
   10e54:	andeq	r8, r1, r8, asr r3
   10e58:	push	{fp, lr}
   10e5c:	mov	fp, sp
   10e60:	sub	sp, sp, #8
   10e64:	ldr	r0, [pc, #188]	; 10f28 <__assert_fail@plt+0x2f0>
   10e68:	ldr	r0, [pc, r0]
   10e6c:	ldr	r1, [pc, #184]	; 10f2c <__assert_fail@plt+0x2f4>
   10e70:	ldr	r1, [pc, r1]
   10e74:	ldr	r2, [pc, #180]	; 10f30 <__assert_fail@plt+0x2f8>
   10e78:	ldr	r2, [pc, r2]
   10e7c:	ldr	r3, [r2]
   10e80:	str	r3, [r0]
   10e84:	ldr	r2, [r2, #4]
   10e88:	str	r2, [r1]
   10e8c:	ldr	r0, [r0]
   10e90:	cmp	r0, #0
   10e94:	bne	10e9c <__assert_fail@plt+0x264>
   10e98:	b	10f20 <__assert_fail@plt+0x2e8>
   10e9c:	bl	10dc0 <__assert_fail@plt+0x188>
   10ea0:	ldr	lr, [pc, #140]	; 10f34 <__assert_fail@plt+0x2fc>
   10ea4:	ldr	lr, [pc, lr]
   10ea8:	ldr	lr, [lr]
   10eac:	str	lr, [sp, #4]
   10eb0:	ldr	r0, [sp, #4]
   10eb4:	movw	r1, #0
   10eb8:	cmp	r0, r1
   10ebc:	beq	10f20 <__assert_fail@plt+0x2e8>
   10ec0:	ldr	r0, [pc, #120]	; 10f40 <__assert_fail@plt+0x308>
   10ec4:	ldr	r0, [pc, r0]
   10ec8:	add	r0, r0, #992	; 0x3e0
   10ecc:	ldr	r1, [sp, #4]
   10ed0:	ldr	r1, [r1, #8]
   10ed4:	bl	10d38 <__assert_fail@plt+0x100>
   10ed8:	ldr	r0, [pc, #92]	; 10f3c <__assert_fail@plt+0x304>
   10edc:	ldr	r0, [pc, r0]
   10ee0:	movw	r1, #9048	; 0x2358
   10ee4:	add	r0, r0, r1
   10ee8:	ldr	r1, [sp, #4]
   10eec:	ldr	r1, [r1, #8]
   10ef0:	bl	10d38 <__assert_fail@plt+0x100>
   10ef4:	ldr	r0, [pc, #60]	; 10f38 <__assert_fail@plt+0x300>
   10ef8:	ldr	r0, [pc, r0]
   10efc:	ldr	r0, [r0]
   10f00:	cmp	r0, #0
   10f04:	bne	10f0c <__assert_fail@plt+0x2d4>
   10f08:	b	10f20 <__assert_fail@plt+0x2e8>
   10f0c:	bl	10dc0 <__assert_fail@plt+0x188>
   10f10:	ldr	r0, [sp, #4]
   10f14:	ldr	r0, [r0, #4]
   10f18:	str	r0, [sp, #4]
   10f1c:	b	10eb0 <__assert_fail@plt+0x278>
   10f20:	mov	sp, fp
   10f24:	pop	{fp, pc}
   10f28:	andeq	r8, r1, r8, lsr #4
   10f2c:	muleq	r1, r8, r2
   10f30:	andeq	r8, r1, r8, ror #4
   10f34:	andeq	r8, r1, r8, lsl r2
   10f38:	muleq	r1, r8, r1
   10f3c:	andeq	r8, r1, r4, lsl #4
   10f40:	andeq	r8, r1, ip, lsl r2
   10f44:	push	{fp, lr}
   10f48:	mov	fp, sp
   10f4c:	sub	sp, sp, #24
   10f50:	ldr	r2, [pc, #212]	; 1102c <__assert_fail@plt+0x3f4>
   10f54:	add	r2, pc, r2
   10f58:	ldr	r3, [pc, #208]	; 11030 <__assert_fail@plt+0x3f8>
   10f5c:	ldr	r3, [pc, r3]
   10f60:	movw	ip, #0
   10f64:	str	ip, [fp, #-4]
   10f68:	str	r0, [fp, #-8]
   10f6c:	str	r1, [sp, #12]
   10f70:	ldr	r1, [sp, #12]
   10f74:	sub	r0, fp, #8
   10f78:	str	r3, [sp, #8]
   10f7c:	mov	r3, ip
   10f80:	ldr	ip, [sp, #8]
   10f84:	blx	ip
   10f88:	ldr	r0, [fp, #-8]
   10f8c:	cmp	r0, #2
   10f90:	beq	10fa8 <__assert_fail@plt+0x370>
   10f94:	ldr	r0, [pc, #188]	; 11058 <__assert_fail@plt+0x420>
   10f98:	add	r0, pc, r0
   10f9c:	ldr	r1, [pc, #184]	; 1105c <__assert_fail@plt+0x424>
   10fa0:	ldr	r1, [pc, r1]
   10fa4:	blx	r1
   10fa8:	ldr	r0, [pc, #156]	; 1104c <__assert_fail@plt+0x414>
   10fac:	ldr	r0, [pc, r0]
   10fb0:	ldr	r1, [pc, #152]	; 11050 <__assert_fail@plt+0x418>
   10fb4:	ldr	r2, [pc, r1]
   10fb8:	ldr	r1, [pc, #148]	; 11054 <__assert_fail@plt+0x41c>
   10fbc:	ldr	r1, [pc, r1]
   10fc0:	ldr	r3, [sp, #12]
   10fc4:	ldr	r3, [r3]
   10fc8:	str	r1, [sp, #4]
   10fcc:	mov	r1, r3
   10fd0:	ldr	r3, [sp, #4]
   10fd4:	blx	r3
   10fd8:	ldr	r0, [pc, #96]	; 11040 <__assert_fail@plt+0x408>
   10fdc:	ldr	r0, [pc, r0]
   10fe0:	ldr	r1, [pc, #92]	; 11044 <__assert_fail@plt+0x40c>
   10fe4:	ldr	r1, [pc, r1]
   10fe8:	ldr	r2, [pc, #88]	; 11048 <__assert_fail@plt+0x410>
   10fec:	ldr	r2, [pc, r2]
   10ff0:	blx	r2
   10ff4:	ldr	r0, [pc, #60]	; 11038 <__assert_fail@plt+0x400>
   10ff8:	ldr	r0, [pc, r0]
   10ffc:	ldr	r1, [pc, #56]	; 1103c <__assert_fail@plt+0x404>
   11000:	ldr	r1, [pc, r1]
   11004:	ldr	r2, [sp, #12]
   11008:	ldr	r2, [r2, #4]
   1100c:	str	r1, [sp]
   11010:	mov	r1, r2
   11014:	ldr	r2, [sp]
   11018:	blx	r2
   1101c:	bl	10e58 <__assert_fail@plt+0x220>
   11020:	ldr	r0, [pc, #12]	; 11034 <__assert_fail@plt+0x3fc>
   11024:	ldr	r0, [pc, r0]
   11028:	blx	r0
   1102c:	andeq	r3, r0, ip, ror #26
   11030:	andeq	r8, r1, r0, ror r1
   11034:	ldrdeq	r8, [r1], -r4
   11038:	andeq	r8, r1, r8, ror #1
   1103c:	andeq	r8, r1, r0, asr #1
   11040:	andeq	r8, r1, r0, ror #1
   11044:	strheq	r8, [r1], -r0
   11048:	andeq	r8, r1, r8, lsr #2
   1104c:	andeq	r8, r1, r8, ror #1
   11050:	andeq	r8, r1, r0, lsl #2
   11054:	andeq	r8, r1, r8, lsr r1
   11058:	andeq	r3, r0, ip, asr #26
   1105c:	andeq	r8, r1, r0, lsl #2
   11060:	push	{fp, lr}
   11064:	mov	fp, sp
   11068:	sub	sp, sp, #16
   1106c:	str	r0, [fp, #-4]
   11070:	movw	r0, #0
   11074:	strh	r0, [fp, #-6]
   11078:	ldrsh	r0, [fp, #-6]
   1107c:	movw	r1, #503	; 0x1f7
   11080:	cmp	r0, r1
   11084:	bge	110c0 <__assert_fail@plt+0x488>
   11088:	ldr	r0, [pc, #92]	; 110ec <__assert_fail@plt+0x4b4>
   1108c:	ldr	r0, [pc, r0]
   11090:	ldr	r1, [fp, #-4]
   11094:	ldrsh	r2, [fp, #-6]
   11098:	add	r1, r1, r2, lsl #4
   1109c:	str	r0, [sp, #4]
   110a0:	mov	r0, r1
   110a4:	ldr	r1, [sp, #4]
   110a8:	blx	r1
   110ac:	ldrh	r0, [fp, #-6]
   110b0:	movw	r1, #1
   110b4:	add	r0, r0, r1
   110b8:	strh	r0, [fp, #-6]
   110bc:	b	11078 <__assert_fail@plt+0x440>
   110c0:	ldr	r0, [fp, #-4]
   110c4:	movw	r1, #8048	; 0x1f70
   110c8:	add	r0, r0, r1
   110cc:	movw	r1, #0
   110d0:	str	r1, [r0]
   110d4:	ldr	r0, [fp, #-4]
   110d8:	movw	r2, #8052	; 0x1f74
   110dc:	add	r0, r0, r2
   110e0:	str	r1, [r0]
   110e4:	mov	sp, fp
   110e8:	pop	{fp, pc}
   110ec:	andeq	r8, r1, r4, ror r0
   110f0:	push	{fp, lr}
   110f4:	mov	fp, sp
   110f8:	sub	sp, sp, #24
   110fc:	str	r0, [fp, #-4]
   11100:	str	r1, [fp, #-8]
   11104:	ldr	r0, [fp, #-4]
   11108:	ldr	r1, [fp, #-8]
   1110c:	str	r0, [sp, #8]
   11110:	mov	r0, r1
   11114:	bl	11194 <__assert_fail@plt+0x55c>
   11118:	mov	r1, r0
   1111c:	ldr	lr, [sp, #8]
   11120:	add	r0, lr, r0, lsl #4
   11124:	ldr	r0, [r0]
   11128:	str	r0, [sp, #12]
   1112c:	str	r1, [sp, #4]
   11130:	ldr	r0, [sp, #12]
   11134:	movw	r1, #0
   11138:	cmp	r0, r1
   1113c:	movw	r0, #0
   11140:	str	r0, [sp]
   11144:	beq	11168 <__assert_fail@plt+0x530>
   11148:	ldr	r0, [fp, #-8]
   1114c:	ldr	r1, [sp, #12]
   11150:	ldr	r1, [r1, #8]
   11154:	bl	10ab8 <strcmp@plt>
   11158:	cmp	r0, #0
   1115c:	movw	r0, #0
   11160:	movne	r0, #1
   11164:	str	r0, [sp]
   11168:	ldr	r0, [sp]
   1116c:	tst	r0, #1
   11170:	beq	11188 <__assert_fail@plt+0x550>
   11174:	b	11178 <__assert_fail@plt+0x540>
   11178:	ldr	r0, [sp, #12]
   1117c:	ldr	r0, [r0, #4]
   11180:	str	r0, [sp, #12]
   11184:	b	11130 <__assert_fail@plt+0x4f8>
   11188:	ldr	r0, [sp, #12]
   1118c:	mov	sp, fp
   11190:	pop	{fp, pc}
   11194:	sub	sp, sp, #16
   11198:	str	r0, [sp, #12]
   1119c:	ldr	r0, [sp, #12]
   111a0:	str	r0, [sp, #8]
   111a4:	movw	r0, #0
   111a8:	str	r0, [sp]
   111ac:	str	r0, [sp, #4]
   111b0:	ldr	r0, [sp, #8]
   111b4:	ldr	r1, [sp, #4]
   111b8:	add	r0, r0, r1
   111bc:	ldrsb	r0, [r0]
   111c0:	cmp	r0, #0
   111c4:	beq	111f4 <__assert_fail@plt+0x5bc>
   111c8:	ldr	r0, [sp, #8]
   111cc:	ldr	r1, [sp, #4]
   111d0:	add	r0, r0, r1
   111d4:	ldrb	r0, [r0]
   111d8:	ldr	r1, [sp]
   111dc:	add	r0, r1, r0
   111e0:	str	r0, [sp]
   111e4:	ldr	r0, [sp, #4]
   111e8:	add	r0, r0, #1
   111ec:	str	r0, [sp, #4]
   111f0:	b	111b0 <__assert_fail@plt+0x578>
   111f4:	ldr	r0, [sp]
   111f8:	movw	r1, #20065	; 0x4e61
   111fc:	movt	r1, #33354	; 0x824a
   11200:	smmla	r1, r0, r1, r0
   11204:	asr	r2, r1, #8
   11208:	add	r1, r2, r1, lsr #31
   1120c:	movw	r2, #503	; 0x1f7
   11210:	mls	r0, r1, r2, r0
   11214:	sxth	r0, r0
   11218:	add	sp, sp, #16
   1121c:	bx	lr
   11220:	push	{fp, lr}
   11224:	mov	fp, sp
   11228:	sub	sp, sp, #24
   1122c:	ldr	r2, [pc, #112]	; 112a4 <__assert_fail@plt+0x66c>
   11230:	ldr	r2, [pc, r2]
   11234:	str	r0, [fp, #-4]
   11238:	str	r1, [fp, #-8]
   1123c:	ldr	r0, [fp, #-4]
   11240:	ldr	r1, [fp, #-8]
   11244:	ldr	r1, [r1, #8]
   11248:	str	r0, [sp, #12]
   1124c:	mov	r0, r1
   11250:	str	r2, [sp, #8]
   11254:	bl	11194 <__assert_fail@plt+0x55c>
   11258:	mov	r1, r0
   1125c:	ldr	r2, [sp, #12]
   11260:	add	r0, r2, r0, lsl #4
   11264:	ldr	lr, [fp, #-8]
   11268:	str	r1, [sp, #4]
   1126c:	mov	r1, lr
   11270:	ldr	lr, [sp, #8]
   11274:	blx	lr
   11278:	ldr	r0, [fp, #-4]
   1127c:	bl	112a8 <__assert_fail@plt+0x670>
   11280:	ldr	r0, [fp, #-4]
   11284:	movw	r1, #8052	; 0x1f74
   11288:	add	r2, r0, r1
   1128c:	ldr	r2, [r2]
   11290:	add	r2, r2, #1
   11294:	add	r0, r0, r1
   11298:	str	r2, [r0]
   1129c:	mov	sp, fp
   112a0:	pop	{fp, pc}
   112a4:	andeq	r7, r1, ip, ror #28
   112a8:	push	{fp, lr}
   112ac:	mov	fp, sp
   112b0:	sub	sp, sp, #8
   112b4:	str	r0, [sp, #4]
   112b8:	ldr	r0, [sp, #4]
   112bc:	movw	r1, #8048	; 0x1f70
   112c0:	add	r0, r0, r1
   112c4:	ldr	r0, [r0]
   112c8:	movw	r1, #0
   112cc:	cmp	r0, r1
   112d0:	beq	112fc <__assert_fail@plt+0x6c4>
   112d4:	ldr	r0, [sp, #4]
   112d8:	movw	r1, #8048	; 0x1f70
   112dc:	add	r0, r0, r1
   112e0:	ldr	r0, [r0]
   112e4:	bl	10adc <free@plt>
   112e8:	ldr	r0, [sp, #4]
   112ec:	movw	r1, #8048	; 0x1f70
   112f0:	add	r0, r0, r1
   112f4:	movw	r1, #0
   112f8:	str	r1, [r0]
   112fc:	mov	sp, fp
   11300:	pop	{fp, pc}
   11304:	push	{fp, lr}
   11308:	mov	fp, sp
   1130c:	sub	sp, sp, #24
   11310:	ldr	r2, [pc, #116]	; 1138c <__assert_fail@plt+0x754>
   11314:	ldr	r2, [pc, r2]
   11318:	str	r0, [fp, #-4]
   1131c:	str	r1, [fp, #-8]
   11320:	ldr	r0, [fp, #-4]
   11324:	ldr	r1, [fp, #-8]
   11328:	ldr	r1, [r1, #8]
   1132c:	str	r0, [sp, #12]
   11330:	mov	r0, r1
   11334:	str	r2, [sp, #8]
   11338:	bl	11194 <__assert_fail@plt+0x55c>
   1133c:	mov	r1, r0
   11340:	ldr	r2, [sp, #12]
   11344:	add	r0, r2, r0, lsl #4
   11348:	ldr	lr, [fp, #-8]
   1134c:	str	r1, [sp, #4]
   11350:	mov	r1, lr
   11354:	ldr	lr, [sp, #8]
   11358:	blx	lr
   1135c:	ldr	r0, [fp, #-4]
   11360:	bl	112a8 <__assert_fail@plt+0x670>
   11364:	ldr	r0, [fp, #-4]
   11368:	movw	r1, #8052	; 0x1f74
   1136c:	add	r2, r0, r1
   11370:	ldr	r2, [r2]
   11374:	mvn	lr, #0
   11378:	add	r2, r2, lr
   1137c:	add	r0, r0, r1
   11380:	str	r2, [r0]
   11384:	mov	sp, fp
   11388:	pop	{fp, pc}
   1138c:	andeq	r7, r1, ip, lsl #28
   11390:	push	{fp, lr}
   11394:	mov	fp, sp
   11398:	sub	sp, sp, #24
   1139c:	str	r0, [fp, #-4]
   113a0:	movw	r0, #0
   113a4:	str	r0, [sp, #8]
   113a8:	ldr	r1, [fp, #-4]
   113ac:	movw	r2, #8048	; 0x1f70
   113b0:	add	r1, r1, r2
   113b4:	ldr	r1, [r1]
   113b8:	cmp	r1, r0
   113bc:	bne	113d8 <__assert_fail@plt+0x7a0>
   113c0:	ldr	r0, [fp, #-4]
   113c4:	movw	r1, #8052	; 0x1f74
   113c8:	add	r0, r0, r1
   113cc:	ldr	r0, [r0]
   113d0:	cmp	r0, #0
   113d4:	bne	113dc <__assert_fail@plt+0x7a4>
   113d8:	b	1149c <__assert_fail@plt+0x864>
   113dc:	ldr	r0, [pc, #192]	; 114a4 <__assert_fail@plt+0x86c>
   113e0:	ldr	r0, [pc, r0]
   113e4:	ldr	r1, [fp, #-4]
   113e8:	movw	r2, #8052	; 0x1f74
   113ec:	add	r1, r1, r2
   113f0:	ldr	r1, [r1]
   113f4:	str	r0, [sp, #4]
   113f8:	mov	r0, r1
   113fc:	movw	r1, #4
   11400:	ldr	r2, [sp, #4]
   11404:	blx	r2
   11408:	ldr	r1, [fp, #-4]
   1140c:	movw	r2, #8048	; 0x1f70
   11410:	add	r1, r1, r2
   11414:	str	r0, [r1]
   11418:	movw	r0, #0
   1141c:	str	r0, [sp, #12]
   11420:	ldr	r0, [sp, #12]
   11424:	movw	r1, #503	; 0x1f7
   11428:	cmp	r0, r1
   1142c:	bge	1149c <__assert_fail@plt+0x864>
   11430:	ldr	r0, [fp, #-4]
   11434:	ldr	r1, [sp, #12]
   11438:	add	r0, r0, r1, lsl #4
   1143c:	ldr	r0, [r0]
   11440:	str	r0, [fp, #-8]
   11444:	ldr	r0, [fp, #-8]
   11448:	movw	r1, #0
   1144c:	cmp	r0, r1
   11450:	beq	11488 <__assert_fail@plt+0x850>
   11454:	ldr	r0, [fp, #-8]
   11458:	ldr	r1, [fp, #-4]
   1145c:	movw	r2, #8048	; 0x1f70
   11460:	ldr	r1, [r1, r2]
   11464:	ldr	r2, [sp, #8]
   11468:	add	r3, r2, #1
   1146c:	str	r3, [sp, #8]
   11470:	add	r1, r1, r2, lsl #2
   11474:	str	r0, [r1]
   11478:	ldr	r0, [fp, #-8]
   1147c:	ldr	r0, [r0, #4]
   11480:	str	r0, [fp, #-8]
   11484:	b	11444 <__assert_fail@plt+0x80c>
   11488:	b	1148c <__assert_fail@plt+0x854>
   1148c:	ldr	r0, [sp, #12]
   11490:	add	r0, r0, #1
   11494:	str	r0, [sp, #12]
   11498:	b	11420 <__assert_fail@plt+0x7e8>
   1149c:	mov	sp, fp
   114a0:	pop	{fp, pc}
   114a4:	andeq	r7, r1, r0, lsr sp
   114a8:	push	{fp, lr}
   114ac:	mov	fp, sp
   114b0:	sub	sp, sp, #16
   114b4:	str	r0, [fp, #-4]
   114b8:	str	r1, [sp, #8]
   114bc:	movw	r0, #0
   114c0:	strh	r0, [sp, #6]
   114c4:	ldrsh	r0, [sp, #6]
   114c8:	movw	r1, #503	; 0x1f7
   114cc:	cmp	r0, r1
   114d0:	bge	11514 <__assert_fail@plt+0x8dc>
   114d4:	ldr	r0, [pc, #92]	; 11538 <__assert_fail@plt+0x900>
   114d8:	ldr	r0, [pc, r0]
   114dc:	ldr	r1, [fp, #-4]
   114e0:	ldrsh	r2, [sp, #6]
   114e4:	add	r1, r1, r2, lsl #4
   114e8:	ldr	r2, [sp, #8]
   114ec:	str	r0, [sp]
   114f0:	mov	r0, r1
   114f4:	mov	r1, r2
   114f8:	ldr	r2, [sp]
   114fc:	blx	r2
   11500:	ldrh	r0, [sp, #6]
   11504:	movw	r1, #1
   11508:	add	r0, r0, r1
   1150c:	strh	r0, [sp, #6]
   11510:	b	114c4 <__assert_fail@plt+0x88c>
   11514:	ldr	r0, [fp, #-4]
   11518:	bl	112a8 <__assert_fail@plt+0x670>
   1151c:	ldr	r0, [fp, #-4]
   11520:	movw	lr, #8052	; 0x1f74
   11524:	add	r0, r0, lr
   11528:	movw	lr, #0
   1152c:	str	lr, [r0]
   11530:	mov	sp, fp
   11534:	pop	{fp, pc}
   11538:	andeq	r7, r1, r4, asr #24
   1153c:	push	{fp, lr}
   11540:	mov	fp, sp
   11544:	sub	sp, sp, #16
   11548:	str	r0, [fp, #-4]
   1154c:	str	r1, [sp, #8]
   11550:	ldr	r0, [fp, #-4]
   11554:	ldr	r1, [sp, #8]
   11558:	bl	10aac <calloc@plt>
   1155c:	str	r0, [sp, #4]
   11560:	ldr	r0, [sp, #4]
   11564:	movw	r1, #0
   11568:	cmp	r0, r1
   1156c:	bne	1157c <__assert_fail@plt+0x944>
   11570:	ldr	r0, [pc, #16]	; 11588 <__assert_fail@plt+0x950>
   11574:	add	r0, pc, r0
   11578:	bl	11c1c <error@@Base>
   1157c:	ldr	r0, [sp, #4]
   11580:	mov	sp, fp
   11584:	pop	{fp, pc}
   11588:	andeq	r3, r0, r8, lsl #15
   1158c:	sub	sp, sp, #20
   11590:	str	r0, [sp, #12]
   11594:	str	r1, [sp, #8]
   11598:	movw	r0, #0
   1159c:	str	r0, [sp, #4]
   115a0:	ldr	r0, [sp, #12]
   115a4:	ldr	r1, [sp, #4]
   115a8:	add	r0, r0, r1
   115ac:	ldrb	r0, [r0]
   115b0:	cmp	r0, #0
   115b4:	movw	r0, #0
   115b8:	str	r0, [sp]
   115bc:	beq	115f0 <__assert_fail@plt+0x9b8>
   115c0:	ldr	r0, [sp, #12]
   115c4:	ldr	r1, [sp, #4]
   115c8:	add	r0, r0, r1
   115cc:	ldrb	r0, [r0]
   115d0:	ldr	r1, [sp, #8]
   115d4:	ldr	r2, [sp, #4]
   115d8:	add	r1, r1, r2
   115dc:	ldrb	r1, [r1]
   115e0:	cmp	r0, r1
   115e4:	movw	r0, #0
   115e8:	moveq	r0, #1
   115ec:	str	r0, [sp]
   115f0:	ldr	r0, [sp]
   115f4:	tst	r0, #1
   115f8:	beq	11610 <__assert_fail@plt+0x9d8>
   115fc:	b	11600 <__assert_fail@plt+0x9c8>
   11600:	ldr	r0, [sp, #4]
   11604:	add	r0, r0, #1
   11608:	str	r0, [sp, #4]
   1160c:	b	115a0 <__assert_fail@plt+0x968>
   11610:	ldr	r0, [sp, #12]
   11614:	ldr	r1, [sp, #4]
   11618:	add	r0, r0, r1
   1161c:	ldrb	r0, [r0]
   11620:	cmp	r0, #0
   11624:	bne	11640 <__assert_fail@plt+0xa08>
   11628:	ldr	r0, [sp, #8]
   1162c:	ldr	r1, [sp, #4]
   11630:	add	r0, r0, r1
   11634:	ldrb	r0, [r0]
   11638:	cmp	r0, #0
   1163c:	beq	11680 <__assert_fail@plt+0xa48>
   11640:	ldr	r0, [sp, #12]
   11644:	ldr	r1, [sp, #4]
   11648:	add	r0, r0, r1
   1164c:	ldrb	r0, [r0]
   11650:	ldr	r1, [sp, #8]
   11654:	ldr	r2, [sp, #4]
   11658:	add	r1, r1, r2
   1165c:	ldrb	r1, [r1]
   11660:	cmp	r0, r1
   11664:	movw	r0, #0
   11668:	movlt	r0, #1
   1166c:	tst	r0, #1
   11670:	mvn	r0, #0
   11674:	moveq	r0, #1
   11678:	str	r0, [sp, #16]
   1167c:	b	11688 <__assert_fail@plt+0xa50>
   11680:	movw	r0, #0
   11684:	str	r0, [sp, #16]
   11688:	ldr	r0, [sp, #16]
   1168c:	add	sp, sp, #20
   11690:	bx	lr
   11694:	push	{fp, lr}
   11698:	mov	fp, sp
   1169c:	sub	sp, sp, #24
   116a0:	str	r0, [fp, #-8]
   116a4:	str	r1, [sp, #12]
   116a8:	ldr	r0, [fp, #-8]
   116ac:	movw	r1, #0
   116b0:	cmp	r0, r1
   116b4:	bne	116f8 <__assert_fail@plt+0xac0>
   116b8:	ldr	r0, [sp, #12]
   116bc:	ldrb	r0, [r0]
   116c0:	cmp	r0, #114	; 0x72
   116c4:	bne	116dc <__assert_fail@plt+0xaa4>
   116c8:	ldr	r0, [pc, #148]	; 11764 <__assert_fail@plt+0xb2c>
   116cc:	ldr	r0, [pc, r0]
   116d0:	ldr	r0, [r0]
   116d4:	str	r0, [sp, #4]
   116d8:	b	116ec <__assert_fail@plt+0xab4>
   116dc:	ldr	r0, [pc, #124]	; 11760 <__assert_fail@plt+0xb28>
   116e0:	ldr	r0, [pc, r0]
   116e4:	ldr	r0, [r0]
   116e8:	str	r0, [sp, #4]
   116ec:	ldr	r0, [sp, #4]
   116f0:	str	r0, [fp, #-4]
   116f4:	b	11754 <__assert_fail@plt+0xb1c>
   116f8:	ldr	r0, [fp, #-8]
   116fc:	ldr	r1, [sp, #12]
   11700:	bl	10ad0 <fopen@plt>
   11704:	str	r0, [sp, #8]
   11708:	ldr	r0, [sp, #8]
   1170c:	movw	r1, #0
   11710:	cmp	r0, r1
   11714:	beq	11724 <__assert_fail@plt+0xaec>
   11718:	ldr	r0, [sp, #8]
   1171c:	str	r0, [fp, #-4]
   11720:	b	11754 <__assert_fail@plt+0xb1c>
   11724:	ldr	r0, [sp, #12]
   11728:	ldrb	r0, [r0]
   1172c:	cmp	r0, #119	; 0x77
   11730:	bne	11744 <__assert_fail@plt+0xb0c>
   11734:	ldr	r0, [pc, #48]	; 1176c <__assert_fail@plt+0xb34>
   11738:	add	r0, pc, r0
   1173c:	ldr	r1, [fp, #-8]
   11740:	bl	11c7c <error@@Base+0x60>
   11744:	ldr	r0, [pc, #28]	; 11768 <__assert_fail@plt+0xb30>
   11748:	add	r0, pc, r0
   1174c:	ldr	r1, [fp, #-8]
   11750:	bl	11c7c <error@@Base+0x60>
   11754:	ldr	r0, [fp, #-4]
   11758:	mov	sp, fp
   1175c:	pop	{fp, pc}
   11760:	andeq	r7, r1, ip, lsl sl
   11764:	andeq	r7, r1, r4, lsr #20
   11768:	andeq	r3, r0, r4, ror #11
   1176c:	ldrdeq	r3, [r0], -lr
   11770:	push	{fp, lr}
   11774:	mov	fp, sp
   11778:	sub	sp, sp, #8
   1177c:	ldr	r1, [pc, #64]	; 117c4 <__assert_fail@plt+0xb8c>
   11780:	ldr	r1, [pc, r1]
   11784:	str	r0, [sp, #4]
   11788:	ldr	r0, [sp, #4]
   1178c:	ldr	r1, [r1]
   11790:	cmp	r0, r1
   11794:	beq	117bc <__assert_fail@plt+0xb84>
   11798:	ldr	r0, [pc, #40]	; 117c8 <__assert_fail@plt+0xb90>
   1179c:	ldr	r0, [pc, r0]
   117a0:	ldr	r1, [sp, #4]
   117a4:	ldr	r0, [r0]
   117a8:	cmp	r1, r0
   117ac:	beq	117bc <__assert_fail@plt+0xb84>
   117b0:	ldr	r0, [sp, #4]
   117b4:	bl	10bc0 <fclose@plt>
   117b8:	str	r0, [sp]
   117bc:	mov	sp, fp
   117c0:	pop	{fp, pc}
   117c4:	andeq	r7, r1, r0, ror r9
   117c8:	andeq	r7, r1, r0, ror #18
   117cc:	push	{fp, lr}
   117d0:	mov	fp, sp
   117d4:	sub	sp, sp, #96	; 0x60
   117d8:	str	r0, [fp, #-4]
   117dc:	ldr	r0, [fp, #-4]
   117e0:	mov	r1, sp
   117e4:	bl	14ca0 <error@@Base+0x3084>
   117e8:	cmp	r0, #0
   117ec:	movw	r0, #0
   117f0:	moveq	r0, #1
   117f4:	tst	r0, #1
   117f8:	movw	r0, #1
   117fc:	moveq	r0, #0
   11800:	and	r0, r0, #255	; 0xff
   11804:	mov	sp, fp
   11808:	pop	{fp, pc}
   1180c:	push	{fp, lr}
   11810:	mov	fp, sp
   11814:	sub	sp, sp, #8
   11818:	ldr	r0, [pc, #68]	; 11864 <__assert_fail@plt+0xc2c>
   1181c:	add	r0, pc, r0
   11820:	ldrh	r1, [r0]
   11824:	movw	r2, #1
   11828:	add	r1, r1, r2
   1182c:	strh	r1, [r0]
   11830:	sxth	r0, r1
   11834:	bl	11868 <__assert_fail@plt+0xc30>
   11838:	ldr	r1, [pc, #32]	; 11860 <__assert_fail@plt+0xc28>
   1183c:	ldr	r1, [pc, r1]
   11840:	str	r0, [sp, #4]
   11844:	ldr	r0, [sp, #4]
   11848:	blx	r1
   1184c:	ldr	r1, [sp, #4]
   11850:	str	r0, [sp]
   11854:	mov	r0, r1
   11858:	mov	sp, fp
   1185c:	pop	{fp, pc}
   11860:	andeq	r7, r1, r4, ror r8
   11864:	andeq	r7, r1, ip, lsr #18
   11868:	push	{fp, lr}
   1186c:	mov	fp, sp
   11870:	sub	sp, sp, #128	; 0x80
   11874:	ldr	r1, [pc, #112]	; 118ec <__assert_fail@plt+0xcb4>
   11878:	ldr	r1, [pc, r1]
   1187c:	ldr	r2, [pc, #108]	; 118f0 <__assert_fail@plt+0xcb8>
   11880:	ldr	r2, [pc, r2]
   11884:	add	r3, sp, #26
   11888:	strh	r0, [fp, #-2]
   1188c:	ldr	r2, [r2]
   11890:	str	r3, [sp, #20]
   11894:	str	r2, [sp, #16]
   11898:	blx	r1
   1189c:	ldr	r1, [pc, #68]	; 118e8 <__assert_fail@plt+0xcb0>
   118a0:	add	r1, pc, r1
   118a4:	ldrsh	r2, [fp, #-2]
   118a8:	ldr	r3, [sp, #20]
   118ac:	str	r0, [sp, #12]
   118b0:	mov	r0, r3
   118b4:	ldr	lr, [sp, #16]
   118b8:	str	r2, [sp, #8]
   118bc:	mov	r2, lr
   118c0:	ldr	r3, [sp, #12]
   118c4:	ldr	ip, [sp, #8]
   118c8:	str	ip, [sp]
   118cc:	bl	10be4 <sprintf@plt>
   118d0:	add	r1, sp, #26
   118d4:	str	r0, [sp, #4]
   118d8:	mov	r0, r1
   118dc:	bl	10b0c <strdup@plt>
   118e0:	mov	sp, fp
   118e4:	pop	{fp, pc}
   118e8:			; <UNDEFINED> instruction: 0x000034b5
   118ec:	andeq	r7, r1, ip, ror #16
   118f0:	andeq	r7, r1, ip, asr r8
   118f4:	push	{fp, lr}
   118f8:	mov	fp, sp
   118fc:	sub	sp, sp, #16
   11900:	str	r0, [fp, #-4]
   11904:	movw	r0, #47	; 0x2f
   11908:	strb	r0, [fp, #-5]
   1190c:	ldr	r0, [fp, #-4]
   11910:	bl	10b9c <strlen@plt>
   11914:	sub	r0, r0, #1
   11918:	strh	r0, [sp, #8]
   1191c:	ldrsh	r0, [sp, #8]
   11920:	cmp	r0, #0
   11924:	movw	r0, #0
   11928:	str	r0, [sp, #4]
   1192c:	blt	11954 <__assert_fail@plt+0xd1c>
   11930:	ldr	r0, [fp, #-4]
   11934:	ldrsh	r1, [sp, #8]
   11938:	add	r0, r0, r1
   1193c:	ldrb	r0, [r0]
   11940:	ldrb	r1, [fp, #-5]
   11944:	cmp	r0, r1
   11948:	movw	r0, #0
   1194c:	movne	r0, #1
   11950:	str	r0, [sp, #4]
   11954:	ldr	r0, [sp, #4]
   11958:	tst	r0, #1
   1195c:	beq	11978 <__assert_fail@plt+0xd40>
   11960:	b	11964 <__assert_fail@plt+0xd2c>
   11964:	ldrh	r0, [sp, #8]
   11968:	movw	r1, #65535	; 0xffff
   1196c:	add	r0, r0, r1
   11970:	strh	r0, [sp, #8]
   11974:	b	1191c <__assert_fail@plt+0xce4>
   11978:	ldr	r0, [fp, #-4]
   1197c:	ldrsh	r1, [sp, #8]
   11980:	add	r1, r1, #1
   11984:	add	r0, r0, r1
   11988:	mov	sp, fp
   1198c:	pop	{fp, pc}
   11990:	push	{fp, lr}
   11994:	mov	fp, sp
   11998:	sub	sp, sp, #16
   1199c:	str	r0, [fp, #-4]
   119a0:	str	r1, [sp, #8]
   119a4:	str	r2, [sp, #4]
   119a8:	str	r3, [sp]
   119ac:	ldr	r0, [sp, #8]
   119b0:	ldr	r0, [r0]
   119b4:	bl	118f4 <__assert_fail@plt+0xcbc>
   119b8:	ldr	r1, [pc, #36]	; 119e4 <__assert_fail@plt+0xdac>
   119bc:	ldr	r1, [pc, r1]
   119c0:	str	r0, [r1]
   119c4:	bl	11d5c <error@@Base+0x140>
   119c8:	ldr	r0, [fp, #-4]
   119cc:	ldr	r1, [sp, #8]
   119d0:	ldr	r2, [sp, #4]
   119d4:	ldr	r3, [sp]
   119d8:	bl	119e8 <__assert_fail@plt+0xdb0>
   119dc:	mov	sp, fp
   119e0:	pop	{fp, pc}
   119e4:	andeq	r7, r1, r0, lsr #14
   119e8:	push	{fp, lr}
   119ec:	mov	fp, sp
   119f0:	sub	sp, sp, #48	; 0x30
   119f4:	str	r0, [fp, #-4]
   119f8:	str	r1, [fp, #-8]
   119fc:	str	r2, [fp, #-12]
   11a00:	str	r3, [fp, #-16]
   11a04:	movw	r0, #0
   11a08:	strh	r0, [fp, #-20]	; 0xffffffec
   11a0c:	ldr	r0, [fp, #-4]
   11a10:	ldr	r0, [r0]
   11a14:	cmp	r0, #1
   11a18:	bne	11a38 <__assert_fail@plt+0xe00>
   11a1c:	ldr	r0, [pc, #404]	; 11bb8 <__assert_fail@plt+0xf80>
   11a20:	ldr	r0, [pc, r0]
   11a24:	ldrb	r0, [r0]
   11a28:	cmp	r0, #0
   11a2c:	beq	11a38 <__assert_fail@plt+0xe00>
   11a30:	ldr	r0, [fp, #-12]
   11a34:	bl	11df8 <error@@Base+0x1dc>
   11a38:	movw	r0, #1
   11a3c:	strh	r0, [fp, #-18]	; 0xffffffee
   11a40:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   11a44:	ldr	r1, [fp, #-4]
   11a48:	ldr	r1, [r1]
   11a4c:	cmp	r0, r1
   11a50:	bge	11ba4 <__assert_fail@plt+0xf6c>
   11a54:	ldr	r0, [fp, #-8]
   11a58:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11a5c:	add	r0, r0, r1, lsl #2
   11a60:	ldr	r0, [r0]
   11a64:	ldrb	r0, [r0]
   11a68:	cmp	r0, #45	; 0x2d
   11a6c:	bne	11b6c <__assert_fail@plt+0xf34>
   11a70:	ldr	r0, [fp, #-8]
   11a74:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11a78:	add	r0, r0, r1, lsl #2
   11a7c:	ldr	r0, [r0]
   11a80:	ldrb	r0, [r0, #1]
   11a84:	cmp	r0, #0
   11a88:	beq	11b6c <__assert_fail@plt+0xf34>
   11a8c:	ldr	r0, [pc, #296]	; 11bbc <__assert_fail@plt+0xf84>
   11a90:	add	r0, pc, r0
   11a94:	ldr	r1, [fp, #-8]
   11a98:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11a9c:	ldr	r2, [r1, r2, lsl #2]!
   11aa0:	ldr	r1, [r1]
   11aa4:	str	r0, [sp, #24]
   11aa8:	mov	r0, r1
   11aac:	str	r2, [sp, #20]
   11ab0:	bl	10b9c <strlen@plt>
   11ab4:	ldr	r1, [sp, #24]
   11ab8:	str	r0, [sp, #16]
   11abc:	mov	r0, r1
   11ac0:	ldr	r1, [sp, #20]
   11ac4:	ldr	r2, [sp, #16]
   11ac8:	bl	10c14 <strncmp@plt>
   11acc:	cmp	r0, #0
   11ad0:	bne	11adc <__assert_fail@plt+0xea4>
   11ad4:	ldr	r0, [fp, #-12]
   11ad8:	bl	11df8 <error@@Base+0x1dc>
   11adc:	ldr	r0, [fp, #-8]
   11ae0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11ae4:	add	r0, r0, r1, lsl #2
   11ae8:	ldr	r0, [r0]
   11aec:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11af0:	add	r1, r1, #1
   11af4:	ldr	r2, [fp, #-4]
   11af8:	ldr	r2, [r2]
   11afc:	cmp	r1, r2
   11b00:	str	r0, [sp, #12]
   11b04:	bge	11b24 <__assert_fail@plt+0xeec>
   11b08:	ldr	r0, [fp, #-8]
   11b0c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11b10:	add	r1, r1, #1
   11b14:	add	r0, r0, r1, lsl #2
   11b18:	ldr	r0, [r0]
   11b1c:	str	r0, [sp, #8]
   11b20:	b	11b30 <__assert_fail@plt+0xef8>
   11b24:	movw	r0, #0
   11b28:	str	r0, [sp, #8]
   11b2c:	b	11b30 <__assert_fail@plt+0xef8>
   11b30:	ldr	r0, [sp, #8]
   11b34:	ldr	r2, [fp, #-16]
   11b38:	ldr	r1, [sp, #12]
   11b3c:	str	r0, [sp, #4]
   11b40:	mov	r0, r1
   11b44:	ldr	r1, [sp, #4]
   11b48:	bl	11e84 <error@@Base+0x268>
   11b4c:	sxtb	r0, r0
   11b50:	cmp	r0, #0
   11b54:	beq	11b68 <__assert_fail@plt+0xf30>
   11b58:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11b5c:	movw	r1, #1
   11b60:	add	r0, r0, r1
   11b64:	strh	r0, [fp, #-18]	; 0xffffffee
   11b68:	b	11b8c <__assert_fail@plt+0xf54>
   11b6c:	ldr	r0, [fp, #-8]
   11b70:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11b74:	ldr	r1, [r0, r1, lsl #2]
   11b78:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   11b7c:	add	r3, r2, #1
   11b80:	strh	r3, [fp, #-20]	; 0xffffffec
   11b84:	add	r0, r0, r2, lsl #2
   11b88:	str	r1, [r0]
   11b8c:	b	11b90 <__assert_fail@plt+0xf58>
   11b90:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11b94:	movw	r1, #1
   11b98:	add	r0, r0, r1
   11b9c:	strh	r0, [fp, #-18]	; 0xffffffee
   11ba0:	b	11a40 <__assert_fail@plt+0xe08>
   11ba4:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11ba8:	ldr	r1, [fp, #-4]
   11bac:	str	r0, [r1]
   11bb0:	mov	sp, fp
   11bb4:	pop	{fp, pc}
   11bb8:	andeq	r7, r1, r8, ror r6
   11bbc:	andeq	r3, r0, r2, ror #5
   11bc0:	push	{fp, lr}
   11bc4:	mov	fp, sp
   11bc8:	movw	r0, #0
   11bcc:	bl	11bd0 <__assert_fail@plt+0xf98>
   11bd0:	push	{fp, lr}
   11bd4:	mov	fp, sp
   11bd8:	sub	sp, sp, #8
   11bdc:	ldr	r1, [pc, #48]	; 11c14 <__assert_fail@plt+0xfdc>
   11be0:	ldr	r1, [pc, r1]
   11be4:	str	r0, [sp, #4]
   11be8:	ldr	r0, [r1]
   11bec:	movw	r1, #0
   11bf0:	cmp	r0, r1
   11bf4:	beq	11c08 <__assert_fail@plt+0xfd0>
   11bf8:	ldr	r0, [pc, #24]	; 11c18 <__assert_fail@plt+0xfe0>
   11bfc:	ldr	r0, [pc, r0]
   11c00:	ldr	r0, [r0]
   11c04:	blx	r0
   11c08:	bl	120f8 <error@@Base+0x4dc>
   11c0c:	ldr	r0, [sp, #4]
   11c10:	bl	10b84 <exit@plt>
   11c14:	andeq	r7, r1, r8, lsl #10
   11c18:	andeq	r7, r1, ip, ror #9

00011c1c <error@@Base>:
   11c1c:	push	{fp, lr}
   11c20:	mov	fp, sp
   11c24:	sub	sp, sp, #8
   11c28:	ldr	r1, [pc, #64]	; 11c70 <error@@Base+0x54>
   11c2c:	add	r1, pc, r1
   11c30:	ldr	r2, [pc, #60]	; 11c74 <error@@Base+0x58>
   11c34:	ldr	r2, [pc, r2]
   11c38:	ldr	r3, [pc, #56]	; 11c78 <error@@Base+0x5c>
   11c3c:	ldr	r3, [pc, r3]
   11c40:	str	r0, [sp, #4]
   11c44:	ldr	r0, [r3]
   11c48:	ldr	r2, [r2]
   11c4c:	ldr	r3, [sp, #4]
   11c50:	bl	10ba8 <fprintf@plt>
   11c54:	ldr	r1, [pc, #16]	; 11c6c <error@@Base+0x50>
   11c58:	ldr	r1, [pc, r1]
   11c5c:	ldr	r1, [r1]
   11c60:	str	r0, [sp]
   11c64:	mov	r0, r1
   11c68:	bl	11bd0 <__assert_fail@plt+0xf98>
   11c6c:			; <UNDEFINED> instruction: 0x000174b4
   11c70:	andeq	r3, r0, r4, lsl r1
   11c74:	andeq	r7, r1, r8, lsr #9
   11c78:	andeq	r7, r1, r8, lsl #9
   11c7c:	push	{fp, lr}
   11c80:	mov	fp, sp
   11c84:	sub	sp, sp, #24
   11c88:	ldr	r2, [pc, #88]	; 11ce8 <error@@Base+0xcc>
   11c8c:	add	r2, pc, r2
   11c90:	ldr	r3, [pc, #84]	; 11cec <error@@Base+0xd0>
   11c94:	ldr	r3, [pc, r3]
   11c98:	ldr	ip, [pc, #80]	; 11cf0 <error@@Base+0xd4>
   11c9c:	ldr	ip, [pc, ip]
   11ca0:	str	r0, [fp, #-4]
   11ca4:	str	r1, [fp, #-8]
   11ca8:	ldr	r0, [ip]
   11cac:	ldr	r1, [r3]
   11cb0:	ldr	r3, [fp, #-4]
   11cb4:	ldr	ip, [fp, #-8]
   11cb8:	str	r1, [sp, #12]
   11cbc:	mov	r1, r2
   11cc0:	ldr	r2, [sp, #12]
   11cc4:	str	ip, [sp]
   11cc8:	bl	10ba8 <fprintf@plt>
   11ccc:	ldr	r1, [pc, #16]	; 11ce4 <error@@Base+0xc8>
   11cd0:	ldr	r1, [pc, r1]
   11cd4:	ldr	r1, [r1]
   11cd8:	str	r0, [sp, #8]
   11cdc:	mov	r0, r1
   11ce0:	bl	11bd0 <__assert_fail@plt+0xf98>
   11ce4:	andeq	r7, r1, ip, lsr r4
   11ce8:	strheq	r3, [r0], -ip
   11cec:	andeq	r7, r1, r8, asr #8
   11cf0:	andeq	r7, r1, r8, lsr #8
   11cf4:	push	{fp, lr}
   11cf8:	mov	fp, sp
   11cfc:	sub	sp, sp, #24
   11d00:	ldr	r2, [pc, #72]	; 11d50 <error@@Base+0x134>
   11d04:	add	r2, pc, r2
   11d08:	ldr	r3, [pc, #68]	; 11d54 <error@@Base+0x138>
   11d0c:	ldr	r3, [pc, r3]
   11d10:	ldr	ip, [pc, #64]	; 11d58 <error@@Base+0x13c>
   11d14:	ldr	ip, [pc, ip]
   11d18:	str	r0, [fp, #-4]
   11d1c:	str	r1, [fp, #-8]
   11d20:	ldr	r0, [ip]
   11d24:	ldr	r1, [r3]
   11d28:	ldr	r3, [fp, #-4]
   11d2c:	ldr	ip, [fp, #-8]
   11d30:	str	r1, [sp, #12]
   11d34:	mov	r1, r2
   11d38:	ldr	r2, [sp, #12]
   11d3c:	str	ip, [sp]
   11d40:	bl	10ba8 <fprintf@plt>
   11d44:	str	r0, [sp, #8]
   11d48:	mov	sp, fp
   11d4c:	pop	{fp, pc}
   11d50:	andeq	r3, r0, r4, asr #32
   11d54:	ldrdeq	r7, [r1], -r0
   11d58:			; <UNDEFINED> instruction: 0x000173b0
   11d5c:	push	{fp, lr}
   11d60:	mov	fp, sp
   11d64:	sub	sp, sp, #8
   11d68:	ldr	r0, [pc, #48]	; 11da0 <error@@Base+0x184>
   11d6c:	add	r1, pc, r0
   11d70:	movw	r0, #2
   11d74:	bl	10b6c <__sysv_signal@plt>
   11d78:	ldr	r1, [pc, #28]	; 11d9c <error@@Base+0x180>
   11d7c:	add	r1, pc, r1
   11d80:	movw	lr, #15
   11d84:	str	r0, [sp, #4]
   11d88:	mov	r0, lr
   11d8c:	bl	10b6c <__sysv_signal@plt>
   11d90:	str	r0, [sp]
   11d94:	mov	sp, fp
   11d98:	pop	{fp, pc}
   11d9c:	andeq	r0, r0, r0, lsr #32
   11da0:	andeq	r0, r0, r0, lsr r0
   11da4:	push	{fp, lr}
   11da8:	mov	fp, sp
   11dac:	sub	sp, sp, #8
   11db0:	ldr	r1, [pc, #52]	; 11dec <error@@Base+0x1d0>
   11db4:	add	r1, pc, r1
   11db8:	str	r0, [sp, #4]
   11dbc:	ldrsb	r0, [r1]
   11dc0:	cmp	r0, #0
   11dc4:	beq	11dd0 <error@@Base+0x1b4>
   11dc8:	mov	sp, fp
   11dcc:	pop	{fp, pc}
   11dd0:	ldr	r0, [pc, #24]	; 11df0 <error@@Base+0x1d4>
   11dd4:	add	r0, pc, r0
   11dd8:	ldr	r1, [pc, #20]	; 11df4 <error@@Base+0x1d8>
   11ddc:	add	r1, pc, r1
   11de0:	movw	r2, #1
   11de4:	strb	r2, [r1]
   11de8:	bl	11c1c <error@@Base>
   11dec:	muleq	r1, r6, r3
   11df0:	andeq	r2, r0, pc, lsl #31
   11df4:	andeq	r7, r1, lr, ror #6
   11df8:	push	{fp, lr}
   11dfc:	mov	fp, sp
   11e00:	sub	sp, sp, #16
   11e04:	ldr	r1, [pc, #100]	; 11e70 <error@@Base+0x254>
   11e08:	ldr	r1, [pc, r1]
   11e0c:	str	r0, [fp, #-4]
   11e10:	ldr	r0, [r1]
   11e14:	movw	r1, #0
   11e18:	cmp	r0, r1
   11e1c:	beq	11e34 <error@@Base+0x218>
   11e20:	ldr	r0, [pc, #88]	; 11e80 <error@@Base+0x264>
   11e24:	ldr	r0, [pc, r0]
   11e28:	ldr	r0, [r0]
   11e2c:	blx	r0
   11e30:	b	11e6c <error@@Base+0x250>
   11e34:	ldr	r0, [pc, #56]	; 11e74 <error@@Base+0x258>
   11e38:	add	r1, pc, r0
   11e3c:	ldr	r0, [pc, #52]	; 11e78 <error@@Base+0x25c>
   11e40:	ldr	r0, [pc, r0]
   11e44:	ldr	r2, [pc, #48]	; 11e7c <error@@Base+0x260>
   11e48:	ldr	r2, [pc, r2]
   11e4c:	ldr	r2, [r2]
   11e50:	ldr	r0, [r0]
   11e54:	ldr	r3, [fp, #-4]
   11e58:	str	r0, [sp, #8]
   11e5c:	mov	r0, r2
   11e60:	ldr	r2, [sp, #8]
   11e64:	bl	10ba8 <fprintf@plt>
   11e68:	str	r0, [sp, #4]
   11e6c:	bl	11bc0 <__assert_fail@plt+0xf88>
   11e70:	andeq	r7, r1, r0, lsr #5
   11e74:	andeq	r2, r0, r0, asr #30
   11e78:	muleq	r1, ip, r2
   11e7c:	andeq	r7, r1, ip, ror r2
   11e80:	andeq	r7, r1, r4, lsl #5
   11e84:	push	{fp, lr}
   11e88:	mov	fp, sp
   11e8c:	sub	sp, sp, #32
   11e90:	str	r0, [fp, #-8]
   11e94:	str	r1, [fp, #-12]
   11e98:	str	r2, [sp, #16]
   11e9c:	ldr	r0, [sp, #16]
   11ea0:	movw	r1, #0
   11ea4:	cmp	r0, r1
   11ea8:	bne	11eb0 <error@@Base+0x294>
   11eac:	b	120c4 <error@@Base+0x4a8>
   11eb0:	movw	r0, #0
   11eb4:	strh	r0, [sp, #14]
   11eb8:	ldr	r0, [sp, #16]
   11ebc:	ldrsh	r1, [sp, #14]
   11ec0:	movw	r2, #12
   11ec4:	mul	r1, r1, r2
   11ec8:	add	r0, r0, r1
   11ecc:	ldrb	r0, [r0]
   11ed0:	cmp	r0, #0
   11ed4:	movw	r0, #0
   11ed8:	str	r0, [sp, #8]
   11edc:	beq	11f10 <error@@Base+0x2f4>
   11ee0:	ldr	r0, [fp, #-8]
   11ee4:	ldrb	r0, [r0, #1]
   11ee8:	ldr	r1, [sp, #16]
   11eec:	ldrsh	r2, [sp, #14]
   11ef0:	movw	r3, #12
   11ef4:	mul	r2, r2, r3
   11ef8:	add	r1, r1, r2
   11efc:	ldrb	r1, [r1]
   11f00:	cmp	r0, r1
   11f04:	movw	r0, #0
   11f08:	movne	r0, #1
   11f0c:	str	r0, [sp, #8]
   11f10:	ldr	r0, [sp, #8]
   11f14:	tst	r0, #1
   11f18:	beq	11f34 <error@@Base+0x318>
   11f1c:	b	11f20 <error@@Base+0x304>
   11f20:	ldrh	r0, [sp, #14]
   11f24:	movw	r1, #1
   11f28:	add	r0, r0, r1
   11f2c:	strh	r0, [sp, #14]
   11f30:	b	11eb8 <error@@Base+0x29c>
   11f34:	ldr	r0, [sp, #16]
   11f38:	ldrsh	r1, [sp, #14]
   11f3c:	movw	r2, #12
   11f40:	mul	r1, r1, r2
   11f44:	add	r0, r0, r1
   11f48:	ldrsb	r0, [r0]
   11f4c:	cmp	r0, #0
   11f50:	bne	11f58 <error@@Base+0x33c>
   11f54:	b	120c4 <error@@Base+0x4a8>
   11f58:	ldr	r0, [sp, #16]
   11f5c:	ldrsh	r1, [sp, #14]
   11f60:	movw	r2, #12
   11f64:	mul	r1, r1, r2
   11f68:	add	r0, r0, r1
   11f6c:	ldr	r0, [r0, #4]
   11f70:	movw	r1, #0
   11f74:	cmp	r0, r1
   11f78:	beq	12038 <error@@Base+0x41c>
   11f7c:	ldr	r0, [fp, #-8]
   11f80:	ldrb	r0, [r0, #2]
   11f84:	cmp	r0, #0
   11f88:	bne	11f9c <error@@Base+0x380>
   11f8c:	ldr	r0, [fp, #-12]
   11f90:	movw	r1, #0
   11f94:	cmp	r0, r1
   11f98:	beq	12038 <error@@Base+0x41c>
   11f9c:	ldr	r0, [sp, #16]
   11fa0:	ldrsh	r1, [sp, #14]
   11fa4:	movw	r2, #12
   11fa8:	mul	r1, r1, r2
   11fac:	add	r0, r0, r1
   11fb0:	ldr	r0, [r0, #4]
   11fb4:	ldr	r0, [r0]
   11fb8:	movw	r1, #0
   11fbc:	cmp	r0, r1
   11fc0:	beq	11fc8 <error@@Base+0x3ac>
   11fc4:	b	120d4 <error@@Base+0x4b8>
   11fc8:	ldr	r0, [fp, #-8]
   11fcc:	ldrb	r0, [r0, #2]
   11fd0:	cmp	r0, #0
   11fd4:	beq	11fe8 <error@@Base+0x3cc>
   11fd8:	ldr	r0, [fp, #-8]
   11fdc:	add	r0, r0, #2
   11fe0:	str	r0, [sp, #4]
   11fe4:	b	11ff0 <error@@Base+0x3d4>
   11fe8:	ldr	r0, [fp, #-12]
   11fec:	str	r0, [sp, #4]
   11ff0:	ldr	r0, [sp, #4]
   11ff4:	ldr	r1, [sp, #16]
   11ff8:	ldrsh	r2, [sp, #14]
   11ffc:	movw	r3, #12
   12000:	mul	r2, r2, r3
   12004:	add	r1, r1, r2
   12008:	ldr	r1, [r1, #4]
   1200c:	str	r0, [r1]
   12010:	ldr	r0, [fp, #-8]
   12014:	ldrb	r0, [r0, #2]
   12018:	cmp	r0, #0
   1201c:	movw	r0, #0
   12020:	movne	r0, #1
   12024:	tst	r0, #1
   12028:	movw	r0, #0
   1202c:	moveq	r0, #1
   12030:	strb	r0, [fp, #-1]
   12034:	b	120e4 <error@@Base+0x4c8>
   12038:	ldr	r0, [sp, #16]
   1203c:	ldrsh	r1, [sp, #14]
   12040:	movw	r2, #12
   12044:	mul	r1, r1, r2
   12048:	add	r0, r0, r1
   1204c:	ldr	r0, [r0, #8]
   12050:	movw	r1, #0
   12054:	cmp	r0, r1
   12058:	beq	120c0 <error@@Base+0x4a4>
   1205c:	ldr	r0, [fp, #-8]
   12060:	ldrsb	r0, [r0, #2]
   12064:	cmp	r0, #0
   12068:	bne	120c0 <error@@Base+0x4a4>
   1206c:	ldr	r0, [sp, #16]
   12070:	ldrsh	r1, [sp, #14]
   12074:	movw	r2, #12
   12078:	mul	r1, r1, r2
   1207c:	add	r0, r0, r1
   12080:	ldr	r0, [r0, #8]
   12084:	ldrsb	r0, [r0]
   12088:	cmp	r0, #0
   1208c:	beq	12094 <error@@Base+0x478>
   12090:	b	120d4 <error@@Base+0x4b8>
   12094:	ldr	r0, [sp, #16]
   12098:	ldrsh	r1, [sp, #14]
   1209c:	movw	r2, #12
   120a0:	mul	r1, r1, r2
   120a4:	add	r0, r0, r1
   120a8:	ldr	r0, [r0, #8]
   120ac:	movw	r1, #1
   120b0:	strb	r1, [r0]
   120b4:	movw	r0, #0
   120b8:	strb	r0, [fp, #-1]
   120bc:	b	120e4 <error@@Base+0x4c8>
   120c0:	b	120c4 <error@@Base+0x4a8>
   120c4:	ldr	r0, [pc, #36]	; 120f0 <error@@Base+0x4d4>
   120c8:	add	r0, pc, r0
   120cc:	ldr	r1, [fp, #-8]
   120d0:	bl	11c7c <error@@Base+0x60>
   120d4:	ldr	r0, [pc, #24]	; 120f4 <error@@Base+0x4d8>
   120d8:	add	r0, pc, r0
   120dc:	ldr	r1, [fp, #-8]
   120e0:	bl	11c7c <error@@Base+0x60>
   120e4:	ldrb	r0, [fp, #-1]
   120e8:	mov	sp, fp
   120ec:	pop	{fp, pc}
   120f0:			; <UNDEFINED> instruction: 0x00002cbf
   120f4:			; <UNDEFINED> instruction: 0x00002cbe
   120f8:	push	{fp, lr}
   120fc:	mov	fp, sp
   12100:	sub	sp, sp, #16
   12104:	movw	r0, #1
   12108:	strh	r0, [fp, #-2]
   1210c:	ldr	r0, [pc, #88]	; 1216c <error@@Base+0x550>
   12110:	add	r0, pc, r0
   12114:	ldrsh	r1, [fp, #-2]
   12118:	ldrsh	r0, [r0]
   1211c:	cmp	r1, r0
   12120:	bgt	12164 <error@@Base+0x548>
   12124:	ldrsh	r0, [fp, #-2]
   12128:	bl	11868 <__assert_fail@plt+0xc30>
   1212c:	ldr	lr, [pc, #60]	; 12170 <error@@Base+0x554>
   12130:	ldr	lr, [pc, lr]
   12134:	str	r0, [sp, #8]
   12138:	ldr	r0, [sp, #8]
   1213c:	blx	lr
   12140:	ldr	lr, [sp, #8]
   12144:	str	r0, [sp, #4]
   12148:	mov	r0, lr
   1214c:	bl	10adc <free@plt>
   12150:	ldrh	r0, [fp, #-2]
   12154:	movw	r1, #1
   12158:	add	r0, r0, r1
   1215c:	strh	r0, [fp, #-2]
   12160:	b	1210c <error@@Base+0x4f0>
   12164:	mov	sp, fp
   12168:	pop	{fp, pc}
   1216c:	andeq	r7, r1, r8, lsr r0
   12170:	andeq	r6, r1, r0, lsl #31
   12174:	andeq	r0, r0, r0
   12178:	sub	sp, sp, #12
   1217c:	str	r0, [sp, #8]
   12180:	str	r1, [sp, #4]
   12184:	str	r2, [sp]
   12188:	ldr	r0, [sp, #4]
   1218c:	ldr	r1, [sp, #8]
   12190:	ldr	r2, [r1]
   12194:	add	r0, r2, r0
   12198:	str	r0, [r1]
   1219c:	ldr	r0, [sp]
   121a0:	ldr	r1, [sp, #8]
   121a4:	ldr	r2, [r1, #4]
   121a8:	add	r0, r2, r0
   121ac:	str	r0, [r1, #4]
   121b0:	add	sp, sp, #12
   121b4:	bx	lr
   121b8:	push	{fp, lr}
   121bc:	mov	fp, sp
   121c0:	sub	sp, sp, #32
   121c4:	ldr	ip, [pc, #160]	; 1226c <error@@Base+0x650>
   121c8:	ldr	ip, [pc, ip]
   121cc:	str	r0, [fp, #-4]
   121d0:	str	r1, [fp, #-8]
   121d4:	str	r2, [fp, #-12]
   121d8:	str	r3, [sp, #16]
   121dc:	ldr	r0, [fp, #-4]
   121e0:	ldr	r1, [fp, #-8]
   121e4:	blx	ip
   121e8:	str	r0, [sp, #12]
   121ec:	ldr	r0, [sp, #12]
   121f0:	movw	r1, #0
   121f4:	cmp	r0, r1
   121f8:	bne	12250 <error@@Base+0x634>
   121fc:	ldr	r0, [pc, #112]	; 12274 <error@@Base+0x658>
   12200:	ldr	r0, [pc, r0]
   12204:	movw	r1, #1
   12208:	str	r0, [sp, #8]
   1220c:	mov	r0, r1
   12210:	movw	r1, #20
   12214:	ldr	r2, [sp, #8]
   12218:	blx	r2
   1221c:	str	r0, [sp, #12]
   12220:	ldr	r0, [fp, #-8]
   12224:	bl	10b0c <strdup@plt>
   12228:	ldr	r1, [pc, #64]	; 12270 <error@@Base+0x654>
   1222c:	ldr	r1, [pc, r1]
   12230:	ldr	r2, [sp, #12]
   12234:	str	r0, [r2, #8]
   12238:	ldr	r0, [fp, #-4]
   1223c:	ldr	r2, [sp, #12]
   12240:	str	r1, [sp, #4]
   12244:	mov	r1, r2
   12248:	ldr	r2, [sp, #4]
   1224c:	blx	r2
   12250:	ldr	r0, [sp, #12]
   12254:	add	r0, r0, #12
   12258:	ldr	r1, [fp, #-12]
   1225c:	ldr	r2, [sp, #16]
   12260:	bl	12178 <error@@Base+0x55c>
   12264:	mov	sp, fp
   12268:	pop	{fp, pc}
   1226c:	andeq	r6, r1, ip, lsl #30
   12270:	andeq	r6, r1, r8, ror lr
   12274:	andeq	r6, r1, r0, lsl pc
   12278:	push	{fp, lr}
   1227c:	mov	fp, sp
   12280:	sub	sp, sp, #48	; 0x30
   12284:	ldr	r2, [pc, #512]	; 1248c <error@@Base+0x870>
   12288:	add	r2, pc, r2
   1228c:	ldr	r3, [pc, #508]	; 12490 <error@@Base+0x874>
   12290:	ldr	r3, [pc, r3]
   12294:	str	r0, [fp, #-4]
   12298:	str	r1, [fp, #-8]
   1229c:	ldr	r0, [fp, #-8]
   122a0:	mov	r1, r2
   122a4:	blx	r3
   122a8:	str	r0, [fp, #-12]
   122ac:	ldr	r0, [fp, #-12]
   122b0:	bl	124b4 <error@@Base+0x898>
   122b4:	and	r0, r0, #255	; 0xff
   122b8:	cmp	r0, #0
   122bc:	beq	12418 <error@@Base+0x7fc>
   122c0:	ldr	r0, [pc, #460]	; 12494 <error@@Base+0x878>
   122c4:	add	r0, pc, r0
   122c8:	ldr	r1, [pc, #456]	; 12498 <error@@Base+0x87c>
   122cc:	add	r1, pc, r1
   122d0:	movw	r2, #45	; 0x2d
   122d4:	bl	10c14 <strncmp@plt>
   122d8:	cmp	r0, #0
   122dc:	bne	12418 <error@@Base+0x7fc>
   122e0:	ldr	r0, [fp, #-12]
   122e4:	bl	124b4 <error@@Base+0x898>
   122e8:	and	r0, r0, #255	; 0xff
   122ec:	cmp	r0, #0
   122f0:	beq	12418 <error@@Base+0x7fc>
   122f4:	ldr	r0, [pc, #432]	; 124ac <error@@Base+0x890>
   122f8:	add	r0, pc, r0
   122fc:	ldr	r1, [pc, #428]	; 124b0 <error@@Base+0x894>
   12300:	add	r1, pc, r1
   12304:	bl	10ab8 <strcmp@plt>
   12308:	cmp	r0, #0
   1230c:	bne	12418 <error@@Base+0x7fc>
   12310:	ldr	r0, [fp, #-12]
   12314:	sub	r1, fp, #16
   12318:	bl	12508 <error@@Base+0x8ec>
   1231c:	and	r0, r0, #255	; 0xff
   12320:	cmp	r0, #0
   12324:	beq	12418 <error@@Base+0x7fc>
   12328:	ldr	r0, [fp, #-12]
   1232c:	sub	r1, fp, #20
   12330:	bl	12508 <error@@Base+0x8ec>
   12334:	and	r0, r0, #255	; 0xff
   12338:	cmp	r0, #0
   1233c:	beq	12418 <error@@Base+0x7fc>
   12340:	ldr	r0, [fp, #-12]
   12344:	bl	124b4 <error@@Base+0x898>
   12348:	and	r0, r0, #255	; 0xff
   1234c:	cmp	r0, #0
   12350:	beq	12418 <error@@Base+0x7fc>
   12354:	ldr	r0, [fp, #-12]
   12358:	bl	124b4 <error@@Base+0x898>
   1235c:	and	r0, r0, #255	; 0xff
   12360:	cmp	r0, #0
   12364:	beq	12418 <error@@Base+0x7fc>
   12368:	ldr	r0, [fp, #-4]
   1236c:	ldr	r1, [fp, #-16]
   12370:	ldr	r2, [fp, #-20]	; 0xffffffec
   12374:	bl	12178 <error@@Base+0x55c>
   12378:	ldr	r0, [fp, #-12]
   1237c:	ldr	r1, [fp, #-4]
   12380:	add	r1, r1, #8
   12384:	bl	12584 <error@@Base+0x968>
   12388:	str	r0, [sp, #24]
   1238c:	ldr	r0, [fp, #-12]
   12390:	ldr	r1, [fp, #-4]
   12394:	add	r1, r1, #416	; 0x1a0
   12398:	bl	12584 <error@@Base+0x968>
   1239c:	str	r0, [sp, #20]
   123a0:	ldr	r0, [fp, #-12]
   123a4:	ldr	r1, [fp, #-4]
   123a8:	add	r1, r1, #824	; 0x338
   123ac:	bl	12584 <error@@Base+0x968>
   123b0:	ldr	r1, [fp, #-16]
   123b4:	cmp	r1, #0
   123b8:	str	r0, [sp, #16]
   123bc:	ble	12414 <error@@Base+0x7f8>
   123c0:	ldr	r0, [fp, #-12]
   123c4:	ldr	r1, [fp, #-4]
   123c8:	add	r1, r1, #920	; 0x398
   123cc:	bl	12584 <error@@Base+0x968>
   123d0:	ldr	r1, [sp, #24]
   123d4:	cmp	r1, #0
   123d8:	str	r0, [sp, #12]
   123dc:	ble	123f0 <error@@Base+0x7d4>
   123e0:	ldr	r0, [fp, #-12]
   123e4:	ldr	r1, [fp, #-4]
   123e8:	add	r1, r1, #992	; 0x3e0
   123ec:	bl	12678 <error@@Base+0xa5c>
   123f0:	ldr	r0, [sp, #20]
   123f4:	cmp	r0, #0
   123f8:	ble	12410 <error@@Base+0x7f4>
   123fc:	ldr	r0, [fp, #-12]
   12400:	ldr	r1, [fp, #-4]
   12404:	movw	r2, #9048	; 0x2358
   12408:	add	r1, r1, r2
   1240c:	bl	12678 <error@@Base+0xa5c>
   12410:	b	12414 <error@@Base+0x7f8>
   12414:	b	12468 <error@@Base+0x84c>
   12418:	ldr	r0, [fp, #-8]
   1241c:	movw	r1, #0
   12420:	cmp	r0, r1
   12424:	beq	12434 <error@@Base+0x818>
   12428:	ldr	r0, [fp, #-8]
   1242c:	str	r0, [sp, #8]
   12430:	b	12444 <error@@Base+0x828>
   12434:	ldr	r0, [pc, #96]	; 1249c <error@@Base+0x880>
   12438:	add	r0, pc, r0
   1243c:	str	r0, [sp, #8]
   12440:	b	12444 <error@@Base+0x828>
   12444:	ldr	r0, [sp, #8]
   12448:	ldr	r1, [pc, #80]	; 124a0 <error@@Base+0x884>
   1244c:	add	r1, pc, r1
   12450:	ldr	r2, [pc, #76]	; 124a4 <error@@Base+0x888>
   12454:	ldr	r2, [pc, r2]
   12458:	str	r0, [sp, #4]
   1245c:	mov	r0, r1
   12460:	ldr	r1, [sp, #4]
   12464:	blx	r2
   12468:	ldr	r0, [pc, #56]	; 124a8 <error@@Base+0x88c>
   1246c:	ldr	r0, [pc, r0]
   12470:	ldr	r1, [fp, #-12]
   12474:	str	r0, [sp]
   12478:	mov	r0, r1
   1247c:	ldr	r1, [sp]
   12480:	blx	r1
   12484:	mov	sp, fp
   12488:	pop	{fp, pc}
   1248c:	strdeq	r6, [r0], -r5
   12490:	andeq	r6, r1, ip, lsl lr
   12494:	andeq	r6, r1, r7, lsl #29
   12498:	ldrdeq	r2, [r0], -fp
   1249c:			; <UNDEFINED> instruction: 0x000029b1
   124a0:	andeq	r2, r0, fp, lsl #19
   124a4:	andeq	r6, r1, r4, asr #25
   124a8:	andeq	r6, r1, r0, lsr #24
   124ac:	andeq	r6, r1, r3, asr lr
   124b0:	andeq	r6, r0, r7, lsr r0
   124b4:	push	{fp, lr}
   124b8:	mov	fp, sp
   124bc:	sub	sp, sp, #8
   124c0:	ldr	r1, [pc, #60]	; 12504 <error@@Base+0x8e8>
   124c4:	add	r1, pc, r1
   124c8:	str	r0, [sp, #4]
   124cc:	ldr	r2, [sp, #4]
   124d0:	mov	r0, r1
   124d4:	movw	r1, #99	; 0x63
   124d8:	bl	10af4 <fgets@plt>
   124dc:	movw	r1, #0
   124e0:	cmp	r0, r1
   124e4:	movw	r0, #0
   124e8:	movne	r0, #1
   124ec:	tst	r0, #1
   124f0:	movw	r0, #1
   124f4:	moveq	r0, #0
   124f8:	and	r0, r0, #255	; 0xff
   124fc:	mov	sp, fp
   12500:	pop	{fp, pc}
   12504:	andeq	r6, r1, r7, lsl #25
   12508:	push	{fp, lr}
   1250c:	mov	fp, sp
   12510:	sub	sp, sp, #16
   12514:	str	r0, [fp, #-4]
   12518:	str	r1, [sp, #8]
   1251c:	ldr	r0, [fp, #-4]
   12520:	bl	124b4 <error@@Base+0x898>
   12524:	and	r0, r0, #255	; 0xff
   12528:	cmp	r0, #0
   1252c:	movw	r0, #0
   12530:	str	r0, [sp, #4]
   12534:	beq	12560 <error@@Base+0x944>
   12538:	ldr	r0, [pc, #60]	; 1257c <error@@Base+0x960>
   1253c:	add	r0, pc, r0
   12540:	ldr	r1, [pc, #56]	; 12580 <error@@Base+0x964>
   12544:	add	r1, pc, r1
   12548:	ldr	r2, [sp, #8]
   1254c:	bl	10bb4 <__isoc99_sscanf@plt>
   12550:	cmp	r0, #1
   12554:	movw	r0, #0
   12558:	moveq	r0, #1
   1255c:	str	r0, [sp, #4]
   12560:	ldr	r0, [sp, #4]
   12564:	tst	r0, #1
   12568:	movw	r0, #1
   1256c:	moveq	r0, #0
   12570:	and	r0, r0, #255	; 0xff
   12574:	mov	sp, fp
   12578:	pop	{fp, pc}
   1257c:	andeq	r6, r1, pc, lsl #24
   12580:	andeq	r2, r0, r8, lsl r9
   12584:	push	{fp, lr}
   12588:	mov	fp, sp
   1258c:	sub	sp, sp, #24
   12590:	str	r0, [fp, #-4]
   12594:	str	r1, [fp, #-8]
   12598:	movw	r0, #0
   1259c:	str	r0, [sp]
   125a0:	ldr	r0, [fp, #-4]
   125a4:	bl	124b4 <error@@Base+0x898>
   125a8:	and	r0, r0, #255	; 0xff
   125ac:	cmp	r0, #0
   125b0:	beq	12660 <error@@Base+0xa44>
   125b4:	ldr	r0, [fp, #-4]
   125b8:	bl	124b4 <error@@Base+0x898>
   125bc:	and	r0, r0, #255	; 0xff
   125c0:	cmp	r0, #0
   125c4:	beq	12660 <error@@Base+0xa44>
   125c8:	b	125cc <error@@Base+0x9b0>
   125cc:	ldr	r0, [fp, #-4]
   125d0:	add	r1, sp, #12
   125d4:	add	r2, sp, #8
   125d8:	bl	12d30 <error@@Base+0x1114>
   125dc:	sxtb	r0, r0
   125e0:	cmp	r0, #0
   125e4:	beq	1265c <error@@Base+0xa40>
   125e8:	ldr	r0, [pc, #124]	; 1266c <error@@Base+0xa50>
   125ec:	add	r0, pc, r0
   125f0:	add	r0, r0, #29
   125f4:	bl	10bf0 <atoi@plt>
   125f8:	str	r0, [sp, #4]
   125fc:	ldr	r0, [sp, #4]
   12600:	cmp	r0, #0
   12604:	bne	12640 <error@@Base+0xa24>
   12608:	ldr	r0, [pc, #96]	; 12670 <error@@Base+0xa54>
   1260c:	add	r0, pc, r0
   12610:	add	r0, r0, #29
   12614:	ldr	r1, [pc, #88]	; 12674 <error@@Base+0xa58>
   12618:	add	r1, pc, r1
   1261c:	bl	10ab8 <strcmp@plt>
   12620:	cmp	r0, #0
   12624:	bne	12634 <error@@Base+0xa18>
   12628:	ldr	r0, [sp, #12]
   1262c:	str	r0, [sp]
   12630:	b	1263c <error@@Base+0xa20>
   12634:	movw	r0, #11
   12638:	str	r0, [sp, #4]
   1263c:	b	12640 <error@@Base+0xa24>
   12640:	ldr	r0, [fp, #-8]
   12644:	ldr	r1, [sp, #4]
   12648:	add	r0, r0, r1, lsl #3
   1264c:	ldr	r1, [sp, #12]
   12650:	ldr	r2, [sp, #8]
   12654:	bl	12178 <error@@Base+0x55c>
   12658:	b	125cc <error@@Base+0x9b0>
   1265c:	b	12660 <error@@Base+0xa44>
   12660:	ldr	r0, [sp]
   12664:	mov	sp, fp
   12668:	pop	{fp, pc}
   1266c:	andeq	r6, r1, pc, asr fp
   12670:	andeq	r6, r1, pc, lsr fp
   12674:	andeq	r2, r0, r8, lsr r8
   12678:	push	{fp, lr}
   1267c:	mov	fp, sp
   12680:	sub	sp, sp, #24
   12684:	str	r0, [fp, #-4]
   12688:	str	r1, [fp, #-8]
   1268c:	ldr	r0, [fp, #-4]
   12690:	bl	124b4 <error@@Base+0x898>
   12694:	and	r0, r0, #255	; 0xff
   12698:	cmp	r0, #0
   1269c:	beq	12728 <error@@Base+0xb0c>
   126a0:	ldr	r0, [fp, #-4]
   126a4:	bl	124b4 <error@@Base+0x898>
   126a8:	and	r0, r0, #255	; 0xff
   126ac:	cmp	r0, #0
   126b0:	beq	12728 <error@@Base+0xb0c>
   126b4:	b	126b8 <error@@Base+0xa9c>
   126b8:	ldr	r0, [fp, #-4]
   126bc:	add	r1, sp, #12
   126c0:	add	r2, sp, #8
   126c4:	bl	12d30 <error@@Base+0x1114>
   126c8:	sxtb	r0, r0
   126cc:	cmp	r0, #0
   126d0:	beq	12724 <error@@Base+0xb08>
   126d4:	ldr	r0, [pc, #84]	; 12730 <error@@Base+0xb14>
   126d8:	add	r0, pc, r0
   126dc:	add	r1, r0, #29
   126e0:	ldr	r2, [pc, #76]	; 12734 <error@@Base+0xb18>
   126e4:	add	r2, pc, r2
   126e8:	str	r0, [sp, #4]
   126ec:	mov	r0, r2
   126f0:	str	r1, [sp]
   126f4:	bl	10b9c <strlen@plt>
   126f8:	sub	r0, r0, #1
   126fc:	ldr	r1, [sp, #4]
   12700:	add	r0, r1, r0
   12704:	movw	r2, #0
   12708:	strb	r2, [r0]
   1270c:	ldr	r0, [fp, #-8]
   12710:	ldr	r2, [sp, #12]
   12714:	ldr	r3, [sp, #8]
   12718:	ldr	r1, [sp]
   1271c:	bl	121b8 <error@@Base+0x59c>
   12720:	b	126b8 <error@@Base+0xa9c>
   12724:	b	12728 <error@@Base+0xb0c>
   12728:	mov	sp, fp
   1272c:	pop	{fp, pc}
   12730:	andeq	r6, r1, r3, ror sl
   12734:	andeq	r6, r1, r7, ror #20
   12738:	push	{fp, lr}
   1273c:	mov	fp, sp
   12740:	sub	sp, sp, #40	; 0x28
   12744:	ldr	r2, [pc, #532]	; 12960 <error@@Base+0xd44>
   12748:	add	r2, pc, r2
   1274c:	ldr	r3, [pc, #528]	; 12964 <error@@Base+0xd48>
   12750:	ldr	r3, [pc, r3]
   12754:	str	r0, [fp, #-4]
   12758:	str	r1, [fp, #-8]
   1275c:	ldr	r0, [fp, #-8]
   12760:	mov	r1, r2
   12764:	blx	r3
   12768:	ldr	r1, [pc, #484]	; 12954 <error@@Base+0xd38>
   1276c:	add	r1, pc, r1
   12770:	ldr	r2, [pc, #480]	; 12958 <error@@Base+0xd3c>
   12774:	add	r2, pc, r2
   12778:	ldr	r3, [pc, #476]	; 1295c <error@@Base+0xd40>
   1277c:	add	r3, pc, r3
   12780:	str	r0, [fp, #-12]
   12784:	ldr	r0, [fp, #-12]
   12788:	bl	10ba8 <fprintf@plt>
   1278c:	ldr	r1, [pc, #444]	; 12950 <error@@Base+0xd34>
   12790:	add	r1, pc, r1
   12794:	ldr	r2, [fp, #-12]
   12798:	ldr	r3, [fp, #-4]
   1279c:	ldr	r3, [r3]
   127a0:	str	r0, [fp, #-16]
   127a4:	mov	r0, r2
   127a8:	mov	r2, r3
   127ac:	bl	10ba8 <fprintf@plt>
   127b0:	ldr	r1, [pc, #404]	; 1294c <error@@Base+0xd30>
   127b4:	add	r1, pc, r1
   127b8:	ldr	r2, [fp, #-12]
   127bc:	ldr	r3, [fp, #-4]
   127c0:	ldr	r3, [r3, #4]
   127c4:	str	r0, [sp, #20]
   127c8:	mov	r0, r2
   127cc:	mov	r2, r3
   127d0:	bl	10ba8 <fprintf@plt>
   127d4:	ldr	r1, [fp, #-12]
   127d8:	ldr	r2, [fp, #-4]
   127dc:	str	r0, [sp, #16]
   127e0:	mov	r0, r1
   127e4:	mov	r1, r2
   127e8:	bl	12978 <error@@Base+0xd5c>
   127ec:	ldr	r0, [pc, #340]	; 12948 <error@@Base+0xd2c>
   127f0:	add	r0, pc, r0
   127f4:	ldr	r1, [fp, #-12]
   127f8:	bl	10c08 <fputs@plt>
   127fc:	ldr	r1, [pc, #320]	; 12944 <error@@Base+0xd28>
   12800:	add	r3, pc, r1
   12804:	ldr	r1, [fp, #-12]
   12808:	ldr	r2, [fp, #-4]
   1280c:	add	r2, r2, #8
   12810:	str	r0, [sp, #12]
   12814:	mov	r0, r1
   12818:	mov	r1, r2
   1281c:	movw	r2, #50	; 0x32
   12820:	movw	lr, #0
   12824:	str	lr, [sp]
   12828:	movw	lr, #1
   1282c:	str	lr, [sp, #4]
   12830:	bl	12a20 <error@@Base+0xe04>
   12834:	ldr	r0, [pc, #260]	; 12940 <error@@Base+0xd24>
   12838:	add	r3, pc, r0
   1283c:	ldr	r0, [fp, #-12]
   12840:	ldr	r1, [fp, #-4]
   12844:	add	r1, r1, #416	; 0x1a0
   12848:	movw	r2, #50	; 0x32
   1284c:	movw	lr, #0
   12850:	str	lr, [sp]
   12854:	movw	lr, #1
   12858:	str	lr, [sp, #4]
   1285c:	bl	12a20 <error@@Base+0xe04>
   12860:	ldr	r0, [pc, #212]	; 1293c <error@@Base+0xd20>
   12864:	add	r3, pc, r0
   12868:	ldr	r0, [fp, #-12]
   1286c:	ldr	r1, [fp, #-4]
   12870:	add	r1, r1, #824	; 0x338
   12874:	movw	r2, #10
   12878:	movw	lr, #1
   1287c:	str	lr, [sp]
   12880:	str	lr, [sp, #4]
   12884:	bl	12a20 <error@@Base+0xe04>
   12888:	ldr	r0, [fp, #-4]
   1288c:	ldr	r0, [r0]
   12890:	cmp	r0, #0
   12894:	ble	12918 <error@@Base+0xcfc>
   12898:	ldr	r0, [pc, #200]	; 12968 <error@@Base+0xd4c>
   1289c:	add	r3, pc, r0
   128a0:	ldr	r0, [fp, #-12]
   128a4:	ldr	r1, [fp, #-4]
   128a8:	add	r1, r1, #920	; 0x398
   128ac:	movw	r2, #8
   128b0:	movw	ip, #0
   128b4:	str	ip, [sp]
   128b8:	str	ip, [sp, #4]
   128bc:	bl	12a20 <error@@Base+0xe04>
   128c0:	ldr	r0, [fp, #-4]
   128c4:	ldr	r0, [r0, #8]
   128c8:	cmp	r0, #0
   128cc:	ble	128e8 <error@@Base+0xccc>
   128d0:	ldr	r0, [pc, #148]	; 1296c <error@@Base+0xd50>
   128d4:	add	r2, pc, r0
   128d8:	ldr	r0, [fp, #-12]
   128dc:	ldr	r1, [fp, #-4]
   128e0:	add	r1, r1, #992	; 0x3e0
   128e4:	bl	12bd4 <error@@Base+0xfb8>
   128e8:	ldr	r0, [fp, #-4]
   128ec:	ldr	r0, [r0, #416]	; 0x1a0
   128f0:	cmp	r0, #0
   128f4:	ble	12914 <error@@Base+0xcf8>
   128f8:	ldr	r0, [pc, #112]	; 12970 <error@@Base+0xd54>
   128fc:	add	r2, pc, r0
   12900:	ldr	r0, [fp, #-12]
   12904:	ldr	r1, [fp, #-4]
   12908:	movw	r3, #9048	; 0x2358
   1290c:	add	r1, r1, r3
   12910:	bl	12bd4 <error@@Base+0xfb8>
   12914:	b	12918 <error@@Base+0xcfc>
   12918:	ldr	r0, [pc, #84]	; 12974 <error@@Base+0xd58>
   1291c:	ldr	r0, [pc, r0]
   12920:	ldr	r1, [fp, #-12]
   12924:	str	r0, [sp, #8]
   12928:	mov	r0, r1
   1292c:	ldr	r1, [sp, #8]
   12930:	blx	r1
   12934:	mov	sp, fp
   12938:	pop	{fp, pc}
   1293c:	andeq	r2, r0, sp, asr #11
   12940:	andeq	r2, r0, r2, lsl #12
   12944:	andeq	r2, r0, r7, lsr #12
   12948:	andeq	r2, r0, sl, lsr #12
   1294c:	andeq	r2, r0, r0, asr r6
   12950:	andeq	r2, r0, r6, ror #12
   12954:	andeq	r2, r0, r5, lsl #13
   12958:	andeq	r2, r0, r3, lsr r6
   1295c:			; <UNDEFINED> instruction: 0x00005bbb
   12960:	andeq	r2, r0, r7, lsr #13
   12964:	andeq	r6, r1, ip, asr r9
   12968:	andeq	r2, r0, ip, lsr #11
   1296c:	andeq	r2, r0, r3, asr r5
   12970:	andeq	r2, r0, lr, lsr r5
   12974:	andeq	r6, r1, r0, ror r7
   12978:	push	{fp, lr}
   1297c:	mov	fp, sp
   12980:	sub	sp, sp, #16
   12984:	str	r0, [fp, #-4]
   12988:	str	r1, [sp, #8]
   1298c:	ldr	r0, [sp, #8]
   12990:	ldr	r0, [r0]
   12994:	cmp	r0, #0
   12998:	bne	129b4 <error@@Base+0xd98>
   1299c:	ldr	r0, [pc, #120]	; 12a1c <error@@Base+0xe00>
   129a0:	add	r0, pc, r0
   129a4:	ldr	r1, [fp, #-4]
   129a8:	bl	10c08 <fputs@plt>
   129ac:	str	r0, [sp, #4]
   129b0:	b	12a04 <error@@Base+0xde8>
   129b4:	ldr	r0, [pc, #92]	; 12a18 <error@@Base+0xdfc>
   129b8:	add	r1, pc, r0
   129bc:	vldr	d16, [pc, #76]	; 12a10 <error@@Base+0xdf4>
   129c0:	ldr	r0, [fp, #-4]
   129c4:	ldr	r2, [sp, #8]
   129c8:	ldr	r2, [r2]
   129cc:	ldr	r3, [sp, #8]
   129d0:	ldr	r3, [r3, #4]
   129d4:	sub	r2, r2, r3
   129d8:	vmov	s0, r2
   129dc:	vcvt.f64.s32	d17, s0
   129e0:	vmul.f64	d16, d16, d17
   129e4:	ldr	r2, [sp, #8]
   129e8:	ldr	r2, [r2]
   129ec:	vmov	s0, r2
   129f0:	vcvt.f64.s32	d17, s0
   129f4:	vdiv.f64	d16, d16, d17
   129f8:	vmov	r2, r3, d16
   129fc:	bl	10ba8 <fprintf@plt>
   12a00:	str	r0, [sp]
   12a04:	mov	sp, fp
   12a08:	pop	{fp, pc}
   12a0c:	nop	{0}
   12a10:	andeq	r0, r0, r0
   12a14:	subsmi	r0, r9, r0
   12a18:			; <UNDEFINED> instruction: 0x000024b1
   12a1c:	andeq	r2, r0, r0, asr #9
   12a20:	push	{r4, sl, fp, lr}
   12a24:	add	fp, sp, #8
   12a28:	sub	sp, sp, #40	; 0x28
   12a2c:	ldr	ip, [fp, #12]
   12a30:	ldr	lr, [fp, #8]
   12a34:	ldr	r4, [pc, #392]	; 12bc4 <error@@Base+0xfa8>
   12a38:	add	r4, pc, r4
   12a3c:	str	r0, [fp, #-12]
   12a40:	str	r1, [fp, #-16]
   12a44:	strh	r2, [fp, #-18]	; 0xffffffee
   12a48:	str	r3, [sp, #24]
   12a4c:	strb	lr, [sp, #23]
   12a50:	strb	ip, [sp, #22]
   12a54:	ldr	r0, [fp, #-12]
   12a58:	ldr	r2, [sp, #24]
   12a5c:	mov	r1, r4
   12a60:	bl	10ba8 <fprintf@plt>
   12a64:	ldr	r1, [fp, #-12]
   12a68:	str	r0, [sp, #16]
   12a6c:	mov	r0, r1
   12a70:	movw	r1, #0
   12a74:	bl	12db4 <error@@Base+0x1198>
   12a78:	ldr	r0, [pc, #312]	; 12bb8 <error@@Base+0xf9c>
   12a7c:	add	r1, pc, r0
   12a80:	ldr	r0, [pc, #308]	; 12bbc <error@@Base+0xfa0>
   12a84:	add	r0, pc, r0
   12a88:	ldr	r2, [pc, #304]	; 12bc0 <error@@Base+0xfa4>
   12a8c:	add	r2, pc, r2
   12a90:	ldr	r3, [fp, #-12]
   12a94:	ldrb	ip, [sp, #23]
   12a98:	cmp	ip, #0
   12a9c:	movw	ip, #0
   12aa0:	movne	ip, #1
   12aa4:	tst	ip, #1
   12aa8:	movne	r2, r0
   12aac:	mov	r0, r3
   12ab0:	bl	10ba8 <fprintf@plt>
   12ab4:	movw	r1, #1
   12ab8:	strh	r1, [sp, #20]
   12abc:	str	r0, [sp, #12]
   12ac0:	ldrsh	r0, [sp, #20]
   12ac4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   12ac8:	cmp	r0, r1
   12acc:	bgt	12b2c <error@@Base+0xf10>
   12ad0:	ldr	r0, [fp, #-16]
   12ad4:	ldrsh	r1, [sp, #20]
   12ad8:	add	r0, r0, r1, lsl #3
   12adc:	ldr	r0, [r0]
   12ae0:	cmp	r0, #0
   12ae4:	ble	12b14 <error@@Base+0xef8>
   12ae8:	ldr	r0, [fp, #-12]
   12aec:	ldr	r1, [fp, #-16]
   12af0:	ldrsh	r2, [sp, #20]
   12af4:	add	r1, r1, r2, lsl #3
   12af8:	bl	12db4 <error@@Base+0x1198>
   12afc:	ldr	r0, [pc, #204]	; 12bd0 <error@@Base+0xfb4>
   12b00:	add	r1, pc, r0
   12b04:	ldr	r0, [fp, #-12]
   12b08:	ldrsh	r2, [sp, #20]
   12b0c:	bl	10ba8 <fprintf@plt>
   12b10:	str	r0, [sp, #8]
   12b14:	b	12b18 <error@@Base+0xefc>
   12b18:	ldrh	r0, [sp, #20]
   12b1c:	movw	r1, #1
   12b20:	add	r0, r0, r1
   12b24:	strh	r0, [sp, #20]
   12b28:	b	12ac0 <error@@Base+0xea4>
   12b2c:	ldrb	r0, [sp, #23]
   12b30:	cmp	r0, #0
   12b34:	beq	12b84 <error@@Base+0xf68>
   12b38:	ldr	r0, [fp, #-16]
   12b3c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   12b40:	add	r1, r1, #1
   12b44:	add	r0, r0, r1, lsl #3
   12b48:	ldr	r0, [r0]
   12b4c:	cmp	r0, #0
   12b50:	ble	12b84 <error@@Base+0xf68>
   12b54:	ldr	r0, [fp, #-12]
   12b58:	ldr	r1, [fp, #-16]
   12b5c:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12b60:	add	r2, r2, #1
   12b64:	add	r1, r1, r2, lsl #3
   12b68:	bl	12db4 <error@@Base+0x1198>
   12b6c:	ldr	r0, [pc, #84]	; 12bc8 <error@@Base+0xfac>
   12b70:	add	r1, pc, r0
   12b74:	ldr	r0, [fp, #-12]
   12b78:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12b7c:	bl	10ba8 <fprintf@plt>
   12b80:	str	r0, [sp, #4]
   12b84:	ldrsb	r0, [sp, #22]
   12b88:	cmp	r0, #0
   12b8c:	beq	12bb0 <error@@Base+0xf94>
   12b90:	ldr	r0, [fp, #-12]
   12b94:	ldr	r1, [fp, #-16]
   12b98:	bl	12db4 <error@@Base+0x1198>
   12b9c:	ldr	r0, [pc, #40]	; 12bcc <error@@Base+0xfb0>
   12ba0:	add	r0, pc, r0
   12ba4:	ldr	r1, [fp, #-12]
   12ba8:	bl	10c08 <fputs@plt>
   12bac:	str	r0, [sp]
   12bb0:	sub	sp, fp, #8
   12bb4:	pop	{r4, sl, fp, pc}
   12bb8:	strdeq	r2, [r0], -r4
   12bbc:	strdeq	r2, [r0], -r0
   12bc0:	andeq	r2, r0, pc, ror #7
   12bc4:	andeq	r2, r0, r7, lsr r4
   12bc8:	andeq	r2, r0, fp, lsl r3
   12bcc:			; <UNDEFINED> instruction: 0x000022b0
   12bd0:	andeq	r2, r0, r2, lsl #7
   12bd4:	push	{fp, lr}
   12bd8:	mov	fp, sp
   12bdc:	sub	sp, sp, #48	; 0x30
   12be0:	ldr	r3, [pc, #320]	; 12d28 <error@@Base+0x110c>
   12be4:	ldr	r3, [pc, r3]
   12be8:	str	r0, [fp, #-4]
   12bec:	str	r1, [fp, #-8]
   12bf0:	str	r2, [fp, #-12]
   12bf4:	ldr	r0, [fp, #-8]
   12bf8:	blx	r3
   12bfc:	ldr	r0, [pc, #284]	; 12d20 <error@@Base+0x1104>
   12c00:	add	r0, pc, r0
   12c04:	ldr	r1, [pc, #280]	; 12d24 <error@@Base+0x1108>
   12c08:	ldr	r1, [pc, r1]
   12c0c:	ldr	r2, [fp, #-8]
   12c10:	movw	r3, #8052	; 0x1f74
   12c14:	add	r2, r2, r3
   12c18:	ldr	r2, [r2]
   12c1c:	ldr	r3, [fp, #-8]
   12c20:	movw	lr, #8048	; 0x1f70
   12c24:	add	r3, r3, lr
   12c28:	ldr	r3, [r3]
   12c2c:	str	r0, [fp, #-20]	; 0xffffffec
   12c30:	mov	r0, r2
   12c34:	str	r1, [sp, #24]
   12c38:	mov	r1, r3
   12c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12c40:	ldr	r3, [sp, #24]
   12c44:	blx	r3
   12c48:	ldr	r0, [pc, #204]	; 12d1c <error@@Base+0x1100>
   12c4c:	add	r1, pc, r0
   12c50:	ldr	r0, [fp, #-4]
   12c54:	ldr	r2, [fp, #-12]
   12c58:	bl	10ba8 <fprintf@plt>
   12c5c:	ldr	r1, [fp, #-4]
   12c60:	str	r0, [sp, #20]
   12c64:	mov	r0, r1
   12c68:	movw	r1, #0
   12c6c:	bl	12db4 <error@@Base+0x1198>
   12c70:	ldr	r1, [fp, #-4]
   12c74:	movw	r0, #10
   12c78:	bl	10bd8 <fputc@plt>
   12c7c:	movw	r1, #0
   12c80:	str	r1, [fp, #-16]
   12c84:	str	r0, [sp, #16]
   12c88:	ldr	r0, [fp, #-16]
   12c8c:	ldr	r1, [fp, #-8]
   12c90:	movw	r2, #8052	; 0x1f74
   12c94:	add	r1, r1, r2
   12c98:	ldr	r1, [r1]
   12c9c:	cmp	r0, r1
   12ca0:	bge	12d14 <error@@Base+0x10f8>
   12ca4:	ldr	r0, [pc, #128]	; 12d2c <error@@Base+0x1110>
   12ca8:	add	r1, pc, r0
   12cac:	ldr	r0, [fp, #-4]
   12cb0:	ldr	r2, [fp, #-8]
   12cb4:	movw	r3, #8048	; 0x1f70
   12cb8:	ldr	r2, [r2, r3]
   12cbc:	ldr	ip, [fp, #-16]
   12cc0:	ldr	r2, [r2, ip, lsl #2]
   12cc4:	add	r2, r2, #12
   12cc8:	str	r1, [sp, #12]
   12ccc:	mov	r1, r2
   12cd0:	str	r3, [sp, #8]
   12cd4:	bl	12db4 <error@@Base+0x1198>
   12cd8:	ldr	r0, [fp, #-4]
   12cdc:	ldr	r1, [fp, #-8]
   12ce0:	ldr	r2, [sp, #8]
   12ce4:	ldr	r1, [r1, r2]
   12ce8:	ldr	r3, [fp, #-16]
   12cec:	add	r1, r1, r3, lsl #2
   12cf0:	ldr	r1, [r1]
   12cf4:	ldr	r2, [r1, #8]
   12cf8:	ldr	r1, [sp, #12]
   12cfc:	bl	10ba8 <fprintf@plt>
   12d00:	str	r0, [sp, #4]
   12d04:	ldr	r0, [fp, #-16]
   12d08:	add	r0, r0, #1
   12d0c:	str	r0, [fp, #-16]
   12d10:	b	12c88 <error@@Base+0x106c>
   12d14:	mov	sp, fp
   12d18:	pop	{fp, pc}
   12d1c:	andeq	r2, r0, r3, lsr #4
   12d20:	andeq	r0, r0, r8, asr #4
   12d24:			; <UNDEFINED> instruction: 0x000164b0
   12d28:	andeq	r6, r1, r4, ror #9
   12d2c:	andeq	r2, r0, r8, asr #3
   12d30:	push	{fp, lr}
   12d34:	mov	fp, sp
   12d38:	sub	sp, sp, #16
   12d3c:	str	r0, [fp, #-4]
   12d40:	str	r1, [sp, #8]
   12d44:	str	r2, [sp, #4]
   12d48:	ldr	r0, [fp, #-4]
   12d4c:	bl	124b4 <error@@Base+0x898>
   12d50:	and	r0, r0, #255	; 0xff
   12d54:	cmp	r0, #0
   12d58:	movw	r0, #0
   12d5c:	str	r0, [sp]
   12d60:	beq	12d90 <error@@Base+0x1174>
   12d64:	ldr	r0, [pc, #64]	; 12dac <error@@Base+0x1190>
   12d68:	add	r0, pc, r0
   12d6c:	ldr	r1, [pc, #60]	; 12db0 <error@@Base+0x1194>
   12d70:	add	r1, pc, r1
   12d74:	ldr	r2, [sp, #8]
   12d78:	ldr	r3, [sp, #4]
   12d7c:	bl	10bb4 <__isoc99_sscanf@plt>
   12d80:	cmp	r0, #2
   12d84:	movw	r0, #0
   12d88:	moveq	r0, #1
   12d8c:	str	r0, [sp]
   12d90:	ldr	r0, [sp]
   12d94:	tst	r0, #1
   12d98:	movw	r0, #1
   12d9c:	moveq	r0, #0
   12da0:	and	r0, r0, #255	; 0xff
   12da4:	mov	sp, fp
   12da8:	pop	{fp, pc}
   12dac:	andeq	r6, r1, r3, ror #7
   12db0:	andeq	r2, r0, r8, ror #1
   12db4:	push	{fp, lr}
   12db8:	mov	fp, sp
   12dbc:	sub	sp, sp, #24
   12dc0:	str	r0, [fp, #-4]
   12dc4:	str	r1, [fp, #-8]
   12dc8:	ldr	r0, [fp, #-8]
   12dcc:	movw	r1, #0
   12dd0:	cmp	r0, r1
   12dd4:	beq	12e14 <error@@Base+0x11f8>
   12dd8:	ldr	r0, [pc, #104]	; 12e48 <error@@Base+0x122c>
   12ddc:	add	r1, pc, r0
   12de0:	ldr	r0, [fp, #-4]
   12de4:	ldr	r2, [fp, #-8]
   12de8:	ldr	r2, [r2]
   12dec:	ldr	r3, [fp, #-8]
   12df0:	ldr	r3, [r3, #4]
   12df4:	bl	10ba8 <fprintf@plt>
   12df8:	ldr	r1, [fp, #-4]
   12dfc:	ldr	r2, [fp, #-8]
   12e00:	str	r0, [sp, #12]
   12e04:	mov	r0, r1
   12e08:	mov	r1, r2
   12e0c:	bl	12978 <error@@Base+0xd5c>
   12e10:	b	12e28 <error@@Base+0x120c>
   12e14:	ldr	r0, [pc, #40]	; 12e44 <error@@Base+0x1228>
   12e18:	add	r0, pc, r0
   12e1c:	ldr	r1, [fp, #-4]
   12e20:	bl	10c08 <fputs@plt>
   12e24:	str	r0, [sp, #8]
   12e28:	ldr	r0, [pc, #28]	; 12e4c <error@@Base+0x1230>
   12e2c:	add	r0, pc, r0
   12e30:	ldr	r1, [fp, #-4]
   12e34:	bl	10c08 <fputs@plt>
   12e38:	str	r0, [sp, #4]
   12e3c:	mov	sp, fp
   12e40:	pop	{fp, pc}
   12e44:	andeq	r2, r0, r7, lsl #1
   12e48:	strheq	r2, [r0], -r8
   12e4c:	andeq	r2, r0, lr, lsl #1
   12e50:	push	{fp, lr}
   12e54:	mov	fp, sp
   12e58:	sub	sp, sp, #8
   12e5c:	ldr	r2, [pc, #36]	; 12e88 <error@@Base+0x126c>
   12e60:	ldr	r2, [pc, r2]
   12e64:	str	r0, [sp, #4]
   12e68:	str	r1, [sp]
   12e6c:	ldr	r0, [sp, #4]
   12e70:	ldr	r0, [r0, #8]
   12e74:	ldr	r1, [sp]
   12e78:	ldr	r1, [r1, #8]
   12e7c:	blx	r2
   12e80:	mov	sp, fp
   12e84:	pop	{fp, pc}
   12e88:	andeq	r6, r1, r4, lsr #5
   12e8c:	push	{fp, lr}
   12e90:	mov	fp, sp
   12e94:	sub	sp, sp, #16
   12e98:	str	r0, [fp, #-4]
   12e9c:	str	r1, [sp, #8]
   12ea0:	ldr	r0, [sp, #8]
   12ea4:	ldr	r0, [r0]
   12ea8:	str	r0, [sp, #4]
   12eac:	ldr	r0, [sp, #4]
   12eb0:	bl	12f04 <error@@Base+0x12e8>
   12eb4:	str	r0, [sp]
   12eb8:	movw	lr, #0
   12ebc:	cmp	r0, lr
   12ec0:	beq	12efc <error@@Base+0x12e0>
   12ec4:	ldr	r0, [sp, #4]
   12ec8:	ldr	r0, [r0, #12]
   12ecc:	bl	13334 <error@@Base+0x1718>
   12ed0:	sxtb	r0, r0
   12ed4:	cmp	r0, #0
   12ed8:	beq	12eec <error@@Base+0x12d0>
   12edc:	ldr	r0, [fp, #-4]
   12ee0:	ldr	r1, [sp, #4]
   12ee4:	ldr	r2, [sp]
   12ee8:	bl	1339c <error@@Base+0x1780>
   12eec:	ldr	r0, [sp]
   12ef0:	ldr	r0, [r0, #4]
   12ef4:	str	r0, [sp, #4]
   12ef8:	b	12eac <error@@Base+0x1290>
   12efc:	mov	sp, fp
   12f00:	pop	{fp, pc}
   12f04:	push	{fp, lr}
   12f08:	mov	fp, sp
   12f0c:	sub	sp, sp, #48	; 0x30
   12f10:	str	r0, [fp, #-8]
   12f14:	ldr	r0, [fp, #-8]
   12f18:	str	r0, [sp, #28]
   12f1c:	add	r0, sp, #24
   12f20:	str	r0, [sp, #20]
   12f24:	movw	r0, #17
   12f28:	str	r0, [sp, #16]
   12f2c:	ldr	r0, [fp, #-8]
   12f30:	movw	r1, #0
   12f34:	cmp	r0, r1
   12f38:	bne	12f48 <error@@Base+0x132c>
   12f3c:	movw	r0, #0
   12f40:	str	r0, [fp, #-4]
   12f44:	b	13328 <error@@Base+0x170c>
   12f48:	b	12f4c <error@@Base+0x1330>
   12f4c:	ldr	r0, [sp, #20]
   12f50:	ldr	r0, [r0, #4]
   12f54:	movw	r1, #0
   12f58:	cmp	r0, r1
   12f5c:	beq	1331c <error@@Base+0x1700>
   12f60:	ldr	r0, [sp, #20]
   12f64:	bl	13488 <error@@Base+0x186c>
   12f68:	str	r0, [sp, #20]
   12f6c:	ldr	r0, [sp, #16]
   12f70:	str	r0, [sp, #4]
   12f74:	ldr	r0, [sp, #20]
   12f78:	bl	13534 <error@@Base+0x1918>
   12f7c:	str	r0, [sp, #16]
   12f80:	ldr	r0, [sp, #20]
   12f84:	bl	13488 <error@@Base+0x186c>
   12f88:	bl	13534 <error@@Base+0x1918>
   12f8c:	str	r0, [sp, #12]
   12f90:	ldr	r0, [sp, #20]
   12f94:	bl	1357c <error@@Base+0x1960>
   12f98:	bl	13534 <error@@Base+0x1918>
   12f9c:	str	r0, [sp, #8]
   12fa0:	ldr	r0, [sp, #16]
   12fa4:	cmp	r0, #1
   12fa8:	bne	12fbc <error@@Base+0x13a0>
   12fac:	ldr	r0, [sp, #12]
   12fb0:	cmp	r0, #2
   12fb4:	bne	12fbc <error@@Base+0x13a0>
   12fb8:	b	12f4c <error@@Base+0x1330>
   12fbc:	ldr	r0, [sp, #16]
   12fc0:	cmp	r0, #3
   12fc4:	beq	12fe0 <error@@Base+0x13c4>
   12fc8:	ldr	r0, [sp, #16]
   12fcc:	cmp	r0, #1
   12fd0:	beq	12fe0 <error@@Base+0x13c4>
   12fd4:	ldr	r0, [sp, #16]
   12fd8:	cmp	r0, #2
   12fdc:	bne	12fe4 <error@@Base+0x13c8>
   12fe0:	b	1331c <error@@Base+0x1700>
   12fe4:	ldr	r0, [sp, #12]
   12fe8:	cmp	r0, #3
   12fec:	beq	13008 <error@@Base+0x13ec>
   12ff0:	ldr	r0, [sp, #12]
   12ff4:	cmp	r0, #1
   12ff8:	beq	13008 <error@@Base+0x13ec>
   12ffc:	ldr	r0, [sp, #12]
   13000:	cmp	r0, #2
   13004:	bne	1300c <error@@Base+0x13f0>
   13008:	b	1331c <error@@Base+0x1700>
   1300c:	ldr	r0, [sp, #16]
   13010:	cmp	r0, #9
   13014:	beq	13024 <error@@Base+0x1408>
   13018:	ldr	r0, [sp, #16]
   1301c:	cmp	r0, #8
   13020:	bne	13040 <error@@Base+0x1424>
   13024:	ldr	r0, [sp, #12]
   13028:	cmp	r0, #9
   1302c:	beq	1303c <error@@Base+0x1420>
   13030:	ldr	r0, [sp, #12]
   13034:	cmp	r0, #8
   13038:	bne	13040 <error@@Base+0x1424>
   1303c:	b	12f4c <error@@Base+0x1330>
   13040:	ldr	r0, [sp, #16]
   13044:	cmp	r0, #9
   13048:	beq	13058 <error@@Base+0x143c>
   1304c:	ldr	r0, [sp, #16]
   13050:	cmp	r0, #8
   13054:	bne	13098 <error@@Base+0x147c>
   13058:	ldr	r0, [sp, #12]
   1305c:	cmp	r0, #13
   13060:	beq	1307c <error@@Base+0x1460>
   13064:	ldr	r0, [sp, #12]
   13068:	cmp	r0, #12
   1306c:	beq	1307c <error@@Base+0x1460>
   13070:	ldr	r0, [sp, #12]
   13074:	cmp	r0, #10
   13078:	bne	13098 <error@@Base+0x147c>
   1307c:	ldr	r0, [sp, #8]
   13080:	cmp	r0, #9
   13084:	beq	13094 <error@@Base+0x1478>
   13088:	ldr	r0, [sp, #8]
   1308c:	cmp	r0, #8
   13090:	bne	13098 <error@@Base+0x147c>
   13094:	b	12f4c <error@@Base+0x1330>
   13098:	ldr	r0, [sp, #4]
   1309c:	cmp	r0, #9
   130a0:	beq	130b0 <error@@Base+0x1494>
   130a4:	ldr	r0, [sp, #4]
   130a8:	cmp	r0, #8
   130ac:	bne	130f0 <error@@Base+0x14d4>
   130b0:	ldr	r0, [sp, #16]
   130b4:	cmp	r0, #13
   130b8:	beq	130d4 <error@@Base+0x14b8>
   130bc:	ldr	r0, [sp, #16]
   130c0:	cmp	r0, #12
   130c4:	beq	130d4 <error@@Base+0x14b8>
   130c8:	ldr	r0, [sp, #16]
   130cc:	cmp	r0, #10
   130d0:	bne	130f0 <error@@Base+0x14d4>
   130d4:	ldr	r0, [sp, #12]
   130d8:	cmp	r0, #9
   130dc:	beq	130ec <error@@Base+0x14d0>
   130e0:	ldr	r0, [sp, #12]
   130e4:	cmp	r0, #8
   130e8:	bne	130f0 <error@@Base+0x14d4>
   130ec:	b	12f4c <error@@Base+0x1330>
   130f0:	ldr	r0, [sp, #16]
   130f4:	cmp	r0, #8
   130f8:	bne	1310c <error@@Base+0x14f0>
   130fc:	ldr	r0, [sp, #12]
   13100:	cmp	r0, #10
   13104:	bne	1310c <error@@Base+0x14f0>
   13108:	b	12f4c <error@@Base+0x1330>
   1310c:	ldr	r0, [sp, #16]
   13110:	cmp	r0, #8
   13114:	bne	13134 <error@@Base+0x1518>
   13118:	ldr	r0, [sp, #12]
   1311c:	cmp	r0, #11
   13120:	bne	13134 <error@@Base+0x1518>
   13124:	ldr	r0, [sp, #8]
   13128:	cmp	r0, #8
   1312c:	bne	13134 <error@@Base+0x1518>
   13130:	b	12f4c <error@@Base+0x1330>
   13134:	ldr	r0, [sp, #4]
   13138:	cmp	r0, #8
   1313c:	bne	1315c <error@@Base+0x1540>
   13140:	ldr	r0, [sp, #16]
   13144:	cmp	r0, #11
   13148:	bne	1315c <error@@Base+0x1540>
   1314c:	ldr	r0, [sp, #12]
   13150:	cmp	r0, #8
   13154:	bne	1315c <error@@Base+0x1540>
   13158:	b	12f4c <error@@Base+0x1330>
   1315c:	ldr	r0, [sp, #16]
   13160:	cmp	r0, #15
   13164:	bne	13178 <error@@Base+0x155c>
   13168:	ldr	r0, [sp, #12]
   1316c:	cmp	r0, #15
   13170:	bne	13178 <error@@Base+0x155c>
   13174:	b	12f4c <error@@Base+0x1330>
   13178:	ldr	r0, [sp, #16]
   1317c:	cmp	r0, #9
   13180:	beq	13190 <error@@Base+0x1574>
   13184:	ldr	r0, [sp, #16]
   13188:	cmp	r0, #8
   1318c:	bne	131a0 <error@@Base+0x1584>
   13190:	ldr	r0, [sp, #12]
   13194:	cmp	r0, #15
   13198:	bne	131a0 <error@@Base+0x1584>
   1319c:	b	12f4c <error@@Base+0x1330>
   131a0:	ldr	r0, [sp, #16]
   131a4:	cmp	r0, #15
   131a8:	bne	131c8 <error@@Base+0x15ac>
   131ac:	ldr	r0, [sp, #12]
   131b0:	cmp	r0, #9
   131b4:	beq	131c4 <error@@Base+0x15a8>
   131b8:	ldr	r0, [sp, #12]
   131bc:	cmp	r0, #8
   131c0:	bne	131c8 <error@@Base+0x15ac>
   131c4:	b	12f4c <error@@Base+0x1330>
   131c8:	ldr	r0, [sp, #4]
   131cc:	cmp	r0, #15
   131d0:	bne	13208 <error@@Base+0x15ec>
   131d4:	ldr	r0, [sp, #16]
   131d8:	cmp	r0, #14
   131dc:	beq	131f8 <error@@Base+0x15dc>
   131e0:	ldr	r0, [sp, #16]
   131e4:	cmp	r0, #12
   131e8:	beq	131f8 <error@@Base+0x15dc>
   131ec:	ldr	r0, [sp, #16]
   131f0:	cmp	r0, #10
   131f4:	bne	13208 <error@@Base+0x15ec>
   131f8:	ldr	r0, [sp, #12]
   131fc:	cmp	r0, #15
   13200:	bne	13208 <error@@Base+0x15ec>
   13204:	b	12f4c <error@@Base+0x1330>
   13208:	ldr	r0, [sp, #16]
   1320c:	cmp	r0, #15
   13210:	bne	13248 <error@@Base+0x162c>
   13214:	ldr	r0, [sp, #12]
   13218:	cmp	r0, #14
   1321c:	beq	13238 <error@@Base+0x161c>
   13220:	ldr	r0, [sp, #12]
   13224:	cmp	r0, #12
   13228:	beq	13238 <error@@Base+0x161c>
   1322c:	ldr	r0, [sp, #12]
   13230:	cmp	r0, #10
   13234:	bne	13248 <error@@Base+0x162c>
   13238:	ldr	r0, [sp, #8]
   1323c:	cmp	r0, #15
   13240:	bne	13248 <error@@Base+0x162c>
   13244:	b	12f4c <error@@Base+0x1330>
   13248:	ldr	r0, [sp, #16]
   1324c:	cmp	r0, #7
   13250:	bne	13264 <error@@Base+0x1648>
   13254:	ldr	r0, [sp, #12]
   13258:	cmp	r0, #7
   1325c:	bne	13264 <error@@Base+0x1648>
   13260:	b	12f4c <error@@Base+0x1330>
   13264:	ldr	r0, [sp, #16]
   13268:	cmp	r0, #9
   1326c:	beq	132a0 <error@@Base+0x1684>
   13270:	ldr	r0, [sp, #16]
   13274:	cmp	r0, #8
   13278:	beq	132a0 <error@@Base+0x1684>
   1327c:	ldr	r0, [sp, #16]
   13280:	cmp	r0, #15
   13284:	beq	132a0 <error@@Base+0x1684>
   13288:	ldr	r0, [sp, #16]
   1328c:	cmp	r0, #7
   13290:	beq	132a0 <error@@Base+0x1684>
   13294:	ldr	r0, [sp, #16]
   13298:	cmp	r0, #16
   1329c:	bne	132b0 <error@@Base+0x1694>
   132a0:	ldr	r0, [sp, #12]
   132a4:	cmp	r0, #16
   132a8:	bne	132b0 <error@@Base+0x1694>
   132ac:	b	12f4c <error@@Base+0x1330>
   132b0:	ldr	r0, [sp, #16]
   132b4:	cmp	r0, #16
   132b8:	bne	132fc <error@@Base+0x16e0>
   132bc:	ldr	r0, [sp, #12]
   132c0:	cmp	r0, #9
   132c4:	beq	132f8 <error@@Base+0x16dc>
   132c8:	ldr	r0, [sp, #12]
   132cc:	cmp	r0, #8
   132d0:	beq	132f8 <error@@Base+0x16dc>
   132d4:	ldr	r0, [sp, #12]
   132d8:	cmp	r0, #15
   132dc:	beq	132f8 <error@@Base+0x16dc>
   132e0:	ldr	r0, [sp, #12]
   132e4:	cmp	r0, #7
   132e8:	beq	132f8 <error@@Base+0x16dc>
   132ec:	ldr	r0, [sp, #12]
   132f0:	cmp	r0, #16
   132f4:	bne	132fc <error@@Base+0x16e0>
   132f8:	b	12f4c <error@@Base+0x1330>
   132fc:	ldr	r0, [sp, #16]
   13300:	cmp	r0, #5
   13304:	bne	13318 <error@@Base+0x16fc>
   13308:	ldr	r0, [sp, #12]
   1330c:	cmp	r0, #5
   13310:	bne	13318 <error@@Base+0x16fc>
   13314:	b	12f4c <error@@Base+0x1330>
   13318:	b	1331c <error@@Base+0x1700>
   1331c:	ldr	r0, [sp, #20]
   13320:	bl	135a0 <error@@Base+0x1984>
   13324:	str	r0, [fp, #-4]
   13328:	ldr	r0, [fp, #-4]
   1332c:	mov	sp, fp
   13330:	pop	{fp, pc}
   13334:	push	{fp, lr}
   13338:	mov	fp, sp
   1333c:	sub	sp, sp, #16
   13340:	str	r0, [sp, #8]
   13344:	ldr	r0, [sp, #8]
   13348:	bl	10ae8 <utf8proc_get_property@plt>
   1334c:	str	r0, [sp, #4]
   13350:	ldr	r0, [sp, #4]
   13354:	ldrsh	r0, [r0]
   13358:	sub	lr, r0, #1
   1335c:	cmp	lr, #12
   13360:	str	r0, [sp]
   13364:	bcc	1337c <error@@Base+0x1760>
   13368:	b	1336c <error@@Base+0x1750>
   1336c:	ldr	r0, [sp]
   13370:	cmp	r0, #29
   13374:	bne	13388 <error@@Base+0x176c>
   13378:	b	1337c <error@@Base+0x1760>
   1337c:	movw	r0, #1
   13380:	strb	r0, [fp, #-1]
   13384:	b	13390 <error@@Base+0x1774>
   13388:	movw	r0, #0
   1338c:	strb	r0, [fp, #-1]
   13390:	ldrb	r0, [fp, #-1]
   13394:	mov	sp, fp
   13398:	pop	{fp, pc}
   1339c:	push	{fp, lr}
   133a0:	mov	fp, sp
   133a4:	sub	sp, sp, #40	; 0x28
   133a8:	str	r0, [fp, #-4]
   133ac:	str	r1, [fp, #-8]
   133b0:	str	r2, [fp, #-12]
   133b4:	ldr	r0, [fp, #-12]
   133b8:	ldr	r0, [r0, #4]
   133bc:	str	r0, [sp, #20]
   133c0:	ldr	r0, [fp, #-8]
   133c4:	ldr	r1, [sp, #20]
   133c8:	bl	137c8 <error@@Base+0x1bac>
   133cc:	str	r0, [sp, #16]
   133d0:	ldr	r0, [sp, #16]
   133d4:	add	r0, r0, #1
   133d8:	bl	10b54 <malloc@plt>
   133dc:	str	r0, [sp, #8]
   133e0:	ldr	r0, [sp, #8]
   133e4:	ldr	r1, [fp, #-8]
   133e8:	ldr	r2, [sp, #20]
   133ec:	bl	138bc <error@@Base+0x1ca0>
   133f0:	ldr	r0, [pc, #96]	; 13458 <error@@Base+0x183c>
   133f4:	ldr	r0, [pc, r0]
   133f8:	movw	r1, #1
   133fc:	str	r0, [sp, #4]
   13400:	mov	r0, r1
   13404:	movw	r1, #12
   13408:	ldr	r2, [sp, #4]
   1340c:	blx	r2
   13410:	str	r0, [fp, #-16]
   13414:	ldr	r0, [sp, #8]
   13418:	bl	10bcc <utf8proc_NFC@plt>
   1341c:	ldr	r1, [pc, #48]	; 13454 <error@@Base+0x1838>
   13420:	ldr	r1, [pc, r1]
   13424:	ldr	r2, [fp, #-16]
   13428:	str	r0, [r2, #8]
   1342c:	ldr	r0, [fp, #-4]
   13430:	ldr	r2, [fp, #-16]
   13434:	str	r1, [sp]
   13438:	mov	r1, r2
   1343c:	ldr	r2, [sp]
   13440:	blx	r2
   13444:	ldr	r0, [sp, #8]
   13448:	bl	10adc <free@plt>
   1344c:	mov	sp, fp
   13450:	pop	{fp, pc}
   13454:			; <UNDEFINED> instruction: 0x00015cb0
   13458:	andeq	r5, r1, ip, lsl sp
   1345c:	push	{fp, lr}
   13460:	mov	fp, sp
   13464:	sub	sp, sp, #8
   13468:	str	r0, [sp, #4]
   1346c:	ldr	r0, [sp, #4]
   13470:	ldr	r0, [r0, #8]
   13474:	bl	10adc <free@plt>
   13478:	ldr	r0, [sp, #4]
   1347c:	bl	10adc <free@plt>
   13480:	mov	sp, fp
   13484:	pop	{fp, pc}
   13488:	push	{fp, lr}
   1348c:	mov	fp, sp
   13490:	sub	sp, sp, #16
   13494:	str	r0, [sp, #8]
   13498:	ldr	r0, [sp, #8]
   1349c:	movw	r1, #0
   134a0:	cmp	r0, r1
   134a4:	bne	134b4 <error@@Base+0x1898>
   134a8:	movw	r0, #0
   134ac:	str	r0, [fp, #-4]
   134b0:	b	13528 <error@@Base+0x190c>
   134b4:	b	134b8 <error@@Base+0x189c>
   134b8:	ldr	r0, [sp, #8]
   134bc:	ldr	r0, [r0, #4]
   134c0:	str	r0, [sp, #8]
   134c4:	ldr	r0, [sp, #8]
   134c8:	movw	r1, #0
   134cc:	cmp	r0, r1
   134d0:	movw	r0, #0
   134d4:	str	r0, [sp, #4]
   134d8:	beq	13514 <error@@Base+0x18f8>
   134dc:	ldr	r0, [sp, #8]
   134e0:	bl	13534 <error@@Base+0x1918>
   134e4:	cmp	r0, #4
   134e8:	movw	r0, #1
   134ec:	str	r0, [sp]
   134f0:	beq	1350c <error@@Base+0x18f0>
   134f4:	ldr	r0, [sp, #8]
   134f8:	bl	13534 <error@@Base+0x1918>
   134fc:	cmp	r0, #6
   13500:	movw	r0, #0
   13504:	moveq	r0, #1
   13508:	str	r0, [sp]
   1350c:	ldr	r0, [sp]
   13510:	str	r0, [sp, #4]
   13514:	ldr	r0, [sp, #4]
   13518:	tst	r0, #1
   1351c:	bne	134b8 <error@@Base+0x189c>
   13520:	ldr	r0, [sp, #8]
   13524:	str	r0, [fp, #-4]
   13528:	ldr	r0, [fp, #-4]
   1352c:	mov	sp, fp
   13530:	pop	{fp, pc}
   13534:	push	{fp, lr}
   13538:	mov	fp, sp
   1353c:	sub	sp, sp, #8
   13540:	str	r0, [sp]
   13544:	ldr	r0, [sp]
   13548:	movw	r1, #0
   1354c:	cmp	r0, r1
   13550:	bne	13560 <error@@Base+0x1944>
   13554:	movw	r0, #18
   13558:	str	r0, [sp, #4]
   1355c:	b	13570 <error@@Base+0x1954>
   13560:	ldr	r0, [sp]
   13564:	ldr	r0, [r0, #12]
   13568:	bl	1365c <error@@Base+0x1a40>
   1356c:	str	r0, [sp, #4]
   13570:	ldr	r0, [sp, #4]
   13574:	mov	sp, fp
   13578:	pop	{fp, pc}
   1357c:	push	{fp, lr}
   13580:	mov	fp, sp
   13584:	sub	sp, sp, #8
   13588:	str	r0, [sp, #4]
   1358c:	ldr	r0, [sp, #4]
   13590:	bl	13488 <error@@Base+0x186c>
   13594:	bl	13488 <error@@Base+0x186c>
   13598:	mov	sp, fp
   1359c:	pop	{fp, pc}
   135a0:	push	{fp, lr}
   135a4:	mov	fp, sp
   135a8:	sub	sp, sp, #16
   135ac:	str	r0, [sp, #8]
   135b0:	ldr	r0, [sp, #8]
   135b4:	movw	r1, #0
   135b8:	cmp	r0, r1
   135bc:	bne	135cc <error@@Base+0x19b0>
   135c0:	movw	r0, #0
   135c4:	str	r0, [fp, #-4]
   135c8:	b	13650 <error@@Base+0x1a34>
   135cc:	b	135d0 <error@@Base+0x19b4>
   135d0:	ldr	r0, [sp, #8]
   135d4:	ldr	r0, [r0, #4]
   135d8:	movw	r1, #0
   135dc:	cmp	r0, r1
   135e0:	movw	r0, #0
   135e4:	str	r0, [sp, #4]
   135e8:	beq	1362c <error@@Base+0x1a10>
   135ec:	ldr	r0, [sp, #8]
   135f0:	ldr	r0, [r0, #4]
   135f4:	bl	13534 <error@@Base+0x1918>
   135f8:	cmp	r0, #4
   135fc:	movw	r0, #1
   13600:	str	r0, [sp]
   13604:	beq	13624 <error@@Base+0x1a08>
   13608:	ldr	r0, [sp, #8]
   1360c:	ldr	r0, [r0, #4]
   13610:	bl	13534 <error@@Base+0x1918>
   13614:	cmp	r0, #6
   13618:	movw	r0, #0
   1361c:	moveq	r0, #1
   13620:	str	r0, [sp]
   13624:	ldr	r0, [sp]
   13628:	str	r0, [sp, #4]
   1362c:	ldr	r0, [sp, #4]
   13630:	tst	r0, #1
   13634:	beq	13648 <error@@Base+0x1a2c>
   13638:	ldr	r0, [sp, #8]
   1363c:	ldr	r0, [r0, #4]
   13640:	str	r0, [sp, #8]
   13644:	b	135d0 <error@@Base+0x19b4>
   13648:	ldr	r0, [sp, #8]
   1364c:	str	r0, [fp, #-4]
   13650:	ldr	r0, [fp, #-4]
   13654:	mov	sp, fp
   13658:	pop	{fp, pc}
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	sub	sp, sp, #8
   13668:	str	r0, [sp, #4]
   1366c:	movw	r0, #1093	; 0x445
   13670:	str	r0, [sp]
   13674:	ldr	r0, [sp, #4]
   13678:	movw	r1, #0
   1367c:	movw	r2, #1092	; 0x444
   13680:	bl	1368c <error@@Base+0x1a70>
   13684:	mov	sp, fp
   13688:	pop	{fp, pc}
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	sub	sp, sp, #24
   13698:	str	r0, [fp, #-8]
   1369c:	str	r1, [sp, #12]
   136a0:	str	r2, [sp, #8]
   136a4:	ldr	r0, [sp, #8]
   136a8:	ldr	r1, [sp, #12]
   136ac:	cmp	r0, r1
   136b0:	bcs	136c0 <error@@Base+0x1aa4>
   136b4:	movw	r0, #0
   136b8:	str	r0, [fp, #-4]
   136bc:	b	137ac <error@@Base+0x1b90>
   136c0:	ldr	r0, [pc, #240]	; 137b8 <error@@Base+0x1b9c>
   136c4:	add	r0, pc, r0
   136c8:	ldr	r1, [sp, #12]
   136cc:	ldr	r2, [sp, #8]
   136d0:	sub	r2, r2, r1
   136d4:	lsr	r2, r2, #1
   136d8:	add	r1, r1, r2
   136dc:	str	r1, [sp, #4]
   136e0:	ldr	r1, [sp, #4]
   136e4:	movw	r2, #12
   136e8:	mul	r1, r1, r2
   136ec:	add	r0, r0, r1
   136f0:	str	r0, [sp]
   136f4:	ldr	r0, [fp, #-8]
   136f8:	ldr	r1, [sp]
   136fc:	ldr	r1, [r1]
   13700:	cmp	r0, r1
   13704:	bcs	13724 <error@@Base+0x1b08>
   13708:	ldr	r0, [fp, #-8]
   1370c:	ldr	r1, [sp, #12]
   13710:	ldr	r2, [sp, #4]
   13714:	sub	r2, r2, #1
   13718:	bl	1368c <error@@Base+0x1a70>
   1371c:	str	r0, [fp, #-4]
   13720:	b	137ac <error@@Base+0x1b90>
   13724:	ldr	r0, [fp, #-8]
   13728:	ldr	r1, [sp]
   1372c:	ldr	r1, [r1, #4]
   13730:	cmp	r0, r1
   13734:	bls	13754 <error@@Base+0x1b38>
   13738:	ldr	r0, [fp, #-8]
   1373c:	ldr	r1, [sp, #4]
   13740:	add	r1, r1, #1
   13744:	ldr	r2, [sp, #8]
   13748:	bl	1368c <error@@Base+0x1a70>
   1374c:	str	r0, [fp, #-4]
   13750:	b	137ac <error@@Base+0x1b90>
   13754:	ldr	r0, [fp, #-8]
   13758:	ldr	r1, [sp]
   1375c:	ldr	r1, [r1]
   13760:	cmp	r0, r1
   13764:	bcc	13780 <error@@Base+0x1b64>
   13768:	ldr	r0, [fp, #-8]
   1376c:	ldr	r1, [sp]
   13770:	ldr	r1, [r1, #4]
   13774:	cmp	r0, r1
   13778:	bhi	13780 <error@@Base+0x1b64>
   1377c:	b	137a0 <error@@Base+0x1b84>
   13780:	ldr	r0, [pc, #52]	; 137bc <error@@Base+0x1ba0>
   13784:	add	r0, pc, r0
   13788:	ldr	r1, [pc, #48]	; 137c0 <error@@Base+0x1ba4>
   1378c:	add	r1, pc, r1
   13790:	ldr	r2, [pc, #44]	; 137c4 <error@@Base+0x1ba8>
   13794:	add	r3, pc, r2
   13798:	movw	r2, #63	; 0x3f
   1379c:	bl	10c38 <__assert_fail@plt>
   137a0:	ldr	r0, [sp]
   137a4:	ldr	r0, [r0, #8]
   137a8:	str	r0, [fp, #-4]
   137ac:	ldr	r0, [fp, #-4]
   137b0:	mov	sp, fp
   137b4:	pop	{fp, pc}
   137b8:	strdeq	r1, [r0], -ip
   137bc:	andeq	r4, r0, r8, ror sl
   137c0:	andeq	r4, r0, r9, lsr #21
   137c4:	andeq	r4, r0, r8, lsr #21
   137c8:	push	{fp, lr}
   137cc:	mov	fp, sp
   137d0:	sub	sp, sp, #24
   137d4:	str	r0, [fp, #-4]
   137d8:	str	r1, [fp, #-8]
   137dc:	movw	r0, #0
   137e0:	str	r0, [sp, #8]
   137e4:	str	r0, [sp, #4]
   137e8:	ldr	r0, [fp, #-4]
   137ec:	str	r0, [sp, #12]
   137f0:	ldr	r0, [sp, #12]
   137f4:	ldr	r1, [fp, #-8]
   137f8:	cmp	r0, r1
   137fc:	beq	13898 <error@@Base+0x1c7c>
   13800:	ldr	r0, [sp, #12]
   13804:	movw	r1, #0
   13808:	cmp	r0, r1
   1380c:	beq	13814 <error@@Base+0x1bf8>
   13810:	b	13834 <error@@Base+0x1c18>
   13814:	ldr	r0, [pc, #136]	; 138a4 <error@@Base+0x1c88>
   13818:	add	r0, pc, r0
   1381c:	ldr	r1, [pc, #132]	; 138a8 <error@@Base+0x1c8c>
   13820:	add	r1, pc, r1
   13824:	ldr	r2, [pc, #128]	; 138ac <error@@Base+0x1c90>
   13828:	add	r3, pc, r2
   1382c:	movw	r2, #249	; 0xf9
   13830:	bl	10c38 <__assert_fail@plt>
   13834:	mov	r1, sp
   13838:	ldr	r0, [sp, #12]
   1383c:	ldr	r0, [r0, #12]
   13840:	bl	10b00 <utf8proc_encode_char@plt>
   13844:	str	r0, [sp, #4]
   13848:	ldr	r0, [sp, #4]
   1384c:	cmp	r0, #0
   13850:	bls	13858 <error@@Base+0x1c3c>
   13854:	b	13878 <error@@Base+0x1c5c>
   13858:	ldr	r0, [pc, #80]	; 138b0 <error@@Base+0x1c94>
   1385c:	add	r0, pc, r0
   13860:	ldr	r1, [pc, #76]	; 138b4 <error@@Base+0x1c98>
   13864:	add	r1, pc, r1
   13868:	ldr	r2, [pc, #72]	; 138b8 <error@@Base+0x1c9c>
   1386c:	add	r3, pc, r2
   13870:	movw	r2, #253	; 0xfd
   13874:	bl	10c38 <__assert_fail@plt>
   13878:	ldr	r0, [sp, #4]
   1387c:	ldr	r1, [sp, #8]
   13880:	add	r0, r1, r0
   13884:	str	r0, [sp, #8]
   13888:	ldr	r0, [sp, #12]
   1388c:	ldr	r0, [r0, #4]
   13890:	str	r0, [sp, #12]
   13894:	b	137f0 <error@@Base+0x1bd4>
   13898:	ldr	r0, [sp, #8]
   1389c:	mov	sp, fp
   138a0:	pop	{fp, pc}
   138a4:	andeq	r4, r0, r6, asr #20
   138a8:	andeq	r4, r0, r5, lsl sl
   138ac:	andeq	r4, r0, r6, asr #20
   138b0:	andeq	r4, r0, ip, lsr #20
   138b4:	ldrdeq	r4, [r0], -r1
   138b8:	andeq	r4, r0, r2, lsl #20
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	sub	sp, sp, #24
   138c8:	str	r0, [fp, #-4]
   138cc:	str	r1, [fp, #-8]
   138d0:	str	r2, [sp, #12]
   138d4:	movw	r0, #0
   138d8:	str	r0, [sp, #4]
   138dc:	ldr	r0, [fp, #-8]
   138e0:	str	r0, [sp, #8]
   138e4:	ldr	r0, [sp, #8]
   138e8:	ldr	r1, [sp, #12]
   138ec:	cmp	r0, r1
   138f0:	beq	1395c <error@@Base+0x1d40>
   138f4:	ldr	r0, [sp, #8]
   138f8:	movw	r1, #0
   138fc:	cmp	r0, r1
   13900:	beq	13908 <error@@Base+0x1cec>
   13904:	b	13928 <error@@Base+0x1d0c>
   13908:	ldr	r0, [pc, #104]	; 13978 <error@@Base+0x1d5c>
   1390c:	add	r0, pc, r0
   13910:	ldr	r1, [pc, #100]	; 1397c <error@@Base+0x1d60>
   13914:	add	r1, pc, r1
   13918:	ldr	r2, [pc, #96]	; 13980 <error@@Base+0x1d64>
   1391c:	add	r3, pc, r2
   13920:	movw	r2, #269	; 0x10d
   13924:	bl	10c38 <__assert_fail@plt>
   13928:	ldr	r0, [sp, #8]
   1392c:	ldr	r0, [r0, #12]
   13930:	ldr	r1, [fp, #-4]
   13934:	ldr	r2, [sp, #4]
   13938:	add	r1, r1, r2
   1393c:	bl	10b00 <utf8proc_encode_char@plt>
   13940:	ldr	r1, [sp, #4]
   13944:	add	r0, r1, r0
   13948:	str	r0, [sp, #4]
   1394c:	ldr	r0, [sp, #8]
   13950:	ldr	r0, [r0, #4]
   13954:	str	r0, [sp, #8]
   13958:	b	138e4 <error@@Base+0x1cc8>
   1395c:	ldr	r0, [fp, #-4]
   13960:	ldr	r1, [sp, #4]
   13964:	add	r0, r0, r1
   13968:	movw	r1, #0
   1396c:	strb	r1, [r0]
   13970:	mov	sp, fp
   13974:	pop	{fp, pc}
   13978:	andeq	r4, r0, r2, asr r9
   1397c:	andeq	r4, r0, r1, lsr #18
   13980:	andeq	r4, r0, pc, ror r9
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	sub	sp, sp, #24
   13990:	ldr	r3, [pc, #96]	; 139f8 <error@@Base+0x1ddc>
   13994:	ldr	r3, [pc, r3]
   13998:	str	r0, [fp, #-4]
   1399c:	strb	r1, [fp, #-5]
   139a0:	str	r2, [sp, #12]
   139a4:	movw	r0, #1
   139a8:	movw	r1, #16
   139ac:	blx	r3
   139b0:	ldr	r1, [pc, #60]	; 139f4 <error@@Base+0x1dd8>
   139b4:	ldr	r1, [pc, r1]
   139b8:	str	r0, [sp, #8]
   139bc:	ldrb	r0, [fp, #-5]
   139c0:	ldr	r2, [sp, #8]
   139c4:	strb	r0, [r2, #8]
   139c8:	ldr	r0, [sp, #12]
   139cc:	ldr	r2, [sp, #8]
   139d0:	str	r0, [r2, #12]
   139d4:	ldr	r0, [fp, #-4]
   139d8:	ldr	r2, [sp, #8]
   139dc:	str	r1, [sp, #4]
   139e0:	mov	r1, r2
   139e4:	ldr	r2, [sp, #4]
   139e8:	blx	r2
   139ec:	mov	sp, fp
   139f0:	pop	{fp, pc}
   139f4:	andeq	r5, r1, ip, lsl r7
   139f8:	andeq	r5, r1, ip, ror r7
   139fc:	push	{fp, lr}
   13a00:	mov	fp, sp
   13a04:	sub	sp, sp, #64	; 0x40
   13a08:	str	r0, [fp, #-4]
   13a0c:	str	r1, [fp, #-8]
   13a10:	str	r2, [fp, #-12]
   13a14:	ldr	r0, [fp, #-12]
   13a18:	ldrb	r0, [r0]
   13a1c:	cmp	r0, #0
   13a20:	beq	13a50 <error@@Base+0x1e34>
   13a24:	ldr	r0, [fp, #-8]
   13a28:	movw	r1, #0
   13a2c:	cmp	r0, r1
   13a30:	bne	13a50 <error@@Base+0x1e34>
   13a34:	ldr	r0, [pc, #404]	; 13bd0 <error@@Base+0x1fb4>
   13a38:	add	r0, pc, r0
   13a3c:	ldr	r1, [pc, #400]	; 13bd4 <error@@Base+0x1fb8>
   13a40:	add	r1, pc, r1
   13a44:	ldr	r2, [pc, #396]	; 13bd8 <error@@Base+0x1fbc>
   13a48:	ldr	r2, [pc, r2]
   13a4c:	blx	r2
   13a50:	ldr	r0, [pc, #388]	; 13bdc <error@@Base+0x1fc0>
   13a54:	add	r1, pc, r0
   13a58:	ldr	r0, [pc, #384]	; 13be0 <error@@Base+0x1fc4>
   13a5c:	ldr	r0, [pc, r0]
   13a60:	ldr	r2, [fp, #-4]
   13a64:	ldr	r2, [r2, #4]
   13a68:	str	r2, [fp, #-16]
   13a6c:	ldr	r2, [fp, #-8]
   13a70:	str	r0, [fp, #-24]	; 0xffffffe8
   13a74:	mov	r0, r2
   13a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a7c:	blx	r2
   13a80:	str	r0, [fp, #-20]	; 0xffffffec
   13a84:	ldr	r0, [fp, #-12]
   13a88:	ldrsb	r0, [r0]
   13a8c:	cmp	r0, #0
   13a90:	beq	13aa4 <error@@Base+0x1e88>
   13a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a98:	bl	13be8 <error@@Base+0x1fcc>
   13a9c:	ldr	lr, [fp, #-12]
   13aa0:	strb	r0, [lr, #11]
   13aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa8:	ldr	r1, [fp, #-4]
   13aac:	ldr	r2, [fp, #-12]
   13ab0:	ldrb	r2, [r2, #1]
   13ab4:	ldr	r3, [fp, #-12]
   13ab8:	ldr	r3, [r3, #4]
   13abc:	cmp	r3, #0
   13ac0:	str	r0, [fp, #-28]	; 0xffffffe4
   13ac4:	str	r1, [sp, #32]
   13ac8:	str	r2, [sp, #28]
   13acc:	beq	13ae0 <error@@Base+0x1ec4>
   13ad0:	ldr	r0, [fp, #-12]
   13ad4:	ldr	r0, [r0, #4]
   13ad8:	str	r0, [sp, #24]
   13adc:	b	13aec <error@@Base+0x1ed0>
   13ae0:	movw	r0, #94	; 0x5e
   13ae4:	str	r0, [sp, #24]
   13ae8:	b	13aec <error@@Base+0x1ed0>
   13aec:	ldr	r0, [sp, #24]
   13af0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13af4:	str	r0, [sp, #20]
   13af8:	mov	r0, r1
   13afc:	ldr	r1, [sp, #32]
   13b00:	ldr	r2, [sp, #28]
   13b04:	ldr	r3, [sp, #20]
   13b08:	bl	13ce0 <error@@Base+0x20c4>
   13b0c:	ldr	r0, [pc, #208]	; 13be4 <error@@Base+0x1fc8>
   13b10:	ldr	r0, [pc, r0]
   13b14:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b18:	str	r0, [sp, #16]
   13b1c:	mov	r0, r1
   13b20:	ldr	r1, [sp, #16]
   13b24:	blx	r1
   13b28:	ldr	r0, [fp, #-12]
   13b2c:	ldrsb	r0, [r0, #9]
   13b30:	cmp	r0, #0
   13b34:	beq	13b84 <error@@Base+0x1f68>
   13b38:	ldr	r0, [fp, #-4]
   13b3c:	ldr	r1, [fp, #-16]
   13b40:	movw	r2, #0
   13b44:	cmp	r1, r2
   13b48:	str	r0, [sp, #12]
   13b4c:	beq	13b60 <error@@Base+0x1f44>
   13b50:	ldr	r0, [fp, #-16]
   13b54:	ldr	r0, [r0, #4]
   13b58:	str	r0, [sp, #8]
   13b5c:	b	13b6c <error@@Base+0x1f50>
   13b60:	ldr	r0, [fp, #-4]
   13b64:	ldr	r0, [r0]
   13b68:	str	r0, [sp, #8]
   13b6c:	ldr	r0, [sp, #8]
   13b70:	ldr	r1, [sp, #12]
   13b74:	str	r0, [sp, #4]
   13b78:	mov	r0, r1
   13b7c:	ldr	r1, [sp, #4]
   13b80:	bl	13e5c <error@@Base+0x2240>
   13b84:	ldr	r0, [fp, #-12]
   13b88:	ldrsb	r0, [r0, #10]
   13b8c:	cmp	r0, #0
   13b90:	beq	13bc8 <error@@Base+0x1fac>
   13b94:	ldr	r0, [fp, #-16]
   13b98:	movw	r1, #0
   13b9c:	cmp	r0, r1
   13ba0:	beq	13bb4 <error@@Base+0x1f98>
   13ba4:	ldr	r0, [fp, #-16]
   13ba8:	ldr	r0, [r0, #4]
   13bac:	str	r0, [sp]
   13bb0:	b	13bc0 <error@@Base+0x1fa4>
   13bb4:	ldr	r0, [fp, #-4]
   13bb8:	ldr	r0, [r0]
   13bbc:	str	r0, [sp]
   13bc0:	ldr	r0, [sp]
   13bc4:	bl	14004 <error@@Base+0x23e8>
   13bc8:	mov	sp, fp
   13bcc:	pop	{fp, pc}
   13bd0:	andeq	r4, r0, fp, ror r8
   13bd4:	andeq	r4, r0, r3, lsl #17
   13bd8:	ldrdeq	r5, [r1], -r0
   13bdc:	andeq	r4, r0, r9, lsr #18
   13be0:	andeq	r5, r1, r0, asr r6
   13be4:	andeq	r5, r1, ip, ror r5
   13be8:	push	{fp, lr}
   13bec:	mov	fp, sp
   13bf0:	sub	sp, sp, #120	; 0x78
   13bf4:	add	r1, sp, #12
   13bf8:	str	r0, [fp, #-8]
   13bfc:	movw	r0, #0
   13c00:	strh	r0, [sp, #10]
   13c04:	ldr	r2, [fp, #-8]
   13c08:	mov	r0, r1
   13c0c:	movw	r1, #99	; 0x63
   13c10:	bl	10af4 <fgets@plt>
   13c14:	movw	r1, #0
   13c18:	cmp	r0, r1
   13c1c:	beq	13cbc <error@@Base+0x20a0>
   13c20:	ldr	r0, [pc, #176]	; 13cd8 <error@@Base+0x20bc>
   13c24:	add	r1, pc, r0
   13c28:	add	r0, sp, #12
   13c2c:	movw	r2, #51	; 0x33
   13c30:	bl	10c14 <strncmp@plt>
   13c34:	cmp	r0, #0
   13c38:	bne	13cbc <error@@Base+0x20a0>
   13c3c:	b	13c40 <error@@Base+0x2024>
   13c40:	ldrsh	r0, [sp, #10]
   13c44:	cmp	r0, #2
   13c48:	movw	r0, #0
   13c4c:	str	r0, [sp, #4]
   13c50:	bge	13c78 <error@@Base+0x205c>
   13c54:	add	r0, sp, #12
   13c58:	ldr	r2, [fp, #-8]
   13c5c:	movw	r1, #99	; 0x63
   13c60:	bl	10af4 <fgets@plt>
   13c64:	movw	r1, #0
   13c68:	cmp	r0, r1
   13c6c:	movw	r0, #0
   13c70:	movne	r0, #1
   13c74:	str	r0, [sp, #4]
   13c78:	ldr	r0, [sp, #4]
   13c7c:	tst	r0, #1
   13c80:	beq	13cb0 <error@@Base+0x2094>
   13c84:	add	r0, sp, #12
   13c88:	ldr	r1, [pc, #76]	; 13cdc <error@@Base+0x20c0>
   13c8c:	add	r1, pc, r1
   13c90:	bl	10ab8 <strcmp@plt>
   13c94:	cmp	r0, #0
   13c98:	bne	13cac <error@@Base+0x2090>
   13c9c:	ldrh	r0, [sp, #10]
   13ca0:	movw	r1, #1
   13ca4:	add	r0, r0, r1
   13ca8:	strh	r0, [sp, #10]
   13cac:	b	13c40 <error@@Base+0x2024>
   13cb0:	movw	r0, #1
   13cb4:	strb	r0, [fp, #-1]
   13cb8:	b	13ccc <error@@Base+0x20b0>
   13cbc:	ldr	r0, [fp, #-8]
   13cc0:	bl	10b18 <rewind@plt>
   13cc4:	movw	r0, #0
   13cc8:	strb	r0, [fp, #-1]
   13ccc:	ldrb	r0, [fp, #-1]
   13cd0:	mov	sp, fp
   13cd4:	pop	{fp, pc}
   13cd8:	ldrdeq	r4, [r0], -r3
   13cdc:	andeq	r4, r0, r3, lsr #13
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	sub	sp, sp, #48	; 0x30
   13cec:	str	r0, [fp, #-4]
   13cf0:	str	r1, [fp, #-8]
   13cf4:	strb	r2, [fp, #-9]
   13cf8:	str	r3, [fp, #-16]
   13cfc:	movw	r0, #0
   13d00:	strb	r0, [fp, #-17]	; 0xffffffef
   13d04:	ldr	r0, [fp, #-4]
   13d08:	bl	10c2c <getc@plt>
   13d0c:	str	r0, [sp, #20]
   13d10:	ldr	r0, [sp, #20]
   13d14:	cmn	r0, #1
   13d18:	beq	13e3c <error@@Base+0x2220>
   13d1c:	ldr	r0, [pc, #288]	; 13e44 <error@@Base+0x2228>
   13d20:	ldr	r0, [pc, r0]
   13d24:	ldr	r1, [sp, #20]
   13d28:	add	r0, r0, r1
   13d2c:	ldrsb	r0, [r0]
   13d30:	str	r0, [sp, #8]
   13d34:	ldr	r0, [sp, #8]
   13d38:	cmp	r0, #1
   13d3c:	bge	13d54 <error@@Base+0x2138>
   13d40:	ldr	r0, [pc, #268]	; 13e54 <error@@Base+0x2238>
   13d44:	add	r0, pc, r0
   13d48:	ldr	r1, [pc, #264]	; 13e58 <error@@Base+0x223c>
   13d4c:	ldr	r1, [pc, r1]
   13d50:	blx	r1
   13d54:	ldr	r0, [sp, #20]
   13d58:	strb	r0, [fp, #-21]	; 0xffffffeb
   13d5c:	ldr	r0, [sp, #8]
   13d60:	cmp	r0, #1
   13d64:	ble	13db4 <error@@Base+0x2198>
   13d68:	sub	r0, fp, #21
   13d6c:	add	r0, r0, #1
   13d70:	ldr	r1, [sp, #8]
   13d74:	sub	r2, r1, #1
   13d78:	ldr	r3, [fp, #-4]
   13d7c:	movw	r1, #1
   13d80:	bl	10b3c <fread@plt>
   13d84:	str	r0, [sp, #16]
   13d88:	ldr	r0, [sp, #16]
   13d8c:	ldr	r1, [sp, #8]
   13d90:	sub	r1, r1, #1
   13d94:	cmp	r0, r1
   13d98:	beq	13db0 <error@@Base+0x2194>
   13d9c:	ldr	r0, [pc, #168]	; 13e4c <error@@Base+0x2230>
   13da0:	add	r0, pc, r0
   13da4:	ldr	r1, [pc, #164]	; 13e50 <error@@Base+0x2234>
   13da8:	ldr	r1, [pc, r1]
   13dac:	blx	r1
   13db0:	b	13db4 <error@@Base+0x2198>
   13db4:	sub	r0, fp, #21
   13db8:	movw	r1, #4
   13dbc:	add	r2, sp, #4
   13dc0:	bl	10b48 <utf8proc_iterate@plt>
   13dc4:	str	r0, [sp, #12]
   13dc8:	ldr	r0, [sp, #12]
   13dcc:	ldr	r1, [sp, #8]
   13dd0:	cmp	r0, r1
   13dd4:	beq	13dec <error@@Base+0x21d0>
   13dd8:	ldr	r0, [sp, #12]
   13ddc:	bl	10bfc <utf8proc_errmsg@plt>
   13de0:	ldr	lr, [pc, #96]	; 13e48 <error@@Base+0x222c>
   13de4:	ldr	lr, [pc, lr]
   13de8:	blx	lr
   13dec:	ldrb	r0, [fp, #-9]
   13df0:	cmp	r0, #0
   13df4:	beq	13e14 <error@@Base+0x21f8>
   13df8:	ldr	r0, [sp, #4]
   13dfc:	ldr	r1, [fp, #-16]
   13e00:	cmp	r0, r1
   13e04:	bne	13e14 <error@@Base+0x21f8>
   13e08:	movw	r0, #1
   13e0c:	strb	r0, [fp, #-17]	; 0xffffffef
   13e10:	b	13e2c <error@@Base+0x2210>
   13e14:	ldr	r0, [fp, #-8]
   13e18:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13e1c:	ldr	r2, [sp, #4]
   13e20:	bl	13984 <error@@Base+0x1d68>
   13e24:	movw	r0, #0
   13e28:	strb	r0, [fp, #-17]	; 0xffffffef
   13e2c:	ldr	r0, [fp, #-4]
   13e30:	bl	10c2c <getc@plt>
   13e34:	str	r0, [sp, #20]
   13e38:	b	13d10 <error@@Base+0x20f4>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	andeq	r5, r1, ip, asr #7
   13e48:			; <UNDEFINED> instruction: 0x000152bc
   13e4c:	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
   13e50:	strdeq	r5, [r1], -r8
   13e54:	andeq	r4, r0, r3, lsr #12
   13e58:	andeq	r5, r1, r4, asr r3
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	sub	sp, sp, #24
   13e68:	str	r0, [fp, #-4]
   13e6c:	str	r1, [fp, #-8]
   13e70:	movw	r0, #0
   13e74:	strb	r0, [fp, #-9]
   13e78:	ldr	r0, [fp, #-8]
   13e7c:	str	r0, [sp, #8]
   13e80:	ldr	r0, [sp, #8]
   13e84:	movw	r1, #0
   13e88:	cmp	r0, r1
   13e8c:	beq	13ec8 <error@@Base+0x22ac>
   13e90:	ldr	r0, [sp, #8]
   13e94:	ldr	r0, [r0, #12]
   13e98:	bl	144fc <error@@Base+0x28e0>
   13e9c:	sxtb	r0, r0
   13ea0:	cmp	r0, #0
   13ea4:	beq	13eb4 <error@@Base+0x2298>
   13ea8:	ldr	r0, [sp, #8]
   13eac:	movw	r1, #32
   13eb0:	str	r1, [r0, #12]
   13eb4:	b	13eb8 <error@@Base+0x229c>
   13eb8:	ldr	r0, [sp, #8]
   13ebc:	ldr	r0, [r0, #4]
   13ec0:	str	r0, [sp, #8]
   13ec4:	b	13e80 <error@@Base+0x2264>
   13ec8:	ldr	r0, [fp, #-8]
   13ecc:	str	r0, [sp, #8]
   13ed0:	ldr	r0, [sp, #8]
   13ed4:	movw	r1, #0
   13ed8:	cmp	r0, r1
   13edc:	beq	13ff8 <error@@Base+0x23dc>
   13ee0:	ldr	r0, [sp, #8]
   13ee4:	ldr	r0, [r0, #4]
   13ee8:	str	r0, [sp, #4]
   13eec:	ldr	r0, [sp, #8]
   13ef0:	ldr	r0, [r0, #12]
   13ef4:	cmp	r0, #32
   13ef8:	bne	13f38 <error@@Base+0x231c>
   13efc:	ldrsb	r0, [fp, #-9]
   13f00:	cmp	r0, #0
   13f04:	beq	13f54 <error@@Base+0x2338>
   13f08:	ldr	r0, [sp, #4]
   13f0c:	movw	r1, #0
   13f10:	cmp	r0, r1
   13f14:	beq	13f54 <error@@Base+0x2338>
   13f18:	ldr	r0, [sp, #4]
   13f1c:	ldr	r0, [r0, #12]
   13f20:	cmp	r0, #32
   13f24:	beq	13f54 <error@@Base+0x2338>
   13f28:	ldr	r0, [sp, #4]
   13f2c:	ldr	r0, [r0, #12]
   13f30:	cmp	r0, #10
   13f34:	beq	13f54 <error@@Base+0x2338>
   13f38:	ldr	r0, [sp, #8]
   13f3c:	ldr	r0, [r0, #12]
   13f40:	cmp	r0, #10
   13f44:	bne	13fc8 <error@@Base+0x23ac>
   13f48:	ldrsb	r0, [fp, #-9]
   13f4c:	cmp	r0, #0
   13f50:	bne	13fc8 <error@@Base+0x23ac>
   13f54:	ldrb	r0, [fp, #-9]
   13f58:	cmp	r0, #0
   13f5c:	beq	13f98 <error@@Base+0x237c>
   13f60:	ldr	r0, [sp, #4]
   13f64:	movw	r1, #0
   13f68:	cmp	r0, r1
   13f6c:	beq	13f98 <error@@Base+0x237c>
   13f70:	ldr	r0, [sp, #4]
   13f74:	ldr	r0, [r0, #12]
   13f78:	cmp	r0, #32
   13f7c:	bne	13f98 <error@@Base+0x237c>
   13f80:	ldr	r0, [sp, #8]
   13f84:	ldrb	r0, [r0, #8]
   13f88:	ldr	r1, [sp, #4]
   13f8c:	ldrb	r2, [r1, #8]
   13f90:	orr	r0, r2, r0
   13f94:	strb	r0, [r1, #8]
   13f98:	ldr	r0, [pc, #96]	; 14000 <error@@Base+0x23e4>
   13f9c:	ldr	r0, [pc, r0]
   13fa0:	ldr	r1, [fp, #-4]
   13fa4:	ldr	r2, [sp, #8]
   13fa8:	str	r0, [sp]
   13fac:	mov	r0, r1
   13fb0:	mov	r1, r2
   13fb4:	ldr	r2, [sp]
   13fb8:	blx	r2
   13fbc:	ldr	r0, [sp, #8]
   13fc0:	bl	10adc <free@plt>
   13fc4:	b	13fec <error@@Base+0x23d0>
   13fc8:	ldr	r0, [sp, #8]
   13fcc:	ldr	r0, [r0, #12]
   13fd0:	cmp	r0, #10
   13fd4:	movw	r0, #0
   13fd8:	moveq	r0, #1
   13fdc:	tst	r0, #1
   13fe0:	movw	r0, #0
   13fe4:	moveq	r0, #1
   13fe8:	strb	r0, [fp, #-9]
   13fec:	ldr	r0, [sp, #4]
   13ff0:	str	r0, [sp, #8]
   13ff4:	b	13ed0 <error@@Base+0x22b4>
   13ff8:	mov	sp, fp
   13ffc:	pop	{fp, pc}
   14000:	andeq	r5, r1, r4, lsl #3
   14004:	push	{fp, lr}
   14008:	mov	fp, sp
   1400c:	sub	sp, sp, #8
   14010:	str	r0, [sp, #4]
   14014:	ldr	r0, [sp, #4]
   14018:	str	r0, [sp]
   1401c:	ldr	r0, [sp]
   14020:	movw	r1, #0
   14024:	cmp	r0, r1
   14028:	beq	14050 <error@@Base+0x2434>
   1402c:	ldr	r0, [sp]
   14030:	ldr	r0, [r0, #12]
   14034:	bl	10b24 <utf8proc_tolower@plt>
   14038:	ldr	lr, [sp]
   1403c:	str	r0, [lr, #12]
   14040:	ldr	r0, [sp]
   14044:	ldr	r0, [r0, #4]
   14048:	str	r0, [sp]
   1404c:	b	1401c <error@@Base+0x2400>
   14050:	mov	sp, fp
   14054:	pop	{fp, pc}
   14058:	push	{fp, lr}
   1405c:	mov	fp, sp
   14060:	sub	sp, sp, #16
   14064:	str	r0, [fp, #-4]
   14068:	str	r1, [sp, #8]
   1406c:	ldr	r0, [fp, #-4]
   14070:	ldr	r1, [sp, #8]
   14074:	bl	10b00 <utf8proc_encode_char@plt>
   14078:	str	r0, [sp, #4]
   1407c:	ldr	r0, [sp, #4]
   14080:	cmp	r0, #1
   14084:	bge	1409c <error@@Base+0x2480>
   14088:	ldr	r0, [pc, #28]	; 140ac <error@@Base+0x2490>
   1408c:	add	r0, pc, r0
   14090:	ldr	r1, [pc, #24]	; 140b0 <error@@Base+0x2494>
   14094:	ldr	r1, [pc, r1]
   14098:	blx	r1
   1409c:	ldr	r0, [sp, #4]
   140a0:	sxtb	r0, r0
   140a4:	mov	sp, fp
   140a8:	pop	{fp, pc}
   140ac:	andeq	r4, r0, r1, asr #4
   140b0:	andeq	r5, r1, ip
   140b4:	push	{fp, lr}
   140b8:	mov	fp, sp
   140bc:	sub	sp, sp, #32
   140c0:	strb	r0, [fp, #-1]
   140c4:	str	r1, [fp, #-8]
   140c8:	str	r2, [fp, #-12]
   140cc:	strb	r3, [fp, #-13]
   140d0:	movw	r0, #0
   140d4:	strh	r0, [sp, #16]
   140d8:	ldr	r0, [fp, #-12]
   140dc:	str	r0, [sp, #12]
   140e0:	ldrsb	r0, [fp, #-1]
   140e4:	cmp	r0, #0
   140e8:	beq	14108 <error@@Base+0x24ec>
   140ec:	ldr	r1, [sp, #12]
   140f0:	movw	r0, #94	; 0x5e
   140f4:	bl	14058 <error@@Base+0x243c>
   140f8:	sxtb	r0, r0
   140fc:	ldrsh	r1, [sp, #16]
   14100:	add	r0, r1, r0
   14104:	strh	r0, [sp, #16]
   14108:	ldr	r0, [fp, #-8]
   1410c:	cmp	r0, #10
   14110:	bne	14158 <error@@Base+0x253c>
   14114:	ldr	r0, [pc, #316]	; 14258 <error@@Base+0x263c>
   14118:	add	r0, pc, r0
   1411c:	ldr	r1, [pc, #312]	; 1425c <error@@Base+0x2640>
   14120:	add	r1, pc, r1
   14124:	ldr	r2, [fp, #-12]
   14128:	ldrsh	r3, [sp, #16]
   1412c:	add	r2, r2, r3
   14130:	ldrb	r3, [fp, #-13]
   14134:	cmp	r3, #0
   14138:	movw	r3, #0
   1413c:	movne	r3, #1
   14140:	tst	r3, #1
   14144:	movne	r1, r0
   14148:	mov	r0, r2
   1414c:	bl	10be4 <sprintf@plt>
   14150:	str	r0, [sp, #8]
   14154:	b	14248 <error@@Base+0x262c>
   14158:	ldr	r0, [fp, #-8]
   1415c:	bl	14260 <error@@Base+0x2644>
   14160:	sxtb	r0, r0
   14164:	cmp	r0, #0
   14168:	beq	141f0 <error@@Base+0x25d4>
   1416c:	ldr	r0, [fp, #-8]
   14170:	bl	142e0 <error@@Base+0x26c4>
   14174:	sxtb	r0, r0
   14178:	cmp	r0, #0
   1417c:	beq	141a4 <error@@Base+0x2588>
   14180:	ldr	r0, [sp, #12]
   14184:	ldrsh	r1, [sp, #16]
   14188:	add	r1, r0, r1
   1418c:	movw	r0, #9676	; 0x25cc
   14190:	bl	14058 <error@@Base+0x243c>
   14194:	sxtb	r0, r0
   14198:	ldrsh	r1, [sp, #16]
   1419c:	add	r0, r1, r0
   141a0:	strh	r0, [sp, #16]
   141a4:	ldr	r0, [fp, #-8]
   141a8:	ldr	r1, [sp, #12]
   141ac:	ldrsh	r2, [sp, #16]
   141b0:	add	r1, r1, r2
   141b4:	bl	14058 <error@@Base+0x243c>
   141b8:	sxtb	r0, r0
   141bc:	ldrsh	r1, [sp, #16]
   141c0:	add	r0, r1, r0
   141c4:	strh	r0, [sp, #16]
   141c8:	ldr	r0, [fp, #-12]
   141cc:	ldrh	r1, [sp, #16]
   141d0:	movw	r2, #1
   141d4:	add	r2, r1, r2
   141d8:	strh	r2, [sp, #16]
   141dc:	sxth	r1, r1
   141e0:	add	r0, r0, r1
   141e4:	movw	r1, #0
   141e8:	strb	r1, [r0]
   141ec:	b	14244 <error@@Base+0x2628>
   141f0:	ldr	r0, [fp, #-8]
   141f4:	cmp	r0, #256	; 0x100
   141f8:	bcs	14220 <error@@Base+0x2604>
   141fc:	ldr	r0, [pc, #80]	; 14254 <error@@Base+0x2638>
   14200:	add	r1, pc, r0
   14204:	ldr	r0, [fp, #-12]
   14208:	ldrsh	r2, [sp, #16]
   1420c:	add	r0, r0, r2
   14210:	ldr	r2, [fp, #-8]
   14214:	bl	10be4 <sprintf@plt>
   14218:	str	r0, [sp, #4]
   1421c:	b	14240 <error@@Base+0x2624>
   14220:	ldr	r0, [pc, #40]	; 14250 <error@@Base+0x2634>
   14224:	add	r1, pc, r0
   14228:	ldr	r0, [fp, #-12]
   1422c:	ldrsh	r2, [sp, #16]
   14230:	add	r0, r0, r2
   14234:	ldr	r2, [fp, #-8]
   14238:	bl	10be4 <sprintf@plt>
   1423c:	str	r0, [sp]
   14240:	b	14244 <error@@Base+0x2628>
   14244:	b	14248 <error@@Base+0x262c>
   14248:	mov	sp, fp
   1424c:	pop	{fp, pc}
   14250:	andeq	r4, r0, ip, asr #1
   14254:	andeq	r4, r0, r9, ror #1
   14258:	andeq	r4, r0, ip, asr #3
   1425c:	andeq	r0, r0, r3, lsr ip
   14260:	push	{fp, lr}
   14264:	mov	fp, sp
   14268:	sub	sp, sp, #16
   1426c:	str	r0, [sp, #8]
   14270:	ldr	r0, [sp, #8]
   14274:	bl	10ae8 <utf8proc_get_property@plt>
   14278:	str	r0, [sp, #4]
   1427c:	ldr	r0, [sp, #8]
   14280:	cmp	r0, #32
   14284:	bne	14294 <error@@Base+0x2678>
   14288:	movw	r0, #1
   1428c:	strb	r0, [fp, #-1]
   14290:	b	142d4 <error@@Base+0x26b8>
   14294:	ldr	r0, [sp, #4]
   14298:	ldrsh	r0, [r0]
   1429c:	sub	r1, r0, #1
   142a0:	cmp	r1, #22
   142a4:	str	r0, [sp]
   142a8:	bcc	142c0 <error@@Base+0x26a4>
   142ac:	b	142b0 <error@@Base+0x2694>
   142b0:	ldr	r0, [sp]
   142b4:	cmp	r0, #29
   142b8:	bne	142cc <error@@Base+0x26b0>
   142bc:	b	142c0 <error@@Base+0x26a4>
   142c0:	movw	r0, #1
   142c4:	strb	r0, [fp, #-1]
   142c8:	b	142d4 <error@@Base+0x26b8>
   142cc:	movw	r0, #0
   142d0:	strb	r0, [fp, #-1]
   142d4:	ldrb	r0, [fp, #-1]
   142d8:	mov	sp, fp
   142dc:	pop	{fp, pc}
   142e0:	push	{fp, lr}
   142e4:	mov	fp, sp
   142e8:	sub	sp, sp, #8
   142ec:	str	r0, [sp]
   142f0:	ldr	r0, [sp]
   142f4:	bl	10b90 <utf8proc_category@plt>
   142f8:	sub	r0, r0, #6
   142fc:	cmp	r0, #2
   14300:	bhi	14314 <error@@Base+0x26f8>
   14304:	b	14308 <error@@Base+0x26ec>
   14308:	movw	r0, #1
   1430c:	strb	r0, [fp, #-1]
   14310:	b	1431c <error@@Base+0x2700>
   14314:	movw	r0, #0
   14318:	strb	r0, [fp, #-1]
   1431c:	ldrb	r0, [fp, #-1]
   14320:	mov	sp, fp
   14324:	pop	{fp, pc}
   14328:	push	{fp, lr}
   1432c:	mov	fp, sp
   14330:	sub	sp, sp, #56	; 0x38
   14334:	ldr	r3, [pc, #260]	; 14440 <error@@Base+0x2824>
   14338:	add	r3, pc, r3
   1433c:	ldr	ip, [pc, #256]	; 14444 <error@@Base+0x2828>
   14340:	ldr	ip, [pc, ip]
   14344:	str	r0, [fp, #-4]
   14348:	str	r1, [fp, #-8]
   1434c:	str	r2, [fp, #-12]
   14350:	ldr	r0, [fp, #-8]
   14354:	mov	r1, r3
   14358:	blx	ip
   1435c:	str	r0, [fp, #-16]
   14360:	ldr	r0, [fp, #-12]
   14364:	movw	r1, #0
   14368:	cmp	r0, r1
   1436c:	beq	143c4 <error@@Base+0x27a8>
   14370:	ldr	r0, [pc, #216]	; 14450 <error@@Base+0x2834>
   14374:	add	r0, pc, r0
   14378:	ldr	r1, [fp, #-16]
   1437c:	bl	10c08 <fputs@plt>
   14380:	ldr	r1, [pc, #196]	; 1444c <error@@Base+0x2830>
   14384:	add	r1, pc, r1
   14388:	ldr	lr, [fp, #-16]
   1438c:	str	r0, [sp, #20]
   14390:	mov	r0, r1
   14394:	mov	r1, lr
   14398:	bl	10c08 <fputs@plt>
   1439c:	ldr	r1, [fp, #-12]
   143a0:	ldr	lr, [fp, #-16]
   143a4:	str	r0, [sp, #16]
   143a8:	mov	r0, lr
   143ac:	blx	r1
   143b0:	ldr	r0, [pc, #144]	; 14448 <error@@Base+0x282c>
   143b4:	add	r0, pc, r0
   143b8:	ldr	r1, [fp, #-16]
   143bc:	bl	10c08 <fputs@plt>
   143c0:	str	r0, [sp, #12]
   143c4:	ldr	r0, [fp, #-4]
   143c8:	ldr	r0, [r0]
   143cc:	str	r0, [fp, #-20]	; 0xffffffec
   143d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143d4:	movw	r1, #0
   143d8:	cmp	r0, r1
   143dc:	beq	1441c <error@@Base+0x2800>
   143e0:	add	r2, sp, #27
   143e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   143e8:	ldrb	r0, [r0, #8]
   143ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   143f0:	ldr	r1, [r1, #12]
   143f4:	movw	r3, #0
   143f8:	bl	140b4 <error@@Base+0x2498>
   143fc:	add	r0, sp, #27
   14400:	ldr	r1, [fp, #-16]
   14404:	bl	10c08 <fputs@plt>
   14408:	str	r0, [sp, #8]
   1440c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14410:	ldr	r0, [r0, #4]
   14414:	str	r0, [fp, #-20]	; 0xffffffec
   14418:	b	143d0 <error@@Base+0x27b4>
   1441c:	ldr	r0, [pc, #48]	; 14454 <error@@Base+0x2838>
   14420:	ldr	r0, [pc, r0]
   14424:	ldr	r1, [fp, #-16]
   14428:	str	r0, [sp, #4]
   1442c:	mov	r0, r1
   14430:	ldr	r1, [sp, #4]
   14434:	blx	r1
   14438:	mov	sp, fp
   1443c:	pop	{fp, pc}
   14440:			; <UNDEFINED> instruction: 0x00000ab7
   14444:	andeq	r4, r1, ip, ror #26
   14448:	andeq	r3, r0, fp, ror pc
   1444c:	andeq	r3, r0, fp, lsr #31
   14450:	andeq	r3, r0, r3, lsl #31
   14454:	andeq	r4, r1, ip, ror #24
   14458:	push	{fp, lr}
   1445c:	mov	fp, sp
   14460:	sub	sp, sp, #24
   14464:	str	r0, [fp, #-8]
   14468:	str	r1, [sp, #12]
   1446c:	ldr	r0, [sp, #12]
   14470:	str	r0, [sp, #8]
   14474:	movw	r0, #0
   14478:	str	r0, [sp, #4]
   1447c:	str	r0, [sp]
   14480:	ldr	r0, [sp, #12]
   14484:	str	r0, [sp, #8]
   14488:	ldr	r0, [sp, #8]
   1448c:	ldrb	r0, [r0]
   14490:	cmp	r0, #0
   14494:	beq	144e8 <error@@Base+0x28cc>
   14498:	ldr	r0, [sp, #8]
   1449c:	mvn	r1, #0
   144a0:	mov	r2, sp
   144a4:	bl	10b48 <utf8proc_iterate@plt>
   144a8:	str	r0, [sp, #4]
   144ac:	ldr	r0, [sp, #4]
   144b0:	cmp	r0, #1
   144b4:	bge	144c4 <error@@Base+0x28a8>
   144b8:	movw	r0, #0
   144bc:	strb	r0, [fp, #-1]
   144c0:	b	144f0 <error@@Base+0x28d4>
   144c4:	ldr	r0, [fp, #-8]
   144c8:	ldr	r2, [sp]
   144cc:	movw	r1, #0
   144d0:	bl	13984 <error@@Base+0x1d68>
   144d4:	ldr	r0, [sp, #4]
   144d8:	ldr	r1, [sp, #8]
   144dc:	add	r0, r1, r0
   144e0:	str	r0, [sp, #8]
   144e4:	b	14488 <error@@Base+0x286c>
   144e8:	movw	r0, #1
   144ec:	strb	r0, [fp, #-1]
   144f0:	ldrb	r0, [fp, #-1]
   144f4:	mov	sp, fp
   144f8:	pop	{fp, pc}
   144fc:	push	{fp, lr}
   14500:	mov	fp, sp
   14504:	sub	sp, sp, #16
   14508:	str	r0, [sp, #8]
   1450c:	ldr	r0, [sp, #8]
   14510:	bl	10ae8 <utf8proc_get_property@plt>
   14514:	str	r0, [sp, #4]
   14518:	ldr	r0, [sp, #8]
   1451c:	cmp	r0, #9
   14520:	str	r0, [sp]
   14524:	beq	1456c <error@@Base+0x2950>
   14528:	b	1452c <error@@Base+0x2910>
   1452c:	ldr	r0, [sp]
   14530:	cmp	r0, #10
   14534:	beq	14560 <error@@Base+0x2944>
   14538:	b	1453c <error@@Base+0x2920>
   1453c:	ldr	r0, [sp]
   14540:	sub	r1, r0, #11
   14544:	cmp	r1, #3
   14548:	bcc	1456c <error@@Base+0x2950>
   1454c:	b	14550 <error@@Base+0x2934>
   14550:	ldr	r0, [sp]
   14554:	cmp	r0, #160	; 0xa0
   14558:	beq	1456c <error@@Base+0x2950>
   1455c:	b	14578 <error@@Base+0x295c>
   14560:	movw	r0, #0
   14564:	strb	r0, [fp, #-1]
   14568:	b	145a4 <error@@Base+0x2988>
   1456c:	movw	r0, #1
   14570:	strb	r0, [fp, #-1]
   14574:	b	145a4 <error@@Base+0x2988>
   14578:	ldr	r0, [sp, #4]
   1457c:	ldrsh	r0, [r0]
   14580:	sub	r0, r0, #23
   14584:	cmp	r0, #2
   14588:	bhi	1459c <error@@Base+0x2980>
   1458c:	b	14590 <error@@Base+0x2974>
   14590:	movw	r0, #1
   14594:	strb	r0, [fp, #-1]
   14598:	b	145a4 <error@@Base+0x2988>
   1459c:	movw	r0, #0
   145a0:	strb	r0, [fp, #-1]
   145a4:	ldrb	r0, [fp, #-1]
   145a8:	mov	sp, fp
   145ac:	pop	{fp, pc}
   145b0:	sub	sp, sp, #4
   145b4:	str	r0, [sp]
   145b8:	ldr	r0, [sp]
   145bc:	movw	r1, #0
   145c0:	str	r1, [r0, #4]
   145c4:	ldr	r0, [sp]
   145c8:	str	r1, [r0]
   145cc:	ldr	r0, [sp]
   145d0:	str	r1, [r0, #8]
   145d4:	ldr	r0, [sp]
   145d8:	str	r1, [r0, #12]
   145dc:	add	sp, sp, #4
   145e0:	bx	lr
   145e4:	push	{fp, lr}
   145e8:	mov	fp, sp
   145ec:	sub	sp, sp, #8
   145f0:	str	r0, [sp, #4]
   145f4:	str	r1, [sp]
   145f8:	ldr	r0, [sp, #4]
   145fc:	ldr	r2, [sp]
   14600:	ldr	r1, [sp, #4]
   14604:	ldr	r3, [r1]
   14608:	movw	r1, #0
   1460c:	bl	14618 <error@@Base+0x29fc>
   14610:	mov	sp, fp
   14614:	pop	{fp, pc}
   14618:	push	{fp, lr}
   1461c:	mov	fp, sp
   14620:	sub	sp, sp, #16
   14624:	str	r0, [fp, #-4]
   14628:	str	r1, [sp, #8]
   1462c:	str	r2, [sp, #4]
   14630:	str	r3, [sp]
   14634:	ldr	r0, [sp, #8]
   14638:	ldr	r1, [sp, #4]
   1463c:	str	r0, [r1]
   14640:	ldr	r0, [sp]
   14644:	ldr	r1, [sp, #4]
   14648:	str	r0, [r1, #4]
   1464c:	ldr	r0, [sp, #8]
   14650:	movw	r1, #0
   14654:	cmp	r0, r1
   14658:	beq	1466c <error@@Base+0x2a50>
   1465c:	ldr	r0, [sp, #4]
   14660:	ldr	r1, [sp, #8]
   14664:	str	r0, [r1, #4]
   14668:	b	14678 <error@@Base+0x2a5c>
   1466c:	ldr	r0, [sp, #4]
   14670:	ldr	r1, [fp, #-4]
   14674:	str	r0, [r1]
   14678:	ldr	r0, [sp]
   1467c:	movw	r1, #0
   14680:	cmp	r0, r1
   14684:	beq	14698 <error@@Base+0x2a7c>
   14688:	ldr	r0, [sp, #4]
   1468c:	ldr	r1, [sp]
   14690:	str	r0, [r1]
   14694:	b	146a4 <error@@Base+0x2a88>
   14698:	ldr	r0, [sp, #4]
   1469c:	ldr	r1, [fp, #-4]
   146a0:	str	r0, [r1, #4]
   146a4:	ldr	r0, [fp, #-4]
   146a8:	bl	1482c <error@@Base+0x2c10>
   146ac:	ldr	r0, [fp, #-4]
   146b0:	ldr	lr, [r0, #12]
   146b4:	add	lr, lr, #1
   146b8:	str	lr, [r0, #12]
   146bc:	mov	sp, fp
   146c0:	pop	{fp, pc}
   146c4:	push	{fp, lr}
   146c8:	mov	fp, sp
   146cc:	sub	sp, sp, #8
   146d0:	str	r0, [sp, #4]
   146d4:	str	r1, [sp]
   146d8:	ldr	r0, [sp, #4]
   146dc:	ldr	r1, [sp, #4]
   146e0:	ldr	r1, [r1, #4]
   146e4:	ldr	r2, [sp]
   146e8:	movw	r3, #0
   146ec:	bl	14618 <error@@Base+0x29fc>
   146f0:	mov	sp, fp
   146f4:	pop	{fp, pc}
   146f8:	push	{fp, lr}
   146fc:	mov	fp, sp
   14700:	sub	sp, sp, #16
   14704:	str	r0, [fp, #-4]
   14708:	str	r1, [sp, #8]
   1470c:	str	r2, [sp, #4]
   14710:	ldr	r0, [fp, #-4]
   14714:	ldr	r1, [sp, #4]
   14718:	ldr	r1, [r1]
   1471c:	ldr	r2, [sp, #8]
   14720:	ldr	r3, [sp, #4]
   14724:	bl	14618 <error@@Base+0x29fc>
   14728:	mov	sp, fp
   1472c:	pop	{fp, pc}
   14730:	push	{fp, lr}
   14734:	mov	fp, sp
   14738:	sub	sp, sp, #16
   1473c:	str	r0, [fp, #-4]
   14740:	str	r1, [sp, #8]
   14744:	str	r2, [sp, #4]
   14748:	ldr	r0, [fp, #-4]
   1474c:	ldr	r1, [sp, #8]
   14750:	ldr	r2, [sp, #4]
   14754:	ldr	r3, [sp, #8]
   14758:	ldr	r3, [r3, #4]
   1475c:	bl	14618 <error@@Base+0x29fc>
   14760:	mov	sp, fp
   14764:	pop	{fp, pc}
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	sub	sp, sp, #8
   14774:	str	r0, [sp, #4]
   14778:	str	r1, [sp]
   1477c:	ldr	r0, [sp]
   14780:	ldr	r0, [r0]
   14784:	movw	r1, #0
   14788:	cmp	r0, r1
   1478c:	beq	147a8 <error@@Base+0x2b8c>
   14790:	ldr	r0, [sp]
   14794:	ldr	r0, [r0, #4]
   14798:	ldr	r1, [sp]
   1479c:	ldr	r1, [r1]
   147a0:	str	r0, [r1, #4]
   147a4:	b	147b8 <error@@Base+0x2b9c>
   147a8:	ldr	r0, [sp]
   147ac:	ldr	r0, [r0, #4]
   147b0:	ldr	r1, [sp, #4]
   147b4:	str	r0, [r1]
   147b8:	ldr	r0, [sp]
   147bc:	ldr	r0, [r0, #4]
   147c0:	movw	r1, #0
   147c4:	cmp	r0, r1
   147c8:	beq	147e4 <error@@Base+0x2bc8>
   147cc:	ldr	r0, [sp]
   147d0:	ldr	r0, [r0]
   147d4:	ldr	r1, [sp]
   147d8:	ldr	r1, [r1, #4]
   147dc:	str	r0, [r1]
   147e0:	b	147f4 <error@@Base+0x2bd8>
   147e4:	ldr	r0, [sp]
   147e8:	ldr	r0, [r0]
   147ec:	ldr	r1, [sp, #4]
   147f0:	str	r0, [r1, #4]
   147f4:	ldr	r0, [sp]
   147f8:	movw	r1, #0
   147fc:	str	r1, [r0, #4]
   14800:	ldr	r0, [sp]
   14804:	str	r1, [r0]
   14808:	ldr	r0, [sp, #4]
   1480c:	bl	1482c <error@@Base+0x2c10>
   14810:	ldr	r0, [sp, #4]
   14814:	ldr	r1, [r0, #12]
   14818:	mvn	lr, #0
   1481c:	add	r1, r1, lr
   14820:	str	r1, [r0, #12]
   14824:	mov	sp, fp
   14828:	pop	{fp, pc}
   1482c:	push	{fp, lr}
   14830:	mov	fp, sp
   14834:	sub	sp, sp, #8
   14838:	str	r0, [sp, #4]
   1483c:	ldr	r0, [sp, #4]
   14840:	ldr	r0, [r0, #8]
   14844:	movw	r1, #0
   14848:	cmp	r0, r1
   1484c:	beq	14868 <error@@Base+0x2c4c>
   14850:	ldr	r0, [sp, #4]
   14854:	ldr	r0, [r0, #8]
   14858:	bl	10adc <free@plt>
   1485c:	ldr	r0, [sp, #4]
   14860:	movw	lr, #0
   14864:	str	lr, [r0, #8]
   14868:	mov	sp, fp
   1486c:	pop	{fp, pc}
   14870:	push	{fp, lr}
   14874:	mov	fp, sp
   14878:	sub	sp, sp, #16
   1487c:	str	r0, [fp, #-4]
   14880:	movw	r0, #0
   14884:	str	r0, [sp, #4]
   14888:	ldr	r1, [fp, #-4]
   1488c:	ldr	r1, [r1, #8]
   14890:	cmp	r1, r0
   14894:	bne	148a8 <error@@Base+0x2c8c>
   14898:	ldr	r0, [fp, #-4]
   1489c:	ldr	r0, [r0, #12]
   148a0:	cmp	r0, #0
   148a4:	bne	148ac <error@@Base+0x2c90>
   148a8:	b	14924 <error@@Base+0x2d08>
   148ac:	ldr	r0, [pc, #120]	; 1492c <error@@Base+0x2d10>
   148b0:	ldr	r0, [pc, r0]
   148b4:	ldr	r1, [fp, #-4]
   148b8:	ldr	r1, [r1, #12]
   148bc:	str	r0, [sp]
   148c0:	mov	r0, r1
   148c4:	movw	r1, #4
   148c8:	ldr	r2, [sp]
   148cc:	blx	r2
   148d0:	ldr	r1, [fp, #-4]
   148d4:	str	r0, [r1, #8]
   148d8:	ldr	r0, [fp, #-4]
   148dc:	ldr	r0, [r0]
   148e0:	str	r0, [sp, #8]
   148e4:	ldr	r0, [sp, #8]
   148e8:	movw	r1, #0
   148ec:	cmp	r0, r1
   148f0:	beq	14924 <error@@Base+0x2d08>
   148f4:	ldr	r0, [sp, #8]
   148f8:	ldr	r1, [fp, #-4]
   148fc:	ldr	r1, [r1, #8]
   14900:	ldr	r2, [sp, #4]
   14904:	add	r3, r2, #1
   14908:	str	r3, [sp, #4]
   1490c:	add	r1, r1, r2, lsl #2
   14910:	str	r0, [r1]
   14914:	ldr	r0, [sp, #8]
   14918:	ldr	r0, [r0, #4]
   1491c:	str	r0, [sp, #8]
   14920:	b	148e4 <error@@Base+0x2cc8>
   14924:	mov	sp, fp
   14928:	pop	{fp, pc}
   1492c:	andeq	r4, r1, r0, ror #16
   14930:	push	{fp, lr}
   14934:	mov	fp, sp
   14938:	sub	sp, sp, #16
   1493c:	str	r0, [fp, #-4]
   14940:	str	r1, [sp, #8]
   14944:	ldr	r0, [fp, #-4]
   14948:	ldr	r0, [r0]
   1494c:	movw	r1, #0
   14950:	cmp	r0, r1
   14954:	beq	1498c <error@@Base+0x2d70>
   14958:	ldr	r0, [fp, #-4]
   1495c:	ldr	r0, [r0]
   14960:	str	r0, [sp, #4]
   14964:	ldr	r0, [fp, #-4]
   14968:	ldr	r1, [sp, #4]
   1496c:	bl	14768 <error@@Base+0x2b4c>
   14970:	ldr	r0, [sp, #8]
   14974:	ldr	r1, [sp, #4]
   14978:	str	r0, [sp]
   1497c:	mov	r0, r1
   14980:	ldr	r1, [sp]
   14984:	blx	r1
   14988:	b	14944 <error@@Base+0x2d28>
   1498c:	mov	sp, fp
   14990:	pop	{fp, pc}
   14994:	push	{fp, lr}
   14998:	mov	fp, sp
   1499c:	sub	sp, sp, #16
   149a0:	str	r0, [fp, #-4]
   149a4:	str	r1, [sp, #8]
   149a8:	str	r2, [sp, #4]
   149ac:	ldr	r0, [fp, #-4]
   149b0:	cmp	r0, #2
   149b4:	bge	149bc <error@@Base+0x2da0>
   149b8:	b	149ec <error@@Base+0x2dd0>
   149bc:	ldr	r0, [pc, #48]	; 149f4 <error@@Base+0x2dd8>
   149c0:	add	r0, pc, r0
   149c4:	ldr	r1, [pc, #44]	; 149f8 <error@@Base+0x2ddc>
   149c8:	add	r1, pc, r1
   149cc:	ldr	r2, [sp, #8]
   149d0:	str	r2, [r1]
   149d4:	ldr	r1, [sp, #4]
   149d8:	str	r1, [r0]
   149dc:	ldr	r0, [fp, #-4]
   149e0:	sub	r1, r0, #1
   149e4:	movw	r0, #0
   149e8:	bl	149fc <error@@Base+0x2de0>
   149ec:	mov	sp, fp
   149f0:	pop	{fp, pc}
   149f4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   149f8:	andeq	r4, r1, r8, ror #15
   149fc:	push	{fp, lr}
   14a00:	mov	fp, sp
   14a04:	sub	sp, sp, #40	; 0x28
   14a08:	str	r0, [fp, #-4]
   14a0c:	str	r1, [fp, #-8]
   14a10:	ldr	r0, [fp, #-4]
   14a14:	str	r0, [fp, #-12]
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	str	r0, [fp, #-16]
   14a20:	ldr	r0, [pc, #500]	; 14c1c <error@@Base+0x3000>
   14a24:	ldr	r0, [pc, r0]
   14a28:	ldr	r1, [fp, #-12]
   14a2c:	add	r0, r0, r1, lsl #2
   14a30:	ldr	r0, [r0]
   14a34:	str	r0, [sp, #20]
   14a38:	ldr	r0, [fp, #-12]
   14a3c:	ldr	r1, [fp, #-16]
   14a40:	cmp	r0, r1
   14a44:	bge	14bb0 <error@@Base+0x2f94>
   14a48:	b	14a4c <error@@Base+0x2e30>
   14a4c:	ldr	r0, [fp, #-12]
   14a50:	ldr	r1, [fp, #-16]
   14a54:	cmp	r0, r1
   14a58:	movw	r0, #0
   14a5c:	str	r0, [sp, #16]
   14a60:	bge	14aa8 <error@@Base+0x2e8c>
   14a64:	ldr	r0, [pc, #436]	; 14c20 <error@@Base+0x3004>
   14a68:	ldr	r0, [pc, r0]
   14a6c:	ldr	r1, [sp, #20]
   14a70:	ldr	r2, [pc, #428]	; 14c24 <error@@Base+0x3008>
   14a74:	ldr	r2, [pc, r2]
   14a78:	ldr	r3, [fp, #-16]
   14a7c:	add	r2, r2, r3, lsl #2
   14a80:	ldr	r2, [r2]
   14a84:	str	r0, [sp, #12]
   14a88:	mov	r0, r1
   14a8c:	mov	r1, r2
   14a90:	ldr	r2, [sp, #12]
   14a94:	blx	r2
   14a98:	cmp	r0, #0
   14a9c:	movw	r0, #0
   14aa0:	movlt	r0, #1
   14aa4:	str	r0, [sp, #16]
   14aa8:	ldr	r0, [sp, #16]
   14aac:	tst	r0, #1
   14ab0:	beq	14ac8 <error@@Base+0x2eac>
   14ab4:	ldr	r0, [fp, #-16]
   14ab8:	mvn	r1, #0
   14abc:	add	r0, r0, r1
   14ac0:	str	r0, [fp, #-16]
   14ac4:	b	14a4c <error@@Base+0x2e30>
   14ac8:	ldr	r0, [fp, #-12]
   14acc:	ldr	r1, [fp, #-16]
   14ad0:	cmp	r0, r1
   14ad4:	beq	14afc <error@@Base+0x2ee0>
   14ad8:	ldr	r0, [pc, #328]	; 14c28 <error@@Base+0x300c>
   14adc:	ldr	r0, [pc, r0]
   14ae0:	ldr	r1, [fp, #-16]
   14ae4:	ldr	r1, [r0, r1, lsl #2]
   14ae8:	ldr	r2, [fp, #-12]
   14aec:	add	r3, r2, #1
   14af0:	str	r3, [fp, #-12]
   14af4:	add	r0, r0, r2, lsl #2
   14af8:	str	r1, [r0]
   14afc:	b	14b00 <error@@Base+0x2ee4>
   14b00:	ldr	r0, [fp, #-12]
   14b04:	ldr	r1, [fp, #-16]
   14b08:	cmp	r0, r1
   14b0c:	movw	r0, #0
   14b10:	str	r0, [sp, #8]
   14b14:	bge	14b5c <error@@Base+0x2f40>
   14b18:	ldr	r0, [pc, #268]	; 14c2c <error@@Base+0x3010>
   14b1c:	ldr	r0, [pc, r0]
   14b20:	ldr	r1, [sp, #20]
   14b24:	ldr	r2, [pc, #260]	; 14c30 <error@@Base+0x3014>
   14b28:	ldr	r2, [pc, r2]
   14b2c:	ldr	r3, [fp, #-12]
   14b30:	add	r2, r2, r3, lsl #2
   14b34:	ldr	r2, [r2]
   14b38:	str	r0, [sp, #4]
   14b3c:	mov	r0, r1
   14b40:	mov	r1, r2
   14b44:	ldr	r2, [sp, #4]
   14b48:	blx	r2
   14b4c:	cmp	r0, #0
   14b50:	movw	r0, #0
   14b54:	movgt	r0, #1
   14b58:	str	r0, [sp, #8]
   14b5c:	ldr	r0, [sp, #8]
   14b60:	tst	r0, #1
   14b64:	beq	14b78 <error@@Base+0x2f5c>
   14b68:	ldr	r0, [fp, #-12]
   14b6c:	add	r0, r0, #1
   14b70:	str	r0, [fp, #-12]
   14b74:	b	14b00 <error@@Base+0x2ee4>
   14b78:	ldr	r0, [fp, #-12]
   14b7c:	ldr	r1, [fp, #-16]
   14b80:	cmp	r0, r1
   14b84:	beq	14bac <error@@Base+0x2f90>
   14b88:	ldr	r0, [pc, #164]	; 14c34 <error@@Base+0x3018>
   14b8c:	ldr	r0, [pc, r0]
   14b90:	ldr	r1, [fp, #-12]
   14b94:	ldr	r1, [r0, r1, lsl #2]
   14b98:	ldr	r2, [fp, #-16]
   14b9c:	sub	r3, r2, #1
   14ba0:	str	r3, [fp, #-16]
   14ba4:	add	r0, r0, r2, lsl #2
   14ba8:	str	r1, [r0]
   14bac:	b	14a38 <error@@Base+0x2e1c>
   14bb0:	ldr	r0, [sp, #20]
   14bb4:	ldr	r1, [pc, #124]	; 14c38 <error@@Base+0x301c>
   14bb8:	ldr	r1, [pc, r1]
   14bbc:	ldr	r2, [fp, #-16]
   14bc0:	add	r1, r1, r2, lsl #2
   14bc4:	str	r0, [r1]
   14bc8:	ldr	r0, [fp, #-4]
   14bcc:	ldr	r1, [fp, #-16]
   14bd0:	mvn	r2, #0
   14bd4:	add	r1, r1, r2
   14bd8:	str	r1, [fp, #-16]
   14bdc:	cmp	r0, r1
   14be0:	bge	14bf0 <error@@Base+0x2fd4>
   14be4:	ldr	r0, [fp, #-4]
   14be8:	ldr	r1, [fp, #-16]
   14bec:	bl	149fc <error@@Base+0x2de0>
   14bf0:	ldr	r0, [fp, #-12]
   14bf4:	add	r0, r0, #1
   14bf8:	str	r0, [fp, #-12]
   14bfc:	ldr	r1, [fp, #-8]
   14c00:	cmp	r0, r1
   14c04:	bge	14c14 <error@@Base+0x2ff8>
   14c08:	ldr	r0, [fp, #-12]
   14c0c:	ldr	r1, [fp, #-8]
   14c10:	bl	149fc <error@@Base+0x2de0>
   14c14:	mov	sp, fp
   14c18:	pop	{fp, pc}
   14c1c:	andeq	r4, r1, ip, lsl #15
   14c20:	andeq	r4, r1, ip, asr #14
   14c24:	andeq	r4, r1, ip, lsr r7
   14c28:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c2c:	muleq	r1, r8, r6
   14c30:	andeq	r4, r1, r8, lsl #13
   14c34:	andeq	r4, r1, r4, lsr #12
   14c38:	strdeq	r4, [r1], -r8
   14c3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c40:	mov	r7, r0
   14c44:	ldr	r6, [pc, #72]	; 14c94 <error@@Base+0x3078>
   14c48:	ldr	r5, [pc, #72]	; 14c98 <error@@Base+0x307c>
   14c4c:	add	r6, pc, r6
   14c50:	add	r5, pc, r5
   14c54:	sub	r6, r6, r5
   14c58:	mov	r8, r1
   14c5c:	mov	r9, r2
   14c60:	bl	10a8c <calloc@plt-0x20>
   14c64:	asrs	r6, r6, #2
   14c68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c6c:	mov	r4, #0
   14c70:	add	r4, r4, #1
   14c74:	ldr	r3, [r5], #4
   14c78:	mov	r2, r9
   14c7c:	mov	r1, r8
   14c80:	mov	r0, r7
   14c84:	blx	r3
   14c88:	cmp	r6, r4
   14c8c:	bne	14c70 <error@@Base+0x3054>
   14c90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c94:	andeq	r4, r1, r8, lsr #5
   14c98:	andeq	r4, r1, r0, lsr #5
   14c9c:	bx	lr
   14ca0:	mov	r2, r1
   14ca4:	mov	r1, r0
   14ca8:	mov	r0, #3
   14cac:	b	10b30 <__xstat@plt>

Disassembly of section .fini:

00014cb0 <.fini>:
   14cb0:	push	{r3, lr}
   14cb4:	pop	{r3, pc}
