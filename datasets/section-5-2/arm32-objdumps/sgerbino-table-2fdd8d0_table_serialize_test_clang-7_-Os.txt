
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r4, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #20, 20	; 0x14000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #20, 20	; 0x14000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #20, 20	; 0x14000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #20, 20	; 0x14000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #20, 20	; 0x14000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #20, 20	; 0x14000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r5, r1, r0, asr r8
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	strdeq	r5, [r1], -r0
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r3, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r6, r2, r8, asr r0
   120c4:	andeq	r6, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r6, r2, r8, asr r0
   120fc:	andeq	r6, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r6, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	sub	r4, fp, #100	; 0x64
   1215c:	mov	r5, r0
   12160:	mov	r0, r4
   12164:	bl	12840 <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	mov	r2, #0
   12170:	movt	r0, #20971	; 0x51eb
   12174:	smmul	r0, r5, r0
   12178:	asr	r1, r0, #5
   1217c:	add	r0, r1, r0, lsr #31
   12180:	mov	r1, #100	; 0x64
   12184:	mls	r5, r0, r1, r5
   12188:	movw	r1, #22628	; 0x5864
   1218c:	mov	r0, r4
   12190:	movt	r1, #1
   12194:	bl	132a8 <table_add_column@@Base>
   12198:	movw	r1, #22631	; 0x5867
   1219c:	mov	r8, r0
   121a0:	mov	r0, r4
   121a4:	mov	r2, #21
   121a8:	movt	r1, #1
   121ac:	bl	132a8 <table_add_column@@Base>
   121b0:	movw	r9, #22755	; 0x58e3
   121b4:	add	r6, r5, #99	; 0x63
   121b8:	mov	sl, r0
   121bc:	mvn	r7, #0
   121c0:	add	r5, sp, #8
   121c4:	movt	r9, #1
   121c8:	add	r7, r7, #1
   121cc:	mov	r0, r5
   121d0:	mov	r1, #255	; 0xff
   121d4:	mov	r2, r9
   121d8:	mov	r3, r7
   121dc:	bl	12004 <snprintf@plt>
   121e0:	mov	r0, r4
   121e4:	bl	13ed0 <table_add_row@@Base>
   121e8:	mov	r0, r4
   121ec:	mov	r1, r7
   121f0:	mov	r2, r8
   121f4:	mov	r3, r7
   121f8:	bl	143cc <table_set_int@@Base>
   121fc:	mov	r0, r4
   12200:	mov	r1, r7
   12204:	mov	r2, sl
   12208:	mov	r3, r5
   1220c:	bl	146f4 <table_set_string@@Base>
   12210:	cmp	r7, r6
   12214:	blt	121c8 <main@@Base+0x98>
   12218:	movw	r6, #34464	; 0x86a0
   1221c:	sub	r5, fp, #100	; 0x64
   12220:	add	r4, sp, #8
   12224:	movt	r6, #1
   12228:	mov	r0, r5
   1222c:	mov	r1, r4
   12230:	mov	r2, r6
   12234:	bl	14784 <table_serialize@@Base>
   12238:	mov	r0, r4
   1223c:	mov	r1, r6
   12240:	bl	14a00 <table_deserialize@@Base>
   12244:	mov	r8, r0
   12248:	mov	r0, r5
   1224c:	bl	13ec8 <table_get_row_length@@Base>
   12250:	mov	r4, r0
   12254:	mov	r0, r8
   12258:	bl	13ec8 <table_get_row_length@@Base>
   1225c:	mov	r5, r0
   12260:	mov	r6, #0
   12264:	cmp	r0, r4
   12268:	str	r4, [sp, #4]
   1226c:	beq	12288 <main@@Base+0x158>
   12270:	ldr	r1, [sp, #4]
   12274:	movw	r0, #22637	; 0x586d
   12278:	mov	r2, r5
   1227c:	movt	r0, #1
   12280:	bl	11f8c <printf@plt>
   12284:	mvn	r6, #0
   12288:	sub	r0, fp, #100	; 0x64
   1228c:	bl	13220 <table_get_column_length@@Base>
   12290:	mov	r7, r0
   12294:	mov	r0, r8
   12298:	bl	13220 <table_get_column_length@@Base>
   1229c:	cmp	r0, r7
   122a0:	bne	127b0 <main@@Base+0x680>
   122a4:	ldr	r0, [sp, #4]
   122a8:	str	r6, [sp]
   122ac:	cmp	r5, r0
   122b0:	bne	127cc <main@@Base+0x69c>
   122b4:	cmp	r5, #1
   122b8:	blt	127cc <main@@Base+0x69c>
   122bc:	mov	r6, #0
   122c0:	sub	r9, fp, #100	; 0x64
   122c4:	cmp	r7, #1
   122c8:	blt	1279c <main@@Base+0x66c>
   122cc:	mov	sl, #0
   122d0:	mov	r0, r9
   122d4:	mov	r1, sl
   122d8:	bl	13294 <table_get_column_data_type@@Base>
   122dc:	cmp	r0, #23
   122e0:	bhi	12770 <main@@Base+0x640>
   122e4:	add	r1, pc, #0
   122e8:	ldr	pc, [r1, r0, lsl #2]
   122ec:	andeq	r2, r1, ip, asr #6
   122f0:	andeq	r2, r1, r4, lsl #7
   122f4:	andeq	r2, r1, ip, lsr #7
   122f8:	ldrdeq	r2, [r1], -r4
   122fc:	strdeq	r2, [r1], -ip
   12300:	andeq	r2, r1, r4, lsr #8
   12304:	andeq	r2, r1, ip, asr #8
   12308:	andeq	r2, r1, r4, ror r4
   1230c:	muleq	r1, ip, r4
   12310:	andeq	r2, r1, r8, asr #9
   12314:	strdeq	r2, [r1], -r4
   12318:	andeq	r2, r1, ip, lsl r5
   1231c:	andeq	r2, r1, r4, asr #10
   12320:	andeq	r2, r1, ip, ror #10
   12324:	muleq	r1, r4, r5
   12328:	andeq	r2, r1, r0, asr #11
   1232c:	strdeq	r2, [r1], -ip
   12330:	andeq	r2, r1, r8, lsr #12
   12334:	andeq	r2, r1, r0, asr r6
   12338:	andeq	r2, r1, r4, lsl #13
   1233c:	andeq	r2, r1, ip, lsr #13
   12340:	ldrdeq	r2, [r1], -r4
   12344:	andeq	r2, r1, r0, lsl r7
   12348:	andeq	r2, r1, r4, asr #14
   1234c:	mov	r0, r9
   12350:	mov	r1, r6
   12354:	mov	r2, sl
   12358:	bl	13c20 <table_get_int@@Base>
   1235c:	mov	r4, r8
   12360:	mov	r8, r0
   12364:	mov	r1, r6
   12368:	mov	r2, sl
   1236c:	mov	r0, r4
   12370:	bl	13c20 <table_get_int@@Base>
   12374:	cmp	r8, r0
   12378:	mov	r8, r4
   1237c:	beq	12770 <main@@Base+0x640>
   12380:	b	12780 <main@@Base+0x650>
   12384:	mov	r0, r9
   12388:	mov	r1, r6
   1238c:	mov	r2, sl
   12390:	bl	13c38 <table_get_uint@@Base>
   12394:	mov	r4, r0
   12398:	mov	r0, r8
   1239c:	mov	r1, r6
   123a0:	mov	r2, sl
   123a4:	bl	13c38 <table_get_uint@@Base>
   123a8:	b	12768 <main@@Base+0x638>
   123ac:	mov	r0, r9
   123b0:	mov	r1, r6
   123b4:	mov	r2, sl
   123b8:	bl	13c50 <table_get_int8@@Base>
   123bc:	mov	r4, r0
   123c0:	mov	r0, r8
   123c4:	mov	r1, r6
   123c8:	mov	r2, sl
   123cc:	bl	13c50 <table_get_int8@@Base>
   123d0:	b	12768 <main@@Base+0x638>
   123d4:	mov	r0, r9
   123d8:	mov	r1, r6
   123dc:	mov	r2, sl
   123e0:	bl	13c68 <table_get_uint8@@Base>
   123e4:	mov	r4, r0
   123e8:	mov	r0, r8
   123ec:	mov	r1, r6
   123f0:	mov	r2, sl
   123f4:	bl	13c68 <table_get_uint8@@Base>
   123f8:	b	12768 <main@@Base+0x638>
   123fc:	mov	r0, r9
   12400:	mov	r1, r6
   12404:	mov	r2, sl
   12408:	bl	13c80 <table_get_int16@@Base>
   1240c:	mov	r4, r0
   12410:	mov	r0, r8
   12414:	mov	r1, r6
   12418:	mov	r2, sl
   1241c:	bl	13c80 <table_get_int16@@Base>
   12420:	b	12768 <main@@Base+0x638>
   12424:	mov	r0, r9
   12428:	mov	r1, r6
   1242c:	mov	r2, sl
   12430:	bl	13c98 <table_get_uint16@@Base>
   12434:	mov	r4, r0
   12438:	mov	r0, r8
   1243c:	mov	r1, r6
   12440:	mov	r2, sl
   12444:	bl	13c98 <table_get_uint16@@Base>
   12448:	b	12768 <main@@Base+0x638>
   1244c:	mov	r0, r9
   12450:	mov	r1, r6
   12454:	mov	r2, sl
   12458:	bl	13cb0 <table_get_int32@@Base>
   1245c:	mov	r4, r0
   12460:	mov	r0, r8
   12464:	mov	r1, r6
   12468:	mov	r2, sl
   1246c:	bl	13cb0 <table_get_int32@@Base>
   12470:	b	12768 <main@@Base+0x638>
   12474:	mov	r0, r9
   12478:	mov	r1, r6
   1247c:	mov	r2, sl
   12480:	bl	13cc8 <table_get_uint32@@Base>
   12484:	mov	r4, r0
   12488:	mov	r0, r8
   1248c:	mov	r1, r6
   12490:	mov	r2, sl
   12494:	bl	13cc8 <table_get_uint32@@Base>
   12498:	b	12768 <main@@Base+0x638>
   1249c:	mov	r0, r9
   124a0:	mov	r1, r6
   124a4:	mov	r2, sl
   124a8:	bl	13ce0 <table_get_int64@@Base>
   124ac:	mov	r4, r0
   124b0:	mov	r5, r1
   124b4:	mov	r0, r8
   124b8:	mov	r1, r6
   124bc:	mov	r2, sl
   124c0:	bl	13ce0 <table_get_int64@@Base>
   124c4:	b	125e8 <main@@Base+0x4b8>
   124c8:	mov	r0, r9
   124cc:	mov	r1, r6
   124d0:	mov	r2, sl
   124d4:	bl	13cf8 <table_get_uint64@@Base>
   124d8:	mov	r4, r0
   124dc:	mov	r5, r1
   124e0:	mov	r0, r8
   124e4:	mov	r1, r6
   124e8:	mov	r2, sl
   124ec:	bl	13cf8 <table_get_uint64@@Base>
   124f0:	b	125e8 <main@@Base+0x4b8>
   124f4:	mov	r0, r9
   124f8:	mov	r1, r6
   124fc:	mov	r2, sl
   12500:	bl	13d10 <table_get_short@@Base>
   12504:	mov	r4, r0
   12508:	mov	r0, r8
   1250c:	mov	r1, r6
   12510:	mov	r2, sl
   12514:	bl	13d10 <table_get_short@@Base>
   12518:	b	12768 <main@@Base+0x638>
   1251c:	mov	r0, r9
   12520:	mov	r1, r6
   12524:	mov	r2, sl
   12528:	bl	13d28 <table_get_ushort@@Base>
   1252c:	mov	r4, r0
   12530:	mov	r0, r8
   12534:	mov	r1, r6
   12538:	mov	r2, sl
   1253c:	bl	13d28 <table_get_ushort@@Base>
   12540:	b	12768 <main@@Base+0x638>
   12544:	mov	r0, r9
   12548:	mov	r1, r6
   1254c:	mov	r2, sl
   12550:	bl	13d40 <table_get_long@@Base>
   12554:	mov	r4, r0
   12558:	mov	r0, r8
   1255c:	mov	r1, r6
   12560:	mov	r2, sl
   12564:	bl	13d40 <table_get_long@@Base>
   12568:	b	12768 <main@@Base+0x638>
   1256c:	mov	r0, r9
   12570:	mov	r1, r6
   12574:	mov	r2, sl
   12578:	bl	13d58 <table_get_ulong@@Base>
   1257c:	mov	r4, r0
   12580:	mov	r0, r8
   12584:	mov	r1, r6
   12588:	mov	r2, sl
   1258c:	bl	13d58 <table_get_ulong@@Base>
   12590:	b	12768 <main@@Base+0x638>
   12594:	mov	r0, r9
   12598:	mov	r1, r6
   1259c:	mov	r2, sl
   125a0:	bl	13d70 <table_get_llong@@Base>
   125a4:	mov	r4, r0
   125a8:	mov	r5, r1
   125ac:	mov	r0, r8
   125b0:	mov	r1, r6
   125b4:	mov	r2, sl
   125b8:	bl	13d70 <table_get_llong@@Base>
   125bc:	b	125e8 <main@@Base+0x4b8>
   125c0:	mov	r0, r9
   125c4:	mov	r1, r6
   125c8:	mov	r2, sl
   125cc:	bl	13d88 <table_get_ullong@@Base>
   125d0:	mov	r4, r0
   125d4:	mov	r5, r1
   125d8:	mov	r0, r8
   125dc:	mov	r1, r6
   125e0:	mov	r2, sl
   125e4:	bl	13d88 <table_get_ullong@@Base>
   125e8:	eor	r1, r5, r1
   125ec:	eor	r0, r4, r0
   125f0:	orrs	r0, r0, r1
   125f4:	beq	12770 <main@@Base+0x640>
   125f8:	b	12780 <main@@Base+0x650>
   125fc:	mov	r0, r9
   12600:	mov	r1, r6
   12604:	mov	r2, sl
   12608:	bl	13da0 <table_get_float@@Base>
   1260c:	mov	r0, r8
   12610:	mov	r1, r6
   12614:	mov	r2, sl
   12618:	vmov.f32	s16, s0
   1261c:	bl	13da0 <table_get_float@@Base>
   12620:	vcmp.f32	s16, s0
   12624:	b	12678 <main@@Base+0x548>
   12628:	mov	r0, r9
   1262c:	mov	r1, r6
   12630:	mov	r2, sl
   12634:	bl	13db8 <table_get_double@@Base>
   12638:	mov	r0, r8
   1263c:	mov	r1, r6
   12640:	mov	r2, sl
   12644:	vmov.f64	d8, d0
   12648:	bl	13db8 <table_get_double@@Base>
   1264c:	b	12674 <main@@Base+0x544>
   12650:	mov	r0, r9
   12654:	mov	r1, r6
   12658:	mov	r2, sl
   1265c:	bl	13dd0 <table_get_ldouble@@Base>
   12660:	mov	r0, r8
   12664:	mov	r1, r6
   12668:	mov	r2, sl
   1266c:	vmov.f64	d8, d0
   12670:	bl	13dd0 <table_get_ldouble@@Base>
   12674:	vcmp.f64	d8, d0
   12678:	vmrs	APSR_nzcv, fpscr
   1267c:	beq	12770 <main@@Base+0x640>
   12680:	b	12780 <main@@Base+0x650>
   12684:	mov	r0, r9
   12688:	mov	r1, r6
   1268c:	mov	r2, sl
   12690:	bl	13de8 <table_get_char@@Base>
   12694:	mov	r4, r0
   12698:	mov	r0, r8
   1269c:	mov	r1, r6
   126a0:	mov	r2, sl
   126a4:	bl	13de8 <table_get_char@@Base>
   126a8:	b	12768 <main@@Base+0x638>
   126ac:	mov	r0, r9
   126b0:	mov	r1, r6
   126b4:	mov	r2, sl
   126b8:	bl	13e00 <table_get_uchar@@Base>
   126bc:	mov	r4, r0
   126c0:	mov	r0, r8
   126c4:	mov	r1, r6
   126c8:	mov	r2, sl
   126cc:	bl	13e00 <table_get_uchar@@Base>
   126d0:	b	12768 <main@@Base+0x638>
   126d4:	mov	r0, r9
   126d8:	mov	r1, r6
   126dc:	mov	r2, sl
   126e0:	bl	13e18 <table_get_string@@Base>
   126e4:	mov	r4, r0
   126e8:	mov	r0, r8
   126ec:	mov	r1, r6
   126f0:	mov	r2, sl
   126f4:	bl	13e18 <table_get_string@@Base>
   126f8:	mov	r1, r0
   126fc:	mov	r0, r4
   12700:	bl	11f80 <strcmp@plt>
   12704:	cmp	r0, #0
   12708:	beq	12770 <main@@Base+0x640>
   1270c:	b	12780 <main@@Base+0x650>
   12710:	mov	r0, r9
   12714:	mov	r1, r6
   12718:	mov	r2, sl
   1271c:	bl	13c08 <table_get_bool@@Base>
   12720:	mov	r4, r0
   12724:	mov	r0, r8
   12728:	mov	r1, r6
   1272c:	mov	r2, sl
   12730:	bl	13c08 <table_get_bool@@Base>
   12734:	eor	r0, r4, r0
   12738:	cmp	r0, #1
   1273c:	bne	12770 <main@@Base+0x640>
   12740:	b	12780 <main@@Base+0x650>
   12744:	mov	r0, r9
   12748:	mov	r1, r6
   1274c:	mov	r2, sl
   12750:	bl	13e2c <table_get_ptr@@Base>
   12754:	mov	r4, r0
   12758:	mov	r0, r8
   1275c:	mov	r1, r6
   12760:	mov	r2, sl
   12764:	bl	13e2c <table_get_ptr@@Base>
   12768:	cmp	r4, r0
   1276c:	bne	12780 <main@@Base+0x650>
   12770:	add	sl, sl, #1
   12774:	cmp	sl, r7
   12778:	blt	122d0 <main@@Base+0x1a0>
   1277c:	b	1279c <main@@Base+0x66c>
   12780:	movw	r0, #22758	; 0x58e6
   12784:	mov	r1, r6
   12788:	mov	r2, sl
   1278c:	movt	r0, #1
   12790:	bl	11f8c <printf@plt>
   12794:	mvn	r0, #0
   12798:	str	r0, [sp]
   1279c:	ldr	r0, [sp, #4]
   127a0:	add	r6, r6, #1
   127a4:	cmp	r6, r0
   127a8:	bne	122c4 <main@@Base+0x194>
   127ac:	b	127cc <main@@Base+0x69c>
   127b0:	mov	r2, r0
   127b4:	movw	r0, #22696	; 0x58a8
   127b8:	mov	r1, r7
   127bc:	movt	r0, #1
   127c0:	bl	11f8c <printf@plt>
   127c4:	mvn	r0, #0
   127c8:	str	r0, [sp]
   127cc:	sub	r0, fp, #100	; 0x64
   127d0:	bl	1289c <table_destroy@@Base>
   127d4:	mov	r0, r8
   127d8:	bl	12880 <table_delete@@Base>
   127dc:	ldr	r0, [sp]
   127e0:	sub	sp, fp, #40	; 0x28
   127e4:	vpop	{d8}
   127e8:	add	sp, sp, #4
   127ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127f0 <table_new@@Base>:
   127f0:	push	{fp, lr}
   127f4:	mov	fp, sp
   127f8:	mov	r0, #56	; 0x38
   127fc:	bl	11fc8 <malloc@plt>
   12800:	mov	r1, #0
   12804:	mov	r2, #10
   12808:	mov	r3, #20
   1280c:	vmov.i32	q8, #0	; 0x00000000
   12810:	str	r1, [r0]
   12814:	stmib	r0, {r1, r2}
   12818:	str	r1, [r0, #12]
   1281c:	str	r1, [r0, #16]
   12820:	str	r1, [r0, #20]
   12824:	str	r3, [r0, #24]
   12828:	str	r1, [r0, #28]
   1282c:	str	r2, [r0, #48]	; 0x30
   12830:	str	r1, [r0, #52]	; 0x34
   12834:	add	r1, r0, #32
   12838:	vst1.32	{d16-d17}, [r1]
   1283c:	pop	{fp, pc}

00012840 <table_init@@Base>:
   12840:	mov	r1, #0
   12844:	mov	r2, #10
   12848:	mov	r3, #20
   1284c:	vmov.i32	q8, #0	; 0x00000000
   12850:	str	r1, [r0]
   12854:	stmib	r0, {r1, r2}
   12858:	str	r1, [r0, #12]
   1285c:	str	r1, [r0, #16]
   12860:	str	r1, [r0, #20]
   12864:	str	r3, [r0, #24]
   12868:	str	r1, [r0, #28]
   1286c:	str	r2, [r0, #48]	; 0x30
   12870:	str	r1, [r0, #52]	; 0x34
   12874:	add	r0, r0, #32
   12878:	vst1.32	{d16-d17}, [r0]
   1287c:	bx	lr

00012880 <table_delete@@Base>:
   12880:	push	{r4, sl, fp, lr}
   12884:	add	fp, sp, #8
   12888:	mov	r4, r0
   1288c:	bl	1289c <table_destroy@@Base>
   12890:	mov	r0, r4
   12894:	pop	{r4, sl, fp, lr}
   12898:	b	11f98 <free@plt>

0001289c <table_destroy@@Base>:
   1289c:	cmp	r0, #0
   128a0:	bxeq	lr
   128a4:	push	{r4, r5, r6, sl, fp, lr}
   128a8:	add	fp, sp, #16
   128ac:	mvn	r1, #0
   128b0:	mvn	r2, #0
   128b4:	mov	r3, #64	; 0x40
   128b8:	mov	r4, r0
   128bc:	bl	1312c <table_notify@@Base>
   128c0:	mov	r0, r4
   128c4:	bl	13ec8 <table_get_row_length@@Base>
   128c8:	cmp	r0, #1
   128cc:	blt	128f0 <table_destroy@@Base+0x54>
   128d0:	mov	r5, r0
   128d4:	mov	r6, #0
   128d8:	mov	r0, r4
   128dc:	mov	r1, r6
   128e0:	bl	13e70 <table_row_destroy@@Base>
   128e4:	add	r6, r6, #1
   128e8:	cmp	r5, r6
   128ec:	bne	128d8 <table_destroy@@Base+0x3c>
   128f0:	ldr	r0, [r4, #16]
   128f4:	cmp	r0, #0
   128f8:	beq	12900 <table_destroy@@Base+0x64>
   128fc:	bl	11f98 <free@plt>
   12900:	mov	r0, r4
   12904:	bl	13220 <table_get_column_length@@Base>
   12908:	cmp	r0, #1
   1290c:	blt	12930 <table_destroy@@Base+0x94>
   12910:	mov	r5, r0
   12914:	mov	r6, #0
   12918:	mov	r0, r4
   1291c:	mov	r1, r6
   12920:	bl	13208 <table_column_destroy@@Base>
   12924:	add	r6, r6, #1
   12928:	cmp	r5, r6
   1292c:	bne	12918 <table_destroy@@Base+0x7c>
   12930:	ldr	r0, [r4]
   12934:	cmp	r0, #0
   12938:	beq	12940 <table_destroy@@Base+0xa4>
   1293c:	bl	11f98 <free@plt>
   12940:	ldr	r0, [r4, #36]	; 0x24
   12944:	cmp	r0, #0
   12948:	beq	12950 <table_destroy@@Base+0xb4>
   1294c:	bl	11f98 <free@plt>
   12950:	ldr	r0, [r4, #40]	; 0x28
   12954:	cmp	r0, #0
   12958:	beq	12960 <table_destroy@@Base+0xc4>
   1295c:	bl	11f98 <free@plt>
   12960:	ldr	r0, [r4, #44]	; 0x2c
   12964:	cmp	r0, #0
   12968:	pop	{r4, r5, r6, sl, fp, lr}
   1296c:	beq	12974 <table_destroy@@Base+0xd8>
   12970:	b	11f98 <free@plt>
   12974:	bx	lr

00012978 <table_dupe@@Base>:
   12978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1297c:	add	fp, sp, #28
   12980:	sub	sp, sp, #12
   12984:	mov	r4, r0
   12988:	bl	13ec8 <table_get_row_length@@Base>
   1298c:	mov	r8, r0
   12990:	mov	r0, r4
   12994:	bl	13220 <table_get_column_length@@Base>
   12998:	mov	r6, r0
   1299c:	mov	r0, #56	; 0x38
   129a0:	bl	11fc8 <malloc@plt>
   129a4:	mov	sl, r0
   129a8:	mov	r5, #0
   129ac:	mov	r0, #10
   129b0:	mov	r1, #20
   129b4:	cmp	r6, #1
   129b8:	vmov.i32	q8, #0	; 0x00000000
   129bc:	str	r5, [sl]
   129c0:	str	r5, [sl, #4]
   129c4:	str	r0, [sl, #8]
   129c8:	str	r5, [sl, #12]
   129cc:	str	r5, [sl, #16]
   129d0:	str	r5, [sl, #20]
   129d4:	str	r1, [sl, #24]
   129d8:	str	r5, [sl, #28]
   129dc:	str	r0, [sl, #48]	; 0x30
   129e0:	add	r0, sl, #32
   129e4:	str	r5, [sl, #52]	; 0x34
   129e8:	vst1.32	{d16-d17}, [r0]
   129ec:	blt	12a28 <table_dupe@@Base+0xb0>
   129f0:	mov	r0, r4
   129f4:	mov	r1, r5
   129f8:	bl	13284 <table_get_column_name@@Base>
   129fc:	mov	r7, r0
   12a00:	mov	r0, r4
   12a04:	mov	r1, r5
   12a08:	bl	13294 <table_get_column_data_type@@Base>
   12a0c:	mov	r2, r0
   12a10:	mov	r0, sl
   12a14:	mov	r1, r7
   12a18:	bl	132a8 <table_add_column@@Base>
   12a1c:	add	r5, r5, #1
   12a20:	cmp	r6, r5
   12a24:	bne	129f0 <table_dupe@@Base+0x78>
   12a28:	cmp	r8, #1
   12a2c:	blt	12e94 <table_dupe@@Base+0x51c>
   12a30:	mov	r5, #0
   12a34:	add	r9, sp, #8
   12a38:	mov	r0, sl
   12a3c:	bl	13ed0 <table_add_row@@Base>
   12a40:	cmp	r6, #1
   12a44:	blt	12e88 <table_dupe@@Base+0x510>
   12a48:	mov	r7, #0
   12a4c:	mov	r0, r4
   12a50:	mov	r1, r7
   12a54:	bl	13294 <table_get_column_data_type@@Base>
   12a58:	cmp	r0, #23
   12a5c:	bhi	12e7c <table_dupe@@Base+0x504>
   12a60:	add	r1, pc, #0
   12a64:	ldr	pc, [r1, r0, lsl #2]
   12a68:	andeq	r2, r1, r8, asr #21
   12a6c:	strdeq	r2, [r1], -r0
   12a70:	andeq	r2, r1, r8, lsl fp
   12a74:	andeq	r2, r1, r0, asr #22
   12a78:	andeq	r2, r1, r8, ror #22
   12a7c:	muleq	r1, r0, fp
   12a80:			; <UNDEFINED> instruction: 0x00012bb8
   12a84:	andeq	r2, r1, r0, ror #23
   12a88:	andeq	r2, r1, r8, lsl #24
   12a8c:	andeq	r2, r1, r0, lsr ip
   12a90:	andeq	r2, r1, r8, asr ip
   12a94:	andeq	r2, r1, r0, lsl #25
   12a98:	andeq	r2, r1, r8, lsr #25
   12a9c:	ldrdeq	r2, [r1], -r0
   12aa0:	strdeq	r2, [r1], -r8
   12aa4:	andeq	r2, r1, r0, lsr #26
   12aa8:	andeq	r2, r1, r8, asr #26
   12aac:	andeq	r2, r1, ip, ror #26
   12ab0:	muleq	r1, r0, sp
   12ab4:			; <UNDEFINED> instruction: 0x00012db4
   12ab8:	ldrdeq	r2, [r1], -ip
   12abc:	andeq	r2, r1, r4, lsl #28
   12ac0:	andeq	r2, r1, ip, lsr #28
   12ac4:	andeq	r2, r1, r4, asr lr
   12ac8:	mov	r0, r4
   12acc:	mov	r1, r5
   12ad0:	mov	r2, r7
   12ad4:	bl	13c20 <table_get_int@@Base>
   12ad8:	mov	r3, r0
   12adc:	mov	r0, sl
   12ae0:	mov	r1, r5
   12ae4:	mov	r2, r7
   12ae8:	bl	143cc <table_set_int@@Base>
   12aec:	b	12e7c <table_dupe@@Base+0x504>
   12af0:	mov	r0, r4
   12af4:	mov	r1, r5
   12af8:	mov	r2, r7
   12afc:	bl	13c38 <table_get_uint@@Base>
   12b00:	mov	r3, r0
   12b04:	mov	r0, sl
   12b08:	mov	r1, r5
   12b0c:	mov	r2, r7
   12b10:	bl	143f4 <table_set_uint@@Base>
   12b14:	b	12e7c <table_dupe@@Base+0x504>
   12b18:	mov	r0, r4
   12b1c:	mov	r1, r5
   12b20:	mov	r2, r7
   12b24:	bl	13c50 <table_get_int8@@Base>
   12b28:	mov	r3, r0
   12b2c:	mov	r0, sl
   12b30:	mov	r1, r5
   12b34:	mov	r2, r7
   12b38:	bl	1441c <table_set_int8@@Base>
   12b3c:	b	12e7c <table_dupe@@Base+0x504>
   12b40:	mov	r0, r4
   12b44:	mov	r1, r5
   12b48:	mov	r2, r7
   12b4c:	bl	13c68 <table_get_uint8@@Base>
   12b50:	mov	r3, r0
   12b54:	mov	r0, sl
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r7
   12b60:	bl	14444 <table_set_uint8@@Base>
   12b64:	b	12e7c <table_dupe@@Base+0x504>
   12b68:	mov	r0, r4
   12b6c:	mov	r1, r5
   12b70:	mov	r2, r7
   12b74:	bl	13c80 <table_get_int16@@Base>
   12b78:	mov	r3, r0
   12b7c:	mov	r0, sl
   12b80:	mov	r1, r5
   12b84:	mov	r2, r7
   12b88:	bl	1446c <table_set_int16@@Base>
   12b8c:	b	12e7c <table_dupe@@Base+0x504>
   12b90:	mov	r0, r4
   12b94:	mov	r1, r5
   12b98:	mov	r2, r7
   12b9c:	bl	13c98 <table_get_uint16@@Base>
   12ba0:	mov	r3, r0
   12ba4:	mov	r0, sl
   12ba8:	mov	r1, r5
   12bac:	mov	r2, r7
   12bb0:	bl	14494 <table_set_uint16@@Base>
   12bb4:	b	12e7c <table_dupe@@Base+0x504>
   12bb8:	mov	r0, r4
   12bbc:	mov	r1, r5
   12bc0:	mov	r2, r7
   12bc4:	bl	13cb0 <table_get_int32@@Base>
   12bc8:	mov	r3, r0
   12bcc:	mov	r0, sl
   12bd0:	mov	r1, r5
   12bd4:	mov	r2, r7
   12bd8:	bl	144bc <table_set_int32@@Base>
   12bdc:	b	12e7c <table_dupe@@Base+0x504>
   12be0:	mov	r0, r4
   12be4:	mov	r1, r5
   12be8:	mov	r2, r7
   12bec:	bl	13cc8 <table_get_uint32@@Base>
   12bf0:	mov	r3, r0
   12bf4:	mov	r0, sl
   12bf8:	mov	r1, r5
   12bfc:	mov	r2, r7
   12c00:	bl	144e4 <table_set_uint32@@Base>
   12c04:	b	12e7c <table_dupe@@Base+0x504>
   12c08:	mov	r0, r4
   12c0c:	mov	r1, r5
   12c10:	mov	r2, r7
   12c14:	bl	13ce0 <table_get_int64@@Base>
   12c18:	stm	sp, {r0, r1}
   12c1c:	mov	r0, sl
   12c20:	mov	r1, r5
   12c24:	mov	r2, r7
   12c28:	bl	1450c <table_set_int64@@Base>
   12c2c:	b	12e7c <table_dupe@@Base+0x504>
   12c30:	mov	r0, r4
   12c34:	mov	r1, r5
   12c38:	mov	r2, r7
   12c3c:	bl	13cf8 <table_get_uint64@@Base>
   12c40:	stm	sp, {r0, r1}
   12c44:	mov	r0, sl
   12c48:	mov	r1, r5
   12c4c:	mov	r2, r7
   12c50:	bl	14540 <table_set_uint64@@Base>
   12c54:	b	12e7c <table_dupe@@Base+0x504>
   12c58:	mov	r0, r4
   12c5c:	mov	r1, r5
   12c60:	mov	r2, r7
   12c64:	bl	13d10 <table_get_short@@Base>
   12c68:	mov	r3, r0
   12c6c:	mov	r0, sl
   12c70:	mov	r1, r5
   12c74:	mov	r2, r7
   12c78:	bl	14574 <table_set_short@@Base>
   12c7c:	b	12e7c <table_dupe@@Base+0x504>
   12c80:	mov	r0, r4
   12c84:	mov	r1, r5
   12c88:	mov	r2, r7
   12c8c:	bl	13d28 <table_get_ushort@@Base>
   12c90:	mov	r3, r0
   12c94:	mov	r0, sl
   12c98:	mov	r1, r5
   12c9c:	mov	r2, r7
   12ca0:	bl	1459c <table_set_ushort@@Base>
   12ca4:	b	12e7c <table_dupe@@Base+0x504>
   12ca8:	mov	r0, r4
   12cac:	mov	r1, r5
   12cb0:	mov	r2, r7
   12cb4:	bl	13d40 <table_get_long@@Base>
   12cb8:	mov	r3, r0
   12cbc:	mov	r0, sl
   12cc0:	mov	r1, r5
   12cc4:	mov	r2, r7
   12cc8:	bl	145c4 <table_set_long@@Base>
   12ccc:	b	12e7c <table_dupe@@Base+0x504>
   12cd0:	mov	r0, r4
   12cd4:	mov	r1, r5
   12cd8:	mov	r2, r7
   12cdc:	bl	13d58 <table_get_ulong@@Base>
   12ce0:	mov	r3, r0
   12ce4:	mov	r0, sl
   12ce8:	mov	r1, r5
   12cec:	mov	r2, r7
   12cf0:	bl	145ec <table_set_ulong@@Base>
   12cf4:	b	12e7c <table_dupe@@Base+0x504>
   12cf8:	mov	r0, r4
   12cfc:	mov	r1, r5
   12d00:	mov	r2, r7
   12d04:	bl	13d70 <table_get_llong@@Base>
   12d08:	stm	sp, {r0, r1}
   12d0c:	mov	r0, sl
   12d10:	mov	r1, r5
   12d14:	mov	r2, r7
   12d18:	bl	14614 <table_set_llong@@Base>
   12d1c:	b	12e7c <table_dupe@@Base+0x504>
   12d20:	mov	r0, r4
   12d24:	mov	r1, r5
   12d28:	mov	r2, r7
   12d2c:	bl	13d88 <table_get_ullong@@Base>
   12d30:	stm	sp, {r0, r1}
   12d34:	mov	r0, sl
   12d38:	mov	r1, r5
   12d3c:	mov	r2, r7
   12d40:	bl	14648 <table_set_ullong@@Base>
   12d44:	b	12e7c <table_dupe@@Base+0x504>
   12d48:	mov	r0, r4
   12d4c:	mov	r1, r5
   12d50:	mov	r2, r7
   12d54:	bl	13da0 <table_get_float@@Base>
   12d58:	mov	r0, sl
   12d5c:	mov	r1, r5
   12d60:	mov	r2, r7
   12d64:	bl	1467c <table_set_float@@Base>
   12d68:	b	12e7c <table_dupe@@Base+0x504>
   12d6c:	mov	r0, r4
   12d70:	mov	r1, r5
   12d74:	mov	r2, r7
   12d78:	bl	13db8 <table_get_double@@Base>
   12d7c:	mov	r0, sl
   12d80:	mov	r1, r5
   12d84:	mov	r2, r7
   12d88:	bl	146a4 <table_set_double@@Base>
   12d8c:	b	12e7c <table_dupe@@Base+0x504>
   12d90:	mov	r0, r4
   12d94:	mov	r1, r5
   12d98:	mov	r2, r7
   12d9c:	bl	13dd0 <table_get_ldouble@@Base>
   12da0:	mov	r0, sl
   12da4:	mov	r1, r5
   12da8:	mov	r2, r7
   12dac:	bl	146cc <table_set_ldouble@@Base>
   12db0:	b	12e7c <table_dupe@@Base+0x504>
   12db4:	mov	r0, r4
   12db8:	mov	r1, r5
   12dbc:	mov	r2, r7
   12dc0:	bl	13de8 <table_get_char@@Base>
   12dc4:	mov	r3, r0
   12dc8:	mov	r0, sl
   12dcc:	mov	r1, r5
   12dd0:	mov	r2, r7
   12dd4:	bl	14714 <table_set_char@@Base>
   12dd8:	b	12e7c <table_dupe@@Base+0x504>
   12ddc:	mov	r0, r4
   12de0:	mov	r1, r5
   12de4:	mov	r2, r7
   12de8:	bl	13e00 <table_get_uchar@@Base>
   12dec:	mov	r3, r0
   12df0:	mov	r0, sl
   12df4:	mov	r1, r5
   12df8:	mov	r2, r7
   12dfc:	bl	1473c <table_set_uchar@@Base>
   12e00:	b	12e7c <table_dupe@@Base+0x504>
   12e04:	mov	r0, r4
   12e08:	mov	r1, r5
   12e0c:	mov	r2, r7
   12e10:	bl	13e18 <table_get_string@@Base>
   12e14:	mov	r3, r0
   12e18:	mov	r0, sl
   12e1c:	mov	r1, r5
   12e20:	mov	r2, r7
   12e24:	bl	146f4 <table_set_string@@Base>
   12e28:	b	12e7c <table_dupe@@Base+0x504>
   12e2c:	mov	r0, r4
   12e30:	mov	r1, r5
   12e34:	mov	r2, r7
   12e38:	bl	13c08 <table_get_bool@@Base>
   12e3c:	mov	r3, r0
   12e40:	mov	r0, sl
   12e44:	mov	r1, r5
   12e48:	mov	r2, r7
   12e4c:	bl	143a4 <table_set_bool@@Base>
   12e50:	b	12e7c <table_dupe@@Base+0x504>
   12e54:	mov	r0, r4
   12e58:	mov	r1, r5
   12e5c:	mov	r2, r7
   12e60:	bl	13e2c <table_get_ptr@@Base>
   12e64:	str	r0, [sp, #8]
   12e68:	mov	r0, sl
   12e6c:	mov	r1, r5
   12e70:	mov	r2, r7
   12e74:	mov	r3, r9
   12e78:	bl	14764 <table_set_ptr@@Base>
   12e7c:	add	r7, r7, #1
   12e80:	cmp	r6, r7
   12e84:	bne	12a4c <table_dupe@@Base+0xd4>
   12e88:	add	r5, r5, #1
   12e8c:	cmp	r5, r8
   12e90:	bne	12a38 <table_dupe@@Base+0xc0>
   12e94:	mov	r0, sl
   12e98:	sub	sp, fp, #28
   12e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ea0 <table_get_major_version@@Base>:
   12ea0:	mov	r0, #0
   12ea4:	bx	lr

00012ea8 <table_get_minor_version@@Base>:
   12ea8:	mov	r0, #0
   12eac:	bx	lr

00012eb0 <table_get_patch_version@@Base>:
   12eb0:	mov	r0, #0
   12eb4:	bx	lr

00012eb8 <table_get_version@@Base>:
   12eb8:	movw	r0, #22809	; 0x5919
   12ebc:	movt	r0, #1
   12ec0:	bx	lr

00012ec4 <table_get_callback_length@@Base>:
   12ec4:	ldr	r0, [r0, #32]
   12ec8:	bx	lr

00012ecc <table_register_callback@@Base>:
   12ecc:	push	{r4, r5, r6, r7, fp, lr}
   12ed0:	add	fp, sp, #16
   12ed4:	mov	r5, r0
   12ed8:	ldr	r0, [r0, #32]
   12edc:	mov	r4, r3
   12ee0:	mov	r6, r2
   12ee4:	mov	r7, r1
   12ee8:	cmp	r0, #1
   12eec:	blt	12f20 <table_register_callback@@Base+0x54>
   12ef0:	ldr	r2, [r5, #36]	; 0x24
   12ef4:	mov	r1, #0
   12ef8:	ldr	r3, [r2, r1, lsl #2]
   12efc:	cmp	r3, r7
   12f00:	bne	12f14 <table_register_callback@@Base+0x48>
   12f04:	ldr	r3, [r5, #40]	; 0x28
   12f08:	ldr	r3, [r3, r1, lsl #2]
   12f0c:	cmp	r3, r6
   12f10:	beq	12fa4 <table_register_callback@@Base+0xd8>
   12f14:	add	r1, r1, #1
   12f18:	cmp	r1, r0
   12f1c:	blt	12ef8 <table_register_callback@@Base+0x2c>
   12f20:	ldr	r1, [r5, #48]	; 0x30
   12f24:	udiv	r2, r0, r1
   12f28:	mls	r2, r2, r1, r0
   12f2c:	cmp	r2, #0
   12f30:	bne	12f7c <table_register_callback@@Base+0xb0>
   12f34:	ldr	r2, [r5, #52]	; 0x34
   12f38:	ldr	r0, [r5, #36]	; 0x24
   12f3c:	add	r1, r2, r1
   12f40:	str	r1, [r5, #52]	; 0x34
   12f44:	lsl	r1, r1, #2
   12f48:	bl	11fb0 <realloc@plt>
   12f4c:	str	r0, [r5, #36]	; 0x24
   12f50:	ldr	r1, [r5, #52]	; 0x34
   12f54:	ldr	r0, [r5, #40]	; 0x28
   12f58:	lsl	r1, r1, #2
   12f5c:	bl	11fb0 <realloc@plt>
   12f60:	str	r0, [r5, #40]	; 0x28
   12f64:	ldr	r1, [r5, #52]	; 0x34
   12f68:	ldr	r0, [r5, #44]	; 0x2c
   12f6c:	lsl	r1, r1, #2
   12f70:	bl	11fb0 <realloc@plt>
   12f74:	str	r0, [r5, #44]	; 0x2c
   12f78:	ldr	r0, [r5, #32]
   12f7c:	ldr	r1, [r5, #36]	; 0x24
   12f80:	str	r7, [r1, r0, lsl #2]
   12f84:	ldr	r1, [r5, #40]	; 0x28
   12f88:	str	r6, [r1, r0, lsl #2]
   12f8c:	ldr	r1, [r5, #44]	; 0x2c
   12f90:	str	r4, [r1, r0, lsl #2]
   12f94:	ldr	r0, [r5, #32]
   12f98:	add	r0, r0, #1
   12f9c:	str	r0, [r5, #32]
   12fa0:	pop	{r4, r5, r6, r7, fp, pc}
   12fa4:	cmp	r1, #0
   12fa8:	ldrne	r0, [r5, #44]	; 0x2c
   12fac:	ldrne	r2, [r0, r1, lsl #2]
   12fb0:	orrne	r2, r2, r4
   12fb4:	strne	r2, [r0, r1, lsl #2]
   12fb8:	popne	{r4, r5, r6, r7, fp, pc}
   12fbc:	b	12f20 <table_register_callback@@Base+0x54>

00012fc0 <table_unregister_callback@@Base>:
   12fc0:	push	{r4, r5, r6, sl, fp, lr}
   12fc4:	add	fp, sp, #16
   12fc8:	ldr	r4, [r0, #32]
   12fcc:	cmp	r4, #1
   12fd0:	blt	13008 <table_unregister_callback@@Base+0x48>
   12fd4:	ldr	r3, [r0, #36]	; 0x24
   12fd8:	mov	r6, r0
   12fdc:	mov	r0, #0
   12fe0:	ldr	r5, [r3, r0, lsl #2]
   12fe4:	cmp	r5, r1
   12fe8:	bne	12ffc <table_unregister_callback@@Base+0x3c>
   12fec:	ldr	r5, [r6, #40]	; 0x28
   12ff0:	ldr	r5, [r5, r0, lsl #2]
   12ff4:	cmp	r5, r2
   12ff8:	beq	1300c <table_unregister_callback@@Base+0x4c>
   12ffc:	add	r0, r0, #1
   13000:	cmp	r0, r4
   13004:	blt	12fe0 <table_unregister_callback@@Base+0x20>
   13008:	pop	{r4, r5, r6, sl, fp, pc}
   1300c:	sub	r1, r4, #1
   13010:	cmp	r0, r1
   13014:	bge	130a4 <table_unregister_callback@@Base+0xe4>
   13018:	add	r1, r3, r0, lsl #2
   1301c:	ldr	r1, [r1, #4]
   13020:	str	r1, [r3, r0, lsl #2]
   13024:	ldr	r1, [r6, #40]	; 0x28
   13028:	add	r2, r1, r0, lsl #2
   1302c:	ldr	r2, [r2, #4]
   13030:	str	r2, [r1, r0, lsl #2]
   13034:	ldr	r1, [r6, #44]	; 0x2c
   13038:	add	r2, r1, r0, lsl #2
   1303c:	ldr	r2, [r2, #4]
   13040:	str	r2, [r1, r0, lsl #2]
   13044:	add	r2, r0, #1
   13048:	ldr	r1, [r6, #32]
   1304c:	sub	r1, r1, #1
   13050:	cmp	r2, r1
   13054:	bge	130a4 <table_unregister_callback@@Base+0xe4>
   13058:	ldr	r1, [r6, #36]	; 0x24
   1305c:	add	r1, r1, r0, lsl #2
   13060:	ldr	r2, [r1, #8]
   13064:	str	r2, [r1, #4]
   13068:	ldr	r1, [r6, #40]	; 0x28
   1306c:	add	r1, r1, r0, lsl #2
   13070:	ldr	r2, [r1, #8]
   13074:	str	r2, [r1, #4]
   13078:	ldr	r1, [r6, #44]	; 0x2c
   1307c:	add	r1, r1, r0, lsl #2
   13080:	ldr	r2, [r1, #8]
   13084:	str	r2, [r1, #4]
   13088:	add	r2, r0, #1
   1308c:	add	r0, r0, #2
   13090:	ldr	r1, [r6, #32]
   13094:	sub	r1, r1, #1
   13098:	cmp	r0, r1
   1309c:	mov	r0, r2
   130a0:	blt	13058 <table_unregister_callback@@Base+0x98>
   130a4:	str	r1, [r6, #32]
   130a8:	ldr	r2, [r6, #48]	; 0x30
   130ac:	udiv	r0, r1, r2
   130b0:	mls	r0, r0, r2, r1
   130b4:	cmp	r0, #0
   130b8:	popne	{r4, r5, r6, sl, fp, pc}
   130bc:	ldr	r1, [r6, #52]	; 0x34
   130c0:	ldr	r0, [r6, #36]	; 0x24
   130c4:	subs	r1, r1, r2
   130c8:	str	r1, [r6, #52]	; 0x34
   130cc:	beq	13104 <table_unregister_callback@@Base+0x144>
   130d0:	lsl	r1, r1, #2
   130d4:	bl	11fb0 <realloc@plt>
   130d8:	str	r0, [r6, #36]	; 0x24
   130dc:	ldr	r1, [r6, #52]	; 0x34
   130e0:	ldr	r0, [r6, #40]	; 0x28
   130e4:	lsl	r1, r1, #2
   130e8:	bl	11fb0 <realloc@plt>
   130ec:	str	r0, [r6, #40]	; 0x28
   130f0:	ldr	r1, [r6, #52]	; 0x34
   130f4:	ldr	r0, [r6, #44]	; 0x2c
   130f8:	lsl	r1, r1, #2
   130fc:	bl	11fb0 <realloc@plt>
   13100:	b	13124 <table_unregister_callback@@Base+0x164>
   13104:	bl	11f98 <free@plt>
   13108:	ldr	r0, [r6, #40]	; 0x28
   1310c:	bl	11f98 <free@plt>
   13110:	ldr	r0, [r6, #44]	; 0x2c
   13114:	bl	11f98 <free@plt>
   13118:	mov	r0, #0
   1311c:	str	r0, [r6, #36]	; 0x24
   13120:	str	r0, [r6, #40]	; 0x28
   13124:	str	r0, [r6, #44]	; 0x2c
   13128:	pop	{r4, r5, r6, sl, fp, pc}

0001312c <table_notify@@Base>:
   1312c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13130:	add	fp, sp, #24
   13134:	sub	sp, sp, #8
   13138:	mov	r7, r0
   1313c:	ldr	r0, [r0, #32]
   13140:	cmp	r0, #1
   13144:	blt	131a0 <table_notify@@Base+0x74>
   13148:	mov	r4, r3
   1314c:	mov	r8, r2
   13150:	mov	r9, r1
   13154:	mov	r5, #0
   13158:	ldr	r1, [r7, #44]	; 0x2c
   1315c:	ldr	r1, [r1, r5, lsl #2]
   13160:	tst	r1, r4
   13164:	beq	13194 <table_notify@@Base+0x68>
   13168:	ldr	r0, [r7, #36]	; 0x24
   1316c:	ldr	r1, [r7, #40]	; 0x28
   13170:	mov	r2, r8
   13174:	mov	r3, r4
   13178:	ldr	r6, [r0, r5, lsl #2]
   1317c:	ldr	r0, [r1, r5, lsl #2]
   13180:	mov	r1, r9
   13184:	str	r0, [sp]
   13188:	mov	r0, r7
   1318c:	blx	r6
   13190:	ldr	r0, [r7, #32]
   13194:	add	r5, r5, #1
   13198:	cmp	r5, r0
   1319c:	blt	13158 <table_notify@@Base+0x2c>
   131a0:	sub	sp, fp, #24
   131a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000131a8 <table_column_init@@Base>:
   131a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131ac:	add	fp, sp, #24
   131b0:	ldr	r7, [r0]
   131b4:	mov	r0, r2
   131b8:	mov	r4, r3
   131bc:	mov	r5, r2
   131c0:	mov	r6, r1
   131c4:	bl	11fec <strlen@plt>
   131c8:	add	r0, r0, #1
   131cc:	bl	11fc8 <malloc@plt>
   131d0:	ldr	r8, [fp, #8]
   131d4:	add	r6, r6, r6, lsl #1
   131d8:	cmp	r0, #0
   131dc:	str	r0, [r7, r6, lsl #2]
   131e0:	beq	131ec <table_column_init@@Base+0x44>
   131e4:	mov	r1, r5
   131e8:	bl	11fbc <strcpy@plt>
   131ec:	add	r0, r7, r6, lsl #2
   131f0:	stmib	r0, {r4, r8}
   131f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000131f8 <table_get_col_ptr@@Base>:
   131f8:	ldr	r0, [r0]
   131fc:	add	r1, r1, r1, lsl #1
   13200:	add	r0, r0, r1, lsl #2
   13204:	bx	lr

00013208 <table_column_destroy@@Base>:
   13208:	ldr	r0, [r0]
   1320c:	add	r1, r1, r1, lsl #1
   13210:	ldr	r0, [r0, r1, lsl #2]
   13214:	cmp	r0, #0
   13218:	bxeq	lr
   1321c:	b	11f98 <free@plt>

00013220 <table_get_column_length@@Base>:
   13220:	ldr	r0, [r0, #4]
   13224:	bx	lr

00013228 <table_get_column@@Base>:
   13228:	push	{r4, r5, r6, r7, fp, lr}
   1322c:	add	fp, sp, #16
   13230:	ldr	r6, [r0, #4]
   13234:	cmp	r6, #1
   13238:	blt	13270 <table_get_column@@Base+0x48>
   1323c:	ldr	r7, [r0]
   13240:	mov	r5, r1
   13244:	mov	r4, #0
   13248:	ldr	r0, [r7]
   1324c:	mov	r1, r5
   13250:	bl	11f80 <strcmp@plt>
   13254:	cmp	r0, #0
   13258:	beq	13274 <table_get_column@@Base+0x4c>
   1325c:	add	r4, r4, #1
   13260:	add	r7, r7, #12
   13264:	cmp	r4, r6
   13268:	blt	13248 <table_get_column@@Base+0x20>
   1326c:	b	13274 <table_get_column@@Base+0x4c>
   13270:	mov	r4, #0
   13274:	cmp	r4, r6
   13278:	mvneq	r4, #0
   1327c:	mov	r0, r4
   13280:	pop	{r4, r5, r6, r7, fp, pc}

00013284 <table_get_column_name@@Base>:
   13284:	ldr	r0, [r0]
   13288:	add	r1, r1, r1, lsl #1
   1328c:	ldr	r0, [r0, r1, lsl #2]
   13290:	bx	lr

00013294 <table_get_column_data_type@@Base>:
   13294:	ldr	r0, [r0]
   13298:	add	r1, r1, r1, lsl #1
   1329c:	add	r0, r0, r1, lsl #2
   132a0:	ldr	r0, [r0, #4]
   132a4:	bx	lr

000132a8 <table_add_column@@Base>:
   132a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132ac:	add	fp, sp, #24
   132b0:	sub	sp, sp, #8
   132b4:	mov	r4, r0
   132b8:	mov	r8, r1
   132bc:	ldr	r0, [r0, #4]
   132c0:	mov	r9, r2
   132c4:	ldr	r1, [r4, #8]
   132c8:	udiv	r2, r0, r1
   132cc:	mls	r0, r2, r1, r0
   132d0:	cmp	r0, #0
   132d4:	bne	13340 <table_add_column@@Base+0x98>
   132d8:	ldr	r2, [r4, #12]
   132dc:	ldr	r0, [r4]
   132e0:	add	r1, r2, r1
   132e4:	str	r1, [r4, #12]
   132e8:	add	r1, r1, r1, lsl #1
   132ec:	lsl	r1, r1, #2
   132f0:	bl	11fb0 <realloc@plt>
   132f4:	str	r0, [r4]
   132f8:	mov	r0, r4
   132fc:	bl	13ec8 <table_get_row_length@@Base>
   13300:	cmp	r0, #1
   13304:	blt	13340 <table_add_column@@Base+0x98>
   13308:	mov	r6, r0
   1330c:	mov	r7, #0
   13310:	mov	r0, r4
   13314:	mov	r1, r7
   13318:	bl	13e64 <table_get_row_ptr@@Base>
   1331c:	ldr	r1, [r4, #12]
   13320:	mov	r5, r0
   13324:	ldr	r0, [r0]
   13328:	lsl	r1, r1, #2
   1332c:	bl	11fb0 <realloc@plt>
   13330:	add	r7, r7, #1
   13334:	str	r0, [r5]
   13338:	cmp	r6, r7
   1333c:	bne	13310 <table_add_column@@Base+0x68>
   13340:	mov	r0, r4
   13344:	bl	13ec8 <table_get_row_length@@Base>
   13348:	ldr	r6, [r4, #4]
   1334c:	mov	r7, r0
   13350:	mov	r0, r9
   13354:	bl	13bdc <table_get_default_compare_function_for_data_type@@Base>
   13358:	str	r0, [sp]
   1335c:	mov	r0, r4
   13360:	mov	r1, r6
   13364:	mov	r2, r8
   13368:	mov	r3, r9
   1336c:	bl	131a8 <table_column_init@@Base>
   13370:	cmp	r7, #1
   13374:	blt	13398 <table_add_column@@Base+0xf0>
   13378:	mov	r5, #0
   1337c:	mov	r0, r4
   13380:	mov	r1, r5
   13384:	mov	r2, r6
   13388:	bl	14dc8 <table_cell_init@@Base>
   1338c:	add	r5, r5, #1
   13390:	cmp	r7, r5
   13394:	bne	1337c <table_add_column@@Base+0xd4>
   13398:	ldr	r2, [r4, #4]
   1339c:	mov	r0, r4
   133a0:	mvn	r1, #0
   133a4:	mov	r3, #8
   133a8:	bl	1312c <table_notify@@Base>
   133ac:	ldr	r0, [r4, #4]
   133b0:	add	r1, r0, #1
   133b4:	str	r1, [r4, #4]
   133b8:	sub	sp, fp, #24
   133bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000133c0 <table_remove_column@@Base>:
   133c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   133c4:	add	fp, sp, #24
   133c8:	mov	r5, r0
   133cc:	ldr	r0, [r0]
   133d0:	add	r6, r1, r1, lsl #1
   133d4:	mov	r9, r1
   133d8:	ldr	r0, [r0, r6, lsl #2]
   133dc:	cmp	r0, #0
   133e0:	beq	133e8 <table_remove_column@@Base+0x28>
   133e4:	bl	11f98 <free@plt>
   133e8:	ldr	r0, [r5, #4]
   133ec:	sub	r4, r0, #1
   133f0:	cmp	r4, r9
   133f4:	ble	13424 <table_remove_column@@Base+0x64>
   133f8:	sub	r0, r4, r9
   133fc:	lsl	r1, r6, #2
   13400:	ldr	r2, [r5]
   13404:	subs	r0, r0, #1
   13408:	add	r2, r2, r1
   1340c:	add	r1, r1, #12
   13410:	vldr	d16, [r2, #12]
   13414:	ldr	r3, [r2, #20]
   13418:	str	r3, [r2, #8]
   1341c:	vstr	d16, [r2]
   13420:	bne	13400 <table_remove_column@@Base+0x40>
   13424:	mov	r0, r5
   13428:	bl	13ec8 <table_get_row_length@@Base>
   1342c:	cmp	r0, #1
   13430:	blt	1348c <table_remove_column@@Base+0xcc>
   13434:	mov	r6, r0
   13438:	mov	r7, #0
   1343c:	mov	r0, r5
   13440:	mov	r1, r7
   13444:	mov	r2, r9
   13448:	bl	14e04 <table_cell_destroy@@Base>
   1344c:	mov	r0, r5
   13450:	mov	r1, r7
   13454:	bl	13e64 <table_get_row_ptr@@Base>
   13458:	cmp	r4, r9
   1345c:	ble	13480 <table_remove_column@@Base+0xc0>
   13460:	mov	r1, r9
   13464:	ldr	r2, [r0]
   13468:	add	r3, r2, r1, lsl #2
   1346c:	ldr	r3, [r3, #4]
   13470:	str	r3, [r2, r1, lsl #2]
   13474:	add	r1, r1, #1
   13478:	cmp	r4, r1
   1347c:	bne	13464 <table_remove_column@@Base+0xa4>
   13480:	add	r7, r7, #1
   13484:	cmp	r7, r6
   13488:	bne	1343c <table_remove_column@@Base+0x7c>
   1348c:	ldmib	r5, {r0, r1}
   13490:	sub	r0, r0, #1
   13494:	udiv	r2, r0, r1
   13498:	str	r0, [r5, #4]
   1349c:	mls	r0, r2, r1, r0
   134a0:	cmp	r0, #0
   134a4:	bne	13510 <table_remove_column@@Base+0x150>
   134a8:	ldr	r2, [r5, #12]
   134ac:	ldr	r0, [r5]
   134b0:	sub	r1, r2, r1
   134b4:	str	r1, [r5, #12]
   134b8:	add	r1, r1, r1, lsl #1
   134bc:	lsl	r1, r1, #2
   134c0:	bl	11fb0 <realloc@plt>
   134c4:	str	r0, [r5]
   134c8:	mov	r0, r5
   134cc:	bl	13ec8 <table_get_row_length@@Base>
   134d0:	cmp	r0, #1
   134d4:	blt	13510 <table_remove_column@@Base+0x150>
   134d8:	mov	r8, r0
   134dc:	mov	r7, #0
   134e0:	mov	r0, r5
   134e4:	mov	r1, r7
   134e8:	bl	13e64 <table_get_row_ptr@@Base>
   134ec:	ldr	r1, [r5, #12]
   134f0:	mov	r6, r0
   134f4:	ldr	r0, [r0]
   134f8:	lsl	r1, r1, #2
   134fc:	bl	11fb0 <realloc@plt>
   13500:	add	r7, r7, #1
   13504:	str	r0, [r6]
   13508:	cmp	r8, r7
   1350c:	bne	134e0 <table_remove_column@@Base+0x120>
   13510:	mov	r0, r5
   13514:	mvn	r1, #0
   13518:	mov	r2, r9
   1351c:	mov	r3, #16
   13520:	bl	1312c <table_notify@@Base>
   13524:	mov	r0, #0
   13528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001352c <table_get_column_compare_function@@Base>:
   1352c:	ldr	r0, [r0]
   13530:	add	r1, r1, r1, lsl #1
   13534:	add	r0, r0, r1, lsl #2
   13538:	ldr	r0, [r0, #8]
   1353c:	bx	lr

00013540 <table_set_column_compare_function@@Base>:
   13540:	ldr	r0, [r0]
   13544:	add	r1, r1, r1, lsl #1
   13548:	add	r0, r0, r1, lsl #2
   1354c:	str	r2, [r0, #8]
   13550:	bx	lr

00013554 <table_compare_bool@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	13580 <table_compare_bool@@Base+0x2c>
   1355c:	cmp	r1, #0
   13560:	beq	1358c <table_compare_bool@@Base+0x38>
   13564:	ldrb	r2, [r1]
   13568:	ldrb	r0, [r0]
   1356c:	mov	r1, #0
   13570:	cmp	r0, r2
   13574:	mvncc	r1, #0
   13578:	movwhi	r1, #1
   1357c:	b	13590 <table_compare_bool@@Base+0x3c>
   13580:	cmp	r1, #0
   13584:	mvnne	r1, #0
   13588:	b	13590 <table_compare_bool@@Base+0x3c>
   1358c:	mov	r1, #1
   13590:	mov	r0, r1
   13594:	bx	lr

00013598 <table_compare_int@@Base>:
   13598:	cmp	r0, #0
   1359c:	beq	135c4 <table_compare_int@@Base+0x2c>
   135a0:	cmp	r1, #0
   135a4:	beq	135d0 <table_compare_int@@Base+0x38>
   135a8:	ldr	r2, [r1]
   135ac:	ldr	r0, [r0]
   135b0:	mov	r1, #0
   135b4:	cmp	r0, r2
   135b8:	mvnlt	r1, #0
   135bc:	movwgt	r1, #1
   135c0:	b	135d4 <table_compare_int@@Base+0x3c>
   135c4:	cmp	r1, #0
   135c8:	mvnne	r1, #0
   135cc:	b	135d4 <table_compare_int@@Base+0x3c>
   135d0:	mov	r1, #1
   135d4:	mov	r0, r1
   135d8:	bx	lr

000135dc <table_compare_uint@@Base>:
   135dc:	cmp	r0, #0
   135e0:	beq	13608 <table_compare_uint@@Base+0x2c>
   135e4:	cmp	r1, #0
   135e8:	beq	13614 <table_compare_uint@@Base+0x38>
   135ec:	ldr	r2, [r1]
   135f0:	ldr	r0, [r0]
   135f4:	mov	r1, #0
   135f8:	cmp	r0, r2
   135fc:	mvncc	r1, #0
   13600:	movwhi	r1, #1
   13604:	b	13618 <table_compare_uint@@Base+0x3c>
   13608:	cmp	r1, #0
   1360c:	mvnne	r1, #0
   13610:	b	13618 <table_compare_uint@@Base+0x3c>
   13614:	mov	r1, #1
   13618:	mov	r0, r1
   1361c:	bx	lr

00013620 <table_compare_int8@@Base>:
   13620:	cmp	r0, #0
   13624:	beq	1364c <table_compare_int8@@Base+0x2c>
   13628:	cmp	r1, #0
   1362c:	beq	13658 <table_compare_int8@@Base+0x38>
   13630:	ldrsb	r2, [r1]
   13634:	ldrsb	r0, [r0]
   13638:	mov	r1, #0
   1363c:	cmp	r0, r2
   13640:	mvnlt	r1, #0
   13644:	movwgt	r1, #1
   13648:	b	1365c <table_compare_int8@@Base+0x3c>
   1364c:	cmp	r1, #0
   13650:	mvnne	r1, #0
   13654:	b	1365c <table_compare_int8@@Base+0x3c>
   13658:	mov	r1, #1
   1365c:	mov	r0, r1
   13660:	bx	lr

00013664 <table_compare_uint8@@Base>:
   13664:	cmp	r0, #0
   13668:	beq	13690 <table_compare_uint8@@Base+0x2c>
   1366c:	cmp	r1, #0
   13670:	beq	1369c <table_compare_uint8@@Base+0x38>
   13674:	ldrb	r2, [r1]
   13678:	ldrb	r0, [r0]
   1367c:	mov	r1, #0
   13680:	cmp	r0, r2
   13684:	mvncc	r1, #0
   13688:	movwhi	r1, #1
   1368c:	b	136a0 <table_compare_uint8@@Base+0x3c>
   13690:	cmp	r1, #0
   13694:	mvnne	r1, #0
   13698:	b	136a0 <table_compare_uint8@@Base+0x3c>
   1369c:	mov	r1, #1
   136a0:	mov	r0, r1
   136a4:	bx	lr

000136a8 <table_compare_int16@@Base>:
   136a8:	cmp	r0, #0
   136ac:	beq	136d4 <table_compare_int16@@Base+0x2c>
   136b0:	cmp	r1, #0
   136b4:	beq	136e0 <table_compare_int16@@Base+0x38>
   136b8:	ldrsh	r2, [r1]
   136bc:	ldrsh	r0, [r0]
   136c0:	mov	r1, #0
   136c4:	cmp	r0, r2
   136c8:	mvnlt	r1, #0
   136cc:	movwgt	r1, #1
   136d0:	b	136e4 <table_compare_int16@@Base+0x3c>
   136d4:	cmp	r1, #0
   136d8:	mvnne	r1, #0
   136dc:	b	136e4 <table_compare_int16@@Base+0x3c>
   136e0:	mov	r1, #1
   136e4:	mov	r0, r1
   136e8:	bx	lr

000136ec <table_compare_uint16@@Base>:
   136ec:	cmp	r0, #0
   136f0:	beq	13718 <table_compare_uint16@@Base+0x2c>
   136f4:	cmp	r1, #0
   136f8:	beq	13724 <table_compare_uint16@@Base+0x38>
   136fc:	ldrh	r2, [r1]
   13700:	ldrh	r0, [r0]
   13704:	mov	r1, #0
   13708:	cmp	r0, r2
   1370c:	mvncc	r1, #0
   13710:	movwhi	r1, #1
   13714:	b	13728 <table_compare_uint16@@Base+0x3c>
   13718:	cmp	r1, #0
   1371c:	mvnne	r1, #0
   13720:	b	13728 <table_compare_uint16@@Base+0x3c>
   13724:	mov	r1, #1
   13728:	mov	r0, r1
   1372c:	bx	lr

00013730 <table_compare_int32@@Base>:
   13730:	cmp	r0, #0
   13734:	beq	1375c <table_compare_int32@@Base+0x2c>
   13738:	cmp	r1, #0
   1373c:	beq	13768 <table_compare_int32@@Base+0x38>
   13740:	ldr	r2, [r1]
   13744:	ldr	r0, [r0]
   13748:	mov	r1, #0
   1374c:	cmp	r0, r2
   13750:	mvnlt	r1, #0
   13754:	movwgt	r1, #1
   13758:	b	1376c <table_compare_int32@@Base+0x3c>
   1375c:	cmp	r1, #0
   13760:	mvnne	r1, #0
   13764:	b	1376c <table_compare_int32@@Base+0x3c>
   13768:	mov	r1, #1
   1376c:	mov	r0, r1
   13770:	bx	lr

00013774 <table_compare_uint32@@Base>:
   13774:	cmp	r0, #0
   13778:	beq	137a0 <table_compare_uint32@@Base+0x2c>
   1377c:	cmp	r1, #0
   13780:	beq	137ac <table_compare_uint32@@Base+0x38>
   13784:	ldr	r2, [r1]
   13788:	ldr	r0, [r0]
   1378c:	mov	r1, #0
   13790:	cmp	r0, r2
   13794:	mvncc	r1, #0
   13798:	movwhi	r1, #1
   1379c:	b	137b0 <table_compare_uint32@@Base+0x3c>
   137a0:	cmp	r1, #0
   137a4:	mvnne	r1, #0
   137a8:	b	137b0 <table_compare_uint32@@Base+0x3c>
   137ac:	mov	r1, #1
   137b0:	mov	r0, r1
   137b4:	bx	lr

000137b8 <table_compare_int64@@Base>:
   137b8:	cmp	r0, #0
   137bc:	beq	13804 <table_compare_int64@@Base+0x4c>
   137c0:	cmp	r1, #0
   137c4:	beq	13810 <table_compare_int64@@Base+0x58>
   137c8:	push	{r5, r7, fp, lr}
   137cc:	add	fp, sp, #8
   137d0:	ldm	r1, {r2, r7}
   137d4:	ldm	r0, {r0, r5}
   137d8:	mov	r1, #0
   137dc:	subs	r3, r0, r2
   137e0:	sbcs	r3, r5, r7
   137e4:	movwlt	r1, #1
   137e8:	cmp	r1, #0
   137ec:	mvnne	r1, #0
   137f0:	subs	r0, r2, r0
   137f4:	sbcs	r0, r7, r5
   137f8:	movwlt	r1, #1
   137fc:	pop	{r5, r7, fp, lr}
   13800:	b	13814 <table_compare_int64@@Base+0x5c>
   13804:	cmp	r1, #0
   13808:	mvnne	r1, #0
   1380c:	b	13814 <table_compare_int64@@Base+0x5c>
   13810:	mov	r1, #1
   13814:	mov	r0, r1
   13818:	bx	lr

0001381c <table_compare_uint64@@Base>:
   1381c:	cmp	r0, #0
   13820:	beq	13868 <table_compare_uint64@@Base+0x4c>
   13824:	cmp	r1, #0
   13828:	beq	13874 <table_compare_uint64@@Base+0x58>
   1382c:	push	{r5, r7, fp, lr}
   13830:	add	fp, sp, #8
   13834:	ldm	r1, {r2, r7}
   13838:	ldm	r0, {r0, r5}
   1383c:	mov	r1, #0
   13840:	subs	r3, r0, r2
   13844:	sbcs	r3, r5, r7
   13848:	movwcc	r1, #1
   1384c:	cmp	r1, #0
   13850:	mvnne	r1, #0
   13854:	subs	r0, r2, r0
   13858:	sbcs	r0, r7, r5
   1385c:	movwcc	r1, #1
   13860:	pop	{r5, r7, fp, lr}
   13864:	b	13878 <table_compare_uint64@@Base+0x5c>
   13868:	cmp	r1, #0
   1386c:	mvnne	r1, #0
   13870:	b	13878 <table_compare_uint64@@Base+0x5c>
   13874:	mov	r1, #1
   13878:	mov	r0, r1
   1387c:	bx	lr

00013880 <table_compare_short@@Base>:
   13880:	cmp	r0, #0
   13884:	beq	138ac <table_compare_short@@Base+0x2c>
   13888:	cmp	r1, #0
   1388c:	beq	138b8 <table_compare_short@@Base+0x38>
   13890:	ldrsh	r2, [r1]
   13894:	ldrsh	r0, [r0]
   13898:	mov	r1, #0
   1389c:	cmp	r0, r2
   138a0:	mvnlt	r1, #0
   138a4:	movwgt	r1, #1
   138a8:	b	138bc <table_compare_short@@Base+0x3c>
   138ac:	cmp	r1, #0
   138b0:	mvnne	r1, #0
   138b4:	b	138bc <table_compare_short@@Base+0x3c>
   138b8:	mov	r1, #1
   138bc:	mov	r0, r1
   138c0:	bx	lr

000138c4 <table_compare_ushort@@Base>:
   138c4:	cmp	r0, #0
   138c8:	beq	138f0 <table_compare_ushort@@Base+0x2c>
   138cc:	cmp	r1, #0
   138d0:	beq	138fc <table_compare_ushort@@Base+0x38>
   138d4:	ldrh	r2, [r1]
   138d8:	ldrh	r0, [r0]
   138dc:	mov	r1, #0
   138e0:	cmp	r0, r2
   138e4:	mvncc	r1, #0
   138e8:	movwhi	r1, #1
   138ec:	b	13900 <table_compare_ushort@@Base+0x3c>
   138f0:	cmp	r1, #0
   138f4:	mvnne	r1, #0
   138f8:	b	13900 <table_compare_ushort@@Base+0x3c>
   138fc:	mov	r1, #1
   13900:	mov	r0, r1
   13904:	bx	lr

00013908 <table_compare_long@@Base>:
   13908:	cmp	r0, #0
   1390c:	beq	13934 <table_compare_long@@Base+0x2c>
   13910:	cmp	r1, #0
   13914:	beq	13940 <table_compare_long@@Base+0x38>
   13918:	ldr	r2, [r1]
   1391c:	ldr	r0, [r0]
   13920:	mov	r1, #0
   13924:	cmp	r0, r2
   13928:	mvnlt	r1, #0
   1392c:	movwgt	r1, #1
   13930:	b	13944 <table_compare_long@@Base+0x3c>
   13934:	cmp	r1, #0
   13938:	mvnne	r1, #0
   1393c:	b	13944 <table_compare_long@@Base+0x3c>
   13940:	mov	r1, #1
   13944:	mov	r0, r1
   13948:	bx	lr

0001394c <table_compare_ulong@@Base>:
   1394c:	cmp	r0, #0
   13950:	beq	13978 <table_compare_ulong@@Base+0x2c>
   13954:	cmp	r1, #0
   13958:	beq	13984 <table_compare_ulong@@Base+0x38>
   1395c:	ldr	r2, [r1]
   13960:	ldr	r0, [r0]
   13964:	mov	r1, #0
   13968:	cmp	r0, r2
   1396c:	mvncc	r1, #0
   13970:	movwhi	r1, #1
   13974:	b	13988 <table_compare_ulong@@Base+0x3c>
   13978:	cmp	r1, #0
   1397c:	mvnne	r1, #0
   13980:	b	13988 <table_compare_ulong@@Base+0x3c>
   13984:	mov	r1, #1
   13988:	mov	r0, r1
   1398c:	bx	lr

00013990 <table_compare_llong@@Base>:
   13990:	cmp	r0, #0
   13994:	beq	139dc <table_compare_llong@@Base+0x4c>
   13998:	cmp	r1, #0
   1399c:	beq	139e8 <table_compare_llong@@Base+0x58>
   139a0:	push	{r5, r7, fp, lr}
   139a4:	add	fp, sp, #8
   139a8:	ldm	r1, {r2, r7}
   139ac:	ldm	r0, {r0, r5}
   139b0:	mov	r1, #0
   139b4:	subs	r3, r0, r2
   139b8:	sbcs	r3, r5, r7
   139bc:	movwlt	r1, #1
   139c0:	cmp	r1, #0
   139c4:	mvnne	r1, #0
   139c8:	subs	r0, r2, r0
   139cc:	sbcs	r0, r7, r5
   139d0:	movwlt	r1, #1
   139d4:	pop	{r5, r7, fp, lr}
   139d8:	b	139ec <table_compare_llong@@Base+0x5c>
   139dc:	cmp	r1, #0
   139e0:	mvnne	r1, #0
   139e4:	b	139ec <table_compare_llong@@Base+0x5c>
   139e8:	mov	r1, #1
   139ec:	mov	r0, r1
   139f0:	bx	lr

000139f4 <table_compare_ullong@@Base>:
   139f4:	cmp	r0, #0
   139f8:	beq	13a20 <table_compare_ullong@@Base+0x2c>
   139fc:	cmp	r1, #0
   13a00:	beq	13a2c <table_compare_ullong@@Base+0x38>
   13a04:	ldr	r2, [r1]
   13a08:	ldr	r0, [r0]
   13a0c:	mov	r1, #0
   13a10:	cmp	r0, r2
   13a14:	mvncc	r1, #0
   13a18:	movwhi	r1, #1
   13a1c:	b	13a30 <table_compare_ullong@@Base+0x3c>
   13a20:	cmp	r1, #0
   13a24:	mvnne	r1, #0
   13a28:	b	13a30 <table_compare_ullong@@Base+0x3c>
   13a2c:	mov	r1, #1
   13a30:	mov	r0, r1
   13a34:	bx	lr

00013a38 <table_compare_float@@Base>:
   13a38:	cmp	r0, #0
   13a3c:	beq	13a68 <table_compare_float@@Base+0x30>
   13a40:	cmp	r1, #0
   13a44:	beq	13a74 <table_compare_float@@Base+0x3c>
   13a48:	vldr	s0, [r1]
   13a4c:	vldr	s2, [r0]
   13a50:	mov	r1, #0
   13a54:	vcmpe.f32	s2, s0
   13a58:	vmrs	APSR_nzcv, fpscr
   13a5c:	mvnmi	r1, #0
   13a60:	movwgt	r1, #1
   13a64:	b	13a78 <table_compare_float@@Base+0x40>
   13a68:	cmp	r1, #0
   13a6c:	mvnne	r1, #0
   13a70:	b	13a78 <table_compare_float@@Base+0x40>
   13a74:	mov	r1, #1
   13a78:	mov	r0, r1
   13a7c:	bx	lr

00013a80 <table_compare_double@@Base>:
   13a80:	cmp	r0, #0
   13a84:	beq	13ab0 <table_compare_double@@Base+0x30>
   13a88:	cmp	r1, #0
   13a8c:	beq	13abc <table_compare_double@@Base+0x3c>
   13a90:	vldr	d16, [r1]
   13a94:	vldr	d17, [r0]
   13a98:	mov	r1, #0
   13a9c:	vcmpe.f64	d17, d16
   13aa0:	vmrs	APSR_nzcv, fpscr
   13aa4:	mvnmi	r1, #0
   13aa8:	movwgt	r1, #1
   13aac:	b	13ac0 <table_compare_double@@Base+0x40>
   13ab0:	cmp	r1, #0
   13ab4:	mvnne	r1, #0
   13ab8:	b	13ac0 <table_compare_double@@Base+0x40>
   13abc:	mov	r1, #1
   13ac0:	mov	r0, r1
   13ac4:	bx	lr

00013ac8 <table_compare_ldouble@@Base>:
   13ac8:	cmp	r0, #0
   13acc:	beq	13af8 <table_compare_ldouble@@Base+0x30>
   13ad0:	cmp	r1, #0
   13ad4:	beq	13b04 <table_compare_ldouble@@Base+0x3c>
   13ad8:	vldr	d16, [r1]
   13adc:	vldr	d17, [r0]
   13ae0:	mov	r1, #0
   13ae4:	vcmpe.f64	d17, d16
   13ae8:	vmrs	APSR_nzcv, fpscr
   13aec:	mvnmi	r1, #0
   13af0:	movwgt	r1, #1
   13af4:	b	13b08 <table_compare_ldouble@@Base+0x40>
   13af8:	cmp	r1, #0
   13afc:	mvnne	r1, #0
   13b00:	b	13b08 <table_compare_ldouble@@Base+0x40>
   13b04:	mov	r1, #1
   13b08:	mov	r0, r1
   13b0c:	bx	lr

00013b10 <table_compare_char@@Base>:
   13b10:	cmp	r0, #0
   13b14:	beq	13b3c <table_compare_char@@Base+0x2c>
   13b18:	cmp	r1, #0
   13b1c:	beq	13b48 <table_compare_char@@Base+0x38>
   13b20:	ldrb	r2, [r1]
   13b24:	ldrb	r0, [r0]
   13b28:	mov	r1, #0
   13b2c:	cmp	r0, r2
   13b30:	mvncc	r1, #0
   13b34:	movwhi	r1, #1
   13b38:	b	13b4c <table_compare_char@@Base+0x3c>
   13b3c:	cmp	r1, #0
   13b40:	mvnne	r1, #0
   13b44:	b	13b4c <table_compare_char@@Base+0x3c>
   13b48:	mov	r1, #1
   13b4c:	mov	r0, r1
   13b50:	bx	lr

00013b54 <table_compare_uchar@@Base>:
   13b54:	cmp	r0, #0
   13b58:	beq	13b80 <table_compare_uchar@@Base+0x2c>
   13b5c:	cmp	r1, #0
   13b60:	beq	13b8c <table_compare_uchar@@Base+0x38>
   13b64:	ldrb	r2, [r1]
   13b68:	ldrb	r0, [r0]
   13b6c:	mov	r1, #0
   13b70:	cmp	r0, r2
   13b74:	mvncc	r1, #0
   13b78:	movwhi	r1, #1
   13b7c:	b	13b90 <table_compare_uchar@@Base+0x3c>
   13b80:	cmp	r1, #0
   13b84:	mvnne	r1, #0
   13b88:	b	13b90 <table_compare_uchar@@Base+0x3c>
   13b8c:	mov	r1, #1
   13b90:	mov	r0, r1
   13b94:	bx	lr

00013b98 <table_compare_string@@Base>:
   13b98:	cmp	r0, #0
   13b9c:	beq	13bac <table_compare_string@@Base+0x14>
   13ba0:	cmp	r1, #0
   13ba4:	beq	13bb8 <table_compare_string@@Base+0x20>
   13ba8:	b	11f80 <strcmp@plt>
   13bac:	cmp	r1, #0
   13bb0:	mvnne	r1, #0
   13bb4:	b	13bbc <table_compare_string@@Base+0x24>
   13bb8:	mov	r1, #1
   13bbc:	mov	r0, r1
   13bc0:	bx	lr

00013bc4 <table_compare_ptr@@Base>:
   13bc4:	mov	r2, #0
   13bc8:	cmp	r0, r1
   13bcc:	mvncc	r2, #0
   13bd0:	movwhi	r2, #1
   13bd4:	mov	r0, r2
   13bd8:	bx	lr

00013bdc <table_get_default_compare_function_for_data_type@@Base>:
   13bdc:	cmp	r0, #23
   13be0:	movwls	r1, #22816	; 0x5920
   13be4:	movhi	r0, #0
   13be8:	movtls	r1, #1
   13bec:	ldrls	r0, [r1, r0, lsl #2]
   13bf0:	bx	lr

00013bf4 <table_get@@Base>:
   13bf4:	push	{fp, lr}
   13bf8:	mov	fp, sp
   13bfc:	bl	14de8 <table_get_cell_ptr@@Base>
   13c00:	ldr	r0, [r0]
   13c04:	pop	{fp, pc}

00013c08 <table_get_bool@@Base>:
   13c08:	push	{fp, lr}
   13c0c:	mov	fp, sp
   13c10:	bl	14de8 <table_get_cell_ptr@@Base>
   13c14:	ldr	r0, [r0]
   13c18:	ldrb	r0, [r0]
   13c1c:	pop	{fp, pc}

00013c20 <table_get_int@@Base>:
   13c20:	push	{fp, lr}
   13c24:	mov	fp, sp
   13c28:	bl	14de8 <table_get_cell_ptr@@Base>
   13c2c:	ldr	r0, [r0]
   13c30:	ldr	r0, [r0]
   13c34:	pop	{fp, pc}

00013c38 <table_get_uint@@Base>:
   13c38:	push	{fp, lr}
   13c3c:	mov	fp, sp
   13c40:	bl	14de8 <table_get_cell_ptr@@Base>
   13c44:	ldr	r0, [r0]
   13c48:	ldr	r0, [r0]
   13c4c:	pop	{fp, pc}

00013c50 <table_get_int8@@Base>:
   13c50:	push	{fp, lr}
   13c54:	mov	fp, sp
   13c58:	bl	14de8 <table_get_cell_ptr@@Base>
   13c5c:	ldr	r0, [r0]
   13c60:	ldrsb	r0, [r0]
   13c64:	pop	{fp, pc}

00013c68 <table_get_uint8@@Base>:
   13c68:	push	{fp, lr}
   13c6c:	mov	fp, sp
   13c70:	bl	14de8 <table_get_cell_ptr@@Base>
   13c74:	ldr	r0, [r0]
   13c78:	ldrb	r0, [r0]
   13c7c:	pop	{fp, pc}

00013c80 <table_get_int16@@Base>:
   13c80:	push	{fp, lr}
   13c84:	mov	fp, sp
   13c88:	bl	14de8 <table_get_cell_ptr@@Base>
   13c8c:	ldr	r0, [r0]
   13c90:	ldrsh	r0, [r0]
   13c94:	pop	{fp, pc}

00013c98 <table_get_uint16@@Base>:
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	bl	14de8 <table_get_cell_ptr@@Base>
   13ca4:	ldr	r0, [r0]
   13ca8:	ldrh	r0, [r0]
   13cac:	pop	{fp, pc}

00013cb0 <table_get_int32@@Base>:
   13cb0:	push	{fp, lr}
   13cb4:	mov	fp, sp
   13cb8:	bl	14de8 <table_get_cell_ptr@@Base>
   13cbc:	ldr	r0, [r0]
   13cc0:	ldr	r0, [r0]
   13cc4:	pop	{fp, pc}

00013cc8 <table_get_uint32@@Base>:
   13cc8:	push	{fp, lr}
   13ccc:	mov	fp, sp
   13cd0:	bl	14de8 <table_get_cell_ptr@@Base>
   13cd4:	ldr	r0, [r0]
   13cd8:	ldr	r0, [r0]
   13cdc:	pop	{fp, pc}

00013ce0 <table_get_int64@@Base>:
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	bl	14de8 <table_get_cell_ptr@@Base>
   13cec:	ldr	r0, [r0]
   13cf0:	ldrd	r0, [r0]
   13cf4:	pop	{fp, pc}

00013cf8 <table_get_uint64@@Base>:
   13cf8:	push	{fp, lr}
   13cfc:	mov	fp, sp
   13d00:	bl	14de8 <table_get_cell_ptr@@Base>
   13d04:	ldr	r0, [r0]
   13d08:	ldrd	r0, [r0]
   13d0c:	pop	{fp, pc}

00013d10 <table_get_short@@Base>:
   13d10:	push	{fp, lr}
   13d14:	mov	fp, sp
   13d18:	bl	14de8 <table_get_cell_ptr@@Base>
   13d1c:	ldr	r0, [r0]
   13d20:	ldrsh	r0, [r0]
   13d24:	pop	{fp, pc}

00013d28 <table_get_ushort@@Base>:
   13d28:	push	{fp, lr}
   13d2c:	mov	fp, sp
   13d30:	bl	14de8 <table_get_cell_ptr@@Base>
   13d34:	ldr	r0, [r0]
   13d38:	ldrh	r0, [r0]
   13d3c:	pop	{fp, pc}

00013d40 <table_get_long@@Base>:
   13d40:	push	{fp, lr}
   13d44:	mov	fp, sp
   13d48:	bl	14de8 <table_get_cell_ptr@@Base>
   13d4c:	ldr	r0, [r0]
   13d50:	ldr	r0, [r0]
   13d54:	pop	{fp, pc}

00013d58 <table_get_ulong@@Base>:
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	bl	14de8 <table_get_cell_ptr@@Base>
   13d64:	ldr	r0, [r0]
   13d68:	ldr	r0, [r0]
   13d6c:	pop	{fp, pc}

00013d70 <table_get_llong@@Base>:
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	bl	14de8 <table_get_cell_ptr@@Base>
   13d7c:	ldr	r0, [r0]
   13d80:	ldrd	r0, [r0]
   13d84:	pop	{fp, pc}

00013d88 <table_get_ullong@@Base>:
   13d88:	push	{fp, lr}
   13d8c:	mov	fp, sp
   13d90:	bl	14de8 <table_get_cell_ptr@@Base>
   13d94:	ldr	r0, [r0]
   13d98:	ldrd	r0, [r0]
   13d9c:	pop	{fp, pc}

00013da0 <table_get_float@@Base>:
   13da0:	push	{fp, lr}
   13da4:	mov	fp, sp
   13da8:	bl	14de8 <table_get_cell_ptr@@Base>
   13dac:	ldr	r0, [r0]
   13db0:	vldr	s0, [r0]
   13db4:	pop	{fp, pc}

00013db8 <table_get_double@@Base>:
   13db8:	push	{fp, lr}
   13dbc:	mov	fp, sp
   13dc0:	bl	14de8 <table_get_cell_ptr@@Base>
   13dc4:	ldr	r0, [r0]
   13dc8:	vldr	d0, [r0]
   13dcc:	pop	{fp, pc}

00013dd0 <table_get_ldouble@@Base>:
   13dd0:	push	{fp, lr}
   13dd4:	mov	fp, sp
   13dd8:	bl	14de8 <table_get_cell_ptr@@Base>
   13ddc:	ldr	r0, [r0]
   13de0:	vldr	d0, [r0]
   13de4:	pop	{fp, pc}

00013de8 <table_get_char@@Base>:
   13de8:	push	{fp, lr}
   13dec:	mov	fp, sp
   13df0:	bl	14de8 <table_get_cell_ptr@@Base>
   13df4:	ldr	r0, [r0]
   13df8:	ldrb	r0, [r0]
   13dfc:	pop	{fp, pc}

00013e00 <table_get_uchar@@Base>:
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	bl	14de8 <table_get_cell_ptr@@Base>
   13e0c:	ldr	r0, [r0]
   13e10:	ldrb	r0, [r0]
   13e14:	pop	{fp, pc}

00013e18 <table_get_string@@Base>:
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	bl	14de8 <table_get_cell_ptr@@Base>
   13e24:	ldr	r0, [r0]
   13e28:	pop	{fp, pc}

00013e2c <table_get_ptr@@Base>:
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	bl	14de8 <table_get_cell_ptr@@Base>
   13e38:	ldr	r0, [r0]
   13e3c:	pop	{fp, pc}

00013e40 <table_row_init@@Base>:
   13e40:	push	{r4, r5, fp, lr}
   13e44:	add	fp, sp, #8
   13e48:	mov	r4, r1
   13e4c:	ldr	r1, [r0, #12]
   13e50:	ldr	r5, [r0, #16]
   13e54:	lsl	r0, r1, #2
   13e58:	bl	11fc8 <malloc@plt>
   13e5c:	str	r0, [r5, r4, lsl #2]
   13e60:	pop	{r4, r5, fp, pc}

00013e64 <table_get_row_ptr@@Base>:
   13e64:	ldr	r0, [r0, #16]
   13e68:	add	r0, r0, r1, lsl #2
   13e6c:	bx	lr

00013e70 <table_row_destroy@@Base>:
   13e70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e74:	add	fp, sp, #24
   13e78:	mov	r4, r1
   13e7c:	mov	r5, r0
   13e80:	bl	13220 <table_get_column_length@@Base>
   13e84:	ldr	r8, [r5, #16]
   13e88:	cmp	r0, #1
   13e8c:	blt	13eb4 <table_row_destroy@@Base+0x44>
   13e90:	mov	r6, r0
   13e94:	mov	r7, #0
   13e98:	mov	r0, r5
   13e9c:	mov	r1, r4
   13ea0:	mov	r2, r7
   13ea4:	bl	14e04 <table_cell_destroy@@Base>
   13ea8:	add	r7, r7, #1
   13eac:	cmp	r6, r7
   13eb0:	bne	13e98 <table_row_destroy@@Base+0x28>
   13eb4:	ldr	r0, [r8, r4, lsl #2]
   13eb8:	cmp	r0, #0
   13ebc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ec0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ec4:	b	11f98 <free@plt>

00013ec8 <table_get_row_length@@Base>:
   13ec8:	ldr	r0, [r0, #20]
   13ecc:	bx	lr

00013ed0 <table_add_row@@Base>:
   13ed0:	push	{r4, r5, r6, r7, fp, lr}
   13ed4:	add	fp, sp, #16
   13ed8:	ldr	r5, [r0, #20]
   13edc:	ldr	r1, [r0, #24]
   13ee0:	mov	r4, r0
   13ee4:	udiv	r0, r5, r1
   13ee8:	mls	r0, r0, r1, r5
   13eec:	cmp	r0, #0
   13ef0:	bne	13f14 <table_add_row@@Base+0x44>
   13ef4:	ldr	r2, [r4, #28]
   13ef8:	ldr	r0, [r4, #16]
   13efc:	add	r1, r2, r1
   13f00:	str	r1, [r4, #28]
   13f04:	lsl	r1, r1, #2
   13f08:	bl	11fb0 <realloc@plt>
   13f0c:	str	r0, [r4, #16]
   13f10:	ldr	r5, [r4, #20]
   13f14:	mov	r0, r4
   13f18:	bl	13220 <table_get_column_length@@Base>
   13f1c:	mov	r6, r0
   13f20:	ldr	r0, [r4, #12]
   13f24:	ldr	r7, [r4, #16]
   13f28:	lsl	r0, r0, #2
   13f2c:	bl	11fc8 <malloc@plt>
   13f30:	cmp	r6, #1
   13f34:	str	r0, [r7, r5, lsl #2]
   13f38:	blt	13f5c <table_add_row@@Base+0x8c>
   13f3c:	mov	r7, #0
   13f40:	mov	r0, r4
   13f44:	mov	r1, r5
   13f48:	mov	r2, r7
   13f4c:	bl	14dc8 <table_cell_init@@Base>
   13f50:	add	r7, r7, #1
   13f54:	cmp	r6, r7
   13f58:	bne	13f40 <table_add_row@@Base+0x70>
   13f5c:	ldr	r1, [r4, #20]
   13f60:	mov	r0, r4
   13f64:	mvn	r2, #0
   13f68:	mov	r3, #2
   13f6c:	bl	1312c <table_notify@@Base>
   13f70:	ldr	r0, [r4, #20]
   13f74:	add	r1, r0, #1
   13f78:	str	r1, [r4, #20]
   13f7c:	pop	{r4, r5, r6, r7, fp, pc}

00013f80 <table_remove_row@@Base>:
   13f80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f84:	add	fp, sp, #24
   13f88:	ldr	r8, [r0, #20]
   13f8c:	mov	r4, r1
   13f90:	mov	r5, r0
   13f94:	bl	13220 <table_get_column_length@@Base>
   13f98:	cmp	r0, #1
   13f9c:	blt	13fe8 <table_remove_row@@Base+0x68>
   13fa0:	mov	r6, r0
   13fa4:	mov	r7, #0
   13fa8:	mov	r0, r5
   13fac:	mov	r1, r7
   13fb0:	bl	13294 <table_get_column_data_type@@Base>
   13fb4:	cmp	r0, #23
   13fb8:	beq	13fdc <table_remove_row@@Base+0x5c>
   13fbc:	mov	r0, r5
   13fc0:	mov	r1, r4
   13fc4:	mov	r2, r7
   13fc8:	bl	14de8 <table_get_cell_ptr@@Base>
   13fcc:	ldr	r0, [r0]
   13fd0:	cmp	r0, #0
   13fd4:	beq	13fdc <table_remove_row@@Base+0x5c>
   13fd8:	bl	11f98 <free@plt>
   13fdc:	add	r7, r7, #1
   13fe0:	cmp	r6, r7
   13fe4:	bne	13fa8 <table_remove_row@@Base+0x28>
   13fe8:	ldr	r0, [r5, #16]
   13fec:	ldr	r0, [r0, r4, lsl #2]
   13ff0:	cmp	r0, #0
   13ff4:	beq	13ffc <table_remove_row@@Base+0x7c>
   13ff8:	bl	11f98 <free@plt>
   13ffc:	sub	r0, r8, #1
   14000:	cmp	r0, r4
   14004:	ble	14028 <table_remove_row@@Base+0xa8>
   14008:	mov	r1, r4
   1400c:	ldr	r2, [r5, #16]
   14010:	add	r3, r2, r1, lsl #2
   14014:	ldr	r3, [r3, #4]
   14018:	str	r3, [r2, r1, lsl #2]
   1401c:	add	r1, r1, #1
   14020:	cmp	r0, r1
   14024:	bne	1400c <table_remove_row@@Base+0x8c>
   14028:	ldr	r0, [r5, #20]
   1402c:	ldr	r1, [r5, #24]
   14030:	sub	r0, r0, #1
   14034:	udiv	r2, r0, r1
   14038:	str	r0, [r5, #20]
   1403c:	mls	r0, r2, r1, r0
   14040:	cmp	r0, #0
   14044:	bne	14064 <table_remove_row@@Base+0xe4>
   14048:	ldr	r2, [r5, #28]
   1404c:	ldr	r0, [r5, #16]
   14050:	sub	r1, r2, r1
   14054:	str	r1, [r5, #28]
   14058:	lsl	r1, r1, #2
   1405c:	bl	11fb0 <realloc@plt>
   14060:	str	r0, [r5, #16]
   14064:	mov	r0, r5
   14068:	mov	r1, r4
   1406c:	mvn	r2, #0
   14070:	mov	r3, #4
   14074:	bl	1312c <table_notify@@Base>
   14078:	mov	r0, #0
   1407c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014080 <table_set_row_ptr@@Base>:
   14080:	ldr	r2, [r2]
   14084:	ldr	r0, [r0, #16]
   14088:	str	r2, [r0, r1, lsl #2]
   1408c:	bx	lr

00014090 <table_set@@Base>:
   14090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14094:	add	fp, sp, #24
   14098:	mov	r8, r3
   1409c:	mov	r4, r2
   140a0:	mov	r9, r1
   140a4:	mov	r6, r0
   140a8:	bl	14de8 <table_get_cell_ptr@@Base>
   140ac:	mov	r5, r0
   140b0:	mov	r0, r6
   140b4:	mov	r1, r4
   140b8:	bl	131f8 <table_get_col_ptr@@Base>
   140bc:	ldr	r1, [fp, #8]
   140c0:	mvn	r7, #0
   140c4:	cmp	r1, #23
   140c8:	bhi	14388 <table_set@@Base+0x2f8>
   140cc:	add	r2, pc, #0
   140d0:	ldr	pc, [r2, r1, lsl #2]
   140d4:	andeq	r4, r1, r4, lsr r1
   140d8:	andeq	r4, r1, r4, asr #2
   140dc:	andeq	r4, r1, r4, asr r1
   140e0:	andeq	r4, r1, r4, ror #2
   140e4:	andeq	r4, r1, r4, ror r1
   140e8:	andeq	r4, r1, r4, lsl #3
   140ec:	muleq	r1, r4, r1
   140f0:	andeq	r4, r1, r4, lsr #3
   140f4:			; <UNDEFINED> instruction: 0x000141b4
   140f8:	andeq	r4, r1, r4, asr #3
   140fc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14100:	andeq	r4, r1, r4, ror #3
   14104:	andeq	r4, r1, ip, lsl r2
   14108:	andeq	r4, r1, ip, lsr #4
   1410c:	andeq	r4, r1, ip, lsr r2
   14110:	andeq	r4, r1, ip, asr #4
   14114:	andeq	r4, r1, ip, asr r2
   14118:	muleq	r1, r0, r2
   1411c:	andeq	r4, r1, r0, lsr #5
   14120:	andeq	r4, r1, r0, ror #5
   14124:	strdeq	r4, [r1], -r0
   14128:	andeq	r4, r1, r0, lsl #6
   1412c:	andeq	r4, r1, ip, lsr r3
   14130:	muleq	r1, r0, r3
   14134:	ldr	r0, [r0, #4]
   14138:	cmp	r0, #0
   1413c:	bne	14388 <table_set@@Base+0x2f8>
   14140:	b	14268 <table_set@@Base+0x1d8>
   14144:	ldr	r0, [r0, #4]
   14148:	cmp	r0, #1
   1414c:	beq	14268 <table_set@@Base+0x1d8>
   14150:	b	14388 <table_set@@Base+0x2f8>
   14154:	ldr	r0, [r0, #4]
   14158:	cmp	r0, #2
   1415c:	beq	14348 <table_set@@Base+0x2b8>
   14160:	b	14388 <table_set@@Base+0x2f8>
   14164:	ldr	r0, [r0, #4]
   14168:	cmp	r0, #3
   1416c:	beq	14348 <table_set@@Base+0x2b8>
   14170:	b	14388 <table_set@@Base+0x2f8>
   14174:	ldr	r0, [r0, #4]
   14178:	cmp	r0, #4
   1417c:	beq	141f0 <table_set@@Base+0x160>
   14180:	b	14388 <table_set@@Base+0x2f8>
   14184:	ldr	r0, [r0, #4]
   14188:	cmp	r0, #5
   1418c:	beq	141f0 <table_set@@Base+0x160>
   14190:	b	14388 <table_set@@Base+0x2f8>
   14194:	ldr	r0, [r0, #4]
   14198:	cmp	r0, #6
   1419c:	beq	14268 <table_set@@Base+0x1d8>
   141a0:	b	14388 <table_set@@Base+0x2f8>
   141a4:	ldr	r0, [r0, #4]
   141a8:	cmp	r0, #7
   141ac:	beq	14268 <table_set@@Base+0x1d8>
   141b0:	b	14388 <table_set@@Base+0x2f8>
   141b4:	ldr	r0, [r0, #4]
   141b8:	cmp	r0, #8
   141bc:	beq	142ac <table_set@@Base+0x21c>
   141c0:	b	14388 <table_set@@Base+0x2f8>
   141c4:	ldr	r0, [r0, #4]
   141c8:	cmp	r0, #9
   141cc:	beq	142ac <table_set@@Base+0x21c>
   141d0:	b	14388 <table_set@@Base+0x2f8>
   141d4:	ldr	r0, [r0, #4]
   141d8:	cmp	r0, #10
   141dc:	beq	141f0 <table_set@@Base+0x160>
   141e0:	b	14388 <table_set@@Base+0x2f8>
   141e4:	ldr	r0, [r0, #4]
   141e8:	cmp	r0, #11
   141ec:	bne	14388 <table_set@@Base+0x2f8>
   141f0:	ldr	r0, [r5]
   141f4:	cmp	r0, #0
   141f8:	bne	14210 <table_set@@Base+0x180>
   141fc:	mov	r0, #2
   14200:	bl	11fc8 <malloc@plt>
   14204:	cmp	r0, #0
   14208:	str	r0, [r5]
   1420c:	beq	14388 <table_set@@Base+0x2f8>
   14210:	ldrh	r1, [r8]
   14214:	strh	r1, [r0]
   14218:	b	14370 <table_set@@Base+0x2e0>
   1421c:	ldr	r0, [r0, #4]
   14220:	cmp	r0, #12
   14224:	beq	14268 <table_set@@Base+0x1d8>
   14228:	b	14388 <table_set@@Base+0x2f8>
   1422c:	ldr	r0, [r0, #4]
   14230:	cmp	r0, #13
   14234:	beq	14268 <table_set@@Base+0x1d8>
   14238:	b	14388 <table_set@@Base+0x2f8>
   1423c:	ldr	r0, [r0, #4]
   14240:	cmp	r0, #14
   14244:	beq	142ac <table_set@@Base+0x21c>
   14248:	b	14388 <table_set@@Base+0x2f8>
   1424c:	ldr	r0, [r0, #4]
   14250:	cmp	r0, #15
   14254:	beq	142ac <table_set@@Base+0x21c>
   14258:	b	14388 <table_set@@Base+0x2f8>
   1425c:	ldr	r0, [r0, #4]
   14260:	cmp	r0, #16
   14264:	bne	14388 <table_set@@Base+0x2f8>
   14268:	ldr	r0, [r5]
   1426c:	cmp	r0, #0
   14270:	bne	14288 <table_set@@Base+0x1f8>
   14274:	mov	r0, #4
   14278:	bl	11fc8 <malloc@plt>
   1427c:	cmp	r0, #0
   14280:	str	r0, [r5]
   14284:	beq	14388 <table_set@@Base+0x2f8>
   14288:	ldr	r1, [r8]
   1428c:	b	142d8 <table_set@@Base+0x248>
   14290:	ldr	r0, [r0, #4]
   14294:	cmp	r0, #17
   14298:	beq	142ac <table_set@@Base+0x21c>
   1429c:	b	14388 <table_set@@Base+0x2f8>
   142a0:	ldr	r0, [r0, #4]
   142a4:	cmp	r0, #18
   142a8:	bne	14388 <table_set@@Base+0x2f8>
   142ac:	ldr	r0, [r5]
   142b0:	cmp	r0, #0
   142b4:	bne	142cc <table_set@@Base+0x23c>
   142b8:	mov	r0, #8
   142bc:	bl	11fc8 <malloc@plt>
   142c0:	cmp	r0, #0
   142c4:	str	r0, [r5]
   142c8:	beq	14388 <table_set@@Base+0x2f8>
   142cc:	ldr	r1, [r8]
   142d0:	ldr	r2, [r8, #4]
   142d4:	str	r2, [r0, #4]
   142d8:	str	r1, [r0]
   142dc:	b	14370 <table_set@@Base+0x2e0>
   142e0:	ldr	r0, [r0, #4]
   142e4:	cmp	r0, #19
   142e8:	beq	14348 <table_set@@Base+0x2b8>
   142ec:	b	14388 <table_set@@Base+0x2f8>
   142f0:	ldr	r0, [r0, #4]
   142f4:	cmp	r0, #20
   142f8:	beq	14348 <table_set@@Base+0x2b8>
   142fc:	b	14388 <table_set@@Base+0x2f8>
   14300:	ldr	r0, [r0, #4]
   14304:	cmp	r0, #21
   14308:	bne	14388 <table_set@@Base+0x2f8>
   1430c:	mov	r0, r8
   14310:	bl	11fec <strlen@plt>
   14314:	ldr	r2, [r5]
   14318:	add	r1, r0, #1
   1431c:	mov	r0, r2
   14320:	bl	11fb0 <realloc@plt>
   14324:	cmp	r0, #0
   14328:	str	r0, [r5]
   1432c:	beq	14388 <table_set@@Base+0x2f8>
   14330:	mov	r1, r8
   14334:	bl	11fbc <strcpy@plt>
   14338:	b	14370 <table_set@@Base+0x2e0>
   1433c:	ldr	r0, [r0, #4]
   14340:	cmp	r0, #22
   14344:	bne	14388 <table_set@@Base+0x2f8>
   14348:	ldr	r0, [r5]
   1434c:	cmp	r0, #0
   14350:	bne	14368 <table_set@@Base+0x2d8>
   14354:	mov	r0, #1
   14358:	bl	11fc8 <malloc@plt>
   1435c:	cmp	r0, #0
   14360:	str	r0, [r5]
   14364:	beq	14388 <table_set@@Base+0x2f8>
   14368:	ldrb	r1, [r8]
   1436c:	strb	r1, [r0]
   14370:	mov	r0, r6
   14374:	mov	r1, r9
   14378:	mov	r2, r4
   1437c:	mov	r3, #1
   14380:	bl	1312c <table_notify@@Base>
   14384:	mov	r7, #0
   14388:	mov	r0, r7
   1438c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14390:	ldr	r0, [r0, #4]
   14394:	cmp	r0, #23
   14398:	bne	14388 <table_set@@Base+0x2f8>
   1439c:	str	r8, [r5]
   143a0:	b	14370 <table_set@@Base+0x2e0>

000143a4 <table_set_bool@@Base>:
   143a4:	push	{fp, lr}
   143a8:	mov	fp, sp
   143ac:	sub	sp, sp, #8
   143b0:	strb	r3, [fp, #-1]
   143b4:	mov	r3, #22
   143b8:	str	r3, [sp]
   143bc:	sub	r3, fp, #1
   143c0:	bl	14090 <table_set@@Base>
   143c4:	mov	sp, fp
   143c8:	pop	{fp, pc}

000143cc <table_set_int@@Base>:
   143cc:	push	{fp, lr}
   143d0:	mov	fp, sp
   143d4:	sub	sp, sp, #8
   143d8:	str	r3, [sp, #4]
   143dc:	mov	r3, #0
   143e0:	str	r3, [sp]
   143e4:	add	r3, sp, #4
   143e8:	bl	14090 <table_set@@Base>
   143ec:	mov	sp, fp
   143f0:	pop	{fp, pc}

000143f4 <table_set_uint@@Base>:
   143f4:	push	{fp, lr}
   143f8:	mov	fp, sp
   143fc:	sub	sp, sp, #8
   14400:	str	r3, [sp, #4]
   14404:	mov	r3, #1
   14408:	str	r3, [sp]
   1440c:	add	r3, sp, #4
   14410:	bl	14090 <table_set@@Base>
   14414:	mov	sp, fp
   14418:	pop	{fp, pc}

0001441c <table_set_int8@@Base>:
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	sub	sp, sp, #8
   14428:	strb	r3, [fp, #-1]
   1442c:	mov	r3, #2
   14430:	str	r3, [sp]
   14434:	sub	r3, fp, #1
   14438:	bl	14090 <table_set@@Base>
   1443c:	mov	sp, fp
   14440:	pop	{fp, pc}

00014444 <table_set_uint8@@Base>:
   14444:	push	{fp, lr}
   14448:	mov	fp, sp
   1444c:	sub	sp, sp, #8
   14450:	strb	r3, [fp, #-1]
   14454:	mov	r3, #3
   14458:	str	r3, [sp]
   1445c:	sub	r3, fp, #1
   14460:	bl	14090 <table_set@@Base>
   14464:	mov	sp, fp
   14468:	pop	{fp, pc}

0001446c <table_set_int16@@Base>:
   1446c:	push	{fp, lr}
   14470:	mov	fp, sp
   14474:	sub	sp, sp, #8
   14478:	strh	r3, [fp, #-2]
   1447c:	mov	r3, #4
   14480:	str	r3, [sp]
   14484:	sub	r3, fp, #2
   14488:	bl	14090 <table_set@@Base>
   1448c:	mov	sp, fp
   14490:	pop	{fp, pc}

00014494 <table_set_uint16@@Base>:
   14494:	push	{fp, lr}
   14498:	mov	fp, sp
   1449c:	sub	sp, sp, #8
   144a0:	strh	r3, [fp, #-2]
   144a4:	mov	r3, #5
   144a8:	str	r3, [sp]
   144ac:	sub	r3, fp, #2
   144b0:	bl	14090 <table_set@@Base>
   144b4:	mov	sp, fp
   144b8:	pop	{fp, pc}

000144bc <table_set_int32@@Base>:
   144bc:	push	{fp, lr}
   144c0:	mov	fp, sp
   144c4:	sub	sp, sp, #8
   144c8:	str	r3, [sp, #4]
   144cc:	mov	r3, #6
   144d0:	str	r3, [sp]
   144d4:	add	r3, sp, #4
   144d8:	bl	14090 <table_set@@Base>
   144dc:	mov	sp, fp
   144e0:	pop	{fp, pc}

000144e4 <table_set_uint32@@Base>:
   144e4:	push	{fp, lr}
   144e8:	mov	fp, sp
   144ec:	sub	sp, sp, #8
   144f0:	str	r3, [sp, #4]
   144f4:	mov	r3, #7
   144f8:	str	r3, [sp]
   144fc:	add	r3, sp, #4
   14500:	bl	14090 <table_set@@Base>
   14504:	mov	sp, fp
   14508:	pop	{fp, pc}

0001450c <table_set_int64@@Base>:
   1450c:	push	{fp, lr}
   14510:	mov	fp, sp
   14514:	sub	sp, sp, #16
   14518:	ldr	r3, [fp, #12]
   1451c:	str	r3, [sp, #12]
   14520:	ldr	r3, [fp, #8]
   14524:	str	r3, [sp, #8]
   14528:	mov	r3, #8
   1452c:	str	r3, [sp]
   14530:	add	r3, sp, #8
   14534:	bl	14090 <table_set@@Base>
   14538:	mov	sp, fp
   1453c:	pop	{fp, pc}

00014540 <table_set_uint64@@Base>:
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	sub	sp, sp, #16
   1454c:	ldr	r3, [fp, #12]
   14550:	str	r3, [sp, #12]
   14554:	ldr	r3, [fp, #8]
   14558:	str	r3, [sp, #8]
   1455c:	mov	r3, #9
   14560:	str	r3, [sp]
   14564:	add	r3, sp, #8
   14568:	bl	14090 <table_set@@Base>
   1456c:	mov	sp, fp
   14570:	pop	{fp, pc}

00014574 <table_set_short@@Base>:
   14574:	push	{fp, lr}
   14578:	mov	fp, sp
   1457c:	sub	sp, sp, #8
   14580:	strh	r3, [fp, #-2]
   14584:	mov	r3, #10
   14588:	str	r3, [sp]
   1458c:	sub	r3, fp, #2
   14590:	bl	14090 <table_set@@Base>
   14594:	mov	sp, fp
   14598:	pop	{fp, pc}

0001459c <table_set_ushort@@Base>:
   1459c:	push	{fp, lr}
   145a0:	mov	fp, sp
   145a4:	sub	sp, sp, #8
   145a8:	strh	r3, [fp, #-2]
   145ac:	mov	r3, #11
   145b0:	str	r3, [sp]
   145b4:	sub	r3, fp, #2
   145b8:	bl	14090 <table_set@@Base>
   145bc:	mov	sp, fp
   145c0:	pop	{fp, pc}

000145c4 <table_set_long@@Base>:
   145c4:	push	{fp, lr}
   145c8:	mov	fp, sp
   145cc:	sub	sp, sp, #8
   145d0:	str	r3, [sp, #4]
   145d4:	mov	r3, #12
   145d8:	str	r3, [sp]
   145dc:	add	r3, sp, #4
   145e0:	bl	14090 <table_set@@Base>
   145e4:	mov	sp, fp
   145e8:	pop	{fp, pc}

000145ec <table_set_ulong@@Base>:
   145ec:	push	{fp, lr}
   145f0:	mov	fp, sp
   145f4:	sub	sp, sp, #8
   145f8:	str	r3, [sp, #4]
   145fc:	mov	r3, #13
   14600:	str	r3, [sp]
   14604:	add	r3, sp, #4
   14608:	bl	14090 <table_set@@Base>
   1460c:	mov	sp, fp
   14610:	pop	{fp, pc}

00014614 <table_set_llong@@Base>:
   14614:	push	{fp, lr}
   14618:	mov	fp, sp
   1461c:	sub	sp, sp, #16
   14620:	ldr	r3, [fp, #12]
   14624:	str	r3, [sp, #12]
   14628:	ldr	r3, [fp, #8]
   1462c:	str	r3, [sp, #8]
   14630:	mov	r3, #14
   14634:	str	r3, [sp]
   14638:	add	r3, sp, #8
   1463c:	bl	14090 <table_set@@Base>
   14640:	mov	sp, fp
   14644:	pop	{fp, pc}

00014648 <table_set_ullong@@Base>:
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	sub	sp, sp, #16
   14654:	ldr	r3, [fp, #12]
   14658:	str	r3, [sp, #12]
   1465c:	ldr	r3, [fp, #8]
   14660:	str	r3, [sp, #8]
   14664:	mov	r3, #15
   14668:	str	r3, [sp]
   1466c:	add	r3, sp, #8
   14670:	bl	14090 <table_set@@Base>
   14674:	mov	sp, fp
   14678:	pop	{fp, pc}

0001467c <table_set_float@@Base>:
   1467c:	push	{fp, lr}
   14680:	mov	fp, sp
   14684:	sub	sp, sp, #8
   14688:	mov	r3, #16
   1468c:	vstr	s0, [sp, #4]
   14690:	str	r3, [sp]
   14694:	add	r3, sp, #4
   14698:	bl	14090 <table_set@@Base>
   1469c:	mov	sp, fp
   146a0:	pop	{fp, pc}

000146a4 <table_set_double@@Base>:
   146a4:	push	{fp, lr}
   146a8:	mov	fp, sp
   146ac:	sub	sp, sp, #16
   146b0:	mov	r3, #17
   146b4:	vstr	d0, [sp, #8]
   146b8:	str	r3, [sp]
   146bc:	add	r3, sp, #8
   146c0:	bl	14090 <table_set@@Base>
   146c4:	mov	sp, fp
   146c8:	pop	{fp, pc}

000146cc <table_set_ldouble@@Base>:
   146cc:	push	{fp, lr}
   146d0:	mov	fp, sp
   146d4:	sub	sp, sp, #16
   146d8:	mov	r3, #18
   146dc:	vstr	d0, [sp, #8]
   146e0:	str	r3, [sp]
   146e4:	add	r3, sp, #8
   146e8:	bl	14090 <table_set@@Base>
   146ec:	mov	sp, fp
   146f0:	pop	{fp, pc}

000146f4 <table_set_string@@Base>:
   146f4:	push	{fp, lr}
   146f8:	mov	fp, sp
   146fc:	sub	sp, sp, #8
   14700:	mov	ip, #21
   14704:	str	ip, [sp]
   14708:	bl	14090 <table_set@@Base>
   1470c:	mov	sp, fp
   14710:	pop	{fp, pc}

00014714 <table_set_char@@Base>:
   14714:	push	{fp, lr}
   14718:	mov	fp, sp
   1471c:	sub	sp, sp, #8
   14720:	strb	r3, [fp, #-1]
   14724:	mov	r3, #19
   14728:	str	r3, [sp]
   1472c:	sub	r3, fp, #1
   14730:	bl	14090 <table_set@@Base>
   14734:	mov	sp, fp
   14738:	pop	{fp, pc}

0001473c <table_set_uchar@@Base>:
   1473c:	push	{fp, lr}
   14740:	mov	fp, sp
   14744:	sub	sp, sp, #8
   14748:	strb	r3, [fp, #-1]
   1474c:	mov	r3, #20
   14750:	str	r3, [sp]
   14754:	sub	r3, fp, #1
   14758:	bl	14090 <table_set@@Base>
   1475c:	mov	sp, fp
   14760:	pop	{fp, pc}

00014764 <table_set_ptr@@Base>:
   14764:	push	{fp, lr}
   14768:	mov	fp, sp
   1476c:	sub	sp, sp, #8
   14770:	mov	ip, #23
   14774:	str	ip, [sp]
   14778:	bl	14090 <table_set@@Base>
   1477c:	mov	sp, fp
   14780:	pop	{fp, pc}

00014784 <table_serialize@@Base>:
   14784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14788:	add	fp, sp, #28
   1478c:	sub	sp, sp, #4
   14790:	mov	r5, r1
   14794:	mov	r4, r0
   14798:	bl	13ec8 <table_get_row_length@@Base>
   1479c:	str	r0, [sp]
   147a0:	mov	r0, r4
   147a4:	bl	13220 <table_get_column_length@@Base>
   147a8:	str	r0, [r5]
   147ac:	mov	r9, r0
   147b0:	ldr	r0, [r4, #8]
   147b4:	cmp	r9, #1
   147b8:	str	r0, [r5, #4]
   147bc:	add	r5, r5, #8
   147c0:	blt	14814 <table_serialize@@Base+0x90>
   147c4:	mov	r6, #0
   147c8:	mov	r0, r4
   147cc:	mov	r1, r6
   147d0:	bl	13284 <table_get_column_name@@Base>
   147d4:	mov	r8, r0
   147d8:	bl	11fec <strlen@plt>
   147dc:	mov	sl, r0
   147e0:	mov	r0, r4
   147e4:	mov	r1, r6
   147e8:	bl	13294 <table_get_column_data_type@@Base>
   147ec:	str	r0, [r5], #4
   147f0:	add	r7, sl, #1
   147f4:	mov	r1, r8
   147f8:	mov	r0, r5
   147fc:	mov	r2, r7
   14800:	bl	1201c <strncpy@plt>
   14804:	add	r6, r6, #1
   14808:	add	r5, r5, r7
   1480c:	cmp	r9, r6
   14810:	bne	147c8 <table_serialize@@Base+0x44>
   14814:	ldr	r1, [sp]
   14818:	add	r7, r5, #8
   1481c:	str	r1, [r5]
   14820:	cmp	r1, #1
   14824:	ldr	r0, [r4, #24]
   14828:	str	r0, [r5, #4]
   1482c:	blt	1499c <table_serialize@@Base+0x218>
   14830:	mov	r8, #0
   14834:	cmp	r9, #1
   14838:	blt	1498c <table_serialize@@Base+0x208>
   1483c:	mov	r6, #0
   14840:	b	14878 <table_serialize@@Base+0xf4>
   14844:	mov	r0, r4
   14848:	mov	r1, r8
   1484c:	mov	r2, r6
   14850:	bl	13e18 <table_get_string@@Base>
   14854:	mov	sl, r0
   14858:	bl	11fec <strlen@plt>
   1485c:	add	r5, r0, #1
   14860:	mov	r0, r7
   14864:	mov	r1, sl
   14868:	mov	r2, r5
   1486c:	bl	1201c <strncpy@plt>
   14870:	add	r7, r7, r5
   14874:	b	14980 <table_serialize@@Base+0x1fc>
   14878:	mov	r0, r4
   1487c:	mov	r1, r6
   14880:	bl	13294 <table_get_column_data_type@@Base>
   14884:	cmp	r0, #23
   14888:	bhi	14980 <table_serialize@@Base+0x1fc>
   1488c:	add	r1, pc, #0
   14890:	ldr	pc, [r1, r0, lsl #2]
   14894:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14898:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1489c:	andeq	r4, r1, r0, lsl r9
   148a0:	andeq	r4, r1, r0, lsl r9
   148a4:	andeq	r4, r1, ip, lsr #18
   148a8:	andeq	r4, r1, ip, lsr #18
   148ac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148b0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148b4:	andeq	r4, r1, r8, asr #18
   148b8:	andeq	r4, r1, r8, asr #18
   148bc:	andeq	r4, r1, ip, lsr #18
   148c0:	andeq	r4, r1, ip, lsr #18
   148c4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148c8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148cc:	andeq	r4, r1, r8, asr #18
   148d0:	andeq	r4, r1, r8, asr #18
   148d4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148d8:	andeq	r4, r1, r4, ror #18
   148dc:	andeq	r4, r1, r4, ror #18
   148e0:	andeq	r4, r1, r0, lsl r9
   148e4:	andeq	r4, r1, r0, lsl r9
   148e8:	andeq	r4, r1, r4, asr #16
   148ec:	andeq	r4, r1, r0, lsl r9
   148f0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148f4:	mov	r0, r4
   148f8:	mov	r1, r8
   148fc:	mov	r2, r6
   14900:	bl	13bf4 <table_get@@Base>
   14904:	ldr	r0, [r0]
   14908:	str	r0, [r7], #4
   1490c:	b	14980 <table_serialize@@Base+0x1fc>
   14910:	mov	r0, r4
   14914:	mov	r1, r8
   14918:	mov	r2, r6
   1491c:	bl	13bf4 <table_get@@Base>
   14920:	ldrb	r0, [r0]
   14924:	strb	r0, [r7], #1
   14928:	b	14980 <table_serialize@@Base+0x1fc>
   1492c:	mov	r0, r4
   14930:	mov	r1, r8
   14934:	mov	r2, r6
   14938:	bl	13bf4 <table_get@@Base>
   1493c:	ldrh	r0, [r0]
   14940:	strh	r0, [r7], #2
   14944:	b	14980 <table_serialize@@Base+0x1fc>
   14948:	mov	r0, r4
   1494c:	mov	r1, r8
   14950:	mov	r2, r6
   14954:	bl	13bf4 <table_get@@Base>
   14958:	ldrd	r0, [r0]
   1495c:	strd	r0, [r7]
   14960:	b	1497c <table_serialize@@Base+0x1f8>
   14964:	mov	r0, r4
   14968:	mov	r1, r8
   1496c:	mov	r2, r6
   14970:	bl	13bf4 <table_get@@Base>
   14974:	vldr	d16, [r0]
   14978:	vstr	d16, [r7]
   1497c:	add	r7, r7, #8
   14980:	add	r6, r6, #1
   14984:	cmp	r9, r6
   14988:	bne	14878 <table_serialize@@Base+0xf4>
   1498c:	ldr	r0, [sp]
   14990:	add	r8, r8, #1
   14994:	cmp	r8, r0
   14998:	bne	14834 <table_serialize@@Base+0xb0>
   1499c:	ldr	r0, [r4, #32]
   149a0:	str	r0, [r7]
   149a4:	ldr	r0, [r4, #48]	; 0x30
   149a8:	str	r0, [r7, #4]
   149ac:	ldr	r0, [r4, #32]
   149b0:	cmp	r0, #1
   149b4:	blt	149f8 <table_serialize@@Base+0x274>
   149b8:	add	r0, r7, #8
   149bc:	mov	r1, #0
   149c0:	ldr	r2, [r4, #36]	; 0x24
   149c4:	ldr	r2, [r2, r1, lsl #2]
   149c8:	str	r2, [r0]
   149cc:	ldr	r2, [r4, #40]	; 0x28
   149d0:	ldr	r2, [r2, r1, lsl #2]
   149d4:	str	r2, [r0, #4]
   149d8:	ldr	r2, [r4, #44]	; 0x2c
   149dc:	ldr	r2, [r2, r1, lsl #2]
   149e0:	add	r1, r1, #1
   149e4:	str	r2, [r0, #8]
   149e8:	add	r0, r0, #12
   149ec:	ldr	r2, [r4, #32]
   149f0:	cmp	r1, r2
   149f4:	blt	149c0 <table_serialize@@Base+0x23c>
   149f8:	sub	sp, fp, #28
   149fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a00 <table_deserialize@@Base>:
   14a00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a04:	add	fp, sp, #24
   14a08:	sub	sp, sp, #8
   14a0c:	mov	r5, r0
   14a10:	bl	127f0 <table_new@@Base>
   14a14:	mov	r4, r0
   14a18:	ldr	r0, [r5, #4]
   14a1c:	ldr	r9, [r5]
   14a20:	str	r0, [r4, #8]
   14a24:	cmp	r9, #1
   14a28:	ldr	r8, [r5, #8]!
   14a2c:	add	r6, r5, #4
   14a30:	blt	14a64 <table_deserialize@@Base+0x64>
   14a34:	mov	r7, r9
   14a38:	mov	r0, r4
   14a3c:	mov	r1, r6
   14a40:	mov	r2, r8
   14a44:	bl	132a8 <table_add_column@@Base>
   14a48:	mov	r0, r6
   14a4c:	bl	11fec <strlen@plt>
   14a50:	add	r5, r5, r0
   14a54:	subs	r7, r7, #1
   14a58:	ldr	r8, [r5, #5]!
   14a5c:	add	r6, r5, #4
   14a60:	bne	14a38 <table_deserialize@@Base+0x38>
   14a64:	ldr	r0, [r6]
   14a68:	add	r6, r5, #8
   14a6c:	cmp	r8, #1
   14a70:	str	r0, [r4, #24]
   14a74:	blt	14d8c <table_deserialize@@Base+0x38c>
   14a78:	mov	r7, #0
   14a7c:	mov	r0, r4
   14a80:	bl	13ed0 <table_add_row@@Base>
   14a84:	cmp	r9, #1
   14a88:	blt	14d80 <table_deserialize@@Base+0x380>
   14a8c:	mov	r5, #0
   14a90:	b	14b1c <table_deserialize@@Base+0x11c>
   14a94:	ldrb	r3, [r6], #1
   14a98:	mov	r0, r4
   14a9c:	mov	r1, r7
   14aa0:	mov	r2, r5
   14aa4:	bl	14714 <table_set_char@@Base>
   14aa8:	b	14d74 <table_deserialize@@Base+0x374>
   14aac:	ldrb	r3, [r6], #1
   14ab0:	mov	r0, r4
   14ab4:	mov	r1, r7
   14ab8:	mov	r2, r5
   14abc:	bl	1473c <table_set_uchar@@Base>
   14ac0:	b	14d74 <table_deserialize@@Base+0x374>
   14ac4:	mov	r0, r4
   14ac8:	mov	r1, r7
   14acc:	mov	r2, r5
   14ad0:	mov	r3, r6
   14ad4:	bl	146f4 <table_set_string@@Base>
   14ad8:	mov	r0, r6
   14adc:	bl	11fec <strlen@plt>
   14ae0:	add	r0, r6, r0
   14ae4:	add	r6, r0, #1
   14ae8:	b	14d74 <table_deserialize@@Base+0x374>
   14aec:	ldrb	r3, [r6], #1
   14af0:	mov	r0, r4
   14af4:	mov	r1, r7
   14af8:	mov	r2, r5
   14afc:	bl	143a4 <table_set_bool@@Base>
   14b00:	b	14d74 <table_deserialize@@Base+0x374>
   14b04:	ldr	r3, [r6], #4
   14b08:	mov	r0, r4
   14b0c:	mov	r1, r7
   14b10:	mov	r2, r5
   14b14:	bl	14764 <table_set_ptr@@Base>
   14b18:	b	14d74 <table_deserialize@@Base+0x374>
   14b1c:	mov	r0, r4
   14b20:	mov	r1, r5
   14b24:	bl	13294 <table_get_column_data_type@@Base>
   14b28:	cmp	r0, #23
   14b2c:	bhi	14d74 <table_deserialize@@Base+0x374>
   14b30:	add	r1, pc, #0
   14b34:	ldr	pc, [r1, r0, lsl #2]
   14b38:	muleq	r1, r8, fp
   14b3c:			; <UNDEFINED> instruction: 0x00014bb0
   14b40:	andeq	r4, r1, r8, asr #23
   14b44:	andeq	r4, r1, r0, ror #23
   14b48:	strdeq	r4, [r1], -r8
   14b4c:	andeq	r4, r1, r0, lsl ip
   14b50:	andeq	r4, r1, r8, lsr #24
   14b54:	andeq	r4, r1, r0, asr #24
   14b58:	andeq	r4, r1, r8, asr ip
   14b5c:	andeq	r4, r1, r4, ror ip
   14b60:	muleq	r1, r0, ip
   14b64:	andeq	r4, r1, r8, lsr #25
   14b68:	andeq	r4, r1, r0, asr #25
   14b6c:	ldrdeq	r4, [r1], -r8
   14b70:	strdeq	r4, [r1], -r0
   14b74:	andeq	r4, r1, ip, lsl #26
   14b78:	andeq	r4, r1, r8, lsr #26
   14b7c:	andeq	r4, r1, r4, asr #26
   14b80:	andeq	r4, r1, ip, asr sp
   14b84:	muleq	r1, r4, sl
   14b88:	andeq	r4, r1, ip, lsr #21
   14b8c:	andeq	r4, r1, r4, asr #21
   14b90:	andeq	r4, r1, ip, ror #21
   14b94:	andeq	r4, r1, r4, lsl #22
   14b98:	ldr	r3, [r6], #4
   14b9c:	mov	r0, r4
   14ba0:	mov	r1, r7
   14ba4:	mov	r2, r5
   14ba8:	bl	143cc <table_set_int@@Base>
   14bac:	b	14d74 <table_deserialize@@Base+0x374>
   14bb0:	ldr	r3, [r6], #4
   14bb4:	mov	r0, r4
   14bb8:	mov	r1, r7
   14bbc:	mov	r2, r5
   14bc0:	bl	143f4 <table_set_uint@@Base>
   14bc4:	b	14d74 <table_deserialize@@Base+0x374>
   14bc8:	ldrsb	r3, [r6], #1
   14bcc:	mov	r0, r4
   14bd0:	mov	r1, r7
   14bd4:	mov	r2, r5
   14bd8:	bl	1441c <table_set_int8@@Base>
   14bdc:	b	14d74 <table_deserialize@@Base+0x374>
   14be0:	ldrb	r3, [r6], #1
   14be4:	mov	r0, r4
   14be8:	mov	r1, r7
   14bec:	mov	r2, r5
   14bf0:	bl	14444 <table_set_uint8@@Base>
   14bf4:	b	14d74 <table_deserialize@@Base+0x374>
   14bf8:	ldrsh	r3, [r6], #2
   14bfc:	mov	r0, r4
   14c00:	mov	r1, r7
   14c04:	mov	r2, r5
   14c08:	bl	1446c <table_set_int16@@Base>
   14c0c:	b	14d74 <table_deserialize@@Base+0x374>
   14c10:	ldrh	r3, [r6], #2
   14c14:	mov	r0, r4
   14c18:	mov	r1, r7
   14c1c:	mov	r2, r5
   14c20:	bl	14494 <table_set_uint16@@Base>
   14c24:	b	14d74 <table_deserialize@@Base+0x374>
   14c28:	ldr	r3, [r6], #4
   14c2c:	mov	r0, r4
   14c30:	mov	r1, r7
   14c34:	mov	r2, r5
   14c38:	bl	144bc <table_set_int32@@Base>
   14c3c:	b	14d74 <table_deserialize@@Base+0x374>
   14c40:	ldr	r3, [r6], #4
   14c44:	mov	r0, r4
   14c48:	mov	r1, r7
   14c4c:	mov	r2, r5
   14c50:	bl	144e4 <table_set_uint32@@Base>
   14c54:	b	14d74 <table_deserialize@@Base+0x374>
   14c58:	ldrd	r0, [r6]
   14c5c:	mov	r2, r5
   14c60:	stm	sp, {r0, r1}
   14c64:	mov	r0, r4
   14c68:	mov	r1, r7
   14c6c:	bl	1450c <table_set_int64@@Base>
   14c70:	b	14d70 <table_deserialize@@Base+0x370>
   14c74:	ldrd	r0, [r6]
   14c78:	mov	r2, r5
   14c7c:	stm	sp, {r0, r1}
   14c80:	mov	r0, r4
   14c84:	mov	r1, r7
   14c88:	bl	14540 <table_set_uint64@@Base>
   14c8c:	b	14d70 <table_deserialize@@Base+0x370>
   14c90:	ldrsh	r3, [r6], #2
   14c94:	mov	r0, r4
   14c98:	mov	r1, r7
   14c9c:	mov	r2, r5
   14ca0:	bl	14574 <table_set_short@@Base>
   14ca4:	b	14d74 <table_deserialize@@Base+0x374>
   14ca8:	ldrh	r3, [r6], #2
   14cac:	mov	r0, r4
   14cb0:	mov	r1, r7
   14cb4:	mov	r2, r5
   14cb8:	bl	1459c <table_set_ushort@@Base>
   14cbc:	b	14d74 <table_deserialize@@Base+0x374>
   14cc0:	ldr	r3, [r6], #4
   14cc4:	mov	r0, r4
   14cc8:	mov	r1, r7
   14ccc:	mov	r2, r5
   14cd0:	bl	145c4 <table_set_long@@Base>
   14cd4:	b	14d74 <table_deserialize@@Base+0x374>
   14cd8:	ldr	r3, [r6], #4
   14cdc:	mov	r0, r4
   14ce0:	mov	r1, r7
   14ce4:	mov	r2, r5
   14ce8:	bl	145ec <table_set_ulong@@Base>
   14cec:	b	14d74 <table_deserialize@@Base+0x374>
   14cf0:	ldrd	r0, [r6]
   14cf4:	mov	r2, r5
   14cf8:	stm	sp, {r0, r1}
   14cfc:	mov	r0, r4
   14d00:	mov	r1, r7
   14d04:	bl	14614 <table_set_llong@@Base>
   14d08:	b	14d70 <table_deserialize@@Base+0x370>
   14d0c:	ldrd	r0, [r6]
   14d10:	mov	r2, r5
   14d14:	stm	sp, {r0, r1}
   14d18:	mov	r0, r4
   14d1c:	mov	r1, r7
   14d20:	bl	14648 <table_set_ullong@@Base>
   14d24:	b	14d70 <table_deserialize@@Base+0x370>
   14d28:	vldr	s0, [r6]
   14d2c:	mov	r0, r4
   14d30:	mov	r1, r7
   14d34:	mov	r2, r5
   14d38:	bl	1467c <table_set_float@@Base>
   14d3c:	add	r6, r6, #4
   14d40:	b	14d74 <table_deserialize@@Base+0x374>
   14d44:	vldr	d0, [r6]
   14d48:	mov	r0, r4
   14d4c:	mov	r1, r7
   14d50:	mov	r2, r5
   14d54:	bl	146a4 <table_set_double@@Base>
   14d58:	b	14d70 <table_deserialize@@Base+0x370>
   14d5c:	vldr	d0, [r6]
   14d60:	mov	r0, r4
   14d64:	mov	r1, r7
   14d68:	mov	r2, r5
   14d6c:	bl	146cc <table_set_ldouble@@Base>
   14d70:	add	r6, r6, #8
   14d74:	add	r5, r5, #1
   14d78:	cmp	r9, r5
   14d7c:	bne	14b1c <table_deserialize@@Base+0x11c>
   14d80:	add	r7, r7, #1
   14d84:	cmp	r7, r8
   14d88:	bne	14a7c <table_deserialize@@Base+0x7c>
   14d8c:	ldr	r5, [r6]
   14d90:	ldr	r0, [r6, #4]
   14d94:	cmp	r5, #1
   14d98:	str	r0, [r4, #48]	; 0x30
   14d9c:	blt	14dbc <table_deserialize@@Base+0x3bc>
   14da0:	add	r6, r6, #8
   14da4:	ldm	r6, {r1, r2, r3}
   14da8:	mov	r0, r4
   14dac:	bl	12ecc <table_register_callback@@Base>
   14db0:	add	r6, r6, #12
   14db4:	subs	r5, r5, #1
   14db8:	bne	14da4 <table_deserialize@@Base+0x3a4>
   14dbc:	mov	r0, r4
   14dc0:	sub	sp, fp, #24
   14dc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014dc8 <table_cell_init@@Base>:
   14dc8:	push	{r4, sl, fp, lr}
   14dcc:	add	fp, sp, #8
   14dd0:	mov	r4, r2
   14dd4:	bl	13e64 <table_get_row_ptr@@Base>
   14dd8:	ldr	r0, [r0]
   14ddc:	mov	r1, #0
   14de0:	str	r1, [r0, r4, lsl #2]
   14de4:	pop	{r4, sl, fp, pc}

00014de8 <table_get_cell_ptr@@Base>:
   14de8:	push	{r4, sl, fp, lr}
   14dec:	add	fp, sp, #8
   14df0:	mov	r4, r2
   14df4:	bl	13e64 <table_get_row_ptr@@Base>
   14df8:	ldr	r0, [r0]
   14dfc:	add	r0, r0, r4, lsl #2
   14e00:	pop	{r4, sl, fp, pc}

00014e04 <table_cell_destroy@@Base>:
   14e04:	push	{r4, r5, r6, sl, fp, lr}
   14e08:	add	fp, sp, #16
   14e0c:	mov	r5, r1
   14e10:	mov	r1, r2
   14e14:	mov	r4, r2
   14e18:	mov	r6, r0
   14e1c:	bl	13294 <table_get_column_data_type@@Base>
   14e20:	cmp	r0, #23
   14e24:	popeq	{r4, r5, r6, sl, fp, pc}
   14e28:	mov	r0, r6
   14e2c:	mov	r1, r5
   14e30:	bl	13e64 <table_get_row_ptr@@Base>
   14e34:	ldr	r0, [r0]
   14e38:	ldr	r0, [r0, r4, lsl #2]
   14e3c:	cmp	r0, #0
   14e40:	beq	14e4c <table_cell_destroy@@Base+0x48>
   14e44:	pop	{r4, r5, r6, sl, fp, lr}
   14e48:	b	11f98 <free@plt>
   14e4c:	pop	{r4, r5, r6, sl, fp, pc}

00014e50 <table_cell_to_buffer@@Base>:
   14e50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e54:	add	fp, sp, #24
   14e58:	sub	sp, sp, #8
   14e5c:	mov	r7, r1
   14e60:	mov	r1, r2
   14e64:	mov	r5, r3
   14e68:	mov	r6, r2
   14e6c:	mov	r4, r0
   14e70:	bl	13294 <table_get_column_data_type@@Base>
   14e74:	cmp	r0, #23
   14e78:	bhi	15168 <table_cell_to_buffer@@Base+0x318>
   14e7c:	ldr	r8, [fp, #8]
   14e80:	add	r1, pc, #0
   14e84:	ldr	pc, [r1, r0, lsl #2]
   14e88:	andeq	r4, r1, r8, ror #29
   14e8c:	strdeq	r4, [r1], -ip
   14e90:	andeq	r4, r1, r0, lsl pc
   14e94:	andeq	r4, r1, r4, lsr #30
   14e98:	andeq	r4, r1, r8, lsr pc
   14e9c:	andeq	r4, r1, ip, asr #30
   14ea0:	andeq	r4, r1, r0, ror #30
   14ea4:	andeq	r4, r1, r4, ror pc
   14ea8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   14eac:	andeq	r4, r1, r8, lsr #31
   14eb0:			; <UNDEFINED> instruction: 0x00014fbc
   14eb4:	ldrdeq	r4, [r1], -ip
   14eb8:	strdeq	r4, [r1], -ip
   14ebc:	andeq	r5, r1, ip, lsl r0
   14ec0:	andeq	r5, r1, ip, lsr r0
   14ec4:	andeq	r5, r1, ip, asr r0
   14ec8:	andeq	r5, r1, ip, ror r0
   14ecc:	andeq	r5, r1, r0, lsr #1
   14ed0:	andeq	r5, r1, r0, asr #1
   14ed4:	andeq	r5, r1, ip, ror #1
   14ed8:	andeq	r5, r1, r0, lsl #2
   14edc:	andeq	r5, r1, r0, lsr #2
   14ee0:	andeq	r5, r1, r0, asr #2
   14ee4:	andeq	r5, r1, r4, ror r1
   14ee8:	mov	r0, r4
   14eec:	mov	r1, r7
   14ef0:	mov	r2, r6
   14ef4:	bl	13c20 <table_get_int@@Base>
   14ef8:	b	15150 <table_cell_to_buffer@@Base+0x300>
   14efc:	mov	r0, r4
   14f00:	mov	r1, r7
   14f04:	mov	r2, r6
   14f08:	bl	13c38 <table_get_uint@@Base>
   14f0c:	b	14f84 <table_cell_to_buffer@@Base+0x134>
   14f10:	mov	r0, r4
   14f14:	mov	r1, r7
   14f18:	mov	r2, r6
   14f1c:	bl	13c50 <table_get_int8@@Base>
   14f20:	b	15150 <table_cell_to_buffer@@Base+0x300>
   14f24:	mov	r0, r4
   14f28:	mov	r1, r7
   14f2c:	mov	r2, r6
   14f30:	bl	13c68 <table_get_uint8@@Base>
   14f34:	b	14f84 <table_cell_to_buffer@@Base+0x134>
   14f38:	mov	r0, r4
   14f3c:	mov	r1, r7
   14f40:	mov	r2, r6
   14f44:	bl	13c80 <table_get_int16@@Base>
   14f48:	b	15150 <table_cell_to_buffer@@Base+0x300>
   14f4c:	mov	r0, r4
   14f50:	mov	r1, r7
   14f54:	mov	r2, r6
   14f58:	bl	13c98 <table_get_uint16@@Base>
   14f5c:	b	14f84 <table_cell_to_buffer@@Base+0x134>
   14f60:	mov	r0, r4
   14f64:	mov	r1, r7
   14f68:	mov	r2, r6
   14f6c:	bl	13cb0 <table_get_int32@@Base>
   14f70:	b	15150 <table_cell_to_buffer@@Base+0x300>
   14f74:	mov	r0, r4
   14f78:	mov	r1, r7
   14f7c:	mov	r2, r6
   14f80:	bl	13cc8 <table_get_uint32@@Base>
   14f84:	movw	r2, #22912	; 0x5980
   14f88:	mov	r3, r0
   14f8c:	movt	r2, #1
   14f90:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   14f94:	mov	r0, r4
   14f98:	mov	r1, r7
   14f9c:	mov	r2, r6
   14fa0:	bl	13ce0 <table_get_int64@@Base>
   14fa4:	b	1504c <table_cell_to_buffer@@Base+0x1fc>
   14fa8:	mov	r0, r4
   14fac:	mov	r1, r7
   14fb0:	mov	r2, r6
   14fb4:	bl	13cf8 <table_get_uint64@@Base>
   14fb8:	b	1506c <table_cell_to_buffer@@Base+0x21c>
   14fbc:	mov	r0, r4
   14fc0:	mov	r1, r7
   14fc4:	mov	r2, r6
   14fc8:	bl	13d10 <table_get_short@@Base>
   14fcc:	movw	r2, #22925	; 0x598d
   14fd0:	mov	r3, r0
   14fd4:	movt	r2, #1
   14fd8:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   14fdc:	mov	r0, r4
   14fe0:	mov	r1, r7
   14fe4:	mov	r2, r6
   14fe8:	bl	13d28 <table_get_ushort@@Base>
   14fec:	movw	r2, #22929	; 0x5991
   14ff0:	mov	r3, r0
   14ff4:	movt	r2, #1
   14ff8:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   14ffc:	mov	r0, r4
   15000:	mov	r1, r7
   15004:	mov	r2, r6
   15008:	bl	13d40 <table_get_long@@Base>
   1500c:	movw	r2, #22933	; 0x5995
   15010:	mov	r3, r0
   15014:	movt	r2, #1
   15018:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   1501c:	mov	r0, r4
   15020:	mov	r1, r7
   15024:	mov	r2, r6
   15028:	bl	13d58 <table_get_ulong@@Base>
   1502c:	movw	r2, #22937	; 0x5999
   15030:	mov	r3, r0
   15034:	movt	r2, #1
   15038:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   1503c:	mov	r0, r4
   15040:	mov	r1, r7
   15044:	mov	r2, r6
   15048:	bl	13d70 <table_get_llong@@Base>
   1504c:	movw	r2, #22915	; 0x5983
   15050:	stm	sp, {r0, r1}
   15054:	movt	r2, #1
   15058:	b	150dc <table_cell_to_buffer@@Base+0x28c>
   1505c:	mov	r0, r4
   15060:	mov	r1, r7
   15064:	mov	r2, r6
   15068:	bl	13d88 <table_get_ullong@@Base>
   1506c:	movw	r2, #22920	; 0x5988
   15070:	stm	sp, {r0, r1}
   15074:	movt	r2, #1
   15078:	b	150dc <table_cell_to_buffer@@Base+0x28c>
   1507c:	mov	r0, r4
   15080:	mov	r1, r7
   15084:	mov	r2, r6
   15088:	bl	13da0 <table_get_float@@Base>
   1508c:	movw	r2, #22944	; 0x59a0
   15090:	vcvt.f64.f32	d16, s0
   15094:	vstr	d16, [sp]
   15098:	movt	r2, #1
   1509c:	b	150dc <table_cell_to_buffer@@Base+0x28c>
   150a0:	mov	r0, r4
   150a4:	mov	r1, r7
   150a8:	mov	r2, r6
   150ac:	bl	13db8 <table_get_double@@Base>
   150b0:	movw	r2, #22947	; 0x59a3
   150b4:	vstr	d0, [sp]
   150b8:	movt	r2, #1
   150bc:	b	150dc <table_cell_to_buffer@@Base+0x28c>
   150c0:	mov	r0, r4
   150c4:	mov	r1, r7
   150c8:	mov	r2, r6
   150cc:	bl	13dd0 <table_get_ldouble@@Base>
   150d0:	movw	r2, #22951	; 0x59a7
   150d4:	vstr	d0, [sp]
   150d8:	movt	r2, #1
   150dc:	mov	r0, r5
   150e0:	mov	r1, r8
   150e4:	bl	12004 <snprintf@plt>
   150e8:	b	15168 <table_cell_to_buffer@@Base+0x318>
   150ec:	mov	r0, r4
   150f0:	mov	r1, r7
   150f4:	mov	r2, r6
   150f8:	bl	13de8 <table_get_char@@Base>
   150fc:	b	15110 <table_cell_to_buffer@@Base+0x2c0>
   15100:	mov	r0, r4
   15104:	mov	r1, r7
   15108:	mov	r2, r6
   1510c:	bl	13e00 <table_get_uchar@@Base>
   15110:	movw	r2, #22955	; 0x59ab
   15114:	mov	r3, r0
   15118:	movt	r2, #1
   1511c:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   15120:	mov	r0, r4
   15124:	mov	r1, r7
   15128:	mov	r2, r6
   1512c:	bl	13e18 <table_get_string@@Base>
   15130:	movw	r2, #22941	; 0x599d
   15134:	mov	r3, r0
   15138:	movt	r2, #1
   1513c:	b	1515c <table_cell_to_buffer@@Base+0x30c>
   15140:	mov	r0, r4
   15144:	mov	r1, r7
   15148:	mov	r2, r6
   1514c:	bl	13c08 <table_get_bool@@Base>
   15150:	movw	r2, #22755	; 0x58e3
   15154:	mov	r3, r0
   15158:	movt	r2, #1
   1515c:	mov	r0, r5
   15160:	mov	r1, r8
   15164:	bl	12004 <snprintf@plt>
   15168:	mov	r0, #0
   1516c:	sub	sp, fp, #24
   15170:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15174:	mov	r0, r4
   15178:	mov	r1, r7
   1517c:	mov	r2, r6
   15180:	bl	13e2c <table_get_ptr@@Base>
   15184:	movw	r2, #22958	; 0x59ae
   15188:	mov	r3, r0
   1518c:	movt	r2, #1
   15190:	b	1515c <table_cell_to_buffer@@Base+0x30c>

00015194 <table_cell_from_buffer@@Base>:
   15194:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15198:	add	fp, sp, #24
   1519c:	sub	sp, sp, #264	; 0x108
   151a0:	mov	r5, r1
   151a4:	mov	r1, r2
   151a8:	mov	r7, r3
   151ac:	mov	r4, r2
   151b0:	mov	r6, r0
   151b4:	bl	13294 <table_get_column_data_type@@Base>
   151b8:	cmp	r0, #23
   151bc:	bhi	15790 <table_cell_from_buffer@@Base+0x5fc>
   151c0:	add	r1, pc, #0
   151c4:	ldr	pc, [r1, r0, lsl #2]
   151c8:	andeq	r5, r1, r8, lsr #4
   151cc:	andeq	r5, r1, r0, ror #4
   151d0:	muleq	r1, r8, r2
   151d4:	ldrdeq	r5, [r1], -r0
   151d8:	andeq	r5, r1, r8, lsl #6
   151dc:	andeq	r5, r1, r0, asr #6
   151e0:	andeq	r5, r1, r8, ror r3
   151e4:			; <UNDEFINED> instruction: 0x000153b0
   151e8:	andeq	r5, r1, r8, ror #7
   151ec:	andeq	r5, r1, r8, lsr #8
   151f0:	andeq	r5, r1, r8, ror #8
   151f4:	andeq	r5, r1, r0, lsr #9
   151f8:	ldrdeq	r5, [r1], -r8
   151fc:	andeq	r5, r1, r0, lsl r5
   15200:	andeq	r5, r1, r8, asr #10
   15204:	andeq	r5, r1, r8, lsl #11
   15208:	andeq	r5, r1, r8, asr #11
   1520c:	andeq	r5, r1, r0, lsl #12
   15210:	andeq	r5, r1, r8, lsr r6
   15214:	andeq	r5, r1, r0, ror r6
   15218:	andeq	r5, r1, r8, lsr #13
   1521c:	andeq	r5, r1, r0, ror #13
   15220:	andeq	r5, r1, r8, lsl r7
   15224:	andeq	r5, r1, ip, asr r7
   15228:	movw	r1, #22755	; 0x58e3
   1522c:	add	r2, sp, #8
   15230:	mov	r0, r7
   15234:	movt	r1, #1
   15238:	bl	12010 <__isoc99_sscanf@plt>
   1523c:	mvn	r7, #0
   15240:	cmp	r0, #1
   15244:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15248:	ldr	r3, [sp, #8]
   1524c:	mov	r0, r6
   15250:	mov	r1, r5
   15254:	mov	r2, r4
   15258:	bl	143cc <table_set_int@@Base>
   1525c:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15260:	movw	r1, #22912	; 0x5980
   15264:	add	r2, sp, #8
   15268:	mov	r0, r7
   1526c:	movt	r1, #1
   15270:	bl	12010 <__isoc99_sscanf@plt>
   15274:	mvn	r7, #0
   15278:	cmp	r0, #1
   1527c:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15280:	ldr	r3, [sp, #8]
   15284:	mov	r0, r6
   15288:	mov	r1, r5
   1528c:	mov	r2, r4
   15290:	bl	143f4 <table_set_uint@@Base>
   15294:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15298:	movw	r1, #22961	; 0x59b1
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	movt	r1, #1
   152a8:	bl	12010 <__isoc99_sscanf@plt>
   152ac:	mvn	r7, #0
   152b0:	cmp	r0, #1
   152b4:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   152b8:	ldrsb	r3, [sp, #8]
   152bc:	mov	r0, r6
   152c0:	mov	r1, r5
   152c4:	mov	r2, r4
   152c8:	bl	1441c <table_set_int8@@Base>
   152cc:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   152d0:	movw	r1, #22966	; 0x59b6
   152d4:	add	r2, sp, #8
   152d8:	mov	r0, r7
   152dc:	movt	r1, #1
   152e0:	bl	12010 <__isoc99_sscanf@plt>
   152e4:	mvn	r7, #0
   152e8:	cmp	r0, #1
   152ec:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   152f0:	ldrb	r3, [sp, #8]
   152f4:	mov	r0, r6
   152f8:	mov	r1, r5
   152fc:	mov	r2, r4
   15300:	bl	14444 <table_set_uint8@@Base>
   15304:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15308:	movw	r1, #22925	; 0x598d
   1530c:	add	r2, sp, #8
   15310:	mov	r0, r7
   15314:	movt	r1, #1
   15318:	bl	12010 <__isoc99_sscanf@plt>
   1531c:	mvn	r7, #0
   15320:	cmp	r0, #1
   15324:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15328:	ldrsh	r3, [sp, #8]
   1532c:	mov	r0, r6
   15330:	mov	r1, r5
   15334:	mov	r2, r4
   15338:	bl	1446c <table_set_int16@@Base>
   1533c:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15340:	movw	r1, #22929	; 0x5991
   15344:	add	r2, sp, #8
   15348:	mov	r0, r7
   1534c:	movt	r1, #1
   15350:	bl	12010 <__isoc99_sscanf@plt>
   15354:	mvn	r7, #0
   15358:	cmp	r0, #1
   1535c:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15360:	ldrh	r3, [sp, #8]
   15364:	mov	r0, r6
   15368:	mov	r1, r5
   1536c:	mov	r2, r4
   15370:	bl	14494 <table_set_uint16@@Base>
   15374:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15378:	movw	r1, #22755	; 0x58e3
   1537c:	add	r2, sp, #8
   15380:	mov	r0, r7
   15384:	movt	r1, #1
   15388:	bl	12010 <__isoc99_sscanf@plt>
   1538c:	mvn	r7, #0
   15390:	cmp	r0, #1
   15394:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15398:	ldr	r3, [sp, #8]
   1539c:	mov	r0, r6
   153a0:	mov	r1, r5
   153a4:	mov	r2, r4
   153a8:	bl	144bc <table_set_int32@@Base>
   153ac:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   153b0:	movw	r1, #22912	; 0x5980
   153b4:	add	r2, sp, #8
   153b8:	mov	r0, r7
   153bc:	movt	r1, #1
   153c0:	bl	12010 <__isoc99_sscanf@plt>
   153c4:	mvn	r7, #0
   153c8:	cmp	r0, #1
   153cc:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   153d0:	ldr	r3, [sp, #8]
   153d4:	mov	r0, r6
   153d8:	mov	r1, r5
   153dc:	mov	r2, r4
   153e0:	bl	144e4 <table_set_uint32@@Base>
   153e4:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   153e8:	movw	r1, #22915	; 0x5983
   153ec:	add	r2, sp, #8
   153f0:	mov	r0, r7
   153f4:	movt	r1, #1
   153f8:	bl	12010 <__isoc99_sscanf@plt>
   153fc:	mvn	r7, #0
   15400:	cmp	r0, #1
   15404:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15408:	ldr	r0, [sp, #8]
   1540c:	ldr	r1, [sp, #12]
   15410:	mov	r2, r4
   15414:	stm	sp, {r0, r1}
   15418:	mov	r0, r6
   1541c:	mov	r1, r5
   15420:	bl	1450c <table_set_int64@@Base>
   15424:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15428:	movw	r1, #22920	; 0x5988
   1542c:	add	r2, sp, #8
   15430:	mov	r0, r7
   15434:	movt	r1, #1
   15438:	bl	12010 <__isoc99_sscanf@plt>
   1543c:	mvn	r7, #0
   15440:	cmp	r0, #1
   15444:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15448:	ldr	r0, [sp, #8]
   1544c:	ldr	r1, [sp, #12]
   15450:	mov	r2, r4
   15454:	stm	sp, {r0, r1}
   15458:	mov	r0, r6
   1545c:	mov	r1, r5
   15460:	bl	14540 <table_set_uint64@@Base>
   15464:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15468:	movw	r1, #22925	; 0x598d
   1546c:	add	r2, sp, #8
   15470:	mov	r0, r7
   15474:	movt	r1, #1
   15478:	bl	12010 <__isoc99_sscanf@plt>
   1547c:	mvn	r7, #0
   15480:	cmp	r0, #1
   15484:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15488:	ldrsh	r3, [sp, #8]
   1548c:	mov	r0, r6
   15490:	mov	r1, r5
   15494:	mov	r2, r4
   15498:	bl	14574 <table_set_short@@Base>
   1549c:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   154a0:	movw	r1, #22929	; 0x5991
   154a4:	add	r2, sp, #8
   154a8:	mov	r0, r7
   154ac:	movt	r1, #1
   154b0:	bl	12010 <__isoc99_sscanf@plt>
   154b4:	mvn	r7, #0
   154b8:	cmp	r0, #1
   154bc:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   154c0:	ldrh	r3, [sp, #8]
   154c4:	mov	r0, r6
   154c8:	mov	r1, r5
   154cc:	mov	r2, r4
   154d0:	bl	1459c <table_set_ushort@@Base>
   154d4:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   154d8:	movw	r1, #22933	; 0x5995
   154dc:	add	r2, sp, #8
   154e0:	mov	r0, r7
   154e4:	movt	r1, #1
   154e8:	bl	12010 <__isoc99_sscanf@plt>
   154ec:	mvn	r7, #0
   154f0:	cmp	r0, #1
   154f4:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   154f8:	ldr	r3, [sp, #8]
   154fc:	mov	r0, r6
   15500:	mov	r1, r5
   15504:	mov	r2, r4
   15508:	bl	145c4 <table_set_long@@Base>
   1550c:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15510:	movw	r1, #22937	; 0x5999
   15514:	add	r2, sp, #8
   15518:	mov	r0, r7
   1551c:	movt	r1, #1
   15520:	bl	12010 <__isoc99_sscanf@plt>
   15524:	mvn	r7, #0
   15528:	cmp	r0, #1
   1552c:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15530:	ldr	r3, [sp, #8]
   15534:	mov	r0, r6
   15538:	mov	r1, r5
   1553c:	mov	r2, r4
   15540:	bl	145ec <table_set_ulong@@Base>
   15544:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15548:	movw	r1, #22915	; 0x5983
   1554c:	add	r2, sp, #8
   15550:	mov	r0, r7
   15554:	movt	r1, #1
   15558:	bl	12010 <__isoc99_sscanf@plt>
   1555c:	mvn	r7, #0
   15560:	cmp	r0, #1
   15564:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15568:	ldr	r0, [sp, #8]
   1556c:	ldr	r1, [sp, #12]
   15570:	mov	r2, r4
   15574:	stm	sp, {r0, r1}
   15578:	mov	r0, r6
   1557c:	mov	r1, r5
   15580:	bl	14614 <table_set_llong@@Base>
   15584:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15588:	movw	r1, #22920	; 0x5988
   1558c:	add	r2, sp, #8
   15590:	mov	r0, r7
   15594:	movt	r1, #1
   15598:	bl	12010 <__isoc99_sscanf@plt>
   1559c:	mvn	r7, #0
   155a0:	cmp	r0, #1
   155a4:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   155a8:	ldr	r0, [sp, #8]
   155ac:	ldr	r1, [sp, #12]
   155b0:	mov	r2, r4
   155b4:	stm	sp, {r0, r1}
   155b8:	mov	r0, r6
   155bc:	mov	r1, r5
   155c0:	bl	14648 <table_set_ullong@@Base>
   155c4:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   155c8:	movw	r1, #22944	; 0x59a0
   155cc:	add	r2, sp, #8
   155d0:	mov	r0, r7
   155d4:	movt	r1, #1
   155d8:	bl	12010 <__isoc99_sscanf@plt>
   155dc:	mvn	r7, #0
   155e0:	cmp	r0, #1
   155e4:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   155e8:	vldr	s0, [sp, #8]
   155ec:	mov	r0, r6
   155f0:	mov	r1, r5
   155f4:	mov	r2, r4
   155f8:	bl	1467c <table_set_float@@Base>
   155fc:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15600:	movw	r1, #22947	; 0x59a3
   15604:	add	r2, sp, #8
   15608:	mov	r0, r7
   1560c:	movt	r1, #1
   15610:	bl	12010 <__isoc99_sscanf@plt>
   15614:	mvn	r7, #0
   15618:	cmp	r0, #1
   1561c:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15620:	vldr	d0, [sp, #8]
   15624:	mov	r0, r6
   15628:	mov	r1, r5
   1562c:	mov	r2, r4
   15630:	bl	146a4 <table_set_double@@Base>
   15634:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15638:	movw	r1, #22951	; 0x59a7
   1563c:	add	r2, sp, #8
   15640:	mov	r0, r7
   15644:	movt	r1, #1
   15648:	bl	12010 <__isoc99_sscanf@plt>
   1564c:	mvn	r7, #0
   15650:	cmp	r0, #1
   15654:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15658:	vldr	d0, [sp, #8]
   1565c:	mov	r0, r6
   15660:	mov	r1, r5
   15664:	mov	r2, r4
   15668:	bl	146cc <table_set_ldouble@@Base>
   1566c:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15670:	movw	r1, #22955	; 0x59ab
   15674:	add	r2, sp, #8
   15678:	mov	r0, r7
   1567c:	movt	r1, #1
   15680:	bl	12010 <__isoc99_sscanf@plt>
   15684:	mvn	r7, #0
   15688:	cmp	r0, #1
   1568c:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15690:	ldrb	r3, [sp, #8]
   15694:	mov	r0, r6
   15698:	mov	r1, r5
   1569c:	mov	r2, r4
   156a0:	bl	14714 <table_set_char@@Base>
   156a4:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   156a8:	movw	r1, #22955	; 0x59ab
   156ac:	add	r2, sp, #8
   156b0:	mov	r0, r7
   156b4:	movt	r1, #1
   156b8:	bl	12010 <__isoc99_sscanf@plt>
   156bc:	mvn	r7, #0
   156c0:	cmp	r0, #1
   156c4:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   156c8:	ldrb	r3, [sp, #8]
   156cc:	mov	r0, r6
   156d0:	mov	r1, r5
   156d4:	mov	r2, r4
   156d8:	bl	1473c <table_set_uchar@@Base>
   156dc:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   156e0:	movw	r1, #22941	; 0x599d
   156e4:	add	r2, sp, #8
   156e8:	mov	r0, r7
   156ec:	movt	r1, #1
   156f0:	bl	12010 <__isoc99_sscanf@plt>
   156f4:	mvn	r7, #0
   156f8:	cmp	r0, #1
   156fc:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15700:	add	r3, sp, #8
   15704:	mov	r0, r6
   15708:	mov	r1, r5
   1570c:	mov	r2, r4
   15710:	bl	146f4 <table_set_string@@Base>
   15714:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   15718:	movw	r1, #22755	; 0x58e3
   1571c:	add	r2, sp, #8
   15720:	mov	r0, r7
   15724:	movt	r1, #1
   15728:	bl	12010 <__isoc99_sscanf@plt>
   1572c:	mvn	r7, #0
   15730:	cmp	r0, #1
   15734:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   15738:	ldr	r0, [sp, #8]
   1573c:	cmp	r0, #0
   15740:	beq	157a0 <table_cell_from_buffer@@Base+0x60c>
   15744:	mov	r0, r6
   15748:	mov	r1, r5
   1574c:	mov	r2, r4
   15750:	mov	r3, #1
   15754:	bl	143a4 <table_set_bool@@Base>
   15758:	b	15790 <table_cell_from_buffer@@Base+0x5fc>
   1575c:	movw	r1, #22958	; 0x59ae
   15760:	add	r2, sp, #8
   15764:	mov	r0, r7
   15768:	movt	r1, #1
   1576c:	bl	12010 <__isoc99_sscanf@plt>
   15770:	mvn	r7, #0
   15774:	cmp	r0, #1
   15778:	bne	15794 <table_cell_from_buffer@@Base+0x600>
   1577c:	ldr	r3, [sp, #8]
   15780:	mov	r0, r6
   15784:	mov	r1, r5
   15788:	mov	r2, r4
   1578c:	bl	14764 <table_set_ptr@@Base>
   15790:	mov	r7, #0
   15794:	mov	r0, r7
   15798:	sub	sp, fp, #24
   1579c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157a0:	mov	r0, r6
   157a4:	mov	r1, r5
   157a8:	mov	r2, r4
   157ac:	mov	r3, #0
   157b0:	mov	r7, #0
   157b4:	bl	143a4 <table_set_bool@@Base>
   157b8:	b	15794 <table_cell_from_buffer@@Base+0x600>

000157bc <table_cell_nullify@@Base>:
   157bc:	push	{r4, r5, fp, lr}
   157c0:	add	fp, sp, #8
   157c4:	mov	r4, r2
   157c8:	bl	13e64 <table_get_row_ptr@@Base>
   157cc:	ldr	r5, [r0]
   157d0:	ldr	r0, [r5, r4, lsl #2]
   157d4:	cmp	r0, #0
   157d8:	beq	157e8 <table_cell_nullify@@Base+0x2c>
   157dc:	bl	11f98 <free@plt>
   157e0:	mov	r0, #0
   157e4:	str	r0, [r5, r4, lsl #2]
   157e8:	mov	r0, #0
   157ec:	pop	{r4, r5, fp, pc}

000157f0 <__libc_csu_init@@Base>:
   157f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157f4:	mov	r7, r0
   157f8:	ldr	r6, [pc, #72]	; 15848 <__libc_csu_init@@Base+0x58>
   157fc:	ldr	r5, [pc, #72]	; 1584c <__libc_csu_init@@Base+0x5c>
   15800:	add	r6, pc, r6
   15804:	add	r5, pc, r5
   15808:	sub	r6, r6, r5
   1580c:	mov	r8, r1
   15810:	mov	r9, r2
   15814:	bl	11f60 <strcmp@plt-0x20>
   15818:	asrs	r6, r6, #2
   1581c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15820:	mov	r4, #0
   15824:	add	r4, r4, #1
   15828:	ldr	r3, [r5], #4
   1582c:	mov	r2, r9
   15830:	mov	r1, r8
   15834:	mov	r0, r7
   15838:	blx	r3
   1583c:	cmp	r6, r4
   15840:	bne	15824 <__libc_csu_init@@Base+0x34>
   15844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15848:	andeq	r0, r1, r4, lsl #14
   1584c:	strdeq	r0, [r1], -ip

00015850 <__libc_csu_fini@@Base>:
   15850:	bx	lr

Disassembly of section .fini:

00015854 <.fini>:
   15854:	push	{r3, lr}
   15858:	pop	{r3, pc}
