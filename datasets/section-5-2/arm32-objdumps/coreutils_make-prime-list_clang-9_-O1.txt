
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

000105b8 <.init>:
   105b8:	push	{r3, lr}
   105bc:	bl	106d4 <abort@plt+0x48>
   105c0:	pop	{r3, pc}

Disassembly of section .plt:

000105c4 <raise@plt-0x14>:
   105c4:	push	{lr}		; (str lr, [sp, #-4]!)
   105c8:	ldr	lr, [pc, #4]	; 105d4 <raise@plt-0x4>
   105cc:	add	lr, pc, lr
   105d0:	ldr	pc, [lr, #8]!
   105d4:	andeq	r1, r1, ip, lsr #20

000105d8 <raise@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #69632	; 0x11000
   105e0:	ldr	pc, [ip, #2604]!	; 0xa2c

000105e4 <free@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #69632	; 0x11000
   105ec:	ldr	pc, [ip, #2596]!	; 0xa24

000105f0 <ferror@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #69632	; 0x11000
   105f8:	ldr	pc, [ip, #2588]!	; 0xa1c

000105fc <puts@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #69632	; 0x11000
   10604:	ldr	pc, [ip, #2580]!	; 0xa14

00010608 <malloc@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #69632	; 0x11000
   10610:	ldr	pc, [ip, #2572]!	; 0xa0c

00010614 <__libc_start_main@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #69632	; 0x11000
   1061c:	ldr	pc, [ip, #2564]!	; 0xa04

00010620 <strerror@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #69632	; 0x11000
   10628:	ldr	pc, [ip, #2556]!	; 0x9fc

0001062c <__gmon_start__@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #69632	; 0x11000
   10634:	ldr	pc, [ip, #2548]!	; 0x9f4

00010638 <exit@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #69632	; 0x11000
   10640:	ldr	pc, [ip, #2540]!	; 0x9ec

00010644 <__errno_location@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #69632	; 0x11000
   1064c:	ldr	pc, [ip, #2532]!	; 0x9e4

00010650 <memset@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #69632	; 0x11000
   10658:	ldr	pc, [ip, #2524]!	; 0x9dc

0001065c <__printf_chk@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #69632	; 0x11000
   10664:	ldr	pc, [ip, #2516]!	; 0x9d4

00010668 <__fprintf_chk@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #69632	; 0x11000
   10670:	ldr	pc, [ip, #2508]!	; 0x9cc

00010674 <fclose@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #69632	; 0x11000
   1067c:	ldr	pc, [ip, #2500]!	; 0x9c4

00010680 <atoi@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #69632	; 0x11000
   10688:	ldr	pc, [ip, #2492]!	; 0x9bc

0001068c <abort@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #69632	; 0x11000
   10694:	ldr	pc, [ip, #2484]!	; 0x9b4

Disassembly of section .text:

00010698 <.text>:
   10698:	mov	fp, #0
   1069c:	mov	lr, #0
   106a0:	pop	{r1}		; (ldr r1, [sp], #4)
   106a4:	mov	r2, sp
   106a8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ac:	push	{r0}		; (str r0, [sp, #-4]!)
   106b0:	ldr	ip, [pc, #16]	; 106c8 <abort@plt+0x3c>
   106b4:	push	{ip}		; (str ip, [sp, #-4]!)
   106b8:	ldr	r0, [pc, #12]	; 106cc <abort@plt+0x40>
   106bc:	ldr	r3, [pc, #12]	; 106d0 <abort@plt+0x44>
   106c0:	bl	10614 <__libc_start_main@plt>
   106c4:	bl	1068c <abort@plt>
   106c8:	andeq	r0, r1, r0, lsr #28
   106cc:	andeq	r0, r1, r8, lsl #15
   106d0:	andeq	r0, r1, r0, asr #27
   106d4:	ldr	r3, [pc, #20]	; 106f0 <abort@plt+0x64>
   106d8:	ldr	r2, [pc, #20]	; 106f4 <abort@plt+0x68>
   106dc:	add	r3, pc, r3
   106e0:	ldr	r2, [r3, r2]
   106e4:	cmp	r2, #0
   106e8:	bxeq	lr
   106ec:	b	1062c <__gmon_start__@plt>
   106f0:	andeq	r1, r1, ip, lsl r9
   106f4:	andeq	r0, r0, ip, asr #32
   106f8:	ldr	r0, [pc, #24]	; 10718 <abort@plt+0x8c>
   106fc:	ldr	r3, [pc, #24]	; 1071c <abort@plt+0x90>
   10700:	cmp	r3, r0
   10704:	bxeq	lr
   10708:	ldr	r3, [pc, #16]	; 10720 <abort@plt+0x94>
   1070c:	cmp	r3, #0
   10710:	bxeq	lr
   10714:	bx	r3
   10718:	andeq	r2, r2, r8, asr r0
   1071c:	andeq	r2, r2, r8, asr r0
   10720:	andeq	r0, r0, r0
   10724:	ldr	r0, [pc, #36]	; 10750 <abort@plt+0xc4>
   10728:	ldr	r1, [pc, #36]	; 10754 <abort@plt+0xc8>
   1072c:	sub	r1, r1, r0
   10730:	asr	r1, r1, #2
   10734:	add	r1, r1, r1, lsr #31
   10738:	asrs	r1, r1, #1
   1073c:	bxeq	lr
   10740:	ldr	r3, [pc, #16]	; 10758 <abort@plt+0xcc>
   10744:	cmp	r3, #0
   10748:	bxeq	lr
   1074c:	bx	r3
   10750:	andeq	r2, r2, r8, asr r0
   10754:	andeq	r2, r2, r8, asr r0
   10758:	andeq	r0, r0, r0
   1075c:	push	{r4, lr}
   10760:	ldr	r4, [pc, #24]	; 10780 <abort@plt+0xf4>
   10764:	ldrb	r3, [r4]
   10768:	cmp	r3, #0
   1076c:	popne	{r4, pc}
   10770:	bl	106f8 <abort@plt+0x6c>
   10774:	mov	r3, #1
   10778:	strb	r3, [r4]
   1077c:	pop	{r4, pc}
   10780:	andeq	r2, r2, r0, rrx
   10784:	b	10724 <abort@plt+0x98>
   10788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1078c:	add	fp, sp, #28
   10790:	sub	sp, sp, #4
   10794:	cmp	r0, #2
   10798:	bne	10874 <abort@plt+0x1e8>
   1079c:	ldr	r0, [r1, #4]
   107a0:	bl	10680 <atoi@plt>
   107a4:	mov	r5, #0
   107a8:	cmp	r0, #3
   107ac:	blt	10910 <abort@plt+0x284>
   107b0:	and	r1, r0, #1
   107b4:	add	r0, r0, r1
   107b8:	sub	r4, r0, #2
   107bc:	add	r0, r4, r4, lsr #31
   107c0:	asr	r6, r0, #1
   107c4:	mov	r0, r6
   107c8:	bl	1091c <abort@plt+0x290>
   107cc:	mov	r5, r0
   107d0:	mov	r1, #1
   107d4:	mov	r2, r6
   107d8:	bl	10650 <memset@plt>
   107dc:	add	r0, r6, r6, lsl #1
   107e0:	lsl	r0, r0, #3
   107e4:	bl	1091c <abort@plt+0x290>
   107e8:	mov	r9, r0
   107ec:	cmp	r4, #2
   107f0:	mov	sl, #0
   107f4:	bcc	10894 <abort@plt+0x208>
   107f8:	mov	r4, #0
   107fc:	mov	sl, #0
   10800:	mov	r8, #0
   10804:	b	10810 <abort@plt+0x184>
   10808:	cmp	r8, r6
   1080c:	bcs	10894 <abort@plt+0x208>
   10810:	mov	r0, #3
   10814:	add	r7, r0, r8, lsl #1
   10818:	add	r0, sl, sl, lsl #1
   1081c:	add	r0, r9, r0, lsl #3
   10820:	mov	r1, r7
   10824:	bl	10954 <abort@plt+0x2c8>
   10828:	mul	r0, r7, r7
   1082c:	sub	r0, r0, #3
   10830:	cmp	r6, r0, lsr #1
   10834:	bls	1084c <abort@plt+0x1c0>
   10838:	lsr	r0, r0, #1
   1083c:	strb	r4, [r5, r0]
   10840:	add	r0, r0, r7
   10844:	cmp	r0, r6
   10848:	bcc	1083c <abort@plt+0x1b0>
   1084c:	add	sl, sl, #1
   10850:	add	r0, r8, #1
   10854:	mov	r8, r0
   10858:	cmp	r0, r6
   1085c:	bcs	10808 <abort@plt+0x17c>
   10860:	ldrb	r1, [r5, r8]
   10864:	add	r0, r8, #1
   10868:	cmp	r1, #0
   1086c:	beq	10854 <abort@plt+0x1c8>
   10870:	b	10808 <abort@plt+0x17c>
   10874:	ldr	r3, [r1]
   10878:	movw	r0, #8280	; 0x2058
   1087c:	movt	r0, #2
   10880:	ldr	r0, [r0]
   10884:	mov	r5, #1
   10888:	movw	r2, #3632	; 0xe30
   1088c:	movt	r2, #1
   10890:	b	10908 <abort@plt+0x27c>
   10894:	mov	r0, r9
   10898:	mov	r1, sl
   1089c:	bl	1099c <abort@plt+0x310>
   108a0:	mov	r0, r5
   108a4:	bl	105e4 <free@plt>
   108a8:	mov	r0, r9
   108ac:	bl	105e4 <free@plt>
   108b0:	movw	r0, #8284	; 0x205c
   108b4:	movt	r0, #2
   108b8:	ldr	r4, [r0]
   108bc:	mov	r0, r4
   108c0:	bl	105f0 <ferror@plt>
   108c4:	mov	r5, r0
   108c8:	mov	r0, r4
   108cc:	bl	10674 <fclose@plt>
   108d0:	cmn	r5, r0
   108d4:	mov	r5, #0
   108d8:	beq	10910 <abort@plt+0x284>
   108dc:	movw	r0, #8280	; 0x2058
   108e0:	movt	r0, #2
   108e4:	ldr	r4, [r0]
   108e8:	bl	10644 <__errno_location@plt>
   108ec:	ldr	r0, [r0]
   108f0:	bl	10620 <strerror@plt>
   108f4:	mov	r3, r0
   108f8:	mov	r5, #1
   108fc:	movw	r2, #3688	; 0xe68
   10900:	movt	r2, #1
   10904:	mov	r0, r4
   10908:	mov	r1, #1
   1090c:	bl	10668 <__fprintf_chk@plt>
   10910:	mov	r0, r5
   10914:	sub	sp, fp, #28
   10918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1091c:	push	{fp, lr}
   10920:	mov	fp, sp
   10924:	bl	10608 <malloc@plt>
   10928:	cmp	r0, #0
   1092c:	popne	{fp, pc}
   10930:	movw	r0, #8280	; 0x2058
   10934:	movt	r0, #2
   10938:	ldr	r0, [r0]
   1093c:	movw	r2, #3705	; 0xe79
   10940:	movt	r2, #1
   10944:	mov	r1, #1
   10948:	bl	10668 <__fprintf_chk@plt>
   1094c:	mov	r0, #1
   10950:	bl	10638 <exit@plt>
   10954:	push	{r4, r5, r6, r7, fp, lr}
   10958:	add	fp, sp, #16
   1095c:	mov	r4, r1
   10960:	mov	r5, r0
   10964:	str	r1, [r0]
   10968:	mvn	r0, #0
   1096c:	mvn	r1, #0
   10970:	mov	r2, r4
   10974:	mov	r3, #0
   10978:	bl	10c4c <abort@plt+0x5c0>
   1097c:	mov	r6, r0
   10980:	mov	r7, r1
   10984:	mov	r0, r4
   10988:	mov	r1, #0
   1098c:	bl	10b04 <abort@plt+0x478>
   10990:	add	r2, r5, #8
   10994:	stm	r2, {r0, r1, r6, r7}
   10998:	pop	{r4, r5, r6, r7, fp, pc}
   1099c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   109a0:	add	fp, sp, #24
   109a4:	mov	r5, r1
   109a8:	mov	r8, r0
   109ac:	movw	r0, #3732	; 0xe94
   109b0:	movt	r0, #1
   109b4:	bl	105fc <puts@plt>
   109b8:	movw	r1, #3769	; 0xeb9
   109bc:	movt	r1, #1
   109c0:	mov	r0, #1
   109c4:	mov	r2, #64	; 0x40
   109c8:	bl	1065c <__printf_chk@plt>
   109cc:	cmp	r5, #0
   109d0:	beq	10a70 <abort@plt+0x3e4>
   109d4:	add	r4, r8, #192	; 0xc0
   109d8:	mov	r0, #2
   109dc:	mov	r6, #0
   109e0:	movw	r9, #3796	; 0xed4
   109e4:	movt	r9, #1
   109e8:	movw	r7, #3812	; 0xee4
   109ec:	movt	r7, #1
   109f0:	b	10a40 <abort@plt+0x3b4>
   109f4:	ldr	r1, [r4, #-192]	; 0xffffff40
   109f8:	sub	r2, r1, r0
   109fc:	mov	r0, #1
   10a00:	mov	r1, r9
   10a04:	bl	1065c <__printf_chk@plt>
   10a08:	ldrd	r0, [r4, #-184]	; 0xffffff48
   10a0c:	mov	r2, #0
   10a10:	mov	r3, #64	; 0x40
   10a14:	bl	10b68 <abort@plt+0x4dc>
   10a18:	ldr	r2, [r4, #-192]	; 0xffffff40
   10a1c:	mov	r0, #1
   10a20:	mov	r1, r7
   10a24:	bl	1065c <__printf_chk@plt>
   10a28:	add	r1, r4, #24
   10a2c:	add	r6, r6, #1
   10a30:	ldr	r0, [r4, #-192]	; 0xffffff40
   10a34:	cmp	r5, r6
   10a38:	mov	r4, r1
   10a3c:	beq	10a68 <abort@plt+0x3dc>
   10a40:	add	r1, r6, #8
   10a44:	mov	r3, #255	; 0xff
   10a48:	cmp	r1, r5
   10a4c:	bcs	109f4 <abort@plt+0x368>
   10a50:	ldr	r1, [r4, #-192]	; 0xffffff40
   10a54:	ldr	r2, [r4]
   10a58:	sub	r3, r2, r1
   10a5c:	cmp	r3, #256	; 0x100
   10a60:	bcc	109f4 <abort@plt+0x368>
   10a64:	bl	1068c <abort@plt>
   10a68:	add	r5, r0, #2
   10a6c:	b	10a74 <abort@plt+0x3e8>
   10a70:	mov	r5, #4
   10a74:	movw	r1, #3837	; 0xefd
   10a78:	movt	r1, #1
   10a7c:	mov	r0, #1
   10a80:	bl	1065c <__printf_chk@plt>
   10a84:	ldr	r0, [r8]
   10a88:	mul	r0, r0, r0
   10a8c:	cmp	r0, r5
   10a90:	bhi	10aec <abort@plt+0x460>
   10a94:	add	r0, r8, #24
   10a98:	mov	r1, r0
   10a9c:	sub	r7, r1, #16
   10aa0:	ldm	r7, {r2, r3, r7}
   10aa4:	ldr	r6, [r1, #-4]
   10aa8:	umull	r2, r4, r2, r5
   10aac:	mla	r3, r3, r5, r4
   10ab0:	subs	r2, r7, r2
   10ab4:	sbcs	r2, r6, r3
   10ab8:	bcs	10ad0 <abort@plt+0x444>
   10abc:	ldr	r2, [r1], #24
   10ac0:	mul	r2, r2, r2
   10ac4:	cmp	r2, r5
   10ac8:	bls	10a9c <abort@plt+0x410>
   10acc:	b	10aec <abort@plt+0x460>
   10ad0:	add	r5, r5, #2
   10ad4:	ldr	r1, [r8]
   10ad8:	mul	r1, r1, r1
   10adc:	cmp	r1, r5
   10ae0:	bhi	10aec <abort@plt+0x460>
   10ae4:	mov	r1, r0
   10ae8:	b	10a9c <abort@plt+0x410>
   10aec:	movw	r1, #3866	; 0xf1a
   10af0:	movt	r1, #1
   10af4:	mov	r0, #1
   10af8:	mov	r2, r5
   10afc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   10b00:	b	1065c <__printf_chk@plt>
   10b04:	push	{r4, r5, fp, lr}
   10b08:	add	fp, sp, #8
   10b0c:	mov	r2, #28
   10b10:	and	r2, r2, r0, lsl #1
   10b14:	movw	r3, #32177	; 0x7db1
   10b18:	movt	r3, #62777	; 0xf539
   10b1c:	lsr	ip, r3, r2
   10b20:	mov	lr, #0
   10b24:	mov	r4, lr
   10b28:	mov	r3, ip
   10b2c:	umull	ip, r2, ip, r0
   10b30:	mla	r2, r3, r1, r2
   10b34:	mla	lr, lr, r0, r2
   10b38:	rsbs	r2, ip, #2
   10b3c:	rsc	lr, lr, #0
   10b40:	umull	ip, r5, r3, r2
   10b44:	mla	r5, r3, lr, r5
   10b48:	mla	lr, r4, r2, r5
   10b4c:	eor	r2, lr, r4
   10b50:	eor	r5, ip, r3
   10b54:	orrs	r2, r5, r2
   10b58:	bne	10b24 <abort@plt+0x498>
   10b5c:	mov	r0, r3
   10b60:	mov	r1, r4
   10b64:	pop	{r4, r5, fp, pc}
   10b68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10b6c:	add	fp, sp, #24
   10b70:	mov	r5, r3
   10b74:	mov	r6, r2
   10b78:	bic	r4, r0, #-268435456	; 0xf0000000
   10b7c:	eor	r2, r4, r0
   10b80:	orrs	r2, r2, r1
   10b84:	bne	10bb0 <abort@plt+0x524>
   10b88:	cmp	r6, #0
   10b8c:	beq	10c30 <abort@plt+0x5a4>
   10b90:	movw	r1, #3914	; 0xf4a
   10b94:	movt	r1, #1
   10b98:	mov	r0, #1
   10b9c:	bl	1065c <__printf_chk@plt>
   10ba0:	sub	r0, r5, #1
   10ba4:	and	r0, r0, #3
   10ba8:	add	r2, r0, #1
   10bac:	b	10c34 <abort@plt+0x5a8>
   10bb0:	lsr	r0, r0, #28
   10bb4:	orr	r7, r0, r1, lsl #4
   10bb8:	lsr	r8, r1, #28
   10bbc:	cmp	r1, #16777216	; 0x1000000
   10bc0:	bcc	10c08 <abort@plt+0x57c>
   10bc4:	movw	r1, #3810	; 0xee2
   10bc8:	movt	r1, #1
   10bcc:	mov	r0, #1
   10bd0:	bl	1065c <__printf_chk@plt>
   10bd4:	add	r2, r6, #1
   10bd8:	mov	r0, r7
   10bdc:	mov	r1, r8
   10be0:	mov	r3, r5
   10be4:	bl	10b68 <abort@plt+0x4dc>
   10be8:	add	r2, r6, #3
   10bec:	movw	r1, #3898	; 0xf3a
   10bf0:	movt	r1, #1
   10bf4:	movw	r3, #3836	; 0xefc
   10bf8:	movt	r3, #1
   10bfc:	mov	r0, #1
   10c00:	bl	1065c <__printf_chk@plt>
   10c04:	b	10c1c <abort@plt+0x590>
   10c08:	add	r2, r6, #1
   10c0c:	mov	r0, r7
   10c10:	mov	r1, r8
   10c14:	mov	r3, r5
   10c18:	bl	10b68 <abort@plt+0x4dc>
   10c1c:	movw	r1, #3904	; 0xf40
   10c20:	movt	r1, #1
   10c24:	mov	r0, #1
   10c28:	mov	r2, #28
   10c2c:	bl	1065c <__printf_chk@plt>
   10c30:	mov	r2, #7
   10c34:	movw	r1, #3927	; 0xf57
   10c38:	movt	r1, #1
   10c3c:	mov	r0, #1
   10c40:	mov	r3, r4
   10c44:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10c48:	b	1065c <__printf_chk@plt>
   10c4c:	cmp	r3, #0
   10c50:	cmpeq	r2, #0
   10c54:	bne	10c6c <abort@plt+0x5e0>
   10c58:	cmp	r1, #0
   10c5c:	cmpeq	r0, #0
   10c60:	mvnne	r1, #0
   10c64:	mvnne	r0, #0
   10c68:	b	10c88 <abort@plt+0x5fc>
   10c6c:	sub	sp, sp, #8
   10c70:	push	{sp, lr}
   10c74:	bl	10c98 <abort@plt+0x60c>
   10c78:	ldr	lr, [sp, #4]
   10c7c:	add	sp, sp, #8
   10c80:	pop	{r2, r3}
   10c84:	bx	lr
   10c88:	push	{r1, lr}
   10c8c:	mov	r0, #8
   10c90:	bl	105d8 <raise@plt>
   10c94:	pop	{r1, pc}
   10c98:	cmp	r1, r3
   10c9c:	cmpeq	r0, r2
   10ca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ca4:	mov	r4, r0
   10ca8:	movcc	r0, #0
   10cac:	mov	r5, r1
   10cb0:	ldr	lr, [sp, #36]	; 0x24
   10cb4:	movcc	r1, r0
   10cb8:	bcc	10db4 <abort@plt+0x728>
   10cbc:	cmp	r3, #0
   10cc0:	clzeq	ip, r2
   10cc4:	clzne	ip, r3
   10cc8:	addeq	ip, ip, #32
   10ccc:	cmp	r5, #0
   10cd0:	clzeq	r1, r4
   10cd4:	addeq	r1, r1, #32
   10cd8:	clzne	r1, r5
   10cdc:	sub	ip, ip, r1
   10ce0:	sub	sl, ip, #32
   10ce4:	lsl	r9, r3, ip
   10ce8:	rsb	fp, ip, #32
   10cec:	orr	r9, r9, r2, lsl sl
   10cf0:	orr	r9, r9, r2, lsr fp
   10cf4:	lsl	r8, r2, ip
   10cf8:	cmp	r5, r9
   10cfc:	cmpeq	r4, r8
   10d00:	movcc	r0, #0
   10d04:	movcc	r1, r0
   10d08:	bcc	10d24 <abort@plt+0x698>
   10d0c:	mov	r0, #1
   10d10:	subs	r4, r4, r8
   10d14:	lsl	r1, r0, sl
   10d18:	orr	r1, r1, r0, lsr fp
   10d1c:	lsl	r0, r0, ip
   10d20:	sbc	r5, r5, r9
   10d24:	cmp	ip, #0
   10d28:	beq	10db4 <abort@plt+0x728>
   10d2c:	lsr	r6, r8, #1
   10d30:	orr	r6, r6, r9, lsl #31
   10d34:	lsr	r7, r9, #1
   10d38:	mov	r2, ip
   10d3c:	b	10d60 <abort@plt+0x6d4>
   10d40:	subs	r3, r4, r6
   10d44:	sbc	r8, r5, r7
   10d48:	adds	r3, r3, r3
   10d4c:	adc	r8, r8, r8
   10d50:	adds	r4, r3, #1
   10d54:	adc	r5, r8, #0
   10d58:	subs	r2, r2, #1
   10d5c:	beq	10d7c <abort@plt+0x6f0>
   10d60:	cmp	r5, r7
   10d64:	cmpeq	r4, r6
   10d68:	bcs	10d40 <abort@plt+0x6b4>
   10d6c:	adds	r4, r4, r4
   10d70:	adc	r5, r5, r5
   10d74:	subs	r2, r2, #1
   10d78:	bne	10d60 <abort@plt+0x6d4>
   10d7c:	lsr	r3, r4, ip
   10d80:	orr	r3, r3, r5, lsl fp
   10d84:	lsr	r2, r5, ip
   10d88:	orr	r3, r3, r5, lsr sl
   10d8c:	adds	r0, r0, r4
   10d90:	mov	r4, r3
   10d94:	lsl	r3, r2, ip
   10d98:	orr	r3, r3, r4, lsl sl
   10d9c:	lsl	ip, r4, ip
   10da0:	orr	r3, r3, r4, lsr fp
   10da4:	adc	r1, r1, r5
   10da8:	subs	r0, r0, ip
   10dac:	mov	r5, r2
   10db0:	sbc	r1, r1, r3
   10db4:	cmp	lr, #0
   10db8:	strdne	r4, [lr]
   10dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10dc4:	mov	r7, r0
   10dc8:	ldr	r6, [pc, #72]	; 10e18 <abort@plt+0x78c>
   10dcc:	ldr	r5, [pc, #72]	; 10e1c <abort@plt+0x790>
   10dd0:	add	r6, pc, r6
   10dd4:	add	r5, pc, r5
   10dd8:	sub	r6, r6, r5
   10ddc:	mov	r8, r1
   10de0:	mov	r9, r2
   10de4:	bl	105b8 <raise@plt-0x20>
   10de8:	asrs	r6, r6, #2
   10dec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10df0:	mov	r4, #0
   10df4:	add	r4, r4, #1
   10df8:	ldr	r3, [r5], #4
   10dfc:	mov	r2, r9
   10e00:	mov	r1, r8
   10e04:	mov	r0, r7
   10e08:	blx	r3
   10e0c:	cmp	r6, r4
   10e10:	bne	10df4 <abort@plt+0x768>
   10e14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e18:	andeq	r1, r1, r4, lsr r1
   10e1c:	andeq	r1, r1, ip, lsr #2
   10e20:	bx	lr

Disassembly of section .fini:

00010e24 <.fini>:
   10e24:	push	{r3, lr}
   10e28:	pop	{r3, pc}
